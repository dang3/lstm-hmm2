and
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
sbb
add
jl
sbb
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
cmp
inc
add
rorl
push
and
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
or
inc
add
lea
push
mov
mov
jno
inc
add
mov
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
jb
inc
add
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
testb
xor
push
and
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
and
pop
or
fisttpll
jmp
xor
idivl
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
and
test
pop
je
mov
pushl
lea
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
sbb
add
add
inc
and
add
add
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
mov
inc
add
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
or
adc
lds
or
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
add
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
add
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
sub
inc
add
push
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
dec
daa
inc
add
out
je
add
or
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
and
cwtl
shl
mov
add
add
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
inc
add
push
movsb
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
add
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
movzbl
jmp
mov
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
inc
add
adc
test
mov
lds
jno
mov
push
call
pop
jmp
mov
call
push
pop
ret
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
andl
mov
lea
push
pushl
push
call
cmpl
je
mov
leave
ret
mov
test
je
mov
lea
push
pushl
push
call
jmp
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
jne
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
and
push
test
push
push
push
je
mov
mov
mov
xor
cmp
jne
cmpl
je
test
mov
je
mov
mov
call
test
je
mov
test
jne
cmp
jne
push
pushl
push
call
mov
mov
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
xor
cmp
je
mov
cmpb
je
add
cmp
jne
test
jne
pop
pop
mov
pop
ret
push
mov
push
mov
test
je
push
mov
mov
mov
call
test
js
mov
andl
push
mov
lea
call
mov
mov
push
call
test
mov
je
mov
push
call
lea
call
xor
pop
pop
pop
ret
push
mov
and
sub
cmpb
push
push
push
jne
xor
cmp
je
mov
mov
lea
call
mov
cmp
movb
je
cmpb
jne
mov
pushl
mov
mov
mov
lea
mov
mov
call
mov
cmp
jne
lea
push
mov
call
inc
add
mov
mov
call
cmp
jne
incw
lea
push
pushl
call
mov
mov
mov
cmpw
jne
mov
call
decw
lea
call
xor
cmpb
jne
cmp
je
mov
call
cmp
je
cmp
mov
mov
jne
mov
mov
cmp
je
add
mov
incl
incl
mov
mov
mov
call
xor
cmp
je
incl
incw
push
push
pushl
push
mov
call
cmpb
jne
mov
cmpw
jne
mov
call
decw
cmpb
jne
decl
call
cmpb
jne
mov
mov
pushl
xor
call
cmpb
jne
lea
push
call
mov
call
pushl
call
lea
call
cmpb
jne
mov
andl
push
push
push
mov
mov
push
mov
call
cmpb
je
mov
testw
jne
lea
push
lea
mov
movb
movl
movl
mov
mov
call
cmp
je
mov
cmp
je
mov
lea
push
push
push
call
test
jns
movl
mov
mov
push
pushl
push
push
push
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
call
jmp
incl
jmp
push
mov
and
pushl
mov
pushl
mov
push
push
pushl
call
add
pop
ret
pushl
lea
pushl
call
test
jne
xor
ret
pushl
mov
mov
call
test
je
jmp
cmpb
push
je
cmpl
mov
je
incl
incl
push
push
mov
mov
mov
mov
pushl
mov
pushl
call
cmpb
jne
decl
call
pop
ret
xor
cmp
setne
ret
int3
int3
int3
push
push
push
mov
test
je
mov
nop
mov
mov
test
jne
mov
test
jne
pop
pop
xor
pop
ret
mov
test
je
mov
call
test
je
push
mov
mov
call
jmp
mov
call
test
jne
jmp
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
pop
ret
mov
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
ret
push
mov
push
push
push
mov
mov
test
push
mov
je
mov
lea
push
pushl
push
call
test
jne
mov
pop
pop
leave
ret
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
call
add
lea
mov
xor
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
mov
lea
lea
lea
mov
mov
push
lea
lea
push
movl
movl
mov
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
call
mov
test
mov
mov
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
test
jne
test
jne
mov
test
jne
pop
add
jne
cmp
je
mov
mov
push
mov
call
mov
mov
mov
push
push
mov
mov
add
push
lea
movl
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
mov
mov
add
call
test
js
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
cmp
je
mov
cmp
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmp
je
mov
cmp
jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
add
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
add
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
xor
and
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
push
push
call
mov
clc
lret
mov
pop
add
push
add
repnz
pop
out
add
push
cltd
out
add
add
mov
pop
xchg
addb
push
pop
add
repnz
enter
enter
add
pop
cmc
data16
int
add
add
lret
jo
jle
add
add
add
add
add
add
in
add
push
push
lea
push
push
lea
push
push
push
push
push
push
push
call
mov
lret
add
popa
rclb
fcmovnbe
out
add
add
add
les
add
mov
scas
add
add
add
fwait
jno
fnsave
imul
pop
popl
push
lea
push
lea
push
lea
push
call
add
cmpsl
addb
mov
cld
pusha
addb
lcall
rcrl
incb
out
add
jae
mov
add
jp
jno
add
push
add
add
repnz
cmpsl
imul
jle
add
push
add
into
add
lret
mov
lea
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
mov
add
mov
out
add
icebp
add
shlb
add
std
pop
add
in
loope
pop
loopne
lret
add
add
movsb
flds
add
pop
add
add
lret
add
push
lret
fstpt
popa
sub
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
fsubrl
jecxz
add
lods
lods
xchg
test
add
bound
int
pop
subl
ja
fwait
jl
push
add
xchg
add
lret
mov
mov
int3
push
add
pop
push
push
push
push
lea
push
push
call
add
add
add
add
add
sti
add
add
mov
mov
or
or
lods
xchg
push
scas
xchg
add
add
add
les
xchg
jno
add
in
idivl
cmpsl
mov
lea
pop
call
push
push
push
push
call
popf
add
jae
add
pop
loop
leave
cld
loope
stc
add
jle
shlb
lret
pop
pop
lods
jnp
nop
add
xlat
jp
push
mov
jbe
add
popf
in
sarb
mov
add
add
add
lahf
xchg
popa
add
iret
mov
lea
pop
call
push
push
push
push
push
push
push
push
call
pop
mov
imul
mov
mov
add
ljmp
mov
mov
pusha
push
cwtl
xchg
mov
add
pop
mov
out
add
add
icebp
jmp
mov
rolb
in
add
add
pop
push
call
push
push
push
push
push
lea
push
push
push
call
mov
add
add
mov
mov
add
pop
iret
jnp
pop
iret
xchg
jns
repnz
mov
add
sahf
add
fwait
add
roll
pop
add
mov
add
js
add
fwait
cli
outsl
test
add
add
fdivl
loope
xchg
add
mov
hlt
pushf
mov
lea
pop
jmp
push
push
push
push
lea
push
push
push
push
push
push
call
add
xor
out
pop
add
pop
add
add
mov
cmpsb
add
flds
mov
add
clc
lret
add
add
add
mov
xchg
test
add
fs
xchg
popf
shlb
mov
add
push
mov
lea
pop
ret
push
push
lea
push
push
push
call
add
xchg
add
add
mov
fs
add
add
push
xchg
add
add
lcall
pop
mov
cmc
sti
add
add
add
lock
add
add
add
mov
jmp
enter
jp
add
int3
mov
add
add
mov
nop
add
cld
add
out
add
mov
lea
pop
mov
mov
push
push
push
lea
push
lea
push
push
push
call
add
xchg
add
add
mov
jbe
add
push
pushf
test
mov
add
add
mov
fstl
add
test
ficompl
lds
pop
add
add
add
out
add
out
add
mov
add
add
add
add
mov
cwtl
add
test
test
mov
lea
pop
add
push
lea
push
push
push
push
push
push
lea
push
call
add
test
push
mov
cmpsb
add
xchg
add
loop
add
mov
add
aam
stc
lds
ror
roll
loope
pusha
fs
jge
mov
push
add
add
test
jbe
add
pop
add
add
push
push
push
push
push
lea
push
push
call
mov
mov
add
filds
rolb
fisttpll
mov
add
stc
in
push
add
mov
add
pusha
add
add
pop
add
add
xchg
lds
test
movsb
xchg
push
cli
add
add
fsubl
les
lock
rcr
xchg
in
add
pop
mov
xor
push
push
sub
add
push
push
pop
add
not
dec
sub
add
add
shr
pop
not
add
dec
lea
pop
push
push
push
push
push
push
lea
push
call
add
hlt
add
lahf
scas
add
add
loop
jo
out
mov
add
jnp
add
aad
pushf
add
jb
pop
add
add
add
mov
push
add
imul
mov
add
add
add
shrl
add
pop
add
iret
add
mov
add
add
add
mov
movsb
mov
les
jne
call
push
lea
push
push
push
lea
push
push
push
call
xchg
hlt
mov
je
std
std
filds
add
add
add
mov
add
stos
jne
fildl
int
loope
cmpsb
add
fsts
movb
orb
xlat
cltd
xchg
add
add
add
shrl
add
cmpsl
cltd
add
mov
fwait
out
enter
add
push
push
filds
add
add
jns
push
aam
bound
mov
push
push
push
push
push
call
add
xchg
pop
loope
mov
add
jo
mov
popa
push
add
add
movl
add
add
jge
add
push
shll
into
xchg
xchg
out
rcr
add
pop
push
add
add
jge
xchg
lret
mov
scas
fiaddl
add
xchg
add
jb
add
add
leave
pop
add
pop
add
jno
mov
adc
movl
push
lea
push
call
jge
loop
push
mov
movsl
sarl
fs
ficoml
mov
js
test
js
in
jno
jmp
push
add
jl
xorb
xchg
add
in
add
mov
jmp
lret
je
repnz
add
add
addb
popa
mov
add
ficoml
fwait
jne
add
bound
shl
cwtl
mov
lea
pop
lea
push
push
push
call
in
add
add
jmp
jecxz
add
repnz
xchg
jle
add
push
mov
imul
rcrb
pop
cwtl
imul
mov
lea
pop
push
push
push
push
push
lea
push
call
mov
gs
add
add
add
insb
fnstcw
add
test
mov
enter
hlt
scas
movl
in
js
mov
mov
add
mov
sti
stc
test
pop
stc
add
in
add
jge
jecxz
test
mov
lea
pop
pushl
pushl
push
lea
push
push
push
lea
push
call
add
arpl
add
cmpsb
clc
jno
mov
add
mov
add
cli
jo
jne
add
pushf
shrb
add
mov
xchg
mov
add
add
cmpb
add
mov
push
out
ljmp
push
xchg
out
add
cld
arpl
call
stc
xchg
cld
lea
pop
call
push
push
push
lea
push
push
push
push
lea
push
call
faddl
ffree
add
add
xchg
add
fs
sahf
add
add
add
lock
addr16
add
add
jmp
in
mov
add
add
adcb
neg
xchg
add
out
pusha
cmpsb
add
add
push
scas
push
add
add
add
cld
lea
pop
pushl
push
push
push
lea
push
push
push
push
push
push
push
call
mov
scas
add
imul
enter
jp
add
add
loope
add
les
rclb
repnz
data16
mov
popf
add
pop
icebp
add
add
testl
mov
add
add
add
idivb
add
mov
lea
pop
pushl
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
jne
add
add
add
add
test
push
cwtl
rolb
lret
mov
add
loope
xchg
stc
add
pop
pop
and
jno
add
add
push
leave
mov
mov
add
pushf
iret
fisubl
jmp
lea
pop
call
push
push
ror
add
sub
sub
push
sub
add
dec
sub
shl
pop
lea
ror
add
pop
push
push
lea
push
push
push
push
push
push
call
add
add
add
pop
add
lods
add
mov
roll
pop
add
add
add
data16
loopne
pop
movb
pop
add
push
add
jmp
mov
lea
pop
pushl
push
push
push
push
push
push
lea
push
call
cmp
add
mov
js
add
mov
jmp
popa
add
add
push
add
add
mov
add
mov
xchg
popf
cmpsl
shr
xchg
fldl
pusha
pop
add
add
leave
push
push
add
add
add
add
pop
pop
add
adc
mov
mov
fildl
xchg
mov
loopne
add
pop
call
push
push
push
push
push
push
push
push
push
call
je
add
adcb
addb
addr16
mov
stos
add
add
add
movsl
add
add
mov
sti
add
jnp
movsl
test
add
push
test
jno
add
pop
push
push
push
rol
dec
add
sub
push
or
inc
add
xor
add
not
sub
ror
inc
add
add
pop
dec
add
pop
push
lea
push
push
push
push
push
call
add
lds
loope
add
in
roll
fucomi
jge
add
sahf
call
add
add
out
outsl
pop
jge
lea
add
ror
outsl
xchg
aam
add
add
into
mov
ficoml
add
add
popf
add
add
out
out
popf
mov
out
add
xchg
mov
lea
pop
push
push
push
push
push
push
lea
push
push
push
push
call
push
push
sbb
jnp
jge
add
jbe
jl
orb
add
add
jne
add
add
stos
mov
add
push
add
mov
add
fstps
add
jne
add
add
add
stc
xchg
into
add
insb
push
rclb
hlt
fwait
add
pop
push
call
push
push
push
push
push
lea
push
lea
push
push
push
call
mov
in
roll
jge
lods
add
add
add
in
xchg
call
mov
scas
jns
add
leave
lods
pushf
add
xorl
iret
add
add
add
fcmovnu
add
enter
add
hlt
lea
pop
mov
push
push
push
push
lea
push
push
push
call
xchg
add
add
add
add
std
push
push
push
add
add
add
stos
cld
mov
xchg
push
jae
add
add
pop
add
add
add
pop
push
push
push
push
push
lea
push
push
call
lods
add
add
mov
add
test
rcrb
xchg
mov
add
add
jmp
add
push
jnp
pusha
pop
pop
leave
cmpsb
add
add
jmp
add
add
add
mov
hlt
lea
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
in
jecxz
jmp
push
out
aad
fmul
add
add
je
frstor
add
adcl
out
add
add
add
int3
jmp
add
add
test
add
aam
les
repnz
cltd
pop
mov
push
push
push
lea
push
push
call
jle
mov
loopw
std
cmpsl
add
lret
add
fadds
mov
mov
cmpsb
in
add
bound
mov
fadds
add
iret
add
add
iret
add
ret
pop
in
xchg
aad
jns
add
add
xchg
js
jp
add
stos
add
loop
mov
lea
pop
add
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
pop
pop
test
add
mov
add
add
add
cltd
leave
xchg
add
add
add
bound
scas
xchg
add
cmpsl
xchg
mov
lea
pop
add
add
push
push
push
push
lea
push
lea
push
call
rolb
lret
add
add
lea
jnp
arpl
mov
add
add
add
test
movsl
xchg
mov
mov
scas
mov
add
mov
xchg
pop
add
add
add
add
mov
lea
pop
mov
xor
push
push
push
push
push
call
fsub
pop
add
add
pop
add
add
xchg
pop
rcll
mov
push
add
add
mov
add
add
pop
sti
lods
popf
xchg
add
add
add
jge
mov
add
add
jnp
add
pop
add
push
lea
push
push
call
push
nop
hlt
bound
in
mov
add
mov
push
pop
mov
add
orb
cmc
jns
add
ret
jnp
faddl
xchg
add
into
shll
lret
popl
aam
out
add
stos
vpsubw
add
add
add
add
add
add
int3
aam
test
mov
je
aam
bound
push
push
lea
push
push
push
lea
push
lea
push
call
add
push
add
repnz
add
enter
fisubl
xchg
mov
jb
cwtl
movl
loope
out
int
mov
add
jecxz
adcb
shrb
mov
lea
pop
mov
xor
push
push
lea
push
lea
push
push
push
push
call
add
mov
mov
std
lret
idiv
mov
into
mov
add
mov
popa
sahf
add
into
mov
add
add
fwait
mov
add
fistl
add
add
add
lret
mov
add
add
mov
data16
pop
mov
add
repnz
add
add
aad
cld
lea
pop
add
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
fucom
stos
xchg
cmpsl
add
in
xchg
jo
call
fidivs
popa
addr16
xchg
add
jbe
mov
aad
add
push
add
movl
rclb
cltd
lock
lea
pop
pop
mov
xor
push
lea
push
push
call
pop
add
add
pop
add
leave
add
addl
add
mov
jp
push
add
fwait
test
pop
xchg
pushf
pusha
add
addb
mov
add
sti
bound
sarb
pop
add
pop
enter
mov
gs
lds
xchg
imul
push
in
hlt
xchg
jl
imul
add
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
xchg
lahf
add
add
add
cmpb
add
add
add
jo
add
add
addl
add
cltd
sar
enter
popa
add
pop
mov
push
push
push
push
push
call
mov
add
pop
out
jge
loopne
push
add
pop
add
add
add
jae
rorl
add
mov
push
mov
add
add
add
in
stos
push
jp
add
push
mov
call
add
add
outsl
add
cwtl
aad
arpl
add
pop
mov
lea
pop
xor
push
push
push
call
mov
in
add
test
add
lahf
jecxz
mov
imul
push
add
add
add
les
add
jo
mov
pop
aad
addr16
add
add
cltd
mov
add
add
pop
add
add
mov
movb
mov
cmpsb
pop
mov
lea
pop
add
push
push
call
cmc
add
pop
add
outsl
cmc
add
add
add
test
add
push
xchg
add
xchg
andl
int
adcb
add
add
mov
add
add
add
add
add
jno
add
jae
out
add
test
test
add
pop
sub
push
lea
push
push
push
push
call
lds
lcall
add
fwait
xchg
ficompl
add
add
mov
lods
add
mov
add
add
push
in
add
shrl
mov
ret
add
addb
cmpsb
lret
jle
add
jno
leave
push
mov
incb
loope
mov
lea
pop
pop
push
push
lea
push
lea
push
push
push
push
push
call
out
cmpsl
mov
mov
aam
add
push
add
idivb
sti
out
out
sti
popf
scas
cmpb
scas
clc
lret
cmpl
leave
add
xchg
movb
add
jns
add
test
fs
enter
add
add
push
add
add
xchg
add
in
xchg
out
in
add
fstpl
int3
lea
pop
rep
push
dec
pop
pop
push
add
pop
mov
add
push
ror
pop
add
add
push
push
lea
push
push
push
call
add
movb
mov
add
roll
mov
pop
bound
add
lods
pop
jp
movsl
in
add
sarb
test
push
add
cltd
pop
jo
jae
insb
data16
enter
out
jmp
lret
add
imul
push
mov
lea
pop
mov
push
push
lea
push
call
add
xchg
aam
pushf
insb
jp
add
arpl
add
push
add
add
add
repnz
scas
add
rolb
aam
rcll
jecxz
fiaddl
jno
mov
mov
push
jl
fmull
add
push
lea
push
push
push
push
push
lea
push
push
call
mov
jo
mov
push
out
add
jle
add
test
add
add
mov
add
add
add
push
iret
add
add
mov
and
les
add
push
lea
push
lea
push
push
push
call
add
cmpsb
add
popa
stos
mov
add
lods
shl
add
jge
popf
fistl
scas
mov
pop
add
add
add
add
mov
sti
add
add
jnp
leave
add
mov
lods
icebp
add
add
add
add
add
imul
add
add
xorb
mull
add
add
lea
pop
mov
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
add
xchg
jnp
mov
add
std
jns
leave
lret
int3
test
pop
test
add
add
jne
jnp
add
into
movb
sahf
add
ljmp
outsl
mov
jecxz
add
add
mov
mul
add
pop
xor
push
lea
push
push
push
lea
push
call
add
roll
cmpsb
xchg
sarl
add
filds
mov
jae
je
mov
add
mov
test
stos
add
rorl
add
xchg
int
rorl
pop
add
push
push
push
push
push
push
push
push
call
xchg
lea
add
add
jns
cli
add
lret
out
mov
add
add
int3
in
add
xchg
add
mov
mov
add
jno
sarb
add
push
add
gs
add
fldl
jne
add
mov
push
add
add
test
mov
add
addr16
lret
add
lock
push
movsl
gs
push
mov
lea
pop
mov
xor
push
xor
pop
add
add
push
shl
sub
pop
mov
push
push
add
shr
shr
push
push
pop
add
sub
inc
sub
pop
add
shr
rol
pop
push
rol
pop
pushl
call
push
push
push
lea
push
push
push
push
push
push
call
add
add
call
jo
movsl
movsb
in
xchg
nop
lods
add
add
add
jns
enter
cmpsb
add
gs
in
outsl
lret
add
rcr
add
repnz
roll
add
mov
roll
jae
mov
ljmp
add
mov
add
mov
lea
pop
push
push
push
inc
xor
add
push
xor
add
sub
shl
shr
shr
sub
inc
shr
rol
pop
not
shr
pop
push
ror
pop
push
push
ror
add
not
xor
pop
push
push
lea
push
push
push
call
andl
mov
jbe
add
add
add
xchg
mov
jecxz
add
mov
add
mov
enter
mov
stos
mov
add
imul
cmc
add
jle
scas
push
jae
addr16
roll
roll
fwait
jecxz
add
in
add
adc
rorb
xchg
mov
call
xchg
movb
push
add
add
lcall
add
add
add
add
jb
je
add
mov
addb
ror
data16
add
xchg
add
leave
in
cmpsl
add
add
add
mov
in
add
int3
lea
pop
push
push
lea
push
push
push
call
jp
movsb
testl
pop
pop
add
icebp
hlt
add
out
xchg
cld
into
add
add
xorb
pop
add
pop
add
mov
add
int
push
jo
nop
add
xchg
jge
test
push
add
rcrb
pusha
adc
push
rol
sub
pop
mov
push
pop
add
add
push
inc
pop
add
mov
xor
push
shr
inc
shl
pop
add
push
push
push
push
push
lea
push
push
push
call
mov
mov
loopne
mov
push
ret
rcrl
add
add
sarb
add
leave
add
neg
add
jnp
add
add
lret
add
add
add
fildl
pop
ffree
push
xchg
rolb
movl
hlt
rcr
add
loopne
add
add
mov
fbstp
lcall
mov
add
pop
mov
xor
push
push
call
push
jns
jmp
add
out
add
jge
xchg
orl
add
cli
jmp
stc
in
pop
jae
mov
into
add
mov
scas
test
add
add
add
push
add
mov
mov
lea
pop
add
push
shl
sub
pop
pop
push
lea
push
push
lea
push
push
call
add
lea
add
out
jmp
xchg
add
in
fsubr
xchg
je
add
jmp
lcall
lret
add
lea
add
add
insb
add
nop
mov
add
add
aad
fwait
pop
add
pop
mov
push
push
push
call
add
mov
mov
pop
jbe
push
cmpsl
jmp
clc
lret
mov
add
hlt
jecxz
add
cld
imul
push
add
mov
pop
subl
lock
aad
pop
stos
in
jecxz
add
lea
pop
xor
push
lea
push
lea
push
lea
push
push
lea
push
push
call
insb
repnz
shlb
add
add
mul
cmpsl
mov
add
jb
xchg
fcompl
add
rcl
add
add
jmp
push
cmc
mov
lea
pop
add
push
lea
push
push
push
push
call
scas
jle
scas
add
arpl
and
andb
rolb
stos
add
lods
mov
pop
add
add
lret
add
iret
add
add
js
add
pop
add
pop
add
add
pop
add
add
add
hlt
lret
bound
in
pop
jl
repnz
add
aad
mov
add
add
pusha
int
std
mov
addl
add
popa
andl
add
pop
rep
push
push
push
push
push
push
lea
push
call
enter
add
addb
mov
leave
add
xchg
mov
stos
out
add
add
frstpm(287
movsb
cld
add
sahf
lods
mov
add
jno
add
jge
lret
shr
add
add
add
pop
mov
popa
add
push
mov
lds
mov
mov
std
roll
mov
sbb
mov
push
push
push
lea
push
call
jp
add
add
pushf
cwtl
cmc
mov
add
scas
lret
add
add
pop
roll
call
in
jno
jmp
add
add
add
add
jecxz
add
lahf
add
iret
cmpl
add
test
mov
add
jbe
addl
add
add
lea
pop
xor
push
push
lea
push
push
push
push
push
call
xchg
push
add
insb
fs
sbbb
outsl
mov
shl
imul
jecxz
add
add
iret
push
add
repnz
scas
jae
ret
add
pusha
add
push
add
pop
add
push
add
pop
or
je
push
lea
xor
xor
pop
mov
xor
push
dec
shl
shl
pop
mov
xor
push
pop
add
push
rol
pop
add
push
rol
inc
pop
push
mov
xor
push
lea
push
push
push
push
push
push
push
push
call
add
pop
add
arpl
add
add
add
add
imul
jp
add
xchg
add
add
scas
add
fs
popf
out
mov
add
add
movsb
add
add
add
push
add
add
test
ja
fxch
mov
lea
pop
add
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
not
sti
icebp
ret
add
add
jmp
movsb
jb
push
testb
out
add
add
nop
push
subl
add
rcrl
loope
add
int
fs
mov
add
jns
add
add
test
mov
mov
bound
pop
pop
push
rol
rol
add
pop
rep
push
dec
xor
pop
mov
xor
push
shl
pop
or
je
mov
push
xor
pop
add
add
push
push
push
push
call
add
add
in
mov
add
mov
push
mov
cmp
add
rcl
add
out
mov
mov
fucomi
pushf
int
stos
push
add
add
add
scas
fistps
add
loop
fwait
push
jne
mov
mov
add
mov
add
cmpsl
out
mov
lea
pop
rep
push
pop
pop
push
push
lea
push
sub
add
add
ror
sub
add
pop
pop
push
push
lea
push
push
lea
push
push
push
push
call
insb
lods
test
cmpsl
add
into
add
pop
insb
add
add
stos
add
test
roll
filds
out
jecxz
add
push
fadds
add
add
jge
add
int
cmpsl
enter
popl
movsl
add
jle
addr16
imul
stos
add
mov
jp
ja
add
add
rolb
cld
lea
pop
pop
mov
push
ror
shr
lea
pop
mov
push
push
lea
push
lea
push
call
cltd
lea
xchg
mov
add
add
icebp
add
xchg
mov
icebp
mov
pop
lea
add
mov
add
fiaddl
add
add
std
loope
jp
xlat
add
add
xchg
mov
out
bound
xchg
mov
adc
inc
and
push
lea
push
lea
push
push
push
push
lea
push
call
lret
add
xchg
add
ljmp
add
pop
in
imul
add
rclb
cltd
xchg
bound
add
fbld
mov
movsl
roll
orb
enter
cmpb
lea
pop
jmp
push
push
sub
ror
pop
mov
push
inc
ror
shl
pop
add
push
lea
push
push
push
call
lahf
fldl
shlb
imul
aam
add
add
add
add
add
loopne
xchg
mov
add
push
stc
ljmp
pop
stc
into
aam
lret
fwait
lcall
fiadds
mov
in
rclb
add
cmpsb
push
pop
ret
jmp
jmp
fcoml
add
pop
push
push
lea
not
shl
add
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
out
add
add
int
in
push
jno
add
cmp
push
lahf
out
add
insb
fcoml
lods
movb
add
ljmp
add
add
add
leave
out
mov
iret
xlat
mov
hlt
mov
lea
pop
push
push
add
pop
push
push
push
push
push
push
push
lea
push
call
aad
add
mov
mov
push
add
cltd
add
mov
push
add
add
lock
adcl
add
add
add
jno
mov
lea
pop
mov
push
shr
add
shl
dec
pop
pop
pop
push
ror
not
pop
pop
pop
push
push
lea
push
lea
push
call
test
add
xchg
les
mov
xchg
fwait
movsl
test
out
push
add
push
sahf
add
test
int3
fs
mov
add
xchg
lcall
add
pop
js
add
sar
movsl
mov
mov
loop
jmp
add
push
frstpm(287
lock
mov
lea
pop
leave
push
lea
push
lea
push
lea
push
push
push
call
mov
add
add
add
add
add
add
sti
add
push
add
rcrl
lcall
jecxz
arpl
mov
add
add
fwait
add
xchg
lahf
add
add
lret
xchg
les
or
push
push
lea
push
lea
push
lea
push
push
push
push
call
lret
mov
add
fldt
add
add
mov
add
mov
lret
cld
sti
fs
push
popl
add
mov
add
int3
rolb
add
arpl
add
sbbb
fwait
addl
scas
idivl
add
mov
add
arpl
pop
push
push
add
pop
mov
add
push
lea
push
lea
push
lea
push
push
push
call
xchg
cmc
cld
add
icebp
mov
add
pop
add
arpl
add
pusha
add
js
into
xlat
xchg
add
mov
add
push
add
mov
add
popa
add
add
faddl
mov
fcoms
jmp
movsl
std
movb
lods
aam
add
addr16
add
fildl
jmp
pusha
sbb
push
push
lea
push
call
test
test
int3
leave
jge
int
sahf
add
xchg
mov
hlt
pop
ja
icebp
add
add
popf
add
jne
jmp
mov
stos
icebp
mov
roll
rolb
xchg
add
lret
add
add
add
mov
add
jno
adc
mov
add
lods
roll
fiaddl
jns
mov
lea
pop
push
push
push
push
lea
push
call
add
add
lea
add
stc
stos
xchg
test
add
mov
bound
add
iret
cmpsb
add
shr
add
add
enter
push
mov
lea
pop
movl
push
push
push
push
lea
push
push
push
push
push
push
call
iret
addb
add
add
xchg
fwait
mov
fldl
jl
mov
jecxz
mov
add
lret
mov
add
add
add
icebp
pop
add
repnz
hlt
pop
pop
add
add
imul
jge
add
andl
push
add
add
lahf
jmp
scas
cli
pop
lret
push
pop
add
fwait
add
int3
lea
pop
addl
test
je
push
add
pop
mov
pop
push
pop
pop
pop
push
push
push
push
lea
push
lea
push
push
push
call
add
add
pop
sti
mov
add
add
aam
filds
add
les
add
addb
add
cmc
mov
add
in
add
movl
in
add
add
add
add
mov
scas
add
mov
arpl
add
mov
pop
add
jge
push
jns
add
addl
add
pop
mov
lea
pop
pop
leave
push
push
push
push
call
lahf
add
add
in
add
add
fnstsw
mov
ja
test
rolb
add
xchg
mov
jb
hlt
jmp
fwait
mov
cli
xchg
add
add
add
add
jge
vcmpps
aad
mov
jl
out
add
pop
cmc
stos
lret
add
jae
add
add
add
add
add
jae
orl
ret
push
push
push
push
lea
push
call
pop
push
shr
add
fldl
mov
add
jle
movsb
pop
add
ficompl
lea
push
xlat
arpl
out
jb
add
xchg
jns
add
stos
mov
push
add
stos
push
outsl
arpl
push
add
add
add
test
fcmovbe
add
int3
add
fistpll
enter
xchg
adc
push
push
sub
sub
pop
mov
push
push
push
push
call
jnp
mov
lahf
add
fiaddl
stc
add
faddl
add
jbe
mov
addb
mov
jmp
mov
add
mov
cld
add
imul
int3
lea
pop
add
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
loopne
add
mov
add
add
add
add
fwait
outsl
push
cmpsb
add
movsl
xor
pop
lahf
push
imul
add
nop
andl
lahf
push
add
addb
push
pop
fildl
les
lret
roll
jne
loopne
stos
push
add
pop
push
push
push
push
push
push
push
push
call
add
add
push
add
add
ret
add
add
push
add
popl
add
add
add
stos
add
roll
add
mov
sar
add
xlat
jne
add
icebp
cld
icebp
jp
add
mov
add
sbb
push
push
xor
xor
pop
push
push
push
inc
pop
testl
addl
push
push
push
lea
push
push
call
mov
add
pop
rolb
repnz
add
add
add
jl
add
add
add
mov
jl
stos
add
mov
mov
jae
mov
lahf
add
add
in
mov
lea
pop
push
push
lea
push
lea
push
push
push
call
shl
add
stc
stc
std
add
addb
xchg
test
add
xchg
je
dec
hlt
pusha
into
fidivl
xchg
mov
mov
mov
push
push
jp
leave
scas
add
lahf
negb
jmp
add
mov
add
test
jp
add
add
add
fbld
add
lods
loope
out
roll
add
add
pop
call
mov
push
ror
lea
shr
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
call
mov
add
iret
jo
add
add
pop
test
xchg
loopne
pop
scas
add
roll
xlat
roll
add
scas
add
aam
jl
mov
mov
popl
mov
loopne
cmpsb
add
add
add
add
stos
test
pop
mov
shlb
add
add
test
add
test
iret
pop
mov
insb
add
iret
add
mov
lea
pop
push
push
lea
push
lea
push
push
push
push
push
call
repnz
add
lcall
add
movsl
add
mov
stc
sarb
rcr
pushf
lret
jne
mov
jp
xchg
add
test
pushf
jp
add
add
lods
jb
je
add
aam
lea
mov
je
push
loope
add
fmull
add
mov
push
aad
mov
negl
mov
push
call
mov
lods
fidivs
pop
jb
lahf
mov
add
icebp
add
add
add
add
stc
lret
addb
add
pop
add
add
scas
rcl
add
mov
mov
add
pop
pop
sti
movsl
add
movb
pop
jl
add
faddl
icebp
cmpsl
add
xlat
mov
add
add
mov
andl
data16
jge
add
test
call
js
repz
pop
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
gs
add
add
add
idivl
and
push
sahf
add
pop
lods
or
lods
movsl
scas
mov
stos
andb
jae
add
aad
insb
fdivrl
cmc
add
fdivrl
add
lcall
add
mov
hlt
add
fstl
mov
lea
pop
pop
push
rol
add
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
in
sahf
mov
mov
jno
mov
xchg
rol
jns
add
pop
push
loop
mov
outsl
ret
add
test
fstpl
add
ret
pop
jb
out
clc
mov
idivl
aad
mov
lea
pop
pop
push
ror
shr
not
pop
leave
ret
push
push
push
push
push
push
push
push
lea
push
push
call
flds
add
arpl
add
pop
mov
add
cmpsb
pop
add
add
sahf
test
add
add
hlt
add
add
lret
scas
add
test
stc
push
jmp
push
fldl
cmc
mov
add
fists
add
pop
out
imul
roll
fidivrl
lcall
stc
mov
lea
pop
push
push
rol
pop
mov
add
push
lea
dec
pop
push
push
xor
add
inc
not
pop
push
push
sub
pop
push
push
push
call
add
fs
in
mov
fldcw
cmc
mov
mov
lret
jb
add
add
add
mov
enter
std
add
xchg
xchg
xchg
fistps
cltd
cwtl
ret
ffree
sahf
into
push
add
add
add
add
cmpsb
add
add
sbb
stc
gs
rol
add
mov
lea
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
fildl
les
shll
aad
loope
outsl
test
mov
arpl
mov
add
mov
lret
xchg
add
cmpb
rolb
mov
add
data16
xchg
add
ja
mov
icebp
out
add
add
mov
add
cli
add
sarb
icebp
xchg
xchg
loopne
int
add
add
lea
pop
movl
push
push
push
push
push
push
push
lea
push
push
call
ror
jmp
stc
enter
add
add
pop
popl
cmpsb
lods
add
push
into
in
mov
pop
add
add
jnp
mov
add
add
aad
xorb
cmpsl
data16
stos
js
jge
sti
mov
in
add
cld
into
fwait
add
add
pop
call
push
shr
add
sub
pop
push
push
push
push
call
add
mov
mov
add
push
add
add
lods
add
pop
add
je
add
jecxz
cmpsb
add
add
add
jnp
mov
scas
add
stc
jle
in
add
add
aam
or
popf
clc
shll
mov
insb
call
arpl
call
push
lea
push
lea
push
call
negb
mov
cmpsb
add
mov
movsl
stos
add
int3
push
add
addb
add
loopne
jo
add
adcb
in
add
data16
pop
decb
add
add
add
fsubl
mov
mov
sahf
jnp
push
cmpsb
addl
add
add
in
gs
lea
pop
subl
cmpl
jne
push
ror
add
pop
pop
pop
push
lea
push
push
push
push
call
add
out
add
mov
mov
add
add
leave
jbe
add
add
add
add
insb
add
add
in
add
add
hlt
icebp
push
add
cld
lea
pop
pop
push
dec
ror
pop
pop
push
rol
pop
leave
push
push
lea
push
push
push
push
push
lea
push
call
stos
jp
pop
pop
mov
test
mov
cld
test
flds
add
add
je
add
add
jmp
add
pop
add
xchg
add
je
shr
loope
mov
sbbb
add
add
rol
mov
add
popa
add
add
add
push
add
jo
add
lea
pop
ret
push
shr
pop
push
mov
push
sub
add
inc
pop
add
push
lea
push
call
xchg
cmpsl
lea
scas
mov
out
add
movsl
fwait
push
subl
data16
clc
add
add
add
out
add
div
outsl
lret
lods
stos
ret
lret
mov
lea
pop
push
push
push
lea
push
call
stos
incb
add
imul
in
rol
push
rolb
jae
add
stc
push
test
loopne
add
mov
scas
ffree
add
sbbl
aam
add
add
add
loope
add
pop
push
add
pushf
add
popl
add
add
add
addr16
push
push
shr
xor
xor
pop
push
push
lea
dec
pop
push
push
pop
mov
lea
push
dec
xor
pop
sub
mov
push
push
call
add
les
jns
add
sahf
int3
popa
push
out
add
add
mov
add
call
add
push
add
xchg
add
push
jns
mov
add
nop
lret
mov
aad
cld
lea
pop
shr
add
push
push
push
push
push
lea
push
push
lea
push
call
sahf
sti
icebp
lods
add
add
stc
aam
arpl
in
cmc
lcall
push
add
mov
popf
ret
add
add
add
mov
jl
lcall
add
pop
add
push
popl
add
rcll
mov
mov
mov
add
mov
add
mov
clc
add
lea
pop
mov
mov
push
inc
not
sub
pop
add
push
ror
ror
not
pop
add
push
not
lea
pop
mov
mov
push
push
push
lea
push
push
push
call
add
add
mov
imul
add
mov
push
popf
mov
je
add
lcall
add
in
test
lock
add
pop
shll
add
rorl
pop
cmp
jne
push
push
lea
push
push
push
call
add
push
mov
test
imul
mov
add
add
arpl
scas
rorl
lcall
add
fs
adc
jno
add
add
mov
add
pop
push
sar
mov
pusha
repnz
imul
movsl
clc
iret
add
mov
add
pop
cmp
jne
push
push
push
push
push
lea
push
push
push
push
call
push
mov
push
add
pop
mov
xchg
jae
add
add
cmc
lret
push
js
xchg
cltd
add
add
mov
mov
out
mov
lea
pop
mov
push
pop
movl
push
lea
rol
sub
sub
pop
jmp
mov
push
push
lea
push
push
push
lea
push
call
mov
mov
fnstenv
lret
test
mov
add
out
xchg
cmpsl
rcr
pusha
add
add
lea
jae
add
mov
add
add
add
bound
add
lea
add
mov
add
xchg
sbbl
push
add
pop
add
rolb
add
js
les
push
or
adc
test
add
add
lds
inc
adc
add
add
push
xor
add
rol
ror
pop
jmp
mov
push
push
push
call
push
in
add
add
pop
add
fcmovnb
add
add
xchg
pop
imul
add
add
int3
call
cmpsl
jmp
sahf
add
xchg
out
xchg
fldl
out
cmpsb
test
mov
jmp
in
add
add
notb
add
jno
jo
jno
add
arpl
mov
cmp
jne
push
add
xor
add
pop
mov
push
push
push
lea
push
push
push
lea
push
push
push
call
stos
outsl
nop
lret
add
insb
mov
clc
outsl
push
popf
add
push
add
add
pop
in
push
repnz
popa
lock
sarl
adc
add
sar
outsl
movsl
add
in
add
xchg
add
xchg
add
add
faddl
jae
adcl
xchg
mov
sahf
mov
lea
pop
movl
push
push
push
lea
push
push
push
lea
push
call
add
mov
add
mov
ja
add
add
lahf
fsubrs
mov
add
add
sti
add
filds
cltd
stc
popf
mov
pop
ficomps
shr
add
add
addr16
lea
pop
jmp
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
mov
mulb
rorl
gs
jle
lahf
stos
add
iret
jbe
push
into
mov
test
jge
fs
add
movsb
shlb
cmpsl
cltd
add
jp
int3
lea
pop
mov
cmpw
jne
push
xor
inc
pop
mov
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
in
sar
jne
add
push
xchg
add
subl
add
cltd
mov
popf
add
mov
add
jnp
mov
jmp
add
add
add
scas
pop
xchg
mov
add
insb
add
add
and
movl
jmp
push
rol
pop
pushl
push
lea
push
push
push
push
push
push
push
lea
push
push
call
push
add
lock
add
add
mov
push
add
data16
add
add
mov
mov
xchg
xchg
rcr
je
xchg
clc
add
add
add
lods
mov
pushf
pop
lods
xchg
add
xchg
add
add
lea
pop
pop
push
rol
shr
pop
mov
push
lea
push
push
push
push
push
push
push
push
lea
push
call
addr16
add
in
add
sti
add
movsl
lods
add
decb
add
mov
mov
test
lds
add
add
aad
add
fstp
jb
in
movb
add
add
mov
add
hlt
ljmp
add
cltd
lock
in
lods
leave
add
bnd
movsb
rorb
pop
mov
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
addb
fwait
add
add
pop
add
cmpsb
fsubrl
in
add
add
std
xchg
add
test
cli
repnz
add
add
rolb
aam
aad
imul
nop
into
je
mov
push
aad
int3
lea
pop
mov
push
push
add
shl
push
and
add
add
shr
add
sub
add
pop
sub
pop
push
push
lea
push
call
add
cli
add
mov
push
mov
jno
mov
add
fdivrl
add
cwtl
int3
push
add
in
add
add
nop
addl
test
mov
add
add
add
in
cld
add
push
jns
movsb
mov
xchg
mov
nop
add
xchg
ror
add
add
add
in
mov
jmp
lea
pop
push
push
push
push
push
push
call
add
mov
mov
add
lods
add
add
xchg
mov
push
add
add
jmp
add
popa
fistl
fwait
mov
add
aad
add
jbe
mov
out
fadds
lret
add
mov
add
in
int
mov
mov
add
hlt
lea
pop
call
cmpl
je
push
push
add
push
sub
add
rol
add
ror
sub
sub
add
pop
xor
add
pop
push
pop
push
push
lea
push
push
push
lea
push
lea
push
call
lahf
hlt
mov
mov
add
arpl
pop
add
iret
nop
add
add
rol
mov
fstpl
imul
xchg
push
add
cmp
lret
add
int3
lea
pop
call
push
add
pop
cmpl
je
push
push
rol
add
add
xor
push
and
add
ror
rol
sub
inc
dec
pop
dec
add
add
pop
push
ror
inc
lea
shr
pop
push
push
xor
rol
not
shr
pop
call
push
push
push
lea
push
call
lds
add
mov
movsl
mov
fsubs
add
xchg
add
popa
add
mov
shlb
scas
add
nop
add
add
add
int3
pop
add
add
add
shrb
add
add
pusha
shrl
add
arpl
pop
cmpl
je
push
push
xor
shl
push
push
pop
add
ror
ror
xor
lea
sub
lea
shl
xor
pop
not
sub
pop
push
sub
inc
pop
push
push
sub
rol
shl
shl
pop
call
push
lea
push
call
addr16
sarb
out
fcompl
add
add
roll
mov
add
mov
add
outsl
add
add
shr
rolb
add
aam
cmpsl
mov
imul
xchg
roll
mov
lods
add
cmpsb
pop
add
add
add
add
pop
cmpl
je
push
push
ror
shl
lea
add
push
or
inc
add
xor
ror
sub
xor
pop
sub
pop
push
push
lea
push
push
call
add
pop
add
sti
lahf
add
pop
add
pop
add
fsubs
add
push
add
fwait
movb
add
lock
fisubrl
add
add
hlt
cmpsl
xchg
add
mov
add
addr16
xchg
gs
movsl
call
data16
add
mov
aad
fiaddl
mov
lea
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
fidivrs
add
add
test
pusha
add
mov
sar
xchg
cmc
mov
add
rolb
add
add
add
add
add
flds
mov
mov
shrb
mov
add
jns
ja
scas
scas
add
mov
lea
pop
call
cmpl
je
push
push
shr
add
dec
push
xor
add
sub
sub
dec
sub
lea
add
pop
pop
push
lea
push
push
push
push
lea
push
lea
push
push
call
xchg
add
mov
add
xchg
add
movsl
add
cmc
add
add
add
fs
add
lcall
jae
push
orl
add
push
lcall
add
add
add
add
shlb
add
icebp
add
cmc
add
add
add
lea
pop
push
push
lea
push
push
lea
push
push
push
push
call
aad
sahf
push
stos
add
xchg
filds
repnz
pop
into
test
jmp
add
add
add
add
scas
add
jp
repnz
jo
mov
iret
out
lods
ficoms
movsb
add
add
jmp
mul
rolb
add
aam
add
add
aad
mov
pusha
sbb
call
push
add
pop
cmpl
je
push
push
rol
sub
push
or
not
add
sub
sub
inc
rol
rol
pop
ror
pop
push
push
push
lea
push
push
push
push
call
cmp
icebp
add
add
jecxz
push
nop
add
add
nop
popa
not
test
mov
add
mull
add
std
out
mov
rclb
fiaddl
add
stos
mov
mov
lea
pop
push
call
push
push
push
push
lea
push
call
icebp
mov
jno
test
push
arpl
add
add
cmc
push
mov
push
add
jae
out
add
add
add
popa
push
mov
add
mov
mov
lea
pop
cmpl
je
push
push
dec
dec
push
push
pop
add
inc
dec
sub
shl
inc
add
pop
sub
not
dec
xor
pop
push
dec
pop
push
call
push
push
push
push
push
push
lea
push
call
add
leave
push
insb
add
jbe
add
add
iret
cwtl
add
push
xchg
testl
mov
add
hlt
jne
add
add
push
mov
add
mov
lock
lea
pop
cmpl
je
push
push
push
xor
add
add
not
not
rol
sub
pop
sub
xor
pop
push
dec
pop
push
call
push
shl
add
pop
cmpl
je
push
push
add
ror
push
push
pop
add
ror
sub
add
sub
sub
sub
pop
shl
add
pop
push
push
push
push
push
lea
push
push
call
add
add
lods
mov
rcl
pop
loope
push
add
lods
sahf
je
in
add
movb
xchg
add
xchg
add
add
neg
leave
shr
mov
int3
lea
pop
push
call
push
push
push
push
push
push
lea
push
push
lea
push
push
call
push
add
mov
add
test
pop
add
add
rcrl
add
cwtl
add
push
mov
mov
add
shlb
rolb
mov
add
add
xchg
add
mov
arpl
in
pop
addl
jae
arpl
test
int
leave
int
out
add
add
mov
mov
lea
pop
cmpl
je
push
push
add
add
shl
push
xor
add
sub
add
not
sub
shl
pop
ror
shl
pop
push
ror
pop
push
push
push
call
sahf
sar
add
jbe
lock
add
add
cld
lcall
add
sahf
add
mov
add
add
add
pop
and
add
mov
fidivl
lods
popa
add
add
movsb
pop
pop
pop
mov
add
mov
lea
pop
call
push
lea
xor
pop
cmpl
je
push
push
lea
xor
push
xor
add
lea
rol
add
xor
sub
add
sub
dec
shl
pop
inc
pop
push
push
push
lea
push
lea
push
call
jmp
add
insb
cmpsl
jle
add
mov
mov
mov
lret
int3
mov
loop
add
push
add
pusha
add
addl
add
add
out
add
add
fiadds
add
add
add
fmull
mov
lea
pop
push
push
push
push
push
push
push
call
jo
sahf
cmpsl
mov
mov
mov
mov
add
add
aad
add
int3
add
pop
add
ret
add
add
in
in
mov
push
add
xchg
add
jle
lret
std
roll
add
lea
pop
call
cmpl
je
push
push
add
push
or
inc
add
ror
shr
sub
sub
lea
ror
pop
sub
pop
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
add
stos
add
add
add
mov
clc
pop
sahf
add
popf
clc
add
faddl
stc
jb
sahf
add
add
fildl
add
add
jne
loop
add
fnsave
add
add
mov
add
push
mul
mov
add
mov
mov
int3
lea
pop
push
push
sub
pop
call
cmpl
jne
push
lea
push
push
lea
push
call
add
push
add
pushf
push
mov
add
faddl
mov
test
push
add
add
lods
cmpsl
arpl
add
jo
lret
out
imul
pop
xlat
pop
add
gs
add
in
aam
jno
jmp
add
int3
add
pushf
add
add
mov
add
insb
push
clc
add
lcall
lea
pop
mov
push
push
push
push
call
lea
ljmp
fwait
shr
add
je
add
stos
popf
mov
fucomp
sub
add
fildl
add
cmp
add
push
add
js
cmpsb
call
rcl
jmp
adc
add
add
add
ret
ljmp
add
add
rclb
push
call
pop
push
test
hlt
je
scas
add
push
add
leave
mov
jne
les
mov
add
xchg
mov
add
add
je
call
hlt
mov
push
icebp
mov
mov
mov
lea
pop
pop
pop
push
pop
pop
push
add
rol
sub
pop
pop
push
shr
pop
leave
push
ror
shl
pop
ret
push
push
shr
pop
mov
push
not
pop
add
push
add
pop
cmpl
jne
push
push
sub
push
and
add
add
sub
pop
inc
pop
push
shl
sub
sub
not
pop
pushl
push
shr
shl
not
pop
call
push
push
push
lea
push
push
lea
push
push
push
call
lret
sti
push
mov
imul
push
jp
roll
push
xchg
fwait
mov
into
popf
mov
add
fstpl
jae
add
add
add
pop
add
fsubrl
pop
sahf
add
add
add
jns
mov
add
mov
add
out
jno
cld
out
cld
lea
pop
call
push
sub
rol
pop
jmp
cmpl
je
push
sub
inc
xor
dec
pop
cmpl
jne
leave
push
lea
push
call
cmc
mov
mov
add
negl
add
add
sbb
fwait
lret
add
add
add
add
mov
rolb
mov
in
add
xlat
xchg
testl
lea
pop
add
pop
push
push
lea
push
push
push
push
push
push
push
call
xchg
data16
pop
push
mov
add
push
mov
cli
add
add
add
mov
mov
mov
mov
add
ja
add
add
add
add
lds
add
add
mov
add
add
mov
add
lods
add
pop
pop
pop
push
push
push
push
lea
push
lea
push
push
push
call
mov
sbbl
lcall
jb
add
add
add
fsubl
pop
shlb
mov
add
push
in
add
out
outsl
push
sahf
xchg
add
push
pop
mov
loope
mov
cli
add
add
pop
mov
add
add
jb
hlt
lea
pop
pop
push
lea
push
push
call
sahf
mov
mov
filds
add
add
pop
adcb
fwait
lcall
add
imul
add
in
push
add
add
add
cmpl
int
mov
lea
pop
leave
push
inc
ror
pop
add
ret
push
push
call
fsubl
add
int3
add
shlb
mov
pop
xchg
add
add
add
stc
push
push
xchg
add
add
scas
push
jb
test
add
iret
outsl
add
add
add
aad
add
data16
mov
push
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
add
mov
jl
add
add
add
add
cli
push
add
stos
add
lret
jecxz
add
rcrl
mov
cmpsb
add
pop
lds
out
add
sti
add
lods
mov
lea
pop
cmpl
jne
push
push
inc
rol
add
push
push
pop
add
ror
rol
sub
shr
not
pop
sub
inc
inc
pop
push
shr
pop
pushl
push
push
push
lea
push
push
push
call
icebp
xchg
add
xorb
add
in
xchg
addr16
cltd
add
out
movsb
pop
int
add
pushf
add
out
add
add
jge
imul
fwait
out
cli
sahf
test
loop
add
add
add
stos
add
xchg
mov
push
lock
loope
add
sbb
scas
sub
add
push
push
lea
push
push
call
stos
add
loopne
lods
imul
pop
pop
ret
fiadds
add
add
outsl
mov
add
add
add
jns
rol
scas
mov
lea
pop
call
push
push
push
push
push
push
push
lea
push
call
addl
add
std
out
lret
mov
mov
push
jne
jmp
add
pop
mov
rcrl
loop
add
jnp
hlt
mov
push
xchg
mov
lea
pop
jmp
push
xor
sub
pop
cmpl
jne
push
push
push
lea
push
push
call
pop
mov
imulb
pusha
cmpsl
add
jp
shrl
test
mov
scas
testb
mov
mov
add
add
add
xchg
clc
js
push
add
push
int3
frstor
add
cwtl
jmp
int3
add
add
add
add
xchg
fcmove
flds
add
nop
test
mov
lea
pop
mov
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
icebp
add
jae
je
ret
adc
mov
in
stos
lods
roll
movsl
test
xchg
mov
add
add
mov
add
add
add
pusha
add
popf
loopne
stc
mov
add
add
add
add
pusha
hlt
add
aad
add
jno
rcl
add
sub
add
add
push
push
call
cmpsb
jmp
arpl
lds
hlt
movsb
jl
pop
cltd
leave
push
add
jbe
popa
add
stc
jns
mov
xchg
cwtl
roll
fisttps
add
cld
push
add
fwait
roll
outsl
add
mov
cli
push
push
push
add
loop
pop
jnp
hlt
lea
pop
push
push
push
dec
push
xor
add
sub
dec
rol
sub
ror
sub
pop
pop
push
sub
pop
pushl
call
push
ror
pop
push
call
push
push
shr
rol
sub
push
or
not
add
rol
sub
sub
lea
ror
pop
shl
pop
push
lea
push
push
push
push
push
call
add
add
mov
add
gs
roll
int
fs
mov
add
stos
adcb
add
in
test
repnz
js
lcall
aam
popa
pop
cltd
add
mov
lea
pop
pushl
call
push
push
push
push
lea
push
push
push
lea
push
push
call
jmp
mov
push
add
outsl
add
outsl
add
mov
xchg
pop
add
mov
hlt
mov
pop
mov
aam
orb
mov
addl
add
push
out
add
lret
add
xchg
mov
lea
pop
call
push
push
shr
ror
push
push
pop
add
dec
sub
lea
dec
sub
pop
rol
pop
push
push
push
call
add
push
add
add
add
add
aam
scas
lods
lock
fiaddl
push
mov
lret
in
add
jl
rcr
add
jp
add
aam
mov
mov
lea
pop
pushl
push
ror
lea
xor
pop
call
push
push
push
push
push
call
in
cltd
add
movsl
add
add
add
outsl
std
add
add
mov
xchg
rolb
add
xchg
mov
add
add
add
add
mov
jle
cmc
filds
aam
lahf
add
add
fwait
xchg
ret
push
add
fadds
xchg
test
add
xchg
cli
iret
int
jo
out
pop
add
jne
mov
lea
pop
call
push
inc
xor
add
pop
lea
push
push
rol
push
and
add
ror
dec
sub
inc
sub
pop
not
pop
push
push
push
push
push
lea
push
push
push
push
call
push
mov
lods
mov
out
mov
add
loopne
add
xchg
mov
add
add
pop
lock
movsb
icebp
add
add
cmpsl
call
add
scas
popf
imul
lret
mov
add
jno
jb
add
test
jns
add
mov
lahf
cmc
mov
lea
pop
pushl
call
push
pop
push
call
push
push
push
sub
add
inc
sub
add
sub
lea
pop
shl
pop
push
lea
sub
pop
pushl
push
lea
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
loope
add
jle
add
add
add
in
fadds
add
add
incb
jne
mov
add
add
mov
rolb
test
pop
addr16
push
loope
add
add
add
add
add
xchg
addb
add
mov
std
add
xchg
add
add
mov
lea
pop
call
push
push
push
push
lea
push
push
push
push
lea
push
call
add
jnp
cltd
imul
lahf
fcom
pop
push
add
xchg
hlt
out
add
add
rcl
add
fs
add
push
add
out
shlb
stc
bound
add
add
add
addl
pushf
cli
jae
scas
add
pop
call
push
sub
pop
mov
push
push
add
ror
xor
push
and
add
ror
sub
ror
add
ror
pop
rol
add
xor
pop
push
dec
pop
pushl
push
push
push
push
push
lea
push
call
add
add
aam
add
movsb
add
test
mov
int3
aam
add
add
stos
lahf
mov
add
add
nop
mov
add
mov
mov
add
gs
add
add
add
add
movb
int3
lea
pop
call
push
sub
sub
shr
pop
push
push
push
push
push
push
push
push
push
push
call
lahf
xchg
add
add
jnp
xchg
cmpsb
add
clc
sti
add
add
add
add
add
hlt
adcl
testl
mov
fxch
mov
icebp
js
add
add
sahf
add
stc
add
mov
fwait
rol
add
lods
pushf
mov
add
fiaddl
fistpll
mov
lea
pop
call
push
push
not
ror
push
or
inc
add
xor
add
sub
pop
not
add
pop
push
pop
pushl
push
push
lea
push
push
call
fsubr
xlat
add
push
call
add
fdivl
test
in
add
test
mov
add
lock
popa
jb
decb
lret
xchg
sti
cmpsl
push
enter
stos
imul
xorb
add
xchg
mov
bound
pop
call
push
push
push
push
lea
push
call
cwtl
pop
cltd
add
je
mov
xchg
jns
add
add
in
pop
xchg
add
roll
lea
mov
add
pop
sahf
add
js
orl
pushl
call
push
push
shr
push
and
add
shr
ror
sub
add
sub
sub
shr
pop
rol
pop
push
rol
pop
pushl
push
ror
shl
pop
call
push
push
push
and
add
shl
sub
dec
add
pop
lea
shl
pop
push
push
lea
push
sub
add
sub
sub
sub
sub
xor
pop
not
pop
push
inc
pop
call
push
lea
push
push
push
push
call
mov
add
bound
add
cwtl
mov
mov
lds
add
add
add
add
add
fldl
scas
add
repnz
push
addl
imul
mov
mov
jge
mov
hlt
push
mov
lea
pop
pop
push
xor
not
sub
add
pop
dec
jne
call
push
push
push
push
lea
push
push
call
xchg
xchg
mov
testl
out
jmp
enter
add
shr
push
pusha
add
add
add
icebp
out
jle
enter
mov
jbe
out
popf
clc
jb
add
insb
mov
jns
add
lea
pop
jmp
push
pop
call
push
push
xor
dec
push
and
add
dec
sub
xor
sub
pop
add
rol
pop
push
push
push
push
call
add
push
in
cld
add
mov
cwtl
call
hlt
les
xchg
add
cld
les
fwait
add
rcll
push
add
cwtl
add
mov
in
scas
push
add
xchg
movsl
add
rol
loopew
add
add
popf
pusha
sahf
add
into
ja
fld
mov
mov
lea
pop
pushl
push
push
push
push
push
push
push
push
call
xchg
mov
add
add
out
add
out
lods
jp
push
cwtl
loopne
add
jb
xchg
push
fsubs
movsb
js
call
fadds
add
mov
cli
faddl
mov
lea
pop
call
push
push
push
push
push
push
push
push
push
lea
push
push
call
add
xchg
add
add
clc
add
add
lods
add
add
mov
lcall
loope
addb
std
add
jae
mov
out
enter
cltd
add
add
hlt
leave
add
sti
cmpsl
mov
lcall
pusha
sub
rclb
test
mov
lea
push
push
push
xor
add
add
sub
dec
pop
add
not
pop
push
add
rol
add
pop
pushl
push
lea
push
push
push
push
push
lea
push
push
call
add
repnz
mov
mov
stc
lods
pop
mov
ret
fidivrl
xchg
add
add
add
icebp
xchg
add
add
add
add
mov
add
add
leave
xchg
add
addl
xlat
cld
add
loope
add
add
icebp
mov
in
add
rorl
pop
call
push
xor
add
shl
pop
push
call
push
push
lea
add
ror
push
sub
add
add
sub
rol
dec
pop
shr
xor
rol
add
pop
push
push
push
call
mov
add
jne
mov
aad
hlt
pop
out
jae
leave
push
lret
add
mov
mov
lahf
je
mov
outsl
int
test
add
add
in
push
cli
add
mov
je
mov
mov
bound
pushl
call
push
lea
push
push
push
push
push
lea
push
call
add
push
add
xchg
add
mov
push
add
mov
add
add
movsb
add
push
pop
xchg
scas
pop
pop
int3
add
mov
xchg
add
scas
pop
add
add
cwtl
xchg
aad
add
mov
mov
lea
pop
call
push
push
lea
push
push
call
call
les
fs
cltd
movsb
rol
add
pop
scas
jp
jo
pop
ljmp
ret
push
add
shrb
loop
cli
loop
add
xchg
ja
shrb
add
add
add
jnp
add
cmc
out
out
add
mov
mov
add
fisttps
lea
pop
mov
lea
push
push
add
push
xor
add
sub
xor
dec
sub
shl
sub
pop
lea
pop
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
jl
shl
jne
faddl
add
movsl
add
push
add
add
stc
mov
pop
add
jecxz
xchg
out
add
push
add
mov
gs
pop
add
add
lods
mov
add
mov
mov
loopne
rcr
add
nop
mov
add
add
fwait
rolb
add
int
push
mov
and
pushl
push
inc
sub
pop
call
lea
push
push
push
push
push
lea
push
push
push
call
arpl
add
sahf
out
in
add
popl
neg
clc
jb
fidivl
popl
add
pop
lock
hlt
jl
mov
mov
add
add
add
in
cld
add
fnsave
mov
mov
bound
mov
push
cmpsb
mov
push
mov
addl
add
add
mov
je
add
lods
rolb
add
pop
push
push
rol
pop
push
push
sub
pop
push
push
push
push
lea
push
push
lea
push
push
call
add
enter
mov
add
out
mov
add
add
popl
add
add
jl
add
add
add
push
loopne
call
mov
add
aad
mov
lea
pop
pushl
push
push
shr
add
lea
rol
push
push
pop
add
shl
sub
sub
ror
not
pop
xor
pop
push
lea
push
push
call
hlt
lcall
mov
mov
add
mov
cltd
into
add
add
add
int
pop
push
out
stos
popa
pop
iret
cli
add
xchg
add
jne
mov
add
mov
lea
pop
push
push
push
push
push
push
push
push
lea
push
push
lea
push
call
jae
popa
leave
add
add
shl
mov
fstps
icebp
mov
aad
roll
out
jns
push
enter
add
add
pushf
enter
fst
mov
outsl
push
lcall
mov
scas
in
add
push
add
push
add
out
je
lods
add
repnz
pop
flds
push
mov
lea
pop
call
push
push
sub
ror
push
and
add
shl
ror
ror
sub
lea
sub
add
pop
rol
sub
dec
rol
pop
push
push
push
lea
push
push
push
push
push
call
add
test
jb
jge
lret
add
scas
mov
add
ljmp
in
xchg
cmc
add
fcomip
cld
mov
add
mov
mov
and
jne
push
inc
rol
pop
call
push
push
sub
pop
call
push
push
push
xor
add
rol
sub
ror
pop
shr
pop
push
not
shr
lea
shl
pop
pushl
call
push
not
xor
pop
call
push
push
push
push
lea
push
push
push
push
push
call
test
mov
les
add
mov
add
add
xchg
pop
sti
add
pop
add
add
jne
mov
in
push
add
test
js
ficompl
lret
jae
nop
pop
rorb
pop
jmp
push
push
call
add
fwait
les
popa
int
add
add
add
pusha
mov
add
push
rclb
call
mov
mov
push
out
add
add
add
out
lahf
out
pushf
cmc
add
jae
add
les
pushl
mov
push
inc
xor
shr
xor
pop
jmp
push
push
dec
lea
add
push
push
pop
add
lea
sub
sub
pop
shl
shr
ror
pop
push
dec
shr
pop
pushl
push
sub
shr
shl
pop
call
push
add
sub
ror
pop
push
push
add
shl
pop
call
push
push
lea
shr
ror
push
or
inc
add
add
sub
not
add
pop
sub
lea
pop
push
push
lea
push
lea
push
push
push
lea
push
push
call
jno
add
cld
xchg
add
test
movsb
add
add
lock
mov
mov
icebp
mov
jns
filds
add
add
mov
lea
pop
pushl
call
push
push
push
push
push
push
push
push
lea
push
lea
push
call
jb
add
test
mov
add
std
mov
mov
mov
test
imulb
add
add
xchg
add
add
fidivrl
push
mov
stc
js
stc
add
scas
add
add
add
xchg
cmc
mov
addl
add
clc
add
add
clc
jmp
fiaddl
add
pop
hlt
popa
testb
mov
lea
pop
push
push
push
push
push
push
push
call
mov
add
sahf
add
add
lea
in
ret
lds
add
shrb
xchg
scas
cmpl
fadds
xchg
les
movsl
insb
add
add
add
add
add
test
add
add
test
mov
mov
arpl
xchg
xchg
push
add
pop
call
push
dec
ror
pop
leave
push
inc
pop
add
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
call
imul
mov
jle
test
add
add
fiadds
mov
add
add
xchg
jl
add
jbe
popa
add
xlat
lods
iret
push
je
add
add
mov
lea
pop
pop
push
push
push
push
call
mov
clc
leave
incb
int3
add
add
xchg
add
pop
lret
add
add
add
out
stos
xchg
add
add
pop
sahf
add
popf
jge
movsl
pop
les
mov
add
add
add
cld
jbe
mov
addr16
xchg
add
add
xchg
add
add
jne
not
add
les
pop
push
xor
sub
pop
leave
push
push
lea
push
lea
push
lea
push
push
push
call
cmpsb
add
jbe
push
lret
add
add
shrb
add
push
add
clc
add
pop
mov
bound
push
add
add
add
add
add
xchg
lret
roll
lcall
cmpsl
mov
pop
sahf
enter
cmpsl
jbe
enter
cltd
jns
repnz
pop
add
ret
push
lea
pop
leave
ret
push
shl
ror
add
pop
push
push
push
push
push
push
push
push
push
push
call
icebp
imul
add
xlat
outsl
add
add
pop
add
rcrl
in
add
rolb
xlat
in
add
add
cwtl
add
mov
lea
pop
mov
push
sub
pop
cmpl
jne
mov
push
push
lea
push
lea
push
call
mov
mov
fs
pop
lcall
add
mov
add
xorb
ja
add
add
in
add
mov
add
ret
add
iret
pop
add
add
cld
add
push
ljmp
add
jo
add
testb
adc
outsl
add
add
pop
int
fildll
lret
pop
loop
push
call
fsubrs
add
data16
callw
add
add
xchg
add
add
icebp
add
jp
mov
cwtl
mov
pop
add
in
lock
push
in
add
mov
add
flds
mov
lea
pop
mov
push
rol
dec
pop
and
xor
push
push
push
push
lea
push
push
lea
push
call
mov
pop
lods
add
rcr
add
movsb
add
add
lods
add
lahf
jns
add
mov
add
cwtl
add
mov
lret
add
imul
mov
push
imul
jge
loop
int3
add
xchg
push
mov
popa
jbe
add
add
add
add
lea
pop
xor
push
inc
pop
add
push
lea
push
push
push
push
push
push
push
lea
push
call
rcl
add
aam
add
add
fiaddl
add
jl
push
cli
add
loopne
add
cld
test
add
add
add
add
lods
int
addb
stc
add
add
cmc
rolb
jb
mov
add
pop
xchg
add
in
iret
leave
xchg
mov
lea
pop
xor
push
ror
dec
shl
pop
dec
push
pop
sub
push
inc
sub
pop
jmp
push
lea
push
call
push
nop
add
add
arpl
insb
xchg
add
add
mov
add
jnp
mov
mov
add
add
add
icebp
push
add
add
add
fldcw
out
cltd
pop
stos
add
std
mov
scas
out
gs
mov
lea
pop
sub
push
push
call
stc
add
add
test
add
lods
add
incb
add
filds
add
stos
lret
addr16
into
js
add
add
mov
movb
gs
call
mov
mov
jmp
ret
add
pop
pushl
pop
push
push
push
push
push
push
push
lea
push
push
call
add
leave
testl
popf
add
add
mov
mov
add
xchg
add
test
add
aam
add
add
nop
iret
lds
sahf
test
pushf
cmc
push
mov
enter
lea
add
jle
add
fsubrl
add
pop
sub
cmp
jne
push
lea
push
lea
push
lea
push
push
call
scas
int3
xlat
add
xchg
aam
add
fwait
mov
jnp
add
add
aad
add
js
jno
add
add
add
adcb
add
out
jecxz
mov
add
add
push
add
add
mov
jl
add
add
pop
les
cld
lea
pop
mov
push
shl
add
ror
add
pop
lea
push
xor
shl
xor
pop
sub
push
rol
ror
inc
pop
mov
shr
push
sub
rol
sub
pop
add
sub
push
shl
pop
pushl
pop
push
push
push
push
push
lea
push
push
push
call
rolb
add
jmp
insb
int
add
jbe
pushf
je
add
xchg
out
fidivrl
add
pop
add
add
jecxz
jb
into
rolb
push
add
aad
addl
jo
add
cltd
add
mov
add
and
jmp
incl
add
or
mov
push
lea
push
lea
push
push
lea
push
call
add
add
add
loope
add
sarl
mov
popf
pusha
mov
stc
add
std
popa
add
notb
add
mov
enter
clc
jl
add
mov
jns
mov
neg
add
cmpsl
fcomi
add
flds
lds
push
mov
lea
pop
sub
push
lea
push
push
call
add
add
mov
pop
filds
push
add
add
add
add
add
add
add
mov
add
insb
add
mov
pop
cmp
jne
leave
push
shl
sub
shl
pop
ret
push
add
pop
push
mov
push
push
push
push
push
push
lea
push
call
gs
lea
imul
in
fidivrs
add
out
add
add
add
jp
add
mov
test
mov
xchg
add
mov
lcall
mov
jns
aam
add
push
lock
add
mov
mov
lea
pop
add
push
push
push
lea
push
push
call
lret
mov
mov
add
test
fucomp
xchg
jo
add
fwait
mov
xchg
jp
jbe
xchg
cmpsb
add
jge
add
mov
xchg
add
jmp
call
pushf
add
jns
add
fdivrl
lea
pop
push
push
sub
add
pop
push
push
lea
pop
push
push
push
push
push
call
test
cli
add
push
pop
add
movsl
repnz
jnp
add
mov
rolb
popf
add
add
add
pop
mov
push
ret
pop
pop
sarl
fmull
push
lea
push
push
push
push
push
push
push
push
push
call
mov
add
addl
imul
push
cli
add
movsb
add
add
cwtl
add
mov
jns
stos
add
add
add
pop
outsl
pop
add
mov
mov
mov
push
pop
pop
leave
mov
lea
pop
mov
push
add
lea
pop
lea
push
push
lea
push
push
push
call
aam
add
sti
add
cltd
push
jmp
fiadds
xchg
bound
mov
andb
add
test
add
add
fdivrl
push
fadds
fists
loop
cmpsl
add
jo
mov
add
add
addl
mov
lea
pop
sub
mov
push
push
call
add
insb
add
out
add
hlt
add
xlat
rcll
cmpsl
test
add
fsubrl
mov
add
jae
xchg
rcrl
add
std
jl
orl
pushf
add
repnz
leave
add
add
add
push
pop
add
add
add
jecxz
lock
lea
pop
shr
add
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
cmpsb
xchg
mov
xchg
fmulp
xchg
push
mov
add
add
add
mov
push
out
push
add
add
mov
add
shrb
movsl
add
mov
add
add
enter
add
jmp
add
fcmovu
xchg
ja
out
insb
pop
divb
jmp
rolb
add
add
mov
lea
pop
mov
push
shl
pop
add
push
push
push
push
push
lea
push
push
call
add
add
jns
add
cmpsb
shl
mov
cltd
add
pop
std
fstp
sti
xchg
pop
roll
push
add
push
add
push
xchg
out
sub
pop
add
fdivr
lcall
cltd
mov
int3
lea
pop
mov
push
dec
sub
pop
add
push
lea
push
push
push
push
push
push
push
push
call
int3
rolb
je
cli
add
add
add
add
insb
add
add
js
pop
add
jno
add
mov
call
mov
jle
add
add
xchg
shll
and
xor
push
push
lea
push
push
lea
push
push
call
cmpsb
xchg
leave
in
mov
iret
add
fcoms
add
addr16
push
add
add
pop
add
mov
add
out
std
add
fdivl
addr16
lea
pop
mov
push
lea
push
push
call
add
hlt
add
add
add
add
add
add
add
mov
add
arpl
pushf
push
add
arpl
add
out
aad
in
jecxz
add
sahf
mov
les
add
lcall
popa
mov
add
add
mul
mov
lea
pop
and
rol
push
pop
rol
push
push
push
push
call
hlt
fmulp
add
std
iret
cwtl
mov
add
add
int
add
test
push
in
movl
xchg
add
add
add
loope
add
aad
add
test
push
push
push
mov
adc
add
xchg
mov
loop
pop
inc
push
pop
cmpb
jne
push
push
push
lea
push
lea
push
push
call
jecxz
ja
pop
mov
jns
loop
mov
cltd
outsl
add
in
data16
pop
int
flds
push
pop
lret
add
add
arpl
add
mov
add
add
lock
jb
fadd
movsl
add
xchg
bound
mov
add
shl
outsl
out
lods
add
jns
addb
mov
mov
lea
pop
add
cmp
je
push
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
hlt
add
add
lds
lret
jbe
aad
add
add
add
cmc
push
in
ja
lahf
int3
cmpsb
add
mov
jl
add
add
imul
add
lds
push
push
add
lahf
cli
add
mov
lea
pop
add
push
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
imul
enter
in
add
fwait
sahf
push
mov
pop
add
mov
add
jmp
add
xchg
jno
jb
mov
sarb
roll
mov
add
add
push
add
add
add
sahf
mov
lea
pop
cmpl
jne
xor
push
push
push
push
push
call
xlat
pop
rcr
add
cmpb
int3
xchg
add
mov
icebp
movsl
cmpsb
add
add
loope
add
mov
pop
lock
mov
enter
jbe
add
push
std
xchg
mov
push
sahf
nop
test
add
mov
push
je
add
mov
fiadds
ljmp
leave
push
jge
xchg
int3
lcall
adc
pop
push
push
call
stc
add
add
stos
movsl
add
arpl
add
shl
fadds
mov
xchg
xchg
lcall
add
std
incb
in
rcl
add
cli
add
test
add
add
xlat
add
xlat
add
imul
test
out
push
fmull
push
push
push
push
push
call
mov
loope
add
nop
push
fs
jbe
add
add
add
push
add
mov
rcr
add
add
mov
scas
cmpsb
xchg
push
add
add
jp
mov
loope
mov
lea
pop
pop
push
sub
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
push
mov
jne
mov
sbb
pop
add
add
pop
lahf
add
pushf
push
lods
add
lock
push
cltd
mov
add
cmpb
add
addl
lahf
mov
lea
pop
pop
push
lea
push
call
push
roll
add
out
add
adc
fwait
add
add
lahf
add
add
in
add
mov
cmpsb
test
mov
or
mov
stos
jae
add
add
mov
cli
add
call
or
ret
push
sub
sub
dec
pop
mov
push
rol
shl
ror
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
call
out
iret
ljmp
in
roll
add
add
xlat
fiadds
add
mov
add
out
int3
add
int3
gs
add
rolb
add
lahf
hlt
add
fucomp
jmp
in
jne
jle
push
test
jecxz
fstpl
mov
jns
into
add
add
les
push
dec
dec
pop
push
add
push
push
push
push
push
push
call
xchg
jmp
scas
movsb
add
jmp
mov
addb
lds
add
fiaddl
mov
mov
add
xlat
push
into
orb
mov
xchg
mov
mov
decb
add
add
mov
push
sahf
cwtl
testb
add
call
fmull
rolb
push
lea
push
call
adcb
add
add
add
add
cmpsb
stos
add
icebp
or
xchg
stos
addb
movsb
add
add
mov
add
insb
add
add
mov
sti
mov
shll
add
jns
movsb
mov
lea
pop
add
push
push
push
call
mov
add
iret
std
cmp
mov
add
in
lods
add
aad
mov
add
push
jbe
push
push
add
add
add
add
add
add
mov
lret
imul
add
add
add
push
add
loopne
xlat
add
add
int
add
add
enter
pusha
or
pop
push
not
ror
dec
inc
pop
pop
push
lea
pop
mov
push
push
dec
add
ror
shl
pop
call
push
inc
pop
xor
pop
push
pop
pop
pop
push
pop
pop
push
ror
pop
pop
push
shl
shl
lea
ror
pop
leave
push
push
push
push
push
call
add
add
popf
add
add
cld
jmp
scas
add
ret
add
xchg
add
add
add
add
stos
faddl
cld
add
out
add
lret
add
pop
ret
push
ror
shl
shl
lea
pop
push
mov
push
sub
inc
rol
pop
add
push
push
push
lea
push
lea
push
lea
push
call
add
negb
pushf
sti
lret
mov
int3
aam
outsl
out
add
add
leave
add
mov
add
add
xchg
add
mov
push
add
cwtl
clc
add
mov
mov
mov
loopne
int
add
xchg
push
push
add
add
jl
lods
add
add
add
loopne
lcall
adc
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
popa
cwtl
add
popa
add
popa
lods
add
lcall
add
jb
mov
jp
add
add
xchg
pop
jno
jo
movb
cli
shrl
add
fucom
xchg
fldl
cltd
add
jne
add
pop
push
push
inc
pop
mov
push
push
lea
push
push
push
push
call
pop
add
les
bound
add
xchg
pop
add
jnp
add
scas
les
std
add
add
jecxz
popf
add
add
mov
lea
pop
pop
lea
push
push
push
push
push
push
push
push
push
lea
push
call
scas
lods
call
add
pop
mov
add
add
rcr
add
xorl
test
add
add
pop
xchg
loope
add
mov
jp
fstps
add
add
mov
jecxz
push
add
cli
repnz
popf
add
icebp
add
insb
out
add
shl
cmpsb
mov
lea
pop
sub
push
push
push
call
add
add
test
icebp
add
add
add
pop
add
add
add
mov
int
mov
pop
push
mov
mov
jae
scas
add
roll
cltd
incb
cli
jecxz
add
mov
les
add
mov
add
add
mov
jmp
add
push
mov
lea
pop
mov
push
push
lea
push
push
lea
push
lea
push
call
mov
out
add
mov
add
push
mov
add
leave
add
add
add
add
mov
fwait
test
repnz
add
pop
shr
add
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
popf
flds
add
lret
pusha
imul
test
test
sti
add
add
js
push
int3
imul
outsl
mov
add
add
data16
pop
js
push
call
movb
add
adcl
aad
lea
pusha
lret
add
add
rolb
insb
jmp
jno
add
mov
add
test
lret
shlb
scas
add
xlat
movsl
popf
add
pop
add
push
lea
push
call
stos
add
add
lods
add
mov
add
cmc
add
rolb
out
mov
mov
add
hlt
mov
add
xchg
les
pushf
xlat
in
flds
movb
lea
jae
mov
add
pusha
mov
data16
add
mov
add
lret
and
decb
pop
pushl
push
push
push
push
call
hlt
lds
jge
rolb
mov
jns
push
add
add
add
add
mov
add
push
mov
push
add
addr16
add
mov
add
fadd
mov
lea
pop
popl
push
sub
pop
mov
push
add
add
pop
add
push
xor
sub
pop
xor
push
rol
shl
pop
lea
mov
push
sub
dec
dec
not
pop
add
xor
push
push
lea
push
push
push
call
add
add
add
add
rclb
jmp
add
scas
add
jmp
add
cltd
cltd
add
mov
add
add
mov
movl
add
cwtl
xchg
add
aam
mov
shlb
shrb
jl
rolb
xchg
add
mov
adc
rol
nop
push
lea
push
push
push
lea
push
lea
push
push
call
add
xchg
pop
into
mov
pop
add
add
cld
iret
add
pop
out
add
fwait
rcr
lret
add
xchg
test
add
mov
add
lods
mov
mov
pop
les
jecxz
add
add
cltd
mov
add
fstl
add
mov
xchg
rorb
pop
nop
xor
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
mov
add
push
add
movb
out
add
addb
add
jo
jle
loope
data16
add
scas
out
in
add
mov
pop
iret
fistpll
add
add
pop
rorb
pop
nop
nop
push
rol
ror
pop
inc
nop
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
jl
add
add
xchg
mov
loopne
add
add
sub
movb
add
jne
pusha
fiadds
mov
sbbb
cwtl
xchg
jle
fadds
mov
aam
bound
nop
push
push
call
push
cli
stc
add
add
add
les
jge
add
add
add
jo
mov
leave
addb
pop
cmc
add
mov
add
add
add
jne
stos
mov
mov
jge
mov
add
aam
jbe
add
add
aam
add
jbe
stc
add
add
imul
lret
add
test
mov
lea
pop
cmpb
jne
add
push
push
push
push
push
push
push
lea
push
call
in
lcall
aad
add
add
xchg
add
mov
jne
scas
vcvtps2pd
add
sti
mov
jmp
flds
xchg
fwait
scas
icebp
add
pop
add
cmc
mov
xchg
jp
add
add
cltd
cmpsl
mov
and
push
xor
rol
dec
not
pop
nop
cmp
je
push
sub
shl
pop
nop
nop
push
push
push
push
push
push
push
push
call
mov
add
out
je
imul
push
add
xchg
add
add
movsb
mov
jae
add
xchg
add
add
mov
stc
add
je
sti
stos
fdivr
sti
xchg
testb
add
lahf
add
add
mov
lea
pop
inc
nop
push
push
push
push
call
add
in
add
add
fildl
nop
add
mov
in
mov
jmp
add
add
mov
stc
add
repnz
add
pop
add
movb
icebp
mov
jb
add
jl
clc
add
add
lods
in
add
out
add
mov
lea
pop
nop
push
sub
shr
pop
cmp
jb
xor
push
lea
push
lea
push
push
push
call
popa
add
add
rolb
add
jae
push
add
mov
add
iret
pusha
add
add
add
add
add
push
mov
mov
jbe
add
add
add
insb
fiadds
bound
mov
add
push
adc
jmp
push
shr
shr
shr
pop
mov
push
push
push
push
lea
push
push
push
push
call
out
jp
mov
add
je
mov
fs
testb
lret
add
add
add
add
out
lcall
add
jns
clc
jae
mov
pusha
movl
add
popa
fmul
aam
mov
mov
gs
aad
add
push
sti
push
icebp
mov
add
add
clc
in
add
pop
add
movzwl
push
lea
add
pop
mov
add
push
push
push
call
lea
add
loope
add
add
cli
std
pop
add
mov
add
adcb
add
add
shll
mov
fldl
add
add
test
add
add
int
jo
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
add
call
add
xlat
add
into
roll
loopne
mov
cltd
repnz
popl
in
push
add
xlat
mov
call
pop
mov
mov
jle
add
mov
mov
add
add
movb
imul
add
hlt
add
add
mov
lea
pop
xor
push
push
lea
push
push
push
push
push
push
push
call
loop
add
mov
mov
add
xchg
add
mov
add
negl
pop
int
add
add
mov
jp
fcoms
pop
add
xchg
roll
add
cltd
add
add
iret
pop
jbe
xchg
add
jmp
add
icebp
divl
xlat
push
lcall
stos
mov
data16
xor
push
sub
pop
shl
push
push
push
push
push
lea
push
push
push
push
lea
push
call
jnp
xchg
add
add
add
cmc
add
add
jne
pop
xchg
add
movl
add
add
pop
mov
add
test
push
jae
jae
add
repnz
fiaddl
pop
push
negl
incb
push
xchg
cmc
add
add
ljmp
jmp
jl
iret
add
sarb
arpl
pop
xor
push
push
push
push
push
push
lea
push
push
push
call
lds
lahf
add
add
pop
add
or
add
movsb
add
add
ja
addb
fldl
outsl
jae
push
scas
add
test
subb
rolb
pusha
add
icebp
call
imul
lea
pop
shl
xor
push
xor
inc
pop
shl
xor
push
add
pop
mov
add
push
push
push
push
push
push
push
call
sti
add
add
add
xchg
loopne
add
add
cmc
add
lret
jb
movsl
push
mov
jmp
bound
lock
mov
iret
jmp
add
pop
pop
push
lea
push
push
call
add
cli
add
add
add
sbbl
xorb
add
pushf
fisubrl
jl
test
int
loopne
add
mov
xchg
mov
add
sti
add
xchg
int
add
fmull
push
add
pop
pop
pop
push
lea
push
push
push
push
call
add
lret
testl
push
push
pop
pop
roll
mov
fs
call
add
xchg
push
addl
loope
mov
add
sar
add
add
add
lret
sbbb
mov
mov
add
lods
add
loop
add
movsb
push
stc
add
add
add
add
addr16
leave
ret
push
inc
lea
pop
push
push
push
push
lea
push
push
call
movsl
loopne
add
fldl
jge
je
add
mov
not
add
add
add
fdecstp
cmpsb
test
xchg
movsb
add
add
add
pop
jl
push
mov
into
loopne
mov
cmc
jge
mov
lea
pop
mov
push
push
shr
shl
pop
push
push
rol
sub
pop
push
push
push
push
call
js
jp
mov
add
repnz
les
add
mov
add
mov
add
add
shl
lret
in
fistps
add
roll
add
jmp
lods
movsl
add
add
mov
lea
pop
mov
mov
push
push
push
push
lea
push
push
push
push
push
push
call
add
ljmp
loopne
rclb
add
lea
add
add
test
xchg
mov
mov
add
add
add
out
add
fadds
into
add
add
jae
mov
std
pop
leave
lret
add
add
fadds
add
fwait
cwtl
jb
shrb
push
add
rcll
int3
lea
pop
mov
push
xor
dec
pop
test
je
push
lea
push
push
push
push
lea
push
push
call
add
cli
add
mov
add
mov
add
aad
xchg
add
imul
jns
add
xchg
mov
add
mov
gs
jo
in
pop
add
pusha
js
lret
fsubl
int3
add
xchg
add
test
fcom
cltd
mov
add
roll
lret
mov
add
mov
lea
pop
mov
test
je
push
sub
shr
add
shr
pop
mov
mov
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
mov
out
mov
push
out
in
popl
je
jo
jns
ljmp
aad
add
mov
popf
add
pushf
test
add
add
mov
add
imul
lods
pop
add
add
rolb
clc
ljmp
add
pop
imul
inc
push
inc
rol
pop
cmp
je
test
je
push
lea
push
call
addl
and
je
shlb
jb
loopne
add
incb
mov
movsb
mov
test
add
rolb
loope
aam
in
mov
add
push
fadds
enter
add
add
add
clc
ficoml
out
movsl
add
hlt
in
fstl
sahf
add
add
movsb
pop
add
mov
loope
aam
bound
pop
mov
push
shl
xor
ror
pop
inc
cmp
je
push
push
lea
push
push
push
call
jno
add
stos
add
add
popf
jo
lds
pop
lahf
add
xchg
mov
lahf
add
add
stc
call
add
push
add
pop
repnz
call
add
lret
sti
out
fists
aad
mov
fadd
js
push
add
pop
add
add
iret
add
int3
out
add
mov
lea
pop
test
jne
push
not
sub
ror
shr
pop
xor
pop
push
sub
pop
pop
push
sub
pop
pop
push
push
push
lea
push
lea
push
push
call
ja
mov
pushf
add
int
add
add
leave
clc
rcrb
add
rolb
push
add
mov
clc
add
cmc
andl
into
call
add
add
mov
add
add
add
pop
mov
mov
pop
popa
incb
add
jae
aam
bound
pop
pop
push
add
pop
leave
push
shl
inc
pop
ret
mov
push
dec
xor
pop
inc
push
lea
shl
pop
cmp
jne
push
ror
pop
lea
push
rol
sub
pop
mov
push
add
sub
pop
test
je
push
rol
pop
mov
push
inc
sub
shr
pop
add
push
add
shl
lea
shr
pop
cmp
jne
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
cmc
add
add
xchg
add
imul
cltd
add
lret
movl
push
mov
loopne
jle
add
test
add
ret
popl
add
iret
pop
out
mov
add
test
mov
clc
add
and
inc
add
add
push
lea
pop
mov
push
lea
push
call
bound
add
movsl
jno
call
add
add
mov
mov
cwtl
aad
add
xchg
jae
cld
add
mov
loopne
addb
mov
add
add
add
mov
add
add
jbe
pop
mov
roll
hlt
lea
pop
add
cmp
je
push
push
call
test
cltd
add
arpl
add
mov
add
fists
add
add
ror
ljmp
ret
pop
bound
pop
push
pop
iret
mov
mov
add
add
push
add
loop
add
cltd
jb
aam
lods
andb
mov
add
xchg
jl
lods
add
imull
fmull
test
not
add
pop
xor
push
push
push
push
push
push
call
stc
jbe
fiadds
mov
addl
mov
add
add
loop
add
lods
rorl
add
push
add
xchg
in
xchg
add
lods
add
add
loop
xchg
data16
add
add
out
add
add
xchg
add
add
cmc
add
push
cld
jl
mov
add
int3
lea
pop
pop
push
push
call
add
push
add
lea
js
add
mov
push
mov
mov
add
add
mov
mov
add
pop
fisubrl
cmpsl
add
add
add
add
lea
pop
pop
push
inc
sub
add
not
pop
pop
pop
push
sub
rol
pop
leave
push
lea
push
push
push
push
call
add
sahf
roll
imul
xchg
xlat
pusha
jnp
add
jbe
test
test
mov
add
pop
add
fsub
add
call
bound
add
adcl
gs
add
pop
ret
lea
push
sub
sub
shr
add
pop
pop
push
dec
shl
not
pop
pop
push
pop
pop
push
push
lea
push
push
lea
push
call
add
add
repnz
add
cmpsl
jno
add
aad
ror
shll
jnp
mov
add
xchg
int
mov
add
xchg
mov
hlt
add
add
add
add
add
add
jns
bound
add
mov
add
xchg
rorl
pop
pop
push
lea
not
dec
pop
leave
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
lcall
scas
push
pop
add
fmull
mov
add
int
fwait
add
add
add
jns
mov
popf
mov
fildl
loopne
lahf
in
mov
lea
pop
ret
mov
push
lea
push
call
push
jns
pop
fildl
add
int3
add
int
add
repnz
xchg
jmp
add
mov
mov
add
loop
movsb
fdivl
add
flds
lret
add
xlat
fldl
add
add
add
mov
add
shl
out
roll
call
or
push
ror
pop
pop
push
dec
add
pop
pop
push
rol
shl
pop
pop
push
dec
pop
leave
push
rol
shr
rol
pop
ret
xchg
shll
loope
imul
add
push
add
mov
imul
xor
jne
mov
outsl
inc
hlt
jl
insb
mov
sub
fstpl
shll
cltd
push
fistpll
pop
jmp
shlb
mov
pop
pop
sub
cmp
imul
add
repz
lret
jns
std
cmp
inc
xlat
cwtl
jb
fs
xchg
fstps
dec
jae
cmpsb
ss
sbb
popf
push
cmc
inc
mov
outsb
sub
xchg
cmpb
jecxz
cmc
subb
aaa
adc
les
popf
pop
fsqrt
mov
cld
push
sbb
js
test
sbbb
adc
sub
addr16
loopne
and
frndint
ficomps
xor
adc
or
nop
push
pop
push
fcomps
mov
jecxz
add
scas
push
xor
jns
dec
jns
xchg
mov
and
mov
gs
mov
mov
scas
mov
pop
out
mov
jbe
add
clc
shrl
aam
and
dec
iret
jp
adc
pop
dec
pop
push
sub
inc
popa
jle
dec
push
imul
mov
or
adc
sbb
jnp
shll
fstpt
adc
and
pop
jns
out
popa
ljmp
mov
push
sbb
inc
push
xchg
sub
xchg
lret
cltd
lods
xchg
iret
cwtl
mov
out
adcb
and
jmp
inc
sbb
dec
mov
xor
imul
loopne
jae
fldt
xchg
ret
pinsrw
and
mov
xlat
ret
ret
push
ss
int
lahf
mov
lahf
push
and
mov
stos
mov
mov
daa
xor
repz
pop
call
pushf
fstl
test
mov
lea
cmpsb
xor
xchg
sbb
js
mov
sahf
mov
imul
push
aam
sbb
mov
dec
jne
mov
pop
ficompl
cmpsl
jmp
lcall
in
idivb
cli
out
mov
jnp
shlb
scas
dec
jne
push
aaa
movsl
sbb
push
fs
leave
mov
mov
outsb
sub
je
ret
imul
scas
mov
imul
dec
filds
sti
rorl
xchg
out
mov
out
das
ja
mov
ffreep
xchg
dec
pop
jne
push
ds
push
scas
lret
dec
ds
cs
ret
mov
sbb
add
test
mov
call
push
pop
dec
in
cmp
inc
pop
mov
and
stos
call
or
jle
fisttpll
mov
xchg
push
cs
in
lret
xchg
xchg
mov
pop
mov
js
stos
mov
jae
pop
iret
jmp
test
add
xchg
into
lret
mov
inc
repz
cmc
or
int3
iret
xor
fcmovnu
xchg
add
pop
jp
divb
scas
in
or
pop
adc
pushf
adc
stos
stc
mov
pop
dec
inc
sub
push
out
or
mov
xchg
js
mov
cmp
fsts
test
pushf
jg
jno
push
xor
jne
into
in
or
rolb
sub
push
cmc
hlt
rcrb
xchg
es
jg
cmp
jb
jnp
pop
or
mov
xor
mov
cmp
in
subb
mov
mov
dec
shrl
gs
sbb
jge
roll
mov
jo
mov
lods
or
mov
cmpsl
and
shlb
jle
out
sbb
mov
movsb
nop
ss
or
ja
push
inc
hlt
adc
add
arpl
aam
or
fwait
sub
loope
test
xor
lahf
sarl
loopne
stos
popa
popf
in
mov
outsl
loop
pop
sub
repnz
cmp
jle
lock
ss
push
sbb
fiaddl
inc
add
rorl
jecxz
addl
aaa
fisttps
rclb
push
movsl
fistps
sub
pop
xchg
rcr
loope
test
mov
jnp
enter
mov
call
fstpl
test
add
mov
fwait
add
and
xchg
lods
pop
je
xor
inc
fmull
fidivl
cmp
les
test
jns
hlt
lret
lret
mov
jb
aaa
jbe
pop
xchg
mov
and
test
xor
imull
arpl
adcb
push
lret
lahf
mov
mov
out
ja
push
cmp
cmp
ja
xchg
dec
nop
adc
sub
mov
es
into
mov
in
pop
inc
les
pusha
add
fcmovb
scas
xorl
lods
push
xor
mov
add
lret
jmp
insb
scas
sbb
jl
inc
bound
dec
inc
add
in
and
add
je
mov
ss
pop
aaa
xor
jge
inc
mov
add
shrb
bound
cbtw
xor
cli
movsl
call
xchg
jnp
or
shl
mov
shll
fisubs
jns
mov
mov
imul
mov
insl
in
sti
ret
jb
outsl
inc
pushf
rcrl
push
sub
fldl
call
test
imul
push
icebp
mov
mov
inc
cmc
comiss
aas
push
lods
xorb
js
je
lods
mov
mov
dec
mov
scas
xcrypt-cfb
cmpsl
and
bound
xchg
push
xor
push
sub
and
dec
sbb
cmp
pop
jae
or
in
sub
mov
inc
push
aas
and
dec
pop
dec
daa
rorb
sub
push
xlat
pop
xchg
mov
jbe
sbb
xchg
mov
sub
fwait
in
xor
ljmp
repnz
pop
mov
arpl
aaa
push
push
xchg
pop
mov
add
lea
or
xchg
cmp
xor
add
cmp
loope
cmpsb
and
jnp
cwtl
iret
add
shl
into
imul
jb
xlat
into
push
pop
sbb
mov
ss
xchg
xor
mov
lods
lds
iret
xlat
cmp
ret
call
sahf
int
adc
rolb
mov
insb
orb
pop
test
sbb
popf
out
pop
leave
jp
mov
or
nop
jge
jmp
mov
js
cltd
dec
lret
lea
xchg
or
sbb
popa
std
or
orl
push
xchg
and
ja
scas
xchg
mov
pop
lods
mov
add
cmp
arpl
push
call
jle
imul
mov
mov
mov
inc
push
cmp
sbb
mov
xchg
loopne
ror
aas
mov
xor
pop
popf
out
mov
mov
sbb
popa
fld1
int3
adc
mov
repnz
iret
cmc
gs
ja
lret
cmp
pop
jbe
gs
xchg
loope
sarb
jae
jle
ja
fld
add
cmpsl
popfw
das
xor
mov
xchg
clc
fcmovu
iret
add
js
push
push
js
lods
adc
icebp
inc
mov
das
mov
push
push
xor
mov
and
imul
xchg
xchg
push
movsl
push
sub
lea
out
push
jae
sub
data16
pop
lret
cmp
pop
mov
push
rcrl
mov
mov
lahf
out
sbb
adc
das
pop
loopne
inc
int3
mov
mov
mov
xor
jne
fwait
out
imul
add
arpl
fcoml
adcl
or
jmp
popa
call
mov
cwtl
xor
mov
test
leave
mov
ds
dec
outsb
pop
sub
repnz
and
std
in
popa
jl
add
fistps
cmp
jg
xor
cld
inc
in
inc
and
cmp
push
or
cmpsl
fcoms
cs
pop
lret
shr
stc
pop
int3
fimull
out
and
sbb
xor
adc
gs
in
test
inc
xchg
mov
mov
test
cmpsl
push
inc
or
sbb
mov
mov
sub
in
daa
or
stos
adc
stos
mov
int3
test
scas
mov
mov
mov
popf
out
dec
lret
ret
lahf
jnp
xchg
jmp
jmp
clc
aaa
push
popf
or
jle
mov
int
cmc
inc
jl
jbe
test
jmp
shrb
aas
add
into
mov
int3
sbb
pop
mov
sahf
inc
movsl
pop
mov
pop
adc
jecxz
and
jle
repnz
pop
das
or
jnp
dec
addb
pop
sbb
int
xchg
xor
test
in
sbb
lret
xor
fdivl
inc
addr16
movsl
lods
mov
orl
xchg
in
aad
clc
mov
stos
aam
pusha
mov
aas
or
stos
dec
out
add
cltd
in
jns
cmpsb
insb
dec
jmp
dec
jno
pop
test
dec
iret
adc
push
push
jl
inc
xchg
add
fstl
dec
sbb
sbb
adc
xor
mov
adc
push
push
loope
pop
in
fistl
push
add
inc
cmpsb
test
popa
out
inc
mov
repz
xlat
fwait
push
hlt
xchg
jle
adc
int3
push
sub
shrb
cmpb
scas
gs
call
xchg
decb
xchg
add
cmp
push
lcall
push
popf
add
stos
movsb
pusha
inc
sub
jl
insl
cli
xchg
cmpsl
sub
add
sbb
jbe
subb
sbb
bound
inc
mov
out
mov
adc
xchg
xchg
lds
cmp
and
xchg
inc
jl
push
pop
out
jmp
sub
push
sbb
lret
loop
ret
cmp
or
andl
push
cmp
loop
jmp
sarb
mov
mov
jmp
adcb
pop
mov
and
adc
and
sbb
cmp
jne
lods
sub
sub
fstps
xchg
sbb
push
mull
or
or
inc
dec
push
jns
or
push
mov
jge
mov
push
push
into
lcall
jp
das
mov
movsb
stos
lock
inc
ss
out
int3
fstps
jns
dec
mov
scas
lahf
jle
inc
gs
pop
and
mov
fmull
mov
sbb
imul
out
test
dec
cld
xor
fldenv
mov
lods
pop
stos
mov
in
cmpsl
and
call
dec
fiaddl
nop
sbb
inc
jnp
aam
test
shll
insb
aas
push
inc
ret
in
pop
aam
and
pop
sub
lock
mov
cli
out
pop
ja
add
outsb
lock
mov
stos
cs
int3
inc
mov
das
sub
std
sub
ret
jns
xchg
and
divb
ss
inc
test
cmp
and
dec
ret
mov
cmp
push
repnz
sub
test
pushl
xchg
fldcw
cltd
icebp
call
add
sub
and
push
adc
add
mov
lret
ds
iret
sub
jns
mov
pop
mov
mov
xchg
test
fldt
in
xorb
fstps
push
in
int
mov
adc
rcll
inc
gs
adc
lcall
xchg
dec
enter
imul
jbe
outsl
outsb
mov
sbb
xchg
aas
repz
sub
js
sub
xchg
xor
insb
push
incb
dec
xchg
cmpsl
loopne
stos
mov
adc
rorb
mov
into
divl
in
sbb
jae
shlb
or
pop
pushf
sub
mov
mov
sbb
fisubrs
test
sub
xor
imul
push
hlt
mov
in
int
adc
push
insl
dec
sbb
sbb
ds
inc
add
hlt
icebp
mov
clc
stc
scas
sbb
out
push
aaa
sub
cmp
rcrb
mov
and
cmp
andb
aad
loope
testb
mov
xlat
dec
adcb
sahf
and
mov
inc
testl
fiadds
mov
add
add
cmp
adc
ror
jnp
lea
adc
add
or
pop
and
mov
stos
dec
cmpsl
jle
aas
xlat
push
out
xlat
dec
int
hlt
sbb
idivl
lods
adc
jns
mov
xor
jecxz
sti
insb
rep
or
movsb
imul
cmpl
sbb
dec
xor
flds
jmp
fs
xchg
sbb
je
and
pop
mov
or
pop
jp
fwait
sub
cli
jb
cmp
sbb
pop
orl
xor
imul
adc
aam
je
inc
cmc
cmp
and
pop
out
and
jmp
out
dec
inc
in
cmpsl
dec
push
inc
dec
pop
xlat
in
icebp
mov
ret
pop
push
ja
adc
hlt
lock
xor
in
pop
or
int3
sub
push
mov
adc
movsl
jnp
xor
push
int3
cli
lock
pop
xchg
mov
clc
push
andl
push
cmp
jmp
data16
add
enter
and
jmp
cli
pusha
mov
adc
dec
cltd
mov
pusha
and
lea
xor
scas
lahf
in
add
mov
inc
bound
pushf
dec
decl
mov
push
ret
cmp
mov
lret
icebp
testl
sub
xchg
repz
stos
mov
pop
mov
sub
mov
in
stos
xlat
mov
adc
adc
push
cmc
into
sbb
push
jae
sub
jnp
adc
xlat
or
notb
cmp
sarb
inc
test
jno
adcb
addr16
jecxz
out
mov
xchg
mov
rorb
and
pop
push
bound
test
jns
and
test
cs
vaddss
mov
mov
repz
pop
jp
add
or
push
in
fsts
int3
jle
mov
les
cli
cmc
mov
clc
fwait
out
cmp
inc
orl
sbb
jl
adc
repnz
test
mov
inc
lea
test
arpl
js
jmp
pop
iret
movsb
lret
repnz
pop
cmp
jge
inc
idiv
shrb
push
sbb
fistpl
insl
lods
cmp
add
outsl
in
add
mov
aas
xchg
cmp
in
push
dec
rcr
ds
cmp
sti
pop
popa
or
int
xchg
jp
xchg
out
sbb
lock
add
xor
mov
fidivl
inc
add
dec
dec
movsb
dec
add
orl
addr16
pushf
test
xchg
mov
cmp
outsl
into
ja
and
cwtl
xlat
mov
xchg
mov
pop
ret
fisttps
insl
std
dec
pop
shrb
add
ja
xor
arpl
cmp
int3
mov
int
cwtl
sub
data16
es
mov
adc
stos
cmp
pop
inc
dec
jae
mov
movsl
mov
lahf
aad
sahf
sub
xchg
es
sahf
cmp
sbb
inc
subb
loop
sub
std
sbbl
jg
insb
and
data16
xchg
push
aas
pop
lret
or
add
cwtl
lret
pop
vcmpsd
pop
ja
inc
mov
bound
jmp
xchg
and
out
mov
fldt
push
jle
cld
jg
push
push
test
jmp
mov
cmp
push
fwait
push
push
mov
jae
je
icebp
adc
std
xchg
mov
pop
scas
mov
es
jmp
es
arpl
pop
jb
fldl
or
jne
ja
pusha
scas
int3
arpl
movsl
ss
sti
sarb
cs
leave
or
addr16
frstor
ljmp
clc
ja
repz
sub
xchg
pop
lcall
fnstsw
cmpsl
adc
push
cmp
jg
add
addr16
jge
push
les
in
cmp
cmc
mov
aas
fmull
insl
xor
out
movsl
and
xorb
adc
xlat
clc
mov
adc
sbb
xchg
ds
std
mov
ss
ficomps
hlt
outsl
scas
int
and
jecxz
loopne
lret
movsl
loop
inc
or
pop
mull
pusha
adc
fcmovnu
mov
in
adc
pop
repz
jne
stos
in
gs
daa
es
movsb
mov
lret
iret
test
dec
scas
cmc
enter
jno
sbb
sbb
inc
rclb
leave
jg
xchg
lods
and
loop
pop
daa
push
and
add
data16
in
cmpsb
jl
int
xchg
stc
mov
jmp
pop
mov
xchg
pop
jp
cmc
xchg
outsb
test
icebp
aas
and
sbb
push
push
or
sbb
jae
lahf
and
imul
mov
lock
push
imul
inc
cmpsb
in
inc
add
movsb
mov
mov
cwtl
pop
xchg
fsubs
fucomp
pushf
popf
cltd
adc
iret
cmpb
in
pop
sbb
jbe
push
loopne
adc
xchg
mov
rorb
mov
pop
ljmp
push
xor
xchg
jae
and
cmpsb
mov
cltd
outsb
dec
cmp
xchg
je
aas
cli
in
and
pop
mov
dec
lock
outsl
loop,pt
add
cwtl
push
in
out
insb
and
adc
mov
orl
xchg
pusha
mov
push
dec
fldl2t
inc
xchg
jo
mov
in
sbb
mov
xor
pop
xchg
lret
jo
lds
insb
cwtl
cs
dec
xor
fcmovbe
sub
adc
and
fcmovbe
jnp
aad
xchg
sbb
sbb
mov
lea
push
dec
inc
aaa
mov
daa
mov
push
aam
cmpsb
daa
push
shll
movsb
arpl
add
cmp
fldl
push
jb,pt
fmuls
addr16
push
xchg
mov
adc
lods
jo
mov
aam
mov
fcomi
add
mov
push
insb
cmp
jno
movsl
push
add
mov
sarw
mov
pop
test
subb
mov
out
add
or
dec
xchg
mov
aaa
mov
xchg
mov
das
inc
inc
xchg
jl
ljmp
bnd
nop
mov
movsl
aad
push
pushf
insb
fs
xchg
xor
sub
into
lds
lret
mov
push
xchg
std
fdivl
out
mov
shll
pop
lahf
fcomps
xchg
imul
or
je
jp
inc
aam
pop
pop
out
or
and
mulb
push
repnz
test
lahf
cld
cmp
repnz
inc
xchg
iret
adc
push
imul
ret
dec
pop
test
aam
cmp
mov
mov
mov
cs
mov
ret
loop
sahf
sbb
in
in
jnp
pushf
scas
pop
aas
adc
cmp
fdivs
sub
loop
les
aam
lcall
dec
int
dec
aad
cltd
aaa
in
pop
dec
cmc
fsubs
faddp
cmp
xchg
enter
popa
out
mov
addr16
in
dec
inc
sti
mov
inc
and
xchg
fdivrl
ds
pop
push
sbb
test
xorl
into
mov
icebp
cmp
mov
add
or
mov
sub
add
lcall
sbb
dec
cltd
add
gs
jmp
fwait
jl
cli
sub
mov
mov
fs
imul
adc
in
sar
xchg
and
adc
shll
or
pop
imul
dec
sbb
or
xchg
sbb
push
cmpsl
push
fcomps
sub
insl
xchg
ret
cltd
adc
hlt
push
and
mov
test
stc
sub
push
jns
into
xchg
gs
rorb
mov
dec
cmp
mov
loope
notl
inc
shrl
jp
push
sbb
inc
es
mov
inc
inc
dec
outsb
jae
cmp
xchg
roll
xor
jo
sbb
sub
xor
cmpsl
pop
xor
fcomi
mov
fbstp
mov
popf
arpl
scas
fnstsw
cmp
popf
push
xchg
xlat
and
cli
add
fcomps
dec
je
and
fnsave
push
outsb
imul
subl
jp
int3
mov
sub
and
ja
jb
dec
mov
xchg
push
stos
jne
pusha
xor
mov
inc
cmpxchg
sti
add
ret
jecxz
sbb
inc
loope
inc
adc
push
lods
ja
inc
mov
out
imul
jge
xchg
jl
int3
pop
aad
mov
lea
inc
pop
movl
or
push
fcmovnb
inc
pop
mov
push
stos
leave
xchg
negb
mov
mov
mov
or
dec
push
pop
rcll
jg
out
and
jno
sbb
jmp
mov
adc
cmc
gs
faddl
lods
dec
inc
int
fsubl
cmp
aas
popf
in
jecxz
sub
lock
xor
push
fists
out
popa
and
add
xchg
jne
aad
fstl
rolb
mov
cmc
push
mov
icebp
rcll
ljmp
xchg
inc
jg
lcall
mov
test
lea
sbb
ret
add
push
xchg
sbb
or
xchg
xchg
add
shrb
out
sbb
inc
rcrb
cmp
add
and
int
imul
ja
pop
mov
add
pop
lock
int
and
jne
punpcklqdq
lock
add
xor
pop
sub
xorb
ss
cmpsb
mov
cmpsl
inc
cmp
movsb
sbb
std
cs
inc
sub
mov
pop
shrl
jg
sbb
xchg
notl
and
pusha
les
test
fadds
mov
xchg
cltd
and
adc
mov
enter
lods
sbb
aas
and
xchg
pusha
pop
je
push
ret
idiv
je
jne
fdivp
scas
stos
idivl
pop
jno
push
mov
fstl
sub
inc
xor
mov
add
scas
aam
ret
cmp
sti
cmpsb
outsb
lock
pop
fsubs
and
js
and
andl
sbbb
cmpsl
or
dec
cmpb
sub
inc
ds
push
sarl
xchg
sub
xchg
sarb
int3
jb
sbbb
out
scas
and
adc
xchg
call
mov
aas
pusha
mov
sbb
std
sbb
addr16
sub
cmpsl
roll
mov
fidivl
sar
sbb
bound
lret
or
mov
pop
xchg
xchg
and
stc
test
mov
xchg
dec
jne
xchg
and
popf
lods
mov
addl
imull
lea
mov
lret
mov
xchg
icebp
fdivrs
pop
subb
mov
xchg
loop
or
leave
mov
adc
cmc
into
cmp
shrl
mov
adc
cmp
pop
cmp
xchg
or
mov
xchg
mov
lcall
or
add
jbe
test
xor
mov
int3
lods
movsl
inc
sub
inc
sbb
aad
repnz
aam
push
mov
test
xchg
add
sub
sbb
daa
mov
mov
inc
ds
movsl
enter
icebp
push
fadds
jmp
inc
mov
es
jl
adc
mov
stos
sub
lods
gs
push
xchg
in
dec
cltd
or
and
mov
sti
mov
pop
add
mov
mov
hlt
jl
bnd
int
imul
mov
jmp
add
outsb
or
or
out
ret
lret
sbb
das
xor
mov
jl
stos
mulb
call
rol
dec
ficoml
ror
mov
fistpll
divb
mov
inc
inc
les
mov
lock
in
test
pop
xorl
imul
add
and
lds
shrl
hlt
push
pop
jb
lods
add
push
mov
popf
sbb
imul
sbb
in
das
lock
lret
dec
cmp
jo
ficoml
push
sub
jb
loop
ja
cs
ficomps
adc
mov
add
inc
rolb
jb
pusha
jo
outsl
fsubrs
xor
and
insb
mov
enter
push
das
notl
pushf
pusha
jl
xorb
xchg
xchg
push
je
jecxz
xor
fcom
aad
mov
mov
out
inc
jp
in
jmp
mov
rcll
inc
cli
int3
and
pop
mov
loopne
cmpsb
outsb
movsb
mov
push
inc
lret
enter
inc
int3
push
loop
movl
pop
push
or
push
mov
and
fcmovnu
adc
sbbb
or
lods
cmp
push
rolb
cs
push
adcb
jp
fprem1
or
inc
inc
divl
push
push
push
xchg
out
mov
mov
and
xorl
fcoml
jae
adc
scas
push
xlat
jb
fiaddl
lea
dec
fstpl
decb
sub
or
pop
add
lods
xor
xlat
stos
notl
or
stos
mov
out
pop
add
sarb
push
pushf
in
lods
lds
aaa
jno
das
push
xchg
fidivrs
jbe
jle
push
fs
es
fwait
xlat
jnp
inc
xor
jmp
jge
dec
stos
jns
mov
loop
out
fneni(8087
inc
data16
fsubrs
mov
mov
push
sub
shl
fcomps
inc
inc
mov
inc
mov
and
stc
mov
xor
pop
push
icebp
pushf
insb
sbb
sbb
mov
jne
jo
mov
inc
xor
inc
pop
sbb
int
pop
mov
xor
addr16
adc
loope
jl
add
cmp
fwait
mov
aas
or
inc
push
in
out
jg
adc
rorl
cmp
or
xor
add
adc
dec
mov
sbb
imul
mov
dec
out
xor
bound
adcb
je
xchg
outsl
or
xchg
inc
add
push
xlat
shl
jl
nop
xchg
stos
es
adc
jl
ret
inc
jbe
sti
pop
jle
in
fsubs
aaa
rorl
imul
dec
int3
xchg
lret
jbe
clc
lahf
pop
subb
inc
mov
add
push
fwait
xchg
loop
stos
test
scas
xor
adc
and
jmp
pop
xchg
jle
inc
adcb
sub
icebp
and
rcll
mov
out
and
mov
pop
pop
in
add
js
fidivl
and
pushf
jmp
int
add
in
shll
out
inc
inc
mov
sbb
daa
jae
fxch
inc
ds
adc
imul
lret
ret
int
jno
fldl
sbb
pop
je
les
lret
mov
inc
jg
push
lock
outsl
cmc
jbe
jnp
mov
jns
mov
xchg
or
push
idivl
pop
sub
cmpsl
into
dec
adc
pop
sbb
and
and
inc
in
mov
pop
pop
fstpl
fmul
jp
push
out
or
inc
mov
mov
cltd
dec
jae
leave
push
addr16
push
inc
push
dec
push
cld
test
mov
int3
rcl
dec
movsl
mov
or
rorb
arpl
dec
ja
loopne
mov
pushf
push
cmp
add
aas
xor
mov
mov
add
std
mov
sub
aam
adc
into
rclb
aam
push
jae
pop
xchg
inc
mov
inc
adc
xlat
mov
mov
sub
aam
mov
sub
xchg
jae
push
test
out
pause
testl
ss
mov
pop
andl
imul
jmp
lcall
popf
pop
push
cld
xadd
sbb
dec
addr16
sub
popf
mov
out
lods
add
pop
mov
pop
adc
pusha
iret
xchg
icebp
sbb
stos
test
loopne
aad
data16
dec
shr
pusha
mov
fs
jle
push
ret
or
test
add
std
add
daa
sbb
adc
xchg
lea
jecxz
rol
sbb
in
sbbl
push
fwait
push
stos
mov
xor
movsl
and
jns
pop
cmp
mov
sub
popf
mov
into
add
add
imul
je
xor
pop
dec
pushf
lahf
mov
inc
mov
cmpsb
cwtl
push
xchg
or
movsl
enter
inc
hlt
js
xchg
pop
lea
and
popl
cmc
loope
mov
lret
adc
aam
call
jle
rcrb
rcr
push
es
cmc
lret
dec
iret
pop
xchg
dec
mov
adc
mov
xchg
xchg
fcomip
fwait
inc
mov
or
adc
out
out
sbb
fs
sub
repz
sbb
or
arpl
mov
repz
mov
jge
mov
popa
movsb
jne
jle
or
les
outsb
adc
and
in
inc
mov
inc
xorl
andl
xor
inc
out
add
call
push
in
daa
pop
adc
dec
sub
sbb
in
cmp
sub
dec
mov
cmp
movsb
xchg
sbbb
sbb
jecxz
sub
fdiv
mov
and
xor
sbb
xor
jecxz
xchg
mov
or
xor
xchg
negl
cmp
cmpsb
xchg
in
add
push
ficomps
push
popf
ljmp
pop
xor
test
cmp
es
lds
outsb
lods
add
mov
push
pop
inc
pop
fs
int3
test
rcrl
add
inc
aad
movb
out
fidivrl
repz
push
dec
mov
and
lock
cmpsl
repz
jecxz
push
mov
adc
out
cmp
lcall
pop
test
ret
test
les
inc
out
push
cmc
jmp
out
mov
mov
push
leave
call
jp
je
jo
xor
push
dec
and
fmull
add
and
add
mov
cs
xlat
pop
movsb
sbb
loopne
inc
mov
lods
ret
mov
push
push
aad
aad
add
xlat
fadd
cmc
fcmovu
push
in
addb
cs
lcall
scas
cmp
mov
cmp
addr16
xor
xlat
xor
call
shlb
dec
clc
mov
dec
cs
shrl
mov
out
jae
or
lahf
push
sub
jae
iret
mov
das
imul
jmp
cltd
or
pushf
inc
mov
dec
mov
xor
cmpb
xor
mov
enter
lahf
ja
adc
out
xchg
add
ds
xor
xor
and
adc
ds
push
mov
mov
insl
cld
pop
xchg
rcrl
sti
jne
fidivs
xor
pop
into
mov
xlat
clc
mov
sarb
mov
push
jp
fnsave
fs
mov
mov
jo,pn
inc
aas
loopne
gs
dec
sahf
xchg
data16
push
loop
mov
mov
ss
sbb
call
mov
and
icebp
lret
scas
sub
shlb
cltd
fptan
out
pop
popf
jae
cld
test
sbb
sub
mov
int3
dec
sub
movsl
clc
jge
xchg
adc
repz
pop
xchg
xchg
cmp
imul
sbb
mov
jecxz
jp
pop
xchg
mov
int
iret
mov
clc
mov
loope
sub
sbb
cmc
add
mov
mov
scas
mov
stos
jns
pushw
adc
inc
faddl
jae
imul
rcll
mov
mov
jmp
inc
scas
mov
xor
lock
cmc
pop
xor
push
and
or
xchg
xchg
out
push
in
lcall
test
aam
bound
mov
jle
addl
jg
jg
loopne
fdivl
out
adc
sbb
adc
out
subl
pop
dec
mov
mov
mov
adc
adc
jo
out
test
lret
movsl
mov
xchg
xchg
pop
in
cmp
sarl
rcrb
xor
ret
and
jbe
aas
lret
mov
mov
fistl
and
inc
loopne
push
mov
jnp
in
ret
sbb
add
adc
mov
mov
insb
jnp
mov
sub
test
call
mov
test
scas
xor
dec
lods
aad
es
rcrb
popa
pusha
loopne
inc
pop
inc
loope
addb
lea
lret
aas
sar
imul
jns
jb
cltd
cs
aas
lods
add
xchg
test
loope
aas
stos
jp
rcrb
or
mov
hlt
mov
push
orl
test
or
aam
xchg
popf
pop
jge
repz
repz
xchg
cmp
movsb
or
addr16
jmp
and
mov
pop
ja
mov
outsl
lahf
cli
and
into
shll
movsl
dec
mov
sahf
cli
dec
pop
jmp
add
arpl
mov
push
jnp
mov
int3
push
push
push
jl
cld
jl
data16
mov
cs
add
out
mov
push
jg
or
rcll
test
lret
pushf
rcll
add
loopne
cmp
mov
stos
push
pop
xor
and
sub
dec
and
add
dec
lahf
das
jle
and
test
mov
xchg
incl
pop
les
mov
mov
pop
ljmp
xor
lods
inc
inc
cltd
test
sti
incl
xor
sahf
and
test
jne
xor
cmp
imul
test
dec
pop
fimull
cltd
sbb
lods
mov
ljmp
add
lea
jno
aam
jbe
xchg
pushf
call
mov
icebp
jge
fidivrs
test
sub
ss
sub
cmpsl
je
int3
mov
roll
xlat
pusha
mov
xchg
mov
xchg
mov
xchg
pop
sbb
mov
jl
std
incb
inc
cwtl
xchg
pop
mov
jbe
pop
lahf
pop
dec
in
test
testl
das
lock
xchg
push
cmpsb
mov
jae
cmp
sbb
aad
mov
xchg
or
pop
mov
rclb
sub
cmp
fsubl
ljmp
and
gs
sub
stos
movsl
addr16
stos
mov
xor
adcb
clc
xchg
cmp
fdivrs
mov
or
adc
mov
jecxz
xchg
js
aam
mov
mov
cmp
or
dec
adc
mov
stos
push
inc
xchg
addr16
dec
loope
ror
test
xlat
jae
cwtl
xchg
out
mov
mov
push
inc
push
jl
jmp
jne
arpl
fs
mov
adc
sbb
xchg
jnp,pt
jecxz
mov
adc
popf
cli
push
into
hlt
push
jo
jbe
jmp
inc
and
das
push
repnz
push
xor
scas
pop
sub
test
mov
cld
xorb
mov
jnp
ja
das
in
fcmove
jg
imul
inc
push
xorl
scas
inc
mov
jge
ds
movnti
cmpsl
aaa
and
pop
iret
insl
fdivp
fnstcw
adc
stos
pop
adc
mov
pop
mov
xor
xchg
ficompl
in
xor
cmp
push
xchg
push
sbb
out
cmc
mov
mov
nop
mov
stc
into
in
cli
mov
mov
sahf
dec
pop
inc
dec
out
out
in
jmp
add
add
jmp
hlt
iret
sub
mov
and
movsb
out
scas
jb
cmp
popa
dec
inc
add
fistpll
jg
mov
inc
adc
jp
es
pushf
pop
cwtl
adc
ja
push
ja
inc
scas
dec
jmp
mov
xchg
in
mov
cmp
imul
push
push
mov
sarl
dec
clc
jmp
push
pop
push
jmp
jae
jecxz
scas
push
mov
jae
dec
nop
sub
inc
mov
negb
les
push
adc
daa
sub
cmp
sub
iret
cmp
shrl
repnz
int
jmp
leave
rclb
sbb
cmp
xor
arpl
loopne
push
mov
cs
lods
sub
je
aaa
lcall
adc
mov
addr16
jp
push
sbb
sbb
cmp
popa
and
loop
cld
lcall
inc
mov
lahf
arpl
inc
lock
lods
mov
pop
add
lea
and
cmpsl
test
testb
nop
scas
hlt
mov
test
test
add
and
xor
cwtl
movsb
mov
sub
filds
or
addl
inc
xchg
inc
adc
fnstsw
int3
sahf
xor
repnz
sub
lret
sbb
or
adc
cwtl
test
xor
dec
mov
push
in
mov
out
adcl
add
cmp
push
push
shrl
mov
lock
addr16
fdivrp
idivb
add
pop
aas
rclb
mov
dec
iret
push
test
je
jp
aaa
mov
jno
ret
scas
inc
ss
dec
rol
cwtl
mov
mov
jg
dec
inc
add
lock
pop
imul
mov
stos
cli
cmp
fadds
or
lcall
jno
test
nop
sbb
fmull
mov
inc
nop
mov
psubb
cmpsl
popa
fwait
pop
insl
push
or
or
mov
mov
stos
adc
pop
imul
cmp
push
sarb
mov
mov
adc
mov
inc
and
mov
roll
das
insl
sbb
sub
cmp
inc
ret
add
push
and
pop
pop
xor
shrb
sbb
loope
arpl
ljmp
insb
sbb
aaa
push
push
insb
push
jb
cmc
inc
xchg
lods
sbb
mov
mov
xor
aad
loope
push
pop
push
jb
hlt
gs
xchg
rcrb
xor
lock
jae
int
sbb
lods
mov
sbbl
es
inc
jb
xchg
adc
out
mov
sbbb
sbb
mov
fcomps
cmp
nop
jp
fiaddl
mov
sbb
and
loope
adc
fcomps
push
in
xlat
xor
jmp
cwtl
xor
push
push
lret
sbb
and
rol
out
mov
lcall
repz
xchg
and
fisubrs
orl
cmp
test
faddp
push
ljmp
xor
xor
in
or
sbb
inc
int
jl
movntq
sbb
loop
mov
pop
dec
mov
mov
ret
fnstcw
aam
pop
mov
cmp
das
cmp
jbe
and
sbb
jnp
pop
js
aas
movsl
cmp
mov
jns
daa
xlat
push
or
inc
sbb
nop
call
or
ljmp
loope
sti
stos
mov
add
je
or
mov
into
jno
sar
pop
and
cmp
lret
adc
and
ja
add
jne
sbb
mov
repz
sub
sbbl
xor
jae
icebp
lret
add
adc
mov
stos
sahf
jns
insb
decb
mov
dec
test
pop
mov
lcall
test
fisttpll
into
push
rorl
push
jmp
sahf
jne
repnz
mov
push
add
or
aas
sti
lds
cmpsb
push
and
xchg
add
imul
movsl
push
push
in
xchg
leave
lds
jo
mov
adc
sub
pop
adc
xchg
ja,pn
mov
pop
xchg
enter
push
cli
xor
stos
pop
repnz
mov
repz
dec
shll
sbbl
adc
adc
aas
push
mov
sahf
loop
gs
pushf
or
jno
adc
popa
outsl
pushf
out
cwtl
out
mov
push
inc
popa
pop
aas
mov
mov
sub
cmp
sub
cmp
and
add
jo
std
pop
mov
fs
insw
xchg
push
adc
into
jns
add
xlat
int3
lret
cmp
lock
fildll
popa
inc
jp
adc
sti
mov
jb
ljmp
or
loope
or
adc
and
mov
push
ja
mov
jns
xor
mov
test
fmuls
mov
negl
rorb
push
cs
add
pusha
sub
xchg
and
add
fsubrl
std
jge
add
mov
leave
ds
add
jns
push
mov
pop
mov
push
daa
mov
mov
pop
mov
nop
xchg
cmp
push
or
movzbl
mov
test
aad
inc
pop
sub
push
inc
xor
nop
bound
jno
arpl
mov
adc
movsl
cmp
mov
cmp
jmp
dec
icebp
rcl
jae
mov
sahf
ds
gs
orl
jo
push
mov
or
xor
rcl
jmp
stos
jl
add
pop
sub
push
into
pushf
adc
sub
leave
adc
sbb
clc
push
les
jo
sahf
int
adc
insl
cmp
jb
test
pop
outsl
es
adc
int3
xorl
dec
arpl
cs
jbe
shll
sub
lahf
ja
lret
clc
xor
cmp
sub
sbb
xor
cwtl
pop
subl
pushf
cmp
dec
add
idivl
les
lret
inc
xchg
sbb
or
pusha
cmp
stos
ja
inc
fsubl
mov
mov
mov
daa
lea
or
push
sub
dec
insl
pop
push
add
jne
xor
push
out
and
lret
xchg
dec
cmc
cwtl
rolb
dec
imul
ss
jmp
dec
mov
pop
mov
cmp
fwait
cmc
adc
push
dec
inc
inc
ja
push
cmpsb
xchg
sbbl
lret
push
push
das
jle
jb
add
data16
dec
cmp
inc
pop
mov
adc
pop
ret
movsb
out
adc
fdivs
lahf
outsb
daa
in
add
cmp
push
aas
cmp
je,pn
es
mov
inc
dec
out
mov
dec
jecxz
adc
or
adc
int
cmp
into
lds
stos
lock
addr16
pop
push
fisttpll
cld
jbe
lret
or
jo
mov
test
adc
push
popa
or
pop
cmc
xor
pop
and
loopne
movsl
jno
jmp
push
mov
lcall
xchg
or
imul
mov
iret
jb
mov
xor
fildll
mov
sbb
xlat
incb
repz
xlat
in
inc
xchg
rorb
ficoms
or
lods
mov
aad
insl
scas
ret
aas
mov
mov
pop
pop
dec
repz
data16
mov
xor
data16
int
jno
xchg
inc
notb
sbb
jo
jmp
cld
and
mov
adc
mov
push
dec
aam
call
arpl
mov
shl
lods
call
add
std
pop
movsb
data16
mov
push
push
sbb
mov
lcall
pop
sub
mov
mov
das
xchg
shll
inc
inc
push
add
hlt
inc
add
lea
jp
add
pop
divps
cmp
xlat
imul
pop
imul
or
icebp
xchg
add
jl
mov
or
icebp
into
cmp
in
sub
testl
jns
cmpsl
mov
inc
cmp
jle
sub
dec
ds
or
test
mov
inc
xlat
add
mov
xchg
mov
lea
jp
loopne
int3
mov
in
fildll
jle
dec
je
loopne
dec
or
mov
lea
imul
xor
mov
sarl
nop
sti
lret
out
jge
sahf
and
pop
mov
iret
and
push
mov
pop
aam
dec
fiaddl
pop
xchg
sbb
or
in
push
mov
int3
mov
dec
and
imul
cmp
mov
adc
xor
xchg
iret
jl
mov
jge
test
aaa
sbbb
sub
movsb
data16
sahf
mov
and
and
mov
mov
pop
lret
cmp
mov
xchg
movsb
repnz
push
add
or
inc
adcb
sbb
repnz
testb
push
sti
inc
mov
adc
cmpsb
nop
cmp
add
lret
jns
sbb
data16
cmp
add
mov
inc
push
xchg
movsl
mov
aad
inc
sarb
shlb
push
fwait
js
iret
jno
inc
pushf
shrd
pop
cli
cmp
and
mov
adc
or
xchg
jmp
or
test
cwtl
cmp
fsub
sbb
xor
sbb
mov
jecxz
xchg
aas
mov
jmp
pusha
pushf
aam
cmc
loop
int
jl
jecxz
ds
imul
mov
ss
jge,pn
push
dec
aaa
andl
out
inc
jecxz
sbb
adc
mov
cmp
test
and
std
xor
xor
rorl
call
cmpsb
rcrb
or
adc
dec
cmp
dec
arpl
pop
or
ss
mov
or
mov
cltd
push
jg
or
repnz
data16
scas
inc
imul
data16
mov
int3
fsts
aam
xchg
loope
bound
jnp
mov
xor
sbb
xor
inc
and
fdivrp
jl
cmp
cmc
pop
mov
jo
mov
add
mov
cli
pop
repz
movsb
ret
mov
and
imul
orl
movsl
inc
into
call
push
stc
clc
or
out
shrl
jae
icebp
lahf
in
fadds
inc
js
and
rorl
jno
sub
mov
adc
push
jecxz
mov
mov
inc
int3
xor
lcall
data16
lea
dec
sbb
hlt
and
call
lret
mov
pop
enter
mov
int3
mov
xchg
mov
cmp
xor
inc
push
sarl
xchg
pop
aas
pminub
hlt
sub
inc
adc
dec
lret
jmp
xchg
insb
mov
out
inc
mov
dec
aaa
testb
aam
rol
pop
push
mov
divl
jnp
xor
pop
push
and
cmc
sub
jo
movsl
mov
fstps
sbb
hlt
lods
mov
jge
push
inc
adc
xor
sub
and
mov
push
mov
ficomps
or
arpl
and
gs
ljmp
mov
and
sbb
call
xor
test
mov
repz
push
pop
lds
cli
push
mov
push
lret
cld
xor
std
testb
cmp
pop
fidivrs
orb
and
pushf
aad
inc
mov
daa
adc
sub
mov
das
mov
cmp
xor
into
push
mov
sbb
pop
aam
filds
stos
sub
push
mov
mov
sub
pop
inc
jmp
in
xchg
lret
sti
cmpsb
pushl
lahf
sub
cld
std
pusha
adc
cld
mov
mov
dec
cmc
out
cs
test
out
mov
mov
pusha
jle
mov
cld
pop
aas
dec
stos
jg
cmpsb
jp
lock
xchg
enter
lods
testb
stos
je
adc
dec
jmp
cmp
inc
inc
mov
and
dec
push
mov
push
fimuls
repnz
cmp
mov
and
add
in
pop
ret
mov
jns
add
scas
cld
adcl
pop
or
lret
adc
cmpsl
push
inc
xor
js
adc
hlt
rclb
enter
xchg
sbb
icebp
fcoms
push
push
pop
ficoms
in
repz
ds
cs
adc
movsl
mov
ret
aam
xor
xor
pop
scas
jle
arpl
in
xlat
pop
add
in
daa
inc
mov
adc
test
lods
lods
int3
sbb
out
sub
or
insb
and
mov
out
test
in
add
lds
xchg
into
add
pop
mov
arpl
popa
in
sti
aas
inc
std
pop
sbb
mov
sbb
arpl
push
or
push
push
inc
pusha
rol
sbbl
xchg
and
nop
mov
inc
call
mov
mov
shlb
inc
mov
jecxz
push
sbb
pop
dec
add
or
call
jae
lret
lods
xor
pushl
add
mov
add
pushf
push
mov
mov
jae
xchg
xchg
jp
xor
hlt
add
inc
stos
sbb
cwtl
mov
repz
xor
lods
shrl
lahf
int
cld
inc
movl
lods
dec
mov
dec
int3
mov
repnz
mov
shl
and
or
out
jge
mov
or
jle
fwait
jno
sub
movsb
push
xchg
ret
push
pop
mov
sub
mov
int3
lds
loopne
out
xchg
loopne
add
or
pop
mov
mov
pusha
lahf
aad
mov
inc
scas
jp
pop
out
mov
inc
push
jno
imul
adc
rclb
fwait
fwait
ss
mov
push
nop
ret
jge
sub
mov
or
pop
addr16
das
out
push
daa
jnp
pop
fwait
mov
test
sub
lret
pop
push
lds
adc
jmp
xor
xor
add
addr16
jg
mov
in
add
cmp
jno
xchg
in
data16
lahf
test
mov
push
jnp
mov
repnz
pop
adc
addr16
mov
and
xor
jle
xor
and
in
pushf
and
sub
inc
xor
pop
push
cmp
stos
fidivl
sti
mov
sbb
ret
push
dec
sub
or
jecxz
jo
out
lock
dec
sbb
pushf
fst
andb
adc
xor
bound
ljmp
pop
jp
jbe
dec
sub
and
xor
stos
pop
popf
mov
xor
negb
movsl
add
mov
pop
sahf
stc
pop
push
mov
jmp
movsl
lret
sbb
sti
stc
sarb
or
aad
out
xchg
adc
cmp
dec
mov
mov
mov
mov
cwtl
out
adc
pusha
adc
call
mov
sub
fmull
repnz
scas
push
int3
inc
enter
xor
sarl
xchg
dec
add
push
inc
fwait
pop
rcr
push
add
push
mov
inc
jb
popf
mov
push
mov
lcall
adc
insb
mov
fwait
data16
jl,pt
dec
ret
sub
pavgw
shll
xor
imul
sub
dec
gs
jmp
movsb
sbb
inc
jmp
xchg
addr16
jg
repz
mov
xchg
mov
imul
add
inc
or
js
pop
cmp
push
outsl
ss
xchg
or
or
test
hlt
inc
lods
pop
lahf
adc
or
add
sahf
and
adc
mov
jno
stos
or
aam
inc
mov
mov
test
jmp
div
out
inc
adc
add
pop
je
dec
outsl
dec
sti
jg
cmp
xlat
rorl
mov
mov
div
adcl
out
les
sbb
test
test
out
mov
jge
dec
ja
jle
jl
out
lock
fsts
sti
xorl
scas
fldl
ljmp
cmp
add
ror
aas
mov
add
ljmp
hlt
loopne
in
lcall
iret
xor
jmp
cmp
inc
cmp
addl
repnz
add
shlb
in
stc
inc
mov
jno
sub
sbb
push
ret
insb
adc
dec
movsl
push
fidivrl
std
das
sbb
divb
popf
mov
adc
adc
movsl
out
ret
mov
add
pop
xchg
xor
sbb
xchg
sbb
adc
cmp
test
stc
jno
xor
loope
ljmp
mov
sti
cmpsl
dec
jne
pop
lods
aam
push
in
in
popf
out
aad
push
sbb
xchg
in
pop
dec
mov
sub
dec
dec
test
pop
push
clc
into
je
add
orl
out
inc
mov
cs
dec
inc
push
loope
mov
push
std
das
adc
jmp
fistpl
ja
sbb
or
sub
xchg
pop
mov
test
scas
aad
pop
lds
lahf
mov
je
test
bound
pop
lea
xor
dec
inc
jecxz
xchg
jecxz
gs
in
mov
shll
stos
mov
push
nop
jnp
lea
jo
scas
add
or
stos
inc
jno
mov
jno
cmpsb
adc
xchg
ret
sub
stc
push
jnp
inc
das
ret
mov
cmp
mov
dec
pop
adc
xor
hlt
outsb
inc
pushf
stos
xchg
sub
push
lret
sbb
les
movsb
es
arpl
adc
cli
xchg
ss
pop
negl
cmc
ljmp
pop
dec
int3
xchg
call
cmc
insl
out
shll
sbbl
fsubrs
mov
push
leave
and
pop
dec
and
add
out
js
test
add
cmp
push
sbb
les
pushf
sub
xchg
hlt
jl
cltd
lods
mov
lret
xlat
and
mov
sar
mov
in
lcall
out
inc
push
xchg
push
inc
rclb
mov
adcb
dec
inc
ss
jne
les
xchg
nop
test
fwait
cmp
shl
ja
sahf
mov
adc
dec
movsb
stos
cmp
sbb
ja
cmp
mov
mov
add
insl
dec
sbbl
fwait
pushf
inc
iret
push
inc
je
dec
jmp
add
jl
mov
mov
jp
xor
mov
popa
sarl
jmp
pop
xchg
cmpsb
mov
mov
sbb
stos
cwtl
std
iret
pusha
jmp
popf
mov
lret
push
add
in
mov
cmpsl
lods
sbb
frstor
call
adc
inc
sub
push
adc
ja
lods
jecxz
push
ret
lahf
xchg
or
adc
lods
jnp
add
sub
rolb
or
cwtl
arpl
sub
addb
sub
add
loope
aas
rclb
frstor
adc
sbb
pop
adc
inc
pop
dec
or
lea
mov
pop
leave
push
test
rorl
addr16
enter
rcl
mov
popa
cli
inc
xor
lods
mov
xchg
xchg
or
mov
pop
cmp
stos
ds
mov
test
inc
push
jae
jno
aam
mov
pop
bnd
push
repnz
div
jns
fs
cmp
loop
jb
add
cmp
icebp
mov
imul
lcall
push
cs
xlat
jmp
lds
push
push
push
sub
lret
push
or
xchg
fisttps
sbb
sub
imul
addr16
inc
in
imul
xchg
loop
daa
lods
sti
and
std
jb
xor
pop
loop
cli
sub
mov
or
mov
inc
jle
mov
mov
pop
cmp
mov
dec
fidivs
movsb
fmul
sarb
jp
outsb
jge
dec
pusha
leave
nop
jno
imul
cltd
stos
sbb
jo
cmp
sbb
lods
loopne
movsb
push
or
repnz
test
jp
mov
or
inc
ja
imul
inc
cmp
jb
or
pusha
xor
cmc
sbb
nop
cmpb
jns
inc
imul
jb
leave
bound
xor
mov
sarb
and
and
loop
xchg
fimull
call
mov
push
sub
add
inc
lret
enter
xchg
push
ret
add
and
add
ds
push
pop
clc
mov
out
fyl2xp1
mov
insl
notb
xchg
imul
mov
ficoms
jne
push
xor
sbb
dec
iret
push
dec
or
inc
out
inc
repz
inc
xchg
push
mov
or
inc
loope
push
jb
adc
cmp
iret
aad
pop
jg
std
adc
gs
jo
lea
jecxz
negl
dec
jns
jb
push
fstps
or
js
mov
jmp
aas
mov
insb
or
fstpl
dec
icebp
xor
dec
les
out
out
hlt
mov
inc
aas
mov
scas
mov
out
inc
scas
lock
outsb
sti
mov
popa
jle
insl
push
cli
inc
scas
scas
notl
bswap
mov
test
daa
nop
sbb
mov
ja
cmp
out
mov
loop
adc
cmp
dec
nop
inc
xchg
je,pt
sar
loop
mov
jmp
cmpsl
pop
mov
fsqrt
lcall
mov
inc
aam
add
xor
rcrl
orl
cmp
xorb
jge
fchs
cli
dec
into
aam
cld
mov
pop
push
test
push
mov
push
mov
cltd
das
fmull
inc
aaa
fwait
leave
rcr
inc
adc
sbb
mov
rcrb
jnp
aad
stos
push
and
jo
pop
icebp
jp
adc
lock
mov
xor
adc
gs
sbb
mov
adc
mov
dec
sub
icebp
stc
adc
sub
mov
xor
sbb
adc
hlt
repnz
sub
lea
push
movsl
xchg
in
std
loopne
ror
orl
jae
cs
push
addr16
sbb
imulb
leave
stos
jp
sbb
jo
mov
cltd
or
cld
mov
imul
cli
jnp
add
cmpsl
cmc
pop
add
imul
mov
inc
loopne
sarl
inc
jg
push
jmp
data16
movsl
xchg
jge
mov
das
ja
xchg
sub
mov
mov
pop
pushf
out
sarb
cmp
dec
js
cmpb
cwtl
out
mov
test
and
mov
sub
jnp
and
ret
mov
xchg
dec
cmp
mov
daa
adc
adc
inc
cmp
xchg
popa
lods
adc
test
ret
ds
cmp
mov
ror
repz
popf
and
xchg
cmp
in
jbe
xor
shll
cwtl
scas
inc
push
jg
sub
or
push
das
xor
pop
cld
inc
mov
add
dec
mov
jmp
bound
dec
xchg
and
ret
mov
pop
vpmacssdd
dec
mov
pop
and
jb
xor
loopne
fs
out
hlt
xchg
stos
sahf
fs
ficoms
outsb
jnp,pn
dec
ffreep
pop
or
outsb
aas
mov
jecxz
in
out
or
lea
sbb
sbb
sbb
ror
pop
inc
imul
ftst
cld
scas
imul
out
outsl
fdivrp
sub
mov
cltd
call
sub
pop
shr
xor
aaa
fdivr
cmpsl
dec
push
or
sti
sar
inc
cmp
out
cmpsb
out
ja
dec
jno
push
call
shll
mov
out
idivl
mov
cmp
imul
push
lea
or
cmp
cmpl
and
shr
jmp
sarb
mov
imul
pop
movsl
aas
adc
ljmp
add
adc
push
jle
ss
xor
movsl
test
pusha
sti
push
mov
mov
xchg
or
add
xchg
jnp
fwait
test
add
leave
and
cmp
sub
icebp
stos
dec
push
out
push
stos
int3
roll
lahf
jns
xchg
fadds
bound
rcrl
call
icebp
dec
dec
fs
mov
add
jae
roll
int3
mov
jb
movsl
dec
test
sbb
sub
push
pop
ja
jg
loope
clc
aam
push
into
clc
cwtl
push
lret
push
cmpsl
cmp
call
pop
in
les
cmc
push
sub
scas
les
add
in
cmp
sbb
mov
fwait
cmp
sbb
mov
leave
rol
orl
mov
shll
xchg
clc
lods
shl
xchg
xchg
jnp
arpl
ds
jns
pop
jb
jmp
sub
jg
xor
inc
sarb
and
push
pop
mov
inc
or
add
mov
pop
mov
bound
fs
pop
mov
pop
push
jmp
xchg
popa
xchg
popf
cmp
mov
jp
sbb
cmp
roll
loope
orl
cld
cmp
push
stc
or
xchg
hlt
aaa
ficoml
js
out
mov
hlt
repnz
es
or
fisttpll
lods
pop
pop
imul
sub
xor
pop
repz
in
insl
inc
sub
test
add
jo
mov
incb
cmpb
mov
pop
and
roll
ret
in
cli
sub
xor
test
shll
push
sbb
cmp
shrl
mov
push
ret
out
stos
arpl
pusha
test
test
cli
fbld
das
adc
test
sbb
pop
push
push
mov
add
imull
xchg
loope
fimull
mov
add
clc
push
lock
pop
xor
jns
testb
jne
in
call
mov
dec
push
pop
xchg
outsl
push
sub
mov
icebp
out
xchg
xchg
pushf
mov
xor
push
aad
jns
cmc
mov
lods
jmp
enter
xchg
xchg
nop
nop
mov
dec
rol
or
enter
or
adc
lods
sbb
mov
sbb
icebp
outsb
int3
js
cli
mov
loop
sbb
in
ja
adc
add
inc
adc
pop
inc
outsl
cmc
sbb
popa
jae
cmp
jmp
pop
push
push
mov
insb
jl
adc
imulb
mov
enter
pop
pusha
pop
inc
sub
cltd
pusha
xor
mov
clc
jbe
shrb
xchg
push
js
or
je
fcoms
fcomip
into
push
mov
lds
stos
dec
push
jns
jle
push
pop
enter
lcall
mov
jo
sbb
fdivs
insl
cmp
mov
jle
cmpl
push
push
mov
popa
and
jb
xor
push
in
pop
leave
adc
cmc
rcll
in
mov
mov
movntps
or
jb
ss
dec
and
inc
lods
sar
push
jb
fwait
push
notl
adc
movsb
jl
cmp
lea
inc
dec
xchg
jns
cmp
addr16
aas
test
fs
mov
xor
adc
mov
out
mov
ret
test
jg
jb
and
or
mov
ret
push
xor
mov
push
lods
inc
pop
gs
mov
sub
push
push
add
pop
cmpsb
xorl
mov
cli
mov
and
pop
push
pop
dec
lret
dec
cmp
fs
push
cmpb
dec
repz
hlt
ja
dec
enter
mov
xlat
jno
dec
pop
mov
mov
in
push
cmp
test
sahf
subl
mov
in
xchg
inc
je
sbb
fxch
xor
xor
stos
push
jb
mov
pop
cli
xchg
das
jp
and
icebp
dec
in
cmp
fdivrp
adc
outsb
cs
jbe
test
inc
xchg
lock
fdivrl
mov
in
inc
push
fldt
lcall
out
arpl
jae
mov
popa
dec
lahf
inc
xor
or
cmc
repz
jno
jle
cmp
arpl
std
int
xchg
jbe
push
pop
fsubrs
inc
xlat
jae
test
xchg
push
stc
fstpt
xor
lods
loopne
inc
adc
sbb
push
mov
out
push
adc
loopne
fnstenv
outsb
jl
out
mov
mov
push
sti
popa
repnz
repz
or
mov
adc
sbb
mov
sub
repz
inc
idiv
and
cld
adc
test
pop
aam
or
int3
mov
imul
adc
loopne
mov
pop
xchg
cmpl
scas
loop
and
inc
popf
push
sbb
fbstp
mov
fisttps
jno
mov
push
sbb
movsb
pop
pop
mov
xchg
mov
loope
addr16
imul
and
pop
dec
mov
movsl
or
outsb
add
mov
pop
inc
out
push
hlt
and
mov
xor
mov
inc
push
imull
je
xchg
inc
or
sbb
xor
out
pop
fcomp
dec
test
mov
cmp
insb
outsl
daa
or
das
jne
jl
idivl
xlat
xor
mov
jno
sub
push
loope
addr16
mov
jmp
push
decb
inc
adc
loop
aad
sbb
nop
jne
mov
xchg
cmp
pop
and
jns
call
dec
in
int
mov
loope
mov
mov
ja
sti
sub
outsl
cmp
mov
sbb
aaa
xchg
add
das
scas
loopne
dec
add
ret
cld
int3
cmp
dec
xchg
movsb
cmp
mov
mov
shrb
cmp
mov
mov
dec
jbe
das
xor
mov
jle
or
add
mov
testl
pushf
push
outsl
aaa
movsb
mov
xchg
ffree
sub
loope
dec
inc
arpl
in
cs
inc
inc
jle
dec
mov
sub
addl
xchg
mov
sub
xchg
add
lret
mov
and
cwtl
das
mov
bound
jns
rorl
and
mov
fisttpll
mov
rclb
sbb
jnp
js
jmp
ds
das
loop
imul
mov
mov
out
outsb
jg
add
out
gs
adc
dec
fsubrl
or
dec
popf
fisttps
pop
pop
mov
jg
and
leave
je
pushw
inc
ret
add
fists
jmp
sub
scas
and
rorb
ss
scas
out
and
cli
enter
popf
adc
pop
idivb
roll
jl
fimuls
lods
pop
jecxz
test
out
xchg
leave
cmpsl
adc
jl
sub
xlat
push
out
mov
mov
jbe
idivb
push
push
jmp
and
cld
in
dec
mov
add
jns
jne
mov
scas
dec
add
add
cmc
adc
in
push
fldl
arpl
and
call
and
cmp
mov
jns
mov
jg
or
jg
xchg
mov
mov
pop
ror
fmuls
adc
cmp
lods
mov
es
sbb
loop
loopne
dec
repnz
sub
push
jg
cmp
loopne
das
xlat
pop
xor
xchg
add
std
adc
mov
fsub
pop
jae
lods
or
and
clc
out
in
cli
dec
pop
push
rorl
testl
call
icebp
adc
insb
jne
jp
or
inc
out
add
jecxz
and
jle
xchg
out
jae
cmc
arpl
popa
testb
jp
arpl
adc
mov
testl
notb
or
lods
imul
add
add
sub
push
jo
pop
sub
or
dec
rcll
jge
xchg
lret
test
gs
or
jge
dec
pop
fstpl
xor
leave
dec
mov
mov
or
inc
je
outsb
out
daa
sti
fs
cwtl
sar
fistl
pop
jmp
cmp
xlat
hlt
xchg
push
push
dec
bswap
fmuls
insl
adcb
ss
push
stos
pop
and
mov
pop
xchg
pop
inc
lret
pop
imul
inc
dec
hlt
pop
mov
jae
add
mov
jnp
xchg
xor
xor
xchg
inc
popf
in
imul
add
jo
and
and
dec
in
aad
cmc
js
icebp
cs
je
out
rclb
mov
test
or
sbb
in
repz
pcmpeqd
jbe
xor
mov
or
cli
xchg
aad
add
inc
jae
or
mov
inc
rorl
push
pop
stc
je
push
out
mov
sub
or
fiaddl
arpl
sub
fptan
or
js
and
dec
aam
add
mov
lcall
data16
jecxz
or
fcmovnb
cmpb
push
scas
pop
clc
out
imul
push
mov
nop
pop
adc
lds
popa
ljmp
mov
sub
adc
mov
dec
push
js
sar
mov
es
outsb
mull
mov
imul
imul
sbb
push
mov
ja
ss
adc
or
imul
fstl
mov
popa
push
lds
sub
and
sbb
call
inc
add
fsubrl
aaa
and
in
aas
pushf
jns
sub
sbbb
mov
mov
xchg
je
xor
inc
icebp
aaa
fiadds
stos
and
mov
pop
sub
cs
shrb
fisttpl
adc
mov
out
adc
jo
cs
iret
out
sbb
aas
or
imul
push
mov
add
ja
push
aas
mov
jg
lret
mov
jg
out
lret
iret
stc
pop
scas
sbb
rcll
adc
push
mov
cmpl
push
lods
out
mov
add
in
scas
mov
daa
rcrb
lock
pushf
mov
mov
and
and
pop
inc
cmp
movsb
or
in
enter
ljmp
jecxz
pop
mov
dec
lock
and
mov
ds
xlat
stos
sbb
push
mov
jbe
gs
das
test
cmp
popa
mov
inc
lods
fnstenv
mov
ja
pushf
scas
or
pop
dec
int
loop
stos
nop
add
jp
jecxz
imul
ljmp
xchg
lret
rcr
hlt
jecxz
movsl
or
jp
lret
fidivrs
xorb
xor
leave
and
outsb
pop
mov
jns
inc
add
jmp
pop
and
and
and
fisubrs
or
push
mov
imul
xchg
cmp
xchg
adc
add
fwait
das
int3
mov
and
or
pop
pop
xchg
outsl
insb
adc
inc
jno
fdecstp
dec
test
loope
ret
pushf
roll
rolb
sarb
aad
mov
packuswb
loopne
scas
add
jns
andb
push
jae
inc
and
inc
fdivs
sbb
xchg
sub
sub
stos
dec
add
lods
movsl
icebp
jnp
cli
lahf
adc
push
jmp
test
adc
inc
and
cmp
shlb
jmp
lahf
pop
data16
push
add
inc
add
jge
inc
xor
mov
push
lret
pop
and
or
clc
outsb
sbb
scas
xchg
lods
push
mov
dec
mov
jge
push
and
lods
aad
xor
push
ja
mov
mov
cltd
loopne
test
lahf
and
sti
es
loop
pop
shll
fcomps
xchg
int3
shr
push
inc
adc
push
rcrb
icebp
inc
ja
mov
adc
or
mov
je
divb
lahf
stc
dec
dec
jle
cmp
push
shll
loop
mov
imul
int3
adcb
adc
dec
pop
loope
push
fcoms
jge
and
mov
sahf
jae
and
pusha
mov
nop
insb
enter
out
mov
and
scas
fldl
jp
inc
mov
data16
pop
iret
or
sahf
xchg
fs
test
ds
mov
daa
lahf
adc
xor
xlat
inc
outsb
pop
test
jle
cmp
xchg
or
movsb
pop
sub
xchg
push
loop
loop
sbb
pop
sub
add
loop
nop
add
out
daa
sbb
lea
and
inc
sbb
cs
dec
adc
cmpsb
push
cltd
dec
test
in
xchg
cmp
inc
test
push
inc
and
rorb
int
pop
sub
pop
setns
in
mov
pop
out
repz
mov
jns
in
push
ds
mov
out
insl
jg
dec
popa
inc
pop
xor
loopne
js
jecxz
cmc
mov
xchg
movsl
xor
fs
nop
xchg
out
cmpsb
or
mov
push
cmpsb
xlat
mov
pop
aaa
or
push
ss
jmp
pop
fcoml
pushf
add
lret
es
out
test
dec
adc
cmp
sub
xlat
aad
jmp
ficomps
adc
ret
push
cli
mov
aad
inc
xor
std
fsubl
sahf
xor
inc
or
cmpsb
dec
and
mov
xor
push
mov
or
jnp
shll
into
or
push
ljmp
pop
ja
mov
les
frstor
push
xchg
fxch
and
stos
adc
add
jecxz
xor
int
incl
jmp
xchg
loopne
push
jb
cmp
and
lret
mov
aas
push
addr16
cmc
pop
mov
fdivp
pop
scas
lret
mov
sbb
and
xor
lea
scas
or
cwtl
xlat
mov
sbb
popf
lock
int3
push
idiv
ljmp
fdivrs
xor
ror
mov
xchg
pop
and
cmc
shlb
bswap
int3
cmc
or
inc
xor
push
and
mov
sub
loopne
movb
mov
mov
xchg
fs
data16
jnp
sarl
fcomip
adc
pop
stos
cmpsb
rcr
fsubs
and
test
pop
ljmp
loopne
movsl
bound
push
inc
jne
sub
pop
push
push
pusha
mov
sub
leave
sub
jl
js
out
test
in
xor
les
pop
xchg
dec
and
test
inc
jnp
pop
hlt
mov
outsl
jl
jmp
leave
jae
adc
xchg
idivb
std
jo
scas
xchg
inc
mov
jno
sub
jne
pop
ja
jg
adc
pop
mov
jmp
dec
xor
ret
insl
ss
inc
pop
xor
fisubs
repnz
xchg
xchg
cs
sub
adc
mov
je
aaa
cmp
inc
ss
icebp
stc
sub
aad
xchg
scas
cmp
pop
pop
mov
push
lret
notb
fisubs
scas
sub
enter
std
or
cld
mov
adc
frstor
cmp
mov
dec
mov
test
ja
inc
test
jmp
sbb
test
das
xchg
mov
call
jnp
jmp
psrld
sub
int3
mov
sbb
mov
pushf
inc
pop
int
cli
cli
push
repnz
jns
out
push
dec
adc
cli
mov
dec
or
mov
pop
pop
divps
loopne
inc
mov
loope
shll
sub
pop
out
and
add
lds
pop
pop
mov
fisubs
sbb
xor
jnp
jae
lret
leave
lahf
lods
mov
jg
jmp
popf
jae
xlat
incb
inc
nop
aas
rolb
mov
sbb
inc
and
inc
fnstsw
pop
push
xchg
aaa
test
xor
or
push
jns
and
cli
or
jo
js
lock
push
rolb
adc
data16
pop
inc
and
into
mov
enter
int3
sahf
stc
mov
jne
clc
movsb
sbb
mov
sbb
sti
shll
lret
push
sbb
out
sbb
fwait
inc
dec
mov
jo
sbbl
xor
xor
add
or
test
loop
mov
mov
andb
in
jp
sbb
sub
imul
int3
push
std
call
fistl
push
xor
pop
push
mov
push
push
mov
sub
iret
loope
xchg
mov
adcl
roll
cmp
and
sbb
paddq
mov
or
push
push
scas
icebp
add
pop
pop
jge
mov
push
lret
sub
jl
scas
push
inc
xchg
in
pop
cmpsb
adc
ljmp
cmovge
fiadds
outsb
inc
movsl
in
fwait
jmp
leave
cld
cmp
or
mov
xor
mov
dec
inc
push
sarb
mov
add
add
fsts
in
dec
inc
push
addr16
in
push
outsl
shlb
cltd
dec
push
pop
ret
push
sbb
shl
push
push
xor
sbb
test
aad
fcoml
rolb
push
in
mov
in
xchg
in
test
mov
dec
xchg
add
add
inc
jg
std
pop
mov
push
sbb
xchg
movsl
cmp
sbb
push
divb
fcmovb
sarb
cli
and
ljmp
pushf
jne
xchg
push
iret
add
xor
popa
lret
imul
fldl
in
enter
out
in
cld
ss
rolb
mov
dec
jge
push
fwait
cmc
mov
lahf
jb
jp
jno
out
out
pop
jne
ret
pusha
xchg
divl
adc
adc
test
mov
mov
stc
pop
fstpt
sbb
int
pop
sbb
fmull
sub
push
subb
xlat
dec
popf
das
adc
xlat
popf
cmp
clc
pop
add
cmc
mov
shrl
add
int
cld
push
mov
sarl
add
mov
and
lods
sahf
lahf
cmp
imul
pop
outsl
out
fistps
jo
subb
rclb
mov
mov
pop
xor
mov
push
and
cmp
sbb
jp
inc
jae
jmp
inc
dec
into
pop
or
nop
outsl
mov
in
mov
fadds
xchg
icebp
sub
bound
int
adc
cmp
popf
mov
out
addl
or
jb
pop
push
lret
ss
sbb
or
sub
popa
adc
xchg
out
adc
stos
xchg
shll
lock
loop
xlat
adc
xchg
mov
mov
leave
repnz
inc
xchg
enter
scas
inc
adc
in
cs
fsts
and
out
insl
dec
insb
sub
inc
jb
pop
sbb
inc
mov
adc
xor
cmc
pop
xchg
mov
aas
dec
mov
push
and
xor
dec
inc
sbb
add
int3
test
lods
loop
mov
loop
fcompl
in
mov
inc
xor
cli
addr16
pushf
icebp
inc
out
mov
mul
testl
jmp
decl
inc
adc
outsb
mov
dec
fwait
aad
daa
flds
xor
out
jbe
or
mov
pop
loope
scas
scas
aaa
push
hlt
arpl
inc
pop
fs
pop
push
fsubrl
mov
cs
pop
std
jbe
sbb
jo
lock
mov
jle
sti
or
xor
mov
movsb
es
pop
mov
pop
and
push
shlb
bound
adc
mov
mov
lods
adc
xor
adc
loop
pop
push
clc
ja
stc
xor
icebp
and
cs
sbb
push
das
inc
sbb
pop
icebp
dec
pop
aas
arpl
or
out
or
mov
dec
addr16
fwait
shl
pop
sbb
or
cwtl
lods
popfw
aas
xor
repz
cmp
out
leave
and
jnp
pop
adc
jno
loope
icebp
push
xor
insl
and
push
adc
mov
cltd
outsb
jg
sbb
push
xlat
lds
push
mov
inc
or
js
cltd
fsubs
lret
test
das
sbb
mov
mov
mov
mov
mov
sub
cmp
ds
mov
outsl
push
mov
jno
fs
ja
jbe
pop
xor
shl
sbb
sub
mov
lods
lods
push
xor
scas
je
add
push
out
stc
xor
loop
and
mov
ss
lock
test
push
bound
add
or
aam
test
adc
outsb
fimull
out
fdivrp
inc
loopne
pushf
push
cmp
cmp
dec
lea
lods
push
mov
out
inc
lea
scas
fs
pop
push
stc
adc
adc
sbb
xor
cli
rorl
mov
mov
sub
call
dec
or
cmpsb
lock
int3
add
cwtl
pusha
xchg
sti
and
cmp
testl
sub
push
pushf
pop
cmp
add
bound
mov
cmp
in
mov
mov
mov
cmp
lea
filds
or
nop
maskmovq
cmp
jnp
ja
dec
call
dec
scas
pop
movsl
imul
inc
add
inc
dec
jb
and
pop
xchg
out
xor
lret
jge
sub
leave
inc
jns
sbb
push
push
xor
or
push
das
and
rcrb
rcrb
insb
dec
adc
popa
pop
mov
and
nop
les
icebp
stos
stos
les
jp
popa
js
rol
pop
inc
sub
mov
pop
mov
cmp
mov
sub
jnp
and
cmpsl
popf
outsb
stos
jle
dec
testb
jb
sahf
jmp
pusha
lods
jmp
loop
cs
add
lret
mov
gs
inc
mov
inc
movsl
mov
leave
out
test
dec
cmc
or
pop
cltd
inc
pop
fisubl
outsl
or
xchg
add
sar
xchg
scas
shrb
mov
dec
push
and
mov
xor
enter
and
push
aad
cli
fimuls
adc
sahf
divb
jne
sbb
cld
adc
fcomps
icebp
mov
xchg
pop
jno
lret
popf
inc
daa
sbb
pop
push
fadds
daa
inc
and
cmpb
stos
fstl
mov
xor
out
pop
mov
xchg
sbb
mov
jne
imul
jno
inc
sub
cmpsl
mov
mov
add
ss
sbb
inc
xchg
movsl
test
or
cmp
or
pop
enter
fsub
mov
cs
xor
sti
mov
dec
repnz
and
sub
test
jmp
in
adc
cs
jmp
inc
pop
into
jle
test
jle
sub
mov
cwtl
pop
adc
and
xor
insb
mov
mov
loop
mov
pop
addl
push
mov
pop
fdivrl
jle
fxch
jg
decb
movb
fistps
push
push
ret
jecxz
xor
mov
jne
cmp
pushf
cs
lds
push
xchg
push
mov
pop
test
push
mov
sub
lods
test
out
test
add
xlat
mov
lods
fld
sbb
cmp
movsb
sahf
lea
clc
dec
mov
test
test
ljmp
jmp
cmpsb
sub
bound
daa
mov
shl
xor
ja
or
rolb
je
gs
cmp
inc
out
mov
pusha
jge
xor
arpl
or
icebp
xorb
imul
mov
dec
xchg
popa
and
pop
sbb
lods
push
xorb
dec
mov
shll
test
inc
dec
mov
jo
out
mov
enter
dec
add
push
lahf
ljmp
mov
or
notl
push
cmp
cmp
ljmp
imul
ficomps
gs
jle
push
cli
aad
dec
xchg
inc
xor
addr16
in
push
mov
es
adc
dec
xchg
shl
jae
mov
rorl
push
aam
push
iret
or
stos
dec
into
ds
orb
jmp
sub
and
movsl
xchg
ljmp
in
ljmp
xor
xor
daa
imull
xor
in
push
xor
pop
push
xchg
shr
sti
call
test
add
jge
push
pusha
out
arpl
cmp
adc
mov
popf
dec
out
jecxz
inc
test
dec
sbb
gs
pushf
imul
and
pop
mov
and
mov
xlat
dec
pusha
add
xor
push
pusha
jl
dec
xchg
fdivr
arpl
cmpsl
sar
inc
mov
adc
xor
dec
sub
push
clc
xchg
pop
mov
mov
int3
sub
repz
mov
dec
cmp
clc
push
adc
insl
lret
mov
call
lea
loope
lods
dec
pop
sub
push
pushf
add
test
push
jge
xchg
pop
repz
pop
in
dec
shrb
daa
add
pop
mov
lahf
mov
jecxz
and
mov
sub
enter
repnz
ret
ja
ja
lock
aam
jge
rorb
add
sbb
or
pop
pop
inc
loopne
jl
fstps
cld
mov
jnp
fbstp
das
fnstenv
add
ficomps
inc
add
and
jbe
les
jne
ljmp
jl
xor
pop
rclb
jns
xchg
mov
loop
push
mov
pop
inc
pop
jp
dec
pop
call
inc
pop
aad
xchg
sub
ja
shrl
sbb
push
popa
inc
dec
outsb
enter
sub
push
sbb
bound
push
mov
pop
pop
adc
xchg
or
mov
scas
mov
add
outsl
cwtl
push
mov
xchg
cmpsl
nop
ljmp
mov
add
pop
bound
incl
out
sbb
adc
fwait
adc
outsl
es
testl
pop
mov
cmp
inc
jnp
add
addl
xor
dec
fistpll
sbbl
in
and
add
rorl
sarl
xlat
dec
jg
fmull
sbbl
sbb
sti
jns
frstors
add
sbb
inc
sbb
call
push
daa
mov
mov
movzbl
sub
dec
test
xchg
add
lret
stos
ss
jbe
cwtl
mov
mov
shlb
and
cmovl
or
sub
mov
add
and
add
fstpl
into
rcll
xchg
or
test
inc
es
adcb
orb
or
mov
cld
aam
pop
popf
ret
pushf
and
cmpsb
sar
jge
pusha
std
sbb
in
jp
dec
in
daa
into
xchg
scas
insl
xchg
adc
dec
hlt
adc
cwtl
mov
mov
sub
cmp
ret
hlt
mov
les
sub
ret
mov
fistpll
dec
jp
fs
inc
jae
dec
add
pop
mov
popa
xchg
mov
or
add
cmpsb
mov
test
pop
xchg
jge
mov
jnp
je
sbb
stos
dec
bound
dec
ret
adc
inc
cwtl
out
out
mov
mov
pop
loope
pop
jg
mov
and
movsb
in
and
movb
dec
jb
sub
lret
orb
jb
pop
inc
adc
or
je
aam
bound
enter
in
dec
cmp
sub
sub
push
push
cmp
or
add
inc
aas
mov
clc
xchg
aad
sahf
ret
nop
push
pop
jl
aas
cltd
out
out
inc
addl
cs
mov
pop
sbb
aad
lods
dec
jno,pt
cmc
adc
es
mov
and
pop
mov
scas
cmpsl
push
sarl
push
stc
popf
inc
sbb
sub
fidivrs
fiaddl
aas
aam
mov
idivl
js
cmc
arpl
dec
jbe
pop
or
pushf
and
int3
or
subl
xor
cmp
movsb
cmp
rorb
sub
xchg
inc
sbb
jb
push
jg
xchg
mov
das
mov
jb
push
hlt
pop
in
ss
popa
jg
dec
xchg
fwait
push
imul
mov
into
and
push
mov
int
scas
cltd
out
xor
mov
adc
daa
push
adc
push
js
std
xor
stc
ss
popa
mov
sub
mov
rcl
add
fmuls
pop
pop
pop
cmpsb
jo
and
aad
aad
push
repnz
xor
mov
stos
shlb
or
outsl
mov
enter
dec
inc
sti
rclb
pop
subl
mov
gs
mov
xchg
psubsb
pandn
ss
sub
xlat
push
xchg
fstpt
insl
dec
inc
inc
rclb
sbb
orl
add
fwait
lcall
jp
popa
adc
movsb
andb
sub
push
pop
cs
sub
adcb
jmp
push
test
loope
inc
jle
cmp
neg
insl
xchg
mov
call
pop
ret
nop
out
jnp
stc
jl
sbb
test
mov
or
subb
or
das
fwait
sbb
shlb
push
add
aam
jno
leave
sub
test
mov
jnp
cld
sub
outsl
xor
add
test
push
stos
cld
push
pop
mov
stos
or
insb
aam
in
out
mov
idivb
mov
cmp
and
pop
lods
addl
adc
gs
inc
imull
leave
mov
fbld
pop
jo
mov
sbb
push
cli
sbb
pop
stos
push
sbbb
les
nop
clc
inc
mov
or
mov
rolb
add
mov
sub
outsb
adc
and
add
rcll
nop
aas
jecxz
push
mov
mov
sub
loope
mov
dec
and
insl
xchg
sahf
xor
int
adc
xchg
pop
fs
pop
icebp
mov
sub
dec
inc
mov
mov
jp
stc
sbbb
cld
ss
add
mov
or
fsts
mov
add
imul
dec
scas
mov
cmp
pop
jl
sub
push
sbbb
lcall
mov
repnz
inc
stos
pop
and
lea
test
scas
inc
ja
cmp
add
gs
lock
dec
and
mov
inc
shll
lock
xor
int
cmpsl
or
movsb
ss
sub
pushf
leave
out
shr
sti
fiadds
mov
repz
push
xorl
int
movsb
nop
fcmovu
mov
popa
jo
fisttpl
xchg
inc
push
push
push
adc
add
arpl
and
xor
sub
add
mov
and
push
in
clc
arpl
mov
test
stos
add
lcall
jns
jle
pop
mov
jp
les
dec
jmp
ljmp
fwait
lods
add
insl
xlat
mov
or
push
icebp
stos
leave
push
pop
clc
dec
cmpsb
arpl
mov
vxorps
mov
xchg
nop
enter
pop
inc
dec
and
adc
sbb
pop
scas
xchg
arpl
xor
packssdw
mov
cli
adc
loopne
xchg
ds
ljmp
push
mov
add
jno
fwait
cmpsl
adc
dec
stc
dec
adc
jmp
rol
in
sbb
insb
mov
leave
inc
mov
mov
jo
mov
or
pop
xchg
xchg
cmp
mov
push
ret
push
pop
xor
pop
jb
jecxz
mov
ljmp
jl
and
call
xchg
mov
mov
addr16
and
ret
mov
ret
fstl
xor
popa
flds
sbb
inc
sahf
test
pop
mov
stos
lcall
mov
mov
jno
dec
rolb
test
sub
bound
push
push
dec
mov
mov
sub
mov
dec
or
loop
jl
cmp
outsb
dec
gs
test
cwtl
in
mov
push
daa
push
movsb
in
div
xchg
push
or
fwait
mov
add
pop
add
pop
cmp
cmp
ret
ljmp
mov
sbb
and
mov
inc
mov
pop
mov
inc
cmp
in
adc
xor
mov
pop
jne
les
insb
clc
pop
notb
aas
cld
sub
fs
xchg
dec
mov
in
shl
mov
pop
mov
and
call
mov
mov
in
mov
push
mov
push
jecxz
paddb
jge
adc
pop
sub
cmp
xchg
mov
jo
xchg
jnp
addb
push
stos
cwtl
fisubrl
ds
cli
push
enter
hlt
insb
cmp
mov
xor
sbb
push
ficomps
in
xchg
sbb
cwtl
fsts
or
cltd
push
push
repnz
je
lahf
fidivs
mov
push
hlt
nop
sbb
or
mov
xor
xchg
pop
fildl
mov
adcb
inc
pop
loop
jle
pop
loopne
ror
dec
push
jns
push
mov
mov
jne
test
and
outsb
or
call
cmp
cmp
cmp
lret
jecxz
jns
decb
pop
icebp
loopne
pop
cmp
cmp
add
aad
mov
add
adc
fwait
sbb
lea
push
push
sub
in
int
xchg
pop
mov
ret
jecxz
xchg
sbb
je
add
add
loop
outsl
lods
fiaddl
or
mov
add
add
push
mov
jmp
and
inc
jne
loope
jbe
movsb
pop
jne
inc
pop
lea
fwait
inc
data16
sbb
mov
adc
cld
xchg
pop
movsl
push
test
rcrl
pop
pusha
adcb
mov
les
push
das
mov
std
jg
and
movsb
lcall
out
js
mov
pusha
jb
outsl
jae
push
test
mov
xor
xor
lods
ret
enter
mov
data16
push
cmpps
dec
fstpl
or
sahf
mov
test
push
stc
outsb
ss
sbb
inc
test
add
push
nop
sbb
mov
nop
pop
cmp
call
push
sti
mov
mov
rcll
and
or
out
insb
imul
mov
bound
inc
shl
dec
xor
mov
lock
dec
and
icebp
adc
in
iret
cltd
loop
mov
xor
imul
push
dec
pop
push
mov
mov
or
iret
push
add
data16
or
addr16
dec
jl
ret
fwait
or
jo
or
sub
mov
fcomip
dec
cmp
cmc
cmc
aad
push
push
jge
mov
dec
in
js
mov
mov
hlt
lock
lea
rcrb
mov
insl
insb
or
inc
cmp
add
xor
sbb
movsb
fidivs
jno
hlt
push
cmp
pop
inc
lds
pop
mulb
and
sub
aas
cmp
inc
or
pop
sbb
dec
out
add
push
adc
push
dec
xchg
cmc
sub
inc
sub
les
sbb
pop
and
push
sbb
es
nop
repnz
shlb
int
cltd
jp
fcoms
mov
ret
cltd
repz
jne
jae
aas
bound
cmc
hlt
push
xchg
cmp
js
or
out
icebp
jmp
mov
dec
sub
adc
xor
fs
pop
jnp
sbbl
adc
jb
mov
xlat
push
stos
in
add
repnz
adc
fcmovu
cld
or
addl
mov
loop
arpl
popa
inc
fcmove
mov
mov
xchg
test
bound
add
push
cmp
stc
sahf
ja
sbb
shll
adcl
add
insb
sbb
pusha
sbb
lods
addr16
push
pop
jno
imul
mov
mov
int3
mov
ljmp
cmpsb
push
xchg
cltd
pop
xchg
mov
cmp
ucomiss
sbb
push
cmp
insl
sbb
cmc
sbb
adc
xor
jo
mov
xchg
xchg
popa
adc
and
cmpsb
sbb
in
adc
and
add
add
sub
push
out
nop
adc
popf
jns
push
incl
jl
daa
sub
sub
mov
icebp
rcrb
mov
lods
dec
iret
aad
cmp
test
out
inc
in
mov
jb
pop
leave
js
sbb
scas
pushf
pop
dec
or
or
dec
lock
cs
sarb
xlat
ffreep
mov
lret
dec
add
push
sbb
int3
inc
sub
mov
jo
mov
dec
out
cmp
xor
icebp
cld
stc
add
pop
popf
pop
jmp
mov
sub
addr16
push
mov
cmpsb
fnstsw
xchg
pop
or
imul
mov
inc
sub
xchg
inc
or
insl
xor
cmp
push
cmp
add
lret
scas
cld
popf
loop
bound
xadd
mov
dec
mov
pop
inc
jge
roll
mov
fs
fwait
pop
repnz
outsl
xor
jmp
push
mov
scas
lock
lea
inc
sub
mov
bnd
xchg
stc
out
dec
mov
outsl
push
fwait
sbb
popf
mov
jp
jp
pop
pop
mov
add
jbe
xchg
adc
cmp
adc
nop
xor
push
in
stc
inc
stc
jg
jl
add
pop
jbe
push
mov
inc
mov
adc
push
lcall
testl
cmpsb
adc
cld
xchg
pop
adc
xchg
add
lcall
push
fcmovnbe
pop
mov
add
icebp
lds
mov
je
sub
lcall
xor
sbb
mov
shrb
lret
je
cmp
repz
dec
sbb
adc
cmovs
xchg
inc
xor
enter
in
adc
mov
push
fisttpll
imul
cmp
cmp
push
je
xchg
loopne
pop
fidivrl
mov
xchg
mov
or
lods
and
adc
loope
push
or
fcomps
pop
loopne
popa
mov
sub
outsl
mulb
rorl
lret
xchg
es
shll
inc
ss
icebp
dec
daa
loope
dec
push
dec
or
test
clc
cld
out
mov
pusha
mov
mov
stc
js
xchg
stc
jp
jns
xchg
xlat
mov
faddp
mov
push
pop
cmp
inc
loopne
pop
pop
js
pop
and
inc
jbe
in
sbb
popa
xor
out
cmp
cmpsb
insb
add
aam
ret
cmp
arpl
pop
fndisi(8087
sub
loop
inc
mov
lahf
cs
repnz
cmp
xchg
out
mov
mov
jnp
adc
or
push
out
lcall
mov
dec
enter
into
rclb
pop
lds
sahf
jmp
int3
lahf
loopne
imulb
mov
popa
test
fsubrl
int
mov
mov
pop
jl
sbb
xchg
in
xchg
xor
cmp
mov
jp
lock
inc
out
sahf
jns
fnstenv
or
mov
outsl
sahf
das
pop
test
in
lea
subl
loopne
icebp
xor
sub
xor
pop
ja
into
xchg
cmp
pop
ret
or
xchg
jnp
mov
js
loope
adc
cld
data16
mov
in
dec
pushf
cs
ss
or
sub
adcb
mov
push
out
mov
fsubs
aam
mov
jp
sub
dec
pop
push
xchg
mov
notl
add
out
pop
sti
hlt
pop
lahf
lret
popa
adc
or
imul
cmp
or
xor
jl
add
push
mov
das
push
movsb
xchg
mov
pop
and
adc
xchg
pop
add
and
mov
add
arpl
les
push
push
pop
in
add
sub
xchg
int
stos
add
and
pop
lea
mov
jle
add
lcall
mov
xchg
stos
and
sti
mov
inc
outsb
fcomps
and
test
or
or
mov
aas
popa
call
push
dec
adcb
or
test
mov
aas
add
pop
sbb
ds
cmp
inc
push
aam
fildl
inc
push
fnstsw
nop
jno
mov
add
mov
mov
jl
subl
mov
push
and
jb
mov
popf
inc
pop
mov
sub
dec
repz
js
nop
xchg
loope
test
inc
or
out
dec
lods
shr
mov
and
add
cmp
fstl
pop
sub
xchg
outsb
adc
jae
sbb
cld
in
sbb
inc
nop
inc
lahf
jb
jl
notb
xchg
mov
mov
arpl
lret
insb
loopne
cli
cltd
xor
cwtl
or
pushf
rcr
jg
scas
push
decl
hlt
scas
jg
dec
lea
or
push
jl
gs
adc
lahf
dec
mov
sub
xor
and
jne
hlt
pop
lret
aas
lods
adc
testb
testl
and
stos
test
jle
mov
sub
in
add
pusha
shrb
jns
dec
add
adc
repz
jmp
decl
dec
shrb
mov
fisubrs
cli
mov
mov
push
repz
sub
push
or
imul
xor
cmp
dec
xor
lret
or
rcll
fcom
loopne
loopne
push
or
sbb
mov
data16
adc
jg
adc
inc
mov
mov
stos
out
mov
or
loopne
mov
push
addb
inc
cmp
cmp
insl
mov
int3
pop
mov
jg
mov
cmpsb
jmp
inc
ss
jo
sbb
sub
je
dec
cli
mov
xchg
inc
adc
shlb
lock
jne
popf
xchg
fistpll
stos
repnz
sbb
sbb
xor
sub
fwait
pop
iret
outsb
in
leave
aad
stos
into
loop
dec
popf
lea
or
cmp
vpsubd
insl
daa
add
insb
scas
mov
xchg
ja
lahf
cmp
out
scas
and
loope
and
repz
mov
mov
or
push
pop
cli
addr16
lret
test
rorl
lcall
loope
mov
xchg
jns
and
jne
mov
push
rolb
xchg
jae
pop
push
repnz
dec
mov
je
xchg
lret
add
cmp
sub
out
push
push
hlt
add
fcompl
test
xor
push
ficoml
bound
jl
pop
push
adcb
lret
cmp
fsubrs
inc
push
lea
push
in
sub
or
faddp
lahf
push
ror
mov
fcomip
cltd
popa
or
insb
xor
jae
ds
jns
mov
sub
push
mov
fwait
and
push
dec
mov
inc
imulb
pop
out
lcall
mov
sbb
ret
out
aas
aas
adc
cwtl
mov
cmp
pusha
pop
mov
mov
push
js
loop
fs
mov
or
sbb
jp
scas
scas
das
shlb
xor
int
test
xchg
mov
pop
jo
inc
mov
mov
pop
jae
push
lahf
push
lahf
and
push
sub
xchg
xchg
imul
mov
jnp
xor
jg
jb
pop
sbb
sbb
mov
les
push
testl
jle
and
mov
rcl
mov
sbb
subb
sbb
jno
iret
lcall
sbb
call
addr16
jmp
in
into
fnsave
dec
add
push
push
push
jnp
xchg
test
aad
aas
bound
and
fildll
and
call
pop
test
test
add
sub
sbb
dec
out
inc
scas
sub
inc
jns
lods
add
subb
bound
icebp
pop
xor
aas
std
mov
sbb
nop
faddl
lret
lea
jp
add
xchg
inc
ret
loopne
push
cmp
in
mov
ja
scas
je
lret
inc
sbbb
mov
enter
push
push
sbb
xchg
or
mov
data16
or
loop
cld
scas
inc
loope
inc
jle
iret
outsl
dec
sub
jb
inc
sub
mov
loopne
lret
scas
test
aas
push
ret
push
ret
ljmp
push
mov
ss
inc
mov
and
es
ret
sbb
popa
adcb
fisubrl
or
sbb
cmpsl
pop
in
rcrb
lret
into
xchg
xor
or
incl
daa
movsb
adc
imul
inc
xlat
xchg
jge
xor
andb
decb
cmp
adc
sti
loop
and
push
lods
push
gs
stos
push
mov
flds
sub
inc
jnp
xlat
cmpl
daa
add
or
xor
and
mov
jae
bound
ja
and
int3
int
in
sub
sub
pop
out
sarl
cmp
mov
pop
inc
and
cmp
push
idiv
scas
mov
mov
pop
les
or
xor
lcall
in
stos
hlt
lahf
mov
out
dec
mov
repnz
sbb
pop
mov
sbb
mov
push
sub
fwait
mull
and
mov
sub
dec
mov
or
mov
cmp
push
ret
xlat
imul
add
pop
xchg
sahf
jge
movsl
in
jl
mov
jge
cmpl
push
push
stos
push
mov
sbb
xor
cld
sbb
pop
nop
popf
xor
lcall
loope
pop
xor
and
fldt
rclb
cmp
popa
add
cmpsl
adcb
sahf
pop
rcr
pop
arpl
loopne
or
hlt
add
add
in
pop
loop
mov
jns
mov
mov
xchg
mov
cli
mov
inc
jmp
or
adc
fldenv
add
imul
fsts
and
jmp
lret
xchg
push
xchg
js
sbb
sub
xlat
lahf
push
xorb
shl
jmp
andb
push
xor
fwait
bt
insl
lods
add
mov
inc
jmp
mov
adc
inc
cld
and
cmc
xchg
dec
push
lods
fs
cmp
sbb
neg
je
pop
cwtl
sub
adc
push
mov
cmp
mov
les
test
lods
xor
imul
xor
inc
push
leave
sbb
xor
clc
shrb
cmp
adc
and
jg
lahf
mov
sbb
das
leave
faddl
or
pop
jbe
fistpl
lret
pusha
jecxz
sub
cmc
cmp
lds
mov
cmp
lods
jl
in
pushf
mov
es
sub
or
dec
std
nop
pop
jp
sub
aam
out
and
out
mov
les
pop
dec
aaa
mov
inc
out
or
shrl
push
nop
leave
jp
repnz
and
test
mov
nop
in
jns
push
sub
ffreep
xor
scas
cmp
in
push
into
mov
bound
lret
rcl
xor
and
mov
mov
lock
scas
shr
jmp
cmpsl
inc
lods
fwait
jge
or
mov
push
jge
add
arpl
mov
mov
cmp
inc
pop
adc
jecxz
lods
and
push
dec
jp
loope
add
inc
sbb
arpl
mov
loopne
movsl
daa
lock
sub
mov
cmpsb
push
pusha
dec
aad
lds
out
sub
fnstenv
xchg
es
and
aam
sahf
inc
loope
jo
mov
sub
dec
movsb
or
popf
xchg
push
out
out
scas
stos
lds
or
inc
push
xchg
or
fldl
aam
test
dec
gs
push
sub
les
cmpsb
mov
inc
repz
add
movsl
sarb
xor
imul
das
loope
and
and
out
cmp
dec
cmp
push
cmp
xchg
xchg
jg
and
loope
adc
insb
fwait
pusha
dec
cld
mov
mov
jbe
push
cld
inc
int3
rcrb
rcrl
out
fcmovnb
sahf
sbb
sub
and
mov
sub
lahf
jl
dec
sub
mov
movsl
pop
adc
imul
aas
sbb
adc
jle
fistl
push
mov
push
cmp
ds
out
int3
sbb
lret
inc
int
rol
add
icebp
push
popa
test
ja
out
lods
push
cld
mov
sub
add
fcos
pop
or
pusha
xor
adc
stos
inc
das
imul
scas
sbb
js
mov
stos
cld
pop
lret
xlat
and
adc
insb
in
xor
fs
or
xor
jb
xchg
lock
mov
pop
loop
inc
add
outsl
mov
push
dec
lret
shll
mov
push
popa
cmpsl
lahf
pop
pop
add
ror
lret
jb
add
addr16
xor
adc
cmpsl
sub
lock
dec
cltd
into
adc
sub
jmp
jns
push
jb
push
push
xor
or
and
pop
in
lods
mov
sub
and
enter
adc
cmp
out
push
push
push
sti
hlt
test
pushf
push
sbb
stos
xor
adc
aam
or
aam
rcrb
sbb
xor
mov
cmp
and
das
cmp
mov
shl
add
loope
lahf
imull
test
add
adc
dec
mov
stos
inc
mov
cltd
inc
mov
and
pop
call
push
dec
mov
es
push
adc
andl
add
inc
fwait
mov
mov
sbb
pop
leave
xchg
imul
push
in
jmp
cmp
adc
addr16
mov
mov
pop
sub
aaa
inc
sahf
cmc
nop
outsl
adc
add
rorb
ret
je
pushf
out
mov
mov
jge
shrl
lret
pop
mov
dec
movsb
leave
std
xchg
fnsave
jmp
jo
pusha
gs
ja
sbbb
xchg
jo
xor
xchg
mov
dec
mov
mov
sub
rcll
aaa
lock
scas
xchg
push
fistpl
and
fs
sbb
insl
adcb
jbe
adc
sub
pusha
fstp
xor
jb
jo
js
stc
shld
mov
jl
ret
push
sub
daa
into
xchg
pop
pushf
jg
leave
movzbl
test
je
ret
add
sbb
push
fimull
pop
add
cli
mov
mov
push
scas
pop
jge
dec
out
jmp
notl
or
and
lret
mov
out
call
mov
or
in
and
jle
out
cmp
sub
loope
push
or
roll
popf
in
fs
iret
mov
mov
pusha
mov
mov
hlt
inc
pop
les
lcall
loopne
js
jbe
int3
imul
or
inc
dec
fbld
lea
push
mov
add
pop
lods
gs
dec
dec
push
mov
mov
arpl
inc
rcrb
fsubrs
mov
in
mov
stos
xor
fistl
push
push
mov
push
not
imul
int3
dec
pop
dec
pop
cmp
add
lock
or
enter
movsb
jne
outsl
test
mov
sahf
cld
insb
nop
lahf
scas
and
and
stos
xor
insl
and
dec
cmpsl
mov
shlb
dec
xchg
in
lahf
sbb
jno
xchg
pushl
sub
push
push
outsb
mov
fbstp
daa
aas
in
scas
dec
stos
je
add
cmp
sahf
or
mov
add
push
jmp
fiadds
inc
pop
hlt
test
jne
lock
jno
lock
mov
jmp
mov
mov
sbb
in
insl
mov
jge
lods
dec
loopne
aaa
lods
test
movsb
cmp
shl
int
mov
add
sbb
cmp
dec
je
call
jg
jb
lea
pop
adc
cmp
sbb
fcmovnu
add
mov
loop
fsubrs
inc
lsl
ja
movsb
dec
mov
dec
mov
xor
adc
movsb
pusha
mov
int
popf
out
mov
and
fwait
nop
aad
lahf
jp
pusha
adc
lcall
adc
and
addr16
pop
loope
addr16
dec
data16
pop
jge
cmpsb
mov
pop
ljmp
jbe
dec
or
out
lods
add
mov
adc
in
jle
mov
jl
xor
out
mov
std
arpl
and
and
arpl
cmp
in
xor
sbb
sub
loope
jo
push
cmpsb
lods
dec
xchg
adc
add
mov
stc
outsl
mov
pusha
dec
mov
rol
cmpsb
inc
jbe
xor
push
cld
je
jnp
fwait
pop
lret
js
jbe
xchg
jge
adc
push
and
push
mov
fiaddl
pop
push
fwait
sbb
fstp
test
imul
call
xchg
ficompl
pop
jl
and
loope
cld
gs
adc
fisubs
pop
jp
jnp
andl
xchg
dec
shll
outsl
nop
mov
cmc
jecxz
adc
and
std
ficoml
outsl
imul
enter
ljmp
into
mov
jg
cmp
cmp
icebp
in
dec
dec
dec
xor
sub
xchg
aas
adc
xchg
mov
add
push
mov
int3
add
inc
or
insb
sahf
in
in
and
cld
mov
sti
dec
push
jle
pop
mov
or
lcall
fildl
iret
and
test
cmpsl
push
xor
push
and
psadbw
scas
cmp
cltd
dec
sbb
scas
pop
fcoms
push
cld
inc
lods
unpcklps
cmpsl
adc
in
cwtl
insb
xchg
fdivrs
push
cltd
pop
mov
push
pop
in
add
sbb
jno
addr16
adc
cmp
hlt
loopne
mov
xor
mov
inc
scas
enter
cmpsl
stos
shrl
xchg
stos
test
xchg
test
sbb
and
lods
mov
sub
mov
movsb
scas
mov
subb
sub
aad
decl
cld
das
inc
iret
xlat
sub
imul
out
inc
lcall
dec
mov
adc
test
and
nop
scas
add
ret
popa
inc
xchg
add
pop
mov
repnz
je
and
cmc
push
rorb
push
sub
das
ret
inc
test
cmp
lea
dec
insl
lock
add
jae
out
jno
push
fnsave
adc
and
mov
mov
mov
mov
popf
cmp
jnp
lds
fnstsw
out
loop
sub
loop
mov
out
xor
dec
mov
cli
and
jne
in
aas
or
mov
push
imul
dec
ret
sahf
mov
pop
ds
add
lcall
les
xchg
sbb
arpl
add
ss
pop
lret
pop
xchg
push
mov
sub
pop
lock
mov
xchg
out
fnsave
adc
mov
cmp
std
jle
dec
enter
dec
int
pop
jbe
dec
pop
jnp
push
mov
xchg
into
jae
jns
add
cs
pop
or
cmp
mov
sub
push
outsb
pop
js
xlat
orl
push
xchg
fcoml
popa
mov
test
cmp
pminub
adc
cwtl
jg
js
fdivrl
lock
adc
ja
ss
sub
or
push
or
stc
mov
mov
mov
mov
and
sbb
sub
mov
insb
int3
idivl
out
lea
push
xor
cmp
bound
ss
xchg
pop
push
les
call
subb
clc
test
cmp
lds
icebp
sahf
mov
push
cmp
push
xchg
jg
add
or
pop
xchg
in
dec
stos
dec
lods
sbb
sub
and
popaw
push
push
lds
adc
cwtl
jge
popa
aas
cmp
lock
pop
adc
mov
scas
stos
ja
dec
addr16
das
pop
push
jnp
testb
mov
and
xchg
ficoms
jb
push
addl
pop
aaa
lcall
dec
mov
add
arpl
test
fsub
sbbl
lret
xlat
push
add
lret
pop
inc
inc
call
cmpsl
stc
je
xchg
adc
scas
jg
dec
daa
int
test
pop
shr
lret
cmp
sub
add
or
xor
cmpsb
into
cld
mov
fnstsw
shr
fs
stc
add
xor
jae
loope
sub
xchg
inc
shll
mov
movsb
andl
mov
fcomps
shrb
mov
jecxz
cmp
pmaxsw
lock
dec
dec
sar
xchg
test
cmpsb
and
aas
mov
pop
or
xor
mov
mov
push
xchg
cmp
gs
jne
shl
lock
or
cmp
hlt
and
pop
mov
push
inc
imull
adc
std
adc
into
popf
push
dec
fidivrl
movsb
idivl
fdivrl
imul
or
sti
or
push
cli
inc
insb
cmpsb
or
js
sti
jmp
ljmp
das
fcomps
mov
jmp
and
mov
xchg
jno
cmpsl
scas
sub
cwtl
setne
rcrb
cltd
stc
inc
dec
mov
mov
shll
popl
xchg
cmp
lods
or
shlb
mov
cmp
aas
and
and
lahf
scas
mov
or
scas
ds
inc
xchg
jb
inc
pushf
adc
adc
mov
jns
lret
and
cld
mov
fistpl
cmc
cltd
int3
loop
icebp
test
clc
fdivl
aas
lods
mov
mov
rolb
mov
push
pop
iret
lods
sub
push
push
or
in
popa
mov
lea
xor
aam
neg
lret
add
outsl
xchg
popf
lock
stos
fildl
lcall
lds
hlt
aaa
adc
jge
adc
nop
popl
push
scas
cmpsl
jnp
adc
or
mov
aaa
fsubr
fstl
dec
scas
test
aam
push
ret
sub
rcrb
jno
movsb
jb
jae
sbb
aam
dec
or
pop
fnsave
lret
test
cmc
push
mov
scas
lcall
js
pop
lds
cmpsl
insl
mov
aaa
je
fnstsw
clc
dec
js
sbb
rclb
fsubl
lret
adc
sti
cld
push
jae
and
adc
pop
dec
pushf
rol
shlb
mul
adc
adcl
in
pop
call
movsl
rcl
enter
lret
sub
jp
sbb
inc
add
data16
mov
cmp
cmp
enter
adc
mov
dec
dec
std
pop
cmp
push
mov
hlt
pop
jmp
call
sahf
in
and
inc
xchg
sub
cld
incb
pop
out
adc
scas
sbb
adc
int
test
push
scas
cmp
out
lsl
push
add
lods
pop
xchg
popf
lea
test
jnp
pop
icebp
arpl
adc
sub
push
xor
cmpsl
loope
les
pop
mov
xor
in
xchg
sbb
cwtl
push
fiadds
mov
jge
cmpb
sub
dec
std
inc
jnp
mov
call
or
dec
dec
iret
cmp
vdivsd
fwait
cmp
jnp
jmp
dec
shll
fmul
ret
mov
mov
xor
xor
cmc
mov
or
cmp
or
jmp
mov
and
jecxz
in
movsb
out
bound
mov
aas
test
inc
sbb
sub
leave
idivb
decl
sub
mov
and
out
adc
pusha
mov
or
xchg
int
mov
adc
pop
pusha
scas
rcrl
dec
mov
add
mov
adc
jecxz
mov
ss
gs
popl
lret
inc
andb
stc
mov
cld
pusha
arpl
push
jb
hlt
data16
lea
out
push
and
popa
add
ret
mov
lock
sti
and
xchg
sbb
mov
sub
ljmp
aaa
jbe
sub
jae
lahf
cmc
dec
addr16
dec
sub
push
sbb
cmp
inc
test
sarb
sbb
pop
jge
test
sbb
and
jge
adc
dec
dec
push
test
rcl
jbe
pushf
rclb
cli
and
mov
out
sub
lret
xor
aas
jns
pop
out
inc
and
add
in
sbb
pop
mov
mov
sbb
inc
pusha
sahf
es
jne
dec
imul
clc
je
aaa
adc
and
jo
mov
xchg
je
imul
and
int3
sahf
imul
sbb
scas
rcr
andl
push
push
cmp
into
cmp
hlt
divl
lret
push
and
movl
es
xor
sti
and
sbb
lret
cmp
nop
fsubrp
jg
sub
aaa
in
or
jle
cltd
cmp
mov
je
cld
std
sub
pop
pop
sbb
mov
inc
fnstsw
mov
shll
jae
jne
sbb
arpl
std
les
pop
dec
pop
sbb
add
das
lret
mov
lock
cltd
mov
add
imull
jns
fldl
sub
dec
push
or
xor
sub
sbb
pop
daa
loop
add
mov
cmp
mov
jae
movsb
ss
sbb
arpl
mov
and
push
xchg
ret
add
cwtl
dec
mov
fiadds
push
ja
cmp
inc
adc
mov
sbb
xchg
aaa
outsl
arpl
scas
xchg
imul
inc
sub
stos
adc
adc
gs
fs
push
and
pusha
push
adc
iret
jge
cmpsl
fwait
call
cs
mov
js
sbb
mov
xlat
inc
mov
into
out
or
popf
imul
sbb
and
cmp
cld
xchg
pop
fiaddl
shr
mov
xor
lahf
mov
fsubr
sar
push
jbe
fwait
xor
mov
repnz
stos
inc
dec
sarl
mov
mov
and
ror
mov
std
mov
or
arpl
xchg
inc
ljmp
mov
push
jo
pop
test
adc
mov
lds
call
call
fsubl
push
call
pop
mov
das
add
mov
mov
pop
jp
xchg
in
mov
fsts
xchg
push
enter
and
and
push
es
inc
fdivl
mov
jge
cs
scas
xchg
sub
rolb
clc
xchg
xchg
and
imul
repnz
xor
jnp
std
push
mov
inc
mov
cli
stc
loopne
rcr
add
loopne
movsb
jnp
inc
jg
sbb
add
dec
push
cld
cmp
xor
sti
lock
in
jle
push
and
mov
daa
fsubs
cmp
mov
cmp
ret
jge
not
shlb
ljmp
jge
cmp
hlt
sahf
fdivs
xchg
add
mov
test
cltd
mov
loope
mov
lods
xchg
jge
out
sti
popf
ret
xchg
add
xor
add
push
loope
cmp
outsl
xor
xor
sub
cmpsl
outsl
jmp
cmpsb
adc
xor
pushl
pop
jb
sbb
das
sbb
xchg
inc
in
gs
repnz
push
xchg
stos
in
subl
sub
out
mov
ficoms
adc
xchg
pop
je
jg
std
shr
mov
push
stos
sbb
data16
adc
push
pop
vorps
imul
jle
mov
insb
xor
mov
aaa
orl
jno
sbb
jl
aad
les
faddl
push
outsl
xchg
lret
jg
mov
mov
sub
push
sub
fdivl
or
mov
cltd
xchg
insl
mov
mov
in
pop
jnp
xor
jae
fwait
iret
push
pop
sarl
push
mov
sti
push
pop
sbb
sub
aam
dec
subb
jne
push
xor
sub
lock
lret
sahf
xchg
movsb
pop
enter
out
jnp
mov
inc
dec
mov
push
xor
imul
imul
data16
pop
mov
or
aam
xor
mov
repnz
jae
or
mov
inc
push
mov
fnsetpm(287
imul
dec
mov
pop
gs
cli
loop
aas
jmp
clc
in
add
insb
imul
dec
jg
cmp
loopne
aaa
and
mov
inc
xor
sub
test
out
push
push
xchg
sbb
lahf
jne
fsubl
cmp
or
in
mov
rclb
fcoml
mov
xchg
push
sub
daa
mov
pop
ja
out
and
pop
jmp
cmp
inc
lret
push
cmc
lret
pushf
sub
xor
mov
lock
mov
fcompl
arpl
add
push
lret
shll
test
push
outsl
sbb
and
sti
xchg
cmp
ret
sti
shrb
bound
pop
xchg
imul
mov
int
dec
push
pop
pop
in
imul
cwtl
jbe
test
xor
xor
sbb
xor
les
aad
std
sbb
sbb
mov
pop
pop
icebp
mov
sarb
mov
int
dec
cmc
cmc
stc
pop
sahf
or
pop
adc
add
out
inc
mov
popf
in
cs
dec
aas
loope
pop
push
int
sub
in
mov
pop
mov
push
xchg
add
mov
or
movsl
ret
adc
sbb
int3
nop
xchg
lea
out
inc
scas
xchg
ficompl
cmp
insl
sbb
mov
inc
stc
out
inc
test
int
std
icebp
or
push
push
xchg
cltd
popf
push
cld
test
rcrb
push
pop
add
ljmp
jae
sbb
dec
dec
sarb
adc
loope
mov
lea
fstps
dec
adc
xchg
pusha
in
in
shll
pusha
in
dec
ret
lods
shlb
sbb
dec
icebp
and
or
dec
sbb
sub
mov
dec
stos
xchg
or
xor
test
insb
pushl
stc
mov
mov
outsl
pop
dec
movsb
adc
pop
js
imulb
ret
mov
mov
adc
pusha
stc
mov
mov
outsl
imul
shr
pop
pusha
hlt
sub
clc
bound
rcl
movsl
add
pushf
jne
jno
fildll
sbb
pop
sahf
inc
dec
andl
mov
in
dec
adc
sti
in
aaa
jl
inc
in
gs
cs
call
fadds
test
inc
lcall
dec
adc
cli
das
mov
inc
cltd
inc
push
adc
push
pop
fisubl
jae
insl
fcompl
lods
mov
mov
ljmp
imul
stc
insb
mov
inc
jne
lcall
repz
movb
mov
imul
mov
dec
hlt
fdivl
mov
test
sbb
adc
mov
out
data16
and
pop
xchg
and
das
dec
in
adc
pop
bound
testb
push
imul
cmp
jo
and
data16
out
xchg
push
repnz
jno
aad
adc
outsb
fiaddl
dec
xchg
stos
dec
dec
dec
cmpsb
sbb
mov
andb
lds
scas
jg
test
mov
loopne
sbb
or
in
or
mov
xor
lret
push
gs
push
and
add
mov
insb
jo
out
rcrl
add
test
jp
out
lods
mov
cld
or
add
and
popf
pushf
shrl
fidivl
sti
lcall
or
out
xchg
mov
daa
rcll
inc
imul
dec
cli
adc
pop
inc
clc
cli
jge
mov
loop
mov
jp
sbb
in
fsubl
xor
and
cli
push
into
nop
pop
lret
or
adc
in
into
std
pop
fwait
std
sub
jle
mov
push
sub
fsts
sub
push
sub
or
punpckhwd
xchg
sbb
xor
je
push
jns
sub
and
mov
and
cmp
mov
popf
push
fs
mov
int3
dec
push
sbb
shl
xor
push
dec
cli
ss
pop
sbb
sahf
push
faddl
aas
jne
pop
adc
aad
or
add
or
push
xchg
and
pop
adc
fcmovnbe
sbb
movsb
lahf
cmp
add
loop
loop
insb
insb
jmp
dec
inc
fsts
pop
lret
loop
movsl
rcl
dec
cmp
jnp
lcall
ficoms
fnstcw
loope
pop
xchg
out
xor
ja
out
out
fldenv
inc
icebp
lods
or
pop
mov
stos
iret
rcr
mov
test
cmp
into
rorl
ret
lret
notl
mov
out
test
int3
call
mov
scas
adc
pop
push
xchg
sarb
sti
into
and
xorl
push
lds
push
jp
icebp
or
mov
fisubrs
and
jo
call
sbb
sbb
pop
xchg
pop
inc
movsb
stos
and
cmc
insl
push
ss
jns
cmp
or
sti
cmp
jns
xchg
jp
cmp
outsl
fadd
xchg
jae
or
pusha
cmpsl
fcmovnu
dec
decl
out
movsl
fcmove
adc
xchg
add
add
pop
in
mov
mov
sahf
iret
lods
jle
scas
jl
xchg
inc
jmp
lahf
test
xchg
xchg
dec
fs
movl
fstpl
sbb
jnp
xor
jmp
out
mov
mov
seta
pop
add
sahf
adc
mov
inc
insl
adc
inc
add
adc
mov
lret
cltd
jnp
cwtl
push
clc
mov
xor
and
push
lahf
mov
mov
dec
fwait
sbb
sub
loopne
inc
jne
cmpl
iret
add
sub
xorb
xlat
xor
xchg
xchg
popf
lcall
lds
pop
dec
jle
outsb
pop
jmp
hlt
dec
xor
stc
jbe
pusha
pushf
pusha
pop
xor
adc
fucomip
inc
inc
loop
push
daa
xchg
lcall
sub
and
stc
jmp
adc
xor
jb
mov
mov
sub
push
bound
movsb
push
cs
jo
movd
cmp
sub
ljmp
mov
pop
xchg
test
arpl
dec
or
cli
stos
mov
out
sbb
dec
or
inc
sbb
sub
test
inc
mov
jge
mov
pop
mov
dec
jle
ljmp
pop
ret
ss
rorl
das
fwait
xchg
nop
sub
sub
dec
and
xor
sbb
fs
out
or
sub
pop
dec
in
dec
inc
mov
xor
push
fcomps
nopl
data16
fadd
out
cmp
mov
ja
sti
add
pop
or
and
mov
cmpsl
stc
popa
dec
clc
inc
movb
mov
pop
out
or
cmp
add
xchg
dec
cmpb
mov
rcrb
cs
pop
xchg
xor
int
jnp
or
jle
movsb
lods
out
cmpsb
icebp
stos
stos
enter
icebp
clc
repz
testl
push
fs
pop
sbb
mov
jne
xchg
outsl
flds
inc
dec
decb
ffreep
lods
dec
pop
add
mov
or
xor
mov
or
xchg
les
jno
filds
dec
lcall
dec
mov
mov
add
mov
pop
lahf
enter
mov
xchg
lcall
push
pop
dec
add
cmpsl
adc
orl
sbb
xchg
out
icebp
test
iret
dec
push
sti
test
in
test
sub
movsb
mov
cwtl
lret
iret
sub
mov
mov
xchg
jle
push
ss
outsl
xchg
sbbb
mov
xchg
out
add
mov
std
sub
cmp
int3
and
or
dec
cmp
inc
cli
jno
into
xchg
aad
xchg
loopne
sti
shrl
movsb
in
movsb
test
or
popf
and
xor
inc
pushf
aad
and
dec
in
cmp
xchg
jne
inc
mov
add
aas
xor
inc
inc
addr16
movsb
movsl
cmp
mov
in
leave
cmp
clc
sbb
ret
loope
pop
xchg
dec
insl
add
pop
fs
pop
mov
das
mov
inc
jp
fisubrl
jmp
dec
or
jae
das
adc
lcall
mov
dec
movb
popf
fwait
xor
mov
clc
pop
or
les
int3
jp
pop
mov
dec
or
mov
xchg
das
fistpll
sub
cwtl
inc
punpckhdq
adc
add
pop
popa
dec
mov
out
movsb
cmpsb
aaa
jg
dec
cmp
int3
sar
push
jle
mov
add
mov
orb
movd
sub
jecxz
rcl
mov
subl
mov
xchg
loopne
nop
pop
xchg
push
push
ja
repnz
sbb
jmp
xchg
adcl
sbb
sub
cs
pop
jo
outsb
outsl
js
or
add
insl
sarb
sarb
pop
cs
sub
cmp
sahf
dec
push
xchg
aam
adc
es
sbb
mov
das
jmp
cli
mov
xchg
inc
lret
jge
inc
sub
sbb
stos
sbb
lcall
cmp
inc
cmp
rcl
mul
in
cmc
out
mov
sbb
sub
mov
lret
lea
sbb
insl
enter
mov
or
shrb
imul
pop
shlb
jns
imul
sbb
faddp
sbb
mov
daa
mov
mov
in
jbe
call
mov
repz
mov
sbb
mov
aam
test
dec
inc
fmulp
mov
xchg
xor
lmsw
cmpsl
lcall
imul
mov
fwait
lods
clc
add
dec
mov
lahf
xchg
push
or
sub
and
jno
jns
in
sti
sub
mov
mov
test
out
aam
jmpw
aaa
jl
dec
jo
push
repnz
cmpsl
dec
mov
sbb
data16
pop
ljmp
push
jbe
out
pop
js
gs
cs
shrb
ds
cltd
push
arpl
ds
insb
push
scas
pusha
addb
loopne
xchg
das
popa
and
clc
cmp
clc
in
jbe
shrd
aad
adcb
lds
enter
data16
ret
inc
mov
sub
out
pop
mov
fwait
xchg
xchg
jle
mov
sbb
gs
call
fcoml
js
nop
jo
push
xchg
xchg
mov
add
push
aad
int
ds
jb
rcrl
popa
stos
in
jne
push
sub
lds
stc
pop
pop
je
daa
out
movsl
cs
mov
pop
jae
movsb
in
pop
xchg
mov
mov
gs
roll
xor
test
mov
push
popf
fiaddl
xor
or
int
and
xorb
push
pop
inc
mov
sahf
xchg
jno
cmp
loopne
and
leave
push
cs
fdivrs
fbld
jmp
sbb
cmpsl
rolb
in
dec
sti
jne
and
sbb
mov
adc
cmp
sbb
mov
inc
lret
aad
pop
lods
call
dec
lds
fsts
pop
jae
xchg
rcll
mov
addl
outsl
sbbl
leave
and
dec
pop
mov
cmp
in
jmp
int3
mov
enter
cli
sub
mov
test
cmpsb
in
dec
lods
dec
cmp
inc
incb
push
stos
dec
enter
sub
mov
lods
or
xchg
fbstp
cli
aad
sub
push
dec
adc
lret
outsb
and
mov
mov
jge
xchg
dec
ds
mov
aaa
popf
xlat
lock
sbb
xchg
xor
mov
mov
push
xorl
ss
or
mov
leave
sarb
xchg
sbb
push
push
push
test
and
inc
dec
cwtl
outsl
mov
cmp
pop
pop
pop
test
test
aad
and
jo
decl
mov
ljmp
push
pop
test
push
push
mov
cwtl
subb
jnp
sbb
inc
repnz
jl
cld
in
cltd
cmp
outsb
cmp
outsl
lods
out
outsl
in
jge
cmpsb
fidivrs
push
mov
das
fcoml
or
mov
sub
jns
in
lock
mov
pusha
pop
sbb
pushf
enter
xor
fldenv
xchg
adc
mov
std
cld
int
filds
push
pop
aam
push
mov
xchg
add
pop
je
jp
fisubl
mov
ds
inc
mov
jnp
push
fwait
ret
adc
leave
insl
push
repz
xchg
lret
sub
cmp
jl
fisubl
call
rorl
cltd
rclb
shll
mov
ret
out
cmc
lret
cli
mov
cmp
int3
dec
inc
aas
cltd
loopew
push
cmp
popa
popa
inc
mov
adc
int
xor
add
inc
push
xor
lods
jae
xchg
mov
push
cli
mov
ficomps
sub
std
xor
repnz
repz
xor
lods
pop
or
mov
jle
sti
sub
mov
in
mov
sub
or
xor
push
imul
fists
out
lret
jg
dec
push
andb
jle
das
call
int3
inc
or
xor
mov
mov
sub
sbb
test
ret
sub
cmpsb
hlt
ror
loopne
and
xor
add
pop
lcall
aad
xchg
inc
sub
pop
mov
lret
repnz
cs
repnz
adc
iret
mov
sbb
sub
and
imul
sbbl
ds
push
or
inc
in
cmp
pushf
sbb
and
fnstcw
cmpsl
mov
or
and
std
clc
add
fidivrl
and
idivl
cli
fisubl
mov
inc
dec
repnz
stos
inc
clc
lods
inc
mov
jnp
ret
lahf
iret
in
cmp
movsl
jp
sbb
xor
rep
sbb
sbb
stos
lahf
cmpsl
fwait
xchg
sub
popf
mov
je
mov
cmp
outsb
sbb
sub
xor
bound
adc
and
insb
sub
push
out
or
mov
mov
lods
xchg
lds
lds
mov
push
int
lods
xchg
pop
cmp
adc
sub
cmpsl
js
xchg
fstpl
movsb
lret
sub
mov
imul
and
xor
mov
fld1
sahf
movsb
scas
add
jmp
cmp
movb
sbb
pusha
popa
xchg
cmp
es
clc
or
or
faddl
push
dec
xchg
xor
mov
dec
mov
fiaddl
in
xor
and
test
movsl
mov
mov
int3
shll
in
fcompl
adc
scas
xchg
adc
icebp
ja
xchg
push
in
xchg
xor
cmpsl
pop
subb
xchg
jne
movb
dec
lods
les
cmc
sbb
jmp
into
je
popf
rcrw
mov
mov
sub
mov
inc
gs
fisubrs
xchg
das
adc
test
sti
loope
jp
cli
push
cmp
inc
subl
jbe
adc
or
cmp
sbb
aas
or
sbb
xor
sub
jg
imul
loop
adc
lahf
in
xchg
shrl
cmp
adc
int3
jae
push
add
call
push
mov
insl
and
arpl
adc
cmp
and
aad
loopne
xchg
jno
insl
mov
lods
cmp
into
leave
cmp
ss
pop
push
cwtl
hlt
cld
or
add
sahf
or
pop
adcl
fwait
pop
cs
loop
fidivrs
xor
arpl
cwtl
cmp
mov
mov
out
mov
fsubrl
jmp
jne
dec
push
fists
hlt
mov
notb
insb
rclb
cld
cld
ds
cmpw
cld
dec
pop
lret
or
push
add
mov
lcall
add
addr16
mov
dec
test
jne
mov
fisttps
lds
sub
leave
jns
dec
das
ja
jecxz
cmpsl
les
pop
mov
sbb
cmpsl
xchg
xchg
push
lock
xor
das
call
jl
mov
wrmsr
gs
or
sub
in
cltd
fsubr
insb
xchg
arpl
push
or
jne
sbb
jecxz
adc
xor
dec
stos
ljmp
or
sub
mov
xor
jmp
mov
loope
mov
insl
cltd
fs
jl
mov
lret
xor
adc
cmpsl
jp
out
mov
pop
mov
fistps
push
mov
int
jnp
xchg
lock
pop
dec
popa
add
int3
or
mov
adc
fwait
push
inc
inc
add
inc
cmp
mov
add
aas
daa
outsl
fcmovnbe
pop
repz
imul
out
fisubrs
inc
or
or
inc
aam
push
mov
xor
dec
add
mov
or
test
jmp
movsb
ja
insl
mov
in
push
cmp
adc
sub
dec
inc
push
test
jne
divb
lock
cltd
cmp
xchg
mov
dec
jno
and
ret
inc
jns
cmpsb
mov
stos
add
fwait
cmp
jno
and
rcrb
mov
and
sbb
dec
jbe
xchg
lcall
jns
stos
aas
jbe
xchg
aas
pop
jbe
cmp
out
inc
jbe
or
ja
gs
arpl
cld
push
popa
xor
jge
add
in
int
loop
dec
or
sub
adc
in
lcall
mov
push
hlt
inc
inc
cs
fmul
xchg
movsb
mov
push
test
nop
fisubs
pop
xchg
inc
jae
pusha
in
pusha
or
and
aas
daa
iret
mov
divl
jb
cmpsl
or
pusha
getsec
out
js
fadds
sahf
sbb
sbb
insl
scas
sub
je
xlat
pop
mov
push
sub
jmp
add
setb
xchg
cmpsb
dec
inc
jne
mov
lds
push
pusha
jne
lods
mov
in
scas
mov
je
stc
imul
push
inc
fcomps
mov
jb
xchg
dec
and
fstpl
cmpsb
adc
outsl
fidivrl
or
or
gs
sti
sbb
fsub
jp
jnp
jecxz
clc
std
mov
add
sti
int
add
cli
iret
test
fldl
sbb
adc
lahf
mov
cwtl
dec
xchg
and
jge
push
stc
mov
xchg
sbb
in
gs
aas
sbbl
pop
xor
push
mov
ljmp
pop
outsl
out
mov
call
iret
cmp
je
mov
and
shlb
and
add
cld
xchg
pop
xor
mov
pop
xor
daa
mov
out
cmp
push
push
cmp
jb
jae
insb
or
ficoml
mov
aas
xlat
ret
jge
aas
pop
movsl
inc
and
mov
pop
add
mov
add
out
xchg
scas
inc
mov
subl
mov
clc
add
sub
test
aaa
cmp
cltd
ss
ja
mov
leave
or
push
mulb
fprem
mov
and
hlt
mov
push
mov
sbb
incl
cltd
clc
sbb
aam
jbe
ud2
enter
inc
sub
pop
aam
dec
inc
inc
jmp
rcrb
call
out
stos
fnstenv
pop
test
mov
sahf
add
or
jg
mov
mov
jecxz
sbb
out
or
or
popf
push
dec
mov
insb
mov
pusha
xchg
fnclex
out
xchg
decb
pop
ret
xlat
inc
xlat
pop
sub
push
dec
sbb
stc
mov
pop
js
arpl
scas
fdivrp
jo
imul
and
fwait
loop
stos
sub
mov
dec
enter
stos
sub
aad
lahf
aad
add
mov
cmpsb
aad
push
inc
testl
cmp
stos
sub
sarb
mov
xchg
orb
dec
jns
cltd
loop
mov
xor
mov
clc
int3
dec
mov
fwait
bound
into
scas
lods
daa
push
sbb
cwtl
int
jl
mov
mov
sbb
cmp
clc
xor
sub
imul
lock
testb
int3
cmp
ror
mov
mov
push
faddl
cmpxchg
jns
in
mov
jae
in
repnz
ljmp
dec
pop
adc
dec
sub
jmp
mov
nop
out
mov
adc
mov
repnz
xor
loope
push
test
xchg
xchg
push
and
ds
sub
stos
sar
cmp
or
bound
xchg
popf
negb
test
mov
cltd
mov
add
push
sub
clc
leave
and
dec
xor
out
popa
lret
mov
add
push
shrl
into
cmp
or
ret
inc
daa
pop
sub
inc
xchg
adc
inc
std
adc
sub
aad
xorb
push
rcrl
aaa
movb
iret
lock
inc
adc
cmc
jo
out
sub
pusha
xchg
mov
stc
lcall
fchs
bound
inc
inc
inc
loop
mov
fdivl
es
push
or
jg
fwait
mul
popf
cmp
lods
fiaddl
pop
stos
add
xchg
inc
mov
sub
inc
sbb
mov
mov
or
lret
mov
lcall
loope
xchg
fidivrl
jo
movsl
mov
ret
mov
rcr
dec
xlat
xchg
mov
mov
aas
mov
adcb
movsl
xchg
div
mov
jg
stos
push
sbb
test
lods
xor
cmp
xor
cs
cmpsb
stc
mov
pusha
cmp
call
or
jnp
dec
mov
mov
pop
mov
pop
sub
ret
in
mov
mov
and
insl
mov
inc
or
pushf
je
ljmp
mov
cmc
xor
mov
jge
or
outsl
pop
stos
push
lods
add
push
push
nop
mov
jmp
mov
mov
and
fistpll
xor
in
loop
mov
call
enterw
std
data16
pop
jle
add
mov
cwtl
mov
or
lret
cmp
fidivl
mov
outsl
inc
or
adc
ds
push
in
push
jecxz
dec
inc
lahf
in
movsl
xor
stc
fidivs
inc
cltd
test
adc
mov
sub
jmp
xchg
push
jno
mov
pushf
dec
into
cmpsl
xor
lock
out
xorl
mov
adc
shll
adc
jecxz
adc
movsb
add
test
sub
dec
add
add
sub
decl
rcr
aas
mov
sub
add
cmp
inc
in
int
sub
mov
popa
push
imul
test
ret
xchg
cmpsl
in
aas
js
jo
aad
mov
fisttpl
ficoml
ja
pop
lcall
jbe
dec
xchg
jp
sbb
jecxz
rcll
mov
mov
stos
imul
and
or
cmp
nop
and
add
loopne
jecxz
mov
in
or
cmpsb
aas
repnz
addl
pop
loope
xor
sbb
sar
jbe
add
xchg
sbb
adc
mov
inc
and
add
push
outsb
imul
out
lods
adc
clc
mov
jns
std
and
arpl
testl
rorl
sbbl
cmp
insb
or
test
loopne
cmp
dec
push
scas
insl
sbb
ret
andl
dec
cmp
stos
pop
dec
outsl
or
test
stos
mov
inc
pop
popf
mov
and
xor
js
push
icebp
sbb
mov
addl
add
hlt
les
dec
or
das
dec
cmp
in
jno
stos
pop
jae
xchg
mov
jnp
stc
loope
cwtl
jmp
jmp
push
adc
sbb
mov
sbb
inc
rcll
dec
adc
inc
sbb
jle
out
adcb
arpl
mov
mov
test
inc
cmpsb
movsb
cwtl
cwtl
lret
jecxz
or
or
xchg
sbb
stos
sub
sub
pop
xor
icebp
jmp
loopne
sbb
lret
pop
jl
into
daa
int3
out
mov
dec
dec
das
mov
push
xchg
dec
xchg
imul
push
sahf
xorl
mov
mov
push
cmp
and
adc
js
mov
test
das
jnp
ljmp
push
mov
add
gs
push
pop
rcl
rcrb
out
inc
lock
lret
sti
lock
adc
mov
shll
fbstp
or
out
or
rcrb
arpl
dec
call
sbb
push
lds
inc
pop
add
mov
pusha
aas
push
adc
dec
rclb
mov
sbb
not
ljmp
and
mov
or
add
rcll
fbstp
ljmp
jl
test
jne
push
dec
push
mov
adc
mov
add
jb
xor
adc
sub
sahf
cmp
adc
cmpsb
ds
or
ds
stc
inc
stc
sbb
fs
lods
daa
test
adc
bnd
mov
dec
adc
fmulp
adc
test
arpl
out
ffreep
add
mov
mov
rcl
mov
or
sub
pop
jmp
dec
xlat
int3
imul
sub
lahf
sub
push
ret
nop
cmp
add
pop
pop
push
repz
dec
add
rorb
xchg
cltd
cmp
sbb
je
outsl
push
int3
jmp
add
sbb
and
loope
std
loope
xchg
test
outsl
add
jb
scas
pop
or
das
xor
jmp
push
repnz
aam
mov
call
fwait
add
xor
xchg
popf
les
aam
bnd
inc
mov
mov
inc
dec
std
das
sti
aam
push
push
mov
ret
sar
mov
lea
jmp
nopl
test
cmp
popa
fcoml
push
and
and
aad
push
or
pop
jecxz
or
pop
mov
or
cmc
pop
sbb
xchg
inc
adc
lods
cmp
int
loopne
stos
cmp
xchg
and
or
mov
addr16
test
cmp
sub
stc
bound
popf
icebp
stos
insl
subb
fistps
push
or
leave
jge
andl
scas
inc
mov
pop
cmp
push
xchg
sub
push
sti
aaa
or
subb
out
dec
outsl
and
mov
jecxz
inc
sbb
icebp
xchg
jne
mov
and
jo
lods
fisubrl
jns
jo
rcr
ljmp
adc
and
push
push
mov
ja
push
push
pop
push
dec
ret
xlat
roll
pop
cs
cli
je
lahf
lahf
clc
sti
pop
or
push
and
adc
loopne
les
fs
push
jp,pn
adc
sbb
mov
and
dec
je
xorl
jbe
repz
ret
jg
and
lds
shlb
cltd
ljmp
loope
mov
sbb
xor
cmp
cld
jnp
adc
nop
push
or
jnp
pop
pop
movsb
and
or
out
or
mov
mov
jg
orl
xor
scas
add
mov
mov
add
mov
adc
xchg
jne
mov
push
or
sti
jg
ss
daa
dec
sbb
push
push
sub
mov
pusha
test
mov
push
pop
fldt
adc
aas
movsl
add
insl
js
mov
mov
les
inc
mov
inc
ret
mov
repnz
movhps
adc
jnp
insb
cmpsb
mov
sarl
and
xor
iret
movsl
and
ret
adc
idiv
insb
add
in
into
cmp
pop
jo
inc
stos
ret
sti
pushf
andl
mov
cmp
fwait
into
dec
pop
cmpsl
es
lods
out
cmp
mov
pop
cmc
xlat
cld
mov
idivl
push
roll
cmp
cmp
fnsave
sbbb
lds
js
shrb
xor
fs
scas
imul
mov
jo
in
push
or
imulb
xchg
loopne
mov
sbb
push
pop
jnp
shl
lret
stc
mov
push
cmp
rolb
mov
xchg
lret
sbb
push
push
mov
sub
cmp
call
sti
divl
pop
or
rcrb
je
mov
adc
pop
shll
sbb
add
sub
testb
jb
cltd
cwtl
inc
pop
std
sbb
enter
in
pop
add
stos
xchg
and
cmp
jmp
js
fldcw
clc
loope
notl
sahf
movsl
daa
aas
fwait
or
push
orb
and
push
enter
stos
dec
mov
sub
out
jecxz
cmpb
fwait
cli
sti
adcl
lcall
iret
in
aad
pushf
dec
mov
nop
mov
sbb
dec
das
add
into
fwait
mov
xor
cmp
in
adc
mov
add
mov
in
scas
mov
cmpsl
cli
xchg
out
les
test
dec
xchg
repnz
xor
lret
stc
cmpsb
ficompl
out
sub
mov
xchg
imul
pop
add
dec
movsb
sub
imul
cld
flds
stos
push
std
inc
mov
and
ror
mov
subb
sub
fdivrs
pop
pop
cmp
rolb
add
aas
xor
sbb
gs
mov
push
orl
cmp
rcr
and
arpl
inc
cmpsl
adc
mov
loopne
cltd
lods
adc
and
ret
pushf
popa
dec
outsl
push
cmc
xor
adc
push
mov
jns
scas
pushf
bound
xorl
pusha
and
jl
shrl
cs
push
mov
dec
fcomip
cmp
xor
lcall
jbe
mov
adc
cltd
sub
cltd
xchg
dec
xchg
sub
lahf
sbb
inc
pop
nop
xchg
inc
pop
pop
pop
mull
jle
hlt
ffree
test
cmp
lods
jb
scas
push
mov
mov
mov
inc
push
sti
add
daa
adc
leave
sub
das
ss
jb
mov
inc
nop
push
jge
mov
xor
push
arpl
scas
add
cli
enter
adc
inc
repnz
mov
mov
or
into
cmpsl
orl
push
fadds
cmp
aaa
out
fwait
clc
push
push
jmp
cmc
iret
add
pusha
scas
insb
int
or
into
test
cmp
dec
mov
out
dec
xor
xchg
aam
and
pop
jg
xor
test
xchg
ljmp
jl
xor
daa
jns
stos
imul
mov
addr16
mov
push
test
add
loope
fisubrl
std
sbb
std
mov
mov
inc
outsl
push
jb
mov
int3
adc
xchg
add
int3
movsb
arpl
mov
je
fisttpl
sub
xchg
push
repnz
shl
call
push
lcall
mov
sub
jb
or
cld
movsl
push
pop
test
xchg
cmp
dec
call
dec
call
loope
push
jb
nop
enter
xchg
mov
add
movsb
xor
and
cmp
fsubp
enter
lods
std
jp
jno
ret
out
cmc
inc
xchg
fsubs
loop
cmpsb
addl
sub
loope
int
imul
push
and
pushf
add
or
push
scas
popa
dec
ljmp
dec
outsl
or
aad
rol
pop
ds
sub
repz
inc
clc
loop
jle
cmpl
sub
das
dec
idiv
sbb
rcll
pop
test
stos
shl
cmpsb
and
sbb
adc
pop
aaa
je
jnp
ds
dec
adc
aas
rcrb
mov
jge
mov
js
sub
popf
mov
and
aad
lods
imul
push
aas
dec
xor
jbe
cmp
mov
lds
and
inc
sti
sbb
loop
inc
out
jg
xchg
div
mov
xchg
ret
rorl
push
call
xchg
jecxz
sbb
xor
int3
dec
gs
stos
mov
dec
xchg
sbb
pop
or
mov
mov
test
push
xchg
adc
outsl
pusha
adc
lcall
inc
jnp
push
push
mov
mov
push
inc
xchg
mov
xor
push
loopne
add
jg
inc
fwait
dec
js
sbb
sub
or
loopne
xlat
imul
mov
cmpl
sub
int
testl
inc
sub
add
std
mov
aad
inc
sub
outsb
push
call
jb
and
dec
mov
inc
icebp
jmp
xchg
xlat
inc
cwtl
cmp
pop
mov
jns
dec
sub
cmp
pop
xchg
jle
lcall
xor
aad
mov
and
rcll
dec
loop
rcr
popf
cmp
es
cmp
jno
inc
enter
pushf
fimull
dec
mov
jp
pop
pop
mov
in
ds
rorb
daa
mov
mov
imul
lret
add
in
or
cmp
jle
mov
mov
push
push
pop
pusha
xor
cld
sarb
popa
push
dec
fwait
mov
pop
fcomps
or
push
fnstenv
nop
mov
mov
insb
cmp
sbb
xchg
sbb
push
adc
mov
scas
sub
loopne
into
xchg
loop
gs
gs
sub
sbb
ret
pop
inc
xor
push
dec
out
dec
inc
adc
cld
fucomip
outsb
mov
bound
sbbb
in
mov
sub
jmp
ds
xor
addb
push
jmp
or
sub
test
adc
xchg
es
scas
pushf
add
mov
mov
cmp
jne
out
sub
jg
iret
daa
int
fisubrs
mov
mov
mov
lods
jp
add
mov
adc
test
push
in
sarb
vpsubw
xlat
cmc
negl
fbld
pop
pop
repnz
mov
ljmp
mov
or
xchg
jl
pop
add
insb
pop
sub
adc
fbstp
pop
dec
mov
inc
out
xor
mov
sbb
adc
push
cmc
repz
outsb
push
xor
sub
test
push
mov
sahf
decl
bound
insb
sub
sti
out
inc
mov
arpl
cmp
negb
movsl
mov
dec
test
clc
gs
xchg
cmp
sbb
fmull
aaa
bswap
mov
call
inc
dec
cli
or
scas
push
cwtl
xchg
xchg
cwtl
add
jp
ja
xlat
push
sub
mov
test
punpckldq
sub
or
insl
lods
gs
sub
inc
iret
fisubs
jo
pop
repnz
test
outsl
pushf
mov
ficomps
or
or
shl
loop
sbb
xlat
sahf
fcoml
mov
push
into
inc
dec
sbb
jno
pop
lret
test
sbb
lahf
mov
push
xchg
fwait
outsl
inc
and
add
inc
call
jecxz
add
add
dec
iret
xchg
lret
rcll
fsubrs
adc
fstpl
test
outsb
out
mov
jno
imul
pop
fistps
mov
sbb
dec
xchg
in
inc
push
inc
xchg
movsb
ja
or
cld
fsubl
daa
pusha
xchg
mov
cs
xor
in
arpl
sbb
adc
dec
sbb
les
leave
ljmp
ss
test
or
movsb
cmpsb
cmp
aad
jge
sbb
fistps
mov
movsl
inc
cmp
push
sahf
mov
rcrb
sub
arpl
aam
jmp
xchg
icebp
stos
xchg
or
pop
shrb
out
sub
jge
pop
stos
fwait
cmp
adc
mov
adc
std
xor
add
cltd
add
push
lret
xor
sbb
xlat
mov
push
std
push
push
pop
call
pop
and
cmp
mov
popf
lahf
rcrb
in
cmp
mov
pop
dec
dec
mov
call
out
enter
loope
shlb
shr
mov
pop
addb
stc
std
add
adc
add
fisttpll
dec
es
imul
mov
adc
enter
mov
xor
bound
xchg
pop
fildll
iret
loope
mov
dec
sahf
jl
sbb
stos
inc
scas
mov
mov
xchg
pop
xchg
push
or
mov
push
mov
add
mov
dec
fwait
mov
pop
sub
mov
push
out
jmp
imul
pop
into
push
pop
inc
dec
dec
mov
in
dec
icebp
cmpsb
sub
cmp
lock
mov
mov
leave
pop
xlat
je
pop
clc
pusha
xchg
sub
mov
pop
jno
pop
sub
mov
xchg
inc
lea
lret
cltd
and
icebp
dec
cld
sub
lahf
pop
mov
je
push
mov
aad
bound
aad
mov
xchg
mov
inc
push
mov
pop
xchg
daa
aas
cltd
mov
das
call
popa
nop
gs
add
gs
lods
jb
mov
add
jecxz
fldenv
mov
jp
jmp
scas
add
in
pusha
mov
push
addr16
pop
xorl
cmpsl
adc
fstpl
sbb
cmpsb
inc
mov
jns
dec
xor
add
pop
imul
mov
push
out
inc
mov
push
ret
xor
push
shld
mov
mov
add
sbb
ret
pushf
icebp
std
xchg
ret
or
add
add
stos
lret
and
lcall
push
out
lds
popa
jle
push
mov
sar
sbb
pop
inc
jae
out
dec
pusha
das
xchg
lahf
mov
xor
push
dec
test
shlb
rcrl
xchg
pop
in
movsl
and
pusha
insb
jns
xchg
jno
scas
xor
lret
pop
or
and
and
mov
gs
lahf
negl
sub
xchg
adc
cmp
in
and
mov
mov
mov
shll
ret
ret
fbstp
xchg
gs
mov
in
in
orb
cmc
pop
cmp
lret
repnz
clc
inc
in
dec
and
mov
or
xchg
aaa
jno
cld
mov
mov
imul
leave
push
mov
jns
scas
lcall
cmp
jb
nop
and
inc
shlb
pop
fidivrs
int
repz
mov
mov
cmpsb
push
dec
fdivrl
out
or
iret
jbe
xrelease
hlt
cmp
mov
pop
in
int3
mov
cmp
xor
negb
sti
dec
insl
mov
pop
es
push
mov
pop
add
jge
lcall
pop
adc
adc
int
cmp
insb
in
or
fisttpl
mov
jnp
add
pusha
loopne
loope
imul
fdivr
adc
xor
or
loope
cs
js
stos
jl
inc
add
out
sub
pop
adc
mov
adc
outsl
add
mov
and
cmp
cmp
push
add
mov
push
fcoms
bnd
mov
sbb
ror
pop
fwait
dec
cwtl
leave
out
jns
xor
addl
clc
jb
push
jo
imul
add
push
jecxz
lret
out
or
xchg
fimuls
loope
stc
movsb
sarb
sub
jg
pop
adc
sub
jl
xchg
xor
push
pop
inc
adc
addb
out
jl
loopne
pop
std
arpl
fistps
mov
imul
adc
ret
out
mov
or
daa
in
pop
and
adc
leave
inc
ljmp
cmp
xor
mov
cmp
dec
push
bound
ss
push
inc
loopne
aam
sahf
mov
dec
inc
gs
test
pop
shll
stos
mov
sub
aas
gs
lcall
xor
add
lahf
in
lret
inc
incl
jecxz
cmp
dec
xchg
sub
je
aad
and
inc
dec
push
inc
inc
and
ss
mov
test
push
mov
jnp
ror
into
pop
mov
push
push
jg
inc
enter
aad
nop
lret
loopne
and
xbegin
fldl
cs
fwait
mov
sub
data16
xchg
andl
cmp
jmp
xchg
out
pop
and
jns
into
push
jns
lret
inc
and
aas
mov
cmp
ret
loopne
adc
aam
push
addl
sub
mov
testb
leave
lea
push
push
pop
std
divb
sub
mov
pop
out
arpl
jle
inc
sub
loopne
pop
adc
push
add
inc
std
jnp
js
in
sbb
lret
inc
jp
inc
arpl
mov
xor
push
aam
cmpb
cli
stos
lret
imul
sub
in
outsl
sbb
cld
xchg
cmp
shlb
inc
cld
xor
pop
xchg
into
inc
stos
lea
popa
or
cmp
lock
xor
adc
pop
out
popf
add
jae
clc
cld
pop
jae
sub
mov
inc
pause
sbb
adc
sti
rolb
xlat
js
cwtl
or
xorl
in
in
mov
cmp
sub
xorl
jno
enter
and
jle
pop
dec
bnd
in
cmpsb
sub
mov
xchg
lea
scas
mov
add
mov
out
and
lods
mov
mov
inc
pusha
jg
rcrb
pop
mov
pushf
xchg
mov
in
aam
jo
gs
mov
movsb
test
loope
sub
mov
and
sarl
inc
je
cwtl
cmp
cmp
xchg
adc
jnp
xor
xor
sub
mov
aas
test
jae
xor
jne
sbb
or
loop
cmp
or
iret
push
push
adc
add
sbb
pop
pop
ds
popa
and
mov
adc
push
into
sub
aaa
cmc
jne
sbb
stc
out
in
xchg
push
mov
dec
xchg
loope
xor
ds
cmp
mov
out
pop
mov
mov
xchg
mov
dec
hlt
ljmp
or
jne
pop
icebp
cmp
cltd
inc
ror
jb
inc
incb
cmc
inc
xor
mov
xchg
shlb
lea
inc
pop
cmpsl
loop
dec
hlt
fisttps
or
xor
adc
rcrb
push
lods
data16
push
in
inc
mov
movsl
xchg
mov
pop
and
fwait
or
cmp
cmp
movsl
push
enter
stos
jbe
cmp
lcall
jmp
jns
pop
inc
in
jle
out
xchg
adc
scas
cmp
inc
or
ficoml
adc
out
cltd
push
out
fwait
jge
jns
stos
hlt
inc
out
jle
xchg
dec
movsl
fs
lcall
notb
mov
fwait
insb
nop
sub
sti
push
lock
cltd
jge
in
pushf
dec
je
pop
mov
xchg
iret
fld
pop
push
pop
adc
xor
aas
or
push
rolb
adc
lods
add
xchg
sbb
dec
aad
adc
add
rclb
loopne,pn
and
pop
cs
jo
sub
add
xchg
stos
and
jne
call
pop
dec
data16
mov
pusha
push
lcall
add
mov
inc
inc
push
std
mov
inc
cmp
xchg
pop
cmp
mov
pop
pusha
dec
mov
xchg
and
popf
ljmp
inc
aas
mov
and
adc
adc
push
mov
pushf
lods
cmpsl
call
in
dec
adc
sbb
into
ljmp
and
in
cmp
sub
cmp
shl
insl
inc
lods
xchg
faddl
test
lcall
aad
addr16
pushf
mov
pop
jg
cmp
stc
test
pusha
dec
daa
movsb
cmp
imul
test
fstps
imul
pop
div
pop
cmpsb
jns
push
dec
jg
ds
aaa
mov
outsb
leave
into
push
jnp
lock
test
lret
inc
test
shr
sbb
jns
cmp
jle
xlat
cmp
lods
das
push
push
xor
cmc
jmp
lcall
jne
adc
ret
dec
xchg
mov
bound
inc
dec
mov
pop
or
fnstsw
cmp
push
cltd
sub
pushf
adc
mov
adc
add
pusha
ljmp
add
push
pop
cmp
data16
mov
std
xchg
xor
sub
dec
mov
cmpsb
cmc
lret
or
xchg
dec
xor
mov
mov
lret
jl
push
adc
insb
xchg
push
int3
push
aaa
sbb
fcmovnb
adc
pop
inc
jae
or
mov
adc
push
jge
add
call
mov
cltd
ds
adc
les
mov
adc
addr16
pop
sub
int3
mov
dec
pop
xchg
mov
imul
int3
xor
jl
cmp
lret
mov
hlt
mov
push
jg
outsb
jns
jne
lret
cmp
test
sub
pop
lods
xchg
mov
adc
fists
aad
test
sbb
and
dec
jns
push
aas
add
mov
mov
int3
mov
into
daa
aad
subl
mov
sbbl
out
movsl
subl
lret
movsb
mov
test
add
mov
cli
loop
or
repz
xlat
pop
push
push
cs
xor
sub
cmpsb
jecxz
out
xor
xor
leave
xlat
cmp
ja
cltd
orb
inc
ljmp
push
shll
mov
cli
inc
int3
rolb
leave
icebp
and
mov
mov
aas
xchg
repz
jno
cltd
jmp
push
repz
jmp
push
loop
cs
sbb
into
movl
jg
push
pushf
shlb
shlb
or
dec
and
or
or
insb
frstor
adc
ja
cs
sarl
mov
in
jmp
shlb
test
or
das
mov
int
add
cmp
imul
add
ja
in
jmp
push
inc
mov
and
in
stc
adc
or
mov
stos
xchg
popa
xor
mov
xchg
addl
lret
bound
xor
js
pop
loopne
clc
mov
test
js
cmpsb
lcall
mov
insb
pop
stc
hlt
in
cmc
xchg
add
int
mov
dec
mov
dec
push
outsl
jmp
push
mov
xor
clc
xchg
xchg
mov
sahf
andl
in
jmp
jnp
mov
and
add
int3
in
push
ljmp
stos
jmp
jae
add
or
cld
dec
xchg
or
out
mov
cwtl
mov
outsl
sbb
cwtl
jge
out
and
add
mov
jno
push
jp
fstpt
push
stos
cmpsl
ss
adc
ret
sbb
mov
loopne
xchg
test
pop
xor
pop
lods
cwtl
xor
cwtl
repnz
ret
pop
test
mov
dec
mov
call
push
ss
pop
mov
jns
ret
stos
push
mov
cld
out
fwait
pop
jp
xchg
pop
push
jmp
lret
xchg
xor
mov
movsl
pusha
push
js
push
into
jnp
pop
inc
loop
imul
mov
out
jae
xor
jl
notb
adc
js
add
push
outsl
mov
test
pop
mov
subb
inc
jne
outsb
xchg
mov
mov
cli
stos
popa
arpl
mov
cwtl
adc
mov
in
iret
loopne
and
cmp
dec
pop
sub
xor
out
or
pop
push
xor
mul
lds
adc
jnp
inc
or
ret
repnz
sub
outsl
inc
inc
add
xchg
mov
dec
cmp
out
or
mov
add
inc
je
in
and
push
cmp
repz
ljmp
xor
test
dec
decb
push
add
inc
fwait
ret
es
jg
or
jae
out
daa
lods
daa
jno
cltd
adc
push
or
rclb
mov
lock
inc
adc
mov
sbb
mov
push
or
daa
lea
idivl
adc
mov
out
xorb
mov
ret
mov
jg
sbb
or
aam
or
mov
notl
xor
sub
icebp
cli
jmp
pop
adc
outsl
cmp
push
jb
cli
pop
sub
inc
push
aaa
mov
cmpsl
repz
lods
sarb
ss
fsubp
imul
sub
or
out
into
rorb
arpl
fwait
das
je
sub
addr16
xchg
and
lds
jb
ja
xchg
cltd
cmp
andb
outsb
adc
sbb
fxch
out
add
ret
jg
inc
mov
sbb
mov
xchg
sub
test
push
pop
pop
jle
dec
cld
push
jno
in
cmp
jns
and
aad
sbb
jb
fsubs
push
int
sub
xor
xor
or
out
jmp
leave
jnp
xchg
pop
xchg
pop
hlt
rcrl
mov
mov
cmp
sbb
fwait
jo
jle
int3
mov
inc
jl
in
lahf
sbbl
xchg
fistpl
lcall
xchg
ss
mov
ret
into
mov
inc
in
enter
imul
pop
dec
xorl
dec
xor
rcrb
test
mov
or
repnz
dec
mov
jmp
popf
out
push
sbb
gs
or
xchg
push
add
pop
daa
or
ret
dec
lods
xchg
pushf
mov
arpl
inc
in
les
sbb
or
lret
add
inc
shl
cli
dec
add
inc
pop
push
and
xor
or
inc
sbb
push
or
xchg
push
test
adc
in
mov
pushf
push
enter
dec
xchg
add
xor
xchg
movsb
xor
loop
mov
pushf
stos
mov
jae
or
mov
sbb
in
dec
mov
out
jbe
mov
mov
mov
push
gs
pop
push
push
sbb
iret
fidivl
cmp
fs
push
lods
jecxz
loope
scas
mov
scas
and
movsl
mov
xchg
test
jno
and
inc
mov
dec
inc
mov
and
in
test
inc
in
dec
mov
sbb
add
out
or
xchg
fcmovnbe
inc
addl
xchg
mov
stc
push
lock
pop
mov
push
adc
cltd
dec
fldt
xchg
and
xorb
and
pushf
sbb
cmp
mov
dec
int3
cmpl
push
dec
pop
sub
add
sbb
cmpsl
mov
inc
cmpsl
clc
sbb
adc
pop
xchg
or
popa
fisubs
dec
icebp
jle
mov
xchg
insl
cmp
pushf
mov
jns
pop
movsb
inc
mov
inc
loopne
xor
stos
fmul
push
xchg
mov
leave
popf
fwait
lods
xlat
or
inc
mov
cltd
mov
js
dec
sub
repz
test
dec
pop
adc
cmp
sub
movsl
push
push
jg
or
fwait
arpl
test
lret
mov
imul
lock
cmp
mov
rorl
sub
pop
xchg
pop
pop
icebp
aad
pop
enter
orb
jno
sahf
mov
dec
dec
cli
xchg
enter
sarb
hlt
stos
cmp
sbbb
incb
es
inc
pop
loope
pop
sbb
fsubl
jmp
sbb
call
sub
jl
xor
add
pop
sbbl
pop
xchg
cbtw
pop
add
in
icebp
xchg
sub
gs
cmc
hlt
scas
xchg
rorl
add
mov
push
lea
mov
xor
stos
mov
mov
mov
ja
add
pop
fidivl
and
mov
js
inc
push
lret
lret
pop
fs
jno
adc
daa
ret
rolb
lods
pop
nop
incb
sbb
jle
lds
sahf
lret
not
cwtl
shll
inc
and
pop
adc
mov
add
cmp
lret
js
fcomps
stos
aad
pop
or
add
sub
jl
or
int3
dec
push
sub
cmc
mov
mov
aad
popf
shll
shrb
rclb
stos
leave
lcall
mov
jg
or
or
mov
xor
pop
aaa
or
mov
mov
jmp
dec
cmpsl
push
mov
push
jg
lahf
push
lds
jg
mov
fdivs
sub
dec
jp
or
rol
cld
push
sbb
xchg
lea
and
add
fldln2
inc
das
sahf
ja
rorb
adc
pop
or
sub
repz
or
dec
cmp
adc
aaa
aas
mov
pop
mov
xchg
pop
jl
test
lods
fnsave
mov
pop
repnz
inc
or
or
lds
mov
jnp
fisubl
jmpw
and
adc
fbstp
pop
shlb
cmp
rorl
pop
mov
popa
dec
stos
dec
lret
scas
test
ljmp
or
aaa
dec
xchg
jge
bound
add
push
push
inc
data16
aad
mov
pop
imul
mov
cmpsl
inc
lahf
sub
mov
ret
mov
or
add
popa
pop
lods
mov
dec
xchg
sub
test
iret
fldl
movsl
xor
das
orl
sbb
sbb
pop
inc
in
sar
mov
xor
push
sub
test
or
jg
sub
insl
push
fucomip
rol
xchg
int
fwait
jbe
sub
mov
jnp
adc
stos
or
test
flds
lcall
movsl
xchg
jmp
lcall
sti
mov
cmp
fcomps
inc
push
push
mov
call
xor
popa
scas
inc
nop
push
insl
loop
push
daa
out
enter
cmp
jno
add
inc
mov
in
lods
ljmp
pop
pusha
push
cmp
mov
sbb
xor
sahf
push
outsb
adcl
pushf
jae
pop
inc
aam
int
dec
repnz
adc
adcl
flds
xchg
xor
dec
inc
mov
push
je
inc
add
or
mov
cmp
sub
nop
std
adc
or
push
je
jp
divb
jae
jmp
cmpsb
inc
sahf
ss
and
jae
hlt
sahf
mov
or
daa
cld
rorb
adc
xor
mov
dec
imul
pushl
sub
sbb
pop
cs
mov
lods
cmc
lcall
pop
and
repz
mov
dec
clc
rorl
xchg
push
fistpl
les
paddsb
and
movsb
into
push
sub
mov
clc
das
repz
leave
fstpt
into
mov
stc
mull
push
pop
test
add
fdivrp
ja
mov
add
rcrl
dec
cli
repz
inc
mov
or
or
imul
mov
jns
loop
pop
mov
pop
mov
xchg
or
ficomps
outsb
sub
aas
cmp
adc
jo
mov
dec
lods
add
mov
push
sub
sbb
test
and
data16
xchg
mov
adc
adc
and
shll
outsl
xor
cmp
push
push
sbb
lods
andb
xchg
mov
pop
mul
pop
push
jl
fwait
jns
push
cmp
aad
das
mov
pushf
dec
inc
jg
push
in
xchg
ljmp
mov
cmp
imul
xor
fwait
rcll
cli
mov
xor
pop
ret
sbb
jmp
cmp
test
movsl
mov
call
dec
dec
xor
shl
jb
sti
iret
test
enter
xor
mov
ljmp
sub
or
cmp
addr16
jbe
loopne
mov
jl
lods
mov
inc
into
jb
jo
xor
xchg
mov
lahf
mov
jb
pop
jno
mov
add
mov
mov
loope
rcrb
sbbl
jae
push
inc
pop
hlt
adc
flds
pusha
std
popl
shll
insl
mov
and
sarl
pop
jmp
daa
push
mov
sub
push
sub
lods
arpl
push
add
dec
add
gs
and
fcompl
iret
inc
pop
loopne
ret
mov
or
pop
jge
jns
ds
push
cmc
mov
inc
push
pop
inc
jno
sbb
lret
sbb
das
subb
cmp
icebp
dec
jno
ficoml
out
xor
addr16
pop
pop
jecxz
pop
cltd
cmp
and
add
lcall
and
jmp
lods
or
sub
xor
sbb
outsb
fadd
mov
jge
andl
xchg
adcl
xorl
dec
dec
sbb
xor
push
stos
sbb
xor
gs
cmpsb
stc
sti
clc
loope
mov
mov
mov
scas
xor
push
mov
jmp
out
pop
inc
or
test
and
inc
lods
mov
push
lcall
inc
rcll
cld
mull
test
adc
pop
popl
sbb
mov
shr
aad
pop
fwait
rcrl
mov
int
test
xor
jge
sbb
mov
jmp
subl
add
jbe
dec
lcall
cmpsl
orl
subl
insl
shl
out
pop
xchg
dec
and
pop
adc
and
xor
xorb
inc
pop
rcrl
pop
dec
pop
sub
xchg
aas
or
push
cmpl
lret
insl
nop
lcall
int
add
cmp
jno
mov
mov
mov
dec
xorb
jmp
or
push
cltd
and
rclb
adc
stc
adc
pop
mov
outsb
sub
cs
and
mov
paddb
mov
sbb
pop
dec
cmpsb
dec
dec
les
mov
jns
xchg
fmul
cmp
lods
push
cmp
aam
xchg
inc
call
and
sbb
shll
lret
lret
mov
push
popa
push
icebp
in
std
aad
cmp
xchg
fcomip
cmpsb
cmpsb
call
push
out
xchg
cmp
insl
xlat
cmp
jbe
in
out
mov
mov
mov
jae
int3
inc
repnz
sub
mov
nop
xchg
jno
sub
jno
inc
sub
inc
push
gs
cmp
nop
hlt
out
inc
add
ss
and
pusha
repz
icebp
out
aad
std
sbb
dec
cwtl
mov
fidivrl
xorl
daa
repz
xchg
lret
stc
xchg
outsl
pop
notb
inc
stc
in
insl
in
popf
dec
and
int3
cwtl
sub
jmp
repnz
sbb
call
enter
bnd
xor
and
pop
or
cmp
xlat
aaa
iret
clc
mov
xchg
mov
sbb
loope
cmp
aam
jb
arpl
push
movsl
and
test
dec
dec
dec
mov
das
pop
inc
jp
insl
push
mov
push
pop
in
mov
mov
dec
adc
pop
dec
add
negl
call
sub
daa
xor
and
xor
fldl
lods
cmp
jne
xlat
xchg
daa
ds
pushf
test
int3
insb
mov
push
sub
mov
or
sbb
push
cmp
jo
out
imul
pushf
call
jp
jge
jns
add
sbbb
ret
dec
pop
push
out
xchg
rcl
test
lahf
gs
jns
push
into
pop
out
and
xchg
movsb
int
xchg
mov
ja
data16
movsb
cvtps2pd
adc
sub
xchg
cmp
xor
and
cwtl
jmp
and
adc
lret
fdiv
std
jae
dec
repz
mov
pop
pop
pop
push
sbb
adc
adc
scas
jle
in
jge
mov
dec
sub
push
jecxz
xchg
sub
ja
dec
inc
bound
add
pop
xorl
mov
sbb
fistpll
leave
cmc
push
adcl
sbb
and
and
sbb
pop
frstor
out
jmp
pop
xor
into
leave
push
lods
mov
ja
or
sbb
sbb
dec
mov
mov
add
aaa
xchg
popf
out
int
outsl
mov
fisttps
imul
inc
rcrl
fistl
sub
xchg
ret
xor
es
scas
jp
loop
mov
pusha
das
push
or
cs
jmp
dec
mov
pop
mov
push
decb
or
movsb
dec
jmp
fnstenv
cmpsl
xchg
push
push
sbb
push
fistpl
lods
lcall
xlat
es
mov
adc
xor
push
mov
or
js
cli
add
jo
leave
push
mov
cmpsl
lods
rorb
push
std
outsl
jge
scas
inc
adc
es
lcall
adc
cmp
cmp
cli
adc
dec
mov
sbb
cmp
pop
jb
sbb
sbb
rcrl
js
outsl
jo
add
insl
mov
call
cwtl
or
push
aad
sub
or
push
les
add
popa
lds
outsb
aaa
mov
sub
fbld
ds
sbbb
adc
add
mov
adc
shl
rcl
push
and
icebp
push
rcl
hlt
test
cltd
imul
test
xchg
or
dec
fimull
and
mov
push
inc
lcall
lock
or
daa
pop
jnp
sub
popl
xor
mov
int
std
xor
xchg
fcmovbe
mov
push
out
jmp
aaa
mov
mov
dec
inc
imul
xor
or
in
loop
inc
loop
mov
sub
or
aam
inc
lret
sbb
jge
repz
jb
inc
insb
mov
in
mov
arpl
or
mov
pop
jns
and
sub
push
xchg
out
add
outsb
xor
repnz
mov
pop
addr16
sahf
jle
orl
xchg
clc
ret
mov
mov
fs
mov
dec
ja
repz
push
cs
mov
int
xor
inc
pop
in
xor
xor
outsb
leave
sbb
aad
rolb
stos
scas
loope
add
dec
xchg
movsl
das
insl
cmp
adc
cltd
push
ret
sub
mov
cmp
push
or
add
cmpsl
jb
push
lahf
or
mov
add
and
cld
pop
shr
jecxz
inc
arpl
adc
dec
mov
in
or
rclb
out
mov
add
scas
jg
xchg
push
test
int3
adcl
push
rcrl
divl
stos
sbbb
mov
loope
mov
in
pusha
cmp
adcl
gs
cmpb
jl
test
ret
mov
push
jecxz
mov
and
fwait
and
inc
mov
mov
movsb
scas
mov
mov
addl
sbb
inc
inc
xchg
mov
fwait
lret
filds
cld
ret
icebp
push
pop
enter
xor
scas
push
int
pop
push
lods
pop
mov
aam
jbe
jns
dec
enter
inc
add
inc
xchg
test
cld
mov
outsb
test
clc
xchg
pushf
in
and
imul
mov
pop
dec
mov
adc
dec
scas
sub
idivl
push
inc
jge
pop
xchg
push
mov
cmp
sbb
fwait
and
pushw
adc
lret
push
push
ret
fcompl
les
cmpsb
push
js
scas
movsb
insb
xchg
push
cmpl
adc
mov
inc
test
dec
cmp
fldcw
xchg
jae
fwait
xor
add
cmp
pop
add
popa
inc
xchg
dec
movsb
mov
push
mov
mov
push
nop
jae
lea
sbb
in
stos
ss
aas
ficomps
cmpsl
mov
loope
repz
out
arpl
pop
mov
or
int
fidivrs
adcb
xor
lss
inc
push
addl
stc
roll
xor
cmp
add
sub
sub
push
out
pop
fldl
shlb
fsub
sbb
inc
pop
cmp
jge
fwait
jnp
mov
mov
lcall
lock
lahf
xchg
aaa
cmp
dec
jle
sbb
dec
adc
inc
adc
outsb
sub
or
ja
pop
jns
sbb
or
jmp
cltd
push
lgdtl
or
xchg
nop
or
imul
js
test
inc
xchg
fld
sti
xor
cmp
fldt
mov
push
out
ret
dec
xchg
movsb
clc
test
lret
lret
jmp
jl
out
mov
push
pushf
fprem1
push
loope
jo
repnz
pusha
xlat
cltd
inc
pop
adc
and
outsl
xchg
push
es
push
movsl
mov
adc
mov
movsb
mov
negl
call
sbb
pop
add
adc
mov
test
roll
push
or
xchg
cmc
add
push
or
push
jne
mov
pop
and
jle
and
aaa
and
mov
mov
test
pushl
cmp
pop
jno
adc
jmp
lds
les
dec
lds
xchg
mov
sbb
dec
xchg
mov
add
pop
clc
fcmovnbe
push
dec
cli
sbb
push
cmp
iret
ds
lods
test
push
xlat
and
or
sub
xor
push
mov
push
pusha
inc
daa
popa
mov
cmp
cld
mov
xchg
enter
mov
jg
lds
les
xor
pop
jne
pop
je
xor
pop
testl
lret
fldcw
cmovo
outsb
add
notb
sbb
into
dec
xchg
sti
repz
ret
js
out
sub
out
ds
js
mov
xor
das
inc
adc
dec
xor
movsb
fadd
cmp
inc
and
nop
jl
aas
lock
gs
cmpsl
sub
and
dec
outsb
f2xm1
sub
lods
cmp
mov
stos
insb
inc
xchg
push
das
cmp
filds
push
enter
rol
mov
xor
sbb
sbb
arpl
dec
aad
sbb
incb
xchg
jge
mov
or
dec
ja
add
dec
inc
sarl
cmpsl
mov
fs
xchg
movl
stos
inc
in
and
fadd
fs
xchg
ror
mul
sbb
loopne
test
push
sarl
mov
mov
movsb
es
xchg
adc
inc
cmpsb
mov
insb
imul
stos
pop
test
xchg
jl
and
pop
lcall
adc
jo
xor
pop
jle
add
sub
adc
xlat
pusha
mov
lea
push
in
fs
test
or
sub
push
mov
inc
jns
mov
push
ds
mov
outsb
fimuls
iret
mov
ret
xchg
or
lcall
sub
es
in
daa
cmp
dec
pop
xchg
cs
pop
clc
sbb
add
pusha
dec
sub
scas
shlb
repnz
add
fsubs
mov
mov
cltd
sbb
call
pusha
push
jp
cld
xor
iret
sbb
and
mov
loope
lea
rcr
rcll
cmp
les
dec
clc
mov
btc
ret
add
mov
mull
lods
sbb
cmp
leave
aad
aad
cmpsb
mov
jmp
adc
mov
xchg
aaa
sub
pop
mov
fidivrs
xlat
push
stc
stos
mov
mov
dec
in
mov
call
rcrb
xlat
stc
dec
dec
xchg
dec
int3
jp
lret
add
and
ret
sub
ret
mov
stos
shrb
sbb
inc
enter
lcall
sbb
dec
rolb
enter
mov
or
pop
or
in
push
scas
jae
xchg
out
or
or
aad
xor
and
test
into
sahf
or
mov
pop
mov
ret
enter
jle
dec
mov
in
xchg
xor
fisubrl
les
mov
sbb
rcll
and
mov
jno
fwait
sarl
jecxz
fstpt
push
jo
arpl
mov
lcall
gs
dec
adcl
inc
sub
xchg
sbb
xchg
push
xor
test
push
dec
push
hlt
fisubrs
leave
add
jns
int3
xchg
xor
repz
or
call
dec
sub
out
and
fwait
adc
push
jle
adc
popa
xchg
xchg
icebp
pushw
daa
sub
xchg
xchg
repz
jl
jmp
fmull
adc
mov
ljmp
outsb
mov
clc
push
fwait
adc
mov
cmpsb
fsubs
or
xlat
ja
mov
add
lods
int
xchg
pop
movsl
scas
adc
dec
jmp
addr16
push
xorb
ret
decb
pop
and
insl
dec
xor
mov
mov
test
xlat
int3
shr
push
in
push
movsb
ret
loopne
mov
stos
mov
inc
xor
lret
dec
repz
jnp
mov
add
inc
jae
xor
push
fwait
mov
jnp
outsl
xchg
sub
scas
std
lods
ljmp
icebp
and
mov
in
xchg
push
push
cs
sbb
int3
fldcw
pop
dec
cmc
insl
lcall
clc
push
or
out
imul
loope
or
cltd
ret
out
mov
cltd
push
out
rcr
ret
sbb
sub
outsb
repz
jae
lods
icebp
mov
adc
in
push
xor
imul
mov
push
mov
inc
adc
pop
cmpsb
mov
sub
dec
dec
dec
sub
mov
stc
rclb
ret
inc
xchg
cmpb
or
pop
push
push
and
scas
jo
add
flds
inc
push
add
in
sbb
xor
jp
jnp
and
cmp
and
sti
mov
jne
pop
leave
bound
add
sub
test
dec
fdivr
xor
pop
sbb
cli
or
ja
jnp
call
dec
cs
pop
sbb
and
insl
mov
rcrl
fwait
das
xor
pop
imul
call
je
sbb
sti
push
out
mov
fdivrs
sub
add
add
gs
fcoms
mov
inc
stc
scas
outsl
add
push
test
push
lcall
xor
les
jle
push
aas
and
into
mov
add
arpl
xor
lea
ret
in
inc
adc
cmp
push
mov
adc
inc
scas
sub
std
imul
xor
out
or
or
inc
clc
xor
sbb
dec
std
mov
fistpl
xlat
mov
push
inc
pop
jno
push
orl
icebp
push
or
daa
ljmp
sbb
fnstsw
movsb
icebp
cs
fstps
jge
jae
rcll
pushf
sysenter
jmp
bound
sub
push
mov
jno
negb
mov
jbe
fs
aas
lock
jno
mov
inc
stos
in
or
aaa
jmp
je
orb
loopne
mov
jp
scas
jo
xchg
repnz
lret
cmp
mov
fcom
ja
jp
jne
cmpsb
popa
mov
loopne
js
orb
mov
mov
dec
or
fdiv
inc
sbb
or
mov
sti
cmc
or
aas
xchg
rcrb
scas
mov
adc
leave
fdivl
sub
pop
pop
mov
cwtl
cmc
pop
stos
movsl
xchg
jns
cmp
jge
adc
mov
mov
pop
hlt
scas
xchg
lret
push
enter
dec
jg
mov
xor
xchg
sbb
adc
dec
rorb
int
xchg
pop
xchg
insb
xor
inc
jb
into
pop
add
fwait
into
adc
bound
add
xchg
sub
push
scas
xor
jb
sbb
xchg
inc
jmp
mov
mov
daa
jge
fstp
and
pop
add
test
idivb
or
fwait
data16
mov
ret
add
int
jb
int
loope
outsb
into
ret
xchg
pop
pop
cs
and
add
mov
add
xchg
nop
inc
xchg
jb
add
insl
nop
icebp
xchg
push
rorl
sbb
imul
mov
mov
aad
aaa
enter
sub
pop
subl
jne
and
ss
pop
and
idivb
lret
and
inc
scas
outsl
mov
icebp
test
sbb
and
push
out
aam
lret
aaa
add
lds
popf
icebp
cmp
add
stos
repz
cli
jg
test
mull
or
adc
enter
adc
jno
cli
push
jmp
out
jb
inc
xchg
push
and
dec
xlat
push
clc
lods
xchg
bound
add
ljmp
mov
sti
mov
dec
cmp
cmp
test
mov
hlt
sub
gs
and
shl
test
icebp
insl
ret
jbe
les
cld
repnz
cwtl
xor
dec
xchg
dec
cs
ljmp
ds
pop
leave
or
repnz
dec
int3
fsubl
pusha
jbe
sub
mov
cs
cmpb
mov
pop
ljmp
mov
subb
nop
add
xchg
aaa
in
mov
in
jmp
pop
and
insb
lahf
push
dec
stos
inc
ret
cltd
add
mov
and
dec
stc
int3
fidivrs
das
ret
imul
xchg
jle
jmp
inc
jge
fsubr
imul
insb
clc
mov
subl
adc
hlt
add
inc
ljmp
fs
cs
out
xor
xor
cli
mov
xchg
scas
jge
in
sarb
push
sub
adc
sub
aad
jne
ljmp
sub
imul
out
lds
inc
pop
mov
jbe
dec
and
ss
outsb
cmc
jl
inc
cld
xchg
inc
andb
adc
fcompl
and
mov
icebp
mov
mov
inc
stos
jb
movsl
into
mov
or
lcall
shrb
add
insl
dec
cli
inc
lret
cltd
loope
sub
and
inc
xor
xor
andb
jns
mov
icebp
jno
add
test
xchg
outsb
sti
push
push
icebp
xchg
sub
xchg
or
pop
fisubrl
fdivs
mov
mov
add
inc
insb
ss
clc
lret
retw
int3
es
xchg
jp
inc
mov
xor
push
popf
xchg
rcrl
and
jae
call
xchg
pusha
in
pop
add
out
movsb
jl
pop
jle
jno
bnd
cwtl
mov
enter
mov
sbb
ljmp
mov
dec
pop
mov
push
inc
cmp
loope
shrb
ret
negb
lds
call
aad
jge
js
iret
or
call
jecxz
push
xor
inc
sbb
push
adc
mov
add
cmp
mov
ja
or
movsb
stc
enter
lods
dec
push
xor
cs
movsl
mov
inc
inc
push
mov
mov
mov
jmp
sbb
test
mov
hlt
push
xchg
fdiv
ret
outsb
js
push
xor
negl
into
sti
les
ja
cmp
cmp
rorb
sub
gs
orl
or
and
push
pop
lock
cmp
in
imul
mov
inc
push
outsl
push
mov
inc
or
lock
jp
mov
int3
inc
popf
jle
xchg
mulb
push
mov
stc
dec
mov
xchg
jp
xchg
push
in
xchg
test
or
jmp
popf
pushf
roll
mov
pop
sub
mov
aas
fidivrl
mov
mov
fsubr
mov
aas
in
je
orl
adc
nop
mov
adcl
arpl
pop
iret
loope
movb
dec
fistps
and
add
rclb
cltd
jg
lret
xor
scas
mov
pop
mov
repz
xor
mov
dec
test
dec
test
adc
in
sti
test
mov
in
mov
mov
leave
push
push
scas
xchg
cmpsb
inc
js
push
xor
push
cmp
std
fadd
sbb
fldt
ltr
pop
ret
inc
lods
lods
and
test
mov
and
push
cmp
cmc
scas
push
in
push
enter
add
push
sbb
xchg
sbb
cmp
test
pop
sahf
dec
shrl
lahf
pop
pop
jp
sbb
add
mov
mov
outsl
popa
cwtl
xchg
jmp
cli
sub
jl
ret
xchg
cmc
decl
inc
movsl
lods
push
and
xor
testl
cli
lret
sti
out
inc
repnz
cmp
ds
xchg
fs
cmc
arpl
mov
icebp
or
hlt
scas
aaa
adcl
and
or
enter
adc
xor
in
and
imul
dec
icebp
call
pop
ljmp
pop
insl
ret
decb
xor
sahf
icebp
cmp
loope
xor
popf
add
sbb
shrl
js
fwait
stos
stos
add
fldl
sbb
int3
gs
negl
pop
mov
data16
int
inc
imul
dec
jge
add
loop
bound
call
inc
out
adc
mov
or
daa
test
pop
xor
inc
aad
scas
outsb
mov
loopne
push
fstl
adc
hlt
xor
int3
cwtl
icebp
inc
fwait
fwait
clc
movsb
fsubp
adcl
daa
mov
cwtl
cmp
mov
xor
lock
pushf
dec
sbb
adc
fisubrl
dec
cmpsb
adc
add
mov
xor
lea
mov
and
xchg
jl
ret
cmp
xchg
jle
jmp
sub
fcomps
out
mov
xchg
cmc
out
jmp
addl
mov
pop
mov
nop
push
jb
nop
ss
lock
sbb
adc
and
shrl
or
dec
jns
loop
sbb
adc
jl
and
aas
inc
arpl
jb
divb
add
xchg
aad
adc
sub
ret
push
mov
pusha
inc
pop
enter
sub
mov
fcmovnu
xchg
inc
adc
lds
mov
outsl
xchg
cmc
mov
std
adc
dec
lret
scas
rolb
roll
xor
das
mov
nop
sub
scas
or
imul
ljmp
int
adc
aad
and
sahf
xchg
std
jmp
push
jno
iret
test
dec
loop
mov
sub
cltd
jg
call
mov
scas
push
sti
xchg
lret
fsubrl
xchg
pop
pop
sub
sub
test
sarb
pop
insl
cmpsb
cmp
shrl
lret
repz
scas
adc
aad
stc
and
das
jns
shrb
outsb
je
jo
imul
inc
xchg
loope
leave
aam
out
daa
push
jne
lock
mov
ss
pop
fwait
sbb
inc
cmpb
bnd
mov
mov
fnstsw
jmp
lret
out
push
shl
les
adc
adc
jle
aaa
cwtl
lahf
push
shl
mov
scas
xor
mov
popa
push
pop
add
jecxz
push
icebp
cli
push
xchg
sbb
or
insb
xor
push
sar
push
add
fidivrl
movsb
repnz
and
rep
mov
ret
lds
into
and
jno
stc
imull
pop
cmp
sbb
loop
jns
cmpsl
or
push
test
pop
rcrl
ret
lock
fwait
xor
add
fstl
sbb
out
lds
repz
in
push
dec
pop
xchg
and
adc
cmpsl
pop
gs
imul
jnp
or
jp
mov
adc
popa
jp
f2xm1
push
cmp
fdivp
sbb
mov
and
les
mov
shl
std
cs
and
cmova
mov
jne
cmp
add
mov
jo
int3
cltd
fisubrs
mov
sub
cwtl
repz
fidivl
stos
adc
dec
ret
cli
jae
inc
dec
cltd
shl
pop
xor
adc
insl
or
cmpsl
sub
mov
repnz
ljmp
pop
lcall
idivl
shl
mov
in
sub
loop
cmp
aaa
test
out
stc
into
xchg
loope
cltd
sbbb
xor
mov
or
sub
add
rol
iret
inc
imul
rcrb
mov
inc
inc
xor
popf
out
insb
data16
fidivs
mov
pop
lods
dec
inc
not
push
dec
mov
mov
jo
pop
roll
hlt
in
pop
push
std
mov
in
add
pop
pop
pusha
jp
push
subl
adc
mov
lcall
loope
mov
cmpsl
ja
mov
sbb
test
je
jp
mov
jns
imul
icebp
xchg
iret
or
and
mov
jo
dec
mov
xchg
das
cmpsl
lret
xchg
cmpsl
xor
sub
incl
jae
jae
jnp
mov
pop
xlat
pop
ss
mov
mov
ss
imul
in
icebp
mov
jmp
push
nop
mov
mov
dec
fcoml
and
xchg
mov
inc
pushf
cmpsb
adc
jne
ljmp
adc
add
jo
xor
fidivl
stc
or
xor
fdivs
cmpxchg
test
or
cltd
xchg
dec
mov
loop
pushf
icebp
shlb
push
cmp
mov
and
mov
mov
call
mov
xchg
popf
sub
pop
and
cmp
scas
pop
out
sti
jmp
xchg
fisubrl
cmp
mov
ljmp
in
rcrb
mov
and
xorl
cmp
out
sub
mov
std
add
scas
jbe
inc
cltd
push
jne
rorl
es
inc
mov
adc
in
jg,pn
dec
jge
out
xchg
nop
in
jl
jl
jle
in
mov
popa
fmuls
nop
insl
xor
jg
movsl
imul
flds
fmulp
add
hlt
pop
push
inc
add
lret
clc
lcall
jns
lock
adc
repz
icebp
test
mov
mov
cwtl
fwait
mov
nop
into
or
out
mov
ds
lock
mov
or
aam
mov
cmc
mov
test
imull
xchg
push
in
mov
rol
int3
cmp
subl
loopne
mov
test
jbe
push
adc
mov
jecxz
mov
push
lea
mov
lahf
repnz
xchg
push
jg
and
cmp
push
sub
out
lret
mov
cmpl
add
xchg
ret
jmp
xchg
insl
sbb
ljmp
fsubs
rcrl
lods
rcrb
dec
cmp
notb
sub
or
jmp
xchg
sbb
adc
jge
mov
mov
mov
pop
mov
loop
scas
cmc
aad
aaa
movsb
jnp
mov
clc
push
enter
in
fs
mov
sbb
inc
adc
rorb
ljmp
pop
sti
lea
leave
mov
add
sarb
shll
cwtl
and
adc
cli
scas
xchg
jmp
lcall
xchg
cs
mov
das
cmc
scas
mov
xchg
lds
rcl
cs
decl
gs
add
scas
shll
and
push
dec
adc
push
shrl
pop
jmp
pusha
xchg
inc
call
test
sbb
loop
or
mov
fcomps
out
pmaxsw
pop
shl
jo
fsubrp
lods
xlat
in
ret
mov
repz
cmp
pop
jle
add
imul
rcrl
xchg
lcall
push
scas
clc
sti
sarl
lods
movsl
fnstenv
add
sbb
mov
mov
inc
mov
stos
inc
in
push
int3
lea
js
fwait
mov
push
mov
shl
sti
aaa
mov
ljmp
and
push
jecxz
repnz
sarl
andl
dec
hlt
jmp
add
mov
inc
push
into
push
fistpll
pop
mov
jmp
inc
out
jns
stos
out
mov
inc
fists
test
push
adc
xchg
pop
mov
mov
rorb
lret
xchg
and
cmp
sti
test
pop
out
lods
mov
mov
sar
outsb
imul
cwtl
fisttps
jp
and
mov
je
into
cld
pop
cs
xchg
cmp
rolb
jno
scas
fisubs
stc
insl
cmp
ret
jmp
jp
lea
jo
jle
mov
mov
test
loope
adc
inc
inc
stos
or
add
les
shl
cltd
fsubr
in
das
or
jmp
jnp
or
dec
std
and
fmul
lahf
inc
ds
mov
push
test
aad
sbb
mov
adc
dec
push
test
or
rcrl
adc
gs
mov
xchg
xor
fistl
inc
dec
lahf
mov
push
pop
fldpi
cmc
xor
xor
pop
mov
pop
imul
cmp
push
mov
cmpsb
adc
negb
xor
xchg
das
xor
pop
mov
stos
pop
sahf
dec
cmc
fistpl
jmp
fmuls
mov
push
iret
mov
jg
testl
lcall
mov
mov
cli
xlat
loop
imul
mov
popf
movsb
loope
sub
ds
fisubs
push
inc
push
lods
mov
in
scas
out
cmpsb
dec
fcoms
inc
xor
inc
xor
or
push
loopne
dec
stos
sub
fcomi
jecxz
mov
inc
outsb
add
mov
push
push
pop
sbb
fadds
or
leave
lds
loopne
sbb
lods
add
pop
mov
out
scas
mov
imull
inc
push
cmpsl
add
dec
add
ds
fxch
inc
cmc
and
out
jle
adc
int3
jo
mov
or
ja
loopne
push
test
xlat
dec
mov
dec
test
mov
mov
shlb
mov
fiaddl
push
xchg
std
icebp
pop
mov
imul
pop
cmp
lods
jmp
jl
pop
sbb
and
push
inc
and
fs
push
insl
xor
jle
rcll
ror
jmp
testb
xchg
cmp
dec
stos
fidivrs
cmp
mov
stos
cmp
inc
jmp
call
dec
cmp
inc
lret
mov
push
mov
lret
jno
push
fnsave
push
mov
cld
nop
xchg
push
lock
xchg
mov
stos
clc
mov
mov
xchg
xchg
aam
ftst
lds
mov
int
mov
lods
jb
sub
insb
fsubrl
cmp
sti
insb
and
add
cltd
pop
mov
arpl
xor
stos
dec
lods
je
movsl
pop
jns
mov
lods
lret
popa
xlat
in
pop
mov
jecxz
leave
or
xlat
jle
fsts
sub
je
jge
data16
push
sbb
iret
loop
inc
lcall
loope
mov
lds
dec
xor
xor
fistpl
jl
loope
push
inc
decb
cmpsb
mov
adc
outsl
adc
push
mov
dec
lahf
push
jle
aas
test
pop
fsubrp
bound
repz
cmp
dec
mov
jle
and
test
in
mov
push
loopne
push
cmp
pushf
xor
xorl
or
fcoms
enter
mov
lahf
nop
adc
push
fiaddl
andb
shlb
cli
cwtl
dec
clc
lods
out
dec
cmp
pop
aas
pop
mov
push
lods
mov
xor
add
push
sub
mov
shll
mov
movsl
pop
sbb
mov
jno
jge
cwtl
shlb
popf
test
aaa
mov
sub
movsb
mov
mov
lcall
mov
adc
dec
pop
lahf
clc
push
mov
cld
cs
jbe
sbb
sub
push
sub
faddl
aad
lds
xor
lods
or
je
jmp
dec
cmp
popa
mov
dec
imul
andl
lahf
push
jmp
rcrl
or
mov
dec
mov
dec
imul
sub
add
mov
cmc
cmp
popf
adc
sbb
pop
out
push
leave
jne
rcll
lods
daa
sub
jmp
rorb
or
iret
lea
push
and
xor
push
popa
jnp
je
lods
rorb
mov
xor
test
add
mov
and
dec
push
mov
outsb
cmp
adc
xchg
add
dec
pop
insb
mov
inc
and
sub
fcom
stc
sbb
lahf
xchg
xchg
outsb
inc
cli
mov
sahf
mov
int3
test
jge
jmp
mov
push
xlat
push
xchg
rep
loop,pt
ds
inc
fmuls
push
mov
aam
xor
cmp
dec
stc
or
mov
cmpsb
cmp
movsl
mov
outsl
std
and
arpl
sbb
push
inc
sahf
fcomps
pop
data16
adcb
and
adc
cltd
test
mov
enter
adc
or
fwait
ret
fcomip
jle
mov
popa
mov
and
mov
jne
cli
sbb
adc
or
or
xor
pusha
xlat
pop
shrb
outsl
fcompl
shll
ficomps
arpl
rcrb
mov
cmpsl
mov
ljmp
xchg
fchs
ds
pop
mov
adc
and
jmp
fcoml
lds
in
xchg
leave
and
je
cmpsb
test
scas
aad
es
sbb
iret
mov
xor
out
cli
hlt
es
cmp
cs
adc
mov
cmp
mov
sbb
xchg
ja
fsubr
lds
jecxz
daa
xchg
xorb
cltd
cli
jnp
sub
mov
stos
popa
xchg
inc
ror
loopne
fisttpll
xor
sbb
and
bound
sub
mov
xchg
mov
rorb
fistl
std
pop
and
and
je
insb
insb
cwtl
push
rolb
int
rorb
fnstcw
push
sbbl
mov
das
dec
push
xor
call
push
or
cmp
pushf
sarl
inc
push
popa
xor
inc
inc
sub
jbe
popa
dec
out
inc
lret
or
add
bound
daa
jo
lcall
pop
jmp
cmpsb
mov
mov
sahf
stos
movsb
cmc
mov
call
push
and
adc
insl
or
fnstcw
mov
inc
cmp
mov
sti
xchg
loop
cmp
push
mov
popa
lret
mov
andb
lods
or
dec
nop
out
cmc
imul
or
cmpsb
mov
and
lods
inc
shrl
add
add
push
sbb
pop
es
dec
dec
loope
out
mov
mov
jns
mov
int
fisttpll
test
adc
orl
dec
mov
jg
fiadds
pop
pop
pop
inc
inc
test
rcpps
push
xor
stc
pop
adc
xchg
call
and
add
jl
lret
mov
shr
les
fisubrs
psrad
mov
or
inc
sub
sbb
cs
add
xchg
std
icebp
xchg
and
inc
div
in
outsl
xchg
or
icebp
clc
pop
jmp
sub
icebp
add
sub
icebp
mov
cmc
sbb
jl
data16
out
out
jae
jge
and
inc
lods
push
test
into
cli
out
mov
jge
ret
and
test
xchg
nop
fs
aas
cmc
jge
xor
and
sub
inc
add
and
iret
ds
jle
lds
inc
jnp
cmp
xor
adc
rorl
enter
cwtl
dec
xor
inc
xor
xor
inc
jns
sti
aam
and
cmp
xchg
loope
sarb
mov
inc
and
in
test
out
dec
jge
and
dec
and
mov
jae
push
and
or
add
dec
pop
adc
addr16
push
adc
rclb
xor
push
inc
mov
adc
push
jo
or
or
out
imul
pop
inc
es
fs
in
mov
lods
add
push
cmp
push
and
imul
scas
fld
test
pusha
inc
int3
push
mov
ficompl
fistl
push
daa
push
jo
xchg
mov
movsl
pop
push
clc
outsb
xor
mov
stos
cmp
or
xchg
into
jl
cmp
sbb
or
mov
mov
or
in
add
insb
mov
lret
cli
dec
and
daa
loope
scas
xor
or
pop
es
and
ret
and
leave
inc
cmp
pop
pop
inc
mov
roll
lahf
leave
andnps
enter
sti
stos
popa
sbb
mov
and
and
cmp
xchg
int3
adc
adc
or
dec
jns
ret
daa
and
shll
jmp
icebp
sbb
adc
jo
out
lret
imul
sbb
sahf
mov
stc
mov
sub
ss
push
jmp
jmp
rorl
push
jge
test
das
testl
je
xchg
xor
popa
or
inc
out
xchg
sbb
mov
fs
sbb
add
lret
aam
mov
stos
divl
cmp
in
stc
mov
dec
enter
jne
mov
stos
sbb
shl
adc
pusha
or
aad
into
pop
fmul
out
cmp
pop
repz
rolb
add
and
mov
stc
mov
pop
mov
mov
push
test
push
mov
popa
sub
dec
dec
loop
gs
sub
pop
mov
loop
out
inc
gs
mov
sub
adc
and
sbb
ret
cmp
dec
xchg
jge
loope
leave
xor
add
fisttps
xchg
out
pop
cmp
int3
sbb
pushf
sub
pusha
inc
add
mov
stos
lods
es
hlt
jnp
std
cmc
mov
add
rol
xor
data16
ret
lret
add
mov
int3
xchg
and
cmp
popa
in
fsubrs
je
xor
xchg
mov
movsb
lods
fwait
or
fisttpll
mov
out
cmp
fidivrl
out
aas
scas
imulb
xlat
fistps
dec
xchg
test
cs
pusha
pusha
rclb
or
lds
les
loopne
pop
pop
pushf
adc
add
clc
repz
fdivs
jnp
mov
imull
outsb
gs
repz
ss
add
cmovnp
push
mov
jb
gs
dec
loopne
mov
mov
in
jns
ss
fisubl
dec
shll
mov
push
movsb
xlat
imull
and
scas
inc
popf
inc
cmp
cmc
outsb
dec
mov
nop
ljmp
inc
jbe
pop
dec
sahf
xor
mov
push
or
jecxz
jmp
adc
fsubl
sti
inc
scas
push
dec
sti
mov
sbb
pop
orb
mov
inc
scas
and
push
add
lret
mov
pop
push
lods
imul
mov
push
lock
test
dec
sub
and
inc
push
imul
pop
or
jnp
jge
stc
mov
test
cmp
add
inc
fadds
mov
xor
lods
mov
dec
mov
sub
enter
cltd
sbb
cmp
push
pop
mov
lods
mov
nop
add
jp
leave
ret
add
cmp
out
push
cmp
fbstp
dec
leave
or
mov
jge
inc
std
icebp
pop
ret
mov
mov
dec
idivl
fwait
mov
sbb
arpl
push
jp
movsb
jg
mov
add
lahf
subl
mov
xchg
sbb
push
mov
and
movsb
lea
mov
push
jno
xchg
aaa
jne
es
js
mov
stos
push
mov
xor
fisttpll
negl
iret
jmp
ds
inc
adcl
inc
div
sbb
jl
push
mov
xlat
add
stos
mov
cmp
ficoms
not
cld
xor
pushf
cmpsb
scas
jns
divb
sbb
sbb
mov
pop
jle
call
imul
pusha
xor
mov
roll
fsubs
xor
xchg
mov
insb
cwtl
sub
cmp
mov
jns
or
xor
xchg
mov
nop
or
icebp
or
das
jmp
loop
cmp
jecxz
dec
rolb
test
mov
and
add
cmp
dec
jmp
mov
movsb
je
scas
lret
pop
mov
mov
pop
leave
pop
xor
fs
subl
jl
nop
pop
inc
push
repz
js
pop
fistpll
out
xor
mov
cmp
jnp
inc
frstor
adc
bound
stos
cmpsb
mov
les
jno
sub
jnp
push
jno
movsl
out
mov
fstp
pop
push
movntps
jns
ljmp
fsubl
fwait
aaa
push
in
push
dec
nop
std
sub
jne
xchg
or
mov
in
movsb
in
aam
call
xchg
sbb
inc
jle
mov
add
xchg
fdivr
out
fiadds
es
pop
mov
sub
xchg
jo
cmp
fldt
lods
subl
ljmp
jmp
dec
aaa
cmp
jmp
jbe
popf
jmp
jp
or
push
cwtl
mov
imul
add
inc
subb
sahf
cmp
fisttpl
mov
hlt
mov
dec
jmp
ret
pop
cmp
sbb
xchg
les
xor
add
mov
mov
js
mov
mull
stos
xchg
addr16
lcall
stos
mov
mov
adc
in
pop
loopne
fnstsw
xchg
lcall
aam
or
push
mov
loop
push
andl
xchg
jl
clc
dec
divl
push
dec
mov
mov
std
jmp
pop
mov
iret
cmpl
add
mov
jmp
mov
loopne
jae
sarb
insl
mov
push
ss
xor
add
push
popa
push
jno
test
mov
in
sub
sarl
cmp
loope
inc
dec
loop
shlb
movsl
cmp
push
cld
ror
dec
vpcmpgtb
es
jle
mov
outsl
fsubs
jmp
cmp
cmpb
xor
adc
inc
fldl
lahf
je
push
fstpl
push
and
sbb
ret
inc
insl
jne
or
jne
call
sbbl
sub
test
pop
popf
sub
fistl
dec
jge
push
les
sub
and
jmp
insl
mov
ja
ror
xor
std
imul
in
and
bound
aaa
pop
test
fildll
mov
test
jb
cmp
leave
ret
mov
cmpsb
mov
movsl
or
jg
insl
jecxz
aam
gs
orl
outsl
jg
or
lea
xchg
sarb
mov
pop
das
jbe
jns
inc
xchg
inc
ret
ljmp
cmpsl
fnsave
adc
bound
icebp
push
outsl
fwait
popa
stos
xor
xchg
jno
addl
and
cmp
jp
arpl
cli
or
scas
loopne
test
test
mov
sub
mov
orb
sub
cwtl
pop
rol
bound
pop
mov
sub
mov
cmp
xor
test
ss
jo
dec
mov
sbb
or
dec
inc
xor
lcall
xchg
ljmp
lock
das
add
adc
scas
or
sub
push
mov
imul
jl
push
mov
push
mov
inc
sbb
jmp
jbe
movsl
mov
test
popa
inc
pushf
xor
or
je
stos
aam
ret
lods
push
ret
fmull
and
cmp
xchg
test
add
lds
lock
inc
dec
loope
jb
xor
inc
or
pop
and
movsl
mov
ret
je
adc
ja
adc
dec
sbb
imulb
call
aam
push
mov
popf
in
push
or
mov
pop
sub
loop
jbe
shl
mov
push
scas
mov
mov
mov
add
movsl
aam
dec
inc
repz
stos
in
pop
inc
js
add
inc
xchg
imul
aaa
or
adc
into
repz
or
int3
leave
imul
mov
aam
xchg
mov
dec
pop
cli
pop
in
sbb
pop
adc
addl
jge
sbb
pop
movsl
adc
mov
pushf
cmpsb
idivb
jle
test
unpckhps
mov
push
hlt
scas
rclb
stos
sub
repnz
pop
sbb
add
push
enter
test
stos
pop
not
jnp
sarb
adc
mov
aas
mov
jae
in
subb
mov
and
mov
aas
mov
addl
lcall
repnz
fwait
jp
or
push
add
cmp
and
and
mov
jae
push
jg
hlt
jbe
jl
negb
jl
popf
xchg
add
rcll
add
je
sbb
mov
jle
popf
pop
movsb
pop
or
mov
cwtl
push
hlt
cli
mov
fs
aaa
push
adc
push
test
pop
out
fmuls
sbb
fyl2x
jb
lds
idiv
xlat
mov
in
outsb
out
cmp
pop
fdivl
xchg
aam
je
or
shlb
cmpsl
push
inc
sbb
arpl
cmpsb
jg
xchg
push
and
movsl
out
orps
aad
test
or
and
call
orb
dec
pop
push
pop
pop
enter
sbb
adc
xchg
push
ss
pop
rol
push
leave
mov
ret
test
rol
mov
pushf
popa
je
sbb
int
mov
test
mov
mov
les
jle
es
das
pop
imull
sub
mov
mov
scas
push
mov
repz
das
imul
push
ss
mov
mov
in
push
push
xor
add
mov
lret
pop
jp
popa
test
jmp
inc
mov
inc
cli
das
sbb
inc
mov
mov
mov
inc
push
inc
bnd
add
pop
movsb
mov
xor
pop
xchg
mov
push
dec
into
faddl
xlat
cmc
in
test
or
lods
mov
pop
cmp
lods
push
pushf
test
and
mov
jo
xchg
pushf
xchg
add
pop
test
nop
or
push
sahf
jns
ja
or
add
push
pop
lret
mov
in
jno
mov
and
popa
sbb
inc
mov
outsl
cld
rsm
add
add
dec
in
mov
push
loop
int
mov
jns
inc
lods
ds
inc
sub
push
scas
mov
enter
je
push
std
jae
mov
xchg
inc
mov
mov
cmp
xchg
stos
mov
int3
cwtl
mov
in
test
xor
sub
stos
lcall
cmpsl
push
or
sahf
out
add
mov
movsl
popl
xor
sahf
xchg
lods
outsl
inc
sbb
movsb
xor
xchg
test
mov
add
loop
data16
cmp
mov
jmp
push
pop
xchg
push
jp
popf
and
mov
jge
scas
movb
aaa
test
int
lds
push
into
or
ficompl
and
pusha
adc
les
mov
or
inc
out
aas
pop
dec
fwait
out
mov
and
inc
mov
nop
lret
fmul
and
dec
jns
mov
and
movsl
imul
add
call
mov
test
cmpsl
out
leave
pop
dec
mov
lret
aad
and
repnz
xor
cmp
inc
iret
or
xor
cmp
pusha
jg
pop
inc
sahf
inc
jge
cld
mov
iret
push
into
out
outsl
mov
jg
and
fs
xor
fistl
mov
push
fimuls
outsb
mov
adc
cli
push
adc
ja
icebp
or
pop
lahf
pop
jle
in
fdivp
pusha
and
dec
dec
xchg
adc
mov
mov
lahf
int
lahf
add
pop
out
jne
push
push
aam
stos
jle
xlat
das
mov
pop
push
fisubs
iret
and
clc
lock
inc
sti
ffreep
adc
add
add
dec
insb
pop
in
imul
jno
lds
shl
dec
mov
fwait
jb
pop
or
repz
cltd
and
push
mov
pop
adc
bound
test
push
jge
xchg
dec
inc
adc
or
jp
call
mov
insb
es
inc
stc
and
pop
adc
mov
imul
adc
testl
lahf
xorb
mov
sub
loopne
insl
cmpsl
and
scas
pop
ss
shl
jp
lret
out
loopne
aas
andl
ja
insl
sbb
rorl
mov
jg
adc
iret
mov
sub
daa
aaa
jmp
mov
fcomp
mov
loop
mov
add
push
cmpsl
lds
add
icebp
clc
daa
movsl
out
pusha
mov
ret
ret
push
popa
jmp
out
xor
xchg
outsl
add
fs
lods
arpl
jle
adc
fs
jg
out
push
into
sbb
nop
fildll
mull
xor
hlt
xchg
mov
cs
pushf
repz
push
aaa
pop
adc
xor
test
ja
test
cld
push
push
in
xchg
nop
enter
into
es
fisubrl
sti
sbb
jne
lret
orl
and
fs
imul
movsl
fldl
lock
orb
and
jbe
pop
push
repz
mov
mov
push
outsl
mov
push
aas
sub
inc
mov
pusha
jge
enter
clc
pop
and
dec
fsubs
dec
cs
cmp
pop
add
jl
outsb
cmp
sbb
add
add
repnz
data16
jg
arpl
dec
mov
pop
movsl
inc
xor
int
pop
inc
stos
mov
imul
mov
jl
dec
pusha
icebp
xchg
mov
sub
xor
mov
popf
push
adc
jmp
cmc
jg
sbb
bound
int
xchg
mov
jnp
movsl
mov
cwtl
cmp
sub
jmp
dec
inc
leave
inc
and
jae
out
jae
int3
cmpsb
rcr
mov
lock
shll
lods
aas
mov
jae
jmp
pop
cwtl
sub
xchg
xor
and
xor
cmp
ss
and
push
mov
jle
and
aad
jmp
movsb
pusha
adc
insl
xchg
cli
push
push
cmp
cmp
sub
movsl
in
addl
in
in
sti
mov
lcall
dec
mov
xchg
xchg
insb
lock
aas
add
inc
daa
daa
in
std
jecxz
sbbb
divl
jmp
not
cmp
pop
xchg
cmp
mov
les
lea
mov
mov
les
fdiv
out
insb
mov
stc
or
imul
sbb
scas
mov
mov
cld
leave
ja
adc
mov
gs
mov
loopne
hlt
inc
pop
fidivrl
cwtl
fwait
repnz
jp
shll
sub
push
adc
out
sbb
dec
out
sahf
dec
fildll
in
pop
or
push
cltd
and
int3
icebp
loop
clc
and
adc
mov
icebp
jmp
sub
in
es
pusha
jg
inc
add
mov
rcr
nop
dec
jl
or
movsb
aas
lods
or
dec
sub
xchg
icebp
arpl
nop
rorb
push
inc
ljmp
cmpsl
jle
fisttpll
sub
mov
loopne,pt
xor
aas
mov
ja
iret
mov
inc
xlat
test
jnp
jmp
je
or
pop
or
or
dec
xchg
sub
lsl
mov
and
xor
mov
xor
data16
mov
lds
inc
xor
in
mov
fcmovu
mov
shl
cltd
mov
inc
fcomps
add
movsb
xor
and
imul
loop
fwait
mov
out
fcoml
test
clc
clc
pop
and
push
ds
and
push
lcall
pop
sub
cli
aad
adc
jge
fidivrl
ja
lods
pop
mov
cmpsl
rclb
ret
imulb
imul
inc
popa
adc
ret
jae
mov
sub
or
mov
xchg
mov
cmp
int3
pop
xchg
sbb
and
or
inc
or
test
je
fcoms
ja
sbb
mov
pop
jp
push
jnp
jmp
pushf
xlat
in
ja
pop
and
adc
pushf
inc
add
js
adcl
adc
mov
aaa
dec
dec
lret
popf
aad
push
adc
xchg
movsl
fdivr
jno
adc
lret
std
push
pop
and
in
jge
sti
into
xchg
imul
jge,pt
add
jle
sbbb
and
lods
push
loopne
nop
sarb
cltd
fnsave
test
das
stos
cltd
pop
jbe
cmpsl
mov
push
ficompl
push
inc
hlt
adc
cmp
jo
add
jns
mov
test
fistl
sti
iret
cltd
and
jne
pop
stc
xor
push
pop
addr16
jl
and
popf
xor
add
popf
sbb
fcmovb
xor
jne
cmp
push
adc
sub
lds
jmp
loop
out
enter
dec
fwait
mov
pop
dec
fisubs
fbld
scas
roll
fcom
mov
aam
mov
sahf
or
enter
push
mov
es
outsb
add
test
dec
inc
lahf
addl
adc
dec
clc
inc
scas
ljmp
xchg
repz
popa
cmp
cltd
jae
mov
cli
mov
xor
mov
adc
mov
iret
jne
xchg
js
js
aad
fidivl
mov
lcall
jecxz
cmp
mov
ja
lahf
and
mov
gs
mov
xchg
int
popf
lds
dec
xchg
pop
or
jle
fimull
cltd
jmp
mov
dec
aam
jo
std
decl
inc
mov
test
xorl
lret
hlt
pop
out
test
cmp
lret
pop
pop
pusha
adcl
sbb
xor
cmp
fstpl
dec
sbb
and
xchg
cmp
inc
add
mov
add
xchg
sahf
jns
push
inc
mov
lret
or
negb
dec
negl
lahf
inc
add
shll
pop
loope
jg
xchg
and
aaa
mov
cmc
sar
daa
test
cld
bound
dec
push
ret
adc
icebp
int3
xor
mov
pusha
imul
sete
lods
daa
push
add
jae
pop
jns
fwait
sar
mov
xchg
cmpsl
movsl
int
mov
inc
cld
xchg
pop
push
add
jnp
sbb
push
fwait
and
imul
inc
call
stc
xor
mov
inc
inc
gs
adc
cmp
stos
cmp
pop
scas
outsb
sbb
cmpsb
add
cmp
pop
notl
xchg
shll
and
clc
push
jl
xor
and
mov
xchg
xor
movsb
or
xchg
xor
imul
mov
jb
aam
jecxz
xlat
lods
in
movsl
mov
push
and
or
jae
fiadds
out
stos
lahf
sub
enter
setg
arpl
dec
sbb
andl
add
pushf
in
cmp
cvtps2pd
ret
mov
mov
jbe
mov
outsl
sub
adc
mov
jge
aam
jae
imulb
sub
lock
js
add
push
sti
cmp
ret
adc
mov
jp
in
fcmovnbe
mov
mov
jne
sti
sub
fwait
cld
dec
or
jg
loop
xor
inc
adc
pop
mov
subl
push
mov
ret
out
das
inc
arpl
dec
add
and
mov
push
fidivrs
test
loopne
push
mov
int3
push
int3
and
cmp
push
imul
push
add
test
outsb
mov
mov
cmp
and
jo
add
inc
xor
jae
xchg
mov
cmpb
inc
sbb
addr16
mov
lret
dec
icebp
lds
cmp
sar
pop
inc
push
mov
and
insl
dec
xchg
mov
lcall
mov
mov
or
mov
sub
jmp
jo
movsb
data16
jle
fidivl
gs
xor
mov
pop
orl
aam
ficompl
cmp
mov
add
adc
dec
sub
cmp
adc
test
jg
jg
mov
sub
mov
and
aam
stos
lea
call
sbb
and
dec
ss
dec
mov
pusha
jl
dec
xor
mov
dec
popa
xchg
gs
aad
mov
ds
mov
iret
dec
sub
pop
inc
mov
int
test
add
and
ja
xchg
sbb
xchg
xlat
inc
ljmp
mov
idivl
push
mov
das
cmp
movsl
test
xchg
arpl
adc
mov
int3
bound
jns
mov
sbb
lret
jp
sbb
mov
push
and
sbb
test
cmp
stos
and
xchg
sbb
jecxz
fadds
shlb
mov
inc
into
jb
scas
jg
pop
xor
test
out
adc
adc
jecxz
sbb
outsb
mov
lods
push
stos
push
fildl
pop
dec
scas
xchg
mov
jae
jecxz
adc
outsl
icebp
imul
hlt
pop
pop
mov
pop
int3
imul
mov
int
into
mov
jns
loop
xor
sbb
addb
movsb
fnstcw
or
sub
or
xchg
or
xchg
je
fwait
push
stos
or
cmp
mov
mov
sub
rcl
adc
lods
mov
scas
cmpsb
jecxz
aad
cld
jge
sub
xchg
mov
inc
adc
pusha
sbb
cmc
xchg
mov
and
push
mov
inc
imul
push
pop
or
sbb
dec
addr16
jge
or
pop
in
xchg
pop
or
int3
bound
rol
push
in
mov
lret
fs
jge
xor
pop
jp
jo
dec
shll
mov
sbb
cmp
or
cmpsl
gs
rcll
mov
aam
jecxz
jnp
xor
stos
pop
adc
mov
mov
push
fists
inc
and
push
roll
fnstsw
and
leave
loopne
int3
cmp
xchg
fldt
and
test
data16
or
pop
and
int3
cmp
sti
mov
subb
jbe
mov
jmp
and
xchg
xor
ljmp
sub
in
lahf
arpl
inc
push
mov
in
mov
pop
aaa
addl
add
jns
fimuls
enter
add
mov
xchg
ds
roll
dec
sbb
pop
sbb
mov
insb
sbb
aaa
stc
sar
mov
lods
lret
cmc
push
mov
or
mov
xlat
add
xor
pusha
nop
insb
mov
shll
fwait
cmp
jnp
xor
cltd
mov
dec
inc
ret
xchg
cmp
mov
sbb
mov
or
mov
std
ror
cwtl
cmp
xchg
sub
rclb
push
mov
dec
cmp
das
repnz
xchg
rorl
repnz
mov
mov
addr16
push
subb
xchg
test
in
pop
mov
rcr
and
add
inc
jne
mov
aaa
scas
xor
inc
mov
scas
int
mov
inc
leave
sbbb
jl
mov
ss
xchg
mov
stc
scas
cmc
pop
add
repz
push
add
mov
push
adc
loopne
sahf
cmp
jns
adc
rorl
insb
leave
ds
jmp
cwtl
xchg
cmpsl
sbb
call
ja
mov
call
call
fcomps
ds
insb
dec
leave
nop
call
js
xor
cmp
in
and
mov
pop
ljmp
shl
mov
mov
ret
inc
dec
push
or
arpl
outsb
ja
loopne
cmc
xchg
xchg
jo
xchg
dec
hlt
sbb
push
gs
das
xor
daa
push
aad
sahf
nop
xchg
out
inc
jmp
insl
iret
adc
aaa
aam
call
mov
mov
jmp
mov
jbe
sti
xor
sbb
push
cmp
xchg
outsb
jge
les
jmp
inc
std
in
shrl
sbbl
add
les
mov
add
sub
pop
push
int
mov
jnp
ret
mov
mov
xlat
xor
jp
lcall
xor
push
push
pop
xlat
fs
outsl
xor
xlat
cmc
cld
inc
mov
mov
cmp
hlt
xchg
xorb
push
mov
push
leave
cmpsl
insl
lret
mov
and
pop
rclb
inc
mov
dec
cmp
xchg
outsb
stos
cmp
xchg
jmp
dec
les
mov
push
mov
fnsave
out
dec
cmp
pop
loope
sbb
repnz
lcall
subb
in
in
dec
ds
add
mov
xor
jge
scas
inc
dec
add
sbb
and
jbe
test
or
push
pop
pmullw
cwtl
mov
orl
jg
lds
ljmp
jns
mov
shl
cmp
fstl
or
int3
stos
dec
imul
and
outsb
jp
movsl
sti
aaa
push
call
jle
cmpl
dec
jge
inc
nop
movsb
push
sbb
dec
ret
cld
repnz
hlt
jae
in
jo
scas
push
sub
adcl
mov
and
pusha
jno
cld
dec
fistpll
rcrb
test
lods
aas
and
cwtl
dec
popf
test
aaa
arpl
cwtl
addr16
dec
pop
xlat
shrb
sub
ror
xor
push
cmc
inc
mov
mov
adc
loop
pop
stos
fcom
sbb
icebp
xorb
jnp
cmp
popf
and
std
in
in
push
pop
and
jle
aad
cmp
hlt
scas
loop
pop
in
sub
inc
pop
sahf
out
mov
jmp
fists
jmp
popf
out
stc
inc
xor
jg
lods
xor
js
popa
loope
lods
push
fmuls
call
push
inc
dec
mov
mov
sub
cmp
adc
and
flds
xor
add
in
out
insl
sub
sar
jb
mov
sbb
mov
aas
movsl
lea
arpl
mov
xlat
adc
insb
scas
jae
fs
scas
inc
test
add
pop
loop
xchg
sarb
shr
fs
and
xchg
pushf
in
pop
int3
test
adc
xor
lock
push
das
xorb
out
pop
xlat
jmp
cmp
dec
jge
or
cli
fidivs
hlt
xchg
mov
pop
icebp
mov
mov
jno
or
inc
inc
js
mov
nop
jmp
outsl
bsr
je
sbb
unpcklps
xchg
js
call
mov
mov
mov
jge
call
rorl
xor
js
and
insl
outsb
or
outsb
in
sbb
lret
fmul
sti
test
test
xchg
or
xchg
jno
xor
jns
std
mov
stos
adc
cmp
dec
mov
xchg
jne
mov
cmp
xor
popf
fidivs
out
and
xchg
inc
xchg
sub
mov
sahf
aam
mov
add
jle
push
mov
xlat
xchg
pop
rclb
pop
das
inc
and
popa
into
int3
inc
xchg
add
pop
or
mov
cltd
ljmp
pop
subl
repnz
cmp
arpl
shl
pop
in
out
cmp
mov
aad
mov
jle
or
pushf
in
push
pop
jmp
in
sbb
nop
arpl
mov
mov
jmp
and
lods
pop
mov
push
nop
icebp
sbb
or
adc
lods
xchg
jle
ja
loop
cmpsl
jge
or
jae
stos
xor
out
ret
cmp
cmp
mov
push
out
fimull
inc
or
sub
in
and
jle
in
mov
enter
jne
lds
adc
mov
dec
push
cmp
or
ds
xor
hlt
lret
adc
jecxz
cmpb
adc
pop
cmpl
jo
rorb
xor
sub
xchg
ret
insl
cmpsl
loope
sub
scas
or
stc
lock
jle
push
mov
push
pop
ljmp
xor
add
ss
stos
sub
out
jmp
mov
add
aad
xchg
or
outsl
repz
lds
push
xor
pop
cmpsl
jmp
dec
in
mov
sbb
push
outsl
out
popa
popf
repz
add
js
push
push
dec
shl
jge
xor
mov
das
lods
adc
mov
lds
pop
mov
sub
fisubl
movsl
mov
sub
fldenv
mov
mov
jle
inc
xor
testl
jne
loop
sbbb
dec
xor
lods
rcl
sbb
mov
push
jno
mov
popf
pop
cltd
pop
fcomps
jo
sub
or
popf
mov
into
test
aaa
rcrl
dec
add
or
sbb
test
mov
sbb
je
mov
popf
iret
adc
pop
add
cmpsl
loop
xchg
fwait
cmp
pop
in
mov
in
call
cld
dec
ror
cli
push
or
or
xchg
invd
dec
inc
adc
xlat
xor
mov
add
xchg
cld
nop
rolb
in
scas
pop
inc
dec
pop
pushfw
pusha
dec
repnz
std
dec
lahf
add
and
jb
movaps
js
adc
pop
into
sbb
mov
sbb
add
int3
mov
addr16
adc
loop
sub
adc
pop
les
in
pop
push
mov
and
sub
sarl
mov
fnstcw
hlt
and
movsl
dec
mov
nop
pop
jg
jb
push
mov
fcoms
and
and
loope
xchg
adc
stc
cmp
inc
jmp
jmp
xor
rclb
jge
jecxz
rol
mov
inc
xor
pop
inc
add
fisttps
aad
push
push
nop
adc
push
loopne
pop
and
mov
xchg
mov
cltd
adc
fwait
test
ret
cltd
cs
nop
jmp
lods
sarl
je
jl
cmp
jmp
mov
scas
push
in
pop
sbb
inc
test
cwtl
xlat
lcall
xor
test
adc
adc
fstp
pop
xor
ljmp
sub
divl
adc
shl
push
movsl
loopne
dec
lret
fmul
es
dec
scas
outsl
ret
ds
pop
mov
popa
xchg
mov
cli
in
hlt
ja
dec
lahf
aas
loop
mov
mov
inc
mov
xchg
aad
ret
arpl
pop
cld
filds
pop
lcall
dec
mov
and
push
or
pop
xchg
repnz
mov
cli
add
clc
sbb
or
bound
mul
dec
std
iret
rcrl
scas
inc
repnz
in
fnstenv
insb
xor
andb
fildll
repz
movsb
sbb
frstor
outsb
outsl
sahf
lahf
rcl
jg
mov
in
mov
out
jbe
sub
pop
pop
jmp
enter
lcall
cli
addr16
sti
outsl
mov
mov
rcrb
push
xchg
repnz
and
jno
into
ficompl
lods
cmp
gs
mov
lock
mov
push
pop
inc
test
pusha
cld
or
es
adc
mov
gs
jmp
mov
dec
ret
loopne
fs
cmp
and
add
popf
movsb
nop
std
adc
out
mov
cmp
sbb
lods
ds
filds
push
adc
sahf
int3
lock
clc
jbe
arpl
cmp
add
das
xor
sbb
sub
into
push
imul
fistpll
mov
lds
or
sbb
pop
pop
dec
ja
cmp
aam
jmp
mov
cmp
pop
fmuls
out
lods
scas
scas
mov
jne
stos
addr16
mov
fs
arpl
fs
push
xchg
pushf
mov
xchg
testb
sbb
and
push
xor
sbb
xchg
push
mov
push
xchg
mov
pop
and
mov
into
adc
inc
cmp
mov
rorb
jmp
fidivs
pop
xchg
add
mov
scas
sbb
adc
push
dec
aam
xchg
mov
test
push
inc
mov
adc
mov
add
inc
fcom
leave
hlt
jg
xor
arpl
rcr
inc
in
mov
jg
and
fcomi
sub
push
add
pop
xchg
push
mov
dec
push
andb
jno
aam
mov
outsl
mov
add
mov
ds
cmp
pushf
sbb
xchg
mov
bound
sbbb
gs
dec
mov
mov
loop
push
xor
movsb
or
and
loope
mov
push
jae
mov
cmp
pop
adcl
mov
movsl
add
scas
bound
mov
jae
test
mov
mov
cmpsb
cmpsl
outsb
in
cltd
pop
outsb
xor
mov
out
sbb
fisttpll
stc
pop
fsts
dec
dec
shrb
inc
pop
mov
add
movsb
and
mov
push
std
or
fdivrl
mov
push
jbe
xchg
inc
cmp
rcr
aad
xchg
int
pusha
lock
xor
cltd
pop
mov
adc
cmp
lahf
movsl
aaa
or
repz
jbe
hlt
xor
lods
inc
fdivrl
sbb
cld
adc
xor
mov
test
ss
fidivs
push
call
jne
ja
push
mov
xor
push
adc
into
cld
xchg
dec
or
sub
xchg
mov
inc
icebp
cmp
dec
aam
fst
push
fucomip
xor
bound
cmpb
mov
mov
jne
aaa
push
lea
gs
cmc
popf
mov
and
xchg
test
imul
dec
fsubs
push
shrl
into
push
mov
pop
sub
mov
fadd
mov
imul
sahf
mov
ret
mov
fildll
cmp
scas
mov
jbe
aad
xor
mov
mov
adc
inc
outsb
and
sarb
stos
int3
and
jo
mov
mov
xchg
iret
in
sub
push
das
xor
push
adc
loope
aas
imul
adc
cmpb
inc
cltd
dec
xor
mov
imul
xor
dec
lock
test
shlb
push
add
fstpt
shl
mov
fwait
xlat
xchg
mov
popa
movsb
sbb
cwtl
test
pop
sbb
mov
es
pop
mov
mov
shl
or
mov
imul
int
enter
dec
addps
dec
push
push
push
pop
jo
insb
and
stos
sub
xor
add
and
fs
jmp
std
lret
pop
and
mov
xor
or
jnp
jecxz
arpl
or
dec
mov
mov
jge
jmp
jnp
loopne
add
ljmp
out
push
jb
inc
shlb
jae
or
jnp
cmp
push
or
scas
test
push
lods
xchg
add
movsl
in
dec
mov
lret
sbb
out
aam
sbb
lods
stc
les
pushf
outsl
adc
or
outsl
testb
hlt
loop
cmp
das
call
sbbb
mov
jnp
fcoms
xor
cmpsl
movsb
movsl
pusha
jb
inc
and
fcoml
pop
sbb
jbe
dec
xor
and
and
lock
icebp
das
jl
xchg
out
xlat
mov
sti
fs
rol
push
int3
lcall
nop
cmp
sbb
addr16
aas
nop
sub
mov
pop
sub
push
cmp
movsl
negb
out
pushf
adc
scas
xor
add
out
adc
xchg
jle
add
idivb
push
shll
dec
mov
fldt
data16
sahf
dec
test
divb
jl
cmp
test
cmp
or
push
mov
into
mov
pop
dec
cwtl
push
pop
in
cmpsl
mov
into
lds
sub
ror
xchg
lahf
les
stos
pusha
and
mov
jmp
ljmp
pusha
mov
ficompl
mov
or
add
xor
cmpsb
dec
pop
add
push
mov
rolb
loope
cs
in
fcom
fnstcw
loopne
lea
les
push
jle
cltd
add
sti
sbb
fs
push
in
aad
out
xchg
mov
lds
aaa
pop
bnd
pop
dec
pop
addr16
xchg
aas
xchg
jle
repnz
xchg
push
arpl
xor
fwait
xchg
adc
sub
jb
pop
xor
mov
jge
aam
dec
pop
inc
andb
or
out
lock
shlb
pop
or
dec
fisubrl
int
aad
cld
dec
scas
inc
adc
xchg
inc
int3
sbb
sbb
ljmp
jno,pt
fimuls
or
test
adc
lods
cwtl
popa
push
clc
sub
daa
mov
jg
shrl
xlat
scas
mov
inc
idiv
xor
mov
sar
xchg
sub
int3
mov
out
mov
mov
js
arpl
mov
cli
addr16
xor
mov
shr
lock
imull
xchg
and
nop
add
pusha
cld
out
test
add
je
cmp
sbb
aas
add
lahf
add
and
pop
sahf
mov
ss
shlb
dec
loope
out
bound
ss
call
testb
jge
adc
nop
mov
int
js
pop
sbb
test
xor
push
push
xor
aam
js
pop
pop
pop
xchg
int3
dec
shll
icebp
xchg
pop
cmp
xor
mov
mov
ja
jns
sbb
cmpsl
out
cs
or
lods
sub
sbb
aam
xchg
xchg
rolb
mov
stos
xorb
add
jo
pop
adc
jl
inc
popa
mov
sbb
push
stc
cwtl
cmpsb
inc
or
out
inc
cmp
ret
xchg
dec
inc
jbe
pop
mov
xor
sahf
popa
or
xor
in
add
inc
movl
pushaw
int
sbb
and
movsb
mov
sub
dec
fimuls
loope
add
fxch
mov
jle
mov
pop
gs
shll
pusha
stc
xchg
mov
out
out
push
adc
xchg
rcrl
arpl
push
sub
mov
ja
fsts
fcomi
or
mov
scas
jbe
cmc
loope
adc
or
push
shll
mov
inc
cld
xor
fcomps
lea
scas
pop
insb
daa
daa
rcrl
test
cmp
pop
jb
in
out
pop
dec
jnp
pop
bt
pop
mov
sbb
dec
imul
inc
and
out
sbb
fsubrp
inc
movl
insl
jg
aad
mov
or
loopw
cltd
shl
scas
imul
jecxz
mov
mov
lods
out
jg
mov
cld
stos
test
mov
mov
sub
xor
iret
mov
jnp
out
pop
mov
loope
mov
cmp
fldcw
dec
sub
scas
xchg
aaa
ret
sbbl
pop
cmp
jnp
pop
int
cli
xor
scas
cmpxchg
dec
in
dec
dec
sbb
mov
push
jmp
sub
dec
cld
es
sbb
shlb
and
addb
aas
out
xor
lods
dec
add
dec
hlt
jg
pop
cmp
dec
loopne
adc
out
sahf
neg
jle
xstore-rng
cmpsl
test
xchg
lcall
pop
pop
push
out
pop
outsl
adc
jmp
arpl
xchg
aaa
into
or
xchg
cmp
lods
adc
outsl
sahf
push
and
jmp
sbb
das
cmp
iret
divl
in
sub
jbe
jmp
and
pop
pop
inc
scas
push
jbe
and
daa
jb
fisubl
js
xchg
out
xlat
push
mov
data16
jb
add
pushf
xchg
add
add
and
inc
jmp
ja
test
por
sub
clc
iret
imul
jg
adc
lcall
or
sbb
popa
push
xchg
es
or
roll
dec
push
jl
pusha
stos
call
daa
pop
push
dec
fistpll
pushf
cmp
adc
aas
outsl
je
mov
inc
or
xchg
popf
mov
test
xor
imul
xchg
in
lock
dec
mov
cmp
mov
xchg
loope
cmc
mov
shrl
xchg
add
test
out
mov
cmp
xchg
leave
mov
filds
pop
inc
hlt
dec
xor
faddp
mov
xchg
dec
add
lahf
or
imul
cmp
or
fs
jmp
and
sub
shll
gs
push
enter
cmc
cmpsl
push
dec
pop
rorb
les
inc
lcall
lds
lret
fcoms
test
subb
or
aam
sbb
insl
inc
jbe
jecxz
inc
bound
ss
sahf
lock
and
and
or
aaa
pop
push
push
mov
sbb
and
cltd
dec
imul
push
xchg
push
fsubl
push
scas
ljmp
outsb
fimull
jg
jne
std
fisttpl
into
insb
xchg
cwtl
in
je
inc
movsl
fbld
stos
jmp
test
cmp
xchg
fsubl
gs
test
enter
in
push
sbb
enter
nop
aaa
push
js
pusha
dec
inc
rcll
jg
sub
ds
ficomps
insl
jmp
popa
inc
fistl
scas
mov
push
scas
ds
push
adc
xor
mov
jmp
out
jge
pop
mov
cmp
fsts
sbb
arpl
int3
xchg
xabort
out
and
mov
push
popa
mov
push
scas
sbb
int
ljmp
sbb
repnz
xchg
es
add
sarb
lock
add
jle
adc
imul
insb
or
mov
nop
mov
lret
mov
movsb
fidivl
shll
dec
adc
push
or
mov
xchg
xchg
inc
sbb
and
loop
in
mov
repz
lret
mov
fsubs
sub
cmp
fnsave
pop
xor
pop
add
inc
and
das
mov
mov
mov
bound
addr16
cvtps2pd
movsl
clc
mov
cld
ret
cwtl
xchg
out
std
mov
repz
adc
pushf
xchg
cmpsl
loopne
push
out
sbb
in
and
imull
push
dec
bound
je
and
fisubrl
push
cltd
and
out
sub
das
in
daa
int
out
dec
and
or
inc
mov
out
insb
and
xor
inc
cmp
mov
lods
sbb
push
in
fnsave
into
popf
stos
push
add
pop
cwtl
sbb
test
test
push
xchg
inc
cmp
shlb
popa
shr
daa
mov
xchg
fwait
add
mov
sub
mov
mov
aas
mov
add
nop
adc
mov
repz
mov
shrb
adc
repz
jae
sub
pop
bound
lret
repz
push
sub
or
jb
loopne
dec
adc
rclb
mov
arpl
imul
pushl
add
jo
push
in
push
xchg
dec
sbb
or
xchg
push
adc
jmp
lods
jp
xor
ss
aaa
repnz
add
dec
mov
xor
aam
fs
sti
sub
jmp
sub
push
add
pop
xchg
jle
loop
xchg
sbb
bound
enter
push
int3
lds
sbb
or
enter
adc
iret
movsb
test
inc
mov
in
jns
int3
mov
adc
jae
sub
mov
jl
sbb
add
int
idiv
cmp
orl
gs
lret
jae
jl
xchg
out
pop
push
push
pop
jg,pt
push
jns
sarl
and
mov
mov
add
icebp
shrb
sahf
je
mov
sahf
add
lods
test
bound
repz
adc
and
fcmovnbe
xchg
popa
and
xchg
xlat
or
pop
sub
inc
dec
mov
adc
dec
ficomps
or
fwait
inc
rorb
mov
bound
cmp
or
mov
pop
adc
into
inc
xor
les
jmp
das
dec
pop
mov
loope
ret
dec
jno
inc
push
jne
scas
jne
lods
addr16
mov
inc
movsl
adc
mov
jecxz
cmpsb
lret
aad
or
fs
shl
xchg
push
arpl
push
repnz
cmp
pushf
int3
mov
xchg
das
iret
pop
mov
lret
outsl
pop
dec
lea
fiaddl
cld
pop
jbe
jecxz
aam
and
push
mov
dec
pop
dec
inc
sub
std
sub
clc
dec
pop
sub
dec
outsl
fidivl
sbb
pop
sub
and
xor
cmp
fistpll
repnz
push
pop
xchg
into
sbb
es
mov
jmp
sti
out
xchg
aaa
adc
loopne
scas
idivl
mov
ret
inc
int
xlat
insb
inc
mov
mov
pop
flds
cmpsl
pop
repz
testb
sbb
ljmp
stos
sbb
repz
js
jmp
jge
fldt
imul
fidivrs
xor
push
pushf
fistps
mov
out
ja
mov
outsw
or
clc
clc
jmp
popa
mov
fbstp
ljmp
cmp
loopne
scas
push
sub
lret
xchg
mov
push
imul
gs
inc
ljmp
mov
and
xchg
mov
cmp
cli
xchg
movl
fcoml
test
sbb
out
and
mov
inc
dec
jg
ret
inc
pop
inc
lods
shrl
jecxz
add
mov
or
in
fs
sbb
ret
loope
mov
imul
cmpsl
jns
insb
add
push
sub
fcompl
push
mov
fisttps
test
xor
scas
cmp
out
pop
push
push
inc
daa
add
into
or
adc
insb
fimuls
adcb
xor
imul
fs
or
mov
or
inc
jl
incb
imull
lret
lds
cmp
add
in
jecxz
flds
dec
pusha
fwait
add
mov
pushf
xchg
add
sub
cs
push
aaa
mov
mov
lcall
cld
xlat
das
jns
daa
cmp
ss
jl
xor
inc
ss
adc
push
sar
rcl
adc
rol
ret
nop
pop
and
loopne
cmpsl
lea
mov
imull
cmp
gs
or
xchg
stc
mov
xor
arpl
xchg
mov
fwait
aas
iret
andl
push
sub
arpl
ret
movsl
addr16
xchg
lcall
jmp
lods
inc
inc
fmull
addr16
xor
cmp
and
sbb
in
pop
pop
jecxz
in
xor
leave
xchg
push
and
or
adc
aas
push
dec
xchg
add
movsb
push
fcompl
cmp
xchg
sarl
repz
jge
cs
sub
adc
push
lahf
stos
inc
mov
dec
repz
cltd
xor
or
aas
test
ss
sbb
xor
xor
test
pop
ret
jle
scas
adc
into
and
lea
push
and
mov
sbb
adc
adc
dec
cmp
shrl
mov
into
movsb
mov
lcall
ja
iret
int3
subb
test
es
je
and
stc
je
xchg
mov
xor
cmp
movl
cmp
mov
cmp
int
sbb
mov
adc
adc
negb
adc
in
xchg
ret
pop
outsb
inc
nop
cmpl
mov
inc
pushf
jno
or
stos
push
add
xor
hlt
mov
dec
sbb
aad
ret
lahf
fistl
int3
pop
sub
dec
and
xor
mov
dec
xchg
mov
divb
fdivl
xlat
popf
and
mov
pop
push
cmpsl
rorb
xchg
loopne
cs
xor
test
inc
xchg
jmp
jl
dec
cmpb
pop
jbe
sbb
pop
data16
lea
sub
imul
jns
dec
in
xchg
xchg
ret
hlt
sbb
mov
sub
orl
mov
scas
pop
std
jecxz
aas
mov
sbb
mov
xor
inc
repz
jle
clc
cwtl
mov
mov
jp
lcall
pushf
movsb
dec
stc
loope
sti
inc
aas
or
movsb
in
data16
push
rcrb
insb
ss
loop
mov
rcr
inc
cwtl
sti
xchg
pop
pop
sete
xor
push
inc
pushf
cwtl
enter
ds
jmp
and
inc
pushf
mov
pop
jne
add
popf
dec
and
std
cmpsl
pop
fisubrl
fistl
into
rcrb
cmp
sbb
sub
mov
popf
pop
paddusw
cld
rcrb
add
xchg
cld
orl
lret
xchg
mov
scas
movsb
cmc
jns
andb
inc
repz
xchg
sbb
das
pop
ficoms
cmpsb
ss
js
lods
push
xor
and
lahf
cwtl
sub
ljmp
shrl
in
or
shll
mov
mov
jb
call
repz
testb
fdivs
mov
in
and
lds
enter
aad
xlat
stos
push
lahf
adc
mov
xor
fisubrl
fcmovnu
xorl
sbb
fcomp
inc
sbb
mov
add
sti
dec
sbb
out
inc
push
ljmp
sbb
mov
adc
fnstcw
cmc
add
sub
and
mov
outsb
lahf
imul
lahf
into
pop
sbb
in
out
fiaddl
cli
repnz
jl
sbb
adc
loope
cld
xor
cmp
stc
aas
xor
in
cmp
orb
push
out
dec
cli
fisttpll
sub
and
clc
popa
push
pop
lahf
imul
mov
push
lret
cltd
lock
push
sub
addb
fcomps
dec
test
xor
cwtl
ljmp
out
jo
xchg
lods
pusha
jge
mov
pop
jae
inc
mov
mov
pop
sbb
or
rcl
pop
test
bound
into
fmull
in
pop
mov
dec
xor
dec
mov
sub
mov
orb
mov
insb
test
idivb
and
cmpsl
daa
cli
lea
and
push
cltd
lds
ss
jae
insb
mov
insb
mov
sub
adc
sbb
push
sbb
jb
cmp
lahf
cmp
cmc
inc
mov
loope
mov
idivb
ret
jo
stos
mov
lret
mov
push
inc
lock
lret
cld
or
mov
hlt
pop
add
in
cmpsl
stos
cmp
sub
adcl
inc
add
lcall
pusha
jbe
jge
add
dec
push
mov
js
inc
lds
mov
jle
dec
ficoms
xchg
xorl
jb
sbb
add
iret
inc
xchg
xchg
dec
movsl
pop
inc
or
outsl
mov
fcomi
xor
lock
popa
jnp
jp
xor
dec
aam
xlat
faddl
pop
sarb
decb
test
inc
movsl
add
lea
es
mov
out
jns
and
cmp
xor
loopne
mov
pop
pop
daa
xchg
repz
push
pushf
jo
pop
or
push
aam
pop
jae
inc
cmp
pop
push
cld
fs
cltd
dec
jmp
or
dec
gs
unpckhps
and
cmpb
sbb
stos
inc
jne
pop
loope
je
xchg
call
push
mov
js
dec
nopl
xchg
mov
movsb
lods
jnp
lret
xchg
dec
xor
sbb
les
jo
jno
mov
arpl
pop
js
pop
xlat
pushf
ret
inc
dec
jmp
mov
mov
fnsave
mov
popf
test
mov
enter
jmp
xchg
adc
cltd
cmp
sub
ret
andb
js
mov
loope
insl
rolb
popf
shl
jle
subb
sub
fcom
push
sbbb
pop
mov
adc
cmp
iret
jno
ja
pop
push
adc
pop
push
dec
mov
mov
out
bound
jg
mov
scas
cltd
sbb
sahf
popa
imul
int3
pop
loope
mov
add
lahf
andl
cltd
imul
add
sti
dec
enter
dec
dec
cli
ja
je
jne
in
and
jmp
sub
mov
outsb
movsb
fwait
cs
jmp
bound
testl
leave
mov
js
xlat
xor
sbb
je
sbb
and
cwtl
inc
scas
lcall
mov
mov
repz
or
popf
repz
int3
into
push
push
shll
stc
mov
lret
xor
movsb
mov
mov
pop
add
sub
push
pop
test
xchg
sub
clc
inc
adc
push
popf
rcrb
pop
shlb
push
jno
dec
jecxz
and
fisttpll
std
lds
shrl
mov
mov
test
fisubs
popf
inc
rcrl
add
fisttps
gs
dec
gs
pop
lds
out
aam
xor
hlt
jmp
psubq
fisubs
sbb
aaa
jae
jl
xor
sub
inc
bound
sbb
andb
lds
xchg
and
fisttps
or
fdivl
loop
ss
js
neg
lret
fiaddl
jecxz
dec
rorb
pop
cmp
xchg
adc
sub
sbb
shrb
aaa
push
lds
outsb
out
sarb
inc
lahf
daa
adc
mul
pusha
jecxz
inc
mov
push
push
mov
divl
enter
jno
or
addr16
sbb
dec
xchg
inc
arpl
shll
pop
inc
int
jl
mov
mov
sbbl
add
and
mov
cltd
xor
sub
and
pop
fs
or
mov
dec
fcmovnu
es
movl
pop
pusha
in
xchg
jmp
mov
hlt
mov
push
gs
push
fimuls
fstl
arpl
testl
bound
adc
adc
and
sbb
dec
mov
inc
adc
jo
xchg
test
fbld
test
adc
mov
mov
js
mov
push
mov
outsb
cmpl
ds
mov
mov
mov
pop
cmp
mov
jae
fs
inc
adc
dec
sbb
aas
mov
bound
add
xchg
push
fiadds
ds
rolb
dec
sahf
push
jmp
pop
inc
nop
jae
xor
cmp
xorb
std
jno
xchg
testl
mov
mov
out
rcrb
addps
loopne
and
ljmp
pop
or
jle
ficoms
xchg
adc
xchg
dec
sub
out
nop
jns
call
test
out
cmpl
sbb
scas
rol
or
jbe
dec
pusha
xlat
jg
in
fists
das
mov
lcall
inc
sbb
add
jmp
or
test
xor
mov
daa
jp
inc
jge
mov
mov
or
addl
mov
jbe
aad
push
in
out
mov
inc
inc
cmp
leave
gs
sub
pop
mov
adc
rorl
push
pop
testb
ffree
add
mov
test
lods
stos
jo
sub
add
mov
lock
popa
arpl
inc
fwait
leave
js
clc
clc
sbb
push
daa
pushf
fistpll
sbb
push
mov
rcrb
fisttpl
into
dec
mov
sub
fdivr
int
dec
dec
stc
and
out
add
sarl
pop
leave
push
push
popa
xchg
mov
mov
xchg
push
or
test
dec
test
push
xchg
push
lods
test
lea
movsb
xchg
xor
cmpsb
mov
insl
in
sub
aaa
sub
xor
jge
stc
in
sbb
pop
loop
sbb
push
mov
xchg
add
frstor
sarb
dec
sub
xchg
mov
lods
sahf
in
cmp
mov
jno
mov
lods
aad
iret
scas
roll
imul
add
inc
mov
pop
in
sbb
sti
xchg
sbb
fcompl
add
outsl
and
repz
imul
inc
lods
xor
or
push
std
scas
and
cmpsb
nop
xchg
mov
flds
mov
dec
xor
rorb
cmp
or
frstor
add
outsl
nop
je
jle
jo
imul
aas
cmpsl
sub
fcmovbe
testl
bound
enter
and
outsl
shll
imul
clc
nop
push
ja
loope
mov
cs
add
loopne
hlt
fwait
call
insl
jge
push
ror
popa
outsl
into
add
jae
popa
dec
outsl
jnp
imul
addr16
rcrl
or
push
mov
sarb
xchg
mov
push
mov
pop
das
xor
or
movsl
sub
out
push
in
dec
inc
mov
sub
mov
dec
jecxz
inc
sub
fldenv
inc
cmpsb
xor
fs
xor
sub
inc
fldcw
popf
popf
sub
movl
and
fsubl
int
mov
mov
call
mov
test
mov
ffree
or
and
in
add
js
ret
xchg
xchg
mov
add
add
jae
out
push
pop
xor
repz
mov
repz
in
ds
in
mov
dec
ss
jns
xchg
dec
mov
sub
sti
fwait
lea
mov
int
addr16
in
lahf
add
jae
loopne
or
cli
lret
rorl
mov
xchg
cmovno
xchg
mov
aas
jns
dec
shl
dec
add
mov
fisubrl
test
arpl
inc
scas
xor
sbb
shrb
mov
or
push
outsl
dec
push
dec
add
push
sub
pushf
inc
push
fwait
nop
je
ret
mov
and
stc
rcl
add
iret
les
int
jbe
sub
push
filds
test
sbb
sub
ljmp
cmp
jb
xor
mov
xchg
mov
jnp
mov
push
shlb
push
repz
pop
repnz
aad
mov
mov
jmp
push
out
lea
aas
inc
out
ss
stos
and
sbb
bound
mov
fiadds
push
pushf
cs
mov
mov
jp
cli
add
xor
sbb
sbb
outsb
jo
stc
adc
inc
push
sbb
aam
cwtl
adc
inc
dec
in
mov
mov
push
sub
or
xor
dec
fistl
xchg
adc
ret
mov
or
cmpb
gs
mov
daa
clc
cmp
pop
loopne
mov
mov
scas
outsl
jo
inc
pushf
shll
inc
or
cmpsl
ret
in
add
aas
xchg
add
mov
cmp
js
fadd
daa
shrl
imul
test
and
lret
cmc
ret
div
mov
pop
jne
xor
cmp
push
lea
sbb
ficompl
add
jecxz
rcrb
cltd
movsb
jle
jp
test
xor
aad
movq
in
push
mov
out
lock
cmp
icebp
xchg
cs
push
xor
adc
jle
fsubrs
imul
outsb
in
sbb
std
ret
nop
sbb
add
mov
add
xor
fadd
std
jge
pop
insl
jo
or
mov
push
jge
fs
mov
out
aas
dec
cmpsb
in
mov
outsb
or
xchg
leave
cwtl
inc
lcall
push
pushf
xchg
mov
in
inc
jmp
sub
mov
add
int
adc
int
jbe
cmp
lret
loop
push
andps
ficoms
inc
filds
mov
cwtl
mov
pop
dec
xor
ror
inc
inc
lret
mov
sub
mov
dec
cs
test
aad
loop
mov
jb
js
andl
je
mov
mov
push
sahf
iret
je
adc
mov
mov
or
sahf
mov
cmp
movsl
mov
jle
sbb
shlb
idivl
int
add
iret
out
inc
push
fisttpll
add
std
mov
jmp
testl
iret
fldt
es
mov
jecxz
inc
adc
dec
or
lea
divl
roll
adc
inc
xchg
mov
add
dec
cld
and
or
mov
stc
push
jnp
cli
inc
push
pop
adc
mov
ret
cltd
mov
fildll
add
call
fld
les
pusha
inc
bound
fldenv
shrl
testb
inc
inc
test
aad
imul
imul
stos
psllq
inc
add
mov
push
test
lcall
push
pop
inc
inc
inc
inc
stos
push
scas
mov
sub
push
inc
mov
push
mov
xor
adc
shlb
sbb
ljmp
mov
mov
aaa
and
std
inc
inc
cwtl
push
mov
push
imul
cli
or
pop
loopne
dec
outsl
fisubrs
popf
jns
lods
dec
pop
push
inc
in
cmp
sbb
and
enter
or
jecxz
and
cmp
mov
pop
sub
loope
ds
xor
pop
xchg
xchg
iret
js
pop
xchg
adc
fistps
fisttpll
test
xor
repz
std
movsl
and
hlt
ror
lods
popf
xchg
push
scas
or
cmp
fisttps
dec
push
cmp
popf
xchg
shrb
add
xor
clc
cli
enter
iret
cmp
dec
in
test
mov
lods
fsubrs
ljmp
xor
cltd
loopne
cmp
sub
mov
mov
jecxz
mov
scas
stos
push
push
cmp
pop
shll
xchg
dec
sub
leave
shlb
or
or
std
add
in
sub
inc
push
shlb
sbb
mov
sbb
sub
push
xchg
pop
cwtl
sbb
rclb
mov
nop
push
enter
les
js
cmp
ss
lcall
inc
pushf
jbe
dec
mov
popa
adc
or
push
lock
in
mov
sub
das
incl
adc
les
subb
xchg
mov
into
pop
push
xchg
jmp
repnz
jmp
xchg
lds
inc
jmp
fiaddl
pop
sbb
adc
rorb
in
loope
fs
push
lret
dec
repz
ds
push
test
or
push
cmp
gs
add
cltd
mov
ja
je
test
mov
xchg
popf
jecxz
aaa
sub
mov
pop
js
push
fs
or
lods
sub
shlb
mov
daa
iret
pop
xchg
rolb
inc
out
lahf
mov
jne
int
into
pop
sub
xlat
push
pop
mov
popa
push
push
sbb
pop
cmp
repnz
out
mov
cmp
int
lods
or
popf
pop
or
xor
dec
dec
mov
ftst
rol
sub
int
ret
sub
and
stos
pop
jne
pop
pop
cmc
mov
pop
movsb
shll
insl
mov
or
push
test
out
or
xor
dec
out
mov
inc
lods
push
or
dec
sar
push
dec
dec
sbb
int
sbb
cmp
mov
pop
call
cmp
cmpsl
cmpsl
shrb
stos
inc
movsb
dec
mov
shlb
insb
jo
cwtl
xchg
imul
jge
xchg
sbb
xor
xor
xchg
rcrl
inc
cmp
test
sbb
push
cs
cmpsl
lea
cmp
push
push
in
and
sbb
and
sub
jb
mov
mov
push
mov
enter
repz
cmp
jne
or
mov
lods
out
iret
movsl
lock
jmp
inc
shlb
xlat
stos
jne
aam
mov
push
cmp
popa
mov
hlt
fwait
push
mov
sbb
and
xchg
sub
jl
push
cmp
inc
iret
in
dec
enter
sub
rcrl
sub
sahf
dec
jmp
push
call
mov
jp
dec
les
cli
mov
cmpsb
lahf
add
and
or
js
popa
stc
clc
push
fstpt
fnstsw
xchg
sub
pop
add
test
adc
sbb
lret
in
lds
add
sarb
rcll
add
mov
loopne
xor
andb
sub
int3
pop
out
cmc
xlat
xor
xlat
jl
push
pushf
ror
or
inc
sub
sar
mov
insl
iret
pop
imul
mov
cmp
push
testl
inc
rol
test
faddl
lret
mov
ds
in
xchg
push
iret
cmpsl
sbb
outsl
push
iret
mov
stc
fisubs
not
bound
fbld
shrl
daa
sbb
out
out
ljmp
push
in
stos
fwait
or
mov
push
lods
gs
enter
insl
mov
aas
mov
movsl
pop
test
sbb
stos
xchg
int
sub
jle
into
sbb
faddp
push
mov
bound
and
shrb
bound
inc
inc
jo
daa
lahf
mov
xchg
jbe
jp
ficompl
push
out
stos
and
mov
lahf
dec
test
enter
dec
sbb
hlt
ds
mov
add
or
push
lock
cwtl
nop
or
ja
stos
sti
push
shlb
rorb
push
fstp
sbbb
pushf
out
mov
fcmovne
popf
cwtl
push
nop
testl
push
jo
stc
es
mov
or
sub
stc
flds
sbb
pop
and
mov
mov
xor
cli
jl
jno
jne
popf
jb
cltd
push
mov
lea
dec
push
sbb
mov
and
in
movsb
mov
dec
mov
mov
mov
push
popa
imul
cmp
cmp
push
mov
sub
movsb
mov
hlt
mov
or
outsl
cwtl
xchg
clc
pop
xorl
loope
leave
les
adc
add
jecxz
mov
dec
ficomps
addl
or
or
mov
stos
fidivs
mov
adc
es
xchg
cmp
cltd
stos
mov
mov
jmp
mov
test
push
std
fwait
js
cld
mov
es
or
das
jp
cmc
inc
ds
and
sub
pop
aad
movsl
push
nop
ret
stc
jne
into
mov
gs
je
adc
lcall
and
add
in
push
mov
cltd
sahf
mov
pushf
aas
pop
mov
dec
js
cmc
xchg
cwtl
ja
fucomip
xor
mov
aad
push
ret
xor
scas
dec
sub
insb
push
mov
mov
daa
dec
idivl
and
shll
sahf
xor
mov
jecxz
out
inc
enter
and
lock
shr
inc
mov
arpl
ds
mov
iret
cli
push
aaa
cli
fbstp
push
mov
mov
pop
sahf
add
scas
loop
mov
insl
and
lahf
sahf
or
inc
movsl
mov
jbe
jno
adc
movl
dec
scas
adc
ror
test
data16
pop
fwait
xchg
mov
mov
test
mov
and
out
mov
sarl
inc
jmp
insb
stos
mov
push
je
mov
push
xor
jp
leave
sbb
jno
nop
push
dec
scas
inc
inc
aam
into
mov
dec
aam
jae
stc
mov
outsb
jmp
mov
xchg
jo
outsl
lods
dec
or
mov
cmp
pinsrw
call
test
xor
pop
add
cmpsb
mov
xchg
sub
lret
jb
enter
out
inc
imul
rolb
pop
push
xor
pop
sbb
in
push
inc
out
push
outsb
ret
jbe
mov
ret
sub
out
sub
sbbl
ret
cwtl
push
test
dec
push
pop
fldenv
imul
or
mov
scas
call
cltd
lahf
inc
test
cmp
popf
in
mov
push
jmp
fldenv
cltd
xor
lods
and
pop
and
ss
jnp
lds
stc
inc
xchg
lret
ret
pop
int3
push
push
fdivl
in
mov
cmp
dec
dec
cmp
imul
daa
jmp
gs
pop
dec
push
pop
shrl
pop
xchg
call
enter
pop
test
test
aam
bound
lock
pop
data16
cli
push
and
lds
mov
into
cmpb
inc
push
in
out
add
in
dec
mov
arpl
mov
xor
stos
movsb
dec
out
mov
rcrb
add
push
xchg
sbb
fadds
lcall
cs
adc
add
and
out
mov
push
sub
je
lret
scas
pop
rorl
ret
ret
imul
sbb
fnstenv
int3
add
jge
adc
mov
inc
push
in
sub
lock
cmp
nop
gs
adc
dec
or
lds
je
enter
mov
push
mov
stos
inc
gs
sub
decl
xchg
adc
lret
mov
clc
out
ds
out
add
xchg
testl
mov
and
mov
pusha
push
mov
adc
push
xchg
lcall
mov
negb
jnp
push
insb
push
movsl
jo
sub
icebp
inc
sub
and
and
out
popf
ror
pop
out
into
fcomi
int3
idivl
sbb
movsb
push
jg
xchg
mov
aad
fisttps
or
xlat
lods
pop
adc
lods
pop
push
inc
mov
test
pusha
movsb
fnstcw
sbb
into
lea
xor
mov
ja
mov
stos
push
mov
push
adc
jnp
sub
and
pop
pop
mov
test
negl
das
mov
sbb
jmp
dec
jmp
enter
mov
jge
inc
inc
inc
or
jne
mov
xchg
sub
sub
dec
add
sbb
adc
jl
imul
jns
sub
out
icebp
sbb
movsb
push
jb
shrb
mov
jg
cmp
xchg
xor
inc
push
pop
cltd
push
jnp
mov
cmp
xchg
mov
cmpb
outsl
fistps
push
les
fisubl
fnsave
dec
sbb
jns
mov
mov
fildl
xchg
repnz
xchg
jne
movsl
mov
mov
mov
es
lock
cmp
jnp
cmp
push
ret
and
repnz
sbb
mov
xchg
in
in
pusha
push
leave
fnstcw
lret
xchg
movsl
sbb
out
loope
hlt
cmp
js
hlt
sti
outsb
sbb
std
push
push
xor
hlt
scas
push
adc
and
nop
mov
fmulp
push
sbb
xchg
mov
or
test
dec
dec
loopne
add
fwait
adc
pop
cwtl
mov
outsl
xchg
test
ret
test
pop
lcall
mov
jnp
pop
push
mov
loop
cmp
fsts
out
js
fdivrs
inc
test
or
cmp
add
lcall
adc
cmp
dec
pop
adc
pop
fsubs
cld
gs
add
movsl
mov
jp
int
cmp
loop
cmc
and
cmp
nop
loopne
pop
mov
sti
test
fwait
pop
cmp
out
cltd
pop
jl
pop
add
add
sub
in
sub
pop
mov
stos
clc
mov
mov
divl
cld
mov
xchg
and
aas
out
test
fcmovb
ss
inc
xchg
adc
xor
mov
push
xor
outsl
adc
sub
jno
stos
lock
push
daa
or
pop
sbb
fs
or
dec
mov
dec
adc
out
movsb
or
or
lcall
lea
mov
pusha
jo
arpl
popa
mov
inc
out
mov
pop
insl
gs
cmp
xor
cwtl
aam
ds
jl
and
iret
or
aas
outsl
ret
shlb
fcompl
sub
insb
popf
fistpl
fnop
aaa
dec
mov
js
cmp
mov
mov
dec
adc
adc
rcrl
jl
ja
sbb
fstl
jno
sub
jge
sti
insl
and
leave
pop
in
jne
movsb
dec
ja
or
cmc
sub
into
adc
push
outsb
fisubrl
add
jns
stc
push
clc
imul
xchg
sahf
jb
sbb
sub
adc
mov
mov
dec
mov
dec
int3
and
or
or
fcomip
mov
push
pop
clc
lcall
movl
stos
or
pop
aas
pop
xor
fstl
enter
hlt
ljmp
sahf
sbb
fwait
jmp
fs
dec
addr16
or
sbb
insl
add
mov
lahf
pop
and
lods
sti
pop
sub
dec
rcrl
add
lock
jno
or
scas
sbb
pop
dec
jl
iret
fnstcw
scas
push
das
test
lock
test
and
dec
or
adc
movsl
pop
pop
lcall
bound
xor
lret
test
and
fildll
dec
and
jp
xchg
imul
ret
sbb
ret
mov
adc
into
scas
or
mov
sbb
jno
stc
add
in
ljmp
jle
mov
stc
aas
add
cmpsl
pop
sub
gs
inc
daa
jg
and
nop
rolb
loop
test
movl
adc
xchg
mov
mov
cmpsb
cli
scas
xchg
cmp
test
jg
adc
fstp
jnp
stc
icebp
rcl
fldpi
loopne
in
int3
push
out
mov
data16
icebp
mov
adc
sti
in
jne
clc
sti
jae
dec
mov
iret
lcall
clc
pop
outsl
out
add
and
dec
outsb
shlb
shrl
mov
mov
sub
push
movsl
ljmp
imul
cld
data16
ljmp
mov
out
and
stc
sbb
popf
sbb
imul
adc
inc
mov
xor
loopne
fisubl
popa
lret
xchg
icebp
cmpsl
ljmp
mov
sahf
inc
cmp
xchg
pop
cmpsl
and
xchg
insb
inc
push
lock
dec
lds
imull
mov
pop
repz
mov
pop
push
jmp
inc
push
sub
pop
out
aas
ret
test
push
jno
cmpsl
sbb
mov
je
push
test
ja
das
add
dec
repnz
cmp
pusha
and
mov
in
sub
xchg
in
xor
test
sub
push
jmp
pop
call
les
mov
cmp
push
jg
xor
fldcw
push
orl
adc
mov
xchg
sub
shll
and
mov
push
js
adc
inc
sub
scas
in
ss
cmp
xchg
iret
repz
clc
and
pop
popa
sbb
addr16
jmp
xchg
push
dec
fisttpl
inc
mov
push
lods
punpcklwd
scas
rorl
inc
mov
xchg
push
jg
fxch
lret
in
in
cmp
mov
dec
and
ror
fisttps
push
test
cmc
ljmp
mov
sbb
pop
xor
xchg
xor
lds
je
loope
xchg
sbb
test
inc
sub
sub
pop
cmp
negb
pop
add
cltd
push
adc
aad
push
jg
lods
sub
aam
cmp
outsl
cmpsb
or
and
push
lcall
ss
inc
push
add
jnp
jb
jne
dec
mov
pop
adc
repz
adc
aas
mov
pushf
in
xchg
outsb
lahf
cld
xor
ret
and
mov
call
xorb
lods
or
inc
sub
or
das
movsb
hlt
pop
enter
mov
and
add
popa
xchg
lods
fldl
jne
sub
or
push
jns
pop
mov
pop
or
fmull
xchg
inc
cs
aad
aad
pop
fstps
pop
cmp
xchg
jbe
cmpsl
pop
cs
pop
pop
push
or
rclb
sahf
adc
int3
ja
rcr
and
mov
pop
jg
xchg
dec
aam
inc
lret
xchg
lcall
in
dec
aaa
sub
dec
shr
pop
mov
aaa
cs
inc
jp
add
lret
gs
jo
lcall
jno
cmp
faddl
repnz
xchg
test
xchg
sub
xchg
or
and
adc
into
orl
bound
cmp
sti
test
mov
jge
mov
push
stc
pop
testl
push
push
jns
pop
xchg
mov
push
and
mov
in
xor
mov
adc
mov
mov
xor
js
mov
aam
xchg
bnd
mulb
cwtl
idivb
add
out
dec
xchg
cmp
orb
in
movsl
mov
mulb
mulb
data16
xor
fldl
jecxz
inc
int
in
cs
dec
sbb
inc
mov
out
mov
dec
xchg
push
jnp
sub
cli
rolb
fsubrs
mov
pop
lret
addb
idiv
lahf
loope
xchg
sbb
push
mov
out
setnp
mov
shll
xchg
call
jp
inc
mov
scas
mov
push
jp
adcl
mov
mov
outsl
out
popa
inc
add
mov
jo
pop
stos
push
push
add
jl
mov
dec
mov
xor
push
push
mov
xor
out
pushf
outsl
add
jbe
adc
in
xor
ror
mov
inc
dec
je
loopne
sahf
add
push
cmp
stos
lret
fldcw
xchg
pusha
iret
iret
rcrl
nop
push
adc
sub
cmp
js
enter
mov
hlt
mov
icebp
pop
frstor
cli
nop
dec
int
mov
xchg
fs
pop
add
add
pop
imul
sub
jbe
jmp
into
ds
pushf
out
test
or
and
paddusb
leave
bound
xchg
aaa
sub
push
mov
mov
das
in
mov
scas
into
lods
pop
mov
dec
dec
dec
jae
cmpsb
mov
lret
jno
nop
movsb
push
push
out
sbb
mov
mov
jne
xor
imul
movsl
cmpsb
cltd
leave
lcall
push
inc
xchg
gs
or
cwtl
scas
dec
xchg
shl
jge
repnz
xor
xorl
add
mov
out
push
das
mov
imul
cwtl
sub
cwtl
or
push
inc
pop
rcrb
sub
stos
sarb
push
loopne
outsb
sti
sub
add
lods
outsl
fstp
add
call
cwtl
out
int3
fldcw
lret
cmpsb
fwait
mov
jg
lret
int
mov
and
jns
or
sub
inc
call
pop
sub
jbe
mov
cmp
push
adcl
js
push
popa
cwtl
pop
test
ret
sub
xor
repnz
icebp
lods
sbb
imul
sbb
inc
push
imul
pop
or
dec
imul
icebp
nop
jp
jl
aad
mov
out
movsl
cmp
mov
xor
popf
dec
pushf
cmp
cmpsb
rcrb
and
jp
stos
mov
mov
ret
xor
or
sbb
xor
rorl
push
cwtl
cltd
push
cld
in
cmpl
sub
pushf
hlt
cmp
nop
in
jl
fcmovb
sti
rclb
inc
and
inc
popf
insb
fcmove
pop
adc
sub
pop
es
mov
mov
jge
in
push
std
sbb
mov
jge
clc
push
in
dec
push
les
sbb
push
arpl
cmc
and
push
cmovne
je
mov
or
xlat
push
and
or
cmp
sti
inc
jns
jle
outsl
sahf
je
mov
jno
mov
cli
and
aam
clc
movsb
in
jl
lahf
imul
xchg
add
loop
sbb
icebp
fnstsw
cmp
cmpsb
cmc
adc
pusha
test
lcall
mov
mov
cmpb
imull
mov
cmpsl
pop
xor
jl
scas
cli
lret
loopne
jo,pt
loop
sub
jmp
pusha
outsb
xchg
sub
sbb
lds
pop
scas
fcoml
jns
daa
call
cmpsb
into
jne
scas
pop
out
int
xchg
mov
das
and
adc
clc
xchg
jo
ja
dec
inc
and
popf
dec
add
aas
scas
sar
fistl
rorl
jge
sub
lods
mov
loop
inc
inc
mov
push
pop
push
inc
jp
or
sti
fld
xchg
popa
or
pop
mov
cld
cmc
cmp
lock
inc
das
into
or
cmpl
out
inc
cs
lods
aas
xor
mov
sub
mov
lret
wrmsr
iret
call
add
mov
aas
imulb
xor
leave
cmpb
inc
dec
bound
xchg
adc
or
mov
sub
ds
pop
push
xchg
icebp
jle
pop
push
lcall
icebp
fs
add
add
mov
cmp
jl
lock
imul
and
test
or
lcall
dec
sahf
jo
push
in
nop
jne
icebp
ds
push
test
xchg
mov
xlat
and
mov
jl
jb
in
lods
mov
pop
test
or
into
pop
jg
xor
mov
mov
imul
dec
cmpsb
sub
push
lods
stc
add
repnz
mov
mov
lcall
jae
outsb
inc
scas
bnd
loope
loop
in
and
or
movsb
sarl
add
subl
aam
push
dec
into
hlt
hlt
cwtl
sbb
cmpsl
jnp
xchg
pop
outsl
mov
dec
aas
fcompl
pop
jl
push
sub
in
inc
inc
dec
pop
out
xor
in
push
xchg
inc
mov
pop
loopne
in
fiadds
cltd
sbb
movl
pop
es
inc
stc
arpl
loope
sub
xchg
mov
mov
shll
std
ret
out
jmp
or
int
mov
repnz
mov
aaa
int
iret
ss
dec
inc
adc
dec
imul
in
mov
in
push
movsb
sbb
adc
mov
add
push
and
xor
cmp
fdivrs
insb
cmpsl
add
mov
and
das
cltd
dec
mov
out
inc
clc
andb
mov
out
mov
fmuls
dec
fcomi
inc
mov
filds
mov
or
pushf
popa
in
in
cmpsl
push
dec
inc
push
mov
xor
adc
xor
pop
cmp
insb
cwtl
imulb
jp
int3
mov
mov
xor
popa
adc
rcrl
fbld
mov
es
dec
movsl
idivl
gs
cmp
xchg
iret
cs
test
pop
mov
push
or
int3
sbb
mov
daa
sub
mov
in
out
or
stc
in
pop
xchg
push
repz
popa
mov
fs
sbb
push
insb
mov
jno
dec
mov
jg
mov
fs
mulb
sbb
mov
jb
mov
jmp
cmp
inc
sahf
sahf
push
jno
in
add
pop
imul
orb
lahf
adc
mov
iret
fucomp
arpl
mov
inc
daa
nop
std
mov
or
jno
push
int
jno
mov
mov
dec
cmp
loopne
sti
sarl
daa
iret
cmpsl
push
sti
stos
ret
inc
mov
cmc
jbe
notb
fcmove
scas
pop
sar
xor
rorl
mov
pop
sbb
adc
loope
inc
rcll
sub
in
cmp
imul
sub
push
xor
je
xchg
into
push
loop
jg
pop
aam
cwtl
inc
mov
pop
ret
insb
inc
or
pop
jbe
sub
mov
adc
mov
insb
scas
sub
cltd
push
push
and
icebp
jle
outsb
sub
aas
pop
cltd
inc
mov
adc
jmp
aaa
mov
mov
xor
mov
fcmovnb
in
shrl
je
push
xor
pop
aam
cmp
sub
push
js
lods
call
dec
jnp
cmp
jno
sbb
out
push
in
mov
popf
enter
repz
in
and
push
jbe
sbb
icebp
inc
lahf
and
stos
inc
cmpsb
cmp
adc
or
nop
mov
or
rcrl
outsl
out
pop
mov
push
into
es
xchg
sub
inc
mov
mulb
call
sub
jae
stc
ljmp
aad
dec
mov
xor
jg
xor
pusha
testb
lret
xor
sbb
and
mov
stos
xchg
out
divb
pop
push
push
pop
out
cmp
push
ljmp
out
int
sbb
lea
cmp
sub
ret
cs
faddp
mov
aaa
shlb
dec
enter
adc
and
sbb
mov
fcompl
rorb
jmp
and
lar
in
inc
nop
subb
lods
das
push
mov
add
lcall
dec
adc
lahf
loope
jmp
and
xchg
insb
ljmp
scas
jmp
lds
push
ret
mov
ret
add
insl
sbb
icebp
fdivr
sub
mov
pop
call
mov
adc
dec
mov
in
daa
pop
lock
or
push
push
hlt
sbb
jbe
add
pop
pop
arpl
cwtl
jecxz
mov
and
scas
xor
and
xor
inc
hlt
movsb
mov
fs
lods
add
std
and
mov
xchg
push
mov
lea
cmc
test
ss
pop
jecxz
aad
jb
es
insl
xor
push
cld
dec
cltd
sbb
repnz
mov
loopne
push
push
arpl
dec
push
fildll
enter
popa
in
pop
xor
sbb
and
fldenv
lods
mov
notl
insb
and
divl
sub
sbb
push
or
jns
add
and
fistpl
cld
in
outsl
xor
mov
mov
test
out
jg
in
mov
les
pop
cmp
stos
inc
dec
push
ret
push
loope
shl
cld
and
pop
pop
inc
out
sarb
mov
test
fs
jae
pop
cltd
pop
mov
jns
out
cs
and
pop
lret
mov
test
dec
outsl
inc
pusha
adc
pop
in
sub
adc
and
lret
jns
pop
mov
nop
sbb
mov
push
addr16
scas
jmp
ret
jecxz
lret
xor
test
out
mov
sbb
xchg
ret
xchg
mov
mov
sti
mov
fcmove
cmp
ljmp
sub
xchg
sub
arpl
add
ret
jnp
and
dec
popf
sub
icebp
mov
dec
sub
pop
out
js
push
cs
std
divb
insb
xchg
jge
jle
popa
xchg
dec
lahf
push
mov
loopne
cmp
xlat
xorl
ja
pushl
mov
cmp
fs
cmp
out
mov
icebp
leave
push
mov
mov
inc
sbb
loop
pop
stc
sub
inc
pop
stc
jbe
pusha
mov
inc
lods
adc
ret
or
dec
scas
jl
jge
mov
negb
sub
ret
aam
into
push
add
inc
int3
pop
add
xor
pop
mov
mov
or
push
add
xor
out
repnz
mov
jae
es
lds
shlb
jns
inc
ret
jmp
lahf
xor
aaa
cld
stos
jns
lods
ret
int
add
push
sbb
mov
jmp
or
xorl
cmc
fucom
inc
mov
test
andb
lret
mov
in
mov
flds
sbb
mov
test
aas
add
jae
sbb
mov
loope
and
mov
in
mov
lods
inc
inc
inc
pop
test
inc
pop
pop
cs
adc
pushl
sbb
out
xor
push
movb
lods
sbb
sub
gs
cmp
and
and
push
mov
cmovle
dec
js
adc
hlt
adc
movsb
arpl
in
jbe
into
cltd
add
pop
lods
outsl
mov
imul
sbb
shlb
sbb
mov
pop
sub
pop
push
imul
jl
js
push
push
cmpb
movsl
addr16
ljmp
lea
mov
inc
jo
or
ds
sbb
and
out
lock
mov
ljmp
mov
shrb
push
dec
lea
roll
jne
inc
adc
pop
stos
lcall
push
lret
js
or
loope
popf
fsin
negb
pop
cmp
or
jo
sub
and
pop
add
dec
hlt
pop
mov
sbb
sub
std
dec
shlb
sub
outsl
or
clc
ficomps
adc
push
out
lahf
inc
test
mulb
out
sarb
sub
jg
mov
into
mov
mov
mov
sti
push
andb
lea
outsl
aas
cmp
xor
in
dec
sbb
sub
popa
and
mov
test
cmp
flds
push
adcb
lret
push
xlat
fiadds
ss
cmpsb
sbb
and
leave
mov
push
test
or
jo
loopne
lea
mov
pop
or
lcall
push
les
xchg
or
stos
ss
dec
mov
ja
lea
push
pop
and
mov
hlt
cmp
or
divl
sub
mov
push
xchg
jne
in
int
pop
push
dec
pop
jo
sbb
or
push
cmpsl
xor
cmp
dec
pop
lahf
push
mov
inc
lcall
xor
subl
inc
sub
push
jle
fwait
fwait
inc
adc
adc
mov
adc
outsb
daa
rcrl
mov
push
pop
mov
pushf
clc
loop
or
lods
mov
into
and
jge
in
pusha
into
xchg
in
push
fdivrs
imul
xchg
jmp
fs
loopne
cmpsl
pop
push
data16
sahf
or
ja
mov
lea
pusha
dec
jp
xchg
test
jle
ret
and
bound
pop
js
or
in
sbb
push
push
or
std
push
ret
push
lret
insl
movsb
rcl
ret
mov
dec
push
inc
jbe
mov
pop
xchg
les
add
data16
ret
inc
or
inc
test
jno
fwait
roll
xlat
test
push
add
in
inc
mov
adcb
pop
outsl
mov
adc
imul
push
adc
lea
lcall
imul
fs
mov
ror
mov
fwait
push
inc
adc
cmp
mov
mov
pop
in
mov
lods
dec
or
xor
std
aas
mov
in
xchg
and
mov
es
loope
ror
fldl
pop
es
outsl
xchg
clc
mov
es
pop
jmp
push
ror
pop
jecxz
cmp
xchg
repnz
adc
int
dec
add
mov
jbe
mov
xchg
mov
add
in
cmp
dec
daa
and
mov
xor
lods
jae
cmp
inc
in
adc
dec
pop
cwtl
cmc
js
and
enter
sbb
xchg
imul
call
inc
pop
mov
mov
andb
shrb
mov
sub
test
daa
adc
iret
fildll
sbb
inc
mov
int3
mov
mov
daa
shlb
and
addr16
fiadds
loopne
pop
dec
xchg
pop
push
xchg
dec
clc
aad
mov
pop
cmp
aad
adc
scas
cli
xor
nop
je
sbb
or
cmp
dec
jno
jmp
xor
pop
mov
xor
mov
fisubrs
jne
and
jb
fsts
add
inc
mov
movsb
leave
aam
std
xlat
popa
xchg
dec
in
and
cmp
inc
inc
jg
aad
cwtl
xchg
xor
cli
fdivs
mov
lods
or
cmpsl
sbbl
xlat
in
mov
psrlq
cli
jnp
xchg
add
pusha
jae
outsl
outsl
dec
push
std
dec
outsl
loopne
xor
mul
dec
pop
cmp
shll
out
lahf
out
mov
mov
mov
sbb
jge
cmpsb
jp
xor
int3
xchg
lahf
pop
ret
xchg
ljmp
leave
mov
in
cmp
lods
and
in
loop
pop
lret
mov
sbb
cmp
fnsave
mov
mov
imul
dec
popl
pushf
push
aam
xor
jl
xor
mov
aam
pop
mov
inc
sahf
add
test
adc
ficoms
pop
or
mov
mov
aas
outsb
je
push
repz
push
int
es
sbb
mov
cmp
into
pop
xlat
or
sbb
aam
test
ljmp
mov
mov
and
add
lahf
stc
adc
pop
adc
lods
ret
inc
insl
popf
std
mov
xor
cmpsb
cmpsb
jbe
pop
mov
jns
int3
xor
cld
sub
dec
das
sbb
repnz
imul
fldcw
fmull
cltd
lock
mov
xchg
out
test
data16
sub
stos
inc
mov
arpl
add
push
enter
cmp
cmp
xor
test
and
rolb
adc
popf
movsl
jno
sub
xchg
mov
mov
and
leave
out
fdivl
into
mov
inc
sti
inc
pop
cld
test
push
inc
push
jmp
clc
data16
ja
xchg
shrb
jae
and
in
lock
fwait
das
insl
cmp
mov
pop
out
sbb
xor
mov
ret
xchg
icebp
enter
add
outsb
shll
outsl
dec
ffreep
fnstsw
sub
xchg
xor
cmp
mov
xchg
mov
pop
push
outsl
adc
popa
mov
decl
or
in
incl
rclb
inc
or
sbb
lahf
or
pop
adc
mov
pop
outsl
adc
movsb
cmp
adc
shl
sub
xchg
cltd
mov
cmp
test
gs
hlt
pop
push
xchg
jne
testb
adc
cmpsb
inc
push
fs
or
js
inc
enter
add
xor
dec
sahf
or
out
xchg
pop
loopne
push
inc
push
into
rsqrtps
hlt
aad
int
nop
xchg
sbb
push
pop
lcall
pushf
xor
rcrl
cmp
js
add
shl
imul
and
inc
pop
fisubrs
lea
std
lods
out
jl
rcrb
in
xchg
shlb
lock
mov
scas
lahf
es
sahf
pop
in
adc
inc
into
pop
data16
addl
sbb
adc
imul
xchg
js
arpl
fcomp
mov
xchg
scas
enter
std
test
xor
add
xchg
cmc
dec
pop
sub
cltd
pop
orb
dec
push
mov
mov
mov
gs
out
or
mov
sub
lods
sahf
mov
pop
addr16
repnz
mov
cmp
clc
inc
addl
mov
pop
mov
inc
lds
cmp
out
outsl
xchg
jg
xchg
scas
sti
push
lret
mov
call
xchg
inc
adc
imul
sbb
sub
mov
or
cmp
push
lock
stos
ror
ret
inc
out
mov
stc
mov
decb
mov
out
movsl
shr
sbb
je
cmpsb
lock
mov
cmp
xor
lret
outsb
jae
add
jp
lock
or
aad
jno
xor
xor
cmp
add
into
rorb
lcall
cmp
pop
scas
push
push
negb
lds
jmp
or
mov
mov
out
divl
fdivs
lea
test
lret
sub
fldcw
rorl
daa
insl
pop
adc
ja
push
outsb
popa
in
jns
mov
xchg
push
shlb
fucomip
subb
stc
jp
pop
shl
shr
pop
and
or
mov
popf
aaa
testb
movsl
pusha
scas
sub
xchg
push
movsb
sub
les
xchg
mov
add
sub
imul
mov
bound
outsb
repz
movsl
rolb
sahf
imul
add
push
mov
dec
outsl
dec
jmp
stos
aad
shll
sub
mov
bound
push
inc
push
dec
das
pop
test
repnz
pop
popa
mov
sbb
iret
dec
movsl
mov
mov
cmpsl
clc
mov
jle
mov
orl
mov
adc
push
and
jge
cltd
and
or
mov
movsb
es
sahf
jge
test
adc
xchg
mov
pop
inc
sbb
sbb
in
ja
inc
mov
cs
add
movsl
out
xor
shl
cmpsl
repnz
lret
notl
ljmp
cmp
mov
insb
or
push
aaa
mov
cli
pop
lods
loope
pop
cmc
lock
mov
or
nop
xor
aaa
xchg
stos
subb
jne
jae
sbb
lock
gs
cmp
or
aad
pusha
adc
sub
jne
daa
mov
movsb
inc
jo
push
pop
addr16
out
cmpsb
push
jno
push
inc
pushf
lea
loope
push
out
sbb
scas
cmpsl
popa
inc
jns
aas
test
or
fadds
cld
or
addr16
das
stos
xchg
mov
push
int3
jmp
lea
icebp
sub
mov
pop
push
loopne
or
sub
addl
negb
push
mov
popa
lds
leave
dec
dec
stos
adc
std
and
sub
punpckhbw
xchg
flds
jp
xor
add
mov
mov
sub
sub
or
sbb
adc
add
add
pusha
mov
pop
inc
pop
push
andb
jns
add
dec
lods
push
cmp
mov
arpl
inc
mov
mov
adc
mov
fst
lret
jecxz
mov
push
add
psubq
popa
fdivr
lds
xor
add
jmp
in
xor
sbb
xchg
pusha
gs
iret
das
loopne
fiaddl
movsl
jnp
adc
rolb
lret
or
test
pop
pop
lahf
sahf
ds
pop
cmpsl
aad
inc
mov
xlat
lock
out
xor
lods
stos
cmpl
js
sub
into
gs
dec
push
shll
mov
cmp
loop
sbb
xor
add
cltd
int3
sub
inc
mov
sbb
test
jnp
jb
outsb
loope
sbb
mov
frstor
int3
xor
fabs
add
jbe
add
or
pop
addr16
fidivs
fistps
pop
aaa
or
mov
shrb
test
dec
in
les
std
sbb
pop
mull
hlt
push
mov
xor
outsb
cs
jl
test
cli
xlat
mov
and
pop
stos
dec
jbe
sub
add
pop
sbb
les
fldenv
in
cwtl
movb
xchg
fdivl
mov
push
pop
cmp
out
cmpsb
dec
jo
xchg
xchg
xor
mov
sbb
xchg
jo
sbb
outsb
or
scas
pop
sub
pop
xor
fildll
mov
ret
mov
in
mov
push
fiadds
in
adc
lret
mov
lret
call
test
jp
inc
fnstcw
cmp
dec
pop
in
ja
or
icebp
scas
jno
out
sub
mov
pop
xor
movsb
cmp
rcl
ds
dec
adc
xor
adc
or
bound
jmp
mov
push
sub
inc
xor
out
mov
sub
sub
daa
mov
mov
push
adc
lods
rorb
loope
test
rcrl
mov
lock
out
pop
mov
and
inc
pop
xchg
in
push
addb
push
bound
stos
les
idivl
in
fdivl
pop
pop
or
cmp
inc
clc
adc
std
sub
pop
or
insl
xor
das
pop
dec
bound
arpl
in
adc
dec
jl
mov
daa
mov
jns
rcr
pop
stos
ret
rorl
jo
mov
dec
xlat
sbb
dec
and
mov
pop
cmp
addr16
insl
imul
out
push
and
mov
into
lock
push
aaa
fiadds
fs
adc
cmpsl
dec
pop
ret
cli
sub
mov
xor
mov
cmp
shl
dec
popf
gs
push
hlt
ret
out
arpl
mov
sbb
sbb
and
ret
mov
cmpsl
cmpsb
pop
fs
and
imull
pop
movsb
mov
mov
jmp
lret
test
dec
or
lea
xor
jmp
inc
xchg
push
pop
push
mov
mov
mov
int3
pop
pop
pop
adc
jg
push
push
aad
push
pop
jo
out
insl
int
sub
and
jnp
call
movntps
cmc
dec
jb
das
mov
sub
sbb
std
clc
clc
insl
hlt
popf
adc
stc
rcrl
pop
and
pop
cmp
jnp
lcall
add
xor
leave
push
inc
or
push
dec
mov
xchg
jno
pop
loop
mul
aaa
sub
shll
xor
pop
mov
out
add
cwtl
testl
cmp
adc
sbb
jecxz
in
and
lahf
xchg
mov
dec
cld
sub
xor
clc
adc
push
lcall
dec
mov
fsubrl
scas
sbb
adc
loopne
jmp
and
pop
sub
ss
pop
pop
pushf
movsl
fimull
cmpsb
push
mov
jno
mov
sbb
cld
cmpsb
add
jo
popf
and
xlat
mov
idivb
pusha
jle
outsl
adc
xor
xchg
adc
outsl
std
pop
dec
clc
and
adcl
xor
pop
push
les
mov
aad
xchg
inc
movb
ss
ljmp
add
out
adc
out
mov
in
stc
inc
in
gs
pop
int3
mov
out
cmc
sub
sbb
stos
pop
int
xor
cmp
adc
jnp
inc
dec
cmp
jmp
and
push
pop
mov
aad
leave
into
pop
clc
dec
lock
js
test
lahf
sub
repnz
insl
or
cld
adc
mov
sbbb
push
popf
push
loopne
hlt
fmuls
loope
cltd
or
jl
adc
leave
xchg
dec
mov
insl
ret
loopne
adc
or
pop
mov
mov
ret
pop
mov
push
pop
mov
cs
dec
mov
jl
xor
xchg
shlb
bound
int
xlat
adc
setl
adcb
dec
aaa
mov
sti
add
push
cmp
jae
pop
popf
in
lahf
xchg
inc
imul
adc
inc
lcall
push
mov
ljmp
ror
in
ljmp
jmp
repz
push
mov
lods
repz
sbb
xor
fidivrs
rolb
sbb
pop
mov
sub
adc
mov
xor
ret
mov
iret
and
sub
lcall
repz
arpl
pop
mov
mov
lahf
mov
in
movsb
adc
or
add
adc
inc
addr16
fwait
mov
or
out
in
inc
test
pop
mov
adc
mov
testb
or
and
cmp
push
int
scas
pop
and
sub
pop
jb
mov
xchg
imul
syscall
dec
out
adc
in
push
inc
call
dec
mov
pusha
jmp
ret
xorl
movsl
iret
jle
jns
sub
push
inc
daa
loope
divb
cwtl
jns
fisttps
mov
adc
das
insl
adcb
aaa
xchg
cmp
pop
mov
or
pop
xchg
inc
aam
js
lds
push
or
andl
xor
pop
adc
pop
call
and
add
pop
daa
stos
lea
mov
aad
mov
adc
shll
and
pop
test
popf
fwait
sahf
out
ret
call
hlt
aas
cmp
cmpsl
push
les
mov
addr16
sbb
hlt
or
shl
or
jle
jl,pn
sahf
xchg
or
pop
addl
out
push
cmp
shll
pop
inc
cmc
aam
push
pop
push
divb
add
repnz
sti
fcmovnu
pop
dec
pop
pop
jbe
cmp
jmp
dec
movsb
push
pop
dec
ret
adc
out
xchg
and
lahf
lret
pop
mov
mulb
imul
sbb
dec
or
or
aaa
or
lods
aas
mov
push
sti
fsubrl
sbb
int
inc
add
jae
mov
test
push
dec
loop
mov
lret
out
mov
sti
test
mov
fndisi(8087
xor
scas
outsb
pop
and
fadd
xor
sub
test
popa
xchg
sbb
push
xchg
movsl
cli
sub
xchg
mov
mov
out
jmp
cmp
fsts
addr16
add
pop
cmpsb
mov
imul
push
sbb
sbb
in
jno
jns
sbb
and
jno
cmp
push
loop
sbb
lcall
movsb
jae
push
loop
push
xchg
pusha
xor
cld
sub
ja
int3
test
mov
or
out
cmp
sbb
adcb
fisubrl
adc
jae
inc
pop
je
pop
or
add
out
inc
cmc
repz
jle
ja
test
in
loopne
loopne
sub
jb
gs
sti
imul
test
jge,pn
mov
leave
vmovupd
imul
jmp
movsb
or
fs
fs
arpl
nop
stos
sub
push
jl
fwait
inc
imul
fbld
movsb
cmp
insb
and
ret
adcb
mov
add
add
mov
inc
mov
or
les
pop
mov
in
dec
rcrb
and
mov
cmp
xchg
pop
fidivrl
pop
mov
fimuls
add
icebp
hlt
fbstp
mov
mul
es
mov
mov
int
int
inc
out
pop
inc
daa
imul
ret
dec
sbbb
stos
add
jp
jmp
das
leave
inc
dec
xchg
es
mov
cmpsl
xchg
fstl
mov
in
cli
adc
or
mov
pop
pushf
sub
outsb
mov
repnz
iret
popf
add
pop
call
cmp
mov
sub
mov
xor
arpl
mov
mov
int
cmpsl
adc
xlat
or
imull
cmp
mov
loope
cmp
xor
stc
pop
cmp
push
xlat
jb
cmc
xor
cmc
mov
mov
and
aas
mov
push
xchg
mov
pop
sbbl
mov
lods
lds
push
xchg
test
pop
or
loopne
aam
lock
xor
fsub
cmpsb
sbb
cmp
unpcklps
lods
inc
cld
cmp
aad
roll
dec
mov
pop
das
ret
dec
repnz
xchg
add
mov
cmpsb
dec
pop
mov
xor
sub
mov
xor
test
xor
mov
dec
cmp
jmp
popf
mov
test
lret
and
enter
ret
decl
and
int
push
fadd
cmpsb
loop
out
iret
fisttps
xchg
xchg
push
mov
cmp
leave
or
outsb
stc
movsb
xchg
stc
push
lahf
push
jmp
fdivl
add
sbb
popf
fldcw
xchg
adc
es
hlt
stc
or
loop
sub
stos
sti
fs
mov
mov
inc
jno
in
arpl
push
sub
rolb
sbb
stos
arpl
sbb
jns
cwtl
ret
mov
mov
push
repz
pop
jnp
stc
mull
scas
repz
rorb
movsl
daa
iret
cwtl
mov
gs
mov
push
or
cld
fisubs
fsubr
lods
ret
out
xor
icebp
mov
cwtl
adcb
loopne
ds
in
xor
push
or
mov
sbb
adc
inc
outsb
mov
xor
or
sub
fldcw
addr16
pop
sub
out
fmull
mov
sub
push
jmp
pop
pop
cmpsl
xchg
xor
mov
mov
lcall
mov
sub
inc
mov
mov
fdivrs
shrb
push
mov
mov
lods
push
hlt
and
jecxz,pt
out
jns
pop
fsubrl
push
and
popa
andb
add
cmovl
mov
ret
or
daa
stc
jmp
mov
fistl
sahf
cmp
outsb
mov
xchg
int
shll
sub
test
outsb
popa
sub
push
repnz
lods
adc
repz
mov
insl
movsl
inc
dec
adcl
shll
add
mov
push
cmp
dec
xor
aad
mov
dec
gs
xor
icebp
xor
jae
sahf
je
cltd
cmp
cmpsl
call
sub
xchg
or
adc
mov
ds
incl
sti
in
add
leave
jae
dec
lret
adc
movsl
inc
clc
call
scas
or
mov
dec
pop
cmp
rclb
test
sar
mov
incl
lahf
ss
add
in
in
cld
lock
cwtl
push
popf
test
imulb
aam
iret
mov
mov
mov
repnz
stc
dec
mov
and
dec
mov
mov
bnd
xor
test
mov
or
rorl
test
mov
xchg
pop
imulb
mov
pop
add
mov
dec
adc
xchg
and
cwtl
adc
xchg
bound
mov
sbb
ficoml
xchg
dec
cmc
cmp
addr16
fldenv
and
add
popf
push
or
jnp
push
adc
jecxz
dec
dec
mov
inc
xchg
in
sub
adc
out
subb
call
stc
adc
cwtl
popa
push
sbb
clc
or
xor
inc
andb
cmp
outsl
lea
push
xor
in
add
loope
sbb
out
push
adc
xor
clc
mov
gs
sub
test
ret
shlb
xor
jp
mov
dec
ljmp
add
loopne
test
add
xchg
lea
cmc
inc
cmc
inc
loopne
mov
push
data16
lret
mov
dec
cmp
mov
sub
cltd
outsl
scas
in
add
mov
push
daa
in
je
jae
inc
adc
adc
inc
not
rolb
jg
lret
cmp
add
aas
or
inc
sbb
adc
js
pop
add
push
test
mov
inc
outsb
pop
xchg
ja
test
pushf
xlat
inc
cmp
jl
enter
cwtl
pushf
cs
loopne
jmp
cmp
push
sub
jns
pop
dec
inc
adc
inc
mov
mov
and
call
movsb
fistps
shrb
cmc
pushf
mov
xchg
adc
out
cmp
xchg
adc
cmp
sti
es
jne
mov
xor
ss
push
mov
mov
push
pop
pop
or
rcrl
xchg
dec
cli
jnp
inc
out
int3
add
xlat
js
xor
adc
push
add
scas
iret
nop
add
out
pusha
push
inc
into
aad
in
and
std
sub
add
pop
mov
push
and
test
aas
movsl
imul
xchg
xchg
shr
fsubs
mov
int
ret
sahf
in
pop
and
mov
outsb
mov
aas
sbb
mov
xor
xchg
push
jb
pop
popa
in
outsl
out
std
and
mov
adc
sahf
fisubl
mov
out
sub
lahf
rcrb
mov
outsb
mov
adc
adc
pop
ror
xchg
and
inc
jb
fmul
fmull
js
mov
mov
daa
sub
scas
fwait
pop
add
mov
ds
mov
mov
ret
pop
sbb
leave
and
gs
push
pop
arpl
out
lret
push
push
xchg
pop
or
ds
addr16
fistpll
lock
cmp
pop
mov
fsts
ljmp
push
outsl
cmc
enter
xchg
clc
or
out
scas
mov
ds
mov
cmpsb
mov
sub
shl
mov
sbb
addb
int3
dec
insb
xchg
and
aaa
cld
jbe
lock
pop
adc
jp
stc
lods
pop
hlt
fmull
sahf
jle
test
hlt
cmp
jbe
xlat
insb
push
cmc
shrb
mov
test
cmp
fbld
aad
in
push
aam
mov
in
adc
and
repnz
mov
pop
lea
mov
adc
jp
mov
adc
inc
fsts
mov
imul
or
out
adc
leave
push
mov
xchg
in
cmp
push
je
sahf
add
pushf
js
push
xor
clc
jbe,pn
in
mov
sbb
fiadds
in
sub
testb
mov
jcxz
dec
push
xchg
rol
jns
or
movsl
loop
sub
ss
jb
insl
outsb
imul
adc
pop
inc
into
or
push
push
cmp
adc
mov
sbb
js
les
push
bound
xor
pop
push
xchg
adc
bound
cmc
mov
mov
sub
sti
add
xchg
fstl
and
shrl
pop
push
or
pop
sbb
jl
mov
or
mov
adcb
or
inc
pop
add
ret
or
ljmp
into
out
push
fisubl
ror
jb
jbe
idivb
and
addr16
lods
mov
mov
cmc
mov
int3
dec
loop
xchg
push
sahf
aad
mov
stos
lods
and
gs
push
cmpl
xor
lret
in
addr16
sub
pop
cwtl
lahf
sti
mov
sub
ljmp
pop
lret
test
imul
std
sbb
xchg
outsb
jecxz
xchg
lock
fldcw
fstpl
xor
sub
stc
popf
lret
push
ds
lods
les
pop
gs
lock
arpl
nop
add
mov
shl
hlt
out
pop
lods
jecxz
adc
sbb
and
outsb
fadds
es
mov
xlat
push
pop
test
mov
in
push
insl
adcb
mov
pusha
mov
adc
push
adc
jmp
fnstsw
addr16
shlb
arpl
push
mov
cmp
cld
and
or
cs
sbb
adc
mov
not
dec
js
push
gs
ja
in
or
pop
cmp
mov
insl
mov
adc
adc
loop
lret
cltd
jge
in
add
sarl
cmp
pushf
push
call
mov
pop
enter
iret
sti
outsl
movsb
test
in
outsl
stos
jo
xchg
rcl
popa
pop
stos
xchg
mov
jp
xchg
rorl
subb
repz
aaa
jae
ljmp
mov
mov
jmp
push
push
xor
les
lea
call
add
jbe
lret
xorb
cmpl
std
aas
push
push
adc
pop
lock
lret
adc
mov
ficoms
adc
dec
ret
push
mov
mov
cmp
aam
fxch
ljmp
repnz
add
mov
cli
fdivrs
mov
hlt
cmpsb
shrb
xchg
add
push
adc
std
pusha
xchg
and
out
sub
bound
sub
test
mov
mov
jmp
xchg
add
out
pop
mov
ljmp
movsb
mov
cltd
adc
scas
mov
mov
cmp
mov
outsl
sahf
adc
or
leave
dec
test
lahf
and
cmc
loope
jg
adc
fwait
or
sbb
pusha
sub
add
cli
xchg
mov
pop
cwtl
shlb
pop
movsl
iret
xchg
cmp
push
ja
or
nop
aas
lds
mov
mov
cmp
sub
adc
cmp
push
int
cmp
fucomip
mov
insb
ja
jp
stc
lahf
fs
mov
mov
sbb
push
cwtl
test
repnz
cmc
movsl
dec
push
clc
or
push
inc
pop
ljmp
lahf
jmp
pop
sahf
xchg
push
push
adc
sbb
dec
repnz
jmp
mov
fnsave
out
jmp
mov
outsb
insb
ss
data16
shlb
mov
sub
jg
add
outsb
ret
scas
mov
outsb
or
je
cltd
es
adc
pop
ret
xchg
fs
scas
addb
jmp
and
popa
cmp
and
arpl
pop
scas
and
add
gs
mov
hlt
push
mov
jo
xchg
jp
xor
jno
adc
clc
sub
jbe
popa
or
movsl
lds
movsb
mov
bound
cmp
pop
test
into
dec
dec
aas
mov
cmpsl
test
and
or
test
movsl
mov
lods
call
jecxz
or
xor
sbb
testb
idivl
ja
rorb
pop
mov
into
push
sbb
outsb
pop
inc
or
out
push
test
cmp
das
and
or
or
push
add
call
add
or
cmpsl
rcrl
outsb
dec
mov
out
inc
push
lods
in
cld
shlb
aad
adc
push
in
jne
lcall
hlt
addr16
lret
or
ficoms
rorl
les
repz
lahf
xchg
stos
pop
sbb
sbb
bound
stos
negl
lcall
fmull
fiaddl
testl
or
aaa
mov
stos
adc
lcall
sub
mov
fldt
leave
sbb
xor
cmpsl
je
cmp
scas
loope
dec
xor
test
mov
inc
xchg
cmp
sbb
adc
idivl
clc
xor
xor
mov
dec
cmp
inc
push
test
mov
mov
leave
ds
pop
movsl
inc
mov
jge
adc
adc
xor
std
enter
sbb
aaa
lahf
and
xor
jnp
jo
mov
inc
push
mov
push
jle
shlb
mov
mov
call
int
repnz
add
mov
or
subb
inc
aaa
int3
mov
lds
pop
pushf
add
js
push
into
cmp
lea
daa
pop
and
mull
rcrb
nop
adc
xor
sub
jmp
repnz
inc
psadbw
aad
mov
loope
test
or
jb
call
fistpll
adc
cli
jmp
lcall
sarb
or
jge
mov
pop
sub
or
push
mov
push
scas
hlt
sub
xlat
insb
scas
jge
mov
mov
adc
test
adc
xor
pop
in
or
enter
jbe
out
pop
xor
fiaddl
mov
pop
sub
add
push
ret
xlat
mov
cmp
cld
int3
pop
adc
push
push
xor
outsb
out
movsl
test
jge
adc
shl
push
out
mov
dec
pop
cs
jbe
cmp
js
ja
sbb
aas
jp
jns
cmp
mov
or
sbb
xchg
fbstp
aad
int
pop
mov
xrelease
movsl
sbb
xor
insl
inc
andl
test
adc
lock
jmp
mov
xchg
or
add
push
and
or
cmp
cli
fiaddl
mov
sbb
pusha
shlb
imul
jl
lock
add
or
insb
mov
adc
push
enter
xchg
push
lret
fimull
mov
sbb
es
sub
mov
or
jb
test
insl
push
loopne
push
shrl
ja
ss
mov
pop
fidivrs
cmp
inc
dec
pop
push
das
or
in
icebp
pop
dec
mov
push
and
pop
push
cmp
mov
int3
out
or
mov
sub
adc
add
mov
adc
push
dec
jne
mov
xchg
jns
cmp
xor
dec
loope
sub
scas
fdivrl
pop
lods
mov
add
and
filds
cmp
add
cmp
jns
xchg
ret
cmp
popf
mov
mov
mov
dec
dec
das
lahf
aas
gs
aam
in
cmp
and
insb
cmp
push
lret
dec
cltd
ret
imul
je
fildl
dec
push
insb
adc
mov
fstpl
pop
cmpsb
adc
jmp
lret
les
add
stos
jmp
inc
jecxz
ss
sahf
or
icebp
ds
adc
sahf
push
jle
xchg
scas
mov
add
popa
js
or
int3
jp
pop
cmc
mov
out
scas
pop
or
in
int3
inc
mov
data16
jmp
push
xchg
dec
fcompl
scas
and
dec
pop
out
pop
jo
mov
dec
inc
sbb
inc
ss
mov
xchg
xor
test
xchg
and
lret
stos
rcrb
xor
adc
sahf
sbb
mov
add
mov
fidivl
xchg
cmove
fldl
sub
aas
xor
jns
pop
xchg
dec
mov
cmpsb
les
pop
daa
cmp
cmp
iret
incl
movsl
dec
cmp
or
sahf
out
jae
cmpsl
lods
lds
out
cmp
xchg
push
and
loopne
call
xchg
mov
mov
fmuls
add
in
jb
cmp
cmp
dec
xor
je
lock
aas
adc
loope
push
lods
sub
ret
in
mov
int3
fstpt
sub
outsl
daa
leave
push
jno
addr16
shl
mov
pop
and
xor
mov
cmp
pushf
xchg
lds
mov
push
or
mov
fs
int3
xchg
loop
mov
outsb
aam
sbb
xchg
and
lahf
mov
movsb
mov
xchg
cltd
pop
inc
frstpm(287
sub
cmp
arpl
outsb
add
inc
bound
out
xor
and
mov
jb
or
mov
cmc
cmp
mov
imul
fbstp
xchg
xor
xchg
mov
aaa
outsb
push
popf
iret
ss
test
in
nop
popa
js
jbe
test
jb
cli
nop
jl
insb
hlt
mov
sti
push
dec
sarl
add
aam
aam
mov
mov
and
jne
or
incl
test
push
add
pop
sub
or
fistl
lea
pop
mov
pop
repnz
ffreep
ret
pop
pop
fimull
stos
add
fdivl
sbb
xor
or
repnz
cli
or
mov
pop
in
subb
scas
mov
or
out
inc
cmc
shll
fcmovb
add
hlt
or
xchg
cmp
popa
das
movsb
in
push
mov
sti
movl
rcll
neg
mov
lds
arpl
lock
mov
scas
mov
mov
push
dec
mov
dec
dec
jo
push
repz
cmp
sbb
test
jne
xchg
es
push
push
pop
dec
jge
repz
ret
sbb
add
inc
jl
and
sbb
mov
inc
lods
mov
jmp
mov
add
ret
gs
cmp
clc
scas
das
adc
std
and
or
sub
data16
mov
or
sar
jge
ja
jl
sbb
or
mov
xor
jle
insl
mov
push
sub
insl
pop
jmp
aaa
cwtl
lcall
mov
mov
sbb
inc
fwait
pop
sbb
dec
xchg
push
cmpsb
and
pop
test
fcmovne
mov
loope
xchg
fs
add
sub
or
push
fnstsw
dec
loope
mov
addr16
sbb
mov
mov
xor
insl
imulb
pusha
in
out
push
dec
pushf
mov
add
lods
mov
sub
daa
imul
jge
xor
mov
xchg
aad
ret
sub
sar
movsb
adc
jg
jno
in
iret
and
jge
sub
and
outsb
out
in
mov
sbb
rcrb
lahf
push
or
mov
mov
stc
xor
mov
imul
mov
inc
icebp
lds
add
pop
fdivrs
push
cwtl
adcb
and
adc
cmpsb
xorl
xchg
or
pop
cwtl
shrb
sub
sub
pop
idivb
ret
push
mov
mov
sub
ljmp
andb
adc
sbb
mov
mov
sarl
lret
push
mov
add
adc
adc
pop
cmp
pop
insb
repnz
dec
and
jne
ror
nop
inc
imul
xor
cs
pop
xchg
in
pop
das
je
adc
add
popa
les
xchg
inc
clc
sub
dec
jne
iret
es
lret
popf
sbb
sub
test
mov
enter
imul
add
cmp
xor
je
fistpl
adc
lcall
cmp
jle
or
nop
fistps
mov
fstpt
jl
fcompl
jne
aad
xor
fld
sbb
push
cmp
ret
stc
scas
and
repnz
sbb
push
push
int3
sti
int3
mov
fdivrl
sbb
jno
fists
cmp
fldenv
hlt
or
mul
popf
insb
or
in
mov
add
mov
push
jle
test
mov
ret
ljmp
xor
sarl
std
add
aam
mov
and
movsb
shl
out
xchg
daa
aad
adc
adc
aaa
adc
js
adc
cmp
sbb
ds
test
mov
or
in
inc
pop
mov
mov
insb
push
push
push
int
ds
dec
lock
dec
ss
outsb
dec
les
push
push
cmpsb
dec
jp
hlt
movsl
mov
push
fcoms
inc
push
jae
ljmp
imul
sbbb
dec
es
jge
and
sti
cmp
cltd
je
fimuls
xor
movsb
iret
ret
popa
rorb
mov
mov
inc
es
cli
notb
loope
mov
sub
mov
sub
cltd
mov
push
pusha
ret
jp
out
lahf
in
cs
sbb
mov
xor
mov
out
test
xchg
mov
imul
mov
cmpsl
ret
push
pop
mov
cmp
and
mov
mov
dec
sub
jo
jl
and
jbe
shrl
jge
dec
push
negb
mov
sahf
jle
das
andl
scas
rcrb
xchg
dec
push
inc
sbb
mov
flds
or
mov
or
ret
sbb
or
sbb
dec
movsl
sbb
pop
int
jp
inc
xchg
rclb
lret
std
out
test
add
push
push
fld
rorb
push
incl
jb
pcmpgtw
inc
pop
mov
repz
add
or
add
in
jp
dec
add
js
push
cmp
xor
xchg
loope
add
stc
mov
loop
in
cmpsl
dec
cmp
jnp
mov
xor
js
jnp
movsl
test
sub
fiaddl
mov
cmp
xchg
lods
pop
xchg
push
fbstp
pop
jle
mov
lahf
push
aad
stc
je
mov
inc
idivl
mov
mov
mov
popl
adc
mov
call
sub
push
sti
push
pop
xor
mov
outsl
adc
fwait
inc
repz
adc
jnp
mov
xor
clc
dec
cmpl
mov
mov
pop
push
xor
orb
mov
rolb
xor
push
je
popf
out
sub
adc
in
or
mov
les
arpl
arpl
mov
cmp
pop
pop
mov
fcmovnbe
mov
call
inc
test
lds
push
lret
clc
gs
jno
xor
lds
addr16
mov
or
fstps
lret
jmp
sub
mov
mov
cs
pop
lret
outsl
and
sbb
adc
jae
jle
dec
dec
test
test
scas
xchg
xor
xorb
dec
mov
pusha
das
pop
push
enter
pop
pushf
dec
sbbb
outsl
in
xchg
push
sub
test
repnz
cmp
dec
sbb
cmp
clc
fs
loop
dec
sub
or
inc
adc
in
xchg
xchg
into
push
aaa
mov
xchg
in
dec
pop
push
sbb
inc
jns
dec
add
loope
and
mov
adc
je
jmp
sbb
cmc
push
mov
jo
jne
sub
sub
in
pop
lods
mov
movsb
rcrb
sub
pushl
mov
add
inc
ds
push
repnz
adc
push
leave
int3
cli
test
testl
cmp
adc
adc
cld
lock
cmp
and
sbb
push
adcl
in
lds
cmp
add
mov
stos
sbb
add
rorl
iret
pop
mov
inc
test
iret
or
sub
test
ret
xor
cli
addr16
iret
outsb
inc
aam
mov
decb
jbe
leave
inc
add
mov
inc
jmp
jg
sub
in
mov
dec
jnp
mov
divb
sti
xor
in
repnz
jae
jge
cmpsl
notl
icebp
js
mov
xchg
test
cmc
sub
stc
data16
in
mov
test
das
sti
adc
stc
mov
adc
add
add
je
cwtl
cld
xchg
mov
scas
ja
mov
movsb
je
sarb
lds
cmpsl
push
and
sub
movsb
or
ret
mov
aad
fidivl
fiadds
xchg
negl
popf
scas
test
stos
das
enter
icebp
addr16
push
add
icebp
mov
je
mov
or
ja
aaa
ret
push
pusha
outsl
sbb
repz
xor
out
cmp
mov
pusha
cmp
cmp
jp
add
adcb
pop
jecxz
ja
test
cmp
sbbb
and
fnstenv
adc
ja,pn
xchg
inc
mov
pushf
addr16
test
sub
cmpsb
jmp
lahf
int
movsl
ret
iret
mov
insb
mov
add
pop
sbb
into
ret
xchg
push
ljmp
jg
and
inc
inc
fcmovb
pop
mov
ljmp
out
repnz
outsl
sti
cmpsb
lds
stos
out
arpl
cmp
dec
jmp
dec
mov
cmpsb
sbb
pop
add
pop
sbb
mov
add
xchg
xchg
repnz
or
add
pop
xchg
push
enter
gs
scas
sbb
xorl
push
adcl
out
fcoms
pushf
inc
jmp
jge
sub
and
xorl
icebp
or
pop
push
mov
sub
stc
sbb
dec
and
ja
lret
xchg
sub
push
sbb
cmp
lret
out
sub
sbb
xchg
pop
mov
sbb
pushf
push
fisubrl
pushl
aas
lret
dec
pop
mov
fldt
add
xor
pop
outsb
xchg
lock
mov
and
jae
push
add
repz
mov
fisubs
test
aad
xor
jp
mov
mov
ja
js
and
push
cmpl
adc
mov
lods
movsb
and
mov
fucom
xchg
inc
hlt
ljmp
out
mov
cmp
jecxz
into
sahf
lret
loop
jp
rorl
in
fwait
int3
xchg
aam
xor
cmc
adc
adc
loop
mov
pop
outsl
xchg
push
sub
sub
inc
in
or
cld
cmp
arpl
add
and
jg
inc
pop
push
push
fcoms
ret
sub
sbb
lods
sbb
sbb
daa
pop
jbe
mov
dec
add
jae
hlt
mov
jge
rclb
mul
push
stc
pop
repnz
xlat
hlt
xor
lods
arpl
xorl
fcoml
divb
std
sahf
mov
sti
repz
cwtl
out
pop
fildll
daa
adc
scas
dec
mov
cltd
inc
jle
shl
adc
mov
not
or
dec
orl
sbb
jb
andl
xchg
cmp
pusha
mov
jecxz
add
sbb
test
out
aas
dec
iret
dec
mov
mov
call
sbb
std
push
rorb
sbb
mov
aam
adc
loope
cwtl
int
fmul
fsub
mov
test
cmp
xor
aas
mul
jo
mov
xor
call
adc
daa
aaa
in
hlt
inc
jnp
negl
inc
jae
call
mov
adcl
faddl
and
lds
arpl
xor
cmpb
es
mov
add
arpl
mov
and
aaa
rcrl
mov
mov
sti
mov
outsb
jp
sbb
stos
adc
xchg
jecxz
xchg
out
insb
das
pop
fdivp
pop
xchg
inc
sub
mov
test
in
out
inc
aas
outsl
test
insb
enter
jnp
jae
scas
xor
movsl
test
pop
repnz
sub
cli
push
push
into
pop
rorb
push
xchg
mov
pop
pop
es
imul
out
imul
mov
cwtl
into
cld
mov
scas
je
sbb
mov
mov
pop
pop
adc
mov
xor
imulb
xchg
push
les
in
fdivs
cmpsb
push
sarl
add
insb
add
pop
mov
mov
stc
movsl
mov
push
icebp
sbb
ret
adc
idiv
cmp
xchg
jo
push
inc
fcomps
mov
sbbb
fiadds
mov
jne
mov
sub
inc
pop
clc
outsl
cli
mov
mov
fcompl
cmp
loope
cmpsl
loopne
adc
pop
inc
repz
scas
stos
sbb
loopne
add
cwtl
push
adc
push
out
setbe
xor
pop
push
pusha
sbb
xchg
adc
mov
pop
or
ffreep
add
nop
mov
pop
sbb
loop
es
cltd
call
out
andnps
aaa
cmp
or
jp
adc
lods
and
popl
jno
xor
ljmp
popf
mov
stc
sbb
scas
or
jns
in
addr16
pop
sub
clc
div
cmp
push
fistpll
call
mov
outsb
add
movsb
add
push
lock
or
and
sub
xchg
scas
xor
bound
lcall
imul
call
sbb
insl
shll
daa
insb
arpl
dec
add
fstpt
adc
xchg
lock
pop
or
jl
scas
ss
dec
pop
xor
or
mov
dec
cmp
test
out
lret
out
lahf
and
push
xchg
push
fs
arpl
aam
pusha
mov
jb
cmc
jg
jge
je
adc
xchg
adc
mov
gs
call
xchg
rclb
ljmp
dec
add
jae
mov
jmp
or
push
sub
mov
icebp
rcrl
cmp
or
outsb
mov
push
fsubrs
mov
gs
inc
sahf
loop
or
imul
loopne
iret
jae
hlt
sar
sbb
loopne
mov
sub
add
test
pop
sub
imul
sbb
iret
lock
movsb
je
loopne
outsl
xchg
add
inc
insb
mov
push
add
inc
push
mov
stos
mov
pop
jmp
sub
sahf
and
lret
cltd
lcall
push
mov
in
jge
jnp
jmp
fs
rcll
mov
fdivr
rcr
sub
dec
roll
pusha
jl
imul
jl
xchg
out
lock
mov
fisubrs
dec
cmp
mov
pushf
std
adc
lods
aad
or
insl
rorb
adc
mov
lods
jbe
pushf
and
adc
or
je
and
pop
add
mov
jb
pushf
inc
enter
je
fwait
mov
cmp
push
mov
test
shlb
out
inc
and
xchg
inc
mov
cwtl
xor
call
or
jg
js
pop
push
loopne
and
push
adc
xor
data16
push
loopne
push
or
arpl
push
push
ljmp
cmp
adc
repz
or
xchg
cmp
adc
out
adc
movsb
in
call
push
dec
add
loope
jmp
pop
xchg
dec
mov
xor
xchg
cmpb
or
xor
dec
out
ret
mov
xor
pop
loope
pop
pop
ss
sbbl
lret
xor
insb
or
push
and
pop
add
inc
into
xlat
sbb
ja
jecxz
enter
popa
mov
insl
push
ljmp
mov
mov
repnz
fnstenv
outsb
sub
aaa
inc
stc
cmp
fmull
mov
nop
jns
jns
stc
pushf
stos
xchg
mov
cmpsl
ret
loop
cmp
loop
ds
aad
xchg
xchg
into
add
cmp
inc
or
test
dec
mov
sbb
xchg
pusha
sti
das
jbe
push
jae
jp
inc
lret
out
in
sbb
mov
rcl
pop
sbb
outsl
mov
dec
jo
es
in
dec
xchg
les
repnz
rcr
mov
inc
mov
movsl
roll
fldenv
cli
loopne
mov
int3
pop
fnstcw
add
push
mov
mov
pavgb
and
test
cli
mov
fscale
nop
ret
pop
mov
mov
jle
or
pushf
inc
or
push
dec
and
rol
cmpsb
loopne
xor
cmp
sbb
mov
add
push
xlat
insl
xchg
inc
xchg
push
push
push
popf
outsl
inc
or
and
cmp
sub
ror
mov
cmp
mov
inc
or
sbb
dec
outsl
inc
or
cmp
daa
lods
lcall
outsb
add
xchg
fcmovb
push
fs
dec
icebp
pop
mov
push
cmp
ret
jne
pop
xor
cmc
lods
outsb
outsl
mov
insl
nop
push
test
lods
fdivs
dec
leave
cmp
sahf
sub
arpl
cli
nop
lret
lea
ja
pop
fnstenv
pop
cmpsb
popl
loop
outsl
push
loop
fldcw
arpl
inc
xor
sub
lds
pop
nop
test
adc
mov
loop
fistl
or
add
push
shlb
mov
or
pop
sahf
out
aaa
jle
stc
and
adc
add
cmpsb
push
popf
xor
gs
dec
or
inc
and
mov
sti
mov
imul
movsl
es
imul
ret
addr16
inc
mov
ss
and
cmp
adcb
adc
mov
pop
xchg
out
xchg
sbb
cmpsb
inc
icebp
pop
xor
push
repnz
adc
fstps
push
outsb
loopne
cmp
int3
push
mov
pop
fnstcw
bound
cli
mov
movsb
push
popa
aam
jle
adc
and
push
jle
movsl
jecxz
or
pusha
add
add
jo
xchg
sub
jo
inc
andl
xor
jb
das
lea
icebp
pop
xchg
repnz
sub
push
and
loop
nop
mov
adc
push
cmpsb
or
pop
sbb
testb
pop
sbb
data16
sbb
fstps
pop
inc
sarb
or
xchg
mov
rclb
xor
aas
out
lret
rcll
jo
lcall
dec
in
mov
mov
in
js
jecxz
scas
xor
mov
mov
xlat
mov
pop
cwtl
arpl
mov
stc
cwtl
ja
lock
addr16
cwtl
addr16
inc
inc
mov
pop
out
lds
mov
mov
loope
push
outsb
lods
cmp
imul
dec
pop
push
out
in
aam
pop
push
jle
sbb
jno
cli
dec
es
xchg
je
popf
fwait
test
mov
cwtl
push
inc
shrb
rcpps
arpl
arpl
adc
xchg
lock
mov
pop
dec
jg
imul
sbb
sarb
cmp
sub
dec
push
push
pop
arpl
mov
test
mov
cwtl
in
mov
repz
add
imul
lahf
push
hlt
fsubl
imul
into
addr16
pop
stos
sub
rorb
add
cmpsb
push
sbb
fs
dec
into
loop
and
and
incl
outsb
mov
iret
out
adc
in
popa
mov
mov
icebp
sbb
rorb
pop
xchg
outsl
ds
mov
lret
test
cmp
test
loopne
mov
inc
push
arpl
inc
and
cmpsb
add
sub
mov
lcall
into
add
push
orl
lods
in
mov
xchg
push
pop
pop
stos
int
push
out
sub
jmp
dec
iret
out
cmp
out
and
js
cmp
negl
lret
clc
or
loop
adc
jae
push
cli
lahf
xchg
xor
xchg
ss
imulb
shlb
push
xor
xchg
pop
or
ljmp
mov
inc
xchg
nop
or
sub
xchg
out
cmc
or
xchg
pop
scas
movsb
clc
addl
lds
in
mov
enter
push
bnd
xchg
stos
hlt
mov
stc
xlat
mov
and
lea
int3
jmp
push
and
inc
mov
enter
pushf
ja
mov
inc
mov
repz
sbb
fimuls
adc
mov
push
mov
ret
push
in
pop
jb
adc
xorb
lds
insb
mov
push
pop
dec
push
mov
leave
insb
lods
cli
fdivs
mov
and
fyl2x
mov
or
ljmp
add
mov
pop
mov
out
push
stc
out
popa
stc
cs
sub
inc
push
dec
cmp
int
xor
sub
outsl
xchg
inc
mov
nop
dec
jns
lds
ret
pushf
js
loope
loop
leave
or
add
adc
add
jg
repnz
mov
imull
mov
ficoml
jae
push
cmp
out
sub
mov
add
out
pop
mov
test
pop
jno
add
inc
cmp
mov
cmp
scas
push
test
mov
pop
jg
mov
fnstenv
lods
dec
mov
xlat
adc
and
adcb
push
push
adc
call
adc
cmpsb
dec
or
mov
push
dec
iret
rol
hlt
pusha
cmp
or
loopne
movsl
dec
pop
lds
xor
enter
and
in
out
dec
sbb
rorb
hlt
xchg
nop
add
jp
adc
inc
andl
addb
into
add
mov
sbb
mov
pusha
xor
imul
and
cltd
es
testb
sbb
arpl
xchg
rcrb
divl
rcr
inc
xor
xchg
aad
and
outsl
orb
cmpsl
cmp
sbb
xchg
adc
mov
mov
out
fisubrs
pop
lds
inc
mov
inc
fdivl
sarb
ret
jmp
popa
fsubp
xor
jne
push
sbb
lea
pop
int3
loope
lret
psubsb
sub
pop
lcall
push
jno
xchg
and
push
sbb
and
push
les
cmp
out
pusha
or
or
popa
xor
xor
ljmp
cmp
pop
ja
fcoms
adc
mov
notl
jb
rorl
cld
pushf
mull
daa
ja
mov
das
jne
test
out
sti
pop
push
xchg
ret
lahf
mov
adc
sbb
lret
jnp
pop
push
loope
pop
loopne
pushf
push
adc
daa
loop
aaa
in
mov
mov
lcall
rorl
jb
cmp
arpl
mov
or
lret
cld
and
sub
popf
adc
hlt
pusha
dec
out
add
inc
dec
addr16
sub
pop
mov
mov
stos
outsl
dec
jo
or
mov
xor
mov
iret
mov
cmp
imul
insb
dec
or
cmpsl
cmp
mov
push
cmpsl
xorb
push
cmp
cmp
inc
pop
outsl
pop
jo
outsb
mov
xchg
out
imul
or
add
dec
fwait
inc
lds
scas
adc
pop
andl
cmpl
ljmp
mov
cwtl
sub
pop
xchg
stos
pop
xchg
jl
xor
ss
and
addr16
jb
xchg
or
cmp
push
loopne
pop
xlat
stos
xorl
sahf
mov
jnp
pusha
sbb
je
in
and
or
incl
into
mov
mov
inc
cmpsb
adc
push
inc
add
cmc
jo
into
mov
sarl
cmpsb
in
test
divl
pushf
mov
sbb
xchg
push
push
jle
jmp
std
out
mov
jmp
scas
jmp
mov
sbb
inc
out
mov
scas
mov
minps
aaa
aad
adc
sahf
xchg
pop
push
cmpl
mov
jo
sub
adc
jno
push
rorl
lahf
aad
imul
xor
dec
mov
add
add
cmpsl
std
or
insb
movl
call
sbb
xchg
xor
inc
aaa
mov
push
das
scas
sahf
addr16
stos
adc
xchg
shrb
test
insl
into
sahf
lods
xchg
clc
inc
mov
xor
cmp
outsl
pop
sbb
inc
sbb
xlat
push
mov
loop
mov
in
push
stos
iret
inc
xchg
hlt
inc
call
pop
add
xlat
push
cld
sbb
and
in
lret
jmp
enter
xlat
jmp
mov
mov
rclb
or
lods
cmp
mov
jae
and
stc
jb
add
int
xchg
jb
aam
pop
lcall
pusha
mov
movsl
loope
imul
pop
bound
std
lods
testb
and
push
mov
notl
stos
push
imul
pop
cmp
adcb
xchg
lret
test
push
pop
adcb
xchg
mov
cmpsl
test
mov
add
ds
pop
sbb
fs
inc
je
sti
jae
outsb
scas
push
inc
minps
loopne
and
pop
pop
cmp
push
mov
scas
pop
fwait
lret
sar
adc
pop
jecxz
mov
enter
in
and
push
dec
xchg
je
in
testl
cmp
rcl
xor
cli
inc
cmp
lea
mov
xchg
pop
lret
cmc
xchg
mov
das
nop
xor
pop
mov
int3
dec
jnp
inc
mov
push
addl
fwait
add
push
xchg
xrstors
or
gs
cmpb
or
and
xchg
test
add
in
xor
xchg
aam
push
sbb
mov
pop
jl
push
test
sahf
icebp
push
or
inc
repz
and
jp
or
dec
mov
mov
and
push
mov
inc
sub
dec
or
push
pop
dec
enter
mov
stos
cltd
sub
xorb
repnz
loope
cmp
adc
ret
std
and
ljmp
add
inc
mov
sbbl
mov
mov
scas
xchg
adc
test
sbb
ficompl
jno
sub
js
mov
mov
test
mov
das
sbb
sub
mov
dec
lahf
sbb
test
push
sbb
movl
dec
stc
enter
push
mov
mov
in
jae
jns
out
ret
out
mov
inc
sub
xchg
pop
decl
xor
lcall
adc
add
xchg
xor
pop
adc
xor
inc
mov
xchg
push
add
jecxz
fwait
push
xchg
pop
jo
dec
push
dec
cmp
adc
add
jb
outsb
gs
jno
mov
das
loope
ret
imul
ljmp
xlat
enter
add
xor
fisubrs
jb,pt
aaa
xchg
shl
iret
rcrb
imul
cmpsl
cmpsb
fninit
mov
jae
arpl
xor
inc
int
out
jg
pusha
fidivrl
shr
cmc
stos
aas
push
mov
sub
mov
mov
popf
outsb
add
aas
jnp
addr16
je
adc
adc
les
lods
xchg
mov
gs
ja
insl
inc
dec
sbb
je
ret
and
mov
and
sbb
ret
or
insb
ss
mov
inc
cld
test
pop
jb
mov
test
dec
pop
sbb
or
test
mov
cmp
mov
xchg
in
inc
movsl
mov
sub
and
je
push
mov
lea
dec
movsb
jle
lret
pop
ret
ja
add
cmp
inc
push
lock
cltd
ret
lods
aas
roll
out
mov
xchg
jns
mov
push
push
scas
xor
std
lods
hlt
andb
aad
push
jo
imul
fwait
and
or
sbb
cmc
iret
cmc
or
fidivrs
lods
mov
test
adc
sub
mov
lahf
adc
out
in
in
or
fstpt
and
inc
add
or
and
insb
imul
and
sub
adc
mov
rcrb
out
mov
xor
mov
fdivs
cmp
daa
jge
imul
mov
cli
mov
ja
push
mov
adc
in
adc
push
add
fdivr
shl
adc
or
ret
inc
add
mov
and
mov
xor
mov
jae
pop
or
dec
inc
dec
fldenv
or
push
outsb
mov
or
dec
xor
adc
jno
mov
mov
push
sub
or
dec
pop
mov
imul
mov
leave
mov
dec
shlb
ljmp
aam
movb
and
jnp
mov
sbb
fidivl
loop
mul
call
outsb
lar
fmull
xchg
std
in
push
sahf
or
mov
dec
jns
imul
popa
aas
imul
dec
pop
cmp
xor
jmp
cmp
xchg
adc
mov
adc
fbstp
mov
xchg
mov
lret
test
test
stc
rcl
in
imulb
jecxz
je
mov
push
mov
push
into
flds
push
sti
test
and
outsb
aad
popa
out
fisttps
cmc
sbb
xor
inc
js
mov
mov
cmp
fnstsw
addl
test
loopne
push
and
aaa
das
aaa
xor
mov
jl
ds
aam
lods
mov
repnz
xchg
sub
fbstp
inc
rep
in
outsl
mov
push
scas
loopne
push
add
mov
inc
sbb
outsl
mov
ss
sti
mov
add
dec
mov
mov
fdivrs
xchg
out
mov
bound
js
dec
imul
push
pop
xchg
xor
enter
test
adc
mov
xchg
xchg
pusha
test
sar
arpl
call
jg
test
xchg
xchg
push
jo
mov
xor
fsubrl
and
mov
addr16
nop
cld
xor
fcoms
inc
sti
or
mov
sbb
mov
jno
sbb
mov
xor
popf
inc
push
sbb
mov
xor
mov
mov
xchg
mov
xchg
dec
cltd
out
inc
lret
sbb
fistpl
popf
inc
fs
hlt
and
cltd
cs
adcl
cmc
mov
bound
out
sub
enter
mov
enter
dec
loop
mov
inc
push
add
loopne
psubw
mov
stc
dec
pop
into
and
jmp
dec
add
xor
stc
and
lds
sbb
mov
mov
ret
cmp
andb
fwait
fwait
xor
lahf
ficompl
loopne
fdivrp
sub
sarl
in
sub
fnsave
xor
stos
or
roll
xchg
mov
lcall
mov
into
fwait
jecxz
cmc
aas
dec
fcoms
lock
inc
pop
add
fisttpl
lahf
lret
inc
pop
adc
cmp
cld
mov
jecxz
xor
insb
test
pop
pop
jns
xchg
into
imul
insb
stc
mov
jecxz
push
daa
aad
add
mov
stos
test
iret
mov
mov
sbb
fsubp
pop
mov
jle
xor
xchg
or
xor
fcomps
push
fwait
mov
mov
add
repnz
cmp
popa
add
stos
mov
das
jl
xor
fnsave
adc
sarl
cli
mov
sbbl
loop
sub
iret
popf
in
mov
or
icebp
daa
mov
test
ljmp
pop
jmp
test
dec
out
cwtl
push
arpl
jmp
data16
xchg
std
or
adc
xchg
sbb
sub
dec
cmp
mov
and
mov
or
xchg
sbb
sub
out
xchg
js
lahf
mov
das
sbb
sbb
sahf
xor
cmp
stos
sub
mov
inc
outsl
popa
les
cmp
mov
inc
sub
mov
clc
jp
inc
lret
mov
adc
std
rol
mov
push
std
test
gs
bound
jo
adc
addr16
dec
cmp
fs
ljmp
sub
and
sarl
xchg
adc
cmp
inc
and
xlat
imul
push
or
fdiv
or
mov
cmpsl
fwait
mov
fsubrp
and
mov
and
push
xor
pop
out
jbe
inc
sbb
repz
cmp
pushf
addl
mov
mov
sets
or
cmp
in
inc
loope
jns
mov
mov
dec
fsts
sub
jne
add
fincstp
adc
cltd
add
xchg
mov
and
pop
ja
les
add
imul
sbb
add
movl
fwait
mov
ljmp
aad
pop
cs
add
in
sbb
add
and
enter
mov
call
push
jbe
or
rcl
pusha
or
cmp
hlt
loopne
or
adc
add
call
mov
dec
push
and
xchg
xor
cmp
lods
test
cli
mov
mov
inc
cmp
data16
jae
mov
xchg
jbe
pop
test
sub
inc
enter
movsl
jle
inc
sarb
je
loopne
and
ret
jns
leave
push
add
scas
lds
neg
cmc
aas
fisubs
pop
ds
and
pop
xor
sub
fbld
jp
repz
push
jge
out
lea
xlat
xchg
push
and
inc
jmp
mov
cli
cmp
sub
ror
dec
mov
jp
mov
iret
sub
lods
or
sub
sbb
lds
fldenv
jo
adc
pushf
fsubrp
jecxz
in
pusha
aas
lahf
sbb
cs
push
data16
cwtl
stc
jne
mov
addr16
mov
je
cwtl
in
inc
stos
lret
fldenv
lret
push
inc
leave
jno
mov
dec
sti
inc
cmp
sarb
lret
or
mov
jle
popf
and
pushf
push
rcll
daa
or
jns
mov
cmp
mov
lahf
or
dec
cmp
inc
and
cmc
testl
or
cld
test
jns
jno
xorb
sbb
pop
jge
js
jge
fwait
stc
sbb
fsqrt
repnz
sub
inc
xchg
pushf
xor
das
add
push
insb
jnp
pop
and
aad
pop
out
and
imul
lahf
clc
pop
dec
insb
mov
pushf
ja
jge
mov
in
daa
lret
fwait
lock
popa
xchg
call
inc
sub
call
ret
enter
push
out
fstl
inc
cmp
out
jno
dec
aaa
inc
cld
aad
into
lds
pop
and
cli
sub
notl
sti
pusha
pop
call
scas
cs
shrb
push
test
cmpb
push
xor
clc
jmp
out
int
cmp
sub
jb
sbb
pop
pusha
fimuls
sbb
jecxz
std
jae
or
lods
adc
pop
cmp
push
pop
cmp
push
pop
ret
das
sub
shrb
jle
lahf
or
jmp
lock
mov
sahf
mov
sbb
lret
add
icebp
scas
in
and
fldl
enter
add
enter
mov
mov
mov
icebp
test
loopne
xchg
mov
scas
arpl
repnz
or
imul
and
rcr
sbbb
arpl
lods
lds
push
js
repz
push
adc
das
fnstsw
jbe
call
test
and
lods
js
outsl
push
mov
xchg
jle
test
or
xchg
sub
jmp
cmpsb
xlat
lea
into
mov
push
mov
mov
xor
dec
jnp
loopne
rclb
push
dec
ja
pop
fstps
icebp
test
scas
jo
push
dec
dec
test
mov
sbb
pop
rorl
mov
scas
shlb
imul
jle
adc
xchg
mov
sub
imul
shlb
xor
gs
fnstsw
and
push
pop
lock
sbb
add
outsl
scas
sbb
out
clc
cmc
ljmp
add
sbbb
ja
push
dec
lock
sub
js
push
ret
inc
and
mov
out
clc
insl
shlb
push
xchg
sub
push
pop
mov
pop
aam
lcall
ss
sbb
movsb
out
adc
cmp
es
or
jecxz
testl
aad
cltd
gs
rcrl
jbe
les
imul
call
mov
and
sarl
adc
cmp
mov
leave
sub
push
dec
cld
lds
es
fsubs
mov
and
ret
adc
ror
pop
dec
call
enter
sarb
sbb
repz
repnz
imul
movsl
shlb
iret
sbb
pop
ret
stos
xor
push
dec
shll
mov
jmp
sub
xor
repnz
mov
out
sbb
mov
inc
fists
dec
jmp
pop
and
push
addl
mov
ret
lret
lods
shld
cltd
mov
in
push
sub
ss
clc
adc
leave
test
add
loop
pop
or
jecxz
cmp
lahf
lock
cmp
mov
in
out
mov
insb
outsb
jle
jb
sbb
jge
xchg
mov
orb
clc
notl
sbb
in
or
xor
jbe
aad
jnp
mov
rolb
imul
and
push
cmc
adc
daa
daa
jecxz
and
jecxz
lcall
testb
hlt
xor
sarb
shlb
je
xchg
and
cmpsl
testb
cltd
mov
jne
push
xchg
add
push
lock
xor
inc
mov
sbb
data16
add
test
fs
jb
or
adc
nop
lahf
sbb
subb
pop
aam
mov
sbbb
movntps
xor
icebp
mov
inc
scas
add
stc
cmp
xchg
push
loop
adcb
and
mov
test
lcall
dec
cmp
leave
cli
aas
mov
pushf
ss
aas
pop
sbb
or
into
sbb
lret
xchg
cmp
es
push
pop
shr
arpl
mov
xlat
inc
push
sub
jbe
popf
dec
fstpl
inc
add
mov
test
or
mov
loopne
jmp
jnp
rolb
mov
bound
and
ret
sub
xchg
enter
in
sarl
cpuid
mov
test
in
insl
adc
and
mov
push
and
add
push
jne
xchg
cmp
lcall
mov
jbe
xchg
pop
nop
addr16
mov
aad
push
inc
pop
mov
fisubrs
inc
dec
inc
shl
adc
mov
mov
mov
popf
adc
int3
jle
mov
dec
mov
lds
mov
rcrb
jmp
and
or
jne
fiaddl
in
cmp
and
cwtl
adc
pop
pop
mov
cmp
fwait
lods
sbb
stc
iret
cmc
xchg
ljmp
nop
enter
iret
fstp
cmc
pause
ficompl
and
in
mov
loop
shlb
cld
int3
dec
push
or
push
sti
lea
mov
jno
mov
out
movsl
xor
lds
pop
loopne
or
sbb
mov
and
and
mov
dec
notl
inc
repnz
fwait
pop
sbb
dec
xlat
xchg
lods
addr16
in
xchg
push
ds
mov
scas
sbbb
sbb
lods
es
push
lock
xchg
cmpsl
mov
dec
clc
or
mov
pop
sub
inc
iret
pop
arpl
cmpsl
jne
mov
call
lea
jmp
xchg
in
pop
push
dec
and
pop
stos
jecxz
jmp
fnsave
ja
fidivrl
roll
les
cli
rcr
adc
mull
in
insl
in
fbstp
ret
mov
push
jo
inc
cmpsl
dec
outsl
sbb
xor
mov
lock
push
aam
jecxz
repnz
lds
pop
mov
dec
test
sub
or
or
or
xchg
ds
out
jnp
push
mov
xor
cmp
push
js
sub
xchg
cld
xor
stos
sub
dec
cmp
gs
pop
popa
pop
mov
xchg
or
lret
push
or
lret
sub
mov
stos
xor
adc
sbb
shll
mov
out
fnstcw
aaa
daa
add
fldl
sub
imul
mov
xor
call
dec
fs
jp
popf
cmp
xchg
pushf
frstor
fwait
xlat
stc
lret
jmp
ss
in
cmp
gs
xchg
test
mov
hlt
rorl
mov
mov
fbld
push
inc
rorb
insb
lods
inc
and
or
arpl
out
lcall
add
pusha
fcomps
or
cs
testl
mov
sub
push
or
sbbl
push
aas
enter
or
push
jmp
xchg
xor
sti
mov
pop
pushf
out
xlat
lret
add
sub
dec
ror
jl
pop
hlt
xchg
mov
and
mov
mov
mov
je
dec
jl
mov
push
cld
cli
mov
icebp
flds
xor
mov
insl
testb
jmp
scas
icebp
mov
mov
add
push
stos
lret
inc
popf
push
bound
pop
in
addr16
inc
inc
mov
push
mov
mov
pop
cli
add
mov
jae
in
daa
pop
push
call
mov
xchg
stc
adc
sub
xchg
jmp
lock
mov
mov
mov
cmp
out
push
out
push
or
jmp
sub
nop
fs
imul
mov
repz
pushf
into
out
sbb
das
test
popa
xor
and
psubsw
clc
inc
test
push
pop
sbb
adc
sbb
icebp
adc
cmp
jno
mov
out
push
faddl
xor
mov
nop
call
movsl
cwtl
and
and
int3
or
mov
pop
mov
sbb
int
pop
adc
pop
xor
jge
bound
movsl
add
repnz
popa
xchg
fwait
lds
dec
xchg
call
and
stc
cmp
cmp
clc
iret
inc
loopne
cmp
rorb
int3
nop
ds
sbb
mov
js
fcmovne
pop
add
cmp
xchg
dec
mov
add
fs
insl
jmp
mov
insl
and
mov
jbe
aas
insb
inc
add
fnsave
sbb
xchg
pushf
dec
sub
or
fdivl
pop
adcb
push
jnp
mov
mov
cmp
insl
or
push
and
or
push
dec
inc
jmp
popf
xlat
mov
out
clc
mov
or
outsl
cmpb
mov
add
popf
jl
adc
js
scas
mov
jns
lock
sbb
inc
imul
hlt
and
adc
mov
xlat
cltd
call
notb
push
out
fs
jae
or
fisubs
or
push
inc
cld
sahf
in
jp
pop
cmp
adc
in
pop
lods
fs
aaa
xchg
int
mov
mov
decb
and
aaa
xlat
aaa
xor
dec
das
addb
xchg
std
mov
pop
lret
cmp
jbe
jno
shll
icebp
xor
hlt
add
daa
pop
les
ljmp
adc
and
aad
icebp
cwtl
pop
mov
stc
scas
scas
sub
add
sti
xor
xchg
divb
add
xor
mov
std
fwait
adc
cltd
shlb
je
push
filds
sbb
mov
cmp
mov
fmul
cwtl
inc
aam
ss
pop
idivb
lods
add
push
dec
fldcw
ret
cmp
adc
bound
insl
in
pop
jg
arpl
mov
mov
push
xchg
cs
cli
int3
insl
push
jmp
into
mov
out
add
push
xor
mov
add
mov
ret
lea
sub
push
push
inc
dec
mov
cmp
inc
or
out
addl
add
testl
nop
leave
jp
std
xchg
loope
dec
push
push
add
out
outsb
and
push
pop
out
rol
testb
cmp
out
stos
cmp
add
jnp
aam
mov
mov
es
jge
add
stos
aad
push
ret
and
mov
xchg
mov
lahf
pop
inc
xchg
mov
push
pop
push
mov
rcll
jecxz
inc
rcll
mov
adc
inc
jp
dec
enter
mov
cli
jmp
xlat
xlat
test
hlt
pop
dec
jb
mov
fsubr
and
xchg
cmpl
in
stos
movsl
enter
dec
lods
lods
fistpll
sbb
test
outsl
fwait
ljmp
jae
js
xchg
mov
lcall
rol
pop
or
cli
loopne
popa
popa
jbe
add
jne
aas
daa
cs
adc
lcall
pop
and
inc
push
add
mov
repz
pcmpeqw
or
imul
xor
scas
iret
xchg
mul
in
loopne
ljmp
mov
add
xchg
cmpsl
aaa
cli
mov
push
bound
push
sbb
pop
cmpl
push
adcl
dec
xchg
dec
sbb
jno
or
rorl
mov
add
loope
jnp
loop
aam
mov
mov
pop
cli
das
lock
out
fnstsw
xor
xchg
mov
mov
add
xor
mov
addr16
out
cmc
inc
in
shrl
pop
add
les
push
inc
sbb
in
pop
mov
inc
mov
pop
jns
adc
mov
pop
pusha
test
xchg
and
inc
imull
lock
out
neg
lcall
fbld
adc
xor
dec
jg
orb
pushaw
sub
lods
inc
mov
inc
mov
bound
and
loopne
jbe
repz
stc
dec
mov
gs
push
inc
jbe
mul
push
and
push
mov
and
lock
imul
jo
sbb
xor
out
popf
dec
mov
sub
push
xchg
xchg
sub
clc
cld
insl
xor
movsb
mov
cmp
outsl
or
pop
pusha
aam
out
mov
fucomi
mov
bound
xchg
xor
pop
xorb
xor
sub
ds
xor
sarl
pusha
mov
lret
jl
lock
push
mov
scas
add
popa
or
loop
and
push
adc
cmp
nop
xorb
dec
in
insl
and
cmc
push
je
mov
outsl
in
xchg
std
loope
xorb
loope
scas
stos
push
cmc
lock
xor
scas
mov
loope
or
cwtl
push
mov
xchg
jmp
pusha
add
jmp
pushf
pop
xor
shl
stos
pop
cltd
sbb
mov
mov
pop
rcl
and
sub
push
inc
jnp
stos
lahf
imul
ja
or
lahf
lcall
aad
sar
rcll
pusha
rolb
cs
and
xor
fstps
icebp
test
lret
ja
cltd
cmpsl
shr
rcrb
inc
mov
sub
cmp
aad
xchg
mov
xchg
add
leave
ds
or
iret
inc
int
aas
cwtl
outsl
faddp
cld
xor
fnsave
dec
flds
sbb
ret
movsl
pop
jbe
sub
jb
repz
fldcw
xor
repz
xchg
xchg
pop
push
call
jmp
sub
aas
lds
je
or
push
aas
sbbb
cld
popl
imul
imul
nop
push
sbb
xchg
jg
outsb
cmp
add
enter
fcomp
jmp
loop
fcmovbe
out
mov
sti
cs
pop
fidivrl
hlt
jnp
cmc
pop
out
dec
add
adc
cmpsl
ret
sbb
cmp
movsl
pop
ret
push
jge
div
xchg
xchg
inc
xor
add
or
mov
adc
in
cmp
inc
dec
into
daa
xchg
or
xchg
cmpsb
sbb
inc
movsb
js
cmc
mov
arpl
daa
mov
inc
sub
fcmovbe
cmc
jae
xchg
jg
aaa
add
mov
mov
mov
cmpsl
cmpsl
sbb
xor
inc
xlat
bound
mov
repnz
ljmp
fisubs
jbe
insb
adc
movsl
jge
and
fmull
sbb
lds
popf
rolb
and
stc
push
sbb
insb
sahf
pusha
xor
push
cmc
adc
and
xor
xor
in
sub
push
jmp
pcmpgtd
out
jp
sbb
xchg
pop
cmpsl
bound
out
sbb
popf
jl
jp
js
jg
jp
push
mov
in
jle
adc
js
mov
pop
iret
mov
stos
push
xor
sti
mov
or
mov
cmpsb
cmpsb
jne
cmp
movsl
dec
sbb
xor
dec
cmp
cmp
push
test
xchg
pop
rcll
pop
jno
aam
sub
subb
jnp
inc
cwtl
and
sbb
imul
pop
nop
leave
jo
inc
cmpsl
cmc
lret
or
in
mov
pop
daa
xor
mov
add
xchg
or
into
fucomi
jg
and
dec
loop
jnp
cmpsl
cmpsb
add
cwtl
pop
fs
dec
aad
stos
out
shrb
adc
cs
sbb
call
cmp
xor
cwtl
pop
dec
imul
jne
call
cmp
outsl
push
outsl
jb
push
inc
imul
sub
cmp
out
std
add
fnstcw
xor
addr16
sarl
ret
ja
lret
cwtl
push
cwtl
andl
out
jae
xchg
js
subl
mov
xchg
dec
out
loope
mov
mov
cmp
lock
push
push
push
jnp
dec
adc
dec
add
stc
mov
pop
xor
add
sbb
inc
xor
test
test
add
negl
popf
cmp
sbb
xchg
push
add
outsl
xor
loop
fidivrs
push
dec
jns
out
mov
arpl
stc
ret
outsl
and
leave
pop
hlt
inc
fists
leave
aas
sbb
and
push
sbb
lods
inc
test
sub
nop
das
leave
lods
clc
mov
xchg
push
push
mov
imul
add
pop
jo
int
ss
je
loop
test
jae
dec
les
out
xchg
fmuls
mov
int
sub
push
fadds
fisttpll
inc
shrl
das
fcoms
aaa
sbb
in
rcr
xlat
push
fldt
inc
mov
fs
adc
add
jne
sub
popf
daa
xor
mov
and
sub
arpl
js
cmp
pop
adc
adc
outsl
nop
movsl
push
sub
cwtl
dec
lahf
pop
je
gs
adc
hlt
int
pop
mov
adc
dec
cld
movsl
cs
cld
cmp
sub
mov
xor
mov
cmc
fcompl
fiadds
mov
and
lret
pop
xor
jo
into
adc
push
test
mov
dec
inc
ja
mov
cmp
leave
pop
pushf
jl
mov
dec
je
push
pop
sahf
stc
add
and
bound
or
pop
xchg
sbb
test
pop
movsb
and
mov
rorb
xchg
pop
cltd
mov
lods
popf
push
mov
call
or
adc
push
pop
out
cld
xor
push
or
mov
scas
sbb
push
test
popa
mov
or
in
xchg
or
fxch
mov
into
push
or
insl
std
push
cwtl
jae
pop
outsb
nop
sub
rcrb
push
sub
bound
sub
test
cmc
dec
cmp
call
pop
mov
add
inc
and
dec
sub
push
mov
movsl
aam
shlb
lret
pop
jmp
sbb
mov
xchg
push
sub
inc
xchg
movsb
aad
push
mov
mov
je
ss
mov
fwait
xor
push
pop
test
xchg
aad
in
lock
dec
loopne
and
mov
jge
push
add
cld
jo
inc
adc
leave
dec
adc
push
incb
lods
mov
and
or
fdivrl
and
pop
aam
mov
je
mov
test
and
sub
hlt
mov
or
aas
pop
es
mov
gs
scas
movsl
xor
xchg
popf
scas
sbb
lahf
push
and
cmp
adc
sbb
xor
sub
mov
cs
jecxz
lea
iret
icebp
ja
fnsave
aam
cmp
push
mov
out
adc
stos
cmp
rorb
mov
cwtl
cmc
daa
dec
lret
data16
loop
adc
xor
cmp
push
jg
lea
ss
dec
inc
filds
jb
iret
mov
jg
xchg
pop
push
popl
jmp
pop
push
icebp
jmp
xor
lods
cmpsl
and
enter
mov
rcll
mul
ja
mov
push
jecxz
xor
cmp
mov
repz
mov
sub
sbb
xor
not
fnstenv
icebp
scas
aaa
ss
and
cmpsl
stc
push
push
mov
sbb
std
cmp
pop
mov
mov
mov
enter
mov
nop
ljmp
ss
lea
jb
mov
dec
pop
test
ret
popa
bound
jmp
out
dec
je
mov
push
mov
cmpsb
jecxz
cld
enter
jo
arpl
cwtl
mov
mov
push
aad
push
mov
push
setno
cmc
mov
xchg
adc
test
cmp
lret
jns
mov
xchg
pop
push
arpl
test
scas
jg
xor
mov
movsl
cmp
add
jbe
mov
dec
xchg
rorb
inc
pop
cmp
adc
iret
cmpsb
jle
sub
or
mul
lea
das
es
fisttpll
rorl
pop
mov
jmp
xchg
cmpsb
loopne
lcall
lahf
rorl
pop
lods
stc
jl
das
inc
lds
cmpsb
pop
xchg
test
add
jg
mov
xchg
daa
lds
or
mov
pop
mov
scas
adc
xor
test
add
push
stos
cwtl
push
subl
orb
es
addr16
jmp
mov
arpl
inc
stc
aaa
xor
jle
in
and
jb
jecxz
and
lods
dec
movsb
stos
mov
push
rolb
mov
mov
fimuls
sarb
cmp
lahf
shlb
xchg
adc
ds
mov
pop
imul
push
xchg
inc
ret
addr16
mov
shlb
stos
cwtl
daa
jae
sarl
pop
xor
sbb
dec
int3
scas
jg,pt
in
jbe
testb
dec
inc
cmc
lods
test
sub
mov
inc
popa
cmpsb
in
and
pop
jns
pop
mov
ss
repnz
mov
loop
lock
mov
push
aaa
xchg
inc
xchg
loope
pop
arpl
cmpsl
popw
mov
test
lock
loopne
pop
push
ljmp
pop
xchg
inc
out
int
cltd
mov
mov
xor
adc
or
xor
mov
in
mov
inc
cli
stos
inc
sub
xor
cwtl
inc
xor
or
lahf
imul
cmp
pusha
mov
loop
sti
sbb
mov
test
sbb
cmp
pop
movsb
sbb
mov
push
mov
sti
insb
sbb
cmp
xchg
addl
jle
orl
test
sahf
fbstp
shlb
or
insl
ficoms
jl
cmp
rcrb
sbb
xchg
push
cltd
popa
aas
xchg
jne
xor
stc
sbb
sub
repz
negb
jne
xor
jg
int3
cli
add
jecxz
mov
sbb
inc
movsl
add
sub
xchg
cmp
jl
xchg
xchg
loopne
movsl
xor
negl
jecxz
iret
inc
jb
test
cwtl
xor
adc
inc
add
in
pop
pop
icebp
or
outsl
dec
stos
lods
cld
hlt
ret
dec
xchg
lcall
ret
xor
insb
dec
or
rorb
mov
daa
pop
pop
xchg
inc
sbb
loop
push
scas
cltd
xor
insb
or
xlat
je
adc
adc
aas
mov
and
pop
cmpsl
dec
je
xchg
sbb
mov
pop
out
jmp
jo
jbe
jle
jmp
stos
ss
xchg
popf
jbe
dec
pop
je
jg
movsl
fbld
sbb
cld
xor
lods
or
xchg
xor
dec
out
dec
imul
adc
inc
shrb
daa
mov
stc
sub
sub
jns
lcall
or
pushf
xchg
dec
shr
mov
std
ss
loopne
addl
cmpl
mov
mov
fimuls
cmpsb
xchg
cmp
push
adc
gs
dec
adc
or
mov
mov
pop
or
xchg
cmp
xor
or
fsubrl
push
pop
cld
jp
inc
int
shlb
lods
mov
push
dec
movsb
lea
fstps
enter
push
sbb
jns
push
mov
adc
into
pop
push
outsb
jbe
mov
dec
jnp
xchg
push
inc
cmpsb
lods
dec
sbb
inc
fs
out
scas
pop
lcall
or
or
jg
pop
jbe
xchg
mov
push
jb
jge
lock
notl
push
add
imul
ja
test
jnp
or
push
mov
mov
fisttpll
imul
jns
mov
fldt
or
jge
ja
in
push
in
loopne
out
adc
fcoml
std
mov
inc
out
xor
dec
scas
fdiv
xor
mov
test
sbb
idivl
lahf
cmp
push
mov
xor
mov
adc
pop
sbb
dec
aas
je
or
iret
jbe
mov
sub
mov
cmp
popa
push
pop
cmpsb
hlt
mov
fisubrl
ds
in
imul
sbb
mov
aad
mov
mov
sahf
test
jno
fucomip
push
pop
cs
daa
les
sub
pop
orl
jl
movsb
in
scas
repz
fistpl
std
cmp
icebp
xlat
pop
mov
fs
int3
xlat
jnp
push
push
cli
popf
pop
addr16
pusha
and
push
cltd
cmp
mov
arpl
mov
mov
or
pop
cmp
xor
ror
test
push
std
sbb
xlat
movsb
fistl
push
add
mov
dec
xchg
fwait
or
inc
rclb
scas
hlt
fcomp
cmpsl
push
xchg
dec
add
loop
xor
sbb
cmc
sbb
push
adc
ja
push
mov
leave
sahf
cmc
mov
xchg
icebp
or
inc
mov
scas
enter
jno
packsswb
lds
stc
scas
sub
pop
ljmp
sub
jnp
push
mov
sub
cmp
shlb
jnp
and
dec
xor
inc
adc
jle
dec
xchg
iret
add
lcall
push
push
sti
push
push
iret
jp
outsl
stos
stos
adcl
jmp
xchg
jne
pushf
test
mov
std
js
pop
xchg
into
hlt
bound
add
daa
mov
xor
sbb
add
inc
into
xor
jg
ret
and
cmp
aas
xor
repnz
das
sub
mov
mov
out
sahf
or
sbb
cwtl
sbb
push
add
xchg
pop
pop
cs
test
cmp
xor
inc
in
out
and
aad
jle
lock
jno
jno
dec
sub
push
mov
pop
xchg
je
outsl
shlb
mov
ret
adc
inc
sahf
sti
cmp
les
mov
shlb
dec
jne
jge
or
fcoms
push
xchg
jmp
test
lahf
sub
roll
bound
aaa
xor
pop
cmp
inc
fs
push
loopne
sbb
popaw
call
pusha
daa
inc
in
das
aaa
and
sub
dec
xchg
xchg
adc
mov
dec
popf
add
mov
pop
mov
mov
sub
xchg
inc
inc
pop
pushf
out
mov
xchg
stos
fldl
push
shll
push
xor
mov
adc
dec
and
inc
mov
xchg
stc
call
rcrb
gs
push
fisubrl
popl
mov
xchg
test
cmp
sarb
pop
pop
fildl
sbb
push
mov
loopne
in
int3
pop
adc
out
mov
pop
adc
cwtl
mov
inc
ds
jae
pop
and
add
negb
push
jg
mov
ret
mov
cmpsl
cmp
mov
xlat
and
es
mov
jg
mov
mov
sub
lock
sub
call
xchg
daa
ljmp
pop
iret
popf
push
mov
movsl
inc
push
and
loopne
cwtl
shr
adc
repnz
loope
pop
scas
jo
mov
cli
data16
xcrypt-cbc
cmpsl
aad
adc
jmp
sbb
inc
test
xlat
out
xor
mov
push
mov
pop
out
add
pop
cltd
nop
pop
xor
int
in
cmpl
jae
enter
imul
and
movzbl
insl
sbb
and
lea
or
cmp
pusha
adc
jmp
ret
fistl
pop
dec
add
mov
mov
inc
out
pop
in
sub
mov
inc
and
adc
leave
ljmp
leave
clc
inc
scas
or
push
xor
push
xchg
cmc
mov
fcomps
out
jns
outsb
filds
rolb
adc
sub
pop
insl
and
sar
popf
sbb
cmp
mov
or
fisubs
in
jmp
jecxz
jo
jbe
fmull
loope
mov
dec
in
lcall
sub
rsm
addr16
and
jp
pop
in
jbe
push
mov
add
or
push
dec
test
push
int3
int3
std
inc
flds
push
or
mov
lahf
cmp
stos
movsl
aad
and
les
iret
add
pop
jle
xor
rcl
cmpsb
mov
mov
add
sbbl
and
xor
bsf
adc
in
je
mov
insl
dec
negb
cmpsl
dec
xor
sbb
orb
add
jl
pushf
iret
lea
mov
mov
inc
xrelease
mov
pop
jnp
cld
test
xchg
jge
idivl
mov
jp
nop
pop
xchg
in
ja
sbb
loopne
gs
aad
imul
mov
vpunpckldq
pop
xchg
js
xchg
leave
push
mov
test
mov
inc
pop
aad
insl
adc
mov
loop
cmpsl
dec
enter
xchg
mov
clc
jmp
inc
mov
shll
lret
cli
lcall
std
hlt
xor
imul
pop
mov
sbb
rcrb
stc
std
dec
cld
and
mov
vpcmpgtb
cmp
sbb
test
mov
jnp
sahf
pop
sbb
lods
mov
mov
push
push
and
inc
fwait
pop
dec
fisubrl
ljmp
sbb
pushf
ds
leave
sbb
call
add
loopne,pt
test
aad
clc
or
repz
clc
iret
cwtl
mov
mov
cmp
or
cld
ljmp
rcl
stc
fidivrl
fcomps
jae
mov
mov
inc
adc
xchg
les
loopne
test
dec
es
pop
xlat
aas
imul
or
sub
ficomps
pop
lret
icebp
fldt
enter
add
pushf
inc
popa
jmp
cli
gs
rcrb
pop
inc
nop
cmpsb
adc
movsb
push
aam
or
sub
loope
inc
mov
arpl
push
sub
fs
aaa
mov
test
xor
xchg
dec
adc
data16
test
jle
test
jo
leave
pop
push
scas
aaa
mov
add
js
xchg
push
cmp
cmp
inc
push
xor
inc
popf
xchg
push
cmp
in
adc
clc
cltd
lcall
je
jns
fistl
xchg
dec
mov
inc
cmc
or
jg
push
inc
cwtl
mov
push
lahf
add
pop
and
roll
mov
dec
dec
les
mov
stos
js
test
ret
addb
sbb
imul
xchg
ja
sub
pop
cmpsl
or
ljmp
cmp
hlt
rcl
dec
push
adc
add
fiaddl
cmp
test
insb
inc
mov
sbb
mov
iret
sar
mov
movsl
sub
js
gs
xchg
or
leave
jg
scas
adc
loope
enter
hlt
jno
sti
jge
ret
mov
add
out
push
jg
loope
adc
fdivr
notl
les
les
xor
mov
ret
lods
cli
popa
mov
cmc
sub
cmp
cmpsb
or
sub
lcall
stos
add
pop
sbb
fsubrs
or
mov
nop
sub
push
inc
add
lock
lods
shl
call
push
lret
jle
push
inc
and
push
pushf
add
loope
mov
lahf
out
jbe
call
scas
xchg
repnz
push
ja
mov
cmp
insb
sub
jmp
cld
fldcw
daa
inc
dec
inc
int
cwtl
and
and
ret
dec
stc
in
repnz
or
add
dec
insl
adc
xchg
lahf
ds
cmp
lahf
aam
pop
sub
fildll
or
pop
or
adc
sbb
adc
sub
movsb
out
cmp
xor
push
mov
imull
mov
mov
notl
xor
scas
mov
push
dec
fs
cmp
inc
aam
in
jmp
jbe
push
in
xchg
cmp
ret
sub
inc
sub
adc
mov
mov
jl
pusha
sbb
andb
mov
test
xor
mov
enter
scas
or
fstl
ret
call
es
jae
mov
lret
ret
fdivrp
adc
out
lahf
add
add
xchg
sub
mov
bswap
int3
pop
into
dec
fmuls
jnp
loope
jo
int
mov
shlb
mov
jl
mull
pop
das
ret
xor
jbe
jno
push
mov
push
mov
push
sarb
mov
dec
add
addl
mull
cmp
sbb
popf
xor
repz
cmc
out
cld
jns
in
or
jmp
iret
or
dec
pop
popa
int3
sbb
xchg
data16
push
rclb
jbe
jg
addr16
xchg
mov
jge
push
push
addr16
ss
sarl
pop
inc
test
mov
dec
dec
push
dec
fmuls
inc
xchg
mov
repz
xchg
xor
xchg
insl
dec
scas
ret
pop
xchg
clc
int3
pop
movntq
add
inc
es
adc
xchg
jg
or
dec
jno
ss
cmp
push
icebp
cmpl
popa
ret
cs
dec
lahf
cmpsb
sti
ds
movsb
dec
mov
mov
or
add
push
outsb
out
dec
dec
push
into
or
ds
shr
fs
test
fisttpll
call
stos
ds
fcomp
mov
enter
jns
das
imul
ret
xchg
test
or
cld
sti
mov
loope
and
pop
imul
cltd
shrl
loop
into
dec
inc
and
jg
test
push
insl
jb
xchg
imul
pop
dec
add
pop
jg
sub
sbb
insb
push
faddp
jne
rcll
adc
mov
insl
sbb
push
lods
push
test
test
mov
dec
mov
scas
sub
add
adc
sub
stos
mov
xorb
in
sub
sub
shlb
sbb
test
out
js
mov
lods
cmp
movsb
xorb
mov
jle
mov
aaa
xchg
mov
mov
enter
scas
mov
fcomip
in
in
arpl
add
out
es
add
sub
jne
pop
inc
out
sti
xchg
pop
ss
sub
ja
sahf
sarl
mov
nop
mov
and
sub
pushf
ljmp
das
jp
popa
popf
inc
call
ljmp
sarb
pop
nop
mov
movsl
dec
xor
inc
jle
and
pop
pop
cmpsl
xchg
movsb
push
aas
cwtl
inc
lods
lcall
mov
movsl
mov
rcrb
addr16
xor
or
shrb
push
sub
mov
repnz
rcr
pop
sub
mov
xor
test
xchg
jns
and
add
pop
sbbb
mov
push
cmpsl
lods
in
sbb
cmp
mov
sub
jnp
mov
adcb
mov
iret
and
mov
inc
push
arpl
sub
pushf
addr16
inc
fidivrs
adc
jl
mov
xchg
mov
inc
insb
pop
addr16
test
adc
imul
and
lret
lds
ljmp
out
insb
jl
inc
dec
testl
mov
pop
or
jo
push
fadds
test
rol
sub
lds
push
sub
or
sub
sub
inc
rorl
push
daa
mov
loop
popf
xlat
sbb
mov
sub
jp
es
int3
push
cmp
dec
lods
icebp
into
mov
dec
lahf
popa
fdivr
mov
rep
jle
sti
stc
lahf
test
cmp
dec
sbb
cwtl
push
adc
inc
mov
jnp
incl
mov
loope
scas
xchg
lahf
and
sub
test
out
or
sti
out
sub
mov
pop
mov
push
stos
out
xor
addl
stc
dec
push
inc
jne
cli
repnz
test
xchg
repnz
and
vshufps
roll
add
mov
and
mov
pop
les
cmp
xlat
aaa
lds
mov
inc
and
outsb
sub
or
xchg
push
mov
imul
cltd
mov
insb
sti
mov
jecxz
xchg
mov
mov
pusha
inc
or
inc
inc
ror
leave
cmp
fwait
dec
ds
add
sub
cmp
add
inc
mov
mov
and
mov
ret
dec
les
push
inc
inc
popa
fisubrs
jl
bound
xchg
lods
dec
and
daa
sbb
mov
jl
sbb
jle
lahf
adc
ds
push
xchg
sti
stos
lea
adc
jo
mov
test
fimull
cmp
mov
lock
push
inc
mov
loop
divps
and
shlb
aam
push
xchg
imul
fmuls
shll
xor
cwtl
movsb
dec
lcall
mov
mov
imul
aas
and
lea
push
fiadds
int3
sbb
jo
ret
sub
xor
inc
mov
sbb
subl
jp
imul
addr16
push
outsb
movsl
into
mov
xchg
pop
aas
rcrb
mov
pushf
xor
cmpsb
xchg
cmp
cwtl
pop
mov
dec
lahf
add
xchg
sub
xchg
mov
js
add
test
imul
cmp
inc
into
dec
hlt
add
mov
icebp
int3
cs
aam
stos
xor
bound
sub
scas
sbb
sub
inc
incl
movsb
movsl
test
int3
cs
shlb
jno
popa
mov
jnp
push
add
je
enter
push
pop
loop
adc
fnstenv
cmpsl
mov
fxch
pop
adc
lds
ja
fs
inc
cvttps2pi
out
add
mov
mov
int
fisubrs
jo
pushf
xchg
hlt
adc
mov
inc
adc
loop
fs
add
xchg
cltd
sub
inc
pop
out
pop
notb
mov
icebp
and
call
mov
adc
xchg
iret
jne
sbb
jle
daa
mov
xchg
popa
cmp
mov
dec
das
mov
nop
es
lret
not
shrb
adc
aam
cmp
mov
cmc
jb
mov
jne
ret
stc
dec
retw
sub
jnp
inc
xor
lcall
xchg
fcmovu
add
jmp
inc
ret
mov
adc
push
jp
jne,pt
sub
out
jle
stos
js
repnz
test
xchg
xor
mov
sbb
insb
dec
xor
sub
xlat
xlat
in
xchg
inc
jb
leave
xchg
xor
loopne
stc
jle
pop
mov
ret
jl
mov
jne
jecxz
icebp
or
push
ds
clc
shlb
in
and
rolb
dec
xchg
cmpsb
jecxz
xchg
and
das
xchg
push
mov
mov
insl
mov
test
xor
test
pushf
jb
ret
jae
push
inc
bound
nop
stc
nop
pop
cmp
xor
mov
test
leave
pop
scas
or
xchg
stos
xchg
shlb
mov
add
iret
and
push
and
sub
nop
and
jp
lcall
repz
xor
push
mov
nop
setl
fildl
rcrl
push
out
loopne
loope
clc
pop
xchg
sbb
sbbl
iret
mov
lock
cmp
std
pop
in
mov
jl
stos
fldt
jg
enter
inc
push
add
dec
in
ljmp
push
xor
and
stos
push
sub
rclb
add
sub
or
mov
out
sbbl
std
mov
adc
push
loope
fisubl
inc
loope
ss
push
mov
jo
sbb
cmp
and
mov
cmp
aas
jmp
add
enter
cwtl
sti
stos
jno
xor
adcb
push
xor
inc
sbb
dec
out
pop
lret
scas
lods
xchg
add
dec
ss
std
ja
xor
mov
fdivrs
push
cmpsb
into
sar
mov
sbb
or
add
fcmove
sbb
or
cltd
or
xor
subb
jge
test
in
xchg
enter
push
xchg
push
xor
pop
xchg
mov
sbb
mov
cwtl
sbb
and
pop
subl
xor
dec
mov
xor
mov
mov
mov
pushf
nop
lret
sub
xchg
in
sbb
jp
out
cld
xchg
movsl
inc
and
fcomp
jle
pop
add
add
addb
stc
cld
fcmovnb
add
and
ss
dec
cmp
mov
and
cmp
loop
mov
jge
and
addr16
push
lock
cli
lds
mov
mov
dec
jg
aas
inc
mov
sub
mov
and
cmpsb
icebp
in
and
pusha
movsb
cmpsl
out
dec
dec
cmpb
mov
leave
shll
xchg
xchg
repnz
fucom
sub
ret
and
add
cmp
dec
mov
rol
jne
mov
xor
xor
xor
or
pop
fisttps
aas
adc
xor
sub
lods
inc
fildl
inc
daa
bound
pop
sub
sti
insl
mov
push
cs
mov
cmp
cs
mov
jge
and
mov
xor
or
pop
mov
add
sub
mov
push
xchg
inc
lods
cmp
xor
pusha
jmp
pop
mov
mov
pop
push
pop
xor
sub
pop
lods
cmp
into
and
in
mov
mov
xchg
adc
push
cli
call
or
xor
and
out
gs
pop
icebp
andb
je
add
jecxz
insb
sti
clc
mov
sbb
or
xchg
lea
maxps
push
gs
pop
rorb
mov
aas
push
push
lret
mov
or
mov
imul
or
inc
or
out
scas
idivl
jp
or
xchg
inc
sub
cmp
cmp
ror
pop
mov
inc
outsl
xchg
or
popa
adc
repnz
sti
je
xchg
xchg
add
ja
int3
lret
cmp
push
push
jmp
pop
scas
notl
or
xor
cwtl
and
dec
jge
xchg
lock
sub
in
dec
rorb
pop
inc
les
outsb
sti
mov
aaa
icebp
popa
cli
adc
mov
sbb
add
je
je
cmpsl
fistl
jl
push
mov
mov
sub
jnp
cmp
fwait
jae
lea
sbb
ljmp
pusha
ss
and
xor
inc
sub
cmp
jne
leave
jp
jnp
pop
in
lahf
cmp
xor
stc
cld
jnp
jge
push
push
pop
test
cli
bound
sub
fisttps
sahf
fisubrs
scas
jle
popa
ficomps
or
lds
imul
jnp
mov
aad
mov
es
dec
xchg
sbb
loop
cld
sub
mov
call
insb
outsl
hlt
sbb
pop
jl
mov
add
aas
pop
mov
fsubr
in
loope
mov
out
and
mov
das
int
push
or
xchg
xor
test
push
push
shrl
out
mov
mov
fnstcw
jl
movhlps
sbb
fs
lds
bound
xchg
cmp
xor
fmull
mov
xchg
fstpl
icebp
and
cmp
xchg
adc
push
lret
push
lods
mov
addb
fdivrs
push
sbb
popa
movl
cmp
sub
jecxz
add
ficompl
in
push
mov
rorb
xor
and
and
rorl
inc
xchg
cmpl
cmc
fidivrl
push
inc
shrl
popa
or
sub
out
mov
pop
vunpcklps
test
sub
imulb
lds
add
sub
and
mov
in
cwtl
insl
dec
xorl
movl
stos
xor
psrld
pop
cmp
push
lret
cli
xchg
add
cmp
