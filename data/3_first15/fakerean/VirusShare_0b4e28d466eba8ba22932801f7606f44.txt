add
mov
lea
lea
xor
xor
lea
lea
lea
lea
mov
not
not
shrl
jmp
mov
lea
mov
not
lea
and
ror
add
lea
not
mov
cmp
jmp
not
xor
xchg
neg
lea
mov
add
xor
xchg
mov
lea
push
xchg
jmp
mov
and
add
lea
xchg
jmp
movl
xor
xor
mov
not
lea
rol
xor
mov
rol
jmp
mov
mov
ror
mov
rcl
xor
and
ror
mov
call
lea
jmp
lea
not
rcr
xor
mov
jmp
not
adc
lea
mov
xchg
add
adc
neg
xchg
rol
neg
lea
not
mov
jmp
xor
mov
rcr
xchg
mov
shl
shl
xor
neg
mov
xor
xor
mov
jmp
add
lea
call
mov
rcl
jmp
push
rcr
neg
mov
ror
lea
and
mov
mov
lea
push
xor
ror
lea
lea
jmp
not
lea
neg
xor
neg
mov
mov
jmp
not
neg
xor
jmp
push
xchg
rol
rcr
xchg
jmp
pushl
xor
rcr
neg
pushl
xchg
rcl
mov
jmp
lea
mov
rcr
rol
cmp
je
rol
lea
xor
mov
lea
and
mov
lea
mov
jmp
lea
xor
not
xor
mov
lea
jmp
not
xchg
adc
adc
xor
xor
lea
jmp
mov
adc
xor
xor
xor
xor
lea
neg
lea
shl
rol
jmp
call
push
and
xor
lea
pop
jmp
mov
mov
not
add
mov
xor
mov
xor
mov
shl
rcl
lea
mov
xchg
decl
jne
xor
xor
mov
xchg
xor
xor
xchg
mov
not
jmp
push
mov
sub
push
push
push
lea
neg
mov
rol
adc
jmp
xor
call
neg
mov
mov
xor
jmp
xchg
mov
shl
mov
mov
adc
rcl
movl
neg
shr
jmp
xchg
mov
xor
xor
mov
and
mov
neg
neg
mov
popl
xor
jmp
xchg
not
xor
ror
not
mov
jmp
push
lea
mov
neg
xor
mov
not
jmp
mov
mov
neg
mov
mov
lea
mov
xor
and
mov
rcr
jmp
xchg
neg
lea
xchg
xor
lea
rol
mov
xor
jmp
xor
rol
push
call
lea
xchg
jmp
je
mov
xor
lea
lea
mov
or
je
rcr
lea
xchg
jmp
xor
xor
lea
xor
mov
lea
jmp
mov
mov
push
lea
mov
shl
not
jmp
mov
mov
neg
neg
adc
ret
rcr
add
xor
xor
xor
mov
jmp
dec
setg
call
cmp
mov
les
pop
push
push
add
push
sub
pop
push
jae
jp
adcb
leave
adc
and
inc
clc
mov
mov
xor
stc
pushf
add
push
bound
ret
mov
lahf
out
repz
idivb
push
jecxz
call
aaa
sarl
fwait
mov
cmc
mov
loopne
jbe
push
xor
add
and
fcmovnbe
or
push
les
sbb
mov
mov
dec
daa
jmp
mov
stc
arpl
iret
scas
pop
les
pop
fnsave
xchg
sub
mov
sub
mov
adc
frstpm(287
sarl
push
bound
test
and
mov
mov
xchg
sub
dec
jnp
fistpl
push
insb
dec
jns
push
pop
mov
dec
dec
inc
jecxz
cmp
push
imul
pushf
and
cmp
push
std
cli
jge
xchg
sarl
scas
cmp
cs
cmp
lret
mov
adc
pop
mov
je
pop
ficoms
sub
bound
pop
call
push
loopne
push
je
cli
inc
fldt
mov
push
pop
loope
out
cmp
push
mov
out
xorl
pop
shr
sbb
dec
fildl
or
les
xchg
xor
jns
flds
cmp
push
bound
leave
negl
mov
dec
jl
fstpt
sbb
dec
mov
dec
test
in
dec
insb
pop
fisttpl
imul
adc
mov
mov
ja
or
les
push
les
pop
mov
dec
mov
cs
mov
pushf
cmpsl
dec
inc
jmp
jg
or
les
pop
mov
fstpt
fstpt
clc
push
cmc
ds
lods
mov
sahf
adc
xchg
jb
mov
mov
mov
or
xchg
stos
sub
rolb
clc
or
inc
mov
inc
clc
jl
lods
xor
arpl
lods
mov
and
repnz
call
aaa
cwtl
and
dec
mov
frstor
or
movsb
adc
cmp
mov
jno
inc
lods
cmp
jae
fadds
mov
adc
cmp
cmp
cmp
inc
clc
aad
in
sahf
mov
push
push
mov
inc
jne
bswap
test
mov
ljmp
into
cvtps2pi
xor
je
or
mov
xchg
pop
movb
stos
pop
jae
jmp
les
test
sti
jo
ss
xchg
mov
mov
inc
clc
push
jmp
push
push
adc
lea
mov
push
mov
sub
jecxz
push
mov
push
jmp
add
pop
inc
cmp
inc
mov
jo
add
scas
mov
jae
pop
xor
pop
mov
cld
xchg
outsl
add
mov
adc
mov
lea
pop
lret
push
test
mov
mov
jp
and
mov
xor
mov
nop
pop
inc
mov
mov
inc
ljmp
lods
sub
movsl
inc
clc
mov
lea
mov
lods
rcrb
cmp
adc
loopne
adc
call
dec
js
in
xor
mov
pop
insl
cmp
mov
inc
sbb
cmpsb
pop
inc
sub
in
int3
out
cmc
cli
xchg
cmp
pop
mov
pop
dec
pop
mov
test
hlt
daa
xor
inc
lods
cmp
mov
dec
pop
and
movsl
sbb
mov
lods
or
lods
dec
adc
les
test
inc
mov
mov
int
stos
test
jno
adc
fucomi
jbe
mov
sub
mov
dec
pop
iret
mov
stos
test
jae
adc
mov
jmp
shrl
loop
xor
mov
add
pop
mov
stos
test
scas
pop
cmp
xchg
stos
test
divl
mov
cmc
mov
xorb
xchg
scas
pop
dec
pop
mov
cmp
int
in
scas
pop
dec
pop
mov
mov
mov
inc
test
add
add
icebp
push
clc
mov
call
mov
int3
iret
mov
fwait
mov
mov
mov
jp
cmp
push
jae
sbb
mov
addb
test
mov
pop
xor
fcmovnb
sub
mov
pop
push
jae
loopne
lea
mov
std
aam
mov
sbb
jae
loopne
mov
mov
icebp
mov
mov
inc
xchg
stos
jle
mov
mov
nop
and
or
arpl
call
lea
cmp
inc
dec
pop
cmpsb
xor
outsb
sbb
xor
jne
xchg
rolb
xchg
add
aaa
call
int
xor
inc
clc
mov
dec
jae
in
push
mov
cs
outsb
notl
sbb
sub
repz
lret
inc
jb
scas
addr16
pop
mov
call
ljmp
into
loopne
repz
pop
testl
jmp
lock
test
cmpb
dec
pop
mov
jnp
cld
lods
pop
cmp
inc
mov
mov
push
clc
shll
clc
mov
jns
loopne
dec
adc
inc
clc
cmp
inc
test
add
pop
or
push
mov
sahf
sbb
jbe
mov
call
test
mul
inc
jnp
call
loop
mov
jge
shll
jae
call
int
jae
inc
clc
mov
dec
jae
in
insl
divb
sub
fldcw
cmp
push
adc
pop
cmp
mov
pop
lahf
call
dec
aas
mov
inc
clc
mov
jo
add
inc
clc
mov
xor
cmp
push
push
mov
lods
dec
cwtl
fld1
sub
dec
popf
dec
pop
arpl
jbe
mov
int
mov
mov
jg
stos
pushf
inc
jae
rorl
loopne
sbb
mov
cmp
daa
xor
addb
jg
fstpl
mov
mov
mov
inc
divl
push
stc
repz
pop
inc
in
push
push
clc
mov
leave
cmp
movsb
dec
push
shr
mov
xchg
lret
rolb
xor
rorl
xlat
jno
lret
and
outsl
stc
in
push
mov
mov
ret
push
or
pushl
jecxz
cli
stos
in
jl
push
loopne
in
stos
sbb
mov
imulb
jl
int3
loopne
in
adc
loope
mov
adc
int3
mov
dec
jne
mov
addb
push
mov
lods
push
sbb
inc
sahf
mov
stos
enter
roll
lods
jecxz
mov
mov
clc
cltd
cmp
mov
dec
insb
mov
std
xor
jae
das
in
mov
inc
in
add
in
sarb
test
mov
fwait
add
mov
mov
ja
xchg
lcall
jecxz
and
icebp
push
imul
outsl
cmp
cmpsl
lret
stos
outsb
dec
stc
out
jecxz
add
mov
push
pop
adc
pushf
xor
sub
test
inc
push
call
fisubrl
jno
add
dec
dec
notl
jo
ffree
jl
dec
jmpw
cmpsl
and
mov
cli
xor
xchg
dec
int
sbb
clc
ljmp
add
xlat
insb
jnp
mov
jl
sub
mov
iret
lret
ds
lcall
hlt
mov
mov
push
push
xor
mov
xchg
mov
repz
mov
lcall
mov
andb
mov
test
dec
dec
lret
mov
enter
add
inc
dec
aam
fsubl
enter
rcrl
gs
lock
je
popf
jl
divl
out
and
popf
inc
lret
jae
sbb
adc
mov
mov
sub
testb
mov
pop
jno
enter
adc
movb
int
and
ljmp
pop
jmp
mov
imul
aaa
and
repnz
arpl
jecxz
lods
scas
aam
dec
hlt
add
cli
lcall
outsb
dec
mov
and
push
mov
and
adc
inc
cmp
mov
mov
cmpsl
int3
adc
mov
dec
mov
sub
out
push
adc
jmp
hlt
xchg
sub
in
repz
scas
dec
pop
push
sub
mov
add
pop
std
inc
repnz
lea
mov
lea
mov
shll
loopne
cld
addl
rol
mov
add
lcall
inc
lcall
filds
in
xchg
mov
int3
xor
add
dec
shrl
icebp
xor
mov
jge
in
inc
aaa
xchg
dec
add
dec
jge
jb
bound
fcomps
adc
xchg
fwait
dec
loopne
fwait
xchg
push
push
outsb
dec
adc
repz
dec
in
mov
push
and
movl
mov
pop
jmp
adc
jnp
clc
sar
fldl2t
cs
push
jp
mov
hlt
popa
jge
rcrb
sti
shrl
xor
mov
adc
or
pop
pop
and
mov
cmpl
mov
mov
mov
jae
jbe
ret
lcall
lcall
scas
mov
stc
mov
lock
jmp
sahf
dec
mov
out
mov
mov
cltd
clc
xchg
in
cli
lods
test
daa
push
xor
enter
dec
push
xor
fldcw
jno
push
mov
sub
mov
std
jnp
lret
insl
mov
xor
test
pop
lea
jbe
mov
push
jnp
cmp
jl
cmc
dec
shlb
test
cmpsb
lods
mull
xor
fwait
and
push
inc
and
test
push
push
imul
rcl
sbb
stos
jbe
cmp
add
or
and
xor
scas
xor
jp
mov
stc
push
call
loopne
adc
jb
loopne
pop
cld
jo
mov
outsb
dec
pop
and
arpl
clc
in
jnp
and
mov
lods
sti
mov
mov
jge
shl
in
fwait
stos
bswap
loop
pop
adc
scas
xor
jmp
fldt
push
cmp
dec
lret
mov
aam
jg
stos
sti
add
ffreep
aas
dec
xlat
or
in
or
mov
mov
das
add
ljmp
repz
into
adc
popa
jae
mov
inc
dec
aas
pop
pop
mov
xor
push
movsl
cmp
imul
mov
in
adc
jae
les
adc
sub
adc
shl
xor
xchg
mov
push
scas
adc
dec
jbe
or
jne
xor
cwtl
mov
push
and
pusha
dec
adc
lret
test
add
lret
pop
push
fdivrl
pop
cmpsl
adc
inc
push
adc
cmpsb
xchg
std
adc
rorb
movsl
push
jge
cmpb
add
mov
add
and
rolb
mov
loope
stos
mov
out
or
lretw
push
jae
lods
xorl
pop
sbb
sbb
push
mov
mov
sti
arpl
insl
sub
and
mov
sbb
xor
push
pop
aad
xchg
sarl
add
push
pop
push
lock
push
mov
loopne
imul
out
enter
test
lds
lret
fs
jg
outsb
rorl
hlt
out
int
xlat
jmp
std
ficomps
cmp
lock
xlat
cmpb
ds
dec
bound
mov
imul
out
lret
jp
xchg
test
movsl
mov
inc
lea
dec
fbld
push
jg
orl
jne
xorb
jmp
jb
mov
dec
rcrl
push
push
cmp
add
pop
or
gs
xchg
or
mov
cmp
outsl
jecxz
lret
fisttpl
out
and
push
adc
mov
xor
lret
and
dec
and
daa
sti
cmp
dec
lret
lea
pop
xor
push
ficoml
mov
incl
cltd
icebp
repnz
mov
loopne
sub
in
mov
mov
and
dec
lea
jecxz
add
decl
dec
leave
jmp
mov
int3
clc
movsb
insl
popl
jnp
inc
pop
push
mov
cmp
fsubrs
pop
dec
pop
test
loope
mov
jne
mov
insb
repz
add
inc
lahf
mov
imul
cmp
and
adc
adc
iret
out
sti
mov
je
cmp
scas
inc
jecxz
sahf
pop
fwait
in
cmp
mov
imul
dec
fimuls
dec
xor
jnp
add
push
sub
in
or
mov
mov
push
les
xchg
mov
ret
cmp
sbb
shlb
and
test
addr16
push
rorb
pushf
outsl
sarb
in
add
aaa
mov
mov
cmp
cmp
lret
stc
mov
je
data16
dec
inc
mov
add
out
pusha
scas
jb
mov
ss
sahf
lret
mov
inc
push
cmpsl
push
repz
mov
xchg
sahf
fcompl
ljmp
fdivl
inc
out
xor
mov
mov
fimull
outsb
mov
dec
les
mov
mov
add
ds
mov
fs
cs
test
in
fcoms
dec
loop
jmp
push
scas
data16
aaa
popa
mov
or
mov
add
or
inc
rclb
enter
sub
nop
int
loop
xor
push
inc
cmpsb
and
cmp
hlt
int
adc
cltd
jno
test
scas
mov
test
and
test
jge
movsl
cmp
or
cmp
test
divl
jl
dec
lea
mov
int3
aam
test
cli
daa
out
adc
add
scas
mov
push
test
pop
ja
mov
aad
mov
dec
push
icebp
xor
iret
sub
enter
push
mov
je
dec
int3
mov
jmp
or
les
add
xchg
dec
sbb
call
mov
adc
mov
ja
call
inc
fdivs
pushf
cld
stc
cs
out
pop
sbb
lret
movsb
lds
mov
and
and
faddl
jae
fstl
js
xor
xor
push
cwtl
pop
or
dec
adc
mov
int
ja
adc
mov
mov
mov
mov
orb
aaa
fisubrs
leave
scas
adc
into
dec
mov
adc
inc
xchg
stc
loopne
mov
xchg
xchg
push
inc
scas
fstpt
ja
retw
mov
fnstcw
xchg
cmp
push
addb
movsb
pop
add
lods
pushf
mov
xchg
movsl
movsl
dec
mov
popf
or
lock
in
jo
shll
repnz
sub
andl
and
stc
xchg
outsb
sub
sub
test
andl
cli
sub
bound
xchg
pop
ficomps
stc
hlt
lods
mov
inc
and
adc
inc
dec
lret
or
jmp
stos
fmull
std
int
dec
pop
inc
adc
mov
scas
add
testl
jecxz
adc
inc
mov
xchg
jle
push
xchg
sbb
jo
jge
aad
mov
sub
shr
out
imul
je
insl
xchg
mov
jp
in
jne
test
stos
inc
mov
cltd
leave
dec
aam
call
lods
fimuls
rolb
aad
mov
js
cs
or
add
cmp
fcomps
pop
mov
pop
insb
push
ret
scas
lret
int3
mov
push
cmc
mov
pop
roll
xchg
lods
add
in
dec
in
shrb
imul
push
pop
add
ljmp
push
dec
fisubl
adc
pop
dec
sbb
mov
int3
scas
cltd
sub
mov
lods
jb
and
adc
mov
mov
adc
lock
pop
sbb
into
jno
lods
andb
outsl
std
arpl
adc
lods
sbb
jne
test
add
inc
or
repnz
ret
test
cmc
out
fisubrl
push
add
add
icebp
mov
mov
sub
mov
pop
lcall
sti
cltd
pop
ret
xchg
cmc
stos
jnp
jge
ljmp
ror
add
out
jno
mov
das
fwait
sbb
imul
xchg
inc
out
lcall
cmp
stos
test
fwait
dec
pop
push
adc
mov
push
sbb
out
bound
jmp
cmp
scas
adc
imul
cmp
lahf
sarl
adc
shll
insl
je,pn
mov
inc
mov
pop
push
stc
jg
into
cmc
mov
decb
lcall
loope
xor
jae
push
fadd
pop
add
cmp
es
mov
add
lcall
or
fcmovne
mov
test
sbbb
stos
inc
outsb
in
icebp
jmp
aas
xchg
dec
push
mov
fists
fbstp
jecxz
jno
sub
add
xor
dec
insl
daa
aaa
divl
int
cmp
inc
cmp
out
jge
jbe
or
je
andl
or
out
dec
rorl
idiv
mov
sub
mov
jl
xchg
mov
mov
fnstcw
pop
and
lea
daa
mov
pop
mov
lods
loope
dec
jmp
mov
mov
push
adc
mov
stos
arpl
stos
add
ret
in
cld
cmp
ja,pt
sub
cmp
mov
ret
inc
xchg
inc
shlb
jmp
and
pusha
adc
decl
dec
loope
test
ja
mov
lret
inc
in
fiaddl
cmp
dec
gs
sti
rol
mov
nop
or
adcb
dec
push
and
mov
test
fsub
ljmp
and
lret
pop
loope
popa
mov
sub
pop
mov
sub
adc
xor
mov
fdivs
adc
mov
call
orl
pop
lret
pushf
rol
sahf
mov
pusha
pusha
imul
xor
daa
mov
add
fs
cltd
arpl
fimull
or
jle
mov
adc
bound
inc
or
js
ljmp
int
sar
insb
inc
pop
mov
jo
fcomps
movb
lock
cmp
mov
sbb
push
mov
cmpsb
xchg
xorl
loope
scas
stos
shll
cld
xchg
int3
dec
mov
jae
sahf
jb
orb
pop
add
sub
push
out
and
add
mov
mov
insl
js
xchg
pop
shll
push
mov
jb
xchg
stc
gs
loop
mov
or
stos
jno
or
cmp
dec
add
ja
sub
sub
push
mov
and
test
roll
mov
jbe
push
pusha
lds
mov
divb
lods
xor
dec
outsl
cmp
stc
icebp
dec
jmp
add
subl
inc
mov
xchg
rcrb
jb
jb
clc
mov
data16
jge
sub
lods
adc
dec
std
xor
inc
sti
pop
push
jne
cmp
idivl
jmp
dec
add
cmp
mov
call
xorb
les
xor
pusha
or
ljmp
insb
pop
js
inc
add
test
add
in
testl
jb
pusha
push
iret
subb
cltd
push
insb
pop
out
push
push
push
xchg
ret
aaa
imul
and
cmp
pop
nop
mov
cmp
test
jge
and
hlt
and
adc
push
pop
or
pop
imul
movsl
sti
mov
cmpsb
lods
adc
ss
cltd
shr
add
push
and
jns
jae
mov
lahf
and
cmp
dec
inc
popa
and
push
adc
movsl
mov
push
repnz
das
add
dec
add
xchg
push
cmp
cmpsb
sarb
mov
je
in
push
sub
ret
je
dec
rcrb
mov
xchg
pop
xchg
out
mov
dec
fs
imul
mov
ss
dec
hlt
push
gs
test
les
std
mov
testb
sti
lds
leave
test
loope
jmp
sub
fwait
sbb
shl
add
pusha
mov
repnz
xlat
cmpsl
aas
out
adc
inc
xchg
ret
jae
jle
mov
inc
nop
mov
push
and
or
mov
cli
jb
jl
pusha
adc
sub
aad
mov
push
and
popl
cli
jle
lret
sbb
aas
roll
pop
iret
add
cmp
push
cmp
out
loopne
leave
data16
cmc
movb
imul
jne
scas
push
icebp
pop
cmp
pop
push
mov
cmp
mov
mov
fwait
test
fisubrs
mov
xor
xor
lret
jg
andb
movsb
cmp
in
ror
lret
outsb
pushf
cmp
mov
and
fst
xchg
mov
cld
movb
imul
jmp
inc
push
aad
data16
popa
pop
and
xor
adc
ljmp
jnp
ret
into
cmpsl
int
jmp
jecxz
xchg
mov
dec
dec
dec
cli
sarl
lock
je
jb
cmp
sub
inc
mov
int3
mov
adc
push
push
frstor
fdivp
inc
xchg
js
lods
adc
sbb
jp
andb
jae
add
in
mov
andb
and
lcall
pop
add
scas
lret
jb
pop
test
stc
push
loopne
mov
jbe
gs
out
sti
sti
repnz
xchg
and
add
scas
div
cli
das
lds
push
ljmp
repz
arpl
jnp
scas
cmp
xor
in
jb
aam
lcall
adc
in
pop
rolb
lock
mov
subb
addr16
subb
clc
xor
dec
int
mov
adc
cli
je
dec
jecxz
fdiv
pushf
pop
push
sbb
stos
ret
add
stos
nop
mov
add
out
imul
aaa
lds
fistl
jne
push
mov
xchg
clc
je
push
in
fbstp
mov
sub
or
or
scas
cmp
xorl
outsb
push
hlt
dec
cmp
sub
push
scas
aam
mov
ja
and
pop
fwait
mov
inc
imul
mov
out
xor
mov
and
je
dec
xchg
loop
daa
adc
roll
imul
jg
mov
xlat
clc
addl
hlt
nop
jge
fsts
add
imul
ret
pop
mov
inc
imul
jp
loope
mov
pextrw
lea
hlt
pop
xorl
int3
fisubs
or
cmp
pop
jae
mov
jp
lds
mov
addr16
scas
mov
add
movsl
repz
out
xor
sub
stos
push
in
push
sub
fdivrl
jmp
xchg
addl
out
pop
mov
iret
mov
mov
rclb
shrl
bound
and
lcall
xchg
jns
pop
iret
cmpsl
pop
in
iret
cmp
push
testl
xor
xchg
cmp
movsb
fcomp
fldcw
xor
jmp
sub
jne
push
outsb
fcomip
es
push
mov
mov
int3
out
push
mov
mov
loop
shl
mov
jl
nop
push
mov
or
out
fwait
int3
add
mov
enter
in
sub
add
lret
xchg
xor
int3
mov
mov
mulb
adc
insb
adc
incb
mov
mov
sarb
mov
insl
mov
cltd
shr
adc
js
jmp
adc
and
sub
ljmp
inc
xchg
ret
ja
subb
cltd
and
ljmp
mov
insb
add
dec
jmp
scas
cmp
fistpll
add
nop
or
cld
mov
fcoms
lret
cld
inc
fs
xchg
jg
inc
out
jg
int3
enter
rcll
mov
popf
inc
mov
pop
sahf
fistps
jmp
jp
aas
js
inc
xchg
pop
jbe
adc
xlat
out
rcl
mov
jns
adc
mov
shll
push
sub
mov
inc
jge
out
int3
push
mov
dec
push
mov
arpl
mov
xor
sbb
data16
xchg
fwait
pop
out
mov
fcoml
xchg
incb
dec
push
ret
mov
and
or
lds
pop
push
es
push
xor
dec
xchg
or
jb
imul
test
icebp
negl
cmp
xor
stos
mov
loope
cli
add
hlt
xchg
lock
stos
in
pusha
mov
fdiv
aaa
dec
adc
mov
adc
xchg
add
add
js
imul
fsubrs
test
ret
dec
inc
in
xor
cmp
jnp
cmpsl
pop
mov
pop
xor
in
ret
lahf
xor
mov
out
faddl
xchg
jo
je
enter
sub
pop
hlt
lret
ret
mov
push
cmp
outsb
dec
rclb
push
push
pop
add
mov
ja
in
or
mov
stc
xor
cli
jmp
mov
jl
mov
popa
inc
shr
ljmp
push
pusha
das
imul
xor
pop
adc
mov
cs
clc
push
mov
jno
or
adc
rcl
pop
mov
push
icebp
inc
adc
dec
fdivs
es
sub
loope
sti
dec
nop
jg
xor
into
fs
leave
pop
in
cmp
xor
bnd
jns
adc
xchg
mov
clc
sub
inc
add
add
mov
nop
cwtl
dec
xor
arpl
in
clc
add
jnp
push
fs
js
and
inc
and
push
movsb
push
cmp
cwtl
dec
push
dec
mov
iret
jg
inc
cwtl
cmpsb
test
stc
or
adc
adc
je
jmp
pusha
sub
add
sbb
ja
dec
dec
push
sub
scas
out
sbb
mov
cmp
add
fs
pop
scas
pushl
cmp
stc
inc
add
adc
dec
lods
pushl
roll
aas
and
dec
pop
sbb
add
scas
popf
jle
sahf
mov
or
clc
and
jge
or
stos
mov
xchg
xchg
jp
pop
inc
call
jecxz
test
arpl
aam
mov
or
in
xor
data16
ljmp
ljmp
push
jns
test
dec
push
rcrl
mov
test
mov
mov
stc
inc
or
loope
xlat
mov
cmp
dec
mov
cmc
stc
and
mov
add
inc
fsub
dec
cltd
add
gs
add
add
cmpsl
fnsave
mov
add
or
cs
or
shll
imul
xorb
arpl
jle
shrl
mov
movsl
jns
repz
les
loop
pop
aad
aaa
ret
mov
mov
jns
mov
std
int
mov
cmpsl
add
stos
sub
roll
or
jle
call
daa
mov
pushf
adc
fistps
frstor
sahf
dec
jl
pop
pop
inc
loop
xorl
leave
jp
dec
mov
pop
imul
icebp
dec
or
aam
xchg
iret
and
in
mov
repz
jnp
cmp
mov
insb
xchg
add
faddp
jmp
jl
icebp
mov
inc
mov
inc
or
inc
mov
cmp
sub
mov
arpl
fstpl
cwtl
movsl
mov
mov
pop
adc
xchg
or
mov
in
out
inc
andl
pop
mov
shl
sbb
push
jo
push
aaa
nop
mov
mov
add
sbbb
cmp
add
xor
mov
jmp
rcll
xchg
jb
jae
scas
lock
jmp
pop
xchg
out
movsl
mov
adc
xor
scas
into
lcall
sub
loopne
mov
add
test
mov
mov
aas
mov
jnp
arpl
lods
aad
gs
dec
movsl
pop
aas
pop
lcall
lods
xor
mov
jge
cmp
test
adc
ffreep
add
insl
jno
adc
fsts
test
rol
pop
sahf
cmp
adc
mov
ret
sbb
pop
push
inc
dec
hlt
mov
ret
lret
stc
or
mov
cmp
scas
or
jp
add
add
ljmp
mov
mov
and
lods
mov
shrb
stc
lods
sub
xor
add
jg
push
sbb
les
mov
icebp
sbb
mov
push
inc
mov
push
jg
pop
loope
out
lds
test
mov
sbb
mov
rcrb
ret
mov
inc
fadds
jle
xlat
arpl
icebp
inc
xchg
mov
rcrb
shll
loope
or
dec
daa
xor
pushf
dec
js
imul
dec
xchg
pop
add
mov
mov
cmp
mov
mov
fbld
cmp
mov
sbb
ss
lds
stc
ss
add
daa
dec
add
push
jmp
mov
and
fisttpl
sub
adcb
mov
in
in
scas
out
aad
adc
mov
mov
jp
pop
pop
popf
xchg
testl
stc
int3
fs
fsubl
pop
pop
mov
add
adc
xchg
leave
movsb
popf
jmp
clc
cmc
cmp
jnp
inc
in
test
stos
int
dec
jge
stos
or
mov
sti
cld
xor
adc
push
call
mov
push
test
jae
mov
inc
sarl
test
scas
cmp
xchg
rclb
vpunpckhwd
enter
mov
sbb
mov
and
pop
fmuls
mov
shrl
or
push
xchg
adc
adc
inc
pop
ss
iret
inc
cli
cmp
mov
and
iret
jo
nop
pop
jmp
enter
xor
pop
rcrb
hlt
mov
cmp
cmp
inc
aas
hlt
xor
stos
jno
xchg
neg
push
add
mov
lock
add
mov
test
mov
aam
aas
dec
sbbl
ja
adc
lock
mov
mov
sub
in
and
call
adc
and
xchg
pop
frstor
das
pop
inc
lods
shl
adc
dec
enter
dec
jno
call
inc
add
or
dec
adc
xchg
push
stc
pushf
aad
fs
scas
adc
push
cwtl
cs
outsl
jno
xchg
lar
pushf
add
test
xor
pop
pop
xor
lahf
or
dec
lods
mov
mov
jno
imul
ljmp
pushf
sbb
loope
in
mov
enter
adc
inc
cmpsb
dec
adc
in
aaa
outsb
mov
lds
mov
jo
orl
lds
shrb
cltd
fldt
mov
shrb
mov
pusha
add
ret
inc
or
or
aas
pop
out
lods
es
ljmp
dec
sbb
inc
sbb
dec
addl
dec
adc
mov
imul
xchg
mov
jnp
iret
cmp
enter
cmp
mov
xchg
ds
add
test
adc
ja
xchg
xor
loopne
ret
pushf
pop
ss
int3
mov
dec
dec
push
lock
adc
dec
stc
dec
cld
test
addr16
or
push
arpl
mov
jns
add
rorb
int
ljmp
in
mov
or
cs
adc
and
movsb
test
rorl
scas
sub
mov
dec
pop
xor
mov
inc
lea
iret
and
cli
xor
ljmp
sub
insb
imul
insl
inc
jge
xchg
push
mov
in
mov
sub
push
fmul
push
lcall
push
or
add
test
call
repz
mov
fcomps
fldcw
enter
aaa
add
arpl
outsb
xchg
negl
cli
push
jmp
cmp
inc
push
sub
pop
ljmp
out
cmpsl
popa
push
mov
jnp
scas
sub
jnp
jbe
das
jecxz
in
jle
xor
mov
in
xor
mov
xchg
movsl
scas
iret
cmp
push
or
aad
ret
rcl
jmp
lock
pop
fdivr
in
adc
add
fdivrs
mov
test
pop
mov
ud2
sub
cmp
dec
jb
pusha
push
mov
mov
push
and
sbb
pop
mov
sbb
mov
int3
push
mov
shrl
add
push
xchg
xor
inc
lods
inc
xor
rep
jmp
sti
cmpsl
pop
xor
out
out
test
int
jecxz
jp
es
arpl
vpunpckhwd
rcrl
xor
mov
std
xchg
mov
in
cld
in
in
imulb
pop
or
xchg
adc
dec
add
test
cs
xor
mov
lahf
pusha
xor
jne
jl,pn
insb
jns
in
adc
or
inc
pop
mov
in
jne
adc
add
clc
cmp
push
push
jnp
dec
arpl
lret
addr16
xor
sub
pop
pop
xchg
in
nop
popf
test
lcall
je
mov
fiadds
xlat
xchg
mov
inc
ljmp
lock
mov
test
ficoml
ret
mov
xor
fwait
roll
ficoml
ffreep
jmp
adc
test
loope
out
cwtl
notl
jae
xor
adc
adc
lcall
hlt
pop
lcall
les
add
arpl
lahf
hlt
subl
mov
mov
jne
adc
dec
xlat
sbbb
arpl
out
cmp
adc
dec
in
adc
add
and
push
repnz
pop
sub
add
xchg
mov
or
js
mov
inc
mov
cld
lret
jl
jg
ret
push
mov
push
out
loope
lods
dec
jl
xchg
insb
dec
daa
cli
xor
popf
sub
or
or
jmp
and
jae
sahf
jno
adc
mov
adc
and
or
dec
and
cmp
adc
in
mov
add
jmp
xor
roll
ret
push
pop
popa
pop
mov
loopne
test
mov
arpl
pop
or
enter
cmp
sub
xor
sbb
inc
xor
lret
xchg
mov
ja
pushf
push
ficoml
sbb
cmp
mov
push
jge
je
lea
repnz
popa
adc
notl
mov
scas
mov
inc
lret
lods
pusha
jmp
inc
andl
push
jne
cmc
dec
cld
or
stos
mov
call
jae,pt
cmp
repz
cmp
std
pop
add
mov
mov
jo
lds
aad
and
aad
sbb
popf
mov
loopne
sbb
loop
sti
xchg
rcrb
cmp
loop
add
push
push
fs
iret
or
mov
cmp
icebp
sets
scas
xorb
adc
int
mov
in
divl
adcb
add
sbb
xor
testl
mov
cli
pop
sbb
stos
push
cwtl
lods
rcll
out
cld
dec
inc
cld
hlt
fimuls
leave
adc
xor
mov
mov
mov
pop
pop
fstpl
movsb
outsb
sahf
jae
hlt
or
mov
out
movsl
push
fmul
enter
jo
sarl
and
mov
adc
sub
jno
enter
mov
xchg
jns
repnz
adc
es
fmuls
out
push
pop
dec
push
sub
xchg
iret
les
pop
test
dec
and
arpl
fs
pop
mov
scas
loop
test
std
mov
in
dec
mov
add
mov
jmp
fcomps
pop
test
ds
rcrb
mov
ja
fdivp
es
sar
push
cli
sbb
imul
movsl
into
or
test
inc
and
imull
lods
jb
loope
xor
jmp
dec
sub
adc
xor
lods
or
push
cmp
adc
xchg
sbb
fcoms
jae
adc
fsubrl
mov
inc
mov
xchg
add
jge
inc
and
mov
call
mov
cmpl
leave
jge
lret
lds
imul
pusha
in
dec
add
xor
sbb
mov
andl
push
mov
xchg
pop
shrb
mov
adc
out
mov
cmp
add
lcall
lcall
cmp
and
jecxz
ficomps
pop
jno
mov
xor
mov
pop
sbb
fadds
xor
push
imul
out
adc
fwait
and
or
clc
arpl
stos
mov
insl
mov
sub
ljmp
mov
dec
test
fs
add
pop
stos
std
sub
xor
mov
push
mov
mov
cltd
movsb
push
aam
dec
dec
stc
lret
insb
add
and
movsb
and
repz
push
ds
xor
arpl
test
ljmp
sub
xchg
xlat
aam
pop
pop
ds
push
std
std
xor
inc
test
inc
clc
roll
pop
lods
jnp
roll
mov
sti
popa
mov
xlat
jge
pop
in
cli
pop
or
xor
jnp
xchg
popa
fildll
clc
mov
xchg
sub
xchg
and
add
adc
in
jno
adc
ljmp
xchg
push
mov
out
ret
xchg
sbb
shlb
mov
mov
jp
cmp
pop
jo
popa
adc
stc
and
data16
sbb
xchg
adc
adcb
add
adc
push
pop
inc
cmp
add
repnz
adc
aaa
push
out
pop
inc
lock
pusha
mov
cmpl
inc
mov
dec
pushl
and
push
out
fsubrl
jg
sbb
sbb
fldt
push
fmuls
jecxz
xor
dec
std
iret
icebp
xor
push
adc
or
push
int
rclb
cmpsb
fnstsw
push
test
test
push
jae
add
xchg
mov
in
adc
pop
out
cmp
ja
sarb
inc
hlt
ss
pop
jp
fs
int
loope
xchg
fwait
in
clc
rcl
popa
mov
icebp
xchg
mov
mov
cwtl
dec
add
sub
jo
lods
aam
jmp
pop
mov
fldl2e
mov
adc
int
loopne
in
loopne
aaa
jmp
data16
fmul
loopne
cmc
fcoml
sub
adc
test
int
sub
jmp
or
repz
int3
repnz
dec
cmc
sahf
aad
mov
mov
cwtl
aam
mov
stc
inc
jo
jp
cmp
add
and
int3
push
enter
xchg
icebp
push
mov
test
loope
push
call
adc
sbb
ljmp
mov
xlat
push
adc
ljmp
enter
call
mov
pop
repz
jle
mov
mov
mov
xor
lea
adc
add
inc
shll
loope
mov
lock
adc
sar
cmp
and
fs
inc
popf
rcll
call
ljmp
test
pop
add
mov
adc
aaa
cld
push
in
std
and
xchg
cmpsl
fbstp
ljmp
add
out
filds
add
scas
lret
xchg
rorl
jl
pop
shl
sbb
aad
push
in
jl
mov
movsl
dec
stos
push
mov
jmp
jns
std
add
adc
mov
stc
and
or
orl
mov
add
and
ja
inc
cmp
les
mov
loope
mov
mov
imul
pop
pop
inc
dec
ljmp
int3
inc
dec
mov
imul
test
iret
cmp
cmp
loope
xor
int
lock
pop
mov
or
js
lret
dec
push
lea
sti
mov
mov
jecxz
jno
add
test
decb
bound
lock
inc
mov
cwtl
lret
inc
fadd
rolb
lret
xchg
call
icebp
cld
jbe
popf
xor
pop
cmp
and
mov
cld
sbb
leave
inc
xchg
cmp
and
lods
out
push
out
xchg
push
push
in
or
add
mov
pop
lock
jmp
sti
mov
je
dec
divl
cs
mov
inc
lock
mov
inc
adc
das
jp
insl
ljmp
ljmp
cwtl
pop
mov
and
lret
push
stc
in
sti
jae
sub
arpl
mul
cmp
imul
lret
cmp
mov
cli
xor
xchg
std
dec
add
jo
xchg
jg
adc
clc
in
bound
adc
out
and
in
mov
out
cmp
call
mov
rcl
mov
add
mov
pop
sub
or
decb
mov
cmpsl
jne
mov
push
add
cld
inc
adc
lods
fimull
xor
lret
sbb
add
data16
lods
mov
jecxz
mov
jbe
test
pop
xlat
fdivs
and
ds
dec
xor
mov
sbb
leave
int
stos
xor
cmp
dec
dec
jecxz
mov
aas
mov
jle
xchg
int
lret
fiadds
or
sarw
rcr
jb
mov
xchg
subb
jecxz
dec
ret
mov
xor
cmp
in
loope
loope
xor
jo
aas
dec
push
and
std
mov
jl
fs
lods
add
jl
mov
fwait
roll
sbb
xchg
jmp
push
cmp
mov
pusha
mov
ja
xchg
adc
ret
or
lods
push
adc
es
sub
jnp
scas
cli
pusha
cmp
pop
or
sti
testb
mov
cmpb
in
insl
lods
inc
mov
pushf
sti
xlat
sub
ret
cmp
mov
push
jle
cmp
and
cmp
hlt
sbb
sbb
or
push
jo
jmp
ror
or
stos
icebp
push
clc
fldt
subb
fs
xorb
js
pop
sldt
iret
fstps
out
push
scas
mov
out
cmpsb
mov
mov
sbb
jecxz
xlat
push
out
mov
int
push
out
popa
mov
dec
mov
mov
std
push
jne
and
cmp
es
mov
mov
jae
jno
add
je
in
dec
xchg
xor
mov
dec
ss
testb
sub
push
int3
jecxz
out
jmp
cmc
in
aam
dec
pop
mov
dec
add
cli
test
sub
mov
push
pop
jne
fldl
push
inc
jb
insb
mov
movb
push
out
imulb
mov
in
in
xor
cs
orl
mov
jno
sbb
and
lret
iret
lods
jo
imul
and
or
das
add
std
and
adc
shlb
sub
cmc
xchg
std
inc
pop
mov
and
repnz
mov
mov
fadds
jo
dec
cld
add
das
adc
mov
cwtl
shll
lret
mov
fildl
push
movsl
xlat
dec
loopne
icebp
lock
sbb
mov
inc
sub
imul
in
jne
andb
rolb
hlt
lock
rorb
dec
or
pushf
out
adc
ret
int
and
in
push
lds
insb
pop
pop
xorb
sti
outsl
movsb
sar
pop
clc
sub
and
mov
xchg
cmp
lods
jns
rcr
cmpsl
jb
test
jo
and
adc
out
test
mov
xchg
test
mov
sub
cld
loopne
xchg
or
test
cmp
testb
push
stc
push
loope,pn
push
addr16
mov
mov
pop
cli
aaa
scas
imul
jnp
sub
idivb
loopne
std
adc
inc
and
dec
cmp
repnz
cmc
out
dec
add
push
addr16
xorb
div
je
in
sbbl
mov
call
push
fildll
dec
jnp
in
jecxz
adcb
shll
inc
mov
mov
pusha
and
lods
lret
push
aam
inc
outsb
mov
clc
push
and
push
sarl
jnp
mov
call
jge
add
insl
lea
je
cs
std
repnz
outsb
cmp
ret
xchg
into
mov
mov
into
mov
or
inc
jg
outsb
fsts
gs
push
jbe
xchg
loop
or
lods
leave
jle
xchg
cs
loope
inc
xchg
aad
xor
xchg
mov
mov
in
fwait
jp
nop
adcl
pop
mov
add
lcall
sbb
les
adc
bnd
xchg
fwait
stc
dec
jmp
fmull
test
cmp
std
cmp
mov
call
mov
inc
cld
pop
pushf
lahf
mov
sarb
int
hlt
and
addr16
mov
arpl
out
mov
jmp
out
mov
dec
add
ret
xchg
ret
mov
bound
xchg
push
cli
mov
pop
cmp
ljmp
mov
jmp
add
mov
lods
bnd
jbe
inc
jge
mov
inc
repz
scas
icebp
jmp
cltd
dec
dec
or
cmpsl
jo
mov
xor
aad
orl
outsb
sub
and
jmp
sahf
pop
hlt
mov
xchg
mov
cli
xchg
mov
divb
stos
jle
int
pop
lods
es
sti
adc
fptan
push
repnz
sbb
mull
push
and
test
arpl
or
adc
gs
mov
jle
mov
lret
ljmp
pop
lcall
push
cwtl
fsubrl
pop
scas
jo
xor
mov
fisttpl
mov
into
in
popa
test
mov
push
mov
sbb
xchg
imulb
adc
imul
jmp
iret
ds
imul
push
push
test
mov
mov
insb
and
repz
xor
xchg
push
xlat
mov
mov
push
fsubs
stos
sub
pop
into
mov
adc
xor
aam
pushf
cmp
cmp
hlt
jmp
adc
sahf
mov
mov
mov
inc
fidivrs
enter
add
nop
dec
xchg
push
negl
int3
dec
mov
out
scas
xchg
xor
adc
dec
daa
sbb
lock
add
inc
dec
mov
mov
sub
mov
out
cmp
mov
mov
inc
aas
xchg
dec
pop
cmpsb
lods
adc
pop
pop
cltd
xor
cmp
and
scas
popa
push
jl
sub
rcrl
inc
jp
jne
loope
xchg
mov
cmp
add
imul
stos
in
inc
test
shl
adc
pop
out
out
mov
jnp
into
xor
add
fstpl
adc
je
neg
addr16
or
dec
fstpt
or
and
fs
gs
mov
ror
fsubl
in
cwtl
mov
in
dec
inc
hlt
lret
ret
and
sbb
lcall
hlt
andb
mov
lods
mov
push
fcomi
jns
xor
shll
lahf
add
nop
int3
xlat
fdivrs
mov
call
das
lret
shrb
and
xchg
fisttpl
ret
mov
aas
mov
adc
bound
mov
cmp
xchg
jbe
and
mov
jbe
cli
cmpsb
add
ror
dec
add
and
mov
mov
dec
imul
fucomi
fucomip
push
movsb
movsl
out
hlt
add
clc
sbb
dec
aas
js
lret
inc
pop
out
hlt
sbb
and
mov
sbb
pop
add
jns
xor
mov
mov
cmpsl
in
add
nop
or
sbb
roll
adc
lret
stos
imul
xchg
shll
jbe
cmp
and
mov
push
xor
mov
pop
and
scas
fldt
cltd
xor
xchg
ja
add
jnp
mov
xor
lret
mov
and
sbb
lcall
hlt
pop
gs
and
inc
push
push
xor
mov
inc
cmp
jns
xor
or
mov
shl
in
add
dec
xlat
pop
cli
adc
int3
xchg
mov
lock
pop
or
sub
push
ds
pop
enter
push
push
cltd
movsb
iret
imulb
mov
cmp
icebp
notb
xor
mov
repnz
mov
mov
sub
lods
fnstcw
mov
sbb
xor
or
shll
add
mov
and
jecxz
sbb
enter
mov
xor
or
daa
cmpsb
jmp
push
mov
mov
mov
cmp
push
push
hlt
insb
push
sbb
inc
addr16
mov
jp
lods
mov
aam
add
mov
clc
mov
stos
aas
test
push
sub
and
daa
out
clc
jae
daa
xchg
aam
shrb
or
jo
cmpsl
push
mov
push
xchg
fcompl
cmp
mov
fprem1
push
adc
mov
jmp
call
ss
dec
cmc
lods
pushf
lcall
test
mov
test
outsl
xor
fistpll
fistpll
pop
adc
lret
pop
push
inc
mov
jo
int3
dec
cwtl
jecxz
sub
push
and
movsb
in
mov
movsb
and
imul
lock
leave
movsb
xlat
push
jge
mov
push
mulb
stos
push
sahf
mov
push
jbe
or
repnz
jo
fwait
call
cltd
and
inc
inc
mov
xor
lcall
cwtl
js
mov
mov
mov
push
sbb
cwtl
push
mov
shrl
and
mov
out
xor
adc
adc
movsb
xlat
xor
sub
nop
mov
sub
xlat
and
fistl
mov
decl
gs
mov
stos
ficoms
mov
mov
push
cli
xchg
rorb
and
mov
in
xchg
scas
cmpsl
mov
shlb
xor
lret
jle
dec
dec
inc
pop
sub
mov
clc
jno
lods
call
out
sahf
dec
add
and
add
dec
add
dec
mov
sub
dec
add
out
inc
pop
arpl
out
add
push
dec
mov
fmul
fldt
nop
add
inc
rolb
mov
stos
add
nop
setl
push
dec
popa
cs
sbbl
lahf
cld
sahf
lock
push
icebp
fldl2t
mov
subl
icebp
popf
mov
push
push
fwait
shrb
insl
rolb
lret
rep
jge
iret
out
push
lods
in
fadd
sbb
test
cmp
mov
test
xchg
jge
arpl
repnz
xchg
mov
ret
add
call
dec
packssdw
ret
mov
or
ja
sbbb
js
fmuls
sti
mov
mov
outsl
mov
mov
addl
adc
mov
adc
imul
ret
mov
mov
ja
push
cmpsb
fistpll
mov
xchg
sub
sbb
imul
lds
loop
fnstenv
cmpsb
pop
xor
pop
in
lahf
test
mov
cmpb
push
jno
inc
scas
mov
xlat
sahf
sbbl
andb
arpl
sub
mov
sub
cli
push
shlb
leave
adc
xchg
dec
cmc
pushl
jae
sbb
test
xor
xor
cwtl
sub
adc
pop
lods
orb
pop
and
data16
gs
pop
divb
or
mov
sarb
inc
sub
dec
andl
sbb
je
data16
and
push
cli
mov
mov
and
mov
jno
rorl
.byte
data16
