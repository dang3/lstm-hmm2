sbb
add
mov
xchg
mov
dec
stos
and
hlt
push
pop
mov
inc
and
aaa
lods
mov
cmp
xchg
sbb
je
out
push
outsl
arpl
fnstenv
xor
adc
add
or
push
sarl
pop
aas
push
or
sbb
or
add
imul
lock
movsb
pop
adcb
iret
and
xchg
movsb
adc
movsb
adc
adc
adc
jle
fs
shlb
xchg
xchg
fs
pop
jb
aaa
cmc
pop
cwtl
testl
xchg
mov
mov
jne
inc
popf
jno
mov
inc
jnp
add
push
pop
les
negb
std
cmc
cwtl
xlat
adc
cmc
sub
iret
fildl
loop
cmpsl
or
mov
ret
aas
rclb
and
and
loop
hlt
js
or
and
iret
mov
or
adc
cltd
cmp
inc
xchg
mov
imul
bound
imul
dec
mov
int
popf
inc
aaa
xchg
sub
das
ror
inc
in
sbbb
adc
sbb
jmp
pop
mull
ljmp
neg
adc
insl
push
cmp
sbbb
sbb
inc
mov
push
jae
mov
in
lods
ds
movsb
inc
in
scas
jns
jb
xor
mov
incl
mov
sub
stc
and
mov
xor
dec
cmp
adc
and
bound
sub
test
sub
loopne
push
xor
hlt
rolb
jnp
xchg
sub
jb
sub
in
xor
or
ficomps
push
cld
pop
mov
dec
sti
int
adc
fs
jb
cmc
outsl
sub
fists
xrelease
cmp
aaa
divl
mov
popf
mov
movsb
adc
lods
or
rclb
push
mov
stos
movsl
aas
and
add
xchg
xlat
pop
movsl
fcmove
lods
jmp
xchg
call
or
or
in
adc
cmpsb
mov
loopne
cwtl
push
dec
sbb
xchg
stos
mov
test
jo
cltd
sub
insl
stc
cmp
arpl
shll
sti
loop
cwtl
lea
jge
icebp
ss
push
sub
jecxz
dec
out
arpl
ret
into
cmp
in
and
adc
lahf
pop
lret
stos
mov
mov
dec
jmp
in
dec
adc
mov
out
adc
push
unpckhps
adc
or
in
xchg
and
fsubrs
popf
loope
add
and
cwtl
mov
sti
addr16
gs
xchg
daa
push
outsb
or
jnp
and
pop
dec
ja
mov
dec
xchg
xchg
cmp
dec
xor
cltd
mov
cwtl
rorl
aaa
cwtl
pop
push
dec
mov
in
push
outsl
nop
cmc
add
pop
shlb
pop
repnz
pop
mov
mov
cmp
pop
lods
sbb
mov
lea
popa
shr
cmp
lds
adc
ret
cmp
hlt
adc
jge
or
in
mov
and
adc
ret
fxch
ljmp
in
daa
test
aad
sbb
jbe
cli
movsl
mov
hlt
adc
xorb
pop
les
cmp
pop
inc
sarb
or
jge
cli
lret
mov
frstor
sbb
inc
sti
or
jno
outsb
sbb
mov
jle
scas
push
cmc
nop
out
jle
and
in
sbb
jmp
pushf
das
jle
in
jmp
xor
inc
out
or
xlat
inc
arpl
add
sti
push
rcrl
add
rorb
test
aad
sbb
fld
xorb
push
mov
mov
ret
test
or
mov
rcl
add
jb
add
xchg
ret
adc
in
jle
mov
rcr
outsl
xchg
push
pop
dec
mov
aad
inc
decl
js
inc
mov
addr16
mov
sbb
inc
popf
sbbb
lea
daa
fwait
sbb
int
push
inc
push
shrb
mov
mov
xor
or
xor
and
out
ljmp
pextrw
push
mov
in
out
dec
leave
or
mov
and
cmc
into
pusha
test
pop
pusha
and
xchg
adc
mov
fadds
mov
xor
stc
dec
xor
ret
icebp
mov
mov
dec
dec
mov
hlt
add
jg
sub
test
fiadds
cmp
into
adc
jg
add
scas
inc
jp
cltd
cs
into
ret
dec
rol
mov
rorb
stos
pop
leave
cmp
sbb
push
or
dec
out
in
inc
xor
mov
jecxz
in
sbb
xchg
sbbl
xor
test
dec
mov
xchg
dec
jge
and
mov
dec
xchg
loop
xchg
sbb
ljmp
jmp
cmp
add
dec
or
in
add
in
outsb
sub
mov
imul
sub
jge
imul
leave
mov
sbb
inc
pop
mov
pop
cmp
pop
sti
imul
fsubl
cmpsl
lods
add
daa
push
adcl
fld
sub
decb
sbb
pop
mov
rorl
push
push
ss
fisttpl
cmp
mov
inc
jb
icebp
cmpsl
pop
movsb
ficomps
enter
pop
inc
push
sti
inc
pop
adc
xchg
inc
push
xor
push
lahf
mov
add
xchg
ja
repz
sbb
outsb
inc
sub
mov
fsub
hlt
cmpsb
inc
addr16
push
xor
jno
ret
cmpsl
jae
adc
sub
push
add
push
movsb
es
imul
and
or
sbb
dec
mov
call
cmp
jecxz
sbb
scas
fcmovb
mov
or
adc
stc
aas
test
lcall
enter
popf
xor
addb
enter
mov
arpl
mov
ljmp
inc
pushf
sbbl
cmp
jl
leave
jnp
test
jg
fs
cs
xor
rolb
repz
repnz
iret
dec
add
mov
pop
mov
push
aam
cwtl
adc
sbb
stos
mov
inc
stos
lods
pop
insb
add
stos
jo
mov
pop
imull
ja
jp
jbe
mov
sub
fistps
movsb
add
pop
rcll
dec
popa
lret
dec
int
fdivl
imul
adc
sbb
cmp
mov
adc
mov
clc
and
pop
pop
and
pop
push
jnp
mov
dec
xor
and
xor
mov
push
in
das
push
push
pop
icebp
sbb
das
cmp
int3
out
mov
cld
dec
and
mov
inc
lret
pop
cmc
mov
sbb
rcll
enter
xorl
push
xchg
cwtl
pop
pop
mov
mov
cs
daa
pop
call
jecxz
and
or
cli
lods
sbb
sub
repnz
mov
shlb
cmpsb
rorl
data16
jbe
pop
hlt
jne
les
leave
adc
sarb
jmp
adc
out
sbb
or
ljmp
in
cltd
clc
int3
out
add
mov
ljmp
in
ret
popf
imul
push
mov
stc
push
mov
pcmpgtb
cmp
shrb
mov
addr16
pop
xor
popf
ret
repnz
rcll
jmp
pop
xchg
dec
fucomi
or
mov
push
xchg
dec
mov
xchg
int3
jbe
push
jl
sub
mov
mov
sbb
sbb
jae
cmc
adc
ret
das
or
xchg
or
hlt
out
hlt
dec
insl
sbb
loop
imul
subl
stc
xchg
jg
push
mov
cmp
ljmp
iret
cmp
add
adc
xor
and
gs
inc
test
cmp
in
xlat
push
and
mov
movl
push
rcrb
lods
jns
cli
sub
ret
test
mov
in
sub
jl
dec
fcmove
scas
adc
int
xchg
cmp
cld
push
dec
pop
push
push
aaa
std
pop
popf
in
fwait
es
sub
push
mov
jle
femms
in
ljmp
lock
movsl
jg
push
sti
imul
mov
invd
fcom
mov
out
pop
push
fistps
test
jecxz
mov
or
adc
stos
rcll
xchg
out
ljmp
enter
mov
jno
cmp
movsb
and
aad
rclb
mov
into
sahf
test
add
dec
adc
inc
sub
ja
jnp
inc
add
popf
imul
flds
sbbb
xlat
int3
sahf
inc
mov
mov
movsb
xor
sub
fcoml
fldenv
in
jae
add
jg
pop
in
lock
adc
punpcklwd
or
inc
xchg
insl
cmp
lcall
repnz
and
dec
mov
mov
adcb
mov
sbb
jge
and
loopne
pop
jmp
cld
pop
xchg
int3
inc
cltd
pop
aad
lods
mov
rol
pop
mov
cwtl
sbb
add
dec
cmc
xchg
xor
int
out
lock
sahf
gs
jg
fwait
aas
xchg
mov
outsl
nop
mov
mov
dec
adc
add
lods
xor
inc
out
data16
dec
mov
shr
pop
lods
pusha
ds
and
cmpsl
mov
insb
mov
pop
sahf
aas
add
gs
mov
mov
xor
add
cltd
cmp
andb
and
sub
push
sub
inc
pop
dec
mov
les
std
aas
shll
mov
jne
fnsave
fsubrs
push
and
push
dec
imul
mov
jo
pop
fdivrp
xchg
sub
inc
pcmpeqw
jb
test
and
sub
stos
and
daa
ja
in
pop
popa
push
cltd
push
push
mov
inc
pop
cmp
lds
arpl
pop
dec
xor
mov
popf
xor
mov
fs
jg
inc
cmpsl
sbb
fiadds
sbb
mov
pop
testl
jbe
sbb
cmp
xlat
dec
inc
pop
jae
test
cmpsl
addr16
test
inc
mov
inc
out
bound
sub
andb
lds
mov
xchg
fidivrs
pop
xchg
inc
mov
insb
hlt
nopl
add
lret
inc
imul
psubd
xchg
or
iret
pushf
fstl
mov
stos
add
or
fcompp
sti
mov
into
or
outsb
mov
xchg
insb
mov
imul
lret
testl
pop
jbe
pop
push
cmp
cli
sbb
insl
or
push
ljmp
lods
gs
ja
jg
inc
mov
sbb
xor
shll
rcr
loopne
add
xchg
add
aad
insl
cmp
clc
fmulp
pop
mov
enter
daa
mov
imull
aas
out
ret
mov
xor
lret
rcl
or
xor
jl
nop
mov
scas
aad
arpl
lret
sub
dec
mov
jb
push
sbb
std
sar
pop
test
pop
das
cmp
jl
jo
xchg
enter
aad
inc
sbb
mov
or
js
bound
les
aad
icebp
sub
lcall
add
adc
and
xchg
orl
sub
call
push
inc
fbstp
xor
lods
mov
mov
adc
mov
jmp
or
sbb
mov
rclb
jl
mov
in
xor
lret
rcrl
and
push
imul
popf
adc
dec
fsts
fstl
or
xchg
mov
stos
sub
pusha
sub
adc
out
stc
pusha
stos
push
dec
fs
push
imul
das
hlt
fisubrl
cli
cmp
ss
out
jb
xchg
call
popl
icebp
out
addr16
in
pop
push
lret
dec
into
out
mov
test
roll
inc
into
mov
mov
pop
xchg
fisubs
lret
loop
lods
xlat
mulb
out
inc
lcall
mov
add
lock
loope
sub
xchg
xor
xchg
xchg
popa
jge
xchg
pop
fwait
popf
mov
sahf
jp
repz
jnp
pop
fists
push
gs
out
adc
test
iret
or
dec
pop
mov
adc
adc
es
roll
mov
sbb
int3
hlt
jb
sbb
cmp
mov
push
ja
cmpsl
mov
cmp
lods
jg
sbb
inc
imul
std
adc
lods
or
pop
in
jmp
aas
or
and
jecxz
adc
mov
sub
push
lret
mov
xchg
mov
sbb
or
pop
jg
pop
jns
idivb
clc
pop
loopne
mov
js
or
or
andb
pop
dec
mov
out
mov
and
dec
pop
jno
push
pop
adc
pop
adc
add
jmp
sahf
pop
xchg
cld
xchg
cmc
insb
lret
mov
cmpsl
mov
mov
aaa
ficompl
ljmp
sub
push
and
and
into
xor
mov
mov
fwait
dec
in
addr16
sbb
or
in
leave
ja
gs
dec
ja
mov
mov
pop
scas
adc
xor
inc
int
into
mov
pop
incb
out
jp
fs
xor
fs
xchg
add
scas
movsl
xor
mov
dec
xlat
pop
cld
sti
xchg
cmpsb
sub
or
mov
je
mov
xchg
loope
adc
clc
loop
sbb
lret
lods
push
outsl
lds
cli
sbb
add
pop
popa
lcall
int
call
sti
pop
in
or
mov
pushl
cltd
jne
sub
xchg
cmpsb
pop
lcall
pop
inc
and
pop
mov
xchg
cmp
sub
jecxz
adc
jbe
mov
pop
aaa
movsl
ss
jo
aam
push
ljmp
cld
add
cwtl
sbbl
xchg
mov
faddp
xchg
es
add
sbb
xchg
cmp
fnsave
rorb
cmc
push
mov
out
lock
ds
test
cli
pop
js
jg
dec
dec
push
lret
cmpsl
add
sti
sub
ret
adc
xchg
or
and
gs
repz
insl
cmp
fidivrs
or
fs
xchg
sub
sbb
xchg
push
repnz
ja
movsb
andl
scas
js
xchg
xchg
ljmp
ss
movsl
or
mov
fwait
jmp
push
xchg
adc
cmp
xchg
add
call
push
mov
int
and
cmp
add
daa
pop
idivl
aas
rorb
dec
mov
lock
sub
cld
adc
sbb
and
jns
cmc
or
daa
push
fwait
mov
mov
popf
pusha
rorl
or
addr16
test
in
in
pusha
outsb
hlt
stc
push
test
out
pop
or
mov
jns
push
arpl
or
push
push
xchg
rorl
out
adc
mov
insl
je
xchg
mov
int
aad
xchg
mov
syscall
mov
and
adc
push
mov
push
nop
ret
adc
out
out
loope
shll
sbb
test
adc
dec
arpl
inc
jp
push
dec
dec
insb
mov
jecxz
cmp
fildll
mov
addr16
mov
sti
aad
inc
xor
xor
popf
mov
add
xchg
in
subb
pop
pop
fsubp
dec
mov
fdivrs
mov
push
jne
aaa
lods
xchg
iret
cld
fisttpl
out
test
xlat
mov
sbb
pusha
sbb
add
xchg
fstl
xchg
xor
pushf
sbb
outsb
jl
and
push
push
sub
jge
cwtl
scas
aad
pop
sub
je
or
shlb
pop
in
adc
dec
mov
aas
push
or
dec
xor
cmp
push
inc
rcll
js
mov
mov
sbb
jae
push
mov
mov
mov
jg
in
pushf
out
aaa
or
sub
mov
in
mul
cltd
mov
dec
in
sub
mulb
xor
and
gs
cld
pop
ljmp
loopne
add
jle
jl
cmp
jnp
loopne
or
gs
sub
cmp
xchg
mov
jecxz
rclb
mov
bound
es
pop
lret
xchg
mov
bound
leave
jno
adc
dec
sbb
xorb
fnstsw
sbbl
add
jmp
decl
add
cmp
imul
xor
sub
jg
jne,pt
mov
pop
push
in
sub
mov
push
or
xchg
repz
mov
push
xchg
int3
ds
and
jno
fbstp
rcll
out
adc
fcomi
jno
xchg
insb
repnz
lret
sti
or
mov
mov
daa
outsl
aad
jmp
std
pop
xchg
clc
cmpsl
mov
and
cltd
lcall
xor
pop
out
aad
adc
faddp
pop
popa
lea
or
mov
out
jl
loop
inc
andb
mov
cld
mov
ret
inc
cmp
push
in
test
test
mov
ret
fildl
insb
lock
dec
iret
cwtl
movsl
in
pop
andps
jle
test
je
mov
sub
mov
je
jge
pop
fldcw
mov
jl
movsb
mov
sub
xchg
jecxz
cmpb
xor
stos
push
ret
out
xor
jno
les
adc
into
shlb
pushf
sub
loopew
pop
insl
push
pop
out
jae
xchg
imul
xchg
int
and
dec
test
test
mov
test
dec
dec
cltd
mov
mov
jo
xor
lea
sahf
or
push
scas
repz
loop
in
mov
leave
pop
repnz
fldenv
loop
inc
mov
fimull
jl
cmpl
and
and
daa
fildll
pop
mov
pop
js
sbb
xor
test
loopne
or
cmp
js
rcll
sbb
lea
stc
cmpsl
jge
outsb
mov
pop
sbb
sub
inc
repnz
cmp
add
xchg
inc
in
cmc
call
int3
sti
adc
inc
sub
add
int
mov
mov
pop
jge
notl
and
outsl
lcall
and
mov
lahf
cs
into
and
pop
jg
and
ret
out
xchg
ret
push
js
clc
stos
xor
and
stos
add
stc
cmp
xchg
filds
adc
or
xchg
lock
add
icebp
cmp
jne
add
adc
lea
imul
cmp
pop
and
pop
pop
xchg
sub
mov
nop
test
xchg
lods
scas
pop
and
jae
dec
add
push
out
and
cmp
arpl
enter
dec
xlat
push
fdiv
cmc
xor
push
stos
xor
push
pop
movb
testl
cwtl
jns
out
sub
shrb
cmp
rcrl
rorl
jae
ljmp
movsl
push
cwtl
pop
clc
ret
xchg
mov
add
scas
cli
mov
pop
lods
adc
in
push
aaa
stc
cld
popf
dec
repnz
enter
xor
test
jmp
dec
or
arpl
cmpsb
push
mov
xorl
mov
outsl
mov
fsubrs
jecxz
pop
cmpsl
pop
and
insb
inc
inc
jbe
fdivs
testb
out
iret
imul
jg
pop
jnp
test
shl
dec
inc
sub
push
add
nop
test
and
in
cmp
or
pop
sbb
loopne
dec
fcmove
cmp
push
sbb
dec
dec
mov
testl
and
sbb
push
add
sbb
fcoms
movsb
mov
push
and
push
lods
pop
je
xchg
popa
or
imul
xlat
dec
jg
mov
inc
ror
lret
testb
jo
subb
xchg
psubusb
lret
lds
les
insb
push
mov
mov
std
dec
push
sub
mov
aas
ficomps
into
rolb
push
push
jge,pn
push
enter
dec
inc
mov
push
enter
xchg
out
dec
insl
lcall
push
push
push
sub
dec
scas
inc
fwait
mov
mov
test
test
icebp
nop
and
in
in
xchg
inc
inc
pop
mov
sub
mov
pop
cli
xchg
xor
push
or
inc
and
mov
dec
imul
mull
pop
aaa
arpl
adc
adc
dec
daa
cmp
or
push
fsubl
mov
sub
mov
xor
dec
xchg
inc
sub
xchg
ret
lret
es
lods
mov
dec
inc
insl
shlb
pop
imul
rolb
pop
push
addr16
enter
cs
sar
xchg
push
repnz
cmp
pop
iret
addr16
push
fdivl
test
and
dec
add
ret
ffree
fstl
add
sub
dec
mov
push
mov
xchg
fwait
in
pop
sbb
sub
sbb
notb
xor
testl
int3
lea
rorb
testb
and
bound
push
cwtl
pop
aaa
xlat
ret
lods
xor
fsubs
mov
ja
xchg
nop
js
sub
mov
fsts
mov
imul
jae
push
sbb
cltd
jg
cltd
add
xor
imul
in
pop
pop
aas
std
std
loope
jno
out
pop
pop
stc
mov
gs
cmp
and
ficomps
jae
pusha
add
clc
mov
mov
cmpsb
adc
pop
insl
mov
push
mov
sahf
loopne
jp
in
sti
sub
xor
nop
out
xchg
sub
pop
xchg
push
sbbl
stos
movsb
bound
in
mov
repnz
lret
shll
cli
repnz
imul
int
and
aad
ss
cwtl
mov
test
cmp
je
test
jl
sbb
cmp
cwtl
push
rcl
pop
inc
sbb
add
aas
outsl
outsl
sti
sbb
and
addl
sbb
sub
idiv
loopne
movsb
fbstp
repz
sti
and
dec
ret
inc
out
lds
jbe
outsb
cwtl
fistpll
xor
lret
pushf
repz
mov
dec
adc
test
xacquire
dec
or
icebp
mov
sbb
orl
push
sti
mov
loopne
iret
das
push
pop
in
adc
dec
xchg
rcrl
std
inc
movb
add
mov
xchg
fxch
mov
loope
pop
in
repnz
cmp
stos
popf
lret
test
aad
add
mov
lahf
xor
in
sbb
inc
pop
dec
sub
xchg
repnz
ret
popa
adc
movsl
lock
jb
sub
cmp
cwtl
roll
fs
inc
dec
mov
jp
sub
aas
mov
gs
mov
stc
pushf
xor
pop
ss
push
pusha
in
into
lret
mov
xchg
xchg
add
inc
fsts
cmpsl
xlat
xchg
push
adc
ss
jb
mov
push
sub
rcrb
shlb
daa
out
push
or
pop
jmp
lods
shrb
scas
sarl
das
sbb
push
jae
adc
and
sbb
loop
loop
push
sub
mov
pop
daa
pop
cli
jecxz
ret
jbe
in
pop
sbb
ret
pop
outsb
xchg
mov
js
or
ret
cmc
xor
sbb
shrl
idiv
push
mov
sbb
mov
fidivrl
rorl
outsl
push
movd
xor
out
fcomps
popf
xchg
pop
jge
std
pop
cs
sbb
bound
ret
pop
pop
sub
mov
repnz
cld
dec
andb
and
out
adcb
cmp
fidivl
test
nop
out
cmp
jb
or
fldt
sbb
push
inc
lret
fwait
lret
lods
xor
pushw
stos
pmaxsw
dec
outsl
addr16
mov
cmp
shrb
ds
pop
fcom
pop
ret
inc
frstor
sub
fwait
std
nop
fcoml
iret
push
arpl
pop
ja
cmp
xor
or
ret
sbb
xlat
xor
pop
les
sub
pop
inc
es
mov
pop
out
add
sbb
lods
jp
cmp
jl
push
cmc
xchg
cwtl
mov
or
jbe
shrl
cmp
xchg
loopne
mov
and
mov
pop
repnz
add
pusha
iret
test
out
sub
mov
adc
mov
add
fimull
adc
in
sub
mov
jae
sbb
lcall
mov
movd
push
or
and
mov
sub
test
leave
and
xchg
xor
imul
es
out
in
cmc
jl
aas
push
addr16
int3
arpl
out
lret
fistpl
xchg
cmpsb
stc
xchg
sub
sub
inc
es
fdivl
imul
inc
mov
push
lods
imul
popf
es
movsl
pop
mov
cmp
pop
sub
aam
ret
dec
push
popf
lds
cmp
insl
repz
psubw
popa
xor
push
les
loope
mov
test
lds
xchg
cmc
mov
pop
ret
sahf
xchg
mov
mov
adc
lea
xchg
pop
in
xchg
fdivrp
adc
and
pop
xor
add
mov
daa
jbe
mov
leave
sbb
jnp
std
sahf
out
dec
aas
cwtl
es
nop
inc
jno
or
add
jbe
popf
dec
xor
mov
popa
and
lods
mov
xchg
mov
hlt
aas
inc
jg
ret
rcl
cli
jmp
daa
and
add
sbb
lock
popa
std
xchg
enter
imul
loop
sub
pop
mov
push
lock
icebp
mov
sbb
add
xor
imulb
rcll
sbb
and
sti
push
sbb
cmp
push
sub
or
repnz
nop
lret
mov
and
lods
in
push
mov
sarl
int3
cltd
stos
adc
fldt
cs
sti
fst
pop
xchg
loop
bswap
adc
pop
mov
arpl
pusha
fmuls
xor
jo
mov
jl
out
adc
fwait
jb
mov
cmpsl
sbb
fmuls
push
imul
lahf
and
push
sub
cmp
xor
nop
ja
mov
dec
pushf
jle
dec
cmp
call
pop
and
loop
ret
jo
es
ljmp
sub
movsb
mov
add
aaa
or
and
jbe
sbb
jl
dec
nop
mov
add
call
jg
stos
pmuludq
fwait
dec
faddp
cmpsl
xchg
pop
sbb
sbb
fidivs
cmp
push
cmp
scas
outsb
cmp
in
inc
jecxz
cmc
in
jecxz
pushf
js
pop
mov
jle
shl
scas
pop
arpl
or
jnp
std
push
cs
lahf
nop
jns
cmc
jle
out
cs
stc
jecxz
fdivrl
mov
mov
loopne
sbbl
dec
cmp
icebp
adc
andl
push
out
clc
jns
add
test
jb
jle
jmp
pop
mov
xchg
daa
jle
dec
lods
pop
xchg
lret
inc
dec
xchg
popf
fucomp
cmp
in
loop
inc
sti
sub
xchg
nop
adc
ds
stos
push
fcoms
xchg
add
xor
cli
leave
push
pop
sub
outsl
mov
sbb
movsb
ljmp
test
pushf
sub
sbb
pop
cmp
or
mov
cmc
pop
aam
imul
sub
stos
dec
outsb
jmp
das
jg
jne
lahf
lods
in
outsb
jl
push
dec
clc
fimuls
jecxz
pop
xchg
pop
xchg
sti
loopne
pop
dec
test
leave
fisubs
bound
add
adc
pop
mov
mov
cmp
xor
pop
stos
ljmp
loopne
mov
test
jno
arpl
cmp
je
imul
dec
inc
fstps
daa
in
add
xchg
iret
in
inc
jb
jge
ljmp
pop
add
fldt
mov
int
pop
cmp
dec
imul
sub
mov
daa
cli
addr16
les
add
sub
enter
movsb
cmpsl
scas
add
mov
jns
push
adc
jns
mov
push
mul
cli
push
sbb
inc
pushf
inc
shlb
movsb
mov
out
jns
sahf
repz
loopne
pushl
shlb
clc
lcall
shr
mov
mov
cld
or
add
out
lret
mov
xchg
sbb
mov
sbb
arpl
jb
fistl
dec
negl
fsub
arpl
cmc
lods
mov
fwait
aas
aas
push
inc
in
mov
dec
or
xchg
out
pop
sahf
test
addb
fadd
mov
mov
and
mov
add
hlt
nop
mov
adc
pushf
sbb
inc
cs
push
mov
popf
movsl
pop
fildl
js
inc
ds
mov
pop
vdivpd
rorb
adc
push
push
jb
sbb
and
in
jae
push
out
ds
das
and
lea
jne
sub
mov
test
icebp
mul
adc
fildll
aad
test
ss
repnz
shll
sbbb
and
lret
mov
xlat
cmpsl
call
fwait
std
movsl
mov
aaa
cld
inc
sbbb
fiadds
xchg
dec
mov
sti
sub
xchg
data16
jmp
and
pop
jbe
in
into
shlb
out
add
loopne
shlb
scas
cld
mov
arpl
loopne
mov
or
adc
add
mov
adc
insb
push
js
shrl
lods
movb
int
sarl
pop
ret
pop
sbb
cmp
mov
and
jno
sub
rcr
repz
mov
inc
adc
lret
es
dec
daa
sbb
out
pop
icebp
clc
les
xchg
sbb
sarb
call
stc
test
adc
mov
arpl
cmpsl
jmp
jne
stc
aad
or
or
mov
js
xor
decl
cmp
loope
popa
enter
in
movsb
call
xor
mov
js
push
or
sar
cmp
sarb
stos
imul
hlt
and
jb
mov
push
mov
hlt
iret
xchg
jmp
xchg
test
scas
rcrb
xor
stos
test
mov
add
cmpsb
dec
adc
push
ja
in
test
mov
xlat
cli
or
lds
sbb
mov
fwait
mov
xchg
and
lcall
mov
lds
sbb
out
cmp
mov
cmp
mov
decl
push
inc
and
mov
sub
push
push
sbb
inc
je
add
das
cmp
ret
mov
leave
aam
sbb
cltd
insl
test
adc
clc
sbb
outsb
add
adc
data16
leave
pop
mov
mov
dec
add
xor
fldt
enter
jae
sbb
push
loopne
mov
xor
pop
xor
sub
js
mov
mov
addr16
mov
sub
decb
sahf
cli
stc
test
adcb
push
cmpsb
sbb
addl
sub
in
mov
in
sbb
es
xchg
mov
mov
adc
xchg
cmpsb
jle
decl
xchg
pop
xlat
pop
sub
sbb
xor
mov
addr16
pop
and
mov
xchg
jle
repz
inc
lock
or
fmuls
pop
sti
xchg
shll
mov
cld
pop
out
xchg
cmpsb
mov
pushf
lods
xchg
pop
jns
inc
mov
stc
add
sbb
fidivrs
addr16
adc
movsb
dec
sub
bound
cmp
xor
sub
test
mov
jecxz
pop
ret
pop
iret
ja
decb
dec
leave
inc
fcmovnbe
sub
sub
pushf
cli
mov
fidivs
mov
and
or
push
mov
mov
mov
and
loope
sub
adc
sbb
loope
pop
into
xchg
or
xor
cmp
stos
lea
sti
pop
std
out
fbld
sahf
cmp
insl
push
jae
daa
test
clc
or
dec
sti
leave
push
sti
sbb
frstor
cmp
dec
ret
xchg
mov
insb
add
popf
mov
push
pop
dec
sub
ja
jl
cmc
adc
or
outsl
popf
rclb
or
addr16
inc
or
pop
inc
or
stos
push
mov
inc
add
mov
movb
daa
cmp
out
xchg
push
or
push
cmp
iret
jecxz
nop
or
mov
xor
push
ja
js
pop
jnp
adc
sbb
fldt
push
jae
cli
inc
mov
leave
dec
push
push
cwtl
xlat
mov
adc
lret
add
jg
push
ret
ret
adc
aam
mov
push
push
movb
mov
and
push
pushf
mov
aam
fstl
shrl
movsl
mov
inc
rol
mov
jecxz
jno
pop
xorb
das
fbstp
mov
dec
or
inc
inc
cmpsb
or
pop
loop
jmp
scas
and
negb
or
mov
lret
lret
leave
subb
fcmovnbe
cltd
adc
ljmp
test
push
cmc
daa
and
adc
sub
in
jecxz
push
or
pop
push
ss
fadds
adc
roll
sub
pop
push
cs
ret
jp
mov
bound
subb
mov
sbb
and
stos
js
mov
jns
aaa
ret
lcallw
cmp
sti
je
xor
mov
jmp
mov
adc
cmp
lret
cmp
test
fnstenv
roll
add
jge
jecxz
jnp
or
push
jbe
mov
cmp
icebp
dec
jg
arpl
push
pop
aas
dec
js
stos
jecxz
push
outsl
dec
jb
hlt
divb
dec
pop
ja
rcrb
sub
mov
cmp
test
inc
push
scas
jne
andl
push
sub
sar
cmc
in
incb
rclb
int3
inc
jl
mov
faddl
imul
cli
in
sub
xchg
xchg
sub
inc
xor
add
xor
bound
jo
xchg
push
int
xor
push
push
repz
icebp
lock
push
xchg
inc
lds
cmpsb
fstl
jl
sbb
shr
imul
mov
fiaddl
adc
outsb
mov
push
dec
or
arpl
mov
sub
arpl
dec
mov
les
jp
add
sub
scas
imul
pop
mov
fidivrs
cmp
sub
imul
dec
mov
mov
cwtl
jns
out
outsl
push
jmp
pop
fcom
cs
cmpl
imul
jbe
jp
jnp
jle
rcrl
mov
inc
push
or
xor
add
out
sahf
pop
dec
sti
cmpsb
bound
stos
jg
les
lahf
out
aaa
and
inc
pushw
pop
or
dec
lock
cld
xchg
clc
and
inc
fists
ret
jns
jmp
cmpsl
repz
and
jmp
aas
subl
push
inc
js
clc
dec
add
dec
pushf
jl
std
pop
sarb
ret
lcall
into
in
xor
shl
xor
clc
and
out
repnz
cs
and
imull
add
push
int3
inc
aam
lock
add
dec
sub
repnz
int
dec
sbb
scas
mov
gs
and
pop
outsb
rol
js
repz
lcall
pop
int
inc
pop
lret
sub
push
adc
aaa
mov
xlat
ficompl
mov
jne
cmp
clc
mov
push
clc
sahf
sbb
dec
and
push
inc
repz
sbbb
sub
jno
mov
inc
adc
xchg
rcrl
dec
test
dec
scas
cmc
mov
xchg
jns
push
push
push
outsl
jno
mov
in
dec
pushf
mov
dec
or
out
cmp
inc
ja
clc
adcl
jbe
pushf
outsl
mov
mov
pop
in
aad
or
mov
popf
xchg
add
daa
test
pop
push
xchg
and
adc
les
push
rep
stos
arpl
mov
inc
and
push
sub
stos
push
mov
dec
in
inc
jae
out
rcrl
std
sub
test
push
data16
jl
inc
lahf
outsl
jae
mov
dec
icebp
in
xchg
pop
in
out
push
lods
sbb
jp
dec
clc
jb
sti
arpl
add
xchg
sub
xchg
cmp
xchg
dec
insb
pop
mov
std
mov
out
and
insl
xchg
subl
cltd
lret
add
mov
es
out
pop
hlt
hlt
lds
fstpt
mov
push
sbb
xor
or
popf
sarl
cmp
sub
fldenv
and
and
rcrb
iret
cltd
mov
push
add
in
mov
lea
mov
fisttpl
aad
add
ss
dec
insb
xor
cmp
fcmovbe
das
pop
shll
sub
pop
cld
xor
mov
adc
sbb
push
cs
push
test
xor
lcall
sbb
call
pop
sarl
or
pushf
and
mov
adc
loopne
rcll
ljmp
dec
iret
shl
sub
into
mov
mov
mov
add
mov
push
jmp
lret
jb
jo
pop
ret
add
fwait
push
mov
mov
sbb
fs
push
in
stos
dec
mov
shll
rorl
and
xchg
pop
and
jp
fyl2xp1
mov
sbb
cmp
bnd
push
jb
add
mov
push
cld
xor
mov
add
aad
cmpsl
nop
mov
int3
pushf
sub
insb
imul
cmp
lret
and
mov
inc
cmp
pop
lahf
je
ror
dec
sahf
aam
insl
mov
cltd
pop
leave
xchg
mov
mov
enter
or
aaa
ror
xchg
stos
and
clc
pusha
inc
push
cmpsl
xchg
sbb
in
mov
aad
fidivrl
mov
dec
cld
mov
fstl
daa
mov
jno
imul
sahf
inc
mov
jo
push
lea
pop
adc
mov
inc
adc
mov
mov
rcl
dec
mov
jno
push
cmp
push
int
incb
mov
int3
adc
pop
xchg
cmpsb
and
addr16
aaa
cmp
lret
inc
jg
scas
sahf
adc
cltd
stos
cs
lods
cmp
stos
mov
fnstsw
pop
inc
test
int3
adc
xchg
in
jp
sub
dec
in
test
stc
jp
inc
cwtl
push
mov
lods
std
inc
subb
mov
and
lods
cmpsb
xor
mov
clc
popa
dec
dec
sub
pop
xlat
jnp
sub
mov
pop
je
sub
sarb
das
data16
ds
enter
loope
lret
pop
dec
or
mov
fisttps
adc
mov
pop
inc
es
sub
incl
repnz
jmp
sub
mov
cmp
mov
pop
test
adc
adcb
add
pop
lahf
push
inc
mov
xor
test
ror
clc
xor
dec
bound
pop
add
and
fistps
fabs
test
dec
mov
ret
lods
jp
pop
xchg
xchg
nop
cmpsb
xchg
cmp
push
mov
pop
dec
cli
push
js
and
lret
push
jecxz
pop
int
test
lcall
push
repz
repnz
lods
push
mov
inc
ret
outsb
xchg
pop
mov
loopne
faddl
mov
imul
push
bound
fcomi
leave
fstpl
add
push
xchg
and
and
stc
dec
pop
mov
mov
not
and
lods
mov
jae
nop
jbe
jnp
leave
movsb
sahf
pop
jl
mov
addr16
insl
xor
js
sub
popf
cli
pop
lea
pop
mov
and
sub
push
mov
arpl
inc
or
jmp
into
xor
mov
mov
pop
pop
icebp
cmp
sbb
rcll
cmpsl
shll
and
das
jbe
dec
mov
add
imul
je
js
and
les
mov
dec
xchg
xor
push
stc
lret
jmp
inc
sti
hlt
pop
pop
pop
out
lods
popf
rol
aad
arpl
dec
insl
jg
movsb
inc
mov
xchg
ljmp
ljmp
sbbb
bound
mov
jno
loopne
cli
nop
jbe
jb
fistpll
inc
mov
jl
or
push
mov
cmpsb
stos
fsubl
aad
push
sub
into
xor
mov
cmp
mov
mov
mov
fidivrl
cmp
mov
dec
cld
roll
ds
pop
mov
mov
lea
or
sbb
inc
insb
inc
ss
mov
gs
add
ljmp
in
sti
shl
cmp
push
mov
xchg
cld
inc
lea
sbb
cmp
gs
and
imul
or
and
mov
jmp
sbbl
lods
cmp
insb
jne
scas
fmuls
mov
jle
in
hlt
movsl
scas
repz
push
stc
aad
mov
cmovle
aaa
and
notb
pop
inc
adc
add
dec
add
js
stc
clc
in
push
lock
mov
or
test
cmc
add
adc
mov
arpl
test
or
adc
push
imul
xchg
cltd
xchg
cmpsl
fxch
sbb
andl
push
mov
pop
iret
adc
add
xchg
imull
xor
pop
fistpl
sub
aad
cli
pop
repnz
loope
push
fists
insl
mov
outsl
sub
repnz
jae
test
aas
xlat
adc
jns
jne
mov
movsl
inc
mov
imul
xor
push
xchg
sub
and
fidivs
jo
out
adc
cld
inc
iret
jns
pop
faddl
and
jbe
arpl
repz
xchg
loope
mov
sub
or
push
xchg
ficoml
jne
pop
es
pop
ljmp
nop
lcall
popa
xchg
lods
mov
cli
insb
fbld
movsb
cmp
test
jge
ljmp
cmp
xor
xchg
cmp
clc
fldt
sbb
xchg
test
fwait
xor
mov
sbb
mov
mov
fcomps
sbb
sub
mov
pusha
push
jns
scas
cmp
pop
push
shll
pop
cmp
xorb
icebp
mov
mov
pop
xorl
test
shr
ljmp
ds
int
inc
bswap
adc
mov
pop
icebp
mov
inc
lock
js
ljmp
ret
fiadds
dec
or
clc
loope
sub
push
mov
insl
cld
xor
enter
lods
push
jmp
sbb
sub
add
lds
mov
jp
push
pop
mov
enter
mov
ja
fwait
cmpxchg
pop
clc
xchg
out
mov
push
jp,pn
rcl
sbbl
inc
cmp
cltd
dec
xor
rcll
mov
test
jb
mov
mov
jp
repz
mov
pop
jb
mov
push
mov
adc
mov
adc
mov
nop
pop
enter
pop
sahf
js
pop
mov
fwait
es
rcl
or
repnz
mov
jo
adc
imul
pop
inc
mov
int
rclb
popf
jmpw
xor
scas
fsubs
push
std
mov
data16
out
pop
adc
hlt
push
pusha
push
dec
or
jmp
cmp
lahf
cmp
gs
pop
adc
mov
les
test
cwtl
sub
mov
mov
outsb
clc
stos
inc
sbb
lods
cs
inc
mov
psubw
daa
lock
ljmp
sub
sub
xchg
sbb
xchg
pop
aam
aaa
push
lods
loop
pop
cwtl
ds
js
popf
fucomp
cld
mov
dec
bound
sbb
pop
adc
push
fcoml
push
xchg
lock
popf
or
jle
stos
test
hlt
movsl
mov
cmc
adc
idivb
sub
cs
roll
fcomps
jno,pn
shl
add
add
outsb
mov
and
adc
stos
cmp
cli
push
notb
test
mov
push
xchg
test
dec
pop
mov
jbe
aad
mov
sub
and
ljmp
imul
add
in
cli
cmpsb
dec
or
add
iret
ds
inc
pop
xor
clc
cmp
fdivrl
lret
or
adc
mov
xrstor
nop
pop
nop
push
add
out
pop
cmp
dec
sbb
xlat
ss
push
fwait
mov
shlb
imul
sahf
fsub
cmp
fwait
xchg
bound
inc
das
fst
inc
jbe
fsubl
in
inc
cmp
pop
push
mov
adc
mov
xchg
add
fs
icebp
push
or
bound
sbb
repz
xor
popf
xorl
and
lea
lret
orl
mov
sbb
std
pop
imul
sub
xor
xchg
mov
pop
pop
xchg
clc
lods
leave
repnz
leave
sbb
jns
dec
aas
loopne
adc
divl
jmp
out
or
add
mov
and
in
adc
xor
or
ret
mov
cli
int
xchg
ljmp
lods
dec
fidivs
mov
jge
cltd
cmpsl
mov
pop
push
test
ss
or
movsb
jecxz
add
jbe
or
orl
es
int3
and
arpl
clc
cmp
sbb
loopne
cmp
cmpsl
outsb
push
jmp
mov
das
lea
out
sbb
jo
lea
lds
adc
pushf
xchg
sub
test
aas
jmp
pop
adc
std
inc
mov
push
jo
out
mov
jns
inc
stc
mov
add
repnz
dec
add
fsubrp
xor
push
xchg
cli
test
jne
mov
in
push
sub
repnz
div
nop
dec
jns
lcall
out
sbb
push
imul
int
mov
sbb
loope
adc
subb
add
add
out
xor
or
pop
and
pop
lods
ret
dec
fldt
ds
test
mov
bound
cwtl
adc
pop
arpl
jae
mov
loopne
rorl
lods
insb
bound
pop
pop
ja
outsb
xchg
xchg
lcall
imul
cmc
mov
jg
mov
stos
inc
adc
hlt
xchg
mov
add
lea
or
fwait
mov
aas
mov
int3
pop
enter
das
ds
lock
rcrb
bound
cs
mov
faddl
out
fmul
dec
sbb
jge
lret
jo
clc
push
test
bound
mov
movsl
les
sbb
jnp
mov
sub
cmpsb
dec
jns
jae
enter
insb
inc
das
push
lods
test
data16
int3
mov
sbb
icebp
stos
in
arpl
push
insb
scas
push
lock
xchg
ss
popf
rclb
adc
or
icebp
xchg
test
pop
xlat
insl
and
sbb
je
out
movsl
mov
xor
fs
ss
and
les
mov
ljmp
cmc
lahf
xchg
fmulp
cmp
sbb
xchg
mov
xchg
mov
dec
jecxz
add
pop
hlt
mov
lret
stc
jne
jnp
int3
movsb
lahf
pop
testl
mov
popa
pop
lock
imul
jae
jae
icebp
sub
int
xchg
inc
pop
aas
sub
pop
inc
jecxz
xchg
pop
stc
mov
dec
aas
shlb
ret
sbb
repz
cld
int3
sub
lea
xor
aaa
sbb
daa
shrl
sahf
xchg
daa
clc
and
sbb
mov
push
outsl
adc
mov
sbb
stc
test
ret
mov
pop
push
xlat
insb
out
pop
mov
dec
outsl
pop
aam
sbb
orl
popa
aad
mov
insl
and
aad
xor
in
aam
pop
adc
subl
pop
rolb
movsb
xor
pop
sub
es
push
jp
jbe
jge
loope
add
pop
lods
mov
push
aam
mov
dec
xor
inc
xor
testb
fdiv
lret
jns
call
ffreep
dec
mov
fiadds
jb
loopne
pop
and
test
icebp
jno
mov
push
sbb
adc
xchg
leave
inc
repnz
fs
jecxz
or
pop
push
or
mov
sarb
shll
xchg
enter
cmc
pop
mov
js
pop
rcr
js
sbb
ss
popl
stos
fisttpl
popf
pop
cli
dec
xor
inc
pushf
push
fs
cmpsl
lea
movsl
lods
popf
inc
in
bound
sbb
mov
adc
sub
cwtl
ss
add
pop
xchg
push
popf
aam
xchg
ret
fisubrs
fs
out
cmp
xchg
push
arpl
add
mov
sbb
mov
repz
hlt
mov
sarb
jno
mov
or
fistl
mov
pushf
fwait
xlat
idivl
cmp
scas
sbb
stos
lcall
jmp
in
ss
sti
xchg
aaa
dec
js
out
fbstp
sub
addr16
dec
cmc
adc
daa
rcrb
xchg
scas
pop
jnp
jbe
xor
dec
sub
xorb
clc
mov
out
lret
out
shlb
sbb
mov
xor
addr16
outsl
adc
pop
xchg
xchg
xchg
add
jle
pop
pop
lret
jp
fcoml
test
cmpb
cld
push
and
in
test
lahf
addr16
into
push
scas
icebp
lahf
add
jmp
xchg
inc
cmp
adc
jl
add
mov
punpcklbw
ret
outsl
sahf
outsl
testb
iret
jmp
cmp
psubusb
paddd
push
dec
clc
dec
inc
xor
pop
cmp
lods
in
mov
mov
dec
out
jbe
push
adc
pop
fnsave
adc
outsl
cld
push
icebp
fistl
nop
rorl
push
pop
scas
int
add
xor
xor
jmp
into
shlw
in
int3
add
xchg
ret
xchg
stos
mov
xchg
adc
mov
push
mov
pop
icebp
push
data16
scas
rol
daa
and
cmovle
movsl
fwait
adcl
pop
jl
add
adc
cmpl
jle
and
pusha
inc
pop
and
insb
lods
adc
or
repnz
jnp
mov
ret
in
in
stos
mov
or
loopne
dec
sub
dec
xchg
adc
xchg
cltd
push
dec
vpmacsdql
addl
xchg
inc
sbb
je
push
xchg
mov
and
adc
sahf
nop
out
lods
cs
ss
js
mov
sbb
xor
dec
dec
xchg
ja
test
sbb
jg
xlat
inc
movsb
adcl
push
jo
sahf
sbb
sub
insl
mov
mov
fdiv
xor
cld
rolb
ret
int
pop
and
lret
add
call
xorb
test
push
mov
daa
imul
sub
sub
mov
mov
sub
mov
dec
ss
icebp
dec
aas
sbb
or
xor
ljmp
out
push
xchg
or
test
stos
in
jge
ja
mov
push
push
aad
sbb
outsl
pushf
sbb
ds
xchg
jp
cmc
fmuls
test
mov
mov
add
shlb
cld
ds
push
lret
xor
xor
xchg
cld
sar
insb
or
ss
aam
jae
aam
sbb
cmpl
insl
arpl
enter
inc
inc
mov
cmp
pop
data16
ret
sbb
sbb
or
adc
inc
fldenv
ljmp
lahf
sbb
mov
mov
mov
sbb
bound
ficoml
cmp
enter
into
pop
cld
mov
mov
test
pushf
into
pop
xor
lea
scas
mov
dec
repnz
pushf
and
sti
mov
pop
ljmp
jae
xchg
rcll
lahf
test
loopne
pop
cs
test
jo
insl
mov
popf
cwtl
mov
xor
sbb
push
mov
fldenv
xchg
ss
imul
push
sub
and
xchg
je
pop
fstpl
pop
loope
pop
push
in
sti
je
negb
inc
or
into
das
cmp
mov
mov
xor
cmpb
push
push
sbb
leave
xor
outsb
xor
inc
adc
add
sub
cmp
inc
push
mov
xor
loope
mov
cld
scas
cmp
cmp
testb
movsl
push
xchg
push
ficomps
fucomip
cltd
cwtl
mov
gs
movsl
rclb
inc
add
ret
mov
xchg
pop
nopl
cmp
sbbl
dec
rcrl
inc
repz
cs
mov
mov
add
jle
push
push
sbb
cs
mov
sbbl
ret
jae
push
ljmp
sub
xchg
rorl
cmc
mov
in
sub
or
xchg
mov
ljmp
fs
test
std
ret
pmuludq
fldt
pop
sub
cmp
jb
dec
je
pop
sbb
xlat
cltd
sbb
stc
mov
jae
in
dec
mov
scas
cmpsl
stc
test
icebp
sarl
jl
mov
inc
xor
lret
push
les
sub
or
scas
adc
and
adc
cli
jg
lods
and
out
sub
pop
pop
enter
jge
popf
pop
push
cmp
push
sbb
test
pushf
mov
sahf
punpckhdq
mov
pop
popf
push
cwtl
and
lea
scas
roll
dec
popf
mov
int
jae
push
adc
and
std
jne
jl
lods
xchg
jmp
mov
loopne
and
ja
data16
sbb
dec
push
clc
xchg
int3
or
test
cltd
dec
sti
and
cmp
shl
aad
sbb
xchg
into
and
jns
xchg
aam
or
cmp
inc
jnp
cmp
mov
pusha
inc
addr16
jp
ss
out
movsb
cmp
hlt
cld
dec
sub
sub
inc
mov
cmp
cltd
mov
xchg
fisubrs
ja
loop
push
pop
sbb
pusha
jb
test
faddl
leave
xchg
pusha
dec
pop
ret
dec
lcall
or
cltd
mov
bound
and
push
imul
jae
push
push
push
dec
divb
mov
sti
int3
cwtl
dec
mov
inc
mov
fisubrl
or
lret
pushf
loop
int3
mov
sub
lcall
push
add
sub
push
push
or
sarl
xchg
fdivs
iret
push
rorl
sbb
mov
ficomps
ss
xchg
mov
push
pop
fstp
arpl
mov
ret
pop
push
mov
dec
outsl
das
pusha
and
xchg
pop
repnz
push
out
addr16
xor
lret
mov
lcall
leave
dec
test
push
int3
and
xor
inc
in
inc
dec
mov
pop
in
rorb
loopne
dec
mov
mul
mov
pop
out
dec
pop
xor
mov
xchg
xchg
mov
mov
mov
repz
daa
jmp
push
xchg
add
ret
inc
cmp
cmc
xchg
pop
pop
je
sbb
je
fdivs
daa
jo
dec
xchg
andl
cmp
out
ret
dec
clc
in
mov
call
push
into
mov
sbb
ja
test
stc
leave
insb
pop
pop
sub
adc
movsb
push
mov
outsb
mov
dec
xor
rcr
push
stc
inc
mov
hlt
sbb
lods
lret
mov
or
add
mov
cmpsl
in
in
push
cmpsb
out
scas
xchg
pop
addr16
push
pushf
sbb
kmovb
or
adc
dec
rcl
bound
jno
lret
xor
int
es
sti
dec
addr16
sub
aam
mov
adc
lods
dec
scas
adc
lds
push
mulb
inc
push
xchg
ss
in
inc
xchg
mov
and
aad
rcrb
jbe
sahf
push
sbb
mulb
ds
fs
xchg
xorl
addr16
and
aaa
cmpsb
xchg
mov
jecxz
xor
mov
jmp
in
cmpb
jg
inc
ja
jp
fiaddl
jae
mov
xchg
cmp
repz
sub
dec
int
sbb
inc
push
jb
sti
sub
sub
pusha
jo
cmp
adc
push
inc
lcall
addb
mov
push
inc
mov
mov
lcall
or
mov
mov
push
and
mov
sbb
in
dec
jno
lcall
cltd
mov
sbb
pop
sub
inc
scas
rorl
dec
xchg
lcall
pop
stc
jbe
idivb
outsw
inc
js
sub
xchg
les
bound
mov
dec
out
lret
mov
mov
or
push
fstl
cmp
rolb
jb
jo
pop
push
faddl
ja
sub
loop
mov
fwait
insb
xchg
push
ja
sbb
test
lods
jns
in
sub
or
outsb
sbb
loop
insl
js
jl
in
lods
inc
fsubs
adc
int3
xchg
flds
cltd
pop
jl
insl
cmp
ret
int
sbb
dec
sub
test
aam
jmp
cmp
mov
inc
jbe
sbb
rcrb
loop
icebp
test
sbb
xchg
adc
shlb
mov
daa
shlb
adc
repnz
sub
add
cmp
addr16
mov
sbb
cmc
scas
dec
mov
pop
aam
adc
mov
inc
aam
mov
xchg
stc
mov
jg
mov
shr
or
jmp
js
or
rclb
lock
rcrl
mov
js
rcr
stos
xchg
xchg
lea
push
clc
mov
shll
lret
sub
pop
pop
jbe
jb
jmp
nop
mov
gs
jp
inc
pop
inc
mov
sbb
xor
roll
mov
fdivs
xchg
stc
xchg
bound
mov
fwait
lds
sub
out
dec
aam
cmp
or
xor
cmpb
xor
mov
repz
xor
dec
push
xchg
sub
fistl
js
stc
jmp
divl
loop
stos
adc
add
mov
loopne
mov
fadds
stos
popf
cmp
pop
cmpsl
andl
lcall
mov
cli
es
jp
jbe
gs
jae
pop
push
pop
push
hlt
call
mov
push
lahf
dec
push
iret
mov
push
test
out
adc
add
mov
inc
sub
push
insl
std
ret
sbb
loopne
jbe
jmp
pushw
jnp
pop
addr16
pop
cmpsb
aad
pop
jb
dec
ss
and
dec
das
pop
outsb
pop
cltd
imul
lahf
adc
jmp
cs
inc
push
icebp
rcrb
add
mov
ljmp
push
scas
push
jmp
sahf
stos
fwait
dec
add
and
xor
fwait
push
jl
andl
sbb
sbb
mov
insl
aad
cmp
sahf
fwait
lods
in
push
repz
ficoms
mov
cwtl
xor
aaa
xor
inc
jne
jb
sub
push
add
popa
rcrl
xor
or
jbe
push
sub
pop
mov
jae
inc
in
lea
andl
lcall
or
pop
or
lock
popf
sbb
testb
testb
mov
pop
mov
or
or
push
jb
pop
movsl
pop
jb
sub
xchg
shlb
sub
push
test
mov
mov
mov
aam
lods
xchg
cmp
imul
inc
cmp
das
test
mov
adc
call
iret
xchg
xlat
mov
dec
sbb
fwait
pop
inc
leave
and
mov
inc
push
dec
fstpl
mov
es
sub
movsb
jmp
xor
cmc
mov
pop
es
imul
lods
orb
pop
push
dec
jbe
sub
fptan
je
and
cld
ficoml
or
or
jge
and
xchg
mov
xor
pushf
ljmp
test
dec
jmp
pop
push
push
cmp
icebp
pop
bound
sub
pop
hlt
test
xor
jp
mov
ret
iret
push
fbstp
sub
in
push
push
pop
lds
loopne
arpl
je
loopne
pop
mov
test
adc
jne
aas
fidivrs
pop
insl
les
lahf
add
mov
add
stos
test
jb
movsb
int3
jg
cmp
aas
test
stc
cmpsb
jg
mov
jb
in
jl
mov
mov
cli
push
out
fsubrp
adc
lahf
out
sub
mov
pusha
push
imul
dec
stc
in
cmp
cld
jmp
cmp
xchg
hlt
and
cmpsl
xor
ja
adc
sbb
stos
xchg
insl
inc
jnp
imul
lds
repnz
push
adcl
jne
xlat
sti
push
lret
lock
inc
into
cmp
cmp
std
stc
sbb
aad
pop
cld
or
notl
mov
test
fdivs
sub
push
sarb
arpl
adc
pop
movsb
push
stos
push
into
dec
push
cltd
dec
mov
mov
aam
xchg
adc
add
fs
out
jmp
iret
icebp
iret
sbb
add
pop
mov
mov
jle
les
xchg
pop
push
test
pop
lods
lret
jno
sbb
adc
inc
scas
push
xchg
xor
push
out
les
repnz
cmpsl
fcom
movntps
in
aad
loope
imul
xchg
out
and
in
mov
call
cltd
insb
cltd
sbb
push
xor
mov
mov
cmpsl
sbb
ds
stos
xlat
dec
repz
jb
push
test
push
push
aas
fcmovbe
or
rep
lret
stos
push
es
scas
dec
inc
cwtl
adc
xchg
add
cmp
adc
mov
adc
mov
loop
mov
movl
jle
adc
xchg
push
mov
shrl
mov
pop
pop
fdivr
les
clc
push
loope
dec
call
jno
std
inc
in
lods
pop
stos
sub
pop
ror
lds
call
fidivrs
jg
test
popf
or
shl
adc
data16
xchg
mov
stos
cld
movsb
xor
stos
das
scas
sbb
xchg
fistps
sbb
dec
decl
mov
xor
xor
sub
inc
dec
or
jne
xchg
je
fmul
lds
cli
cmp
add
lret
pop
mov
mov
test
adc
sub
in
pop
sbb
jecxz
loop
jecxz
leave
jg
cmp
inc
mov
cmp
pop
and
jle
pop
sbb
das
test
or
or
or
jbe
lahf
sbb
mov
ljmp
out
in
das
out
or
aam
pusha
inc
or
mov
insl
push
imul
cmp
sarl
cmp
and
rolb
fcoml
lods
sbb
pop
jl
aad
sarb
test
hlt
mov
out
mov
push
es
cmc
push
je
xchg
push
and
loop
jecxz
les
ljmp
inc
test
aad
inc
hlt
das
mov
cli
cmp
jg
cmp
add
pop
push
fiadds
pop
jno
dec
or
test
fdivrs
aam
jp
out
mov
pop
dec
mov
pop
xchg
das
push
out
dec
lods
xorb
iret
dec
jmp
aas
sub
jne
or
adc
int
mov
out
jmp
dec
call
insl
mov
andb
nop
mov
mov
or
dec
pop
jle
iret
sti
mov
xchg
fs
inc
cltd
pop
or
sbb
je
xchg
cmp
ret
jb
lret
jmp
push
cmp
movsl
pop
aas
mov
inc
dec
mov
imul
pushl
pop
pop
insl
mov
and
mov
jl
mov
pop
xchg
fwait
cmp
fimuls
cmp
arpl
jmp
jb
iret
push
dec
loopne
or
xchg
pop
inc
std
jnp
sub
imul
mov
stos
lret
xor
add
cmp
sahf
mov
mov
mov
push
ficomps
jns
push
lahf
cmpsb
mov
pop
push
cmp
sbb
sub
aam
cmp
mov
jg
ds
inc
repz
ret
clc
fistl
add
mov
mov
push
add
les
jmp
fldl
mov
inc
testl
mov
push
inc
mov
mov
mov
add
repz
ss
out
and
outsl
dec
sub
movsb
adc
dec
inc
popa
mov
pop
shlb
adc
sub
fbld
ret
cmp
test
addr16
outsb
lods
fs
mov
jecxz
push
repz
insl
mov
test
push
pop
test
xor
clc
inc
lods
mov
mov
adc
mull
push
rcr
push
rorl
adc
mov
movsl
lahf
xchg
mov
int
mov
nop
cmp
cmp
flds
jge
std
sbb
mov
lea
repz
add
xchg
inc
int
lods
mov
pop
std
leave
orl
shll
mov
loopne
xor
jle
dec
mov
icebp
outsb
bound
mov
and
cs
fildl
test
fwait
fs
sbb
xor
aam
aaa
roll
rorl
aad
xchg
je
and
mov
cld
call
adc
fistps
mov
in
or
in
xor
lahf
adc
push
add
mov
into
cli
sbb
lea
daa
in
iret
jmp
sti
inc
dec
and
jle
addb
or
pop
inc
lret
dec
andb
jle
scas
sbb
imul
pop
out
mov
mov
pop
mov
fcom
cs
arpl
cmp
mov
push
sbb
in
inc
inc
rcll
pop
xchg
test
movsl
cltd
cmp
sbb
inc
or
lock
mov
jp
call
cs
push
std
sbb
dec
ds
js
mov
bound
icebp
push
xor
arpl
cltd
in
pop
lds
adc
jmp
test
push
pop
mov
push
lea
and
loopne
pop
ja
enter
hlt
sbb
xlat
push
jge
push
out
rorl
mov
push
xchg
cwtl
loop
fdivr
mov
test
rol
test
pop
ret
iret
and
sbb
hlt
cmp
stos
cs
or
push
notb
xchg
adc
cmp
add
xlat
xchg
imul
inc
and
xor
aaa
nop
xor
xchg
cmp
dec
cmp
xor
jl
es
outsl
push
jp
sub
ja
clc
jne
fidivl
xchg
cmp
fwait
lret
loope
add
rcrb
arpl
stc
mov
lock
jns
test
out
fs
leave
aaa
add
mov
jnp
fisttps
fs
arpl
fwait
pmaddwd
xor
fdivl
lods
xor
icebp
pop
rol
sbb
sub
aas
and
push
jbe
loopne
addr16
not
fs
sub
jb
js
or
mov
lret
jb
mov
sbb
push
test
mov
cmp
andb
mov
push
push
pop
outsb
mov
lds
add
mov
jne
lcall
dec
ds
sub
mov
or
mov
jg
stc
imul
add
vmovaps
lock
and
jbe
dec
fs
and
aaa
daa
hlt
ljmp
add
lods
lea
je
ljmp
stc
jg
jle
xchg
in
sti
and
jmp
mov
pop
call
lods
add
lret
cmp
insl
jg
lret
adc
ljmp
push
and
scas
mov
jl
icebp
push
sub
mov
iret
and
arpl
ret
daa
dec
pushf
ret
pop
outsb
inc
adc
mov
dec
repz
lret
adc
pop
insb
push
in
fsts
pop
push
add
call
jne
adc
xchg
scas
pop
add
test
mov
sbb
pop
mov
pushf
jns
test
dec
out
sbb
cmp
out
das
pusha
in
mov
pop
and
lock
jo
add
mov
lea
jg
jne
insb
sbb
addl
popa
mov
sub
lahf
out
add
xchg
mov
imul
sahf
sub
outsb
and
fistps
jne
add
cmpsl
mov
fbstp
std
push
inc
mov
mov
hlt
push
jg
mov
test
test
in
cmp
sar
mov
mov
mov
out
jb
jle
insl
push
inc
push
inc
pop
adc
pop
frstor
push
scas
adc
push
mov
xchg
sahf
clc
mov
inc
jle
sbb
ret
lret
aaa
or
xchg
add
mov
mov
fimull
cmc
inc
movsl
decl
test
ja
jg
movsb
cmp
push
inc
mov
cli
add
jge
cmp
mov
sub
fisubrs
aad
xchg
pop
call
cmp
cli
adc
repnz
hlt
stos
jno
jnp
addr16
dec
add
rclb
lahf
sub
mov
div
dec
mov
cld
mov
jecxz
cmpsb
test
enter
int3
cmpsb
push
cmp
sub
ret
dec
xchg
adc
lcall
xchg
fwait
inc
mov
jno
ret
lods
sbb
js
rcr
rorl
dec
jg
sbb
bound
int
push
xchg
int3
and
aam
cwtl
ficoml
and
xorl
mov
cltd
inc
sub
jl
adc
push
out
and
push
jo
sub
sub
mov
jbe
mov
mov
scas
fs
mov
inc
xchg
add
mov
insb
sbb
pop
sbb
pusha
and
imul
xchg
push
int3
jp
push
pushf
jae
push
and
cs
jae
cmc
orb
push
dec
flds
repz
lcall
xor
mov
repz
leave
call
aaa
mov
xchg
xchg
int3
fwait
pop
mov
cltd
test
and
filds
pop
mov
adc
ret
lcall
sub
lcall
and
sbb
out
pop
pusha
shr
mov
xchg
ret
lds
xchg
jl
jne
insl
mov
cmc
dec
loopne
push
and
movsb
jbe
mov
add
jmp
and
std
dec
mov
ss
inc
xor
sub
fists
push
ret
outsb
mov
test
mov
sub
andl
and
cmp
out
or
repz
push
in
je
push
mov
loope
pop
jno
call
xor
outsl
mov
shlb
dec
push
mov
dec
fsub
or
push
ret
sub
in
std
inc
inc
ljmp
rclb
in
mov
mov
sbb
and
mov
mov
inc
sbb
mov
outsl
mov
adc
mov
movsl
in
outsb
das
mov
lcall
imulb
inc
xchg
jne
sub
stos
mov
mov
dec
push
out
and
jmp
inc
aam
orb
jno
sub
sarl
out
sbb
mov
xchg
xchg
jno
ret
sahf
mov
aam
mov
xor
movsl
dec
xchg
inc
cmp
jp
xchg
mov
jmp
inc
mov
pop
add
cmp
ret
mov
pop
add
push
aaa
stos
jmp
xchg
mov
in
xor
pop
push
pop
sbb
jmp
mov
pop
jge
or
popf
mov
inc
addl
mov
lret
jno
pushf
ficomps
stc
ds
inc
pop
and
mov
sbb
enter
xor
mov
or
xor
add
fs
pop
pusha
data16
jecxz
daa
mov
lods
aas
repnz
addr16
cld
mov
scas
iret
dec
lea
sbb
add
mov
mov
cmc
mov
mov
iret
xor
jns
mov
jge
hlt
mov
stos
mov
mov
mov
pop
adc
cmp
out
pop
sbb
and
notl
jb
mov
imull
clc
cld
mov
fsubl
and
lahf
or
loopne
scas
push
xchg
in
jnp
hlt
mov
sbb
cld
test
fisttps
mov
add
int3
mov
rcl
cmp
in
dec
push
lock
dec
popf
dec
add
hlt
sbb
outsl
push
xchg
and
mov
cmp
lret
out
pusha
xchg
sbb
cmpl
jbe
aad
icebp
cli
ficompl
mov
pop
icebp
adc
and
or
shll
repz
cld
mov
inc
add
fs
in
ljmp
lret
inc
iret
and
int
xchg
in
sub
mov
or
outsb
ja
sbb
mov
stos
data16
pop
fnstsw
fdiv
add
or
pop
lcall
cwtl
sbb
jle
cmc
cli
mov
fwait
sbb
sub
sub
popf
call
adc
enter
int
push
xor
stos
test
jo
push
aad
dec
cld
xlat
or
lock
mov
pop
aaa
in
jnp
mov
cmpsl
mov
mov
dec
pop
mov
mov
loope
mov
shll
dec
mov
and
xor
pushf
push
clc
sub
dec
jnp
mov
lahf
jb
fs
push
pop
jge
mov
and
lock
add
push
push
and
mov
inc
ljmp
inc
popf
push
out
outsb
xor
adc
popf
fistl
inc
xchg
or
push
jmp
xor
cmp
inc
into
mov
xor
lods
int3
sbb
sahf
pop
mov
xor
pop
dec
cmovs
jo
add
jb
and
jmp
loope
jb
jp
and
mov
push
icebp
xchg
dec
arpl
mov
not
aaa
lods
inc
iret
mov
cmp
scas
pop
xchg
jle
push
les
subb
sub
push
sahf
loopne
es
add
jne
arpl
icebp
test
cli
int3
fsubs
and
add
pop
repz
dec
mov
ret
sub
idiv
jo
pop
pop
fldcw
pop
incb
fwait
xor
lods
cmpsb
jo
add
add
cld
and
icebp
mov
push
pop
inc
sbbl
jmp
sub
imul
fisttps
add
push
push
iret
mov
jg
cmp
inc
mov
and
push
jbe
aas
jge
push
ljmp
push
lahf
mov
mov
shlb
mov
loopne
jb
and
shlb
cmpsl
shll
imul
push
out
fmul
jle
fisubs
daa
dec
mov
dec
adc
insb
and
pop
hlt
push
fiaddl
jo
fidivl
mov
pop
loope
sahf
cmpsb
mov
dec
lahf
pop
xlat
in
xlat
das
pushf
pop
lahf
out
pop
inc
cmp
shlb
adc
inc
je
stc
push
jnp
sub
add
jno
mov
push
push
addl
sub
push
dec
jge
lret
pop
jmp
aas
xchg
ret
push
arpl
loope
bound
int3
iret
into
jb
add
orb
cwtl
bound
mov
pop
ds
flds
adc
push
shl
test
mov
and
xor
aas
ljmp
cmp
pop
aad
inc
out
inc
je
mov
andl
test
pop
ficoms
loope
or
pop
mov
adc
xchg
out
loop
mov
mov
loop
dec
imulb
shlb
movsl
dec
cmp
or
adc
adc
and
stos
sub
fbld
adc
test
idiv
adc
inc
rcrb
lea
and
xor
pop
xchg
xchg
cmp
insb
push
addr16
and
jge
or
xor
xchg
jl
mov
movsl
mov
sbb
notb
adc
pop
or
add
test
dec
jmp
mov
loopne
addr16
aad
test
inc
cmp
mov
xchg
outsl
int
lea
sbb
loope
test
xchg
sub
jns
notb
dec
sub
ret
cmp
outsb
adc
out
push
sahf
xor
dec
mov
mov
imul
push
hlt
inc
sub
aaa
xor
or
pushf
rclb
mov
in
jmp
inc
xor
and
xor
and
test
repnz
and
sub
lret
and
sarl
mov
psrad
mov
cmpsl
push
pop
leave
out
xor
scas
outsl
mov
pop
icebp
jge
gs
push
push
inc
push
orb
ja
cmp
add
jae
add
pusha
arpl
pop
lods
sbb
mov
fsts
add
adc
loopne
mov
jge
lcall
mov
dec
fiadds
fsts
into
imulb
imul
fnsave
mov
fdivrs
or
shlb
mov
mov
mov
and
and
inc
pushf
ret
sub
addr16
lret
fwait
adc
lea
imul
int
jp
ds
mov
mov
std
test
jp
push
dec
les
stos
and
or
call
lds
add
dec
js
aaa
cwtl
icebp
mov
fdivrs
jb
hlt
test
leave
fisubrs
jbe
pop
push
dec
mov
adcl
mov
mov
ja
inc
mov
mov
xor
clc
stc
push
sbb
mov
cli
rcr
cmp
test
icebp
in
ljmp
jp
pop
or
or
jno
inc
push
add
cli
and
popf
rcrb
loope
adc
inc
pop
add
jne
or
lahf
dec
dec
test
mov
scas
or
xor
cld
jnp
add
popa
adc
cmp
iret
andl
pop
roll
push
jmp
lds
movsl
and
repz
sub
ss
xchg
mov
mov
sbb
fsts
stc
push
push
imul
cmp
jne
imul
mov
fs
and
enter
aam
push
inc
jno
xchg
jmp
mov
je
mov
stc
int3
jmp
xchg
test
mov
addr16
push
jge
mov
adc
and
pop
pusha
add
add
inc
mov
dec
and
lods
in
mov
jecxz
stos
mov
in
movsb
test
mov
cmc
push
inc
sbb
in
ror
xchg
xorb
outsl
push
out
cmp
loopne
out
aam
cmpsb
cmp
aas
pop
mov
push
scas
out
dec
cmp
adc
mov
push
enter
and
pop
mov
and
inc
shrb
jle
xor
inc
xchg
mov
pushf
push
mov
pop
sub
rclb
cltd
jbe
cli
imul
test
addr16
aad
cmpsb
mov
mov
loop
insb
out
mov
loope
sti
dec
push
jnp
mov
or
insl
jbe
lods
mov
ss
pop
out
jnp
movsl
xor
sbb
mov
mov
int
sbb
or
jge
mov
nop
gs
addr16
cmpsl
popa
xor
adc
fcmovnu
cli
pop
fdivrl
idivb
jge
xlat
sub
mov
ljmp
add
xchg
stc
dec
pop
sbbl
jb
hlt
pop
sub
mov
or
cmovae
or
lds
rorb
dec
and
mov
mov
sbb
mov
fstps
cmp
lahf
testb
xchg
xchg
mov
xor
movsb
sbb
out
push
pop
xlat
dec
iret
test
ljmp
lods
cld
scas
iret
into
adc
fs
fstpl
lods
lret
pop
mov
lods
hlt
pop
stc
lock
in
pushf
hlt
cmp
cmp
pop
std
in
aaa
cmp
jge
mov
scas
xchg
xor
outsb
lea
xchg
or
lret
push
shrb
sub
cmp
sub
out
fdivl
out
add
rorb
mov
lahf
inc
sbb
repnz
mov
pop
outsl
inc
movsl
sub
pushf
das
jge
stos
jg
popf
adc
sti
jbe
mov
int
js
or
lcall
adc
or
inc
sub
xchg
push
test
or
xchg
push
mov
push
jg
push
sti
aam
imul
xchg
rcrb
lods
and
lock
insl
arpl
inc
fwait
mov
or
stc
xchg
mov
xchg
in
sub
add
fadds
xor
fadds
ret
and
pushf
je
ja
ret
out
lods
stc
mov
mov
outsb
sbb
es
fstl
xlat
fdivr
popf
pop
push
mov
sub
inc
cmp
xor
fcomps
cmp
ss
push
sub
push
leave
pop
mov
lods
outsb
popf
add
add
mov
icebp
sub
loop
mov
in
sub
imul
jecxz
push
ja
xor
pop
movmskps
and
xor
movsl
xchg
jmp
repz
jo
push
dec
shll
mov
test
mov
cli
call
lea
repz
cmp
pop
cmpl
adcb
loopne
aaa
leave
cld
arpl
sub
and
sbb
push
jae
adc
jle
mov
jmp
testl
cwtl
jmp
adc
ret
dec
pop
cmpsl
mov
cmp
xchg
jle
lock
in
out
pop
pop
xor
nop
sarl
and
sahf
shr
sbb
outsb
cmp
aam
mov
push
inc
rcrb
jno
movl
inc
sbb
fsubl
push
call
popf
cmpsl
sub
insb
lahf
push
jns
iret
std
sarb
sub
sbb
push
ja
cmc
mov
test
addr16
jns
sub
jp
cmc
push
cmp
lretw
inc
das
jne
js
and
test
lea
jo
push
repz
ret
or
xor
push
jbe
lods
ret
lea
jo
in
je
sbb
pop
testl
nop
dec
pop
mov
lret
and
or
jle
stc
pop
scas
jmp
jmp
mov
fwait
push
push
movsb
or
cmpsl
pop
cltd
adc
call
mov
call
xchg
xchg
addl
sub
push
dec
icebp
jg
outsb
stos
popf
test
mov
cli
and
insl
out
jmp
push
pop
in
les
inc
inc
filds
cmp
sub
popf
lock
xor
hlt
pop
inc
pop
sahf
push
addr16
pop
lods
ss
addb
xchg
or
fwait
xchg
rcl
xlat
shr
jno
ljmp
andl
mov
xor
fwait
push
jno
ret
mov
and
cmpsb
adc
dec
iret
mov
fcompl
std
cmp
sub
das
push
aad
loopne
jl
add
cli
clc
imul
data16
push
jge
xchg
mov
or
pop
imul
ret
or
cmp
sub
mov
push
sbb
stos
stos
cmp
pop
lock
add
mov
add
dec
pop
cmp
je
or
xchg
lock
popf
stos
push
dec
leave
insl
cmp
pop
mov
pop
mov
sub
inc
pop
rolb
mov
cmp
adcl
lret
mov
jge
xchg
nop
sub
mov
push
mov
rcll
xchg
dec
jb
inc
rcrb
mov
cmp
out
ficompl
dec
mov
mov
jg
inc
sahf
sub
xchg
cmpsl
pop
fnstsw
daa
stc
rclb
jle
mov
push
int
dec
pop
leave
rclb
jp
test
dec
out
add
es
mov
adc
cs
jnp
inc
adc
xor
mov
repnz
xor
fimull
mov
jae
mov
cld
jge
mov
and
ret
aas
mov
push
pop
fcmovnu
xchg
or
dec
rcll
fdivl
dec
mov
jb
jecxz
mov
cld
orb
cs
add
sbb
sub
cld
dec
ds
cld
xlat
pop
ret
lock
pop
jns
in
cs
pop
pop
push
add
inc
xchg
loope
cmp
lock
leave
negb
sbb
mov
int3
sub
mov
push
xlat
sub
subb
fists
xor
jmp
cli
cmp
jb
aas
lods
nopl
pop
lock
sub
shr
mov
imul
pop
dec
out
adc
es
cwtl
mov
mov
call
cld
shlb
add
outsb
pop
mov
lahf
mul
sbb
jb
orb
cmp
lods
jp,pn
into
dec
jmp
inc
test
sub
ret
sbb
jmp
lea
mov
int3
xchg
mulb
pop
cs
jb
dec
scas
fimull
pushw
adc
sti
push
jbe
cmp
fdivl
sub
loop
mov
aad
jno
inc
out
sahf
int
jne
bnd
dec
cld
mov
outsb
push
dec
and
mov
movsl
stc
fwait
dec
jmp
lods
fstpl
or
and
jae
jbe,pt
es
push
mov
add
add
orb
sbb
push
roll
addr16
mov
mov
outsb
arpl
xchg
adc
imul
lahf
into
push
xchg
loope
or
hlt
in
lods
je
sbb
dec
shlb
jmp
into
or
add
xor
enter
loopne
inc
push
jns
sub
mov
pop
test
fnstcw
adc
xor
cmp
mov
or
sbb
push
test
mov
loop
push
hlt
daa
sub
add
push
sbb
mov
out
aas
ret
inc
add
jbe
mov
inc
push
das
aam
lahf
lea
jo
pop
cmp
inc
mov
imulb
hlt
loope
mov
popa
sub
lods
xchg
in
flds
loope
fistpll
ds
push
push
mov
movl
pop
data16
fwait
mov
inc
mov
xchg
mov
rcl
in
and
mov
adc
arpl
mov
xor
jno
jno
mov
fcompl
sub
outsb
pop
mov
pop
out
and
arpl
add
dec
shlb
scas
sub
sbb
pop
xchg
mov
push
test
adc
fists
mov
sub
xorl
inc
jnp
nop
hlt
cmpsb
out
dec
add
cwtl
sbb
ret
outsb
pop
outsl
inc
mov
femms
pop
stc
outsb
je
xor
jno
out
fcomp
jl
cmp
push
inc
js
cmc
add
xlat
ds
xor
lret
xlat
add
add
xchg
add
andb
jae
test
ret
incb
mov
inc
addr16
in
fisubs
nop
pop
cmp
lret
jo
fnstcw
xchg
into
aam
xchg
and
loope
movb
cmp
dec
inc
sbb
cs
dec
shrl
sbb
pusha
jl
sub
and
pop
test
jmp
and
push
call
sti
mov
and
xor
lahf
ja
jmp
fcmovbe
sub
ret
lret
mov
push
xchg
and
popf
sub
mov
adc
mov
roll
xchg
mov
fstpt
jnp
cmpsb
pop
lahf
dec
fs
add
test
int3
xor
decb
insb
jp
shlb
enter
aam
dec
ja
jle
mov
leave
sub
inc
ljmp
scas
dec
mov
xchg
lea
dec
lds
jae
pop
iret
jbe
std
ret
clc
jmp
lods
mov
cmc
jns
in
push
push
adcl
mov
gs
fdivrs
mov
jne
out
or
int3
mov
negb
or
imul
sahf
bound
sarl
repz
dec
incb
ja
dec
popa
dec
mov
cmc
inc
imul
lock
mov
push
outsl
xor
xor
pop
push
ret
sub
push
xchg
shrl
mov
lret
cmp
iret
loop
aas
cs
sub
ret
jnp
stc
dec
daa
lahf
int3
cmpb
cmp
inc
cmpl
ljmp
jne
out
loope
push
lret
or
jge
cli
movsb
orb
div
add
cmc
and
ss
sub
out
lcall
lock
out
test
testb
push
insb
sub
out
sbb
push
or
inc
jbe
inc
cwtl
sub
and
or
iret
xchg
jge
addr16
mov
inc
std
push
xchg
mov
orb
and
imul
shll
push
sub
rol
xchg
cmp
mov
cmpsl
lea
repz
pop
push
stos
xor
loope
rolb
sahf
dec
dec
gs
pop
mov
and
fsts
repnz
add
inc
scas
loope
fimuls
jb
xchg
mov
mov
dec
xchg
sub
fdivp
or
mov
das
jp
mov
imul
xlat
in
dec
movsb
push
jmp
rclb
jp
fstps
inc
adc
in
scas
lock
push
jmp
cmpl
mov
adc
xor
imul
mov
mov
test
add
lret
cmp
js
mov
xchg
add
add
push
pop
lcall
ljmp
lcall
adc
imul
sub
or
xlat
imul
aaa
mov
insb
sahf
and
mov
or
sbb
mov
jae
das
ds
fiadds
leave
xor
inc
call
popa
sbb
mov
jne
fstps
mov
fidivrs
xchg
jno
imul
dec
fiadds
push
out
in
add
ret
push
mov
imul
xchg
xchg
into
jb
pop
mov
mov
ret
adcl
lahf
repz
mov
mov
mov
adcb
xchg
pop
popf
mov
call
xchg
cmp
movsl
add
int3
or
mov
jmp
push
sub
not
aam
aaa
push
mov
jmp
in
xor
pop
pusha
adc
mov
or
loop
js
call
mov
out
popf
into
test
adc
les
in
pop
mov
cmpb
sbb
mov
jge
mov
dec
xchg
or
cmpsb
test
mov
push
je
stc
test
pop
stos
shrl
add
mov
dec
cs
cmp
fbstp
cmpl
adc
pop
hlt
cmp
imul
adc
dec
repnz
jl
add
jnp
inc
in
fimuls
std
popf
pop
sbb
sbb
aad
sbb
shrl
xchg
jnp
mov
inc
cmp
stos
lock
imul
sbb
and
inc
mov
pop
mov
sbbb
inc
inc
push
or
pusha
mov
inc
cli
pop
mov
and
je
and
push
pusha
je
sarb
mov
adc
jl
or
repz
fnstcw
push
push
and
out
adc
jg
xchg
faddl
lea
pop
loopne
jge
cmpsl
or
in
mov
add
pop
out
jae
add
js
cld
jb
jl
rcrl
dec
push
dec
lret
fstpt
cmp
add
cwtl
out
inc
adc
mov
frstor
out
dec
inc
adc
enter
push
cld
sarl
sbb
cmp
loope
mov
push
sarl
mov
pop
jle
mov
xorl
ja
sub
mov
jge
in
xchg
xchg
stc
imul
push
push
pop
pmaddwd
outsb
mov
movsb
mov
push
imul
in
adc
cwtl
add
data16
cmp
xchg
pop
lods
js
mov
dec
jg
add
push
fwait
cli
ret
xchg
inc
pop
mov
push
jle
push
and
cs
ret
dec
inc
mov
push
lds
movsl
aam
xchg
jo
jle
stc
std
test
adc
sbb
sbbb
mov
jecxz
dec
xchg
scas
mov
imul
mov
jb
test
dec
cmp
xor
int
jo
xor
add
sbb
roll
gs
cmp
lret
dec
lahf
in
add
mov
inc
stos
dec
dec
jecxz
jo
mov
jnp
dec
adc
push
and
mov
jg
xchg
mov
mul
dec
test
jecxz
mov
mov
movsb
test
add
rcl
sub
loopne
ficompl
xchg
fsubs
mov
aam
jmp
sub
sub
in
fsubs
sbb
inc
fisubl
ja
test
xchg
add
pop
int3
fs
ss
bound
mov
decb
pop
mov
icebp
loopne
fsub
ret
mov
dec
mov
int
mov
add
sbb
pop
add
push
fstp
xchg
fbld
cmp
orb
shr
or
ffree
popl
pop
lcall
mov
jne
inc
mov
dec
xchg
cmp
cmpb
bound
and
push
movsb
loop
adc
std
push
inc
xchg
ja
sub
sbb
jle
inc
cld
jbe
fidivrl
ja
lret
daa
lock
std
ret
mov
sub
mov
push
or
adc
sarl
mov
les
sahf
subl
scas
cmp
cmp
xor
mov
jbe
sub
cs
cmp
dec
int3
sbb
andb
or
adc
and
mov
insl
push
rorl
repnz
mov
push
stos
push
mov
jbe
arpl
jge
mov
fisubl
lcall
mov
decb
add
sub
pop
add
ss
mov
jp
and
cli
outsl
xor
into
jae,pn
xchg
in
sbb
mov
pop
into
push
shrl
sub
adcb
mov
cmp
dec
out
stos
das
out
aas
mov
mov
cmp
xchg
mov
enter
lcall
in
pop
jl
fwait
sub
mov
cmpsb
adc
xor
setp
jle
pusha
cmp
movsl
or
dec
jg
jbe
sbb
lods
int
inc
loop
jb
movntq
or
lret
aam
aam
jbe
inc
sti
lea
mov
dec
rclb
aad
mov
aas
stos
mov
mov
nop
bound
and
jne
out
jmp
and
sbb
outsl
and
sahf
in
call
test
insl
sbb
shlb
ret
or
daa
mov
jnp
jns
ret
sbb
xor
pushf
popa
fs
adc
fcomps
in
sub
adc
mov
xor
dec
call
cmp
test
jge
xchg
or
add
scas
test
shll
mov
rclb
add
mov
and
pop
movsl
enter
sub
push
aad
push
fwait
dec
sbb
and
push
dec
sbb
daa
fucomi
mov
enter
int
dec
imul
test
pop
aam
testb
sbb
xor
mov
das
leave
pop
inc
or
sub
xchg
loopne
mov
ja
pop
stos
adc
cmp
out
jl
mov
mov
call
add
mov
add
adc
cld
outsl
xor
aas
jbe
or
inc
mov
scas
leave
sbb
mov
jnp
pop
enter
jno
sub
push
movsb
pop
jb
popa
xchg
push
test
push
inc
mov
mov
xchg
mov
sub
sbb
aaa
addr16
mov
outsl
mov
dec
inc
movsb
fdivl
jmp
cmc
mov
aaa
mov
dec
in
lret
mov
mov
push
push
xchg
adc
jp
cs
sti
adc
cwtl
mov
lret
xor
adc
add
or
nop
push
pushf
xlat
in
jb
in
aam
mov
andb
rclb
jbe
bound
das
or
mov
lea
cmp
stos
negb
jno
lret
das
add
rclb
bound
insl
in
or
lret
mov
popa
inc
push
jge
shll
call
shlb
fldcw
ret
and
inc
xor
arpl
cli
lcall
cmp
sbb
mov
jo
les
negl
push
mov
clc
movsb
iret
enter
adc
leave
lahf
movsl
addr16
jns
inc
inc
mov
mov
clc
lret
jle
cmp
mov
ds
sub
lcall
xor
pop
je
dec
push
mov
push
mov
addr16
push
push
mov
mov
fadds
adcb
sub
push
jno
push
dec
push
or
rcr
inc
mov
sti
inc
lock
or
outsb
mov
and
movsl
sbb
cltd
sahf
rclb
add
fdivrl
mov
push
fwait
inc
ret
movsl
cmpsb
out
mov
xchg
xor
push
decl
testb
cli
mov
scas
andb
out
adc
mov
jp
fstl
or
cmp
inc
or
cltd
aaa
jl
mov
mov
andb
loope
cmp
pop
mov
sub
fidivs
aad
shll
loop
lea
in
lcall
fwait
inc
xorl
mov
pop
cmc
rcr
loop
lock
mov
mov
out
in
aad
or
scas
fwait
and
aad
xor
mov
xchg
ror
sbb
push
xchg
repz
mov
sub
outsl
std
iret
neg
ja
stos
inc
push
rcrl
adc
sbb
xchg
sbb
test
cmpsl
and
mov
mov
adc
lret
stos
sub
ja
push
loop
rcl
shrb
jp
add
rcpps
xlat
iret
pop
jg
xchg
pushf
jmp
test
rclb
fcoml
fists
ret
jl
subb
xor
or
jmp
push
xor
aas
inc
push
fisubrs
je
push
inc
repnz
xchg
push
xor
push
mov
or
inc
xchg
xor
mov
test
xorl
movsb
adc
dec
outsb
adc
dec
dec
imul
popf
cmp
das
mov
into
sahf
aaa
into
repz
jmp
es
sub
pop
cmp
sbb
gs
nop
roll
cmpsb
out
test
orb
mov
or
jb
loop
ja
dec
adc
pop
in
jb
add
jg
pop
sub
sub
lods
jae
sub
shll
dec
adc
lods
popa
xor
outsl
dec
inc
movsb
or
mov
sarl
push
je
jp
ficompl
popa
push
lcall
fdivrs
incb
sub
pushl
jnp
and
dec
lret
out
and
test
or
loope,pn
inc
cmp
fcmovnu
jmp
dec
into
sub
adc
shl
jno
adc
out
pushw
loop
and
in
es
stos
jle
arpl
out
jg
inc
jg
mov
cltd
movsl
sbb
ja
rcll
cmpsb
sbb
dec
lods
stos
pop
ret
cld
xchg
push
mov
mov
repnz
addb
mov
add
mov
cwtl
mov
xchg
loop
push
push
cmc
dec
push
leave
scas
test
mov
imul
sti
int3
jb
jnp
inc
movsb
jnp
jns
arpl
mov
pop
mov
mov
out
and
jae
das
jle
mov
add
xchg
mov
mov
or
xor
clc
leave
jle
movsb
and
add
lods
pusha
xchg
push
xchg
sbb
mov
push
lea
roll
jbe
sti
insb
sub
loope
push
bound
ljmp
std
or
sbb
andl
mov
iret
dec
add
clc
sub
bound
add
inc
data16
movsb
cmp
cmc
ss
xorb
std
pminub
insl
xor
add
movsl
pop
xchg
xor
into
dec
sub
lret
push
and
xchg
out
push
in
xlat
loopne
js
mov
inc
adc
jnp
stos
imul
xchg
mov
sbb
xor
mov
es
or
ret
mov
pop
in
mov
sub
adc
inc
lret
push
clc
dec
xor
sets
xchg
xor
movsb
push
inc
stos
jmp
mov
and
repnz
fsts
jns
sti
in
cmpb
cmp
inc
fnstenv
insb
xchg
inc
mov
jne
and
mov
pop
jne
sbb
ret
xchg
and
aam
add
adc
std
test
sti
pop
adc
jb
inc
movsb
and
dec
ret
adc
mov
ja
inc
rcll
jle
sbb
dec
cmpsl
sahf
push
sbb
out
mov
outsb
es
push
mov
scas
cmpsb
mov
addb
subl
test
sbb
jmp
cmp
push
subl
stc
lds
iret
lods
add
jb
xchg
scas
ret
cltd
inc
jne
jge
or
lods
bound
inc
inc
sub
test
ds
scas
sub
ds
cmpsl
fidivl
int
mov
ja
cmpb
pop
outsb
data16
adc
jg
ret
push
cltd
xchg
or
shll
xchg
or
lret
lock
mov
inc
mov
and
icebp
insl
jge
fs
insb
inc
mov
test
mov
clc
xchg
imul
lods
lcall
popa
cmp
push
push
insb
mov
les
and
les
sbb
bound
inc
sti
dec
mov
insl
push
jl
shll
pop
shrl
test
cmp
dec
mov
xor
adc
mov
inc
sub
mov
xor
and
lea
lods
sbb
mov
sbb
mov
aam
cld
dec
test
stos
and
fdivl
lock
cmpsl
cmp
sub
inc
imul
ret
cmp
cmp
mov
xchg
fldcw
or
dec
dec
cmpb
or
icebp
mov
or
test
in
and
xchg
es
inc
inc
cli
mov
sub
fnclex
xchg
add
push
in
call
push
movsb
dec
int
ss
pop
sub
imulb
imul
jae
pop
jp
push
mov
sbbb
test
aad
push
add
xchg
mov
js
dec
mov
inc
fucomp
test
xchg
js
add
test
aas
pushf
push
test
aad
rclb
or
lahf
fsubp
xor
fiaddl
xor
xlat
into
push
loopne
add
xchg
popa
sub
adc
stos
or
pop
xlat
addr16
lods
addr16
jecxz
mov
shrl
or
loope
push
leave
lcall
jo
scas
pop
xor
pushf
leave
je
adc
leave
pop
incl
test
cmpsl
mov
and
adc
popa
dec
adc
imul
add
pop
mov
aad
or
jb
mov
push
sub
mov
lods
or
mov
cltd
xchg
jnp
ss
sar
or
test
dec
mov
lret
imul
pop
sbb
popl
dec
fiaddl
enter
dec
sbb
adc
xor
insl
ret
sbb
jg
xor
sub
cmpsl
and
fdivl
adc
mov
gs
push
inc
mov
cld
into
imul
or
inc
insb
push
je
scas
cwtl
dec
mov
mov
mov
push
sbb
enter
aaa
or
mov
or
dec
adcb
dec
and
xor
pop
inc
rcrb
cli
xor
out
enter
adc
sub
pusha
fucom
scas
scas
dec
jecxz
mov
ret
mov
mov
addr16
movsl
cmp
push
lock
clc
bound
aaa
push
fs
inc
scas
pop
imul
sub
scas
ret
inc
fstpl
add
xor
mov
push
test
jle
rcl
rcr
add
sbb
adc
pop
sbb
pop
mov
lea
dec
cli
iret
jle
inc
pop
add
mov
pop
jecxz
fs
mov
mov
out
daa
xor
imul
and
out
bound
pop
imul
dec
out
sbb
cmpl
fmul
cltd
sub
nop
sub
dec
popf
pop
shll
iret
in
xor
push
adc
lcall
pushf
test
call
gs
mov
pop
push
lea
lret
push
adc
cs
xor
xor
fiaddl
and
pop
insl
dec
xchg
add
outsb
dec
adc
cs
sbb
inc
add
fadd
adc
or
push
pop
xor
das
add
imul
pop
in
jle
ret
arpl
popf
andb
scas
pusha
inc
test
test
jle
lock
stos
mov
ljmp
ret
mov
dec
mov
inc
gs
mov
test
pop
out
jno
pop
adc
out
jge
fwait
sti
lock
add
jmp
jmp
mov
cmpsb
add
aam
pcmpgtb
jg
push
fsub
fs
flds
into
rol
mov
jge
loopne
dec
push
pop
lds
sbb
decb
mov
outsl
mov
repz
sub
aad
enter
test
pop
cmp
js
mov
loope
and
cmp
and
sub
push
leave
in
hlt
push
xchg
addl
mov
adc
jmp
movb
inc
loop
add
push
jb
jmp
pop
inc
add
lret
fbstp
orl
orl
xchg
outsl
inc
js
mov
adcl
addl
lret
or
cmp
mov
cmp
sub
scas
leave
sub
adc
inc
das
mov
sbb
into
sahf
add
nop
mov
sub
test
shl
movl
cmp
xchg
mov
mov
in
cltd
lods
mov
push
scas
aas
push
xor
dec
loop
add
enter
fmulp
cmp
jbe
clc
xchg
cmp
mov
nop
add
pop
int3
cbtw
or
xchg
ds
jg
push
test
xor
mov
jno
push
adc
jbe
lods
pop
ret
jmp
mov
cmp
pop
outsb
idivl
pop
xchg
jecxz
pop
js
sbb
inc
imul
mov
and
push
sub
icebp
iret
iret
fs
adc
jb
rcl
mov
scas
sbb
pop
lahf
rcl
sbb
nop
mov
jmp
pop
sbb
repnz
cmpsb
imul
sub
rolb
or
stc
push
rcr
sahf
or
int3
jge
jmp
ds
xchg
lcall
sub
test
sti
adc
mov
lds
xchg
add
cli
loope
sahf
xchg
je
inc
dec
fistpl
add
mov
push
js
sahf
jb
adc
in
cmp
mov
add
mov
ljmp
std
bound
jmp
xlat
ret
push
clc
addl
fidivl
sbb
mov
fldenv
pop
push
add
sbb
xchg
scas
ret
addr16
fwait
jmp
ss
pop
sub
cmp
push
loop
jmp
xchg
rorl
shr
nop
addr16
je
ret
xchg
loop
inc
mov
insb
jne
les
lock
pop
mov
dec
jno
pop
mov
inc
sti
repz
mov
int3
fidivl
cmp
mov
or
sub
xor
sbb
arpl
jmp
adcb
push
ds
cmp
adc
out
jnp
push
mov
lcall
dec
cmp
mov
sti
out
aad
pushf
adc
lock
testb
adc
or
push
shrl
aaa
xor
mov
into
mov
pop
or
pop
mov
push
aas
in
xor
ret
scas
or
or
loop
pushf
sbbb
sbb
jl
mov
fsubr
ret
rolb
adc
push
xor
ror
stos
aad
out
xor
sub
or
mov
test
mov
jns
add
sub
andb
cli
xor
xor
movsb
icebp
aam
movsb
fstpl
or
adc
push
dec
xchg
push
or
test
cld
pop
test
cmpsl
lock
dec
xchg
cmpsl
ja
nop
hlt
insl
std
or
in
mov
mov
addl
push
test
cmp
movsb
dec
fnstenv
mov
adc
insl
dec
outsl
mov
repz
lret
sub
jno
out
in
hlt
test
jle
pop
cmp
out
mov
mov
addl
outsb
mov
mov
sub
xchg
or
sub
sub
push
and
push
fmuls
rcrl
adc
popf
xor
repnz
mov
ror
lret
gs
jb
lcall
jp
and
scas
aaa
pop
enter
inc
adc
fwait
ds
pop
xor
ljmp
push
cmp
xor
jecxz
cli
cli
xor
std
cmp
fs
insl
into
testl
or
jb
adc
std
sub
jp
xor
xchg
jbe
add
shll
dec
rol
mov
cmp
mov
jle
aad
push
leave
sbb
or
cmp
movsb
in
lock
stos
rorb
lods
mov
adc
mov
jnp
dec
ja
mov
jb
mov
negb
in
cmp
push
xchg
xchg
push
shlb
pop
pop
push
pop
ficoml
or
mov
add
arpl
jge
call
test
stc
sti
or
mov
adc
inc
imul
cmp
jp
or
add
jnp
lods
lea
xlat
mov
inc
cmpb
stc
les
or
lds
xor
jmp
jo
clc
lahf
cld
xor
mov
out
add
in
pop
mov
xor
sahf
and
and
data16
imulb
jo
push
call
in
loop
push
je
jnp
push
je
push
sbb
sub
jl
iret
push
mov
imulb
int
push
orl
pushf
or
mov
or
dec
add
ss
xor
lret
xchg
jns
ret
imul
push
mov
jnp
jno
out
mov
jno
jle
rolb
cmpsl
out
ss
push
xor
in
xchg
sub
movsb
out
push
sub
int
add
lods
inc
mov
cmp
fnstenv
cmp
test
movsb
pushf
aam
xchg
out
into
loope
push
fidivrl
sub
dec
or
push
xchg
movsl
ds
push
in
pop
clc
pop
xor
cmp
outsl
shll
leave
pop
stos
xor
shrl
and
out
cmp
sbb
cmp
imul
ss
push
ja
hlt
xorb
fistps
outsl
mov
ljmp
push
or
pop
or
out
mov
into
popaw
lcall
pop
out
frstor
sbb
ja
movb
lahf
loopne
iret
sub
pop
push
jns
mov
shl
push
rolb
push
movsb
mov
sahf
push
add
adc
mov
gs
cmp
jle
sti
dec
push
cmpsl
js
sbb
pop
jl
pop
repnz
push
std
mov
jge
lcall
js
mov
cmp
lret
pop
jbe
xchg
jp
sub
mov
jb
repz
ret
xor
scas
out
filds
or
out
das
mov
test
subb
mov
icebp
mov
xchg
jnp
inc
mov
cmc
fwait
mov
xchg
mov
mov
and
sub
and
jg
test
mov
out
jae
sahf
pop
out
loopne
lock
outsl
sbb
add
xor
cli
add
dec
sub
sub
jae
aaa
mov
popf
dec
dec
pop
inc
sbb
ja
into
in
in
cmp
mov
bound
icebp
push
and
call
cmp
loope
data16
adc
cwtl
inc
push
jl
sbb
cli
es
jno
lods
sbb
int3
or
mov
fnstenv
lahf
lret
jo
jp
jle
hlt
stc
push
popf
push
jbe
xchg
mov
in
lret
test
insb
xchg
sbb
cld
repnz
lret
jecxz
popa
or
sbb
iret
sbb
sub
jecxz
cwtl
in
pop
push
jns
jne
out
push
hlt
in
push
jns
push
xor
xor
jge
mov
lahf
data16
cmp
movsl
jno
jge
cmp
mov
xchg
mov
cmp
rolb
push
leave
xchg
mov
add
add
mov
lcall
test
adc
scas
xchg
scas
cmp
out
push
mov
pop
add
or
mov
leave
decl
xor
and
ficoms
dec
dec
enter
cmpsb
xchg
rolb
dec
or
movsb
shrl
mov
xor
clc
in
loop
push
mov
lahf
ljmp
mov
inc
pop
lcall
sub
jns
lcall
dec
mov
jo
daa
insl
test
test
dec
sti
mov
xor
add
lods
pop
out
scas
arpl
imul
adc
stos
test
mov
lock
bswap
repnz
outsl
adc
movntps
les
cs
aad
fisubrs
ret
out
pop
rclb
or
mov
xor
or
jmp
push
jle
xchg
subb
xchg
add
sub
ja
outsl
cltd
push
or
andb
iret
andl
push
xor
xchg
xchg
and
cmp
lods
int
out
and
mov
shlb
sbb
mov
add
pop
mov
fs
push
leave
mov
lahf
mov
icebp
int
jno
imul
cmovb
enter
pushl
jecxz
dec
adc
out
push
jbe
inc
mov
xchg
sbb
rclb
seta
sub
and
mov
jg
lock
cld
dec
push
sub
daa
push
shll
mov
les
mov
adc
xchg
fiadds
icebp
sub
pop
fstpl
or
popa
adc
add
dec
nop
fcmovbe
add
inc
lret
lret
les
jns
into
mov
pop
out
aaa
lods
loopne
add
sub
stos
sub
push
and
fists
cmp
cmpsl
xorl
mov
sbb
movsb
mov
xchg
aad
insb
js
xchg
sbb
push
fsubrs
xor
add
push
mov
outsb
sub
xchg
inc
push
loop
test
mov
xchg
lods
in
cli
jmp
mov
iret
movsb
adc
out
pop
in
pop
inc
popa
pop
jp
xor
pop
ds
in
bound
sub
adc
ret
je
xor
inc
dec
call
jnp
mov
lret
data16
mov
lods
sbb
inc
xchg
fdivrp
pop
dec
or
add
stos
cmp
cmpsb
orl
and
mov
cmp
pop
jmp
inc
ret
in
in
leave
repz
dec
orl
adc
sub
inc
iret
dec
pop
jge
jo
pop
fwait
or
xchg
inc
es
mov
movsl
shlb
sub
call
aam
and
stos
arpl
rcll
push
leave
outsb
je
das
mov
mov
jae
imul
rorb
mov
clc
ret
sub
lods
pop
sbb
pop
lods
aas
push
push
data16
xchg
xchg
mov
fmuls
in
mov
mov
or
adc
lods
clc
mov
outsb
sub
jg
sub
xchg
data16
int3
cmp
in
mov
inc
xchg
lcall
xchg
rcl
mov
pop
loope
sbb
btc
jns
sbbb
push
sub
outsl
mov
push
rolb
adc
dec
std
mov
shlb
cwtl
mov
jns
sahf
fs
push
cmp
rolb
iret
loop
imul
sbb
lds
sbb
out
pushf
sahf
sbb
test
int3
xchg
test
rcll
addr16
dec
jns
sub
jb
shll
rolb
sbb
and
out
mov
jge
xchg
scas
scas
mov
jno
sub
mov
xchg
jo
imul
outsb
mov
sub
jo
test
aaa
push
je
xchg
mov
stos
inc
pop
xchg
xchg
mov
int3
jmp
dec
mov
test
loopne
cmpsl
mov
push
push
push
add
ja
shll
outsb
sub
cmp
push
addb
mov
add
pop
sub
add
xchg
mov
push
xchg
out
fsubl
aam
push
mov
lahf
rorl
sub
jbe
sub
cwtl
bound
into
or
inc
sahf
pop
dec
icebp
dec
aaa
pushf
fsubrl
or
bound
mov
cmp
cmp
pop
data16
div
int3
ret
dec
jne
xchg
xor
stc
jle
adc
jp
aas
lds
and
jecxz
les
mov
inc
fmull
sub
pop
push
lret
mov
loopne
sbb
add
mov
adc
js
xor
scas
lea
test
pop
sbbb
popf
hlt
pop
sbb
xor
shrb
sub
mov
mov
sub
test
rcl
adcb
mov
fcmovb
lret
ja
sbb
mov
sti
push
add
cmp
hlt
je
xchg
jns
mov
mov
push
sub
jle
xchg
cmpl
loopne
jl
adc
lea
mov
hlt
in
fdivrs
iret
shll
fcmovnu
mov
cmc
clc
mov
mov
pop
ja
or
mov
pop
inc
or
xor
shlb
call
mov
push
cmpl
mov
inc
sub
inc
popa
or
fmul
popa
inc
push
mov
xchg
fwait
pop
imul
xchg
cmp
fcmovnbe
outsb
rorl
test
sahf
cld
mov
push
in
mov
xchg
mov
stos
fcomip
xchg
mov
push
aaa
sub
in
mov
lods
iret
jmp
loope
outsb
clc
insb
cmpsl
int
shl
jno
mov
xchg
and
xor
push
mov
sub
jno
push
pop
xor
lahf
mov
sbb
push
adc
popa
mov
pop
xchg
jge
sub
cmp
fbstp
clc
mov
icebp
ja
stc
aam
imulb
out
aam
xchg
dec
xchg
xchg
loopne
je
xor
repz
jns
inc
push
repnz
pop
cmp
dec
subb
mov
or
out
mov
add
outsb
shll
faddl
mov
lret
mov
cwtl
jbe
mov
shlb
mov
cmc
xor
add
aas
adc
loopne
rcr
lock
xor
xchg
push
imul
sbb
or
jne
xchg
inc
std
push
and
lock
jmp
xchg
fcmovnu
aad
lods
sbb
sub
add
fwait
cmp
std
mov
cmpsl
xor
push
pop
dec
xchg
adc
mov
fcmovbe
sbb
push
pop
mov
out
add
add
idivl
test
mov
test
xchg
or
pop
in
cmp
add
xchg
mov
out
scas
dec
enter
fistps
stos
and
fs
scas
add
mov
and
orb
mov
jl
mov
add
test
or
dec
xor
daa
lods
pop
std
mov
fdivrs
xchg
movntq
out
mov
push
cld
jnp
or
aas
sti
aad
cmpsb
sub
je
fs
aas
out
imul
sub
imul
adc
andb
adc
aas
pop
sub
push
or
pop
in
hlt
neg
adc
daa
adc
xor
cs
decl
faddl
sub
int
mov
and
scas
xchg
or
mov
int
inc
mov
mov
push
dec
imul
daa
sar
and
lods
jns
cld
insl
fs
inc
pop
shrb
mov
loop
fwait
nop
mov
aaa
inc
in
movsb
outsl
mov
xor
scas
repz
jmp
and
out
jno
jmp
call
sub
gs
cmp
vpunpckhwd
scas
je
out
jl
fwait
xor
cmp
adc
add
mov
jne
mov
xlat
push
out
push
rcll
jbe
std
int
add
pop
test
cltd
xchg
add
int3
in
cmp
outsb
lret
lret
push
popf
je
pop
xor
sub
adc
add
dec
out
add
test
xchg
mov
lcall
xor
push
pop
push
dec
xor
or
cmpsl
sub
cmp
repnz
dec
dec
insb
sub
das
and
sbb
lret
mov
scas
sbb
jnp
lcall
xchg
xor
lock
lods
rorb
pop
loope
aaa
pop
fidivl
ljmp
popf
cmp
push
aam
push
dec
pushf
push
push
ds
xor
xchg
cmp
je
test
xchg
push
xchg
mov
test
xor
daa
idivl
daa
loope
cmp
xchg
mov
adcb
lret
cltd
xchg
and
imull
jge
stos
fidivrl
push
sbb
mov
sbb
out
mov
adc
pusha
pop
jae
mov
sahf
sahf
xchg
push
mov
ja
rol
insl
mov
pop
pop
dec
icebp
in
popf
cmp
and
ror
inc
adc
dec
adc
pop
push
shll
inc
or
xchg
imul
je
lock
push
out
jg
sub
sarl
lret
cmc
dec
inc
aad
imul
jne
std
xor
sub
push
cmpb
dec
arpl
loop
loopne
pop
add
and
inc
add
cs
add
je
lock
loope
subb
pushf
xchg
xchg
aam
sub
pop
ss
mov
loope
cmp
xchg
into
add
loopne
pushf
iret
cmp
xor
jg
inc
cmp
loop
hlt
lock
andb
sbb
mov
div
lea
sub
adc
jg
cmp
fs
inc
cmp
stc
pushf
test
jecxz
xchg
or
and
push
icebp
lds
adc
fdivl
popa
xchg
bnd
mov
inc
addr16
push
adc
xchg
jne
jge
add
je
in
jno
iret
xchg
es
jmp
rorl
mov
mov
mov
mov
imul
inc
push
xchg
mov
push
rcrl
outsb
in
jmp
sub
ret
cmpsb
xchg
sbb
into
cld
rorb
push
xor
xchg
iret
and
pop
outsl
jge
and
cmp
push
dec
mov
shlb
add
mov
fs
cltd
xor
dec
mov
mov
add
add
and
ret
cmp
andnps
mov
out
push
movq
push
dec
ror
test
enter
stos
aam
cltd
push
lahf
pop
jbe
fs
push
cmc
nop
or
jb
jmp
inc
cmpsl
mov
cmpsl
xchg
repnz
mov
push
push
adc
dec
inc
out
stos
fwait
add
inc
cmp
jae
jp
jecxz
mov
and
add
pop
push
fcoms
xchg
lret
mov
rcrl
cmp
mov
sbbl
mov
push
imul
dec
pop
or
daa
icebp
sbb
mov
aam
sbb
adc
fmull
pop
sarl
xchg
test
adc
lock
fisttpll
xor
sub
dec
shll
mulb
push
jnp
sub
jmp
push
js
and
pop
pusha
mov
dec
loop
cs
dec
hlt
psubusw
adc
cltd
fmuls
test
scas
leave
or
in
rorb
ret
sub
pop
in
xor
icebp
mov
jmp
xchg
or
aam
dec
repnz
cmp
daa
insl
jmp
insb
mov
mov
push
add
idiv
pop
pop
xchg
lods
pop
in
dec
das
shrl
mov
pop
std
fstpt
xor
fwait
mov
sbb
insl
into
adc
xchg
cmpsl
add
notl
lcall
mov
pushf
fldenv
icebp
cmp
mov
adc
fwait
cwtl
cmp
out
fsubl
lods
stos
lds
fstpl
add
mov
pushf
stos
pop
or
xor
aad
inc
lea
pop
push
jge
mov
enter
xchg
sub
or
cld
loope
mov
out
js
inc
sti
pop
mov
outsl
xor
lods
pop
icebp
ffreep
cld
leave
push
bswap
or
jns
jo
incb
mov
jo
or
add
rcrl
out
xor
lret
das
xor
aaa
pop
scas
mov
jge
jmp
jns
inc
mov
lods
jo
mov
fnstenv
xchg
sbb
mov
jmp
adcb
jo
or
cmp
int
in
and
adc
or
or
mov
jle
and
das
adc
rcrl
js
jbe
xlat
nop
insl
jge
and
xor
xlat
movsl
push
test
int3
jbe
adc
cmpsb
mov
imul
mov
xor
jp
xchg
inc
or
inc
push
xchg
fnsave
lods
push
movsl
mov
fldenv
pop
cmpsl
stc
pop
lahf
push
std
dec
push
into
jno
xlat
shll
xor
mov
bound
mov
cmpsb
mov
movb
adc
ret
jp
pop
dec
rcll
pop
sbb
adcl
pop
and
roll
in
cs
mov
add
mov
dec
push
inc
adc
js
mov
aaa
lea
stos
dec
fmuls
out
sub
or
cltd
xchg
scas
pop
sahf
xchg
jle
dec
dec
nop
mov
or
call
call
out
mov
jns
sbb
fstpt
dec
mov
sysexit
pop
in
lahf
add
xorl
dec
mov
aas
push
pusha
loopne
int3
roll
shlb
addr16
pop
negb
ds
fwait
ret
xchg
pusha
in
pop
xchg
jle
andps
daa
shll
push
scas
push
frstor
sub
aad
lcall
push
es
dec
and
cmpsl
xchg
pop
pop
mov
mov
mov
in
mov
inc
jl
pop
mov
jecxz
push
cmp
dec
push
std
adc
popf
lods
inc
fldl
lahf
sarl
ret
cli
sub
in
dec
mov
fistps
dec
sbb
mov
cmp
decb
out
sub
xor
in
xchg
push
push
or
std
clc
pop
push
push
sub
loop
shr
leave
inc
jmp
leave
aad
inc
movsb
movl
inc
xlat
outsl
movsl
neg
and
insl
stos
movsl
lret
jae
jmp
pop
ret
pop
call
call
repnz
out
sbb
push
out
cmp
and
add
pop
and
mov
lods
pop
cmp
shl
mov
cs
sub
jbe
and
test
xorl
or
sbbb
stos
inc
cltd
ja
add
fucom
in
jecxz
sub
push
into
jge
jb
mov
int3
shl
jl
pop
fistpl
push
out
jne
cmpl
lcall
add
jae
mov
cli
inc
into
sti
sub
and
stc
push
and
mov
fsts
sub
mov
dec
enter
js
push
jge
pop
lds
lock
cmc
jno
pop
inc
push
pop
les
xor
xchg
roll
sbb
cwtl
insb
jmp
movsb
mov
adc
clc
jnp
loopne
rcll
shlb
adc
sub
dec
rclb
int
fdivs
div
cwtl
xchg
nop
pushf
and
in
fdiv
jns
popa
mov
cmc
push
push
dec
mov
push
test
into
enter
dec
mov
movsb
sub
insl
dec
dec
pop
sbb
add
and
andl
xchg
je
enter
push
inc
xor
rorb
rcrl
imul
pop
jg,pn
xlat
enter
xor
imul
jns
or
mov
shlb
mov
sub
mov
in
imul
mov
jns
ret
ss
push
jb
test
dec
add
or
push
adc
pushf
xor
mov
testl
and
cmpsl
cld
and
mov
mov
adc
xor
neg
sarb
ret
lret
cmpsl
mov
jns
jp
mov
adc
pusha
jl
mov
lock
roll
outsb
jg
mov
pushf
in
sub
loop
cmp
sub
inc
sarb
jmp
icebp
xor
dec
adc
insb
jbe
js
sbb
jnp
cwtl
aad
mov
pop
pushl
aaa
dec
lods
jle
inc
notb
stos
mov
or
add
pop
ret
mov
mov
repz
xchg
and
pop
cwtl
mov
mov
jo
sub
insb
and
dec
loop
jae
pop
aam
ja
mov
paddq
adc
pop
xor
lea
adc
subl
xchg
mov
loope
hlt
add
cmp
pop
push
mov
add
aad
cwtl
xchg
movsl
and
xchg
dec
mov
test
cmp
stos
fwait
adc
insl
mov
dec
imul
dec
adc
push
loope
xor
mov
sbb
je
jno
icebp
jbe
lods
int
jl
cli
mov
cli
insl
lcall
adc
lcall
rcr
loopne
jno
repz
and
xchg
cmp
js
enter
sbb
cmp
icebp
jge
mov
mov
jo
push
insl
push
scas
cmp
daa
inc
lea
cmp
repz
and
pop
into
cmp
push
add
movsl
push
dec
roll
jb
pop
adc
ss
add
mov
out
mov
mov
lcall
ds
lldt
rorb
movsl
dec
shrb
mov
mov
push
fwait
std
jae
cmp
in
jns
adc
pop
decb
or
xchg
ds
aas
sub
test
jns
int
sub
pop
inc
stc
daa
out
mov
repnz
aad
sub
push
sbb
aam
pop
test
mov
data16
pop
sub
mov
outsb
cmc
js
lahf
jmp
loope
ss
in
xchg
lret
insw
xchg
or
add
pop
adc
out
cltd
mov
xchg
mov
sarl
push
lods
mov
mov
loopne
dec
movsl
sahf
and
dec
lret
push
outsl
ficomps
add
js
ss
lods
dec
fs
lcall
and
sub
mov
roll
jmp
in
xor
cltd
mov
or
sbb
xor
test
jbe
xchg
dec
stc
out
mov
mov
lret
ret
aam
in
insl
addl
inc
loop
imul
inc
rorl
test
add
stc
xorl
or
mov
push
loopne
and
or
in
push
mov
mov
aad
cmp
xor
or
add
xlat
das
mov
sbb
lret
les
push
mov
xor
jl
fs
inc
mov
push
addr16
push
sub
add
xor
dec
fmull
push
fcoml
inc
cmc
scas
lds
mov
add
test
adc
adc
cli
pop
cmpsb
mov
or
push
or
inc
ret
and
pop
xchg
push
lcall
jns
cmc
cmp
add
jno
xchg
js
jne
sbb
sbb
mov
cwtl
lds
mov
cmc
mov
inc
lret
inc
fisttpl
enter
negb
imul
mov
mov
loope
enter
and
lods
jne
ja
stos
dec
ja
sub
adc
cmp
inc
outsb
stos
mov
xchg
fwait
testb
cmp
push
pop
fwait
adc
lods
mov
ja
or
lods
pop
ds
dec
push
mov
add
pop
addl
xchg
add
lcall
pop
xor
push
sbb
jge
mov
jns
lahf
jnp
sarl
fwait
enter
pop
push
shrb
ljmp
push
fld
mov
movsb
cmp
repnz
add
ret
shll
popf
jmp
mov
daa
add
dec
mov
mov
lds
imul
lods
rol
ss
cwtl
mov
bound
xchg
shll
mov
int
sbbb
or
add
inc
bound
jmp
andb
cmp
sub
jbe
cltd
and
les
inc
jmp
push
aaa
dec
into
and
in
pop
or
mov
push
shlb
adc
ss
movsb
rolb
inc
mov
add
call
loop
and
rclb
pop
mov
pop
shlb
mov
lahf
aas
and
ss
int
xchg
cmp
xor
or
hlt
je
adc
or
adc
xor
xchg
andl
insb
adc
adc
dec
cmp
loopne
push
dec
sub
loop
cmp
pop
mov
lods
push
cmpsb
sahf
or
hlt
xchg
mov
cmp
or
test
sub
clc
fbstp
add
out
ds
fistps
and
aaa
outsl
in
cmp
jno
pop
fistps
pop
mov
push
xchg
lods
test
and
data16
push
cmpsb
imulb
push
or
scas
mov
dec
add
int
jmp
das
add
dec
sti
xor
mov
in
cmc
xor
jl
icebp
js
push
icebp
arpl
add
mov
inc
cmpsl
shll
jnp
mov
cmp
and
jg
add
ljmp
pop
fmuls
pop
cli
daa
inc
push
cmp
jl
rcl
jnp
sub
xor
mov
jb
ret
fs
jp
add
leave
rcrb
das
xor
loop
ss
and
jecxz
sbb
fcomps
mov
mov
int
decb
xor
fsubrs
les
and
pusha
mov
and
xchg
out
dec
sub
lret
out
dec
mov
sbb
jmp
aam
xchg
stos
jl
movsb
loop
stos
xor
xchg
lock
clc
push
dec
inc
mov
je
aad
dec
sbb
fdivrs
lea
pusha
push
mov
and
xor
inc
add
jge
into
pop
mov
push
icebp
jno
lds
lds
sbb
es
cmpsb
push
lret
cmpb
and
or
cmp
and
lret
xchg
add
popa
inc
cmp
inc
lea
stc
mov
in
sarl
mov
xchg
xorb
push
adc
mov
inc
dec
sbb
inc
xor
add
mull
clc
mov
mov
pusha
pushf
cs
scas
jge
faddl
xor
xor
daa
call
repz
test
loopne
into
cli
movsl
mov
fwait
es
outsl
mov
in
stos
jae
or
lcall
lods
mov
push
add
add
dec
jo
push
fistpll
aaa
popf
es
outsl
jp
sub
out
js
popa
call
jae
repnz
lcall
adc
shlb
lods
jmp
or
pop
sbb
insl
imul
xor
fsubrl
or
popf
mov
popf
sub
xchg
scas
fstpt
mov
add
imul
sbb
fisttpl
mov
push
hlt
jecxz
rorl
mov
fcmove
imul
outsb
rcll
pop
test
int
mov
adc
sbb
mov
mov
arpl
iret
aad
xor
jae
or
push
add
or
andl
mov
hlt
mov
xchg
xchg
add
jmp
movl
push
ljmp
rorb
int
mov
popf
push
push
out
mov
xor
cmp
pop
push
and
jp
stos
sub
test
icebp
xlat
ret
sbb
insl
in
and
popf
push
lods
arpl
jno
inc
push
cmp
mov
mov
sub
inc
nop
sbb
inc
cmp
daa
sbb
popa
jne
xchg
xchg
mov
cmpsl
bound
mov
lahf
dec
add
in
mov
mov
sbb
inc
das
mov
pop
sub
sbb
ss
mov
push
rcll
sub
xor
out
and
fldenv
sub
scas
arpl
pop
test
roll
daa
cld
sti
jg
mov
enter
lcall
sbb
sub
gs
push
or
ret
inc
sub
xchg
push
mov
mov
repz
adc
mov
jle
jns
loopne
lret
in
lods
insl
int3
notl
jnp
fildll
xchg
js
nop
enter
nop
mov
cmpsb
test
mov
aas
bound
sbb
push
mov
jbe
xor
adc
xchg
negl
fildl
mov
push
adc
push
add
push
push
jne
cs
idivb
xchg
sahf
dec
dec
enter
in
mov
cmp
les
push
les
daa
adc
jae
mov
fidivrl
sbb
jne
idivl
jnp
ljmp
sub
mov
mov
sarb
testl
js
xor
stos
fcoml
jno
push
les
sbb
shll
adc
into
push
pop
adc
out
sbb
movsl
xlat
cltd
xchg
sahf
arpl
and
iret
xor
bnd
xorb
or
add
mov
out
cwtl
push
int3
push
fs
pop
shrb
pop
dec
pop
pop
cmp
das
xor
xor
arpl
and
mov
out
pop
je
jge
mov
xlat
pusha
pushl
xchg
inc
lds
aaa
cmp
sbb
addr16
push
stos
xor
xor
pop
sub
dec
ficoms
rep
dec
dec
jns
mov
ss
int3
adc
xchg
or
rcl
popa
out
das
mulb
call
inc
sub
nop
insl
mov
push
stos
cmp
push
movsl
jmp
pop
push
jo
jl
ja
cmp
xchg
xchg
push
out
push
inc
sub
push
cmp
mov
icebp
mov
out
dec
jg
pop
inc
pop
leave
jecxz
bound
sbb
stos
and
jo
add
stos
ja
mov
cli
out
push
xchg
lock
ljmp
mov
ret
cmpsb
push
push
das
ficoms
lret
int
int3
cwtl
leave
and
push
sub
cmpsb
mov
xlat
xchg
sbb
cmp
daa
pop
int
xor
aam
idivb
lcall
jae
jb
pop
and
ret
and
test
int3
popf
mov
movsl
into
test
mov
jnp
test
jl
ret
scas
cld
pop
arpl
ret
addr16
jno
and
or
outsb
sub
push
or
pop
popa
stc
push
jne
ret
xchg
mov
pop
xchg
mov
sahf
out
or
mov
and
pop
mov
push
neg
pop
adc
movsl
hlt
mov
adc
xchg
dec
adc
push
adc
mov
scas
cwtl
pop
clc
fcmove
and
in
lods
xchg
xor
test
xor
jecxz
aas
or
int3
and
mov
sahf
ljmp
pop
pop
ficompl
sub
mov
pop
mov
mov
pop
xor
or
call
push
jne
jmp
nop
lcall
icebp
repz
rcrb
cmc
xor
bound
aaa
sti
sub
adc
test
in
add
mov
xchg
mov
testl
lret
pop
mov
outsl
pop
cmpsl
les
into
and
insb
cmpsl
push
inc
and
push
or
push
push
lcall
xorb
sbb
test
sarl
add
or
enter
pushf
mov
iret
jle
orl
xor
insl
cmp
dec
repnz
in
sbb
sub
pusha
roll
inc
xchg
cmp
jnp
mov
je
in
adc
ljmp
push
or
stos
mov
cmp
xchg
adcl
mov
xchg
fmulp
movsb
dec
jo
mov
add
pop
sub
sub
imul
int
repnz
imul
cmc
mov
fwait
out
sti
mull
mov
dec
mov
mov
nop
adc
std
push
inc
sub
adc
or
add
pop
mov
sub
inc
movsb
lret
xchg
mov
rorb
cmp
cmp
jb
out
and
jecxz
sub
bnd
dec
xchg
test
add
xor
pop
stos
lahf
shrb
adc
ja
ljmp
adc
test
add
inc
frstor
ljmp
sub
sbb
push
push
and
mov
pop
sbb
bound
add
mov
inc
dec
jp
mulb
mov
mov
enter
mov
stc
loopne
and
jns
jmp
jmp
mov
sbb
sahf
xchg
jmp
inc
adc
mov
mov
mov
in
jg
xor
scas
adc
loop
push
cmpl
movsb
mov
or
sub
jns
pop
dec
cs
xor
mov
adc
fidivl
repz
adc
test
sub
movsl
mov
jns
movsl
cs
adc
popf
xlat
and
jp
cmc
adc
movl
xchg
inc
cmc
fadd
fwait
dec
xor
loopne
sbb
ficompl
cmp
push
fmul
psrld
lods
adc
jnp
les
fdivrs
sub
mov
xchg
lret
int3
iret
xor
or
mov
mov
mov
mov
mov
aam
test
or
ss
jp
cmpsb
xor
arpl
add
and
xchg
test
sbb
nop
dec
ds
ret
bound
and
nop
and
scas
movl
and
stos
rcl
inc
leave
outsl
mov
imul
loopne
bound
dec
rcl
imul
imul
incb
mov
imul
insb
mov
lock
clc
lds
xchg
fistpl
push
sbb
ss
inc
addr16
sahf
mov
jle
xchg
pop
jb
sub
push
push
pop
insl
pop
add
mull
sbb
subb
out
adc
cmpsl
lds
jg
stos
push
insl
inc
popa
aaa
lret
mov
and
popa
or
repnz
and
inc
mov
mov
push
clc
loopne
mov
inc
mov
dec
mov
and
cltd
push
fs
adc
cmp
mov
shrl
adc
mov
jbe
adc
xor
aad
xor
sub
and
xchg
and
arpl
fwait
test
xchg
lea
jecxz
mov
arpl
mov
das
pop
mov
xchg
and
adc
cmp
ljmp
or
dec
pop
cmp
fildl
mov
mov
mov
adc
pop
ret
loope
mov
cmp
ja
mov
lret
jg
insl
pusha
dec
xor
inc
jno
adc
adc
cltd
mov
jns
cmp
push
in
dec
mov
pop
ror
xor
cmpsb
push
out
cwtl
icebp
jg
mov
mov
xchg
aas
push
movsb
mov
lret
mov
sbb
mov
mov
lea
ffreep
repnz
pop
cmp
xchg
rol
xor
rorb
stos
mov
imul
popa
dec
mov
out
insb
xchg
add
shrb
loop
push
lret
fsts
sbb
lods
rcrb
clc
std
jbe
lret
and
pop
frstor
repz
xchg
push
sbb
mov
sbb
inc
enter
aam
sbb
push
mov
cltd
push
pop
sbb
pop
add
jae
cmpsb
iret
leave
sub
adc
fnstenv
mov
dec
xlat
mov
shrb
add
xlat
addr16
mov
mov
loopne
clc
lods
das
hlt
xchg
dec
mov
test
xor
jns
push
fs
inc
fnstcw
jns
jbe
inc
pop
insl
in
stos
inc
mov
aaa
imul
adc
orb
ficomps
mov
and
in
xor
rolb
or
mov
stos
cmp
icebp
xor
xorl
dec
pop
fs
sahf
cmp
insl
xor
daa
dec
scas
sbb
out
pop
roll
sub
stc
xchg
ret
ss
repnz
in
adc
fistpll
out
mov
lahf
xchg
repz
movsb
or
mov
mov
jno
mov
lods
jge
push
adc
sti
lods
sbb
fs
or
rorb
lods
stc
lods
test
shlb
sub
inc
cmp
rclb
inc
pop
les
push
jge
fwait
mov
xchg
mov
hlt
je
mov
ret
or
add
mov
aas
xchg
xchg
leave
xor
xor
in
mov
cltd
lea
push
cmp
adc
pop
xchg
int3
push
gs
xor
xor
cmp
jne
fcomps
arpl
mov
mov
jmp
lahf
jbe
aaa
testb
add
add
pop
mov
fwait
ret
add
sahf
cmpsl
mov
inc
xchg
pop
in
ljmp
sub
add
xor
sub
cmp
mov
outsl
adc
push
xor
sub
jb
sbb
inc
nop
ja
loopne
mov
mov
jle
dec
dec
stc
popf
lock
pop
ja
or
fcmovbe
mov
xchg
lds
jmp
mov
fsubrl
jmp
nop
outsb
pop
dec
inc
in
loope
imul
stc
jns
dec
mov
fsubrl
adc
mov
lar
add
aaa
aam
sbb
popf
je
sbb
sbb
ss
jmp
mov
jle
lods
xchg
bound
mov
inc
mov
lds
idivl
insl
ret
lea
mov
repz
cmpsb
ljmp
and
jle
notb
sub
loope
repz
pop
inc
xor
or
mov
aam
lret
dec
sub
jb
xor
add
add
mov
xor
push
jg
push
ret
cmp
je
push
dec
ds
aam
jecxz
notl
fisttpl
and
and
mov
add
mov
push
sti
jnp
mov
or
or
inc
repz
mov
test
adc
adc
sub
xchg
push
negl
movsb
repnz
scas
in
ja
jo
pop
imul
cwtl
stos
data16
xchg
pop
outsb
sbb
in
shr
add
jnp
mov
sti
cwtl
pushf
in
dec
cmp
sub
push
xchg
je
xchg
in
dec
inc
xchg
std
jns
or
fistpll
cmp
lahf
roll
fldenv
rorl
aam
push
xor
mov
mov
mov
mov
js
push
add
stos
mov
mov
cmp
inc
je
jbe
pop
out
cmc
in
inc
mov
test
inc
or
sbb
leave
fnstenv
or
aas
cltd
mov
sbb
push
das
or
or
inc
int3
dec
sbbb
pop
jle
dec
fisttpll
add
test
andb
les
aaa
jno
out
push
pop
pop
add
mov
lods
leave
add
or
aaa
sbb
pop
sbb
out
jnp
cld
and
adc
sbb
mov
repz
xor
addr16
dec
cmp
xchg
movsb
in
pop
addb
imul
xor
mov
subb
lods
popa
and
mov
mov
push
fldenv
sub
sbb
xacquire
stc
mov
push
and
sub
xor
repnz
cmc
push
fsubp
dec
inc
xchg
sub
xor
ss
imul
mov
push
and
shl
pop
les
dec
push
movl
ljmp
push
cmp
imul
mov
jno
std
popa
mov
imul
adc
push
push
inc
dec
pop
addr16
push
sbb
sahf
pop
test
lcall
mov
push
sbb
adc
dec
into
jno
hlt
add
xchg
cmp
in
cmpl
test
adc
incl
xchg
and
movsl
ret
sahf
test
mov
xor
mov
mov
cmp
repz
inc
pop
scas
clc
jg
mov
iret
fsubrl
adc
cmp
js
dec
adc
lret
add
add
push
cmpsb
mov
jb
mov
push
stc
js
xchg
cwtl
push
jno
test
mov
ret
mov
aam
push
add
adc
cwtl
pop
mov
adc
push
scas
test
out
pop
jne
movsb
das
cmc
add
in
cmp
cmp
jl
fisubrl
mov
cmp
les
mov
mov
andb
pop
subl
aaa
pop
ljmp
mov
rcrb
cmp
icebp
imul
std
adc
dec
sarl
call
push
dec
cmp
popf
shl
dec
testl
fwait
int3
jno
cmpsl
mov
scas
ret
jns
es
out
dec
push
add
cs
incb
inc
stos
mov
fsubrl
stos
push
mov
and
mov
and
jp
imul
sub
pop
cwtl
or
fwait
push
loop
mov
fwait
dec
sbb
mov
hlt
sbb
cmc
lock
in
lret
mov
xor
adc
cmc
test
std
shll
lea
sub
jnp
xchg
out
incb
sbb
idivl
xchg
lods
gs
pop
mov
jecxz
mov
inc
mov
cmpsb
cmc
mov
jbe
addb
jge
sub
pop
rcl
lods
in
stc
mov
out
xchg
inc
out
data16
or
sub
xor
int3
aad
cmp
mov
and
in
jne
cmp
mov
lahf
add
aam
jae
into
jnp
popf
sar
jecxz
mov
push
fwait
sahf
or
dec
gs
mov
jmp
pop
jnp
nop
lods
jmp
fstl
push
jle
pop
add
xchg
or
inc
leave
out
ret
clc
aas
xor
icebp
outsb
lds
mov
xchg
fcomps
rorb
ss
add
jg
dec
movsb
push
push
dec
sbb
ret
mov
outsl
push
mov
inc
lds
imul
pop
sub
or
cmp
bound
sbb
cli
sub
lock
sahf
xor
jb
out
mov
repz
jo
mov
add
jmp
mov
pop
jl
sbb
cmp
test
mov
cli
lock
ljmp
shrl
cs
jecxz
inc
stos
loop
repnz
fwait
xor
push
fistpl
mov
push
mov
push
mov
pop
mov
jne
popf
ret
mov
inc
data16
xor
loopne
inc
sbb
jecxz
stos
pop
push
aaa
imulb
mov
push
push
stos
ja
lcall
scas
jg
push
dec
jo
or
sub
cmp
out
cmp
test
cs
sub
pop
sub
cmp
mov
aas
ret
and
jge
call
popf
jnp
out
dec
ret
jb
daa
add
ret
push
call
adc
sub
popa
pusha
jno
push
inc
or
in
and
or
lret
inc
test
aas
add
cmp
out
xchg
xlat
push
and
xchg
cmp
leave
jns
xor
push
insl
ja
sbb
cwtl
xchg
mov
fcomps
std
jne
xor
jnp
stos
mov
sub
cmpsb
rorl
stc
lahf
mov
pushf
pop
fs
push
rcrb
fnsave
xchg
pop
mov
pop
flds
sub
pop
daa
push
fdivp
insl
not
mov
add
ret
sbb
rcll
stos
xchg
lods
lods
hlt
out
dec
jle
xchg
xchg
dec
insl
sbb
je
movsl
cmpsl
movsl
in
push
sub
mov
or
fisttpl
enter
out
or
xchg
es
mov
push
stc
daa
and
hlt
mov
push
sbb
and
loop
lret
cmc
mov
insl
pop
int3
sahf
out
dec
jne
cltd
rcll
in
add
xchg
jmp
faddl
aaa
mov
outsl
mov
mov
mov
repz
cld
lock
inc
mov
mov
xlat
stos
mov
lds
repz
pop
jle
addr16
and
fiadds
pusha
aas
pop
cmc
insl
mov
fnstenv
adc
adcl
adc
push
xchg
add
iret
out
mov
test
cmpsb
adc
fucomp
xchg
cld
out
je
cmpsb
cwtl
jbe
prefetchnta
stos
ror
cmp
pop
imul
mov
test
inc
ljmp
jg
and
mov
rcll
out
add
stc
sahf
lret
jns
xchg
dec
loope
jg
jnp
jbe
push
and
test
nop
lret
jg
cwtl
jno
mov
jecxz
fwait
popa
mov
loope
pusha
out
pop
jmp
imulb
mov
fld1
mov
jno
push
dec
daa
inc
je
inc
prefetch
mov
jnp
and
cmpsl
sub
pusha
rcl
add
stos
mov
cmp
ret
clc
jecxz
pusha
inc
mov
repnz
pop
adc
mov
or
sbb
dec
push
pop
push
and
in
inc
fisttpl
jbe
andl
insb
and
and
mov
push
test
jnp
mov
insb
push
int
jns
pusha
or
cwtl
mov
call
cmp
in
ret
loop
insl
or
fs
pop
and
fwait
cmc
mov
mov
stc
xor
jmp
cmp
inc
xchg
insb
mov
mov
mov
add
sbb
and
adcl
push
jmp
dec
ja
push
cmc
rclb
jmp
aas
loopne
and
aas
mov
je
pop
mov
out
inc
cmp
addl
imul
decl
ret
stc
cmovl
ds
aam
int
enter
mov
shlb
js
fisubl
inc
cld
push
daa
movsb
and
jp
hlt
fsubs
scas
inc
gs
push
test
jge
sub
xchg
ds
mov
jne
sar
test
inc
push
outsb
movsb
sub
push
test
push
les
sbb
sbb
lods
add
add
mov
cmc
incb
xchg
bound
sti
mov
inc
push
mov
xor
inc
xchg
stos
ror
xchg
pusha
pop
mov
mov
and
in
jbe
adc
add
daa
xchg
cmc
cli
lods
jns
cmpsb
inc
xor
popa
cmpsb
mov
out
mov
jge
pop
xor
ja
mov
cmc
sub
pop
leave
sub
jle
inc
xorl
mov
insl
pop
in
lahf
xor
ljmp
scas
xchg
and
pop
movsl
push
popa
sbb
jmp
mov
lds
mov
jbe
push
sub
jmp
cmp
sub
xchg
cmp
mov
and
imul
mov
jp
cmpsl
push
sbb
ss
cmc
cmp
push
cltd
jbe
xlat
adc
lods
inc
and
in
scas
jle
loop
sub
sbb
test
das
dec
pop
adc
sahf
jb
outsl
sti
inc
push
repz
push
jbe
test
jb
pop
jg
pusha
fbstp
push
mov
push
mov
lods
inc
imull
movsl
test
ret
ret
arpl
in
cmp
out
push
aam
inc
popf
pushf
lock
fists
jg
or
test
cmpsl
cmp
mov
movsl
fisubs
xor
es
lods
sub
int
add
xor
push
jo
push
repz
xor
movsb
mov
jb
push
xchg
mov
sub
loope
pop
pushf
test
test
fcmovne
inc
xlat
mov
dec
ds
mov
xchg
test
lods
mov
adc
mov
in
jge
outsb
imul
dec
int
ja
fldt
icebp
adc
cld
cli
jnp
mov
jg
aas
insl
dec
nop
aaa
pop
popf
push
push
in
les
xor
aad
js
inc
jnp
ljmp
rclb
js
mov
sti
pop
ss
mov
add
fs
flds
faddl
inc
inc
mov
sarl
dec
sbb
push
dec
add
sbb
dec
mov
mov
js
inc
add
mov
or
movsl
push
adc
daa
mov
aad
lret
out
and
adc
or
mov
mov
pop
and
subb
jo
push
cmc
pusha
shl
ds
ljmp
adc
fistl
out
insl
bound
jmp
xchg
rorb
xchg
xchg
in
loope
mov
je
or
cli
add
js
pand
sbb
vunpcklpd
push
xor
xchg
or
push
and
push
mov
pushf
sub
loope
push
and
arpl
popa
mov
js
mov
mov
sub
scas
orl
cmpsb
sbb
jge
cwtl
in
jle
pusha
jnp
mov
out
xchg
lcall
jecxz
lret
insb
ljmp
cs
dec
xchg
aas
out
test
outsb
fcomps
mov
cwtl
mov
test
inc
outsb
lcall
hlt
add
repnz
lret
and
adc
je
pop
and
idivl
pop
xchg
ficoms
and
push
mov
and
or
arpl
sub
lds
mov
jg
pop
xor
mov
int3
sbb
jmp
lods
imul
in
fstl
scas
xor
mov
mov
enter
imul
xlat
test
imul
sbb
dec
movsb
sbb
addb
mov
es
in
mov
andb
jnp
dec
js
cmp
jo
xchg
clc
mov
mov
stos
xchg
inc
adc
out
mov
xchg
rcll
push
pop
fstl
dec
inc
dec
aad
and
testl
nop
add
nop
rorw
push
andb
mov
stos
inc
lret
push
or
lea
sub
ds
sub
lahf
iret
dec
call
ljmp
jmp
inc
add
cli
loope
in
sub
mov
fcoml
lock
inc
lcall
jne
and
xor
adc
xor
sbb
ljmpw
inc
pusha
je
loop
push
lds
cld
sti
sbb
movsb
jno
out
mov
pop
add
cmc
test
inc
xchg
push
pop
scas
cmp
ficoms
pop
and
jbe
add
cmp
mov
je
cmp
bound
int3
sub
cmp
lods
bound
and
lds
sub
sbb
repz
test
imul
mov
pop
and
xchg
fnstenv
sub
cltd
in
lret
mov
dec
pop
rclb
jecxz
stc
cli
mov
fmull
test
cmc
add
gs
scas
jb
and
popf
xor
push
mov
cld
mov
jmp
movsb
ljmp
fildl
mov
mov
ret
xor
clc
pop
fisttpll
dec
adc
inc
cmp
push
lds
dec
pop
jecxz
insl
sbb
jbe
jmp
int3
or
fiaddl
loop
das
imul
jnp
stc
sbb
dec
fists
fcompl
setge
cmp
push
clts
push
push
pop
sub
adc
sbb
test
aad
xchg
cmp
fldcw
shrb
ds
push
mov
mov
sarl
cltd
inc
xor
lahf
sbb
fcmovbe
push
insb
xchg
and
stos
jo
pop
sti
or
lret
dec
or
mov
jno
sahf
jnp
pop
push
int3
push
push
lods
add
lahf
dec
jnp
imul
fst
add
mov
inc
and
scas
dec
stos
es
out
out
mov
gs
les
imul
rcl
adc
inc
clc
jae
pop
daa
loopne
mov
push
fcomps
and
and
dec
aad
dec
add
jl
or
out
fildl
stos
xorb
sub
stos
out
das
cmp
jle
stos
and
mov
scas
or
mov
scas
arpl
or
mov
add
adc
xlat
inc
jo
repz
cmp
mov
lods
add
inc
movd
call
out
inc
cs
sub
iret
jnp
cwtl
mov
mov
out
sbb
addr16
and
mov
push
sarb
in
sbb
das
pop
pop
cltd
adc
mov
cwtl
jns,pt
add
dec
lods
pushf
and
xor
mov
cmpsb
rol
out
inc
inc
jo
dec
jbe
loop
enter
in
enter
das
jmp
pop
test
movsl
cmpsb
cltd
xlat
xor
xchg
xchg
in
mov
push
and
push
inc
aas
stos
imul
ret
jmp
or
or
subb
nop
sbb
test
jb
imul
orl
clc
mov
subl
inc
inc
je
add
or
mov
mov
mov
inc
and
jae
or
clc
out
pop
add
inc
cmp
push
jno
outsb
xchg
movsl
aam
jb
ffreep
gs
aas
out
pop
in
xchg
ss
adc
cli
adc
out
test
outsl
add
lock
jne
das
xchg
insb
xchg
rclb
jmp
testl
mov
mov
fdivrs
aaa
loop
add
pop
push
pop
notl
cli
xchg
test
jp
mov
sub
jle
adc
push
insb
mov
mov
mov
mov
cmpb
jp
mov
cs
push
stos
mov
je
shlb
dec
or
mov
mov
rclb
jb
cmc
push
scas
jmp
cmpsb
out
add
in
aam
jns
js
jmp
fnstcw
xchg
push
cmp
stc
movsb
jmp
imul
sub
sbb
sbb
gs
adc
add
loop
or
subl
fs
jl
fldcw
adc
sub
add
sti
popa
loop
icebp
or
outsb
pop
call
mov
cs
jns
sub
mov
xchg
bound
xorb
int3
pop
lret
push
jbe
sbb
pop
call
ret
dec
scas
ror
movsl
sbb
pop
xor
dec
test
push
test
sub
pushf
cwtl
or
xor
int
outsb
gs
push
outsb
jno
andb
scas
mov
minps
jmp
data16
stos
roll
adc
rcll
sub
loopne
xlat
out
aaa
lahf
cmp
movsb
shll
enter
push
mov
mov
sbb
jnp
repnz
addl
add
sahf
mov
mov
subl
clc
test
inc
pusha
add
outsl
jne
leave
pop
subb
xor
add
outsb
and
push
or
push
cmp
add
mov
inc
add
pop
push
and
cld
shlb
gs
out
jbe
aaa
push
cmpsb
insb
imull
sbb
aaa
movsb
push
rep
inc
sbb
and
cwtl
out
push
test
dec
xchg
mov
mov
add
adc
testb
xchg
inc
or
sub
rcll
sub
push
fidivrl
mov
add
push
pop
js
inc
sbbl
xchg
push
fsubl
sub
and
fists
subl
pop
xchg
sub
push
scas
insb
mov
xchg
stos
test
push
je
jae
lds
test
sti
clc
sbb
fsubrp
and
push
pushf
jb
mov
jbe
ret
dec
dec
bound
mov
mov
inc
lret
shr
cli
jle
sbb
dec
aaa
addb
lock
push
shll
jae
loopne
pop
mov
jns
pusha
cmp
mov
les
jge
inc
push
jl
call
pop
pop
in
fwait
add
fsub
mov
fnsave
test
xchg
push
and
pop
pop
adc
xor
insl
repnz
nop
or
add
adc
inc
xchg
add
xchg
daa
inc
pusha
sete
xchg
arpl
cmp
lret
add
push
mov
cmp
or
ss
mov
pop
icebp
test
xor
mov
mov
test
adc
inc
data16
stc
stos
pop
and
paddq
sub
jge
pop
mov
cmp
xlat
fcom
and
mov
cmp
jecxz
mov
nop
push
sub
stos
repnz
ja
sbb
test
loop
push
mov
pushf
dec
call
push
jnp
or
outsl
xchg
push
test
mov
jbe
mov
pop
bound
ret
pop
int3
mov
mov
inc
pop
mov
daa
iret
shr
inc
or
jecxz
adc
jmp
or
es
scas
sti
add
inc
ja
das
in
push
push
xchg
adc
popa
ss
cmp
mov
and
mov
cmp
mov
and
xor
dec
push
sub
lret
and
insl
test
xor
sub
cmpsb
das
dec
fsts
pop
xor
inc
mov
or
lret
push
mov
push
call
mov
or
push
sub
lea
inc
mov
mov
fistpll
inc
push
and
inc
mov
sbb
lea
add
das
fistl
cmp
sets
adc
mov
outsl
cs
iret
rcpps
or
adc
cmp
add
or
scas
fistl
or
adc
cli
jle
bound
jmp
addb
xorl
jns
sub
iret
jo
adc
movsl
pop
div
jo
adc
mov
cmpsb
jne,pt
inc
sbb
jnp
js
mov
xchg
out
fisubs
in
jg
sub
mov
jmp
pushf
pusha
ds
inc
mov
ficompl
es
arpl
xor
pop
sarl
les
shll
div
adc
cmpsl
fstp
mov
nop
xchg
pop
leave
push
adc
mov
inc
pop
roll
dec
mov
stos
fbld
jp
data16
aas
sbb
push
fwait
push
sub
mov
cmp
xchg
nop
ljmp
pusha
loope
and
in
cmp
cmpsl
mov
sbb
pop
movsl
cmpl
test
in
or
inc
inc
fists
int
push
ljmp
jp
mov
sub
inc
cmp
aad
imull
sbb
loopne
jae
fdivrs
cwtl
or
adc
repz
pushf
ret
test
dec
add
dec
shl
adc
dec
add
add
pusha
or
cmp
out
and
cmp
add
das
pop
cmp
pop
push
icebp
or
xchg
out
enter
mov
push
cmpsb
inc
pop
out
movsb
inc
sbb
sbb
ljmp
orl
test
addr16
bound
stos
and
cmp
divb
mov
scas
fidivl
mov
adc
and
testl
gs
out
div
dec
data16
push
out
sbb
pop
and
sbb
dec
lods
roll
xor
out
popa
cmp
sub
je
mov
es
dec
inc
sub
jo
mov
add
shr
clc
lods
lret
stos
mov
adc
and
sbbl
pusha
jns
lds
push
test
cwtl
lods
mov
pop
out
mov
arpl
rorl
out
enter
and
mov
push
mov
sbb
push
mov
and
adc
fyl2x
repz
ds
sub
aas
push
push
adc
daa
insl
imull
pop
in
dec
push
sub
sub
dec
loope
inc
mov
aad
mov
lret
pop
outsb
cmp
outsl
xchg
mov
push
add
aas
imul
adc
inc
jge
mov
lahf
jmp
sbb
das
shrl
push
jmp
and
rcrl
mov
aam
inc
dec
xor
leave
out
jecxz
adc
mov
test
cmp
sbb
dec
test
cmp
std
dec
in
cmpsb
fisubrl
ljmp
mov
xor
xchg
inc
pop
pop
test
aam
lds
iret
jl
and
xchg
adc
out
push
dec
jno
adc
ljmp
xchg
ds
sbb
xchg
dec
int
int
inc
ljmp
push
add
jae
lret
cmc
pop
outsl
jge
xor
sti
inc
out
xor
movsb
jns
cmp
pop
cld
or
push
mov
mulb
js
xchg
ficomps
sbb
cli
push
or
in
push
cli
ds
xchg
mov
rolb
fucom
aam
adc
add
lock
mov
and
sbb
repnz
out
cmp
idiv
loopne
lret
imul
pop
mov
xchg
dec
adc
or
xor
popa
and
dec
das
loop
add
xchg
mov
adc
xchg
inc
xor
sbb
js
inc
js
pop
add
mov
loope
mov
xchg
mov
pop
xor
pop
test
aas
and
and
mov
mov
mov
jg
shrb
add
shll
inc
add
and
icebp
xchg
scas
xor
inc
mov
adc
sbb
sbb
stos
cmp
bound
das
shrb
nop
push
repnz
and
xor
add
and
or
into
scas
shrl
pop
fs
inc
mov
adc
cld
ret
and
call
xor
mov
or
cltd
add
adc
repz
mov
pop
das
mov
bound
dec
cmp
fildl
jle
xlat
dec
js
movsb
shrl
test
pop
xor
aad
cmp
xor
xor
ja
dec
lods
cld
pop
or
cmc
pop
dec
adc
insl
lods
out
das
xchg
mov
fsub
dec
mov
out
or
inc
cmp
dec
gs
inc
add
sahf
rolb
xchg
xchg
cmp
xlat
scas
inc
aaa
xlat
add
pop
dec
mov
mov
mov
mov
and
xorl
inc
push
aam
inc
push
sbb
int3
test
jge
arpl
pop
clc
dec
xor
dec
mov
icebp
lret
outsb
es
scas
sbb
fists
stc
or
dec
sbb
repnz
dec
das
sub
mov
jge
iret
cs
jo
sbb
pop
mov
xor
xor
in
inc
push
rorb
pop
lods
dec
pop
push
or
ja
xchg
xor
xchg
sbb
movsl
lahf
sti
jnp
mov
sub
inc
xchg
or
add
inc
aaa
lea
loop
ljmp
mov
sbb
and
xor
leave
in
sbb
jmp
outsb
jp
cli
clc
push
cmc
pop
pop
mov
inc
xor
jbe
xchg
iret
push
jecxz
out
test
testl
enter
dec
ret
fwait
sub
mov
mov
mov
add
lcall
cwtl
in
shl
cmp
inc
test
dec
fmul
test
fstp
cmp
pop
out
pop
xchg
mov
push
jnp
or
mov
das
mov
fdivs
and
jns
jo
movsb
xchg
push
add
add
pushf
inc
jp
dec
dec
pop
push
sub
mov
fidivs
push
out
cmp
ja
sahf
aam
div
mov
pop
icebp
fistpl
imul
test
popf
add
dec
inc
xchg
ljmp
inc
add
lret
pop
xchg
ss
mov
sub
dec
inc
cmp
mov
fidivrl
call
mov
ljmp
cmpsl
cmp
jle
bound
test
pusha
cld
rorb
addl
xchg
xchg
push
test
push
mov
xchg
movsb
rcrl
fs
jae
fwait
dec
insb
mov
pop
pop
ret
lahf
rcrl
popf
mov
and
mov
aaa
add
mov
xchg
outsl
cmp
mov
fwait
cmp
lret
sub
imul
test
add
dec
sbb
mov
mov
pop
not
push
dec
movsb
xor
std
pushf
cmp
aam
adc
jne
popf
push
pushf
pushf
jmp
pop
xchg
dec
push
xor
insb
into
jp
dec
std
sub
push
shll
leavew
xor
add
fbstp
jns
and
push
ds
movsl
insb
lcall
pop
mov
add
pop
rol
arpl
out
testl
std
jo
xor
mov
pop
cmpsl
or
into
or
repz
jmp
xchg
cmp
cmp
sbb
and
jp
stc
xor
cmp
mov
xchg
xchg
mov
lds
lods
jbe
leave
cli
xchg
ret
pop
add
ret
jns
dec
out
jmp
cs
push
fistl
mov
xor
mov
push
mov
cmp
mov
mov
mov
pushf
jle
dec
mov
stc
pop
xchg
xor
mov
and
dec
mov
dec
dec
xchg
std
imul
add
dec
jns
cmp
cmp
sbb
les
xchg
lret
cli
adc
nop
stc
xor
or
loope
cltd
xchg
xlat
ja
mov
jle
ret
dec
test
jb
sub
inc
pusha
lock
jnp
jno
xchg
mov
mov
mov
data16
popa
fistpll
popf
mov
cli
jns
lea
xchg
mov
mov
ret
mov
rorl
gs
enter
or
lea
ss
xchg
test
in
inc
fldenv
xor
lods
mov
jbe
xchg
je
jge
sub
jbe
push
or
push
jno
xorl
es
and
add
lea
stc
inc
jmp
lret
mov
push
or
adcl
sub
movsl
shl
pop
or
and
loope
movsb
inc
and
or
sub
push
leave
fwait
dec
inc
add
out
shll
jg
mov
movsl
jo
sub
leave
pop
xchg
and
cmpsl
pop
lds
inc
not
mov
dec
sbb
lret
sub
enter
das
fisttpl
jge
repz
ret
jae
insb
push
repnz
and
adcl
aaa
pop
sbb
out
pusha
and
push
add
outsb
into
popa
inc
lret
push
hlt
xchg
mov
mulb
add
divl
mov
inc
ljmp
mov
sbb
mov
outsb
add
repnz
cmp
sbb
ljmp
sub
insb
add
push
xchg
sub
enter
mov
xor
sti
push
pop
imul
cmp
mov
cmc
cmp
je
jns
push
cmp
rclb
mov
in
jle
addb
xor
in
test
or
mov
cmp
orl
jnp
cmp
iret
call
sbb
cltd
ds
adc
pusha
inc
adc
stos
mov
push
lret
mov
ds
imul
cld
mov
sub
out
mov
and
lret
jne
mov
mov
inc
jne
push
stos
inc
add
xchg
sbb
pop
pop
jbe
cli
leave
dec
cmpsl
aam
enter
pushf
and
mov
dec
inc
xlat
push
mov
adc
inc
mov
mov
aad
out
and
inc
fcmovnbe
outsl
pop
cmp
sub
lret
cmp
sub
mov
in
add
jo,pt
jb
je
mov
pop
imul
or
dec
add
mov
test
pop
mov
lock
fcomi
push
test
out
pop
xchg
jns
jg
mov
mov
mov
sub
adc
mov
aam
mov
ds
adc
js
or
dec
das
pop
pop
subl
mov
std
imul
mov
mov
sub
cmp
cmp
push
lret
or
adc
adc
add
repnz
xor
dec
fsubl
nop
bound
loop
enter
aad
stos
gs
dec
adc
xor
sti
iret
xchg
and
push
fistl
popa
push
fbld
cmpb
pop
sub
pop
push
jmp
ljmp
xor
scas
js
clc
xchg
enter
push
inc
in
jb
jbe
daa
pop
cmc
fsts
and
in
push
push
cli
lret
sub
stc
inc
mov
aas
stc
les
or
or
adc
cmc
lock
xchg
in
push
movsb
xchg
or
je
and
std
inc
outsb
into
repz
popa
xchg
ret
popf
in
rcr
inc
test
stos
nop
repz
push
add
cmp
shr
mov
cs
stos
pushf
fsubl
leave
aad
fmull
stc
sub
outsb
test
das
adc
outsb
sub
lea
inc
mov
mov
xchg
pusha
xchg
es
je
nop
fwait
add
jp
clc
pop
leave
mov
mov
push
push
cmpsl
aam
push
push
fs
stc
scas
sub
popa
xor
sub
das
dec
mov
inc
cwtl
cmp
and
mov
add
dec
or
fistl
mov
ret
adc
mov
adc
leave
mov
or
scas
int
fcoms
adc
movsl
xor
xchg
fiadds
dec
mov
je
dec
roll
lds
incl
inc
jo
jp,pt
movsl
imul
enter
pop
scas
stc
push
decb
push
stc
or
pop
sbb
push
andb
jge
icebp
inc
mov
push
mov
xchg
and
bound
aas
mov
push
dec
ds
loopne
jae
mov
andl
sub
mov
adc
out
xchg
aad
fstps
and
add
in
ja
iret
adc
inc
adc
cwtl
es
sti
sbb
loopne
sbb
jmp
adc
dec
test
push
push
cmp
repz
std
pop
xor
test
jg
fiadds
adc
mov
push
loope
push
sbb
jbe
mov
xchg
pop
out
jp
dec
mov
xor
jb
mov
cmp
fsubl
jp
jne
xor
xchg
jbe
cmp
stos
ret
add
mov
js
inc
test
or
jno
movsb
mov
push
or
mov
ret
idiv
xor
fimull
or
lcall
insl
test
fwait
movsb
xor
mov
cmp
pusha
jns
inc
mov
idivl
test
mov
push
and
and
dec
leave
sub
add
mov
pusha
push
mov
or
jl
fadds
mov
lret
xor
lcall
pusha
imul
and
xlat
arpl
cmp
adc
xchg
cmp
dec
sub
stos
cmc
push
sub
cmp
pop
cmpb
stos
jl
jge
and
dec
cld
add
xchg
outsb
dec
lret
sbb
pop
dec
ljmp
mov
fs
mov
rep
int3
mov
xchg
pop
rcrl
mov
movsl
negb
push
xchg
push
lahf
ret
and
fwait
das
adc
or
sbb
xchg
xor
addr16
add
cmp
sub
push
push
bound
mov
xchg
out
je
or
loopne
push
push
add
daa
loop
cwtl
test
pop
push
adc
ljmp
adc
stos
ja
stc
cmp
dec
loop
idivl
push
test
inc
sub
cli
lds
xchg
xchg
cmc
lahf
jl
or
stos
outsb
jne
jns
testl
adc
arpl
dec
sub
sar
push
arpl
dec
mov
jecxz
outsb
je
cmp
pusha
inc
push
xchg
inc
icebp
inc
mov
or
push
or
mov
jb
jecxz
shl
push
mov
jae
xchg
pop
xor
scas
jle
divb
jo
pop
loopne
std
push
inc
sub
jnp
adc
test
shlb
or
mov
decl
insl
sub
xchg
jne
mov
mov
cmpsl
gs
pop
xchg
pop
test
mov
and
xchg
inc
rorl
push
mov
xor
dec
add
mov
add
jg
sub
fxrstor
das
xor
inc
mov
test
sti
shr
jnp
push
push
rcrl
fisttpl
imul
mov
jge
in
je
outsl
fs
sbb
xor
sub
push
pop
jno
xor
and
jl
or
addr16
js
xchg
pop
neg
ret
sbb
sub
jbe
mov
push
lods
iret
adc
or
xor
loop
xchg
xor
stos
jo
push
jle
adc
pop
mov
mov
jbe
mov
push
mov
push
insl
loopne
in
cli
leave
pop
jno
sub
cmp
xchg
popa
cwtl
test
rcrb
fidivrs
fsubs
stc
or
cmc
ja
cmp
mov
xchg
ror
pop
pop
ja
shll
jnp
pop
insl
hlt
daa
sub
lahf
mov
xchg
push
add
mov
das
add
cltd
mov
cmp
loopne
ja
or
ja
outsb
cmp
cmp
mov
int
and
shr
mov
test
pop
push
push
jo
outsl
inc
cmpsl
and
jbe
inc
std
sbb
dec
or
inc
jmp
push
inc
push
sub
jle
sbb
mov
mov
pop
in
scas
push
jge
cld
mov
imul
sbb
lods
dec
jbe
or
fcmove
int3
ds
aaa
sub
sbb
adc
scas
mov
leave
and
sbb
push
mov
in
mov
xchg
pop
out
das
push
loop
loope
sahf
aaa
cmpsb
mov
dec
stc
add
add
add
mov
fwait
push
and
sbb
push
rcrl
jge
call
jo
mov
mov
mov
cmpsb
mov
mov
xor
xchg
sub
outsl
not
add
push
xlat
pop
adcb
xchg
or
lcall
inc
add
loope
test
divb
pop
into
shll
and
adc
sbb
jno
clc
push
sub
in
dec
pop
iret
add
xor
ret
lea
int
insl
jmp
int3
cmpsl
fs
cs
int
pop
xchg
mov
stos
sbb
xorl
mov
mov
sbb
adc
xchg
mov
popf
scas
dec
hlt
xor
jns
jae
and
push
xchg
xor
cmpsb
test
in
test
pop
outsb
fistps
mov
shll
jle
push
mov
lods
sub
xor
les
xchg
xchg
mov
sub
jne
adc
popl
scas
sbb
cmp
je
cli
pop
sub
mov
out
test
pop
add
xchg
adc
jmp
xchg
dec
lea
sub
add
dec
jnp
adc
cmp
and
cmpl
pop
stos
ds
push
fs
sti
ret
pushf
mov
loope
pop
outsl
cmp
sub
jo
out
pop
mov
scas
inc
or
lcall
scas
jp
fstp
push
aad
cmp
stos
sub
inc
dec
stos
je
add
sub
sub
mov
test
fstpt
pop
jl
hlt
sub
and
mov
int
fcmovne
fdivr
jae
adc
or
xlat
in
or
push
jp
xlat
subb
repnz
pop
mov
loope
xor
mov
frstor
pop
adc
mov
movsl
push
adc
jle
test
push
negl
insb
cmp
mov
repnz
push
jae
ds
scas
fs
aam
clc
aad
xchg
lahf
mov
insl
inc
dec
mov
adc
mov
insb
sbbl
push
test
jno
inc
leave
shll
sub
outsb
addr16
scas
outsb
add
jne
in
jmp
inc
push
shlb
mov
mov
loopne
dec
int
ds
cmp
push
xchg
lret
cmp
into
push
mov
and
inc
or
pop
pushf
mov
sbb
adcb
jmp
jmp
dec
sub
rcr
push
int
sbb
loop
dec
leave
fstpt
dec
adc
ljmp
fwait
push
call
mov
dec
adc
mov
cmpsl
xlat
ret
jp
incl
test
push
aam
jbe
jge
jo
sbb
xchg
inc
daa
adc
push
into
scas
adc
fmuls
je
and
aam
aad
xchg
mov
fldcw
fbld
je
jle
cltd
and
add
imul
sbb
test
test
shr
fcomps
adc
cmp
jg
scas
adc
ret
out
add
jge
mov
int
mov
add
xor
roll
push
adc
push
xor
push
loopne
mov
push
dec
sub
adc
mov
out
and
sbb
repnz
ror
mov
pop
mov
lods
jle
jge
adc
imulb
aaa
aam
push
mov
negb
fidivrs
mov
sub
mov
push
ds
insl
hlt
mov
xchg
imul
push
ljmp
cmp
lods
test
cmp
cmp
sbb
and
ficoml
or
sub
nop
mov
xor
jne
mov
lahf
pop
push
sahf
and
or
pop
ds
xor
mov
shlb
sub
ficomps
mov
adc
cmp
pop
cmpsl
movsb
mov
mov
jbe
cmpsb
sub
push
sbb
pop
fmull
rolb
ss
lods
loop
adc
addl
fldcw
int
inc
mov
xor
mov
add
mov
and
cmp
hlt
add
push
mov
fbld
cmp
aad
iret
sti
mov
sbb
movsb
mov
mov
lods
shll
push
loopne
in
lahf
insb
mov
add
andl
jno
cmp
test
arpl
jne
std
add
scas
ret
mov
lcall
pop
int
sbbb
pop
inc
cli
sub
idivb
xor
pop
out
jmp
and
insb
lods
inc
repz
fcomp
add
in
lods
ficomps
shlb
sbb
mov
int3
cmpsb
or
push
push
mov
mov
push
mov
mov
push
das
push
sar
mov
push
or
push
xchg
loopne
mov
jmp
xlat
idivb
inc
stos
dec
outsb
push
jnp
je
inc
sti
sbb
lods
lret
jg
push
and
cmp
insl
mov
jge
lock
mov
fimull
xor
lods
mov
push
xchg
aad
imul
outsb
test
mov
push
adc
mov
shl
jo
sbb
mov
aas
popa
adc
xchg
sti
push
xchg
mov
out
leave
add
and
inc
push
insl
mov
sbb
es
jle
nop
adc
cmp
cmpsl
sub
xchg
es
jb
stc
sub
sbb
push
call
sub
xor
sti
bound
jne
push
mov
pop
out
mov
push
jne
pop
cmpsl
or
mov
lret
cld
aaa
lea
sbb
push
mov
sub
in
mov
repnz
ja
push
mov
xchg
mov
push
int3
dec
fisttpll
fucomi
lcall
pop
mov
lods
push
dec
xchg
lods
ret
es
cld
or
sub
mov
xchg
mov
lock
or
rcrl
mov
mov
inc
movsl
jmp
mov
push
sbb
jp
repnz
cmp
jne
xchg
ljmp
sub
stc
inc
or
inc
mov
push
pop
sahf
xor
subb
dec
loope
pop
sti
jnp
jne
jbe
or
or
jmp
lock
lret
pop
xor
mov
loop
fisubrl
test
pop
sbb
test
dec
xor
aam
pop
dec
fs
int3
ficoml
repz
shr
push
sbbb
stc
fldcw
pop
pop
repz
test
xchg
xchg
out
jle
mov
inc
inc
add
push
or
rorb
jl
add
sub
movsb
imul
cmp
jecxz
inc
jne
pop
xor
lret
lahf
mov
or
ret
mov
pop
cwtl
adc
in
jae
ss
gs
cmp
fldt
call
movsl
pop
mov
shrl
lds
mov
in
adcw
out
sarb
addr16
xchg
test
dec
xor
fwait
sub
mov
js
lods
nop
popl
sub
andl
dec
lods
mov
mov
xchg
lret
sti
inc
sub
sub
hlt
xchg
sbb
into
push
dec
inc
inc
aas
ficoml
mov
lret
inc
fcomi
cmp
xchg
stos
dec
ja
push
inc
out
sub
lahf
pop
faddl
mov
mov
clc
sbbb
nop
mov
std
loope
add
inc
xlat
pop
mov
icebp
push
and
outsl
cli
les
sbb
insb
xlat
into
push
sub
mov
pop
rcl
mov
sub
roll
push
dec
jo
loopne
mov
shll
leave
test
jb
data16
aas
cmp
movsl
ljmp
mov
inc
inc
sbb
aas
jge
mov
sahf
mov
fildl
pusha
jmp
xchg
ljmp
sub
mov
fidivl
adc
popf
insb
fwait
imul
push
loope
and
inc
jae
test
xchg
and
mov
mov
mov
pop
xchg
add
outsb
fisubs
mov
cltd
aaa
jmp
mov
or
int
or
mov
and
notb
and
xchg
sbb
stc
xor
mov
sub
jg
mov
jne
mov
cli
push
sub
adc
inc
inc
test
dec
repnz
cmpsb
xchg
loop
add
call
and
fsubrp
test
pop
mov
in
negl
mov
or
imul
stos
loop
xor
mov
pop
aad
inc
lea
int
pop
fs
mov
stc
mov
jge
pop
lea
push
sbb
xchg
call
and
and
xchg
adc
xor
inc
lods
lret
mov
notb
xchg
mov
sahf
jo
adcl
mov
in
adc
cld
in
das
pop
push
in
cmpsb
or
pushf
xchg
sub
add
dec
ret
xchg
add
pusha
xchg
data16
out
pop
mov
mov
fwait
roll
sarb
cmp
dec
dec
repz
xchg
inc
pop
leave
xchg
jp
and
jns
lret
xchg
push
notl
imul
iret
dec
out
daa
jp
cmp
testb
lret
aas
sahf
add
sarb
dec
lods
sub
add
out
xchg
mov
xor
enter
pop
sbb
out
push
push
cs
daa
inc
hlt
test
or
jg
push
sbb
cwtl
push
orl
or
test
enter
inc
mov
mov
adc
lcall
cmpsl
mov
cltd
aas
mov
daa
xchg
pop
gs
xchg
shll
cltd
pop
leave
add
cmpsb
andb
pop
test
add
into
lock
and
iret
insb
jbe
mov
shrl
jmp
ret
ja
stos
pop
aas
add
mov
fstps
sub
push
fwait
mov
jmp
push
jp
mov
sbb
adc
dec
xchg
jno
fucom
cli
dec
in
es
pop
mov
or
into
add
cld
jmp
aad
mov
in
aad
js
movsl
inc
bound
aad
push
insl
or
adc
loop
imul
lcall
mov
aas
out
pop
pop
and
xor
jl
mov
adcl
mov
push
xchg
outsb
lods
bound
cmp
lods
push
lcall
add
mov
or
push
xchg
addb
shrb
or
or
cmp
out
call
jle
jns
adc
cmpsb
jns
or
xor
loop
pop
mov
or
push
stos
imul
sub
pop
ljmp
mov
mov
int
bound
xor
adc
je
jmp
ret
ror
sar
stos
sti
into
aaa
mov
test
mov
push
push
xor
cld
cmp
push
push
jno
jb
push
addr16
pop
push
inc
adc
rcr
mov
or
into
mov
xchg
jb
cmc
jle
pop
repz
mov
xchg
out
or
and
or
nop
dec
loop
lds
push
out
pop
gs
jns
jo
xor
lds
sbb
dec
sub
sar
das
cltd
jb
add
popa
add
das
adc
xchg
test
mov
sahf
das
push
dec
xor
add
clc
nop
xchg
adc
adc
insl
fcompl
mov
jmp
or
test
mov
ja
xor
or
jmp
cmp
stos
pop
pop
stc
pop
mov
arpl
jbe
jg
jl
stc
fildl
jle
mov
jg
inc
xor
push
and
and
mov
push
cmpsb
test
shrb
in
add
out
mov
jo
in
out
addr16
popa
mov
enter
xchg
repnz
dec
jbe
mov
iret
xor
sahf
pop
dec
cmp
jg
sub
pop
call
inc
xor
cmpsl
loope
push
mov
ret
std
cmp
xchg
jo
cs
add
test
rclb
and
adc
sub
mov
adc
leave
jmp
xor
fwait
mov
pop
std
cmc
dec
lea
fs
sahf
xor
push
push
out
lea
push
and
jl
xchg
inc
or
cmp
pop
lods
jge
pop
push
xor
push
lret
jg
jg
clc
ret
cmp
dec
mov
ljmp
sub
adc
xchg
xor
xor
sub
jns
push
push
lods
movsl
xchg
scas
xchg
mov
push
jne
sbb
sub
into
mov
lock
jmp
jns
fwait
lret
lea
lods
push
jl
and
cmp
push
in
xrelease
push
lret
xor
and
mov
mov
cmpb
inc
add
lret
pusha
cmp
outsb
out
insb
adc
cmp
dec
dec
daa
add
repnz
xchg
mov
testl
xchg
cmpsb
pop
mov
imul
shrb
mov
xlat
pop
cmp
xor
push
push
sub
movsl
inc
mov
sti
cmpsb
or
pushf
lea
jl
sbb
sub
mov
cwtl
out
std
xchg
cld
rcrb
pushf
jecxz
sbb
inc
stos
pop
jb
rcll
add
lret
insb
test
repnz
inc
ja
sbb
add
stos
add
mov
xor
add
and
sbb
shr
movsb
ljmp
adc
movb
cmp
pop
addb
xor
loop
cmp
xchg
pop
iret
stos
xor
inc
add
es
adc
inc
jp
lock
xchg
pop
les
push
pop
sub
out
test
enter
outsl
adc
push
or
jo
incb
js
int3
pusha
sbb
popf
jo
int
mov
cwtl
arpl
mov
mov
call
dec
test
aad
fwait
dec
in
aad
or
std
cs
mov
pop
sub
cmp
sbbb
jo
or
aaa
imulb
scas
pop
icebp
into
fisubrl
mov
fistps
sbb
subb
dec
xchg
test
push
mov
int3
scas
sbb
hlt
int
xor
inc
loope
cmp
shrb
out
xchg
les
dec
ss
jbe
fistl
xor
jbe
lds
pop
dec
jl
add
mov
cltd
push
mov
loop
pop
mov
pop
lods
dec
cld
xchg
xor
pop
sar
dec
jmp
test
inc
or
clc
adc
das
add
sub
push
mov
repz
lds
fildl
push
lret
in
outsl
adc
mov
shl
mull
xchg
ss
rorb
fiaddl
cmp
pop
xor
ret
in
sahf
push
sub
stos
in
sbbb
cli
mov
push
xchg
fisubs
movsl
adc
mov
sahf
insb
jae
negl
fwait
ljmp
push
adc
leave
ret
mov
push
pop
ret
frstor
addr16
mov
in
adc
mov
fldcw
mov
jb
lds
gs
fldenv
push
pop
lock
adc
int3
fildll
jb
popa
sbb
pop
push
icebp
jo
movb
mov
data16
sub
loopne
adc
lret
push
mov
jmp
cmpsl
mov
mov
cmc
mov
push
adc
mov
iret
clc
call
inc
aad
insl
test
fmull
negb
fldt
and
and
loope
jno
adc
and
hlt
inc
xchg
jge
aas
fwait
lcall
iret
adc
push
xchg
xchg
lahf
xchg
push
mov
div
pushf
mov
cmp
push
mov
loopne
inc
jb
add
push
arpl
or
in
rcr
mov
fstp
mov
rolb
insb
call
std
test
xor
int3
repz
lods
test
cmpsl
xchg
jno
xchg
cli
dec
imul
add
cmp
ljmp
push
push
sub
adc
insb
arpl
jns
aam
mov
or
sarl
ss
shll
imulb
in
fisttpll
mov
pop
xchg
ljmp
jecxz
loop
out
cwtl
sbb
and
sub
sub
popa
fisttps
mov
jl
jle
dec
repnz
sbb
xchg
and
jmp
cmpl
dec
cltd
dec
loope
pop
mov
ds
pop
sti
add
andl
add
outsl
lods
arpl
hlt
or
stos
call
sbb
mov
aam
xchg
push
imul
addr16
insb
cli
test
cmpsl
int
xchg
jne
xchg
lahf
xchg
mov
inc
jno
stc
mov
pop
arpl
lret
push
aaa
mov
mov
mov
loopne
lahf
in
sub
and
and
lock
xchg
adc
inc
repnz
daa
push
jb
xchg
scas
sub
test
in
pop
mov
dec
add
dec
and
and
jnp
dec
pop
inc
pop
clc
sub
lret
mov
add
xchg
mov
cltd
pop
scas
mov
inc
sbb
jge
mov
nop
adc
and
sbb
cmp
pop
jl
movsl
dec
add
cmp
addr16
add
pop
jnp
jmp
fiadds
pop
sub
ja
xor
dec
push
mov
sbb
xor
sahf
enter
xchg
jnp
xor
xchg
mov
inc
and
push
dec
cmp
imul
pop
lahf
int3
push
pushf
adc
dec
sbb
sbb
pop
ss
inc
inc
leave
push
pusha
xchg
sbb
stc
add
jle
movb
or
jnp
sti
and
pop
cmp
inc
paddq
sbb
dec
sub
cmp
in
sti
ret
mov
sbb
and
cli
cmc
sbb
pop
roll
lds
and
and
icebp
out
cmp
pushf
loop
aaa
popf
or
xchg
lcall
pop
dec
and
call
dec
cmp
xchg
fs
cmc
ja
jno
shl
arpl
dec
jg
sbb
movsl
jb
movsb
jns
sbb
jo
mov
mov
add
sub
mov
in
mov
dec
stos
test
adc
loop
push
and
repnz
test
jb
cmp
xor
adcl
fs
jae
cmp
testl
add
xchg
stos
adc
push
jnp
sub
pop
out
xor
cwtl
cwtl
jecxz
cli
sbb
inc
movsb
and
and
inc
pop
dec
mov
xor
pop
add
sbb
repnz
and
aam
sahf
shlb
pop
jnp
sbb
jle
repnz
das
sarl
sarb
js
push
jecxz
jg
je,pt
or
pushf
mov
xlat
mov
cmp
mov
sub
out
fsubrp
loope
mov
add
sbb
imul
aad
repnz
adc
cmp
push
ret
jnp
mov
mov
aas
sub
ljmp
and
jnp
cmp
adc
js
dec
data16
orl
mov
test
ret
sbb
cli
cmpsl
mov
fistps
cwtl
call
push
xchg
cli
sbb
mov
sbb
popf
sahf
roll
pop
mov
cs
das
add
dec
mov
in
jp
cmc
addb
jns
loope
mov
add
jmp
mov
xchg
out
sbb
xchg
xor
movsb
cmpsb
hlt
fdiv
insb
add
push
mov
dec
cld
add
lods
insl
mov
mov
xchg
pop
pop
add
inc
movsb
je
and
and
push
and
mov
lods
das
cltd
dec
out
inc
int3
jbe
into
int3
mov
dec
sub
aam
aad
push
lods
clc
clc
icebp
xor
into
sbb
jbe
clc
inc
mov
mov
sarb
push
popf
jmp
aaa
movsl
idivl
mov
int
jbe
pop
mov
std
xor
sbb
insb
test
lahf
aad
ljmp
sub
ret
jno
ja
ds
idivb
iret
mov
cli
push
aam
rorb
and
icebp
out
jbe
aaa
mov
lret
and
pop
dec
mov
pop
mov
adc
adc
sti
jl
lcall
aad
sub
or
cmc
xchg
push
shlb
daa
xchg
push
repz
inc
std
lahf
pop
adc
icebp
les
jo
lods
pushf
insb
jno
rol
ljmp
cmc
cmp
fisubs
sbb
outsb
cli
mov
mov
cmp
dec
and
pop
push
pop
fs
mov
mov
pop
push
shrl
xor
xor
nop
gs
sub
fwait
jne
in
cmp
subl
push
popa
out
repnz
cli
lods
sbb
cmpsl
cltd
daa
cmp
sti
inc
inc
pushf
lods
cmpsl
push
popf
inc
fistpl
adc
pop
adc
testb
out
jecxz
ljmp
jae
leave
and
xor
dec
std
xor
mov
repz
icebp
rorl
call
xor
pop
xchg
call
pop
inc
push
int3
or
stos
sub
les
int3
ja
dec
dec
jno
adc
mov
add
out
or
dec
pop
fcomi
mov
stos
sub
div
inc
dec
stc
test
fsubrl
push
aaa
push
inc
shrl
xor
sbbb
pusha
or
dec
inc
pop
outsl
pop
rcr
jns
cli
xchg
or
aaa
add
test
imul
gs
addr16
call
jl
cmp
jge
cmp
test
cli
jg
dec
std
pop
mov
addr16
push
aaa
sbb
arpl
dec
rcrl
mov
insb
cmp
pop
lahf
adc
sub
adcl
call
push
xor
cli
mov
add
jb
loopne
addr16
rorb
sahf
fbstp
pop
jnp
sub
leave
sbb
and
ret
int
push
xor
sub
rcrl
mov
cltd
lcall
out
jmp
cli
xor
push
addr16
and
mov
repz
mov
push
out
mov
sbb
out
pop
hlt
pop
test
addb
sbb
push
sbb
mov
mov
stos
jo
fdivl
adc
and
jge
in
lahf
outsl
int3
sub
mov
stos
mov
push
and
dec
cwtl
xchg
inc
dec
ret
push
cli
cmpsl
push
mov
pop
adc
shl
insl
movsl
jmp
and
aaa
push
add
hlt
lds
and
call
stc
loop
jae
mov
loopne
aaa
add
jmp
mov
mov
bound
je
loop
cmp
xchg
iret
xchg
pop
mov
cmp
pop
movl
out
stc
ja
outsb
inc
in
rolb
das
sbb
and
xchg
add
loop
subl
xor
push
scas
mov
pop
xchg
add
aas
loope
pop
sbb
out
jb
or
in
leave
xchg
mov
call
xor
mov
ret
mov
popf
adc
stc
cmpsb
xchg
mov
mov
push
push
lods
dec
sub
scas
lret
add
stos
lcall
sub
add
lret
jo
in
cmc
mov
lcall
cmp
push
stc
pop
dec
popa
jp
fs
xor
fdivrl
jmp
mov
cmpb
and
hlt
aam
xchg
pop
cmpsl
sbbb
and
int3
push
jne
mov
data16
push
xchg
test
inc
push
cld
jnp
es
push
mulb
movl
ret
and
jno
scas
push
mov
or
daa
inc
mov
mov
loop
push
int3
aas
cli
lahf
sub
or
shll
in
push
xchg
mov
inc
xchg
popf
xor
int3
dec
arpl
pop
lahf
push
mov
dec
pop
xor
sbb
sbb
add
adc
mov
mov
gs
dec
hlt
mov
stc
cld
jae
pop
lods
mov
mov
inc
cwtl
out
mov
dec
mov
or
cmpsl
push
movsl
xor
sub
pop
lock
in
push
popa
xchg
roll
icebp
add
sub
jmp
inc
adc
jo
inc
gs
bound
inc
jp
mov
inc
mov
int3
jecxz
mov
pop
loopne
mov
push
stos
xchg
loopne
cmpsl
lret
rclb
insb
imul
scas
jg
xchg
and
outsl
addr16
xlat
add
mov
loope
lds
mov
mov
cmp
je
test
xlat
in
jg
data16
jae
shl
sahf
mov
jecxz
mov
fs
lahf
adc
dec
or
xchg
iret
xor
les
call
int
mov
jg
push
fyl2x
rorl
cmp
addr16
jg
out
adc
inc
xor
jne
adc
movsl
push
cwtl
loop,pt
pushf
push
xchg
lret
cmp
fs
inc
sbb
cmp
add
mov
push
add
addr16
stos
mov
iret
inc
call
mov
or
xlat
mov
sbb
inc
mov
pusha
scas
sarb
xor
inc
insl
mov
jecxz
mov
jno
xchg
cmp
idivb
adc
sbb
sbb
mov
inc
push
negb
in
adc
jae
dec
dec
out
cmc
mov
push
dec
jl
or
cltd
ret
sbb
fwait
xor
mov
pop
sub
fstp
stc
sub
sbb
xor
std
mov
inc
call
pop
pop
std
lret
xchg
mov
add
mov
add
or
stc
lahf
mov
outsb
adc
and
cmp
cmp
sub
xorl
pop
mov
mov
mov
call
adc
inc
sbb
test
xchg
les
outsl
imul
cmp
rol
std
ret
iret
xchg
das
cmpl
out
mov
push
inc
xchg
shrl
mov
lahf
ja
insb
out
cmp
mov
bnd
xchg
push
push
add
pop
js
shll
xchg
sub
adc
rorl
movsl
std
sbb
inc
jle
outsl
sub
js
ret
push
xchg
fldenv
cld
xchg
aam
adc
mov
adc
shrl
sub
push
sbb
mov
pop
dec
adcl
gs
xorb
xchg
jg
leave
mov
push
addr16
repnz
aad
testl
insb
cmp
jecxz
cli
cwtl
in
bound
leave
fs
ds
mov
jmp
mov
out
les
cmc
push
loope
jb
mov
inc
cmpsb
xor
and
mov
rcll
push
sbb
pop
ljmp
stc
setle
or
inc
xchg
iret
stc
fistps
mov
inc
sbb
adc
xor
in
pop
insb
inc
test
andl
stc
adc
rorl
cld
xlat
dec
sub
push
xor
notb
jnp
pop
mov
fmull
dec
and
aam
jo
dec
test
pop
out
xchg
into
rorb
cmp
imul
xchg
pop
dec
mov
int3
adcl
cmp
jo
jo
sbb
xor
cmp
cmp
lods
sub
xor
ljmp
shll
les
fs
in
push
mov
mov
outsb
or
loopne
jmp
inc
call
dec
loope
and
pop
leave
or
clc
xor
add
sub
dec
mov
cmp
jle
jmp
cs
je
jns
push
pop
sub
lahf
sbb
add
adcb
xlat
les
imul
and
add
add
pop
mov
idivb
pop
fmulp
repz
sub
add
jo
lods
xchg
int
jns
and
push
arpl
iret
aam
pushf
sub
xor
jmp
xor
push
push
mov
push
xchg
les
aad
out
mov
fcoml
bound
and
enter
imul
xchg
outsb
fs
add
imul
dec
insl
dec
pop
jno
jmp
lods
cli
outsl
push
xor
pop
fidivrl
lret
sub
arpl
mov
jecxz
adc
mov
int
inc
fidivrs
pop
sub
jno
mov
lahf
or
or
std
mov
add
test
inc
mov
es
pop
cli
lock
lret
mov
mov
mov
mov
stos
mov
dec
lcall
or
in
adc
mov
hlt
mov
add
push
mov
arpl
cwtl
inc
or
or
sub
add
hlt
incb
push
xchg
cmp
mov
adc
movsl
push
jo
frstor
adc
out
mov
sbb
int
mov
imul
jno
jno
dec
mov
icebp
jmp
pop
and
ljmp
ljmp
aas
and
mov
sbb
incb
cmp
sub
cmp
cmp
negl
mov
pusha
and
sbb
cs
xchg
in
movsb
dec
dec
int
adc
mov
cmp
icebp
cli
mov
xor
in
loop
movsb
xchg
xorl
popa
je
cmp
sub
or
push
fxch
dec
test
inc
adc
clc
popf
cmpsl
xlat
ja
cmp
dec
loope
int
test
inc
dec
jg
mov
lods
bound
pusha
xorb
dec
xlat
pop
dec
add
stc
lcall
test
dec
cmpsb
cmpsl
test
adc
jo
fs
pop
mov
jo
ss
rclb
loopne
jne
push
or
adcb
xchg
pop
int
and
stc
fmul
dec
outsl
jp
cmp
fildll
idivb
jbe
mov
inc
fnstenv
adc
mov
sahf
out
and
mov
cwtl
nop
lds
push
xor
lcall
xchg
stc
cmp
test
cmpb
shll
jnp
inc
dec
loope
lcall
xor
sbb
push
push
lret
pop
mov
dec
inc
lock
cmp
in
inc
jle
inc
dec
dec
ds
jns
ror
fimull
test
sbb
fcmovnb
adc
dec
cmp
js
arpl
imul
pop
fsubl
add
pop
movsb
pushf
aas
push
cmp
addr16
bound
jb
je
cli
out
xor
sbb
inc
add
addr16
push
dec
xchg
outsb
repnz
ds
adc
ficoms
scas
loopne
jnp
pop
movsl
xor
add
lcall
cmp
push
nop
mov
or
xor
cmp
or
movsl
addl
inc
outsl
inc
into
cli
push
jle
fdivl
popf
push
mov
lcall
mov
shll
add
add
mov
mov
pushf
sti
sahf
ret
inc
js
sub
xor
xlat
inc
sbbl
add
mov
faddl
test
or
or
pop
push
inc
out
vmovaps
mov
repnz
inc
clc
mov
xor
inc
pop
jns
and
clc
fistl
mov
inc
dec
rcr
add
add
lea
xchg
jne
out
test
mov
int
sbb
je
jne
pushf
sub
inc
inc
movsl
into
inc
out
clc
call
lret
mov
or
sbb
cmpsl
dec
mov
inc
leave
shll
jmp
aad
ljmp
cmp
mov
add
scas
popa
fwait
jb
movntq
xchg
ror
push
push
adc
pop
std
cs
popf
sub
mov
adc
dec
dec
xchg
mov
xorl
mov
fcomi
lahf
push
movsl
std
mov
xor
lret
inc
sbb
xchg
pop
jns
pop
lcall
mov
and
ljmp
adc
add
xchg
pop
and
sbb
dec
mov
hlt
stos
push
sbb
dec
mov
mov
aaa
je
and
push
daa
out
test
stos
test
int
xor
out
xchg
lret
xchg
xchg
mov
cmp
and
mov
and
ja
aam
cli
or
cltd
insl
and
push
in
inc
data16
mov
aas
test
aas
pop
and
adc
into
jle
xor
mov
dec
and
fstpt
xchg
leave
fcomps
imul
xchg
mov
inc
in
xchg
xchg
ret
dec
xchg
loop
push
xor
jne
ja
sbb
cmc
push
les
jns
xchg
nop
pop
inc
jg
sbb
repz
out
cmp
in
rorl
jns
ficoms
lods
jnp
stc
enter
xchg
mov
pop
outsb
clc
sar
cmp
test
xchg
aaa
sbb
push
mov
and
lcall
icebp
cmp
aad
cltd
pop
shrb
imul
lds
fcompl
sahf
testb
dec
in
addr16
out
hlt
jg
ficompl
xchg
sbb
aaa
pop
stc
mov
dec
cmp
loop
mov
test
das
inc
testl
jle
xlat
sahf
negl
js
cs
or
addb
lods
xchg
andb
xchg
and
adc
add
push
dec
insl
les
in
xchg
mov
roll
jl
test
ss
push
or
push
inc
out
aad
adc
pushf
test
lods
sbb
dec
cmp
call
mov
cmp
pop
add
test
jnp
and
pusha
ficoml
or
jnp
mov
testb
sbb
mov
push
or
fadds
cwtl
mov
inc
push
mov
sub
mov
movl
mov
out
lods
mov
data16
aaa
xchg
mov
cmp
into
test
lock
pop
add
rcrb
and
xor
cmc
iret
sahf
ljmp
cmp
mov
call
testl
mov
mov
aad
or
ja
sbb
jl
push
leave
or
int
aam
mov
sarb
lods
dec
js
fisubs
lds
orl
in
cmp
jns
in
loopne
dec
inc
push
xchg
mov
xchg
data16
add
pop
mov
cmp
outsb
push
cld
push
and
adcl
jmp
daa
daa
leave
sub
cmpsl
inc
cmp
test
insb
es
mov
cwtl
mov
xchg
and
int
out
inc
sub
popa
loope
pop
pushf
aas
jbe
dec
jne
movl
aam
inc
clc
and
dec
mov
add
pop
cmpsb
decl
fisttps
imulb
jno
push
lret
adc
sub
ret
je
js
pop
xchg
paddusw
sbb
int
pop
lock
fdivrp
adc
mov
ret
inc
dec
movsl
clc
shrl
xchg
les
loop
adc
mov
inc
loop
mov
jo
and
fbld
test
idivb
dec
in
je
loop
jl
test
insb
jb
cld
xchg
cmp
pop
lahf
dec
jmp
cmpsl
imul
lcall
popa
pop
icebp
mov
aaa
cwtl
add
add
fnsave
imul
in
xchg
push
stos
mov
push
mov
js
xchg
lea
int3
fisttpl
les
adc
add
or
push
sbb
jae
and
pop
orb
adc
adc
cmp
dec
stos
dec
clc
stos
lods
dec
xchg
or
cmp
nop
ja
inc
adc
test
or
sub
adcb
movsl
pop
mov
lcall
xchg
loopne
adc
and
mov
dec
ret
inc
and
xchg
mov
hlt
pop
addr16
jp
shlb
mov
inc
fisubrs
jecxz
loopne
lds
adc
adc
ss
in
jns
fs
sub
mov
and
mov
mov
ror
call
leave
arpl
outsb
stos
cmc
inc
sub
rorl
inc
xchg
adc
or
mov
lret
adcb
and
das
and
ret
fdivs
mov
repz
and
pop
icebp
and
push
mov
pop
or
push
in
cmp
lods
inc
add
cmc
cs
leave
ds
imul
pop
aam
jne
mov
lock
ss
aad
lahf
jb
mov
pop
push
jnp
jnp
mov
arpl
ja
ds
test
lock
mov
cmp
stos
add
mov
lcall
adc
andb
pop
push
mov
rcll
std
mov
aaa
cmp
dec
arpl
mov
fistps
into
sti
incl
int3
in
xor
jbe
sub
sbb
sub
fistpll
inc
mov
data16
addr16
aas
mov
jo
call
xlat
cmp
inc
add
add
push
jne
mov
add
shufps
imul
cmp
xlat
lods
loopne
aam
xor
in
or
outsb
cmp
dec
pushf
fdivs
pop
add
out
sub
push
icebp
int
inc
leave
fdivs
movsb
ja
inc
dec
test
sbb
or
mov
ds
xor
ss
dec
outsb
std
pop
js
or
add
and
stc
fld
in
les
sbb
push
adc
adc
outsl
shll
dec
es
or
mov
cmp
push
mov
shrl
dec
bound
sahf
jg
arpl
pop
jmp
xor
push
popf
and
sub
mov
jle
sbb
inc
arpl
jecxz
pop
sub
hlt
ds
xchg
orb
movsb
int3
add
sbb
hlt
loope
mov
aad
jge
push
insb
pusha
lods
aaa
xor
jbe
inc
sahf
fsubrs
icebp
cli
mov
xor
fcompl
push
dec
inc
lods
adc
je
mov
fcomp
stc
mov
inc
lea
add
add
dec
mov
push
imul
cmp
lock
shl
mov
sti
ret
sbb
nop
pop
jp
test
pop
mov
add
bound
insb
cmp
stos
dec
fs
or
push
fstpt
cmpsl
sub
cli
shlb
int3
pop
lods
mov
sbb
subb
jl
sub
fsubrs
xchg
or
add
mov
test
xor
mov
mov
push
stos
pop
pop
pop
loope
hlt
xlat
inc
push
push
in
pop
inc
clc
jecxz
jp
das
xchg
addr16
cmp
inc
test
push
outsb
push
pop
push
lret
pop
test
adc
xor
cmpsb
fdecstp
test
xor
pusha
stos
xor
addl
and
xchg
adc
sub
bound
xchg
popf
jnp
push
mov
dec
loopne
mov
adcl
mov
mov
mov
outsb
xchg
pop
jmp
aad
dec
cmp
pushf
in
mov
dec
cmp
dec
jecxz
mov
sbb
mov
jo
aad
fbld
out
lea
push
fldl
cwtl
dec
enter
push
add
pavgb
adc
dec
ds
sahf
nop
add
sahf
push
jg
jecxz
pop
mov
xchg
cmp
mov
inc
cmp
dec
shrl
sbb
out
jns
cs
test
sub
mov
xchg
test
or
cmp
mov
mov
mov
push
nop
lods
fdivrl
andb
cli
add
jo
out
jg
xor
movsl
loop
mov
jbe
test
lds
mov
cs
enter
xchg
mov
jb
adc
movsl
pop
inc
aas
addr16
shl
int3
push
outsb
rcll
or
pushf
inc
fidivs
es
cmpsb
add
imul
or
lcall
xchg
jo
pushf
fimuls
js,pn
sub
idivb
and
dec
push
mov
inc
and
sbb
std
pop
adc
mov
rorb
add
rcrb
loope
pop
scas
daa
xor
jb
pop
fisubs
jns
xor
sub
incb
testl
pop
testl
push
cmp
lret
jno
xchg
push
repnz
and
data16
insl
mov
pop
scas
clc
add
icebp
inc
adc
sub
mov
jo
add
sub
sub
test
or
aas
outsb
xlat
inc
mov
inc
insl
rcrb
mov
and
dec
jo
test
push
insl
sbb
inc
mov
jp
decl
lret
push
sbb
std
mov
and
es
xchg
push
or
lea
in
dec
out
insb
jns
div
adc
push
les
push
popa
jmp
and
jle
rcll
cmp
or
push
sbb
insb
xor
inc
sub
cli
xorl
mov
cmp
inc
stc
insb
dec
repnz
lods
mov
mov
movsl
xchg
cld
mov
les
in
pusha
or
xchg
xchg
cmp
ja
mov
cmpb
xchg
movsl
adc
dec
rol
stc
add
mov
lret
push
dec
mov
cmc
in
or
xchg
and
pop
clc
testb
or
loop
pop
ret
mov
pop
or
inc
push
test
mov
js
lret
mov
jle
add
jp
mov
cmp
xor
sub
mov
xor
aas
jmp
sub
sbbl
xor
std
mov
xchg
mov
scas
sub
mov
xchg
or
sti
data16
adc
inc
mov
ds
punpckhdq
sti
mov
xor
roll
pushf
dec
sbb
add
cmp
mov
arpl
pop
int
inc
in
insl
in
adc
mov
push
clc
jae
idivb
and
sbbb
sub
shrb
outsb
xor
cmpsb
jmp
push
fiaddl
xchg
adc
cltd
fwait
and
sub
push
xor
or
insb
hlt
push
push
adc
movsb
movaps
das
mov
imulb
popf
jae
mov
roll
pop
sub
cmpsb
add
mov
je
xor
pop
jo
inc
fdivr
adc
xor
pop
adc
and
dec
push
js
inc
and
cli
push
lret
fisubs
das
aam
mov
add
in
fisubs
and
out
pusha
inc
cmc
ja
pop
cmc
dec
inc
je
pop
lahf
in
push
push
sbb
int3
jmp
xchg
test
in
icebp
lret
ss
push
cmp
int
lahf
mov
pop
pcmpgtw
bnd
outsb
xchg
cld
testl
jg
hlt
push
int
dec
out
data16
and
lahf
jl
cmp
jp
into
jg
cltd
push
clc
sub
popa
mov
fcmovnb
stos
fstpt
stos
lock
push
cwtl
js
ja
mov
xchg
stc
cld
pop
testb
mov
jns
adc
pop
sub
leave
fdivr
repz
out
inc
lcall
adc
clc
iret
xlat
rcll
sbb
fcmovb
mov
popf
aas
xchg
int
inc
push
out
fstps
sub
int
imul
repnz
jmp
push
jp
out
inc
lret
out
inc
aaa
rcrb
leave
jns
push
mov
fstl
inc
or
inc
stc
cmpb
sbb
imul
jge
and
shr
outsl
loopne
nop
lock
les
xchg
sub
stos
inc
xchg
mov
xor
lea
ljmp
push
and
dec
jo
jbe
mov
aaa
lock
sbb
dec
xchg
push
inc
jg
or
testl
or
add
cltd
int3
push
ret
sbb
xlat
sbb
mov
icebp
sbb
mov
loope
add
outsb
imul
ds
andl
add
mov
inc
push
shrl
sbb
jne
mov
push
or
cli
jns
aad
mov
push
mov
xor
or
xchg
mov
jl
cmpsb
lock
enter
jb
das
fistpll
stos
ljmp
cmp
jns
jbe
scas
dec
mov
push
std
int3
pop
das
stos
or
pop
mov
dec
mov
and
jb
iret
in
mov
push
fsubr
dec
push
push
xor
sub
mov
popa
es
and
fsubrp
sbb
xchg
cmp
fstpt
iret
frstor
xchg
ret
or
xchg
in
sbb
jmp
pop
xor
leave
incb
pop
mov
sbb
dec
mov
flds
loopne
and
shrl
outsl
lret
inc
mov
jae
and
xchg
xchg
dec
mov
jp
ss
sub
pop
sbb
jnp
popa
popa
push
jnp
jno
aad
mov
sbb
mov
stc
das
ret
dec
daa
mov
dec
xchg
xor
outsl
xor
dec
xchg
add
add
mov
daa
xor
cmp
ret
scas
inc
iret
inc
in
xorl
clc
xor
addr16
hlt
xchg
fstpl
pop
lods
mov
mov
mov
pop
mov
jbe
sub
in
push
bound
xchg
cmp
out
pop
gs
mov
lret
jecxz
or
cmpsb
fldl
lods
jb
push
insl
cli
insb
sahf
sbb
xchg
mov
mov
ret
xchg
jg
cmpb
jbe
fwait
lock
faddl
data16
dec
jns
or
out
pop
jmp
cmpsb
ds
push
inc
adc
in
adc
cmp
pop
fistpll
call
cmpsl
sbb
sub
iret
push
and
sub
jo
ja
iret
inc
add
jnp
jge
dec
jp
mov
lods
movsb
fucomi
and
push
pop
movsl
adc
pushf
inc
push
aam
inc
jbe
fsubl
push
inc
cmp
repnz
sub
addr16
leave
out
jno
call
inc
pop
cmpsl
or
int3
outsl
dec
cmp
adc
ret
jg
pop
sbb
outsl
shll
mov
insl
lea
mov
movsl
scas
jl
xlat
dec
jnp
jo,pn
inc
in
xlat
cmc
inc
cwtl
xchg
mov
mov
push
push
imulb
mov
cmovp
mov
mov
jg
aam
and
adc
add
sub
aam
fisubs
pop
int3
andb
incb
jl
mov
fs
js
test
movsl
mov
pop
dec
cltd
push
lds
dec
mov
lock
das
into
es
xor
ror
xchg
lods
push
jns
add
and
roll
cwtl
repz
test
ret
hlt
mov
test
mov
push
sbb
xchg
test
js
push
inc
xchg
enter
and
adc
and
cld
jge
imul
stos
inc
je
add
cld
mov
mov
and
jg
sub
js
mov
push
cmp
inc
jns
enter
sub
shrb
push
dec
push
mov
xor
mov
jo
sarb
xor
out
jmp
jl
pop
jp
ds
faddl
push
mov
jnp
cmp
cwtl
pop
mov
shr
add
les
sub
and
mulb
adc
out
nopl
fidivl
or
xor
enter
mov
fnstsw
jmp
stc
or
sbb
dec
mov
push
fisttps
cmpsl
cld
bound
mov
xchg
test
cs
cmp
lds
inc
fdivl
add
inc
imul
bound
lcall
jae
adc
cmp
or
shr
test
ljmp
arpl
cmp
and
sbb
pop
adc
outsl
jo
mov
call
sahf
aas
sub
sbb
adc
mov
cmc
leave
lds
push
adc
xchg
and
frstpm(287
xchg
enter
xchg
mov
addr16
push
or
js
insb
mov
in
adc
repnz
jg
into
mov
fs
add
lret
jns
imulb
and
xlat
sbb
sub
cmp
jle
mov
fcomip
or
scas
lahf
movsb
in
rolb
cs
fstpl
add
lods
jo
outsl
shrb
or
push
xor
roll
jns
lcall
push
jp
test
out
mov
js
jbe
jo
lea
dec
fsubrp
into
fcoms
popa
jb
xor
scas
or
jecxz
mov
mov
addr16
out
sbb
aam
cmp
pop
mov
and
push
ret
fldcw
mull
test
push
jle
fnsave
xchg
movsl
repnz
adc
test
leave
push
xchg
pop
xor
test
sbbb
dec
arpl
pop
ljmp
add
ret
mov
in
cmp
and
das
mov
pop
in
dec
and
sar
imul
mov
add
mov
and
int3
cmpsb
leave
sahf
insb
jo
pop
sahf
pop
leave
in
push
clc
andb
scas
jp
es
sbb
call
xchg
jo
inc
fdivrl
dec
and
cld
cmp
add
jge
andl
addr16
adc
int3
or
push
aad
sahf
push
pushl
sti
aam
sub
in
mov
stos
adc
stc
repz
ror
fsub
repnz
mov
add
xchg
pop
sub
das
xor
mov
push
mov
push
xchg
sbbl
adc
or
cld
outsb
ret
push
pop
and
mov
popa
outsl
fidivs
dec
mov
sahf
or
add
fnstcw
ss
loope
addr16
sub
in
mov
push
xchg
and
mov
mov
shr
jo
adcb
sub
jo
adc
gs
lock
scas
outsl
add
imul
ret
mov
pop
js
stos
popf
dec
out
aad
cmp
sub
in
scas
cmp
or
loope
ss
push
lret
dec
mov
shlb
outsb
jecxz
mov
jp
enter
sub
stos
xor
mov
in
loopne
pop
mov
scas
std
jno
add
scas
or
jmp
ljmp
xchg
mov
dec
gs
shlb
mov
mov
cltd
aad
and
aaa
add
dec
xchg
and
xor
mov
dec
outsb
loop
and
add
jge
lods
cmp
popa
ja
inc
es
mov
test
lea
cmp
add
jg
or
mov
lahf
cltd
outsl
leave
inc
sbb
mov
int
jge
mov
inc
mov
mov
xchg
jl
out
mov
sub
pusha
xlat
or
or
mov
fiaddl
sbb
scas
out
pop
sbb
xchg
out
jecxz
stc
adc
jp
into
das
ss
sti
stc
xor
aas
push
in
mov
or
fcomp
push
mov
les
cmc
dec
mov
neg
cli
call
scas
daa
sbb
jno
int3
iret
and
mov
inc
sub
outsb
fiaddl
pop
call
sub
dec
sub
xor
add
lret
fcmovu
js
outsb
inc
rcrb
ret
ds
mov
pop
lret
dec
mov
sub
sbb
pop
aad
cmp
test
test
rcrb
mov
and
test
push
jbe
cltd
hlt
and
sbb
lods
test
aam
or
sub
and
std
jbe
push
xchg
daa
cmp
mov
test
adc
mov
cwtl
fisttps
in
fnstsw
cmp
bound
dec
or
insl
fwait
dec
aam
mov
call
fsubl
add
pop
addl
add
cwtl
sarb
sub
test
ret
inc
push
cmp
nop
add
mov
cld
mov
loopne
xchg
fiaddl
imul
jp
xchg
shlb
dec
in
jmp
js
lcall
in
in
daa
sbb
push
or
out
test
mov
ljmp
jnp
push
repnz
pusha
adc
or
cld
cmp
fstpl
xor
out
fistpl
icebp
paddsb
lods
jb
inc
cmc
mov
push
pop
jo
pop
inc
sub
pop
loope
lods
mov
jp
int3
sahf
cmpb
mov
cmp
mov
jle
mov
notl
pop
stos
push
jo
scas
cmp
push
shlb
out
je
pop
adc
or
dec
sub
mov
cmp
and
dec
xchg
mov
stos
mov
sbb
or
jo
dec
sbb
popa
or
adc
xchg
sarb
es
add
push
in
lret
and
sahf
daa
sub
test
mov
dec
xor
cmpsl
push
or
dec
adc
aam
out
notb
movsb
std
testb
ret
xor
pusha
lods
cmp
dec
and
hlt
stos
in
mov
cmp
das
inc
lods
nop
add
leave
aad
cmp
lock
xor
mov
sub
mov
mov
das
xor
cwtl
fisttpl
rorl
imul
lock
out
repnz
dec
mov
cli
int
mov
sahf
cmp
ja
cmp
frstor
ficoml
fmul
je
sub
fdivrl
and
fdivrl
sbb
cs
out
adc
and
push
cmp
cmp
cs
je
mov
lock
int3
mov
loop
scas
loopne
sub
push
shlb
hlt
lahf
mov
arpl
std
scas
arpl
jns
add
sub
ss
in
adc
loop
sub
xchg
push
ja
mov
filds
inc
pop
xchg
jae
loopne
repnz
sbb
or
xor
aad
pop
dec
sbb
adc
ja
pop
fdivp
int3
js
mov
jecxz
jmp
popf
outsb
lods
lret
inc
xor
sub
dec
xchg
lcall
sbb
jno
xor
jge
xor
leave
sbb
mov
fisttps
pop
data16
sub
cwtl
pop
xchg
push
in
push
jg
mull
mov
sbb
mov
in
cmp
xchg
cmp
adc
insb
cmc
push
lret
rcrl
lods
xchg
out
and
std
push
test
sub
sub
xor
add
adc
adc
arpl
popf
cmpsl
in
xor
loopne
xor
push
mov
or
add
jge
call
mov
jae
xchg
in
pop
mov
popf
mov
xchg
enter
jmp
adc
or
popf
loope
mov
loop
cmp
int
pop
cli
inc
stos
or
push
mov
mov
sub
inc
clc
out
mov
stos
xlat
clc
aad
push
pop
adc
lods
mov
scas
inc
sbb
mov
jne
les
or
rcrl
sbb
dec
jne
dec
iret
insl
hlt
fs
jbe
and
xor
movsb
jecxz
in
js
xchg
dec
jmp
stos
arpl
rcll
in
sub
mov
xchg
stos
gs
mov
push
sbb
int3
cmp
xchg
icebp
add
fwait
cmp
and
or
mov
xchg
scas
push
out
out
xchg
mov
sub
or
into
add
mov
mov
arpl
int
mov
push
cmp
outsl
in
inc
movl
cltd
jns,pn
sti
fcmovu
push
inc
mov
mov
sub
pop
mov
push
jge
int3
push
mov
les
mov
adcl
mov
and
add
dec
pop
testl
rorb
jns
dec
xchg
popa
inc
mov
push
pop
outsl
sbb
push
ljmp
mov
xchg
xor
ss
add
add
xchg
xor
cmpl
xchg
fstpl
mov
out
scas
xor
fimuls
pop
fsubrl
add
aam
jg
shll
mov
pop
inc
pop
inc
mov
add
pop
jl
mov
inc
pop
nop
mov
cmpl
std
cmp
dec
call
and
sti
sub
and
les
insb
ljmp
jb
add
sbb
add
in
popf
fstpt
inc
add
into
ja
inc
and
jns
test
lds
mov
lcall
xor
daa
dec
adc
stc
jp
and
mov
sbb
outsl
mov
cmp
enter
cmpsb
push
sbb
inc
pop
mov
shrb
adc
add
aad
ret
mov
and
fsubr
cmpsb
push
mov
rcl
into
push
mov
call
sub
out
fistl
xchg
int
mov
pop
inc
lds
fcmovnbe
dec
lods
cmpsb
or
push
jnp
adc
and
mov
ja
cmc
add
add
adc
inc
and
rol
mov
addr16
add
sarl
sbb
jne
out
hlt
sarb
jo
test
ljmp
mov
jb
fwait
mov
sbbb
jo
test
adc
sbb
dec
adc
mov
mull
add
xor
int
scas
lcall
sbb
arpl
test
loope
insb
inc
ss
nop
je
aad
outsl
shrb
push
fsubl
mov
and
or
inc
add
xchg
int
scas
mov
cmp
xor
aam
ficoms
sub
andb
loop
mov
aad
mov
jne
cli
ret
fadds
test
cmpsl
inc
adc
mov
mov
adc
xchg
dec
jl
enter
add
aaa
jb
daa
mov
addr16
sub
cs
lds
adc
or
rorb
nop
adc
cmp
sub
and
pop
stos
js
sbb
adcb
mov
sbb
loope
movsl
mov
jl
mov
shlb
dec
inc
or
xchg
dec
mov
or
ds
dec
dec
jae
jmp
adc
xchg
xchg
mov
std
inc
inc
mov
jmp
jg
outsl
lret
mov
movsl
jecxz
sbb
jle
stos
mov
xchg
movsb
sub
push
add
shrl
dec
push
sub
and
add
dec
and
push
idivb
into
shlb
inc
hlt
sub
or
lea
pop
loop
fcoms
mov
ficompl
jnp,pn
lods
leave
js
outsl
sub
mov
mov
data16
nop
cld
xor
pop
rcrb
arpl
xchg
scas
orb
push
inc
inc
nop
jno
fsubrs
mov
or
pop
jecxz
jge
cmp
cmpsl
cmpsl
mov
adc
pop
ret
hlt
lea
aad
mov
roll
push
jle
xor
pop
iret
jmp
cs
lahf
push
xor
mov
clc
jnp
out
out
xchg
stc
js
adc
sub
sub
cmp
mov
repz
repnz
fmulp
test
mov
inc
xchg
and
pop
ret
and
cmp
nop
jbe
mov
rcll
pop
pop
fimuls
test
pop
insl
iret
or
mov
xchg
jp
pop
int
or
cs
pop
in
pop
imul
nop
pop
jbe
sub
call
lcall
adcb
add
xor
add
sbb
pop
mov
jnp
adc
jno
jmp
popa
nop
push
lods
scas
dec
testl
clc
mov
cltd
mov
mov
mov
ret
jno
or
xchg
inc
xor
sbb
push
xchg
loopne
sbb
dec
pop
rcr
sbb
jmp
push
push
lahf
call
mov
adc
pop
pop
and
and
repz
or
sti
in
pusha
shrl
sarw
mov
sbb
push
pusha
pusha
cmp
cli
outsl
pop
mov
sbb
call
popf
scas
mov
jno
add
bound
lret
push
mov
dec
mov
cld
lds
add
xchg
icebp
in
mov
pop
dec
rorl
xchg
lock
sub
test
arpl
xchg
xchg
dec
pop
daa
mov
jbe
out
in
fwait
mov
insb
scas
into
jbe
in
out
fsub
inc
xor
xchg
imul
push
jle
mov
movsb
push
jecxz
enter
in
mov
lcall
xor
inc
mov
sar
pushf
push
cltd
es
push
hlt
dec
imul
mov
sbb
add
mov
les
push
fidivrl
ljmp
or
roll
push
mov
xchg
xor
nop
add
shrd
mov
xchg
gs
push
pop
fnsave
or
lds
jecxz
push
test
cmpsb
adc
fcoml
ret
jge
imul
xor
or
sub
sbb
sbb
loopne
mov
or
icebp
sub
aas
dec
mov
or
cltd
aad
mov
popf
xlat
scas
pop
push
lahf
adc
test
xor
out
sahf
in
fscale
and
out
mov
movsl
sar
and
adcb
and
xor
jb
les
cmp
or
je
mov
out
pop
xor
or
inc
dec
stos
xchg
jnp
dec
insl
call
test
push
dec
jg
xchg
mov
arpl
mov
fs
in
push
iret
cli
add
jb
dec
xor
rcrl
dec
mov
arpl
sub
pusha
fistpll
imul
xchg
mov
pusha
pop
pop
or
pop
fcomi
cmp
xchg
cmovge
out
scas
je
je
movsl
pusha
aaa
pop
and
jmp
jne
sbb
xor
aad
and
sbb
xor
sub
mov
test
xchg
das
fisttpll
cmp
add
lret
xor
lods
inc
mov
add
jnp
cmp
insb
push
sahf
addr16
mov
sti
rorb
ret
push
adc
xchg
cmp
and
sbb
outsl
les
cmc
fwait
inc
xchg
test
cmp
popf
push
mov
dec
sub
rolb
mov
fs
lods
insl
sahf
decl
dec
sub
enter
push
cmc
js
jecxz
out
in
add
jnp
int
dec
cmpsl
insl
adc
jb
xor
fstl
xchg
pop
jb
adc
inc
xchg
xor
adc
push
outsl
pop
push
mov
push
in
inc
cmp
jne
sarl
mov
sti
pop
daa
mov
ja
mov
sub
mov
loopne
jge
xor
jmp
nop
fwait
in
das
adc
mov
dec
repnz
inc
jge
rorl
pop
clc
fnstcw
cmpsb
imul
movb
std
nop
mov
xchg
xor
fwait
mov
or
sbb
testl
subl
jecxz
shlb
hlt
lahf
add
out
pop
sbb
call
push
ss
jno
ficoml
or
sbb
cs
inc
pop
scas
mov
pop
xchg
inc
xor
fwait
mov
test
lahf
sahf
lahf
sti
sbb
sbb
cmp
push
pop
sub
and
lcall
and
incb
jmp
cmc
adc
icebp
lret
lret
les
into
ret
xchg
adc
stc
cmp
mov
mov
lds
or
movsl
mov
pusha
sbb
adcl
push
ja
jl
mov
aas
cmp
mov
push
addr16
jg
mov
fcoms
inc
pop
icebp
in
stc
xor
push
scas
inc
push
ret
mov
testl
or
mov
pop
jmp
out
add
pop
push
rorl
out
pop
icebp
bnd
aad
in
mov
jge
pop
wrmsr
cli
jl
lcall
and
jne
fidivs
push
pop
les
cs
pusha
mov
mov
and
adc
nop
mov
or
mov
rcr
pop
jno
xchg
pop
popa
or
movsl
pop
hlt
daa
mov
insl
sbb
sbb
pop
push
inc
mov
mov
shrw
daa
xchg
std
fnsave
jae
xchg
dec
adc
sub
xchg
mov
jne
sub
in
pop
call
pop
ficomps
push
sbb
pushf
loopne
mov
lods
out
ret
lock
adc
fldl
mov
jnp
gs
mov
mov
sub
mov
inc
insb
pushw
add
sahf
cltd
fst
aad
outsb
cwtl
push
mov
sub
les
les
adcl
inc
xchg
and
fidivrl
loope
fstpt
out
sti
nop
add
mov
out
cmp
sbb
jecxz
sahf
lock
bndmov
lds
push
js
insb
aam
lcall
cmpsb
gs
sub
push
dec
jle
out
cmp
outsb
and
sub
xchg
mov
les
shrb
push
mov
mov
les
inc
hlt
push
stos
hlt
pop
cmp
adc
es
sbb
sarb
push
jge
in
cmp
stos
addb
pop
popa
clc
and
xlat
push
cmp
mov
je
clc
dec
add
sub
das
in
and
push
mov
test
fwait
enter
xchg
imul
ret
xchg
mov
sbb
popa
sbb
sub
cwtl
xchg
cltd
sbb
jno
mov
jno
mov
inc
mov
push
cmp
dec
xor
jno
scas
mov
enter
scas
and
add
or
push
stc
jae
int
xor
mov
cmpsl
mov
lea
or
dec
pop
cs
jge
push
inc
rorb
cmp
lret
test
testl
push
push
std
sub
jg
xchg
adc
jo
push
sub
and
or
daa
sbb
sahf
sbb
and
push
pop
push
jge
mov
mov
sub
mov
je
imul
cltd
aam
sbb
jae
das
cmp
mov
stc
add
shr
adc
mov
sti
cwtl
xor
enter
fldcw
rorb
pop
pop
mov
ds
ss
iret
icebp
cmp
jbe
push
sbb
cli
push
divl
lcall
outsb
inc
aad
leave
xor
add
ret
popa
mov
ficompl
cmpsl
cmp
flds
cld
lahf
icebp
mov
movsl
push
mov
inc
fcompl
scas
push
pop
xlat
pop
into
cmp
add
iret
ficompl
jp
out
inc
or
push
es
frstpm(287
sti
mov
push
lods
fstpt
adc
cmpsb
jne
sub
dec
insb
xor
sbb
dec
pop
shl
inc
cmp
addr16
test
inc
fcoms
sub
sbb
sbb
or
inc
lret
inc
aas
test
jbe
inc
ds
adc
or
and
xchg
xorl
pushf
jecxz
jmp
jmp
outsl
movsl
jnp
ret
pop
xor
js
rcr
adc
outsl
sbb
ja
sub
add
std
mov
push
dec
ficoml
push
clc
jns
iret
jmp
lret
fnstenv
and
fstps
jae
fs
daa
mov
pop
sub
or
test
pop
pop
imul
xchg
or
inc
sarl
idivl
jecxz
fnstenv
mov
mov
shl
fcompl
jmp
ljmp
sbb
cmp
sti
test
xchg
mov
pop
mov
sub
lcall
pop
loope
mov
lahf
xchg
test
fstps
pop
inc
mov
hlt
sti
xchg
dec
inc
jmp
xor
sbb
pop
mov
outsb
clc
rcll
xor
push
call
mov
ret
sbb
lret
outsb
xchg
fimull
sub
pop
and
aam
mov
int3
xor
xor
dec
xchg
mov
sub
repnz
inc
xchg
pop
stc
pusha
sub
jg
and
aas
sbb
fadd
dec
adc
lea
dec
cmp
and
xchg
lods
inc
pop
int
cld
jg
mov
jne
ss
and
and
sbb
inc
out
arpl
mov
and
fldl
mov
push
mov
mov
sub
outsb
push
inc
mov
jl
sbb
popa
push
out
aas
repz
andl
xlat
fists
test
jb
sub
ror
xor
inc
out
jo
adc
mov
imul
lods
pop
sbb
popf
in
das
adc
jno
das
add
addr16
sbb
ret
and
in
mov
push
jg
sbb
adc
pop
loope
fnstenv
out
mov
fiaddl
cmp
shr
xchg
dec
cmp
xlat
xchg
cld
sub
xchg
sahf
mov
xchg
push
xchg
dec
lcall
and
xor
xchg
cwtl
cmpl
test
adc
add
jecxz
int3
jnp
stos
sub
movsb
outsb
sbb
mov
lock
stos
lret
xchg
pop
sbb
push
test
das
pop
loopne
xor
fs
inc
push
push
dec
test
xor
jle
int3
or
stos
incb
aam
mov
bound
cld
inc
jns
outsb
mov
fsubr
cmc
xor
mov
insl
cli
outsb
sbb
jl
enter
bound
imull
in
fdivr
mov
arpl
xchg
sbb
cmpl
aad
mov
mov
std
mov
cld
nop
mov
fwait
mov
mov
cld
in
jl
pop
js
cmp
in
push
dec
jp
in
inc
repz
pop
sbb
inc
repz
gs
push
push
ret
and
cmp
loop
hlt
pusha
rcrb
sub
fiaddl
dec
jb
mov
jae
fadd
call
sbb
sub
test
rcr
fstpt
mov
loopne
add
and
dec
pop
mov
adc
lea
test
ret
out
jb
aad
push
out
data16
or
je
popf
mov
add
icebp
aaa
sahf
out
dec
std
pop
xchg
jp
mov
dec
jno
cmp
test
fxch
sarb
mov
sub
mov
jle
nop
jmp
adc
bound
pextrw
xchg
mov
mov
mov
add
mov
in
xchg
sub
cli
dec
insb
add
outsl
stc
and
repnz
jne
jmp
push
shlb
push
cltd
movsb
js
jp
adc
xchg
rcrb
adc
movsb
in
pop
std
push
les
out
stos
clc
stc
cmc
jbe
jo
clc
pushf
adc
sahf
ret
in
inc
ja
push
xchg
std
mov
data16
cld
mov
adc
es
in
and
fisttps
cmc
push
xchg
aam
or
rorl
inc
and
int3
dec
adc
movsl
mov
push
cmpsb
sbb
sarb
inc
cld
dec
push
jb
adc
dec
pop
imul
and
fcomps
jecxz
adc
sbb
call
lret
popf
mov
sahf
pop
enter
movsb
cltd
ret
mov
repnz
inc
push
sbb
sub
jle
jb
in
lret
iret
sbb
aad
icebp
mov
sbb
orb
mov
xor
jno
shl
push
bswap
sti
xchg
xchg
lret
lds
fwait
adc
sub
scas
mov
sub
sbb
cmp
cs
iret
xor
cmp
adc
mov
sub
ret
pop
es
mov
jg
pop
fsubs
push
push
sti
pop
jne
dec
adcl
enter
into
mov
mov
mov
pop
rcr
and
jmp
ja
push
mov
add
xor
inc
dec
punpckhbw
inc
pop
notb
adc
sub
mov
mov
aaa
mov
push
xchg
insl
xor
gs
aas
ljmp
sub
test
loopne
mov
fdivr
inc
sbb
subl
cmp
cltd
pop
xor
je
roll
add
mov
out
xor
addr16
repz
mov
push
fwait
cmpsb
mov
das
inc
push
mov
add
sar
dec
pop
mov
sbb
sbb
add
xchg
xchg
dec
hlt
outsb
jecxz
xchg
xchg
cli
movsb
xchg
push
rcrl
add
ds
int
iret
das
cmpsl
lods
pushf
inc
xor
or
or
sub
push
ficomps
or
lahf
lcall
cmp
mov
xor
dec
inc
xor
test
cli
or
sbbl
jae
cmp
enter
cmc
fcmovnbe
xor
notb
xchg
mov
sbb
mov
movsl
jae
pop
leave
xor
xor
leave
push
fwait
nop
xor
pop
xchg
mov
dec
loope
push
lahf
mov
ljmp
or
jmp
loop
fstps
lret
push
or
add
push
mov
es
xor
adc
fstpt
lock
mov
xor
xor
adc
adc
mov
mov
and
ja
sahf
loope
daa
mov
dec
mov
and
out
int
insb
pushf
insb
mov
cmp
mov
ret
lods
loope
cld
clc
mov
fcoms
xchg
push
bound
jle
out
test
gs
adc
call
filds
inc
xchg
lret
popa
rclb
test
int3
dec
jmp
ficomps
and
rorb
sbb
bound
out
or
push
mov
xchg
mov
sub
in
adc
mov
mov
je
int
mov
aas
xchg
es
mov
and
sarl
int
scas
jae
rcrb
jns
out
cmp
push
dec
ret
adc
pop
rorl
sahf
mov
jbe
in
mov
add
sub
mov
adc
iret
fwait
xor
daa
xor
jnp
cmc
movsb
mov
sti
add
loope
arpl
lcall
sbb
jg
loop
test
mov
add
and
push
push
shlb
iret
inc
mov
mov
frstor
fadds
adc
sbb
mov
int
loop
push
incl
mov
in
mov
nop
lods
xchg
push
dec
aam
xor
test
enter
loope
aas
sub
add
xchg
jecxz
lretw
fmuls
sbb
out
pop
jne
addr16
cmp
pop
and
out
and
aaa
mov
cltd
fidivrs
or
xlat
mov
inc
jo
jne
jno
outsl
fsub
sub
mov
into
mov
repz
add
insl
loop
enter
mov
aas
aam
or
dec
adc
fs
movsb
mov
or
testl
sbb
lcallw
fwait
daa
fisttpl
cmpsl
cld
gs
cmp
and
cmp
arpl
push
or
aam
add
pop
cmp
adc
into
mov
dec
pop
cmpsl
in
sbbb
sbb
mov
fs
pop
bound
pop
fisttps
xlat
jae
xchg
sbb
mov
sub
xchg
mov
hlt
dec
out
xchg
iret
in
jmp
leave
fwait
clc
jl
loopne
jbe
mov
mov
in
outsb
jne
and
add
pushf
push
adc
in
cli
lock
sub
daa
rol
xchg
icebp
nop
mov
xchg
lahf
and
pop
dec
addb
jge
xchg
sub
cmpsb
loope
movsb
inc
cmp
cmp
xchg
push
mov
imul
mov
mov
inc
pop
inc
lahf
clc
inc
inc
and
fmuls
notl
lret
jecxz
jbe
adc
inc
mov
lods
push
stos
lahf
in
xchg
fs
pop
sbb
in
rcrl
mov
pop
or
imul
int3
popf
adc
outsl
int3
pop
repz
sbb
xor
sahf
cmp
mov
dec
mov
cmp
outsb
sahf
lret
fcomp
sub
gs
cmp
and
sub
lds
in
in
cmp
and
xor
fwait
in
mov
sbb
ret
mov
sub
les
fwait
icebp
xchg
sub
mov
push
fs
mulb
push
insb
dec
jecxz
dec
aam
notb
inc
and
fisttpll
dec
shrl
in
repnz
and
sub
int3
sbb
cld
cmc
sahf
repnz
jecxz
mov
lods
and
add
ja
xor
xchg
iret
popa
fs
add
push
push
mov
nop
adc
mov
push
lcall
push
jle
cmpsb
aam
mov
lods
cmpsl
sbb
xchg
or
mov
pushf
or
xchg
mov
call
pop
pushf
out
fwait
jno
xor
lods
es
inc
jle,pt
repz
jno
xchg
sub
test
sbb
enter
out
cld
fsubrl
add
pusha
or
push
or
cltd
mov
out
or
dec
popa
push
out
std
shl
popf
push
jno
cmp
or
sbb
lret
xor
sbb
adc
cmc
xor
sub
insl
lret
pop
add
or
or
js
sub
pop
fisubrl
pop
iret
inc
stos
add
mov
xchg
xchg
fistl
pop
mov
jae
lds
jae
cmp
sub
ret
cld
mov
push
add
test
cltd
add
pop
xchg
sub
push
lret
rcll
pop
sbb
add
add
lods
es
push
mov
xor
popf
and
ret
jmp
jno
movsb
add
aad
lods
sub
mov
or
lods
subb
outsb
push
into
mov
lcall
mov
mov
xor
dec
test
cmp
adc
rcr
fs
jne
fcmove
adc
push
mov
sbb
in
out
pop
jae
test
adc
mov
cli
push
call
adc
outsb
pop
fidivl
cli
and
add
mov
pop
pop
bound
mov
adc
lret
mov
sbb
lret
mov
pop
sub
cmc
fldenv
jno
ja
out
pop
push
cmp
insb
push
shl
inc
dec
add
adc
int3
cmp
inc
mov
bound
mov
and
test
mov
es
leave
aam
shl
out
dec
or
insb
mov
mov
dec
sarl
cmpl
push
jmp
lds
add
push
inc
xor
insl
fildll
dec
mov
nop
loope
inc
fcomps
popf
outsl
jg
pop
loop
icebp
test
mov
lock
mov
inc
cli
jne
stos
loop
sarl
inc
fcom
jg
mov
mov
ret
fldt
push
js
push
out
push
xchg
fsubs
dec
and
dec
jl
insb
movsb
lock
insl
fstl
sbb
push
pushf
out
dec
xchg
mov
cli
xchg
push
cmp
inc
jecxz
mov
imul
loopne
lret
push
mov
jbe
add
fs
sub
lret
pop
sub
cwtl
inc
and
call
mov
dec
jns
int3
sbb
jmp
mov
mov
loopne
inc
jns
dec
sbb
jp
repnz
or
adc
ds
ljmp
clc
xor
repnz
push
mov
push
lcall
mov
std
push
sub
stc
add
aad
nop
mov
scas
xchg
popa
lcall
add
jae
jno
inc
mov
jg
popa
jno
adc
jmp
xor
jae
mov
es
js
cmp
pop
adc
xchg
pop
cmpsb
pmullw
sahf
mov
aas
cmp
push
mull
xchg
cld
and
inc
sub
push
stos
enter
hlt
push
mov
lahf
cmp
repz
xor
scas
and
es
mov
cld
shl
cmp
cmpsb
ror
cs
lea
xchg
adc
adc
and
in
xchg
pop
test
repz
rorl
jns
fistpll
outsb
dec
js
out
dec
mov
xchg
popa
add
das
xchg
mov
jbe
leave
jmp
mov
scas
aas
push
push
rclb
push
popf
lods
arpl
jae
inc
movsl
and
sti
inc
and
fldcw
scas
inc
repz
clc
mov
cmp
cmp
and
add
push
popf
mov
or
arpl
ss
insb
adc
push
mov
xchg
mov
daa
push
xchg
dec
pop
cmpsl
mov
jno
sbb
cmpsl
test
imul
push
xlat
and
pop
xchg
jae
mov
ret
setle
std
lea
ds
adc
adc
xchg
les
mov
mov
add
fcomps
push
rolb
mov
mov
dec
dec
and
popf
jmp
push
adc
fisubrl
jl,pt
xchg
sbb
inc
dec
rcll
xchg
inc
pop
notl
or
add
dec
fnstsw
dec
push
test
push
push
mov
push
or
mov
fnsave
hlt
lcall
ljmp
filds
in
in
mov
js
jne
sti
rolb
cmp
mov
push
out
mov
dec
jnp
xor
jo
mov
add
fbstp
push
push
jmp
cs
inc
les
mov
shlb
adc
icebp
das
jl
or
adc
inc
push
jl
mov
decb
icebp
addr16
and
sbb
stos
cmpsl
sbb
fiadds
fimull
push
outsb
inc
cmp
xchg
in
mov
xor
or
adcl
repz
iret
xchg
scas
ss
test
je
jo
aaa
xor
add
clc
dec
fildl
into
movsl
cmc
sbb
aaa
mov
pop
jae
scas
fisttpl
js
insl
inc
stc
in
mov
adc
ja
aas
data16
cmpsl
mov
and
jl
xor
inc
inc
sarl
sbb
mov
es
xchg
and
cmpb
push
addl
and
sub
in
outsb
cmp
dec
pop
out
or
add
into
pop
xor
or
xor
mov
test
sbb
iret
pusha
test
jb
int3
pop
int3
and
imul
cwtl
jne
or
test
jmp
or
clc
dec
pop
mov
inc
in
shld
aad
or
int3
jnp
clc
loope
imul
es
sahf
sbb
insb
ret
jnp
mov
adc
leave
adc
mov
cmp
adc
jo
jecxz
cmpl
xchg
frstor
jne
aas
inc
sbb
hlt
mov
jmp
cmp
cli
sub
sahf
and
inc
or
xor
inc
push
sbbb
or
pop
mov
add
mov
dec
sub
scas
iret
lods
xor
shrb
inc
mov
sbb
cmp
mov
test
push
clc
lods
and
jnp
jbe
jo
or
test
and
dec
mov
aam
sbb
mov
inc
scas
rcr
js
sbb
push
sbb
jb
push
push
insl
mov
cwtl
lahf
adc
mov
das
rcrl
or
pushf
mov
into
dec
pop
loopne
jo
cltd
or
dec
sbb
cs
loope
cwtl
iret
ja
movsl
and
cmp
out
mov
lea
out
xor
in
xor
mov
jle
mov
add
jg
adc
xor
mov
mov
lods
stc
loop
pop
pop
push
push
mov
cmc
iret
sub
mov
xchg
jle
test
dec
jecxz
sbb
mov
xorb
das
jns
pop
mov
pop
in
cmp
mov
movsb
popa
push
jb
mov
out
pop
sub
xor
jne
push
ljmp
repnz
jp
jmp
xchg
fucomip
pop
sahf
mov
push
arpl
jb
push
pop
mov
pop
adc
mov
mov
cmp
lds
lds
cmpl
pop
add
add
bound
loope
lret
or
rolb
mov
scas
in
pop
sarl
pop
cmp
sarl
shlb
push
xor
xchg
push
inc
and
cwtl
icebp
inc
or
andb
lret
mov
lahf
lret
mov
sub
es
xchg
sbb
push
push
cmp
sub
aad
mov
jl
movsl
lea
jnp
mov
int3
pusha
mov
stc
jge
call
out
test
cltd
movsl
loopne
jecxz
cmp
inc
adc
mov
sbb
inc
pop
sub
sbbl
lds
sub
or
sbb
or
sub
xchg
dec
outsb
sbb
rep
xor
mov
divl
and
scas
xor
inc
inc
lret
rorl
xlat
lret
inc
fwait
lcall
dec
imul
adc
cmpsb
pop
out
shlb
loopne
push
clc
test
iret
in
and
mov
mov
orl
cli
lret
neg
push
push
adcb
dec
fisubs
cs
test
test
icebp
popf
inc
or
push
stos
test
das
mov
mov
inc
push
pop
andl
jmp
fcompl
jmp
test
or
bound
xchg
fnstsw
or
dec
scas
push
adc
mov
outsb
sub
xchg
fdivrl
dec
andl
out
and
xor
jno
push
fidivs
inc
aam
stos
clc
ret
leave
mov
nop
and
xchg
outsl
pop
pop
adc
mov
add
outsb
push
jo
call
outsl
es
cmp
pop
ret
pushf
mov
add
pusha
xchg
popf
and
jmp
in
js
stos
lcall
out
gs
stos
ds
push
jne
cmc
jnp
xor
ficomps
sahf
dec
mov
icebp
mov
scas
xlat
add
mov
fsub
nop
sub
push
dec
gs
or
add
in
cmpsb
sahf
sbb
pushf
sbb
jne
or
rclb
loope
bound
call
in
stos
pop
out
and
xchg
or
or
xchg
mov
xor
xchg
scas
adc
push
or
pushf
add
scas
sub
mov
loop
mov
xor
std
or
cmp
sub
test
sbb
fwait
xchg
clc
in
mov
repnz
je
dec
jle
and
jmp
adc
into
call
push
xchg
ss
outsb
ret
pop
imulb
adc
xchg
mov
or
aaa
xchg
pop
jns
xor
xor
lea
mov
mov
icebp
sahf
out
lret
lahf
adc
mov
ja
jge
stos
daa
js
lea
and
rorl
stos
out
loopne
gs
pop
mov
insl
mov
xchg
mov
xor
add
inc
push
dec
pop
je
inc
mov
pop
mov
or
subb
xor
lea
es
icebp
dec
pop
iret
test
lods
rol
jecxz
xchg
rorb
shlb
push
addr16
push
sbb
mov
jbe
push
sbb
xor
push
push
dec
out
mov
lea
enter
jp
imul
insl
dec
ffreep
mov
lret
push
ret
mov
js
flds
in
scas
mov
lods
mov
das
scas
sbb
das
insl
pop
push
adc
pop
add
add
inc
add
scas
out
xor
push
in
clc
lock
inc
ljmp
adc
and
sbb
mov
mov
mov
test
jae
xchg
jmp
add
ljmp
inc
mov
pop
lahf
pop
dec
jl
xchg
je
mov
mov
and
es
cwtl
fnstenv
inc
iret
js
push
cld
mov
mov
clc
not
xchg
inc
xlat
pop
mov
mov
fsubrp
xlat
fcomps
jnp
nop
pushf
or
xchg
inc
jne
mov
out
or
adc
out
ss
xchg
inc
movsl
stos
fstl
mov
outsb
pop
sub
test
loope
ds
sub
cmp
jns
mov
loopne
pop
cwtl
push
lret
subb
jecxz
add
push
sbb
rcll
push
in
inc
sbb
lret
loop
push
mov
in
adc
sahf
fsts
hlt
popf
loopne
popa
add
push
sbb
mov
jb
jle
test
insb
cmp
bound
pop
paddq
outsl
mov
cs
xchg
out
shll
adc
and
mov
insl
je
cmp
jp
repnz
sbbl
mov
inc
outsb
adc
xor
outsb
pop
cmpsb
in
sub
lods
add
in
out
out
cmp
mov
mov
cmp
push
or
inc
jle
or
fbld
jl
gs
out
outsb
jbe
gs
push
dec
mov
pop
or
es
push
stos
mov
sub
fiadds
mov
jbe
jmp
insl
bt
dec
sub
cmp
mov
iret
inc
in
dec
cmc
and
push
mov
sbbb
xchg
test
movsb
push
pop
cmp
mov
mov
xor
sbbl
mov
xchg
scas
mov
xlat
inc
push
mov
inc
push
or
jae
insl
inc
xchg
js
jne
call
xchg
cld
dec
add
mov
adc
pop
or
inc
dec
js
dec
arpl
jle
fstps
outsb
rorl
mov
aas
out
mov
insb
and
std
nop
push
pop
jnp
push
xchg
pusha
outsl
test
cmp
lock
sub
add
in
cld
hlt
repz
data16
mov
in
lods
testb
imul
bswap
es
ficoms
sbb
bound
aam
or
lahf
sub
xchg
sub
add
xchg
adc
xor
ja
negl
pop
xchg
xchg
mov
insl
scas
jl
pop
fstl
ficoms
pop
adc
ds
cmc
sub
xlat
or
mov
mov
scas
rcrb
ret
jecxz
aas
jg,pt
xchg
ret
cld
adc
mov
mov
fistl
lock
pop
frstor
inc
int3
push
repnz
imulb
xchg
pop
ret
ror
mov
add
mov
jne
repnz
pop
fs
jecxz
decb
ljmp
rcr
fisubs
ja
push
int
fwait
sbb
fbld
dec
mov
mov
push
out
fucomp
bound
imul
repz
insl
mov
jb
ret
jmp
jae
cmp
xor
popf
fiadds
mov
xchg
cmp
ss
lret
popa
aad
subl
pop
sti
js
jecxz
lods
mov
cmp
in
adc
cmp
mov
lret
push
add
cmp
sub
and
cmp
scas
sbb
cmp
test
sbb
jp
jb
loop
popa
out
lods
loopne
inc
popf
adc
cwtl
addr16
mov
pop
mov
xchg
or
xor
loope
or
sbb
pop
les
pop
sahf
jns
movsl
sub
and
lods
movsb
scas
sub
cmp
dec
jae
push
inc
outsb
test
cwtl
daa
fmull
sbb
mov
xor
or
jnp
push
mov
dec
bound
imul
call
mov
push
cmp
sub
cld
leave
test
add
enter
xchg
sar
pop
daa
js
jg
pop
inc
std
or
fs
dec
sub
sub
add
sbb
cwtl
push
jp
scas
jmp
or
sbb
scas
movsl
sahf
xchg
dec
mov
fldcw
or
add
jge
stos
xor
jae
cmp
insb
sahf
ret
jns
lods
sbb
test
arpl
push
or
sub
daa
dec
add
sub
and
xor
shll
cmc
movsl
cmp
std
dec
cmp
pop
mov
inc
jno
jnp
ljmp
iret
lock
pop
or
aad
pop
mov
outsb
or
dec
das
outsl
mov
int3
push
pop
mov
outsl
push
or
pop
inc
mov
jbe
cmp
rol
lahf
sub
dec
mov
add
cltd
jle
mov
pushf
push
scas
jnp
jle
loop
ret
mov
push
sub
add
ljmp
setbe
add
cwtl
in
aas
xor
mov
mov
xlat
lods
fidivl
rcll
mov
lcall
mov
int
scas
imul
imul
punpckhdq
add
mov
pop
mov
push
pushf
jle
les
mov
lea
xor
jbe
dec
dec
or
xchg
test
or
popa
andl
sbb
or
or
sbb
add
jns
add
insl
lret
and
stc
cltd
pop
inc
in
dec
es
push
inc
neg
mov
lock
je
jge
icebp
fdivl
jne
cmpsl
movsl
inc
sbb
inc
es
pop
mov
jle
lahf
sbb
push
loop
jnp
adc
test
imul
mov
pop
call
data16
negb
movsl
jo
popf
jnp
daa
add
pop
jne
scas
out
cld
add
je
sbb
lods
lds
outsb
mov
push
in
jb
fmull
push
sar
cmp
jl
sub
mov
lahf
sarb
not
mov
adc
xlat
jp
cmp
lock
shlw
leave
mov
test
push
sbb
lahf
push
testl
mov
jmp
xchg
mov
js
adc
mov
mov
in
cmp
imul
loope
mov
mov
xchg
add
sub
sbb
mov
mov
add
dec
in
push
fs
faddl
cld
push
lods
jl
and
movsb
jb
mov
push
mov
xchg
pusha
rdtsc
movsl
dec
pushf
mov
xor
div
das
or
jl
cmp
lahf
in
adc
mov
cmp
pushw
or
cmpsl
rcrl
jo
pop
mov
mov
cwtl
mov
sahf
fs
xorl
int
push
jg
or
sub
push
mov
insb
pop
lods
enter
test
aas
iret
sbb
mov
aam
xor
jge
out
movsb
or
and
in
mov
sub
jnp
pop
loope
rol
cwtl
out
arpl
or
rcll
sarb
mov
add
das
pusha
shrb
or
mov
mov
cmp
sti
add
jo
and
sub
dec
pusha
out
jmp
mov
mov
mov
cmp
lds
stc
inc
push
test
mov
sbb
test
nop
lretw
lock
ret
lods
std
out
inc
stos
push
sbb
jno
push
js
jnp
mov
push
scas
sbb
into
cmpsb
cmpsb
dec
es
fmuls
call
sbb
jle
outsl
je
fwait
sub
inc
mov
or
ja
repz
pop
icebp
stos
push
sub
inc
cmp
or
test
mov
jno
adc
cmp
stc
in
add
sahf
xor
sbb
mov
into
mov
mov
xchg
xchg
test
cld
cmpsb
or
push
pop
inc
push
sbb
rcrb
push
or
sahf
imul
repnz
xlat
repz
cmpsl
sbb
lret
adc
sub
cld
mov
mov
and
xchg
sbb
mov
scas
enter
aam
xor
mov
ss
test
les
sbb
gs
add
shll
push
jl
lds
pop
out
and
and
fwait
adc
sarl
ret
scas
in
mov
mov
push
out
lock
rcll
push
jmp
mov
mov
int
pop
scas
inc
aas
cmpsb
add
xor
and
test
mov
lcall
jnp
xchg
xchg
mov
lcall
xor
fcmove
loope
test
push
pop
aas
in
das
pop
or
mov
dec
or
xchg
repz
xchg
mov
sub
mov
cld
fwait
es
add
cmp
std
subb
mov
movsl
adc
shrb
sbb
sysexit
ffree
out
mov
pop
cmp
jle
hlt
cwtl
ret
sti
push
sub
mov
mov
stc
aad
mov
int3
sarl
test
mov
out
fisttpll
popa
notb
daa
xlat
pop
jns
pop
subb
mov
inc
scas
adc
icebp
jp
pop
sbb
push
test
xor
sti
or
data16
mov
jge
scas
jg
and
je
movsb
sbb
adc
or
mov
adcb
imul
fstpl
xchg
adc
sub
sahf
fstps
xchg
and
jnp
out
ljmp
and
add
jne
xchg
jmp
push
out
lds
movsb
addr16
cmp
mov
fs
popa
fadd
mov
aaa
gs
fcoml
cli
inc
sub
pop
pop
jno
cmp
aaa
movsb
push
xor
xor
fisttpll
push
push
ficompl
fs
aas
jbe
stc
add
mov
adc
push
and
test
mov
jbe
icebp
into
ljmp
lea
in
pop
mov
aaa
cld
cwtl
jg
or
daa
inc
movsl
dec
int3
sbb
lcall
popf
sbb
hlt
test
fs
or
test
les
scas
sbb
or
int
fiaddl
mov
lahf
pop
jns
add
jmp
stos
xchg
fs
inc
bound
in
and
add
pop
icebp
or
inc
adcl
ror
jbe
adc
dec
cwtd
clc
mov
mov
xchg
jo
xor
cltd
cltd
push
scas
movsl
dec
mov
mov
fldl
mov
jbe
mov
imul
adc
xchg
push
adc
repnz
mov
xlat
fadds
std
dec
fidivl
dec
jp
cltd
xchg
mov
and
adc
cmp
mov
jl
mov
xchg
adc
sysret
add
shrl
in
subb
je
add
aaa
mov
mov
pop
sbb
mov
enter
sti
out
push
adc
inc
lret
mov
xor
sahf
xor
pop
and
adc
inc
popa
cmp
mov
adc
cs
test
or
xchg
fdivs
movsb
out
mov
mov
subl
inc
jl
mov
pop
add
enter
mull
out
adc
lds
dec
stc
test
xchg
in
or
xchg
jmp
ret
push
andl
das
iret
sbb
mov
imul
aam
add
repnz
mov
xchg
imul
cmp
xchg
enter
pop
push
out
movsl
xor
or
aaa
scas
dec
mov
dec
es
push
fs
nop
mov
in
adc
sahf
sub
push
jno
sbb
pop
jmp
movsb
sub
sub
jnp
nop
mov
xchg
inc
dec
jle
xchg
xlat
imul
imul
adc
sahf
mov
jecxz
ljmp
inc
divl
iret
aad
repnz
das
inc
sub
sbb
adc
jl
sbb
lock
in
imul
sbb
bound
pop
jns
xchg
jne
int3
pop
cmp
jmp
jle
aas
clc
push
in
sbbb
push
arpl
ljmp
pusha
pop
test
int3
jns
cs
jmp
fwait
imul
or
pop
aaa
pop
orl
sti
pop
xchg
in
in
mov
sbb
jno
push
cmpsl
fucomp
dec
aam
sub
push
push
xor
paddd
es
int3
jns
push
ss
mov
add
push
fsubl
mov
outsl
dec
mov
xchg
popa
dec
movsl
or
push
icebp
cld
lret
rorb
stc
mov
nop
pop
dec
test
sub
repz
dec
push
mov
push
clc
iret
in
mov
fwait
lret
xor
add
jne
jae
pusha
cmp
jb
test
fs
sahf
addb
movsl
mov
movsl
xchg
dec
call
or
outsb
out
jl
mov
mov
mov
popa
inc
int
cmpsl
jle
inc
jo
stos
outsb
scas
mov
popf
inc
lret
add
jo
push
pop
sbb
fs
std
xchg
andl
insl
test
loop
lret
icebp
inc
rol
mov
add
test
xchg
mov
mov
vmaxss
scas
xor
mov
fisubs
cltd
xchg
push
in
cld
inc
insl
loop
cmp
push
mov
ret
filds
nop
adc
outsl
jae
outsl
jl
xchg
push
je
jg
pop
inc
scas
add
push
or
mov
mov
add
push
cld
or
rcl
loope
subb
dec
dec
or
dec
push
pop
xchg
lods
movsl
test
push
or
push
popf
orl
xchg
add
test
aad
mov
jbe
ds
cmp
fnstsw
jns
mov
lock
mov
push
jp
and
adc
mov
add
inc
mov
orw
cmp
sbb
or
push
xor
pushl
sbb
xchg
mov
mov
fsqrt
sahf
aaa
js
cvtpi2ps
mov
gs
daa
push
push
push
es
mov
cmp
aad
stos
or
sbb
insl
dec
scas
jg
pop
mov
and
imul
lea
push
or
roll
nop
xchg
or
inc
dec
es
inc
aam
popf
mov
mov
sub
cmpsb
pop
or
repnz
out
xchg
mov
scas
xorl
movsb
scas
push
xor
out
aam
das
add
mov
mov
outsb
addl
cltd
rorb
arpl
pop
cmp
mov
lds
jp
popf
insb
pop
push
mov
bound
cmp
mov
or
cmpb
jl
aad
or
lcall
sbb
loopne
jno
imul
add
rorl
sub
aam
outsl
fistl
out
adc
jbe
mov
push
and
cli
repnz
jp
mov
jo
pop
pop
ficoms
subl
inc
test
mov
outsb
clc
es
test
int3
jg
push
jne
fisubrl
cmp
out
pop
jb
lret
enter
xchg
stc
xchg
push
test
add
clc
cltd
shll
test
jle
xor
mov
or
int
pop
push
mov
stos
lds
push
jg
lods
xchg
imul
loop
cs
lea
xchg
inc
cwtl
in
pop
mov
fucomp
jne
add
loop
stos
je
cmp
loop
mov
ror
mov
inc
call
add
lcall
das
shr
jns
mov
data16
test
ljmp
dec
mov
mov
push
out
enter
xchg
adc
inc
push
jg
jno
xchg
cltd
shrb
jno
sub
push
sbb
dec
enter
setbe
es
jp
jge
cli
scas
flds
jnp
mov
pop
mov
sahf
cmp
push
inc
das
or
add
push
xchg
mov
xor
pusha
mov
xchg
mov
rclb
mov
jb
xchg
addr16
jae
in
push
pop
pop
push
push
and
push
xchg
inc
hlt
ja
mov
gs
std
movsb
add
sbb
mov
insl
jne
dec
arpl
and
lret
jge
icebp
popf
inc
imul
cwtl
sbb
fsubrs
sarl
inc
std
imul
and
test
data16
sub
cli
mov
cli
xchg
pusha
popf
sarl
aaa
cmp
in
ret
jne
cmp
mov
test
dec
mov
dec
jecxz
mov
std
inc
popa
cmpsb
sub
inc
or
mov
fdivs
idivl
xchg
jg
stos
movsb
sub
mov
cmc
movsl
mov
rcll
jne
test
nop
addl
xchg
jne
aad
xor
mov
and
mov
loope
add
adc
in
mov
push
das
inc
pop
push
out
int
out
js
push
test
or
xchg
hlt
ficoml
dec
nop
add
sub
je
repz
mov
fsubs
aaa
mov
jo
jne
mov
xchg
js
mov
icebp
xchg
mov
jne
lcall
shlb
pushl
fildll
pop
and
nop
out
jns
inc
test
loop
inc
movb
lods
test
sub
sub
in
and
cmc
pop
cmp
mov
test
xchg
stos
sbb
xchg
inc
mov
dec
shl
push
mov
pop
mov
and
outsb
adc
mov
daa
push
outsb
out
pop
cmp
in
in
cmpsl
mov
sub
jns
add
mov
push
cli
insl
cli
mov
int3
pop
cmpl
sbb
daa
xchg
cmp
pusha
inc
sarl
dec
push
pop
jno
dec
push
xchg
inc
ret
push
aaa
pop
xor
and
orb
in
mov
popa
xchg
push
ret
outsb
fidivl
aas
mov
sbb
sahf
jno
sahf
jbe
and
sub
adc
stos
xchg
in
shlb
ds
add
hlt
dec
ret
pop
shl
in
push
out
movsb
push
daa
inc
adc
sub
adcl
out
cmp
fstpt
sarl
or
bound
std
mov
xchg
pop
orl
fisubrs
test
outsl
addr16
adc
ss
enter
xor
mov
sti
or
jnp
insl
lahf
xor
ror
adc
xor
ret
flds
mov
sbb
mov
or
rcl
stos
pop
adc
sbb
add
stc
pop
pop
subl
call
fcom
fnsave
xchg
imul
mov
dec
rcll
inc
shrb
or
sahf
or
popf
int3
aaa
push
and
adc
ja
repnz
out
lret
jg
jle
inc
mov
inc
jns
sub
inc
mov
in
daa
sahf
data16
dec
lret
shrl
jge
push
test
movsl
movsl
iret
mov
sub
jecxz
xor
sbb
cld
mov
cmpsl
lds
dec
fistpl
jge
nop
mov
ja
push
into
gs
and
or
sub
and
test
xor
mov
dec
out
es
mov
inc
aad
loopne
or
adc
pop
sbb
cld
ja
adc
adc
xor
test
inc
daa
jge
push
dec
pop
pop
bound
fdivs
xor
rcrl
mov
add
lods
jae
mov
lods
aad
lods
cmp
pop
mov
loope
mov
lahf
pop
frstor
jno
lock
inc
cli
lods
xlat
mov
mov
sub
jno
int3
insl
mov
jbe
push
test
add
andl
bound
aam
scas
pop
jns
lods
push
jae
les
mov
adc
ret
add
lret
jnp
dec
xchg
aas
jns
add
fsubs
cmp
iret
sub
mov
add
insl
mov
jno
push
fldt
int3
mov
sub
jo
nop
push
lods
loope
outsb
jmp
insl
mulb
inc
pop
jecxz
adc
xlat
out
xor
lret
aas
sbb
dec
and
dec
decb
xchg
dec
inc
fsubl
add
mulb
pop
push
mov
pop
lcall
sub
mov
push
mov
adc
pop
dec
adc
and
pop
shr
add
jno
int3
push
in
or
ja
adc
pop
push
jle
xor
in
jecxz
outsb
lock
sbb
lods
mov
out
out
dec
pop
mov
inc
pop
lods
dec
sub
jo
mov
repnz
dec
shlb
push
dec
mov
mov
in
std
je
push
mull
pop
mov
or
mov
cmpsl
negb
jnp
inc
je
mov
mov
pusha
add
and
lahf
lods
sbb
sarl
add
ret
and
iret
jg
js
mov
out
fld
add
aas
lahf
repnz
xorl
shrl
mov
pop
push
in
add
cmpsl
nop
or
or
push
clc
cmp
mov
hlt
dec
bound
xchg
inc
out
test
jg
int
popa
and
mov
sub
fwait
loopne
jg
fmull
push
xor
andb
inc
pop
push
out
loop
call
mov
jecxz
loope
notl
or
mov
in
mov
lcall
fsub
sub
xor
popf
pop
mov
xchg
in
push
outsb
or
fcomps
insb
in
sub
mov
pop
sbb
cmp
lods
leave
xor
cmp
cwtl
sbb
jl
lahf
loope
xlat
mov
out
pop
popa
cmc
cmp
jp
jnp
jo
xchg
push
in
lret
call
filds
cmp
inc
lds
call
nop
pop
addl
test
dec
jbe
xchg
mov
addr16
dec
xlat
mov
dec
push
push
jmp
cld
jg
sub
sti
adc
and
outsb
fisttpll
addr16
lds
test
imul
xchg
inc
insb
lods
ret
out
mov
adc
fwait
jbe
pop
mov
sahf
repz
andb
cmp
mov
stc
shlb
mov
mov
and
cmpsb
out
or
nop
dec
lret
xor
test
mov
in
and
push
fcoml
outsb
in
lock
push
sub
inc
sub
xchg
jp
dec
and
test
stos
pop
sub
mov
lret
or
inc
and
lock
dec
leave
push
in
call
stos
fstl
cmc
fs
sub
xchg
int3
mov
test
jns
xor
cmpb
mov
fisubrl
lahf
sbbb
pop
nop
pop
cwtl
xchg
jge
cmp
cmp
mov
pop
adc
je
daa
jne
loope
imul
aaa
xchg
and
mov
mull
adc
or
mov
or
push
dec
jmp
and
or
and
push
dec
inc
xchg
push
jne
arpl
xlat
mulb
jg
cltd
call
push
or
xor
fldcw
inc
pop
sbb
and
mov
movsb
xchg
std
sub
sbb
hlt
ja
aam
out
push
or
or
or
add
frstor
imul
flds
negl
jp
testl
ficoms
pop
dec
cmpb
jbe
jge
mov
xchg
push
adc
jp
mov
add
neg
xor
mov
xchg
adc
lock
push
xchg
mov
mov
pop
xor
dec
sahf
push
dec
out
xor
xlat
dec
add
pop
leave
lret
sub
pop
jge
push
mov
pop
call
test
pop
hlt
xchg
je
mov
pop
adc
cli
inc
xchg
push
mov
sub
inc
out
inc
mov
mov
lods
inc
jno
sahf
sbb
mov
scas
popf
sub
xchg
add
mov
pop
jmp
inc
sbb
sti
lods
push
mov
cmp
movsb
call
stos
or
push
pop
je
xchg
nop
pop
into
xchg
sub
cmp
imul
pop
pop
push
inc
mov
and
stc
test
jecxz
add
pop
pop
mov
dec
icebp
aas
sub
pusha
scas
mov
insb
jns
mov
cmp
push
jge
pop
xor
aad
stos
and
mov
ds
pop
fcmove
lods
or
mov
pop
ljmp
and
mov
push
or
push
pop
ret
jo
jg
dec
icebp
jns
outsb
imul
hlt
icebp
dec
shll
movb
mov
std
divb
inc
sub
jp
sbb
les
std
inc
add
sub
lahf
adc
dec
sub
push
stos
test
push
dec
pop
rorl
js
mov
lcall
dec
rorb
rcrb
mov
lea
data16
jl
add
into
adc
dec
jge
push
jbe
adc
in
add
mov
hlt
bswap
and
xor
lods
pop
ret
mov
or
jnp
xchg
mov
mov
pop
dec
repnz
sub
les
movsb
dec
mov
pop
adc
cmpsb
mov
clc
addr16
push
push
lcall
test
into
mov
dec
jl
into
cmp
or
fwait
bound
repnz
daa
inc
mov
or
dec
cmpsb
pop
popa
mov
sub
inc
mov
scas
and
call
fwait
in
pop
sub
adc
inc
scas
or
leave
mov
dec
cmp
xchg
icebp
cwtl
lcall
scas
or
push
sahf
xchg
and
sub
dec
add
push
jnp
shlb
or
int3
sarb
popa
sub
mov
mov
pop
rcr
das
mov
pop
jmp
jne
stos
mov
ficomps
stos
or
imul
and
jnp
mov
daa
neg
loop
loop
loope
jnp
mulb
and
pop
mov
clc
xor
dec
rorb
add
outsl
lock
vmaxss
mov
cmpsb
adc
out
jl
andl
jge
or
rorl
or
jno
jno
sbb
mov
cmpb
push
ja
ss
or
xlat
jmp
int3
js
mov
pop
jl
arpl
nop
adcl
bound
loopne
cmpsl
repz
ret
mov
ss
lcall
inc
dec
iret
bound
popa
fnstenv
jge
cltd
fadds
sbbl
sub
push
lcall
pop
jns
shrl
mov
inc
xchg
mov
push
aas
testl
add
xor
jmp
add
mov
fnstsw
jno
scas
push
sbb
xchg
je
push
jnp
ds
test
adc
cmp
popa
sbb
jg
movsl
pop
cmp
mov
adc
ja
adcb
xchg
hlt
dec
out
pop
repnz
push
lahf
ds
jnp
xchg
add
aad
mov
mov
jmp
jl
and
cmp
add
lret
sub
mov
sbb
push
jno
mov
or
cmp
repz
lods
hlt
jecxz
pop
inc
mov
stc
fists
icebp
mov
test
cmp
aad
dec
mov
pop
jno
outsl
jae
pop
inc
sub
fidivrl
sbb
jp
into
lahf
and
insb
aas
add
push
mov
xchg
lgs
clc
mov
test
sbb
movsl
out
sbb
hlt
and
mov
sbb
or
xchg
je
das
scas
mov
inc
dec
and
sar
jns
in
aam
fisubrl
es
call
jnp
out
xor
lcall
xchg
or
dec
inc
pop
xchg
stc
xchg
popf
xchg
inc
sbb
pop
jmp
pop
mov
outsl
inc
jb
in
fucomip
test
sbb
jnp
adc
or
aad
push
inc
mov
call
repz
mov
jnp
imul
sub
mov
push
sub
add
mov
ss
hlt
movsb
fsub
scas
inc
ror
out
sub
mov
gs
loopne
cltd
pop
stc
test
xor
jo
pushf
outsl
outsb
cld
mov
inc
mov
ret
mov
movsl
push
pop
gs
imul
fs
push
cltd
lcall
xchg
int3
loopne
scas
lahf
jb
mov
cs
insl
jecxz
xchg
shrl
and
aad
lods
hlt
sbb
jno
mov
imul
pop
enter
cmp
sub
add
add
jns
push
enter
push
dec
scas
mov
xor
pushf
aaa
mov
in
jl
xor
mov
imul
sub
mov
insb
loop
jecxz
nop
xor
mov
pop
pop
mov
fbstp
notb
stos
push
mov
jbe
imul
mov
sbb
movsl
inc
xor
call
mov
and
enter
mov
jge
aaa
lret
jge
xor
push
jmp
rcll
les
das
mov
dec
pop
pop
mov
imul
das
push
jbe
pop
inc
and
jae
inc
add
daa
dec
and
adc
cld
insb
js
or
mov
inc
fistps
adc
inc
lret
sti
outsl
or
or
mov
push
movsb
outsb
fndisi(8087
adc
imul
popf
icebp
test
mov
cmp
shrl
test
popf
pushf
je
jge
cmp
dec
adc
sub
sub
sahf
lea
dec
iret
inc
inc
aam
jmp
jb
push
jle
or
mov
push
subl
shrb
fst
and
jge,pn
jo
xor
lea
cmpsb
push
xchg
push
add
push
scas
dec
xchg
adc
movsl
loope
dec
jle
and
push
dec
ja
and
add
or
out
inc
faddl
adc
mov
pusha
jmp
pop
enter
mov
xchg
xchg
cmpsb
popa
inc
inc
jl
loopne
sahf
in
push
lds
aas
arpl
insb
inc
xchg
movsb
xchg
xor
pushf
popa
aad
push
xchg
mov
xchg
cmp
dec
ja
mov
or
jns
pusha
mov
adc
pusha
pushf
and
sub
add
push
in
cmc
mov
enter
pushf
jmp
cltd
jno
inc
lock
enter
icebp
xchg
out
je
lret
jg
lds
mov
pop
or
mov
xor
nop
pop
cmp
ret
dec
or
mov
cltd
add
jl
cmc
out
jl
add
mov
xor
add
add
test
stos
dec
cltd
sarl
lcall
and
push
loop
push
pop
movsl
rclb
sbb
lea
rcrb
pop
push
mov
loopne
push
dec
repz
mov
int
add
mov
jge
loop
inc
dec
sar
cmp
adc
sti
outsl
aam
mov
push
insl
das
and
sbb
cmp
inc
loopne
ret
jae
xchg
mov
js
lahf
and
je
mov
test
dec
imull
in
sub
sub
lds
cmp
xchg
int3
sbb
cmc
mov
in
jns
inc
jne
fdivrs
jecxz
testb
loopne
cwtl
imul
sub
push
lods
fcmovu
faddl
hlt
shrl
test
mov
adc
and
push
adc
add
mov
mov
mov
add
popa
scas
pushf
leave
or
mov
ret
mov
inc
std
mov
mov
ret
push
and
push
cli
es
xchg
xor
rorl
jo
or
adc
loopne
inc
shl
bound
shlb
xor
jo
or
jmp
orb
stc
push
jbe
dec
jb
push
fsubrs
addb
push
push
mov
repz
xchg
hlt
xchg
dec
and
push
popa
sbbb
loope
jl
inc
xchg
push
ljmp
xchg
sahf
loope
or
ljmp
jge
xor
pushf
xchg
dec
scas
out
jb
push
jmp
scas
stos
xor
scas
rorb
dec
mov
and
lods
mov
jnp
shlb
testb
icebp
xchg
push
or
push
les
push
inc
jp
add
xor
mov
call
test
lret
cmpsl
add
push
sbb
sbb
jo
push
lret
in
jle
stos
lret
sahf
bound
out
add
mov
movsl
dec
cltd
cmp
inc
sbb
scas
cli
shrb
mov
mov
aam
dec
pushf
mov
rorl
mov
sysenter
jp
popf
test
stos
pushf
hlt
ret
scas
mov
iret
push
imul
stc
sbb
jo
js
or
in
loop
mov
mov
add
push
rcll
cmp
push
jnp
push
cmc
xchg
js
sbb
push
inc
cltd
loop
aaa
jae
decl
ss
je
pop
pop
mov
lcall
ret
pop
dec
cmp
cmp
and
sarl
push
out
pop
scas
mov
sbb
inc
loop
test
cmpsb
into
test
add
or
dec
in
loope
add
xchg
rcll
cmp
sahf
addr16
out
shlb
cmp
stc
sub
sbb
test
icebp
push
and
lahf
cmc
jnp
cmpsb
mov
mov
lods
push
sarl
cwtl
pusha
jbe
dec
fists
mov
adcl
jmp
jmp
test
sub
pop
into
add
jbe
loop
sub
pop
scas
scas
jl
push
add
xchg
and
js
cwtl
inc
xchg
sbb
out
fcom
mov
mov
mov
xchg
adc
push
outsb
add
add
idivb
addr16
jo
dec
repnz
popa
and
cmp
pop
mov
sbb
lret
cmpsl
leave
push
dec
push
push
ficompl
xchg
adc
das
in
pop
subl
or
mov
jnp
ret
push
jmp
pop
repz
and
ljmp
cmpsb
int3
fstl
fsubrp
fldl
sub
jno
push
push
loopne
push
jb
mov
inc
mov
out
push
test
sub
or
mov
add
or
push
stos
adc
xchg
sbbb
pop
sbb
mov
pop
xchg
repz
hlt
adc
pusha
popa
jmp
jg
bound
push
ret
cmp
inc
mov
out
mov
pop
or
push
lahf
out
sbb
loope
mov
xchg
xor
cwtl
pop
dec
mov
fucomp
lea
popa
xor
mov
sub
in
add
sbb
mov
push
popa
fs
dec
or
mov
push
leave
js
pop
fisubs
lods
or
adc
xchg
cld
xchg
push
ret
decl
and
pop
imull
adc
fmuls
test
and
test
add
add
cmpsb
sbb
rcll
fwait
pushl
xchg
xchg
cmpsl
mov
icebp
in
ret
ljmp
push
sub
push
inc
or
xor
jae
movsl
dec
cmp
push
cltd
test
mov
jo
and
sbb
xchg
cmp
icebp
ds
jns
or
stos
or
test
fdivl
pop
bound
cwtl
jge
xchg
xchg
lods
mov
int3
add
loope
nopl
lods
inc
sub
inc
dec
jecxz
cld
movsb
lret
jmp
cwtl
stos
mov
les
stos
push
and
js
mov
mov
les
push
adc
jmp
fcmove
push
sbb
cs
add
pop
into
xchg
pushf
xchg
fimuls
mov
jno
mov
sub
lock
mov
scas
ficoms
jae
jb
push
xor
lods
adcb
sub
mov
lock
xchg
call
mov
add
pop
jbe
mov
cs
shll
adcb
xchg
jnp
insb
cmp
lahf
mov
xchg
into
scas
dec
and
negb
mov
daa
jle
push
ds
xor
movsl
je
adc
push
dec
adc
test
jmp
sti
jno
adc
sbb
pop
sbb
enter
mov
xchg
cmp
and
test
ss
pop
sahf
xchg
mov
or
xchg
shl
sub
dec
lock
sbb
mov
xchg
xchg
icebp
xchg
or
mov
mov
dec
mov
movsl
std
int3
das
cmpsl
jns
and
xchg
enter
outsb
mov
out
add
in
push
mov
mov
call
int
mov
out
out
mov
lahf
stos
neg
enter
mov
jg
sbb
push
cmp
lret
fistpl
mov
xchg
out
fs
pop
mov
enter
cmp
orl
pop
jae
cmp
adc
adc
mov
adc
adc
iret
mov
cmp
sub
or
mov
sub
loope
imul
and
pop
mov
jb
lods
stos
pop
aam
mov
dec
add
inc
xchg
imul
fildl
cli
call
push
in
dec
je
sbb
std
movsl
sub
fisttpll
sub
add
ljmp
push
sbb
les
stos
mov
cmp
adc
mov
ffree
insb
adc
add
and
xor
dec
jle
sub
out
mov
dec
pop
cli
xchg
int3
subl
jo
movsb
mov
push
add
sub
jb
loope
mov
pop
dec
lret
popa
xchg
cld
lock
cwtl
push
mov
add
add
xchg
and
leave
jno
or
fsubrl
jo
jge
rol
xchg
call
outsb
js
mov
rsqrtps
test
pop
incl
push
out
xchg
sbb
sub
frstor
inc
inc
push
ret
jmp
dec
fucomi
aas
xchg
insl
sbb
ror
jne
xchg
enter
movsb
lcall
sub
push
in
mov
ret
or
hlt
inc
inc
add
cmp
enter
dec
inc
xchg
push
mov
int3
lret
stos
mov
push
movsl
xor
insb
add
outsl
add
popa
dec
inc
sub
cmpsb
test
in
icebp
call
outsb
sarl
add
in
jl
push
sbb
cmp
stos
and
inc
lds
xor
sub
test
xor
xchg
stos
adc
into
or
add
xchg
xlat
shll
push
dec
cmp
testb
fistpl
push
or
enter
or
sbb
lds
dec
sbb
add
jns
imul
sti
neg
ss
roll
cwtl
pop
mov
pop
lret
pop
fstps
cmc
push
ss
cwtl
sti
xor
mov
imul
sti
lea
jp
jnp
mov
ss
sbb
cmp
push
fsubrs
sahf
sbb
sbb
sbb
dec
movsl
cs
pop
sub
mov
out
add
adc
and
lds
out
shll
adc
enter
outsb
or
scas
and
mov
or
sbb
xor
dec
cmp
jecxz
mov
push
mov
adc
das
lcall
stos
out
in
pop
or
rorb
xchg
fldl
scas
cmpsb
sub
test
pop
dec
iret
cmp
xchg
mov
push
xchg
xor
fsts
xchg
into
xor
mov
mov
or
repnz
sbb
daa
cmpxchg
push
pop
cwtl
lods
mov
and
inc
inc
in
xchg
or
fcom
cs
adc
adc
pop
dec
push
sbb
xchg
cmp
sbb
popa
cmp
lret
jb
mov
mov
push
and
dec
jae
imul
jle
subl
pop
adc
jo
in
mov
mov
jmp
push
jns
mov
pop
outsl
lret
lahf
xchg
jp
sbb
loopne
cmp
int3
test
rolb
push
repz
nop
jne
in
push
xor
xchg
jecxz
cwtl
adc
mov
test
rclb
add
iret
les
dec
push
mov
inc
mov
adc
xor
and
adc
ret
ds
stc
pop
cmp
or
mov
xchg
in
cmp
dec
or
movl
xchg
pop
jl
int3
sti
in
fisttpl
mov
movl
mov
push
das
arpl
push
cmp
sarb
stos
adc
and
cli
pop
shl
out
xor
and
mov
outsl
popa
sub
cmpl
data16
loopne
mov
push
rcrl
popf
popf
mov
test
sbb
cmp
mov
mov
nop
ficompl
sbb
push
xchg
ja
aaa
lahf
rorb
addl
mov
xor
adc
cmp
xor
rdtsc
movsl
cmc
xor
add
mov
addr16
aad
rolb
mov
xor
push
xchg
clc
mull
jmp
mov
xor
fwait
aaa
cmp
fbstp
clc
xchg
rorl
inc
jecxz
sub
cmp
cld
je
je
testb
into
push
ret
je
inc
mov
jo
int3
sbb
mov
sub
sbb
ja
inc
mov
punpckhwd
jnp
and
inc
jg
int3
xchg
or
mov
notb
push
stc
fiaddl
cmp
iret
mov
call
sti
int
movsb
call
test
xor
push
mov
mov
lds
repnz
sub
lea
cmp
pop
lds
add
and
mov
insl
outsb
inc
notl
push
push
sub
loope
mov
add
fwait
cmp
cmp
jmp
pushf
jle
lods
pop
ficomps
mov
or
dec
lods
lahf
sbb
mov
into
pop
popa
push
cld
cmp
gs
ret
mov
data16
xchg
ljmp
or
push
sbb
mov
bnd
jb
push
notb
sbb
or
or
mov
dec
lds
data16
popf
jne
pop
push
pop
and
or
in
loope
inc
aas
cmp
rcrb
or
stos
mov
mov
push
sub
ret
out
xchg
ret
cmp
stc
xor
push
jbe
and
je
shll
dec
test
or
mov
xor
dec
or
jle
clc
pop
fcompl
and
jge
jle
xchg
mov
fsub
inc
movsb
frstor
cmpsl
aam
sbb
xchg
stos
int
jg
mov
sbb
idivb
xchg
mov
add
lret
dec
inc
outsb
roll
or
int
jnp
loopne
mov
inc
and
lock
dec
mov
xlat
test
and
loope
test
stc
mov
push
enter
sbb
cmp
jns
sub
xor
jle
sub
sbb
sub
mov
mov
or
inc
or
sbb
or
sub
call
dec
lock
jp
cs
push
cld
xchg
mov
notl
aam
insb
xchg
pusha
jp
mov
leave
in
loope
subb
cs
xchg
out
rolb
cmpsb
mov
push
testl
ljmp
lret
ss
sub
shlb
shlb
lret
sbb
stos
movsb
xchg
or
or
adc
sub
out
xor
mov
addr16
loop
repz
mov
jmp
xor
xchg
dec
out
in
insl
push
lret
sbb
mov
pop
loope
popf
pop
stos
mul
pop
inc
or
negb
fstp
and
mov
push
in
ret
push
fwait
stos
stos
hlt
int3
rolb
dec
popf
push
lcall
inc
in
mov
sarb
dec
insl
inc
cli
xchg
cwtl
movb
lret
and
mov
xor
xchg
lcall
hlt
sbb
pop
sub
or
inc
mov
mov
fldl
pop
add
push
mov
scas
or
jge
pop
insb
lahf
jns
xor
pop
cwtl
inc
push
cmp
add
decb
xlat
add
xor
add
or
dec
lret
mov
out
mov
dec
daa
push
in
mov
test
push
cld
ss
test
pop
fwait
loope
fwait
xchg
jge
cmp
hlt
rcrb
ljmp
xor
mov
xchg
mov
insb
lret
shrb
xchg
jmp
push
dec
mov
lret
jno
andb
xor
fsubrs
mov
testl
inc
repnz
or
pop
xchg
cmp
roll
sbb
decl
and
int
es
xor
inc
pop
js
pop
int3
sub
clc
mov
out
in
imul
and
jno
aas
lods
dec
dec
cmp
mov
jns
mov
xor
push
movl
enter
aam
mov
enter
lret
nop
rcl
jns
mov
pop
dec
sbbl
lret
add
and
ljmp
and
mov
adc
sbb
jge
inc
fnstcw
cmc
xchg
nop
xchg
sbb
push
xor
sub
fs
test
add
sbb
push
push
test
cmp
lea
test
inc
pop
dec
pop
les
cmp
add
movsl
testl
xlat
les
int3
arpl
jno
mov
jge
xchg
pop
test
imul
in
or
mov
mov
cmc
lcall
push
test
jecxz
and
pusha
cwtl
adc
ret
imul
pop
cld
in
fcoml
in
cmpsl
adc
in
lcall
jne
mov
out
or
cmp
lock
mov
add
imul
sub
jns
pop
dec
bound
xlat
popf
ret
sbb
out
dec
outsl
rcll
adcb
insb
pushf
cwtl
xor
lods
push
pop
outsl
enter
jecxz
xchg
mov
cmp
inc
mov
movsb
jns
jmp
add
mov
lret
dec
daa
sub
repnz
jne
fldenv
and
xchg
mov
cmp
ss
cli
adc
mov
cs
inc
xor
cli
cmpsl
ror
fcomps
cmp
jae
call
popf
mov
lods
cmpsb
out
imul
roll
mov
cmpsb
sarl
fadds
dec
and
out
push
scas
repz
shll
pop
in
shl
repz
cmp
mov
pop
and
faddl
adc
mov
pop
pushf
mov
cmp
imull
fcompl
rolb
test
pop
cld
daa
mov
sbb
mov
es
and
push
dec
mov
out
sti
sti
push
out
movaps
sti
push
loope
xlat
icebp
repz
jmp
lods
std
in
cmp
xor
mov
sub
sbb
xor
and
aas
enter
aaa
loopne
dec
mov
fdiv
add
sbb
lret
jne
pusha
jge
push
addb
xor
data16
cmp
or
xchg
push
and
cmp
mov
out
xchg
jns
rclb
mov
inc
sbb
ds
enter
ja
xchg
mov
push
loope
daa
cmp
xor
test
or
xor
or
stc
into
stos
pop
mov
cld
adc
mov
pop
xor
and
push
sbb
out
dec
cmpsl
sahf
jbe
ljmp
cmpsb
cmpsl
movsb
sub
rclb
data16
pop
mov
push
dec
sub
xchg
inc
and
and
mov
in
xorl
arpl
push
mov
bound
rcrb
lea
clc
shll
enter
rcr
inc
mov
inc
sub
rolb
mov
rolb
testb
add
inc
scas
lods
adc
bound
jp
jp
adc
cmp
push
xor
outsb
push
or
xchg
xor
jae
mov
out
popf
mov
and
mov
cmc
outsb
mov
leave
cmp
jl
jg
push
movsb
pop
adc
xchg
cwtl
add
std
pop
or
or
mov
mov
shr
inc
adc
cltd
iret
adc
sbb
jge
in
cmc
sub
push
in
inc
cld
mov
call
test
cli
jnp
sub
jle
pop
sbb
into
cwtl
rcll
xlat
cli
test
movb
adc
lea
outsl
repnz
dec
mov
test
shrb
dec
xlat
into
negb
mov
cmp
ret
push
dec
push
pop
pop
mov
or
mov
xor
ret
je
mov
add
adc
cmp
push
and
in
xor
mov
mov
outsl
clc
push
add
mov
push
cmpb
loope
sub
sahf
lods
lods
dec
mov
push
mov
lds
daa
inc
jg
scas
mov
xchg
inc
and
pop
cmp
outsl
ljmp
mov
jae
mov
iret
mov
jle
dec
jmp
lahf
adc
pop
sbb
or
xchg
leave
cmp
mov
test
aas
cmp
int
sahf
push
push
mov
loopne
and
jecxz
arpl
int3
repz
mov
ja
xchg
lods
jge
add
adc
xor
push
cmp
mov
push
stos
js
dec
xor
jg
or
sahf
ss
mov
shll
jle
or
sub
test
inc
leave
xor
call
push
mov
nop
jnp
push
scas
std
or
sbb
mov
inc
sahf
xadd
repnz
adc
adc
jns
mov
add
inc
dec
cmp
inc
and
mov
or
sti
lock
and
maskmovq
notl
jge
sbb
mov
pop
mov
cld
inc
ret
xchg
stc
cmpsb
xor
loop
adc
xchg
cmp
or
fs
jge
add
ret
xor
bound
dec
mov
cli
repnz
clc
dec
jg
iret
jbe
bound
or
push
imul
pop
or
nop
scas
inc
xchg
lea
test
pop
fimull
add
push
inc
out
pop
aas
cwtl
jmp
popa
insb
jns
outsb
dec
jns
xchg
and
cwtl
pop
xchg
dec
jmp
pinsrw
jb
in
nop
mov
rorb
ljmp
pop
ja
lret
pusha
repnz
cmp
repnz
fistps
dec
into
in
adc
add
jge
jnp
add
jbe
popf
movsl
inc
adc
dec
xchg
loope
adcl
repnz
lcall
jae
add
or
in
ljmp
sub
sti
sahf
ljmp
stc
push
jle
xorl
lret
dec
loope
cmc
xor
std
leave
in
mov
cmp
scas
xor
mov
test
dec
dec
lret
loope
xor
push
leave
mov
xor
pop
adc
dec
dec
mov
pop
cmp
sti
bound
pop
out
inc
adc
pop
dec
mov
mov
push
or
pop
in
add
push
cmc
out
jp
pushf
cmp
cld
fstpl
ljmp
mov
leave
or
mull
out
out
pop
push
mov
jp
clc
das
and
mov
pop
repnz
xchg
ficoms
inc
xchg
push
jmp
push
enter
lcall
push
and
inc
sbb
popa
mov
in
pop
out
push
out
fisubl
adc
fidivrs
test
scas
cmp
xchg
clc
mov
and
out
sub
push
xor
ja
imul
add
push
ret
and
sti
imul
cmp
loopnew
dec
test
or
sbb
sub
dec
add
and
fmuls
add
test
mov
lds
or
test
push
sbb
sub
lds
push
mov
mov
lcall
add
out
popf
sub
sub
and
pop
pop
adc
adc
xchg
inc
test
push
inc
ret
les
mov
call
mov
jmp
adc
ret
and
fs
fdivp
loop
out
cmp
jmp
jbe
movsl
adc
into
jo
es
xchg
gs
mov
dec
adc
lcall
inc
fidivrs
lret
dec
fwait
jecxz
or
fisttpll
jo
ljmp
add
daa
adc
aam
push
sbbb
inc
cmp
dec
iret
imul
cs
test
sub
mov
imul
repnz
and
dec
shlb
xor
fistps
insb
test
xor
xor
adcl
imul
add
fldl
mov
iret
les
and
cmp
cs
cmc
mov
aaa
out
in
pop
dec
cmp
loopne
mov
addl
jo
nop
and
lahf
push
adc
sub
popa
sbb
mov
scas
and
stos
fcmovbe
cmpsl
jo
mov
mov
sbb
mov
adc
xor
mov
movsl
loope
std
scas
add
adc
les
test
pop
iret
xchg
ja
fs
mov
repnz
popf
pop
jne
sub
fidivrl
lret
test
pop
fbstp
cmp
mov
iret
xorl
out
jns
call
in
rorb
dec
repz
mov
nop
adc
ja
cld
fst
adc
test
pop
push
fistl
mov
lock
fcoms
fsts
mov
outsb
sub
cmp
push
pop
outsl
xchg
cli
sub
ret
imul
lock
xchg
bound
dec
fisubrs
or
mov
leave
clc
or
ret
sub
int3
and
add
ja
cwtl
in
dec
xchg
jmp
mov
stos
shr
mov
cmp
xchg
pop
notb
mov
icebp
sbb
fcoms
test
mov
in
push
aas
dec
ljmp
lret
sbb
in
lret
push
jnp
cmp
aas
insb
loope
jo
and
push
xchg
xchg
mov
adc
mov
mov
inc
sbb
mov
cli
push
fsubrl
sbb
inc
sub
cmp
add
cmp
das
push
sub
into
xchg
mov
sbb
pop
shlb
hlt
aam
or
mov
inc
sbb
iret
jge
pusha
xchg
xchg
dec
pop
inc
jb
cmp
scas
ljmp
arpl
jg
sub
inc
dec
int
push
pop
inc
mov
or
inc
adcb
push
sbb
adcb
mov
lea
div
mov
sbb
jbe
sub
les
mov
mov
in
fisubrl
das
mov
mov
int3
mov
inc
fistpl
pop
insl
or
jbe
sbb
out
stos
cmpsb
cmpsl
push
xchg
subl
push
lea
jbe
scas
fiaddl
mov
lods
sbb
enter
jb
imul
pop
sub
hlt
fnsave
push
push
push
sbb
bndstx
lret
out
movsl
jbe
cmc
dec
and
adc
test
push
gs
icebp
aam
loopne
lock
in
pop
repz
mov
inc
mov
fsubl
adc
aas
cld
sbb
mov
dec
dec
push
xor
ficoms
repnz
and
aad
add
mov
mov
push
and
push
fstl
iret
cmp
push
je
xor
outsb
int3
lcall
jne
mov
daa
lods
mov
mov
adc
loop
out
pop
repnz
repnz
inc
push
inc
dec
inc
pop
ret
xchg
inc
add
sub
loope
add
out
or
testl
mov
stc
or
push
in
or
push
adcl
pop
mov
mov
dec
iret
inc
xchg
or
icebp
dec
nop
mov
test
out
das
outsb
push
sbb
dec
pop
bound
fs
fisttps
into
xor
mov
lds
call
or
test
shr
or
out
push
test
fists
and
mov
xor
or
scas
pushf
mov
in
imul
jecxz
add
dec
movsl
jbe
fs
inc
pop
push
icebp
or
imul
outsl
or
dec
mov
sub
mov
in
in
mov
mov
andl
mov
negl
xchg
xor
pop
inc
pop
in
and
sbb
cli
addl
imul
adc
int3
mov
fcomp
sub
add
pop
mov
push
cli
cmpsb
loop
lods
add
cli
stos
pushf
jg
out
jno
testb
bound
es
adc
and
add
je
and
add
mov
mov
dec
sub
jnp
jns
pushf
pop
xlat
add
push
cltd
shlb
divl
movsl
icebp
inc
out
mov
jnp
into
outsl
ror
inc
cwtl
mov
mov
or
cmp
jb
inc
or
sbb
cmp
push
scas
jae
sbb
movsl
pop
mov
cmpb
push
lods
je
outsl
sub
mov
mov
push
dec
cmpsl
das
push
dec
push
sub
imul
adc
push
stos
test
int
jge
fidivrs
stos
jmp
mov
push
dec
jmp
sbb
mov
xor
aas
jne
mov
dec
repz
lcall
xchg
ret
aam
adc
dec
xor
push
xor
je
inc
cmp
dec
movsl
mov
movsl
cli
xchg
cmpsb
jno
scas
jo
pop
xor
leave
fnstsw
xor
mov
and
roll
push
xor
fdiv
mov
loop
adc
cmp
mov
ret
mov
jmp
add
pop
lods
jb
lcall
push
cwtl
lock
and
stos
sub
pusha
clc
xchg
mov
adc
gs
and
fs
dec
test
or
insl
int
mov
and
int
add
cwtl
mov
cmp
imul
lret
and
jae
and
repz
int
popf
jg
pop
xchg
insb
jae
ret
aam
push
lcall
xchg
aaa
mov
mov
mov
sub
stos
inc
cmpsb
mov
push
lods
cs
fld
subb
ljmp
or
lcall
inc
xbegin
hlt
xor
ljmp
ljmp
xchg
mov
xchg
push
loope
and
cmp
subl
mov
pushf
aaa
inc
inc
js
ljmp
ret
dec
pusha
pop
cwtl
mov
jbe
xor
fisubrl
sahf
or
sub
sbb
test
pop
fstps
test
sub
fimuls
pop
jecxz
dec
add
fistpll
add
faddl
push
in
fnstcw
or
pushf
loop
stc
ljmp
inc
das
aad
pop
add
nop/reserved
pop
jge
mov
mov
or
clc
out
and
inc
xchg
inc
cmp
mov
mov
and
mov
sbb
popf
inc
sub
mov
xor
adc
sbb
call
loope
movsb
mov
xor
sbb
cmp
mov
mov
dec
sahf
cmc
rorl
test
xor
stos
mov
mov
data16
loope
jo
bound
sub
aad
mov
outsl
scas
das
imul
or
into
shrl
add
mov
cmpl
orb
jae
pop
mov
dec
dec
shrl
adc
pop
cli
out
xchg
cmp
out
lret
adc
cmp
and
push
iret
imul
fldenv
jp
mov
lods
sbbb
cmp
in
inc
daa
jnp
loopne
ja
dec
jge
lret
int
mov
sub
and
xor
add
cwtl
cli
outsl
cmp
rol
mov
lret
jns
and
ret
inc
push
and
negl
dec
hlt
call
mov
pop
mov
test
cmp
call
xor
jbe
sub
or
jns
stc
pop
data16
in
loope
and
ljmp
js
cs
loop
xor
sbb
rclb
fidivs
mov
mov
in
sbb
psllw
loope
sbb
aad
or
sbb
dec
mov
push
xchg
lds
push
push
mov
push
aas
es
test
pusha
repz
inc
shrl
sub
shrl
jle
sub
decl
mov
jl
mov
jp
xchg
push
subl
sahf
push
lock
xor
adcl
cmp
mov
mov
call
pop
mov
aam
xchg
aad
test
mov
stos
les
inc
jnp
cmc
or
pop
cwtl
ja
aad
add
mov
dec
sub
fstl
xchg
dec
int3
mov
in
pushf
cld
ret
sub
inc
xchg
stos
aam
xlat
test
mov
pop
lock
mul
add
pop
jle
fcoml
jno
cmpsl
sbb
cmp
insb
sbb
inc
push
adc
and
test
insb
dec
mov
iret
in
xor
xor
or
cmp
jnp
mulb
or
hlt
push
mov
movsb
mov
decb
out
jb
in
daa
ds
cmp
lret
out
adc
rcll
mov
or
mov
xor
pop
jno
mov
jge
movsl
adc
aaa
sti
aad
into
iret
icebp
repz
pop
das
mov
pop
add
es
pop
inc
inc
pop
ds
cmp
or
pop
popa
and
mov
inc
jmp
or
fisttpl
xchg
aas
les
cmp
repz
divb
adc
xor
adc
ja
fldt
push
test
sub
add
push
fnstenv
and
push
cwtl
in
push
lahf
lret
or
inc
pop
iret
dec
daa
pop
and
cmpsl
xchg
jg
cmp
jns
sbb
add
test
jno
push
pop
add
xlat
pop
pop
push
and
fimull
add
cltd
jmp
add
sub
xchg
push
int
add
jo
or
jnp
xchg
fcomi
inc
int
lret
mov
adc
shlb
ss
arpl
hlt
fs
rcll
push
mov
cmpsb
pop
int
gs
in
jg
dec
pop
mov
repz
mov
das
mov
fs
leave
lea
movsl
lods
out
pop
xlat
hlt
dec
xchg
inc
sub
push
stos
xchg
out
mov
add
popa
mov
xchg
push
cmpsb
sbb
sti
jne
jno
scas
mov
call
mov
iret
xlat
xchg
pop
lea
test
adc
mov
or
out
cld
sbb
dec
add
mov
out
pop
sub
mov
mov
stos
xor
add
mov
lret
stos
out
cmc
inc
xchg
ds
or
add
or
cmp
test
lods
adc
gs
push
xor
stos
xchg
mov
dec
fwait
push
adc
cs
cmp
shr
dec
mov
shrl
rolb
pop
ret
call
jne
cmp
loopne
adc
add
imul
inc
adc
xchg
cmp
add
aaa
mov
gs
mov
mov
test
jp
pop
mov
xchg
jb
cwtl
popf
pop
data16
lock
lods
arpl
fildl
in
cltd
dec
les
ficomps
xchg
lret
xchg
in
mov
mov
push
add
fsts
pushf
inc
ret
arpl
pop
daa
pop
out
mov
xor
in
sub
push
je
jo
js
insl
cmp
add
xchg
and
ljmp
cmp
jo
rcl
jo
hlt
daa
aaa
repnz
cwtl
and
daa
xchg
cmp
jbe
mov
sarb
sahf
or
testb
pop
xlat
lods
mov
push
mov
cld
repnz
pushf
int
test
dec
rolb
mov
movsl
sbb
aaa
sub
xor
pop
jbe
nop
push
shr
movsl
mov
in
dec
sub
sub
imul
lret
inc
jmp
push
les
mov
lcall
int
pop
adc
mov
sysret
inc
fwait
dec
inc
adc
push
xchg
outsl
das
xor
enter
mov
sub
add
aad
add
mov
and
sti
pushf
sub
mov
cmp
mov
es
fadds
pop
inc
arpl
pop
xchg
mov
push
mov
outsb
pop
pop
js,pt
dec
outsl
inc
fs
in
out
lea
cwtl
sub
popf
pop
rcl
or
mov
fimull
mov
fwait
jnp
pop
stos
ret
dec
cmp
pop
insb
rclb
lds
pop
xchg
jno
xor
inc
je
cmpsl
push
mov
ljmp
jae
pop
stc
in
cs
hlt
sub
sbb
lea
or
xor
iret
adc
clc
pop
je
call
inc
lods
jmp
inc
pop
lock
jo
jb
pushf
mov
lock
dec
and
pop
push
jle
sbb
mov
iret
mov
ja
std
or
inc
vmovdqa
and
aad
and
push
dec
xchg
inc
jno
enter
or
jecxz
ss
mov
and
jb
jno
mov
jbe
ret
gs
jno
lcall
les
shlb
insb
cmp
flds
and
aam
sbb
imul
mov
and
mov
das
cmp
test
mov
pop
ficoms
adc
mov
daa
pop
jno
push
inc
lret
mov
xchg
and
mov
jge
xchg
cld
gs
pop
add
and
decl
push
jecxz
cmp
gs
and
sbb
push
sbb
fiaddl
sbb
call
lcall
cmpsb
cli
dec
cli
sub
lahf
int
fdivl
push
test
nop
mov
inc
and
mov
cmp
out
fidivl
pop
hlt
xor
jo
mull
xorb
movsb
stc
jl
fucomp
int
lds
test
sub
mov
adc
inc
out
pop
xor
stos
mov
leave
cld
xchg
xchg
pushw
scas
shl
mov
xchg
fildll
lods
xchg
sti
int3
or
cli
mov
adc
cli
fbld
cltd
xchg
clc
jno
xchg
mov
arpl
dec
sub
lcall
mov
pop
into
mov
test
add
es
fildl
cmp
pop
rcrb
or
fbld
div
inc
sbb
inc
xrelease
cmpsl
aas
ljmp
mov
adc
sub
std
popf
fwait
push
cmp
push
lret
push
aad
scas
scas
ret
or
arpl
andl
or
outsb
inc
aaa
pop
sub
ja
jmp
jnp
sti
sbb
imul
hlt
fwait
bound
test
popf
data16
pop
test
test
push
pop
add
xor
xchg
dec
jno
inc
sti
mov
scas
mov
ret
mov
ljmp
std
push
push
xchg
inc
mov
call
dec
scas
mov
sbb
addr16
xlat
xor
dec
inc
sbb
dec
fildll
cmpsl
jge
jge
and
enter
xchg
sti
pop
lret
and
sbb
push
or
repnz
enterw
bound
sti
lods
aas
repz
aam
out
ljmp
in
movntps
jg
sbb
mov
cmp
sub
scas
push
adc
cmp
stos
jnp,pt
cli
push
cmp
scas
push
repz
mov
pusha
testl
xchg
fidivrs
dec
aam
int
outsl
stos
cld
jns
dec
mov
pop
shlb
cmp
dec
je
mov
mov
push
push
push
out
adc
ja
stc
pushf
or
xor
xchg
lods
imul
jbe
jle
add
rclb
mov
push
lahf
addr16
cld
pop
fidivrl
jge
in
cwtl
add
jecxz
out
movsl
or
pop
lods
andb
pop
mov
lret
add
or
mov
les
int3
cwtl
cmpsb
push
xor
add
dec
mov
adc
insb
dec
adc
in
orl
subb
sub
bound
mov
js
sub
pop
dec
jnp
sub
mov
lock
stos
ret
pop
mov
pop
add
jle
in
cmpsl
sarb
mov
sbb
imul
mov
out
push
adc
daa
inc
js
mov
xor
push
jns
mov
xor
inc
subl
fiadds
jbe
pop
or
popf
xor
mov
fimull
fldl
rclb
aaa
fisubrs
js
add
out
and
mov
cli
sbb
movsl
add
cmp
mull
es
cmp
movsb
push
data16
das
and
or
mov
enter
sbb
mov
das
outsb
mov
and
cmp
jecxz
or
pop
pop
nop
daa
test
cmpsb
popf
push
cltd
bound
mov
repnz
test
test
call
cltd
sub
add
push
fcomps
add
mov
in
loopne
je
daa
in
cmpsb
rorl
jmp
test
adc
inc
aad
pop
mov
mov
fldl
pop
mov
cmpsb
jecxz
xor
imul
sbb
in
mov
jecxz
fldenv
loop
lods
enter
xchg
pop
xchg
adc
adc
or
stos
adc
sbb
xor
imul
mov
xor
lcall
daa
xor
neg
and
jo
or
jle
push
shlb
aaa
dec
mov
push
mov
xlat
mov
cmp
cwtl
call
imul
sbb
push
push
lcall
xchg
shrb
sub
mov
mov
add
inc
xor
sti
pop
stc
sub
fs
fwait
dec
mov
mov
mov
push
std
push
std
xor
sbb
push
outsb
push
dec
pop
push
pop
inc
or
pop
jmp
pop
loopne
dec
or
repnz
sti
mov
pop
jbe
ret
ds
ficoml
sbb
scas
jecxz
pshufw
das
or
insl
jecxz
inc
loope
mov
inc
mov
mov
lret
and
xor
mov
ret
mov
sbb
enter
dec
inc
outsl
movmskps
cmpsl
outsb
xchg
xor
cs
add
dec
popa
inc
inc
adcb
push
cmp
aad
mov
fisubrs
out
xchg
data16
and
fiadds
lret
stos
ja
call
popf
or
adc
or
loop
mov
mov
cmp
lea
jns
int3
lret
cmp
xor
add
fildl
loope
sbb
cmp
popa
dec
sub
fisubl
repz
gs
or
dec
aad
mov
hlt
jo
jo
adc
in
lret
mov
cs
add
lods
or
pop
cmpsl
push
sbbl
sbb
sbb
push
jo
sub
std
pushl
inc
sub
pop
les
dec
pop
push
xchg
sbb
outsb
shlb
inc
xor
push
ljmp
sbb
add
jle
jae
sub
xchg
fwait
and
pop
and
aas
mov
push
out
inc
jo
push
iret
sub
xchg
push
lcall
xchg
pop
push
sub
dec
adc
pop
out
mov
mov
mov
lock
pop
loopne
pusha
jp
add
inc
xchg
and
stos
out
jp
xor
sbb
xchg
icebp
insb
test
jl
xchg
daa
int
ja
push
adc
or
loop
sub
fbstp
adc
dec
push
movsl
jne
lock
pushf
add
push
das
sahf
rcrl
mov
jp
xchg
push
jecxz
sahf
movl
popa
push
fldl
aam
add
push
or
sub
jle
and
jns
add
jg
mov
sbb
inc
sbb
pop
mov
jbe
mov
mov
int3
cwtl
mov
leave
leave
fdivrs
sbbw
repnz
push
xchg
popa
cmp
add
pop
dec
ja
adc
or
cltd
mov
jg
jne
pop
inc
insb
dec
cltd
rcrl
and
add
push
outsb
mov
and
cmpsb
jg
jns
sbb
mov
xchg
mov
stos
jno
lock
xor
adc
cmp
cmp
inc
pop
in
push
test
sbb
cli
sbb
fs
popa
loop
aam
add
sti
aas
aas
push
fiaddl
xor
jle
addr16
jmp
cmpsb
mov
dec
add
sbb
enter
mov
cmp
cmp
xchg
gs
add
or
sbb
cmp
fwait
repz
cmc
repnz
orl
xchg
data16
adc
mov
not
cmpsl
ret
int3
push
mov
rorl
lds
notb
cli
add
lods
in
in
mov
xchg
cmp
lock
xchg
xor
lret
movsb
xor
cmp
lcall
jnp
aam
add
in
es
dec
jmp
test
idivb
into
pop
push
mov
scas
xchg
cmp
ljmp
movsb
insl
movsb
or
pop
jecxz
lods
fistl
jmp
push
scas
jno
sahf
push
call
cmp
and
inc
in
sbb
idivb
ljmp
test
mov
push
lea
fidivrl
fmul
leave
mov
cmp
mov
test
pushf
ljmp
jbe
ja
mov
sbb
mov
cmpsb
xchg
lcall
xchg
or
and
lret
outsl
xor
inc
clc
outsl
xchg
in
dec
popf
dec
sub
stc
in
test
inc
scas
sub
and
add
pop
hlt
inc
scas
cwtl
stos
push
out
aad
jnp
les
fidivl
push
xor
lcall
ss
rcrl
jmp
push
cmp
fwait
xchg
mov
loopne
mov
addl
xchg
xor
ret
inc
inc
add
into
fdivrs
pop
inc
out
lds
pop
mov
subl
imul
sbb
push
pop
mov
pop
aas
loopne
lea
push
pusha
pop
in
fnsave
insl
xlat
adc
sub
repnz
adc
dec
sarb
dec
pop
mov
mov
cmp
icebp
lods
jns
aad
push
into
xor
sti
sub
or
inc
loop
or
mov
aas
repz
cmp
jge
mov
stos
fs
mov
xchg
push
pop
testl
or
inc
and
nop
out
scas
mov
fbld
and
out
fdivl
xchg
xchg
push
fs
jns
lods
mov
hlt
movb
in
dec
jb
sbb
jnp
or
mov
pop
add
fsts
cmp
cmpsl
xchg
fisttps
pop
mov
sbb
mov
inc
aad
out
out
push
xlat
int3
jp
sub
jne
in
fcomps
dec
loop
in
ja
dec
testb
mov
mov
xlat
add
mov
fstl
test
dec
or
dec
cmp
arpl
loope
movsl
stos
cmp
mov
jo
inc
sbbl
test
jne
push
xor
pop
nop
push
mov
or
push
pop
decl
icebp
sbb
stos
leave
fcoml
pop
adc
icebp
fnclex
ficomps
mov
add
loopne
add
mov
sbb
sbb
shrl
cltd
add
adc
adcb
ficomps
ja
daa
push
arpl
or
cmpsl
fisttps
fsubl
loope
inc
mov
fwait
scas
int3
sbb
inc
mov
cltd
inc
fistpll
imul
mov
ficomps
cs
outsb
or
fisubl
mov
in
sub
cmp
ja
jmp
push
sahf
jp
jae
add
jae
addr16
filds
and
pusha
jg
into
xchg
mov
mov
dec
jo
ljmp
mov
lea
sub
daa
lcall
nop
and
mov
aaa
fstl
data16
hlt
push
inc
add
mov
arpl
inc
xchg
maxps
pop
mov
inc
shr
cwtl
sbb
daa
xchg
rcrb
fs
imul
pop
lock
cli
pop
push
xchg
or
and
inc
adc
sbb
in
movsl
sbbl
fisubl
dec
xchg
popf
clc
mov
fcmovnu
call
push
aaa
dec
scas
stos
push
rorb
xchg
or
clc
ljmp
ret
push
push
sbb
cld
mov
fsts
inc
sbb
jo
push
mov
es
shll
mov
xchg
pop
push
cmp
movsb
sbb
cs
jge
out
cmpsl
repnz
stc
fnsave
jmp
lret
mov
lret
inc
or
movsl
push
maskmovq
testl
outsl
repz
xchg
xor
mov
jmp
insl
lea
enter
lret
sahf
inc
orb
add
rorl
cmp
aaa
addb
out
mov
mov
inc
fisttps
push
addr16
in
cltd
int
lcall
mov
insl
pop
je
ror
lea
leave
adc
fadds
dec
and
cwtl
and
add
fadd
mov
js
add
xor
inc
mul
cmp
and
pop
fisubl
adc
data16
push
mov
dec
sbb
imul
inc
pusha
and
outsl
mov
pop
imul
xor
loopne
jge
punpckhbw
out
add
xchg
inc
mov
inc
add
and
movsb
shl
sub
xchg
xchg
adc
test
mov
aaa
test
stc
jmp
cmp
pop
es
stos
js
rol
or
in
daa
test
dec
push
movsl
lahf
mov
inc
je
adc
mov
mov
jmp
jl
jns
call
int
xchg
sbb
inc
mov
dec
and
jmp
cmpl
pop
stos
ficoml
or
ss
popf
jne
add
xchg
aaa
push
sub
add
add
mov
test
repz
bound
inc
test
daa
xchg
rcl
push
jmp
jle
jmp
xor
daa
mov
adc
outsl
notl
inc
js
or
push
rorb
or
aad
loopne
pusha
inc
sub
ja
inc
aam
xchg
push
and
mov
mov
inc
imul
push
divb
fwait
mov
leave
pop
lea
cli
test
sbb
pop
inc
rol
pop
mov
ja
sbb
lods
mov
mov
push
lds
or
cmp
sbbb
add
outsl
mov
test
mov
mov
push
stc
sub
orb
filds
sbb
cmp
cmpsl
mov
push
mov
mov
mov
cld
mov
add
push
ret
cmc
pop
xchg
sarl
decb
sbb
add
sub
pop
dec
and
jbe
outsb
fiaddl
inc
shlb
insl
add
dec
cmpsl
lea
lods
sub
outsb
fstl
notb
jecxz
in
shl
addr16
mov
mov
dec
xchg
mov
pop
dec
imulb
dec
or
and
cmp
jne
xchg
push
test
xor
inc
ja
adc
ds
dec
test
dec
in
fcomps
mov
cld
sub
xor
ljmp
cmpsl
jne
data16
bound
xchg
lcall
pop
xchg
fiadds
sub
aad
add
test
mov
cli
push
scas
dec
jl
and
pop
out
cmp
sbb
test
movsl
sub
mov
mov
mov
stos
jo
sahf
fdivrl
test
cmp
bound
jl
test
dec
fadds
rorl
cmp
movsl
sbb
pop
mov
lea
mov
jle
loope
aaa
rol
sub
data16
lretw
cli
xchg
jmp
inc
addr16
inc
insl
sub
gs
fwait
sbb
push
insl
ret
mov
test
addr16
jae
pop
sarb
push
adc
xor
pop
cmp
xchg
outsb
dec
push
les
jbe
prefetchnta
and
ja
push
sub
xor
mulb
jb
push
lea
sbb
add
lea
sbb
pop
mov
push
jge
ja
imul
insl
into
testl
flds
testl
add
les
pop
aaa
adc
cmp
lds
jb
cmp
sub
jbe
dec
int
mov
pop
add
xor
sub
js
enter
mov
cmpsl
data16
fistl
pop
pop
test
out
jae
and
adc
mov
mov
adc
jge
sub
jecxz
outsl
mov
les
sub
negb
repz
out
loopne
aaa
jnp
cmp
sbb
sbb
inc
cmc
test
mov
xor
pop
daa
jb
into
mov
dec
movsl
shlb
adc
mov
xchg
inc
xor
xlat
mov
pop
dec
jmp
bound
add
dec
test
ljmp
push
test
pop
out
cli
pop
ja
and
mov
loope
outsl
arpl
lahf
jno
decb
mov
mov
jb
adc
jne
fdivrl
jmp
push
loopne
xor
xchg
sbb
mov
mov
mov
popf
jecxz
push
loopne
pop
inc
ljmp
cmp
xor
dec
or
in
repnz
packsswb
push
or
mov
xorb
lods
insl
rcll
xchg
mov
sbb
push
ret
paddsw
out
cmp
fisubs
pop
jae
test
nop
leave
adc
jne
sbb
jne
orb
pop
int
push
add
repz
ud0
test
out
adc
mov
sbb
xchg
add
jno
or
xchg
sub
gs
into
adc
int
scas
cltd
out
jne
cld
pop
into
xrelease
jmp
int
mov
int3
mov
loope
insb
dec
mov
pop
xchg
sti
or
xchg
cmc
jb
imul
cmp
fadd
pop
inc
cwtl
pop
scas
push
sub
orb
and
into
js
mov
dec
fisubrs
and
sbb
mov
loop
cld
dec
mov
push
inc
sbb
xor
push
dec
jns
sub
lcall
mov
pusha
ja
mov
cmp
pop
sbb
pushf
dec
cmp
lods
loope
jl
das
cmp
mov
pop
popa
sbb
cld
imul
imul
push
adc
add
cli
fdiv
js
out
gs
push
cwtl
call
ljmp
insl
xchg
mov
mov
mov
add
mov
inc
ret
inc
xor
and
daa
pushf
fxch
sbb
xchg
int3
add
inc
mov
movsb
sbb
mov
push
jo
ret
fucomp
andb
cwtl
fcmovb
mov
int3
sarb
arpl
dec
into
addr16
or
pushf
add
jbe
mov
imul
lret
adcl
fsubs
or
mov
inc
jecxz
and
cwtl
adc
leave
aaa
cmpsb
xchg
bound
inc
xor
xchg
in
add
and
sub
aam
scas
jnp
daa
jl
or
push
sub
inc
bound
inc
mov
mov
aas
xchg
mov
out
nop
lods
cmpsb
dec
add
dec
aad
mov
fbld
shlb
mov
imul
sbbl
and
cwtl
bound
shrl
add
std
push
popf
aam
push
mov
mov
fdivrs
sarb
mov
lods
subb
fsts
lds
popf
push
inc
xchg
les
shrl
sti
lahf
lret
push
ret
cmp
lret
and
or
inc
xlat
out
add
lea
mov
sti
icebp
arpl
inc
sub
aaa
dec
int
bound
pusha
sub
sbb
pop
mov
cmc
mov
aam
incl
leave
xchg
add
fldcw
jne
ljmp
call
in
push
cwtl
out
cmp
or
adc
mov
cmp
adc
div
sub
jnp
ret
dec
xchg
xchg
xor
movsl
xchg
sbb
or
scas
or
mov
pop
shll
xchg
lahf
movsl
and
xchg
mov
insl
mov
imul
mov
lea
lock
aad
add
pop
pop
push
adcb
fidivrs
dec
mov
sub
mov
and
mov
out
pop
fisubrs
add
adc
sarl
pusha
std
decl
cmpsb
lock
mov
push
aam
es
inc
gs
insl
cltd
and
push
add
insl
mov
adc
aas
mov
imul
outsb
lods
cmp
pop
push
sub
repz
int
pusha
mov
mov
fcomi
aad
fcompl
jecxz
fimuls
or
ds
jo
in
push
inc
cmp
mov
cmpsb
jns
sub
inc
mov
hlt
call
in
imul
test
repz
push
sub
insb
orl
mov
xchg
push
sbb
rcll
sti
xlat
in
stc
fwait
adc
jno
lret
push
jbe
lds
push
mov
popf
pop
out
std
mov
jp
mov
clc
xchg
jmp
cmp
out
cmpsb
jbe
inc
outsl
decl
jne
dec
lcall
scas
pop
push
inc
dec
xchg
cmp
add
dec
fnsave
andb
sbb
imul
loopne
movsb
cmp
xchg
xchg
cmpsl
jmp
dec
std
je
cmpsb
fbstp
mov
push
loop
push
imulb
aas
bound
push
daa
aaa
push
in
mov
in
push
xor
jge
fwait
mov
iret
popa
pop
int
jo
les
cli
repnz
lret
sub
jno
xor
dec
fdivrl
sbb
out
add
and
mov
cmp
fidivl
or
push
cwtl
mov
and
push
push
not
dec
and
xchg
mov
scas
push
fldl
ret
pushf
ficoml
sub
push
sub
jns
and
test
xor
pop
or
xchg
outsb
sbb
xchg
jo
clc
stc
mov
mov
stc
out
lahf
add
mov
and
jo
flds
push
xchg
mov
fcom
imul
dec
scas
into
push
aam
xlat
mov
call
lods
mov
std
lcall
mov
and
movsl
mov
jp
mov
bound
sbb
add
int
rclb
ja
clc
mov
dec
lea
aaa
mov
dec
xchg
or
std
inc
mov
adc
or
cld
mov
mov
sub
lock
mov
fwait
stos
ret
in
outsb
test
in
xor
sbb
sub
pop
in
lret
in
cmpl
xor
pop
movaps
mov
in
cltd
jp
loope
mov
call
cmp
xchg
xchg
or
ljmp
mov
adc
inc
cmpsl
mov
call
mov
pop
fildll
xchg
lret
jbe
jnp
clc
jmp
insb
shlb
cmpb
cmpsl
ljmp
call
gs
mov
imul
lock
ficomps
sub
insb
sbb
dec
ret
je
pop
mov
out
add
pusha
cmp
scas
popf
lods
in
cs
mov
cld
dec
xchg
mov
mov
fwait
inc
or
pop
inc
rolb
cmpsb
fisubs
cmc
imul
sub
jne
xor
call
jb
jns
or
rorb
out
repnz
iret
es
mov
mov
subb
and
add
in
and
pop
cli
popa
mov
lret
inc
into
imul
push
bound
bound
push
cmp
inc
push
dec
xchg
addr16
ds
in
mov
pop
lahf
stos
ret
pop
out
sub
inc
sbb
mov
out
xchg
pop
addr16
inc
test
and
mov
out
sub
in
testl
sbb
inc
frstor
or
rep
pop
repnz
add
iret
mov
cmp
mov
shlb
pusha
and
mov
test
cmc
mov
sbb
shrb
xchg
popf
movsb
cmc
sarb
cmpsb
cmp
fwait
pop
imul
push
mov
adc
jmp
bound
push
pop
add
jg
or
or
test
xlat
dec
movsl
and
stos
test
lcall
sbb
push
inc
jnp
mov
push
mov
inc
out
mov
pop
in
add
ret
pop
test
mov
rorl
or
je
adc
pop
fsubl
aad
xchg
int3
adc
jecxz
push
call
movsb
loope
dec
xchg
mov
insl
pop
scas
loope
pop
pop
scas
mov
jecxz
pop
data16
xchg
repnz
cmpsb
mov
shll
sarb
ljmp
adc
cmp
out
call
cmp
mov
push
sbb
mov
cmpsl
push
cltd
in
xor
xchg
add
out
xor
sbb
xchg
dec
mov
in
fstpt
std
xor
cli
rcrl
shrl
push
adc
inc
mov
lds
push
jbe
loope
and
pusha
jns
cmc
pmulhw
jecxz
xor
inc
iret
test
pop
mov
addr16
das
xor
jmp
jmp
dec
jno
out
dec
xor
xchg
pop
push
push
push
test
xchg
fistps
lods
xor
rol
cmpsl
loope
add
mov
rcrb
xlat
iret
test
test
in
ja
setg
pop
pushf
dec
sbb
hlt
and
rorl
add
sbbb
sbb
xlat
push
jae
lea
stc
push
sub
ret
mov
mov
and
and
jge
jecxz
mov
and
aam
xor
cmp
push
xor
ret
rolb
leave
mov
xor
mov
push
pop
les
repnz
and
and
cltd
jo
dec
hlt
sbbl
hlt
mov
jge
jle
cld
in
dec
mov
xor
leave
push
es
int
xchg
cmovl
dec
ror
std
imul
and
push
add
or
xchg
les
test
ljmp
lret
loop
cwtl
shl
mov
mov
sbb
or
data16
xor
fbld
and
cmp
mov
adc
mov
xor
inc
sbb
mov
or
scas
ficompl
cs
stos
sar
aam
into
push
adcb
pop
push
in
pusha
sbb
pop
or
xchg
shlb
ret
mov
xchg
or
adc
ds
pop
pop
mov
popf
sbb
adcl
imulb
cmpsl
mov
and
mov
out
mov
in
xchg
in
sub
push
dec
sub
add
arpl
test
sbb
in
cmp
dec
xchg
mov
push
jmp
xchg
cmc
mov
insb
leave
xor
mov
cli
aas
or
or
sbb
repnz
jo
add
subl
xchg
mov
sub
cltd
lcall
lock
adc
lea
into
mov
cmpsl
and
mov
jnp
es
js
jg
pop
nop
outsl
adc
test
push
cmp
xchg
push
pop
jb
inc
je
inc
adc
push
pusha
pop
fnstsw
inc
lods
dec
pop
aam
or
decl
int3
add
jbe
jmp
xor
cmp
add
aaa
cmp
pop
test
mov
rdmsr
pop
xchg
jnp
jb
ss
fldcw
cmpb
lahf
push
pop
ljmp
repnz
jecxz
mulb
inc
repz
push
dec
sub
adc
shlb
sub
push
leave
shl
push
pop
pop
and
push
sub
in
jle
sub
in
jecxz
mov
or
pop
push
rolb
hlt
jp
out
sbb
enter
ret
xor
jb
mov
pop
cmpsb
adc
test
cli
jl
rclb
and
cmp
js
push
or
jge
cld
and
jbe
mov
nop
fldcw
lock
or
adc
and
sbbl
nop
std
mov
sbb
push
xchg
push
sub
mov
jl
xor
mov
mov
mov
dec
arpl
sbb
loopne
out
lcall
xor
or
fcomi
jnp
jns
es
xor
pop
sbb
mov
clc
pushf
orb
out
aas
push
mov
jg
clc
push
push
mov
add
or
or
aad
fsts
push
movsb
xor
int3
cwtl
fstpl
and
jo
mov
push
xchg
xchg
shrb
lret
xchg
push
iret
jnp
and
int3
rorb
testb
sbbb
add
adc
lahf
mov
jno
cld
push
fs
mov
or
nop
lcall
lods
pop
push
mov
mov
mov
pushf
movsb
and
or
pop
gs
push
pusha
mov
int3
mov
mov
jns
pop
repnz
fiadds
loope
jae
in
ficoml
lods
test
loope
cltd
mov
fildll
pop
mov
ret
xor
or
int3
outsl
cli
sti
movsl
ljmp
in
std
pop
int
mov
or
pusha
add
enter
outsl
adc
movb
aam
cmpb
loopne
dec
cmp
pop
push
pusha
lea
in
pop
jnp
adc
xchg
and
orl
outsb
push
jae
andl
fwait
rorl
xchg
cmp
adc
dec
jb
insb
std
dec
mov
sub
in
out
fsubrl
dec
dec
mov
icebp
nop
mov
data16
jp
sti
mov
jge
out
sbb
bound
sbb
rolb
gs
addr16
data16
push
jne
jo
movsl
inc
pop
ljmp
push
jl
cmpsl
mov
mov
lods
cli
stos
jg
dec
xchg
int3
into
jle
imull
push
out
mov
mov
or
push
adc
insb
sub
and
inc
and
cmp
push
adcl
or
add
ret
xor
stos
mov
enter
dec
add
mov
mov
cmp
jge
sbbb
fistpl
mov
into
pop
out
loop
mov
call
into
mov
ljmp
mov
dec
mov
add
sbb
pop
jp
xchg
hlt
gs
icebp
movl
iret
fmull
sub
fnstenv
and
cmpsb
xchg
mov
movsb
push
out
xchg
mov
jl
xor
fildl
cmc
movsl
in
scas
sbb
add
test
jns
mov
test
mov
pop
mov
lahf
push
mov
hlt
sbb
out
xchg
mov
or
mov
stos
leave
mov
jne
negl
fcompl
jne
inc
jmp
xchg
shlb
negl
adc
negb
das
lds
pop
lds
xor
rcr
cs
lock
into
jmp
xchg
inc
icebp
imul
jbe
mov
test
ja
jns
mov
mov
inc
lds
xor
xchg
insb
es
xchg
mov
push
lds
ret
fisubrs
mov
inc
or
cmpsl
push
leave
rcrb
xlat
lods
mov
int
adc
cld
adc
and
gs
stos
insl
js
ret
outsb
int
dec
add
cmp
pushf
cmc
in
lods
jl
ret
pop
pop
aam
loop
dec
mov
cmp
jo
popf
outsl
lods
mov
pop
jo
mov
aas
mov
xchg
add
into
ret
inc
push
fldcw
stos
out
andl
sbb
insl
lahf
pop
dec
out
add
push
xor
jp
or
out
mov
mov
cmpsb
addr16
push
lret
sarb
int
push
adc
fwait
les
test
or
data16
add
sti
fsubrp
push
push
sbb
pop
cs
movsl
jne
lcall
inc
ja
jo
aaa
xlat
fidivl
aad
mov
fs
xchg
int
push
add
daa
jbe
rcl
lea
and
xchg
in
sbb
mov
lcall
cmpsl
push
fsub
xor
in
in
cmc
mov
std
mov
in
push
and
sahf
mov
lret
fs
cmp
xor
dec
rolb
xor
sbb
mov
aas
xchg
and
outsl
loop
adc
popf
and
fwait
jle
les
mov
int
ret
scas
out
mov
lahf
xchg
adc
jecxz
lret
jo
inc
inc
out
push
fstps
inc
xor
andb
adc
push
addb
and
aas
inc
test
imul
mov
pop
repz
movsb
in
fstl
pop
out
int3
es
cmp
xchg
fmuls
mov
jae
mov
and
js
sbb
orl
sbb
mov
or
out
jae
push
std
mov
dec
icebp
imul
sbb
jnp
mov
push
rcl
inc
std
stc
pusha
push
mov
jne
lods
mov
adc
movsb
add
aam
mov
sahf
pop
dec
sub
xor
mov
hlt
faddl
ljmp
xchg
mov
mov
cmp
cmp
adcl
arpl
adc
mov
push
out
mov
in
pushf
negl
xchg
std
push
mov
ret
sub
pop
jp
push
sub
std
int3
push
jno
mov
sub
cld
xchg
out
loop
jge
int
adc
outsb
subb
pop
int3
js
loope
fsubrp
sub
cmp
imull
out
sub
stos
loop
mov
js
add
pop
mov
insl
pop
ret
and
xor
cld
loopne
jo
jmp
mov
xorl
mov
mov
jb
inc
lea
test
test
add
and
mov
inc
jb
pop
dec
fdivl
lods
loope
arpl
cwtl
lahf
push
mov
es
shr
dec
ficoml
inc
sbb
xor
cmpsl
pop
mov
test
jmp
sub
movsb
notb
enter
xor
jno
push
fimuls
push
int
pop
xor
xor
fsub
aad
push
dec
pop
mov
xchg
inc
sub
dec
frstor
pop
aam
xor
mov
lea
ja
xor
sbb
cmc
aaa
cwtl
dec
inc
aam
cld
mov
cmp
push
xor
xchg
enter
daa
xchg
xor
inc
mov
cmp
movsb
leave
fstps
andl
xchg
inc
adc
hlt
push
push
ret
sbbb
cwtl
fidivs
stos
ljmp
mov
push
pop
jo
mov
outsl
rcr
lret
daa
xchg
jecxz
sbbb
xchg
fistps
jbe
inc
imul
icebp
xor
sti
imul
or
add
jmp
cmp
lret
mov
aam
sbb
mov
gs
pop
mov
outsb
cmpsb
or
pop
dec
dec
dec
mov
in
lcall
andb
pop
je
aam
sbb
outsb
dec
jbe
pop
sbb
sub
jmp
outsb
push
add
rolb
and
xor
push
sbb
lock
xor
cmpsl
pop
sub
or
movsb
ja
fcmovnb
mov
or
push
xchg
cs
std
inc
xor
mov
into
jae
inc
jp
aaa
pop
mov
push
aas
pop
stos
sbb
scas
cmp
sub
insl
or
lcall
cmp
sbb
mov
ljmp
sti
lcall
mov
inc
test
push
adc
xchg
scas
pop
sub
mov
lret
dec
push
cmc
cs
sti
int
mov
cmp
add
or
mov
in
xlat
pop
pop
pop
xchg
mov
jle
rcr
cwtl
sbb
mov
pop
xor
aam
cmpb
out
sbbb
jle
imul
or
jmp
repnz
and
and
loop
jns
mov
movsl
icebp
movsl
lahf
mov
add
xor
rcll
or
fstl
out
xor
leave
push
push
call
xchg
je
scas
lret
lret
jecxz
pop
jp
cs
xor
sbb
lea
push
xchg
sarl
test
jbe
mov
nop
xchg
pop
xlat
jne
loop
aaa
sub
fwait
cmp
out
faddp
cmp
jb
shll
jb
inc
inc
addr16
adc
pop
test
shlb
xor
iret
int
fists
leave
sbb
dec
push
pop
mov
mov
adc
pop
mov
dec
sahf
rolb
mov
clc
imul
testl
adc
mov
add
cmpsb
cmp
xor
sahf
clc
xchg
xor
lock
inc
sub
insl
addb
mov
pop
push
xchg
add
dec
dec
sbb
repz
pop
fists
xchg
xor
setb
mov
inc
jns
imul
es
jge
imul
sub
aaa
test
add
repnz
push
sub
sahf
cmp
fs
stos
push
hlt
pop
inc
mov
scas
stc
cltd
sbb
enter
pop
repz
daa
test
fwait
mov
pop
jecxz
out
lods
and
dec
add
or
adc
iret
sub
aad
ss
or
inc
sarb
lock
loopne
inc
xor
les
inc
ds
or
xchg
mov
ja
or
jmp
cmp
sbb
popl
push
add
push
stc
insl
bswap
pop
inc
add
sbb
fwait
add
rcr
mov
enter
mov
test
cmp
or
movsb
xor
mov
cmp
jp
or
or
cld
enter
mov
fwait
mov
addr16
bound
pushf
sti
js
jb
lods
outsl
sti
dec
loop
scas
fimuls
lock
dec
scas
imul
out
daa
leave
shl
flds
sbb
fwait
daa
sub
pop
out
cmp
xor
lea
ja
mov
fldt
pop
jns
inc
cvtpd2ps
stos
scas
sub
mov
and
out
mov
arpl
jne
out
xor
inc
das
bound
push
mov
xchg
fadds
push
cmpsb
sub
out
ret
mov
fbld
inc
pop
mov
mov
or
adc
mov
add
dec
inc
sahf
push
push
inc
jl
ljmp
cmp
sbb
js
and
mov
lahf
sarl
sub
loopne
cmp
mov
mov
dec
leave
shrd
and
mov
movsl
ret
jns
cli
push
inc
jecxz
jae
ljmp
aaa
add
clc
fwait
icebp
lods
mov
das
outsl
xor
or
add
jle
lcall
inc
idivl
adc
push
adcl
insl
add
pop
subb
fisubrs
insl
mov
loopne
inc
mov
xor
pop
jle
pop
lret
popa
mov
pop
out
mov
stos
xor
mov
outsl
insb
add
or
fmul
test
mov
cmpb
in
mull
jno
stos
mov
repz
xchg
or
out
jne
jl
aaa
clc
lret
arpl
adc
xor
clc
push
loop
xchg
insl
daa
loope
push
adc
mov
repnz
test
dec
cli
sbb
xchg
sti
jno
push
cwtl
rolb
xchg
arpl
lea
iret
push
mov
rep
mov
cmp
mov
pop
mov
cwtl
adc
into
inc
out
mov
int3
push
xor
outsl
rcll
ljmp
js
pop
push
cwtl
nop
fidivrs
and
scas
or
dec
pop
into
add
pop
dec
sbb
add
cs
push
push
and
in
inc
int3
gs
or
jl
sub
sbb
jp
and
out
cmpsb
cmp
scas
adc
pop
je
in
push
sub
mov
jle
mov
adc
sarl
cwtl
jle
mov
mov
movl
iret
jo
sbb
incl
or
test
inc
adc
jge
add
loope
mov
jle
sar
icebp
cmp
mov
inc
shrl
xlat
fidivrs
xchg
jg
mov
rcr
filds
mov
flds
dec
std
dec
mov
outsb
adc
adc
lock
and
out
xchg
or
nop
movsl
movsl
add
lods
pop
dec
jl
jno
xor
xor
out
flds
insl
pop
ret
dec
test
adc
addl
in
daa
adc
je
je
dec
xorb
xchg
pop
mov
ss
mov
loop
les
shl
sub
rclb
cmpsl
loopne
xor
sub
sub
lahf
mov
int
xchg
loop
pop
mov
xor
pushf
outsl
cld
hlt
fisttpll
xchg
mov
mov
inc
jb
ss
xlat
xchg
or
test
push
pop
cmp
dec
stos
in
mov
sub
fstps
xchg
jp
pushf
stc
ret
lret
jns
cs
aaa
xor
popf
xlat
pop
adc
mov
clc
mov
test
fwait
push
cwtl
mov
mov
sbb
insb
fldl
scas
pop
jnp
mov
or
xor
xchg
jecxz
mov
dec
sbb
cwtl
sub
mov
bound
or
ja
scas
adc
or
or
lock
gs
mov
push
imul
aaa
ds
fxrstor
repnz
push
rorl
cmpsb
mov
das
ja
jle
xor
adc
and
gs
cmp
mov
mov
rcrb
xor
and
inc
mov
xor
mov
outsb
pop
popf
mov
arpl
aam
fstpt
sbb
jge
lods
lret
mov
push
pop
adc
jo
subb
xchg
pop
sub
fadds
cltd
mov
jno
xor
into
sbb
dec
or
mov
and
hlt
hlt
cmp
inc
jmp
mov
dec
testl
and
loopne
mov
hlt
lea
fadds
jge
bound
lods
adc
mov
cs
add
mov
popa
xor
out
xchg
add
mov
add
or
cltd
adc
inc
lods
cmp
mov
pop
inc
test
push
fsubr
decb
jbe
jmp
dec
dec
xchg
dec
pop
add
sti
jmp
ret
push
sub
ss
mov
pop
dec
cli
cmc
inc
lcall
bound
mov
loope
xor
mov
lock
scas
cli
dec
nop
push
adc
mov
push
arpl
add
outsb
mov
pop
push
push
mov
es
out
roll
cld
push
xchg
cmp
sub
mov
xor
inc
out
cltd
es
inc
and
in
mov
or
mov
cld
decl
lds
divl
mov
xor
stos
adc
xchg
mov
pop
jmp
cmp
arpl
sti
xor
int3
test
sub
popa
sbb
adc
pop
je
ds
mov
sbb
inc
jnp
aas
in
lahf
shll
inc
outsl
test
add
insb
mov
xchg
xchg
cmpsb
xor
pop
or
add
stos
rcrl
stos
lret
sbb
sbb
jns
testl
jo
rclb
cmc
add
repz
push
subl
mov
dec
jp
jne
mov
imul
mov
push
pop
es
jecxz
push
fimuls
dec
cmp
fwait
enter
ss
das
add
ret
lods
cli
int
les
jno
pextrw
gs
enter
lahf
dec
xlat
mov
inc
push
pop
mov
cld
push
jno
fsubrs
push
sahf
mov
les
pop
jne
nop
cmp
test
adc
cwtl
insb
xor
neg
cmc
push
mov
xor
mov
popf
inc
jnp
add
mov
out
cltd
add
sub
pop
in
lods
and
cld
add
sbb
hlt
pusha
out
push
push
adc
scas
mov
subb
psubsb
sahf
mov
jb
fsubp
sbb
in
popa
jnp
add
in
gs
cltd
and
cli
push
dec
dec
fs
enter
mov
jo
xor
mov
sbb
and
jmp
cmp
push
push
pushf
jb
xchg
xlat
and
aam
out
out
adc
mov
rcrl
vphaddubd
push
sub
lea
dec
je
xchg
mov
pop
jl
inc
inc
jg
les
idivb
loope
pushf
andb
adc
jns
dec
inc
pop
call
dec
sbb
bound
mov
xchg
jl
or
sti
mov
popa
dec
jns
push
repz
fnstsw
gs
out
mov
ss
xchg
ss
cltd
inc
cwtl
imul
add
test
mov
lcall
cmp
dec
pusha
inc
adc
cmpsl
or
jns
orb
lods
pusha
xor
jnp
ret
fucom
add
lods
jne
lfs
mov
outsl
stc
sub
fwait
cmc
pop
mov
lea
or
cmp
movsl
sub
les
xchg
lea
dec
lea
mov
insl
and
mov
mov
sahf
sub
adc
js
hlt
inc
std
movsb
push
push
test
xchg
in
out
je
outsl
xchg
dec
adc
adc
cld
js
lret
sbb
push
inc
lds
notl
aaa
cli
pop
je
push
pop
rcll
or
es
inc
sub
sub
sbb
or
cmp
rol
sub
sub
pusha
or
cwtl
repz
stos
and
sbb
mov
cmp
xlat
inc
dec
mov
jmp
jne
push
in
and
movsb
mov
xor
movsl
out
fldt
pop
cs
insl
mov
or
repnz
xor
mov
into
fmull
std
scas
arpl
stos
jge
and
ror
mov
lea
pop
cmp
jl
test
sbb
hlt
aam
push
adc
pop
ja
mov
mov
xlat
mov
xor
cwtl
in
mov
mov
in
imul
pop
mov
sahf
jne
pop
mov
sub
aaa
lock
cltd
adc
test
stc
popa
out
fisttpl
fdivrs
int3
outsl
aas
dec
jnp
pop
ds
call
or
data16
dec
jp
or
ss
inc
popf
int3
inc
jnp
out
and
mov
jmp
add
fimuls
add
in
mov
push
loope
push
enter
mov
stos
fcomi
inc
xchg
mov
int
bound
add
sti
inc
push
inc
das
mov
iret
jae
cmp
dec
xchg
pop
xchg
xchg
lcall
cltd
push
dec
roll
imul
sbb
dec
out
cmpsl
outsb
sbb
pop
fisubrl
add
test
pop
imulb
push
std
les
push
mov
add
mov
jecxz
xchg
sbb
jecxz
test
out
lds
sub
nop
pop
adc
add
ss
jecxz
imul
mov
imul
shrb
jnp
jns
fnstsw
aad
mov
stc
jno
nop
mov
dec
mov
pop
mov
movsl
lods
xchg
test
jle
jae
inc
outsb
and
cmp
decl
ss
mov
pop
jae
insl
mov
sub
faddl
jno
pop
mov
ljmp
rcll
jne
out
dec
pop
dec
in
adc
in
mov
adc
mov
jbe
xchg
inc
fbld
sub
in
cld
scas
lahf
sbb
orl
lcall
lea
mov
test
cwtl
sub
xor
lcall
and
fwait
jg
mov
lcall
sub
jns
stc
cs
sub
shrl
adc
je
push
inc
mov
or
into
arpl
scas
or
and
hlt
neg
outsl
sbb
jo
in
pop
cmpsl
ret
cmp
popa
jmp
sbb
lods
gs
movsl
mov
sbb
aam
imul
adc
cmpl
ljmp
pop
inc
shrb
cmp
and
sbb
add
sub
xchg
ja
xchg
adcl
xchg
jmp
lock
add
cmp
dec
pop
addb
pop
sbb
cmpsl
mov
jno
and
cld
push
pop
xlat
aaa
into
divb
pop
jg
pmulhuw
cmp
cld
jle
mov
sbb
mov
fwait
test
scas
mov
push
cmp
or
or
or
stos
nop
mov
je
mov
mov
popa
mov
mov
nop
cmpsb
cltd
jp
jle
add
pop
pop
mov
sub
mov
jp
xchg
cmp
and
shl
push
cmpl
add
jecxz
sub
cmpsb
shll
rorb
insb
mov
out
mov
adc
in
push
push
xor
pop
cmc
fadds
loop
es
mov
cmp
popl
rcrl
sbbl
clc
lods
push
sbb
sbb
pop
sub
dec
aam
pop
pop
inc
cmp
jmp
add
in
push
mov
subl
and
dec
dec
scas
mov
xchg
ret
and
sbb
lock
es
stos
out
mov
cmp
push
movsl
nop
jbe
jmp
jmp
xchg
dec
push
pop
xchg
test
scas
and
cmp
fistps
fsubs
fldcw
icebp
lods
jl
in
lret
hlt
js
repz
pop
jl
inc
in
test
sub
out
cmp
cmp
mov
dec
lock
push
push
outsl
mov
cwtl
or
mov
outsb
out
mov
sbb
lcall
je
movsb
aaa
inc
in
repz
sbb
mov
lret
popf
call
xor
sbb
das
pop
fildll
sbb
jb
inc
add
rclb
push
insb
add
loop
scas
mov
cmc
orl
add
lahf
pop
fldcw
mov
sub
push
shlb
dec
jp
sti
xchg
or
loope
jbe
push
jmp
or
jbe
roll
addr16
sub
in
mov
adc
outsb
enter
add
xchg
hlt
pop
lods
int
dec
ss
push
push
out
mov
dec
divb
adc
cmp
mov
movsl
ja
nop
mov
fidivrl
iret
jge
push
jns
ret
mov
loopne
or
inc
add
pop
shll
int3
mov
in
mov
push
adc
lods
xchg
fcoml
and
imul
mov
es
cmp
jmp
sbb
aas
inc
push
outsl
fists
inc
cmovno
lock
popf
clc
aaa
sub
push
iret
or
jns
jno
mov
or
scas
jbe
add
fists
outsb
test
xor
mov
out
mov
sbb
aam
push
mov
lahf
das
push
cmp
mov
mov
push
das
pop
push
inc
outsb
mov
mov
jge
xor
adc
cwtl
adc
popa
jmp
pop
les
aad
outsl
in
popl
dec
mov
cmpsb
scas
add
and
dec
push
pop
daa
push
push
data16
ret
dec
stc
data16
sub
gs
stos
ja
lds
mov
inc
cs
test
je
imul
out
insl
sbb
cmc
lcall
popf
es
dec
xchg
dec
and
scas
fdivrs
shlb
push
lea
imul
mov
scas
lods
outsl
pusha
insb
mov
dec
cmpsb
jb
test
mov
shll
test
aam
cmc
lahf
add
jecxz
imul
repnz
clc
pop
mov
std
stos
cmp
je
lods
outsl
adc
mov
bound
push
gs
int
shlb
loop
cmp
push
lock
push
sbb
mov
push
in
add
mov
in
mov
es
xor
dec
imul
xchg
pop
test
push
push
pop
or
shrl
lea
jl
das
mov
cmp
or
imull
jecxz
fldt
jb
movsl
push
mov
jne
fstps
mov
jns
dec
xlat
add
mov
pop
xor
pop
movsb
push
jmp
xor
fadd
dec
loopne,pn
jg
cmp
push
add
push
or
popa
add
xchg
lret
pop
push
cmp
outsb
imul
idiv
fistpl
ss
cld
and
out
test
sbb
xchg
test
es
insb
cltd
mov
test
cmpsb
jns
sub
pop
pushf
mov
shrb
lret
cmp
daa
mov
push
cmp
sub
lahf
sub
scas
imul
xchg
add
loopne
mov
in
movsl
jo
push
jae
ljmp
cmpsb
loopne
xchg
sbb
mov
std
jnp
repnz
pop
cwtl
mov
sbb
sbb
xchg
and
cs
xchg
xchg
int
mov
or
icebp
mov
imul
inc
jb
mov
add
inc
xchg
dec
adc
and
xor
pop
cmpsb
inc
aad
push
pop
lock
ja
fwait
add
loope
movsb
scas
xchg
sti
cmovne
jecxz
inc
xchg
in
jno
mov
lret
hlt
ja
cs
aaa
push
ret
and
nop
sbb
aad
lods
movsb
xchg
adc
fsubl
add
cmc
jg
iret
xor
mov
addr16
mov
clc
or
mov
xchg
xchg
dec
push
add
jge
mov
dec
jmp
mov
dec
xlat
lods
jmp
push
je
cmpb
cmc
lret
into
jg
add
dec
add
cmp
idivl
repz
test
push
movsl
adc
andl
mov
mov
mov
jmp
pop
stos
lock
insl
mov
ret
rcll
ja
cmp
divl
outsl
mov
mov
in
xchg
loop
dec
mov
shll
mov
stos
je
push
mov
mov
lcall
or
mov
stc
xchg
sbb
ret
pushf
out
jge
pop
push
cmp
mov
rcr
lahf
push
cmp
or
jnp
mov
xor
add
outsb
cld
or
mov
and
cld
sahf
mov
orl
cmpsl
inc
popf
pop
insl
out
mov
push
push
sbb
mov
and
xchg
inc
push
lock
fcmovne
jb
js
aad
out
aam
in
cmp
aam
pop
and
cltd
or
out
dec
mov
filds
hlt
fildl
repnz
hlt
jo
cmp
test
repnz
cmp
or
sub
mov
or
clc
cmp
pop
jg
pop
popa
xchg
mov
jmp
mov
movsl
test
jp
lds
dec
mov
pop
mov
stos
shl
mov
xchg
rclb
push
push
mov
icebp
insb
or
or
dec
mov
cmp
lods
push
add
push
or
sbbl
dec
test
gs
ret
dec
adc
xor
xor
pop
sub
pushf
lret
sub
stos
add
out
je
push
jae
mov
icebp
icebp
fwait
bound
sbb
and
addr16
cmp
push
pop
jmp
addb
sub
mov
ss
cs
bound
shlb
cmpl
fisubrl
xor
push
repz
mov
push
sti
mov
or
hlt
and
gs
or
jnp
test
xchg
stos
pushf
test
and
fimull
mov
js
add
mov
subb
jmp
jmp
pop
add
fs
enter
fwait
idivl
dec
push
dec
sbb
lds
lods
dec
sbb
xchg
mov
jae
mov
mov
sbb
jg
arpl
cs
out
mov
lea
jno
mov
aas
das
pop
xchg
outsb
fs
xchg
pop
sub
mov
jg
notb
punpckhdq
jmp
in
mov
xor
inc
pop
pop
mov
mov
and
inc
lea
sbb
jb
push
xchg
mov
pop
xor
sub
mov
push
add
and
push
mov
int
leave
mov
mov
loope
cmp
mov
or
dec
out
push
and
out
sub
cmp
or
inc
mov
jns
cmp
test
cmc
insl
jne
cltd
fnstenv
loop
xor
push
adc
jmp
xchg
mov
add
int
xor
add
adc
mov
xorb
mov
fwait
fs
jp
mov
pop
movsb
sbb
bound
popf
sbb
xchg
lea
mov
repz
inc
cmp
inc
test
les
sub
in
push
sub
xchg
lods
es
loopne
loope
or
or
mov
dec
or
cmpsb
mov
sbb
xchg
dec
dec
call
rorb
inc
movsb
add
sbb
test
js
mov
clc
test
int3
and
add
mov
out
mov
jbe
aad
rol
imul
add
orl
insb
dec
lcall
pop
mov
xchg
mov
mov
sbb
fisttpl
je
push
rorb
xchg
xor
sahf
jmp
loope
inc
mov
sbb
add
iret
out
arpl
mov
sub
jl
or
sbb
cmpsl
xor
pop
xor
mov
les
cmc
pop
pop
sub
add
popa
out
mov
sbb
xchg
inc
sbb
push
sub
mov
or
mov
in
popf
jmp
js
lds
out
in
jb
ror
jmp
mov
fbld
movsb
mov
imul
clc
mov
and
xor
fs
pop
leave
into
hlt
nop
shrb
fs
sbb
or
inc
mov
out
out
cmp
add
ficomps
mov
pop
pop
push
test
pop
sub
movsl
sahf
dec
sub
adc
into
into
cmp
insb
imul
popa
dec
mov
sub
mov
into
xchg
andl
jge
fiaddl
mov
aam
xchg
aaa
and
xchg
icebp
mov
mov
dec
mov
out
inc
mov
hlt
shl
lods
xor
shrb
jnp
iret
jl
add
shlb
mov
mov
jl
int
aas
jg
rolb
fistpll
fcmove
ljmp
inc
cmpsl
sbb
mov
stos
sbb
aad
push
loope
and
enter
cmpsb
inc
aad
es
sub
xchg
inc
dec
stos
stos
push
pop
mov
testl
jecxz
xor
jecxz
cmp
jb
in
cmp
lods
dec
cmc
ljmp
xchg
jo
packssdw
roll
sti
mov
pop
aad
dec
je
notb
loope
mov
les
adc
outsl
lret
decb
lahf
sbb
aad
pop
test
rcl
adc
cltd
sbb
pop
popa
xor
jle
push
inc
rorb
popf
mov
cmc
negl
pusha
push
or
mov
lea
cld
cwtl
daa
adc
mov
and
sbb
mov
lahf
dec
dec
sbb
xor
push
add
lret
adc
inc
xchg
sbb
jns
and
mov
shll
ret
sahf
push
inc
fs
lea
pop
sahf
mov
jnp
dec
imul
dec
jg
popf
mov
add
and
ja
mov
lods
stc
loope
fldl
xchg
out
dec
jmp
xor
and
hlt
jl
popa
inc
mov
pop
out
dec
pop
mov
xor
js
mov
or
mov
pop
sahf
pop
fcomps
jp
test
push
icebp
ret
mov
sbb
add
rolb
fidivl
jae
jnp
sub
and
subb
dec
add
or
cltd
loop
and
and
andw
push
xlat
mov
mov
repnz
xor
fs
lods
bound
in
and
loop
adc
sub
xchg
inc
addr16
sub
sub
xchg
push
dec
add
mov
orl
push
test
scas
lea
test
cmpsl
cltd
stos
push
jl
sbb
cmp
pop
das
pop
ficomps
lods
sub
pop
das
jl
rol
dec
jmp
movsb
out
jp
enter
cmpsl
scas
cmp
adc
call
scas
addb
mov
stos
jp
jns
imul
dec
fsts
test
jb
out
xchg
in
cmp
std
jo
mov
cmp
clc
aad
stos
lahf
mov
sbbl
in
mov
les
jle
dec
sub
fisubrl
xchg
scas
sub
xchg
icebp
mov
mov
lahf
adc
inc
loope
dec
test
std
mov
xorl
mov
jae
adc
pop
and
cmpsl
je
imul
fisubrl
push
push
fisubrs
mov
js
xor
adc
inc
lcall
out
jg
or
xor
sahf
ficoms
aad
sti
pop
pop
loop
pop
stos
mov
adcb
lea
jecxz
xchg
inc
jae
clc
movsb
ret
ds
subl
push
mov
and
jmp
sbbb
push
dec
addb
gs
nop
jo
xor
cmp
adc
insb
andb
jl
loope
jecxz
in
xor
lahf
mov
mov
push
jg
mov
std
add
jnp
scas
rcl
inc
imul
hlt
xchg
add
sub
or
cmp
push
push
pop
out
cmpsl
adc
mov
mov
inc
pop
mov
xchg
rclb
pop
mov
pop
clc
push
stos
mov
dec
lret
mov
xchg
adc
stos
sbb
mov
sub
fcmovu
lret
fucomi
inc
jp
into
add
adc
push
jmp
test
sub
enter
cs
sbb
stos
mov
stc
mov
sbb
rcrl
cmp
addr16
iret
cmpsb
mov
add
outsb
xchg
or
hlt
mov
dec
or
out
ret
movsl
jb
clc
and
jl
inc
sbb
adc
and
dec
fucom
mov
jbe
xor
div
int3
jno
mov
and
jne
mov
ja
push
dec
and
inc
mov
aaa
outsl
push
dec
inc
scas
or
mov
test
adc
stos
sahf
inc
icebp
ror
pop
ret
pop
cltd
pop
dec
hlt
testb
mov
mov
fwait
jmp
jle
call
out
imul
push
push
loopne
mov
stos
and
pop
or
icebp
xor
test
mov
sub
sbb
sbb
jmp
aaa
es
shlb
mov
or
mov
jbe
xor
xchg
inc
pusha
mov
lds
loopne
loope,pt
cmp
ljmp
in
mov
outsb
mov
repz
inc
dec
xlat
xor
inc
dec
cmpsb
inc
add
scas
lds
sub
jb
xchg
mov
mov
pop
inc
xchg
push
push
xchg
ret
fs
xor
roll
cmc
mov
shlb
test
mov
dec
js
mov
aad
mov
mov
sub
andb
out
jg
out
sub
scas
jnp
popf
xor
or
call
repnz
inc
mov
add
or
sti
insb
mov
outsb
outsl
push
mov
sub
adc
fimull
sub
in
jge
mov
fs
jg
ljmp
cmp
and
sub
in
mov
daa
jae
stos
shl
mov
jle
push
jecxz
es
push
jne
rcpps
bt
or
outsb
nop
outsb
push
jecxz
lcall
imul
mov
and
icebp
xchg
pop
insb
sbb
mov
nop
mov
mov
out
or
dec
dec
jno
stos
cmp
sbb
test
adcb
push
or
pop
dec
pop
push
pusha
sti
popl
ficompl
ret
jb
push
jl
sub
pop
sbb
lcall
pop
repnz
lods
scas
leave
jmp
mov
fildll
adc
rolb
ljmp
push
aas
dec
jle
loope
xor
orl
aas
cmp
mov
out
pop
pop
sar
adc
jge
and
xor
stos
pop
mov
lahf
daa
dec
icebp
fbstp
pop
int3
aas
xchg
xor
jo
add
push
or
sbbl
inc
push
adc
xor
in
xchg
mov
xor
pop
xchg
mov
sbb
xchg
pop
and
mov
add
aad
lods
jae
mov
data16
xor
imul
pop
or
ret
loop
sbb
add
repnz
sub
leave
rclb
xchg
out
xchg
inc
dec
push
into
arpl
es
cmpsb
shrb
icebp
push
loopne
mov
sbb
push
sub
shl
pop
cmpsl
mov
or
les
adc
fldenv
push
lahf
push
addr16
mov
leave
add
dec
jle
adc
pop
push
sub
inc
mov
sbb
fstpt
cs
add
jnp
orb
xchg
ds
std
shr
jl
push
sub
int3
testl
mov
fwait
and
xor
fwait
jno
js
fldenv
scas
fdivl
cli
adc
jle
aas
iret
mov
push
mov
sub
and
imul
addr16
push
js
lods
mov
aas
cmp
xor
xchg
mov
idivb
mov
push
scas
and
lret
cmp
sub
jno
xor
push
cmpsl
pop
lods
shll
iret
jae
lock
lock
adc
sbb
xor
es
xchg
mov
adc
stc
mov
jmp
std
outsb
in
ja
push
out
xor
int
mov
mov
out
das
dec
push
push
neg
cmp
mov
sub
or
int3
add
jbe
nop
mov
cmc
xor
mov
and
fistl
lret
mov
push
mov
mov
mov
mov
fmull
sub
push
sbb
inc
hlt
xlat
data16
pop
mov
enter
movsb
das
aas
and
mov
inc
notb
mov
clc
cmp
ljmp
dec
sub
pusha
lock
sti
bound
test
xor
pop
xchg
loope
fs
pop
fs
test
add
or
lds
sbb
push
cmp
fstl
les
pop
mov
orl
sti
sub
aam
or
dec
mov
jb
push
or
jb
jae
push
iret
cld
xor
or
and
ss
cmp
fisubrl
inc
or
push
xchg
inc
sbb
cmpsl
push
mov
pop
clc
outsb
or
rcl
and
mov
jb
sbb
jg
xchg
popf
ja
lret
mov
fchs
inc
fstpl
es
or
jg
cmp
or
mov
dec
cmc
mov
hlt
scas
das
sbb
or
jg
imul
pop
pop
cmp
xchg
out
stmxcsr
int
outsb
sbb
fdivs
test
and
movsb
stc
addr16
ss
cmc
fs
sbb
sbb
fcmovbe
gs
ror
mov
dec
mov
hlt
es
sub
pop
js
mov
call
pop
in
fildll
pop
adc
and
or
insb
jecxz
outsb
sahf
out
lahf
mov
fwait
mov
xchg
mov
xor
dec
sub
out
call
cmp
pop
add
mov
xor
repz
jne
dec
sbb
aaa
test
pmaddwd
mov
arpl
rclb
add
inc
movsb
pop
lods
mov
nop
jge
mov
jle
hlt
je
popf
std
or
push
push
outsb
in
std
popf
addr16
popf
enter
cmp
jbe
mov
mov
cli
adc
dec
loop
fwait
mov
inc
add
insl
dec
mov
or
inc
aaa
or
jne
outsl
jb
insb
mov
data16
sbb
in
out
inc
push
xor
xchg
sahf
jmp
ret
fisubrs
ss
stos
outsb
arpl
popf
adc
cwtl
mov
xchg
cmp
or
sbb
dec
out
jns
repnz
js
das
xchg
cwtl
xor
cmp
push
or
outsb
and
mov
lret
lds
jne
xor
sbb
pop
sahf
mov
jge
dec
repnz
out
rorl
mov
xchg
hlt
mov
pop
sbb
cmp
sbb
pop
and
adc
sbb
out
sahf
enter
mov
pop
and
mov
jb
sarl
lcall
les
cmpsb
mov
cmpsl
stos
mov
xor
add
or
mov
xchg
cwtl
cmpsb
sub
jnp
adc
int3
insl
stc
inc
and
inc
xchg
dec
js
andl
in
jns
add
cmp
in
ss
lcall
sahf
add
jle
pop
mov
push
mov
dec
scas
dec
inc
cs
and
movsl
lcall
push
daa
cmp
loop
push
inc
div
jle
mov
data16
lock
pop
mov
lcall
mov
stos
xchg
pop
inc
pushf
aam
mov
jns
in
clc
faddl
icebp
add
ds
loopne
inc
stos
sbb
insb
hlt
faddl
mov
cmp
sub
xchg
imul
mov
iret
jnp
popa
arpl
sti
ja
test
frstor
pop
xchg
jge
loopne
ja
cmpb
adc
cwtl
or
test
pushf
mov
xor
xchg
and
dec
test
inc
aad
inc
xchg
cmp
test
aam
push
cmp
sub
push
js
pop
popa
add
aam
push
inc
dec
ss
xor
test
cmp
and
aaa
mov
repnz
fucomp
xchg
shl
hlt
jo
fisttpl
jmp
xchg
rolb
push
push
xchg
jne
dec
mov
push
jmp
sub
push
fadds
arpl
mov
push
push
or
sti
and
punpckhwd
or
jl
jns
push
push
mov
xor
mov
lods
adc
mov
aad
jle
jmp
adc
sti
dec
imul
xchg
add
lret
and
sbb
rcll
je
ljmp
setns
int3
mov
fsubrs
dec
sub
mov
mov
dec
push
in
pop
or
sub
stc
mov
es
mov
inc
icebp
cmpb
mov
cmp
xchg
cmp
negl
call
or
mov
jb
das
in
idivb
jnp
dec
das
adc
or
mov
pop
dec
scas
xchg
call
and
test
mov
cmpsb
cmp
int3
jbe
das
cltd
dec
jecxz
jb
xchg
jmp
cmp
mov
scas
or
std
test
and
push
add
rcll
fs
jo
int3
cmp
call
xor
cmp
mov
mov
cmp
or
pop
in
cs
inc
cmp
and
sub
dec
jo
jmp
cmpsb
xor
sbb
imul
adc
or
sub
repz
arpl
adc
sti
sub
push
mov
jne
ficoml
das
movsb
je
pop
xchg
cmp
loope
fs
sub
and
lcall
lea
insl
lret
jecxz
dec
fimull
imul
sbb
xor
sub
roll
xor
xlat
jo
xchg
push
cmp
jbe
jecxz
mov
lods
inc
loopnew
sub
ja
lea
pop
and
sti
ds
mov
rcrb
sub
fisubrl
sbb
lahf
xor
mov
pop
mov
divl
mov
fs
in
out
push
add
adc
fwait
or
xchg
mov
daa
fdivs
mov
pextrw
sbb
push
xor
pop
ljmp
sahf
stos
jne
gs
fwait
nop
dec
mov
gs
bnd
mov
test
pop
inc
jo
daa
addl
scas
and
jo
clc
lret
in
cli
mov
add
lret
jmp
dec
mov
push
jecxz
jno
lea
rclb
sub
and
arpl
mov
or
jecxz
ja
cli
popl
xchg
lret
imul
int3
ss
hlt
dec
scas
or
add
mov
fldt
test
xorb
test
sub
cwtl
inc
pop
push
cmp
cli
dec
jae
and
aaa
nop
and
imul
cmpsb
mov
push
pop
ret
mov
xor
test
sub
xor
out
mov
loop
mov
sub
and
inc
inc
sahf
pop
in
lcall
mov
iret
push
sbb
aas
xor
lds
mov
cmpsl
das
fwait
pop
loopne
mov
cli
adc
jne
mov
push
cltd
add
mov
add
je
mov
jae
cmp
cld
or
add
ret
loop
or
shll
insb
sub
inc
outsb
je
shl
xchg
add
xchg
fcmovne
into
or
inc
xor
push
mov
fsub
fs
mov
and
sub
push
cld
mov
ret
sub
subl
scas
lods
mov
jl
test
out
out
add
call
lcall
flds
or
or
into
sbb
andb
pushl
loop
ja
xchg
sbb
into
loopne
mov
push
mov
xchg
sub
and
out
jbe
push
mov
negb
mov
out
cmp
out
pop
test
or
subb
loope
jne
inc
out
cmp
mov
jg
mov
mov
sub
xor
cmpsl
movsb
clc
pop
sub
xlat
lret
push
repnz
orb
dec
mov
aas
mov
sub
dec
aad
in
imul
jbe
push
js
call
test
adc
in
sahf
dec
push
xchg
xor
fnsave
js
leave
mov
mov
xchg
dec
rcll
or
fbld
and
lret
cmpsb
sbb
jl
cs
movb
sbb
mov
xchg
rclb
in
xlat
pop
mov
enter
sti
push
pop
mov
clc
sub
xor
mov
cld
ja
not
mov
cmpsb
pushf
sahf
xchg
and
test
std
test
hlt
push
cmp
or
push
and
lretw
dec
mov
mov
rclb
pop
xchg
rorl
popf
lahf
mov
insl
inc
xor
mov
jmp
push
mov
jne
leave
inc
and
adc
adc
inc
fwait
dec
add
into
push
dec
pop
test
pop
insb
mov
push
sub
stc
test
mov
inc
out
sbb
mov
pop
and
lcall
add
and
pop
inc
xchg
loopne
dec
sahf
jae
ljmp
shrb
add
loop
pop
sub
out
scas
mov
jmp
jp
sub
cmpsl
mov
iret
pushf
sbb
insl
mov
mov
mov
cli
inc
imul
lods
or
mov
aam
fnop
enter
das
add
into
push
xchg
jb
push
sub
decb
pop
adc
cmp
cmp
bound
jnp
push
mov
and
or
jg
addr16
mov
ret
xlat
lcall
stos
adc
jne
int3
pushf
jns
sub
dec
loope
inc
call
out
pop
movb
cs
push
rol
pop
mov
scas
add
movb
mov
test
loop
fnstcw
xchg
mov
push
mov
mov
cld
das
or
dec
stos
lds
lret
pushf
sub
dec
imul
pop
xlat
scas
mov
mov
sub
fs
xor
sub
pop
fldt
or
add
scas
lcall
xor
adc
and
and
cmp
cmp
ret
inc
flds
fnstsw
xorb
cs
out
mov
lcall
sbbb
pop
xchg
jnp
lret
lcall
sub
rep
pop
pop
push
push
fs
mov
push
pop
mov
rcrb
adc
xchg
mov
addb
sahf
dec
lret
lods
sbb
stos
pop
pop
adc
mov
sub
lahf
or
lock
cmp
jle
cmpsl
adc
and
adc
xchg
sub
sbb
xchg
dec
inc
sahf
std
adc
andb
push
rcl
xchg
int
ror
shl
jns
fmuls
and
mov
das
xchg
stos
mov
out
in
xchg
ficoml
xor
sub
repnz
cwtl
in
push
insl
sbb
sub
xchg
cmc
aad
jecxz
sbb
adc
push
pushf
popf
test
jp
pusha
movsb
cmc
js
fcompl
ficoms
int3
mov
jbe
test
lcall
jg
sti
add
xchg
mov
mov
mov
push
scas
call
xlat
es
into
inc
andb
mov
loope
shll
push
mov
mov
fbld
out
jge
stos
push
lods
adc
insb
cmp
mulb
adc
idiv
fidivrs
ret
fisttpll
es
pop
fucom
repz
jmp
lcall
cmp
jns
shll
jae
cmp
jmp
dec
outsb
push
ja
lret
cmp
dec
rcrl
lock
hlt
inc
fwait
js
lret
xchg
adc
push
jecxz
xchg
int3
mov
adcb
pushf
ss
xchg
cmp
ds
sbb
dec
and
push
cmpsl
dec
mov
outsb
ja
gs
mov
xor
or
adc
and
inc
test
cmpsb
and
imul
movsb
sub
mov
negb
mov
cld
addb
cltd
gs
outsl
mov
inc
fwait
cmp
xor
mov
in
in
jnp
fmulp
cmpb
adcl
std
out
lahf
xchg
push
loopne
out
mov
int3
push
inc
aaa
repz
mov
inc
push
fmul
rol
xor
fs
int3
push
std
int
xchg
ret
pusha
adc
lods
xchg
xorb
push
xlat
inc
sub
ljmp
shrl
in
pop
push
mov
jns
test
incb
sahf
cmc
add
in
outsl
inc
stos
hlt
mov
cmpsl
stos
mov
sbb
jp
sbb
mov
mov
sbbb
add
mov
and
aas
push
add
test
pop
stos
hlt
mov
xchg
jg
call
popf
test
pop
pop
test
sbb
lcall
addr16
pop
rorl
gs
adc
and
mov
dec
jmp
push
adc
sbb
or
ss
xchg
or
out
jae
push
mov
decl
ret
add
je
pop
mov
jae
inc
or
pop
test
xchg
jae
movsb
xchg
and
sbb
inc
fisttps
pop
jo,pn
sar
xor
or
mov
fnstcw
fisubs
dec
or
jbe
inc
aaa
xchg
stc
lock
adc
icebp
loopne
xor
sub
nop
gs
and
mov
dec
sbb
bnd
xchg
lcall
add
pop
xchg
mov
in
mov
into
or
dec
mov
mov
jle
mov
push
gs
or
dec
ss
mov
ss
scas
stos
pusha
test
std
push
jnp
mov
push
mov
adc
das
fnsave
sub
jb
rorl
mov
insb
mov
rorl
fdiv
mulb
ss
fmull
mov
pop
xchg
sbb
int
and
enter
mov
mov
dec
nop
xchg
jle
out
cmp
push
pop
push
adc
mov
dec
mov
push
push
roll
inc
es
jp
scas
pop
or
xchg
loopne
imull
xlat
pop
add
mov
lock
inc
xlat
das
push
popa
pop
fwait
jmp
or
ljmp
iret
xor
inc
mov
pop
or
fdivl
dec
cmpsb
or
inc
mov
inc
sub
aad
adc
dec
repz
adc
pop
je
pop
fs
adc
sti
rcll
rcr
outsb
shrl
jl
mov
insl
xchg
dec
push
add
mov
dec
jns
jbe
ja
shlb
icebp
jg
je
push
adc
js
daa
xchg
dec
mov
lcall
adc
pop
jo
push
and
sbb
cmp
mov
mov
insb
xchg
in
pop
or
loopne
inc
sub
or
mov
xor
xchg
pop
popf
pop
cltd
daa
outsl
mov
add
out
cmp
sbb
daa
or
sbb
leave
out
in
or
cmp
adc
out
mov
adc
into
push
push
aad
test
push
push
or
dec
lret
notb
cmpsl
xor
or
pop
jg
or
sub
xor
pop
xor
testb
fs
lahf
aad
jo
lret
jae
cmc
stos
je
iret
mov
inc
xchg
ret
daa
inc
cmpsl
das
stos
ret
or
addr16
add
das
mov
aas
mov
clc
out
scas
mov
arpl
nop
xchg
out
add
jecxz
mov
mov
jno
stos
aad
xor
xchg
fistl
jl
dec
imul
jo
or
test
imul
fwait
jns
lret
aam
iret
cmpsb
popf
ret
mov
xchg
pop
cs
loopne
leave
jne
adc
pop
mov
cmp
addw
jg
cmp
dec
and
jb
sti
adc
popf
stos
test
xchg
sbbl
sahf
lds
rorl
push
mov
pop
push
push
stc
addb
sub
add
pushf
push
daa
mov
sbb
cmc
call
gs
xchg
pusha
jp
cld
iret
ficoml
fisubrs
or
fdiv
enter
nop
dec
xchg
pop
lods
loopne
mov
outsb
adc
mov
cmp
int
out
test
rorb
in
push
addl
ret
into
fwait
jns
fsubs
add
xchg
les
testb
lea
inc
pop
jl
push
xor
lods
pop
out
jnp
cmc
xchg
push
fstl
stc
sbb
push
insb
lcall
cmp
mov
aam
sbb
jno
fstl
add
cli
ret
loope
cmpsl
jg
enter
bound
cld
stc
or
pop
cwtl
jb
rolb
test
adc
mov
test
scas
pop
repnz
loopne
loop
xor
loope
mov
mov
iret
jne
cli
test
and
mov
fistps
addr16
lock
lret
pusha
loope
test
mov
pop
cmp
add
stos
inc
or
sti
cwtl
jl
ret
push
mov
inc
cld
loop
and
adc
sub
lahf
cmp
and
clc
aam
xor
or
jnp
es
stc
fsubrl
icebp
mov
push
mov
inc
scas
jb
fs
scas
cmpb
insb
mov
int
ss
orl
adc
push
idivb
mov
inc
dec
ret
dec
cli
pop
inc
pop
pop
cmpsb
or
fs
jns
mov
insb
pop
scas
arpl
fists
mov
add
fdivrp
push
aad
mov
xor
xchg
cmp
pand
xchg
jge
gs
bound
push
ss
enter
stos
mov
push
mov
jo
dec
pop
in
data16
lret
dec
push
into
xchg
xor
sub
dec
xor
sbb
sub
ret
sbbl
inc
push
out
fidivs
mov
push
mov
cmp
and
mov
add
stos
sbb
push
push
gs
aaa
push
popl
imul
aaa
add
les
fdivrs
sbb
ds
mov
mov
fmuls
mov
pushf
sbb
stc
inc
mov
popa
lretw
jle
sub
sub
shl
addr16
sub
stos
lcall
pop
mov
ja
divb
push
popa
pop
out
or
xchg
cmp
sbb
inc
lods
loopne
push
dec
push
sahf
cltd
push
cmpsl
mov
cmc
iret
mov
push
or
leave
adc
lahf
iret
sbb
push
insb
mov
repnz
cwtl
mov
imul
add
xchg
mov
ret
repnz
popa
inc
fnsave
out
mov
push
and
mov
xchg
xchg
lods
rcl
test
mov
xorl
sbb
sub
push
es
aam
jne
aas
loopne
xchg
xchg
jb
in
int
sarl
xchg
inc
outsl
pushf
mov
lret
adc
adc
xchg
fmul
pop
mov
ja
mov
mov
xor
cmp
inc
push
fbld
add
push
pop
les
jecxz
adc
xchg
sbb
or
jo
lods
mov
int
data16
arpl
fidivl
imul
sbbb
rolb
fbld
mov
or
fldcw
addl
mov
jg
fdiv
aaa
cmp
push
scas
push
inc
sti
pop
jmp
sbb
xor
dec
js
ja
das
sbb
je
int3
call
xlat
add
inc
cwtl
sub
xor
sbb
adc
sub
sbb
mov
cmp
lea
inc
jo
ret
imulb
push
jp
repnz
fstpt
xor
sbb
sahf
orb
jnp
or
mov
inc
fmull
fwait
mov
stos
xor
test
cltd
scas
mov
jmp
fdivs
pop
mov
je
out
jmp
ljmp
mov
flds
push
sbb
out
arpl
scas
or
ds
add
xor
js
repz
daa
idiv
fucomp
jmp
push
in
dec
cltd
imul
jno
sahf
mov
inc
jecxz
sub
out
mov
lods
mov
jmp
sub
fimuls
fwait
je
sbb
cmc
lods
insl
ljmp
sub
cmpsb
call
fstpt
mov
scas
nop
and
dec
pop
xchg
lret
mov
int3
push
or
sub
jns
fimull
cmp
aad
cs
and
movsb
dec
pop
lods
mov
mov
test
repnz
add
push
enter
hlt
and
and
cmp
sub
sbbb
femms
push
xchg
cmp
inc
or
sub
or
dec
icebp
dec
fisubrs
cmp
and
push
daa
mov
outsb
jno
mov
daa
jbe
add
and
adc
pop
inc
loope
loopne
icebp
jo
mulb
push
bound
cmp
aas
jp
outsb
scas
mov
fimuls
mov
lret
fadds
add
scas
outsb
repnz
jbe
scas
push
movb
pop
arpl
inc
test
ret
ds
insb
test
std
lahf
mov
fldenv
in
mov
mov
daa
nop
inc
or
fsubrs
add
pop
dec
inc
ds
testb
sub
inc
in
or
adc
push
pop
adc
mov
mov
sbb
add
inc
lods
scas
inc
sbb
enter
pop
xchg
mov
mov
mov
rclb
loope
add
push
pop
mov
pushf
pop
sbb
ljmp
push
adcb
and
pop
push
int3
in
inc
shrl
inc
push
xor
cmp
and
lret
xor
adc
psubusb
stc
mov
xchg
cmp
clc
rolb
or
cmp
fadds
imul
mov
orb
pop
mov
adc
cmp
stc
shlb
adc
push
cmp
enter
cmpsl
jmp
push
xor
push
aam
cmp
dec
cs
lods
aad
xchg
or
filds
sahf
popa
push
movsb
movsl
addr16
sti
or
dec
mov
test
push
es
aaa
data16
inc
daa
inc
in
movsl
or
adc
cmpsl
ljmp
cmc
test
cmp
seto
movsb
and
jl
scas
push
lret
divb
pop
inc
pop
xor
fucom
jns
cltd
data16
lret
dec
mov
scas
rcrb
popa
push
jbe
mov
mov
aad
or
jecxz
rorb
lock
out
lds
fidivrl
aad
cmpsb
mov
testl
dec
shrb
mov
cmp
outsl
ret
xchg
in
inc
mov
jbe
and
jle
mov
testb
insb
clc
jns
dec
xor
push
test
ja
loopne
aas
mov
mov
lret
lds
movsb
push
cmp
add
es
push
add
dec
sub
out
cli
mov
xor
aas
add
dec
shrb
sub
dec
stos
sarl
clc
push
xlat
andb
lcall
push
in
xchg
add
aad
pop
lahf
or
js
jmp
dec
adc
mov
hlt
and
push
ja
adc
jb
jo
mov
push
pop
mov
xchg
mov
dec
sbb
daa
call
mov
sbb
sbbb
or
dec
clc
and
je
dec
test
clc
dec
mov
dec
out
xchg
iret
jbe
lds
gs
call
pop
adc
mov
mov
ljmp
out
and
jl
jne
test
ljmp
ljmp
jle
or
fistpll
push
sbb
dec
sub
lods
inc
mov
pop
leave
fisttpl
bound
and
js
sbb
inc
adc
push
sti
xchg
sbb
xchg
mov
xor
mov
lret
pop
adc
clc
hlt
mov
das
cmpsb
mov
mov
fcoml
cs
jbe
clc
pop
dec
cmpsl
xchg
cmp
sub
mov
push
push
stc
or
pop
xchg
push
mov
dec
fnstsw
loope
repnz
rclb
repz
inc
shll
mov
shl
addr16
sbb
out
rclb
jl
xchg
andb
push
inc
subb
aam
addr16
dec
xor
lahf
dec
xor
add
push
movsl
sbb
ds
mov
jecxz
mov
and
mov
dec
and
inc
frstor
leave
add
aaa
fwait
ljmp
es
lcall
jmp
out
jb
call
int3
xor
or
mov
inc
repz
stc
fsubr
ret
icebp
mov
inc
fs
xor
or
add
mov
sub
in
cli
test
lret
inc
decb
jo
or
out
sbb
inc
mov
movsb
push
dec
xor
loop
hlt
aas
xlat
jns
data16
movsl
dec
fbld
sbb
jecxz
loop
data16
lock
push
xor
loopne
cltd
sub
lods
out
daa
sbb
into
hlt
jecxz
adc
cmp
pusha
inc
cli
jle
jne
xor
icebp
pop
fsubr
add
cmp
mov
xchg
push
or
inc
ret
imul
loopne
jp
dec
cmc
xor
sti
xchg
or
xchg
insb
mov
loop
ss
js
dec
std
out
inc
sbb
sbb
cli
leave
push
lahf
and
push
mov
pop
seto
cmp
aaa
daa
cwtl
std
pop
iret
adc
pusha
daa
lds
int
js
push
cld
les
cmp
push
leave
xchg
cwtl
rorl
sub
repnz
jae
or
push
leave
xor
xorl
inc
xor
pop
mov
mov
icebp
in
and
xor
lock
aad
mov
pop
arpl
call
xchg
into
mov
inc
inc
mov
cmp
orb
inc
into
or
push
repnz
cmp
push
andb
mov
xchg
les
stos
xor
lock
jmp
dec
fwait
test
lret
cmp
add
pusha
xlat
fisubl
in
jmp
nop
repnz
xchg
or
retw
sbb
and
jecxz
sbb
fstp
xor
outsb
add
dec
dec
or
xor
iret
rclb
adc
or
cmpsb
in
sbb
fsubs
mov
ljmp
adc
test
inc
push
push
cwtl
mov
and
jmp
iret
leave
sti
mov
jge
sub
jl
mov
rcrl
push
dec
out
cmp
imul
sbb
fnstenv
adc
es
rcrb
and
cmp
fdiv
xchg
jo
int
imul
adc
xor
xchg
popa
fstpt
mov
hlt
or
cmpsb
or
mov
cmp
or
dec
scas
mov
jne
out
loope
stos
jae
dec
dec
aas
fistpl
push
inc
xchg
test
jae
or
movsl
jp
stos
dec
or
mov
es
jmp
aad
loop
addr16
out
push
sub
pop
sbb
loopne
ficompl
out
jno
scas
add
jmp
sbb
dec
stos
pop
movsl
sahf
aam
rep
es
mov
mov
mov
or
imul
pop
jbe
sarl
hlt
push
adc
sub
es
or
mov
inc
icebp
inc
and
mov
xchg
jp
loope
dec
cmc
cmp
push
loopne
dec
cs
int
xchg
cmp
lret
cltd
into
lea
jno
incb
pushf
xor
inc
xor
sbb
xchg
popf
pop
sahf
mov
addl
sbb
cwtl
es
mov
xlat
sysexit
data16
mov
insl
xor
jae
push
mov
jp
sarl
xchg
mov
pop
push
lahf
repnz
mov
mov
mov
arpl
sti
dec
bnd
leave
mov
stos
or
pop
dec
sbb
int3
sub
lret
sbb
push
jo
daa
sti
sub
repz
push
push
lds
or
iret
outsl
xchg
cmc
jge
dec
call
mov
jp
jnp
ja
aam
mov
mov
push
xchg
xchg
scas
sub
ret
cmp
insl
mov
dec
jg
mov
fs
or
lret
cmp
lret
xchg
in
xchg
mov
test
or
int
mov
stos
mov
call
fsts
outsl
mov
loopne
std
mov
adc
fcoml
lret
lds
test
fcmovb
mov
nopl
mov
lahf
mov
das
jmp
mulb
lods
or
ds
addw
out
mov
sahf
call
out
push
inc
lret
icebp
cmpl
into
ret
ds
jp
mov
lahf
fdivrs
stos
or
fsubs
push
mov
push
or
lahf
lea
mov
test
pop
outsl
shll
push
dec
out
sbbl
sub
mov
inc
andl
out
mov
nop
xchg
dec
ds
hlt
dec
add
js
fmull
add
jnp
inc
ret
add
cmp
xchg
test
mov
and
fimuls
cltd
sti
rclb
testb
push
cltd
call
push
fchs
repnz
jle
std
mov
add
xchg
or
or
push
les
push
inc
push
dec
out
adc
push
jl
scas
cmpl
out
pop
xchg
cs
sbbb
cs
sbb
xor
daa
dec
or
mov
cmc
add
sbb
jecxz
stos
loope
dec
mov
inc
mov
outsl
adc
mov
add
divl
mov
call
jmp
sbb
imul
into
test
and
icebp
mov
outsl
stc
cmp
dec
mov
jmp
repnz
mov
cmpsb
xchg
repnz
push
push
sub
pop
push
addr16
ja
mov
xchg
loop
mov
adc
ret
sti
jae
add
jg
cmpsb
adc
andl
ficompl
adc
call
cmp
sub
arpl
inc
xchg
rclb
inc
xlat
fiadds
mov
shll
pop
cs
pop
jns
leave
sbb
jne
inc
dec
mov
movsl
jl
enter
daa
int3
xchg
mov
dec
adc
cmc
jp
popf
imul
and
mov
rclb
movsl
int
notb
mov
mov
addr16
inc
dec
clc
sbb
sti
lock
arpl
ss
dec
and
test
jbe
mov
mov
test
jg
xchg
and
push
sub
testb
and
aad
sbb
cmp
call
jg
add
cmp
adc
in
adc
xchg
sbb
out
out
stos
inc
mov
and
fdiv
pop
in
mov
pushl
or
loopne
stc
pop
push
lahf
es
scas
jp
cmpsl
insb
or
push
mov
ret
fcmovne
jno
and
dec
dec
mov
and
ja
add
and
mov
inc
pop
leave
jp
ret
ret
xchg
shrl
cmp
cmp
mov
shl
aas
or
add
jnp
daa
test
inc
lods
lods
adc
dec
fmulp
or
jb
pop
aad
js
xchg
repz
add
dec
jge
adc
imul
jbe
in
add
cld
dec
fnstsw
mov
jno
out
mov
dec
push
jae
je
mov
repnz
cmp
stc
ds
and
or
xor
out
int
push
sbb
sub
mov
or
xchg
add
xchg
lret
test
inc
jae
sub
mov
pushw
fwait
movsl
clc
addl
or
adc
add
inc
lcall
mov
adc
scas
pop
movsb
fcmovne
in
adc
lea
fnstcw
rorb
int3
insb
xchg
dec
outsl
repz
dec
add
neg
mov
fwait
stc
in
inc
fistpl
addl
sub
cmp
jmp
ljmp
sbb
andl
hlt
and
dec
pop
sub
adc
xchg
and
pop
adc
jp
icebp
movsb
pop
mov
mov
cmp
push
cmp
inc
add
sti
inc
ja
jne
stos
and
jecxz
fcoms
lret
outsb
fnsave
out
or
movsl
jne
mov
xchg
mov
or
and
rcrl
jl
imul
ja
xchg
cmpsb
cmp
cmp
mov
jge
pop
xchg
into
mov
loope
dec
enter
and
rorb
xor
lods
cmp
sbb
lds
std
cmpb
jo
mov
pop
xchg
xor
aas
push
xchg
popf
lcall
cmp
lods
jge
icebp
xchg
push
fs
xchg
mov
jns
mov
jp
jno
inc
mov
jl
adc
pusha
or
addb
jecxz
loop
call
outsl
aam
jle
call
ret
jmp
mov
xor
and
pop
sbb
pop
sbb
cltd
xor
mov
jbe
fwait
mov
or
stc
and
cmc
add
jecxz
rol
push
jmp
std
leave
enter
cltd
movsb
popa
or
loopne
cli
fistl
call
mov
mov
movsb
stc
add
ja
inc
call
hlt
or
movsl
inc
mov
adc
jne
mov
cli
arpl
mov
xchg
bswap
and
sbbb
xor
movsl
cwtl
repz
xor
push
iret
popf
les
adc
pop
mov
cmpsb
inc
sbb
leave
pop
ret
aam
jge
mov
mov
mov
mov
out
shr
xorl
movsb
imulb
jmp
in
jnp
and
add
pop
rclb
sub
aam
clc
inc
or
push
push
and
loopne
js
ret
lock
sbb
sbb
cmp
or
adc
cli
jle
mov
aaa
lock
inc
aam
movsb
push
mov
flds
inc
adcl
xor
xchg
and
dec
mov
lret
adc
imul
mov
xchg
sub
push
repnz
jmp
popl
xchg
dec
pusha
adc
ds
sub
jae
or
inc
pop
mov
jne
movsb
test
fcmovnb
mov
and
adc
popa
jle
cwtl
add
sarb
jno
inc
and
pop
jbe
and
cmp
adc
mov
mov
loope
js
loopne
mov
adc
adc
push
mov
std
fldt
mov
or
push
lahf
jge
cmp
aam
in
loop
shlb
cs
mov
mov
sbb
dec
cltd
mov
xchg
cld
add
xor
sub
mov
fnstenv
test
aas
xchg
leave
inc
push
shlb
lcall
cwtl
ret
test
cltd
jecxz
mov
cmc
xor
dec
addr16
shll
out
aam
cmp
fldl
jl
or
das
leave
push
lret
aad
shlb
fisubrl
or
dec
les
sub
lcall
lock
cwtl
jns
cmp
shll
cwtl
sbb
inc
aas
push
test
mov
stos
push
mov
pop
clc
outsb
mov
mov
adc
aas
cmp
int3
addr16
subl
iret
repnz
push
jb
aam
xchg
push
and
subl
jne
not
loopne
ss
jg
data16
dec
pop
dec
outsl
cmpsb
lods
mov
es
sbb
inc
sahf
rolb
push
xor
test
testb
pop
mov
and
mov
or
int
jb
sub
aas
outsb
ret
fwait
mov
cwtl
pop
xchg
pushf
fists
shlb
push
pop
fwait
scas
out
jae
fwait
ljmp
mov
pop
mov
sbb
into
xor
jle
aaa
add
or
flds
out
mov
jmp
push
pop
sbbl
test
test
inc
ljmp
fucomi
mov
clc
mov
fsts
fldenv
sahf
fbld
insl
dec
inc
shlb
ljmp
rcr
and
bound
sahf
popf
jg
nop
mov
jl
and
lods
out
jmp
or
data16
dec
pop
cmp
inc
sbb
frstor
arpl
mov
or
leave
cmp
inc
and
and
fwait
or
loope
push
and
ror
sub
add
xor
inc
arpl
jle,pt
mov
les
pop
cltd
dec
mov
in
adcb
int
dec
mov
pop
jg
cwtl
pop
idivl
jge
xlat
adc
push
jnp
mov
mov
dec
pand
leave
in
addb
cmp
andb
push
mov
jb
cmp
dec
push
cmp
insb
clc
testb
pop
push
push
mov
int3
inc
cmp
adc
dec
vpsubq
push
psubusb
jp
shr
not
mov
mov
subl
dec
jl
outsl
mov
inc
xor
int
test
lea
dec
pop
sub
xchg
mov
hlt
scas
jge
jbe
testl
xchg
or
xchg
test
in
addl
dec
sbb
fisubl
xchg
mov
out
popa
xchg
cld
xchg
sbb
mov
lahf
xor
xor
repnz
sub
testl
fidivs
add
data16
or
jo
stos
fldl
xchg
insb
test
shl
mov
stos
stc
dec
mov
iret
out
mov
ficomps
xchg
adcb
pop
sub
jmp
fsts
sbb
xor
mov
icebp
pusha
aam
mov
daa
push
rolb
inc
movsl
rolb
out
lods
mov
pushf
gs
scas
adcb
cltd
fstp
cwtl
inc
insb
ret
cwtl
pop
sbb
cli
stos
xchg
fucomp
pop
rcr
cmp
push
add
std
jns
in
add
das
inc
fs
add
xor
mov
jmp
inc
loop
ss
ja
leave
dec
mov
leave
push
pop
call
bnd
imul
sub
push
std
call
cmp
and
imul
pop
mov
jnp
fistl
add
sub
pop
mov
pop
jmp
dec
fsubrl
or
mov
mov
jl
je
cld
sub
jl
add
out
xchg
add
pop
or
shll
in
call
testl
dec
mov
cmp
inc
loopne
mov
lret
or
push
or
dec
cwtl
pusha
cli
cmp
xchg
shll
or
inc
push
mov
pop
cli
cmpsl
fstps
xchg
push
adc
mov
data16
mov
les
mov
arpl
cmp
scas
popa
sbb
rcr
mov
aam
outsb
sub
clc
dec
sub
xchg
inc
or
lods
insl
gs
cmc
test
sub
pop
movb
je
cld
arpl
addr16
insb
push
or
pop
sbb
sub
stos
xor
xchg
out
add
mov
sub
jecxz
aad
mov
popf
fldcw
ja
mov
pop
mov
fcompl
xchg
fst
lds
cmovge
sarb
push
js
aas
lods
xchg
das
dec
dec
ret
popf
jne
fucomp
or
jb
jmp
cmp
sbb
es
xchg
pop
das
icebp
scas
popf
dec
stos
lods
cmp
fcoms
push
mov
xor
lods
xchg
dec
push
push
dec
or
xor
adc
sbb
xor
mov
jbe
decb
push
mov
scas
jmp
mov
es
jecxz
cwtl
sahf
push
fimuls
das
sbb
or
push
push
sarb
jle
push
shll
bound
in
out
out
inc
addb
or
pop
ljmp
xchg
mov
sub
fdivl
pusha
jmp
cmp
lcall
mov
mov
mov
pop
xchg
sti
pushf
pop
xchg
ljmp
enter
mov
outsb
leave
xchg
aam
cmpsb
pop
push
inc
lahf
mov
push
mov
insb
xchg
add
pop
out
fimuls
dec
pushf
in
rolb
add
adc
inc
push
inc
es
fldenv
stc
pop
into
iret
mov
rcrb
and
jg
mov
arpl
pop
dec
mov
popf
sti
add
add
sub
and
pusha
call
pop
out
xchg
sub
jnp
sub
dec
mov
je
cmp
cmpsl
icebp
lret
push
loop
insb
fs
mov
std
add
out
scas
lods
xchg
in
cwtl
fstpl
mov
mov
jbe
repz
push
mov
ret
mov
scas
or
pop
scas
clc
push
add
adc
ja
sub
xchg
mov
or
push
std
dec
adc
mov
ret
mov
iret
pop
cld
loop
test
push
xchg
inc
insl
xchg
je
push
push
popa
inc
mov
push
not
xchg
aam
test
xchg
outsl
cmp
jl
adc
pop
and
popf
dec
or
xchg
std
or
je
repz
mov
inc
add
repz
sar
jmp
xchg
pusha
mov
shrb
pop
cltd
testb
mov
std
imul
fdivrp
pushf
sub
xor
insb
int
aaa
insl
stos
inc
stos
psubq
std
xchg
dec
push
rcrb
lcall
ds
rorl
jns
pop
das
arpl
int3
fs
test
repnz
data16
pop
out
inc
inc
shl
xor
je
ret
xchg
mov
push
jp
push
add
mov
adc
sbb
gs
mov
call
add
out
jg
mov
or
sub
popf
xchg
or
push
mov
inc
into
loopne
push
dec
adc
and
stos
outsl
and
jb
sbb
insl
mov
fidivl
in
mov
pop
fs
dec
insb
push
or
cmp
mov
ljmp
jmp
int
add
inc
in
adcb
scas
aas
fcomi
cmp
sbb
sub
or
sub
push
xchg
or
sub
shll
out
sarb
cmp
iret
adc
jl
push
aas
ret
push
sbb
xor
mov
idivb
dec
jmp
mov
adc
xchg
dec
fdivs
in
loope
out
adc
into
stos
pop
imul
inc
cmp
inc
adc
dec
repnz
pop
add
xlat
daa
addb
dec
push
pop
popa
or
lret
or
jno
orl
or
jmp
cmpl
ds
loop
test
mov
cmp
mov
loopne
iret
mov
sbb
loopne
pusha
jb
pop
mov
sbb
outsl
orl
cmp
sub
nop
adc
add
fs
pop
mov
fcomps
mov
roll
psubd
and
and
push
jmp
pop
pop
call
add
add
push
popl
shr
mov
mov
mov
out
sahf
dec
imul
es
xor
adcl
fstpt
and
xor
out
mov
inc
shlb
mov
mov
adc
push
dec
dec
dec
pop
neg
ret
dec
mov
lcall
pusha
adc
ja
out
xor
xchg
adc
std
lods
into
mov
mov
aam
clc
into
jecxz
hlt
shrl
pop
pop
fldenv
jmp
ss
xor
gs
sti
jl
adc
mov
fld
sbb
in
mov
cmp
lcall
js
dec
mov
xchg
leave
lahf
lds
push
jb
sbb
or
or
dec
push
dec
or
dec
and
int
shr
icebp
mov
scas
mov
mov
loop
pusha
notl
in
or
mov
popf
push
pop
adc
mov
inc
fstpl
or
jae
ja
sub
inc
xchg
repz
inc
cli
dec
lahf
mov
ret
sub
idivb
fldcw
xor
call
jecxz
and
jge
push
and
xchg
sti
out
std
push
and
lret
push
popf
or
int
push
add
mov
add
adc
sbb
jo
fstl
adc
test
out
mov
sbb
popa
add
add
dec
ss
frstor
add
xor
es
cwtl
into
fsts
pop
mov
pop
stos
mov
ljmp
push
int3
pop
adc
add
daa
push
out
add
stc
push
jmp
fsubrs
jle
insb
ret
cwtl
xchg
mov
and
pop
inc
xor
cs
bound
lcall
xchg
pop
mov
cmp
push
cmp
xor
notl
xor
sbb
nop
jg
imul
test
movsl
or
in
sahf
mov
sbb
add
inc
out
out
cmp
push
cmpsb
xchg
fistpll
cs
vmovhps
aas
xchg
std
dec
xchg
out
mov
mov
pop
shlb
out
divl
cmp
mov
push
mov
and
outsl
fdivrs
jne
insb
lds
test
pop
mov
adc
mov
in
jae
pushf
and
cltd
mov
jmp
lock
insl
sbb
add
je
pusha
sub
cli
adc
movsb
push
add
sahf
sub
imul
sub
xor
filds
lcall
or
cmp
test
jbe
in
mov
or
pushf
test
pop
mov
mov
sbb
shll
test
out
into
les
mov
or
jecxz
sahf
mov
ljmp
div
std
dec
jns
jge
ja
push
mov
mov
mov
ds
aaa
mov
mov
insl
adc
lcall
push
dec
imul
and
dec
xchg
stos
push
ds
jnp
ss
push
outsb
jle
push
rolb
insl
push
mov
int
decl
addr16
pop
aad
push
xchg
ror
cs
js
pop
sbb
mov
outsl
cmp
fidivrl
push
or
add
das
mov
or
jno
mov
push
add
js
into
or
movsb
sti
xor
cli
in
hlt
pop
sarb
repz
add
cmpsb
dec
sbb
nop
lds
ja
daa
xchg
or
subl
lods
mov
pop
and
sahf
fs
aas
inc
aaa
mov
cmc
fcmove
jnp
sbb
sbb
test
insb
and
inc
popa
test
or
lea
mov
inc
js
mov
bound
and
aas
inc
jbe
loope
or
lods
mov
add
cmp
push
pop
dec
inc
mov
push
mov
dec
stos
into
cld
push
xor
jno
xchg
sub
or
repnz
mov
pop
stos
pop
shrb
xchg
int
or
cmp
xchg
adc
sbb
popa
test
faddl
je
cmp
das
popf
not
xchg
pop
ficoms
push
aad
jnp
mov
adc
mov
std
shlb
jbe
jb
push
jge
or
ret
inc
out
jg
sbb
scas
nop
sahf
test
nop
xor
aaa
add
imul
xchg
pop
inc
xor
das
add
movsb
scas
sbb
dec
push
sar
dec
and
and
mov
sub
cld
cmp
push
je
push
outsl
ja
or
mov
pop
jns
and
fdivrs
jle
xchg
arpl
ret
mov
into
iret
sub
sbb
pop
xchg
pop
sahf
lret
mov
cli
xchg
cmpsb
pop
jno
data16
outsb
mov
bound
jmp
adc
sbb
aaa
loop
dec
xchg
cmp
std
fbstp
sahf
sub
addr16
test
idivl
pushf
testl
into
pop
pop
sub
rcr
sub
popa
and
xchg
in
jp
pushf
jne
out
cltd
jns
dec
rolb
popf
outsb
ljmp
rcl
cwtl
add
pop
xchg
jge
movsb
mov
cmovae
pop
cmpsb
loop
mov
pop
or
pop
mov
xchg
ja
mov
in
mov
mov
push
pushf
adc
fstpl
dec
push
fildll
adcl
pop
add
ss
cmpsl
mov
or
jle
xor
addb
repz
or
cmp
ds
data16
mov
push
inc
pushf
ljmp
ljmp
pop
clc
fbstp
pop
ja
pop
orl
fs
sub
shl
sti
dec
sti
mov
xchg
test
in
jl
scas
cmc
dec
outsl
dec
jge
loope
inc
cmc
nop
sahf
adc
mov
stos
xor
dec
lret
data16
test
push
adc
lret
in
inc
push
cmp
outsb
cmp
inc
faddl
or
pop
repz
daa
mov
xor
jnp
mov
loop
js
xchg
mov
adc
rorl
bound
mov
adc
push
cmp
addr16
fwait
subl
adc
test
dec
mov
sbb
cwtl
or
or
rolb
dec
leave
cwtl
lods
sbb
mov
dec
inc
jg
mov
aaa
ret
or
sbb
xchg
in
or
scas
sarb
add
xorl
cmp
aaa
aas
adc
sbb
push
test
scas
sbb
shll
sbb
mov
dec
cli
loopne
cmp
insb
lea
jns
add
pop
add
xchg
jb
testb
into
insl
cmp
ds
loop
mov
jns
cli
out
and
mov
lcall
stc
mov
pusha
mov
imul
icebp
lods
in
test
xor
mov
sub
sarl
cmp
aas
mov
sahf
sbb
xor
dec
push
mov
int3
out
inc
push
cvtpi2ps
fstpt
mov
orl
push
or
xor
dec
fistl
mov
mov
pusha
push
sbb
int
movsl
mov
adc
mov
push
cmpsb
insb
pushf
jne
movsl
dec
cmpl
into
je
enter
mov
xor
out
pop
xchg
inc
dec
cmp
adc
jecxz
aad
int3
add
stos
int3
cmp
cld
cs
push
inc
sub
xorb
outsb
mov
stc
orb
fists
in
sahf
shrl
push
sbb
bound
enter
and
outsl
movsl
fsts
and
jo
ss
stos
sub
add
out
adc
and
xchg
xchg
das
dec
jp
jbe
sub
test
arpl
inc
roll
hlt
jle
xor
mov
xchg
mov
inc
push
imul
mov
xor
cmp
jbe
and
scas
pop
sub
jo
lods
inc
pop
pop
cmpsb
ret
adc
mov
sbb
in
mov
mov
shrl
xchg
cmp
int3
aad
mov
inc
mov
mov
jno
dec
notl
inc
sub
ljmp
cmp
bound
pop
xchg
add
lea
jo
cmpl
xor
mov
sub
jg
arpl
push
ds
dec
mov
xchg
fldl
cmp
sub
xchg
push
popf
imul
loope
fsubl
cmp
dec
sbb
adc
rorl
cwtl
aam
outsl
sbb
sbb
dec
xchg
cmpl
xor
jb
ret
pop
pop
add
sbb
lds
dec
cmp
mov
pop
aaa
cmp
mov
xchg
dec
aam
sub
bound
fdivr
fidivrs
das
xlat
ja
xchg
push
jg
xor
out
arpl
insb
es
jnp
loop
adc
jae
adc
cmp
jmp
movsl
jp
mov
in
loope
out
enter
push
repnz
add
inc
mov
and
iret
push
ror
sbb
adcb
rol
cmpsb
test
fisttpl
push
js
cmpsl
sbb
pop
jo
ljmp
push
mov
out
int3
imul
or
or
jmp
adc
push
aam
clc
icebp
aam
inc
out
inc
adc
jb
es
adc
pop
rorb
sub
add
pop
jbe
add
int3
std
cmp
ss
mov
enter
sbb
lods
es
mov
cmp
jmp
leave
pop
xor
jg
lods
clc
and
int
fisubrs
mov
push
mov
push
ja
cli
push
ret
sbb
loopne
cmp
mov
cmpsl
inc
ljmp
out
mov
xchg
sub
mov
movsb
cli
popf
push
cs
setl
pop
jmp
orl
outsl
negl
sub
fstps
lcall
shlb
lcall
sbb
jl
adc
test
mov
out
pop
test
iret
scas
xor
pop
es
xor
data16
test
jg
pop
aad
cmc
or
fldcw
dec
push
enter
cwtl
push
mov
jg
mov
cld
adc
scas
in
mov
sbb
dec
lret
jge
xchg
mov
xchg
sbb
in
ss
and
js
stc
jno
and
int
pop
in
pop
jge
pop
dec
inc
push
icebp
sbb
pop
insb
rolb
adc
cmc
insl
pushf
hlt
sbb
mov
dec
push
movsl
scas
push
cmp
or
testb
sub
xchg
or
dec
mov
movsb
mov
jae
mov
xor
das
push
sub
int3
aas
lahf
adc
mov
cmc
mov
push
add
cmp
aad
and
gs
and
mov
mov
mov
int3
push
xchg
xchg
stos
faddl
imul
dec
or
outsb
lock
mov
fsubp
dec
jecxz
jnp
xor
inc
or
mov
push
sbb
std
mov
mov
fucomp
push
stos
push
and
lock
inc
dec
add
and
aad
gs
jle
sub
xchg
cmpl
sbb
adc
xchg
rorl
mov
insl
cmpsl
cwtl
push
test
jl
loop
jne
jne
cmp
lahf
adc
xor
aam
es
sub
ffree
bound
pop
sti
mov
jp
jge
mov
test
mov
xlat
out
fucomi
xchg
repnz
push
xchg
adc
movsb
das
out
addr16
push
repz
or
cmc
jge
xor
jl
xchg
rclb
jecxz
sbb
jnp
push
cli
loopne
test
pop
cmp
sbb
mov
bnd
dec
lea
cs
pop
adc
hlt
cmc
sbb
inc
add
pop
pop
mov
xchg
mov
pop
jl
lods
push
cltd
lock
mov
sti
dec
bnd
xor
clc
and
adc
mov
cmc
mov
lret
pop
mov
daa
sahf
pop
lock
aas
fbld
inc
push
sbb
cmp
mov
stos
les
daa
andb
mov
inc
mov
into
psadbw
repz
insl
mov
mov
int
outsl
jno
pop
mov
push
test
fnstenv
add
push
aad
enter
scas
call
scas
mov
push
xchg
ret
es
bound
in
lods
push
cmp
rclb
testl
xchg
outsb
pusha
dec
cwtl
lods
cmp
call
rcrb
popa
adcb
push
ror
push
xor
xor
enter
mull
in
xchg
jae
sbb
add
sti
jge
add
pusha
in
push
out
sbb
aad
dec
jns
ficoms
in
in
leave
stc
aas
repz
loop
ror
aad
fwait
out
lret
sub
push
mov
stos
sub
dec
mov
fildl
std
dec
mov
mov
push
xchg
ljmp
or
test
jl
adc
sub
xor
loope
dec
and
adc
aaa
ret
jmp
rcr
fisubrl
jne
pop
ficoms
xor
mov
xor
shrb
movl
mov
add
sub
dec
sbb
and
int3
and
push
pop
dec
xor
out
pop
jne
subl
out
cli
out
push
push
push
hlt
mov
mov
sbb
mov
xor
dec
test
std
pop
gs
push
xor
mov
je
xor
loop
int3
and
ror
pop
xchg
push
bound
sbb
dec
ja
pop
dec
cld
inc
lods
rol
sub
mov
into
xor
cwtl
inc
jecxz
mov
popa
inc
in
or
dec
inc
int
xchg
out
les
add
cmp
xchg
shlb
adc
test
lock
mov
pop
push
fstpt
sub
pcmpeqb
sti
stc
jg
cwtl
pushf
sarl
jne
out
mov
fsubr
xchg
pop
roll
xchg
int3
out
shl
sbb
mov
mov
inc
push
adc
push
cmpsb
sbb
sbb
mov
cwtl
lcall
sub
in
xor
pop
rol
adc
push
adc
adc
call
mov
leave
ja
jmp
out
iret
lea
bound
or
or
push
and
fcoms
pop
jbe
sub
xchg
imul
or
dec
ret
mov
iret
sahf
push
fdivp
jnp
mull
ficoml
cs
sbbb
add
repz
mov
jbe
jg
dec
push
in
xlat
pop
sbb
scas
mov
and
mov
inc
ds
lcall
inc
dec
xlat
enter
jo
shrb
out
fwait
scas
mov
xchg
lcall
or
popa
cmp
out
push
mov
outsb
mov
addr16
and
subb
push
mov
adc
cmp
lret
ss
mov
outsl
out
out
jns
leave
andnps
xchg
pusha
idivl
stos
add
inc
leave
inc
mov
cmp
push
std
stc
inc
movsl
data16
cwtl
ljmp
gs
cmp
stc
adc
out
jb
sub
cmpl
ret
mov
mov
popa
iret
and
lret
lock
mov
inc
hlt
sbbb
fs
data16
inc
inc
lods
mov
movsl
mov
icebp
cmp
xchg
test
lahf
dec
or
cltd
jno
push
push
mov
sub
pop
sub
mov
lahf
pop
mov
in
neg
adc
push
aaa
fiaddl
push
cli
jge
xchg
pop
xchg
insl
bound
dec
out
mov
ljmp
fisubs
dec
loope
and
jl
sub
push
adc
lods
testb
dec
inc
add
xchg
rcl
push
add
xor
clc
mov
mov
out
dec
sub
iret
sbb
mov
adcb
imul
jno
xorl
es
mov
mov
in
sbb
repnz
dec
cltd
dec
pop
inc
adc
push
sbb
pop
and
ljmp
mov
pop
adc
add
mov
pop
fld
mov
push
jge
cmp
int
lret
sbb
cmp
lahf
sbb
inc
add
mov
cmpsl
xchg
pop
sbb
mov
cmp
push
repz
adc
les
push
int3
cmp
shll
in
addl
jl
jge
test
test
loope
sbb
adc
pop
sbb
rolb
push
xchg
ljmp
adc
cmp
popf
adcb
aaa
movsb
mov
fistpl
push
int
xchg
inc
jg
adcl
aaa
mov
loop
jle
test
pop
pusha
sbb
mov
shlb
mov
jl
push
jnp
xor
fcoms
daa
shrb
mov
and
out
fsubr
push
push
fstpl
cwtl
notl
jbe
lret
mov
das
cmp
dec
xchg
inc
xchg
inc
daa
in
ret
bound
pop
mov
xchg
push
push
push
cmpsb
mov
daa
fists
xchg
jno
xor
lea
cli
ror
cli
pop
fld
inc
jle
cmpsb
xor
xchg
mov
imul
fbld
sbb
in
add
jl
inc
add
jne
sbb
bnd
mov
fists
mov
mov
loop
sahf
ret
cs
stos
bound
mov
les
scas
cltd
sub
pop
mov
fwait
jb
jmp
add
inc
std
test
xor
pusha
insb
pop
dec
dec
mov
cmp
dec
ds
inc
xor
jl
push
xor
stc
sbb
mov
int3
lock
mov
xchg
sbb
adc
xchg
cmpsl
pushf
jmp
sbb
pop
fs
xorl
mov
push
fistl
dec
lcall
fchs
insl
int3
xchg
dec
lea
lock
jo
js
stos
sub
push
rorl
sti
into
jne
adc
inc
test
dec
inc
in
dec
hlt
std
add
or
jge
push
mov
mov
ja
mov
lcall
adc
sti
push
cmp
outsb
repz
add
xchg
pushf
pop
add
mov
xchg
add
ljmp
jg
cmpb
movsl
in
sarl
pop
push
mov
pusha
loop
cwtl
fists
imul
mov
add
cmp
pop
insb
mov
daa
sbb
mov
lea
push
pop
lds
cmp
insl
cmp
pop
icebp
imul
ja
andb
jp
xchg
aad
or
scas
jae
data16
ret
stos
inc
je
push
cli
sub
js
cltd
sub
rcrl
addl
inc
dec
push
ja
jp
cld
mov
leave
shll
adc
cmpb
add
pop
or
stc
mov
popf
dec
jle
adc
testl
xor
rcl
bound
out
test
or
loopne
rcr
ss
jb
or
or
cli
mov
fldenv
cmpsb
jg
subb
xor
xchg
aaa
pop
dec
dec
mov
aam
mov
shrb
scas
or
push
mov
push
mov
and
sbb
gs
xchg
and
lods
fwait
inc
shl
push
sub
sbb
xor
divl
add
jecxz
cli
inc
repz
out
das
outsl
dec
cltd
mov
mov
push
lods
xchg
cli
fs
pop
pop
inc
in
inc
add
dec
jl
xlat
xor
cmpsl
pop
call
pop
clc
sub
push
rol
jb
xor
or
sahf
aam
lcall
imul
pop
sub
add
dec
out
movsl
lock
popa
and
sbb
fcoms
cmpsb
pop
dec
xchg
sbb
iret
outsb
lahf
jecxz
pop
pop
jnp
xchg
faddp
aaa
sub
dec
sub
sbb
and
sbb
loop
mov
dec
decb
jp
xor
or
movsl
insb
mov
cwtl
mov
ljmp
dec
iret
outsl
in
xor
loope
repz
xchg
daa
aad
add
mov
mov
jge
sbbl
xchg
xor
mov
cltd
mov
pop
stos
rcrb
inc
cli
test
out
adc
rorl
push
adc
sbb
mov
call
sub
stos
xor
cmp
push
sahf
das
xor
or
dec
test
inc
inc
call
push
add
inc
inc
or
sub
pop
stos
je
ss
addb
fld
lahf
add
or
cmp
inc
popa
stos
sbb
xchg
sub
sbb
in
push
enter
jmp
or
add
or
push
ret
pop
out
xor
pushl
xchg
jecxz
insl
pop
push
test
sbb
mov
lods
mov
push
loop
cmp
jnp
popf
jo
pop
push
push
cwtl
or
int
call
jno
jb
or
jo
nop
int3
outsb
inc
mov
push
sti
inc
roll
and
adc
jnp
cmc
inc
pop
and
imul
mov
subl
sub
cmp
jl
lret
xchg
cmp
lret
popf
mov
lds
push
clc
shlb
ss
into
shl
stc
stos
xchg
je
lock
inc
inc
add
dec
and
lods
add
mov
jnp
mov
jne
aam
pop
xor
nop
jp
pop
or
les
cmp
pop
pop
or
fsub
jmp
mov
enter
mov
daa
mov
mov
mov
fs
lods
mov
repnz
xorb
shrb
dec
cmc
lahf
fwait
rclb
stc
mov
push
xor
neg
cmp
jmp
jle
or
add
lods
mov
aam
and
ljmp
ret
and
and
pop
cmp
popa
cmp
jge
push
adc
mov
test
in
fs
inc
lahf
hlt
xchg
mov
loopne
cltd
mov
loop
adc
jmp
in
clc
mov
or
shrl
ret
inc
mov
jnp
mov
mov
aaa
inc
xchg
jno
push
jo
je
imul
mov
das
mov
inc
shll
and
adc
mov
add
frstor
cmpsb
adc
inc
aad
scas
add
in
adc
subb
shrb
sub
and
ss
adc
mov
adc
shlb
or
mul
mov
lret
incb
stc
stc
rorl
sub
insl
push
movsl
out
sub
sbb
xor
add
push
or
addr16
jnp
push
or
xor
dec
xor
xchg
push
xchg
mov
and
and
add
in
xor
pop
in
mov
daa
xchg
insl
loop
pop
xchg
xchg
jne
pop
jp
and
lock
int3
inc
call
inc
pop
sbb
mov
pop
bound
push
inc
adc
pusha
gs
mov
lret
sub
push
push
lret
stos
fisubrs
mov
stos
pop
fisttpll
testl
out
xchg
std
inc
adc
cmp
mov
push
movsb
loop
cld
aam
sbb
cmp
push
or
lahf
outsl
in
imul
jecxz
aam
jl
jmp
jns
repz
and
xchg
push
jg
adc
dec
cs
enter
fildll
inc
ss
leave
mov
bound
aad
cmpsl
sub
ljmp
xchg
cmpl
xchg
in
rclb
push
xor
lret
repnz
fbstp
lcall
in
add
fidivl
nop
test
leave
push
call
cmpsb
xchg
test
add
test
call
push
push
xor
mov
cmpsb
pop
xor
ret
push
daa
loop
add
cmc
mov
mov
lretw
and
push
xchg
push
add
cmp
in
test
sub
rol
xor
mov
adc
push
mov
or
mov
outsb
mov
push
pop
xchg
xchg
enter
movsl
pop
sbb
cmp
cltd
ss
add
in
roll
jmp
mov
cmpsb
cli
nop
xchg
lods
mov
nop
fiaddl
call
dec
xor
add
push
test
lahf
icebp
lret
fldenv
cmp
push
in
xor
hlt
out
mov
into
lock
mov
cmp
ss
inc
cltd
push
adc
fcoms
push
dec
rorb
sbb
push
sub
dec
jmp
popa
cmpsb
adc
pop
mov
mov
cltd
notl
dec
dec
mov
movsb
lods
fnstsw
nop
jl
push
loopne
add
jle
inc
or
adc
outsl
sub
add
cmp
stos
mov
xor
add
add
ret
jle
xchg
mov
pop
sbb
push
add
stos
dec
add
mov
aaa
push
stos
dec
lods
sub
dec
popf
clc
pop
jnp
or
divb
jae
dec
sbb
mov
cs
mov
inc
sbb
rcrl
push
xor
outsl
mov
or
gs
push
mov
in
push
lods
and
sbbl
add
cmp
xor
cli
int
add
sbb
jae
loope
jo
outsl
inc
jl
jg
adc
ret
insl
mov
les
int
lret
cli
and
lahf
repz
js
mov
std
adcl
pushf
and
pusha
movsl
repnz
jb
mov
adc
icebp
jo
xchg
cmp
outsb
pop
mov
fildll
mov
add
sbbb
jnp
adc
sar
test
iret
ds
hlt
ror
xchg
cmc
adc
mov
sbb
push
push
or
jmp
push
pop
sub
mov
lret
clc
jmp
lret
adc
push
mov
fwait
mov
ret
cmp
mov
lcall
push
fsubl
adc
in
inc
out
enter
push
loop
loope
jle
or
subb
ret
adc
mov
ljmp
push
mov
push
imul
dec
push
and
adc
outsb
leave
xchg
lret
out
push
in
je
lret
repz
pop
roll
pop
lods
push
inc
mov
lahf
vpcmpeqw
cwtl
xor
lahf
sbb
out
cmpsl
fcomps
fsubl
popa
inc
pop
pop
dec
jns
jno
jl
mov
push
fsubl
ss
in
mov
iret
out
mov
aaa
dec
lock
mov
pop
cmpsl
addl
shll
in
mov
clc
adc
mov
mov
jb
dec
fwait
in
pop
int3
sti
mov
xchg
js
xchg
in
rcrl
rcl
stos
push
sub
push
sti
xor
xlat
in
jb
push
loope
xchg
dec
leave
clc
fldcw
hlt
jg
xor
dec
mov
pop
sub
cmc
iret
pop
pop
ds
pop
mov
ficompl
lcall
fldcw
rclb
xchg
and
idiv
inc
dec
fcom
add
xchg
sbb
and
test
lea
xor
es
jle
jo
cmpsb
mov
test
add
test
sbb
out
clc
jp
pop
mov
cmp
movsl
in
and
rcrl
mov
sub
jl
jg
pop
mov
push
add
ljmp
xchg
movsl
mov
mov
out
push
fistps
sbb
and
inc
insb
int
lock
enter
lock
jmp
je
loopne
cmp
das
shll
aad
sub
pop
mov
cmp
add
inc
pop
add
and
xorl
pop
dec
pushf
inc
cld
cmp
stos
mov
pop
shrl
test
cmp
jns
testl
inc
scas
dec
push
stc
pushf
inc
das
mov
iret
push
cli
aam
and
pop
mov
ds
push
stc
mov
fnstcw
lret
xchg
or
xchg
adc
dec
into
add
xchg
xor
sete
dec
in
ret
out
and
fstpl
push
mov
cli
nop
dec
rcrb
adc
cmc
inc
jmp
mov
in
filds
loopne
jecxz
pop
jmp
inc
aad
shrb
dec
loope
cmp
ret
into
xor
add
adc
js
sub
mov
mov
inc
push
insb
push
jl
jmp
jb
dec
xor
jge
and
ljmp
insl
add
xor
jp
adc
cmp
jp
mov
xor
cmpl
mov
pushf
nop
sbb
mov
jb
adc
int3
xchg
fimull
sbb
xchg
jmp
and
gs
mov
pop
xchg
xchg
xlat
out
in
outsb
fstl
jl
mov
mov
jae
push
add
shrl
sahf
pop
mov
add
es
and
xor
xchg
fstpt
push
cld
mov
insl
pop
add
or
mov
shl
cltd
adc
lods
mov
pop
and
and
fcoms
icebp
out
cmp
or
inc
mov
push
jo
inc
cwtl
mov
insb
stc
jge
xor
and
in
push
dec
mov
test
add
inc
test
out
pop
adc
sbb
xor
into
mov
pusha
mov
out
inc
and
gs
rorb
stos
ljmp
mov
insb
scas
fbstp
mov
sub
add
int
lret
movsb
xchg
adc
mov
lds
insb
adc
cmc
push
aaa
lea
lods
xor
in
arpl
not
mov
das
sbb
popa
scas
jno
ret
pushf
insb
jg
push
mov
mov
push
adc
sbb
enter
arpl
add
ficompl
inc
fistpl
jle
bound
xor
mov
lods
daa
sub
fcom
je
pop
jle
rcll
jnp
scas
jge
pop
mov
mov
fstpt
push
inc
in
mov
xor
fidivrs
fistps
mov
dec
dec
icebp
push
fs
aam
cwtl
mov
sub
incb
mov
push
imul
divb
fsubs
fmull
idiv
popf
es
hlt
and
mov
mov
sti
cld
mov
orb
sub
dec
and
and
mov
and
dec
mov
xor
stos
cmpsl
and
mov
cli
out
adc
mov
jge
add
pop
mov
icebp
dec
pop
push
lods
jg
clc
sar
push
loop
imul
pop
pop
cmp
push
pop
inc
popa
or
insb
add
pop
and
cld
add
shr
aad
insb
ds
dec
cmc
mov
inc
ljmp
dec
mov
dec
add
cmp
aas
xor
mov
addr16
mov
pop
call
dec
decb
lret
dec
iret
push
mov
cmc
jae
stc
cmp
fcmovu
in
and
dec
or
jo
out
pusha
dec
dec
mov
mov
or
xor
aad
jno
mov
testl
inc
addr16
jne,pt
xchg
ffree
hlt
add
push
sub
add
and
ljmp
lret
scas
mov
cmpsb
pop
mov
mov
sub
adc
out
incl
sahf
xchg
adc
mov
lea
pop
int
jle
fcmovbe
fwait
add
and
enter
mov
popf
pop
jp
fucomip
mov
lret
and
jb
sbb
mov
outsb
cs
jecxz
lock
fst
mov
cmc
pop
dec
pop
out
sbb
out
sub
pop
les
cmp
xor
cmp
add
push
sub
cmp
inc
test
popf
jne
mov
push
push
cld
iret
outsl
pop
jp
ret
dec
stos
rorl
inc
push
ret
test
sub
jp
push
mov
xchg
xor
add
or
and
mov
or
xchg
int
mov
out
imul
and
jge
push
jb
sub
cltd
fistpl
push
push
adc
xchg
inc
ret
cmp
mov
lret
jns
loop
pop
enter
fnstcw
cwtl
xchg
movsl
push
pop
mov
push
loope
les
jp
xchg
lcall
fisttpl
mov
sbb
sub
fcomps
pop
pop
fadds
jo
jle
jne
dec
push
movsb
sti
pop
stc
sub
enter
test
movsl
dec
popa
jmp
and
cmc
popa
out
jne
pop
clc
test
lahf
mov
or
pop
int
inc
adc
jle
test
xchg
cli
pushf
aad
fisubrl
lods
jp
xchg
sub
fbld
sub
nop
or
xor
mov
jae
dec
mov
xchg
and
push
test
cltd
addr16
cltd
iret
mov
ljmp
jecxz
addr16
leave
mov
outsl
ficoml
adc
sbb
adc
in
pop
loop
and
adc
sti
inc
lret
pop
pop
pop
es
pop
cmp
pushf
daa
pusha
sbb
pop
cmp
imulb
scas
adc
mov
inc
pop
mov
inc
popf
jne
fistpll
loop
loopne
mov
add
adc
repz
into
icebp
dec
fisttpll
in
mov
pop
pop
cli
iret
lods
fs
lcall
notb
mov
insb
sub
mov
inc
push
mov
mov
add
cld
mov
cmp
xlat
sbb
leave
aaa
adc
pusha
idiv
and
cmc
xchg
lods
and
mov
dec
sbb
mov
mov
mulb
in
xchg
add
mov
cmp
in
int3
pop
cmp
adc
lahf
jle
in
or
in
cmp
movl
mov
cmpsb
mov
in
test
cvtpi2ps
ret
loop
mov
jne
or
inc
scas
xchg
jp
xchg
cs
subl
pop
sub
testb
sahf
mov
push
outsl
lods
rorb
sub
fbld
hlt
mov
fldcw
cli
stc
nop
and
jno
loop
xor
sti
test
imul
push
jmp
push
add
adc
and
sub
cmpsb
aad
jge
arpl
or
push
sarl
fwait
mov
jne
pushf
mov
ljmp
push
outsb
leave
xlat
push
cmp
inc
in
push
fs
movsl
mov
mov
lahf
and
or
mov
push
mov
jo
dec
inc
mov
sarb
jg
push
add
dec
rcrb
cmp
or
add
icebp
lds
cmc
mov
xchg
mov
daa
test
jmp
jle
ds
xchg
xchg
mulb
jp
pop
cltd
sub
enter
mov
or
dec
ds
cmpsl
lahf
xchg
es
outsb
iret
mov
testb
add
pushf
sub
outsl
movsb
inc
clc
jb
in
leave
out
xchg
loope
clc
dec
je
sarb
enter
xlat
andb
xor
jmp
mov
stos
push
mov
imul
pop
and
test
xor
or
cmp
stos
rcrb
subl
pop
scas
stos
jno
mov
jg
jno
maxps
jo
mov
push
call
jno
mov
aad
call
xchg
mov
lahf
add
pushf
mov
mov
push
into
mov
lret
out
subb
ds
stos
es
stc
inc
or
push
int3
ljmp
sub
jecxz
sub
jbe
rol
es
ss
ljmp
cmp
sub
xchg
fnstcw
repz
mov
mov
decl
repz
cmp
adc
je
test
sub
dec
nop
mov
cmpsb
xlat
ja
xor
pop
sub
sti
pop
push
stc
push
lods
pop
and
or
xor
data16
pop
movb
daa
test
ret
push
jmp
flds
dec
movsl
shrb
cmp
mov
xor
pop
and
pop
jo
and
pop
jl
mov
out
ror
leave
pop
clc
int
mov
push
mov
adcl
scas
sbb
loope
rorb
hlt
lea
test
dec
ja
divl
rolb
sti
lock
inc
test
add
pop
ret
mov
sub
jge
loope
push
nop
inc
cltd
sub
scas
jns
adc
ljmp
pop
mov
in
mov
stos
test
rclb
andl
std
in
mov
outsb
scas
fs
sub
xor
or
dec
xor
test
xchg
push
stos
mov
adcl
cmp
inc
test
push
ja
rcrl
ret
mov
cmc
sub
xor
jle
dec
rcll
adc
and
rorb
rorb
into
subb
lahf
outsl
jbe
xchg
mov
xor
mov
cmp
xchg
lea
cmc
lods
xchg
and
inc
sbb
in
shll
jne
scas
popa
cmp
in
xor
mov
ss
jae
or
stos
cmpsb
xchg
jo
sub
out
dec
cmp
iret
test
pop
pop
jg
lock
lcall
lds
adc
ja
mov
jl
fwait
sub
xor
pusha
insl
adcb
jns
mov
cmp
std
outsb
inc
cmc
mov
lcall
cmp
ret
mov
jge
push
pop
sarb
lret
rcll
jo
adc
andl
cltd
in
pop
mov
jg
and
mov
mov
jae
cs
std
out
and
mov
adc
jbe
add
xchg
sub
bswap
popf
add
lods
scas
push
cli
andl
int
mov
subl
andl
cltd
sti
xorb
outsl
mov
adc
loope
pop
ds
push
das
sbb
fisubrl
mov
aad
outsl
push
cmp
dec
mov
js
sahf
add
leave
fbld
lcall
xor
xchg
mov
scas
mov
mov
mov
rolb
or
rcl
lahf
or
add
mov
mov
pop
push
sub
dec
jne
sub
mov
test
sahf
leave
jno
mov
pop
mov
mov
sti
mov
div
cwtl
repnz
mov
add
mov
repnz
in
sbb
test
lret
or
add
mov
or
loope
inc
aaa
cmp
push
sahf
sbb
xchg
pop
sbb
imulb
push
mov
imul
cmp
mov
mov
mov
sbb
mov
insl
adc
fdivl
jo
add
cmpsb
or
sub
movsb
dec
xor
cli
jmp
jecxz
sbb
sub
sbb
int3
mov
loopne
loope
cmp
les
mov
inc
sub
ffree
jne
pop
neg
nop
daa
adc
cs
adc
mov
icebp
lret
mov
sahf
fnsave
popf
fistl
ret
mov
or
sahf
ja
andb
cmp
imul
mov
fs
aad
jo
aam
sbbb
adc
pop
pop
jns
sbb
lret
jp
inc
dec
mov
stos
call
loopne
and
mov
js
ja
inc
daa
test
inc
jns
add
push
xor
xlat
addr16
sbb
fidivs
inc
gs
xor
into
scas
pusha
adcl
filds
xchg
cmpsl
fadd
xchg
cld
pop
or
shlb
ja
in
push
test
lock
imull
jne
xor
rol
out
push
lods
xor
loopne
loope
addr16
add
dec
lret
ret
jae
or
cmpsb
sbb
xor
in
sbb
mov
mov
outsb
push
or
popf
jae
fmuls
and
das
imul
or
mov
popf
sbb
and
sar
cmp
pusha
xor
add
out
in
test
adc
loopne
xchg
and
pop
incb
adc
lea
popa
jb
push
sbb
add
lret
cmp
adc
ret
push
pushf
rcll
adc
cmp
in
int
decl
adc
mov
in
mov
into
mov
daa
clc
ficomps
data16
leave
xchg
imul
insb
xchg
sbb
cmp
mov
loope
int3
add
loope
and
xchg
test
mov
mov
lock
add
scas
adc
xor
insb
ret
xor
mov
push
rcrb
dec
mov
aas
push
dec
shlb
movsl
idivb
jno
jmp
xchg
adc
mov
inc
fwait
mov
xchg
cmp
push
add
movsb
rolb
add
and
arpl
push
lods
xchg
jp
push
inc
inc
pop
rolb
add
loopne
in
xor
mov
mov
cld
xor
dec
loope
push
xchg
mov
insl
fwait
hlt
pushf
jb
pop
sbbl
cli
and
cltd
or
cld
xlat
push
mov
fcompl
aad
xlat
pop
add
testb
into
lds
jg
cmpl
cmp
or
xchg
lock
adc
mov
pop
lret
mov
imul
in
outsl
dec
loope
aam
negl
and
ret
fsubrl
fbld
mov
cmp
lods
cmp
inc
sbbl
add
mov
and
ljmp
push
jmp
inc
jl
jno
ja
jne
insl
fsubrp
dec
inc
addb
and
dec
sbb
sti
pop
xchg
cwtl
mov
out
das
aad
sbb
sub
in
nop
sub
jge
imul
sub
pop
ss
sbb
add
mov
rolb
int
cmp
push
jmp
in
or
mov
movsl
pop
mov
sti
insl
xor
sbb
jle
xchg
sti
gs
bound
jns
loop
cmp
sbbl
cmpsb
pop
mov
loope
fstps
cld
xchg
push
mov
scas
insb
rolb
and
mov
ret
or
push
movl
mov
ljmp
inc
mov
mov
fucomip
adc
push
dec
cs
mov
push
push
add
mov
cmp
add
pop
jns
adc
into
loopne
pop
ljmp
movsl
fnsave
adc
adc
mov
add
stc
and
mov
movsl
sti
mov
pushf
cmc
imul
cmpsb
xor
and
inc
lock
jecxz
sbb
adc
leave
xchg
jbe
xchg
jo
sub
xchg
sub
into
lret
cmp
cmp
testb
cmpsl
push
fistps
fidivrl
jo
mov
push
mov
mov
xorl
jle
leave
fldcw
mov
xor
cwtl
iret
dec
jae
movsl
push
clc
or
aas
cwtl
inc
add
loope
cmp
adc
dec
mov
decb
mov
sub
test
ds
jb
mov
into
cli
xor
mov
cmpsl
call
adc
out
call
mov
popf
loope
mov
roll
adc
fisttpll
xor
xchg
xor
inc
gs
sbbl
mov
cmp
sti
push
jbe
add
jmp
jmp
arpl
add
cmpl
jnp
pop
inc
xor
dec
movsl
sbb
sub
dec
add
loope
xor
and
adc
push
mov
sbb
rcrl
ret
inc
gs
out
lret
pop
xlat
test
jp
and
push
fmulp
inc
sbb
int
mov
nop
mov
adc
jno
add
sbb
insb
adc
fsubs
jae
ret
pop
lock
enter
jnp
xor
rol
jecxz
test
mov
mov
inc
sub
subl
mov
xor
mov
popf
push
xor
inc
inc
ret
pop
jnp
pop
push
or
cmp
data16
hlt
jo
test
adc
inc
jle
out
mov
adc
icebp
adc
and
jne
cmp
mov
int3
jo
pop
aaa
adc
fisubrs
adc
nop
sub
fistpll
daa
push
push
rcrb
dec
mov
fildll
orb
pop
lods
inc
out
daa
pop
cmpl
dec
xor
add
adc
sbb
lahf
aas
fisttps
dec
call
prefetchw
pop
clc
pop
xchg
sub
fidivrl
mov
arpl
repz
adcb
int3
xchg
jmp
sbb
lret
aas
arpl
dec
int3
jecxz
xor
mov
sbb
push
mov
mov
arpl
pop
xchg
and
and
int3
pop
xor
push
icebp
shlb
das
push
mov
roll
loopne
push
and
sbb
stos
xor
sub
mov
test
jg
std
ss
repz
movsb
or
pop
imul
lods
xlat
xor
mov
pop
push
sub
std
add
outsl
pop
movsb
and
ss
nop
and
dec
rorb
shlb
mov
mov
mov
mov
jp
push
jecxz
pop
cltd
sti
loopne
les
sub
and
sub
mov
imul
sahf
cmp
addr16
out
sbb
push
pop
mov
iret
inc
cmp
and
mov
mov
jmp
mov
int3
pop
jo
xor
std
push
pop
fsubrs
cmpl
jle
mov
stc
addr16
filds
lcall
inc
pop
pop
es
mov
pop
jae
aas
sub
inc
sbb
data16
mov
pop
dec
push
jg
int3
dec
out
rcll
insl
add
dec
push
mov
adc
in
cmpsb
fistpl
add
rcr
sbb
cmpsl
arpl
mov
xchg
cmp
mov
jge
add
sbb
jecxz
push
stos
xor
int
xchg
mov
jnp
cld
cld
xchg
push
cmpb
xchg
mov
leave
and
mov
jns
xor
mov
sarl
and
mov
or
arpl
or
loopne
inc
popa
adc
sub
add
cmpsb
sub
ljmp
and
paddq
or
or
hlt
inc
adc
mov
insl
adc
jge
movups
clc
mov
lcall
sbb
movsl
aas
or
sub
push
xchg
lcall
cmpsl
mov
pop
subl
enter
imul
push
insb
pop
ljmp
dec
rcrl
divb
adc
stos
push
add
add
addl
insl
cltd
pop
cmpsl
aaa
add
push
jl
pop
fnstsw
xchg
mov
and
mov
shlb
insl
cli
adc
pop
mov
mov
pop
loopew
test
push
mov
mov
movsb
mov
iret
push
or
fstl
xchg
mov
movsb
mov
sub
mov
pop
add
test
lahf
xlat
adc
adc
stos
cmp
out
lock
jne
mov
je
es
ret
scas
pop
mov
rcr
mov
xchg
out
ficomps
push
or
cmp
aad
daa
push
lcall
mov
fdivl
pop
push
pusha
jl
pushf
mov
jecxz
loope
mov
dec
pop
fidivrs
icebp
push
incb
mov
adc
repz
sbb
jnp
test
fwait
adc
cwtl
andb
mov
pmullw
mov
jns
or
sti
pop
xor
pop
or
mov
lret
das
aam
or
fistps
divb
sub
clc
or
dec
pop
aas
enter
lcall
inc
mov
das
pop
mov
sbb
jo
fst
pop
fdivrl
pusha
test
pop
mov
sbb
inc
and
ret
and
ja
stos
pushf
call
in
sub
fstpl
out
test
xor
push
pop
out
lods
pusha
iret
inc
aam
inc
pop
outsb
adc
pop
loopne
daa
ja
xor
or
rcll
xchg
sti
shrl
sub
xchg
insl
inc
mov
cmp
fidivl
mov
mov
loop,pt
pop
jge
sub
or
les
push
sbb
inc
sub
in
leave
sbb
sbb
cli
insl
pop
subl
add
or
cld
sarl
or
push
imul
jge
and
lret
dec
icebp
sbb
mulb
add
push
sub
mov
mov
cmp
enter
popa
in
push
push
dec
lds
lret
ja
into
lods
inc
repnz
pushf
inc
mov
jl
pop
add
insb
push
mov
mov
test
ret
or
fwait
xchg
adc
mov
shrl
out
inc
add
inc
test
lahf
add
jg
pop
rcrl
mov
lcall
shrl
ds
nop
in
mov
and
fstpl
inc
out
pop
into
jg
aas
cmc
adcl
xchg
mov
mov
movsl
pop
mov
popf
xor
jb
inc
aad
jnp
cs
stc
pop
mov
fdivrp
sbb
mov
lock
lret
outsb
lods
add
les
xchg
mov
add
or
adc
sbb
dec
mov
push
imul
mov
jp
ljmp
add
pop
cli
stos
inc
adc
fdivs
cltd
push
cmp
inc
cmp
add
in
xor
and
in
mov
adc
les
call
mov
mov
out
mov
dec
pop
or
outsl
popf
sbb
scas
push
dec
jg
cld
push
adc
mov
add
lods
stc
add
cmpl
filds
aad
pop
loope
enter
sub
sbb
cld
jp
cmpsb
repnz
jne
dec
pop
ds
cltd
mov
xchg
add
lock
andb
in
ret
in
fldt
or
jnp
mov
outsb
cmp
imul
int
push
mov
dec
adc
jae
sub
shrl
loopne
roll
incl
jno
push
jns
aaa
pop
aas
in
jmp
mov
mov
sub
push
aas
cmp
dec
mov
push
lds
cmp
or
fnstenv
pop
mov
push
jp
loop
lds
xor
enter
shrb
jp
jl
add
data16
mov
and
ljmp
adc
call
pusha
ucomiss
popa
pop
das
pop
lret
jb
jnp
and
xor
cmp
insb
mov
or
or
push
mov
das
cmp
jb
pop
mov
sub
jae
push
xchg
rcrb
fsub
jge
stc
push
jbe
adc
in
add
fdivrl
xor
sbb
xchg
iret
xchg
movsb
xchg
nop
jge
and
popl
jmp
xchg
cwtl
xor
lret
pop
mov
xor
insb
jb
pop
xor
mov
mov
in
adc
ss
loope
jmp
testb
jge
movsl
push
push
icebp
dec
push
push
cmc
repz
cmpb
sub
or
pop
xchg
mov
aaa
sbb
out
xor
jle
out
push
data16
and
test
roll
es
ja
or
fadd
xchg
mov
in
adc
add
bnd
jnp
jg
xor
imul
shl
popf
dec
mov
adc
jecxz
push
push
xchg
mov
or
jns
test
pop
adc
gs
dec
data16
sti
lea
shlb
data16
sub
mov
movsl
rcll
cmpsl
xor
stc
and
imulb
bound
and
dec
es
cmc
add
nop
pop
push
scas
mov
mov
stc
jecxz
inc
test
clc
sbb
pop
mov
pop
rcl
mov
pusha
cmp
cli
cs
sub
lock
jecxz
lcall
mov
es
add
loop
and
or
ret
clc
adc
xchg
jmp
fs
push
lcall
adc
and
test
xor
leave
pop
addr16
mov
cmp
xor
outsl
mov
mov
mov
push
ret
and
enter
int
cmp
aas
xor
or
dec
add
pop
loop
cmp
enter
jg
leave
nop
pop
mov
jae
push
in
movsl
xor
pop
sbb
pop
arpl
cmpsl
mov
push
cmp
out
roll
inc
and
add
sbbb
roll
mov
dec
testb
imul
nop
iret
fistps
mov
jo
jo
and
stos
fsubrs
rolb
mov
xchg
adc
mov
adc
movb
pop
lods
inc
popf
imul
rorb
sub
shl
lret
sbb
xor
ret
adc
cmp
mov
xor
jl
jae
dec
imul
int
test
cmp
inc
jne
lods
aaa
pop
inc
fcmove
and
dec
adc
mov
jne
sbb
mov
cs
push
push
or
or
insl
xorb
pop
cmc
xchg
jmp
mov
aas
out
ljmp
mov
mov
out
push
js
ja
out
cmp
pop
inc
push
lcall
sti
ret
pop
add
fmuls
leave
sub
mov
cld
scas
xor
aaa
mov
sub
or
mov
mov
pop
incb
popf
fimull
mov
dec
sar
sbb
out
daa
pop
jb
stos
pusha
xor
jg
pop
xchg
push
sti
adc
repnz
popa
in
imul
in
sub
filds
push
std
xor
mov
adc
addl
add
cs
js
cltd
sti
xor
dec
scas
and
outsb
mov
call
aam
mov
loop
ss
mov
das
loop
sub
inc
jnp
fdivl
fcmovnbe
or
ljmp
mov
jns
test
imul
pop
dec
div
je
out
pop
jle
lret
les
aas
cmp
push
hlt
fidivs
sbbl
xchg
notl
mov
test
fs
dec
mov
push
or
out
mov
or
lods
xchg
jae
jnp
stc
aam
sub
ret
loop
sub
outsl
std
sbb
or
das
icebp
pop
push
subb
push
std
ret
add
lret
out
jbe
divb
and
lret
push
cli
lock
push
hlt
adc
pop
and
dec
aaa
jle
cmp
push
jge
test
pop
sub
fisubrl
push
mov
inc
loopne
adc
in
xchg
xchg
xchg
mov
stc
and
outsb
jbe
clc
es
or
je
lods
cld
fdivrl
xor
mov
xor
andb
addl
pop
or
jno
pushf
psrad
pop
inc
xchg
cmp
or
outsb
add
add
dec
or
nop
inc
vpminub
sbb
cmc
test
icebp
int
xor
push
mov
adc
mov
mov
mov
or
and
add
movsb
orb
adc
inc
test
lret
aas
inc
faddl
repz
sub
sbb
enter
scas
lahf
dec
inc
sub
insb
push
cmpsb
call
repz
adc
out
or
mov
xchg
je
dec
sahf
mov
adc
inc
test
cli
lret
add
rol
lret
sbb
jle
xchg
sub
ret
or
gs
int3
lcall
in
jp
int3
xchg
repnz
jp
idivb
adc
sub
or
leave
mov
push
cld
push
sbb
pusha
mov
adc
adc
inc
fs
lds
cmpsb
adc
xor
or
pop
aam
jg
fisttps
sahf
or
inc
std
mov
cmp
inc
and
push
mov
lret
mov
sub
or
data16
bound
fstl
test
mov
rcrb
push
push
lret
xlat
xor
nop
dec
xchg
pop
xlat
jle
add
mov
stos
and
nop
mov
jecxz
pop
mov
push
loopne
pop
fnsave
sbb
mov
int
mov
mov
notl
inc
sbb
ds
out
cmp
xchg
out
in
cli
imul
mov
call
addr16
sbb
jbe
popa
sti
ret
dec
jp
dec
inc
popl
imul
std
inc
sbb
sub
pop
popw
div
cmp
lahf
push
jmp
or
int3
sarb
out
mov
lods
lea
negb
out
inc
mov
xchg
cmpsb
push
mov
into
push
insl
fmuls
fcom
stc
push
das
push
mov
inc
mov
xor
imul
jmp
adc
outsl
sub
inc
mov
insl
loopne
mov
out
pop
pop
push
xchg
outsb
or
sub
add
aad
in
jno
dec
jb
out
test
adc
shl
sub
sti
push
push
in
lret
jmp
in
popf
adc
stc
icebp
pop
daa
xchg
stc
sahf
les
or
or
cmp
mov
xchg
cmp
into
in
or
cs
das
add
cmp
jnp
mov
lds
lods
pop
jb
mov
sbb
jb
sbb
cltd
and
push
xor
sub
xor
seta
mov
scas
mov
mov
sbb
push
cwtl
mov
fistpl
xchg
imul
and
movsb
js
sub
push
mov
pop
mov
fdivrs
pusha
ret
aaa
mov
jnp
lods
jge
mov
and
mov
shlb
xchg
data16
mov
sti
and
ss
lods
insb
fisubrs
lods
adc
loop
stos
jo
xchg
out
pop
adc
shlb
jmp
movsl
movsb
fdivs
or
das
push
outsl
movsb
or
push
push
xor
imul
mov
arpl
push
stos
mov
fistl
and
enter
sub
cmpsl
in
daa
pushf
mov
je
push
push
sub
sbb
lret
nop
and
lds
inc
in
mov
nop
scas
iret
mov
iret
mov
jecxz
mov
push
dec
push
inc
push
pop
orl
xchg
pusha
or
sbb
mov
xor
pusha
mov
dec
cwtl
repnz
std
outsl
insl
out
xchg
and
push
stc
push
jae
js
leave
pop
aam
push
jbe
lock
mov
movsb
mov
ljmp
jecxz
addl
push
cli
pop
xchg
push
lock
rcrb
pop
incb
cmp
and
scas
sbb
lret
sub
rcr
loop
mov
jp
fwait
aad
and
cli
rcrl
push
mov
das
icebp
int3
mov
xor
xchg
in
jbe
mov
je
aam
fucomi
cmp
bound
js
or
imul
xor
jecxz
cmp
iret
xadd
hlt
fmulp
pop
fisubrl
lds
out
test
fldt
xor
pop
cltd
or
fdivs
ja
sbb
jb
insl
inc
pushf
xor
sbb
add
push
mov
xchg
cmpsb
pop
xchg
jns
ret
loopne
inc
or
dec
hlt
sbb
int
jmp
xor
push
lcall
xor
add
psraw
pandn
ret
sub
stos
jo
out
or
push
fwait
mov
fwait
jmp
enter
sub
arpl
imul
mov
push
test
in
sub
clc
pop
arpl
push
nop
lods
xor
fists
lahf
dec
and
test
fs
fs
push
dec
pop
dec
loope
es
inc
sub
jno
mov
dec
shlb
pop
jg
out
pop
mov
push
pop
mov
xchg
mov
xor
jb
mov
cmc
xchg
test
mov
test
fdivrs
out
push
lds
jg
test
xor
rolb
repz
daa
push
dec
xchg
pop
popf
cmp
enter
gs
rcll
mov
or
mov
push
fimull
jns
inc
pop
push
adc
sub
pop
mov
scas
and
jg
mov
idivb
mov
pop
xchg
jns
clc
xor
loopne
sub
pusha
xchg
es
adc
push
push
xor
jo
fs
mov
sub
aad
jmp
popa
pusha
add
push
mov
sub
dec
test
cltd
xor
cli
and
pop
movsb
test
xor
cmp
cmc
mov
popa
xchg
lods
mov
inc
xchg
xchg
jbe
je
in
mov
gs
sub
loopne
ficompl
out
ja
aam
cltd
pop
sub
nop
fbld
imul
pop
scas
pushf
inc
jmp
adc
push
push
outsb
or
idivb
pop
mov
popf
icebp
sbb
into
lods
scas
nop
sbb
add
push
enter
icebp
and
popa
xor
lret
pop
pop
mov
xchg
push
xor
sub
jns
shlb
bnd
dec
and
nop
mov
aam
pop
ljmp
enter
mov
shr
adc
lea
mov
and
mov
mov
es
leave
dec
mov
stc
movsl
push
adc
clc
adc
sub
mov
xchg
push
xchg
adc
lods
lfs
dec
or
pop
mov
sbb
jecxz
in
xlat
fdivrl
es
imul
mov
pusha
xlat
rorl
push
ffree
lea
and
and
push
push
cmp
or
xchg
jge
les
adc
lcall
mov
push
jg
or
jnp
out
push
add
pusha
or
ja
or
cli
cmp
out
fidivs
filds
aaa
je
dec
jg
adc
pop
aad
call
in
insb
imul
cmp
mov
cs
shrl
dec
pop
push
xor
in
mov
mov
xor
int3
adc
jne
stc
pop
or
mov
dec
insb
add
aam
jno
in
fisttps
push
nop
sbb
add
rcl
aam
xchg
int3
dec
clc
pop
mov
xchg
fsubrs
xor
imul
ret
ss
movsl
mov
in
dec
dec
xchg
inc
mov
mov
xchg
push
inc
retw
aad
cmpsl
cmpsb
aam
fsts
les
jnp
subb
pop
addr16
jnp
jecxz
xchg
imul
out
jp
and
mov
jo
lods
adc
push
dec
std
out
mov
jo
sbb
dec
mov
pop
jbe
jns
in
xor
int
add
sbb
adc
mov
mov
rolb
data16
sub
es
les
xchg
mov
lcall
sub
nop
push
push
aas
mov
sbb
sub
and
xor
xchg
xor
bound
imul
rcrl
push
insl
cmp
movsl
add
xchg
mov
mov
sete
addr16
pop
fnsave
adc
sub
add
hlt
mov
scas
fbstp
mov
xchg
fisubrs
icebp
fwait
sub
imul
adc
andps
stos
cmp
and
lds
sub
push
inc
sbb
shl
icebp
xchg
xchg
pop
divl
loopne
jg
sbb
leave
into
jae
xchg
mov
jb
xchg
or
daa
rcrb
mov
adc
pop
xchg
jno
mov
inc
mov
mov
adc
rcr
dec
dec
out
enter
mov
call
or
mov
mov
icebp
fsubr
cmp
mov
push
test
cmp
cmp
jno
insl
scas
clc
andb
cmp
fidivs
sbb
dec
int3
shlb
jge
inc
call
pop
das
repnz
mov
mov
lods
add
mov
jmp
les
mov
insb
das
xchg
lock
aas
mov
fsubrs
aam
mov
sbb
out
je
push
add
cmp
out
jmp
push
ds
ficoml
std
cmpsl
lret
repnz
fs
xor
and
pop
jle
shlb
movsb
add
xchg
jae
mov
cmp
cmp
jle
push
aas
inc
sub
shll
jge
arpl
inc
mul
xchg
jb
and
in
push
insl
test
in
adc
lret
mov
push
in
gs
jo
aaa
int
jp
insb
sub
mov
lods
adc
out
fs
cmp
fwait
xchg
lahf
add
ficoms
pushf
adc
fdiv
lds
and
jmp
lea
xchg
mov
ret
cld
cmp
and
imul
sub
popa
jae
xorl
dec
mov
lods
or
fimuls
aaa
push
add
mov
ds
sbb
jmp
adc
mov
cld
or
pop
cld
enter
jg
pushf
std
xchg
shl
or
int
mov
push
and
fcoms
push
inc
inc
loope
data16
jb
xchg
xchg
xchg
adc
pop
push
cmp
sbb
mov
mov
in
push
leave
jo
pop
shrl
add
or
fldpi
negb
push
jnp
adc
ficomps
cmc
pop
cmp
push
xor
jnp
pop
inc
xchg
sbb
inc
sub
mov
jnp
mov
mov
push
jge
or
in
and
fwait
out
cmp
pop
loopne
mov
scas
insl
aaa
pop
adc
mov
and
add
cmp
je
insl
adc
fwait
hlt
les
fcmovnbe
test
loopne
mov
dec
aad
jmp
ljmp
push
mov
add
xchg
xor
cld
sbb
mov
jg
out
mov
ljmp
ljmp
or
lret
inc
cmpsb
mov
mov
test
fcoml
in
stc
adc
mov
in
test
sahf
iret
push
in
or
mov
sbb
ljmp
pop
lods
xchg
cmc
mov
mov
push
push
cmpsb
push
dec
or
repz
or
in
adc
repnz
test
push
ds
xchg
hlt
into
seta
pusha
jbe
stc
sub
mov
repz
or
test
std
sbb
les
insb
jo
lret
pop
dec
cmp
add
fiadds
sbb
mov
xchg
jno
out
or
mov
aaa
nop
cmc
jp
mov
cmp
pop
movsb
cld
inc
int3
aaa
mov
roll
rcl
out
sub
cmp
outsl
lret
leave
jecxz
sub
outsl
dec
mov
std
sti
les
arpl
pop
cltd
xor
inc
mov
icebp
idivl
dec
and
sbb
popa
push
mov
enter
cli
or
inc
outsl
pop
ret
pop
sbb
test
clc
xchg
dec
jecxz
stc
pop
std
mov
pop
mov
ja
hlt
cmp
jl
imul
push
jge
in
jmp
inc
pop
cmpsb
int
mov
out
push
ja
or
cmp
jne
repz
pushf
xor
dec
out
scas
rcr
cmc
adc
mov
xor
or
cmp
dec
in
sub
mov
xorl
jns
xor
jns
jl
xchg
iret
add
pop
mov
dec
in
les
aas
enter
mov
lea
stos
jl
xor
push
popf
mov
adc
aaa
cwtl
test
xchg
push
inc
fnstcw
jl
or
push
movsl
push
aaa
and
xchg
out
cmpsb
lods
dec
fidivs
pop
mov
loopne
jae
fbld
int3
fidivl
sti
cmpl
cmp
and
mov
add
ss
jecxz
testl
inc
divb
cmp
jp
pop
jle
rorl
mov
pop
orl
movsb
or
xchg
cmpsb
addr16
fnstenv
lret
cmpsb
mov
add
mov
arpl
fwait
and
mov
push
int3
repz
jecxz
mov
sub
push
ja
aam
mov
stc
data16
xor
xor
dec
ficomps
jge
push
pop
mov
pop
lock
push
adc
or
or
sarl
cmp
in
roll
aas
mov
dec
dec
nop
push
ja
das
cmp
lods
ret
test
popa
ret
call
rolb
jae
pop
movsl
mov
pop
cwtl
xchg
xor
mov
shrl
inc
push
push
jg
in
pushf
lret
xor
jne
gs
int
mov
xor
jmp
sbb
mov
and
xchg
cmpsl
into
jb
cli
pop
pop
xor
jmp
mov
insl
cmp
push
int
and
jle
das
adc
out
fisttps
xchg
sarl
imul
ss
xor
insb
cld
repz
cwtl
mov
pop
mov
adc
out
xor
or
shll
dec
sub
call
pop
xor
cwtl
xchg
jno
pop
ss
inc
mov
lea
test
xor
or
insl
aaa
cwtl
jecxz
push
fs
inc
movsb
dec
es
iret
dec
iret
push
xlat
stc
xchg
jne
shlb
into
or
lock
scas
xlat
jg
cld
inc
pop
icebp
add
mov
ja
out
mov
sbb
mov
push
inc
mov
lea
ret
mov
sub
sbb
push
sarl
hlt
imul
sub
xchg
pop
popa
ljmp
in
cwtl
and
cmpsb
sub
imul
stos
nop
xchg
and
leave
push
add
mov
shlb
fs
cmpsl
addb
push
cmp
fdivrs
ret
stos
jle
or
andl
cmpsb
mul
mov
shl
xor
jmp
cmp
pusha
sti
mov
jne
adc
stc
cmpsl
in
shlb
xchg
cwtl
mov
enter
fisttpl
repnz
jg
in
scas
inc
fsubl
cmp
mov
sub
mov
mov
push
xchg
adc
xchg
jg
dec
sbb
inc
mov
sub
mov
mov
mov
and
mov
jae
push
and
lods
jl
lret
test
mov
jae
popf
pop
dec
jp
leave
insl
js
enter
add
mov
sbb
add
inc
adc
xlat
loopne
mov
mov
jne
xchg
xlat
jp
mov
adc
dec
mov
sub
jge
xlat
sub
mov
jle
jmp
scas
mov
lea
pop
iret
lds
sar
mov
loopne
out
cwtl
lds
fiadds
daa
dec
xchg
mov
out
mov
or
scas
aam
in
push
dec
pop
fs
repnz
pop
into
std
stc
push
call
movntq
cmp
cmp
xor
pop
lret
pop
nop
icebp
popf
clc
mov
cmp
sbb
pop
aas
adc
push
push
xchg
in
push
dec
pop
xor
fistpll
lods
out
xchg
cli
pop
and
xchg
and
dec
lock
add
div
and
inc
test
xor
int
push
push
pushf
or
pushf
pusha
mov
mull
ds
test
inc
shlb
fsubrl
jmp
sti
lcall
loope
fldcw
lcall
mov
mov
jo
cmpsl
pop
push
ss
imul
fwait
bound
insl
loopne
mov
insb
fldt
jp
or
xchg
pop
pop
cmp
push
add
dec
or
iret
sbb
adc
mov
and
jb
mov
out
jge
clc
adc
mov
adc
cld
aas
pop
cmp
xor
xchg
inc
int
push
fcmove
push
pop
mov
mov
mov
sti
popa
add
fcomps
pop
sbb
add
paddsb
xchg
icebp
push
ret
out
or
mov
aas
push
mov
mov
shlb
lea
adc
xor
lret
stc
pop
and
push
lods
lods
cs
push
sbb
xorb
je
adc
inc
pop
negb
pop
xchg
push
shrb
aam
mov
xchg
imul
sahf
out
aas
inc
or
xlat
jo
lret
shl
filds
xor
cmp
dec
and
add
das
sub
out
imul
addr16
dec
and
mov
mov
in
cmp
ret
add
sub
out
jecxz
dec
imul
sub
aam
mov
outsb
cmp
call
imul
call
iret
clc
push
xor
test
pop
jbe
mov
xchg
jne
pop
push
push
int
lret
cmpsb
test
loop
pop
or
jp
mov
sub
rclb
int
cmpl
xchg
mov
xchg
neg
add
sbb
cmpsl
lcall
mov
popa
jae
sbb
std
xor
das
loop
lcall
lahf
push
jns
aas
add
xor
mov
aaa
iret
icebp
aad
add
sub
or
sahf
out
imul
pop
mov
sbb
test
sub
jne
xchg
jl
cmp
imul
pop
jbe
pop
arpl
rclb
lret
xchg
roll
int
repz
addr16
stos
cmp
out
mov
out
pop
inc
cmpb
cwtl
dec
insl
loope
mov
out
mov
and
push
add
xchg
insl
and
mov
rcrl
pop
xchg
inc
sbb
cs
popf
aad
add
pop
dec
adc
aas
negb
icebp
imul
cmc
pop
and
ss
dec
mov
nop
xor
xchg
popf
mov
addr16
arpl
repnz
cmp
mov
cli
mov
jns
ljmp
dec
inc
iret
cmc
sbb
imul
add
fwait
inc
sbb
push
sub
xchg
or
jge
aas
mov
mov
std
push
inc
jb
negl
aad
xchg
jbe
mov
test
mov
pop
jae
cmp
fsubl
pop
cwtl
icebp
mov
fcompl
insl
pusha
ret
in
outsb
inc
jmp
sbbb
xchg
cwtl
xchg
or
in
outsb
mov
lds
inc
das
pop
jae
adc
aad
inc
psubb
imul
shlb
pop
out
imul
jne
int
sub
jb
ficomps
mov
xor
fcmovnb
push
jne
mov
ds
dec
cmp
sbb
cmp
sub
and
inc
les
cmp
jae
inc
sbb
out
add
popa
icebp
pop
lcall
push
stos
fdivl
pushf
out
lds
bnd
sub
shrl
mov
outsb
shll
les
into
cmc
cmp
cmpsb
xchg
ret
lcall
and
mov
sub
cli
jg
jnp
push
mov
pop
jnp
adc
push
or
mov
outsb
add
and
pop
xchg
sarl
cmp
in
dec
inc
int3
fisttpll
mov
cmp
push
mov
cs
fsubp
add
fldt
or
hlt
cmp
sti
cmc
testb
cmpsb
mov
scas
lods
push
leave
loope
pop
daa
jmp
mov
cmp
dec
sahf
push
push
jae
aad
xor
sub
inc
into
push
or
sub
movsl
pop
popa
lret
in
mov
call
popa
sub
sub
dec
sbb
or
jno
ljmp
mov
ret
mov
ret
mov
sahf
sbb
cmpsl
bound
fsts
pop
icebp
mov
pop
jno
mov
dec
dec
jecxz
inc
in
pop
out
cmp
pop
dec
mov
shrl
push
hlt
stc
cltd
mov
lods
test
pop
rclb
mov
inc
les
mov
in
dec
shrl
jns
mov
push
int
xchg
pop
mov
in
hlt
xor
in
xchg
mov
dec
addr16
scas
loope
inc
out
mov
adc
mov
cmpsb
jbe
inc
push
into
out
sub
cwtl
testl
pop
fs
mov
adc
bound
mov
cmp
push
dec
out
clc
xchg
cmp
std
aas
lods
mov
mov
dec
push
movsb
hlt
xlat
inc
imul
cmpsb
inc
outsb
cmp
jnp
pop
mov
push
or
popf
or
ss
inc
sahf
cmpsl
imul
xor
into
jae
inc
dec
sahf
xchg
add
cmp
xor
jmp
push
dec
mov
test
jg
mov
fsubrp
movsl
jno
std
and
loopne
pop
nop
lahf
and
in
adc
popa
jmp
pop
js
sub
or
faddl
insb
fdivr
loopne
pop
sbb
add
push
and
test
ret
lods
sbb
aas
xchg
cltd
mov
divl
adc
pop
jbe
stc
add
into
mov
aas
in
in
sbb
int
or
push
out
push
mov
jnp
mov
mov
clc
jmp
lock
or
or
jl
mov
jne
arpl
dec
and
out
push
sub
aad
xchg
mov
stc
pop
jle
adc
dec
dec
fdivs
inc
ss
inc
andb
out
mov
stos
jb
fwait
jne
mov
cmp
jbe
push
leave
aas
cwtl
push
mov
sbb
mov
inc
fsubl
aam
cmpsb
iret
leave
mov
adc
push
ja
dec
xchg
jne
pop
shll
mov
dec
enter
movsb
lahf
jmp
in
mov
lret
adc
ljmp
jl
cmp
data16
adc
out
lret
pop
stos
dec
xchg
int
cmp
pop
mov
js
xchg
mov
xchg
popa
sub
inc
jns
and
iret
cmc
loope
sub
aam
movsbl
call
cmpsb
insl
in
mov
mov
cmp
aad
shrl
dec
les
xchg
cmpb
rclb
ret
lods
dec
lea
jg
orl
mov
mov
jnp
cmpsb
std
outsl
test
stc
arpl
jno
or
sbb
sub
mov
inc
filds
cwtl
cld
mov
jo
movsb
mov
inc
pop
mov
lcall
add
repnz
jne
and
loop
mov
sub
xor
xchg
je
aas
clc
or
mov
and
out
pop
pushf
mov
sbb
cmp
cmp
int
jecxz
mov
xor
call
scas
std
test
into
xchg
sbb
mov
aad
dec
sub
outsb
mov
push
icebp
fwait
push
mov
enter
mov
ja
inc
aas
xor
pusha
push
sub
pushw
in
inc
xlat
add
pop
cmp
adc
icebp
cmp
mov
mov
rorb
cltd
or
orl
imul
bound
dec
addr16
jge
cld
int3
inc
xor
adcb
mov
lds
mov
lods
inc
inc
pusha
icebp
dec
push
arpl
pop
sub
lcall
xor
and
std
iret
cmp
xor
lods
iret
sbb
jno
push
pop
cmp
lods
dec
std
mov
adc
rclb
add
and
bound
push
push
cwtl
jp
out
mov
or
lea
aad
movsl
fstl
xchg
movsl
arpl
jp
int
lret
clc
xchg
xlat
push
cmp
push
add
pop
lahf
aad
and
out
cmc
sub
add
xor
add
stos
xor
mov
or
inc
add
push
movl
fimull
sub
popa
ss
inc
jg
push
outsb
rcl
pop
and
jmp
les
and
and
sub
jne
sahf
rolb
and
add
dec
inc
xor
fiadds
idiv
aad
cwtl
sti
and
and
xor
xlat
fs
shll
and
stos
loopne
push
mov
jae
lahf
cltd
dec
or
inc
jnp
pushl
mov
pop
and
mov
push
pushl
sbb
in
mov
cmpsb
push
movsl
shl
sbb
inc
mov
aam
shlb
fidivrs
icebp
dec
dec
mov
or
dec
dec
data16
outsb
and
out
xchg
and
std
jnp
and
loop
mov
insl
enter
mov
dec
cwtl
cwtl
stos
jnp
enter
jbe
gs
jecxz
push
pop
pop
mov
addr16
jns
sub
and
add
mov
std
pop
add
xchg
std
fwait
sub
push
mov
inc
adc
xlat
pop
movl
xor
mov
sub
sub
fwait
test
sub
jns
imul
cld
sarl
pop
sbb
jnp
out
xchg
push
jmp
adc
and
mov
add
sbb
mov
jge
outsb
std
sub
mov
jmp
cmp
cs
out
push
imul
lock
lea
outsl
pusha
nop
scas
in
movb
inc
imul
filds
fsubl
inc
mov
dec
xor
jb
xchg
push
jecxz
or
jg
push
les
push
mov
je
add
mov
mov
iret
hlt
notl
iret
push
loopne
cld
mov
aad
lods
xor
mov
lcall
int
repnz
dec
stos
sbb
aas
arpl
mov
mov
gs
cld
movsl
sub
lcall
inc
xlat
adc
pushf
or
daa
mull
das
adc
cmpsl
mov
lea
test
test
aad
jmp
or
sarl
movsl
mov
test
mov
xchg
cmp
imul
pusha
add
lret
and
and
mov
mov
pop
ret
add
mov
in
and
imul
inc
repz
sub
outsl
subl
jl
frstor
arpl
fidivs
repz
ret
inc
pop
pop
mov
lret
mov
icebp
dec
and
lods
inc
aad
aad
jmp
iret
push
std
and
and
fstl
or
shl
pop
inc
pop
mov
dec
adc
fstpl
outsl
push
cmc
and
push
xor
arpl
test
xchg
mov
es
out
inc
out
fimuls
and
cmc
xchg
mov
pop
cmp
lcall
notl
loopne
pop
mov
mov
test
jl
stc
div
sbb
push
sbb
xor
pop
lock
mov
ss
dec
cld
cmpsb
pop
push
je
test
outsb
in
shl
inc
jecxz
ret
xchg
mov
xchg
dec
push
clc
push
les
leave
sub
xchg
jne
lret
pushf
pop
das
aam
cmp
pop
addr16
xor
cwtl
add
vxorps
dec
push
jns
dec
mov
inc
xchg
out
loop
push
lahf
out
arpl
jo
in
sbb
xor
stos
sahf
xchg
push
imul
in
jmp
xchg
pop
addl
xor
subb
dec
sbb
andl
arpl
cmpsb
inc
popa
fildll
insl
lahf
mov
sub
cwtl
mov
orl
out
mov
mov
lcall
push
push
mov
fldl
ds
xor
sti
push
adc
xchg
mov
mov
push
jge
xchg
loopne
insl
push
jb
scas
lock
pop
fdivrs
xchg
movsb
push
and
pop
jb
pop
mov
xor
mov
inc
xor
in
cmp
mov
push
xchg
dec
das
call
addr16
cmp
dec
leave
aas
mov
enter
inc
ss
push
or
orl
fs
xchg
leave
jle
inc
pop
push
mov
enter
sti
dec
and
sub
mov
or
xchg
loopne
aas
mov
sub
dec
jl,pn
xchg
imul
shrb
adc
adc
daa
pop
mov
jle
push
dec
dec
xchg
cld
push
xchg
mov
cmpsl
mov
mov
test
shrb
adc
testl
stos
sbbl
inc
sbb
dec
lcall
and
pop
jl
xchg
pop
lds
xor
mov
subb
je
push
xor
lahf
lods
cmpsb
mov
out
cmp
out
sti
mov
jo
push
jae
lods
ret
xchg
mov
cmc
ljmp
ljmp
cmp
adc
hlt
adc
shlb
lock
cmc
mov
je
adc
mulb
imul
jl
mov
pop
add
outsb
js
arpl
add
cmp
and
mov
mov
push
imul
inc
sbb
sub
icebp
mov
clc
xchg
mov
push
insb
jl
jmp
xlat
jns
lahf
push
in
cmp
testl
jo
stos
outsb
cmp
xorl
push
lret
leave
in
movsb
cltd
jle
lret
add
lret
mov
cmp
xor
pop
loop
popf
loopne
adc
adc
mov
ss
push
call
inc
cmpsl
out
mov
inc
out
and
dec
sbb
out
jle
mov
jmp
int3
lock
adc
or
fidivs
push
pop
push
mov
jmp
jns
adc
stos
push
pop
scas
int
arpl
xor
mov
jl
xor
push
jl
xchg
je
xlat
and
push
inc
data16
sub
cwtl
aad
loopne
dec
cmp
imul
dec
rcrl
jns
fwait
in
xor
les
mov
popf
mov
sbb
fimuls
ret
pop
sahf
jle
cli
dec
inc
mov
addb
adc
loop
hlt
ret
jno
or
fcoml
or
xor
sbb
mov
push
and
cmp
outsl
push
push
fcompl
leave
pop
ds
imul
movsl
lahf
lret
sbb
in
xchg
movsb
bsf
int
jge
js
cmp
scas
pop
lods
aas
xor
rcrl
cs
xchg
in
adc
jle
sti
pushw
jecxz
pusha
xchg
cmp
adc
stos
pushf
frstor
mov
or
and
cli
subl
push
sub
lods
repz
pop
mov
ret
mov
push
ja
clc
push
push
sahf
xchg
aas
sahf
fucomp
mov
push
sbb
out
enter
jo
push
mov
repnz
push
dec
js
mov
ror
in
xchg
sbb
add
push
push
lret
popl
sbbb
jbe
aaa
fmull
ss
dec
xchg
sub
or
mov
adc
jecxz
int
fnstenv
xchg
call
cli
bound
imul
repz
aaa
rcl
add
int3
cs
adc
gs
sti
mov
enter
xor
mov
addb
std
jns
nop
xchg
and
cmp
sbb
in
sub
repnz
bound
xchg
nop
shll
sbb
sbb
nop
mov
inc
push
sbb
test
cmp
sbb
adc
mov
std
mulb
add
dec
mov
push
lahf
pop
or
mov
inc
rorb
cli
and
in
cs
cmp
popf
xchg
xor
xchg
gs
nop
fsub
pop
cltd
fistpll
fwait
mov
mov
dec
test
inc
lods
add
jo
fists
dec
pop
dec
xor
lds
inc
mov
jg
pop
shll
loop
xchg
hlt
cld
rcll
pusha
outsb
mov
mov
in
in
jbe
mov
mov
dec
shl
adc
test
int
insl
or
icebp
dec
in
push
push
sti
cwtl
into
pop
stc
mov
lcall
filds
jo
xor
push
lret
lods
movsl
jno
scas
jb
jmp
arpl
test
ja
mov
ret
inc
push
dec
fsubp
mov
jecxz
arpl
mov
rolb
jge
lock
ret
xor
inc
lock
outsb
icebp
lods
jle
mov
insl
shll
sub
dec
cmp
xchg
jecxz
lds
mov
fisttps
cmp
lret
lds
xchg
mov
mov
pop
and
enterw
jp
cmp
daa
add
aaa
in
shlb
inc
test
cld
xor
mov
xor
dec
out
jno
push
les
pop
enter
loop
jae
cmpsl
fs
stos
cmp
xchg
add
mov
xchg
in
test
scas
lcall
fldl
insl
shrl
push
mov
stos
pop
dec
mov
nop
sti
adc
lcall
pop
mov
or
loop
shlb
mov
out
fidivrl
out
sbb
cld
sub
fimuls
dec
lret
repz
adc
cmp
push
es
mov
or
xchg
jb
mov
or
jne
xchg
ret
push
jmp
ljmp
sub
inc
popa
cmp
stos
aad
jmp
push
pop
sub
sub
repnz
ret
xchg
nop
pop
add
jno
pushf
xchg
ja
shrb
jne
adc
xchg
out
cli
std
rorl
push
arpl
cld
xchg
sbb
push
outsb
loop
insl
mov
sub
sbb
sbbb
cmp
xor
mov
lock
in
fsubs
pop
sub
sbb
xchg
dec
jle
ja
and
popa
mov
stos
sub
out
popa
test
bound
cli
lret
lock
dec
or
jno
popa
inc
cli
xor
repnz
lahf
jge
leave
jnp
pushf
addb
xchg
in
js
lods
pop
adc
sub
iret
push
ds
mov
sbb
mov
lds
and
jp
inc
addb
cltd
dec
pop
lret
gs
mov
pop
push
les
mov
lahf
repz
push
lcall
push
sub
push
sub
out
movsl
adc
mov
enter
popa
xchg
fcompl
mov
add
mov
inc
add
bound
sti
xchg
adc
lods
mov
int3
fs
lds
xor
enter
sub
lcall
or
jle
je
mov
push
mov
or
call
nop
sbb
mov
in
push
imul
mov
push
mov
fists
mov
sub
xlat
adc
push
lea
inc
movsb
pop
test
negl
fists
inc
pop
sahf
xchg
fucomp
jg
jnp
push
adc
idivb
push
xchg
fdivrl
or
mov
and
out
push
add
jo
lcall
push
aam
mov
mov
push
xchg
mov
add
push
jae
jnp
or
mov
outsb
jl
jmp
in
loopne
jmp
cmpsb
xor
outsb
inc
in
push
mov
das
fs
cmp
xchg
cmc
iret
jne
emms
fistl
mov
lea
mov
aas
mov
add
inc
push
add
lcall
or
mov
cld
int3
dec
sbb
push
mov
clc
jns
inc
add
xor
sbb
in
cwtl
and
sub
stc
xchg
add
mov
movsb
test
mov
dec
vphsubdq
loope
mov
xchg
fsubrs
out
scas
push
dec
scas
mov
xchg
inc
jo
cmp
and
dec
adc
dec
bound
and
cmp
pop
shlb
xor
paddsw
mov
and
adc
test
fs
sub
scas
scas
adc
pop
filds
int
roll
out
imul
fcos
mov
xor
mov
out
ss
xchg
jo
jnp
test
psadbw
inc
sub
shrl
xchg
adc
fidivrl
sbb
pop
rcrb
roll
fistpl
or
sbb
icebp
fidivrs
push
fidivrs
or
jge
std
aas
insb
scas
loopnew
dec
or
push
leave
in
rorb
ret
adc
dec
stc
divb
setno
xor
sahf
adc
stc
imul
insb
mov
jg
cmpsb
jbe
mov
dec
outsb
nop
scas
push
adc
in
bound
push
or
jnp
sti
push
rorb
test
ffreep
adc
lahf
aad
movsb
mov
stos
xchg
jns
pop
lret
stc
mov
mov
fucomp
cmp
outsl
cwtl
adc
repnz
mov
pop
push
jo
pushf
insl
aad
cmpsb
fs
and
sub
cli
lods
rcr
or
out
cli
dec
shrl
sub
jo
cmpsl
push
jno
mov
outsl
filds
jb
cmp
imull
and
repz
or
aam
into
imul
in
adc
and
cmpsb
js
movswl
aas
adc
sbb
inc
lods
dec
insl
pop
jnp
scas
in
cmp
out
inc
pop
and
jp
insb
into
inc
dec
sbb
enter
sub
add
idivl
jnp
stos
in
and
sbb
jge
or
loopne
mov
aas
sub
mov
cmp
xchg
sbb
mov
sub
sub
jg
cs
je
jbe
push
movsl
inc
cwtl
ror
mov
cmp
xor
rol
negb
cmp
int
sarb
xchg
lret
ret
and
xchg
pop
dec
loopne
mov
movsb
sub
leave
pusha
arpl
inc
xor
mov
mov
cld
pop
cmp
pop
js
add
inc
hlt
repz
cwtl
adc
int3
fucomip
je
sub
sub
cltd
add
pop
pushl
push
in
rol
das
insb
aad
test
mov
xchg
jp
sub
cltd
mov
adc
in
shll
ljmp
es
mov
xchg
imul
sub
scas
popf
shll
shrl
int3
and
and
shlb
rclb
ss
int
mov
push
jle
ss
mov
push
pop
pushf
mov
cmp
dec
cs
push
pop
test
push
int3
add
test
or
es
lret
mov
push
inc
mov
push
scas
movsb
mov
push
adc
lahf
enter
into
orl
aaa
pop
pop
jp
adc
bound
mov
dec
lret
jae
jbe
mov
adc
mov
test
inc
fneni(8087
or
gs
sbbl
sbb
dec
in
dec
in
add
cmpsl
adc
xor
bnd
lcall
inc
cwtl
push
insl
faddl
out
pushf
add
cs
sbb
das
add
dec
imulb
jle
out
lods
xchg
sahf
mov
adc
jecxz
lock
addr16
sti
add
adc
inc
mov
mov
out
dec
je
mov
xchg
fisubl
in
dec
xorl
cmp
mov
sti
sub
jno
dec
xchg
stos
mov
in
mov
fs
gs
std
mov
inc
aam
cmpsb
and
mov
fwait
insl
or
sarl
ss
jl
fstps
sub
push
mov
adc
fisttpll
mov
out
push
xchg
adcl
addr16
outsb
mov
cltd
push
ret
adcl
inc
ja
andl
sub
aaa
mov
inc
sbb
cltd
gs
xchg
inc
cmp
pop
fsubp
daa
out
sub
cmp
sbb
mov
movsl
mov
cmp
stos
cmp
insb
and
or
lds
jp
addr16
out
pop
cli
dec
in
or
rcl
out
mov
and
jbe
xor
in
rcr
adc
punpckldq
rol
movsl
stos
vmread
mov
repnz
push
mov
jo
sub
lods
aas
sub
fldenv
sbb
ret
adc
fsubrl
push
dec
pusha
stos
fcmovb
shlb
jl
iret
pop
adc
sub
scas
add
iret
inc
lock
mov
sbb
roll
cmp
enter
mov
pop
out
mov
aad
imul
xor
insb
repz
cwtl
inc
aaa
adc
test
inc
mov
cltd
dec
jns
js
xor
sub
loopne
jmp
xor
jl
adc
adc
dec
inc
bound
fstl
cmp
in
dec
stos
cmp
test
int3
mov
sbb
test
lock
sbb
out
xchg
xchg
int
test
ds
bound
cs
addr16
call
rcll
fisttpl
adc
push
in
ljmp
sbb
xchg
js
ror
and
andl
cmp
call
adc
in
xchg
fcomi
out
jne
jnp
pop
sbb
mov
addl
lcall
sub
or
dec
mov
dec
push
jo
xchg
dec
sub
addr16
xchg
push
imul
insl
inc
add
mov
lock
das
mov
in
hlt
adcl
xchg
jge
shlb
cld
xor
dec
dec
jge
dec
xchg
sbb
sbb
mov
sbb
pushf
lea
arpl
mov
dec
xchg
cld
xor
push
pop
push
push
sub
sbbl
in
sti
pop
sbb
fstl
xlat
mov
rorl
jle
js
cmp
jo
jecxz
nop
repnz
std
sub
dec
ret
cli
icebp
mov
test
adcb
orb
icebp
xchg
xchg
arpl
xor
mov
jo
test
lcall
sub
loopne
cli
into
and
adc
inc
dec
cmp
bound
push
or
rcl
sbb
mov
lret
dec
sub
out
dec
xchg
jbe
lock
scas
push
push
adc
stos
out
ss
jp
adc
negb
shrb
inc
pop
insb
jg
movsl
dec
cld
idiv
add
xchg
das
sbb
lcall
daa
xchg
add
push
popa
adc
mov
mov
mov
aas
or
mov
pop
and
dec
sub
pop
xchg
jae
sbb
or
insb
or
pop
pop
scas
sbb
or
pop
int
cltd
adc
daa
out
in
into
incb
push
pop
test
sub
pop
pop
pop
lahf
loope
add
and
adc
push
inc
push
ljmp
inc
popa
mov
push
mov
lret
push
in
inc
insb
cli
add
jle
sub
popa
xchg
mov
lret
hlt
in
add
pop
add
lods
rorl
imul
outsb
and
xor
ret
push
iret
idiv
or
pop
fsubl
shl
mov
leave
and
fdivs
popf
ja
stc
aad
and
loopne
js
adc
ffree
sti
push
out
gs
cmpsb
mov
sub
jmp
sub
out
and
and
xor
repz
sbb
mov
lods
mov
mov
cmpsb
sub
fistps
movq
xor
call
and
fldt
pop
gs
hlt
outsl
or
jb
mov
test
xchg
inc
pop
jecxz
xchg
stos
inc
int3
stc
jg
cmp
addl
nop
cwtl
adc
imul
lcall
push
xchg
mov
pusha
mov
dec
std
enter
cmp
or
je
sub
insb
or
in
hlt
pop
mov
in
sbb
imul
out
and
jae
sbb
pushf
aam
adc
push
pop
incb
cmp
fs
xlat
pop
cltd
outsb
aaa
xor
xchg
leave
xchg
adc
push
jnp
pop
sti
jge
arpl
jge
gs
and
pop
push
aad
les
dec
mov
jno
inc
and
stos
mov
loopne
pushf
pushf
cltd
dec
dec
loopne
out
dec
add
push
adc
adc
jno
mov
aas
sbb
sbb
pop
test
out
adc
faddp
cmp
loop
jg
out
add
adc
das
shr
movsb
adc
jp
jecxz
jbe
cmp
xchg
nop
mov
mov
sarl
adc
push
push
in
sub
or
and
addl
add
and
test
addl
mov
push
jl
int
push
cmp
pop
cmpsl
fmuls
notb
test
aaa
addr16
or
push
stos
cmp
mov
sbb
pop
push
sbb
cmp
push
pop
dec
cs
sarb
test
xchg
xor
movb
int
imul
daa
mov
lahf
mov
jg
cltd
push
aaa
outsl
cwtl
pop
adc
cwtl
fists
mov
xchg
cmp
rcll
sti
xchg
andb
dec
aaa
or
vpsubsb
adc
jbe
movsl
jp
mov
mov
push
mov
mov
call
mov
sbb
mov
data16
pop
mov
es
fisttps
fbld
sahf
out
jge
cmpsb
cld
es
lock
and
outsl
lock
and
popf
lret
add
or
cmp
and
push
jp
fucomp
cmp
mov
popf
outsl
iret
xchg
stos
or
gs
aas
xor
pusha
jns
push
dec
fcomps
or
testl
int3
cmp
push
and
fs
adc
mov
and
dec
gs
test
insl
in
in
dec
andb
mov
add
loop
fnstsw
iret
loopne
lods
movsl
cmp
xchg
lds
jg
mov
fwait
out
sbb
push
leave
jp
mov
ja
mov
push
xor
pop
pushf
inc
insl
fwait
lret
pop
push
out
addr16
incl
fadd
mull
mov
jmp
ja
sahf
imul
jg
test
xchg
ja
sub
push
push
xchg
pop
push
out
fildl
pop
cmp
sbb
push
call
or
pop
jl
xor
adc
mov
sbb
mov
jp
mov
push
jle
push
pop
call
inc
scas
mov
inc
jmp
push
sbb
test
jle
cmp
enter
jmp
incb
pop
iret
xchg
and
jb
jae
fdivr
cltd
fdivl
mull
mov
shr
xchg
movsb
test
dec
mov
jl
mov
cs
rorl
outsb
sub
cmp
loop
mov
and
jp
movsl
lock
mov
cmpsb
std
sbb
orl
push
dec
lods
mov
dec
sti
push
add
mov
inc
jmp
push
mov
pop
or
cmp
nop
jl
or
mov
cmpsb
fcoml
pop
mov
inc
loopne
add
pusha
mov
movsb
jmp
decb
pop
imul
loope
inc
or
aam
ficompl
push
add
dec
out
clc
cmp
mov
repnz
hlt
pop
bound
fnstsw
pop
scas
xchg
pop
out
aam
in
ljmp
jmp
mov
mov
int3
shll
mov
outsl
stos
mov
pushf
mov
add
lcall
lock
lret
cmpl
lret
addl
xchg
sub
jns
xchg
inc
pop
inc
pop
cld
fisttps
loop
jnp
push
popf
push
dec
test
in
loope
cmpsl
sbb
nop
or
adcb
push
adc
sbb
sbb
clc
mov
sub
or
mov
xchg
pop
lds
jg
sbb
xchg
out
mov
sub
jp
cwtl
popf
aas
arpl
dec
aad
inc
mov
sub
xchg
jno
pop
lret
jge
mov
movsb
adc
pop
add
xor
adc
daa
push
sbb
out
call
xor
push
divb
xlat
aas
fucomp
clc
sub
xchg
rcll
fsts
mov
cmp
shll
pop
sbb
jne
mov
cs
popl
push
adc
rorb
out
scas
pop
inc
jbe
int
or
fnsave
outsb
neg
mov
stos
mov
adc
mov
push
xlat
mov
or
xor
int
cld
and
fwait
add
mov
sarl
xor
mov
jns
cwtl
mov
sub
mov
xorl
inc
and
jnp
push
dec
cmp
testb
or
ret
stos
cld
cmpb
aaa
mov
cltd
push
mov
call
data16
cld
push
dec
lahf
cmpsb
ds
mov
outsb
cmp
adc
mov
xor
movsb
sti
mov
rdpmc
push
mov
dec
dec
mov
mov
data16
sub
xchg
and
lcall
stos
and
cwtl
cmpsl
lret
stos
rcr
jge
push
dec
stos
cmp
ficompl
jle
enter
and
scas
mov
nop
dec
dec
loop
int3
or
and
jecxz
or
lea
cmpl
jmp
cli
jno
pop
iret
pushf
push
cmp
roll
fdivs
addr16
mov
pop
js
out
pop
rcr
dec
call
fs
push
inc
push
pushf
adcl
jb
sarl
js
ss
mov
lcall
stc
dec
scas
aam
in
mov
cmp
xlat
pop
insb
test
mov
lret
or
lret
hlt
das
gs
xchg
jmp
in
jno
push
push
rorb
in
cld
inc
imul
dec
gs
and
add
ret
mov
sbb
xor
sub
test
ljmp
pop
gs
mov
cmp
pop
jne
js
pusha
add
mov
in
fisubrl
mov
and
xlat
jbe
push
gs
cmp
mov
add
sbb
dec
aam
sbb
mov
push
out
test
inc
ret
lret
xor
jns
fisttpl
xchg
lea
shl
in
rcl
xchg
mov
or
sub
push
clc
bound
das
jbe
icebp
shll
or
je
jns
cs
cmp
jg
mov
outsb
sub
push
negl
shll
out
sub
xor
gs
pop
sbb
lret
mov
lret
dec
fldcw
add
lret
cmpsb
pop
icebp
sub
or
add
and
xchg
or
inc
incl
test
cmp
and
fucomi
mov
mov
ja
pop
icebp
push
mov
jb
imul
out
out
adc
jns
mov
jmp
or
out
mov
push
pop
out
sahf
push
and
xor
jecxz
xlat
mov
mov
or
js
movsb
or
ror
push
cmpsl
test
pop
int3
das
sub
int
inc
mov
stc
rcll
push
ljmp
idiv
or
mov
xchg
aas
shl
dec
mov
cmp
xchg
lds
mov
scas
fadds
or
mov
stc
pop
negb
addr16
ds
cltd
mov
leave
scas
insb
repnz
add
cwtl
xchg
icebp
popl
movsl
cmp
fidivrl
dec
adc
cltd
dec
mov
sti
shll
xchg
sahf
sub
in
push
aam
cli
mov
or
je
fdivl
enter
inc
xchg
daa
ljmp
and
sub
mov
xor
arpl
push
lds
adc
iret
pop
mov
cmp
add
icebp
lods
lock
mov
movsb
lret
ds
test
lea
std
sbb
pop
pop
test
jae
or
push
push
mov
aam
push
int3
fidivrs
sbb
dec
insb
push
sub
or
iret
hlt
cmp
cmpsb
cld
dec
jge
mov
sbb
xor
mov
jl
cmpsb
mov
mov
pop
or
inc
and
mov
jne
and
stos
cmp
popf
pop
sbb
lds
outsl
enter
add
xor
test
decb
arpl
dec
pop
lea
inc
or
push
adc
adcb
mov
add
lods
and
loope
cli
lcall
data16
dec
add
nop
int
dec
lahf
sub
mov
into
inc
aam
dec
adc
mov
add
fldl
in
ss
dec
mov
out
mov
xor
pop
mov
push
cmpsl
jecxz
or
leave
adc
popa
pop
out
xchg
and
dec
or
fnstcw
out
adc
clc
enter
dec
repz
jo
jp
adc
cmp
daa
add
loopne
dec
int
jns
sub
pop
fstpl
cld
or
aad
add
or
pop
inc
mov
test
pop
dec
sbb
push
in
loope
or
test
pop
mov
push
lea
push
lods
iret
cmp
imul
sub
iret
movsl
divl
sub
movsl
adc
sub
pop
mov
inc
or
add
leave
or
stc
sahf
jge
cltd
or
loopne
xchg
stc
pop
ficomps
pop
mov
sub
std
lahf
sbb
or
test
lock
cmpb
and
mov
xor
ds
dec
jns
push
mov
icebp
cmp
fisubl
push
xor
repnz
or
inc
and
cmpsb
mov
push
imull
add
xlat
jecxz
nop
xor
cmp
inc
adc
ss
or
in
push
sbb
ret
sbb
inc
cmp
out
scas
gs
aas
adc
pop
andl
push
imul
cmpsl
nop
cltd
dec
mov
mov
test
loop
cmp
les
cli
mov
push
data16
jp
outsl
insl
mov
fmuls
mov
in
lret
out
bound
pop
jecxz
add
punpckhbw
mov
or
xchg
jge
or
ffree
jne
xchg
xchg
sbb
sbb
mov
xor
int3
sub
or
pusha
jl
push
or
jle
jg
sti
stos
or
push
jmp
mov
jo
out
and
jg
mov
addl
clc
dec
outsb
ret
sbb
insb
gs
xchg
in
test
in
jecxz
dec
loop
pusha
push
cmp
addr16
and
push
in
or
cltd
pop
cmpsl
icebp
shll
xchg
sub
outsb
stos
adc
jp
jge
cmp
push
mov
add
push
test
cmpl
imul
mov
jp
mov
cmp
in
inc
test
call
inc
jae
mov
cltd
stos
adc
fisubrl
jecxz
jl
jmp
dec
bound
fldl
ret
dec
mov
out
inc
dec
sub
std
and
sbb
add
pop
ljmp
pop
test
adc
pop
jmp
mov
cmc
iret
or
shll
sbb
in
push
push
ss
int3
bound
push
test
aaa
movsb
push
sbb
mov
stos
scas
pop
fwait
cmpsb
sub
push
adc
sbb
leave
stc
iret
jecxz
xor
xchg
das
loop
cmp
push
add
fisubl
cld
rol
ds
shll
fs
movl
cmpsl
in
jp
stos
sub
pop
scas
dec
addr16
into
xlat
int
sbb
mov
icebp
mov
jno
xchg
insb
ret
and
or
idivl
jb
push
push
jle
add
and
push
fs
adc
mov
xor
inc
js
test
sbb
or
out
addb
roll
push
mov
add
sub
xchg
mov
push
and
mov
dec
imul
add
out
xor
jle
jbe
or
cmp
adc
jae
popf
fcoml
xor
jnp
mov
inc
out
fadds
cwtl
pop
mov
out
or
xchg
mov
and
pop
push
mov
or
in
pop
pop
int
pop
movsb
mov
pop
stos
fsub
es
shll
fnstsw
stos
cmp
loopne
mov
sub
int
sbbb
mov
repz
jmp
mov
sub
mov
inc
add
pop
and
mov
pop
fldl
mov
movsl
cmp
adc
arpl
cmp
cmpsb
xor
push
repz
dec
cmpsb
jb
cmp
push
pop
mov
add
mov
xchg
dec
inc
dec
push
insl
in
aad
xorl
add
sub
fsubrs
lods
add
sbb
push
dec
mov
adc
stos
xchg
enter
dec
pushf
roll
jl
mov
mov
icebp
xchg
fbstp
mov
jns
sbb
add
mov
sub
std
xor
fwait
push
pop
in
sbb
sub
scas
mov
xorb
mov
insb
pop
lahf
mov
push
sti
dec
out
fdiv
test
push
xor
xchg
push
jmp
and
sub
and
mov
rcr
pop
in
jl
adc
jo
mov
lock
xorb
in
jmp
xor
push
mov
out
mov
loopne
push
mov
push
mov
push
mov
dec
lods
fs
fldt
rclb
fwait
call
mov
in
imulb
lahf
xchg
mov
or
and
aaa
xchg
adc
movsl
pop
aas
jb
ljmp
inc
jge
mov
cmp
loopne
or
mov
pcmpgtb
bound
shlb
or
pusha
push
or
lds
movsb
cli
mov
xor
testb
sub
rorb
xor
cmp
pusha
or
xchg
push
repz
shrb
fsubl
adc
out
rcrl
rcl
das
lahf
xchg
or
jmp
push
mov
xor
xchg
call
add
lret
mov
mov
mov
sub
jecxz
cmp
popa
pop
fucom
fs
movb
push
xchg
push
shlb
sahf
fnstenv
ret
push
push
insl
loopne
push
mov
push
mov
push
jbe
int
mov
in
adc
mov
adc
mov
stos
sbbl
stos
push
fadds
sub
lahf
dec
jle
mov
add
lods
mov
and
mov
std
add
xor
test
add
dec
or
and
lret
je
inc
jb
shr
sub
test
mov
jns
cmp
or
in
add
popa
int
mov
xchg
insb
subb
mov
mov
or
xchg
loopne,pn
rcl
loop
pushf
push
push
lret
adc
pop
arpl
ds
ret
push
lret
push
fisubs
inc
popa
dec
es
pop
xchg
xchg
jns
push
or
movsb
ds
andl
xchg
xchg
xchg
pop
xchg
xor
and
jb
lahf
and
shl
push
inc
cmp
sub
and
adc
repnz
mov
dec
pop
arpl
addl
daa
adc
cmpsl
mov
sbb
in
ja
ss
ljmp
pusha
cmp
jl
mov
xchg
pop
jbe
in
xor
and
iret
push
shlb
dec
and
cmpsb
or
dec
inc
inc
cmp
jae
xchg
cwtl
jmp
push
push
call
outsl
xchg
push
add
rcll
or
cmc
ret
pop
cvttps2pi
test
inc
psubsb
fstps
loop
fnstsw
in
sub
inc
mov
mov
mov
xor
mov
lcall
mov
push
push
lcall
and
xchg
and
inc
das
jmp
ss
pop
or
sbb
mov
dec
lds
adc
inc
subb
jg
sarb
adc
inc
gs
dec
rcrl
or
cmp
std
add
push
mov
push
sbb
in
xor
xorl
and
sbb
and
in
std
sbb
pop
or
adc
test
inc
pop
cmp
jae
stc
dec
pop
pushf
pop
leave
insb
cltd
xor
enter
cmp
xorl
movsl
lahf
jl
push
test
cmp
sub
dec
xchg
imul
jp
and
dec
nop
push
scas
inc
xor
enter
jge
add
and
dec
addb
fwait
adc
push
add
xchg
enter
rorl
xchg
hlt
pop
pop
mov
inc
test
sbb
mov
or
jmp
leave
popa
xchg
mov
adc
adc
mov
mov
xchg
xor
cmp
ja
int
sub
xor
xchg
and
jp
mov
mov
imulb
or
sub
sbb
add
add
aas
mov
xor
cmp
mov
cs
jl
xor
xor
cld
dec
pop
cltd
int3
add
sbb
ret
xor
test
mov
adcl
enter
movsb
shlb
into
inc
cmp
lods
dec
inc
insl
mov
loope
je
push
push
mov
lock
and
pop
push
in
push
mov
inc
jle
inc
add
xchg
jnp
pop
inc
adc
repz
pusha
insl
cltd
stc
sahf
jne
dec
inc
adc
stos
cmc
jg
in
loopne
rcl
fnstenv
mov
fcoms
sub
or
dec
loopne
popa
testl
daa
pop
mov
xor
cmp
dec
mov
mov
mov
jmp
addl
inc
mov
xor
orb
xchg
adc
daa
fisubs
iret
not
cli
ret
mov
cmp
nop
push
adc
mov
sub
enter
and
cltd
xor
mov
stos
js
add
push
in
cmpsl
xor
fbstp
sub
sub
sti
bound
add
and
or
addr16
cwtl
out
repnz
and
aad
stos
cmc
insb
push
and
mov
addl
js
xchg
sahf
mov
pop
xor
emms
dec
pop
lret
decl
rorl
sahf
mov
sub
or
pop
retw
push
lret
aas
sbb
push
popf
fsubrs
dec
inc
outsl
mov
sbb
clc
mov
inc
pop
out
sbb
inc
cmpsb
dec
dec
cs
xchg
sbb
daa
in
xchg
add
dec
sbb
push
fadds
push
popa
dec
je
and
jno
push
xchg
hlt
add
lahf
xchg
pop
or
xor
mov
pop
add
scas
shll
ja
xchg
pop
sbb
jmp
out
jno
xlat
jno
out
push
xor
cltd
cli
loopne
pop
ja
bound
cltd
sub
into
push
push
clc
lods
sti
mov
adc
ljmp
inc
and
add
dec
mov
sbb
sbb
movsl
xchg
lods
jmp
repnz
cld
xchg
cmp
pop
push
leave
sub
in
mov
pop
and
and
pusha
inc
sub
jns
in
push
jae
dec
outsb
xchg
sbb
faddp
subl
mov
pop
lods
popa
bnd
or
dec
in
ret
dec
cld
jo
inc
ret
add
movsl
ficompl
add
push
add
and
adc
xor
pop
scas
out
or
lock
dec
rclb
pop
xchg
loope
or
or
int3
mov
movsb
enter
pop
leave
sbb
and
pop
rclb
push
scas
ja
fs
xchg
jo
test
jle
and
push
ljmp
ret
sbbb
cltd
shrb
mov
pop
sub
les
sub
dec
loop
and
pop
ds
adc
add
in
mov
ds
jecxz
mov
mov
ret
imul
mov
xor
insl
sbb
dec
xchg
cmp
xchg
ret
mov
sbb
and
push
outsb
cmp
cmp
inc
xchg
mov
xor
ljmp
sbb
addl
mov
xchg
mov
push
fldl
add
clc
mov
enter
pop
push
pop
lcall
lcall
jnp
sbb
jp
push
push
arpl
xchg
ja
pop
push
jns
lock
fisttps
add
push
popa
clc
xchg
into
std
idivl
mov
imul
jmp
lock
dec
xchg
repnz
jmp
adc
es
jo
rcll
push
enter
sub
jmp
lar
xor
std
push
and
pop
xor
jmp
cmp
xlat
push
adc
pop
pop
inc
pop
aas
jmp
stos
pushf
gs
test
xor
mov
shl
xchg
lods
stc
and
mov
cmp
jne
notl
xchg
xor
das
fidivl
jecxz
and
sub
scas
sub
mov
adc
stos
push
aam
mov
or
and
lahf
rolb
cmp
xchg
divb
sti
jbe
mov
xchg
andl
mov
lret
cwtl
cmp
hlt
jbe
and
jnp
adc
or
jne
insb
xor
movsl
cli
fimuls
nop
in
cmpb
lcall
xchg
adc
lods
jle
mov
ret
and
ret
call
xor
push
or
enter
xchg
or
iret
adc
xchg
cs
push
or
data16
lock
popa
rorl
sqrtps
out
out
sti
pusha
push
notb
cmc
mov
mov
test
cmp
stos
add
stc
in
dec
adc
mov
test
fxch
sbb
movsb
jne
inc
push
inc
cmpsl
jnp
xor
xor
jbe
mov
fistps
mov
sti
push
rorb
test
out
xchg
sahf
and
inc
jb
ret
cmp
push
rclb
cmovbe
cld
rolb
test
es
sbb
icebp
xor
js
fdivl
bnd
test
push
and
movsb
push
cmp
sub
pop
outsl
popf
pop
jp
test
push
cmp
stos
mov
add
mov
add
pusha
push
dec
cmp
movsb
jmp
mov
xchg
test
inc
push
pop
jno
inc
test
mov
inc
mov
cld
outsl
insl
loope
sbb
pop
ret
jo
or
push
push
scas
sarb
std
in
imul
popf
fildl
and
inc
push
jb
adc
mov
aad
mov
jge
mov
lret
push
mov
sbb
fisubrl
iret
and
mov
fnstenv
aas
cmp
xlat
mov
in
push
adc
mov
pusha
or
arpl
ror
mov
int3
cmp
aam
push
fnsave
imul
or
data16
and
cmp
test
nop
add
mov
push
in
iret
adc
andl
mov
mov
mov
mov
adc
dec
mov
push
mov
mov
jbe
or
sub
pop
sarb
fs
lods
les
loope
fstp
pushf
xorl
mov
scas
sar
mov
mov
push
jo
sbb
fisubs
imul
jnp
sub
mov
pop
inc
and
loope
sahf
add
cmp
xchg
fcomps
mov
test
movsl
mov
mov
sub
jl
mov
mov
dec
mov
push
movsb
dec
add
cmp
cli
addr16
push
call
push
mov
xchg
mov
fs
inc
cmp
rorb
stc
jl
mov
jbe
adc
test
push
fistpl
cli
push
pushl
lock
std
loop
inc
nop
mov
addb
jb
scas
inc
jmp
fisttpl
loope
out
lods
mov
arpl
cmp
and
dec
inc
jo
lds
fildl
adc
push
subl
pop
push
add
jae
into
fstl
sub
out
cs
or
xchg
and
mov
movsb
aam
mov
dec
in
dec
xorl
sub
ljmp
dec
subl
pop
outsl
dec
aaa
jbe
push
push
jnp
in
xorl
jnp
lahf
fdivp
test
mov
leave
sbb
insl
lds
fstpt
sbb
das
ret
imul
test
daa
xchg
int
adc
and
sbb
fwait
adc
pop
inc
adc
into
or
popf
into
cmp
lret
add
inc
arpl
jnp
pop
das
inc
movsl
sub
add
and
fimull
dec
pop
mov
test
nop
rolb
mov
stos
dec
loope
es
mov
outsb
faddl
imul
dec
mov
cmp
rep
mov
ljmp
pop
notb
mov
xchg
adc
ret
in
leave
and
std
idivl
lea
cwtl
mov
sbb
inc
mull
jl
inc
movsl
push
ret
cmp
out
mov
inc
sub
push
cmp
mov
xor
add
sbb
dec
sub
add
int3
xor
pop
enter
imul
xor
roll
pop
cmp
sbb
dec
inc
adc
sub
inc
iret
leave
push
rol
or
pop
xor
sub
das
mov
mull
or
inc
and
or
mov
mov
or
stos
mov
sbb
aam
or
addl
and
stc
lock
push
out
cmp
pop
idivl
leave
daa
sbb
pop
shl
les
pop
mov
dec
or
hlt
sbb
sbb
push
jecxz
sub
mov
and
sub
into
imul
xchg
aad
ss
sbb
jnp
and
push
das
fwait
pop
jl
repz
jbe
push
ror
stos
and
push
sarb
cmpsb
xchg
jno
dec
fiadds
in
in
push
in
ss
mov
roll
int
sbb
or
cli
dec
sbb
mov
sti
sbb
sarb
cltd
mov
pop
ds
sarb
add
and
pop
icebp
adc
mov
push
mov
iret
cmp
add
mov
out
fnstsw
popa
and
out
mov
daa
xor
mov
jge
loopne
mov
xchg
ffree
push
fldt
test
mov
pop
pop
jno
loopne
das
pop
jl
mov
push
fdiv
pop
outsb
into
in
xchg
pop
sub
lahf
ljmp
je
mov
sub
mov
testb
cmpsb
std
push
sub
or
es
push
jb
loope
int
add
jp
mov
and
mov
int
mov
shll
cmpsb
test
sub
bound
lds
hlt
ja
sti
das
sti
mov
cmc
cmpsb
adc
mov
mov
cmp
cwtl
push
sbb
fdivrl
push
sahf
dec
pop
adc
negl
movsl
fadd
in
mov
lret
int3
push
ret
sarb
stos
mov
movsb
push
xchg
add
call
sub
test
dec
imul
adc
lahf
shrl
mov
das
incl
ret
icebp
into
push
pushf
push
xor
shl
loope
daa
not
clc
stc
cmp
mov
mov
movl
add
fldt
sti
es
dec
mov
mov
out
stos
dec
jmp
stos
adc
push
shl
lahf
out
fdivp
aaa
faddp
pop
jl
and
das
fcmovnbe
mov
cmp
mov
out
add
pop
dec
or
pop
je
or
jns
jmp
mov
dec
hlt
xor
or
lret
dec
or
call
jp
aam
fisubrl
ja
stos
insb
arpl
stc
addr16
pop
or
fisttpl
cli
out
jbe
add
fs
lret
xor
xorl
ret
jns
pop
mov
pusha
test
divl
mov
sbb
imul
jne
daa
shl
dec
jns,pn
hlt
pop
pop
test
fsubrs
insl
fidivrs
lea
jmp
sbb
mov
fidivl
movsl
cltd
cmpsl
fistpl
loop
lcall
imull
mov
push
insb
and
aaa
xor
inc
push
in
addr16
jmp
mov
and
outsl
decb
jp
cmp
imul
jne
das
jns
sbb
sti
mov
arpl
mov
and
pop
and
mov
inc
jnp
addb
cli
sub
idivl
and
xchg
or
loopne
sbb
xchg
mov
jecxz
cwtl
xchg
inc
aad
and
mov
add
fsts
push
jmp
push
adc
sub
lock
xor
dec
lret
xor
subb
incl
int
mov
mov
ret
inc
or
pop
lahf
in
lea
add
mov
outsl
cmp
jne
xchg
cmp
inc
mov
mov
and
into
lret
and
cmp
lods
mov
popa
pushf
mov
xlat
push
std
iret
repnz
mov
sbb
jmp
cmp
mov
fidivrs
mov
and
shll
add
cmp
outsb
inc
mov
cltd
cltd
cmp
insl
pop
aaa
fldt
imul
adc
into
outsl
mov
inc
sti
mov
lea
xor
cmp
sbbl
mov
dec
inc
dec
push
test
sub
nopl
inc
xchg
bound
dec
leave
mov
or
clc
dec
mov
jp
sub
call
movsb
add
sbb
inc
push
leave
mov
xchg
mov
lcall
mov
cmpsb
shrl
cmp
jbe
mov
sarb
scas
testl
fisubs
sahf
test
arpl
shrb
ja
fsubl
cli
pop
pushf
mov
ret
push
or
jae
xchg
sub
insb
jg
xchg
popf
inc
jg
xlat
cmp
inc
scas
mov
data16
cmc
xchg
ret
cmp
sbb
mov
daa
out
imul
dec
insl
xchg
jne
data16
xchg
out
mov
lea
shll
stc
mov
xchg
mov
data16
addb
mov
negb
retw
test
ret
xchg
repnz
pop
pop
inc
and
mov
ds
insl
subb
dec
in
fistps
pop
test
loopne
push
mov
cmpsb
in
ljmp
xchg
xor
push
test
repz
push
xor
pop
xchg
xchg
and
dec
arpl
hlt
mov
clc
jmp
in
das
push
ss
mov
jo
inc
gs
fs
sub
dec
js
pop
lret
xlat
dec
mov
int
in
push
pop
mov
mov
inc
jge
pop
adc
adc
adc
xchg
jae
pop
inc
outsb
add
add
cwtl
jb
push
lds
or
add
fisttps
xchg
icebp
push
cmp
cmp
test
out
cmp
mov
inc
xchg
out
xor
or
pop
or
add
std
adcb
pop
clc
and
int3
popf
mov
lea
ret
setne
push
add
mov
scas
inc
ja
movsb
pushf
scas
cli
push
es
cmc
outsb
dec
pop
sbb
inc
mov
mov
test
or
into
sti
mov
mov
inc
cmp
xchg
movsl
icebp
out
das
in
aad
mov
and
sub
xlat
out
jl
fwait
dec
adc
jmp
ljmp
sbb
into
cmpsl
adc
jmp
sub
cmp
shl
adc
sarl
pusha
mov
and
dec
je
sub
mov
mov
mov
push
xchg
jnp
fldt
jae
mov
lret
aas
loope
loop
add
sarl
iret
pop
scas
ljmp
mov
pop
cld
add
jl
and
jl
jmp
mov
in
cltd
adc
xchg
outsl
and
pop
pop
mov
xchg
mov
jno
lock
out
lcall
addb
testb
jnp
and
mov
stos
scas
sub
dec
shrl
inc
add
stos
icebp
sub
cmp
add
fcom
adc
les
sbb
lcall
jo
add
add
scas
pop
mov
daa
je
jno
jecxz
loope
jno
les
and
pop
test
jge
inc
sbb
fsub
sarl
sub
cmp
sbb
pop
inc
loop
adc
push
fisubs
mov
fstl
test
jp
inc
movsl
aad
pusha
fldenv
and
test
scas
iret
lahf
aad
dec
xchg
outsl
dec
hlt
scas
out
or
dec
add
jmp
push
insl
jge
cmp
movsb
inc
mov
subl
pop
fsub
lds
jl
inc
xlat
sahf
jno
fs
jle
hlt
pop
jns
sub
out
mov
xor
jno
scas
ret
sbb
jmp
movsl
mov
ja
cld
mov
sub
repnz
sub
sbb
xor
outsb
sbb
pop
movsl
sub
out
and
into
test
cmpl
subps
lea
lahf
jge
jg
cltd
dec
insl
je
xor
jmp
add
addr16
insb
sbb
cmp
or
aam
scas
pusha
jne
xchg
shlb
les
sahf
inc
mov
inc
int3
aas
shr
sbb
sub
or
inc
mov
mov
movsb
loopne
xchg
and
push
or
rcll
sbbl
dec
scas
mov
int3
xchg
in
adc
das
cmp
jl
comiss
test
int
out
sbb
add
push
mov
mov
adc
iret
cld
enter
push
cmp
and
cmp
repz
xorb
mov
sbb
ret
jbe
pushf
aad
cmovno
pop
adc
cmpsb
pop
scas
cmc
ret
cmpsb
imul
sub
loopne
mov
pop
ss
aaa
fadds
push
fxch
and
adc
mov
inc
fs
pop
mov
dec
fbstp
pop
jecxz
jmp
rolb
lock
dec
mov
imul
push
xchg
xor
call
scas
mov
pop
inc
ja
cmpw
nop
idivl
mov
mov
mov
cwtl
fs
shrl
or
mov
iret
jb
jmp
pop
fs
inc
adc
and
mov
int
xor
push
cs
or
sub
lods
sub
and
pop
jno
sbb
insb
neg
xchg
jl
mov
imul
fstl
mov
mov
imul
js
sbb
adc
out
mov
mov
inc
push
xchg
push
push
lret
and
repz
mov
lret
ret
xchg
xchg
jnp
nop
int3
ficomps
movsl
push
inc
fbld
popa
into
adc
jb
sub
fdivs
je
jbe
mov
stos
in
iret
lds
pop
cmp
sti
xchg
adc
int
in
adc
outsl
in
ficoms
pop
xor
pop
adc
and
lahf
push
adc
jns
add
loope
xchg
pop
and
inc
xor
xchg
and
xchg
add
and
push
cmp
and
scas
mov
and
outsl
adc
mov
inc
sub
cltd
mov
jnp
push
es
xor
inc
repz
fisttpll
clc
xlat
int3
mov
or
inc
push
inc
pop
stc
adc
pop
inc
lret
stos
fsubr
push
push
lret
adc
add
sbb
xor
cmp
push
dec
inc
fdivr
mov
dec
out
mov
repnz
out
int
call
idiv
pop
mov
jle
pop
sbb
pop
in
ljmp
dec
add
xchg
shlb
sub
and
push
pop
push
sub
mov
adc
lret
shl
stos
or
sti
inc
outsb
dec
stos
pop
adc
sub
jo
mov
gs
and
js
dec
push
shlb
cmp
mov
nop
repnz
loop
fs
sub
push
xor
daa
xchg
pop
outsl
sbb
mov
add
xchg
cmp
pop
mov
sbb
cmc
jne
cmp
inc
jmp
add
jmp
popa
inc
pop
sahf
mov
ja
loope
cwtl
pop
cmp
jbe
in
inc
add
sub
rcrl
pop
lods
cld
fldenv
or
mov
jno
cmp
adc
xchg
stos
subl
stos
outsl
sti
xor
mov
jmp
dec
pop
mov
ret
sbbl
add
mov
pop
sbb
dec
mov
sar
lods
lods
fildl
mov
mov
out
push
clc
in
mov
ffreep
fdivrl
adc
mov
push
mov
jecxz
adc
mov
insb
or
fcoml
or
cs
mov
inc
aam
add
fdivrl
dec
jg
push
and
xor
cmpsb
xor
xorl
test
out
xor
cmp
subl
add
add
ja
pushl
lret
dec
test
fwait
mov
or
sub
xchg
xlat
push
lods
push
jbe
mov
jp
pop
cmpsb
mov
inc
imul
xchg
pop
add
cli
xor
aas
movsl
out
pop
inc
push
mov
ficompl
jo
and
xchg
mov
rolb
push
hlt
aaa
mov
inc
pop
cmpsl
aam
fsubs
shlb
mov
decb
mov
scas
imul
or
sbbb
jg
dec
outsl
jb
push
mov
jg
mov
and
cmc
fwait
cmp
cmpb
fdivs
insb
lahf
pop
mov
pop
jmp
adc
and
mov
in
push
pop
or
sahf
xchg
mov
into
jae
jecxz
rcr
and
xorb
in
clc
rcrb
jl
iret
cmp
push
mov
fldcw
adc
fs
stos
cmc
inc
pop
mov
mov
xor
loope
hlt
movsb
or
push
jl
or
popa
dec
mov
sahf
stc
test
mov
mov
out
mov
lret
scas
pop
je
jp
sbb
mov
sub
pop
jo
add
mov
or
add
mov
sahf
cmc
push
mov
daa
dec
call
shlb
fimull
cmpsl
dec
pop
popf
sub
cmpsl
clc
popf
icebp
addr16
subb
lret
jecxz
sub
push
push
shll
pop
sahf
pop
imul
lock
das
fnstcw
mov
or
jae
mov
in
mov
inc
xchg
mov
xchg
or
scas
roll
push
ret
adc
and
or
add
adc
push
add
or
inc
inc
data16
dec
cmp
add
adc
cld
rcrb
imul
pop
xchg
sub
outsl
push
xchg
dec
push
inc
scas
fsubr
subl
aam
adc
ret
insl
pop
cli
repnz
imul
dec
xor
or
fsubrs
mov
mov
clc
fwait
and
sub
aad
bound
push
add
xorl
rcrb
mov
cmc
in
mov
and
stos
xor
sbb
inc
mov
js
les
inc
add
add
test
scas
dec
lcall
lcall
inc
lret
fs
xchg
mov
jne
dec
sub
xor
jl
dec
pop
iret
lods
notl
call
std
and
gs
jle
arpl
jnp
lods
xor
lea
shrb
lea
rorb
sbb
push
or
lods
popa
and
je
aad
fs
sub
call
aas
loopne
fadd
push
xor
dec
mov
add
loop
pop
mov
bound
fmull
xor
notb
mov
xor
jmp
clc
lock
jno
add
cmp
xchg
mov
push
and
addr16
leave
adc
jns
sub
pushf
int
fnsave
ret
mov
or
or
push
adc
xchg
test
mov
push
je
testl
aas
sbb
aad
loope
cmp
icebp
call
and
mov
fst
fistpll
mov
inc
cwtl
push
movsl
ror
pop
aaa
dec
inc
jg
lock
aad
flds
mov
test
xchg
cwtl
push
sub
push
popa
in
push
xchg
xor
or
mov
in
push
inc
js
push
push
stos
mov
cmp
mov
mov
jb
xchg
or
cwtl
dec
push
inc
loopnew
pop
dec
add
mov
add
cmp
aas
mov
int
test
mov
xchg
sahf
push
fildll
or
push
pop
pop
add
fldcw
es
std
cmpsl
daa
mov
inc
lods
cmp
enter
mov
xor
and
xchg
sbb
mov
add
dec
sar
push
inc
cmpb
sub
pushf
pop
dec
push
test
or
addr16
sbb
cmc
mov
sarl
xchg
ja
mov
outsb
and
push
and
mov
xlat
xchg
sarl
sub
repz
mov
aas
jp
movsl
test
cli
je
mov
inc
mov
and
xor
sub
xlat
xor
xlat
push
loop
cmpsb
sbb
push
sbb
mov
cltd
fimuls
flds
gs
jno
lock
arpl
lea
pop
mov
xchg
push
insb
and
ljmp
aad
xchg
frstor
and
xchg
or
sbb
fnstsw
mov
inc
ret
in
cmp
fisubl
std
mov
out
inc
push
and
jmp
mov
inc
sti
jbe
sbb
imul
mov
inc
sbb
jl
or
lods
mov
movb
fwait
sti
inc
gs
xchg
xor
cmc
shl
mov
stos
stc
mov
fists
imul
fidivs
adc
rclb
lahf
sti
popl
test
sbb
mov
push
pop
cwtl
loop
xor
or
xchg
sbb
cltd
aam
fimuls
pop
mov
mov
sarl
adc
sub
test
test
xor
pop
push
mov
cmp
into
dec
arpl
sub
lahf
fucomi
movsb
push
mov
adc
cmpsb
push
cmc
sti
ja
mov
es
mov
dec
rcrl
inc
push
jno
adc
push
and
rorl
ror
lock
dec
cmovnp
pushf
mov
imul
repnz
mov
fistpl
je
mov
std
mov
dec
xchg
insb
movsb
loop
imul
mov
ficoms
gs
xchg
add
adc
pop
pop
inc
test
int3
jecxz
lea
push
jecxz
inc
sub
xchg
sti
push
int3
int3
fisubl
mov
jmp
and
lods
and
cmc
and
fwait
add
push
loopne
test
pop
stos
mov
je
push
xlat
mov
jb
mov
fcompl
rcrl
or
cmp
cs
loope
or
popw
shrb
dec
cltd
clc
sub
mov
mov
inc
jae
mov
inc
mov
push
add
xchg
cmp
sbb
jge
or
icebp
xorb
mov
cmpsb
or
xchg
cmpsl
xadd
popf
dec
sub
dec
adc
sub
insb
or
and
xchg
jp,pn
leave
cmp
shll
in
dec
and
cwtl
and
push
mov
in
das
mov
mov
pop
cmp
jecxz
aad
add
sub
into
data16
test
add
xorl
dec
jp
lret
lcall
pop
jb
shrl
fcomp
push
mull
shll
sub
mov
push
mov
mov
std
lock
xchg
pop
pop
xor
mov
cmc
and
pop
scas
int
dec
inc
or
scas
shrl
or
jns
and
dec
pop
pushf
push
das
xlat
scas
mov
dec
int3
std
pop
sbb
mov
mov
add
mov
push
push
imul
sbb
ja
cmp
in
stos
mov
clc
mov
xchg
scas
mov
xor
lds
std
out
push
popa
or
fs
iret
out
pop
jno
test
or
iret
addl
mov
imul
sar
mov
popa
movsb
jns
ret
lret
push
lock
stos
and
and
test
mov
clc
lods
test
idivb
lods
shr
call
xchg
shlb
idivb
inc
mov
adc
rclb
cmp
pop
rcrb
mov
push
xor
mov
push
int3
cmp
and
xchg
sbb
cmp
test
inc
in
popf
dec
mov
xchg
sub
mov
xchg
push
xor
imul
popf
cmp
pop
inc
dec
test
mov
hlt
push
and
xor
inc
sbb
xchg
adc
cltd
sub
lea
inc
adc
out
xor
cmp
mov
cmp
repz
std
jno
cmp
shr
in
scas
mov
mov
add
test
push
mov
mov
mov
shrl
pop
sbb
dec
das
add
push
ret
xor
arpl
add
repnz
fs
xor
sub
push
js
jno
insb
push
push
mov
sbb
arpl
lea
cmpb
test
sbb
lock
lahf
mov
outsb
inc
mov
subl
mov
stos
imul
sub
mov
fnop
loop
push
lods
insl
insb
xor
push
adc
cmp
add
inc
ljmp
movsl
in
or
jle
int
adc
sbb
jle
sbb
xchg
add
sub
mov
jnp
adc
in
es
jbe
cmp
loopne
pop
push
stos
divl
les
icebp
mov
push
cmpsl
stc
insl
mov
stos
push
mov
dec
stc
cwtl
ljmp
cmp
cmp
cld
jae
int
out
push
dec
nop
cwtl
jle
testl
push
pusha
shrl
add
add
push
mov
push
xchg
in
mov
jl
imul
adc
xor
stos
daa
shrb
pop
sbb
pop
jecxz
dec
dec
ljmp
or
repz
jecxz
push
andb
xor
cli
add
sub
sbb
outsb
aad
jo
lcall
pusha
jae
pop
mov
imull
sbb
rcrb
jle
pop
lods
les
dec
jmp
xchg
sar
sbb
and
cmc
jbe
cmc
fmull
push
into
xchg
mov
adc
test
test
les
and
or
fldcw
sbb
lea
and
push
or
inc
sub
mov
lods
pop
popf
cmp
adc
mov
jnp
adcb
pusha
jo
and
push
jmp
push
sbbb
and
clc
mov
jmp
cwtl
cmp
loop
bound
xchg
jns
inc
cli
fidivl
fisttps
push
test
sti
das
xor
adc
pop
dec
scas
sub
push
orb
jb
mov
cs
stos
idiv
or
cmpsl
pop
enter
lea
lret
cmp
imul
fiadds
xchg
out
popf
inc
xor
fcoms
push
sbb
fsub
or
and
adc
cmp
add
call
pop
xchg
aad
and
mov
mov
testl
call
push
add
sbb
dec
insl
mov
data16
test
call
mov
sarb
arpl
nop
sbb
add
je,pn
jae
mov
mov
sub
dec
mov
mov
in
test
pop
fsubrl
mov
mov
lret
jle
add
and
outsl
fcomp
and
mov
push
sub
enter
fscale
icebp
mov
lock
inc
xor
sub
sub
aaa
rcl
pop
mov
xor
icebp
insb
cmp
gs
ds
rcrl
xor
xchg
xchg
fcmovne
pop
or
and
jno
and
je
jne
mov
es
mov
fstpl
testl
repz
mov
xor
sub
jmp
lea
ret
push
fcoms
fstl
jae
xchg
fstl
movsb
lods
scas
arpl
rolb
test
inc
clc
jle
push
jg
mov
push
xchg
ret
aas
ljmp
flds
xor
shl
scas
sbb
pusha
pop
aas
xchg
pushf
gs
add
pop
rclb
cmp
add
dec
jns
js
inc
int
lds
jge
xor
mov
rcrl
mov
mov
aas
mov
cld
cmp
in
jmp
outsb
or
outsb
loopne
outsb
shl
cmp
fldcw
and
jmp
fiaddl
push
outsl
into
sub
inc
repnz
call
bound
or
rcrl
data16
shll
sbb
jbe
call
jmp
push
inc
leave
cmpsl
pop
mov
aaa
ss
sbb
or
pushf
insl
test
and
prefetch
and
push
movsb
mov
into
mov
pop
mov
lahf
cmp
xor
xor
fcomps
int
int
inc
stos
push
push
stos
out
xor
lret
insl
ds
xchg
sub
ja
or
mov
lea
repz
outsb
scas
les
cmp
lock
repnz
std
pop
pop
test
pop
xor
loope
pop
insl
xchg
add
sbb
mov
push
inc
roll
push
aad
and
cmp
sub
sbb
jecxz
pop
pop
mov
xor
or
jp
shrl
enter
dec
mov
push
arpl
fcomps
sbb
inc
hlt
xchg
cld
ds
repz
sub
frstor
push
fwait
fbld
insl
cmc
fisubl
stos
shrl
mov
out
outsl
mov
popa
lcall
push
aad
sti
lret
inc
idivl
testb
fidivrl
arpl
cli
jmp
push
shrl
push
dec
insb
and
mov
lret
push
pop
lods
ret
or
sub
sub
cmp
pop
xlat
xchg
or
fcoms
xlat
test
and
sbb
rcl
push
xchg
push
fbld
mov
cmc
pop
sbb
or
fs
push
cmp
jmp
or
mov
repz
pop
jecxz
int
sbb
inc
cli
sub
repz
popf
push
in
inc
cwtl
lret
fwait
lret
popf
pop
leave
xchg
lods
lock
sub
or
enter
in
jmp
sarb
pusha
xorb
repnz
adc
mov
aad
test
pop
fs
xchg
inc
jbe
lods
adc
lcall
rorb
or
jg
popa
sarl
xor
scas
add
int3
pop
push
jl
inc
jnp
xchg
in
or
scas
inc
xchg
adc
decb
xchg
cs
cmc
xchg
push
loopne
xchg
out
lods
adc
imul
fsubrp
jne
call
or
push
je
repz
aaa
inc
cli
arpl
xchg
negl
xor
sbb
loopne
xor
in
mov
fs
fwait
push
test
popf
test
dec
xchg
repnz
pop
das
hlt
pop
push
or
cli
cltd
push
hlt
push
adc
div
pop
or
pusha
flds
xchg
push
jns
ja
mov
inc
sbb
inc
xchg
xor
les
idivl
push
adc
sbb
insl
pop
mov
mov
cmp
jp
xor
pop
adc
or
iret
outsb
xorl
lock
pop
jae
jo
stos
insb
push
sbb
mov
lea
sbb
sub
xchg
mov
push
pop
dec
test
jecxz
adc
mov
mov
push
sbb
push
leave
sahf
vmwrite
pop
fwait
or
imul
dec
mov
xor
out
pop
pop
mov
test
pop
int3
add
xchg
lcall
inc
outsb
movq
mov
sub
adc
call
mov
sub
push
cmpb
loop
xchg
pop
aam
sahf
mov
sub
shl
pop
repnz
repz
add
cmp
hlt
jecxz
adc
ret
lcall
movq
pop
es
out
into
cs
scas
idiv
bound
dec
shl
ret
aaa
mov
jbe
and
xchg
popf
mov
jge
mov
in
mov
lock
or
lock
aad
lock
inc
js
bound
test
jp
insl
test
loope
clc
add
mov
ss
xor
cli
ss
bnd
and
les
gs
jmp
mov
je
sub
mov
mov
test
jg
jae
stos
gs
sub
inc
adc
jnp
jns
adc
inc
lds
aaa
sub
lock
adc
cli
push
and
sbb
cmp
mov
and
popa
in
pop
sub
mov
jnp
xchg
lods
pop
xor
outsl
push
pop
clc
xor
mov
pop
cld
mov
pop
fwait
movsl
or
shll
in
or
mov
inc
divb
dec
sbb
xlat
dec
outsl
xorb
test
jnp
ss
xor
sti
int3
cmp
jmp
adcb
call
xchg
call
mov
nop
xlat
lea
add
push
nop
push
bt
mov
sub
out
mov
jl
pop
bound
test
push
push
jbe
cmp
fcoml
push
dec
add
sub
arpl
push
pop
call
add
test
lods
pop
mov
fadds
sub
bound
dec
stos
push
or
push
sub
push
jnp
loopne
ud0
adc
add
in
lds
outsb
iret
orl
in
repnz
call
xchg
data16
or
adc
sti
xor
push
jns
pop
shl
lea
adc
inc
addb
cmp
icebp
sarl
stos
mov
movsb
and
fsub
fadd
js
pop
lcall
dec
out
data16
jmp
dec
fwait
dec
xor
cmpxchg
mov
int
xchg
not
or
adc
sub
xchg
into
scas
jne
fcoml
cmp
lahf
shrb
mov
out
roll
add
mov
pop
pop
pop
xor
jp
mov
pop
sbb
stc
sub
out
adc
inc
pop
push
les
cmc
clc
sbb
xchg
sarb
lea
inc
inc
dec
adc
aas
test
ffree
xchg
pushf
ds
jge
loop
pushf
mov
sarb
inc
mov
arpl
out
mov
cli
pop
add
mov
adc
enter
and
jp
and
ja
outsb
mov
pop
xor
push
bound
cmp
xchg
mov
repz
ja
sbb
push
enter
js
call
and
and
dec
mov
dec
pop
out
repz
scas
arpl
jge
aas
mov
fmuls
aas
iret
lcall
jns
jb
call
test
data16
data16
mov
jecxz
cmp
add
int
std
outsb
jns
outsl
sbb
cmp
not
mov
sahf
or
sub
sbb
into
jmp
cmp
sub
imul
outsl
int
std
pop
sub
cli
sbb
mov
arpl
sbb
das
push
jae
sti
scas
push
pop
cld
call
int
icebp
in
std
jne
or
fwait
insl
add
or
out
push
and
dec
pop
aad
ljmp
sbb
pusha
daa
scas
loopne
mov
xchg
push
insb
mov
mov
or
mov
pop
adc
xor
std
add
test
sar
lcall
enter
lods
adc
or
and
xchg
sar
aaa
les
or
mov
pop
or
movsl
clc
sub
enter
repnz
dec
mov
bound
mov
push
ja
cwtl
push
pop
dec
mov
cmc
pop
mov
mov
dec
sub
mov
pusha
or
and
shll
fwait
outsl
addr16
or
xchg
mov
lcall
pop
xadd
movsl
lea
xchg
shl
cmp
mov
rcrl
orl
aam
sbb
mov
scas
xchg
iret
movsl
jg
imul
xor
push
and
scas
xchg
lsl
pushf
insl
cmp
test
mov
dec
jo
sub
shl
cmp
scas
sbb
std
add
jnp
js
out
mov
stc
sbb
cmp
adc
repnz
std
stos
and
push
out
jge
push
popf
lds
mov
pop
movb
stc
jge
xchg
sub
or
out
push
data16
cwtl
cli
test
pop
dec
fstp
cmp
push
mov
push
fcomp
or
pop
mov
cmp
imul
add
in
call
lea
hlt
jbe
scas
xor
lcall
pop
sub
test
je
adc
rclb
xlat
sub
lahf
test
ret
add
adc
fistl
jbe
and
mov
outsb
mov
insl
cmp
jnp
pcmpgtw
sti
mov
dec
pop
xor
jne
and
addl
fimull
mov
sbb
mov
push
js
nop
js
sbb
adc
xchg
fimuls
xchg
and
cmpsb
sbb
in
shll
mov
fdiv
jns
out
mov
aad
sbb
je
dec
loope
push
pop
aam
ljmp
mov
add
xchg
or
ja
xor
rorb
in
dec
out
xor
popa
or
into
icebp
or
push
jne
pop
or
iret
insl
in
out
mov
mov
scas
jp
data16
mov
add
arpl
jp
inc
fwait
sbb
mov
sub
loop
repz
cmpsl
lock
repnz
mov
cs
fbstp
lods
ja
loop
or
mov
stos
jecxz
push
aad
aaa
and
out
xchg
mov
inc
sub
pop
mov
aad
pop
daa
cmp
xor
test
fistpl
xchg
mov
adc
xchg
mov
jbe
imul
cltd
xor
icebp
lret
cmp
pop
cmovg
xchg
or
cmpsb
fidivrs
dec
fnstcw
bound
test
repnz
fidivrs
xor
and
push
testl
cwtl
jge
decb
out
ret
mov
sub
lea
sahf
and
inc
add
in
mov
fimull
inc
mov
sbb
sbb
fisttpl
jg
mov
xchg
jecxz
rclb
hlt
test
mov
jae
in
fistps
popl
add
pusha
inc
lcall
push
dec
lds
mov
or
fsubl
push
scas
jle
mov
adc
mov
sbb
sub
shll
loope
loope
lcall
stos
fcomi
test
xor
sub
daa
gs
push
andl
push
adc
gs
mov
jo
ja
loopne
ja
nop
mov
loop
lahf
jg
test
sbbb
inc
add
push
or
cwtl
jo
fsubrs
rclb
data16
loopne
sub
aam
ja
push
test
stos
lret
cmpsb
cld
lcall
mov
jmp
mov
jecxz
inc
jnp
std
xlat
cs
add
inc
hlt
arpl
mov
fidivrs
or
mov
mov
ret
jle
push
sub
sbb
iret
jno
mov
negb
sub
adc
dec
test
and
inc
repz
sub
adc
xchg
notl
push
pop
sbb
mov
rol
mov
dec
jmp
inc
xorl
adc
sbb
fcoms
xchg
loope
imul
fwait
add
ficoms
lods
shll
cmpsb
ret
test
xchg
push
dec
mull
sub
cmp
lods
cmp
fbstp
int3
dec
sub
jae
lret
popf
inc
sti
addr16
adc
push
mov
mov
sbb
mov
aaa
testb
xchg
xchg
jno
loopne
jno
xor
nop
and
mov
cmp
stos
out
aam
cltd
jnp
fadd
movsl
push
stos
bnd
push
add
jge
in
sbb
and
loopne
rolb
test
jp
out
jb
push
popa
dec
jae
pop
cmp
rolb
push
cmpsb
ffree
mov
imul
in
sbb
cmp
clc
push
lock
xor
inc
movsl
xor
sahf
mov
jmp
fcompl
mov
lcall
inc
inc
imul
lds
jl
movsb
gs
mov
lds
sarl
dec
data16
xchg
xchg
adc
movsl
subl
adc
lcall
push
in
sbb
sarl
ja
inc
imul
inc
fdivr
hlt
repnz
inc
jl
cmp
and
std
cmpb
test
in
bound
sbb
cmpsl
push
sub
cmp
push
dec
ds
rcll
cmp
adc
test
shll
jp
cmp
in
je
in
fs
movsl
sub
push
pop
movsb
cmp
mov
test
loopne
stos
ret
xor
faddl
ucomiss
out
arpl
ljmp
sub
insb
lea
pushf
into
jp
mov
in
in
fildl
jo
stos
xchg
cmp
push
leave
xchg
lods
dec
lret
sbb
lds
dec
idivb
jp
or
or
dec
mov
filds
enter
outsl
pop
push
xor
push
fs
xchg
pop
daa
sti
push
jns
jmp
push
or
mov
inc
sub
movsb
jl
jns
xor
rorb
xchg
sbb
leave
cli
js
pusha
mov
pop
mov
icebp
mov
cs
test
fisubrs
mov
lret
movsl
add
mov
jo
sbb
jbe
cmp
shrb
cld
mov
bnd
sub
stos
bound
inc
sar
add
jns
test
adc
xchg
adc
adc
inc
jp
sbb
in
or
cmpsl
adc
mov
test
fwait
mulb
scas
dec
pop
mov
xchg
fwait
arpl
push
fisttps
inc
adc
mov
dec
jo
adc
dec
xchg
lods
mov
jmp
dec
les
fsubl
add
sbb
xor
sub
dec
ljmp
xchg
cli
test
xchg
xchg
das
insb
fstpt
negb
jle
mov
sub
cmc
push
loop
scas
sub
and
ficompl
xchg
ds
sub
rclb
mov
call
xchg
shlb
popf
push
pusha
or
ds
in
xchg
sbb
mov
sbb
add
subl
fwait
and
push
adc
cli
and
movsb
cmp
sti
inc
cltd
cs
cltd
cmpsl
loop
xchg
mov
rclb
mov
jne
add
cmp
push
sub
or
or
sbb
fucom
or
cs
rorl
negl
jp
lret
cmp
jns
push
stc
inc
inc
add
adc
movsl
jo
outsl
pop
data16
or
pusha
adc
sbb
es
shlb
jmp
repz
adc
fidivrs
aam
mov
or
sub
out
cmpsl
add
adc
mov
sbb
jmp
push
xor
or
lret
dec
hlt
dec
aaa
repz
mov
pop
cmc
and
fcomps
xor
lea
mov
test
arpl
dec
shr
inc
add
jno
mov
cli
sub
push
sahf
cld
cmc
push
popa
fimull
imul
xchg
adc
idivl
clc
add
lods
xlat
pushf
jle
cmp
mov
push
incb
sub
xchg
xchg
test
ss
dec
mov
pop
sub
push
mov
cmp
pushl
jp
nop
movsl
sbb
cmc
cltd
inc
cmp
cmp
das
es
xchg
leave
sbb
sbb
sbb
jne
or
xchg
pop
xchg
pop
mov
mov
xchg
in
dec
stos
dec
cltd
mov
fmulp
imul
ljmp
fld
push
push
mov
or
jbe
adc
push
mov
imul
je
cmpsl
cmp
jbe
scas
jge
and
psllq
loop
scas
fldt
xchg
aaa
movhps
inc
cltd
cmp
out
lods
sbb
sub
lods
movsb
xchg
jo
jo
pop
sub
inc
inc
mov
shl
add
movsl
and
stc
pop
and
pop
and
enter
aad
adc
div
aaa
add
cmovo
das
rolb
lock
mov
and
push
add
fs
lret
vmread
sub
imul
test
es
jp
data16
pop
test
add
add
ss
pop
mov
fisttpll
mov
rcll
outsl
out
jb
sbb
xor
dec
mov
cmp
inc
cmp
popf
or
stos
xor
cmp
adc
shl
enter
dec
test
outsl
gs
roll
clc
sub
sbb
mov
clc
pop
xchg
cs
popf
aas
pop
add
inc
cmpsl
xor
gs
cmp
inc
lock
add
xchg
mov
and
lea
inc
jae
adc
add
push
shrl
push
sbb
je
adcb
mov
aas
jo
out
mov
and
adc
ret
pop
or
insb
sbb
pop
ret
lret
in
scas
adc
pop
push
push
xchg
lcall
push
out
vmovss
ss
xor
add
sub
shr
push
sbb
icebp
sub
jnp
mov
pop
icebp
cmpsb
push
outsl
mov
push
pop
js
inc
clc
pushf
xor
mov
mov
fwait
das
dec
cmp
mov
mov
std
imul
iret
inc
mov
cli
fs
bound
lret
in
cltd
frstor
loopne
mov
ret
sbb
lret
insb
sbb
mov
sub
into
mov
sbb
dec
setns
scas
roll
in
xor
and
adc
jno
test
adcb
xor
pop
jp
mov
in
aas
push
push
lahf
mov
jne
dec
or
test
aas
bound
sarb
les
nop
xchg
shll
jnp
ficoml
mov
push
and
xchg
repz
pushf
cwtl
mov
enter
loopne
mov
push
dec
aam
por
repz
mov
adc
out
add
jae
je
pop
xor
sub
ret
movsb
popa
in
dec
fiaddl
push
sbb
mov
ds
adc
mov
pop
mov
jp
push
add
outsb
popa
std
xor
insl
cmpsb
sub
test
xlat
sbb
ljmpw
fwait
pop
iret
ja
push
mov
pop
out
movsb
gs
and
ss
adc
mov
lea
int
and
shl
adc
fcoml
cwtl
sub
divl
cwtl
push
icebp
testb
aas
sti
lret
insl
insl
jbe
mov
lea
jg
sub
adc
mov
cmc
lret
cli
xchg
xchg
jnp
pop
add
dec
scas
cmc
cmpsb
inc
pop
loop
sbb
out
and
jno
or
pop
fwait
pop
cld
mov
sub
adc
push
stos
inc
mov
and
imul
popa
stc
mov
and
mov
pushf
leave
or
fstl
mov
scas
mov
adc
push
sti
scas
lock
and
loop
sbb
dec
repnz
iret
push
popf
daa
iret
iret
adc
nop
pop
jnp
shll
push
mov
mov
xlat
loope
or
push
jo
xor
cs
arpl
and
test
add
das
xchg
popf
push
xor
mov
fwait
add
fdivrs
dec
pop
ss
je
pop
and
data16
ja
mov
jmp
roll
out
jp
pop
cmp
sub
fistl
mov
jnp
dec
bound
cmpsb
scas
popa
sarb
mov
cmp
ds
test
mov
and
fcompl
mov
lods
cmp
pusha
inc
arpl
dec
idivb
div
outsl
int3
pop
mov
jl
cmc
dec
mov
dec
sbb
sti
addl
dec
pop
mov
mov
leave
mov
ds
xor
cmp
jb
xchg
mov
addr16
jge
cli
repz
js
stos
pop
cmc
adc
ja
xchg
sbb
mov
or
cwtl
mov
into
bound
rolb
inc
add
inc
loopne
pushf
and
sbb
scas
adc
jae
mov
fbld
xchg
fsubrl
cmpsl
dec
sbbb
add
cli
pop
idiv
int
ret
push
repz
addr16
shr
cmp
add
cwtl
aaa
iret
dec
push
sti
or
into
lea
sub
jmp
inc
test
xchg
sbb
pop
add
enter
rolb
xchg
mov
push
iret
sub
adc
shll
aaa
loop
cltd
popa
mov
call
lahf
or
push
dec
xchg
or
mov
xchg
push
popf
add
loopne
cmp
push
sub
pop
std
mov
or
push
aas
call
lret
mov
adcl
test
or
pop
testb
mov
pop
sarb
cmp
xchg
scas
hlt
push
pop
push
push
arpl
cmp
clc
push
out
add
imull
test
mov
cmpl
push
addr16
fisubrl
or
inc
pop
mov
jbe
aaa
dec
cltd
mov
mov
or
cli
lahf
lods
call
aad
test
icebp
inc
rep
es
xor
outsb
sbb
pushf
popa
pop
enter
enter
mov
test
pop
iret
and
add
add
cld
cld
imul
andb
xor
pop
sbb
shlb
or
sbb
cmpsl
out
jge
jb
inc
push
loopne
pop
xchg
push
add
and
jp
and
xchg
push
out
das
shl
nop
imul
enter
xchg
xchg
lock
add
adc
mov
xor
pop
lea
mov
xchg
xor
int3
mov
mov
jo
jl
lea
testl
cmp
pop
cld
in
mov
ljmp
in
mov
push
repnz
mov
add
fidivrs
insb
or
mov
mov
add
sbb
sub
adc
mov
xchg
fst
sbb
sbb
imul
xor
sub
cld
mov
stos
mov
jge
out
mov
in
and
xor
jno
pop
jl
dec
movsl
cmc
cltd
popf
test
mov
jne
orb
outsl
push
or
or
pop
data16
adc
xchg
mov
test
neg
push
jge
popl
mov
mov
push
xchg
xor
dec
arpl
jno
in
out
and
mov
push
jae
mov
mov
sub
xorl
fmulp
and
lret
add
add
mov
jmp
outsb
lods
aad
gs
shl
xor
add
out
or
inc
dec
sbb
and
xchg
jbe
and
sub
es
jne
rol
adc
cwtl
scas
mov
lods
inc
sub
sbb
push
scas
in
and
pushf
shll
les
out
dec
pop
lods
into
mov
aas
mov
outsb
les
adc
push
add
rolb
pop
add
pop
stc
das
xchg
cs
test
xchg
push
imul
sbb
fnsave
add
xchg
fnsave
lcall
imul
mov
mov
js
das
dec
mov
mov
repz
push
mov
popa
pop
sti
push
fcompl
sub
push
mov
cmp
jl
xor
std
inc
inc
inc
sub
cli
and
push
out
mov
adc
dec
mov
enter
dec
loope
ljmp
push
and
xor
add
data16
ffree
adc
mov
xor
fwait
push
cwtl
or
push
xchg
push
imul
ds
int
inc
sub
sub
gs
mov
push
push
jne
pusha
mov
pop
ret
push
insb
mov
xor
shlb
sahf
pop
adc
mov
pop
js
ds
pushf
arpl
lret
in
icebp
inc
out
out
cmp
int3
pop
cmp
fsubs
in
or
inc
adcb
lcall
js
shl
out
jp
out
stos
jle
sub
ljmp
mov
fs
sbb
or
xchg
cli
movsb
fsubrs
js
sub
pop
ret
jl
jne
out
fcmovnu
inc
lea
lods
les
sahf
inc
sbb
dec
ljmp
loopne
pushf
daa
add
pop
in
jmp
sub
out
lods
rclb
movsb
cwtl
dec
mov
lret
mov
jae
mov
push
aaa
xchg
popf
repz
cmp
mov
push
dec
mov
shl
push
jnp
xchg
xchg
lods
or
inc
inc
pop
dec
ljmp
jns
dec
adc
ljmp
cmpsb
test
xchg
push
andb
imul
test
mov
push
out
add
adcl
ret
ljmp
movsb
das
mov
lea
ja
test
lea
pop
cmpsb
enter
sar
push
xchg
pop
aas
cmpsl
lods
xchg
enter
iret
push
test
loopne
adc
cmp
rcl
out
inc
xchg
fs
call
or
in
xor
iret
call
cwtl
stos
popf
mov
adc
push
jp
jne
out
enter
pop
push
frstor
scas
sub
jg
jns
sub
jle
bound
sub
inc
pushf
or
or
pop
nop
push
add
mov
not
arpl
popf
push
insl
jne
fsub
movsl
adc
pop
xor
mov
js
jno
fdivs
mov
dec
jae
adc
push
push
mov
pushf
add
mov
mov
das
mov
cmp
or
sub
adc
daa
dec
mov
mov
clc
loope
xchg
es
cmp
mov
sbb
xor
or
test
and
cmp
mov
xchg
cmp
fcoms
jae
shll
mov
cs
mov
movsl
mov
mov
out
cmc
sub
xchg
ret
cmc
cld
dec
out
adc
roll
xchg
jmp
mov
adc
xchg
xchg
icebp
jno
scas
sub
aam
movsb
cmpsb
fdiv
push
icebp
cmpsb
fcom
dec
and
ret
mov
les
jo
mov
or
std
or
xor
xchg
mov
xor
data16
insl
mov
pusha
dec
into
sbb
aad
push
mov
les
and
pop
stos
fucom
shrl
sub
int
push
sbb
clc
addr16
imul
out
xorb
push
fcmovnu
stos
push
mov
daa
add
sbb
lds
cmp
xor
xor
dec
and
push
cmp
jecxz
call
cli
shr
iret
push
pop
inc
movsl
les
scas
stos
push
xchg
stc
insl
pop
jne
bound
jl
push
push
fcomps
and
adc
xchg
pusha
cmc
fs
test
sar
fs
xchg
ljmp
or
frstor
pushf
xchg
lret
enter
lea
cmc
jmp
xchg
je
fcomps
sahf
or
adc
push
adc
jge
aad
push
push
mov
add
push
mov
in
jns
adc
and
call
insb
and
sbb
xor
xchg
lds
cltd
push
xorl
pop
cmpsl
cld
shl
mov
mov
mov
js
sbb
or
push
out
mov
pop
mov
fmuls
mov
mov
cwtl
lahf
jo
mov
inc
jmp
aas
dec
enter
nop
mov
mov
es
pop
jl
add
xor
dec
pop
outsl
movsb
ljmp
mov
mov
dec
cmc
stos
sbb
or
mov
adc
sbb
lods
and
dec
or
ds
jnp
dec
cmp
add
mov
shr
dec
fmull
es
dec
adc
mov
test
cli
fildl
loopne
ds
imul
adc
xchg
xchg
ret
in
mov
aas
xchg
idivb
mov
mov
adc
mov
stc
lods
add
lock
ja
insb
jae
insl
out
pop
lret
and
sub
dec
ds
subl
xor
cmp
iret
leave
fildll
out
xor
xor
cwtl
cmp
xor
xor
clc
imul
pop
jbe
fidivs
inc
cmp
in
push
cmpsb
repnz
shlb
movsl
add
jo
mov
arpl
jecxz
mov
iret
je
daa
into
pop
mov
or
add
mov
aam
sbb
inc
testb
fucom
jb
jmp
shll
and
je
xchg
lret
xchg
add
mov
test
fmuls
cld
ret
mov
mov
daa
add
bound
ja
xchg
pop
cmp
shll
adc
sub
aaa
leave
cltd
cmc
test
lea
rclb
add
sub
out
fsubrp
cmp
lret
roll
stc
ljmp
pop
sbb
adc
jne
cmp
fisttpll
dec
loop
cmc
xlat
nop
and
test
pop
cmp
jmp
mov
data16
lcall
scas
jge
loop
mov
adc
xor
mov
sti
icebp
mov
push
push
pop
in
inc
std
add
xlat
scas
hlt
sahf
test
adc
call
stc
mov
xor
inc
clc
or
jecxz
sbb
xchg
scas
pop
inc
test
jg
xor
data16
movhps
mov
jo
and
mov
add
or
ficoml
mov
sbb
insb
ret
xor
push
jne
arpl
dec
mov
adc
mov
cmpsl
cli
jmp
cltd
push
movsb
sub
icebp
stc
not
sub
mov
pop
lea
add
and
cmp
add
sbb
mov
xlat
cs
pusha
icebp
mov
and
add
push
pop
movsl
pop
jne
mov
sbb
pop
cmc
xchg
fwait
xchg
das
inc
iret
orl
and
cmpsl
mov
int3
int
lcall
xor
or
rolb
addr16
fcmovnb
or
filds
cmp
leave
sbb
adc
adc
push
fildl
imul
outsl
pop
xchg
inc
cmpl
mov
push
out
notb
out
stos
sub
jb
daa
sti
inc
fcompl
sub
pop
inc
xchg
xlat
sbb
stos
int
mov
mov
mov
jns
popf
mov
js
aad
insb
xor
movsb
cmp
sti
scas
xchg
mov
icebp
and
or
fsubl
sbb
mov
jg
cli
shrl
mov
inc
xor
pop
adc
ret
out
or
push
inc
push
pusha
cmp
push
lret
push
push
enter
imulb
mov
lods
or
jle
outsb
test
aam
adc
test
and
fists
push
scas
add
enter
inc
inc
ja
loop
int
inc
test
in
and
movsb
outsl
loop
sar
xor
inc
pop
push
int
pop
outsl
arpl
mov
push
xchg
mov
dec
ret
or
push
popf
insl
out
mov
mov
sub
mov
out
into
notl
mov
inc
sub
and
lahf
rcll
cli
sbb
cmp
cli
mov
into
mov
mov
xor
es
in
mov
adc
test
pop
mov
xchg
jno
fidivl
mov
ret
mov
fldcw
inc
stos
repz
test
loope
sbb
sub
fsts
stc
dec
push
inc
or
push
push
pop
rorb
inc
xor
add
ds
lea
xor
cltd
mov
lret
jl
mov
mov
sub
pop
add
fistps
cmpb
int
inc
jae
into
rcrb
sar
daa
inc
push
fsubs
add
pop
sub
xchg
stos
fisubl
dec
adc
adc
and
push
xor
divb
add
push
dec
add
sbb
sbb
pop
cmp
and
push
stos
out
lret
mov
stos
pop
mov
mov
mov
mov
inc
mov
add
jo
pop
pop
and
inc
outsl
add
sub
cmpsl
add
pop
cmp
mov
pop
xor
pop
push
cmpsb
and
sbb
rcl
jg
mov
push
lret
fldcw
leave
mov
xor
outsb
sbb
jge
fstpl
inc
xor
mov
mov
sub
jae
xchg
add
aad
dec
sub
fldcw
or
fisttpll
neg
lcall
call
lcall
or
cmp
dec
push
inc
lock
dec
enter
mov
outsl
sbb
pop
xchg
outsb
int
sbb
imul
jno
stos
cmc
adc
addr16
add
mov
pop
mov
inc
sub
jg
arpl
lea
or
in
test
repz
clc
push
push
lock
icebp
cmc
dec
mov
xor
jp
dec
lds
fs
mov
lret
dec
incb
xor
pop
insb
xor
adc
movsl
je
sbb
insb
push
mov
insb
jne
cmc
push
clc
pop
push
loopne
jg
ficoms
mov
xchg
push
ja
mov
test
ds
xchg
out
inc
cltd
sahf
cs
ret
icebp
jbe
lds
stc
aaa
mov
test
or
jg
jge
pushf
sbb
mov
and
std
call
mov
daa
push
js
xchg
lods
insl
adc
in
inc
sbb
jl
jp
jg,pn
push
pop
lret
push
fdivr
pop
jae
out
lret
loope
dec
push
jnp
jo
fildl
xor
cwtl
sub
pop
call
jg
dec
loopne
jno
add
fldcw
push
sbb
or
sbb
mov
sbb
cmp
fsts
inc
testb
testl
cmp
mov
imull
ss
sbb
adc
cmp
fldenv
out
xchg
pop
pop
in
lock
popf
add
cmp
push
mov
in
and
pop
addb
sti
or
sbb
lock
or
dec
test
add
rorb
dec
xchg
xchg
cmp
mov
add
movsl
inc
dec
mov
out
scas
fnstcw
xor
inc
xor
fdivrl
mov
mov
mov
stc
mov
xchg
jecxz
int
int3
lcall
mov
push
enter
xchg
add
rolb
movsl
mov
out
mov
adc
jbe
leave
popa
lcall
mov
adc
mov
xor
ret
outsb
jo
repz
in
fs
mov
test
mov
mov
aad
adc
push
push
es
ss
cmp
shl
push
lahf
xor
popf
ret
loope
jb
sbb
inc
adc
js
xchg
adc
roll
outsb
push
dec
stc
stos
or
mov
or
mov
in
imul
movsb
cwtl
je
adc
andl
xlat
gs
cld
adc
rcrb
leave
ret
adc
jnp
aad
xchg
dec
scas
sbb
cmp
inc
mov
cmc
inc
insb
aam
enter
out
adc
add
jne
out
push
mov
jmp
jo
xchg
or
adc
lahf
push
or
in
rclb
jbe
or
aas
push
push
pop
clc
or
je
dec
sbb
out
pop
jle
notl
adc
nop
or
and
popf
or
ficompl
mov
sbb
int
ret
sbb
cld
xor
jg
jo
stos
and
fdivs
negb
out
mov
inc
jns
cmpsb
cmpsb
stos
pop
dec
add
xor
je
xor
outsl
jno
mov
les
jb
xor
nop
push
mov
xchg
jmp
add
addr16
flds
and
mov
ret
stc
and
movb
sbb
adc
shll
fdivp
hlt
mov
cltd
inc
int3
xor
and
pop
aaa
sub
pop
sbb
pop
je
stc
inc
xchg
or
repnz
or
hlt
mov
shll
inc
push
jno
mov
push
ds
jl
repz
sahf
pop
add
stos
jl
mov
loope
test
loopne
add
or
test
iret
sbb
cwtl
xor
lock
xrelease
test
filds
mov
pop
loope
xor
pop
xchg
daa
test
das
push
icebp
dec
ficomps
mov
add
testl
sub
insb
scas
pop
and
inc
fadds
pop
jge
or
jmp
jecxz
ret
dec
in
icebp
rolb
and
in
mov
adc
stos
lea
mov
mov
xchg
mov
add
jmp
sti
pop
add
popf
or
pusha
movsl
dec
test
adc
imul
outsb
jle
shl
loopne
push
in
xor
lock
inc
and
xor
stos
jge
mov
push
inc
pop
mov
xchg
fdivrs
insl
mov
ljmp
cmp
mov
jl
nop
sbbb
imul
mov
mov
fildll
push
lods
les
in
push
push
mov
adc
jl
jb
push
in
andb
mov
pop
int3
shr
pop
push
pushf
xor
or
cmpsl
roll
dec
scas
test
jae
xchg
not
imul
jmp
js
xchg
addb
push
in
mov
shlb
cmp
jns
je
push
cmpb
std
pop
cmp
into
and
fisubrs
push
pop
outsl
loopne
stos
pop
repnz
fnstenv
sub
pop
pop
xchg
xchg
push
mov
push
movsb
xchg
inc
lods
mov
cmp
xchg
xor
mov
inc
addr16
or
sbb
fdivrs
test
cmc
jns
scas
inc
sti
pusha
cmp
hlt
pop
rdmsr
scas
xor
in
sub
cmpxchg
ja
and
ljmp
adc
cld
cmp
jg
jne
or
sub
jns
mov
xchg
pop
addr16
mov
cld
inc
xchg
cli
negl
idivl
add
iret
inc
push
jno
ret
js
sub
stos
mov
sahf
jo
or
inc
push
rcrl
mov
pop
stc
jecxz
rcrb
mov
mov
inc
notl
or
mov
imul
add
pusha
xchg
xlat
sysexit
sbb
mov
xchg
cmc
push
jg
dec
push
nop
pop
jmp
add
mov
sub
ret
inc
cmp
jg
data16
clc
jae
pop
insl
push
mov
lret
lahf
xor
xchg
jnp,pt
fstpl
ds
sahf
or
adc
dec
pop
pop
or
les
les
insl
iret
jnp
inc
cmp
test
imul
stos
cmpsb
push
sbb
mov
aas
jmp
mov
out
jge
push
dec
cmp
scas
add
or
mov
bound
mov
outsl
jbe
mov
add
inc
push
call
fmull
nop
lods
sbbl
xorb
mov
pop
cmp
fs
loope
mov
jle
add
cmp
jne
mov
pop
movsb
stos
ss
int3
ret
dec
nop
pop
pusha
ja
lods
mov
sub
in
shll
movsb
xchg
mov
push
adc
push
mov
arpl
adcl
bound
imul
repz
cmpsl
pop
mov
xchg
pop
movsb
sti
aas
push
sub
xchg
push
push
loope
fcmovne
sbb
lea
xlat
and
lds
cwtl
subl
icebp
cmp
adc
icebp
sub
jmp
idiv
fbstp
andb
rcrl
jle
pop
push
cmp
leave
into
loop
lcall
sbb
fmull
ret
add
shll
adc
jne
adc
push
in
sti
push
roll
jne
pop
imul
mov
shlb
xor
std
adc
xor
imul
aas
es
pushf
shrb
add
jmp
dec
xorl
gs
je
add
mov
push
add
jb
dec
lock
jbe
rclb
in
fdivrl
sbb
mov
nop
js
dec
mov
movl
mov
loopne
lahf
add
popa
or
cmp
out
cmc
jp
xor
mov
repz
sub
and
orb
jmp
js
icebp
push
mov
mov
call
add
xchg
and
popf
or
pop
jle
aam
repz
or
std
xor
xchg
pop
je
lret
mov
jbe
lret
cs
add
push
stc
mov
lea
imul
mov
data16
mov
pop
mov
pop
out
out
and
and
mov
fistps
sbb
and
or
testb
mov
cmp
nop
and
movl
jg
lret
sbb
outsl
mov
hlt
outsl
insb
test
jb
repz
fisubl
push
inc
insb
xor
push
or
inc
pop
fiadds
jnp
sti
lds
sbb
mov
push
pop
xchg
adc
stos
imul
mov
pop
hlt
ror
fs
je
mov
lds
mov
mov
inc
aaa
adc
mov
outsb
in
into
xchg
in
push
into
and
ret
jno
fistps
into
sub
mov
arpl
cmpsl
mov
fst
push
mov
pusha
lds
xor
lds
pop
std
pop
sbb
mov
sbb
roll
or
out
pusha
outsl
sbb
jbe
fists
rcrl
lcall
rclb
mov
mov
lret
mov
pop
cmp
insb
push
xchg
icebp
mov
rcr
and
push
jmp
push
dec
rcrl
inc
mov
ss
inc
jo
or
icebp
sub
dec
test
mov
jle
mov
out
mov
xchg
dec
rol
adc
add
popf
outsb
rorb
jl
add
into
add
push
inc
cmp
outsl
cs
out
push
push
mov
push
mov
xlat
pop
xchg
mov
sbb
add
cli
outsb
ja
fwait
adc
mov
pop
mov
aad
jle
xchg
push
stos
push
fstps
mov
std
and
cmpsl
push
lret
aam
idiv
jns
inc
stos
adc
jmp
in
dec
mov
pop
mov
push
jmp
pop
push
sbb
imul
push
adcb
mov
push
dec
mov
push
push
popa
mov
dec
movsl
ficompl
mov
fists
test
lods
mov
aas
popf
sbb
adc
das
pop
scas
ja
hlt
pusha
add
daa
scas
pop
sbb
or
mov
fs
dec
pop
not
sub
xchg
imul
push
in
sub
les
lock
push
and
je
icebp
mov
mov
fs
adcb
fnclex
jg
jle
rcrb
mov
je
call
and
xchg
push
das
cmpsb
push
outsb
jnp
hlt
lds
xor
dec
incb
pop
jle
add
aad
lahf
in
adc
bswap
leave
cwtl
lret
repz
mov
lods
lds
rcrl
js
cs
push
arpl
adc
jnp
jle
mov
ret
lcall
outsl
lods
cmp
mov
adc
mov
inc
sti
adc
push
mov
fnop
pop
adc
xchg
pop
sub
and
in
sbb
scas
xchg
ret
bound
pop
lcall
jae
ret
iret
or
jl
aaa
daa
dec
mov
jl
sub
and
js
lock
jo
pusha
inc
les
add
cmc
jbe
enter
inc
inc
sub
in
mov
add
push
fsubrs
repz
jmp
xchg
or
add
lods
sub
test
aam
ficoms
dec
xchg
stos
mov
call
push
pop
mov
outsl
xor
adc
or
imul
repnz
test
adc
jne
inc
cmpsl
dec
cmp
jns
sub
sarl
mov
testl
xor
bsf
arpl
xor
and
sbb
push
jne
cmp
fwait
js
or
mov
pop
jge
leave
sbb
es
or
aam
add
mov
push
sbb
mov
and
dec
out
int
fcompl
push
dec
fstp
mov
add
popf
jo
addr16
cltd
cmc
mov
sbb
mov
mov
xor
adc
movsb
or
xlat
mov
fs
insb
ja
sti
sbb
lret
or
mov
int
or
adcl
repnz
pop
add
bound
imul
lahf
je
cmpsb
ret
jg
popa
fidivrs
adc
sbb
cmp
mov
repz
cmpb
rcl
jge
xchg
jecxz
mov
xor
xchg
adc
mov
fdivs
sub
and
fidivrs
scas
inc
pop
dec
inc
inc
sbb
gs
loop
or
jno
das
add
xor
fisubrl
dec
fdivs
cmp
pop
ret
mov
lea
sub
adc
sub
lds
lock
mov
and
mov
mov
mov
ret
or
ficoms
call
stos
es
sbb
rorl
adc
inc
call
cmpsb
xchg
xor
sub
aas
xchg
sbbb
je
push
call
push
xor
mov
mov
and
sub
pop
push
cltd
add
jb
sub
mov
pop
popf
mov
jg
imul
push
mov
xlat
and
pop
sahf
mov
xor
mov
js
mov
ljmp
jnp
imul
into
xchg
pop
xor
mov
in
bound
jb
inc
inc
repz
fcoml
sub
jnp
hlt
sti
sarb
fmull
cmpb
cltd
dec
aad
pop
inc
mov
imul
add
adc
add
add
cmp
sbb
add
outsl
jl
cmpsl
push
aam
dec
sbb
loop
rcrb
test
cwtl
sbb
lcall
cmpsl
mov
dec
jg
cmp
ret
dec
cli
cmpsl
sub
jge
loope
mov
jnp,pn
xor
or
js
les
xchg
mov
push
sub
add
out
int
popf
mov
xchg
bound
std
stos
rcr
repz
lcall
sub
or
rdpmc
icebp
sbb
inc
lods
ss
and
adc
pop
nop
in
jne
insb
or
push
adc
andb
inc
and
sub
push
adc
cli
pop
push
popf
stos
cmp
jbe
data16
out
lcall
loope
jns
sub
ds
aas
xchg
push
ret
ror
mov
addl
dec
inc
push
cs
mov
fcmovnb
test
leave
shl
ret
hlt
insl
sbb
jp
bnd
pop
push
pusha
jmp
cmpsl
rcrb
push
pop
mov
or
sbb
mov
insl
stc
inc
inc
ss
jae
push
fstpl
fldt
popa
xlat
pop
addl
add
movsl
sub
mov
push
lods
mov
xor
sbb
sub
jge
jne
out
ja
inc
leave
mulb
jg
aam
jl
xor
pushl
mov
jae
cmp
mov
or
adc
pop
pop
std
into
lods
push
repz
lea
or
mov
jecxz
jmp
mov
mov
loop
push
push
push
daa
jecxz
cmc
mov
jmp
cmp
nop
push
sbb
jnp
and
aam
loop
rcl
bound
fs
jp
sahf
add
lcall
xchg
dec
lcall
and
cmpsl
dec
xchg
mov
pop
lret
lods
cmpsl
xchg
fstps
xor
fadds
cld
push
adc
imul
cmp
jg
repz
or
add
stc
sbb
arpl
xor
mov
mov
scas
aam
fwait
hlt
sti
aad
fs
cmp
or
rclb
inc
inc
dec
adc
scas
fildl
mov
or
mov
in
mov
out
adc
and
mov
xlat
xor
adc
andb
incl
call
mov
and
cltd
or
inc
stc
mov
mov
push
enter
daa
imul
xchg
test
lods
sub
in
icebp
or
and
lea
push
mov
or
mov
loope
xchg
mov
sahf
test
addb
leave
pop
aaa
push
arpl
cmp
pop
xchg
jge
dec
mov
jg
sub
xchg
sub
fisubl
movsb
inc
push
mov
fnstcw
jnp
dec
fldenv
adc
xor
js
lahf
sub
in
std
aaa
out
xchg
push
sbb
jp
push
in
out
dec
xor
addr16
sub
push
cmp
stos
push
inc
jg
jcxz
nop
adc
push
dec
fwait
aam
cmp
fs
fstpl
into
add
je
incl
fnstenv
push
add
jns
out
cltd
push
gs
jecxz
mov
add
js
shrb
into
ret
mov
xchg
outsl
mov
sahf
int3
inc
fistl
leave
mov
scas
add
in
sub
mov
push
add
repz
sbbb
pop
dec
pop
sarl
call
jmp
and
or
lea
push
or
xor
scas
stos
mov
pop
je
in
adc
dec
and
jl
mov
xchg
jnp
or
into
jae
popf
mov
and
outsb
push
in
stc
out
fcomps
push
mov
or
or
and
push
dec
or
xchg
mov
dec
inc
repz
adc
jno
sbbl
xchg
movsl
lods
add
jno
cltd
add
dec
push
rorl
or
mov
cmpsb
popf
scas
cli
loop
mov
jmp
into
mov
loop
ljmp
inc
in
lret
nop
mov
mov
movsl
lods
bound
flds
pop
push
movsb
mov
cli
mov
cmc
add
fsubl
pop
mov
xchg
leave
xchg
shll
call
fdivl
popf
cmp
call
aam
lea
dec
inc
add
cwtl
mov
sbb
sbbl
popa
out
push
mov
pop
addb
xor
idivb
out
test
inc
jle
hlt
icebp
aaa
pop
adc
cmp
and
jb
push
or
push
mov
adc
inc
sbb
loop
jae
test
out
mov
aaa
pop
mov
mov
stos
mov
xor
decb
mov
mov
adc
add
repnz
es
orb
dec
sub
adc
adc
pop
or
jecxz
out
sbb
fmuls
xorl
cld
pop
ss
and
adcl
dec
fcoml
add
mov
cs
mov
jge
sbb
xchg
lds
iret
mov
in
in
scas
and
xor
mov
sbb
jne
loop
add
out
aad
rorb
add
dec
arpl
dec
mov
sbb
fcomp
lahf
into
enter
stos
and
add
imul
arpl
mov
insb
fildll
nop
add
out
xchg
test
pop
push
push
xor
je
dec
mov
call
movq
or
scas
dec
in
in
mov
decb
mov
std
xorl
rolb
cmp
add
int3
pop
sub
sbb
xor
std
mov
out
mov
mov
xchg
mov
int3
inc
cmp
sbb
pop
lret
scas
xor
mov
les
mov
adc
xchg
stos
mov
jmp
loope
lods
fs
sbb
fs
fwait
aas
loop
testb
mov
pushf
push
je
mov
sbb
mov
pop
pop
mov
mov
jnp
das
es
and
cmpb
add
xor
mov
push
clc
cmp
xor
pop
ret
lcall
jl
fsubl
loop
test
in
push
mov
dec
add
adc
mov
xchg
flds
pop
adc
xchg
pop
andb
imul
sub
and
add
push
mov
push
jb
sub
fisttps
add
mov
pop
add
into
movsl
pop
push
std
aas
adc
cmpsl
incl
fs
popa
lods
test
aas
mov
rcll
and
push
or
sar
cwtl
mov
fwait
in
imul
out
lods
cmp
iret
cwtl
or
inc
jb
dec
jnp
loop
mov
lods
ss
mov
gs
xlat
and
mul
montmul
cmpsb
test
addr16
cltd
std
sub
mov
mov
jnp
enter
std
or
and
out
leave
lahf
loop
outsb
cmpsl
add
ret
xchg
fstpt
adc
inc
cmp
mov
fadds
add
push
mov
and
dec
orb
xchg
lods
pop
out
cmp
inc
sub
cli
and
jno
lea
nop
jg
aad
pop
fwait
orb
sub
cmp
sahf
adc
pop
sete
pushw
or
loope
jbe
jmp
fnstcw
lret
aas
pop
cmp
rolb
cmp
repnz
insb
arpl
testb
and
jecxz
cli
jne
jp
mov
ljmp
lock
lods
lcall
repz
and
les
out
mov
imul
pop
aad
pop
inc
xchg
leave
push
inc
and
push
add
clc
xor
clc
jae
dec
pop
int3
pop
in
roll
jo
sub
pusha
cwtl
movsl
pop
fisubrl
add
add
adc
mov
loopne
idivb
add
icebp
dec
lret
je
dec
rcrl
mov
out
inc
mov
or
cmc
inc
pop
rcrb
dec
push
and
adc
push
push
pop
push
sub
xor
inc
inc
imul
xor
cmpsb
popf
ret
mov
xchg
stos
lock
pop
cmpsl
mull
ljmp
mov
aaa
std
mov
flds
or
pop
lret
in
and
xchg
sbb
clc
cmp
jbe
adc
or
dec
shlb
add
pop
andl
repnz
mov
addb
jmp
iret
jo
push
xchg
inc
xor
imul
add
and
rcrb
dec
clc
xchg
movsl
adcb
pop
push
push
pop
or
sub
rol
pusha
xchg
pop
sbb
in
jle
cmp
leave
int
cltd
gs
mov
dec
fldl2e
subps
dec
adc
cmpsl
fstp
xchg
sbb
test
bound
sub
lahf
aaa
mov
mov
dec
cmpsl
aad
pop
repnz
inc
movsb
data16
out
pop
and
in
mov
js
dec
dec
push
insl
pop
adcl
sbb
outsb
popa
or
mov
lods
mov
insl
mov
ds
sbb
fwait
jg
decb
pop
xchg
inc
jno
sbb
add
imul
sbb
push
insl
arpl
dec
out
inc
mov
inc
shll
rcrl
inc
pushf
push
daa
daa
decl
dec
in
int3
mov
jae
mov
adc
outsb
xchg
mov
nop
cmp
dec
insl
sbb
or
out
fwait
sbb
and
push
mov
sar
rcll
in
and
mov
mull
xchg
or
lahf
add
sbb
aam
ds
fsubr
push
xchg
push
xchg
cmp
outsl
leave
insl
push
lock
arpl
cmp
fwait
mov
xchg
cltd
xchg
and
das
std
cmp
dec
fildll
je
outsb
fidivs
imul
hlt
pop
jne
out
enter
mov
cmpsb
in
stos
xlat
xchg
push
sub
rcl
xchg
ja
fimuls
mov
cltd
mov
add
cmp
loopne
stos
hlt
inc
fxam
stos
jp
mov
fistps
inc
dec
ljmp
inc
subb
xchg
and
ljmp
dec
sahf
clc
cmc
mov
inc
and
adc
out
iret
inc
clc
ss
mov
test
sbb
pop
jno
in
sbb
xchg
lret
mov
cmp
jecxz
add
sbb
rcll
inc
jp
int
pop
xchg
xchg
adcb
pusha
scas
out
mov
mov
adc
les
sub
pop
loop
add
mulb
pop
pop
hlt
inc
repz
adc
rolb
jmp
dec
ret
sarl
sahf
xor
nop
mov
int3
and
daa
cltd
shll
push
fs
add
dec
mov
movsl
les
and
mov
pop
test
push
xor
mov
push
dec
iret
mov
push
mov
out
add
cwtl
sbb
sub
insl
push
je
sub
sar
or
lods
mov
inc
sub
movb
loopne
xchg
aaa
out
xchg
dec
ret
leave
flds
jns
das
cmpsl
mov
cld
push
add
jo
cmp
mov
scas
leave
aam
mov
es
lods
push
push
push
xchg
jns
sti
push
filds
out
jl
nop
push
inc
add
leave
fiaddl
notb
testb
je
xor
mov
in
xor
xlat
in
movsb
push
cmc
inc
rcrl
arpl
lock
cmp
jnp
cltd
mov
aam
mov
mov
pop
cli
out
aad
jecxz
gs
loope
out
fisttpl
adc
pop
es
xor
inc
insb
pop
xchg
fidivrl
xor
push
jns
inc
add
out
adc
mov
xchg
mov
sub
hlt
or
clc
into
test
xchg
push
lret
inc
das
cmc
rolb
xchg
test
out
arpl
rcll
cmp
not
ds
sub
dec
adc
or
std
xchg
ret
lahf
sub
push
mov
mov
subb
jg
push
pop
loop,pt
data16
add
gs
jl
xor
lock
jl
outsl
sub
push
cmp
lret
aam
vpmacsswd
adc
jg
add
mov
fstpl
mov
loope
add
roll
mov
cmc
pop
shrl
je
xchg
rorl
xchg
lds
or
xchg
jmp
xor
adc
iret
xor
mov
subb
xchg
jns
daa
inc
and
push
iret
push
out
pop
xor
sbb
aam
xchg
pop
cmpsl
jp
and
addl
cmpsl
mov
shr
loop
pop
jle
pop
inc
add
adc
mov
adc
dec
xor
jl
ficomps
das
lret
stos
sbb
jnp
dec
xlat
push
mov
hlt
sub
xchg
or
push
jmp
xchg
xor
push
mov
push
scas
or
dec
mov
mov
ja
push
outsl
mov
push
xor
xchg
inc
fistpl
xchg
mov
jecxz
mov
nop
ret
push
sub
bound
push
lods
or
notl
test
or
fldt
xchg
fistpl
adc
push
push
shrb
loopne
test
int3
sbb
adc
push
test
and
cmp
dec
sub
xorl
jecxz
test
mov
cmp
clc
mov
jmp
popf
cmc
adc
lgdtl
push
pusha
push
mov
aas
jge
popf
pop
sbb
xor
out
jg
clc
popf
inc
push
inc
mov
mov
into
fldenv
fbld
fwait
pop
pop
mov
sub
pop
not
ret
enter
stos
cltd
xchg
lock
repnz
or
mov
xchg
dec
mov
adc
aad
es
ja
negl
jmp
mov
xchg
ror
push
fidivl
int
dec
sub
cld
cmp
lock
xor
iret
stc
data16
lods
pop
fdivs
adc
jp
mov
in
popa
xchg
jmp
mov
es
sbbb
mov
xor
in
adc
mov
and
imull
add
lahf
lahf
cmp
arpl
add
cmp
pop
notl
mov
test
mov
lock
mov
xor
sbb
sub
xlat
popf
cmp
lea
and
dec
push
popa
and
data16
mov
mov
lret
and
or
shll
mov
ret
pop
adc
leave
inc
xchg
mov
sarb
mov
sub
dec
aad
or
iret
lret
enter
cltd
jecxz
adc
stos
xchg
push
outsb
lock
les
or
adc
xchg
add
ds
in
cmpsl
outsb
nop
scas
mov
cs
imul
sbb
fucomip
jecxz
mov
fwait
adc
iret
movsb
mov
adc
mov
lods
sub
and
push
repnz
ffreep
popl
cmp
loop
js
xchg
jmp
pushf
push
sbb
mov
insl
lock
inc
mov
dec
push
jmp
jns
gs
fldt
xchg
xor
aad
dec
icebp
xchg
fisttpll
clc
imul
mov
shl
in
adcb
xor
das
bound
fnstenv
lea
je
lea
pushf
popa
loope
in
pop
jbe
xor
xchg
sbb
popf
add
mov
not
mov
test
and
sahf
push
fbld
aas
shll
xchg
mov
cwtl
xchg
test
sbb
fcoml
jbe
xor
or
cmp
adc
sub
or
mov
lods
lods
mov
out
inc
sbb
clc
cmp
enter
xchg
mov
js
pop
jge
inc
jno
sbb
cmpsb
sar
in
jo
lock
jmp
add
pop
mov
jae
fst
xchg
les
in
sti
adc
lahf
daa
push
shr
mov
inc
idiv
cmpsb
or
xor
dec
outsl
inc
cmpsl
outsl
dec
lods
push
aas
jo
push
in
in
fisubrs
xchg
bound
adc
mov
dec
adc
cmc
mov
xor
leave
les
lea
repz
inc
cmpsb
dec
ss
cmp
int3
stc
mov
rol
loopne
rorl
fs
shrb
imul
fldl
add
xchg
jmp
xor
es
scas
mov
mov
les
or
test
xchg
rorb
cwtl
in
push
jae
cmp
das
rcl
test
ficoms
and
xorl
mov
cs
pop
cmp
push
push
sahf
sub
rorb
jp
and
icebp
andl
loopne
sahf
lds
sahf
lea
pushf
jmp
stc
cwtl
or
ret
ret
aam
mov
pop
adc
sub
iret
outsb
xchg
fcomps
sub
ds
pop
outsb
jge
dec
pop
sbb
mov
scas
addb
arpl
ret
dec
stos
adc
repnz
loopne
cmp
or
jmp
xor
lret
push
push
in
ljmp
xorb
xchg
mov
xchg
pop
inc
cmpsl
sub
scas
mov
cli
add
mov
xchg
js
jl
push
int
cmp
pop
adc
test
mov
mov
mov
cmc
adcl
xchg
xor
pop
push
shrb
push
jno
or
std
push
sarl
pop
fistpll
pusha
mov
xor
insb
test
sbb
push
cmp
stos
mov
aaa
mov
xorl
sti
cld
dec
pop
inc
in
push
inc
push
jno
aam
popf
mov
fstl
dec
out
mov
pop
aas
cmp
adc
lods
loope
test
sbb
add
cs
mov
std
mov
shlb
mov
fnsave
pop
and
jmp
mov
mov
dec
and
int3
xlat
ja
inc
jg
dec
and
cmp
daa
push
jg
imulb
repnz
pop
arpl
pushf
adc
sub
or
dec
lds
jae
nop
ja
mov
pusha
into
jge
pop
lret
mov
popa
push
ljmp
in
xor
incl
lock
ljmp
ljmp
add
lods
cmp
xchg
push
outsb
jo
lods
sub
add
pop
insb
lods
out
or
push
mov
imul
mov
inc
mov
in
out
loopne
jns
mov
jnp
ljmp
test
xchg
sbb
push
cmp
add
inc
es
push
andb
mov
arpl
jg
shl
es
xchg
and
loope
push
bound
rol
pop
jae
pop
inc
ficomps
lret
xlat
mov
pop
or
xor
sbb
jg
sub
jno
imul
xlat
xor
test
push
pop
repz
inc
xchg
daa
jnp
and
xchg
jae
inc
pop
jne
or
faddl
push
pop
andl
jecxz
dec
leave
and
inc
std
cmpl
fidivs
gs
mov
xchg
mov
dec
xchg
pop
sbb
cld
cmp
shr
xor
inc
ficompl
mov
lock
mov
pop
mov
inc
lahf
pop
xchg
arpl
gs
fldt
xor
push
dec
dec
or
xchg
push
loope
shrl
push
stc
adc
mov
adcl
in
add
mov
mov
inc
or
incb
push
inc
data16
arpl
jmp
jo
sub
lcall
imul
das
mov
cmc
xlat
aam
mov
imul
mov
xor
in
jg
mov
fbstp
push
out
lock
out
or
cwtl
outsb
nopl
nop
addl
jbe
lret
dec
jp
popa
mov
je
iret
xor
inc
loop
or
jge
mov
adc
push
sbb
ret
and
jne
jecxz
sahf
cwtl
or
mov
xorb
movsb
xor
push
sbb
xor
or
std
leave
inc
inc
and
pop
jle
push
dec
imul
or
jp
sbb
nop
sbb
xor
popa
or
js
pop
punpckhbw
rcr
test
add
rolb
sub
or
pushf
add
lods
ja
dec
lcall
xlat
cwtl
rorb
cmp
pop
cmc
call
fdivrs
or
pop
ss
repz
test
pop
jecxz
lods
mov
lods
mov
es
lds
cwtl
or
iret
xchg
adc
jmp
nop
sbb
adc
out
int3
mov
mov
insl
jg
fwait
aam
scas
add
jmp
daa
lahf
mov
and
pushf
pop
fsubl
pop
mov
mov
das
mov
lods
cmpsl
mov
loopne
daa
inc
sub
inc
mulb
and
mov
dec
and
mov
cmp
into
cld
jmp
push
pop
pusha
adcl
jo
mov
pop
push
scas
or
aaa
roll
out
mov
lea
mov
mov
mov
sbbb
push
pop
test
stc
sbb
xchg
testb
mov
ret
cmp
xor
repnz
jp
sbb
lret
out
and
push
mov
mov
xchg
mov
test
mov
mov
cs
cmp
inc
lds
xchg
loope
jb
inc
xor
shlb
inc
out
xchg
pop
lea
movsb
push
clc
add
push
pop
xchg
cltd
hlt
out
aad
roll
push
leave
in
inc
je
dec
sbb
cltd
mov
inc
sub
fxch
mov
lret
xchg
mov
repnz
lock
xchg
cmpsb
jo
test
cmp
sbb
cmp
lea
cmp
push
mov
adc
cmp
scas
subb
push
add
dec
jae
stc
sub
in
jecxz
mov
push
xor
add
jecxz
inc
sub
hlt
cmp
mov
insl
pop
lock
daa
mov
or
jmp
imul
test
xchg
repz
popf
in
adc
out
mov
jp
or
xchg
cli
mov
pusha
and
add
popa
pop
adc
int3
sub
clc
and
dec
cmp
fs
xor
or
rorl
adc
sub
cmc
push
inc
push
scas
sub
sub
sbb
mov
stos
rorl
mov
pop
add
push
jnp
test
lock
or
pop
jb
sti
cmp
xlat
loop
outsb
fs
sarb
push
inc
inc
insl
jne
pop
and
dec
add
andl
add
jp
lods
sbbb
jae
cmp
arpl
inc
mov
or
cld
mov
cs
adc
fwait
test
jecxz
aas
sub
imul
mov
popa
jne
movsb
inc
fcmovb
sbb
pop
pop
movsl
and
inc
sub
cwtl
xchg
jmp
enter
gs
fsub
fs
mov
or
or
sbb
mov
sub
sti
adc
clc
jle
js
ja
cmp
cld
hlt
and
adc
cmp
jb
leave
pop
aam
cmpsl
adc
pushf
adc
jb
dec
push
js
rolb
mov
test
jae
cli
mov
test
pop
leave
pop
and
loop
gs
lret
sub
xchg
stos
idivl
inc
pop
aas
push
adcl
repnz
fcmovb
mov
in
test
dec
adc
push
lret
xor
cmp
inc
test
mov
push
sbb
and
add
insb
scas
pop
lods
add
adc
mov
fwait
push
outsb
sbb
fwait
js
xchg
adc
lret
add
popf
rcll
and
or
scas
sbb
lret
sub
cmp
pop
xor
add
jle
xchg
aad
outsl
popf
in
gs
icebp
fldt
mov
out
pop
ljmp
shrl
sbb
outsl
cmp
mov
pop
pop
fs
mov
jbe
rcll
adc
ret
jbe
repnz
push
dec
dec
popa
stos
cltd
sub
outsb
sar
cmpsl
xchg
sub
je
rcrb
cwtl
push
call
pop
bound
dec
xchg
mov
xlat
push
xchg
pop
sub
xor
cli
dec
mov
lcall
js
mov
leave
xor
jecxz
inc
sbb
fcoml
scas
push
out
enter
fisubs
jno
fadds
mov
sahf
lds
cmovae
filds
mov
xchg
mov
adc
stc
mov
jg
movb
push
adc
aad
ret
mov
pop
lcall
cmp
hlt
fs
test
call
iret
jo
push
push
adc
pop
and
shlb
xor
sub
pop
addr16
inc
sbb
mov
mov
dec
inc
sub
lcall
jmp
clc
pop
outsb
add
stos
dec
push
and
out
mov
sbb
mov
pop
and
call
xlat
roll
movsl
sbb
mov
pop
xor
jp
xor
jns
nop
adc
in
pop
mov
lahf
pop
mov
push
aad
lock
gs
and
stos
loopne
cs
sbb
adc
lret
cmp
lcall
push
jo
mov
add
movsb
cmpsl
outsb
loop
xchg
popa
sub
mov
mov
push
push
sbb
hlt
push
mov
fimull
cmpsl
cmp
jg
mov
inc
sti
mov
lods
jecxz
pop
jg
push
lods
lcall
fcmovnb
rclb
ljmp
inc
pop
push
dec
cmpsb
movsl
aad
pusha
test
notl
inc
in
mov
nop
sbb
add
addr16
mov
jmp
daa
idivb
mov
clc
push
and
lahf
cmp
mov
jmp
lock
mov
je
scas
push
sub
das
push
xchg
je
pop
lds
fnclex
scas
clc
js
aas
jecxz
cmp
fsubrl
fs
jo
and
jne
das
adcb
mov
cwtl
xor
push
aas
popa
sti
insb
add
fwait
stos
outsb
leave
pop
xchg
fdivs
inc
pop
mov
mov
in
ss
mov
or
dec
mov
jp
popf
pop
and
mov
iret
cmpsb
inc
xchg
mov
cltd
push
scas
leave
insl
and
dec
sbb
ficoms
mov
jne
inc
outsb
stc
sub
and
dec
in
leave
fwait
cmp
pop
ficoml
movsb
xchg
cld
dec
jnp
mov
les
icebp
es
scas
pop
jle
push
cmpsb
test
mov
push
clc
insl
push
add
cmc
int3
out
adc
test
testb
loop
xor
add
mov
cmp
cmpsb
dec
aas
and
out
mov
repnz
testb
aaa
add
insb
sub
add
shl
fmull
xchg
test
lock
mov
mov
int3
mov
int3
mov
mov
push
xchg
test
xchg
mov
lods
insb
mov
xchg
xchg
or
dec
pop
mov
xor
dec
imul
push
push
lcall
jbe
enter
mov
js
pop
fnstcw
mov
dec
and
ja
in
add
dec
das
jno
inc
enter
dec
cmpl
test
shr
fstpt
imul
psrlq
jl
cmpsl
adc
shlb
shll
ja
adc
inc
imul
das
sub
push
pushf
mov
out
es
movsb
ds
xor
mov
sbb
fiadds
test
in
call
insl
sub
ret
adc
movsl
lcall
push
call
nop
mov
into
and
sub
cld
repz
jae
add
cmp
int
and
aas
xchg
or
xchg
in
lea
push
fcoms
std
loopne
sbb
pop
jl
jbe
or
push
jmp
ljmp
bnd
xchg
inc
push
sub
outsl
inc
sbb
pop
mov
nop
js
adc
add
int3
sub
gs
xor
orl
mov
dec
leave
xchg
mov
jp
push
inc
jle
mov
and
mov
cmp
rcrl
addr16
dec
mov
inc
mov
jae
lea
addr16
leave
or
jns
dec
nop
popa
ds
inc
loop
sbb
add
cwtl
pop
sbb
int
xchg
mov
aad
loopne
adc
test
mov
bound
cmp
aad
dec
mov
js
ljmp
xchg
rorb
mov
repnz
pop
mov
or
adc
inc
stos
push
xchg
repnz
bound
clc
add
dec
divb
scas
es
daa
or
push
rcrl
es
lea
and
and
dec
xchg
test
lock
fadds
outsb
inc
daa
je
push
bound
xchg
shll
cmp
call
iret
jl
hlt
push
int3
int3
add
fcoms
adc
cmp
jne
imul
dec
imul
sbb
mov
cmpsb
std
inc
mov
inc
xlat
fimuls
sub
jno
fisubl
adc
cmp
push
xor
xor
push
xor
lahf
neg
sub
jmp
pop
adc
repnz
loope
sbb
test
mov
sbb
inc
pop
or
cmp
idivl
inc
jno
xor
call
jmp
out
add
pop
outsl
das
test
jl
mov
and
mov
scas
test
andb
lods
and
and
adc
dec
add
ss
push
dec
mov
les
xchg
dec
xor
or
lret
jmp
jbe
xor
mov
and
mov
data16
pop
inc
ss
pop
mov
fs
int
cmp
adc
xor
popf
stos
loope
sub
mov
xor
gs
jbe
in
xor
adc
sbb
mov
movsb
jno
test
mov
push
enter
rcrl
nop
inc
cmpsl
inc
add
adc
add
jae
xchg
xor
in
mov
adc
push
dec
xor
aad
aaa
in
loope
scas
add
lret
repz
push
mov
outsb
sub
iret
aad
cs
mov
je
sbb
shll
stos
mov
leave
loop
inc
sahf
xlat
inc
loopne
xchg
mov
xchg
pop
addr16
popf
push
ds
inc
jge
xlat
and
add
mov
outsb
test
into
fiadds
dec
or
mov
cs
jge
jnp
lods
cmp
lea
aas
fdivl
sub
ljmp
lcall
test
mov
outsb
dec
in
stos
fldl
loope
mov
fs
cmc
sbb
xor
sbb
xor
mov
adc
imul
ficomps
jnp
or
mov
xor
cmp
js
pop
stc
mov
pop
push
mov
mov
adc
repnz
mov
xchg
je
in
mov
xor
or
push
xchg
test
push
mov
pop
divb
mov
lret
int
cmc
xchg
xchg
sti
lea
popf
push
mov
cmpsl
std
mov
imulb
mov
popf
pop
aam
mov
dec
fsubl
pop
call
enter
shrb
gs
movsb
pop
or
jae
cmp
cmp
adc
pop
mov
dec
jne
fldt
out
mov
aam
rcrb
rcrl
test
outsl
jp
in
dec
push
cmp
stc
scas
push
test
mov
mov
mov
sahf
cld
xchg
nop
clc
adc
jmp
bnd
mov
mov
iret
jb
push
lds
in
xor
jl
stos
sub
icebp
push
jne
mov
in
pop
lock
cld
mov
aas
cmc
fwait
mov
sbb
adc
mov
sub
dec
les
test
test
icebp
outsl
fmull
xchg
lret
jns
adc
std
pop
adc
xchg
mov
jno
or
jne
popf
into
lock
imul
mov
sti
mov
xor
lods
dec
jge
push
and
inc
pop
ja
sbb
jecxz
fistl
sahf
sbb
enter
inc
jne
cltd
jle
mov
or
hlt
int3
mov
aas
and
syscall
mov
or
lret
sub
sbb
mov
jp
fs
dec
leave
mov
out
sub
enter
inc
fdivrs
int3
push
pop
fmull
in
sarl
or
mov
fldl
int3
popf
mov
and
jl
push
test
push
ret
gs
aas
adc
fdivl
cltd
icebp
push
xchg
pop
mov
inc
leave
and
xchg
xchg
mov
ja
inc
ljmp
out
add
xchg
pop
cmpsb
pop
repz
sub
adc
push
xor
jb
push
xchg
pop
arpl
or
cmp
cmpsb
insb
inc
inc
mov
xchg
jbe
outsb
sahf
nop
inc
mov
xor
pusha
lock
xchg
sahf
jb
out
and
dec
cmpsb
inc
fimull
xchg
push
stos
dec
clc
sti
test
mov
push
ja
push
xchg
out
ja
shll
fiaddl
and
push
xor
clc
std
or
popf
xchg
int
scas
push
push
je
fwait
shrl
loope
inc
lret
dec
lods
in
mov
outsb
xor
mov
jge
add
sahf
jle
adc
mov
mov
fcompl
pop
add
sahf
inc
jns
shl
ret
insb
ds
lcall
adc
add
or
aas
je
cmp
in
add
jo
fldt
mov
stos
int3
mov
imul
inc
mov
int
loop
dec
jmp
push
mov
push
sarl
sub
xor
cwtl
mov
movsb
insb
or
rcll
mov
insl
mov
dec
das
jge
arpl
lock
cmp
cmpsl
adc
dec
fmull
out
push
or
or
dec
lret
pusha
mov
loop
jg
inc
push
fsub
mov
pushf
aas
push
lds
push
push
mov
ret
cmp
mov
arpl
add
xchg
in
fsubrp
dec
aam
pop
sub
xchg
and
push
loope
jp
xor
scas
push
and
xacquire
aas
jl
inc
imul
jns
inc
int
in
ljmp
mov
and
mov
mov
aas
shll
cmpl
xchg
fidivrs
arpl
xchg
cmp
adc
lret
jp
jg
scas
test
int3
out
xor
shl
inc
ss
add
push
lods
lods
lods
into
arpl
add
flds
dec
mov
clc
gs
pop
cmp
add
hlt
mov
ljmp
or
fcompl
inc
insb
push
imul
test
mov
lcall
shl
pop
rcl
push
and
jl
mov
push
xor
and
mov
cwtl
popf
push
mov
mov
or
adc
xchg
pop
loope
shrb
adc
sbb
ljmp
test
cmp
ds
pop
mov
lea
dec
jl
xor
push
insl
push
cld
mov
ficoml
das
js
inc
inc
fimull
mov
inc
inc
or
mov
push
xchg
mov
insb
mov
sbb
or
inc
in
sbb
xchg
pop
push
mov
aas
dec
leave
xor
dec
or
sbb
mov
push
loope
cltd
and
ja
repz
dec
mov
xor
push
pop
jns
mov
add
ficomps
or
xlat
stos
ja
cmpsl
xchg
ret
xor
cmp
dec
push
sti
mov
pop
or
ja
dec
xchg
stos
out
push
add
aas
mov
sbb
or
mov
ror
cmc
imul
push
dec
inc
lea
add
sub
into
je
sbb
in
mov
and
mov
leave
inc
jp
ljmp
cmc
inc
stos
xor
push
aad
mov
pop
pop
nop
loop
fsts
or
jge
pop
fimuls
addl
dec
cmp
sub
inc
lret
sbb
cmpb
dec
arpl
jno
int3
jae
rcrl
pop
fldt
mov
call
leave
push
cltd
je
pop
repz
sub
pop
or
insb
inc
adc
ljmp
push
imulb
fisttpll
push
lcall
mov
repnz
cli
or
loop
sbb
sub
shl
insl
mov
inc
std
sub
pop
jge
or
fisubrs
lock
into
imul
dec
mov
sbb
inc
ds
cmp
lods
inc
mov
dec
pop
adc
bnd
das
sbb
push
hlt
out
pop
lcall
int3
int3
adc
jmp
mov
insl
or
lods
int3
std
fisubs
jnp
cmc
xor
xor
je
fdivrs
sbb
fadd
incb
clc
xchg
out
lahf
popa
repnz
icebp
je
out
jb
sbb
and
jge
es
xchg
das
pusha
xchg
xor
xlat
xchg
iret
xchg
cmpsb
nop
lds
clc
test
xlat
es
frstor
xchg
push
add
cmp
sbb
lea
mov
sbb
jle
mov
xchg
mov
sarb
xlat
nop
sub
rcrl
lea
pop
movsb
mov
cwtl
sub
push
xchg
fsubs
jae
fs
mov
push
add
xor
js
lret
push
sbb
leave
inc
sti
adc
lret
jns
pop
cmpsb
shlb
adc
repz
mov
add
and
test
dec
sub
shlb
sub
imul
push
shll
mov
rcl
lcall
sbb
test
push
iret
outsb
nop
jo
imul
daa
fwait
pop
inc
mov
pop
or
adc
mov
scas
mov
dec
and
in
sbb
icebp
jno
add
lods
sub
pop
test
pop
in
or
data16
popf
rcrl
scas
inc
aaa
cltd
push
icebp
xorb
sbbl
sub
pushf
cmp
adc
dec
adc
mov
xchg
pop
jb
mov
mov
cmp
dec
lods
ss
testb
mov
xor
insl
repnz
cmp
pop
mov
and
ud1
fwait
jae
dec
lods
sbb
xchg
out
jmp
fsubrs
jbe
ljmp
xchg
les
sbb
cmp
inc
ss
mov
enter
fldenv
adc
fisttpll
in
xchg
mov
outsb
pop
sbb
inc
loop
fsubrl
mov
and
stos
dec
pop
cmpsl
cwtl
xchg
cmp
adc
push
and
decb
or
pop
ficoms
mov
add
push
pop
lock
xchg
outsb
ds
push
std
ret
lock
xor
insb
add
in
sub
int
into
add
loopne
in
and
jge
int3
loope
push
mov
jb
add
icebp
dec
loop
testl
mov
pop
rcrb
sub
mov
dec
das
mov
in
cmpsl
cmp
aad
sub
xchg
inc
sbb
xor
add
sub
jle
bound
rorl
pop
cltd
cmp
or
sub
sub
mov
popf
and
lret
push
ds
push
push
rep
and
loopne
imul
and
aad
fadd
stc
inc
and
ret
lcall
xor
icebp
mov
mov
and
mov
ret
cli
inc
push
je
or
sub
xchg
cli
and
cmpl
pop
jge
adc
cmpsb
pop
add
sbb
popa
shlb
bound
dec
adc
push
xchg
cmp
and
jbe
or
xlat
scas
push
push
gs
movsb
pop
pop
mov
pop
fimuls
mov
push
inc
test
adc
jmp
idivb
pop
lret
inc
add
out
jmp
fbld
mov
xor
inc
js
les
and
inc
rorl
pop
lds
imul
inc
mov
dec
int3
adc
repnz
sub
out
test
rcrb
or
pop
inc
xor
popf
pop
icebp
push
cld
lods
test
std
sub
fs
inc
xor
enter
add
sub
rcrl
cmp
cmpsb
movsb
insb
test
dec
push
out
xor
pop
aas
ret
xchg
pop
jmp
mov
call
lea
rol
and
pop
ljmp
sub
das
inc
test
push
mov
sti
mov
lcall
xchg
test
mov
pop
imul
or
push
or
fcmovb
inc
loop
sbb
in
aad
gs
orb
xchg
jne
cmp
loopne
insl
dec
ficomps
les
int
addr16
or
incl
insb
pop
sub
out
inc
xchg
popa
in
push
in
mov
cmp
or
adc
cmp
dec
push
cld
xchg
pusha
hlt
mov
xor
std
aam
js
jno
xorps
inc
dec
xchg
push
xchg
iret
insb
add
jns
adcl
cmp
mov
fisubs
into
and
out
inc
jb
ja
sub
mov
iret
cmpsb
cmc
lods
movsb
rcll
jge
popa
mov
pop
negb
or
into
push
jle
push
mov
lds
jns
stos
pushw
data16
out
lods
in
fs
jmp
orl
sbb
lods
cmp
adcl
leave
cmp
xor
inc
popf
xlat
pop
xor
mov
cmp
je
enter
cmpsb
fnop
pop
test
cld
add
shll
test
test
mov
mulb
test
ret
push
push
lods
outsb
xchg
sahf
stos
jle
pop
fstpt
js,pn
mov
pop
test
aas
fstl
daa
cld
pop
repnz
xchg
sarl
cmp
cmp
iret
sbb
test
xchg
xor
fcoms
dec
in
inc
lds
popf
cltd
fsubrs
push
mov
gs
xchg
mov
dec
fistpl
pop
lea
imul
or
xchg
push
cmp
xor
outsb
dec
outsl
iret
inc
jecxz
adcl
sbb
test
mov
cmp
arpl
sbb
sbb
xor
mov
adc
push
ja
int
filds
aas
mov
jnp
aaa
aad
push
push
aam
imul
frstor
rolb
cmp
adc
in
stc
or
push
aad
test
xchg
inc
push
push
fistpl
sbb
xchg
loopne
cli
adc
xchg
cmpsl
dec
test
add
stos
mov
jae
jg
jmp
addr16
adc
xchg
adc
pop
and
lret
xchg
push
lods
adc
sub
mov
xor
lcall
aas
ror
jmp
out
adc
adc
pop
sub
out
pcmpgtd
pusha
dec
mov
mov
dec
test
mov
loope
repnz
ficoml
jl
cmp
int3
jmp
mov
sar
popf
sub
mov
pop
lret
loop
or
jns
jg
shr
mov
mov
flds
aad
ljmp
inc
or
addr16
xchg
pop
js
popa
stos
mov
inc
mov
sub
pop
xchg
ss
lods
pop
mov
jne
pop
fstpl
sbb
bound
das
leave
jnp
sub
ljmp
add
push
inc
in
fistps
mov
hlt
mov
nop
dec
xchg
pop
add
stos
jno
out
mov
repnz
int
xor
shll
dec
cmpb
lods
iret
leave
ficomps
rcrb
out
pop
incb
inc
fisubrl
sbb
pop
lds
test
push
mov
in
mov
fucomp
or
fldl
pusha
mov
xchg
mov
addb
cs
cmc
adc
push
cmp
movsb
mov
pop
inc
scas
bound
sub
int
pop
out
cwtl
and
test
in
addb
and
outsl
add
inc
faddp
daa
push
push
or
and
xchg
push
jecxz
nop
jecxz
pop
in
in
sahf
jns
pop
sub
cmpsl
shlb
lret
std
imul
inc
outsl
add
insb
jmp
cmpsl
fistl
dec
mov
add
inc
sahf
enter
jmp
xor
int3
adc
or
push
jae
fists
ljmp
sub
sub
inc
adc
mov
insl
push
jl
outsb
mov
iret
pop
mov
jnp
xor
dec
xchg
add
sub
in
out
fisttpll
call
add
dec
aaa
adc
xor
inc
mov
stos
or
xor
arpl
mov
adc
bnd
pop
pop
xchg
sbbb
test
mov
leave
scas
arpl
mov
sub
xor
negb
call
mov
jae
call
aaa
xlat
sbb
loope
lahf
xor
mov
sub
ljmp
addr16
jo
xchg
fwait
mov
and
dec
in
std
jge
into
sub
mov
pop
inc
cmp
fsts
push
mov
leave
xchg
addr16
mov
inc
and
loop
addr16
sbb
push
xorl
cltd
xor
mov
test
ljmp
nop
push
push
loope
orl
jmp
cmp
sahf
in
mov
test
mov
xchg
push
or
fwait
push
pushf
mov
lcall
mov
push
xchg
into
push
rcrl
jns
loop
adc
mull
cli
xor
outsb
sarb
and
xchg
pop
xchg
cmp
popa
jle
loope
mov
les
in
lods
fcomps
mov
icebp
in
and
adc
inc
push
int3
xchg
or
hlt
movsb
xor
dec
pop
mov
lahf
pushf
sbb
ss
mov
int
sub
fsubp
push
sahf
ds
data16
out
cmc
jb
fimuls
add
in
dec
test
aaa
stc
mov
mov
push
movsl
and
out
xchg
js
mov
fsubrs
out
test
adc
test
call
stc
test
mov
mov
rclb
cs
jb
test
cwtl
aas
jo
les
clc
aas
mov
cld
je
mov
fstpt
add
test
shr
sahf
popa
cs
out
pop
xchg
xor
sbb
mov
loope
outsl
adc
ja
xchg
push
insl
jp
xchg
lock
scas
dec
ficoms
enter
cmp
arpl
xor
add
fs
ljmp
mov
mov
adc
xchg
add
jge
mov
popf
ja
aas
dec
rcll
setbe
sbb
mov
adc
xchg
std
negl
int
push
dec
mov
add
ficomps
popa
push
cltd
xchg
mov
mov
add
pop
imul
std
inc
mov
jo
sub
loop
fstps
sti
test
rorl
in
sub
xchg
loopne
gs
pushf
or
popaw
insb
pushw
mov
test
xchg
mov
mov
test
xorl
xchg
pop
sbb
push
das
fnsave
push
outsl
xor
jg
xor
adc
and
dec
in
mov
xor
xor
cmp
and
mov
and
inc
rcll
add
nop
mov
sbb
adc
xchg
xor
sub
rcr
xchg
fucomi
fisttpll
push
out
packuswb
mov
data16
inc
fnsave
mov
nop
cmp
inc
jns
jg
mov
adc
adc
add
daa
cmpsl
out
loope
pop
icebp
dec
les
or
cmpl
call
sti
aaa
clc
shll
mov
jge
add
lcall
lock
sbb
adc
mov
add
mov
mov
dec
stos
push
jne
fucomip
pop
ljmp
scas
pop
xchg
stos
hlt
addr16
test
mov
popf
lock
pop
lret
hlt
add
mov
fmul
sbb
and
sub
push
insl
adc
fwait
ljmp
xchg
cmc
outsb
pusha
mov
mov
sub
fs
cwtl
mov
adc
cli
icebp
loop
sbb
imul
add
fucomip
pop
xor
loope
je
faddl
and
movsb
test
push
inc
mov
inc
movsb
ficomps
mov
out
leave
jb
pop
jmp
jae
xchg
addr16
xor
insl
push
xlat
mov
xor
sahf
adc
hlt
fmul
in
jmp
pop
mov
mov
xor
fnstcw
mov
lcall
pop
rorl
pushf
cmpsl
pop
dec
mov
rorb
outsb
jmp
or
add
out
xchg
sar
adc
pop
cmpl
lret
mov
punpckldq
push
add
adc
mov
mov
cmp
and
mov
into
dec
xchg
stc
xor
ja
loopne
cmp
mov
adc
aad
jge
fistl
in
cmp
fcoml
ficoms
nop
push
xor
xchg
cmpb
loope
cmpsl
cwtl
hlt
mov
inc
cld
ss
fldcw
jmp
sub
roll
lods
idivb
dec
int3
mov
mov
daa
push
stc
in
dec
or
inc
xlat
sti
mov
jb
cmpsl
xor
cmpb
pop
and
push
jge
stos
xorb
xor
repnz
mov
aad
icebp
arpl
fildll
scas
aaa
pop
ljmp
and
sbb
mov
jg
push
repz
cli
movsb
in
add
rcrl
mov
and
aas
push
sub
mov
mov
mov
hlt
bound
ds
pop
xor
ja
enter
mov
pop
mov
sbb
mov
cltd
pop
popf
stc
cmpsl
mov
pop
leave
pop
pusha
mov
mov
cmp
add
sbb
int3
xor
call
sbb
mov
mov
cmp
and
icebp
pop
pop
icebp
push
adc
subl
das
push
hlt
lods
sahf
das
pop
pop
lret
cs
addr16
push
dec
jb
sbb
mov
mov
mov
movsl
fdivs
lea
pop
mov
repz
jae
out
or
imul
jmp
hlt
push
dec
sub
mov
push
push
shlb
pop
test
loope
pushf
adc
jns
out
testb
pop
int3
daa
ret
lahf
sbbl
rcrl
pop
push
outsl
in
pushf
loop
pop
daa
iret
push
pop
lret
mov
xor
aas
cwtl
push
fs
pop
mov
insb
iret
and
inc
outsl
movsb
iret
xchg
aad
jl,pt
inc
shll
into
leave
xor
cmp
and
hlt
in
mov
sub
out
pushf
push
mov
dec
mov
loope
add
enter
mov
xor
rcll
bound
jae
push
xchg
push
in
sbb
xchg
jmp
push
lret
jnp
jg
jmp
cmpsl
ss
xchg
shl
cwtl
stos
inc
or
inc
fisttpl
adc
sbb
ja
mov
lds
cmp
fdivrl
cmp
cmc
xchg
fistl
bound
std
and
stc
fdivrl
xlat
dec
pop
mov
xchg
lcall
mov
pop
mov
add
xorl
add
stc
mov
lcall
imulb
jg
dec
sbb
lret
add
mov
imul
sub
mov
mov
jle
cwtl
xor
mov
mov
and
pop
inc
and
push
jmp
or
sub
inc
rcrl
jg
push
jmp
out
in
fs
xlat
mov
jnp
mov
rorb
ja
sbb
mov
lcall
sub
and
adc
adc
subb
das
mov
push
push
lret
pop
std
jno
sbb
push
add
mov
mov
das
jnp
cltd
insb
xor
dec
cltd
mov
adc
fs
dec
xor
add
arpl
out
repnz
xchg
call
aad
cmp
fisubrs
and
ud0
ret
lret
xchg
cs
clc
cmp
subb
and
adc
push
arpl
cltd
sub
mov
js
mov
out
mov
mov
jo
push
pop
xchg
nop
cmp
in
data16
mov
xlat
cmpsl
sub
lret
mov
rcrl
add
stos
shrl
fsubl
scas
add
stc
push
iret
mov
je
cwtl
xchg
ja
in
icebp
loope
das
pop
test
int
cmp
nop
adc
cwtl
icebp
hlt
test
cwtl
xchg
push
xchg
stos
sub
or
sbb
loopne
add
and
pop
sbb
cwtl
lret
stos
mov
inc
mov
sbb
pop
cmp
jecxz
shll
mov
dec
mov
lcall
sub
aam
insb
mov
mov
push
jl
xor
xchg
cmc
adc
add
inc
outsb
imul
xchg
and
push
mov
xor
xor
pusha
mov
aam
mov
add
test
sub
push
jl
ret
push
dec
cs
xchg
nop
and
out
pop
mov
xor
fs
mov
insb
cmp
shll
movsb
dec
lods
incb
fcmovu
popa
jp
stos
outsb
cmp
ss
stos
mov
scas
xor
cltd
fwait
ret
push
jmp
shlb
lret
mov
bound
mov
push
mov
fcoml
xchg
xchg
into
scas
repnz
jle
push
sbb
mov
push
adc
pop
std
jb
jae
mov
xchg
add
shrl
test
xlat
scas
test
push
pop
mov
fldenv
or
mov
loope
roll
fstpl
xchg
in
icebp
push
inc
or
mov
dec
cs
mov
mov
imul
add
sub
in
ja
pop
dec
hlt
ret
repz
dec
cmc
stos
nop
push
mov
mov
int3
imul
cmp
das
xlat
out
lds
xchg
outsb
push
push
fsts
les
je
add
lock
jge
inc
jmp
adc
adc
jle
bound
adc
daa
nop
subb
pop
bnd
cmpsl
mov
sbb
xchg
adc
sar
and
dec
cmp
aaa
inc
or
cld
loope
rorb
dec
lods
mov
cmp
dec
mov
add
add
cmp
and
in
cmp
xchg
and
push
add
out
jnp
adc
sub
jb
andb
bound
scas
mov
push
push
repnz
pop
mov
lahf
jbe
popf
in
leave
pop
add
cmp
fstl
adc
and
dec
icebp
sarl
cmp
mov
push
fwait
push
push
jmp
fwait
push
jg
xor
add
cmc
iret
mov
loopnew
sub
cmp
jns
cltd
mov
cmp
jb
pop
push
xchg
or
dec
or
mov
add
cmp
add
cmp
xor
mov
cmp
notl
fdiv
mov
sarl
xchg
pop
outsl
cwtl
scas
pop
or
sarl
inc
and
imull
pusha
inc
mov
into
cltd
cmp
inc
inc
or
addr16
adc
sti
mov
call
adc
cmpsb
mov
adc
mov
xor
les
push
repz
inc
int3
push
jns
mov
je
fisttps
stos
int
adc
or
lcall
call
leave
out
xchg
outsl
cmpsl
mov
push
jnp
mov
xor
fisubs
xor
pop
out
into
and
or
mov
or
les
dec
orl
addr16
jecxz
repnz
fisubl
cmp
rolb
test
jbe
pop
adc
test
inc
or
sub
xchg
mov
jno
sbb
cwtl
bound
rcll
jl
repz
jae
stos
pop
jge
sub
xor
cmc
sbb
cmp
cmpsb
xlat
xchg
cmp
imul
jae
mov
movsb
les
cmp
and
sarb
fcoml
imull
cmp
inc
cld
in
mov
and
inc
call
cltd
cs
into
inc
adc
dec
mov
xor
out
add
out
cld
mov
and
xor
push
loopne
mov
cltd
addr16
xlat
inc
fimuls
imul
fcompl
sub
fcomps
push
dec
or
in
pop
ffree
add
inc
dec
adcb
mov
pop
jnp
pop
mov
sbb
mov
jp
aam
pop
sbb
add
hlt
imul
xor
push
aad
sub
pop
dec
dec
leave
lcall
jo
dec
push
jecxz
xor
scas
xchg
aaa
fadds
mov
sub
repz
mov
movsb
mov
rorl
iret
mov
cmp
xchg
mov
add
inc
adc
test
and
out
xor
mov
mov
stos
add
sti
data16
jb
cmpl
mov
std
mov
jbe
xchg
les
out
jo
jecxz
mov
out
jno
cmpsb
sbb
lods
mov
push
add
pushf
adc
cltd
stos
or
std
sub
pusha
popf
inc
outsl
adc
inc
repz
push
icebp
dec
dec
dec
cmp
pop
push
pop
xchg
pop
mov
mov
sbb
mov
push
pop
clc
int3
movsl
psubw
fs
insb
inc
cltd
fs
jne
imul
xchg
ja
daa
lods
inc
into
or
and
ret
jge
mov
out
lahf
mov
add
inc
mov
roll
mov
jecxz
jne
lret
insb
add
add
xchg
aas
mov
lock
jl
cli
sti
subb
mov
sbb
and
bswap
sub
aas
push
or
pop
pop
inc
jo
mov
inc
sub
testl
add
out
inc
icebp
sub
dec
lds
mov
bound
pop
loopne
popa
shrl
add
out
icebp
adc
out
fdivrs
add
push
mov
mov
push
sbb
test
popf
jge
inc
nop
and
or
fsubrp
in
test
popf
lods
inc
mov
movsb
add
loope
and
push
cmpsb
xor
jns
arpl
fsqrt
sub
enter
ret
sbb
mov
add
addr16
mov
inc
xchg
stos
pop
pop
and
pusha
loopne
mov
lds
inc
addl
adc
push
pushf
hlt
gs
add
jb
push
lahf
xchg
inc
mov
mov
sbb
andl
jbe
and
xchg
mov
mov
int
scas
shrb
add
jge
xchg
mov
push
test
fwait
sub
aam
jle
inc
adc
js
jns
inc
mov
or
and
neg
pushf
lds
adc
lahf
lahf
sub
fnstcw
cmp
out
fidivs
mov
lahf
repz
pop
lret
out
aaa
roll
lods
mov
adc
cmpsb
in
imul
cmp
xchg
jle
and
and
push
sub
or
test
in
lods
fdivl
into
cmp
fnsave
outsb
or
sub
leave
and
push
leave
shll
insb
jns
sbb
sbb
clc
into
dec
mov
adc
gs
hlt
fstpt
mov
popf
sbb
insl
fwait
cmp
int
js
mov
out
mov
js
movsl
mov
mov
sub
cmp
imul
adc
sbb
js
sbb
test
repz
stos
mull
out
jno
inc
sub
xlat
mov
sbb
pop
cmp
cmp
cmpsb
sbb
pop
cmp
xlat
pop
or
sahf
mov
inc
popl
repnz
xchg
xchg
popa
xchg
adc
mov
negl
and
and
imul
lret
jge
pop
out
mov
dec
es
fbstp
stc
stos
pop
outsl
outsb
mov
xor
aad
sub
cmpsb
dec
cmpl
pop
xchg
jmp
lods
mov
sti
or
stc
mov
mov
repnz
aad
mov
mov
or
jnp
add
adc
cmp
sub
adc
ljmp
cmp
push
cmp
dec
jle
sbb
mov
jp
lea
fildl
leave
sarb
jecxz
enter
mov
push
jne
dec
test
xor
daa
xchg
fsubs
rcl
xorb
insb
aaa
sbb
add
mov
popa
loop
ret
add
jmp
jge
out
scas
push
inc
shlb
jne
sbb
mov
jge
outsl
add
cltd
add
dec
pop
inc
into
outsb
adcl
inc
in
out
mov
cmp
ret
cli
into
movsl
jns
mov
mov
ret
cmpsl
dec
or
mov
cmc
inc
into
test
add
sub
shll
inc
movsl
enter
cmp
adc
pop
cmc
sub
cmpsl
cmp
aad
movsl
insl
addr16
mov
mov
xchg
inc
mov
xor
lods
repz
inc
sub
mov
out
inc
push
cli
mov
fidivs
mov
push
lock
or
pop
xorb
cpuid
jecxz
sbb
jg
mov
jbe
mov
xor
inc
or
sbb
mov
jne
int
test
cmp
push
imulb
lret
clc
roll
pop
add
mov
das
jle
push
jp
out
mov
dec
stos
sahf
push
push
push
or
std
sbb
movsl
out
mov
out
negl
mov
pop
fldt
rolb
gs
out
mov
mov
idivb
lret
jge
int
sbb
imul
add
push
out
out
push
mov
stos
mov
pop
out
out
addl
scas
dec
ljmp
sahf
sti
add
test
xchg
mov
cli
repnz
or
ret
push
inc
sahf
push
in
addl
dec
pop
fisubrs
dec
or
fidivrs
rorb
pop
or
mov
pop
inc
scas
mov
mov
cli
mov
sub
jae
popf
sub
pop
lahf
es
jl
jo
ffree
call
out
add
sbb
nop
frstor
in
jge
pop
push
std
cs
push
rorl
jns
xor
or
notb
in
mov
sub
push
das
imul
cld
mov
dec
lock
mov
loopne
jmp
jbe
xchg
xchg
inc
mov
lcall
mov
sbb
dec
mov
jns
xor
imul
mov
dec
aas
sub
jae
xor
sub
lcall
icebp
sahf
std
and
push
mov
xlat
in
pop
dec
lcall
cmp
outsl
cmp
lret
ds
or
and
jbe
leave
dec
ljmp
cltd
xchg
pop
jl
ficoms
adc
loop
cmp
insb
and
das
movsb
jae
ficomps
ret
outsb
and
int3
mov
cs
sbb
addr16
outsl
push
fwait
repz
mov
inc
dec
push
cmp
jecxz
mov
push
mov
int
arpl
test
inc
cmp
aam
jns
fmulp
cmpsb
pop
mov
pusha
pop
es
das
insb
div
xor
lock
and
into
in
sahf
js
leave
pop
dec
push
aaa
jl
arpl
repnz
mov
jno
xchg
dec
test
jmp
out
mov
cmpsl
cld
cli
mov
xchg
int
mov
ss
shll
dec
mov
xlat
push
lcall
and
xor
add
pop
movsb
cmpb
icebp
add
repnz
das
push
std
hlt
mov
subl
ds
sahf
push
mov
sbb
sub
pop
iret
aas
das
pusha
fstpl
or
cmc
daa
repnz
sub
or
lods
adc
adc
stos
mov
lods
outsb
push
test
es
pop
mov
sti
cmp
ljmp
pusha
mov
aas
or
mov
into
mov
sub
push
imul
push
dec
sub
out
xlat
adc
push
adc
pop
add
imul
xchg
push
xchg
mov
outsb
mov
fs
pop
andl
xor
mov
aas
dec
push
cmc
scas
and
mov
fwait
sahf
test
in
dec
mov
ja
sub
es
subb
in
mov
add
sub
test
insb
mov
dec
sbb
mov
cltd
or
sub
dec
xchg
mov
imul
mov
pop
add
pusha
iret
sub
repnz
mov
cmp
or
sub
xchg
mov
sbb
sbb
mov
rcll
fcompl
call
lret
push
test
mov
mov
aam
enter
out
pop
add
cs
mov
fs
dec
mov
cmp
ret
mov
fbld
xlat
bound
enter
push
cmp
mov
or
outsl
in
jne
int3
pop
cmp
add
outsl
cmp
mov
mov
out
add
enter
push
sti
push
dec
xchg
ret
jne
sbb
add
push
mov
xlat
pop
push
and
and
sbb
cwtl
test
xchg
bnd
sbb
push
dec
pop
scas
mov
scas
fs
js
xor
shlb
push
cmpsl
mov
lret
enter
xchg
lret
inc
inc
mov
adc
dec
fbstp
cs
insb
xchg
sub
xchg
icebp
int3
push
pop
add
jp
mov
mov
and
stc
sbb
out
movl
xor
xor
arpl
or
mov
dec
jbe
push
rorb
test
cs
xchg
sbb
add
pop
dec
mov
mul
xrelease
pop
jo
pop
mov
cltd
xchg
xor
push
fs
stos
push
jns
in
aam
mov
mov
neg
sbb
pushf
xlat
xchg
outsb
aaa
xor
cmp
jo
or
xchg
cmp
popf
loope
cmp
pop
ljmp
pusha
push
enter
mov
sbb
in
out
xchg
cmpsl
mov
repnz
cmp
jo
jns
xchg
or
popf
mov
rorb
dec
xor
rorb
sub
test
jae
sbb
lods
cmp
and
mov
sbbl
add
mov
push
and
aad
jo
sbbb
lock
rorl
inc
fnsave
mov
dec
jb
pop
mov
jae
in
imul
mov
scas
xlat
push
lret
fs
fnstcw
int3
cmpsl
jecxz
adc
pop
add
cwtl
lcall
out
mov
loope
pop
xor
mov
xchg
or
mov
mov
xor
fs
inc
js
aad
push
test
into
or
incb
aad
xor
sbb
xor
ret
cmp
mov
push
out
pop
cmp
and
ficompl
xlat
inc
pusha
rcll
scas
pop
push
and
lcall
mov
pop
test
push
pop
ret
sbb
xor
jne
mov
je
sahf
xchg
xor
cltd
orl
repz
mov
cwtl
push
ret
repnz
jle
aad
mov
mov
test
cmpsb
or
push
xchg
dec
xchg
xor
push
lret
pop
insl
ret
pop
imul
dec
ret
mov
sbb
mov
gs
fmull
mov
fisttpll
lret
loope
pusha
push
cmp
jmp
add
pop
or
push
sti
push
mov
push
pushf
gs
test
cwtl
push
aaa
clc
cld
out
or
jne
xchg
push
outsl
ja
rcr
aam
aaa
lods
mov
out
jns
fmull
inc
push
mov
lods
mov
lahf
clc
dec
fsubrs
mov
adcb
andb
jmp
pop
sbb
aaa
push
out
insb
in
ja
lds
clc
add
xor
fisubrs
or
sub
cmp
out
loop
inc
jmp
mov
cli
pusha
add
pop
sbb
shl
sub
pusha
and
dec
mov
dec
pop
sub
xchg
jg
add
stos
test
add
insb
pop
aas
push
mov
pop
out
rcr
push
sub
or
sbb
cmp
xor
jb
xchg
adc
movsb
stos
packuswb
test
aam
in
jmp
xor
adc
fstps
adc
fs
out
jae
jbe
sub
mov
mov
jno
jg
popl
sbb
sbb
call
lods
shll
loop
and
int
repz
lock
scas
xchg
sbb
or
push
jb
rcrl
pusha
test
out
push
mov
push
cmp
push
cmpl
cld
cld
leave
cwtl
loop
mov
in
cmpsb
scas
outsb
adc
shlb
imul
adc
xchg
sbb
dec
sub
adc
mov
icebp
orb
hlt
sahf
shr
push
jle
shl
mov
adc
iret
cmc
mov
ficomps
sbb
lret
mov
xor
sarl
cmpl
mov
and
sbb
std
add
xor
lock
mov
sub
jbe,pn
rep
mov
pop
jne
mov
int
xor
push
into
popa
aaa
cwtl
test
mov
mov
pop
bound
sbb
pop
mov
add
xchg
mov
sbb
lods
loopne
fisttps
lods
push
dec
pop
outsl
push
nop
push
adc
into
pop
testl
fcmovu
inc
insl
insb
dec
inc
inc
cs
test
out
leave
dec
outsb
sub
mov
xchg
xor
frstor
and
cmpsb
mov
push
sbb
ret
fcoml
xchg
sbb
ja
gs
das
adc
ja
popf
sbb
or
daa
pop
mov
scas
or
jae
adc
push
hlt
push
loope
fisttps
jp
sub
ret
scas
imul
daa
mov
repz
repz
outsb
or
outsb
xchg
xor
data16
imul
push
xchg
sub
push
inc
mov
ds
mov
lds
hlt
icebp
xorl
cmp
aam
ret
pop
js
pop
adc
inc
mov
cmp
inc
cmp
and
mov
clc
movsl
pop
push
xor
mov
mov
inc
ljmp
xchg
int
push
sub
mov
cmp
push
jg
pop
mov
and
pop
and
xor
lods
addl
divl
mov
int3
stos
mov
mov
push
shr
stc
int3
jno
insl
jo
inc
and
sbbl
push
lock
dec
push
loope
cmp
ret
jl
and
mov
dec
mov
inc
pop
mov
sbb
mov
or
push
xchg
and
push
insl
ds
sbb
into
movsl
loop
ret
out
lahf
repnz
pop
xor
jmp
cwtl
pop
fildl
xor
jmp
nop
jmp
dec
call
cmp
sarb
inc
out
xchg
lahf
jp
notl
clc
mov
les
push
fmul
xchg
mov
mov
pop
or
in
push
rol
xchg
mov
cmpsb
mov
out
xchg
jp
js
cmpl
out
sbb
pop
cmp
dec
jg
mov
or
adc
add
xchg
xchg
push
or
dec
mov
jno
and
mov
push
dec
and
mov
xchg
addr16
je
mov
add
cs
lret
jbe
adc
inc
aad
in
and
mov
jecxz
jno
pop
adc
jne
push
imul
test
sbb
jns
jns
push
ljmp
js
cmpsl
add
adc
dec
jl
pusha
lret
sbb
inc
arpl
lds
adc
inc
xor
sub
xchg
cmp
shrb
repz
pop
mov
push
movb
leave
outsb
out
test
jle
or
sub
ds
jl
cmp
mov
movsl
add
mov
cmp
int
mov
xchg
loop
dec
fidivrl
cmp
outsl
fildll
lods
fisttpll
push
push
sbb
pop
das
jno
adc
xor
ljmp
scas
cmp
lcall
inc
and
shrb
leave
mov
or
ftst
and
add
cmp
pop
sbb
mov
dec
jnp
lcall
adc
adc
pop
cmpsl
fists
in
fisttps
aas
adc
pushf
xchg
cmp
cltd
popa
sarl
popa
xor
in
arpl
xchg
inc
lds
jbe
sbb
push
cmp
xchg
jno
test
insb
adc
andb
push
test
das
xchg
lret
sbb
shr
sbb
mov
sti
jns
int3
shll
popa
pop
fmull
sbb
lock
lret
xchg
leave
mov
mov
xlat
add
mov
sbb
sbb
dec
call
imul
cmp
or
and
dec
fcomp
mov
test
pop
adc
test
cmp
push
mov
or
pop
sbb
dec
test
xchg
dec
mov
mov
leave
inc
sub
and
dec
xchg
add
ljmp
mov
ss
shrl
shll
daa
pop
inc
cmc
add
repz
inc
and
lahf
cli
push
jb
inc
sub
push
js
loop
fldcw
test
pushf
sbb
imul
sbb
lods
push
adc
and
cmp
in
roll
xchg
cmpsb
cmp
xchg
dec
push
fisttps
or
inc
inc
mov
stc
sbb
xchg
sbb
mov
adc
xchg
das
fldt
pop
xor
cltd
imulb
mov
mov
rdtsc
bt
mov
pop
pop
insb
and
xchg
cld
sub
aaa
jns
jmp
jbe
arpl
push
pop
fisttps
dec
pop
dec
movsb
cs
sbb
push
add
stos
les
adc
and
jbe
pop
or
adc
inc
sub
mov
mov
iret
and
ja
mov
inc
je
aam
push
adc
or
sub
mul
lea
mov
movsb
outsb
das
out
stos
fbstp
add
test
fnstcw
test
pop
adc
imul
inc
sbb
mov
sub
mov
cmp
jp
addr16
dec
dec
out
fwait
aas
cmp
aaa
add
stc
inc
adc
ror
add
sub
inc
mov
xor
shlb
lret
mov
aad
pusha
dec
xchg
imull
dec
xor
gs
arpl
popf
jle
sub
add
rolb
fwait
insl
arpl
rcl
lahf
jne
sub
jne
mov
and
inc
test
or
fstl
mov
jl
pop
ljmp
jnp
pusha
shlb
fistl
sbb
mov
fdivs
xchg
mov
je
mov
mov
cs
fistpl
dec
lea
lret
jl
and
sub
xchg
outsl
mov
shlb
ret
pop
or
jecxz
scas
inc
xchg
jb
mov
in
ret
xchg
jo
xor
or
outsl
in
sbb
pop
addl
mov
adc
sahf
ljmp
les
pop
fsts
stc
push
pop
or
pop
cmp
sbbl
cmp
inc
push
push
ja
mov
mov
xor
jnp
rolb
pop
leave
inc
push
fisttpll
xchg
cmpl
popf
sbb
adc
inc
and
lock
push
icebp
outsb
jb
sahf
sub
cmpsb
push
out
inc
das
jne
arpl
out
cmovno
or
icebp
push
lcall
xchg
xchg
xchg
pop
sub
pop
popf
xor
pop
andl
fs
xchg
cld
or
in
inc
dec
aad
mov
imul
shrd
sbb
jb
xchg
cmp
mov
mov
mov
jae
leave
loopne
mov
orl
xor
scas
stc
inc
dec
xor
pop
aam
mov
mov
push
sbb
adc
push
enter
mov
pop
xlat
jb
mov
mov
das
scas
xor
sbbl
jmp
outsl
adc
out
and
lock
sub
and
mov
inc
mov
fiadds
clc
pushf
dec
push
pop
inc
mov
cmp
xor
cmp
push
cmp
push
push
jle
cmc
or
xor
xchg
inc
xor
mov
testb
push
push
insl
mov
mov
mov
lea
mov
adc
add
int
insb
std
cmp
dec
pop
pop
and
daa
data16
cmpsb
fldcw
jne
mov
loope
push
or
bound
addr16
mov
adc
scas
sub
xchg
dec
test
sub
cmp
test
ja
je
cmc
mov
xorb
scas
sub
xchg
gs
inc
leave
ja
sub
jnp
mov
xor
inc
shlb
orb
pop
or
out
sub
dec
and
sub
mov
int
in
mov
xor
jge
mov
jecxz
leave
cltd
jbe
xchg
insb
inc
popf
aam
cmpsl
out
inc
jns
jbe
add
adc
pop
cmpsb
dec
sub
mov
dec
je
or
mov
xchg
outsl
inc
push
iret
ds
sbb
adc
cmpsl
and
shlb
stos
jbe
clc
test
movsb
adc
shrl
loopne
in
repz
sub
push
cmpb
ljmp
inc
add
or
xlat
lcall
xchg
jno
mov
jo
dec
mov
out
fs
fbstp
fbld
arpl
push
lock
nop
mov
mov
mov
push
mov
and
jge
push
jno
pop
fisttpll
subb
mov
dec
fsubl
mov
out
sub
ljmp
mov
leave
dec
subps
repz
lods
and
lcall
enter
imul
loope
je
dec
rol
addb
xor
mov
cmpsl
in
pop
jg
and
push
jo
loopne
lret
sbb
test
idivl
pusha
jb
jle
jns
mov
inc
sbbl
sub
pop
pushf
inc
scas
xchg
loopne
arpl
stos
js
cmc
add
stc
xchg
xchg
lods
add
xchg
fs
addr16
jecxz
lcall
xor
cli
in
pop
loopne
inc
add
add
adc
pop
stos
xchg
pop
push
popa
out
pop
mov
or
sbb
adc
sahf
loope
pop
sbb
dec
repnz
rorb
sub
mov
es
scas
testb
xchg
cli
xchg
in
mov
jge
cmp
or
cmp
ret
adc
aad
sbb
inc
mov
add
sub
add
mov
fsubp
test
jg
subl
rorb
push
mov
and
mov
jmp
jae
dec
pop
rcrl
frstor
cli
jns
jmp
xor
arpl
adc
repnz
inc
mov
popf
arpl
and
push
dec
adc
push
inc
jl
and
testb
cltd
ret
cmp
jnp
aam
mov
jmp
push
and
imul
cmp
incb
cltd
ror
dec
xchg
in
push
mov
jnp
fcmovbe
popl
jp
sbb
negl
and
xor
fdivrl
aam
jl
push
inc
loopne
xor
popa
xchg
xchg
dec
stos
ja
stc
dec
fwait
aaa
adc
add
adc
cmpsb
pop
xor
leave
sbb
adc
ds
cmp
jae
pop
mov
stc
bswap
inc
xchg
ss
cmpl
xchg
push
cmpsl
test
cltd
popf
icebp
fstl
jns
loopne
aaa
icebp
das
repz
cmp
ret
mov
xor
roll
jns
pop
xchg
roll
pusha
jg
cmpl
ljmp
mov
test
leave
inc
imull
push
ud0
mov
jmp
sbb
orb
clc
test
inc
mov
sahf
cmpsb
and
les
in
test
xchg
xlat
out
out
or
loop
xchg
push
mov
xchg
xchg
mov
std
popf
jbe
out
mov
mov
stos
loop
ljmp
xchg
inc
xor
ljmp
pop
fsubs
loop
cld
fstpt
stos
cmc
cmp
iret
mov
mov
cmpsl
xor
xchg
push
ja
xchg
adc
in
push
lahf
or
shr
sub
push
jbe
fidivs
pop
push
decl
sbb
out
lcall
pop
cmp
mov
fldcw
jle
sub
lock
bound
xlat
push
hlt
out
adc
or
sub
lret
jno
cmp
shll
test
sub
cmp
sub
inc
xor
push
aas
data16
pop
dec
shll
jmp
mov
ja
aad
movsb
inc
loopne
out
xor
pop
inc
js
daa
sti
cwtl
sbb
xchg
xchg
mov
push
outsl
and
jne
les
xchg
add
add
inc
cmp
mov
cmc
pop
pop
incb
jns
jo
loop,pt
scas
pop
mov
xor
adc
jne
mov
out
gs
in
repz
jns
movsl
movsl
dec
fisttpll
clc
lret
xchg
fs
or
and
push
test
out
out
pop
or
cli
push
jae
nop
cli
cli
ret
pop
pop
lock
adc
les
push
popf
outsb
or
adc
jae
sbb
push
sbb
dec
inc
mov
fucom
push
loope
push
dec
or
pusha
jl
jg
jne
sub
std
or
and
push
xchg
mov
dec
scas
and
mov
sbb
add
in
outsl
mov
aam
push
push
imul
inc
xchg
xor
mov
lods
insb
nop
cmp
cmp
inc
test
cmpsb
mov
or
xchg
sub
xor
fcmovb
in
and
or
xor
xchg
lea
stos
xchg
cmpsb
xchg
and
pop
adc
pop
bound
subl
icebp
mov
pop
push
cmc
out
xor
jmp
rorl
lock
ds
and
mov
in
pop
and
pop
mov
lahf
test
or
mov
in
mov
lock
lods
sbb
fsubl
cmpsb
xchg
push
add
sub
lret
sbb
jle
repnz
mov
enter
xchg
xchg
sbb
orb
push
push
mov
mov
cmp
mov
inc
or
ficompl
addr16
divb
jl
in
xor
sbb
add
pop
jl
cmp
push
push
scas
cli
mov
lahf
es
mov
lcall
push
imulb
sub
push
mov
mov
sub
iret
cld
or
pop
and
in
pop
xchg
int
stc
fisttpl
out
xchg
out
rcrb
mov
fwait
ss
or
dec
shll
mov
sub
lret
ret
dec
xor
insl
mov
pop
cmpsb
pushf
scas
imul
test
push
dec
das
stos
jb
fs
mov
sub
push
push
ss
xchg
aam
testl
jno
scas
mov
sbb
dec
in
inc
pop
and
mov
out
test
in
xor
icebp
test
mov
mov
adc
jmp
adc
clc
sub
dec
fs
pxor
inc
inc
std
mov
sbb
jge
lea
jg
nop
sub
adc
sub
imul
stos
cmp
cli
sub
out
cmp
enter
leave
rclb
lret
repnz
rcrb
or
push
mov
sbb
cmpsb
mov
or
loop
mov
xchg
mov
punpckldq
lds
ret
in
push
out
xor
addr16
ret
pop
movsb
testl
jno
aas
scas
dec
bound
mov
aam
xor
mov
push
push
sbb
das
insb
cwtl
jb
pop
mov
decl
mov
in
insb
mov
lods
ja
jmp
mov
popf
rcrb
adc
dec
sub
adc
xchg
xchg
add
mov
mov
cmp
shrl
mov
out
iret
dec
dec
cltd
pop
lock
sub
mov
and
jnp
mov
in
outsb
xchg
pop
mov
loopne
mov
pusha
jp
sar
pop
aam
int
push
into
roll
add
test
adc
pop
cmp
cmp
mov
cmp
lahf
shrl
in
int
out
aas
maskmovq
negl
dec
mov
arpl
out
fisubrs
push
loop
sub
nop
lds
xchg
das
sbb
push
not
xchg
cwtl
push
push
or
jmp
mov
int3
xchg
addr16
pop
adc
cmp
int
xor
mov
into
push
test
adc
mov
jmp
or
popf
inc
out
add
mov
sti
jo
pop
mov
push
sub
jle
xchg
xor
mov
sahf
leave
jnp
add
and
xchg
mov
int
mov
inc
mov
pop
mov
sub
cmp
rcll
pop
shrl
popf
sub
jmp
jno
aad
lds
mov
push
mov
jbe
jl
mulb
push
push
push
js
int3
lea
jp
les
lcall
push
xchg
cmp
xchg
jge
int3
pop
pop
jns
fisubl
mov
sbb
call
in
mov
xor
jp
and
shll
push
mov
fadd
imul
leave
das
out
add
or
and
cmp
rol
pusha
cld
dec
pop
mov
aam
adcl
test
movsb
pop
fcompl
mov
jmp
adc
ss
xchg
mov
jb
cmp
push
rorl
lea
outsb
orb
pushf
out
mov
enter
xor
aam
push
mov
ss
pop
sub
mov
rcl
cmc
xor
push
cmp
xlat
jl
cmp
push
ret
insb
mov
mov
jne
inc
adc
inc
dec
cmp
jge
push
lock
movsb
ss
dec
ret
jp
call
xchg
sbb
add
sbb
cmp
mov
mov
push
adc
mov
sbb
das
pop
cmp
mov
ds
mov
cs
sbb
loope
daa
inc
mov
add
push
aam
sub
cmp
into
cmp
fistps
mov
sti
pushf
mov
jo
dec
repz
jge
in
dec
mov
lcall
push
insb
push
xchg
aam
add
mov
cmp
into
js
sub
popf
xlat
sub
sbb
adc
mov
lret
js
out
jne
xchg
dec
sbb
or
enter
xor
imul
inc
xchg
sub
scas
out
and
push
movsl
pop
mov
lods
and
lret
sbb
xchg
mov
insb
and
mov
adc
dec
jbe
out
sub
or
adc
pushf
in
jno
jecxz
mov
cmpsb
gs
pushf
fistpl
cmp
insb
mov
mov
mov
mov
xchg
jle
shl
pushf
fisubrs
adc
es
repnz
testl
fwait
data16
bound
lret
sub
stc
lock
pusha
pop
hlt
or
sarb
push
sbb
jne
enter
pushf
pop
inc
movb
lods
xchg
or
mov
rcr
call
jp
imul
mov
pop
mov
stos
push
jmp
fistl
fistl
sbb
popf
dec
mov
or
push
mov
push
pop
mov
or
adc
loopne
jl
mov
scas
maskmovq
imull
sub
or
lods
outsl
adc
fldln2
rol
xor
pop
cmc
jo
mov
push
stos
and
jg
or
fs
cmpsl
lea
int
insl
push
addl
outsb
ja
xor
int
xor
insb
fstpl
mov
xchg
or
jne
sbb
cmp
xchg
int
mov
pop
stos
sbb
pop
sub
pop
mov
arpl
mov
js
sub
pop
sbb
sbb
fnsave
loop
pop
fistps
pop
test
or
inc
int3
pop
adc
test
addr16
cmp
inc
mov
nop
je
pop
in
sbb
cmpsl
mov
lret
out
adc
xor
scas
xchg
xchg
hlt
push
lock
or
mov
sub
cmp
mov
xor
lods
add
out
mov
bound
cmp
xchg
cmp
insl
push
call
notl
mov
mov
loope
and
loopne
jbe
xchg
mov
arpl
lods
xor
push
push
ror
insl
pop
pop
out
enter
mov
cmpsl
cltd
push
popf
movsb
fimuls
push
hlt
loopne
push
leave
rorb
and
pop
adc
outsb
jl
cmpsl
push
scas
popf
call
pop
jle
mov
pop
push
push
inc
cli
mov
lahf
adc
aaa
lods
jnp
cmp
int
sbb
add
shrl
cmpsb
xchg
sbb
pop
mov
mov
mov
mov
add
test
lret
sbb
jp
mov
jg
fs
adc
and
push
or
push
mov
push
insb
jp
mov
or
dec
adc
push
hlt
sbb
sub
insl
adc
inc
xlat
pusha
cmp
fsubl
or
ja
xchg
adc
es
jmp
fwait
xor
inc
sbb
or
jns
xchg
mov
fwait
clc
add
sbb
in
push
add
xchg
mov
insl
xlat
push
push
ja
xor
mov
jecxz
push
cmpsl
xchg
sbb
shlb
fadds
mov
loopne
aam
jecxz
dec
ljmp
fnstsw
mov
adc
out
sbb
fimull
xor
xor
ret
ljmp
xchg
push
push
sbbb
adc
jg
push
dec
lods
cmp
int
mov
lahf
nop
out
sub
inc
push
push
addr16
pop
add
sub
xor
clc
sub
repnz
sbb
roll
in
popl
cmp
dec
iret
lock
popf
in
stos
xchg
movsb
subb
gs
xlat
xor
sub
mov
outsb
push
push
inc
dec
jl
xchg
scas
cmc
dec
xchg
fwait
dec
es
outsl
das
sub
dec
imul
fs
xchg
ljmp
inc
mov
or
inc
test
int3
lds
xchg
test
dec
std
int3
or
out
add
das
pop
and
lret
inc
push
or
sbb
cld
mov
pusha
cmc
xor
outsb
in
mov
xchg
clc
and
in
sbb
xlat
icebp
pop
les
in
negb
bound
ja
lahf
mov
mov
and
xor
repz
popw
or
add
leave
sbb
xlat
push
cmc
push
inc
addl
jmp
cmpb
mov
loop
adc
pop
pushf
sub
dec
sahf
repnz
insb
push
or
push
jmp
lea
popa
repz
out
lds
push
sub
das
les
jmp
mov
cld
add
aas
dec
cmp
out
jg
xor
imul
jne
leave
out
stos
popa
cwtl
in
data16
sub
in
jne
sbbb
in
sti
inc
adc
dec
mov
lods
cs
add
xchg
dec
pop
or
aas
ja
mov
sub
or
sub
add
lds
pop
inc
jg
inc
xchg
xchg
mov
xlat
xorl
mov
jp
les
test
in
adc
dec
sub
cli
insb
daa
out
loop
jo
outsl
add
add
or
arpl
out
jle
addr16
add
inc
test
push
jp
xchg
adc
pop
xor
jne
fwait
gs
int
mov
pop
xor
add
pop
inc
sub
fildl
mov
and
sti
fdivrs
ret
leave
xchg
packuswb
xor
mov
or
bnd
push
hlt
xchg
jae
jl
test
add
stc
in
push
in
test
adc
fsts
push
shlb
mov
xchg
push
cmp
lds
mov
js
std
and
mov
scas
sbb
adc
sbb
sub
pusha
fidivs
or
lock
mov
insb
scas
ljmp
ficoml
or
inc
mov
int3
insb
shll
push
inc
or
inc
mov
cmp
cmpsl
stos
mov
jne
lds
push
xor
jb
lahf
xor
push
lock
ret
inc
daa
mov
push
lods
lea
mov
push
hlt
addr16
cmc
aaa
ja
subb
cli
cmpsb
test
sub
pop
cmp
test
mov
mov
rcrl
push
mov
mov
les
add
xlat
sub
sbb
iret
das
rorl
popl
add
sbb
cs
je
push
or
push
xchg
add
adc
push
add
cmc
cmp
inc
dec
cwtl
int
call
clc
push
popf
dec
loope
fistpl
mov
and
ja
inc
xlat
cmp
add
sub
ret
add
inc
insl
sbb
jle
leave
mov
sahf
and
iret
cmpsl
ficoml
jmp
fsubrs
loopne
in
aad
in
fildll
mov
and
pop
xchg
inc
pop
jp
data16
jge
leave
pcmpeqb
pop
adc
jp
sub
orl
sarl
lahf
mov
into
test
negl
fwait
ja
jo
insb
pop
shlb
fadds
test
mov
push
xor
call
lods
xchg
or
xlat
mov
arpl
repnz
lahf
aas
std
add
mov
popf
add
nop
mov
cmpsl
sub
lret
push
loope
xor
scas
and
or
or
repz
mov
add
daa
push
jno
cltd
iret
dec
mov
pushf
ret
or
jns
mov
insl
sub
sbb
push
les
mov
xchg
push
xchg
or
pcmpeqd
imul
mov
dec
popf
stos
mov
loope
sub
mov
pop
xor
sbb
mov
les
mov
add
sub
rolb
aam
push
xor
sarl
xor
notl
repnz
scas
mov
xchg
std
sti
pop
ss
movsb
adc
push
gs
pusha
repz
out
mov
scas
popf
xlat
rcrb
or
mov
js
ss
ljmp
lock
push
roll
fidivl
repnz
mov
pop
push
enter
addr16
cmp
adcb
or
sub
cwtl
mov
sub
dec
call
mov
push
add
outsl
stos
aad
push
add
xchg
les
aad
popa
data16
leave
jno
int
repz
jecxz
shrb
xchg
add
movsb
stos
sbbl
fsubrl
and
andb
fs
in
bound
icebp
inc
pop
leave
and
mov
or
ror
adc
jnp
scas
lret
int
cli
mov
lahf
popa
mov
dec
aas
xchg
arpl
inc
test
mov
or
jle
out
lds
imul
sbb
sbb
lods
rcrb
inc
adc
imul
fsts
fnstsw
leave
mov
xchg
cmpsl
lcall
xorl
into
fs
mov
fisttps
mov
or
enter
push
mov
lcall
adc
popa
adc
in
mov
push
shr
inc
and
jl
push
xor
push
jg
cltd
imul
ja
inc
pop
mov
inc
adc
daa
test
xchg
mov
pop
sub
and
and
aam
fsubl
xchg
ret
mov
addr16
jae
pop
mov
xchg
inc
cmp
outsb
jp
test
fistpll
adc
cmp
cmc
and
int
ret
lods
adc
lahf
loop
and
mov
sbb
ja
jne
push
or
or
xchg
ja
inc
daa
sub
movl
inc
add
adc
inc
in
inc
and
xchg
in
fists
out
lret
clc
nop
add
push
mov
scas
jmp
lcall
mov
adc
jl
push
xchg
cld
outsb
ds
cmpsl
rcr
sub
int
xchg
mov
and
pop
mov
fnstenv
cmp
pop
int3
dec
mov
add
cmp
test
addr16
out
scas
dec
mov
scas
ljmp
stos
mov
leave
xchg
test
sbb
or
cwtl
push
std
push
add
dec
clc
imul
push
jle
jmp
gs
and
push
dec
sbb
add
insb
inc
fwait
pop
pop
stos
jge
mov
je
ret
xor
jno
jns
repz
jle
out
imul
insb
push
or
das
test
cmp
std
jmp
pop
mov
imul
mov
dec
aad
push
fcmovnu
fadds
jbe
je
sub
xor
mov
fs
sub
outsl
jge
ss
xchg
clc
pop
popf
xchg
push
pop
jge
jnp
or
negb
into
icebp
sbb
or
pop
xchg
jmp
sub
fstl
mov
push
cwtl
cltd
fst
gs
lret
test
out
mov
jp
sahf
sahf
cmpsl
in
lret
inc
pop
out
push
cld
leave
imul
xor
in
jge
push
inc
jne
push
sbb
pushf
dec
out
jmp
sbb
add
jno
mov
fdivr
mov
test
xor
pop
testl
stos
out
xlat
ud1
push
xor
inc
and
pop
pop
lea
add
add
aas
mov
repz
mov
inc
push
mov
lods
test
sbb
stos
and
sub
repnz
mov
mov
inc
out
ret
clc
xchg
jb
hlt
pop
call
xor
js
pop
iret
mov
xacquire
mov
sub
fcoml
int3
ljmp
cmp
mov
dec
jp
mulb
inc
mov
aad
sub
sarb
das
mov
fwait
sti
loopne
push
push
push
dec
cltd
and
data16
repz
lock
cli
mov
lods
rolb
sbb
mov
sbb
inc
adc
jae
ret
xor
xchg
or
mov
mov
xchg
ljmp
imul
dec
enter
jae
mov
mov
jmp
out
and
push
mov
lcall
push
stos
mov
lds
jo
imul
fnsetpm(287
fidivrs
pusha
xor
nop
xlat
pop
cwtl
lret
out
ror
xchg
pop
and
or
fisttpll
xor
iret
int3
fsts
cmp
cmp
out
sub
in
out
cmp
mov
clc
lret
adc
mov
mov
cmp
jp
push
mov
and
cli
cwtl
xor
les
lret
pop
lret
cmpl
sub
jecxz
repz
add
push
outsb
stos
push
clc
jae
aad
inc
movsl
int3
sbb
cmp
jp
hlt
xchg
ljmp
jnp
sub
push
add
lret
add
sub
xor
ret
cwtl
jp
mov
push
adc
pop
subb
sti
fistl
movsl
clc
add
mov
in
pop
shlb
lea
bound
jmp
into
mov
mov
in
mov
inc
push
imul
insl
jmp
push
ret
lock
xlat
mov
sbb
movsl
push
cmp
pushf
cmp
mov
jo
push
sbb
mov
in
sbb
test
adc
and
outsb
fnsave
jge
cmp
pop
into
aaa
mov
data16
aam
mov
fs
sbb
das
cmp
jno
es
mov
movb
ja
out
shll
lods
sbb
rorb
lcall
xchg
mov
adc
mov
dec
ss
pushf
daa
sbb
jmp
leave
out
ret
cmpsl
sbb
xchg
ret
lock
inc
std
into
push
mov
mov
xlat
add
inc
es
xor
out
mov
adc
das
jae
or
mov
stos
mov
lea
and
lret
lock
les
push
jge
mov
or
add
xchg
rorb
xchg
dec
or
icebp
mov
hlt
addl
popa
cmc
repz
outsb
decl
inc
aaa
mov
or
test
push
ja
lret
push
dec
sub
mov
and
sub
pop
xorb
cmp
cmpsl
and
mov
shlb
mov
xor
sub
mov
push
lcall
cmc
jnp
int3
push
stos
add
and
mov
sub
or
pop
and
mov
push
xchg
jle
cs
xchg
clc
ljmp
addb
lea
out
sub
ss
icebp
int3
loope
pop
push
andl
call
pop
inc
movl
les
ret
or
insl
mov
aas
test
divl
xchg
add
and
cmc
int
call
xor
in
bound
push
int3
mov
xor
ficompl
jle
daa
movb
bound
push
or
jno
sub
mov
sbb
pop
sbb
xor
pop
jns
cmp
lea
xchg
sub
jp
pop
iret
inc
lret
cli
xchg
or
mov
mov
data16
aad
inc
adc
and
pop
push
inc
or
jno
cmp
lods
and
jno
divl
bound
cmp
gs
arpl
clc
mov
aaa
and
aad
cmp
xor
push
and
inc
out
fidivs
jge
xchg
pop
jge
sub
jl
movb
in
and
dec
push
fwait
test
loope
add
sti
xchg
mov
sbb
pop
insb
dec
jmp
sbb
adc
rorb
xchg
inc
sub
mov
or
inc
cmc
gs
and
lcall
pop
std
jmp
outsb
arpl
push
cltd
jo
cmp
jp
out
pop
xor
loopne
je
adc
xchg
mov
mov
inc
call
les
fstpl
in
lcall
lahf
jae
movsl
cmpsl
aas
addr16
mov
mov
scas
dec
daa
xchg
fwait
mov
xchg
stos
pop
shlb
jmp
xchg
cltd
icebp
jno
sub
rorb
inc
adc
mov
mov
ja
sub
mov
cmpsb
addr16
xchg
lock
popf
divl
vcvtpd2dq
jns
cmp
mov
and
push
repnz
arpl
int
iret
popf
push
popf
push
fwait
xchg
adc
pop
dec
test
mov
push
jg
sbb
loope
sbb
ret
pop
in
scas
sbb
testb
and
mov
cmpsl
andb
out
and
insb
jl
rcr
sbb
pop
sbb
leave
sbb
aam
adc
sbb
outsb
and
ljmp
jmp
pop
dec
loopne
jbe
ds
ficompl
inc
popa
ljmp
mov
popa
push
push
mov
es
lret
sub
adc
leave
fildll
aad
jno
xor
or
test
out
adc
mov
sahf
adc
fcoml
mov
adc
ljmp
push
push
leave
mov
inc
sbb
or
shl
cmpsl
repz
cli
mov
sbb
jb
test
adc
sbb
rcll
cmpsl
xchg
cs
mov
repz
push
xlat
adc
and
sbbl
push
or
jo
mov
call
test
cmpsb
jg
mov
in
hlt
aad
nop
add
fsubrs
mov
outsb
mov
divb
lds
adc
adc
jae
mov
push
lret
mov
sub
pop
out
fcompl
or
inc
xor
add
xor
fldl
pop
and
data16
pop
add
daa
pop
addb
insb
loop
sbb
cltd
jb
rcrb
sub
fcompl
mov
mulb
rorb
xlat
sti
loopne
cmp
rcll
add
mov
inc
js
outsb
cltd
mov
add
inc
pop
ljmp
xchg
enter
push
fnstenv
jl
nop
adc
mov
inc
in
xchg
arpl
mov
or
add
roll
xorl
pop
aad
cld
idivl
bound
sub
jge
pop
inc
adc
popa
jno
cld
mov
and
out
je
lret
lods
cmp
out
pop
push
cmp
add
push
push
or
jne
clc
dec
insb
pushf
pop
adc
jns
mov
jecxz
lods
and
push
cmp
setne
outsl
push
sahf
adc
mov
mov
fldenv
loopne
loop
sub
enter
xchg
push
ret
cmp
ret
gs
mov
ret
fwait
xor
int
fwait
xchg
mov
xor
and
cli
xor
jo
mov
insl
xor
add
or
sahf
sti
shll
inc
icebp
push
push
push
lcall
fldt
dec
into
outsl
jle
lock
pushf
mov
mov
out
in
and
outsb
cld
mov
enter
fndisi(8087
lock
xchg
xor
ss
testl
cli
cltd
cmc
loopne
hlt
inc
dec
stos
aas
mov
lret
or
iret
mov
and
lcall
push
cld
inc
inc
ficoml
jno
ds
adcb
cmp
aam
jnp
xchg
dec
sbb
sub
fwait
add
in
in
lods
cmc
add
mov
out
pop
pop
daa
cmp
ret
cld
ficoml
push
aaa
jb
ljmp
outsl
sbb
outsb
pop
cmpsl
es
mov
push
and
loope
jl
mov
sub
hlt
out
addb
sbb
loopne
ficomps
aas
movsb
ds
mov
add
xchg
xor
ficomps
fldcw
jno
stos
inc
ss
in
cs
mov
adc
pusha
mov
push
leave
fs
add
in
mov
int
jb
mulb
or
xchg
div
push
inc
adc
jge
add
cmp
fildll
ljmp
add
sbb
lahf
inc
cmp
test
aas
mov
jmp
mov
int
sahf
subb
insl
movsb
scas
punpcklbw
inc
loope
insb
pushf
mov
je
jge
pop
popf
push
xor
shll
dec
xchg
pop
daa
push
and
sbb
xor
mov
pop
mov
dec
xchg
hlt
or
nop
and
stos
movsl
mov
mov
arpl
or
mov
insl
inc
add
jl
jge
lret
mov
add
fisubrl
sbb
js
mov
out
jl
pushf
adc
inc
lret
fwait
or
add
sti
pop
fldenv
arpl
daa
dec
adc
mov
sub
fcmovne
movsb
pop
mov
and
fistps
cwtl
sbb
jge
pop
fpatan
xchg
inc
add
mov
mov
add
rorl
mov
fadds
jo
xchg
daa
inc
pop
popa
iret
fnsave
sahf
fs
shufps
loope
cmp
inc
inc
push
push
jp
push
dec
jg
outsb
add
sbb
mov
jmp
or
call
ror
jecxz
sub
ds
cli
in
std
fcomip
fucom
sub
jle
push
out
xchg
out
dec
xchg
and
mov
jns
pushf
lcall
mov
lcall
or
lahf
dec
dec
js
fidivs
jle
popf
mov
fists
xchg
xor
cmpsb
cmp
in
arpl
orb
sbb
mov
or
dec
sahf
push
jg
call
add
rorl
xor
or
in
shll
pop
popf
sub
push
mov
cmpl
bsr
iret
testb
mov
xor
dec
shl
jl
xchg
sbb
xchg
stc
out
and
inc
rclb
cmp
push
sti
leave
out
arpl
push
imul
mov
scas
and
and
xchg
imul
pop
sahf
out
pusha
jae
ret
aaa
repz
xchg
pop
dec
sub
int3
or
test
sti
push
dec
test
test
xor
mov
fcoml
push
fiaddl
mov
cmp
stos
gs
mov
repz
cwtl
pop
test
pop
sbb
mov
or
jbe
ja
int
xchg
inc
ds
leave
jb
sub
sbb
and
xchg
mov
sub
iret
and
fsts
mov
or
xor
aaa
inc
lock
in
pop
jne
and
cld
or
jno
sbb
fcoms
cmp
mov
out
sub
movsl
fimull
ret
lcall
mov
ret
inc
decb
dec
int3
scas
testl
jb
push
dec
out
dec
add
lea
or
jg
push
pop
xchg
cmpsb
jl
push
jb
pop
mov
les
paddusb
sub
mov
add
outsl
inc
mov
test
add
cmc
push
xchg
and
jns
arpl
dec
ds
out
imul
cld
ret
xor
lret
test
fbld
push
nop
imul
rorl
movsl
arpl
scas
xor
add
imul
test
loop
mov
popf
stos
inc
sub
in
and
jmp
adc
inc
jmp
push
stos
sarl
mov
js
or
mov
popf
rorl
andb
shr
sti
icebp
aad
mov
cli
pop
ret
insb
call
pop
into
push
and
inc
out
insb
test
push
shl
lods
mov
out
in
fidivrl
sbb
cld
fisttps
enter
pop
mov
sti
adcl
or
outsl
int3
shrb
dec
jl
xchg
leave
xor
sbb
push
lcall
addr16
jp
lret
fisubs
push
inc
mov
push
adc
adc
icebp
in
mov
adc
push
pop
adc
mov
das
imul
out
push
in
pop
aaa
loopne
in
mov
ja
ss
jp
dec
mov
push
jno
xchg
push
add
push
pop
and
out
subl
or
lock
mov
or
push
in
aaa
aas
cmp
sub
icebp
add
jb
push
sti
jbe
out
lret
push
outsb
and
add
or
xlat
sti
aad
pop
jmp
shlb
in
in
fiadds
pop
mov
lods
push
mov
mov
dec
test
enter
cvttps2pi
push
test
ja
cmc
ljmp
adc
push
lods
out
shll
sub
nop
cmp
dec
lds
out
inc
mov
xlat
mov
cmp
push
sub
cwtl
or
sub
fsubl
je
nop
outsb
adc
xorl
outsb
aaa
mov
push
movsl
pusha
sti
stos
lock
es
and
push
sahf
outsl
lea
arpl
aam
aaa
inc
adc
mov
xchg
mov
stc
and
mov
xor
or
testb
lret
push
jge
pop
mov
inc
clc
fidivs
mov
push
mov
aad
or
sub
pop
push
xor
fcoms
out
dec
mov
push
mov
popf
lret
js
in
adc
pusha
imul
mov
js
push
adcb
jbe
jge
adc
or
adc
ds
xor
push
jecxz
mov
jno
mov
push
adc
lea
int3
movsb
rcrb
popf
push
shll
dec
bts
dec
inc
inc
aaa
mov
or
testl
daa
adc
xchg
dec
lret
push
jge
cld
jb
call
lea
dec
fs
adc
add
and
add
loopne
out
lods
mov
out
ds
mov
or
xchg
inc
repz
mov
subb
fcompl
dec
setge
imul
daa
repz
mov
insl
stc
pop
data16
xlat
std
xor
enter
adc
and
loopne
std
leave
cmp
jmp
dec
fistpl
mov
fisubrs
mov
clc
sahf
lock
mov
hlt
out
sti
stc
sarl
push
sbb
xor
sub
mov
or
mul
mov
push
repz
sub
jbe
sub
in
arpl
fiadds
lret
dec
cli
int
loopne
jne
lahf
ljmp
add
dec
stos
ror
clc
and
sbbb
and
sub
xlat
jge
lahf
int3
xor
sbb
std
or
jle
pop
scas
jp
pop
out
xchg
shlb
adc
mov
in
in
mov
inc
inc
and
jecxz
push
mov
push
scas
insl
lret
loopne
inc
scas
es
aad
dec
mov
inc
mov
dec
mov
popf
in
fimuls
sbb
cld
mov
mov
mov
pop
mov
adc
xchg
and
cltd
jae
mov
xchg
enter
fadds
xchg
aam
xor
xor
ret
shr
fsubrl
cwtl
rcll
lret
add
movsl
jne
jecxz
push
jns
out
jle
jecxz
test
addr16
dec
out
sahf
sbb
mov
lods
out
mov
jns
mov
ret
clc
hlt
jg
jbe
hlt
mov
dec
add
mov
pop
sub
lods
loope
dec
ljmp
cmp
lds
call
pop
push
loope
xor
das
lds
push
inc
insb
add
adc
inc
jle
into
sbb
mov
mov
jl
jno
daa
mov
loope
arpl
pushf
idiv
pop
cmp
fdivrs
inc
and
add
ds
jb
loope
popf
jle
into
mov
pop
add
jno
mov
in
daa
dec
movsb
jecxz
push
stos
inc
mul
sub
sbb
sub
jecxz
aaa
shll
lods
mov
pop
mov
xchg
add
popf
test
mov
mov
sub
jecxz
jl
mov
cwtl
dec
bound
ss
imul
sbb
cmp
mov
pop
das
fsin
lcall
test
in
stos
lret
scas
mov
xchg
lods
jmp
pop
inc
mov
fists
cli
mov
cmp
sbb
outsl
or
out
lds
sub
xor
fcompl
fimuls
out
loopne
lods
inc
ljmp
sar
cmpsb
pop
xchg
mov
repnz
adc
sti
lea
sarl
clc
mov
jle
xor
out
inc
inc
out
dec
cltd
or
out
push
andb
add
xor
hlt
ds
sahf
jmp
shr
push
pop
cmp
sti
sbb
in
cmp
xchg
insl
pop
pop
push
js
aad
dec
sub
stc
fadds
out
nop
inc
and
ficoms
shl
mov
ds
xchg
int3
fmuls
ret
divl
cmc
loop
mov
push
or
pop
das
mov
rclb
sets
mov
and
pop
xchg
enter
ja
mov
popf
mov
add
pushf
sti
and
add
mov
jae
ljmp
push
or
lcall
cltd
cmp
lahf
push
push
ret
or
rcrb
mov
sarb
jmp
int3
xchg
add
mov
ds
cmp
fldenv
mov
dec
lcall
push
and
data16
mov
mov
mov
test
in
loopne
je
mov
mov
push
mov
mov
xchg
fistpll
ret
or
aam
pop
lldt
stos
fwait
andl
pop
loopne
dec
jnp
mov
push
jo
ja
sub
fs
cltd
clc
sbb
pop
push
sbbl
or
add
enter
pop
or
sbb
adc
popa
mov
pop
out
int
btc
in
bound
pop
nop
xchg
push
mov
xor
add
jo
mov
add
shl
in
mov
mov
or
mov
xchg
sbbb
cs
or
popf
pop
fistpll
mov
imul
test
push
jg
and
mov
repnz
xchg
fsubrl
cli
imul
aaa
sbb
scas
mov
pop
test
jge
pop
jp
mov
pushf
push
fimuls
xor
in
test
bound
push
push
xlat
push
scas
mov
outsl
jae
sbb
cmpsb
nop
mov
push
jns
xlat
into
mov
pop
add
fmull
data16
and
push
scas
bnd
jg
daa
ss
das
cmp
and
push
mov
adc
mov
cs
push
out
cmp
xchg
push
push
mov
int3
popa
inc
xlat
sbb
jl
gs
pop
stos
sub
and
mov
loope
jae
pop
fs
outsb
les
fwait
aad
pop
idivl
jbe
lock
mov
and
lock
shl
mov
sbbb
cwtl
loopne
aaa
in
loope
lods
in
jno
lret
mov
insl
jle
jmp
and
ret
mov
pop
mov
and
inc
fwait
sub
jb
and
sub
mov
or
in
pusha
or
jae
lret
add
cmc
inc
pop
adc
xchg
mov
lahf
in
jge
push
sbb
jl
push
jge
xor
and
mov
mov
mov
mov
pop
inc
adc
sub
imul
or
into
into
push
dec
mov
cmp
inc
push
xchg
or
mov
lcall
dec
popa
sub
push
jo
adc
out
add
test
cwtl
mov
and
rcrl
jle
dec
xor
sub
push
cmc
sub
push
mov
div
push
jle
mov
xchg
in
sbb
scas
mov
jge
out
xor
pop
pop
jmp
and
aad
inc
pop
push
mov
xchg
mov
cmp
pop
xor
arpl
pushl
shll
adc
pop
pop
arpl
xchg
int
dec
aam
and
mov
pusha
jbe
outsl
push
stc
or
xchg
mov
sub
fbld
dec
sahf
sub
into
cmpsl
dec
adc
or
add
arpl
adc
cmpl
or
mov
xchg
lock
jp
fcmovu
pop
nop
cmc
sahf
dec
imul
pop
mov
scas
inc
outsl
push
jge
mov
push
popa
mov
or
cs
mov
pop
shl
add
leave
addr16
out
repz
shll
fstps
leave
pop
loopne
call
jle
xchg
mov
xchg
dec
ja
jl
arpl
cmp
xchg
inc
cmpsb
outsb
mov
push
arpl
out
daa
xchg
lds
std
pop
sbb
fbld
inc
cltd
push
sbb
incb
nop
push
lret
out
lret
pusha
divl
rcr
fsubrl
addr16
inc
rol
xor
pop
push
add
sahf
shll
bound
add
stc
es
inc
or
iret
js
dec
mov
cmc
cmc
or
les
dec
hlt
bound
cwtl
arpl
sbbb
mov
dec
lds
movsl
push
hlt
subl
mov
orb
lock
sarl
sbb
test
xchg
cmp
push
mov
fmulp
xchg
xchg
jmp
jle
dec
or
mov
lea
in
jmp
mov
in
clc
mov
out
xor
mov
mov
pop
fcoml
mov
sub
aas
mov
in
stos
mov
movsb
in
incl
scas
test
push
ret
shl
loop
nop
add
shr
das
clc
std
jl
clc
inc
cmp
mov
xchg
das
push
jecxz
stos
mov
movsl
mov
in
pusha
stos
cwtl
pop
or
dec
cs
int3
rcl
cltd
push
dec
in
cltd
repz
cmpsb
xchg
sbb
les
mov
jno
cmpsb
mov
pusha
fstpl
gs
out
push
and
sub
lods
mov
lods
outsb
shll
std
lahf
sbb
and
sub
or
idivb
shrl
orl
or
lret
pop
sbb
aam
add
int3
imul
push
int
in
inc
mov
je
mov
rcl
cmp
lea
and
cltd
test
sub
scas
das
inc
fidivrs
mov
inc
js
lds
fsts
sbb
ss
dec
loop
inc
mov
mov
clc
cmp
push
int
xchg
jb
fisttpll
push
loopne
jecxz
nop
cmp
mov
test
lahf
popa
fcomip
mov
jecxz
and
mov
xchg
pop
mov
fs
jae
mov
push
movnti
sbb
sahf
xchg
fwait
xchg
orl
int3
iret
mov
jp
lds
inc
jbe
and
dec
orl
gs
les
cltd
pop
sub
push
mov
push
xchg
fsubrl
pop
add
sbb
decl
or
in
mov
in
xor
jcxz
xchg
pop
icebp
xchg
in
pop
cmpsl
adcl
jae
or
mov
getsec
cmc
cmp
mov
repnz
cmpsl
push
xchg
pop
add
aam
je
jbe
fs
dec
or
pop
pop
int3
adc
xchg
cmp
pop
inc
mov
add
sbb
fcompl
aas
mov
int
sti
scas
out
jecxz
mov
inc
lahf
rcll
jns
dec
std
sub
cmpsl
cwtl
pop
mov
mov
leave
and
ret
hlt
ds
mov
or
mov
mov
adc
es
adc
orb
repz
enter
fmul
or
jne
xlat
push
and
jecxz
daa
xor
lea
in
imul
sbb
cwtl
mov
and
aas
inc
dec
test
sbb
fistps
sub
xchg
out
insl
aas
dec
sub
dec
popa
fidivrs
lea
das
test
add
dec
push
scas
mov
bound
je
add
adc
push
outsl
mov
test
push
jecxz
test
nop
das
cmp
adc
xchg
loopne
add
je
sti
dec
mov
and
pop
jns
bound
out
loopne
mov
shll
pop
out
test
sbbl
sbb
lock
sbbb
pushf
popf
mov
into
adc
or
jne
xor
adc
leave
shl
push
jnp
mov
xor
mov
pusha
xchg
insb
notl
lret
xchg
fildll
fdiv
cs
fcmovnu
lea
add
out
loop
or
jecxz
lods
pop
dec
mulb
xchg
daa
add
stc
rclb
jns
cmpsl
and
inc
cs
icebp
mov
push
insb
cmp
pop
sub
mov
cmp
sbb
jbe
out
or
cmp
js
out
call
xchg
in
hlt
jmp
mov
inc
fcomip
movsb
fstpt
xor
mov
lret
out
fwait
jp
push
dec
in
push
call
gs
cmp
sub
in
icebp
push
add
test
push
jge
rorb
aas
out
xor
xchg
cmpsl
mov
das
pop
stos
mov
das
jnp
clc
mov
sbb
or
out
mov
test
fsubr
and
pop
xchg
addl
dec
cmpsb
fs
in
popa
adcb
cmp
lahf
sbb
je
jae
mov
jo
leave
lods
push
loopne
sub
xchg
push
cltd
fmull
xor
cmp
mov
je
pop
cltd
aad
push
loope
sbb
scas
lods
loope
leave
fcmovb
cmp
lea
or
rcrl
mov
push
xchg
leave
lahf
test
adc
pop
and
mov
add
mov
pop
repz
arpl
or
or
add
and
xchg
sub
mov
mov
jae
push
rcr
dec
jno
fwait
cltd
fs
sahf
push
xchg
jne
add
dec
fcoms
jecxz
and
mov
mov
or
ret
pop
cmp
mov
jp
mov
in
aas
iret
mov
aam
push
jle,pt
mov
xlat
mov
pop
fldenv
ret
cmp
ret
jns
ret
cmp
pop
jo
pop
fnstcw
mov
dec
pop
loopne
fwait
sarl
popf
cmp
loop
les
pop
sub
imul
out
mov
mov
in
mov
fstps
fwait
mov
jp
sub
sbb
mov
xchg
sub
xchg
loope
jmp
jl
lret
lds
pop
cmp
dec
jne
mov
xlat
int
sbbb
js
and
push
mov
out
sub
mov
sti
sbb
fwait
xchg
pop
cwtl
push
insb
out
iret
scas
ja
ret
popa
fiaddl
scas
xchg
inc
in
sbb
jecxz
add
rolb
or
xchg
pop
shlb
jnp
adc
dec
lahf
lcall
mov
pop
cmpsb
sub
inc
sub
push
js
mov
and
stos
aaa
int
sbb
and
cmp
mov
psubusw
stc
loop
jp,pt
stos
sub
mov
test
jb
mov
inc
std
imul
cmc
fwait
adc
push
mov
out
movsl
dec
mov
leave
call
out
push
clc
fisttpll
ds
and
mov
aam
xchg
dec
aas
mov
sub
repnz
mov
idivl
cwtl
add
jmp
jne
inc
pop
stc
in
push
stos
cmp
dec
dec
inc
push
dec
in
push
leave
pop
jmp
outsb
xchg
insl
insb
pop
add
das
ja
loopne
inc
sub
mov
adc
dec
mov
add
inc
hlt
in
nop
lods
out
leave
lcall
sbb
push
mov
adc
pop
sub
out
iret
inc
pop
lods
mov
insb
mov
cmovle
push
dec
sub
into
cli
sub
mov
out
pop
inc
xchg
jns
pcmpgtd
pop
retw
add
mov
cmpsl
push
movsb
or
xrelease
js
mov
adc
sub
rcrb
or
and
jmp
mov
sub
nop
sub
aas
repz
jne
push
adc
cmp
psubusw
cli
sbbb
mov
sub
imul
jne
push
scas
xor
insb
mov
mov
sbb
add
inc
add
xorl
mov
xchg
push
je
dec
mov
xchg
aas
cmp
sahf
pop
push
jns
gs
jp
cs
jp
iret
pop
cmp
dec
test
ret
sub
imul
pop
cwtl
xchg
sub
mov
popa
aam
or
into
cmp
mov
fsub
or
fisttpll
pop
inc
outsb
aad
imul
mov
sbb
mov
arpl
in
add
ficoml
dec
mov
jp
sub
pop
shlb
fstpt
dec
xor
lcall
int3
in
adc
ja
stc
dec
mov
mov
rorl
sub
xchg
xor
dec
and
pop
mov
mov
lods
push
les
jmp
cmpsb
or
lahf
and
sub
push
pop
cmp
xchg
sub
imul
xchg
addb
mov
pop
sub
jecxz
cmp
ljmp
dec
in
xchg
xchg
dec
out
scas
clc
movsl
inc
adc
push
enter
arpl
inc
xchg
add
mov
aaa
out
mov
addl
sbb
cld
mov
fcomps
imul
and
roll
or
mov
sub
pushf
cmp
xor
pushw
sub
pop
or
sub
xchg
dec
lods
pop
fists
jmp
int3
call
rcl
aad
mov
movsl
sub
out
mov
out
mov
vprotd
mov
out
pop
and
addr16
loope
mov
insb
inc
mov
xchg
stos
add
ret
aas
mov
pop
loopne
unpckhps
mov
jg
xchg
or
aam
sub
js
js
test
or
mov
mov
fimull
mov
or
jl
negb
sbb
in
xor
outsb
clc
loop
ljmp
pusha
into
xor
dec
and
negb
pop
orl
fildl
mov
sahf
cltd
push
out
ja
cli
divl
xchg
mov
pop
lock
int
cwtl
stos
or
nop
sub
push
mov
push
je
popf
loop
aam
jge
and
arpl
lret
push
repz
scas
mov
mov
fwait
cmp
popa
mov
aas
dec
jmp
inc
in
mov
xchg
movsb
pop
mov
aad
push
iret
dec
pusha
movsb
xchg
or
loope
xor
fldl
mov
pop
xlat
adc
sub
pusha
xchg
ja
aaa
push
mov
test
shll
loop
or
pop
mov
cmp
imul
sub
and
adc
icebp
out
sbb
jmp
adc
xor
aas
mov
movsb
ljmp
sbb
test
call
fdivs
aam
das
fidivrs
add
mov
jge
and
clc
mov
push
mov
jo
sub
sub
sub
lea
fsubrs
push
xorb
cmp
in
mov
jl
leave
fidivrl
push
insl
loope
ljmpw
repnz
sub
mov
sbb
push
lods
add
xchg
sub
pop
push
int
ja
dec
and
push
dec
sarl
popa
mov
pop
dec
inc
test
adc
sbb
sub
and
stos
orb
movsl
sbb
xchg
stos
in
cmc
cmpsl
daa
cmp
scas
inc
adc
sbb
fidivl
cmp
cmp
lret
adc
push
jnp
mov
mov
add
test
inc
ljmp
scas
mov
push
loopne
orb
xchg
sub
ds
add
or
outsb
test
mov
fbld
inc
push
clc
mov
insb
in
mov
es
sub
aam
lock
sub
sub
pop
out
or
js
fisttps
dec
cmp
sub
scas
mov
ret
in
sbb
test
mov
inc
and
lea
inc
incl
test
inc
dec
add
pop
xor
dec
sbbl
inc
imul
jl
mov
out
in
pushf
dec
data16
push
mov
andb
mov
push
daa
nop
inc
cmp
xor
dec
lods
mov
mov
std
js
in
icebp
jmp
cmp
and
into
pop
dec
dec
pop
mov
scas
jb
fidivrl
fcomip
dec
cs
xchg
cmc
push
ret
sub
loop
push
mov
push
inc
sahf
mov
jmp
sub
or
dec
gs
dec
lock
cmpsl
addr16
loop
mov
xlat
sbb
imul
pop
push
ss
cmp
aad
test
loop
int3
rolb
sub
mov
arpl
int
ret
xchg
mov
jge
imul
inc
ss
data16
cmp
xor
in
pop
or
xchg
adc
push
mov
and
push
sub
lea
xchg
or
mov
mov
jae
cmp
clc
mov
and
movsb
sub
pop
sbb
or
in
lret
in
xchg
mov
cmc
testl
add
push
jne
std
scas
pushf
lea
jae
iret
and
and
jle
sarl
shll
cmp
into
lds
cli
adc
fwait
bound
sbb
test
or
add
jle
mov
xchg
jge
es
adc
movsb
push
mov
pusha
in
arpl
mov
sbb
insl
and
nop
mov
jle
cmc
or
repnz
fisttps
pop
pop
xchg
cmp
repnz
push
roll
imul
cmp
push
pop
push
sbb
mov
int
cmp
lret
inc
inc
arpl
aas
jb
je
mov
roll
push
sti
shlb
out
pop
repnz
sub
dec
into
jae
ret
sbb
xchg
imulb
out
mov
sbb
mov
xchg
loop
aaa
xor
jle
iret
cmp
clc
es
lahf
push
add
and
int
sbb
in
repz
call
pop
sbb
inc
ret
into
push
xchg
div
stos
push
inc
fnstsw
fwait
jne
dec
or
push
mov
push
push
jne
pop
push
ffreep
clc
inc
addr16
dec
sub
loop
push
pop
mov
xor
cmp
imul
fcompl
pop
jne
mov
fmul
jge
mov
or
pop
idivb
mov
enter
fbstp
aam
mov
pop
pop
in
jge
push
push
sbb
lahf
add
jecxz
dec
movsl
or
sub
inc
mov
cmovle
stos
add
mov
into
ljmp
xchg
sub
xchg
jge
sbb
mov
inc
mov
subb
loopne
and
pop
or
icebp
cmpsb
cli
lds
jb
out
es
mov
ds
loopne
lret
jo
xor
jmp
test
xlat
xchg
adc
add
insb
add
cmc
add
cmp
pop
adc
cld
xchg
aad
scas
scas
xor
rcll
mov
loopne
xor
jae
or
imul
and
xor
scas
dec
and
sbb
lds
or
addl
adc
je
or
mov
lea
add
sub
sbb
pop
add
aad
pop
into
xor
lea
inc
mov
fsubrp
mov
lock
inc
and
push
adc
add
cli
int
enter
jle
sar
fidivl
loopne
pop
mov
addr16
nop
mov
adc
and
test
push
notl
mov
jge
push
repz
daa
dec
cs
sub
and
iret
push
sub
cltd
sub
sbb
shll
stos
push
mov
in
jmp
div
xlat
mov
out
xchg
mov
ret
enter
ds
and
and
sbb
pop
or
and
xchg
mov
dec
mov
leave
pop
and
jle
add
dec
xchg
cmp
cmp
pop
cmpl
add
pop
cs
imul
popa
int3
lret
dec
add
popa
faddl
fsubl
gs
cld
xor
or
xorb
push
cmpsl
add
push
dec
inc
jl
in
stos
sub
push
mov
xorb
mov
sub
adc
mov
sahf
ret
inc
pop
nop
inc
sub
xchg
pusha
mov
fmuls
icebp
sbb
je
inc
fmulp
ljmp
stos
mov
ja
xor
mov
xchg
jno
negb
sbbl
ret
enter
mov
orb
mov
imul
insl
cli
push
push
cltd
in
cmp
lods
push
mov
mov
jns
cmp
or
jb
clc
or
sti
fnstcw
in
xchg
clc
addb
incb
lahf
mov
pop
and
enter
xchg
pop
arpl
into
stc
nop
mov
mov
sbb
jnp
sbb
pop
mov
push
sbb
pop
mov
popf
mov
jg
sbb
sbb
gs
fnsave
lods
pop
test
jp
nop
repnz
fists
push
out
mov
adc
or
mov
aad
mov
mov
pop
jno
cwtl
stos
out
aad
sub
decl
scas
sbb
fnsave
jecxz
inc
iret
cmp
jb
jecxz
add
in
mov
into
adc
cld
fsqrt
lock
add
je
icebp
lods
inc
outsl
mov
in
sub
xchg
pop
xor
pusha
cmp
ret
in
sahf
sub
adc
jne
xor
in
cmp
gs
cltd
lahf
xchg
std
jbe
adc
daa
hlt
lods
idivl
imul
adc
test
mov
sbb
pop
push
adc
es
stos
je
loop
shl
inc
xor
push
cmp
nop
movsl
mov
pop
test
xchg
and
pop
ret
rcrb
mov
jae
scas
mov
ja
cli
sub
push
addr16
push
xchg
lret
fidivrl
and
sub
xchg
cmp
outsl
loop
sbb
jecxz,pt
test
pop
mov
lret
push
nop
dec
fadds
sub
data16
sub
inc
pusha
nop
movsb
je
dec
call
push
mov
insl
add
cmp
sub
push
mov
cld
test
push
aas
mov
popf
jp
push
push
sahf
lret
lds
pop
pop
inc
mov
mov
js
sbb
arpl
repz
mov
rcrl
orb
push
lret
test
jnp
and
fst
dec
jnp
cmp
pop
test
es
int3
loopne
fadds
mov
xor
sub
insl
filds
mov
repnz
jecxz
lock
cmp
mov
mov
dec
outsl
inc
sbbl
incb
mov
lret
fdivs
pop
jp
popa
out
jb
movsl
mov
iret
int3
mov
inc
sub
jle
xchg
lods
stos
xchg
dec
inc
and
sbb
sub
inc
popa
pushf
sti
cmpsb
jo
adc
push
fcompl
sbb
pop
ret
in
fdivrs
sub
invd
aad
sub
jnp
mov
and
push
xchg
fwait
lds
cmovo
pop
mov
cmc
sbbl
fisttpll
fcmove
xor
cmp
fistl
imul
mov
dec
jns
pop
sub
ss
inc
mov
cld
xorl
jnp
lret
dec
pusha
dec
cmpsb
popa
or
cltd
ss
pushl
cwtl
and
mov
push
jae
mov
push
fisttpl
aas
je
xorb
pop
pop
pushf
inc
movsl
cs
int3
inc
movsb
mov
xchg
pop
inc
sub
jg
sub
jae
scas
push
jmp
cmp
nop
xor
jno
popl
iret
int
pop
add
add
fdivr
xor
outsb
ret
and
sub
lods
lock
mov
je,pt
and
and
loop
cmp
and
lahf
pop
daa
cmp
out
test
mov
inc
and
test
xchg
jno
call
int3
xor
sbb
jb
and
dec
push
addl
jno
and
loop
lcall
sbb
ljmp
ffreep
into
es
fs
aam
or
mov
inc
dec
and
pushf
cwtl
sbb
xchg
sbb
xor
inc
mov
cld
fsubs
adc
loop
mov
adcl
mov
mov
add
dec
lret
push
and
or
cmpsl
adc
mov
lods
addr16
loop
int
mov
into
fidivs
add
stc
out
into
movsb
insl
xchg
jp
call
sbb
scas
dec
ficoms
cmp
jo
pushf
or
or
ret
pop
inc
test
aaa
hlt
repz
dec
add
fwait
into
lock
adc
inc
pop
inc
xchg
scas
mov
cmp
push
dec
test
inc
xchg
adc
sub
ja
mov
jecxz
xor
cmp
in
lods
or
xchg
push
push
sub
iret
dec
fisubrs
sub
pop
cmpl
rorb
call
sbb
lret
out
sbb
lea
xchg
cmp
mov
rorl
scas
test
cmp
sti
hlt
fwait
shrb
or
ret
insb
iret
repnz
ds
xchg
out
push
xor
push
sub
ja
ret
and
mov
into
inc
adc
mov
mov
push
ret
cmc
dec
push
add
mov
in
xlat
psubq
or
out
mov
add
dec
stc
ds
loopne
xor
adcl
ret
insb
loop
pop
clc
into
cmp
dec
mov
sub
or
shlb
sbbl
dec
jb
mov
sub
sbb
or
ljmp
xor
lcall
push
add
cmp
pop
imul
mov
adc
hlt
mov
add
mov
lds
out
js
lret
test
lds
in
jle
sbb
in
out
or
loopne
cld
inc
fcmovnbe
stos
call
mov
popa
nop
cmp
fidivs
mov
mov
rcll
cmp
rcll
inc
movsl
mov
clc
xchg
shr
inc
imul
popw
xchg
mov
jb
pop
hlt
inc
jl
and
and
jecxz
dec
pop
repnz
stos
imul
leave
movsb
inc
jg
mov
test
icebp
mov
push
cmp
sbb
pushf
repnz
jno
jo
dec
and
and
test
fldt
push
fst
jecxz
mov
in
out
lock
outsl
push
xor
out
aaa
lahf
insb
je
pop
sub
jle
or
clc
sub
test
xlat
pop
add
sbb
inc
jl
cli
push
lock
xchg
das
push
jp
jb
jb
sbb
jg
mov
or
aaa
jmp
ljmp
sbb
out
insl
lods
and
add
dec
enter
ja
xchg
sti
int3
sub
push
aad
imul
mov
cmc
das
movl
cwtl
ret
and
add
mov
mov
adc
rcrl
loop
mov
insb
xor
and
push
cs
fstps
testb
xlat
jle
jno
leave
and
sahf
pcmpgtb
call
insl
in
in
popa
mov
sub
push
push
nop
cs
xchg
cmp
pop
int3
push
fisttps
push
outsb
or
sarb
jb
call
iret
in
shrb
xor
faddl
ficomps
fdivp
or
jmp
subl
call
stc
pop
shlb
jmp
sbb
fnop
ljmp
test
mov
add
ret
jo
popf
jnp
add
xchg
ja
sti
fmulp
mov
push
stos
sbb
jp
pusha
ret
cmpsb
dec
mov
nop
sub
je
fbld
inc
fsubl
mov
cmc
bswap
push
stos
lahf
add
mov
add
cltd
sbb
pop
sbb
lret
lods
jnp
je
dec
iret
movsb
cli
mov
inc
cli
mov
jg
add
mov
xchg
jbe
add
dec
in
inc
hlt
nop
mov
fistpll
loopne
jnp
nop
pop
jbe
xchg
pop
add
imul
mov
test
pusha
mov
pop
jl
mov
sbb
ljmp
stos
ret
lds
push
jns
stos
pop
rol
mov
sbb
adcl
loopne
arpl
xchg
jo
lret
sbb
sbb
add
jae
fdivr
push
dec
jp
sub
repz
out
in
or
sbb
push
pop
or
test
stos
pop
mov
lods
xor
outsb
sbb
shrb
dec
pusha
repz
insl
mov
pop
push
mov
in
cmpsl
adc
xor
in
test
mov
shll
popf
iret
xor
mov
test
or
inc
lret
mov
push
or
xchg
add
add
daa
or
xor
fidivl
push
pop
aam
mov
xchg
sub
ret
aaa
das
fdivs
getsec
cmp
or
mov
xor
pushf
mov
sti
xorl
pop
rcrl
adc
mov
inc
mov
push
adc
mov
lcall
xchg
insl
stc
mov
scas
adc
pop
lahf
lods
in
xchg
xor
dec
aaa
nop
imul
mov
sub
adc
or
mov
in
or
aam
xor
mov
lahf
inc
push
sub
jge
in
subb
mov
pop
pushf
push
pop
icebp
mov
sbb
dec
gs
repz
mov
je
movsb
ret
xor
jbe
out
jnp
stc
mov
or
pop
or
fdivl
push
mov
cmp
pop
lods
js
cs
push
out
jae
pop
scas
ds
mov
testl
pop
xor
or
insb
xlat
fnstenv
inc
adc
add
fwait
sti
pop
std
popf
jecxz
xchg
cwtl
pushf
movsb
rolb
out
sub
sbb
in
call
popa
jo
jle
adc
and
or
lcall
and
dec
std
out
test
test
lret
stos
jno
ss
sahf
in
movsb
xor
cmp
cmpl
xor
inc
lret
pop
mov
gs
data16
sub
mov
roll
lret
mov
ss
jae
insl
imul
fsubs
xchg
pop
mov
cmc
outsl
enter
lea
into
xchg
dec
popa
mov
pop
lahf
ljmp
push
inc
cmc
inc
stc
cs
mov
mov
loop
push
jne
ja
shll
stos
repnz
mov
sbb
or
sub
sbb
int
mov
ror
sub
mov
xor
xchg
pop
lock
jb
lret
pop
push
imul
mov
popf
lcall
push
rorb
in
cmpsb
xor
cmpsb
pop
dec
xor
dec
push
xchg
xchg
mov
cld
rcr
sub
lods
cwtl
lret
or
movd
adc
std
cmc
xchg
cli
pop
add
int3
mov
rcrb
xor
jecxz
mov
lea
insb
cmp
push
pop
pop
mov
lret
cmpsl
shlb
rol
roll
popa
push
and
mov
pop
pop
jo
adc
mov
xchg
sbb
stos
push
lods
sub
xlat
cmp
mov
jg
push
jb
adc
das
push
xchg
xchg
in
mov
jns
inc
dec
mov
repnz
add
mov
jg
adc
or
jmp
popa
xor
daa
jno
fimuls
into
insb
repnz
ret
adc
jp
add
repz
xchg
gs
js
addr16
sbb
xor
pushf
fwait
movsl
cli
shl
enter
lds
add
fistps
sbb
add
sahf
jecxz
es
sbb
mov
ret
imul
mov
mov
rcrl
adc
and
xchg
fwait
incl
ljmp
xor
test
aas
enter
es
cmp
dec
aad
leave
mov
int
pusha
test
push
addr16
inc
data16
mov
fildl
jo
jno
push
movsl
mov
les
xor
iret
icebp
loope
cltd
out
js
jmp
mov
js
add
dec
testb
insl
cmp
popl
push
inc
fst
bound
push
lret
popa
vhaddps
pop
xchg
ljmp
jo
pop
ds
and
insb
lahf
scas
faddp
fnstsw
xor
fcompl
pop
mov
and
jno
cwtl
xor
inc
cmp
pop
mov
jo
mov
fadds
addr16
xchg
push
pop
xchg
sbb
imul
push
in
pop
scas
cmp
pop
ds
shrb
fwait
iret
popf
es
mov
sbb
xchg
subl
sti
inc
rcr
mov
jg
loop
repnz
pop
cmp
out
aad
int
mov
mov
adc
fimull
std
cmpb
sti
pop
iret
stos
jp
xor
pushf
insb
jne
and
cltd
inc
fisubrl
repnz
lea
mov
and
jge,pt
mov
pop
and
out
rorb
mov
push
imulb
inc
mov
mov
push
adc
sbb
sti
test
cwtl
sbb
jae
hlt
cmp
aas
dec
sti
xchg
aad
out
sub
stc
cmpsl
mov
lods
push
xor
test
dec
cmc
push
cli
jo
scas
mov
dec
movsl
scas
int3
mov
mov
pop
lahf
dec
fidivrl
sub
xchg
pop
stos
xor
cmp
pop
insb
ret
pushf
cmp
aam
dec
aas
icebp
cld
or
imul
inc
in
xchg
mov
mov
addr16
push
jl
pop
pop
imul
inc
fwait
out
pop
mov
mov
lcall
or
inc
push
jo
mov
js
fistps
fwait
movsb
fadds
jbe
pop
lods
lahf
push
aad
cmpsb
ss
pfpnacc
mov
mov
xchg
push
mov
stos
loopne
mov
addr16
test
das
adc
out
jns
rcrl
and
cmpsl
jmp
xor
xchg
out
mov
enter
xchg
mov
sbb
lock
mov
push
adc
outsb
jecxz
inc
jl
or
mov
pop
and
jns
pop
movsl
mov
jle,pt
cwtl
dec
adc
popf
cld
movsl
jb
pop
jae
out
lahf
stc
cmp
stos
cmp
jmp
pop
jb
cmpsb
push
lahf
les
sbb
fisubs
fsub
fbld
pusha
sbb
push
lds
ds
mov
jbe
push
and
push
aad
fnstsw
xor
sbbb
sbb
jne
outsb
and
lock
or
pop
xor
xchg
jge
pushf
iret
loope
push
cmp
rcll
outsb
cmpsb
jp
inc
inc
xchg
lcall
call
sbb
push
negb
jge
inc
pop
mov
add
lret
adc
mulb
popa
cmpsl
sub
xor
lock
mov
xchg
test
mov
add
aam
ficomps
xchg
adc
loop
jge
enter
mov
sub
pushf
adc
jg,pn
push
add
sbb
ret
gs
test
lds
outsl
jae
and
jl
adc
jg
add
aaa
int3
cld
lock
and
inc
icebp
lcall
out
jnp
add
cmp
xor
or
dec
mov
xor
stc
jp
xlat
mov
jnp
inc
fists
jmp
jb
repnz
pop
pusha
jg
jae
jecxz
mov
jnp
iret
inc
cmp
loopne
nop
dec
loope
addb
mov
pushf
mov
mov
loope
xor
shlb
enter
pop
out
lret
mov
outsb
scas
out
add
sbb
push
push
push
call
pop
movl
lds
insb
repnz
push
fucomi
insb
lods
into
mov
pop
mov
add
and
int3
lea
xor
sti
mov
ret
push
cmpl
pushl
lock
rorl
adc
js
out
add
xchg
fstps
cli
xchg
jae
lahf
in
jge
mov
sbb
in
repnz
imul
mov
inc
cli
mov
outsl
shl
xchg
push
cmp
mov
cmp
lock
loopne
jg
pop
adc
fs
int
push
lods
je
in
test
adc
jl
pop
add
test
jne
hlt
push
mov
stos
xchg
mov
inc
aam
aas
jnp
lcall
out
add
push
repz
inc
rolb
adc
add
adc
pop
jo
imul
inc
mov
lahf
adc
movsb
in
jmp
add
cmpsl
add
cmp
inc
dec
push
mov
es
aas
mov
pop
aaa
leave
fsubr
xchg
xlat
sti
xor
jecxz
xorb
mov
imul
pop
or
bound
xchg
mov
sbbb
mov
pop
lea
jae
sbb
gs
xchg
ja
shlb
repnz
stc
in
pop
inc
jg
pop
rclb
aam
movsb
pushf
ret
loopne
push
movsl
test
das
pop
push
inc
cld
cmp
pop
out
dec
out
popa
mov
xor
mov
add
push
shrb
jg
aad
push
test
sti
popf
add
xchg
mov
push
cmp
addb
call
cmpsb
jl
inc
cmc
jns
out
cmp
jp
out
push
ljmp
jmp
ljmp
nop
mov
rolb
aaa
data16
aam
aaa
aaa
pushf
jns
mov
cmpsl
test
outsb
cli
ss
push
lods
pop
xor
mov
xchg
outsl
fnstsw
leave
and
fbstp
xchg
outsb
lea
mov
sub
in
hlt
int3
sbb
xlat
ret
inc
scas
gs
pop
jnp
pop
jo
and
not
mov
cmp
popf
cmc
add
imul
jmp
dec
sub
cli
ljmp
cmpsl
dec
cmpsb
add
popa
aam
in
addr16
cmp
decb
pop
fsubr
mov
or
mov
dec
pusha
dec
insb
xor
mov
out
or
insb
sbb
sub
mov
push
mov
or
in
test
out
inc
clc
or
inc
cmp
pop
sub
push
mov
sub
int
add
push
mov
jo
dec
arpl
loopne
push
invd
testb
adc
jb
lock
push
ds
clc
out
iret
imul
or
push
sbb
inc
popf
pop
ss
stos
mov
lods
mov
loopne
cmp
cmp
cmp
das
xchg
mov
and
xor
dec
je
sbb
pop
cmpsl
clc
xchg
xor
stos
into
mov
aad
xchg
in
push
add
mov
imul
aaa
jne
pop
scas
scas
ljmp
shlb
int
lcall
sub
adc
repz
std
dec
and
mov
cmp
mov
push
hlt
insb
jo
jecxz
cmp
lret
mov
jno
dec
fldt
test
push
pop
rcr
mov
ss
xchg
adc
lea
or
lahf
xchg
pop
jmp
stos
mov
daa
push
cld
into
bound
aaa
outsb
movsl
mov
fdivrs
les
test
and
pushf
ret
add
push
add
push
sbb
lods
add
stc
mov
add
ds
mov
xchg
pop
mov
lret
dec
adc
shl
jb
push
sbb
hlt
in
push
push
xchg
xor
stos
lds
push
xor
pop
push
int3
call
cmp
rol
leave
into
push
sbb
in
leave
movsb
mov
daa
ds
stc
pusha
mov
int3
sub
sbb
loop
aad
jnp
clc
incl
mov
cs
push
adc
cmpb
test
and
fdiv
in
sub
dec
loop
movsl
icebp
test
inc
cmp
hlt
bound
xorl
pushf
add
gs
cwtl
adc
int
insb
data16
lahf
das
mov
insl
aas
cmp
or
push
push
xchg
cld
xchg
outsl
outsb
jo
loopne
je
add
pushf
pop
aaa
clc
cs
xchg
jb
scas
std
or
sub
sbb
adc
adc
rcll
ret
cmp
pop
sub
mov
fisttpl
js
xchg
mov
jns
jecxz
es
push
mov
mov
notb
xchg
sbb
ss
test
test
cmpsl
jo
pop
push
cmpsb
mov
or
pop
push
jle
and
sbb
inc
sub
clc
and
push
pop
mov
pop
and
stos
icebp
ffreep
jle
inc
loopne
cltd
mov
push
ljmp
gs
xor
push
jno
mov
shl
add
rcll
jmp
cmpb
mov
or
xchg
in
adc
or
adcb
and
sbb
les
cmp
inc
xchg
loop
pusha
lret
data16
jle
loopne
xlat
mov
rorl
push
xchg
test
add
mov
jb
fmull
add
popa
xlat
push
out
jge
fcomp
loop
pop
inc
test
icebp
sub
mov
add
icebp
test
sub
or
inc
or
add
sbb
sub
or
and
fcmove
out
test
cmc
xchg
jecxz
rcll
mul
mov
jno
fstps
out
mov
icebp
dec
fwait
add
ja
jl
pop
out
test
lods
popa
sub
ret
dec
xchg
mov
pop
stos
mov
pop
mov
fisubrs
sub
xor
loope
jnp
mov
mov
cmpsb
xchg
dec
dec
sub
mov
popa
mov
cmp
or
mov
aas
fimull
jl
pop
jecxz
out
cmp
icebp
icebp
mov
jg
clc
sub
int3
inc
or
cs
popa
xor
pop
push
ss
jns
mov
dec
enter
xchg
neg
xorb
cmp
push
cmp
push
neg
das
xchg
xchg
shrl
icebp
cwtl
cmc
inc
sub
ja
roll
lret
dec
sub
sbb
or
sbb
xchg
jl
cli
ret
cmpsb
in
icebp
out
push
dec
enter
in
inc
sub
adc
mov
mov
in
adc
addr16
cwtl
das
ss
mov
xchg
adc
pop
cld
aaa
ret
jecxz
pop
sbb
cld
xchg
pushf
ja
out
ret
sub
push
popa
sub
sbb
shr
mov
or
and
dec
xchg
cmp
xlat
mov
in
jne
cs
cld
pusha
mov
add
push
aaa
loop
stos
push
sti
sub
pusha
dec
or
adc
jecxz
add
push
aas
mov
xor
in
push
call
sbb
mov
not
lods
sbb
lods
push
mov
push
and
idivb
insl
mov
loopne
addb
jb
pop
call
lock
add
push
out
push
stc
stos
fiadds
loop
fs
or
sub
movl
int
outsb
mov
mov
jo
js
lds
in
negb
mov
and
cli
int3
add
pop
xor
mov
cmp
cli
imul
add
or
fxch
shrb
fisubs
nop
mov
or
sahf
testl
jbe
add
push
mov
sub
jno
push
mov
mov
jbe
and
mov
cmp
nop
xor
xchg
imul
mov
dec
mov
xor
pop
pop
test
lret
xor
sbb
in
add
not
test
jp
test
js
xchg
lahf
pop
cmpsb
push
mov
lods
jno
sbb
fcompl
lea
mov
mov
cmp
fstp
stos
jg
lret
lcall
ja
mov
push
jmp
push
mov
jns
pop
xor
adc
jne
stos
adc
sahf
divl
adc
add
imul
dec
xchg
lods
jb
shlb
repnz
jns
int
ret
push
popf
jle
or
xchg
mov
movsb
aaa
test
in
lret
xchg
mov
dec
fidivl
out
test
sub
add
mov
mov
leave
test
pop
sbb
xor
jae
push
out
lret
lcall
sub
fisttpl
or
and
cmp
or
stos
mov
push
push
loopne
mov
ret
sbb
push
pop
shll
inc
add
icebp
ret
lahf
ffreep
cmpsb
jl
xor
push
bound
or
pop
mov
pop
xor
and
mov
cld
in
dec
pop
or
mov
scas
sbb
inc
pusha
add
aas
movsb
std
repnz
xchg
aam
fmull
test
outsl
mov
repz
shlb
sti
jbe
aam
cmp
pusha
push
enter
mov
mov
jne
jne
dec
inc
adc
aam
jp,pt
xlat
jb
xor
data16
mov
or
pop
dec
fisubrl
aad
scas
cmp
and
mov
mov
dec
pop
in
popa
and
cmp
adc
mov
adc
add
xor
pusha
mov
into
insl
xor
addr16
push
add
mov
lock
inc
fisubl
push
in
add
insb
jns
clc
loopne
pop
adc
fwait
mov
pop
xor
push
lds
cmc
mov
or
jge
adc
lahf
pop
mov
cmp
inc
add
mov
and
fwait
iret
negb
rcrb
sti
cli
in
lea
gs
jno
mov
adc
jns
ds
xchg
jmp
repz
sub
jne
stos
cmpsb
into
jmp
dec
xchg
nop
cmp
dec
cmc
adc
popf
mov
inc
xor
jmp
jno
sub
and
mov
test
xchg
cmp
cmc
or
pop
sub
dec
test
int
mov
add
mov
push
cmp
cmp
and
aad
cltd
cs
icebp
mov
xor
push
inc
mov
nop
les
cpuid
jmp
movsl
dec
push
sahf
lcall
hlt
inc
jg
and
mov
sub
lahf
cwtl
sbb
add
stc
cmp
testl
mov
and
aas
push
sub
inc
mov
fidivrs
stos
sbb
fwait
mov
xchg
pop
iret
jae
aas
xorl
cmp
mov
jno
movl
xchg
pop
push
popa
movsb
fldt
add
jg
js
loope
nop
lea
outsb
in
adc
inc
inc
push
sub
adc
add
mov
aas
mov
push
sbb
das
arpl
dec
mov
in
push
adc
jmp
lret
stos
add
fmuls
pop
adc
fildll
jne
outsb
pop
lods
or
xchg
mov
jge
sahf
mov
mull
clc
test
mov
pop
cmpl
enter
shrb
or
or
xor
sub
dec
mov
xchg
insb
aaa
and
fbld
and
mov
pop
mov
adc
pop
xor
mov
ds
pop
out
int
mov
lcall
push
mov
test
iret
cltd
dec
mov
ss
or
mov
pushf
lods
or
sbb
adc
scas
add
and
and
aas
repnz
push
shr
push
lahf
pop
mov
cmp
in
jge
cwtl
mov
mov
or
dec
adc
lods
push
jmp
xor
arpl
mov
mov
dec
int
sti
xor
es
dec
xor
fsubl
cmp
fstpl
pop
xor
notb
mov
dec
jae
mov
xchg
scas
idivb
movsb
loop
rcrl
jo
pusha
insb
push
dec
xchg
dec
pop
aas
cmpsb
mov
pop
mov
inc
add
dec
sbb
adc
loope
or
sbbb
push
fidivrs
push
inc
and
ss
and
aas
ljmp
loop
icebp
or
loop
inc
jno
inc
add
movsl
xchg
mov
popa
add
mov
outsb
mov
in
leave
out
pop
mov
aad
or
loope
lret
lahf
jecxz
bound
stc
sub
stc
xor
test
jge
adc
ljmp
scas
lods
lock
pop
nop
push
scas
in
cs
pop
jl
add
testl
in
dec
adc
add
jne
sbb
lcall
fs
insb
inc
pop
lods
mov
insb
pop
mov
ret
mov
or
ret
fldcw
lock
sarl
sbb
jns
sub
clc
lods
sbb
push
jo
imul
xor
jns
sub
ds
mov
adc
fmull
shll
sub
iret
jns
and
xchg
xor
clc
popf
mov
mov
xorl
mov
jmp
je
xor
push
stc
and
pushf
pop
popa
inc
scas
mov
in
push
dec
dec
and
add
xchg
xchg
pusha
bound
loop
ljmp
jecxz
or
add
mov
sub
mov
aas
push
push
iret
aas
pop
aam
ss
insl
adc
scas
mov
cmp
jp
addr16
cmpsb
andb
inc
dec
rolb
pop
fwait
pop
sub
pop
inc
outsb
jns
jecxz
xor
aad
insb
xlat
pop
scas
lds
adc
repnz
je,pn
mov
cmp
add
xchg
clc
mov
or
pop
into
mov
stc
les
fcomps
push
ret
push
push
out
lret
es
sub
js
out
xor
add
rolb
std
lret
sbb
xor
push
int
stos
mov
lods
push
scas
and
fistpll
adc
pop
faddl
add
and
push
mov
sub
jnp
dec
lret
aad
jae
pop
cld
scas
leave
inc
adc
xlat
movsl
mov
cmp
jge
cmp
pop
push
test
jmp
jnp
mov
xchg
cs
mov
lods
sub
sub
sbb
insl
adc
mov
jmp
sbb
cs
xor
jge
add
push
loop
and
es
jl
xchg
xchg
fnstsw
shr
jp
sub
lds
call
outsl
orps
lahf
xor
int3
cmpb
push
jne
insb
movsl
cwtl
or
loope
xor
lret
add
aaa
cmp
fs
fidivrl
hlt
lods
mov
lods
ljmp
adc
xchg
adc
cmpsl
adc
lcall
jbe
cwtl
pushf
in
cmp
aas
xor
out
pushf
xor
ja
jg
add
fistpll
adc
faddl
jno
pop
pop
out
cmpb
mov
add
adc
push
pop
popa
movsl
or
jecxz
sub
mov
les
std
imul
inc
out
mov
fcoms
xor
jl
or
fldcw
imul
loope
cmpsl
xchg
adc
insb
adc
fcom
stc
ljmp
xor
inc
inc
inc
or
and
stc
fwait
jg
leave
sub
int3
sbb
mov
dec
mov
sub
repz
xchg
je
xchg
rclb
push
cmp
fucom
cmp
jge
or
pop
ljmp
mov
sbb
sub
into
or
icebp
xchg
mov
push
imul
in
inc
mov
movsl
rorl
add
int3
mov
aad
pop
js
adc
into
sbb
into
mov
mov
aad
push
mov
pop
shll
sub
fs
sbbb
xchg
xchg
mov
call
sub
or
icebp
test
aam
aam
dec
xor
push
loop
add
mov
test
push
loope
repnz
mov
inc
inc
jo
add
and
test
enter
and
lea
xor
xchg
jg
mov
loopne
incb
mov
sbb
lds
insl
sub
cmove
cmp
pop
out
jmp
je
gs
mov
outsl
test
pop
ficomps
cmpsb
mov
sbb
or
aad
add
pop
jno
insl
mov
js
out
xchg
jle
mulb
in
adc
out
push
sub
push
mov
dec
rorl
xchg
adc
mov
int
xchg
dec
inc
loop
arpl
add
add
pop
int
sbb
mov
or
sarl
mov
cmpb
sub
mov
sub
stos
xchg
mov
or
jl
ret
mov
xor
sub
sbb
cmp
adc
mov
push
cmp
jns
jge
xchg
pop
jmp
filds
mov
leave
xchg
push
rcll
in
pop
ret
call
mov
rclb
mov
pop
add
add
or
inc
xlat
mov
jb
add
mov
int3
notl
or
pop
cmp
fstpl
inc
ficoms
ljmp
xor
mov
add
insl
test
sbb
out
cld
mov
fdivrs
js
adc
out
std
mov
lret
xor
jl
adc
pop
mov
enter
inc
xchg
shrb
inc
fdivl
imul
imul
xor
int3
fstl
and
jmp
pop
jl
ret
stos
sub
les
cmp
mov
add
aad
sbb
pop
add
sbbl
mov
xor
fmul
inc
hlt
in
repz
cmp
pop
xchg
aas
xlat
je
xchg
dec
int3
loope
and
imulb
add
jnp
sbb
and
add
inc
sub
xchg
cmp
push
bound
outsb
and
mov
lret
ss
pop
sti
dec
xor
lods
push
std
and
add
ja
push
pop
inc
mov
sub
pushaw
test
mov
sub
ds
outsl
cmp
and
jno
sub
addr16
mov
out
mov
mov
fcomps
repnz
fsubrl
lcall
stc
imul
sub
add
out
ja
sbb
cmp
mov
jb
xchg
gs
lock
adc
pop
mov
jmp
out
and
dec
and
pop
sub
push
adc
or
add
clc
aaa
ret
or
mov
pop
inc
adc
ja
pop
fstpl
lret
and
and
jecxz
cmp
fwait
add
inc
push
cmp
pop
mov
adc
lods
loope
mov
sub
loopne
xchg
sbb
push
cmc
xchg
pop
movsl
in
sbb
mov
fimuls
sub
movb
mov
out
inc
mov
fiaddl
addl
into
inc
jg
leave
dec
loopnew
call
pop
pushf
inc
push
cmpsb
and
cmp
bound
stos
scas
push
scas
pushf
in
lods
nop
cmpsb
lods
fs
push
ljmp
lds
jb
and
jns
push
and
loop
sub
call
iret
jne
or
fs
push
gs
cli
ret
ja
popa
mov
push
and
js
dec
nop
mov
mov
imulb
stos
jge
loope
movsb
movsb
adc
cmp
fcom
frstpm(287
mov
popf
xchg
add
dec
push
add
cmp
dec
out
cmpsb
nop
inc
sbb
xchg
jne
pop
popa
and
ds
setge
pushf
loope
or
not
sbb
mov
pusha
xchg
stos
sub
scas
loop
and
int
push
test
pop
fstl
movsb
fsubs
stc
push
add
adc
rorb
adc
mov
dec
jle
loop
stos
cli
jl
int
mov
jmp
mov
lea
cs
rolb
test
sbb
jno
mov
imull
sub
jl
flds
enter
mov
sub
jno
xor
movsb
xor
pop
jbe
scas
cld
hlt
push
push
pop
lahf
repnz
or
xchg
xchg
in
gs
mov
mov
mov
fdivrp
sbb
int
rclb
sub
inc
xor
adc
call
lret
xor
out
push
push
out
ret
lea
lds
push
or
bound
popf
pop
loopne
decl
dec
pop
mov
sbb
xlat
cmp
mov
add
mov
fs
mov
lock
push
or
insl
popf
push
or
ret
outsb
adc
mov
sbb
jle
je
dec
xor
call
jp
push
push
test
jge
out
and
out
repz
movsl
scas
xchg
cmpsl
pop
leave
out
fnstenv
sub
mov
sub
aam
sbb
or
sarl
jo
aam
adc
or
call
xlat
lret
mov
aad
fsts
push
sbb
pushf
dec
inc
and
int
cmp
push
data16
dec
sbb
adc
adc
faddp
jns
cmpsb
xchg
cwtl
movsb
sub
sbbb
mov
cmp
rcll
adc
jno
jae
int
or
int3
mov
add
cmp
push
ljmp
fwait
sarb
fwait
addr16
clc
push
daa
adc
pop
xchg
adc
insb
and
push
inc
rcrl
cmpsl
f2xm1
jge
cwtl
mov
sbbl
and
add
dec
sub
pusha
insb
and
sbbl
push
inc
dec
push
mov
cli
jb
movsb
jnp
cmpsl
add
scas
mov
jne
adc
mov
lock
inc
in
sub
call
jnp
add
pop
or
or
pop
mov
out
popf
mov
mov
and
into
inc
push
mov
enter
daa
jmp
loope
call
shl
hlt
push
jns
ror
mov
adc
jne
fcom
outsb
jp
lcall
mov
daa
jp
sbb
xchg
cs
les
mov
pop
movsb
or
dec
outsl
xlat
add
fs
adc
lock
cltd
jnp
dec
sbb
adc
loope
int
lret
jns
fcompl
lret
push
lods
nop
fbld
outsb
movsb
aas
in
in
xchg
cli
sub
scas
mov
push
and
push
jns
push
mov
xor
or
lods
out
xor
cmp
push
inc
and
or
enter
fildl
pop
ja
out
lahf
loopne
sbb
jecxz
inc
outsb
adc
xor
sbb
cmp
lods
xlat
div
fadds
dec
dec
repz
nop
sub
call
std
stc
ror
xor
mov
mov
xor
mov
mov
sbb
in
mov
je
movsl
dec
and
add
add
cmp
jns
add
mov
fisubrs
mov
add
and
inc
scas
test
fstl
loope
push
std
fistpll
mov
sub
lret
into
cwtl
lret
sbb
gs
out
inc
cmp
sbb
imul
popf
loopne
rolb
dec
push
pusha
inc
and
lret
lods
or
cwtl
cs
mov
fiaddl
cmp
negb
and
aas
cmp
fildll
mov
mov
stos
imul
xlat
xor
and
jo
adc
vmwrite
jbe
inc
int3
pop
push
lret
in
cmp
data16
mov
int
fimuls
adc
dec
mov
cmpsl
sub
out
ret
cld
lds
or
dec
iret
movq
nop
mov
shrb
pop
adc
insl
xchg
xor
xchg
mov
xorb
cltd
dec
pushf
aas
sbb
movsl
push
test
jp
gs
inc
punpcklwd
movsb
shll
cmpps
shll
xchg
int3
inc
jnp
and
jno
push
stos
cmp
and
mov
or
or
mov
lcall
lods
inc
imul
or
mov
mov
repz
icebp
mov
push
shl
sahf
sbb
cwtl
add
aam
lea
nop
inc
or
cmpsb
mov
or
aam
ret
enter
pslld
pop
stc
jae
add
mov
jbe
mov
adc
jbe
sub
cwtl
daa
mov
clc
pop
mov
test
xchg
push
lea
adc
fs
sub
inc
mov
sbb
jb
jno
lea
xor
leave
repnz
scas
jge
mov
push
push
inc
jle
add
push
jp
mov
adc
in
out
jb
xchg
or
mov
and
insl
pop
cmp
push
lea
xor
repnz
jl
pushf
imul
or
xor
sahf
inc
mov
loop
pop
mov
mov
out
jle
pop
pop
dec
fwait
jge
jns
loop
sti
mov
imul
inc
dec
cmpl
fiadds
jp
inc
sti
lods
lds
int3
xor
dec
inc
push
push
mov
push
adc
and
jnp
xlat
xchg
mov
fisubs
pop
shll
pop
cmpsl
enter
add
jle
inc
cli
clc
mov
insl
push
sarb
or
mov
pop
arpl
adc
scas
ficomps
test
ret
cmp
mov
add
cmp
and
fidivrs
sub
adc
fwait
imul
lds
test
cli
mov
test
mov
sub
fstpt
ret
mov
lods
or
push
icebp
jge
cli
jne
sub
dec
fld
jae
lret
and
mov
ja
and
and
xor
sbb
pop
jne
shl
cli
pop
cwtl
mov
fldcw
fs
mov
insl
lods
or
mov
push
out
daa
and
pop
xchg
out
sbb
and
mov
sub
scas
cmp
cmp
mov
ja
ror
cltd
adc
mov
pop
test
data16
adc
and
shll
ja
xchg
mov
jmp
rcll
fdivrp
int
inc
xchg
divb
xor
inc
jne
add
push
mov
xchg
mov
test
mov
fadds
xchg
and
adc
jecxz
push
mov
fwait
sub
or
mov
mov
mov
pop
out
test
mov
xor
bound
push
lcall
push
test
testb
imul
scas
dec
pop
rcll
jnp
mov
jle
cmp
je
call
pop
xlat
jno
daa
gs
or
adc
xor
lock
sub
dec
stos
xchg
xchg
mov
lods
or
push
out
inc
stos
sti
test
cli
stos
lds
ss
hlt
movsl
hlt
adc
out
add
leave
aas
or
pop
sti
fisubl
loopne
stc
loope
adc
mov
dec
mov
in
cld
aas
leave
push
inc
add
xchg
sub
xor
ja
repnz
fstl
pop
loop
rolb
loopne
dec
adc
xlat
lods
cmp
ficompl
dec
daa
std
movsl
jne
cmp
xor
test
lret
jmp
bound
lock
jmp
mov
jo
aas
dec
adc
push
fnstcw
inc
xor
insl
idivb
and
mov
pop
jmp
fcomps
fidivl
lcall
fldenv
fmull
nop
cld
cmpsb
call
sbb
jno
jmp
clc
xor
mov
push
and
push
mov
pop
sahf
dec
mov
pop
arpl
ljmp
inc
jmp
mov
sbb
std
mov
movsl
in
dec
dec
loopne
inc
rol
lcall
ja
outsb
mov
mov
inc
jbe
jne
outsl
lds
sub
lea
jne
dec
insl
mov
dec
dec
mov
push
popf
pop
xor
leave
pop
outsb
xlat
cmp
xor
inc
xchg
shld
sbb
pusha
shll
push
daa
popf
add
jae
nop
loope
fimull
adc
xchg
add
add
das
test
imul
lea
lods
cmpsl
xchg
dec
inc
push
cli
popf
mov
clc
pop
lret
pushf
scas
clc
subl
adc
mov
int
lods
jno
jbe
sub
sub
mov
scas
aaa
mov
jbe
cwtl
ljmp
mov
mov
addr16
jne
xor
fildll
in
in
stos
leave
xor
cwtl
push
fsubs
mov
mov
out
dec
adc
imul
subb
mov
int
in
or
lcall
test
shl
fwait
bound
dec
cld
dec
push
dec
aaa
cmp
inc
jbe
movl
and
sar
stos
jno
xchg
jo
popa
xor
sub
sbb
sti
push
jns
ret
roll
test
push
loopne
fbstp
sub
shll
mov
xor
adc
dec
or
cmpsl
mov
inc
outsb
loope
push
scas
int3
push
rcrl
lds
fwait
enter
mov
and
xor
mov
iret
sbb
sub
jae
mov
mov
mov
fnsave
rcrb
daa
xchg
ror
pop
pop
pop
call
inc
pop
jge
leave
daa
stc
ds
movl
adc
dec
iret
cmp
adc
xor
pop
ret
fcomp
in
ret
or
shll
push
stc
xchg
mov
dec
mov
lcall
pop
imul
popf
dec
arpl
pop
mov
in
push
xchg
adc
cmp
ja
mov
les
xor
and
xchg
leave
xchg
jbe
fwait
jmp
mov
inc
popa
imul
cmp
insb
pop
mov
imul
daa
cmp
lock
out
push
sbb
cmovb
xor
and
movsl
test
adc
mov
dec
movl
filds
fisubrs
cmp
push
pop
cli
cmp
fs
fs
lods
jns
test
icebp
dec
bound
xor
pop
ret
insl
mov
or
sub
lahf
mov
popa
sub
inc
pusha
add
mov
je
adc
jo
or
inc
test
ljmp
add
xchg
adc
push
inc
xchg
xor
out
movsb
je
fdivl
mov
inc
scas
mov
imul
jbe
push
je
cmpsb
scas
adc
jl
jecxz
lahf
add
mov
in
sub
sbb
push
mov
and
push
xor
fadds
rorl
lock
movsl
and
sbb
inc
ret
lods
pop
mov
jmp
fcomps
sub
lret
dec
fdivs
inc
in
push
add
into
dec
movsl
and
popa
or
subb
js
xchg
jge
movsl
sub
dec
jns
sub
inc
mov
jecxz
push
dec
push
jnp
popa
pop
cld
call
push
imulb
jge
in
ja
in
outsb
pusha
dec
add
lods
cwtl
xchg
notb
mov
leave
scas
pop
mov
popa
add
imul
movsl
enter
imull
in
stc
and
into
and
aas
push
sbb
icebp
les
cmc
mov
push
enter
xor
push
push
dec
je
adcb
push
jno
sbb
insb
xchg
jb
jge
ja
ret
rclb
dec
mov
sahf
loop
ja
lret
xchg
mov
or
lods
mov
fs
pop
xchg
mov
mov
mov
out
leave
jl
jge
stc
inc
out
mov
add
inc
fiadds
cmp
lods
mov
dec
popf
decl
or
test
popa
cmp
sbbb
dec
mov
lahf
lock
fstpt
cmpsl
jo
aad
ds
enter
mov
jge
and
daa
add
xor
ljmp
les
lea
add
call
mov
push
mov
cmp
adc
xchg
and
xchg
push
pop
andb
or
jo
pop
mov
scas
scas
xor
aad
adc
mov
adc
inc
fisttpll
stos
lods
xchg
pop
imul
fwait
rcrl
ja
daa
cmp
sub
mov
jg
sub
shlb
jo
push
lods
and
fwait
jmp
cld
lea
daa
cwtl
mov
out
shlb
ds
cs
push
fcoms
clc
enter
aam
pop
sub
cmc
js
pop
jo
cli
dec
js
clc
arpl
cmp
out
jmp
add
xchg
add
inc
pop
mov
pop
push
jge
inc
pop
cmp
into
jecxz
dec
mov
in
pop
ret
and
cs
inc
ret
outsl
or
add
xor
lock
sti
movsb
add
jo
lea
repnz
xchg
mov
nop
out
pminsw
jl
pop
leave
sbb
mov
mov
aas
adc
pusha
sub
ja
jp
and
xchg
sbb
jge
jge
enter
push
test
shl
lea
testb
jns
push
stos
cli
or
stos
xchg
jmp
mov
push
xor
int3
cmpsb
mov
out
and
in
adc
roll
mov
loop
pop
mov
xchg
test
fs
mov
inc
xchg
mov
in
dec
fcoms
cs
fwait
incb
icebp
mov
cld
add
cli
cmpsl
cmp
or
jl
and
sbb
dec
or
lods
cmpsb
jb
lret
jmp
xchg
dec
mov
enter
jns
jp
cwtl
xchg
and
jecxz
out
test
ljmp
test
pop
fiadds
xor
loope
add
scas
mov
and
clc
in
leave
aaa
sbb
xchg
sbb
test
xor
xchg
dec
test
add
ret
cs
stos
mov
xchg
push
mov
xchg
bound
lret
rcr
pop
cmp
xchg
test
std
jl
and
repnz
rcr
pop
int3
hlt
aad
inc
xor
adc
cmp
sbb
mov
les
leave
sbb
ficomps
add
shr
add
stos
loopne
pop
ja
mov
ja
mov
bound
int
out
push
mov
out
adc
cwtl
negl
loop
icebp
imul
adc
ljmp
popf
es
flds
arpl
rcll
lock
mov
fisubl
ljmp
mov
xchg
fnstenv
xor
jno
insb
mov
push
jg
or
sti
mov
pop
adc
iret
scas
adc
incl
lcall
push
cld
lds
loopne
loopne
sahf
cmpb
subb
xchg
push
or
sub
pop
sysret
xlat
pop
xor
push
outsb
movsl
fistpl
scas
sbb
pop
je
ret
pop
test
iret
add
pop
imul
mov
xor
pmaddwd
cmp
add
pop
cmp
inc
mov
aaa
sbb
lret
ret
sub
mov
jecxz
mull
ds
stos
mov
repnz
or
xchg
dec
mov
jno
jmp
xor
jmp
push
shll
leave
int
nop
lea
lds
lods
xor
repz
imul
into
imul
stos
inc
xchg
sbb
or
inc
jb
jo
push
mov
in
fistl
sahf
xchg
xchg
dec
mov
enter
and
push
inc
mov
int3
mov
sbb
imul
cltd
outsl
cmp
cmp
pop
mov
xor
jmp
inc
adc
xlat
xchg
xchg
rcl
mov
out
cmp
cmpsb
dec
clc
inc
jge
ja
aaa
sub
je
mov
into
loopne
fwait
add
push
xchg
mov
push
arpl
sarl
std
xlat
test
xchg
out
mov
fwait
inc
ljmp
and
dec
cmovle
inc
sbb
gs
clc
lret
daa
mov
push
inc
sbb
outsb
ffree
add
sbb
test
xor
mov
shll
fs
or
or
jle
loope
in
pushf
sub
js
test
dec
push
sub
inc
push
in
adc
bound
mov
hlt
mov
cwtl
jle
and
add
stos
movsl
loop
shll
pop
mov
ljmp
xorb
mov
pop
jne
jb
clc
movsl
sbb
push
or
mov
sahf
push
sbb
fcmovbe
dec
mov
xor
xchg
pop
in
jns
fbld
jno
cmc
fsubrs
in
sbb
int3
inc
imulb
mov
in
push
dec
cmp
loop
cmc
lock
cmp
or
push
enter
rcrb
cld
lods
movsb
popf
jno
insb
adc
clc
nop
push
movsl
cmp
dec
loope
outsb
fwait
mov
mov
repz
push
xor
or
lea
adc
pop
inc
notl
mov
push
push
aas
sbb
dec
xchg
adc
or
out
sqrtps
or
in
arpl
mov
scas
stc
xlat
lds
mov
test
pop
xchg
repz
in
shll
lea
inc
jno
or
push
jno
ret
out
loope
mov
inc
test
in
mov
test
fldcw
mov
mov
mov
mov
lahf
mov
movsb
pushf
pop
rcrl
sbbb
fs
fldl2t
ficoml
dec
mov
dec
ret
test
inc
cs
jne
fisttps
ljmp
lea
xor
scas
insl
arpl
shlb
or
pop
ret
jmp
sbb
cwtl
push
adc
mov
rorb
out
sbb
mov
repz
arpl
xor
pop
pop
add
push
sub
sbb
sarb
xor
in
jmp
dec
in
cmovge
xchg
jge
aaa
jge
dec
insl
fwait
hlt
push
pop
cmc
push
dec
std
pop
pfacc
or
lods
rolb
dec
fmuls
sub
cmp
mov
cmp
cld
loopne
jno
add
fnstsw
xor
lcall
mov
mov
aam
mov
lahf
stos
jge
jne
or
popa
or
in
inc
xchg
fmul
leave
push
push
mov
pop
out
stos
mov
addr16
out
dec
int
jmp
call
imul
and
jmp
adc
in
mov
loop
xor
mov
adc
adc
aaa
lods
lahf
scas
inc
xor
mov
mov
push
push
jmp
testb
sbb
jo
inc
or
push
in
inc
push
cwtl
ljmp
jecxz
and
pop
cmpl
and
dec
sub
les
and
sub
and
imul
or
mov
cmp
fisttpl
inc
adc
sbb
mov
sbb
clc
mov
cld
xor
sub
lods
mov
dec
mov
mov
inc
pop
pop
inc
jle
decb
sub
divl
push
xchg
xor
and
popa
lods
jl
pop
inc
xor
fsubs
loope
cmpsb
xor
mov
insb
jbe
and
push
xor
mov
inc
mov
xor
jle
loope
jns
insb
inc
pop
pusha
inc
call
int3
aaa
and
xor
arpl
arpl
iret
xor
loop
popf
dec
push
dec
jp
popa
cmpsl
inc
jl
lea
lret
inc
push
push
cmc
std
and
scas
mov
adc
loope
mov
ss
sbb
add
sbb
pop
test
idivb
cmp
jae
aaa
sbbl
in
dec
in
inc
sar
stc
ja
xor
lock
scas
adc
leave
jae
push
lret
mov
or
mov
jns
in
ret
jns
sarb
xchg
mov
out
cmc
cmp
aas
add
pushf
icebp
dec
inc
mov
xor
out
pop
xlat
add
ljmp
mov
and
and
aam
xchg
cmpsb
nop
add
mov
and
sbbl
mov
pop
push
int3
or
decl
imul
faddl
lea
add
dec
sahf
pop
cmp
mov
inc
in
cli
inc
lret
inc
sbb
push
outsl
out
push
out
hlt
push
in
fbld
jl
add
mov
imul
inc
mov
or
movsb
xchg
hlt
lahf
dec
in
arpl
xor
mov
mov
cmp
and
sub
cld
xor
loop
push
xchg
mov
dec
sub
loop
add
call
push
jno
adc
or
adcl
sti
repnz
jae
push
or
and
adc
adc
cmp
xchg
fildl
mov
pop
cwtl
jmp
imul
dec
aad
lods
cmp
jg
xor
icebp
and
mov
fidivrs
icebp
fmuls
sub
ds
push
dec
ja
ljmp
push
pop
loope
divb
fwait
xrelease
mov
das
mov
sbb
sbb
outsb
and
xchg
push
orb
mov
lods
jns
lret
dec
jle
xchg
and
jecxz
mov
dec
fcom
push
stc
icebp
les
fs
loope
shrb
das
xor
mov
daa
xchg
aas
lret
xor
sbb
mov
cmp
jns
ljmp
or
ljmp
and
jbe
ffree
dec
dec
fwait
in
sbb
es
in
jmp
lods
lret
mov
mov
mov
stc
add
out
insb
sbb
cwtl
mov
push
pop
xor
add
fldenv
cld
sbb
cltd
inc
mov
jne
adc
fists
ds
xor
loope
sbb
popa
faddl
pop
jecxz
stos
push
and
cmpsl
cmc
icebp
pop
or
movlps
jnp
xor
out
decb
sub
shl
inc
rolb
push
mov
lea
push
xor
ss
xor
inc
sahf
or
inc
sub
imul
mov
push
or
stos
test
outsb
and
sub
lret
fildl
adc
test
lret
dec
xor
test
jle
pop
mov
incl
mov
rcrl
in
add
ja
scas
enter
xchg
add
xchg
fisubl
add
pop
cld
jae
pushf
adc
call
sub
int
and
jg
sub
in
shll
dec
sbb
jmp
movl
cmp
std
aad
push
test
sbb
sbb
icebp
das
sub
arpl
pop
pop
test
movsl
push
jbe
out
sti
and
stc
push
ret
inc
mov
insb
aad
add
xchg
cmc
jae
in
outsb
xorb
xlat
cld
aas
fwait
pop
mov
push
sub
bound
fs
lcall
lds
lods
nop
mov
jle
test
sub
or
sub
sbb
or
xcrypt-ctr
cmpsl
sbb
popf
mov
xchg
mov
jp
push
jns
roll
lea
pop
xor
xchg
icebp
sahf
inc
std
outsl
aam
mov
mov
mov
cmpsl
es
stos
adc
sub
mov
pop
mov
fucomip
ret
adc
insb
outsb
fs
sar
imul
inc
jecxz
xchg
into
xor
mov
mov
push
xor
sub
push
pop
and
js
mov
mov
outsl
jmp
pop
arpl
xchg
and
cmpsb
pop
arpl
sbb
shl
test
movsl
call
sub
mov
mov
cmc
xchg
jnp
adc
lahf
and
jnp
outsl
mov
and
cmp
cmc
mov
orl
cmp
test
or
and
movsl
adc
jl
xchg
shr
pop
sti
jg
xor
sti
addr16
lret
jl
sbb
outsl
lret
int3
mov
or
jmp
jno
mov
or
aaa
xchg
lret
sub
pushf
mov
jae
hlt
pop
dec
jo
adc
test
dec
mov
sbb
xchg
inc
add
inc
push
test
ja
push
insl
cwtl
aas
or
out
push
cwtl
xlat
addr16
xchg
movsb
lods
push
pop
push
arpl
cmp
mov
mov
xor
sahf
or
mov
cmc
adc
std
xchg
mov
mov
add
jo
sbb
repz
cmp
xchg
dec
sbb
mov
jbe
bound
sbb
mov
xlat
jg
pop
sbbl
pop
pop
mov
fs
push
test
stos
jmp
out
mov
lock
lcall
int
xlat
addl
jg
test
leave
add
rcl
xor
pop
sub
repz
xchg
add
lret
cmp
fldenv
push
add
fs
xchg
xchg
ss
mov
nop
movsb
insb
pop
fwait
loopne
xor
icebp
pop
movsb
jb
xor
sbb
vmwrite
inc
mov
int3
fisubrl
cmp
popa
ds
jp
mov
pop
out
jo
jmp
daa
fnsave
lret
mov
mov
jno
ljmp
outsb
sbb
fisttpll
lds
push
inc
movsl
mov
in
scas
in
dec
scas
adc
fs
cmp
daa
cmpb
lock
xorb
bound
dec
jg
mov
mov
and
ljmp
test
popa
out
js
lods
mov
pop
sub
xor
mov
into
xchg
cmp
clc
pop
rcr
mov
ficoms
lea
shlb
test
mov
or
cltd
add
mov
mov
imul
aas
cmpb
rcrl
xchg
xchg
dec
data16
out
cmpsb
mov
bound
fisttps
pop
stc
das
mov
xchg
sbbb
add
fsubl
jne
movb
shll
push
jnp
push
xchg
test
pop
fiaddl
xor
pushf
fmuls
ret
shll
icebp
or
lods
cli
or
test
lahf
and
pop
loopne
out
inc
cmp
xchg
out
ret
xchg
imul
repnz
cmp
pop
fs
pop
shl
cmp
xchg
lahf
jge
out
sub
xor
jne
mov
xchg
icebp
jae
sub
mov
push
aas
inc
rolb
xchg
fsubs
test
sbb
xor
jmp
clc
or
add
rorl
inc
mov
inc
rclb
xchg
in
xor
cltd
mov
xchg
jo
iret
scas
add
adc
popf
push
sbb
fwait
jmp
hlt
les
cmp
je
push
add
movsl
mov
insl
push
int
stos
repnz
and
jno
sub
outsb
insb
sub
push
lods
mov
test
xchg
inc
mov
mov
loopne
pop
cmp
adc
cs
push
jp
mov
aad
xchg
sub
shlb
jns
or
add
cmp
pop
rcrb
xchg
nop
imul
pop
pop
xchg
sbb
pop
xor
xor
lods
jg
sbb
mov
fidivs
jge
or
into
pop
sub
repz
dec
adc
adc
test
out
sbb
adc
cli
shll
les
jl
test
icebp
in
gs
mov
sbb
add
int3
ljmp
pop
pop
jmp
add
or
add
daa
adc
inc
jno
sub
fadds
shll
cmp
popl
mov
adc
pop
dec
int
cmpsb
jno
ret
pop
push
imulb
test
loope
jl
inc
add
xor
hlt
and
les
fs
pusha
repz
mov
test
or
jmp
lods
imull
out
ss
mov
pop
jmp
xorl
mov
dec
lea
mov
outsb
test
scas
lock
xlat
fs
and
xlat
cmp
leave
mov
jnp
fisubrs
ljmp
push
xlat
jnp
aaa
lret
pusha
and
rolb
cmp
std
push
push
shlb
adc
mov
jbe
sub
aam
xor
in
push
dec
fstpt
aaa
push
pop
enter
in
shrb
shl
lcall
sub
lods
mov
add
scas
jae
xchg
mov
push
add
sub
loope
mov
mov
mov
into
adcb
rcl
mov
mov
mov
fdivs
lcall
lods
stos
mov
stos
aas
xor
daa
aad
push
lods
and
push
test
adc
mov
int
push
inc
sub
imul
jge
ret
into
roll
aam
jnp
fistpll
std
ret
and
xor
lods
ffreep
mov
fstpt
xlat
mov
in
ret
mov
pop
add
stos
imulb
and
jecxz
filds
push
in
add
fidivrl
adcb
cltd
outsl
xchg
sbb
mov
mov
aas
aas
imulb
lret
daa
cmp
jle
iret
fcoml
jle
ds
adc
fs
nop
mov
cltd
and
add
lcall
mov
lahf
cmp
loopne
pop
popf
mov
loopne
pop
pop
mov
jns
xchg
cmpsl
dec
xchg
inc
dec
mov
add
or
scas
xor
jecxz
cltd
or
sbb
jge
stos
cmp
xor
into
push
push
mov
push
lods
je
push
jmp
dec
pop
jno
mov
stos
and
fbld
sub
dec
lahf
inc
push
push
mov
leave
mov
mov
test
adc
das
add
pop
push
pop
cmpsl
aad
scas
jo,pn
in
dec
fisttps
adcb
aas
xor
in
cli
out
mov
ds
lock
mov
fisubl
inc
mov
mov
push
cmp
gs
lods
push
imul
addr16
push
lock
jge
mov
mov
repnz
dec
lods
int3
jle
xchg
pop
mov
pop
mov
xchg
aas
jo
pop
jo
sub
xchg
pop
xor
push
lods
push
mov
fs
mov
ja
push
data16
bound
pop
dec
lcall
mov
add
inc
mov
lods
add
or
negb
mov
clc
ret
stc
es
pop
rorl
lcall
icebp
repz
mov
mov
sbb
jne
int
adc
add
adc
fildl
xor
repnz
mov
and
not
fwait
in
sti
mov
leave
test
cmc
sub
sub
sub
or
jno
lahf
sbb
mov
inc
imul
ja
adc
jnp
pushf
or
mov
push
jmp
rol
ss
lds
int3
movsb
sub
jg
aas
pop
inc
in
dec
cmp
inc
and
or
call
popa
or
ss
aad
adc
scas
scas
sti
imul
sbb
leave
loope
sahf
cmpsb
ret
out
dec
sarl
add
lods
jg
outsl
push
sub
adcb
int
sub
inc
pop
scas
div
popa
test
jp
inc
lods
push
lcall
inc
jl
outsl
fs
repz
jo
jle
ljmp
inc
hlt
out
cwtl
jb
mov
cmpsl
sub
and
lahf
cs
cmp
inc
mov
push
movb
ss
inc
outsl
movsb
addr16
ffreep
jecxz
or
in
jae
std
cmc
gs
sar
movsb
pop
lret
ficoms
jno
xchg
mov
fiadds
rcrl
inc
push
mov
lahf
push
jmp
fdivs
test
sbbb
pusha
lock
push
jp
jnp
lods
sbb
dec
push
std
xor
sub
push
jg
cmpsl
pop
jno
ja
in
cld
xor
mov
dec
mov
repnz
repnz
or
pop
sub
or
push
hlt
aas
sub
jle
add
out
pusha
sti
inc
aaa
mov
lea
add
sbb
dec
mov
xlat
pop
ffreep
sbb
jb
inc
ljmp
lret
cwtl
jbe
push
inc
iret
aad
jmp
fs
add
inc
sub
rcr
inc
lods
push
cmpsl
rorb
push
jle
or
adc
push
sub
jp
mov
push
mov
sti
add
cmp
xchg
mov
jge
ret
or
icebp
pop
add
push
add
jmp
mov
mov
sub
out
jno
mov
stos
or
aaa
pop
xor
sbb
testl
mov
mov
mov
jp
add
mov
out
cmp
dec
test
mov
and
nop
cwtl
ret
adc
jbe
rcll
or
mov
xchg
ss
mov
hlt
cwtl
aas
loopne
mul
push
notl
or
adc
fdivs
adc
fbld
push
inc
xor
sbb
adc
push
and
mov
sbb
xor
mov
das
xchg
jnp
fistpl
dec
pop
push
pop
scas
sub
and
jge
sub
pop
ds
insl
push
xchg
jmp
mov
and
and
je
test
xchg
mov
xorl
in
push
mov
mov
inc
fnstsw
fldl
out
cld
adc
sbb
mov
cld
push
mov
jns
adc
stos
inc
inc
aas
pop
sub
push
ja
cli
lea
ret
add
lgs
xchg
loopne
cltd
mov
sub
and
mov
shlb
mov
push
dec
push
out
push
jmp
xchg
add
in
cmpsl
arpl
inc
cmpsb
les
and
cmpsl
mov
data16
add
fsubl
sub
inc
out
xlat
push
cli
sbb
fsub
or
jge
shrl
cwtl
rol
sbbb
dec
repnz
xchg
cwtl
ds
pop
cmp
jmp
push
push
filds
inc
pop
daa
js
sub
xor
frstor
idivl
push
mov
addr16
dec
cmovns
mov
sub
dec
out
sarb
in
dec
test
int3
lret
jmp
cld
cmp
subl
clc
xlat
out
fcmove
callw
in
call
iret
insb
in
jmp
ds
jmp
jmp
loop
mov
in
jne
test
adc
add
stos
inc
sti
outsl
adc
xchg
sbb
loop
push
dec
and
movsl
pop
aaa
or
cmp
mov
dec
or
xchg
shlb
adc
add
mov
lea
ret
test
popl
dec
shrd
daa
cmp
aaa
pop
push
push
popa
mov
dec
aaa
adc
dec
jnp
adc
and
iret
stos
insb
ror
ds
jbe
jae
xor
adc
call
mov
das
jge
cmp
sbbb
push
xchg
addr16
cmp
in
push
pmaxsw
movsl
sub
dec
daa
inc
jae
push
hlt
fwait
and
mul
cmpsl
mov
cmp
mov
pop
sbb
jg
in
jg
or
mulb
xchg
jp
aad
sub
or
pop
lock
or
divb
push
scas
out
in
or
sbb
addr16
pop
loopne
or
mov
movsl
hlt
xchg
fiadds
mov
repz
and
xor
adc
jmp
lods
aam
xor
ret
or
sub
ret
cmp
and
xor
adc
mov
filds
fdivp
pop
mov
push
pop
mov
dec
andb
sbb
scas
lahf
aas
mov
mov
mov
adc
out
xor
test
cld
cmc
mov
cltd
pusha
push
pop
scas
xor
sub
jo
add
lods
xchg
sbb
jo
dec
out
xor
mov
scas
xlat
add
pushf
dec
jle
xchg
aas
inc
mov
sbb
insb
mov
shlb
mov
and
cmp
sub
push
xor
and
loopne
fadd
push
clc
xchg
adc
rolb
ret
mov
or
cmp
mov
push
pop
mov
inc
cmp
in
mov
xor
sbb
les
scas
mov
lock
jns
lahf
jmp
das
mov
int3
int3
or
insl
in
aam
mov
sub
push
je
in
bound
push
pop
pop
test
adcb
pop
sub
adc
mov
or
push
lret
stos
inc
pop
xchg
push
test
in
testb
dec
hlt
pop
cmp
loopne
inc
addl
push
mov
or
stos
sub
outsb
shrb
cmp
les
xchg
mov
inc
in
adc
add
cs
inc
mov
pop
lods
pop
jo
sub
push
mov
ror
sub
xchg
push
xorl
dec
out
shl
mov
add
ret
push
jl
dec
mov
ret
insl
inc
mov
dec
mov
enter
cmp
or
jae
lock
icebp
out
sahf
add
pop
mov
mov
dec
add
xchg
gs
dec
push
lds
cmp
dec
pop
inc
and
adc
bound
add
imul
sub
cmp
add
pop
mov
jo
in
add
or
lods
sahf
jbe
cmp
bound
push
add
loop
dec
push
cmc
push
xor
xor
mov
out
xchg
fistpll
sbb
fstl
mov
notb
mov
les
addl
ss
addr16
mov
outsb
mov
aam
sub
movsl
jbe
pop
fcompl
cmp
sbb
pusha
arpl
test
out
lahf
inc
imul
xchg
dec
lea
jmp
adcl
das
sbb
add
push
fisttpll
xlat
xor
adc
mov
cmpsl
popa
push
mov
and
mov
xor
mov
js
jb
push
jnp
sti
inc
xor
aas
test
or
xor
push
sub
pop
dec
pop
jmp
inc
or
in
out
add
sub
enter
insl
movsb
loopne
imul
mov
inc
enter
xchg
mov
sbbl
enter
xchg
add
xor
mov
dec
fists
fnstenv
sub
pop
test
push
add
shlb
adc
push
mov
cltd
test
inc
pusha
adc
mov
mov
movsl
stc
mov
loope
lods
fstpt
fnsave
cld
sti
jno
dec
dec
leave
jno
inc
mov
fcomi
loope
pushf
add
and
hlt
pop
cmp
lock
jnp
sti
lea
xchg
scas
pop
jo,pn
rcrb
je
shlb
mov
in
js
lods
dec
out
and
adc
jmp
fimull
mov
inc
je
pop
nop
jnp
sbb
pop
adc
icebp
pop
pop
dec
aaa
fsub
inc
xchg
push
jnp
adcl
sbb
mov
ljmp
and
jo
xchg
int
mov
inc
xor
fs
pushf
push
loop
shlb
inc
jmp
inc
or
mov
jnp
cwtl
fwait
add
ljmp
mov
mov
pop
test
sub
mov
scas
mov
mov
cwtl
inc
push
sub
xor
cmp
inc
rclb
cmc
xchg
push
mov
inc
push
mov
movsb
sub
rcr
pop
ds
inc
je
in
or
lahf
mov
adc
leave
icebp
das
sbb
int
jno
mov
mov
and
mov
sub
pop
out
lret
in
in
or
mov
mov
push
fcmovnb
cmpsb
cmp
inc
mov
fstpt
cmpl
adc
adc
inc
adc
fs
out
loop
enter
fistl
dec
xor
fldcw
or
cmp
pop
lret
cltd
xor
arpl
inc
or
adc
push
in
push
test
cmp
sbb
out
jnp
cmp
rcl
addr16
jmp
mov
insb
push
stos
jl
or
lods
push
fldcw
dec
mov
insl
inc
int
sbb
pop
sub
inc
sub
add
sub
sub
popa
popf
mov
mov
outsb
or
jb
push
pop
xorl
in
std
out
mov
cli
hlt
fwait
push
into
cmp
jb
or
cmp
add
pop
cltd
xlat
test
cmp
in
or
or
push
cs
ja
pop
imul
jo
jl
xchg
add
mov
js
shlb
leave
shlb
sub
inc
das
xchg
imul
push
lea
das
je
jne
adc
dec
sub
cmp
std
out
lock
aaa
pushf
push
sbb
cltd
clc
adc
std
fimull
mov
mov
iret
pop
std
test
jg
push
sbb
enter
push
out
shll
cwtl
xchg
jno
ss
pop
or
aaa
push
das
test
into
fadds
lods
pop
lds
xchg
xorb
lahf
bound
and
sbb
jge
or
or
jp
arpl
loope
loop
shl
leave
dec
bound
fwait
adc
popf
fs
fmul
pop
std
arpl
adc
dec
mov
imul
je
lds
outsb
dec
pop
push
stc
inc
ret
dec
mov
dec
and
inc
and
lahf
sahf
xchg
cmp
push
jo
out
or
test
ljmp
push
sub
mov
cmp
push
pop
fs
test
xor
and
movsb
push
enter
pop
cmp
inc
outsb
subb
mov
hlt
sub
sbb
add
es
dec
lahf
repz
adc
stos
test
pop
push
sub
outsl
and
sahf
insl
insl
sbb
insl
imul
call
inc
sub
je
adc
ror
dec
mov
cmp
aad
push
iret
in
fildl
out
mov
push
inc
into
fimull
into
mov
arpl
test
push
repz
mov
mov
test
mov
out
or
mov
lods
aad
push
mov
lods
mov
pop
dec
mov
insb
push
cwtl
mov
inc
push
inc
jge
sahf
mov
gs
bound
mov
test
std
jnp
jb
pop
add
out
and
bound
fwait
mov
cmp
dec
stos
lea
shrb
dec
int3
xchg
xchg
int
insb
mov
test
sbb
add
lods
sub
push
mov
inc
in
mov
inc
mov
jmp
and
lods
or
outsl
add
lock
push
in
xor
sub
xchg
push
adc
mov
sbb
xor
mov
mov
cmp
jb
cld
push
ret
sub
fisubs
mov
lret
sti
inc
sbb
in
cmp
bsr
xor
sbb
inc
ret
mov
aam
lock
imul
xchg
insb
add
inc
js
out
push
pop
ret
jno
or
mov
mov
or
mov
test
mov
repz
push
outsl
fcoms
sub
icebp
lods
xchg
pop
xchg
push
mov
fwait
xchg
cmp
enter
jne
nop
jge
pop
sarb
pop
pop
mov
out
xchg
inc
in
mov
adc
push
iret
loope
out
ret
cmp
movsb
aad
fsubrl
inc
xlat
sahf
lret
mov
sub
testb
fcomps
sbb
fcoms
push
jg
lods
sarb
or
push
add
push
ret
jae
dec
insb
fisttpl
sub
mov
pop
push
rcrb
les
pop
ss
rcrb
xorb
mov
cmpsl
sti
outsl
pushf
push
inc
fsubr
fstl
cmp
sbb
shll
test
inc
shl
sub
jmp
int3
or
cwtl
fiadds
xlat
mov
jecxz
test
aaa
fcmovnu
jge
fdiv
cmp
sub
adc
mov
adc
xor
mov
push
xor
push
cmp
cmp
shr
add
repz
jno
into
dec
das
mov
sti
clc
and
jg
iret
mov
and
mov
std
mov
xchg
pop
mov
cmp
add
jb
push
or
cld
jb
pusha
loope
mov
mov
mov
lds
pop
sbb
out
sti
leave
mov
mov
inc
cmpsb
add
cmovs
out
dec
jns
push
mov
out
ss
testb
mov
dec
shrb
scas
in
cli
fimull
and
or
ja
cmc
xchg
ret
cmp
daa
sbb
out
cli
push
movsl
pop
mov
enter
subb
jle
xor
cmc
iret
lods
cltd
xchg
xor
in
lods
xchg
inc
ljmp
sbb
and
stc
xor
ds
sub
fldcw
pop
mov
inc
arpl
out
cmpsl
xchg
js
popa
jb
pop
ss
pop
in
or
adc
mov
xor
push
enter
lea
roll
hlt
stos
icebp
mov
add
std
inc
dec
mov
xchg
js
cmp
adc
xor
cltd
jp
mov
pop
adc
iret
imul
jnp
lahf
sub
jp
and
int3
push
pop
xor
test
xchg
mov
inc
popf
jmp
lods
or
push
stos
dec
sbbb
outsl
das
jle
aaa
pusha
inc
jge
stos
lcall
mov
pop
sbb
xchg
and
insb
aad
std
out
cli
inc
test
xor
cmpsb
add
outsb
push
sahf
cltd
fdivl
das
push
clc
cmp
mov
arpl
sbb
stos
jmp
pop
call
cmp
lcall
popf
inc
xchg
lods
pop
insb
loop
xchg
jg
enter
cltd
stos
aaa
push
cmpsb
movsl
aam
hlt
jecxz
test
lods
test
cmc
les
rorl
cmc
mov
loop
dec
push
jbe
mov
movsl
loopne
and
lret
dec
xchg
les
or
clc
jge
arpl
jbe
idiv
loop
sbb
adc
aam
sub
sub
stos
inc
ss
pop
push
cmp
movsl
mov
xor
mov
sbb
in
xchg
fdivrl
inc
pop
and
cmpsl
mov
push
push
and
or
sub
loope
dec
xchg
push
pop
xchg
jg
jecxz
ret
cmp
addr16
mov
adc
lods
dec
pusha
mov
imul
insl
sbb
int3
mov
xchg
subb
aad
inc
sub
leave
repnz
jnp
dec
cmp
mov
adcb
lret
into
push
cs
mov
pushf
fnstsw
mov
push
inc
sub
add
cs
bswap
pop
rcr
mov
fcoms
lock
or
sbb
ds
in
and
test
test
push
outsb
jge
mov
jp
movsb
mov
cmp
pop
movsb
clc
lret
lds
insb
xor
out
xchg
hlt
sbb
xor
repz
xchg
sub
cmp
ds
dec
insl
mov
mov
jbe
pop
pushf
out
adc
push
in
xchg
jl
inc
cmp
dec
dec
test
push
pop
int
iret
imul
inc
int
cli
cmpl
push
xchg
je
outsb
or
adc
ja
pop
jbe
mov
inc
cmpsb
cmp
loop
ja
imul
les
mov
inc
cmp
arpl
pop
inc
ljmp
sub
mov
out
nop
test
int3
les
jmp
or
xchg
xchg
or
ds
aam
loope
dec
scas
sub
cmp
out
fists
adc
and
js
pop
dec
nop
push
mov
loopne
xchg
lock
jl
xchg
scas
fmull
and
pop
lock
std
add
sub
std
mov
push
push
add
xchg
les
cld
push
mov
in
xor
lcall
ret
sub
repz
sub
sub
jp
jbe
adcb
cld
in
pop
dec
gs
cmp
jle
bound
hlt
xchg
fisubs
icebp
push
jbe
dec
cmpsb
xchg
rorl
jp
xchg
sar
dec
sub
xchg
or
mov
fcomps
mov
pop
sub
adc
sbb
jl
gs
push
and
aam
mov
xlat
dec
mov
and
pop
cs
int3
pop
push
test
push
arpl
push
ljmp
jp
cmc
inc
jmp
addl
mov
imul
and
leave
and
lea
mov
pop
or
lret
inc
sbb
xchg
add
xchg
push
clc
mov
das
cs
mov
mov
xchg
out
push
adc
data16
lret
cli
outsb
popa
out
or
and
jnp
in
lret
push
mov
shrb
push
imul
cwtl
lcall
dec
xor
add
mov
aas
add
aaa
sbb
mov
cld
xor
in
xor
lahf
movsl
push
clc
mov
lahf
ficomps
cld
frstor
mov
dec
mov
fnstsw
cltd
adc
int3
jl
movsl
dec
or
cld
mov
stos
dec
mov
mov
push
jmp
outsl
sbb
rorb
mov
stc
mov
mov
lcall
push
insl
out
jns
lock
fnstsw
testl
fs
xchg
lods
xor
mov
add
mov
mov
push
test
cs
sub
xchg
xchg
test
jbe
mov
bound
xchg
sub
enter
fidivs
xor
addr16
and
out
enter
jl
adc
add
nop
shrb
sub
mov
jg
lcall
adc
nop
jmp
push
sub
jecxz
adc
sub
into
int3
mov
add
mov
jl
out
sbb
addb
notl
push
inc
rcrb
movsl
aam
outsb
push
adc
fsubrl
jnp
or
push
xor
mov
mov
shl
xor
add
sub
rcl
mov
mov
mov
cld
jne
fwait
cmp
jne
or
mov
cmp
mov
jb
mov
xchg
inc
ja
test
cmp
mov
in
push
icebp
or
push
push
leave
cmpsb
mov
lods
cwtl
fwait
mov
int
dec
dec
pop
outsb
add
subb
or
add
daa
xlat
imul
lods
xor
out
mov
sahf
jb
cmc
sbb
sub
add
cmp
pop
shlb
popl
cltd
pop
mov
add
push
loopne
adc
icebp
and
shlb
push
test
add
mov
add
add
out
imull
pop
pop
icebp
imul
mov
and
adc
subl
xchg
call
fidivs
ds
cmp
fmuls
jb
add
xchg
mov
adc
sarb
push
dec
adc
outsb
xchg
add
ja
jne
sbb
add
imul
inc
fisubl
int
pop
mov
push
jb
or
push
dec
xchg
push
pop
xor
xchg
movsb
stc
orl
mov
sti
jo
sub
sbbb
jp
cmp
jmp
cmpl
fnstcw
cmpsb
cmp
insb
pminub
lret
shlb
xor
mov
addr16
sbb
in
je
lcall
out
cld
xchg
les
or
push
mov
mov
jns
jo
and
xlat
add
pusha
sbb
add
scas
inc
cmp
popf
pop
outsl
jmp
push
jno
movsb
testb
adc
cmp
jns
mov
push
in
pop
scas
inc
pusha
cmp
nop
or
ret
mov
xchg
add
mov
adc
div
in
arpl
push
out
sub
sar
pop
and
out
pop
subb
xlat
aas
push
push
sarl
ret
icebp
or
add
dec
mov
fs
mov
dec
inc
pop
xor
aas
push
cld
in
dec
sbb
mov
scas
lea
fldt
imul
sti
sbb
dec
push
arpl
repnz
dec
cwtl
out
mov
lock
adc
push
dec
mov
aam
mov
cmp
inc
cs
pop
movsl
jge
in
mov
xor
daa
lods
test
mov
push
dec
stos
outsb
push
addb
lods
aam
dec
sbb
xchg
aaa
aas
adc
inc
in
emms
jbe
inc
dec
fstpt
pop
notb
pop
int
and
outsl
aas
nop
and
dec
dec
cmc
adc
sub
jecxz
dec
imul
mov
inc
sub
leave
test
lret
cmpl
outsl
mov
or
sub
into
test
xor
pop
in
idivb
jnp
jnp
shll
lds
inc
ret
hlt
mov
cmp
in
adc
out
cwtl
jnp
notb
mov
adc
subb
xchg
pop
aaa
negl
add
jl
push
sbb
xchg
push
mov
adc
sub
std
shlb
push
imul
leave
and
fidivl
pop
xchg
or
pop
mov
inc
jo
pop
mov
je
sbb
sub
gs
cmp
inc
push
inc
mov
popf
xchg
add
mov
jp
addl
pop
subl
dec
es
pop
cmp
pop
pop
imul
hlt
out
inc
jb
stos
mov
lds
sub
mov
cmp
cld
stos
lds
or
mov
sti
cmp
xorb
dec
mov
or
jnp
out
mov
mov
mov
pop
mov
outsl
xlat
jns
aad
inc
data16
inc
sub
subl
push
icebp
pop
iret
cwtl
jg
test
push
push
xor
lea
jne
stos
pushf
ss
out
and
mov
and
ret
jp
popl
inc
mov
jnp
nop
or
ss
shll
scas
cmpsl
push
dec
movsb
mov
dec
mov
popf
jge
lock
cmp
out
xor
mov
fs
outsl
fisubrs
jnp
adc
sar
rcl
mov
mov
lcall
bswap
rcll
mov
xor
negl
lock
js
dec
or
lods
in
pop
das
insl
leave
cmpsl
rcll
flds
fnstcw
dec
roll
ds
mov
dec
push
xlat
iret
jmp
xchg
cmp
movsl
lods
dec
je
outsb
scas
cmp
jae
mov
adc
xchg
lods
nop
pushf
add
loope
testl
sbb
dec
push
add
mov
lahf
xchg
addb
lds
pop
cmp
mov
inc
sub
out
cmp
cmp
addl
jbe
jb
ds
cmp
dec
xor
aam
and
lds
test
inc
out
mov
cmp
sti
test
adc
xchg
xchg
dec
push
mov
mov
mov
leave
scas
jp
stc
in
jg
xchg
je
js
sarb
and
push
add
jmp
adc
sbb
popf
pop
add
stos
and
add
scas
sub
in
loopne
dec
adc
mov
mov
cwtl
call
lahf
lods
xor
xchg
jecxz
dec
cwtl
mov
out
in
pop
fs
fucom
pop
aaa
push
xor
clc
mov
and
push
outsl
cmp
loope
rcrb
pushf
popa
add
or
je
or
arpl
and
sbb
pop
shl
add
dec
mov
push
ds
add
sbbb
jb
cmp
mov
jg
es
jge
test
pop
adc
je
jo
cmpsb
int3
add
mov
rcrl
push
mov
mov
mov
pop
jb
idivb
mov
scas
sub
pop
xchg
and
test
in
shrb
frstor
cmp
mov
pop
popa
js
imul
icebp
pop
dec
push
add
bound
xorb
fisttps
adc
lock
add
aad
cld
xor
pop
push
movsb
mov
inc
xchg
cmp
cmp
pop
cmpsl
dec
inc
imul
loope
push
imul
sbb
cmp
xchg
adc
imul
jle
mov
test
aas
mov
pop
or
les
aad
sbb
test
add
jae
xchg
cld
and
jmp
sub
pop
arpl
mov
sub
inc
lret
mov
test
lahf
and
fnsave
sbb
aaa
push
push
int3
sub
inc
out
push
adcb
inc
mov
xor
lods
add
dec
sbb
bnd
push
adc
jno
push
sbb
sar
xor
xchg
fsubl
cmc
cs
sbb
addr16
addr16
sub
ficoms
adc
cmp
push
dec
mov
xchg
add
ljmp
xlat
pop
xor
mov
dec
lahf
add
or
pop
push
out
cmc
dec
movsl
arpl
lock
mov
in
add
cmpsb
aaa
aas
mov
in
add
and
mov
xlat
sub
loope
nop
mov
adc
add
jmp
jnp
leave
in
aas
hlt
stos
fistpl
and
out
cmp
sbb
sahf
subb
stc
leave
ret
loopne
rclb
inc
fbld
cld
lds
fucom
pop
imul
xor
filds
xchg
je
pop
push
add
in
enter
outsl
pop
ja
imul
mov
mov
push
jnp
jg
xor
xchg
adc
push
fldenv
push
iret
jne
mov
xchg
test
loop
jmp
rep
sbb
xchg
pop
lods
dec
cmpsl
mov
les
xchg
push
mov
imul
lods
dec
int3
gs
and
cmp
or
inc
or
lods
daa
xor
jmp
jp
fcompl
dec
repz
ds
loope
mov
jb
and
add
mov
jge
cli
in
cwtl
loopne
out
fwait
rcll
fadds
test
xor
loop
inc
outsb
cmp
test
sub
mov
sub
xchg
xchg
das
inc
sbb
lods
push
or
xlat
xchg
cmpb
pop
cld
mov
and
ss
xchg
orl
sub
ljmp
or
hlt
dec
aad
mov
mov
imul
ret
in
shr
adc
push
mov
andb
movb
mov
notb
pop
cmc
push
incl
lods
cs
push
sub
push
nop
aaa
es
sub
lahf
cmp
adc
popa
jno
cmp
mov
inc
notb
and
xchg
mov
lret
add
lret
sub
int
rcrl
xor
cmp
push
lret
pusha
mov
dec
jne
js
xchg
push
lods
fldl
mov
jbe
bound
icebp
dec
mov
sbb
dec
das
or
addl
shrb
int3
xor
dec
sarl
adc
mov
out
test
inc
sbbb
jb
enter
popf
push
lret
in
or
lea
fistpll
adc
shll
je
dec
or
cmp
mov
inc
pop
jne
inc
aas
js
out
imul
lods
shll
pop
dec
ss
fnsave
outsb
aad
js
in
push
pop
stos
dec
jns
outsb
add
imul
xor
arpl
pop
pop
fdivrl
xchg
ret
pop
add
fcompl
and
dec
adc
cmp
lret
push
popa
addr16
and
lods
xor
imulb
or
inc
das
inc
ret
mov
loope
and
aaa
jle
pop
or
std
in
jns
and
movsb
icebp
out
add
mov
push
xor
int
hlt
xor
out
cmpsl
rcrl
lahf
jns
loop
dec
cmc
fs
fsubs
dec
xor
pop
mov
fnsave
and
push
out
repnz
push
jle
aaa
lds
inc
test
cmpsb
mov
rolb
je
mov
iret
sbb
andb
sti
sbb
mov
idivb
pop
mov
imul
stc
jp
rcrb
dec
jns
sbb
ficomps
inc
sbb
or
and
mov
jb
je
cmp
sub
mov
cmpsl
cmpsl
cs
daa
fisttpl
call
inc
call
jns
add
jp,pt
mov
mov
pushf
psrlq
add
ss
lods
repnz
rcll
xor
and
cmp
mov
cmp
and
ret
in
pop
jle
stos
pop
or
std
sbb
xchg
mov
dec
inc
cmpb
and
ss
sbbb
pop
inc
jl
into
rcrb
pusha
lahf
dec
jo
cli
inc
xor
mov
inc
negl
mov
imul
test
push
out
lahf
fldt
fsubrl
mov
mov
ljmp
xor
fiaddl
ficoml
push
popl
sarb
lds
jg
mov
inc
mov
jle
adc
outsl
mov
stos
sub
pop
fisubl
pushf
lret
mull
flds
je
aad
jbe
or
adc
outsl
iret
adc
imul
add
xchg
loope
cmp
cltd
pop
and
xor
ljmp
jmp
dec
xor
outsb
fnsave
jbe
mov
jae
and
pop
xor
or
jnp
shlb
insb
mov
jge
jnp
sahf
cmp
sbb
insb
js
sarl
test
arpl
sahf
mov
cmpsb
or
lret
and
mov
sub
fildl
push
dec
mov
mov
push
dec
arpl
fwait
hlt
lcall
pop
mov
fs
mov
jne
adc
ds
hlt
test
jp
scas
movsb
orb
and
lahf
inc
xor
movsb
xchg
push
imul
notl
jbe
arpl
bound
mov
push
mov
test
ljmp
daa
adc
pop
test
mov
scas
nop
add
push
sub
fcmovne
cmpsb
cli
loop
mov
adc
inc
mov
pop
icebp
mov
cmc
pusha
lds
xchg
jnp
cli
iret
jnp
adc
js
jbe
lods
mov
pop
mov
and
lret
out
mov
xor
in
pop
cmpsl
mov
decb
mov
adc
iret
xchg
mov
jmp
dec
scas
pushf
out
dec
js
rorl
cmp
push
test
push
out
aam
pushf
mov
aas
adc
add
jg
imul
in
mov
pop
push
inc
and
cld
shll
cmc
push
rcrb
push
ja
fcmovbe
shl
push
push
mov
xor
mov
pop
test
movmskps
loopne
pop
jecxz
ret
push
mov
mov
arpl
xchg
cmp
or
dec
jge
dec
sub
mov
mov
cli
fbstp
xor
iret
mov
jp
add
mov
es
or
jno
or
push
xchg
pop
sbb
or
jmp
adc
pusha
addr16
loopne
pop
push
int
sbb
out
cs
ss
inc
lret
in
mov
add
inc
push
fstl
ret
xchg
jns
jo
adc
push
push
mov
cmp
js
pop
xchg
jecxz
xlat
push
dec
add
adc
mov
mov
sbb
mov
jnp
fcoms
fcomip
pushf
pop
rorb
fidivrl
dec
push
mov
aas
fidivrs
dec
sbb
and
jnp
adc
leave
mov
jg
movsb
movsl
in
mov
add
dec
test
dec
addl
popf
sbb
pop
dec
adc
cmp
xchg
frstor
cltd
decb
mov
mov
aam
push
into
sbb
pop
xchg
dec
insb
cli
add
test
daa
psrld
sub
jmp
out
ljmp
cmpsb
jno
jne
test
inc
cmc
stc
fstpt
int
aas
lret
pop
out
xchg
out
xchg
add
je
fimuls
dec
mov
push
inc
sub
sbb
out
mov
jle
xor
add
out
aas
mov
sub
jecxz
pop
scas
jmp
pop
stos
bound
adc
subb
in
enter
mov
call
inc
fisttpl
out
pop
test
push
add
or
rcll
pushf
lret
icebp
pop
das
pop
jecxz
movsb
aad
aas
jb
aaa
pop
je
out
push
jne
dec
les
xchg
stos
jns
sub
cld
filds
shl
nop
lods
push
les
pop
loope
pop
sarl
add
and
inc
js
bound
sbb
popf
gs
aas
pop
rolb
mov
push
rol
add
push
push
sub
xor
or
rcrb
xchg
lock
dec
cmp
push
or
ds
aam
adc
push
dec
push
adc
sub
stos
cwtl
xchg
stc
repnz
ss
stos
adc
insl
cwtl
jmp
xor
das
daa
and
lods
adc
lcall
mov
xor
shl
xchg
push
push
adc
dec
hlt
dec
loopne
fsubs
pop
lcall
mov
push
pop
mov
add
ss
test
fstps
jno
gs
sub
fwait
xor
lcall
shrb
dec
mov
push
insl
mov
mov
inc
imul
adc
mov
cltd
jbe
jg
dec
xchg
lahf
push
sahf
mov
mov
and
jecxz
jno
pop
xlat
cmp
into
sub
push
hlt
negl
hlt
int3
nop
mov
mov
dec
push
pop
push
xchg
ret
std
aas
pop
adc
popf
adc
mov
xchg
cli
mov
cmp
test
rcll
aad
mov
jnp
jns
out
and
jno
and
and
ret
icebp
adc
lret
subl
cmp
mov
add
out
es
sbb
into
cltd
xchg
xor
repnz
in
lea
fwait
or
rolb
or
adc
fstpt
dec
pop
gs
adc
xor
sbb
aaa
int
fsubrl
cwtl
call
jle
aas
mov
push
push
and
xchg
mov
or
sarl
xchg
jns
pop
pop
fnstcw
hlt
cmp
inc
in
mov
test
aam
divl
and
jno
mov
out
inc
lea
inc
or
mov
pop
call
jge
insl
movq
out
mov
scas
mov
jbe
pop
popf
jbe
test
jecxz
cmp
jle,pt
xchg
mov
fbstp
movsl
dec
lea
lds
push
inc
jmp
es
pop
cmpsl
loope
rol
icebp
xchg
loopne
and
test
inc
mov
xchg
shlb
lea
lahf
cmc
push
cmp
in
movsb
sbb
dec
lret
cmc
insl
idiv
sub
cmc
pop
pushf
inc
add
pop
mov
sbb
xor
iret
loope
lods
sub
fisubl
xor
movsl
xchg
mov
ljmp
cmp
mov
cwtl
or
loope
sub
fs
mov
xchg
cmpl
jl
int3
addr16
out
dec
add
mov
mov
lock
cs
inc
test
out
ud1
insl
int
xchg
mov
adc
lret
repz
or
js
enter
lret
mov
or
es
data16
and
xchg
mov
rol
aam
xor
das
lret
jae
adc
aad
iret
mov
ds
mov
mov
sbb
imul
bound
sahf
mull
push
in
in
pop
inc
ss
leave
adc
mov
cmp
jae
shl
addl
sti
int
hlt
gs
hlt
mov
pop
xchg
or
stc
dec
es
es
sbb
imul
lods
jle
aaa
iret
or
or
cld
jno
fnsave
test
xchg
fsts
sbb
ficoms
insl
pop
iret
js
mov
test
pop
loope
popa
rcr
xor
pop
mov
push
lds
int
mov
dec
sbb
repz
sub
jle
jmp
subl
nop
loope
or
pop
cmp
popa
int3
loop
fisubrs
jp
addl
je
mov
fcos
push
mov
xchg
test
or
adc
in
mov
rorl
pop
mov
mov
inc
aaa
pop
rorl
sbb
pop
ds
addr16
mov
out
and
fmull
lea
pop
out
arpl
add
inc
andb
pusha
fwait
sub
ret
dec
and
aad
mov
es
js
fiaddl
imul
pop
mov
pop
mov
popf
into
lahf
popa
cmc
push
jnp
mov
iret
imul
lcall
daa
mov
clc
dec
or
mov
movsb
xchg
or
je
idiv
call
xchg
sti
fiaddl
push
push
sbb
pcmpeqb
movsl
xor
xchg
mov
inc
jmp
cs
and
in
push
xchg
lret
cmp
push
roll
adc
mov
pop
loope
or
lock
loop
repnz
ret
jnp
pop
jo
pop
rcr
fs
es
loop
pusha
push
xor
lahf
xchg
dec
cmp
and
cmp
xchg
neg
fsubrs
negl
cwtl
loopne
ds
xlat
lret
mov
sub
in
insb
pop
xchg
jl
insb
outsl
outsl
aas
push
repz
shrl
sbb
dec
cmpsb
pop
arpl
or
jge
leave
or
sbb
sbb
pop
jne
mov
add
lret
pop
jnp
lods
sti
popa
hlt
icebp
scas
in
xor
shlb
cmp
imul
and
mov
push
rcrb
fwait
adc
cmp
cmc
sbb
xchg
push
movsl
pop
mov
cltd
mov
xchg
bound
add
sbb
enter
push
shrb
adc
or
sub
lock
pusha
outsl
testb
jns
pop
rcrb
mov
clc
test
dec
int3
ficoms
dec
lcall
scas
pop
sub
mov
insb
push
bound
mov
dec
xchg
daa
dec
sub
subb
call
or
mov
push
cmpsb
leave
pop
inc
int3
mov
fcomip
sbb
mov
xchg
adc
pop
imull
testb
out
pop
testb
jle
lret
push
fldenv
js
test
mov
fdivrs
mov
push
fstl
mov
aas
fidivl
pop
pushf
repnz
sub
int
jns
shrb
push
or
cmp
sahf
lahf
sti
aas
and
jo
add
pop
andb
and
loop
cmpsl
inc
in
jns
lods
stc
iret
ret
add
sbb
sbb
mov
xchg
mov
jecxz
mov
push
jno
jbe
mov
xor
jae
adc
or
data16
sub
out
jbe
daa
jp
jge
fldenv
xor
sbb
sbb
sarb
test
out
mov
out
xlat
xor
dec
add
mov
out
cld
xor
enter
xor
or
inc
clc
aad
cmp
je
cs
pop
movsl
lods
mov
imul
je
jl
xlat
outsb
orb
cmpsb
jno
inc
enter
push
out
dec
xchg
and
iret
aad
mov
jbe
jmp
ja
imul
push
xor
push
pusha
push
ret
and
pushf
push
ds
fnsave
jge
xchg
fidivrs
sbb
sub
imul
cwtl
outsl
xor
add
lds
add
lcall
cmp
insl
lcall
add
mov
pop
add
ret
mov
adc
mov
xchg
fwait
aam
mov
movsb
push
pop
les
pop
dec
dec
mov
repnz
out
aas
cltd
call
jbe
loope
jmp
cmpsl
incb
xor
jmp
push
loope
pop
push
repnz
loopne
repnz
push
mov
jne
sbb
push
mov
test
movsb
cltd
mov
jmp
rolb
sub
or
testb
mov
xor
mov
dec
into
cmc
dec
mov
xchg
into
sahf
pop
lret
mov
aam
mov
cmp
test
cmp
fs
aas
je
outsl
xor
and
lods
sbb
xchg
adc
pusha
imul
mov
xor
cmp
rcrl
and
fs
jmp
xchg
pop
adc
fcoml
add
push
shrb
mov
mov
cmp
in
stos
fcoml
fildll
sbb
cmp
sub
xor
push
imulb
sti
stc
iret
and
push
int
xor
push
sub
loopne
adc
pop
int3
and
mov
pop
pop
out
pop
sub
cmp
jno
jae
ss
int3
sahf
mov
pop
ljmp
popf
add
inc
ret
or
push
ds
aad
rorb
add
push
scas
int3
ljmp
jbe
pop
or
es
dec
je
in
inc
or
push
lea
icebp
inc
jp
adc
lret
subl
sub
mov
imul
cmp
or
xchg
dec
hlt
mov
sbb
push
lock
enter
xchg
cmpsb
test
sub
scas
rolb
cmp
dec
pop
pop
movsb
outsb
mov
ljmp
push
rcl
int
and
add
dec
sub
orl
push
adc
push
dec
add
in
and
xor
mov
jle
dec
mov
push
sub
outsl
mov
movsb
jecxz
mov
or
cwtl
mov
push
or
sbb
mov
scas
cmp
int
out
fisttpl
les
cltd
push
jle
inc
add
cwtl
out
ja
mov
push
cmp
jle
sbb
cmc
sbb
bnd
or
lods
push
cld
sub
add
sbb
jmp
jg
push
pusha
std
dec
jle
xchg
cmp
pushl
fxch
rol
or
jns
mov
lcall
imul
and
and
popf
ss
or
or
jno
or
ret
ds
int3
sbb
xor
rep
in
loopne
add
popf
leave
leave
sub
jb
repz
shlb
outsl
in
push
ret
mov
mov
outsl
xchg
in
repnz
adc
xchg
or
sar
push
xlat
out
inc
sbb
or
sub
dec
ret
ljmp
cmp
loope
scas
xchg
inc
sbb
adc
and
inc
cmc
sbb
sbb
jae
push
pop
std
jo
jbe
es
shrl
inc
aad
xlat
push
mov
icebp
jae
dec
into
push
pop
cmp
sbb
fcmovnb
mov
repz
lret
cmpsl
jnp
into
insb
shrb
mov
mov
rolb
movsb
mov
loope
iret
movsb
xchg
xor
cmp
pop
mov
inc
and
insl
out
inc
sbb
dec
clc
insl
push
sahf
or
sahf
sarb
adcl
jecxz
mov
icebp
leave
cmp
inc
sub
fbstp
cli
inc
shr
jnp
bound
or
cmp
repnz
pop
push
popf
push
pop
mov
xor
fcomip
mov
pop
xlat
add
aaa
ret
sbb
add
dec
push
xchg
shlb
loopne
push
decb
xor
and
dec
xor
mov
jns
dec
jmp
pushf
mov
pop
int3
in
fnstsw
arpl
popf
xor
fwait
jo
fimull
ja
ljmp
push
mov
call
lock
dec
imul
push
add
cmpsb
aas
or
enter
cmp
enter
jne
mov
push
mov
add
nop
ficomps
and
push
jne
ja
aas
and
inc
mov
ret
pushf
adc
push
xchg
sub
jge
movsl
pushf
xor
xchg
xor
fwait
dec
adc
bt
dec
sbb
and
nop
mov
add
push
mov
bnd
nop
loope
pop
mov
stc
pop
ret
xlat
int3
test
out
sbb
shlb
not
je
and
pmuludq
faddl
dec
mov
push
and
ret
popa
lahf
jnp
cwtl
shl
arpl
or
mov
ss
pop
inc
dec
decb
push
jg
rclb
shl
xchg
xlat
mov
mov
mov
ds
xlat
or
test
mov
or
jbe
loope
xchg
stos
and
int
sahf
and
jl
jecxz
clc
mov
ret
push
in
ljmp
and
test
lds
mov
mov
lret
fcomp
xor
add
adc
shlb
rorl
pop
adc
xor
mov
out
dec
out
cmpb
jo
das
and
lock
mov
lcall
cmpsb
push
int3
jbe
jle
sbb
mov
insl
das
xor
outsl
mov
mov
add
pop
xchg
scas
mov
lds
aas
adc
mov
push
adc
repz
orl
fmul
jnp
jnp
hlt
sbb
mov
arpl
push
sbb
cmp
enter
addr16
lea
sub
jle
mov
mov
sti
ljmp
sub
push
mov
pop
jb
fiaddl
or
jbe
pop
push
dec
adc
push
mov
int3
xor
cmc
mov
add
call
fsubrs
push
push
aad
mov
mov
sub
cmp
es
cwtl
push
jg
jo
jle
cld
mov
insl
addl
outsl
dec
jl
ljmp
bswap
movsl
fistps
xor
mov
dec
pop
pop
loope
pop
pop
add
xchg
into
mov
popl
clc
je
sbb
adc
fwait
push
sbb
test
cmp
popa
or
ljmp
push
pop
out
popa
icebp
icebp
gs
repnz
cmp
aad
insb
xor
fcompl
mov
dec
push
xchg
cmp
xchg
sbb
sbb
sub
pop
fisubl
jmp
add
dec
inc
dec
mov
jecxz
fs
loop
jmp
rorb
jle
or
ss
mov
pop
mov
imul
add
and
sub
inc
mov
add
stos
mov
push
jecxz
jns
mov
jg
lcall
cmp
les
aad
add
ret
mov
outsb
ret
aaa
lcall
sub
push
jle
leave
jne
xchg
or
adc
cmp
fwait
pop
bound
xchg
sbb
leave
mov
xchg
add
sbb
push
adc
inc
psubd
test
movsb
insb
xchg
add
subps
adc
cmp
lret
pop
sub
enter
sti
pop
mov
les
pushf
into
sarb
lcall
or
pop
cmpl
arpl
mov
stc
jge
pushf
pop
addr16
cmp
mov
sub
hlt
jp
inc
call
pusha
mov
jne
jp
fsubr
mov
sub
lds
push
xor
sub
and
ljmp
jp
repnz
jns
mov
dec
addr16
loope
mov
mov
jbe
jno
add
addr16
or
dec
xor
bound
jnp
dec
imul
ret
mov
nop
repnz
pop
push
popf
lret
and
mov
xor
dec
dec
sub
nop
mov
sbb
inc
ds
gs
idiv
pusha
mov
or
insb
fwait
lahf
push
mov
push
adc
cmp
daa
pop
movsl
mov
aas
es
sub
pop
popa
fists
pop
sahf
out
mov
in
movsb
rol
imul
jae
pushl
rorb
loope
pop
loope
lret
push
mov
mov
push
mov
xlat
sbb
sub
push
shll
cmc
jge
outsl
out
stos
test
dec
adc
xchg
iret
sbb
out
and
push
push
jmp
cltd
xchg
push
jmp
inc
add
pop
test
or
movsl
ss
jnp
jmp
sub
sti
mov
cs
js
hlt
push
jbe
hlt
mov
mov
mov
mov
mov
push
sbb
adc
sets
mov
repnz
inc
cmpsl
and
test
rol
mov
dec
rcl
xlat
test
inc
mov
and
jge
mov
push
pop
out
mull
fldt
pop
jbe
pop
fucomi
xor
push
mov
imul
movsb
inc
sbb
mov
nop
dec
mov
cmp
das
add
movsl
cmp
xchg
or
addr16
pushf
inc
sub
loope
jmp
push
test
xchg
xchg
mov
or
jno
mov
call
xlat
ss
loope
mov
enter
pop
hlt
cwtl
lret
arpl
outsl
js
inc
lods
push
pop
jp
cmp
repz
popf
nop
push
inc
push
jbe
popa
movsl
cli
pop
stos
gs
fsubl
insb
sarl
cmpsl
push
sahf
movsl
xor
xchg
and
mov
sub
adc
std
jg
mov
sub
ss
dec
xchg
in
mull
cwtl
and
nop
ss
dec
xor
and
adc
and
dec
adc
mov
mov
sub
es
and
cmpsb
cmpsb
imul
xor
or
dec
lods
sub
xchg
and
ljmp
mov
aam
ljmp
inc
mov
in
clc
dec
mov
mov
not
test
test
andl
dec
lcall
leave
mov
sbb
test
push
cmc
jle
mov
jae
je
xlat
nop
sbb
jns
out
in
scas
out
xor
xor
pop
xor
push
filds
stc
add
and
pop
jno
mov
shll
and
dec
adc
fadds
jl
ret
sbb
xlat
sub
inc
loopne
call
addr16
lea
mov
orb
cmc
cs
and
rorb
xchg
xchg
loope,pn
jo
stos
jl
pop
add
and
adc
or
mov
scas
add
mov
xchg
in
push
cmp
or
test
es
jge
repz
bound
pop
push
jae
xchg
inc
dec
mov
mov
or
push
pop
jno
jne
inc
pop
sub
xor
sub
push
xor
xchg
xchg
mov
arpl
xchg
sbb
push
and
push
call
dec
mov
add
int
aaa
loopne
icebp
mov
inc
in
push
push
popf
cmpsl
push
dec
aad
in
lret
test
mov
pop
ret
mov
test
cwtl
cmpsl
jecxz
aas
sub
mov
testb
jge
and
push
cltd
in
adc
adc
imul
sub
jmp
pop
in
std
push
lock
jno
scas
cli
and
adc
or
bound
rorl
xor
out
mov
hlt
xlat
repnz
loope
mov
mov
or
je
pop
inc
mov
test
sub
out
jne
lds
or
imul
pop
or
adc
loope
fsubp
cld
outsb
call
rorb
popf
bound
pop
mov
enter
movsl
popa
jg
xchg
xor
xor
lea
cmp
fbld
mov
jae
into
sti
inc
push
push
mov
imul
push
rolb
sub
or
out
out
je
pop
pop
mov
aaa
xor
inc
lea
pushf
lods
mov
xor
ret
dec
inc
xor
inc
rcll
mov
aam
mov
outsb
push
jg
jno
int
cmpsb
xchg
lods
gs
mov
mov
nop
jbe
scas
das
lods
pop
scas
fists
mov
push
pop
ss
and
fisttpll
sbbl
mov
inc
aad
pop
lahf
sub
push
xlat
jne
jp
gs
mov
popa
test
or
adc
jl
and
aad
xor
lock
aaa
xchg
push
mov
icebp
ficoml
lahf
imul
aad
xor
xor
sub
sbb
out
jp
push
mov
sub
cltd
addr16
jmp
mov
cmp
int3
shlb
mov
popa
cltd
sbb
xor
and
jo
jne
xchg
lret
xchg
or
movsl
sub
stos
in
icebp
add
jg
push
adcl
das
jnp
mov
push
push
sbbb
adc
nop
push
mov
and
test
push
adc
jg
push
addr16
jmp
mov
aad
or
imul
cmp
xor
cmp
cmp
sbb
repnz
or
loope
sbb
outsb
jmp
cs
popf
mov
jbe
add
test
push
loope
xchg
aaa
out
push
jg
fsts
shlb
aas
mov
add
mov
mov
fs
mov
and
pop
xchg
inc
sub
pop
and
mov
xchg
ficompl
clc
mov
mov
xor
daa
sub
xor
inc
add
ss
into
mov
push
je
push
outsl
and
add
movsb
fsubrl
in
das
mov
jns
les
mov
sub
and
pop
sbb
adc
js
out
cmp
inc
jns
adcb
mov
pop
cmp
dec
mov
ret
in
pop
stos
popf
addr16
into
or
mov
es
mov
int3
loopne
xchg
aas
mov
or
jno
push
sub
and
lods
fldenv
push
xchg
loope
stos
adc
inc
scas
add
shl
les
mov
adcb
and
ds
stc
cmpsb
cmp
jnp
aas
fmul
dec
sbb
mov
les
aam
adc
or
cmc
inc
lret
adc
lds
sbb
mov
fwait
push
lock
ss
or
dec
dec
or
lods
ss
lcall
dec
rcr
lea
pop
sti
xchg
mov
push
mov
xor
push
jbe
pop
inc
inc
negb
lret
cli
in
test
loop
test
lods
ret
jb
cmp
imul
mov
mov
jb
in
std
dec
lods
push
insl
data16
pop
mov
sub
mov
cmp
fildll
sub
jno
rorl
mov
insl
mov
mov
lcall
outsl
repnz
ljmp
fisubl
or
int3
imul
inc
out
inc
aam
adc
jecxz
in
enter
push
xor
cli
cmp
xor
jnp
lcall
je
std
fsubrl
add
stos
popa
xor
pop
inc
repnz
and
and
cmp
fiadds
xchg
and
cwtl
push
jo
xor
imul
push
dec
mov
push
test
dec
add
mov
push
add
iret
out
dec
cmp
sbb
pop
push
and
clc
loope
iret
cmp
sub
pop
arpl
movsl
add
mov
inc
cltd
pushl
sub
xchg
repz
bound
add
mov
pop
jmp
sbb
ret
xor
add
jg
mov
mov
outsl
push
out
mov
sub
or
ss
xchg
frstor
xchg
aaa
xlat
loope
cmp
sti
mov
aas
cmp
and
or
and
push
movsl
mov
push
xor
rorl
sahf
push
movsl
test
test
insb
xchg
data16
xchg
loop
les
es
jbe
inc
push
ficoms
xor
push
or
insl
leave
je
or
or
test
rorl
fsubl
loopne
xor
xchg
xchg
leave
mov
mov
aad
je
test
xor
mov
dec
mov
mov
fisttpll
adc
cmp
ja
xor
mov
dec
movsl
repnz
nop
push
fmull
push
enter
jo
pop
sti
fsubs
gs
lock
inc
test
call
aaa
fwait
xor
sbb
jnp
add
inc
rcrl
movsl
inc
ss
loope
add
addr16
subb
pop
aam
in
mov
nop
mov
mov
lret
adc
mov
ja
dec
fisttps
pop
movsb
xor
rclb
repnz
sbb
idivl
sbb
cli
xchg
jo
sub
adcl
pop
xor
cmp
jmp
lods
ja
jge
dec
jae
filds
jmp
fcomp
lahf
adc
jge
repnz
int3
inc
cmpsb
cmp
rcl
sub
mov
or
mov
sahf
popf
outsl
xor
push
push
xchg
jb
jmp
imul
cltd
xchg
arpl
xchg
aam
imul
sbb
cli
add
and
add
es
jbe
jl
and
dec
add
fwait
dec
scas
xor
mov
mov
jmp
shrl
inc
fisubs
sti
and
or
add
and
dec
jmp
inc
lea
sarb
clc
mov
imul
out
cmp
cmpsb
test
in
or
mov
iret
xchg
dec
add
mov
repz
popf
das
pop
aaa
ljmp
xor
pop
es
repnz
cmp
fstl
ss
repz
jno
rcl
adc
lea
pushf
hlt
in
xor
jns
in
mov
pop
mov
pop
mov
rcr
mov
pop
and
cwtl
push
out
repz
xor
jecxz
sbb
icebp
pop
ret
dec
loop
mov
push
or
lahf
mov
adcl
insb
pop
outsb
xchg
popa
dec
into
xor
dec
cli
push
push
bound
out
mov
cltd
jo
xchg
add
sub
cmp
inc
pushf
pop
fisubrl
scas
jns
lds
inc
cmp
repnz
jg
icebp
fcmovb
mov
pop
pushf
test
jns
testb
cmc
movsl
mov
dec
iret
insl
lods
mov
cwtl
sti
pop
in
xor
cmpsl
lcall
out
sub
jg
cli
jle
mov
lret
mov
inc
and
mov
sub
sub
and
jb,pn
xorb
jno
int3
call
imul
dec
in
fs
xchg
lds
push
xchg
mov
sti
adc
or
test
pop
jecxz
rep
bound
ret
das
popf
imul
sbb
sub
jg
fs
sbb
aas
inc
inc
mov
fstl
rcl
out
or
pushl
mov
stos
lret
jns
or
or
xor
xorl
xchg
lods
pop
bswap
jge
repz
int
pop
or
sbb
cmc
out
push
pusha
jmp
mov
mov
mov
push
mov
shlb
add
aas
aam
stos
inc
mov
pop
sub
loopne
mov
jo
pop
mov
lahf
dec
dec
mov
movhlps
and
lds
or
adc
lret
jecxz
xchg
stos
mov
and
and
mov
push
test
aas
push
imulb
cmpsb
pop
inc
scas
mov
cmp
lods
inc
and
dec
stc
pop
cmp
inc
fldenv
inc
inc
mov
or
mov
leave
pop
std
stos
inc
inc
pop
pop
fs
in
fstpl
jnp
ds
test
imul
jo
jg
movsb
cmp
push
push
xchg
cli
pop
push
xchg
and
add
loopne
arpl
hlt
mov
int
dec
jbe
mov
icebp
sub
xchg
dec
test
mov
fwait
call
or
xor
xor
dec
mov
imul
adc
hlt
outsb
xchg
jmp
jbe
add
xchg
sti
inc
test
and
and
ret
mov
rclb
pop
cmpsl
scas
jnp
gs
xor
pushf
xchg
xlat
mov
inc
andl
andb
mov
add
lock
inc
loopne
call
shrl
int
ljmp
mov
push
lret
cld
inc
inc
pop
sub
loop
loopne
push
mov
test
int3
or
subb
jecxz
data16
bound
jmp
push
inc
ss
stos
sbb
adc
xchg
lret
ss
cld
or
test
add
pushf
outsb
aad
call
inc
rorl
out
jns
ds
cmp
sub
pop
sub
pop
fdivl
std
xchg
aaa
int3
and
inc
shr
testb
mov
and
testl
fstpl
fxch
sahf
adc
jg
data16
jg
hlt
ljmp
mov
fucomip
outsb
in
sahf
push
imul
stos
fcoms
sub
outsb
xchg
dec
ret
adc
inc
inc
aaa
push
and
stos
xchg
sbb
pop
jne
scas
or
leave
jns
fisttps
pop
mov
aad
pandn
fs
in
or
mov
fsts
or
jge
mov
repz
mov
pop
cmp
divl
outsb
lret
imul
mov
adc
int
int
aad
mov
mov
inc
adc
or
fs
push
pop
sub
xchg
cld
pop
popa
inc
inc
aas
hlt
insl
aas
xchg
sbb
jno
pop
dec
fnstsw
lcall
mov
lds
testl
lss
pop
fidivs
cmp
mov
cmp
xchg
out
std
fnstcw
xchg
les
rcrl
adc
mov
lock
lahf
int3
mov
inc
mov
sarl
jle
mov
test
xchg
mov
sbb
ljmp
insl
je
pop
jl,pt
cmp
cltd
add
inc
les
cmp
xchg
stc
out
arpl
and
pusha
push
push
fs
imull
rolb
movsl
adc
fs
test
hlt
adc
iret
cmp
push
hlt
lods
das
jae
mov
adc
daa
inc
in
jb
pop
mov
aas
jae
adc
sahf
das
mov
int3
inc
bsf
aad
pop
into
inc
aaa
in
cli
xchg
sbb
mov
jmp
sub
lret
lock
mov
jmp
in
inc
push
call
jl
fwait
mov
jbe
pop
rcrb
mov
lock
shl
cmpsl
les
pop
add
clc
rol
push
mov
cmpsb
push
adc
lds
mov
test
sbb
addr16
stos
cmp
jg
jno
sti
and
jle
add
in
pop
arpl
insb
in
inc
adc
sarl
nop
int
dec
scas
pop
cmp
imul
mov
dec
lods
cli
xchg
add
insb
fsubs
inc
jnp
xor
sub
and
mov
pop
das
sbb
and
mov
pop
mov
insb
dec
dec
jbe
mov
add
out
mov
xor
mov
xor
cs
adc
inc
fisubrl
jns
mov
fisttpl
or
jae
cmp
stos
mov
out
mov
sub
fidivl
push
sbb
inc
movsb
sbb
enter
dec
sub
push
mov
lods
jbe
jnp
or
pop
in
xchg
mov
mov
mov
stc
xor
cmc
mov
hlt
daa
push
insl
adc
jmp
fs
das
sub
int
mov
sub
in
imul
ret
jp
lcall
seta
and
inc
inc
push
cmp
aas
jo
xchg
std
adc
ficoms
push
mov
and
jns
imul
mov
stos
and
and
sub
or
xchg
and
aaa
pop
mov
data16
ss
pop
and
inc
mov
insl
lahf
aad
cli
sub
pop
insl
sub
push
dec
xor
scas
add
nop
int3
sub
nop
and
and
push
ss
xor
push
adc
and
hlt
cltd
je
add
popl
jp
and
xchg
rcrl
pop
mov
adc
test
into
clc
pop
or
push
data16
std
jmp
sbb
shrl
mov
loope
icebp
mov
mov
into
jo
jno
adc
loopne
jns
mov
mov
pop
push
loop
dec
mov
xchg
nop
test
xchg
xorl
cmp
or
lods
enter
or
divb
testl
int3
loope
add
js
mov
stos
xor
ret
push
mov
pop
daa
jns
in
je
or
xor
mov
stos
repz
push
jno
adc
pop
subb
in
sub
bound
sahf
pop
pop
and
jmp
lods
lea
ss
or
jne
mov
xor
dec
push
dec
movsl
sub
or
pop
lock
or
add
sbb
fld
into
cmp
xchg
sbb
mov
adc
stos
sahf
mov
outsl
in
mov
aaa
rcr
cltd
lods
adc
xchg
ds
mov
pop
push
out
pop
pop
push
mov
lahf
hlt
cltd
arpl
outsb
jmp
lods
adc
scas
push
mov
dec
jnp
arpl
mov
mov
adc
insl
cmp
inc
in
sahf
popf
call
cmp
push
or
ljmp
adc
loopne
push
inc
cmp
adc
cmpsb
ljmp
jbe
push
sarb
cld
cld
mov
cmc
jmp
adc
in
movsl
movsl
sbb
sub
cmp
outsb
cmp
mulb
repz
hlt
sbb
sub
push
outsb
filds
mov
pusha
pop
jecxz
inc
inc
adc
enter
cs
icebp
out
ret
jg
mov
je
pop
dec
std
adc
pop
outsl
imul
pop
mov
scas
pop
loop
fsub
dec
pop
iret
mov
pusha
mov
inc
je
sbb
dec
sarl
and
jnp
mov
jmp
pop
ret
mov
xchg
xchg
lea
int
hlt
mov
cmp
adc
aas
js
popf
sbb
pop
mov
jbe
or
and
mov
add
lret
jns
shll
popf
nop
movsl
das
xchg
xchg
pop
add
inc
nop
adc
lea
inc
mov
loopnew
lahf
add
push
negl
into
jb
mov
add
jne
ds
into
fildl
mov
push
mov
in
cmp
das
push
jmp
push
aas
rclb
xchg
dec
or
push
out
cli
hlt
xor
cltd
int
mov
or
cmp
xor
xchg
int3
jns
inc
in
decb
push
mov
sarb
testb
lcall
pop
ret
addr16
stos
jp
mov
push
sbb
ret
insb
paddsw
jno
iret
mov
call
popa
dec
test
sub
cld
inc
lahf
jae
pop
xchg
mov
call
sub
cmp
nop
addr16
mov
sbb
gs
arpl
cmp
fnstcw
int3
lcall
sahf
push
test
ds
inc
fwait
mov
add
xor
pushf
push
lods
arpl
stos
cmc
ljmp
inc
inc
xor
mov
cmc
insb
xchg
enter
repnz
aam
mov
sbb
and
jb
mov
cmpsb
xchg
popf
xchg
cwtl
or
inc
pop
inc
rcrl
gs
mov
push
fcompl
pop
dec
shll
movsl
and
rcr
dec
mov
pop
and
ror
push
jle
in
fstpl
pop
xchg
xor
lret
push
or
aam
gs
fisttpll
mov
xchg
xchg
push
std
aas
mov
fnstcw
cmp
inc
sbb
xchg
stos
imull
jo
dec
loope
or
add
adc
imul
mov
push
sbb
or
sbb
arpl
daa
out
dec
rorb
push
xchg
sbb
aaa
mov
loope
xor
mov
push
jp
jmp
and
and
sub
inc
imul
jo
cmp
and
test
sub
fsubp
popf
subb
mov
rcll
lods
cmpsl
mov
jecxz
sbb
loope
push
adc
in
sbb
not
pop
mov
popf
andb
das
dec
int
enter
imul
dec
lds
pop
pop
inc
push
cmp
adc
pop
in
dec
out
xor
xchg
sarb
cmp
xchg
lcall
cwtl
sbb
mov
xor
xor
cmp
mov
pop
rcrb
arpl
fxch
scas
leave
addl
or
and
xor
jl
pop
inc
fidivrl
fiadds
fisubrs
inc
sub
movsb
jnp
jge
shlb
int
ss
push
adc
js
aas
inc
repnz
out
pop
jae
push
aas
or
test
and
push
push
imul
ds
jp
cs
mov
xlat
push
mov
add
mov
mov
in
mov
fiadds
sub
sbb
cli
test
cmp
daa
rorb
aad
adc
xchg
je
insl
sar
arpl
leave
out
mov
or
fstl
addr16
out
push
sub
mov
jmp
inc
lret
dec
xchg
mov
push
sbb
les
adc
jno
jmp
call
xchg
icebp
inc
xlat
popf
imul
bound
repnz
scas
icebp
outsb
fadds
lcall
inc
pusha
insl
pop
and
mov
add
test
lods
repnz
jp
jle
jp
mov
lret
or
mov
inc
or
ljmp
movsb
fcomps
adc
scas
cmpsb
mov
jmp
stos
jne
rcll
or
fiadds
fmul
jns
adcl
xchg
fwait
ss
sub
sub
int
in
mov
fistpl
mov
xor
out
mov
rcrb
jp
sbb
into
sub
push
ret
rclb
push
in
js
inc
jge
testb
sbb
xchg
dec
push
jmp
inc
jns
outsl
mov
movsl
ret
mov
mulb
fstps
jl
add
push
push
dec
or
aas
data16
jmp
push
ja
xor
mov
sahf
xchg
jnp
stos
cmp
jbe
stc
out
inc
leave
xchg
ja
and
cmc
xchg
push
sbb
push
sbb
out
and
or
repz
inc
inc
and
or
inc
push
jbe
out
mov
rcll
imul
mov
in
mov
and
adc
and
dec
mov
dec
fsubl
pop
cmp
pop
push
cmpsb
xchg
insb
lahf
in
popa
mov
pop
or
arpl
mov
or
push
xlat
pop
add
mov
out
in
lods
inc
add
icebp
push
mul
pop
daa
push
iret
sub
inc
les
shl
sub
loop
fisttpl
test
cs
inc
mov
fdiv
xchg
mov
cli
xor
fisttpl
lods
test
lock
push
inc
outsl
inc
xchg
adc
daa
out
xchg
mov
pushf
ret
mov
in
sbb
addl
mov
fsub
test
shll
sbb
push
lahf
or
cmpsb
dec
inc
lret
adc
xor
jp
sub
and
jle
dec
movl
divb
mov
mov
loopne
xor
inc
icebp
stos
xor
jmp
xchg
sti
xchg
fwait
mov
pop
xor
push
in
shlb
and
push
push
and
add
adc
icebp
dec
mov
push
mov
dec
adc
mov
pop
adc
gs
lea
sub
addr16
or
jo
aaa
ljmp
mov
or
pop
fsubrs
or
fiadds
icebp
ja
dec
testl
sbb
xchg
adcb
cmp
and
rcrl
repnz
je
cmovne
adc
imul
mov
pop
sub
das
cmc
push
or
or
wrmsr
cli
fcomp
in
cmp
add
dec
or
xchg
xchg
pushf
jge
mov
and
and
js
jne
mov
into
and
fcomps
jnp
push
cltd
out
data16
in
and
out
aad
stos
test
push
and
fsubr
in
or
pop
repnz
out
inc
or
sti
cmpsb
test
mov
jmp
aad
add
cmc
mov
les
jg
xor
push
lret
cmp
xor
scas
into
add
incl
sub
sbb
push
mov
mov
inc
push
mov
pop
xchg
adc
fildl
mov
cmp
stos
mov
mov
push
es
ja
mov
scas
insl
jae
or
into
mov
fdivrs
mov
mov
je
inc
jne
aas
shlb
mov
fs
shr
sarb
push
push
inc
push
mulb
xor
addl
lret
dec
jle
dec
enter
movsb
push
inc
test
adc
lods
add
out
int3
pusha
in
pop
xchg
inc
xor
insl
fs
adc
adc
xchg
in
testb
or
mov
out
fwait
mov
clc
dec
pop
sbb
cmp
jo
cmp
iret
aaa
sub
fadds
sub
dec
outsb
pop
inc
sbb
mov
movsl
mov
sub
sbb
or
sar
repnz
ja
xchg
lods
test
out
mov
out
push
xor
outsl
mov
add
sahf
xchg
adc
int3
xchg
sub
out
or
insl
push
dec
push
inc
aaa
pop
sub
dec
sub
add
arpl
hlt
loop
push
xorb
out
pop
loop
sti
test
jge
sub
scas
push
push
lods
loop
mov
lret
xor
dec
js
add
jge
dec
das
in
es
jae
xchg
cmp
scas
out
aad
mov
out
push
mov
sub
clc
lea
cmp
mov
pop
jnp
scas
shrb
int
jle
stos
cmpsl
and
cmp
in
loop
xchg
out
pop
cmp
push
add
add
movsl
test
sarl
lds
mov
xorl
idivl
jns
loopne
les
insb
lods
jl
sbb
xchg
fucomip
jg
ja
xchg
adc
xor
repnz
enterw
cwtl
xchg
adc
inc
mov
mov
daa
sbb
adc
xchg
push
out
cmp
les
xchg
add
in
cmp
cmp
fs
lcall
jbe
ja
clc
sub
cmp
das
in
inc
dec
js
push
push
or
and
fisubrs
pop
mov
xchg
pop
and
scas
icebp
mov
dec
push
mov
loope
mov
int3
jmp
mov
outsl
cwtl
out
scas
pop
lcall
inc
mov
es
repnz
mov
and
repz
clc
xor
lods
mov
fdivs
add
pushf
or
cmpsl
lahf
test
movq
xchg
lods
jle
dec
adc
mov
push
jmp
mov
mov
jmp
dec
div
jmp
cli
push
dec
nop
out
pop
mov
jno
sbb
cmp
xor
push
add
cld
cmc
sub
pushf
cmc
xor
mov
ficompl
sbb
hlt
xchg
mov
xchg
mov
fisttps
sahf
cmpsb
add
aaa
fisubrs
and
insl
leave
int
and
sbb
dec
scas
inc
imul
or
jl
pop
inc
mov
popfw
cld
clc
lahf
sbb
dec
in
ja
and
lods
sarb
cmp
dec
add
rcrl
mov
lods
mov
pop
fisubrs
insl
ret
push
sti
out
rcl
pushf
sbb
shrb
push
cmp
push
sarl
out
in
add
mov
pop
or
mov
scas
aad
mov
shl
mov
adc
push
jg
xor
jno
adc
mov
cmpsl
loopne
adc
lret
mov
aas
aad
dec
jno
ret
cwtl
jne
push
xor
aas
jbe
jae
push
enter
add
xchg
out
pop
sub
jb
nop
xor
mov
dec
jo
jae
fdivs
sahf
adc
lods
lds
mov
in
and
pop
bound
cld
inc
xchg
rolb
add
push
aam
cmp
add
mov
gs
sti
cld
sbb
adc
jg
iret
aam
and
aad
icebp
scas
push
shrl
adc
pop
es
push
jg
mov
xchg
adc
in
negl
rorb
lea
dec
pop
add
pop
jbe
lret
aad
aam
in
push
push
or
mov
add
lea
ds
fcoms
fcmovnu
pusha
cs
out
mov
idivl
jg
sbb
jbe
scas
aas
adc
dec
pop
xor
adc
cs
loopne
adc
cmp
xchg
lcall
in
popf
stc
cs
flds
jb
cld
xchg
test
mov
insb
lds
sbb
xchg
outsl
dec
mov
add
sbb
rolb
inc
andl
jne,pt
imul
leave
sub
sub
push
dec
mov
dec
mov
jge
lock
leave
stc
aad
loopne
sbb
adc
xlat
mov
in
adcb
dec
fidivl
out
push
pop
fsubs
adc
sbb
mov
xor
ret
les
ds
push
movb
mov
icebp
ret
imul
stc
jmp
outsb
jno
fisttpll
pop
push
das
call
pop
faddl
or
jmp
imul
sub
jmp
add
lret
push
in
mov
cmpl
inc
mov
loope
and
popl
xchg
in
or
lcall
popa
lret
sub
push
and
lea
test
clc
xchg
jp
cmp
add
bound
xor
cmp
inc
addb
dec
enter
pop
and
in
mov
stc
je
pop
mov
les
or
mov
test
jns
stos
xchg
fldcw
cmp
std
push
pop
sbb
or
iret
fsubl
stc
cmpsb
pop
mov
pop
dec
xchg
xor
lret
popa
imul
dec
ret
icebp
mov
ret
sti
jno
repnz
sbb
push
pop
push
inc
movsl
jne
cli
inc
shlb
push
xchg
cmp
xchg
xchg
add
pop
xor
push
push
adc
je
stos
inc
fcmovnbe
jge
sub
loop
push
push
xchg
and
imul
movsl
loope
lcall
push
and
jae
movl
sub
mov
jb
dec
iret
push
in
jne
pop
inc
lds
sub
mov
jmp
jo
push
inc
mov
dec
fs
clc
test
xor
inc
addr16
in
pop
negl
shlb
sub
in
dec
inc
data16
cmp
icebp
shlb
dec
outsl
xlat
xchg
cld
xor
fdiv
cmp
aas
or
imul
cltd
test
xlat
sbb
sar
mov
out
and
aas
in
idivl
ret
inc
aas
iret
inc
shrb
nop
cmp
popa
icebp
addr16
dec
adc
cmpb
std
pop
fisubrs
sbb
cltd
fstp
pop
jmp
lcall
inc
jge
enter
mov
pusha
or
jecxz
pop
stos
mov
jns
ds
mov
push
dec
xchg
push
or
lahf
fsubrs
stc
gs
lcall
rorb
fisubrl
jns
aam
in
pop
add
xchg
je
scas
sub
jnp
and
push
adc
inc
addr16
test
adc
sub
lcall
mov
xchg
pop
cli
adc
sbb
int
dec
fsubrl
je
sbb
jno
add
sbb
pop
dec
rcr
mov
jecxz
inc
mov
cmp
aam
mov
dec
icebp
dec
or
xor
push
xor
insb
jle
das
insl
rcrl
mov
filds
shl
mov
or
arpl
sub
push
pusha
test
ljmp
mov
jecxz
add
cmp
pop
xchg
fisubl
jg
cmp
mov
lahf
adc
fdivrl
jle
dec
in
out
lret
cmpsl
adc
dec
cwtl
dec
lret
ds
das
sub
psubb
pop
pop
inc
adc
cmovbe
dec
lret
daa
mov
xchg
je
or
in
shll
push
inc
xor
lods
jbe
dec
mov
or
fnstenv
jge
sahf
xchg
and
out
xor
icebp
int
fimuls
aaa
insb
je
mov
negl
loope
mov
pop
push
mov
mov
add
insl
sub
shr
mov
stc
xchg
xchg
lret
gs
mov
sbb
or
push
les
xlat
pushf
outsl
sbb
mov
fisttpll
dec
xchg
cmpsl
pusha
jne
repz
xchg
push
xchg
inc
and
insl
scas
mov
inc
cmc
mov
ljmp
je
je
insb
and
loopne
mulb
cmp
jns
cmp
push
jbe
and
in
insl
scas
sti
insl
popf
jp
call
push
and
mov
daa
and
sub
stos
cmp
fistl
push
ret
xchg
scas
enter
pop
push
out
cmc
js
adc
push
ljmp
ds
sbb
adc
ret
mov
shll
pop
movsb
mov
mov
xchg
mov
sub
pop
xchg
cmpsl
inc
cmpsl
inc
mov
int
inc
cld
xchg
jmp
xchg
inc
sbb
mov
lds
cmp
add
movsb
dec
mov
dec
mov
and
fnstcw
push
xor
fdivl
mov
jmp
dec
fcmovbe
loopne
sbb
dec
in
mov
jnp
out
cmp
pop
test
xchg
imul
sub
push
orl
test
loop
cmc
sbb
lret
mov
fcomps
je
sub
mov
fmulp
iret
pop
mov
cmpsl
adc
pop
out
inc
popf
jnp
imul
adc
loope
sbb
notb
mov
add
fidivs
xchg
ret
pop
mov
cmp
mov
fnstcw
jmp
fdivs
std
mov
clc
call
loopne
cmp
cld
imul
addl
inc
sub
idivb
cs
aam
ss
loop
ljmp
push
aam
xor
add
xchg
inc
imul
lea
xor
add
xlat
shl
cmpsl
bound
mov
mov
frstor
mov
mov
xchg
ret
sub
jbe
test
push
fsubrs
or
fs
add
movsl
clc
inc
sub
mov
stos
sbb
sbb
cmp
cmp
pushf
icebp
cmp
clc
push
push
bound
mov
rcll
jge
sub
mov
call
sub
out
xchg
and
call
jae
mov
mov
ret
pop
cmp
and
pop
scas
add
enter
jecxz
jp
sbbl
es
pop
sub
pop
in
scas
clc
mov
icebp
shll
push
pusha
movsb
cli
test
mov
loopne
push
inc
jl
addr16
and
xchg
xor
repnz
xchg
and
xor
ret
lock
cli
fs
std
push
adc
pop
push
repnz
mov
gs
lock
enter
nop
ret
ret
arpl
xchg
lds
jecxz
scas
insb
jg
fwait
repnz
ds
iret
fiaddl
and
stos
mov
and
fisubl
jae
dec
mov
cmpsl
fcompl
cmp
outsb
stos
mov
adc
and
ljmp
imul
das
fucomi
inc
je
mov
xchg
mov
popa
sbb
jle
xor
push
push
shll
mov
push
pop
and
cmp
enter
pop
fidivl
pop
push
jge
fadds
jmp
cs
sub
negb
sub
aaa
iret
cmp
inc
lcall
push
xor
scas
or
add
outsl
mov
pop
jmp
or
mov
js
adc
mov
mov
pop
loope
out
sbb
mov
movsl
shrb
cmp
aam
sub
sbb
lret
mov
out
lods
fwait
mov
pop
jbe
scas
dec
lcall
jbe
dec
sbb
jle
jmp
aas
mov
xor
inc
stc
push
pushf
stos
sbb
or
js
pop
bound
xor
fldt
packuswb
jecxz
sbb
frstor
and
inc
aad
push
mov
push
icebp
leave
cwtl
lret
nop
idivb
test
fcoms
mov
mov
call
icebp
shll
adc
xor
imulb
add
jne
xor
fstps
fcoms
xor
dec
mov
cmc
sub
aad
cltd
rolb
mov
inc
lods
push
aas
xchg
js
adc
hlt
xchg
and
sti
add
xchg
bound
xchg
inc
imul
aaa
jle
aaa
xchg
stc
bound
sbb
dec
inc
shlb
outsl
sahf
jns
push
and
xchg
dec
mov
jp
aas
les
xor
sbb
xchg
sub
xchg
cli
lods
pushl
sbb
rorb
inc
sbb
insl
shlb
je
inc
in
repz
pop
scas
adc
addr16
xlat
test
jne
sbb
cmpsb
andl
fs
mov
scas
shlb
mov
mov
jge
or
mov
mov
out
and
sub
sub
int3
mov
pop
mov
and
sub
adc
sub
outsl
cmp
jne
mov
imul
ret
pop
push
ret
shlb
push
lock
leave
fwait
jg
sub
mov
mov
xchg
lret
xlat
lahf
lock
repz
pop
sbb
in
ds
pop
lock
imul
fwait
dec
iret
fmul
adc
mov
cs
repz
xlat
jge
repnz
xchg
cmp
mov
fisttpll
aad
push
das
sub
shl
mov
inc
shl
xchg
cmc
mov
or
mov
and
out
pop
pop
cwtl
add
int3
sti
sbb
push
adcl
clc
push
jae
stos
stos
dec
pop
aaa
movsb
leave
cmp
in
add
fiadds
mov
lods
jns
scas
cmp
out
les
lods
cs
scas
dec
add
out
mov
mov
fsubl
xchg
pop
idivb
sbb
gs
mov
jnp
add
jne
sub
mov
dec
addr16
nop
popa
mov
or
data16
cmp
jb
fcomip
cmp
fsubr
fdivrp
stos
data16
adc
into
pop
data16
xor
push
add
pop
loop
mov
ss
dec
repnz
push
mov
push
mov
mov
jo
fidivs
sarl
add
ret
xlat
into
jg
jno
test
mov
jecxz
mov
xchg
shlb
enter
roll
enter
mov
dec
pop
in
dec
movsb
iret
jnp
out
test
mov
movsb
add
add
jle
scas
or
or
dec
movsb
mov
mov
pop
clc
shll
iret
pushf
arpl
bound
ds
jns
sbb
cmpsl
push
xor
repz
js
xchg
repnz
push
pop
aad
xchg
push
fs
mov
outsl
pop
pusha
adc
in
out
inc
test
mov
add
adc
fcomi
cmp
dec
adc
movsb
push
stos
stos
sbb
orl
mov
dec
push
push
into
push
pop
adc
jmp
clc
push
orl
cwtl
cmp
jl
aas
pushl
popf
sub
jbe
add
jge
adc
jns
mov
sub
pop
xor
inc
xchg
nop
lret
jge
push
test
fwait
mov
stos
ret
mov
jno
and
xchg
enter
fwait
leave
in
mov
fmuls
pop
or
mov
cmc
les
lock
aam
das
xchg
std
inc
mov
int3
inc
ror
es
xchg
out
lock
mov
jmp
push
xchg
dec
jmp
or
push
test
add
repz
or
cld
inc
je
cmp
mov
or
orl
enter
ret
mov
ret
ret
xchg
push
cmp
loop
push
cmp
adc
enter
nop
cli
jmp
adc
adc
icebp
lock
push
jae
jecxz
and
shlb
cmpsb
fwait
pushf
add
insb
data16
lods
pop
in
outsl
cmpsl
add
cmp
bound
lods
ss
clc
xor
or
jge
sbb
jbe
pop
incb
adc
mov
int
les
rorl
cmpsl
ret
in
adc
mov
subb
dec
enter
stc
or
mov
push
and
lret
test
fisubs
push
pop
sbb
and
loope
sub
repz
pop
repnz
mov
sbb
xor
adc
stc
pop
xchg
lock
movsl
mov
cltd
jmp
mov
pop
bnd
dec
arpl
fdivrs
pop
aas
mov
rolb
call
js
mov
test
pop
jmp
dec
mov
mov
pop
or
xor
int
dec
jecxz
xchg
and
add
adc
add
pop
cwtl
fucomp
sub
adc
xor
push
test
pop
mov
sub
dec
lods
mov
std
roll
shrl
lret
ss
xor
sbb
call
not
jns
addr16
fsubl
adc
or
repz
in
adcb
popf
jg
jle
aas
lahf
and
rcrb
mov
enter
and
enter
mov
test
fistpll
lret
add
mov
and
push
mov
jno
adc
adc
outsb
fstps
ret
lcall
roll
xchg
xlat
jne
fildll
add
lock
or
inc
pop
cmp
mov
rcrb
fbstp
mov
add
mov
es
add
xor
cmc
cmp
rorb
repnz
mov
dec
nop
sub
push
inc
push
aad
pusha
xchg
dec
fs
fnsave
xchg
sbb
mov
fnstsw
add
xchg
icebp
adc
test
xchg
jno
jb
ret
ss
test
sub
push
jno
cwtl
lcall
imul
mov
scas
mov
cmpsb
out
lahf
test
call
xor
push
mov
sbb
ret
aas
fdivl
add
je
fsubrs
and
xor
aaa
loop
add
push
cmp
cmc
std
inc
lcall
fimuls
notb
push
rorw
xchg
je
andb
or
push
dec
cmpsb
sub
and
fstpt
leave
add
test
inc
into
ss
adc
dec
cmovb
mov
mov
cmp
in
int3
int
adc
inc
add
or
popf
jmp
mov
mov
int3
jmp
mov
cmpsb
xor
sbb
add
inc
and
mov
movsl
insb
je
inc
push
in
js
testb
test
aad
rcl
adc
rcr
out
lea
cmp
pusha
test
fwait
addr16
pop
outsl
mov
cld
and
cltd
sub
pop
stos
icebp
shld
into
lret
std
test
cmp
leave
out
subl
xchg
gs
mov
jge
adc
xor
in
mov
out
sahf
and
lret
iret
rol
adc
pop
add
sbb
das
in
incb
arpl
adc
mov
mov
inc
mov
lds
lods
mov
shl
push
sbb
fwait
cmc
enter
push
cmp
sub
cmp
popa
rcl
push
mov
pop
stos
ss
mov
mov
aad
xor
or
in
mov
or
in
out
lods
add
jg
lret
mov
add
cmp
mov
jb
jl
push
adc
je,pt
push
xchg
add
cmpsl
xor
outsl
or
mov
mov
pop
inc
jns
add
push
cmp
and
in
mov
and
test
sbb
stc
push
jns
inc
pop
inc
das
cltd
int3
fstl
fsubrp
aam
fsubp
lea
lods
cmp
or
outsl
rcll
dec
push
cmp
sbb
cltd
test
jecxz
fbld
mov
add
hlt
jg
test
inc
lcall
and
ret
fdivrs
push
fcmovnb
add
jne
into
ret
xor
enter
movsl
stc
jo
fnstenv
mov
xchg
adc
outsb
hlt
loope
push
cmp
xchg
aaa
fisttps
lret
adc
popf
icebp
jnp
movsb
lcall
aad
mov
cmp
js
inc
mov
push
test
sbb
pusha
cmc
movsb
stos
or
xor
sub
leave
ja
add
repz
jns
pop
jno
inc
and
stc
mov
lods
xorb
dec
js
out
xchg
inc
ja
jns
fstpl
aad
popf
pop
fisubl
cwtl
adc
xchg
shrl
inc
pop
mov
dec
xchg
mov
aam
fbld
stos
mov
xor
xchg
sahf
xor
pop
movsb
jp
cmp
pop
adc
add
adc
cmp
faddl
jo
fcoms
sub
and
icebp
inc
loop
lahf
ret
les
mov
mov
or
test
decb
iret
inc
xlat
in
movsl
mov
ds
out
sbb
xchg
pushf
sbb
cs
call
cmp
jne
inc
cwtl
je
es
inc
xchg
es
push
lods
adc
mov
cmpsb
mov
adc
scas
roll
sub
sbb
mov
es
imul
sub
pop
cmp
dec
aad
push
lcall
and
mov
pop
inc
sub
loope
mov
mov
imul
out
push
stc
pop
int3
jecxz
sub
lret
cwtl
mov
push
push
rep
cwtl
call
push
clc
test
scas
sti
cmpsb
ror
and
out
sub
cmpsb
std
hlt
or
cli
stos
idivl
inc
leave
mov
sbb
fidivrl
ficomps
shrl
push
cli
outsl
mov
mov
pusha
mov
inc
fsubrl
imul
cwtl
lods
out
shlb
inc
cmp
cmp
mov
test
add
int3
mov
pop
xchg
sub
popf
mov
and
loopne
fdivrs
push
ss
or
and
sbb
out
sbb
dec
hlt
repnz
out
data16
push
ret
mov
ja
push
icebp
out
dec
addr16
jns
loop
ljmp
xor
sahf
dec
lret
pop
mov
imul
rcrb
sahf
scas
push
dec
daa
jb
call
out
push
nop
orl
ficoml
inc
xchg
scas
mov
pop
js
add
add
pushf
mov
add
adc
cmp
shl
xor
rcl
jns
mov
mov
ds
inc
daa
sbb
dec
out
scas
xrelease
or
adc
xor
pop
ds
lods
rcrl
xchg
cmp
sahf
or
movsl
das
dec
jmp
inc
je
and
push
dec
xchg
call
imul
scas
sti
aas
or
mov
ljmp
lret
lret
lea
xorl
test
xor
or
or
stos
mov
call
les
adc
adc
mov
adc
push
xor
jbe
ror
subps
inc
xor
mov
vcvttsd2si
push
ret
xchg
mov
jge
add
adc
je
sub
imul
jns
lcall
jge
popf
insl
stos
outsl
mov
cltd
bound
enter
push
adc
mov
or
cld
jp
cmp
push
inc
inc
addr16
fs
mov
xor
and
repz
cmp
test
repz
adc
sub
add
mov
rorb
fcmovne
pop
jb
add
pop
xcrypt-ctr
cmpsl
filds
and
xchg
dec
std
test
inc
push
lods
cmp
ret
mov
jns
out
mov
pop
unpckhps
out
icebp
sbb
cmpsl
push
push
adc
lock
clc
clc
xlat
iret
lods
dec
mov
inc
jo
and
pop
sbb
adc
mov
loopne
jmp
inc
mov
ret
cmp
lea
cmp
xchg
roll
andl
xchg
jnp
xor
or
fsubrl
into
outsb
cli
dec
aaa
add
mov
dec
in
inc
insb
sub
mov
jmp
rorl
lds
mov
or
adc
repnz
sarb
xlat
sbb
ljmp
outsl
adc
sbbb
xchg
sahf
adc
adc
push
jae
xchg
int
or
jmp
jns
mov
jecxz
ljmp
mov
mov
cld
mov
dec
push
fidivrl
mov
rol
mov
adc
add
xchg
pusha
jl
out
out
pop
mov
xor
stos
ds
inc
cmp
mov
loopne
bound
sbb
ja
jo
push
or
mov
dec
or
dec
add
push
lds
ds
xchg
ds
lret
movsl
and
sbb
bound
and
sub
mov
add
in
jmp
out
and
push
or
fnstenv
popa
mov
add
lds
mov
jbe
test
push
adc
enter
leave
inc
int3
cmp
mov
pop
sbb
mov
in
inc
pop
or
js
jge
adc
insb
or
inc
xchg
mov
call
ss
movhps
push
push
xchg
xor
sti
das
out
fsubl
aam
movsb
cmp
jl
insl
push
les
push
xchg
ds
push
pop
pop
jns
cmp
pop
dec
inc
xchg
cltd
loopne
jne
mov
add
xchg
pushf
popa
xor
mov
movsb
xchg
cmp
xor
int3
gs
je
loopne
jmp
loope
in
addr16
dec
mov
lds
out
push
lock
jecxz
jg
leave
fimull
dec
leave
imul
nop
jae
dec
adc
push
and
xchg
dec
int3
imul
loop
ss
mov
fwait
repnz
cmp
jmp
push
or
inc
fwait
pop
mov
jl
lahf
xchg
in
movsl
movsl
cmp
in
sbb
mov
fisubs
cmp
adc
sbb
rcll
pop
pop
sub
pmullw
pop
adc
sahf
out
mov
leave
dec
adc
cmc
jae
imul
mov
sbb
lods
fsubl
je
jns
out
or
cmp
push
mov
jmp
hlt
push
jnp
xor
mov
fnstenv
call
sub
xchg
decb
xchg
lods
lret
scas
fldcw
in
push
jnp
mov
scas
popl
movsl
cmc
nop
lcall
jnp
add
fcoml
xchg
lock
xchg
or
bound
ret
push
mov
push
out
gs
movsl
fists
adcl
xchg
test
test
ret
jg
dec
inc
adc
xchg
sbb
out
fidivs
int3
lock
icebp
mov
adc
out
mov
jl
outsb
cmp
inc
jbe,pn
aaa
lahf
push
into
jecxz
xchg
rcrb
mov
movsb
mov
cmp
cmc
fidivl
push
sbb
mov
mov
push
in
cmpsb
push
pusha
in
xlat
fs
inc
dec
adc
cmp
cmc
mov
mov
push
mov
dec
mov
fidivrs
sbb
icebp
stos
rcrl
mov
mov
gs
data16
out
popf
pushf
mov
xor
or
insb
stos
out
sub
sbb
xorl
faddl
in
addr16
cmp
cmp
mulb
aam
lds
cmp
add
and
addr16
bound
xor
or
or
bound
cwtl
cmp
dec
in
addr16
test
js
lods
cmp
pop
pop
out
lcall
mov
out
icebp
add
adc
lahf
fcompl
xlat
test
loop
jg
lock
jecxz
xchg
xor
rolb
sbb
dec
orb
sti
fs
adc
out
adc
lcall
jae
jecxz
outsb
pop
int3
ds
in
or
push
fimull
in
rcr
xchg
int
dec
sbb
dec
adc
jbe
add
adc
add
jno
fprem1
ret
test
out
dec
and
in
dec
test
pop
stc
fisubrs
adc
hlt
cld
cwtl
cmp
fcmovnu
into
mov
insb
inc
and
and
inc
fadds
cmpsl
jae
outsb
out
xlat
mov
or
iret
gs
pop
lcall
push
or
jnp
jmp
pop
jo
inc
xor
fdiv
mov
sbb
ret
rolb
lds
inc
add
pop
mov
xchg
or
out
rcr
dec
cs
lea
xor
push
dec
dec
jns
xor
mov
scas
push
out
cmpsb
in
push
test
jl
mov
cmp
or
cmp
mov
insb
cmp
insl
clc
bound
test
lods
lods
lods
push
stc
loope
data16
add
lret
mov
es
jge
sbb
loop
lods
stos
mov
sahf
loop
shr
ret
cs
lds
sub
cmpsl
pop
sahf
cmp
pop
or
cmpsl
cmp
mov
leave
roll
in
movsb
cwtl
dec
jnp
shll
mov
sti
xchg
or
inc
shll
cmc
in
daa
rcr
pop
int
sti
jle
dec
cmp
out
hlt
mov
jns
cmc
adc
hlt
out
enter
or
cld
adc
sbb
sub
or
pop
sub
pop
pop
into
xchg
in
testb
aaa
aas
int3
cltd
out
fwait
adc
jno
in
or
cwtl
lcall
inc
adc
xchg
inc
mov
cmp
mov
sbb
xchg
pop
add
mov
jg
sbb
aas
div
dec
xchg
cmc
daa
xchg
bound
or
cmp
xor
movl
lret
sbb
loopne
sahf
fs
push
aaa
int
leave
sti
pop
leave
dec
push
pop
mov
jne
sbb
stos
enter
lods
push
push
pop
stos
jmp
dec
dec
pop
inc
aad
mov
push
dec
sub
pop
data16
cli
and
test
mov
sbb
sbb
jp
dec
add
mov
pusha
jbe
repz
cltd
or
jo
mov
jne
adc
fnsave
lods
cmp
fistps
push
pop
pop
adc
push
sbb
or
movsl
pop
sub
xchg
or
mov
pop
lock
jmp
out
sbb
mov
push
cmp
xor
pop
and
rol
mov
mov
in
arpl
movsb
lret
lret
movsl
push
mov
mov
jle
mov
movsl
inc
es
xor
out
add
mov
push
in
mov
mov
lret
jnp
hlt
icebp
aad
or
mov
inc
inc
mov
add
sub
orl
and
inc
pop
dec
rcrl
jl
fwait
lods
clc
jp
test
bnd
in
and
xor
cmp
test
ja
cmp
lcall
inc
or
shl
stos
inc
mov
mov
jns
insl
dec
js
ja
movsl
ficomps
sub
gs
fidivs
imul
test
pop
pop
fsub
lods
add
mov
push
push
sbb
fistpll
pop
popf
xorl
popa
sub
sub
cs
push
aas
js
ja
push
xchg
sub
sbb
sub
dec
jmp
push
test
add
cli
repnz
xor
test
fnstsw
mov
icebp
fcoml
inc
outsb
mull
sbb
insb
jae
js
cmp
cmp
mov
push
shrl
pop
outsl
or
lret
addr16
inc
push
xor
pop
or
stos
xchg
lods
dec
mov
mov
xchg
sbb
xor
push
dec
xor
mov
and
insl
mov
push
imul
ret
pop
js
cwtl
imulb
out
add
mov
mov
pop
cmc
subb
test
dec
stos
scas
mov
fwait
push
cmp
ja
mov
rolb
sub
or
mov
pusha
sub
imul
sub
pop
xor
leave
jns
pop
sub
xlat
xlat
ja
imul
in
xor
xor
lock
jbe
mov
stos
dec
push
mov
or
mov
dec
hlt
jne
xor
pusha
lcall
insb
icebp
push
mov
cmpsb
outsl
mov
out
push
popa
imul
movsb
jae
inc
out
jg
daa
fmull
addr16
leave
adc
mov
push
pop
shl
popf
les
or
inc
pushf
sub
and
pop
push
xor
push
jmp
push
push
cmpl
cs
cmpsb
mov
fdiv
pop
xor
cmp
daa
jmp
inc
out
pop
mov
push
dec
leave
popf
mov
cmpsl
shl
mov
jns
pop
xor
sbb
cld
mov
xchg
lcall
dec
sub
push
pop
cmpsl
xchg
sarl
xor
aam
cwtl
scas
aaa
mov
inc
push
inc
xor
adc
dec
hlt
dec
arpl
xorl
pusha
ljmp
incb
mov
add
jbe
and
ljmp
aam
jle
jp
jns
mov
movsb
lret
xor
or
popf
lds
ljmp
les
mov
sub
or
or
rorb
add
and
xlat
loopne
mov
cmp
mov
sbb
pop
fidivl
dec
sub
std
js
jb
setns
outsl
mov
and
out
cmp
inc
inc
ret
add
xchg
fsubs
sbb
icebp
sub
fcompl
jne
cmp
in
test
daa
cmp
ret
jnp
xchg
jle
jbe
jb
jns
xchg
mov
mov
pop
or
repz
push
scas
fstps
or
mov
dec
dec
mov
jp
pusha
dec
cmp
xchg
aaa
aas
test
jne
aam
pop
sub
out
rorl
lcall
jl
int
cmpsl
or
add
xor
mov
push
test
fists
jecxz
adc
inc
and
cltd
or
inc
loopne
lret
jge
dec
adc
addl
sbb
adc
int3
test
repz
mov
cmp
mov
icebp
xchg
xchg
mov
mov
dec
jo
xchg
fmuls
hlt
daa
stos
dec
test
test
dec
popa
xor
xor
mov
cmp
adc
inc
mov
xchg
jecxz
and
lret
cmp
test
mov
cmp
orb
cwtl
inc
sub
insb
fs
push
sbb
jbe
jae
cli
mov
mov
daa
ds
mov
xor
popa
or
mov
inc
push
shl
mov
adc
mov
mov
xor
xlat
xor
add
mov
push
add
add
dec
push
pop
dec
in
sbb
lock
stos
sub
pop
arpl
testb
jnp
rorl
test
or
aam
add
xchg
sub
xchg
jb
pushf
fsub
les
data16
sti
les
out
push
jp
into
dec
add
jecxz
sahf
adc
fnstsw
and
out
sbb
xchg
sub
sbb
out
repnz
pop
jno
sub
sub
fimuls
adc
insl
sti
pop
dec
into
jnp
repz
mov
mov
decb
imul
repz
stc
jnp
push
stos
in
imul
and
out
xor
mov
ljmp
inc
in
sbb
shl
cmpsl
inc
ss
lahf
sbb
xor
testl
mov
sub
shlb
and
aaa
xor
mov
rcr
pop
psubusb
pop
add
fdivs
nop
jl
outsl
xchg
lret
add
out
sub
sub
repnz
adc
scas
fdivrp
sbb
je
dec
fs
lahf
insl
stos
mov
scas
enter
push
push
icebp
je
inc
fildll
int
lcall
ss
sbb
imul
mov
sub
mov
jmp
mov
std
xlat
fistl
push
cli
and
cmp
xchg
mov
push
lock
in
add
sub
pop
or
incl
iret
outsb
dec
or
sbb
cmp
jle
mov
pushf
mov
repnz
mov
cwtl
dec
scas
cmovnp
cmp
mov
add
je
push
add
add
pop
pushl
nop
leave
inc
mov
cmpl
add
sbb
jbe
mov
xlat
jo
xchg
pusha
mov
outsl
incb
mov
and
fcmovbe
ljmp
out
or
fldt
popf
adc
or
and
fcmovne
mov
cltd
jb
cmp
pop
into
adc
ret
cwtl
and
mov
and
jb
lcall
pop
out
mov
insl
pusha
add
jl
imul
cs
stc
movsl
outsb
inc
add
jne
mov
cmpsl
or
gs
adc
mov
sbb
xor
fstpl
subb
and
popa
test
pop
gs
cmp
mov
and
push
or
lods
mov
aam
rclb
and
mov
or
cli
into
fmuls
inc
jbe
push
fmuls
mov
add
push
dec
mov
repz
daa
jp
jg
cmc
neg
cmpsl
mov
lea
insb
lret
mov
pushf
cwtl
dec
mov
vmovapd
push
test
call
sbb
xchg
xchg
jne
and
cmpsb
xchg
rorl
mov
mov
subl
jg
in
xchg
inc
jo
xor
mov
jo
inc
or
lods
sub
sub
fcompl
and
mov
add
xchg
sub
push
add
loop
sub
pop
adc
stos
pop
xor
ljmp
shl
call
arpl
inc
mov
mov
fisubrs
dec
ret
xchg
mov
inc
scas
inc
cmp
pop
mov
lcall
dec
mov
and
dec
xor
adc
xor
xor
mov
scas
into
or
or
in
or
lods
xor
push
int3
xchg
pop
or
adc
push
dec
dec
xorl
lods
add
popa
mov
ret
push
in
sbb
cmc
xor
inc
xchg
es
cmc
gs
pop
mov
mov
cmp
aaa
inc
adc
scas
cmp
popa
xor
or
out
mov
sub
enter
jae
jecxz
pop
test
xor
push
fnstsw
sub
and
inc
es
cmpsb
call
dec
sbb
ja
cld
loop
das
pop
adc
and
dec
jae
adc
loope
or
fwait
ror
and
xor
shlb
call
sbb
fldpi
mov
jno
cmp
xor
ret
imul
scas
adcb
aad
clc
jo
jmp
movsl
mov
inc
mov
mov
inc
mov
jns
std
aad
push
xchg
dec
fmull
aaa
dec
jecxz
jo
test
cmpsb
iret
or
jmp
loopne
cltd
pop
out
or
adc
push
xchg
cmpsl
push
pop
jp
jbe
mov
cltd
imul
push
add
cmc
mov
mov
test
sbb
pushf
pop
clc
popf
fcom
dec
jnp
mov
out
xchg
xor
push
or
movsb
dec
sub
cmp
lods
xchg
fimull
rcll
add
daa
test
out
scas
push
or
sub
hlt
loop
mov
inc
push
add
xchg
insb
ror
and
and
addb
xor
push
jno
xchg
xchg
mov
ficomps
add
fisubrs
rcrb
testb
jnp
mov
lcall
jmp
adc
mov
rorb
out
lods
sub
lds
push
lcall
and
std
in
loop,pn
frstor
orl
cmp
dec
and
int3
imul
sub
popa
jg
xchg
or
inc
out
pushf
jnp
bnd
out
mov
pop
pushf
in
sub
xor
push
xor
sub
cmp
inc
andb
push
in
arpl
mov
dec
xor
and
lods
cmp
lock
es
cmp
push
xlat
outsb
or
fisttpl
test
xchg
outsl
mov
add
dec
in
sbb
in
repz
cld
in
int
subb
addb
jecxz
mov
sbb
loope
fwait
xor
imul
cli
dec
push
mov
popf
mov
xchg
xchg
and
inc
jne
imulb
lcall
out
push
in
test
pop
and
gs
or
outsb
cmpsb
jle
cmc
repz
dec
mov
loope
int
jp
cmp
lods
and
push
push
or
cmp
push
xor
ret
ret
or
add
lea
inc
int3
fs
fstpt
jb
cmp
jle
dec
jbe
inc
sti
push
nop
dec
dec
push
mov
xor
popf
xor
xor
insl
mov
xchg
outsb
cmpsl
xchg
inc
pusha
lret
mov
mov
fldt
sub
pop
mov
enter
pop
test
lods
jle
mov
arpl
or
hlt
pop
sbb
je
lret
jp,pn
mov
popl
add
test
inc
mov
mov
pop
and
out
dec
outsb
xor
out
das
push
cmp
and
pop
and
adc
sub
mov
aad
push
pop
lret
mov
call
xchg
repnz
mov
jmp
inc
loope
repnz
push
xchg
add
lret
and
sbb
push
test
das
mov
xor
or
jg
inc
sub
mov
sbb
adc
jp
or
cmpsl
mov
xchg
jbe
sub
cli
clc
mov
enter
xchg
jbe
mov
insb
xlat
mov
aam
cmp
setae
jbe
cmp
pop
push
xchg
pop
mov
out
xchg
call
mov
daa
loope
pop
or
or
xor
mov
mov
sarb
mov
mov
push
loopne
dec
jge
push
mov
dec
pop
stos
js
mov
aas
cmpsb
add
pop
aas
movsl
sahf
popf
es
jnp
mov
dec
addb
cs
lods
in
sbb
insl
outsl
in
aas
loopne
aam
sub
lods
push
ficompl
cmpsb
sbb
aam
sarb
inc
mov
insb
je
ret
addr16
das
push
sbb
int
adc
cmp
mov
cmpsl
xor
adc
adc
les
scas
ficompl
or
or
cs
and
dec
test
nop
adc
lret
incb
mov
std
cmpsl
xor
xchg
inc
mov
fdiv
jnp
push
add
pushf
push
cli
outsl
aaa
jae
mov
xchg
push
sahf
ds
or
insb
cmc
pop
xchg
push
dec
enter
dec
fldcw
or
and
jmp
or
out
push
ss
loop
ja
out
sub
sub
mov
cwtl
pop
mov
mov
divb
mov
icebp
push
dec
and
out
mov
add
xchg
pop
adc
mov
sbb
mov
sbb
jecxz
lock
mov
jno
call
mov
xchg
jecxz
je
dec
scas
xchg
test
pop
push
pop
icebp
or
dec
loope
dec
xlat
outsb
or
and
sti
and
outsl
out
pop
mov
fbstp
push
out
pop
push
addr16
sbb
loope
stos
push
jno
pop
sbbb
or
xor
adc
dec
shrl
pop
jge
adc
adc
inc
dec
rclb
or
mov
add
icebp
pop
bound
test
push
add
jge
xorl
mov
push
inc
sub
jno
fs
lcall
mov
in
push
cmc
push
js
or
push
mov
popa
inc
push
jmp
cmp
scas
insl
add
inc
pop
and
jle
xor
scas
or
ds
sahf
stos
mov
jecxz
mov
cld
inc
es
mov
stc
mov
jae
and
arpl
enter
xor
inc
and
testl
mov
dec
dec
mov
mov
mov
xchg
xor
sbb
xor
loop
or
movsl
jnp
sti
mov
xor
mov
push
add
movsb
ret
fnsave
sub
sbb
cmp
push
ja
mov
std
mov
daa
mov
aas
pushf
nop
leave
adc
push
fstpl
aaa
sbb
xchg
cmpb
xor
cmpsl
mov
adc
lods
and
rorl
daa
pop
outsb
push
inc
std
aas
mov
mov
mov
sbb
je
mov
inc
sub
sbb
les
outsb
test
loopne
test
xchg
dec
mov
int
int
ret
in
xor
fimuls
xlat
call
pusha
jo
setns
xor
adcl
sub
ja
jns
xorb
mov
stc
xor
leave
jne
xor
add
pop
and
add
jge
ljmp
fsubrl
mov
mov
in
jecxz
icebp
push
push
movsl
mov
loopne
push
pop
js
xor
xor
ficoml
paddsw
sbb
sarl
ljmp
pop
or
and
dec
xchg
aaa
dec
pop
xor
mov
jo
mov
test
movsl
aam
sti
std
sahf
ret
xchg
push
mov
stc
cli
scas
or
jmp
nop
and
clc
test
outsb
push
fwait
out
mov
lods
cmp
pushf
inc
sbb
roll
fs
mov
inc
fisubs
mov
lahf
lret
lcall
cmc
inc
xchg
ss
pop
or
dec
push
pop
scas
jae
jae
cltd
mov
loope
mov
insb
sbb
ja
out
mov
fdivr
repz
adc
cli
fisubs
enter
jo
andl
push
cmp
out
mov
loop
lahf
mov
push
add
mov
aad
scas
inc
icebp
mov
mov
flds
lods
ljmp
pop
iret
jmp
sub
nop
cmp
lods
dec
pop
sbb
pusha
fisubrs
pop
xchg
mov
bound
mov
lret
mov
cmpsl
subl
jle
inc
adc
xor
mov
repz
push
outsl
lea
pop
in
pop
mov
sub
pop
or
or
fildll
push
fbld
inc
xchg
je
inc
mov
sbb
sub
or
adc
cmc
nop
fildll
cmp
icebp
inc
mov
cmpsb
lahf
lret
add
nop
pop
or
dec
cmp
ret
jge
stc
lret
sbb
jb
aad
cmc
mov
loope
mov
inc
sub
aas
popa
repz
jb
jg
imul
movsl
fldcw
mov
mov
lods
das
pop
pop
push
fcmovnbe
mov
jmp
mov
stos
ret
add
sub
push
int
xchg
test
xchg
pop
mov
push
jbe
clc
sbb
or
mov
push
arpl
push
mov
cmp
jecxz
cltd
shrl
mov
jb
pop
and
outsl
cmp
push
inc
mov
in
push
pop
data16
call
repz
into
mov
lret
lahf
ret
and
lahf
fucomip
repnz
rdpmc
std
adc
jge
movsb
js
mov
std
imul
jmp
ja
loope
js
mov
push
ret
rcrb
sbb
iret
lods
mov
aad
fs
call
ljmp
cmp
rorb
mov
std
mov
shll
mov
cmpsb
cmp
cmpb
adc
fdivrs
jmp
inc
ljmp
mov
fdivrs
dec
in
stos
mov
cs
or
rorb
push
in
pop
pop
mov
imul
call
lahf
outsl
mov
insb
xor
sub
or
add
ljmp
mov
sub
and
mov
pop
pop
mov
ss
mov
add
mov
aas
cmpsb
out
push
lock
or
dec
mov
dec
push
jl
inc
or
rcll
xchg
int
and
jno
sub
addr16
jnp
and
xor
inc
jle
jle
mov
lahf
inc
cs
mov
outsl
aad
das
lock
testb
out
pop
outsb
outsb
xchg
add
jbe
dec
xchg
and
inc
inc
mov
cmp
popf
jge
sub
ds
dec
scas
add
mov
fildl
mov
dec
push
cs
stos
inc
shlb
pushf
adc
lds
xchg
dec
pop
insb
jbe
sub
roll
imul
sahf
imul
adcl
xchg
movsl
scas
imul
in
call
cmp
pusha
adc
cltd
sub
sarl
dec
add
lods
push
fsubs
ljmp
mov
xorl
icebp
out
add
pop
or
adc
add
or
mov
cmc
push
ret
ret
ljmp
mov
pop
mov
pushf
decl
jnp
in
mov
loop
scas
inc
fdivl
cwtl
xchg
ret
sti
nop
xchg
xor
xchg
pushf
push
test
mov
sub
pop
xor
cmp
mov
or
jbe
adc
mov
xor
sub
sub
loope
push
cs
xchg
mov
inc
pop
xor
cmp
mov
repz
push
andb
cmp
cmp
sub
inc
andl
cmc
jo
pop
lds
xchg
enter
pop
and
test
pop
hlt
xchg
fs
and
ss
ds
cmpsl
popa
mov
push
push
mov
iret
xchg
or
fwait
jnp
mov
pop
fstl
movsl
ret
sub
test
push
mov
or
or
pop
test
xor
cltd
mov
data16
xor
jne
sarl
stos
add
cmp
and
popf
lret
das
pop
inc
adc
mov
inc
sarl
mov
out
mov
test
leave
jnp
idivl
and
mov
sbb
ljmp
loope
dec
sub
xor
fwait
lcall
call
cmp
arpl
arpl
mov
xor
aaa
std
push
inc
mov
jmp
adc
jle
testl
mov
sub
adc
inc
imul
xchg
nop
std
popa
jnp
aad
mov
imul
xchg
add
andl
jb
or
test
jns
jnp
mov
xchg
fstps
push
mov
sbb
sbb
xor
fwait
js
bndldx
cmp
das
mov
enter
push
lods
outsb
test
sub
and
test
sbb
xchg
lahf
pop
stos
lods
loopne
sub
out
icebp
jnp
cld
xchg
sub
test
add
mov
add
xchg
inc
push
movsl
cmp
in
xchg
sbb
push
adc
sub
ficomps
movsl
jecxz
fwait
sbb
fstps
sbb
subb
pop
das
sub
and
repz
ret
mov
out
movsl
dec
push
mov
push
cs
or
cli
je
loope
xor
outsb
xor
leave
in
adc
dec
dec
adc
lea
std
pmullw
jmp
divl
pop
push
pop
movsb
fnstenv
push
lret
or
mov
mov
clc
ret
adc
cmp
sahf
cld
cmp
rol
les
cmc
movsb
ror
xor
aaa
ret
scas
iret
and
lcall
dec
mov
flds
out
rcr
fs
lea
jle
push
ja
fimuls
loopne
scas
push
fnstenv
nop
enter
cld
repz
jnp
fisubrs
inc
xchg
push
nop
idivb
fwait
xor
mov
add
in
pcmpgtb
aaa
scas
ret
in
xchg
or
push
jb
bswap
pop
hlt
repz
pop
mov
andl
test
pop
bound
dec
mov
cmp
sbb
es
inc
xchg
inc
leave
ficomps
mov
xlat
out
jmp
loopne
or
and
test
lahf
sbb
inc
cmpsl
fcmovb
mov
xchg
jo
jl
fwait
shll
lds
mov
cmp
mov
pop
int3
mov
scas
lods
pop
pop
dec
lods
andb
mov
test
dec
jmp
cmpsb
jp
stos
pop
push
and
lret
ret
inc
lea
mov
lods
jmp
mov
mov
mov
icebp
idivb
js
sub
add
mov
mov
dec
stos
popa
call
gs
das
cli
mov
dec
mov
test
test
int
xlat
push
xor
cmp
jp
enter
in
fildl
stos
or
das
push
adc
dec
fidivrs
es
mov
mov
push
add
scas
cmp
cwtl
push
mov
add
mov
lea
mov
test
mov
cld
or
sbb
and
push
xor
shll
aas
sbb
notb
out
rol
push
sbb
sub
stos
xlat
divl
cmp
add
xchg
mov
mov
hlt
xlat
negb
xor
cli
and
cmp
lret
push
enter
data16
rcrb
xor
mov
mov
inc
gs
jns
push
ss
subl
push
mov
sbb
xor
sahf
cmpb
xor
cmc
jne
in
int
add
lret
scas
adc
stos
cltd
test
mov
ja
jge
jns
fdivr
mov
pop
testl
lods
or
jg
adc
leave
movsl
fmul
jp
out
notl
and
cmpsb
mov
loopne
cmpsb
jl
sub
hlt
aam
cli
popa
arpl
mov
lock
cwtl
and
nop
insb
data16
push
sub
mov
or
fcomps
mulb
hlt
xchg
into
insb
mov
cmp
imul
or
fcoml
stos
or
push
cmp
ljmp
mov
jecxz
pop
inc
inc
add
pop
cld
sub
pop
push
and
pop
int
xlat
dec
mov
xchg
lods
jnp
flds
mov
push
outsb
mov
jo
arpl
mov
aaa
arpl
shrl
loopne
out
pop
xor
sbb
push
xor
mov
sbb
sub
jb
imul
dec
notb
inc
test
subl
nop
mov
test
jns
mov
pop
xchg
call
lea
imul
push
sub
std
in
inc
fadds
add
sub
dec
scas
sbb
jmp
or
and
sbb
push
fxtract
sub
xor
jge
dec
inc
mov
lods
in
mov
movsb
sbb
jge
xchg
and
mov
je
inc
fcoml
out
sub
pop
mov
negl
mov
cld
add
jns
or
sbbb
call
mov
inc
cmp
pop
mov
adc
les
pop
repz
ljmp
int3
cmp
sahf
jbe
mov
jne
in
mov
sti
stc
push
les
movsb
or
jecxz
mov
fiadds
das
pop
mov
lcall
adcb
fucomp
movsb
xchg
xor
adc
int3
adc
cmp
lret
in
div
jmp
mov
mov
sub
jle
sub
pop
inc
das
iret
stos
lods
xchg
push
sahf
repz
xchg
sbb
pop
and
cmpsl
mov
cs
test
ljmp
pop
push
adc
pop
ds
cmpsb
mov
jecxz
dec
repz
mov
roll
je
or
divb
xor
int3
loop
xchg
mov
das
rorl
lahf
ds
leave
xor
shlb
xor
inc
sbb
repz
and
dec
inc
pop
mov
jb
pop
js
call
loop
or
shll
movsl
mov
adc
push
int3
lds
mov
or
loopne
xor
jmp
xchg
adc
push
bnd
ret
jg
pop
sub
lret
sub
xchg
pop
rcll
stos
push
xchg
xchg
or
ficomps
cmp
fldcw
popf
shll
icebp
stos
cmp
mov
adc
scas
xchg
inc
dec
inc
popa
sub
inc
xchg
jle
mov
mov
sbb
push
pop
and
and
ficomps
imul
mov
addr16
push
iret
jae
je
rcl
jns
and
subb
orl
in
js
push
xchg
fwait
loope
cmpl
scas
fidivrl
add
cltd
pushaw
ja
aaa
test
jp
mov
into
sub
popa
inc
adc
pop
mov
mov
ja
xchg
add
fdivrs
jmp
inc
or
inc
jno
push
and
mov
lods
lcall
push
or
add
mov
pop
sbb
cmp
lahf
sub
icebp
jl
lods
insl
jns
mov
clc
push
add
or
daa
sub
jae
jno
inc
jne
leave
adcl
test
adc
fldcw
inc
xlat
stos
dec
dec
frstor
test
movb
shl
or
lds
sbb
pop
ljmp
in
mov
mov
ret
and
leave
imulb
fstps
add
lea
inc
in
sbb
xchg
sub
fs
fcoml
cmpsb
out
push
imul
stos
pop
xchg
out
inc
cltd
push
cmp
test
mov
dec
inc
daa
push
or
in
xchg
sbb
jp
adc
and
push
test
outsl
loope
cltd
rcrb
cmp
mov
mov
lahf
mov
sub
pop
in
data16
pusha
and
repnz
dec
push
imul
js,pn
adc
pusha
or
mov
test
in
loope
adc
into
mov
sbb
and
out
push
in
cmp
push
inc
dec
cltd
lret
jbe
push
scas
xor
ja
inc
inc
mov
out
test
push
int
iret
mov
jg
pushf
xchg
ret
repz
push
xor
test
dec
sbb
adc
xor
shll
pop
jg
dec
insl
test
fcmovne
mov
add
mov
loope
roll
push
ds
js
test
sbb
pop
mov
pop
scas
imul
and
cmp
movsl
mov
xor
es
push
scas
pop
sub
mov
lea
sahf
dec
les
int
cs
xor
je
xchg
js
xchg
sbb
pop
xor
adc
mov
adc
jge
addr16
jp
loopne
stos
int3
aad
pop
int
into
push
adc
popl
xchg
test
or
ljmp
mov
mov
xchg
push
or
in
pushf
sbb
mov
mov
push
lcall
lret
leave
fnsave
sbb
icebp
cmpsl
add
and
mov
pop
xor
popa
ss
out
xchg
adc
cs
push
cmp
cmpsl
mov
movsl
in
mov
jecxz
shlb
fwait
iret
stc
roll
gs
xchg
jecxz
inc
pop
xchg
ss
fisubl
test
push
lods
dec
nop
jl
push
sbb
dec
push
lods
sbb
addr16
mov
cmp
mov
xlat
insl
imul
std
je
mov
hlt
std
mov
movsl
ret
and
pop
inc
in
fs
pop
mov
inc
xchg
add
xor
pop
clc
xor
insl
mov
shlb
sub
inc
pop
and
or
inc
ljmp
adc
pop
mov
sbb
sub
test
data16
push
sbb
out
inc
repnz
jns
insl
dec
push
dec
insb
inc
in
inc
incl
cld
insl
mov
sti
hlt
das
shlb
std
loope
mov
mov
add
mov
dec
test
pop
jae
enter
stos
scas
cmp
add
rcl
mov
fdivrl
cwtl
cmp
cmc
in
sbb
inc
fwait
shrb
jp
inc
cmp
ror
nop
cmpxchg
adc
mov
test
add
jmp
pop
jg
lds
lahf
add
pop
fprem
dec
rcll
inc
mov
imul
sub
mov
lods
mov
ret
mov
popw
loop
pop
xor
shll
sub
dec
mov
and
mov
mov
jbe
jmp
adc
mov
int3
subl
test
fnstenv
mov
daa
adc
sahf
adc
ljmp
xor
jmp
aad
xchg
cmp
add
and
or
movsb
pop
jo
insb
fcompl
out
ljmp
cmp
pop
push
xor
sbb
cmp
inc
pusha
sub
lods
loop
inc
jnp
cmp
dec
movsb
cmp
ljmp
mov
imul
lea
loopne
sbb
das
outsb
aas
jge
icebp
in
in
imul
scas
fiadds
add
cwtl
mov
xor
movsl
adc
jg
inc
mov
sub
lcall
sub
int
cmp
ljmp
sbb
and
shll
cmp
fcoms
clc
mov
push
bound
cmc
dec
clc
clc
jno
or
inc
fsubrs
xor
fdiv
sub
jmp
push
ljmp
cmc
fisttpl
xchg
sub
loope
sarl
fstl
xchg
call
pop
dec
push
mov
pop
push
popf
jmp
mov
push
in
ljmp
jl
pusha
mov
mov
inc
subb
adc
pop
rorl
rolb
mov
jl
ss
fstpl
jge
jno
shl
pushl
and
jae
test
aaa
arpl
sbb
stc
lods
neg
repz
xor
and
insl
and
loope
mulb
repz
cwtl
iret
in
add
push
aad
sti
out
movsb
pop
push
push
dec
push
rcr
cld
movsb
xchg
dec
outsb
sub
xchg
lcall
add
cmpsb
int3
sahf
aam
das
fwait
cltd
mov
xlat
xor
repz
lahf
jno
ret
in
cmp
push
mov
xchg
gs
aaa
jo
or
and
push
sbb
xchg
pop
mov
pop
out
dec
mov
mov
dec
jl
jecxz
lods
and
in
bound
cmp
fiadds
push
dec
sbb
dec
in
sbb
data16
lret
mov
out
scas
jecxz
and
enter
rorb
inc
rorb
sarl
sbb
xchg
mov
jae
push
xor
dec
lret
fsubs
out
lock
xchg
pop
push
sbb
mov
pop
insl
imul
mov
in
dec
xor
mov
and
inc
sbb
stos
mov
mov
add
rcrl
sbbb
push
icebp
push
fists
inc
adc
xchg
sbb
ljmp
addr16
pop
add
jbe
shll
inc
pop
das
and
and
into
adc
and
lds
xchg
in
popf
rorb
mov
sbb
xchg
in
in
addr16
xchg
dec
aam
in
or
mov
mov
cs
int3
pop
loope
pop
leave
dec
mov
and
sbb
outsb
push
roll
mov
fstp
add
xor
clc
push
adc
outsl
mulb
xchg
std
mov
insb
out
jne
repnz
push
add
pop
aam
inc
stos
repz
stc
fs
lahf
sbb
scas
sub
adc
mov
lahf
pushf
bound
cs
addb
inc
outsl
sbb
and
lods
fdivp
test
cs
xchg
push
aas
jge,pt
add
mov
movsl
xor
pop
fadds
cvtps2pd
gs
ja
lods
dec
in
cli
mov
jp
push
scas
ljmp
sbb
pop
push
loope
lahf
adc
jp,pt
or
out
and
js
lahf
icebp
enter
ds
sbb
xchg
mov
or
xor
dec
mov
scas
cs
icebp
std
out
inc
rorb
loop
gs
jbe
cmp
cmp
pop
rol
mov
setge
in
dec
or
cmp
sub
and
pop
jecxz
rclb
lock
in
adc
rorl
cld
xchg
je
mov
lock
out
repnz
scas
mov
and
loop
aad
mov
xor
xchg
inc
lret
mov
int
xchg
pushl
std
lock
in
addr16
mov
sbb
sub
daa
push
adc
data16
les
or
jns
stos
out
pop
std
push
pushf
je
xlat
cmp
dec
dec
pop
in
nop
cmp
jg
lahf
dec
dec
pop
inc
push
mov
mov
fwait
int
rorl
dec
mov
sbb
lahf
test
out
xchg
add
test
inc
in
mov
movsl
pushf
loopne
fistpl
mov
hlt
ror
dec
pop
lret
jae
test
pop
mov
lods
ljmp
adc
inc
mov
or
jp
mov
sbb
cmp
xchg
mov
jne
stc
lods
pop
sbb
mov
jp
jmp
mov
xchg
scas
pop
push
orb
mov
xchg
pop
fwait
mov
dec
bound
scas
mov
fwait
inc
jae
dec
fimuls
dec
mov
fwait
push
add
das
pop
outsl
jbe
mov
mov
xchg
pop
push
lods
mov
xlat
fnstsw
sbbb
in
outsb
sarl
xchg
or
in
xchg
mov
xchg
mov
jp
xchg
dec
fwait
push
popf
mov
movsb
repnz
mov
jg
lret
out
addr16
xchg
adc
cmp
inc
fwait
fwait
stos
or
iret
xchg
mov
out
inc
cmp
int
lcall
mov
iret
cmp
sub
dec
std
xchg
dec
repnz
jbe
ds
mov
dec
cmovle
pop
push
pop
and
ret
xor
into
jb
int3
inc
push
xchg
mov
add
gs
lds
outsb
lahf
das
shrb
int3
subb
sbb
mulb
out
fmuls
std
pop
insb
xchg
outsl
ret
xlat
push
adc
jecxz
dec
cmp
xor
dec
cmpsb
outsb
notb
loop
mov
insl
xchg
cs
jbe
sub
inc
stc
xor
pop
insb
cli
mov
mov
dec
dec
fadd
push
movsl
mov
mov
popf
xchg
mov
push
movsb
xor
inc
and
xor
cmp
jb
addr16
and
ret
jle
or
into
shr
leave
jbe
sahf
push
inc
inc
leave
pop
pusha
xor
mov
pop
ljmp
mov
iret
jns
popf
jp
data16
in
adc
add
jp
add
push
pop
xchg
icebp
push
test
cmpsl
shl
stos
mov
addr16
add
inc
ds
insb
test
add
inc
mov
mov
pop
js
jl
mov
rol
dec
loop
push
jns
in
mov
rcll
mov
lcall
jp
icebp
cmp
nop
in
cmc
mov
sub
fisttpll
lds
push
pop
push
pop
mov
mov
xchg
pop
mov
push
jle
dec
roll
cld
adc
je
mov
in
or
push
adc
clc
xchg
sub
pop
mov
pop
mov
fcmovnbe
xor
push
xor
sbb
xchg
loope
ret
push
sub
sahf
sub
addr16
add
xlat
out
lods
dec
roll
gs
xchg
outsb
sub
pop
mov
jnp
mov
or
cmp
cli
inc
mov
mov
frstor
dec
hlt
cmp
xor
mov
into
decb
aas
push
dec
rol
test
adc
mov
jns
movsb
jae
mov
sbb
xor
and
adc
mov
mov
and
das
sbb
lea
cld
lods
push
pop
adc
cli
mov
fmull
adc
mov
sub
aaa
inc
test
and
add
mov
int3
mov
xor
push
mov
rcrl
das
flds
stos
mov
out
inc
push
push
lahf
or
jne
in
hlt
dec
leave
addb
nop
in
movsl
mov
scas
cmp
pop
cmp
or
push
mov
lods
or
xchg
movsb
or
mov
fs
sbb
jae
rcll
imul
outsl
data16
pop
add
push
test
and
scas
aad
mov
pop
cli
cmpsb
aaa
push
cltd
push
outsl
ljmp
or
dec
pop
push
add
fadds
sub
mov
add
jb
dec
push
adcl
sti
movsl
fldz
clts
in
shr
inc
test
clc
push
push
and
inc
push
sbb
aad
into
jl
test
sub
xchg
arpl
cs
js
mov
jbe
adc
out
dec
and
adc
push
clc
shl
push
je
test
xlat
push
pop
jns
test
pop
test
fisubl
push
push
mov
dec
jb
out
jns
xor
or
dec
and
nop
imul
xlat
scas
in
loop
popl
jb
push
add
pop
or
mov
add
pop
xlat
arpl
lods
es
mov
sub
push
sbb
mov
in
inc
les
imul
test
test
in
mulb
test
js
pop
jne
adc
cmp
mov
xchg
movsl
mov
dec
xor
adc
or
rorl
std
sub
fs
fnsave
stos
pusha
add
cmp
popf
daa
insl
fs
imul
jl
mov
dec
mov
stos
pop
lahf
push
jmp
scas
inc
je
pop
daa
sub
sbb
ds
pop
pop
sub
nop
or
faddl
pop
lods
outsb
adc
popa
and
pop
outsb
cmp
sub
jnp
mov
pop
push
rorb
and
or
fidivrs
in
insl
add
enter
xchg
push
mulb
imul
adcl
test
jp
int
mov
popf
mov
inc
mov
xchg
fucomp
test
sub
ds
fcomps
call
pop
mov
mov
pop
subb
mov
loop
sbb
pop
pop
jb
mov
adc
sub
jae
xor
xchg
aam
push
sub
xchg
enter
cmp
movsl
in
jne
out
sbb
jle
std
adc
loop
bound
dec
inc
lret
jno
inc
mov
mov
jg
sub
imul
std
mov
lods
icebp
push
push
xchg
scas
xchg
lock
iret
xor
inc
imul
sub
lods
frstor
mov
cmp
int
out
mov
jg
les
adc
xchg
movsb
out
adc
mov
movsl
push
movsl
push
mov
inc
mov
ds
or
inc
xor
test
aas
push
dec
xor
pop
sub
mov
mov
bnd
cwtl
jg
xchg
add
mov
jns
loopne
sub
les
xchg
pop
fbstp
lea
add
mov
or
daa
sbb
fisttpll
lret
sbb
xor
into
mov
es
js
xchg
push
aad
bound
cmc
sbb
xchg
dec
jge
aam
insb
and
sti
pusha
adc
lahf
fldenv
and
jb
sbb
cmp
mov
rep
hlt
sbb
imul
sub
popf
xchg
mov
mov
sub
cmp
adcb
mov
cwtl
sub
cmp
sub
imul
fbld
mulb
jo
mov
lds
jl
imul
xor
xor
bnd
mov
push
push
call
cwtl
adc
andl
inc
out
sahf
js
ret
pop
add
pop
enter
addl
cmp
jge
rcrb
ljmp
andl
jae
mov
imul
xor
mov
pop
jg
push
addr16
adc
sub
add
inc
fidivrl
leave
xor
movl
pop
out
pop
aam
aas
scas
gs
arpl
mov
mov
int
and
lret
je
xchg
in
es
dec
or
jo
je
ljmp
push
jns
das
or
xor
sub
mov
test
arpl
pop
jnp
fwait
repz
add
pop
mov
mov
dec
leave
adcl
movsl
mov
into
mov
add
das
pusha
dec
hlt
popf
test
mov
lret
mov
sub
psubb
xchg
out
inc
mov
push
aam
movsbl
jge
push
rol
pop
xlat
push
scas
sarl
lret
add
xchg
mov
loop
andl
add
lcall
jp
cmp
cs
sbb
dec
ja
ljmp
mov
sbb
cmp
inc
fldcw
dec
sub
jecxz
cmp
mov
mov
pop
push
push
mov
xorl
cld
enter
clc
jp
and
mov
clc
test
jmp
inc
dec
aas
cltd
add
dec
fs
out
cwtl
int3
call
stc
sub
ss
dec
jecxz
fs
leave
xchg
lret
jnp
cmp
pop
add
aad
mov
jae
or
popa
sbb
gs
xor
sub
sahf
shlb
cld
sub
mov
movsb
lods
jno
les
or
push
fldenv
ja
test
add
cmpsl
jg
cmc
jmp
hlt
fistpll
xchg
shrl
fcmovb
push
aas
mov
cld
jmp
inc
add
mov
xchg
adc
arpl
leave
pop
jbe
scas
push
cmp
add
out
or
daa
cmp
out
jmp
mov
addl
mulb
stc
roll
iret
mov
sar
rcr
jp
jge
lods
test
mov
cmpsb
aad
mov
fcmove
imulb
mov
mov
jno
mov
mov
pop
mov
and
mov
out
js
stos
lret
lods
ja
loop
sbb
adc
nopl
stc
cmp
push
out
mov
int3
push
and
movsb
push
jecxz
mov
cmp
inc
sub
adc
movsb
aam
xor
mov
das
filds
sarb
loop
adc
pusha
xchg
xlat
push
sbb
jnp
push
gs
popa
xchg
dec
ds
add
rcll
adc
outsl
jae
sbb
enter
andb
cwtl
pop
push
rclb
cwtl
ss
sub
inc
and
pop
sbb
sti
aaa
jbe
push
int
iret
mov
adc
icebp
mov
mov
lods
out
inc
repz
sbb
mov
cmp
stc
xor
imul
or
movsl
movsb
mov
inc
data16
loope
in
inc
lds
addr16
add
imul
imul
and
repnz
jle
mov
outsl
js
in
test
popf
lcall
push
adc
jne
fldl
ds
jo
cmpsl
in
fwait
ss
push
pop
or
clc
pop
testl
cmc
sub
sahf
dec
push
sub
mov
aas
subb
lock
hlt
jnp
adc
sbb
jge
push
loope
mov
add
dec
adc
mov
mov
push
cmp
fdivl
jo
andl
lret
add
sbb
fwait
ret
jmp
into
mov
popf
sti
icebp
pop
mov
mov
jmp
es
ds
repz
jbe
cmpsb
fstps
inc
inc
das
mov
cmp
pop
push
hlt
ret
cltd
pop
mov
nop
dec
out
sub
dec
lds
sbb
add
jno
add
lret
scas
std
aam
push
push
es
pop
mov
inc
mov
xchg
std
push
popa
mov
mov
adc
into
cld
cmp
push
mov
fmulp
pop
call
ret
xchg
jle
popa
push
jl
stc
int3
popf
mov
mov
push
push
mov
int
pop
mov
movb
call
imul
ja
das
push
push
adc
xor
popaw
lcall
insl
push
das
pusha
stc
sub
add
cs
mov
call
mov
lret
mov
push
lds
sub
sub
push
pop
xor
bound
jmp
push
push
cwtl
adc
sbb
sbb
ret
sbb
mov
and
push
add
loopne
popf
ss
xor
xchg
mov
xor
add
mov
xor
in
loop
add
or
sti
lea
mov
mov
push
cmc
pop
stos
push
add
lret
loop
mov
loopne
jb
add
push
cmp
insb
mov
mov
lcall
cmpb
dec
inc
xchg
outsb
dec
cwtl
mov
nop
nop
xorl
aaa
lods
xchg
int
andl
arpl
push
pop
movsl
xchg
lret
stos
les
int3
add
or
pop
xor
push
out
sbb
jne
ret
adc
stos
enter
push
bsr
roll
int
adc
mov
scas
mov
jo
cltd
mov
repz
mov
faddp
jle
push
jno
push
adc
xchg
cltd
psadbw
iret
loopne
push
inc
cmpsb
inc
fsub
sbbb
ror
sbb
adc
and
add
insl
outsl
test
mov
cmpl
testl
push
push
cwtl
sbb
xor
dec
fs
push
xchg
int3
inc
pop
jne
sahf
loopne
std
cwtl
test
nop
jg
jae
testb
jmp
ret
fsts
cmp
jp
jle
xchg
jns
clc
loopne
cmp
fbld
sub
mov
out
or
not
inc
mov
sbb
cmp
pusha
repnz
ret
outsl
cmp
xchg
mov
sbb
shll
in
mov
jecxz
jge
xor
clc
jo
xor
jae
test
shll
sbb
inc
mov
adc
xchg
bound
jp
mov
iret
mov
out
nop
in
pop
test
lret
dec
shl
lds
dec
icebp
mov
lcall
inc
dec
imul
in
add
adc
mov
pop
lret
lds
lods
and
push
mov
ja
mov
xchg
mov
pop
fcmovnb
jmp
jbe
mov
jecxz
xchg
xchg
ret
shll
mov
arpl
cmpsb
sbb
mov
pop
add
mov
or
pusha
fldenv
or
mov
jge
fwait
sub
popa
jb
sbbb
push
xor
xchg
jnp
xlat
xchg
lcall
jle
dec
sahf
nop
sahf
popf
pop
leave
push
inc
push
cmp
cmp
stc
lret
inc
jmp
out
inc
stc
clc
insl
mov
in
adc
jae
scas
roll
call
repz
and
into
frstor
in
in
inc
sbb
rcl
sarb
cmpb
in
mov
cmpsb
adc
xchg
mov
negl
insb
push
adc
sub
pop
shl
jo
xlat
subb
lods
xor
js
movsb
mov
pushf
cltd
sub
in
add
jle
stos
sti
cli
je
sahf
es
push
push
ss
cmp
push
lods
mov
jo
mov
enter
fidivs
mov
sub
jbe
ja
sbb
ss
lods
mov
add
pop
sub
int
pop
xchg
jmp
adc
mov
dec
or
test
add
mov
mov
es
jnp
or
mov
jl
fs
pop
and
into
addr16
xor
roll
pop
and
movsl
enter
xchg
jne
fwait
add
jge
js
pushf
mov
sub
cli
dec
insb
add
dec
test
clc
andl
dec
pushf
pop
mov
jmp
test
jle
popa
icebp
dec
lret
ja
cld
and
or
lock
pop
pop
outsb
mov
dec
out
mov
sbb
jl
lret
adc
arpl
add
inc
movsb
mov
or
xchg
and
sbb
sbb
adc
pop
push
ret
jmp
ret
or
push
push
test
out
call
lcall
xchg
aam
jecxz
ds
fsubrp
loope
mov
cld
xchg
rorl
cmpsb
sahf
test
jns
orb
push
pop
jmp
bound
shll
xorb
add
outsb
int3
mov
jno
sbb
mov
aam
stos
lret
mov
ret
xor
xor
into
inc
and
mov
ja
test
cltd
ds
xor
inc
xor
loope
lea
cmp
rclb
push
pusha
jp
and
or
adc
imul
cmp
leave
or
test
sti
mov
lahf
leave
fidivl
jg
xchg
jbe
imul
arpl
pop
jo
jmp
jne
aas
sbb
cmpsb
fidivl
jle
movsl
rclb
test
in
pop
push
je
test
mov
jne
lcall
inc
fs
clc
push
hlt
das
in
sub
xor
loop
scas
loopne
dec
adc
mov
pusha
xchg
mov
sub
out
adc
fcoml
lods
jecxz
sub
js
sbb
adc
leave
dec
out
stos
stc
inc
adc
sbb
mov
push
aaa
je
dec
mov
imul
xor
lock
sbb
jg
les
cltd
es
adc
aaa
adc
in
sbb
test
out
stos
inc
ds
mov
cmp
and
out
or
mov
add
pop
mov
push
jecxz
out
add
fwait
push
outsb
fsubrs
jbe
std
push
shl
cwtl
out
and
arpl
std
sub
xor
add
inc
loopne
rorb
out
clc
in
xchg
sbb
jmp
aad
jle
ds
adc
mov
imul
lret
and
testb
mov
ss
mov
test
stos
test
icebp
rclb
xor
aam
and
jno
jmp
jge
xchg
xchg
and
mov
mov
movsb
arpl
jmp
or
scas
lods
cmpsb
xchg
xchg
sahf
sub
leave
mov
jo
loopne
add
or
scas
je
push
cmp
into
cmp
inc
pop
push
cld
mov
dec
fstpt
pop
sub
enter
jecxz
pop
fcomps
loope
add
adc
sbb
push
pop
xchg
rcll
cmc
iret
fwait
mov
dec
xchg
xchg
leave
pop
adc
xor
sbb
xchg
sub
aad
dec
iret
jmp
push
inc
inc
xchg
adc
stos
bswap
imul
adc
dec
popa
mov
dec
mov
das
cmpsl
mov
add
mov
push
push
cld
scas
push
mov
inc
jae
in
push
std
insl
gs
sbb
xchg
insl
push
pop
popa
jno
lods
call
int3
adc
jecxz
cli
out
lods
jae
mov
orb
mov
pop
sti
mov
popf
testl
xor
pop
xchg
je
adcl
insb
cwtl
rcll
in
add
inc
adc
xchg
mov
inc
sub
sbb
mov
das
cld
es
jbe
jnp
adc
and
repz
je
mov
pop
popf
ds
push
inc
cmp
in
cmpsb
cli
insb
arpl
shrl
mov
cmp
rolb
movsl
push
test
inc
in
movsl
test
pop
or
mov
xor
dec
addr16
aas
add
outsb
fadds
loop
jno
sti
mov
mov
push
or
cmp
xchg
dec
bound
mov
jmp
hlt
or
xor
loop
dec
jnp
mov
pop
repz
stos
arpl
mov
mov
mov
mov
call
xorl
cs
leave
dec
pop
movb
sub
xchg
ficomps
sbb
mov
lods
or
xchg
or
mov
int
js
mov
and
inc
addr16
mov
jbe
inc
push
jg
shlb
jae
ret
fadds
xchg
les
add
aas
cmp
push
mov
pop
push
cld
or
ljmp
cli
cmpsl
xchg
addl
jne
push
pop
loop
in
xchg
daa
sub
xor
mov
add
xor
dec
pop
pop
dec
into
dec
dec
repz
stos
movsl
push
pop
negb
mov
sbb
push
into
sbb
pop
xorb
sub
ja
jl
dec
mov
inc
ficompl
leave
inc
aam
lock
ret
push
jno
mov
flds
adc
lods
push
pop
fistpl
sbb
and
int
psrad
adc
repnz
jl
mov
je
mov
xlat
and
test
or
aaa
jg
in
or
mov
adc
push
sbb
scas
xchg
aaa
rolb
jnp
push
mov
ret
and
mov
sbb
dec
pusha
repz
fstps
imul
nop
fwait
push
fdivp
or
hlt
mov
scas
xcrypt-cfb
cmpsl
in
jecxz
or
test
cmp
and
into
sub
ja
mov
mov
loopne
sbb
mov
mov
sarb
cmp
cmpsl
xor
mov
mov
mov
test
pop
sub
xchg
insb
jmp
js
add
jg
sbb
fwait
cli
xchg
sbb
push
lds
das
out
xor
in
insb
pop
jne
and
das
frstor
dec
daa
push
cmc
add
ret
push
movsl
leave
icebp
add
and
test
call
push
and
dec
and
in
push
int
dec
cs
inc
push
add
cmp
add
enter
ss
dec
ret
cmpsl
dec
iret
stos
inc
ret
mov
cwtl
call
es
push
add
xor
icebp
lock
daa
out
mov
cvttps2pi
mov
gs
sub
clc
pop
mov
testl
xor
jmp
inc
int
pop
lcall
inc
push
cmp
xchg
pushf
movsl
xchg
sub
xorb
dec
std
push
imul
daa
cltd
dec
daa
mov
enter
out
test
jp
sub
popf
filds
lock
leave
rcr
add
push
cmpsl
addr16
xor
dec
sub
adc
ficoml
xchg
push
or
xor
les
arpl
sbb
je
movsl
adc
jl
lock
jno
xor
hlt
add
incl
xchg
pushf
mov
sub
sbb
rcrb
xor
ret
cwtl
sbbb
mov
jp
dec
notl
push
aad
loopne
lret
mov
inc
pop
xchg
out
in
rcr
jb
adc
push
dec
jo
ljmp
in
dec
xlat
add
dec
outsl
subb
mov
lea
adc
mov
push
mov
daa
fistpl
out
mov
adc
mov
jno
mov
mov
bound
gs
gs
cld
ficoml
int
inc
aam
fldenv
dec
loope
into
je
fs
roll
fwait
mov
xchg
cmp
mov
fildll
pushf
or
ja
jbe
push
and
enter
push
shlb
or
pop
fwait
dec
popf
or
rclb
cltd
cmc
adc
add
push
call
dec
or
xor
fidivl
rclb
imul
cmp
inc
fistpl
or
out
push
jp
or
pushf
mov
sbb
and
cmpsb
inc
js
sbb
push
ljmp
add
mov
sub
fs
push
lret
test
je
insb
xchg
in
repz
pop
push
xor
jg
in
popf
loop
jae
das
sahf
movb
mov
sarl
cmp
test
adc
or
js
mov
insl
push
cmp
shlb
inc
aad
push
sti
popf
mov
push
imul
lret
pop
pushl
lock
orb
rol
push
js
mov
daa
mov
test
rol
mov
call
loope
mov
sub
hlt
mov
sub
and
mov
fs
xlat
sub
cmp
push
adc
jge
sbbl
int3
jmp
dec
mov
cwtl
jae
or
sbb
mov
ss
sub
loopne
or
add
sub
push
bound
iret
aas
mov
xor
fmull
push
in
add
fbld
pop
pop
lods
outsl
fcompl
pop
ljmp
andb
sub
jecxz
cmp
unpckhps
xlat
dec
lds
std
or
add
inc
mov
inc
or
lods
ja
xor
cmp
movsl
pop
subl
fbld
arpl
push
stos
xchg
dec
test
mov
add
outsl
xchg
cmp
rol
ljmp
xchg
es
dec
jp
mov
dec
jl
cmp
push
add
add
xor
cmpsb
sbb
lea
outsl
je
cs
test
or
icebp
push
movsb
cmpsl
mul
xchg
sbb
imul
push
movsl
mov
std
insl
pop
lods
ficomps
fcomps
inc
jnp
mov
jo
dec
xor
insl
bound
pop
mov
xlat
and
sbb
test
out
ja
cmpsl
and
add
mov
mov
popa
cld
adcb
scas
or
out
inc
pop
fcompl
ficoml
fiaddl
hlt
mov
mov
lahf
push
test
outsl
jp
popf
inc
cld
ja
call
cmp
sbb
pop
sbb
pop
movsb
mov
hlt
lods
in
pop
sbb
dec
or
lea
xchg
pop
push
in
push
sbb
out
cmc
mov
lcall
out
dec
pop
testb
test
imul
fs
roll
scas
jge
repz
mov
mov
cld
jmp
movsl
mov
test
jbe
clc
mov
mov
dec
jg
sub
negb
das
ror
xor
psllq
imul
test
fisttpll
leave
pop
repz
imul
or
cmp
sti
pushf
cltd
dec
jno
lods
dec
ljmp
or
fcmove
push
pop
mov
mov
je
insb
cmpb
mov
jmp
enter
dec
inc
sti
push
shll
mov
sub
out
int3
cwtl
sub
jb
out
push
bnd
inc
inc
inc
xchg
xchg
les
dec
or
testl
mov
or
ret
jg
jb
mov
aam
mov
mov
cmp
loop
or
push
adcl
dec
shl
insl
ret
pop
dec
sbb
or
icebp
push
sarb
repz
and
leave
mov
dec
dec
scas
shll
stos
hlt
imul
add
lahf
out
add
mov
sub
sti
push
xor
sbb
dec
push
inc
pop
insb
cmp
push
cwtl
lea
call
stc
xchg
test
mov
add
or
lods
and
push
cmpsl
push
addb
jle
push
mov
in
stos
shrb
add
test
popa
test
push
mov
scas
jg
sub
fcmovnu
popf
sbb
ds
mov
in
mov
adcb
lret
into
sub
and
mov
dec
pop
push
push
or
shr
push
fsubrs
add
imul
push
pushl
dec
out
in
and
aad
in
repz
pop
push
in
jbe
decl
adc
outsb
in
dec
fcomi
insl
adc
and
sbb
mov
adc
jbe
sbb
enter
daa
and
in
fdiv
hlt
push
mov
add
lcall
mov
je
les
imul
inc
fidivs
loope
adc
and
dec
inc
popa
mov
mov
or
nop
out
out
inc
add
movsb
stos
and
lods
mov
add
daa
cmp
dec
mov
bswap
out
xor
mov
and
aad
fsubrs
mov
pop
dec
aaa
add
push
add
mov
int3
popf
mov
mulb
adc
cltd
inc
xchg
cmpsl
fnsave
push
dec
in
inc
xchg
ljmp
sbb
stos
sbb
aas
out
jmp
stos
aaa
push
jns
dec
aas
shll
movsb
pop
inc
ljmp
push
in
push
sub
shl
mov
cmp
fcoml
imul
stos
inc
ss
and
scas
into
loop
sbb
xchg
lahf
shll
sbb
sahf
xchg
movsb
sbb
shrb
js
push
cmpsb
jne
lret
scas
sti
pop
sbb
inc
mov
xlat
adc
cmp
ret
into
jp
adc
nop
pop
sbb
jns
movsl
dec
cmp
or
in
stc
mov
movsb
mov
mov
sahf
out
mov
xchg
out
aam
out
mov
addr16
cmp
sbb
out
push
or
insl
mov
adc
and
sub
adc
dec
adc
jecxz
arpl
xor
mov
jno
outsl
sub
imul
push
movb
popf
fcoms
mov
sub
inc
jne
int3
push
sub
loopne
push
sti
mov
enter
aaa
mov
dec
mulb
pop
jg
lock
movsl
ret
int
nop
outsb
xchg
loopne
leave
test
lds
sbb
lea
add
mov
cmp
outsb
add
data16
push
jo
imul
push
mov
fxtract
scas
int
mov
jns
lods
mov
mov
pop
add
mov
mov
shll
dec
or
dec
stos
and
int3
testl
adc
sti
loop
and
lret
scas
jae
je
test
subl
xor
mov
ret
roll
mov
jno
or
adc
jmp
xor
imul
mov
jno
mov
mov
inc
sub
jae
into
adc
int3
add
je
mov
jp
or
imul
cs
out
xlat
jnp
mov
loope
adc
in
add
fidivrl
add
mov
push
pop
into
xorl
pop
mov
sahf
push
lods
or
sbb
xor
xchg
jle
adc
cwtl
stos
push
int
adc
dec
cmp
test
sbb
fisttps
movsb
andl
out
repnz
outsl
sti
imul
dec
mov
adc
lahf
in
pop
mov
jb
adc
andb
sub
insb
jbe
or
dec
pop
rclb
fstps
dec
xchg
dec
pop
dec
or
movsl
inc
mov
push
addb
cmp
cmp
sbb
inc
mov
loope
mov
xchg
mov
dec
jge
movsb
add
sub
out
dec
add
aam
push
push
cmp
mov
aad
shrb
inc
std
xor
mov
mov
sub
inc
push
and
push
jl
leave
mov
push
xchg
jle
stos
or
inc
jle
popf
cmp
popa
or
jge
pusha
iret
movsb
xchg
adc
lock
daa
les
je
lods
jns
sub
mov
inc
pop
or
or
cld
jo
imul
and
pop
mov
cmp
das
stos
mov
cs
jp
int
inc
inc
test
adc
iret
adc
cmpsl
xchg
in
adc
sub
enter
mov
ja
push
dec
push
and
inc
popf
ljmp
push
jg
adc
insl
xchg
dec
or
roll
mov
push
repz
fwait
sar
and
push
inc
ss
and
dec
cltd
mov
cmp
jl
sbb
cmp
icebp
push
pop
xchg
dec
xchg
paddd
xchg
negb
fisttpl
clc
and
mov
jnp
mov
jp
push
insb
jle
sahf
fistps
repnz
dec
test
stc
sbb
mov
add
negl
shrl
das
xor
ljmp
stc
sarb
xchg
enter
pusha
xor
or
cltd
sub
adc
out
sub
mov
imul
lea
cmp
push
call
push
cmpsl
sti
fwait
call
pop
xor
outsl
shl
xor
pop
sbb
add
shlb
sub
int3
mov
ja
adc
or
jne
inc
xor
sbb
in
fcmovnb
inc
in
mov
mov
dec
ret
mov
cwtl
test
pop
mov
xchg
mov
inc
xchg
clc
enter
sub
in
jmp
push
ror
dec
mov
sub
cli
call
or
test
mov
sbb
rolb
aas
aad
lods
push
cld
lret
pop
or
arpl
leave
and
cmpsb
shll
adc
cmp
test
mov
insb
inc
jge
jne
adc
mov
push
jl
mov
lcall
or
daa
sbb
pop
dec
dec
fsubrl
lcall
push
test
call
mov
jg
das
sub
cmp
cmc
das
adc
push
jae
cmpsl
fcoms
cs
fwait
or
enter
call
aaa
inc
mull
jg
cmp
into
rcrl
pop
ret
adc
cmp
jno
pop
pop
outsb
pop
clc
out
jo
push
push
scas
test
sarb
iret
lods
mov
mov
in
and
fwait
sbb
mov
movsb
and
loop
fcmovnbe
js
add
std
pop
cmpl
or
add
pop
xchg
gs
xor
mov
dec
sub
test
lcall
mov
adc
inc
fs
push
insl
push
dec
fldl2t
iret
jbe
in
xor
mov
xlat
jns
mov
jl
call
movsb
les
test
dec
test
mov
mov
mov
cmpsl
sub
fiadds
inc
xchg
clc
xor
lret
xor
sar
out
jl
popa
push
sbb
adc
test
dec
and
push
pushfw
shl
push
and
push
xchg
push
cld
scas
testb
bound
sbb
or
iret
pop
sbb
jbe
inc
xor
and
cltd
adc
imul
sbb
and
shrl
dec
jo
push
inc
xchg
sti
pop
gs
push
addb
pop
stos
mov
inc
inc
xchg
nop
setb
dec
popf
inc
andb
sti
push
xchg
shll
lds
pusha
add
cmpsb
in
and
xchg
into
jns
into
aaa
mov
or
jno
icebp
mov
mov
cmp
mov
loopne
in
xchg
sub
lcall
xor
test
xchg
movsl
jb
ja
fadd
or
out
cli
mov
inc
lret
sbb
mov
sbb
aaa
xchg
shlb
aaa
inc
push
les
addr16
mov
cmpsb
cmc
xor
cltd
mov
dec
js
pushf
mov
mov
jae
push
aas
aam
es
inc
xchg
sub
ljmp
es
aaa
popa
cli
ljmp
add
ds
push
cmp
outsb
mov
scas
xor
icebp
dec
sbb
mov
lret
andb
iret
dec
dec
sbb
inc
mov
inc
cmp
lcall
call
test
popa
and
adc
fcmovnbe
je
pop
or
push
push
cld
xchg
pop
into
xchg
pop
xor
int3
xor
xor
sahf
pusha
inc
neg
imul
mov
jo
or
xchg
pusha
fdivl
jno
mov
xchg
lea
push
test
and
int
dec
andb
push
mov
ror
inc
fstpl
push
cmpl
andl
sbb
xor
inc
cli
lods
test
pop
in
add
ss
xor
pop
xchg
add
cld
sahf
xor
mov
imul
les
outsl
mov
popa
or
xor
sbb
je
enter
fcoms
inc
pop
push
jp
pop
pop
xorb
shrl
adc
faddl
sub
cmp
jo
setne
xchg
popf
jno
loopne
mov
je
stc
xchg
ljmp
shlb
sbb
rorl
psubb
inc
mov
aaa
insb
cld
add
push
jge
inc
pop
pop
orb
inc
mov
xlat
sbb
sbb
dec
jl
push
es
ljmp
jne
iret
push
or
out
mov
mov
int3
inc
stos
mov
ret
bound
lret
test
and
adc
loop
mov
jno
ljmp
loopne
xor
dec
pop
inc
push
fisttps
rcrb
and
mov
jl
xchg
loopne
mov
pop
leave
adc
cltd
lods
ficomps
fnstsw
lock
push
jo
int3
adc
pop
les
inc
rcrl
shll
dec
mov
inc
dec
stos
stos
popa
cs
or
lcall
and
sti
pop
popl
jp
dec
pop
push
pop
adcl
out
mov
xor
mov
js
lea
mov
and
rorb
shlb
dec
lea
or
loop
sub
negl
xchg
or
sbb
jl
out
mov
dec
movsl
add
out
out
pop
push
fnsave
in
js
xor
out
lret
sbb
inc
or
rcl
push
fcmovnb
in
test
sti
js
xor
test
test
cmc
sub
es
push
and
lahf
loopne
stc
xchg
mov
sahf
push
xchg
aam
push
sub
call
mov
push
test
jle
dec
mov
out
or
pop
lret
out
loope
adc
enter
nop
loop
shl
push
rolb
push
xor
fs
andb
jae
mov
enter
enter
ret
xchg
adc
mov
jo
aas
inc
ja
cmp
xor
jl
pop
and
adc
idivb
jne
les
pop
dec
sbb
add
sub
mov
adc
pop
ficoms
sub
outsl
or
out
xchg
outsl
mov
ljmp
lret
ret
dec
fildl
lahf
js
cmpsb
xchg
pop
push
lahf
jle
pop
adc
add
mov
or
fimull
push
mov
mov
push
push
call
test
mov
xchg
fs
push
and
icebp
mov
mov
stos
repz
test
pop
mov
shr
push
push
in
add
lret
add
xchg
jmp
dec
cltd
jb
dec
shrb
sub
bound
mov
jb,pt
jg
insl
mov
popa
lcall
leave
mov
in
push
adc
int3
icebp
mov
inc
icebp
dec
mov
and
mov
mov
fstpt
lds
inc
and
xchg
push
xor
jne
mov
test
sti
int
adc
leave
mov
mov
out
loopne
inc
rcll
sub
iret
pop
add
test
and
imul
pop
rolb
add
jecxz
in
mov
in
adc
lret
fs
stos
fs
add
ljmp
lock
cvttps2pi
add
pushf
ret
mov
fwait
inc
inc
mov
leave
insl
mov
sub
mov
xor
pop
ficoml
pop
xor
movsb
ja
inc
int
and
popl
repz
sbbb
jnp
pop
push
mov
loopne
std
push
sbb
dec
mov
repnz
call
lock
in
nop
negl
sub
jbe
jmp
xchg
into
mov
int3
outsb
fs
imul
jp
mov
add
cmc
bound
xorb
fucomip
aam
cld
cmp
xor
shrl
xchg
js
inc
inc
cld
out
scas
mov
stos
xor
jp
inc
lahf
ds
xchg
mov
aaa
sbb
mov
and
adc
mov
push
outsb
sbb
mov
adc
or
push
sbb
push
push
loopne
shr
pop
pop
mov
int
cltd
popf
jbe
dec
xchg
or
fwait
inc
sub
adc
sbb
das
popa
lcall
push
stc
imul
test
insl
add
push
pop
inc
loop
ret
pusha
and
and
int
movsl
sti
repz
add
xor
adc
push
lret
icebp
or
cmpsl
xchg
cmpsl
insb
push
pop
inc
xchg
pop
mov
or
imul
movb
cmc
in
dec
icebp
xor
mov
scas
cmp
lret
icebp
jne
fcmovnu
cmpsb
sbb
addb
out
sahf
les
iret
push
fs
sahf
les
and
outsb
lods
xchg
cmp
or
sbb
mov
cwtl
adc
mov
sti
jmp
mov
mov
sarb
inc
jns
add
fcomps
mov
jg
js
rcll
into
test
in
mov
push
cmp
dec
pushf
push
push
cmp
cmp
stc
push
stos
inc
lahf
loop
int3
xchg
push
adc
or
cmp
push
daa
jnp
pop
hlt
adc
and
and
mov
xor
testb
dec
mov
xchg
or
dec
inc
xor
sbbl
scas
add
xchg
andb
pop
inc
push
pop
push
out
cltd
popa
scas
test
mov
insl
jp
adcb
decl
pop
aas
lcall
jg
sbb
or
jne
rcll
pop
mov
cmc
rcrb
loop
jb
shr
mov
xchg
cwtl
negl
sahf
push
push
mov
sbb
xchg
in
fcoms
push
and
and
divl
push
dec
dec
pushl
lret
scas
sbb
lahf
sub
mov
jno
cmpsb
jae
mov
mov
jmp
je
mov
jp
nop
cwtl
notl
xchg
daa
inc
call
repnz
mov
ljmp
imulb
xchg
clc
mov
ficomps
adcb
mov
pop
cmpsl
pop
push
js
lock
sti
xchg
fwait
sbb
inc
xchg
push
pop
gs
adc
mov
rorb
cmp
lods
mov
or
loop
ja
cltd
mov
les
mov
scas
adc
jno
sahf
inc
lods
jp
bound
test
push
xchg
dec
mov
outsb
fldt
jmp
ret
stos
hlt
xchg
cwtl
xchg
shld
adc
xchg
xor
push
adc
sbb
clc
stos
xchg
dec
shlb
sub
cli
cmp
das
stos
aad
ds
mov
mov
jle,pt
arpl
ds
or
xlat
stos
test
pop
fists
adc
pop
loop
insl
adc
mov
cs
in
xor
scas
mov
cwtl
fidivrl
loop
mov
xchg
sub
movsb
add
xchg
out
addr16
int3
dec
out
das
sbb
addr16
arpl
dec
outsb
jns
xchg
xor
mov
mov
ljmp
lea
cmp
cmp
add
or
sub
imul
push
ret
cmpsl
mov
sbb
xor
fimull
mov
cmp
push
xchg
hlt
enter
roll
pop
dec
add
push
pop
fs
jb
pop
cmp
fs
int
data16
add
cli
pop
push
xchg
int
test
add
outsl
xlat
xchg
sahf
sti
mov
vpperm
inc
pop
jge
sahf
and
addb
dec
mov
mov
mov
adc
iret
dec
mov
loop
mov
jle
pop
sbb
popa
push
xchg
lock
add
fcomps
jae
call
shrb
cmp
fisubs
push
pop
pop
push
repnz
mov
push
mov
mov
mov
xor
jb
out
idivb
add
mov
aaa
test
xor
jbe
bound
xorb
ljmp
cwtl
loopne
pop
es
std
mov
mov
cld
inc
sub
xchg
bound
aaa
inc
mov
out
sbb
jbe
jmp
dec
inc
push
pop
mov
sbb
jge
fsubrl
in
xor
push
add
leave
pusha
sub
sub
in
pop
cmpsb
or
xor
or
push
in
jnp
sarl
xor
incb
adc
insl
mov
mov
mov
negb
xchg
jp
in
cmp
push
cmp
push
sub
insb
das
xchg
inc
das
push
xor
movsb
mov
das
stc
outsb
mov
sub
or
mov
xor
inc
mov
xor
arpl
cmp
inc
mov
mov
jp
cmc
push
push
fwait
nop
jg
push
mov
push
mov
loop
js
xchg
jbe
les
fwait
cmp
and
mov
adc
into
ja
pop
jmp
dec
test
xchg
and
sar
push
pop
hlt
sarl
sbb
dec
sub
push
cli
cmp
xlat
push
sti
xchg
iret
in
mov
das
push
vmread
popa
inc
pop
cli
je
jle
andl
jmp
cltd
test
call
ret
je
cltd
inc
insl
pushf
pop
jmp
mov
sub
mov
push
sbb
sub
adc
ljmp
cmpsb
test
mov
icebp
mov
call
and
push
in
loop
jmp
jnp
insb
adc
pop
test
lret
jne
dec
add
pushf
pop
insb
jl
dec
xlat
sahf
dec
daa
xchg
cmovb
sbbl
sahf
and
insb
nop
ljmp
test
adc
into
rcrb
addr16
inc
loopne
xchg
mov
rcll
and
inc
outsb
add
pop
out
movsl
in
sub
dec
cs
ror
sbb
or
cmp
jle
dec
sub
dec
add
aaa
rorl
sub
cli
ret
jecxz
dec
lock
push
out
lcall
cmpsl
hlt
testl
hlt
xor
pop
adc
push
push
fdivrl
out
sbb
dec
test
lcall
int
add
mov
cmp
aad
cmc
lret
adc
jle
push
and
mov
insl
mov
push
and
pop
mov
jne
fsts
xchg
pop
into
rcll
int3
sub
popl
jb
popf
cmpsl
test
rcl
lods
inc
inc
and
mov
mov
inc
and
cmp
aaa
aam
or
jp
mov
adc
stos
es
mov
stos
cmp
aas
pop
fidivs
mov
push
push
orl
ja
icebp
sub
xor
insb
das
and
jl
adc
inc
mov
push
nop
add
mov
inc
stc
sub
or
xor
loopne
xchg
es
mov
pop
mov
out
cmp
or
aam
insl
push
xor
dec
sub
gs
adcb
mov
out
mov
xchg
jmp
pop
inc
fldt
int3
mov
mov
imul
stos
ss
jmp
mov
mov
lcall
int3
data16
adc
jnp
fcomi
jb
pushf
out
in
inc
test
mov
repnz
dec
fdivs
adc
mov
stos
mov
sub
imul
ficompl
xor
jb
repz
cmp
or
lea
int
mov
xor
jle
inc
in
out
add
sbb
movsl
icebp
mov
inc
fwait
xor
shl
in
cmpsl
inc
jo
cmp
mov
ss
je
mov
scas
orl
stos
xor
xchg
xchg
sbb
movsl
adc
jge
test
cmp
add
mov
sub
pop
pop
cmp
aad
adc
push
imul
jge
ret
test
cmp
cmp
repnz
ds
test
mov
int
add
mov
and
xor
xorl
test
push
addr16
sub
sahf
into
clc
mov
add
lock
outsl
pop
sub
mov
push
in
scas
outsb
insb
fcoms
jb
test
pop
int
sbb
lock
mov
xchg
inc
add
orl
lret
cmp
jl
ret
into
test
mov
xchg
orl
int3
push
jb
outsb
mov
mov
pop
inc
mov
pop
and
xchg
pop
jl
sahf
push
dec
fwait
testb
lcall
addr16
push
cmpsb
lahf
sar
outsb
jne
test
imul
dec
out
add
mov
idivb
scas
push
out
inc
mov
bound
pop
repnz
dec
jmp
mov
jge
fdivr
popf
test
gs
pop
xlat
sub
pop
mov
pop
add
cmp
in
shrl
jb
inc
stos
pop
pop
scas
xchg
xchg
mov
cmp
xchg
xlat
stos
xor
rcll
fisubrl
inc
aas
push
push
add
lret
lock
push
xor
stos
xchg
ds
ja
xchg
inc
pop
pop
adc
mov
jmp
jp
adc
pushw
jne
into
cmp
cmpb
aad
ficoml
bswap
loope
lahf
stc
jne
add
cs
std
jns
lret
shlb
inc
mov
push
xchg
imul
push
cmp
inc
push
icebp
pop
pop
or
pop
add
sar
iret
incb
pop
mov
sarl
repnz
loope
popf
jmp
sub
mov
bswap
mov
mov
aas
int
test
andl
push
int
imul
xchg
test
sbb
push
mov
test
or
mov
adc
addl
js
add
pop
push
or
adcl
xchg
xchg
mov
int3
or
adc
inc
loopne
lahf
andb
dec
xchg
dec
dec
pushf
repnz
mov
xlat
divl
frstor
mov
cmp
popl
sar
adc
adcb
loopne
fwait
sub
dec
push
sub
lock
out
sbbb
mov
push
pushf
push
sar
or
or
dec
sub
movsl
push
jae
mov
subl
inc
add
lahf
lods
pop
out
pop
add
jne
jge
inc
pop
inc
sbb
popf
enter
fsub
test
or
lods
mov
push
mov
mov
fistps
clc
add
sarb
lcall
jae
mov
or
loope
mov
mov
jns
cmp
jno
mov
aad
popf
aam
rcrb
fsubrl
sbb
sbb
mov
daa
adc
pop
outsl
and
or
pop
inc
push
call
das
js
dec
in
lahf
aam
leave
mov
aad
fistps
ret
cmp
or
mov
lcall
fucomp
push
mov
lret
rclb
sarl
int
fisubl
and
and
jbe
cmp
arpl
push
push
or
dec
in
dec
mov
test
pcmpgtw
orb
movsl
pop
jmp
into
or
push
or
mov
dec
pop
mov
adc
gs
sti
mov
add
push
push
test
movsl
stos
aas
jmp
out
add
mov
popf
sahf
and
push
arpl
adc
mov
mov
iret
push
xchg
sub
pop
push
mov
jne
add
outsl
insb
aad
lods
add
pop
mov
xchg
int3
shrb
loopne
lds
inc
out
mov
xor
dec
sbb
xchg
add
push
arpl
sti
mov
mov
lods
pushf
pop
xor
dec
mov
push
sbb
pop
sub
movsl
ss
pushl
or
mov
test
cld
lock
xor
ss
adc
mov
and
outsb
mov
jne
leave
jnp
push
mov
sahf
shld
add
and
sbb
dec
cld
out
sbb
popa
pop
inc
sahf
jecxz
jmp
sarl
adc
sub
adc
jmp
clc
jmp
shrl
scas
out
int
inc
out
cltd
repnz
adc
adc
psrld
inc
aam
xor
enter
iret
cmpsl
lods
aaa
lahf
adc
movsl
stos
and
cmp
lahf
mov
xchg
imul
imul
cmp
push
cmp
sahf
jbe
clc
fs
xchg
inc
adc
lret
sub
and
dec
inc
insb
cmpsl
movsb
dec
push
test
push
sub
push
add
cmp
sub
scas
ret
xlat
stc
xchg
sub
pushf
stos
and
bound
fistps
cmovg
xchg
fadds
call
lock
shr
and
xlat
dec
das
adc
test
jge
hlt
jle
inc
insb
dec
push
faddl
cmp
loopne
clc
lcall
je
adc
and
cld
dec
std
nop
jmp
adc
roll
cli
mov
adc
push
sbb
fldl
mov
xchg
push
repnz
pop
into
xchg
jae
into
pushl
xlat
cmp
push
js
inc
cmp
in
xor
mov
rolb
xchg
pusha
inc
dec
cmovno
push
pushf
mov
or
sub
mov
jmp
inc
lds
xor
jl
scas
jns
psrlw
mov
fcmove
push
ja
stc
adc
loopne
xchg
gs
pop
xor
jns
test
mov
notb
mov
pop
dec
lcall
xchg
push
xor
cmp
int
mul
data16
ljmp
adc
aad
mov
jle
aad
iret
addl
sti
push
test
rclb
lods
push
xlat
push
stos
adc
in
outsl
cld
hlt
hlt
xchg
or
lods
or
and
imul
or
outsl
sbb
es
fsts
and
stos
sbb
inc
das
mov
outsl
ljmp
pop
ja
cmpsb
leave
xor
data16
cld
in
cs
sarl
jae,pn
mov
jbe
cmp
pop
pusha
fnstenv
sub
add
lahf
jbe
rorb
aam
push
outsl
mov
mov
fs
xor
sbb
fisttpll
sub
data16
stos
cs
cld
or
add
test
lods
or
pop
push
push
cld
dec
and
lods
lahf
in
sbb
push
lea
jne
mov
adc
sar
pop
dec
aaa
sub
xchg
lret
dec
xchg
into
xlat
jne
dec
les
mov
test
mov
sbb
out
in
lods
fbstp
test
int
or
add
jl
lret
push
inc
repz
and
push
adc
pop
mov
push
imul
fnsave
into
mov
outsb
jmp
mov
or
mov
pop
lret
lock
pop
dec
cs
je
movsl
mov
xchg
mov
or
cwtl
xor
mov
jae
lahf
fs
shlb
nop
aad
in
dec
mov
xlat
pusha
sbb
fsqrt
les
idivl
or
js
arpl
pop
or
jb
pop
int
cmpl
cmpsb
std
vpmovswb
lods
push
sbb
test
leave
mov
mov
lock
in
inc
test
clc
inc
push
push
mov
call
cmp
xlat
jmp
loopne
mov
xchg
pop
adc
jp
clc
xor
push
sar
aaa
lods
and
ss
add
psllq
xchg
jae
adc
inc
insl
xchg
lea
shlb
pop
rolb
scas
add
cmc
mov
mov
pushf
adc
maskmovq
idivl
mov
xorl
cli
in
stc
dec
cmp
add
subl
adc
cs
sub
xchg
lret
loope
fists
mov
pop
test
jp
ja
ficomps
cmpsb
add
or
in
aam
repz
sbb
popl
add
inc
lcall
fidivl
jl
movsl
aas
xor
mov
and
out
mov
test
mov
lahf
mov
clc
sub
ror
xadd
scas
xchg
das
js
jb
adc
iret
imul
lods
xorl
inc
add
dec
and
inc
dec
push
cmp
jge
xor
rcrb
xchg
dec
addr16
jecxz
xchg
ja
jb
das
xchg
repz
rorl
pop
and
push
cltd
mov
sarb
stc
add
fistpll
sub
dec
inc
hlt
sub
dec
sarl
jg
mov
into
jl
aad
divl
add
mov
push
clc
pop
cltd
sbb
lock
sbb
push
mov
sbb
iret
push
push
sub
dec
in
dec
testl
add
mov
mov
ja
push
pop
xor
cmp
sbb
inc
add
xchg
out
pop
lods
bound
das
pop
adc
and
jp
into
cmp
fistl
adc
push
rolb
mov
lret
xchg
mov
sbb
mov
bnd
xchg
in
imul
popf
mov
nop
out
push
rorl
lcall
sub
lods
pop
lret
pusha
repnz
leave
pop
test
nop
in
in
mov
add
mov
sbb
jl
inc
jo
inc
pop
or
inc
push
xchg
xchg
pop
pop
scas
mov
and
int3
fcmovnu
loop
adc
movsl
xchg
mov
iret
jge
movsb
mov
sub
sub
nop
mov
jae
sub
or
add
mov
add
pushw
and
stos
xchg
test
repz
push
add
push
icebp
mov
cmc
lods
fwait
cmp
iret
sub
rcrl
push
lds
out
int
add
ret
mov
cmp
xor
mov
pop
jg
jge
push
cmp
add
addl
jo
xchg
xchg
cli
add
and
lcall
movsb
xchg
les
outsb
push
in
test
mov
mov
adc
add
repnz
sbb
sbb
ja
pop
lds
jae
cli
adc
adc
xchg
data16
loope
cmp
fildll
mov
into
inc
scas
xchg
mov
loopne
inc
loope
dec
pop
dec
and
mov
sbb
pusha
daa
push
inc
inc
or
mov
sbb
pop
sbb
insl
add
into
mov
rcrb
mov
pop
push
sarb
pop
inc
loopne
push
pusha
out
cmp
fisttpll
mov
cli
cmp
les
pop
inc
mov
xchg
nop
xor
mov
roll
cld
xchg
xlat
cmpsl
das
js
aad
lret
jne
and
xchg
xor
repnz
mov
jno
xchg
xchg
mov
stos
and
push
outsb
out
roll
lods
cwtl
inc
test
into
in
jno
cmpxchg
inc
dec
mov
add
js
jb
mov
sub
push
mov
sbb
jnp
sbb
or
ljmp
mov
sub
push
dec
ret
xchg
stos
fcmovbe
fwait
rclb
mov
mov
push
pop
inc
pop
fisubrs
pop
push
xchg
test
inc
lock
adc
subl
pop
clc
dec
imul
loop
leave
repnz
into
ffree
or
mov
jmp
xchg
lea
mov
rcrb
lds
cmp
jg
add
fcomp
ret
mov
pop
cmp
sub
or
mov
lcall
loope
dec
das
cmp
dec
cmpsl
pop
pop
inc
enter
ret
decb
mov
lods
pop
push
enter
bound
hlt
inc
daa
mov
and
daa
roll
out
mov
mov
mov
xor
clc
loop
cmpl
and
hlt
add
gs
popa
fistl
int3
mov
dec
ss
call
sub
adc
lret
fcoml
inc
jo
dec
test
pop
sbbl
orl
scas
fmuls
pop
mul
ret
and
jns
or
jns
test
sub
int
add
and
cmp
cmp
xchg
sbb
in
xchg
inc
into
jmp
stos
add
mov
cmp
adc
lods
repz
and
int
fdivp
insb
stc
mov
fsubs
jo
shl
sub
dec
adcb
adc
adc
lock
xchg
jge
mov
fstpl
jle
xacquire
test
mov
xchg
jmp
gs
popf
ret
out
loope
ljmp
fstps
or
test
sti
pop
out
fmulp
add
stos
mov
out
flds
mov
jle
pop
cwtl
sub
ja
pop
xchg
data16
gs
dec
sub
xchg
mov
xchg
fwait
je
enter
xor
or
mov
and
mov
ret
add
icebp
sbb
lahf
or
out
xchg
push
pop
xchg
pop
cli
scas
hlt
sub
inc
push
testb
inc
rcll
ret
sbb
jg
sub
sub
in
cld
mov
aad
stos
imul
pusha
inc
xor
rcrl
mov
stc
mov
hlt
mov
in
rcrl
inc
sbb
sbb
and
lahf
add
lret
add
stc
testl
cmp
test
inc
pop
orl
xchg
je
xchg
and
and
adc
decl
fdivr
cs
popa
divb
sbb
xchg
jle
xrelease
cmovle
bound
dec
flds
adc
sbbb
pop
jmp
dec
dec
mov
sub
push
cmp
test
and
or
fisttpll
push
mov
loop
mov
mov
sbb
test
loop
cs
lods
or
or
stos
pop
mov
nop
call
lfs
adc
jnp
ficoml
test
lret
mov
add
push
mov
sbb
xchg
add
int
movsb
fistpll
sbb
xor
cmc
and
lret
or
aad
dec
sbb
loopne
dec
mov
lds
lcall
stos
pop
add
jnp
cmp
and
mov
pop
mov
mov
inc
testb
mov
add
sbb
hlt
cwtl
xor
cmp
outsb
outsl
mov
aam
shl
shrl
aas
gs
jge
cmp
insl
sbb
out
nop
cmpb
sbb
sbb
push
cmp
mov
gs
xor
mov
push
orb
ljmp
out
cmp
jg
icebp
pop
mov
in
xor
push
mov
push
xor
in
pop
insl
add
into
das
xor
xchg
ja
xlat
daa
sarl
jmp
jmp
arpl
lret
mov
lock
inc
jmp
mov
in
dec
scas
outsb
or
fcompl
out
mov
xchg
adc
jmp
cwtl
fmuls
out
pushf
mov
mov
xlat
cs
sbb
test
pop
xchg
out
add
adc
scas
push
jp
cmp
sbb
lock
lret
test
mov
out
cmp
stos
or
dec
add
push
and
movsl
mov
jo
cmp
jmp
loop
sbb
mov
jg
pop
ljmp
mov
shl
imul
mov
negl
cmpsb
lock
cs
push
stos
mov
scas
out
lods
lea
ret
aaa
hlt
jae
jne
or
rorb
out
xorb
and
push
push
arpl
in
adc
xchg
xchg
pop
mov
sbb
pop
jg
testl
cld
and
orb
sub
cmpsb
popa
jle
and
mov
in
inc
pop
dec
and
test
imul
daa
call
ds
pop
or
das
sub
mov
lcall
inc
pushf
jae
incl
aad
mov
addr16
push
lret
xlat
inc
stos
mov
nop
cwtl
sub
add
mov
sub
dec
dec
roll
mov
daa
and
push
jo
dec
mov
pusha
lahf
push
mov
sahf
adc
rcll
divb
dec
std
cmp
push
in
mov
sbb
mov
inc
aaa
mov
loope
sub
cmp
rorl
test
lahf
push
xchg
xchg
cmp
sbb
fisttpl
stos
flds
or
cld
sbb
fdivs
and
lock
cs
ja
ss
jno
out
repz
sub
ja
mov
adc
mov
add
shlb
in
loop
mov
insl
inc
push
lahf
repz
mov
movsb
std
andl
mov
fs
mov
outsb
rorb
test
bound
les
adc
shll
sbb
outsl
mov
daa
and
fimull
cmpsb
jp
repnz
mov
xlat
pop
add
push
mov
jo
icebp
jae
add
push
jno
mov
push
xchg
lcall
jg
jmp
std
test
xlat
pop
rol
cmpsb
sbb
testb
mov
scas
pop
out
or
faddl
xchg
add
cmp
loope
jmp
pop
dec
clc
inc
stc
out
cmpsl
ds
xchg
fisttpll
xchg
add
dec
mov
insb
rcll
cld
jg
enter
push
pusha
cld
sub
xor
movsl
mov
sahf
ret
loop
or
cmp
push
ss
xchg
pop
mov
lahf
lds
out
push
aad
cld
out
pop
mov
jl
or
jae
scas
cld
int
mov
cmpsb
cmp
repnz
enter
xchg
je
lret
mov
mov
push
push
out
mov
shl
xchg
ret
stc
sub
lcall
mov
sbb
out
ss
pop
les
lret
jecxz
lret
xchg
mov
out
sub
movsl
stos
push
push
push
les
mov
adc
ds
aam
inc
push
mov
jmp
js
adc
or
pop
mov
sbb
enter
out
xlat
imul
push
push
and
jnp
add
out
mov
addr16
jnp
or
in
pop
dec
insb
enter
mov
mov
sub
out
ss
jbe
sbb
inc
test
and
outsl
pop
pop
mov
push
popa
sub
hlt
ficoms
and
xchg
cmc
xchg
dec
loop
addr16
push
inc
mov
and
dec
mov
es
adc
ret
or
aas
jo
pop
ret
or
in
data16
repnz
fldl
xchg
push
icebp
out
xor
aaa
notl
dec
adc
xchg
jo
in
jo
cmp
stos
inc
or
add
mov
sub
fxrstor
adc
jl
push
pop
scas
mov
es
sub
loop
arpl
iret
dec
daa
and
lcall
or
divl
mov
sbb
insb
inc
lods
mov
cmpsl
push
xchg
xor
fnsave
cmc
inc
loop
dec
rorl
push
mov
aaa
cmpb
xchg
outsb
jmp
or
es
jo
addr16
lods
ret
in
fisubs
cwtl
add
je
cmp
aam
inc
dec
and
out
mov
fsubrs
dec
adc
push
pop
test
out
mov
test
fistpll
mov
ffree
push
jbe
stos
inc
xor
std
test
jno
lea
sub
pop
jg
mov
hlt
jae
popa
mov
xchg
fninit
cmp
test
push
xchg
push
mov
and
cmp
insb
sbb
fcmovnb
cmp
xchg
aas
lds
insl
dec
cltd
scas
repnz
scas
bound
sarb
mov
mov
loop
jbe
aas
paddusw
xlat
push
pop
inc
in
arpl
pop
pop
es
or
inc
into
aaa
ss
jp
xchg
pop
push
push
cmp
shlb
and
clc
push
pop
add
dec
add
cld
in
xlat
adc
adc
adc
pusha
mov
outsb
and
lcall
mov
in
jae
dec
and
xor
pop
daa
jno
lahf
xor
sbb
hlt
mov
inc
push
sti
dec
mov
movsb
insb
pusha
fistl
es
lret
xchg
mov
aaa
and
cmp
rolb
jl
xchg
lea
sbb
out
sti
fwait
pop
and
lock
aas
cltd
cmpsb
popf
in
movsb
lahf
push
lock
mov
push
mov
out
jno
sahf
lods
and
in
xchg
ja
sub
adc
int3
pop
daa
mov
jbe
aaa
cmc
movsl
into
xor
xlat
je
mov
mov
das
xlat
push
mov
hlt
push
int
sbb
hlt
loop
das
out
cltd
pop
mov
aam
sbb
in
iret
lods
xor
decl
mov
lods
idiv
cli
imul
rorl
ret
int
jecxz
shll
loop
lock
mov
cmp
sbb
and
fs
mov
fwait
inc
cmc
leave
push
mov
pushf
or
and
jle
pop
shlb
lods
jl
mov
lods
xchg
cmp
jle
push
test
aas
cmp
push
imul
inc
xor
adc
add
popf
mov
popf
mov
insb
mov
test
movsl
cmpsl
xchg
fmul
add
lret
pop
cld
xor
and
push
rolb
pop
lods
das
aam
add
out
jge
js
mov
jb
push
mov
in
lcall
and
push
push
sbb
jmp
pop
je
enter
repz
clc
or
cmp
sbb
add
arpl
jno
jg
ret
fwait
cmpsl
dec
inc
adc
fbstp
mov
nop
jle
adc
add
xorb
ja
xchg
lret
or
shr
mov
and
call
sub
mov
add
test
push
xchg
test
or
ret
pop
cmpsl
xor
ret
pop
das
pop
loope
cltd
pop
outsl
jg
push
mov
push
je
aas
mov
popf
negl
add
outsl
jge
pusha
sbb
jmp
adc
rol
cmpsb
cmpsl
and
add
or
stos
sbb
mov
dec
fistpl
push
jecxz
inc
push
dec
jmp
inc
adc
sub
mov
gs
iret
lret
in
mov
add
dec
xchg
inc
add
sub
ja
scas
mov
sbb
push
and
rolb
add
iret
and
stos
enter
mov
or
rcrl
sub
jb
shr
mov
inc
xchg
out
pop
fldt
xlat
insl
shlb
fidivrl
in
call
mov
hlt
push
sub
repnz
xlat
jb
add
jge
xor
xor
jp
insb
add
sub
pop
add
jp
mov
cmp
push
jmp
inc
aad
fisubrs
adc
repz
pop
or
mov
shll
cmpsb
push
add
arpl
add
dec
or
jno
insb
pop
shlb
lds
movsb
outsb
int
je
lret
push
lret
in
out
arpl
pop
xchg
jmp
cmp
daa
inc
ja
enter
ret
ret
sub
pushf
add
pop
and
xor
jl
pop
mov
pop
repnz
dec
pop
mov
push
test
dec
push
nop
subb
push
xor
or
fstps
shl
sbb
push
test
push
ret
ret
stc
out
push
dec
pushw
inc
out
clc
fiadds
cmpsl
adc
cld
pop
loope
into
enter
adc
jecxz
fs
dec
adc
lahf
fldcw
push
cmp
mov
lret
mov
jbe
imul
jge
jge
lock
adc
and
push
sahf
mov
mov
loope
and
imul
call
lret
repz
xor
sahf
or
or
fcomip
popf
movsl
out
inc
push
push
fwait
in
and
scas
lcall
pop
inc
lds
mov
arpl
push
testb
sbb
enter
push
fsub
mov
icebp
dec
leave
mov
pop
adc
and
pop
and
push
je
jmp
jmp
iret
xchg
lea
das
insb
xchg
test
imul
enter
cli
dec
nop
xchg
sbb
push
icebp
fisubs
lock
or
iret
mov
cld
push
inc
int
lods
adc
adc
sub
rcr
adcl
or
sbb
lods
daa
and
shlb
add
adcl
repz
xchg
xor
fldcw
add
cmc
jecxz
imulb
sbb
adc
stos
rcll
cmp
and
scas
imul
rcll
and
js
sbbl
fbld
outsb
push
mov
movsl
nop
pop
rorb
arpl
xchg
scas
imul
ljmp
add
cs
cli
and
js
fwait
cmpsb
rcr
and
dec
sbb
add
clc
cmc
mov
cmpsb
mov
hlt
loopne
popf
je
aad
adc
orl
lods
jl
xor
mov
and
inc
out
icebp
pop
hlt
addl
ss
add
insb
jb
pusha
cltd
pop
sub
push
mov
push
mov
and
and
lods
filds
popf
imul
push
aaa
cmp
es
hlt
popa
inc
popf
and
or
push
jae
iret
sbb
mov
out
gs
je
sub
push
push
flds
hlt
and
in
inc
iret
adc
add
stc
sbbb
stos
test
sbb
ret
mov
hlt
xor
sub
jno
xchg
jno
insl
mov
outsb
cmp
push
jecxz
sub
cmpsl
lahf
xor
or
pushl
xchg
mov
hlt
mov
or
popa
mov
dec
mov
cmp
inc
cmpsl
add
mov
mov
cld
out
dec
aad
roll
adc
mov
xor
mov
lods
fsubrl
pop
and
add
movsl
adc
lcall
repnz
and
or
cli
mov
insl
std
lods
clc
sbb
out
shll
test
shrl
or
stc
adc
adc
hlt
call
dec
or
mov
in
sbb
mov
jp
rclb
icebp
out
imul
in
je
outsb
xchg
les
es
push
inc
mov
movd
fsubs
dec
adcl
and
out
push
adc
mov
pop
decl
pop
pop
addr16
fsubr
shlb
test
int
mov
cmc
scas
outsl
and
jp
jg
mov
push
mov
sbb
jnp
push
sbb
push
addb
and
jnp
gs
inc
test
popa
pop
cmp
sub
mov
sub
cmpsl
jns
and
mov
scas
clc
or
sbb
cmp
xchg
inc
pop
sub
repz
test
aaa
outsl
cli
test
popa
xchg
dec
jns
xchg
rorb
ja
pop
std
inc
mov
pop
sbb
adc
sub
jns
xor
push
jns
loope
or
xchg
xor
fidivs
inc
cld
inc
movsb
loopne
mov
jb
push
push
sar
dec
adc
in
and
sbb
mov
add
mov
outsl
xor
mov
ret
jp
aad
dec
lret
es
movsl
jo
xor
mov
fcmovnbe
inc
mov
dec
adc
in
adc
decb
mov
adc
popa
lods
popf
arpl
mov
stc
out
shlb
sub
pop
bnd
cmp
mov
sbb
cmp
insl
mov
inc
fsub
adc
cmpsb
cmp
or
ret
lahf
rolb
xchg
cmp
sti
pop
imul
pop
leave
mov
mov
psubsb
lds
jo
rorb
add
pushf
inc
pop
out
sub
xor
shl
mov
sub
inc
pop
repnz
mov
inc
insl
call
cmp
test
iret
test
lods
xchg
sbb
mov
outsl
aad
sti
cltd
jle
xchg
orl
nop
jne
inc
lret
dec
adc
xchg
dec
lock
push
pop
pmulhuw
je
xchg
pop
popf
jmp
push
test
sub
cld
mov
inc
jp
and
subb
dec
xor
push
mov
jg
and
mov
imul
mov
mov
mov
jb
mov
rclb
xor
cmp
andb
xor
arpl
shrb
insb
sbb
add
xchg
or
xor
inc
push
cmp
mov
lea
ljmp
push
xchg
adc
xchg
mov
in
fstl
pop
enter
rolb
shl
ret
and
imul
mov
gs
mov
dec
push
aas
cmp
push
test
sbb
push
popf
jo
xchg
mov
cld
jmp
mov
jbe
data16
inc
jp
mull
lods
inc
xchg
shll
mov
divl
or
fiadds
test
jl
pop
or
fnstenv
lret
fcoms
mov
sbb
add
cli
pop
cmpsl
pusha
ss
sti
fcompl
lret
dec
ror
inc
sub
imul
pop
cli
jno
push
inc
in
sub
cld
shrb
in
or
or
outsl
into
fisubs
mov
xchg
cmpsb
mov
sub
stos
or
mov
mov
mov
and
inc
out
addl
dec
jne
ret
dec
cltd
adc
cmpsl
push
jnp
or
in
dec
mov
stos
sub
inc
bsf
leave
sbb
mov
mov
inc
stos
jne
jmp
scas
aas
dec
jle
dec
fsubrl
xchg
add
enter
orb
and
daa
or
pop
push
pop
je
outsl
pop
loopne
push
daa
repz
sar
ret
inc
arpl
or
or
fcoml
popl
out
lret
push
mov
mov
sbb
sbb
aas
mov
rorb
xchg
loop
iret
es
sarb
sbb
rolb
xor
mov
adc
mov
imul
xchg
stos
int3
lods
std
mov
push
mov
stos
dec
pop
mov
sahf
push
dec
mov
lcall
stc
sub
iret
sub
incb
ficompl
add
ljmp
sbb
push
inc
inc
xor
mov
mov
add
pop
arpl
inc
pop
dec
dec
add
dec
popa
dec
push
inc
lret
dec
ret
add
sbb
lcall
cli
imull
sub
mov
inc
lret
sub
ljmp
inc
test
fnsetpm(287
and
and
adcl
sbb
push
push
push
pandn
aad
hlt
dec
dec
mov
cwtl
testl
jl
lods
mov
sub
test
mov
push
pop
dec
push
test
jb
adc
pop
loop
sub
lcall
mov
add
decl
loope
xor
inc
dec
push
pop
dec
fistpll
sub
inc
aaa
and
pop
stc
mov
movsl
or
dec
xchg
mov
fistps
sub
or
cmp
pop
in
mov
sub
dec
lock
jle
xchg
dec
push
arpl
imul
dec
xor
ficompl
inc
adc
pushf
sti
cmp
push
in
movsl
xor
add
fwait
inc
xor
dec
xor
mov
sub
clc
xchg
in
jb
aaa
xchg
ret
nop
fistpl
xchg
sub
mov
xor
sbb
pop
in
leave
inc
pop
sub
xchg
mov
jecxz
and
aam
repnz
pusha
add
mov
imul
addr16
sbb
or
fisttpl
and
ret
movsl
cltd
adc
mov
loope
push
ret
rorb
test
mov
mov
and
cmpsl
outsl
call
xchg
mov
adc
clc
fldenv
test
jnp
test
hlt
fstpt
ffreep
xchg
mov
or
cmp
roll
sub
pop
sub
call
sahf
dec
arpl
cmp
cmp
pop
imul
dec
stos
cmp
push
mov
inc
nop
loop
cs
stos
cli
fucom
adc
push
mov
inc
mov
in
adcl
into
insb
sub
pop
into
cmp
cmc
stos
push
fdivs
test
out
mov
cld
xor
jg
enter
sahf
fldt
adc
mov
dec
inc
dec
add
and
xchg
pop
mov
inc
jmp
sahf
loope
dec
xchg
pop
test
stc
jbe
subb
test
arpl
inc
outsl
push
and
xchg
sahf
add
std
ja
enter
adc
cmp
sbb
xchg
repz
scas
sbb
xor
popa
lcall
in
loop
add
mov
inc
jne
in
sbbl
in
pop
adc
cld
add
inc
jle
mov
rcrl
imul
outsb
and
lcall
repz
jbe
test
jo
arpl
mov
pushw
push
add
hlt
sbb
lods
iret
lods
mov
sub
add
loop
out
sbb
scas
add
fstpl
out
dec
cmp
lcall
subb
or
mov
adc
adc
arpl
pop
mov
rorl
mov
mov
testl
aad
out
lahf
mov
daa
scas
adc
test
je
xchg
mov
adc
and
xor
and
or
push
gs
xchg
iret
aaa
push
out
int
in
dec
insb
pop
ds
jae
sub
mov
movsb
dec
mov
adc
in
shlb
ret
add
mov
arpl
push
mov
andl
pop
xchg
push
cmpsb
lock
jns
mov
or
lods
mov
aad
aad
stos
cmp
cmpl
pop
mov
jae
arpl
cmc
dec
into
inc
jno
out
insl
cmpb
daa
xrelease
lock
inc
stos
push
adc
inc
dec
xor
jb
scas
add
mov
popa
jecxz
inc
lods
insb
testb
jnp
mov
jne
sti
es
mov
outsb
jp
xchg
or
xor
xchg
imul
andb
out
push
push
jbe
into
push
in
adc
push
push
fadds
lret
push
mov
cmp
pop
mov
scas
mov
push
inc
aas
decb
push
fs
test
push
add
jns
push
subb
adc
clc
stos
pushf
cmp
pminub
inc
sbb
insl
out
sub
sub
adc
icebp
mov
dec
lret
jmp
sub
mov
or
in
mov
adc
mov
jmp
std
hlt
test
xchg
fnstcw
out
loope
sub
cmp
fdivr
lods
sbb
call
or
inc
xchg
filds
fcompl
or
push
cld
repnz
lret
fmul
dec
cmovb
dec
addl
ret
push
repz
sbb
cs
dec
mov
in
call
pop
push
in
inc
jge
xor
xchg
adc
adc
addr16
jecxz
insl
mov
add
imull
xor
shrb
xor
pop
sub
inc
mov
pusha
xor
xchg
loopne
arpl
xor
repz
push
mov
add
loope
jmp
outsb
bound
stos
push
xchg
jg
xlat
idivl
scas
das
out
pop
push
pop
xchg
mov
std
and
daa
xchg
daa
xchg
mov
dec
aaa
xchg
adc
inc
mov
push
xchg
jle
dec
xor
sub
stos
mov
shlb
inc
test
cmp
ds
mov
xor
push
inc
or
add
shlb
cmpsl
mov
cmp
lret
inc
pop
mov
dec
and
mov
sub
pop
outsl
leave
ja
jge
clc
clc
inc
sbb
inc
test
addr16
fs
addr16
js
pushf
sbb
pop
inc
inc
xor
std
nop
and
or
cld
lds
mov
pop
clc
lahf
pop
ret
jmp
dec
lret
jle
add
mov
add
dec
clc
xchg
inc
dec
mov
ja
push
mov
imul
shlb
mov
stos
mov
push
jbe
jne
xor
xchg
pop
mov
jb
dec
sti
jmp
add
lcall
pop
and
or
cwtl
fcoms
test
xchg
fldcw
rcrl
addr16
es
pop
mov
add
push
aas
jb
loop
cmp
aam
and
shr
minps
mov
je
iret
lcall
xchg
outsb
fidivrl
mov
js
jne
imul
xchg
xlat
or
add
insb
adc
in
jl
push
xchg
je
mov
push
cmp
or
jb
add
shll
xor
sbb
pop
sbb
popf
adc
aam
fs
lods
fbld
out
icebp
addr16
ss
mov
sub
lea
and
sbb
test
std
mov
jnp
cs
push
cmp
push
out
enter
xchg
popl
mov
pop
add
sub
lock
sub
and
imul
push
inc
pop
lods
test
bound
enter
movsl
dec
shlb
sub
mov
push
xor
mov
push
cmp
adc
push
lret
aam
push
adc
ja
mov
fsubl
outsb
jo
xchg
lods
mov
pop
push
pop
adc
cs
in
mov
int
jae
shll
popf
nop
nop
jl
mov
mov
popf
pop
enter
fadds
xor
dec
aad
xchg
mov
insl
push
stc
and
pushf
sub
jb,pt
xchg
mov
mov
ret
push
cltd
loopne
jno
jns
mov
fs
or
negl
dec
insl
sub
sub
add
inc
adc
and
add
mov
push
inc
ret
sbb
fistps
dec
adc
les
scas
enter
jmp
adc
outsl
fadds
xor
cld
mov
mov
mov
inc
adc
cmp
mov
dec
pop
sbb
clc
lds
ret
inc
cmp
nop
cmp
sarb
jns
test
jno
jb
mov
ret
out
in
push
out
lret
in
jne
jmp
cli
push
pop
xchg
sub
ljmp
mov
lret
movsl
lock
cli
lcall
lret
and
adc
data16
lea
movsb
aaa
es
jne
subl
ds
std
mov
lods
idivb
push
dec
inc
mov
pop
xchg
lret
fucomi
add
xor
push
inc
dec
stos
adc
je
push
sbbl
lret
xchg
jne
mov
cmp
and
ret
loop
jae
push
stc
ja
jmp
lret
into
js
fmull
ds
adc
ret
movsb
push
dec
cmp
mov
mov
and
out
scas
adc
int
xchg
mov
push
sub
test
add
push
jno
clc
scas
push
lock
fwait
cs
out
stc
into
cmp
faddl
xor
in
scas
stc
jno
cmp
notb
jmp
push
mov
dec
jbe
sbb
test
mov
adc
jnp
loopne
xchg
mov
mov
mov
pop
cld
xchg
pop
sbb
push
mov
addl
adc
jp
ret
xor
std
lahf
cltd
fmul
js
push
push
loop
mov
or
cmp
out
or
js
test
inc
dec
subl
jo
push
sub
inc
jns
mov
adcl
popw
pop
sbb
pop
idivl
nop
sbb
xchg
pushf
aaa
cmpsb
cmc
in
mov
nop
xchg
mov
ljmp
push
push
fldl
mov
jnp
repnz
cmp
push
xchg
in
jl
push
sub
xchg
and
hlt
js
mov
test
add
and
stos
les
dec
lcall
loope
ret
push
adc
dec
addr16
push
mov
gs
dec
rorl
hlt
dec
mov
jecxz
and
xlat
jno
xchg
outsb
mov
movsl
pop
cmc
fcomps
xchg
subps
mov
les
adc
fstps
xchg
shll
mulb
xlat
pop
js
gs
adc
lds
ret
dec
cli
and
dec
sub
mov
and
jno
sub
inc
mov
lea
addr16
loop
orl
cmp
add
add
movb
fdivrl
fnstsw
adc
into
cmpb
push
cld
fsts
jo
sbb
sub
xor
pop
sbb
mov
mov
jmp
xlat
inc
int
movsl
stos
test
mov
subl
std
pushf
out
or
clc
call
in
mov
inc
inc
push
mov
clc
jmp
popa
cmp
clc
add
add
lret
xor
pop
lock
cmp
jecxz
arpl
xlat
repnz
dec
pushf
sahf
popa
cwtl
sub
jnp
pop
iret
ret
mov
call
xlat
gs
leave
pop
inc
fdivr
fcoml
jge
mov
mov
cld
jno
or
jbe
mov
aaa
hlt
ljmp
addl
arpl
jnp
movsb
fistps
std
lods
lods
out
mov
call
mov
mov
add
stc
scas
cmp
scas
stos
mov
loope
sbbb
push
repz
xlat
pop
mov
mov
dec
ss
enter
cmp
add
ja
hlt
rorb
xor
ss
loop
imul
or
mov
mov
jb
inc
adc
insl
cmp
lcall
es
mov
push
lea
popf
cwtl
dec
lahf
cmovge
int
push
rcll
xor
mov
add
push
adc
push
push
lods
xchg
mov
and
mov
sbb
repnz
adc
movaps
xchg
fimull
mov
and
jecxz
push
dec
js
mov
int3
mov
or
xor
ret
xor
cmpsl
mov
jl
push
std
sahf
cmp
fdivrs
cmpsb
dec
jle
add
push
mov
inc
stc
push
sub
inc
lea
dec
jp
es
mov
jecxz
pop
xchg
jo
jecxz
lods
in
fsubl
dec
push
pop
insl
add
sarl
cmp
bound
pop
xor
ljmp
cmp
push
imulb
push
test
mov
rorl
pop
mov
inc
mov
and
icebp
jno
mov
push
sahf
jp
add
aaa
fbstp
in
adc
inc
jecxz
mov
mov
adc
lcall
lcall
cmpl
shr
inc
jg
jle
jno
cmp
bnd
mov
pop
mov
fstps
lods
fisubl
addb
imul
add
jecxz
rorl
clc
es
mov
fwait
xchg
xchg
lock
add
nop
aas
xchg
or
mov
jnp
add
dec
enter
adc
ss
test
jmp
pusha
pop
xchg
cmp
ficompl
inc
pop
mov
incl
push
dec
mov
stc
cmpsb
rcrl
mov
push
pop
add
in
xchg
pop
lea
cmp
push
xchg
or
xchg
scas
inc
sti
pop
bound
dec
repnz
push
clc
and
add
cmp
mov
mov
inc
icebp
fwait
inc
xor
sub
cmp
push
cmpsb
pop
je
mov
cltd
test
imul
neg
stc
or
sarb
xchg
pop
mov
movsb
outsb
cvttps2pi
mov
std
das
sbb
test
hlt
xlat
and
lods
jbe
or
test
cwtl
push
shlb
mov
in
pop
fnstcw
and
loop
sahf
push
xor
adc
rol
pop
std
push
pop
test
js
mov
xchg
leave
mov
sub
or
jecxz
cmc
cmp
cli
loopne
scas
mov
rorb
in
arpl
mul
test
or
add
arpl
js
icebp
lret
loopne
dec
mov
shrl
ljmp
fisttpll
jno
dec
jmp
fcom
addr16
xchg
dec
shlb
xor
int
mov
or
fisttpll
and
xorb
cmp
ja
sti
mov
sti
int3
fwait
xchg
cmp
pop
jmp
sbb
or
scas
jbe
cmp
xchg
mov
mov
test
jb
push
and
mov
push
jge
sub
and
push
mov
jno
call
xchg
mov
mov
outsl
shl
lods
loope
and
mov
lods
inc
dec
mov
push
jle
int3
sbb
mov
sbb
loopne
sbb
mov
lret
sub
xchg
test
loopne
faddl
shrl
sbb
cwtl
nop
jg
jns
pop
daa
jle
push
adc
sbb
ror
fstps
loop
fistpll
aam
aas
sub
mov
pop
out
leave
out
push
jle
pushf
xor
pop
sarl
and
pop
and
jl
clc
xor
outsl
popa
pop
cmpsb
daa
push
loop
pop
movb
xchg
pop
aaa
add
mov
or
aad
aad
in
xor
sahf
mov
aas
stos
mov
data16
sbb
in
hlt
mov
lret
call
lret
sbb
and
mov
jns
or
sbb
cmp
out
jg
imulb
pop
idivb
or
cs
xchg
pop
shl
fmull
mov
popf
mov
push
adcb
push
mov
xchg
aam
test
or
sbb
outsb
icebp
xor
mov
cmp
or
push
sub
dec
shrl
push
dec
jl
push
dec
jbe
xchg
loope
sbb
push
add
mov
sbb
clc
mov
dec
popf
or
aad
insl
sbb
mov
je
pop
ret
aas
aam
out
jo
inc
rol
and
jmp
mov
jo
fdivl
inc
data16
fistpl
sbb
xchg
pop
popf
aaa
add
xchg
ret
gs
xchg
push
daa
pop
mov
in
dec
js
cmp
or
test
mov
cmc
shr
push
out
sub
test
pop
adc
cmpsb
lock
push
pop
dec
jnp
rcll
cwtl
lea
ja
xchg
icebp
pop
icebp
data16
sahf
rcrl
add
stos
inc
loopne
cmp
xor
sub
incb
insb
testb
insb
rorl
cmc
psrlq
push
stos
pop
push
sbb
and
shrl
push
cmp
inc
cld
adc
popf
cli
add
mov
test
dec
cmp
dec
in
xorb
jecxz
arpl
jns
push
imul
sti
jb
pop
sbb
add
mov
cmp
ja
mov
dec
sbbb
fists
and
add
icebp
mov
pushf
fcmovnu
stos
mov
xor
inc
cli
fistl
sarl
and
adc
jnp
inc
push
dec
pop
push
cmpsb
push
dec
xchg
dec
push
sar
in
and
cwtl
jo
pop
push
mov
lret
cmp
xor
iret
and
je
jno
imulb
scas
fistps
sahf
jns
and
or
dec
cmc
jmp
imul
insl
lret
aaa
xlat
cmp
faddl
gs
sahf
pop
mov
pop
ret
sahf
movsl
fs
aaa
xlat
insl
push
fwait
mov
mov
out
sub
into
jne
jg
outsb
aam
push
scas
enter
outsl
push
push
scas
ljmp
scas
icebp
into
sbb
lds
dec
mov
sub
std
out
lea
inc
and
xor
mov
sti
ss
dec
jmp
cmpsl
enter
or
jne
add
outsb
pop
sub
jne
xchg
inc
roll
add
add
dec
xor
lret
mov
xorps
imul
add
ja
fildll
pop
icebp
push
adc
addr16
xchg
sti
enter
ljmp
pusha
es
mov
bound
xlat
popf
fildl
insb
jbe
leave
popl
xor
pop
mov
out
es
imul
pushl
add
mov
scas
dec
adcb
addr16
mov
nop
outsl
mov
nop
cmp
jge
mov
dec
ljmp
cwtl
mov
cmp
lods
fisttps
andb
js
scas
mov
cmpsw
cmp
mov
mov
push
mov
insl
in
or
xor
adc
and
icebp
mov
cltd
sub
stos
incb
xor
pusha
mov
cmpl
and
push
cmc
imul
daa
dec
add
sub
jp
js
test
jae
call
gs
out
push
test
lret
push
add
mov
mov
xchg
pusha
cld
addr16
repz
call
push
lea
leave
adc
ss
mov
shlb
sbb
jl
and
addr16
or
sub
mov
mov
stc
daa
ret
sbb
xchg
cmp
popa
shl
pop
dec
rorl
ficoml
push
scas
jbe
outsl
pop
adc
pushf
decl
lods
sub
in
out
iret
inc
popf
xchg
inc
or
push
adc
fldcw
or
mov
jecxz
adc
dec
pusha
out
mov
inc
test
sbb
lock
jbe
sbb
mov
test
sbbb
outsl
mov
outsl
cmpsb
dec
outsl
dec
jae
mov
jbe
push
pop
jp
imul
cmp
add
cli
add
ret
push
or
loop
sub
inc
pop
aaa
add
sub
stos
scas
repnz
rcrl
inc
mov
mov
and
pop
outsb
test
adc
popa
shrb
or
jnp
sar
or
idivb
sub
xchg
jae
push
push
add
movsl
mov
cmpsb
sbb
pop
mov
xchg
ds
and
xchg
push
arpl
stc
xchg
jae
das
out
push
pushf
mov
ret
and
cs
in
dec
or
out
cmp
lds
push
nop
inc
in
fsubrs
add
or
push
stos
jmp
cmp
scas
pushf
mov
mov
inc
ficoml
xchg
popf
shlb
fdivrs
sub
jnp
mov
jo
and
xadd
mov
inc
push
stos
sahf
xchg
testb
xor
push
jne
and
xchg
push
mov
imul
cmpl
cmp
add
rolb
inc
mov
sahf
adc
shrl
and
pusha
cmp
loopne
repz
cltd
cmp
xchg
mov
insb
dec
sbb
call
pop
lahf
lods
movsl
sbb
mov
cli
enter
mov
aad
insl
xorl
inc
gs
xchg
push
rclb
add
lock
push
push
mov
pop
cvtdq2ps
test
inc
push
out
nop
je
or
xchg
int
aas
cli
mov
mov
sub
out
and
mov
lods
mov
ss
adc
gs
mov
xchg
xor
dec
push
pop
xlat
lods
aad
test
adc
inc
or
cmp
filds
in
fstpl
sub
jg
xchg
jg
cmpsl
testb
and
fidivl
dec
test
cmpsl
jl
iret
lods
fsubrl
mov
push
mov
fnstenv
lcall
jo
imul
subb
test
push
lcall
xor
push
hlt
stc
shll
cmp
adc
inc
gs
in
mov
jae
xchg
ss
push
sbb
adc
dec
add
insb
nop
arpl
gs
mov
pusha
notl
rcll
lods
inc
xlat
mov
adc
adc
mov
sbb
push
jb
adc
xor
pop
cld
aam
int
ret
jl
sub
sahf
insb
xchg
movsl
test
adc
jmp
out
mov
inc
sbb
jae
adc
inc
jecxz
nop
inc
jecxz
mov
push
dec
fmull
pop
repz
ja
popa
and
scas
xor
clc
push
jbe
inc
xor
xchg
imul
dec
jg
xor
ficomps
ret
pop
mov
push
push
jno
add
lret
jae
bnd
or
push
icebp
outsb
and
addb
sbb
adcb
rorb
lret
xchg
loopne
test
adc
xlat
nop
scas
add
mov
inc
subl
inc
pop
adcl
xor
sub
cmp
sub
subb
mov
hlt
cmc
rcr
pop
dec
stc
jnp
and
lock
insb
xchg
sarb
mov
mov
sbb
lea
ret
or
jns
loopne
or
mov
xchg
cmpl
cmp
jecxz
loope
mov
fwait
enter
ljmp
sbb
push
fwait
jg
roll
inc
int3
xor
adc
cmp
add
xchg
loop
or
sub
lcall
jno
dec
stos
dec
out
jnp
ds
push
cmp
shrl
imul
insb
lahf
stc
mov
scas
aaa
jmp
mov
shlb
pop
lret
xor
mov
dec
ja
out
adc
mov
mov
int
repnz
xchg
imul
gs
in
mov
sbb
jns
adc
outsb
mov
xchg
mov
shll
mov
stos
rolb
add
sahf
pop
ss
int
rcrl
push
adc
cli
mov
jns
dec
out
fadds
dec
xlat
dec
fisttpl
or
outsl
in
shlb
ja
arpl
sub
invlpg
mov
ss
sti
adc
dec
cld
fxch
mov
popa
cs
rcll
adc
rol
lods
push
lcall
pushaw
mov
push
push
cwtl
loop
out
mov
mov
leave
xchg
lods
cmpsb
lar
cmp
mov
outsl
movsb
add
xlat
repnz
and
jp
sbb
fs
mov
inc
sar
iret
outsb
test
test
int
xlat
mov
fwait
into
pop
cmp
out
fcompl
stos
dec
mov
mov
in
pop
jl
push
enter
adc
stc
bound
pop
fsubs
fwait
sti
jle
jb
aad
out
iret
imul
repnz
dec
notb
int3
mov
test
add
mov
insl
pop
mov
aam
lcall
or
ss
push
sub
mov
xchg
push
out
outsl
dec
insl
insb
xor
es
out
adc
pop
push
mov
movsl
movsl
cmp
fwait
dec
mov
sub
leave
cmpl
sub
repnz
int3
or
stos
xor
dec
fnsave
mov
pop
sub
mov
mov
cmp
es
jae
inc
test
cltd
pop
pop
xchg
sti
lcall
enter
mov
notl
inc
testb
hlt
jae
pop
mov
and
das
out
stos
pop
mov
lcall
inc
dec
or
xor
inc
repz
mov
lret
or
scas
dec
jle
sub
pop
lods
or
and
inc
mov
in
je
jo
leave
xchg
and
call
sub
scas
fs
popf
lods
out
aad
xor
jne
push
push
ds
jl
pop
inc
dec
lahf
xchg
adc
add
xor
add
cmpsl
lock
les
mov
aas
fs
lret
inc
ret
repz
adc
xchg
cmp
mov
dec
jle
cmp
xor
cmpsb
pop
ss
cwtl
fwait
lea
ljmp
stos
test
daa
push
push
cmpsl
rcrl
divb
lret
mov
pop
mov
mov
lcall
lret
push
mov
pop
ljmp
sbb
xor
dec
sbb
cmc
in
add
insb
pusha
rolb
lds
sub
or
mov
sbb
in
repz
sub
out
pop
lret
mov
dec
std
and
adc
jmp
push
mov
lret
test
mov
sbb
cmp
repnz
hlt
jnp
aaa
je
je
pop
push
filds
adc
js
std
rol
cmp
push
jecxz
dec
leave
xchg
push
orl
testb
sub
jb
pop
jg
mov
mov
imul
arpl
push
cmp
leave
daa
ficoml
sahf
rclb
aaa
add
pop
mov
xchg
pop
mov
and
aas
cmpsl
hlt
daa
sar
lret
mov
hlt
or
rcr
push
dec
lods
sbb
mov
cmp
aam
ljmp
push
inc
sbbb
push
cmp
fmull
xchg
mov
or
scas
jb
pop
dec
loop
je
andb
fistl
out
in
xchg
popf
and
mov
adc
xchg
push
and
subb
in
mov
ret
pop
into
loop
in
add
movsb
es
jnp
fmull
push
add
test
lahf
test
cmp
rolb
sbb
repnz
jb
ds
cmp
and
roll
stc
loopne
inc
inc
cmp
sub
push
pop
sub
push
gs
xor
mov
dec
fwait
sbb
xchg
cltd
pop
mov
scas
addb
popa
ljmp
adc
clc
dec
fs
pop
inc
xor
cmp
sbb
jo
mov
and
sti
mov
xchg
ja
pop
cld
dec
fcoms
lret
je
mov
cmpsb
xchg
sbb
or
aas
iret
out
mov
lret
loop
jle
std
mov
cmp
stos
xchg
sbb
pop
lods
or
int3
adcb
xchg
sbb
inc
movsb
insl
push
add
out
pusha
divb
mov
inc
iret
or
xor
push
mov
add
lcall
call
or
add
lods
loope
xor
aad
mov
lcall
and
cs
pop
or
movsb
in
add
jnp
adcb
mov
or
movsb
and
sbb
mov
xor
std
adc
fsubrl
fbld
or
add
in
lcall
stc
xchg
ror
sahf
sbb
scas
fwait
cs
fstpl
mov
es
push
pop
add
movsl
push
adc
mov
pop
pop
sub
pop
push
dec
mov
mov
pop
nop
fcompl
push
in
push
int
lret
jg
outsl
xor
push
leave
ja
out
leave
lret
cld
and
mov
and
ja
inc
mov
cmc
sub
arpl
add
mov
imul
fisttps
sub
ljmp
out
sub
inc
incl
mov
xchg
xchg
leave
sbb
mov
push
add
sarb
dec
sub
rcr
xlat
inc
iret
mov
jb
pop
cmp
std
fdivr
mov
clc
xor
xchg
ja
sub
mov
shl
pop
mov
loope
lock
mov
mov
push
popf
out
in
mov
cmpsb
movsl
mov
cmp
add
cmovns
xchg
movsb
and
jg
xorl
gs
xchg
fdivrl
in
mov
xor
rorb
lret
arpl
popa
xor
pop
aam
sub
subb
hlt
jmp
orl
aaa
pop
daa
lea
add
icebp
lcall
xorb
sub
mov
inc
inc
shll
ud2
dec
lret
loopne
insl
sarb
adc
sbb
add
jo
test
mov
push
arpl
sbb
popa
iret
inc
fnstsw
adc
in
adc
xchg
in
testb
mov
jns
cmp
movsl
cwtl
jle
fimull
popf
lret
mov
mov
push
push
inc
incb
inc
test
inc
clc
jno
bound
imul
inc
mulb
or
jmp
inc
icebp
js
movsb
add
movsb
fstps
xor
cmc
pushf
jp
stos
out
mov
mov
jnp
rclb
pop
in
leave
notb
mov
daa
pop
add
cmp
jp
or
dec
rolb
inc
mov
shl
leave
aas
add
jns
and
mov
push
mov
nop
mov
xchg
mov
or
mov
and
inc
popa
addl
andl
popf
jae
jmp
outsb
ss
mov
in
mov
call
in
jae
imul
push
in
xlat
xchg
push
pop
sub
aas
cmp
mov
andl
mov
je
dec
add
and
mov
sub
xor
adc
shll
aad
call
mov
mov
jns
adc
sbb
iret
sub
popa
add
scas
xchg
cmp
in
out
jl
mov
sub
sub
sbb
ret
es
inc
scas
cs
xor
pop
cltd
cmpb
cmc
xchg
jp
enter
pop
dec
xor
call
push
pusha
nop
int
and
rcl
inc
or
data16
bound
int3
adcb
dec
insl
pop
rclb
dec
jae
in
push
and
and
push
xor
mov
mov
xor
xchg
jno
lret
or
adc
cli
add
dec
pop
dec
adc
fstp
pop
sub
and
sbb
jo
xchg
jnp
pop
mov
xchg
sbb
adc
fcom
cmpsl
and
pop
movsl
pop
xchg
mov
jecxz
dec
lods
movsl
add
dec
popa
mov
ja
jle
and
xor
adc
aad
mov
testb
gs
test
adcl
inc
push
cltd
mov
add
mov
jecxz
ljmp
cmp
jbe
loope
mov
mov
leave
mov
cli
std
rcll
cmc
xorb
fistps
in
movsb
fldcw
push
iret
loopne
movsb
stos
xor
test
add
jo
push
mov
add
aad
stc
pop
movsb
cmpsl
hlt
inc
fcomps
inc
add
cmp
dec
in
dec
repz
test
xchg
xor
lea
sbb
sbb
stos
mov
cmp
pop
mov
and
push
jecxz
clc
popa
out
mov
inc
cmp
popf
mov
ds
mov
bound
mov
xchg
nop
add
push
int3
das
jmp
gs
mov
xchg
test
adc
mov
mov
mov
add
cmpb
adc
sbb
and
loop
stc
movsl
jnp
xor
movsl
mov
mov
int3
loop
pop
and
out
jbe
movsb
jnp
sahf
inc
scas
inc
outsl
inc
lock
je
insl
out
lahf
push
lcall
daa
jo
cmp
push
cmp
andl
jns
jb
mov
jae
outsl
cmp
fdivrl
pop
gs
cmp
mov
xchg
dec
jecxz
jmp
mov
and
mov
push
mov
std
sbb
mov
in
sbb
push
dec
outsl
add
cmp
repnz
jno
in
or
js
divb
clc
lods
imul
insb
xlat
cmpl
xor
push
mov
pop
mov
mov
sbb
insb
daa
inc
icebp
push
leave
adc
test
inc
lods
mov
add
popf
clc
leave
outsb
int
push
fnsave
sbb
popa
cmp
cmp
fisttpl
xchg
fs
cs
aad
mov
pop
xchg
pop
cmp
out
xlat
adc
cwtl
loopne,pn
and
ljmp
cmpsb
push
adc
jmp
adc
fsubrs
adc
and
mov
xchg
pop
faddl
mov
sub
sbb
adc
inc
pop
or
in
mov
aad
sub
lahf
xchg
out
lock
es
test
mov
mov
fistps
sbb
stc
aaa
rclb
mov
mov
jp
mov
adc
scas
out
dec
inc
fs
fnstcw
jns
push
xchg
jb
xchg
jae
mov
repz
vpunpckhbw
das
mov
leave
sub
pop
das
call
or
clc
xchg
in
cmc
pushf
push
mov
xchg
add
mov
sbb
mov
test
stc
ds
jbe
lret
mov
dec
ret
out
rcrl
cmp
stos
jo
lcall
sub
push
push
sub
lds
movsl
adc
fisubrl
sbb
lea
add
mov
call
lahf
jo
xor
pop
and
cld
jle,pn
jns
in
ljmp
scas
shrb
rorl
push
push
jg
scas
cld
sub
rolb
cld
mov
cmp
jg
jge
mov
sti
lock
fwait
xor
stc
loope
pop
icebp
adc
lods
popa
out
pop
or
jg
add
dec
out
xchg
test
imul
xchg
lahf
orb
mov
mull
lret
lock
in
cmpsl
add
inc
inc
and
xchg
pop
mov
enter
push
jo
dec
mov
les
push
push
test
cmc
fsubr
repz
loopne
xchg
cmp
xchg
aas
sbb
push
mov
mov
adc
xchg
mov
lret
loope
outsb
ret
ss
and
jp
in
cmc
push
sbb
sub
push
jnp
and
mov
pop
insl
lea
lcall
mov
push
xchg
ja
mov
icebp
aad
pop
out
mov
das
scas
pop
mov
xchg
or
adc
inc
xchg
xchg
je
add
pop
and
lods
data16
icebp
mov
addr16
movsl
add
cld
xor
xchg
mov
out
cmpsb
jnp
rolb
or
jnp
in
into
in
add
lcall
adc
inc
dec
scas
cwtl
pushf
inc
xor
xchg
dec
mov
mov
lret
mov
fsubrl
testl
js
mov
movsb
pushf
mov
in
push
cmp
pop
jne
xor
or
movsb
hlt
addr16
popf
lds
add
adc
icebp
leave
rolb
test
push
pop
xchg
pushf
in
push
pop
push
xor
mov
sbb
xchg
fstpt
jns
jmp
stos
xor
dec
push
adc
lods
in
dec
sbb
cmp
add
add
mov
movaps
push
test
shlb
decl
ljmp
inc
ret
jnp
mov
xor
inc
pop
xor
iret
mov
fnstsw
fsubp
into
fwait
cmp
leave
test
sbb
jge
loope
rol
pop
jg
add
or
xor
stc
xchg
js
insl
out
push
repnz
push
shl
xchg
and
xor
loope
xchg
std
inc
divb
mov
repz
call
test
inc
lods
mov
mov
sbb
mov
inc
dec
bound
jp
fcomps
sub
dec
mov
pop
fcmovne
mov
cmp
repz
mov
arpl
mov
xchg
aaa
icebp
pop
push
dec
xchg
inc
or
cmc
sub
daa
inc
pop
adc
ds
fnstcw
scas
fisubrs
add
push
add
inc
inc
scas
enter
das
inc
push
mov
and
xchg
sbb
push
jl
pop
cmp
inc
inc
xchg
mov
es
dec
xlat
call
mov
leave
bound
fs
mov
xchg
or
cli
mov
mov
lods
pop
sbb
out
add
mov
xor
jge
pop
lds
loopne
jo
imul
xor
fwait
jg
jne
fldt
cmp
mov
aam
lods
xor
and
adc
jmp
mov
enterw
cs
aad
outsl
add
xchg
cmp
xchg
jp
out
xchg
lods
adcb
sub
mov
fwait
jmp
cmp
fdivp
pop
add
in
mov
mov
xchg
repnz
out
js
test
or
dec
jne
lret
mov
std
mov
scas
pop
ficomps
sbbl
loopne
arpl
shl
mulb
mov
sub
roll
cltd
sub
mov
ret
xlat
rolb
push
mov
jmp
and
scas
mov
shll
fstpl
jae
xchg
and
inc
or
iret
inc
outsl
xor
dec
lods
std
pop
call
pop
dec
and
int3
or
andl
sub
mov
jmp
jo
push
sbb
mov
mov
adc
push
inc
xorb
xchg
leave
xchg
sahf
adc
and
mov
mov
adc
mov
xchg
lods
daa
mov
xor
ljmp
pop
dec
or
inc
jnp
sahf
mov
repnz
shrl
cmpsb
pop
int3
fadd
mov
aas
mov
mov
cwtl
pop
mov
mov
inc
jp
dec
out
out
call
fimuls
cmc
test
inc
inc
or
insb
mov
ljmp
cs
std
add
dec
inc
push
shrl
lea
xor
adc
xor
xchg
mov
push
sar
outsb
mov
divb
cwtl
or
sti
xchg
sub
aam
mov
sbb
dec
or
int3
add
dec
leave
outsl
aas
scas
sbb
push
adc
push
mov
sbb
pop
roll
bound
test
insl
pop
sarb
out
jno
mov
enter
scas
mov
cmp
mov
mov
jno
mov
lret
jae
int3
pop
fucomi
sub
fistl
fwait
jle
in
xchg
xor
pop
lods
adc
lcall
mov
jno
out
dec
pop
dec
movsl
int
adc
dec
push
sbb
push
test
scas
xchg
add
icebp
das
movsl
xchg
xchg
jl
cmc
sub
int3
in
xor
popf
test
daa
leave
std
out
push
fstpt
inc
ja
inc
fldenv
adc
or
loop
push
inc
test
mov
pusha
mov
mov
in
inc
dec
jle
mov
rcrl
popf
subl
loope
pop
outsl
test
inc
out
addr16
jne
aam
or
call
xchg
fsubs
xchg
loopne
adc
push
xor
clc
out
rol
es
popa
mov
push
sub
cli
sub
xchg
in
dec
fnstcw
push
cmpsb
sbb
mov
scas
ret
sti
jne
es
ficomps
cmp
cmp
lods
sbb
push
cs
fnstcw
fadds
cwtl
mov
mov
jl
es
fcomps
sub
loop
push
fisubs
and
mov
jge
xchg
mov
pop
std
pop
lret
sub
movsb
stos
rorb
push
lretw
push
or
sub
das
das
data16
test
in
fdivrs
mov
xchg
xlat
adc
leave
push
sbb
push
ret
or
mov
stc
push
xorb
enter
inc
cmp
pop
cli
stos
out
sbb
cld
xchg
popf
pop
pop
popa
int3
sub
gs
fldt
xchg
adcb
ss
adc
jbe
addb
pop
repz
sbb
sar
push
sub
sbb
jp
in
adc
dec
adc
cmp
pusha
stos
in
stos
push
cltd
push
popa
add
nop
cwtl
add
ret
xchg
fdivp
orb
add
mov
test
xchg
mov
push
popf
xor
neg
xor
cld
mov
cmp
dec
aaa
fs
dec
adc
mov
xchg
and
pop
add
cmp
xlat
xor
lods
dec
jmp
arpl
insl
nop
outsl
xchg
sbbb
push
jmp
out
sbb
out
push
pop
mov
shlb
icebp
mov
lods
aam
mov
mov
les
aad
in
fbld
push
push
imul
and
mov
stos
mov
mov
dec
mov
push
sub
inc
icebp
push
xchg
and
notl
gs
iret
imul
xchg
in
xchg
repz
mov
inc
add
pop
jecxz
jno
decl
out
pop
jle
punpckhdq
sub
mov
push
cmp
mov
adc
lock
xchg
int
pop
add
xlat
inc
aas
std
mov
xor
mov
fistl
jae
adc
xchg
push
mov
cmp
icebp
fwait
sub
loope
ret
rcr
add
inc
fiadds
stos
pop
lret
jnp
lods
adc
nop
test
test
ljmp
insl
mov
mov
loopne
in
out
or
mov
rcr
mov
icebp
push
lods
enter
sarl
xor
arpl
loope
outsb
addr16
mov
and
dec
mov
in
gs
and
jae
add
lds
or
pop
fisubrl
cwtl
in
add
and
scas
or
je
mov
flds
jl
or
sbb
adc
fdivs
mov
gs
fildll
or
mov
sbb
es
sbb
imul
inc
imul
mov
repz
xor
jb
mov
addr16
out
cmc
std
ljmp
imul
fcmovne
mov
addr16
xchg
mov
clc
mov
in
scas
inc
mov
add
insl
inc
in
inc
inc
scas
and
cld
fwait
mov
dec
xstore-rng
cmpsl
addb
inc
loopne
mov
fldl
lods
std
xor
pop
mov
dec
insb
jl
or
or
dec
das
xchg
mov
mov
mov
sub
and
push
icebp
inc
push
push
fimuls
cmpsl
pusha
gs
jecxz
sarl
xchg
mov
cmp
loop
sub
sbb
pop
sub
add
sbb
popl
aaa
mov
daa
cli
pop
test
fstpt
movsl
cmpsb
clc
sub
dec
aaa
fildl
lock
add
xchg
repnz
stos
cmp
aam
ljmp
int3
out
mov
mov
test
jg
leave
jmp
push
ret
xor
dec
mov
dec
lret
mov
negb
or
dec
lock
mov
sbb
fisubrs
es
data16
jmp
insl
add
clc
fs
outsb
addb
int
or
mov
or
daa
dec
or
fwait
pop
pop
rcl
pop
mov
repnz
inc
or
pop
cmp
enter
das
clc
jae
loopne
mov
or
out
test
mov
sahf
addl
xor
pusha
imul
lret
push
inc
sti
add
cmpsb
inc
sub
cmp
pusha
mov
iret
mov
mov
ret
mov
jge
fldcw
xchg
stos
dec
xor
and
repnz
cmc
jle
stos
test
fiaddl
mov
adc
xor
jne
loope
gs
ds
sbb
aam
sub
enter
or
inc
push
and
dec
sbb
loopne
jnp
or
std
cmp
repnz
dec
aad
add
clc
test
cmp
rolb
adc
pop
imul
cltd
rorb
sub
mov
shl
push
sub
adc
pop
int3
cmp
mov
jmp
jle
jae
popf
ret
cmc
sbb
mov
sub
dec
dec
dec
cs
stos
fidivrl
push
sbb
mov
test
cmp
cmpb
fidivrs
cmp
loop
xchg
fnstsw
jl
mov
insb
in
adc
inc
sbb
icebp
sub
hlt
ret
stc
fcmovu
sub
daa
js
mov
in
sub
shl
ret
ds
insb
mov
pop
lcall
icebp
js
jg
mov
cwtl
mov
xchg
push
inc
mov
ja
push
xchg
xchg
pop
mov
aaa
pop
sarl
movsl
jns
inc
subb
xchg
hlt
dec
mov
ret
pop
imul
fisubrl
xchg
ss
sbb
pop
roll
sbb
mov
mov
sub
xchg
in
jp
imul
push
gs
or
cmp
mov
ret
popf
mov
aad
pop
movsb
xor
jle
ja
pop
imul
fists
ret
loopne
sahf
add
dec
jnp
fisttpll
inc
or
loop
icebp
and
push
pop
adc
add
add
pushf
scas
testl
test
arpl
hlt
call
mov
dec
xchg
jle
cwtl
das
jbe
lcall
mov
push
dec
scas
xchg
xchg
jg
jae,pt
mov
imul
mov
push
add
sbb
ret
pop
insb
sub
jp
or
pop
into
cmp
cmp
cltd
pop
fs
test
fwait
aad
jno
push
sbb
lds
push
xor
daa
into
cs
xchg
sbb
jae
mov
mov
xor
sbb
adc
stc
push
ljmp
jbe
cltd
inc
loopne
xor
incl
sbb
imull
or
lods
xchg
scas
sub
out
nop
cmp
cmp
sbb
jmp
inc
scas
shlb
inc
push
inc
test
add
dec
pop
pushf
sub
clc
lods
cmpsb
dec
jl
cmp
daa
shlb
add
notb
jl
scas
ljmp
xchg
push
aas
insl
dec
adc
aas
add
jnp
and
xor
lcallw
lea
jne
out
push
mov
ljmp
inc
movsl
test
imul
push
sub
in
std
sbb
cmp
clc
and
xchg
cmc
jnp
call
xor
mov
loop
mov
fsubp
ret
or
pop
popf
hlt
mov
enter
daa
inc
ljmp
aam
jo
cmpsl
subb
jbe
ja
dec
jmp
xchg
imul
fcmovne
das
dec
inc
icebp
push
es
mov
add
push
andl
imul
lcall
popa
sub
mov
cmpsb
ss
xchg
mov
jp
test
dec
cmovb
sbb
dec
add
int3
leave
or
jns
jcxz
repz
adc
out
inc
jmp
pop
out
cld
stos
fildll
gs
inc
repz
mul
stos
inc
mov
jne
adc
jb
dec
lcall
pop
and
sbb
mov
fs
xchg
xchg
cmpsl
push
aam
sarl
fwait
adc
in
push
mov
xchg
out
es
aad
xchg
ja
push
add
sub
out
sbbl
jecxz
xchg
or
push
test
dec
mov
or
ret
cmp
sbb
das
mov
neg
loopne
fs
cmp
pop
inc
lods
loope
push
ror
dec
mov
cmc
out
xchg
add
rcrb
xchg
fsubs
aam
lret
pop
mov
call
mov
lock
mov
dec
mov
xchg
push
or
insb
outsl
inc
js
sub
fistl
shlb
inc
jno
push
dec
xchg
mov
mov
cmp
clc
mov
mov
cmc
test
jne
std
in
dec
aaa
push
xchg
mov
sbb
cs
aas
test
or
push
fcompl
jl
fs
xlat
cmp
xchg
cmpsb
test
test
or
scas
and
sub
inc
sub
ljmp
test
cmp
or
adc
mov
and
call
insl
addr16
out
pop
pop
jo
xor
es
fcmove
xchg
push
adc
mov
fdivrs
lods
fildll
outsb
push
adc
and
jbe
adc
mov
inc
mov
fmul
cld
test
insb
push
inc
dec
je
mov
inc
sbb
lods
mov
or
mov
xchg
push
adc
or
incl
testb
int3
sub
int
cwtl
sbb
mov
loop
adc
dec
xchg
lods
pusha
jmp
daa
mov
inc
and
ret
mov
es
push
imul
das
mov
fbld
testb
add
sub
pop
cmp
in
jle
sub
mov
repnz
int
jge
movsb
cs
mov
sub
out
jg
dec
and
jecxz
fwait
jmp
out
and
cmp
pushf
les
fwait
sbb
jl
loope
dec
sbb
shll
cmc
lcall
push
nop
cltd
push
repz
test
sbb
sub
mov
ret
jne
add
jb
xor
mov
in
ret
in
scas
xor
mov
jns
sub
repz
or
inc
pushf
and
mov
int3
fs
sbb
inc
leave
js
iret
mov
push
std
push
jns
cmp
int3
push
mov
test
dec
fld
adc
subl
int3
pusha
jge
aad
pop
dec
add
popl
rorl
lock
cld
in
sbb
xor
xchg
clc
fmull
sub
mov
adc
das
cmp
out
repz
xchg
sub
xchg
and
mov
mov
ljmp
jp
sbb
add
or
test
daa
lret
push
lods
mov
loopne
push
jns
pop
dec
fwait
pop
xor
add
in
test
incb
in
pushf
sub
mov
xor
cltd
dec
out
fcoml
ret
jbe
add
xor
sbb
insl
aad
push
hlt
cmp
push
gs
js
or
mov
andb
lds
push
lret
jbe,pt
notl
insl
dec
jmp
pop
stc
adc
mov
pop
ficompl
cwtl
dec
mov
cli
xchg
push
adc
out
aaa
xorl
lea
cmpsl
dec
fstpl
push
mov
js
stos
jmp
pop
add
rorl
adc
jg
movsl
xchg
pop
aaa
insb
in
add
ljmp
mov
mov
test
stc
sub
loop
mov
xchg
pop
push
cmp
adc
imul
push
pop
pushf
out
loopne
fidivl
or
inc
adcl
in
ds
xchg
loop
gs
cwtl
mov
lods
sub
sbb
adc
mov
orb
fmull
xchg
stc
fnstcw
or
das
mov
mov
pxor
pop
adc
fisttpll
int
jle
mov
xchg
cld
push
das
imul
dec
loope
cmp
js
loope
or
adc
test
add
in
nop
call
or
mov
movsb
cmp
or
sbb
push
aam
or
loop
pop
das
shlb
or
pop
jo
mov
pop
call
dec
das
sbb
and
push
arpl
les
arpl
pcmpgtw
inc
sub
xchg
mov
mov
rcl
ss
mov
fdivp
mov
pop
fwait
cmp
test
hlt
bnd
xchg
cmc
lcall
pop
sub
add
or
aad
push
or
mov
add
or
adc
mov
pop
inc
sbb
in
aaa
mov
stos
cmp
lret
call
ss
fwait
int3
std
inc
rcr
test
mov
sub
mov
insl
xlat
pushf
xor
movsl
mov
sbb
push
pushf
fdivp
push
cld
inc
push
rclb
or
jb
add
or
fldl
sti
inc
lea
pop
dec
fsubrl
ret
and
fdivrs
lock
lcall
cld
out
xor
xchg
inc
pop
addr16
jnp
pop
pop
xchg
mov
addr16
test
adc
mov
pop
movsl
in
repnz
gs
xchg
loope
cmpsb
arpl
dec
cmp
fidivs
dec
clc
jl
pop
test
xchg
mov
sub
imull
push
es
adc
testb
push
test
orb
push
cmc
mov
icebp
pop
das
pop
xchg
xor
and
mov
in
fcoml
xchg
rclb
testb
out
cmpsb
sub
in
fwait
lds
dec
or
call
fbstp
clc
pop
addr16
sub
adc
icebp
test
add
cmp
mov
or
pushf
pop
jle
mov
test
out
leave
mov
icebp
mov
outsb
iret
push
and
test
mov
enter
mov
movsl
push
adc
dec
and
sbbl
mov
sbb
in
js
outsl
mov
push
arpl
or
shll
dec
inc
outsb
loop
push
jne
and
xor
lcall
gs
mov
outsb
stc
in
xchg
stos
cltd
loope
sbb
mov
or
ljmp
subb
aaa
fistps
pop
sbb
xchg
jle
push
loop
jne
inc
add
insb
mov
sbb
fnstenv
test
pop
jecxz
aam
adc
cmp
cmp
sbb
scas
xor
mov
fcoml
inc
sti
loope
insl
sbb
call
cmp
fwait
jae
sbb
js
and
xchg
pusha
xlat
sub
or
lods
pushf
push
pop
push
add
cwtl
mov
mov
lods
jb
dec
test
cli
xchg
addb
mov
push
vzeroall
xchg
xor
into
stos
jge
or
pusha
dec
lcall
pop
push
insb
push
xchg
jg
sbb
aad
in
cs
sti
pop
pop
in
shr
repnz
jb
cmpsl
and
sub
mov
add
mov
or
jp
cmpsl
popa
or
int3
and
repz
pop
lods
movsb
fistpl
or
daa
out
adc
jnp
pop
sbb
push
repnz
je
imul
decl
ljmp
clc
mov
mov
cmp
adc
push
jo
mov
push
xor
cmpl
jg
dec
sti
cli
dec
add
and
nop
addr16
lret
jp
sbbb
sbb
testb
nop
pop
add
sbb
fidivl
in
popf
or
sbb
in
loopne
sub
dec
lods
cmc
lods
sub
xor
adc
xor
in
icebp
shll
or
push
and
add
xor
lcall
addb
pop
pop
mov
jns
dec
mov
ja
aas
jge
cmp
iret
fdivl
outsb
sub
into
sub
test
mov
xchg
mov
scas
and
jg
jp
mov
lret
lahf
mov
push
cmpb
je
xchg
or
sub
mov
aad
push
loop
frstor
fdivrl
inc
xchg
ds
push
push
cmc
pop
filds
sbb
in
push
addr16
aam
push
sub
or
cmpsb
pop
iret
fcompl
sub
or
add
insl
addr16
add
sub
fnstenv
fnstsw
or
mov
xchg
or
add
jo
scas
mov
addb
sub
xchg
mov
mov
es
push
div
ret
divb
mov
scas
inc
push
addr16
insb
xor
lcall
in
mov
inc
idivl
fs
sbb
xor
xchg
bound
jae
pop
scas
dec
leave
lods
sub
nop
cltd
or
lock
pop
mov
fwait
ret
lret
inc
dec
out
cwtl
inc
push
add
sbb
shr
pop
pop
es
add
pop
pop
mov
adc
push
jp
shl
sub
adc
pop
push
in
inc
push
add
insb
mov
push
cmpsl
xchg
xor
cmp
cmp
into
adcl
xchg
mov
push
cmp
aam
scas
mov
xorb
mov
mov
jecxz
xor
push
call
cs
jp
mov
ljmp
push
icebp
fstpl
xchg
icebp
jb
aaa
aaa
sub
jb
jp
bound
push
pop
mov
mov
mov
mov
mov
xchg
roll
xchg
lds
leave
lds
scas
mov
lret
scas
enter
push
xor
inc
or
cmp
lret
inc
nop
fwait
leave
inc
cmp
or
and
fcoml
daa
push
popf
jmp
test
fidivrl
mov
in
stc
cwtl
cmc
enter
cmp
pop
sub
adc
cltd
cmp
push
adc
add
in
inc
mov
xchg
es
jecxz
int3
stos
add
cli
inc
movsb
outsb
lret
sahf
in
xor
test
in
push
sub
push
into
mov
lcall
sub
icebp
sbb
jne
imul
adc
mov
loope
mov
mov
push
push
nop
cmp
stos
xchg
dec
adc
stos
or
mov
cld
fwait
ds
or
je
filds
inc
pop
jge
inc
in
cltd
or
bound
mov
or
dec
sub
arpl
and
push
mov
cmp
pop
adc
daa
fwait
push
jmp
or
pop
dec
xchg
bound
jbe
pop
jle
mov
pusha
jb
pop
jo
clc
xor
ret
sbb
pop
sahf
outsl
icebp
clc
jl
sbb
outsb
jmp
xor
mov
lock
and
test
stos
jb
movl
scas
je
arpl
and
or
dec
pop
mov
jl
add
pop
dec
out
aad
sarl
lahf
xchg
lea
js
fldcw
rclb
ljmp
imul
sbb
mov
and
in
xchg
cmpsl
add
stos
outsb
adc
nop
popa
push
stc
cmpsb
jnp
fstps
scas
jo
lcall
jmp
sbb
mov
jmp
jne
lods
jb
push
adc
inc
fstps
push
add
sbb
mov
out
pop
mov
pushf
ja
idivl
xchg
fldl2e
mov
in
pop
or
in
mov
jecxz
fwait
adc
mov
dec
pop
cmp
repz
stos
jp
dec
sub
lahf
ljmp
xchg
lea
jmp
push
sub
sbb
leave
mov
xor
fildl
dec
sub
cmpsb
sub
jp
nop
arpl
pop
mov
xchg
pushf
jno
pop
xchg
ja
mov
sahf
psubsb
inc
scas
adc
inc
inc
mov
sbb
add
loopne
pop
pushf
jp
ret
imul
mov
pop
xchg
ljmp
test
sub
cmp
inc
cld
aaa
xchg
sbb
clc
dec
leave
dec
subb
and
in
aas
ss
aam
inc
pop
leave
mov
inc
mov
xchg
jmp
jnp
push
xchg
aad
ret
daa
or
lods
hlt
es
dec
and
or
es
rcrl
push
fwait
js
mov
sub
mov
hlt
lahf
leave
out
sbb
mov
mov
fidivs
sbb
into
pop
out
mov
sbb
adc
ret
push
jge
pop
inc
push
pop
loop
sbb
bound
movsb
dec
sbb
std
popa
inc
inc
push
push
mov
mov
inc
xor
cltd
xchg
rcrl
hlt
xlat
test
insl
jp
cmp
sbb
shll
xchg
mov
das
add
dec
push
int
imul
cmc
jecxz
push
or
lret
mov
pop
in
pop
jno
enter
push
jns
jo
loope
repnz
or
push
jle
lods
adc
movl
pop
popf
fmulp
dec
xor
dec
std
fstl
ss
imul
push
pop
lcall
scas
cmp
dec
mov
cmpsb
mov
mov
lcall
imul
mov
push
jge
aam
scas
addr16
xchg
ljmp
inc
jnp
xchg
jl
jo
data16
push
into
mov
or
mov
sbb
add
pop
cmp
ja
sti
inc
pusha
xor
xchg
sti
ss
sub
inc
sbb
mov
mov
xchg
xchg
xchg
repnz
jo,pn
push
mov
repz
cs
popf
add
xchg
mov
sub
or
in
inc
jmp
cmpb
pop
add
xor
mov
or
out
xchg
dec
imul
push
dec
push
sbb
ljmp
mov
rcrl
testl
sbbl
cwtl
cs
xor
xchg
data16
pushw
mov
xor
cli
adc
cmp
sub
add
or
cmp
daa
shl
pop
cmp
add
lret
jo
arpl
sbb
push
mov
sub
push
out
jg
movsb
jo
out
jl
sub
bound
dec
mov
jge
xor
pop
sub
cmc
or
enter
add
addl
shl
outsb
cmpsl
and
mov
cmpsb
pop
int
pop
idiv
je
cmp
ja
push
add
fsubp
jb
mov
mov
sbb
jns
cli
js
inc
daa
sbb
fucomi
cmp
xor
mov
add
inc
push
jne
das
test
mov
jns
into
mov
insb
xor
pop
pop
js
in
gs
inc
sbb
fistl
add
sub
jbe
stc
sarb
sub
pop
fidivs
push
pop
sbb
push
xor
aaa
icebp
cmc
rorb
push
cmp
xor
and
ret
sub
cltd
mov
push
lods
pop
sbb
mov
dec
test
lcall
cltd
add
mov
inc
stos
ficoms
aas
mulb
adc
mov
lock
or
sub
sub
jae
mov
fcoms
in
jo
jmp
cld
add
push
int
stc
mov
jg
insb
xlat
inc
sub
cli
cmpsb
pushf
cmp
ja
xchg
es
or
in
jg
loop
sbb
ret
clc
mov
xor
push
dec
imul
push
pushf
sbb
push
dec
popf
jbe
nop
xchg
cmp
movb
and
out
movsl
movsl
insl
jns
sub
adc
inc
std
nop
ret
sbb
movsl
int3
dec
repz
js
sbb
es
test
adc
push
push
pop
in
lahf
xchg
lcall
daa
lahf
fs
xlat
or
into
pop
push
out
sub
jg
scas
lods
lds
pop
mov
in
xchg
push
aas
push
pop
lahf
jno
mov
pop
fstp
hlt
or
fnstsw
shr
or
aad
test
dec
js
add
xlat
cmp
add
repnz
inc
lret
mov
or
jmp
cmc
sbb
sub
or
imul
and
in
mov
adc
mov
leave
mov
fisttpl
mov
outsb
cmp
xchg
addr16
rcr
xor
imul
sub
loop
fnstsw
xchg
push
icebp
shll
mov
inc
and
jae
jmp
das
inc
lods
and
xchg
adc
sub
pop
sbb
mov
ja
cmpsb
test
ror
xor
pop
sub
or
mov
out
jmp
outsb
mov
push
jo
push
shrl
mov
test
and
inc
inc
in
insb
add
test
jae
imul
jb
cmp
sbb
add
mov
andb
sub
test
scas
pop
test
xchg
push
inc
enter
shrl
aad
fstl
push
mov
adc
jo
adc
push
mov
dec
mul
inc
std
xchg
cmp
adc
jle
loop
icebp
out
mov
shll
lods
callw
in
stos
mov
push
mov
jle
pop
frstor
mov
bnd
mov
sti
incl
fs
jle
mov
stc
xor
loop
js
and
mov
cmpb
movsl
fcmove
mov
jno
subl
dec
shlb
dec
mov
xchg
mov
inc
rorl
rcll
xor
lret
push
xchg
popa
push
mov
or
mov
xor
push
push
mov
adc
or
enter
pusha
mov
dec
es
dec
sub
icebp
dec
scas
push
inc
icebp
outsb
cmp
repz
sub
xchg
inc
inc
aas
mov
rclb
xchg
push
bound
cmp
outsb
mov
mov
out
mov
shrl
sahf
ljmp
xchg
mov
fs
aaa
imul
lret
shlb
popa
adc
lea
insl
fstp
cmp
out
lods
push
mov
lret
and
add
cmc
xchg
inc
cmp
cmp
aam
lahf
jecxz
out
jge
addr16
jne
out
or
adc
cmp
cld
or
or
daa
mov
sub
bound
mov
aas
push
outsl
sub
and
mov
rcrb
pop
mov
or
push
xchg
or
mov
pop
mov
jae
mov
cmpsl
mov
aam
lea
testb
ljmp
xlat
pop
or
cmc
mov
pop
ret
jo
and
int3
and
and
add
xchg
add
in
lahf
or
lods
lods
adc
fwait
sarl
dec
out
fiadds
push
sbb
stos
pop
mov
xor
xchg
rclb
and
and
iret
lret
dec
lret
mov
test
shlb
aas
fildl
dec
mov
jmp
lcall
xchg
in
sbb
xchg
xchg
cmp
ret
lcall
jmp
sub
aas
insb
push
adc
mov
lcall
adc
push
rorl
imull
and
insb
dec
ja
mov
insl
cmp
int3
xor
lock
dec
or
out
xchg
mov
xor
enter
xorl
jl
mov
jle
sbb
cmp
into
mov
xchg
mov
enter
in
xchg
in
sahf
jmp
arpl
out
pop
mov
or
push
in
pop
sbb
cmp
mov
inc
jo
int
cmpsl
pop
int
test
jbe
out
insb
pushw
leave
push
mov
pop
cmp
adc
adc
sub
mov
dec
jge
iret
xor
decl
mov
ror
lock
test
pop
push
add
sarl
ret
and
cltd
lock
mov
jge
out
sbb
xor
jle
cld
notl
mov
xchg
outsb
loop
scas
out
pop
jne
add
mov
mov
shll
xor
mov
insl
jae
daa
pushf
je
mov
sub
mov
dec
ficoml
mov
cmp
pop
stos
stc
xchg
mov
and
xchg
pop
lcall
ficompl
jmp
stos
out
xchg
lods
out
sub
outsb
xchg
sbb
push
and
ret
pop
in
xchg
clc
xchg
pusha
push
xchg
pop
add
stos
jae
inc
aad
push
cmpsb
in
icebp
lahf
pop
in
add
pop
popa
ret
adc
inc
push
jae
enter
incl
outsb
pop
mov
js
aaa
pop
mov
mov
push
mov
pop
xchg
fadd
xor
xchg
das
loopne
pushf
jecxz
mov
cmpsb
stos
cmp
rorb
inc
repz
cmc
or
pop
mov
push
data16
sub
dec
loope
lods
add
jo
pop
mov
sti
push
shrb
xchg
stc
hlt
xchg
dec
cmpsl
out
pop
enter
imul
leave
out
mov
aas
add
xchg
sub
ret
push
pop
rcrb
jle
inc
cld
shlb
pop
inc
jl
clc
addr16
dec
lret
es
inc
in
inc
xchg
pop
cmpl
and
mov
rol
xchg
add
cmp
ret
test
sub
sub
icebp
mov
add
test
shrl
in
push
lds
jmp
push
stc
adc
adc
jecxz
inc
pushf
inc
or
lcall
stc
fnstsw
les
js
js
lahf
add
mov
lahf
rolb
xor
push
sbb
sti
fiadds
js
mov
movl
fwait
or
fisttpll
sub
std
pushf
fwait
inc
ja
mov
mov
inc
cld
inc
add
mov
in
mov
popa
stos
or
jns
push
xchg
push
sti
inc
mov
jb
xor
add
push
xlat
rclb
imul
pop
idivl
mov
fcomps
std
sbb
test
inc
orb
rcrb
stos
nop
fstl
mul
cmp
bound
gs
insl
pop
mov
mov
mov
xchg
sub
jno
adc
jmp
mov
jmp
or
gs
add
add
aaa
ret
xor
mov
xchg
pop
sahf
sub
popa
cmp
xchg
or
pop
cmc
push
push
fldcw
andb
cld
inc
lods
sbb
int3
add
dec
or
out
dec
sbb
or
xor
js
mov
xor
dec
pop
lcall
push
mov
and
jb
jbe
notl
stc
cmp
gs
adc
dec
dec
das
and
dec
adc
in
mov
sti
mov
out
mov
hlt
dec
cld
push
mov
js
enter
lahf
jp
mov
test
stos
aaa
mov
test
sub
test
push
repz
shl
iret
push
lea
js
fwait
daa
pop
daa
mov
std
cltd
stc
pop
sub
adc
outsb
sub
les
cmpb
sub
or
lods
pusha
sti
jmp
lcall
aam
push
jg
dec
jns
pushf
out
daa
xchg
cli
cmp
aaa
mov
push
ljmp
leave
dec
push
jmp
aam
andl
inc
loopne
shlb
inc
mov
inc
test
sub
xchg
mov
adc
nop
int
dec
cmovno
jmp
scas
lods
push
popf
nop
xchg
test
cmpsl
add
mov
leave
call
rcll
lock
xchg
dec
aaa
push
in
jl
adc
ja
pop
pop
les
sbb
jl
aaa
das
test
test
and
gs
xchg
mov
or
movsl
lea
rorb
ljmp
popa
mov
cs
or
or
insl
repnz
outsb
pop
fnstcw
sub
xor
imulb
cmpsl
rcl
xchg
pop
shl
cmp
sti
callw
shlb
dec
and
mov
ja,pt
clc
adc
push
imul
and
adc
mov
inc
notl
xchg
dec
mov
in
lcall
test
idivl
int3
dec
inc
ss
in
outsl
pop
xlat
cltd
ds
cmpl
xor
cmp
jnp
hlt
xor
and
rol
popa
mov
mov
cmp
fs
xor
les
in
push
pop
sbb
jge
andb
or
xor
into
sub
mov
mov
jl
pop
out
pushf
repnz
mov
xor
pop
out
shll
outsb
inc
ja
dec
in
out
mov
pop
or
out
and
jb,pt
and
mov
test
and
add
xchg
adc
int3
xchg
jo
add
das
into
lock
jmp
aaa
imul
ljmp
lret
pop
dec
cli
xchg
out
sub
lods
jle
mov
or
pop
xchg
lods
push
stc
push
mov
or
sub
adc
dec
xor
cmp
sbb
adc
dec
pop
jno
enter
push
insl
adcb
rol
sarb
inc
into
jnp
sbb
mov
xchg
push
cmp
popa
push
aaa
mov
into
pop
cmpsb
mov
pop
xchg
scas
xchg
mov
stos
shl
xchg
out
sbb
dec
cmc
xchg
pop
cli
test
dec
mov
pop
push
add
xor
or
inc
jle
lea
jb
iret
sahf
mov
mov
mov
imull
jg
inc
in
pop
faddp
cld
xorb
pusha
or
pushl
das
dec
cmpsl
pusha
icebp
fnstsw
cmpsl
insl
mov
sbb
pop
rcr
push
shll
sub
add
mov
and
pop
mov
sahf
ret
sub
push
lea
jge
fsubs
outsl
addr16
call
dec
into
xor
jno
inc
sub
xchg
loope
cmpb
jmp
leave
std
scas
dec
loope
adcb
mov
ja
idiv
push
dec
push
into
pop
out
xor
scas
mov
jmp
int3
fwait
pop
dec
ss
repnz
jne
psubusb
inc
mov
fdivs
mov
and
pushl
sahf
sbbl
repz
pop
insl
and
in
and
ss
sbb
ficompl
xor
pushl
call
mov
cmp
lea
std
pop
or
mull
cmpsb
cmp
fadds
push
lea
inc
cwtl
add
push
out
loop
mull
lds
jge
jbe,pt
xadd
test
cmp
jl
ss
pop
adc
xlat
cli
testl
push
out
pop
jns
sub
das
inc
cwtl
loope
movsb
in
pusha
cmpsb
inc
cmp
jo
out
pop
lods
add
xchg
test
lods
inc
fsqrt
jecxz
call
adc
xor
clc
sbb
lds
mov
mov
inc
jb
push
jb
ljmp
dec
js
pop
stc
jl
sbb
hlt
jecxz
mov
and
inc
ret
icebp
ret
repz
lret
mov
or
rcrb
pop
inc
iret
jne
lock
in
adcb
pusha
fscale
adc
fcompl
pop
aad
lret
or
and
fcmovbe
idivb
arpl
cmp
cmpsb
stos
int
scas
and
inc
sub
cltd
divl
rolb
aad
fistpll
ret
pop
push
xlat
jae
call
xor
jmp
sub
into
or
lret
mov
ret
and
jbe
imul
pop
fbstp
out
stos
dec
out
adc
adc
subb
pop
loope
addr16
lea
in
jne
int3
pop
sbb
and
sbb
sub
xchg
sbb
jae
mov
pop
mov
clc
add
das
popa
or
lret
cwtl
xchg
mov
jmp
and
and
insb
inc
cmp
push
jne
pop
push
leave
inc
xor
fwait
push
test
and
mov
adc
enter
repz
aas
pop
sti
test
cmpsl
sbb
pop
push
or
mov
ret
sbb
cmp
mov
jle
mov
lret
pop
jmp
inc
or
cmp
push
roll
lret
mov
data16
js
xchg
pusha
push
rcll
repz
shlb
xor
sbb
xor
sbb
xchg
ja
jb
nop
pop
cld
out
les
repnz
mov
aas
adc
mov
jmp
push
sbb
xchg
push
repnz
xor
dec
fcompl
jmp
pushf
fwait
lock
rorb
leave
aaa
pop
xor
mov
int
fwait
fwait
and
shlb
adc
adc
test
int3
mov
inc
aas
push
std
dec
fnstenv
or
pop
rol
push
pop
mov
cs
out
sub
dec
orb
mov
je
rcll
int
jno
std
xchg
jg
add
push
inc
push
jns
ret
cmp
ret
adc
popl
cmp
mov
mov
orl
mov
mov
jbe
jp
mov
fbstp
lahf
sub
es
sbb
or
js
mov
rorb
je
cmpsb
into
scas
add
or
jecxz
into
mov
mov
and
inc
push
sub
mov
or
adc
in
mov
fcmovnb
lock
test
cltd
stos
pop
lods
inc
jbe
or
mov
lret
sbb
scas
fisubrl
loop
jmp
popf
pusha
pop
jnp
push
pop
xlat
ss
inc
std
sbb
jo
sbb
lods
jl
sahf
ljmp
cld
pop
jnp
fidivs
add
repz
adc
cmpsl
inc
jne
sub
cmp
or
xlat
sbb
mov
fsubl
sub
push
cmpsl
aam
dec
inc
add
das
mov
lods
and
dec
arpl
pop
daa
sub
xchg
out
in
xchg
and
sub
sub
lock
sub
scas
sbb
push
and
xchg
sahf
cmpl
pushf
sub
xchg
loop
jae
xor
es
mov
xor
mov
mov
and
test
fs
outsl
or
sub
xchg
jle
cmp
negl
mov
sbbb
fidivrl
sbb
inc
xchg
pushf
cs
sarb
faddl
sbb
cli
push
adc
into
ret
ss
setb
test
add
iret
push
idivl
das
cwtl
inc
inc
sbb
orl
push
sbbb
jl
scas
pop
aaa
jns
inc
sahf
push
test
cwtl
cmp
xchg
inc
push
jns
lret
mov
xchg
push
jl
stc
idivb
adc
sub
xor
inc
cmp
jne
push
loop
pop
xor
xor
and
push
add
and
sub
in
cmp
jp
xchg
and
movntps
xchg
adc
bound
sarb
ss
lahf
in
loope
out
cwtl
ret
call
push
xor
sarl
int
shlb
inc
xchg
decl
push
or
dec
loope
dec
js
or
das
div
testl
or
outsb
inc
mov
int
or
add
popf
jle
cmp
sbb
jecxz
in
imulb
mov
xor
hlt
fmul
mov
rsqrtps
jnp
aas
sbb
sub
push
lds
inc
xchg
cli
mov
sub
cwtl
cwtl
xor
gs
or
inc
pop
ja
xchg
test
movsl
mov
push
push
push
cmovno
lcall
shlb
pop
inc
adc
bound
aaa
test
mov
fwait
cmp
js
popa
inc
sub
pop
iret
outsl
lods
das
cmp
push
mull
fndisi(8087
sbb
scas
jb
pop
and
pop
inc
pop
push
mov
inc
push
data16
jecxz
aam
out
movsb
lahf
jb
pop
int3
popa
cli
sub
push
icebp
mov
xor
out
gs
aad
negb
adc
test
push
xchg
xchg
mov
adc
mov
xchg
or
mov
lahf
lds
push
repnz
ret
push
rclb
imul
or
jecxz
stc
inc
jl
pop
push
xchg
inc
push
filds
out
mov
outsl
mov
icebp
mov
cmp
sub
jl
sub
out
or
sub
sub
mov
repz
xor
jg
pop
gs
jno
push
enter
push
insb
mov
movsl
fmuls
jb
pusha
shll
scas
test
fwait
pop
xor
inc
push
lret
mov
fisubrl
pop
ret
add
push
popa
add
push
into
push
mov
and
popa
sub
inc
and
movsl
pop
inc
cli
lods
das
dec
filds
fxch
leave
mov
xchg
dec
cltd
jmp
mov
mov
push
inc
aam
int3
sti
jmp
loopne
mov
xor
outsb
fmuls
pop
and
jne
or
push
lcall
int3
add
push
xchg
cmp
and
inc
xor
ja
push
les
add
cmp
jae
sbb
and
jp
cmp
or
mov
jl
sbb
iret
movsb
inc
add
pop
insl
mov
pop
and
lea
out
add
movsl
loope
in
addb
icebp
inc
cmpsb
dec
xchg
or
inc
imul
loop
push
and
mov
pop
fdivrs
pop
cmp
daa
jb
jg
inc
dec
adcl
addr16
cmpsl
mov
dec
fmul
dec
hlt
popf
sti
cmp
mov
or
or
testb
sbb
call
and
push
pop
shlb
pop
fildll
cld
popa
dec
lock
icebp
dec
jle
sub
inc
pop
lcall
movsl
add
dec
xor
xchg
js
movsl
mov
sub
mul
insl
lcall
test
add
mov
adc
cltd
loop
fs
xchg
adcl
das
xchg
hlt
fidivl
or
mov
clc
push
mov
sbb
fsubrp
data16
or
mov
sbb
test
pop
jnp
mov
test
std
out
push
jns
sub
in
adc
stos
pop
jnp
hlt
sbb
mov
out
aad
into
xor
stc
faddl
cmpl
push
popa
hlt
test
lea
mov
aaa
push
nop
scas
and
xchg
xchg
loope
jbe
dec
dec
mov
lret
movsl
scas
mov
ja
xacquire
movsl
dec
pop
idivl
jp
out
mov
mov
lea
adc
clc
loope
mov
out
repnz
sar
xor
pop
imul
aam
nop
or
gs
sub
push
into
repnz
addb
xchg
or
lahf
jl
xor
out
mov
adc
aaa
enter
lahf
jnp
lods
fldenv
mov
and
cmp
stos
mov
and
imul
mov
rcll
push
lret
mov
xchg
and
ds
pop
jp
and
leave
orl
ja
xchg
pop
inc
push
adc
inc
dec
popa
inc
hlt
inc
int
cmp
xchg
dec
pop
scas
adc
lret
in
out
mov
xlat
push
sbb
out
int3
mull
les
add
sub
imul
or
mov
and
out
mov
call
pop
mov
mov
adc
scas
mov
inc
bound
stos
adc
lds
add
decb
das
push
adc
lret
mov
stos
gs
mov
and
pop
test
shrb
sbb
scas
cmp
cmp
fcomps
mov
lahf
mov
cmp
rcr
sar
sub
movsb
xchg
je
ret
bound
sbb
mov
lods
stos
dec
mov
mov
pusha
and
out
sub
aas
bound
mov
mov
das
pop
xor
rcrb
mov
lock
mov
divl
ds
sbb
inc
mov
je
aaa
sbb
jns
test
mov
jmp
jne
sub
adc
push
mov
loope
mov
insb
jno
insb
test
aas
in
ret
and
xchg
lods
enter
push
lods
pop
inc
or
arpl
gs
lock
pop
aad
mov
cmp
or
insl
dec
clc
negl
packssdw
pop
imul
mov
pusha
addb
pop
mov
out
lea
hlt
fs
out
dec
stos
mov
sub
jb
sbb
shll
xchg
jmp
xchg
imul
outsl
xor
adcb
pop
fwait
scas
mov
dec
in
dec
fwait
push
xor
pop
mov
xor
add
movsb
das
dec
sub
insl
push
sarb
sbb
and
ljmp
or
mov
push
cs
sub
and
pop
dec
pusha
stos
cmp
sub
jmp
cmp
mov
subb
and
in
sbb
notl
jo
in
mov
mov
fnstcw
pop
aad
jp
adc
scas
mov
or
cmp
push
loop
insb
sbb
movsb
dec
jo
jg
dec
inc
sbb
repz
and
lock
mov
and
and
inc
adc
add
loop
call
xor
cwtl
lret
lret
or
pop
add
lea
out
sbb
xchg
mov
iret
adc
test
lret
mov
and
push
mov
lret
lret
mov
stc
into
lods
ljmp
jge
jmp
pop
inc
call
add
movsl
jle
mov
scas
lcall
sbb
in
xchg
bound
pop
daa
or
vcvttss2si
push
xorl
bound
stos
leave
fnstsw
cmp
mov
test
jle
and
movsb
aas
sub
push
push
mov
dec
repz
out
enter
xchg
dec
shr
push
fwait
jmp
mov
idivb
sbb
cmp
sbb
lret
adc
iret
in
xchg
mov
push
inc
sbb
push
imul
int
push
push
fmuls
movl
jnp
test
mov
xor
jmp
mov
rorl
outsl
xchg
or
sub
xchg
or
xchg
movsl
add
sub
xchg
repnz
shl
inc
sub
push
fisttpll
test
notb
lods
sbb
adc
repnz
in
inc
push
push
out
lea
adc
cmp
cmpsb
dec
inc
sub
add
or
dec
inc
and
xor
outsl
scas
inc
sbb
enter
sbb
scas
sub
lret
jns
mov
xor
add
movsl
push
gs
inc
adc
push
test
add
ret
es
xor
jns
pop
and
inc
out
testb
mov
cmc
scas
pop
adc
xor
call
add
sbb
inc
dec
jge
adc
clc
add
lahf
mov
xchg
adc
gs
cmp
sub
jbe
sub
in
xchg
xor
imul
xlat
mov
cmc
inc
and
mov
push
test
pop
sbb
and
push
push
push
lret
rcll
inc
repz
lret
fstpt
mov
std
cwtl
pop
cmp
sbb
packuswb
xchg
mov
or
dec
arpl
data16
sbb
adc
dec
fwait
sbb
push
push
cmp
out
push
iret
inc
repz
call
mov
jecxz
sti
cmp
pushf
adc
bound
cmp
mov
test
rcrl
fidivs
pop
into
and
stos
inc
xor
ss
dec
cli
xchg
lret
dec
and
cmp
mov
jne
add
cmp
or
insb
dec
cmovbe
dec
repz
movsl
mov
popa
es
shll
cwtl
pushf
test
popf
inc
mov
hlt
in
and
adc
cmp
pop
iret
cli
out
nop
in
pop
adc
cs
sbb
mov
sarl
xchg
mov
dec
lret
shll
fimull
orl
dec
sbb
out
mov
and
mov
cs
pusha
enter
popf
pop
sub
cmp
jle
js
aad
pop
rorb
fdivrs
push
popa
dec
cmpsl
or
pop
rolb
in
inc
lods
stos
sub
jge
add
mov
push
es
sbb
lahf
cmc
or
sbb
xlat
dec
int3
mov
inc
or
mov
mov
iret
jns
and
test
add
fstps
roll
mov
dec
and
daa
jg
lahf
scas
push
in
rcl
inc
fsubs
adc
cmp
pop
loop
lock
jecxz
cmp
dec
mov
pushf
cmp
ret
cmpsl
pop
push
add
lahf
int
daa
xchg
pop
ljmp
xchg
adc
pop
jae
lcall
xor
ret
push
fidivs
fs
jbe
dec
outsl
bound
in
das
rcrl
dec
mov
in
mov
sti
jl
movsb
mov
dec
aaa
push
inc
push
lcall
lock
imul
mov
insl
std
enter
push
stos
fistl
icebp
std
xchg
and
sbbb
xchg
pop
mov
dec
cld
aad
push
add
sbb
jl
sub
xchg
xchg
xchg
dec
mov
rolb
push
fadd
xchg
cmp
jne
mov
js
stos
es
push
mov
cmp
stos
das
ljmp
push
mull
fldl
sbb
adc
push
test
xor
sbb
add
hlt
xlat
push
icebp
cmpsb
sbb
int
or
gs
sbb
cmpl
or
push
insl
popf
xor
adc
fistps
adc
ja
stos
popa
sbb
inc
loope
in
inc
subl
imul
aad
mov
lcall
incl
loop
lret
inc
xchg
popa
popa
lods
inc
popa
mov
in
dec
mov
bound
scas
jne
adc
xchg
test
scas
aad
xchg
test
rcl
add
adc
push
cwtl
cmpsl
pop
inc
in
jg
mov
sar
mov
nop
push
mov
mov
mov
ja
int
outsl
in
rorb
mov
jecxz
add
outsl
sbb
or
push
in
mov
sahf
jns
mov
data16
ds
pop
dec
je
sbb
pushf
jecxz
outsb
dec
imul
fdivrl
mov
fidivs
push
push
mov
fisubrl
fimuls
jl
sbb
or
push
jmp
cli
icebp
lods
std
std
icebp
jecxz
pusha
lahf
cmp
inc
push
mov
dec
and
out
inc
pop
or
sbb
xchg
pop
jb
jp
orl
pop
mov
jae
mov
cmp
dec
add
xor
mov
aam
mov
mov
mov
sbb
lods
jno
mov
jmp
out
faddp
jns
mov
push
mov
scas
pop
lods
sahf
sbb
add
addr16
lret
xor
rorl
cmp
jne
out
mov
ss
jp
aad
and
xchg
es
and
popf
lock
ja
arpl
sub
jb
mov
sbb
js
add
inc
and
out
push
inc
es
xlat
push
and
ljmp
sub
pop
jno
in
in
sub
lock
cmp
arpl
jo
pop
lcall
hlt
pop
or
in
inc
sahf
lods
inc
xchg
cmp
loopne
pop
mov
insl
sub
leave
mov
insb
sti
lret
xor
outsl
add
cmp
xchg
push
out
cmpsb
ds
std
jmp
jl
loopne
mov
call
jbe
cmp
mov
cmp
sub
dec
scas
push
lods
dec
dec
movsl
cld
out
cmc
pop
mov
insb
cltd
push
dec
fimull
cmp
cli
jp
loopne
xor
push
sub
dec
mov
call
inc
pop
insl
lcall
and
cmp
out
data16
mov
shr
sub
out
xor
mov
int
and
test
insb
push
mov
sub
cmc
shlb
mov
ret
push
testb
cmp
nop
jge
sub
fs
cli
add
shl
stos
push
scas
inc
add
jbe
sub
jmp
add
xor
push
add
addl
push
loopne
xor
or
xchg
repnz
mov
jge
hlt
pop
xchg
mov
and
inc
inc
addl
jecxz
sbb
pshufw
sbb
test
mov
scas
dec
test
adc
ljmp
sbbb
and
in
sub
je
out
aam
jne
outsb
int
add
enter
insl
pop
jl
lahf
stc
and
add
jno
repz
sbb
jmp
push
adc
test
push
xor
inc
ljmp
jnp
dec
xor
stos
test
xchg
xlat
pop
or
adc
mov
iret
aaa
mov
stc
inc
orb
jl
aaa
jbe
push
pop
xor
fs
iret
and
add
adc
aaa
pushf
push
cli
add
test
mov
add
xor
and
sti
sub
out
dec
xor
stos
inc
lods
xor
jp
inc
pop
mov
mov
xchg
ficomps
loope
out
mov
or
inc
cli
add
or
mov
cmp
mov
ss
pop
add
nop
jl
lock
mov
pop
dec
cmp
xrelease
inc
leave
fsubrl
and
xchg
lock
sbb
and
lods
shld
push
sbb
mov
fldt
pop
loope
mov
test
scas
fstpt
jecxz
out
lock
and
jl
fcmovnbe
xor
fidivrl
mov
test
mov
xchg
and
popf
out
stos
aaa
mov
gs
ret
imul
xchg
mov
rclb
pop
mov
scas
aas
xchg
inc
sbb
das
stos
pop
or
and
adc
inc
fsts
inc
xchg
pop
lea
sub
pop
push
add
inc
fstl
jl
int
stc
fcmovu
lahf
add
popf
adc
mov
std
call
sub
lock
repz
les
stos
outsb
ljmp
mov
into
push
dec
add
data16
sbb
xor
repz
and
stc
jle
jae
adc
jnp
inc
bound
cmp
lret
jnp
out
sub
dec
dec
and
push
cmp
cmp
pop
dec
loope
popf
xor
xor
fidivs
pop
aaa
or
cmpsl
mov
mov
adc
and
lock
cld
loopne
xor
int
jge
ja
pop
xorb
sahf
ja
ds
jl
adc
inc
adc
adc
outsb
add
rorl
mov
add
incb
push
xchg
js
loope
mov
xchg
jne
sbb
pop
bound
lock
rcr
mov
xchg
bound
or
mov
cmpl
mov
add
add
mov
mov
lods
mov
testb
call
mov
pop
enter
das
adc
jecxz
imul
jge
mov
xchg
in
inc
inc
mov
xchg
lods
lds
push
mov
and
int3
inc
xor
xchg
inc
imul
mov
xor
jl
push
sbb
out
xor
sti
add
lret
xor
loopne
lods
into
imul
inc
call
roll
setns
adc
insl
int3
call
pop
pop
subb
push
dec
test
fcmovnu
shrl
sub
cli
movsb
hlt
hlt
mov
jne
adc
lods
sub
testb
mov
mov
pop
xchg
pop
imul
test
jg
and
pop
aas
xlat
add
test
adc
mov
ds
push
scas
cli
cmc
lods
test
xchg
inc
pop
adcl
repnz
data16
jg
jno
dec
xor
or
sbb
es
pop
inc
inc
cmp
inc
or
jae
outsl
jne
hlt
scas
sbb
mov
pusha
xchg
rcll
jnp
and
fisubs
jbe
sbb
jg
hlt
mov
jl
sub
idivl
dec
fwait
mov
push
movsb
pop
enter
xchg
repz
or
mov
dec
outsb
add
pop
cld
push
arpl
jmp
ret
pusha
mov
push
ljmp
push
pop
aas
mov
das
popa
cmpsl
nop
or
int
in
and
pop
jno
jl
and
cli
stos
pop
mov
inc
xchg
lret
sub
cs
inc
sti
xchg
insb
movsb
xor
jae
push
mov
cmp
mov
mov
shl
jbe
in
pop
aam
xor
fcoml
or
jl
pop
out
ret
jp
in
inc
lret
stos
ljmp
cmpsb
sub
rcr
mov
inc
sahf
mov
in
mov
cmp
fldcw
cmp
int
cmp
inc
mov
cmc
or
in
sub
cmp
sbb
pop
add
mov
push
les
mov
aad
push
jbe
loopne
repz
js
jne
jo
shrl
popf
inc
jmp
adc
push
cmpsl
cmp
adc
lods
xchg
push
xor
pop
ret
iret
andps
mov
cmp
repnz
insb
int
inc
cmp
iret
mov
dec
stos
adc
test
push
cwtl
sbb
push
pop
cli
adc
cltd
push
mov
xchg
enter
mov
mov
cltd
xchg
das
mov
fidivs
push
mov
dec
fsub
xor
das
or
sahf
xchg
adcb
test
pop
adc
mov
mov
jmp
xchg
jmp
scas
sti
push
add
mov
das
mov
imul
mov
push
push
xor
mov
cmp
dec
lods
jecxz
addr16
push
nop
imul
les
mov
pushf
push
mov
aam
pop
mov
outsb
inc
jge
leave
dec
sti
int3
ljmp
out
out
mov
sub
repnz
fisubrs
outsb
xchg
jbe
cmc
xchg
lea
mov
or
pop
out
in
push
inc
mov
sbb
cmc
jo
mov
cs
test
mov
mov
jmp
push
pop
lods
cwtl
lods
mov
out
xchg
je
xor
cmc
mov
jae
daa
push
enter
mov
pop
nop
fimull
or
mov
jecxz
xor
bnd
call
add
fildl
and
loope
adc
pop
je
mov
sub
sbb
popf
dec
cmp
mulb
jb
jp,pn
icebp
int
aad
aas
mov
mov
mov
sub
sbbb
jnp
xchg
out
mulps
mov
aaa
dec
hlt
ret
pop
lock
inc
scas
popf
jne
xor
sub
movsb
loop
dec
rol
sbb
xchg
jle
mov
xor
push
push
repz
outsl
xor
repz
ss
out
subl
dec
inc
filds
jns
adc
syscall
jne
add
jnp
sar
in
adc
jne
pop
lret
rcll
fwait
xchg
and
popl
icebp
ljmp
cmpsl
aaa
mov
repnz
add
movsb
jp
push
sbb
adc
mov
ja
add
mov
sub
std
mov
jno
sbb
andb
stos
push
inc
and
pop
test
cmp
cwtl
fs
cmp
or
mov
ljmp
into
sbb
xorl
inc
inc
pop
jmp
lods
ss
push
dec
and
xchg
mov
mov
mov
pusha
pop
mov
inc
jne
jno
aad
xchg
pop
jbe
sbb
test
lret
jmp
dec
js
adc
cs
add
inc
fcmove
in
mov
test
fxch
mov
add
nop
out
lret
pop
mov
push
outsl
xchg
jmp
jno
push
add
fcompl
mov
lock
adc
and
imul
cwtl
inc
or
int3
cmp
pop
aas
cwtl
mov
popf
pop
rorb
inc
test
add
jle
dec
lods
jge
adc
daa
cltd
adc
jecxz
fstp
xchg
and
out
add
int
imull
iret
sub
add
mov
cs
jb
jno
or
xchg
fwait
jg
cltd
or
enter
loopne
lret
mov
jbe
notb
test
sbb
std
jmp
addl
mov
sub
pop
lock
push
push
test
dec
mov
mov
je
jl
notl
add
outsb
add
pop
xchg
loopne
icebp
cmp
repz
and
mov
jo
add
add
push
pusha
scas
pop
addl
les
inc
inc
sub
imul
xchg
adc
shl
fidivrs
jbe
fisttpl
jl
dec
or
lods
iret
gs
cmp
mov
gs
lods
sub
or
adcl
lods
xchg
push
popw
aaa
inc
dec
dec
int3
fdivrp
movlps
dec
mov
cwtl
adc
jmp
mov
js
mov
hlt
mov
ss
push
add
xor
mov
cli
stc
or
dec
stos
adc
fcmovu
std
or
in
sub
xor
mov
jb
fldpi
sub
jl
inc
mov
cmp
das
ret
jb
dec
in
loop
stos
xlat
or
xchg
sbb
cmp
xchg
add
int3
mov
dec
jo
xor
pop
xchg
imul
lcall
sub
dec
pop
pop
scas
icebp
ds
jmp
or
inc
cwtl
rolb
out
inc
sahf
mov
inc
imul
mov
cmp
out
loopne
jl
push
repnz
into
mov
add
rcrb
negb
dec
out
hlt
jmp
mov
xchg
sub
fwait
rorl
mov
xchg
or
cmp
or
dec
ss
lcall
push
out
in
mov
lcall
or
xor
cli
pop
or
pop
ljmp
popf
popf
lcall
bound
subl
pop
fmuls
insb
test
inc
jecxz
sarb
dec
fsubrl
adc
mov
cmp
inc
xchg
sbb
mov
sub
pop
and
pop
push
into
mov
mov
fcompl
into
or
stos
pop
nop
mov
add
mov
mov
mov
fldcw
popl
bound
mov
jne
add
ret
insl
xor
inc
jmp
popa
clc
movq
nop
scas
mov
xchg
fiadds
adc
jle
cmpb
std
push
pop
jno
xchg
out
stos
inc
dec
inc
lahf
in
jp
jno
rorl
xlat
dec
dec
and
jne
jecxz
fisttpll
outsb
sub
ljmp
jmp
mov
cmp
xor
in
sub
jmp
jae
jl
stc
gs
arpl
inc
push
lea
bound
je
push
shll
fisttpll
dec
bndstx
es
imul
icebp
adc
andb
ljmp
mov
dec
sbb
jo
jle
iret
int
cwtl
nop
stos
fdivrs
jbe
aaa
add
jle
icebp
aas
cs
xor
mov
arpl
rclb
iret
cmpsb
enter
add
add
in
or
push
sbb
adc
cld
ss
xor
xchg
lock
dec
sti
cltd
inc
jp
fnstcw
ss
adc
mov
dec
outsl
sbb
fwait
repnz
jnp
add
rorl
or
jbe
mov
pop
fistps
or
pop
mov
push
rolb
or
repz
dec
clc
dec
addr16
pop
push
popa
push
or
mov
iret
push
ror
fisubs
mov
out
test
lahf
fcmovne
rorb
pop
aam
sbb
mov
les
mov
push
or
or
lock
cmpsl
add
repnz
mov
jno
sbb
fldl
lea
lret
les
sub
lds
iret
and
dec
mov
mov
in
add
lods
ret
sbb
subl
sbb
aaa
mov
mov
push
inc
addr16
sub
pop
jnp
and
pop
lods
dec
or
jae
and
aas
insb
aas
pop
int3
rcrl
enter
push
mov
xchg
nop
insl
xchg
out
add
fwait
add
and
rclb
jp
pop
mov
sti
mov
movsl
incl
xchg
inc
push
lret
lret
cmpsl
int
xor
jle
mov
push
nop
cwtl
jmp
pop
push
insb
add
xor
xor
out
rclb
and
bound
das
push
sub
nop
aam
mov
xorl
and
inc
rcrb
test
ret
xchg
or
mov
arpl
mov
pop
lds
orb
adc
mov
mov
inc
dec
repz
test
cmp
stos
addr16
mov
sbb
pushf
pop
insb
or
inc
lahf
push
cmpsl
aad
shlb
cld
jmp
cmp
test
jl
jo
faddl
jge
jno
dec
xor
adcl
cmp
mov
xchg
dec
in
ja
sbb
enter
push
outsl
add
jb
pop
pop
pop
imul
pop
and
loope
nop
or
xsaveopt
repnz
mov
int3
mov
insl
ljmp
ret
sbb
push
pop
mov
cmp
mov
mov
mov
push
mov
insb
std
mov
mov
cmp
daa
insb
add
xor
and
scas
xor
mov
dec
xchg
jns
lcall
ret
aas
lret
add
fimuls
in
fs
jp
in
sbb
push
push
mov
popa
or
test
cmp
cli
mov
fisubs
and
test
jl
pop
in
js
fwait
xchg
mov
shlb
mov
pop
adc
lahf
cmp
movsl
loope
xchg
and
call
inc
insb
dec
mov
fbld
leave
out
int
adc
lahf
xor
xchg
test
pop
out
enter
in
lret
mov
data16
outsl
je
dec
mov
cmpsl
or
ljmp
and
aam
arpl
out
cltd
xchg
iret
imul
fwait
dec
jb
xchg
shrl
xchg
mov
push
pop
fdivl
xchg
inc
push
cmp
lret
dec
cltd
mov
cmp
movsb
insl
mov
icebp
pusha
push
sbb
push
aaa
out
dec
sbb
add
in
dec
mov
cmp
pop
pop
lret
mov
xor
mov
fdiv
mov
in
inc
negb
adc
insl
bound
das
xor
stos
xchg
and
jmp
adc
xlat
pop
push
jo
sub
or
xor
fimull
push
addr16
or
add
aam
xor
stos
out
pusha
sub
xorl
scas
add
adc
stos
cwtl
fbld
add
add
fildl
inc
iret
cltd
enter
in
mov
cli
into
sub
loope
dec
loopne
or
fwait
xlat
lods
cmpsl
push
mov
sub
out
cs
cmpsb
cmp
outsl
or
sbb
daa
jno
cld
push
icebp
das
cld
push
mov
jmp
hlt
addl
or
sub
add
outsb
cli
add
ljmp
mov
inc
pop
test
adc
push
pop
lahf
into
cwtl
or
subb
imul
scas
inc
sbb
int3
and
repnz
lret
or
inc
orb
enter
enter
sub
pop
xchg
push
or
sbb
ror
jecxz
lods
mov
dec
push
mov
mov
sbb
cmp
and
adc
mov
xchg
add
xchg
lahf
repnz
testl
add
cltd
push
je
jae
pop
jbe
xor
push
xor
test
rcrb
repnz
xchg
mov
das
pusha
insl
inc
cs
jno
test
sbb
data16
call
xchg
mov
into
jbe
mov
lods
dec
inc
jno
leave
ret
fstpt
nop
ficoml
xchg
inc
in
mov
popa
xchg
iret
inc
pop
pop
push
sbb
cmpsb
xchg
dec
mov
mov
cmpl
in
xor
hlt
popa
dec
movsb
and
push
out
push
and
in
push
jae
mov
in
sbb
cltd
jge
xchg
dec
icebp
sbb
ret
jne
xchg
mov
das
xor
imul
xchg
pop
popa
in
xor
push
lahf
pop
or
mov
push
cli
pushf
cmp
pop
js
adc
pop
mov
or
or
mov
xor
jecxz
cli
shr
dec
cmp
mov
leave
ss
fs
adc
popa
fcoms
and
mov
lret
mov
inc
das
call
sbb
sbb
imul
add
in
pusha
mov
ror
or
cltd
jo
mov
inc
icebp
fmull
imul
loopne
mov
pushf
pop
inc
in
adc
aam
stos
cs
movsb
stc
adc
inc
outsl
ljmp
cmc
imul
inc
inc
hlt
lock
in
add
and
sbb
clc
inc
push
aad
sbb
aad
cmp
dec
lods
jo
or
xor
repnz
mov
xchg
je
ds
push
dec
add
cli
insl
jmp
xchg
push
mov
push
xor
adc
jmp
xchg
cmpsl
daa
cmp
rcr
out
mov
cld
pop
cmp
xchg
jle
sbb
rol
jns
sub
out
faddl
rcll
fs
push
dec
xchg
out
nop
jge
jge
mov
aaa
adc
push
and
adc
js
jns
xchg
in
test
mov
clc
sbb
jge
nop
cmp
int
xchg
jge
into
push
fchs
cmp
jp
push
leave
xor
test
ds
fs
fistpl
rolb
loope
neg
loop
jg
sbb
mov
stos
adc
push
or
pop
fs
push
rol
jae
sarl
nop
stos
jecxz
sub
lods
icebp
out
cltd
scas
leave
js
mov
bound
in
jae
push
mov
push
test
sbb
add
pop
scas
sbb
xchg
lods
imul
push
pop
loopne
inc
je
push
lret
movsb
shlb
aad
or
test
loope
outsb
ficomps
pop
xchg
jl
mov
jbe
mov
xor
cmp
sahf
xchg
ret
cmpsb
jl
jmp
jno
pop
mov
iret
sub
push
mov
push
dec
int
test
out
outsl
inc
rcrb
inc
push
fbld
lretw
test
jl
push
mov
test
or
insb
fwait
sub
in
mov
cmpsl
push
stos
icebp
mov
mov
cli
push
movl
xchg
xchg
mov
popf
mov
xchg
push
adc
fwait
and
sub
testl
xor
inc
icebp
lock
ret
popa
test
shl
add
popa
pop
pop
lahf
jmp
ss
dec
dec
jno
loopne
fldt
push
icebp
imul
cmp
adc
xor
fisubrl
sbb
adc
aam
call
iret
imul
jmp
out
jno
mov
clc
fisubs
jg
sub
jns
fdivrl
aaa
xchg
movsl
test
and
mov
jbe
pop
dec
sbb
shrl
mov
pusha
push
push
inc
icebp
cmc
dec
mov
or
jne
jl
outsl
stc
out
lock
xchg
xor
jmp
incl
push
sub
push
shl
xor
cmpsl
lods
lods
or
sub
xor
das
push
fsubrs
sub
outsl
cwtl
hlt
add
adc
jge
out
adc
nop
movsb
xor
cmpl
and
add
cmp
in
sbb
stc
push
cli
lea
inc
aaa
pop
loope
mov
jp
or
daa
mov
sub
shl
mov
mov
rcll
cwtl
stos
stos
int3
leave
sub
imul
sub
jmp
scas
lret
lahf
sbb
inc
adc
stos
mov
hlt
jle
sbb
push
pop
in
cmp
mov
popf
jno
xor
jae
fstpt
je
mov
dec
insb
mov
adcl
xchg
clc
cmp
orl
push
ret
xlat
dec
or
lock
ljmp
pop
mov
cmp
in
scas
xor
adc
xor
sub
sbb
xlat
push
or
mov
fstl
push
mov
jg
imul
jl
icebp
out
jecxz
mov
jb
data16
and
xor
mov
add
xchg
shll
jne
fs
out
adc
fiaddl
xor
shl
mov
imul
fsubrp
mov
pop
mov
sbb
out
out
inc
jo
les
decb
or
lea
jnp
mov
push
lds
jmp
add
iret
or
mov
jae
out
bound
inc
test
ret
test
jns
xor
push
imul
mov
lcall
in
jmp
sub
add
mov
xchg
xor
dec
sub
push
ss
in
push
cmp
sub
adc
mov
sahf
or
adc
sub
into
notb
mov
sub
dec
out
repnz
js
scas
fdivs
cmp
inc
jae
sti
jp
roll
inc
jecxz
and
add
mov
mov
int3
ss
rcll
roll
lahf
stos
bound
test
jge
aas
loope
sbb
ljmp
sbb
mov
sbb
push
ds
cmpsl
inc
aas
sbb
js
push
push
imul
jmp
test
cltd
jg
bound
sbb
push
sub
shrb
aaa
fs
mov
frstor
dec
les
mov
js
pop
push
pop
and
test
insb
dec
cs
lcall
rcl
in
iret
adc
scas
sub
and
stos
mov
pop
popf
lret
ret
test
sar
fs
inc
push
test
xchg
imull
repz
inc
or
inc
cwtl
out
add
jbe
mov
das
outsl
xor
icebp
cmp
push
fldl
mov
and
imul
stos
or
inc
xchg
into
fnstenv
xlat
push
out
xchg
dec
popf
loope
jge
repnz
xlat
sub
push
push
sbb
div
mov
outsl
xchg
imul
dec
or
mov
dec
cmpsb
scas
lock
jge
addr16
inc
pop
pop
insb
adc
pusha
dec
imull
ret
dec
xchg
mov
jmp
add
pop
jmp
sub
sbb
push
push
ljmp
dec
loop
sbb
adc
cli
mov
mov
cs
test
mov
inc
ja
cld
mov
pop
aad
jb
cmp
and
sbb
rol
mov
stc
xor
mov
pop
jnp
movsl
or
xchg
jo
push
adc
movsl
mov
test
add
fistpl
cmc
jl
pmuludq
cmp
pop
and
stos
pop
mov
stos
sahf
repnz
fdivrs
xchg
adc
adc
bound
cld
in
es
and
sub
push
adc
aam
mov
bound
stos
hlt
fcoml
mov
cmp
lcall
add
adc
sbb
cld
insl
leave
outsl
push
pop
aaa
adc
jnp
data16
aam
stc
mov
cmc
mov
pusha
mov
mov
pop
fildll
pusha
cmp
xchg
addl
pop
inc
cmpsl
pusha
pop
jns
mov
jg
xor
inc
mov
nop
lret
add
out
je
pop
outsb
dec
jecxz
cwtl
and
cmp
daa
cld
jnp
dec
sub
js
ror
stos
cwtl
mov
ds
mov
xchg
imulb
mov
inc
notb
ja
jns
fsubs
outsl
jp
mov
jo
fcoms
xchg
mov
inc
inc
lret
aas
std
jns
jmp
push
lods
jecxz
cmp
or
les
pop
sbb
xchg
xchg
add
std
ljmp
lock
std
mov
enter
cmc
mov
dec
addr16
in
push
dec
lods
pop
scas
push
cmp
sbb
pop
out
xor
repnz
jg
sbb
or
mov
data16
mov
inc
nop
dec
scas
and
mov
sub
dec
pop
cmp
jno
test
cmp
repz
xchg
clc
xchg
insb
imul
popf
adc
popf
insb
ss
sbb
pop
rcr
cmp
call
and
xchg
loop
in
dec
pop
cmp
inc
jb
lret
xchg
ljmp
xor
jl
pop
dec
push
push
ja
xor
jne
sbb
and
es
stos
xchg
int
and
mov
sub
pop
in
add
xlat
jne
cmp
pop
xor
je
mov
cmc
bound
and
push
adc
les
fistps
ret
mov
mov
repz
fstl
lods
lret
das
sbb
push
mov
xor
push
jae
push
frstor
dec
or
stos
inc
das
nop
test
je
fidivl
xchg
push
jmp
xchg
add
xor
andl
nop
stos
and
inc
pop
push
fistpl
lret
dec
push
insl
pop
or
jne
adc
ficompl
flds
shrb
mov
stos
or
add
jmp
cmc
mov
imul
movsl
sahf
jmp
outsb
adc
add
ds
mov
dec
or
mov
mov
jb
mov
and
stos
ja
ss
adc
pop
cmp
push
xchg
icebp
or
sbb
push
out
lods
repnz
jmp
inc
or
mov
pop
lret
dec
cmp
dec
mov
int3
test
sbb
cmc
mov
mov
sub
repz
mov
and
cmp
dec
inc
xor
pop
sbb
rolb
lods
data16
mov
shlb
aas
xchg
jb
lock
and
inc
in
dec
xor
jno
popa
mov
int
pop
mov
mov
repnz
pop
mov
ss
adc
shl
inc
and
mov
mov
pushf
jne
movsb
stos
xchg
ret
jg
idivb
and
test
std
dec
call
jge
mov
or
lods
jmp
jb
mov
or
xchg
dec
adc
mov
jmp
jmp
mov
ret
or
sbb
aas
sahf
insl
adc
xor
sbb
mov
inc
fsub
mov
js
or
xlat
rolb
scas
cmpsl
push
mov
or
gs
mov
xchg
mov
xchg
cmp
dec
loopne
mov
movsl
xchg
and
fsubrs
cmp
mov
xchg
je
dec
cmp
in
aam
mov
stos
ret
lahf
push
daa
cltd
insb
or
test
add
int
call
inc
xor
lock
insl
jnp
pop
mov
pop
push
aaa
fsubs
adc
lret
cli
cmp
movsb
fdivr
xor
cmpps
loop
lret
mov
testb
push
xchg
fidivrs
sti
pushf
mov
stc
xlat
shl
cmc
imul
lea
xchg
xor
cmp
hlt
fdivp
mov
shrl
xchg
lret
cld
jne
insb
lret
movsb
xchg
jecxz
push
in
push
dec
fs
in
in
cs
popa
hlt
mov
addr16
rclb
divb
xor
jle
cld
cwtl
stos
fdivrl
cmc
lcall
mov
and
pusha
outsl
fcmovne
call
and
or
repnz
jb
loop
pop
hlt
xor
and
mov
mov
aam
pop
push
cmpsl
std
out
adc
xor
xchg
inc
cmp
mov
adc
lock
daa
cmpsl
in
lds
lds
push
and
cmc
mov
pop
stc
cmp
xchg
mov
rorb
aaa
gs
or
dec
test
clc
mull
sbb
cmpl
in
das
movsb
idivb
xor
inc
mov
mov
inc
jg
aas
mov
jmp
push
pushf
loope
pop
mov
push
js
xorb
mov
cmp
sti
push
mov
les
into
imul
rclb
xor
fwait
xor
cs
push
adc
shlb
jl
push
cmc
cmpb
adc
or
xchg
push
les
js
cwtl
jmp
mov
xor
fcomps
dec
mov
stos
movsl
mov
fwait
mov
imul
imul
pop
add
mov
jmp
adc
mov
jno
xor
jmp
cmp
clc
cld
mov
enter
scas
cmpl
fildl
adcl
mov
popf
movsl
dec
mov
jle
addb
and
ds
or
mov
aam
idivb
sbb
fsubs
aas
loope
mov
in
repnz
shr
mov
imul
mov
std
loope
mov
fwait
xchg
adc
cli
icebp
xchg
jge
pop
xchg
and
jns
rcr
mov
jl
scas
cwtl
mov
inc
movsl
adc
xchg
fsubl
xor
dec
sbb
pop
fwait
ret
xchg
into
pop
mov
or
shll
cmpb
jo
pop
std
inc
or
sahf
xor
sub
sbb
shl
cli
add
jle
inc
cs
shll
adc
add
and
popa
push
xor
adc
inc
mov
jle
xchg
mov
inc
add
fiadds
adc
or
es
sbb
inc
lret
add
sbb
pcmpeqb
or
test
and
push
fistl
call
push
loope
loopne
xor
push
sbb
pop
out
push
or
fxch
stos
imul
mov
scas
push
cmc
clc
xchg
push
jbe
mov
mov
dec
popf
mov
sbb
inc
jmp
pop
sbb
aas
popl
push
add
stc
pusha
loop
lods
mov
ja
mov
ja
int3
push
fmull
and
cmp
mov
and
and
andl
fisubrs
clc
sbb
mov
dec
cmp
sub
jg
in
ja
clc
stos
xchg
les
dec
dec
sub
mov
imul
je
xchg
mov
in
leave
icebp
fidivs
jbe
stos
out
or
or
call
mov
push
sbb
jb
mov
or
addr16
and
fstpl
les
in
out
test
pop
lea
cwtl
fisttpl
mov
add
push
repnz
imul
dec
or
pop
lods
xor
jp
or
mov
and
mov
cmp
lahf
sbb
inc
addr16
stos
pushf
stos
add
jl
fiadds
mov
imul
add
enter
mov
mov
dec
stc
scas
addr16
mov
cmp
cmp
rcr
es
shl
popf
out
mov
cmpsl
add
lods
or
mov
xchg
sbb
cmp
cld
ja
sbb
jecxz
dec
loop
stos
pushf
mov
mov
mov
fdivl
popa
nop
test
and
pop
and
mov
addr16
adc
push
fistps
jl
mov
xor
mov
xlat
sahf
lds
mov
mov
mov
pushf
lods
fisttpl
insl
movsl
cs
xchg
pop
orb
cltd
aas
pop
inc
and
lret
mov
js
imul
pop
inc
inc
scas
mov
mov
fidivrl
movsb
fmul
test
pop
int3
push
jmp
or
sub
lahf
xor
mov
add
lds
push
sbb
gs
sti
dec
mov
lock
test
bound
sahf
mov
xchg
daa
jecxz
push
addr16
orl
ljmp
jno
mov
leave
insb
lcall
stos
int3
iret
sub
sub
mov
insl
orl
in
mov
mov
pop
out
add
mov
inc
movsl
divb
sbb
xchg
rorb
mov
push
xor
adc
sub
negb
test
fcoml
iret
out
ljmp
ret
into
lds
insb
inc
enter
fdivl
xchg
push
xchg
jecxz
mov
scas
subl
mov
popa
cmp
add
inc
iret
and
mov
bnd
aam
push
mov
xor
push
sub
sub
push
clc
jo
pop
add
movsb
lea
push
in
fwait
push
mov
mov
shr
movsb
adc
jbe
cmpsl
pop
fimuls
or
loope
jns
push
testb
cltd
add
test
or
repz
lahf
mov
xchg
cltd
adc
pop
sub
xorb
xchg
div
jmp
outsl
fidivrl
pop
jmp
jl
nop
add
in
pop
mov
lcall
and
gs
mov
inc
dec
and
sbb
fdiv
jle
sbb
lds
adc
mov
or
pop
movsl
push
adc
mov
lahf
mov
or
out
mov
mov
orl
inc
and
xchg
mov
mov
dec
jp
dec
into
fistpll
xchg
push
mov
jecxz
inc
and
pop
iret
popf
aas
je
mov
scas
pop
les
xor
fcomps
pop
push
mov
mov
movsb
add
mov
cmp
arpl
jne
mov
inc
fsubrp
stos
insl
pop
and
loop
mov
imul
cmp
pop
push
icebp
shlb
inc
inc
stos
mov
jge
cs
cmpsl
hlt
jo
dec
jmp
cmpsl
movsl
lds
pop
lret
rcrl
testb
xchg
lret
jb
xchg
outsb
lock
iret
bound
pop
adc
outsl
ds
xor
xchg
mov
lea
push
jmp
icebp
or
pop
dec
inc
popf
in
mov
les
insb
pop
imul
add
addr16
test
sub
and
pusha
aam
push
mov
mov
test
sub
cmp
xchg
add
and
push
out
outsl
jge
cmpsl
add
out
adc
jo
xlat
outsl
add
test
xor
lods
inc
and
sub
insb
adc
stos
xlat
adc
inc
xor
into
push
out
orb
icebp
mov
decl
jns
mov
pop
xchg
test
adcl
dec
push
and
cmp
sbb
pop
mov
lods
push
cmc
push
popf
adc
icebp
or
inc
xchg
pop
dec
xchg
jnp
mov
movsl
ja
pop
loop
mov
fldt
xor
mov
jmp
jle
aam
in
pop
dec
std
mov
cmp
out
and
call
enter
push
outsl
mov
cld
enter
ss
repnz
fcompl
cmp
shlb
ret
lcall
jecxz
test
ja
imull
dec
das
scas
jbe
sarl
pop
pop
dec
loope
pop
lds
in
or
pop
ficoml
pop
jmp
jl
mov
push
cmp
mov
cmp
das
mov
aam
mov
xor
sti
test
add
mov
xchg
repz
mov
aaa
dec
mov
mov
jmp
mov
dec
rorb
cmp
add
int3
mov
nop
outsl
pop
out
sub
and
sar
push
inc
inc
rcll
loop
insl
fwait
dec
and
lcall
mov
cmp
lods
jbe
inc
pop
rep
inc
test
inc
test
xor
and
mov
in
jb
cltd
jo
jl
lock
cmp
rcrl
and
lds
lcall
data16
stos
test
inc
addr16
clc
mov
cmpsb
out
cmp
idivb
testl
sbb
int3
shll
sub
sbb
xor
fs
int
sub
idivb
jo
lahf
adc
xor
fimull
loopne
xorb
fwait
push
mov
popa
nop
in
orb
andb
push
jecxz
mov
jl
adc
scas
or
pushf
notb
jmp
jg
fstpt
iret
sti
push
orb
mov
shrb
int
jl
and
outsb
cmp
jmp
lods
ds
imul
or
clc
adc
cmc
push
stc
or
sub
xchg
ret
sar
xchg
mov
call
mov
cwtl
dec
ss
jae
adc
js
in
inc
push
addb
insl
xchg
out
xchg
fsts
pushf
in
fiaddl
pop
loope
rcll
add
mov
mov
jns
sbb
adc
testb
std
popl
insl
loop
jmp
mov
faddl
test
and
int
xchg
int3
into
ja
stos
sub
mov
lods
int3
jno
push
enter
bound
iret
bound
mov
mov
adc
cld
xchg
ret
cs
adc
sub
jp
scas
inc
imul
push
mov
jle
out
mov
out
scas
imul
sub
mov
xchg
jb
testl
insb
in
lods
sub
push
dec
add
jno
cmp
out
add
fildll
aam
dec
aam
mov
dec
push
scas
pop
pop
int
and
add
inc
cmp
or
sti
xor
sbb
xchg
fnstcw
mov
dec
ret
jmp
mov
xchg
rolb
add
push
and
sub
sub
jmp
ja
aam
dec
jmp
inc
fsubrs
cmp
mov
push
imul
add
xchg
sub
bound
pop
mov
jmp
popf
pushl
pop
mov
lahf
ret
inc
bound
repnz
outsl
jne
cld
push
sub
loopne
mov
shl
cmp
and
cltd
xchg
cmc
inc
sub
fisttpll
test
outsl
xchg
xor
rcrb
mov
jo
cltd
ret
fdivr
and
mov
enter
andl
sbb
jbe
lock
xchg
das
cmc
cmpsb
jno
out
out
and
idivl
rclb
jl
push
dec
es
jge
push
mov
inc
pop
sbb
mov
mov
inc
popf
lahf
dec
int3
popf
shrb
pop
sub
mov
or
xchg
jo
xchg
adc
or
push
test
lret
and
aad
jl
inc
rorl
xchg
push
adc
aad
loopne
and
repnz
mov
jle
pop
imul
cmp
pop
cmc
sahf
pop
sbb
add
mov
pop
stc
lcall
mov
or
or
xorb
dec
mov
xchg
push
dec
in
arpl
mov
add
push
pop
ret
jg
inc
fwait
ror
int
sbb
xchg
stc
add
ds
and
sub
dec
inc
mov
cmpsb
jne
outsl
inc
mov
inc
sbb
xor
mov
rorl
add
aaa
cltd
cmp
fists
jne
jb
xchg
dec
imul
outsb
fimuls
push
mov
sub
or
mov
mov
push
mov
adc
je
ret
inc
fdivrl
dec
out
movsb
sub
jne
sub
inc
imul
cmp
outsl
daa
out
pop
bnd
call
adc
xor
add
xchg
nop
pusha
sbb
xchg
push
cmpsb
add
js
fnstsw
sbb
push
arpl
cmp
pop
outsl
cli
ss
xor
jp
or
in
xchg
sub
popl
xor
push
bswap
xor
adc
sbb
cmp
sti
push
and
out
sti
stos
outsl
sbb
inc
leave
es
adc
fwait
mov
js
arpl
inc
cmc
in
mov
out
into
pop
push
daa
hlt
mov
dec
out
or
sub
jmp
pop
call
jns
cmp
push
inc
push
loopew
aam
xchg
repnz
xchg
movsb
hlt
jp
pop
mov
adc
push
xor
mov
cmp
cmpsb
add
inc
fldt
jmp
mov
lret
mov
pop
adc
out
or
fisubrl
jle
scas
inc
adc
lahf
jbe
lea
popf
insb
stos
daa
push
add
jnp
clc
push
adc
mov
jae
loope
mov
pop
push
add
or
cmpl
inc
ja
test
pop
push
rolb
jo
ljmp
outsb
xorl
jl
xchg
xchg
ljmp
shlb
negb
mov
mov
mov
xlat
sbb
cmp
xor
mov
sbb
mov
pop
pop
sbb
mov
jns
pop
fimuls
rolb
sub
inc
push
mov
sub
dec
jnp
and
and
pop
push
dec
pop
sbb
iret
outsl
mov
pusha
xor
pusha
test
pop
popf
inc
fadds
push
imul
shlb
imul
ret
jecxz
shrl
hlt
sub
xchg
fmul
sbb
sub
add
jbe
mov
ds
xchg
sub
les
adcl
int3
add
ja
rcrb
test
mov
xchg
dec
mov
pop
fisttpll
cmp
testb
adc
lret
pushf
push
inc
xchg
pop
jecxz
push
inc
ljmp
lret
xor
mov
cmp
ret
sub
mov
push
and
ret
stos
mov
das
ffreep
mov
sbb
cmpb
lods
lods
pop
mov
jle
jne
lea
bound
test
xchg
jg
add
dec
push
xchg
cmpsl
gs
jnp
mov
pop
fwait
fwait
clc
push
movsl
gs
sbb
cmpsl
xor
out
cmp
repz
test
aaa
sub
imul
or
ljmp
aaa
add
repnz
in
in
xchg
pop
push
test
mov
movb
rep
in
setno
jp
pop
outsb
mov
mov
xor
dec
pop
jle
mov
daa
mov
inc
lcall
fstps
int
les
jg
xchg
pushf
sbb
iret
aad
sarb
movsb
mov
dec
add
mov
fwait
les
movsb
cmp
dec
mov
shrb
cld
iret
dec
int3
cld
sub
sbb
lods
pop
push
mov
daa
mov
fidivl
and
dec
mov
outsb
das
sbb
cmp
cwtl
push
iret
shlb
ret
inc
push
adc
hlt
and
js
pop
pop
pop
add
push
jnp
dec
shlb
neg
pop
lret
scas
scas
pop
out
in
xchg
ljmp
out
cli
sbb
fwait
sbb
into
movsb
mov
daa
push
pusha
mov
xchg
lret
das
cld
das
into
stos
and
scas
add
ja
roll
lea
xchg
insl
dec
pop
dec
adc
test
inc
jge
arpl
jp
adc
lods
push
movsb
iret
adc
mov
test
test
xchg
popa
jne
mov
insl
fwait
loopne
dec
cmp
push
fnstsw
stos
add
mov
repnz
xchg
cwtl
das
gs
push
cwtl
fildl
dec
lret
mov
lods
jns
movsl
pop
fwait
jns
fdivrl
vpcmpgtw
jecxz
cltd
mov
mov
xlat
pop
push
and
stos
out
lret
adc
push
and
dec
scas
gs
sub
out
mov
nop
leave
xchg
jge
hlt
xor
jo
inc
outsl
mov
bound
hlt
stc
jp
cmp
stos
shl
cmp
loopne
test
in
sbb
fiaddl
push
add
mov
adc
rolb
pop
cmpsl
xor
xor
clc
push
xor
roll
xchg
xchg
rol
movl
adc
int3
test
ret
data16
adc
or
leave
sbb
leave
push
cpuid
xor
imul
mov
enter
aas
pop
cmp
loop
pop
in
mov
push
sti
pop
clc
mov
std
mov
mov
cmp
push
sbb
fbld
xchg
popa
sub
mov
or
or
add
stos
pop
sbb
arpl
rolb
sahf
arpl
and
push
jno
xchg
into
mov
pop
cmp
jb,pt
push
jmp
xchg
xor
leave
or
sbb
and
inc
jecxz
addl
sbb
out
cmpsb
adc
sarb
sbb
mov
in
cld
ss
aam
fs
cmp
and
mov
bound
aas
lahf
adc
or
lret
cld
xchg
mov
pop
add
jmp
fcomp
rclb
lea
mov
pop
bswap
scas
mov
in
sbb
push
leave
ret
lds
mov
sub
aaa
ljmp
adc
mov
int
push
lret
leave
xor
mov
pop
add
sbb
int
enter
push
mov
ret
subl
jg
push
jo
pop
jmp
mov
xlat
adc
out
orl
mov
std
or
ja
push
mov
adc
dec
mov
cmp
movsl
push
push
bnd
mov
js
add
xor
and
loope
add
push
mov
inc
mov
and
dec
or
or
stos
je
int
mov
push
cltd
orl
xchg
movsb
rclb
mov
les
je
shl
and
out
lret
pop
jnp
sub
xor
xor
rorl
add
imul
sub
jno
xchg
out
pushf
lods
or
or
cmp
or
call
pop
movsb
jecxz
movsl
or
pop
arpl
or
leave
or
aam
and
mov
adc
xchg
cmp
insb
xchg
out
aas
sbbb
fisttpl
sbb
sub
push
xorb
inc
or
or
stc
in
jno
dec
xchg
add
dec
shrl
jae
mov
jecxz
fstl
repnz
lds
fwait
js
mov
jmp
sub
rcrb
mov
das
dec
fcompl
and
fstpt
test
pop
pop
imul
mov
add
ds
in
les
xor
xchg
xchg
out
push
and
add
or
cmp
fs
shrl
jg
in
test
mov
pop
cmp
add
movsb
rclb
in
sub
insb
std
mov
jl
in
into
or
les
movsb
xchg
lea
xor
adc
push
cli
pusha
cmpsb
lock
cmpsb
into
adc
std
mov
sbb
mov
cld
andl
aaa
aas
sbb
sub
add
jg
es
sub
pop
push
mov
lods
xchg
mov
int3
notb
fsts
pop
movsl
shrb
fistpl
sbb
loope
cmp
notb
sbb
loope
xor
cli
adc
orl
cs
fdivr
out
icebp
ljmp
and
scas
fcoml
jbe
cmp
inc
push
in
sbb
and
movl
rorl
push
in
outsl
or
sub
fistl
outsb
into
push
sbb
add
sub
add
dec
add
xor
cld
mov
pop
cs
addr16
push
mov
sub
mov
sbb
sub
xchg
inc
es
xor
or
int
test
imul
or
icebp
movsl
popf
xor
loope
aas
pop
aas
or
inc
mov
and
xchg
mov
movsl
jg
aad
shr
in
or
pop
repnz
and
cmpsl
jnp
mov
clc
dec
mov
mov
fcmovnbe
mov
mov
out
adc
pushf
data16
filds
pushf
ja
inc
fwait
add
int
movsb
fmuls
repnz
pop
jg
mov
lret
lea
xchg
xchg
rcl
jl
stos
mov
test
call
in
out
bound
out
movsl
adc
aas
sbb
adc
xchg
push
adc
push
pusha
ret
imul
rolb
sbb
xor
insb
pop
iret
sub
inc
xchg
lret
xor
mov
and
mov
and
sbbb
movsl
fstpl
push
cs
hlt
jl
je
mov
sarb
ss
add
push
push
sub
lret
int
and
hlt
test
cmpsb
ljmp
std
xchg
int3
and
in
sbb
notb
mov
in
clc
nop
cli
sbb
ja
out
pop
data16
test
out
xchg
cmpsl
cld
inc
idivb
addr16
and
inc
insb
mov
xor
shlb
call
mov
sbb
sbb
lods
xchg
or
fsubl
outsb
jg
dec
jb
pop
sbb
pop
mov
popa
mov
ja
pop
push
xchg
adc
inc
push
xlat
lods
repz
adc
add
sbb
arpl
mov
test
jae
in
bound
xchg
gs
lahf
pop
loopne
subb
adc
fistpll
in
cld
test
add
and
std
mov
imul
dec
jne
sbbl
in
pop
repz
adc
pop
cmpsb
jp
inc
mov
jb
nop
xchg
jle
dec
and
clc
dec
jmp
jmp
mov
xlat
jno
sub
movsb
loop
fbld
add
hlt
jg
repz
sub
xchg
pop
mov
pop
aad
add
xchg
push
xchg
lahf
jae
mov
mov
sub
or
cld
jae,pt
andb
cmpsl
xchg
adc
outsb
and
sarl
pop
and
mov
nop
pop
repnz
neg
sahf
cmp
stos
pop
push
mov
cli
push
fldt
fists
or
mov
xor
pop
inc
mov
ret
and
pushf
adc
mov
in
ror
push
loopne
popf
dec
jmp
addr16
les
rcrl
sbb
hlt
aaa
xor
ss
enter
fsts
dec
jo
mov
aaa
fst
jmp
cld
jno
xor
subb
shll
aam
sbb
sbb
movsl
sbb
xchg
scas
push
mov
in
xor
pop
xor
pop
pop
shlb
fisubrs
sub
call
mov
mov
ret
jns
jns
lods
pop
lods
mov
xor
aad
insl
stos
push
and
pop
pop
push
gs
pop
push
inc
ljmp
xorb
movsb
popa
fs
add
push
pop
dec
sti
mov
jnp
jle
icebp
mov
inc
cmp
and
jb
es
jg
xor
jecxz
clc
xor
mov
push
sbb
lahf
sbb
es
mov
imul
addr16
push
int3
ret
sti
lcall
mov
inc
cmp
adc
scas
icebp
inc
scas
xor
and
stos
xor
sbb
mov
add
icebp
jl
dec
outsb
mov
push
insb
add
popf
into
add
lret
dec
sbb
lret
pop
gs
jmp
mov
gs
push
aaa
mov
sbb
ret
mov
rclb
jl
mov
add
pop
inc
stc
jns
sub
jae
mov
iret
fldcw
rcrl
add
and
and
inc
in
ljmp
push
cltd
shll
outsb
cmp
addb
add
dec
sbb
cmp
insb
add
mov
dec
jmp
lods
clc
stos
cmpsb
cmp
std
cmp
aaa
test
bound
xor
inc
dec
xchg
xor
dec
xor
popa
or
mov
and
les
mov
sub
call
mov
push
lds
movsb
mov
cmp
mov
ja
dec
je
add
sar
in
mov
mov
or
add
lods
pop
add
and
icebp
popa
loopne
mov
icebp
pop
xor
in
frstpm(287
std
int
xor
xor
cmp
sbb
jg
mov
jb
ja
mov
cmp
mov
popf
cmp
jmp
adc
pop
in
xchg
sub
std
mov
jno
mov
or
popf
int
sub
cmp
mov
out
lcall
das
push
ret
in
stc
and
fstpl
sbb
add
add
xchg
lock
pop
mov
popa
xchg
rolb
jne
add
xchg
jle
xchg
dec
icebp
mov
cmp
push
sti
sub
mov
ss
out
push
cli
xchg
mov
out
fwait
es
xor
repz
inc
das
mov
or
xor
pop
xchg
int
arpl
addr16
imul
add
mov
or
ret
add
arpl
and
ljmp
push
in
pop
inc
insb
mov
mov
xor
mov
imul
pop
add
test
out
mov
sbb
ja
sbb
and
outsl
mov
add
cmp
into
int3
mov
jmp
clc
pop
and
sbb
sub
pop
push
jno
inc
call
jne
push
push
clc
inc
ja
add
in
scas
stos
inc
xchg
cwtl
mov
mov
sbb
lret
outsl
xchg
xor
or
loopne
test
and
inc
dec
dec
adc
or
inc
je
pop
sar
leave
sbb
inc
jbe
inc
mov
mov
test
lods
push
daa
hlt
cltd
popa
xchg
insl
mov
or
enter
int
and
fstpl
repnz
pop
push
pop
sahf
clc
test
and
sbb
push
outsl
or
leave
xchg
adc
loope
daa
shlb
out
push
cmp
or
or
sub
cmp
push
sahf
jg
sbb
sub
or
cmp
sti
in
cwtl
pop
xor
jnp
push
adc
hlt
mov
jns
ss
add
lahf
in
std
hlt
sub
test
outsl
and
daa
add
mov
popa
idiv
insl
pmaddwd
and
scas
pop
add
in
mov
fildll
jecxz
outsl
ficompl
leave
mov
cmpsl
xchg
lea
insl
repnz
cld
add
jo
push
sbb
adc
mov
mov
lcall
stos
int
mov
pop
mov
std
xor
test
mov
inc
sub
daa
nop
ljmp
addb
sbb
cmp
cmp
mov
cli
xor
and
cmpb
sbb
lret
or
and
imul
stos
sub
mov
mov
inc
aam
xorb
leave
mov
dec
mov
jne
decl
bound
mov
or
push
in
aaa
outsb
adc
and
ss
ret
dec
or
cmp
ljmp
sbb
push
test
mov
inc
dec
jns
orb
pop
lods
mov
shlb
mov
int3
add
cmc
fcmovb
jp
pushf
and
inc
in
out
inc
mul
pusha
pop
std
push
mov
mov
test
jb
arpl
push
pushf
arpl
cmp
lds
sub
add
push
movsl
test
movsl
push
push
test
mov
call
and
rcr
jo
mov
hlt
mov
push
sbb
mov
out
mov
push
inc
leave
fucomi
xor
adc
insb
shl
out
pop
and
push
test
lea
mov
mov
adc
test
or
scas
dec
jg
dec
addr16
mov
xor
loop
into
pop
in
outsl
mull
add
incb
inc
in
dec
cmpsl
xchg
sbbl
cltd
sub
add
in
xchg
imul
xchg
in
dec
imul
popf
mov
imull
scas
mov
push
insb
bound
or
iret
xor
loope
test
jnp
lods
inc
pop
fdiv
dec
add
ret
cmp
insl
push
lret
fildll
testl
loop
xor
sbb
and
jecxz
sub
subl
cmc
fsubs
mov
mov
mov
fwait
nop
sbb
sub
fsubrl
scas
popa
jmp
lea
scas
pop
fbld
sbb
pop
dec
subl
inc
pop
jmp
push
sbb
out
insb
cmc
inc
dec
push
out
in
push
popf
loope
rclb
push
int
repz
or
xor
fyl2xp1
bound
out
ss
out
cmp
test
stos
mov
sub
mov
pop
cmp
scas
mov
jmp
push
dec
decl
add
mov
sbb
xchg
enter
cltd
pop
imul
and
out
sbb
mull
or
jp
popf
sbb
test
add
dec
adc
mov
in
mov
or
mov
mov
test
xor
xchg
arpl
mov
popa
gs
fstpt
jne
cltd
and
shlb
push
jecxz
add
sarl
push
add
or
mov
cmpl
sti
inc
sub
dec
rcll
mov
pusha
loop
cmc
fdivs
inc
mov
call
mov
icebp
out
mov
mov
push
mov
xchg
es
fxtract
adc
inc
ret
idivl
mov
cmp
in
jbe
movsb
ret
outsb
xchg
add
push
sub
pusha
popa
ficomps
xchg
xchg
shll
cmp
pushf
popa
out
test
lock
repz
movsl
popf
fcmovb
loopne
pop
push
mov
jbe
jp
movsb
push
out
xor
out
xchg
inc
jae
andl
faddl
add
push
fnstenv
je
inc
loope
push
push
sbb
inc
dec
pop
cs
pop
stos
push
fisubrs
push
imul
and
fcmove
push
jb
mov
lcall
pop
std
scas
and
sarl
push
stos
idivl
push
mov
or
or
jae
mov
in
movsl
mov
pop
into
or
jno
roll
repz
out
ret
mov
and
aas
sub
mov
mov
pop
sub
enter
mov
or
mov
xor
lds
xor
or
xchg
mov
js
add
arpl
movsl
aas
pop
adc
sbb
cmc
mov
jecxz
and
loopne
adc
mov
aad
cmp
push
mov
hlt
mov
push
xchg
xlat
call
in
adc
lods
inc
and
aam
adc
xor
jecxz
pusha
inc
adc
stos
aas
aad
and
mov
mov
pushf
imul
xor
and
sub
xbegin
repz
jg
pop
and
or
sub
xor
cmp
jnp
loop
outsb
ret
push
xor
rcrb
pop
xor
push
in
push
scas
iret
fdivl
mov
rcl
loopne
inc
and
int3
pop
push
xchg
lods
mov
pop
cwtl
cs
es
pop
cmp
xchg
cmp
pushf
push
adc
jae
filds
mov
or
sti
sub
rorb
icebp
mov
sub
or
pop
ret
and
inc
adc
scas
xchg
loopne
dec
jno
sbbl
scas
adc
xchg
ss
ja
sub
sub
and
dec
stc
pop
test
mov
adc
loope
loopne
add
enter
dec
push
das
imul
cltd
or
fisubrl
sbb
shl
push
inc
xchg
mov
mov
cmp
insl
jl
enter
bound
or
jg
sbb
lcall
mov
dec
scas
orb
repnz
add
pusha
dec
popf
sti
push
insl
push
iret
xor
jmp
pop
cmp
sbb
sar
shll
int
push
push
cmpsb
icebp
cmp
ret
iret
mov
fiaddl
inc
out
inc
jp
sarl
cld
jl
shlb
xchg
sahf
xchg
flds
jae
loope
mov
jnp
aam
shll
xor
insl
pop
dec
cmpsl
call
mov
jns
and
out
ljmp
and
cmpsb
vsqrtss
jmp
adc
jo
pop
and
call
ret
imul
ja
movsb
js
inc
adc
mov
scas
cs
push
int
test
sub
inc
or
sbb
cli
outsb
mov
inc
jnp
in
mov
or
sbb
push
jb
ds
out
lcall
inc
dec
iret
xchg
sub
test
movl
in
ljmp
mov
ja
cmp
stos
push
cmp
in
ljmp
aas
mov
call
sbb
flds
jl
inc
cmp
inc
adc
aam
mov
call
insb
push
nop
je
sub
lret
dec
adcl
mov
push
sbb
pushf
mov
cmpsb
outsb
data16
mov
mov
nop
push
or
dec
adc
mov
dec
or
fwait
or
xchg
dec
inc
mov
sti
cmp
pop
daa
jb
or
into
out
mov
lcall
and
xor
sub
aaa
xor
jecxz
jp
fwait
call
cmp
mov
or
out
les
jbe
lods
repz
ljmp
scas
in
out
js
mov
outsl
pop
mov
add
out
dec
pop
sub
push
pop
push
or
ds
and
xchg
xchg
push
ror
jbe
sarl
ret
test
xchg
jbe
xor
jecxz
fisttps
jns
insl
push
pop
faddl
xor
xorl
in
cmpsl
dec
sbb
mov
mov
xchg
adc
fs
push
xorl
fxch
jge
mov
adc
dec
out
and
out
mov
and
dec
xchg
insl
outsl
mov
lds
xchg
imul
add
cmpb
mov
inc
push
rorl
out
stos
push
xchg
or
subb
jae
cmp
sub
hlt
mov
mov
and
fldt
xchg
add
test
and
clc
xor
pop
test
cmp
dec
adc
imul
nop
mov
int3
aas
xchg
jno
pop
test
pop
xor
ds
hlt
movsb
and
hlt
scas
jle
call
decb
mov
ret
in
push
inc
test
sbb
adc
sbb
nop
dec
fs
mov
or
je
jb
js
outsb
pushl
mov
pop
leave
aad
mov
ror
out
adc
das
outsl
mov
movsl
lret
sahf
adc
xor
into
xor
pop
fldenv
cmp
loopne
out
cmc
inc
lock
in
aaa
add
dec
mov
xchg
fnstsw
add
xchg
mov
sub
int3
stos
pop
dec
and
test
cmp
push
xchg
imull
adc
adc
iret
cltd
enter
into
mov
cli
sti
cmpsw
xchg
stc
cmp
test
mov
icebp
pushf
out
inc
pop
push
fstps
shlb
inc
lock
cmp
into
leave
add
sbb
movb
mov
movsb
insb
cmc
push
lock
pop
push
scas
inc
pop
xchg
xor
adc
dec
fnstcw
aaa
mov
or
add
adc
inc
repnz
pop
scas
push
clc
push
test
pusha
push
mov
les
mov
fdivrp
xor
mov
ljmp
repnz
test
xor
arpl
add
sbbl
bnd
out
mov
lods
ljmp
daa
jge
xor
sbb
adc
jl
pop
sahf
fwait
cmp
push
out
out
nop
aaa
pop
and
mov
xor
out
xchg
int3
mov
push
dec
pop
outsb
repnz
lret
aam
test
outsl
cmp
inc
daa
int3
lcall
mov
dec
out
or
mov
jns
dec
inc
push
sarb
dec
jp
cmpsl
sub
fs
mov
pop
mov
inc
hlt
pop
mov
pop
mov
pop
aaa
push
ss
pop
into
pushf
adc
leave
dec
xor
fs
push
or
mov
cmp
ja
nop
in
sub
mov
push
shl
cmp
out
mov
hlt
adc
xchg
jp
inc
aad
fisubrs
xchg
sub
xchg
mov
xchg
popa
push
pop
inc
inc
cmp
std
xor
imul
pop
pusha
jne
mov
push
jbe
je
into
xchg
jg
ss
jmp
repnz
cltd
and
lock
daa
push
enter
and
adc
mov
and
jno
pop
dec
pushf
outsl
les
ljmp
sub
pop
or
aam
adc
into
xor
bound
out
and
inc
add
movsl
scas
push
dec
cmpsb
dec
lea
outsb
pusha
xlat
repz
fists
popa
rcrl
xor
stos
stc
mov
insl
fisubrl
add
mov
jecxz
cmc
sbbl
mov
mov
jmp
bound
cs
pop
xchg
in
and
pusha
mov
out
movsb
jnp
mov
out
pop
out
push
cmpsl
push
mov
inc
jne
mov
cld
push
je
fadds
ret
xchg
push
mov
pop
das
ja
mov
pusha
push
sti
add
or
enter
testb
pop
sarl
mov
out
popf
add
pop
add
jp
mov
loop
lea
jle
and
mov
jmp
adc
jnp
sbb
cmp
pop
xor
test
pop
cltd
test
xor
mov
rcrl
icebp
ss
add
adcb
adc
cmpsl
ret
test
stos
fidivrl
stos
ljmp
inc
xchg
mov
repnz
mov
iret
lods
mov
out
mov
jbe
loope
scas
nop
adcb
mov
jge
xor
ret
mov
mov
in
ret
dec
imul
bound
out
lock
cmp
mov
shrb
ds
loop
adcb
cmp
add
jecxz
or
xchg
lahf
aam
je
mov
bound
ja
mov
or
fs
iret
dec
xchg
js
add
pop
pusha
loope
or
mov
cmc
shlb
outsb
sbb
popa
gs
add
frstor
dec
mov
xor
jecxz
je
imul
rclb
sub
repz
out
xlat
stos
ds
sbb
enter
imul
mov
or
fists
and
outsl
xor
jbe
mov
or
mov
ja
jecxz
pop
iret
enter
jno
sahf
mov
push
arpl
or
mov
inc
int
xchg
popf
test
repnz
fwait
aad
cld
pop
and
push
inc
imul
mov
jp
jmp
cmc
lcall
call
daa
dec
in
int3
xor
xacquire
aas
fistpl
mov
xorb
jb
mov
or
cmp
xchg
aaa
cs
dec
sbb
sbb
or
pusha
add
scas
out
aaa
repz
adc
inc
or
or
jl
test
daa
insb
xchg
push
pop
and
pop
jae
pop
adc
testb
cmp
cmpsb
loop
mov
das
or
shrl
test
cmc
pop
mov
movsl
or
sub
mov
shrl
pop
stos
mov
fcmovbe
sbb
push
jecxz
test
pop
subb
jne
adc
push
dec
jl
lcall
dec
adc
sbb
loopne
frstor
push
inc
aad
push
or
jo
mov
dec
fdivs
mov
push
in
push
mov
insl
jb
les
add
movsb
stos
loope
pop
dec
jae
fs
xchg
out
faddl
sbb
mov
imul
mov
out
mov
push
pop
lock
mov
clc
jb
cld
jnp
inc
dec
loopne
pushf
jge
sbb
dec
fwait
mov
and
or
je
sbb
mov
scas
xor
cmp
cmp
fnstenv
bound
fisubs
push
push
cmp
xchg
mov
in
xchg
lds
dec
mov
add
test
lds
sti
test
lcall
popf
pusha
mov
mov
ja
pop
inc
xchg
add
adc
les
mov
cld
push
jae
popa
or
insb
mov
adc
and
repnz
test
popf
ds
rcl
push
cmp
leave
jp
push
add
fisubrs
dec
mov
mov
mov
rcrb
inc
lods
cmp
fs
jno
push
popa
aaa
and
lahf
sbb
mov
pop
mov
mov
rclb
mov
xor
and
and
cmp
sbb
enter
xor
rcll
sub
xchg
pop
adc
inc
imulb
push
sub
jp
xlat
add
cmp
push
decb
repz
pop
rorb
jg
pusha
fwait
in
insb
std
rolb
xchg
jb
push
adc
sub
sbb
mov
ss
sti
cmpb
pop
sbb
cli
xor
dec
lods
xchg
push
mov
repnz
repz
or
push
jnp
fcomip
cmp
sti
mov
sub
mov
aaa
push
clc
insl
outsl
incb
fs
jbe
xor
add
lods
jne
mov
dec
lret
pop
test
lods
jbe
cwtl
dec
movsl
out
in
lods
jl
packuswb
sub
mov
sarb
push
mov
jnp
push
push
nop
call
pop
subl
mov
inc
dec
mov
and
jmp
dec
inc
pop
cmpsb
hlt
add
cmp
xlat
stos
push
jne
adc
cli
mov
dec
arpl
mov
sbb
or
je
out
mov
sub
andb
xchg
lcall
xor
ja
sub
dec
dec
es
xchg
jne
fsubs
mov
stos
sub
sub
inc
add
shll
mov
fnstsw
lret
movsl
aas
xlat
and
push
cli
mov
dec
test
imul
adc
lcall
lcall
pop
push
push
pop
dec
dec
inc
mov
lock
xchg
loope
adc
sub
popa
ret
cwtl
xchg
sub
mov
repnz
fmuls
fdivs
out
mov
inc
mov
xlat
je
out
jge
pop
sub
je
inc
add
ret
fstl
mov
int3
jg
stc
dec
fstpt
and
sbb
cmpsl
leave
test
mov
sbb
xor
pop
lea
add
int3
and
and
icebp
pop
fnstsw
push
into
insb
int
jl
adc
addr16
rcll
insl
out
lcall
data16
jbe
pop
in
jb
or
and
daa
sub
inc
cmp
cmp
lods
je
jge
mov
xor
push
mov
jmp
sti
mov
jp
fiaddl
mov
jecxz
nop
xchg
cs
dec
xor
xor
insb
scas
jmp
push
push
jae
cmp
mov
negl
cltd
les
mov
cmpxchg8b
lret
mov
cmp
cltd
pop
inc
jp
outsl
stc
sbb
cmc
icebp
int3
into
mov
xchg
loop
pop
sbb
clc
mov
mov
or
out
pop
andb
sub
fwait
out
xlat
pop
sub
ret
call
pop
mov
adc
adc
dec
xchg
xchg
adc
in
into
leave
lea
sub
xchg
inc
stos
sahf
inc
and
lock
or
outsb
lock
sbb
xor
dec
sub
mov
push
popa
stos
sbb
in
test
leave
hlt
fcomi
sarb
je
pop
loopne
dec
cmpsl
or
and
sbb
add
mov
ja
xchg
daa
jnp
lods
xor
sub
mov
ss
clc
push
add
bound
popa
dec
lcall
icebp
xlat
sbb
clc
mov
les
mov
xor
mov
cmpsl
into
cli
rolb
add
imul
int3
test
vpminsw
int
icebp
jge
sub
leave
std
or
pop
aad
mov
pop
test
inc
loop
stos
out
out
pop
kmovd
sub
xchg
mov
pop
push
cmp
add
dec
sbbl
imul
adc
dec
pop
insl
sbb
subb
sbb
push
je
mov
cli
xchg
adc
jae
les
enter
xchg
sbb
mov
push
cmovne
or
add
jmp
dec
sti
dec
dec
loope
sub
jle
mov
jecxz
push
push
mov
stc
fisubrs
mov
push
lahf
dec
aas
icebp
and
cli
pop
mov
pop
dec
xchg
mov
push
mov
outsl
mull
imul
push
loope
adc
out
inc
sbb
nop
mul
stos
mov
enter
and
sub
add
lock
xchg
daa
sbb
loopne
mov
cmp
scas
jno
lahf
mov
jmp
in
add
aad
lcall
lea
dec
clc
sub
xlat
popa
mov
outsl
les
lcall
sarw
aaa
pop
roll
jb
pop
push
pop
pop
arpl
xchg
push
add
xor
push
dec
pop
mov
aaa
call
pop
popa
inc
imul
adcb
ret
mov
push
adc
mov
xor
mov
jmp
mov
mov
mov
and
sarb
push
movsb
dec
inc
add
aaa
arpl
push
in
std
fildl
push
xor
test
int3
or
repz
sarb
dec
and
xlat
loope
jg
aas
test
or
lods
inc
push
cmc
and
mov
sbb
aas
loopne
sub
ret
sbb
xchg
leave
iret
and
pop
sub
js
mov
xchg
roll
adc
xchg
nop
lds
rolb
das
sbb
repz
icebp
test
xor
popf
in
in
inc
rorl
mov
incb
dec
add
inc
inc
insb
mov
xor
daa
xor
push
and
adc
rorb
or
xor
inc
movsl
ljmp
aas
xorb
and
pop
or
dec
xchg
and
pop
jae
cmp
push
add
iret
mov
cltd
adc
add
jnp
inc
mov
repnz
cmc
and
xchg
orw
pop
call
adcl
into
cmpsb
ds
pop
push
xchg
cmp
fwait
call
enter
mov
cmp
mov
std
xchg
ret
xchg
scas
pop
xchg
push
pusha
jb
xchg
jns
cwtl
jmp
out
xlat
pop
daa
lret
push
jp
add
int
adc
cli
nop
in
test
pop
loop
movsb
fmul
bound
out
mov
inc
mov
ds
enter
inc
jnp,pt
push
xchg
repz
lods
xchg
cmp
js
dec
loopne
or
cmp
ja
or
fs
out
fists
setle
push
push
inc
add
int3
pop
adc
loop
dec
lahf
fisttps
into
movsl
or
imul
fdivp
lods
jle
cmpsb
dec
jo
rol
fcompl
mov
add
xlat
push
add
pop
jb
mov
pop
repz
dec
out
lods
andl
fdivrl
imull
mov
scas
pop
fchs
pop
cli
lods
sbb
mov
iret
fidivrs
pop
out
gs
cmpsb
loop
test
pop
xchg
sbb
or
scas
mov
scas
pop
sub
cli
arpl
shrl
adc
or
in
jno
clc
and
jp
or
lcall
mov
test
xchg
mov
push
add
dec
mov
cmpsb
mov
dec
lahf
sbb
es
addr16
dec
mov
repz
inc
pop
insl
mov
scas
mov
dec
sbb
cmp
jmp
xchg
dec
pusha
in
out
xchg
dec
stc
mov
cld
cmp
mov
out
lods
xlat
lods
cmp
out
gs
insl
int3
pop
dec
loopne
dec
adcb
or
in
nop
cmp
imul
cmc
jle
jp
arpl
mov
add
cltd
mov
inc
daa
out
and
inc
push
add
cmp
push
loop
mov
dec
dec
push
sub
out
cmpsl
mov
mov
or
shrb
lods
cwtl
mov
out
or
loopne
sbb
sbb
mov
cmp
fwait
repnz
add
shl
imul
mov
xchg
mov
addr16
xor
pop
xchg
jle
ljmp
aam
lret
sti
shlb
or
repnz
jae
outsb
mov
pop
fsubl
enter
data16
pop
push
addb
cmp
call
xlat
in
or
jnp
scas
xlat
fucomp
push
cltd
test
clc
xor
mov
push
jp
dec
inc
aaa
push
or
push
je
xchg
fisttpl
xchg
jg
fwait
cmp
sarb
inc
jns
mov
adc
mov
mov
adcl
cmp
push
jnp
rclb
push
fbstp
cmpsl
pop
outsb
mov
mov
add
fnstenv
out
test
xlat
sbb
test
test
jae
aas
xor
adc
pop
test
stos
fsubs
jne
xchg
jge
push
adc
xchg
cmpsb
decl
ja
mov
adc
scas
xchg
sbbb
add
adc
shl
lcall
in
aam
outsl
dec
sti
mov
adc
aam
in
jp
jo
lock
fists
out
ss
sbb
cmp
addl
xchg
nop
jmp
sbb
repnz
jg
int
imul
enter
inc
mov
push
xchg
ret
or
lret
idiv
or
cmp
push
adc
xchg
adc
test
mov
out
std
inc
dec
and
push
in
outsb
lret
aad
popf
mov
xor
clc
push
rcll
sub
sti
test
xchg
sbb
mov
loope
aas
sti
out
add
cmp
adcb
lea
mov
xor
stos
pusha
mov
jecxz
stos
mov
data16
sub
jbe
cltd
scas
and
mov
mov
inc
int3
push
jecxz
test
mov
gs
lret
pop
and
sbb
popf
std
sarl
push
add
sbb
jp
sbb
mov
jo
mov
aas
fldenv
jmp
pushf
fadds
fimull
add
pop
rorb
xchg
jmp
xchg
test
icebp
int
lret
insb
inc
xor
dec
adc
lds
xor
sub
push
cmp
aam
jno
pop
shl
and
test
outsb
fwait
aam
xchg
sub
rol
add
ljmp
fs
js
xchg
mov
xchg
sbb
xchg
mov
cs
aas
cmc
mov
adc
stc
xor
into
mov
idiv
jl
mov
cmp
and
xor
mov
repnz
daa
stos
inc
mov
cltd
fxch
or
add
mov
push
adc
cwtl
xor
popa
jnp
insb
data16
pop
adc
and
mov
inc
xchg
into
lret
push
sbb
subl
ds
xchg
clc
loopne
mov
imul
rorb
mov
mov
and
test
dec
sub
aaa
imull
fwait
jne
cmp
cmc
push
sahf
xor
aam
lcall
jno
xor
test
rclb
insl
mov
loope
jl
stos
in
out
fcomps
imul
mov
in
fwait
insb
push
dec
repnz
adc
push
enter
mov
pop
std
insl
nop
icebp
or
imul
and
dec
addl
sub
mov
xchg
orb
movsb
and
mov
and
cmp
pop
mov
out
and
cmp
dec
repz
js
scas
push
ja
aam
jb
bound
cmp
lahf
mov
pop
clc
das
cmpl
jg
dec
addr16
mov
push
lahf
mov
adc
clc
scas
jge
shll
sti
mov
and
cmp
jno
popf
jmp
sub
insl
push
shll
pop
roll
jmp
pop
jnp
xchg
cmpsl
push
icebp
xchg
mov
in
xchg
add
aaa
in
in
inc
aam
lret
mov
popa
ja
je,pn
ficompl
adc
sbb
mov
push
out
sbb
push
jb
lds
sbb
push
int
aad
jo
jmp
outsl
jmp
insb
stos
cmp
into
std
mov
stos
stos
cmp
jae
xchg
mov
call
inc
jne
packuswb
push
sub
mov
ljmp
jle
vprotb
mul
sahf
lcall
inc
mov
jbe
sbb
dec
inc
inc
xor
jmp
cmp
fcomps
test
and
pop
popa
call
mov
dec
jbe
cld
js
mov
out
jge
add
fwait
add
pop
or
mov
imul
imul
push
movsb
out
mov
mov
mov
pusha
fldl
pop
dec
aas
pushl
sbb
mov
jo
add
sbb
jmp
and
jg
das
out
dec
roll
js
jp
lods
or
mov
inc
inc
add
cmp
lcall
ss
test
lods
into
roll
pop
std
cs
ljmp
ret
cmp
add
out
mov
cmpsb
sbb
jmp
and
cmc
mov
loope
dec
outsl
daa
push
push
push
fadds
jbe
adc
xor
mov
pop
popf
xor
push
lcall
test
push
stos
pusha
int3
fnsave
sti
xlat
add
mov
es
jne
ss
mov
dec
sub
nop
cs
lahf
and
test
push
mov
pop
xor
jp
or
push
adcl
add
xor
xchg
or
in
cmp
icebp
adcl
shrb
ljmp
jae
in
sub
stc
jle
cmp
add
ds
test
out
mov
cmp
jne
mov
ret
movl
cld
sbb
icebp
cmp
pop
push
loope
scas
sbb
sbb
jecxz
ret
dec
test
nop
dec
xor
icebp
sub
mov
and
rclb
xlat
movsb
mov
xchg
sti
push
mov
cmc
in
mov
sub
jl
stc
mov
jmp
push
ja
sahf
jbe
hlt
out
inc
addl
cmpsb
pop
sbb
dec
hlt
xchg
mov
pop
repz
imul
mov
xchg
sarb
pop
mov
test
mov
or
or
daa
fadds
jle
adc
adc
bound
fisubrl
mov
sub
adc
inc
push
xchg
push
in
fdivrl
xlat
mov
and
jne
jne
jg
les
out
and
push
and
cs
jle
jb
dec
aas
rcr
xchg
andl
clc
and
xor
push
js
xchg
inc
ja
sub
mov
addl
movsb
pushf
lcall
sbb
adc
lock
in
bound
subb
jmp
sub
jecxz
sbb
ljmp
pusha
lret
outsb
lock
das
mov
sbb
xchg
int3
mov
repnz
mov
scas
and
fdivl
mov
pop
adc
add
xchg
and
roll
std
mov
adc
loop
scas
bound
xchg
push
popf
stos
cmp
pop
icebp
out
test
inc
imull
pop
daa
xchg
or
cmp
stos
sarl
lods
cmpsl
xchg
test
sbb
mov
or
lock
push
dec
mov
jo
mov
inc
lods
in
orl
out
mov
inc
insb
xchg
mov
scas
dec
inc
lock
out
dec
push
fisubrl
push
cmpsl
or
lock
jns
xor
sahf
cwtl
mov
and
jbe
iret
in
test
sub
call
imul
add
lods
jle
lret
lret
jno
sbb
add
divb
jae
les
hlt
mov
dec
push
in
test
jg
mov
mov
pop
jg
out
jns
pop
in
cmp
sbb
int
xor
insb
mov
lcall
ret
sbb
scas
mov
lcall
and
inc
call
aaa
and
dec
divl
jmp
xchg
bound
inc
xchg
loopne
fwait
add
mov
ja
insl
sub
loope
mov
cmp
xor
cmpsb
adc
push
loopne
mov
xor
movsl
insl
test
jns
dec
subl
in
pop
push
loopne
into
sub
sbb
outsb
pop
and
decl
cmpl
sbb
adc
and
mov
leave
cmpsb
test
lock
inc
repnz
js
xor
es
enter
mov
or
arpl
cmp
clc
mov
dec
arpl
out
pop
mov
shll
mov
add
add
pop
jno
int
cmp
mov
mov
ret
or
movsl
sbb
pop
stos
jle
leave
sbb
add
fidivrs
mov
ret
outsb
add
cmp
test
lds
mov
scas
outsb
mov
sti
aas
leave
cmp
dec
test
push
or
pop
es
pushf
cli
aam
lods
std
xor
ror
and
subb
pop
cld
jno
sub
jmp
mov
int3
sub
jbe
ja
adcl
dec
adc
mov
out
lds
fldcw
push
ss
and
pop
rol
aaa
and
arpl
fwait
test
les
int3
mov
lods
cmpsb
loope
inc
mov
outsl
cmp
pop
mov
push
nop
pop
fs
rcrb
inc
ss
and
adc
lea
int
push
sbb
mull
out
mov
roll
lea
pushf
xchg
mov
mov
movsl
add
jb
or
mov
fyl2xp1
test
and
mov
int
inc
enter
cwtl
mov
adc
inc
lds
out
mov
dec
adc
mov
xchg
std
ds
pop
sub
add
ss
sbb
clc
xor
cmp
das
or
and
in
cmpsb
mov
enter
mov
lods
lods
xor
pop
imul
mov
sub
inc
pop
mov
test
push
sub
jp
arpl
mov
add
stc
and
push
aas
repnz
stos
cmp
mov
ja
inc
mov
cli
shll
rol
cmpsb
add
jae
scas
inc
and
push
outsl
cld
clc
inc
adc
data16
jno
cmovl
xor
xchg
int3
jae
xor
out
add
add
lahf
icebp
or
fdivs
and
push
push
lods
lcall
enter
xor
imul
push
mov
in
jp
test
ds
jne
dec
sbb
js
orl
and
incb
jne
fdivrs
das
repz
cmp
jo
pop
push
clc
sub
mov
mov
sbb
mov
cwtl
fsts
loop
cmp
xor
ss
cmp
jno
inc
rorb
mov
mov
xchg
into
dec
and
jo
addr16
loopne
push
arpl
mov
cwtl
test
cmp
in
dec
cmp
xor
in
in
shll
lret
std
out
cmp
movsb
popl
adc
push
or
inc
fdivrs
jo
stos
xor
int
cltd
arpl
mov
into
outsb
jnp
add
cwtl
sbb
push
fldenv
rclb
mov
mov
cs
sub
cmp
push
mov
inc
out
aad
push
imulb
cmp
aas
and
mov
test
es
mov
mov
cmp
push
cmp
sub
pop
pop
mov
fs
fistl
pushf
dec
and
enter
insl
loopne
lcall
add
jge
push
popa
mov
jge
push
enter
jl
shrb
or
cmp
insb
xchg
mov
loopne
emms
roll
mov
fwait
push
xchg
jbe
cmp
dec
iret
mov
popf
mov
out
in
movsb
pop
ds
cmpsb
aad
mov
sbb
mov
jge
push
movb
lret
cmp
adc
int
dec
lahf
dec
loope
mov
fistl
or
int
and
push
adc
xchg
popa
data16
mov
mov
xchg
in
loop
dec
xchg
inc
enter
sti
addr16
inc
ficompl
pop
fists
push
xchg
xchg
std
xchg
inc
xchg
fcmovnbe
and
inc
jecxz
daa
push
xchg
ret
sbb
subb
enter
push
sub
shlb
test
mov
inc
push
divb
mov
ror
adc
fbstp
dec
jp
in
jecxz
jnp
sbb
test
jp
push
lods
mov
mov
pop
dec
aaa
das
add
and
pop
xor
cmpsl
orb
jp
and
jle
adc
sbb
gs
pop
scas
lock
pop
jne
out
mov
push
cmpsb
aam
cmp
dec
pop
test
pop
out
sbb
sti
push
dec
mov
les
push
cli
mov
add
mov
cmp
scas
sbb
and
push
sbb
add
lods
jb
mov
addl
xor
pop
or
mov
int3
xchg
leave
mov
fmull
mov
sub
es
cmp
insb
aam
mov
inc
repz
fimuls
bound
ret
mov
adc
sub
sbb
cli
pop
vpsubsw
push
mov
fadds
xchg
out
dec
js
movsb
or
sti
pop
inc
testl
and
cmpsl
subb
fists
mov
push
jno
imul
popa
xchg
sbb
insb
xor
dec
jno
push
stc
adc
rcrb
pop
sbb
roll
test
jmp
jno
movsl
ja
test
stc
pop
sbb
nop
fisttpl
sti
xchg
mov
loopne
es
shl
jnp
inc
jnp
addl
sub
push
popa
mov
cmp
sbb
pop
test
nop
dec
lret
mov
cli
xchg
or
cwtl
push
or
cmc
xorb
insb
mov
sub
pop
dec
or
push
scas
jo
xchg
inc
mov
mov
sbb
xlat
push
sbb
mov
sub
in
pop
mov
xchg
cmp
imul
aad
sti
test
inc
aad
idivl
jne
insb
mov
in
xor
fidivs
mov
mov
push
insb
out
ret
xor
mov
pop
xor
insl
push
leave
mov
lods
fsqrt
pop
cmova
or
stos
or
flds
movsb
in
pushf
jmp
inc
imul
test
dec
mov
xchg
push
jg
int
jmp
shlb
cmc
push
imul
jmp
push
test
sbb
out
jp
cmc
test
imul
fcoms
pop
std
cwtl
cmp
adc
xor
shl
push
cs
xchg
sahf
xchg
dec
sub
in
and
xlat
xor
mov
xor
mov
inc
inc
loop
shlb
lods
mov
sub
pop
or
imulb
and
push
mov
sbb
sarb
xor
add
ret
and
jo
mov
add
pop
xor
add
mov
in
scas
push
addr16
xor
js
fsubrs
jle
or
mov
call
xchg
orb
jmp
push
xchg
ljmp
cmc
rol
cs
pop
add
hlt
or
pop
jmp
in
data16
scas
jge
adc
js
sub
cmc
jmp
shlb
dec
push
mov
lods
fisttpl
xchg
aam
jb
jmp
xor
imul
or
mov
xchg
fstps
inc
imul
mov
fbld
mov
and
adc
sbbb
and
mov
jns
inc
movsb
cmpsl
add
sbb
and
or
cs
inc
mov
cltd
push
roll
fsubr
cwtl
inc
push
mov
test
movsl
stos
addr16
dec
sub
jns
mov
out
xor
ljmp
push
inc
enter
dec
dec
jne
jmp
cwtl
sub
imull
mov
out
and
es
xlat
es
inc
les
or
add
cwtl
int
and
jp
sbb
push
dec
mov
mov
fiadds
stos
rorb
adc
pushf
scas
sar
mov
xor
ret
cld
mov
xor
add
push
mov
jno
std
ja
lahf
inc
mov
int
sahf
in
push
sub
pop
fidivrl
jne
jb
sbb
and
cs
in
add
data16
mov
insl
dec
hlt
mov
repnz
and
imulb
cmp
inc
and
arpl
add
xchg
int
testb
adc
jne
imul
insb
in
mov
inc
jp
cmpb
push
inc
in
cli
les
or
adc
and
loope
sar
jo
shrb
xor
mov
xor
jge
mov
aaa
repz
lret
test
push
mov
lcall
add
aaa
jns
adc
adc
scas
sbb
scas
cmp
xchg
int3
shrl
gs
fistpll
lods
gs
in
aaa
push
jo
or
cmp
in
ficompl
jecxz
jb
rcrb
subb
xor
pop
popa
adc
xor
jp
pop
lcall
sti
cld
clc
roll
xchg
je
xor
mov
mov
and
cmp
jecxz
fwait
mov
daa
xor
lds
or
mull
dec
aam
inc
mov
mov
inc
xchg
iret
mov
inc
mov
pop
das
pop
stc
in
test
cwtl
andl
push
je
jp
mov
fcoml
adcl
lea
xchg
hlt
lahf
divb
add
push
rorl
int
xor
xlat
rcrl
into
fldt
fidivrs
scas
jl
cld
jno
cmp
data16
xlat
test
iret
xchg
insl
stos
shll
xor
or
jne
test
push
scas
arpl
sub
aaa
inc
aam
out
mov
aas
push
mov
pop
arpl
ss
rorb
xchg
mov
test
cmpsb
mov
es
or
out
popa
jmp
xorl
out
mov
jns
data16
mov
xchg
jns
movb
test
or
mov
rcrb
ds
fisubrl
adc
iret
lock
jg
xchg
lret
push
jge
push
notb
popa
fcmove
insb
jg
fbstp
mov
mov
in
in
pushf
iret
dec
leave
lret
cs
sub
jle
cs
dec
aam
setge
push
push
cli
sub
add
push
push
xlat
test
dec
subb
sarl
negl
js
or
mov
lcall
mov
test
lret
push
xor
push
lds
and
xor
jo
adc
daa
fmull
cltd
lret
std
sarb
mov
sbb
es
popf
pop
imul
pop
sti
test
pop
xchg
pop
push
dec
dec
mov
dec
pushf
in
cmp
shll
mov
sub
rorb
pop
lds
fcompl
lret
xchg
xchg
jns
dec
js
mov
push
add
adc
sahf
std
int3
add
xor
pop
push
jne
fldt
mov
jmp
popf
jnp
faddl
adc
mov
decl
push
cmp
ret
lods
pop
dec
pop
dec
ret
call
xor
push
or
jge
sub
cmc
add
roll
lods
sbbb
pop
or
outsl
popa
btrl
aaa
add
out
and
dec
pop
rcr
dec
inc
or
sahf
ljmp
push
jb
or
int
mov
dec
movl
inc
inc
insb
fsts
mov
scas
fnsave
into
test
dec
xchg
lock
pop
enter
pop
inc
mov
push
mov
mov
mov
fdivrp
cld
push
insb
insb
nop
fdivs
cld
out
bound
sub
adc
fwait
add
movl
cmpsb
xor
bound
or
adcl
push
pop
test
out
xchg
lcall
or
mov
jnp
clc
cmpsb
mov
xorl
mov
in
sub
adc
xchg
jge
pop
ss
jle
das
mov
push
das
in
popa
jo
adcb
jae
mov
stos
mov
mov
inc
cmp
fwait
xchg
or
lret
imul
mov
jo
mov
add
mov
out
mov
or
insb
icebp
lock
jmp
cmpsb
iret
cmpsl
adc
pusha
pop
xor
popf
pop
rcr
in
jb
in
shrb
mov
inc
adc
scas
inc
mov
and
lock
out
daa
pop
imul
or
ret
sbb
cltd
jg
cmp
insb
xchg
aad
aam
pop
and
movsl
scas
or
push
out
ficomps
jne
mov
je
cmp
stos
daa
fwait
orl
xchg
inc
add
out
mov
cmp
jae
fdivr
clc
fsts
ret
int3
jo
insl
sbb
mov
add
outsl
rolb
push
sbb
sbb
sub
xchg
xor
inc
in
lcall
add
sarl
rcr
add
jns
lods
mov
mov
stc
xlat
comiss
addr16
pop
mov
add
popa
fimuls
jecxz
mov
cmp
insl
pop
fisttpl
mov
fstps
in
cmp
sub
xor
jmp
stos
inc
push
cmpsl
repnz
je
imul
mov
jne
inc
adc
mov
or
jno
loop
and
mov
jnp
ficoms
hlt
ret
push
mov
sarl
pop
xchg
push
aas
fimuls
lahf
or
stc
push
imul
mov
fistl
aad
repnz
mov
stos
mov
sub
rolb
inc
sbb
add
and
xchg
ss
ret
lret
and
ja
les
dec
icebp
lea
xor
clc
sbb
daa
ja
xchg
xchg
fldenv
div
popf
and
push
push
ss
js
push
test
stc
fbstp
jns
ja
lret
cltd
inc
sub
cltd
int3
xor
cmc
mov
mov
cmpl
pop
mov
cs
mov
int3
cmp
cmp
xchg
repnz
and
dec
inc
mov
xor
adc
adc
fmull
cmpsb
xor
xchg
mov
or
fldenv
cmp
fisttps
pop
fistl
jl
test
jg
dec
notb
mov
xchg
iret
push
inc
mov
aaa
pop
or
adc
rorb
lahf
pop
push
test
test
mov
jae
lret
xor
jnp
stc
sub
out
pusha
push
jecxz
in
mov
test
aaa
jg
add
fucomp
pop
xchg
jb
jle
lret
out
mov
js
or
jmp
lret
scas
sbb
je
daa
bound
push
fwait
mov
in
gs
rcl
and
scas
jo
mov
pop
ret
insl
pop
or
stos
iret
fimull
xchg
mov
mulb
mov
ds
addr16
xor
pop
jbe
scas
inc
out
jge
mov
js
mov
clc
call
scas
xchg
push
ret
dec
xchg
hlt
in
mov
mov
sub
fistpl
ret
sbb
sub
add
xchg
scas
fadd
xchg
and
shrl
push
mov
aaa
in
andl
and
sub
outsl
or
adc
test
aas
and
and
in
dec
mulb
loop
ss
and
leave
or
jno
mov
cmpsb
cmp
xor
cs
inc
fwait
inc
in
xor
jo
dec
push
pusha
aad
stos
mov
and
inc
jecxz
mov
add
int3
jns
movsb
and
cmpsl
rcl
ja
sbb
insb
cmp
jb
and
sub
das
cmp
scas
cmc
in
fadd
repnz
add
and
in
or
xor
shlb
in
sub
xchg
subb
jne
imul
pop
loope
stos
icebp
xor
inc
mov
push
and
fwait
in
push
adc
ljmp
in
xor
inc
rcr
inc
loope
jnp
push
scas
inc
dec
hlt
xchg
sub
add
test
mov
leave
aaa
xlat
jl
scas
sbb
cmp
in
aaa
and
mov
sub
mov
jns
inc
or
fcoms
daa
jb
outsb
jp
jb
clc
int3
test
push
std
es
mov
mov
pop
pop
les
leave
outsl
sti
movsb
shll
test
inc
cltd
lahf
xchg
sahf
lret
xchg
test
and
loopne
ds
push
repnz
pop
mov
int
scas
pusha
mov
out
fwait
inc
inc
mov
cwtl
add
call
jp
std
jb
ja
pop
sub
mov
pop
loopne
jbe
addl
xorl
test
gs
shrb
push
sbb
sub
stos
mov
push
mov
pusha
test
adc
and
jns
loop
cwtl
je
mov
pop
roll
test
das
xlat
sbb
sbb
test
inc
sbb
loope
or
adc
mov
out
movsl
adc
mov
les
aaa
icebp
test
and
cwtl
out
or
es
jl
cmp
inc
ret
mov
push
push
addl
pop
in
fisttps
sub
mov
paddq
push
iret
shlb
outsb
enter
and
mov
add
cmp
shlb
pop
scas
in
mov
cmp
adcl
jno
ficoml
cmp
ficoms
dec
mov
mov
fstpt
xchg
sub
out
sbb
mov
jae
add
mov
cmpsb
stos
and
pop
dec
xchg
call
dec
in
xchg
adc
and
inc
je
outsl
xor
jbe
dec
cwtl
sbb
rorb
fwait
ja
inc
dec
push
shrb
ret
das
cld
dec
shr
push
mov
cmc
adc
xor
and
inc
mov
sbb
pop
add
mov
sub
movsl
mov
xor
or
mov
jge
mov
mov
test
sahf
iret
sub
dec
xor
and
test
or
insl
fs
pop
xchg
jnp
cmp
int
sub
je
cld
jae
push
push
sbb
push
mov
stos
loopne
aam
mov
push
and
push
into
nop
in
mov
sub
and
and
lods
aam
dec
hlt
addr16
adc
les
xor
fs
aam
cmpsb
pop
ja
or
and
sbb
adc
inc
pop
sub
lea
and
rcll
popa
xor
push
dec
sbb
mov
dec
cmp
sbb
test
pushf
sub
pop
and
push
aam
fs
popa
shl
push
inc
xor
dec
outsb
cli
mov
dec
sub
sbb
mov
mov
cmp
sbb
dec
divb
test
sbb
mov
bound
mov
jae
mov
adc
push
lcall
out
push
insl
lock
mov
repz
push
xor
inc
mov
or
jo
ficompl
jns
fldcw
insb
cmpb
lret
pushf
jb
push
mov
and
jle
lock
sarb
test
in
xchg
pop
lds
je
outsl
idivl
fistps
insl
inc
cmp
shrl
nop
call
add
push
mulb
js
mov
int3
out
loop
jnp
xor
xchg
inc
jnp
adc
outsb
cmp
test
jecxz
mov
xchg
jecxz
je
jo
inc
adc
inc
jbe
inc
cmpsl
jnp
fnsave
fiaddl
xor
scas
xor
xchg
cmp
outsl
push
mul
repz
movsl
nop
insb
rcll
rol
pop
je
mov
sub
pop
mov
or
shlb
push
arpl
mov
test
jb
cmp
xchg
enter
inc
ret
std
xchg
or
stc
les
imulb
shrb
mov
inc
sbb
aas
sub
dec
enter
pop
dec
mov
nop
dec
leave
xchg
sbb
testb
cmp
cmp
repnz
mov
scas
cld
addr16
test
iret
jmp
faddp
jae
mov
rclb
xor
fsubs
sbb
out
test
dec
test
std
add
idivl
mov
cmp
stc
inc
js
push
jns
outsl
ss
xor
cmp
dec
les
cltd
repz
xchg
repz
or
adc
lret
mov
loope
xchg
std
inc
mov
in
push
ret
fiadds
cmc
or
sub
pusha
mov
and
pushl
aam
and
scas
push
cld
mov
jp
and
in
push
hlt
rorl
jo
mov
lods
iret
sbb
dec
sar
stos
ja
mov
icebp
and
or
hlt
addl
xchg
aas
mov
push
jmp
incl
xchg
mov
sub
stc
out
mov
popf
and
and
xor
and
sbb
call
mov
mov
push
pop
cltd
popf
pop
jae
loop
jo
dec
push
push
les
out
mov
cld
cmp
sbb
iret
repnz
pop
push
imul
lcall
jno
pop
xor
out
shll
arpl
mov
fs
xor
clc
loope
sbb
push
xchg
xor
jmp
and
jb
mov
repnz
add
loope
sti
inc
out
test
sub
mov
aaa
sub
cld
js
pushf
addl
mov
mov
mov
in
mov
je
and
aam
xlat
xchg
out
push
aas
mov
aas
dec
popf
adc
push
imul
jnp
add
jo
or
jnp
imul
lret
inc
mov
dec
add
mov
jmp
lock
pop
mov
ds
jge
negl
lret
aam
fstp
addr16
clc
sub
test
cwtl
test
das
lret
jb
mov
lahf
jb
mov
lcall
mov
leave
in
lds
sar
sbbb
cmp
or
or
ds
sbb
fwait
and
cwtl
or
sub
jnp
xor
inc
inc
mov
mov
mov
jae
fistpll
loop
rorb
incb
inc
xor
push
dec
and
xor
mov
shlb
subl
and
mov
ficompl
or
ret
xchg
xchg
dec
dec
pop
iret
lret
push
das
insl
jg
push
mov
adcb
scas
push
pop
arpl
sbb
and
mov
lahf
xchg
pushf
ljmp
add
jmp
les
shll
inc
ss
fs
jmp
sbb
mov
pop
and
xor
lret
lahf
andb
push
mov
push
mov
pushf
or
aam
shrl
mov
jb
ret
dec
cmp
leave
adc
stos
add
add
jecxz
int
mov
pop
sub
or
cmp
out
cmp
cmp
push
out
jae
out
cmp
lods
sub
jo
or
inc
xor
out
shl
loop
jno
xor
mov
lea
jae
sti
mov
mov
add
fwait
out
les
or
jg
fldcw
fsts
cwtl
xor
hlt
and
je
rdpmc
lods
cmpl
cmp
push
out
mov
fisubrs
les
pushf
adc
mov
push
xchg
int3
shlb
push
push
mov
pop
lds
gs
fcoms
ret
add
and
sahf
add
out
fdivrl
jl
stos
xchg
or
fwait
mov
and
das
or
pop
jo
cmc
lret
dec
mov
pop
rep
xor
inc
pop
outsl
hlt
pushl
repz
jae
popa
sbb
int3
mov
push
mov
js
in
mov
fwait
add
push
mov
in
ja
add
mov
lahf
ss
xchg
imul
jg
and
aas
mov
adc
nop
pop
lcall
ja
sub
cmp
add
mov
imul
jbe
into
xchg
sahf
mov
add
fstps
test
mov
out
pop
std
lret
loop
adc
cmp
imul
movsb
sahf
aas
aaa
filds
aam
enter
rcr
mov
shrb
push
pop
sbb
stos
lds
cmpsl
mov
add
in
dec
out
or
lds
daa
push
aas
jge
cmpsb
neg
mov
lret
mov
xor
rorb
push
dec
in
adc
mov
rclb
xor
push
mov
mull
fidivrs
jmp
rcr
inc
push
mov
push
lods
inc
and
daa
xchg
scas
scas
lods
sub
or
jo
sub
and
mov
js
sahf
adc
mov
dec
sub
insb
dec
lock
dec
adc
iret
lods
call
pop
out
and
jg
add
test
ja
jne
push
xchg
mov
pusha
push
xchg
xlat
rcrl
push
lods
xchg
scas
sbb
fdivrs
repz
ret
sub
ds
jecxz
and
pushw
xchg
dec
and
xchg
cs
loope
jmp
or
sbbb
xchg
lods
divb
xchg
jne
mov
push
push
add
mov
pop
aas
mov
inc
dec
mov
add
imul
sub
jno
arpl
mov
cmp
and
mov
enter
shrl
dec
mov
xchg
xor
pop
movsb
je
cmp
mov
mov
repz
stos
hlt
mov
fadd
mov
sub
xlat
cmc
cmp
inc
sbbl
or
adc
mov
mov
leave
xchg
push
mov
ret
xor
popf
xor
sub
push
pop
jne
pop
inc
lds
cmc
dec
cmp
ds
fnstcw
loopne
fnstenv
cmovns
push
aaa
leave
aad
cmp
fcmovbe
sbb
dec
sarl
in
js
bsr
push
scas
dec
mov
or
sarb
fildll
mov
pop
push
pop
test
mov
jmp
or
inc
jge
xchg
jmp
sarb
shl
or
clc
push
inc
clc
adc
rep
loopne
jg
into
iret
aam
and
mov
adc
ret
mov
outsb
adc
push
out
pop
pop
stc
les
shrl
pop
std
aaa
hlt
mov
dec
aaa
jmp
sbb
mov
dec
xchg
insb
in
lods
add
mov
inc
inc
inc
jno
pop
aam
into
inc
fs
lahf
adc
scas
es
inc
rol
mov
je
or
movsb
mov
adc
push
jl
adc
out
into
ds
iret
push
rorb
popf
mov
mov
in
cs
hlt
xchg
sub
rcr
xchg
inc
jbe
adc
mov
pop
mov
jne
nop
pusha
aam
pop
ljmp
addr16
pop
outsl
dec
push
stos
pop
lret
adc
jns
loope
jne
sti
aam
mov
lods
mov
xor
xor
pop
dec
stos
sbb
in
leave
cmp
sbb
dec
push
cmpsb
cmp
jbe
ret
out
insb
lret
or
inc
cld
pop
pop
sti
ss
mov
jns
ret
fstpl
push
pop
mov
dec
addr16
xor
mov
ret
mov
mov
and
in
sti
push
mov
shrl
fisttpll
ds
std
push
fdivs
push
popf
lcall
push
mov
int
ret
mov
lret
dec
shrl
fdiv
cmp
iret
addr16
test
cmp
gs
sahf
lods
sbb
loope
out
fistpll
mov
mov
popf
loopne
mov
mov
xchg
jno
mov
and
or
testb
pop
stc
in
cltd
and
mov
mov
imulb
sti
fidivrl
xor
mov
dec
cmp
call
pop
or
fsubrl
aas
pop
sahf
sub
pusha
test
adc
or
xchg
jnp
inc
or
inc
and
pop
jecxz
inc
stos
pop
or
int
add
pop
into
sub
repz
orb
je
mov
notb
mov
ljmp
mov
mov
pop
pushf
xchg
jae
cmp
jns
inc
andb
push
enter
ret
sahf
jb
mov
out
mulb
jp
or
adc
daa
xor
jg
sbb
scas
daa
lds
cmp
loop
xlat
mov
pop
call
xchg
xchg
sub
sbb
mov
xchg
adc
cmp
sub
ret
mov
addr16
addr16
xchg
daa
in
mov
jno
ljmp
xchg
mov
xor
lods
ds
push
pop
push
lods
cmc
push
iret
lods
mov
pop
out
repz
pusha
dec
scas
sahf
push
jge
aas
stos
test
cwtl
add
jb
xchg
sub
jmp
mov
pop
cltd
mov
or
xchg
pusha
jl
ret
mov
gs
sti
ljmp
das
js
add
cmpsb
cmp
sub
cmp
xor
pop
imul
push
cli
pushf
popf
lds
jg
shll
push
sub
inc
xchg
cmpsl
rcrb
dec
lock
cmp
test
movsl
or
dec
push
fldt
cmp
jp
push
mov
jb
aas
cmc
push
in
cmpsl
inc
or
insb
xchg
mov
shrl
xchg
test
dec
movsl
fimull
test
dec
idivb
arpl
cmp
rcrl
xchg
data16
int
into
sbb
imul
xor
and
sub
mov
cmc
sti
shld
ljmpw
sbb
sbb
lock
pop
cmp
loope
push
dec
imul
mov
cmpsb
arpl
push
out
jno
jecxz
push
and
hlt
in
loop
jge
or
mov
in
inc
pop
int
movsl
xchg
scas
jp
xchg
test
or
test
mov
adc
mov
sub
push
cmp
mov
fwait
pop
add
movntq
frstor
shrb
xor
es
mov
iret
bsr
add
push
jg
or
mov
sbb
dec
inc
pop
test
sub
repnz
int
and
and
mov
pop
xor
xchg
addr16
fnsave
std
repnz
aaa
sbb
add
mov
sub
jl
shlb
movsl
es
imul
fldl
push
xor
xchg
mov
in
push
rorl
pop
adc
sbb
cmp
jne
outsl
pop
test
cmp
aam
hlt
xor
xor
adc
stc
int3
fimuls
cmp
js
sub
inc
inc
pop
pop
dec
dec
sti
pusha
mov
xchg
mov
xor
mull
popa
les
lahf
into
dec
mov
or
sar
enter
dec
mov
mov
ljmp
adc
sub
xor
fsubs
cmpsb
cmc
pop
jg
pushf
xchg
xchg
dec
int
pushf
sub
jnp
mov
scas
insl
ja
je
jle
inc
mov
in
dec
adc
cmpsl
mov
push
je
mov
sbb
cmovns
jg
push
insl
fcoml
pop
or
sar
out
cli
movsl
lcall
push
mov
adc
mov
jmp
js
ret
jge
dec
loope
addr16
lret
cmpsb
dec
idiv
pop
adc
adcb
push
push
cmp
rcr
stos
sub
daa
loopne
ret
iret
and
xor
lods
in
xlat
lods
pop
pop
jp
test
add
cmp
dec
movsl
pop
jnp
loope
arpl
inc
dec
xor
imul
mov
in
add
mov
xchg
inc
hlt
subl
cmp
imul
iret
mov
pop
data16
cmpb
rclb
xor
dec
cmp
pop
pop
mov
enter
push
push
hlt
pusha
push
cmpb
xchg
mov
mov
nop
mov
push
dec
cmpsl
xchg
mov
mov
mov
test
shlb
mov
jbe
addr16
fcom
add
outsb
rcll
lahf
and
sub
inc
movsl
ficoml
imul
loope
mov
jbe
mov
data16
inc
mov
into
pusha
sub
ja
fidivs
dec
daa
inc
fildl
icebp
push
push
jp
add
cltd
movl
and
hlt
dec
in
pop
lahf
jns
cli
xor
xor
jae
mov
dec
loope
xor
mov
movsb
mov
rorb
jbe
or
sub
xlat
pop
adc
mov
push
dec
sub
leave
jnp
fdivr
fadds
pop
cmpsb
ror
aam
iret
ret
xchg
and
ret
xchg
mov
divl
ds
andb
fidivs
cmpsl
stc
enter
or
push
add
pushf
int
lret
mov
dec
sbb
jne
mov
push
cmp
loopne
push
add
cmp
lea
stc
xlat
mov
outsb
lea
adc
mov
xorl
ss
test
cli
sbb
lret
ja
stc
outsl
dec
int
cmpsl
iret
loopne
in
fildll
jnp
hlt
add
lretw
loop
or
jne
or
sbb
and
cmp
fwait
jne
adc
stc
push
testb
and
mov
cld
jo
aam
shrb
pushf
pop
sbb
stos
jnp
mov
cmp
dec
or
push
dec
mov
mov
jo
mov
out
mov
fstpl
fdivrl
jbe
adc
int3
jne
aaa
mov
push
inc
jo
sti
mov
pop
mov
fcomps
and
sbb
popa
in
jae
inc
loopne
mov
rorl
lods
jb
pop
push
js
lcall
sti
pop
push
mov
bound
jnp
xor
pop
sub
jae
nop
mov
push
lods
rorb
dec
repz
ffreep
jnp
addb
dec
loopne
faddl
out
repz
mov
jp
add
or
cmp
out
nop
popf
lahf
pshufw
push
jmp
xor
sbb
add
mov
inc
repnz
nop
int
cs
xor
pusha
insb
sti
or
push
ljmp
cmp
das
push
inc
mov
mov
mov
loop
push
out
ja
push
cmc
adc
xorl
stos
add
nop
xchg
cmp
dec
aas
pop
pop
dec
stos
movsb
sub
jnp
or
push
vmovhps
xchg
adc
and
mov
xlat
mul
push
ffree
addr16
adc
jmp
mov
cmpl
out
stos
and
popf
stos
mov
push
jle
test
add
es
sbb
test
or
or
dec
push
fstpl
xor
adc
pop
mov
xchg
outsl
movsb
fstl
lods
shr
hlt
mov
xor
lret
ss
mov
or
das
js
nop
mov
fninit
mov
pusha
rclb
xchg
lcall
sbb
out
mov
fcoml
xchg
jg
lea
stc
sarl
inc
or
jle
xor
or
push
and
pop
jmp
dec
xchg
mov
in
sbb
inc
pop
pop
in
and
lret
es
out
cld
mov
lahf
xchg
rol
fcomip
adc
inc
enter
inc
and
and
mov
fst
loopne
mov
jp
push
xlat
xchg
fbld
sbb
hlt
leave
rcr
lods
mov
es
add
cmp
and
xchg
dec
int
fstpl
pop
divl
popl
sub
sbb
sti
fstps
push
pop
jmp
in
cmp
add
stc
call
or
int3
adc
lds
ljmp
pusha
pop
cltd
sbb
mov
ret
or
aaa
into
and
mov
add
jl
xchg
inc
push
xchg
out
jne
cmpsl
push
or
mov
lret
cmpsl
ret
push
dec
push
sahf
inc
mov
jmp
sbb
pop
pop
movsl
mov
insb
rorl
repnz
push
mov
ljmp
movsl
add
ljmp
stos
or
jnp
jns
lahf
pop
xchg
add
xor
pop
out
in
push
cmp
cld
or
aad
xchg
push
adc
lods
popa
bnd
cmp
lahf
or
lahf
clc
inc
fwait
clc
rolb
fwait
rol
sbb
jb
jo
movsb
sahf
jae
jecxz
mov
adc
sub
mov
push
adc
pushf
fwait
add
xchg
push
cmpsl
fldl
jb
sbb
jb
sub
sbb
push
xchg
push
mov
subb
cmp
sub
out
cmc
inc
cmc
outsl
jg
sarb
or
in
xorb
cmpsb
bound
xchg
push
push
push
aad
xchg
mov
fbld
xchg
call
mov
fisubl
push
sbb
fsubrl
sub
and
fmuls
iret
in
leave
inc
in
pop
scas
jns
sub
xor
push
inc
ss
mov
mov
adc
jno
addr16
movsl
lock
out
xchg
xchg
mov
push
xchg
push
pop
sbb
popf
push
xor
mov
cmp
ret
sti
add
call
inc
jge
pusha
ljmp
add
jo
push
aaa
jo
movsl
bound
and
add
cmc
lods
push
mov
ds
shrb
adc
test
cmp
push
ljmp
flds
outsl
mov
add
or
mov
in
shlb
pop
leave
cs
jb
leave
out
and
and
fdivrl
jl
dec
jbe
int
jns
out
push
test
lcall
fiaddl
iret
pop
das
push
mul
sbb
jp
shll
test
cmp
jle
push
sub
add
dec
sti
leave
lock
repz
lds
cltd
mov
push
push
pop
mov
xlat
cwtl
cmc
add
add
mov
insl
fcmovnu
jge
mov
int
adc
cld
mov
jns
adc
xchg
jbe
cmp
bound
shrb
push
hlt
inc
jae
pop
sbb
pop
or
jl
add
and
call
ret
mov
sahf
sub
xchg
lcall
xchg
mov
popa
addl
push
repnz
aaa
add
xor
and
aaa
nop
jle
sahf
mov
inc
adc
lret
mov
std
jns
ja
pop
mov
adc
sub
das
sbb
sbb
stos
movsb
mov
sbb
je
mov
push
add
test
ret
outsl
fisttpll
cmpsb
xchg
in
jbe
pop
mov
je
cli
xor
or
fcoml
adc
and
add
and
jne
loop
xchg
or
adc
mov
add
xchg
mov
dec
mov
enter
psubsw
mov
mov
pop
std
adc
mov
xor
adc
xchg
aaa
fnstenv
dec
aaa
push
stos
lods
test
xor
dec
xor
repz
mov
sahf
push
rorb
mov
aam
and
mov
lret
xor
add
popf
jb
pop
mov
out
cmpsl
lods
rcr
mov
pop
sarb
subb
jne
or
pop
fisubrs
pop
shl
push
adc
in
lret
in
nop
int3
sub
pop
sarl
clc
out
scas
rcl
dec
add
mov
fnstsw
mov
clc
out
orb
xchg
pop
sub
ss
mov
adcb
dec
in
sbb
inc
mov
loopne
adc
jb
inc
in
add
fstp
fdivrs
mov
mov
sbb
ret
dec
js
cmp
ficoml
in
fwait
inc
test
ficoms
cmp
push
in
shlb
inc
mov
mov
aaa
lods
fbld
inc
les
mov
dec
mov
cwtl
dec
fcoml
lock
xchg
lret
movsb
and
mov
adc
inc
sbb
adc
es
cmpsb
cltd
aas
sbb
dec
mov
push
jl
mov
jbe
sbb
bound
icebp
and
xor
sbb
mov
fimull
testb
sub
mov
mov
mov
pusha
lods
mov
add
mov
dec
cli
enter
xor
fildll
mov
pop
inc
cltd
jp
stos
push
mov
es
ds
adc
or
test
sub
into
movq
inc
lods
fs
xor
adc
shrl
out
stos
inc
lea
pusha
fistpl
sub
mov
inc
mov
movsl
dec
xchg
or
pop
lret
sahf
and
push
mov
cmpsl
imul
dec
and
xor
out
lcall
mov
xchg
fldcw
mov
and
pusha
fnstsw
mov
out
pop
cld
sub
sbb
ficoml
fdivrl
cmp
push
sbb
and
xchg
inc
pop
xchg
dec
dec
inc
mov
fcmovu
or
clc
xchg
mov
mov
xchg
push
ds
add
xor
xchg
leave
cmpsb
xorl
mov
inc
or
ret
cmp
lods
cmp
xor
mov
mov
adc
pop
push
dec
orb
call
jge
inc
lret
jg
jp
enter
loop
repz
jb
stc
popa
cltd
inc
ret
lahf
push
fstpl
push
xor
arpl
daa
and
iret
and
aas
inc
sub
jle
jne
fwait
imul
std
call
outsb
imul
xchg
mov
jge
jo,pt
mov
mov
mov
lret
jno
xchg
clc
add
and
mul
outsb
mov
loop
sub
int3
push
jge
and
mov
std
sbb
push
pop
ljmp
cmp
inc
fcmove
add
rol
lret
cmp
sti
or
push
mov
dec
inc
test
pop
icebp
jnp
pusha
add
stos
cld
stos
mov
mov
sub
add
addr16
and
test
push
js
pop
bound
je
push
mov
mov
addl
out
and
and
cltd
imull
adc
adc
mov
push
push
cmp
pusha
call
aaa
jge
mov
pushf
jb
add
mov
xor
sub
mov
lods
rcrb
in
pop
bnd
lret
test
adc
sbb
dec
out
mov
inc
add
push
inc
sub
dec
mov
outsb
mov
aam
sti
addr16
mov
in
hlt
sarb
movl
or
shll
mov
fprem
shl
mov
push
fwait
insb
testl
popa
lock
mov
and
adc
jge
or
push
or
jnp
lahf
add
fwait
sbb
shrl
push
xchg
push
pushf
lret
pop
pop
test
inc
dec
jecxz
dec
mov
orb
xchg
mov
adc
pmullw
stos
jbe
add
add
repnz
xor
daa
test
xor
xor
pop
push
decb
andl
aas
jle
cmp
cld
mov
cs
jnp
gs
mov
loopne
and
push
xlat
ret
lahf
push
loop
pop
sbb
test
mov
ss
in
loopne
ds
mov
shrb
call
or
xchg
test
in
inc
inc
jae
dec
pop
mov
mov
nop
xchg
in
inc
por
sbb
addr16
xchg
mov
fisttpll
mov
push
dec
sarb
insb
jl
out
xor
jno
rorb
jmp
lcall
and
inc
xchg
clc
icebp
pop
xor
insb
dec
imul
mov
and
pop
xor
mov
push
inc
shl
ret
mov
cmp
rdpmc
rcrl
inc
lahf
inc
cmp
push
sahf
xchg
scas
mov
bnd
and
cltd
mov
xchg
cmpsb
xor
rclb
pop
movsb
sbb
out
js
repnz
xor
push
or
cli
mov
stc
jmp
pop
bound
or
dec
cmp
mov
or
push
mov
cmp
push
xor
es
into
in
testb
xchg
arpl
lods
xchg
push
push
jle
xlat
stc
or
jecxz
add
pop
iret
movsb
ss
ret
mov
out
fsubrl
pop
push
movsl
mov
mov
push
dec
sub
mov
int3
jo
xor
xlat
jecxz
mov
pop
mov
sarl
mov
fstpl
dec
mov
lret
pushf
push
sbb
sub
mov
and
jmp
test
aas
popf
fdivs
or
cli
inc
mov
push
push
aam
and
cmp
lret
lock
hlt
xor
pusha
bound
pop
imul
and
lea
cmp
imul
enter
ljmp
push
int
fidivrs
mov
and
adc
aad
push
mov
mov
nop
or
or
pop
repz
sub
sbb
adc
aam
mov
test
lret
ret
xor
push
cmpsl
loope
mov
xchg
dec
aam
mov
cmpsb
test
lock
out
add
sbb
cmp
xchg
sub
in
in
loopne
out
ret
pop
inc
int3
cmp
cmp
lret
jnp
jg
enter
jns
popa
outsl
dec
je
or
cmc
loopne
stos
dec
sti
pop
loopne
dec
punpckhbw
cmpsl
cli
xchg
sbb
cmpsl
add
adc
arpl
mov
jno
inc
loop
aas
mov
lods
dec
dec
lahf
mov
inc
test
cli
movsl
popa
movsb
repz
or
or
dec
inc
cld
push
add
mov
sarb
cmp
pop
arpl
add
mov
and
xor
movw
push
mov
jge
cwtl
push
js
rcr
mov
dec
xchg
into
xchg
stos
and
xor
sub
lock
mov
fistpll
pop
pop
pop
popf
push
ficoml
scas
add
lods
testl
outsb
in
xor
in
cmp
mov
mov
sub
cwtl
sbb
mov
insb
mov
sahf
and
mov
fcmove
cli
lret
pop
leave
mov
or
and
pop
pop
and
rorb
js
xor
xchg
jns
jmp
push
cli
lcall
mov
adc
stc
insb
fldcw
or
jno
stos
lock
in
xor
adc
fidivrl
loope
test
mov
std
or
in
push
daa
addb
add
scas
cld
mov
lea
mov
pop
pop
cs
jns
adc
push
movsb
dec
mov
fdivs
cwtl
jne
xlat
data16
popa
sub
sub
mov
aam
add
fdiv
add
int
imul
cmpsl
rorl
pushf
out
inc
xor
cwtl
jge
int3
lcall
inc
fsubrs
xchg
mov
out
push
push
es
pushf
arpl
loope
cmp
call
xchg
addl
cmc
or
add
ret
sub
push
ret
push
das
push
jl
mov
insl
js
jmp
inc
mov
push
aaa
mov
push
add
mov
hlt
adc
fwait
jecxz
jns
and
pushf
inc
sbb
out
std
xchg
and
filds
es
rclb
sub
adc
pop
and
icebp
repz
jecxz
cs
insb
ds
mov
add
dec
mov
pop
push
push
ret
push
sti
mov
adc
shl
pop
fsubrl
adc
andb
ja
cmc
in
xor
lock
jmp
push
jmp
into
std
mov
cs
sbb
push
mov
das
xchg
mov
jecxz
inc
mov
dec
mov
push
cld
test
add
sub
mov
je
push
mov
out
jmp
fildl
xchg
fldcw
jmp
xchg
cmp
out
mov
xchg
shl
int3
pop
mov
mov
pop
adc
nop
jno
mov
cmp
test
inc
out
push
lret
push
mov
jle
mov
sub
mov
push
movb
in
push
test
xchg
xchg
dec
jae
push
mov
imul
push
fwait
jnp
or
pop
icebp
mov
mov
arpl
pop
outsl
adc
mov
jno
jmp
jg
je
fistl
fnclex
mov
lods
stos
dec
mov
js
std
fmul
cmp
dec
sub
lds
mov
cmp
sub
xorl
stos
mov
pusha
stc
sbb
stos
fstl
or
iret
fildll
mov
ja
mov
orl
fldenv
and
inc
jp
daa
nop
xor
xchg
cmpsb
fldcw
dec
xor
cmp
popl
jecxz
push
sbb
addr16
mov
testb
jl
jg
jg
in
sbb
jae
inc
ror
in
fildll
mov
aas
or
push
out
push
and
jnp
add
jp
lret
insb
xor
out
sbb
mov
call
scas
push
dec
cmp
sub
mov
and
into
mov
pop
out
and
xor
jle
inc
enter
jge
lret
dec
xchg
push
mov
scas
push
or
mov
cs
push
xchg
loope
push
in
xor
push
xor
xlat
mov
sbb
push
and
cmpb
sarb
pop
int
in
cmp
xchg
cmpb
imull
mull
and
and
idivl
push
outsl
pusha
aam
loope
xor
outsb
outsl
mov
fists
cmp
mov
scas
ret
cmp
mov
xchg
sub
fcoms
addr16
mov
movups
add
sbb
es
push
mov
jge
and
gs
dec
xchg
repz
psraw
lret
push
test
repnz
mov
iret
or
sub
add
jnp
int
shll
and
call
or
and
imul
enter
xlat
ss
mov
idivb
nop
test
push
fs
push
inc
ret
orl
sub
ficoml
icebp
jnp
mov
ret
jge
mov
cmp
mov
das
dec
je
aas
pusha
in
and
popa
imul
mov
dec
xchg
dec
xchg
xor
cmp
or
test
rcrb
push
dec
cs
lahf
loopne
data16
pop
dec
ret
lods
cmp
pop
jo
mov
add
ret
outsb
fs
paddw
lcall
out
pop
and
popf
ds
sbb
bound
and
fstp
mov
fidivrl
lahf
push
movsl
or
mov
test
and
mov
bound
xchg
inc
stc
jno
jb
filds
popa
xchg
inc
push
jp
inc
rolb
fadds
ret
xchg
inc
mov
push
push
mov
and
xor
pop
and
xchg
mov
add
inc
dec
push
shlb
jb
mov
in
in
or
repz
test
mov
pop
shrb
or
mov
rcrl
dec
into
pushf
or
outsl
jbe
div
inc
sbb
jl
mov
imul
insb
sub
lods
push
pop
sbb
jp
gs
int
scas
and
in
daa
int3
fadd
push
sub
movsl
xchg
mov
pop
shl
shll
pop
orb
int3
jno
sbb
sub
dec
daa
xor
pushf
and
cwtl
hlt
push
lret
add
lahf
aam
pusha
lret
out
add
loop
test
jmp
in
push
jecxz
push
xchg
pop
lods
cwtl
repz
arpl
xchg
jp
cli
andl
aas
fwait
add
add
leave
sahf
lock
or
mov
lret
out
cmp
adc
dec
jae
mov
lret
sub
data16
lock
sub
das
mov
xchg
xchg
mov
pushf
push
ret
js
test
pop
mov
sbb
xchg
cs
jmp
fiadds
inc
pop
scas
xlat
movsb
cs
push
out
inc
xchg
mov
xchg
push
mov
aas
push
testl
push
mov
mov
aaa
scas
fsubrl
dec
jae
testl
jns
cltd
std
push
lods
aam
sbb
mov
mov
lcall
mov
jg
leave
xchg
dec
or
jnp
rcrl
ret
jno
sub
cltd
orl
ret
sbb
xor
pop
fistpl
mov
push
cmpsl
nop
jge
fsubrl
sub
and
mov
pop
mulb
jp
add
cli
lret
push
in
or
mov
lret
xor
mov
pop
lods
jnp
je
bound
mov
sbb
popf
es
gs
jbe
dec
ror
cs
jge
cmp
adc
aaa
sarl
std
inc
jg
ret
sbb
or
test
sbb
xchg
sub
call
cwtl
scas
in
gs
inc
mov
das
and
pop
pop
jmp
jae
add
es
inc
and
adc
adc
mov
push
push
xlat
imull
cmp
add
leave
mov
pop
push
dec
out
xor
movsl
push
test
lahf
orl
fistpl
aam
lods
xor
scas
jge
inc
into
inc
lods
lcall
leave
fwait
pop
divl
in
imul
daa
adc
inc
xchg
mov
std
cmp
movsb
adc
sub
enter
adc
lods
cwtl
icebp
andl
mov
hlt
outsl
or
pop
dec
repnz
ja
push
mov
or
mov
mov
mov
lock
stos
insl
int3
lods
inc
movl
fisttpll
ss
jnp
mov
mov
adc
sbb
pop
stc
or
cmp
adcl
dec
pop
push
mov
push
dec
sarl
pop
jmp
shll
mov
jbe
jecxz
push
in
push
mov
or
sarb
push
inc
or
jb
xor
xorb
in
movsb
pop
movsl
mov
repz
in
xor
fwait
pop
movsl
mov
jne
cmp
negl
aaa
push
mov
sbb
push
and
add
cli
jbe
cmc
mov
test
leave
jno
cltd
push
mov
lret
in
xchg
mov
dec
dec
stos
jge
lea
sub
lea
rcll
xor
fucomp
loope
add
add
mov
fnstsw
lret
cmc
mov
sub
xor
jle
cmpsb
xchg
jmp
mov
jge
xchg
inc
pop
mov
add
repnz
pushf
icebp
jp
cs
popf
cli
cmpsl
cmp
mov
sub
loop
jecxz
mov
sub
pop
lea
filds
jae
push
jbe
mov
sub
mov
sub
orl
pop
bound
jns
faddl
sub
clc
into
pop
xlat
das
push
fstl
cli
pusha
das
sarb
dec
lea
adc
cmp
inc
int
test
orb
dec
rorl
and
outsb
dec
lret
lret
imul
xchg
inc
add
movsb
sub
jbe
fdivrp
insl
pop
dec
dec
push
enter
sbb
add
xor
lods
daa
add
insl
and
lret
popf
sbb
xor
sbb
rclb
mov
dec
clc
subl
dec
js
xchg
sbb
add
outsb
jb
push
in
mov
mov
dec
and
xor
push
adc
or
sub
das
rolb
xor
push
stos
test
aas
nop
mov
jnp
mov
xchg
ss
test
sahf
aad
fists
and
sbb
arpl
sbb
scas
push
sub
mov
add
subb
xchg
iret
cwtl
lcall
mov
pop
pop
dec
es
inc
data16
call
mov
movsl
aaa
stos
sbb
jge
adc
pop
add
inc
call
jmp
xor
popf
in
sub
out
sub
scas
fisubl
mov
testl
loope
and
lods
insl
call
pop
dec
mov
add
sub
cmpsl
pop
aam
scas
jmp
fstpl
push
mov
out
pop
jge
daa
or
fistpl
sub
mov
ret
aam
cld
sbb
repz
xchg
and
pop
mov
xrelease
addr16
push
popa
jae
addr16
jg
inc
inc
xchg
popa
jge
sub
adc
int
sub
adc
mov
add
xlat
inc
xor
jmp
dec
add
roll
xchg
lret
mov
pop
add
sahf
cmp
dec
test
je
sti
and
mov
cmpsl
adcb
pop
xor
add
cmpsb
mov
cwtl
add
and
int3
rcr
push
sbb
loop
pop
jl
stc
cmc
bound
xor
pop
or
imul
pop
decl
sbb
cmpsb
xchg
mov
fldl
or
fsubp
mov
ja
pop
xor
dec
pop
imul
jmp
add
mov
iret
mov
loope
in
jp
out
and
ss
in
arpl
cld
sub
xchg
mov
loopne
mov
mov
cwtl
out
xlat
push
add
sub
out
insb
dec
push
push
jne
mov
out
movsb
mov
vaddss
shl
inc
jne
lret
push
les
or
addl
add
adc
pop
inc
jl
xor
push
in
xor
mov
dec
das
out
mov
loopne
fcomi
mov
aas
gs
mov
adc
and
dec
mov
hlt
lds
add
sub
lahf
mov
pop
xchg
int3
cld
lret
pop
aaa
jle
aaa
dec
rcrl
mov
ret
sub
popf
outsb
stc
xor
scas
pop
std
add
popf
sahf
scas
ss
bound
mov
mov
cld
push
incb
mov
push
push
and
push
or
add
mov
int3
push
push
shll
add
mov
sbb
lcall
dec
inc
sub
aad
fiadds
xlat
icebp
add
std
xchg
lcall
in
loope
cmpl
fstpl
and
test
popf
mov
xchg
sbb
pop
movsl
lahf
mov
rclb
xchg
mov
ror
push
idivb
gs
bound
xchg
lret
dec
mov
pop
sbb
fs
nop
js
sahf
xchg
cmp
xchg
outsl
push
push
mov
into
imul
repnz
xchg
cmp
pop
ret
xor
or
and
mov
jl
push
sbbb
sbb
or
sbb
xchg
clc
mov
push
enter
add
lea
decl
sub
and
jmp
mov
mov
add
or
jg
std
xchg
add
mov
pop
out
sbb
dec
test
mov
sub
hlt
imul
mov
insb
lds
xchg
aas
sbb
out
test
popa
iret
adc
std
xchg
movsl
popf
jae
and
test
mov
mov
in
jp
lea
cs
jmp
clc
pop
pop
or
mov
xchg
js
xchg
push
ret
push
xor
push
je
test
imul
into
mov
mov
or
out
lcall
xchg
lods
mov
or
js
hlt
es
mov
pop
jns
mov
xor
push
jb
sbb
stc
lds
loope
push
fcompl
push
in
mov
push
in
mov
test
in
add
mov
pop
mov
mov
inc
test
pop
repnz
and
fdivrp
mov
lods
jno
mov
cmpsl
push
add
adc
dec
dec
jno
dec
xor
aam
stos
pop
dec
push
das
mov
es
lcall
mov
outsb
enter
push
or
dec
sbb
call
xchg
fstpl
fs
push
jno
imul
cmc
pop
or
and
xchg
cmpsl
pop
outsl
sbb
lods
cmp
gs
nop
mov
add
and
jbe
dec
sahf
sbb
sub
or
cmp
sbbb
mov
jg
inc
icebp
popf
inc
inc
push
dec
rcr
scas
push
or
and
mov
mov
sbb
jns
int3
jp
lcall
cli
aad
add
scas
in
cld
sub
scas
pop
jle
jecxz
pop
jl
repnz
loopne
xchg
cli
pop
jge
dec
in
mov
cs
je
push
mov
pusha
lds
mov
mov
pop
ja
mov
aaa
aam
call
push
lcall
pop
adc
push
or
std
xor
pushf
adc
xchg
in
add
and
adc
xor
push
mov
es
dec
lock
push
hlt
pusha
arpl
inc
rclb
dec
jmp
sub
add
test
pop
insl
xor
fsubrp
dec
xchg
popa
les
in
push
ljmp
aaa
lahf
adc
aam
test
fwait
mov
lret
jo
sahf
cmpsb
lahf
ret
addr16
in
dec
out
ljmp
pop
push
or
jo
int
fistps
mov
pop
cli
dec
shrl
sub
dec
fcmovnbe
and
dec
cmp
inc
cmp
sbb
shrl
scas
out
and
jne
stos
loopne
jecxz
sbb
out
or
scas
imul
jne
mov
imul
cs
pop
push
mov
mov
shlb
stos
movsb
xchg
xchg
pop
sub
and
xchg
sbb
pop
add
div
ret
pop
adc
mov
lds
xchg
xor
int3
mov
pop
xor
fs
call
hlt
pop
adc
mov
addr16
xor
add
je
test
push
sbb
inc
dec
jle
stc
les
mov
push
jge
adcb
push
pop
test
push
adc
int3
fisubrs
out
inc
dec
sahf
or
mov
rcrb
roll
loope
incb
push
jg
cli
or
lahf
and
add
sub
in
repz
xchg
insl
test
dec
mov
in
push
add
or
inc
arpl
int3
or
test
push
stos
push
pop
cmpsl
inc
push
mov
pop
aad
addr16
adc
inc
and
aam
out
imul
mov
and
cwtl
out
inc
push
pop
test
popa
or
out
xchg
jnp
xchg
mov
mov
pop
cmp
lcall
jmp
cmp
mov
and
push
xor
test
call
mov
mov
adcb
js
pop
inc
cld
inc
sbb
cmp
int
mov
push
dec
sbb
repz
out
jo
push
jno
ret
inc
cmp
adc
lds
movb
jnp
ret
add
mov
xchg
dec
ss
fnstenv
or
pop
outsl
mov
ficoml
jo
mov
out
imul
push
ljmp
jnp
dec
mov
sub
cmp
bound
xlat
arpl
loopne
sub
mov
loope
dec
lea
aam
dec
stc
jl
inc
pop
int3
dec
je
je
notl
mov
out
movsb
gs
mov
cmp
mov
out
cmp
xchg
filds
ret
push
dec
mov
pop
or
sub
aam
sub
fucomp
pop
andl
loope
inc
fidivrl
adc
push
add
bound
push
xor
out
pusha
mov
aad
pop
pusha
popf
sbb
mov
mov
jg
std
pop
negb
jae
or
ds
movsl
lcall
inc
sti
iret
push
loope
sub
xchg
push
fsts
xlat
cmp
push
call
mov
popa
lahf
lods
in
and
rorl
mov
ds
insb
and
and
xchg
dec
test
jo
xchg
mov
das
and
pop
cmc
leave
xor
stc
sub
mov
mov
ret
mov
jl,pn
js
aas
ss
pop
inc
in
or
pop
dec
mov
in
push
pop
mov
ret
js
xchg
cwtl
out
fistps
jbe
adc
cmp
sbb
mov
outsb
add
xchg
cli
cltd
mov
fwait
add
pop
insl
cs
mov
pop
divl
inc
or
push
or
cmc
mov
push
repz
sbb
ljmp
pop
xchg
push
inc
fldcw
xchg
repz
lret
js
sbb
scas
insl
test
jecxz
dec
adc
sbb
cmp
js
imul
rcll
push
imul
clc
add
cmc
movsb
loope
or
leave
lods
sub
hlt
inc
adc
js
rorl
mov
les
ret
inc
xor
adc
orl
loopne
push
pop
push
data16
inc
mov
aas
fstpt
loop
rorl
push
je
imul
sbb
mov
add
and
test
pop
mov
cmp
adc
das
sarl
dec
push
xchg
mov
loop
dec
test
dec
cmp
shll
js
and
push
sbb
ret
out
jae
movsb
add
or
or
fcmovb
aaa
pop
fdivr
push
push
or
push
push
cmp
jg
in
sbb
out
and
add
cmp
das
lea
jb
push
iret
pop
cwtl
fisubrl
jno
hlt
push
xor
xchg
mov
or
or
dec
adc
loope
inc
bound
and
in
stos
sbb
pop
xor
in
sahf
jp
test
shl
mov
lret
mov
lret
jmp
fimull
mov
push
or
enter
add
mov
cmpsl
int
in
out
nop
cli
push
mov
sub
iret
shrb
lahf
push
dec
lahf
sub
inc
pop
rol
mov
xor
xor
ficomps
popa
mov
addr16
pop
dec
sbb
jl
cli
data16
lret
or
mov
push
jmp
mov
decl
mov
lds
leave
jp
stos
dec
sub
pop
test
pop
push
xchg
int3
inc
scas
outsl
push
divb
mov
arpl
int3
dec
or
sub
int
inc
repnz
hlt
stos
push
jns
rcrb
les
or
inc
cwtl
xor
fadds
out
cmp
cld
dec
ljmp
dec
sub
jle,pn
sbb
pop
pop
dec
fdiv
leave
inc
and
adc
iret
jne
cwtl
dec
xor
ret
das
fnstsw
lcall
cmpsb
dec
ja
movsl
popf
mov
dec
mov
es
loope
add
stc
mov
xlat
movl
mov
cli
xor
adc
stos
xor
xchg
cmpsl
xor
and
into
test
sti
inc
push
rolb
mov
shlb
fldt
xor
rclb
andl
test
mov
mov
push
sub
mov
or
cmp
cmp
adc
xchg
leave
shl
push
fidivl
shrl
mov
cmp
sub
sbb
stos
adc
xor
test
pop
jae
in
mov
pop
jle
inc
push
sahf
aad
imulb
adc
iret
xchg
rorl
adc
xorb
dec
xor
dec
and
dec
sbb
mov
and
mov
insb
sub
dec
or
mov
pop
jg
sub
icebp
and
fisubl
push
xchg
and
gs
or
xlat
or
mov
hlt
xchg
cli
sbb
popa
sub
and
xor
cmpsl
lock
mov
mov
push
adc
jb
pop
shlb
daa
rcr
cmpsb
es
fimuls
or
pop
fistps
inc
mov
sti
cld
push
outsl
jae
sbb
cmp
les
and
mov
pop
xor
ds
or
push
add
test
lahf
jnp
ret
out
test
push
icebp
dec
cmc
mov
popa
and
scas
jecxz
cmp
mov
inc
xchg
and
and
mov
inc
cmpsl
lock
ljmp
sbb
scas
push
mov
or
loopne
in
mov
scas
inc
out
sbb
sub
enter
ljmp
fsubrl
cmpsl
popf
outsb
insl
ret
stos
ds
pop
ret
push
and
mov
sbb
sarl
push
push
xor
aad
jae
test
push
jne
cmpsb
loop
int
std
insl
jge
or
sahf
mov
mov
ret
or
aas
inc
mov
mov
inc
arpl
mov
push
push
dec
ret
add
repnz
xor
push
fs
fs
fidivrl
nop
adc
push
jecxz
jno
cmp
pop
cmpsl
rcrb
sarl
popl
hlt
push
std
jns
sub
dec
lds
mov
pop
shrl
gs
xchg
paddq
int3
sub
imul
inc
movd
xor
adc
mov
adc
enter
xchg
jo
pop
outsb
and
je
push
insl
mov
sub
dec
cmp
mov
adc
je
lret
enter
mov
out
adc
pop
pop
adc
fsubr
nop
mov
sbb
mov
xor
sbb
shrl
cmc
shlb
stos
insb
jo
xchg
pop
pop
hlt
xchg
pop
incb
xlat
add
fs
sarb
add
ret
cltd
mov
int3
mov
lret
sub
cmpsb
call
call
jle
pop
adc
xchg
sub
push
dec
inc
push
adc
ret
imul
pop
mov
mov
inc
push
aas
xor
adc
daa
in
iret
mov
mov
testl
out
movsb
xchg
insb
cmp
imul
add
mov
data16
sub
hlt
add
add
and
jmp
or
mov
and
push
js
arpl
cwtl
adc
repz
xor
icebp
sub
data16
roll
cmp
loop
xorb
xchg
xor
inc
inc
inc
adc
out
sbb
aaa
out
push
out
jae
pop
jbe
add
and
cmp
sub
pushf
aaa
xor
out
mov
sti
xchg
jge
iret
push
xchg
jbe
inc
mov
and
push
and
xchg
add
cmp
xor
pop
sbb
in
gs
mov
and
cwtl
add
mov
push
cmp
pop
sub
ja
inc
dec
sbb
sbb
jno
fwait
mov
notl
mov
jge
lds
rcrl
movsl
clc
jle
adc
out
shll
repnz
rcrb
test
jecxz
pop
jbe
xor
jmp
jl
mov
mov
int
mov
push
mov
mov
insl
jmp
pop
cmpl
ffreep
mov
mov
sbb
xchg
xchg
and
add
int3
pop
lea
js
cli
iret
xor
je
inc
fs
arpl
mov
pop
mov
ret
std
add
sbb
sbb
push
enter
sbb
les
xorb
cltd
aaa
sub
push
xchg
cmpsl
or
xor
cmp
push
je
out
into
fmuls
loop
jge
cmp
pusha
cltd
and
movl
ljmp
xchg
loope
xchg
mov
mov
and
add
aad
lods
idivb
adc
xchg
add
stos
xchg
loopne
sbb
outsb
sarb
insb
inc
imull
add
push
pop
cmc
mov
sbb
adc
cmpsl
sbb
aaa
push
inc
inc
xchg
sub
pop
mov
shl
or
push
sub
jmp
sbb
jne
movsb
es
jbe
adc
jns
jle
jae
jbe
cmp
adc
movsl
mov
or
add
cmpsl
int
or
out
add
xor
aad
test
sahf
lods
push
dec
sub
jge
imul
inc
pop
xchg
push
dec
cli
jno
dec
iret
and
cmp
out
shll
cmp
ja
js
ljmp
mov
daa
pop
xchg
aas
fcomps
cmp
mov
mov
push
xlat
cld
insb
push
aad
cmpsl
jb
jne
out
fwait
ja
sbb
enter
push
cmp
add
xchg
test
and
cmp
dec
popfw
aad
xchg
scas
out
rcrb
outsl
mov
xchg
cmp
mov
pop
jp
dec
inc
adc
je
es
lods
ret
ljmp
cmp
cs
pop
jo
ret
mov
push
cmp
or
push
fldenv
cld
push
add
push
pusha
mov
sarl
or
jbe
popa
and
mov
push
xor
mov
mov
test
cli
xchg
xor
mov
in
xor
jp
xchg
loopne
cmp
hlt
cmp
in
and
pop
bound
and
and
pop
cmpsl
cmpsl
andb
jmp
push
or
fisttpll
fildll
out
adc
mov
and
fcoml
scas
pop
cmpsl
daa
pop
jo
je
jge
mov
adc
test
shll
mov
cmpsl
cmpl
cmp
rcrb
int
scas
push
lcall
or
add
mov
repz
data16
pop
into
pop
insb
add
addl
inc
sub
add
fiaddl
sbb
and
and
and
xchg
or
imull
aas
sub
xor
pop
lcall
and
in
dec
jnp
insb
dec
enter
and
shlb
cld
repz
cltd
mov
add
cs
and
pop
cmp
mov
lcall
adc
stc
inc
jecxz
dec
into
inc
or
or
pop
out
subl
stos
jmp
lcall
sub
ja
jge
or
scas
mov
lahf
imull
dec
and
cli
rorl
pop
jg
test
adc
pop
fsub
imulb
insb
call
cltd
xor
insb
mov
gs
loop
xchg
cs
mov
ret
inc
dec
pop
xor
outsb
add
jl
adc
daa
sub
push
dec
adc
cmp
dec
mov
es
jecxz
iret
inc
aaa
loope
xchg
and
ljmp
fmull
inc
das
push
dec
fldl
push
sub
mov
xor
mov
xchg
jne
push
or
push
rcl
dec
jecxz
das
outsl
mov
mov
es
dec
int
xor
not
cmp
mov
and
mov
insb
pop
mov
pop
dec
pop
add
sbb
push
xor
mov
test
test
idivl
and
dec
bound
rol
adc
push
jg
shrl
repnz
adc
cmc
scas
nop
addl
mov
sbb
mov
lds
ja
fcmovb
scas
jl
daa
in
and
fwait
xchg
mov
je
adc
sbb
imulb
add
ja
and
xchg
sti
cmp
jmp
jae
pop
sub
inc
pop
rcl
pop
repnz
aad
push
lea
mov
imul
int
mov
mov
das
imull
pop
dec
jle
inc
xlat
dec
jp
adc
push
add
sbb
subb
rclb
inc
xchg
mov
add
mov
sbb
mov
loopne
xor
in
scas
out
pop
push
cwtl
jnp
adc
ss
andb
in
or
xor
inc
aad
enter
scas
mov
fwait
add
je
fistl
insb
icebp
sub
sub
mov
rcl
insb
idivb
xchg
xchg
or
fs
xlat
inc
outsl
into
mov
loop
test
jecxz
gs
adc
mov
xor
or
add
mov
mov
xchg
cvtpi2ps
sbb
push
jae
or
hlt
push
jp
ds
push
pop
aas
loopne
adc
adcl
rcl
out
mov
mov
jne
roll
stos
pop
lcall
aas
lds
out
ss
xchg
rorl
mov
xchg
lock
lret
jle
scas
mov
xor
divb
cmp
loopne
mov
and
or
adc
xchg
or
outsl
pop
xchg
dec
pop
cmpsl
pop
mov
mov
jl
mov
push
loope
call
sbbb
das
or
dec
lds
cmp
dec
repz
xchg
mov
and
flds
xchg
fbstp
aam
dec
pushf
jae
std
dec
mov
pop
fiadds
aad
push
pop
out
popa
lods
aad
push
rorb
inc
sti
lods
ret
or
sub
clc
mov
lahf
mov
push
xor
pop
ficomps
xchg
out
cs
mov
cmp
andb
cmpsl
mov
add
dec
push
xchg
pop
and
cmp
xchg
cmc
gs
stos
and
mov
and
lods
xchg
fs
inc
int3
aam
adc
mov
xchg
adc
out
fldt
jp
mov
ljmp
pop
mov
and
adc
dec
andb
and
cwtl
movsl
test
loop
jp
dec
push
ja
fistps
int3
addl
lock
xchg
adc
jne
lahf
and
push
out
inc
ja
mov
shr
pop
push
loop
jbe
filds
movsl
push
call
push
inc
sbb
push
and
into
dec
cmpsb
negl
jp
test
cli
gs
int3
nop
sbb
pop
scas
fisttps
aaa
push
sbb
inc
xor
ljmp
xlat
jbe
inc
pop
or
or
cmp
push
push
mov
pop
test
xchg
push
cmpsl
xor
lds
push
mov
aas
mov
rolb
sub
out
ret
lcall
and
mov
adc
jno
xor
ds
loop
dec
shlb
pop
into
mov
test
pop
adc
jg,pt
out
push
cmp
cmp
add
push
out
jle
fisttps
mov
rcl
outsb
mov
jle
clc
adc
jp
lret
scas
push
push
adc
fmuls
cmp
std
data16
outsb
ss
inc
das
daa
dec
lods
ljmp
add
xchg
pop
jns
leave
dec
mov
enter
dec
mov
loop
push
mov
sbb
sbb
pop
mov
rorl
loope
push
jecxz
adc
inc
cmp
cmp
cmp
ret
pop
sbb
shrb
mov
sbb
jg
dec
dec
les
inc
sbb
scas
mov
in
sub
movl
adc
lock
xchg
adc
test
jmp
push
data16
hlt
mov
inc
xor
add
popa
and
out
push
shll
aad
test
push
hlt
sub
mov
movsl
shrb
cmp
fwait
arpl
dec
movsl
mov
pusha
jmp
and
cmp
mov
push
mov
or
xor
mov
aad
enter
fsubrl
outsb
push
test
mov
add
sub
mov
or
test
and
aas
jbe,pt
ljmp
mov
xchg
jae
lahf
arpl
and
inc
push
aad
push
push
sarb
and
jmp
dec
bndstx
popf
aam
pop
push
shll
test
jns
pop
xor
cmp
cmp
sbb
pop
xchg
jle
aad
fistpll
cmp
icebp
sbb
xlat
das
fdivs
adc
mov
mov
xchg
xchg
mov
insb
inc
test
stc
aas
mov
pop
cld
or
loopne
fdivrs
push
sbb
cmc
xchg
and
mov
xor
jl
movsl
pop
sbb
jne
test
ljmp
lock
adc
dec
stc
fldenv
push
fimuls
jno
out
add
push
dec
ljmp
mov
add
adc
or
sti
clc
jmp
mov
xchg
in
mov
push
loopne
lods
push
and
lods
scas
hlt
xchg
jbe
mov
roll
loop
iret
and
movsl
repz
adc
xchg
cld
mov
pop
jns
out
jecxz
in
int
stos
jmp
adc
repnz
lea
cmp
mov
lock
shr
jge
sbb
icebp
jno
jno
xor
jl
idivb
jo
lret
arpl
push
in
mov
mov
inc
sub
push
mov
les
sub
mov
ss
mov
sbb
gs
mov
or
je
lea
pushf
inc
mov
sbb
mov
aam
arpl
xor
adc
in
sbb
popa
fs
and
xor
xchg
add
pop
sub
ja
push
sub
scas
imul
pop
and
dec
cmpsl
pop
jge
bound
int3
xorl
and
pop
jge
push
sub
push
cmc
jns
enter
movsl
xchg
add
pop
add
jbe
jb
adc
sub
data16
xchg
stos
aad
pop
jo
adc
push
and
dec
mov
mov
xor
pushf
mov
inc
and
notb
mov
or
ljmp
int3
jno
or
jae
xor
pop
xchg
dec
pop
out
sbb
lcall
add
das
mov
push
jl
outsb
popa
pop
jle
lds
mov
aaa
jno
and
iret
add
sahf
ljmp
lods
addr16
push
sbb
adc
mov
mov
std
mov
mov
test
sbb
repz
testb
pop
sahf
mov
push
lods
add
out
add
push
addr16
sbb
xchg
mov
dec
dec
jb
add
outsl
out
mov
adc
cmp
popf
mov
fistpll
jge
inc
add
loope
ret
ret
inc
xchg
loopne
ds
imul
in
jbe
cmp
dec
dec
adc
push
add
int
imul
fdivp
scas
inc
aaa
xchg
cmpsb
cmp
xchg
inc
and
stos
push
hlt
test
mov
xchg
movsb
mov
inc
fwait
shl
xchg
data16
or
pop
xor
mov
adc
adc
xor
icebp
pop
sbb
in
dec
sub
pop
dec
test
cmp
or
adcb
mov
add
cltd
and
ret
out
and
enter
sub
lahf
mov
mov
lret
jb
xor
xor
or
inc
xlat
mov
adc
adc
loope
test
push
dec
push
repnz
adc
mov
inc
ret
mov
js
mov
pop
adc
inc
shlb
dec
xor
js
add
or
pop
and
addr16
fisubrs
mov
mov
adc
sub
repz
xchg
mov
mov
repz
cmpsb
push
test
into
xchg
int3
pop
jne
jge
negb
jns
fisubrs
mov
pushf
aaa
sarb
mov
inc
or
daa
push
ret
fimull
outsl
mov
push
sub
out
cmp
cmp
inc
mov
fistps
cmp
pop
call
pop
mov
mov
sti
xchg
add
ja
cli
cmc
ds
and
and
dec
jmp
sub
test
test
inc
adc
arpl
cmc
nop
pop
int
cmc
add
jo
xchg
ret
inc
xor
push
cmpsl
scas
mov
mov
out
testb
xor
push
adc
test
sbb
aaa
pop
sbb
outsl
shll
pop
mulb
jmp
lret
jnp
iret
dec
faddl
sbb
add
daa
xor
fnstsw
add
dec
dec
shll
aas
insb
ret
sarb
fildll
or
sub
dec
push
mov
add
scas
lock
xchg
inc
xor
shrl
stc
clc
mov
mov
xchg
sub
inc
push
popa
nop
cmp
daa
pop
ficoml
push
dec
mov
mov
adc
mov
lea
push
lods
stc
nop
rol
jbe
push
lahf
pushf
repnz
push
jne
push
hlt
push
jge
add
push
rcr
test
xchg
mov
dec
xor
jge
fwait
ja
jle
mov
movsb
or
cmpsb
pushf
push
ja
divl
mov
int
shlb
push
icebp
and
jbe
ret
or
push
lock
in
sbb
in
push
stc
or
mov
cwtl
repnz
icebp
xchg
mov
mov
mov
pushf
ja
jge
lds
loopne
dec
jmp
adc
xchg
pop
mov
lds
or
mov
fimull
gs
cmpsl
jns
dec
in
fwait
iret
stos
fidivrs
sub
adc
imul
test
iret
imul
sti
dec
xchg
pop
arpl
sub
mov
enter
sarl
pop
mov
add
xor
aad
cmpl
mov
adc
xchg
lods
leave
and
loop
and
xchg
stc
lods
cltd
aas
paddusb
jno
mov
mov
into
popa
outsb
xor
mov
mov
lods
sbb
mov
stc
insl
rcrb
cltd
stc
dec
jae
pop
ret
jl
push
cli
xchg
lahf
arpl
dec
inc
fcmovnbe
addr16
mov
pushf
mov
cmpsb
cltd
sub
repnz
repz
pop
or
test
pop
or
push
dec
cmp
sub
pop
arpl
bound
fs
pop
push
inc
push
sub
lahf
pop
idivl
dec
inc
aas
je
out
pop
fdivp
es
xchg
jp
addb
fiaddl
mov
test
mov
stc
jle
shlb
lock
mov
cmp
lret
test
cmp
inc
adc
aad
push
test
add
mov
aad
ds
das
sbb
loop
fmuls
ret
mov
inc
stos
lcall
sti
rcrl
int3
or
dec
adc
push
into
fwait
pop
cli
lcall
out
mov
xor
lds
jmp
in
in
hlt
call
mov
sub
in
call
dec
push
sub
xchg
outsb
aam
repz
and
adc
sbb
pushf
adc
adc
sub
jle
movsbl
hlt
leave
out
push
mov
or
out
push
mov
fcomps
lods
and
loop
pop
cs
and
scas
push
clc
mov
data16
mov
mov
xchg
jge
movsl
xchg
icebp
mov
mov
imul
imul
subb
push
lods
mov
sub
ljmp
mov
enter
or
nop
out
out
mov
pushf
xor
mov
adcl
dec
push
sbb
cmp
or
daa
mov
or
lods
xor
xlat
dec
repnz
and
inc
xor
or
ss
cli
cmp
in
rcrl
fisubrs
lcall
pop
lods
dec
sub
push
sti
nop
mov
sub
xchg
xor
xchg
leave
bound
inc
psubw
dec
fbstp
cmp
cmc
mov
mov
jae
je
insl
push
mov
push
xor
lock
je
mov
je
mov
mov
testl
mov
sbb
lahf
shlb
push
loopne
sti
jge
cltd
pop
in
xchg
inc
scas
inc
jb
mov
adc
addb
jmp
sub
lret
into
loope
repnz
dec
sbb
jecxz
inc
push
lds
imul
das
cltd
repnz
cwtl
mov
popl
leave
into
mov
xchg
jno
in
sub
push
xchg
je
add
lds
sbb
ljmp
sbb
push
dec
sbb
dec
inc
add
movsb
adc
stc
and
rcrl
and
jo
mov
stc
and
clc
pusha
mov
inc
push
or
dec
inc
adc
out
push
lock
inc
daa
mov
movsb
inc
or
enter
inc
cmp
fidivl
adc
or
popa
cmp
adc
outsb
add
push
imul
xor
mov
and
icebp
sbb
repz
aad
jg
inc
mov
test
mov
push
aas
xchg
stos
lcall
imulb
mov
ficoms
shr
pop
ds
cld
stos
lds
jge
stc
roll
outsb
jo
xor
imull
lds
and
sub
inc
or
rorl
pop
xchg
lods
out
mov
push
cli
shl
cmp
cltd
sarb
mov
ret
mov
popa
mov
sub
imul
int
pop
jl
into
adc
jb
das
mov
mov
out
push
push
into
popa
sarb
add
notb
add
sbb
and
xorl
add
mov
and
clc
cmp
dec
push
lret
das
pusha
inc
push
mov
xor
inc
out
push
jle
sbb
std
push
sub
cmp
mov
pop
movsl
cmp
mov
sbb
insb
cwtl
cmpsl
jae
push
or
mov
ret
dec
xchg
sti
mov
popa
inc
sbb
insl
sbb
and
mov
cltd
aaa
je
or
popf
pop
pop
xor
sub
iret
or
imul
xchg
ds
jecxz
mov
sbb
inc
sbb
xorb
mov
xchg
mov
pop
sub
movsb
or
mov
sub
repz
mov
inc
jb
in
imul
ljmp
es
cvtps2pi
add
push
rcrb
xlat
adc
stos
push
xor
xor
daa
pushf
lahf
cli
push
enter
inc
shrl
push
repz
aas
nop
jg
into
fldenv
in
mov
stc
in
gs
mov
in
sbb
xlat
les
fsts
push
or
and
adc
add
dec
xchg
prefetchw
xor
outsb
and
cld
add
cli
scas
out
shrl
pop
adc
add
ja
add
insb
mov
pop
mov
jnp
inc
dec
std
cmp
fcomps
add
jae
aaa
lods
lret
leave
sub
aad
dec
push
arpl
setge
icebp
imul
rcl
cmpsl
enter
jg
ljmp
push
pusha
mov
rcr
push
in
xorl
push
scas
ds
adc
push
mov
test
jae
dec
inc
movsl
lds
fcoml
jne
pop
in
leave
fists
repz
and
rcl
daa
stc
out
fildl
xchg
cmp
xor
and
jns
cmp
mov
dec
cmp
or
aas
cmp
cmp
pop
fs
pop
sbb
xor
stc
cmp
xchg
out
mov
inc
dec
pop
mov
cmp
loop
inc
adcl
pop
int
jns
push
cmp
hlt
push
mov
ret
in
mov
or
jmp
jle
popf
mov
sub
mov
sbb
or
sub
mov
mov
imul
pushf
mov
xchg
jb
fdivr
fildl
repz
gs
push
es
fidivrs
or
ret
imul
ret
cmp
imul
push
les
daa
lret
mov
fdivrs
sbb
das
ljmp
pushf
clc
push
and
lock
and
je
or
jnp
pop
fwait
jns
add
in
sub
pop
mov
inc
bnd
bound
mov
mov
subb
mov
lock
mov
leave
in
movl
adc
xchg
testl
ljmp
pop
jns
sbb
jbe
stc
data16
imul
xchg
pushf
ret
movsl
inc
roll
pop
cmp
cmp
xchg
aaa
aas
sti
mov
hlt
inc
aaa
add
mov
and
nop
jp
jecxz
mov
sbb
ja
cmc
jns
add
cmp
rorb
ljmp
push
cltd
sbb
es
test
lea
inc
inc
shrb
adc
add
arpl
rolb
mov
sub
pop
inc
xor
sub
lcall
outsl
xorl
es
lahf
shlb
xor
rcrb
je
xchg
jne
bnd
paddw
loop
pop
addr16
sbb
dec
loopne
iret
sbb
and
fcomps
enter
inc
ss
inc
inc
push
scas
in
addl
jge
lret
mov
shl
fwait
in
lock
sub
add
out
adc
hlt
xchg
sub
sti
and
pop
lods
addr16
push
std
scas
and
adc
jp
cmpsl
mov
mov
and
jmp
dec
mov
push
jmp
ss
xor
lds
arpl
dec
mov
movq
frstor
lss
es
pop
stc
lea
ljmp
stos
inc
pop
sbb
icebp
or
cli
daa
sub
fstps
xchg
dec
inc
jle
adc
andl
xchg
inc
mov
mov
cmc
in
push
pushf
aaa
xor
cmp
add
sarb
mov
add
mov
smsw
icebp
xor
pop
cmc
icebp
pop
xchg
xor
cwtl
mov
aas
jb
es
in
sub
pop
and
sbb
in
fstpl
cmp
daa
pop
das
mov
in
lods
cwtl
xor
inc
jae
jle
adc
les
and
adc
imul
push
repnz
cli
mov
mov
add
into
pop
dec
dec
loop
push
dec
sahf
dec
sbb
rcr
mov
js
sub
push
int
insl
and
xchg
xchg
testl
lcall
shll
bound
mov
std
je
fs
cmpsl
orl
test
cmc
push
outsl
inc
fmull
dec
push
fstpl
dec
inc
sbb
xor
in
mov
fcmovu
ss
push
pop
push
rcrl
sbb
dec
dec
enter
in
lcall
adc
mov
xor
mov
into
add
popf
in
and
into
lcall
out
shr
push
cmpsb
jnp
adc
or
and
jge
push
jne
fidivrs
inc
and
cmp
xchg
push
setle
lods
cwtl
mov
inc
push
inc
and
or
imull
sbb
movsl
dec
mov
ret
jle
into
cmp
pusha
mov
imul
mov
int3
jp
shll
jae
fs
mov
adc
jae
pop
lahf
adc
addr16
stos
je
lcall
int
sub
popa
xor
adc
jo
mov
or
xchg
jb
cmp
add
push
movsb
mov
cs
xor
call
mov
push
in
test
mov
popa
fisubrl
imul
mov
dec
adc
int3
cmp
les
pop
out
lds
pop
inc
and
clc
jae
push
xchg
jl
nop
jp
into
mov
mov
movsb
jo
pop
xchg
jge
push
loopne
negl
testl
jbe
addr16
jb
mov
sbb
outsb
mov
mov
mov
jg
inc
lea
or
jo
add
and
call
dec
movsb
sbb
jg
inc
out
push
jge
dec
or
adc
cwtl
and
or
pop
mov
sbb
jp
cs
cmp
push
add
das
push
mov
xchg
jle
sbb
arpl
xchg
subl
adc
incl
divb
xchg
mov
into
cmp
cmp
or
test
xchg
xchg
adc
fisttpl
loop
fimull
mov
nop
adc
or
sahf
jnp
std
cmp
xor
and
jnp
lock
jne
lret
cmp
push
xorl
flds
icebp
mov
lock
adc
lcall
scas
adc
sahf
mov
test
add
outsl
xlat
aas
icebp
int
adc
mov
aaa
adc
lahf
jbe
or
sbb
arpl
and
sub
mov
std
inc
cs
mov
xchg
lret
test
jp
int3
cmpsl
scas
xchg
mov
mov
loop
mov
mov
cmp
sub
push
xor
inc
ja
int3
mov
sub
jb
and
std
sub
imul
loopne
mov
repz
adc
loop
add
je
fwait
lds
push
mov
adc
push
pop
xchg
fistpll
outsb
cmpsl
cmp
mov
imul
leave
enter
shl
push
mov
jle
sbb
loope
outsb
cmp
imulb
xchg
push
fiadds
inc
lcall
aad
mov
test
roll
cld
cmp
and
andb
push
iret
fdivl
cmp
shl
cmp
popf
or
shll
mov
push
sub
out
sbb
nop
movsl
cltd
pop
cmp
les
sbb
mov
popa
test
inc
shll
pop
push
xchg
jmp
lods
mov
pop
out
xlat
push
aam
xchg
push
insb
inc
testl
dec
out
adc
andb
das
push
lods
inc
dec
jae
xchg
xor
cmp
stos
cmp
fwait
mov
mov
ds
cmp
xor
xlat
outsb
xlat
call
cs
lea
ret
inc
nop
sti
movsl
sbb
or
test
test
jo
jno
cmp
xor
cmp
pop
xor
out
std
hlt
jnp
cmp
imul
push
iret
data16
outsb
sub
in
fnstenv
iret
jp
push
cld
scas
outsb
xor
fsubs
adc
mov
add
pop
sarl
lds
or
xor
jae
xchg
test
jle
xor
mov
mov
outsl
in
mov
mov
cwtl
pop
sub
push
and
pop
push
mov
lahf
push
ds
mov
pop
xor
inc
adc
add
ds
push
pop
das
imul
imul
sbb
insb
dec
pop
and
push
fldl
ficompl
or
xchg
add
and
mov
lods
adc
cmp
addr16
lcall
sbb
mov
inc
mov
or
mov
sub
and
nop
insl
fcmovbe
mov
fisttpl
dec
inc
inc
sarb
push
xchg
xor
inc
subl
and
je
in
fisubrs
stc
sahf
cmpsb
jp
mov
js
push
cwtl
inc
ffreep
push
je
cwtl
cld
enter
xchg
fidivrs
mov
repnz
jmp
xchg
ss
nop
sub
shlb
testb
push
xor
mov
xchg
cmpsb
mov
nop
adc
add
shlb
es
mov
push
push
cmp
rolb
cmp
push
mov
sbb
sub
add
ds
xor
dec
rcrb
inc
ret
sub
inc
nop
stc
lahf
loopne
fdivrs
pop
add
pop
movsl
xor
sbb
or
lods
leave
fnstcw
mov
mov
mov
sbb
adc
subl
dec
pop
aam
mov
xchg
rorl
bound
and
ret
xor
es
repz
mov
movsb
jmp
shr
pop
repz
repz
imull
push
cmp
sbbb
xor
imul
xor
cwtl
enter
adc
aam
and
dec
adc
add
ds
cmp
mov
add
jns
mov
cmp
ja
js
ficoms
jmp
lock
pop
jnp
mov
lcall
ja
jbe
in
ficoml
mov
or
xchg
jl
jnp
jbe
jbe
stos
xor
int3
scas
int3
ret
mov
pop
shrb
in
negb
xor
popf
add
mov
sbb
lods
hlt
mov
xchg
xchg
pop
repnz
sub
movsl
outsb
leave
stos
mov
push
js
outsl
lds
ret
fildll
lods
es
inc
add
push
lds
faddp
xchg
rolb
movsl
leave
int
sbbb
or
xchg
ret
ljmp
into
xchg
add
push
in
jle
bswap
push
push
mov
sbb
orb
push
cmpsb
push
test
or
outsb
adc
enter
sub
lods
jb
and
jbe
int3
or
mov
lds
or
in
icebp
push
pop
sbb
fsubs
sub
push
repz
mov
cmp
jmp
or
mov
icebp
push
dec
rol
mov
sahf
mov
aad
sub
lds
fcompl
xchg
loop
push
lock
dec
sbb
ret
mov
cld
sbb
filds
ja
pop
jb
add
loop
loop
out
and
aaa
push
aam
and
dec
inc
jno
push
cmpl
sub
adc
loope
popf
push
in
jns
aaa
and
movsl
or
push
mov
mov
lcall
popf
xchg
imulb
movsl
dec
test
cltd
xchg
push
das
mov
ficoms
int3
push
add
or
fcoml
jb
or
jl
loopne
loop
push
imul
in
pop
sbb
push
jmp
orl
pop
cs
subb
int3
inc
inc
shrb
jg
and
push
fs
rcrb
pop
mov
insl
fcoms
mov
fwait
scas
or
dec
pop
std
push
mov
outsb
lock
adc
xlat
add
fadds
mov
xor
cmc
out
inc
mov
sbb
cmp
xchg
mov
popa
xor
in
pop
jp
mov
mov
shrb
or
mov
fs
jecxz
or
pushf
ret
es
cmp
sub
push
sbb
push
roll
push
int
jmp
sbb
fnstenv
pusha
arpl
jge
movsb
xor
jns
test
cmpsl
pop
mov
mov
mov
adc
xor
icebp
pop
add
cmp
xchg
sbb
shll
xor
fs
testb
js
mov
loopne
mov
js
js
addr16
pop
cs
repnz
cmpsl
sub
fiadds
add
popa
test
xchg
push
cmp
dec
and
mov
movsl
daa
mov
xor
pop
xor
add
imull
cmp
cltd
cmp
leave
or
rclb
mov
pop
and
dec
xchg
jmp
mov
push
rcrl
in
mov
push
lods
xor
lods
adc
dec
addr16
bound
psubw
loope
fs
imul
mov
aam
and
movsl
stos
mov
arpl
xchg
sbb
jg
xchg
mov
add
mov
inc
add
push
and
adc
adc
aad
fiadds
pop
pop
aad
leave
xchg
cmp
pop
pusha
ja
xchg
jne
cmp
stos
dec
and
enter
pop
add
dec
test
les
xlat
scas
mov
xchg
mov
fimuls
js
fsub
jne
mov
jne
stos
rcrb
cld
and
cmc
dec
arpl
cmpsl
push
es
repnz
outsb
xchg
shll
lock
aaa
xor
push
mov
popf
repz
sub
out
pop
inc
insl
outsb
sub
int
addr16
push
mov
in
ret
ljmp
pop
bound
xchg
test
add
mov
and
push
je
out
jae
mov
hlt
call
add
scas
es
push
add
rorb
add
push
mov
nop
jg
adc
sub
cmpsb
popa
aam
lret
jecxz
adcb
xchg
add
mov
cmpl
cmp
jnp
sbb
aaa
sti
fcomps
lahf
scas
and
xchg
lret
push
clc
adc
lock
xchg
iret
cmp
mov
aad
ret
sbb
cmp
mov
loope
lcall
mov
push
mov
movsl
cmp
cltd
dec
or
pop
movb
sub
push
push
fldl
pop
test
pop
imul
xchg
mov
loope
push
xchg
fcmovu
add
dec
inc
xchg
jno
fcmovu
xchg
std
xchg
sbb
ret
inc
xor
cld
stos
mov
lea
insl
test
rcrl
sub
fists
sahf
test
fdiv
jno
faddl
sub
adc
dec
testl
mov
jl
cmpsb
or
sub
jmp
fmul
adc
shrb
xor
xchg
jge
mov
xor
push
outsb
pop
rcll
add
jecxz
or
rcrl
dec
fldl
mov
ret
add
mov
movsl
ja
pop
pop
data16
dec
aaa
subb
inc
jnp
xchg
push
sbb
sub
mov
iret
divb
hlt
fucom
or
xorb
pushf
mov
or
inc
lock
int3
dec
bound
loope
adc
push
jae
sbbb
leave
imul
cwtl
aam
pop
stc
dec
pop
jg
fs
mov
push
cmp
mov
and
js
shlb
sahf
pop
cli
mov
lods
cwtl
mov
pop
pop
pop
xchg
outsb
push
push
mov
pop
push
dec
aaa
and
mov
sbb
push
pusha
outsb
out
adc
and
out
fdivs
add
jecxz
push
cmp
rcrl
fmul
ljmp
inc
into
rcll
fisubl
cmp
cltd
test
pop
sbb
mov
out
add
aam
subl
mov
xor
adc
dec
mov
bswap
mov
jge
mov
adc
xor
cli
pop
dec
sub
dec
pop
push
mov
mov
fmuls
stc
sub
lcall
movsb
fcmove
inc
pop
mov
sub
clc
mov
stc
sbb
pop
add
sarl
arpl
sti
add
int3
xchg
pop
aaa
cmp
add
jmp
pop
scas
lahf
push
dec
and
and
mov
scas
ret
lcall
mov
into
int3
sbb
fwait
lret
ficoms
pushf
adc
addr16
dec
in
mov
sbb
cltd
pop
adc
push
test
rolb
sub
lods
mov
cltd
popw
xchg
xchg
sbb
or
fdivrl
pop
stos
mov
jbe
lahf
shll
sbb
ljmp
addl
push
pop
cmpsl
repnz
jbe
in
add
movsb
in
arpl
inc
js
mov
ret
or
loopne
or
jo
dec
or
xor
enter
insl
and
cmp
add
loope
xchg
jb
lahf
xlat
dec
out
dec
rorl
arpl
adc
mov
test
ds
les
cmp
xchg
push
stc
xchg
sbb
push
lret
jg
dec
jmp
imul
das
xchg
movsl
int3
sti
adc
mov
addr16
test
inc
lock
sub
dec
imul
cltd
pop
into
scas
sub
pop
pusha
gs
dec
cmp
and
ret
jae
pusha
cmpsb
shlb
daa
push
xor
into
test
or
dec
mov
sub
sub
sbb
insb
imul
subb
pop
leave
pop
push
or
les
shll
in
out
jg
dec
aam
mov
imul
and
mov
jmp
arpl
pop
je
add
jp
fisttpll
adc
jmp
mov
icebp
inc
add
or
fdivp
hlt
mov
sub
mov
xchg
adc
add
push
ret
xchg
repnz
cld
pop
add
xchg
sbb
push
add
mov
and
insl
push
xchg
cwtl
loop
jle
ljmp
jp
push
das
mov
in
jno
pop
jnp
shl
inc
inc
cmp
or
pop
jle
add
hlt
or
movl
nop
xlat
fimull
mov
popa
sahf
test
mov
xlat
popa
dec
loopne
adcb
scas
fbstp
pop
pop
rcr
mov
adc
dec
dec
push
lea
adc
sub
mov
mov
loope
dec
or
xor
mov
sbb
or
imul
arpl
adc
lret
inc
js
sub
test
mov
mov
add
sub
cld
lods
pushf
or
adc
mov
cmp
jmp
in
mov
subb
stos
popf
fsubrs
push
and
jle
cmp
mov
adc
mov
pop
xchg
nop
or
add
mov
shrb
adc
push
test
pop
iret
mov
fstp
pop
jbe
aaa
jmp
xchg
dec
mov
dec
mov
hlt
push
sub
ret
sbb
mov
lahf
in
aad
jno
scas
cmp
icebp
xor
and
rolb
jmp
jb
cli
xor
aas
out
ljmp
mov
or
adc
std
push
sbb
stos
sub
xor
mov
lea
mov
out
je
fwait
jecxz
lods
ljmp
add
pop
stc
or
push
cmp
inc
inc
ficoms
arpl
outsl
arpl
xchg
pop
sub
jnp
adc
adc
xor
dec
xor
lods
push
hlt
cs
xor
push
mov
xchg
in
add
lods
imul
rclb
shlb
xchg
sti
jns
pop
ja
test
iret
push
and
js
xor
inc
dec
push
inc
jnp
ret
cltd
jg
sbb
imul
into
cmpb
push
adc
out
in
adc
or
dec
pop
loopne
loop
ljmp
xchg
jns
or
sbb
push
test
pop
data16
and
das
cli
push
in
and
sub
mov
xor
das
sbb
outsl
adc
xor
fldenv
fwait
xchg
xor
scas
push
mov
iret
xor
dec
xchg
les
xor
xchg
mov
mov
inc
test
inc
ret
aam
addr16
pop
inc
pop
loopne
fildll
mov
loop
or
dec
sbbb
sub
xchg
jns
add
mov
int3
jecxz
lock
pop
sub
xor
xchg
cmpl
jnp
lahf
cli
mov
mov
jne
gs
stos
mov
sub
or
push
test
push
fdivs
fcompl
jno
scas
in
test
data16
nop
nop
xchg
mov
cwtl
test
cli
adc
adcl
in
push
popf
or
dec
ret
sub
aas
loop
mov
mov
out
pop
or
in
nop
jae
adc
rorl
mov
add
mov
ja
mov
pop
jmp
pop
sbb
in
test
femms
pop
push
mov
movl
mov
mov
pop
mov
dec
jne
cwtl
mov
roll
add
jmp
xchg
fwait
mov
pushf
mov
xor
sbb
nop
xchg
lock
sbb
jmp
bound
dec
sub
movsl
adc
jo
bswap
das
pop
jp
out
pop
or
stos
fstl
mov
xor
mov
lods
or
pop
mov
addr16
lcall
pop
pop
movsl
jno
mov
jecxz
add
insb
loopne
and
mov
add
movsb
setl
lods
dec
pushf
mov
dec
add
xor
mov
je
inc
fidivl
xchg
and
ficoms
adc
push
and
sti
sbb
xchg
dec
aam
mov
rcr
sbb
imull
and
movsl
int
dec
or
lret
mov
mov
cmp
push
sub
les
rol
cmp
cmp
das
pushf
jmp
xchg
pop
ret
lds
fldt
dec
lret
das
std
xchg
mov
sub
dec
xchg
jb
imul
jl
cmp
repz
add
lock
test
hlt
jb
test
shlb
aas
lret
sub
dec
mov
testb
push
outsb
fnsave
or
sub
push
xor
je
icebp
das
jbe
pop
jnp
loop
mov
mov
hlt
ret
dec
sbb
xchg
loop
in
jecxz
cmp
inc
mov
out
sbb
decb
mov
fwait
in
push
mov
mov
sar
cmc
hlt
sub
mov
rclb
dec
out
outsl
jecxz
orb
jmp
test
cld
in
adc
out
sub
adc
mov
std
fstl
xchg
pop
filds
sub
clc
movsb
cmp
mov
lds
sub
xchg
pop
xor
icebp
dec
dec
in
mov
mov
jl
adc
dec
jle
dec
mov
or
arpl
lret
jbe
mov
inc
push
loope
xchg
stc
pop
aam
cmp
pop
sub
cs
cmovae
ret
in
jo
cwtl
sbb
and
mov
cltd
in
push
sbb
outsb
std
cmp
pop
jl
and
push
cmpsb
mov
inc
pusha
jg
add
ljmp
cmp
pop
stc
dec
and
testl
scas
iret
add
mov
mov
std
stos
mov
insl
fsubs
test
dec
insl
add
sarl
mov
ret
sbb
pop
cmp
push
mov
lods
xor
addr16
xor
orb
repnz
mov
or
mov
mov
xor
xchg
xchg
jae
into
mov
and
push
int
add
ljmp
xlat
cwtl
js
fdivrs
jnp
xchg
out
inc
or
inc
push
imull
jg
xor
inc
dec
cmc
ret
in
arpl
mov
sbb
mov
rclb
jbe
or
xor
leave
fwait
cmpb
aam
repz
out
test
ret
mov
jmp
add
int
sub
cmp
pop
jnp
pop
dec
and
lea
test
shl
cmp
push
jle
sbb
cmp
dec
sbb
pop
jl
or
push
je
push
or
rcr
inc
push
ret
mov
sub
out
nop
or
lcall
pop
in
dec
jbe
int
xchg
lcall
dec
fcoml
ret
adc
and
dec
jnp
and
in
adc
repz
jne
pushf
movsb
pop
pop
or
scas
inc
test
mov
out
nop
int
pusha
shr
and
fdivrs
popf
daa
pop
repz
cmp
jae
lret
lea
xor
outsl
or
pop
xor
pop
cmpsb
mov
push
dec
pusha
out
ret
dec
sti
incb
js
inc
ret
dec
out
sub
fs
cmp
push
gs
push
popf
les
inc
adc
lods
in
pop
cvttps2pi
add
push
push
and
push
sub
and
adc
js
jae
sbb
imull
sahf
mov
pusha
or
or
rorl
cmpsl
clc
mov
xchg
mov
or
enter
outsb
sbb
arpl
mov
or
bnd
movsb
pop
sbb
decl
das
decl
pop
or
adc
dec
inc
pusha
add
imul
bound
sbb
fiadds
js
sbb
ret
std
inc
pop
jns
pusha
cld
or
outsl
pop
sbb
push
arpl
lahf
int3
outsb
jg
jo
mov
outsb
ror
les
enter
and
xor
test
cltd
inc
ja
lock
fcomip
in
pop
xchg
or
pop
aas
dec
in
mov
push
jge
cltd
xchg
pop
data16
movsl
mov
xor
add
mov
jmp
adc
fldenv
movsl
sub
jae
jecxz
pop
movsb
cmpsb
fs
xor
and
leave
jnp
sub
mov
enter
xor
cmp
mov
insl
push
pop
outsb
push
fadds
and
test
push
popl
and
mov
sub
lds
cld
inc
cwtl
push
shll
sbb
pop
lock
mov
orb
push
pop
xchg
pop
jg
pusha
inc
loop
mov
sub
aam
dec
mov
pop
lret
lds
mov
jbe
mov
xor
push
test
dec
push
or
out
mov
popa
sahf
mov
inc
insl
bound
push
mov
movsb
sub
js
jbe
out
rcll
repz
rolb
push
push
jbe
and
hlt
add
scas
aam
mov
pop
test
or
sub
aaa
cmc
push
aad
pop
push
mov
adc
ret
dec
add
mov
mov
adc
aaa
push
mov
nop
ja
sub
dec
or
and
add
fisttps
call
xchg
shlb
fidivrl
pop
ret
xor
sbb
repz
sub
xor
sbb
sbb
or
fwait
pop
jmp
cmp
mov
push
jge
movswl
out
jl
inc
inc
iret
xchg
les
cs
pop
xchg
jp
aas
mov
mov
sbb
and
push
push
mov
mov
jns
test
jno
shrl
mov
add
movsb
bound
jg
xchg
aaa
pop
insl
jne
dec
push
loopne
lods
adc
dec
sub
stos
int
xor
mov
rcrl
inc
jbe
rolb
movsl
cs
lods
fdivl
repnz
fisubs
mov
rcrb
mov
xchg
add
push
lds
jmp
xchg
das
dec
addr16
and
or
jmp
lahf
xchg
add
or
xchg
cmp
fldl
ficomps
imul
aam
in
stc
cmp
mov
aas
into
sti
repz
cld
hlt
nop
xchg
out
mov
imul
adc
adc
in
xchg
shll
inc
enter
dec
dec
mov
pop
and
mov
das
lods
xchg
fidivl
movsl
jbe
push
loopne
cld
je
push
cmp
mov
or
mov
pop
cmc
fisubrl
mov
inc
sahf
sub
push
inc
pop
test
loopne
ret
or
rcpps
ljmp
and
adc
sbb
ret
in
jb
rorl
into
xor
pop
shrl
std
inc
fbstp
mov
inc
test
pop
out
mov
xor
and
inc
sahf
mov
loope
or
adc
cmp
and
jno
pop
sahf
outsb
xchg
imul
into
insl
call
outsl
imulb
in
aad
dec
adc
dec
inc
movsl
inc
rolb
fimuls
cli
pop
xor
inc
fimull
mov
rep
aam
std
push
lret
inc
rolb
jl
lods
mov
lock
arpl
xor
mov
aaa
lods
pop
outsb
or
mov
mov
adc
mov
int3
daa
addb
dec
lret
popa
sub
adc
sbb
imull
push
adc
bound
xchg
xor
aas
inc
and
not
add
adc
pop
movsl
and
in
pop
jmp
cmp
push
add
dec
jg
mov
mov
and
enter
dec
sub
sub
xchg
mov
mov
jmp
lret
movl
add
xchg
sbb
subb
rclb
fbstp
sbb
add
jnp
mov
push
pop
dec
adc
ret
fs
inc
sbbb
adc
lcall
loope
fsubrl
into
scas
pusha
add
mov
scas
cmp
fxch
and
scas
mov
sbb
sbb
iret
sub
xchg
xchg
cld
push
sbb
dec
xchg
mov
push
repz
mov
divb
xchg
mov
bound
dec
es
ds
movd
mov
and
sub
xchg
mov
test
arpl
or
pop
call
xor
nop
rol
cli
push
cmova
mov
aas
sahf
jo
out
insb
sahf
fiadds
xchg
aas
rol
outsb
enter
gs
cmp
fcoms
lods
pop
mov
sub
das
mov
in
dec
sbb
add
mov
std
mov
mov
movsl
mov
out
test
and
sbb
into
ficoml
outsb
fstl
decl
cmp
fdivl
inc
jecxz
arpl
gs
arpl
iret
test
and
cli
cmc
das
inc
push
push
lret
jns
pop
xor
mov
pop
shr
sbb
das
negl
testb
sbbb
ret
sub
xchg
imul
inc
pop
sub
jb
aad
arpl
shr
stos
push
lcall
and
or
subl
out
jg
jle
push
add
xchg
mov
repnz
ret
push
mov
or
ss
mov
stc
or
pop
sbb
xor
dec
test
mov
xor
sbb
sahf
sar
clc
enter
je
mov
and
sub
mov
mov
dec
sbb
test
mov
add
adc
push
inc
cld
push
es
xor
jmp
dec
adc
mov
push
rcrl
push
mov
das
ret
cmp
fwait
ja
in
cmp
sub
enter
mov
ds
scas
xchg
xchg
ds
sbb
xlat
mull
outsb
jbe
jb
not
cli
cmp
test
xchg
xchg
add
or
rolb
ljmp
adc
jmp
test
mov
adc
pop
pusha
pop
stos
into
and
inc
js
dec
arpl
jmp
popa
out
inc
jmp
sub
loop
xchg
mov
adc
jns
jno
sbbb
pop
xchg
xchg
movsb
jae
pop
jp
mov
add
aam
mov
jns
add
jns
in
xchg
and
xchg
mov
loope
hlt
dec
and
dec
pop
out
dec
inc
cmp
xchg
int3
inc
jl
shlb
fcmove
jge
pop
stc
test
movsl
sbb
mov
lods
inc
icebp
in
and
aad
movsl
sbb
ja
cld
test
push
lods
shll
push
mov
mov
adc
dec
xchg
sarl
push
iret
sub
mov
orb
or
xchg
cs
out
pop
or
into
xchg
je
mov
jmpw
mov
fildll
cmc
jno
mov
sub
out
mov
repnz
out
push
cmp
inc
mov
je
je
xchg
addr16
lock
xchg
fwait
loop
jmp
mov
mov
movsb
xchg
pop
mov
xor
cmpsb
in
mov
or
std
ss
mov
sbb
fwait
or
dec
in
jae
and
nop
leave
idiv
inc
add
sub
das
jo
outsl
jns
mov
in
orl
ds
jo
cmc
aad
inc
shll
push
dec
push
js
pop
and
in
aaa
repz
loope,pt
aas
jmp
jle
scas
sti
lea
leave
or
cld
add
je
lahf
adc
rolb
lods
popf
aaa
pop
mov
clc
cmp
xor
shl
test
mov
out
cmp
movsb
test
movsb
out
and
ficoms
stos
or
mov
insb
dec
insb
call
push
mov
inc
and
ror
cwtl
cmpsb
jo
add
sbb
push
jle
cmc
pop
mov
adc
pop
mov
fcmovb
mov
mov
int
das
sub
fisttpl
pop
pop
jl
lods
cwtl
lea
stc
cmp
lds
loopne
mov
dec
sti
fs
pop
je
and
mov
cs
mov
cmp
nop
xor
addr16
or
stos
lds
mov
mov
std
std
pop
adc
scas
out
out
pop
cli
fucomp
mov
xor
jmp
jecxz
lret
lea
xchg
jmp
shrl
mov
les
mov
jmp
and
cltd
or
fnstsw
adc
lret
loop
mov
add
stc
cmp
ss
and
stc
dec
sbb
stos
and
fdivl
or
mov
outsb
mov
xlat
inc
jmp
mov
cli
rorb
cmp
imul
sbb
xlat
sti
test
and
push
xchg
add
adc
sub
jo
xchg
mov
test
divl
xchg
in
fisubs
out
and
cwtl
ret
sbb
mov
jno
pusha
nop
push
dec
orb
pop
cld
inc
pop
push
cli
in
mov
jae
xchg
adc
mov
jge
imul
rorb
nop
xchg
mov
sub
dec
sarb
lods
outsl
movsl
ret
jge
imul
push
ror
lods
add
mov
stc
xchg
cmp
push
outsl
pusha
mov
mov
mov
or
rcll
mov
mov
rcrl
xchg
daa
sub
xor
inc
mov
push
and
out
sbb
pop
push
jge
aas
xchg
mov
cmp
pop
leave
lock
es
insb
inc
dec
mov
fs
adc
add
push
mov
pop
xor
push
jae
lock
aad
push
or
cmpsl
jb
ljmp
cmp
mov
xor
fiaddl
cwtl
int
aad
jmp
out
sti
lock
incl
xchg
push
pop
xor
dec
sbb
jno
arpl
xchg
sbb
jl,pn
mov
mov
popa
aam
ds
push
les
push
mov
sbb
dec
decl
inc
dec
push
or
ret
lcall
stos
mov
out
or
std
adc
cmp
in
enter
pop
jg
or
test
sub
cmp
pusha
or
sbb
stos
les
fidivl
adc
pop
and
mov
pop
imul
push
stos
ss
scas
mov
lock
xchg
and
pusha
inc
bound
add
sub
aas
inc
or
adc
add
mov
dec
jl
jge
inc
rcrl
mov
sub
ds
psrlq
and
stos
hlt
popa
scas
hlt
nop
and
das
jle
in
inc
jle
cmpb
jo
cmp
dec
mov
mov
inc
loope
cmp
lret
ljmp
and
add
popa
push
sahf
add
jnp
or
incl
dec
idivb
adc
sbb
xchg
push
xchg
push
or
ja
not
nop
lods
test
mov
or
out
cwtl
inc
xorb
dec
repnz
cmp
sub
jl,pt
in
lods
cmp
fs
or
out
jnp
sub
dec
fs
mul
push
and
jno
dec
xor
lret
repnz
jmp
fistpl
pop
sbb
aas
dec
dec
sbb
outsb
dec
call
pop
test
mov
pusha
movsl
push
mov
mov
jo
in
pop
xor
cs
xor
jl
dec
popf
jp
jb
pushf
pop
sahf
pop
sub
pop
cmp
rorb
dec
cmp
cmp
loope
push
add
or
jmp
xchg
push
sub
pop
xor
sub
and
mov
mov
add
rcll
fistpll
lret
inc
dec
nop
sbb
mov
and
and
popf
insb
daa
test
or
hlt
cwtl
dec
lahf
add
call
sahf
xor
mov
cmp
lret
negb
sbb
fiaddl
iret
jmp
shrb
sbb
in
icebp
sub
cmp
jne
inc
and
xchg
mov
sub
push
pop
mov
outsb
or
add
enter
in
jle
sub
jl
aaa
push
movsl
insl
movsl
and
adc
xor
fnstsw
mov
mov
insb
push
xor
ja
jno
dec
movb
incl
mov
jle
push
fidivrs
repnz
mov
adc
sub
or
dec
inc
cltd
aam
mov
js
mov
int3
pop
mov
or
inc
dec
cmp
add
add
add
mov
sbb
dec
sti
ficoms
lock
decb
mull
cmp
imul
jb
sbbl
adc
cmp
es
xor
jecxz
xor
jno
pop
inc
cwtl
adc
xchg
mov
sub
icebp
jbe
andb
mov
xor
adc
js
cmc
xor
decl
inc
mov
ficomps
mov
xchg
mov
push
inc
cld
ds
sub
and
cwtl
ss
lods
stos
test
xchg
pop
std
cmpsl
testb
xor
mov
mov
adc
pop
and
out
das
out
cmc
jp
dec
les
imul
orl
jbe
addr16
addb
mov
xchg
mov
sub
inc
enter
ljmp
dec
cmpsl
mov
or
dec
in
jle
mov
cmp
push
or
xor
insb
jp
mov
push
xchg
push
cmpl
add
adc
fcoms
cld
pop
stc
stos
in
out
sbb
popl
cmp
aaa
lcall
xchg
cmp
or
xchg
popa
jg
shrb
stos
data16
mov
aaa
jle
xor
inc
xor
popf
into
lods
adc
xchg
push
fwait
pop
and
addr16
outsl
nop
xchg
sub
loopne
lea
icebp
jbe
jne
outsb
testb
fidivrs
inc
in
mov
mov
roll
push
ret
adc
fistps
hlt
mov
je
out
pop
cmpsl
stos
fidivrs
leave
push
push
or
mov
inc
inc
dec
mov
lret
sbb
in
mov
ds
hlt
mov
cmp
leave
mov
inc
pop
icebp
loope
cld
sbb
push
or
movsl
das
cs
int3
sahf
in
hlt
fsubrs
fwait
jno
xchg
push
fildl
stos
jle
jns
mov
or
push
jg
sarb
enter
sub
aam
and
or
scas
aad
push
push
sub
rorb
stc
cmpsb
push
or
xor
arpl
aam
pop
daa
lret
dec
shrb
xrelease
mov
iret
lahf
arpl
test
inc
dec
in
sbb
inc
cmp
icebp
mov
movsb
jl
cmp
and
rclb
dec
sbbb
je
lahf
insb
dec
mov
loopne
jae
adc
fwait
cwtl
push
lret
sbb
popf
pop
inc
es
lret
scas
or
jmp
fsubrl
int
in
and
push
cmp
push
jge
xchg
pop
lea
dec
fcmovb
stos
jae
scas
inc
pusha
cmp
sbb
popa
bound
jae
imul
mov
loope
neg
icebp
adc
test
add
cmpsl
int
je
cmp
or
repz
loopne
mov
or
push
mov
sub
test
pop
ret
xor
cmp
or
out
mov
and
adc
inc
pop
out
push
sahf
push
mov
mov
pushf
or
adc
stc
pop
insb
or
jp
sub
int3
cmpsb
cmc
ja
jne
xor
mov
clc
xor
movsb
scas
push
push
stc
imul
xor
cmp
mov
loope
mov
mov
add
sub
mov
add
imul
repnz
or
push
pop
pop
push
jmp
mov
scas
inc
loop
jecxz
shll
fsubr
and
dec
sti
lea
mov
into
fdivrs
fucomp
dec
push
iret
mov
mov
int3
dec
faddl
adcb
or
mov
xchg
cli
test
jne
lret
jns
das
cmpsl
jns
arpl
sbbl
jmp
movsl
sub
stc
lret
xchg
push
sbb
mov
shrb
jle
ret
adc
mov
sub
mov
lock
inc
mov
jnp
mov
jnp
mov
or
or
or
roll
xchg
fdiv
test
pop
xchg
daa
and
push
mov
or
test
or
fs
jge
mov
jno
and
mov
mov
sub
xchg
int3
sbb
adc
xor
xor
mov
push
add
loop
push
pop
jg
cwtl
movsb
add
dec
jp
les
lea
xorb
sub
dec
cmp
loopne
lret
jns
and
mov
mov
mov
jne
pushf
add
sbb
fadd
int3
jecxz
add
sbb
cwtl
sbb
les
shlb
and
mov
pushf
fnsave
pop
cmp
jmp
push
ret
mov
jmp
pop
je
es
pop
jmp
dec
mov
sub
orb
xchg
mov
xchg
mov
adc
sti
mov
loopne
pushf
and
les
push
xchg
xchg
sbb
mov
addps
cltd
test
enter
xor
jnp
mov
pusha
mov
pushf
shr
adc
ret
xchg
cwtl
js
jne
push
movsb
lock
pop
flds
sbb
inc
hlt
in
daa
in
and
dec
sahf
shrl
mov
xor
sbbl
jne
xor
dec
scas
insl
push
adc
dec
int
or
outsl
ss
clc
add
push
jnp
and
bound
inc
loop
inc
aam
js
push
sbb
aaa
aad
sarl
adc
sbbb
or
shr
je
hlt
ljmp
push
popl
inc
mov
shl
pop
pop
decl
mov
jno
es
ss
mov
push
movsb
sbb
and
jmp
mov
pop
or
inc
aad
mov
xor
dec
aam
jns
int
fnstsw
out
cmpsb
pop
mov
jge
push
dec
lcall
out
rcll
and
popf
xchg
shlb
push
inc
xchg
scas
inc
inc
aas
insb
sbb
in
cmp
cmpsl
flds
mov
inc
sbb
pop
arpl
arpl
jmp
xor
push
or
test
sub
loope
xlat
lods
es
fs
aaa
pushf
into
and
gs
push
mov
mov
xlat
es
xchg
cltd
push
mov
adc
push
andl
push
push
mov
cmpsl
mov
sti
shll
frstor
lds
aas
lahf
inc
or
out
add
inc
xor
push
dec
ficoms
mov
mov
cmp
mov
pop
mov
clc
jns
sti
enter
lahf
push
fisttpll
xchg
into
out
push
adc
js
pop
cmp
inc
fistps
dec
mov
jnp
loopne
out
negl
cmp
mov
pop
popa
nop
cmp
add
cs
and
dec
outsl
test
out
lock
pop
stc
aaa
mov
addb
int
jmp
cli
cs
pushf
ljmp
lret
sbb
adc
ficoms
imul
adc
xchg
mov
push
jecxz,pn
sti
gs
xor
imul
cwtl
adc
test
xchg
inc
xchg
out
frstor
dec
sbb
xorl
jl
jp
cmp
mov
ret
jo
out
das
adcl
sbb
jecxz
xchg
dec
mov
in
rep
dec
scas
xor
call
jmp
mov
cmc
mov
lods
xchg
out
xor
or
push
xor
cmc
call
inc
ret
jns
and
movq
idivb
inc
daa
lcall
push
sbb
outsl
mov
and
imul
lock
xchg
adc
jg
gs
fidivs
mov
push
dec
push
mov
aam
and
pop
sub
mov
fisubs
fs
es
lea
jle
inc
mov
cltd
jno
xor
sbb
shrl
push
ljmp
fs
movsb
cli
hlt
xchg
loope
push
mov
andl
jecxz
and
sti
out
fwait
int
jns
xor
xor
sub
sbb
test
and
test
test
adc
mov
or
fistps
and
cltd
sti
gs
adc
add
cmpsb
jge
push
dec
mov
scas
inc
fsubr
cmp
mov
fstpl
or
pop
enter
ror
mov
aad
push
fimull
xchg
into
aad
clc
int3
adc
dec
aaa
das
push
stos
je
out
xchg
pushf
and
outsl
inc
pushf
cltd
daa
pop
leave
mov
and
add
mov
fwait
jno
mov
xor
out
in
mov
jecxz
lret
push
dec
insb
mov
dec
movsb
out
dec
lret
incl
xchg
fsubl
das
adc
bound
cmp
lock
dec
and
mov
insl
lods
push
adc
xor
cmp
sbb
or
jge
jecxz
cmpsl
hlt
dec
test
mov
paddusb
test
cld
lea
negl
dec
or
push
stc
add
negb
jno
adcl
mov
cmpsl
inc
out
xor
push
xchg
in
call
mov
sub
jbe
lods
pushf
dec
and
addr16
mov
cli
or
das
dec
jno
lret
or
lret
jecxz
xor
sub
stc
mov
ljmp
mov
pop
pop
xor
sti
xchg
cmp
xchg
jbe
mov
neg
rcrb
xor
sub
loop
and
xor
fstl
hlt
enter
gs
jb
ljmp
xchg
mov
orl
pop
jg
xchg
sbb
push
scas
popf
mov
outsl
sbb
mov
out
nop
in
inc
insb
outsb
rol
mov
jge
jl
repnz
sti
mov
imul
add
inc
xchg
mov
lock
mov
push
dec
imul
loopne
fs
popa
aam
pop
sub
jecxz
pop
jns
sti
leave
sub
and
add
sub
clc
mov
int3
sub
mov
pop
adc
rcrl
jnp,pn
cmp
pcmpeqd
shll
shll
add
imull
popa
adc
push
or
jo
push
adc
push
pop
clc
push
ja
lock
in
xor
out
daa
pop
lock
addr16
je
or
mov
ret
add
shlb
mov
pusha
jle
or
fwait
push
stos
icebp
xor
jae
mov
sbb
shr
stc
sahf
mov
jbe
roll
imul
and
pusha
add
gs
dec
push
imull
mov
stos
and
inc
mov
jb
test
jp
xor
call
xchg
fcmovne
stos
fdivl
xchg
int3
cwtl
adc
out
dec
push
mov
nop
pop
std
mov
xor
frstpm(287
mov
dec
push
xchg
enter
sub
mov
rcll
pop
enter
xchg
call
test
pop
sbb
in
lds
sbb
in
arpl
repz
sub
imul
pop
inc
pop
xor
mov
mov
dec
mov
aas
insl
popa
dec
repnz
cmp
bswap
or
push
and
dec
fmull
mov
ficoms
jmp
xchg
outsb
bound
leave
inc
outsl
lock
in
int3
sub
fisttpll
xor
mov
das
jo
adc
outsl
ds
mov
ficompl
mov
lods
mov
std
inc
mov
mov
fdivrl
push
decl
adc
inc
push
and
pop
sub
pusha
cmp
xor
or
faddl
lret
adc
in
scas
and
movsl
inc
pop
leave
sbb
aas
mov
and
or
xchg
mov
mov
sarb
jns
jl
pusha
repz
jge
vxorps
cmp
popa
mov
push
std
sarb
popa
mov
out
cmpsl
cs
fisubrl
sub
sarb
jns
lock
pop
into
push
ror
inc
mov
loope
mov
cmpsl
shll
int3
dec
add
repz
pop
push
fldenv
fdivl
sbbb
xchg
daa
mov
sbb
fisttps
loopne
push
ss
mov
or
mov
sti
lahf
je
lcall
inc
je
push
sbb
dec
mov
lock
xchg
xchg
fsubrl
jo
mov
push
insb
shr
addps
add
out
or
cmp
popl
xchg
lcall
lea
addr16
mov
cmpsl
jno
mov
xor
loopne
add
call
pop
adc
jp
fistps
inc
sarl
xchg
push
pop
xor
int
jecxz
jecxz
in
dec
shlb
cltd
jl
cmp
sbb
dec
lods
rcrb
and
mov
jle
insb
dec
mov
inc
iret
jg
xchg
mov
add
in
sbb
push
dec
fcmovnu
cltd
push
or
subb
dec
mov
cmp
movsb
pop
das
jp
add
pop
scas
or
or
xchg
std
and
dec
rclb
les
sbb
cmc
sbb
enter
cmp
dec
mov
int3
jg
test
sub
xchg
test
inc
or
cmp
and
xchg
mov
outsb
mov
xchg
dec
sub
notl
jbe
test
fstl
call
inc
mov
fcmovnu
push
in
xor
jns
mov
andl
imul
mov
push
imul
fcompl
lods
dec
data16
imul
in
fnstenv
or
add
pushl
dec
push
sub
fstps
jge
add
loop
mov
lods
cmpsb
loop
fsubp
out
lahf
push
mov
mov
xor
cmpsb
cmpsl
stc
loop
cld
leave
or
stc
cmp
scas
fstpt
jnp
movsl
sti
xchg
jp
pop
sub
push
pop
mov
xor
nop
mov
cmc
pop
pop
out
dec
xchg
mov
fiadds
insb
cmp
xor
xchg
lcall
cmp
and
jg
into
mov
adcb
push
outsb
sarb
adc
pop
jae
xchg
idiv
pusha
jle
jp
add
scas
jle
fisubs
jbe
icebp
dec
push
addr16
mov
jae
out
xchg
sub
jmp
loop
negl
add
aas
mov
or
sbb
add
jo
push
mov
cmp
adc
sbb
aas
ret
lcall
inc
xchg
lds
sub
incb
shl
dec
adc
popf
cmpsl
mul
enter
int
jns
adc
mov
xchg
test
fstl
add
popa
lds
mov
dec
popf
jl
in
mov
stc
stc
or
ficomps
mov
jecxz
and
popa
xchg
mov
aaa
mov
push
add
pop
test
mov
lea
mov
setnp
jne
in
push
popa
jns
push
and
sbb
clc
push
pop
mov
adc
pop
fadds
hlt
jne
pop
ss
xor
int3
rcrl
xlat
pusha
rorb
cmp
xchg
fisubl
int3
ficompl
cltd
mov
cs
push
leave
dec
lret
sbb
push
fs
loope
stos
outsl
push
jns,pn
lock
sbbb
imul
mov
push
add
ljmp
cmp
mov
cwtl
ljmp
ss
scas
test
inc
inc
push
inc
data16
out
inc
sbb
cld
icebp
cmp
dec
add
enter
jnp
lds
hlt
mov
cmpsl
and
mov
or
in
andb
jae
inc
pop
fidivl
mov
push
mov
add
je
mov
leave
adc
push
nop
add
test
aaa
pop
or
stc
scas
jmp
leave
pop
outsb
or
push
xchg
sbb
adc
movsb
mov
sbb
mov
push
xor
cmp
mov
ljmp
lret
cli
lds
ja
cmp
cli
out
pop
js
push
cs
mov
decb
ljmp
adc
fimull
mov
inc
or
fiaddl
xorb
xchg
cld
adc
sbb
hlt
push
test
mov
addb
outsb
out
jnp
clc
or
cmp
inc
sub
cld
mov
jno
jg
lret
fsubs
mov
mov
lret
in
mov
inc
xor
insl
add
test
aam
pushf
stc
icebp
jle
adc
add
scas
das
loopne
inc
subb
and
icebp
xorb
repnz
jb
out
and
movsl
jne
gs
sbb
das
xor
loopne
dec
aam
sub
xchg
adc
mov
xchg
sub
incb
pop
mov
mov
sahf
shll
data16
int3
pop
ja
sbb
ret
addr16
jnp
pop
ret
aam
outsl
mov
cmpsb
sub
in
data16
jo
das
js
ljmp
dec
cmc
ret
dec
mov
sbb
int3
jecxz
cmp
mov
repz
jb
and
mov
or
int3
outsl
loope
mov
xchg
mov
add
movsl
lahf
ret
movsb
aaa
sbb
add
add
adc
pop
jmp
push
dec
jnp
mov
leave
loop
nop
push
scas
add
leave
mov
jo
inc
dec
mov
loop
in
iret
mull
and
rcrl
sub
ret
pushf
mov
stc
movsl
mov
mov
scas
lret
imulb
add
pop
push
cs
sbb
dec
jp
add
das
push
aas
or
imul
aas
pop
clc
add
mov
sbb
sahf
or
ret
or
sub
movsb
fistpl
add
jge
mov
xor
sbb
pushf
xchg
mul
cmp
sbb
jg
push
push
jne
sbb
test
jle
nop
negb
jnp
xchg
shlb
inc
sbb
mov
push
dec
aaa
cmpsb
jae
add
in
and
dec
andnps
rol
lods
adc
outsb
rcrl
loop
jne
les
outsl
xchg
add
pop
inc
test
jmp
int3
mov
pop
adc
xchg
xor
adcb
or
enter
arpl
hlt
mov
pushf
pop
jmp
or
addl
sub
inc
xor
inc
push
and
sub
dec
int
or
dec
loopne
xchg
loopne
scas
and
jbe
jns
insl
sub
daa
ljmp
add
fists
and
and
mov
js
add
imul
bound
cmp
call
inc
out
std
pop
dec
insl
lahf
or
mov
inc
xlat
cld
jge
call
cwtl
inc
and
test
out
push
pop
sub
jmp
aas
data16
jae
nop
sahf
ror
pop
insb
imul
xchg
cli
xor
in
imul
ljmp
int3
sub
loope
flds
push
popa
vpor
out
and
lods
cmpsl
cmpsl
incb
mulb
push
pop
inc
hlt
test
push
dec
inc
stos
inc
mov
sbb
lods
jecxz
popa
cltd
and
sbb
leave
test
in
add
mov
fs
cmpsb
shrl
xchg
repnz
out
aad
inc
shll
xchg
jne
xor
jbe
cmp
dec
pop
cld
add
fwait
mov
jbe
insb
int3
cmp
mov
xchg
xchg
scas
fsubr
push
fidivrs
cmp
and
sub
mov
xlat
pop
movsb
dec
add
push
jmp
xor
pop
mov
addr16
into
adc
shrl
ds
rcr
mov
adc
pop
inc
shlb
pop
mov
xchg
pop
push
adc
add
cmc
scas
mov
inc
push
cwtl
lds
jp
lret
popf
lods
sahf
mov
imul
in
mov
fildll
jl
mov
repz
shll
aad
and
cmp
xchg
int3
sbbl
fsts
mov
lds
inc
pop
jae
in
push
cltd
pushf
clc
push
cli
pop
mov
lahf
mov
jle
lods
cmp
or
in
in
mov
pop
pop
std
ljmp
dec
ret
roll
inc
or
out
mov
out
lret
mov
ljmp
push
fstps
out
scas
jnp
dec
sbb
imul
test
xchg
es
push
cmp
or
mov
and
inc
sbb
add
and
pop
stos
insl
xor
dec
jle
psubsw
mov
push
lret
je
jae
and
push
dec
icebp
add
stc
aas
ljmp
adc
cmp
xchg
mov
sub
out
sbb
jecxz
xor
loop
negl
cmp
dec
mov
adc
and
or
shrl
shlb
cmp
lock
xchg
fs
cld
dec
pop
clc
push
mov
lret
xchg
mov
adc
inc
imul
pop
or
divb
fbld
sub
jp
cmp
xchg
lods
test
dec
ja
dec
cld
mov
add
and
test
rorb
xor
mov
jl
cmp
adc
cmp
jg
jo
or
jne
cmp
hlt
or
fstpl
or
out
cmpb
je
outsl
aad
xor
lret
jmp
pop
stos
lea
mov
call
popf
push
jp
jb
mov
sbb
call
ffreep
xchg
add
mov
pop
pop
and
inc
lea
aam
pop
xchg
cmpsb
jle
pop
popa
addl
sbb
lcall
into
inc
mov
pop
in
lcall
jmp
xchg
inc
mov
movsl
stos
xor
cmc
andl
cltd
mov
xchg
in
pop
clc
stc
sbb
push
data16
clc
dec
sti
sti
mov
mov
aaa
mov
xchg
jno
imul
icebp
adc
stos
jae
out
inc
jge
adc
push
test
sub
push
and
addr16
or
stc
xchg
jae
mov
loop
cmp
int
xchg
dec
ficompl
add
cmp
jg
mov
add
clc
lret
dec
xor
and
cmc
lods
sbb
pop
sti
inc
cmp
pop
es
push
dec
add
jno
icebp
rorl
or
pop
notl
pop
mov
or
jbe
or
mov
insb
fwait
dec
dec
in
mov
loop
xchg
jp
jb
push
hlt
fildl
or
lcall
add
mov
in
sbbb
aaa
xchg
mov
and
mov
aad
cmp
sti
sub
jle
sub
pop
mov
stos
out
orb
xor
std
add
lds
and
xchg
push
fiaddl
insl
xorl
imul
aad
int3
into
inc
sti
inc
or
mov
lock
fmull
into
push
add
add
into
sbb
mov
aas
arpl
insl
and
sti
jecxz
int3
stos
mov
pop
cmpb
and
pop
xchg
ss
testl
or
rcrl
mov
lret
movsl
cmp
cwtl
mov
mov
rorl
pop
fwait
jp
call
mov
add
sti
mov
sbb
insl
xor
test
jnp
daa
inc
andb
cltd
add
push
dec
iret
std
and
xchg
in
add
int
addr16
or
push
jne
out
jne
cmp
leave
std
lahf
test
out
out
in
sub
imul
inc
xor
jo
pop
pop
cltd
add
outsl
xchg
xchg
cmp
jo
popa
loop
jo
nop
push
push
or
mov
dec
mov
push
dec
or
sub
sub
je
pop
xchg
sbb
cmp
mov
adc
lret
das
sub
sahf
cltd
push
jns
push
clc
sahf
pand
sahf
push
cltd
je
subl
adc
popf
mov
jmp
jecxz
ja
in
mov
fwait
inc
setbe
ljmp
test
fimuls
fwait
jle
sbb
pop
dec
lret
or
lcall
pop
jl
pop
mov
jp
push
dec
stc
pushf
push
mov
mov
cmpsl
pop
push
adc
incb
imul
pop
mov
das
push
adc
movsl
xor
ss
aas
shlb
lods
fcomip
xor
jae
cmp
pushf
fadd
out
lret
movsb
rclb
cmp
aas
cmc
inc
call
aaa
flds
xor
out
push
mov
js
cmp
jo
xlat
push
jnp
hlt
xor
stos
pop
cmpsb
cmp
cli
cld
loope
inc
stc
dec
fsubrp
fistps
dec
insb
data16
pop
pop
add
jno
pop
idivb
xchg
loopne
mov
fsubrp
lcall
lds
rcrl
jg
sbb
out
lcall
xchg
cmp
movsb
sbb
test
push
adc
lea
or
pop
iret
sub
dec
mov
or
jo
dec
stos
std
mov
cwtl
mov
or
pavgb
test
xlat
rclb
mov
add
repnz
lret
stos
pop
stos
adc
jg
jns
xchg
dec
fdivs
mov
mov
out
ficompl
jno
xor
icebp
fldl
or
xor
stos
test
ret
and
add
xchg
xor
fstl
jle
xchg
loop
cmp
test
push
xchg
test
add
sbb
mov
push
ds
cwtl
xor
adc
lods
push
push
jge
daa
dec
xor
es
or
xchg
add
fstpl
inc
sti
sti
clc
lock
push
inc
in
jmp
push
jle
andl
or
test
sbb
imul
sbb
jp
inc
lcall
leave
aam
mov
dec
inc
push
ss
js
fisttpll
jae
pop
gs
daa
or
dec
mov
inc
or
dec
jne
sub
mov
mov
imul
cld
inc
dec
popf
inc
cmp
call
adc
fdivrp
movsl
in
ja
sbb
out
xchg
movsb
sbb
jge
movsl
inc
roll
jecxz
aad
jmp
pop
cli
loop
mov
push
dec
sub
mov
inc
int
sub
push
aaa
jo
push
call
adc
lock
ds
pop
mov
mov
and
sub
jb
push
and
loope
movsl
inc
loopew
xlat
dec
jae
mov
loopne
lret
aad
mov
shll
jns
fcoms
outsl
sarb
jnp
gs
xchg
xchg
mov
repnz
fimuls
loopne
push
mov
insb
rcrl
inc
inc
or
popf
icebp
jae
ficoms
in
pop
aad
ljmp
scas
rcrl
jp
jnp
roll
jg
dec
addr16
push
dec
pop
xchg
orb
out
nop
dec
pop
sbb
and
cs
or
loope
pushf
adc
es
xchg
mov
ret
add
stos
dec
js
pop
xchg
xor
push
insl
out
mulb
push
sub
and
in
lret
push
lea
hlt
lret
aam
repnz
mov
mov
and
jmp
cmp
into
push
pop
xchg
test
add
inc
cmc
inc
pop
xor
and
pop
daa
into
or
pop
enter
or
lock
adc
sbb
shrl
xor
jb
push
pop
jae
jne
mov
popa
aaa
inc
and
fbstp
addr16
jmp
std
ret
fcompl
jge
mov
pop
mov
ds
js
mov
push
xchg
xor
mov
cmp
cmp
cmc
jo
cli
add
mov
push
sub
add
sbbl
mov
mov
imull
fdivrs
pop
pop
icebp
or
stc
cmpb
jle
jbe
inc
mov
xchg
imul
xlat
jnp
pop
mov
lods
cmp
not
xchg
das
mov
mov
pop
mov
ficoms
xor
int
jo
pop
mov
scas
sub
ret
outsl
cmp
fisubrs
add
mov
push
cmp
push
sub
cmpsb
cmpsl
add
fadd
imul
adc
shrb
pop
inc
jnp
arpl
repz
call
push
pop
sti
sbbb
sbb
jbe
cmp
mov
mov
sub
in
fmul
fs
aas
or
cmc
mov
jne
inc
sar
and
ret
ror
or
ja
and
int
stos
xchg
mov
push
ds
fidivrl
and
inc
test
imul
into
mov
mov
pop
adc
inc
fstps
loope
nop
outsl
xor
xor
pop
mov
cmpsb
fcmovu
jnp
mov
and
mov
push
add
outsb
jnp
mov
out
mov
xchg
out
mov
loopne
mov
out
into
lret
pop
fisttpll
ja
adc
dec
rolb
add
xor
sbb
dec
imul
cld
lods
push
mov
pop
push
xor
out
mov
test
iret
pop
ja
clc
aaa
sub
out
jl
out
mov
ss
jb
mov
gs
pop
push
enter
mov
fstps
adc
jb
lods
sub
inc
es
pop
add
jo
mov
popa
push
sbb
and
lods
sub
sub
enter
sarb
repz
fdivs
xor
int3
mov
out
lcall
push
fstps
in
dec
loope
sub
mov
push
push
lods
pop
dec
cmp
ror
hlt
rcrl
mov
push
add
clc
enter
cmp
sahf
cmc
jo
push
xchg
jno
push
cmp
pop
and
mov
test
test
inc
stc
mov
mov
xchg
dec
push
shl
ds
iret
mov
data16
xor
pop
mov
data16
cmp
inc
mov
adcl
and
mov
es
enter
hlt
fisttpl
pop
or
in
movsl
adc
mov
xchg
pop
push
pushf
orb
push
and
mov
subl
sbb
cwtl
cmpsb
sbb
jbe
out
pusha
add
int
scas
addr16
lea
sub
mov
sbb
leave
xchg
negl
sbb
mov
leave
neg
lcall
inc
or
jno
xor
inc
ficoms
mov
sbb
sub
notb
ljmp
inc
std
mov
out
hlt
adc
inc
adc
xchg
fidivl
enter
fwait
xlat
jcxz
lods
push
lret
sub
fistps
in
lret
fists
pop
jmp
push
outsl
lock
xor
xchg
push
or
shlb
xor
stc
stos
xchg
mov
cmp
and
idivb
movsl
push
ficompl
cwtl
sbb
pop
mov
adc
jno
or
in
movsb
outsl
sbb
sbb
aad
cmc
lock
js
int3
jle
xchg
sbb
ss
fcmovnu
int3
inc
pop
sbb
test
mov
push
rcll
mov
lock
cmc
xchg
addr16
addr16
dec
out
dec
xor
cmpsb
ss
popf
push
mov
lds
rorl
iret
push
into
cmpsb
in
scas
cltd
movsb
mulb
jnp
xchg
into
aaa
fiaddl
pop
inc
add
jmp
xchg
adc
mov
cltd
into
fcmovne
xchg
mov
int3
orb
jl
mov
xchg
adc
push
dec
jp
mov
inc
mov
pop
mov
add
insl
ds
test
mov
iret
dec
add
lock
and
mov
sbbl
jo
ror
inc
enter
push
pop
test
xor
jle
imul
nop
dec
out
cwtl
add
std
lcall
cltd
cmpsb
adc
dec
rcl
insb
pop
mov
jmp
or
push
xchg
dec
xlat
or
movsl
iret
lods
ljmp
aad
jnp
push
push
xchg
or
or
adc
dec
mov
or
xchg
add
push
cmp
ret
clc
mov
push
aas
int
lea
jnp
dec
nop
jge
ljmp
jle
ljmp
mov
sub
daa
mov
jbe
jne
imul
das
cld
scas
adc
out
flds
jnp
dec
sahf
push
scas
add
shl
fnsave
pop
mov
lods
add
and
or
testb
sbb
fs
pop
ss
xchg
sbb
clc
and
xor
inc
clc
jbe
into
jg
ljmp
jns
pop
mov
or
out
in
sub
xor
fwait
mov
jno
xor
daa
inc
jns
ja
in
adc
pop
xor
pop
push
mov
xor
addr16
inc
shll
jbe
movsb
movsl
rorl
xchg
cmp
ret
leave
imul
jns
jecxz
std
ja
je
inc
out
in
dec
jl
fisubs
pushf
mov
out
mov
sub
or
sbb
xor
or
push
jno
and
insb
pusha
inc
enter
add
mov
in
aaa
in
push
sub
pusha
lods
push
mov
mov
pusha
push
mov
cmp
jl
pusha
test
adc
xchg
xchg
outsl
out
push
ficoms
shll
cmp
jl
lods
enter
pop
aaa
mov
add
add
mov
lock
mov
not
or
mov
fwait
jge
cmp
xchg
sbb
inc
or
sbb
scas
stos
push
sbb
repz
shl
leave
es
push
add
sub
hlt
dec
mov
inc
pop
dec
daa
xor
clc
mov
insb
and
jg
xor
out
out
sub
xlat
pop
sbb
in
orl
test
jl
cmp
lret
stos
in
ds
mov
sti
push
cmp
ja
mov
jecxz
jns
jae
inc
imul
nop
hlt
test
push
xor
or
or
ror
sahf
shl
mov
inc
push
std
mov
stc
sub
fdivrs
inc
jns
adc
adcb
fsubr
enter
xor
dec
sbb
vpunpckhbw
dec
dec
cli
xor
aad
gs
jl
and
pop
push
in
push
test
ja
mov
imul
mov
test
out
loope
push
xor
std
xchg
mov
ds
pop
inc
in
and
push
jns
ljmp
int3
pushf
dec
lods
movsb
jae
add
add
push
push
cmc
loopne
call
jp
les
mov
out
fwait
cmp
sbb
push
bound
xchg
adc
dec
cwtl
xor
or
push
imul
sbb
icebp
imul
lcall
fs
xlat
scas
or
xchg
loop
rcr
test
fiaddl
jmp
int
in
addr16
mov
add
cmc
lahf
and
dec
lcall
mov
jns
das
hlt
insl
mov
shll
and
mov
decl
jmp
aam
jl
ret
rorl
mov
popf
mov
inc
int
sbb
add
push
and
xor
insb
int
sub
sbb
icebp
sbb
shrb
cmpsb
bound
xor
ret
sahf
push
and
cmc
cmp
mov
jg
testb
sub
cmc
adc
sti
mov
je
inc
lods
cmova
mov
outsb
mov
div
push
cmpsl
or
fs
xorb
cmp
add
jl
mov
xchg
rcrl
adcl
into
mov
mov
lret
jecxz
jns
dec
or
mov
stos
dec
mov
jnp
out
jecxz
nop
push
adc
aam
push
or
nop
and
outsl
iret
mov
popf
and
sarl
xchg
std
xchg
leave
and
loope
ficomps
lea
sbb
xor
scas
sub
dec
lcall
cmc
pop
loop
mov
and
fisubrl
xchg
pop
push
inc
in
loopne
cmp
jg
pop
xor
mov
xchg
jl
lods
roll
sbb
loopne
into
ds
cwtl
sahf
mull
dec
push
adc
std
clc
jl
jnp
mov
sbb
in
scas
cltd
mov
ror
lods
ja
push
add
xchg
sub
sub
into
sub
sbb
ss
stc
xchg
pushf
cmpsl
popl
inc
ljmp
jg
mov
xchg
aas
add
lods
mov
add
jb
in
das
mov
mov
cmpsl
pop
mov
lds
test
fdivs
mov
je
push
daa
clc
pop
adc
ret
push
jno
xor
inc
movsb
xchg
inc
add
stos
ret
dec
gs
pop
cmc
sbb
into
adc
gs
pop
mov
roll
int
jne
insl
and
adc
enter
int3
xchg
ljmp
or
popf
xor
sub
dec
inc
jmp
sub
les
lcall
jle
xchg
outsl
loop
rcrl
lods
repz
sti
push
imull
push
pop
pushf
push
cmp
leave
mov
and
adc
mov
dec
inc
xor
jne
xor
ud2
sub
out
addr16
sub
xor
or
inc
ja
jb
push
lret
into
mov
jle
scas
push
mov
rolb
repz
rcr
xchg
movsl
gs
lea
push
cmp
inc
add
jl
jae
xchg
xor
dec
out
and
xlat
pop
insl
dec
in
jge
stos
imul
clc
movsb
andl
pop
jl
gs
and
scas
xchg
inc
in
aam
xor
sti
xor
stos
int
mov
dec
aas
inc
ds
pop
mov
push
ret
cld
push
jo
outsb
popa
sar
sub
jno
push
lcall
test
dec
imull
add
pusha
dec
pop
jnp
in
dec
icebp
xlat
cmp
cli
in
div
push
sbb
cmp
mov
cltd
ret
xor
add
mov
cmpsb
loope,pt
out
loop
sbb
pop
pop
push
xchg
aam
dec
xor
test
xchg
mov
in
cmovl
push
sub
add
push
xor
pushf
mov
dec
mov
shl
shl
push
test
cmp
outsl
imul
xor
icebp
fdivrl
out
mov
ret
mov
push
daa
ja
push
pop
gs
pop
xchg
out
cmp
cmp
or
dec
sub
ficoml
mov
jle
mov
faddp
xchg
mov
xor
adcb
add
divb
jecxz
scas
add
mov
xor
bound
cltd
addr16
inc
out
out
mov
mov
fidivrs
out
dec
pop
push
inc
je
sbb
or
sbb
push
movsb
push
jecxz
adc
cmc
cmp
mov
jp
push
testb
fwait
popa
push
es
or
ret
fidivrs
aaa
cmp
ret
adc
clc
imul
or
rorb
fsubr
push
and
clc
cmpsl
addb
jne
mov
adc
add
add
cmpb
dec
adc
pop
or
inc
mov
or
nop
incl
test
in
jmp
je
fsubs
int
nop
outsl
mov
cwtl
sbb
mov
sahf
mov
jno
jne
push
lret
push
and
ss
and
outsb
ror
push
mov
imul
pop
sbb
mov
mov
out
add
hlt
icebp
mov
xor
fldt
aaa
movsb
xchg
je
cwtl
pusha
pop
push
fistl
push
test
mov
pop
xor
mov
ds
push
mov
orl
inc
add
sbb
xor
vminpd
inc
out
jl
add
pop
je
sbb
cmp
les
stos
js,pn
dec
ss
push
pop
movsb
sub
cld
jae
xorb
mov
mov
cmpsb
cmpl
mov
scas
push
movsb
lock
outsl
test
sbb
adc
sbb
jbe
mov
jns
jge
addr16
xor
fwait
jne
mov
sti
ljmp
data16
xchg
loopne
push
push
xor
out
stc
sub
add
and
mov
cmp
jp
insb
mov
sbb
test
gs
leave
out
push
lcall
xchg
mov
push
inc
inc
das
inc
sbbb
in
and
je
loope
ja
or
pop
mov
sub
rcll
fbstp
adc
aas
lret
or
imul
mov
cmp
lcall
mov
clc
add
sbb
cmp
lea
add
mov
and
loop
xchg
add
enter
lret
sbb
inc
sub
mov
test
scas
mov
stos
jle
stos
enter
sub
fcoms
adc
mov
mov
pop
ja
push
scas
mov
cmp
pop
xor
xor
pop
push
xchg
loopne
sbb
jne
loope
jbe
jl
xor
jns
aas
in
sub
add
xchg
and
cmp
stos
dec
or
lret
xchg
hlt
loope
std
or
daa
outsb
fsubr
mov
rolb
xor
mov
call
out
push
xor
xchg
aaa
pusha
mov
xlat
je
mov
ss
or
icebp
movsl
enter
sub
imul
loope
popf
bound
daa
xlat
inc
and
sub
mov
mov
inc
pop
fstps
roll
adc
imul
inc
xor
sbb
cmp
out
xor
xorb
pop
or
in
add
ffreep
fcoms
mov
movl
in
pushf
mov
or
iret
idivb
test
in
inc
lcall
mov
mov
sub
add
in
fstpl
mov
flds
sub
fimull
cmp
sub
test
aam
aas
in
push
xor
imul
scas
jno
push
push
test
scas
adc
and
lgs
adc
jbe
push
pop
filds
dec
int
jl
out
adc
stos
sub
filds
jne
inc
lds
js
xchg
inc
push
jg
pop
and
xor
addr16
dec
jmp
arpl
addl
int3
clc
push
xchg
cs
adc
dec
roll
mov
arpl
stos
mov
cs
pop
subb
inc
sbb
xlat
jl
or
dec
mov
jb
dec
inc
cli
add
aam
pop
sub
xchg
jns
sub
push
bound
call
aad
jl
cmp
pop
pop
lahf
in
sbbb
jg
das
lcall
dec
push
and
cmpsb
dec
les
push
pop
push
inc
frstor
push
test
movsl
sbb
lcall
inc
add
cli
add
sahf
jns
out
push
jle
add
int
out
movsl
push
jbe
out
out
dec
pop
pushf
cmpsb
jmp
nop
shll
jae
xor
pop
mov
mov
insl
xchg
pusha
es
adc
sbb
bound
ja
push
jae
jbe
inc
mov
jns
out
int3
mov
lahf
sbb
data16
xor
sbb
xor
sbb
cmp
imul
jne
imul
nop
ror
lods
dec
mov
jmp
sahf
repnz
cmp
push
daa
int
lock
cmp
or
mov
lods
jbe
cmpsb
or
mov
les
std
aam
jmp
fstpl
sbb
idivl
jmp
testb
shrl
mov
movsb
pop
mov
pop
rolb
out
sub
dec
mov
scas
add
sahf
mov
fld
mov
dec
roll
mov
mull
or
sahf
push
xor
push
inc
jo
in
pop
sub
add
mov
xor
adc
pop
sbb
adc
cmp
fildll
pop
mov
int
in
icebp
xorb
ljmpw
mov
add
pop
and
mov
ret
jle
roll
enter
xor
faddl
add
data16
stc
into
mov
jns
inc
ret
popa
aam
dec
inc
mov
jb
sbb
cs
lods
cmpsb
in
mov
lock
in
dec
push
lods
es
rcll
sub
xchg
clc
aam
cmc
out
lahf
stos
pop
test
cwtl
daa
cwtl
and
cs
push
inc
sbb
xor
jg
add
sbb
cmp
xchg
das
push
pop
mov
xor
stos
ds
push
xchg
inc
repnz
jg
mov
inc
mov
jo
mov
add
and
cmpsb
adc
mov
sub
push
wrmsr
push
xchg
inc
int
sti
xor
pop
mov
shrb
sahf
mov
int3
out
pop
and
std
les
pop
ds
cmp
stos
lret
leave
cli
outsb
sbb
mov
and
repnz
mov
repz
std
pop
dec
jbe
in
testb
jbe
sub
cmp
imul
mov
out
js
daa
je
mov
sbb
xor
ds
inc
orl
mov
inc
clc
push
gs
and
test
fisubl
sbb
ds
pop
insl
imul
cmp
mov
sti
test
pop
call
sub
imul
mov
popa
sbb
xor
add
sub
shll
cld
clc
push
es
popf
and
int3
outsl
and
mov
repz
add
shlb
movsb
mov
add
cmp
repz
sub
data16
js
or
fistpl
push
pop
dec
xchg
ds
jmp
mov
xor
adc
mov
mov
xor
mov
int
sub
xchg
int
push
int3
dec
push
xchg
cmp
hlt
mov
js
fsubs
sub
les
inc
addr16
cmp
shl
pop
shlb
subl
push
fnstsw
orl
pop
inc
mov
push
add
fs
cmp
addb
addb
insl
pop
scas
pop
loopne
fwait
mov
fwait
sub
mov
xor
jae
out
call
sbb
loopne
adc
repnz
jae
jnp
mov
cmpb
pusha
cmp
and
mov
imul
roll
int3
aad
jbe
dec
lret
jmp
mov
stc
pop
and
cld
jp
fwait
xor
ljmp
add
lods
scas
sub
jno
pusha
dec
decb
add
push
push
xchg
sub
push
xor
jo
ret
lea
mov
nop
dec
in
rol
in
iret
in
sbb
jno
insl
sbb
fwait
inc
xorl
pusha
imul
xchg
add
iret
add
jae
jns
dec
sbb
sbb
ret
pop
cmpsl
add
xchg
jno
mov
addr16
inc
aam
add
push
pop
enter
or
jnp
repnz
sbb
or
mov
adc
sbb
enter
inc
push
repz
xchg
add
fwait
ljmp
pushf
nop
push
xor
lea
imul
cs
dec
shl
xor
lcall
pop
xchg
lcall
sbb
mov
ss
das
mov
inc
imul
cmp
sar
stos
call
adc
inc
mov
xchg
xor
cmp
jg
scas
push
sbbb
iret
add
add
mov
jae
lea
dec
jmp
imul
scas
pop
adc
sahf
jle
inc
shrl
rolb
jp
inc
or
cmp
push
daa
cmc
jb
inc
push
das
andl
mov
repnz
xchg
xor
jmp
bnd
leave
jnp
popf
mov
jbe
pop
adc
pop
inc
pop
fsubrs
lret
fnstcw
lret
ds
bound
fmul
test
pop
movsl
ljmp
lock
jecxz
int
cmpb
insb
pop
pop
pop
in
inc
mov
xor
insl
js
dec
mov
imul
roll
imul
ret
imul
out
push
rcrb
addr16
add
xchg
xor
push
push
jbe
clc
lods
ljmp
or
out
jb
stc
stc
mov
xchg
aaa
loop
mov
les
pop
mov
lods
xor
pop
mov
jb
and
add
icebp
in
xor
inc
fs
lcall
aaa
int
daa
sub
inc
mov
out
outsb
stos
lock
scas
cmc
fwait
incl
test
ljmp
lcall
mov
xlat
adc
xor
ja
and
sbb
nopl
pop
icebp
xchg
mov
or
cltd
sub
int
sub
movsb
or
add
mov
imul
or
cmpsb
jnp
cmp
mov
pop
rolb
cltd
xor
bound
dec
cmp
inc
out
repz
xlat
xchg
jg
inc
mov
imul
in
popa
xchg
cmp
loop
xchg
and
rcrb
fldl
insl
adc
ja
pop
xor
imul
les
and
xor
aaa
mov
test
rol
fdiv
es
stc
pop
or
scas
cwtl
adc
xor
pop
fmul
into
call
mov
das
xor
pop
shr
inc
cmp
fs
add
loop
adc
lods
mov
push
and
test
jnp
sbb
pop
popa
inc
ja
pop
sti
add
pop
or
push
mov
lret
stos
and
enter
mov
adc
rcll
pushf
inc
orb
xor
adc
fcmovnu
ljmp
test
ljmp
xor
mov
fsubs
and
mov
xchg
and
sub
call
mov
xchg
adc
mov
mov
movb
in
push
loopew
incb
cmpsb
sub
pop
fiadds
add
inc
imul
cmp
mov
cmp
rorl
cmp
mov
mov
mov
push
mov
sub
out
adc
push
fstpl
aaa
xor
pop
adc
cmp
lods
sbb
vcvtsi2sd
mov
addl
cmp
popa
cmp
pop
loop
inc
sbb
push
push
arpl
testb
mov
test
xor
call
rorb
mov
adc
insl
add
pop
fistps
mov
jnp
xor
fdivr
jno
mov
mov
mov
mov
jecxz
xlat
sbb
outsl
outsl
cwtl
mov
clc
inc
sub
pop
dec
loopne
mov
mov
fists
inc
mov
aas
push
or
push
scas
sub
arpl
test
mov
lea
adc
mov
aad
repnz
jns
pop
or
adc
mov
add
movsl
test
imul
inc
inc
adc
in
cmp
rcll
insl
test
enter
ljmp
dec
or
aas
cli
imul
xchg
in
xchg
jno
out
aaa
mov
mov
and
mov
cltd
inc
mov
call
lret
test
sbb
cmpsl
mov
inc
je
testb
arpl
int3
cli
push
adc
cs
jnp
adc
inc
pushf
add
int3
xchg
aam
idivb
lea
pusha
inc
cmp
test
ja
pop
or
add
jp
pushf
cmp
sub
jne
jnp
jg
xchg
jnp
cmp
f2xm1
aam
push
js
hlt
je
rcl
shlb
cmp
add
ret
inc
push
rcrb
arpl
lods
xlat
dec
out
add
xor
cmp
pop
in
pop
adc
xchg
dec
sub
imul
lock
add
xor
pop
mov
inc
dec
push
mov
push
mov
mov
cwtl
mov
imul
push
mov
and
lret
stc
jle
addr16
pop
sbb
pop
nop
ret
cmp
mov
test
mov
in
push
mov
and
bnd
dec
jbe
je
repz
cmp
lea
push
insb
and
jl
addr16
arpl
sbbb
adc
and
pop
jp
out
je
xlat
fcoml
jb
cmp
fwait
shl
and
fdivrs
jns
or
pop
leave
lds
xlat
imul
and
shrl
mov
mov
loopne
and
shl
loope
adc
jo
cld
idiv
sbb
mov
sub
jge
fmuls
stos
leave
inc
je
inc
popa
add
lret
cmp
lock
movb
pop
in
pushf
mov
in
xor
push
dec
lds
and
ss
adc
icebp
call
insl
cmp
out
mov
ja
sbb
mov
cwtl
aaa
imul
fisttpll
xchg
push
mov
sar
int
and
leave
xor
aam
xor
dec
aas
pop
int
dec
fisubl
dec
fwait
dec
sti
loope
popl
inc
mov
dec
aas
in
int3
inc
daa
cmp
filds
shrl
lret
push
jecxz
or
xchg
adc
jle
dec
or
loope
and
adc
pushf
stos
or
sub
jg
jno
or
pop
mov
jno
cmp
popf
inc
and
push
leave
and
sub
das
mov
fmull
mov
popa
in
pop
pop
add
daa
add
test
jae
stos
dec
pop
out
xor
sbb
and
into
loope
movsl
or
add
adc
pop
xchg
out
testb
and
pop
out
fldt
pop
clc
mov
inc
jg
cmpsl
cmp
fdivrl
pop
and
or
loope
lahf
adc
sarl
jg
pop
pop
push
push
cmp
mov
jmp
and
push
push
pop
pop
sub
jmp
std
push
adc
xor
es
in
dec
inc
xlat
xchg
out
dec
sbb
mov
push
and
adc
push
cmp
shlb
jecxz
add
pop
adc
mov
aam
dec
and
inc
test
jmp
jge
ja
or
stos
addb
push
jle
jno
adc
fidivs
or
sbb
mov
aam
je
jl
pushf
mov
mov
mov
xchg
movsb
arpl
jl
add
push
sub
push
inc
les
dec
in
pusha
pop
movsl
jae
in
fwait
sub
fsub
stos
adc
push
inc
sub
nop
push
or
sbb
aad
std
cmpsl
das
aad
insl
and
xor
dec
cli
cs
jne
and
aas
int3
incl
add
lret
arpl
mov
ret
scas
insl
pushf
lds
xlat
and
repnz
sahf
faddl
xorb
push
jae
filds
or
adc
and
inc
cmp
js
push
loop
xchg
inc
and
jno
gs
pop
jns
aad
lods
jle
pop
fwait
repz
ret
xchg
sarb
movsb
ret
clc
xor
mov
clc
movsl
sub
lea
rcrb
pop
das
out
push
shl
lds
cwtl
push
and
sub
push
lods
jns
fisttps
mov
in
sbb
cmp
test
and
fiaddl
push
sbb
mov
daa
dec
add
xor
ret
out
enter
push
or
cmp
mov
push
inc
test
dec
in
es
mov
aad
and
inc
dec
je
lar
mov
insl
jns
in
ja
mov
mov
mov
sbb
mov
jae
push
xor
push
fs
es
push
leave
xor
mov
shrb
popf
repz
jbe
clc
xor
les
pop
lods
leave
js
push
hlt
popf
sub
add
or
push
push
mov
and
fcomps
outsl
fucomi
popf
and
mov
inc
popa
xchg
inc
aam
popa
inc
dec
stos
in
jmp
xchg
dec
insl
xchg
adcl
lock
or
add
loopne
cwtl
inc
push
mov
int3
jecxz
out
aad
and
addl
xor
lcall
lds
mov
inc
das
inc
or
rol
xorb
fwait
notb
mov
fs
and
cmpsb
add
lahf
xchg
inc
loop
mov
inc
dec
insl
sub
notl
add
fdivrp
dec
inc
in
and
out
jbe
out
repz
repz
enter
mov
jae
std
xor
filds
mov
loopne
xor
push
je
inc
jno
mov
push
iret
ljmp
dec
adc
scas
mov
xor
imul
xchg
pop
in
jmp
mov
loop
cli
lret
ds
and
hlt
pop
jp
fistl
xchg
inc
xor
adc
pmaxub
push
inc
pop
add
arpl
int3
call
sbb
inc
push
adc
xlat
jmp
frstor
inc
icebp
inc
aam
sbb
les
int
jb
cmp
sub
push
ja
mov
or
out
sbb
inc
or
repz
sub
add
mov
inc
lea
pop
xor
mov
push
in
rorl
xor
std
pop
inc
mov
xchg
mov
sub
xor
repnz
push
imul
mov
jo
sti
cmc
adc
sub
sub
fcmovnbe
and
fidivrs
inc
mov
xor
inc
adc
outsl
insb
dec
and
inc
and
jmp
adc
push
scas
jo
jge
lods
cmc
fstpt
cs
and
add
push
or
lret
ret
cwtl
in
fsubrl
scas
in
cli
out
dec
xchg
adc
adc
push
js
or
sbb
mov
outsl
in
jmp
cmp
call
or
jne
imul
fwait
mov
lods
and
insb
xchg
pusha
stc
pop
gs
bound
lcall
sub
imul
add
fisttpl
ss
fistps
add
rcrl
push
lock
sub
cmp
popa
sbb
push
xchg
adc
inc
repnz
pop
jne
mov
test
fs
das
and
andb
adc
mov
mov
pop
mov
pusha
into
xchg
pop
and
inc
stos
mov
rcrb
jle
xchg
cmp
mov
enter
int3
les
adc
mov
call
or
or
test
leave
dec
xor
mov
call
dec
push
jbe
lock
jmp
push
jbe
ret
shrl
push
inc
outsb
iret
jno
cmpsb
pop
dec
push
stc
mov
xchg
inc
and
dec
xchg
imul
test
lret
scas
popa
and
fwait
mov
adc
aad
inc
outsb
sub
or
in
pop
in
adc
add
or
pop
stos
lahf
jno
loop
pop
lods
dec
jb
pop
pop
jmp
in
fstl
shr
add
stc
ds
lock
cwtl
ficoml
decl
rcrl
test
sub
cmp
mov
ja
fidivrl
pop
inc
pop
push
jns
cmc
pop
inc
pop
daa
lahf
inc
subb
out
mov
sahf
inc
das
and
xlat
movsb
mov
xchg
fdivs
ja
jmp
lahf
sub
icebp
rcll
loope
pusha
jae
inc
sub
das
cmp
adc
enter
cmp
test
fidivl
jae
popl
aam
mov
mov
imul
dec
ficomps
mov
iret
das
repz
xorl
sbb
mov
mov
sbb
stc
lea
or
mov
aas
sbb
inc
test
rcrl
movsl
dec
nop
or
jge
jp
lret
push
iret
xlat
mov
lock
scas
pop
push
imul
mov
fistpll
or
cmp
imul
sub
adc
hlt
jmp
pop
xchg
adc
pop
sub
cld
loope
dec
lods
mov
cmp
in
pop
pop
rolb
dec
jg
push
in
sbb
mov
movsl
mov
xchg
push
mov
scas
push
lods
lods
ljmp
fstps
jmp
ja
sbb
movsb
stos
aam
iret
xchg
outsl
lea
jae
sti
imul
popa
or
insb
pop
push
lcall
inc
sahf
int3
push
pop
stos
out
lock
add
outsb
scas
nop
arpl
outsl
leave
sti
lret
sub
xor
pop
sbb
mov
les
xor
pop
out
xchg
xor
mov
add
popa
dec
andl
push
sahf
lock
iret
adc
mov
cli
mov
fcoms
imul
mov
mov
test
xor
fidivrs
cwtl
pop
jl
fadds
ret
fdivrs
lods
inc
jae
mov
out
jae
pop
mov
jp
jnp
pop
xor
push
adc
adc
xchg
lds
js
jns
ret
sbb
mov
jb
call
aaa
push
or
dec
cltd
push
xchg
xchg
and
fldenv
fs
dec
frstor
mov
inc
cmp
cs
ret
sarl
arpl
movsl
lds
pop
dec
add
cmpsb
loop
inc
lock
push
icebp
inc
jb
pop
add
xor
ja
mov
cmpsl
xor
addb
sarl
cltd
jb
gs
dec
xchg
les
pushf
pop
pop
add
addr16
in
data16
mov
mov
adc
mov
pop
lcall
imul
pop
push
jge
and
or
push
lcall
movsb
mov
mov
push
push
xchg
in
mov
addr16
sbb
fwait
mov
push
js
xchg
pop
adc
jecxz
jle
pop
and
inc
dec
fsubs
cmc
push
xchg
pcmpeqd
lret
es
cld
ds
nop
cwtl
jo
mov
xor
roll
mov
aaa
jns
fs
imul
and
inc
xchg
stc
and
call
repnz
dec
jg
outsl
push
lahf
dec
cmp
mov
imul
call
fcmovu
and
pop
leave
inc
sti
and
add
test
fwait
xchg
mov
lods
pop
mov
sub
xchg
sub
ret
mov
lods
dec
je
nop
fstl
cmp
scas
cmp
imul
dec
inc
das
pop
add
adc
sysret
cmp
xchg
stc
lret
scas
jl
out
xchg
popa
pushf
negl
and
dec
cmp
int
mov
mov
arpl
lret
out
loopne
shlb
dec
mov
inc
dec
mov
stos
iret
pop
sub
mov
jmp
xor
inc
sbb
jge
dec
pop
repnz
push
lret
pop
push
xchg
hlt
sub
inc
xchg
mov
call
lds
fisubl
add
sub
aam
pop
popa
and
fistps
sub
loopne
or
sub
bound
addr16
fimull
mov
arpl
insb
sub
icebp
mov
mov
aad
mov
clc
stc
pop
scas
xor
hlt
push
add
xchg
hlt
dec
cwtl
loope
push
inc
jo
jbe
ror
push
adc
mov
out
xor
clc
pushf
jbe
cli
xor
mov
jnp
cmpsl
test
pxor
mov
lods
pop
int
mov
cmpsb
out
add
rcrl
cmp
dec
jle
ret
and
test
mov
inc
jo
pop
cltd
add
stos
ds
dec
ss
in
repnz
insl
adcl
ja
repz
repnz
push
xchg
scas
push
andl
jne
data16
xchg
not
mov
js
int
push
and
adc
push
and
daa
cmpsb
cmp
cmp
pop
cmp
and
ror
loope
hlt
cmp
lret
js
fprem1
das
cmp
jl
mov
sahf
mov
outsb
leave
pop
insl
test
loopne
fwait
pop
gs
not
or
cmpsl
cmp
popf
xor
test
push
cld
xchg
movsb
fcomps
sbb
into
mov
mov
in
sub
jno
mov
scas
dec
add
dec
adc
insb
std
and
mov
es
std
push
repz
add
jp
ret
mov
sub
outsl
es
mov
mov
movsb
lret
mov
gs
jno
push
or
insl
iret
xchg
pop
cwtl
rcl
repz
pop
outsb
aam
pop
cmpsl
jge
fcomps
imul
enter
xchg
insl
xchg
repnz
mov
shl
popf
bnd
sub
add
fsubs
pop
aas
inc
out
push
loop
pop
inc
sbb
lahf
mov
movsb
arpl
mov
lret
repz
test
xchg
test
lret
lahf
popf
sar
aad
jg
in
or
sbbb
ss
rolb
lret
add
dec
movsl
cwtl
mov
loope
sbbl
push
pop
mov
dec
or
loope
sub
inc
sub
xchg
xchg
inc
push
jae
jae
dec
roll
cmpsb
xor
push
jl
pop
les
or
push
outsb
and
divl
mov
repnz
inc
lea
dec
popl
xchg
pop
test
jne
adc
sti
mov
pushl
stos
xor
subl
mov
add
popa
ficoms
xchg
xchg
divl
xor
add
xchg
stos
mov
sbb
lea
imul
sub
push
dec
testl
jge
xchg
dec
and
loop
and
xor
dec
pop
jno
or
and
int3
and
enter
sub
loope
and
xchg
jo
imul
xlat
ss
fstp
or
jp
sahf
cmp
ret
add
pop
ficoms
jo
xchg
add
mov
subb
jnp
sbb
outsl
and
arpl
jnp
sbb
je
les
imul
mov
xor
in
movsb
push
enter
mov
cld
jbe
adcl
leave
cltd
out
push
scas
add
sti
bound
sbb
int3
fmul
insb
fidivrl
fildl
jl
add
push
adc
mov
rolb
sbb
xor
sti
mov
mov
pop
fistpll
pop
sti
ljmp
or
xor
and
inc
fcmovnu
divb
xor
fdivl
mov
adc
daa
shl
test
idivl
std
stos
test
inc
inc
pushl
mov
clc
add
push
jnp
lret
inc
in
inc
sbb
mov
push
insb
out
pop
ja
lods
fidivl
push
mov
data16
fwait
adc
sub
and
sti
ljmp
sahf
push
cmp
sub
test
rorl
inc
aaa
sti
aad
mov
dec
sbb
insl
in
ss
into
gs
jle
xor
add
push
nop
cmpsl
push
adc
pop
pop
setle
jnp
mov
imul
ljmp
repnz
mov
dec
add
fsubr
aam
aad
xchg
stc
int3
stos
xor
fwait
aaa
jl
rcpps
mov
push
push
mov
lock
or
pop
scas
xchg
lock
cmp
cli
and
mov
shl
push
addr16
dec
add
lret
mov
mov
add
test
ljmp
dec
rcl
xchg
int
pop
test
in
in
cs
loope
push
pop
cld
inc
cli
or
ja
cmpsl
push
jmp
and
sbb
push
arpl
sbb
jge
daa
jo
imul
rorl
mov
pop
adc
js
sub
fsubrl
loop
xchg
fistpll
test
push
inc
pop
mov
test
testb
pop
repnz
and
or
in
cmc
aam
mov
repnz
pop
jmp
dec
push
adc
fstcw
fmul
hlt
cmpsb
notl
jmp
insl
jb
je
jae
xor
cmovs
stos
test
inc
jg
cmp
aas
sub
cmpl
sbb
cmp
pop
or
aas
int3
dec
fisubrl
pop
xchg
xor
outsl
or
xchg
mov
jmp
pusha
stos
icebp
shrl
repz
mov
adc
mov
rcrb
xchg
mov
fdivl
inc
mull
test
loop
cmp
lahf
sbb
nop
cwtl
xor
pop
mov
jecxz
lock
jge
sbb
test
repnz
les
mov
mov
enter
ss
jmp
or
jp
into
mov
cmp
adc
in
adc
mov
cwtl
negb
xchg
cmc
cmp
lock
das
mov
push
int
sti
sbb
xchg
std
clc
dec
and
fsubrs
ljmp
sahf
rcrb
jb
adc
or
jb
dec
lret
test
push
push
cmpsl
mov
sar
mov
sub
xor
jge
sti
mov
push
xor
inc
aad
rcrl
pop
in
or
cmp
mov
sbb
loope
or
jl
jle
shlb
lea
or
ljmp
push
shll
add
pop
stos
sub
loope
jns
pop
aas
repz
cmp
arpl
dec
mov
xchg
inc
loope
fiadds
or
imul
adc
add
shll
xchg
fstl
pop
hlt
leave
mov
repnz
loop
pop
pop
inc
pushf
lret
mov
inc
pop
jno
sbb
sarb
cmp
jp
fnsave
in
int3
add
xchg
es
adc
mov
xchg
rcr
icebp
dec
jge
cmp
outsl
mov
pusha
add
pop
dec
lods
int
jecxz
das
ja
adc
add
in
push
push
jnp
xchg
push
and
and
fidivs
fwait
and
aam
jb
jns
push
pop
pop
dec
sub
rol
jne
int
jecxz
inc
adc
hlt
or
loope
push
hlt
xor
outsl
mov
xchg
insl
into
add
jp
jb
rol
ret
rcll
jg
das
nop
add
es
lahf
insl
mov
insb
stc
mov
jne
or
out
lods
jnp
cmpl
ror
fsubs
cmc
pop
and
les
in
mov
ficompl
add
lods
leave
jmp
mov
or
jl
cmp
mov
adc
aam
int
jmp
jb
in
gs
movsl
jmp
or
fstps
mov
jno
mov
jmp
jbe
inc
or
cs
pop
xchg
add
xchg
dec
mov
in
test
xor
jmp
imul
or
lahf
cmp
pushf
cltd
adc
push
loopne
scas
repnz
push
cmp
popf
out
xchg
lahf
jmp
add
jnp
in
andl
leave
test
cmpb
inc
and
movsl
mov
sti
lds
mov
rcrl
cs
les
dec
cmp
mul
daa
dec
lods
out
jl
push
push
mov
mov
adc
add
jb
pop
mov
testb
aad
aam
push
push
pushf
rorb
lret
jl,pt
mov
inc
pop
test
je
pop
lods
inc
ja
out
les
outsl
in
xchg
std
cmp
data16
scas
loope
push
or
push
jecxz
mov
dec
dec
cmpb
daa
push
add
std
jp
es
aad
lods
dec
add
cmp
and
cmp
mov
pusha
fldcw
out
js
xor
inc
and
js
mov
xor
mov
xchg
pop
in
xchg
xor
adc
push
insb
aam
inc
cmpsb
aam
dec
xchg
push
in
stc
leave
testb
jp
inc
mov
iret
inc
in
out
mov
ss
call
cmp
cmp
and
mov
sti
jne
mov
jbe
ja
cli
sbb
jne
sbb
jae
mov
adc
mov
pop
stos
xor
stc
jge
add
sti
ljmp
push
adc
xchg
stos
mov
xchg
arpl
inc
hlt
cmp
and
movsb
xchg
es
pop
in
inc
mov
sbb
movl
fidivl
push
cltd
sub
sub
hlt
xchg
mov
in
dec
insl
testl
push
gs
adc
mov
jle
repnz
and
jo
push
cld
sub
mov
jmp
lea
cmp
test
and
test
decl
fs
loop
and
jge
nop
pop
pusha
push
test
pop
cmp
fmuls
pushf
loopne
fildll
ss
aam
adc
pop
and
pop
pop
jne
xchg
enter
and
pushf
mov
jno
scas
inc
mov
aad
jl
push
loope
stc
stc
cmp
adc
mov
stc
xchg
call
lret
ss
imul
les
adc
and
adc
lods
pop
or
cmp
mov
add
jge
sbb
imul
xchg
mov
and
cmp
sahf
add
ret
in
sbb
lods
or
std
push
jle
jae
ljmp
int3
push
imul
rcl
or
movsb
push
dec
icebp
fnsave
sti
or
cmp
jecxz
sbb
shll
lock
fisttpl
push
nop
fwait
jl
cmpsb
jle
and
test
dec
iret
mov
into
mov
es
test
jl
loope
cwtl
and
xor
icebp
pop
fadds
addr16
lret
aam
xor
or
xor
or
repnz
inc
lock
sub
adc
out
pop
dec
adcl
ljmp
movsb
push
dec
stos
mov
jb
rcrl
xchg
mov
cmp
int
mov
adc
ret
int
jne
add
mov
pop
out
jmp
cs
cli
sub
xchg
jns
outsl
pop
insl
pusha
jbe
push
sbb
das
cmp
push
imul
add
cld
idivl
jne
repz
pop
mov
call
push
or
sub
adc
pop
xchg
jecxz
xchg
loopne
stos
mov
dec
jo
mov
or
call
repz
shll
orb
cmp
popf
mov
fwait
mov
jg
inc
fidivrs
jae
pop
je
in
int
cld
out
gs
cmp
push
sub
dec
mov
cmc
push
sahf
fcoms
popa
test
xor
add
scas
mov
rorl
pop
loopne
cli
jb
xchg
into
test
adc
jno
mov
shll
mov
xor
rorl
mov
push
cmp
sti
fidivrs
cld
or
movsb
sbb
nop
js
and
mov
mov
or
or
mov
sub
cwtl
lea
daa
xchg
sub
cmpl
xor
pop
xchg
fmul
stos
hlt
pop
fidivrs
sbb
cmp
daa
or
in
and
mov
hlt
jne
out
imul
cmp
mov
cmpsb
imul
or
mov
testl
jecxz
fisubs
fdivrl
sbb
add
jo
xchg
repz
push
mov
ret
je
push
rclb
lea
rorl
or
mov
mov
push
movsl
xor
adc
ret
adc
push
out
add
dec
push
lret
in
ficoms
push
cmp
popa
jo
emms
nop
mov
pusha
scas
mov
xchg
sub
movsb
add
test
mov
in
cmp
out
adc
je
sbbb
mov
inc
ficoms
jge
xchg
push
push
sbb
jmp
xor
arpl
mov
enter
mov
or
lock
adc
jle
lahf
iret
ret
pusha
sbb
bound
arpl
inc
cmpsb
xorl
push
inc
sbb
cmp
test
orb
inc
push
or
insb
in
arpl
jno
dec
jns
dec
push
push
cmp
dec
adc
insb
into
insl
lods
scas
test
xlat
arpl
mov
pop
enter
sbb
cmp
shr
jge
mov
nop
lcall
xor
mov
sbb
lea
xchg
mov
gs
clc
adc
mov
pusha
test
loop
and
mov
adc
xor
ret
aaa
aas
push
pop
xlat
mov
sbb
mov
inc
call
or
or
adc
int
enter
jno
pushf
fimull
add
scas
les
ret
sub
call
jae
sub
jne
fs
stos
adc
push
cmp
push
xchg
cltd
inc
pop
pop
adc
enter
sub
in
lea
jmp
sbb
cmp
jg
stos
sub
rorb
push
push
scas
stc
adc
mov
cwtl
dec
push
frstor
call
cmp
cltd
rclb
push
cmpsl
cld
mov
or
cwtl
mov
out
sub
jg
add
shll
xor
sti
xor
sub
daa
push
sti
in
inc
sbb
clc
scas
in
xor
inc
lods
aas
popf
mov
push
clc
rorb
rcr
jle
mov
mov
call
or
sbb
cmp
incb
imul
rcrb
pop
or
dec
std
xchg
jnp
lock
mov
dec
stos
cmp
jb
dec
push
shll
cmp
ljmp
fstpl
dec
sub
cmp
clc
aad
sbb
mov
pop
stos
out
mov
aad
enter
std
test
mov
push
lods
loope
pop
adc
fnstenv
call
loope
pusha
sbb
not
hlt
mov
xchg
into
push
mov
fdivs
fcom
and
mov
mov
imul
add
mov
arpl
adc
cmp
cmp
mov
xchg
lock
cmp
mov
ljmp
or
fs
cmc
mov
push
mov
mov
lcall
xor
rcll
aam
pop
jmp
fstp
pushf
pop
mov
and
mov
pop
push
sbb
movsb
cli
jae
jns
inc
xchg
adc
add
mov
xor
shll
or
scas
das
mov
stos
jne
je
inc
push
xorb
mov
faddl
and
mov
jecxz
mov
push
inc
mov
cmpb
aam
and
int
cmp
mov
sub
mov
fwait
inc
fidivrl
xchg
cmp
out
clc
dec
fs
jecxz
out
push
mov
inc
xor
ljmp
addl
aas
out
cmp
sbb
xchg
mov
xchg
mov
sub
sub
lcall
push
push
fistps
inc
dec
fdivl
test
dec
popf
lret
jge
bound
mov
lea
or
mov
mov
xchg
xor
iret
inc
dec
cs
dec
cmp
jge
les
add
test
adc
mov
in
shlb
pop
ret
mov
int
ljmp
cmpsb
mov
loop
repnz
jg,pt
push
mov
sbb
mov
push
jb
cmc
in
cmp
or
jb
sbb
jmp
aas
sub
push
inc
xadd
and
out
fs
daa
sub
and
add
mov
fists
or
and
ja
or
sbb
lahf
xor
rcrb
jae
outsl
sbb
je
push
add
cmovs
pop
mov
stos
in
aad
pop
jmp
sbb
xchg
add
mov
negb
mov
xor
mov
inc
scas
xchg
sbb
test
cmpl
cmp
sbb
or
pop
mov
jbe
lret
cwtl
xor
jno
xorl
rclb
cmp
jbe
movsl
mov
xchg
ffree
scas
adc
push
repz
lahf
pop
test
int
dec
pop
inc
mov
hlt
add
xchg
mov
imul
and
mov
nop
mov
out
mov
pop
and
dec
aam
jmp
inc
jmp
dec
adc
inc
in
push
push
call
pop
jecxz
addl
mov
test
pop
cmp
mov
shlb
sbb
dec
or
bound
enter
xchg
sub
dec
jo
scas
sbb
cs
adc
and
out
jg
stc
push
cmp
and
ss
push
sub
cltd
sahf
shlb
ret
je
push
fisttpl
es
push
or
adc
mov
movsb
dec
pop
push
jl
int
pop
testl
adc
adc
xchg
mov
fldenv
ret
dec
sub
push
adc
call
adc
out
sub
test
das
push
aas
cmp
arpl
add
je
hlt
add
push
call
mov
and
mov
scas
mov
pop
daa
test
and
dec
std
jno
mov
std
inc
lods
repnz
cmp
jl
or
push
mov
jmp
in
testb
sarl
ja
and
jecxz
inc
jp
cmpsb
inc
orb
or
jmp
cmc
lea
dec
into
pop
or
or
mov
adc
ret
pop
pop
jg
loopne
movsb
inc
pop
xor
movsb
jo
das
push
pusha
pop
pop
sub
sti
iret
pop
push
xlat
mov
adcb
jl
cmp
inc
mov
and
dec
and
pop
sbb
cmp
mov
jo
idiv
insb
test
jmp
dec
push
adc
cmp
movsb
sub
xchg
idivb
int
lock
fucom
push
pop
lock
xor
bound
fs
mov
in
push
int3
or
js
lcall
xor
test
hlt
adc
repz
data16
add
jb,pt
add
or
lar
mov
cmc
cmp
rcl
push
push
and
mov
jne
or
movsb
rolb
mov
cltd
clc
aad
add
sub
out
lods
and
les
out
pushf
jne
sbb
push
cltd
jnp
adc
inc
xchg
pushf
popf
and
cwtl
popa
es
sub
out
aam
adc
into
xchg
xor
sbb
or
stos
in
xor
fnstcw
push
push
cmp
sbb
lods
jmp
cmp
push
iret
xchg
jnp
sbb
hlt
mov
imul
push
lret
jnp
add
test
adc
adc
test
add
nop
jge
lds
mov
ja
lock
and
lods
aam
mov
imul
ja
hlt
xlat
inc
inc
mov
adc
ficoms
xchg
pop
dec
int3
cli
rol
insl
mov
adc
mov
mov
fiaddl
push
or
inc
adc
or
pop
psrad
pushf
mov
mov
xchg
pop
ds
and
mov
pop
std
fucompp
cmpsb
and
mov
sbb
xchg
push
dec
int3
xchg
inc
or
adc
or
sti
ljmp
inc
shl
inc
push
fwait
cmpsl
mov
xchg
cltd
mov
cld
enter
rcll
sbb
jp
sbb
cmp
filds
aas
enter
or
xor
cmp
sbb
xchg
push
add
push
mov
xchg
mov
in
mov
push
ret
addr16
fstps
shr
cwtl
aad
loopne
sbb
stos
movsl
shlb
or
je
lcall
pushf
jne
jns
dec
add
not
mov
out
push
push
imull
sti
shlb
cmp
cmp
aam
jbe
mov
ja
sub
lcall
xchg
cmp
stc
in
xchg
xor
jbe
ljmp
insl
or
sbb
and
mov
mov
les
imul
push
data16
cmp
adc
out
mov
idivb
pop
jno
add
push
xlat
push
faddl
idivb
mull
dec
stos
les
xor
adc
and
xchg
call
mov
popa
fcom
lcall
repnz
imul
pop
cwtl
stos
andb
and
inc
arpl
sbb
mov
lcall
hlt
jmp
sub
pop
pop
pop
out
insb
cmp
push
add
std
stos
and
xor
xchg
or
sbb
ret
arpl
xchg
stos
pop
jge
pop
aam
sub
push
jp
pop
sbb
mov
add
pop
ss
fidivs
mov
inc
data16
addl
stos
cmc
repnz
fstl
xchg
fisubrs
loop
out
mov
repz
cmc
bound
adc
clc
cmc
xchg
dec
adc
xchg
pusha
addl
mov
jo
aad
add
pop
and
pushf
mov
orl
push
xchg
shrl
jge
mov
shr
inc
pop
lret
or
xchg
repz
mov
lds
jbe
mov
add
jbe
sbbb
ds
dec
mov
fstl
xchg
stos
dec
ds
sub
mov
stos
adc
push
pop
cs
mov
pop
insl
xchg
aas
or
sbb
stc
aas
xchg
lea
or
adc
bsr
dec
test
mov
jbe
ss
mov
cli
dec
imulb
cwtl
mov
pop
pop
hlt
push
iret
pop
sbb
cli
cmpsb
es
into
js
pushf
cmp
sub
xchg
fwait
int
sub
es
hlt
mov
clc
xor
mov
nop
pop
push
rol
mov
dec
call
cmp
fstpl
out
rorb
dec
daa
mov
gs
jbe
sub
adc
mul
xchg
test
stos
lahf
pusha
and
push
push
and
push
add
fdivrs
mov
push
out
xor
fdivr
sbb
rcrl
mov
mov
jne
mov
lahf
out
dec
xchg
pop
clc
into
xchg
sarb
fwait
xorl
andl
shl
shll
outsl
dec
daa
sub
cmp
sub
sub
movsb
inc
repnz
xor
pop
mov
out
cmp
dec
hlt
mov
cmp
dec
vmovsd
movsb
and
fidivl
jmp
cmp
adc
adc
in
popf
push
mov
jle
adcb
sbb
into
cmpsw
frstor
mov
shl
lea
insl
sub
sub
sub
push
imul
addr16
je
jns
pop
push
xor
test
xor
andl
ret
pushf
pop
icebp
rol
aam
pop
lods
aad
or
out
lods
mov
js
in
pusha
fs
inc
dec
pop
push
or
sbb
les
cmp
xor
sbb
mov
cltd
int
cmp
mov
loop
shrl
fidivrl
leave
outsl
xlat
inc
dec
aas
pop
test
rcl
inc
mov
push
push
bound
push
je
scas
jno
adc
scas
xchg
jecxz
cmp
shll
dec
flds
into
jecxz
push
repnz
mov
insb
stc
pop
adcl
mov
mov
add
lahf
rclb
out
insb
pushf
jl
ja
push
out
popa
fldt
mov
cmp
and
mov
rcrl
insl
repz
xor
adcb
int3
jns
out
orb
pop
jmp
testl
inc
inc
and
jns
pop
cli
decb
push
daa
scas
cmp
rorb
pop
in
add
js
push
jp
inc
xlat
inc
add
adc
xchg
call
mov
xor
in
jl
jg
add
movsb
add
mov
pop
test
adc
lds
fisttpl
dec
xor
insl
sbb
xor
dec
lret
mov
adc
pop
cwtl
js
inc
xor
mov
ds
sarb
cmp
push
pcmpgtd
push
push
xchg
imul
mov
adc
cmpb
jl
inc
das
int3
xchg
pop
pop
or
dec
and
gs
pushf
test
imul
cmp
inc
fwait
mov
ja
shll
sbb
mov
shll
loop
jbe
data16
outsb
adc
mov
movsl
les
popf
xor
sbb
arpl
ja
dec
idivl
push
jo
cwtl
aad
dec
adc
adc
es
test
scas
fmuls
pusha
divl
inc
xchg
or
ss
subb
dec
xor
adc
nop
in
shll
and
test
out
sub
fadds
scas
and
push
jbe
xchg
mov
lods
repz
mov
sub
add
mov
pop
notb
push
xchg
cltd
rolb
adc
movl
and
scas
sbb
test
cli
and
lcall
lds
xchg
scas
jbe
or
and
lods
adc
bound
outsl
fisubrl
push
lea
aaa
cs
add
and
and
cmp
or
cs
icebp
cli
pop
orl
movsb
cltd
nop
out
sbb
xchg
xchg
sub
lods
push
hlt
inc
loopne
pop
sub
in
add
insl
xor
xchg
es
out
adc
pop
jns
inc
mov
imul
sbb
jb
jl
xchg
repz
ljmp
dec
cmc
popl
scas
pop
xor
dec
test
push
aas
or
xor
mov
and
mov
sbb
mov
call
addr16
rcr
push
shrl
sbb
sahf
icebp
push
jg
jecxz
dec
ss
adc
inc
xor
jne
xchg
popa
inc
fbstp
jo
es
popf
add
int3
popf
jge
inc
sbb
jmp
out
pop
jp
jns
mov
into
imul
jge
dec
enter
stc
xlat
fistpll
add
push
aam
jnp
xor
imul
pop
test
sub
mov
xor
sbb
mov
cmpsb
jns
sti
les
hlt
mov
push
cli
pop
xchg
stc
sub
jecxz
adc
xchg
mov
sbb
adc
jmp
cli
jne
int3
xor
push
mov
enter
pop
out
inc
es
dec
sub
xor
out
mov
xchg
std
cmpsl
add
inc
fcoml
cmp
adc
jle
cwtl
bound
push
das
pop
push
rolb
arpl
sbb
mov
imul
inc
nop
jbe
push
cmp
pop
lcall
cwtl
cmp
cmp
sub
dec
mov
sbb
adc
popf
inc
daa
lock
outsl
aaa
fsubr
mov
stos
lahf
mov
leave
mov
adc
sub
or
pop
ret
ja
int
aas
loope
lret
add
cld
addr16
cmc
push
mov
jo
lods
mov
fcom
popf
jmp
shll
loopne
fnsave
or
mov
orl
pop
jge
xor
adcl
adc
lcall
loope
jo
sub
fidivl
dec
sub
jb
adc
shrl
pop
gs
test
sub
call
scas
or
outsl
clc
and
lahf
mov
mov
push
mov
addr16
or
xchg
xchg
dec
cmp
cltd
push
adc
push
out
push
jnp
cld
inc
inc
ret
push
mul
ja
out
lret
cwtl
jae
fdivr
jmp
stos
or
mov
adc
xchg
roll
sarl
mov
dec
inc
xchg
dec
or
xchg
data16
push
pop
cmp
in
push
arpl
mov
mov
sahf
xor
pop
in
ja
clc
xor
outsl
pop
push
js
mov
push
sti
add
lods
pushw
pushf
repnz
add
push
movsl
push
inc
adc
jmp
clc
xchg
sub
inc
push
jbe
sbb
icebp
or
cmc
sub
cmp
es
call
test
mov
xchg
jae
cli
shlb
xchg
shr
jl
push
inc
aas
push
mov
xchg
cmp
inc
ljmp
pop
call
jmp
push
repnz
inc
mov
icebp
sub
xor
lret
mov
lods
mov
push
sbb
mov
pop
aas
push
jmp
jae
jmp
push
ja
imul
jge
movsb
cmp
cs
dec
clc
adcb
cmp
loope
insb
jge
jle
lret
inc
adcl
inc
mov
sahf
or
aam
jnp
xchg
jno
cld
out
sub
aam
aam
fnstcw
push
mov
hlt
test
arpl
pop
dec
jg
arpl
and
or
inc
out
cmp
ret
sub
adc
aaa
mov
xlat
push
jns
imul
aad
iret
cmpb
sub
mov
jns
pop
mov
daa
push
cltd
pop
mov
mov
sbb
and
aaa
sub
aaa
pop
nop
and
imul
arpl
and
xor
push
push
sub
inc
das
push
movsl
xchg
int3
push
popf
arpl
arpl
pop
cmp
repnz
movsl
fmull
cmc
sbb
xlat
mov
adc
xchg
mov
mov
arpl
xor
cld
jp
xchg
ja
aaa
jle
ret
add
stos
rclb
mov
or
test
push
iret
sub
cld
cmpsl
push
xorb
stos
pop
cmp
daa
pop
pop
mov
in
push
mov
pop
xorl
and
mov
xor
das
sbb
cmp
cmp
mov
iret
cmp
mov
icebp
sbb
ret
mov
insb
shll
loop
jp
inc
cmp
or
sahf
test
sub
scas
mov
iret
push
loope
mov
iret
push
mov
rcrb
mov
push
and
mov
mov
psllw
ljmp
mov
sbb
icebp
cmp
pop
dec
push
fmuls
dec
inc
mov
das
cld
cs
mov
test
stc
shlb
cltd
pop
pop
jle
sbb
fmull
sbb
jmp
sbb
movsb
enter
jmp
and
dec
mov
xchg
loopne
or
outsl
lock
add
fnstenv
incb
sub
xchg
pcmpeqb
subb
mov
add
ret
and
ja
dec
xchg
imul
jmp
out
fadd
ljmp
das
pop
cmp
push
bound
stos
sub
das
adc
mov
pop
cmp
mov
jmp
xorb
in
xchg
mov
aad
cli
sti
movsb
insb
out
cmpsl
lahf
mov
test
cld
int
mov
pusha
cmp
ds
xchg
cmp
popl
loope
mov
add
sbb
adc
repz
inc
mov
add
jo
popa
in
hlt
or
pop
bswap
mov
shl
lock
and
inc
ds
dec
andb
sub
rclb
xor
inc
test
dec
push
dec
xchg
jo
mov
mov
cld
scas
ja
jp
bound
pop
pusha
mov
push
adc
mov
dec
pop
jae
lcall
pop
shlb
mov
mov
pop
jns
outsb
fldenv
or
mov
push
decb
and
loopne
sub
cltd
mov
shrl
sub
xchg
daa
xchg
out
cmpsb
test
jle
fidivrl
dec
push
cmp
out
adc
jb
jl
xchg
inc
mov
sbb
adc
jecxz
inc
cmp
jg
jge
sbb
fcmovbe
iret
fildl
xchg
fistps
lods
das
inc
pop
scas
adc
cmpsl
data16
aad
dec
and
das
or
popf
dec
out
data16
imul
sub
pop
and
pop
clc
add
dec
pop
fsubr
or
mov
add
ret
movsl
dec
sub
jmp
arpl
push
insb
and
lret
sbb
jp
xchg
popa
fcom
mov
out
imulb
mov
cmpsl
cmc
daa
test
push
shrb
ret
mov
xchg
ret
cmpsb
insb
lea
mov
xchg
push
cmp
leave
stos
xchg
das
ret
pop
and
pop
jg
mov
jae
pop
scas
scas
xchg
aas
sub
jns
lods
insb
fsubl
fs
mov
jae
xor
xlat
mov
es
xor
pop
out
and
push
push
add
loopne
ret
insl
push
inc
mov
push
cltd
pop
aas
dec
mov
vpcmpeqb
es
loope
arpl
mov
xchg
pop
inc
jecxz
orb
jmp
pop
call
aas
jge
mov
or
ficoms
jae,pt
push
out
pop
pop
sub
jb
outsl
addr16
fwait
jp
hlt
fstps
mov
xor
mov
fwait
or
or
cli
push
jo
sub
stos
xchg
roll
movsb
movsl
arpl
adc
sahf
and
hlt
jmp
fisubrs
pushf
testl
icebp
sub
ret
test
cmp
ret
mov
cmovbe
mov
jge
pop
fcomip
stos
mov
push
add
sbb
xchg
dec
inc
pop
pop
sub
pop
popf
fldl
mov
inc
mov
and
cmp
and
scas
cmp
pop
in
and
inc
push
cmp
xor
lods
cld
mov
sbbl
inc
sub
push
xor
xchg
pop
in
inc
ret
adc
pop
push
mov
aam
iret
mov
aaa
insl
sarl
xor
insb
jo
int
mov
dec
adc
push
je
pushf
mov
outsl
push
nop
in
mov
inc
cli
jb
pop
mov
in
sbb
xchg
mov
xchg
leave
aad
leave
push
cmp
negl
and
and
sbb
cmpsb
jb
inc
cmp
aam
sbb
jmp
xor
inc
xchg
jns
std
lods
xor
sahf
mov
sub
mov
cmp
push
scas
leave
call
in
ffreep
xor
pop
push
pushl
lods
imul
imul
sbb
es
cmp
mov
jno
jle
out
sub
add
inc
or
test
and
test
psrad
mov
mov
pop
fsubp
jno
test
jne
js
inc
mov
or
sti
xor
push
lret
stos
mov
pcmpgtd
sbb
mov
sub
sub
or
or
mov
cmp
mov
out
push
push
adc
les
push
loop
fistps
fucom
stc
movsl
jne
sbb
shll
xchg
cmpsl
sbb
pop
clc
roll
and
in
inc
rorl
pop
insb
cli
sar
in
or
push
hlt
push
xchg
in
lock
in
rcrl
dec
insl
inc
pop
pop
stos
std
or
add
and
xor
and
mov
xchg
push
mov
test
outsl
iret
movsb
pusha
pop
out
jmp
pop
dec
mov
jo
inc
sub
mov
adc
mov
movsl
or
in
cbtw
cmp
sub
mov
ret
fnstcw
shrb
push
and
arpl
fstps
fcomps
leave
dec
jnp
loope
sbb
mov
cmp
mulb
jae
jmp
cmp
xor
addr16
ret
jnp
popf
mov
mov
andl
fimull
fwait
sub
xchg
xchg
xor
push
mov
outsl
push
cmp
mov
add
lods
jns
inc
rclb
ret
insl
mov
addb
add
adc
stos
arpl
cmp
popf
pop
lods
pop
mov
mov
je
orl
lods
aaa
stc
out
jae
inc
mov
fdivs
or
outsl
scas
xor
andb
stc
pop
jp
and
xor
cmc
mov
mov
gs
mov
and
cli
pop
add
outsb
add
fstl
scas
jmp
xchg
add
mov
lcall
mul
add
rcr
pushf
sbb
inc
mov
das
ss
imul
lock
cmpsb
mov
jecxz
mov
push
popa
je
inc
inc
mov
cmp
ja
popa
cmp
scas
div
push
sub
dec
mov
inc
mov
mov
scas
inc
or
push
mov
decb
je
imulb
mov
lret
dec
mov
push
leave
jnp
cmp
jp
mov
adc
mov
orl
sub
lea
pop
call
push
sti
and
push
push
cld
sub
arpl
xor
sbb
decb
es
dec
loop
cmpsb
ret
xlat
insb
sahf
mov
pop
mov
jl
ror
cmp
sbb
cwtl
pusha
push
jne
mov
push
lea
stos
rorw
jo
sbb
push
in
push
lods
jb
mov
xchg
pop
ss
into
sar
scas
rolb
orb
jns
adc
rorb
and
ljmp
or
rol
sub
sti
jp
roll
mov
and
call
sahf
popf
mov
gs
pop
sub
movsb
roll
cmp
cmp
push
jl
jne
add
xor
cmp
rorl
sarb
rcr
imul
sbb
out
sbb
in
mov
mov
pusha
sub
jmp
or
imul
cmp
popl
test
sbb
and
ja
push
in
faddl
mov
dec
sbb
scas
test
repz
jbe
cwtl
gs
dec
stos
pop
mov
adc
inc
popa
adc
dec
add
cmc
mov
dec
icebp
les
push
cmp
cmpb
cmpsl
enter
mov
aas
mov
insb
mov
push
loop
ss
mov
pop
pop
or
jne
add
faddl
cld
daa
mull
xchg
xlat
jp
mov
sub
outsl
inc
aas
sbb
in
lock
dec
rclb
popa
sub
jne
xchg
fidivrl
and
ror
rcl
nop
mov
xchg
push
or
or
stos
lahf
mov
cli
imul
fsubrp
inc
jb
inc
or
add
xor
out
imul
frstor
or
in
xchg
cmp
negb
int
aas
xchg
or
xor
xchg
mov
mov
mov
hlt
in
sahf
clc
adc
dec
pop
jecxz
ffree
call
sbb
pop
add
fadds
push
push
inc
rclb
int
xchg
fs
loop
mov
pop
sbb
js
sub
test
dec
dec
adc
stos
aam
pop
and
std
push
add
mov
lock
int3
das
inc
dec
cmp
mov
cmc
adc
out
out
hlt
jmp
pop
xchg
cmp
push
mov
and
into
scas
mov
mov
ds
outsl
push
adc
lret
cs
int3
push
ljmp
ds
dec
ja
mov
test
push
mov
mov
inc
addr16
lret
jbe
or
cmpsl
enter
inc
enter
ljmp
pop
hlt
std
inc
shr
lret
rcrb
lock
sub
mov
cmp
push
shrb
mov
mov
adc
sub
jo
jae
daa
aad
pop
out
mov
sti
leave
pop
pop
mov
in
subl
xchg
fwait
or
clc
aam
in
pop
test
das
cmp
jle
push
daa
fldt
movsb
imul
or
fsubs
and
add
rcrb
cld
xchg
mov
xchg
aam
adc
mov
das
in
divb
pop
mov
subl
jl
sub
fnstcw
inc
jmp
shrl
inc
popa
sarl
sub
push
fsubl
jnp
notb
mov
add
loopne
xor
sahf
ja
jae
cwtl
adc
jo
push
jge
imul
pop
test
int
inc
test
loop
outsl
js
cmpsb
adc
stos
adc
das
adc
mov
out
push
cmpsl
pop
pusha
cmp
dec
push
add
in
popa
cmp
andb
pop
xlat
cltd
pop
jnp
popf
repz
mov
shr
push
pop
xchg
sbb
mov
outsb
dec
pop
fsubrs
cmp
test
xchg
lcall
xor
xor
adc
or
xchg
inc
push
jbe
push
push
fldl
sbb
xchg
xlat
lahf
pop
leave
adc
divl
pop
xor
jge
push
sub
and
sbb
insl
gs
push
push
pop
xor
push
js
or
ljmp
mov
or
outsb
mov
push
pop
and
dec
cmp
js
cmp
jg
sbb
push
xor
xchg
lds
aam
inc
ffreep
and
xchg
ss
inc
fcomps
rolb
cmp
cwtl
mov
insl
shrl
or
pop
scas
in
shr
orl
fdiv
xchg
pop
jb
sub
mov
pop
mov
mov
xchg
xchg
jae
mov
dec
or
push
sbb
push
scas
aam
mov
stos
and
fwait
mov
adc
gs
fmul
lds
insl
xchg
hlt
sti
movsb
in
sar
stos
inc
test
out
into
sti
lret
jle
push
dec
adc
test
adc
jns
jbe
mov
out
test
int
jne
shr
cmp
negb
rcl
test
pop
sahf
out
cmp
push
inc
mov
divb
lahf
pop
jnp
xchg
and
jae
xor
cmp
int3
dec
into
mov
and
jo
imulb
addr16
fldenv
push
fiadds
lds
xor
mov
mov
add
sub
lea
cld
cmc
xchg
adc
pop
test
fldt
pop
sbb
jbe
ss
fsts
dec
adc
or
fisubrl
mov
int3
inc
bound
inc
cmpsl
jmp
and
xor
add
add
std
mov
jno
xor
fwait
pop
in
add
cmp
adc
clc
adc
pop
or
cmp
pop
add
and
stc
lods
pop
adc
xor
adc
sub
pop
lods
pop
test
fldl
hlt
ljmp
dec
dec
push
push
dec
leave
cmp
inc
push
jns
pop
push
fbstp
push
inc
lret
or
arpl
shll
cli
movl
in
aad
aas
dec
addr16
adcb
xchg
inc
jmp
mov
pop
ffree
dec
mov
stos
loopne
lods
aaa
cld
shlb
cmp
lret
lds
dec
ret
xlat
cmp
iret
mov
xchg
dec
fistl
mov
loop
xor
in
pusha
xchg
or
movsb
sbb
pop
push
dec
std
cmp
adc
lcall
ret
out
roll
lds
repnz
jecxz
int3
pop
sti
leave
cltd
orb
pop
into
xchg
aas
stos
jg
add
mov
add
jb,pt
fidivrs
push
xchg
inc
lock
mov
sub
adc
inc
mov
cmp
mov
adc
xor
sub
cmpsb
test
push
jmp
sti
push
mov
loop
leave
pop
sbbl
or
rcr
cwtl
out
aad
or
sub
stos
xor
sbb
mov
sub
loop
jecxz
or
lock
push
cmp
sbb
mov
push
in
jl
pushf
xchg
ret
mov
inc
cld
mov
jne,pn
dec
adc
cli
push
inc
setl
cmc
test
lock
sbb
mov
xchg
insb
daa
das
aaa
pop
add
add
mov
push
push
jae
mov
shll
inc
jmp
ss
and
xor
hlt
ja
add
jl
repnz
rorb
rcr
add
mov
xor
shlb
ret
icebp
lds
test
jns
inc
push
icebp
adc
ds
dec
jg
adcl
push
sub
ja
adc
mov
xor
mov
repz
lods
les
or
rorb
pushf
jecxz
push
out
or
sbb
inc
sub
int
jnp
push
push
and
jnp
mov
outsl
out
ljmp
or
jle
lods
imul
and
inc
int3
mov
insb
and
push
hlt
add
insb
mov
addl
and
cmc
mov
test
inc
test
jns
leave
loop
sub
mov
jle
or
addr16
lock
pusha
and
xchg
dec
push
fwait
xor
cltd
push
out
xchg
outsl
aad
aas
in
xor
sub
jbe
js
bound
addr16
ficoml
outsb
imul
inc
mov
mov
js
bound
out
cmp
jnp
aas
repz
cmp
nop
jo
rolb
pusha
ss
sti
test
stc
lcall
mov
lods
fildl
das
aas
mov
outsb
dec
cmp
cmp
repz
test
jmp
pop
in
xor
pop
jns
jle
aaa
xchg
ss
mov
subl
mov
mul
adcb
mov
dec
cmc
call
ja
sub
push
mov
and
xchg
jae
xchg
add
pop
jmp
or
lret
mov
aas
test
iret
sbbl
lock
and
push
test
xor
pop
mov
cmc
aad
pop
jp
mov
mov
sub
cmp
mov
les
lea
movsb
enter
push
push
stos
mov
pop
data16
lret
push
out
mov
adc
sarl
mov
and
jl
jbe
stos
mov
cmp
inc
mov
inc
sbb
add
mov
jno
mov
inc
fbld
into
jg
pop
addr16
sub
roll
jo
lods
adc
inc
jns
mov
xor
ret
sahf
shll
mov
daa
jo
pusha
data16
pusha
xor
push
insb
sbb
push
enter
inc
inc
jg
push
test
add
xor
and
outsl
mov
orb
clc
lret
and
in
imul
iret
xchg
xchg
dec
addr16
lret
nop
test
out
sub
idivl
mov
into
push
mov
out
jecxz
in
xor
adc
scas
je
add
pop
inc
dec
clc
dec
sub
cmp
mov
jecxz
xchg
add
stos
inc
jo
inc
addr16
rclb
lods
pop
mov
pop
daa
call
inc
jae
push
enter
lret
out
sbb
xchg
push
mov
pop
movsb
mov
and
adc
imul
mov
lahf
jg
sti
xor
loope
jbe
nop
sbb
mov
pop
stc
mov
push
mov
push
imulb
hlt
insb
mov
mov
xchg
decl
add
jle
mov
xor
sub
and
in
leave
and
pop
pushw
pop
xor
sub
adc
push
dec
call
xchg
ja
dec
cs
clc
jno
sahf
insl
jmp
scas
lds
dec
aaa
dec
ss
push
popf
addr16
loopne
adcl
mov
int
out
dec
add
xorb
ja
bnd
ret
sar
insb
dec
adc
cmp
jns
movsb
or
mulb
xor
xchg
pop
test
stos
dec
jae
lods
cmp
pusha
push
repnz
push
dec
cwtl
test
cmpsb
add
vandpd
cmp
divb
insb
mov
sbb
mov
fsubrl
pop
orl
jns
inc
jae
xor
pop
jecxz
ljmp
and
jb
and
cmc
test
push
es
into
int3
push
int3
push
xchg
and
and
push
orl
scas
xor
adc
pop
push
push
popa
push
jne
mov
xlat
nop
pop
test
xchg
mov
lock
enter
xor
sbb
push
cmp
lods
dec
es
inc
mov
mov
in
int3
mov
inc
mov
fisubl
xor
jecxz
pop
lods
je
adc
mov
push
jge
je
inc
divb
add
imul
mov
pop
mov
sub
lds
or
int
inc
call
lea
mov
xor
int
xchg
dec
add
aam
popf
mov
mov
pop
mov
xor
jns
mov
or
cli
xlat
lcall
ds
outsl
mov
mov
test
loope
addr16
sub
dec
inc
mov
mov
repz
inc
in
mov
fwait
loope
jle
out
jecxz
pop
mov
xchg
aad
js
movsl
into
mov
arpl
inc
inc
repnz
aas
stos
and
jbe
leave
sbb
cmp
frstor
test
jp
je
push
sub
or
push
in
mov
adc
jmp
cmp
inc
imul
sahf
aam
push
cmp
aas
xor
mov
add
stc
inc
mov
xor
or
jecxz
fcomps
mov
sub
pop
mov
loope
cwtl
lock
cltd
movsb
mov
jne
addr16
fildl
adc
cmp
pop
stos
push
mov
and
xchg
mov
inc
add
movsb
ja
cmc
fwait
and
cmp
dec
aam
cwtl
bnd
and
jae
std
scas
pop
ljmp
scas
ret
call
int3
mov
xor
lahf
or
test
push
pushf
mov
and
orl
stc
lods
bound
add
dec
and
pusha
cmpsl
ficomps
or
add
adc
lahf
pushf
mov
or
in
sub
test
push
add
sbb
add
shrb
push
xchg
test
push
xchg
arpl
fisubl
hlt
mov
mov
mov
cmpsb
stos
mov
jne
or
mov
pop
shr
or
add
or
shlb
dec
repz
dec
mov
lret
cmp
je
decl
jmp
jno
push
stos
lea
jne
sti
test
insb
dec
jle
pop
push
test
jbe
jb
imul
sbb
cmp
push
sbb
mov
or
dec
mov
lods
or
mov
inc
out
jae
imul
pop
popl
xchg
sti
cld
rorl
pop
dec
pop
rcrb
sub
iret
fnstsw
sub
mov
rol
repnz
in
aam
mov
sahf
js
push
pop
xor
dec
add
pop
and
out
popa
sbb
stos
stc
and
mov
push
dec
mov
aas
testb
lds
sub
rol
int
fdivp
loopne
pop
mov
sahf
mov
aad
pusha
cmp
clc
pop
jl
pop
lods
lret
shll
adc
adc
sbb
lock
sbb
mov
hlt
and
jo
adc
pop
clc
adc
mov
insl
fistl
stos
mov
ja
and
inc
popa
adc
inc
inc
popa
addl
in
pushf
aam
dec
fsts
dec
sarl
lret
or
addr16
inc
inc
push
mov
push
clc
pop
fsubr
jmp
sahf
xor
dec
cltd
mov
ror
inc
xchg
inc
pop
lret
stos
push
jnp
scas
fstpt
cs
notl
and
lods
sub
or
mov
aas
adc
dec
xor
xor
cli
js
je
cmp
cs
push
xor
mov
jne
pop
add
add
pusha
pusha
push
xor
and
lock
in
dec
xchg
xchg
mov
arpl
andb
xchg
dec
adc
lea
mov
adc
sub
addl
sub
sbb
and
or
xchg
dec
das
xchg
fiaddl
notb
mov
fidivl
cmp
pop
pop
cwtl
daa
call
adc
pmaxsw
push
and
jecxz
or
data16
orl
aas
pop
aam
lahf
adc
mov
arpl
inc
mov
loopne
icebp
lds
sub
xchg
das
sub
subb
js
sahf
xor
pusha
jmp
div
mov
pop
imul
shlb
sbb
and
add
jb
sbb
dec
jge
leave
out
inc
jo
jns
add
xchg
in
gs
lret
xchg
mov
mov
jns
shll
dec
pop
dec
and
mov
stc
pop
inc
sar
or
xchg
scas
cmp
inc
add
push
popa
xchg
pop
in
xor
ja
adc
stos
push
xchg
cmpsl
notb
ljmp
ljmp
mull
and
aas
add
cmpsb
stos
push
cli
mov
pusha
add
push
mov
sbb
xor
jge
add
inc
jo
mov
jmp
stos
xlat
rorl
mov
xor
imul
leave
in
cmc
mov
sbb
call
mov
cmpsb
mov
mov
pushf
push
aam
mov
xchg
ss
push
inc
les
out
imul
xchg
mov
sti
mov
sbb
les
fnstsw
xor
and
jle
lods
and
xchg
jle
cli
mov
adc
outsb
jns
xor
shrl
enter
orb
cmp
cmp
jmp
mov
pop
sar
push
add
mov
inc
nop
cmc
mov
or
roll
pusha
inc
pop
mov
push
data16
dec
xor
sbbb
sbb
and
cli
cwtl
pop
dec
or
pop
mov
aam
xchg
mov
or
jle
ds
fisubl
pop
pop
in
repnz
in
test
jg
cwtl
stos
es
aad
and
stc
aas
stc
xchg
nop
push
push
fs
sub
jl
ljmp
jns
dec
fstpt
jle
mov
fldcw
cmc
add
adc
jne
insl
lock
faddl
inc
or
jno
decb
xchg
and
mov
jl
mov
jle
mov
movsb
insl
adc
xor
aaa
lcall
or
fisubl
push
xlat
aad
xor
push
jl
rol
adc
xchg
jne
pop
and
sbb
xchg
mov
or
and
repz
cli
in
mov
push
fmul
notb
ficomps
neg
dec
or
lret
arpl
xchg
sbb
dec
insb
icebp
outsb
push
xchg
push
inc
mov
adc
imul
test
inc
cld
fisubs
cmp
sahf
shlb
xor
push
cmp
jnp
mov
xchg
adc
and
lret
mov
daa
mov
cmp
sub
iret
rorl
xor
pop
pop
mov
sub
dec
sbb
cmpsb
or
aaa
outsb
push
cmpsl
fucomip
pushf
sub
ja
mov
repz
sbb
cmpsb
xlat
push
add
jge
sbb
mov
jecxz
ljmp
pop
fldl
hlt
adc
lahf
mov
out
sbb
je
adc
into
mov
sbb
jge
xlat
movsl
jle
pusha
ret
adc
fdivrs
jge
stc
repnz
imul
jmp
fidivrs
loopne
jg
idivb
mov
js
mov
cmp
push
loop
bound
lret
jae
dec
sarl
decl
inc
dec
int
stc
fistps
std
in
out
mov
sub
and
sbb
push
int3
xor
or
lods
sub
pop
mov
push
mov
fwait
mov
inc
shlb
sarl
or
pop
fcmovnu
add
push
inc
subl
push
mov
and
xor
mov
add
shl
popa
inc
in
push
out
stos
adc
ss
jnp
aad
fucomp
scas
cmp
jl
jle
pop
aad
aaa
sarb
push
xchg
sbb
sbb
in
mov
mov
sbb
movl
ss
push
testb
or
js
jo
and
test
xor
adc
cs
and
loopne
push
dec
and
sbb
xchg
add
arpl
rorl
mov
inc
shl
cld
pop
dec
loope
pop
ret
ss
inc
jae
pop
jmp
mov
repz
mov
adc
scas
push
into
and
jecxz
sub
or
std
lret
cld
sub
out
frstor
int3
push
cmc
in
or
xchg
push
arpl
test
push
data16
pop
add
aam
mov
ljmp
xchg
in
xchg
sub
and
lods
xchg
data16
pop
sahf
mov
and
iret
add
push
fisubs
and
mov
ret
xchg
add
arpl
pop
add
movsb
pop
or
and
in
test
out
adc
jno
addb
arpl
dec
jecxz
xchg
mov
or
sub
enter
push
mov
inc
dec
adc
xor
jge
mov
mov
rclb
rorl
pushf
mov
mov
fcmovbe
mov
iret
adc
sub
xor
mov
add
sub
scas
jl
jne
arpl
mov
lods
cld
cmp
cmp
movsl
pop
and
roll
mov
fadd
or
daa
push
add
or
mov
in
push
hlt
add
add
dec
push
cmpsl
into
ret
xchg
and
mov
sbb
mov
and
xchg
add
div
mov
sub
mov
or
mov
ljmp
ret
jno
daa
inc
out
sahf
je
movsb
and
fdivr
push
lret
or
test
adc
loop
stc
push
ja
jno
lods
cmp
mov
jp
push
jns
cmp
jo
dec
jle
and
lock
fldt
sti
aam
mov
mov
xchg
sub
ds
add
pop
in
fucomip
cmpsb
jecxz
inc
dec
imul
xchg
add
inc
adc
das
rorl
pop
jmp
sti
jmp
mov
push
push
dec
add
cmpsb
sti
and
insb
and
idivl
inc
popa
inc
jg
jno
rep
and
mov
mov
stos
fistpll
aad
std
mov
cmpb
stos
or
insl
or
test
movsl
push
cmp
sub
cmp
jno
bound
xor
incb
mov
aam
add
xor
mov
pushf
cmpsl
fwait
mov
cs
adc
mov
adc
mov
outsl
arpl
loopne
lods
rcll
scas
mov
lock
inc
mov
fcmovnu
jno
ret
and
mov
sub
cld
mov
and
aas
dec
xchg
int
mov
mov
or
sbb
rep
jbe
insl
pusha
js
rorb
mov
sbb
mov
jne
ja
pop
cmp
cmp
pop
dec
cmpsl
dec
sub
lahf
out
lods
pop
jo
js
jecxz
ljmp
xor
cli
jbe
xor
outsl
rclb
inc
xlat
pop
jp
inc
push
ja
adc
ficompl
sqrtps
es
sub
mov
dec
aas
mov
cs
pop
mov
mov
inc
popa
dec
dec
dec
outsl
mov
shll
lret
scas
test
je
dec
mov
mov
divl
inc
fxch
push
repz
iret
in
jp
adc
jnp
xchg
xchg
push
orl
mov
cmp
inc
xchg
aam
pop
cmpsl
cmp
mov
jg
out
mov
xorb
icebp
or
xor
push
gs
std
adc
cmp
pop
jnp
mov
mov
pop
add
ja
jp
xchg
push
dec
or
sbb
push
and
flds
cmpsb
push
cmp
fidivs
jp
push
inc
xlat
in
cmp
xchg
inc
nop
mov
pop
add
ret
ds
lcall
in
and
mov
cmp
mov
in
sub
into
mov
add
pop
cmp
addr16
add
push
fcoml
out
lods
jg
push
cmp
inc
or
aas
and
nop
lret
fs
lcall
add
shl
mov
and
rcl
stc
add
xchg
shll
jb
aad
push
adc
and
outsb
push
ds
mov
pop
cmpsl
popa
aas
js
ja
insb
mov
test
adc
adc
cwtl
int3
mov
mov
test
mov
mov
cmpsl
adc
jbe
clc
mov
leave
fwait
pop
dec
enter
pop
pusha
aas
cmp
lods
xlat
push
xchg
out
inc
and
or
sub
push
stos
push
mov
sub
pop
inc
notb
mov
and
jbe
rol
icebp
mov
cmp
sub
pop
jmp
sarl
out
lcall
mov
int
push
mov
lds
push
ret
gs
push
jmp
or
xchg
pusha
enter
das
imul
cltd
xor
imul
add
dec
inc
addr16
out
xor
mov
test
fmul
xor
pop
jmp
mov
xor
fs
xor
cld
lock
xchg
imul
das
icebp
into
leave
xlat
push
jmp
lcall
into
lods
pop
cmc
dec
in
push
enter
cmpsl
and
cmp
or
movsb
imul
jecxz
int
mov
inc
lret
mov
push
loope
jp
add
les
popa
lods
push
repz
ljmp
xchg
aam
mov
dec
xchg
movsl
scas
add
cmp
movsl
pop
sahf
xor
je
inc
pop
xchg
fsincos
sub
and
push
arpl
pop
and
fs
xchg
popa
scas
out
ret
mov
jnp
lret
nop
inc
pop
fwait
daa
icebp
lea
cmp
lods
mov
push
mov
push
in
push
mov
aas
clc
mov
add
popa
imul
mov
mov
cltd
mov
cli
fs
les
xchg
lods
enter
xchg
jg
or
sbb
aas
out
cmp
scas
pop
dec
into
ja
pop
sbb
fidivl
and
sub
adc
iret
mov
push
test
push
cmp
icebp
push
adc
mov
dec
jecxz
rorl
jl
mov
shr
mov
jl
scas
test
ret
xchg
int
aas
into
dec
jne
push
xchg
imul
jmp
jae
mov
dec
lret
call
and
xchg
push
dec
jnp
or
aam
push
inc
fwait
pop
xchg
xlat
cli
cli
lcall
sti
xor
ret
or
test
icebp
and
dec
mov
scas
ja
or
aad
aad
stos
addl
cltd
push
cmpsb
mov
adc
in
sub
mov
xchg
pushf
mov
fldt
daa
cmpsb
add
and
movsb
jmp
out
js
pop
cmp
lret
xchg
test
mov
mov
and
test
les
aas
es
pop
adc
and
das
mov
test
imul
xor
jmp
fnsave
sbb
cmpsl
push
int3
stos
adc
je
int3
mov
push
nop
xchg
sbb
aas
jnp
mov
dec
imul
idivl
dec
push
loopne
scas
sub
push
dec
inc
ds
adc
xchg
add
push
pop
sub
pop
cld
or
stos
and
lret
inc
mov
in
jo
out
dec
dec
dec
mov
pop
and
insb
or
xchg
xor
and
hlt
bswap
sahf
mov
movsl
mov
inc
pop
fisubrs
push
in
gs
mov
cmpsb
or
gs
nop
jle
pop
jae
jo
lret
into
push
and
adc
aam
sbb
adc
cmpsb
stos
out
cmp
popa
in
pop
push
lods
lret
aaa
mov
and
insl
adc
in
mov
iret
xor
inc
faddp
sbb
aam
ss
sub
rcll
outsb
pop
cmp
dec
xchg
mov
lret
shll
mov
dec
jnp
jp
shl
insb
sahf
sub
pop
cmp
mov
mov
and
pop
pop
imul
dec
add
push
mov
add
xor
pusha
inc
ret
loope
sar
popa
push
ljmp
xchg
stos
lahf
pop
mov
in
dec
movsb
jecxz
xlat
or
outsb
inc
repnz
dec
lods
and
pop
inc
xor
and
or
pusha
xor
notl
sub
notl
lahf
fildll
cmpsl
popf
or
popa
fmull
mov
jmp
and
arpl
dec
push
mov
lods
pushf
push
pop
pop
ret
int3
imul
call
push
push
mov
loop
addr16
cmpsl
sbb
jmp
fs
add
ljmp
lcall
dec
ret
or
inc
mov
lock
pop
ret
mov
mov
pop
pop
outsl
ja
xchg
mov
mov
adc
jp
jp
ja
dec
dec
repz
add
push
mov
push
fnsetpm(287
imul
mov
cmc
pop
cmp
daa
aas
imul
popf
shr
inc
push
cmp
arpl
jo
imul
add
xlat
jb
scas
int3
loopne
xchg
adc
ret
xchg
ret
sbb
imul
mov
mov
jae
cmp
mov
and
lret
pop
inc
iret
push
add
mov
insb
mov
mov
mov
pushf
aaa
clc
icebp
mov
repz
lret
lods
mov
cwtl
jp
popl
mov
xchg
push
add
fs
pusha
nop
mov
shl
pop
int
xchg
jmp
cmp
jecxz
ja
mov
popf
cmp
addr16
fstpl
fsubrl
pop
inc
lock
push
aaa
jbe
sti
sub
or
or
icebp
das
ss
popa
sub
cmpsb
adc
xchg
shr
mov
loop
cli
lahf
push
fcompl
in
dec
push
stos
adc
lahf
leave
movsl
out
jae
cmc
cmpsb
mov
iret
cli
call
mov
lock
scas
ds
outsb
je
mov
mov
pop
mov
loope
inc
mov
sbb
pop
test
int
enter
fs
cmp
cmp
outsb
pusha
shll
ficoms
testb
or
aaa
and
popf
and
ja
mov
mov
xchg
insb
xor
clc
fildl
lret
shlb
adcl
movsb
sbb
in
daa
xchg
push
xchg
and
fnstsw
dec
dec
scas
cmp
mov
xor
xchg
push
ret
xchg
repnz
repz
jecxz
or
pop
mov
cmp
test
dec
xchg
and
inc
fstl
mov
mov
inc
inc
xor
stos
shrb
xlat
out
in
cld
ja
xchg
push
sti
pusha
jns
adc
xchg
and
cmp
insl
lcall
push
push
jns
test
cwtl
push
lods
sbb
ja
ja
mov
pushl
cmp
mov
pop
mov
bswap
pop
mov
jmp
bound
sbb
icebp
sbb
mov
repz
cmp
lahf
addr16
or
fldenv
fcomps
insl
xor
xchg
sbb
lods
pop
ss
adc
xor
jb
pop
incb
mov
mov
enter
pop
and
pop
dec
jle
lods
cwtl
stc
push
das
adc
xlat
and
arpl
xchg
cli
mov
mov
das
sub
xchg
jl
sbb
jp
pop
xchg
cld
movsb
cli
test
sbb
sub
out
clc
repnz
dec
inc
divl
stc
and
add
dec
xchg
insb
pop
adcl
add
mov
andl
jb
mov
icebp
sar
inc
je
rcrb
stos
frstor
xor
or
rcrl
pop
adc
mov
or
hlt
xchg
adc
mov
xchg
cmpsl
ret
mov
inc
sub
push
loopne
test
or
pop
scas
ret
repnz
mov
fldt
imul
aam
out
movsb
inc
xchg
xchg
orb
mov
push
xor
xchg
into
test
adc
pop
popf
out
mov
loop
cmp
push
test
fmuls
mov
bound
cltd
inc
int
mov
iret
pop
cmpsb
mov
mov
fs
pop
out
xchg
int
mov
int
or
out
xchg
jns
lret
lea
pop
and
pop
dec
jne
dec
cmp
dec
mov
jne
xor
inc
mov
dec
data16
icebp
and
sub
jecxz
mov
lret
jo
mov
and
ja
leave
inc
mov
bound
loopne
pop
stos
sub
leave
and
lds
and
push
addr16
notl
clc
pop
out
ljmp
sbb
cmp
ljmp
andb
jne
pop
push
jp
sub
lds
sti
fisubrl
lahf
xor
icebp
enter
aaa
mov
into
shrl
decb
mov
in
data16
and
cmpsb
dec
dec
sub
sub
std
out
mov
out
rcr
dec
pop
negb
jmp
insl
xlat
inc
lcall
shl
mov
fwait
imul
ret
test
aaa
inc
ret
add
push
sub
xchg
stos
insl
jl
iret
mov
xchg
out
lahf
sub
push
inc
sub
and
lods
nop
in
jb
push
xchg
push
stos
scas
out
and
push
pop
or
cltd
push
sub
push
sub
add
mul
push
call
lods
scas
mov
popf
cld
cld
sahf
dec
aad
es
xchg
std
nop
sti
xor
std
dec
cs
hlt
flds
cmp
cmp
addr16
push
lods
adc
inc
push
fsts
adc
jmp
mov
cs
movsb
mov
jnp
loop
call
jns
xchg
sarb
mov
sub
dec
arpl
ds
push
ss
xchg
and
dec
lods
jo
movsb
mov
cmp
cmp
mov
pop
testl
fcmovnbe
int3
mov
or
pop
lret
pop
pop
arpl
xor
push
insl
sub
lea
cltd
mov
mov
cmp
outsb
cli
fwait
add
subl
les
dec
loop
repnz
adc
dec
fldl
fldl2e
in
mov
sahf
rcll
xor
icebp
dec
jo
fidivrl
sub
jbe,pt
loope
adc
add
orb
sbb
add
lahf
xchg
fbld
pop
stc
fsub
add
pop
xchg
in
mov
jg
sbb
dec
inc
hlt
sbbb
add
and
add
andb
sub
punpckldq
in
cmpsl
pop
pop
scas
mov
pop
push
mov
inc
pop
fsubs
cmp
inc
add
bound
movsl
mov
stc
lcall
in
mov
sbb
fdivr
inc
xor
scas
dec
xchg
psubusw
mov
mov
push
cmc
jmp
xor
xor
mov
mov
ret
xlat
fwait
out
ss
lds
pop
inc
pop
hlt
mov
jmp
cmpsl
add
testl
inc
aam
xchg
ljmp
push
cmpsb
std
xor
testb
outsl
inc
out
mov
or
sbb
outsl
inc
jg
cmp
in
imul
jmp
test
mov
mov
mov
jb
sub
pop
lahf
mov
and
sahf
pop
pop
cmp
or
mov
bound
mov
cmp
push
push
sbb
mov
pop
jne
cmc
ljmp
inc
pop
cld
insl
orb
das
sub
adc
xchg
sub
cmp
adc
xchg
loop
test
cmpb
pop
jl
je
jge
cmc
or
cmc
iret
es
stos
arpl
fildl
insl
stos
in
ja
xor
enter
cli
fwait
in
fs
cmp
pop
ds
clc
lcall
data16
or
pop
push
les
pop
pusha
dec
enter
pop
jmp
mov
aam
out
inc
andl
scas
inc
ret
sub
shll
sbb
mov
out
cmpsb
pop
adc
inc
test
insl
dec
mov
dec
rcpps
cmp
inc
jle
scas
data16
nop
mov
lahf
es
cld
adcb
das
jnp
xor
push
mov
mov
movsb
jp
pop
jecxz
cmpsl
lcall
dec
push
test
andb
mov
mov
adc
jae
fsub
movsl
fidivl
mov
mov
into
lods
flds
xchg
mov
push
movsl
ret
es
adc
jnp
add
add
push
cmp
in
js
jo
sti
cld
inc
or
bound
mov
scas
mov
push
lods
lock
shll
mov
jnp
dec
lods
stos
aam
les
xor
adc
jmp
clc
pushf
jmp
test
jp
dec
pop
subl
out
sub
arpl
adc
movsl
sbb
cmp
sbb
mov
and
inc
mov
lods
stos
lods
inc
shll
mov
xchg
dec
repnz
push
cmpsl
pop
cs
mov
lds
add
addr16
xchg
jp
lock
dec
pop
or
cld
add
mov
inc
aad
xchg
push
dec
js
scas
mov
jecxz
xchg
in
cmp
jns
or
xchg
sti
adc
clc
cmp
jb
jne
cmp
mov
cli
shl
xchg
in
jbe
jp
add
sbb
mov
int3
cmpsb
pop
sub
jl
jp
pop
and
mov
loope
mov
cmc
jmp
jns
mov
pop
cmc
mov
mov
call
sub
adc
dec
fimuls
fidivrl
jae
inc
jge
dec
scas
into
shrb
rclb
sti
mov
cmpsl
and
push
mov
shrl
fadds
fdivr
mov
push
shrb
sti
cmpb
fcomps
mov
std
dec
call
or
jbe
ja
test
repnz
xchg
cld
pusha
ror
and
push
fisubl
insb
lahf
insb
outsl
mov
push
and
inc
jno
or
inc
jno
mov
sub
fbld
imul
jb
cwtl
inc
je
mov
xchg
aaa
pop
out
or
data16
inc
imul
imul
pop
scas
pop
jbe
insb
add
add
cmpsb
pop
pop
lock
inc
into
in
sbb
rorl
cmp
jae
loope
popf
push
fsubr
mov
les
jl
repz
fstpl
test
sub
movsb
mov
sbb
push
jge
dec
in
or
pop
and
ret
jl
popf
jl
cld
test
cmp
sbb
xor
adc
dec
jecxz
insl
in
ljmp
lahf
or
das
dec
push
cmp
fstl
xchg
or
sub
xchg
imulb
in
aam
enter
shll
fwait
mov
in
nop
leave
sub
cld
jp
aad
push
mov
jae
cmpsb
xchg
icebp
int
mov
sub
or
jmp
mov
popf
push
jne
mov
inc
bound
in
xor
pop
fstpl
push
or
js
shlb
push
bound
sbb
inc
adcb
int
mov
daa
inc
mov
mov
out
stos
and
loopne
jbe
adcb
sbb
sbb
inc
push
xor
aaa
test
test
out
xchg
inc
mov
jmp
aad
scas
cmp
sub
pushf
add
pop
and
and
mov
in
cs
out
adc
pop
xchg
lods
in
scas
rclb
dec
push
dec
push
out
mov
mov
xor
fidivs
mov
pusha
dec
push
rcrl
lcall
out
cmpsb
mov
cli
adc
daa
dec
pop
push
sarb
call
or
call
hlt
xchg
sahf
and
flds
mov
mov
adcl
add
sbb
mov
mov
sub
xor
sub
adcb
inc
shlb
js
pop
jnp
movl
add
movsl
lods
jo
ljmp
jge
inc
xchg
enterw
std
and
shrb
pop
or
ja
test
pushf
cwtl
xor
fimuls
or
mov
mov
enter
xchg
sub
mov
and
loope
or
cwtl
inc
cmpb
into
clc
inc
shll
push
loopne
jnp
imul
mov
mov
fsubs
or
in
and
ficoms
push
sarl
jno
mov
sbb
push
movsl
push
mov
lods
out
push
dec
sub
mov
sahf
sar
cmpsb
ja
dec
push
incl
jmp
push
ja
imul
pop
subl
jbe
or
fldcw
lea
imul
outsl
and
xor
jns
cld
fadds
sbb
sub
adc
pop
jge
push
cli
push
ljmp
in
mov
iret
ljmp
mov
push
stos
and
scas
mov
scas
sub
xchg
insb
filds
mov
mov
jge
jb
xchg
sbb
neg
inc
jb
in
jnp
sbbl
addr16
test
xchg
mov
fwait
xchg
mov
adc
jg
ds
mov
sbb
std
dec
movsb
jnp
xor
fucomi
repz
mov
subl
mov
cmpsl
and
sub
fsub
adc
dec
add
and
pop
out
adc
stos
jle
iret
clc
pop
fwait
sub
xchg
push
ds
push
inc
imul
test
stc
pop
scas
sti
mov
sbb
shrl
cmp
lods
xchg
adc
mov
add
mov
shrb
mov
aam
and
mov
pop
arpl
jnp
xchg
pusha
shll
jbe
pop
insl
inc
stos
stos
jo
pop
mov
jnp
adc
inc
sbb
jae
ljmp
mov
addl
rclb
popa
mov
jl
cmpsl
sub
sub
add
ror
pop
outsl
ret
outsl
repnz
pop
inc
push
lods
inc
add
xor
je
imul
push
mov
push
aas
or
adc
lock
sbb
loope
leave
mov
mov
push
lcall
outsl
add
mov
imul
push
pop
rcrl
dec
push
cmp
cwtl
ret
cmc
jmp
add
and
imul
adc
out
push
xor
jb
add
jbe
and
scas
xor
mov
mov
jb
lea
inc
in
adc
inc
popf
or
aaa
pop
loop
pop
push
pop
xor
js
and
or
adc
pop
notl
fbld
xor
push
add
mov
not
cmp
scas
outsl
sbb
jnp
popw
jnp
loope
ja
pusha
icebp
cltd
push
sti
testb
ds
mov
movsb
sbb
and
mov
pop
sub
jo
mov
stos
test
or
jo
icebp
dec
sbb
xchg
pushf
jmp
iret
lods
push
imul
sub
out
lahf
sbb
div
jmp
push
jg
out
in
ret
adc
aad
fcompl
rol
mov
popf
ss
test
jmp
mov
pop
or
xchg
inc
test
lea
or
data16
mov
or
cs
mov
ljmp
filds
push
mov
sub
sub
mov
fld
mov
enter
inc
je
data16
mov
inc
xchg
adc
sbb
movsb
lcall
ds
sbb
xchg
js
nop
loopne
push
sub
mov
mov
lea
popa
out
mov
aam
inc
and
inc
in
out
and
dec
mov
mov
imul
sub
or
inc
xor
inc
insl
xor
adc
cmpsb
mov
inc
iret
sub
mov
or
xor
in
jbe
adc
fxch
jbe
xchg
xor
fxch
call
repnz
scas
hlt
test
cmpsb
add
cli
sub
or
sarb
jecxz
repz
dec
les
sbb
mov
or
sar
push
sbb
xlat
fucomp
in
das
mov
push
pop
push
fiaddl
mov
pusha
es
push
push
ss
insl
lahf
jl
pop
data16
std
incb
imul
sarl
int
push
test
sub
int
outsl
ljmp
sti
adc
dec
xor
pop
push
cmpsb
lahf
adc
ret
adc
cmpsb
mov
xor
mov
mov
xchg
cmp
sbb
xor
push
in
gs
inc
cmpsl
xchg
mov
clc
hlt
nop
push
enter
cs
sti
inc
mov
aam
arpl
and
pop
pop
push
and
rolb
push
lods
fstl
cmp
int
dec
lea
pop
push
pop
sbb
ret
outsl
test
jno
popa
int3
sbb
inc
out
lret
inc
xor
sub
jne
sub
inc
jge
xchg
cmp
ret
and
cs
popf
mov
adc
in
popa
ss
jns
aam
lcall
jg
sar
pop
mov
xor
mov
push
insl
xlat
push
xchg
fdivl
imul
mov
in
adc
pop
mov
aad
std
dec
mov
jp
dec
cld
dec
pushf
adc
sbb
dec
and
xchg
pop
das
int3
push
pop
mov
repz
xor
add
dec
ud1
aad
mov
xchg
aam
test
xchg
js
scas
and
ror
xor
jle
shll
mov
inc
xor
or
dec
and
jns
push
popa
inc
jecxz
sahf
insb
xchg
sbb
or
rcrl
mov
or
push
push
mov
mov
mov
jne
lcall
ret
lock
xchg
pop
adc
push
arpl
push
jg
shll
das
mov
pop
testl
mov
mov
fs
loop
stos
cmp
sub
out
mov
jae
xchg
cli
out
fnstenv
addl
sahf
sahf
aam
cmc
mov
adc
jl
cmp
sub
aam
ljmp
adc
dec
xchg
mulb
xchg
hlt
add
pop
pusha
xor
test
inc
xchg
stc
sbb
xchg
xchg
cld
les
arpl
iret
push
or
das
xor
fwait
cld
mov
or
or
shll
sub
and
mov
mov
scas
leave
sub
inc
lds
ds
sbb
sub
js
jge
int3
movsb
add
and
sbb
sub
sbb
xchg
pop
popa
adc
stos
inc
and
fisttpl
rcr
jg
cmp
mov
pop
lcall
cli
adc
inc
pop
sub
test
xchg
test
movsb
jnp
xchg
fisubs
and
and
or
fldt
mov
fisttps
nop
addr16
or
xor
add
test
repnz
mov
insb
pop
out
je
cwtl
or
cmp
push
pop
iret
fwait
xchg
roll
fsubl
subl
sbbb
lcall
inc
inc
mov
jbe
cmp
lret
imul
mov
adc
nop
out
test
push
outsl
stc
icebp
ljmp
xchg
test
sub
xchg
loope
adc
dec
aam
icebp
movsb
div
dec
lcall
or
xchg
sub
cmp
mov
dec
cmp
scas
xor
insl
xchg
lret
imul
pop
inc
add
or
or
roll
push
jbe
sub
lock
mov
bound
popa
leave
lods
and
test
test
mov
mov
cmp
test
leave
fisubs
pop
and
dec
call
pop
shlb
dec
pop
lahf
pop
loop
and
in
popf
mov
fadds
sbb
cli
in
ret
in
or
cmp
mov
inc
mov
adc
xor
cmpsl
sahf
out
int
mov
mov
jmp
movsl
insl
scas
pop
cmp
cwtl
sbb
cmpsb
or
test
push
clc
movsb
add
lock
cmp
xor
jne
cwtl
or
ljmp
and
test
jp
xchg
xchg
sbb
inc
les
jecxz
orl
push
xchg
and
orb
xchg
push
lods
fwait
aad
fistps
jg
out
or
stc
sbb
sti
xor
xchg
repnz
in
push
test
pop
dec
add
test
inc
cwtl
pop
cmp
arpl
fcmovnbe
imul
loopne
fs
or
and
jnp
cmp
sbb
sbb
mov
xor
cmp
outsb
dec
rclb
adc
ja
xchg
subb
cmpsl
cli
sbb
or
out
clc
sbb
aad
jp
and
mov
dec
lret
jle
nop
in
test
sub
les
xchg
inc
addr16
insl
push
or
xchg
scas
xchg
movsl
dec
subb
or
xchg
mov
pop
addr16
jne
and
aaa
ds
mov
fildll
sub
sub
dec
aad
lcall
into
inc
dec
addr16
sbb
add
fmul
shrl
lods
sub
test
mov
in
cmp
ret
call
frstor
hlt
lret
mov
xchg
inc
aam
or
ret
mov
leave
rcll
adcl
push
xor
lods
mov
adc
xor
ret
pop
lods
inc
mov
and
sub
daa
rcll
mov
lea
lret
mov
rolb
sub
mov
dec
stc
pushf
push
sbb
scas
add
iret
sbb
je
addl
cmpsl
push
mov
mov
xor
ss
stos
test
pop
je
lods
xor
insl
scas
movsb
adc
ds
movsb
je
ss
orb
loopne
fcmovnu
test
pop
mov
add
sbb
add
pop
scas
aas
push
inc
xor
ret
clc
jne
ds
ljmp
push
rorl
mov
inc
aad
in
xchg
adc
mov
mov
xchg
lahf
cmp
mov
pusha
push
jne
insl
cmpl
mov
cltd
jecxz
mov
mov
int
test
lahf
lcall
inc
std
jg
out
test
mov
push
xchg
lock
int3
mov
dec
sti
cwtl
cwtl
mov
sbb
ss
push
push
dec
cmp
fimuls
imul
or
in
xchg
push
subl
repnz
inc
cmp
pusha
aam
xor
fldenv
cmp
popf
in
test
cli
scas
mov
and
outsl
mov
scas
fwait
dec
icebp
jl
xchg
repnz
adcl
je
adc
mov
fcomps
xchg
cmc
les
pop
jae
movsb
jl
ja
test
push
leave
repnz
mov
jle
or
mov
pop
shlb
loopne
push
mov
lea
out
sti
or
push
add
lahf
roll
sbb
jecxz
xor
cmp
inc
into
test
inc
dec
sbb
filds
cmp
mov
sbb
sub
or
cmp
jnp
fsubl
sbb
les
loope
or
movl
stos
rorb
sub
jge
xchg
or
inc
mov
push
adc
push
outsl
cltd
sbb
in
cmc
stos
out
cli
pusha
lahf
sub
insl
ficoml
or
inc
add
mov
xor
push
pop
mov
cmpsb
xor
lahf
das
scas
push
gs
xor
xchg
loop
mov
scas
sbb
stos
repnz
mov
dec
add
arpl
pop
sbbb
push
fs
jno
push
hlt
xlat
or
fcoms
mov
ror
pop
call
outsb
sub
nop
lods
int
lods
repz
mov
xchg
test
add
in
adc
jle
cli
pop
cli
movsl
xchg
add
cmpb
bound
fwait
icebp
adc
cmp
jns
cmpsb
xor
cli
jb
cmp
outsl
xor
aam
pop
daa
ja
pop
orb
call
lahf
mov
xchg
sub
sub
mov
jecxz
enter
sbb
sub
or
stos
mov
pop
icebp
int3
mov
shrb
mov
mov
cltd
je
inc
mov
cmpsl
loop
and
lds
push
int3
dec
sbb
mov
std
movb
and
inc
add
xchg
lahf
push
popf
clc
adc
faddl
push
or
adc
pop
jo
mov
adc
dec
dec
imul
in
or
jne
and
sbbb
cmp
mov
es
popf
popf
mov
mov
dec
xchg
xchg
mov
dec
adc
fisubrl
xchg
or
sti
pop
test
test
clc
cmp
xchg
pop
loop
mov
cs
push
jns
rol
mov
push
jb
icebp
mov
jb
popa
lret
cmpsb
xchg
faddl
jl
scas
icebp
and
fbstp
loope
push
or
push
cmc
int
mov
jge
fimuls
jle
std
hlt
add
fiadds
bound
adc
xor
mov
dec
filds
shlb
xchg
clc
xchg
gs
push
lods
cmc
inc
xor
adc
out
into
and
loop
jb
outsb
fsub
mov
mov
jl
adc
sub
fcmove
push
mov
lds
or
mull
shl
jmp
jl
sbb
frstor
xchg
add
push
dec
lds
mov
or
outsl
pushw
std
jp
movsl
jecxz
and
stos
jnp
jp
in
pop
or
push
inc
lahf
mov
lods
push
mov
test
loope
mov
mov
popf
xchg
movsb
sub
xchg
xlat
adc
lea
or
fistps
pop
sbb
dec
hlt
nop
and
xorb
iret
and
sbb
dec
lods
mov
sbb
mov
fwait
sarb
loope
inc
hlt
fucomp
aam
adc
xor
pop
cli
and
inc
mov
adc
rclb
adc
jle
push
cmp
push
dec
jg
mov
outsl
pop
shll
scas
filds
es
mov
or
add
lret
xor
adc
dec
inc
fwait
arpl
cmpsl
clc
jns
sub
jp
imulb
scas
mov
ljmp
sub
test
xor
into
dec
fxch
mov
into
push
ficoms
pop
xor
jl
jle
sub
dec
mov
je
sbb
daa
or
sbb
jne
cs
dec
int
push
sahf
and
out
jbe
cmp
pushl
repz
movsl
or
loope
pop
inc
rcl
mov
mov
jb
loope
out
adc
inc
or
dec
repnz
mov
push
and
xlat
add
push
jbe
test
adcl
mov
push
sub
gs
xchg
je
fcoms
sti
out
jmp
push
in
aam
xchg
add
cs
cmp
dec
dec
aam
repz
ja
stos
mov
fcomps
lcall
fcom
mov
lcall
jbe
jmp
sub
cmp
sub
aaa
push
sbb
or
xchg
xchg
and
jb
test
js
adc
jp
movb
pop
inc
insl
cld
in
dec
pusha
inc
test
xor
pop
adc
mov
pop
mov
adc
sbb
xchg
push
lea
mov
stos
outsb
inc
push
sbb
pop
fwait
int3
out
cmpb
xchg
in
jae
dec
lcall
dec
out
push
aaa
jmp
push
mov
int3
dec
xchg
lods
pop
movsl
jae
movsb
sbb
ficoms
rclb
inc
adc
mov
sarb
push
scas
fnsave
lahf
lahf
xchg
sub
iret
scas
jbe
mov
mov
fwait
dec
test
enter
fndisi(8087
xor
mov
add
jae
jp
sub
and
xchg
es
aas
popf
in
push
test
dec
fistps
fistpl
hlt
es
sub
jecxz
sbb
mov
ror
xchg
mov
sti
mov
dec
ljmp
rcrb
outsl
bound
push
pop
insb
mov
std
loope
xchg
sub
push
pop
adc
push
xchg
xor
pushf
xchg
cmp
pop
inc
sahf
stos
nop
dec
adc
in
lea
mov
jae
into
inc
lret
movsb
js
test
jge
add
ret
loop
jle
xor
lahf
gs
lock
arpl
lods
pop
shll
xor
inc
push
inc
jnp
test
adc
loopne
mov
rolb
lock
hlt
sti
fbld
pop
pop
push
add
pop
jo
push
ljmp
pop
or
push
add
mov
dec
cmc
push
adc
fldcw
push
test
xor
push
out
inc
movsb
pop
rcrb
hlt
inc
fs
rolb
dec
ss
rorb
push
adc
mov
jmp
xor
and
pop
out
repz
jl
push
mov
std
in
mov
fnstenv
fmuls
fisubl
push
sub
stc
aad
aad
or
mov
or
cltd
xor
and
stos
mov
aas
fwait
xor
mov
insl
xor
in
adc
cmpsb
mov
or
sub
inc
sub
test
ja
jb,pn
std
aad
popf
test
mov
fsubr
mov
inc
cmp
fisubs
add
jnp
scas
cwtl
cmp
incb
mull
fld
pusha
dec
mov
push
and
mov
arpl
inc
mov
xor
and
add
ss
aam
call
cli
lahf
pusha
movsb
and
repnz
pop
pop
into
loop
mov
es
hlt
lods
xor
mov
scas
repz
mov
mov
push
aam
push
shrb
dec
push
lgs
push
jnp
rclb
sub
mov
mov
lock
pop
cmp
mov
int3
pop
lcall
cltd
lock
pop
fwait
bound
cmpsb
repnz
xchg
or
adc
pop
gs
out
lret
jo
bound
xchg
xor
es
pop
popf
jge
push
mov
rclb
inc
jb
sub
mov
mov
add
adc
mov
pop
or
inc
or
in
inc
iret
mov
pop
mov
mov
rclb
sarb
mov
das
add
mov
mov
jecxz
xor
imul
repz
call
dec
adc
push
sbb
movb
imul
js
les
shrb
ficoml
rdmsr
fcmove
push
cmp
stc
cmc
repz
push
adc
add
loope
imul
dec
inc
xchg
ja
jb
scas
and
outsl
adc
hlt
and
add
jle
add
inc
out
inc
mov
pop
dec
or
lods
pop
adc
js
pusha
repnz
sub
inc
pop
pop
mov
testb
cli
out
ret
xchg
out
repnz
mov
imul
rorb
xchg
adc
rolb
mov
insb
seto
fwait
subb
pop
cld
icebp
cli
mov
mov
xor
ljmp
inc
cmpsl
lds
pushl
sbb
nop
shr
xlat
push
mov
cmc
out
loopne
and
sub
insb
push
popa
aaa
mov
pop
sbb
out
jge
ret
xchg
push
and
jb
sti
push
clc
stc
gs
outsl
and
sahf
movsb
aam
lds
jp
push
loop
lods
push
dec
fmuls
daa
xchg
test
xor
mov
es
push
inc
lret
test
inc
mov
int
arpl
sbbb
fimuls
std
add
push
lea
scas
pop
cli
pop
in
js
fcoml
mov
icebp
xchg
sbb
adc
ljmp
pushf
cmp
jge
test
sbb
pop
out
dec
cmpsb
int3
mov
movsb
push
jae
push
jne
in
mov
cmc
add
jo
in
cmp
sub
sbb
pop
mov
cmp
push
test
sarl
pop
sub
pop
andl
fs
cmp
pop
mov
xorb
sbb
xchg
cli
pop
sar
dec
lods
sub
dec
add
mov
and
aaa
jg
mov
jge
jbe
pop
jge
fistl
pop
add
push
add
mov
ds
mul
paddd
mov
int3
imul
adc
mov
addr16
push
outsl
cltd
xor
stos
jbe
icebp
sahf
mov
mov
push
bound
jge
int3
sub
sti
bound
add
mov
push
adc
stos
inc
sbb
fbstp
jg
fwait
loop
rcrb
out
xchg
pop
jno
ficoms
inc
add
xor
cmp
stos
arpl
mov
cmp
jae
loope
bound
les
in
xor
xor
out
arpl
pop
aad
mov
xor
enter
lret
inc
dec
mov
xor
inc
ljmp
cmp
mov
push
push
out
in
mov
jne
add
pusha
repnz
jmp
mov
push
mov
jge
and
adc
jo
orb
fucom
lahf
and
push
das
ds
and
adcb
int
outsb
push
das
mov
mov
arpl
mov
stos
mov
inc
mov
jnp
inc
jns
enter
mov
cmp
mov
sub
imul
inc
sbb
sub
scas
xor
repz
xchg
push
and
inc
push
and
out
push
nop
movl
jmp
lds
enter
nop
mov
and
ret
push
cmp
out
push
idivl
sbb
fwait
fdivrs
mov
scas
sti
dec
mov
xchg
out
mov
nop
or
dec
adc
fdivl
daa
push
or
out
pop
cmp
pop
inc
aad
jg
clc
cmpsb
lock
sub
gs
or
jle
sbb
insl
faddl
cmp
ret
div
adc
es
jecxz
pop
fdivl
ja
and
sbb
sahf
xchg
or
cmpsb
sbb
mov
pop
dec
iret
xchg
out
rolb
push
dec
inc
jns
in
lods
cwtl
cs
cltd
mov
xchg
jb
scas
std
popa
scas
loop
pop
cmpsl
push
sub
and
pop
imul
in
dec
add
ds
mov
pop
mov
ja
sti
jge
test
sub
xor
sbbl
repz
cmc
push
sahf
jge
shrd
cld
jmp
sbb
movsl
adc
push
aam
out
dec
mov
fildll
dec
sub
jle
add
push
stos
bswap
jmp
or
test
xchg
int3
jae
je
inc
sbb
popa
dec
and
data16
in
rorl
test
inc
rclb
in
mov
lret
in
sbb
adc
fbld
aas
pushf
shl
add
cltd
cmp
dec
xchg
pop
inc
mov
or
mov
mov
push
push
shl
out
aas
jo
push
addr16
sub
and
ret
enter
dec
lret
push
add
push
fwait
sbb
inc
push
cmc
xor
testb
cmp
adc
popa
mov
test
push
addl
mov
push
jge
mov
imul
dec
movsl
cmp
jns
sub
pop
and
mov
push
lahf
sub
rolb
ss
mov
shrb
xchg
dec
dec
sbb
sbbb
pop
mov
sub
adc
lock
std
jge
xlat
out
popa
push
aas
dec
lahf
add
daa
jo
or
ss
adc
pushf
fimuls
inc
inc
outsb
out
loopne
aad
lods
add
sub
push
decl
punpckhwd
stos
jns
sti
mov
inc
jns
out
sub
mov
nop
mov
sbb
add
mov
div
addr16
ret
sbb
ds
scas
in
xchg
aam
dec
sub
fwait
pop
es
adc
or
insl
roll
sub
test
negb
fmuls
xor
test
pop
xchg
imul
in
mov
dec
mov
jns
dec
out
lock
push
cmpsl
add
adc
sbb
pushf
jge
loope
inc
add
outsb
cli
adc
int
dec
nop
movsb
inc
ret
cli
sti
cmc
sbbb
inc
push
rclb
fmull
xchg
addr16
inc
mov
push
mov
cmpb
sbb
out
in
mov
in
scas
faddl
inc
adc
jnp
mov
mov
shlb
xchg
pusha
pusha
inc
fsubr
jg
mov
push
aam
outsl
loopne
add
pusha
adc
or
fidivrs
in
push
mov
lahf
popf
push
outsl
repnz
shr
pop
jbe
add
mov
sbb
xlat
into
imul
pop
inc
and
in
inc
pop
xchg
fcompl
repz
lahf
mov
repz
mov
pop
mov
cmp
insb
and
ljmp
push
pushf
testb
cltd
cmpsl
sub
xor
lahf
sub
repnz
mov
mov
sbb
push
in
sahf
into
dec
mov
pop
push
in
mov
pop
xor
ret
cmp
push
in
mov
ss
test
sub
rol
out
divb
incl
dec
test
out
xchg
pop
gs
scas
movsb
test
fscale
or
sbb
xor
clc
mov
hlt
clc
bound
filds
das
sbb
lcall
inc
mov
pusha
stc
cmp
and
pop
jmp
inc
ret
jg
out
xor
out
jno
cmpsb
xchg
jl
push
fcmovnbe
mov
lcall
pop
sbbl
out
lret
int3
addr16
dec
fcoms
cmp
or
pop
fiaddl
filds
inc
mov
jecxz
js
cmpb
xor
pop
in
push
into
push
dec
in
test
add
shrb
repnz
mov
repnz
xlat
pop
icebp
cmp
arpl
ficomps
add
mov
mov
outsl
adc
test
call
mov
jnp
and
mov
pop
fadd
and
cmp
pop
outsl
into
stos
inc
lcall
ljmp
mov
mov
aaa
mov
sar
cmpsb
mov
cmp
adc
pop
int
inc
sbb
sub
mov
ret
sub
sub
data16
in
cmp
shl
xor
fs
pop
xor
cmc
int3
scas
fisubs
shr
xchg
and
cwtl
fisubrs
jne
cmp
pop
leave
lods
xor
int3
sub
xchg
push
insl
adc
loope
jge
mov
cld
in
loopne
xor
in
ds
leave
sbb
aad
repnz
pop
out
ja
imul
pop
loop
stc
cmp
and
in
add
dec
add
ficompl
mov
push
fnsave
pop
push
mov
lods
int
cmpsl
add
test
aaa
or
testl
adc
mov
mov
repnz
inc
xor
ret
call
mov
and
imul
aaa
pop
fnsave
push
aad
push
adc
icebp
mov
xchg
test
jbe
dec
stos
ffreep
jp
andb
fiadds
mov
adc
pop
dec
addr16
push
movsb
lods
mov
adc
sub
stos
test
arpl
mov
add
ljmp
dec
lods
push
cmp
arpl
adc
adc
das
scas
cli
and
and
lahf
lcall
sarb
push
and
cmp
mov
insl
sub
jmp
popl
pop
fdivrl
stc
adc
in
mov
xchg
push
jge
cwtl
daa
jns
insl
sbb
insb
popf
je
or
xor
lds
sub
cwtl
mov
mov
jo
add
ficoms
jne
test
iret
cltd
sahf
lret
or
popa
ds
mov
scas
mov
push
add
xor
sub
xchg
xchg
adc
pop
and
and
push
or
cwtl
leave
push
jne
and
inc
push
aas
xchg
gs
call
in
jl
adc
daa
adc
orl
lret
out
mov
push
push
dec
push
mov
test
jp
sub
fcmovbe
lds
or
inc
into
call
lods
std
push
ds
pusha
xchg
inc
aas
fsubl
cld
loope
xor
pop
or
popa
daa
scas
loopne
ret
out
lahf
inc
mov
and
lds
jecxz
leave
xchg
fldcw
outsl
or
lods
pop
sbb
sahf
sub
pop
repz
insb
add
pop
xchg
pop
sbb
add
mov
sbb
in
jnp
sahf
mov
mov
adc
mov
bound
pop
aas
pushf
push
sub
insb
push
js
xor
or
movsl
sub
out
pushf
dec
jo
into
out
cwtl
insl
aad
sbb
push
sbb
inc
js
inc
push
mov
adc
xchg
pop
or
iret
cmpsl
sbb
ds
stos
cld
xchg
or
add
leave
inc
mov
push
jno
bound
or
cmp
sar
incb
ffreep
jmp
sbbb
inc
fiaddl
stos
out
pop
cli
add
add
in
jmp
sbb
insl
xor
stos
sbbl
jbe
jl
or
ds
cltd
push
int
fsubrl
pop
push
outsb
pop
jnp
aam
jl
jmp
ret
enter
jo
cmpsb
ds
roll
xchg
push
dec
sbb
pop
mov
push
arpl
inc
xchg
xchg
cld
iret
mov
and
add
test
mov
arpl
add
sbb
pop
fwait
sbb
cmp
bound
sub
aam
add
test
aam
mov
jge
xchg
pop
in
push
pushf
jmp
and
push
mov
lea
and
ljmp
fidivl
pushf
iret
imul
lcall
mov
lcall
movsb
mov
mov
rcr
test
mov
ja
mov
pusha
jmp
or
aad
lahf
push
pop
mov
mov
mov
or
cli
add
push
cmovp
popf
push
imul
dec
pop
fwait
nop
or
or
jp
mov
dec
test
lock
mov
adc
and
and
cmpsl
push
lret
pop
lret
clc
adcl
push
dec
jmp
xor
arpl
cmp
sbb
aas
mov
btr
adc
sub
test
mov
push
dec
dec
mov
insl
orl
inc
dec
repz
jecxz
mov
lret
cltd
ret
xor
call
mov
fwait
lock
inc
xchg
xor
mov
mov
loope
push
adc
cwtl
pop
add
mov
dec
inc
jno
lds
mov
push
pop
sub
push
ret
xchg
mov
sbb
xchg
mov
icebp
or
push
jo
mov
in
out
cltd
cmp
rcrb
mov
mov
aaa
std
test
sbb
or
cltd
fnstcw
jns
js
mov
ja
cmpsb
xor
mov
mov
popa
and
lods
mov
lods
push
lahf
out
lahf
mov
add
test
mov
addl
add
mov
mov
add
lods
mov
jo
jb
repnz
popa
xor
cmp
es
cmp
call
pusha
cwtl
pop
inc
add
or
mov
clc
xlat
dec
xchg
loopne
fadd
push
xor
push
sub
lock
add
stc
fxch
lret
cmpsl
mov
xor
repnz
mov
jnp
xorl
pop
pop
fiaddl
dec
inc
ficoms
jge
loop
inc
sub
xor
xchg
aas
out
pop
inc
jl
push
jo
or
push
repz
mov
jae
sub
outsl
in
sbb
pusha
and
mov
cmp
mov
xlat
xchg
das
cli
and
mov
mov
jb
push
and
leave
dec
cs
popa
cmp
add
cwtl
mov
add
fmuls
jbe
lods
jge
clc
dec
nop
adc
mov
jg
jmp
movsb
lret
inc
lcall
sbb
outsb
mov
mov
fwait
into
dec
inc
dec
and
jno
ret
cs
test
sub
mov
test
ja
push
dec
xor
dec
popf
stc
xchg
pop
aam
fsubl
and
mov
cmpsb
mov
push
pushf
mov
push
cli
int
shll
loopne
pop
jge
mov
sbb
std
enter
int
in
sub
lock
and
std
clc
add
ja
push
mov
push
je
mov
push
push
or
lret
jbe
mov
lods
enter
xor
and
xchg
jle
movsb
mov
mov
push
push
int3
out
popa
in
and
mov
cltd
aam
mov
cmpsb
inc
icebp
les
push
es
sti
push
xchg
and
cmp
inc
jo
or
push
ljmp
scas
sub
lock
and
out
ss
push
push
test
sbb
xlat
cmpsl
mov
sub
jne
loopne
test
frstor
shrb
stc
push
pop
lea
inc
aas
dec
and
pop
cmc
cmc
cmp
movsb
lret
lods
pop
andb
cmp
jbe
mov
dec
shll
incl
lods
sbb
push
pop
lods
aaa
outsb
roll
xchg
js
inc
imul
aas
inc
sbb
pop
dec
mov
jns
adc
pushf
jge
or
lock
fisttpl
rcrb
lds
scas
add
pop
pop
arpl
adc
push
sub
cmp
mov
mov
push
stos
das
dec
mov
mov
sub
add
dec
mov
xorb
sbb
jg
popa
cld
imul
push
addl
mov
add
idivl
aaa
push
mov
mov
das
xor
sti
fisubrl
sub
jl
mov
and
sub
cmc
pop
jmp
pop
negb
inc
dec
aad
cmp
mov
xchg
pusha
sub
dec
outsl
cmp
ds
cmpsb
add
mov
xor
aaa
jle
adc
and
outsl
mov
adc
push
push
cwtl
imul
xchg
enter
pop
icebp
pop
mov
int
addr16
fmull
xchg
or
shll
movsl
icebp
mov
mov
inc
xchg
test
mov
xchg
inc
repz
cld
fisttps
std
sub
push
mov
or
outsl
aas
jp
mov
sbb
xchg
cmpsl
lret
xchg
pop
adc
and
xorb
mov
push
pop
xchg
out
shrb
stc
ret
pop
inc
and
pop
inc
outsl
dec
and
mov
xor
lds
stos
adc
insl
xor
idivl
cmp
adc
ret
sbb
adc
inc
mov
jnp
aaa
sarl
ret
and
aad
or
lret
or
push
lret
inc
pop
dec
rcrb
mov
sub
mov
mov
or
and
mov
adc
nop
or
jge
pop
testl
fdivrl
xor
and
xor
sbb
js
int
fsubs
xor
insl
push
push
subb
pop
mov
cmp
fldenv
inc
lahf
andb
popf
inc
sarb
test
rorl
push
rcll
imul
mov
mov
and
cli
dec
push
cltd
test
fwait
daa
rol
into
lea
inc
adc
int3
xchg
inc
inc
cmpsl
adc
mov
and
or
in
mov
sub
xor
jo
pop
cmp
in
and
aad
inc
add
xchg
jl
cwtl
adc
roll
scas
dec
cmp
pop
pusha
lcall
sub
lret
fcomps
cmp
mov
bound
xor
jbe
jmp
and
lcall
adc
daa
in
out
sub
sbb
popa
inc
dec
inc
cmp
ret
inc
mov
xlat
push
stc
fbstp
mov
pop
jmp
push
pop
pop
pusha
sbb
fnstcw
les
inc
xor
pushf
outsl
inc
xchg
pop
mov
xchg
xor
pop
or
testb
fdivr
bound
jo
jmp
mov
enter
lret
cli
icebp
jge
rorb
std
add
leave
adc
mov
or
inc
jbe
inc
dec
cli
enter
int
ss
push
xchg
or
adc
jno
insb
insl
es
lret
sbb
inc
leave
inc
daa
aas
shlb
mov
push
test
mul
call
jecxz
and
daa
mov
dec
insl
mov
push
sbb
push
or
jb
stc
outsl
dec
xchg
repz
add
data16
adc
jnp
nop
pop
inc
mov
scas
loopne
push
data16
push
cmpsb
out
iret
mov
dec
mov
call
fs
inc
mov
hlt
mov
fmuls
les
out
pusha
int3
jbe
jnp
out
pop
ss
pop
pop
cmp
add
ficompl
aad
out
mov
or
es
jg
ficoms
push
gs
into
cmp
sub
push
lds
fcompl
cmc
ficomps
sbb
cwtl
dec
enter
lahf
and
dec
aam
push
pushf
sbb
cmc
and
mov
cwtl
xchg
fwait
add
sti
in
push
jmp
subb
popf
jbe
sub
arpl
xor
mov
mov
arpl
sbb
and
or
adc
mov
test
and
rcr
out
imul
pop
pushf
mov
sbb
mov
cmpsb
or
mov
push
jnp
adc
pop
pop
jnp
enter
in
mov
push
adc
add
and
mov
sub
cli
pushf
or
sbb
adc
cli
int
jnp
xlat
rol
sbb
testb
lea
daa
adc
mov
dec
pop
adc
loop
mov
jb
scas
movb
add
adc
cltd
lret
xchg
cld
cmc
cmc
in
mov
mov
jl
shrb
pop
into
iret
mov
mov
ss
fdivs
add
imul
push
in
mov
and
jl
pop
xor
push
mov
add
mov
sub
mov
jge
pop
sbb
jns
pop
lods
andb
call
pushl
mov
jb
scas
lret
cmc
rolb
mov
lret
into
insb
jbe
jb
fnstenv
jae
gs
pop
aas
inc
add
ljmp
xchg
enter
data16
lcall
mul
fsubrl
out
aaa
pop
stos
bts
insl
loopne
decb
mov
bound
push
iret
cmpsb
xchg
aad
add
cmp
lea
add
push
add
clc
mov
lret
add
fsubs
out
shrb
xchg
jp
insb
jecxz
inc
pop
enter
cli
jmp
inc
aas
outsb
and
jne
lock
idivb
inc
lahf
adc
xor
test
andb
add
mov
or
mov
sbb
enter
outsb
stc
lcall
daa
shll
fdivrs
int
or
xchg
adc
mov
add
xor
mov
fld
mov
subb
dec
push
out
arpl
bound
loope
stos
insb
clc
mov
enter
push
lret
xchg
cli
inc
cmp
or
push
les
in
jno
out
or
jno
pop
jmp
orl
insl
xchg
out
rorl
mov
sti
mov
xor
repz
sub
sub
pop
push
lods
jge
test
ficomps
aad
push
rep
or
sub
pop
loop
push
cmp
nop
jb
leave
or
dec
xorb
sbb
dec
ds
dec
imul
clc
xchg
sbb
xlat
dec
push
cmp
ja
fdivrs
sub
adcl
inc
mov
iret
inc
addl
outsb
sub
xor
mov
bound
jo
imul
xor
clc
and
ds
cmp
cld
xchg
xchg
mov
mov
dec
ljmp
imul
jo
mov
int
mov
dec
sbb
aam
or
mov
xor
dec
sbb
inc
cld
lret
int3
mov
pop
jle
cld
and
sub
push
lds
lret
iret
xchg
inc
rorb
dec
mull
shll
out
cwtl
cltd
dec
cmpsl
mov
xor
add
jmp
jnp
aad
mov
mov
mov
jp
jb
xchg
jecxz
mov
lds
inc
add
sbb
xor
lret
dec
dec
jbe
cmc
dec
adc
mov
mov
fstpt
xchg
scas
adc
lea
sbb
add
jno
cs
sar
sub
cmc
out
mov
out
movsb
jae
les
or
fimuls
fs
sbb
jp
pop
xchg
or
xchg
in
or
xor
mov
cmp
sahf
mov
dec
sbb
add
pop
das
inc
push
sbb
mov
and
leave
sbb
push
add
icebp
repnz
gs
aam
lods
sub
dec
mov
daa
aaa
jns
roll
jbe
add
lods
sbb
or
bound
lcall
mov
mov
imul
loopne
sahf
loope
movsl
mov
jle
test
pop
dec
addr16
aas
das
jl
mov
xchg
xor
fcmovbe
les
fs
shll
jnp
std
gs
dec
fsubrs
ret
cmpb
pop
push
mov
mov
pop
xchg
jbe
mov
outsb
cli
rolb
xchg
mov
mov
ja
xor
in
stos
dec
push
js
in
sub
xor
pop
mov
cmp
decl
mov
mov
mulb
js
push
leave
sbb
outsl
iret
sub
xchg
leave
addr16
mov
mov
gs
sbb
int3
push
aas
or
adc
sub
shrb
pop
pop
stc
sarl
cli
outsb
inc
pop
negl
fucomp
lods
lret
xchg
xchg
inc
jecxz
xor
push
iret
test
mov
sbb
in
cmc
push
jns
mov
jecxz
adc
in
add
and
sbb
inc
sarl
loop
xchg
shll
imul
pushf
or
xchg
insl
cs
stos
test
fdivs
cmp
xlat
add
and
xor
or
lds
or
pop
enter
mov
in
jne
mov
lods
or
sti
and
inc
or
in
stc
mov
int
adc
out
inc
test
fnstcw
add
lods
mov
loope
adc
bound
jl
in
xor
or
xchg
fisttps
mov
into
mov
mov
jge
repz
fcompl
adc
cwtl
xchg
xchg
dec
mov
ror
icebp
enter
xchg
xchg
mov
aam
fdiv
inc
out
sbb
mov
mov
mov
les
pushf
ret
mov
dec
aad
mov
repnz
test
out
lds
pop
ret
adc
js
xor
jl
dec
jae
pop
xor
clc
xchg
jns
sub
ror
leave
mov
outsl
adc
insl
sub
addb
mov
push
and
arpl
loop
xchg
sti
mov
les
or
inc
cli
fs
cld
ljmp
gs
sbb
or
xor
mov
mov
imul
ret
outsl
movsb
sub
call
mov
xor
adc
ljmp
sbb
pushf
add
lret
leave
in
pop
fbstp
les
lahf
mov
dec
sbb
sub
sbb
sub
aaa
lcall
lret
mov
inc
xchg
inc
sub
bound
in
cmp
stos
lahf
roll
out
sub
lea
lret
loopne
pop
xor
push
adc
xor
xor
popl
dec
jae
inc
xchg
or
dec
inc
rclb
pop
or
push
adc
push
inc
mov
scas
and
ret
pop
mov
lods
xor
mov
daa
das
aam
and
loop
rcrl
xor
dec
add
jmp
add
pop
scas
lods
aam
dec
call
sti
push
pop
add
bound
push
or
es
loop
sarb
test
es
cmp
call
cwtl
in
cmc
mov
xor
cmp
mov
ljmp
adc
mov
push
or
out
sub
test
fldt
test
jne
push
loop
pop
jno
repnz
mov
dec
mov
dec
fisttpll
xorb
push
dec
sbb
add
or
lods
push
pusha
imul
sbb
push
inc
aaa
stos
insb
lret
test
ds
pop
clc
pushf
cld
int3
insb
pusha
xchg
imul
loop
dec
hlt
sbb
fmuls
cmpsl
and
int3
mov
or
jo
xchg
adc
lret
rorb
inc
gs
pop
ds
into
pushf
push
mov
clc
scas
and
test
pusha
lds
xchg
test
or
add
mov
jl
out
cld
cwtl
add
es
or
int
adc
xor
fmul
ljmp
and
aam
arpl
and
xor
xor
or
xchg
aas
insb
pop
dec
inc
clc
jb
jnp
mov
aaa
ljmp
inc
or
jle
es
mov
jle
jae
adc
fsts
add
insb
sarb
movsl
xor
iret
mov
movsb
sbb
fs
out
sub
mov
cmp
xorb
icebp
clc
in
pop
imul
aaa
ljmp
jns
test
mov
in
adc
ret
xchg
gs
insl
out
in
dec
lcall
pop
push
xchg
stos
mov
jmp
sarl
jne
into
adc
pop
data16
fbstp
pop
ja
sub
out
or
xchg
add
clc
dec
pop
pop
rcll
cmp
leave
iret
ss
addr16
adc
lods
dec
mov
mov
and
mov
push
and
mov
inc
add
xchg
jecxz
icebp
adc
push
mov
adc
jmp
std
or
sti
dec
lds
jbe
xchg
xchg
sbb
sar
stc
adc
cltd
sub
test
lods
sub
push
nop
jne
push
insl
loop
lcall
add
mov
adc
cld
push
fwait
cmpsl
adc
pop
mov
inc
lret
pop
cli
dec
sub
ret
rcll
test
fbstp
inc
outsl
loopne
xchg
jl
sarl
mov
adc
shll
es
sbb
in
imul
xor
and
inc
mov
orb
pop
jno
sbb
fcmovb
ffreep
aam
pushf
push
mov
pushf
ret
loopne
sbb
leave
mov
and
jle
js
cmp
mov
mov
inc
dec
loop
xor
push
movsl
push
cmp
pop
lods
fsubr
push
gs
pop
push
lods
loop
dec
mov
lret
push
arpl
out
xchg
cwtl
lds
fwait
jg
push
movsb
jns
push
mov
mov
dec
cmpsl
xor
inc
add
out
xor
fdivr
cmp
popa
mov
jno
add
bound
mov
in
in
nop
scas
insl
mov
rol
push
pop
mov
dec
pop
mul
sub
inc
xor
xchg
lahf
and
mov
and
mov
movsb
xor
and
movsb
xchg
fdivrl
xor
mov
scas
inc
outsl
inc
mov
mov
in
addl
adc
mov
cmc
pusha
es
icebp
dec
cmpsb
xchg
fdiv
push
daa
scas
mov
cs
fdivs
push
imul
popl
roll
out
mov
pop
jno
loopne
mov
xor
sbb
aad
bound
cld
aad
xor
imul
push
pop
mov
adc
push
push
dec
mov
jno
repz
jb
add
prefetchw
data16
jge
cwtl
repz
cmpl
add
sbb
in
push
add
push
jae
xchg
dec
test
roll
test
popa
ss
hlt
dec
test
push
sbb
ror
sbb
mov
lods
leave
stos
push
and
mov
movsl
sub
push
insb
cmpsb
jnp
mov
mov
stc
pop
and
dec
shll
outsb
inc
mov
cmp
nop
fimuls
aad
inc
add
xchg
sbb
mov
in
sub
mov
or
sbb
or
mov
sbb
add
nop
sub
push
or
loopne
ret
arpl
and
pop
cmp
xchg
xchg
cli
out
cld
data16
sub
pop
sbb
lahf
sarl
sbb
call
mov
in
cmp
add
iret
mov
mov
xchg
test
and
inc
es
adc
aas
loope
pop
imul
addb
call
inc
insl
les
xor
cmp
rolb
movsb
in
pop
insl
and
mov
rclb
in
dec
jp
push
sub
xchg
test
mov
cmp
lock
push
dec
icebp
jae
mov
add
cmp
pop
leave
pop
repz
ja
mov
and
push
insb
pop
ret
dec
mov
loope
clc
iret
lods
pop
xchg
xchg
sbb
repnz
jno
mov
cmpsb
sbb
mov
jecxz
jle
icebp
xor
daa
inc
push
sub
dec
insl
loope
dec
std
in
mov
dec
ds
jo
mov
mov
mov
scas
add
rcrl
mov
adc
mov
jne
cmp
int3
sbb
imul
cmp
mov
inc
xchg
pushf
sbb
mov
inc
dec
ret
lahf
stc
push
xlat
sbb
push
xlat
movsb
ret
out
jne
push
xor
push
std
mov
push
jg
dec
sbb
lahf
adc
mov
sti
in
dec
mov
push
sbb
add
fbstp
cmp
imul
dec
mov
insb
xchg
data16
lods
sbb
cwtl
adc
repnz
js
inc
test
add
dec
inc
in
cmp
sbb
xor
xchg
mov
jp
adc
mov
lret
add
pop
je
and
dec
mov
sbb
repz
add
rep
mov
cwtl
jmp
pop
mov
xchg
std
movsb
cmc
rcll
push
je
jnp
sbbl
mov
pop
jno
adc
jns
jge
push
test
inc
aas
sbb
sub
mov
das
jb
add
orb
ret
mov
sub
out
adc
movsb
cld
jne
sbb
jmp
push
sub
or
xchg
dec
jg
xchg
or
ds
nop
lds
cli
add
fldt
hlt
push
sub
out
cli
mov
adc
rorb
insb
cmp
add
icebp
rol
add
mov
and
xchg
addb
test
fwait
cmpsl
aad
fcoml
jns
sbb
cltd
imul
sub
or
insb
mov
jecxz
fists
mov
sarb
imul
inc
or
sbbl
hlt
add
scas
shl
or
mov
add
fndisi(8087
pop
lea
imul
xchg
xchg
adc
cmpsl
cmp
mov
push
inc
pop
shrb
sti
sahf
adc
jo
jb
pop
in
and
xorb
std
push
mov
or
in
ljmp
jo
or
test
test
femms
lods
jg
xchg
jp
scas
sti
aam
jbe
xor
pop
inc
and
test
movsl
pop
xor
popf
cmovns
daa
pushf
mov
cmp
push
mov
fdivs
dec
movsb
mov
pxor
xor
jb
push
xorl
xor
bound
jg,pn
sbb
mov
je
mov
fldt
jb
jae
or
cmp
lods
push
and
ss
cmovo
sbb
xchg
fcompl
mov
jge
es
stos
fs
fbstp
sbb
rsqrtps
xchg
and
mov
cltd
push
fsubr
dec
adc
cs
and
mov
test
fcomp
push
jle
sbb
repz
sub
fstpt
test
lea
cmp
rcll
dec
fcoml
rolb
inc
dec
es
outsl
and
push
aad
pushf
out
dec
dec
pop
cmp
data16
ljmp
mov
cmpsb
fcomps
sub
push
out
data16
aaa
mov
or
cmp
jmp
out
inc
movsl
cld
xor
mov
call
xchg
sbb
pop
hlt
jle
adc
xchg
adc
xorl
push
push
mov
jmp
inc
inc
sbb
or
fnstcw
push
mov
or
xchg
jge
xchg
xor
or
jo
sub
pop
jmp
dec
cmp
in
ficompl
push
out
xchg
jno
leave
loopne
jnp
cmp
mov
inc
mov
test
xchg
movsl
xor
in
add
push
cmc
mov
sbb
push
xchg
cmp
or
dec
and
dec
pusha
popa
add
pop
xlat
call
int3
pop
cmpl
cmc
jnp
insb
push
scas
push
and
adc
fcmovu
test
orl
cmp
jecxz
mov
test
or
das
mov
imull
inc
call
or
ljmp
xor
rclb
xchg
adc
adc
dec
fcmovnbe
push
jecxz
hlt
dec
cld
sub
lods
pop
jmp
sbb
ret
fs
in
pusha
ss
or
test
xor
mov
sbb
jne
mov
mov
in
out
xchg
cwtl
clc
xchg
jns
push
stc
sbb
jb
pusha
inc
sbb
jns
adc
gs
jmp
dec
mov
xchg
jae
sub
sub
and
or
add
push
div
jg
lock
sbb
sub
daa
cmpsb
adc
push
push
jns
sti
push
mov
mov
or
cwtl
mov
daa
je
jns
aad
mov
pop
dec
push
imul
mov
sbb
icebp
loop
pop
icebp
and
jbe
pop
popa
bound
jo
cmp
push
fldt
out
in
or
iret
add
inc
add
mov
push
int
cmpsl
xchg
mov
pop
loopne
fisttps
inc
xchg
sub
or
insl
mov
or
xor
mov
xor
adc
ror
cltd
or
add
adc
mov
imul
mov
mov
mov
inc
push
icebp
dec
mull
pop
cmpsl
fimuls
in
inc
and
bound
pusha
mov
push
jle
mov
jno
rorb
sub
sar
fadds
xchg
mov
adcl
adc
data16
push
arpl
jp
mov
xor
adc
loop
sbb
sbb
sti
cs
add
rclb
mov
sub
push
bound
add
sahf
mov
jp
cmc
fwait
cmp
pop
lcall
jp
or
cld
aad
mov
jp
sarb
lds
dec
mov
sub
jns
lods
std
movsb
cmp
inc
outsb
ljmp
sbb
nop
andl
push
and
push
in
stos
and
out
push
mov
enter
push
xchg
and
lods
inc
dec
fdivrs
ret
loop
cs
in
push
inc
push
push
aad
insb
sbb
push
jnp
scas
nop
push
or
pop
jg
mov
stos
call
xchg
pop
inc
ss
fsts
adc
push
mov
je
aas
add
filds
enter
dec
or
js
xchg
mov
push
icebp
cmp
xor
mov
xchg
int3
adc
inc
insl
gs
dec
dec
mov
loop
push
in
jbe
insb
push
jecxz
inc
jl
jg
sbb
sbb
popf
push
xchg
push
call
scas
mov
test
aad
mov
outsb
push
fadds
push
mov
adc
jns
mov
fmull
push
int
add
xchg
dec
test
pop
cmpb
in
xorb
jbe
mov
mov
or
lods
mov
mov
mov
sub
sub
xlat
sbb
mov
rolb
add
jnp
mov
movsl
push
inc
fisubl
mov
lea
pushf
pop
mov
push
jle
xchg
outsl
lret
dec
arpl
jle
and
sbb
inc
fwait
dec
jo
mov
in
dec
jns
cld
mov
cltd
fwait
xchg
push
adc
mov
les
ret
xchg
pop
and
pop
adc
aas
xchg
xchg
xor
push
add
jmp
aad
js
out
movsb
sahf
out
pop
cmp
jle
stc
jne
hlt
push
sbbl
in
mov
test
pushf
cltd
daa
cwtl
bound
filds
cmp
jmp
cmp
mov
mov
sbb
loopne
movsl
sbb
cmp
mov
fsts
sarb
mov
insl
mov
sub
mov
inc
insb
aad
outsb
fldcw
xor
add
jmp
gs
ja
sub
mov
iret
cmp
add
xchg
push
mov
xadd
ret
add
imul
addr16
add
adc
cmpsl
out
mov
mov
fcompl
sbb
std
mov
or
mov
xor
movsb
mov
sbb
xor
fsubl
mov
subl
mov
cmpb
xor
out
jae
dec
push
mov
and
jns
pop
cmpsl
mov
popa
pop
loope
sbb
and
lcall
push
xor
mov
lods
or
mov
inc
xchg
stc
add
jecxz
adc
pusha
xor
mov
jae
faddp
test
pop
movsl
sahf
rorl
test
iret
sbb
mov
in
or
xorb
imul
dec
shl
jmp
sub
out
xlat
fistl
push
lds
aam
shlb
push
jne
pop
mov
js
fidivl
sbb
test
int3
cmc
sbb
dec
loopne
daa
lea
add
jne
lods
sarb
shll
imul
add
popf
nop
jle
jmp
dec
popf
dec
mov
mov
jb
cmp
or
in
int3
add
and
sbb
out
mov
insb
push
jnp
fsubrs
daa
cld
mov
or
adc
stc
ffreep
sub
jb
das
adc
xchg
repz
int
test
fistpll
hlt
push
fbstp
rorl
icebp
in
xchg
mov
mov
je
push
mov
add
add
lcall
fistpl
xchg
test
push
push
mov
xor
push
lret
clc
rorl
mov
cmp
and
mov
sbb
push
aas
jnp
aas
add
sbb
cmp
adc
jge
push
test
or
pop
jg
jl
shll
xor
cmpsb
jae
xchg
add
popa
sub
aam
pop
jecxz
sub
rol
rolb
in
mov
xchg
loop
std
scas
dec
xlat
pop
inc
das
mov
sbbl
push
jecxz
mov
cmpb
pop
inc
aas
lret
rorl
outsb
leave
push
dec
shll
sbb
pop
insl
jl
inc
jno
ret
push
xor
xchg
mov
decb
gs
outsb
adcb
push
or
inc
cmp
push
mov
inc
mov
cwtl
mov
jo
ds
jbe
cmp
mov
movsl
mov
scas
dec
mov
fdivrl
or
subl
jge
subb
cs
push
xchg
or
imul
or
xor
jecxz
xlat
aam
adc
fmul
or
jl
cmp
lret
enter
pop
int
cmpsb
sbb
push
push
pushf
mov
jne
sahf
mov
sub
pop
dec
fs
mov
stos
das
out
cwtl
popf
ja
sbbb
pop
js
je
sub
dec
mov
mov
clc
mov
sub
popa
add
cmp
fwait
repz
sbb
add
jne
mov
insl
movsb
mov
jbe
maxps
dec
pop
sbb
sbb
adc
movsl
loope
in
inc
sub
push
es
ss
lock
cmp
jp
jnp
ja
adc
out
flds
icebp
aad
mov
outsl
sbb
xlat
fsubrl
imul
sub
and
cmpb
int
and
mov
fbstp
shrb
push
mov
mov
je,pn
iret
cmp
sti
xor
push
jo
jl
daa
lea
insl
pop
pop
sub
xchg
sbb
jo
add
pop
mov
pop
sti
outsl
pop
iret
jecxz
lods
insl
or
bound
nop
adc
mov
xorb
daa
sbb
ret
dec
jmp
sub
dec
jg
mov
std
scas
jbe
push
je
lods
int
leave
sub
pop
dec
loope
dec
push
sub
ficompl
mov
out
adc
ja
or
js
aaa
arpl
xchg
test
pop
jb
sub
cmp
inc
aaa
sbb
xchg
adc
rol
and
mov
add
shll
add
int
cmp
mov
nop
mov
pmullw
cli
xchg
adc
inc
int3
cmp
fisubl
lea
ss
pushf
loope
push
jnp
push
sbb
fxch
cmpsb
mov
push
mov
addr16
push
mov
clc
aaa
shrl
cmp
add
or
and
and
loop
add
in
jno
cmc
or
les
sbb
pop
sbb
xchg
and
loop
ret
out
pop
scas
mov
int3
daa
pushf
andb
adc
cli
xchg
into
dec
leave
dec
add
jg
fdivs
pop
push
mov
push
jnp
mov
cmp
ds
pop
jne
dec
lock
sub
pop
fwait
pop
and
mov
xor
mov
xchg
and
popl
aas
test
gs
or
data16
jnp
aam
mov
xchg
bound
xor
and
xor
mov
scas
xlat
adc
xor
jp
loope
dec
mov
mov
es
negb
out
lea
mov
sub
into
cmp
mov
dec
jbe
testl
cwtl
add
mov
sub
jp
aas
in
imul
jo
push
jmp
add
inc
cmp
dec
into
xor
adc
pop
cmp
add
adc
mov
push
call
or
cmp
icebp
aas
mov
jo
push
stos
jnp
xor
xchg
stos
stos
inc
movsl
fucomip
rorb
xchg
pushf
lahf
loope
sbb
stos
test
add
lods
popf
test
shll
add
out
jbe
int3
mov
push
or
add
fistpl
in
faddl
das
add
js
scas
sbb
or
movsl
lret
arpl
jnp
in
stos
pop
ja
cli
sub
and
cmpsb
flds
and
adc
das
xchg
insl
rcrb
lret
pop
cli
jmp
test
outsl
mov
mov
inc
jns
lcall
jnp
ja
mov
dec
dec
pop
and
adc
pop
jo
ds
cmp
cs
xor
cli
out
cmpsl
pop
mov
in
jb
add
pop
mov
cmp
sbb
aad
lcall
adc
dec
in
sub
cmpsl
call
push
add
daa
mov
push
jecxz
mov
pop
pop
cld
push
push
dec
iret
test
xor
lret
clc
lds
repz
cmp
mov
dec
mov
xor
std
and
imul
sub
lret
imul
mov
dec
test
movsb
jle
repz
pusha
sbb
pop
push
adc
mov
pop
inc
or
lret
mov
add
pop
xchg
mov
lea
nop
mov
imulb
sti
pop
addr16
mov
push
data16
je
pop
adc
pop
mov
scas
fwait
inc
cwtl
mov
inc
jne
insl
cmp
test
ds
push
push
dec
cltd
add
jmp
jge
vprotw
cld
jo
addl
mov
xor
sub
cmp
cmp
mov
fistps
xor
mov
jno
or
jmp
sub
lret
xchg
nop
sub
sub
and
sub
ret
sbb
jns
sahf
mov
xchg
int
ja
push
negb
adc
inc
mov
sbb
jg
hlt
lods
cmc
out
cmp
repnz
sbb
add
xchg
fdivrl
test
sub
mov
decl
pop
ret
inc
enter
nop
repz
fdivrs
cmp
sbb
inc
cltd
and
xchg
out
out
dec
dec
into
mov
mov
dec
std
fcoml
mov
test
mov
jb
repz
lret
test
mov
sbbl
and
fcoml
inc
ja
cmpsl
xchg
insb
sbb
dec
jne
lods
fcomps
test
dec
cmp
cmp
pop
testl
xlat
xchg
or
sub
bound
mov
push
xchg
jecxz
pop
and
lods
sub
ja
mov
test
outsl
mov
mov
fmull
mov
ss
cmpb
mov
sub
ja
push
cs
mov
sub
push
sub
push
outsb
outsl
dec
in
mov
jb
adc
xlat
nop
scas
cmp
std
sub
push
pop
pop
or
movsb
repz
dec
insb
dec
sbb
xor
sub
ds
cltd
jns
inc
pop
mov
out
incb
and
cmp
leave
pop
sub
inc
hlt
clc
gs
aas
pop
mov
push
mov
js
sub
or
inc
xchg
jbe
cmpsb
arpl
jge
in
dec
push
lret
jns
xchg
push
sub
sub
sbb
stos
ret
push
enter
or
dec
data16
mov
lods
fisubrs
inc
adc
sub
fs
mov
and
xchg
or
xchg
rcl
adc
xchg
pusha
mov
and
mov
fmull
fisubrs
pop
mov
int
pop
xchg
mov
mov
stos
cld
cltd
dec
jno
push
sub
cmpsb
daa
ret
into
filds
mov
xchg
sub
arpl
and
or
fwait
in
pop
xchg
lret
push
push
and
lret
loopne
pop
adc
and
mov
mov
fisubl
cmpsl
adc
gs
add
mov
movsl
lods
outsl
sbb
jge
sub
movsb
push
data16
mov
push
cwtl
xorl
dec
stos
popf
sub
add
insl
mov
pop
push
mov
hlt
push
in
xchg
out
mov
mov
cmpsb
test
rolb
lods
clc
fbld
mov
ficoms
jno
pop
mov
dec
mov
mov
lds
jne
mov
cmc
cli
lock
and
xor
inc
lock
dec
fs
imul
and
orb
jb
or
leave
and
pop
xlat
xchg
sbbl
add
shrb
xlat
inc
das
xor
xlat
lds
mov
push
mov
fidivrl
push
inc
scas
test
lea
and
inc
mov
xor
xchg
mov
mov
dec
pop
sbb
inc
femms
ret
inc
sbb
popa
ret
mov
sub
add
loop
mov
je
sub
inc
and
inc
mov
push
scas
xor
sub
push
jle
pop
jnp
mov
mov
sub
xlat
sbb
ret
sti
xor
dec
rorl
stc
lods
push
repz
add
cmpsb
mov
test
subb
enter
jae
jns
inc
hlt
pushf
fdivrl
mov
mov
mov
test
aas
call
jmp
mov
imul
movsl
repnz
pop
pop
outsb
mov
pop
cld
dec
push
std
xchg
xor
jae
out
test
sub
test
push
pushf
xchg
jae
subb
hlt
subb
xor
or
jb
push
je
loopne
leave
hlt
outsb
outsb
mov
mov
cmp
cmp
call
cmp
mov
sbb
cmp
sbb
fidivrl
in
push
out
repz
pop
or
adc
call
dec
push
mov
xlat
cltd
sbb
ret
cmc
lahf
dec
cmp
sub
push
in
cmpb
mov
lock
shrb
es
insl
inc
xor
test
jge
stos
push
adc
mov
inc
push
notb
jmp
loop
dec
ret
into
push
sbb
bound
je
jg
bound
and
xchg
ficoms
lcall
adc
lods
ljmp
adc
fstps
sbb
mov
mov
ja,pt
xchg
dec
fs
and
mov
mov
out
xorb
push
and
into
movsl
mov
jg
sbb
adc
jno
mov
mov
cmc
popf
cmc
pushf
xchg
cld
mov
xchg
push
dec
sub
xor
sbb
xchg
mov
lcall
adcb
mov
cmpsl
cltd
scas
xor
inc
test
xchg
push
jns
ja
sti
icebp
jne
fldl
push
ret
inc
mov
pop
pop
sahf
insb
jb
loope
and
xchg
nop
test
push
nop
add
mov
mov
and
pop
inc
test
loop
andb
lret
sbb
push
jle
cmp
les
and
dec
es
in
push
pop
and
outsb
sti
test
and
ds
pushl
sub
ret
aam
rcll
add
jne
xchg
or
push
addr16
inc
cmp
and
jle
gs
repz
sbbb
cwtl
and
nop
in
arpl
mov
mov
cmp
orl
xlat
xchg
in
sub
mov
mov
push
pop
in
pop
mov
sahf
push
int
int3
jle
lcall
pusha
out
jne
mov
jl
lcall
cmc
xor
push
test
sbb
jg
dec
adcb
mov
push
insb
imul
notb
push
or
pop
data16
sub
enter
bound
inc
inc
jnp
test
inc
jl
pop
outsl
shl
jnp
and
test
push
xchg
pop
sbb
ss
cwtl
out
pop
fldl
cmp
ror
test
test
loop
dec
popa
and
inc
and
xchg
mov
cmp
pushf
daa
sbbl
mov
pop
outsb
negb
loopne
xlat
jg
xchg
sub
or
pop
mov
fdivl
add
std
into
adc
add
xor
inc
ljmp
test
jo
or
adc
or
push
xor
jno
shl
rcll
pop
pusha
pushf
stos
jns
lret
arpl
lds
mov
imul
pushf
adc
and
xor
sbb
jbe
cli
clc
jbe
scas
jp
enter
dec
mov
mov
xchg
mov
dec
fistl
jge
xor
pop
ja
sahf
push
dec
iret
cmp
mov
cld
mov
orl
pop
jmp
test
fdivr
fmuls
scas
push
addr16
sub
mov
jge
mov
dec
aam
dec
cmc
je
xlat
pusha
scas
or
push
leave
cvtps2pd
cmp
fs
and
mov
addr16
cli
and
popf
jg
mov
cmp
lret
inc
shlb
mov
and
outsl
mov
adc
jg
daa
and
lcall
cmp
popl
cltd
out
sbb
addr16
xor
in
fisttpll
sahf
pop
cmpsl
cmpsl
inc
jno
mov
and
mov
mov
mov
enter
push
in
mov
sti
cmpsb
shll
stos
xchg
or
and
fs
mov
rcll
outsl
inc
sbb
ret
pop
push
jmp
mov
xchg
sarb
xor
outsb
or
sbb
aaa
aad
add
movl
mov
pop
repnz
cltd
lcall
jge
data16
movb
inc
ljmp
pop
sub
data16
push
fs
push
or
shlb
insl
sbb
and
frstor
mov
push
cmpl
jb
inc
leave
xchg
cs
test
adc
filds
lods
cmp
imul
aas
popa
scas
mov
mov
loopne
in
push
mov
fs
data16
dec
aad
popf
loope
aas
dec
cwtl
popf
push
int3
jmp
sub
fistl
lcall
fisubl
jo
sbb
lahf
sbb
sbb
pop
xchg
es
aaa
out
and
adc
pop
aad
js
out
test
sub
fwait
mov
mov
jne
or
pushf
or
mov
in
lds
pop
fdivr
inc
cli
dec
std
hlt
sub
inc
repz
mov
xchg
loop
sub
stc
dec
and
push
inc
and
push
popa
flds
mull
inc
xchg
nop
ds
test
push
push
arpl
cmp
push
std
push
es
pushf
cli
imul
cltd
jmp
repz
movsl
or
jecxz
in
pusha
ss
leave
mov
and
je
dec
pop
jg
data16
out
sbb
jg
hlt
add
xchg
xchg
and
shl
mov
jge
or
je
loop
test
or
outsb
lods
jne
xor
mov
add
push
test
xchg
push
dec
xor
push
ljmp
mov
adc
jge
fbld
push
mov
mov
je
xchg
ret
sbb
mov
mov
loopne
test
filds
mov
pop
pop
fwait
mov
aaa
das
pop
add
es
clc
js
push
rcll
je
ljmp
shr
mov
adc
insb
pop
loopne
add
or
pop
and
mov
jae
out
cmp
scas
lods
sahf
mov
mov
out
inc
rcrb
push
pop
rorb
add
cmp
arpl
fcomps
push
ds
push
mov
aas
cld
mov
mov
sub
jmp
xor
push
dec
je
or
iret
ss
and
movsl
jns
iret
xchg
jb
sub
test
sbb
pop
mov
nop
test
out
sub
ljmp
mov
out
shlb
mov
sub
mov
push
mov
out
imul
adc
loop
vucomiss
mov
mov
aam
mov
je
cmp
xchg
popa
mov
cli
out
mov
jmp
gs
ret
int3
push
dec
hlt
cld
enter
xchg
inc
mov
out
ds
lcall
cltd
divb
out
out
jecxz
fsubrl
mov
js
test
inc
sahf
ja
cwtl
fildll
sub
loope
cmpsl
mov
dec
add
adc
push
jmp
insb
sub
jbe
rcr
and
xchg
and
dec
daa
mov
jo
bound
push
in
icebp
mov
push
push
sub
scas
mov
dec
test
xor
fmull
xor
mov
arpl
sbb
les
mov
sbb
xchg
jns
pop
in
ja
fidivl
cmpl
jae
cmp
mov
jge
and
adc
loope
out
push
push
jbe
sahf
push
negl
mov
lods
test
dec
leave
fwait
nop
insl
ja
mov
push
cli
pop
push
fwait
add
flds
jae
add
sbb
idiv
dec
or
sub
lret
mov
out
sbb
out
test
lods
push
daa
push
add
aad
inc
push
push
pop
imul
lahf
push
jne
add
test
push
add
stos
or
mov
xor
in
andb
ljmp
sub
js
mov
xor
aam
mov
je,pn
cwtl
mov
into
jmp
ret
mov
cmp
or
cmc
push
test
or
xchg
add
mov
pushf
add
push
jo
cmp
or
jge
lea
inc
fldcw
pop
in
fldenv
stc
leave
or
push
shrb
adc
subl
push
pop
mov
pop
jbe
inc
and
lods
ror
inc
mulb
rolb
out
ret
adc
das
jmp
pusha
iret
cmc
and
xchg
jl
inc
in
adc
cs
test
js
sub
mov
popf
fcompl
add
lret
mov
lahf
fldcw
repnz
loopne
loop
out
inc
add
or
add
or
and
lea
daa
sar
sbb
jne
sarb
in
push
jle
out
push
mov
lea
mov
getsec
leave
loopne
movsl
mov
ja
insl
into
lret
repnz
icebp
mov
push
in
mov
jecxz
movl
dec
and
daa
dec
fiadds
dec
push
push
xchg
xor
cmp
add
xchg
in
jbe
sub
std
or
cltd
xchg
cmpsb
push
movntps
insb
and
jne
fistpl
add
ficoms
fcomi
ss
out
jl
xchg
xchg
pushf
xchg
pop
dec
jp
int3
stos
pop
js
aad
test
dec
enter
and
stos
pop
je
pusha
mov
sub
sub
cmp
shl
shl
popf
mov
out
cmpsb
add
icebp
or
push
and
ds
or
aas
inc
sbb
fwait
push
imul
add
nop
push
sar
inc
dec
or
and
inc
pop
mov
push
sbb
add
push
xor
fdiv
sub
inc
scas
movsb
sub
jnp
xchg
insb
daa
icebp
inc
add
movl
or
nop
popa
cmp
rorl
push
loope
xor
stos
int
scas
cmp
lock
insl
out
aad
sub
vpminub
rclb
lret
addr16
rcrb
push
and
inc
cmp
dec
popf
lds
dec
hlt
mov
xor
and
popf
adc
xor
out
or
repnz
out
or
inc
pusha
mov
cwtl
ret
cmp
ror
jae
or
lods
divl
movsb
xchg
mov
jmp
add
in
inc
and
xchg
inc
sub
jg
insl
and
mov
push
testb
inc
loope
sbb
pop
out
pop
pusha
in
xor
rcr
push
adcb
push
lcall
dec
movsb
shl
das
dec
cmp
pop
cmpsb
mov
add
fmuls
int
popa
js
or
xchg
and
ja
xchg
sub
aad
mov
push
repnz
sub
inc
mov
scas
inc
cmp
scas
jp
dec
dec
mov
enter
lock
jbe
jmp
test
rcrb
pushl
cmp
and
movsb
adc
adc
cwtl
out
shl
xchg
gs
push
lahf
push
into
xor
lahf
mov
stc
mov
out
push
ret
mov
mov
daa
loopne
in
insl
imul
das
xchg
cmp
scas
ret
jp
mov
push
sti
or
mov
std
jno
mov
inc
adc
jno
gs
leave
push
add
xlat
mov
xchg
fdivl
xchg
sub
mov
mov
test
xor
nop
repz
cmpsl
mov
in
mov
in
adc
test
xchg
inc
push
xor
dec
je
lahf
popf
inc
xchg
mov
inc
mov
xchg
out
ss
pshufw
mov
mov
call
push
test
inc
push
ffree
cmpsl
mov
adc
inc
add
pop
data16
daa
test
xchg
dec
shll
shll
pop
dec
and
sbb
addb
cwtl
pop
xor
jo
inc
stos
fsubrs
jae
enter
pop
stos
sbb
pop
or
mov
mov
popf
mov
arpl
loopne
fstl
lock
mov
jb
lods
push
std
pusha
add
in
mov
dec
and
sbb
orl
aad
ljmp
pop
and
aas
subb
xor
mov
out
cwtl
in
dec
les
out
cwtl
aaa
cmp
push
mov
xor
addr16
push
and
dec
imul
xchg
jo
movsl
ljmp
fistpl
pop
mov
lds
xor
cs
mov
popf
add
es
sub
push
mov
lret
adc
das
or
or
fnstcw
cmc
push
sub
int3
jae
sbb
jae
out
mov
mov
gs
pop
dec
aam
nop
push
clc
orl
ljmp
dec
aaa
inc
imul
pop
pop
sbb
pop
dec
sub
jnp
out
fldcw
int
movsb
js
sbb
mov
aaa
bnd
adc
adc
ss
add
xchg
lret
and
lock
in
pop
rcl
sub
stc
push
out
jmp
sub
adc
lods
shl
stos
out
push
dec
lcall
jmp
mov
ret
inc
push
rorl
or
pop
int3
in
add
xor
in
push
dec
in
popa
pop
cmc
sbb
in
pop
inc
in
fcomps
outsl
lret
cmp
add
rcrb
xchg
jg
test
addr16
nop
push
aas
fs
lock
or
scas
aam
mov
pop
mov
adc
push
jae
xchg
ret
data16
push
stos
sbb
imull
xlat
mov
mov
js
fsubrl
jnp
je
push
shr
into
mov
les
outsb
pop
lea
icebp
cmp
xchg
and
mov
sahf
sti
scas
imul
outsl
int3
das
loop
sub
mov
push
ljmp
push
mov
mov
xrelease
out
sahf
iret
out
or
in
rclb
inc
pop
mov
mov
and
movsb
cs
jo
lea
add
fadds
adc
mov
dec
ds
add
aad
fstl
mov
scas
sbb
mov
dec
xchg
pop
jnp
loope
sub
sbb
sbb
push
loop
pop
jecxz
cli
aaa
leave
in
sarl
sbb
mov
pop
addr16
pop
mulb
mov
packsswb
mov
push
or
inc
mov
pop
fwait
dec
shll
and
lods
xchg
xorl
xor
push
push
ds
ret
adc
ja
push
xor
paddd
hlt
leave
out
cmc
js
dec
cmpsl
cmp
inc
cmp
push
pop
outsl
data16
push
dec
mov
mov
orl
mov
sbb
ret
rcl
sub
movsl
adc
pop
sbb
enter
repnz
das
in
fdivl
pop
add
cmp
in
cmp
and
fdivrl
mov
mov
pop
push
fcoms
fistps
fadd
ds
cmp
les
sub
cmc
and
xchg
cs
ret
fimuls
sub
inc
mov
cmpsl
pop
sbb
add
pop
in
inc
and
push
push
pop
dec
fnsave
push
adc
sub
outsb
push
bound
push
jle
lock
mov
out
das
push
xchg
jmp
movsl
dec
inc
jge
mov
outsl
inc
aas
push
mov
sti
les
jbe
mov
in
pushf
jecxz
or
xor
daa
pop
loop
pop
mov
ja
jp
neg
cli
nop
cli
push
jae
sahf
push
mov
ficomps
ret
imul
mov
xor
das
js
xchg
push
das
mov
popa
mov
inc
orb
shr
jnp
mov
cli
mov
add
or
cmp
adc
sub
and
jle
jbe
scas
imul
or
mov
nop
lret
pop
and
xchg
enter
mov
and
movl
arpl
mov
push
mov
xor
fistl
add
cmpsl
cmp
adc
jns
and
enter
addl
jno
xor
lret
icebp
xor
sbb
shlb
push
fnstcw
xlat
iret
cmp
fsubp
loope
cmc
mov
adc
mov
ret
pop
xchg
push
testb
mov
test
and
sub
xchg
sub
add
dec
stos
ret
rcrl
sub
inc
cmp
dec
sbb
mov
fucomi
call
dec
dec
inc
test
sbb
jae
mov
xchg
add
sub
ret
mov
mov
leave
sarl
cmp
test
dec
rcll
mov
daa
ds
or
xchg
scas
aaa
xchg
stc
inc
push
mov
scas
add
push
stos
xor
inc
loope
sbb
mov
out
int
adc
popa
scas
pop
inc
jge
mov
mov
mov
xchg
fmuls
pop
in
in
and
mov
cmpsb
test
iret
dec
shll
push
and
dec
les
add
sub
cmpsb
mov
xchg
popa
mov
xor
inc
sahf
outsb
out
add
in
ljmp
sbb
ret
lods
dec
loop
aam
jae
pop
push
sar
jns
cmpsb
and
pop
test
xlat
data16
cmpb
js
mov
ljmp
aaa
shrl
in
dec
push
mov
rorl
mov
and
repnz
cltd
enter
shll
dec
bnd
out
icebp
pop
in
mov
fucomip
lret
aaa
fldt
testl
and
mov
stos
mov
mov
pop
push
cmpb
fcmovnbe
jg
ss
fcoms
or
sub
popa
push
sub
xchg
mov
lcall
jg
daa
hlt
aaa
mov
xor
scas
mov
add
pop
int3
insl
neg
dec
popf
lock
mov
mov
push
scas
cmp
mov
xchg
test
inc
push
out
push
and
loopne
and
ljmp
out
rol
out
xlat
pop
pop
fsubrs
adc
pop
jns
jns
xchg
mov
stos
dec
xchg
add
hlt
push
in
xor
gs
icebp
adc
jns
mov
sarb
out
adc
lcall
out
push
jp
xor
pop
dec
in
xlat
insb
add
testl
mov
test
mov
test
leave
ds
imul
mov
repz
call
push
jno
or
push
inc
push
jg
in
xchg
sub
inc
cmp
ss
inc
daa
enter
decl
push
cld
adc
mov
movsl
mov
outsb
in
mov
add
mov
loopne
jne
lods
xchg
sub
adc
adc
mov
lcall
push
lock
mov
mov
je
add
push
aad
push
pop
notb
or
xchg
jecxz
scas
loopne
scas
mov
fidivl
dec
insl
cmp
mov
in
aaa
movsb
ljmp
pop
jl
cmpb
xchg
and
lret
xchg
pop
mov
xor
out
sbb
push
and
push
addps
loopne
mov
sbbb
in
scas
mov
pusha
jp
cmovno
xchg
sub
ret
mov
enter
jae
xchg
shll
mov
ds
gs
adcb
scas
orl
arpl
push
out
cmp
and
pop
sbbl
test
push
jg
fstp
mov
inc
xor
mov
sbbl
fiadds
fsub
cmp
das
aaa
xorb
adcl
bound
or
mov
xor
dec
push
imul
mov
cmp
or
jmp
inc
daa
lahf
int3
sarb
cmc
call
mov
lea
outsb
cmpsb
leave
push
jp
add
pop
movsl
pushf
cmpsb
cs
mov
mov
clc
aas
fsubl
fcoml
je
test
dec
leave
mov
mov
sbb
or
ret
mov
lods
je
sub
rorb
mov
cmp
fs
popa
out
and
pop
mov
jecxz
sbbl
cs
xchg
int
inc
jg
icebp
jmp
bound
jle
loope
adc
lcall
or
push
push
mov
inc
push
pop
mov
fcmovu
xor
adc
cs
push
add
andl
enter
dec
jns
test
mov
mov
ljmp
fwait
jge
ret
xchg
jno
jnp
inc
cli
sbb
mov
add
xlat
sahf
sar
xor
or
rolb
cmpsl
aam
cmp
cmp
jne,pn
and
sarl
mov
lret
les
jecxz
roll
andl
loope
lods
push
ror
mov
je
jnp
add
jmp
sbb
jg
call
ret
mov
mov
adc
mov
jp
in
imul
or
cwtl
xorb
mov
or
cmp
and
sub
mov
inc
xor
cwtl
sbb
sbb
shll
mov
popa
push
mov
pusha
scas
test
adc
bound
mov
out
push
subl
fldt
mov
ljmp
push
icebp
dec
jl
adc
mov
add
dec
sub
xor
jnp
xor
adc
loop
insl
pop
loopne
fistl
rorb
imul
mov
rolb
xchg
or
int
cltd
repz
mov
sahf
cmpb
dec
and
and
movsl
mov
test
mov
fucom
es
call
add
adc
xchg
xchg
int3
adc
std
jecxz
mov
inc
jle
rorl
sub
fisttpll
hlt
in
loopne
cld
pop
pop
mov
mov
addr16
fdivs
or
sub
lods
sub
sti
div
outsl
stc
sbb
pop
insl
push
xor
xchg
in
hlt
pop
dec
lcall
inc
mov
popf
pusha
pop
pop
and
jb
cs
adc
stc
sahf
mov
mov
add
push
imul
cmc
push
jbe
xor
popf
lods
loope
pop
mov
test
out
rorl
movsb
dec
pop
mov
or
ljmp
repnz
sbb
fcomip
insb
data16
xchg
jge
call
sbb
imul
adcb
fsts
cli
xchg
dec
mov
nop
es
insl
mov
out
jle
xchg
jecxz
cwtl
es
mov
gs
pop
cmp
lahf
fsubp
xlat
mov
adc
cld
mov
sub
mov
arpl
iret
in
push
clc
cmp
pop
adcb
sbb
hlt
push
sbb
xchg
mov
scas
es
mov
sub
pop
fcoms
imul
dec
inc
imul
jl
adc
sub
pop
ljmp
test
lods
inc
pcmpgtw
lahf
push
dec
xchg
adc
add
lock
push
outsl
jno
mov
repz
inc
lcall
out
jbe
dec
mov
xor
iret
cli
xchg
cli
dec
ror
xorb
loopne
sbb
ss
pop
xor
push
scas
push
or
outsl
mov
aad
repz
pop
adc
dec
pcmpeqb
arpl
ja
inc
test
rorb
test
mov
or
int3
mov
push
mov
ss
jecxz
popa
or
repnz
outsl
and
push
sbb
push
jle
sbb
sbbb
and
jae
std
ret
cs
sti
divl
movsl
dec
bound
hlt
xchg
fnstcw
imul
lock
mov
mov
fbld
add
stos
dec
add
test
push
xchg
jmp
sub
out
jns
jle
ror
xchg
cs
push
mov
cltd
pop
jle
push
dec
jns
mov
icebp
or
orb
xor
sbb
iret
inc
std
sbb
lock
jl
dec
mov
in
cmp
out
mov
jns
dec
jl
xchg
push
xor
hlt
mov
enter
mov
and
cmp
sub
stc
mov
or
jmp
mov
addb
xor
ret
std
sarl
stos
sbb
loope
push
adc
or
imul
pop
push
sub
inc
mov
test
push
mov
xchg
clc
lods
push
xor
repnz
sub
dec
xlat
inc
sti
data16
adc
dec
arpl
mov
inc
fmul
mov
pop
push
jl
dec
test
clc
imul
lds
jge
or
push
mov
lcall
vpand
push
inc
in
add
movsb
shll
cmp
adc
push
iret
cmpsl
sub
jb
mov
inc
cmp
inc
xchg
sub
mov
ja
les
push
fistpll
mov
cli
clc
dec
push
int
les
xor
test
and
sarb
cvtdq2ps
inc
add
fs
mov
jmp
mov
outsb
push
push
rcrb
xor
ja
pop
and
lret
out
inc
loopne
and
adc
jecxz
pop
pop
fstl
ss
push
cmpsb
sub
mov
sbb
xchg
pop
loop
jmp
shll
icebp
in
adc
scas
movsb
enter
scas
or
ror
std
fiaddl
imul
xchg
sbb
or
push
push
or
scas
jo,pt
lahf
lock
add
test
leave
mov
xor
scas
adc
xor
dec
push
add
add
das
mov
pusha
adc
pop
outsl
rorl
mov
cld
push
cmpsb
cmpsb
sub
dec
rclb
iret
mov
push
mov
cmp
jge
clc
std
xchg
popa
arpl
fs
push
add
pop
repnz
adc
cmc
mov
adc
fsub
and
dec
push
int
sub
xchg
push
into
and
sar
sbb
jp
jae
or
sahf
mov
fsubrp
add
add
add
rcrl
mov
adc
rclb
or
pop
pushf
je
cli
daa
dec
insb
icebp
pop
jg
xchg
xor
xor
jo
pop
cmpsb
int
les
loope
pushf
shlb
mov
imul
mov
push
mov
mov
sbb
imul
out
mov
std
mov
mov
test
sub
mov
pop
dec
fwait
test
mov
push
ret
inc
ss
stos
push
call
jle
xchg
cld
test
das
jns
cltd
mov
bound
sub
lahf
add
gs
push
xchg
in
and
lret
push
push
xor
ficoml
repz
jmp
and
andb
pop
mov
jl
and
or
ret
repz
sbbl
jecxz
lock
push
lret
je
fwait
dec
inc
out
xor
lods
add
mov
daa
mov
popf
push
lods
xor
jge
adc
jno
push
negb
and
sub
and
lea
sbb
stos
inc
mov
xchg
mov
jp
mov
jle
sub
jecxz
pop
cmc
push
roll
clc
cmp
clc
scas
add
jo
aad
lahf
xchg
adc
cltd
dec
pop
add
jns
mov
or
cs
sub
into
jecxz
push
jmp
fdivl
sbb
dec
rorb
aas
sbb
push
mov
ljmp
pop
andl
xor
jae
mov
mov
jp
push
stos
sub
mov
jge
cmp
mov
nop
out
imul
adc
call
or
jmp
jle
and
sti
push
hlt
xchg
nop
cs
dec
mov
push
mov
adc
mov
sub
mov
lea
inc
stos
out
mov
jae
inc
dec
push
mull
call
xchg
adc
out
mov
subb
or
push
adc
xchg
mov
addr16
cmp
faddp
pop
sbb
or
inc
mov
cmpsl
sbb
mov
pop
in
sub
dec
mov
outsl
mov
cli
addb
into
aad
push
jae
dec
rolb
lods
mov
push
mov
or
int
xchg
fdiv
divl
cmp
jp
cmp
sub
xchg
cmp
mov
xchg
jp
out
test
jae
pop
mov
adc
mov
push
mov
mov
dec
sarl
push
adc
std
les
fisttpll
popa
ds
mov
lcall
xchg
mov
and
mov
xchg
sub
dec
nop
nop
xor
cmp
mov
sub
jns
mov
mov
push
mov
loope
jno
sarb
mov
xchg
add
fmul
icebp
or
and
inc
and
pop
and
jnp
jle
fcompl
int3
or
cli
loopne
jb
insl
inc
inc
ret
dec
jg
stos
mov
inc
rolb
lret
ret
sbb
jae
aaa
add
call
sbbl
or
leave
xor
push
mov
cmp
xor
or
aad
pop
stos
adc
cmc
xor
out
ret
pusha
mov
nop
cld
mov
imul
pop
fisttps
rcll
mov
addb
jnp
sub
ja
push
sub
pushf
jns
and
out
and
push
sub
adc
push
adc
enter
daa
xchg
xchg
clc
icebp
mov
push
inc
mov
ja
push
jle
cmp
inc
call
sub
jne
xchg
scas
fstps
mov
outsb
or
testl
js
imulb
dec
loopne
or
xchg
adc
hlt
fdivrs
or
and
js
add
jnp
inc
and
pop
fisttps
cmp
xor
inc
dec
and
cltd
fnstenv
push
cmp
add
repnz
test
aas
sub
sbb
scas
mov
add
jecxz
jge
dec
or
push
daa
inc
mov
movb
adc
sub
mov
std
mov
pop
repz
sbb
lcall
and
shlb
pop
and
xchg
fidivl
jb
out
stos
inc
push
outsb
scas
push
in
push
and
cmp
adc
jno
push
dec
cs
test
pop
adc
insl
push
subb
nop
cwtl
jg
jle
fldcw
or
adc
mov
incl
jnp
and
std
int
inc
xor
mov
stos
cmp
test
jns
adc
pop
test
insl
scas
pop
mov
cmpsl
inc
daa
and
ljmp
rorl
and
cmpb
gs
scas
mov
xchg
xchg
ds
mov
arpl
loopne
jmp
ja
xchg
jmp
push
ljmp
and
aam
pushf
outsb
fcomps
cltd
cmp
pop
and
mov
inc
dec
dec
in
mov
pop
stos
fwait
je
push
push
push
out
or
add
lds
in
or
ret
xor
mov
jae,pn
dec
mov
jmp
in
hlt
xchg
mov
sub
loopne
xchg
insl
cmpl
and
insl
dec
push
les
testb
dec
stos
fdivs
or
das
scas
ja
lahf
sahf
imul
lcall
mov
jmp
push
popf
popf
imul
ret
repnz
out
lods
inc
and
repz
and
jne
mov
sbb
add
cmp
sub
xor
xor
xchg
jo
pop
mov
lcall
inc
push
xchg
fcomip
jnp
js
js
add
js
and
in
lret
push
xor
mov
aaa
adc
std
inc
push
dec
dec
mov
cmpsb
shrl
adc
mov
and
mov
imul
cmp
xchg
cmp
scas
jae
test
xchg
sar
sub
sbbb
repnz
and
arpl
pop
sbb
jp
sbb
sbb
xchg
pop
sub
pop
jnp
push
or
and
test
sub
mov
add
je
and
lret
loop
in
push
mov
mov
sahf
adc
jns
decb
adc
mov
stc
icebp
mov
into
push
fdivr
test
pop
rolb
or
push
not
lods
inc
in
sub
in
push
jbe
xor
adc
scas
push
jle
cld
movsb
inc
pop
nop
stc
mov
aam
imul
jmp
sbb
xor
inc
sti
out
int3
imul
loop
sbb
leave
mov
in
das
outsl
push
and
outsb
jno
lock
pop
dec
cmpb
mov
ret
sbb
dec
push
aas
and
jp
pop
mov
cwtl
or
cmp
and
in
add
push
fcompl
mov
mov
add
cmp
std
into
xchg
fildll
mov
je
mov
adc
cmp
xchg
mov
outsb
mov
xchg
mov
cmp
mov
cwtl
push
data16
in
test
out
adc
roll
fs
jo
sub
inc
push
sbb
cld
clc
sar
dec
popf
mov
push
xchg
lds
and
jecxz
inc
pop
push
pop
std
jb
rcll
add
sbb
xchg
mov
push
mov
fstpl
mov
xor
testl
nop
cmpsb
xor
or
movsl
outsb
jo
push
lock
cmc
mov
mov
pop
fwait
mov
ds
ljmp
addr16
mov
fdivrs
in
jb
adc
mov
and
iret
rcl
pop
js
sarb
in
lock
jge
rcll
divb
fwait
xchg
mov
xchg
movsb
insl
mov
mov
jbe
push
inc
push
pop
outsb
xor
xor
jecxz
insb
cs
sti
stos
out
or
daa
test
shrl
mov
stos
cmc
inc
dec
add
mov
jae
mov
movsb
mov
pop
sub
lods
push
jne
clc
jbe
int3
cmp
cwtl
or
int3
mov
or
fsincos
xchg
jp
xchg
rcr
stc
out
loope
mov
sub
jae
in
push
orl
outsl
maxps
jbe
in
sahf
dec
icebp
inc
xchg
cmpb
test
push
mov
aaa
lods
aam
and
lfs
adc
mov
mov
pop
jecxz
xor
push
les
sahf
andl
aas
adc
aad
lahf
dec
add
cmp
pushf
gs
stos
fdivl
dec
arpl
unpcklps
stc
leave
mov
cli
xchg
pop
inc
aad
sbb
les
push
cmp
or
xor
loopne
inc
call
les
jecxz
daa
mov
pushf
dec
int3
imull
adc
lret
add
adc
mov
add
int3
push
stos
ljmp
cmp
jnp
lret
outsb
cmc
les
jle
mov
movsl
inc
cmpsl
mov
pop
pop
movsl
or
inc
daa
lret
test
add
js
sbb
mov
inc
jmp
sbb
jg
mov
imul
dec
xor
push
sbb
fisttpll
icebp
pop
ss
fnstcw
cmpsb
outsb
mov
loope
scas
jne
sahf
push
or
cmpsb
mov
push
aam
cmc
pop
mulb
fwait
sarb
cmp
scas
inc
cmp
movsb
add
js
arpl
sub
jbe
sbb
or
adc
and
gs
pop
data16
lea
sbb
insl
fisttps
jp
lret
movsb
data16
jns
mov
push
xchg
fidivrl
loopne
shr
cld
or
cwtl
sahf
mov
mov
add
adc
filds
mov
mov
and
pop
add
xlat
mov
rcl
jp
add
xor
cmpb
jle
mov
xchg
fcompl
popl
inc
test
jno
sub
ficoms
pushf
sbb
repz
xlat
sub
mov
fistpll
or
and
pop
push
clc
sbb
dec
call
in
mov
push
enter
outsl
sbb
dec
adc
mov
xchg
add
stc
sbb
mov
push
xlat
roll
dec
or
pusha
and
insb
mov
push
cltd
and
pop
fs
stos
mov
into
or
mov
and
mov
loop
out
in
mov
daa
xlat
pop
pop
dec
out
je
adcb
and
cmp
loope
or
add
dec
mov
jl
adc
inc
xor
test
sti
repnz
fsts
scas
push
mov
xor
cmp
cmp
lea
cld
xchg
xchg
or
adc
fisubrl
lods
xchg
out
rcrl
jo
jge
mov
xor
push
iret
inc
mov
cmpb
mov
mov
std
rorl
xchg
insl
repz
sahf
push
pop
sub
stc
or
fcmovnb
idivb
or
fisttps
incb
xchg
add
addb
jmp
cmpsl
movsb
xchg
cmp
sub
repz
add
pop
jecxz
lret
xchg
js
pop
cmpsb
dec
ret
scas
dec
pop
aas
test
xchg
jb
cmp
xor
cmp
jbe
lods
push
pop
inc
mov
out
xchg
mov
orl
dec
addl
sti
fcom
ret
cli
push
movb
mov
xor
ret
popf
push
sbb
mov
daa
fs
cmp
sub
das
fisubl
aaa
cmp
movsl
les
dec
fisttpl
push
nop
fs
inc
lahf
cwtl
call
movsl
xor
mov
pop
mov
cmp
dec
out
out
dec
cs
lds
inc
movsl
insl
insl
xor
jb
pop
aaa
stos
inc
adc
iret
scas
loop
mov
je
inc
lods
push
dec
ret
pop
push
push
xchg
mov
addr16
mov
shlb
outsl
nop
mov
cli
xor
iret
xor
pop
test
xor
add
push
incb
je
mov
jns
gs
sbb
lods
xlat
addr16
jge
sub
jmp
inc
mov
in
aas
or
xor
stc
cmpsb
sub
gs
sahf
aad
mov
rorb
inc
pop
lea
jecxz
mov
aam
fistl
push
xchg
inc
cmpb
repz
inc
mov
test
mov
outsl
or
lds
popf
jne
cmc
adc
and
add
in
divb
int
lahf
adc
scas
rorl
out
mov
mov
push
pop
sub
cld
fwait
ja
into
lret
dec
arpl
mov
xchg
fcmovbe
pop
sbbl
inc
fidivrl
test
test
mov
inc
imul
shll
mov
inc
ja
xlat
popa
or
test
and
xor
clc
test
int3
adc
imul
cmp
jle
lods
lahf
lahf
iret
and
sbb
and
imul
fsubr
push
xor
imul
cmpsl
rol
fidivs
pop
loopne
pop
mov
addb
jns
jle
cltd
or
and
and
dec
in
sbb
add
pop
mulb
mov
jle
adc
xchg
stos
lock
sbb
fsubr
sub
fimull
std
or
test
cmp
xlat
imul
loopne
and
enter
dec
jb
orl
pop
in
pop
imul
xor
call
aas
pop
pshufw
sbb
inc
sbb
push
scas
cmpsb
mov
push
adc
aas
and
push
xor
add
dec
inc
out
cs
lea
andl
mov
sbb
mov
xor
or
xchg
mov
out
pop
pop
sbb
aas
jp
fwait
dec
and
fcompl
gs
inc
aam
ljmp
jae
dec
push
testl
add
ret
adc
sbb
jecxz
cmpsb
popa
inc
in
mov
outsb
jp
jbe
lret
cwtl
das
je
mov
pushf
jnp
lret
rolb
mov
cmp
hlt
lods
imul
mov
or
push
jp
in
rol
shll
outsl
fwait
in
mov
testl
cltd
enter
stos
mov
jae
xchg
int
push
iret
and
jl
jge
test
jl
pop
pop
out
and
rorb
add
jecxz
inc
negb
or
lret
jno
hlt
iret
pushf
clc
dec
ret
xchg
mov
out
push
inc
test
daa
ret
inc
jge
xchg
out
pop
das
inc
shll
lock
mov
or
xor
cld
push
or
fbld
inc
cmpsb
lcall
mov
dec
cmpsl
repz
into
add
sub
cmpsb
sub
push
arpl
loop
sbb
pushf
xchg
push
inc
repnz
jae
test
xchg
push
add
mov
mov
fdivrs
cmpb
dec
cmc
and
in
or
adc
or
jns
pop
mov
das
add
xchg
int3
ljmp
xchg
in
mov
inc
dec
adc
dec
fbld
lret
jns
es
jne
shl
jno
lock
sbb
stos
insl
mov
jecxz
pusha
repz
adc
ja
cmc
jo
pusha
imul
mov
out
imul
icebp
in
xchg
pop
xor
push
add
fsubrl
sbb
test
or
and
mov
aam
sarb
pop
mov
sarb
mov
mov
xchg
scas
shlb
push
inc
gs
xlat
inc
nop
lock
or
or
into
shr
jbe
lods
ljmp
in
jg
popa
roll
add
sbb
outsb
je
add
call
jp
cwtl
out
mov
add
pop
inc
ret
adc
dec
mov
inc
das
pop
shl
leave
push
loopne
mov
imul
test
xchg
add
das
inc
jo
sub
inc
js
and
out
shlb
and
pop
fucomip
xchg
push
repnz
pop
dec
jge
pop
jbe,pt
dec
add
pop
push
insl
dec
xor
icebp
jmp
mov
push
loopne
xlat
push
cld
filds
xchg
shlb
pop
add
adc
imulb
jl
fwait
out
nop
insb
mov
insb
rol
aad
popf
jp
adc
push
mov
mov
sbb
cmp
push
shll
fsubrs
dec
add
ds
mov
xchg
mov
aam
repnz
jno
ljmp
xlat
mov
orl
mov
ljmp
xor
sbb
test
jl
cmc
mov
insl
in
add
mov
jl
push
add
ljmp
xchg
js
sbb
mov
mov
sub
ja
adc
mov
ret
inc
fdivs
cmp
test
lcall
sti
xchg
push
dec
cwtl
and
js
adc
cs
sub
fldcw
jl
push
and
push
test
or
jns
cwtl
jge
xor
dec
leave
inc
jmp
or
lods
daa
test
dec
mov
jmp
outsl
mov
inc
inc
imul
imul
mov
add
sbb
int3
mov
or
xor
xchg
dec
dec
cs
enter
lea
shrb
lock
int3
sbb
fs
js
testb
inc
lods
jge
jo
jbe
mov
sub
dec
and
das
fdivl
inc
mov
lods
xor
in
adc
mov
jle
lock
jmp
daa
push
dec
movsl
out
push
movsl
adc
jnp
jle
sbbb
adc
add
scas
in
in
cmp
mov
mov
inc
cmp
repnz
mov
leave
shll
js
rorl
fnsave
fstps
dec
push
cmp
jae
sbbb
pop
inc
mov
cli
mov
push
rclb
in
mov
es
arpl
add
scas
repnz
adc
ds
cmp
lods
cmpsl
mov
lcall
and
adc
leave
fidivrs
jo
stos
fadds
sbb
mov
ret
cmp
sti
mov
cmp
inc
mov
popf
jno
outsl
test
enter
jbe
jle
mov
roll
xor
mov
xor
pop
lret
lods
loopne
sbb
push
mov
push
and
adc
sbbb
push
in
xorb
inc
mov
fidivs
mov
popa
sbb
push
icebp
pop
or
fstps
mov
dec
movb
adc
mov
mov
dec
push
daa
jmp
dec
fsubs
fistl
fcmovnb
sbb
rcl
popf
sbb
and
mov
mov
and
stc
inc
xor
mov
enter
fcomi
and
xchg
jle
push
hlt
adc
push
lods
xlat
mov
mov
cwtl
fisubrs
xchg
les
xchg
cld
fmull
out
das
out
outsb
jecxz
mov
jmp
jae
aaa
lahf
cmc
cltd
sub
inc
mov
and
xchg
dec
mov
push
aas
sub
adc
add
xchg
add
repz
xchg
test
mov
add
cli
cs
dec
lret
addb
inc
sub
jno
sbb
mov
out
cld
bnd
xchg
fldcw
dec
mov
cld
sti
fiadds
mov
xlat
jecxz
add
enter
xor
pop
iret
inc
sub
into
inc
ljmp
inc
stc
outsl
jmp
jae
lea
add
add
add
cmp
mov
push
jno
dec
pop
mov
cmp
and
add
ds
add
jns
xchg
mov
in
pop
lret
push
mov
jb
cmpsb
xor
cltd
mov
sbb
das
pop
int3
iret
add
and
cmc
sub
cmp
push
repz
add
loop
mov
mov
adc
push
repnz
adc
pop
cmpsl
stos
jl
mov
push
scas
out
dec
sbb
sub
rcrb
aaa
lret
imul
std
incl
pop
cltd
and
in
stos
test
andl
jbe
dec
movsl
xchg
rolb
pop
sbb
push
dec
popa
and
test
fnstsw
clc
mov
cs
fstpt
daa
call
ret
push
mov
xchg
pushl
fcomps
xchg
xchg
outsb
adc
test
insb
mov
add
xchg
inc
js
std
mov
and
daa
sbb
js
or
data16
xchg
iret
into
pop
mov
inc
jp
sbb
xchg
mov
push
in
test
repnz
cmpsl
testb
xchg
mov
jle,pn
and
into
adc
icebp
aam
push
fsub
hlt
sub
mov
fs
addr16
arpl
shlb
sbb
iret
add
jl
cli
add
sub
lea
push
leave
push
out
movsl
add
into
out
pop
dec
gs
cltd
cwtl
out
xchg
push
sbb
inc
fidivrs
and
pop
mov
out
push
dec
push
repnz
rolb
inc
leave
or
iret
sbbl
int
leave
mov
or
lock
ja
mov
add
mov
std
mov
sub
enter
shrd
xchg
cmpsl
repnz
loope
cmp
nop
jmp
das
or
jne
pop
mov
lds
xor
movsb
mov
mov
sub
jl
shrb
call
mov
enter
jnp
mov
xchg
hlt
out
movsl
xlat
les
loopne
push
pushf
test
fbstp
mov
imul
aam
xchg
cmp
inc
pop
jno
xchg
sbb
test
cmp
int3
shlb
fsubrs
xchg
inc
lret
and
xor
lahf
sub
js
inc
out
movsb
ds
jns
lods
mov
jl
sub
mov
mov
and
cmp
ljmp
ffreep
jl
movsl
ds
dec
pop
mov
adc
xchg
jge
xchg
enter
dec
xchg
inc
jg
mov
xor
push
popf
andl
ljmp
gs
pop
daa
pushf
mov
insb
cmp
adc
imul
cld
je
outsl
in
ljmp
enter
es
shll
cld
nop
sbb
dec
inc
loop
movsb
mov
movsl
int
sub
xor
stos
pop
das
jns
test
inc
movl
jb
jl
jg
cwtl
xchg
das
or
mov
mov
les
push
enter
pop
arpl
sub
mov
loopne
sub
cwtl
cli
xor
mov
sbb
dec
and
cmp
fdivl
fbld
pop
mov
and
jp
sub
mov
inc
xorb
or
lods
adc
inc
fsubrs
sub
and
cmpsb
mov
dec
and
scas
dec
sti
fwait
xchg
mov
or
pop
aad
lcall
mov
iret
xor
jp
sub
sahf
sbb
daa
jecxz
lds
iret
add
imul
lret
lea
jnp
fisttpll
fs
and
inc
inc
xchg
lods
cmpsb
push
inc
sub
push
inc
sub
mov
push
adc
shll
xchg
xor
jl
int
xchg
mov
xorb
lret
pop
add
xchg
lret
jmp
movsb
push
inc
inc
ret
aaa
mov
jns
loopne
mov
dec
jl
jmp
xor
adc
inc
scas
int
fcmove
sbb
shl
push
in
jmp
adc
test
sub
loop
dec
insb
sti
sbb
aam
je
arpl
lods
inc
mov
hlt
mov
mov
adc
sub
clc
mov
pop
jo
insl
jecxz
stos
add
imul
mov
add
mov
xor
nop
push
mov
add
push
cltd
mov
fdivr
mov
xor
dec
cmp
outsb
out
imul
ljmp
and
pushf
mov
push
xchg
mov
loope
sub
add
stos
jae
mov
int
dec
imul
mov
filds
mov
es
in
xchg
jg
ljmp
or
insl
push
jmp
jb
ja
lret
bound
out
dec
outsl
add
push
imul
pop
cmp
sub
pop
jns
pop
lock
shrb
jp
mov
repnz
or
in
and
adc
adc
mov
out
and
lret
cmpsl
dec
or
movsl
dec
dec
loop
fildl
outsb
sbb
mov
into
addl
cmp
mov
sub
push
adc
mov
inc
pop
jo
and
and
and
inc
mov
cmp
mov
inc
shl
inc
cmp
xor
jecxz
add
xchg
dec
shll
insl
imul
pushf
stos
add
and
loope
repnz
mov
pop
mov
int3
mov
ret
sub
addr16
nop
xor
lret
mov
fstl
adc
push
jle
test
js
push
jle
push
hlt
inc
rol
ja
icebp
mov
pop
xchg
jl
scas
or
adc
jg
pop
inc
jb
mov
loop
imulb
and
and
aam
and
fbstp
imull
sub
push
stos
inc
cmpsl
popa
stos
xchg
jno
dec
sti
add
adc
mov
ret
mov
push
ret
cmp
push
sbb
cmpsl
push
xor
and
mov
or
rcl
and
mov
sbb
vmread
xlat
insb
out
aad
fmull
cld
mov
or
pop
js
mov
mov
ja
pop
movsl
dec
sub
jo
or
xor
mov
sbb
dec
rep
dec
add
dec
push
sti
cmpsb
fwait
imul
lcall
roll
mov
lret
pop
loope
xchg
mov
aaa
xor
dec
ja
lds
push
mov
mov
mov
hlt
pop
xchg
sub
push
and
inc
aad
subl
jb
sub
iret
mov
jae
sub
repz
lock
and
sbb
pcmpgtb
adc
fs
ss
cmp
push
enter
and
test
pop
sub
sarb
mov
ficoml
mov
jbe
hlt
jl
pop
and
adc
push
mov
and
sub
lea
add
sbb
cli
cli
inc
mov
xchg
in
mov
mov
test
sbb
mov
out
cmp
fwait
rolb
popf
scas
outsl
pop
jge
arpl
xchg
mov
and
addr16
dec
cltd
iret
cmp
idiv
and
adc
sub
clc
inc
cmc
cli
sahf
dec
mov
jnp
and
add
out
or
dec
outsb
inc
cmp
xchg
or
ficompl
stc
popa
push
push
lea
lds
sbb
cmp
mov
mov
or
lods
imul
and
aad
jg
jmp
loope
or
cmc
sahf
sub
push
leave
mov
enter
push
flds
mov
sahf
xlat
jnp
loopne
js
inc
sub
adc
and
outsl
ret
xor
fnclex
sub
push
dec
insl
jmp
pop
stos
stos
push
nop
jl
hlt
cmp
push
sub
jp
sbbl
jmp
mov
icebp
jmp
cmp
mov
sbb
mov
mov
sub
cmp
adc
mov
mov
dec
mov
out
sti
or
aas
fldcw
lock
add
sbb
popf
aam
daa
sbb
lods
cs
insl
jne
loope
inc
fmull
adcb
outsb
dec
mov
into
into
jg
xchg
push
fcoms
lods
paddsb
sbb
dec
add
inc
lods
lcall
stos
int3
sbb
and
lock
push
pop
xchg
repnz
addl
ret
ret
add
orl
lret
mov
lcall
pushf
and
jecxz
xchg
js
dec
adc
hlt
fsubs
sbb
enter
sahf
je
mov
imul
imul
dec
cwtl
sbb
data16
gs
lea
pop
scas
test
in
in
test
cmp
sub
xchg
mov
mov
sub
lods
mov
adc
push
out
sub
int3
mov
jle
xchg
jne
xor
adc
mov
fldt
dec
mov
adc
leave
scas
pop
jne
scas
dec
or
mov
fcmovnbe
push
push
jg
xchg
jl
dec
push
stos
dec
push
hlt
cmp
mov
test
and
jns
in
push
shr
loop
mov
ss
aad
fcomip
popa
arpl
out
test
lcall
push
xorl
out
hlt
pop
sti
decb
and
adc
leave
inc
fwait
mov
inc
lret
addl
scas
lahf
xlat
dec
insl
in
lret
xorl
add
int
push
adc
hlt
push
xor
cmp
and
dec
pop
mov
pushf
icebp
jmp
int
subb
psubusw
add
pop
mov
mov
sub
lock
adc
xchg
adc
clc
sub
push
jmp
lret
push
add
call
iret
out
xor
lods
cmp
push
or
pop
repnz
inc
adc
test
cmp
add
test
jbe
push
cltd
xchg
jp
push
adc
or
imul
lahf
jb
inc
inc
aad
lods
pop
pop
sub
shll
out
aaa
push
adc
test
cmp
sbb
dec
test
sbb
movsl
and
scas
sbb
push
scas
cmp
rclb
xchg
xor
lods
rorb
outsl
inc
and
fldt
and
or
cmp
daa
pop
into
pop
clc
lds
clc
fdivrp
pop
adc
pop
jmp
rorb
aas
rorl
stos
inc
cmpb
cmp
data16
pop
inc
in
loope
cltd
cmpsl
ljmp
jp
mov
sbb
mov
mov
imul
imul
inc
sahf
or
leave
pop
pop
ret
fsub
or
outsl
daa
mov
out
test
push
dec
ret
scas
add
xor
push
into
cmp
mov
movsb
or
jge
loopne
in
aam
faddp
and
xchg
jb
lcall
add
jne
xchg
sub
sub
jnp
and
outsb
jmp
fimull
sarb
cmc
xchg
sti
cmpsb
push
sub
adc
adc
jae
mov
fimuls
popf
mov
add
out
int3
or
and
and
outsl
imulb
pop
dec
mov
inc
bound
pop
scas
insl
fwait
adc
mov
fistl
ljmp
sub
fcmove
dec
stc
adc
xchg
cmpsb
jbe
sbb
int3
popa
xchg
test
push
icebp
mov
adc
inc
scas
out
add
cmpsl
daa
hlt
cmpsl
pop
and
adc
inc
test
or
or
xor
xor
in
out
in
pusha
adc
dec
js
cwtl
pop
mov
sarb
sub
cmp
and
lcall
ret
xor
in
jo
fs
cwtl
enter
xchg
add
fisttpll
pop
js
add
inc
imul
outsl
lock
adc
insl
xchg
and
mov
sbb
push
and
icebp
inc
mov
push
pop
sub
mov
pop
sbb
push
mov
movsl
scas
sub
icebp
push
lret
inc
jmp
ljmp
mov
xorb
das
out
inc
mov
jo
jle
mov
and
inc
imul
js
into
js
inc
xor
lods
fsts
xor
sahf
mov
jmp
add
pop
mov
sbb
mov
loope
in
cmp
imul
jne
cmp
popa
sbb
add
cmpsl
ljmp
mov
js
push
xchg
mov
sub
mov
mov
movsl
jbe
fs
add
mov
pop
cmp
fcomi
shll
imul
aad
fadds
mov
fs
mov
sbb
nop
hlt
and
outsb
jno
out
jns,pn
daa
std
ja
fbstp
je
ljmp
inc
push
mov
inc
mov
jecxz
adc
sti
adc
inc
and
xchg
push
loop
mov
or
xorb
outsl
repnz
mov
mov
repz
pop
test
cwtl
shr
adc
lcall
mov
adc
faddl
pop
sbb
xchg
xor
test
out
icebp
sahf
neg
out
jae
or
and
push
and
push
dec
or
xor
mov
das
je
daa
lret
subb
xchg
mov
sub
shrl
jnp
mov
dec
lret
mov
std
sbb
or
loop
orb
or
clc
scas
and
push
sahf
fdivs
xor
mov
mov
sub
adcl
outsl
push
xchg
rclb
xlat
and
xchg
inc
mov
mov
sub
sbb
fcoml
xchg
cmpsb
sub
outsb
push
nop
mov
mov
std
cli
in
sbb
mov
pop
test
lock
test
add
loop
mov
cli
mov
push
and
roll
adc
mov
int
fwait
push
dec
cld
cmp
es
addl
mov
test
xchg
xlat
movsb
pop
sbb
or
ret
stos
leave
ret
mov
or
mov
imul
xchg
rorl
inc
mov
lret
xlat
arpl
or
xor
clc
inc
mov
xchg
add
bound
mov
dec
mov
decb
mov
std
and
arpl
ljmp
mov
stos
mov
xchg
into
stos
xor
jge
fmul
push
cli
les
xor
mov
xchg
imull
push
mul
jp
cltd
jmp
test
neg
push
cltd
stos
add
cmc
mov
dec
call
push
insb
mov
test
jo
fdivrl
and
movsl
orl
testl
cli
adc
enter
push
pop
cmp
xchg
cmc
scas
into
lea
lret
sahf
jecxz
fwait
lods
sarb
enter
xchg
fdivrl
loop
mov
jbe
loop
or
xchg
ret
int
and
dec
shlb
jp
pop
cmpsl
pop
test
out
mov
mov
sbb
ret
data16
stc
mov
inc
dec
jmp
push
lcall
cmp
add
arpl
mov
pushf
lock
push
or
fdivrs
int
imul
out
jp
in
fwait
sbb
fimull
fidivs
lods
dec
loopne
or
jg
addr16
call
lds
iret
loop
add
xor
mov
adc
inc
lods
outsb
pop
lret
mov
jb
xor
fsubrp
adc
or
sar
out
outsb
add
in
std
lahf
testl
test
insl
jns
inc
or
inc
sbb
pop
stc
outsl
jne
in
dec
out
dec
int3
js
cmp
cmp
fldl
or
bsf
sub
dec
into
or
push
mov
call
int3
sub
push
and
fcomps
xchg
pop
cmp
adc
dec
mov
xor
clc
cmpl
lock
out
stc
or
nop
fdivr
mov
sub
in
xor
mov
xchg
fidivs
cli
pop
insl
out
or
in
jb
pop
inc
jne
mov
lcall
mov
sub
call
jo
mov
test
cld
and
lret
call
ficoms
mov
sub
xchg
adc
cmp
sub
popf
std
dec
xor
dec
jnp
getsec
jbe
jns
mov
mov
lret
push
js
fs
cmpsl
out
mov
xorb
mov
pop
jmp
sbb
emms
jecxz
out
push
pop
cmp
or
pop
out
xchg
add
adc
in
mov
dec
aaa
mov
les
imul
gs
movsb
sbb
jae
shl
mov
push
in
fsubrs
arpl
lea
stos
add
shl
fs
loop
ret
ret
popa
push
dec
or
fisubrs
out
icebp
fisubrs
fcom
loop
push
int
adc
test
mov
and
mov
jg
mov
mov
ja
les
int3
ljmp
cmp
movsl
cwtl
jg
inc
mov
cmpsl
inc
inc
pop
sub
xchg
adc
ss
ljmp
pop
lds
rolb
cmp
xor
jne
cmp
out
insl
jo
inc
mov
int
xor
adc
add
mov
mov
jge
fdivrs
sub
jns
push
pusha
fs
adcb
aaa
aam
imul
bnd
add
adc
xor
jle
enter
test
or
std
rclb
push
in
and
adc
xor
xor
test
cmc
pop
out
pop
imul
adc
cmc
jg
add
mov
ficoml
sbb
roll
sbb
jbe
pop
mov
jl
xchg
jo
sar
dec
das
pop
imul
test
push
push
inc
pop
xchg
stc
or
xchg
cltd
pop
std
insb
loopne
xor
cmpsb
int
dec
mov
mov
sbb
fisubl
mov
adc
repnz
aam
cmp
xlat
lcall
cwtl
pusha
iret
in
lcall
jecxz
adc
out
es
jnp
shll
xor
inc
xor
test
adc
rcr
pop
imul
and
scas
adc
int
push
leave
pop
add
sub
mov
add
pop
add
and
imul
jle
ret
icebp
mov
jle
pop
sti
inc
cltd
dec
pop
imul
add
out
dec
sti
js
rorb
scas
mov
jb
pop
movsl
into
mov
call
nop
or
dec
rep
daa
xchg
test
pop
pop
mov
dec
mov
popa
ret
lret
pop
fmul
adc
xchg
ret
sbb
test
push
add
stos
mov
push
mov
add
xchg
sub
dec
test
pop
adc
fstps
test
dec
inc
jno
add
popf
out
dec
les
imul
adc
or
roll
leave
imul
adc
imul
push
jo
xor
and
into
iret
subb
add
int3
fisttps
lcall
adc
jmp
in
xor
out
data16
test
pop
mov
mov
ror
scas
jno
lahf
sti
cltd
cltd
jns
stos
es
push
mov
pop
outsl
scas
nop
insl
ljmp
add
sti
stos
outsl
cmc
and
mov
add
aam
aaa
test
mov
das
xchg
xchg
rcll
mov
cmp
jno
mov
int3
xchg
sub
dec
mov
js
jnp
push
mov
aam
sub
call
jmp
pop
out
pusha
push
gs
cmp
and
out
sahf
inc
xor
hlt
in
push
aad
cmp
xor
fidivrs
dec
orl
push
subl
push
stos
bound
lcall
fnsave
addb
sub
das
dec
and
mov
fidivs
mov
sbb
loop
jo
cmp
cltd
aam
and
in
mov
cmc
popf
or
mov
and
xlat
je
xor
les
pop
mov
adc
fstp
fs
in
cli
pop
jno
addr16
add
xor
dec
sti
cmp
push
and
and
sbb
lahf
sbb
mov
rcrl
stc
pop
fists
je
fidivrl
arpl
push
outsb
xchg
fildl
sub
cmpsb
test
lahf
out
in
push
jbe
jmp
lods
in
roll
enter
mov
cmp
push
roll
mov
in
or
ffreep
loope
jle
pop
sbb
fiaddl
test
in
mov
jo,pn
push
jge
push
cmpsl
mov
in
and
movsl
add
xchg
cmc
icebp
mov
mov
mov
in
ljmp
stc
rol
cmp
call
dec
push
xor
push
ret
xabort
sbb
xorl
cmpsb
add
or
shrl
hlt
loop
adc
stc
test
xor
push
into
mov
test
jp
jnp
les
push
test
and
xor
xchg
fwait
imul
adc
xor
mov
ror
xor
jle
rep
rolb
pop
into
dec
dec
or
in
in
adc
add
dec
xor
cltd
das
sbb
imul
std
std
nop
add
cmc
popf
inc
ret
mov
nop
pop
cmpsb
test
int
outsb
jns
decb
les
xchg
mov
hlt
mov
lods
shrl
adc
mov
cltd
jecxz
jle
in
test
dec
dec
push
cmp
subb
jg
mov
push
inc
pop
arpl
iret
bound
sub
lock
xor
and
fildll
or
dec
out
ret
mov
decb
inc
dec
push
in
roll
adc
sub
sub
xor
inc
pop
mov
rcl
mov
sub
xchg
or
jle
into
inc
fldt
lea
push
scas
mov
sbbl
xchg
icebp
test
das
test
ss
fcomip
adc
push
in
cmpsb
add
negb
nop
rcr
inc
test
fs
xchg
pusha
popa
mov
adc
pop
roll
shrl
call
xor
and
xlat
cmp
addr16
push
cmp
cwtl
ss
inc
push
cwtl
inc
cwtl
add
sbb
test
xchg
mov
lds
sub
aas
jecxz
push
cltd
rclb
adc
test
lods
loop
scas
sbb
aaa
xlat
push
jnp
repz
stos
inc
push
mov
loope
ret
cmp
fdivrl
mov
mov
cs
mov
sbb
pop
jl
icebp
xchg
xor
xchg
jl
hlt
aaa
dec
jecxz
pop
jl
pop
imul
pushf
add
icebp
mulb
cltd
bound
sbb
leave
mov
inc
es
nop
ljmp
mov
test
xchg
outsb
push
xlat
in
and
inc
ret
xor
lock
aas
mov
in
xor
jecxz
insl
adc
or
adc
lea
aas
add
jmp
jbe
dec
inc
adc
push
sbb
push
hlt
inc
negb
std
sub
mov
ret
fsubl
add
adc
fucom
cmp
adc
sub
stc
mov
push
lock
cld
es
popf
int3
scas
mov
cmpsl
ror
cwtl
pop
adcb
adc
mov
or
jnp
jle
enter
imulb
in
add
in
clc
cs
mov
xchg
orl
jnp
adc
jne
sub
pop
fildll
inc
dec
js
push
sarl
push
cli
dec
sahf
call
dec
nop
jbe
or
dec
or
insl
outsl
in
mov
aas
push
and
lret
jae
mov
jmp
ljmp
add
shr
std
fs
mov
call
lcall
nop
xchg
iret
dec
mov
dec
inc
xchg
inc
out
and
push
inc
mov
dec
mov
lret
xchg
les
out
jle
sti
pop
icebp
in
dec
andb
jns
lcall
dec
sub
into
fwait
adc
adc
cmp
test
imul
mov
cld
inc
xor
mov
add
ret
fs
aam
inc
sbb
lods
pop
sub
fimull
sbb
jno
lea
js
mov
xor
push
insl
xchg
inc
leave
dec
push
xor
dec
dec
xor
daa
sarl
cmpl
cli
aas
int
gs
stos
cmpb
icebp
repnz
mov
insb
jno
popf
nop
fistpl
xor
daa
das
sub
xor
das
adc
cmc
enter
push
sub
pop
pop
push
or
mov
pop
in
jno
addr16
je
cmove
subb
idiv
jne,pt
adc
push
pop
jo
lea
or
fadd
or
mov
sbb
jae
dec
add
sbb
idivb
lret
inc
dec
lods
or
ret
pop
fldt
inc
and
leave
add
das
imul
lock
ja
fsubrl
and
cmp
mov
shr
pop
inc
mov
dec
and
mov
fstps
shll
pushf
mov
or
lock
popf
mov
pushf
push
inc
pop
mov
pop
push
dec
call
popa
mov
and
leave
mov
push
dec
mov
sbb
jge
mov
pop
in
pop
and
push
pop
lretw
jae
pop
xor
std
or
pop
aam
mov
inc
xor
or
ja
mov
mov
movsb
shrb
cmp
lods
xchg
jo
cmp
jl
jns
ljmp
push
push
incb
scas
push
enter
scas
test
mov
aad
rep
fadd
mov
aaa
lock
cltd
rorb
sbb
outsb
orb
inc
mov
pop
cli
les
faddl
jbe
imul
loope
and
out
aad
or
add
inc
or
mov
ret
aam
ret
lcall
jae
mov
pop
pop
xor
es
push
enter
lea
jle
cli
loope
cmc
lock
cmpsw
xorb
add
cld
push
call
mov
adc
pop
out
fs
pop
dec
orb
sub
mov
clc
ljmp
std
lahf
jbe
or
cmp
insl
repz
mov
sub
cltd
stos
in
and
pop
add
sahf
inc
scas
fwait
and
and
shrb
shl
mov
cmp
add
pop
gs
mov
fidivrs
dec
dec
mov
or
cli
mov
out
mov
push
data16
lds
mov
not
pop
enter
push
sub
sub
outsb
cmpsb
push
leave
shrl
iret
mov
sti
add
push
pop
inc
cmpl
jno
mov
arpl
push
xor
pop
dec
cld
sahf
and
lahf
scas
mov
mov
lret
sub
mov
xor
add
cmc
push
loopne
mov
lret
mov
dec
cmp
bound
imul
xor
cld
bound
lds
dec
xor
fcoml
and
inc
pop
push
stos
adc
mov
jbe
lcall
inc
push
scas
and
and
adc
in
sbb
jae
and
mov
and
jle
inc
out
dec
iret
adc
xchg
js
in
xor
mov
pop
and
mov
inc
mov
mov
xchg
jmp
dec
mov
int3
xor
cmc
pop
xor
jg
mov
fwait
mov
sub
mov
pop
repz
in
movsl
lret
inc
mov
jns
pop
push
xchg
dec
int
int
insl
push
rcpps
les
xor
orl
mov
add
inc
lcall
jmp
adc
or
xchg
jae
into
push
push
cs
adc
jbe
imul
out
dec
enter
push
out
insb
cltd
add
jb
sub
es
push
mov
sub
sub
inc
leave
lcall
ffree
popf
imul
je
sbb
std
movb
or
shrl
in
sahf
sbb
lcall
jmp
xchg
shlb
iret
pop
xchg
cld
lret
scas
orb
jecxz
push
mov
jo
and
inc
pop
out
and
repnz
inc
pop
xchg
jge
insb
scas
pop
inc
data16
jb
mov
mov
sbbl
loop
fbld
inc
cli
lcall
lock
lock
or
insl
addr16
or
ja
xor
in
or
outsl
testl
push
adc
mov
movsl
cltd
lods
leave
sbb
sub
adc
sub
pop
aad
popf
or
cmp
mov
xor
xchg
cwtl
sbb
fwait
outsl
jge
lret
jmp
mov
inc
or
stos
stos
jecxz
nop
xchg
mov
push
or
jnp
mov
mov
mov
out
cmp
aad
push
xchg
dec
in
dec
gs
cmp
xor
push
push
bnd
out
dec
lods
neg
ljmp
fidivl
rorb
xor
dec
push
insl
and
mov
je
dec
inc
cmp
mov
jp
mov
inc
cwtl
or
push
and
dec
inc
scas
add
cmp
enter
xchg
call
xor
pop
shlb
inc
jo
test
dec
imul
jnp
jnp
sbb
add
push
mov
mov
xchg
or
mov
inc
dec
lea
ficoml
cmp
xlat
jle
cmp
pop
jo
fs
adc
movsl
pop
shll
into
ljmp
insl
dec
icebp
rclb
icebp
sub
cmp
int
fstpt
fs
addr16
lods
stos
test
add
jp
in
mov
enter
stos
jge
popa
inc
push
imul
push
sbb
sbb
in
or
push
xor
pushl
mov
push
mov
or
jl
mov
jl
into
inc
pop
mov
in
stos
pop
incb
mov
pop
sub
dec
in
xchg
leave
dec
push
inc
xor
mov
mov
int
addl
mov
mov
jge
dec
fdivs
xchg
sbb
mov
addr16
inc
movsb
dec
daa
insb
mov
or
dec
xchg
mov
or
jl
mov
pop
mov
dec
icebp
sbb
ds
jbe
jno
ficoml
pop
sub
mov
pusha
fs
cmp
mov
cwtl
xor
aad
imul
mov
loop
sbb
outsl
or
push
add
aaa
pop
movsl
mov
das
hlt
mov
mov
aaa
int3
sbb
and
jnp
push
and
movsl
jb
aad
xorl
cmp
cmpb
lret
arpl
and
mov
mov
sub
xor
and
add
inc
add
test
push
jns
xchg
leave
mov
shl
hlt
jns
push
mov
lcall
jb
stos
sbb
inc
pop
out
loopne
jb
pop
cmp
and
leave
push
das
outsl
push
mov
fisttpl
movsb
mov
cvtdq2ps
in
jb
jecxz
xchg
mov
mov
pop
jno
rcrl
and
rcrb
xchg
test
iret
xor
mov
scas
insl
insl
or
adc
bound
lret
push
orl
and
cmc
nop
mov
mov
push
adc
cmc
cmp
jb
pusha
outsl
lock
push
jg
xchg
or
push
sbbb
in
insl
pop
jae
xlat
ljmp
xchg
adc
xchg
mov
dec
or
jge
pop
les
xor
test
iret
mov
stos
jae
jno
jmp
stc
cmp
pop
pusha
cmp
xor
push
adc
push
loope
fs
leave
stc
xchg
or
std
rcll
and
mov
je
cmp
in
push
out
mov
das
pop
lds
adc
loop
repz
push
xor
stos
and
dec
mov
xor
dec
lods
rcr
jp
adcl
cmp
aas
into
movsl
cmpsl
cmovg
sbb
mov
lret
movsl
int
je
lret
pop
adc
data16
outsl
dec
jns
mov
cmp
cmpsb
push
sar
dec
jbe
mov
push
inc
jb
jp
xchg
xlat
mov
mov
jo
cmp
sti
daa
pop
call
pop
or
idiv
fistpll
pop
int
faddp
arpl
push
mov
inc
mov
adc
popa
jns
sti
push
bound
jae
movl
dec
loop
mov
cmp
pop
jmp
add
fwait
int
int
divl
jmp
hlt
pop
outsl
add
add
add
stos
inc
mov
test
inc
sbb
mov
aas
jmp
inc
sub
fsub
test
push
sub
bound
lods
mov
fildl
inc
lea
jo
push
call
test
mov
stos
pop
push
xchg
test
jns
lea
cli
mov
lret
jo
add
nop
mov
and
pop
lcall
cwtl
incl
xchg
bound
cld
sbb
or
push
mov
inc
lahf
rcrb
psubusw
fwait
lcall
fmuls
and
pop
scas
jnp
mov
popa
jae
add
add
pop
in
push
xlat
sbb
cmpb
lods
inc
ret
fists
cmp
pop
mov
scas
xchg
dec
mov
addr16
cmpb
test
dec
icebp
lock
popf
fwait
mov
sub
sub
and
sub
push
mov
ret
xor
mov
and
stos
jb
pop
bound
sub
jae
mov
enter
mov
mov
das
fldpi
ja
flds
popa
push
or
pop
and
fdivr
mov
sbb
jmp
int3
mov
test
inc
inc
lods
adc
cmp
enter
add
ss
gs
popa
loope
stos
push
sbb
dec
push
and
cli
repz
or
mov
push
mov
push
aas
mov
lods
xchg
orl
or
or
or
loope
mov
leave
mov
jns
ja
loope
jmp
mov
inc
shrl
int3
adc
fadd
stc
push
mov
mov
inc
sbb
adc
push
aas
iret
xor
shll
push
int3
mov
sub
daa
xor
jl
xor
divl
mov
movsb
out
cld
jge
sub
cmpb
adc
nop
mov
pop
mov
mov
repz
and
mov
ror
pop
rorb
push
bnd
push
adc
sbb
inc
call
mov
mov
daa
fisubs
hlt
cs
lcall
icebp
mov
xor
jae
and
cltd
das
mov
mov
stos
dec
push
lods
out
pop
mov
insb
lods
sahf
cld
and
cwtl
xchg
mov
out
xchg
movsb
scas
loop
pop
sahf
pop
mov
or
mov
xchg
jns
pop
push
les
mov
arpl
push
int
arpl
xor
daa
xor
aas
and
push
data16
cltd
push
jl
pop
shrl
loopne
mov
push
aam
jnp
mov
int
or
push
mov
call
loop
clc
xchg
pop
jb
ret
pop
add
out
gs
jae
mov
dec
mov
add
lea
xchg
dec
sbb
push
jmp
fistpll
sub
cmpsl
movsb
add
jg
xchg
fwait
mov
dec
lods
sbb
ret
or
popf
xor
fiadds
sbb
xorl
mov
push
rol
call
cmc
mov
adc
bound
stos
cld
lahf
das
adc
test
sub
push
mov
mov
in
mov
adc
pop
jo
jle
inc
lahf
ret
mov
lcall
inc
in
adc
sub
lahf
cmpsl
and
popa
orb
mov
push
cmp
or
mov
pop
incb
test
and
call
lret
inc
addr16
push
arpl
jl
jnp
push
jo
int
lret
dec
dec
lods
mov
xor
jno
out
mov
rcl
inc
xchg
subb
fwait
dec
and
pop
insb
xor
push
jns
sub
add
enter
aam
imul
sahf
inc
in
jp
repnz
and
sub
pop
dec
sarb
push
jle
jo
mov
lret
xchg
cmc
imul
fmulp
or
ds
mov
adc
mov
addr16
inc
call
cmp
je
dec
loope
mov
cmp
add
jno
gs
lods
loop
and
jecxz
lret
mov
punpcklwd
or
mov
push
push
xchg
adc
ret
cmc
pop
inc
mov
fadds
mov
lock
scas
jle
dec
scas
push
and
lods
mov
call
sbb
les
movsb
xorb
arpl
je
sti
inc
cmp
dec
fidivl
negl
fdivrl
push
rclb
fiaddl
or
into
ret
dec
dec
add
xchg
fisttpl
in
mov
fildl
js
fs
loop
mov
jb
lock
sbb
ss
cmpsl
test
adc
jle
lock
inc
push
dec
outsb
xor
lret
mov
jns
jle
orb
dec
imul
jo
xlat
mov
outsl
mov
test
push
addr16
inc
mov
pop
fs
out
adc
fwait
jno
je
inc
aam
loopne
xchg
stos
add
mov
out
inc
cltd
cmpsl
pop
adc
imul
xchg
ficoms
cli
sbb
mov
aas
cmpsl
test
xchg
pop
ds
mov
jae
movsb
jecxz,pn
test
cwtl
fsubr
mov
pop
add
stos
xlat
xchg
pushl
mov
in
jns
movsl
adcl
imul
push
lea
push
test
cmp
jle
imul
arpl
lds
ljmp
ja
rclb
jl
xor
adc
push
push
ret
adc
pop
lds
pop
push
inc
pop
inc
or
fistpl
sbb
and
sarl
test
dec
jns
scas
sahf
jo
fidivrs
fdivp
pop
pushl
cmpsl
lret
lahf
add
xor
xlat
stos
shrb
je
es
cmpsl
push
ss
enter
jge
shlb
sbbl
idivl
pop
mov
mov
pop
and
sarb
jb
pop
mov
stc
lret
fwait
neg
xor
les
or
sub
cli
adc
fldl
pushf
mov
out
push
cwtl
pop
mov
adc
dec
shl
shll
gs
push
and
aaa
jo
in
or
imul
les
mov
jle
cmp
cs
fildll
repz
dec
rcrl
btr
xchg
dec
hlt
sbb
pop
movsl
mov
jno
data16
jnp
inc
sub
mov
mov
xor
xchg
xor
push
mov
push
jge
setne
scas
pop
lods
jl
ss
push
sbb
cmp
dec
hlt
mov
dec
pop
adc
mov
fimull
mov
cmpsb
fdiv
pusha
pusha
cs
gs
jnp
pop
js
jg
lcall
sub
lcall
adc
jne
enter
mov
cmp
adc
adc
das
add
daa
sbb
pop
adc
pushf
push
xchg
cmc
cmp
inc
ret
add
push
cmpl
das
xor
mov
out
into
repz
pop
outsb
adc
push
popf
loopne
sub
or
pop
test
inc
and
push
lret
fsubr
cmp
mov
mov
lret
sbb
sarl
dec
inc
and
scas
cmp
in
bound
icebp
andb
cmp
pusha
not
icebp
adc
inc
mov
iret
jnp
pop
rolw
in
and
mov
rcr
jle
jge
dec
cmp
xchg
cli
add
sub
call
xchg
sbb
cli
les
movsl
mov
push
addr16
mov
addr16
inc
sti
test
call
mov
lds
push
call
or
rol
shlb
pushf
push
xchg
clc
cmp
ja
dec
push
out
sbbl
leave
adc
out
push
xor
jo
add
push
inc
pop
sbb
pop
jp
dec
xor
insl
int3
fsts
rcrb
cltd
out
enter
add
pmaddwd
aam
mov
mov
mov
dec
ljmp
stos
stc
sbb
xchg
adc
xchg
or
xlat
xchg
lahf
xor
scas
mov
mov
mov
pusha
adc
ror
aad
jbe
mov
add
insl
sbb
jae
inc
idivl
adc
insl
mov
nop
mov
shl
js
mov
and
pushf
ret
pop
jo
dec
or
mov
es
loop
ja
jno
pop
fs
xlat
push
popa
js
repz
fcompl
in
xchg
sub
rorb
fiadds
inc
fiaddl
dec
push
xor
ja
shr
pusha
out
aas
testb
xor
jmp
inc
xor
xorb
cmpsb
mov
out
mov
leave
int
xchg
imul
clc
mov
xchg
push
lret
xor
fwait
mov
mov
jp
movsb
xchg
jno
lea
push
push
pop
cli
pop
pop
scas
inc
cmpsl
xor
inc
cltd
jmp
adc
mov
sbb
inc
bound
xchg
pop
add
pop
aam
frstor
pop
test
mov
adc
adc
sbb
jle
pop
movsl
cmc
scas
jo
test
addr16
negl
lret
cmp
cltd
jecxz
add
and
in
iret
push
mov
dec
mov
pmuludq
pop
popf
cmp
fsubp
ja
inc
xchg
leave
loop
outsb
loop
cmp
dec
adc
dec
inc
mov
cld
cmc
js
push
mov
ficoms
or
sub
and
inc
sub
iret
fyl2xp1
out
shll
jge
jne
and
jne
jle
jb
adc
or
mov
fidivl
adc
push
and
sbb
sub
nop
gs
sti
push
lahf
push
fs
push
stos
and
or
mov
jb
cmpsl
fs
mov
push
subb
inc
dec
or
xor
stos
roll
inc
lea
push
stos
xchg
rorl
fstpl
xchg
nop
lahf
clc
aam
pushf
inc
fst
dec
or
jb
repnz
mov
mov
cmc
les
arpl
and
xchg
add
call
roll
mov
push
ds
mov
imul
bound
push
add
push
sub
das
pop
inc
scas
jp
lods
inc
xor
pop
movsl
mov
int3
imul
or
imul
pushf
lea
out
shll
pop
jb,pn
mov
cli
mov
dec
mov
pop
out
outsb
jp
or
sbb
lds
lret
popa
ds
mov
stc
mov
loop
test
pop
jl
aas
pop
inc
or
sbb
daa
mov
pop
or
cmp
sbb
hlt
pop
mulb
insb
movsl
jbe
test
sub
dec
fcompl
jmp
test
pop
fs
fcomps
call
adc
mov
add
xchg
pop
shrb
push
fcompl
push
mov
sub
addr16
dec
daa
push
pop
mov
jge
adc
pusha
insb
aaa
pop
sbb
add
rorl
out
xor
outsb
jbe
imul
add
movsl
dec
jne
sub
sbb
fsubl
xchg
jb
fstps
icebp
push
mov
xor
add
std
jp
in
out
arpl
pop
outsl
inc
xor
xchg
lods
jo
lcall
xchg
pop
xchg
movsb
cltd
rep
or
push
ljmp
enter
jne
jne
and
xor
scas
mov
outsl
out
loopne
push
mov
mov
out
int3
push
nop
add
or
or
ds
movsb
testb
dec
pop
loopne
push
ficoml
mov
scas
pusha
mov
cmp
xorl
in
std
call
pop
mov
jmp
es
je
push
jnp
mov
jle
aas
iret
dec
nop
cmp
lods
adc
shl
data16
cmp
mov
xchg
add
sub
jo
arpl
in
sbb
subb
push
jb
cmp
andb
sbb
lods
inc
bound
outsl
push
stos
sub
sbb
test
add
sub
mov
movsb
push
mov
pop
xchg
pushl
jns
pushf
jle
mov
jno
aad
enter
adc
stos
add
xor
pop
and
scas
roll
cmpsb
sbb
lods
mov
sahf
imul
in
in
inc
sub
xor
xor
iret
sub
push
push
dec
cltd
mov
jecxz
mov
rol
xchg
jle
cmp
je
inc
clc
inc
les
pop
xor
daa
lock
inc
add
fldl
add
je
outsb
add
jg
cmp
add
push
or
enter
test
enter
loope
jg
xchg
into
mov
out
xor
lds
mov
jmp
in
fisubl
mov
mov
mov
das
es
jp
int
popa
mov
or
pop
out
aaa
add
stos
test
sub
nop
daa
cmp
rcrl
and
push
shrb
pop
push
and
mov
aaa
adc
inc
add
rol
decb
pop
mov
mov
js
icebp
fidivs
cmp
xor
xor
jle
and
xor
insb
andb
mov
or
aas
xor
sahf
mov
push
inc
and
add
or
or
mov
je
lods
push
mov
mov
in
fldt
add
jbe
xchg
push
shl
sub
call
push
lea
fmuls
and
arpl
test
rcrb
mov
pop
test
mov
pop
cli
or
xor
jg
daa
jae
lret
dec
std
cltd
in
or
pop
jmp
stc
lock
out
imul
mov
mov
pop
jns
xor
insb
fnsave
cmp
add
inc
pop
das
fwait
cmp
sub
in
int
sub
nop
adc
loope
jae
arpl
sarb
lahf
or
lahf
mov
daa
push
add
loope
mov
xor
adc
nop
aas
loopne
inc
push
dec
or
xor
mov
scas
cli
jne
outsl
leave
stos
sub
gs
pop
mov
in
xchg
add
fdivs
cs
repnz
lock
mov
sbb
and
fidivl
mov
push
jbe
mov
and
icebp
push
fidivs
push
lahf
fcoml
mov
push
in
bound
cmp
adc
mulb
jl
jb
mov
jo
sbb
mov
dec
ret
lea
repnz
cmpsb
sbb
or
cltd
push
pusha
sbb
es
in
ud0
out
repnz
filds
fwait
cltd
inc
nop
mov
xorb
mov
or
jmp
push
incl
fsubrl
add
and
iret
and
mov
loopne
mov
mov
fbld
aad
icebp
loop
xchg
xchg
jno
lods
rorb
rorl
addr16
adc
and
dec
and
stos
jle
jecxz
xor
aad
cwtl
sub
out
lea
dec
lods
into
pop
insl
adc
and
mov
adc
xchg
dec
es
repnz
fstpt
xor
mov
sbb
or
ljmp
or
test
push
pop
sbbb
adc
sub
add
lcall
mov
sub
push
lods
mov
dec
icebp
shl
push
push
push
leave
and
and
in
movb
mov
mov
fucom
jnp
xchg
jge
in
or
jb
mov
and
bound
cmc
mov
lret
or
out
pop
jmp
lcall
les
sub
push
popl
je
or
pop
aas
sub
iret
js
pusha
loop
enter
sahf
xor
int
pop
imull
mov
dec
pop
and
jecxz
mov
jnp
imul
inc
cmp
cmpsl
in
iret
fucomi
push
mov
int
pop
in
ffree
xchg
xchg
stos
cmc
leave
jne
adc
sbb
lcall
sub
adc
js
add
rorl
insb
add
into
pop
test
mov
enter
sar
adc
out
in
pop
or
lock
jbe,pt
push
add
jmp
jp
fldenv
mov
jo
arpl
push
aam
pushf
mov
xchg
sbb
cmpsb
enter
jbe
inc
imul
aaa
mov
pop
adc
add
cli
mov
inc
adc
and
or
mov
dec
jnp
pop
jns
daa
and
mov
popa
mov
cmpsb
mov
mov
dec
fldl
cmp
test
outsl
outsb
lds
push
imul
jl
scas
int3
aaa
mov
xchg
pop
xor
mov
push
or
addr16
xchg
testl
scas
insl
test
cltd
test
movsl
leave
push
lock
push
mov
mov
mov
sub
sub
mov
jns
add
adcl
nop
cltd
jno
push
sarb
adc
gs
or
pop
cltd
imul
sbb
ficompl
and
cmp
mov
fisubrs
push
fldl
das
xchg
jecxz
out
cli
mov
mov
rclb
movsb
push
cmp
pop
fistps
add
into
and
inc
clc
pusha
cmc
pop
pop
inc
lret
out
xchg
fs
fidivrs
jge
sub
or
repz
jmp
pop
mov
push
push
or
fucomip
mov
add
mov
test
cmp
pop
cmp
rclb
sarl
inc
sub
popa
test
mov
test
cmp
add
push
adc
and
nop
push
pop
repnz
mov
add
rcl
repnz
std
in
sbb
out
jo
xor
mov
popa
push
inc
loop
ja
cmp
nop
dec
ret
and
jmp
and
and
dec
mov
or
repz
mov
pop
out
cmpsl
scas
add
jp
mov
sbbb
aam
hlt
out
mov
xchg
inc
ljmp
filds
subl
int3
aam
sub
push
inc
cwtl
iret
fsts
or
or
nop
xor
pushf
jl
sbb
movsb
cmp
fdiv
and
xchg
je
push
fadds
pop
scas
enter
sub
fimuls
leave
bound
jb
scas
mov
push
imul
cld
arpl
int3
mov
int3
pop
ret
jnp
mov
xchg
insb
lea
in
sub
daa
xor
loop
pop
add
adc
aam
dec
mov
dec
mov
fisubrl
shll
xlat
pop
mov
jo
mov
fnstenv
dec
mov
push
rcl
enter
and
loop
cmpsl
mov
test
sbb
inc
inc
mov
shll
in
cmpsl
in
out
push
test
mov
push
inc
adc
sub
lcall
dec
mov
and
rclb
out
adc
xor
rcll
fidivl
mov
adc
aas
shl
mov
test
out
inc
xlat
mov
pop
out
shl
mov
jge
lods
es
inc
lret
icebp
in
lret
ret
ret
adc
mov
jl
inc
jbe
cltd
fiaddl
jle
clc
jl
xor
push
push
test
loopne
fisttpll
push
rclb
push
pmulhuw
jecxz
gs
jp
and
sbb
push
cmp
mov
in
cmp
inc
adc
imul
mov
xor
ljmp
add
int3
movsb
loopne
fucomi
and
scas
and
jo
cmp
fidivl
and
inc
or
jb
mov
scas
add
add
gs
pusha
aaa
sti
sar
cmp
test
jbe
nop
mov
ss
add
inc
xor
xor
xchg
pushf
jbe
and
push
xchg
cld
sbb
sbb
pop
dec
js
sti
mov
cmp
ret
jno
hlt
jecxz
push
xor
fdivs
stc
outsl
repnz
dec
fmulp
dec
jnp
push
mov
ret
gs
mulb
movsl
insb
cli
xchg
sub
or
pop
xchg
cld
mov
and
std
sbb
scas
add
mov
int3
mov
jg
push
dec
in
pushl
stos
imul
test
add
jae
xor
mov
adc
push
mov
dec
cld
mov
ffreep
ss
add
fsubrl
mov
ret
jecxz
or
repnz
push
pop
inc
nop
es
mov
cmpl
add
ja
xor
shrl
ret
jne
inc
inc
dec
mov
mov
imul
and
cltd
inc
ror
imul
pop
mov
daa
loop
icebp
cmpl
in
in
movsl
sti
dec
jno
bound
out
sub
js
jae
adc
cld
stos
sub
test
jmp
in
test
inc
loope
lock
xchg
mov
popa
cmpsb
sub
les
mov
inc
push
push
adc
push
in
mov
xor
cmpsl
dec
std
out
ss
dec
inc
mov
andl
cmp
rclb
inc
push
ljmp
sahf
mov
jge
mov
call
into
pop
inc
push
dec
movb
inc
aam
ret
pop
fidivs
aaa
imul
adc
or
jbe
cmp
jbe
in
repz
add
out
subl
pushf
mov
out
pop
mov
in
xchg
add
mov
loop
cmp
cmp
icebp
idivl
outsl
push
xchg
fidivl
aas
pop
push
ret
jle
xor
mov
sub
insb
lods
in
sub
jb
fcoml
inc
push
or
call
jl
cmp
jge
jno
cmpsb
push
inc
add
bound
xchg
inc
mov
aaa
jl
je
cmp
repz
xor
adc
adc
xor
inc
push
fnstcw
arpl
push
inc
sbb
xor
test
sub
test
sub
sub
ds
wrmsr
mov
mov
insl
adcl
push
popa
mov
jl
call
test
cmp
in
dec
push
push
movsb
pop
das
lods
arpl
jle
push
mov
fsubl
cltd
pop
stos
out
or
add
or
inc
pop
cmp
repnz
lock
lret
insl
ret
sbb
sti
imul
inc
xorl
dec
out
lds
movb
out
sbb
cmp
jns
enter
or
push
call
sbb
sti
mov
stc
mov
jno
enter
add
jl
sub
or
jge
pushf
jbe
inc
pop
xor
ret
pop
popa
fimull
xchg
xor
insb
hlt
aad
and
sub
movsbl
adc
gs
loope
cmp
or
loop
scas
pop
push
pop
jns
dec
inc
xchg
aas
lea
mov
cmp
dec
testb
mov
into
lret
inc
popf
mov
addr16
pop
pop
subl
push
push
mov
jne
sbb
sub
jns
mov
rclb
push
das
fcmovne
popf
mov
jl
push
xor
mov
push
incl
loopne
push
into
mov
dec
add
loop
push
stos
mov
mov
pop
mov
cli
inc
pop
sti
add
or
sub
sub
sti
test
inc
jns
adc
arpl
lcall
call
mov
insb
scas
xlat
dec
adc
add
call
xlat
stos
enter
stos
test
cmpl
jno
out
scas
jbe
mov
mov
lret
fstpt
arpl
adc
adc
xchg
jge
repnz
sub
gs
push
aam
inc
jo
jg
out
call
mov
xor
jg
fldcw
stos
lret
inc
mov
lock
insl
sbb
ds
lods
in
orb
jecxz
sbb
and
hlt
je
adc
jl
pop
push
dec
mov
stos
cwtl
and
dec
jp
lahf
jl
push
hlt
ficomps
std
arpl
jb
sub
loopne
loop
adc
lds
out
and
or
cmp
les
mov
dec
stc
add
sub
mov
stc
div
push
sub
pop
and
mov
ds
out
dec
jae
push
push
sbbl
into
in
test
sbb
jecxz
jno
dec
push
fiaddl
mov
xor
enter
fstps
out
lahf
sbb
aas
inc
xor
fs
leave
jle
sbb
aaa
sets
jmp
lea
xor
lret
pop
mov
inc
dec
divb
dec
std
inc
mov
in
mov
popa
rcll
jp
xlat
or
ja
lock
mov
aaa
nop
or
pop
out
outsl
pop
into
xor
xor
sub
xlat
ret
addr16
mov
jbe
add
cmp
js
dec
add
pop
add
inc
jl
les
jmp
mov
dec
out
cmc
shrl
or
aad
outsb
ja
cmp
leave
stos
int3
jb
sarl
and
sbb
iret
mov
mov
rdmsr
js
push
mov
xor
fldln2
orb
in
imul
in
mov
or
inc
mov
add
jmp
outsl
enter
outsl
mov
and
cmpb
xor
bound
pop
arpl
push
outsb
inc
or
sbb
jo
stos
ljmp
xchg
pop
mov
and
cmc
or
fildll
jbe
pop
sahf
add
sub
push
pop
pop
sarb
test
pop
repz
adc
daa
mov
in
das
mov
scas
mov
add
int
iret
xor
popa
dec
int
repnz
pop
xor
adc
xor
adc
and
dec
imul
in
ss
xchg
pop
sub
scas
test
jecxz
inc
lcall
adc
mov
mov
xchg
xlat
nop
ficoms
cmp
sbb
mov
repz
inc
bound
mov
ss
mov
mov
inc
mov
adc
shrb
sbb
ret
xchg
jnp
dec
loopne
hlt
imul
mov
inc
dec
pop
scas
jne
dec
hlt
push
scas
dec
mov
cltd
in
add
dec
enter
sarb
xchg
scas
mov
iret
int
cmp
leave
repz
dec
movsl
loop
stos
pop
pop
test
sbbb
or
sub
fdivl
xor
xlat
pop
loop
jmp
rclb
add
cmp
in
sbb
outsb
xchg
jnp
or
movsb
sbb
je
loop
add
cmp
in
int3
jg
sbb
and
testb
in
mov
or
int
shl
fsts
stc
mov
rcrl
sbb
int
inc
loopne
lds
pop
clc
jo
gs
cli
imul
fwait
sbb
leave
mov
jp
push
and
in
loopne
mov
in
mov
inc
inc
lods
insl
xor
call
mov
push
xor
loopne
cli
ficomps
adcb
mov
or
inc
fmuls
mov
xchg
shl
sbb
pop
gs
mov
cmp
and
pop
xor
push
jl
mov
lods
repz
addr16
fstpl
inc
mov
adc
pop
push
movsb
mov
cmpl
imul
jns
sbb
sbb
jnp
enter
lods
scas
jne
adc
adc
sbb
ret
rol
or
cmp
pop
inc
cli
and
mov
gs
xor
mov
mov
arpl
les
jge
xchg
andl
rol
jae
daa
mov
sub
or
lcall
mov
imul
cmc
loopne
in
mov
test
xor
add
aam
test
push
jmp
xor
mov
dec
lret
fstl
adc
sub
fwait
stc
stc
outsl
sarb
lcall
mov
sbb
dec
adc
xor
sub
mov
rcrb
adc
mov
fldcw
sbb
dec
or
shlb
ficoms
and
gs
lods
pop
icebp
les
mov
mov
fcoms
pusha
orl
test
decb
push
fistpll
mov
in
add
fisubrl
sbb
insb
inc
stos
lea
mov
pop
xor
addr16
sub
daa
sbb
push
pop
inc
pop
in
cmpsl
pop
or
jno
fcoms
inc
mov
out
jbe
daa
das
mov
stos
leave
test
mov
and
mov
fdivs
inc
and
xchg
inc
cmovbe
jle
pushf
hlt
test
loope
lcall
push
lea
fstpt
mov
call
scas
and
daa
mov
xchg
in
adc
jge
mov
sub
leave
orb
stos
into
jae
or
inc
xchg
dec
xor
jae
jns
sub
jle
push
test
pop
test
test
jp
jno
and
fmuls
divl
andb
push
push
mov
push
shll
mov
mov
int3
jg
shl
stos
rcl
rclb
mov
push
add
dec
lret
dec
loop
negl
lods
js
sahf
mov
lock
and
xlat
clc
fwait
cmp
cmpsl
cld
xlat
xor
test
mov
dec
push
cmp
jo
cmp
sbb
sahf
je
sbb
loopne
fcmovbe
jmp
mov
fisubs
lahf
imul
fmul
mov
aaa
fcom
mov
sub
jbe
adc
outsl
fsubl
inc
ret
mov
and
jb
mov
pop
adc
jmp
add
add
lcall
mov
cli
call
cmp
inc
jle
cmp
adc
pushf
and
dec
jecxz
xorl
push
in
dec
stos
xor
xor
xor
pop
dec
movsl
fwait
pop
push
mov
ret
cltd
xor
xlat
push
loope
add
adc
add
inc
xchg
push
ret
jge
into
sti
adc
iret
jne
movaps
xchg
xchg
inc
clc
pop
jg
push
add
loope
or
mov
cmp
cld
sahf
idivb
gs
mov
mov
push
aad
out
xor
jle
adc
flds
xlat
nop
mov
inc
orb
or
pop
dec
push
dec
cmp
cmp
pop
iret
and
outsl
jbe
cmp
cld
mov
mov
add
lock
jnp
jmp
fs
or
jbe
inc
movsb
xor
into
pop
insl
xor
int3
cs
sarb
push
push
repz
cmp
dec
sub
cmp
add
jg
loopne
out
add
push
ljmp
cmp
or
sahf
jo
mov
mov
inc
test
inc
jge
jmp
dec
fnstsw
sarl
cmp
dec
pushl
pop
jbe
daa
scas
nop
dec
in
pop
lahf
xor
clc
jb
aas
mov
les
or
mov
cmp
mov
mov
hlt
pop
push
repz
out
andl
xchg
test
outsb
in
push
mov
movsl
mov
xor
mov
push
jb
add
bound
test
or
add
pop
inc
pop
add
dec
mov
dec
pop
or
push
lret
test
les
push
inc
loope
mov
or
push
movsb
sub
cmpsb
std
jno
xchg
test
xchg
arpl
dec
out
adc
ror
aas
lds
mov
mov
mov
rcrl
aas
es
add
in
push
fdivrl
push
loopne
lock
mov
dec
jae
lahf
lret
push
or
out
cmp
mov
mov
faddp
pop
cmp
ret
sub
or
mov
sbb
inc
data16
je
sbb
sarl
jno
jp
mull
push
into
pop
push
call
jl
dec
push
jb
int
stc
mov
push
pop
mov
pop
or
pop
xor
enter
pop
and
js
mov
mov
and
dec
and
push
hlt
cmp
mov
gs
mov
out
mov
fildll
hlt
mov
adc
jp
sbb
jle
testl
pop
testl
xlat
out
sbb
notb
push
inc
dec
iret
pop
jbe
cs
mov
xchg
xor
add
stos
cld
data16
add
dec
pop
mov
lret
xchg
jbe
xor
pop
ss
movsb
out
add
adc
mov
jle
int
lret
popa
les
ja
pop
push
pop
push
loop
fisubl
jp
ret
mov
movb
std
mov
loop
cmp
int
pusha
cwtl
sbb
lea
xlat
popf
jo
mov
xor
cmp
pop
test
dec
pop
icebp
movsb
sub
cmp
lock
mov
cmpsl
out
and
mov
sbb
or
mov
addr16
jb
in
jnp
loope
test
dec
aam
movsl
xchg
repnz
sahf
repz
mov
mov
jo,pt
dec
outsl
in
jno
bound
xor
pop
add
cmp
cmp
pop
outsl
sbbl
sahf
aad
cwtl
das
sbb
sbb
dec
ffreep
jnp
sbb
gs
div
and
mov
int
adc
test
mov
and
or
push
data16
adc
mov
push
or
sbb
shlb
adc
mov
jle
aas
aam
xchg
jno
push
jp
mov
cli
fistps
mov
mov
shr
nop
scas
pop
cmp
mov
ret
arpl
pop
mov
sbb
dec
cmp
cs
mov
loope
nop
leave
mov
mov
mov
sbb
xchg
sbb
pop
addl
addb
push
mov
aad
fsubl
out
sub
mov
jl
ljmp
aam
in
aad
lahf
and
popa
les
push
insl
cs
int3
inc
sub
xchg
lret
jp
pop
popa
xchg
mov
arpl
lods
mov
insl
ds
adc
cwtl
adc
test
fidivs
dec
push
xchg
jnp
pop
mov
xchg
outsl
mov
leave
cld
iret
into
les
mov
in
dec
jae
aas
pushf
add
add
lock
ret
xchg
xor
push
outsl
pop
lea
cmp
mov
test
pop
bound
es
in
cmpsl
ja
jge
mov
xor
incb
lahf
xchg
xchg
cs
std
mov
mov
jp
inc
mov
jno
ljmp
or
inc
scas
or
lods
loop
sbb
cmp
mov
pop
mov
jecxz
jns
ss
mov
sub
out
push
and
out
movsb
enter
push
push
repz
add
mov
sub
jbe
loope
sub
add
mov
or
jecxz
fidivs
push
sarb
mov
pop
mov
cmp
push
add
xchg
mov
inc
push
mov
das
lods
xor
pop
or
std
and
pop
add
call
es
mov
sbb
sub
mov
movsl
roll
pushf
and
jne
insb
stos
repz
shll
into
sbb
shlb
push
pop
xchg
push
arpl
je
lea
cmp
push
pop
and
inc
bound
daa
inc
loope
mov
sub
les
mov
gs
xor
call
out
xor
adc
push
nop
mov
push
mov
fistpl
ss
icebp
cmp
pop
jmp
xchg
loop
loopne
push
dec
cmp
sbb
push
arpl
aam
adc
lret
push
test
rcrb
push
jno
xchg
pop
in
mov
push
out
jnp
mov
add
mov
lret
inc
pop
lea
pushf
cmp
push
push
dec
addr16
repnz
mov
ret
fs
push
lret
xchg
pop
ret
cmc
and
or
or
mov
xchg
js
daa
add
loopne
aas
das
lods
dec
mov
out
loope
add
sub
in
test
lret
mov
andb
dec
sti
jecxz
movsb
inc
mov
int3
cs
or
inc
add
pop
std
mov
loope,pn
lods
mov
je
mov
test
pop
test
es
sbb
pop
xchg
pop
sub
mov
add
lcall
orb
jb
jg
jl
es
or
mov
mov
jns
xchg
ds
icebp
sub
mov
insl
into
daa
mov
push
movsl
and
stos
and
xor
fisubs
jnp
outsb
scas
cmp
imul
in
inc
pushf
fbstp
mov
jo
fldenv
loop
in
inc
stc
or
fisubrs
sahf
fs
repz
fiaddl
pusha
lahf
cmp
popf
or
lods
mov
sub
xor
cmp
int3
lods
or
xor
imul
ds
mov
fadds
dec
and
popa
xor
sbb
jecxz
mulb
lret
add
addr16
test
xchg
push
cmp
cmp
mov
enter
add
sub
arpl
inc
sahf
inc
push
sub
pop
ds
jae
dec
out
ljmp
lods
jge
dec
xchg
jecxz
ficoms
push
cli
cmp
or
xor
lods
jne
loop
jae
fwait
not
xlat
and
cwtl
sub
pop
std
in
imul
mov
xchg
pushf
push
loop
sub
xor
mov
dec
imul
adc
popf
pop
ljmp
mov
cmpsb
aad
in
or
xchg
jnp
dec
shll
lock
pop
push
sbb
clc
xor
jge
and
mov
adc
inc
and
adc
add
cwtl
push
jmp
mov
lcall
scas
xchg
mov
mov
inc
cmpsb
lea
adc
lock
lret
nop
aaa
cmc
js
dec
lea
dec
jne
stos
mov
jbe
push
lods
popf
add
push
fwait
sub
lcall
in
xchg
jb
adc
jg
sub
mov
inc
xchg
pop
adc
cmp
dec
xchg
jb
lds
mov
mov
stc
pop
mov
sbb
cmpsb
xchg
jne
mov
fdivl
cmpsb
or
jmp
mov
dec
push
pushf
mov
sahf
sahf
lret
jl
ret
clc
xchg
jge
pushf
fwait
pop
fldcw
jge
lret
fwait
sbb
add
add
scas
imul
or
xchg
jnp
shrb
popf
inc
xor
mov
sbb
test
imul
push
mov
pushf
movsb
mov
cmp
fstl
les
xchg
shlb
add
loopne
or
stos
out
jl
notl
into
into
andb
inc
movsl
mov
mov
xor
negb
rcll
inc
repz
mov
pushf
mov
and
lcall
jne
cld
fsubrs
cld
aad
inc
push
mov
and
xchg
dec
adc
cmp
xchg
jbe
arpl
add
repz
adc
inc
or
lods
pop
adc
and
sqrtps
lock
lret
test
pusha
daa
xchg
cltd
jp
mov
and
stos
xchg
and
jecxz
int3
leave
jns
cld
movsl
fiaddl
push
mov
and
ret
xchg
mov
adc
xchg
mov
jg
xor
test
jbe
sub
movsb
lret
cmp
adc
aad
sub
xchg
xchg
push
aas
invd
or
pusha
inc
ja
cmp
sub
mov
ss
xchg
adcl
or
loop
add
mov
mov
add
cs
call
ljmp
cs
or
push
into
test
scas
sub
in
push
xchg
sbb
jnp
jo
xor
or
sbb
dec
ficompl
ljmp
aaa
or
jle
mov
mov
mov
std
xor
ret
into
sbb
mov
and
lcall
fdivr
rorb
mov
cmpxchg
dec
jae
stos
inc
movsb
aad
mov
push
ss
cmp
adc
jg
fwait
xchg
push
xor
mov
mov
ja
inc
xchg
mov
std
sbb
clc
out
or
lods
cmp
insl
add
adc
hlt
daa
nop
andl
es
pushf
pop
not
jno
sub
stos
push
mov
or
pop
mov
scas
pop
dec
fsub
btl
popf
sahf
dec
cmp
cmp
sbb
movsb
dec
inc
repz
rcrb
cltd
les
push
mov
out
sahf
push
sti
outsb
dec
adc
jge
adc
mov
out
jno
xchg
dec
or
jecxz
out
inc
sbb
das
mov
jp
pop
push
cs
or
mov
inc
mov
call
inc
lcall
notb
xchg
in
inc
lcall
cwtl
test
scas
fmul
mov
mov
push
lods
hlt
mov
mov
cmp
adc
cmpsb
cmp
gs
sbb
xor
icebp
or
out
push
push
arpl
xorb
into
jge
jp
pop
jmp
push
test
adc
out
push
loopne
lcallw
sti
or
test
addr16
dec
and
sbb
fsubrl
insb
and
pop
sbb
daa
rorl
push
push
fdivrp
xchg
push
scas
mov
mov
xor
push
inc
pop
leave
or
fxch
subb
out
icebp
cmp
gs
imull
cmp
scas
in
ja
ja
test
js
roll
jg
mov
dec
enter
xor
jo
add
adc
mov
imul
jne
dec
add
xchg
jmp
inc
add
ret
cmpsl
mov
mov
popf
sub
cmp
jmp
mov
es
and
ror
enter
xchg
pop
push
fstl
inc
hlt
mov
test
mov
adc
mov
in
jmp
sub
mov
test
loope
cmp
std
jmp
imulb
clc
jge
ret
jp
cmc
fcoms
movsl
leave
repnz
sahf
cmp
shl
xchg
sub
xor
daa
aam
aas
dec
push
push
mov
mov
sbb
add
mov
aad
push
mov
cmp
popf
push
dec
jge
jl
neg
add
cmp
push
jmp
jecxz
nop
pop
popa
or
adc
loope
insb
jo
sbb
lods
mov
mov
and
xchg
sahf
andl
clc
sbb
mov
aad
jp
stos
jmp
xlat
pushf
adc
xchg
cmpsl
inc
out
test
aas
out
inc
rol
mov
pop
scas
add
pop
push
jp
cli
pop
into
pop
add
call
cmp
aaa
cmp
aaa
push
add
adc
inc
loope
sub
jl
mov
dec
nop
lret
mov
daa
sub
cltd
jmp
or
sbb
sbb
xchg
sbb
mov
hlt
testb
xchg
cmpsl
dec
dec
jle
xchg
sub
push
mov
mov
xor
outsb
push
cli
fildl
popa
jo
test
mov
cmp
sbb
std
pop
sub
or
jbe
ret
cmp
mov
aas
push
imul
sti
cli
test
adc
xlat
stc
sbb
stc
frstor
stos
clc
lods
bswap
cmp
inc
jnp
jg
adc
inc
xchg
jae
ja
int3
out
out
outsl
lods
push
pop
sub
xchg
dec
xlat
pusha
imul
icebp
xchg
out
sbb
insl
enter
cld
cli
jb
push
ret
mov
inc
lds
rcrb
lcall
icebp
or
xchg
sbb
xchg
inc
add
repnz
inc
cltd
lea
in
popa
jae
mov
jg
mov
insl
cmc
mov
or
js
fcomp
adc
loopne
lods
push
addr16
cli
jns
int
jnp
das
fucomip
push
xor
mov
mov
and
movsl
cmp
jnp
rcll
enter
mov
xchg
and
xor
movsb
ss
test
push
stos
jne
push
clc
adc
in
add
int3
jecxz
lahf
adc
mov
clc
ja
movsl
leave
insb
xlat
sub
and
or
mov
outsb
gs
fistps
pop
iret
neg
lds
xlat
sbb
stc
add
push
jno
add
lret
in
scas
mov
mov
fldl
bound
jecxz
mov
std
das
stos
pop
insb
out
pop
das
outsl
ja
enter
bound
push
inc
in
les
inc
jnp
addr16
orb
inc
outsb
xor
enter
push
mov
cld
loop
leave
cmpsb
add
sub
ret
sbb
loopne
cmp
inc
adc
loope
clc
mov
adc
ret
dec
test
sub
inc
in
mov
push
movsbl
imul
push
test
adc
and
stc
icebp
and
inc
addb
mov
sbb
xchg
jae
jge
ja
cmpsl
add
cmp
inc
shll
test
out
mov
sbb
hlt
cli
call
popf
jle
and
xor
in
adc
xchg
mov
sub
push
lods
pop
push
xchg
mov
and
jg
int
sahf
mov
shr
and
subl
cs
push
cmpsb
pop
imul
scas
mov
pop
rolb
ret
repz
jle
sub
dec
dec
or
sbb
imul
or
les
mov
xchg
out
xor
mov
or
sub
lcall
test
jae
xor
fsubl
outsl
ss
xchg
cli
sub
add
dec
push
pop
pop
sub
pop
pop
lret
inc
or
add
jp
outsb
and
fcmovb
dec
mov
xchg
sahf
cltd
jmp
call
push
fidivs
aad
cmpsb
and
mov
movb
push
inc
inc
out
sbbl
cmp
adc
dec
adc
xlat
js
loopne
call
jg
stos
popf
sbb
cmp
push
pop
cmp
push
mov
add
imul
lret
sahf
push
in
mov
push
bound
mov
xchg
inc
leave
outsl
mov
adc
mov
push
xor
mov
out
jge
loope
je
es
les
jb
mov
test
jns
aad
aaa
and
inc
sbb
stos
sub
ljmp
test
fidivs
fldenv
int3
dec
jns
and
imul
sbb
push
int3
stc
mov
stos
push
inc
xchg
mov
inc
sbb
sbb
add
inc
push
clc
movsl
out
mov
sbb
dec
xor
jmp
repz
jns
push
mov
inc
adc
mov
mov
loopne
lock
sbb
insl
in
dec
push
or
cld
jb
ljmp
jno
pop
sub
out
mov
sti
xor
cmp
sarb
push
dec
xor
add
inc
addr16
sbb
mov
lret
cli
mov
xlat
popf
jecxz
js
or
mov
sti
pop
xchg
and
aas
cmpsl
jl
xor
ficomps
push
pop
or
test
jmp
sti
mov
sub
test
dec
pop
imul
mov
sub
push
push
leave
pop
dec
jno
dec
pop
fadd
dec
std
jb
push
aam
inc
xchg
int3
repz
bound
or
xor
xlat
cmc
push
adc
out
and
mov
xor
insb
or
ror
shrl
addr16
negb
sbb
dec
add
scas
xchg
jecxz
pop
popa
lods
lds
push
mov
inc
mov
mov
adc
xchg
and
mov
ljmp
mov
lds
sbb
or
ljmp
cltd
loopne
or
adc
sarb
bound
mov
jno
add
sbb
fisubrl
push
inc
call
jmp
data16
dec
lahf
rorl
jle
sub
lods
icebp
cld
stos
cmp
stc
cld
data16
adc
hlt
adc
divb
adc
mov
shll
pop
pop
cltd
hlt
mov
inc
mov
and
movsb
pop
paddusw
push
or
xor
adcb
mov
fildll
jne
jle
jle
icebp
lods
xor
sti
fmul
lcall
adc
mov
xchg
loope
outsb
out
xchg
cmpsl
jnp
mov
push
sahf
int
ljmp
push
dec
jo
pop
imul
and
scas
jno
lods
fwait
jp
mov
fdivrp
add
mov
cmp
mov
jecxz
inc
add
cmpb
push
sub
cmpsb
test
and
data16
dec
insb
je
ljmp
ds
sti
mov
push
and
lods
jno
push
sarl
out
data16
dec
mov
cmc
scas
das
fistl
mov
test
scas
repz
and
icebp
xor
pop
in
xlat
mov
sub
mov
mov
xchg
adc
mov
lds
pop
arpl
je
rcrl
xor
and
mov
and
scas
aam
pop
mov
data16
lahf
test
subl
xorl
dec
mov
add
xor
and
dec
mov
add
jne
adc
mov
pop
sti
mov
push
leave
lea
loope
cli
adc
lea
mov
lods
aad
xchg
mov
repnz
lods
ficoml
leave
clc
dec
movsb
inc
xchg
popf
mov
hlt
push
fs
aad
jmp
xchg
in
mov
not
sub
xor
mov
stos
out
stos
cmp
addr16
inc
loopne
fidivrs
or
stos
mov
or
cwtl
cmp
and
addr16
jecxz
lahf
mov
inc
pop
mov
mov
int3
test
sti
pushf
cmp
cmc
lods
xchg
pop
insb
xor
jle
mov
mov
popa
rcrb
push
push
bound
fnstsw
xor
push
cmp
xor
sub
xor
in
sub
aam
fisttpl
cmp
jo
pusha
push
arpl
xor
xchg
jmp
in
push
xchg
lods
and
cli
inc
nop
sbb
jp
cli
sti
nop
pop
xor
pop
cmpsb
xlat
jecxz
sbb
push
xchg
add
push
cs
dec
shll
add
scas
test
aas
mov
inc
add
pop
push
mov
in
jne
cmp
xchg
in
dec
jo
and
add
or
dec
insl
inc
test
xchg
inc
mov
sbb
rolb
push
cli
int
enter
pusha
dec
inc
outsb
repz
pop
xor
push
mov
outsl
out
dec
fbstp
mul
shll
inc
fsts
leave
cmpsl
push
daa
add
out
gs
push
push
test
push
sahf
daa
mov
dec
dec
push
xchg
mov
movsl
jmp
mov
push
movsl
sub
je
cmc
f2xm1
fadd
es
xchg
sub
dec
cltd
mov
dec
rorb
cmp
fcmovb
imul
lods
inc
outsl
and
sub
hlt
inc
dec
fwait
cmp
push
or
xchg
rclb
adc
ljmp
mov
scas
adc
movsb
gs
repz
and
fsubl
shl
xor
pop
inc
ret
xor
sub
push
pop
popf
jnp
test
inc
mov
mov
rcrb
rcrl
inc
and
mov
hlt
in
frstor
jg
mov
rcll
lds
inc
test
test
in
ficoms
icebp
das
mov
pushf
pop
icebp
mov
cmpsl
daa
scas
mov
sbb
cld
adc
mov
mov
dec
call
pusha
jo
jge,pn
orb
lret
fidivrl
sub
dec
xchg
pop
gs
or
fcompl
fcmovu
and
insl
mov
cmp
sahf
std
jecxz
cmp
ds
adc
jp
inc
jp
and
add
xor
sarl
adc
jno
addb
mov
pop
sub
sbbl
sub
xchg
lock
push
daa
sbb
faddl
cs
imul
dec
push
cmp
mov
repz
in
dec
scas
ss
pop
scas
ret
adc
int3
jns
in
push
inc
cmp
push
aad
in
rcll
js
das
dec
sbb
aam
fimull
mov
push
cmpsb
notb
out
or
add
dec
int
enter
icebp
testb
mov
and
inc
imul
ljmp
xor
add
inc
cmp
mov
push
xorl
sbb
xchg
mov
cmp
pop
dec
jge
test
jmp
mov
mov
xor
lock
popf
or
mov
adc
jb
pop
add
jno
lret
cmpsl
test
fstl
and
popa
in
shlb
pop
pop
je
add
shrl
loop
test
out
fldl2e
or
sub
pop
dec
rcll
arpl
lock
xor
mov
das
pushw
rclb
jecxz
fwait
aad
rcrb
rcr
repz
jne
sub
out
in
ds
mov
adc
lods
cmp
int
add
jg
stos
mov
out
ljmp
push
in
mov
sub
orb
out
daa
ljmp
xchg
cmp
scas
dec
fistps
mov
xor
xchg
test
cmpsl
push
sahf
repnz
xchg
sub
mov
lret
pop
subb
js
leave
insl
xlat
adc
bound
imul
push
mov
out
repnz
lret
jmp
add
aad
outsb
lods
addb
in
repnz
lahf
push
clc
dec
out
mov
jb
cs
jns
jecxz
shlb
sub
int
sbb
notl
mov
flds
adc
scas
notb
imul
mov
push
lahf
fldenv
pop
push
or
jae
add
jl
adc
cmp
bound
xor
cli
aas
or
rorl
insb
pop
add
cmp
mov
fadd
xchg
add
call
int
mov
les
loopne
xchg
xor
ret
mov
mov
gs
jb
cmp
mov
push
pusha
ljmp
bound
sbb
roll
movsb
adc
inc
and
push
fsubrp
cmpsl
in
mov
ss
lds
cltd
aaa
lret
rclb
sarl
mov
lret
push
int
iret
mov
add
lea
aas
inc
push
sahf
jmp
roll
out
pop
jns
stos
sbb
and
adc
clc
xor
push
add
add
xor
movsb
add
leave
mov
push
cmp
add
adc
mov
lret
dec
pushf
jecxz
scas
mov
mov
movsb
mov
aam
mov
jg
gs
xchg
adc
sub
das
dec
shrb
push
xchg
cli
push
push
mov
nop
pop
or
lret
inc
popf
sbb
out
test
loope
cmpl
mov
pushf
and
adc
fisttpl
bound
dec
dec
outsb
sub
ja
cwtl
xchg
insl
lea
test
stos
pop
stc
or
aad
lds
loopne
addr16
xchg
or
out
and
sbb
arpl
jmp
dec
push
pop
lock
cmp
arpl
xchg
popf
jne
push
jge
sub
out
lret
dec
sub
les
test
sbb
dec
negl
pop
sbb
push
inc
into
mov
adc
adc
mov
addr16
push
jnp
add
inc
test
hlt
mov
outsl
push
cmc
adc
or
out
lds
hlt
xor
into
mov
loop
mov
adc
insb
test
or
sbb
and
jle
lcall
and
add
fs
in
mov
sbb
xchg
xchg
sub
popa
jnp
mov
jl
xchg
sarb
mov
lret
dec
out
stos
data16
rorl
sub
scas
xor
mov
fstpl
mov
movsb
jne
loop
mov
mov
movsl
shlb
insb
inc
mov
test
fldcw
in
sub
lock
sub
lahf
ja
jae
icebp
xchg
xor
fwait
cld
iret
dec
pop
mov
xor
sbb
lock
nop
adc
jno
icebp
lock
andb
repz
xor
insl
jg
mov
idivb
lret
mov
jmp
mov
lods
fsubp
hlt
mov
or
add
xchg
std
aad
inc
sbb
dec
movl
mov
ds
in
gs
xchg
sbb
rcrl
mov
bound
jecxz
ret
jmp
ljmp
mov
xor
mov
loope
imul
repz
lods
cmp
stos
mov
loop
fistps
mov
jno
ror
daa
inc
adc
sub
xchg
js
dec
fcoms
sbb
out
fucomip
test
mov
mov
xor
inc
mov
sbb
push
sbb
mov
cld
sbb
mov
jno
jg
roll
sub
nop
mov
pop
arpl
add
fs
push
pop
sbb
mov
daa
mov
fstpt
rcl
and
or
xchg
xchg
xor
insl
or
sub
mov
xchg
mov
cmp
xor
sbb
pop
mov
aad
arpl
rcl
xchg
jle
push
dec
iret
dec
ja
test
pop
dec
or
daa
call
fldenv
adc
adc
dec
lret
jl
mov
xchg
push
cmpsl
pop
jge
inc
mov
mulb
imul
push
xor
pop
jmp
and
lock
mov
es
adc
idiv
ja
aas
cmpsl
push
cwtl
test
aam
xchg
jge
pushf
cmpsb
daa
jns
xchg
xchg
imul
jmp
pop
out
hlt
mov
mov
cmp
fsub
push
or
das
inc
pusha
enter
fdivs
cmpsb
pop
xchg
xchg
in
or
jae
scas
fbstp
rcrb
dec
pop
dec
push
rolb
lock
fprem
roll
cmpl
cmc
sub
jmp
imul
loop
sbb
sar
fs
inc
mov
aam
notl
leave
sahf
rorb
aad
jae
cmp
add
mov
dec
dec
addr16
add
adc
mov
ret
xchg
daa
stc
pop
stos
pusha
xchg
push
lea
jo
xchg
aaa
lahf
adc
je
out
in
jg
in
ss
mov
mov
cli
sbb
lock
enter
jne
icebp
lods
push
cmpsb
sar
adc
cwtl
xor
pop
dec
or
dec
sub
lods
mov
inc
imul
test
mov
mov
xlat
pop
or
fcoms
arpl
dec
dec
test
inc
mov
leave
pop
mov
push
mov
adc
mov
and
pop
pop
pop
iret
add
insb
push
push
mov
fninit
loope
sbbl
stc
dec
xchg
rcll
fists
inc
inc
popf
push
pusha
dec
dec
push
add
dec
pusha
pop
sysexit
hlt
mov
mov
out
test
pop
int
jns
cmpsb
enter
mov
pop
or
cmpsl
adc
shlb
dec
jmp
or
cmp
popf
dec
pop
sbb
fdiv
fidivs
xor
fstpl
fisubl
push
or
lret
stos
mov
subl
popa
xor
mov
outsl
mov
sbb
xchg
in
sub
jb
and
jb
sub
pushfw
mov
dec
test
adc
sti
pop
jno
mov
mov
cmp
int3
in
dec
mov
mov
sub
aad
jg
testl
jmp
mov
jo
mov
or
add
aad
stc
sbb
pop
push
sbb
push
push
fdivs
lods
enter
add
pop
lcall
push
mov
push
mov
pushl
idivl
or
lods
push
xchg
mov
out
imul
call
mov
mov
xor
loope
rorl
adc
push
mov
mov
fisubrs
xchg
test
mov
push
rcl
fxch
pop
data16
push
mov
daa
mov
mov
sbb
sbb
xlat
les
clc
aaa
mov
sbb
push
icebp
adc
and
outsb
mov
mov
lret
xchg
push
jmp
and
sbb
jns
leave
and
into
fisttpl
repnz
stos
push
lods
mov
lahf
xor
shrb
gs
cwtl
mov
push
push
pop
fnstsw
lahf
mov
test
or
into
jae
psubsw
into
jne
mov
mov
popa
movsw
popf
pop
inc
rcrl
popa
ljmp
fdivrl
jno
lahf
ljmp
and
lahf
xchg
nop
xchg
push
mov
cmp
shlb
pop
add
icebp
and
push
mov
data16
jle
push
cltd
mov
adc
int
sub
fsubrl
pop
jns
dec
xchg
into
lcall
sbbb
ja
stc
cmpsb
xchg
insb
and
fldenv
in
sbb
mov
sarl
sub
les
ljmp
stos
mov
mov
nop
adc
adc
in
or
xor
cmpsb
dec
int3
push
jle
push
lea
cmp
sbb
mov
mov
sbb
inc
adc
loopne
outsl
js
sbb
pop
sbb
test
and
xor
gs
bound
arpl
stos
shll
push
loopne
sbb
sbbl
in
jmp
mov
cmp
stos
xchg
repnz
out
in
mov
and
xchg
xchg
mov
ret
inc
xchg
stos
rolb
shlb
push
push
mov
dec
adc
shlb
cmp
cwtl
dec
test
sub
push
xor
xlat
loop
stos
xchg
bound
scas
cmp
ss
add
jecxz
or
xchg
lret
decl
xchg
ficomps
ljmp
mov
clc
fcompl
push
nop
cmc
inc
xchg
sbb
inc
mov
inc
je
xlat
adc
sbb
jmp
jmp
xchg
into
push
xchg
cmp
out
xchg
sahf
sarl
cmp
frstor
aam
aam
xor
ss
nop
pop
pusha
jne
in
jb
shll
add
and
dec
pop
mov
aas
cmp
push
fwait
push
rcrb
iret
nop
dec
mov
scas
dec
loop
pusha
inc
iret
mov
popf
adc
hlt
cltd
sub
and
xchg
or
or
cmpsl
arpl
fdivr
sbb
sub
mov
xor
mov
test
adc
mov
xchg
cmpsb
pop
fstpl
mov
cwtl
test
pop
mov
sub
or
xor
and
daa
and
hlt
mov
mov
pop
sbb
js
jns
inc
xor
repnz
insl
hlt
fwait
arpl
movsl
in
loope
loopne
push
andb
or
cmp
pop
pop
xchg
and
jo
dec
nop
sub
loop
pop
iret
in
push
jns
rcll
push
jno
adc
es
test
mov
inc
and
and
testb
in
xor
adcb
jb
and
xor
pushl
daa
push
addl
mov
mov
inc
mov
fcmovnbe
aaa
loop
mov
mov
sbbb
movsb
inc
xchg
gs
stc
lea
or
lret
es
pop
or
rcrl
popf
mov
mov
jae
das
ja
mov
mov
loopne
mov
jno
sub
or
ds
sahf
lahf
sub
push
adc
in
insl
gs
pop
dec
push
aaa
insb
mov
in
mov
inc
pop
push
jb
out
aaa
fwait
inc
inc
rcl
hlt
stos
pop
pushf
out
xchg
scas
dec
xchg
insb
rcrb
mov
xchg
es
mov
aaa
mov
test
inc
popa
sbb
push
repnz
ds
mov
mov
in
or
test
and
dec
in
lret
pushf
pop
shlb
clc
inc
jge
xchg
lahf
and
mov
scas
jge
sub
pop
bound
lea
scas
jge
sub
enter
lods
push
in
ficoms
icebp
addr16
push
jo
cltd
into
jg
inc
lret
jb
cs
xor
test
pop
dec
dec
add
out
fs
inc
xchg
pop
test
in
pop
repnz
nop
out
or
testl
lahf
jbe
pop
inc
movsb
xchg
cmp
aad
sarb
adc
ljmp
or
pop
outsl
pop
roll
or
mov
popa
pusha
xchg
mov
imull
jge
sbb
test
mov
pop
out
mov
and
cmpsl
mov
sub
xlat
mov
sahf
fistps
test
bnd
ror
and
jnp
push
fstl
adc
cli
in
push
mov
mov
sahf
xor
lret
mov
jmp
iret
mov
repnz
pop
das
push
ds
add
movsl
stos
pop
push
mov
cltd
pop
ss
faddl
outsb
and
push
xor
gs
outsb
or
or
stos
or
ds
and
movsb
icebp
lret
out
pop
sbb
jns
add
pop
je
adc
jmp
jp
addr16
xor
sahf
xor
lock
mov
dec
xor
iret
mov
aam
xor
stos
mov
loope
jge
mov
pop
pop
inc
or
in
add
cmpsl
lods
out
insb
pop
sub
cli
testb
es
loope
pop
push
lods
adc
add
cmpsb
mov
adc
jae
iret
lods
testl
lahf
fadd
xchg
pause
jle
popa
in
es
cmp
pop
aam
and
imul
adc
mov
out
lea
xor
mov
repz
push
lock
rolb
jg
inc
inc
shlb
push
rclb
ficoms
leave
adc
inc
stos
popa
pop
and
lds
sti
jmp
add
test
fnstsw
and
mov
push
popf
jl
mov
jp
js
mov
sbb
into
and
or
stos
lock
popa
dec
sbbl
pop
fldl
pop
lahf
mov
and
mov
dec
inc
xchg
cwtl
movb
rcl
inc
pop
inc
scas
stos
cmp
mov
loop
pop
dec
mov
push
leave
sbb
xor
sub
cmp
adc
dec
std
xor
repnz
inc
es
out
xchg
lods
pop
xor
out
call
add
stos
xchg
into
push
push
mov
sbb
xchg
inc
xchg
xor
cmp
xor
mov
aas
mov
and
arpl
mov
pop
int3
adc
out
push
xchg
xor
jmp
fmul
add
jo
iret
lret
mov
inc
sbb
std
orl
adc
pop
fidivl
flds
sbb
add
arpl
sub
sub
lcall
xchg
ss
lea
xchg
lcall
mov
pop
mov
repz
inc
lods
inc
dec
push
mov
insb
stc
mov
jg
xchg
sub
in
mov
bound
add
push
jle
mov
out
mov
orl
lock
rorb
mov
xor
cmp
and
in
adc
adc
cltd
fldcw
and
cmp
xchg
push
push
dec
jecxz
aas
bound
mov
xchg
xchg
add
jns
jo
inc
or
sbb
jne
inc
or
les
das
dec
sbb
inc
imul
mov
push
fidivl
dec
xor
flds
pusha
mov
cmp
jg
lock
pop
mov
mov
jg
push
and
in
jg
cmpsb
lcall
es
and
sub
pop
outsb
push
add
int
aas
dec
call
mov
mov
fcom
arpl
inc
cmpsb
aam
xchg
xchg
ja
dec
ds
scas
fsubrp
jmp
mov
or
push
xchg
outsl
in
xlat
ja
je
mov
jp
popl
inc
out
movl
into
pop
jae
or
nop
int
sub
popf
push
xlat
dec
sub
cs
push
inc
jnp
xchg
outsl
xor
div
and
mov
jl
insl
or
jno
outsl
enter
leave
push
sub
stos
dec
mov
push
scas
cmp
cmpsb
mov
mov
cmpsl
push
cmp
dec
mov
daa
movsl
bound
xchg
cld
cmp
and
sub
push
push
sar
jo
inc
sub
mov
push
cmpsl
test
inc
rcrb
fmul
xor
pop
lcall
cmp
test
enter
sbb
imul
rclb
inc
cwtl
addl
pop
xchg
fcmovbe
push
mov
enter
movsb
or
pop
add
int3
mov
dec
insb
out
insb
pushf
daa
fildll
mov
adc
fistpll
jae
adcl
sub
loop
hlt
inc
std
shrl
fwait
mov
sub
or
push
adc
xchg
adc
cmc
and
sbb
clc
add
int3
or
bound
das
out
xchg
xchg
jge
cmp
add
loope
shll
sahf
or
stos
in
xorl
inc
cmp
mov
mov
mov
jle
cltd
ret
push
das
stos
lret
adc
xchg
pop
push
mov
inc
and
test
xchg
or
mul
and
jbe
push
push
lods
out
ret
out
fs
cld
xchg
clc
mov
cld
and
test
mov
push
jae
in
fisttpll
mov
pop
inc
lock
movsb
leave
loope
cmp
xchg
fisubrl
cmp
ja
popa
add
dec
adc
sti
or
sub
or
das
cmp
dec
xor
pop
dec
mov
roll
and
jmp
cmpsl
sti
inc
dec
xor
repz
subl
cmp
xlat
push
xor
cmp
scas
arpl
adc
mov
xchg
xor
sub
es
and
dec
jnp
fs
push
xchg
in
mov
jmp
cmp
arpl
push
shl
xchg
jmp
adc
ja
scas
sbb
pushl
mov
fisubrs
sub
jns
test
jg
scas
stc
jl
mov
and
call
orb
cmp
outsb
push
mov
imul
xor
lcall
jno
sub
sub
daa
movsb
inc
jmp
jmp
jmp
mov
iret
jg
add
adc
dec
in
lds
dec
push
push
outsb
aaa
jp
subb
push
ja
jecxz
outsb
scas
or
cwtl
out
cmp
movhps
xor
dec
movsb
into
mov
sbb
cmp
fcompl
pop
lock
scas
fcmovnb
add
xchg
dec
or
std
clc
push
into
push
xor
arpl
enter
je
stos
cmpsb
add
sahf
cld
jnp
into
adc
insl
movsl
add
sub
and
pushf
imul
mov
and
shll
aad
and
or
test
add
xor
adc
jp
and
xchg
out
ja
hlt
aam
neg
shrl
or
fwait
mov
or
repnz
imul
mov
out
mov
es
cmp
loopne
stos
mov
cmp
cld
outsl
scas
jne
in
test
rolb
cmpsl
iret
xor
cltd
sbb
jge
and
daa
leave
cmp
sub
mov
jecxz
xchg
cmpsl
sbb
sbb
xchg
mov
daa
imul
xchg
pusha
jmp
cld
out
aas
pop
mov
cmp
or
jmp
mov
mov
add
mov
popf
sub
lret
dec
jno
fidivl
fwait
fwait
cmp
inc
jmp
jo
cmpsb
ljmp
divb
aad
lds
das
fwait
sub
decl
or
lret
aas
fdivrs
lock
mov
pop
pop
pusha
loope
aad
push
or
test
sbb
mov
dec
dec
push
sbb
je
fmull
pop
push
jl
xor
inc
sbb
xlat
push
call
dec
scas
je
pop
cmpsl
jns
cmpsb
cltd
adc
loope
popa
loope
xchg
cwtl
dec
and
push
inc
pushf
dec
push
fcmove
xchg
aam
fistps
fildll
enter
repnz
mov
shll
push
pop
in
mov
cmpb
xor
fisttps
cltd
cbtw
repz
in
loop
pop
push
jae
push
push
mov
popf
test
cmp
dec
rolb
and
daa
loopne
xchg
pop
or
lock
cld
lea
sbb
mov
clc
aaa
dec
xchg
sbb
int3
sub
mov
jl
push
jns
mov
lock
out
shlb
sub
cmpsb
mov
or
aaa
cmp
cmp
jno
in
or
fidivrl
fsubr
sub
jae
xchg
pop
sub
pop
clc
stos
push
mov
sahf
jge
das
pop
outsb
sub
xchg
repz
push
jp
mov
and
in
pop
add
mov
int
out
xlat
mov
xchg
aam
xchg
ror
push
mov
pop
mov
mov
jnp
stc
repnz
adc
into
inc
bound
sbb
xchg
sbb
inc
fisubs
xor
imul
ficoms
mov
or
cmp
ja
pop
xchg
or
jns
in
mov
lahf
pop
and
daa
lcall
mov
shl
xchg
sub
mov
shlb
cmpsl
sub
xor
add
out
fisubrs
outsb
xor
jbe
add
mov
hlt
push
sbb
repz
aas
adc
sbb
push
inc
push
mov
mov
lock
nop
inc
mov
jnp
sbb
cmp
inc
loopne
inc
push
into
into
insb
fimuls
fsts
mov
adc
or
es
outsb
jecxz
sbb
repnz
sbb
jg
add
push
aas
fwait
addr16
fimuls
jmp
jbe
xchg
sti
xor
jmp
mov
add
mov
push
fwait
sub
arpl
flds
mov
cmp
sahf
stos
pop
pop
xor
mov
dec
sub
iret
jne
xlat
dec
jne
sahf
pop
jg
lcall
push
dec
mov
mov
fadd
mov
sub
data16
pop
mov
movsb
push
inc
push
adc
or
repnz
lahf
cmp
mov
push
cmc
loope
cmp
mov
inc
sub
jecxz
pop
push
dec
inc
jl
mov
cmp
sbb
cmp
sbb
ja
in
cmc
adc
lea
mov
cmc
push
stos
adc
add
sub
pushl
cltd
aam
jnp
pop
lcall
lret
jmp
aaa
popa
movsl
xchg
testl
fmull
outsl
testb
push
inc
sub
clc
scas
out
in
bts
stos
aas
outsl
sbb
push
push
popa
add
sub
movsb
loope
inc
dec
sbb
lds
inc
jl
jle
jge
sbb
into
jmp
stos
or
rolb
pop
and
jns
or
insb
leave
fisubl
std
pop
enter
dec
push
scas
pop
sbb
push
or
push
pop
test
sub
sbb
mov
orl
inc
sub
cmpsb
insl
sbb
xor
sti
les
icebp
in
mov
pop
lret
cld
sub
sarl
adc
mov
pcmpeqw
dec
xlat
repnz
ja
test
mov
adc
fwait
mov
xor
inc
rcrl
mov
das
hlt
stos
dec
adc
scas
push
mov
and
jle
arpl
pop
repz
mov
xor
jo
inc
inc
adc
ljmp
arpl
adc
push
addb
adc
cmpsb
test
repz
pusha
xchg
gs
icebp
sub
fdivrs
adc
xlat
sub
push
mov
fisttpll
aas
mov
inc
xor
jne
or
or
ja
popa
sub
or
sub
or
je
pop
sub
and
scas
mov
add
inc
das
xchg
movsl
divb
cli
jnp
pop
sbbl
lock
test
or
cmp
xchg
in
jl
mov
pop
xor
out
ljmp
xchg
add
dec
jle
push
loop
jns
inc
lahf
fscale
shlb
and
mov
jns
lret
jo
xchg
jecxz
int3
or
xchg
paddsb
gs
lock
push
push
add
or
pop
fildll
add
jne
adc
add
shrb
mov
cs
pop
xor
aaa
aas
pop
jecxz
xchg
je
lods
sub
rclb
dec
xor
pop
call
cmp
push
mov
leave
cmp
jl
inc
pusha
push
ja
and
daa
stc
jne
cs
jmp
sub
cmp
js
rep
call
sub
xchg
lahf
subb
adc
xchg
inc
push
push
xor
repnz
xor
imul
cli
inc
xchg
mov
xlat
sahf
mov
sub
fs
adc
lods
out
scas
pop
out
push
les
pop
pusha
mov
mov
cmp
xchg
push
xchg
cs
mov
cmp
or
inc
inc
mov
inc
scas
nop
iret
inc
adc
mov
gs
push
cmp
test
pushf
lods
arpl
lock
or
iret
jmp
jne
push
dec
pop
fbld
inc
scas
idivb
ljmp
jo
enter
push
scas
test
shll
xchg
mov
cwtl
sbb
and
jno
xchg
fisttpll
cld
sar
mov
mov
ret
mov
fwait
out
jns,pn
into
adc
int
dec
push
sub
ret
out
cmpb
push
sub
fsubrs
jge
sub
and
int
xor
outsb
xchg
jo
mov
sub
int3
pop
jbe
test
lret
inc
inc
add
test
dec
iret
iret
sbb
and
adc
and
addr16
jnp
adc
shlb
pop
and
sarl
in
loop
lods
jmp
pop
and
inc
lahf
pop
outsl
fmull
lcallw
ja
mov
iret
mov
cltd
mov
xchg
popa
cs
stc
xor
sub
std
inc
aaa
fsubrl
jle
loop
jnp
enter
mov
mov
aas
inc
int3
or
inc
addr16
ret
lret
sbb
and
pop
dec
pop
mov
push
das
cld
repz
test
cmp
add
hlt
sbb
xor
jecxz
ret
in
shr
loop
ds
ret
pop
cltd
rcrb
call
scas
int3
jne
aas
nop
das
or
xchg
push
and
pop
mov
mov
shlb
push
lds
das
push
out
xchg
cmpsb
push
cmpsl
movsb
push
fs
aaa
push
cmovae
mov
xor
add
or
pop
sbb
shrb
xor
push
mov
cmp
mov
movsb
cmp
xchg
sub
inc
in
mov
fsubrp
pop
rorl
push
ret
lock
jle
jae
cli
in
jp
sbb
adc
add
pop
dec
mov
outsb
sub
fs
imulb
gs
mov
lahf
inc
adc
or
cli
add
test
push
rol
pop
lock
mov
push
adc
es
mov
movb
sub
in
mov
inc
xor
pop
xor
cmpsb
stc
mov
ljmp
imul
stc
push
dec
testl
and
jnp
in
inc
test
js
sbb
ds
scas
bound
stos
and
fmul
cmc
pop
sbb
mov
mov
jmp
inc
pop
js
cmp
mov
lods
mov
mov
jge
xor
in
jp
add
push
and
lret
pop
adc
cmp
lods
lods
mov
and
push
mov
loop
cmp
mov
dec
pop
sbb
stos
adc
push
jae
sub
aam
xchg
jns
push
js
or
movsb
mov
mov
divb
pushf
cs
rol
sub
shrl
fcomps
jmp
int
mov
jecxz
adc
iret
mov
aad
daa
in
call
dec
out
add
mov
es
cmpsb
test
mov
push
int
push
sub
mov
xor
data16
pop
and
push
out
leave
jge
cmp
icebp
mov
mov
mov
ds
sub
pop
addr16
clc
dec
addr16
jge
stc
xchg
and
xor
add
mov
mov
int3
insb
xor
fnstsw
mov
inc
or
xor
cld
add
push
pop
lea
lret
jecxz
fisubl
sub
loopne
mov
pop
pop
xchg
push
inc
jne
cmpsl
in
sahf
jnp
cli
into
mov
cmp
or
inc
and
aad
pop
lods
jne
dec
cmpsl
fsubrl
pop
data16
jo
lods
adc
push
call
fnstcw
mov
or
xor
push
push
leave
cwtl
sbb
stos
fsubrs
add
pop
es
jp
cld
mov
test
push
sbb
aad
stos
data16
xor
mov
test
push
sbb
pop
jmp
pop
arpl
jl
jmp
test
add
icebp
stos
out
repnz
xchg
mov
push
adc
orl
ljmp
push
lret
imul
add
inc
sub
test
adc
clc
out
call
push
xlat
push
jbe
repnz
cmp
push
dec
mov
mov
outsb
sbb
pop
push
int
xchg
into
sbb
stc
lret
pop
or
je
fldt
ds
jns
js
dec
sbb
int3
sahf
arpl
gs
das
imul
sbb
cmpsb
mov
mov
sbb
hlt
or
sbb
fistl
orb
in
sub
xchg
jl
xchg
add
mov
push
and
pop
icebp
xor
add
mov
xchg
ret
imul
mov
mov
movsb
push
insl
xchg
adc
pop
loope
mov
loop
inc
aaa
scas
mov
jne
js
mul
jno
cwtl
int3
pop
jl
or
stos
lret
stos
sub
sub
arpl
xor
dec
dec
cmpsb
dec
adc
lods
arpl
xlat
mov
jne
cmp
xchg
push
lock
subl
inc
push
xor
sub
lret
das
fs
iret
testl
test
xor
je
fsts
inc
push
in
fldenv
mov
ret
int
push
ror
or
setle
add
pop
mov
aam
cmpsl
loopne
cli
aad
jb
sbb
ret
add
unpckhps
fstpt
pop
mov
fidivrl
pop
mov
fidivs
mov
cmp
cmpsb
adcb
sar
jmp
jp
jno
les
push
jbe
sub
mov
mov
mov
lret
lcall
add
mov
push
sbb
lods
dec
inc
loop
rorl
sti
pop
dec
mov
addr16
pop
mov
jl
lret
repnz
cmp
loope
clc
pop
mov
out
sbb
fists
xor
sbb
or
outsl
sbb
push
aad
lcall
push
inc
outsb
test
sahf
call
test
mull
add
pushf
js
lahf
fwait
sarl
hlt
cwtl
inc
cmp
jg
fcmovnbe
xchg
xchg
adc
imul
jecxz
xor
out
pushf
fildll
cmpsb
imull
pop
inc
lcall
dec
jl
les
jbe
dec
adc
icebp
cmpsb
add
mov
and
mov
cmp
push
negb
cs
pop
or
inc
out
aas
in
dec
clc
or
in
test
jb
insb
sbb
hlt
push
mov
outsl
mov
adc
lcall
lahf
sub
add
and
lcall
lahf
mov
outsl
xchg
aam
xchg
cld
loope
js
iret
sub
jp
xor
in
fwait
in
or
cmpsl
clc
adc
cmp
sbb
xor
dec
ljmp
call
push
jno
mov
sbb
movsb
pop
orb
ja
pop
and
dec
loope
push
dec
dec
lea
gs
test
stc
sbb
dec
imul
outsb
int3
popf
aaa
decl
adc
pop
jns
adc
mov
cmpsl
fiadds
cli
add
cmpsl
shl
lret
mov
ficomps
or
loopne
stos
sbb
or
cmpsl
call
test
or
ret
in
imul
inc
mov
clts
stos
sbb
imul
stos
std
and
pop
pop
or
mov
sbb
popf
sub
jb
ljmp
int
and
pop
mov
or
adc
repnz
cmpsl
or
mov
jl
sbb
sub
and
rorb
lahf
test
out
outsb
sti
cmp
adc
xor
pop
addr16
sbb
lcall
pop
repz
sarb
jb
adc
push
testb
jle
inc
add
mov
scas
pusha
sahf
jo
jae
outsl
add
mov
mov
push
test
dec
into
enter
push
push
in
test
pop
dec
test
xor
lcall
inc
out
ficoms
or
sub
mov
mov
and
mov
inc
imull
dec
dec
pop
jno
ja
imul
sub
ds
mov
push
and
push
andl
inc
lock
mov
xchg
cmp
iret
in
stos
and
jnp
add
ljmp
mov
shrb
sti
lcall
jbe
mov
aam
lds
sbb
out
cltd
test
cmp
hlt
xchg
jb
jmp
lods
mov
ss
jbe
lcall
lds
and
repnz
cwtl
mull
jecxz
sub
std
mov
xor
out
in
lds
lcall
cmp
repnz
cmp
add
xchg
xchg
xor
fstl
dec
in
add
pop
xchg
dec
mov
stos
ror
rcll
pushf
adc
adc
cmp
push
jnp
cmp
jo
sub
mov
adc
fs
or
into
xchg
xchg
dec
push
add
sub
push
mov
in
sbb
mov
or
or
adc
xchg
push
adc
ss
repnz
call
data16
sahf
stos
sbb
iret
scas
sahf
loope
cltd
lcall
adc
in
push
lcall
mov
cmp
fldl
inc
or
and
sbbb
test
ljmp
out
mov
leave
fwait
add
fbld
pop
rcrb
mov
les
aad
loope
movsl
lea
call
mov
mov
test
mov
cltd
push
js
xor
or
jmp
ret
dec
iret
shrb
ret
push
scas
cmpsb
ja
les
dec
lcall
mov
add
nop
inc
les
push
inc
and
leave
daa
push
mov
jp,pt
mov
xchg
fidivl
adc
shrl
in
into
mov
sbb
adc
sbb
push
add
xchg
sub
mov
push
push
inc
daa
divb
idivb
adc
jl
mov
mov
sarl
lods
addr16
mov
in
dec
cmp
pop
push
and
mov
ss
adc
divb
test
jo
lock
je
sbb
in
jne
pop
out
lret
sub
fwait
xor
je
lret
test
daa
mov
add
aas
cli
jge
sub
shll
leave
and
fcom
cmp
mov
or
sbbl
sbb
das
rcll
cmpsb
loope
lods
ficoml
into
stos
xchg
int
cmp
cmp
xchg
or
jecxz
push
pop
adc
in
out
dec
xor
out
add
data16
loope
pop
cmp
imul
clc
pop
jno
xor
adcl
stc
icebp
jb
cmp
std
xchg
mov
mov
mov
xorb
pop
jno
loope
popa
add
push
or
sbb
pop
push
add
fcomps
adc
pop
mov
xor
mov
mov
movsl
push
mov
jecxz
call
cmp
mov
xchg
pop
leave
xchg
xor
insb
pop
ret
insb
push
js
popa
pminsw
and
push
into
les
cmpsb
arpl
jge
mov
lods
or
dec
pop
gs
or
aas
xchg
dec
std
lock
pop
test
loop
mov
pop
aad
sbb
and
pusha
out
test
div
je
mov
xchg
aas
cmpsl
imul
or
ss
mov
imul
and
sub
mov
xchg
push
mov
lcall
mov
scas
out
and
push
mov
adc
push
mov
lods
shrb
jp
getsec
ret
or
and
mov
pushf
push
fmul
and
sub
cmc
lahf
sbb
cwtl
push
sbb
ret
scas
in
insl
insb
mov
jo
jle
jmp
out
sarl
pushf
ja
lods
cmp
and
adc
sub
es
loop
out
imul
mov
pushw
outsb
out
shl
jnp
or
inc
xor
cmp
cmpsb
sbb
cld
les
sub
xchg
cmp
call
in
inc
imul
pop
cmp
jecxz
adc
sub
jae
push
inc
int3
pusha
int3
sub
data16
and
ds
fistpl
imul
dec
jns
pop
jae
bswap
imul
xchg
outsl
jnp
scas
cmpsb
outsb
inc
movsl
in
pop
std
mov
les
cmp
out
loop
pop
scas
out
push
fisttpl
iret
gs
fs
mov
idivb
insb
test
xor
xchg
rorl
add
ja
shll
sbb
add
rcll
mov
je
mov
and
in
inc
jnp
adc
xchg
cmp
or
out
mov
data16
fldl
mov
lods
mov
xchg
dec
inc
cmpsb
cli
imul
jnp
in
and
dec
iret
xchg
dec
popf
jp
xchg
cmp
fld1
or
pushf
sbb
jnp
icebp
cltd
lea
shrl
enter
pop
push
sbb
dec
movl
push
ljmp
into
in
cmpsb
pop
xchg
idiv
adc
pop
mov
mov
fisubs
dec
xchg
xor
inc
repz
int
out
test
sbb
pushf
xlat
dec
rorb
idivl
dec
pusha
loopne
jg
mov
stos
les
add
repnz
in
jbe
aaa
cmp
fwait
mov
push
nop
cmp
inc
fdivp
sub
andb
lea
out
push
out
sbb
jbe
test
pop
jb
lods
mov
xchg
shll
movsb
ja
push
sahf
push
into
dec
dec
cltd
fisttpl
jo
push
cmp
ficomps
sub
and
pop
add
inc
loope
lret
cmc
test
pop
jne
jecxz
adc
add
fwait
les
repnz
aad
inc
cmp
popl
jae
ror
imul
out
fwait
call
out
mov
pop
add
add
mov
ljmp
call
mov
pushf
fstps
iret
jecxz
adc
aam
xorl
lock
push
into
xchg
test
aas
daa
mov
mov
das
mov
mov
add
stos
lods
jae
aas
in
pop
mov
and
mov
pop
hlt
jns
pop
icebp
roll
mov
in
xor
roll
mov
dec
jo
and
or
inc
aam
xchg
mov
pop
push
or
pusha
adc
mov
mov
cmp
paddq
leave
inc
jle
sbb
fcmovb
popf
add
mov
xchg
push
ds
jae
and
push
arpl
sub
lret
jnp
je
mov
test
movsb
inc
sbb
dec
mov
xchg
add
movb
inc
fisttps
or
lret
adc
jno
cmpsl
and
mov
subl
mov
push
push
lods
bound
mov
adc
xchg
imul
iret
sbbl
jnp
sbb
jb
popf
aam
mov
pop
nop
adc
inc
pop
sbb
jns
addr16
cltd
sbbl
and
inc
pop
outsb
mov
cmp
xor
inc
adcb
lods
out
jecxz
mull
mov
pop
imul
dec
cmp
lock
push
xchg
and
add
mov
pop
aad
push
mov
int
leave
repnz
scas
testb
mov
mov
jmp
je
je
mov
movsl
fdivs
or
test
filds
shll
adc
jb
add
sub
jg
jmp
xchg
xor
jmp
popf
dec
mov
mov
icebp
mov
mov
aam
mov
lods
mov
icebp
punpckhbw
jnp
cmpsb
mov
mov
cmc
jmp
lds
mov
jl
sti
mov
push
sbb
jmp
mov
lret
sbb
pop
outsl
addr16
sahf
and
test
andb
outsl
xchg
mov
fdivr
fucomi
sti
aam
popf
fcomip
scas
xchg
cmp
xchg
aas
or
mov
push
scas
sub
mov
call
xchg
outsl
mov
push
lcall
imul
rcll
cs
cld
push
fiaddl
clc
jb
push
pop
sahf
push
rorl
daa
aas
lahf
xchg
push
add
hlt
lea
pop
or
sub
push
sbbb
jae
scas
mov
movsb
lcall
cmp
js
sbb
sub
lea
loop
mov
dec
pop
jne
dec
mov
rclb
repz
js
cmp
loop
cmp
xchg
push
mov
in
add
es
mov
inc
mov
insl
fnsave
sub
inc
sbbl
add
dec
adc
sarb
lds
jecxz
inc
pop
pop
cli
adc
rcrb
cmc
mov
jp
push
add
jns
jmp
daa
jle
nop
push
xchg
xchg
stos
fsubs
je
sub
mov
mov
sub
je
or
cwtl
xor
out
pop
stos
or
cmc
jg
dec
jb
dec
sahf
cli
dec
loopne
mov
mov
xchg
loop
stos
adc
push
adc
mov
jnp
xchg
mov
add
outsb
cmp
mov
loop
push
out
or
filds
repnz
jmp
mov
sbb
add
sbb
mov
cmp
dec
push
cmp
jmp
loopne
or
pop
cwtl
notb
repz
ds
in
adc
out
ret
jb
cltd
iret
dec
push
and
cmp
ret
adc
and
rorl
xchg
inc
fbstp
aad
loop
push
cs
xor
shll
icebp
ret
aad
dec
popf
and
loopne
push
fsubp
call
push
xor
add
outsb
xchg
stos
gs
insb
das
sbb
jle
push
out
jno
inc
cmpsb
insl
fsubs
dec
data16
mov
cmpsb
inc
out
std
dec
sbb
mov
and
adc
rolb
jnp
cmp
dec
stos
mov
fwait
stos
stos
jmp
adc
xchg
lret
out
test
sbb
sbb
fs
ficompl
sub
hlt
into
inc
push
imul
das
lock
push
adc
stos
add
out
pop
add
mov
bound
ljmp
sbb
jb
pop
popf
ljmp
mov
dec
xor
sbb
jo
imul
insl
mov
push
mov
and
inc
dec
sbb
mov
jb
or
js
scas
xchg
ljmp
add
mov
jnp
sub
push
fstpl
cmp
sarb
jns
imul
adc
bnd
cld
in
mov
lcall
xchg
stos
arpl
repnz
dec
arpl
sub
fs
sub
aaa
mov
lods
push
pop
int3
or
adc
dec
mov
sub
sub
jbe
mov
adc
adc
je
or
inc
mov
ret
mov
pusha
andb
sub
xor
pop
cmpsb
and
arpl
ljmp
add
sub
adc
aas
xlat
mov
cs
test
xor
aaa
cmp
add
ds
pushf
pop
fdivrl
add
lods
inc
aam
loop
cmp
push
pop
xchg
mov
and
les
xchg
test
push
push
dec
test
outsl
rclb
shlb
mov
jo
insb
xchg
push
push
dec
or
and
mov
xchg
inc
stc
shrd
enter
fildl
jp
add
jmp
ja
outsb
repz
jge
jae
ja
enter
lods
pop
out
in
jle
bnd
push
xlat
add
xchg
sbb
pop
or
pop
cltd
sbb
orb
mov
shl
inc
mov
mov
pusha
fbstp
scas
lods
sbb
fmull
xchg
sahf
xchg
push
push
leave
cmp
xchg
dec
imul
aad
mov
movsb
xor
ret
mov
lods
mov
xchg
stc
push
cltd
repz
pop
sbbb
lods
pop
add
hlt
inc
inc
imull
mov
sub
mov
outsb
sti
ret
xor
or
push
cltd
clc
aaa
js
imul
pop
and
jp
aad
dec
xchg
jno
in
lret
adc
pop
xor
xor
test
sbb
lahf
nop
push
addl
pop
es
mov
mov
outsb
cs
mov
pusha
xchg
pop
lcall
in
xchg
mov
ret
add
rcll
push
outsl
fiadds
push
adc
clc
lcall
push
loopne
xchg
ss
in
mov
cmc
pop
and
aaa
lea
lods
daa
jmp
ljmp
jle
dec
xor
addr16
push
pop
jg
sbb
daa
push
std
andb
inc
ret
adc
jle
clc
pop
mov
test
leave
mov
inc
pop
subl
xor
fimuls
jl
es
adc
mov
ds
xor
mov
jg
gs
mov
xor
insl
out
jge
inc
mov
jge
pop
inc
and
add
test
leave
mov
cmp
push
mov
clc
xor
xchg
sbb
xor
movsl
pop
cmp
negl
shlb
jecxz
xor
cmp
push
jno
lret
mov
mov
add
addr16
cmp
out
cltd
leave
push
ret
push
aaa
shlb
dec
and
mov
repnz
fiadds
iret
mov
shl
inc
mov
ljmp
stc
inc
sub
jge
cmpsl
mov
cmp
sub
push
scas
mov
rorb
mov
inc
sbb
aad
cltd
arpl
mov
push
test
popa
mov
call
aas
xchg
inc
mov
push
push
aaa
adc
sbb
rcrl
jbe
adc
pop
sub
js
mov
daa
inc
xor
sbb
inc
pushf
lret
lds
insb
xchg
mov
xor
pop
pcmpgtw
insb
mov
leave
dec
mov
lds
adc
jae
or
dec
out
test
aam
js
mov
ret
mov
shr
aas
insl
jg
fdivs
imul
mov
movsl
mov
sbb
mov
fisubrs
faddl
imul
test
mov
add
mov
inc
rclb
inc
insl
pop
mov
rcll
mov
and
jae
pop
pusha
inc
fwait
sbb
jg
inc
ja
fcoml
pop
mov
dec
les
jo
or
jmp
add
sub
loope
mov
dec
leave
mov
shll
frstor
mov
sub
fdiv
fidivrl
scas
gs
repnz
test
cmpsl
xchg
adc
fisttpll
push
bnd
dec
or
repz
ficoms
inc
cmpsl
popf
sub
std
jbe
leave
mov
add
xchg
xchg
aaa
sbb
rclb
in
add
sbb
pop
mov
shl
out
nop
pushf
clc
shl
sub
test
lcall
gs
pop
xor
add
out
scas
xchg
add
dec
out
das
mov
hlt
mov
stos
pop
mov
xor
leave
mov
push
pop
loop
adc
iret
mov
xlat
test
aad
rcr
outsl
daa
ss
push
push
jl
subl
mul
xchg
imul
cwtl
sbb
sub
outsb
xchg
mov
leave
mov
pushf
cmp
lods
push
jecxz
shrl
pop
cmp
cmp
cmp
pushf
mov
rcr
bound
lock
mov
fwait
xchg
mov
inc
mov
pusha
fs
dec
cmp
loope
xor
or
mov
dec
sahf
sub
mov
inc
hlt
push
sbb
and
add
aad
cmc
popf
dec
pop
dec
lret
push
mov
cmp
xchg
shlb
push
addr16
pop
int
jle
and
inc
fisttpll
mov
cmpl
pop
add
pop
cld
dec
lock
cltd
cwtl
mov
or
negl
rcll
and
xor
cmp
jmp
xchg
add
filds
rcrl
mov
aad
lahf
cmp
inc
fwait
movsl
cltd
xor
pop
jge
inc
xchg
pop
fiadds
push
and
pusha
jle
pop
fcmove
xchg
jecxz
and
jp
addr16
repz
mov
pop
mov
aaa
dec
inc
insl
inc
repz
es
test
test
jp
xchg
push
aaa
out
push
into
fadd
fcoml
mov
pusha
std
inc
xchg
jbe
leave
arpl
adc
pusha
pop
jbe
in
and
inc
push
cs
outsl
mov
aas
roll
das
adc
jne
push
cmp
mov
test
sbb
jns
sub
dec
std
clc
aam
jmp
inc
pop
inc
sti
sbb
mov
jnp
cmp
mov
mov
xchg
jae
pushf
dec
sbb
pop
sbb
mov
fidivrs
movsl
jae
mov
xor
add
adc
sbb
fs
in
mov
bound
mov
aaa
aam
cmp
xor
cmpsl
mov
jmp
add
lret
dec
dec
jp
sbb
out
mov
ds
adc
pop
in
jns
cli
or
inc
xchg
mov
inc
jmp
mov
mov
push
hlt
ret
mov
repz
jmp
test
jo
push
sti
and
cltd
fistl
mov
fs
jmp
cmpsb
xchg
in
xchg
push
push
jp
stos
mov
jne
popf
aad
inc
mov
pushf
xchg
jb
xor
subb
sub
inc
repnz
dec
movsl
xlat
inc
in
xchg
leave
shlb
mov
aad
cmp
xchg
push
lods
and
jae
stos
sarb
icebp
jo
push
data16
lods
jl
or
and
inc
shr
cli
xchg
cmc
lret
mov
inc
xchg
xchg
lea
out
dec
cmpl
push
out
ja
dec
imul
mov
cli
mov
mov
insb
adc
insl
adc
mov
repz
sub
cmpsl
inc
cld
in
movsb
sahf
and
mov
mov
adc
out
sub
aas
sti
push
adc
movsb
sbb
imul
pop
adc
out
push
movsb
push
in
fs
push
push
jl
add
in
add
sbb
outsb
insl
icebp
pop
and
in
loop
stos
test
data16
jnp
js
xor
xchg
mov
int
xor
aaa
jnp
mov
pop
call
mov
pop
je
mov
jns
cwtl
stos
sub
xor
jb
xchg
push
in
mov
sbb
gs
sbb
dec
aas
add
sub
xchg
sub
xor
fiadds
sub
rcll
rclb
sar
das
mov
ss
roll
addb
dec
cmpb
ret
ret
cmp
jmp
pop
aas
jmp
xor
in
stos
mov
shl
cmp
adc
inc
or
pop
sub
xchg
into
dec
in
loopne,pt
mov
pop
xor
push
rorl
jl
mov
mov
xchg
ret
jb
sbb
mov
notb
cmp
cwtl
xchg
adc
push
pusha
sahf
iret
push
inc
dec
push
daa
repz
jg
sahf
call
jbe
add
jns
mov
jp
mov
divb
sub
ret
and
pop
mov
div
dec
lds
mov
loopne
push
sbb
push
and
add
pop
push
add
cmp
dec
cmp
popf
data16
xchg
adc
push
inc
pop
jne
xor
inc
push
adc
pop
xor
adc
shlb
enter
dec
adcl
sbb
test
lahf
sub
icebp
data16
or
fsubrs
jg
sbb
or
and
lods
arpl
ficoms
xchg
dec
pop
shlb
gs
pusha
sub
jno
out
shlb
sub
and
stos
rcl
pop
test
lcall
das
adcl
add
nop
test
cmp
std
inc
lahf
aam
mov
das
outsb
mov
pop
cmp
dec
insb
stc
pushw
pop
lods
rcl
out
jb
int
and
call
mov
jb
sbb
addr16
fisubrs
adc
fldt
mov
mov
popa
mov
dec
push
jne
jge
or
sti
arpl
lahf
cmp
rcll
repz
add
cmpsb
jnp
push
jg
test
adc
nop
add
in
jge
insl
mov
js
mov
cld
push
cmc
popa
loope
in
scas
inc
pop
and
inc
adc
std
cmc
xlat
or
aad
inc
push
dec
clc
pop
in
ret
sub
rorb
cmp
iret
push
stc
fisubrl
f2xm1
out
inc
mov
dec
xlat
fs
inc
push
out
mov
das
scas
inc
push
add
mov
cmc
jecxz
inc
dec
push
jo
jae
lods
mov
push
daa
mov
arpl
je
jbe
inc
das
mov
and
xor
or
pop
xlat
mov
xlat
stc
std
jg
xor
sub
gs
outsb
test
out
mov
jp
inc
aas
sbb
mov
cmp
out
stos
enter
xchg
pop
adc
push
sub
jmp
out
jae
push
stos
fsubrs
in
cs
sbb
jo
ret
lea
push
rorb
fstpt
cmp
push
dec
mulb
and
outsl
or
jnp
inc
lahf
mov
cld
xor
lods
in
push
xor
mov
cmc
xchg
mov
mov
sub
iret
les
dec
inc
les
call
test
sbb
sub
pop
sub
jge
sub
das
sub
inc
aas
sub
lahf
scas
sahf
xchg
push
or
fldt
test
mov
add
mov
imul
cmp
not
pop
add
lret
lds
into
sbb
fs
push
stos
adc
mov
push
out
mov
pop
test
push
sti
fisubs
or
inc
iret
int3
icebp
in
inc
mov
mov
mov
sbb
out
push
jnp
hlt
imul
push
addb
idivl
mov
mov
shlb
mov
fldt
into
push
jb
adc
adc
jae
add
and
cli
iret
push
push
push
cmpsb
or
ds
int3
inc
mull
mov
jecxz
data16
inc
rcrl
mov
jl
ja
mov
arpl
sub
xorb
xchg
xlat
mov
inc
das
out
mov
fcoms
jbe
mov
loop
nop
ss
fs
jno
lcall
inc
jp
and
xchg
jno
das
lock
push
cmp
mov
adc
inc
push
clc
out
loope
push
xor
je
pop
jmp
fwait
lods
roll
in
mov
stc
inc
les
dec
jae
cltd
sbb
mov
push
pushf
pop
jne
inc
jbe
cmp
shlb
push
pop
scas
lds
out
cli
mov
jl
push
jg
dec
call
push
mov
in
imul
push
jns
jbe
xchg
lret
xlat
sahf
nop
out
ds
pushf
mov
xchg
scas
adc
aam
jo
int3
test
cld
inc
jno
cmpsb
adc
dec
sarl
jecxz
pop
mov
idivb
jo
test
dec
sbb
inc
icebp
pop
clc
cld
or
or
lods
dec
movsb
push
pop
ja
lods
adc
sbb
mov
pushf
cs
jl
dec
stc
in
rcll
pusha
sub
imul
loop
mov
fstpt
mov
and
dec
push
pop
nop
xchg
cltd
adc
and
mov
stc
nop
sub
or
add
mov
adc
ss
cltd
and
fidivs
popf
jno
mov
sbb
clc
and
out
mov
mov
lret
or
mov
das
push
mov
fs
nop
xor
fldcw
addb
mov
pop
ds
sub
mov
arpl
sub
push
mov
iret
jno
aad
mov
xchg
addr16
es
pop
movsb
adc
lock
dec
daa
movsb
mov
jno
xchg
repz
jbe
lahf
flds
addb
imul
mov
sahf
es
rcll
inc
data16
faddp
sbb
je
dec
sub
test
mov
mov
inc
movsb
int3
pushf
stc
gs
pop
stc
std
lret
movsb
loope
pop
pop
arpl
pusha
in
lahf
clc
mov
ljmp
add
jno
dec
lcall
in
add
ficoms
inc
or
scas
scas
sbb
out
mov
addr16
mov
cmpsl
out
adc
jae
ss
mov
in
sbb
cmp
loop
popf
lea
mov
idiv
mov
dec
jne
and
pusha
pop
inc
ds
jmp
xchg
lahf
inc
jle
push
outsb
dec
shrb
xchg
mov
inc
lahf
and
movl
or
out
jae,pt
notl
call
cmp
sbb
adc
in
push
inc
jb
test
mov
loope
xchg
mov
cltd
stos
fdivr
gs
jp
lods
cmp
mov
iret
movsb
push
mov
mov
jnp
lods
xor
xchg
or
negl
insb
add
xor
lret
loope
push
dec
mov
and
xchg
jl
lods
in
dec
add
adc
ror
jo
fildl
inc
jb
ja
outsl
sti
clc
scas
dec
stc
daa
sbbl
xchg
add
aam
repnz
and
push
fwait
inc
jmp
daa
adc
mov
cmpsb
pop
int
rcl
fistpll
mov
inc
ret
xor
push
sub
orl
xor
mov
dec
xor
outsl
adc
pop
insb
clc
pop
xchg
jbe
gs
in
bound
repnz
dec
fsubp
and
sbb
pop
andl
fs
lea
add
cmp
mov
jno
repz
imul
rolb
add
adc
or
fsts
inc
lahf
aaa
pop
xor
pushf
mov
fucomp
inc
sti
das
mov
xor
in
cmp
jp
xor
and
int
js
outsb
mov
lods
les
xor
mov
push
mov
ja
push
pop
jmp
adc
mov
cmp
dec
cs
frstor
push
xchg
mov
jns
add
pop
dec
mov
or
or
inc
xbegin
std
xchg
jo
xor
pop
push
xchg
push
imul
mov
mov
insl
push
std
cld
jp
dec
or
ficoms
pop
in
bound
lods
jmp
dec
pop
sbb
pop
insl
sbb
push
incl
out
push
dec
xchg
xor
shlb
fisttpll
imul
fs
jnp
xorb
xchg
fiadds
pop
in
les
lods
pop
das
mov
push
int3
hlt
push
cmpsl
cmp
pop
mov
pop
fcomp
dec
pushf
or
movb
jno
fstpt
or
push
mov
sbb
movsl
mov
imul
xchg
imul
lret
fmuls
cwtl
push
pop
push
jecxz
aas
sbb
jns
sbb
mov
notl
shrl
dec
xchg
les
xor
pop
js
adc
rcrl
adcb
out
sub
jnp
push
jge
mov
push
outsb
inc
xchg
inc
jl
mov
xor
stos
insl
inc
cmp
movsl
repz
fsubrs
popa
rcl
cs
ds
pop
hlt
dec
lahf
mov
loop
mov
mov
mov
xchg
xor
mov
jnp
or
add
xchg
xor
pop
adc
dec
shll
or
ror
leave
lahf
arpl
mov
adc
mov
shl
sub
pop
mov
cli
fisubrs
push
inc
pop
jp
fs
in
out
jp
stos
jmp
xor
movl
stos
cmp
mov
and
imul
add
push
jne
mov
fdivrp
xchg
movsb
movsl
sub
jl
mov
and
mov
shrb
sbbb
mov
lcall
insl
mov
insl
mov
push
pop
push
or
dec
and
dec
in
and
sub
arpl
xlat
push
mov
dec
push
shl
nop
outsb
sub
inc
add
pop
push
pop
push
dec
cli
rep
in
mov
repz
and
jmp
adc
jmp
scas
or
pop
jne
movsb
xchg
dec
outsl
sub
mov
jle
dec
ret
xlat
sahf
sbb
mov
gs
sarb
sbb
popa
jns
testb
mov
or
cmp
or
jns
stc
mov
ret
cmp
push
fmull
adc
adc
jbe
jnp
and
cltd
inc
aam
iret
sbb
dec
test
jg
aas
pop
fdivrs
add
in
lret
cmp
imul
adc
mov
std
jmp
xor
fwait
jecxz
shll
test
dec
es
pop
cwtl
xchg
xchg
sbb
jb
push
arpl
or
out
inc
mov
rolb
ret
or
cmp
sbb
imul
rcll
mov
out
add
push
ror
mov
lods
fs
mov
sub
shlb
mov
mov
inc
mov
jmp
dec
sbb
mov
andl
sub
divb
jb
in
je
fwait
pop
dec
sub
xor
lcall
cld
imull
sub
lcall
cs
outsb
pop
lods
inc
rcr
mov
mov
cmp
add
es
mov
and
pop
imul
es
adc
movsl
es
je
imul
inc
push
cs
jecxz
pusha
jne
jb
and
push
js
mov
movsb
xor
or
mov
sub
mov
testl
xchg
je
cs
aam
push
inc
lods
loope
jno
mov
dec
movsb
movsl
out
repz
xchg
in
negl
mov
jp
gs
jge
in
pop
pop
ret
repnz
subb
dec
gs
leave
jo
jo
xchg
and
test
lcall
push
test
arpl
mov
scas
cld
sbb
push
cli
mov
and
sbb
dec
pop
ror
arpl
mov
fs
pop
andl
adc
sarl
push
fcoms
lds
mov
cmp
xchg
outsb
shll
dec
add
mov
sub
inc
pop
cmc
lods
movsl
pop
push
dec
jno
jae
pop
pop
test
sub
dec
jne
inc
aaa
loopne
clc
xor
ja
jns
pop
iret
icebp
jno
cld
iret
mov
popf
xor
or
cli
pusha
pop
dec
mov
int3
or
pop
adc
mov
fdiv
adc
sub
imul
mov
subl
pop
nop
and
pop
mov
cmp
or
out
inc
or
xchg
test
mov
ja
popa
jecxz
stos
jne
out
adc
pop
dec
fsubrp
ljmp
mov
into
and
pop
cmpsl
leave
aam
inc
dec
xchg
ret
pop
mov
xor
lahf
dec
clc
je
push
pop
cwtl
xchg
mov
or
fadd
xchg
stos
in
xor
inc
lcall
jp
ds
mov
mov
xchg
push
fucom
mov
ljmp
adc
push
pop
mov
fsubrl
ret
pop
add
dec
out
out
sbb
push
stos
out
sub
fcom
ret
push
cwtl
inc
mov
cmpsl
jle
sbb
jae
mov
movl
insb
add
test
std
push
shll
insb
roll
add
sti
arpl
test
or
pushf
mov
sub
adc
sub
aas
insl
test
adc
popa
inc
mov
inc
mov
ds
inc
out
mov
dec
sbb
aad
adc
in
data16
subl
xor
mov
add
in
popa
pop
pop
pop
pop
js
adc
fs
mov
or
cmp
les
dec
inc
test
xor
inc
imul
outsl
dec
mull
sbb
or
cmpb
aas
mov
pop
idiv
mov
xchg
jne
adc
xor
fnsave
xor
adc
scas
and
cli
cs
or
ljmp
out
cmpsb
int
pop
in
or
push
rcrb
xchg
jo
pushf
test
pop
pop
shll
out
daa
out
shl
je
das
ret
aaa
stc
adcl
sbb
mov
es
pop
test
imul
push
inc
shr
sub
outsl
pop
cli
or
aaa
int3
or
or
dec
dec
mov
mov
repnz
pshufw
les
jae
lock
adc
shll
mov
repz
pop
shlb
test
out
push
aad
pop
les
insb
aad
sub
arpl
xchg
push
xchg
js
and
lahf
add
sub
and
insl
sub
jae
jmp
cmpsl
lods
add
es
push
std
gs
push
daa
mov
sbb
jbe
push
shl
jecxz
dec
jmp
inc
scas
lods
sbb
fsubrs
bnd
aam
data16
fsubrs
push
inc
outsb
mov
and
add
add
int
in
jbe
rolb
pop
jnp
daa
inc
das
push
and
pushf
int
inc
and
clc
mov
adc
imull
leave
enter
mov
test
mov
xchg
lret
ret
add
jno
stc
cwtl
lret
sub
daa
sub
andl
fstps
out
xor
inc
dec
int3
jge
or
scas
stos
repz
in
ret
or
sbb
test
cli
stos
lock
push
mov
adc
jl
int3
sub
dec
sti
mov
push
sub
jle
xchg
pop
xor
jmp
nop
lods
xchg
or
movsl
push
mov
insb
rcrb
popf
and
dec
push
add
stos
dec
cmp
scas
lret
into
sbb
sub
inc
das
es
xchg
ss
cli
adc
shll
add
dec
andl
mov
jno
icebp
inc
jb
mov
mov
xchg
inc
cmpsb
inc
push
cmpsl
pop
jns
push
gs
in
movaps
pushf
jecxz
cmp
dec
pusha
add
or
inc
mov
cmpsl
push
sbb
lret
stos
fsubl
stos
sbb
pop
inc
cmp
mov
push
xor
sub
scas
pushf
cmp
pop
adc
pop
jnp
jnp
push
mov
imul
in
negb
fdivrs
into
addr16
inc
jnp
mov
mov
imul
sbb
push
fdivrl
mov
mov
pop
sbb
push
fisttpl
xchg
fildll
jne
inc
repz
inc
lcall
jl
pushf
test
fistl
inc
pop
into
push
mov
std
je
shr
mov
fs
int
cwtl
mov
mov
push
cmp
jg
mov
sbb
dec
push
jmp
jmp
sarb
enter
shll
fwait
hlt
jmp
sbb
mov
lea
call
sub
jbe
lret
xchg
fstpt
mov
add
in
arpl
pop
es
mov
filds
mov
out
and
xchg
sub
xlat
cltd
cltd
fwait
int3
mov
pop
repnz
xor
mov
jae
repz
sub
aaa
mov
mov
shr
sbb
dec
ret
repz
repz
push
xor
fs
aas
sub
sbb
rep
ficompl
lahf
xor
and
test
outsb
dec
mov
into
xchg
lods
addr16
add
outsb
outsb
pop
and
aas
stos
add
in
mov
data16
cmpsl
ss
push
push
sbb
mov
adc
xchg
adc
inc
fs
idivb
cli
adc
fcomps
sbbb
sub
dec
sbb
cld
cmp
in
loop
cs
fistl
sbb
call
add
mov
clc
sbb
es
mov
pop
ret
popa
mov
repnz
mov
or
add
push
fcomps
fwait
add
or
dec
xor
mov
fldl
add
jbe
and
and
aaa
addr16
sbb
dec
pop
out
cltd
loopne
and
or
leave
enter
push
xlat
add
cmp
lock
mov
pusha
inc
and
push
rolb
xchg
inc
xchg
in
shl
jecxz
dec
or
arpl
xchg
xchg
cmpsl
xchg
cwtl
push
test
dec
add
or
movb
loope
push
fidivs
jns
pop
stos
sbb
jnp
call
cmp
and
jmp
sti
cwtl
cmp
inc
dec
movsl
mov
out
mov
out
inc
xlat
push
hlt
bound
movlps
jl
xchg
jl
jge
das
jnp
in
sub
iret
js
and
inc
in
mov
add
data16
mov
push
jmp
call
hlt
cmc
dec
out
jecxz
sub
shl
popa
pusha
adc
mov
pop
sbb
test
jo
decb
cs
sbb
lahf
out
orps
sbb
cmpsb
fists
and
and
out
popf
or
sub
pushf
sub
in
sahf
lahf
xor
xor
bound
ja
std
and
divl
movsl
cmp
xor
into
or
dec
scas
fisubrl
nop
xor
xor
bnd
inc
aam
sbb
jg
inc
mov
ds
pop
push
dec
bound
jne
or
lcall
test
daa
xorl
xlat
mov
cwtl
scas
popa
andb
jae
sub
adc
inc
adc
out
test
jnp
mov
fcoms
imul
lahf
mov
je
fs
jmp
mulb
inc
push
shll
adc
and
jne
dec
movsb
inc
jmp
frstor
int
ret
test
pop
cmp
sub
mov
fdivl
xrelease
data16
jbe
push
jo
enter
jge
lods
pop
adcl
xchg
shll
repz
jne
scas
dec
push
popa
push
lock
iret
dec
mov
sub
pop
inc
xor
jmp
fcoml
inc
aam
pop
pop
sbb
gs
faddl
sub
dec
mov
pop
sbb
ljmp
iret
jno
es
aam
scas
xor
add
insl
dec
lret
das
xchg
gs
cmpsb
sub
repnz
inc
jne
jbe
dec
fwait
add
or
and
mov
leave
adc
xlat
arpl
cmp
mov
mov
pop
test
sub
mov
fildl
xchg
jmp
fadds
js
sbb
sub
mov
inc
push
repz
dec
outsb
fidivrl
mov
mov
sub
movl
or
test
add
add
or
dec
sbb
in
inc
movsb
and
ja
cmp
out
lods
sub
mov
sbb
lds
mov
inc
jne
subl
pusha
fadds
pusha
cld
or
mov
sub
inc
lret
iret
mov
mov
sbb
jl
xchg
mov
xor
xchg
cmp
pop
dec
add
lret
jae
mov
cli
inc
and
stos
or
pop
pop
mov
or
xor
mov
jns
test
jnp
inc
mov
pop
jno
pusha
je
das
pusha
imul
fadds
mov
scas
mov
mov
mov
addr16
sti
inc
and
or
lcall
mov
xor
imul
andl
cmpsb
push
mov
call
jl
mov
jg
push
lcall
loop
lret
add
or
xor
or
xorl
js
mov
pop
mov
decl
test
movsl
insb
xchg
popa
mov
shrl
mov
lods
sub
or
stos
call
movsl
and
call
mov
pop
xchg
pop
mov
aas
je
cmp
fsubs
and
scas
mov
loopne
xchg
loop
cmp
sub
mov
shrl
cmpsb
pop
mov
mov
stos
adcl
sahf
xchg
jo
lea
push
pop
mov
cs
xchg
lret
xor
movsb
mov
icebp
fs
jmp
xchg
adcb
addr16
lahf
mov
in
addr16
bound
hlt
shr
jp
sti
jg
push
js
push
leave
or
js
xor
pop
out
xchg
sub
push
mov
mov
jb
sbb
gs
aam
mov
imul
pop
sbb
stos
stos
pop
stos
test
xor
cmp
and
add
nop
jns
sbb
fwait
inc
insl
ficompl
dec
loope
stc
pushf
mov
jne
pop
rcll
cmc
es
or
inc
xor
inc
fdivs
sbb
pop
adc
scas
je
push
imul
adc
lcall
xor
cmp
jne
dec
mov
dec
mov
dec
mov
inc
mov
call
sub
stc
jp
sbb
aas
jle
ret
ret
cmp
movsl
jmp
fwait
nop
add
lock
adc
in
jne
jb
imull
pushf
and
subb
pop
add
movsb
mov
in
mov
shlb
mov
mov
je
add
mov
int
scas
push
add
sahf
test
roll
movsl
jb
fs
cld
xchg
rcrb
inc
gs
pop
mov
negb
add
ret
stc
sub
push
ljmp
mov
adcb
adc
mov
or
into
out
aas
cld
sti
dec
je
sub
loopne
or
push
adc
pop
repnz
push
mov
xchg
call
jbe
xor
in
enter
roll
cli
pop
mov
rorl
lods
enter
xor
push
rcr
pop
mov
leave
icebp
or
push
sbbl
inc
ds
xor
sbb
sub
push
data16
inc
mov
push
or
lahf
stos
push
mov
in
call
mov
sub
je
data16
sub
enter
lea
out
insl
push
cmc
cmp
adc
daa
je
dec
stc
repnz
addl
cmpb
xor
arpl
cwtl
cmp
sbb
aas
sub
scas
and
adc
iret
stos
jne
sbb
idivb
stos
push
ret
out
cmp
lret
pop
enter
js
jae
gs
rorl
stc
mov
faddp
mov
xchg
clc
fisttpll
push
insl
loopne
xchg
push
mov
mov
lcall
cltd
push
in
inc
sub
mov
pop
lods
inc
mov
dec
loop
nop
test
pop
sub
sbb
push
mov
mov
jl
jns
push
leave
vaddsubpd
out
repz
xchg
pusha
test
xor
cli
dec
push
loop
mov
push
adc
jno
inc
scas
ljmp
pop
mov
ljmp
into
addl
xchg
ljmp
into
addr16
je
and
cmpl
pop
push
mov
sbb
or
push
ds
lock
and
cmp
add
mov
rolb
insb
xor
jle
fwait
popl
rclb
mov
test
insb
daa
outsb
mov
lret
rcrl
aas
andl
daa
fwait
scas
mov
rcrl
insl
xchg
push
xchg
pop
decl
jle
and
and
sbb
loopne
sub
push
lcall
inc
or
adc
xor
ss
mov
xlat
cmp
les
cmpb
stos
add
test
shll
hlt
nop
addb
sahf
cmc
stos
xor
gs
dec
insl
sub
adc
pop
mov
add
movsb
std
jne
cmpsl
or
push
dec
xor
pop
xchg
adc
mov
nop
adc
in
push
filds
mov
fwait
rcll
loopne
mov
cmc
jbe
fcoms
pop
insl
stos
aas
and
loopne
add
and
dec
lods
or
adc
idiv
andl
dec
push
cmp
dec
jg
lcall
or
faddl
or
mov
jge
aad
dec
and
mov
fdivs
pop
or
push
cs
dec
mov
pop
and
mov
fxch
fstpt
push
mov
xchg
lret
inc
pop
inc
insb
int3
adc
pop
and
mov
movsb
in
push
push
fbstp
sub
sub
mov
repnz
adc
pop
fbstp
xchg
subl
insl
inc
mov
pextrw
lcall
sbb
and
gs
sarb
xchg
fs
cmp
dec
pusha
fnstcw
add
popf
mov
xlat
push
sub
hlt
mov
sbb
imul
fsubp
pop
adc
add
xchg
mov
sbbl
adc
mov
fdivrs
fsubrl
mov
nop
fs
mov
outsb
mov
add
jle
add
mov
decb
adc
sub
pop
mov
or
add
pop
mov
inc
jbe
scas
mov
jns
pop
cli
cmpsl
mov
ja
and
test
sbb
jecxz
pushf
pop
pop
loopne
hlt
int3
xchg
icebp
ud0
in
and
dec
jns
push
cmp
mov
mov
push
lahf
pop
cmpsl
jp
jge
mov
and
mov
pop
cmpsl
mov
xor
jno
addr16
mov
jmp
fwait
and
and
aaa
push
les
and
mov
lea
xor
arpl
jle
jae
stc
aaa
cwtl
pop
add
cmpsl
pushl
lret
fwait
mov
outsl
mov
mov
sbb
ret
cli
adc
outsb
and
xor
adc
movsl
xor
mul
fcomps
xor
add
repnz
int3
jg
or
xchg
ja
sub
inc
stc
pushf
mov
mov
fidivs
push
cwtl
pop
lock
vpinsrw
and
xchg
push
sbb
jae
mov
jb
add
jne
xchg
leave
ljmp
lret
mov
cmpsb
lret
ret
push
stos
xor
call
scas
sub
out
in
mov
inc
scas
arpl
xchg
xchg
or
xchg
out
mov
data16
mov
push
scas
jl
enter
xor
fldcw
into
mov
or
test
lcall
lret
gs
addr16
xor
out
rcr
push
xor
add
nop
mov
mov
mov
inc
xor
mov
shlb
int3
aas
adc
rcll
push
sub
or
out
negb
cmp
sahf
sub
in
or
mov
inc
xchg
out
test
push
cli
fwait
sbb
and
xor
hlt
jno
xor
push
mov
inc
and
shrb
mov
pop
lcall
or
call
mov
push
push
dec
hlt
pop
fimuls
lcall
clc
es
pop
test
inc
xchg
aad
and
xchg
fistl
push
jl
insl
in
sbb
mov
mov
add
xor
imul
adc
adc
cld
xchg
gs
adc
push
sbb
sarb
sbb
add
std
test
pop
mov
shl
jo
hlt
es
jle
jg
push
pop
js
mov
push
loopne
dec
addl
push
inc
pop
rorl
jp
cs
outsb
lock
add
orl
fisttpll
mov
cmpsb
mov
cmp
cwtl
sti
fsubrl
add
insb
push
sbb
stos
stos
call
repz
insl
out
adc
insb
mov
lret
dec
repnz
dec
mov
jo
cmpsb
jp
cltd
pop
shl
mov
imul
mov
int3
rcll
xchg
out
jmp
orl
sbbb
mov
dec
out
movl
jno
ljmp
in
bound
dec
sbb
leave
inc
sub
jno
and
mov
dec
add
lret
loopne
cli
rcl
push
dec
or
jp
fs
call
xorb
dec
xchg
push
rcr
jbe
fnsetpm(287
adc
daa
jae
dec
adc
sub
mov
dec
fistps
cmpsl
cmpsb
sbb
cmp
notl
jb
and
dec
dec
imul
cwtl
cs
mov
loope
push
gs
aad
jae
or
shll
add
insb
cwtl
cmp
push
aad
repz
or
add
fadds
xchg
jns
xchg
les
push
pop
jl
mov
add
mov
or
push
in
shll
lock
jae
pop
and
dec
fsubrs
jns
idiv
push
cltd
call
pusha
fistl
xchg
aad
jge
fcmovnbe
outsl
scas
daa
fnstenv
call
xor
xor
vpmaxub
lret
outsb
bound
ret
push
fiadds
xor
out
cmpsb
xchg
lret
and
dec
sbb
mov
jecxz
pop
xor
sub
mov
push
pop
xchg
xor
cmp
leave
ret
adc
sbbl
mov
into
mov
sahf
mov
popa
enter
ror
in
aaa
lahf
and
out
cmp
jmp
pushf
sub
gs
or
lds
pop
sbb
lods
rcll
cmpsl
stc
xchg
call
inc
inc
test
rcrl
out
fcoms
bound
mov
xlat
dec
jmp
mov
imul
js
test
and
fsubs
mov
cmp
xor
xor
mov
jns
iret
dec
inc
iret
rcll
loope
sub
data16
cld
gs
sbb
and
inc
mov
inc
cmpsb
sbb
call
mov
xchg
mov
lds
insl
jecxz
in
sub
xchg
icebp
sbb
adc
leave
outsl
leave
stos
inc
sbbb
in
mov
jmp
orb
xor
dec
roll
adc
scas
push
xlat
aas
scas
xchg
sbb
fildll
cs
push
mov
add
ret
or
loopne
jg
aaa
aaa
loopne
add
push
loope
aaa
cmp
mov
jb
xchg
rcll
js
jbe
shlb
mov
jae
leave
ret
scas
jmp
test
sub
repz
bound
lods
pusha
rcll
push
add
mov
fsubrs
jmp
xchg
in
inc
add
mov
out
cmpsl
outsb
sbb
adc
cmpsb
dec
into
inc
sbb
mov
lock
sbb
or
adc
out
jg
lods
sbb
mov
fildl
mov
add
js
insb
mov
jno
int3
test
pushf
scas
xchg
shrl
push
xor
fcoms
push
test
into
push
push
cmp
dec
dec
or
movsl
dec
sbb
outsb
repnz
and
mov
cmp
xchg
mov
mov
sarl
mov
jmp
jae
sbb
or
cmpsl
pop
arpl
mov
inc
push
add
les
xchg
test
mov
ljmp
fiadds
push
add
fadds
push
fisubrl
inc
sub
add
xor
mov
gs
loope
add
mov
ja
mov
cmp
test
mov
mov
or
push
loopne
in
dec
push
and
mov
inc
out
add
dec
adc
ljmp
jae
cmpsl
push
cmp
mov
std
mov
xor
lods
pop
mov
shrl
mov
mov
jae
rolb
fdiv
lret
idivl
orb
dec
sbb
mov
xchg
dec
push
pop
test
stos
mov
pushl
adc
sbb
test
pushf
or
dec
rorl
mov
mov
mov
xchg
xor
test
dec
add
adc
xor
ror
imul
lret
jae
lds
push
mov
jp
in
dec
mov
repz
inc
nop
mov
pop
mov
std
jmp
jne
xchg
mull
fs
or
add
andb
adc
push
and
jmp
cmpsb
jae
fs
and
jmp
jmp
or
sub
mov
push
bound
sub
add
popa
xchg
jbe
pop
fildll
aaa
xor
xlat
mov
push
ret
ds
sbb
fcmove
push
jns
leave
jp
cmpsl
lahf
pop
rorl
sbbl
cwtl
push
mov
jmp
pop
push
or
fcoms
lcall
add
es
sbb
xchg
pop
or
mov
xchg
fimull
daa
pop
pop
or
pop
add
ljmp
mov
xor
push
sub
nop
mov
inc
xor
sbb
and
adc
lret
ficompl
xor
arpl
mov
aas
mov
mov
adc
push
mov
push
inc
add
orb
cmp
xchg
sbb
mov
mov
sub
push
sahf
loop
jp
mov
iret
dec
in
imulb
cmc
ds
repnz
add
lret
loop
pop
inc
adc
cltd
xor
inc
stos
jb
mov
lds
pop
mov
or
jecxz
popf
mov
mov
test
mov
out
fdivs
std
jl
sbb
ds
or
push
mov
sbb
leave
inc
jle
in
rcrl
lds
icebp
jl
imul
xor
fisubrl
mov
cmc
mov
xor
jecxz
bound
xchg
iret
dec
test
pop
lods
pop
pop
xchg
inc
stos
mov
xchg
and
dec
xchg
fwait
pushf
jmp
xor
mov
pushf
dec
ja
ret
ljmp
sbb
and
mov
rcll
cmc
cmp
shll
cmp
mov
or
repz
adcl
lods
lret
nop
xor
inc
inc
mov
lods
fbstp
push
pusha
adc
test
in
xchg
fs
sti
sbb
loopne
subb
push
stc
lods
xor
inc
outsb
pop
mov
inc
pop
dec
cmp
movsl
cmp
jns
loopne
and
jne
movsb
inc
addr16
aas
je
xor
jl
mov
ja
rcr
test
mov
test
psubsb
push
inc
cmc
and
lcall
out
add
add
jl
dec
in
mov
pop
mov
mov
pusha
mov
sahf
sarb
lcall
dec
xor
pop
inc
les
adc
roll
and
dec
test
pop
xchg
dec
xlat
mov
mov
mov
pop
push
push
add
call
jge
sub
cmp
dec
jbe
push
lcall
negb
mov
pop
dec
dec
xchg
mov
jle
xchg
ljmp
std
pop
jne
mov
in
jns
jge
scas
gs
gs
icebp
adcb
sbb
test
mov
mov
cli
das
test
fiadds
negl
cmp
lds
clc
int3
dec
loop
xor
clc
aas
lret
pop
les
push
loopne
mov
lods
dec
jmp
jle
xchg
xchg
ret
fwait
pop
lret
mov
in
fidivs
hlt
cwtl
test
cmp
loop
test
pop
or
test
ss
mov
mov
cmpl
xchg
mov
cmp
js
pushl
bnd
sbb
inc
jne
mov
enter
fdivrl
int3
jns
lcall
es
adc
push
mov
and
pop
pop
sub
mul
cmp
mov
mov
xlat
jns
or
insl
roll
imul
popa
insb
jno
jno
xchg
add
lock
sbb
daa
add
xor
clc
int3
lret
loop
sbb
cltd
and
movsb
ss
push
jle
add
pushf
dec
lret
adc
inc
sbb
mov
pushf
clc
push
test
imul
or
cmpl
pop
cmpsb
sub
inc
jl
aaa
stc
mov
pop
fadds
push
int3
cli
mov
inc
shrb
sbbl
or
movsl
ljmp
mov
bound
cmp
fstpt
or
jae
or
shlb
lods
lods
or
or
idivb
inc
push
and
mov
repnz
mov
mov
fildl
in
pop
xchg
aam
insb
jo
dec
sbb
xchg
mov
into
mov
adc
and
lds
aaa
or
ss
cltd
cmp
push
inc
mov
adc
pop
das
inc
into
adc
icebp
jle
add
shll
mov
into
data16
int3
sub
push
push
lahf
hlt
inc
jp
arpl
ja
popa
mov
icebp
lret
fucomi
jge
test
lret
jl
iret
inc
sub
mov
mov
mov
xor
repnz
sbb
sub
data16
fcompl
ja
xor
out
test
idivb
test
cmp
cmc
cwtl
les
insl
out
aaa
mov
enter
rcrb
mov
or
std
push
xor
imul
loop
xor
das
scas
shrl
movsb
fdivl
jno
sbb
divb
jge
jno
dec
push
insb
cmpsb
fiaddl
test
sbb
and
nop
and
push
iret
dec
sub
negl
imul
sbb
shl
xor
fs
adc
xchg
jmp
jmp
cltd
jbe
fdivrs
sbb
lcall
pop
lahf
jecxz
sub
fists
lcall
mov
push
mov
add
fwait
shrb
test
mov
mov
aas
mov
add
cmpsl
xor
or
loope
insl
notb
and
cmp
lahf
pop
sub
fildll
int
idiv
repnz
add
enter
mov
sub
js
xor
int
sbb
adc
cmp
enter
sbb
xchg
fstl
and
inc
add
inc
mov
dec
loopne
mov
pop
jo
ds
fwait
scas
sbb
inc
mov
aas
fs
popf
xor
or
lock
sub
in
pop
xorl
aaa
aad
loop
out
imul
dec
roll
and
imul
cmp
adc
sti
xchg
ret
cltd
mov
dec
mov
lods
ljmp
rolb
adcb
shll
lods
cs
cmp
jmp
pop
out
mov
fcomi
je
or
xlat
dec
add
cmp
shl
rcll
test
xchg
xchg
inc
adc
stos
mov
sti
leave
and
push
lahf
sbb
mov
je
xchg
inc
cmpsb
adc
fists
and
clc
rcrl
aas
out
loope
sbb
mov
aad
jg
notb
adc
jnp
je
sahf
cmc
lea
outsb
pop
jmp
lods
cmp
jle
sahf
push
push
jns
mov
add
addr16
adcb
bound
mov
or
dec
xor
xor
push
mov
out
sub
into
or
outsl
adcl
flds
into
xorl
dec
arpl
aam
xchg
into
les
int
jno
lret
push
jg
jmp
and
cmp
int3
or
jb
sbb
icebp
adc
jb
inc
fcmovnbe
test
push
outsl
mov
pop
push
jecxz
out
aam
sbb
imul
push
push
test
mov
cmp
fwait
push
shl
loop
fwait
pop
out
inc
adc
push
or
and
imul
rcll
sbb
xchg
jecxz
imull
hlt
cli
scas
push
pushl
sub
daa
sbb
repz
in
or
xor
mov
add
popf
push
test
scas
frstor
mov
mov
mov
or
push
sbb
imull
dec
insl
or
jns
leave
idiv
and
lret
xor
push
pop
popl
pop
and
or
jo
push
add
je
sub
sbb
pop
mov
cmp
push
jecxz
into
sbb
inc
mov
call
test
cli
jmp
cmpsb
test
cmp
push
cmp
aad
pop
mov
js
sub
xchg
sarl
addr16
mov
pop
rorl
loopne
sti
lret
or
dec
pop
div
fidivl
fadds
daa
fwait
push
mov
xchg
mov
sbb
sub
cmc
xlat
push
jecxz
mov
in
fistpll
hlt
fninit
push
fistpl
mov
repnz
ss
cs
scas
stc
in
divb
lods
into
mov
mov
shl
clc
jnp
stc
imul
jne
icebp
pop
sbb
clc
aad
mov
cmp
es
jge
cmp
xor
mov
cmp
shr
sbb
xchg
js
jbe
pop
aas
cwtl
add
shll
or
loop
mov
mov
int
mov
loopne
mov
inc
xor
sub
or
cli
add
inc
pop
ret
add
mov
mov
ss
push
jge
cmp
push
add
out
test
add
mov
sbb
aas
mov
loopne
arpl
sbb
pushf
inc
dec
sarb
cli
je
stos
mov
out
into
loope
add
lcall
push
xor
in
xchg
jno
add
and
mov
and
dec
insb
fs
insb
sub
iret
mov
adc
and
xor
stos
jnp
jp
jne
movsb
xchg
cmp
test
faddl
data16
pop
jo
xchg
jns
and
xchg
mov
sub
iret
rcl
aad
sub
add
pop
cltd
sub
push
jge
pop
and
movd
mov
movsl
es
push
and
std
sub
aaa
xchg
xchg
int
sub
jge
xor
mov
add
sbb
lahf
daa
xor
add
pushf
inc
push
adc
repnz
jle
ror
fdivs
mov
jne
or
mov
mov
lret
or
subl
popa
je
addr16
add
ret
mov
movsl
sbb
ljmp
dec
pop
sub
mov
jb
scas
aaa
mov
jl
inc
push
and
cli
push
lds
jb
mov
fcoms
mov
inc
in
cmp
scas
xor
nop
scas
sbb
inc
imul
add
sbb
repnz
fdivrs
adc
ljmp
pop
dec
sbb
cmp
int
push
lods
inc
and
fsub
and
ljmpw
fdivrs
pop
xchg
mov
outsl
mov
outsl
jo
xchg
js
push
adc
fcmovu
jp
popa
pop
sahf
popl
icebp
iret
sahf
pusha
mov
mov
scas
loope
leave
imul
ret
loop
push
xchg
jle
pusha
loopne
dec
sarb
mov
imul
lret
mov
push
pop
lods
ja
scas
inc
or
cmp
xchg
add
pop
in
inc
inc
sub
aas
mov
and
mov
out
ss
rol
popa
nop
cmp
add
dec
daa
jo
xchg
add
ds
mov
mov
inc
cmp
xor
popa
mov
push
inc
loop
sub
ret
inc
inc
cmpsb
xor
pop
cmpsl
mov
lahf
mov
add
or
ss
lods
pop
xchg
lret
pop
xor
popa
add
jo
aad
push
push
dec
sbb
pop
std
int
shrb
jle
cmpsl
mov
rorl
mov
andl
jae
les
sbb
sti
adc
push
xchg
popf
add
insb
pop
jbe
inc
dec
dec
xchg
jle
rolb
je
push
dec
in
mov
insl
addr16
daa
pop
shlb
sbb
shrl
in
fdivrp
cmp
mov
int3
in
and
pop
je
add
mov
mov
pop
test
adc
xchg
aam
jecxz
adc
lock
push
cmp
jnp
pop
sbb
js
jge
daa
clc
je
imul
pop
push
call
xlat
fnstenv
xorl
sbb
mov
adc
jae
repz
pop
dec
adc
fstp
stos
jge
sub
call
mov
push
cli
fidivl
enter
xor
outsl
fwait
imul
arpl
outsl
xchg
cli
cs
lahf
lret
pop
out
mov
stos
sbb
aaa
push
xchg
fildl
mov
mov
push
pop
mov
push
aad
loopne
cmpsl
pop
adc
or
scas
ljmp
in
lods
pusha
mov
adc
fidivrl
lret
mov
push
jge
subl
mov
fwait
or
cmp
fimuls
mov
jne
inc
mov
push
mov
cmpl
xor
lret
sahf
je
jb
mov
lahf
lea
or
fwait
mov
cmp
ret
lcall
or
sub
mov
cmp
add
xor
movsl
stos
fiaddl
arpl
test
popa
outsl
xlat
nop
hlt
cmpsl
out
fmul
jle
aam
loope
outsb
push
push
xlat
xchg
xor
push
ss
outsb
sub
sbb
mov
push
pop
jg
jne
inc
testl
mov
pop
out
push
jbe,pn
mov
mov
ret
jbe
cmp
dec
mov
inc
ljmp
lock
addr16
xor
scas
testl
push
lahf
lds
xor
addr16
push
pushf
xor
pcmpgtw
add
shrl
je
and
and
push
or
mov
leave
test
in
ret
movsl
or
push
mov
mov
jns
mov
out
orb
mov
jae
pop
arpl
out
scas
cmp
mov
push
sub
cmc
mov
dec
pusha
xchg
lret
lods
movsb
fucom
and
testb
lds
push
outsb
xor
cs
pop
push
adc
inc
or
mov
or
jmp
inc
sarb
cmp
arpl
mov
shrb
pop
in
xor
and
xchg
add
cmpsl
lcall
imul
fs
cs
mov
mov
into
fildll
push
cwtl
mov
loopne
pop
movsl
fwait
dec
pop
dec
out
scas
out
cmp
inc
add
xor
in
daa
adc
push
insl
pop
fucom
lock
xor
and
in
cmp
jno
fisttpll
xchg
push
mov
adc
xor
orb
xlat
or
rcrb
test
sub
mov
lock
inc
cltd
nop
data16
jmp
push
pop
fs
mov
push
icebp
jge
cmp
jle
les
cmp
aas
pusha
inc
jnp
cmova
push
pop
imul
ss
and
loop
or
in
gs
mov
and
push
mov
repnz
pop
lds
inc
xlat
and
lret
in
xchg
xchg
and
mov
testb
push
negl
scas
into
in
out
xor
add
std
mov
push
outsl
mov
and
mov
dec
xlat
xchg
inc
pop
cs
sbb
ss
pop
jb
sbb
dec
daa
pusha
fisttpll
pop
push
mov
xchg
xchg
xlat
das
in
dec
into
nop
xor
xchg
pop
fisttpll
bts
divb
xor
test
sub
sahf
jno
xchg
out
cli
repz
inc
jbe
jae
addr16
sahf
sub
testl
push
jmp
xchg
jecxz
daa
mov
je
addb
lods
in
outsb
cvtps2pd
leave
ja
add
push
sarl
fwait
mov
mov
mov
mov
push
mov
fsubrs
or
cmp
repz
xor
mov
popf
mov
stc
mov
mov
stos
js
in
test
es
arpl
movsb
int
and
enter
or
lods
and
nop
movb
dec
mov
nop
xchg
mov
imul
mov
jl
neg
jnp
out
or
push
hlt
cltd
sub
mov
pop
loop
add
inc
aas
push
or
dec
sub
call
xlat
das
pop
push
stos
dec
imul
jno
movsb
inc
pop
out
cwtl
jno
dec
sub
mov
xchg
fs
xchg
cmp
add
fdivrs
xchg
repz
pop
sbb
sub
cmp
test
int3
and
lods
imul
adc
pop
dec
sahf
shlb
xchg
in
or
mov
cmp
scas
push
icebp
fs
jo
les
mov
jle
xor
sbb
andb
mov
adc
mov
dec
add
inc
fcompl
cs
mov
shlb
xor
adc
test
ret
mov
inc
negb
adc
jbe
fisubl
insb
pop
dec
inc
mov
jecxz
lret
pushf
daa
or
and
ret
scas
rclb
das
lcall
pop
lods
and
jle
jo
jl
mov
stc
aam
stos
negb
es
pop
sbb
cli
dec
loope
shll
xchg
call
shll
adc
sbb
jno
pop
aas
mov
lcall
mov
xorb
adc
xchg
dec
pop
sbb
fistpl
addr16
aaa
mov
rcrb
hlt
mov
mov
das
xchg
cltd
sub
pop
or
icebp
in
insl
adc
adc
adc
addr16
push
pop
mov
subb
sub
pop
daa
ljmp
popa
out
rorl
dec
les
outsl
imul
sbb
movups
gs
adc
mov
mov
cmp
out
push
mov
test
inc
in
xlat
inc
and
mov
inc
loop
sahf
inc
hlt
scas
jae
subl
jae
or
dec
sub
repz
lock
sbbl
stc
shrl
xor
sub
dec
adc
insl
icebp
ss
add
dec
icebp
add
outsb
movsl
pop
movsb
les
jns
mov
es
mov
ja
ljmp
add
push
jb
push
stc
jb
fndisi(8087
test
out
int3
xlat
pop
cmp
dec
jg
xchg
xor
hlt
in
int
stos
xor
xor
adc
out
cmpsb
xor
pop
cmp
nop
lea
push
mov
and
inc
jne
dec
mov
ja
pop
add
jg
cmp
or
out
mov
loope
mov
cmp
push
and
cmpsb
insl
mov
cmp
xchg
sub
xchg
pop
or
pop
add
rcl
inc
mov
jmp
jb
scas
jp
data16
imul
fisubrs
loopne
push
fwait
xor
pop
out
or
add
dec
sbb
dec
loopne
mov
sub
and
push
sub
pop
in
sub
jp
pop
jno,pn
and
or
xchg
dec
aam
fiaddl
jecxz
movsb
mov
dec
xorl
scas
jnp
jb
push
scas
inc
push
loope
push
xchg
mov
pop
jle
out
lret
int
inc
enter
or
clc
int3
shlb
ss
push
mov
add
insb
push
mov
xor
movb
push
nop
inc
and
dec
int
int3
lahf
dec
pop
xlat
dec
mov
test
lds
ret
bound
flds
out
sbb
cmp
js
jecxz
sbb
inc
jecxz
stc
cwtl
aaa
xor
inc
mov
push
mov
push
test
fcomps
fadds
into
aam
sub
dec
fstp
sbb
test
jo
sub
fbstp
in
mov
inc
mov
mov
push
bound
pushf
and
pushf
fcompl
stc
ds
sbb
push
sbb
rorb
sbb
jbe
std
push
std
dec
adc
lret
jns
gs
push
sahf
je
cmp
and
je
jbe
cltd
mov
cld
jbe
or
bound
outsl
or
cmp
cmpsl
add
scas
repz
mov
xor
jb
or
mov
fisubl
dec
sub
jns
adc
dec
lods
jg
mov
aas
loope,pn
add
popa
mov
pop
pop
jle
push
bound
fwait
rcrl
push
push
add
icebp
and
call
das
stos
fcmovu
fdivl
insl
push
cmpsb
adc
mov
mov
mov
add
inc
out
jmp
adc
aas
shlb
push
push
fwait
rclb
push
lods
pop
pop
fcmovnb
cmp
cld
sub
movsb
dec
es
jo
mov
bound
enter
jecxz
jbe
sub
insb
gs
pop
sub
sahf
fnstcw
imul
mov
xor
and
adc
into
dec
push
rcl
sub
flds
ss
and
ror
in
fwait
mov
push
js
sbb
dec
icebp
and
xchg
mov
loope
and
vmread
xchg
dec
cmp
lea
jl
loope
popl
in
repz
andl
sub
inc
mov
push
jmp
in
xchg
and
add
push
lret
out
and
cwtl
ficoms
mov
adc
adc
roll
aad
or
mov
inc
jge
jno
push
jno
mov
push
cmp
out
cmp
scas
add
scas
test
ret
rcrb
dec
repz
xor
ret
cmp
mov
and
push
push
gs
or
xlat
movsb
push
adc
pushf
pusha
xchg
inc
test
stos
pop
cmp
leave
push
mov
cmp
faddl
mov
ss
nop
adc
cmp
sbb
pop
dec
cli
dec
dec
xchg
cmp
fwait
movsb
push
mov
mov
xchg
inc
push
mov
aam
gs
or
mov
cmc
and
sti
pop
mov
movsl
test
ljmp
pop
inc
sbb
rorb
mov
push
mov
and
leave
cmpsb
and
jmp
and
mov
inc
dec
cmc
jne
push
push
sbb
scas
test
repz
mov
or
inc
dec
sub
inc
lock
stc
pop
cmpsl
andb
test
aad
sub
adc
je
cmpsb
pop
mov
stos
cli
xchg
adc
cmp
push
pop
push
fstp
inc
lcall
push
inc
xor
push
xchg
cmp
scas
rcrb
sti
sub
je
fimull
dec
cmp
ds
orps
das
lret
in
push
fdivl
jg
aad
mov
add
inc
push
rorl
outsb
mov
sub
mov
loopne
dec
cmp
fucomi
sti
mov
pop
in
or
lret
ret
sahf
cmp
scas
outsb
movsb
pop
xor
cltd
push
and
and
push
ja
push
insl
adc
or
xchg
pop
sahf
jge
in
push
inc
scas
pop
pop
popa
in
scas
mov
and
cmp
jne
js
aad
stc
mov
mov
stos
mov
cmpsl
inc
idivl
jle
sbb
mov
imul
inc
cmpsl
clc
adc
js
inc
fdivrl
repz
mov
insl
mov
pop
adc
push
daa
inc
fidivrl
std
jb
mov
shr
dec
mov
frndint
bound
sbb
or
add
pop
lock
popa
dec
jle
sbb
repnz
dec
or
loop
sbb
or
or
movsl
mov
mov
outsl
pop
orb
dec
js
dec
loopne
add
nop
and
popa
inc
cmpsb
adc
xchg
ljmp
add
imul
pusha
jecxz
or
pop
shl
arpl
and
rcrb
xchg
test
lock
arpl
xor
or
sarl
test
dec
inc
stos
sbb
fstl
mov
xor
loopne
ret
into
cmp
inc
cmp
out
je
loop
cmp
stos
mov
mov
imul
mov
mov
mov
jge
push
push
sub
jnp
lea
pop
repnz
or
or
adc
negb
pop
les
sub
lock
pop
es
mov
stos
xlat
mov
mov
mov
mov
test
popf
xor
fisubrl
rcl
int3
sbb
mov
pop
jb
cs
push
test
mov
jmp
ds
mov
cmp
pop
lret
insb
inc
lret
cmp
lret
test
out
and
mov
ss
cwtl
cltd
sbb
inc
inc
pop
fsubrs
mov
xchg
mov
andl
dec
lock
in
mov
push
jecxz
xchg
push
jmp
scas
test
add
jns
sbb
fbld
mov
enter
xor
xor
xchg
popa
lret
aas
pop
jecxz
pusha
cmpsb
imul
popf
pop
lds
ror
out
push
jns
and
adc
mov
shrb
or
ret
iret
adc
pusha
dec
cmpsl
mov
in
out
push
mov
push
daa
mov
and
inc
adc
pop
inc
pop
jne
addr16
inc
pop
cmp
fnstenv
xchg
call
iret
shr
mov
mov
popa
les
daa
shrl
mov
ljmp
inc
jb
xchg
push
mov
sbb
and
daa
lods
cmc
ret
inc
test
mov
jl
subl
inc
lea
xor
ljmp
popa
adc
inc
pop
repz
xchg
mov
push
mov
or
dec
xchg
loop
adc
xchg
and
add
outsl
arpl
adc
adc
pop
mov
lcall
int
or
push
mov
xchg
in
jno
cmp
mov
and
into
add
jecxz
push
dec
mul
mov
stos
mov
xchg
sub
xor
ret
mov
add
inc
cltd
push
mov
stos
jo
shll
loopne
scas
adc
mov
mov
lcall
test
mov
out
lods
push
out
mov
dec
sub
sub
das
push
cmc
insb
lret
outsb
mov
mov
sbb
sub
outsl
mov
push
pop
inc
or
fdivrs
jo
inc
mov
lds
in
xchg
cld
sub
mov
xchg
push
lahf
mov
inc
jbe
jbe
jle
insl
cwtl
lds
mov
push
flds
mov
add
fdivrl
pop
jmp
ja
mov
je
fistpl
fwait
jae
jge
data16
sarl
neg
xchg
outsb
add
adc
adc
cld
jle
test
add
and
insl
mov
out
mov
les
xchg
mov
jecxz
fisttpll
aam
and
outsb
mov
arpl
mov
js
stos
push
ss
xor
jle
decb
xchg
int
fwait
iret
outsl
pushf
mov
mov
std
inc
fldt
fsubs
xchg
shl
xor
push
pop
outsl
and
movsb
jecxz
cwtl
dec
xor
mov
pop
aad
test
getsec
inc
cwtl
fmul
mov
lea
mov
or
mov
xchg
sub
jnp
outsl
call
pushf
mov
shlb
shlb
cltd
andl
push
cld
mov
fdivl
adc
insl
jb
sbb
push
pusha
frstor
dec
inc
or
sbb
je
outsb
jns
test
bnd
mov
mov
out
inc
mov
mov
adc
rcl
mov
clc
sub
scas
scas
mov
inc
scas
inc
fadd
mov
insb
mov
sub
pop
push
int3
jmp
int
in
loopne
xchg
mov
inc
imul
les
stos
xor
xchg
jns
popf
int
loope
jl
add
sub
lret
jno
cli
cmp
sbb
imull
adc
in
shrb
jp
push
jne
or
outsb
imul
push
call
or
cli
push
ja
inc
sar
insl
add
enter
sub
mov
mov
jbe
into
sub
lcall
xchg
test
mov
mov
cmp
mov
jne
sti
mov
cltd
mov
loope
sbb
in
pushf
add
addr16
cmp
fabs
fdivl
loop
dec
pop
addb
out
push
add
out
pop
xchg
rorl
inc
pop
cld
in
push
pop
or
or
inc
les
and
flds
xchg
mov
aam
in
rorl
call
das
in
call
sbb
xchg
add
sub
pop
mov
shll
dec
fistpll
scas
inc
clc
dec
lcall
aas
xor
mov
push
or
iret
stos
jo
mov
out
pusha
cwtl
xchg
mov
leave
jbe
cmp
dec
pop
iret
js,pt
std
pop
push
sbb
sarb
or
xchg
ds
mov
push
add
xchg
das
inc
adc
dec
xchg
sbb
lods
lea
stc
lds
mov
pop
rcrl
jae
je
js
sbb
cmp
js
leave
negl
movsb
into
sub
leave
xchg
add
hlt
pop
leave
sbb
pop
sti
push
cmp
and
shrb
and
in
sub
insb
add
clc
das
mov
pop
cltd
movb
pop
clc
lods
cmc
push
pushf
aad
icebp
push
pop
stc
gs
mov
and
mov
lret
cmp
mov
xchg
cmp
pop
iret
pushf
adc
cmp
push
push
popf
out
mov
or
dec
js
jae
mov
xorl
mov
cld
sti
mov
sub
inc
cmp
ljmp
ss
sbb
sbb
aad
iret
and
fcmovnbe
inc
imul
sbb
mov
sbb
das
or
outsl
mov
cmp
cmpsl
test
cmp
jl
pop
inc
cmc
sub
xchg
mov
or
or
dec
ljmp
pop
xchg
inc
or
add
cmp
mov
sub
push
jecxz
movsb
push
test
ljmp
aam
iret
inc
mov
int
xchg
mov
adc
repnz
or
rolb
sbbb
test
in
shll
adc
data16
add
aam
and
mov
dec
push
out
pop
inc
mov
inc
push
mov
sbb
add
jl
jnp
sub
daa
test
mov
das
jle
sub
daa
xor
xor
loopne
xor
jnp
pusha
movsb
jp
jnp
popa
or
loopne
fists
pop
xchg
imulb
movsl
inc
aaa
out
andb
xor
shll
add
enter
shrb
popl
sbb
enter
fcoml
testb
outsl
xor
mov
aaa
ficoms
add
jmp
icebp
je
mov
int
xor
shlb
mov
sti
add
outsb
mov
mov
shrb
xor
mov
outsl
std
ja
stos
or
jns
jecxz
ret
inc
mov
add
pusha
push
adc
push
jne
jge
dec
jbe
xlat
jbe
or
add
ja
mov
push
ja
ja
into
dec
pushf
push
cmp
int3
jo
in
or
or
cmpsb
push
adc
add
aaa
push
daa
int
std
arpl
xor
mov
decl
fcmovnbe
inc
push
out
and
mov
push
mov
and
or
pop
iret
rorb
pop
repz
repz
cmpb
xchg
xor
subl
into
inc
mov
cmp
mov
inc
push
scas
pop
jl
cmp
mov
pushf
xor
push
push
mov
add
jle
pop
add
dec
jb
sub
adc
pop
cltd
test
xor
mov
xchg
scas
mov
mov
push
fsts
jne
int3
daa
out
mov
sub
push
in
push
arpl
adc
jmp
xor
sub
call
lret
sti
sub
and
and
sti
loope
ljmp
xchg
aas
in
mov
ss
cmpsb
insb
cmp
in
jg
jno
sbb
xchg
mov
andb
sub
mov
lahf
sbb
lret
sbb
pop
push
movsl
outsb
leave
jne
mov
outsb
xor
add
cwtl
outsl
fistpl
adc
lahf
mov
mov
std
xchg
loope
pop
mov
push
cltd
sahf
xchg
test
mov
pop
xor
ljmp
lds
aaa
dec
jmp
daa
xor
fbstp
jmp
or
sahf
and
ficomps
sub
hlt
push
cmc
sub
cmp
cmc
sub
mov
mov
test
push
jle
sbbb
das
inc
inc
lcall
or
jnp
cmp
shll
nop
mov
outsb
clc
in
and
mov
popa
js
xor
adc
and
sbb
jmp
mov
pushl
cli
or
mov
mov
add
int3
sub
push
daa
popa
pop
sbb
int3
repnz
inc
add
push
aad
cli
dec
mov
dec
adc
and
cmp
xchg
fdivs
lcall
mov
out
aad
or
popf
jno
fwait
clc
sbb
lods
mov
mov
popf
push
cmpsb
xchg
xchg
push
pusha
popl
inc
push
inc
mov
adc
adc
cmp
or
pop
and
shl
cli
in
and
mov
shrb
sbb
test
xorl
and
scas
nop
pop
cmc
mov
mov
insb
cs
xlat
cmp
rorb
adc
mov
dec
repz
ds
fcompl
lods
mulb
mov
rcrl
mov
enter
xchg
sti
jae
movsb
adc
lret
push
aas
mov
data16
jo
into
jo
in
or
mov
or
ljmp
push
mov
push
andb
jo
adc
ret
mov
or
mov
or
xchg
mov
sub
ficoml
mov
andb
xchg
dec
dec
imul
and
cltd
xor
addr16
inc
out
push
sbb
sub
mov
out
jmp
mov
fstl
arpl
push
lods
test
pop
push
jmp
fldl
pop
mov
inc
dec
xchg
jl
adc
cmp
imul
push
add
cwtl
dec
lock
mov
in
lock
dec
pop
and
and
loopne
mov
push
jp
inc
cwtl
mov
int3
sbb
add
dec
leave
and
or
jns,pt
mov
out
movsl
or
pop
mov
lret
andl
adc
pop
add
call
xchg
inc
inc
add
sbb
xor
sub
inc
fdivl
dec
xor
sbb
inc
ds
mulb
lea
sub
sbb
clc
pop
xlat
repnz
aaa
test
enter
enter
inc
fcmovnu
xor
dec
push
movsl
or
cmp
cmp
inc
test
xchg
sbb
xchg
dec
jne
adc
shlb
mov
adc
jmp
test
stos
out
nopl
cld
sbb
insl
jb
mov
mov
pop
mov
adc
stos
dec
adc
jbe
ret
mov
mov
imull
out
mov
xor
cmpsl
pop
mov
insl
aaa
sub
inc
lods
cli
add
scas
inc
stc
lods
sbb
das
dec
cmp
cwtl
arpl
adc
push
clc
xchg
cs
xchg
sub
xor
pusha
rol
mov
dec
mov
mov
in
or
bound
jge
add
and
jge
xor
mov
jl
pop
pop
stc
rorb
push
leave
or
test
jg
xor
loop
test
xor
push
jg
ret
pop
roll
ds
add
jp
lea
xor
cmp
pop
jno
xchg
jbe
stos
or
gs
push
test
sbb
mov
mov
and
lds
in
outsb
clc
cmp
mov
xor
ja
pop
in
fcmovnbe
sub
les
mov
and
aad
in
cmp
inc
mov
sbb
js
mov
mov
test
xchg
jl
test
enter
cmp
aaa
jbe
jo
out
lods
adc
in
jp
movsl
icebp
cli
pop
in
jp
lock
adc
jl
cmpsb
jne
cmp
sbb
and
insl
inc
sub
sub
stos
and
lods
or
and
mov
mov
pop
lcall
xchg
sub
and
mov
mov
add
pusha
lret
mov
inc
inc
pop
sarl
cmp
inc
add
mov
xchg
outsl
xchg
andl
pop
fmulp
cltd
std
jecxz
fidivrl
sbb
lret
jns
dec
pop
sub
sti
jmp
add
add
inc
sub
in
in
stos
imul
int3
adc
movl
test
dec
in
pop
addr16
xchg
hlt
jmp
or
daa
sti
pop
clc
push
push
sub
jb
jnp
scas
pop
fiaddl
xorl
xchg
pop
adc
xor
pop
adc
cmpsl
xchg
mov
pop
pop
lahf
movsl
xchg
ljmp
dec
insb
cs
and
cmpsl
mov
pop
cmc
jb
mov
gs
notl
fsubrs
push
icebp
stc
in
ret
mov
cwtl
cltd
inc
addr16
mov
sbb
mov
inc
or
sbb
or
jp
xlat
test
pushf
cmp
mov
dec
popf
addl
arpl
pop
cmc
xchg
popf
inc
inc
jb
outsl
dec
push
or
xlat
rcrb
mov
mov
xchg
or
icebp
leave
test
popf
imul
mov
jno
pop
push
xor
push
and
fdivrp
enter
test
or
xor
and
or
popa
push
add
push
inc
jmp
aaa
jnp
fcmovb
leave
xchg
xor
mov
adc
xchg
ja
xor
jmp
adc
ljmp
dec
push
and
xchg
scas
fcoms
adc
sub
sbb
in
aam
xorl
incb
add
mov
xor
popf
and
and
repz
les
pop
or
mov
ss
push
dec
lahf
std
loope
jecxz
fwait
addr16
aam
testb
out
and
pop
jg
mov
adc
cltd
push
cmpsb
cmp
icebp
cwtl
loopne
int
popf
jbe
pop
adc
les
insl
cld
lret
dec
pop
inc
mov
or
cmp
sbb
cmp
pop
pop
mov
cmp
std
repz
pop
pop
fst
pusha
imul
bound
jl
mov
jbe
cltd
cld
int
adc
outsl
das
pushf
push
add
xchg
call
ja
aad
ja
jmp
ret
jecxz
bound
das
mov
and
jbe
cli
dec
pandn
and
and
int3
lahf
push
add
pop
cli
jg
insb
jmp
jb
lods
clc
dec
mov
cmp
xchg
mov
xchg
cwtl
or
mov
cs
dec
shll
fists
rorl
mov
bnd
jbe
jl,pn
fcoml
gs
xor
or
xor
mov
outsl
mov
in
aad
and
cmp
aas
clc
leave
and
insl
xlat
mov
or
mov
jl
mov
inc
or
jg
jae
es
test
push
sahf
dec
xchg
arpl
xchg
push
cmpb
inc
cmc
ret
push
cwtl
jo
cld
add
clc
xchg
test
rolb
sub
fcoml
xchg
or
add
hlt
push
sub
int3
movsl
test
and
sbb
outsl
hlt
mov
hlt
and
out
sub
xchg
loopne
mov
xchg
hlt
filds
mov
cmp
add
aaa
push
shll
pop
out
mov
push
jg
int
xchg
jnp
mov
mov
rol
ret
or
jmp
inc
mov
push
fwait
inc
dec
jo
in
out
jmp
xchg
addr16
mov
push
xchg
lea
cmpsb
lock
rcll
cltd
and
test
jg
inc
xchg
sti
cmc
xchg
cmp
popa
xor
mov
shll
pop
fidivrs
cmpsl
adc
xchg
push
fs
mov
loopne
mov
movsb
pop
sub
loop
jecxz
repz
into
loope
popa
cmp
outsb
dec
mov
scas
stos
mov
mov
insb
add
inc
in
jo
pop
arpl
mov
xchg
hlt
imul
dec
sbb
mov
rcll
push
addb
lds
sbb
lock
rorl
bound
pop
xlat
add
dec
rcrl
inc
sub
mov
pusha
cmpsb
sahf
cld
aaa
test
mov
rorb
push
stc
dec
xor
es
jmp
sub
jmp
dec
jmp
frstor
mov
jle
push
and
subl
jo
mov
shr
je
std
xchg
mov
push
xchg
mov
outsl
xchg
ret
outsb
or
mov
mov
mov
sar
lds
push
or
mov
rclb
jecxz
xchg
bswap
rorl
ds
adc
pusha
dec
in
cld
lea
fbld
js
fldl2e
sub
ret
scas
xchg
cmpsb
lea
jbe
das
mov
aas
call
movsl
sub
lods
sbb
jecxz
lret
bound
jge
cmc
jmp
das
pusha
mov
xor
arpl
fnsave
and
xchg
sbbl
adc
mov
mov
loope
jecxz
xor
frstor
arpl
xor
test
xchg
das
xchg
mov
mov
mov
movsl
pop
push
dec
jns
call
scas
test
flds
sbb
in
lret
cltd
out
repz
jmp
mov
inc
push
lock
arpl
inc
jecxz
cmp
jo
push
test
aad
pop
dec
push
mov
test
mov
xor
cld
xor
pop
mov
inc
or
cmp
lods
mov
push
lahf
iret
jp
xchg
popa
enter
adc
xor
inc
sbb
ljmp
dec
xchg
xchg
push
loopne
outsb
shlb
shrb
sub
aad
mov
push
das
sbb
jl
lret
and
fdivrs
lcall
cmp
add
adc
xchg
jbe
or
pop
xchg
lock
mov
outsl
rolb
in
jecxz
dec
mov
pusha
cltd
out
fwait
cmp
xorb
outsb
xor
add
mov
pop
adc
sbb
pop
push
test
pop
mov
icebp
popa
xor
mov
inc
jbe
xlat
shl
or
and
mov
ret
mov
mov
add
fadds
pop
out
xchg
shl
lss
outsb
xchg
dec
cs
inc
aad
jp
lcall
cmp
push
jns
and
ljmp
rolb
sbb
imul
sahf
pop
adc
mov
dec
mull
or
pop
inc
lcall
stc
lea
imul
xchg
jl
cmp
neg
iret
subl
pushf
mov
xchg
mov
mov
les
sti
mov
pop
sub
pusha
pop
mov
xacquire
roll
fdiv
and
pushf
jb
out
ds
sbb
cmp
cmc
dec
fcom
pop
cltd
and
mov
cmpsl
dec
dec
shlb
xor
push
subb
or
fcompl
push
dec
aas
pcmpgtb
cltd
cltd
idivb
pop
inc
cs
push
mov
sbb
shll
jns
jne
xchg
jle
iret
mov
pop
hlt
pop
testl
xchg
ss
testb
dec
push
push
imul
xchg
cmp
lock
mov
push
add
in
jb
movsb
sbb
and
mov
lret
or
push
shl
xchg
mov
jb
pop
or
pop
mov
jbe
hlt
push
add
cmp
filds
es
and
jbe
dec
lahf
sub
pop
dec
arpl
pop
incl
mov
dec
sbb
stc
xchg
jnp
mov
xor
xchg
xchg
movsb
cmpl
dec
std
cmp
mov
push
pop
pop
sub
xchg
pop
mov
xor
leave
xchg
cmp
ds
xchg
xor
adc
or
mov
lret
pop
int3
mov
bound
sbb
and
or
xor
test
into
dec
mov
mov
leave
push
test
add
jge
rorb
sti
js
leave
les
insl
sub
cmc
inc
push
or
xchg
adc
repz
scas
jp
cltd
out
lahf
dec
pushf
add
aaa
jmp
in
jmp
test
xchg
inc
pop
jb
adc
pusha
push
jp
pop
loop
mov
xchg
push
xchg
in
mov
sub
cld
lds
ret
mov
xchg
daa
pop
notb
sbb
xchg
jo
mov
mov
mov
pop
sub
lcall
movsb
inc
add
movb
mov
je
lea
sbb
push
sbb
and
and
jnp
adc
jne
fsubrs
or
xor
sbb
fistpl
out
ss
or
and
idiv
aaa
add
jle
iret
xor
imul
lcall
mov
cltd
jne
out
shrl
pushf
out
aad
fsub
cwtl
hlt
jns
pop
and
push
pop
jb
dec
or
and
pop
xchg
push
jae
xor
stc
push
or
adc
aas
jae
in
cmpb
clc
pop
cmp
test
mov
movsl
dec
sbb
jo
inc
adc
insb
lret
setl
inc
sbb
cwtl
imul
sub
sbb
pushf
orb
sahf
iret
popf
call
outsl
xchg
sub
cmpsl
adc
xchg
gs
inc
dec
mov
lds
mov
aam
loope
call
mov
pusha
xchg
jbe
push
xor
fcmovbe
mov
and
push
mov
adc
out
add
push
mov
int
aas
push
icebp
rorb
xchg
xchg
sarb
mov
bound
cmp
xchg
jae
xlat
lods
jns
fisubl
mov
stos
pmaxsw
jl
sbb
add
test
pop
scas
ret
mov
test
lock
inc
adc
stos
loopne
dec
fwait
jecxz,pt
loopne
or
fsubl
push
push
sub
rolb
ret
jnp
mov
jbe
pop
sub
mov
or
sbb
push
or
pop
push
xchg
mull
push
arpl
sub
mov
jmp
repnz
movsl
and
xchg
mov
test
add
adc
xor
popa
bound
pusha
sub
or
paddw
xchg
mov
jo
push
mov
test
cmp
push
outsl
mov
lahf
xchg
inc
sub
aad
sbb
movsl
rcr
repz
movsl
ja
lahf
or
mov
loopne
jne
jl
xchg
loopne
mov
lods
mov
aad
mov
sub
movsb
fmul
insb
iret
dec
xchg
gs
xchg
pushf
notl
add
jmp
dec
pusha
inc
arpl
mov
shlb
pop
sbb
call
scas
sbb
lcall
mov
fs
mov
mov
push
adc
lds
mov
sti
dec
sub
cmp
lcall
repz
rorl
insb
pushaw
stc
xchg
test
inc
dec
inc
jae
xorl
push
popa
rolb
stos
mov
out
loope
in
addr16
inc
repz
rcrb
xor
xor
fiadds
adc
imul
mov
pop
ljmp
xor
insb
aam
mov
into
lcall
inc
cmovnp
or
push
bound
cmp
sub
aam
loop
jnp
jp
sbb
je
push
test
ret
sbbb
sahf
mov
jge
cmp
xchg
pop
dec
stc
aaa
and
out
sbb
icebp
scas
clc
sbb
inc
pop
adc
cs
push
mov
jmp
dec
jae
stc
pop
inc
mov
or
xchg
sahf
sti
ljmp
push
push
lea
jmp
xchg
icebp
fs
addr16
sub
xchg
jno
insb
xchg
adc
push
das
sbb
out
mov
add
daa
outsb
jecxz
mov
lcall
shlb
data16
jmp
loopne
or
cmp
testl
int3
sbb
mov
pop
mov
jp
inc
ret
ret
enter
or
and
scas
adc
in
mov
das
clc
cmpsb
cmpl
bound
jg
int
mov
pop
or
push
daa
jp
imul
sbb
inc
add
ror
pop
cmp
lea
in
in
jbe
push
cmp
out
cltd
lcall
addr16
ret
add
mov
dec
push
aaa
shr
pop
pop
iret
pop
or
icebp
shlb
and
jb
aad
pop
sti
xor
es
loopne
xchg
jo
or
in
cmpsb
mov
in
xchg
mov
cld
pop
imul
das
and
adc
in
pop
xchg
jle
sbb
cmp
jne
jecxz
ficompl
dec
fcoms
sub
inc
xchg
jmp
negl
xchg
leave
lahf
lcall
sbb
in
lret
cwtl
stc
cltd
gs
inc
loopne
adc
xlat
addr16
jmp
arpl
clc
mov
add
inc
xor
cmp
and
push
leave
pop
jne
xor
fmul
fcoml
int3
sub
ljmp
dec
ja
adc
sub
cmpsb
ds
jecxz
sub
test
data16
jmp
pop
repz
cltd
jg
bound
icebp
sbb
fsin
or
sbb
jno
test
fistpl
int
dec
inc
jns
or
lock
fmull
daa
pusha
add
xor
mov
push
sub
fstpl
jp
ja
jb
notl
jg
lods
xchg
jmp
call
and
fmul
mov
out
xchg
mov
cmc
dec
jge
adc
aas
jnp
add
push
mov
xlat
lret
sbb
lret
sub
daa
inc
sub
daa
stos
test
pop
sbb
addr16
ret
bound
or
les
xor
call
insl
jb
cmp
mov
pop
jp
dec
xor
sti
fistl
mov
negb
sbb
jmp
mov
xchg
ror
mov
je
leave
sarb
addl
dec
cmp
jae
mov
pop
or
or
inc
xlat
stc
je
mov
in
xchg
pop
push
lret
mov
adc
or
fisttps
jb
fistl
xchg
pop
push
inc
movsl
xor
sti
cmp
shl
into
pop
sbb
xchg
ds
sahf
cmpsb
sbb
jmp
mov
mov
lret
in
arpl
pop
test
test
test
es
ffreep
in
add
jg
inc
shrl
into
mov
fisttps
cmp
push
jae
xchg
inc
je
adc
std
sarb
push
push
lret
xor
mov
dec
ret
es
adc
and
push
movsb
mov
xor
or
or
neg
jo
sbb
lods
pop
call
dec
and
addb
dec
rcl
fadd
call
clc
popf
jecxz
imul
jns
fdivrs
cmp
cltd
mov
lret
out
in
sbb
pop
stos
mov
leave
repnz
fcmovnu
push
jmp
fcmove
xor
adc
mov
sub
fidivrl
dec
cmp
cs
rolb
stos
mov
inc
shr
cld
cmp
push
add
inc
cmp
add
sub
iret
in
or
fldenv
lods
jb
pop
std
mov
pop
jbe
fists
popf
in
cmpsb
insl
cmp
or
and
div
xor
in
popa
out
or
mov
adcb
add
xchg
jg
and
sub
sbb
or
inc
scas
cmpb
aaa
pop
sub
cmp
xchg
jl
sub
stos
mov
jp
sbb
stc
subb
inc
mov
test
cs
sub
mov
leavew
push
add
fisubl
push
insl
adc
mov
out
xchg
push
xchg
push
jae
in
inc
shll
inc
lcall
xchg
xchg
lret
or
imul
mov
jne
sbb
idivb
iret
aam
add
int3
lods
push
jecxz
aaa
shlb
sbb
leave
das
test
sbb
dec
xchg
insl
imul
or
mov
add
insl
mov
repz
out
sbb
outsb
pop
add
cmp
test
jle
movb
push
pushf
shrb
leave
out
mov
in
fdivrs
bound
sti
sbb
cmpsl
or
aaa
jecxz
push
lcall
sti
rolb
ljmp
inc
clc
and
and
adc
sub
jmp
jge
mov
push
xchg
adc
mov
das
aam
inc
imul
movsl
nop
call
lcall
adc
xlat
mov
mov
cli
adc
shr
fsubr
cld
xchg
dec
mov
sti
and
testb
imul
xor
add
jp
cmp
xor
sbb
mov
sahf
sub
aaa
push
adc
xchg
dec
add
out
or
and
movsb
push
shr
ss
es
pop
cmpsl
jecxz
fisttpll
lahf
je
push
call
xchg
mov
jle
enter
stc
push
lret
mov
xlat
and
sbb
mov
cmp
in
and
fcomip
mov
jne
sbb
inc
ffreep
jne
sub
ds
cmp
add
mov
lret
bound
sub
add
adc
aam
dec
in
mov
lea
xchg
pop
js
xor
push
fmul
jmp
jno
scas
mov
inc
pop
xchg
add
push
push
ret
hlt
or
mov
or
leave
cmp
imulb
test
jb
mov
dec
pop
imul
cmp
add
and
sub
xchg
mov
popf
inc
inc
repz
shr
xor
iret
test
das
cmc
lods
cmc
mov
inc
sub
icebp
mov
cmp
sub
pop
lcall
pop
lret
push
ja
lret
sub
and
fdivs
fildl
shll
sbb
popf
xor
xchg
xorl
xor
nop
cmp
pushf
in
xor
imul
jg
leave
lcall
pop
mov
insb
loope
fwait
out
sbb
fisttps
and
fwait
adc
shlb
je
cmp
jge
mov
ja
loopne
aad
enter
sub
aam
insb
push
and
shl
lods
ret
mov
add
sub
pop
aaa
sbb
and
jmp
cmp
sbb
divl
push
movsl
or
pop
mov
cwtl
rdtsc
push
lock
mov
jmp
movsb
adc
mov
xchg
icebp
inc
faddl
mov
in
pop
inc
pop
dec
faddl
hlt
push
imul
adc
inc
cmp
das
rcr
aam
sti
shrl
les
sub
or
mov
sbb
lret
jno
insb
lds
mov
push
xchg
bound
popa
or
adc
andb
sbb
mov
xor
jne
inc
jmp
fwait
jnp
pop
lods
jae
dec
clc
loopne
dec
int3
add
lock
fs
pop
inc
push
xchg
xor
cld
cmp
inc
cmpsl
cmp
dec
inc
jae
dec
add
stc
dec
test
test
popa
xchg
push
ja
clc
or
lods
out
repnz
notb
pop
sub
inc
xlat
mov
cwtl
jb
roll
mov
push
add
xchg
cltd
shlb
mov
arpl
inc
loope
mov
cmp
sbb
cmp
sub
mov
nop
outsl
es
push
movsb
lret
int3
pop
cmp
cmp
insl
lds
lock
stc
lcall
fadd
addr16
bound
jl
test
xor
ja
movsl
cwtl
add
lock
pop
and
sbb
push
call
dec
pop
fildl
dec
sbb
jg
add
dec
mov
scas
cmp
pop
mov
xchg
push
mov
mov
pop
push
aas
adc
sub
scas
push
xchg
popa
add
and
out
xor
out
pop
js
sbb
les
jle
add
loop
cmp
mov
or
jae
mov
adc
or
roll
xor
push
out
icebp
rorl
push
mov
js
cmp
cmp
push
arpl
pop
dec
or
loope
jno
push
xlat
cmpsl
hlt
mov
std
sub
popa
xchg
and
add
cmp
pop
lea
in
nop
iret
stc
or
clc
adc
push
lret
or
sub
and
rcl
loopne
or
xor
insl
stc
cmc
test
es
jecxz
fs
lods
or
test
icebp
jmp
imul
ljmp
lea
test
mov
aas
xor
lret
aam
lods
shlb
cmpl
lret
cmpsb
xchg
mov
jne
jle
out
and
cmp
mov
cli
sub
xor
xor
shl
inc
xor
mov
iret
insb
mov
mov
stc
pop
notl
loope
add
mov
popf
cwtl
ljmp
into
jl
and
add
into
sub
in
push
icebp
sub
jbe
adc
pop
clc
sub
insl
pop
add
in
fcompl
loopne
pop
sub
mov
out
xchg
push
arpl
jmp
xchg
mov
inc
xor
loop
lods
sbb
flds
int
call
scas
mov
popa
lods
jb
popa
dec
pop
repnz
sub
shl
es
daa
jbe
std
cs
pushf
aas
or
jns
mov
orb
mov
push
leave
mov
push
dec
adc
pushf
ret
das
loop
cltd
pop
cld
mov
cmpsb
adc
dec
nopl
les
iret
xchg
fsubp
sub
cmpl
mov
xchg
mov
mov
lods
adc
push
pop
xor
fs
jbe
pop
in
bnd
push
fdivs
xlat
icebp
and
sarl
inc
shll
je
sbb
mov
mov
cmp
aas
icebp
push
jge
inc
push
lds
imul
iret
fisubrl
loope
inc
push
pop
push
mov
imul
dec
jb
jne
push
pop
lds
scas
mov
xor
lds
jne
arpl
aam
or
mov
aas
out
fwait
jecxz
pop
cmp
out
lods
cltd
pop
sbb
lods
loopne
adc
stos
aad
inc
adc
add
int3
jno
cmp
adc
push
lods
fsts
xor
push
xchg
sar
mov
xchg
int
sbb
test
push
stos
bound
imul
push
mov
xor
jne
aas
aas
pop
inc
mov
mov
mov
cmp
leave
scas
imulb
das
cli
jmp
jge
ja
xor
mov
hlt
stc
testl
mov
pop
lret
arpl
mov
aam
push
mov
popw
xchg
adc
push
cltd
pop
shr
dec
fdivrs
mov
sbb
in
and
scas
roll
out
in
and
cwtl
imul
lock
add
aad
or
sub
mov
mov
jns
shlb
fs
mov
lahf
repnz
dec
push
aaa
shll
cmp
jo
jne
sbb
imul
xor
cs
dec
xchg
cmpsb
fdivr
mov
jbe
inc
cmp
add
fsubl
rep
insb
xlat
mov
mov
cmc
push
pop
adcl
mov
xchg
fdivrs
insl
cs
dec
jp
jo
push
and
in
into
adc
adc
bound
adc
push
insb
inc
or
scas
jg
mov
and
imul
dec
jg
outsl
js
adc
mov
aaa
in
dec
movsb
dec
xlat
cmpsl
or
pop
mov
aaa
cli
xchg
jae
ret
mov
adc
roll
pop
jno
pop
sbb
movsb
cli
mov
mov
roll
mov
xchg
push
jns
inc
add
xchg
add
ror
add
mov
sbb
and
mov
subb
dec
jp
data16
fdivrl
cmp
not
daa
out
stc
flds
mov
mov
jo
jecxz
mov
pop
push
outsb
sti
fmuls
mov
loop
std
neg
lret
in
mov
pop
leave
leave
imul
pop
loopne
cli
repz
sub
mov
add
lahf
outsl
adc
sub
nop
xor
fstl
dec
cli
hlt
ss
lcall
xchg
lret
pop
sub
out
inc
mov
add
cmp
scas
int
lods
es
fdivrs
sahf
mov
enter
add
adc
lods
into
sub
xchg
cmpsb
lods
cmpb
fdivl
jno
into
scas
xlat
cmpsb
es
xlat
inc
fnsave
leave
outsb
aam
jg
mull
mov
orl
rorb
dec
mov
push
sbb
push
and
cs
jno
mov
cwtl
dec
jno
xchg
mov
cmp
inc
sub
pop
jl
sbb
pop
call
sub
clc
sbb
popf
lret
faddl
cmp
lahf
pop
fs
loopne
or
xchg
jge
xchg
add
clc
push
aas
jo
push
push
and
imul
push
nop
jp
xor
jnp
aam
mov
test
pop
and
push
jo
xor
fdivl
inc
pop
dec
lock
in
xor
jns
sub
mov
stc
sbb
push
jmp
loope
add
xor
mov
lret
addb
push
inc
mov
scas
xchg
push
mov
push
sbb
cmc
xor
cmpsb
add
test
les
inc
xchg
nop
out
jg
adc
jge
mov
ret
and
sub
adc
pop
xchg
xor
cmp
stc
call
sbb
pop
loope
aam
cmpsb
incl
adc
imul
xor
movsl
pop
pusha
push
or
fwait
pop
addr16
hlt
cmp
mov
daa
lcall
jecxz
cmpsb
leave
test
std
push
loop
mov
lea
jne
add
push
fimull
jp
cmp
mov
fwait
mov
shrl
lret
mov
sarb
aas
arpl
inc
inc
imulb
stc
push
fildl
sub
cs
jno
dec
subb
add
mov
mov
push
xchg
xchg
ja
mov
cmp
mov
ret
outsb
out
pop
ljmp
cld
mov
fs
cwtl
inc
fwait
push
rorl
loopne
std
and
fisubrl
insl
sbb
xor
int3
sub
pushw
int
mov
mov
in
ds
movsl
dec
cli
adc
in
jne
push
jle
daa
pop
rcrl
lret
jge
dec
les
lea
and
push
hlt
out
add
push
int3
bound
popf
scas
hlt
ret
push
lahf
bound
and
or
push
out
out
sahf
lods
jle
fidivrl
sar
adc
aaa
arpl
fisubrl
inc
stc
sbb
movsl
out
out
leave
fcompl
jo
inc
cwtl
je
inc
xor
dec
dec
adc
xchg
loopne
or
mov
shl
sbb
fcompl
in
push
shrb
lods
pop
incl
or
pop
int
dec
cmc
mov
add
add
inc
sti
clc
jge
aaa
or
js
cwtl
mov
cmp
lods
mov
push
movsl
push
mov
popf
cld
jmp
pop
sbb
fs
mov
mov
mov
mov
jle
inc
pop
add
mov
xchg
ljmp
or
mov
pop
inc
sbb
icebp
mov
test
cli
movsl
add
out
and
fs
mov
fs
mov
push
movsl
cmpsb
rclb
adc
ret
xor
test
pop
xchg
jg
cs
mov
add
or
adc
sbb
enter
enter
mov
rorb
hlt
pop
jle
pop
ljmp
xor
jmp
pop
enter
jo
test
in
dec
jle
pop
cli
inc
ja
cmpsb
into
das
pop
or
test
sahf
mov
xor
mov
scas
aas
idiv
cmp
into
incl
sbb
push
call
in
orb
xchg
mov
push
scas
rcll
adc
test
icebp
lock
hlt
dec
nop
scas
add
cli
lahf
mov
bound
xor
and
cmpsl
sbb
pop
mov
xor
cmp
lock
pop
gs
movsb
and
ret
dec
inc
and
cmp
cmpsl
aad
pop
mov
mov
outsl
setb
pop
out
ljmp
lock
xchg
mov
lea
sub
pushf
lret
gs
pusha
and
loop
mov
push
sbb
test
xchg
in
or
sub
je
fnstcw
jmp
iret
cwtl
es
js
mov
add
aam
mov
das
imul
and
add
rcrl
mov
push
es
mov
gs
mov
jmp
popf
sub
pop
out
arpl
cmp
aam
icebp
sar
dec
nop
ffreep
sub
cltd
mov
fadds
and
sub
inc
or
sahf
cmp
dec
jbe
mov
jb
stos
or
xchg
mov
les
xor
pushf
adc
or
mov
call
hlt
xchg
movsb
test
dec
lcall
xor
ljmp
es
nop
adc
cmpsl
into
and
or
outsl
das
adc
dec
movsb
xchg
inc
xchg
clc
scas
out
xorps
xchg
pop
cmp
and
push
inc
cltd
aas
ds
aaa
pop
imul
imul
lock
fisubs
lock
push
jns
push
inc
pop
xchg
stc
xor
outsb
call
gs
lods
into
test
div
mov
sbb
mov
inc
popf
push
jge,pn
jne
cmp
mov
mov
mov
aaa
into
xchg
jbe
and
leave
loope
jle,pn
or
inc
out
scas
pop
jp
sbb
imul
and
cmp
sub
cltd
popf
insl
cs
lahf
push
stos
cmp
lret
andb
data16
pop
pop
inc
sbb
add
jno
int3
jg
mov
or
and
mov
jb
push
shr
inc
fldl
sti
sub
sbb
add
leave
add
imul
in
xlat
es
ret
jl
mov
mov
add
out
mov
fisubl
js
ljmp
mov
hlt
jnp
xchg
and
xchg
pop
or
pop
xchg
std
cs
hlt
test
or
xchg
cmp
mov
sbb
stc
xchg
pop
and
jnp
movsb
movsb
or
out
loope
xchg
in
sub
in
int3
pop
imul
mov
mov
mov
xor
or
aad
xchg
jge
adc
lea
aam
pop
xor
fdivp
rcrl
test
cltd
aad
out
dec
jno
sub
popf
repz
out
jmp
push
imul
sarl
out
sbb
jl
pop
into
push
or
adc
sbbl
decl
pop
xchg
out
jecxz
dec
xchg
pusha
lods
iret
ficomps
add
push
sub
push
ja
xor
xchg
jp
or
fwait
out
jns
or
push
pusha
jae
lahf
cmc
scas
sub
or
les
leave
adc
cmpsb
js
mov
or
push
push
lahf
mov
insb
cs
pop
sub
shlb
js
cmc
cmp
cmc
or
int
xchg
data16
movsl
pop
sbb
jno
scas
mov
inc
push
mov
lcall
cmpsb
aaa
lods
repnz
push
adc
mov
cld
mov
mov
aad
mov
aaa
lds
int
sub
xchg
inc
push
add
aas
lock
jmp
loopne
push
push
jg
scas
mov
push
push
adc
xchg
in
cmp
ret
loopne
sub
xchg
repz
js
add
cmp
cmpl
lods
call
inc
inc
scas
xor
dec
push
push
xchg
push
popl
dec
sbb
dec
mov
add
inc
dec
popf
or
or
aaa
mov
outsl
rorb
cmpb
loopne
test
push
scas
aaa
sbb
clc
fsts
enter
pop
jl
inc
cmpsl
adc
jmp
pop
jp
aas
arpl
jbe
jne
mov
hlt
dec
test
das
add
inc
fcmovne
push
call
sub
adc
pop
fidivrl
sbb
cmpb
gs
imul
or
das
sub
aas
sub
jle
pusha
xor
cmc
loope
mov
daa
xor
xchg
aaa
and
dec
mov
add
and
mov
bound
adc
cltd
fs
leave
sub
test
imul
mov
in
int3
cmpsl
call
fsubrl
mov
pop
in
popa
cld
in
subb
xor
cmpsb
jp
daa
add
push
in
pop
ja
push
push
test
cltd
xchg
mov
adc
shl
fs
push
imul
scas
out
iret
sub
leave
xorl
fldenv
mov
aam
mov
das
xor
movsl
stos
mov
pop
or
sub
xchg
repnz
xor
mov
orl
sub
xor
iret
repnz
shrb
ds
pusha
pop
mov
cmpsb
push
xchg
adc
dec
lcall
pop
dec
andl
loop
push
cwtl
mov
jo
int
push
xor
daa
pushf
stc
mov
add
sbb
int
or
fnstenv
xchg
repz
push
lret
cwtl
sbb
hlt
pop
out
mov
or
jb
fnsave
imul
ja
cs
sbb
jge
pop
push
adc
mov
inc
shrl
mov
lods
stos
loop
mov
insl
mov
int3
xor
popa
jo
jno
xchg
sbb
xorb
sub
out
rol
std
shll
push
leave
pop
push
dec
jnp
sub
lock
ret
out
and
icebp
ret
cmp
mov
inc
sahf
mov
mov
ss
scas
add
and
add
lcall
jle
fldcw
add
inc
mov
add
mov
out
pusha
mov
aad
call
in
cmp
call
filds
subl
mov
push
int
lock
dec
iret
pop
mov
pop
out
dec
rclb
sub
sbb
mov
leave
iret
fs
pop
push
movsb
dec
cmp
stc
scas
mov
test
fs
mov
jno
fisttpll
aad
movsb
movsb
jmp
inc
lcall
lret
mulb
imul
xlat
xchg
inc
das
xchg
or
jge
mov
cmpsl
add
jmp
fisubl
dec
mov
push
fsubs
mov
mov
jp
push
xchg
mov
cli
mov
xchg
and
ret
add
inc
stos
add
shlb
adc
sti
inc
inc
sub
sub
sbb
insb
data16
daa
popf
popa
sarb
jmp
and
mov
jecxz
cmp
frstor
push
adc
dec
dec
xor
icebp
inc
into
out
lahf
jge
dec
dec
or
stos
bound
sbb
pop
and
ljmp
xlat
aad
xor
inc
out
xlat
daa
push
scas
std
aad
pop
jp
cmp
adcl
pop
sub
xor
mov
xchg
add
lret
bound
nop
inc
push
into
xchg
xor
jp
lret
xchg
ret
movsl
jle
mov
in
addr16
mov
lods
pusha
xor
frstor
add
das
and
in
std
pop
jo
cvttps2pi
inc
aad
sbb
or
out
mov
test
dec
insl
jbe
and
out
adc
adc
stc
push
lods
xor
stos
pop
clc
and
into
push
push
add
sub
sti
xchg
pop
xor
sub
cmp
pop
add
iret
mov
jge
fistpll
or
dec
cmpsl
or
pushf
and
mov
xchg
xchg
into
sub
mov
test
cmpsl
xor
sti
int3
mov
loopne
std
daa
shlb
lds
fwait
xchg
mov
inc
mov
mov
jae
cld
in
mov
cmpsl
seta
js
xchg
lods
jno
jg
and
mov
or
pop
jl
daa
jecxz
arpl
adc
and
jnp
pop
test
insb
int
mul
xchg
orb
push
in
jg
cmp
push
shr
cmp
sbb
inc
icebp
cli
leave
out
clc
inc
test
jae
jp
outsb
xor
mov
cli
loope
das
shlb
enter
push
dec
sub
shlb
add
stc
popa
dec
in
mov
in
mov
mov
mov
add
push
shlb
imul
mov
imul
inc
fs
xchg
xor
mov
fistl
lret
mov
pushf
jmp
mov
xchg
inc
test
inc
jae
imul
outsl
aaa
fdivs
sarb
push
adc
xor
dec
xor
aaa
clc
sub
mov
pop
jb
cmp
push
imul
fbld
jns
mov
xchg
lret
push
lods
mov
cmc
mov
repnz
inc
cmp
lcall
outsb
lods
daa
les
rol
scas
fcmovu
sbb
xor
test
imul
mov
nop
imul
cli
bound
sub
push
lods
iret
add
in
dec
in
aam
jne
xchg
mov
inc
or
movsb
jb
das
sub
dec
out
loope
int
rclb
subb
mov
iret
sahf
pop
mov
ss
xchg
mov
rcrl
jmp
lahf
fsubs
xor
arpl
inc
cwtl
movsb
arpl
push
mov
stc
ret
nop
sub
shl
mov
movsb
and
mov
xor
lds
jmp
sbb
cmp
jbe
dec
pop
pop
push
xchg
or
fwait
or
out
shr
adc
gs
pop
or
movsb
sahf
and
mov
sahf
daa
sub
ss
aas
xlat
push
ss
sbb
repnz
ffreep
pop
mov
inc
sbb
jns
retw
jl
das
xor
sbb
ljmp
and
or
sahf
cwtl
pop
insl
shlb
mov
scas
pop
cmpsb
insl
xor
xchg
xchg
mov
jo
testb
adc
icebp
add
jecxz
xor
out
xabort
mov
sbb
int
or
cmpsb
idivl
push
pop
dec
imulb
sub
push
xchg
or
fisubrs
pop
push
adc
cs
mov
filds
or
add
xor
es
pop
addr16
out
popa
pusha
or
shl
hlt
into
xorb
xchg
mov
mov
add
sbb
loopne
mov
mov
xchg
in
cmpb
mov
sarb
pop
iret
cltd
daa
xrelease
add
adc
push
mov
les
and
not
dec
jo
pop
sub
cltd
idivb
scas
sti
push
stos
add
mov
add
mov
mov
std
push
popa
and
ja
add
dec
aad
fs
cmovl
cwtl
xchg
outsl
ror
std
sbb
out
xchg
cld
push
out
cld
lret
ja
lret
pop
jle
xor
cmp
mov
and
fistpll
fistpl
rcrl
leave
mov
mov
push
lock
push
arpl
inc
pxor
or
sbb
es
cwtl
push
xchg
cmc
int
sbb
mulb
jns
mov
pop
xchg
inc
jg
jae
dec
or
aad
xchg
xchg
xor
shrl
mov
sub
dec
sbb
or
dec
add
loopne
repz
xchg
les
imul
lea
out
add
sar
xchg
ret
es
pop
add
lcall
mov
push
jp
jae
rcrl
mov
gs
sub
pop
in
pop
mov
neg
cli
jns
jmp
lods
leave
mov
aad
lods
adc
iret
adc
dec
pop
mov
xchg
arpl
icebp
scas
dec
push
mov
mov
fldl
into
fabs
push
unpckhps
xchg
mov
out
dec
aas
loope
xchg
pop
imul
pop
or
cs
das
mov
int
inc
loope
inc
das
mov
xchg
dec
arpl
js
xor
mov
ss
imul
xchg
xor
cmp
sub
sti
or
jg
push
out
data16
add
push
jp
push
push
push
pop
push
bound
into
mov
push
mov
out
in
pop
adc
aam
and
inc
ljmp
repnz
mov
add
adc
insl
cmp
mov
push
lods
adc
mov
add
movsl
mov
cmpsb
xchg
lahf
jnp
test
xor
mov
mov
push
mov
pop
jnp
and
rclb
sti
cli
aad
cmp
cmovp
iret
mov
popa
insb
xchg
repnz
xchg
inc
jnp
dec
jb
sub
pop
iret
lret
adc
xlat
lret
mov
nop
push
dec
lods
xchg
dec
lret
sub
ret
xchg
mov
xchg
adc
gs
push
enter
insb
ss
jae
jnp
hlt
jnp
ds
xor
fnstsw
and
dec
test
and
pop
fcmovnbe
xor
and
das
jg
sub
subl
mov
or
mov
mov
call
fisttpl
jns
and
rcrl
inc
fstps
jp
jns
mov
cs
inc
inc
je
xor
inc
adc
pop
mov
adc
push
xor
mov
mov
fsubrs
push
lods
int
movsl
jbe
loope
addr16
ret
add
and
lcall
jle
jg
push
cmp
jo
mov
pusha
imulb
cmpsb
cld
push
add
dec
adc
popa
add
jl
push
iret
cmp
into
mov
add
xor
xor
imulb
dec
cs
mov
clc
sti
mov
pop
mov
in
xor
icebp
repnz
push
dec
and
fsubs
jbe
aam
les
xchg
and
pop
inc
adc
andnps
mov
pop
push
test
pop
mov
out
fs
lahf
lcall
push
insl
sbb
fwait
jno
or
push
shrb
stos
mov
jno
xchg
sub
mov
sub
mov
clc
mov
jo
add
movsl
sahf
dec
mov
jb
pusha
loopne
and
push
and
enter
js
enter
push
fldl2t
stos
js
pop
inc
popf
push
cmp
cmp
mov
xor
push
jg
mov
jno
dec
inc
mov
push
sbb
addr16
shll
push
out
ret
and
inc
cmp
jp
test
or
adc
xchg
loop
imul
jecxz
in
cmpsl
mov
cmp
insl
and
and
movsl
xlat
and
xchg
cmp
xor
gs
fistpll
xor
mov
push
lret
stos
xchg
jae
pop
xor
int3
fnstenv
mov
dec
sub
sbb
inc
mov
repnz
pop
mov
dec
ret
cltd
jb
inc
sahf
push
scas
and
jnp
lahf
jl
call
xor
insl
int3
jecxz
cld
dec
loop
fdivrs
in
les
jle
mov
inc
push
xor
sbb
mov
or
pop
shl
xrelease
test
movsb
inc
les
or
push
int
lcall
mov
pop
mov
imul
out
aaa
pop
jbe
and
dec
inc
test
mov
data16
insb
repnz
jbe
inc
adc
neg
xchg
sub
cmc
pop
adc
inc
inc
dec
push
mov
cmp
ret
arpl
dec
adc
repz
xchg
inc
xchg
push
mov
adc
pmullw
movsl
and
aaa
jge
xor
cmp
mov
sub
into
jmp
rcl
inc
jp
inc
cmp
sahf
sub
xor
movsl
dec
ret
mov
mov
je
sub
cld
or
loop
icebp
shrb
sub
mov
aam
movsl
addr16
mov
jle
pop
fmull
dec
test
mov
cmpsb
jmp
cltd
scas
arpl
nop
clc
or
lret
leave
xchg
out
push
stos
je
push
in
mov
cwtl
adc
insl
iret
lds
xchg
xchg
movsl
mov
loop
clc
cmp
ret
mov
ss
xchg
mov
scas
int
mov
push
rcrl
cmp
mov
xchg
sub
xor
test
pushf
cltd
sub
cld
xchg
xchg
ljmp
popa
fninit
je
fidivrl
sbb
rorl
add
and
test
pop
add
fiadds
pop
push
ja
aas
cltd
add
popa
jne
jmp
mov
jne
dec
lret
inc
cmp
fdiv
pop
cli
mov
hlt
mov
mov
mov
or
and
xlat
test
add
lods
xor
mov
xlat
add
shrl
test
fbstp
insb
mov
push
pop
mov
shll
std
jnp
pop
addr16
adc
cmpsb
pop
mov
push
insl
leave
daa
dec
xchg
jne
sbb
imulb
lock
jge
pop
push
xchg
sti
sub
aam
out
les
xchg
pop
pop
mov
sbb
add
mov
adcl
push
movsb
enter
mov
mov
jge
and
cmpsl
outsl
sbb
sub
test
cmc
push
sbb
imul
adc
ret
adc
sbb
in
xor
adc
int3
dec
lods
fsubs
cmp
daa
jge
inc
movsb
push
int3
mov
jnp
out
inc
sahf
mov
mov
inc
negb
scas
scas
dec
jb
push
test
sbb
mov
or
and
gs
pop
pusha
outsb
aad
adc
iret
cmp
iret
sub
sub
sub
mov
mov
data16
fadds
lcall
sbb
and
sub
push
lahf
add
mov
mov
lahf
add
xor
xlat
js
je
xchg
orl
or
jae
ret
cmp
mov
mov
stc
loop
icebp
sbb
mov
mov
mov
mov
ret
inc
fistpll
imul
cmp
mov
fwait
mov
in
cwtl
or
mov
cmp
cli
or
sbb
imul
or
xchg
fnsave
add
out
jmp
pop
das
and
jne
cwtl
pop
lret
sub
add
and
pop
dec
nop
mov
outsl
xor
and
sub
push
fdivs
or
mov
cli
dec
out
movsl
pushf
rorl
dec
and
data16
fisubl
in
sbb
mov
sub
pop
mov
out
enter
fidivl
addr16
cmp
decl
dec
sub
mov
fwait
cmp
inc
into
aad
jns
pop
lahf
xchg
inc
inc
jp
dec
add
xor
fisubl
mov
dec
out
xchg
xorl
ud1
imul
lret
push
or
inc
addl
inc
jns
popa
xchg
stos
and
fisubrl
add
out
pushf
cmc
lcall
int3
and
pop
and
jp
nop
adc
pusha
repnz
fbstp
mov
dec
nop
fcomps
cmpsl
in
aas
sub
or
mov
dec
jne
in
inc
mov
std
inc
lods
or
or
sarl
and
int3
ret
pushf
adc
dec
test
pop
sbbb
inc
lds
insl
cltd
cmp
jo
pop
lcall
call
setge
iret
in
sub
fwait
mov
jnp
mov
adc
aad
push
fidivrs
dec
sbb
lret
imul
fstp
push
cli
idivl
push
mov
mov
aad
sbb
xor
sub
dec
es
test
fistl
or
mov
in
cwtl
inc
sbbl
mov
enter
jnp
and
push
adc
mov
mov
scas
clc
mov
add
fs
arpl
pop
pop
mov
enter
push
imul
xchg
fistpl
outsb
lret
push
pop
cltd
jo
dec
xlat
push
loop
adc
ja
mov
cli
fsts
push
cmpb
aas
pop
das
or
inc
mov
sub
in
cli
pop
lods
xor
sub
pop
and
jo
rcrb
lds
mov
clc
push
ljmp
stos
pop
and
ds
xchg
jmp
pop
in
shll
jl
push
dec
add
rcr
mov
or
cltd
daa
mov
mov
jp
in
mov
aaa
mov
nop
add
jne
ret
push
xchg
test
mov
aaa
pop
and
repz
aad
movsb
mov
jne
pop
ja
inc
lret
pop
dec
ret
mov
mov
iret
sbb
leave
fsubrl
std
mov
je
xchg
out
mov
jae
outsb
mov
out
aam
ljmp
xchg
mov
pop
jl
out
jns,pn
or
sbb
iret
jg
lcall
test
iret
lods
push
cmp
jge
cltd
popa
enter
imul
jns
sbb
pop
popa
mov
adc
orb
and
test
ret
mov
mov
jae
rcll
bound
js
inc
test
sbbl
repnz
sbb
pop
mov
pop
adc
pop
test
and
ds
push
push
pop
ljmp
push
xchg
push
jmp
iret
jecxz
or
imul
adc
jl
mov
icebp
daa
or
test
and
cmp
dec
push
sahf
jo
xchg
stc
rcrl
imul
jns
std
sub
repz
movsb
mov
cltd
add
mov
dec
fistps
hlt
push
lods
jp
xchg
sbb
mov
and
jo
cmp
push
mov
xor
adc
daa
mov
xchg
inc
movsl
scas
pop
sbb
arpl
xchg
inc
cmc
fiadds
jb
inc
pop
aam
leave
xchg
pop
inc
bound
fucom
arpl
in
movsl
test
push
out
mov
lea
mov
push
cmpl
xchg
pop
stos
xchg
and
xchg
psubq
decb
iret
jge
ret
fcmovbe
push
int3
in
and
jb
andl
dec
sbb
outsl
into
arpl
mov
mov
lcall
int
xorl
adc
push
cmp
shrl
push
sarl
lods
xchg
dec
icebp
mov
lods
mov
pop
or
jae
loopne
daa
mov
aad
aad
xchg
inc
push
scas
stos
je
pushf
pop
mov
popf
cltd
dec
outsl
or
xchg
rcrb
out
insl
dec
jno
insl
int3
call
push
xchg
mov
mov
jge
out
pop
and
sbb
repz
lahf
mov
out
pop
out
out
test
shlb
mov
ljmp
inc
adc
insb
cmp
scas
sbb
and
adc
jg
add
mov
push
mov
mov
jnp
cmp
mov
adc
cmpsl
xchg
inc
or
pop
lcall
add
cmp
data16
mov
push
adc
lods
jb
mov
or
adc
rorl
lods
xchg
jne
cs
out
mov
into
shl
sbb
dec
sti
js
adc
mov
pop
sbb
stos
loop
bound
ret
mov
je
lock
mov
xchg
dec
aaa
in
fbld
adc
add
fwait
pmuludq
pop
sub
mov
inc
bswap
mov
xchg
add
cmpsb
repz
imul
movhps
pop
rcrl
loop
xabort
pop
jecxz
jge
jnp
mov
jg
push
nop
xchg
dec
and
stos
or
ljmp
pop
xorl
cld
in
hlt
dec
cmp
adcl
adc
xor
frstor
bound
stos
clc
cmp
bound
mov
push
arpl
cmpsl
mov
lea
daa
in
push
mov
popf
enter
dec
inc
jmp
sub
xor
add
imul
xlat
ds
dec
jp
cmp
xorb
dec
ret
gs
icebp
cli
add
popa
cs
aad
loopne
adc
push
adc
dec
pop
push
push
loope
mov
dec
adc
dec
xchg
out
rcrb
mov
jbe
jecxz
push
test
xchg
pop
adc
push
hlt
movsb
dec
call
outsb
cwtl
pushf
ss
lods
push
pusha
insb
sti
inc
iret
jecxz
sbb
in
int3
mov
std
movsb
iret
jbe
das
cmp
inc
sti
cwtl
mov
mov
das
subb
adc
add
cld
jle
sbb
push
stos
sub
and
ss
not
mov
aas
stos
cld
dec
movsb
add
mov
arpl
data16
cmp
cmc
scas
adc
sbb
inc
mov
mov
lods
scas
pop
filds
and
jmp
out
dec
mov
inc
in
andl
jecxz
dec
gs
out
iret
fs
xchg
push
andl
fsubrl
cmp
mov
mov
addr16
mov
sbb
jne
leave
mov
lret
nop
and
mov
pushf
hlt
subl
jmp
outsb
pop
inc
and
mov
mov
ret
shrb
inc
and
pop
int
mov
rcrb
xlat
mov
push
repnz
xor
lcall
cmp
jbe
adc
cmp
roll
mov
pushf
push
call
in
pushl
rorb
mov
addr16
push
adc
xor
add
xchg
test
icebp
fmuls
mul
push
test
ja
addr16
xlat
lret
mov
ja
jle
adc
stc
sub
jecxz
call
push
mov
lock
lea
mov
jge
mov
lea
or
mov
pusha
pop
xor
les
pop
mov
insb
hlt
lods
pop
or
mov
pop
pop
adc
xor
jge
sub
pop
sub
cli
js
cs
rcl
mov
mov
jo
movsl
push
mov
test
sbb
cmpsl
fxch
popa
call
mov
adc
scas
insl
popa
pop
dec
call
or
jbe
mov
rolb
and
shrb
leave
sarb
mov
stos
std
std
cmp
and
and
in
idivb
js
data16
add
test
cmp
pop
stos
addb
clc
or
push
int3
test
pop
in
dec
divb
add
mov
ffreep
adc
jp
xchg
push
ret
int3
or
add
cltd
or
mov
into
lahf
adc
mov
std
inc
cld
push
or
inc
notl
ljmp
pop
mov
jae
ds
xchg
stos
outsl
cmp
mov
ret
cmp
pop
pop
mov
xchg
xchg
rolb
ud0
cmpsb
cmp
popf
arpl
lret
jle
shlb
xor
sbb
xchg
enter
or
aad
cmp
imul
sub
jb
movl
into
xor
mov
xchg
jnp
add
xor
lcall
fimull
adc
add
dec
add
jle
cli
push
jmp
jle
sbb
call
out
adc
mov
xchg
dec
inc
jp
xchg
divl
mov
cmc
in
nop
sbb
sbb
xchg
popf
cmpl
cmc
shlb
stos
lret
call
mov
ja
ffreep
push
scas
aaa
pmuludq
xor
or
fcom
ja
xor
sub
xchg
data16
js
inc
or
movsb
gs
test
mov
pop
incb
nop
push
fwait
andl
fmull
pop
jbe
mov
mov
jmp
sahf
mov
icebp
mov
mov
jle
xor
ret
sub
and
shl
repz
ss
mov
mov
fcompl
mov
stos
bound
sub
repz
and
jle
xchg
jge
adc
or
dec
mov
mov
insb
dec
lods
in
loopne
push
mov
xlat
dec
aas
and
xlat
add
fstpl
add
mov
push
js
pop
and
cmp
mov
jnp
sub
sarl
cmc
mov
lods
lods
int3
lcall
xor
pusha
and
test
iret
or
int3
jmp
mov
aas
out
xor
fnsave
insb
mov
cmpl
jb,pt
clc
ficomps
dec
adc
xor
pop
daa
out
mov
in
dec
js
pop
mov
xchg
fstps
out
aad
xchg
pop
sub
xor
adc
ja
push
cmc
shlb
out
inc
mov
mov
add
nop
and
and
sub
mov
sbb
lea
sti
std
cmp
subb
and
dec
movsb
lods
cmpsl
movsb
and
jns
gs
xchg
push
sti
rol
js
lock
mov
jns
xor
call
sub
fwait
xchg
xor
add
jp
xchg
jge
ja
mov
imul
pop
insb
jg
push
adc
lret
xorl
cmpb
jle
dec
test
pop
sti
lahf
js
in
mov
int
push
lret
add
adc
dec
xchg
outsb
enter
and
out
std
jno
cmpsl
mov
jl
mov
out
or
inc
xchg
stc
add
scas
int
arpl
mov
mov
jecxz
roll
xchg
add
xchg
cmp
cli
or
push
jge
addb
cmp
mov
adc
lcall
push
stc
adc
lcall
daa
push
sub
sub
dec
fs
mov
inc
mov
xor
outsb
pop
data16
jae
add
hlt
sub
adc
mov
aaa
lcall
fcmovu
int3
sbb
test
mov
and
mov
and
fisttps
out
inc
pop
sub
jl
inc
mov
outsl
pop
stos
out
or
fldcw
sbb
lret
cli
jge
cmp
out
dec
rolb
dec
lret
shll
sub
cmp
mov
insb
cwtl
call
dec
adc
loop
push
pop
cli
outsb
js
xor
faddl
stos
jge
cwtl
fmull
into
jbe
cs
cmp
xchg
test
push
and
xchg
je
xchg
and
adc
hlt
mov
aas
cmp
add
mov
xchg
cmp
sub
xchg
push
sbb
push
es
xchg
dec
pcmpgtb
stos
push
push
lea
pop
push
cmpsl
cli
jp
stc
fidivrs
add
adc
sub
push
fdivrl
adc
shll
lret
xor
insl
popf
push
xchg
rcll
jg
push
jae
fdiv
pusha
das
lods
aad
sti
jno
sarb
aas
xor
lret
mov
out
insl
scas
mov
mov
test
mov
cwtl
subl
xchg
pop
sbb
inc
imul
xchg
adc
inc
push
pop
fcoml
es
add
mov
sbb
add
sahf
mov
mov
cmp
cld
push
jp
and
lcall
mov
inc
mov
push
in
sbb
call
mov
rolb
xlat
pop
and
jo
insb
xchg
add
ja
xchg
mov
pop
mov
mov
and
push
inc
xchg
mov
adc
js
data16
popf
out
inc
cmp
cld
insb
xchg
inc
icebp
dec
psllq
imul
sub
mov
in
push
out
leave
lcall
and
ds
mov
sub
aas
adc
outsb
mov
pop
pop
loopne
dec
sbb
lret
cmpsl
scas
add
in
mov
cmp
shrl
test
inc
pushf
add
insl
jbe
mov
gs
xor
dec
test
leave
push
imul
aam
and
stos
popa
pop
push
iret
mov
mov
pop
mov
adc
lahf
cmp
je
jae
cs
daa
mov
sbb
repnz
xchg
popa
fdivs
and
faddp
xchg
sub
rolb
sbb
pop
mov
icebp
sub
sbb
fcoml
push
xor
movsl
mov
add
add
mov
cli
jnp
ret
inc
or
mov
sub
sbb
and
fnstsw
push
xchg
pop
rcrl
sbb
in
shlb
cli
sbbb
pushl
mov
jbe
sub
rolb
adc
lahf
mov
or
es
int3
inc
pop
xor
or
jne
outsb
cmp
lahf
cwtl
shll
or
dec
stc
cmp
jmp
in
andl
cmp
loopne
stc
sbbb
xchg
push
pop
push
xchg
addr16
cmpsl
cltd
push
cld
xlat
shl
lea
or
icebp
push
sbb
rolb
rcrl
lock
fwait
mov
sbb
push
push
inc
pop
in
sbbl
scas
out
mov
sub
sub
data16
jmp
push
cmp
fs
fimuls
add
inc
sbb
jmp
les
jg
push
sbb
add
mov
push
push
cwtl
dec
xchg
xor
xor
enter
setg
sbb
test
lcall
xchg
adc
iret
mov
push
jge
imul
mov
into
dec
rcrb
adc
and
lret
std
mov
out
aad
sub
add
ja
mov
std
inc
rol
push
decl
or
cltd
push
xchg
or
jg
dec
outsl
jg
cli
cmp
inc
loope
test
mov
test
inc
insl
push
xchg
rcl
repz
adc
lods
repnz
ss
mov
movb
dec
xchg
mov
fildl
into
rcrb
int
scas
clc
and
xlat
xchg
inc
sbb
and
cmp
das
jp
jb
inc
outsl
adc
xor
adcl
push
int3
and
imul
jle
fwait
adc
test
loop
inc
pop
cld
jl
stos
cs
pop
pop
jb
adc
loop
pop
jbe
inc
push
ljmp
cmc
adc
jecxz
sbb
dec
fmull
dec
mov
and
and
and
imul
add
or
insl
repnz
stos
push
lret
sub
adc
and
sahf
adc
cmp
sub
pop
stos
and
sub
call
add
imul
adc
loop
lods
pop
into
out
call
pop
and
ss
inc
aad
xor
es
mov
sub
jno
pop
jmp
push
scas
xor
xchg
leave
shlb
jne
test
xchg
popf
adc
lods
and
mov
sarb
xchg
call
cld
call
mov
mov
mov
lcall
js
xchg
inc
icebp
insb
xor
jmp
stos
adc
les
into
je
stos
aaa
nop
adc
out
aam
int3
ret
test
jl
lods
sbb
dec
sub
inc
sbb
pop
pusha
mov
jg
jo
idivl
mov
sarl
enter
add
out
outsl
mov
and
inc
mov
adc
repz
outsl
sub
dec
jl
test
pop
sti
aaa
rorl
jne
xor
stc
add
stc
cmp
mov
lock
and
lock
mov
push
sbb
lods
loopne
or
out
aam
cmp
fwait
out
sub
xchg
cmp
loop
cmpsl
and
sub
add
xor
xor
mov
dec
mov
mov
jecxz
mov
mul
cmpl
xchg
pushf
xchg
arpl
repnz
mov
xchg
cmp
mov
in
in
push
out
mov
into
out
out
imul
insb
adc
push
test
test
dec
jmp
xchg
inc
stos
xchg
sarl
pop
ret
mov
or
sbb
int
fistpl
scas
sbb
sub
les
push
imul
sahf
jo
pop
fstpt
sub
lret
sbb
movsl
mov
sub
inc
and
sti
lock
out
out
xor
lods
adc
loop
xor
mov
aas
inc
sbb
cmp
xor
std
clc
and
push
cld
inc
movsl
stos
or
sub
das
aam
bound
jge
fistl
or
or
dec
gs
jge
hlt
xchg
test
mov
pusha
mov
jbe
adc
out
daa
std
or
stc
push
fistpll
es
test
les
fiaddl
mov
sti
leave
rcrl
jg
mov
or
sub
iret
pusha
sub
and
xchg
and
lret
enter
loopne
xchg
fldcw
subl
jnp
daa
andb
pop
ret
add
cmpsb
nop
aad
inc
fwait
loopne
stc
jmp
pop
pop
mov
fldcw
mov
popf
stos
aad
ss
leave
sarl
ds
jp
mov
testb
push
xchg
xchg
scas
cltd
test
insl
js
lods
dec
adc
add
jo
sbb
mov
sbb
adc
ss
jecxz
daa
mov
inc
dec
inc
ss
loope
adc
jb
jno
jne
aad
lds
inc
sub
es
fdivl
xor
fptan
or
xor
in
xor
repz
mov
cmp
push
push
cmc
pop
lahf
ret
fs
sbb
and
jge
cmp
sti
add
rcr
jg
loop
cwtl
pop
jno
pop
fidivs
sbb
nop
xlat
inc
mov
outsl
cli
into
push
push
jae
aaa
lret
mov
push
xor
addr16
push
lds
mov
sub
push
pushf
dec
xorl
test
je
mov
pop
pop
aas
mov
outsl
bound
enter
nop
icebp
inc
pusha
ret
dec
mov
rorl
fs
je
daa
xlat
pop
sbbl
or
or
int
ja
outsl
lods
test
shl
or
rorl
in
add
and
lret
cmp
mov
xchg
xchg
pop
fistl
cmp
jle
adc
js
fisttps
lock
xchg
rclb
push
or
or
cmp
and
lret
dec
dec
inc
shlb
jns
cmp
cmpsb
xchg
call
call
fcoml
cltd
in
loop
xchg
mov
sbb
pop
out
insl
rcll
jae
xor
ja
in
inc
out
jecxz
mov
dec
adc
call
test
mov
and
sub
mov
add
sbb
aam
in
mov
pop
mov
loopne
outsl
gs
push
fs
lahf
movl
orl
and
ret
iret
mov
cltd
xlat
sti
push
pop
divl
or
orb
test
fildll
dec
mov
adcl
repnz
scas
sarb
outsb
jg
gs
mov
mov
faddl
mov
pop
aad
fwait
pop
fcomps
xchg
stc
cwtl
imul
ret
adc
jg
mov
push
adc
int
addl
filds
sbbl
push
xchg
sbb
rclb
lret
outsb
lret
int3
mov
pop
sub
xor
jp
imul
cmp
fs
sub
and
sbb
lock
stos
fadds
scas
inc
leave
xor
inc
rclb
adc
and
mov
push
aas
jne
pop
mov
popa
js
ret
xor
jl
lahf
insb
lahf
push
arpl
scas
dec
stos
scas
js
push
test
arpl
rcr
mov
jno
mov
adc
or
sbb
imul
push
add
xchg
and
push
mov
pushf
cltd
nop
dec
popf
mov
out
test
push
pop
cltd
scas
sbb
mov
stos
ret
jp
mov
push
sbb
dec
add
lret
incb
flds
ja
fsubrs
or
adc
test
popf
push
mov
sub
lret
stc
adc
insl
mov
pop
orl
testl
dec
mov
movsl
inc
insl
fidivl
jns
cmp
bound
jl
daa
out
jo
int
xchg
and
mov
fnstenv
jns
add
push
mov
inc
lock
cmpsb
ret
cmp
je
sbb
es
gs
js
sbb
inc
xchg
mov
push
test
shr
pop
dec
inc
and
in
push
or
inc
cmp
loop
dec
lret
ljmp
icebp
push
shll
add
push
cli
jle
sti
mov
pop
ss
adc
repz
mov
mov
or
inc
aas
cmc
adc
insb
sti
cmpsl
xor
out
xor
lret
aaa
pmaddwd
jl
in
or
frstor
adc
cmp
add
nop
adc
push
out
xchg
mov
scas
or
pushf
ret
aaa
jecxz
push
in
inc
hlt
cs
pop
xchg
in
add
dec
xchg
mov
lods
xchg
add
fsubs
aaa
fs
lahf
xchg
sub
lcall
daa
jno
aad
lods
ja
imul
pop
adc
xor
jmp
jle
push
stos
mov
fistpl
jae
int3
cmp
int3
ljmp
pop
and
inc
outsl
push
mov
add
or
mov
pop
push
dec
dec
mov
push
lds
sub
dec
je
inc
cmp
gs
gs
or
andb
sbb
popa
push
sub
t1mskc
ss
sbb
push
xor
cli
clc
sbb
shl
nop
push
rolb
jmp
dec
and
cmp
mov
aas
cmp
leave
test
imul
sub
mov
sbb
fnstsw
xor
ret
shl
in
sub
mov
xchg
xchg
xchg
cmpsb
push
fbstp
push
add
andb
mov
cmp
js
outsb
pop
jecxz
adc
das
and
rcr
mov
pop
mov
mov
jne
add
xchg
sub
ret
cli
mov
loop
lods
cmp
ljmp
cld
loopne
pop
fiadds
cmp
sbb
lods
mov
fsubl
push
pop
xlat
push
bound
aas
push
push
stos
imul
lds
sbb
cmpsl
sahf
ja
push
pop
cmp
popf
xor
push
jbe
jbe
outsl
int
loopne
es
aad
xchg
das
add
mov
jbe
out
jns
shrl
adc
mov
lock
mov
repz
dec
ja
pop
in
add
adc
fwait
ds
lods
js
xlat
mov
push
gs
shrl
movsb
test
sub
test
in
mov
push
loop
ss
mov
int
cmp
adc
xor
jnp
sub
inc
inc
lcall
adc
hlt
cld
push
push
adc
and
dec
ficompl
mov
or
adc
xor
das
mov
mov
mov
push
lea
add
jmp
stos
inc
sbb
popa
lret
mov
stos
or
outsb
inc
adc
mov
lret
adc
mov
lods
mov
add
dec
iret
jge,pt
stos
lods
out
add
mov
lret
adc
or
scas
test
xor
pop
pop
or
xor
sub
dec
sub
mov
pop
dec
shr
pop
xor
movsb
or
test
cs
push
jp
leave
outsl
scas
fdivr
sti
xchg
cld
adc
shlb
sub
dec
xor
std
les
dec
pop
out
jg
loopne
adc
and
ror
pop
push
sbb
jae
leave
int
fmulp
mov
ret
pop
jmp
mov
aaa
test
repnz
popa
xor
inc
dec
lds
ret
mov
and
in
xlat
add
movsl
in
push
repnz
sub
push
fimuls
loope
addr16
leave
or
loopne
bound
dec
repnz
mov
xchg
and
dec
push
sbb
add
dec
outsl
test
mov
addr16
and
jle
test
imul
pop
icebp
xor
ja
pop
jbe
pop
scas
sbb
mov
loope
sbb
insl
shlb
sbb
pop
out
lock
jnp
hlt
xlat
sbb
lahf
scas
or
sub
outsb
sbb
sbb
pop
std
add
loop
xor
push
aam
xor
pushf
mov
xor
sbb
loop
icebp
aam
cltd
hlt
adc
adc
pop
inc
in
push
mov
mov
push
or
out
pushf
mov
and
out
dec
fwait
clc
xor
dec
inc
std
sbb
pop
gs
xchg
or
jmp
jmp
sub
xchg
orps
test
into
mov
in
xchg
ret
fwait
imul
mov
jmp
or
mov
or
dec
xor
frstor
push
lock
jbe
adc
sub
dec
lock
dec
inc
cli
mov
pop
mov
in
dec
and
mov
in
push
push
jb
jp
fisubrl
lret
jns
add
mov
mov
addr16
test
adc
pop
fidivl
mov
frstor
fwait
and
dec
dec
push
outsl
repz
or
pop
jno
loope
imul
daa
lret
and
mov
fbstp
dec
cmp
mov
fucom
inc
ror
ret
xchg
mov
daa
sub
sti
movsb
das
jae
sbb
loop
mov
lret
jl
cltd
cli
sarb
in
aas
rol
mov
adc
fsub
or
push
clc
xor
sbb
and
push
sti
std
sub
mov
xor
cmp
lcall
and
fidivrs
int3
pop
repz
xor
jmp
inc
mov
inc
add
mov
in
repnz
xlat
lahf
push
push
sbb
aam
loopne
jbe
insb
pop
je
mov
xchg
push
lret
inc
jnp
mov
pop
add
cs
mov
push
inc
adc
and
aam
jae
jns
adc
pop
mov
into
adcb
jno
loopne
loope
mov
ret
sarb
mov
sub
cmp
fwait
cmpsl
dec
sarb
imul
or
popa
adc
rolb
cli
movsl
push
pop
push
inc
movsb
push
mov
lahf
inc
rorl
inc
sub
cmpsl
inc
jp
xchg
in
pop
movsl
out
xor
imul
test
scas
fldenv
lret
ss
sub
push
fsubrs
dec
inc
sahf
ja
pop
dec
scas
loop
bound
xchg
mov
dec
pop
or
mov
cmp
mov
std
test
mov
sub
pop
mov
and
aam
pop
mov
cmp
pop
pop
or
jnp
imulb
nop
pop
mov
jns
hlt
sub
pop
push
scas
shlb
fdivl
mov
mov
das
fstl
jb
mov
outsl
aas
es
popf
adc
push
mov
adc
jno
fadd
sbbl
stos
push
pop
push
ljmp
test
jle
sahf
clc
xchg
aad
xlat
adc
add
rcr
leave
daa
icebp
lock
push
push
push
rcrb
or
mov
mov
insb
mov
lcall
lock
adcb
pusha
ds
xor
adc
lock
jne
movsb
fdivrs
xor
addr16
push
and
ss
fcmovnbe
pop
sub
insb
lahf
test
stc
and
pop
pop
dec
cmp
pushf
cwtl
xor
std
inc
data16
sub
mov
pop
mov
rcrl
repnz
mov
push
movsl
inc
clc
mov
mov
push
cmp
xor
push
out
sar
jo
stos
adc
xor
mov
negb
in
fcomp
inc
lea
mov
pop
roll
loopne
push
ljmp
fstl
add
jnp
pop
fcomps
or
aas
fwait
stc
cwtl
jbe
xlat
inc
gs
push
scas
insb
mov
mov
mov
adc
aas
lock
pop
pop
add
mov
adc
mov
pushf
out
lds
mov
or
stc
pushf
adc
jae
or
jg
cmp
rolb
mov
std
iret
jo
xchg
lret
mov
rorb
movsl
wrmsr
mov
scas
ss
rorl
sbb
mov
shlb
gs
add
sub
fldt
or
scas
push
xchg
sbb
out
ds
and
or
mov
das
sub
pop
cli
inc
or
jnp
sub
cmp
jmp
into
jno
imul
bound
fistpll
insb
and
lea
ret
adc
pushf
mov
mov
sub
int3
bound
xor
xchg
loope
dec
in
mov
stos
lcall
mov
dec
push
pop
sub
sar
adc
lret
dec
iret
dec
and
mov
pop
inc
mov
lods
out
cmpsb
and
adc
fucom
mov
push
lods
pop
pushl
inc
in
xlat
test
hlt
adc
sbb
cmpsb
icebp
inc
out
cmp
dec
je
push
push
stc
or
xor
test
leave
repz
scas
mov
popf
std
pop
pop
cmpl
mov
scas
adc
daa
je
xor
mov
push
xchg
hlt
dec
pop
dec
sbb
cmp
xor
jp
add
into
pop
mov
dec
and
lahf
sub
push
stos
jnp
pop
fcmovnu
and
pop
fisubl
sbb
popf
mov
je
inc
cmp
mov
cmp
lods
outsb
mov
adc
xor
sbb
rolb
sbb
mov
push
pop
loopne
lea
cmp
dec
sbb
add
mov
das
fldt
add
mov
and
aaa
imul
mov
sbb
and
xchg
loop
jle
push
xchg
js
enter
bound
mov
xchg
xor
xor
outsb
lahf
dec
sbb
sbb
mov
inc
push
cmp
stos
xchg
sbb
pop
subb
push
and
out
xchg
or
inc
sti
out
imul
mov
ds
mov
mov
loop
pop
js
jecxz
cmp
test
cmp
cmp
and
cmp
popf
mov
sbb
push
lret
cmp
xor
sti
icebp
movsb
ficoms
lret
dec
pop
andb
rcrb
mov
mov
lds
xlat
cmp
jb
xchg
cmp
dec
pusha
xchg
rcr
inc
adc
int3
cmc
adc
fistps
push
lock
stc
enter
cmp
fisubl
gs
jno
or
sbb
data16
cmp
and
les
mov
std
test
dec
gs
iret
push
sub
je
lahf
es
shrb
sbb
or
cltd
ss
xchg
stc
pop
ret
mov
pop
ret
mov
dec
xlat
test
icebp
mov
xor
int
push
push
fimull
nop
lods
add
xchg
scas
sub
or
jb
push
shlb
aaa
mov
cmpsb
sub
mov
jl
daa
cwtl
dec
sbbl
outsb
dec
nop
jecxz
out
das
pop
pushf
je
shrl
lods
sub
mov
leave
cmp
in
or
jl
in
in
push
mov
add
mov
cwtl
cmp
inc
mov
fldl
mov
ret
es
dec
cmpsl
add
std
insl
dec
jl
or
repnz
jne
pushf
mov
repnz
dec
dec
rcrl
dec
fcomps
xor
mov
leave
add
outsb
daa
shr
xchg
setb
gs
push
cs
xor
adc
in
pop
inc
inc
out
fidivrs
inc
sbb
push
xor
inc
adc
mov
xchg
in
int3
lret
inc
daa
mov
es
mov
adc
inc
jnp
out
inc
lea
cld
add
push
pop
jmp
int
push
xchg
in
push
imul
xrelease
jbe
je
mov
sbb
imul
adc
call
fdivp
cmp
xchg
icebp
mov
int
jbe
or
test
mov
mov
ror
aas
pop
sbb
dec
shlb
add
les
std
in
xor
int3
sbb
cmpsb
pop
and
ljmp
loopne
dec
dec
les
or
push
sub
ja
pop
rolb
mov
cwtl
mov
ds
jae
jmp
mov
cmp
mov
and
outsb
push
repz
dec
push
lds
lret
in
adc
xchg
push
aas
aas
or
fisttpl
or
fcmove
ret
mov
or
das
loop
and
aaa
cmp
jmp
js
push
push
shrl
pop
add
out
aas
mov
aas
out
jbe
in
rcrl
or
or
jns
arpl
fbld
push
lret
fsubs
sub
or
or
fimull
int3
mov
daa
test
cmp
pop
or
jl
sarl
adc
mov
mov
lods
pop
scas
vmovq
and
mov
into
call
dec
pop
pusha
and
jmp
cmp
test
cmpb
jo
or
and
lea
push
mov
mov
sub
subl
loop
or
push
sbbb
ljmp
adc
sbbb
sub
lcall
push
cs
mov
dec
pop
aam
xor
repnz
lret
sti
mov
repz
test
mov
xchg
mov
push
mov
jno
popa
mov
mov
orl
inc
mov
sbb
dec
xchg
jg
shrb
pop
mov
and
fdivl
shrl
fwait
dec
icebp
sahf
arpl
into
add
js
div
sub
push
rolb
cltd
mov
pop
xchg
adc
add
add
int
aam
mov
cltd
icebp
cmp
inc
jp
jns
sbb
scas
push
lods
pop
movsl
add
push
cwtl
loope
rcll
nop
ja
insb
out
push
jmp
inc
fisubl
in
ret
xchg
lahf
inc
add
fs
rclb
fnstsw
fbld
das
sbb
shl
jae
and
lcall
lret
insl
cmc
sbb
imul
or
loop
fdivs
aam
pop
addr16
outsl
add
xor
test
test
stc
inc
inc
daa
ja
or
pop
jecxz
fisubrs
mov
fildl
cmc
addb
sbb
rol
leave
dec
dec
push
loope
gs
aam
loope
dec
and
ds
dec
in
lcall
int
sub
cmp
inc
xor
push
pop
test
sti
dec
test
into
movl
scas
nop
mulb
test
push
int
mov
and
fs
shlb
mov
lock
sbb
ljmp
jmp
fsubs
std
mov
pop
push
adc
aas
mov
aaa
jno
and
ret
fs
ret
mov
push
sub
and
lock
xchg
sbb
xchg
cltd
dec
mov
push
sti
shrb
daa
mov
push
sub
sub
push
sbb
adc
xchg
test
iret
adc
jns
xlat
in
lcall
jl
loop
xchg
sbb
jl
mov
cmpb
imulb
mull
cmp
pop
cmp
jmp
jmp
daa
loope
loop
mov
sub
leave
mov
cld
adcb
xchg
xchg
hlt
mov
mov
sub
xor
jne
inc
pop
jno
pop
push
push
out
int
ret
mov
sbb
mov
sbb
push
inc
cmc
inc
push
test
insb
cmp
lahf
into
sbb
or
aam
jbe
leave
ret
push
and
mov
or
in
cmp
adc
int
shrl
test
insl
popa
cmp
aas
or
xchg
cmp
mov
jg
dec
jne
cs
inc
add
outsl
std
push
decl
mov
in
mov
pop
and
sti
imul
xchg
push
jg,pt
outsl
mov
movsl
adc
insl
pop
imul
mov
pop
wbinvd
xlat
mov
fs
fldt
dec
movsl
push
jbe
popf
inc
int
xchg
inc
movsl
fisubs
mov
push
push
bound
and
scas
mov
pop
inc
scas
xchg
pop
sahf
and
dec
leave
stos
fmull
je
push
icebp
push
jmp
scas
or
and
out
inc
push
shll
add
jns
adc
jno
ss
or
sub
inc
in
aad
lret
push
ficoms
xchg
repz
cltd
les
cmpsb
jo
mov
and
push
rcrl
mov
sbb
out
or
fsubl
sarl
add
vmovapd
int3
lods
movsl
cwtl
frstor
inc
sbb
in
or
cmp
add
hlt
rcrb
or
jmp
shll
add
cmp
push
jno
test
aaa
adc
ja
mov
leave
pop
fcoml
and
scas
mov
in
mov
lock
add
adc
sub
negl
clc
cltd
jae
xor
fsub
call
jno
sub
push
dec
bound
aas
loope
jecxz
std
sbb
jne
sahf
movl
ret
out
jb
imul
push
movsw
jl
mov
stc
bound
leave
rep
into
mov
iret
mov
sub
jne
stc
pop
movsb
lods
push
lret
in
xor
xchg
mov
addr16
xchg
nop
mov
ja
pop
enter
jg
clc
inc
dec
imul
dec
push
data16
das
lds
sahf
push
sbb
push
movsb
stos
in
dec
das
dec
fs
shll
ret
or
aaa
xlat
iret
mov
push
mov
push
inc
xchg
pop
xchg
push
push
dec
lret
adc
stc
adc
dec
pop
jbe
sub
mov
pop
in
mov
ficomps
daa
icebp
or
loopne
mov
orb
mov
jns
je
push
pushf
dec
dec
call
fiadds
xchg
mov
cmp
imul
fcoml
lea
out
push
fadd
cli
filds
popa
outsb
loop
out
mov
jae
aad
mov
push
pop
add
into
or
sbb
lea
loope
dec
xchg
fnstsw
or
push
loopne
sbb
lret
mov
imul
mov
nop
jmpw
dec
dec
pop
enter
shr
add
or
sahf
daa
addb
movsl
sti
lea
cmp
xchg
jl
movsb
fisubl
insl
int
addr16
arpl
fcoms
jbe
int
jmp
pop
popa
loop
dec
cmp
call
movl
aam
out
cmpl
rcpps
pushf
dec
ret
sbb
adc
std
jnp
das
cmp
es
cs
pop
fbld
pop
ljmp
jg
dec
gs
push
sub
push
fbld
push
jns
xchg
leave
dec
mov
mov
or
sub
loop
push
mov
test
movsb
in
or
out
idiv
mov
jno
mov
or
mov
xchg
push
push
pop
int3
fisttpll
or
xor
sbb
mov
aam
aaa
add
mov
mov
scas
mov
mov
cld
or
lret
inc
push
dec
add
mov
outsb
aad
xchg
inc
cmp
sub
and
and
cmp
push
xlat
and
decb
pop
into
push
cld
call
xchg
inc
test
and
orl
sbb
xchg
aaa
movsb
popa
shrb
fisttps
mov
sar
js
jmp
ja
loopne
iret
add
xchg
loope
call
je
or
inc
out
pop
xchg
ret
stos
push
jge
adc
insb
adc
les
decb
mov
hlt
sbb
sti
std
xor
pop
adc
bound
xchg
inc
rcll
or
fnstsw
mov
sub
or
push
cmp
loop
lret
push
mov
mov
mov
pusha
call
mov
nop
cmc
mov
movsb
ljmp
outsb
insb
scas
pop
or
push
mov
insb
push
pop
cwtl
pop
repnz
add
lds
cs
add
pop
negb
pop
xchg
mov
test
adc
jne
xchg
loop
or
pusha
mov
or
addb
jnp
xor
pop
std
sahf
std
enter
xlat
out
cltd
sarb
push
jl
je
cmp
xchg
sub
pop
jecxz
je
jge
or
loopne
and
push
sbb
loope
xor
pop
mov
stos
cld
out
xorw
fdivl
ds
sbb
std
pop
adc
sub
xor
inc
push
adc
arpl
or
cmp
or
into
fcompl
push
xchg
addr16
lea
sahf
add
nop
lcall
jb
imul
and
jns
and
adc
or
cmpsb
xchg
adc
mov
shll
out
push
mov
cmpsb
cmp
shrb
jle
test
mov
mov
gs
js
into
ss
push
imul
lret
dec
mov
mov
inc
pop
rolb
jle
and
sahf
xor
cld
and
push
gs
out
cmp
js
mov
fldt
daa
adc
sub
les
vsqrtpd
add
mov
mov
loopne
cmp
pop
or
rep
cmp
sub
mov
sbb
mov
ret
cmc
lret
daa
add
int
pusha
xor
mov
cmp
stos
fcomps
mov
and
add
test
xchg
add
adc
xchg
mov
inc
jp
addr16
outsb
mov
hlt
xchg
jmp
enter
out
adc
nop
or
arpl
ror
cwtl
xchg
stos
into
jl
movq
xor
pop
sub
sbb
scas
mov
popa
sub
and
insl
psllq
mov
adc
pop
dec
and
imul
test
push
push
adc
imul
and
xchg
arpl
or
and
cmp
rcll
add
pusha
pop
jno
mov
and
sub
mov
cmpsl
xchg
out
cmp
lods
pop
aas
or
daa
insb
std
push
dec
dec
shl
and
fcompp
xchg
popa
jo
dec
or
and
sbb
cmp
fldenv
rolb
xor
std
popa
bound
push
fisubrl
push
jg
cmp
cmpsb
cmc
shlb
gs
bound
outsl
andb
cmc
and
into
and
xor
push
jle
std
inc
adc
jecxz
sub
out
mov
push
xchg
lcall
es
pusha
imul
nop
dec
shll
mov
xchg
dec
push
jns
jmp
das
adc
in
data16
mov
inc
faddl
jg
repz
xor
ja
insb
movsl
xchg
mov
outsl
sti
scas
cmp
fstps
push
rcrl
imul
shlb
add
jge
pop
jmp
mov
or
dec
xor
data16
shrl
arpl
stos
js
aad
mov
mov
jae
ret
cmpb
sbb
inc
ds
sbb
inc
neg
push
xchg
inc
push
stos
pop
lods
outsb
scas
pop
enter
pop
jle
in
std
add
in
addr16
sbb
scas
aaa
cmp
sbb
xchg
dec
subl
jge
js
mov
sbb
movsl
das
adc
testl
ljmp
cmp
xor
or
loope
cmp
sub
and
mov
mov
and
in
mov
decb
rcrl
fnstenv
xchg
test
repz
in
mov
push
push
out
pop
sub
mov
mov
cmp
mov
jae
mov
xchg
jecxz
outsb
sbb
out
outsl
mov
adc
aam
test
flds
push
movb
test
inc
les
pop
addr16
popf
jle
add
mov
sub
adc
std
dec
mov
iret
into
inc
test
mov
xchg
mov
adc
jne
cld
dec
mov
cmpsl
pop
popf
jg
mov
jl
fwait
ds
aas
loop
icebp
shr
dec
xor
mov
mov
cs
sbb
imul
adc
mov
popf
ret
or
lcall
in
sub
jno
push
push
lods
mov
into
idivl
jmp
loop
xor
loopne
data16
popa
push
add
mov
out
dec
add
xchg
sahf
sub
imul
inc
dec
stc
add
push
inc
push
xor
sahf
xchg
jne
pop
mov
pop
adc
scas
push
test
mov
mov
imul
mov
push
cmc
push
and
js
mov
add
f2xm1
cs
mov
ljmp
sub
pop
add
mov
arpl
dec
cld
cltd
sub
dec
adc
pop
in
pop
test
leave
push
jp
clc
and
outsb
xor
jmp
inc
cmp
paddd
cltd
cltd
adc
jo
dec
push
push
sub
jns
sub
sub
int3
fists
inc
cmp
into
movsl
and
mov
dec
mov
and
dec
hlt
ss
xor
lcall
bound
xchg
sub
hlt
add
pop
lods
imul
packssdw
fisubrl
sub
cmpsl
add
ljmp
push
lods
mov
popa
fsts
sub
imul
mov
call
sbb
add
cs
xor
xchg
adc
lcall
pop
push
imulb
jl
sub
sti
rolb
adc
lock
pop
lods
repnz
pusha
rol
mov
sarl
xlat
and
lret
jge
sub
test
jmp
inc
mov
inc
jae
inc
stos
dec
fnsave
xchg
loop
inc
or
mov
add
repz
cmc
int
sub
outsb
sahf
ja
adcl
mov
sahf
fdiv
inc
or
mov
clc
data16
push
inc
enter
iret
pop
pop
popf
xchg
lods
push
mov
cmpsb
and
shll
imul
out
push
iret
outsb
and
jb
mov
fs
imul
sarl
xor
jnp
sub
sub
and
clc
enter
repz
lods
shlb
jle
cmp
jl
insl
pop
jbe
push
xor
ja
out
sub
lods
sub
inc
sahf
sahf
xor
inc
push
cmp
dec
inc
clc
stos
sbb
inc
and
xor
dec
and
jl
pop
adc
lret
negl
vandnps
aad
scas
or
in
pop
xchg
inc
shr
push
cmp
push
loop
mov
cmp
int3
stc
inc
stos
jl
sub
push
mov
mov
pop
mov
or
paddsb
jnp
xchg
hlt
sbb
out
hlt
mov
jb
cmp
fs
xor
mov
stos
sub
daa
addr16
sti
or
adc
cmpsb
add
dec
mov
aam
rcll
inc
pop
adc
les
sub
clc
pop
jl
or
jae
pop
jge
sbb
iret
test
icebp
das
and
fs
add
rorl
ret
mov
data16
sub
xchg
icebp
fstps
into
mov
adc
pushf
mov
and
out
sub
jl
sbb
stos
cld
imul
mov
pop
sub
sbb
cmp
clc
repz
or
sbbb
dec
or
sbb
lret
jge
pop
xchg
imull
mov
push
enter
push
pop
cmp
insb
fwait
cmp
movsb
cmc
clc
test
and
mov
jecxz
xchg
jb
jnp
sbb
push
ret
out
adcl
stos
cltd
dec
cli
push
out
int3
or
jmp
xchg
pop
cmp
or
mov
sbb
cwtl
add
cmc
xchg
xchg
pop
add
inc
dec
nop
lret
movsb
sbb
add
push
sbb
xor
xlat
jmp
or
mov
shl
adc
dec
cld
mov
fcomip
add
xlat
mov
movsl
mov
cmc
jns
dec
je
cmp
popf
sub
orb
sbb
movsl
lcall
shr
jnp
test
lcall
popa
dec
loopne
fnstcw
in
adc
loop
sbb
inc
iret
mov
sbb
pop
sub
scas
or
adc
fs
out
inc
aam
sti
rorl
push
jo
pop
add
inc
xchg
out
pop
push
add
ljmp
xchg
mov
mov
ud1
sti
push
imull
mov
inc
gs
lock
add
jp
inc
nop
xchg
sbb
rep
jmp
push
mov
insl
repnz
or
nop
xchg
pop
bound
hlt
push
fadds
inc
pop
push
adc
sub
cli
pushf
push
ret
mov
insb
dec
jno
sub
dec
push
shlb
sbb
std
or
sbb
sbb
push
int3
sub
jmp
xchg
push
push
cli
lret
lods
pop
lcall
cwtl
jp
push
xchg
xchg
sbb
mov
xor
sahf
pop
fisubs
and
sub
mov
mov
dec
addr16
inc
fsubrl
fsubs
add
ss
sbb
fistps
int
out
sub
push
sbb
repz
dec
popf
pop
jecxz
insb
jle
push
mov
fbstp
std
and
test
lea
add
ret
jecxz
shll
out
xchg
and
and
mov
adc
cltd
shlb
inc
or
mov
mov
out
bnd
je
insb
outsl
mov
pop
fs
outsb
sub
mov
push
sub
mov
insb
mov
mov
xchg
test
mov
mov
push
or
jge
mov
fwait
scas
lahf
loop
je
sub
lock
push
and
inc
mov
inc
mov
leave
rorl
add
lea
sbb
stos
mov
pop
sub
and
das
pinsrw
dec
mov
xlat
cwtl
or
mov
mov
xor
and
mov
nop
ds
repnz
pop
xchg
loopne
and
sbb
clc
std
adc
in
adc
fildl
jae
fadd
stc
aam
push
push
outsb
adc
cltd
lods
mov
sub
mov
fs
and
and
pop
out
mov
cld
pop
in
pop
into
mov
pusha
icebp
mov
call
xor
mov
mov
ds
xor
mov
sbb
cmc
loope
dec
mov
and
pop
gs
mov
push
dec
mov
lret
or
ds
shlb
sbb
lret
shl
pop
pop
cmp
cmc
out
es
repz
xchg
cmp
repz
xchg
sti
sub
mov
loope
mov
aam
xchg
pop
mov
sbb
push
imul
add
cmp
lods
mov
mov
lcall
push
pop
fstps
in
mov
mov
jl
cld
ret
in
fidivl
testl
rcll
adc
xchg
and
mov
jmp
pop
push
mov
into
xor
out
popf
pop
push
fdivrl
fs
jo
les
popa
xchg
mov
stos
addr16
xchg
iret
test
xor
js
int
scas
and
mov
mov
outsb
std
movsl
and
daa
push
fdivrl
fcom
mov
shlb
jmp
jl
xchg
xchg
sbb
and
hlt
xor
out
mov
or
sbb
xchg
mov
nop
sahf
pop
mov
stc
insb
int
inc
sbb
xchg
nop
fs
jl
in
cs
sub
mov
xor
inc
pop
in
shrb
leave
aad
and
imul
dec
fdivr
pushf
push
cmp
call
push
in
rcll
and
mov
fsts
cmpsl
sbb
mov
mov
add
loop
lock
or
push
pop
add
xchg
scas
mov
cmc
bt
xor
iret
mov
sbbb
test
popf
xor
dec
nop
adc
in
scas
jb
sub
icebp
iret
out
mov
sbb
ds
and
adc
jnp
push
jmp
aad
sti
pop
pop
mov
push
out
loop
testl
lahf
sahf
and
outsl
cwtl
jns
push
xor
inc
stc
loope
sbb
cmc
test
push
inc
ss
sub
cmc
mov
cmc
std
test
out
add
push
into
xchg
arpl
lcall
xor
sub
popa
faddl
lahf
scas
nopl
clc
lret
jecxz
cmp
ljmp
psubsw
test
cli
jmp
sub
cmp
jl
mov
insl
lret
cltd
je
decb
fiadds
and
shrb
stos
sub
mov
xor
lahf
cmp
xchg
lods
xchg
fbld
scas
adc
lcall
loope
push
jl
dec
push
test
nop
cmp
repz
aam
xchg
add
sub
outsb
jmp
mov
hlt
call
jge
movsb
or
push
adc
mov
movsl
fdivr
mov
pop
lcall
cmp
test
lret
push
fistpl
inc
imul
cmc
mov
mov
into
xor
jecxz
inc
sbb
or
and
or
add
inc
andl
dec
sti
rol
rcrl
imul
subl
in
cmpsb
clc
subl
arpl
pushf
stc
sub
outsb
mov
or
loop
mov
adc
ss
xchg
dec
insb
mov
and
ret
mov
or
adc
jmp
jno
mull
ftst
scas
sbb
pop
mov
call
inc
pop
and
sbb
mov
sub
and
mov
ds
mov
insl
pop
shl
shl
adc
jno
mov
jl
incb
xchg
fcmovnbe
pop
call
ds
adc
adc
outsb
inc
fstpt
or
mov
push
out
xorb
data16
test
adc
adc
xchg
cltd
dec
xchg
fs
in
cltd
push
in
in
xor
add
add
aam
or
pop
mov
cmp
xor
pushf
lcall
out
push
xor
leave
out
and
or
jge
xchg
pusha
lods
bound
jp
in
adc
jl
fdivl
stos
inc
push
fs
andl
mov
ds
mov
daa
sbb
stos
loope
fs
sbb
cmp
cmp
jo
jmp
adc
enter
or
fwait
das
mov
mov
mov
movsb
sub
out
adc
xchg
xor
dec
addr16
mov
cmp
and
das
sub
fldt
inc
push
xchg
fcomip
adc
psrlw
sub
inc
sbb
adc
jno
push
xor
es
xchg
mov
lods
lret
das
cmp
mov
or
repz
cmpsl
push
pusha
sbb
lods
insb
or
dec
add
gs
das
lods
push
sbb
aas
jecxz
and
scas
dec
inc
mov
and
outsl
sbbb
arpl
std
and
js
jg
iret
rcrl
pop
fcomps
mov
jmp
push
mov
xor
movsl
es
clc
mov
pop
xchg
inc
pop
adc
daa
sub
lahf
arpl
outsb
test
dec
pop
jne
movsb
mov
out
fwait
lcall
call
push
and
dec
mov
mov
clc
ja
xchg
dec
daa
les
imul
stos
sbb
jmp
cmp
jg
out
fsubl
mov
decb
mov
aam
shr
dec
in
inc
arpl
mov
and
scas
mov
pop
or
xor
aaa
aas
push
add
paddb
aad
movsb
stc
sbb
outsl
adc
jecxz
jp
icebp
shlb
jmp
sbb
pop
sar
adcb
cmp
leave
loopne
out
movntps
aad
xlat
sub
xor
pop
sbb
data16
outsl
inc
sbbl
loopne
cmpb
push
sbb
sar
stos
pop
cwtl
cmp
imul
fs
sahf
cwtl
lock
push
pop
mov
xor
cmp
mov
cmpsl
add
icebp
mov
subl
add
dec
mov
dec
jmp
outsb
loop
addr16
and
mov
out
inc
mov
push
leave
mov
inc
mov
xchg
mov
mov
push
inc
xchg
stos
scas
mov
pop
fldt
popa
fcoms
mov
push
add
popf
mov
test
clc
xchg
jg
jnp
inc
jle
fadds
jae
xlat
out
mov
scas
jns
add
cmc
in
mov
cmc
mov
ja
mov
rorl
or
jp
mulb
out
ret
jmp
jp
ljmp
fstp
adc
cmc
sbb
pop
xchg
adc
xchg
rcrl
push
xchg
std
rolb
insl
lret
pop
shlb
cmp
adcl
test
lds
imul
in
inc
jp
sahf
stos
clc
loope
add
or
adc
push
or
flds
aad
aad
pop
push
cmpl
jmp
int3
lret
in
pop
cmpsl
mov
aaa
in
dec
hlt
add
nop
ret
addl
fists
in
and
out
xchg
fnstenv
int3
sub
stos
jge
jo
mov
and
and
fisubs
sbb
mov
dec
mov
cmpb
lods
loopne
popf
cltd
iret
inc
int
leave
nop
sahf
xchg
dec
cmpsl
addb
sub
cmp
fwait
push
xlat
rcrb
xor
or
mov
lock
xor
jmp
es
fdivp
lea
jb
pop
pusha
repnz
jns
sbb
dec
es
fwait
mov
out
pop
rolb
sub
mov
xchg
sti
hlt
dec
jns
mov
dec
out
cmc
pop
jo
cld
int
repz
dec
mov
mov
ficoml
cld
inc
and
mov
loop
sbb
push
outsb
gs
add
imul
imul
ds
xchg
pop
sbb
push
aam
mov
push
mov
xchg
insl
jl
inc
fsubs
sbb
mov
pop
xchg
call
fmull
aas
xchg
test
je
add
adc
mov
aam
push
jmp
divl
test
push
in
outsb
repz
in
xchg
arpl
filds
pop
mov
mov
lods
aam
sub
push
sub
and
push
outsl
add
inc
jnp
pushf
les
imul
xor
fadds
jmp
bound
inc
xchg
mov
out
mov
scas
xor
arpl
in
dec
add
sub
jno
xchg
sub
jecxz
jne
sbbb
arpl
popf
sub
jne
gs
jno
popa
aam
mov
pushf
push
jl
add
fninit
adc
and
mov
subl
dec
dec
adc
push
inc
aaa
insl
dec
addr16
mov
sub
and
daa
cmc
push
out
lcall
ljmp
xor
push
test
sub
xor
stc
enter
mov
cmc
sbb
pushw
lods
mov
cld
sub
insl
sub
mov
mov
add
push
add
mov
pop
cmp
or
mov
dec
pop
pop
ja
pop
jecxz
adc
dec
adc
mov
adc
dec
xor
in
cmp
lods
adc
jl
xchg
call
xor
out
dec
ficoms
ja
push
fdivs
arpl
xor
repz
mov
jmp
push
jmp
ja
leave
inc
push
push
jbe
jle
jmp
xchg
loope
out
lcall
mov
daa
cli
shll
adc
inc
push
pop
adc
or
inc
xchg
fldcw
pop
addr16
inc
imul
push
stos
ss
dec
push
add
sub
mov
jns
add
mov
gs
mov
sub
lret
jl
or
xchg
push
cmp
pop
cli
inc
and
push
sbb
xchg
push
iret
stos
test
or
pusha
adc
ljmp
icebp
or
inc
cmp
clc
repnz
mull
adc
imul
cmp
iret
movsb
bound
ret
push
mov
imul
sti
xchg
inc
dec
xor
cmp
fidivrs
dec
xchg
call
std
jne
pusha
xlat
inc
push
nop
out
adc
push
sbb
push
stc
mov
iret
inc
scas
ja
hlt
jbe
add
movq
mov
pop
lret
dec
push
xchg
push
jmp
dec
inc
shl
sbb
ljmp
or
and
push
fxch
shlb
repz
sub
out
push
aas
stos
psubusw
add
jg
mov
push
fwait
imul
xchg
or
sbb
rcrl
inc
or
or
sub
les
mov
leave
roll
cli
mov
add
jecxz
fiadds
xor
and
pop
xchg
inc
pusha
rcll
or
sub
xchg
sarb
push
ficoml
test
movsl
jno
adc
cmpsl
iret
cld
pop
and
addr16
pop
cmovle
fistpl
movsl
lds
sub
mul
mov
pop
inc
js
daa
dec
mov
inc
sub
movsl
insb
push
into
push
out
rolb
cld
mov
in
in
ds
lahf
insl
mov
mov
jle
jecxz
popf
lret
lods
imul
jp
and
and
cmpsb
and
push
addr16
push
pop
cmovne
mov
inc
pushf
test
mov
jne
adc
dec
mov
mov
cmpsl
sub
cmp
fdivs
mov
xor
jecxz
lods
mov
in
fidivrl
fdivrp
outsb
and
xor
mov
movaps
cltd
shl
mov
lahf
cmp
inc
inc
cld
xor
pop
mov
jl,pn
cltd
mov
mov
imulb
es
orb
out
sub
iret
cs
xchg
xchg
scas
lret
js
lods
inc
bound
nop
add
pop
xchg
outsb
mov
sub
in
cmpsl
dec
mov
ljmp
sub
jns
fsubl
lret
adcl
or
cmp
test
add
fidivl
mov
sub
adc
add
out
mov
ficomps
movsb
enter
sar
movsb
notl
mov
movb
int
xchg
adc
fstps
sub
lret
ret
xchg
mov
fidivrl
cltd
jl
shll
cli
loope
or
sub
xchg
cs
push
jno
xchg
adc
mov
ja
add
stos
inc
popa
xchg
inc
xorb
mov
pop
sbb
lret
fs
cmc
jbe
outsl
ljmp
lahf
clc
bound
push
push
or
dec
add
iret
push
sbb
ret
xchg
data16
add
test
mov
or
incl
pop
dec
insl
sbb
push
mov
movsb
sub
or
les
jge
sbb
cmc
fildl
jae
jle
out
jmp
sbb
sbb
vsubps
mov
lcall
mov
nop
xchg
mov
pop
jp
xor
sbb
push
xorb
aam
push
dec
das
aaa
fwait
cmovno
sub
test
push
mov
scas
dec
or
pusha
in
rclb
jo
je
cwtl
stc
ret
shll
jne
sub
test
add
push
mov
insb
scas
stos
adc
out
cmp
loopne
pop
fucomi
lret
and
fsubr
inc
xor
sub
pop
or
or
xchg
cmpsl
call
mov
fwait
fs
inc
and
int3
jb
push
inc
xor
push
lds
xchg
sti
jno
int3
xor
fsubl
iret
int
aas
pusha
jl
into
movsb
ljmp
xor
sti
lcall
push
bound
sbb
adc
lret
xlat
sub
sbb
iret
xchg
sub
out
call
cmp
cmpsl
and
pushf
incl
test
imul
xchg
scas
pop
jbe
out
mov
cltd
sbb
add
test
or
cmp
mov
cltd
dec
push
mov
call
data16
inc
pusha
sarb
aas
xor
push
or
adc
in
pop
jg
fstps
sbb
add
cwtl
ret
xor
loop
mov
jno
aas
movsb
fmulp
roll
pop
clc
xlat
ss
clc
loopne
dec
add
pop
inc
pop
inc
pop
xor
outsb
jae
idivl
rorb
cltd
xor
adc
or
shll
jo
xchg
add
sbb
add
pop
int
stos
xchg
icebp
push
loop
dec
addr16
scas
rcl
sub
pop
and
sti
sub
ljmp
cmpsb
dec
xchg
sub
in
cmpsl
pop
scas
out
xor
clc
push
or
popf
sub
sarl
or
pop
push
push
dec
mov
inc
xchg
mov
add
adc
pop
pop
adc
movsl
sub
orl
lahf
lret
cmpl
cmpsb
insl
mov
adc
test
or
clc
cwtl
push
mov
loopne
out
fistps
icebp
or
lods
pop
data16
adc
out
cmp
sbb
jne
sbb
jmp
cmp
hlt
mov
in
clc
inc
out
push
cld
aas
mov
hlt
inc
popf
inc
stos
jae
mov
cmpsb
dec
iret
jns
leave
enter
sti
in
adc
pop
xor
add
push
pop
jl
addb
dec
or
mov
mov
je
fldt
or
call
xor
sar
push
push
in
xor
mov
push
xchg
sub
jb
ss
cmp
int3
push
imull
sbb
arpl
push
inc
js
aad
inc
xchg
test
cmpsb
insb
rcrb
in
imul
pop
pop
outsl
or
pop
and
cld
pop
and
mov
pop
mov
push
sub
inc
hlt
xor
je
and
fcmovu
adc
mov
sbb
lea
incl
stc
adc
or
cwtl
jno
add
and
out
setl
jno
ffreep
mov
sub
gs
sub
or
ret
shrb
in
jnp
popf
stos
lret
jg
and
out
dec
lret
mov
cs
pop
inc
add
or
jne
or
cmpsb
inc
in
push
loopne
mov
xchg
mov
dec
add
fsubrs
add
test
imul
jns
xchg
negb
std
clc
sub
push
mov
xor
xor
aas
and
cmp
cmp
dec
aas
lods
ret
sub
dec
stc
and
cmp
or
mov
scas
mov
ja
loopne
jne
xor
pop
mov
gs
cwtl
mov
in
in
and
xor
dec
insb
mov
or
dec
push
testl
arpl
subl
loope
dec
lods
mov
stc
scas
mov
push
sbb
div
xor
adc
sub
jmp
mov
mov
dec
or
mov
pop
or
xchg
cmp
test
cmp
cwtl
jnp
int3
int3
test
out
scas
mov
pop
xor
inc
pushf
loop
lds
ret
cmp
mov
repz
jmp
sahf
repz
fisubrl
lcall
pusha
or
orb
cmpsb
pop
and
sub
cmp
or
fstl
loope
push
out
jnp
jnp
aaa
push
ds
stc
dec
push
lds
mov
mov
mov
or
mov
imul
or
in
cmc
out
mov
cmpb
mov
aad
pop
std
cli
scas
outsl
cmpsl
cli
cltd
in
adc
and
jmp
loop
sub
jg
xor
xor
mov
xchg
pop
sbbl
movsb
pop
inc
and
out
jl
sbb
xor
jns
sar
cmpb
dec
popf
xlat
repnz
push
lds
mov
sbb
pop
dec
popa
push
jecxz
push
bound
inc
test
sbb
in
movsl
xor
adc
daa
sub
mov
fsubs
out
je
stc
sub
cmovns
pop
js
push
lret
stos
or
call
cwtl
mov
pop
and
lret
imul
rcrl
addl
rolb
jge
jl
insl
dec
lods
cwtl
sub
mov
sarl
lcall
xor
or
in
sub
addb
shll
lods
int3
mov
in
icebp
sahf
sub
push
fisubs
lods
mov
ret
loopne
fwait
xor
fcmove
cmp
movsb
push
cli
iret
push
sub
adc
gs
sbb
push
test
add
je
mov
adc
dec
sub
sub
lds
xor
dec
mov
push
addr16
push
outsl
jns
gs
xchg
or
fisubs
pop
dec
test
pusha
adc
push
loopne
jae
aad
or
inc
jmp
test
or
imul
push
xor
sbb
mov
add
inc
imul
ret
mov
adc
sbb
cmpsl
test
repz
mov
jge
pop
and
and
in
leave
mov
std
call
test
pop
mov
cmp
inc
fnsave
sub
ss
out
pop
in
or
enter
jb
arpl
inc
fbstp
inc
fisttpll
nop
mov
popf
mov
mov
dec
out
loop
mov
imul
or
add
inc
mov
loop
test
movsb
pop
in
push
mov
dec
iret
in
xchg
or
add
loopne
sbb
or
sbb
movsb
xchg
stos
les
loopne
sbb
roll
repz
adc
jle
cmp
pop
out
icebp
cmpsb
lret
or
jecxz
sbb
xchg
daa
aam
fmulp
push
inc
xor
add
adc
mov
sahf
jns
sbb
push
in
int
pop
cmp
or
mov
sbb
fwait
je
fstp
jmp
xchg
push
mov
mov
sub
xchg
idiv
out
xlat
cld
fs
stos
mov
and
jb
dec
inc
mov
sbb
xchg
stos
inc
cwtl
icebp
mov
ja
popa
aas
lea
cmp
xchg
push
lret
jne
or
and
push
fmul
sti
inc
dec
dec
movsl
adc
lret
add
jge
mov
cmpsb
mov
mov
pop
push
in
fs
insl
mov
dec
movsb
lods
xchg
xchg
and
jp
and
add
lods
dec
call
repz
pop
shll
jns
cld
adc
stos
adc
cmc
push
pop
repnz
mov
fwait
int
push
fs
ficompl
in
shrl
aas
adc
incl
lcall
iret
sub
pop
inc
or
aam
rcrl
cmp
jbe
adc
nop
jl
testb
cmc
mov
adc
in
pop
and
aas
int3
lahf
sub
inc
es
push
js
loop
xor
out
out
pusha
rcrb
bound
out
and
sbb
mov
ficompl
cmp
fildll
inc
fs
addr16
add
ss
arpl
cld
sbb
mov
outsb
dec
lcall
ret
sub
jns
inc
cmp
mov
add
xchg
sub
mov
test
add
andl
fnsave
push
cmp
das
fldl
test
ret
test
imul
cmpsl
dec
xor
icebp
jae
sub
jl
in
mov
pop
in
arpl
test
sbb
mov
mov
adc
and
cmp
sub
mov
pop
jp
jmp
mov
xor
mov
out
jg
jo
das
loopne
js
lock
aas
cmc
push
jge
call
inc
add
out
push
push
icebp
push
test
and
cmpsb
iret
fildl
push
sti
dec
jp
sub
insb
scas
fildl
cmp
jbe
push
iret
cmpsb
mov
pop
jbe
clc
sbb
lcall
mov
xchg
push
mov
outsb
stos
in
lret
shl
jae
sbb
mov
cmpsb
mov
outsb
push
data16
pop
pushf
mov
push
adc
and
adc
cmp
fwait
pop
push
out
lret
jl
cld
insl
notl
in
add
jns
inc
push
mov
aaa
jb
in
adc
push
test
rorb
cld
jns
fld
das
and
pop
sub
hlt
mov
pop
sbb
movsl
in
test
lahf
stos
mov
lods
inc
mov
les
pop
pop
popa
lds
hlt
add
or
mov
inc
pop
sub
lea
imul
test
cmp
push
fdivp
pop
icebp
push
lahf
lahf
xor
cltd
cmp
or
rcrb
aad
mov
sub
mov
and
leave
push
mov
pusha
xchg
mov
dec
cmp
divb
enter
sar
jecxz
pop
js
aad
add
mov
or
jmp
fildl
lods
inc
test
mov
jnp
jb
rcrl
adc
lcall
mov
mov
dec
push
dec
push
nop
aam
mov
rclb
inc
adc
decb
movsl
cld
sbb
rcrb
cli
adcl
cmp
mov
aas
jae
popf
icebp
push
jb
pop
lods
roll
xor
das
xchg
mov
xor
dec
imul
aas
shrl
lods
into
lds
mov
jmp
inc
and
sub
jl
mov
push
fstps
pop
add
fildl
scas
addr16
in
or
push
inc
xchg
roll
jmp
or
or
cwtl
or
mov
lret
je
mov
scas
cmpsb
xlat
and
mov
out
pop
add
jmp
ja
xchg
jle
lret
mov
sbb
mov
inc
xchg
mov
ja
lret
cmp
xchg
adc
pusha
xchg
aas
pop
je
sub
jle
ss
mov
lret
lods
cmp
xor
cld
xchg
sub
and
fiaddl
sarb
inc
pop
jg
xor
movsb
sbb
es
mov
scas
xor
jnp
movb
jge
ret
pop
sbb
push
jl
adc
jae
jmp
jge
mov
mov
xor
dec
lea
jb
pop
jle
mov
dec
and
sti
pop
mov
or
jecxz
repz
inc
dec
mov
adc
idivl
xor
sbb
jno
lret
movsb
ljmp
sbb
pop
dec
cmp
inc
arpl
add
cld
imul
cli
and
and
lret
repz
jle
add
lods
dec
mov
cmp
cld
lcall
mov
cltd
push
jecxz
inc
int
mov
and
xor
and
pushw
into
ret
repnz
cli
mov
mov
cli
dec
shrb
cld
xor
xor
in
dec
or
mov
lea
or
push
stc
pushf
dec
mov
add
js
xchg
lods
pushf
mov
fisttps
dec
cmp
ret
push
push
out
jecxz
adc
stos
cmpsl
adc
repz
add
lods
in
ljmp
push
out
cld
inc
imul
neg
mov
push
mov
cld
lahf
xchg
and
push
pop
push
inc
push
add
push
mov
mov
adc
mov
inc
dec
repnz
dec
and
jno
pop
pop
divl
sub
push
mov
mov
dec
sahf
or
mov
mov
leave
jge
gs
das
jbe
ret
pop
push
lret
xorb
popa
ljmp
dec
pop
in
pop
mov
loopne
test
int
xchg
or
xlat
sti
movsl
pop
jp
outsb
out
dec
fprem1
lahf
mov
lret
push
sub
test
add
fwait
loope
mov
int
outsb
scas
loop
fdivrp
mov
adc
xchg
mov
or
inc
loop
inc
cmpl
inc
pushf
fdivrs
xor
cltd
lret
pop
push
sub
xor
les
push
loop
and
movb
cmp
push
iret
and
xchg
mov
add
cli
adc
mov
clc
push
les
fnstenv
pop
xchg
cmp
jle
dec
loop
fstps
popf
push
aaa
lods
ret
push
dec
push
ret
loop
mov
adc
cli
test
push
es
sbb
test
push
or
mov
lret
test
insb
push
test
gs
sub
sbb
pop
les
sahf
scas
cs
pop
scas
in
jmp
inc
adc
jns
dec
into
rorl
mov
mov
dec
adc
pop
out
cmc
mov
mov
mov
cmpsl
shlb
xchg
jmp
bound
xor
xor
mov
std
in
mov
lods
stos
ret
data16
mov
nop
pop
or
mov
fs
sub
lods
scas
add
in
push
ret
outsb
arpl
stos
and
negb
add
outsb
addl
lods
aad
enter
clc
sub
bound
imul
call
cmpsl
lret
mov
push
int3
inc
lea
jg
or
mov
sti
xchg
int3
mov
sbb
fs
lods
lret
add
shr
inc
push
ret
pop
xchg
pop
lret
imul
cwtl
dec
xlat
mov
fwait
lret
dec
cmp
out
dec
cwtl
cld
rorl
clc
pop
and
mov
loope
or
shll
add
xor
xchg
out
cmp
jnp
pop
mov
rcrl
addl
add
shll
mov
loop
aaa
add
lret
fs
stos
jge
andl
push
lods
mov
jmp
xchg
inc
movsl
into
pop
arpl
bound
jg
orb
les
bound
sbb
loope
jns
je
and
rcrb
mov
add
and
test
xchg
ret
scas
les
cmp
jle
sbb
std
jns
outsl
pop
repz
popf
leave
jns
push
mov
mov
addl
mov
sbb
je
popf
dec
dec
pop
mov
lock
arpl
fwait
pop
les
adc
stc
cltd
inc
mov
dec
xchg
dec
insl
cmp
and
jg
mov
sbb
xchg
psllq
shrb
repz
cwtl
pop
aad
push
mov
push
add
dec
dec
dec
cmpl
mov
mov
push
test
push
fistps
mov
test
xor
scas
sub
sbb
ja
pushfw
mov
mov
fs
fldcw
int3
lahf
scas
les
dec
ret
fildl
aaa
adc
push
jp
inc
aas
pop
adc
mov
ret
data16
and
sub
sub
int3
inc
imul
fistpl
adc
xchg
adc
jp
dec
mov
rolb
push
test
push
out
popf
cld
adc
fisttps
inc
das
add
push
lahf
and
lahf
inc
lea
xlat
lods
mov
jecxz
inc
push
push
push
loope
and
inc
inc
pop
sub
cli
push
cmp
sbb
push
subl
jne
rsm
pop
and
jl
fcmovb
cmp
std
clc
int3
mov
in
xchg
adc
jne
repnz
cwtl
xchg
jmp
arpl
add
in
push
cwtl
int
xor
xchg
xor
mov
cld
jecxz
test
scas
xchg
repnz
xor
mov
les
mov
add
cmp
js
in
icebp
test
lret
shl
gs
and
rcll
add
jne
xor
sbb
or
dec
int3
insb
dec
into
dec
lret
jge
ja
daa
jp
push
adc
ss
add
cli
in
cwtl
dec
sub
clc
ret
inc
rcll
mov
pop
jnp
and
hlt
popf
in
je
hlt
rcl
lods
push
mov
sbb
cs
enter
push
aad
jmp
sbb
int3
sub
cltd
cmc
cmp
push
mov
cli
push
out
mov
push
fildl
push
pop
outsl
negl
ret
mov
cld
or
dec
test
xchg
or
loop
adc
and
fstps
inc
pusha
int
iret
movsb
dec
cmp
rorb
push
cld
sbb
mov
je
mov
xchg
cmp
jecxz
sahf
out
imul
testl
mov
jg
xor
dec
dec
lret
dec
shl
or
jb
roll
sub
sbb
inc
lods
xchg
inc
mov
jo
mov
aam
jle
cmpsb
repz
or
cs
sub
and
cmpsb
imul
mov
sbb
cmpsl
ljmp
js
and
sahf
mov
pop
mov
jmp
movsb
imul
sub
adc
arpl
loope
insl
imul
push
push
rorl
and
mov
sbb
into
aad
test
push
shll
inc
inc
mov
dec
sahf
push
add
cmpsb
cmp
sbb
aam
lahf
add
insl
xchg
push
xchg
pop
data16
and
clc
mov
fisttpll
pop
sub
movsl
jns
test
xchg
pop
cltd
and
in
mov
mov
lock
popf
imul
and
imul
ret
or
call
or
js
aam
push
and
aam
sbb
push
pop
loop
and
ljmp
cltd
in
fsubrs
or
sahf
mov
cmc
dec
into
sti
mov
jg
cli
push
int
xlat
push
or
mov
movsb
sbb
pminsw
std
addr16
sbb
mov
inc
lock
jle
mov
cwtl
gs
xchg
mov
xchg
dec
push
mov
loope
clc
jmp
xor
pusha
xor
sti
mov
or
mov
sbb
lret
pushf
sbb
je
addb
cli
sub
pusha
ds
nop
je
or
popl
mov
leave
rol
mov
mov
cmpsb
adc
fidivrs
outsl
jbe
mov
ret
scas
cmp
fcomps
cmp
or
add
lcall
aaa
les
shrb
push
jno
push
aaa
add
mov
dec
rorl
pop
ret
push
jae
and
pop
hlt
dec
fs
pop
cmp
xchg
repnz
dec
ds
ss
jmp
stos
push
xlat
movsb
aam
mov
aaa
mov
lods
orb
fsubrl
rcrl
cs
sbb
push
jecxz
mov
xchg
push
jmp
cwtl
data16
inc
xor
hlt
and
cli
icebp
push
test
imul
dec
std
daa
or
sbb
add
aaa
push
xchg
xchg
loope
clc
rclb
push
or
mul
lea
sahf
or
inc
sub
loope
or
push
adc
cli
mov
cmp
jmp
fimuls
in
enter
pusha
sbb
in
pop
pop
mov
dec
and
dec
push
add
fisubrl
loopne
shrb
mov
adc
add
outsl
lock
outsl
dec
cld
mov
bound
inc
push
and
add
inc
mov
jbe
jb
mov
cwtl
dec
decl
push
adc
daa
insb
jg
push
lock
js
sbb
test
add
cltd
cmc
mov
and
lcall
push
add
mov
cli
cmp
mov
sbb
cld
cwtl
xor
dec
lods
decl
jl
xchg
mov
pusha
pusha
roll
mov
sahf
adcb
loopne
cmpsb
les
mov
adcl
and
shrl
sub
hlt
and
pushf
sub
mov
sbb
ret
mov
imul
or
add
addr16
test
loop
or
mov
in
enter
and
dec
dec
and
shr
cmp
dec
rorl
sbb
pop
sbb
enter
ss
lock
out
cmp
sbb
les
or
mov
ja
aam
faddp
test
dec
notl
dec
inc
dec
push
nop
xlat
xor
jg
pop
je
nop
arpl
mov
into
pop
add
xlat
mov
jp
xchg
sub
iret
jne
or
jg
lods
or
jmp
adc
sbb
mov
rorl
dec
mov
sbb
or
jecxz
lds
mov
sbb
das
popa
and
mov
adc
sbb
mov
xchg
push
and
sub
or
test
loopne
xchg
out
xchg
dec
xchg
fnstsw
dec
sti
push
ljmp
add
add
sahf
hlt
dec
push
das
nop
cwtl
sub
shll
jecxz
sbb
jle
dec
and
jl
sub
dec
push
fistps
jae
rcl
lock
hlt
imul
gs
xor
push
mov
nop
add
loop
push
leave
jp
das
insl
push
xchg
arpl
lahf
mov
imul
sub
push
push
dec
leave
mov
mov
lods
stos
fisttpl
outsl
push
fcompl
xlat
mov
rclb
int3
inc
xor
loopne
push
movsl
sub
mov
mov
pop
xchg
loope
push
jg
sbb
fbld
xchg
add
ret
rclb
repnz
push
ljmp
jle
xchg
mov
out
push
popa
pop
pushf
les
arpl
outsb
sbb
pop
add
ss
fidivl
and
fisttps
push
inc
mov
loopne
xchg
in
jmp
sahf
xchg
pcmpgtw
icebp
scas
out
outsb
push
and
mov
push
dec
fisttpll
mov
pop
out
dec
add
sub
jne
jbe
or
cmpb
mov
lea
pop
fldcw
test
push
js
cmp
adc
adc
push
divb
cmp
loop
insb
test
lcall
cmp
lret
push
jge
sbb
mov
cmp
fstpt
add
xor
lret
pusha
icebp
sbb
mov
loop
inc
and
push
xchg
cmp
nop
lahf
cs
mov
in
in
mov
or
and
sbb
adc
xlat
testb
inc
orb
loop
jnp
insb
xor
inc
repnz
inc
pop
inc
daa
pusha
mov
mov
pop
push
je
loopne
test
xchg
or
cmp
inc
mov
movsb
sbb
popa
xchg
or
test
adc
push
popa
shrb
fiadds
inc
mov
faddl
xchg
jge
int3
mov
xchg
fsubs
lods
pop
sub
mov
mov
add
mov
pop
push
mov
fwait
outsb
insb
push
inc
fwait
dec
push
or
xchg
negl
xlat
fsts
jbe
adcb
in
lds
movsb
bound
in
int3
pop
loop
pop
fbstp
push
cltd
jne
hlt
inc
dec
jl
inc
fisttps
jo
add
mov
daa
add
lret
leave
movsb
sbb
or
out
notl
mov
cmp
jo
or
jmp
mov
mov
dec
push
out
popa
popf
sahf
xchg
xlat
sub
mov
cmp
shrb
cli
stos
cmpsl
inc
out
rcll
in
fyl2xp1
pop
lret
xlat
mov
addr16
mov
mov
push
out
xchg
xchg
lret
adc
les
fnsave
xor
push
mov
lds
shrb
fwait
push
lret
or
add
fidivrl
movsb
call
testl
mov
sbb
pop
aad
push
sub
les
or
sbb
jmp
out
cmc
mov
bnd
repz
cli
imul
dec
ljmp
ljmp
push
sarb
loop
pop
mov
mov
or
mov
xorb
out
rorl
or
pop
pop
and
in
push
ret
dec
les
sub
dec
sbb
bound
jns
mov
hlt
loope
jbe
lret
outsl
ror
sub
or
nop
or
fcomps
pop
xor
iret
xor
movsl
mov
movsb
fnstenv
push
cltd
mov
pop
pop
clc
lret
jge
mov
jg
popa
scas
popf
sub
xchg
cmp
pop
test
insl
pop
sti
imul
aad
nop
push
sbb
add
inc
cld
dec
pop
pop
adc
push
addr16
sbb
cmp
test
jecxz
in
push
outsl
add
jle
scas
xor
pop
mov
pusha
mov
arpl
decb
jmp
jae
adc
add
rcrl
cmp
test
fdecstp
cmp
pop
leave
xchg
idiv
push
rolb
daa
and
xchg
sub
sbb
xstore-rng
cmpsl
pop
mov
inc
icebp
aad
leave
jb
test
js
test
divl
ds
neg
insb
mov
push
pop
cmpsb
xor
mov
fsubs
mov
aad
mov
add
mov
jmp
or
inc
shll
push
out
test
adc
test
xchg
popa
jns
push
dec
push
outsl
mov
mov
jo
hlt
int
inc
or
cmp
mov
xor
adc
jne
out
ret
xor
and
push
or
movsb
aaa
xchg
movsl
adc
data16
cmp
movsl
sub
xor
stos
sbb
mov
xlat
aaa
inc
sar
mov
sbb
sti
or
cs
sub
mov
jle
pop
push
rcl
xor
adc
fs
mov
push
cmp
jl
xchg
pop
mov
mov
jbe
xchg
adc
rclb
lcall
push
sahf
fisubl
popf
loope
lcall
push
dec
fwait
cli
pop
stos
pop
sti
nop
or
popa
jns
cli
mov
leave
mulb
xor
lret
imul
sbbl
push
push
xor
in
inc
add
decl
pop
ja
inc
aad
adc
popa
add
push
addr16
mov
cli
pop
or
nop
sbb
dec
rcl
mov
dec
inc
mov
pop
cmc
ja
mov
inc
mov
push
mov
jmp
cld
bswap
add
daa
in
sbb
push
or
jns,pn
xchg
fistl
or
imul
adc
sar
je
or
scas
push
fldcw
sbb
cltd
lds
inc
int3
imul
in
mov
imul
jge
std
std
into
js
cs
inc
mov
lds
shl
mov
or
mov
fiaddl
inc
cmp
int
fimuls
sbbb
sbb
cmpl
sahf
xchg
sbb
fidivl
lret
pushf
push
or
add
add
dec
dec
push
lods
mov
popa
cmp
dec
inc
imul
loopne
std
test
pop
pop
sub
jno
mov
pop
test
stos
mov
imul
adc
dec
pop
lahf
repz
scas
dec
pop
sar
int
or
mov
notb
daa
inc
rol
dec
ljmp
cwtl
mov
and
or
add
adc
outsl
jb
inc
and
test
sub
pop
test
xlat
adc
and
scas
subb
adc
aas
mov
xor
popa
adc
lret
int3
stos
pop
mov
dec
xchg
fs
sub
cmpsb
sub
or
subb
dec
cmp
ret
push
inc
jb
mov
cltd
dec
mov
mov
xchg
sahf
jecxz
sub
add
xchg
xor
loop
ss
sarb
inc
mov
fcompl
add
repnz
popa
xor
dec
pushf
ljmp
or
test
imul
stos
jle
fucomi
sub
dec
lcall
movsb
jb
movsb
gs
and
xor
test
mov
push
xchg
cltd
mov
sub
dec
jae
pusha
mov
sub
jo
dec
clc
mov
in
mov
inc
mov
bound
rcll
aaa
mov
mov
xchg
xchg
dec
enter
out
int
popf
inc
aas
mov
and
dec
ret
sahf
jns
popa
cmp
lock
xor
ret
out
negb
iret
adc
js
scas
xor
inc
popf
repnz
push
loopne
and
dec
adc
xchg
xorl
xor
pop
pop
mov
subl
stos
sub
insl
jno
repnz
sub
jne
xchg
xor
std
add
icebp
pop
push
push
pop
popa
jecxz
mov
xchg
or
movsl
push
pop
push
call
inc
repz
cmpl
lahf
xor
inc
pushf
xchg
lods
mov
lock
cld
add
cld
mov
xor
jbe
sahf
pop
aas
rcrb
cwtl
xlat
push
testl
push
in
mov
xor
lss
mov
sub
leave
cmpsb
push
inc
mov
movsb
adc
jecxz
push
mov
mov
jbe
push
mov
dec
push
aad
int
mov
mov
mov
and
push
and
loop
fsubrl
or
and
mov
call
mov
fs
cmc
push
sbb
mov
aam
cmpsb
std
xchg
lret
lea
filds
xor
or
adc
dec
lock
push
jb
lret
pop
test
mov
movsl
cmc
mov
cld
stc
or
push
aam
daa
pop
repz
addr16
inc
mov
sbb
push
out
and
test
jp
push
movl
scas
jb
in
call
mov
std
sbbb
mov
mov
fistl
imul
nop
test
mov
mov
outsb
mov
pop
divb
ds
stc
mov
mul
icebp
dec
dec
ffree
adc
fiaddl
sub
orl
cmpsl
push
daa
mov
stos
pop
dec
roll
sti
xor
iret
call
cltd
sub
ljmp
xor
mov
adc
fimuls
mov
sub
add
xor
out
test
and
lret
lret
xchg
lods
adc
adc
pop
into
shll
add
mov
sbb
mov
sub
xchg
inc
int
test
xchg
addr16
add
out
add
jns
add
dec
imul
movb
ss
xchg
add
or
aaa
mov
mov
lea
shl
je
mov
or
push
ret
pop
test
pop
repz
cld
inc
gs
jae
sbb
sub
fwait
sub
int3
jmp
xchg
jge
lahf
hlt
mov
imul
and
into
sbbl
xchg
es
jl
mov
jle
pop
inc
mov
mov
cld
mov
push
outsb
cmp
cmpsl
cs
xlat
push
dec
aam
xchg
fsubrl
sub
sub
mov
inc
or
xor
push
sahf
lret
out
cmp
out
scas
mov
push
cmc
fstcw
or
aaa
jns
leave
push
notl
cmc
mov
push
and
jmp
aad
shlb
push
mov
orl
mov
test
movsl
xor
mov
test
mov
movsb
aaa
jne
add
push
addr16
ljmp
and
lret
or
popa
enter
pop
sub
ds
cli
mov
xchg
inc
xor
sbb
add
mov
mov
mov
lahf
aad
jb
repz
sub
imul
insl
loopne
add
mov
and
xorl
lahf
mov
repnz
loopne
bound
push
dec
jb
imul
push
out
loope
dec
jo
leave
cmp
adc
sbb
cmpsb
in
popa
or
xor
aad
cld
test
int3
scas
repz
repz
in
dec
jno
mov
or
xor
sub
inc
adc
pop
pop
push
mov
push
adc
jne
mov
dec
xor
cmp
jp
fcoml
sti
and
xchg
mov
push
push
aaa
or
ret
int
test
inc
enter
xchg
stos
inc
and
and
les
cwtl
pop
xchg
push
not
aad
pop
lds
lret
fsubl
push
enter
outsb
lea
fstpt
es
dec
arpl
scas
mov
push
xchg
mov
xchg
cli
mov
outsl
inc
cwtl
dec
and
aam
adc
fsubs
lret
push
push
out
jge
xor
push
fisubrl
or
mov
bswap
inc
push
cmc
push
pop
push
pop
jno
lock
cmpsl
or
lcall
repnz
out
or
push
add
adc
mov
pop
sti
lds
in
or
aad
cmp
repz
mov
and
sub
cli
sbb
lock
xor
xlat
pop
fsubr
dec
add
push
sub
aad
dec
pop
jns
mov
dec
mov
fldenv
mov
xchg
or
xchg
ret
aad
xor
fisubrl
pop
jge
dec
pop
lods
imul
xchg
adc
mov
les
add
mov
adc
test
outsb
dec
loope
std
repz
lds
hlt
outsl
negb
adc
or
fwait
das
ficompl
and
jp
and
lahf
xchg
xor
insb
cli
hlt
pushw
adc
mov
out
nop
fst
fsub
sarb
and
arpl
or
enter
test
aas
addr16
popf
jle
stos
adc
adc
jns
or
jecxz
in
xor
mov
xchg
or
lret
and
or
rcl
pop
fisubl
std
outsb
ret
inc
ja
mov
cmp
aaa
mov
mov
mov
in
ja
fistl
mov
mov
push
rorb
jns
cmp
mov
cmp
and
sub
pop
push
dec
std
pop
aas
repz
outsl
mov
int
lahf
dec
xor
test
lods
pop
sbb
stc
cmc
jb
xor
jmp
popf
jae
imulb
sub
pop
movsl
int
push
pop
adc
adc
insl
out
out
sbb
dec
dec
cld
mov
adc
lahf
jne
jb
cmpsl
mov
xorl
xor
lcall
pop
test
push
sbb
jno
into
nop
arpl
movsb
sbb
paddsb
mov
sbb
ja
repnz
pusha
out
cmp
out
or
mov
inc
jle
adc
out
loope
jne
xor
mov
mov
out
dec
test
enter
int3
cltd
loopne,pn
dec
nop
ljmp
repnz
out
lret
and
inc
jle
mov
mov
sbb
dec
imul
mov
clc
das
jbe
sti
add
push
mov
xchg
add
daa
mov
popa
mov
stc
cmpsl
jecxz
xor
sub
icebp
in
xor
push
test
xor
mov
pop
test
test
cld
sub
mov
test
rolb
insb
cmp
add
mov
sbbb
adc
sub
and
cmp
hlt
pop
inc
out
xor
or
out
inc
and
mov
fldcw
cmpb
xchg
pop
pop
cwtl
sbb
lods
mov
sub
into
fdiv
add
fsub
push
arpl
adcl
ret
ss
loope
xor
test
pop
jnp
sbb
hlt
fsubrp
movsb
fldenv
loop
aad
enter
fildl
jp
sti
sarl
lea
adc
sbb
jle
or
insb
daa
adc
mov
jmp
cmp
and
xchg
enter
fcoml
imul
test
std
scas
adc
fldt
iret
shrb
cmp
xchg
sub
pusha
lods
pushf
adc
xchg
xor
jge
xor
dec
dec
cltd
dec
add
lock
inc
mov
mov
das
push
shl
jnp
aas
pop
dec
xor
nop
shlb
sarl
mov
jl
inc
push
jns
cmp
sub
add
adc
xchg
rol
adc
into
mov
mov
adc
lds
out
imul
ret
stos
jecxz
sub
in
aad
jbe
int3
mov
addl
mov
daa
movsl
mov
lea
mov
sbb
gs
or
mov
xchg
and
loop
mov
xor
sbb
xchg
stos
jle
adc
pop
popa
dec
lret
mov
adc
cmp
jg
clc
jmp
fnstsw
mov
jp
pop
enter
ret
push
lds
movsb
ret
lds
shll
mov
cmp
cs
jns
add
pop
movsb
pop
xchg
loopne
inc
add
xchg
adc
xchg
rorb
cld
pushf
lcall
push
imul
ljmp
or
cmpsl
fisttpll
aad
mov
mov
shlb
andl
leave
fldl
add
pushf
dec
lock
xor
ja
mov
les
popa
xchg
pop
xor
cmpsb
movsb
cmp
test
ds
sub
inc
cmpsl
outsl
mov
rcll
adc
loopne
lds
xor
mov
push
jge
cmp
pushf
jne
push
push
lods
add
lea
lcall
bound
divl
faddl
push
popa
jno
cld
sbb
push
aam
push
fwait
aas
out
icebp
imulb
aaa
mov
loope
sbb
cmp
mov
fmull
pop
inc
jne
inc
jo
stc
cmc
divl
jo
hlt
imul
xchg
push
pop
xchg
jp
fiadds
inc
cmp
jb
imul
ret
lds
adc
mov
and
lahf
cmp
pop
pop
lcall
mov
add
add
pop
loop
mov
inc
add
scas
inc
js
gs
mov
rclb
sbb
popa
inc
pusha
arpl
sub
mov
jg
pop
push
pop
jl
push
xchg
mov
cmp
sub
mov
daa
inc
test
dec
scas
testb
mov
mov
sbb
xchg
mov
sbb
les
mov
scas
xor
xor
movsl
inc
push
jecxz
inc
xchg
int
mov
sbb
xor
push
push
inc
fidivrs
adc
loope
cmp
add
inc
faddl
in
xchg
mov
addr16
ret
inc
jmp
imul
cmp
add
cmpl
jl
jmp
scas
jae
mov
xor
clc
xchg
das
adc
jg
out
in
push
test
mov
adc
or
cmc
inc
jnp
call
cmc
mov
mov
fxch
lds
cmpsl
fld
add
test
loope
test
jnp
rcll
pushw
int
mov
loopne,pt
insl
mov
add
add
test
jp
cmc
lds
xchg
adc
mov
jmp
jg
sub
inc
or
cs
jge
ret
ds
mov
lcall
data16
jmp
out
sbb
push
int
scas
xchg
out
xchg
pusha
add
lret
addr16
call
xor
mov
cs
push
xchg
cmpsl
pop
jne
pop
sbb
popl
test
cmp
in
lods
cmp
pop
pop
cmpsl
fs
push
sub
fcmovnu
sbb
mov
pop
add
insb
test
leave
shlb
out
mov
xchg
jle
sahf
push
call
mov
fcmovnbe
pop
ds
lahf
loopne
popa
clc
pop
addr16
xor
cmpsb
sub
jnp
pop
lret
ss
dec
shrb
aam
stos
sti
xchg
hlt
pop
jmp
ret
daa
fnsave
data16
cmpsl
adc
inc
iret
xorl
sbb
das
nop
xchg
repz
push
gs
lea
lods
ss
xchg
cmp
push
dec
es
adc
in
pushf
or
jmp
and
inc
cltd
cmp
push
xchg
and
aas
cmpsb
mov
stos
je
into
push
mov
insb
std
dec
and
roll
jb
in
and
cmpsb
ljmp
adc
dec
nop
push
mov
dec
out
push
inc
xor
sarl
mov
pop
xor
subb
out
push
adc
add
les
imul
jbe
sbb
push
clc
imul
nop
std
mov
adc
push
ljmp
pop
jge
pop
ss
cwtl
repnz
push
loopne
seto
xchg
cmp
clc
les
addl
sbb
shrl
fsubr
in
scas
out
dec
push
sbb
dec
fisubl
cmp
jae
mov
je
and
xor
mov
daa
rorl
fdivl
ficoml
inc
nop
jmp
bnd
jg
mov
mov
mov
xchg
stos
lock
push
in
lret
mov
adc
cmp
xlat
pop
xor
sub
scas
jnp
fucomi
adc
inc
leave
dec
mov
repz
jns
enter
sbb
insb
in
xor
mov
lds
dec
inc
and
adc
jmp
fwait
and
jp
rep
sti
add
mov
xchg
hlt
ljmp
xchg
es
mov
xchg
and
fs
cmpsb
pop
cli
jle
dec
inc
lahf
adcb
test
jb
adc
mov
xor
dec
lret
cmpsl
sti
pop
int
cmp
scas
pop
out
xlat
repnz
xchg
fisubl
jle
xchg
pop
shrl
push
in
mov
popa
outsb
cltd
adc
or
imulb
data16
mov
push
or
inc
mov
xor
adc
sbb
fisttpll
enter
ja
cmpsb
fisttpll
ror
data16
pop
cmpsb
push
jb
gs
leave
insl
jb
xchg
dec
repnz
inc
sti
add
out
pop
push
cmp
xchg
sub
sub
iret
push
addr16
and
loopne
jle
out
sub
cli
jnp
rcll
stc
pop
ror
mov
mov
ror
jb
fadd
xchg
sub
pop
les
sbb
mov
sub
xchg
imul
es
int3
mov
sahf
cmpsb
push
mov
cmc
or
mov
sbb
sub
gs
xchg
fcoms
lods
cmpsl
inc
lods
cmp
inc
or
xchg
test
jnp
std
fucom
mov
rcrl
mov
test
add
out
roll
mov
mov
ret
orb
cltd
push
notl
xchg
mov
sub
cli
incl
xchg
fcmovbe
fwait
pop
sbb
or
and
push
in
push
jl
jl
ja
popa
ja
out
and
jnp
popa
pushf
add
jge
xchg
mov
imul
hlt
cmp
cmpsl
mov
xchg
shll
adc
cmp
add
shlb
in
out
mov
adc
sbb
aas
in
popa
loope
cltd
fs
adc
mov
jg
dec
push
out
test
pop
cwtl
sub
xchg
pop
pushf
outsb
xchg
leave
dec
loope
out
sbb
int3
std
fildll
fcompl
jb
imul
mov
inc
xchg
adc
jno
rorl
jo
and
test
xor
xchg
xchg
inc
out
dec
fstpt
sub
add
movw
popa
stc
xchg
mov
push
sub
cmp
jb
std
aam
popf
lret
cmc
mov
pop
scas
dec
mov
xorb
mov
ljmp
pop
lcall
jbe
jne
dec
repnz
and
mov
inc
lods
inc
stos
sub
mov
push
addb
arpl
bound
push
dec
repnz
xor
inc
xor
xchg
dec
aaa
mov
mov
sbb
push
xchg
rcrb
add
test
mov
cmp
ror
xchg
stos
inc
rclb
inc
push
sbb
imul
mov
scas
adc
xchg
test
test
xlat
aaa
addb
insb
jge
dec
mov
mov
or
sub
lcall
sub
xchg
sbb
add
in
andb
cs
push
data16
rolb
jle
loopne
popf
mov
shll
adc
push
sub
xchg
shlb
inc
pusha
mov
aaa
pushf
in
dec
jle
inc
mov
or
or
sub
inc
dec
mov
je
inc
dec
push
fwait
cmp
xchg
in
cmpsl
pushf
pop
mov
inc
push
jle
push
xchg
push
and
rcrb
test
push
dec
push
pop
push
push
pop
into
mov
cmp
fidivs
push
hlt
and
clc
mov
jb
data16
mov
sahf
sbb
outsl
icebp
lret
test
icebp
mov
push
rcrl
lcall
and
mov
fs
inc
inc
les
cmpl
add
cmp
jno
js
outsb
mov
lea
add
sbb
lods
stc
mov
adc
xor
jns
adc
pop
data16
jo
ret
dec
lcall
inc
push
and
scas
hlt
inc
add
movsb
repnz
imul
nop
push
aad
cmp
mov
xchg
dec
cmp
add
addr16
pop
sahf
sub
jo
ja
pop
js
lods
pop
mov
addr16
mov
cmovo
mov
stc
mov
mov
cmp
inc
loope
cmp
scas
std
xor
mov
mov
sub
in
sbb
inc
push
sub
test
pop
dec
or
push
fildl
aam
imul
pop
mov
and
test
scas
cmpsb
pusha
pushf
cmp
ret
xor
xor
jns
scas
jge
push
inc
fsubl
mov
lock
adc
lret
lock
jecxz
arpl
stc
push
fsubr
add
in
dec
mov
fnsave
inc
jle
gs
pop
mov
xlat
data16
fstpt
jne
out
mov
aaa
jp
imul
aas
inc
loop
scas
push
int
int3
pop
jb
inc
lods
lret
dec
dec
sub
mov
mov
mov
xchg
clc
mov
jle
fs
and
and
jge
xchg
into
mov
test
fwait
pushf
ret
mov
push
pop
xor
inc
test
jno
repnz
bound
fcmove
push
lock
push
iret
sub
movsb
aam
inc
fmull
je
movsb
push
mov
insb
std
popa
jge
lret
sbb
jmp
pop
pusha
cs
mov
push
loope
pop
and
xor
inc
add
ret
outsl
out
mov
or
ficoml
add
ret
mov
lock
mov
mov
cmp
pop
xor
jno,pt
sub
lcall
pop
fcmovb
push
dec
mov
outsl
push
shrb
xchg
fldl
jns
or
outsl
mov
fldcw
jl
inc
dec
mov
or
or
sbb
test
cli
fidivrl
into
fmul
test
clc
pop
lret
or
inc
fmuls
cmp
pop
or
push
xchg
push
push
jg
fbstp
or
dec
adc
cli
ja
pop
push
adc
insl
add
and
mov
push
pop
int3
jecxz
aas
nop
pop
psrlw
test
inc
sarl
and
addr16
mov
dec
lcall
insl
xor
push
insb
adc
repnz
add
pushf
pop
xor
mov
int3
in
push
jg
sbb
call
in
bound
pop
daa
add
mov
ror
or
or
ss
repz
dec
mov
stc
inc
bound
es
jb
stos
inc
out
inc
dec
dec
std
in
xchg
pop
mov
arpl
add
push
mov
movsb
xchg
mov
fwait
data16
fsubl
inc
jb
fxch
push
std
leave
push
xchg
jle
push
xchg
out
test
and
jne
jns
imul
pushf
cs
ss
in
aas
test
xor
lea
pop
in
dec
pop
out
lret
cmp
jle
pop
scas
dec
out
in
ja
cmp
pop
dec
push
mov
aam
mov
sub
sbb
jne
out
jo
xor
lahf
pop
loopne
inc
pop
mov
xchg
mov
and
pop
lret
pop
mov
das
lods
out
mov
mov
lahf
sahf
sbb
adc
jbe
adc
gs
or
push
js
test
popa
ret
cmp
dec
mov
outsb
repz
push
cmpsl
rorb
jb
je
sub
inc
mov
add
ja
jno
pop
out
jmp
mov
mov
jo
sbb
add
jae
arpl
and
pushf
xchg
shlb
lds
add
pushf
repz
lahf
popa
or
loope
or
mov
frstor
mov
clc
icebp
sbb
xchg
divb
fwait
cmp
xchg
lcall
popf
adc
jae
cmp
bound
fnsave
out
leave
pop
pop
jns
insb
hlt
and
rolb
jg
mov
cmp
adc
insb
cs
std
ret
data16
scas
push
jl
jecxz
xchg
cmc
cmpsb
xorb
sub
loopne
or
mov
cwtl
bound
push
push
xchg
dec
fwait
cmp
ror
bound
insb
mov
ret
cli
popa
out
inc
xchg
mov
outsb
or
dec
lds
addr16
lock
inc
lds
cmp
loopne
arpl
sub
ret
sbb
mov
mov
xor
aad
leave
inc
popf
mov
inc
xlat
gs
rclb
cld
aaa
cmp
mov
daa
ret
mov
loope
sar
mov
shll
das
gs
mov
jnp
mov
scas
es
loope
ds
pop
sub
and
xor
dec
pop
add
js
or
lods
sbb
rorb
int3
xor
or
xorb
scas
push
sarb
cmp
lcall
xor
xor
xchg
call
cmpsl
adcl
add
addr16
lock
mov
cmp
jno
roll
lret
xor
js
mov
aas
xlat
cmc
push
iret
es
mov
push
inc
test
dec
fldt
pop
or
adc
shrb
jns
adc
mov
inc
xor
or
stos
lea
push
jecxz
xor
movb
fidivrs
nop
pop
bound
sub
inc
or
pop
out
loop
sahf
loop
cmp
push
loope
int
test
ds
add
ss
imul
inc
jl
mov
in
loope
mov
scas
lahf
in
stc
or
cmp
arpl
fbstp
pushf
sub
popa
add
push
fildl
ds
movb
adc
or
loop
ds
daa
in
in
orb
pusha
fst
aam
fadds
loopne
insl
pop
and
or
dec
lock
xlat
std
xchg
testl
mov
adc
jl
test
sbb
rcr
xorps
je
hlt
sahf
call
fisubl
fnstenv
jo
mov
and
xadd
fwait
adc
or
fdivs
call
mov
es
addr16
pushf
inc
add
or
jo
xchg
and
jg
or
js
or
mov
push
xchg
add
inc
fwait
popf
or
adc
xor
aaa
mov
rcrb
std
xor
cmpsb
and
sub
jmp
dec
adc
jno
pop
sbb
push
inc
or
mov
xor
xor
mov
sahf
fisttpll
inc
lcall
dec
data16
mov
pop
adc
cmpb
jne
pop
arpl
adc
sbbb
dec
aad
xor
lret
sar
and
movsb
pop
mov
or
les
push
cmc
jecxz
xchg
sbb
andl
insl
daa
sbb
mov
lods
sarl
adc
mov
int3
mov
push
cwtl
sbb
shr
sub
mov
mov
mov
push
pop
icebp
into
fs
push
into
cwtl
xchg
xor
stc
adcl
add
dec
shll
lahf
add
cmc
les
out
adc
adc
cmp
xlat
inc
sub
adc
stos
sub
daa
and
out
push
add
cmpsb
push
cmpsb
iret
mov
pusha
movsb
repnz
les
js
daa
push
adc
mov
cld
xor
push
mov
jb
cmp
mov
inc
scas
dec
fidivrl
cmpsb
or
lret
mov
js
mov
mov
xor
inc
sbb
lds
sti
add
mov
adc
lret
pop
adc
aas
call
gs
mov
mov
andb
mov
xchg
stos
cmp
sbb
sbb
jns
das
or
dec
jg
mov
sub
outsl
pop
jp
cmpsl
stos
sbb
lds
and
fbstp
inc
movsb
dec
cmp
call
cmp
ficoml
imul
sahf
lret
outsb
loopne
in
jp
jg
ret
sti
stos
xlat
cltd
sbb
out
hlt
decl
jmp
and
aaa
xchg
and
mov
cmpsb
ja
in
jmp
mov
nop
call
fldcw
add
dec
xchg
or
out
adc
dec
imul
aad
shl
or
push
adc
and
pusha
push
xor
sub
push
pop
inc
pushf
outsl
adc
dec
dec
test
adc
mov
icebp
fisubrs
mov
cs
xor
test
filds
jge
nop
adc
hlt
fsubs
jecxz
bound
mov
neg
xchg
ficomps
inc
sbb
icebp
jmp
fidivl
test
test
jne
or
mov
sub
xor
ss
jp
int3
insl
jbe
fbstp
nop
pop
jecxz
adc
fstpl
gs
ss
gs
cmp
adc
lock
pop
sub
mov
xchg
clc
pop
ficompl
lahf
aad
or
mov
cmp
repnz
adc
or
in
inc
in
xor
popa
xchg
fists
xor
shlb
xchg
push
cld
fsubrl
adc
jb
jns
cli
mov
pop
lods
add
cmc
std
sbb
sbb
repz
mov
or
repz
cmp
sbb
bound
jg
mov
lods
negb
sub
andb
loop
imul
movsb
in
or
push
sub
add
xor
adc
repnz
sbb
repz
mov
mov
ljmp
mov
popf
dec
jle
pushf
dec
in
push
push
sar
repz
js
outsl
xchg
pushf
mov
imul
jg
xor
scas
enter
cmpsl
icebp
pop
xchg
pop
mov
mov
mov
roll
mov
mov
adc
leave
mov
imul
sbb
mov
notb
idivl
mov
fstps
test
in
xchg
push
sub
add
imul
xor
insl
dec
adc
pop
pop
addr16
mov
and
test
shll
mov
inc
loope
je
push
mov
sti
imul
mov
mov
xor
rol
xchg
xor
lret
xchg
data16
hlt
ret
hlt
xor
cmp
movsb
ds
aad
or
pop
js
insb
xchg
cltd
insb
jg
pop
push
jb
out
and
xchg
jae
or
lods
xchg
dec
ss
gs
lods
iret
xor
fstpt
dec
int3
push
push
inc
xchg
pushf
lods
sbb
fdivr
or
mov
xchg
jo
push
xor
movb
int3
andl
inc
sub
xchg
pop
dec
lea
repz
adc
sbb
mov
sub
adc
cmp
mov
sti
test
fisubrl
mov
inc
push
inc
sarb
mov
shrb
int
or
fstpt
jno
clc
xchg
sbb
gs
dec
ss
sbb
cld
mov
dec
inc
scas
icebp
inc
pop
fs
loope
sbb
inc
movsl
stc
mov
aam
in
jbe
into
cmc
cmpsl
pop
and
jb
imul
faddl
mulb
push
push
popa
mov
mov
shlb
dec
and
inc
test
fidivl
pop
jae
sahf
adc
int3
aaa
jb
loopne
fildl
inc
sbb
test
or
fdecstp
push
sub
out
pop
push
movsb
pop
push
xchg
movsb
lea
add
out
jo
jecxz
int3
decl
sbb
stc
sub
insl
ret
mov
add
push
mov
jb
adc
or
push
push
test
mov
mov
fwait
inc
leave
stc
push
mov
idivb
pop
adc
xor
iret
popa
outsb
les
and
cwtl
outsb
push
addr16
mov
jne
loopne
loop
mov
adc
lods
sub
add
mov
push
addr16
inc
sub
xchg
inc
or
inc
push
add
movsb
jl
xchg
lret
mov
ljmp
shlb
mov
cmp
mov
leave
sahf
aam
sbb
int
inc
mov
jns
iret
adc
inc
sub
das
mov
daa
arpl
inc
jo
sub
mov
cld
sti
xorl
dec
outsl
ficomps
dec
adc
mov
pop
addr16
sub
or
jns
xchg
sbbb
das
mov
cwtl
je
mov
push
mov
loopne
mov
cmp
push
sar
ds
std
stc
ja
dec
cmpsb
jp
lock
inc
mov
dec
filds
pop
mov
xchg
shr
std
ret
or
lahf
sbb
mov
repz
out
scas
sarb
clc
mov
xchg
lahf
imul
sub
adc
cwtl
and
repnz
push
out
cmpsb
inc
pop
hlt
push
aam
in
cld
mov
aam
movsb
adc
inc
lcall
xchg
sti
not
int3
dec
mov
add
loop
push
lcall
out
adc
aam
jl
jecxz
test
repz
push
mov
push
inc
mov
push
insl
adc
and
adc
je,pt
push
outsb
inc
cmp
hlt
push
or
cld
or
cmpsb
adc
xchg
push
and
mov
dec
sub
out
pop
mov
jl
push
popf
jno
aad
in
test
inc
in
aam
fs
cmc
loop
inc
enter
lods
insb
xor
jb
jle
punpckhwd
into
push
outsb
sub
push
or
lret
int
ret
mov
push
mov
iret
lods
push
loope
ja
mov
iret
sub
daa
es
dec
sub
push
sbb
mov
push
mov
inc
cmpsb
addl
fdiv
ljmp
out
and
imul
dec
in
dec
pop
pop
addr16
aas
xchg
clc
mov
repnz
mov
xchg
push
xor
or
or
xchg
es
loope
fstps
dec
sub
jmp
pushl
push
out
cld
inc
rolb
aam
mov
jl
cltd
nop
adc
test
mov
cmp
sbb
and
pusha
cmc
inc
cmp
push
xor
fmuls
aam
in
rcll
test
xchg
adc
dec
xchg
pop
decl
popf
push
sti
das
mov
out
mov
or
leave
sub
lock
mov
fneni(8087
cmp
mov
sub
mov
call
mov
out
scas
nop
sbb
ja
filds
adc
mov
inc
test
inc
dec
jnp
gs
push
mov
mov
push
cmp
mov
lods
mov
movsb
pop
adc
and
mov
mul
or
into
in
or
loop
xor
in
push
sbb
xor
inc
popf
sbb
iret
inc
pop
clc
pop
movsb
cmp
or
shl
lea
gs
cmp
cwtl
mov
pop
and
sub
xchg
inc
movsl
or
aam
dec
mov
jns
icebp
cld
orl
mov
scas
add
fucomip
int3
mov
in
xor
lods
xor
repz
mov
dec
idiv
data16
cld
psadbw
or
jnp
mov
das
xchg
leave
icebp
push
push
aam
xchg
loopne
xchg
test
jns
sbb
pop
dec
cmpsb
cld
xchg
push
xor
ja
jnp
repz
dec
dec
cs
cld
faddl
lret
add
int
pop
mov
jle
shlb
rcrl
and
cltd
jnp
rorb
adcb
push
mov
sub
ss
stos
sbb
test
arpl
fsubl
xchg
xchg
inc
sahf
mov
ds
rcrl
daa
enter
or
jg
adcl
enter
push
jnp
faddp
mov
mov
in
gs
mov
cmp
xchg
mov
stc
jge
ud0
fcmovbe
bound
xchg
xchg
and
repz
in
push
icebp
leave
ficoms
loop
lds
cmp
cmpsl
movb
sbb
xchg
sbb
es
and
icebp
outsb
std
jae
sub
mov
or
rolb
sub
jge
loop
lock
std
rolb
je
xor
clc
lret
push
xchg
outsl
pop
test
sti
int3
push
mov
add
push
icebp
cmp
mov
mov
inc
add
fneni(8087
inc
xchg
icebp
es
push
es
ret
xchg
mov
leave
das
push
xchg
jnp
lret
xor
and
cs
repz
jns
dec
inc
dec
ljmp
adc
inc
jns
int
pop
rorb
aad
lock
mov
dec
std
je
xor
sbb
push
aam
testb
jmp
icebp
jo
aad
dec
pop
lods
push
fwait
outsb
je
and
cmp
idivl
bound
add
xlat
hlt
pop
fstps
xor
pop
flds
jecxz
cmc
scas
rorb
insl
out
cmovbe
dec
or
or
or
ljmp
cmp
cwtl
mov
or
je
fs
xchg
sbb
jo
daa
xlat
lock
pop
gs
or
cmpsl
mov
call
testb
fwait
push
popa
sbb
call
out
mov
jp
scas
scas
imul
inc
jecxz
xchg
lea
loopne
push
push
adc
fistps
addb
add
mov
push
insb
popa
lods
mov
test
and
xchg
addl
jae
ret
ss
lret
test
mov
xor
sarb
js
mov
push
mov
mov
jnp
dec
into
lcall
mov
jecxz
pop
add
pop
mov
dec
or
loop
mov
xor
fbstp
ljmp
pushf
scas
pop
ficoms
sahf
mov
sub
xchg
xchg
inc
jg
xchg
aas
sbb
aaa
adc
jbe
rolb
mov
mov
xor
ficomps
xor
dec
lcall
mov
lahf
ficomps
das
out
xchg
lcall
loopne
fildl
dec
jo
fisttps
cld
and
sub
pop
stos
xor
cmp
pop
sbb
mov
jno
cmc
mov
dec
push
mov
ljmp
aaa
or
movsl
loopne
jns
jae
and
ljmp
loop
push
rclb
dec
cmp
mov
mov
or
popf
outsl
enter
call
mov
fists
xor
jno
in
cmpsl
pop
cmp
test
mov
push
stos
jae
lret
push
mov
bound
cmpb
repnz
jle
xor
xchg
add
aad
adcl
adc
rcl
sbb
push
adc
dec
mov
sub
mov
lcall
insl
inc
roll
xchg
jae
jae
cltd
dec
dec
xor
pop
out
push
mov
and
imul
jbe
repnz
xor
data16
add
jecxz
addr16
outsl
aaa
loope
mov
or
pop
cmp
fcmovnu
cmp
and
push
or
test
sub
adc
mov
hlt
fidivs
and
xor
jnp
dec
and
int
sbb
mov
fidivrl
jnp
stos
sub
pop
stc
xlat
movsb
xlat
adc
int
dec
add
repz
mov
int
jg
pop
fmuls
or
sub
dec
faddl
into
fs
data16
dec
rorb
in
les
jle
xchg
inc
jmp
xchg
out
into
fmul
insl
mov
ret
subl
andb
push
and
jge
add
je
fsubrp
inc
pop
cli
adcb
into
xchg
dec
pop
gs
push
ja
xchg
aam
mov
adc
mov
cmc
push
sbb
loope
sarl
or
push
jns
loope
mov
mov
cmp
dec
aad
cmp
icebp
jmp
or
mov
xor
mov
and
xchg
aas
jo
jno
mov
aad
xor
pop
out
popl
push
outsb
add
into
divb
mov
adc
in
loope
xchg
je
rcrl
and
push
lret
ret
sarl
inc
lds
scas
jecxz
icebp
icebp
hlt
and
scas
movsb
mov
pop
stos
lahf
xor
lret
sti
inc
sub
dec
popf
jmp
std
and
lods
jl
jno
mov
aas
and
push
push
loop
mov
push
dec
fidivs
aaa
dec
sbb
popf
mov
sub
add
scas
sbb
jge
icebp
mov
mov
adc
call
fcomi
xor
ds
pop
pop
mov
fadds
mov
mov
sub
fldcw
in
loope
sbb
jb
mov
jg
pop
inc
data16
or
mov
test
and
or
fldenv
lcall
mov
xor
popf
cltd
push
push
les
scas
fisttps
out
add
int3
jno
fcompl
outsb
fmulp
fcoms
emms
popf
adc
jb
xor
icebp
hlt
xor
test
out
popa
jns
xchg
mov
pop
inc
iret
dec
xor
sbb
mov
and
icebp
shll
mov
fbstp
mov
cmp
out
clc
jo
and
insb
mov
pop
rorl
adc
in
cs
pop
jl
and
pop
and
dec
add
and
xchg
lea
pop
sub
adc
push
fidivl
or
mov
sub
dec
cmp
je
cld
pop
push
in
je
and
aaa
je
cmpsb
fistl
xor
pop
roll
lahf
push
lods
incl
cmp
sahf
and
js
in
repz
cmp
call
inc
jmp
mov
mov
add
lea
mov
adc
fmuls
fwait
shlb
int3
ds
pop
xlat
xchg
xchg
mov
mov
repz
loope
iret
and
lcall
jmp
ss
in
add
pop
call
jl
icebp
cmpsb
dec
add
cmp
roll
rcrl
mov
idivl
mov
icebp
leave
int
mov
xchg
cwtl
ret
adc
lds
gs
adc
lcall
adc
or
into
rcrl
shl
into
jl
fildl
dec
icebp
and
mov
mov
jnp
push
sub
or
sti
jno
sub
jmp
mov
jb
mov
xlat
fsubrs
ss
push
xor
adc
mov
js
dec
pop
movsb
mov
inc
jae
inc
pushf
adc
inc
mov
int
add
cmc
sub
mov
sub
cmc
jg
scas
iret
and
jae
or
call
add
mov
push
or
shll
lcall
and
xchg
jp
in
sub
and
int3
sti
orb
or
xor
xor
jae
in
cmp
std
rorl
iret
andl
jno
adc
add
cmp
repnz
movsl
jl
xor
mov
or
push
cmpsl
mov
fbld
sbb
shrb
sbb
das
in
imul
push
sar
fldz
inc
les
dec
shrb
or
loop
gs
push
jne
add
fnsave
test
fs
test
fcoml
ret
leave
push
je
pop
outsb
adc
inc
or
hlt
adc
mov
push
cld
mov
sbb
scas
mov
in
fwait
dec
data16
aaa
loop
cmp
dec
push
mov
cmp
test
add
stos
sti
dec
mov
mov
iret
mov
shr
push
push
lock
sub
push
mov
test
xchg
pushf
test
popa
sbb
scas
xchg
scas
push
test
movsl
sbb
aad
xchg
lahf
dec
mov
push
addr16
shl
in
fidivs
xchg
mov
cwtl
fcomp
cmp
xlat
cmp
push
mov
ja
mov
int3
rcrl
std
icebp
aad
xchg
cmpsl
xor
test
jecxz
aas
xchg
sub
xor
rolb
rolb
jbe
jns
shrl
add
jmp
inc
dec
ja
xchg
jbe
or
ljmp
imul
fmuls
jb
mov
mov
in
add
dec
xor
mov
dec
jg
int3
scas
stos
scas
push
fldl
cmp
popf
sub
mov
insb
cmpsl
push
sub
outsb
xchg
and
sbb
pop
fcmovnb
jbe
jp
mov
mov
insl
jb
lret
dec
pop
pushf
pop
int
loop
jns
loopne
lods
cmp
in
test
xlat
sub
ja
stc
mov
imul
cs
lsl
xlat
or
loop
shlb
icebp
stc
jmp
sar
pop
cmp
lahf
dec
add
adcb
in
jns
aad
clc
push
jmp
mov
sahf
push
ja
and
mov
call
std
inc
fdivrl
mov
mov
mov
fwait
pop
loop
out
xor
ret
sub
push
or
jmp
cltd
mov
shl
adc
xchg
xchg
imul
pop
pop
lcall
les
push
insl
les
jbe
inc
cltd
bound
imul
pop
aam
adc
add
imul
insb
subl
lea
jne
test
mov
lcall
or
mov
popa
mov
sbb
mov
pop
pop
loopne
hlt
stc
daa
cmp
cltd
adc
sbb
push
sub
lods
pop
aas
jns
inc
ss
lretw
push
mov
cmp
dec
ja
mov
cmpsl
cmpb
lcall
mov
imul
mov
idivb
scas
jne
cmc
mov
loop
dec
xchg
mov
xor
pop
into
dec
ret
sub
or
or
sub
lods
add
pop
xlat
out
jl
lea
inc
sbb
lock
repnz
jp
xorb
popf
fdivrl
mov
popa
adc
sbb
cld
mov
sub
insb
mov
fmul
lods
jmp
push
jnp
adc
pop
fnsave
cltd
or
jmp
xchg
aaa
aam
stc
out
inc
jecxz
rclb
mov
ljmp
jmp
ficoml
or
xor
xor
pop
add
lods
fldenv
aas
movsl
insl
xchg
ja
push
movsl
push
pushf
mov
xor
scas
repnz
pushf
mov
xor
test
inc
push
dec
insl
add
shrl
and
pop
cmp
xchg
pop
sbb
mov
sub
jecxz
js
andl
fidivs
aaa
jno
pop
add
int3
inc
stos
mov
fisttps
movsl
and
sbb
jecxz
fldt
xor
insl
in
in
mov
gs
add
repz
cmp
mov
fsts
sub
outsl
bound
pop
pop
lret
adc
adc
jmp
cmpsb
in
mov
repz
ljmp
or
int
or
fisttps
fwait
adc
jecxz
sahf
jne
sahf
xor
cmp
es
shr
into
int3
sbb
shl
ss
jns
push
jno
out
adc
and
jo
mov
arpl
imul
push
adc
sub
jmp
sub
mov
mov
pop
test
shll
test
mov
mov
pushf
dec
mov
xor
test
lret
xchg
dec
and
repnz
xchg
jmp
mov
xchg
fildll
repnz
or
test
xor
ret
loop
dec
push
cmp
loope
xchg
out
push
subb
fcoml
clc
inc
jns
mov
fnsave
es
push
nop
adc
mov
mov
mov
jo
push
cmp
shrl
imul
push
push
sbb
lods
or
and
sahf
xchg
mov
addr16
sub
negl
dec
mov
pop
rclb
mov
jg
dec
cmpsl
data16
xor
xchg
imul
daa
in
dec
mov
jle
mov
jnp
call
into
roll
cli
aad
push
cmp
insl
xchg
fldl2e
mov
mov
dec
imul
sub
sub
lds
pop
push
jp
mov
adc
inc
add
insb
js
xbegin
shll
jecxz
fistpll
sub
movsl
popa
in
mov
leave
cmp
shl
sbb
pop
mov
dec
mov
das
in
stos
pop
mov
sbb
mov
icebp
out
push
inc
jae
outsl
and
or
and
cld
fsubrl
mov
mov
jmp
mov
lret
ret
xor
jo
out
lret
sub
and
scas
pusha
sarb
dec
in
aaa
mov
sbb
ret
mov
sub
aad
cmp
push
je
repz
mov
push
xchg
stos
fwait
loopne
repnz
lds
jb
lcall
enter
jns
test
leave
add
pop
stc
pop
mov
vandpd
addr16
fistl
mov
outsl
inc
fnstcw
push
loop
xchg
in
mov
cmpsb
jecxz
push
or
xchg
insb
imul
repnz
dec
adc
mov
pop
test
test
in
fsubl
adc
sbb
fwait
std
push
mov
jl
mov
add
js
adc
sbb
and
arpl
out
push
imull
add
test
pop
filds
not
cmp
cmp
mov
bnd
addr16
mov
fdivs
and
loop
jle
xor
dec
fildl
test
aam
xorl
aaa
sahf
call
jbe
mov
test
push
add
rol
dec
lcall
iret
cld
pop
hlt
pop
xor
fwait
iret
push
mov
stos
sub
mov
mov
sbb
fdivr
ja
fimull
or
fisttps
mov
add
jl
in
push
mov
scas
ja
test
cmp
pop
pop
and
mov
mov
pop
test
mov
xchg
xor
sahf
mov
jg
jg
cmp
nop
inc
dec
inc
js
cmp
sahf
push
sub
pop
loop
rcll
jne
mov
mov
clc
cld
mov
ljmp
insb
push
pop
jbe
pop
or
cmp
es
jp
andl
add
or
pop
mov
push
test
mov
jns
inc
je
lcall
sbb
in
adc
mov
outsb
mov
enter
ror
in
insl
fisubrs
xor
sub
sub
and
ljmp
or
mov
lahf
mov
dec
xor
lods
psraw
rcll
cwtl
andb
mov
loopne
ret
fldenv
xchg
dec
mov
mov
ret
mov
sub
ret
jnp
mov
cmp
add
dec
out
mov
adc
xchg
adc
inc
mov
out
fistpll
roll
int
ficoml
insl
xchg
adc
pop
movsb
in
xor
and
mov
or
sbbl
xchg
mov
jmp
test
clc
mov
inc
xchg
scas
scas
sub
subl
xchg
shll
mov
imul
lds
loop
insb
and
cld
cmp
adc
cmc
fisubl
inc
jnp
sub
insb
cmpsb
sbb
cmp
mov
jecxz
int3
add
or
dec
xchg
addr16
pop
repz
popf
iret
add
outsb
insb
inc
adcb
xchg
jae
xchg
xor
xchg
mov
pop
push
push
movsl
jl
cs
into
hlt
mov
clc
out
test
jmp
adc
dec
pop
aas
jle
stc
fdivrp
add
sarl
testl
movsb
push
adc
xchg
adc
js
mov
aad
in
cltd
das
sub
sbb
add
bound
sub
inc
mov
hlt
push
push
loop
cmp
in
sbb
mov
shr
outsb
sbb
push
add
xor
pop
adc
aad
int
cmp
cmpsb
push
daa
sbb
pop
out
out
push
cmp
jl
jmp
push
das
je
cmpsl
dec
mov
mov
rolb
sub
popf
lahf
sbb
fildll
lcall
jp
test
or
pop
addl
inc
adc
jnp
lret
inc
jmp
push
fidivs
movsb
cmpb
sub
enter
sbb
daa
xor
mov
test
and
repnz
mov
pop
xor
sbb
jg
or
dec
and
mov
fcmovu
scas
and
or
fsubp
sbb
in
push
loop
adc
mov
icebp
repz
arpl
push
stc
inc
mov
cmp
fimull
dec
shr
xchg
sub
or
lods
jno
xor
adc
dec
fcoml
cs
and
out
jg
mov
xor
data16
les
int
cmc
mov
mov
out
add
call
stos
xchg
mov
loope
movsl
sbb
push
lret
test
inc
sti
adc
repz
js
lahf
pop
add
sub
daa
mov
inc
in
add
push
nop
xchg
lods
daa
cmp
or
pop
mov
inc
and
pop
repz
cwtl
inc
mov
movsb
popl
je
or
and
cli
adc
dec
xor
jg
pop
shlb
pop
lods
inc
mov
inc
jo
fs
jg
xor
clc
mov
and
xor
ss
add
sbb
mov
and
push
sbb
lahf
adc
pop
xchg
mov
bnd
cmc
pop
popf
shll
jmp
cwtl
inc
xchg
sub
mov
inc
das
push
inc
sub
ja
test
or
xor
add
stos
xor
iret
std
outsb
js
lock
aad
in
adc
lahf
mov
inc
xor
add
inc
lahf
sbb
xor
mov
xchg
jnp,pt
sbb
aaa
fildll
add
lret
jnp
jae
mov
cmp
mov
repz
pop
js
cmp
cmpsl
jnp
out
and
scas
cli
jnp
push
or
sti
jne
inc
in
jmp
icebp
or
out
repnz
sub
fwait
cmp
inc
jmp
aam
int3
mov
sahf
pop
jmp
mov
mov
xchg
mov
sub
push
cltd
rcll
xchg
jns
mov
adc
and
pushf
movsl
mov
mov
pop
inc
stc
stos
das
stc
fwait
lahf
mov
lods
cwtd
jp
and
mov
mov
jo
imul
aad
and
xchg
in
mov
pop
lret
loop
pmulhuw
mov
loopne
or
cmp
jle
add
test
jge
mov
mov
popl
ret
rclb
dec
mov
mov
xor
or
or
iret
aaa
mov
or
pop
shll
in
mov
and
test
and
sub
sahf
jge
lods
mov
div
int3
and
inc
xchg
pop
cmp
push
jl
fwait
stos
int
jns
push
jl
push
pop
pop
fprem
jecxz
mov
popa
sti
lret
and
fdivrs
jns
add
flds
cmp
ja
and
ret
je
cmp
mov
out
xchg
mov
repnz
loop
adc
jmp
adc
push
in
in
dec
inc
jns
in
xchg
ljmp
stos
lahf
add
int3
pop
dec
cmp
mov
pusha
call
sub
adcb
out
scas
or
or
mov
push
inc
mov
cld
sbb
xchg
stos
test
mov
mov
fdivrl
inc
cmc
test
or
ret
cmp
popf
dec
out
xchg
adc
outsb
dec
sti
jecxz
stos
pushf
push
and
add
cmp
aam
jmp
xor
or
xor
sub
dec
outsl
ret
jno
lods
dec
std
sbb
shl
daa
mov
sub
call
push
stos
pop
inc
pop
xchg
cmpsb
xchg
jo
lods
adc
sub
xchg
mov
ret
lret
jle
push
pop
jo
or
cmc
movsl
xor
adc
sahf
in
inc
pop
out
jo
cmp
jnp
aas
add
mov
push
repz
imul
and
sahf
xchg
rol
inc
xchg
pusha
cmp
inc
fldl
fnstenv
mov
cwtl
out
push
movsl
icebp
mov
add
cs
pop
incl
not
mov
or
cmc
mov
call
lock
inc
subl
sahf
in
push
mov
leave
lods
or
cmp
fucomi
sarl
outsb
mov
daa
cld
mov
inc
pusha
mov
cmp
into
xor
pushf
and
xor
sub
mov
dec
or
xchg
loopne
mov
mov
stos
cwtl
fbstp
test
mov
movsb
pop
out
out
scas
faddp
movsb
hlt
test
pop
std
jge
xlat
and
sub
jge
jecxz
jne
inc
mov
ss
dec
in
movsl
adc
aad
mov
lret
fcoms
push
pop
lret
xchg
inc
jb
ficomps
jl
int3
in
push
movsl
push
das
filds
ficompl
sub
pop
mov
arpl
pop
jle
mov
inc
xor
repz
dec
and
leave
divl
fsubs
sbb
add
xor
cmp
adc
adc
pop
pop
lahf
jp
cmp
ficoml
xrelease
mov
inc
sbb
stos
jne
cmpsb
dec
push
xchg
push
fs
into
int
ret
ljmp
cld
hlt
mov
mov
mov
jae
insb
cmp
and
xor
sub
pop
jle
and
popf
rcll
sub
push
push
mov
ds
jb
jle
pop
je
push
ljmp
xchg
push
inc
ret
sub
push
sti
test
sub
sub
in
mov
cmp
orl
fnsetpm(287
int3
fstps
sahf
es
ficompl
pop
lret
dec
cwtl
jo
push
cld
cld
mov
cmc
into
mov
clc
xor
inc
pop
popa
jl
mov
add
mov
imul
mov
mov
addr16
int
mov
test
dec
pop
fwait
cwtl
cmpsb
dec
add
xchg
fistps
cli
std
test
mov
xchg
jmp
aas
inc
dec
loope
mov
jle
test
sbb
test
cmpsb
lcall
cmp
ror
xlat
loop
jecxz
add
mov
jl
jno
and
push
aam
lret
sbb
add
in
mov
xchg
jmp
xchg
lods
cltd
mov
inc
lahf
adc
inc
inc
mov
inc
add
les
shrl
adc
lds
dec
jno
test
cmp
adc
xor
dec
cmpsl
imul
int3
mov
leave
xchg
cmpsl
inc
push
jns
mov
popf
les
das
cmp
ffree
pop
leave
popf
lods
inc
xor
out
cld
push
jb
fnstenv
into
pushf
gs
jp
int
pop
and
xor
or
int
pop
ja
popa
test
dec
add
sub
insb
iret
jmp
iret
push
mov
adc
xor
push
xchg
cltd
sahf
xchg
inc
sub
lret
jg
mov
pop
imul
push
lods
shr
mov
or
cmpsl
lea
xorl
mov
dec
movsb
cs
inc
add
js
mov
mov
mov
je
or
int3
xor
xor
test
inc
xor
xchg
and
mov
ficoms
push
jne
sbb
xor
lcall
mov
test
lods
je
push
mull
push
pop
pop
imul
sarl
xchg
mov
inc
popf
lcall
mov
idivb
mull
jne
dec
push
ja
xor
and
dec
cmp
mov
out
push
pop
shll
cld
xchg
cmpl
data16
out
jbe
xchg
fsin
cmp
lods
dec
or
subb
rcl
and
rorl
dec
and
daa
clc
inc
fwait
int
iret
test
stos
ds
add
loop
bound
pop
pop
rolb
jp
push
cmp
icebp
pushf
dec
insb
jo
mov
xor
arpl
lahf
outsb
imul
stos
cmp
pop
sub
sub
imul
ljmp
add
push
popa
aad
push
jae
pop
push
call
mov
insl
push
pushf
scas
or
push
xchg
imul
or
jcxz
xchg
ja
cmp
lea
jns
sub
fdivs
ja
rorl
xchg
out
dec
cli
cwtl
dec
jne
jge
push
xorb
jmp
xor
sbb
jecxz
xor
or
add
ret
cli
adc
or
clc
mov
jns
addr16
cli
push
in
imul
je
fcomi
cmp
scas
xor
shrb
scas
pushf
cs
mov
ja
cmpsl
std
xchg
pop
jge
stos
add
jno
shlb
into
or
rcrb
shrb
push
iret
fiadds
jge
test
mov
fistpll
push
out
mov
outsl
xchg
fsubrs
rclb
imul
idivb
imul
pusha
div
cli
sbb
outsb
and
pop
not
clc
xchg
andl
adc
sub
jecxz
pop
mov
arpl
xor
mov
mov
loope
sbb
inc
cmp
xchg
test
test
fmuls
cltd
jo
cmpb
and
lret
sahf
ss
scas
inc
dec
stos
gs
lds
mov
mov
fiaddl
addr16
test
sub
push
mov
push
pop
adc
das
arpl
push
sub
push
ret
or
dec
xchg
xor
dec
dec
inc
or
push
popf
fs
in
xchg
ljmp
cwtl
insb
scas
jg
pusha
mov
in
push
stos
leave
sbb
mov
cli
and
sub
ds
sub
cmp
popa
dec
mulb
sbb
das
sub
es
insb
sbb
lahf
in
cwtl
push
sub
adc
mov
and
mov
or
adc
add
inc
mov
or
std
lods
xchg
inc
lock
xchg
xchg
and
sub
adc
jbe
inc
test
inc
dec
xor
addr16
pusha
pop
xor
dec
imul
adcb
incb
ret
xchg
lea
xor
and
lea
or
popf
call
push
push
jo
lcall
cld
jl
ret
mov
jbe
loope
pop
xchg
push
outsb
out
inc
or
inc
sbb
jmp
mov
pop
test
jb
ret
fs
lods
into
jo
inc
cmc
subb
xor
enter
gs
pop
lock
cmp
int3
in
cmpsb
enter
sarb
lock
and
adc
cmp
jne
pop
push
fs
mov
addr16
cmc
rcrl
jg
ror
xor
mov
and
and
inc
mov
cmp
lea
and
sbb
subb
cmp
aas
rorl
scas
or
push
add
ficoml
pop
adc
movsl
inc
xor
inc
lods
aaa
fidivrl
or
cmpsb
scas
mov
in
test
cwtl
mov
pop
jo
dec
mov
mov
cmpsl
in
insl
je
rorb
push
push
imul
xchg
jnp
mov
mov
mov
imul
inc
xchg
adc
icebp
leave
shlb
ljmp
and
es
cmp
sub
or
test
adc
lea
fldt
or
stos
cmp
jp
push
push
jmp
xor
xor
fs
adc
mov
flds
mov
xor
ret
loop
jp
xor
jno
daa
mov
fstpl
call
in
gs
or
fsubrs
aam
shrl
in
repnz
mov
inc
xor
dec
or
sub
movsl
daa
rcll
lret
push
xchg
std
xlat
cmc
mov
adc
jle
cltd
jle
fists
fsubr
push
pop
lcall
lret
xor
test
or
test
cmp
mov
mov
and
jl
push
gs
xor
push
test
pop
test
in
push
mov
sbb
cwtl
ret
mov
mov
mov
jecxz
pop
shl
clc
jns
dec
xor
add
push
cmp
jns
call
loopne
fadd
push
push
hlt
stos
sub
mov
adc
mov
outsl
scas
jmp
adc
pop
out
mov
adc
xor
mov
mov
cmp
sub
bound
pushf
fs
and
jbe
movsb
icebp
movsl
or
and
xchg
loope
jns
or
push
je
inc
mov
and
lock
inc
test
sbb
je
mov
in
sub
cwtl
fdiv
dec
pop
call
in
loopne
fstpl
mov
fisttpll
xchg
mov
dec
notb
mov
sbb
pop
or
pop
xchg
mov
ss
in
sub
mov
les
aad
mov
push
hlt
xchg
les
push
add
sub
imul
pop
adc
popf
je
cli
stc
dec
or
pop
lret
pop
pop
adc
and
pop
push
cltd
jo
pop
in
into
stc
and
dec
out
xlat
xchg
mul
mov
sbb
jecxz
push
sbb
ret
sahf
orb
push
ja
or
ss
popa
cmp
ret
xchg
or
adc
sub
mov
jl
adc
pop
outsl
out
scas
outsl
iret
ljmp
adc
ljmp
push
test
lea
pop
mov
mov
cs
and
pop
fwait
mov
mov
dec
xor
pushf
lock
xor
or
in
lods
dec
and
insl
jmp
mov
aam
shl
in
adc
ss
fs
sbb
sbb
inc
sbb
rolb
and
mov
cmp
data16
add
xor
orb
fstpl
push
pop
mov
cmp
pusha
sub
aad
or
pop
pop
test
cmp
mov
or
mov
cli
repnz
ds
in
push
dec
stc
cmp
rorl
addl
testb
leavew
jnp
jg
pop
fmuls
add
and
adc
out
xlat
push
xor
pop
call
jl
sti
mov
push
insl
dec
test
push
xor
lahf
clc
xor
push
pop
fisubl
xchg
cmp
ljmp
mov
hlt
imul
xchg
dec
ret
push
scas
test
mov
push
mulb
inc
and
dec
in
int
xor
xchg
cld
test
gs
xchg
aad
mov
lret
mov
mov
lret
xorb
btc
mov
test
mov
lret
fsts
push
outsb
push
sub
lea
mov
or
outsl
xor
sbb
cmp
sbb
loope
lods
add
nop
push
loopne
jno
je
int
fs
incb
pop
push
mov
test
lret
pusha
in
sub
or
jmp
iret
xor
xchg
and
xchg
push
or
jecxz
gs
dec
ficoms
and
and
adc
insl
mov
add
mov
or
mov
jl
pop
imul
fsubl
add
push
jbe
sub
fldcw
mov
jo
sbb
jnp
cmp
adc
push
lcall
mov
sarb
xchg
push
fdivs
mov
ror
push
pop
jp
fmull
mov
jmp
sub
fcomps
test
mov
add
pop
hlt
dec
pop
ror
fldenv
or
sbb
ror
jmp
cmp
lahf
js
xor
cmp
fs
pop
push
mov
or
push
xchg
bound
xor
jp
pop
or
jne
or
ja
mov
iret
sbb
and
mov
clc
int3
pushf
mov
push
cmp
lds
cld
sbb
into
inc
rol
lcall
and
inc
add
stos
lods
sahf
mov
mov
mov
xor
aad
jno
aad
idivb
aas
lods
enter
ja
push
out
xor
mov
push
push
xchg
push
mov
xlat
in
pop
xchg
out
push
and
addr16
and
xor
dec
fstpt
aaa
push
push
lock
fcompp
mov
fadd
cmpb
mov
push
sbb
xchg
test
std
inc
sbb
xor
stos
jl
std
mov
pusha
xor
add
popf
incb
sub
imul
adc
sub
test
or
or
xchg
outsb
xchg
mov
mov
dec
push
inc
out
xchg
cmp
adc
xlat
xor
cmp
pop
sub
movsl
pop
pop
jp
loop
imul
push
xor
into
test
clc
sarl
lret
out
add
jle
sarl
cmp
xchg
xor
repz
stos
clc
lea
jmp
fistl
out
mov
inc
in
loopne
push
xchg
xchg
loope
fsubl
xchg
bound
push
fdivl
inc
repnz
gs
xchg
pop
sub
ss
jnp
jo
aam
inc
xor
imul
jae
icebp
fnstcw
and
xchg
cmp
pop
mov
lea
aam
mov
shll
jmp
inc
pop
movsb
sbb
roll
mov
push
pop
mov
xor
loop
jo
imul
dec
pop
aas
push
cltd
mov
jmp
fs
xlat
arpl
in
mov
sahf
dec
mov
aas
bound
repnz
mov
shl
movsb
jge
add
and
fs
ljmp
imul
pushl
lea
shll
push
pop
lock
inc
push
cmp
aaa
or
jmp
fwait
int
pop
xchg
lret
hlt
insb
xlat
push
cltd
clc
es
daa
or
xchg
xchg
fdivp
mov
pop
aam
cltd
out
lea
and
pop
sti
mov
test
inc
mov
push
and
dec
mov
sbb
ret
cmpsb
mov
insb
mov
aaa
push
mov
ficoms
fmuls
add
aam
sbb
mov
pop
out
imul
mov
push
or
pop
push
sub
sti
cmp
sbb
in
sar
pop
imul
fwait
data16
sub
mov
and
loop
into
sahf
push
mov
test
iret
and
jg
jno
inc
rcll
subl
add
dec
shll
xor
push
loop
lods
fadds
data16
jg
pusha
sarb
inc
push
bound
cmp
or
jne
pop
push
aam
popf
mov
popa
jns
push
mov
mov
test
fsubr
lock
jb
test
dec
adc
insb
mov
popa
pop
shlb
push
ja
xor
pop
outsb
pop
and
add
sub
test
and
inc
out
jno
je
xorb
push
out
clc
pop
add
ficoml
icebp
out
in
mov
leave
nop
push
add
jecxz
jae
pop
bound
mov
adcb
mov
in
sub
and
mov
nop
iret
fidivrs
adc
fs
pop
mov
mov
pop
add
out
pop
dec
lret
fldcw
fidivs
movb
sub
mov
jl
jmp
mov
pop
jno
in
jg
xor
pusha
int3
pop
ja
add
and
pop
cli
mov
lods
subl
jno
pop
test
jnp
cmp
cmp
add
mov
sbb
fdivl
out
xchg
dec
adc
cli
movsb
push
cmp
sbb
push
jecxz
add
xchg
lcall
dec
jp
testl
or
cmp
icebp
adc
mov
or
jge
cltd
cmp
push
test
add
cmp
addl
or
loop
imulb
ljmp
ja
rolb
push
das
cmpsl
ret
in
or
loope
mov
mov
pop
popf
add
cmp
push
mov
and
jnp
lahf
xor
dec
fbld
push
jo
int
ss
cmpsb
cmp
pop
and
popa
arpl
cmpsb
ljmp
and
in
or
cld
push
cmp
jnp
test
push
movsl
jmp
test
sub
jb
test
sub
and
in
jl
mov
sub
jmp
gs
pop
mov
popf
or
push
dec
call
in
cltd
mov
shrb
cli
jge
je
decl
mov
test
cmp
mov
jne
sub
xchg
pop
jne
pop
divb
in
push
cmp
push
jecxz
repnz
jne
adc
adc
movsb
mul
shl
mov
cmpsl
bound
lea
xchg
push
sub
add
insl
jb
add
mov
fiaddl
pop
jo
xchg
lea
lock
inc
movsb
scas
outsb
inc
and
mov
mov
adc
mov
aad
aaa
cmpsb
in
pop
pop
cmp
insl
pop
imull
enter
inc
pusha
cmp
sbb
mov
es
outsl
mov
lock
stos
mul
push
mov
ljmp
scas
xor
add
sub
push
cs
in
cmp
scas
xor
arpl
stc
dec
negb
cmpsb
jl
pop
sarl
int3
loope
add
add
sub
jnp
cmp
lret
xchg
int
je
ss
scas
inc
les
mov
testb
aad
roll
add
pavgw
cmp
fidivrl
dec
xchg
leave
das
cmpb
out
fisttpl
push
loope
jae
jns
mov
cltd
adc
mov
lret
sub
daa
das
hlt
insl
push
add
xchg
js
push
jbe
cmpsb
enter
out
pushf
pop
push
pause
es
ret
adc
mov
mov
push
mov
std
arpl
pop
sbbb
push
cs
pop
enter
ds
push
mov
stos
int
push
mov
pop
cmp
push
mov
mov
movzbl
mov
push
mov
add
adc
ret
or
mov
add
pushf
and
rorl
test
xchg
sahf
adc
insl
enter
push
inc
mov
movsl
dec
and
jge
pop
and
in
add
fcomp
mov
push
lock
ret
lea
lds
inc
jno
push
sahf
pop
or
fisubrl
inc
int3
jmp
scas
or
adcl
inc
dec
mov
fadd
inc
ds
out
mov
in
js
repz
jg
mov
adc
xor
pop
lods
fidivl
fildl
mov
or
outsl
or
jae
pop
and
mov
ljmp
scas
cmpsl
and
jecxz
add
adc
pushf
sbb
shl
jnp
sub
push
loop
repnz
pop
add
cmp
scas
jne
mov
jmp
aad
inc
push
pushl
lahf
fnsave
mov
jbe
fwait
xchg
add
pop
lock
nop
pop
mov
pop
mov
cmp
mov
test
jmp
ret
enter
inc
call
jecxz
cmc
pop
ret
xor
and
clc
push
mov
test
adc
cmp
and
sub
lds
jge
pusha
lods
fcmovb
enter
cs
sbb
push
pop
add
mov
sbb
shll
sbb
mov
xchg
in
cmp
jle
push
cmp
or
pop
push
lods
push
xchg
sbb
xchg
aam
pop
push
xor
sub
xor
xchg
inc
stos
mov
dec
cltd
fisubl
pop
popa
cwtl
sub
mov
or
sub
test
dec
lret
lods
inc
cmp
repz
inc
js
dec
add
cmp
inc
arpl
adc
mov
cs
sbb
pop
cmpsl
std
ljmp
dec
or
sbb
gs
push
divl
sub
adc
cmp
jno
imul
aad
jl
or
rorl
pop
or
inc
sbb
jecxz
jle
rcll
ljmp
lret
lret
and
or
add
or
sbb
push
std
lods
call
lds
lahf
pop
adc
int3
mov
aaa
int3
flds
sbb
mov
call
loop
inc
popf
ss
push
in
pusha
xchg
adc
pushf
sahf
mov
call
movsb
in
cmpsb
mov
xchg
lods
push
push
insl
scas
daa
jno
adcb
test
add
push
jb
sti
je
aad
shll
sbb
push
sbb
ret
inc
dec
test
mov
inc
ja
mov
jp
ret
push
addr16
xchg
push
push
xor
xor
jg
lock
sub
out
dec
imul
pop
xor
data16
cmpb
rolb
add
dec
cld
mov
sbb
out
out
repz
and
mov
dec
inc
jbe
js
imul
sti
xor
clc
cwtl
and
sub
xchg
movl
mov
arpl
dec
and
cld
xor
ret
dec
test
in
shrb
xchg
add
std
push
adc
mov
dec
xchg
cmp
cmc
fsubrs
push
out
pop
ficompl
push
mov
das
decl
insl
inc
mov
xlat
inc
fyl2x
cmp
fdivl
fcom
popf
and
lret
jne
stos
daa
pop
sub
lret
js
xor
in
add
mov
push
cs
sbb
movsb
mov
sbb
inc
shrb
mov
loope
jbe
fnstenv
negl
sti
mov
stos
popa
pop
mov
fnstcw
lds
pop
lock
push
lds
xrelease
sub
push
jae
sub
xchg
inc
call
xlat
or
imul
repnz
es
push
test
test
jbe
xor
stos
adc
xor
rcr
push
scas
les
fistpll
sbb
imul
cli
lock
jae
mov
mov
daa
push
daa
mov
mov
dec
jo
mov
cld
mov
std
push
pop
dec
in
dec
xlat
mov
jp
enter
fdivs
lea
push
push
jno
push
xchg
mov
jo
and
sti
dec
adc
push
jg
jb
xor
imul
je
mov
cmp
mov
out
pop
inc
out
cmp
clc
sub
imull
xor
lahf
mov
mov
pop
mov
xchg
push
jle
mov
add
sbb
push
idivl
leave
sub
mov
in
lods
aad
stos
fs
lahf
xchg
fst
clc
mov
dec
xlat
enter
and
inc
jl
push
les
mov
mov
mov
movsl
and
mov
sarl
push
fildll
cli
sub
mov
xchg
insb
cmp
mov
xchg
sbb
roll
push
leave
les
test
je
or
out
jnp
cld
mov
sub
adc
inc
ds
bound
cmpb
lods
fcoms
incb
xchg
lods
cs
dec
js
movsb
es
icebp
stos
icebp
jg
in
jbe
adc
mov
rcrl
push
jb
xchg
jnp
xchg
sub
mov
xor
call
out
mov
ficoml
lcall
inc
das
loope
popl
jle
push
jae
dec
es
icebp
mov
or
mov
insb
aas
loop
adc
movsl
out
int3
push
mov
lahf
into
xchg
dec
lock
jae
xchg
push
jbe
push
inc
stos
mov
mov
lods
stc
iret
jmp
dec
lret
add
pop
adc
roll
pop
xchg
out
cmp
xchg
in
mov
pop
in
xchg
mov
xchg
out
jb
enter
cmp
in
stc
jg
popa
dec
jbe
repz
add
andl
add
or
js
cmpsl
stos
push
lret
repz
mov
faddl
rcl
out
push
jp
gs
loopne
mov
cmpsl
xchg
or
cld
aaa
call
adc
cwtl
jge
push
shrb
test
mov
daa
sub
or
pop
push
inc
mov
fcompl
movsl
scas
dec
fimuls
push
in
rcrb
test
ljmp
stc
cmpsl
fisubs
lds
xor
push
adc
and
add
jl
push
xchg
inc
sub
addr16
push
pop
rcr
xchg
aas
sub
mov
push
cmp
add
mov
pop
mov
mov
gs
lods
dec
sbb
leave
jge
insl
xchg
sub
mov
pusha
idivb
mov
sub
mov
lods
push
lahf
cltd
xor
add
sbb
jns
pop
stc
dec
cwtl
push
cwtl
or
and
pop
lahf
test
jecxz
jnp
pusha
jecxz
and
incb
mov
jne
mov
adc
test
mov
mov
jmp
mov
ss
loopne
stc
les
jns
adc
sbb
shrb
sbb
mov
push
inc
xor
mov
xor
lds
ljmp
xlat
imul
sub
loop
lret
hlt
rcrl
mov
xchg
pop
ds
pop
pop
out
mov
dec
pop
fidivs
out
scas
jbe
cmpsb
adc
andb
insb
pop
scas
dec
dec
outsb
push
daa
insl
cmp
ret
ret
mov
in
lock
dec
cwtl
icebp
or
dec
mov
mov
adc
das
or
hlt
lods
into
sahf
sub
push
push
push
idivb
sub
cwtl
adc
xor
sti
pop
clc
fsubrp
xchg
mov
or
enter
mov
and
lock
shll
inc
je
xchg
pop
xchg
adc
pop
out
xchg
rorl
rcl
xor
fbld
scas
cs
mov
out
sbb
or
xchg
incb
sbb
imul
cwtl
aam
jno
sub
mov
push
loopne
shl
lahf
mov
decl
aad
test
mull
cmp
adc
cwtl
ficoms
inc
mov
jge
or
loop
add
push
icebp
pop
pop
sbb
outsl
or
jb
rolb
aam
xor
or
es
stos
incb
fdivs
rcr
jecxz
lcall
ss
cmpsl
loope
add
inc
sub
leave
cmpsb
push
xchg
push
in
iret
dec
and
dec
loopne
imull
stos
in
add
icebp
mov
jae
inc
inc
insl
imul
das
andl
outsl
loopne
sar
mov
push
test
hlt
iret
sbb
sub
add
mov
sbb
fstpl
jne
push
je
sub
ss
icebp
sbb
jmp
add
add
mov
arpl
testl
ficoms
mov
mov
jnp
pop
jecxz
cmp
cmpb
adc
pop
sbb
sahf
orl
mov
mov
lea
sarb
lock
inc
jb
lock
enter
cli
mov
pop
in
inc
or
mov
pop
sti
icebp
in
mov
sub
mov
xlat
int3
or
scas
jnp
mov
lret
dec
add
push
xor
stos
jge
std
and
add
repz
xchg
imul
mov
imul
pop
scas
mov
or
xor
push
test
mov
out
jbe
fadds
aad
jmp
fs
push
mov
stos
dec
xor
xor
jne
jl
fildl
mov
jbe
sbb
mov
mov
in
insl
push
push
mov
xor
jo
inc
push
cwtl
mov
sahf
in
adc
fwait
roll
fldcw
xchg
fistps
in
mov
cltd
sbb
je
jge
cmp
test
dec
mov
fsubr
jl
push
push
addl
and
jbe
inc
loopne
jmp
pop
int3
lods
dec
les
sub
add
lret
aas
cltd
adc
mov
pop
out
adc
cwtl
out
mov
mov
xor
dec
and
ret
cltd
lahf
lods
out
xor
test
fwait
outsl
inc
mov
adc
fiadds
movsb
fwait
sub
add
fbld
or
loop
fildl
daa
adc
add
xchg
jmp
xchg
sbb
xor
and
push
xchg
ljmp
dec
popa
xchg
ret
dec
pusha
and
push
lahf
and
xchg
or
mov
pop
xchg
lret
mov
fdivs
or
lods
ret
sahf
sbb
jae
cwtl
stos
push
das
sub
insb
jns
ret
std
lret
call
cmpsl
push
adc
jp
sbbb
fs
sub
xor
popf
sbb
shlb
ret
sub
mov
cmc
loope
pop
pop
jmp
jae
inc
sbb
rorb
cmpsb
jle
aas
jp
lods
jbe
add
pop
pusha
dec
push
sub
addl
pop
ret
jnp
mov
xchg
iret
xlat
fldenv
shll
out
xchg
ja
push
ljmp
xor
shll
jle
xchg
mov
ret
stc
insl
mov
adc
int3
xlat
cld
adc
or
pop
mov
sti
inc
lock
xor
mov
imul
fidivrs
pop
xchg
aaa
cmc
stos
pop
nop
inc
or
push
push
adc
outsl
jnp
pcmpgtb
movsl
xlat
fbld
js
sahf
mov
xor
xlat
scas
out
cs
pop
xchg
test
jae
or
imul
popa
inc
popa
bound
push
add
movsb
mov
dec
or
stos
ljmp
addl
xor
xor
icebp
add
cmp
stos
sub
inc
xchg
popa
cmp
pop
fsubl
adc
stos
cmp
mov
xchg
pop
lcall
gs
jmp
dec
test
jmp
and
out
cmc
sub
rcr
or
cld
test
in
mov
mov
loop
jp
mov
aad
outsb
in
lds
jno
mov
addr16
xchg
pop
hlt
mov
aam
push
in
jle
pop
sub
in
mov
or
xchg
dec
jl
inc
jmp
aam
sub
iret
adc
cs
ret
mov
mov
cmp
cmpb
gs
sbb
call
dec
xchg
test
aaa
es
xchg
and
popf
mov
mov
andb
fucomip
pop
fmulp
ret
inc
bnd
push
xchg
adc
mov
pop
and
fistl
cmp
fisubrs
pop
sbb
stos
jne
decl
mov
cmpb
inc
push
cmp
loop
hlt
pop
rorb
ja
cltd
add
sbb
aas
imul
out
imul
scas
push
repnz
mov
mov
ret
fwait
std
lret
jmp
xor
xor
inc
mul
push
jmp
sahf
ja
or
pop
dec
add
dec
and
jmp
mov
dec
xchg
xor
xor
sub
shlb
mov
add
and
fidivs
mov
push
rclb
mov
stos
int
push
pop
cwtl
sub
cmp
pop
stos
insb
push
or
mov
imul
hlt
subl
loopne,pt
add
cmp
test
adc
rcrl
cs
sub
std
dec
push
aas
in
arpl
cmp
je
add
lret
xchg
pop
daa
sarb
popa
push
adc
lea
scas
xchg
into
mov
ret
or
je
jbe
jg
inc
ja
out
xor
xchg
push
mov
dec
cmp
and
shl
test
push
jmp
pop
ja
shl
fcmovne
or
sub
scas
dec
jg
pop
ljmp
push
cmp
outsl
scas
mov
xlat
inc
inc
adc
rclb
scas
adc
lods
loope
sub
or
out
xor
ret
jle
in
test
aam
hlt
or
xchg
xchg
or
sub
gs
cwtl
enter
mov
mov
add
push
mov
cmpsl
adc
inc
sbb
jl
in
call
or
mov
data16
xchg
inc
mov
mov
cs
shlb
pop
scas
push
syscall
test
mov
les
dec
push
mov
mov
xchg
pop
std
jecxz
sarl
std
jmp
out
loop
sub
nop
mov
aas
lock
dec
dec
fimuls
lds
jb
mov
sub
test
leave
mov
inc
shlb
xchg
push
iret
lcall
repnz
or
int
mov
lods
sub
adc
mov
push
lea
sbb
nop
int3
insb
data16
sub
pop
mov
mov
push
scas
add
cltd
insb
xlat
fsubr
andl
jg
or
xor
cmp
decb
inc
jecxz
cmp
data16
xor
ds
lret
xchg
test
inc
popf
movsb
mov
imull
push
scas
mov
clc
daa
repz
stos
fisubs
sbb
jnp
adcb
add
insb
sub
adc
xchg
loop
cmp
jae
sbb
pop
jmp
ljmp
mov
in
cmpsb
mov
pop
rolb
rclb
out
dec
stc
xchg
mov
imul
lcall
rcr
adc
pop
ficoms
pop
push
aas
les
mov
xchg
or
add
pusha
sbb
lcall
shlb
push
sbb
insl
pop
pop
cmpsb
cmpb
pop
icebp
cmc
mov
cmp
mov
insb
mov
and
jmp
xchg
subb
jecxz
sbb
cmc
flds
jo
xor
imul
enter
stos
mov
and
xlat
stos
dec
mov
mov
mov
xchg
fwait
fwait
and
aas
pop
or
aam
xchg
stos
andb
mov
pusha
adc
xor
pop
or
and
comiss
das
or
mov
mov
adc
mov
cmpsb
xor
add
pushf
sbb
jmp
or
sub
add
or
push
xchg
int3
and
or
in
test
push
and
or
pop
mov
imul
insl
sub
pop
filds
fiaddl
jae
xchg
add
sub
add
or
mov
cmp
pop
lret
out
fsubrl
and
mulb
jecxz
dec
xchg
fiaddl
cmpsl
pop
cltd
cmp
jp
mov
mov
subl
jg
jae
sbb
in
jl
mov
push
push
add
test
aam
mov
movsl
cmp
push
jns
mov
mov
pop
das
mov
fwait
jb
dec
push
stos
pusha
mov
jo
dec
rcrl
and
cmp
mov
mov
mov
into
test
loopne
or
push
pop
push
outsl
aam
lds
nop
mov
push
cmp
jae
adc
jp
setae
and
or
adcb
sar
fcoms
push
rolb
lock
mov
cs
xchg
mov
xchg
cmp
pop
cltd
mov
sbb
cmc
scas
jb
ret
aaa
push
loopne
push
mov
pusha
or
push
fidivs
mov
or
lock
gs
lock
popf
adc
lods
mov
mov
mov
movl
sbb
mov
lret
or
mov
lret
and
jmp
popa
popa
and
popf
lods
and
sbb
mov
outsb
jle
sti
nop
and
pop
adc
cmp
jecxz
adc
and
mov
jbe
or
add
lahf
negl
dec
and
xor
jl
test
insb
lea
push
dec
cmp
xchg
dec
push
sub
push
das
lock
jae
movsl
pop
andl
cli
push
in
orb
dec
in
pop
rcrl
movsb
xor
jno
push
dec
js,pt
jp
fwait
clc
push
xchg
sti
pop
std
mov
mov
out
icebp
mov
sti
rcll
adc
push
cli
inc
sub
jne
xor
nop
shl
ljmp
sub
jns
sbb
aas
cmpsb
outsl
cmc
dec
mov
pop
xor
dec
pushf
add
dec
xchg
aaa
dec
mov
xchg
mov
pop
pop
pushf
pushl
jno
stos
mov
pop
mov
in
ja
sub
out
cmp
dec
mov
cmpsb
aam
push
insb
cmpsl
adc
rorb
shl
add
iret
mov
mov
or
ss
mov
mov
push
and
gs
subl
das
loopne
pop
mov
test
mov
shll
fdivrl
inc
aaa
sub
cmp
fwait
ret
add
mov
jno
or
in
cs
mov
cmpsb
std
shl
mov
subl
mov
out
xchg
lds
xor
dec
cmc
cmp
repz
cmp
xchg
cwtl
js
sub
pushl
push
aam
inc
mov
sti
xor
sbb
inc
les
flds
ret
xor
pusha
ror
sti
out
stc
dec
pusha
fwait
jg
sarl
xchg
and
jecxz
sbb
pop
lcall
mov
jg
loope
sub
xor
or
dec
jb
sar
inc
stos
xor
push
push
mov
pop
enter
mov
std
int
jae
addl
outsb
adcl
and
std
and
and
out
adc
pop
clc
push
pop
mov
insl
movsb
adc
jle
jecxz
in
push
lret
rorl
outsb
xchg
in
jns
stos
lds
pusha
mov
gs
push
mov
jae
icebp
into
add
mov
xchg
dec
pop
fldcw
dec
mov
popf
es
stos
leave
out
push
dec
or
ds
gs
in
dec
jg
adc
pop
adc
popa
mov
xchg
rorb
outsl
je
inc
jmp
pop
dec
lret
cmp
and
insl
cmp
out
icebp
fildll
scas
pusha
jl
push
and
ljmp
lret
inc
ds
lods
repz
es
push
into
mov
psrlw
bnd
clc
loopne
push
mov
mov
sbb
nopl
aaa
or
push
push
mov
in
fneni(8087
bound
cmp
jmp
subl
xor
rcrb
pop
sub
add
arpl
jae
mov
iret
xchg
call
jo
orl
mov
jne
mov
std
jns
add
lret
cmpsl
insb
fcoml
push
xchg
gs
stc
mov
sub
in
sbb
stos
cs
addr16
hlt
pop
in
and
mov
dec
out
add
hlt
scas
pop
xchg
add
std
jne
lods
inc
fcomps
daa
xchg
xor
jb
adc
insl
add
xchg
ds
test
or
push
add
push
mov
push
subb
clc
stos
mov
jmp
mov
pop
jne
fldcw
fldt
fdivl
pop
xchg
inc
addr16
imul
inc
leave
push
fimuls
lret
and
hlt
popf
out
pop
hlt
inc
inc
add
sbb
add
js
add
roll
pop
mov
jl
nop
pop
in
and
and
sbb
mov
pop
or
jmp
rorb
sub
cmp
out
jbe
int3
fmuls
dec
sbb
or
mov
test
cli
std
mov
mov
addr16
movsl
xchg
fsubrs
xchg
cmp
mov
jp
inc
movsl
adc
and
sarl
mov
fstpl
xchg
push
lock
dec
and
push
out
pop
push
jbe
xor
js
and
out
xor
push
and
push
enter
push
sbb
out
adc
repz
scas
xchg
push
in
push
fbstp
lcall
imul
dec
xor
shll
dec
out
in
and
xor
mov
fisttpl
pop
mov
adc
hlt
pushf
outsl
push
sti
das
ljmp
mov
xchg
push
dec
push
test
into
in
and
push
jecxz
jg
sti
push
push
jnp
je
push
shrb
and
fstpl
in
xor
xchg
test
gs
mov
xchg
jnp
stc
dec
outsb
cmc
pop
push
add
fisubrs
testl
cmp
pop
addr16
mov
push
lods
leave
fwait
cmpsl
lcall
mov
mov
pop
ds
fcoms
cli
add
mov
es
imul
es
bound
push
aad
adc
mov
inc
cwtl
xchg
jo
xor
sub
jae
mov
decb
addl
mov
aad
sub
dec
pop
cmp
xor
pop
mov
ds
rcrl
mov
sbbb
lock
add
inc
jle
jbe
xor
in
cld
clc
std
xchg
and
xchg
jae
push
dec
neg
inc
cmc
int
les
jmp
movsb
mov
cwtl
lock
sbb
mov
popl
loop
push
imul
cwtl
repnz
std
push
dec
inc
jmp
mov
mov
aaa
jg
fimull
int3
call
xchg
cltd
pop
imul
mov
jns
out
adc
jmp
adc
push
stc
into
xchg
gs
mov
enter
pop
pop
cmp
push
adc
outsl
xor
lods
dec
pop
shlb
loop
push
jl
jbe
nop
push
jg
inc
add
xchg
adc
jns
mov
rcrl
outsb
test
andl
out
mov
packssdw
mov
push
les
jg
js
fsubrs
insb
cld
call
or
andb
lock
test
push
pop
outsl
movsl
xor
pop
insl
pushf
pop
test
lcall
mov
inc
pop
mov
mov
or
mov
scas
rcll
pop
repnz
clc
movsl
pop
jno
push
mov
mov
push
lcall
lret
jne
or
or
jl
mov
icebp
jg
mov
lock
push
bound
mov
sub
psrlq
sbb
pop
ror
mov
out
lods
fucomip
cs
mov
jae
pusha
mov
outsb
mov
sub
sti
aas
push
jns
xor
daa
std
mov
in
xchg
fcom
jmp
aam
cld
add
call
push
enter
insb
cmp
sub
adc
loopne
cmp
loope
gs
arpl
sahf
xlat
lret
xor
leave
test
mov
and
or
js
movsl
jle
push
fadds
sbb
mov
repz
mov
inc
call
adc
xor
sub
mov
aas
sub
jl
mov
sbb
shll
cmpsb
dec
jecxz
push
jg
loope
jno
pop
sbb
pop
imul
in
add
or
adc
jecxz
and
fcmovb
psllw
cmp
push
rol
mov
std
push
and
ja
jg
mov
and
xor
sbb
insl
mov
adc
dec
jne
ds
xor
psrlw
fnstcw
movsb
pop
inc
sub
out
sub
stos
fdivrs
jnp
mov
imul
fisubrl
dec
add
pop
fidivrl
xchg
call
add
adc
or
hlt
imul
int3
lods
outsl
xchg
sbb
sub
ljmp
pop
mov
out
xchg
or
sub
stos
add
jo
pusha
pushf
pop
jg
pop
sbb
mov
xchg
and
ja
xchg
adc
leave
shll
out
in
test
push
cmp
movb
ret
pop
or
pop
loop
incb
jle
andl
adc
lods
sbb
jae
lock
mov
scas
mov
xor
loop
test
pop
push
pop
lods
sub
pusha
fmull
cld
xchg
mov
inc
fwait
sbb
add
sub
test
sub
arpl
into
int3
mov
movsb
and
or
call
in
add
leave
test
sti
inc
jl
in
lock
cwtl
jl
sub
push
jnp
out
and
stos
jge
repnz
inc
insb
xchg
mov
orl
mov
popa
push
sar
outsl
pop
lock
movsl
cmp
negl
enter
sub
mov
jmp
and
mov
in
lret
test
imul
push
cmp
xchg
cmp
daa
dec
je
sub
lods
xor
or
mov
nop
and
je
mov
imul
mov
or
stos
and
jecxz
cmp
leave
int
sbb
jge
xor
or
adc
imul
dec
mov
loope
int3
imul
ja
enter
add
subl
jmp
push
mov
bound
das
cmpsb
pop
lods
push
shlb
std
lret
fildl
and
rolb
sarl
addr16
imul
mull
out
leave
les
and
dec
ja
inc
aam
add
jno
dec
shl
movsl
test
xchg
into
scas
popf
cmpsl
push
aad
mov
lods
push
jae
sbb
cli
mov
push
mov
ljmp
push
pop
outsl
out
jg
lds
xlat
sahf
and
std
xchg
lods
mov
jecxz
pop
dec
mov
adcb
aam
xchg
je
xchg
movsb
lea
mov
push
sarb
fwait
mov
jecxz
and
mov
ljmp
jns
addr16
inc
sbb
cmp
lcall
add
sub
pop
cmc
or
mul
mov
in
jae
out
mov
ljmp
push
ret
pop
jge
cmp
pop
push
in
subb
push
add
insl
push
movsl
mov
add
xor
jp
mov
fnstsw
dec
test
xchg
sub
mov
sbb
xor
test
and
leave
xchg
nop
out
mov
loope
inc
jns
jge
or
or
pop
dec
push
insl
imulb
jns
dec
pop
mov
loop
xor
shlb
jo
mov
cmc
inc
push
mov
sbb
add
test
pop
cwtl
lods
mov
mov
lret
mov
lods
push
fs
cli
jo
xchg
out
in
rdpmc
push
cmc
push
mov
test
fs
mov
xchg
or
lcall
pop
push
js
leave
xor
push
xchg
ds
ja
cld
lcall
das
inc
js
scas
int
mov
aam
bts
push
cmp
das
xchg
out
fisubrl
mov
js
cmc
push
mov
sub
adc
mov
xor
dec
and
cmp
inc
push
addl
clc
stos
inc
jl
sbb
ljmp
xor
sub
shr
xor
loopne
xchg
fsubrl
jg
popf
js
add
imul
mov
out
push
pop
cmc
notb
fisubrs
int3
imul
sub
cmpsb
mov
aam
jecxz,pt
mov
test
movl
lahf
mov
push
cmpsl
or
mov
rcrb
pusha
inc
inc
decb
ds
mov
outsl
test
add
lods
test
jecxz
test
pop
mov
jnp
into
pop
push
out
dec
jmp
dec
les
or
sbb
xor
cld
cmp
mov
cmpsl
add
cmp
jl
dec
nop
cli
push
inc
mov
dec
dec
scas
imul
popa
mov
pop
loop
aam
loop
mov
push
cs
in
mov
xchg
fnstsw
imul
insb
push
inc
sub
and
xchg
adc
in
jb
dec
nop
or
mov
ss
in
xchg
inc
jp
addr16
ja
fcomi
push
cmpsl
mov
pop
mov
push
imul
das
setno
dec
popa
mov
ret
xchg
cmp
and
test
test
lret
inc
out
pop
mov
sub
out
sub
mov
mov
sub
cmc
movl
cmp
pop
mov
enter
in
sub
loope
inc
cmp
loope
dec
xor
and
mov
test
or
cld
lock
outsl
cwtl
out
addr16
stos
jbe
imul
xchg
mov
icebp
call
sub
cmpsb
jge
add
insb
sbb
enter
mov
shll
stc
mov
fcomps
push
leave
cmp
shlb
or
or
in
push
dec
roll
fldcw
xchg
std
xchg
jmp
push
inc
xchg
lods
ret
push
push
loop
jb
arpl
movsl
test
cmpsl
inc
inc
xor
out
stos
pop
pop
pop
push
xchg
nop
cwtl
loop
cmpsl
test
in
maxps
mov
mov
dec
push
ret
mov
or
xchg
out
sti
pop
pop
pushf
and
out
mov
xor
mov
repnz
adc
test
orl
or
pushf
push
sahf
xchg
push
lods
cmpl
add
sub
fcmove
les
adc
mov
movsb
pop
and
loope
jne
and
sub
sub
sbb
mov
pop
fdivrs
xor
or
jo
repnz
xchg
pushf
mov
xchg
xor
mov
jmp
cld
adc
cli
push
popf
hlt
xor
cmpsb
dec
inc
out
inc
mul
mov
xlat
sub
cmp
xchg
mov
jne
dec
movsl
xchg
int3
inc
sarl
jmp
js
xchg
bound
xor
bsf
pushw
fmull
jnp
or
inc
sub
xchg
adc
adcl
push
mov
nop
divps
push
subl
adc
call
pop
in
jae
sub
test
idiv
idiv
or
imul
add
mov
inc
sbb
dec
mov
outsb
cmp
data16
cmp
nop
sub
int
jae
mov
mov
pop
fs
aad
sbb
or
int
cmp
push
daa
int
mov
faddp
fisubrl
cli
inc
xor
pushf
lea
int
mov
test
test
jge
clc
pop
idivl
fists
stc
ljmp
mov
xor
outsl
dec
pop
mov
rcll
pop
fwait
xchg
or
jmp
lods
adc
xchg
fisubrl
pop
cmp
pop
popa
push
rcll
decl
fyl2xp1
mov
in
mov
push
xlat
lret
fnsave
scas
inc
int
inc
or
cld
adc
sbb
inc
aaa
aaa
inc
push
in
push
xchg
ret
test
test
xor
call
lock
cmp
and
sbb
stos
mov
and
clc
add
mov
adc
mov
add
xchg
mov
subb
xorl
xor
inc
cmp
mov
cwtd
sbb
cwtl
mov
mov
push
xchg
xor
roll
test
dec
mov
rcr
pop
rorl
xor
ret
sub
insb
pop
decl
inc
jnp
ja
pop
cmp
mov
lret
pop
inc
mov
and
inc
rcr
ss
mov
adc
aas
xchg
jg
dec
and
sbbl
mov
frstor
mov
mov
pusha
push
mov
repnz
jae
mov
dec
movsb
fcompl
loope
sti
push
xor
or
push
iret
lods
push
imull
mov
xor
lods
dec
sbb
into
jbe
pop
test
in
clc
sub
sub
lds
add
leave
push
jno
test
sbb
inc
push
aad
sbb
jecxz
xchg
mov
mov
icebp
cld
add
push
arpl
inc
mov
test
pop
xchg
leave
leave
subl
mov
xchg
aas
lods
les
movsl
mov
pop
cmp
push
cmp
sub
pop
in
cli
fnstsw
movsb
inc
pop
in
jno
add
addb
cmp
mov
xorb
pushf
rcrb
inc
cmp
sub
lods
and
loopne
ds
cwtl
push
xor
dec
popf
cltd
push
jne
xchg
in
insl
stos
stc
in
lds
lock
shrl
and
fs
jae
rcrb
rcrl
sub
xor
ljmp
jbe
ret
mov
stc
les
pop
sub
mov
adc
push
fiaddl
imul
stos
xchg
fnstsw
adc
popl
mov
jno
xchg
arpl
aas
les
in
add
pushf
sahf
sub
clc
fsub
pushf
cmp
fstl
add
jne
push
out
xchg
or
aas
mov
push
ret
shrl
nop
in
jecxz
push
push
int
jge
fimull
adc
and
pushf
mov
movsl
and
push
add
mov
xchg
enter
mov
push
sub
cmp
shl
pop
aam
adc
clc
subb
or
bound
mov
cmp
sub
popa
add
shrb
cmpsb
repnz
adc
movsb
mov
add
jl
jecxz
es
pushf
mov
inc
and
mov
add
cmp
sbb
setae
dec
pop
test
pusha
inc
cmp
in
out
xor
inc
inc
mov
add
sbb
jmp
dec
test
into
or
pop
shrl
cmp
mov
xchg
cltd
nop
pop
fnstsw
inc
aas
push
shlb
imul
enter
mov
and
jg
movb
je
xor
cmp
jg
sbb
clc
paddw
adc
sub
rcl
loopne
ja
fsubs
pop
inc
outsl
inc
push
daa
fwait
dec
xchg
lcall
sbb
lahf
movsl
sub
inc
pushf
fwait
jns
stos
cmpl
jne
sbb
pop
cmp
mov
leave
test
and
aam
adc
ljmp
iret
repnz
jle
adc
push
mov
dec
xor
arpl
jne
mov
cmpsb
mov
mov
imul
fsubl
mov
sbb
cmp
xchg
or
mov
dec
dec
mov
jp
dec
in
shl
sbb
mov
vmovss
jne
sbb
pop
push
cmp
stc
bound
leave
sar
or
nop
in
xor
test
rorl
stos
dec
xor
iret
push
xchg
sub
pop
pop
test
dec
xor
les
mov
push
jnp
jle
ficoml
push
rolb
xchg
jmp
or
pop
inc
jb
sub
inc
lds
in
pusha
push
loope
sarb
mov
scas
test
jae
movsb
add
add
cld
sub
lods
push
or
outsl
mul
push
jb
mov
sbb
icebp
je
sub
imulb
movsl
and
push
inc
outsb
orl
mov
jno
sub
sahf
popl
dec
daa
icebp
jae
and
jo
sub
call
shlb
pop
loopne
ret
jnp
pop
in
imull
fucomi
inc
cmp
push
loope
out
mov
jno
movsl
sahf
arpl
adc
pop
add
jl
jbe
rcrb
pop
test
ljmp
xchg
jmp
cmp
mov
ss
cmp
sbb
xor
addr16
pop
enter
add
daa
jle
pusha
jne
rcll
addr16
idivb
push
add
dec
jae
es
out
adc
dec
inc
cs
outsb
repnz
insl
mov
and
xchg
xchg
lcall
leave
xor
mov
pushf
fbld
add
xchg
dec
cmp
mov
icebp
fwait
call
xor
sub
xchg
fbld
xchg
sub
repz
pushf
fimull
xchg
fists
mov
lahf
inc
sbb
lret
das
out
stc
cltd
mov
add
jae
lea
xchg
inc
jo
je
inc
popa
fwait
in
out
out
or
mov
in
ficomps
adcb
ljmp
addr16
out
pop
insl
ficompl
arpl
mov
cs
xchg
ror
sub
mov
rorb
cs
dec
sarl
sbb
or
insl
imul
cmp
mov
sub
mov
push
adc
insb
xchg
test
rcr
dec
test
dec
dec
cld
sub
outsl
hlt
mov
jnp
xchg
sbb
mov
xchg
fadds
lahf
lahf
lahf
adc
into
cmp
fcomps
rcll
mul
adc
int3
inc
aas
ret
shlb
loope
adc
mov
and
xchg
add
mov
dec
test
jb
or
or
jnp
mov
jge
rcr
sub
ljmp
in
mov
jecxz
pop
mov
push
ds
adc
jg
sbb
data16
stos
stos
dec
loopne
xor
iret
cltd
aam
dec
sub
adc
and
dec
test
sub
push
xor
std
ja
pop
shr
mov
stos
inc
fistpl
scas
aad
inc
inc
insb
dec
sbbl
jae
push
add
ret
or
pop
lea
lock
scas
cltd
push
mov
scas
sarl
in
movsl
mov
sub
cmpb
sub
ret
movsl
vinsertf128
xchg
pop
pop
int3
jl
xor
stos
prefetch
jnp
sub
gs
cmovl
mov
outsb
sbb
lock
mov
imul
cwtl
jno
int
push
insb
scas
jae
sbb
add
and
cmp
popa
pop
ljmp
rorb
imul
out
mov
pop
push
add
dec
push
jmp
push
mov
ljmp
adc
mov
cmp
movsl
imull
mov
lock
iret
adc
insl
cmp
add
fbstp
repz
das
push
inc
in
out
aaa
test
mov
jns
dec
out
out
dec
pop
lcall
xor
ficoms
xor
gs
or
lods
movsl
cmp
movb
mov
xchg
data16
loope
mov
stos
fidivrs
clc
jno
lea
pushf
rcll
rolb
dec
std
cmc
push
addl
cmp
push
push
pop
adc
dec
ret
pop
test
sti
dec
dec
push
sbb
mov
push
push
mov
pop
mov
jbe
addb
decl
and
sahf
jae
lds
inc
loopne
push
jge
lret
xor
in
data16
adc
fisubrs
push
ret
or
mov
rclb
xchg
xchg
mov
xchg
das
and
push
es
dec
test
lcall
bnd
enter
or
in
push
xchg
lcall
mov
add
popf
loopne
jo
sub
call
or
jge
jo
ret
jmp
jo
sahf
xchg
mov
and
jb
xor
call
les
sbb
jno
repnz
push
jmp
sbb
mov
mov
dec
dec
sub
adcl
jg
cli
lret
cmp
jecxz
fsubl
adc
jns
push
jge
adc
mov
inc
repz
movsl
sbb
stos
fucomip
and
ss
xor
stos
cmp
ja
fidivs
jae
rolb
inc
jns
sbb
fdivl
jb
add
pop
inc
dec
jmp
xchg
push
push
shlb
mov
add
mov
fimull
add
ds
and
inc
add
push
xchg
into
lahf
fcmovnb
mov
dec
cld
scas
xor
jecxz
dec
inc
dec
sbb
insb
repnz
mov
mov
inc
aad
sub
xor
adc
xor
mov
ror
adc
data16
decl
mov
xchg
sahf
adc
add
sahf
cwtl
popa
cli
xchg
addr16
mov
stos
test
add
pop
aaa
loop
cmc
mov
cmp
jmp
stos
cs
mov
mov
mov
cmp
lcall
call
cmp
push
sti
jle
xchg
adc
inc
inc
in
popl
in
cmp
jg
push
das
psrld
jo
lods
scas
jne
mov
jle
jg
xor
push
push
sbb
divl
ds
rorb
fsubrl
adc
dec
xchg
or
jo
mov
ja
les
mov
aas
mov
je
inc
jns
pop
pop
int
je
out
push
repz
je
pusha
push
mov
jo
enter
aas
xchg
sahf
divl
xchg
mov
aas
jmp
pop
jo
jg
mov
rcl
std
stc
in
or
push
outsb
jecxz
aaa
addr16
jmp
ljmp
jge
and
lock
push
cmp
dec
cmc
mov
sbb
cltd
push
xor
es
mov
outsb
iret
es
jp
sub
mov
xchg
mov
push
stos
xchg
mov
and
hlt
mov
mov
or
fnstsw
mov
ret
loop
leave
fdivrl
cwtl
xor
mov
testb
out
mov
xor
sarb
pop
stc
outsb
lods
xor
xchg
xor
int3
xchg
imul
inc
pusha
pop
jnp
jo
fsubp
mov
or
dec
clc
push
fisubs
mov
out
cwtl
ljmp
xor
push
inc
mov
push
int
push
fsubs
sti
xor
jno
sahf
xor
push
or
inc
stos
and
sub
mov
mov
enter
das
mov
mov
fsts
mov
xchg
mov
mov
inc
mov
jp
sub
ss
testl
ds
shll
pop
push
mov
xchg
xor
push
ja
ja
in
push
lahf
out
dec
or
xor
push
aad
push
mov
pushf
pop
push
clc
movsl
cs
jno
push
jo
xchg
xchg
xchg
pop
sub
cmc
push
in
cmp
mov
repz
fdivl
add
movsl
sbbb
lea
jl
dec
add
fldt
mov
xchg
cmp
sahf
jne
sti
std
xchg
pop
je
xchg
mov
stc
hlt
mov
das
arpl
cmp
imul
jp
mov
inc
jmp
gs
mov
aaa
xor
sub
inc
pop
ret
ljmp
fucomip
sub
ret
sbb
ds
pop
push
jae
or
mov
jl
push
subb
rclb
or
dec
sub
xor
insb
in
cmp
dec
xor
rorl
lea
shll
mov
cwtl
dec
sarb
add
ljmp
fcomps
imul
add
mov
dec
fwait
and
mov
ror
inc
push
out
icebp
mov
into
or
cmp
outsb
and
aam
lret
jae
ja,pt
cmpsb
push
out
lcall
cmpsb
shr
data16
xchg
fdivs
xchg
push
pop
push
inc
mov
lret
push
out
pop
nop
push
push
xchg
sahf
mov
insb
stos
mov
jns
iret
arpl
cs
jg
sub
or
sub
in
call
jmp
xor
mov
ret
inc
orb
sub
lcall
sbb
cmp
mov
mov
push
adc
pop
stc
sar
mov
lcall
in
jle
fstpt
mov
ret
std
pop
xchg
pop
sbb
test
cmpsb
sub
pop
enter
inc
fwait
pusha
jmp
sarb
scas
mulb
xchg
into
cs
push
sub
decb
addb
mov
dec
out
push
and
adc
pop
xchg
mov
mov
insl
fiaddl
mov
push
mov
mov
mov
stc
arpl
out
push
rep
pusha
testb
xchg
jno
arpl
out
je
fistps
jge
hlt
mov
xor
add
outsb
cltd
mov
movsl
inc
loope
dec
clc
adc
sbb
mov
mov
mov
ja
xchg
push
sbb
xchg
pop
cmpsl
mov
adc
and
in
gs
xor
call
xor
insb
popf
xchg
adc
mov
movsl
sbb
enter
jge
in
xor
js
icebp
pop
mov
sbb
pop
out
test
stc
fildl
hlt
jp
scas
mov
adc
cwtl
or
int
in
into
mov
and
lods
sub
leave
mulb
mov
fnstcw
inc
jb
push
inc
daa
stos
and
jl
and
dec
hlt
cltd
mov
aas
add
inc
sub
or
sbb
and
add
notb
stos
jbe
push
sbb
mov
repnz
fnstcw
imulb
das
adc
repnz
sbb
repnz
fnstsw
mov
shlb
jle
lret
les
add
jne
hlt
scas
mov
fcoml
pop
lods
aas
mov
mov
mov
jb
out
or
pop
cmpsb
outsl
mov
xor
jp
xchg
inc
out
icebp
jo
rcr
inc
jo
mov
push
xchg
jl
adc
mov
push
xor
lods
jl
fs
scas
cmp
mov
inc
ljmp
adcl
xor
call
xchg
and
fcmovnu
mov
inc
push
xlat
test
ds
cmc
dec
ss
mov
jae
je
jae
mov
mov
adc
jbe
and
cmp
dec
movsl
jmp
dec
int3
pop
jle
adcl
mov
mov
sbb
lcall
cmc
pushf
and
jg
mov
sbb
cld
insl
cmpsl
pushf
fsts
add
lcall
xlat
rcr
push
mov
in
loope
push
dec
sbb
movsb
cmp
mov
in
mov
movsb
movsb
xor
sti
cmp
push
clc
pop
arpl
mov
js
xchg
sbb
scas
imul
pop
add
jbe
leave
loopne
mov
fidivrs
cmpsl
out
inc
mov
jp
mov
adc
push
mov
sbb
dec
push
add
bound
aam
decl
jo
ja
cmpsl
dec
hlt
mov
sbb
out
or
scas
enter
mov
pushf
sarl
and
insl
fldcw
rol
loopne
push
ja
xor
add
xchg
stc
out
add
rcrb
pop
aas
cwtl
popf
fcmove
mov
push
and
xchg
in
sbb
shlb
test
imul
gs
xchg
sub
add
inc
sbb
mov
adc
mov
sub
les
push
imul
mov
lret
dec
jns
inc
add
aam
fsubs
scas
jecxz
sbb
pop
pop
adc
and
rcl
pop
dec
hlt
aaa
push
data16
std
adc
or
jne
inc
das
cmpsb
lahf
lods
jae
outsl
or
cld
je
sti
call
xchg
mov
jl
das
push
rol
mov
fisttpll
sti
aaa
imul
xchg
xchg
add
xchg
jp
or
cltd
mov
mov
dec
rcrl
or
xlat
lds
xlat
or
sahf
cmp
icebp
repz
sbb
pop
add
roll
cmpsl
cmp
rcl
pop
mov
cmp
pushl
cltd
ret
dec
movsb
shlb
inc
jo
push
dec
jle
jae
pop
lret
lahf
or
sub
inc
adc
ja
push
inc
cld
fistpl
loope
inc
lods
and
push
pusha
pop
int3
pop
and
push
dec
mov
jg
pop
cmpsb
lods
fwait
orb
sarl
cmp
xchg
push
cmp
cltd
mov
sbb
nop
out
pop
sub
xor
fmuls
jo
mov
lods
sub
stos
or
jl
xor
stos
and
popa
out
cltd
xchg
rorb
es
nop
les
add
sbb
xchg
and
test
or
iret
aas
in
push
sub
or
xlat
jno
push
cmp
insl
or
or
jmp
push
test
shl
pushf
pop
test
sbbb
dec
popa
sbb
jnp
sbb
and
push
xor
jno
nop
movsb
ffree
mov
ja
jmp
mov
mov
aas
dec
imul
rorb
fsubrs
jo
cmp
add
jmp
stc
aas
std
and
push
jg
out
fwait
inc
stos
xor
xchg
pop
sahf
sub
gs
dec
cli
and
shr
jp
jno
sub
ret
mov
in
ja
push
dec
fdivrp
adc
add
rcrb
mov
shrl
cmp
adc
xorps
repnz
push
add
mov
idivl
inc
outsb
in
fwait
fwait
or
pop
sbb
dec
imul
jge
cs
sti
stc
in
dec
out
jae
repnz
and
push
xchg
xor
push
fwait
mov
inc
mov
jge
cmp
int
lahf
xchg
mov
mov
data16
popa
sub
hlt
jno
and
mov
inc
xchg
sub
fadd
adc
lds
enter
out
or
mov
popa
cltd
or
add
das
fisubrs
insl
js
mov
dec
shl
jno
out
shl
stos
fimull
ret
mov
cmpsl
jle
adc
sbb
in
jecxz
fisubl
sub
and
adc
lds
and
js
in
aam
mov
mov
jb
jne
aaa
xor
xor
ss
and
cmpsl
mulb
out
lcall
push
shll
mov
cmc
add
and
jns
clc
in
xchg
cmp
xchg
cwtl
cmp
push
notb
js
sbbl
pop
out
push
ret
test
das
xor
jnp
rcl
mov
xchg
dec
add
adc
sbb
and
xchg
hlt
js
pop
add
push
jo
push
sbb
pop
xchg
sbb
cmp
dec
push
sarl
mov
pop
mov
and
es
xor
leave
fmulp
loop
xchg
mov
scas
jge
pop
movl
mov
lret
cli
test
dec
adc
popa
je
aas
es
jmp
cmp
sbb
test
out
push
jecxz
add
sbb
movsl
xchg
sbb
in
jbe
inc
in
arpl
outsl
popf
cmp
or
dec
adc
mov
sbb
lret
or
das
jmp
cmp
dec
xchg
hlt
push
std
jns
xchg
lcall
popa
popf
cld
inc
lret
jno
sti
mov
ss
or
mov
movsl
push
cs
push
int
sub
call
sub
pop
and
sub
mov
mov
mov
push
test
lods
lea
mov
mov
sub
scas
hlt
or
and
shll
rorl
jge
inc
je
lcall
mov
or
fsubl
ja
mov
or
fs
jbe
lds
addr16
icebp
jne
dec
out
out
hlt
push
dec
xchg
inc
mulb
int
sbb
xchg
gs
rep
or
scas
xchg
dec
ficoml
fistps
loope
adc
cwtl
push
adc
and
dec
iret
daa
sbb
jne
dec
nop
je
dec
dec
std
mov
out
inc
imulb
jns
lods
jp
mov
dec
and
lret
xchg
rcll
cmc
mov
push
shlb
jbe
jb
jmp
and
hlt
sbb
pop
les
idivl
push
rol
or
iret
mov
cmp
movsl
push
or
and
add
inc
or
iret
xchg
push
int
cmc
in
shrw
jno
mov
movsb
add
jbe
out
mov
je
scas
dec
rcrl
loop
out
ds
out
testb
sbb
insb
ret
mov
test
inc
push
xor
adc
sar
std
cli
fldt
xchg
mov
sbb
cmp
push
ret
inc
pop
and
add
add
xchg
movsl
call
aaa
add
jl
mov
pop
popa
push
std
std
cwtl
aaa
dec
or
ds
xchg
in
or
mov
sub
gs
sbb
dec
bnd
push
mov
jb
jb
inc
sbb
cmp
sti
and
lret
xchg
mov
jecxz
jl
ds
lcall
std
mov
pop
mov
cmc
push
call
adc
jnp
ret
es
add
stos
ret
add
jecxz
xchg
pop
jg
repz
aas
insl
lods
lar
clc
aas
je
repz
ror
add
rol
push
mov
shll
js
push
andl
arpl
add
jae
nop
cli
dec
pop
insl
inc
pop
cs
sahf
pop
xchg
fistl
mov
pop
add
jno
clc
add
mov
cmpl
push
out
shlb
sti
jae
jns
test
insl
add
push
cs
jnp
fsubl
call
in
es
lahf
push
ljmp
lods
fsubl
cs
out
mov
aad
sbb
cmp
jns
xchg
jb
xchg
jno
adc
mov
cmp
pop
add
push
repnz
sbb
dec
out
sbb
pop
add
stc
xchg
ja
xlat
lret
pusha
push
movsb
sarb
out
stos
nop
adc
dec
sbb
pushf
lock
mov
dec
aas
jecxz
sub
imul
xor
mov
stc
jae
in
push
inc
fs
and
mov
sub
aam
cmc
and
cmp
add
xor
mulb
addr16
jns
adc
xchg
out
dec
mov
ljmp
mov
mov
adc
lret
mov
aaa
add
test
cs
push
add
adc
or
mov
lcall
inc
int3
or
cmp
push
je
inc
mov
in
inc
insl
movsl
xchg
out
cld
adc
mov
mov
loope
xor
dec
seta
lea
fldcw
mov
or
ja
xchg
mov
orl
pop
jo
sub
outsl
lods
sbb
jmp
ret
lcall
cmp
mul
adc
xchg
push
js
in
sbb
push
cmp
cwtl
pop
in
pusha
inc
or
adc
test
jmp
mov
sarl
or
mov
dec
out
lds
mull
loop
shr
sub
icebp
pop
xchg
cmp
std
mov
mov
sbb
lret
mov
sahf
push
and
jbe
sbb
negl
fstpl
inc
mov
mov
cmpsb
cmc
jp
pop
jecxz
scas
and
stc
cmpsl
dec
or
sbbl
or
jno
push
inc
rcrb
cmc
psubw
int
xchg
jge
mov
push
test
out
dec
and
xchg
dec
pop
in
jmp
stos
popf
in
hlt
lret
dec
mov
aad
sbb
popf
mov
mov
jbe
leave
xor
xor
cmp
mov
xchg
sbb
neg
test
in
sbb
mov
mov
fdivs
outsb
aas
mov
jnp
or
jmp
les
dec
adc
subl
or
daa
movsb
mov
and
ss
pop
ret
ja
jb
or
xchg
pop
jl
imul
clc
lret
inc
inc
sub
mov
test
lahf
add
push
sbb
xor
sarl
xchg
in
inc
push
loop
mov
sbb
or
lds
pop
jl
movsl
or
mov
dec
inc
xchg
call
mov
ficompl
popf
adc
out
inc
insl
mov
pop
adc
in
add
adc
inc
cmpsl
cwtl
mov
lret
fucomip
sub
ss
inc
fwait
lods
mov
mov
cmp
loopne
push
lock
sbb
and
in
pop
xchg
sub
mull
pusha
icebp
fcomps
popl
or
jl
mov
dec
test
pop
les
out
xlat
cmp
je
lds
movsl
cmp
test
push
xor
push
mov
bound
adc
xor
sub
pop
in
imul
test
sub
pop
divb
js
int3
dec
cld
out
stc
add
leave
cmp
roll
mov
imul
pop
adc
ror
call
pop
arpl
push
call
xchg
movsl
mov
insl
test
adc
jns
ficomps
or
inc
into
and
in
fsubr
fbstp
lret
in
jmp
daa
pop
push
and
outsb
or
in
xrelease
mov
orl
push
aas
mov
aaa
jle
cwtl
cmp
push
mov
add
push
jbe
mov
jmp
enter
mov
cs
popa
jecxz
adc
pusha
imul
das
cmp
bound
lret
adc
lret
mov
lods
das
lds
jae
push
test
dec
inc
push
in
insl
movsb
cwtl
dec
sub
push
or
outsb
xchg
dec
mov
bound
sub
mov
mov
or
xchg
nop
call
scas
movl
push
ss
or
dec
in
push
mov
in
push
loope
fidivs
cmpb
mov
loope
nop
pop
shrb
ret
insl
add
mov
addr16
fimull
scas
sub
cmc
sbb
push
fsubl
mov
cld
xchg
mov
pop
lods
mov
in
rcr
xor
ret
ficoms
lahf
cmp
xchg
pop
adc
inc
jns
push
das
cltd
sbb
fs
mov
imul
cli
or
xor
sub
mov
mov
lret
out
jl
bound
sub
movsl
mov
bound
in
jb
jbe
stos
cli
mov
sub
les
jae
mov
addb
in
int3
mov
lods
lds
ret
mov
dec
xlat
pop
roll
ret
lods
aam
fsts
or
jno
or
mov
or
adc
xor
xchg
mov
dec
imul
mov
mov
sbb
dec
aad
stc
sbb
or
jle
mov
xor
sbbl
jae
aaa
jnp
scas
and
add
pop
mov
fistpll
cmp
lahf
add
xchg
popf
data16
inc
ja
pop
nop
test
xchg
adc
lds
or
mov
dec
fsubr
push
inc
xor
pushf
xlat
dec
aaa
push
ret
icebp
mov
jbe
ret
js
xchg
add
push
and
add
push
jo
pop
arpl
xchg
je
jge
dec
mov
add
call
mov
sub
cmpl
adcl
xor
sub
and
cmp
mov
cmp
push
cld
outsl
dec
mov
cld
adc
mov
mov
negb
lock
sti
add
std
gs
jecxz
rclb
stos
scas
dec
enter
das
sbb
es
iret
ljmp
inc
addr16
popa
clc
sti
push
inc
in
scas
ret
jns
push
cltd
call
cmp
mov
out
push
out
jo
jle
adc
into
mov
outsb
and
pop
mov
xor
mov
adc
sbb
pop
imul
orb
out
push
xor
out
mov
shr
adc
fsubs
andl
mov
mov
mov
or
sub
shll
pop
loop
or
movsb
adc
sub
push
daa
adc
and
inc
cld
dec
xchg
adc
dec
pop
cltd
mov
pop
mov
pcmpgtw
push
mov
icebp
and
mov
xchg
jae
fcompl
ret
out
insb
sub
pop
stos
mov
loope
dec
adc
mov
pop
mov
cmp
inc
es
mov
dec
add
ds
stos
inc
sbb
sub
lock
cmp
push
rcll
push
ljmp
je
movsl
daa
cmp
sub
sbb
mov
cmp
lock
into
icebp
mov
inc
test
add
mov
jge
adc
mov
std
inc
pop
sbb
outsb
push
sbb
push
lods
popa
gs
xchg
cs
and
mov
ret
loop
scas
xor
aaa
icebp
dec
sub
cmp
shrb
mov
push
mov
or
movsl
mov
jmp
lea
mov
scas
adc
mov
inc
or
aaa
into
adc
sahf
mov
call
inc
lock
jge
mov
mov
in
popa
imul
add
cmp
mov
adc
sbb
aaa
mov
and
stos
cmp
jecxz
cld
cltd
and
mov
into
js
sahf
sbb
fidivrl
xchg
and
cmpsb
dec
lea
push
lock
xlat
sbb
ds
jbe
xchg
adc
leave
pop
or
or
xchg
adc
in
out
xor
adc
xlat
inc
xchg
sahf
mov
lahf
push
push
lods
or
stos
jg
mov
adc
push
adc
pushf
mov
dec
lds
cmpsl
dec
loop
mov
dec
inc
pushf
stos
push
repz
push
push
arpl
inc
cltd
mov
pop
frstor
xchg
icebp
in
call
push
cwtl
test
int3
negl
js
movsl
cmp
dec
dec
add
mov
js
xor
jg
push
lret
test
lret
fisttpl
hlt
xor
icebp
test
lret
and
and
dec
jns
cmc
lock
pop
outsl
or
pop
lcall
adc
stos
pop
pushf
mov
mulb
pop
mov
jnp
fs
sub
cli
nop
cmp
and
jmp
cmpb
sub
out
sbb
mov
add
cmpsl
std
insl
mov
pop
pop
ret
xlat
adc
mov
test
sarb
in
and
push
insb
sbb
xchg
jg
ja
adc
dec
push
inc
iret
mov
sarl
lods
mov
pop
pusha
mov
sub
mov
dec
cli
add
push
lock
in
mov
cmp
mov
or
adc
js
jae
adc
je
cmp
ret
jne
xlat
mov
pusha
hlt
sbbb
stc
in
leave
outsb
sbb
inc
pop
adc
cltd
xchg
or
jmp
jbe
sbbl
clc
repnz
and
add
sbb
fs
mov
jb
js
repz
popa
daa
cltd
addr16
in
out
dec
mov
jp
ror
mov
jmp
movsl
mov
test
repz
inc
aad
outsb
sub
and
mov
das
or
push
cmp
lds
into
mov
fistpll
jno,pt
sbb
sahf
cmp
imul
or
test
pop
enter
pop
fdivs
xor
push
xor
fisttps
imul
push
das
jle
out
cltd
push
lret
xchg
dec
xchg
fs
fdivrs
fcompl
inc
mov
int
cmp
in
out
loope
mov
je
stc
add
mov
and
inc
pusha
das
pop
test
mov
xchg
xor
fbld
mov
out
dec
xor
jmp
les
or
imul
inc
scas
or
sahf
push
test
aas
out
repnz
cmpsb
mov
loop
insb
es
add
mov
lret
stc
dec
dec
sbb
jne
adc
mov
xor
leave
sbb
sub
lret
sub
in
sbb
nop
test
lods
jg
xchg
push
divl
cli
adc
aad
push
shl
lret
lcall
mov
xchg
fisubrl
loope
pop
pop
xchg
sub
dec
insb
aaa
push
pusha
or
out
adc
call
add
jl
loope
mov
jne
add
push
push
jae
add
cld
xor
cltd
cmpsb
fs
push
inc
pop
pop
incb
mov
fwait
insl
hlt
add
jge
bound
cwtl
sbbl
xor
push
push
cltd
frstor
daa
test
mov
es
dec
sub
mov
cmp
or
jmp
lods
inc
inc
and
mov
inc
inc
adc
xor
jmp
pop
fwait
push
popf
or
lahf
addb
aam
push
pop
clc
push
dec
insl
jecxz
adc
add
enter
xor
cmp
add
bound
repz
cld
jae
test
and
jge
je
sbb
add
in
dec
and
push
leave
in
sub
add
mov
jns
ret
imul
adc
sbb
add
xor
cmp
and
mov
mov
lods
add
sbb
mov
loope
inc
lds
dec
xor
stc
pop
jne
jbe
aam
inc
insl
xchg
adcl
pushl
mov
sub
mov
jl
dec
pusha
hlt
imul
aam
sbb
sbb
je
dec
jnp
stos
mov
sbb
adc
pop
adc
lods
movsl
dec
and
lcall
pop
inc
inc
jl
rcrb
sub
inc
push
in
and
inc
repnz
xor
mov
or
sahf
je
xor
lods
dec
or
sti
aad
xor
xor
cmp
jmp
out
ret
push
xor
sar
jmp
or
stc
push
mov
int
mov
imul
xchg
insl
dec
jae
pop
daa
jae
xor
jo
mov
scas
or
pop
mov
sti
loop
sbb
shrb
push
mov
rcll
bound
scas
imul
imul
movsb
inc
add
les
cmpsb
pushw
xor
cli
push
pushf
and
mov
sub
rcll
adc
add
mov
mov
jnp
sti
stc
and
and
mov
outsb
push
dec
aam
jge
push
inc
xchg
lret
xchg
bound
mov
adc
testb
push
lret
mov
sbb
movsl
sub
scas
pop
decb
mov
add
cltd
aas
inc
aad
dec
mov
cmc
fistpll
fistps
arpl
movsl
sbb
cmp
xchg
push
popa
jmp
xchg
pop
shrl
cs
or
mov
and
inc
es
pushf
jns
sub
data16
cwtl
cmpsb
sti
xchg
sub
lods
mov
cltd
pop
and
push
out
mov
repz
mov
pusha
imul
rcrl
cli
add
add
dec
xor
mov
or
add
lcall
inc
jne
jo
inc
cmpl
sbb
sbb
stos
dec
adc
or
and
jecxz
xor
mov
inc
cmp
jb
outsl
lret
clc
adc
lahf
sbb
xchg
mov
dec
push
add
outsb
push
mov
insl
test
outsb
or
push
std
dec
jmp
and
jne
test
cmp
lea
mov
push
test
mov
addr16
add
mov
dec
push
movsl
mov
jge
mov
out
mov
cmp
pop
inc
imul
or
fsubs
lds
add
into
cld
mov
pop
les
lcall
jl
in
mov
sub
cmpsl
cld
jl
pop
fldenv
repz
xchg
xchg
pop
jp
mov
popa
pop
std
pop
in
push
les
mov
fmuls
aam
loopne
popa
or
insb
push
pusha
or
lods
push
add
stc
jno
xor
fbstp
sub
cmp
insb
sbb
and
movsl
lret
fldenv
enter
call
imul
sbb
inc
cmc
fdivrl
add
insb
neg
imul
dec
cmpl
jecxz
mov
pushf
clc
orb
sub
or
sub
stos
stc
fdivrs
lret
lcall
sbb
icebp
sbb
aad
sub
sub
mov
mov
fidivrl
mov
xor
or
jb
xchg
or
leave
nop
mov
pop
out
iret
lcall
fisttps
sbb
add
fisttps
mov
pushf
pop
cmc
and
mov
xchg
stos
sbb
push
loop
push
sub
imul
pop
dec
mov
push
mov
orl
arpl
inc
xchg
mov
test
test
dec
lea
xchg
sbb
mov
adc
scas
lahf
jnp
cli
xor
mov
mov
mov
mov
shll
stos
mov
cli
sbb
pop
dec
xchg
imul
pop
inc
cmp
pushf
out
jle
adc
jo
xor
test
ja
fnstcw
loope
mov
mov
sbb
cmp
jb
das
xchg
xchg
sub
clc
bound
out
add
jecxz
stos
inc
cmp
test
hlt
pop
push
add
mov
jae
sub
gs
pop
push
les
xorb
xchg
lods
cmp
jl
mov
cmc
stc
loopne
adc
adc
cmp
ret
mov
or
lcall
shll
add
in
push
xor
mov
std
in
push
xchg
or
dec
sbb
int3
decl
add
sbb
mov
jbe
mov
add
arpl
mov
inc
adcl
push
orl
sbb
mov
fwait
xor
rclb
xor
arpl
sub
pop
push
inc
daa
imul
xchg
js
cmp
jbe
cwtl
ja
in
cmpsl
mov
testb
shlb
adc
ret
jmp
mov
incb
data16
mov
testb
movb
inc
mov
test
out
inc
cmpsb
ss
cmp
aad
inc
decl
mov
push
adc
lret
addr16
jmp
mov
andl
push
cmpl
rol
cld
aad
sub
pop
faddp
out
lods
or
push
rorl
mov
loopne
jns
out
enter
inc
loop
dec
inc
or
ds
push
pop
add
add
mov
push
rorl
movsl
or
ss
push
ficompl
inc
ret
mov
test
push
pusha
adc
testl
out
xlat
xchg
xchg
cmp
mov
in
and
jb
push
cwtl
scas
mov
pop
daa
mov
movq
mov
insl
stc
add
addr16
push
fsubrl
lret
cmp
daa
and
mov
rorb
xchg
mov
lods
mov
xor
pop
xchg
sbb
int3
movl
mov
jbe
std
or
jmp
das
push
lret
sbb
fsubs
movsb
sbb
fcoml
shrl
negl
cwtl
add
fbstp
mov
mov
push
xor
xor
xchg
mov
inc
push
mov
xchg
inc
push
daa
inc
outsb
ljmp
xor
std
xor
outsl
push
data16
dec
mov
bound
xor
fisubrl
cld
dec
xchg
arpl
or
jno
mulb
stc
cmp
les
adc
imul
push
xor
iret
adc
pop
mov
mov
push
daa
nop
cltd
mov
stc
pop
xor
xchg
out
daa
or
mov
jecxz
movsb
call
adc
outsl
push
mov
int
cmpsl
xchg
pusha
sarb
fyl2xp1
nop
fmuls
jecxz
nop
xor
fimull
lods
fimuls
test
lahf
jmp
in
dec
iret
lret
dec
mov
movsl
les
in
cmp
adc
scas
call
push
push
and
xchg
fmul
jns
xchg
dec
pop
ljmp
fidivrs
mov
mov
jo
mov
lcall
and
lock
decl
mov
imul
add
xchg
push
cli
add
sbb
adc
pop
inc
divb
ljmp
jge
jg
mov
mov
dec
clc
sub
dec
cltd
sahf
mov
jo
sbb
je
pop
lcall
mov
adc
sbb
cs
xchg
je
ljmp
push
popf
aad
inc
mov
aas
nop
in
cmp
lods
and
aas
icebp
or
sahf
push
arpl
enter
out
or
push
lock
fwait
pop
cmp
xchg
xor
sub
and
dec
push
jecxz
mov
pop
cld
push
mov
je
dec
lods
xchg
stc
mov
mov
test
js
subb
cmpl
add
call
xlat
add
mov
ret
js
das
mov
aaa
je
icebp
filds
mov
xor
repz
jle
mov
mov
and
aad
jnp
jl
test
gs
or
add
inc
std
sbb
jp
mov
ss
push
dec
adc
es
dec
in
or
fucomp
jle
mov
xchg
insl
or
fwait
sbb
dec
sbb
test
mov
dec
inc
sahf
mov
shlb
cs
sub
push
cmp
addr16
shlb
or
xchg
add
adcl
rol
mov
stc
push
addr16
lret
and
or
dec
jp
jge
test
rolb
and
pop
cmc
mov
mov
aaa
cmp
rcll
fwait
popa
sub
les
adcb
lds
js
outsb
inc
das
mov
inc
iret
imul
pop
inc
xor
insl
xor
cmpsl
jle
mov
mov
loope
sbb
mov
lret
mov
xlat
xor
jge
mov
xchg
inc
jmp
xor
xchg
xor
sahf
push
lret
loopne
fcoml
dec
cmp
repnz
gs
rcll
icebp
subl
push
lea
shrl
lds
mov
mov
fiaddl
xlat
jns
inc
fcoms
adc
pusha
adc
cltd
pop
mov
or
dec
lea
push
jno
mov
add
push
mov
repnz
enter
in
outsl
adc
call
and
cmp
pop
mov
jge
push
adc
adc
pop
dec
cwtl
pop
out
test
divl
mov
scas
sarl
shlw
mov
pop
push
sahf
xchg
dec
fdivrl
xchg
lahf
pop
mov
pop
jbe
pop
cli
shlb
scas
push
jle
xchg
add
push
in
pop
movsb
xchg
fistps
cmpsl
es
pop
inc
test
hlt
mov
gs
fcompl
and
insl
jecxz
xor
out
jnp
lods
push
mov
outsb
add
outsb
ljmp
shlb
pop
cmp
inc
popf
sti
js
daa
sarl
dec
inc
arpl
xchg
fistpl
in
inc
adcb
imul
and
pusha
and
mov
add
add
xor
outsl
rcrb
mov
lea
jmp
cld
sbb
loope
cwtl
push
aad
ror
mov
adc
push
aad
inc
call
pop
inc
xor
orb
out
add
enter
xor
lahf
dec
add
sti
int
call
inc
test
test
jne
sarl
js
add
dec
popa
daa
jbe
push
stos
add
das
fadds
insl
test
dec
in
pushf
fbstp
pusha
call
dec
dec
and
push
xor
mov
rol
adc
push
scas
ss
movsl
idivl
movsb
sub
cld
sub
inc
mov
adc
sbb
push
lods
fistpll
arpl
adc
mov
dec
dec
hlt
loopne
test
pusha
test
aad
mov
fstpt
ficomps
add
pop
jmp
andl
or
pop
out
pop
lds
jmp
xor
fisubrs
je
pop
xchg
jle
hlt
dec
in
pop
mov
add
mov
sub
mov
mov
or
or
out
cmpsb
loope
adc
sahf
jno
push
sbb
sub
mov
xor
adc
lahf
iret
pop
jns
xor
lret
pop
push
bound
xchg
adc
mov
mov
pop
gs
repnz
cmp
dec
es
and
shrb
mov
cmc
test
push
mov
sbb
pop
mov
out
test
jle
fnstenv
not
and
dec
push
repz
pop
mov
and
push
pushf
sub
or
cmp
jp
iret
jno
es
cmp
sbb
iret
sub
dec
int
cmp
xor
lret
sub
lea
cli
arpl
push
pop
mov
cmc
into
ss
pop
cli
mov
cmc
fdivrs
adc
or
inc
sub
xchg
in
push
push
test
push
mov
xor
cmp
jecxz
pushf
int3
add
subl
out
iret
sub
push
and
leave
pop
jle
loope
divb
ret
adc
jmp
pop
mov
jae
mov
adc
lret
dec
dec
dec
pop
xor
mov
cld
test
mov
rcrb
aaa
aaa
nop
sub
pop
xor
mov
cmp
pop
and
ljmp
mov
or
popf
push
xchg
jns
inc
push
push
gs
xor
insl
aaa
stos
push
daa
add
inc
test
mov
cld
je
fdivrl
dec
inc
arpl
adc
stc
sub
pop
pop
pop
loopne
out
and
jmp
pop
enter
daa
lock
scas
cmp
mov
push
or
mov
ret
int
lahf
mov
mov
push
sbb
mov
mov
jns
xchg
sub
cmp
mov
mov
movsl
xchg
cmp
mov
inc
xlat
fsts
sbb
cmp
repz
xchg
xor
sbb
aaa
shl
xchg
xchg
in
loope
xchg
dec
rcll
shll
pusha
inc
popa
add
inc
or
lea
dec
fldt
dec
lret
popa
push
fcomps
jmp
test
cld
rolb
imul
std
jae
test
lret
jae,pt
inc
mov
jnp
aas
jns
jo
std
xor
xchg
scas
popa
adc
insb
cmpsl
mov
jo
cmp
xchg
pop
loop
packssdw
stos
xorl
sbb
dec
fs
mov
loopne
mov
aaa
mov
push
jne
push
add
sbb
push
push
adc
enter
inc
mov
jmp
sbb
and
loope
icebp
inc
and
loope
xor
outsb
jb
das
xchg
cld
sahf
xchg
lcall
lcall
jp
push
cli
and
xor
aad
xchg
cmp
and
sub
rolb
inc
sti
repz
sarl
lahf
repnz
adc
arpl
pop
cmpsl
in
es
add
clc
lds
ret
jne
jmp
movb
cwtl
or
test
jbe
adc
addr16
sbbb
imul
dec
das
mov
pop
pop
call
add
cltd
adc
imul
fildll
cmpb
stos
lods
sub
sub
stos
sbb
and
fnsave
outsb
mov
push
in
adc
pop
dec
mov
xchg
dec
lret
nop
je
inc
or
cmp
pminub
sarb
sub
push
aam
aad
jecxz
inc
xchg
and
mov
lahf
aad
lret
jp
mov
dec
movsl
push
movsb
pop
loope
sbb
divl
emms
xorl
imul
mov
and
sub
mov
adcl
pushf
xchg
inc
imul
cmp
sahf
ret
popa
cmc
and
mov
push
outsl
add
mov
in
mov
xor
jecxz
out
push
fsubrs
push
mov
into
xchg
mov
les
clc
lret
nop
sbb
out
dec
mov
adc
movsl
inc
xor
cmpsb
scas
leave
aad
adcl
ljmp
mov
lods
addr16
mov
push
mov
scas
jo
adc
imul
cmp
adc
repnz
inc
xor
lret
cmp
outsb
pop
xchg
and
xor
in
jbe
std
or
rcrb
push
in
or
and
dec
xchg
push
xchg
je
notb
push
cmp
addr16
push
pop
cmc
push
test
lock
int
cli
adc
fwait
loop
xor
adc
push
push
addr16
daa
jns
fst
mov
call
jg
sti
dec
xor
mov
stos
mov
les
and
inc
mov
push
lret
ficoml
jno
call
mov
js
and
repz
dec
add
xor
pop
loopne
imul
sbb
and
ds
loope
cltd
rcl
rorl
out
mov
jp
les
out
stos
fwait
aas
cs
sub
pop
sti
lods
adc
scas
push
fdivrs
or
stc
icebp
push
sbb
add
add
add
dec
bound
inc
sbb
cmc
call
ja
fs
dec
mov
xchg
fdivp
mov
dec
dec
pop
in
push
das
and
je
mov
sub
lock
push
jg
jecxz
out
push
out
hlt
cltd
mov
mov
sbb
cmp
daa
push
incb
lret
andb
mov
popa
int
ss
neg
and
aas
cmpsb
push
sbb
stc
adc
cli
pusha
psadbw
les
push
js
cmpsb
sub
test
loop
pop
sub
mov
mov
and
add
out
add
mov
rclb
test
outsb
xor
pop
inc
cld
cmp
ja
test
cmpsl
movb
in
subl
mov
jb
outsb
push
imul
inc
jno
outsb
rcrb
sbb
cmp
pop
movsl
sbb
mov
std
pop
popl
gs
jmp
inc
faddl
sub
add
and
and
inc
add
dec
push
daa
aad
mov
cmp
sti
xchg
xchg
xchg
jle
dec
scas
aam
std
mov
loop
mov
ss
ret
adc
cmp
inc
setle
scas
testl
inc
rcll
cmp
adc
pop
mov
ja
out
les
lods
mov
ljmp
jno
and
int3
in
jp
dec
loopne
mov
popa
fsts
inc
mov
and
in
xchg
aam
or
mov
cmp
test
adc
cmpsl
mov
jns
fstl
sar
aad
xchg
inc
or
out
daa
inc
arpl
jle
add
pop
mov
push
aam
mov
cs
xchg
aad
pop
cltd
mov
pushf
sbb
push
xchg
insl
ljmp
enter
test
fiaddl
rcll
pop
xor
jecxz
lea
rcll
mov
add
and
xor
fmuls
push
jmp
jnp
aam
lods
lea
sub
jo
scas
pushf
mov
lods
or
pop
aas
shl
leave
add
push
inc
aaa
nop
enter
xor
stos
jae
push
jbe
xchg
push
jnp
es
push
cmc
out
lcall
mov
mov
or
outsl
repnz
mov
mov
arpl
out
inc
test
xchg
stos
ltr
in
popa
jecxz
xor
stos
das
scas
xchg
mov
or
add
ret
out
jecxz
push
iret
mov
pop
xor
ret
dec
jge
mov
pushf
hlt
loopne
mov
repnz
add
fldl
fisubrs
pop
or
mov
cmp
jmp
jmp
dec
mov
scas
clc
cmp
pop
aas
jge
adc
test
js
sub
mov
jl
cmc
cld
sti
jmp
add
sbb
fisttpl
in
out
fldt
sahf
xlat
jae
xor
push
jo
ja
mov
mov
inc
jle
sar
pusha
cltd
std
and
fisttps
mov
jb
testb
cli
lods
jge
lds
or
loope
pop
cmpsb
push
pop
popf
fcoms
sub
inc
shrl
movsl
mov
xchg
lods
fwait
call
cmp
hlt
lcall
into
inc
loop
movsb
repnz
fdivs
mov
enter
cmp
jg
out
test
test
adc
mov
dec
scas
cwtl
push
out
adc
mov
push
or
test
std
in
or
sbb
fisubs
mov
stos
or
push
fistpll
mov
hlt
push
push
jo
jbe
fdiv
notl
inc
fdivp
sub
in
addr16
adc
sbb
xchg
aaa
mov
int
add
xchg
or
jecxz
cltd
stc
orl
call
shlb
jbe
stos
addr16
movsl
imul
cmp
jmp
repz
sub
mov
loopne
movsl
jb
push
mov
fs
lods
sbb
bound
pop
fcoms
lods
pop
neg
fs
in
pusha
js
cmp
into
test
mov
dec
mov
ret
and
and
dec
jns
repz
daa
add
int
sbb
pop
inc
cmpb
js
push
cli
lcall
mov
das
enter
cmpsb
aaa
or
sti
jbe
mov
shrb
les
ljmp
mov
jnp
jne
ret
dec
aas
jno
cmc
pop
inc
dec
cs
pop
ljmp
inc
mov
inc
or
or
testb
pop
xchg
dec
sub
and
pop
in
enter
daa
mov
jo
dec
lret
add
lret
inc
jle
das
loope
orl
dec
inc
dec
jo
fadds
push
inc
das
dec
repnz
xchg
and
push
pop
in
cli
test
jbe
test
mov
mov
inc
sbb
xor
shrb
mov
push
addr16
xchg
pop
out
pop
add
dec
shlb
sub
fs
mov
aaa
in
shlb
fs
aaa
mov
movaps
mov
cmc
mov
in
push
push
lock
in
jle
and
jmp
xchg
push
std
cmc
popf
cmp
fstps
xor
in
fisttpll
and
xchg
popf
and
pop
stos
int3
sub
iret
pop
mov
imul
inc
das
pop
imul
outsb
push
cmp
std
add
cmp
pop
and
mov
sbb
and
push
add
jp
mov
loopne
dec
jmp
pop
xor
rorb
pop
xor
std
out
inc
fwait
popf
fistpl
call
cmp
jns
out
fs
lcall
adc
mov
andb
inc
loopne
inc
cs
pop
xchg
sbb
cmp
pop
insb
mov
add
push
mov
jp
fptan
lock
rolb
test
lods
outsl
push
or
and
sbb
or
leave
aas
adc
pop
jns
or
rcll
shll
pusha
mov
icebp
lods
add
jg
out
pusha
call
jns
xchg
mov
cmc
daa
mov
test
lea
in
fsubs
inc
lock
jmp
cmp
dec
ljmp
mov
jg
out
pop
fldcw
jg
jp
mov
add
and
pop
stc
subb
sub
inc
lock
inc
and
lcall
in
dec
in
push
push
insl
lods
arpl
dec
add
or
jb
mov
sbb
sbb
dec
mov
mov
jecxz
pop
xor
les
jecxz
stos
ljmp
iret
mov
clc
xlat
or
push
iret
cmp
and
mov
mov
inc
iret
cli
push
ja
inc
scas
or
mov
or
cmp
shl
andl
loopne
je
dec
std
out
push
mov
test
and
and
adc
push
cmpsl
inc
fistpll
or
ret
add
mov
sbb
inc
pop
and
repz
xchg
stos
jecxz
adc
out
push
daa
rorb
rcl
push
je
sbb
addb
fists
jmp
sub
inc
mov
lea
in
mov
js
xor
and
jno
loope
adc
ret
ret
add
std
nop
cmp
inc
push
stc
stos
lcall
push
push
xchg
pop
imul
xchg
cmc
jae
das
xchg
mov
iret
mov
inc
dec
jae
in
outsb
insl
jb
insl
and
inc
inc
loopne
fdivs
repnz
adc
ret
test
aam
into
sub
push
xchg
pop
dec
sti
adc
adc
mov
int3
adc
mov
gs
pop
out
das
js
inc
jne
inc
shlb
outsb
mov
out
hlt
pop
mov
ret
inc
adc
adc
pop
mov
in
mov
or
sar
push
imul
push
and
push
cmp
addr16
aas
in
cmp
cmp
push
xor
jl
push
and
clc
sub
test
mov
sbb
icebp
mov
cli
mov
out
push
inc
shlb
jns
movsb
imulb
mov
popf
stos
mov
fldl
mov
inc
cs
push
mov
cld
jbe
dec
xor
mov
popf
pop
sarb
in
dec
fimull
mov
jmp
rcrb
jp
mov
aas
pop
mov
dec
jle
push
push
rolb
cmp
roll
sahf
ja
aad
jge
jae
mov
fsubl
mov
jns
movsl
jecxz
lock
ss
lock
cltd
adcl
jne
shrl
popa
jmp
out
insl
fbld
fadd
clc
mov
dec
dec
sbb
dec
adc
cmp
xchg
dec
test
inc
push
xor
repz
movsb
cld
push
in
cmc
push
push
loop
sub
scas
sub
fwait
pop
fcmovnu
testl
test
mov
mov
push
fwait
pop
pop
add
jle
pop
stos
inc
pop
sbb
fiaddl
ret
jae
ja
addr16
scas
lods
inc
mov
shlb
and
lods
aad
xor
ret
and
fbstp
inc
xchg
or
nop
adc
cmpsl
xchg
pop
push
in
push
pop
aad
out
add
and
xor
insb
mov
or
jb
or
inc
push
jno
pop
call
leave
sbbb
jle
pop
xchg
int3
cmovnp
mov
push
aaa
sub
jb
pop
bound
mov
aad
xor
push
out
push
insb
inc
and
add
jge
cwtl
pop
js
push
gs
push
imull
stos
mov
mov
mov
sti
mov
sub
jb
and
push
out
mov
call
test
push
push
ss
decb
ficomps
addr16
xchg
repz
pusha
ja
sub
fsubrs
dec
mov
mov
xchg
jnp
dec
dec
push
ror
pop
dec
mov
add
push
js
call
mov
std
insb
inc
aam
daa
cmp
and
sbb
xor
scas
push
lods
or
mov
mov
lods
popa
addr16
xor
insb
rorb
icebp
pop
fidivs
sub
sub
mov
aad
push
sbb
orb
test
stos
and
loopne
mov
sub
in
mov
xchg
dec
dec
lahf
push
pop
xchg
test
test
test
jge
outsl
scas
rorb
sub
int
test
push
pop
rorb
loopne
sbb
sub
subl
out
test
dec
mov
xchg
cmp
and
mov
add
mov
aad
repnz
orb
jmp
cmp
inc
out
mov
aas
sub
xor
popf
mov
push
sub
sbb
pop
sub
in
aas
xchg
rcrl
inc
enter
loop
jbe
mov
iret
out
xchg
lahf
mov
cmpsl
cwtl
pop
sub
sbb
je
mov
andl
mov
ljmp
out
aaa
mov
lea
stc
push
or
addr16
test
inc
and
mov
adc
data16
xor
popa
ret
push
pop
xorl
or
mov
js
inc
mov
in
mov
shlb
pop
scas
out
xor
xor
scas
shl
dec
popf
stc
or
mull
hlt
adc
dec
adc
cwtl
push
stos
pusha
or
xor
jl
mov
out
mov
outsl
sbb
push
jbe
add
pusha
insb
sbb
adc
test
gs
dec
mov
lds
cwtl
cmp
shll
mov
mov
mov
inc
call
loopne
mov
push
adc
mov
jne
jb
rclb
loope
mov
sbb
add
and
cmp
push
xor
arpl
fucomi
cld
xchg
fs
push
xchg
ss
out
daa
jmp
fadds
mov
in
jg
xor
or
lock
dec
adc
mov
sarb
mov
jo
les
pop
int3
mov
mov
sahf
adc
push
loopne
adc
mov
adc
mov
xchg
xor
add
dec
cmp
jb
je
stos
subb
test
test
in
outsb
int
imul
ret
insb
xor
dec
push
dec
ja
icebp
pop
mov
jmp
adc
dec
aaa
leave
push
lret
testb
scas
inc
test
test
stos
sub
cs
xor
mov
fs
cli
push
flds
push
inc
push
out
lcall
mov
arpl
test
jle
inc
addl
int3
mov
adc
push
sub
aam
push
cmp
push
jmp
loopne
rcrb
jecxz
cmpsl
sub
out
jmp
cmpsl
and
test
mov
cli
loop
push
jl
xchg
push
xchg
scas
int3
mov
sub
sbb
jl
xchg
jmp
fucomip
fistpl
jmp
mov
mov
mov
inc
mov
cmpsl
arpl
pushf
xchg
out
jnp
or
push
push
mov
add
sti
and
loop
cmp
xchg
nop
cwtl
out
iret
in
shrb
jae
lret
push
lret
insb
clc
cli
leave
jns
or
add
push
mov
sbb
and
sub
pop
jmp
repz
scas
or
sahf
inc
fnstenv
test
data16
pop
out
and
push
rorb
test
xchg
fidivs
outsb
jecxz
mov
test
mov
xor
pop
mov
jg
pop
sti
xchg
imul
int3
and
or
pop
mov
inc
dec
shll
mov
in
add
mov
sbb
pop
lods
ljmp
inc
addr16
movsb
in
sub
xor
cltd
int3
lds
xchg
adc
pop
xor
sbb
dec
cmp
ja
lods
jge
jge
cmp
ss
jo
xchg
notl
dec
pop
sub
lods
das
js
roll
jae
mov
mov
cli
push
loope
sbb
rcll
pop
out
dec
popf
lahf
clc
dec
jp
sbb
imulb
movsbl
mov
ljmp
push
ficomps
movsl
xor
ret
mov
test
pop
jmp
sub
dec
adc
jb,pn
dec
hlt
fwait
sti
std
insl
push
and
xlat
sbb
add
mov
mov
ret
sbb
ss
lds
or
mov
inc
sbb
hlt
xor
sub
lock
xor
cmp
ljmp
sbb
mov
dec
adcb
add
repz
mov
stc
mov
mov
adc
mov
shrl
and
mov
lcall
lret
and
xchg
lds
mov
adc
add
and
pop
xchg
stos
stc
sub
sub
int3
fs
test
outsl
fists
dec
lahf
adc
clc
sub
cvtps2pi
pop
or
data16
and
out
ljmp
pop
cmp
push
sub
adc
mov
jne
fbld
push
test
lods
mov
pop
addr16
data16
sti
and
and
rolb
in
test
clc
sbb
add
btr
mov
dec
or
sbb
push
shrb
vxorps
stc
fs
dec
add
adc
adc
push
xchg
cmp
int
jne
mov
xlat
dec
scas
test
xor
cltd
add
mov
out
adc
xchg
in
sub
dec
popf
or
movl
addb
pop
call
leave
js
jne
xor
push
sbb
sarl
movsb
sahf
test
xchg
or
pop
mov
add
inc
push
imul
push
mov
ficoms
add
mov
stos
jle
adc
int
imul
add
sahf
xchg
es
adc
push
mov
jg
mov
rolb
cmc
mov
int3
idivl
mov
arpl
lahf
pop
repz
movsl
jne
xchg
sub
in
adc
jnp
sbbb
inc
shr
pop
cmpsb
fidivrl
or
mov
call
mov
mov
daa
sub
add
enter
shlb
cmc
add
notb
sub
scas
insb
xlat
stos
or
bound
sbb
nop
xchg
or
xchg
sub
mov
ljmp
addr16
push
pusha
repz
sbb
aad
and
int
cmovne
cmp
aaa
mov
scas
jae
movsl
sbb
or
aas
push
mov
shrb
pop
imul
dec
jo
outsl
aam
or
add
sbbl
fsub
jbe
fstpt
inc
jmp
cmp
mov
lret
movsb
dec
dec
dec
add
xchg
mov
add
outsb
and
sbb
addr16
dec
push
sbb
in
fldcw
dec
mov
aaa
cld
das
stos
xor
sbbl
ljmp
mov
jl
pop
clc
add
fidivrs
or
iret
adc
pop
les
rorl
xchg
out
lret
adc
ss
mov
in
pop
in
jb
jp
or
loopnew
xchg
neg
outsb
sbb
mov
shlb
call
aad
push
jbe
cmp
mov
mov
movsb
outsb
jno
lret
xor
pop
push
sahf
pusha
xchg
and
icebp
jg
enter
cmp
xchg
mov
mov
cwtl
sub
pop
notb
push
pop
sub
dec
scas
pusha
dec
pop
jg
jmp
arpl
stc
outsb
call
into
leave
in
cs
cmpsl
and
push
xchg
inc
inc
mov
and
push
in
rolb
push
cmp
push
rolb
stos
xchg
les
movsl
push
pop
mov
insb
xor
loop
mov
push
in
lods
incb
jecxz
data16
or
push
xchg
mov
and
pushf
pop
adc
pop
and
call
pusha
imull
adc
fnstsw
inc
div
adc
pop
fnstcw
jno
es
stos
mov
push
jg
sub
imul
sbb
mov
cld
jae
jne
push
in
std
and
sarb
je
and
das
xchg
or
adc
push
inc
jecxz
push
fistl
xchg
mov
cli
or
jae
decb
cmpb
popf
cmp
xchg
jo
jle
jecxz
push
dec
xor
adc
dec
je
cmc
xchg
shrl
pop
fs
imul
pop
sub
add
shll
xor
pop
jne
mov
stos
push
dec
shl
popa
inc
jae
jnp
jl
jo
sahf
test
adc
sbb
mov
lds
xor
sarl
lock
add
pop
cltd
fimuls
adc
xor
mov
dec
fisubrl
daa
mov
inc
dec
ljmp
push
add
lea
xor
sbb
inc
dec
imul
mov
pop
cs
push
pop
adc
repnz
xchg
arpl
fwait
sub
xchg
push
dec
movsl
gs
stos
xchg
lret
mov
lfs
xor
jecxz
into
xor
cmpl
jns
imul
xchg
sub
jg
xchg
mov
adc
std
xchg
test
lds
jo
mov
xor
adc
mov
mov
rcrb
and
dec
in
popf
dec
in
aaa
imul
popf
or
rcll
out
jno
pop
and
dec
in
lret
cmp
outsb
sub
mov
mov
ret
sbb
hlt
sbb
imul
xchg
pop
add
and
addl
jns
pushl
scas
mov
stc
push
mov
int
imulb
mov
fnstsw
jne
lods
mov
adc
sbb
sar
xchg
cwtl
pop
fistps
cmp
fistpll
push
push
push
std
inc
mov
js
sbb
orl
xchg
aas
mov
pop
xorl
pop
push
inc
push
sub
sbb
test
pop
addr16
scas
clc
sub
subb
rcrl
bound
and
das
cmpb
dec
jns
mov
pop
adc
xchg
mov
push
lock
gs
inc
xchg
cmp
sbb
insb
sahf
mov
stc
call
inc
inc
and
adc
outsb
fcomip
cld
out
push
stos
out
sahf
stos
cwtl
test
dec
dec
mov
or
ret
sub
add
jns
jno
negb
push
outsl
pop
and
dec
xor
mov
aas
pop
sub
fdivr
pop
ret
cwtl
fistl
sub
test
push
repz
das
in
std
push
scas
dec
enter
movsl
fsubrs
mov
adc
sbb
stos
inc
xor
push
sti
cmpsl
dec
add
inc
and
out
jns
inc
mov
inc
dec
dec
cld
psubw
rclb
or
mov
cld
mov
mov
das
sbb
enter
lods
shrb
push
sbb
inc
test
aam
daa
xchg
sub
dec
stos
push
cmpsb
jmp
inc
mov
inc
in
lcall
lea
fnstcw
mov
pop
cmp
and
dec
mov
xor
cmp
add
dec
push
or
push
fisubs
cmp
ret
mov
roll
ret
push
fmull
pop
pop
hlt
mov
rcrb
cltd
xchg
insl
cmp
jge
loop
pop
mov
add
rcrb
jns
and
xchg
xor
mov
mov
leave
sub
repz
sub
sub
or
push
cmp
and
mov
xor
sbb
pop
add
pusha
mov
xor
push
aad
xchg
mov
xor
cmp
add
pop
mov
ficoml
sub
jo
data16
aas
sub
dec
outsb
shl
sub
fs
xor
lea
mov
dec
pop
int3
push
outsb
gs
jecxz
and
mov
stos
sub
jno
sub
xchg
jne
sub
into
mov
inc
aad
xchg
xor
mov
addr16
out
fsubrl
adc
mov
push
jns
push
stos
xchg
lea
mov
sub
lret
aaa
jmp
mov
fcmovne
mov
xchg
fidivrs
cld
or
adc
and
sbb
stos
cmp
xlat
adc
mov
mov
into
xlat
push
mov
or
jb
addr16
stos
jge
adc
cmp
jbe
jle
cld
rol
data16
movsb
mov
xor
dec
les
jo
push
popf
fidivrl
nop
daa
shlb
out
hlt
sti
mov
dec
mov
shlb
call
js
loopne
and
sti
sbb
mov
cmpsb
dec
test
jnp
cld
negb
icebp
fcmovnbe
hlt
or
in
inc
xchg
das
jae
std
mov
and
xor
cmp
outsb
and
adc
subb
retw
aad
in
int3
movsl
je
int
sub
pusha
ja
push
fwait
loop
fiaddl
sbb
movsb
lcall
push
add
popf
popa
movsb
fldl
cmp
push
fs
mov
cmp
or
pop
loop
dec
mov
in
shl
iret
fmull
insl
sbb
popa
fidivl
sbb
xor
out
into
mov
adc
test
push
xchg
jecxz
scas
cli
xlat
mov
sbb
in
sbb
shl
ffreep
jge
mov
adc
shrl
sarl
sbb
push
popf
mov
ja
fmuls
ret
outsl
add
mov
cmpsb
inc
imul
in
cs
and
jecxz
pop
xchg
xchg
jecxz
pop
stos
push
insb
mov
mov
stos
test
lock
nop
push
das
int3
push
popf
lods
cmp
mov
xor
ds
testb
repnz
testb
mov
xor
jg
stc
stos
divb
shlb
clc
push
mov
idivl
push
add
clc
sti
jp
gs
les
rcll
outsb
ds
mov
aam
scas
ss
cmp
lds
cmpsl
je
jp
insl
add
mulb
out
aas
cmp
ret
adc
push
out
or
mov
jne
or
mov
gs
cli
push
push
jbe
mov
jne
fdiv
add
stc
jp
pop
stc
mov
adc
test
and
or
xor
adc
xor
out
jmp
pushf
ret
icebp
int
mov
adc
aas
gs
and
pop
dec
add
add
xchg
add
add
and
or
mov
call
movsl
shlb
or
out
inc
pop
movsl
dec
daa
fnstenv
stos
push
xchg
sbb
jnp
cmpl
xor
jns
xorl
cmp
ret
push
xchg
std
out
test
loope
repnz
inc
lret
jge
cmp
adc
rcrb
ja
cli
lea
popa
and
jns
jle
lret
xlat
push
mov
dec
or
popf
int
jne
fildl
ljmp
test
fwait
testb
sahf
mov
xchg
lock
and
and
movsb
jle
add
andl
leave
xor
cmp
ljmp
bound
lahf
fwait
mov
faddl
mov
xor
out
lret
mov
xor
jle
aam
arpl
out
jno
add
lahf
dec
push
mov
cmp
mov
gs
fcmovnb
push
mov
leavew
jne
pop
add
pop
fsubl
push
cmpb
xchg
popf
pop
out
outsl
call
frstor
popa
mov
sub
lods
xchg
pop
inc
xchg
push
fstl
int3
and
fxch
lcall
push
test
inc
jo
int3
xor
popf
push
mov
mov
jae
push
push
pop
dec
in
inc
andl
lock
mov
imul
int3
adc
sbb
add
cs
and
and
and
adc
data16
push
lock
and
jle
mul
adc
dec
xchg
push
cmp
xor
mov
insl
lods
or
movsl
fnstsw
cmp
jg
mov
add
imul
push
imul
and
in
mov
ja
jne
insl
cmpsb
or
enter
add
mov
fwait
adc
cli
dec
xchg
test
pusha
add
int3
sti
mov
or
or
cmpsb
mov
jbe
xchg
ss
bound
mov
dec
jmp
ret
jno
cwtl
jmp
push
jne
test
js
jl
pop
in
mov
mov
hlt
xor
ret
jo
or
arpl
adc
mov
cli
pop
out
rclb
ss
xor
xchg
inc
jp
xchg
out
es
leave
push
lret
fdiv
repnz
jno
test
mov
pop
icebp
adc
aas
ja
mov
stos
add
add
enter
fidivrs
pop
pop
jcxz
leave
push
adc
fisttpl
xchg
das
jmp
mov
push
jle
sbb
and
jnp
inc
dec
mov
fisttps
pop
leave
repz
lods
adc
xor
xor
push
cli
add
jmp
mov
jge
pop
inc
imul
in
mulb
jne
xchg
cmpsl
fwait
push
mov
cmp
pop
insb
sbb
pop
in
rclb
outsb
inc
pop
imul
scas
sbb
push
pop
cwtl
or
xchg
outsb
push
andl
cmp
into
repnz
jl
shll
das
and
fldl
cld
xchg
pop
sbb
xor
add
jl
daa
fwait
sbb
xor
cli
popa
cmc
std
jge
ss
mov
stos
mov
cmp
pop
out
mov
shl
sbb
out
push
scas
rclb
and
jg
lret
or
aas
lods
mov
dec
mov
and
out
pop
pusha
call
mov
mov
enter
push
mov
lcall
push
negl
test
andb
and
dec
mov
push
and
scas
push
pop
sti
inc
adc
fistpl
cmp
and
cmp
pop
push
jo
mov
pop
add
push
ret
xor
loop
mov
lock
adc
movsl
nop
sar
nop
mov
cmc
xchg
fsubp
movsb
daa
sub
jecxz
ficompl
in
shll
sub
lcall
test
push
insb
cmp
in
mov
add
in
sbb
push
icebp
mov
push
cmp
jns
fiadds
dec
or
dec
jp
cmpsl
and
mov
jno
push
mov
sub
mov
pop
cltd
jp
shll
fmulp
xlat
mov
out
pusha
push
movsl
mov
inc
pop
mov
and
push
rcrl
xchg
daa
or
cmpl
xor
shll
push
mov
mov
not
movsb
fisubs
inc
cmp
dec
xchg
je
je
mov
lcall
xchg
jle
cltd
jne
in
xor
mov
psubw
add
ret
xchg
je
aaa
mov
jl
and
movsb
jmp
xor
jecxz
out
lock
push
leave
xchg
mov
movsb
jno
adc
xchg
mov
adc
lret
in
jg
pop
and
pop
push
xchg
leave
add
xchg
lret
sbb
adc
lret
lds
fs
jnp
movsl
aas
cmpsl
sub
push
insl
cmpb
rclb
or
add
fstl
fidivrl
xchg
mov
fs
stos
call
pop
dec
cmp
inc
and
js
fs
mov
jns
int3
adc
and
mov
mov
call
iret
pop
cmp
mov
daa
mov
cmpsl
pop
sub
outsl
fldcw
mov
add
fistps
call
fcompl
or
movsl
int
ss
in
xor
xchg
ja
mov
xchg
inc
sbb
inc
ret
popa
sbb
xor
pop
pop
jae
or
jmp
les
adc
push
xor
nop
fwait
cltd
pusha
xor
cs
push
dec
call
mov
ret
add
jo
jg
pop
jge
sbb
sarl
and
sub
lcall
jp
into
and
mov
ljmp
cmpl
xor
mov
push
aas
mov
mov
lea
shrl
xchg
adc
divb
int3
and
jecxz
mov
push
jns
mov
xor
iret
popf
loope
or
push
insb
add
or
inc
pusha
jbe
movsl
jle
jg
cs
add
out
inc
lcall
xorb
or
ret
cmp
mov
ret
dec
cmc
sub
mov
xchg
stos
pop
sahf
imul
jns
inc
gs
gs
stos
fnstsw
xor
sub
cmp
mov
mov
fadd
fsubr
mov
or
push
push
xchg
dec
pop
push
add
push
push
leave
dec
ret
push
cmp
sarb
jb
jmp
push
cwtl
sub
or
adc
sbb
jmp
cld
xchg
out
hlt
and
mov
stos
sbb
cmp
mov
cmc
mov
and
or
in
pop
mov
out
lahf
cs
jnp
fwait
push
pop
in
ljmp
shrl
aas
dec
out
xchg
xchg
les
and
inc
cwtl
pop
shll
fadds
dec
ss
mov
dec
inc
rcrl
addr16
pop
jbe
pop
mov
mov
sahf
jg
out
bnd
popa
dec
inc
cld
insl
mov
aam
inc
mov
daa
push
mov
adc
xchg
rol
aaa
out
fnstcw
cmp
insl
adc
lcall
xor
push
pop
inc
outsb
aas
rcrb
xchg
push
add
imulb
adc
pop
dec
fstps
xchg
xor
dec
lods
jecxz
cld
mov
or
sbb
add
add
add
sub
shll
lock
movsb
xchg
and
mov
sbb
jp
pusha
sahf
lcall
mov
fadds
xor
mov
and
xchg
and
pop
jl
push
xchg
loopne
cmp
cmp
adcl
jecxz
push
insb
in
shufps
push
scas
out
cs
mov
aaa
mov
push
es
fldl
jge
roll
aaa
ljmp
pushf
shll
sub
lahf
inc
inc
push
push
pop
movsb
sbb
into
xchg
add
fisttpl
xchg
push
clc
dec
mov
jbe
pop
mov
ficoms
push
jle
pop
movsl
sbb
cmp
cmc
popl
js
jne
insb
push
adc
out
adc
shlb
popf
push
mov
icebp
lcall
pop
pop
movsb
insl
daa
daa
lock
mov
out
icebp
loopne
cld
test
loopne
aaa
jge
test
mov
adc
fildl
jb
cltd
ljmp
pop
ds
in
mull
or
shll
pop
add
lret
clc
and
fwait
in
dec
int3
sub
pop
adc
daa
inc
inc
push
push
mov
jmp
mov
and
xor
stc
stos
sbb
mov
in
iret
les
pop
add
push
add
aad
push
pop
and
sbb
jo
or
fisubrl
popa
or
add
rorl
cltd
lods
loope
adc
pusha
scas
lods
dec
xor
xor
mov
imul
mov
bound
sub
daa
dec
sbb
sarb
xchg
lahf
jno
loope
pusha
sub
orl
lock
in
movsb
data16
push
cmpsl
clc
cs
add
dec
inc
stc
mov
dec
test
inc
loope
icebp
cwtl
pop
or
aad
insb
cmp
lret
psrlw
jo
jae
les
push
ret
dec
fwait
arpl
sub
ret
xor
aad
sbb
loopne
repnz
lods
mov
fldenv
jne
ds
or
mov
shlb
push
dec
fdivrs
push
movsb
cmp
hlt
scas
subl
popf
jnp
out
sbb
movsb
and
pop
mov
arpl
cmp
xor
fistpll
lahf
cli
pop
mov
push
cltd
jl
inc
mov
adc
xchg
xchg
ss
icebp
int3
adc
mov
ds
sbb
add
pushf
inc
jl
mov
or
out
pushf
xchg
outsb
pusha
cmp
push
sbb
mov
inc
pop
mov
lcall
inc
sub
and
rcrb
xchg
cmp
add
jne
dec
scas
fbstp
arpl
out
mov
mov
mov
xor
out
les
jne
jg
mov
in
das
adc
xchg
and
push
cmp
and
sub
scas
pop
or
pop
xlat
lret
dec
cmp
or
push
mov
push
inc
xor
pop
sub
jns
int
dec
mov
xchg
mov
repnz
leave
jb
movsb
rcrb
xorl
clc
shll
adc
repz
addl
loop
add
mov
adc
stc
xchg
jmp
test
call
das
mov
jo
stos
push
mov
nop
push
in
mov
or
pop
pop
push
sahf
aad
cmp
mov
jbe
test
mov
inc
leave
insb
std
mov
or
xchg
mov
in
mov
push
sub
nop
js
mov
xchg
test
test
sti
xchg
pop
popf
xlat
add
jg
jecxz
xchg
fdivs
jae
das
push
jne
sarb
rorl
pop
addr16
adc
push
fstpt
jg
ds
add
push
iret
inc
cmp
push
adc
notb
scas
inc
outsb
sti
sub
jp
out
xchg
aas
push
cmp
mov
aam
movsl
aaa
sahf
mov
out
add
mov
call
scas
jl
and
mov
mov
push
pop
xor
cltd
dec
mov
cwtl
push
jae
jno
lea
fwait
or
lahf
in
add
or
and
sbb
enter
inc
outsl
std
lahf
mov
xchg
dec
mov
out
loopne
ljmp
fnstenv
cmp
mov
mov
cmp
int3
adc
push
in
dec
outsb
jbe
hlt
mov
sub
xchg
rcr
dec
dec
cmp
ljmp
jg
lret
data16
lods
push
push
sub
repz
jl
std
mov
jl
aam
leave
sbb
push
fidivrs
xchg
inc
jmp
add
cs
pop
add
es
push
ret
in
mov
inc
enter
mov
sbbb
xor
or
les
repnz
fists
test
mov
test
mov
jbe
pop
jp
inc
jns
adc
scas
or
push
push
test
ja
jnp
sbb
inc
dec
or
jno
call
push
sahf
and
cmp
dec
ja
frstor
lahf
cmp
push
inc
xchg
popf
push
test
cwtl
xor
scas
xor
loope
and
jmp
sahf
sbb
and
xor
out
sub
sub
mov
test
pxor
iret
sbb
cmp
cmp
push
adc
cmc
bextr
faddl
aad
mov
xchg
pop
mov
cmpsb
sub
shll
stc
popf
push
jecxz
jnp
xchg
pusha
out
fs
movsl
cmp
aas
stos
jae
ret
push
add
push
subb
psrlq
mov
sub
mov
mov
jecxz
subb
ret
ret
movsb
das
mov
data16
adc
pusha
mov
inc
sti
or
scas
es
sub
aas
fnsave
cmp
adc
out
sbb
lret
arpl
inc
xor
fcmovbe
roll
das
hlt
adc
dec
xchg
sub
mov
lret
cmpsl
mov
sbb
dec
jae
es
or
repz
loope
mov
cmpl
jae
popa
clc
adc
jb
sar
inc
add
popa
bound
loop
adcb
mov
mov
sub
and
loop
cmp
incl
loopne
or
loope
mov
sbb
loope
pushl
push
push
cmpsb
mov
mov
adc
or
push
nop
dec
ficompl
in
aam
jge,pn
xor
inc
paddq
dec
aas
out
stos
xchg
jmp
dec
outsb
fcom
add
lods
lahf
push
inc
and
jg
and
vpxor
sbb
mov
jp
push
inc
cmp
dec
mov
pop
adc
push
shl
fwait
lods
fdivrs
imul
mov
loopne
and
aad
sub
nop
mov
push
leave
test
push
cmp
or
out
xchg
inc
pop
loopne
in
cmp
mov
or
dec
mov
mov
cwtl
mov
repnz
xlat
in
outsl
xchg
dec
or
or
xor
lret
out
loope
or
inc
push
inc
iret
cmp
xlat
ja
pop
xor
mov
mov
icebp
and
subl
sahf
pop
pop
sub
ffreep
fwait
jle
xchg
hlt
int
loop
mov
jns
xchg
push
lods
push
repnz
in
inc
push
jmp
data16
jno
mov
xor
mov
xchg
dec
xchg
mov
inc
mov
out
loop
cmpsb
dec
push
pop
mov
pop
std
pop
lahf
xor
xor
lods
fdivl
gs
add
inc
ds
cmp
or
mov
inc
dec
and
mov
xchg
and
pop
pop
push
aad
add
inc
lret
mov
adc
add
push
jecxz
mov
mov
into
iret
cwtl
fmull
imul
shl
ss
xor
shlb
popf
sub
mov
inc
adc
out
mov
push
push
je
dec
dec
bound
push
xchg
xchg
inc
mov
pushf
pop
jbe
iret
mov
xlat
ja
addr16
in
mov
jne
arpl
ror
inc
out
outsl
jecxz
subl
cli
xchg
mov
add
insb
lock
mov
push
cmpl
clc
mov
pop
shr
mov
add
push
nop
adc
jmp
or
jle
pop
and
xor
dec
out
sub
push
dec
and
cmc
data16
jl
pop
mov
fcoms
dec
test
mov
rcr
jae
arpl
sub
mov
cmp
inc
int
das
mov
pop
leave
push
scas
xchg
stos
cmp
arpl
push
sub
xchg
push
sub
inc
stos
loopne
push
andb
mov
scas
and
arpl
add
mov
push
std
cmc
mov
lea
aas
push
xor
pop
fstpl
or
les
fdivl
push
imul
imul
or
cmp
lea
cld
and
xlat
bound
sbb
and
push
mov
mov
mov
int3
int
xchg
push
mov
movl
sbb
jne
xchg
cmp
sbb
jle
in
pushf
cmc
xchg
mov
in
arpl
jb
cmp
dec
add
and
popl
jmp
lcall
mov
insb
in
ja
sub
stc
jnp
divl
mov
add
movsl
fwait
andb
add
push
mov
cltd
popa
ret
fs
popa
insb
insb
mov
cmp
ret
andb
push
pop
mov
sahf
pop
arpl
push
fcoml
cmp
jmp
jne
jbe
sbb
adcb
inc
addr16
cwtl
nop
adc
fcoms
fidivs
push
cwtl
jl
inc
bound
lahf
dec
push
ja
jo
xor
sub
jmp
inc
mov
xchg
daa
mov
loope
push
loop
scas
and
cmp
pop
pop
adc
mov
push
adc
push
inc
icebp
mov
jbe
stos
and
sbb
insb
outsb
dec
sub
std
cltd
cmp
push
xor
outsl
adc
cmpsb
add
xor
adc
sub
stos
shr
mov
jl
in
mov
iret
sbbb
jbe
ret
add
mov
rorl
push
test
cmp
push
xor
inc
subl
sub
xchg
pushl
xchg
add
push
dec
dec
sub
jp
test
icebp
roll
adc
mov
adc
mov
mov
ja
mov
xchg
mov
scas
and
jg
xchg
mov
sbb
jg
repnz
cmp
cs
hlt
mov
inc
into
push
rolb
in
push
xchg
lods
pop
mov
lret
jp
shl
mov
mov
mov
jnp
iret
lcall
mov
es
lret
sub
mov
cmc
xchg
fistpll
cld
xchg
push
jmp
add
jne
cmp
daa
xchg
and
push
popa
xchg
sub
and
add
jne
mov
andb
pop
or
repz
ret
mov
cmp
sbbl
xchg
pop
fidivs
push
dec
lret
fs
cmp
mov
mov
test
ret
inc
hlt
in
sub
lahf
push
aaa
mov
push
jle
mov
testl
test
fs
add
addr16
js
pop
and
sub
hlt
adc
sbb
loop
scas
jnp
add
dec
xchg
or
fldl
rclb
jbe
ljmp
xchg
sbb
pop
adc
xor
pop
or
xchg
xor
or
ss
fldt
stc
dec
push
xchg
inc
popf
decl
clc
sbb
out
in
jno
test
dec
cli
test
add
or
dec
out
in
adc
push
sub
aas
inc
sub
inc
xchg
enter
mov
fidivs
mov
and
shrl
cmp
xlat
xlat
xor
pop
jae
or
ficoml
lret
mov
mov
push
adc
loope
mov
cmp
scas
jp
mov
movq
mov
push
das
stos
xchg
pop
dec
nop
cld
push
in
and
lds
leave
mov
negl
jl
outsb
out
sti
or
xor
inc
rorb
int3
repnz
and
js
mov
daa
fidivl
bound
dec
or
cltd
cwtl
lock
aad
or
adc
icebp
mov
sbb
mov
je
sbbl
outsb
mov
mov
adc
rcrl
adc
inc
adc
jmp
push
pop
adc
add
aad
sbb
mov
lahf
cmp
loopne
stos
pop
jbe
mov
push
and
popa
popa
pop
adcb
mov
and
hlt
shll
mov
in
sbb
mov
mov
sub
shll
pop
jle
out
ljmp
cmpsl
xlat
loopne
ds
or
mov
mov
dec
lods
pop
ror
jns
lea
xchg
xlat
leave
fmulp
cmpl
sarb
shlb
insb
je
jnp
popa
inc
or
pusha
dec
jle
in
out
jp
lea
dec
fnstsw
inc
ja
dec
cmpsl
insl
mov
cmp
add
cmpsl
popa
cmc
adc
ret
js
inc
sbb
mov
adcb
push
ja
dec
mov
mov
cmc
jmp
cmp
movsl
inc
push
ret
jb
mov
mov
fildl
push
pusha
mov
sub
jnp
jbe
xchg
dec
or
cmpsb
pop
mov
push
inc
inc
pop
mov
inc
fwait
lret
lds
test
scas
push
cmp
lret
jl
sti
sbb
mov
prefetch
or
push
pop
js
data16
cld
jmp
jbe
sbb
or
cwtl
xchg
xchg
mov
idivb
dec
xchg
xchg
sub
dec
aas
lea
sbb
and
cmp
jmp
jae
lea
repnz
popa
bound
mov
jg
xchg
iret
push
mov
cld
repnz
mov
pushf
add
inc
lahf
out
lret
ds
push
fincstp
xchg
mov
insb
push
pop
or
mov
sbb
xor
sub
fists
sarl
rorb
arpl
popa
lock
push
int
sub
xchg
xlat
or
push
or
pop
jo
test
pop
cmpsb
neg
cs
push
push
test
xchg
mov
movb
sub
inc
rcll
jmp
mov
fdivs
lods
cmp
push
pop
rclw
inc
pop
inc
test
fidivrs
clc
repz
rclb
jb
ljmp
imul
inc
dec
arpl
daa
incl
daa
shl
mov
mov
std
lret
or
dec
xchg
push
pop
mov
sub
mov
mov
push
and
jo
sti
jne
subl
cmp
leave
xor
xor
mov
dec
pop
fistpl
stos
stos
mov
sti
sbb
scas
jle
out
sub
call
sub
push
pop
sbb
lods
inc
addr16
inc
and
data16
das
or
jne
mov
adc
dec
aad
test
loop
jb
test
and
jbe
insb
arpl
xchg
js
int
sub
insl
push
call
outsl
xchg
xchg
adc
enter
and
stc
pop
dec
dec
int
pop
pop
in
inc
adc
fwait
dec
xor
jbe
pop
mov
jecxz
sbb
sbb
sbb
sbb
or
popf
outsl
outsb
repnz
or
xlat
lcall
arpl
or
pop
shrb
inc
mov
out
mov
in
xor
xor
xchg
xor
bound
adc
js
dec
mov
faddp
enter
nop
inc
and
lods
pop
sub
movsl
xchg
push
mov
dec
inc
inc
jne
rorb
aas
rorl
mov
push
adc
adc
cltd
sbb
nop
cmc
mov
lock
loop
sbb
out
or
andb
in
xchg
sarl
hlt
out
push
mov
je
mov
inc
fbstp
jae
or
or
mov
in
mov
int
ljmp
popf
xchg
lcall
adc
sub
cltd
push
xchg
mov
sub
or
xor
cmpsl
data16
dec
repnz
aad
lret
into
sbb
test
imul
insl
xchg
imul
dec
test
cmp
xor
loop
xlat
shll
dec
dec
js
stos
cmpsb
mov
and
call
push
mov
imulb
xor
jno
call
dec
jb
jae
mov
lods
stc
addl
push
ret
mov
ret
sbb
dec
push
mov
mov
insl
imul
or
mov
cmp
cmp
cmc
add
push
xor
cmp
adc
mov
sbb
dec
adc
cli
cmc
sti
addr16
les
mov
or
add
ret
mov
cli
xlat
test
loopne
sub
jb
xor
xchg
jo
call
rcrl
fwait
mov
xlat
xchg
add
inc
inc
outsl
jno
scas
inc
jbe
scas
aaa
pop
loope
xlat
je
and
push
sbb
imul
adc
and
arpl
dec
mov
shl
cmp
pop
xor
cmp
xchg
push
xor
das
xchg
jno
adc
call
xchg
inc
jle
sbb
jns
adc
sahf
mov
out
movsl
into
or
adc
fidivl
mov
fs
inc
call
lods
jp
popa
xchg
or
pop
cmp
subl
inc
hlt
mov
repz
hlt
jbe
cld
dec
mov
lods
loope
push
cmpsl
leave
pop
xchg
hlt
jge
jne
sahf
push
mov
mov
cmp
pop
and
push
jle
insb
adc
int
out
add
mov
mov
dec
insl
nop
add
fisttpll
cmc
test
mov
rclb
dec
inc
sub
jbe
add
jg
push
xchg
ljmp
loop
inc
imul
std
insl
faddp
pop
adc
mov
pop
daa
orb
jo
fisubl
mov
xor
and
test
loope
push
frstors
test
out
mov
jmp
lret
push
mov
dec
jne
cltd
int3
fsubl
shrb
testl
mov
testb
pop
fs
inc
enter
lods
push
imul
add
stc
mov
les
adc
loop
push
cmp
mov
xor
out
iret
pop
push
movsl
pusha
mov
cmp
in
xor
and
mov
lods
and
add
aam
sub
cmp
rorb
fidivrs
sahf
mov
jg
push
sub
les
mov
xchg
xchg
idivb
xorb
lret
loope
jg
dec
roll
jne
mov
fwait
mov
sub
and
call
add
ja
cli
cli
daa
pop
pop
push
dec
lds
xchg
jo
xchg
xchg
sbb
mov
mov
loopne
aad
std
and
mov
adc
xchg
mov
cltd
push
cmp
int
negl
inc
inc
fiadds
adc
std
out
push
lahf
add
mov
test
leave
mov
adc
lods
mov
fldl
test
ds
out
loop
les
add
sub
sbb
sbb
lret
jle
int3
inc
push
sahf
rolb
mov
fcomps
dec
mov
in
out
or
mov
mov
add
out
xor
jbe
mov
lds
add
push
adc
addr16
sahf
loope
jmp
sbb
and
pop
sub
aas
sbb
ja
test
ds
addr16
jnp
push
and
gs
cmp
sub
jnp
fisttps
mov
notl
or
aaa
pop
fwait
sar
cmp
push
xorl
or
inc
pop
or
adc
jecxz
adc
sarb
cmpsb
in
mov
mov
jo
sub
xchg
dec
adc
cmp
mov
mov
sbb
or
gs
and
stos
and
jp
or
pop
dec
jno
xchg
xchg
inc
add
mov
les
xor
cmc
dec
inc
repnz
ret
pop
mov
xor
aam
push
test
fcmovb
loope
xor
inc
and
inc
mov
loopne
pop
addr16
inc
xchg
fdivs
push
sub
add
imul
inc
pop
fsubl
or
bnd
xchg
lds
cmp
int
imul
adc
cmp
adcl
imul
cmp
imul
aas
in
xchg
adc
fldt
sbb
mov
dec
lods
ja
outsl
leave
lret
dec
lcall
jns
insb
jl
dec
test
test
idivb
call
rcrb
fmull
dec
mov
lahf
jmp
pop
push
es
rcrl
xchg
add
mov
add
sbb
lock
cmp
aaa
inc
daa
mov
mov
jmp
lods
mov
pop
jno
rcrb
and
loop
pop
sbb
push
repz
es
pop
cmp
and
add
xchg
mov
pop
push
ret
in
mov
lcall
or
rcrl
mov
into
pop
mov
push
rcrl
orb
jecxz
inc
cmp
stos
pop
popa
jl
por
pop
or
sub
fwait
sub
jno
in
idivb
mov
insl
jnp
xchg
idivb
scas
in
pop
iret
out
enter
lds
into
aad
cmp
push
push
xor
push
sub
cli
mov
sbb
nop
dec
lahf
ret
dec
push
adc
sub
lock
pop
ret
hlt
or
sbb
and
add
mov
cmpsb
sbb
cltd
fidivl
scas
mov
out
pop
lcall
gs
ficoms
pusha
inc
mov
arpl
mov
jecxz
popf
hlt
push
call
out
add
xor
popa
sub
xor
sar
sbb
mov
scas
xor
fisubl
stc
addr16
sbb
int
push
popa
imul
xchg
sti
lock
fwait
sub
pop
xchg
scas
in
push
and
pop
iret
lahf
push
push
lahf
pop
arpl
push
jno
mov
add
loope
push
xchg
mov
rcll
jp
roll
push
fnstcw
aad
into
mov
shll
popa
stos
movsb
ss
adc
mov
ds
testl
inc
mov
mov
fistpll
adc
arpl
cmp
xchg
sbb
popf
cli
mov
dec
lret
sbb
xor
cmp
cld
push
sub
or
les
adc
cmp
mov
sbb
cmpsb
and
testl
in
mov
mov
jbe
jnp
test
scas
pop
in
popf
xchg
cs
lret
fdivrl
xlat
nop
adc
push
ds
mov
flds
mov
popf
call
int3
scas
gs
daa
and
sbb
in
xor
int3
sbb
xchg
js
dec
inc
pusha
xor
cltd
xor
lods
aaa
lret
xor
icebp
push
jecxz
push
push
daa
push
jb
push
into
nop
jge
and
cmp
sub
bound
int
out
fstl
sti
mov
frstor
and
push
shrl
into
push
cmp
adc
out
xchg
sub
push
xchg
push
mov
sub
mov
in
cmp
cli
sub
lds
inc
sti
addr16
sbb
ja
loope
dec
push
sub
jnp
outsl
push
dec
fs
push
add
mov
jl
lcall
inc
cmp
inc
or
test
pop
lcall
mov
xchg
sbb
or
fs
ss
xor
in
jbe
fnsave
or
es
and
aas
lods
xchg
iret
sarl
es
in
xor
sbb
mov
push
das
push
add
sub
dec
and
adc
fs
imul
sub
mov
sbb
mov
les
test
gs
orb
test
scas
gs
arpl
mov
pop
testl
jnp
faddl
cmpsb
in
xchg
inc
mov
adc
dec
jns
call
dec
pusha
jecxz
mov
dec
and
adcb
jb,pn
mov
jne
sti
cmp
rcr
cli
jg
ret
pop
into
stos
js
into
dec
popf
or
sub
in
arpl
loope
xchg
xchg
xor
adc
in
and
xor
bound
imul
out
mov
mov
das
mov
ds
rcrl
daa
stc
rorl
iret
jl
push
push
dec
mov
fs
xor
jbe
iret
mov
sarl
add
pushf
sub
push
push
mov
pop
adc
sub
in
pop
jge
in
cmpsb
call
cmpsl
mov
add
stc
dec
fcompl
int
jne
fiadds
test
rorb
xor
fwait
rolb
data16
mov
dec
stos
or
add
inc
scas
sub
subl
outsl
ret
xor
xor
or
lcall
in
pop
sbb
scas
cmp
insb
cli
aas
ja
sbbb
sbb
pop
stos
inc
xorb
mov
outsb
test
mov
hlt
jnp
fs
dec
mov
mov
push
dec
jl
fstl
xchg
sahf
jge
mov
mov
mov
rolb
nop
inc
xchg
fstl
sahf
orb
inc
cmp
addr16
sub
insl
mov
adc
clc
int
push
je
lods
cmc
cmp
cmp
notb
out
inc
mov
pop
ja
push
mov
add
test
outsb
icebp
cmp
mov
sahf
jb
mov
into
dec
addr16
sbb
cmp
push
and
xor
movsb
adc
xor
js
jae
adc
jmp
push
xor
jbe
sbb
sahf
pop
mov
aaa
loopne
ds
out
adc
push
push
in
push
push
inc
add
fcmovnb
mov
imul
outsl
fbstp
pop
dec
repz
sbb
mov
jns
push
xchg
stos
adc
add
into
push
sub
loop
frstor
adc
mov
clc
pop
xor
xor
add
sbb
aas
scas
dec
pop
push
out
lds
gs
inc
subl
outsl
cmc
jle
pop
stos
lods
mov
mov
jo
cli
jecxz
lock
jno
std
jge
enter
ds
pop
inc
sub
paddb
add
sbb
shll
pop
xchg
xor
push
jge
sub
data16
adc
sub
aad
adc
jg
call
push
call
cmp
xor
sub
mov
jp
mov
adc
pop
add
and
clc
shll
pop
stc
xchg
pusha
jae
add
lret
ret
fstps
inc
xchg
aaa
mov
ja
scas
adc
roll
mov
pop
adc
scas
inc
push
sub
aaa
xor
movsb
mov
scas
xor
iret
fisttpll
jl
sbb
leave
popf
adc
inc
ljmp
mov
test
fcmovnb
sbb
push
ror
push
insb
in
sbb
test
dec
sarb
daa
data16
ret
popf
pop
cs
adc
aam
add
xchg
xor
jns
inc
inc
push
mov
push
mov
mov
lcall
pop
cmp
or
movsl
mov
ret
and
and
rep
aas
and
lods
or
add
clc
mov
dec
gs
inc
pusha
bound
sbb
push
pop
cmp
rcrl
movl
les
jns
jp
pop
int
add
push
out
fimuls
mov
sub
repnz
push
leave
add
jge
clc
in
lret
pop
stos
fwait
lea
push
mov
jmp
jecxz
mov
hlt
mov
jge
sahf
mov
jge
adc
fsubp
scas
testb
mov
jnp
in
pop
ja
adc
xor
pop
xchg
ljmp
mov
xchg
sub
push
add
xchg
push
jmp
rcll
in
pop
insb
fbstp
test
cmpsl
sahf
test
xlat
imulb
aaa
or
nop
push
and
or
mov
cmc
pusha
sbb
aad
mov
flds
jbe
aad
mov
das
stc
loop
inc
popa
mov
and
loope
dec
rolb
test
lcall
xchg
ret
test
cs
push
sbb
push
out
rclb
mov
adc
movsb
add
nop
mov
mov
inc
xchg
cmp
pusha
imul
cs
xchg
out
inc
test
adc
push
jl
adc
push
sub
std
fiaddl
popf
popa
cmc
or
cmp
inc
push
or
jmp
push
inc
sub
std
test
in
jns
divl
push
adc
sahf
sbbl
pop
mov
out
add
call
adc
mov
cli
cmp
sub
jg
add
sbb
xchg
push
stos
jecxz
aad
push
push
in
subl
arpl
mov
ficoms
jl
ds
adc
leave
mov
cmp
imul
insb
mov
shll
jmp
push
pop
test
or
adc
popf
insl
or
test
lds
mov
das
fdivrs
xchg
jmp
and
mov
decl
nop
mov
jbe
jmp
xor
lock
inc
push
stos
fwait
jecxz
add
adc
xchg
adc
dec
xchg
cmp
cltd
xor
inc
in
stc
xor
push
enter
idivl
cli
aam
jns
lahf
add
dec
mov
or
cwtl
decb
testl
std
lahf
sub
fwait
std
fcomi
sub
mov
xchg
iret
xchg
add
in
push
shrl
sbb
dec
aas
sub
mov
adc
in
cmp
ss
cmp
sahf
loop
js
repz
cmp
test
enter
lahf
repz
std
in
push
mov
adc
in
and
mov
push
dec
rcrl
add
mov
nop
push
and
scas
xor
cmp
ljmp
clc
inc
shlb
pushf
or
xchg
and
fwait
int3
and
sub
ret
pop
mov
cwtl
loope
dec
cli
jb
and
cmp
sub
inc
sub
inc
or
push
int3
clc
xchg
cmp
sbb
nop
pop
pop
aas
dec
and
fdivrl
int3
xorb
lret
mov
stos
xchg
add
out
add
inc
push
add
stos
jns
scas
movsl
sbb
push
lods
inc
push
add
cmc
je
movsb
xchg
inc
lahf
sbb
xchg
jmp
dec
test
and
popa
cltd
push
out
mov
pop
cmpl
hlt
test
test
mov
decb
or
inc
dec
mov
hlt
sub
ret
fstl
sub
test
imul
jge
mov
mov
sub
call
jmp
pusha
mov
das
jl
inc
or
iret
insl
push
inc
loope
je
nop
dec
scas
add
xchg
in
adc
out
test
cmpsb
int
outsl
and
adc
fs
stc
je
adc
insb
dec
lcall
das
sbb
arpl
lock
dec
push
mov
and
shrb
inc
imul
sbb
fldt
mov
aam
js
insb
mov
mov
rcll
pop
adc
sbb
hlt
mov
xor
xlat
inc
movsl
or
shl
pushf
xchg
iret
dec
daa
jbe
clc
lock
adc
cmc
push
lahf
and
fists
outsb
lret
mov
repz
es
xchg
arpl
sbb
jne
sub
lods
lods
repnz
push
xor
cmp
fwait
and
cmc
fldcw
sub
sbb
ljmp
xor
loopne
clc
inc
jl
adc
test
mov
sbb
and
push
daa
dec
ffree
out
or
cld
loope
pop
and
adc
dec
mov
mov
stos
mov
inc
dec
inc
bound
shrb
out
inc
push
cmp
dec
sub
cmp
add
inc
mov
rol
jnp
pop
pop
imul
mov
mov
jg
push
mov
cmp
rorl
loop
sti
dec
add
jge
jmp
pusha
xchg
loope
std
adc
xchg
sub
mov
popf
dec
xor
add
pop
rcl
out
adc
sarb
inc
push
push
mov
icebp
xor
mov
and
nop
sahf
push
add
and
mov
out
outsb
xchg
cmp
hlt
and
addr16
leave
mov
dec
insb
push
cmp
imulb
pop
mov
cmp
in
mov
cmp
push
repnz
es
xor
cmpb
xor
jg
and
cmpsl
pop
lock
mov
push
mov
adc
cmp
pop
sbb
inc
jge
pushw
cs
or
push
ds
aam
mov
lock
mov
into
pop
gs
ds
in
xchg
scas
clc
push
pop
jae
mov
mov
jg
jae
stos
xor
jae
adc
xchg
daa
aam
mov
adc
or
stos
aaa
xchg
shlb
jmp
jg
ret
sbb
cmp
mov
or
movb
or
jbe
lods
and
or
movsl
daa
xor
arpl
sub
test
pop
xchg
xor
pop
adc
jl
mov
jle
sbb
repnz
in
fstpl
filds
into
jb
or
lret
xor
or
mov
pop
cmpb
xor
mov
cmp
lods
movsb
mov
mov
int3
ljmp
shl
push
mov
rcl
insl
test
jno
xor
pop
mov
push
xchg
jp
insl
xchg
sbb
jl
inc
mov
cmp
mov
stos
cltd
and
es
loope
repnz
xor
sbb
leave
sti
sti
rcr
bound
fs
cmc
cmp
push
cld
sbb
leave
or
sbb
xchg
nop
mov
rcr
cmp
xchg
test
test
aaa
test
cmpl
test
popf
popa
insb
in
push
lea
fwait
iret
mov
sbb
or
inc
dec
icebp
stc
rcll
sbb
loop
insb
cmpsl
cmp
xchg
jnp
mov
cld
cli
sbb
imul
lahf
mov
pop
jmp
sub
pop
xchg
repz
aam
jecxz
cmp
add
in
jecxz
inc
scas
in
dec
push
sbb
mov
repz
stos
adc
int
sub
jmp
sbb
stos
sub
cltd
inc
cmp
test
lock
mov
gs
pop
jg
inc
xor
or
mov
push
jae
lods
or
sti
fcoms
outsb
sbb
iret
jecxz
cmpsl
mov
test
addr16
es
sub
sahf
sbb
cli
call
jl
jp
pop
xchg
fst
sbb
test
lret
sub
stc
pop
loop
jecxz
in
dec
pop
and
ret
outsb
loope
call
test
inc
aam
or
pushf
imul
jle
jns
xor
enter
fwait
add
movsl
jle
dec
mov
xor
jecxz
pop
loope
cmpsb
cld
push
scas
ja
cli
xchg
and
pop
pusha
adc
stos
lea
pop
xor
mov
cmp
add
push
jg
lahf
addb
imul
sub
adc
xor
lods
mov
inc
pop
sbb
adc
into
xchg
insl
subb
push
movsb
in
xlat
pop
sbb
ja
frstor
xchg
imul
xchg
pop
pushaw
cmp
cmp
pop
rorb
mov
add
sbb
jns
dec
repnz
xchg
xchg
jne
insl
pop
mov
sahf
xor
cmp
add
rclb
push
dec
jae
jns
cs
filds
mov
push
outsb
sbbb
jnp
enter
cmp
dec
leave
lods
jp
cmp
mov
mov
push
repnz
ret
jl
xchg
inc
aam
filds
jge
xchg
fs
lcall
stos
lret
test
aad
push
cmp
lret
push
jne
cmp
lods
cmc
incl
subl
adc
sbb
aad
adc
add
xchg
repz
dec
cs
in
pop
cmc
or
xor
in
add
in
add
int
sbb
xchg
dec
js
in
inc
or
fs
rcr
and
mov
rol
popa
inc
in
add
add
lret
icebp
dec
and
sbb
aaa
or
pusha
mov
scas
rolb
testl
dec
stc
enter
out
adc
mov
jno
iret
push
lcall
stos
ret
repnz
es
xor
cmpsl
scas
mov
mov
clc
xor
lret
push
mov
loope
cli
or
xor
mov
shl
nop
pop
icebp
les
daa
sub
mov
xchg
jne
inc
adc
jns
out
adc
js
insl
push
lcall
out
push
mov
repnz
fmulp
inc
jae
cmp
ds
sbb
push
cmp
loope
add
outsb
sub
sub
data16
pusha
adc
mov
or
insb
jb
inc
mov
insl
fmull
sti
and
mov
jno
inc
test
loopne
dec
stos
movsb
sti
les
xchg
or
fldenv
push
in
adc
xchg
scas
jbe
inc
mov
mov
and
mov
cmpsl
out
divb
shrl
inc
pop
add
cmpsl
loope
xchg
pop
mov
jmp
jge
jb
dec
call
je
add
sub
fdivl
mov
fwait
js
arpl
hlt
push
inc
dec
lret
orl
xor
sbb
bound
bound
out
inc
mov
sub
pushf
inc
stos
aad
out
push
push
mov
stos
push
lcall
repz
pushl
leave
mov
leave
aaa
dec
sbb
xchg
mov
loopne
pop
arpl
pop
mov
mov
js
jg
iret
repz
cmp
iret
or
xchg
movsb
push
pop
fisttps
into
cmp
sub
orl
daa
xor
pop
icebp
mov
stc
push
negl
movsl
mov
movsb
dec
jmp
aaa
cmpsl
lahf
fiadds
leave
in
repnz
nop
lock
mov
add
pop
and
mov
lcall
jl
mov
sub
xchg
popf
popf
sub
in
mov
into
xchg
mov
cmp
lods
lcall
dec
and
out
rol
lods
mov
inc
or
mov
insl
dec
dec
sbb
mov
pop
rcrb
or
lock
out
jb
shll
inc
cmc
jno
push
pop
fwait
dec
pop
and
lock
xchg
mov
lea
outsb
mov
test
xchg
mov
arpl
inc
in
ret
in
mov
rorl
pop
inc
cmp
fldl
mov
js
lods
shrl
jmp
repnz
popf
mov
push
mov
roll
mov
rcr
jbe
sub
loope
nop
cmpsl
adcl
push
inc
push
push
mov
jae
or
and
clc
fisttps
test
cwtl
pop
orl
daa
ffree
add
mov
jg
xor
jo
call
divb
push
inc
repnz
jbe
mov
aaa
repnz
xchg
js
mov
sub
mov
cmc
popf
pop
popf
mov
jae
scas
mov
loop
dec
pop
or
outsb
nop
sub
sub
pop
inc
and
fmuls
inc
popa
mov
pop
mov
bound
cs
test
push
mov
lea
xor
pop
js
pop
scas
fwait
push
pop
out
push
ret
lock
push
imul
or
dec
leave
xchg
call
inc
pop
push
pop
cmp
jno
lock
mov
mov
sub
xor
movsl
xor
enter
jns
mov
pop
or
inc
cs
jne
cmp
mov
cld
mov
xor
adc
outsl
aam
rcl
push
pushf
sub
shll
adc
iret
pop
fidivrl
mov
decl
push
test
leave
stos
sbb
sbbl
ja
out
rolb
cmp
addr16
repnz
fisubrs
test
dec
cmpsb
repz
pop
popa
and
jecxz
inc
movsl
rolb
xor
leave
add
push
aad
push
not
and
cmpsl
xlat
insb
pop
fidivl
shll
in
cld
cmpsl
push
repz
adc
add
push
pop
in
mov
add
mov
pop
mov
xor
outsl
sub
add
push
pop
adc
aas
add
lods
xlat
popa
mov
sbb
cmpsl
ret
cmp
call
mov
mov
cmp
push
test
jmp
cmp
dec
mov
out
shll
subb
xor
pop
sub
jne
xor
addr16
jae
fistpl
dec
or
xorb
iret
jns
mov
lahf
rorb
fscale
test
stc
invd
sbbb
fiaddl
push
sarl
mov
in
fwait
push
jne
sbb
dec
and
movl
or
cs
or
pop
adc
lods
or
fisttpll
std
jae
stc
aas
sub
pop
add
and
ja
mov
addb
xlat
mov
nop
jns
inc
loope
xor
sti
mov
dec
mov
fwait
repnz
lea
popf
es
xchg
rolb
fstps
ja
mov
xchg
lock
dec
ljmp
daa
ja
mov
sub
aam
jns
dec
fucomi
mov
lods
das
popl
dec
fldenv
and
jns
push
jnp
mov
scas
mov
push
fsubrs
inc
xlat
pusha
shl
ret
dec
sub
add
lods
pop
cmc
xlat
test
xchg
lahf
dec
jp
and
ret
hlt
mov
sti
xor
push
imul
icebp
adc
popa
movsb
sti
mov
push
jae
jne
mov
jmp
mov
mov
pusha
test
sub
mov
pop
xor
ficoml
xchg
aam
out
inc
sarb
xchg
mov
data16
jp
inc
loop
stc
inc
add
adcl
bound
fiaddl
adc
bound
mov
aad
ljmp
lea
lock
scas
mov
push
lods
xor
pop
pop
call
aaa
jno
shll
push
mov
jecxz
out
sbb
sbb
rcll
jne
dec
dec
daa
push
dec
push
dec
lcall
aas
ja
and
aas
mov
arpl
and
sbb
sbb
push
dec
int
lods
aaa
jle
push
int3
insl
pop
cmp
ret
frstor
ret
mov
sbb
mov
jae
fmuls
or
push
sbbb
mov
mov
loopne
pop
or
scas
jg
and
ds
int3
icebp
push
test
inc
xchg
stc
das
mov
and
xor
lret
push
repz
ljmp
pop
rolb
cmp
cmpsb
xor
or
jl
shrl
sbb
mov
dec
lock
adc
inc
inc
popf
and
lea
sub
inc
iret
popa
mov
cltd
xchg
shlb
icebp
sub
test
xchg
adc
orl
lds
cs
lods
faddl
out
inc
mov
add
mov
pop
clc
sub
cmp
mov
or
xchg
mov
paddb
fs
insl
loopne
rcrb
xchg
or
or
shll
pop
adcb
mov
xlat
pusha
cltd
negb
std
mov
fstpt
add
dec
xchg
or
jno
cmc
xchg
adc
hlt
pushf
rorb
loop
mov
shll
pop
sub
mov
jmp
xchg
in
adc
or
aaa
cmp
pushf
bound
popa
push
cmp
gs
xlat
sysret
cli
jmp
xor
or
scas
jbe
cli
xchg
sub
aas
mov
push
lea
jmp
dec
cmp
icebp
lods
int
inc
jle
or
test
rcrb
jno
xor
jne
aam
cmp
sub
in
das
cmp
sub
lock
inc
decb
fisttps
dec
lods
jecxz
mov
fadds
jnp
movups
push
pop
loopne
lahf
xor
test
mov
dec
inc
icebp
xor
ret
imul
sbb
ret
int3
int3
xor
ljmp
and
inc
daa
movsb
aam
pop
std
push
or
cmp
mov
jmp
pop
dec
xlat
shrl
orl
jno
sbb
je
add
mov
ss
data16
or
sti
mov
and
mov
fs
stc
push
fimull
jno
mov
jecxz
cmp
push
sbb
lahf
dec
and
ret
xor
icebp
push
jmp
and
xchg
sub
pop
fcompl
mov
push
xor
call
int
cmp
jp
sub
jecxz
pushf
pop
jmp
cmp
add
xchg
mov
pop
pop
adcl
push
shlb
icebp
js
dec
scas
popf
fcoml
movl
mov
cmp
jno
scas
push
xor
or
int3
cmp
into
cmp
repnz
add
pop
out
pop
aad
xor
lods
dec
out
sbb
dec
data16
popf
pop
xor
inc
pop
testl
es
nop
sub
test
out
cwtl
push
or
jbe
fstps
mov
push
scas
dec
jns
adc
daa
push
mov
push
outsb
dec
int
clc
pop
mov
mov
inc
in
inc
test
lods
fs
sub
push
sub
dec
mov
jo
jne
add
stc
arpl
in
pop
pop
jno
into
push
lock
shrb
dec
sti
inc
dec
jae
leave
sbb
call
ret
and
pop
mov
cli
rorb
repz
lret
pop
ljmp
xor
cld
sub
adc
mov
push
insl
lahf
ja
xchg
cli
add
inc
xor
lods
dec
xor
stc
test
xor
fcom
stos
sub
xor
imul
loop
inc
inc
pop
dec
loopne
cmovl
or
jbe
mov
movsb
scas
out
orb
sub
inc
jnp
repnz
ret
adc
jmp
iret
stos
ret
in
mov
xchg
loop
repz
jg
dec
shrb
pushl
int
in
movsb
std
int3
inc
push
dec
xchg
pop
bound
ds
data16
shll
lret
inc
mov
sbb
mov
mov
fstl
add
lods
and
outsl
or
mov
sub
inc
jmp
or
arpl
mov
testb
sti
rolb
add
and
hlt
mov
xchg
adc
movsb
or
pop
xchg
fstpt
cmp
lahf
dec
ljmp
inc
mov
or
xchg
mov
xor
out
xchg
sti
cwtl
fisubrs
aad
nop
adc
jne
bound
fimull
jl
lds
xorb
jmp
and
out
jne
lods
insb
push
pop
aam
add
xchg
xor
and
sub
out
sub
xor
or
pop
outsl
jl
adc
push
push
push
and
mov
mov
cmp
mov
push
sbb
lock
and
or
in
mov
sub
xchg
aaa
xchg
vmovddup
iret
mov
hlt
pop
stc
lret
push
repnz
es
lock
mov
call
sub
loop
lret
mov
ljmp
inc
inc
sub
adc
xchg
imul
loope
or
push
aad
or
test
adc
mov
clc
sub
pop
leave
inc
xchg
das
mov
jne
push
push
bound
aam
dec
cmp
bound
sbb
pop
shlb
in
sbb
aam
nop
gs
ja
or
daa
in
flds
push
cmc
repz
data16
lods
lret
sub
or
test
pop
jae
ss
xchg
scas
testb
loop
test
call
adc
or
and
dec
dec
stc
cmpsl
dec
cmc
mov
jmp
xchg
jo
jp
cmpsb
mulb
iret
pop
mov
xchg
inc
leave
cmp
xor
cmp
push
outsb
sbb
dec
arpl
lret
push
sbb
jnp
adc
mov
xor
pause
mov
push
fildl
in
scas
cmpsb
xor
push
in
addr16
out
in
jbe
add
cmc
fisttpl
pop
cmc
cmpsb
lret
and
xor
and
or
cmp
inc
enter
add
sbbl
sbb
xor
sti
repnz
fwait
or
jns
test
lds
sbb
clc
cmpsl
ss
cmp
sbb
and
cmpb
rolb
sbb
js
push
cmp
push
push
imul
sub
mov
aad
mov
add
and
popa
rcrl
popf
add
jp
xchg
popa
cld
mov
mov
loope
push
lahf
fildll
jge
int3
mov
mov
dec
cwtl
dec
cli
pop
aas
inc
jp
sbb
popa
or
sbb
cmp
push
or
lea
pusha
imul
decb
call
or
popf
push
cmpsl
cmp
nop
dec
add
lcall
hlt
cmp
xchg
jmp
push
rorl
stc
fsubrs
clc
cmp
sbbl
sub
repz
lods
mov
adc
nop
adc
xchg
mov
out
cld
jne
and
aaa
cmp
out
mov
test
rorb
out
in
push
cli
cli
push
jbe
ds
or
les
push
cmp
movsl
fsts
lods
scas
sub
cmp
dec
cmp
push
xchg
loop
insl
sbb
loopne
sbb
std
lcall
test
push
out
or
pop
mov
fiadds
std
ret
test
ja
jle
cld
dec
mov
mov
lret
push
push
mov
aam
gs
sub
cld
loop
ret
cmp
jno
icebp
jbe
rcll
and
sub
inc
mov
push
in
dec
fimull
pusha
nop
rcrl
sub
inc
outsl
xchg
cmp
cmp
add
cmpl
das
lret
test
mov
mov
test
lcall
int
inc
inc
inc
dec
cwtl
sbb
xchg
dec
call
mov
xor
mov
cmp
mov
xor
pop
in
xor
mov
cs
add
fs
inc
test
rorb
push
sub
xor
shlb
jg
enter
dec
hlt
xchg
jb
jmp
add
je
add
mov
dec
aas
pusha
or
mov
stos
out
nop
dec
dec
push
ja
sub
fmuls
adc
sbb
js
stos
loop
repnz
enter
out
ss
bound
push
stos
addr16
test
out
adc
pop
leave
nopl
sbb
inc
jae
test
push
push
pop
add
popa
adc
out
out
out
mov
sbb
adc
mov
enter
jno
jns
fcomi
mov
pop
mov
or
std
mov
fucomip
jle
mov
inc
cmpsl
cmpsb
lods
mov
or
jae
insb
rclb
lods
imul
mov
pop
mov
lods
xor
push
jp
dec
push
pop
fs
push
push
in
or
xor
bound
test
shll
pop
lods
js
negl
mov
fnstenv
fs
adc
bound
cmpsl
lds
scas
int3
xchg
enter
jne
mov
in
sti
push
inc
lret
inc
int3
or
loop
and
mov
xchg
in
shll
xchg
imul
mov
int3
and
cmc
mov
mov
pop
scas
stc
push
jmp
push
dec
cs
cmp
jbe
cs
movsb
jbe
xchg
test
mov
into
dec
mov
cmp
mov
sbb
pop
push
inc
sarb
lret
or
sbb
int3
push
ror
cmpsl
or
and
mov
out
or
cmp
jae
pop
insb
mov
in
lea
loop
mov
adc
les
out
xchg
js
clc
lret
sahf
mov
pop
out
mov
add
xor
xchg
inc
cmpsl
hlt
cmp
mov
adc
cvtdq2ps
jecxz
iret
jnp
int
data16
sub
subl
repz
pop
arpl
dec
mov
lret
or
pop
cmp
stc
aam
push
stos
push
aad
mov
ret
orb
jle
sbb
dec
idiv
sbb
add
loop
out
sti
and
mov
mov
dec
push
jmp
mov
add
cmp
lock
sub
mov
inc
push
shr
sub
pop
shll
cmp
jbe
pusha
jle
adc
aas
clc
rorb
insl
imul
icebp
pop
loope
and
add
out
mov
cmp
sbb
inc
cmc
add
imul
lahf
popf
add
daa
cmp
std
lds
cltd
xor
shlb
add
jno
mov
jl
data16
int
sbb
jmp
adc
push
cwtl
and
mov
test
adc
pop
xchg
into
and
ret
dec
inc
cmp
aad
outsl
insl
out
and
loope
mov
xlat
inc
pop
aam
pop
out
fsubrp
scas
into
dec
aas
sub
mov
mov
scas
lock
sub
aam
mov
pusha
jbe
jp
jno
push
push
xchg
dec
sti
mov
cmp
imul
add
mov
cltd
fstpl
jae
addr16
cmp
pop
enter
shl
out
cmc
dec
roll
pop
sar
sbbb
aam
mov
es
and
pop
je
mov
das
push
aaa
cmpsb
cmpsl
sub
popa
sbb
add
mov
fs
cwtl
adc
fsubl
or
loopne
push
data16
inc
or
mov
addr16
lret
lods
dec
aam
ja
pushf
cmp
sbb
dec
lahf
das
lahf
xchg
ds
nop
call
scas
gs
xchg
pop
dec
pushf
mov
or
test
xchg
es
or
sub
lret
dec
je
adc
mov
push
lret
je
sbb
icebp
pop
push
mov
jecxz
icebp
add
jmp
push
fidivrs
imul
mov
ficompl
cld
nop
mov
cs
lahf
idivl
dec
test
pop
data16
sarb
and
ds
dec
or
or
wbinvd
jb
adc
jg
mov
dec
adc
pop
add
nop
imul
aas
shll
sbb
test
cmpsl
mov
and
repnz
icebp
cli
mov
cmp
push
insb
pop
pop
and
movsb
xor
or
arpl
out
cmp
icebp
adcl
nop
xchg
mov
retw
insb
loopne
pop
je
loope
xchg
js
inc
rcr
lods
jp
mov
test
dec
in
test
pop
int3
mov
mov
xchg
sub
push
lret
jecxz
les
dec
outsb
in
add
mov
xchg
addr16
mov
pop
mov
std
mov
push
and
pop
ss
jbe
shld
mov
sub
xchg
adc
mov
jmp
xchg
cmp
mov
inc
xchg
cmp
loope
incl
cmp
lret
clc
cld
sbb
scas
xchg
mov
or
inc
sbb
pop
fwait
ljmp
jmp
sbb
aaa
fldcw
push
jnp
mov
xor
and
scas
lret
pop
xchg
out
int3
push
outsb
sbb
lock
mov
hlt
xor
repnz
xchg
sahf
arpl
aas
testl
xchg
loope
lcall
enter
mov
sti
in
mov
xchg
mov
inc
mov
out
or
dec
dec
dec
mov
mov
js
aad
xor
adc
mov
paddusb
int3
fldt
aam
fsubrs
add
repnz
ret
imul
jb
adc
orb
outsb
adc
sbb
push
sub
popf
sbb
cmp
sbb
sub
inc
xchg
subb
mov
sbb
pop
fadd
mov
fs
iret
cmp
daa
test
ficoml
dec
sbb
mov
dec
and
cmp
mov
pop
lods
fsubs
mov
fimull
dec
xlat
stos
stos
aad
jae
insb
push
or
mov
xchg
fbstp
pop
cli
xlat
mov
pop
jl
jnp
stos
pushf
aaa
mov
mov
jns
xchg
jb
pop
adc
mov
das
sahf
add
pop
push
mov
adc
test
in
int
cmp
std
lcall
pop
push
cmp
mov
sbb
sbb
adc
mov
sbb
xchg
xlat
cs
iret
int
inc
in
add
in
stos
dec
mov
leave
hlt
jge
aaa
pop
mov
mov
sub
jmp
sarl
out
sahf
mov
sbb
adc
xchg
sub
xchg
lcall
sub
test
pop
das
jecxz
xor
insl
gs
sub
xlat
cmc
arpl
pop
inc
mov
sbb
add
xlat
int
gs
push
clc
gs
loopne
jno
and
mov
nop
xchg
jecxz
mov
xchg
fisttpll
ss
sbb
gs
push
xor
and
adc
lret
outsl
fucom
cs
lahf
dec
mov
pop
dec
pushf
push
testb
shll
adc
sbb
push
xorb
or
add
push
movsb
lahf
push
xchg
add
or
xchg
lods
filds
rcll
hlt
mov
xchg
cmpsb
and
mul
mov
outsb
adc
inc
pop
movsl
jmp
cmp
inc
cs
mov
or
or
dec
rolb
push
xchg
jmp
lcall
popl
sti
arpl
cmpb
jg
sbb
push
inc
dec
mov
and
mov
shll
push
xor
sahf
enter
xor
dec
int3
inc
dec
fsubs
xor
daa
xchg
sub
fists
js
sbb
in
gs
loopne
loopne
jl
push
fs
jbe
outsb
sar
cmc
push
ss
mov
inc
test
data16
inc
jle
adc
jnp
xchg
stos
and
push
cmp
inc
jns
loopne
cs
and
mov
cmp
push
cmp
xchg
fisubl
add
ss
or
fistpll
fwait
scas
out
xchg
add
clc
out
ss
inc
lods
mulb
popa
scas
push
hlt
int
mov
jl
xlat
mov
outsl
push
inc
dec
add
mov
mov
popa
cmp
mulb
movsl
and
lock
maskmovq
xchg
lret
dec
inc
or
lret
mov
jp
mov
pop
leave
fildl
dec
mov
loope
adc
push
inc
xchg
arpl
mov
and
movsb
addb
push
out
lret
pop
dec
adc
popf
pushf
mov
subb
mov
mov
push
sub
xchg
xchg
push
pushw
cli
icebp
cld
xor
and
fidivs
sbb
xchg
and
adc
mov
lock
sti
pop
cmp
xor
inc
and
cmp
flds
jg
jge
aaa
inc
shlb
es
xlat
xchg
out
pop
sti
mov
in
push
stos
cmc
icebp
sbb
cmp
lcall
pusha
cmp
or
bound
or
and
aaa
imul
jle
or
fcoml
mov
mov
clc
jb
popa
add
lcall
sbb
addr16
sub
adc
mov
adc
or
mov
mov
pop
adc
fs
fwait
and
out
fsubrs
jmp
ret
push
and
xchg
sbbb
inc
lahf
cli
xchg
push
cmp
in
mulb
mov
pop
jne
scas
scas
mov
xchg
sbb
lcall
or
jecxz
into
jle
pushf
xor
jg
test
push
lods
sub
push
jmp
push
and
inc
shll
pop
xchg
lcall
adc
cmp
lods
and
lods
outsb
pop
pop
xor
sub
fnsave
dec
mov
daa
jbe
test
mov
incb
mov
adc
cwtl
jns
sbb
ret
jnp
mov
sub
pop
enter
ss
sbb
or
int3
lods
cmp
push
into
pushf
pop
lahf
into
stc
arpl
inc
ljmp
push
mov
int
icebp
lcall
jnp
mov
fadds
xor
mov
leave
imul
push
mov
test
lcall
cld
mov
jbe
daa
cmpsl
cmp
icebp
iret
cmpsb
jmp
cld
mov
sar
insl
dec
movsl
outsb
enter
cli
hlt
jne
mov
cmp
shl
push
xchg
pop
mov
lret
xorl
inc
iret
lcall
mov
cmc
xor
cmp
jmp
sarb
ja
cmc
cmp
loop
rcr
pop
cmpl
int3
push
dec
dec
outsb
sbb
test
push
repz
mov
int3
push
leave
cmp
inc
push
pop
mov
in
xor
mov
adc
loope
cs
jge
insb
cmpsb
cld
jle
jp
fbld
sti
cli
xor
clc
add
sub
imul
pop
push
mov
inc
in
jle
xchg
pop
and
fwait
aam
cmc
fucom
sbb
xor
cmp
mov
aam
mov
sbb
cwtl
mov
es
arpl
loopne
hlt
add
mov
jmp
dec
or
jecxz
test
popf
push
xor
test
dec
sbb
loope
lret
movsb
mov
mov
sahf
nop
xchg
loope
pop
in
test
dec
cmp
leave
fdivrs
dec
aad
sub
push
mov
or
test
jne
push
shrl
ret
stos
sbb
std
or
jmp
mov
inc
test
jl
jmp
mov
dec
das
rorb
pop
sbbl
inc
adc
cmpsl
mov
out
lea
xor
cmp
jl
scas
and
pusha
orb
adc
mov
inc
lret
add
int3
sub
sub
pop
inc
sub
lods
in
sbb
into
popa
pop
xchg
inc
cmpsl
pushf
in
sub
fstps
lods
sahf
pop
inc
daa
mov
out
stc
dec
jg
mov
or
xchg
cwtl
insl
pop
lret
insb
adc
call
sbb
mov
subb
sub
outsl
aad
rclb
mov
mov
and
jo
add
jmp
dec
out
fstpl
fcom
dec
ds
and
and
cmpl
adc
xor
adc
scas
fadd
daa
movsb
push
loopne
push
fsubs
dec
sbb
mov
fdiv
xchg
push
xor
es
sub
repz
lods
or
jbe
popa
jno
xor
test
inc
pop
negb
jae
roll
and
retw
lods
outsb
jnp
lea
xchg
cld
cli
jbe
jl
adc
mov
outsb
shlb
aas
cld
pop
push
mov
fdivl
xchg
pop
iret
jmp
ja
in
mov
lods
mov
push
lock
jl,pn
cmpsl
add
pop
xchg
cwtl
je
sub
ja
loopne
lcall
in
jns
add
dec
test
sub
fstpl
cmp
inc
std
popa
dec
mulb
enter
mov
jmp
loope
dec
adc
jecxz
adc
add
test
fs
mov
sub
xchg
lcall
lods
lcall
sbb
and
test
fimull
pop
jecxz
adc
jae
mov
jg
das
shrl
movsl
add
lods
add
add
or
cmp
sahf
imul
or
add
add
pop
repz
ljmp
inc
pop
pop
addr16
xor
sbb
cwtl
mov
fildll
outsl
int
popf
dec
pop
nop
adc
data16
push
mov
shrl
js
cwtl
lret
sub
mov
inc
add
stos
mov
jl
cmp
nop
sub
jecxz
lods
mov
cmpsl
leave
out
add
adc
cmp
adcb
imul
pop
sarl
and
popa
cmpb
ficoms
daa
inc
sub
lods
jnp
mov
mov
sub
sub
insb
icebp
in
ljmp
jo
icebp
sub
test
cmc
loope
arpl
jbe
aam
jo
ss
iret
inc
sahf
sbb
shlb
push
adc
push
push
mov
les
mov
xchg
js
jle
mov
jecxz
nop
mov
jmp
jae
call
js
mov
sub
jo
call
xchg
adc
jle
and
cmp
push
mov
out
ss
outsl
movsl
dec
xchg
out
outsl
adc
mov
sub
rorb
int3
sbb
sbb
cli
fcmovb
pop
shrl
add
jno
out
add
xchg
xchg
cmp
lahf
and
sub
stos
pop
and
repnz
mov
movsl
mov
jmp
in
out
sub
inc
or
clc
dec
lock
sub
pop
loope
inc
add
js
fidivrl
or
aam
out
adc
rcrl
push
mov
and
cli
xchg
data16
fildll
jg
push
and
fnstsw
mov
fldcw
sub
adc
cmpsl
mov
and
je
shlb
outsw
push
lret
adc
jg
add
xchg
pop
sub
mov
xchg
xlat
out
bound
out
mov
pop
lds
movsb
gs
mov
sub
pop
push
jbe
arpl
pop
cli
movsb
cmp
movsl
lret
enter
rcrl
outsl
and
inc
aam
fmuls
jne
xor
int3
mov
lret
adc
pop
add
mov
loopne
out
sub
jbe
insb
push
hlt
rorb
jmp
call
xchg
jle
add
sarb
xor
jmp
inc
inc
xchg
push
adcl
inc
pop
ja
ds
mov
dec
sub
stos
pop
rorl
fmul
in
pop
call
jge
idiv
mov
andl
pop
pop
sbb
dec
ljmp
hlt
bound
fs
andnps
outsb
out
test
push
in
rorb
movsl
push
mov
repz
aad
in
xor
sub
test
es
popa
das
xor
imul
mov
xchg
or
in
push
push
add
jge
mov
pop
fsubs
shll
cwtl
push
jae
hlt
insl
shl
mov
mov
cmp
xchg
and
push
cwtl
xlat
mov
dec
test
ljmp
movb
ss
adc
daa
inc
arpl
xlat
mov
rcr
addb
mov
out
mov
or
dec
les
sarl
pop
pop
push
mov
stc
popl
push
mov
mov
xchg
pop
xlat
imul
sbb
cli
int
int
dec
jnp
sahf
repnz
es
scas
lcall
cmp
data16
lods
pop
jbe
movsl
push
or
mov
pop
leave
push
jle
push
sarb
in
lret
je
adc
jge
imul
aaa
pop
out
repz
push
mov
mov
adc
xchg
bound
out
sti
nop
sub
std
jg
push
jmp
in
outsl
popf
outsb
jbe
out
push
je
ret
xchg
pop
mov
jns
mov
ja
xchg
jp
int3
sarb
adc
pop
ds
mov
out
test
mov
mov
outsb
dec
or
mov
inc
sbb
mov
pop
stos
jle
pop
pop
sbbl
cltd
mov
sub
sti
lret
sub
and
adc
inc
push
mov
lret
cmpsl
shrl
int
push
adc
aaa
sub
add
sbb
cld
insb
dec
out
mov
fidivrs
jae
cmpb
pushf
les
mov
cmpl
aaa
dec
sahf
clc
iret
call
aaa
sbb
xor
incl
js
test
pop
adc
lods
scas
fadds
inc
sti
or
addb
icebp
mov
lea
sti
add
test
daa
mov
push
rclb
sub
pop
jp
sar
xchg
nop
mov
mov
inc
add
daa
xor
or
sbb
sbb
iret
push
push
lea
popa
rol
cmp
fdivrs
dec
mov
xchg
add
cmpsb
cmp
clc
inc
fnsave
out
sbb
fwait
sub
aas
mov
pop
adc
lds
test
in
xor
xlat
mov
rclb
mov
or
mov
mov
test
into
mov
cmp
add
mov
outsb
pop
mov
jp
or
mov
sub
out
mov
andl
add
leave
or
rorb
jl
ss
xchg
or
in
pop
dec
call
dec
enter
inc
and
and
dec
push
sbb
lock
out
inc
push
decb
sti
out
mov
rcl
aaa
mov
or
cmc
mov
es
out
jmp
pop
jp
jmp
out
flds
inc
add
mov
inc
fimuls
cmp
movsl
mov
jo
dec
popf
xchg
sub
jmp
cld
cmp
test
ljmp
mov
sbb
popf
inc
lahf
push
nop
cmp
mov
mov
sbb
daa
pop
dec
call
inc
pop
cmc
pusha
into
test
pushf
push
cmp
jmp
add
data16
jle
sarl
adc
or
fldcw
pop
fdivs
out
stc
cli
pop
and
fnstcw
jecxz
cmc
pop
out
mov
test
xor
xchg
inc
and
xchg
faddl
mov
enter
xchg
hlt
mov
pop
ja
pop
mov
mov
imul
popf
mov
arpl
sub
dec
stos
ret
jmp
mov
hlt
cmc
add
pop
test
mov
addr16
inc
pusha
pop
mov
inc
int3
push
jns
test
jl
xlat
xchg
lods
pop
xor
push
add
cmp
jmp
bnd
jle
adc
enter
and
xchg
jg
inc
stc
lods
inc
fs
cmp
sbb
fcomps
int
cltd
in
out
adcb
mov
lret
jge
mov
adc
xchg
inc
sbb
sub
push
sub
stos
das
pop
pop
mov
iret
sub
out
in
dec
punpcklbw
pusha
mov
insl
xchg
mov
jecxz
sub
mov
lret
in
int3
std
add
mov
in
test
or
rorb
in
xor
cmp
sbb
int
cmp
js
push
ljmp
dec
dec
std
stos
push
mov
xchg
adc
cs
leave
addl
bound
mov
inc
cmp
sti
cmp
stos
inc
leave
cltd
inc
cmp
adc
dec
shrl
xchg
in
push
inc
cmp
cmp
dec
loope
and
dec
pop
stos
dec
scas
movsl
jae
fsubl
adc
mov
push
hlt
bound
dec
adc
int3
or
and
dec
jmp
int3
aam
pop
or
cmpsb
pop
mov
cmp
mov
mov
and
add
cwtl
inc
jns
mov
mov
fs
cmp
scas
movsb
or
andb
sub
jmp
test
sbb
lock
stc
mov
ds
in
inc
cmp
pop
in
push
in
mov
cld
lea
mov
pop
pop
or
lcall
pop
sarb
cmpb
outsb
mov
in
inc
jnp
mov
pop
add
jno
jmp
adc
mov
sbb
pop
or
xor
test
cmpsb
sub
sub
jo
mov
mov
or
add
push
add
test
cli
mov
imul
or
imul
mov
sbb
xor
and
jmp
cmp
mov
jge
jp
xorl
cwtl
push
jg
sbb
aaa
mov
daa
shll
std
adc
das
sbb
adc
shl
dec
test
mov
xor
aad
sub
movsb
mov
adc
rclb
fldl
flds
mov
insb
jle
loope
adc
arpl
pop
fdivl
insb
jle
mov
pop
jns
mov
pop
enter
xchg
daa
gs
pop
xchg
mov
addr16
fadds
add
inc
mov
sbb
ret
and
loope
int3
jmp
dec
in
ljmp
push
cld
inc
enter
add
sub
mov
iret
sahf
in
lret
iret
dec
add
in
popf
pop
jnp
cwtl
or
cld
cwtl
or
in
inc
loop
adc
shrl
jg
adc
xchg
xchg
sub
iret
cmp
in
fiadds
pushf
mov
push
push
sbb
fmul
add
and
pop
repz
or
cmp
cli
inc
popf
je
jmp
movsl
add
lea
stc
or
and
pop
mov
mov
je
mov
shrb
jmp
jno
dec
inc
int3
push
mov
pop
loop
sbb
lods
mov
rolb
int3
adc
add
fisubs
add
repnz
pop
sub
jns
sti
xchg
cwtl
dec
fstps
shrb
or
outsb
dec
sar
mov
jbe
lock
outsb
mov
xor
xor
mov
add
test
fucom
pop
push
ffree
mov
xor
pop
xchg
and
fistpll
inc
dec
or
iret
xor
fmuls
decl
jg
frstor
mov
bswap
loope
fisttpll
mov
lock
pop
cmpb
lcall
lock
jg
xchg
and
loope
sahf
daa
push
xor
xor
jl
sub
arpl
daa
jns
pop
nop
cwtl
mov
cmc
lods
mov
and
movsl
mov
adc
dec
push
lods
pop
int
push
ret
jns
ss
mov
sbb
sub
push
iret
cmc
xor
es
mov
mov
and
jg
or
cli
jo
loop
and
outsb
mov
inc
mov
and
and
xchg
add
mov
push
int
into
popf
xchg
xorl
jmp
lea
pop
xor
in
push
add
xor
cmp
lahf
push
loop
sbb
pop
daa
jg
rolb
cmp
lds
cwtl
mov
ret
cmpsb
jne
imul
jns
and
mov
dec
and
jmp
inc
and
mov
jle
popa
pop
ljmp
jmp
lds
jecxz
xor
les
int3
jp
call
lods
mov
jge
jle
sub
push
adc
dec
sub
sbb
dec
cmp
mov
xor
and
loopne
sbb
mov
jb
fisubs
push
jbe
fcoml
dec
out
jp
icebp
add
or
aas
jp
fbstp
incb
xor
and
cmc
or
fisubs
hlt
in
int3
loopne
jns
fwait
out
mov
push
xchg
cmp
sub
lods
jge
aas
push
pop
pop
mov
adc
and
mov
testb
jg
xlat
aaa
out
dec
cmp
inc
jle
and
ficoml
lret
repz
add
cmp
mov
sbb
in
fs
lret
cld
mov
sub
stc
out
stc
je
or
push
subb
fcompl
in
mov
test
jecxz
in
pusha
out
inc
and
mov
das
mov
sub
movsb
popf
push
test
shrl
mov
popa
sub
and
mov
sbb
iret
push
testl
adc
mov
mov
outsb
pop
lods
adc
mov
fstps
jl
mov
out
std
cltd
loopne
mov
int3
jg
add
add
inc
ret
mov
popa
dec
sbbl
xchg
and
test
mov
stc
aad
int3
aaa
int3
jg
inc
outsb
add
adc
loopne
or
out
loopne
xor
add
add
lods
mov
xchg
cwtl
mov
dec
adc
jb
dec
lahf
lods
cmp
js
negb
mov
inc
shl
or
pop
rol
ret
sbb
or
js
ret
cmp
xor
jo
xor
push
and
cmp
lahf
lock
shlb
xchg
sub
and
rorb
inc
sarl
xchg
jl
mov
xor
ljmp
adc
lcall
pop
mov
int3
loopne
sbb
lods
mov
clc
ljmp
push
mov
imul
push
pop
mov
imul
push
movsb
sub
out
or
mov
add
or
shlb
jb
ficompl
mov
push
pop
pop
dec
mov
rclb
jae
sbb
add
adc
sti
sbb
pop
ss
or
inc
mov
iret
shrb
sbb
sahf
xchg
hlt
pop
aam
daa
out
mov
push
jge
jae
pop
mov
jne
jmp
aaa
xor
push
jge
ret
or
mov
mov
dec
or
dec
or
xor
xchg
xchg
xchg
xor
lock
push
mov
xchg
leave
xchg
sub
fistpll
push
insl
add
mov
push
ffree
inc
pop
jge
adc
push
xor
adc
shlb
es
fsubl
out
push
sub
aas
mov
popa
xor
out
and
fldt
aas
mov
hlt
fcomp
icebp
mov
in
xchg
idivl
aas
mov
xchg
mov
add
das
pusha
loop
aad
dec
sub
aaa
xchg
out
lcall
cmp
repnz
push
dec
push
shl
push
adc
dec
in
or
loope
xor
sbb
push
insl
jp
and
fbld
cmp
dec
sarb
mov
repnz
push
and
jecxz
pop
sbb
push
movsb
mov
add
cmp
pop
pop
cmc
mov
cmp
sub
out
or
or
inc
lods
ds
movsb
mov
scas
rcrl
lock
lret
xor
or
adc
or
pop
popf
mov
cmp
cmpsb
psubsw
cs
mov
and
mov
mov
mov
inc
and
and
neg
mov
push
push
jae
cmp
jg
scas
mov
sub
dec
inc
fisttps
dec
aas
arpl
int
test
add
jmp
or
pop
nop
hlt
ret
out
sub
sub
rorb
cld
dec
mov
mov
das
cmpl
mov
lock
rcrl
adc
loope
sub
cli
cs
mov
mov
shrl
pop
test
cs
out
xor
pop
inc
fsubp
outsl
mov
sbb
push
stos
sbb
outsb
pop
rorl
stc
dec
cmc
jnp
mov
or
sbb
jns
or
mov
repz
scas
xlat
xor
pop
filds
jnp
mov
xor
xchg
xor
dec
inc
adcb
jle
mov
add
divb
sbb
arpl
aas
mov
ret
mov
andb
jne
mov
shrb
sub
mov
aad
pop
xchg
xchg
mov
and
shrl
adc
loopne
sub
mov
in
mov
lods
fidivrl
out
or
push
es
xor
fcompl
pop
fbld
cwtl
in
out
xor
cmpsl
imul
inc
cmp
or
and
mov
jbe
cmpb
dec
in
stos
pop
cmp
inc
xor
jae
mov
add
add
pop
adc
dec
mov
lds
sub
lds
jp
sahf
cmp
push
std
lahf
and
jge
inc
xchg
in
clc
push
xchg
mov
fcoms
lock
call
push
mov
sahf
les
lahf
fidivs
and
inc
divl
mov
sbb
sbb
inc
inc
lods
mov
dec
mov
xchg
mov
sahf
mov
rorl
jnp
adc
push
std
jmp
jns
sub
sub
jbe
sub
sar
sub
nop
ud1
ja
lods
or
and
lcall
cld
or
jge
out
push
ret
subb
pop
dec
adc
xchg
and
sub
and
inc
xor
pop
pop
daa
push
fisttps
adc
cs
lcall
dec
mov
mov
or
or
cmp
inc
clc
mov
xchg
jns
movsl
add
daa
push
in
dec
xchg
pop
xor
cmp
cltd
mov
call
dec
xchg
xor
movsb
adc
xor
std
rorl
imul
cmp
mov
pop
xor
xchg
lret
jo
add
add
push
fistpll
sti
jne
sahf
xchg
pop
jo
add
jb
test
andl
or
in
jbe
stos
add
add
and
int
jno
mov
jge
rol
pop
data16
and
and
sbb
movsb
sub
jg
ljmp
stos
cmp
movntps
xchg
xchg
inc
pop
mov
mov
jns
mov
inc
ja
cmp
out
dec
mov
fidivrl
loope
test
mov
outsl
and
push
sbb
ja
pop
mov
push
and
adc
pushf
inc
jne
mov
jne
leave
imul
dec
fisttpl
dec
and
es
mov
dec
cmpsl
test
orb
push
mov
aad
mov
and
out
dec
xchg
mov
sub
jo
leave
inc
pop
fiaddl
lods
mov
or
adc
xor
xor
in
loop
lea
fdivrs
jmp
lret
and
inc
std
shrb
mov
add
xlat
jp
fnsave
ret
outsb
mov
call
movsb
adc
pop
cmp
mov
nop
mov
adc
jae
sbb
insl
cld
or
and
jmp
inc
bound
xlat
dec
int3
adc
stos
clc
mov
dec
int
imul
or
lret
mov
push
in
push
jne
push
cmp
movsb
xor
push
int
mov
ficoml
or
xor
push
lret
jmp
daa
cmp
sti
jnp
movsb
test
mov
mov
je
clc
inc
xchg
sub
dec
mov
out
add
xchg
testb
or
and
cmpl
fcompl
pop
push
lods
or
in
cmp
xchg
in
pop
mov
lods
inc
push
cli
push
shl
inc
pop
xor
mov
push
mov
mov
sbb
inc
jmp
rcrb
xor
jle
sbb
xor
push
xchg
push
mov
arpl
mov
or
fs
aam
dec
xor
mov
out
sub
sub
das
ret
test
add
or
cltd
ljmp
aas
mov
sahf
xchg
or
idivl
outsb
jo
lods
jp
popf
jae
stos
js
std
inc
adc
icebp
stos
lods
outsl
rcl
dec
push
mov
cmp
add
add
sbb
addl
cld
push
push
xchg
sbb
hlt
arpl
out
pop
xchg
inc
jae
es
jl
or
mov
repnz
mov
pop
je
dec
pop
in
sbb
int
loop
xor
xor
sbb
mov
inc
cmc
rcrl
jle
fstpl
cmp
add
sbb
and
in
mov
fmuls
mov
xor
testb
mov
loopew
sub
jo
fildll
insb
andl
cmp
sbb
xor
inc
je
lcall
mov
mov
test
adc
cmp
mov
push
inc
out
shrl
arpl
mov
mov
ds
inc
stos
jle
lock
fwait
xor
xor
or
fdivrl
ret
cltd
push
mov
lret
mov
sti
xor
dec
cld
xchg
jp
dec
mov
jmp
add
xchg
adc
mov
js
lret
scas
cmc
dec
nop
fdivrs
shll
stc
inc
sarb
sub
or
lret
dec
repnz
je
out
sub
test
xor
or
or
inc
icebp
xchg
mov
push
arpl
lea
jl
aas
adc
jg
cmp
dec
mov
sbb
lret
or
push
xchg
aas
cmp
or
movsl
mov
jle
jbe
or
stc
xchg
inc
mov
mov
test
push
test
std
inc
xor
push
cmpsb
lods
mov
jg
insb
cs
mov
rcrb
call
cmp
pop
or
imul
es
in
pop
cli
leave
iret
adcl
in
cwtl
hlt
adc
dec
jno
mov
xchg
pop
mov
and
std
loopne
xchg
lods
jns
and
stc
mov
rorb
and
dec
xchg
int
popf
mov
lret
xor
mov
test
out
idiv
lock
call
cmp
mov
jb
pop
cmp
fcmovbe
xchg
and
adc
lret
sti
push
fldenv
das
adc
dec
cs
mov
test
popf
cmp
xchg
mov
jle
movsl
and
add
pop
xchg
cmp
pop
cltd
andb
inc
aam
testb
fs
incb
mov
cmp
add
mov
sbb
lret
add
test
jo
rclb
cmp
dec
sbb
cmpsb
int3
std
movsl
push
shrb
loopne
outsl
inc
cmp
jmp
sub
popf
xor
mov
jo
movsb
jecxz
test
scas
icebp
subb
adc
movsl
int3
sub
cmp
int
or
jge
iret
inc
out
push
push
or
push
fnstcw
stos
int3
push
push
cmc
paddusb
add
sahf
ljmp
inc
sti
out
arpl
ret
cltd
sbb
adc
movsl
fbld
fisubrs
outsl
cmp
mov
mov
mov
jmp
sahf
and
fstpt
ret
sbbb
xchg
into
shll
test
call
pop
and
mov
imul
fdiv
cmp
push
lcall
mov
pop
ss
pop
and
push
dec
inc
xor
add
lea
or
icebp
mov
push
jns
push
leave
adc
pop
jne
adc
loop
sbb
test
in
cld
jbe
rclb
push
std
das
int3
pop
or
push
pop
jb
pop
cld
or
dec
inc
pop
inc
sbbb
inc
sub
push
ret
and
popa
sub
pop
sub
bts
insb
xor
adc
dec
jle
ss
in
fidivl
fisttpl
outsb
dec
and
mov
xchg
add
dec
cmp
lods
movl
push
dec
mov
fwait
push
mov
sbb
mov
adc
lds
adc
cmc
xchg
cwtl
aaa
rclb
mov
fbld
jge
push
cmp
jno
test
out
test
sbb
inc
push
shl
xchg
icebp
jmp
lods
sub
unpcklps
cmpb
pop
sbb
xor
inc
lds
fbld
jle
rdtsc
mov
sub
xorb
js
or
dec
inc
sub
lret
ds
jecxz
in
lret
sarb
and
data16
aad
cmp
jae
rclb
pop
xchg
out
push
mov
cmpsl
sbb
data16
dec
add
sub
mov
js
mov
sbb
rol
aaa
cmp
leave
inc
adc
pop
inc
shlb
leave
iret
aas
and
sub
into
inc
pop
shlb
push
xchg
or
inc
sbb
sbb
clc
dec
lds
in
xor
out
jne
divb
or
inc
or
and
jo
inc
icebp
jl
shlb
sub
jle
pop
lea
pop
xor
adc
fs
sbb
clc
fstpt
inc
mov
sub
outsl
inc
into
pusha
adc
jl
dec
push
jne
mov
insl
jp
xchg
bound
lods
cs
adc
dec
adc
scas
push
out
fstl
arpl
dec
adc
outsb
out
iret
cwtl
push
mov
jno
xchg
jmp
test
add
cmp
ret
out
xor
push
stos
xchg
sub
nop
shrb
je
clc
out
mov
and
cmpsl
add
mov
mov
aad
stos
xor
xorb
js
pop
leave
test
or
aas
rorl
push
jno
xor
das
cmp
sbb
pop
inc
andb
adc
aad
inc
fdivl
mov
cmp
addr16
fsubs
outsl
jmp
lea
fisubrs
jecxz
out
incb
fstps
cwtl
dec
mov
jne
jp
xchg
dec
imul
dec
and
push
pop
push
add
sti
sbb
xor
ljmp
mov
in
adc
push
out
cltd
sub
ret
xchg
outsb
push
inc
into
mov
mov
or
stos
addr16
test
iret
fnstsw
jae
pop
mov
lret
xchg
cmpsb
fisubrs
cmc
pop
call
add
shrb
out
dec
iret
xor
mov
ret
subl
jle
or
lds
cmp
sbb
or
test
push
gs
int
clc
cmp
jp
dec
cmc
nop
mov
cld
ss
mov
fsubs
jno
insb
pop
stos
sbb
popl
cmpsb
and
jmp
inc
dec
loope
or
clc
dec
pop
repz
sbb
sub
fwait
lahf
mov
sbb
aam
cli
xor
xor
dec
loope
fcmove
shrl
cmc
sbb
cwtl
adc
sub
enter
sbb
leave
pop
mov
out
jbe
mov
out
add
sbb
mov
add
xor
pop
inc
orb
js
and
rolb
pop
or
ljmp
or
shll
xor
cmp
push
sarl
subb
testl
popf
ja
jg
and
push
dec
insl
mov
or
les
adc
test
or
es
xchg
dec
arpl
sti
ja
popa
mov
fst
adc
jns
mov
scas
push
insl
scas
mov
mov
daa
or
mov
add
sbb
or
adc
inc
fidivrl
mov
lret
mov
cld
int3
ret
and
dec
sarb
leave
js
movsl
jge
jl
push
inc
or
ret
and
xchg
mov
sub
xchg
mov
jo
push
repnz
inc
cwtl
pop
incb
jl
adc
jp
pop
ds
fisubl
or
outsl
aas
roll
or
ss
sub
push
loop
mov
frstor
fwait
mov
dec
xor
inc
test
sarl
movsl
adc
outsb
jo
and
xorl
fwait
sbb
lcall
vaddss
fmulp
mov
ficompl
push
cmp
stc
imul
in
jge
into
bound
cmc
loope
call
cmp
pop
rcrl
test
xchg
js,pn
icebp
adc
stos
imul
xchg
jbe
push
xchg
stos
outsl
sub
bound
orb
pop
cmp
fcomps
movsb
test
add
dec
push
cmp
adc
fsubrs
and
aaa
mov
mov
leave
in
mov
mov
and
push
movsl
std
in
dec
and
jg
shrl
sub
iret
mov
or
jl
jp
add
xchg
insl
or
push
mov
das
xor
mov
jle
jno
sub
cmp
loopne
pop
sahf
push
lahf
flds
mov
sbb
lods
mov
ret
jae
jl
pop
dec
js
mov
push
test
fcoml
cmpsb
neg
push
pop
inc
pop
cmp
xorl
mov
dec
jb
cmpsb
mov
pop
sub
jnp
sti
jno
push
in
sahf
pop
push
add
rcrl
sbb
cmpsl
xchg
pop
insl
inc
in
test
lcall
adc
jae
cmp
movsb
ljmp
xchg
out
mov
mov
adc
xchg
sbb
lods
adc
and
gs
imulb
fwait
add
or
clc
and
aad
dec
sub
fsubrl
mov
mov
pop
shrb
lret
push
dec
fists
test
jo
call
imul
arpl
mov
mov
fcomi
xlat
mov
sbb
sbb
rcrb
mov
int
shll
xchg
bound
pop
sub
jle
scas
in
or
movsb
shll
pop
inc
mov
int
sbb
pop
or
add
cmp
icebp
lea
mov
and
jmp
fs
shr
cmp
int
imul
add
aas
insl
mov
sbb
mov
mov
push
inc
mov
pusha
xchg
dec
sub
aaa
je
add
lock
lea
lods
enter
andb
out
lret
jo
push
push
cmpsb
mov
sub
outsl
loop
add
xchg
out
jle
fcmove
sub
cmp
pop
inc
orb
aaa
out
mov
pop
ljmp
xor
sub
outsl
cmc
add
rorb
stos
cld
mov
push
pop
imulb
cmp
and
or
inc
cmp
lahf
xchg
push
or
adc
scas
jo
jecxz
dec
dec
cli
cli
dec
pop
out
lea
mov
xchg
sbb
cltd
mov
mov
adc
or
pop
dec
hlt
lods
xchg
add
inc
xchg
pop
pop
inc
xchg
dec
aaa
jo
stos
push
stos
mov
mov
mov
test
out
loopne
inc
pop
shll
push
inc
adc
or
into
sahf
adc
test
inc
mov
push
xor
dec
mov
leave
mov
call
std
and
cmc
movsb
xchg
rcll
rclb
scas
jl
lds
add
sbb
out
out
in
add
xor
in
sbb
xorb
push
popa
sbb
test
mul
and
shlb
mov
mov
xchg
sbb
fistpll
sbbb
fsubl
push
add
push
push
mov
sti
cmp
loopne
shll
inc
mov
stos
lcall
les
mov
inc
mov
xchg
mov
lock
in
cmp
cmp
add
adc
mov
jnp
fldcw
dec
ret
pop
sub
ret
xchg
ja
mov
mov
adc
xchg
or
push
cmp
pop
mov
int
loop
cmpl
push
sahf
lods
insl
mov
out
mov
in
aas
inc
divl
inc
rolb
cmc
and
mov
adc
sahf
push
inc
dec
icebp
xor
sbb
push
add
push
mov
int
aad
pushf
and
jno
push
sar
pushf
mov
repnz
into
aaa
jns
movsb
enter
pop
add
sub
cmp
push
cmp
push
xor
insb
adc
mov
and
lods
mov
sub
inc
aad
cs
and
sub
or
mov
pop
xchg
push
adc
daa
int3
mov
xchg
dec
add
sti
fcoml
fimuls
bound
out
sub
jle
dec
xchg
xor
jmp
lret
mov
mov
pop
sub
xor
mov
fstpt
into
add
jb
in
out
jmp
or
out
jae
out
scas
jmp
xlat
call
out
pop
ret
sar
dec
jle
mov
int3
js
xchg
pop
xor
push
int3
enter
push
mov
jnp
iret
stos
les
xchg
or
insb
negb
addr16
mov
daa
data16
rorb
notl
dec
jmp
jo
push
faddl
jno
dec
mov
lret
call
and
jo
dec
or
fldcw
fs
dec
mov
gs
xlat
cmpsl
rcll
rolb
cli
aas
mov
cmp
mov
xchg
inc
cmc
mov
push
fsubrs
push
mov
hlt
adc
popf
xor
movsl
sbb
xchg
loope
and
push
mov
mov
jbe
in
push
jae
imul
lods
stos
ds
and
sub
nop
push
sub
int
sub
lock
popf
pushf
hlt
iret
enter
mov
orl
sub
push
mov
xor
mov
push
push
mov
cs
aam
aad
cs
lret
dec
arpl
outsl
adcl
xor
loopne
dec
mov
mov
jge
xchg
jns
pop
insb
ja
or
mov
pushf
add
outsb
arpl
dec
inc
cmpl
cmp
ja
add
shlb
xor
sub
icebp
fimull
in
test
in
xor
or
bound
test
lahf
and
dec
xor
mov
jle
sub
fdivrl
mov
aas
loop
xchg
sub
clc
adc
lahf
cli
add
sbb
js
xchg
jle,pt
movsl
add
push
sub
pop
lret
shll
cltd
dec
es
mov
orl
imul
xchg
xchg
imul
enter
js
mov
adc
mov
cli
out
idivl
stos
sbb
mov
loope
inc
mov
and
mov
daa
push
add
sub
mov
test
clc
adc
lods
rorl
mov
aad
pop
dec
push
xor
nop
inc
cmc
test
stos
and
xor
movsb
jge
mov
addl
push
shrb
stos
leave
out
push
hlt
add
lock
int
stc
xchg
mov
cli
sub
rorl
mov
gs
daa
sahf
mov
push
pop
int3
push
daa
dec
jns
inc
inc
mov
sbb
sbb
pop
xchg
adc
jg
ds
push
scas
addr16
jp
fnstenv
jno
inc
and
pop
shl
fst
test
xchg
sbb
pop
int
xchg
test
stos
lret
cltd
popf
sbbb
into
xchg
fldl2t
orl
clc
or
inc
sahf
cmp
dec
or
sbbl
xchg
dec
inc
ret
dec
dec
mov
cmpl
add
outsl
loope
cmp
pop
xchg
mov
insb
xor
orps
test
jge
clc
push
push
add
movsb
aad
xchg
mov
xor
out
or
das
add
adc
mov
pusha
dec
gs
jns
mov
cmp
rcrb
lret
fnstsw
xchg
mov
cld
cmpsl
mov
imul
hlt
mov
mov
add
adc
or
lods
add
in
jno
cwtl
jge
jmp
mov
outsb
xor
sbb
aas
scas
dec
mov
mov
add
cmpsb
xchg
xchg
mov
aam
pusha
pop
cltd
jnp
ljmp
in
mov
xchg
fwait
fs
or
enter
push
push
outsl
and
push
pop
fs
movsl
inc
insl
mov
or
sbb
xchg
add
inc
push
lret
dec
cld
mov
dec
sbb
push
pop
test
sub
iret
adc
mov
jp
jo,pt
out
and
sub
add
xchg
or
fldcw
ret
divb
test
lahf
stos
fldcw
int3
stc
cmp
cmc
mov
sbb
push
ds
mov
or
sbb
jmp
cmp
lahf
ret
aad
repz
rorb
les
lea
addr16
jne
out
popa
movsl
test
sub
xor
mov
inc
dec
ds
fbstp
cmp
aaa
adc
sbb
jb
into
mov
dec
xchg
and
icebp
aaa
mov
les
loope
into
xor
movsb
pop
mov
mov
add
outsl
xlat
push
or
call
xor
dec
dec
cmp
push
fwait
mov
mov
ret
push
movsl
mov
insb
roll
js
clc
jg
add
js
addr16
mov
cmp
push
ret
cmpsb
incl
daa
lcall
inc
out
nop
inc
int3
rorl
testl
jnp
xor
pop
negb
ror
shlb
push
mov
push
imul
push
aaa
mov
jns
movaps
rol
test
adc
test
xor
scas
mov
insb
ret
aad
xor
sbb
push
nop
pushf
fsts
inc
mov
pop
jp
addr16
ljmp
add
nop
hlt
xchg
or
xchg
jnp
xor
mov
cmp
stc
cmp
jns
sbb
pop
insb
dec
scas
jo
sub
cmp
inc
fisubrs
sub
jle
cmpl
and
test
push
mov
lods
arpl
stos
mov
bound
movsb
push
lds
pop
sub
pop
das
inc
add
fildll
push
xlat
out
aas
jmp
and
push
lock
mov
mov
outsb
jnp
stos
jo
adc
clc
fdivs
or
adc
test
push
in
hlt
mov
inc
rol
sarl
into
xchg
daa
push
movsb
lret
cmp
xchg
fs
jecxz
cmpsb
push
out
nop
sub
frstor
fstpt
xchg
cwtl
inc
fiaddl
and
movsl
mov
loop
xor
xchg
fmull
bt
inc
rol
and
inc
divb
mov
pop
jle
loopne
out
sub
sub
cld
pop
shlb
mov
int
pop
pop
pop
adc
jnp
sbb
sbb
scas
and
adc
fldenv
push
mov
push
sbb
push
and
enter
add
cmp
cmp
arpl
mov
xlat
mov
out
bnd
sub
test
inc
mov
add
cmp
movsb
push
pop
loope
loopne
dec
in
jae
mov
mov
or
xchg
sbb
xchg
daa
cltd
mov
xchg
lret
jns
push
adc
push
xor
out
outsb
movsb
cli
leave
or
cld
jmp
mov
into
sub
adc
daa
or
cmpsl
mov
repz
and
push
sub
and
cmp
sarb
xchg
cmovp
mov
xor
popf
rolb
xchg
repnz
cmc
in
or
mov
movsl
lds
lea
xchg
push
incb
xchg
mov
jb
add
imul
outsl
mov
pop
lods
ljmp
cmpsb
scas
ret
inc
mov
sub
cltd
mov
xor
dec
sbb
fistpll
dec
pusha
jmp
mov
outsb
jb
xor
insb
push
xchg
das
cwtl
nop
movsb
and
sub
loope
dec
xchg
jecxz
loop
stc
mov
scas
dec
ja
xor
arpl
pop
sahf
or
xchg
cmp
fwait
inc
and
cmp
pop
mov
adc
mov
mov
jo
add
mov
sbb
orps
push
lcall
loope
or
js
or
scas
shll
out
cmpsl
jnp
fs
dec
dec
sub
or
into
push
cmp
cli
jbe
jnp
xchg
jo
gs
dec
aad
and
data16
push
xchg
nop
jl
and
aas
sahf
testb
cmc
mov
jl
in
mov
adc
push
fisubs
adc
mul
dec
ficompl
push
push
clc
jg
xchg
iret
cmp
mov
jmp
dec
lock
clc
nop
out
mov
xor
cmp
sub
jae
leave
xchg
push
mov
lods
lret
sbbb
nop
lcall
sbb
ret
push
xchg
mov
daa
push
pop
pop
pop
int
or
add
xchg
push
sti
add
jo
add
insl
pop
cmpsl
mov
inc
scas
fsubl
jp
jmp
pushf
das
xchg
cs
sbb
jge
hlt
adc
jl
popf
jnp
ja
sarl
inc
add
sti
push
sbb
in
popf
es
icebp
shrl
loope
inc
cmp
mov
std
pop
jp
add
lret
lcall
in
mov
jmp
pop
cmp
ficomps
xor
out
mov
outsb
or
mov
sub
sub
pop
inc
sti
push
pop
sbb
inc
pushf
jle
sub
int3
icebp
jmp
rolb
jge
test
rep
notl
sub
out
xchg
jb
sarl
xchg
sar
subb
sarb
xor
insl
mulps
sbb
cs
fisttpll
out
sub
fisubrl
add
icebp
scas
xor
xchg
arpl
mov
in
ret
aas
mull
scas
pop
loop
xor
mov
mov
pop
jmp
pop
aad
lock
cmpsl
roll
cmp
or
mov
jae
aaa
and
xchg
or
mov
jmp
xchg
push
shl
sahf
gs
popa
xchg
mov
jmp
mov
mov
inc
scas
hlt
add
enter
push
sbb
lret
push
enter
fs
cmpsl
pop
lds
mov
mov
add
js
fwait
xchg
jae
and
mov
mov
xchg
xchg
and
fsubrl
je
adc
add
cli
or
aas
adc
enter
negl
stc
push
adc
push
cmpsb
cmpsl
jmp
mov
sub
cmpsb
pop
call
insb
jg
outsb
inc
jecxz
test
lods
mov
mov
adc
in
lret
push
out
leave
push
mov
lock
cmpb
adc
jg
or
shlb
cmpsl
push
and
faddp
mov
mov
leave
call
clc
or
cmp
enter
iret
clc
data16
mov
sbb
lahf
dec
arpl
lds
in
int3
cmp
xchg
enter
cs
mov
mov
mov
cmp
add
dec
or
pop
test
fimull
adc
popf
cwtl
fldcw
adc
pop
push
test
and
xor
jae
ljmp
xor
daa
in
insl
mov
mov
stos
lods
cwtl
mov
dec
mov
xlat
ret
jno
sbb
imul
mov
shll
xchg
ljmp
stos
pop
mov
xor
xchg
mov
ds
into
adcb
out
push
sub
jo
mov
outsb
sub
pop
ljmp
pop
push
lods
sti
jnp
andb
jmp
ds
pop
scas
ds
in
enter
or
gs
sub
mov
push
cmp
push
mov
add
xor
clc
sbbl
cmpsb
mov
scas
fistl
jo
mov
lret
pop
inc
dec
loope
add
lret
es
imul
pop
addr16
pop
jne
inc
jae
rclb
in
movsl
jle
cmpsl
in
iret
push
cmpsl
enter
push
pop
pushf
jae
int3
jno
pop
repnz
pop
movsb
jno
inc
jb
icebp
scas
stc
int3
dec
mov
adc
mov
add
jb
and
push
sahf
jecxz
cli
loopne
andl
shll
fwait
in
les
fs
lcall
rcll
inc
out
aas
xor
sbb
jo
cmpsl
mov
push
jmp
je
es
xor
clc
fidivl
jae
adc
push
jmp
xchg
push
pop
add
fmull
bound
and
adc
imul
pop
rol
sub
dec
xor
pop
mov
loop
leave
fneni(8087
mov
pusha
mov
lods
mov
jge
jg
cs
repnz
xor
or
sbb
jne
pop
and
popl
xor
aad
dec
inc
mov
and
test
into
and
xor
cmc
outsl
jae
rorl
hlt
add
jb
sub
repz
gs
cmpsl
and
add
pop
outsl
jae
sub
popf
push
sti
or
add
jns
jmp
lret
imul
movsb
cld
jmp
mov
or
rcrb
mov
mov
cmpsb
push
xchg
pop
jp
lret
inc
jp
gs
adc
js
vmread
adc
cwtl
insl
cmp
out
aad
iret
sahf
adc
mov
fs
pop
push
popa
sbb
push
fistl
cltd
lea
inc
or
cmp
movb
fiadds
lcall
out
mov
jle
pop
sub
xchg
dec
das
inc
dec
mov
mov
sub
inc
mov
iret
push
sbb
ljmp
cmp
jnp
add
cmp
out
xlat
je
aad
xor
push
movsb
push
rcrl
inc
roll
leave
adc
push
in
sub
mov
call
pop
mov
mov
test
xorl
incl
mov
jae,pt
inc
in
nop
adc
dec
hlt
mov
std
add
repnz
xchg
add
aas
add
shll
movl
fdivr
sahf
mov
lods
incb
sbb
loopne
cltd
xchg
ljmp
mov
rorb
inc
inc
jl
pop
outsb
xchg
xchg
jae
outsb
loopne
subl
shlb
xlat
mov
pusha
mov
cltd
mov
sbb
add
dec
and
fistpll
or
xor
popa
sub
xor
out
jle
mov
scas
inc
insb
iret
aaa
addr16
je
int3
cmp
cli
xchg
sub
pop
jp
into
xchg
inc
push
mov
add
pop
jb
das
mov
inc
jp
or
xlat
pop
sub
pop
xor
lret
fidivrs
sub
mov
mov
mov
adc
jo
fldenv
test
add
lret
fimull
xchg
pop
mov
imulb
pushf
jnp
rcrl
mov
clc
decl
mov
xor
fsub
test
adc
ds
mov
jb
inc
test
jo
jle
movb
cmp
loop
push
notb
iret
sub
add
fsub
dec
lret
outsl
lods
out
sub
call
xchg
shrl
jb
clc
sub
aaa
jg
push
lcall
sbb
xchg
push
mov
cmc
jo
pop
test
push
pop
sbb
fstps
in
pop
and
cs
inc
add
xor
shll
cmp
inc
xor
in
xchg
les
sbb
int
add
repz
fcomps
push
call
mov
popa
cwtl
sub
mov
xchg
fwait
inc
push
push
lret
test
test
xchg
or
popa
shrl
xchg
fisubrs
std
insb
lock
out
mov
shlb
nop
in
pop
fadds
cs
lea
outsb
gs
and
lcall
xchg
jp
inc
sti
js
int3
je
pop
ret
mov
cmp
jmp
mov
dec
mov
sbb
gs
mov
pop
leave
adc
add
jmp
std
sarl
mov
inc
cmp
xchg
xchg
dec
insb
sbb
mov
cmpsb
pop
mov
sbb
cmc
jmp
mov
xchg
mov
pop
jp
out
negb
xorl
pop
xchg
pop
mov
push
es
mul
repnz
stos
rorl
push
ret
lock
pop
addr16
into
or
or
sbb
xor
jnp
xlat
pusha
push
mov
pop
push
js
insb
add
add
or
mov
dec
inc
scas
shrb
test
ljmp
push
cltd
mov
push
jmp
test
mov
sbb
jb
insb
addr16
test
xor
mov
js
mov
jae
std
fsubrp
std
lock
xchg
in
imul
sub
mov
popa
aas
pusha
lods
lock
pusha
ret
push
mov
iret
mov
and
ret
sbb
jno
das
pop
cld
xchg
dec
xorb
repnz
sub
and
sbb
cli
inc
in
call
out
ja
mov
lahf
rcll
push
add
bound
inc
fcomps
cmpsb
pop
ss
icebp
inc
hlt
fdiv
push
inc
addr16
lds
or
cmpl
addb
imul
push
es
in
icebp
sbb
adc
push
fisubs
xchg
test
xchg
andl
push
testb
dec
push
and
jl
daa
pop
sub
cmp
ret
or
hlt
cmc
cs
movsl
jl
fdivs
push
cmp
enter
cmp
fcom
jo
pop
aam
mov
jne
lock
xor
dec
mov
push
filds
ljmp
inc
ficomps
pop
ret
mov
outsb
scas
call
ss
inc
sti
test
rclb
mov
lock
fwait
adc
incl
in
loope
enter
jp
sub
bound
incb
inc
jo
inc
cmp
out
faddp
xchg
mov
movsb
fistps
shl
pop
sbb
xchg
pop
dec
mov
jg
cld
or
test
sub
mov
mov
jns
fdivl
cwtl
rcrl
rolb
pop
sbb
cmp
xchg
push
fiadds
mov
and
in
jmp
cmpsl
cli
inc
pop
mov
jmp
dec
xorl
inc
test
adc
rep
call
pop
xor
lcall
push
into
xor
pushf
jns
aad
and
sbb
lret
test
data16
fwait
ljmp
stos
or
jl
idivl
adc
xor
jae
mov
jg
arpl
xor
pop
test
jns
pop
xchg
sub
daa
gs
test
push
dec
dec
or
iret
push
add
ljmp
jno
in
lahf
cmc
pop
loop
rcll
test
dec
cli
in
jmp
rep
adc
lahf
add
push
pop
xchg
loopne
out
fmull
sub
mov
push
xchg
cli
xor
push
add
xor
roll
js
jae
jp
clc
mov
mov
scas
push
mov
gs
dec
into
dec
cmpsb
loopne
imul
adc
cmp
cld
fcmovnu
lods
add
sbb
adc
mov
out
dec
jns
movsb
fimull
xor
inc
aad
les
mov
xor
mov
sbbl
lock
xchg
push
in
add
mov
outsb
mov
cmp
and
lcall
mov
sub
push
pushf
sbb
mov
loopne
inc
shl
mov
xchg
repnz
jl
add
mov
adc
movsb
stc
lock
cmp
idiv
xchg
es
mov
mov
cmpsl
adc
mov
or
or
mov
xchg
jle
mov
cmp
lds
jnp
imul
dec
cs
jns
lcall
jle
mov
out
pop
push
fwait
stos
pop
adc
test
inc
popf
int
mov
fstpt
xor
fisttps
dec
inc
sbb
jl
mov
rep
dec
fsubl
loopne
lds
push
sbb
sub
sbb
and
jge
xchg
scas
mov
lret
add
loopnew
xor
mov
jp
add
xchg
push
jae
fwait
insl
repz
mov
pop
add
shl
cmp
and
or
xchg
mov
adc
cmp
jnp
add
dec
mov
ret
mov
cmp
inc
mov
repz
adc
inc
repz
push
pop
in
rolb
out
jle
clc
lods
xchg
addb
sbb
jg
and
sub
out
das
repz
jl
or
add
mov
xchg
nop
sbb
fsubl
data16
jnp
push
cltd
shrl
fisubs
xor
xchg
imul
lret
les
sarl
jae
dec
sbb
jno
in
pop
dec
insl
in
shll
je
xchg
push
cmpsl
mov
push
imul
mov
push
or
jl
loope
pop
mov
aas
dec
sub
shlb
ds
out
push
out
stc
nop
mov
sub
insb
xchg
fs
ss
hlt
icebp
filds
loopne
pop
push
aad
inc
aaa
data16
push
jno
cmp
cmp
xchg
mov
sbb
cltd
lahf
mov
andb
into
xor
mov
push
xchg
mov
pop
lds
and
jbe
fimuls
aad
outsl
sub
mov
insb
sbbl
push
jl
jae
pop
fimull
mov
fs
fnstsw
pop
sub
sub
js
jg
cs
push
xchg
jle
insl
push
outsl
and
ss
sub
sbb
lcall
mov
mov
popa
icebp
jae
xchg
cmpl
pop
jbe
pop
add
inc
aas
or
data16
pop
insb
fisttpll
sbb
or
sti
inc
in
dec
sbb
mov
pop
mov
sbb
unpckhps
xor
push
cmp
je
aam
ljmp
xchg
add
inc
inc
add
sub
mov
xor
inc
stc
sub
lcall
and
push
add
std
cmp
pop
mov
clc
mov
aad
mov
out
lods
sbb
sub
mov
aaa
add
addb
jecxz
or
popf
mov
sub
movsb
sub
ret
mov
push
cmp
clc
fists
sbb
mov
iret
mov
cmp
rol
sbb
movsb
cmp
xchg
jg
fistpl
mov
pop
icebp
scas
das
aas
in
hlt
xchg
adc
fwait
add
mov
fsubrs
sbb
xchg
pop
mov
popf
loop
inc
jecxz
pushf
add
cmpsl
dec
push
add
div
test
ljmp
push
test
sbb
stos
and
sbb
and
inc
push
in
movsl
jmp
cmp
lods
cs
mov
stc
pop
jge
dec
cmp
cmp
inc
inc
sti
out
mov
jnp
hlt
jmp
add
cpuid
adc
repnz
dec
sbb
dec
jge
int
cld
packssdw
sub
test
in
test
mov
ss
inc
jmp
pushf
jmp
jns
sbb
or
push
or
in
jno
arpl
or
push
outsb
mov
loopne
imul
leave
or
push
insb
insl
enter
xor
lahf
push
xchg
inc
ljmp
insl
into
sbb
sub
int3
int3
and
stos
push
fbstp
inc
mov
dec
push
jb
sub
fdivs
and
add
data16
scas
fstps
mov
pop
or
test
lock
rcrl
dec
lock
cmp
dec
inc
out
rolb
enter
cli
addl
fstpt
cmp
lcall
or
mov
sahf
lret
sbb
jae
leave
fstpt
jbe
sub
sbb
jne
shlb
inc
call
fisttps
mov
je
sbb
jmp
cld
bound
mov
push
in
jecxz
xchg
dec
dec
mov
mov
ja
stc
cmpsb
mov
cmp
dec
pusha
enter
in
lea
pop
push
mov
enter
jge
xor
pushw
stos
push
ja
stos
sub
push
mov
mov
mov
std
lret
mov
push
hlt
mov
adc
es
mov
or
aad
pop
and
sbb
loope
stc
sbb
sub
shrb
and
xchg
xor
mov
fsts
sarl
mov
xor
enter
inc
mov
jl
sub
lods
in
mov
cmp
xor
push
stos
xchg
push
cs
dec
fldenv
sahf
inc
sub
loop
inc
inc
in
aas
jmp
and
outsl
mov
pop
data16
sbb
inc
pop
addr16
out
dec
lcall
popa
sub
es
xchg
fidivrs
dec
pop
incb
xor
xchg
push
arpl
pop
arpl
pop
mov
je
hlt
idivl
add
jge
sahf
insl
dec
or
mov
outsb
enter
daa
jnp
sbb
rcll
and
or
xor
pop
pop
int3
jp
adc
lock
test
sub
dec
in
es
jnp
pop
icebp
fwait
and
sub
scas
movsb
fwait
and
loopne
xchg
daa
sbbb
inc
sahf
test
hlt
cmp
outsb
les
and
cwtl
lds
iret
dec
push
xor
test
fstl
pop
xchg
das
insb
lahf
cmp
out
add
popa
lods
adc
hlt
int
sahf
movsl
lret
inc
or
mov
mov
or
nop
data16
pop
cmp
mov
push
or
and
push
sbb
dec
cmp
push
cmc
jo
and
mov
jae
into
or
int
push
and
loope
aaa
xlat
inc
xchg
andps
jg
imul
jge
mov
pop
nop
xor
or
mov
jne
jo
jno
inc
loop
test
and
jge
leave
ficompl
test
fs
out
mov
arpl
jno
adc
push
cmp
push
stc
and
or
sub
push
clc
lds
xor
dec
inc
test
fisttps
or
stos
sub
pop
jl
xor
add
mov
jp
test
pop
in
arpl
adc
mov
iret
hlt
rcrl
add
mov
lea
inc
iret
jmp
adc
daa
mov
mov
pop
stc
sarb
sbb
std
adc
pop
or
lret
insb
in
dec
or
popf
fnstenv
sti
mov
ret
outsl
cli
lret
sbb
orl
xorl
shrl
xchg
xchg
xchg
decb
in
mov
out
jecxz
xchg
mov
icebp
lods
push
pop
divb
push
into
pushf
push
sbb
flds
inc
push
pushf
and
lahf
ja
xchg
and
imull
dec
push
fldt
jmp
sbb
push
inc
hlt
push
lods
dec
push
shrl
lds
inc
imul
adc
jnp
fs
mov
test
push
xor
jg
push
mov
addr16
popf
jnp
lods
inc
push
sbb
imul
inc
test
ss
sub
push
xor
or
xchg
dec
sahf
jo
dec
sub
dec
mov
xchg
out
int
adc
xchg
aad
out
cwtl
jne
sbb
in
nop
mov
xor
aas
dec
dec
leave
std
mov
and
arpl
cwtl
out
mov
jno
push
shlb
dec
sbb
repnz
lods
lahf
repz
ffreep
imul
jp
sub
dec
inc
enter
mov
mov
loop
xchg
dec
mov
and
cmp
dec
mov
loopne
sub
cmc
xadd
push
push
sti
xchg
mov
aam
shll
add
cmp
arpl
xchg
addl
jge
pop
inc
push
idivb
mov
adc
jp
mov
adc
pop
add
in
inc
stos
int
scas
icebp
in
jl
leave
mov
ljmp
mov
clc
ret
fwait
xlat
dec
sbb
adc
push
jnp
xor
insl
mov
pop
fcmovbe
mov
sub
pop
aam
movsl
push
push
int3
aad
rorl
movsl
aad
mov
aaa
sub
push
cwtl
int
clc
add
enter
dec
cli
mov
es
dec
es
lds
dec
dec
dec
sarl
cmp
xor
cmp
sbb
pusha
shll
xor
sub
xor
xor
and
rorb
xor
jns
sub
shlb
mov
into
cld
add
out
ja
inc
dec
push
add
lret
sbb
mov
mov
jle
jb
jne
pusha
mov
movsb
repnz
cltd
rep
js
add
or
repnz
xor
cmc
hlt
fsubl
pop
scas
dec
adc
nop
jno
rcll
lahf
lods
pminub
push
xchg
std
mov
insb
ss
rolb
xchg
xor
lahf
lea
lret
mov
sub
int
iret
gs
mov
pop
cmp
push
mov
add
inc
push
xor
enter
scas
popl
mov
dec
js
adc
rcll
rcrb
jge
cmp
adc
inc
cmp
iret
out
inc
sahf
push
stos
push
lahf
dec
add
or
dec
sbbb
lret
sub
data16
stos
dec
xlat
cmc
mov
repnz
testl
loope
lahf
lea
sub
insl
clc
xchg
ljmp
pusha
and
aaa
jo
imul
insb
mov
ljmp
test
lock
xor
or
and
pop
or
ret
push
mov
mov
pop
add
dec
cmpsl
bound
sbb
cmp
sub
jl
xor
stos
and
cwtl
jnp
in
jg
sbb
out
xor
cwtl
popf
mulb
mov
popa
sbb
xchg
jmp
movsl
bound
adc
and
mov
mov
and
mov
roll
and
xor
shl
mov
mov
push
sahf
sahf
aaa
call
jne
add
adc
sub
cmp
iret
fisubl
arpl
addr16
cmp
xchg
adc
adc
and
daa
adc
test
lret
push
enter
fs
mov
ret
lds
and
es
dec
cs
scas
and
iret
lahf
pop
aaa
pop
leave
pop
dec
xor
xlat
ss
ljmp
dec
push
outsl
push
adc
out
add
sub
jnp
sbb
mov
xchg
jl
xor
mov
mov
jecxz
imul
adc
mov
in
cmpsl
mov
ljmp
andb
xchg
mov
mov
fldcw
sub
addr16
popf
sub
cltd
ret
leave
mov
mov
add
cmp
addr16
xchg
testl
cwtl
xchg
loopne
mov
scas
in
mov
bound
sub
pop
mov
dec
inc
aad
jl
push
xor
xor
cmp
cmp
jnp
inc
sbb
sbb
fld
or
mov
mov
movsb
dec
and
jno
cmp
jns
jno
aas
shrl
jg
dec
pop
in
fsubr
cli
mov
push
leave
adc
aad
faddl
loope
cmp
lods
and
cmpsl
shr
sbb
int
mov
cmc
adc
dec
mov
lahf
insb
sti
mov
jmp
cli
aas
push
icebp
dec
adc
mov
lock
xchg
leave
lahf
push
shr
xor
loopne
clc
pop
in
pop
in
aam
push
pop
fistl
jg
jl
movsb
cmp
mov
popf
out
insl
fptan
imul
lods
pusha
add
ds
test
fiadds
xchg
sbb
lods
mov
jle
lcall
addb
dec
pushf
and
icebp
cmp
cmpsb
jle
push
jp
int
mov
sbb
adc
mov
jmp
mov
fisubrl
pushl
stos
gs
je
or
shlb
lret
scas
pop
lea
jl
add
into
jnp
aas
inc
test
push
fcoms
jmp
cwtl
addr16
mov
adc
insl
iret
ret
pop
sbb
or
mov
fnstsw
daa
xchg
daa
stos
cld
add
mov
daa
pop
andb
icebp
sub
pop
mov
xor
sub
ficoml
es
sub
inc
ds
fs
inc
mov
jnp
mov
popw
xchg
jl
pop
adc
jno
cmp
int3
rcrl
repnz
adc
lea
or
mov
in
int3
sbb
shlb
jns
xchg
mov
xor
or
int
aam
inc
mov
out
loopne
movsl
mov
xchg
inc
aam
mov
int
jmp
push
out
push
inc
lock
mov
jns
sti
mov
shl
stc
in
imul
ja
and
call
mov
fnstenv
stc
jb
test
push
and
adc
lods
jns
fldenv
and
jno
adc
bound
or
cmp
scas
repz
sbb
sub
inc
pop
or
cmp
std
lds
xchg
aad
pop
push
inc
xor
scas
gs
repnz
test
ja
out
push
pop
jbe
int3
lcall
adc
pushf
shlb
cmp
fiaddl
sub
inc
scas
ds
loope
pushf
or
sahf
ss
xorb
and
popa
or
cmc
xlat
shrb
dec
add
and
mov
rorl
lahf
inc
mov
je
push
xchg
pop
and
xchg
push
cmp
mov
xchg
lock
sbb
in
fldl
mov
pop
adc
rcrb
lods
ds
push
mov
mov
dec
loopne
xchg
jo
imul
adc
xor
adc
pop
xchg
mov
xchg
stos
adc
lret
sub
ds
sub
mov
enter
in
mov
and
shrl
lahf
dec
sbb
xchg
fcoms
hlt
push
out
outsl
push
cmp
fnsave
rclb
push
mov
push
popf
mov
mov
xchg
arpl
dec
fwait
push
pop
fidivs
xchg
pop
push
bound
cltd
adc
lods
test
mov
adcb
jbe
pop
addr16
clc
jge
clc
sub
push
ss
cld
fnstenv
push
sub
mov
pop
xorb
insb
negl
add
xlat
loope
jge
test
and
fsubrl
je
and
pop
sahf
mov
push
jge
cmpsl
test
mov
int3
push
jno
or
xchg
idivl
and
push
pop
insb
pop
loopne
sbb
ret
push
xor
xchg
lock
inc
pushf
cmpsl
daa
mov
cld
add
faddp
push
xor
mov
out
stc
push
push
in
cmp
push
in
stos
into
lret
pop
addr16
imul
ret
addl
mov
insb
ja
ss
lret
in
sbb
arpl
push
sbb
ret
xchg
imul
data16
idivl
sbb
fs
adcb
mov
mov
cs
ja
lahf
ss
push
xchg
add
jmp
orb
je
adc
lock
stc
test
and
iret
sbb
stos
fs
fstps
and
sub
ss
daa
and
cmp
inc
fxtract
cwtl
ss
roll
adc
pand
and
inc
imul
push
ljmp
es
in
mov
gs
out
in
aam
xor
jg
sub
jne
das
xchg
pushf
das
jo
jg,pn
arpl
lock
xor
adc
push
das
mov
dec
pop
stos
adc
mov
scas
or
loopne
push
add
fwait
xchg
sbb
test
leave
fbstp
icebp
sub
into
mov
dec
mov
push
sub
xchg
jbe
test
adc
pushf
inc
popa
push
inc
pop
adc
icebp
mov
ja
adc
fbstp
push
ret
cmp
push
addr16
imul
jae
inc
pop
dec
rcll
sub
stos
lret
xchg
mov
mov
sbb
lods
xchg
popf
jb
pop
sbbl
repz
inc
cwtl
lea
imul
int3
xchg
sub
fidivrs
push
movsb
sbb
push
ds
pop
inc
popa
mov
data16
in
xchg
loop
mov
cwtl
push
jb
or
xor
out
xchg
std
sbbl
mov
imul
inc
lea
aad
jg
jne
fiadds
insl
inc
lret
stos
xlat
pop
xor
dec
dec
cld
cmc
or
xchg
sarl
rorl
ror
sub
data16
push
es
js
fiaddl
test
add
mov
mov
lcall
addr16
adc
daa
pop
shrl
dec
add
xor
mov
pushf
int
sub
rcl
mov
jne
ret
cmp
cmp
mov
in
dec
mov
hlt
xor
add
sti
popf
mov
dec
lods
loop
xor
in
mov
test
in
mov
arpl
inc
mov
jp
loopne
jbe
mov
cwtl
and
jge
jo
out
and
data16
push
adc
and
rcll
pop
stos
std
cs
lcall
sub
cmp
imul
xchg
adc
xor
mov
inc
sbb
pop
mov
dec
pop
out
jmp
les
mov
push
adc
xchg
aam
adc
add
insb
das
addl
xchg
xchg
dec
arpl
aas
mov
sub
cmpsl
cmc
std
imul
movsb
sbb
ret
pop
jno
in
xchg
fs
cli
out
loop
icebp
aas
aaa
inc
push
pusha
aad
push
mov
push
inc
sub
inc
dec
or
ffreep
cs
lods
jae
or
stos
pop
jo
pop
ss
pop
movsl
insl
lods
call
and
in
movsb
mov
scas
andb
mov
mov
xchg
xor
or
pop
jb
std
sti
sbb
inc
orb
lock
mov
push
push
pop
sbb
lret
fcmovnu
xchg
jge
push
jbe
fistpll
das
gs
fwait
adc
movsb
mov
adc
jns
fwait
cmpsb
mov
sahf
lret
mov
mov
aaa
xor
cs
add
stc
cld
adc
xor
inc
or
inc
fistl
sti
xchg
cmp
sbb
fsubr
inc
jno
and
inc
add
leave
fisubrl
adc
icebp
in
pop
mov
out
or
fistl
xor
adc
hlt
stc
inc
pop
push
mov
idiv
das
fdivs
repnz
push
stos
adc
lret
in
les
icebp
ret
cmpsb
ja
xchg
xlat
pop
or
in
inc
sbb
pop
mov
sbb
push
and
shrl
xor
jl
jmp
std
aaa
pop
ljmp
lret
jl
xor
jg
sbbb
int
xchg
cltd
sbb
xor
sub
dec
scas
ljmp
jmp
jge
test
stos
jno
cmpl
inc
xchg
xchg
pusha
imul
mov
lcall
fstl
fdivs
lock
cmp
and
cmp
add
push
xor
cmp
xor
adc
cmp
push
push
pop
jp
sahf
loopne
sbb
ficoms
insb
sete
scas
lret
inc
pop
and
out
xor
push
xchg
dec
fnsave
or
lahf
jecxz
pop
sub
dec
nop
pop
repz
ds
test
cltd
fldenv
mov
out
femms
leave
or
out
fildl
into
pop
cld
fisttps
out
cmp
pop
xchg
sub
mov
jae
push
sahf
ret
js
lods
jmp
sarl
call
xchg
inc
push
in
in
mov
loopne
sub
jne
test
divl
mov
lret
lods
and
inc
cmp
fistpll
sbb
mov
jno
popf
mov
out
movsl
into
lahf
and
loop
fadds
dec
push
movsb
sub
mov
mov
pop
lods
call
out
ja
mov
jg
lcall
xchg
adc
mov
xchg
and
adc
dec
cmp
lahf
dec
dec
mov
int3
rcrb
loope
push
xor
int3
or
inc
adc
mov
or
popa
rorl
or
push
pushf
mov
jne
sti
imul
iret
clc
mov
dec
pop
test
test
inc
mov
push
sub
cltd
aas
insb
sbb
pop
mov
jmp
les
push
cmp
mov
adc
pop
ds
lock
mov
in
dec
out
adc
je
inc
mov
xchg
test
and
mov
jle
lods
push
or
stos
in
clc
xor
push
outsb
aam
xor
data16
lahf
mov
movsl
leave
inc
iret
or
jecxz
roll
aaa
and
insl
adc
xrelease
int3
call
dec
cwtl
xor
mov
or
data16
jbe
cld
sbb
sub
mov
ret
incl
fldt
cltd
mov
fnstsw
dec
das
cmp
cs
rolb
aam
mov
fistpl
movsl
cmp
in
xchg
and
ss
cmp
rcll
jmp
subl
mov
adc
in
loope
dec
adc
xchg
in
imul
cmp
cmpsl
aam
fnstenv
js
aaa
mov
inc
hlt
mov
sbb
adc
sbb
lea
dec
popf
iret
pop
cmp
test
fcoml
adc
jg
xchg
rolb
and
into
mov
sbbl
and
out
subb
hlt
repnz
adc
pop
movsl
jle
imul
ret
packssdw
fcmovu
test
pop
mov
sub
jns
addr16
sti
push
int
fcmovnb
js,pn
sub
push
jo
sbb
icebp
push
pop
aad
dec
inc
dec
shll
inc
mov
mov
push
jno
inc
pop
fwait
mov
sub
pop
jbe
jmp
cmp
movb
xchg
mov
or
aad
in
cld
jb
bound
cli
cwtl
aad
xchg
lret
mov
or
cmp
jmp
into
lret
xor
xorl
popa
loopne
pop
xchg
push
fdivrs
ret
cltd
js
out
add
repnz
or
arpl
sub
sbbl
lret
loop
out
data16
dec
inc
jge
setnp
mov
pop
ljmp
ffreep
mov
cmpsl
push
push
inc
inc
pop
ds
xor
aas
cmp
pop
push
pop
les
outsb
addr16
ss
loop
sub
mov
aas
mov
push
adc
ljmp
inc
sbb
sbb
andl
push
cmovp
jp
addl
jp
sbb
ret
jns
jle
ja
aam
mov
xor
stos
cltd
sti
pushf
jmp
jae
inc
insb
jno
xor
pop
inc
mull
movsb
xor
icebp
incl
inc
cs
call
cmp
scas
jbe
add
insl
mov
cli
xchg
out
arpl
ljmp
shrb
dec
mov
cmpsl
cmpsb
push
clc
std
jle
mov
mov
add
fwait
scas
cmp
push
mov
notl
dec
push
inc
dec
mov
mov
jecxz
filds
xchg
lahf
xor
cmp
out
push
fstps
clc
pop
inc
leave
pushf
fisubrl
flds
cmpsl
out
xchg
rorb
jne
gs
sbb
das
rcll
push
xchg
or
push
jp
shlb
xor
rcll
out
shrl
fucomp
mov
test
jg
loopne
iret
mov
and
pop
enter
aam
lret
aad
mov
push
sub
lret
lcall
cmpb
cmpsb
jle
xor
adc
bound
sub
and
mov
iret
in
ret
push
push
xchg
nop
lret
mov
mov
popf
mov
shlb
mov
xchg
mov
jo
loop
cmp
inc
dec
sbb
pop
mov
rolb
xchg
or
mov
inc
mov
xchg
dec
dec
hlt
dec
in
mov
pop
pusha
mov
xor
cltd
mov
push
insb
movsb
jge
mov
popa
nop
cmp
inc
sbb
jmp
push
sbb
ljmp
int3
sti
mov
add
dec
jb
xchg
outsb
sahf
subb
and
fdivp
push
lcall
jge
fbld
adc
in
cmc
sub
fsubs
pop
xor
jp
mov
push
cmp
repz
cmp
pop
push
push
psraw
jns
or
ljmp
insb
dec
fucomip
fstps
test
or
mov
cs
outsb
adc
jbe
movsl
jb
ret
jne
les
jmp
or
insl
xlat
leave
xlat
and
mov
js
dec
lret
sub
push
xorl
sub
popf
xchg
repz
loope
gs
imul
xor
mov
mov
xor
pusha
jge
aad
cmp
xor
mov
pop
jl
fucomip
sahf
push
aad
inc
addr16
push
xchg
into
lahf
or
ja
nop
dec
xor
in
test
leave
int
jl
sub
mov
movsb
and
adc
cli
cs
aam
mov
jg
jns
jp
xchg
fdivs
cmp
jo
ret
bound
adc
cmc
rep
pop
aam
add
mov
pop
mulb
push
xchg
mov
mov
fbld
cmp
mov
pop
mov
jns
adc
ljmp
ja
fldt
push
push
cmc
lcall
test
jp
mov
mov
in
int
or
pop
int
fdivs
dec
lods
ss
xor
sub
pushf
stos
shll
mov
mov
mov
test
push
inc
pop
leave
xor
pop
in
data16
xor
or
xor
fnop
shrb
jmp
sbb
in
mov
sub
sub
push
jp
xor
jmp
push
mov
std
or
pop
lds
xorl
pusha
insb
insb
dec
or
mov
wbinvd
addr16
push
mov
fcompl
rcrl
xchg
sbb
divl
or
cmp
cmp
fsts
popa
into
aam
inc
adc
int3
mov
scas
mov
pop
fidivrl
and
sbb
sub
xchg
sti
out
in
fists
sbb
xor
icebp
and
jno
adc
add
sbbl
xor
inc
insb
xchg
sub
push
movb
jns
movaps
add
mov
fsubrs
scas
aas
jo
das
adc
test
mov
add
inc
cmp
dec
push
or
lock
mov
fsub
xor
cltd
out
inc
sti
pop
jnp
fisttpll
mov
outsb
and
dec
xor
mov
into
push
sub
arpl
roll
push
and
aad
or
and
push
push
pop
mov
or
adc
pop
pop
sub
fsubrl
bound
loop
sbb
push
xchg
mov
lds
andb
sbb
movsb
xchg
out
mov
xor
shrl
cs
subl
int
adc
pop
xchg
push
push
xor
out
fnstcw
imul
cmp
pop
pop
popa
stc
push
dec
fsts
icebp
mov
jg
movsl
mov
adc
pop
lds
jno
fbstp
jns
fwait
push
mov
push
and
leave
test
sbb
xchg
fwait
bound
or
cltd
dec
adc
sti
lret
inc
adc
and
mull
enter
out
xor
hlt
push
mov
insb
cli
rcrb
mov
lods
mov
mov
and
aaa
cmp
inc
imul
insb
out
or
lret
lods
xchg
filds
jne
bound
cmp
mov
cld
xchg
out
or
adc
inc
mov
mov
jge
pop
fists
add
jl
std
add
movsb
or
add
mov
jmp
sub
sbb
xchg
bound
mov
mov
je
fistpll
mov
ss
lret
test
xchg
cmp
outsb
lds
jg
sbb
in
dec
cmp
ljmp
subb
or
push
or
scas
xor
out
mov
sub
jb
inc
xchg
push
jbe
lahf
inc
dec
dec
dec
out
imul
push
fdivrp
pop
mov
std
dec
stos
mov
test
pusha
xlat
dec
xor
mov
popl
jae
movsl
pop
or
mov
jmp
out
ss
mov
push
cmp
ja
fldcw
adc
inc
rorb
xor
enter
push
adc
movsl
addr16
add
pushf
iret
inc
cmp
roll
dec
test
call
jp
shrd
push
dec
push
mov
jecxz
jb
into
jmp
aaa
pop
cltd
adc
cmp
mov
sbb
aam
sbb
mov
jecxz
cmpsb
xchg
clc
cmp
pop
dec
mov
fnstcw
mov
fstpt
cwtl
ret
outsb
into
xor
and
push
sarb
lock
sbb
add
les
cwtl
mov
lret
mov
jmp
test
sbb
insb
xlat
dec
and
xchg
and
mov
ljmp
dec
test
jo
cmpsl
ret
or
jb
addl
adc
cmp
jg
mov
mov
ja,pn
sbb
sarb
lods
or
push
hlt
dec
pushf
fwait
ds
outsl
mov
lcall
push
jne
cmp
jns
insl
sarl
mov
test
jmp
adc
repz
add
loope
sarb
mov
sub
repz
fs
shlb
daa
sub
jno
sahf
mov
sub
dec
in
dec
or
jno
push
xchg
andb
xor
out
hlt
cmp
dec
or
jbe
repz
fdivs
cmpsb
push
lahf
jmp
dec
sti
ret
inc
jecxz
imul
adc
ljmp
mov
mov
outsb
sub
cltd
add
jne
pushf
stos
fisubrs
jp
mov
and
jbe
pop
mov
pop
rcr
das
jne
push
mov
pop
aaa
int3
add
sub
push
jbe
out
int
xor
add
pop
out
aas
mov
mov
adc
add
dec
movsb
js
push
imul
fldcw
mov
std
jnp
adc
or
xchg
out
lret
dec
out
add
std
not
popa
or
cltd
sub
add
aaa
and
sti
xchg
cmpsl
bound
push
in
mull
mov
add
repz
outsl
dec
hlt
into
pop
fs
push
inc
or
jg
xlat
xor
stos
mov
out
pop
jae
addr16
lret
lcall
clc
dec
lcall
lret
xor
xor
rorb
popf
mov
mov
std
je
jne
imul
push
cmc
je
jns
push
ljmp
mov
and
inc
lcall
mov
add
dec
fcoml
pop
rcll
xchg
aad
push
cmpsb
push
aam
inc
push
mov
lahf
xchg
pop
negb
incl
dec
orl
or
push
adcb
push
loop
outsb
push
cmc
dec
sbb
adc
iret
cmc
cmc
inc
int
ret
mov
jno
push
xchg
sti
nop
sbb
and
pop
sahf
ss
add
mov
push
in
cmp
mov
adc
nop
popa
js
stc
rclb
pop
adc
cld
and
inc
stos
fwait
mov
mov
test
mov
scas
fnstsw
sbb
cli
jae
into
orl
lods
repnz
sbbl
into
xlat
pop
jns
or
iret
mov
rcll
mov
or
pop
add
sti
mov
inc
ss
outsl
fsub
push
mov
pusha
fistl
ss
push
lret
pop
push
neg
les
dec
xor
sahf
hlt
xor
jp
int
mov
aas
nop
dec
cmp
xchg
push
xor
pop
xchg
sub
stos
or
std
jo
pop
jne
inc
dec
pop
push
adc
xchg
lods
and
js
mov
js
rcrb
test
mov
repnz
shl
mov
xor
ja
jno
pop
loope
jmp
inc
ljmp
adc
xchg
adc
and
lods
aam
cmp
rcrl
adc
or
jmp
lea
jge
mov
pop
jl
movl
sbb
xor
mov
in
cmp
and
mov
scas
into
xchg
mov
or
arpl
into
enter
out
test
push
popf
dec
inc
add
mov
lock
dec
cwtl
pop
lahf
fsubs
ficoms
les
fldl
push
shrb
lock
std
pop
or
outsb
inc
jle
in
mov
subl
push
and
movsl
pop
mov
nop
push
xorb
mov
mov
out
mov
xorl
pop
jmp
xchg
mov
sbb
jle
lcall
xor
ja
and
and
fmul
clc
mov
rcr
daa
mov
in
dec
out
inc
dec
mov
insb
mov
push
mov
ja
clc
mov
push
or
xchg
or
mov
lahf
mov
dec
jmp
ss
nop
in
push
cltd
push
je
sti
pop
adc
js
pop
dec
jecxz
add
lret
mov
dec
mov
fisttpll
ret
inc
push
fsincos
stos
mov
adc
inc
out
xchg
lret
xchg
cmpsb
dec
jmp
mov
clc
and
xlat
mov
fildl
imul
movsb
cmpl
pop
pop
dec
sbb
push
mov
push
push
bound
push
ret
xor
orl
xor
push
pop
cltd
repz
dec
repz
shlb
aam
jecxz
sub
mov
sbb
inc
adc
push
arpl
fildl
or
outsb
and
in
inc
lods
aas
jge
dec
imul
cmp
inc
inc
xor
xchg
cmp
test
in
orb
cld
jmp
testl
jge
gs
add
call
xchg
cwtl
xchg
mov
jge
add
movl
cmpsl
fimull
and
and
dec
in
in
mov
add
fs
push
and
outsl
mov
std
dec
addb
sbb
mov
repz
in
dec
lds
inc
mov
sub
leave
imul
adc
stc
mov
sbb
or
jne
clc
ljmp
adc
sbb
adc
imul
xchg
jecxz
inc
adc
pop
mov
pop
sub
jae
stos
aaa
in
xchg
mov
sub
stc
inc
push
sarl
pop
in
sbb
cmp
bound
push
leave
mov
rol
iret
iret
lahf
dec
invd
dec
inc
movsb
sti
inc
pop
xchg
fistpll
pop
mov
aam
push
or
aaa
fwait
xchg
cmp
enter
mov
mov
mov
data16
test
fucompp
ret
push
jmp
or
xlat
lret
pop
push
dec
pop
fstps
fs
iret
rcrl
push
push
dec
sbbl
loop
mov
xchg
insl
daa
sbbb
xchg
lds
cmp
das
mov
xor
rorb
test
fstl
cmpsl
and
xchg
or
pop
add
cli
les
and
push
add
pop
inc
and
mulb
jp
jp
popf
dec
inc
xchg
test
iret
add
jnp
xchg
and
setge
xchg
in
cmp
cli
or
sub
ja
loop
xor
cld
lcall
xor
imul
add
mov
in
push
sub
or
out
arpl
dec
mov
xchg
out
mov
dec
sub
dec
pop
aam
dec
push
add
xchg
jp
inc
mov
movsl
rolb
fcoms
fmuls
popa
lock
mov
das
jle
cmp
daa
ret
iret
outsl
cmp
sbb
aaa
push
adc
jns
cmpsb
push
xor
jle
jg
lret
in
jbe
jns
mov
and
movsl
hlt
icebp
jbe
add
stos
inc
pusha
out
push
push
jg
mov
jle
popa
xchg
enter
movsl
jae
scas
fisttpll
adcb
popf
divl
or
lods
or
test
les
mov
or
pop
pusha
mov
or
data16
loope
jmp
mov
jno
popf
aam
fildl
iret
xchg
fcompl
pop
mov
cmp
pop
push
push
daa
lcall
imul
xor
lods
imul
fnstsw
or
xor
insb
dec
fistps
clc
mov
xchg
xchg
inc
sbb
push
lea
outsl
daa
push
pusha
pushf
fwait
and
add
dec
cmp
shrl
mov
jecxz
gs
popf
aad
outsb
sub
nop
loopne
dec
arpl
sbb
jl
jbe
add
mov
jo
cmp
mov
jno
xlat
pop
inc
cmp
enter
dec
int
clc
out
jp
xor
xchg
adc
pusha
aas
flds
ja
test
mov
stos
cli
stos
cmpsl
jns
aaa
movsb
xchg
xor
add
cmpsl
loope
xor
pop
call
nop
stos
mov
add
rclb
mov
daa
icebp
int
lods
push
testb
sbb
into
sub
pop
rorl
test
cmp
sub
mov
adc
or
lea
or
cs
inc
inc
jmp
pusha
lcall
cltd
aad
cmp
jo
push
or
dec
dec
jns
push
inc
repnz
ljmp
rcrl
pusha
xchg
aam
scas
jo
cltd
aam
adc
jo
sub
int3
mov
inc
xor
xchg
and
lahf
clc
dec
and
push
mov
sar
inc
adc
adcb
js
mov
negl
int
ds
mov
mov
sbb
pop
mov
hlt
clc
lcall
mov
clc
push
mov
sbb
in
mov
sub
stos
aad
out
or
mov
mov
mov
mov
add
sbb
icebp
jnp
popa
mov
ret
popf
cwtl
cmpsb
insb
or
call
pop
xchg
adc
stos
daa
pushf
testl
gs
je
inc
stos
loopne
fcompl
cld
pop
dec
sarb
cmp
fimull
xchg
adc
out
or
cmp
and
jg
xchg
lods
data16
push
movsb
addl
pop
jb
or
mov
mov
mov
xor
push
testb
and
das
inc
ja
fnstenv
pushf
outsb
test
loopne
je
jo
push
aad
int3
aas
ljmp
outsl
aaa
add
mov
icebp
addb
push
jns
mov
inc
rcl
adcb
mov
dec
add
xchg
xchg
ds
stc
shll
push
jne
inc
cmp
cmp
cwtl
call
or
inc
icebp
lods
rcl
fnsetpm(287
cmpsb
mov
fdivl
mov
stos
push
cmp
inc
mov
pop
ret
icebp
jg
add
lret
jbe
pop
mov
pop
mov
ljmp
sbb
mov
sahf
in
into
aaa
cld
mov
mov
pop
pop
call
and
add
xor
inc
lahf
ret
jb
pop
mov
add
popf
mov
adc
leave
mov
popa
xor
out
ja
ror
les
ftst
jo
inc
sub
dec
push
jno
cli
inc
jmp
inc
mov
mov
loope
andl
pushf
out
jmp
imul
data16
pop
push
stos
dec
fadds
push
mov
jl
out
rcrb
cmp
inc
out
fwait
xchg
sub
mov
cmp
pop
pop
pop
leave
or
pop
or
fidivl
sub
repz
mov
dec
jp
xchg
stos
dec
popa
sub
pusha
cmpsb
pop
cmp
or
fldlg2
les
cld
repz
sub
add
fldt
add
jecxz
pop
dec
add
call
pop
sbb
sahf
or
aam
sbb
je
call
inc
adc
mov
inc
int
jb
cmpsl
cmp
mov
rcrl
fisttps
out
or
fstpt
adc
or
or
rcrb
cmp
pop
rorb
adc
cmpsb
cmp
adc
pusha
es
in
sub
adc
les
repz
and
scas
clc
in
aam
lods
mov
mov
sbb
data16
fwait
mov
icebp
sub
mov
jecxz
sarb
add
cmp
shlb
pop
push
jecxz
dec
mov
clc
incb
shlb
orb
dec
mov
aaa
inc
lea
sti
cmp
clc
shrl
mov
outsl
mov
mov
fwait
mov
adc
push
jge
lea
into
add
xchg
out
loop
addr16
dec
daa
sbb
ret
icebp
xchg
pop
ficompl
cmp
cltd
jns
and
pop
push
lods
es
sub
push
fsts
jne
cltd
push
fmuls
mov
inc
addb
int
lea
orl
jne
sub
jns
xor
push
and
sti
push
jo
imul
roll
outsb
fistpl
ret
aas
push
xchg
mov
lods
cmpsl
pop
pop
leave
fstps
pop
xor
adc
sbb
push
cmp
jp
loopne
sub
clc
add
call
ret
sahf
ja
xlat
rcrb
int3
ljmp
sar
pop
jmp
pop
icebp
inc
mov
loopne
adcb
fs
push
cwtl
fildll
scas
mov
push
adc
test
cmp
mov
cmp
jmp
jbe
mov
out
into
aam
xchg
aaa
mov
mov
popa
mov
mov
sbb
mov
mov
clc
stos
mov
lcall
mov
fs
shlb
aas
ja
es
add
test
lods
in
mov
and
pushf
repz
add
pusha
repnz
movsb
xchg
xor
imul
jecxz
out
out
out
or
pop
jmp
dec
hlt
mov
addl
cld
rclb
enter
pmaddwd
fisttps
test
ss
loop
fsubrs
jae
fucomip
movl
outsl
hlt
cmpsl
fsubrs
das
nop
cmp
push
add
out
test
mov
aas
xor
cmpsl
js
lahf
xchg
cmp
cmp
addr16
outsb
xchg
jmp
mov
sbb
icebp
sti
outsl
fs
ret
test
sub
dec
adc
dec
inc
dec
mov
fmuls
test
pop
add
aaa
fimuls
ss
daa
cwtl
inc
outsl
scas
fisttpll
push
and
insb
arpl
lret
jecxz
clc
loopne
mov
pop
pop
jb
in
movsl
sub
lods
push
cmp
es
loop
out
sub
push
fdivrl
insb
movsl
mov
lahf
imul
push
lock
rorb
sub
movsl
jle
pop
adc
lret
jns
fcmovb
adc
outsl
daa
out
sbb
shlb
out
imul
pop
js
cs
imul
outsl
dec
aaa
mov
jg
ljmp
push
out
dec
push
lock
sub
push
adc
adc
lods
fwait
ss
subb
push
cmp
jmp
and
js
arpl
xchg
ds
push
outsb
int3
or
sahf
insb
cwtl
mov
negl
jge
test
bound
and
push
out
cmp
mov
and
mov
aam
mov
mov
out
lahf
bound
mov
xor
sbb
shr
xor
jl
xor
sbb
loope
shlb
mov
or
out
sbb
sub
bound
mov
xchg
mov
cmp
mov
in
adc
xchg
jb
adc
push
daa
mov
jl
fistpll
and
mov
mov
sbb
lods
mov
jmp
cmc
cmp
jbe
cld
push
aas
push
mov
mov
stos
int
repnz
jp
mov
dec
lret
sbbl
add
icebp
sbb
sub
sbb
xchg
mov
fcoms
adc
dec
es
clc
ret
cmp
mov
and
mov
and
xor
inc
xchg
pop
xor
push
jnp
fcmovnbe
insb
pop
xor
mov
mov
mov
mov
xchg
sbb
dec
or
lock
mov
testl
pusha
push
sahf
loop
clc
pop
jae
adc
or
xor
or
clc
scas
lods
fisttpll
ret
add
fstpt
jle
push
jl
add
adc
iret
xor
pop
or
pop
inc
cli
mov
clc
loope
les
inc
loop
push
sub
xchg
xchg
mov
xchg
mov
clc
push
sub
jmp
into
push
ljmp
in
add
jg
mov
lret
popf
jb
loopne
fdiv
xchg
mov
not
out
sahf
pop
fcomps
shrl
shll
xor
pop
adc
sbb
dec
fisubl
shlb
fnstenv
hlt
rcrl
inc
cmp
xorl
cli
push
inc
cmp
ret
inc
sub
mov
cld
nop
sbb
mov
cltd
out
lcall
cmpsb
adc
test
scas
test
inc
dec
xchg
out
adc
xchg
shr
addps
xchg
cltd
lds
pop
fcomp
fsubs
sub
and
mov
pcmpeqb
dec
xorb
loope
cmpsl
in
aas
xor
inc
popf
int3
loopne
arpl
and
cwtl
add
push
pop
pop
cwtl
mov
dec
cli
rorl
mov
lods
jmp
sbb
adc
jns
outsb
mov
add
xor
cmc
scas
add
dec
cmpsb
bound
nop
imul
and
negb
iret
cmpsb
lahf
rorl
mov
scas
push
clc
dec
push
daa
mov
int
pop
test
ds
cmp
fadds
mov
loop
pop
mulb
mov
ltr
xor
addr16
je
jae
push
cmpsb
stc
mov
pop
pop
call
xor
pop
add
inc
leave
dec
jg
in
in
sti
add
dec
adcl
push
mov
cltd
inc
or
and
out
leave
insb
add
mov
out
fldl
adc
xor
fisubs
pop
dec
or
or
mov
inc
xchg
jns
pop
and
orb
out
arpl
lret
cli
and
imul
call
pop
xor
in
push
test
leave
test
in
pop
mov
mov
sub
cmp
roll
jbe
jp
push
sub
sub
push
push
or
leave
and
movsl
out
inc
int
mov
in
push
xor
aam
adc
mov
popf
orl
mov
mov
adc
pop
or
fiaddl
les
sahf
jbe
xchg
aaa
into
icebp
mov
xchg
aaa
and
fcmove
sbb
lods
imul
push
in
dec
cmpsb
das
out
daa
in
shl
or
cmpsl
or
js
jns,pn
or
or
das
add
loop
mov
inc
mov
pop
ds
pop
cmp
imul
out
push
in
inc
ss
pop
inc
pushf
mov
daa
inc
fs
mov
test
inc
pop
hlt
fidivs
aaa
mov
adc
or
jo
push
popf
imul
jecxz
imul
pop
and
in
ret
dec
xchg
gs
lods
xor
mov
cmpsl
ret
out
sahf
and
jp
es
std
mov
daa
push
inc
fs
lcall
in
aaa
jbe
dec
fsubs
sti
sbb
adc
popf
mov
ljmp
and
mov
movsl
std
pop
jmp
cmpsb
adc
popf
imul
int3
push
jns
jbe
or
into
mov
push
in
fndisi(8087
test
mov
sahf
add
mov
xchg
ret
sub
mov
mov
mov
scas
movsl
pop
mov
push
in
sbb
popa
std
stos
dec
pop
in
pop
pop
sbb
les
scas
hlt
aaa
dec
jb
cmpsl
add
push
dec
cmpb
sbb
scas
jmp
testl
rcl
in
or
mov
les
jle
xchg
sub
xchg
cmp
cmc
jo
xchg
fsubs
mov
mov
enter
popa
dec
mov
xor
ror
jo
dec
leave
sub
sub
fsubs
lret
jo
loopne
sbb
jne
mov
mov
mov
fnsave
sbb
pop
push
nop
jg
repz
xlat
clc
cmp
or
cmp
push
cmp
popf
lds
or
pop
mov
and
cmp
xor
addr16
xor
push
test
ja
sti
inc
pop
imul
xchg
test
pop
test
adc
or
cmp
bound
inc
loopne
pop
mov
xor
lahf
dec
inc
stc
shlb
mov
lcall
shll
popa
mov
sbb
add
xor
jbe
inc
jo
inc
mov
sbbb
fcompl
mov
mov
out
in
stos
xchg
aad
xchg
insb
aad
stc
stc
mov
icebp
mov
adc
int
rcrb
xchg
cltd
xchg
out
nop
dec
mov
and
pop
repnz
sbb
stc
mov
std
xchg
xchg
int3
fidivrs
les
mov
sbb
movl
inc
ror
or
ja
adc
cs
sahf
cmc
sbb
or
adc
filds
and
in
push
int3
mov
frstor
jmp
mov
scas
dec
xor
and
into
pop
mov
xchg
mov
and
or
into
dec
lea
push
cmp
sti
and
xbegin
cld
xchg
cmp
mov
mov
mov
mov
shr
imul
sbb
push
mov
pop
mov
push
ret
dec
xor
or
push
pop
stos
call
sti
sbb
mov
xchg
xor
ja
mov
push
cli
jp
push
sub
xlat
shl
xchg
daa
mov
addr16
lods
aam
inc
and
fs
cmp
or
dec
or
test
outsl
je
adc
pop
jbe
rcrl
sbb
jp
ss
cmp
clc
sbb
nop
pop
inc
stos
add
inc
dec
adc
roll
dec
sub
cmpb
xlat
mov
dec
shlb
xor
cmp
ljmp
das
push
pop
lods
cwtl
push
cmp
scas
xor
mov
rcll
int
lret
dec
jne
adc
adcb
push
or
pop
add
outsb
jae
inc
les
xchg
imul
ds
xlat
out
arpl
jl
in
leave
mov
dec
aas
push
pop
push
inc
inc
jmp
sub
mov
popa
loop
fsubrl
imul
cmpsb
cmp
cmpsb
movsb
lret
in
mov
pop
dec
cwtl
adc
push
adcl
cmpsb
cmp
and
mov
inc
pop
into
xchg
jb
and
fsubr
pusha
mov
je
test
test
mov
xor
stos
dec
cs
xor
jb
enter
xchg
mov
jg
and
cmpsl
add
cmpsl
push
sti
shr
adc
mov
mov
bound
or
loop
dec
cltd
aam
jns
sub
add
sbb
push
in
out
mov
les
testl
jne
sub
scas
push
jo
mov
je
repnz
jno
stos
cmp
xchg
xchg
sub
jae
and
cwtl
mov
xchg
lds
imul
sub
aas
in
pop
pop
popf
inc
insb
std
jge
in
neg
sarl
clc
xchg
ret
mov
inc
ss
and
push
xor
cmpsb
xchg
push
dec
sub
sub
add
outsl
lret
cs
imul
mov
sbb
xlat
jecxz
push
or
mov
and
cmp
or
in
mov
lret
mov
or
push
xor
jg
imul
push
loope
fldl
mov
xor
test
sub
xor
cmp
dec
ficoms
insb
scas
lcall
and
jmp
cmpsb
idivl
and
pop
jmp
fiadds
pop
sbb
sub
dec
pushf
into
dec
int3
cmc
loop
or
or
test
sub
xchg
jnp
xchg
lret
push
mov
jecxz
mov
pop
inc
outsl
fwait
pop
ror
or
inc
inc
stc
pop
notl
cli
xchg
pop
adc
mov
push
aad
push
cmp
sbb
xchg
fdivl
xchg
test
frstor
fimuls
call
test
adc
leave
popa
dec
add
movsb
mov
andb
add
mov
ret
inc
enter
ret
rclb
jl
int
xor
sahf
aad
paddsw
and
sbb
pop
loope
das
jecxz
mov
cmp
enter
and
std
fstp
xchg
dec
dec
push
daa
push
lock
sub
mov
sahf
mov
mov
and
or
dec
jbe
test
shrl
xor
pop
ds
pop
mov
mov
pushf
gs
inc
cmp
icebp
pop
and
test
mov
xor
dec
mov
mov
mov
add
adc
mov
push
mov
dec
insl
iret
jne
jbe
enter
mov
and
aas
fbld
dec
dec
xchg
std
inc
loopne
pop
les
rcr
pop
inc
js
addb
shlb
lods
cmp
xchg
xor
dec
xor
dec
adc
std
dec
xlat
fmuls
or
arpl
xchg
subb
push
cmpsb
shrb
sbb
xor
xchg
insl
jmp
pop
jl
mov
adc
push
sti
in
fcmovnbe
push
fadd
jnp
xchg
xor
adcl
mov
lods
mov
pop
add
into
and
mov
out
aas
sub
scas
cmp
add
jns
sbb
lret
ret
pop
sub
imul
adc
or
outsb
mov
xchg
jle
pop
xchg
loopne
adc
sub
mov
ss
sti
or
inc
enter
mov
test
jns
adc
fwait
add
outsb
adc
ss
cmp
gs
cmpsb
push
into
xchg
sbb
xchg
fstpl
icebp
cmp
jge
mov
xchg
loop
dec
jnp
arpl
mov
xchg
sub
loope
test
xor
enter
jae
rclb
sbb
jns
pop
pusha
out
and
jno
inc
adc
and
int3
data16
or
add
shlb
xor
in
sbb
dec
xlat
jle
jg
push
and
sub
loope
cmc
dec
pop
sti
shl
push
rcl
adc
mov
shl
sbb
in
testl
in
popa
jns
add
flds
cmp
ret
sahf
hlt
push
push
arpl
loop
notb
orb
push
aam
mov
dec
mov
stos
pop
lahf
sbb
pop
xchg
clc
jecxz
xchg
jns
test
mov
fwait
sbb
icebp
das
lret
bound
lcall
push
dec
cltd
mov
adc
fisubl
xor
sub
sbb
notb
ss
mov
lock
fcomp
adc
xchg
sbbl
xor
mov
ret
sbb
add
push
jae
pop
xchg
cmc
rcll
sub
dec
bound
jle
sbb
adc
popf
inc
mov
jae
adc
rcll
filds
subl
pop
ffree
jno
push
dec
cwtl
cltd
mov
add
lret
dec
scas
sub
adc
and
fiadds
mov
stos
mov
out
mov
sub
in
jbe
jge
inc
dec
pop
cwtl
mov
and
filds
stos
xor
pop
fbstp
rcl
cmp
shl
add
cs
dec
fmuls
dec
push
pop
or
inc
adc
mov
pop
inc
and
stc
push
or
loopne
and
popa
pop
push
pop
insb
rol
daa
jns
add
movb
outsb
pop
mov
or
jo
out
cmp
push
lahf
movsb
mov
fwait
repz
or
inc
pusha
or
dec
aaa
lcall
fdiv
out
cli
hlt
mov
inc
es
sbb
gs
cmp
ljmp
push
add
pop
pop
mov
stc
sti
pop
mov
add
fs
xlat
aam
mov
mov
movsb
sti
pushf
repnz
scas
mov
push
add
imul
mov
test
dec
cld
outsl
mov
imul
cltd
test
ds
mov
std
sbb
sbb
andb
pop
enter
fldl
or
pop
mov
scas
rclb
sbb
in
andl
outsl
insb
dec
mov
xor
lea
and
cs
add
es
sub
sti
cwtl
fistl
inc
push
push
adc
test
mov
fucomip
xor
shl
mov
push
inc
add
or
pushf
xor
cmp
pusha
xor
stc
cmp
add
mov
loopne
or
adc
test
das
dec
repnz
sub
fldcw
fldenv
mov
xchg
leave
dec
inc
out
outsb
jle
aad
or
pop
push
dec
stc
jge
pusha
mov
sbb
xchg
movsl
ret
subb
pushf
icebp
test
nop
mov
addl
mov
cmp
ljmp
enter
aas
and
lea
aaa
or
jne
or
mov
push
jbe
xlat
cmp
int3
push
cld
nop
jae
mov
stc
inc
inc
outsl
out
xchg
packuswb
cmpsb
mov
push
jae
dec
mov
mov
dec
das
mov
inc
sbb
out
call
jo
pop
dec
scas
adc
ret
pop
cmpl
sub
enter
inc
rorb
mov
fdivrs
push
push
sub
mov
inc
insl
mov
cmp
mov
ljmp
pop
cmc
imul
jge
pop
addr16
or
mov
mov
ret
mov
in
sbb
jmp
jbe
out
aaa
scas
mov
movsb
data16
dec
sti
jl
ret
inc
dec
xchg
xchg
out
jo
xor
cmp
mov
in
pop
sub
scas
movsb
lcall
jl
enter
popf
inc
dec
push
mov
scas
inc
xchg
and
loop
icebp
cmpsb
cmpl
into
and
xchg
rclb
jge
push
ficomps
mov
or
push
lods
pop
jecxz
mov
and
clc
xchg
mov
fmulp
das
ret
gs
adc
fisttpl
xor
xchg
sub
mov
push
setno
push
xchg
stos
pop
push
adc
leave
inc
mov
jmp
das
jae
mov
mov
fwait
or
pop
mov
mov
add
cmp
addb
mov
fcoml
flds
mov
sub
or
int3
gs
inc
sbb
push
incl
cvttps2pi
jl
mov
lea
bnd
adc
sbb
ss
ffree
dec
and
mov
cld
mov
mov
sbb
xor
inc
jmp
call
mov
pop
fs
les
mov
mov
xlat
fs
int
in
in
inc
and
mov
mov
outsb
sub
test
lds
pusha
pop
cmp
mov
xchg
xchg
inc
sti
fisubs
inc
lea
sti
xor
mov
nop
insl
hlt
std
adc
shlb
fiadds
and
leave
ds
or
arpl
xbegin
jae
repz
inc
test
jge
xchg
test
dec
xor
or
iret
hlt
xchg
das
loope
jmp
mov
pop
fisttpl
and
pop
inc
int3
stos
xchg
or
and
cwtl
pcmpgtd
mov
mov
xor
inc
jmp
adc
sub
and
xchg
std
mov
dec
lahf
iret
add
stc
popf
and
jl,pn
sahf
dec
dec
adc
adc
mov
push
cs
cmp
movsl
ret
shlb
or
sub
pop
aad
andb
gs
mov
ss
cmp
dec
add
ds
push
sti
push
arpl
mov
fists
mov
xor
dec
not
jo
les
stos
mov
jno
xchg
stos
jle
adc
test
mov
add
insl
aad
push
push
mov
iret
push
lcall
xchg
xor
lock
adc
sub
lret
and
push
or
jbe
adc
lret
push
sbb
aad
repz
sub
mov
push
cmp
aam
jnp
mov
cli
cmpsl
insb
cmpsb
sahf
jp
mov
inc
clc
sub
mov
or
ja
pop
popa
mov
xchg
test
dec
jnp
setns
pop
shl
jae
lock
sub
and
mov
push
xor
mov
pushf
mov
push
inc
push
mov
sarb
icebp
rcrb
jecxz
inc
xchg
mov
aas
xor
xchg
stos
mov
jbe
jle
pop
adc
and
push
notl
dec
jnp
fcoml
and
or
adc
add
push
pop
out
jnp
inc
xor
aas
test
ss
fstl
daa
and
sub
cld
jns
mov
xlat
mov
rcl
mov
sbb
aam
and
or
adc
imul
or
in
icebp
adc
fistl
add
aas
ret
mov
push
cwtl
inc
add
mov
ds
cmp
cmp
mov
pop
or
inc
scas
push
mov
dec
sbb
in
imul
mov
insl
shll
rcrb
test
les
scas
jge
jns
pop
cmp
popf
out
add
fstl
outsb
lcall
and
movsl
inc
aaa
lahf
movsb
js
sbb
sti
mov
rcrb
ss
stc
pop
mov
jae
pop
je
loopne,pn
fcmovnu
xchg
pop
fs
xorb
repnz
es
lahf
orl
popf
sub
sub
pop
sbb
mov
add
push
aaa
out
jbe
cmp
test
inc
mov
cmpsl
dec
fnsave
adc
ljmp
test
pop
fucomp
mov
roll
es
sub
mov
mov
data16
and
pop
xchg
movsb
hlt
xorb
add
sub
out
icebp
xor
jbe
adc
sti
adc
pop
fstpt
rorb
adc
insl
rol
dec
in
ret
xchg
pop
mov
les
pushf
lea
mov
inc
scas
lds
fmul
out
out
inc
cli
vmovntpd
test
lds
jne
subl
ja
mov
addl
jl
imul
dec
and
sub
pop
loopne
pushf
or
pop
mov
jb
xchg
mov
mov
fdivs
cwtl
bnd
movl
mov
sbb
inc
fdivr
out
jge
cltd
arpl
cs
movsl
outsl
pop
pop
in
arpl
enter
fwait
xor
and
loopne
adc
jmp
hlt
xchg
leave
and
inc
incb
mov
outsl
ljmp
jne
and
push
fcoms
pop
jmp
int3
push
pop
xor
scas
imulb
inc
mov
sbb
mov
ret
inc
sti
lret
out
sbb
adc
es
mov
or
xor
lret
add
sbb
aam
fwait
sub
iret
adc
ret
dec
imul
lods
pusha
cwtl
or
push
bound
pop
push
adc
icebp
add
out
jbe
mov
push
push
push
jp
mov
push
jle
cmp
or
xchg
fcomip
xchg
adc
inc
push
and
mov
xor
out
mov
fisubrl
stos
xchg
inc
jo
fcomi
jecxz
xor
arpl
rcll
pop
mov
movsb
repnz
ljmp
outsb
mov
ret
scas
stos
outsl
mov
ror
lcall
push
icebp
add
aam
imul
xchg
ljmp
out
inc
stc
sbb
add
sti
cmp
push
repnz
xor
in
dec
andb
push
cmp
leave
ja
pop
repz
ficompl
sub
inc
lcall
adc
jle
stos
dec
mov
inc
add
xchg
pop
mov
mov
ret
mov
lret
sti
lahf
dec
cmp
push
sbb
inc
pop
add
jl
adcl
push
xor
xchg
mov
xchg
sub
xchg
insl
cmp
pop
cs
dec
sbb
int
int3
and
and
pop
adc
stos
jbe
test
inc
jno
dec
inc
xchg
aad
push
mov
pop
out
sub
cmp
in
mov
in
shl
ret
scas
cmp
cwtl
sbb
in
sub
jno
jbe
das
mov
das
fldl
mov
and
sarl
cmc
jmp
sub
mov
mov
xchg
push
mov
jle
inc
adc
sahf
xor
cli
int
dec
mov
ret
loopne
fisttps
out
cmp
inc
stos
ficoml
test
mov
sub
pop
inc
cmpsl
pop
add
fimull
stos
sbb
pop
mov
inc
pop
gs
pop
mov
and
push
je
and
mov
push
jle
ljmp
lcall
jl
cvtps2pd
sarl
jnp
inc
xor
xchg
pusha
pop
jns
idivl
popf
scas
dec
xlat
in
mov
rcrl
inc
jle
mov
pop
outsb
ds
int3
pop
mov
xchg
inc
pop
push
sbb
xchg
pop
pop
mov
icebp
xor
notl
ljmp
sub
mov
insb
jp
les
andb
scas
jg
lods
add
adc
scas
jns
ret
pop
jl
push
jecxz
call
inc
loopne
jae
push
mov
adc
adc
lahf
cli
jmp
adc
push
data16
mov
into
jae
push
xor
dec
gs
popf
ja
mov
lock
fs
push
popa
xchg
sahf
pop
adc
out
xchg
adc
cmp
jg
mov
push
aas
into
pop
mov
fbstp
mov
xchg
ficompl
sbb
mov
loopne
xchg
ret
lcall
jns
das
or
mov
xchg
jp
negb
lret
push
sub
lret
nop
or
in
mov
cmpsl
add
pop
pop
fdivrl
inc
lods
sbb
mov
std
cmp
test
pop
rcll
adc
mov
sbb
scas
and
pop
ja
push
or
inc
js
les
mov
jnp
mov
enter
xchg
inc
push
push
fistl
xchg
pop
and
push
or
cmpsb
ljmp
or
test
daa
xor
and
test
xor
xor
movsl
lcall
add
jbe
lods
jbe
inc
cmp
cmp
mov
aad
fisubrs
sbb
mov
clc
in
adc
and
mov
mov
test
loopne
or
aas
cmpsl
push
or
add
xchg
xor
shrl
mov
sti
xchg
leave
sub
cltd
or
loope
ljmp
lahf
out
xchg
in
xchg
adc
xchg
sub
add
ret
fiadds
scas
cmp
scas
pop
fnstsw
xlat
fsubp
cld
inc
mov
mov
adc
insb
push
mov
cmp
loope
gs
outsb
iret
push
movsb
mov
pop
jge
pop
shrl
sub
xchg
imul
pop
pop
or
std
clc
push
jbe
popa
enter
stc
aaa
inc
jb
addb
mov
mov
pop
jns
pop
adc
loopne
jecxz
push
cmp
mov
orl
xor
iret
jl
repnz
mov
loop
fstps
mov
and
add
jp
es
mov
es
movb
out
sbb
imul
mov
dec
sbb
aaa
cmp
or
aas
jnp
xchg
sub
in
push
and
lcall
test
cmp
or
jecxz
movb
mov
divb
and
fisttpl
sub
xchg
lods
aam
ror
pop
pushf
fwait
popa
inc
lret
and
or
aaa
icebp
cmc
sarl
jns
or
bnd
aam
lcall
jbe
mov
xor
or
xchg
outsl
or
jno
xor
iret
cmpb
xchg
mov
scas
or
fimull
dec
adc
in
add
pop
or
jnp
add
stc
outsb
ret
ljmp
pop
mov
or
icebp
cmp
movsb
xchg
pop
mov
dec
lds
out
pop
hlt
sub
mov
in
cs
fst
inc
je
into
repz
inc
push
mov
fsubp
mov
rcrl
sub
adc
ret
ficoml
adc
push
inc
test
pop
movsb
push
lahf
inc
ss
fcmovne
lret
push
and
ljmp
mov
pop
push
pop
negl
call
adc
cmpl
cld
pop
fdivp
push
cli
movsb
adc
scas
aas
and
int
cmpsl
xor
out
sbb
out
pop
int
nop
js
dec
pop
call
es
dec
inc
sbb
aaa
add
mov
mov
sbb
mov
stos
cmp
call
scas
mov
and
inc
push
inc
mov
jb
or
jmp
test
mov
dec
in
lret
jbe
inc
fadds
xchg
cli
cmpsl
lods
ret
fisttpll
mov
aaa
mov
push
lahf
outsb
xor
jae
cmp
xchg
adc
test
lret
push
lret
data16
stos
mov
mov
xor
ss
cld
cmp
scas
stos
cs
or
insb
scas
repnz
rolb
push
out
cmp
rorl
or
mov
xchg
adc
pop
cmp
lcall
arpl
or
xor
or
pop
mov
negl
lret
roll
in
mov
or
das
ret
sbb
xchg
mov
mov
jp
pop
inc
jb
push
inc
int3
test
std
and
subb
repz
call
and
inc
lock
icebp
icebp
mov
test
cmp
inc
daa
insb
xchg
cmc
jg
xlat
fnstcw
cmc
imul
push
inc
sub
mov
xchg
push
jmp
sub
or
sub
cmp
or
ja
out
or
test
mov
icebp
out
push
fildll
pop
ljmp
in
and
pop
sub
lret
arpl
add
jmp
sahf
sbb
popf
fadds
inc
xchg
mov
jo
xor
xchg
xorb
imul
cmp
mov
pushf
push
or
push
lret
test
cmpsl
sub
out
jae
sahf
fidivrs
shll
dec
or
jmp
les
sub
and
aam
outsb
call
ret
stc
fiadds
loop
icebp
mov
xchg
imul
out
stos
fxch
fstps
and
dec
lcall
pop
bound
or
or
xchg
pop
outsb
fcmovb
test
imul
jmp
xchg
in
inc
roll
mov
loope
flds
sub
mov
cmp
into
or
aam
xchg
push
dec
bound
clc
sub
cwtl
inc
adc
sub
jmp
or
cmpsl
mov
dec
and
jge
mov
test
fdivs
push
test
shrl
push
mov
push
in
fmuls
jae
cmp
add
xor
not
fsubrl
sub
add
ficoms
int
out
data16
stos
test
jge
dec
mov
dec
push
pop
jg
mov
xchg
outsl
out
push
inc
cmc
cwtl
int
or
xchg
popa
pop
sarb
adc
push
push
cwtl
push
nop
test
fldcw
mov
push
xchg
cmp
lahf
fcompl
or
mov
mov
push
flds
cmp
fld
add
adc
xchg
inc
push
idiv
call
ror
movsb
push
pop
sbb
mov
aam
scas
lahf
dec
add
in
lret
nop
popa
ret
aam
adc
add
out
inc
std
push
out
jbe
gs
or
mov
mov
lahf
adc
jo
mov
negb
push
out
jo
movsb
push
inc
xlat
inc
dec
test
sbb
stc
inc
jb
add
push
gs
jne
ret
int3
jne
jbe
add
jg
stos
and
stos
mov
imul
nop
roll
mov
push
outsb
push
std
mov
inc
sbb
jecxz
in
jnp
sbb
lds
mov
lods
sub
jb
mov
pop
jns
pop
std
cmc
add
bound
notb
or
mov
sub
loopne
stc
mov
xlat
mov
popa
or
and
outsb
pop
jno
in
jns
or
adc
mov
loop
jnp
mov
subl
loope
fucomp
in
mov
cmp
dec
push
lods
cli
fdivrs
icebp
mov
mov
push
arpl
pop
add
mov
pop
aaa
cmp
insb
mov
xor
in
lds
adc
xchg
pop
cmp
xchg
sti
sbb
xor
mov
xchg
aaa
lahf
mov
fstpt
sub
cwtl
mov
fwait
call
dec
xchg
pop
nop
cmpsl
scas
scas
iret
das
jbe
imul
fwait
test
push
mov
jge
aaa
nop
je
aam
inc
push
mov
mov
jl
out
inc
push
pop
es
into
push
sarl
data16
lock
movb
push
out
jge
mov
pop
cmp
ror
stos
jbe
sub
xor
mov
mov
mov
ja
imull
pop
and
mov
dec
out
into
jo
inc
push
dec
cli
nop
std
mov
mov
inc
sbb
pop
cmp
sbb
xor
mov
xchg
daa
in
and
cmpsl
daa
iret
shlb
outsb
scas
incb
pop
lock
push
lods
xchg
dec
int3
xchg
push
leave
dec
sar
mov
sub
int
mov
shll
inc
dec
push
mov
dec
popf
fdivl
push
mov
stc
pushf
nop
sbb
pop
add
jo
xor
mov
jecxz
lret
adc
dec
shl
cltd
stos
jecxz
ljmp
faddl
push
xchg
push
jnp
sub
sahf
jne
dec
addb
or
mov
rcr
out
loopne
imul
iret
xchg
xlat
sbbb
jge
shlb
cltd
jmp
push
test
cwtl
arpl
push
xchg
loopne
push
xchg
sbb
add
and
xlat
int
movsb
sub
mov
adc
jp
mov
jecxz
push
mov
in
loope
dec
push
lret
pop
int
mov
sbb
push
test
icebp
mov
pusha
rcll
mov
into
sub
into
or
sub
mov
or
inc
rclb
xor
clc
testl
dec
testl
jo
icebp
inc
btcl
xchg
mov
cmp
cs
cli
jp
mov
dec
or
in
jbe
imulb
sahf
loopne
mov
test
pop
push
pop
dec
insb
scas
pop
popa
push
test
call
cmp
aam
popa
push
test
jbe
sub
loopne
xchg
jmp
push
jo
xlat
pop
jecxz
or
pop
pop
fistl
js
fwait
arpl
leave
cmpsb
movsb
jb
cmpl
xchg
fnstenv
jb
cwtl
stos
pop
int3
outsb
and
xor
jmp
add
xor
into
jle
sub
mov
sti
fisttpll
or
into
scas
mov
dec
addr16
cmpsb
and
aas
sub
mov
push
fnstenv
sbb
jbe
mov
imul
xor
mov
enter
jbe
int
xchg
insb
mov
lcall
push
mov
test
and
pop
fcoml
bound
push
jl
push
jmp
lcall
mov
sub
or
orl
sub
mov
sub
mov
mov
add
in
lds
pusha
xchg
ljmp
into
mov
call
inc
into
movb
mov
dec
lcall
push
lret
bound
outsb
test
jnp
pop
inc
xor
add
push
mov
cmp
lcall
insb
jo
fstps
mov
jno
ss
lret
mov
sbb
xchg
icebp
pop
sub
jg
jg
pop
xchg
out
dec
dec
sbb
mov
pushf
aam
xchg
inc
cmp
lret
or
jmp
js
dec
cmp
iret
and
inc
movsl
dec
pop
orl
inc
pop
aaa
mov
scas
dec
dec
rorb
gs
sahf
jge
xorb
jg
cmovno
jne
mov
push
jno
les
xchg
xlat
mov
pop
cs
xorl
xchg
outsb
pop
add
lret
lahf
adc
mov
addr16
cwtl
lods
push
stc
mov
mov
xor
outsb
xorb
adc
sub
cmp
sahf
pop
adc
or
incl
push
push
addr16
imul
add
je
or
das
or
push
out
xor
sub
dec
mov
hlt
push
mov
pop
cwtl
xor
pushf
lret
lret
stos
xor
lret
and
pop
xorl
arpl
sub
push
or
imul
xchg
inc
jae
repz
or
or
sub
inc
push
out
jl
mov
pop
inc
mov
mov
mov
fcomps
sbb
mov
test
icebp
and
pop
sti
add
mov
mov
xor
adc
pop
and
lret
int
aad
cmp
mov
or
sar
jne
fmuls
lods
idivl
pop
jb
insl
out
sub
adc
cli
mov
add
int
add
and
shrb
sti
jecxz,pt
mov
push
enter
pop
notl
mov
sub
mov
xor
scas
and
aaa
stc
sbb
rep
sar
aas
je
sbb
add
out
int
mov
xchg
scas
test
fmuls
movsb
add
fiaddl
out
adc
push
lret
fcompl
sbb
or
ret
adc
ja
ljmp
mov
push
pop
sub
push
xor
add
fxch
cwtl
stos
jno
jmp
adc
push
shrb
mov
mov
mov
mov
inc
fwait
dec
push
adc
pop
xchg
jge
mov
cmp
leave
xchg
lret
mov
mov
outsl
push
sbb
mov
or
out
sahf
js
sub
inc
lcall
dec
xor
test
mov
out
hlt
cli
mov
push
mov
jl
push
cmp
inc
cwtl
push
int3
push
les
adc
xchg
js
std
ljmp
push
push
in
pop
mov
cwtl
jae
xor
add
xchg
out
jns
mov
std
ja
sbb
ljmpw
add
jle
stos
lea
popa
loopne
mov
iret
lds
inc
scas
xor
fbld
std
dec
adc
mov
cmp
pop
and
inc
dec
in
mov
popa
roll
icebp
pop
xchg
fiadds
push
jne
sahf
into
cmp
lods
aam
nop
jg
imul
sbb
ds
test
pushf
xor
inc
inc
addr16
xchg
sbb
sbb
push
rcl
push
sbbb
dec
pop
push
imul
sbb
stos
add
popa
in
jbe
sbb
mov
popa
cmp
out
sbb
add
insb
jo
ljmp
and
fcomi
push
mov
push
and
add
hlt
mov
or
and
lcall
mov
pop
jmp
or
mov
and
fsts
mov
xchg
dec
pop
aaa
mov
repz
inc
pop
popf
push
in
pusha
sub
jp
pop
lret
outsb
mov
nop
push
fs
lds
xor
neg
xor
scas
mov
and
ss
daa
cmpsl
into
lods
mov
mov
fdivrp
dec
jo
pusha
inc
mov
bound
push
and
popf
jbe
ljmp
mov
aam
mov
mov
mov
add
jae
sub
lret
aad
adc
insl
push
int
js
pop
sbb
xor
cmp
ljmp
push
add
jns
or
mov
dec
adc
add
stos
ss
sahf
cmpsl
dec
int
mov
loop
jg
lret
repz
mov
sti
int3
bound
es
sbb
push
ljmp
jecxz
jno
or
add
mov
mov
mov
mov
in
scas
add
push
pop
hlt
jne
arpl
cmp
cmpsl
mov
shrb
push
inc
aaa
dec
inc
sub
cmpsb
stc
push
mov
inc
shrl
cli
dec
fldl2t
mov
cmp
and
or
fldpi
jns
add
rcr
adc
jle
pop
sub
lcall
mov
cmp
das
lods
add
mov
or
cmpsl
lcall
fsubl
out
inc
lock
mov
in
add
cmp
inc
popf
std
lds
push
mov
mov
jmp
loopne
sub
push
lea
push
in
fs
pop
inc
jle
push
mov
inc
mov
adc
in
push
xor
xor
cmp
aas
pop
jg
nop
sub
ds
push
cmp
jp
mov
fdivr
mov
and
jb
xchg
xor
sbb
ret
or
mov
movsl
pop
data16
lds
cmp
lahf
adc
push
adc
jae
and
adc
mov
or
jmp
adc
repz
push
notb
fsubl
sub
push
leave
push
xor
arpl
mov
xchg
jle
or
cmp
inc
test
mov
movsw
add
lea
out
ljmp
out
enter
rorl
inc
push
jp
pop
and
loopne
je
jge
in
pop
and
jnp
lds
inc
rcl
dec
inc
incl
jmp
adc
pop
and
iret
inc
mov
in
cld
scas
inc
adc
push
dec
out
mov
and
or
mov
gs
aaa
pop
popf
test
icebp
stos
icebp
or
test
pop
ret
jge
rcll
aas
pop
aam
call
pop
ja
fstps
in
or
test
or
shlb
sbb
or
adc
cmp
loopne
push
adc
call
add
xchg
and
enter
mov
inc
add
pop
push
inc
loope
xchg
adc
push
nop
sarb
in
inc
lock
sti
pop
and
jmp
sub
rorl
pop
mov
shll
mov
call
ficomps
aas
test
rcl
mov
sbb
out
dec
lahf
mov
and
pop
scas
jb
sbb
subl
mov
imul
mov
cmpsb
decb
xchg
sahf
dec
lock
cmpsl
test
nop
push
pop
ljmp
add
cmp
or
outsb
and
lahf
std
sbb
cmp
jmp
inc
nop
rcr
or
cmc
push
rclb
popl
add
movsb
xlat
stos
cwtl
jb,pn
mov
out
in
repz
push
mov
jmp
pop
dec
popa
sub
xor
adc
test
leave
add
xor
fdivr
rdpmc
lods
mov
rcrb
fsubp
sti
out
leave
mov
sti
mov
jg
int3
incb
bnd
iret
in
push
popa
jns
nop
popa
inc
or
mov
mov
adc
lods
xchg
xor
movsl
jl
push
insl
mov
aaa
jns
xor
std
or
ret
adc
mov
ljmp
int
int
ja
cmpsb
jb
mov
dec
insl
movsl
rcr
jg
and
pop
cmp
shld
add
fisubs
cmp
mov
aaa
mov
inc
and
mov
mov
sbb
ficompl
add
movsb
mov
mov
pop
jae
jg
mov
cs
xchg
bound
xchg
icebp
sub
mov
rolb
jb
cmp
and
fmull
jbe
and
fwait
loop
std
cwtl
hlt
xchg
mov
xor
push
pop
es
stos
sub
shlb
into
lahf
das
xor
push
insl
mov
leave
push
jne
pop
push
subl
lcall
sub
xor
fs
push
dec
xor
jp
push
xchg
rol
pop
insb
or
xor
sub
pushf
sbb
jbe
xlat
mov
repz
add
add
loop
dec
je
jmp
push
mov
lea
xlat
xor
cld
ret
ret
mov
int3
insl
jns
divb
mov
push
pop
jne
shll
imul
push
adc
push
push
iret
pop
in
sub
movsl
cmp
xor
ficompl
call
pop
cmp
and
xchg
data16
jno
cwtl
mov
mov
data16
outsb
sbb
cmp
test
sub
jae
sbb
bound
and
mov
push
pop
movb
in
lret
xor
popf
mov
fbstp
xchg
add
sahf
inc
clc
ds
ret
sub
xchg
jecxz
or
stc
jge
dec
addr16
nop
in
addl
push
out
dec
and
push
mov
push
ljmp
dec
frstor
hlt
in
pop
addr16
push
pop
mov
pop
mov
mov
aam
cltd
push
movsl
or
mov
cmpsb
xor
insb
test
add
test
add
pop
aad
add
adc
mov
inc
dec
mov
sub
mulb
sbb
xlat
fprem
cmp
je
movsl
lahf
pusha
test
negb
pop
dec
loope
adc
or
jl
cld
mov
dec
adc
sahf
mov
adc
mov
mov
push
hlt
lret
idivb
sar
jno
or
lock
es
dec
addr16
push
mov
cmpsb
mov
cmp
out
or
in
jae
out
scas
mov
shrb
or
outsl
js
push
cs
mov
iret
mov
mov
push
xor
repz
ja
hlt
inc
lahf
stc
clc
outsb
stos
sbb
mov
fs
imul
imul
test
xor
mov
pop
ret
pop
inc
or
call
mov
into
cmp
xor
pop
cmp
push
or
lods
cwtl
sub
jg
jp
adc
cld
test
fcmovne
mov
dec
call
pop
int
pop
cmp
cmpsl
mov
mov
cmp
loopne
and
push
jno
sarb
jb
xchg
adc
iret
int
ss
mov
pop
adc
mov
adc
test
pop
cmp
inc
sbb
inc
xor
jo
pop
fdivs
jl
sbb
enter
pop
fcomps
jnp
fsubrp
mov
insl
cli
aas
roll
icebp
pop
scas
out
mov
jle
sbb
insl
push
push
test
fcom
cmp
push
lods
lods
iret
aam
nop
mov
loop
mov
mov
inc
fdivs
bound
sbb
mov
notb
mov
js
gs
mov
mov
shr
rorl
int3
fwait
and
cltd
push
mov
insb
pop
pop
and
cltd
xor
xchg
dec
insb
scas
popf
sarl
mov
rcr
pop
or
lds
mov
inc
adc
in
fstpl
jp
movsl
jo
out
mov
ss
ret
lds
xor
xchg
cmpb
repnz
insb
mov
push
daa
gs
jl
mov
ljmp
mov
cmp
sub
pop
test
repz
jp
pushf
adc
adc
movsl
mov
mov
mov
mov
add
pushf
sbb
repz
push
sbb
xor
imul
dec
aad
out
fdivs
call
mov
int
mov
in
mov
mov
inc
orl
in
mov
test
test
out
out
adc
dec
icebp
scas
xor
popl
pop
das
ficompl
in
cmp
test
push
std
mov
addr16
cmp
ds
idiv
pop
sarb
out
jge
pop
jb
cmpsb
mov
push
sar
int
cmpsl
push
repz
in
enter
push
das
dec
es
shlb
loope
mov
outsb
inc
addr16
sub
jge
lea
mov
mov
adcb
dec
sbb
adc
sti
insb
les
movb
sbb
into
mov
es
leave
sbb
xor
push
ret
mov
sub
inc
pusha
in
xchg
mov
cmpsb
xchg
jl
cmpsl
sbb
push
mov
xchg
sub
cwtl
xor
xorl
into
ret
movsb
int
adc
ret
cmpb
cmp
xor
xchg
or
int3
jne
mov
shlb
and
jne
jmp
xor
mov
leave
mov
shlb
cmp
addb
xor
add
jp
mov
test
pop
pushl
or
pop
dec
scas
fstl
lods
mov
inc
xchg
dec
fstps
mov
fcmove
fldcw
fsubrp
push
adc
sahf
adc
jnp
cmc
adc
pop
ja
stc
push
xchg
cs
bound
roll
dec
lahf
lods
jo
fs
mov
pop
pop
xor
mov
push
test
icebp
cmp
out
test
fs
mov
push
jp
lods
test
xor
add
adc
call
out
cmp
xor
or
dec
cmp
sub
ja
mov
adc
xor
addr16
xchg
arpl
cmpsb
loop
jbe
shlb
shll
mov
loop
sub
dec
push
pop
push
add
mov
movsl
push
out
imul
mov
cli
sub
sbb
xchg
mov
fmull
sbb
scas
pop
repz
mov
dec
fidivl
or
adc
mov
ds
roll
outsl
subb
in
lret
out
push
sbbl
popa
das
adcl
sub
jne
mov
sub
mov
lret
fldenv
sub
gs
mov
mov
cld
inc
pop
lret
mov
sti
sbb
push
inc
jnp
xlat
loope
inc
test
inc
sub
mov
jo
mov
add
sub
pop
and
fisubrl
mov
pop
lea
push
push
sahf
roll
dec
jns,pt
lea
and
cmp
ja
or
addr16
inc
fwait
cmp
ret
sub
or
gs
sbb
push
mov
mov
xchg
stos
adc
jne
xchg
mov
cli
push
mov
jecxz
je
shll
inc
xor
push
fiaddl
add
mov
in
adc
repnz
enter
mov
cmp
cmp
dec
pop
cmp
imulb
lds
imull
xor
sub
push
shrb
loope
and
add
or
jmp
adc
in
push
inc
add
pop
jmp
mov
dec
js
dec
jmp
push
sbb
xchg
xorl
cwtl
imul
sub
fists
repnz
mov
and
aas
xchg
xlat
pushf
cs
daa
cltd
rcll
test
jbe
loope
mov
fld
mov
lods
sub
test
xchg
icebp
pop
inc
sub
mov
mov
sub
mov
rorb
inc
and
and
xchg
sti
mov
int3
ds
es
mov
out
xor
push
sahf
cmpsl
jg
jecxz
sub
jnp
adc
gs
insb
aad
lock
xor
fists
adc
insb
out
adc
inc
ror
ss
pop
mov
mov
mov
dec
jno
icebp
xor
xlat
sub
fwait
stos
rcl
sahf
jle
repz
sbb
rcrb
in
push
inc
and
les
sub
adc
pop
xchg
mov
outsl
adc
dec
testl
mov
fcomps
ljmp
jb
ficoml
cmpsl
fnstcw
fwait
outsb
fldt
dec
shr
fwait
insb
jbe
out
test
push
add
ja
aam
call
push
out
std
inc
scas
dec
lret
fwait
pop
fisubs
stc
enter
mov
jnp
and
push
ficoms
cmp
mov
test
cs
pushf
insl
mul
inc
xchg
inc
adc
in
mov
push
xlat
gs
inc
loop
int
push
pop
mov
and
jne
leave
mov
push
mov
jne
loopne
bound
arpl
in
outsb
std
stos
adc
and
mov
addr16
lods
loop
dec
mov
out
sti
dec
lret
mov
iret
jle
pusha
repnz
es
inc
outsl
jg
mov
lahf
std
push
pop
outsl
icebp
scas
jno
ret
jo
lods
mov
insl
add
aam
dec
dec
and
add
shlb
sbb
xchg
pop
daa
xor
cmp
lods
lret
sahf
mov
mov
sti
mov
notl
test
push
jmp
ds
inc
jl
ss
mov
or
sbb
mov
testb
lods
gs
add
popa
cmc
cmp
push
mov
ja
add
sub
jecxz
mov
lds
out
add
dec
rorl
mov
pop
sub
test
aad
sub
xchg
xchg
aam
xor
popf
sbb
adc
imul
rorb
mov
and
sbb
or
dec
xchg
jmp
and
sbbb
xchg
inc
push
sbb
test
ja
inc
mov
and
adc
cmp
mov
leave
enter
in
mov
aad
xor
xchg
cmpsl
cmpb
nop
push
cs
mov
aam
and
ret
xor
pop
xor
idivb
ret
adc
adc
std
enter
rorb
ds
push
cmp
fbstp
mov
int3
out
push
fwait
xor
dec
jecxz
fneni(8087
mov
stos
cmp
sbb
pop
call
pop
shll
mov
adc
pusha
arpl
adc
popa
rclb
fistpll
movsl
adc
xchg
dec
jnp
sarl
lcall
mov
and
inc
xor
cmp
push
stc
scas
jecxz
pop
lods
sbb
loopne
jge
int3
push
add
and
sub
xor
jne
add
leave
movsl
fistps
shrl
outsl
lds
test
fcmovb
push
loop
pop
sub
pop
push
mov
nop
adc
push
add
ret
idiv
dec
jno
sbb
inc
rcrl
test
call
sbb
pop
shl
push
loopne
xchg
arpl
pop
nop
push
inc
lods
push
dec
push
or
cmp
cs
pop
push
lods
int
aas
cmp
sbb
addb
cmpsb
cmp
lcall
orl
shll
lock
cmpsb
adc
inc
out
inc
inc
mov
jns
in
pop
enter
imul
jne
aad
test
hlt
sub
hlt
pop
jns
sub
mov
andb
fcoms
lret
adc
pusha
bound
sbb
sub
or
mov
sub
imul
std
ja
inc
pop
dec
mov
insl
mov
mov
xor
ja
dec
mov
mov
push
int
mov
icebp
sbb
add
xchg
inc
loopne
dec
stos
das
nop
mov
xchg
cmp
pop
mov
inc
je
outsl
iret
rcrl
dec
sbb
cmp
and
xor
test
jg
adc
sbb
ja
xor
ss
inc
in
test
add
imul
jg
jge
in
fsubrp
fisttps
dec
shr
stos
xchg
inc
inc
add
ret
shl
hlt
dec
xchg
addr16
or
jne
dec
mov
scas
adc
imul
je
xlat
xor
and
mov
imul
iret
repz
mov
xchg
stos
sub
lea
gs
xor
sub
push
and
insl
sbb
stc
aad
adc
cli
add
orb
or
test
pop
sbb
pop
adc
ja
xchg
mov
data16
add
shl
fistps
repnz
cmp
rclb
pop
mov
dec
int
clc
std
cld
xlat
stos
fidivrl
mov
mov
push
addb
inc
imul
test
mov
jl
in
sar
adc
cmp
cmpb
sti
pusha
inc
jae
shlb
hlt
lret
rolb
idiv
xchg
push
loop
dec
fidivrs
add
cmp
sub
jmp
push
out
sub
in
sarl
movsb
mov
lea
arpl
scas
inc
out
cwtl
push
fs
insl
mov
pop
jle
lahf
xchg
test
mov
rcrl
dec
fsubrs
inc
push
or
pop
decb
outsl
and
cmp
add
or
push
stos
dec
fildll
cmc
std
xor
scas
xchg
stos
js
mov
data16
mov
loope
cmp
mov
and
outsb
xchg
push
shll
push
mov
fiadds
jno
rcll
or
fs
dec
mov
cli
push
ljmp
jnp
push
or
push
push
js
xchg
outsb
call
ror
out
cmp
aam
mov
mov
subb
or
ja
nop
mov
dec
cwtl
xchg
test
in
sbb
mov
rcrb
or
push
repnz
das
adc
lods
mov
xor
push
addr16
jae
push
xlat
xchg
leave
xor
adc
cmovae
push
lea
cmpsb
lock
dec
sbb
out
jbe
push
jmp
stos
push
add
ljmp
jle
dec
addr16
aas
xchg
xor
or
aaa
gs
push
xor
inc
sub
mov
jmp
icebp
mov
jmp
pop
xchg
pop
sbb
pop
mov
mov
movsl
jle
std
fsubrl
pushf
cmp
sti
jno
lea
repz
jne
pop
stc
lock
in
push
bound
repnz
or
test
data16
xor
dec
push
add
and
mov
jecxz
add
hlt
lods
out
scas
dec
pop
mov
dec
xor
adc
adc
insl
int3
mov
pop
jmp
bnd
lret
lock
or
push
not
pop
adc
xlat
shll
cmp
mov
into
push
or
fs
xor
add
out
test
cld
inc
fldcw
pushf
repnz
int
jno
in
xchg
div
dec
adc
out
test
push
and
out
cmpsl
data16
xor
lock
or
cwtl
or
mov
hlt
outsl
xor
test
insl
adc
movsl
xchg
add
sbb
and
or
push
insl
jmp
jp
add
jae
arpl
adc
imul
pop
jns
or
and
push
loop
cmp
daa
cmp
jno
sti
jae
lods
or
sti
jg
pop
xchg
out
rorl
out
outsb
add
add
push
xchg
aaa
mov
ds
sbb
dec
pop
mov
pusha
rcrl
scas
mov
test
dec
orb
frstor
push
mov
lds
addr16
aad
leave
dec
lods
dec
idivb
mov
adc
mov
pop
fwait
mov
sbb
or
push
lret
pop
leave
out
inc
adc
in
pop
daa
mov
je
mov
out
data16
add
es
mov
push
push
pop
pop
mov
ss
stos
xchg
lds
xchg
sub
adc
fdivr
mov
push
roll
fsubl
repnz
fsubp
push
packuswb
scas
out
and
loope
dec
sub
jae
out
enter
pop
popf
jle
aad
lea
inc
cmpsb
scas
dec
cmp
and
pop
lods
mov
sub
mov
lret
fdivs
inc
test
sbb
jnp
xchg
or
lret
push
cmp
stos
inc
inc
aas
mov
in
mov
ficompl
test
mov
pop
popf
inc
xchg
aas
push
cmp
sub
inc
or
in
mov
pop
xlat
jp
icebp
sti
loopne
cmp
pop
sub
inc
ficoml
jne
filds
xor
xchg
add
jp
aaa
sti
adc
mov
inc
js
jl
pcmpgtd
jae
out
adc
add
and
bound
cli
test
push
dec
push
or
jae
and
sti
push
and
repz
or
and
and
mov
push
loope
and
xchg
pop
js
sbb
pop
adc
repnz
sbb
xchg
xor
and
movsb
in
and
or
imul
adc
shrl
call
clgi
js
adc
or
dec
mov
fldt
xchg
mov
mov
mov
add
sub
push
pusha
inc
sub
mov
in
hlt
add
hlt
inc
addl
pop
or
addr16
loope
jmp
icebp
xlat
fdivrl
lcall
mov
push
and
adc
xchg
cmc
xor
idivb
push
fidivs
btc
push
sbbb
testl
jne
incl
icebp
cs
sarl
cwtl
fs
lret
cmp
mov
push
stos
fdivs
lock
aaa
jecxz
jle
psubw
rcrb
mov
pushf
jmp
xchg
je
push
xor
cmp
adc
sbb
mov
test
mov
xchg
sub
mov
xor
icebp
sub
sbb
cmc
and
sbb
mov
lcall
in
add
push
test
idiv
push
mov
daa
fwait
cld
in
cmp
xor
and
jne
sub
mov
push
push
add
in
scas
or
jb
out
cmp
jns
cld
mov
cmp
xchg
jmp
cmc
ss
repz
adc
clc
arpl
aad
sti
sub
pop
aaa
pop
shlb
popf
jle
lds
lea
mov
lcall
in
xor
jle
stc
lret
insb
hlt
test
cmp
xchg
mov
fwait
lret
cs
lret
xor
cs
pop
out
cmp
in
cmp
ficomps
mov
sub
cs
xchg
das
pop
bound
std
push
mov
and
mov
sub
dec
sahf
sbb
enter
jl,pt
div
push
and
out
mov
idivb
mov
dec
cmp
test
jmp
xchg
dec
loopne
out
sbb
xor
push
out
andl
and
adc
js
data16
sahf
xchg
jp
outsl
loop
jns
mov
cmp
adc
inc
jl
mov
adc
mov
xchg
add
xorb
pushf
mov
adc
out
xchg
mov
mov
adc
cmp
pop
call
dec
fdivl
lcall
sbb
sub
cmpsl
sub
push
push
xchg
adc
sahf
inc
arpl
ljmp
inc
test
popf
aas
xor
int
fs
sbb
mov
into
aad
imul
sub
cmc
mov
xor
insl
mov
push
inc
sbb
xchg
cmp
stc
mov
mov
xchg
mov
dec
test
sbb
pop
xor
andb
sbb
cmpl
cld
sahf
mov
mov
mov
movsb
inc
lahf
inc
jle
cmp
sub
push
add
aas
xor
fidivrl
pop
pop
jl
mov
mov
fwait
imul
iret
add
sbb
xchg
and
xchg
mov
cmp
mov
aam
jae
sbb
cmpl
mov
mov
xlat
adc
xchg
inc
jmp
mov
jnp
lods
and
into
ds
xchg
repz
xor
jge
dec
sub
adc
fimull
imul
aam
je
test
dec
addr16
push
dec
not
sub
xlat
pusha
push
shlb
xor
lock
int
sti
xor
inc
adc
pop
mov
add
pop
pop
or
outsb
mov
fists
mov
push
mov
push
push
mov
and
sub
xchg
pop
and
movsb
mov
fdivr
iret
loope
test
sbb
fiadds
js
jmp
mov
stc
ljmp
imul
mov
mov
dec
sbb
lcall
and
rorb
mov
mov
lret
scas
int3
lods
xchg
inc
fnsave
mov
jae
push
mov
clc
mov
out
xchg
xchg
ret
mov
cmp
fwait
push
scas
sti
aaa
imul
push
stos
mov
add
fscale
ljmp
nop
dec
dec
cmp
cmp
pop
push
outsl
hlt
daa
loope
mov
int
aas
mov
jbe
insl
imul
mov
arpl
jl
loope
jo
xor
pop
dec
and
pop
aam
bound
jl
jne
clc
mov
cmp
dec
test
leave
test
mov
inc
jl
push
cltd
mov
pop
sbb
inc
insb
imul
mov
repz
cltd
adc
inc
jecxz
adc
add
sub
push
sti
push
jbe
loope
mov
seto
cs
jo
lcall
pop
xlat
std
lcall
push
test
icebp
stos
dec
sti
push
int3
outsb
dec
mov
lret
jno
mov
insl
xor
add
push
xchg
nop
ljmp
cmp
scas
mov
das
sti
pop
lret
push
or
mov
lcall
or
pusha
leave
arpl
mov
sbb
dec
mov
js
cmpsb
lock
mov
push
bound
sbb
and
push
jp
stos
pop
sbb
push
loopne
add
adc
dec
cwtl
out
aam
lret
js
dec
outsb
ret
and
ret
mov
push
jmp
cmp
push
test
aas
mov
add
cmc
test
mov
sbb
cmpsb
jle
xlat
xchg
sub
pop
sub
or
inc
or
push
push
xor
and
or
push
in
xchg
lods
push
sbb
adc
or
leave
popf
rolb
mov
out
mov
add
jno
daa
mov
stos
pop
push
rcrb
and
sbb
leave
sbb
sub
jl
imul
dec
sbb
cmc
aad
push
pop
lahf
pushf
shl
dec
or
add
dec
stos
cmpsb
dec
xchg
lcall
add
jl
push
cli
cld
mov
mov
push
adc
pop
xchg
cld
push
xchg
in
sbb
cmpsl
imul
dec
jg
daa
lahf
fsubrl
push
push
sub
xchg
movsb
sub
adc
cs
sarl
sub
pop
pop
and
pop
lcall
cli
push
pop
ret
stos
and
sub
pop
cwtl
gs
pusha
pop
je
lds
jbe
push
in
mov
mov
dec
jge
push
lcall
xchg
fnstsw
jp
mov
sbb
jbe
xchg
notl
shlb
xchg
inc
pop
jl
outsb
loope
decl
rcrb
lea
cld
mov
stos
xchg
add
mov
fsubp
aam
push
std
fcom
jae
outsb
lods
pop
add
dec
stc
mov
subb
in
xchg
xor
dec
daa
cmp
adc
xor
bound
popa
jno
insl
dec
inc
scas
and
lcall
push
pop
mov
pop
jecxz
push
xor
push
cmpsl
xchg
es
mov
push
sti
cs
jge
in
mov
pop
scas
nop
fchs
lahf
adc
out
sbb
es
pop
xchg
dec
mov
xor
mov
fmul
ds
jne
test
sbb
push
stc
pop
int
call
dec
lret
pop
ret
cs
xor
cmpsl
jae
inc
dec
xor
pop
xchg
sbb
std
mov
inc
mov
ljmp
mov
mov
jnp
sahf
mov
inc
adc
les
push
push
pop
cwtl
into
and
xorb
sub
jmp
add
imul
sbb
mov
mov
mov
fdivs
out
xor
ret
scas
test
push
pop
in
cmpsb
imul
pop
leave
ljmp
push
mov
xchg
inc
mov
pop
or
in
pop
adc
lahf
jl
es
ss
push
incb
mov
mov
xchg
test
in
test
pop
rcll
mov
sub
sbb
adc
arpl
movsb
cmp
scas
xchg
dec
inc
push
movsb
lahf
mov
mul
and
nop
sti
add
jle
movq
mov
and
test
push
cmp
lcall
sbb
adc
push
pop
lcall
in
pop
shl
out
pusha
mov
mov
or
shl
sub
repz
inc
jle
pop
jmp
pop
xchg
mov
sub
clc
cmp
xchg
fstpl
iret
movsl
mov
cli
lahf
in
mov
stc
jnp
imul
mov
push
xlat
push
inc
das
lods
sub
dec
adc
xchg
adc
jge
fsubp
pusha
dec
ljmp
out
outsl
push
fdivrs
shlb
fsubrl
push
out
pop
sbb
jno
mov
ja
sbb
cwtl
cmpsl
cmpsl
cmc
xor
cmc
add
cmp
scas
js
adc
enter
xchg
loop
push
lea
and
arpl
xchg
shll
mov
into
inc
pop
jae
jbe
roll
jecxz
fimuls
into
inc
push
inc
lret
outsl
dec
or
push
loopne
mov
jae
mov
mov
fidivl
insl
push
adc
cli
mov
xlat
adc
les
das
push
rcll
push
inc
xchg
or
jmp
out
push
stos
sbb
jp
mov
push
lret
jecxz
mov
int
mov
sub
xchg
xor
mov
imul
sbb
mov
pop
mov
repnz
xchg
orb
cli
fcoml
jne
mov
arpl
outsb
outsl
pushf
clc
jecxz
insl
fcmovnu
hlt
xchg
cmp
cmpsl
call
cmp
gs
aad
jb
mov
nop
loopne
lcall
jae
or
add
lret
xchg
fldt
test
cmp
adc
rcll
pop
mov
push
scas
and
pop
mov
pushf
scas
sti
les
jo
jp
lds
inc
push
call
mov
pusha
and
andl
idivb
push
dec
iret
sbb
pop
in
fimull
mov
xor
dec
push
in
ljmp
and
push
js
jmp
test
xor
cmp
scas
cmpsl
push
and
in
add
imulb
aaa
clc
add
insb
lret
or
cmp
or
cmp
jns
push
mov
xchg
mov
sub
into
push
mov
js
inc
js
sarl
fcoml
cmp
rcll
mov
jecxz
or
movsb
gs
jg
mov
test
jle
add
xor
dec
movl
outsl
mov
dec
cmpsl
jl
movsl
mov
les
arpl
ljmp
and
sarb
sub
test
dec
in
jae
cmovp
sub
cli
mov
and
mov
push
inc
sub
xor
icebp
insl
sub
add
sbb
mov
adc
icebp
xor
dec
rcrb
mov
push
loop
and
cmp
or
mov
and
mov
add
jle
movsb
in
inc
or
gs
pop
push
lods
pop
jbe
jl
enter
les
mov
out
inc
or
mov
pop
cmp
mov
sbb
in
in
in
mov
xor
aaa
sub
xchg
pop
mov
lahf
cmpb
shrl
popa
repnz
xchg
ss
jmp
stos
sarl
cld
and
mov
int
imul
test
pop
pop
rorl
and
into
push
idivl
loopne
rorb
repz
bound
push
jecxz
xor
cmc
ja
lock
fdivl
cs
mov
add
ljmp
daa
inc
sbbb
stos
insl
xchg
scas
mov
fsubs
lret
fs
out
sbb
bound
sub
push
out
fmull
xor
jl
shll
clc
rol
in
in
adc
xchg
adc
push
cmp
push
jle
xchg
popf
push
lods
mov
ja
loop
mov
dec
mov
fildll
dec
icebp
mov
je
fwait
xor
push
lahf
mov
jg
push
mov
imul
in
clc
leave
or
adc
and
loopne
fwait
add
insb
std
mov
mov
das
jle
and
pop
dec
mov
jmp
stos
shll
fldenv
cmp
cmp
pop
out
ljmp
fldcw
into
jge
xor
and
cmp
sub
gs
xor
pop
and
stc
std
jg
xchg
stos
or
ja
sbb
mov
outsl
test
out
xchg
aad
mov
or
loop
push
stc
jl
and
and
add
cmpsb
cmp
jecxz
mov
cld
jo
cwtl
gs
and
insl
sub
xor
cmp
in
add
inc
push
push
mov
xor
adc
mov
mov
jno
pop
icebp
iret
stc
xchg
mov
mov
in
sub
adc
push
in
push
pop
cli
xchg
inc
xchg
cmpsb
or
idivl
sub
mov
inc
inc
cmp
sub
mov
mov
cmc
and
mov
lea
fwait
inc
push
js
jo
push
negb
into
hlt
pop
mov
jne
cmp
sbb
insl
notl
movsl
fstpt
adc
inc
cld
fs
jno
cmp
cmp
int
cmp
insl
xor
movswl
push
mov
xor
jo
xchg
test
cmp
fwait
lret
arpl
pop
icebp
inc
add
jle
sbb
call
int
popf
aas
test
cmp
dec
mov
ljmp
mov
push
adc
rol
jle
or
mov
je
subb
pop
mov
movsl
add
std
test
cld
jp
inc
jae
fcoms
ficoms
sar
into
outsl
sub
test
std
movhps
pop
bound
mov
pop
and
sti
xor
bound
sbb
xlat
or
dec
les
fcoms
mov
mov
jmp
cmc
lods
xchg
cld
out
hlt
lahf
lods
sbb
or
dec
bound
fadds
lea
mov
or
rorb
arpl
pop
js
push
call
pusha
sbb
roll
push
in
ljmp
push
fld
and
ss
add
lds
push
cli
jne
rclb
fildll
sbb
out
das
dec
pop
add
jo
and
sub
cmpsb
in
adc
out
sti
push
loop
stos
xchg
lock
sar
inc
add
fstp
rep
hlt
or
push
lret
mov
jle
jno
jae
mov
test
pop
and
movsb
mov
or
pop
jo
cmp
cwtl
nop
loop
aaa
xor
test
pop
push
lret
adc
mov
arpl
cmp
fldt
mov
movsl
ss
nop
cmpsb
xchg
sahf
dec
xchg
pusha
mov
push
inc
cmp
or
and
xor
mov
lcall
push
push
mov
shr
les
subl
push
loop
test
mov
sbb
daa
push
cli
mov
int
pop
lcall
leave
push
jecxz
test
hlt
out
subb
mulb
rorb
fnsave
lahf
sub
adc
mov
scas
inc
add
arpl
repnz
int3
pushf
sbb
inc
insb
xor
out
imull
sbb
xchg
sbbb
pusha
push
sti
scas
mov
lds
icebp
mov
daa
cmp
out
and
jno
pop
sbb
addr16
mov
xor
fiaddl
out
and
pop
clc
jle
jle
scas
jmp
push
and
add
stc
popa
push
lcall
cld
imul
or
jnp
mov
ds
xor
sub
or
xor
sbb
dec
aaa
fimull
cmp
sub
in
inc
xor
maxps
ret
clc
shrl
push
imul
pop
clc
popa
sub
stos
ficoml
pusha
pop
movsb
addr16
pop
mov
mov
add
xchg
xchg
movsl
stos
inc
cli
shrl
int
and
popa
icebp
int
pop
loope
aam
pop
cli
push
pop
daa
pop
outsl
or
adc
loope
sti
fiadds
sbb
xor
adc
and
xor
gs
addr16
xchg
lods
cmpsb
daa
pop
mov
adc
pop
push
adc
add
clc
fcmovu
rcl
les
das
xchg
sub
or
jb
add
loopne
sub
sar
jl
push
mov
imul
into
cwtl
sarl
iret
sub
in
stos
les
inc
fstps
orl
jnp
daa
push
push
inc
icebp
jbe
roll
push
adc
repz
insb
jmp
outsl
jb
add
ds
lods
cmp
jne
pop
into
mov
clc
sbb
mov
cmovo
or
lea
lds
jo
push
inc
test
cmp
scas
mov
xchg
mov
negl
dec
fwait
movsl
or
cmp
lods
ret
add
jge
lcall
xchg
movsb
pop
xchg
add
test
mov
xor
mov
mov
pop
xchg
cmp
shll
inc
push
xchg
and
jg
jno
sti
xchg
and
mov
or
push
daa
lahf
push
mov
pop
mov
jbe
imul
push
and
pop
int
inc
and
sbb
push
sub
lods
insl
mov
movsb
add
out
imul
les
lods
mov
mov
pop
or
outsl
inc
xchg
xor
push
and
shll
xor
mov
repz
inc
ret
jbe
in
cmp
mull
cld
jne
cmp
xchg
lret
xchg
sbb
mov
rolb
addr16
adc
inc
pop
fsubp
in
jp
sbb
incb
mov
cmp
jns
fwait
push
ja
adc
xor
and
cmp
call
sub
dec
enter
jae
stos
movsb
inc
jge
sbb
dec
jnp
out
inc
call
scas
js
fadd
scas
push
add
movsb
rcrb
aaa
cwtl
and
fs
xor
mov
outsl
or
adc
xchg
call
xchg
push
inc
mov
jbe
ret
or
mov
xchg
add
movsb
adc
inc
insb
mov
cmc
inc
sbb
jnp
cs
jecxz
inc
sbbl
dec
lods
xchg
sub
inc
aam
lods
sbbb
movl
inc
aaa
pop
mov
jbe
cmpl
sarl
sub
cmpsl
sbb
pop
orl
ja
xor
inc
dec
icebp
push
jbe
mov
pop
xchg
pop
out
cmp
jle
sahf
daa
mov
jne
pop
gs
mov
jle
cs
nop
sahf
lods
adc
rcrb
sti
push
mov
je
clc
loop
pop
pop
cmp
es
push
repnz
enter
loop
js
movsb
mov
push
or
arpl
imul
sbb
jmp
inc
icebp
and
mov
adc
in
add
out
dec
pop
nop
lods
add
arpl
into
loopne
lock
jns
cld
fucomp
and
inc
push
aam
mov
fidivrl
call
add
bound
mov
mov
addl
xchg
test
or
sti
add
in
jne
cmp
cmp
add
cwtl
mov
xlat
rcrb
aam
cmpb
mov
sarb
jle
add
push
out
or
mov
ja
sbb
push
mov
int3
xchg
mov
lret
sub
mov
lret
daa
loope
mov
xchg
and
mov
popf
es
je
aam
sti
ss
int3
outsb
gs
out
outsb
mov
mov
sbb
adc
repnz
pop
dec
push
lret
nop
inc
sub
out
out
icebp
pop
mov
ret
inc
xor
inc
and
jo
inc
mov
pop
jnp
pop
and
push
jne
push
sbb
sbb
outsb
aaa
rcrl
ljmp
inc
bound
bound
inc
lock
sbb
inc
sbb
imul
push
inc
push
insl
leave
or
dec
pushf
dec
xchg
lea
das
push
fsubrp
movd
xlat
mov
pop
iret
movsl
sbb
pop
pop
std
mov
lock
inc
sbb
test
xchg
cmp
lahf
pop
aad
test
adc
sahf
and
movups
mov
xchg
add
cltd
dec
loop
pop
cli
sbb
jl
jnp
push
out
mov
sarl
call
add
add
inc
insb
mov
sub
lods
dec
cwtl
in
mov
outsl
rol
test
add
mov
add
fildll
pushf
lock
jecxz
testb
sti
test
bound
push
nop
push
add
es
ret
dec
aad
jmp
push
dec
jne
cwtl
mov
cmp
lock
sbb
add
jne
ret
push
cmpsb
adc
mov
push
xor
stc
aaa
dec
into
cmpb
xor
outsb
fnsave
xor
imul
iret
xchg
xorl
jne
mov
outsl
mov
cwtl
or
jo
xchg
push
push
inc
cmpsl
cli
fldcw
push
xor
addr16
jp
and
jmp
pop
xchg
lea
jb
ss
mov
aam
jge
sbb
push
pop
out
test
pop
add
xor
jb
insb
shlb
mov
pop
aas
inc
push
xor
or
aaa
dec
mov
xchg
inc
lds
js
push
loope
clc
stos
in
mov
fstpl
push
inc
inc
iret
test
ret
icebp
pushf
xchg
cmp
int
adc
imul
add
sahf
xchg
pop
push
pop
xor
jl
add
arpl
mov
push
pop
and
or
mov
and
out
adc
push
mov
jne
push
add
and
test
fsts
cmpsb
inc
jl
inc
xorb
into
and
je
imul
inc
jb
loope
ljmp
push
dec
rolb
sub
jp
pop
jbe
pop
xor
add
xchg
jl
or
insb
sti
mov
data16
mov
dec
xchg
shl
dec
lods
mov
inc
xlat
jns
pushf
or
syscall
addb
aas
xor
out
jnp
loope
out
mov
arpl
je
or
mov
jb
clc
add
lock
iret
sbb
push
lret
mov
hlt
adcb
inc
push
cmp
icebp
nop
imul
cmp
xchg
or
cld
cmp
jo
push
adc
sahf
pop
jb
subl
int
mov
adc
cmp
in
lahf
cmc
jno
fdivs
ljmp
mov
or
out
mov
xorl
rolb
imul
sti
cmp
lret
pop
dec
add
shrb
leave
leave
jp
lcall
jns
test
stc
mov
sub
jecxz
out
fnstsw
rorb
fiadds
loope
push
xor
mov
cmpsl
daa
xchg
idivl
ja
cmc
es
and
jg
lock
in
cli
xchg
pop
pop
rcr
mov
push
jb
daa
push
dec
shl
in
xchg
or
lahf
test
outsb
and
cli
cld
xchg
adc
lcall
outsl
insl
lds
push
outsb
sbb
inc
stos
jl
ljmp
movsb
sbb
out
sbb
scas
push
cmpsb
shlb
mov
cmc
leave
rcrl
nop
das
xor
fisubrl
movsb
repnz
sub
or
out
mov
jl
pop
sub
addr16
mov
pusha
shr
or
jnp
mov
sbbl
dec
jno
mov
dec
fnstenv
sub
mov
fdiv
cmc
sub
and
sti
jb
ljmp
insl
or
mov
and
iret
in
aad
jbe
inc
mov
push
sub
mov
jmp
push
jo
fwait
adc
or
int3
sbb
rcrb
xor
out
and
mov
sub
popa
adcl
dec
cmp
js
and
sbb
cmp
jne
jecxz
jge
mov
mov
popa
adc
cmpsl
shrb
cmp
push
and
dec
imul
sbb
mov
sub
pop
inc
cmp
ljmp
sahf
jo
inc
push
jae
fimull
daa
pop
push
stc
xchg
pop
dec
push
cmp
into
inc
mov
cmpsb
sbb
rcrb
int
pop
mov
xor
out
inc
out
ficoms
mov
pop
or
loopne
xchg
jmp
fsubr
les
add
inc
add
cld
aas
or
or
fdivl
xlat
ss
inc
mov
mov
scas
in
fnclex
lods
xchg
adc
insb
add
in
sbb
pusha
sub
jbe
cld
pop
popf
inc
push
dec
and
lods
mov
fstps
mov
cs
or
xchg
push
jns
stos
les
insl
cmp
push
adc
or
or
sbb
ss
dec
inc
test
mov
mov
jo
mov
mov
dec
cmpb
divl
mov
notl
insl
cltd
repz
pop
lock
or
xor
xor
stc
mov
add
test
pushf
cld
cwtl
int3
pop
dec
sub
lret
sbb
das
mov
rcll
sub
aam
inc
enter
adc
mov
ja
xchg
mov
mov
mov
xchg
sbb
xchg
imul
pop
jle
les
loopne
mov
outsl
mov
std
sbb
sbb
rcrl
pop
or
sbb
jmp
leave
iret
xchg
int
jl
data16
inc
xchg
mov
mov
cs
je
sbb
popa
xor
xchg
push
xlat
out
sbb
insl
movsb
pop
sbb
pop
jmp
pop
testb
cli
popf
cwtl
sbb
mov
scas
daa
mov
adc
or
jl
jne
iret
inc
cmp
jae
clc
lea
inc
jmp
pop
add
push
add
mov
imul
call
mov
daa
add
cs
xchg
hlt
bound
adc
xchg
int
add
sarl
sbb
incb
push
cld
cmp
cmp
iret
imul
mov
jle
pop
and
push
gs
mov
addr16
xor
sub
adc
insl
push
or
or
and
stc
ret
push
adc
xchg
shll
xchg
or
test
in
je
xchg
push
and
xchg
sub
jns
pop
sub
lods
lods
push
rcl
ret
push
push
and
pop
mov
les
aas
xor
xchg
xchg
push
mov
jl
mov
test
daa
dec
in
cs
cld
imul
xchg
push
hlt
push
insl
cli
aad
push
mov
xchg
sbb
shll
imul
xchg
rcl
hlt
shrb
push
daa
cmp
jp
repnz
sub
iret
in
imul
mov
mov
xor
stos
push
or
xchg
in
lock
popa
test
clc
out
bnd
rcl
push
enter
rcrb
or
or
ljmp
cmp
fsubrs
push
ljmp
repnz
jl
mov
fmull
cmc
ss
xchg
in
inc
jmp
cwtl
mov
xor
mov
or
popa
jl
or
mov
rcr
adc
dec
sahf
test
mov
lea
movsb
cmpsb
adc
mov
mov
add
lods
inc
ljmp
sbb
xchg
xor
adc
jbe
sahf
push
in
ret
cmp
mov
fcmovne
leave
jecxz
test
push
sbb
fmul
in
push
push
dec
mov
addr16
sahf
sub
jne
push
aam
mov
adc
leave
int
mov
mov
aas
subb
inc
and
and
movsb
jbe
jle
scas
sub
mov
je
jle
lret
sub
enter
inc
rcll
movsb
and
push
lcall
sti
cltd
or
push
repz
cmpl
and
pop
js
ljmp
push
pushf
mov
in
in
adc
cmpsl
xchg
push
cwtl
hlt
aas
insb
ja
cmp
int
adc
mov
xchg
sarl
or
orl
lcall
test
mov
mov
mov
ds
add
sarl
push
cwtl
push
adc
jno
std
jae
xchg
xor
and
jl
xor
push
mov
ja
pushf
jno
adc
mov
xor
ss
fdivl
mov
cmc
dec
mov
push
pop
and
call
dec
xor
nop
inc
daa
vmread
sahf
in
or
mov
jb
push
push
test
inc
rorb
xchg
lea
cld
mov
aas
inc
push
inc
out
cli
test
xchg
test
test
test
jecxz
leave
push
icebp
lods
push
sub
xchg
mov
push
mov
test
imul
imul
insl
ljmp
in
jo
push
mov
adc
fadd
fs
mov
add
nop
cli
push
xor
and
es
lcall
fidivs
icebp
rclb
inc
js
mov
jo
sbb
ret
fnstenv
daa
mov
jp
xchg
mulb
cs
xor
jle
adc
sahf
add
rclb
mov
shll
jg
adc
mov
pop
mov
jmp
out
xchg
xor
xchg
test
into
jo
lods
out
push
test
inc
dec
add
loop
insb
mov
cmp
hlt
sti
cltd
pop
aam
lock
inc
sti
call
push
xchg
scas
jge
pop
scas
into
pop
lahf
xlat
pusha
sbb
sub
lret
xchg
mov
sti
in
push
cmp
sub
add
push
mov
xchg
mov
add
mov
cli
pop
xor
jg
dec
repnz
shll
or
sbb
arpl
xchg
adc
addr16
int3
mov
mov
in
ljmp
xor
les
pop
xchg
pusha
mov
dec
leave
out
inc
icebp
pop
xchg
cmpsl
test
daa
lods
shlb
mov
pop
xlat
into
adc
pop
sbb
xor
pop
cli
add
addb
aad
cmp
xor
sub
mov
jp
test
aad
es
inc
jge
xor
les
popf
insb
mov
cwtl
test
sub
lcall
sar
pusha
pop
pop
iret
cmpsb
pop
xchg
add
add
jl
inc
mov
inc
ljmp
movsl
cmp
cwtl
push
sub
sarl
xchg
mov
mov
divl
cltd
push
sbb
and
arpl
xchg
mov
and
iret
xchg
out
cmpsb
cmp
jecxz
jno
cmpsb
shrl
mov
dec
lahf
mov
jmp
cld
inc
arpl
sbb
dec
xchg
push
fdivrs
arpl
test
in
add
repnz
pop
pop
push
subb
sub
xchg
mov
mov
xchg
pop
je
sarl
cs
aas
fcomip
jne
arpl
outsl
loop
sbb
js
hlt
es
clc
cs
jg
out
fwait
adc
cltd
pop
shr
outsb
add
add
loop
pop
cltd
daa
push
add
mulb
lcall
das
pop
or
xor
add
or
iret
repz
scas
sahf
mov
fwait
stc
in
push
pop
in
inc
jb
les
clc
repz
mov
push
in
cmp
mov
pushf
mov
mov
test
mov
xchg
mov
push
sarb
out
scas
xor
icebp
push
sahf
push
rorl
xor
sarb
or
popa
push
orb
cs
mov
in
xchg
adc
push
int3
mov
adc
mov
sbb
mov
loopne
cmc
sbb
repnz
xor
test
push
inc
movsb
inc
loop
push
or
pop
hlt
sti
push
repnz
xorl
fnstenv
das
dec
fsts
dec
adc
movsb
aam
xchg
hlt
lret
dec
popf
pop
popa
xor
movsl
cmp
pusha
mov
imul
fwait
cli
adc
out
aas
testl
out
add
and
bound
jg
ja
inc
std
pop
sub
pop
daa
mov
mov
xor
or
test
pop
scas
cmp
aaa
movsl
push
inc
lahf
mov
adc
stc
mov
jp
xchg
mov
rol
repnz
push
adc
add
cmpsl
cmp
and
jb
or
sub
and
cmpb
aad
daa
fwait
and
adc
push
xchg
adcl
mov
movaps
mov
repz
push
out
xlat
cmp
insb
mov
xchg
sub
clc
push
adc
iret
in
inc
jnp
jge
inc
jo
lea
das
dec
sub
lods
imul
ss
push
ret
dec
je
ret
stc
xchg
lock
hlt
jge
mov
cmpsl
cs
dec
mov
repnz
add
cltd
or
cmp
dec
jbe
cmp
sbb
test
or
scas
ds
sub
jecxz
push
aaa
mov
cli
sbb
sarl
jns
loopne
xor
push
mov
and
lcall
iret
dec
dec
mov
enter
in
dec
sub
jmp
push
ljmp
and
shl
or
mov
lahf
imul
xchg
dec
push
dec
loope
push
and
loop
mov
fstpt
fidivrs
adc
push
push
dec
inc
jp
jnp
fistps
aas
ljmp
dec
leave
dec
out
inc
stos
adc
sub
out
pop
pop
fbld
add
test
xchg
stos
aam
pop
push
push
jmp
jo
rcll
add
xchg
cmp
or
pop
jecxz
or
call
xor
pop
ljmp
lcall
push
enter
mov
xor
aaa
cld
cmc
out
loope
inc
pop
sbb
test
call
lock
test
xor
cmp
pop
lods
push
leave
dec
jl
fidivrs
cmp
scas
sti
movsb
xchg
jp
lret
push
imul
push
ret
add
pusha
pop
lret
mov
into
mov
scas
dec
sti
int3
je
xchg
push
push
in
push
aad
mov
push
xor
xor
lock
jecxz
adc
sbb
ret
and
lret
adc
bound
sti
cltd
lret
mov
sub
movsb
or
pop
scas
movsb
aad
xlat
push
mov
aam
pop
dec
sbb
dec
mov
negb
mov
popf
leave
jecxz
pop
mov
cwtl
iret
adc
add
jmp
in
jno
les
testl
mov
or
and
mov
or
dec
jecxz
insb
movsl
ljmp
jecxz
lock
cltd
xor
xchg
pop
inc
testb
setb
pop
push
xchg
cli
inc
enter
stos
jno
clc
cs
mov
movsb
sbb
add
fiadds
sbb
adc
mov
popl
aad
aad
lahf
mov
mov
jnp
xchg
clc
ja
mov
push
add
cwtl
popa
stc
jg
lock
jne
sbb
cld
lods
imul
repz
jle
xchg
in
cld
int3
mov
mov
inc
dec
insl
and
in
test
sub
inc
mov
jl
fwait
data16
mov
mov
stc
and
vpsrld
imul
or
push
or
les
subl
fiaddl
or
out
mov
outsb
inc
sub
adc
jb
xchg
mov
mov
sbbl
test
jae
lds
dec
xor
sbb
jp
aas
scas
paddusw
pusha
mov
arpl
dec
push
mov
inc
mulb
pop
leave
inc
shr
push
mov
stos
arpl
dec
and
jmp
push
or
adc
xchg
jl
xchg
or
scas
fcompl
int
hlt
pop
mov
insb
add
adc
add
push
ds
pop
push
or
push
pop
lock
fwait
push
test
jmp
mov
inc
inc
pop
mov
cmc
push
cli
gs
sarb
aas
rcll
jbe
loope
sub
lret
sbbb
push
in
dec
arpl
push
bound
dec
arpl
pop
in
sbb
sub
roll
cmovle
pop
in
rcr
xchg
inc
bound
xchg
push
in
jo
lods
jmp
jns
int
aad
jo
fsts
push
pop
add
or
adcl
les
outsb
mov
cld
decb
pop
xor
shrl
sub
enter
mov
jg
jle
mov
fstl
int
test
fmull
adc
int3
push
popf
test
dec
es
call
pop
je
in
in
aas
pop
lods
xchg
push
mov
outsb
std
cltd
pop
cld
lret
loope
mov
inc
mov
mov
lahf
cmp
cmp
popf
in
call
xor
adc
cmp
ret
scas
or
pop
push
xchg
and
in
stos
inc
pop
mov
sbb
rcrl
add
leave
sub
sub
lea
bound
pushw
jmp
jnp
inc
in
push
outsl
ja
in
mov
mov
cli
ja
ret
fldl
fcom
sub
lret
movsb
sub
jno
dec
cmovp
addr16
add
cmp
jo
add
es
push
push
push
bound
adc
cs
xor
adc
xchg
xchg
ret
xchg
lods
sar
mov
push
ret
and
xor
push
adc
jg
mov
lret
xor
sbb
pop
mov
ss
lds
xchg
dec
and
jo
data16
push
lret
lea
add
cmp
lahf
aam
loopne
dec
xchg
nop
mov
push
loop
mov
in
inc
cli
shll
mov
add
mov
in
push
xorb
and
insb
fwait
test
test
mov
adc
push
jp
push
lret
jmp
sbb
lret
sahf
mov
cld
adc
idiv
cli
mov
pusha
fwait
adc
mov
inc
aad
les
cmp
adc
pusha
xchg
jmp
mov
sbb
iret
and
xchg
rcr
addr16
insb
out
cltd
shll
ret
fdivrp
pop
cmpsb
push
out
cmpsl
fwait
in
xchg
fsubs
repz
daa
jp
dec
dec
push
and
cld
mov
push
or
insb
mov
or
out
cmp
mov
push
xor
mov
fs
push
cmp
lret
aam
flds
cmpsl
stc
xor
and
inc
movsl
stc
mov
into
int
sbb
shll
cmpsb
xchg
mov
arpl
dec
leave
popa
sti
pop
sti
jge
sarb
jbe
jae
pop
mov
mov
mov
pop
mov
sub
mov
or
lcall
and
and
pop
and
and
ljmp
lahf
xchg
gs
push
push
sbb
stos
jg
sub
cmc
lds
leave
cmpsb
jae
imul
outsl
in
lods
shrb
lret
mov
ret
lahf
call
popf
mov
js
lret
imul
cmp
pop
mov
jb
adcl
dec
and
and
xlat
movsb
jo
scas
ja
jnp
push
mov
dec
dec
jne
cmpl
jge
out
sbb
rcll
inc
ljmp
fisubrs
cmpsl
loope
push
daa
mov
mov
pushf
sti
adc
sbb
jp
mov
and
lock
iret
pop
adc
jnp
cli
xor
sub
pop
adc
mov
testl
testl
xor
addb
js
cmc
push
pusha
popf
fistps
movsl
mov
out
outsl
gs
and
pop
ror
repz
pop
mov
sbb
mov
fnstsw
xlat
pop
mov
dec
mov
mov
or
rorl
jg
adc
in
jmp
call
mov
ja
outsl
idivl
dec
and
cmpsb
rcll
mov
pop
sbbb
gs
dec
adc
cmpsb
arpl
insb
and
mov
jo
jmp
jne
lods
push
shll
data16
sub
adc
cmpsb
out
pop
push
push
dec
mov
xchg
jp
and
out
mov
ret
cmc
mov
leave
mov
aad
lods
arpl
pushf
xchg
xlat
sarb
sbb
mov
call
sub
xchg
cmp
push
repnz
adc
jle
ljmp
mov
pop
loop
xor
xchg
outsb
iret
scas
std
pop
popf
jb
icebp
mov
test
stos
call
int3
std
jl
xchg
add
cld
lods
pop
jecxz
jb
cmp
scas
mov
ficoml
xor
and
in
xchg
xor
imul
and
xchg
add
enter
in
mov
sub
and
mov
mov
inc
xor
shlb
mov
inc
aad
or
data16
subb
and
mov
js
aas
push
push
aas
rclb
pusha
nop
push
push
loop
push
ljmp
mov
sub
fcomps
inc
lret
in
jmp
push
inc
cmp
je
sub
mov
imul
popa
insb
fisttpl
fists
ror
daa
mov
ret
shrb
cwtl
pushf
rol
or
sub
dec
cmpb
decb
xor
std
jecxz
in
push
popa
daa
shll
jbe
dec
mov
adcl
nop
lock
imull
xor
pop
pop
loope
xchg
movl
add
test
sub
xchg
hlt
cltd
add
jl
in
lods
int
mov
jnp
ja
push
cmp
lods
das
call
push
xlat
into
mov
aas
adc
sbb
loope
or
ds
xchg
addr16
push
daa
jo
inc
movsb
inc
sbb
lea
imul
jge
pop
pop
add
adc
sub
mov
or
xor
in
fimull
jmp
xor
outsb
mov
adc
sbb
inc
lock
and
mov
bound
fstpl
inc
inc
les
pop
dec
shrb
dec
cmpsl
in
or
in
aad
aaa
cmp
or
push
mov
sbb
xchg
lcall
sub
add
insl
jl
into
stos
dec
ss
and
mov
aas
jg
hlt
orb
and
pop
mov
inc
test
and
insb
mov
outsb
and
push
addl
imul
mov
fwait
popf
mov
je
or
call
stc
ljmp
xor
adc
mov
cmp
push
in
adcl
lret
in
inc
cmpsb
and
inc
scas
leave
inc
pop
or
inc
testl
dec
jle
sub
dec
pop
shlb
xchg
insl
or
sub
xor
jne
push
lret
mov
push
mov
mov
fcomip
stos
or
lea
dec
sub
push
xadd
add
mov
mov
sbb
cmpsl
jno
adc
or
fwait
pop
push
mov
popa
aam
pop
add
lea
cld
sub
shll
imul
mov
sbb
add
and
xor
mov
add
sbb
lds
or
cmp
push
jns
repz
cs
dec
pop
insl
shlb
and
xor
mov
dec
xchg
jle
ret
mov
stos
mov
pop
fadd
push
push
int3
mov
cwtl
inc
jb
cmp
iret
pop
or
test
inc
mov
movsb
lret
cmp
repz
pusha
popf
mov
pop
mov
lods
ret
hlt
dec
scas
test
and
pop
jecxz
inc
mov
in
push
pusha
cwtl
jmp
cmpb
mov
lahf
pop
mov
lock
mov
pushf
in
test
movsb
call
jle
jg
cs
pop
fsubr
xchg
pop
xor
or
outsb
data16
movsl
cs
fbld
push
int3
pushl
cmp
repnz
sub
jmp
inc
push
hlt
icebp
mov
imul
push
and
stos
dec
dec
scas
sub
stos
arpl
out
sbb
cmp
test
xchg
inc
or
lock
lds
lds
xchg
pop
into
mov
or
dec
ss
pop
sbb
stos
leave
sbb
mov
enter
sbb
outsl
leave
xchg
test
divb
mov
adc
movsb
cwtl
xchg
pop
arpl
mov
in
adc
xor
rcrb
and
pusha
into
pusha
adc
cmp
and
cmpsl
out
jle
xor
add
aas
mov
dec
rcl
rep
popf
iret
sub
pop
aas
mov
cli
popa
sub
xor
push
iret
mov
adcb
aad
popf
fmuls
mov
fldt
jo
cmp
xchg
sbb
lahf
lods
leave
jle
sti
icebp
dec
ret
jmp
int3
cld
xchg
mov
in
stos
pop
push
push
sahf
dec
pop
lds
cmc
mov
fiaddl
in
sbb
stos
adc
cmc
pushl
or
repz
gs
jp
inc
jecxz
push
lcall
inc
and
sub
nop
cld
push
or
out
sahf
dec
push
mov
lods
out
je
and
ja
jl
jmp
inc
xchg
mov
mov
scas
xchg
dec
push
pop
cwtl
das
cmpsl
aaa
mov
jecxz
orb
into
push
dec
outsl
fistpl
fstl
ret
test
repnz
idivb
push
rep
xlat
aaa
xor
sbb
jl
dec
stc
mov
jno
js
sbb
jo
dec
movsl
inc
inc
pop
jp
inc
cltd
cwtl
cli
pop
js
aam
sbb
test
sub
icebp
int
push
and
andb
and
mov
out
repnz
stos
and
icebp
cmpsl
ret
rolb
and
sbb
in
mov
mov
mov
mov
jl
jnp
in
mov
loopne
sbb
xor
sti
xchg
inc
push
cli
lods
mov
mov
adc
mov
xchg
mov
out
jecxz
andl
jmp
push
imul
xor
aam
test
jo
xchg
nopl
shr
aas
popa
mov
and
gs
xchg
jo
xor
push
loopne
repz
push
lods
icebp
jge
repnz
push
pop
rorb
push
or
inc
scas
aam
fwait
scas
cmp
pop
push
pop
stos
xchg
das
mov
pop
out
nop
adc
mov
dec
stc
div
subb
movntps
pushf
mov
pop
cmpsb
sbb
das
cmpsl
pop
push
adc
in
mov
shll
bound
jl
push
jl
push
jecxz
cmp
ret
sarb
notb
fldl
lds
jno
cmpsl
dec
into
div
mov
ficomps
iret
out
xchg
push
int3
daa
cmpsb
les
push
push
inc
repz
dec
or
pushf
push
sub
arpl
sub
sbb
ret
scas
lea
add
arpl
xchg
sbb
xor
mov
xchg
loop
mov
mov
push
push
popf
shll
mov
cmp
bound
loop
dec
xchg
sti
cmpsl
pop
loope
aad
pop
insb
cmp
push
pushf
ss
out
lcall
adc
xchg
es
gs
loop
mov
test
jnp
pop
push
and
xor
dec
or
dec
and
jb
sub
cltd
jmp
cmpsl
mov
push
mov
push
jle
or
ret
add
mov
inc
movsb
xchg
inc
out
imul
pop
loop
cmp
push
scas
iret
lock
inc
sti
jae
jmp
lods
in
or
cmp
mov
push
lds
outsb
cmp
out
popa
stos
cmp
dec
jge
loopne
ss
pop
jb
pop
lea
aad
sti
popa
push
pop
mov
aaa
ljmp
push
mov
aad
sub
rcl
mov
xchg
jmp
sbb
jmp
mov
dec
mov
mov
shr
add
repnz
sub
addr16
adc
stc
jne
outsl
push
dec
insl
fcoml
xor
shl
lds
loope
out
jp
stc
daa
aaa
ds
pop
scas
pop
sar
in
mov
std
cmp
clc
clc
inc
jg
jae
ret
addb
lcall
idiv
pop
notl
or
out
je
test
adc
inc
imul
cmp
out
jecxz
sbbl
and
jp
mov
fistpl
stos
mov
push
clc
mov
into
jbe
fnsave
push
fwait
push
xchg
push
mov
xchg
jge
fisubs
int3
movsl
mov
test
ror
popa
ss
in
mov
repnz
pusha
daa
mov
jl
and
sub
ds
sbb
lahf
pop
testb
mov
outsb
negl
mov
test
push
test
xchg
ficoml
cmp
jns
mov
mov
std
cmc
inc
adc
pop
and
fsubs
mov
ret
xchg
in
sbb
out
mov
and
jbe,pt
rolb
adc
dec
xchg
aas
insl
rclb
shrb
xor
cmpsb
jo
push
sbb
in
int3
jno
fildll
movsb
push
unpckhps
loopne
scas
clc
xor
nop
scas
mov
mov
xor
in
lcall
out
fidivs
sbb
rcrl
jb
mov
in
mov
shrl
add
xor
sub
xrelease
adc
push
popf
jbe
cltd
out
roll
mov
jg
repz
pop
cmp
cmp
push
sbb
nop
add
sbb
notl
stos
mov
pop
inc
das
sub
ljmp
mov
and
daa
aas
pop
jmp
enter
push
xchg
xchg
fcoml
ret
mov
dec
fildll
ja
cmp
mov
scas
shrb
dec
in
and
jl
add
mov
scas
mov
js
jb
xor
into
fwait
pop
testb
cli
popf
add
mov
adc
bound
dec
sahf
out
cld
lods
movsl
ffree
mov
inc
push
and
pushf
bound
mov
or
push
adc
cmpsb
jae
addr16
or
or
sbb
cli
push
adc
push
dec
push
sbb
mov
fnstenv
cwtl
dec
adc
sub
pushf
mov
cwtl
push
adc
or
jae
scas
fnstenv
popa
dec
sbb
fdivrl
lock
mov
mov
rcrl
dec
out
inc
lods
ljmp
outsb
incl
pusha
xchg
sub
jae
mov
jo
adc
cltd
xchg
lahf
pushf
sbb
mov
sub
sbb
mov
out
pop
addl
div
jnp
cmp
mov
lods
jno
cmp
push
dec
je
xor
inc
mov
hlt
fistpll
lods
ljmp
mov
rcrb
mov
fidivl
inc
xchg
adc
adc
fidivrs
jl
inc
out
fwait
sub
enter
sbb
cmp
mov
lods
pusha
mov
popa
mov
push
cmpsb
fisubs
jl
lret
repz
sbb
lods
outsb
lahf
sbb
mov
push
xor
cmp
and
xchg
pusha
loop
rcll
fistpl
mov
dec
mov
adc
push
in
sahf
mov
sti
xchg
and
sub
mov
in
xor
inc
addr16
inc
rorl
jg
xchg
loopne
inc
cmc
aam
daa
pop
jo
dec
les
lret
scas
scas
ret
ret
mov
scas
leave
sarb
dec
sub
xor
pop
xchg
mov
inc
xlat
mov
xchg
pop
or
ds
es
test
sub
adc
mov
fsub
inc
gs
jge
jbe
cld
inc
xchg
xchg
cli
pop
lock
pop
pusha
pop
mov
jnp
adc
mov
negb
fcomip
xlat
jns
push
mov
add
daa
mov
fs
dec
push
in
aam
pop
xor
jg
push
popf
ficompl
pop
dec
mov
push
pop
jecxz
repnz
ja
mov
xchg
pop
clc
inc
jns
sub
add
dec
add
sti
mov
cmp
lods
in
dec
test
loop
cld
mov
pop
inc
repnz
or
xor
xchg
add
cmp
aam
repnz
daa
neg
ljmp
pop
cmp
adc
pop
sub
and
xchg
push
lret
aad
mov
ss
into
std
mov
fs
pop
lds
push
daa
jae
sbb
fcomi
xchg
xchg
lahf
pop
daa
je
out
ret
test
xlat
leave
sub
inc
insl
jnp
mov
jmp
mov
lods
push
mov
jne
iret
mov
xchg
inc
leave
outsb
stc
dec
inc
mov
jb
aas
pusha
and
insb
mov
hlt
add
mov
jg
inc
xchg
pop
sbb
jo
sbb
and
test
inc
dec
mov
std
sbb
dec
arpl
fsub
push
fstpl
lods
loope
xor
lds
movsb
dec
cmp
pop
dec
push
int
jno
out
lcall
inc
mov
shr
or
dec
add
pop
movsb
ss
mov
mov
nop
adc
inc
fcomps
jmp
mov
pop
jno
in
in
js
xchg
std
outsl
dec
cltd
dec
cmp
dec
dec
popa
in
aas
push
scas
adc
das
fistl
out
shr
int3
pushf
in
push
jbe
push
test
stc
scas
adcl
cmp
in
jns
mov
inc
jmp
scas
stc
sahf
nop
out
outsl
add
sub
xchg
mov
movsb
mov
cmpsb
fbstp
stos
nop
dec
outsb
inc
adc
inc
ss
push
xchg
xor
aas
mov
sub
nop
adc
or
push
repnz
les
push
ja
xchg
jl
adc
icebp
cltd
jle
sub
js
fs
cmp
in
jne
sbbb
jecxz
pop
movb
in
mov
das
sbbb
rcrb
andl
hlt
push
repz
xchg
mov
ficoml
lcall
push
stos
imul
outsb
sahf
out
out
mov
daa
aam
xchg
or
jne
xor
fildl
or
pop
sbb
and
aas
in
jbe
jbe
sbb
test
and
cmpsb
cmpsl
aaa
push
adc
leave
or
iret
inc
mov
push
push
mov
push
dec
lods
pushf
les
mov
sbb
mov
mov
in
lret
adc
enter
xchg
sub
rcrl
out
rcr
sbb
inc
dec
push
repnz
ja
inc
pop
add
mov
movsl
xbegin
pop
jp
outsl
sti
test
inc
cld
and
mov
mov
mov
dec
insb
repz
xor
adc
cltd
jno,pn
push
add
cmp
ljmp
xor
mov
out
adc
add
jle
in
jno
test
fists
xchg
jecxz
sahf
push
fcmovnbe
mov
cmp
xchg
mov
in
es
outsb
loop
loopne
dec
xor
sarb
ret
sub
mov
lock
leave
rcr
out
scas
cmp
pop
or
xchg
and
imul
push
and
mov
pop
scas
ljmp
jnp
cmp
fwait
mov
movsl
aad
pop
inc
add
std
roll
out
addr16
aam
out
pop
and
push
xor
cli
rcrl
or
mov
roll
xchg
inc
mov
push
mov
addl
push
jno
mov
pop
icebp
lock
jae
scas
sbb
mov
pop
pushf
push
cmp
cmp
fdivl
cli
push
dec
jb
rcll
jecxz
push
inc
xchg
scas
pushf
data16
sbb
ficompl
ljmp
and
or
insl
adc
inc
mov
mov
out
jg
insl
test
aad
das
sbb
movsl
ss
jmp
in
cmp
insl
jg
cld
fsave
xchg
mov
subl
fs
inc
and
dec
push
adc
out
cwtl
int3
xor
lret
jo
or
or
cmp
enter
lods
aad
daa
lahf
arpl
pop
js
jmp
rolb
push
cmpsl
test
ret
outsb
sti
aaa
lods
xchg
bound
pop
cmp
add
sbb
mov
leave
ja
rorb
stos
dec
jecxz
push
push
push
inc
call
test
je
push
ret
and
jmp
shlb
or
cmp
push
inc
js
pop
mov
scas
sbb
adc
jae
adc
daa
add
in
jge
inc
imul
sbb
cmpsb
out
mov
or
shlb
es
call
insl
es
push
jmp
jle
or
movsl
push
stos
mov
xchg
jno
pop
pop
mov
mov
mov
daa
imul
dec
dec
jnp
or
dec
push
and
sbb
sbb
loop
daa
adc
fsubl
test
stos
inc
pop
std
mov
out
push
mov
add
fbld
and
jmp
imull
push
scas
imul
push
loope
repnz
inc
stos
gs
imul
pop
cld
mov
test
and
mov
jmp
fstp
inc
pop
add
push
call
lahf
push
imulb
pop
mov
mov
cmp
in
adc
aas
mov
notb
sub
xlat
push
adc
loopne
loop
inc
std
cwtl
fsubrs
mov
insl
sbb
mov
add
sbb
mov
jmp
xchg
add
cld
mov
adc
roll
jg
scas
pop
movsl
and
xchg
je
popf
mov
mov
and
sbb
in
or
daa
movsb
push
mov
pushf
mov
je
test
addb
mov
movsl
stos
test
jp
jb
inc
dec
sub
lock
stos
inc
hlt
jnp
xor
mov
sti
int3
cmpsl
push
sbb
iret
push
out
adc
and
fdivr
std
in
adc
loop
shrl
popa
push
fstl
jl
ljmp
mov
call
inc
in
pusha
xor
subl
mov
shl
dec
cld
lds
mov
ret
aaa
push
push
dec
repnz
adc
aas
xor
out
sub
lock
aam
and
lsl
das
fnstenv
inc
sbb
lea
mov
push
push
gs
jecxz
das
dec
ja
ljmpw
push
xchg
test
push
fs
sub
js
inc
xchg
iret
xorl
daa
insl
rep
xor
adc
mov
jnp
into
cmpb
inc
dec
movsb
fldenv
inc
push
xchg
mov
test
int
and
mov
lock
movsb
push
leave
jnp
xor
in
test
jle
ret
and
in
jnp
add
xlat
push
sub
enter
imul
xchg
xchg
repnz
shl
mov
loope
add
clc
cmp
in
lcall
or
in
dec
jp
imul
testb
addr16
add
scas
das
dec
cmpsl
jge
lods
xor
insl
sub
fisubrs
dec
test
mov
push
into
jp
sub
and
mov
xor
in
push
sub
cmc
add
testb
inc
aas
dec
dec
xor
cs
pop
in
ds
xor
pop
dec
cmpsl
mov
xlat
xor
push
adc
add
mov
mov
cmp
and
fsubrl
cltd
insb
cmp
jo
lret
rol
je
xor
sti
xor
push
test
cmp
test
push
mov
fsubrs
jb
mov
mov
or
shl
and
xor
jg
pop
shll
dec
dec
mov
pop
out
out
lock
jbe
iret
jl
adc
dec
mov
js
stc
outsb
orb
mov
xorl
push
or
mov
es
mov
pop
jg
adc
and
or
call
dec
in
outsl
adc
loopne
fnsave
mov
jne
lods
dec
sub
clc
or
movsl
cmp
in
xchg
add
adc
inc
movsb
pop
add
ss
jg
and
inc
xchg
test
and
sbb
mov
or
xchg
int3
mov
minps
out
dec
inc
fptan
stc
fs
imul
subb
sbb
lods
lahf
popf
scas
roll
dec
ret
insb
loope
sub
popf
call
into
scas
mov
adc
ffree
jb
aas
push
inc
lea
pusha
loope
mov
jne
push
pop
int
lahf
nop
lods
pop
mov
aad
jg
mov
dec
inc
mov
ljmp
push
and
sbb
cmp
or
jp
cmovnp
sub
cmpsb
gs
movsb
roll
xchg
pusha
cmp
inc
mov
mov
out
lret
cmpl
xor
adc
mov
adc
jmp
daa
leave
mov
inc
flds
inc
inc
xchg
cs
push
and
cmp
cltd
sbb
cwtl
cmpsl
fcomip
dec
jo
loopne
out
mov
or
pop
cld
jo
sub
outsb
in
in
push
test
fstpt
lea
das
iret
mov
sub
mov
rcrb
subb
lahf
jg
xchg
adc
sub
cmc
dec
sbb
aaa
xor
mov
mov
lock
pop
leave
jns
mov
ljmp
aam
fstpl
daa
xor
daa
mov
iret
inc
std
cmp
dec
adc
mov
xor
mov
sti
ret
ljmp
add
movsb
iret
sub
sbbb
jno
rol
out
jp
adc
cs
push
push
pop
aas
pop
iret
or
xchg
and
clc
fstpl
mov
xchg
mov
inc
mov
sbb
cs
mov
xchg
mov
cmp
pop
hlt
jl
outsl
sub
adc
jp
stc
ffreep
imul
xchg
sbb
insl
mov
xchg
out
cwtl
cmp
in
lods
hlt
das
xor
movsb
xchg
mov
stos
sbb
es
pop
xlat
xor
lds
add
inc
cmc
scas
pop
sbb
mov
jns
xor
aad
in
jns
jp
mov
push
sbb
push
and
jle
lods
shrl
inc
lahf
mov
sub
pop
je
pop
enter
sub
fcomip
or
add
xchg
jnp
sbb
in
test
mov
inc
dec
imul
cmp
fcompl
popa
pusha
dec
xor
in
xrelease
js
xchg
dec
imul
xabort
jl
imul
fisubrl
lret
or
push
gs
or
fld
and
lahf
mov
rolb
cmpsl
or
cmp
gs
lods
rclb
testb
out
insl
inc
imul
mov
mov
rclb
fisubrl
pop
mov
scas
mov
sbb
jp
cmpsb
and
sub
jmp
sbb
int
add
add
enter
cs
fdiv
jge
sbb
inc
mov
push
cmp
jns
adc
inc
pop
mov
syscall
icebp
push
sbb
in
ljmp
adc
cmp
in
cmpsl
sti
enter
mov
loop
or
out
push
icebp
push
lcall
mov
ljmp
andb
es
rcll
pushf
jbe
clc
and
fwait
andb
push
nop
fs
lock
mov
pop
int3
lods
aaa
pop
xchg
mov
sub
clc
and
mov
sub
hlt
mov
lahf
call
mov
test
cmp
adc
test
hlt
jg
das
repz
test
out
adc
inc
jmp
jae
dec
or
inc
or
xor
xchg
daa
inc
pop
add
repz
cmp
and
aam
ja
imulb
sub
and
sub
loopne
mov
stos
or
repz
sbb
shrb
mov
mov
and
push
xchg
xlat
int3
rcll
dec
mov
repz
lea
cmpsb
inc
das
mov
push
lods
in
dec
inc
test
faddp
xor
cmp
sbb
orl
add
ds
jg
testb
dec
push
inc
popf
jns
add
cmp
cmp
nop
addb
adc
jle
int3
dec
mov
xchg
and
scas
dec
jle
fidivrl
shll
inc
mov
jge
outsl
add
cmp
loope
aam
gs
mov
call
aam
pop
add
ror
cmp
adc
roll
into
add
clc
movsb
or
dec
inc
imul
jno
jbe
push
or
outsl
sbb
inc
sti
sub
push
addr16
adc
dec
mov
mov
jp
adc
mov
insl
popa
fwait
leave
aas
and
or
cmpsl
fldl2t
lret
das
xor
inc
push
or
cmp
mov
iret
ja
adc
add
test
aad
test
ret
or
imul
push
xor
sub
mov
push
test
in
add
sbb
in
fidivs
and
add
xchg
mov
mov
pop
and
cmc
ret
cmpsl
xchg
pop
push
pop
add
call
jno
iret
cmpsb
xchg
hlt
ds
adc
stos
je
pop
mov
hlt
mov
icebp
push
das
dec
push
sbbl
aam
push
fsubs
out
jmp
iret
roll
inc
push
in
roll
dec
adc
add
mov
fdiv
mov
xor
push
pop
in
add
cs
xor
inc
mov
mov
aam
xlat
or
sbb
or
ja
pop
cld
aas
add
dec
mov
movsl
inc
dec
add
jg
insl
scas
jb
lock
mov
cmpsl
mov
out
add
hlt
jo
dec
mov
int
adc
lock
push
jns
ljmp
mov
sub
mov
ror
js
mov
fs
xor
dec
mov
out
mov
imul
push
or
int3
sub
push
stos
xchg
push
leave
out
and
xor
push
inc
xorl
fldenv
mov
daa
cs
mov
add
add
movsl
xor
and
dec
sbb
rcrl
mov
cmpsb
push
mov
dec
lret
or
push
rcl
rorb
movsl
push
jb
mov
insb
jb
aaa
jo
mov
incb
loope
rclb
loope
push
mov
mov
mov
nop
and
mov
popa
mov
dec
rorl
std
std
fs
jle
or
lahf
xchg
xchg
mov
out
inc
mov
mov
in
test
hlt
jp
scas
ja
fdivrl
mov
push
dec
cld
arpl
bound
fstpt
mov
and
roll
dec
pop
imul
stos
dec
cmp
popa
or
push
cmp
xor
jb
mov
das
loopne
push
pushf
negl
sahf
sti
negb
movsl
cmc
pop
mov
test
cwtl
mov
xor
mov
shll
xor
popa
sbbl
cmp
data16
xchg
ficoms
enter
shlb
mov
cmp
pop
xchg
mov
jbe
mov
adc
mov
xor
arpl
xor
jns
and
mov
xchg
lret
out
or
push
fmull
mov
and
adc
out
sbb
lds
mov
pop
xor
sub
push
cltd
sahf
icebp
ljmp
stc
add
sbb
push
push
xor
fdivrs
pop
ret
ss
push
test
xor
movsl
push
cs
test
xor
fs
into
adc
sarl
xchg
stos
mov
loope
jno
xorl
xchg
pop
push
lods
out
sub
xchg
dec
jp
jmp
hlt
jo
popf
push
pop
in
mov
ss
shlb
mov
cld
imul
lea
xor
fsubrs
mov
mov
inc
cs
es
fadds
mov
stos
pop
das
jle
sub
jb
push
sti
add
cmpsl
inc
jg
sub
leave
xchg
icebp
mov
les
scas
mov
add
xor
pop
xchg
repnz
inc
lods
adc
sub
nop
fsubrl
push
stos
add
aad
inc
adc
into
dec
adc
push
inc
loopne
call
mov
mul
in
inc
push
mov
addl
sbb
cli
clc
lahf
std
cmp
jmp
xchg
mov
nop
lret
inc
mov
pusha
cmc
push
stos
dec
imul
lds
xor
cld
nop
push
xchg
mov
and
or
mov
movsb
or
test
pop
sbb
fs
add
repz
fimull
add
pop
adc
jge
std
fdivs
pop
lea
popa
ja
daa
call
push
pusha
xchg
leave
and
xor
push
or
add
pop
lcall
insl
adc
xor
imull
xor
sub
std
xor
jae
paddusw
sar
pop
arpl
pop
xor
push
ds
data16
inc
push
pop
mov
push
mov
popa
fwait
add
or
dec
jge
cmp
cmpsl
cli
jbe
adc
mov
sbb
sbb
pop
lcall
shlb
idivl
pop
and
lea
pop
jge
insb
out
add
and
outsb
sub
adc
adc
xor
jle
daa
add
ret
jge
mov
inc
adcb
jge
rol
mov
notb
inc
push
lret
cmc
mov
adc
insl
inc
lea
sub
adc
mov
dec
ja
mov
dec
cmc
jo
jae
fsubp
iret
lock
xchg
popa
cmc
adc
mov
ret
into
push
push
pop
and
lcall
dec
fimuls
repnz
add
das
mov
xor
arpl
cwtl
push
cli
jg
xor
popa
mov
das
push
or
ljmp
bound
dec
adc
pop
pop
and
movsl
or
cli
sub
sbb
inc
sti
lcall
cmp
idiv
jo
cmpsl
mov
cmpb
sub
pop
mov
insb
add
cmpsb
repnz
add
sub
push
inc
test
jg
test
mov
sbb
pop
cwtl
push
loope
push
sub
inc
xchg
ljmp
lds
cmp
orb
jnp
cwtl
jo
adc
inc
jnp
push
adc
mov
and
aaa
sbb
subl
sub
adc
sarb
pop
adc
cmp
inc
xchg
xor
mov
movsl
loop
mov
sbb
jb
test
mov
scas
mov
adc
pop
pushf
insl
cmpsl
hlt
and
jbe
cwtl
sub
scas
adc
movsb
aad
test
insb
enter
and
data16
cltd
out
daa
nop
sbb
sbb
xchg
test
stos
js
adc
mov
popa
cmp
add
sbb
sahf
loopne
cltd
dec
xlat
and
jge
xor
xor
mov
clc
lret
mov
pusha
loop
push
out
fwait
jmp
sbb
mov
dec
inc
out
stos
mov
mov
in
sbb
cmp
insb
iret
pop
lods
push
jne
cmpsl
insl
jg
ljmp
sub
rcll
pop
andb
and
cltd
ret
or
cwtl
mov
call
push
insl
ljmp
imul
push
dec
mov
and
dec
sahf
out
or
data16
dec
mov
dec
mov
pushf
cwtl
xchg
cltd
notb
fisubl
pop
xor
loopne
sbbl
mov
ror
sarl
pop
ja
pop
sbb
cmc
cwtl
or
scas
mov
cmp
sti
icebp
out
into
pop
das
adc
pop
shrb
push
pusha
sbb
cli
jmp
sub
dec
cwtl
inc
push
mov
aam
bound
out
das
xchg
rorb
mov
sbb
sub
adc
push
or
or
mov
enter
mov
scas
push
inc
mov
jmp
rolb
les
icebp
fisttpl
dec
sub
aaa
xor
cli
fs
test
mov
xchg
xor
dec
mov
arpl
pushf
adc
lock
jb
jmp
test
icebp
pusha
xchg
jo
inc
add
dec
fisttpl
out
inc
inc
sti
or
not
and
sbb
xchg
push
sbb
jle
lahf
add
lahf
sub
insb
aam
out
shll
mov
call
ja
shr
enter
jae
sub
or
sub
mov
fimull
ret
aas
mov
lods
mulps
xchg
jmp
jg
push
mov
imul
xor
sti
xchg
insl
dec
jns
pop
fidivs
lahf
lcall
cli
adc
pop
xchg
fsubrp
outsb
or
les
leave
shl
hlt
fmuls
inc
iret
int3
mov
movl
repnz
xchg
lock
inc
repz
push
in
push
lret
pop
movsl
fidivs
sub
out
mov
in
adc
add
xor
pop
int
call
inc
cld
mov
shrl
inc
or
mov
add
pop
div
push
add
jmp
mov
repnz
addr16
xor
mov
cmpsb
cmp
cmp
mov
mov
push
pop
movsl
or
cmp
cmp
or
pop
out
or
aad
add
gs
sub
and
dec
and
sub
sub
fmuls
rcrb
and
lret
mov
and
dec
xchg
push
mov
cli
addr16
cmpsl
push
mov
push
fisubrl
fdivrl
daa
dec
dec
jmp
out
dec
lcall
dec
fmul
loope
cmp
mov
aad
gs
iret
gs
or
movsl
mov
pop
shlb
jno
or
popa
sbb
stc
adc
push
mov
mov
out
lods
imul
inc
lods
inc
push
stos
push
push
jae
pushf
leave
xor
ds
sbb
and
imul
mov
lods
aam
mov
or
xor
cmpsl
mov
xchg
out
nop
pop
pop
test
jecxz
xchg
or
repnz
aad
jp
ds
testl
ds
aas
enter
sbb
fs
fiaddl
out
outsl
clc
xor
repnz
bound
dec
add
nop
rcl
inc
leave
and
xor
mov
xchg
dec
aas
xlat
enter
mov
inc
pop
jle
pop
popf
test
rol
sub
add
inc
bnd
mov
add
push
popf
vmovaps
stos
inc
int3
int3
or
mov
mov
jb
ret
cmp
dec
sbb
in
out
xor
pushf
test
insb
sbb
scas
popa
adc
movsl
jne
ret
sub
pop
sbb
int
or
movsl
inc
mov
push
lods
dec
enter
inc
lods
cld
jb
sub
lock
nop
int
xchg
loopne
xchg
mov
jle
push
js
dec
insb
ret
and
push
xor
xchg
or
mov
adc
in
jmp
shll
sbb
clc
jno
mov
add
sahf
movsl
mov
pop
call
sub
das
scas
cs
call
jnp
pop
jne
mov
jbe
stos
rclb
cld
cs
bound
push
mov
xor
jecxz
xchg
pop
loope
les
jle
xlat
lea
clc
push
sbb
das
filds
or
imul
xchg
popa
xor
sub
fnsave
or
aad
jecxz
lcall
push
push
inc
jl
adc
into
xlat
test
lret
jo
mov
push
dec
push
rcl
dec
push
popl
xchg
and
pop
aad
in
test
pop
jnp
add
pop
stos
sbb
mov
decl
cmp
pop
pop
mov
jns
and
mov
adc
shll
icebp
fildll
cwtl
enter
out
cmp
mov
cmp
sbb
test
stos
dec
pop
dec
jge
test
lret
dec
nop
mov
adcb
shr
sahf
movsb
push
icebp
es
xorl
jae
movsl
rorb
sar
adc
out
jae
fwait
sub
rcrl
shrl
inc
jae
push
je
loopne
popa
lcall
js
sub
arpl
mov
inc
mov
xor
dec
sbb
adc
mov
xchg
xor
xchg
add
mov
and
dec
leave
fisttpl
and
rcrb
arpl
or
and
imul
xor
movsl
cli
fimull
add
aad
jae
cmp
pop
jge
mov
shr
mov
filds
or
adc
fwait
dec
stos
mov
mov
xchg
and
sahf
imul
fisubl
mov
mov
jo
mov
push
and
dec
or
xchg
fistpll
andb
hlt
or
fsubrs
adc
lahf
or
cmc
ds
and
inc
pop
push
or
push
and
pop
cmpsb
test
pop
repz
sbb
ret
or
xchg
loop
lahf
jmp
adc
negb
sbb
jmp
xchg
xchg
mov
jmp
std
push
mov
jp,pt
push
jns
aam
jge
fildll
fs
cltd
mov
mov
mov
xor
mov
cli
mov
mov
into
jns
jle
clc
push
jo
and
sarb
adc
mov
inc
stos
imul
cld
jae
push
and
pop
cmpsl
les
addr16
cmc
add
cmp
fwait
sti
stos
loope
jle
jbe
dec
push
mov
mov
iret
jns
je
les
test
pop
inc
lret
pusha
dec
mov
test
mov
jp
stos
pop
clc
mov
movsl
xchg
in
pushf
test
stc
xor
iret
repnz
dec
xor
xchg
xor
mov
out
adc
mov
sub
inc
cs
fstps
out
scas
test
test
mov
dec
int3
stos
jle
mul
decb
mov
js
xchg
test
cmpb
or
add
mov
flds
repnz
pop
cmp
mov
pop
aam
sub
pop
cld
pop
fmuls
ja
dec
add
ljmp
scas
iret
sub
lods
adc
jmp
nop
and
mov
cs
pop
lods
sub
fwait
pop
pop
adc
or
adc
cmpsl
xlat
rcrb
aas
jecxz
pop
and
and
filds
stos
and
hlt
mov
lcall
push
pop
lods
sbb
inc
and
or
imul
aaa
inc
fcoms
and
ret
pop
leave
xor
xor
xor
dec
lret
call
push
jecxz
xchg
cltd
fld
das
mov
ret
adc
jmp
pop
push
int3
loop
cld
popf
inc
mov
xchg
push
xor
dec
xchg
call
sub
je
shrb
cld
mov
push
je
lods
cmp
scas
mov
cmp
test
push
xchg
jecxz
mov
add
push
mov
inc
mov
icebp
jl
nop
push
push
mov
lods
mov
xchg
mov
sub
in
adc
xchg
add
imul
push
rol
pop
pop
leave
arpl
out
and
aaa
dec
xchg
in
lcall
js
xor
mov
into
xchg
lret
in
out
cmp
das
fwait
dec
mov
sbb
pop
pop
out
mov
jge
leave
test
insl
ss
or
insb
hlt
lcall
and
mov
push
lcall
cmpsb
outsb
mov
or
cmp
popa
divb
mov
rcr
incb
sub
add
stos
lds
pop
icebp
stos
push
sub
push
pop
pop
outsl
fiadds
fimull
imul
stos
andl
je
movsb
shr
js
es
enter
xor
aaa
push
pop
fs
aas
les
mov
imul
dec
jecxz
xorb
les
jl
js
cmpsl
js
push
inc
enter
mov
in
rcrl
inc
stos
sbb
pop
pop
sbb
mov
rcll
sub
popf
fiadds
incb
jno
pop
push
pop
sbb
mov
inc
jnp
dec
into
nop
lret
inc
jne
xchg
jae
push
mov
ljmp
les
repz
imul
sub
shll
rorl
mov
lcall
pop
bound
shll
xchg
test
out
fxch
xchg
mov
cmp
sub
jp
fsubrl
pop
mov
sti
aas
loopne
icebp
in
iret
pop
icebp
rcrl
xchg
icebp
push
cmp
inc
jno
lods
ds
jmp
pop
outsl
cmp
cwtl
cmpsb
sbb
xchg
hlt
xor
loop
jnp
fistps
out
arpl
les
out
aad
jle
mov
ret
int
cmp
fldl
pop
mov
mov
mov
xchg
lds
inc
mov
aas
addl
jl
cld
test
inc
mov
xorl
adc
stc
sbb
dec
movsl
push
xchg
outsb
pop
fdivrl
popa
insb
cs
fwait
sub
cmc
mov
aad
push
ja
add
lock
movsb
or
mov
dec
enter
push
dec
rolb
das
fdivs
add
jnp
test
loopne
inc
loope
adc
repnz
mov
lods
mov
hlt
jns
adc
addr16
cld
xchg
out
aam
mov
push
xchg
rorb
jmp
cwtl
aam
es
xchg
pop
and
inc
outsb
jbe
incl
push
mov
cmp
out
cmp
mov
test
adc
stos
sub
xchg
push
jns
cmp
sub
das
xchg
jg
sahf
xor
popf
mov
lock
and
stos
jo
rcrb
enter
mov
pop
mov
push
jg
jns
xchg
xchg
xor
push
lock
imul
scas
mov
xchg
in
xchg
sub
jle
or
aam
or
sub
push
jecxz
pop
xlat
cmp
rorb
cmp
push
mov
sbb
stos
loopne
add
adc
sub
mov
inc
sti
and
ret
arpl
mov
push
lahf
loopne
xchg
mov
cwtl
cs
adc
mov
test
mov
and
mov
aaa
mov
and
and
ja
jmp
mov
lahf
shrl
lret
push
imul
lods
cmp
push
mov
std
insl
pop
mull
addl
mov
jge
or
pop
push
pop
outsb
mov
inc
sub
call
gs
xchg
and
mov
sbb
shl
push
dec
mov
test
lea
mov
aas
mov
or
fnsave
and
outsl
repnz
mov
fisubrl
xchg
popf
negl
or
fistpl
push
outsb
mov
iret
inc
cltd
push
rcr
repz
das
out
popa
test
loop
ret
push
mov
xor
mov
dec
or
xor
sub
aas
pop
jl
sbb
pop
lcall
xchg
jbe
enter
ret
sbb
fidivs
xchg
movsb
cltd
je
or
loop
shrb
sbb
lods
jle
jge
sub
mov
fldcw
test
sbb
pushfw
sub
aad
fmul
sub
fstpt
mov
cmp
movl
mov
mov
sbb
sbb
adc
addr16
sub
add
push
jne
sub
mov
inc
add
out
jae
xor
push
xor
lds
cmc
dec
cld
mov
dec
sbb
vpunpcklqdq
pusha
rcrl
xor
pop
xchg
loop
jmp
or
jnp
shrb
push
lahf
lods
lret
sbb
or
mov
gs
lods
sub
push
cmp
adc
lcall
xchg
stos
adc
gs
cwtl
in
and
xor
mov
lret
lea
dec
xchg
hlt
test
jge
and
add
outsl
xchg
dec
addr16
lods
mov
cmp
xchg
setns
aad
pushl
popa
enter
mov
iret
jb
sub
mov
inc
cmc
xchg
stos
cmp
stc
mov
or
adc
mov
and
iret
subb
push
xor
push
loope
jge
mov
mov
jno
loop
or
cld
fcomps
mov
aad
andl
lcall
pop
jmp
push
clc
xchg
sbb
mov
mov
or
push
mov
jp
test
test
popa
and
call
push
je
add
ret
loope
cwtl
mov
xor
popa
test
mov
lods
push
adc
mov
popf
cmp
mov
and
arpl
push
jnp
push
cltd
pop
fistpl
sbb
fistpl
cmp
or
sub
shlb
addr16
std
adc
sub
in
inc
mov
xchg
sbb
xchg
pop
popa
mov
loope
loop
ja
push
repnz
in
and
repz
nop
cmp
sub
out
aaa
xor
pop
sub
aaa
mov
sbb
adc
or
sbb
aad
and
lret
mov
xchg
es
sub
jbe
mov
out
dec
or
jns
les
loopne
sub
fmuls
pop
push
push
insl
or
sbbb
sbbb
stc
ja
shll
or
jp
and
test
cmp
xchg
divl
pop
pop
outsl
sahf
xor
dec
es
fnstenv
xor
xor
cmp
mov
in
ret
ja
lret
jmp
and
loopne
addr16
jbe
jp
cld
test
sub
gs
sbb
mov
out
std
test
cmpsb
jns
xchg
into
or
adc
xlat
jmp
adcl
std
cs
jle
xor
mov
dec
mov
push
jo
and
fiadds
and
sbb
adc
lea
data16
push
xchg
xor
shll
sbb
int
mov
push
stos
jb
fs
inc
pop
push
and
cmp
lcall
jbe
push
js
xchg
out
shrb
sbb
jl
andl
mov
sbbb
mov
cmp
mov
mov
add
cltd
jb
gs
dec
dec
pop
sbb
fs
pop
mov
sti
mov
xchg
outsb
sbb
mov
cmp
icebp
sbb
jne
nop
dec
mov
sti
ficoml
loop
dec
mov
notl
inc
stc
push
shlb
aaa
push
mov
dec
xor
mov
pop
ss
sahf
lock
lea
push
int3
dec
sarb
jb
cmp
cmp
lahf
shl
xor
xor
or
add
js
dec
push
lahf
jge
fstps
sbb
xor
imul
shl
aas
sub
sbb
xor
pop
sarl
loope
int3
push
repnz
inc
pop
scas
jbe
cmp
fs
ljmp
addr16
out
js
sahf
imul
aas
aas
out
mov
pop
movsl
test
hlt
or
add
push
mov
cmp
or
bound
mov
scas
fwait
out
sti
scas
scas
xchg
mov
push
aam
repz
mov
add
imul
sbb
fistps
and
imul
xlat
or
sti
es
dec
outsl
mov
pushl
shrl
mov
pop
lahf
loopne
sbb
mov
out
add
std
std
int3
jns
jmp
std
inc
push
int
and
mov
aam
sub
xchg
push
and
mov
cli
mov
push
aas
arpl
insl
das
fstp
xchg
movsl
rcrl
loopne
sti
popw
test
or
jge
mov
push
jb
jmp
dec
and
jnp
shll
jbe
fnstsw
lock
xchg
jno
ljmp
or
push
jnp
out
lods
add
movsl
cmpsl
pop
iret
outsl
pop
mov
mov
pop
xchg
aaa
ljmp
inc
or
adc
leave
mov
test
pusha
cmp
pushf
and
rcrb
cld
xchg
repz
fildl
scas
adc
scas
xchg
cmp
mov
sahf
scas
stos
imul
sbb
fwait
or
popf
out
or
repz
mov
mov
std
and
mov
jne
mov
icebp
outsb
rorb
les
sbb
or
testb
push
cmp
fnstenv
mov
mov
adc
fs
int
mov
inc
sti
add
push
mov
adc
out
mov
xchg
outsl
clc
sbb
das
cmp
cli
inc
jae
cmpsb
loope
pop
aaa
arpl
mov
inc
mov
sahf
inc
fs
mov
fst
mov
push
xchg
mov
push
shrb
loop
pop
fldcw
mov
insb
lea
rorb
pop
inc
leave
cmp
jo
stos
out
sbb
mov
mov
insl
lds
test
pop
adc
mov
push
out
xchg
pop
xchg
loop
lds
dec
mov
js
mov
aas
inc
loope
inc
test
push
mov
jge
rcrb
add
push
sbb
sbb
add
lea
insl
clc
pop
push
pop
repz
jl
pop
mov
stos
jbe
stc
dec
subl
andl
jo
sbb
inc
and
sub
out
push
andl
into
ss
mov
push
xor
xor
insb
xor
sbb
mov
in
dec
shll
push
push
sti
adc
add
mov
inc
shll
in
jns
pushf
enter
xchg
into
gs
inc
dec
mov
xor
mov
out
je
insb
push
das
pop
pushf
jnp
aad
lds
aas
jecxz
ljmp
insl
jle
fnstenv
out
jge
jno
sub
xor
lea
and
cmp
lret
push
imul
fmul
adc
jne
andb
cmp
adc
mov
ret
clc
xor
mov
pushf
jnp
les
or
out
outsb
adc
pop
mov
push
add
hlt
adc
rclb
loop
xor
mov
pop
inc
fisubs
adc
sbb
lds
mov
sbb
mov
out
test
lods
dec
mov
jb
and
rorb
jge
mov
push
popf
fs
into
jmp
pusha
test
mov
mov
sub
insl
loop
mov
lcall
ret
adc
sbb
mov
cmp
jp
xor
rol
push
call
dec
xchg
jns
vmovlps
cmpl
ja
aad
inc
push
stos
daa
mov
scas
cmpl
adc
push
daa
adc
xchg
dec
or
sub
xchg
or
xor
inc
push
fsubrl
xor
lods
jo
or
push
ret
and
push
mov
mov
xor
xchg
dec
xchg
sbb
xor
and
pushf
loope
test
mov
sbb
mov
pop
push
mov
scas
mov
push
cmpsb
mov
test
insl
repz
decb
aad
xchg
test
cltd
or
and
fnstenv
gs
fsts
xor
test
insl
test
mov
ret
fs
sub
inc
aaa
cmp
bound
mov
adc
cmp
out
dec
out
jmp
out
add
outsb
jo
sti
je
sbb
push
aas
mov
outsl
add
cmp
rcl
out
push
jmp
insb
leave
push
xor
xor
xchg
adc
enter
mov
scas
ja
sbb
inc
pop
and
ficomps
std
push
fimull
xlat
push
jge
dec
xchg
cmpb
stos
dec
push
out
or
xlat
jne
cmp
or
iret
mov
adc
mov
ffreep
xor
andb
push
or
lret
les
iret
cmp
mov
mov
add
movsb
into
inc
insb
int
cli
or
lret
push
in
xor
mov
popf
pop
imul
pop
push
mov
fsts
repnz
sub
mov
jae
adc
push
mov
in
repz
lds
mov
shl
fistps
clc
icebp
test
jno
stos
push
mov
in
ret
jmp
cmp
xchg
xor
sarb
aas
ret
sub
cmc
cmpsl
cmp
scas
test
jmp
dec
xchg
xor
sub
mov
fisubrs
std
sbb
xchg
xchg
xorl
aas
daa
mov
shlb
dec
jbe
or
nop
ja
fucomp
sub
gs
cld
mov
nop
ret
push
outsb
cmp
pop
lea
cli
dec
or
lret
sbb
insb
sbb
xor
rorl
cld
scas
mov
loop
xchg
popa
pop
mov
addl
lcall
scas
push
stc
cmc
call
sbb
stos
ds
pop
leave
insb
push
arpl
mov
xchg
hlt
jl
jmp
mov
ds
call
add
mov
jbe
mov
outsl
hlt
pop
adc
mov
insl
pop
mov
popf
mov
adc
xchg
mov
cld
xchg
mov
pop
cmp
push
jle
xchg
xchg
push
rolb
cmp
faddl
std
sub
sbb
xlat
dec
leave
lods
xor
add
popf
mov
jecxz
test
lea
and
jecxz
xchg
subl
mov
or
daa
popf
mov
xchg
jl
addr16
dec
sub
jae
mov
popa
cmpsl
xchg
lods
dec
rcrb
mov
test
test
stc
push
sub
mov
mov
ret
jae
scas
mov
ficoml
sbb
rcll
ret
mov
cmp
dec
ficoms
movsb
mov
cmp
and
dec
cld
mov
lea
xor
cld
or
pop
stos
idivb
add
xchg
mov
xchg
scas
add
mov
jge
push
faddp
ficomps
cs
fstpt
rcll
dec
push
add
sbb
xor
int3
adc
jae
sub
xor
xor
jno
jns
dec
cli
neg
add
mov
ret
xchg
adc
test
jmp
adc
pop
mov
frstor
and
mov
adc
pop
mov
popf
jle
ja
jg
cmc
out
divb
add
adc
rcl
pusha
fisttpll
js
pop
adc
scas
mov
sub
add
adc
or
popf
pusha
outsb
xchg
mov
pop
loop
or
andb
jae
or
fimuls
out
xchg
and
jmp
cltd
push
rclb
push
int
insb
add
add
pop
or
lods
push
jl
dec
jns
mov
jge
xor
push
jge
inc
cltd
dec
clc
jnp
mov
cmp
dec
test
mov
cmp
pop
int3
stos
mov
push
fxam
cmp
les
sti
lret
cltd
popf
call
adc
outsb
psubb
dec
leave
aad
outsl
fisttpl
mov
std
loope
push
or
mov
sbb
sub
enter
push
adc
loopne
adc
movb
hlt
daa
loopne
sbb
cmp
cmpsb
xchg
scas
fwait
mov
xchg
and
outsl
sbb
dec
adc
jae
sub
lahf
dec
or
add
xor
lea
or
xor
xlat
sub
cld
fwait
push
mov
pop
lods
popf
mov
iret
xor
push
out
ret
popa
loopne
push
aas
icebp
scas
or
and
sub
cs
cmp
or
out
icebp
push
mov
xor
inc
push
or
inc
lret
adc
cmp
pop
jecxz
cld
jno
add
mov
fidivrl
and
aad
push
jle
lret
and
push
mov
cmc
push
push
inc
mov
data16
mov
scas
push
xchg
ja
sub
inc
sub
or
inc
jmp
xor
lods
add
mov
sbb
inc
sub
or
gs
and
mov
movsl
fidivs
jbe
fldenv
jo
cmp
jns
repz
xchg
in
push
mov
sbb
aam
pop
mov
push
les
outsb
push
mov
scas
mov
hlt
mov
sbb
cmp
jl
dec
stos
mull
test
test
bound
dec
pop
xorb
in
xchg
and
rcr
xor
mov
add
aaa
inc
sbb
das
or
int3
pop
cwtl
mov
stos
and
adc
jo
add
mov
sbb
stos
repz
xchg
push
or
mov
mov
xor
cmp
xchg
jg
fisubs
inc
mov
xlat
cld
or
jl
pop
mov
mov
jecxz
in
xor
imul
dec
out
or
in
rol
inc
push
xchg
fiadds
popf
das
stos
lods
test
mov
mov
adc
enter
lods
pop
add
cmpsl
mov
sub
int
int3
mov
les
iret
fistpl
leave
jo
jecxz
insl
xchg
lds
in
das
mov
scas
pop
out
push
and
shlb
push
and
std
push
mov
cltd
mov
mov
notl
shll
into
les
cld
adc
sub
aaa
les
adc
lods
add
fwait
mov
std
sub
out
in
mov
mov
imul
sub
dec
stc
bndldx
mov
shlb
dec
jbe
mov
int3
test
fcom
fdivrl
fists
mov
add
xchg
push
imulb
and
int
push
fs
in
cmp
das
daa
xor
out
sbb
rcrl
adc
push
aas
out
jp
and
xchg
lods
mov
das
jns
push
cmp
jl
test
pop
xor
dec
add
sub
sub
jp
roll
inc
jle
leave
das
sbb
xchg
inc
out
popf
xchg
or
icebp
out
imul
repz
or
sub
iret
ja
and
clc
hlt
xchg
and
push
aad
and
pop
test
dec
outsb
fsubrs
ret
fs
pop
xchg
jns
sahf
lret
fcoms
insl
mov
mov
mov
or
and
fadds
ja
insb
ja
movsb
cld
dec
push
mov
outsl
aaa
pop
or
pop
adc
in
test
shrl
pop
sbb
push
int
sbb
mov
cltd
dec
inc
mov
dec
ja
andb
mov
mov
repz
imul
xchg
lret
push
out
rclb
pop
out
repnz
lock
scas
lret
popa
xchg
add
dec
jmp
or
fsubl
ss
xlat
jmp
rol
scas
or
mov
fsts
pop
lret
pop
lods
movsl
xchg
pop
mov
dec
icebp
jo
insl
pop
mov
push
lock
lods
rclb
cmpsl
or
or
ja
or
out
data16
out
stc
aas
aaa
inc
xchg
inc
cmp
int
mov
imul
shlb
insl
gs
xchg
in
les
orl
in
pop
imul
xor
xchg
pop
sub
nop
pop
push
jnp
pop
inc
adc
mov
lahf
dec
movsl
cld
mov
fidivs
in
gs
mov
aam
sub
insb
xor
je
cltd
jle
jge
cld
mov
xlat
jnp
add
xor
xchg
xchg
dec
inc
push
sbb
loopne
push
adc
leave
loop
sub
movsl
std
idiv
mov
shrb
adc
dec
shll
pop
adc
mov
andb
mov
icebp
pop
sahf
mov
clc
stos
scas
ds
int
cmpb
rorb
es
jmp
xchg
mov
stc
cmp
lcall
jmp
mov
xor
cli
int
das
xor
xchg
jg
imul
mov
outsb
test
mov
hlt
sub
jecxz
aaa
outsl
dec
cmp
or
stc
pushl
cld
fwait
sub
sub
scas
sub
xor
sbb
in
cmpsl
xor
mov
add
dec
nop
incl
jae
stc
and
mov
jno
movsb
gs
add
lahf
imul
xchg
push
push
imul
sbb
cmc
fdiv
and
shlb
in
fildl
test
enter
movsl
out
xor
xlat
arpl
btc
pop
imul
xchg
cmp
dec
lret
jl
mov
mov
mov
scas
mov
sub
and
xchg
push
lods
bound
add
sbb
stc
fwait
les
mov
cmp
push
mov
enter
out
inc
and
adc
jae
mov
sub
popf
out
jno
mulb
push
inc
pop
out
cmp
xchg
shlb
mov
das
cmp
stc
dec
sahf
add
inc
or
cmp
xchg
int3
push
adc
jns
jae
xchg
adc
pop
mov
xchg
inc
sub
ja
mov
or
inc
scas
hlt
dec
sbb
jno
notl
sbb
clc
int3
movsb
dec
dec
call
push
or
mov
ds
stos
dec
js
sti
ds
inc
jae
lods
or
or
xchg
add
sub
stos
jno
leave
xchg
outsb
jle
pop
outsb
rclb
or
mov
inc
inc
adc
adcl
fiadds
pop
roll
sub
adc
sub
fldt
fbstp
mov
das
loop
ret
adc
and
push
mov
gs
movl
sbb
push
or
dec
add
cli
cmpb
inc
pop
ja
dec
sbb
dec
sarb
mov
repnz
pusha
sub
sub
add
out
pop
cmp
pop
lret
xchg
cmp
pop
lods
iret
lahf
daa
mov
push
fmulp
and
xchg
push
stos
mov
test
leave
sti
mov
mov
rcl
psrad
mov
adc
sub
data16
push
imul
mov
mov
mov
test
mov
inc
inc
insb
sahf
outsl
les
mov
xchg
mov
and
add
out
xchg
addr16
mov
xlat
mov
push
cmpsl
jns
pushl
adc
ja
dec
fcoml
pop
push
inc
cld
mov
pop
inc
mov
sarl
out
sub
mov
loope
cltd
pop
lods
cli
ljmp
xor
daa
xor
loop
cmc
fwait
mov
leave
ljmp
mov
in
jns
xor
fcoml
outsl
fistps
loop
push
lods
int3
loop
lret
mov
aam
inc
dec
stos
jmp
cmpb
sub
and
mov
sbb
xor
es
sbb
sub
adc
jle
mov
mov
fcomps
cld
push
addr16
orl
lock
jmp
inc
dec
mov
xor
inc
xor
lods
push
mov
xchg
and
std
addr16
mov
or
push
xor
insb
andb
fs
shll
mov
scas
test
or
push
mov
enter
adc
pushf
lock
jge
loope
sbb
push
and
add
pop
test
call
mov
decl
dec
ret
clc
sbb
dec
std
aas
jp
sbb
jmp
mov
mov
and
add
clc
or
xor
add
pop
mov
lahf
mov
cmp
scas
mov
ficoml
pop
jbe
mov
xchg
pop
adc
or
inc
inc
js
cli
adc
jnp
adc
fs
leave
stos
in
pop
inc
pushf
adc
add
das
xor
fwait
jmp
test
cmp
ja
inc
sub
in
insl
insb
test
pop
mov
in
dec
sahf
xchg
sub
xchg
mov
sub
int
out
inc
pop
scas
mov
or
mov
aam
fwait
or
jl
cmp
jg
andl
dec
out
adc
and
push
mov
adc
stos
sub
fmuls
dec
leave
fcomps
ficomps
lods
loopne
cmc
add
sbb
and
or
mov
inc
jmp
push
fwait
ss
cld
sub
inc
sub
stos
aas
addr16
mov
js
mov
lret
xchg
push
cld
xchg
or
cmp
in
pop
push
sub
push
movsl
xchg
inc
mov
jge
mov
sbb
mov
popa
fcomp
scas
in
cmpsl
jmp
mov
jns
xchg
pop
pop
bound
adc
cmp
mov
pop
in
xchg
je
out
push
add
ficoms
sub
je
ja
fisttpl
add
popa
movsb
pop
and
xchg
or
adc
mov
fwait
aad
push
stc
pop
sbb
xor
sar
leave
lahf
std
push
fcoms
outsl
and
int
insb
push
pushf
pushf
cmp
cmp
sub
ss
loope
loope
out
lock
sar
cmp
or
roll
leave
out
pop
lcall
out
mov
notl
xchg
insl
xchg
imulb
orl
iret
adc
cltd
cmp
adc
adc
sbb
cmp
sti
dec
jg
xchg
push
into
rcrl
push
cwtl
push
xor
push
icebp
sbb
int
pop
jge
addr16
jmp
xchg
fcom
lret
mov
cli
push
mov
jl
cs
push
js
outsl
inc
inc
and
out
and
rcrl
pop
xchg
push
add
or
out
data16
mov
or
mov
lods
sub
fcoms
cmp
in
es
pop
int
outsl
sub
mov
ja
mov
pusha
cmpsb
lock
pop
dec
xchg
lods
lea
jge
sbb
pop
lock
and
test
int
pop
jecxz
lret
cmp
or
xor
lcall
and
mov
test
add
jle
ds
jns
mov
xor
aaa
cltd
pop
es
cs
sarb
cmp
ret
sbb
cmp
imul
ret
xchg
scas
mov
xor
fst
add
jbe
add
scas
pop
stos
lods
fsubl
mov
adc
lret
mov
adcb
xor
movb
rcr
add
xorb
fdivp
mov
jl
cltd
mov
cmp
mov
sahf
cmp
mov
mov
scas
xor
je
xchg
push
add
cli
pop
add
cwtl
sub
xor
js
jl
sub
es
mov
imul
popa
mov
push
and
stos
xchg
int3
je
dec
stc
mov
sub
pop
and
outsl
lahf
xchg
pop
aaa
xlat
adc
push
dec
push
xor
sbb
fstps
xchg
das
adc
iret
mov
pop
das
pop
pop
jns
cmp
push
cmp
test
mov
or
mov
filds
jnp
xlat
cmc
mov
jne
sub
mov
call
daa
add
dec
dec
cli
mov
sub
cmp
mov
cmc
jb
dec
fists
les
in
int3
sub
pop
pop
cmp
sbb
das
das
xchg
dec
call
insb
dec
ss
sub
sarb
stos
mov
scas
sbb
push
xchg
pop
sub
stc
pushl
leave
cmp
test
lret
dec
pop
jmp
push
clc
icebp
lods
imul
adc
pop
addr16
inc
jg
sbb
pop
sub
adc
clc
aam
cmp
jbe
add
lods
xchg
xchg
mov
inc
aaa
sub
dec
mov
push
inc
pop
shlb
pop
lods
adc
push
xor
ficompl
add
fsts
imull
jbe
sahf
inc
mov
pop
fs
mov
aas
xlat
js
mov
int3
daa
push
mov
pop
enter
mov
mov
add
mov
fs
sub
cltd
pop
inc
out
xchg
test
push
out
hlt
add
push
scas
loope
or
mov
push
int
mov
xor
clc
cltd
roll
pop
js
mov
jle
mov
fisubs
push
das
das
aaa
insb
hlt
cmp
and
inc
and
adc
mov
jbe
add
pushf
movsb
cmpb
in
es
lcall
lods
je
addr16
inc
xor
aas
rolb
faddl
jno
pop
imul
jg
pop
lock
xchg
testl
lcall
movsl
lcall
jae
mov
push
inc
jnp
decb
stc
cmp
ljmp
out
sbb
scas
sahf
xor
movsl
imul
pop
loop
jg
outsb
or
movsb
mov
insb
inc
aad
mov
dec
inc
and
out
insb
pop
sbb
cwtl
mov
lcall
les
pop
jge
lock
sarb
lds
inc
or
clc
jmp
fdivrs
push
dec
jo
push
pop
jg
adc
cwtl
cmp
jne
add
adc
push
jle
xor
loope
imul
push
dec
push
sub
push
push
push
mov
call
cwtl
xchg
test
icebp
decb
in
cmp
pushf
insl
out
xchg
subb
pop
adc
cli
fs
jno
test
shl
dec
lods
sub
jmp
outsb
das
push
mov
das
ja
in
jae
cmp
adc
movsl
decl
mov
pop
sti
in
sbb
es
pop
jp
adc
mov
inc
add
pop
adc
aam
sub
movsb
mov
jmp
jp
out
sti
adc
and
and
pushl
or
lods
nop
add
sub
or
xlat
mov
imul
fmul
and
add
out
lret
adc
push
add
test
popf
lcall
mov
negl
sub
xor
adc
or
imul
cmc
sbbb
scas
inc
insl
loope
adc
pop
testl
insl
xchg
mov
pop
jne
or
out
test
cmp
stos
xchg
dec
inc
jp
arpl
scas
fs
idivb
loopne
ss
adc
pushl
push
ds
clc
pop
ljmp
inc
pop
aaa
dec
inc
in
xchg
dec
gs
sub
sub
mov
adc
sar
imul
aam
imul
int3
mov
jo
mov
js
push
in
daa
inc
sahf
les
push
pop
lcall
and
jp
fsubs
push
mov
mov
nop
stos
push
cltd
test
fs
insb
mov
push
fcomps
sub
jnp
inc
sub
mov
push
sub
jp
mov
std
push
incl
stos
cmp
mov
cmp
in
jno
or
dec
inc
rclb
sbb
icebp
cltd
test
jge
std
hlt
iret
xchg
nop
or
jnp
inc
popa
hlt
adcb
cmpb
in
xor
fcoml
xor
push
std
fisubrl
inc
popa
les
ljmp
push
jb
mov
inc
pushf
mov
dec
pop
scas
or
pop
loopne
jecxz
push
stc
cmpsb
lock
inc
xchg
sbb
jb
and
pop
fs
jo
rcl
pop
sbb
pop
push
sub
addb
test
jecxz
mov
daa
addr16
jne
aad
xlat
xor
cmp
daa
adc
fnstsw
test
push
xor
and
pushf
push
xor
cmp
aas
xchg
stc
pop
leave
inc
or
and
push
inc
xchg
jge
sbb
int3
shrb
pop
fmull
sub
dec
fs
sub
cmpl
xchg
add
aas
icebp
pushl
fcomps
mov
pop
mov
xchg
cld
cld
adc
sti
ret
dec
jne
popa
cltd
xor
dec
inc
gs
ror
jmp
adc
dec
rclb
test
and
push
mov
fucomi
scas
dec
xor
dec
mov
hlt
xchg
dec
out
pop
adc
mov
cli
dec
push
push
sub
jae,pn
movsb
jb
mov
sbb
push
jae
mov
cld
mov
add
cmp
dec
sbb
add
mov
sub
mov
jae
ja
push
mov
pop
ret
in
push
jmp
and
mov
sbb
shrl
shlb
jno
xlat
mov
push
add
lcall
pusha
lock
cmpsb
adc
and
in
add
jle
sub
fchs
pop
ret
js
dec
inc
mov
cld
mov
cmpsb
mov
fildl
and
hlt
cld
in
push
pop
into
testl
pop
lods
loope
outsl
pop
pop
jae
push
add
into
pushl
add
and
in
xchg
test
mov
cmp
xlat
dec
jge
cmp
dec
std
out
sbb
fnstcw
or
mov
jnp
mov
scas
ficoms
mov
add
inc
adc
imull
aas
rcrb
jl
decl
inc
jns
loop
test
adc
inc
push
repnz
or
mov
test
pushf
insl
or
mov
sub
int3
inc
lds
cmp
and
loopne
xchg
push
xor
dec
jns
shrl
rcl
es
xchg
cmp
fisubl
fisttpll
lcall
stc
or
xchg
jg
mov
fbld
pop
and
ja
mov
movsb
pop
loop
ret
xchg
rorl
pusha
add
leave
repnz
lcall
ret
mov
push
mov
scas
rorl
jbe
cmp
and
inc
inc
mov
dec
out
push
push
fidivrl
inc
test
aad
inc
and
js
pop
jnp
clc
adc
mov
mov
ret
sti
pop
adc
xorl
fisttps
xchg
push
dec
ds
xor
xchg
cld
cmpsl
pop
outsl
shll
insb
dec
cmp
or
into
lea
lods
inc
xchg
orb
ja
or
loopne
xor
sti
sbb
inc
jl
jo
sar
lret
jl
and
nop
pop
sbb
pop
ss
in
xchg
inc
and
sub
mov
and
rorl
int
popa
lret
sub
mov
outsb
hlt
sub
xchg
mov
into
jp
fwait
mov
adc
stc
enter
add
outsb
loope
pushf
stos
xchg
jl
inc
ja
test
jb
push
xchg
stc
out
sbbl
lret
sub
leave
shr
idivb
mov
imul
add
xor
cmp
dec
xchg
iret
stos
mov
mov
xor
bound
arpl
pop
xor
sbb
movsl
xlat
fprem1
mov
xor
xor
mov
or
and
cmpsl
jle
and
frstor
mov
jne
loope
repnz
dec
xor
jecxz
jno
cmpsl
ret
inc
sahf
insb
icebp
push
mov
jg
lret
stos
int3
xchg
adc
movsb
mov
jle
dec
and
icebp
mov
test
dec
andl
jo
inc
fidivrs
sub
scas
insl
jbe,pt
ret
mov
aaa
push
or
icebp
sbb
es
es
test
fcomps
je
sbbb
push
and
notl
and
mov
mov
ss
nop
scas
inc
xor
ljmp
mov
cmc
add
jns
adc
sbb
mov
inc
inc
xchg
inc
sub
js
popa
sub
jmp
cmovae
cmc
out
sub
mov
in
repnz
test
sbb
sbb
fldl
mov
ret
jg
jns
add
mov
push
push
ret
inc
loop
into
popa
popa
std
inc
stos
pop
outsb
mov
hlt
jecxz
fs
xor
jecxz
bound
insl
sbb
vandps
les
cli
mov
pop
pop
cmpb
xor
jl
inc
mov
xor
loop
popa
push
std
add
lock
scas
fldl
out
mov
test
mov
enter
roll
jge
cltd
cmp
ret
cmp
mov
pop
shlb
int
jae
enter
icebp
into
rorb
xchg
stos
xor
sbb
xor
mov
xchg
clc
pop
filds
fadd
xor
lret
loop
mov
push
push
inc
outsb
clc
rcrb
dec
out
ret
push
scas
pop
xlat
outsl
mov
pop
aam
dec
mov
xor
and
test
mov
lcall
push
movsl
xchg
addl
shll
lcall
mov
imul
mov
and
fistpll
jmp
cmpb
bound
mov
aas
jb
in
jecxz
call
mov
pop
add
mov
mov
aam
in
jno
and
add
add
push
xchg
cmp
stos
dec
vmovmskpd
xor
mov
dec
inc
daa
aas
or
mov
add
mov
push
dec
ds
mov
shrl
shll
cs
xchg
and
nop
mov
fwait
pop
pop
lahf
xor
push
lahf
stc
mov
add
cmp
mov
inc
jg
into
int3
xor
and
fbld
cwtl
pop
mov
aam
out
mov
pop
xchg
sub
sbb
pusha
test
and
lock
mov
push
cmp
xchg
insl
mov
ljmp
xchg
mov
out
out
mov
jae
leave
inc
sti
mov
mov
fwait
daa
lea
es
adc
sbb
jge
rorb
pushf
xchg
loop
push
lds
ret
jb
mov
rorb
out
adc
pusha
cmpsl
mov
test
sub
add
inc
out
sub
xchg
inc
pop
mov
stos
popf
popa
insb
out
jbe
out
mov
and
test
sbbl
lods
lcall
enter
mov
inc
and
sahf
sub
dec
or
push
xor
mov
push
leave
test
outsl
adc
imul
mov
add
sub
jne
ja
mov
bound
pop
imulb
cmp
pop
or
mov
or
dec
int3
das
mov
add
stos
std
mov
cmp
ret
xlat
je
jb
pop
add
push
pop
or
cmp
dec
out
cmp
push
adc
or
ljmp
xchg
enter
dec
lods
xor
aaa
or
sbb
leave
add
xor
lds
mov
out
fs
orl
jecxz
arpl
push
data16
add
cmp
ds
int3
jmp
dec
pop
pop
int3
cmc
pop
mov
jl
sub
int3
int3
sbb
mov
fdivrl
or
push
pop
xchg
adc
pop
in
sbb
bound
scas
sub
jmp
pop
push
hlt
mov
mov
pushf
jp
sub
add
push
lods
adc
leave
cmp
imul
sahf
push
sub
push
or
mov
scas
loopne
sbb
mov
repz
sub
or
in
ret
je
inc
sub
fwait
add
xor
mov
pop
scas
inc
test
iret
sub
mov
ja
lds
cmp
push
rclb
push
xchg
jne
pop
insb
xchg
add
pushf
cmp
jmp
pop
pop
lahf
scas
xor
push
mov
push
out
mov
loopne
mov
inc
shrb
cmp
fimuls
hlt
push
pop
movsl
test
adc
loop,pn
add
dec
into
mov
out
in
outsl
xchg
fiadds
inc
dec
adc
xchg
sahf
xchg
icebp
dec
in
mov
jae
jno
adc
popa
inc
cmp
sub
inc
nop
or
push
push
adc
xor
pop
aad
adc
rep
pop
push
cmp
push
dec
ret
pop
sub
cmp
push
mov
cmp
adc
enter
rorl
bound
popa
mov
mov
jmp
pop
imul
xor
pop
mov
testb
clc
push
sbb
ljmp
jge
jno
mov
lahf
call
xchg
imul
add
inc
xchg
rolb
lds
mov
pop
loop
pusha
imul
test
aas
adc
out
adc
rcll
jb
mov
pop
jge
mov
add
popa
cmp
lds
cmp
pop
clc
sub
les
rcr
in
fnsave
ret
std
or
pop
cmp
cwtl
sbb
dec
jecxz
scas
clc
les
sbb
or
xchg
mov
ljmp
push
iret
and
lret
xor
add
jge
lds
call
jg
je
repz
clc
aam
jecxz
clc
jge
sub
mov
mov
mov
data16
jo
lods
hlt
flds
loope
das
or
mov
ss
mov
in
mov
sub
mov
leave
cmp
enter
icebp
out
aaa
xchg
lods
lahf
push
call
inc
and
and
loopne
mov
pop
mov
das
fwait
imul
sub
xchg
xor
ffree
push
fdivs
sub
xor
das
fmuls
stos
fimuls
das
mov
mov
fnstsw
outsl
adc
mov
stos
mov
js
xchg
and
inc
pop
imul
and
adcb
dec
jle
fxam
in
call
sbb
pop
out
je
out
daa
imul
ret
mov
push
adc
cld
sub
push
xor
jae
pop
jle
xchg
xchg
sub
or
mov
mov
mov
xchg
insl
pop
sbb
movsl
mov
and
cli
add
xor
push
xchg
cmpb
adc
rorl
add
sarl
out
mov
lea
xchg
xor
mov
dec
sbb
mov
xorl
cmp
mov
movsw
jbe
or
data16
outsl
les
repnz
fidivl
or
sbb
mov
stos
push
iret
gs
adc
frstor
pop
lods
fisttpl
jmp
fsts
lret
inc
bound
and
cmpsl
and
pop
loope
push
xchg
xor
pop
test
pop
dec
sti
hlt
int3
push
lea
and
into
xchg
push
inc
movsl
pusha
mov
mov
lock
or
clc
lock
add
and
fsubr
movsb
and
mov
aam
sbb
xor
stos
mov
bound
clc
pop
xchg
jle
aam
mov
mov
arpl
push
push
xor
and
fsubrl
dec
jae
pusha
stc
jae
cmp
mov
aaa
pop
mov
sbb
aam
mov
pop
lret
push
ds
icebp
cltd
pushf
dec
enter
mov
adc
mov
or
mov
pop
add
cmpb
cmp
addl
xlat
sahf
test
or
and
and
cmc
add
scas
mov
mov
add
test
mov
fsubr
ljmp
jae
jg
cmpsb
mov
mov
icebp
inc
fldcw
adc
fistl
jbe
ret
and
adc
xor
mov
arpl
pop
add
imul
dec
fs
lods
mov
add
loopne
jle
mov
sahf
push
and
lcall
or
call
adcl
pop
jp
rorl
mov
and
inc
pop
scas
inc
mov
and
add
lcall
push
xchg
aas
sbbl
das
cli
scas
push
je
mov
popf
mov
xchg
xlat
std
jmp
cmpsl
std
mov
insl
or
sbb
int
pop
cpuid
jecxz
test
sti
sar
out
jg
pop
mov
daa
adc
lea
arpl
cvtps2pd
out
cli
mov
pushf
sbb
daa
jno
xchg
and
mov
pop
sub
and
into
repz
and
fnstsw
jne
inc
std
and
inc
inc
ljmp
aas
mov
mov
push
mov
sbb
sub
inc
xchg
adc
xchg
sarb
push
sub
xor
cmp
bound
mov
ljmp
cs
adcl
je
shlb
lea
xchg
sub
push
mov
or
inc
xchg
stc
mov
xchg
out
mov
pushf
sbb
mov
xchg
inc
inc
push
arpl
mov
subb
lret
stos
movsl
adc
gs
and
sbb
data16
adc
mov
insl
push
sti
cwtl
int
xchg
add
insb
jmp
pusha
sbb
inc
in
dec
mov
push
cmpsb
mov
dec
push
rol
push
loope
sarl
pop
xor
iret
mov
cmp
mov
pop
jle
testl
aaa
xor
add
mov
mov
mov
enter
adc
hlt
xor
xchg
in
and
sti
int3
aas
fdivrs
addr16
pop
aam
inc
pop
in
dec
rclb
dec
push
lahf
or
dec
shlb
adc
adc
xchg
pop
bound
cmpsb
pop
pusha
jae
sub
or
adc
and
sub
inc
iret
das
cmp
fnsave
push
hlt
inc
jne
lds
add
sub
add
ret
mov
and
es
outsb
pop
xchg
in
arpl
les
and
mov
stos
movsl
xlat
mov
fwait
jb
jl
jne
faddp
gs
inc
pop
sbb
dec
lds
in
xchg
stos
mov
pop
sub
cmp
mov
imul
stc
xchg
lahf
add
or
sub
pop
andps
roll
test
fcomip
mov
mov
aad
lock
mov
cmp
insl
negl
jno
mov
adc
push
sbb
stc
mov
repnz
sub
adc
shll
mov
fwait
pusha
mov
ret
mov
sub
jmp
test
xchg
push
pop
pop
jnp
cmp
fs
imul
lcall
rorb
dec
out
std
mov
fs
jl
add
ja
push
jae
rorb
pop
sub
dec
sub
jmp
rcll
lods
cmpsl
xor
sarb
popf
cld
mov
popf
in
lret
outsb
push
in
repnz
pop
in
jp
fdivrl
adc
icebp
dec
pop
in
sbb
push
jae
pusha
je
jb
or
fildll
shl
scas
das
pop
ja
inc
sbb
pushf
aas
xor
mov
add
out
mov
xor
pop
mov
mov
xor
mov
hlt
insb
jge
adc
sub
xor
mull
es
outsb
es
cwtl
cmp
repz
leave
pop
push
ss
test
or
add
mov
cmpsb
rcrl
mov
shlb
in
loope
sbb
icebp
mov
and
dec
cmpl
std
mov
movsl
pop
cltd
jb
divb
rcr
mov
fsubrl
cli
and
pop
pop
shll
fdivrl
adc
dec
loop
dec
fstpt
imul
subl
imul
loop
hlt
ds
xchg
orb
mov
adc
insl
pop
dec
sbb
mov
mov
out
orl
or
lea
mov
jmp
adc
mov
mov
push
fs
xchg
scas
test
rol
push
dec
clc
lret
out
sub
mov
mov
pop
mov
fldl
jnp
ja
scas
mov
shlb
xchg
add
shl
cli
jbe
sub
xchg
mov
inc
sbb
clc
add
js
inc
mov
enter
xchg
dec
test
iret
out
jne
popf
popf
xor
notl
xchg
inc
xchg
jg
push
push
jns
adc
push
js
test
push
arpl
mov
push
shlb
mov
add
jmp
test
xchg
in
gs
mov
adc
xchg
in
imul
in
adc
sbb
rolb
popf
fsubrl
cmp
add
out
out
je
and
sbb
inc
lea
cmp
pop
sub
xchg
fidivs
insl
mov
and
fwait
push
dec
and
loopne
hlt
int3
sbb
mov
cld
pop
pushf
sarb
mov
les
push
call
daa
dec
out
or
mull
adc
lods
push
pushf
cs
mov
or
shrl
lea
call
int
xchg
outsl
outsl
sbb
jp
and
sub
movsl
outsb
inc
push
lods
dec
cmp
or
aaa
jecxz
mov
call
fcomip
fwait
dec
or
ss
push
std
sbb
clc
lret
xor
push
int
nop
je
mov
mov
xchg
mov
cmp
cmpsl
fsubs
xlat
aam
sbb
mov
inc
ds
push
sbb
fildll
mov
aaa
dec
xchg
mov
sub
insl
fidivs
lahf
sbb
js
ret
cwtl
or
mov
sub
loopne
or
fsubrp
lods
enter
aam
js
test
pop
test
dec
mov
les
jmp
push
xchg
jl
xor
push
stc
in
les
xchg
or
cmpsl
je
adc
jnp
lret
jne
imul
lods
jle
insl
inc
adc
sbb
aaa
and
addr16
lods
and
imul
xor
clc
movzbl
or
in
mov
sbb
jae
int3
mov
jbe
fisttpll
ja
imul
popa
xor
rorl
out
cmp
adc
push
cmpsb
add
icebp
add
sarb
mov
fcmovne
or
adc
sbb
or
mov
mov
sbb
out
aam
dec
test
dec
mov
incl
outsb
icebp
mov
lahf
leave
sbb
pop
into
push
dec
xor
jbe
push
mov
xor
cli
sbb
rcrl
into
and
daa
add
jno
daa
inc
mov
test
ret
cmp
sarb
je
jo
sbb
enter
scas
icebp
sub
enter
addr16
loop
addl
sahf
sbb
sbb
jno,pn
pop
and
leave
scas
inc
or
movsl
sahf
lcall
sub
mov
iret
mov
imul
mov
sbb
add
xor
mov
xchg
xor
icebp
outsl
rclb
sbb
repz
push
in
pop
int
xor
cmpsb
dec
and
aad
fwait
shrl
or
imul
cmpsb
sti
test
add
push
mov
shr
leave
inc
dec
xchg
iret
xlat
or
cs
sbb
cmpsb
mov
xor
push
push
ror
pop
aam
add
cs
push
outsl
lret
repz
loop
add
xor
sahf
mov
mov
xor
andnps
jge
mov
popf
pop
pand
das
push
jecxz
sub
cmp
xchg
scas
fstpt
daa
xchg
loopne
pop
ret
adc
xor
mov
inc
rcr
mov
and
ret
pop
xchg
dec
shll
mov
scas
xlat
out
mov
mov
push
test
mov
pop
ljmp
icebp
xchg
mov
or
push
loop
jle
shlb
sub
out
cs
and
out
add
adc
jmp
dec
xchg
pop
iret
push
pushf
insb
lea
inc
or
and
fsubrp
cs
sbb
notb
enter
cmp
mov
or
mov
jp
jae
sub
xor
jle
mov
inc
cltd
out
mov
pop
loope
jl
ds
shl
es
jle
xor
cmpsl
dec
mov
pop
jo
and
add
rcl
jl
out
dec
lret
out
xor
xchg
mov
mov
and
sbb
sub
orb
jge
xchg
outsb
mov
xor
out
dec
call
push
dec
adc
dec
test
insl
jmp
in
std
cmp
or
out
loope
mov
stos
mov
and
cmp
push
cmp
jmp
xchg
insl
repnz
xor
mov
lahf
pop
mov
xchg
mov
and
ljmp
jo
fnsetpm(287
xchg
add
popf
cmpsb
mov
dec
imul
or
push
mov
and
cmp
mov
jp
js
test
movsb
shll
and
aaa
out
fsubs
ret
enter
movsl
lahf
in
xchg
push
mov
push
sbb
pop
xchg
inc
mov
adc
mov
lods
xchg
std
adc
fidivrs
mov
xchg
repz
jbe
frstor
fdivl
pop
mov
fadd
sti
xor
adc
or
in
iret
lret
psrad
pop
fisttps
fnstsw
orl
or
and
jecxz
mov
test
jno
sbbl
clc
sbbl
lahf
repnz
icebp
aas
popf
sti
jnp
sbb
sub
scas
mov
xorb
jnp
push
cli
aad
cld
dec
and
out
xor
test
popa
lret
mulb
sub
push
mov
xor
imul
jb
xlat
cmpl
in
pop
sarl
fnstcw
in
and
mov
mov
in
jp
mov
push
mov
negb
shr
inc
repz
into
sub
jo
lahf
ljmp
mov
inc
out
sahf
iret
and
sbb
iret
inc
or
inc
jecxz
pop
jg
add
fisubs
cmp
es
pop
jo
add
push
adc
mov
mov
jae
rcll
orl
dec
or
loop
ds
movsb
sar
mov
mov
mov
shrl
push
ja
xor
sbb
sbb
sub
pop
mov
sbb
rcrb
dec
or
popf
adc
cmp
mov
inc
ja
inc
sbb
xchg
cmp
jae
xchg
out
sbb
inc
xor
repz
adc
adc
test
add
shlb
sahf
and
add
pop
mov
push
movsb
mov
mov
cmp
lds
mulb
mov
lcall
test
or
out
fdivs
fildl
test
pop
cmp
or
sbb
std
or
push
xchg
cwtl
add
xor
js
aad
ss
jl
daa
jle
add
stc
pop
stos
in
jns
pop
stc
addb
sti
xlat
pop
inc
dec
cmpsb
ja
cmp
mov
daa
pop
mov
push
js
cmpsl
xchg
fs
cwtl
js
fs
aaa
pushf
scas
in
mov
fdivr
mov
ljmp
imul
data16
push
push
lea
ja
mov
mov
out
xchg
xchg
jns
movsb
add
pop
out
mov
xlat
jmp
out
jnp
pop
lcall
xor
mov
mov
inc
sahf
lods
es
or
jno
pop
rorb
nop
mov
mov
loop
xchg
mov
sti
mov
pop
cmp
dec
inc
orb
js
mov
sub
in
and
dec
cmc
test
push
sbb
mov
int
dec
popf
std
cmp
mov
clc
xchg
sti
lods
pop
in
mov
gs
or
lcall
scas
shr
fstpt
cmpsl
fistpll
ds
fcmovne
xor
ret
mov
push
dec
sub
mov
es
bswap
decl
aaa
cmp
xor
cmpsl
mov
add
repnz
jnp
loopne
idivb
ret
inc
push
icebp
mov
cltd
cmp
add
jmp
fsubr
ljmp
shlb
add
cmp
mov
add
dec
mov
inc
xchg
mov
dec
add
cmp
push
in
jp
aad
popa
dec
sbb
adc
cmp
xchg
jns
rcrb
out
nop
in
pop
stc
jno
into
inc
dec
or
int
pop
iret
jecxz
repnz
js
ljmp
inc
loope
sub
movsl
inc
add
xchg
adc
sbb
mov
cwtl
in
sbb
xchg
and
mov
jnp
or
repz
fldcw
push
jne
cmpl
sub
or
push
push
std
xlat
les
dec
repnz
mov
repnz
push
in
sbb
jecxz
fs
jmp
popf
inc
push
test
pushf
mov
fnsave
dec
rcr
out
orl
rcl
mov
sub
idiv
pop
movsl
pop
xchg
out
imul
cmp
and
das
fcomp
mov
pop
dec
sbb
fisttps
pop
je
test
inc
in
dec
sahf
scas
es
loop
stos
sti
andl
cli
and
mov
mov
mov
xchg
push
cltd
imul
lret
adc
inc
aas
test
sub
fistps
insl
aam
jbe
xchg
mov
add
ret
hlt
hlt
ds
out
mov
movsb
popf
mov
dec
and
ljmp
inc
inc
jne
cltd
in
iret
sub
cmp
or
push
mov
ficomps
out
dec
xor
aam
popa
push
or
dec
dec
cmp
int3
std
push
cli
cmp
mov
xchg
dec
jns
jno
subb
and
cmpsb
adc
mov
adc
pop
adc
arpl
mov
inc
lea
data16
xchg
lock
jnp
inc
aaa
int3
mov
mov
inc
movl
clc
sbb
mov
mov
popf
arpl
mov
daa
mov
xchg
adc
call
xchg
inc
es
xchg
in
ja
jns
push
fsubrs
sub
push
cld
mov
and
mov
int
adc
out
sub
js
ret
addr16
fwait
lahf
test
jno
jo
ror
inc
cmp
fstl
inc
cld
mov
inc
jge
in
mov
ret
sti
pop
and
xorl
jno
movsl
fcompp
int3
mov
dec
xor
imul
ja,pn
inc
sub
add
sahf
mull
inc
jle
push
push
into
outsl
push
jle
jge
pop
les
jl
pop
shl
and
jnp
bound
ret
mov
dec
push
inc
insl
cmp
mov
mov
push
loope
fisubrl
mov
sub
lahf
shll
hlt
fdivs
dec
pop
addb
xchg
pushf
mov
shlb
es
jb
inc
inc
mov
ficoml
mov
jmp
xor
imul
inc
lea
push
mov
in
in
pusha
pushf
mov
lahf
cli
mov
adc
clc
push
pop
rolb
push
add
jl
or
pushl
push
xorl
fldcw
out
or
std
shlb
mov
sub
popf
add
out
ficomps
sbbb
fdivrl
cmp
mov
pop
jmp
mov
mov
dec
mov
jbe
xchg
inc
jbe
lods
popf
xor
lret
inc
push
rclb
dec
outsb
adc
leave
std
lret
jl
push
aam
mov
hlt
mov
std
jp
mov
push
lods
pop
sub
and
and
sbb
dec
adc
push
mov
fucomi
shlb
mov
xor
push
sbb
fstps
stc
jle
cltd
xor
jb
add
lock
cmpsl
xchg
lahf
xchg
sub
adc
mov
lret
les
sbb
cld
jp
mov
repz
pop
and
add
out
dec
pop
lds
bound
add
iret
mov
jge
shrb
mov
es
cltd
orl
push
ret
push
pop
out
popa
addr16
adc
sub
ret
nop
das
mov
mov
dec
xor
or
add
movsb
jno
loop
dec
jge
sub
fisttpl
mov
cmp
pop
lods
cmp
out
lock
push
inc
jnp
subb
xor
sarb
sub
xchg
movsb
push
rolb
aaa
dec
mov
and
arpl
daa
and
dec
sub
pop
mov
adc
lods
out
data16
sub
mov
daa
bound
adc
lods
imul
push
popa
and
push
xchg
or
fstpl
cmp
mov
cltd
mov
jle
and
int
test
sub
jbe
push
jge
fdivrl
and
daa
fwait
dec
sub
loopne
mov
push
dec
scas
nop
addr16
fadds
mov
in
adc
push
inc
mov
ss
mov
lahf
daa
dec
ss
inc
pop
push
rol
fs
cmp
adc
or
sbb
jo
sub
xchg
add
leave
cmp
mov
xchg
popa
pop
xchg
lea
stos
clc
xchg
lcall
mov
notb
add
rol
js
mov
mov
mov
ja
lcall
pop
jl
loopne
push
adc
addl
pop
inc
movsb
lea
inc
loop
stc
nop
stc
and
addr16
ja
faddl
dec
jns
outsb
mov
lods
out
push
jnp
imul
mov
daa
stos
or
dec
lods
cmpsl
rcll
pop
insb
mov
cmp
cmp
lret
mov
adc
sub
outsb
loop
add
test
adcb
xor
sarb
cmp
jns
imul
inc
inc
mov
shlb
lds
xor
stos
into
pop
xlat
clc
dec
flds
icebp
adc
loopne
icebp
pop
cmp
sub
cmp
cmpsl
loope
cmp
jns
push
cmp
lods
mov
das
adc
rorb
aam
test
clc
ja
cmp
repnz
jnp
add
mov
cli
xchg
fistl
sub
push
pop
jns
jns
push
mov
mov
mov
inc
push
aam
push
ljmp
push
pop
test
mov
daa
push
shrb
pop
push
shll
in
push
sub
and
dec
nop
cmpsb
xlat
adc
pop
sbb
sbb
sub
and
sub
jg
outsl
mov
xor
stos
loope
lods
gs
or
pusha
iret
std
xor
ja
clc
inc
xchg
and
ja
call
inc
test
cmpl
pop
dec
pop
aam
inc
mov
jle
lcall
xchg
inc
faddl
ds
nop
js
idivb
dec
les
notb
xchg
outsb
and
jecxz
sbb
pop
push
sbb
xchg
xchg
icebp
aas
insb
or
scas
test
movsb
or
out
cmp
sbbb
mov
inc
mov
jne
adc
in
sahf
mov
in
jno
movsl
jecxz
arpl
mov
testb
ret
repnz
shrl
out
mov
jnp
adcb
pop
or
jb
push
ret
out
mov
cltd
lcall
and
lret
inc
test
jle
insl
or
xchg
or
add
movsl
rorl
dec
hlt
xchg
arpl
xchg
mov
jp
cli
loopne
xchg
rcrb
push
add
aaa
in
dec
xor
mov
mov
jbe
stos
sarb
sub
sbb
mov
test
in
push
popa
arpl
in
aad
xchg
fwait
jle
popf
pop
cmc
jl
movsb
insb
push
dec
shll
pop
jno
inc
out
sub
rclb
xchg
dec
mov
popf
mov
shlb
jl
cmp
data16
pop
or
mov
cmp
pusha
dec
xchg
mov
mov
daa
cli
pcmpgtb
fmuls
jbe
test
decb
leave
mov
jle
orb
lock
push
imul
mov
pop
aam
jns
in
decb
mov
add
orl
movsb
mov
test
sub
jge
stos
scas
sahf
push
mov
sbb
and
ficompl
add
push
and
cmp
mov
dec
sub
ss
push
popa
inc
sbb
out
jo
sub
jg
mov
inc
xchg
jns
or
cmpsb
in
ljmp
and
mov
ja
jne
adc
aaa
je
inc
addr16
cld
cld
ja
and
fwait
rolb
xchg
push
sub
nop
push
mov
mov
adc
out
movsl
idiv
fcomps
jne
mov
or
shrb
or
ret
mov
or
jmp
mov
pop
mov
int3
dec
test
icebp
push
xor
sbb
imul
daa
add
adc
test
dec
add
adc
or
data16
or
cmp
add
ja
mov
ret
mov
stc
shrl
and
cmp
fsubr
inc
les
sbb
lahf
xchg
mov
jae
xchg
inc
push
sbb
jle
xor
loope
pusha
imul
test
faddp
insb
popf
movsl
jg
push
repz
mov
mov
test
into
test
cli
mov
lea
pop
daa
js
mov
xor
add
cwtl
mov
adc
xlat
leave
lods
mov
movsb
out
sbb
pop
pop
pop
adc
jo
cld
mov
push
mov
or
sbb
lcall
mov
pop
sub
inc
lahf
xchg
add
mov
lcall
mov
xchg
mov
rcrl
negb
push
icebp
rorl
mov
shll
sahf
jae
xchg
pop
shlb
add
pop
pop
lcall
mov
bound
jge
dec
jp
sbb
sbb
pop
push
ljmp
inc
mov
adc
repnz
dec
mov
stos
cmpsl
or
out
push
pop
adc
into
sub
dec
pop
bound
mov
shl
inc
scas
arpl
pop
leave
pop
jl
adc
inc
nop
enter
test
imul
mov
in
shrl
int
adc
pop
mulps
dec
inc
rcr
ds
jmp
negl
jle
sub
and
shr
in
aad
aam
mov
rcr
arpl
fs
enter
leave
roll
mov
fadd
xchg
movsl
sub
into
aaa
and
stos
xchg
or
aaa
and
adc
ljmp
int3
push
int3
and
jmp
sti
loope
sub
push
cmp
pop
sbb
hlt
cmp
dec
ljmp
push
in
xchg
and
pop
pop
jmp
and
cmp
pop
xchg
mov
lret
stos
shlb
xchg
xchg
pop
add
mov
mov
fnsave
and
and
pushf
mov
loop
jmp
cltd
loopne
pop
jmp
add
mov
mov
and
fists
mov
fcoms
les
packuswb
xchg
lret
inc
ret
adc
xor
mov
out
stc
and
jecxz
push
xor
out
bound
daa
inc
push
xchg
ljmp
xor
pushf
or
inc
xchg
mov
dec
stc
mov
cmp
jno
jmp
or
out
insl
dec
leave
cmp
mov
mov
std
rorb
mov
pop
shlb
out
ret
ret
or
xchg
xchg
iret
fidivl
test
dec
dec
bound
das
ja
jb
inc
add
mov
inc
call
loop
jae
push
mov
cltd
je
mov
mov
sub
aaa
adc
lahf
ljmp
stc
popf
fwait
into
in
cmpsb
lcall
aaa
cmp
aam
cmpsb
cmpsl
pop
cmpsb
in
mov
call
fcomps
arpl
mov
push
mov
push
dec
dec
aas
mov
imul
cmp
sbb
icebp
repz
test
sbb
mov
imull
mov
pop
xchg
sahf
pop
xchg
sbb
jl
dec
ljmp
aad
and
and
lcall
lods
fists
in
mov
jne
aad
stc
dec
cmp
mov
mov
pop
stc
in
std
into
mov
add
jle
fcomp
inc
movsl
push
pushf
sahf
and
add
and
fs
jb
xchg
outsb
pop
jg
jecxz
sti
in
movsl
xlat
inc
pop
sbb
adc
cs
xchg
pop
stc
jno
add
dec
mov
out
adc
add
out
shlb
lds
mov
jo
das
push
fs
data16
mov
push
lds
repz
neg
cmp
pop
add
frstor
mov
fwait
les
add
int3
stc
cltd
cmpsb
je
inc
jbe
jg
pop
pop
roll
mov
xchg
mov
loope
fcmovbe
add
push
pop
mov
rorb
hlt
adc
mov
stos
sbb
ja
test
or
movnti
pop
insl
into
shrl
jbe
cmp
and
fstpl
es
notl
imul
imulb
repz
jle
xor
sbb
shlb
cmpsl
jecxz
out
and
subl
hlt
jnp
pop
lea
test
sbb
outsb
mov
xchg
cmpsb
insb
test
push
movsl
lret
insw
imul
les
sbb
icebp
pop
outsl
subb
sbb
xchg
inc
adc
mov
push
sbb
shr
inc
loope
fsubl
test
in
adc
imul
inc
sub
xchg
xlat
inc
xor
xchg
and
mov
test
cmp
lcall
mov
movsb
int3
icebp
imul
mov
push
sti
jp
ja
push
popf
or
enter
lock
scas
dec
inc
add
xchg
cmp
jmp
and
rorl
shrl
in
xchg
pop
mov
cwtl
lods
pop
pushw
repnz
shlb
push
pop
insb
out
ficompl
mov
jne
jmp
sbb
mov
fisubrs
pop
sbb
outsl
xchg
mov
cmp
sbb
sub
es
push
stc
mov
stos
addr16
mov
adcl
adc
popf
dec
add
lds
repz
jmp
and
sbb
or
inc
xchg
bound
inc
leave
outsl
repz
insl
xor
jmp
pop
mov
cli
negl
mov
cmc
testb
in
int
push
je
pop
jl
aad
push
or
jmp
mov
aaa
data16
lds
xchg
pushf
add
sbb
shll
in
lods
in
pop
imul
popf
movsb
sbb
cmp
ret
dec
stos
xor
add
cmc
outsb
mov
sti
lods
sub
leave
ret
mov
ret
sub
stos
xor
icebp
and
xchg
push
in
xor
pop
jo
popa
inc
xchg
lret
inc
ret
pop
adc
ret
cli
repz
iret
mov
icebp
push
std
and
xchg
sbbb
push
dec
divb
cmc
mov
add
or
mov
mov
popf
mov
cli
sub
loope
enter
push
clc
ljmp
inc
mov
jae
cli
dec
adc
pushl
sahf
xchg
rclb
xchg
push
aaa
fcoml
push
mov
xchg
jae
es
enter
adc
jns
dec
cld
lods
ja
or
jne
mov
movsb
scas
mov
dec
cmpsb
aad
jecxz
jbe
and
inc
xor
mov
add
test
mov
pop
inc
inc
jbe
fs
aam
and
ret
dec
lods
aaa
outsb
fcomps
orl
cmpsl
fstpl
imul
movsl
pop
pop
add
push
scas
pop
xchg
lret
pop
sub
das
scas
lret
mov
in
mov
mov
pop
das
xor
insl
or
testl
mov
push
sbb
cld
inc
enter
jae
or
cmp
ljmp
fmull
into
sbb
pop
in
arpl
xchg
mov
rolb
negl
adc
sbb
or
inc
and
or
inc
fstpl
aaa
jnp
shrb
in
pop
jl
mov
sub
xchg
sub
jbe
push
sub
pop
mov
jmp
fcoms
mov
dec
jl
lds
dec
scas
inc
push
add
lock
push
addb
loopne
je
repz
add
mov
js
mov
push
fwait
adc
and
jmp
mov
sti
dec
xchg
testb
inc
mov
or
fimull
jnp
ret
mov
fsubrl
or
mov
or
std
push
loopne
pusha
mov
repnz
jbe
push
popf
xchg
nop
test
cmp
pushf
loope
test
and
loopne
shlb
sbbl
fisubl
imul
inc
lret
mov
sbb
enter
mov
pop
jne
mov
xchg
inc
addr16
push
xchg
and
arpl
dec
repz
leave
imull
xor
imul
stos
shrb
mov
fstpl
lahf
in
push
xchg
sub
sub
mov
sbb
mov
sub
shr
dec
mov
mov
pop
jl
mov
call
mov
lods
sbb
xchg
jle
fmull
mov
add
imul
je
insl
shr
jae
es
or
adc
hlt
adc
adc
js
in
sub
scas
bound
js
cmpsl
push
stos
rcrb
shll
jae
xor
or
inc
lods
pop
sbb
das
cmp
sar
sub
mov
and
mov
and
rcrb
ss
cmpb
lret
dec
pop
dec
pop
shrb
and
xor
cmpsl
xchg
mov
dec
pusha
out
outsb
aam
pop
push
mov
gs
xchg
xchg
pusha
push
ds
xchg
lahf
fidivl
xchg
and
jns
test
mov
movsl
cld
pop
mov
fidivrl
lock
stos
mov
or
aaa
and
mov
mov
fsubl
fldcw
push
inc
mov
and
shll
mov
jae
pushf
inc
enter
cmpsl
dec
and
dec
dec
adc
test
pusha
mov
aas
mov
sbbl
out
or
mov
mov
mov
xchg
push
daa
dec
fdivs
enter
cmp
xor
dec
fiaddl
je
mov
jp
mov
stc
mov
shlb
and
mov
inc
es
mov
jnp
dec
dec
pusha
lods
pushf
movsb
movsl
mov
xchg
jnp
mov
or
test
imul
test
scas
sub
jp
loopne
and
lods
sub
xchg
sub
idivl
and
ljmp
pusha
jo
icebp
pop
jb
test
xchg
aad
push
cmp
mov
cs
push
ret
cs
popa
pop
jb
pop
sbb
pop
push
push
xor
cli
mov
cmpsl
or
cwtl
ss
jl
insl
popa
cmp
cmc
jp
into
mov
mov
add
sbb
xor
jp
pusha
outsb
out
jne
ffreep
lret
gs
inc
nop
mov
out
aas
push
pop
adc
test
in
dec
push
int3
lods
ret
mov
mov
and
testb
adc
lods
mov
pop
cmpsl
lds
in
imul
mov
push
addl
scas
xchg
ljmp
jb
add
ret
mov
mov
xlat
shrb
in
jne
je
adc
ror
cmp
adc
lahf
pop
scas
dec
lret
inc
out
movsl
jns
adc
xor
push
xchg
out
pop
push
add
out
cmp
xchg
jmp
sbb
dec
out
popa
in
movmskps
dec
sbb
lods
popf
mov
lahf
lock
mov
subl
pop
push
add
mov
clc
pop
xor
cmp
mov
test
sbb
lds
sub
fnstcw
rcrb
pop
dec
data16
clc
mov
mov
lods
or
add
cmc
mov
mov
cli
cs
vpsubsw
pop
leave
mov
rcll
in
pop
idivb
out
out
add
shlb
mov
mov
xchg
xchg
cmp
push
pop
push
scas
jp
cmp
add
and
push
orl
fwait
imul
mov
adc
pop
cmp
movb
dec
popf
fldt
in
push
mov
sub
lock
pop
mov
dec
testb
adc
lret
jecxz
inc
and
mov
mov
hlt
mov
into
inc
loop
lret
andb
test
push
cmp
jno
popa
pop
jns
mov
or
insl
test
inc
stos
inc
inc
fsubrs
or
icebp
mov
sub
shlb
xchg
test
in
pop
inc
cltd
fstl
jnp
push
repz
xchg
xor
int
loop
pop
add
sahf
xor
loope
cmp
xchg
imul
mov
dec
mov
outsb
repnz
orl
pop
mov
sub
rorl
in
adc
jl
jg
das
xor
shrl
popf
loopne
jne
repz
movsl
or
mov
mov
inc
stos
inc
lock
js,pn
rcrb
push
loop
adc
sub
adc
das
mov
adc
sub
loope
lahf
cld
iret
scas
loope
cmp
inc
insl
test
call
mov
subl
pop
mov
dec
adc
or
mov
push
iret
jmp
lds
in
push
pop
dec
pop
dec
and
push
addl
mov
shlb
dec
ss
lods
push
mov
pop
xchg
pop
cmpsl
and
lea
mov
enter
jo
mov
dec
pushf
jnp
enter
out
add
adc
and
outsl
aam
call
xchg
popf
push
inc
movsl
test
pop
aaa
pop
imul
xor
cmp
out
add
mov
jnp
int
xchg
out
xorb
scas
and
inc
mov
mov
pop
xor
insl
sahf
push
xchg
adc
hlt
insl
pushf
pushf
out
add
lods
dec
lcall
mov
xchg
ret
xchg
mov
jne
popf
jae
in
bound
sbb
dec
or
std
dec
jmp
add
bound
jb
push
lods
cmpsl
arpl
jecxz
shlb
test
stos
xchg
dec
das
push
aaa
movsb
shlb
arpl
xchg
ljmp
adc
js
jbe
lock
push
jmp
sbb
movsl
mov
sbb
data16
stos
push
push
xor
addr16
lods
add
cmp
stos
cld
pushf
insb
sbb
ficomps
adc
aad
mov
mov
aam
popa
cld
mov
ret
mov
xor
adc
pop
push
mov
sbb
testl
sbb
notl
sti
popa
inc
lds
stc
xor
scas
int3
mov
sbb
icebp
pop
jp
and
ret
sbb
aam
stos
dec
sbb
pop
imul
jmp
iret
inc
xor
xlat
mov
jp
dec
cltd
jecxz
push
xchg
outsb
jg
dec
add
mov
aaa
in
decl
xor
sbb
testl
jecxz,pt
jge
push
sub
dec
loopne
sbb
cmp
ja
mov
jmp
scas
dec
jmp
inc
out
jg
sarl
loop
sbb
mov
fucom
inc
ret
sub
inc
xchg
mov
movsl
mov
inc
dec
into
lcall
fdivrl
jp
lock
jno
xor
jmp
mov
mov
icebp
das
push
mov
ss
lods
or
push
scas
xor
popf
push
je
in
imul
lds
mov
cli
and
adc
in
lods
std
arpl
insl
cmp
scas
push
stos
out
es
test
pop
decl
adc
bound
adc
cmp
in
and
loop
not
xor
int3
in
sub
inc
push
and
outsb
sbb
lret
jae
xor
dec
mov
out
mov
ret
lods
rorl
pop
sub
mov
in
and
jge
mov
jns
shrb
push
adc
mov
in
mov
or
sbb
fidivl
xchg
ljmp
jecxz
ret
jne
inc
pop
mov
testb
or
arpl
cmp
inc
mov
test
sbb
xchg
inc
and
lret
jae
sahf
pop
leave
bound
jno
bound
sub
movsl
cmp
repz
inc
test
ret
mov
xorl
lcall
dec
mov
jge
shl
pop
sbb
sarl
add
fisubrs
jb
clc
add
stos
jle
outsl
mov
shlb
out
mov
lods
fiadds
push
in
inc
xchg
xlat
popa
stc
in
mov
fadds
orl
imul
repnz
mov
mov
mov
pop
add
lcall
jg,pt
mov
add
fcomps
jae
lds
movsb
cmp
inc
sbb
add
dec
mov
popa
adcb
imulb
sub
dec
jp
je
dec
mov
shrl
xor
insb
push
decl
push
in
xor
in
inc
mov
adc
and
movsb
xor
xor
sub
jbe
arpl
int3
loop
test
je
push
dec
xor
les
dec
fdivr
aam
sbb
inc
sub
or
shr
aad
lahf
lcall
leave
ret
mov
push
push
addl
and
stos
hlt
int
push
and
aad
orl
adc
lods
hlt
les
sub
mov
cmpsl
push
cld
rep
cmp
data16
in
cmp
sar
sbb
sti
adc
movl
test
insl
ret
icebp
sahf
fcomps
dec
sbbl
mov
mov
or
outsl
fimull
leave
xorb
xor
sbb
leave
mov
and
mov
xor
stos
lret
or
out
inc
sbbl
rolb
mov
or
lock
in
and
js
andb
jge
or
stos
hlt
xor
mov
jae
jge
jno
mov
jp
es
push
out
clc
xor
adc
in
pop
dec
sbb
xchg
ret
lahf
cmova
scas
xor
mov
dec
xor
les
dec
mov
mov
in
and
pop
mov
sub
push
xchg
repnz
pop
jo
pop
mov
push
fwait
icebp
out
add
mov
ja
jmp
dec
or
mov
loopne
outsl
pop
jecxz
fwait
popf
out
mov
push
addr16
inc
cmp
pop
sub
cmp
sub
in
movsb
jb
jnp
mov
pop
jo
or
insl
ret
sbb
mov
cs
xchg
mov
push
loop
or
adc
in
aad
pop
imul
je
lcall
mov
insb
test
cmc
jnp
jecxz
or
inc
jle
lret
mov
js
movsb
push
sbbb
sub
int3
sti
lahf
enter
pop
call
push
dec
xchg
pop
sbb
mov
subb
aad
mov
cmpb
lds
insl
jne
push
sub
or
stos
jbe
les
mov
in
cmpsb
jae
fmul
lahf
xor
or
pop
xchg
mov
icebp
repnz
jg
cwtl
jp
std
dec
lea
testb
or
jae
mov
dec
xor
lcall
mov
leave
mov
mov
mov
dec
xchg
jo
fistl
pop
outsb
sub
shrl
icebp
not
xchg
idiv
aas
repz
scas
xchg
dec
pop
mov
push
stos
in
ja
xchg
adc
inc
pop
xor
aas
jmp
mov
divl
out
pop
and
mov
repz
mov
mov
lahf
sbb
in
adc
adc
scas
fdivs
jmp
std
lods
lret
imul
mov
lock
mov
sbb
push
inc
mov
mov
mov
cmp
or
lods
cs
add
push
es
stos
into
mov
jle
dec
ret
frstor
lret
adc
subps
mov
test
sbb
sbb
test
int
mov
inc
push
in
jno
bound
sub
mov
mov
sub
jns
jecxz
int
push
and
inc
push
in
aas
orl
sub
movsb
je
aad
fsubs
pushl
and
sbb
cmc
clc
or
div
push
dec
push
out
mov
cwtl
test
sub
nop
sahf
leave
leave
or
shlb
add
dec
jb
xlat
sahf
or
add
aam
js
stos
clc
jmp
outsb
sub
ljmp
or
pop
lret
jmp
ficompl
adc
addr16
cmpsl
xchg
mov
addr16
mov
shr
cmp
scas
add
or
push
cmpsl
xor
icebp
add
sahf
shrb
lret
repz
pushf
stos
fwait
sbb
push
cmpsl
cli
inc
jae
mov
test
in
mov
rolb
add
out
xchg
daa
hlt
fldenv
and
cmpsl
jno
inc
pop
push
jecxz
out
ljmp
mov
adc
lods
fstl
xchg
out
into
bound
dec
adc
sbb
push
mov
mov
xor
sub
mov
inc
push
insl
sti
iret
pop
xchg
js
pop
pop
out
mov
sub
cmp
mov
inc
xchg
push
pcmpgtd
sbb
ret
leave
adc
movsb
out
pop
pop
divb
repz
test
daa
pop
adc
push
mov
mov
and
es
pop
mov
fcoml
sbb
xor
inc
fsubrs
loopne
fdivrl
jge
arpl
sub
xor
addr16
fcomps
cmpsl
js
dec
pop
cmp
call
mov
je
xor
jne
xlat
in
and
jp
inc
mov
int
gs
lea
fs
adc
adc
sub
test
out
jmp
sbb
pusha
cli
shll
pop
fstpt
jae
aad
stos
repnz
sub
sbb
xchg
lods
into
out
cld
and
mov
push
adc
push
bound
pop
sbb
into
mov
fldl
sbb
adc
sub
and
or
pop
xor
andl
stos
push
and
mov
or
mov
out
lret
test
add
into
pop
adc
sbb
push
sbb
adc
or
or
pop
mov
mov
jbe
push
ja
xchg
and
pushw
sbb
mov
and
imull
push
mov
jle
mulb
aas
fwait
imul
xchg
jne
dec
into
push
xchg
dec
mov
out
mov
sub
mov
pop
mov
push
or
jno
dec
aaa
in
cmp
sbb
fiaddl
lods
inc
push
xor
aas
repnz
xor
add
dec
xor
jle
xchg
sti
jecxz
inc
mov
push
mov
mov
icebp
ret
clc
inc
leave
insl
sahf
inc
jnp
les
or
shl
and
int3
cvtpi2ps
or
cli
imul
fiaddl
cmp
inc
sub
int
mov
js
xor
aas
mov
outsb
repz
adc
pushf
sbb
xor
xchg
fistpll
in
popf
xor
loop
out
int
xchg
fwait
popf
je
cwtl
inc
dec
dec
mov
test
pushf
push
out
cwtl
push
sbb
clc
call
mov
cmpsl
cmpsl
mov
mov
fimull
cmpsb
sub
jge
push
pushf
and
push
dec
je
outsl
rorb
sub
scas
ret
fcmovne
cmp
mov
bound
stos
jecxz
in
sbb
mov
and
push
imul
adc
out
lret
iret
xor
dec
imul
int3
jle
out
icebp
stos
out
fadds
into
pop
idivb
cmc
add
lahf
pop
mov
cmp
ret
pushf
cwtl
fsubs
sub
mov
js
stc
movb
test
mov
enter
outsl
pop
xlat
cld
jno
sub
xchg
js
pop
inc
into
cmpsl
mov
pop
pop
push
inc
cmc
mov
mov
incb
sbb
sub
push
dec
mov
clc
leave
lret
dec
inc
xchg
imul
inc
xor
fwait
clc
ds
or
mov
xor
adc
lret
lret
in
aam
dec
out
or
push
fs
out
mov
in
ja
pop
stos
ds
sbb
and
cmp
je
or
sbb
repnz
insl
popa
int3
nop
adc
mov
lea
sub
aad
lods
mov
insl
push
pop
mov
addr16
jl
cmc
test
ret
sub
dec
negl
pop
cmpl
orb
aas
stc
mov
xor
mov
add
ret
nop
pop
loope
push
rorb
mov
push
xchg
leave
jmp
jns
aas
push
mov
mov
xor
sbb
in
and
mov
xor
adc
negb
cmp
jnp
mov
mull
testb
sarl
inc
sbb
xlat
mul
add
imul
repnz
dec
inc
sahf
out
arpl
test
push
js
movsl
jbe
sahf
and
fcmovnbe
add
in
adc
rcrl
leave
and
add
dec
sbb
jo
mov
fidivrl
mov
xchg
adc
jno
fcom
pusha
es
cmp
es
sbb
shl
dec
push
loopne
xchg
adc
lret
out
jge
mov
sub
jecxz
jnp
filds
jnp
mov
or
sub
cmp
hlt
dec
repz
js
enter
icebp
rolb
in
push
and
pop
insb
inc
mov
mov
ficoml
lock
cld
enter
fisubrl
in
mov
add
push
out
std
popf
adc
push
shlb
test
repnz
mov
ret
es
stc
out
enter
cmpl
pop
movsl
test
call
push
mov
xor
bnd
push
out
mov
iret
mov
repnz
arpl
stc
ja
mov
mov
xchg
add
es
dec
pop
adc
jg
lods
sarl
addr16
mov
popl
lret
aad
sub
jge
and
jae
pop
mov
lret
sbbl
insb
jne
and
mov
std
sub
inc
std
clc
int3
jg
lods
sbb
scas
sub
jno
lcall
outsl
mov
in
mov
jmp
cmc
pushf
fdivrp
nop
dec
pcmpeqb
ds
test
sub
xchg
dec
jno
pop
pusha
aaa
push
add
push
test
add
mov
ljmp
inc
fmulp
lret
insl
repnz
inc
cmpsw
xlat
sub
mov
daa
das
roll
in
idivl
frstor
mov
andb
mov
call
mov
cmc
call
and
dec
push
adc
add
dec
loop
fsubs
xor
movsl
push
mov
lods
mov
lods
mov
aad
andl
mov
std
movsl
stos
push
adc
mov
aas
or
popa
mov
sub
inc
cmp
outsb
in
pop
xchg
subl
jnp
ficoml
lcall
jno
xorl
mov
stc
inc
mov
xorps
xor
mov
xorl
aad
sbb
cltd
pop
add
mov
lock
out
or
pop
lods
mov
xchg
test
cmp
out
scas
sub
cmp
mov
dec
les
ljmp
push
sub
dec
out
xlat
and
adc
fidivs
aad
pusha
and
mov
xchg
jg
push
and
pop
sub
push
lcall
mov
pop
sub
push
and
mov
mov
mov
dec
xchg
sub
sbb
xor
aam
push
out
inc
popa
pop
lcall
mov
push
fnsetpm(287
aam
jmp
jp
dec
add
jne
or
mov
lahf
sub
lahf
xor
sti
push
push
insb
imul
mov
xchg
int
push
and
or
xchg
push
jle
sub
out
pusha
cmp
insl
mov
test
in
test
push
pop
icebp
jne
mov
out
data16
mov
jo
adc
mov
call
jo
imul
test
fildl
loope
loopne
push
ret
out
repnz
dec
test
mov
push
adc
mov
imul
lds
push
and
inc
inc
sub
jp,pt
push
mov
mov
ss
xchg
out
mov
mov
jge
outsb
adc
lods
inc
cmpsl
lea
and
out
xor
xor
pop
or
test
loopne
xchg
sub
push
lret
mov
lcall
sbb
push
and
pusha
data16
dec
pop
inc
nop
cld
adc
bound
mov
stc
pop
push
inc
outsb
lret
fisubrl
lods
mov
gs
fs
mov
testl
mov
adc
xlat
or
mov
movsl
and
sbb
sub
pop
xor
add
pop
xchg
push
xor
hlt
jno
shll
jp
movsl
jmp
test
jge
test
clc
dec
leave
and
lea
shrb
and
cmp
jae
pop
push
pop
push
loope
test
dec
sti
inc
test
push
or
loopne
pop
xchg
push
pop
cwtl
sbbl
scas
pop
pop
sub
ljmp
push
jno
inc
cmpsb
pusha
cmp
push
cmp
sub
divl
outsl
sub
bnd
pop
addr16
in
pop
fs
mov
jne
out
lret
dec
mov
out
mov
jle
inc
cmp
out
nop
xchg
ds
lcall
pushf
mov
mov
xchg
sbb
bound
enter
xor
aad
shlb
lock
outsl
push
outsl
jns
sub
out
cld
jo
xor
inc
fmull
mov
xchg
mov
mov
lahf
push
dec
xlat
popa
arpl
shr
push
sbb
mov
mov
out
cwtl
pushf
jp
dec
mov
loopne
cmc
mov
imul
xchg
movsl
out
mov
dec
cli
or
lahf
and
jg
mov
sahf
jge
shrl
loop
ss
mov
pop
mov
insl
mov
decl
clc
jb
adc
imul
icebp
mov
stc
jo
fldl2t
out
pushf
popa
sub
cmp
rorb
xchg
lds
mov
dec
jns
les
cs
mov
or
pop
std
xchg
test
aam
test
xor
in
fsubr
and
or
fldl
inc
xor
call
add
fwait
inc
lods
insb
ret
xor
aaa
stos
adc
push
push
sbbl
int3
pop
std
push
cltd
dec
fstl
cmc
lea
fisubl
jg
and
mov
mov
in
cmc
xchg
jge
push
sarb
lock
test
inc
test
pop
leave
mov
jge
cmpsb
sub
pop
lahf
sub
sbb
push
pop
jmp
das
or
xchg
fists
out
jae
push
add
xchg
mov
insb
dec
andb
mov
scas
cmp
and
subl
das
sub
and
mov
cwtl
out
xchg
lcall
or
mov
stc
dec
in
das
pop
inc
mov
movsb
push
and
cmp
push
movsl
lods
push
xchg
test
push
jae
arpl
and
scas
test
dec
jno
add
cmp
sbb
or
dec
fwait
lock
insb
mov
iret
clc
cmp
adc
pushf
add
icebp
cmpsb
gs
lock
ret
stos
mov
orb
stc
sbb
dec
or
pop
lahf
pop
insl
in
pop
fwait
mov
sub
mov
shr
mov
xor
sub
cmpsl
or
push
jae
mov
clc
sbb
sti
adc
cmc
test
push
iret
aad
out
cmp
jnp
cmp
inc
push
andb
lea
push
loopne
push
ljmp
repnz
std
or
loop
xchg
pop
dec
imul
cmp
xor
jmp
lahf
mov
jp
cltd
sbb
fucomip
roll
or
shrl
cmpsl
rol
or
mov
mov
arpl
sub
mov
inc
fisttpl
and
rorb
fiadds
push
fs
outsl
pop
scas
scas
and
stos
cmp
mov
mov
mov
stos
sbb
cmp
fcompl
xlat
sbb
inc
lret
data16
inc
lock
aaa
fstpt
push
loopne
mov
push
call
int
jns,pt
dec
into
mov
inc
dec
push
fmul
cld
mov
mov
or
pop
adc
mov
imul
xchg
stos
lahf
in
in
sub
mov
stos
jbe
push
test
ljmp
xchg
mov
xor
pop
mov
jo
dec
daa
push
pop
int3
inc
cmpsb
push
scas
mov
pop
das
push
pop
out
cli
adcl
rolb
pop
mov
sbb
and
pop
mov
or
add
adc
lds
push
jg
outsb
insl
or
stos
in
lret
inc
inc
jp,pn
sub
pop
cmpsb
mov
pop
and
add
shlb
insl
out
ljmp
test
jge
call
insl
lock
rcl
fstps
cltd
adc
adc
mov
jo
mov
rol
xor
enter
sbb
idiv
sbb
mov
sub
or
inc
and
push
jg
pop
ss
dec
bound
ja
loopne
or
pop
cmp
leave
jle
sbb
orb
pushf
popf
sub
test
xor
add
jno
pop
cmp
movsb
jge
data16
mov
xor
cmp
mov
pop
jb
imul
test
sbb
repnz
push
jle
dec
xor
lock
ret
push
scas
pop
cmp
sti
andb
adc
enter
sbb
xchg
into
stc
mov
popa
cltd
out
pop
ja
in
sti
and
sbb
int
mov
int3
adc
leave
jnp
mov
cmpsl
inc
cmpsl
popa
add
jne
push
xor
stos
test
adc
jmp
mov
icebp
dec
in
aad
add
ss
and
add
fs
fistpl
ss
fildll
and
add
adc
or
dec
fistpll
pop
sub
xchg
sbb
pop
add
or
add
adc
sahf
or
jmp
or
jmp
xor
xchg
push
mov
mov
insl
ds
stos
nop
xor
clc
es
xor
dec
xchg
leave
nop
rorl
or
enter
jl
inc
movsl
dec
in
pop
pop
ljmp
imul
jbe
subb
pop
test
jge
orb
pushf
aaa
scas
ror
add
sub
and
stos
push
jp,pn
mov
fists
repz
psraw
lahf
or
pop
and
or
mov
rcll
iret
cmp
cmc
push
cs
inc
xor
ror
mov
add
mov
sbb
jbe
pop
xchg
inc
mov
aaa
imul
bnd
mov
lahf
or
lret
and
dec
xchg
cltd
mov
push
ja
imul
adc
mov
clc
jae
cs
ja
push
and
jbe
inc
push
push
icebp
scas
repz
dec
or
jecxz
lock
push
mov
mov
out
dec
aad
or
jge
pop
dec
xor
dec
push
xchg
imul
je
or
mov
mov
aad
sub
push
and
xlat
push
push
int
add
mov
mov
lahf
mov
dec
dec
xor
mov
cltd
mov
mov
adc
xor
in
je
mov
adc
lds
mov
rorb
ljmp
inc
sub
and
ret
popw
cmpsb
scas
or
xchg
cs
movb
mov
mov
rcr
sbb
jp
inc
test
repz
movl
nop
inc
inc
shlb
fcompl
jb
jle
jmp
xchg
and
or
xchg
inc
fwait
xchg
fcomip
or
jecxz
cmc
test
dec
sbb
enter
dec
sub
movsb
bound
jge
xor
adc
shlb
sub
ja
inc
lods
scas
ret
mov
xor
inc
je
cltd
add
mov
or
or
jnp
xchg
add
jns
dec
into
sti
push
jecxz
cltd
nop
mov
lret
mov
or
cmp
adcb
test
outsl
outsb
out
shrb
and
out
inc
adc
in
shll
push
sbb
inc
insb
rcrb
test
rorb
je
push
or
mov
xor
xor
fwait
cwtl
mov
ret
or
shlb
push
fisubs
push
mov
pop
aad
cli
cmp
push
push
insb
out
add
push
jl
or
cmp
mov
cmpsb
sub
lods
xchg
ja
push
sbb
adc
insb
and
sub
cmp
cs
cli
xor
sbb
flds
adc
jne
or
popa
jle
lds
mov
sbb
outsb
lcall
pop
dec
icebp
sbb
pushf
fsubs
push
jmp
fwait
repz
std
dec
mov
roll
add
xchg
sbb
cmpsb
lock
jg
gs
fs
fimull
lods
cmp
sbb
js
sub
movsb
push
and
mov
push
dec
xchg
and
shl
mov
and
movhps
in
push
xchg
rorl
push
lods
scas
lret
adc
lods
xchg
clc
add
mov
int
icebp
jo
jnp
stos
ss
mov
negb
jl
dec
gs
adc
or
loope
add
lods
add
pop
mov
adc
mov
js
jbe
mov
js
xor
xor
in
cmp
nop
inc
test
unpcklps
xchg
test
rorl
push
rclb
cmp
mov
cltd
mov
adc
pop
inc
xchg
ljmp
inc
adc
xor
aas
mov
add
lds
mov
mov
adc
icebp
repz
or
icebp
xchg
test
fstpl
cs
or
leave
enter
lds
and
in
push
mov
adc
dec
mov
test
sub
lea
dec
fs
pop
mov
pop
aam
cmp
sbb
mov
sbb
jae
mov
push
dec
and
mov
push
sti
outsb
mov
iret
lahf
ret
mov
dec
insl
xorl
xchg
scas
xor
pushf
ret
xor
jb
push
jp
xor
dec
dec
pop
sbb
sub
jo
jecxz
dec
push
jb
test
jnp
rorl
jo
loope
icebp
pop
dec
pop
insb
dec
int
adc
jnp
repnz
cs
mov
sbb
shl
or
dec
jne
pop
out
fs
mov
xor
cmc
cmc
mov
xor
sub
das
in
out
add
add
rcrb
push
cmpsl
fs
pop
into
jae
mov
and
dec
data16
push
cmpsb
cmc
loop
idivl
jmp
mulb
sub
inc
in
xor
inc
loopne
out
push
pop
aas
fidivs
push
lock
add
adc
ds
add
nop
pushl
int
push
inc
mov
imul
sahf
insl
mov
xchg
sub
scas
sahf
cmp
pop
mov
ret
adc
xor
and
dec
movsb
xor
call
pop
mov
or
ja
mov
cmp
xchg
xor
sbb
mov
xchg
int
leave
outsl
test
and
js
aaa
iret
mov
xor
sub
pop
xor
les
aas
lods
mov
jp
adc
mov
mov
inc
dec
xchg
xor
xor
fisubrl
mov
in
gs
jl
ss
movsb
imul
push
cmpsl
and
or
jo
add
jbe
cmpsl
and
imul
push
pop
xor
fnstsw
cltd
or
push
and
xor
inc
adc
jno
sub
and
mov
sahf
mov
outsb
test
push
pop
add
sbb
and
jecxz
xor
jp
insl
pushf
cmc
xchg
pop
cmp
xor
fsubrs
adc
pushl
in
pushf
and
clc
or
add
mov
inc
xor
cmpb
pop
xchg
jg
test
xor
pop
xchg
std
jg
add
sahf
adc
xchg
push
das
in
push
mov
mov
sub
or
outsb
xor
mov
inc
movl
lret
cmp
insb
mov
dec
pop
jle
sub
lods
cmp
ror
ret
add
jbe
mov
inc
pop
pop
xchg
in
push
cmc
mov
sbb
imul
push
and
sti
add
stc
fldenv
cmpsb
insb
loop
daa
jb
jnp
mulb
push
mov
je
dec
out
incl
xor
cld
stos
adc
aas
pop
out
push
ja
add
fistps
loop
push
add
data16
nop
mov
mov
pop
ss
call
cmpsl
icebp
imul
lods
jno
lret
xor
popf
mov
xor
jmp
pop
stos
popa
das
jp
dec
jnp
sub
or
adc
pushf
pop
mov
jns
mov
jl
sar
jnp
push
xchg
or
lahf
fmull
fnstcw
dec
jb
pushf
push
shll
xchg
jb
push
xchg
cli
push
mov
jge
pop
sar
push
push
dec
xchg
and
decl
push
mov
mov
mov
dec
test
inc
test
dec
aad
jbe
das
out
inc
cli
loope
jg
jmp
arpl
push
or
mov
mov
in
pop
push
andl
jmp
movsl
jle
sub
push
cmp
in
sub
or
pop
dec
mov
test
ror
test
xor
push
mov
call
add
cld
mov
loope
jno
dec
mov
jo
loope
cwtl
cli
cmpsb
xor
pop
out
jmp
mov
rolb
mov
sub
cmc
inc
jle
in
icebp
xchg
popa
push
mov
lock
jns
mov
mov
test
jmp
fldcw
inc
mov
sub
adc
sbb
hlt
loop
add
nop
sbb
pushf
decb
dec
enter
or
jmp
inc
jp
out
sbb
ret
les
repz
ret
add
cmc
cmp
lds
loop
cld
cmp
push
movsl
push
and
push
enter
xchg
repnz
push
fucomip
outsb
jo
sub
mov
jb
out
xchg
sub
jp
push
dec
aam
pop
into
fisttpl
adc
fwait
jmp
cmp
arpl
test
mov
scas
xor
mov
jb
ds
xchg
or
lds
or
cmpsl
imul
xor
and
inc
jbe
ljmp
test
adc
ret
and
jl
or
and
sbb
jp
inc
inc
mov
xor
into
mov
dec
cmp
adc
and
sub
stos
dec
push
inc
fwait
cmp
out
std
nop
sub
sbb
sub
pusha
lret
inc
sbb
lret
sbb
adc
xor
outsb
mov
sub
sbb
cmc
shrb
lahf
hlt
xchg
mov
or
imul
mov
test
push
mov
inc
sub
test
insb
mov
mov
arpl
shl
mov
or
inc
dec
ds
cwtl
jns
mov
xchg
and
adc
fisubs
dec
inc
mov
call
test
gs
inc
sbb
inc
rol
dec
xor
mov
pusha
in
mov
dec
xlat
jge
loop
stos
incl
mov
or
sub
inc
sahf
lret
test
add
fmuls
mov
push
dec
out
mov
notb
mov
sti
les
rcll
data16
jno
icebp
and
inc
iret
pop
push
addr16
and
mov
inc
cmp
int3
popf
negl
test
popf
ja
push
jp
adc
fisubrs
push
pop
inc
dec
mov
stos
push
xlat
dec
cmpb
sbb
mov
pop
inc
int3
fisubrl
mov
mov
adc
dec
sub
lret
sahf
popf
pop
loope
mov
adc
or
aas
sub
or
inc
xor
outsb
ljmp
mov
adc
mov
and
rcrl
addl
adc
movsb
or
stos
movsb
pop
nop
sti
sarb
cmpl
jg
ds
int3
ja
push
xchg
stos
rorb
inc
xchg
sub
xor
lods
lods
rclb
xchg
cmp
sti
es
stos
cmp
lahf
and
sub
test
pop
sbb
xchg
mov
das
mov
pop
pop
push
mov
push
fld
pop
in
sbb
and
pusha
inc
test
xchg
aad
push
jae
testl
jnp
mov
dec
xchg
pop
add
out
out
inc
sbb
jg
movsb
mov
sub
shl
test
pop
xchg
repnz
xchg
mov
jno
cltd
insb
repz
pop
sub
mov
insb
cmp
xlat
pop
divb
push
inc
push
and
sub
lret
mov
inc
idivb
sti
std
mov
sbb
dec
push
inc
cs
sub
mov
fildl
jae
lds
lcall
int
mov
addr16
into
pop
inc
insl
xchg
rcrb
dec
in
pop
repnz
daa
adc
adc
pop
scas
or
repz
mov
shll
les
fstp
outsl
mov
sbb
pop
mov
mov
aaa
test
pop
stos
mov
scas
mov
dec
lods
test
adc
add
aaa
dec
push
dec
test
push
inc
dec
mov
mov
lahf
sar
shl
push
bound
mov
popf
jmp
orl
in
xorb
icebp
cld
push
push
add
enter
xor
mov
xor
in
mov
adc
xchg
adc
sub
mov
lods
and
cmp
and
jnp
mov
test
hlt
rcll
dec
cmp
cli
loopne
dec
cltd
and
pop
pop
fsub
xchg
xchg
and
add
adc
cmp
mov
ljmp
add
je
mov
jg
xor
adc
inc
lea
mov
fnstcw
sbb
dec
data16
aas
ljmp
out
xchg
push
daa
xchg
and
mov
aas
test
xchg
sahf
xchg
mov
xor
adc
mov
bndstx
mov
mov
fidivl
mov
shlb
and
les
cmp
mov
or
loop
lret
jne
shlb
inc
adc
push
jg
xchg
dec
adc
dec
hlt
mov
andl
int3
les
sub
mov
mov
imul
jns
sti
sbb
les
xchg
movl
loope
popf
adc
dec
and
jnp
ficoml
sub
push
xchg
out
inc
mov
mov
movsb
xchg
lret
rclb
push
leave
cmpsb
cmp
adc
pop
push
loopne
jl
push
cmp
cmp
inc
ss
jle
pop
add
mov
out
jle
cltd
or
ja
popa
push
mov
inc
cli
pop
sbb
cmp
repnz
push
mov
pushf
out
call
fdivs
mov
shrl
mov
mov
insb
int3
pusha
cmp
mov
sti
fdiv
sarb
lret
mov
mov
push
std
pop
fidivl
mov
pop
push
xlat
call
jge
daa
jnp
pop
push
es
pop
sub
mov
sti
sahf
xchg
adc
cmp
or
inc
push
xlat
lock
sbb
xchg
lods
in
leave
frstor
sti
pop
and
lea
lods
insb
inc
and
dec
inc
mov
daa
fnstcw
pop
push
and
rcrl
adc
shlb
pop
adc
push
and
test
jnp
pop
mov
js
xor
push
movsl
aas
push
aaa
pop
add
stos
and
mov
call
sub
leavew
cmp
in
cwtl
nop
jns
xchg
lret
mov
test
inc
inc
mov
adc
repnz
cli
mov
mov
popa
lea
jg
push
aaa
cwtl
mov
icebp
pop
inc
add
sub
aas
je
adc
mov
mov
or
xorb
mov
push
jb
in
mov
es
and
fists
loope
addl
pop
or
pop
sbb
repz
xor
addb
jle
pop
les
stos
jmp
mov
shl
mov
lock
mov
and
push
pop
sarb
fwait
iret
incb
push
nop
push
shll
rorl
ss
mov
push
dec
es
push
lods
fistpl
stos
jne
xchg
lea
test
sbb
jg
jg
dec
sbbl
cwtl
sub
mov
out
mov
popf
pop
mov
push
pop
pop
jle
daa
cmp
mov
dec
sub
data16
mov
dec
xchg
pop
push
shr
push
cmpsb
push
mov
cld
add
jne
inc
loope
adc
sub
sbb
and
hlt
mov
fsubr
cltd
sbb
mov
inc
enter
mov
pusha
pop
mov
mov
out
and
sbb
test
pop
mov
hlt
nop
xchg
mov
push
jns
outsb
stos
pop
dec
cs
and
aam
add
jns
mov
sub
jg
enter
es
lret
sub
push
aaa
outsb
mov
je
mov
mov
jae
add
loop
push
lahf
dec
xchg
out
and
test
mov
xchg
push
mov
inc
sub
lods
insl
imul
mov
in
sub
xor
adc
push
mov
stc
jmp
or
stos
dec
mov
adc
adc
dec
and
and
push
or
rorl
dec
js
iret
rcll
call
adc
sbb
xchg
aas
lret
dec
adc
lods
cwtl
dec
icebp
and
gs
aaa
inc
xor
or
xchg
jb
cli
push
pop
push
cmpsb
xor
sbb
xor
or
dec
scas
fs
inc
data16
xor
outsl
sbb
outsl
push
shll
int
cmovae
arpl
inc
jp
sbb
in
ljmp
ljmp
pop
fstpl
pop
fimull
mov
jae
jns
adc
cmp
sar
popa
ret
andl
inc
lds
sub
add
mov
mov
test
push
jmp
mov
sub
cmp
loop
setle
push
adc
xor
sahf
sub
push
lahf
push
mov
cltd
jecxz
jecxz
sub
ret
lods
and
stos
add
mov
popa
xor
add
loop
pop
rclb
jb
push
into
dec
add
in
mov
xor
test
aad
sbb
out
cmpsb
insb
mov
mov
jns
cltd
mov
int3
dec
dec
and
xchg
leave
outsb
xchg
push
dec
mov
cmpsl
ja
test
dec
loopne
in
lock
jns
sub
testb
mov
xchg
sbb
jns
call
cli
dec
xchg
add
fistpl
lods
and
scas
movsl
or
mov
pushf
add
cmp
dec
loope
mov
push
mov
mov
es
mov
adc
mov
into
ret
addl
rcrb
subl
sub
insl
aad
jle
call
xchg
out
lock
pop
pop
ja
int
sbb
xor
pop
sub
jecxz
repz
inc
jge
movsl
repz
aas
mov
icebp
fcoms
iret
mov
mov
add
sub
xor
fwait
push
icebp
mov
inc
pop
int3
mov
jae
xchg
or
movsl
pop
lea
pop
push
cwtl
movsl
ss
mov
cmp
push
adc
loopne
js
ja
push
or
lret
jbe
call
mov
shrl
fisubl
jmp
and
lahf
mov
shr
bound
jecxz
inc
idivl
adc
jmp
je
jle
mov
cmp
or
mov
rclb
sahf
nop
or
mov
jo
pop
in
sbb
adc
fisubrl
xchg
dec
xchg
dec
jge
pop
test
scas
mov
cmp
fimuls
addr16
nop
mov
pusha
daa
push
in
or
je
fmulp
push
xchg
lret
lahf
xor
je
or
mov
out
sbb
fstpt
xchg
cwtl
js
fucomp
addr16
loope
mov
movsb
lahf
cmpsb
ds
dec
shl
adc
add
or
call
enter
clc
sub
dec
cmp
pop
and
hlt
cmp
je
lods
push
cmp
sbb
jg
sahf
xchg
sbb
mov
mov
arpl
dec
pop
lcall
mov
mov
sbb
cs
mov
mov
xchg
adc
add
out
dec
adc
mov
inc
cmp
xchg
test
mov
iret
cmc
pop
push
xchg
and
js
pop
test
call
mov
inc
pop
push
mov
sbb
lahf
add
pushf
push
rorb
adc
xor
cmp
loopne
rorb
inc
inc
aam
sub
jbe
inc
test
cmp
imul
fwait
jecxz
pusha
pop
xlat
es
sbb
adc
rcll
and
stos
jecxz
mov
rorl
push
test
popf
adc
jle
cwtl
movsb
mov
dec
and
jg
adc
or
dec
cli
scas
mov
icebp
pop
mov
aam
xchg
es
insl
push
pop
cmc
imul
pop
lahf
xchg
loopne
out
std
out
repz
int
enter
adc
scas
fs
dec
ja
xchg
dec
imul
lods
inc
mov
xchg
jmp
adc
loope
and
cmc
cmpsl
stc
pop
or
iret
adc
and
repnz
mov
lods
pop
fimuls
stc
inc
mov
mov
mov
inc
push
jo
cmp
push
mov
mov
mov
les
mov
inc
mov
xchg
fldenv
pop
xchg
push
imul
adc
bound
and
stc
out
sbbl
xor
andl
mov
mov
sahf
or
add
fcmovnb
call
bound
xchg
mov
adc
mov
test
or
push
daa
ss
mov
clc
pop
jae
xorb
loopne
pusha
jbe
fmuls
xchg
cmp
cmpsl
ret
jae
ret
imul
jp
dec
call
enter
rcll
in
leave
dec
pop
push
pop
fcmovb
adc
insb
mov
cld
xor
popfw
dec
pmaddwd
in
ja
mov
or
cmc
mov
in
and
dec
addb
adc
out
loope
adc
dec
xchg
ret
add
repz
or
jmp
shrl
jge
int
shl
out
cwtl
js
push
icebp
bound
mov
push
sub
push
or
mov
in
jle
ds
lcall
stos
int
mov
imul
int3
hlt
sahf
imul
shl
stos
insb
sti
cmc
adc
inc
cwtl
mov
push
cmp
stc
xchg
pop
daa
push
or
pop
stos
inc
or
mov
sbb
jo
and
sub
div
pop
dec
mov
das
scas
clc
xchg
mov
sbb
cmp
lock
adc
fcomp
repz
add
hlt
adc
xorl
out
ja
test
hlt
aad
xor
icebp
inc
cmpsl
lret
aas
repz
pop
mov
xor
pop
sbb
loope
lahf
pop
lea
xchg
frstor
fildll
fsubs
std
xchg
xchg
ret
cmp
mov
mov
mov
jg
push
xor
push
dec
mov
jecxz
jno
mov
pop
popf
lock
nop
repnz
and
inc
popf
scas
in
loopne
or
insl
xlat
push
cmp
pop
fstpt
stos
lret
pop
cmp
bound
xchg
add
jp
int3
aam
or
mov
sub
imul
lret
xchg
aad
cmpsb
enter
cli
mov
mov
jle
sub
ret
movsl
dec
test
and
lods
sbb
mov
push
mov
jae
mov
sbb
inc
sbb
sbb
stos
mov
cmp
sub
ret
cwtl
push
sub
in
mov
xor
push
jne
mov
lea
mov
ficoms
jb
test
add
and
aaa
mov
js
pop
xor
jae
dec
sbb
dec
jge
lcall
ja
cmpsb
xchg
mov
inc
xchg
or
dec
popf
mov
lret
test
inc
mov
shlb
add
xchg
cmp
xor
ret
xor
inc
dec
adc
or
push
push
xchg
adc
inc
fcoml
fistpl
icebp
xchg
xor
cmp
or
adc
dec
fwait
out
and
mov
icebp
cwtl
iret
sub
sahf
mov
adc
push
dec
cmp
mov
in
jecxz
push
loope
jmp
sub
dec
test
popf
out
push
outsl
push
or
sti
sbb
jg
js
push
or
push
and
mov
push
incl
arpl
outsl
fwait
and
pop
aaa
xor
addb
js
mov
sub
dec
mov
pop
jmp
ljmp
xor
sahf
jnp
dec
dec
cmp
xor
jl
add
mov
ss
jmp
dec
out
pop
or
repz
push
and
mov
call
jle
push
jge
ficompl
ljmp
mov
movsb
jge
int3
stos
int3
test
loopne
mov
lods
scas
sbb
out
and
repnz
cmp
add
push
movsb
mov
mov
in
inc
scas
add
sub
add
das
ljmp
mov
cmc
inc
dec
out
push
jg
inc
bound
jg
imul
pop
lahf
mov
pushf
inc
inc
daa
pop
mov
nop
xchg
int3
fisttpll
jg
sub
add
sub
cmp
cmpsl
mov
mov
mov
pop
out
add
mov
cmpsl
xor
pop
adc
jno
insl
cli
dec
loope
scas
addr16
clc
out
xchg
xchg
or
in
sbb
add
stc
fwait
nop
jb
shlb
ret
fcoml
mov
bound
in
stos
push
cwtl
testb
add
je
pushf
popf
pop
ret
in
sahf
sbb
and
jp
sbb
pop
stos
push
cltd
nop
xchg
push
cli
lock
out
in
in
mov
aas
mov
jno
jnp
push
cwtl
or
not
xor
popa
pop
aad
loope
cs
sti
pop
mov
test
repz
lds
dec
into
stc
push
rcll
cs
jg
bound
adc
or
insb
lahf
mov
mov
outsb
mov
stc
ja
jmp
pxor
sbb
inc
or
sti
mov
adc
push
test
push
cmp
jns
jnp
cmp
mov
cld
dec
call
xor
or
aam
sbb
xor
dec
popf
int3
sbb
and
pop
mov
sub
in
inc
sahf
pop
xchg
mov
sub
notl
xlat
push
mov
mov
mov
popa
addb
jne
pop
lcall
add
push
cmp
imul
jg
pusha
mov
sahf
out
pusha
adc
adc
xor
mov
hlt
rol
mov
out
jb
outsl
mov
fwait
xor
jnp
fsubrs
sarb
sbb
xchg
aad
mov
xor
sbb
sbb
getsec
mov
lret
push
das
sbb
xchg
push
and
hlt
out
sahf
pushf
scas
stos
pop
or
cltd
mov
hlt
in
mov
mov
iret
fmuls
iret
sbb
pop
add
xor
lea
out
js
das
pushf
subl
dec
imul
enter
je
fcoms
and
sub
and
jne
jb
pop
popf
or
cmp
cmpsl
cmp
lods
adc
jns
clc
repz
adc
adc
sbb
push
adc
ds
stos
push
sbb
out
or
sbb
sbb
imul
mov
or
mov
sub
cmp
sbb
das
fdivs
sti
scas
int
push
rcr
pop
rorb
and
dec
call
out
imul
mov
ficomps
push
cs
movsl
mov
bound
cmp
imull
add
jbe
cmp
mov
imul
jne
mov
jne
mov
call
lds
or
loope
and
dec
divb
xchg
mov
movsb
imul
add
push
jp
or
pop
or
cmp
js
inc
sbb
out
sub
test
icebp
xchg
inc
cmpsb
mov
jp
repnz
sbb
sub
pop
xchg
scas
loopne
add
and
adc
loop
movb
pop
mov
fisubrs
or
cmpsl
fildl
out
adcl
adc
cmp
ret
and
and
bnd
adc
js
adc
out
gs
scas
fucom
pop
inc
test
xor
ficoms
in
incl
imul
testl
push
mov
fyl2xp1
sub
popa
sbb
or
jp
into
repnz
add
push
and
adc
pop
mov
pop
or
out
jmp
mov
xchg
test
jecxz
xor
adc
xlat
rorb
inc
inc
leave
enter
pop
xlat
jno
and
arpl
rcrb
pop
jmp
outsb
mov
and
and
push
fidivl
cmp
std
jae
fwait
in
mov
or
dec
xchg
xor
dec
negb
fs
xchg
inc
fstpt
cld
imul
in
dec
std
ljmp
outsb
add
push
inc
jnp
movsb
leave
xor
adc
ds
jne
repnz
ss
je
dec
std
adc
pop
push
or
xchg
mov
mov
ljmp
inc
push
mov
jbe
outsl
mov
and
jle
popf
cwtl
lahf
inc
dec
push
adcb
notl
and
xchg
dec
aaa
cli
stc
insl
outsb
popa
mov
add
mov
inc
mov
xlat
mov
jecxz
shll
test
inc
push
sbb
sti
pop
inc
inc
jo
js
adc
mov
jne
iret
sub
xchg
mov
ja
popf
nop
mov
jp
test
sub
std
inc
dec
pusha
lret
leave
xchg
shrb
loop
mov
mov
add
or
dec
or
add
sahf
daa
mov
lods
pop
bound
rorb
add
cmc
or
jno
inc
or
pop
push
push
mov
jecxz
mov
push
ds
dec
repz
pushf
dec
loopne
pop
lods
mov
test
loopne
and
mov
es
in
sub
inc
or
sbb
movsl
adc
push
xchg
mov
mov
jle
outsl
rolb
mov
add
jle
dec
std
loopne
or
xor
adc
xor
push
hlt
xorb
xchg
pop
test
inc
xchg
add
pop
cmp
cld
mov
jo
xchg
sbb
adc
inc
push
push
aam
mov
xchg
add
ret
das
fwait
push
ds
dec
cwtl
out
sti
and
outsl
jae
cltd
faddl
dec
pop
or
mov
pop
adc
hlt
pop
cmp
xorl
loop
and
or
psrlq
loope
bound
add
repnz
push
mov
dec
or
adcb
xchg
scas
mov
shl
inc
cmp
and
data16
sub
leave
pop
imul
fiadds
cmp
cwtl
jmp
pop
outsl
jb
mov
cmpsb
mov
or
sbb
sti
shr
push
pop
das
jo
and
dec
sub
outsb
test
add
jne
inc
and
jns
add
or
xchg
fsts
xor
sub
push
jo
jmp
imul
push
shll
bound
sbb
test
jmp
pop
andl
cmpsb
fistl
arpl
cmpsl
mov
xchg
and
mov
dec
add
mov
sub
add
jge
add
cmp
jne
push
arpl
push
outsl
inc
adc
mov
or
pusha
and
mov
lods
andb
mov
adc
stos
test
xchg
add
cmpsb
inc
and
inc
mov
inc
fsts
clc
popa
fdivs
jb
add
mov
testl
mov
int3
rorb
push
enter
dec
aas
iret
xchg
test
sub
mov
push
dec
pop
mov
sbb
in
sub
outsb
scas
push
ljmp
mov
push
xchg
push
fimuls
sub
daa
in
mov
ja
ljmp
mov
lcall
fdivrs
xchg
pop
int3
sub
xor
loopne
loop
jle
mov
aam
fwait
xchg
push
push
or
into
mov
dec
dec
mov
add
adc
test
ficomps
inc
mov
leave
mov
ds
sub
sbb
sub
dec
mov
es
adc
rcrl
inc
mov
les
adc
mov
stos
mov
int3
lret
mov
mov
adc
inc
push
clc
into
scas
loop
out
ret
or
mov
jl
loop
push
test
mov
xchg
push
popa
add
jecxz
hlt
stos
pop
and
and
jae
idivl
xchg
jnp
rcll
into
xor
push
mov
adc
in
mov
out
cmp
jns
je
int
sub
xor
jl
add
idivb
mov
xor
xor
push
sbb
sub
shlb
push
pop
sbb
adc
fistpll
xchg
pop
lods
incl
sahf
pop
es
push
xor
or
mov
aam
loope
cmpsl
xlat
add
mov
xchg
xchg
pop
mov
adcb
sub
ror
fwait
mov
int
shr
shl
mov
insb
sbb
adc
pop
shll
sub
pop
push
test
pop
jmp
jns
pop
sub
hlt
mov
inc
stos
xchg
dec
aas
lds
or
pop
dec
or
addr16
inc
les
push
je
or
push
sbb
jnp
imul
mov
xchg
mov
sub
cmp
xor
cmp
popf
mov
mov
cmp
jo
adc
mov
jne
mov
cmpl
jb
loop
outsl
push
mov
pop
inc
cmpsb
nop
int3
xchg
xchg
or
or
dec
pop
xor
cltd
aam
mov
testb
cmp
sub
xchg
imul
push
pop
and
mov
add
addb
jle
icebp
sub
out
xchg
out
jae
pop
js
cmp
lea
inc
adc
mov
cmp
jne
andl
pop
loope
push
shl
or
pusha
stos
mov
jp
enter
xorl
notb
jecxz
pop
ror
jmp
in
xchg
xorb
mov
es
pop
mov
lea
adc
lods
sbb
into
jmp
adc
mov
mov
in
insb
cmp
pop
insl
pushaw
jl
rclb
or
adc
mov
mov
sub
and
sbb
cltd
lock
inc
mov
jo
push
scas
scas
jl
nop
stos
cli
or
sbb
xchg
test
bswap
mov
xlat
and
xchg
loopne
cmp
or
add
or
fsub
std
imul
inc
lods
pop
fldt
add
inc
lahf
push
jle
push
sbb
mov
push
cmp
pushf
jb
out
or
jge
mov
scas
je
dec
jmp
sub
sub
pop
pop
aaa
push
inc
xor
mov
mov
lret
mov
adc
mov
cltd
and
ret
or
mov
mov
xor
js
cli
adc
push
mov
ja
leave
cwtl
icebp
cmp
pushf
and
stos
xchg
push
popf
insl
fldl
sbb
inc
outsl
nopl
rcrl
imul
loopne
push
xor
and
rclb
pop
rcrb
inc
push
jge
adc
fmull
xchg
stos
aam
divb
mov
mov
xor
lcall
pushf
in
inc
hlt
xchg
in
mov
ja
lods
mov
ret
test
mov
hlt
shlb
pop
pop
dec
lods
daa
arpl
push
inc
dec
mov
inc
fisubs
dec
shlb
xchg
hlt
cs
lret
outsb
cmpsb
inc
mov
fildl
jg
add
ret
xchg
lds
out
ja
push
sbb
push
call
cmp
adc
xchg
xchg
subb
mov
xchg
jmp
mov
mov
daa
fs
in
xor
adc
cmp
sub
nop
iret
mov
leave
in
inc
adc
ja
mov
hlt
mov
cmp
add
insb
inc
mov
jnp
sub
adc
outsb
imul
fstps
lock
adc
orb
icebp
lods
insb
pop
adc
mov
movsl
psrld
jmp
add
lret
and
fcomps
notb
pop
lret
and
inc
js
dec
repz
inc
jo
cmp
and
js
add
addb
cli
lods
aas
pushf
repnz
xchg
shll
inc
push
into
add
repz
xor
cmpsb
icebp
mov
fildl
jne
iret
in
adc
xchg
fwait
cmp
arpl
fldenv
stc
cmp
sbb
jo
mov
inc
cmp
xchg
inc
mov
lea
out
mov
roll
add
adc
and
inc
cmc
xor
dec
and
add
ret
xchg
jp
inc
lahf
mov
push
aad
mov
push
sbb
imul
pop
rol
movsb
add
mov
repnz
add
repz
mov
gs
imul
inc
in
jl
stos
pop
out
enter
clc
adc
push
fwait
or
sub
loopne
and
fisubl
iret
je
pop
fld1
xorl
popf
fidivrl
xchg
subb
addr16
dec
decl
pop
jb
ffreep
in
aaa
movsl
cmp
repz
lret
xchg
mov
dec
movsb
sbb
adc
js
cli
addr16
cli
add
les
repz
loope
inc
cmp
sub
jnp
ret
test
and
ljmp
sub
pusha
mov
dec
pop
pusha
ror
xchg
pop
or
push
cmp
test
mov
and
imul
mov
mov
and
out
pop
stos
jecxz
or
cmc
loop
aad
xor
mov
mov
insb
pusha
popa
pop
jge
mov
sub
dec
xchg
pop
and
sub
lret
xchg
stos
fwait
stos
jge
hlt
sti
js
enter
push
jbe
mov
xchg
xchg
cli
dec
dec
push
test
jne
scas
xor
lret
adc
push
mov
mov
dec
sub
sbb
and
add
lahf
or
cmpsl
pop
outsl
jns
cmp
loop
dec
ret
or
scas
xchg
or
jle
and
push
movsb
adc
push
push
xchg
lret
test
repz
sub
sbb
ret
sbb
adc
js
sti
clc
gs
push
sub
xor
das
xchg
or
stos
ss
ret
adc
cs
add
iret
scas
repz
icebp
cli
jl
push
js
sbb
mov
stos
incb
movsl
ficoml
cmpsl
push
xor
lret
push
mov
mov
sti
icebp
inc
popf
inc
cmp
cs
xchg
jo
mov
in
aad
sbb
stos
lds
je
sbb
or
sbb
rcll
or
xchg
or
repz
aas
push
adc
jbe
ljmp
jbe
stos
dec
imul
pop
mov
idivb
pop
xchg
out
sub
sub
int3
fsts
fldenv
xchg
mov
cmpsl
sub
jmp
jnp
mov
adc
iret
add
andl
ss
xchg
fildll
mov
test
xchg
jbe
mov
dec
dec
repz
in
into
sbb
cmp
mov
movsb
mov
mov
aas
repnz
and
or
cmp
jnp
inc
add
test
sarb
stos
mov
bound
ja
mov
repnz
test
lret
pusha
dec
push
cmp
stos
sub
xor
imul
jecxz
add
xor
addb
pop
enter
movsl
popa
aad
insl
push
out
movsb
push
outsl
lds
loop
js
nop
aam
dec
ja
and
gs
cld
aas
or
pop
pushf
hlt
mov
mov
leave
jge
pop
cli
xchg
cmp
mov
or
mov
and
mov
dec
dec
jb
inc
mov
test
mov
jne
dec
out
push
xor
sub
adc
clc
dec
popa
fwait
dec
inc
xor
rolb
cmpsl
jge
push
jl
clc
shlb
dec
fs
cmpsl
aas
scas
mov
and
out
adc
frstor
push
and
into
mov
rcll
lret
shlb
mov
push
in
mov
loopne
dec
mov
add
inc
or
lods
loop
pusha
sub
popf
jne
pop
mov
je
pop
lret
jbe
int3
cli
imul
and
stc
push
scas
push
fiaddl
add
ljmp
mov
adc
mov
add
and
mov
dec
shll
fisttps
jge
js
adc
xchg
jo
pop
cmp
xchg
bound
cltd
sbb
popf
jbe
pusha
insl
jge
or
mov
out
push
es
cs
xor
sbb
cltd
movsb
mov
popa
data16
add
sti
xchg
aas
and
pop
test
push
pop
test
xchg
rcll
add
add
xor
je
jns
test
fwait
xchg
out
xor
inc
sub
dec
inc
sbb
dec
cmp
xor
mov
enter
xchg
mov
je
pop
add
add
xor
and
xchg
xchg
jmp
repnz
les
mov
adc
mov
inc
mov
sbb
inc
into
int
repz
pop
pop
jp
repz
jno
xor
cmp
fst
inc
in
add
push
daa
aad
mov
pop
and
test
out
in
lods
shll
icebp
adc
mov
push
loop
sub
cltd
xor
cmp
jge
cld
lahf
jmp
lock
outsl
rcll
sbb
mov
test
pop
adc
cltd
call
aam
mov
idiv
and
aaa
sbb
or
xor
push
mov
cmp
inc
push
pop
iret
scas
lock
fwait
xchg
inc
cmc
fldl
xor
das
data16
pop
pop
inc
cwtl
cmp
add
push
ljmp
movsl
daa
xor
or
andb
jg
jp
test
fsubp
adc
in
cmpsl
in
lock
inc
cmp
into
mov
popf
sahf
xchg
test
or
cmpsl
push
push
imul
dec
lock
mov
cmc
std
xlat
xor
mov
in
scas
jg
aad
pop
scas
js
sbbl
fdivr
imul
fdivl
data16
sarl
and
mov
jp
daa
inc
cwtl
sub
std
call
sub
int
int
scas
mov
mov
movsl
add
jl
jo
arpl
loopne
mov
jno
cmc
data16
lret
xor
xor
sub
mul
call
sbb
dec
ja
mov
xchg
dec
jg
cltd
mov
cs
shll
mov
cli
fs
cli
dec
in
xchg
xor
sbb
sbb
xchg
cs
xchg
sbb
mov
push
push
mov
icebp
and
sbb
scas
inc
dec
add
cli
mov
movsl
ret
sbb
mov
jb,pn
int3
popa
lahf
mov
jle
cmp
pop
mov
and
sbb
mov
insl
xchg
pop
insb
daa
sti
arpl
jp
pop
xor
cmp
and
xchg
and
mov
outsl
sub
gs
mov
sbb
lret
cld
outsl
ficoml
cmp
sub
mov
ljmp
imul
mov
rolb
test
dec
inc
mov
or
stc
dec
or
sub
or
popf
in
loop
xchg
into
or
ret
mov
mov
cs
or
adc
mov
and
cmp
xchg
cmp
shl
pop
pop
loope
loopne
repnz
decb
xchg
in
add
mov
in
aam
jne
les
movsb
mov
cmp
adc
scas
clc
in
push
xchg
inc
dec
mov
mov
imul
cs
cltd
jp
inc
hlt
inc
xchg
cmp
mov
mov
loop
xor
aas
insb
cmpsb
or
enter
fld
and
mov
pop
lcall
frstor
scas
push
out
or
mov
ja
mov
xlat
pop
mov
call
lea
aad
jbe
stc
jp
jp
sub
push
ret
mov
mov
xor
out
in
cmpsl
stc
pusha
pop
pusha
das
push
add
lret
leave
inc
mov
movsb
and
hlt
xchg
add
sar
pop
mov
fcompl
push
xorl
xor
xchg
push
pop
push
and
lock
neg
insb
adc
sbb
outsl
hlt
mov
es
test
hlt
fidivrl
cmp
mov
lds
int
mov
jge
jp
xchg
dec
sub
cmp
call
pop
and
mov
shrl
push
pop
test
divl
jp
or
xchg
add
mov
xchg
cmpl
push
rcll
icebp
cmp
in
jg
sbb
bound
fsubrs
fdivl
aad
test
jge
pop
ljmp
cmc
cmpsb
fwait
jg
lods
push
adc
cs
xor
cmc
push
call
mov
shll
int3
inc
dec
test
xchg
lret
mov
in
mov
pop
and
pushf
xchg
cli
sub
mov
sub
mov
push
in
add
mov
sub
or
push
push
sbb
scas
jae
pop
mov
idiv
icebp
xor
or
cmp
jle
ss
sub
insl
out
jmp
shr
clc
xlat
jmp
mov
adc
push
add
adc
movl
lret
and
jecxz
or
fdivl
stc
icebp
popa
jmp
sahf
jmp
enter
dec
mov
mov
mov
push
inc
loop
in
outsb
mov
shrl
hlt
mov
mov
in
insb
sbb
sub
xchg
bnd
lods
imul
cmp
std
cmp
mov
cmpsb
jmp
int
jge
call
or
jle
pop
lcall
xchg
mov
mov
dec
pushf
sbb
mov
push
mov
push
sbb
je
out
jo
push
or
das
lret
js
or
lods
out
inc
xor
into
in
or
inc
hlt
dec
mov
test
cmpsb
into
push
mov
sbb
aas
fsubrl
fsubp
je
int3
shr
int3
mov
rcrl
push
sub
sbb
mov
push
dec
mov
mov
add
cmc
dec
mov
rcrl
mov
inc
inc
fdivrl
jp
mov
mov
mov
int3
and
subl
jbe
imul
push
jne
shlb
gs
loop
pusha
in
in
fwait
jo
sbb
clc
sub
icebp
cld
fstpt
hlt
adc
sbb
sbb
jmp
cld
mov
mov
iret
lods
lods
mov
repnz
popf
es
test
in
xor
cmp
jecxz
cmp
xchg
scas
sub
pop
adc
mov
ss
aad
movsl
xor
loopne
inc
call
mov
into
push
sti
mov
jbe
push
divl
dec
dec
cli
xchg
mov
mov
sub
or
in
push
into
or
bound
cmp
adc
iret
test
rclb
les
sbb
xchg
nop
jle
cmpb
inc
cmpsl
dec
mov
mov
lret
inc
push
scas
popf
adc
leave
mov
pusha
cmc
mov
int
sarb
push
push
inc
incb
push
jo
push
icebp
fcmove
adc
xchg
mov
pop
in
pop
stc
outsl
mov
and
test
fwait
xchg
cld
pop
aam
mov
scas
je
cltd
dec
loop
aad
jecxz
divb
shrl
sbb
sub
loop
rcr
mov
aam
mov
rorl
xor
neg
int
cmpsl
arpl
in
pop
shll
scas
add
nop
mov
cmp
daa
movsl
mov
bound
nop
test
cmpsl
jb
lods
fimull
xchg
aaa
jl
test
jl
push
pop
sarl
das
pusha
in
mov
jns
or
xchg
mov
sub
xchg
arpl
push
dec
lods
jecxz
or
addr16
pusha
add
stos
sub
movsl
xchg
insb
pop
push
jb
out
push
adc
pop
stc
jmp
inc
adc
ds
jmp
inc
dec
dec
ss
dec
lcall
loop
cmp
enter
jo
subb
dec
addb
iret
pushf
shrl
imul
gs
xor
dec
lds
add
fadd
mov
in
mov
or
sub
loopne
add
dec
mov
xchg
push
mov
mov
in
je
and
aas
loopne
push
push
cmp
push
gs
adc
sub
and
arpl
mov
loopne
mov
mov
push
fisubrl
sti
xchg
aas
mov
mov
stos
xchg
inc
jb
inc
cmpsl
push
popa
imul
cmc
push
ja
in
outsl
mov
fcomps
xchg
fstpl
out
lds
push
movsb
sbb
push
lcall
imul
js
mov
pop
adc
pop
lahf
aas
xor
jge
sbbl
imul
imul
icebp
sub
shr
and
jns
xor
lock
rcrl
call
sbb
push
and
inc
adc
clc
mov
add
or
lcall
rclb
sub
dec
clc
fcmovb
icebp
pop
pusha
xor
mov
call
push
nop
mull
lock
ja
or
push
pop
adc
enter
rclb
iret
pop
jl
xor
jns
xor
fwait
lret
sbb
scas
sbb
add
jb
mov
inc
mov
cmp
dec
ljmp
mov
xlat
rolb
lret
leave
mov
les
jg
xorb
ljmp
leave
jae
push
rcrb
shlb
inc
sub
and
repz
pop
xor
int3
xchg
imul
push
aas
testb
call
movsb
pop
mov
add
xchg
mov
inc
clc
inc
mov
cmp
clc
rorb
mov
iret
shld
inc
inc
pop
aad
inc
sub
xchg
xchg
mov
jno
test
outsl
sbb
and
push
aas
cld
fmuls
andb
lahf
inc
push
add
sbb
insl
sahf
insl
bound
in
xchg
jmp
jbe
xchg
int3
add
jb
sub
xchg
mov
xlat
push
fimuls
repnz
sbb
xor
mov
test
pop
test
cmp
nopl
sahf
pop
lea
addb
pop
sub
or
jl
mov
test
inc
xchg
pop
push
in
mov
and
pop
xchg
das
or
jl
movsl
hlt
das
mov
pop
adc
xchg
sahf
inc
int
cmc
lods
push
sub
add
bound
shll
stos
popa
das
sub
mov
test
cmp
add
in
imul
jno
hlt
add
mov
test
scas
inc
imul
push
in
sarl
js
mov
fs
jae
inc
iret
mov
jbe
jle
clc
fnstsw
cmp
cmp
lret
jae
repnz
repz
fiadds
out
movsb
jnp
lods
das
inc
push
push
jns
mov
xchg
out
dec
dec
jecxz
push
stos
cmp
sbbb
and
clc
or
int
je
out
outsl
stos
mov
add
fildll
push
int3
sub
mov
adc
add
mov
mov
push
inc
lods
leave
mov
out
lcall
aad
std
sbb
cmp
push
inc
mov
out
ret
insb
push
stos
add
pop
fdiv
je
xor
in
mov
paddq
cmp
ja
xchg
lahf
add
push
decb
push
jp
cmp
scas
icebp
mov
push
cwtl
mov
or
nop
gs
pop
std
pop
pop
imul
lods
subb
jns
mov
subb
sub
out
out
cwtl
cmpsb
push
inc
or
int
mov
fadds
int
pusha
or
mov
cmp
sbb
movsl
xchg
mov
xchg
in
insb
movsb
xorb
or
pop
lcall
outsb
jno
loop
adc
pusha
push
and
jmp
and
sbb
mov
and
lock
jb
cmpsl
pop
clc
loopne
pop
pop
xor
adc
mov
xchg
push
daa
cld
mov
add
mov
and
jae
mov
das
sarl
aad
popf
xor
sti
mov
fidivrs
jae
jno
add
mov
popf
xchg
les
dec
pusha
cltd
push
cmpsl
lret
je
shr
loope
std
cmp
js
insb
cwtl
sub
stos
pop
add
inc
into
cmp
scas
lea
inc
mov
inc
push
mov
pop
sbb
arpl
sbb
ljmp
mov
or
jle
or
mov
mov
outsl
sbb
pop
setne
or
test
sub
xor
hlt
outsl
hlt
movsb
aas
cld
inc
int
lcall
cwtl
mov
and
add
xor
or
dec
mov
aaa
jecxz
pop
jg
cli
leave
push
imul
mov
repz
sub
push
mov
lods
or
scas
jne
lock
pusha
pusha
mov
mov
xor
aad
mov
lds
decl
arpl
xor
mov
sbb
mov
xchg
pop
movsb
push
lods
cmpsb
lahf
push
xchg
sbb
fs
mov
xlat
es
cmovs
shlb
adc
add
adc
push
push
int3
adc
push
pusha
or
mov
push
rcr
pop
iret
or
shlb
mov
fcoml
sbb
rclb
mov
adc
sbb
adc
mov
lret
mov
arpl
pop
xchg
mov
pusha
das
mov
into
sbb
xlat
jl
loop
dec
dec
push
xor
in
mov
pop
fisttpll
out
sub
rcll
pop
enter
je
push
inc
ret
mov
lahf
sti
push
jbe
sti
pop
adc
movsb
lock
dec
pop
mov
xor
jae
icebp
pop
fmuls
jno
lods
sub
mov
or
das
inc
xor
pop
or
cmp
ja
pop
fdivl
jge
dec
fwait
ret
lods
and
xchg
jo
test
pop
adc
adc
lds
push
xor
rcrb
pop
inc
enter
add
pushf
jg
das
aas
repnz
pop
or
push
mov
out
ret
cmp
clc
dec
hlt
lret
in
out
pop
data16
push
or
orb
fsincos
xor
in
push
ret
jmp
sbbl
pop
sahf
sbb
pop
mov
bound
push
cmp
xchg
push
adc
gs
pop
cmpsl
jb
mov
lods
pop
mov
inc
mov
cld
or
dec
movsb
xchg
mov
jp
cli
inc
sub
cmpsl
test
inc
ja
in
add
adc
mov
rcrb
pushf
push
ja
nop
lahf
push
mov
sbb
jge
mov
ficoms
fiadds
xor
add
fsubs
clc
mov
sbb
adc
mov
add
and
dec
stc
adc
jae
call
xor
insl
mov
dec
lahf
xor
mov
jae
xchg
dec
int3
cltd
push
sbb
cli
add
imul
mov
data16
mov
test
jb
sub
push
int3
adc
mov
shrb
adc
icebp
mov
sbb
les
xchg
loopne
fadd
or
test
aam
loop
inc
pop
ret
and
inc
arpl
push
xchg
gs
test
dec
xorb
test
fidivrl
jbe
lock
xor
icebp
lock
mov
aaa
loopne
pop
ds
inc
sub
or
jl
mov
and
test
push
nop
neg
fldenv
push
inc
lods
in
les
cmpsb
loopne
or
clc
outsl
rcl
mov
jmp
dec
xchg
xchg
jo
xchg
sbb
jecxz
bound
icebp
mov
cmc
pop
or
and
sub
vcvtss2sd
movsl
mov
stos
iret
inc
adc
xchg
testb
into
outsl
lock
mov
outsl
je
cmp
jnp
cmp
sub
ljmp
orps
cmp
dec
xchg
push
jmp
add
pop
xor
lahf
fbstp
xor
xchg
shll
cli
inc
ret
fwait
push
pop
pop
cmp
push
mov
mov
jb
sbb
imul
je
popf
and
xorl
movsl
call
pause
or
sbb
bound
pop
mov
mov
mov
or
out
nop
test
ret
scas
or
es
aas
arpl
lock
xchg
dec
and
icebp
std
mov
cmp
pop
cmpsb
cmp
test
mulb
jne
inc
hlt
sub
sub
push
xchg
inc
leave
cmp
push
mov
fsub
icebp
dec
add
in
mov
fidivrs
mov
jl
ret
mov
push
jge
lcall
scas
negb
cltd
enter
popa
test
int
enter
out
icebp
inc
nop
loop
jne
dec
popf
aam
int
sbb
gs
pop
inc
jge
cmp
ljmp
pop
mov
mov
xchg
cmp
or
pop
loope
lods
iret
sbb
mov
out
ror
aad
mov
cmc
cs
xchg
cwtl
and
push
add
daa
inc
or
and
inc
das
mov
xor
call
int
add
push
sub
cmp
or
aaa
shr
sub
mov
arpl
push
popf
mov
shll
mov
pop
xor
je
add
out
sbb
mov
push
cmp
mov
loop
js
and
mov
xlat
jecxz
lahf
pop
inc
pop
fucomi
cmc
or
pop
sub
icebp
rcll
leave
sbb
mov
pop
gs
aad
test
insb
inc
sub
push
bound
pop
mov
cmc
add
mov
jp
adc
xor
pop
push
icebp
dec
out
adc
cmpsl
loope
pop
mov
jnp
pop
loope
insb
sub
loopne
sbb
mov
fistpl
call
push
jl
pop
push
inc
and
inc
xor
loop
loop
add
nop
pop
es
adc
jo
stos
movsb
cmp
mulb
adc
cld
popa
push
xorl
outsl
ficoml
and
das
adc
shrl
fs
das
jnp
ljmp
insb
mov
adc
lret
mov
es
sar
jno
bound
push
pusha
out
cmp
aad
stos
mov
add
aam
addl
imul
stos
xor
pop
cmp
frstor
ret
faddl
nop
sbb
cltd
mov
add
add
dec
movsb
mov
xor
xchg
stos
jo
insl
push
andb
add
repnz
push
inc
adc
jnp
dec
fsts
push
ds
cld
popa
hlt
mov
dec
fidivs
inc
loop
push
cld
sti
cmp
movl
pusha
sbb
lcall
psubsb
subb
xchg
imull
pop
addr16
cmpsl
icebp
jne
lahf
jo
dec
push
out
push
push
cmp
mov
cmc
insb
gs
insb
pop
mov
pop
call
jg
sbb
arpl
jno
sbb
je
stos
lock
lds
push
pop
fs
out
ret
aaa
adc
shll
clc
inc
mov
push
imul
popf
jp
xor
jge
movsbl
scas
jne
xchg
add
push
jl
sub
shlb
cmp
imul
cmp
push
xchg
stos
popf
loopne
movsl
movsl
gs
mov
in
push
sarb
cmp
sahf
push
pusha
loop
icebp
out
xchg
test
mov
push
fiadds
call
out
aas
cmp
daa
test
lret
and
in
jae
cmp
push
subb
outsb
in
pop
cmp
jmp
notb
int3
push
and
mov
jg
lods
into
lret
dec
add
push
mov
mov
xchg
lock
mov
mov
and
cmp
out
mov
jl,pt
dec
sbb
das
or
mov
xchg
jbe
push
cmp
test
cmc
mov
repnz
jmp
mov
aam
jg
mov
dec
push
sub
lret
jns
jge
xor
and
js
add
jae
popa
loopne
lcall
es
adc
xor
jge
mov
rolb
xchg
mov
push
add
mov
sub
pop
mul
int
test
cmp
cmp
fistpll
leave
xor
mov
pop
mov
dec
sahf
mov
insl
outsl
jge
pop
push
pop
mov
adc
jae
mov
std
in
out
mov
jbe
dec
insb
or
popf
jo
cmc
pop
xor
sbb
shl
xchg
aad
pop
mov
in
xor
sub
jg
in
xor
pusha
inc
mov
addr16
jnp
pop
inc
inc
pop
out
add
in
inc
sub
sub
mov
fisubrs
sbb
sbb
lahf
xor
mov
xor
dec
sub
rcrl
fs
gs
or
mov
iret
mov
and
daa
daa
or
shrb
jnp
and
pushf
setne
adc
mov
xchg
or
mul
jne
sub
mov
mov
xchg
jb
test
push
adc
inc
pop
addl
nop
xor
pop
bnd
mov
dec
sub
mov
cmp
push
test
add
les
cmp
lret
imul
movsl
push
shrl
enter
int
or
outsl
es
int3
stos
jge
call
mov
add
mov
aam
test
sbb
cli
test
adc
adc
xchg
or
insb
xlat
sbb
bound
ss
insl
imul
cmp
rolb
fs
or
push
cli
sahf
leave
cld
pop
xchg
cmp
hlt
mov
loopne
add
clc
jne
cmpsl
pop
dec
jecxz
repz
les
stos
mov
data16
lret
movsl
sbb
in
cmc
icebp
or
sbbb
sbb
mov
mov
rcr
sub
mov
xor
pop
loopne
fcom
int3
xlat
xchg
test
out
dec
cmp
cwtl
int
hlt
ds
repnz
ds
repnz
mov
into
iret
push
test
sub
rol
add
jecxz
push
in
dec
outsl
sub
add
mov
and
fldl2e
outsb
mov
adc
adc
arpl
pop
push
cmp
inc
sbb
mov
fbstp
mov
or
test
and
imul
call
jmp
mov
pop
pop
divb
clc
out
enter
mov
xor
add
lahf
stos
mov
shlb
out
sti
pop
sub
test
jns
std
mov
mov
cmpsb
and
push
jge
push
pop
add
cmpsl
movl
and
push
add
int3
adcl
sub
jmp
xchg
sbb
push
ret
jg
pop
fisttpll
mov
adc
cmpsb
or
std
xchg
adcl
push
test
call
insl
push
sub
adc
pop
push
ret
sub
pop
sbb
lods
dec
cmpsl
in
dec
in
or
inc
sub
fnstsw
das
std
cld
ds
decl
mov
movsl
ljmp
sub
fwait
cmp
imul
or
sub
jno
mov
cmp
shll
mov
push
orb
loope
fdivl
mov
in
dec
jl
shlb
sbb
mov
popf
ret
leave
or
ja
in
mov
jnp
jl
mov
into
jge
pusha
push
sub
sub
pop
jbe
sahf
lds
mov
mov
push
insl
sub
rcr
xchg
adc
mov
jl
out
mov
movsl
call
stc
xchg
mov
or
iret
aas
mov
xor
movsl
loop,pt
mov
pop
xor
sbb
mov
and
or
sbb
loope
cmpsb
adc
loopne
fistl
mov
xor
in
sub
dec
pop
adc
mov
clc
rolb
jle
pop
inc
mov
add
sahf
xchg
dec
or
mov
aas
push
pop
leave
fidivl
jecxz
xchg
int
inc
clc
repnz
fs
adc
cwtl
lcall
fsubrs
xchg
xchg
push
aad
rcrb
in
fidivrs
cld
jo
fcmovnu
dec
push
ja
mov
out
jnp
iret
stc
stos
cmp
pusha
or
sbb
rcrb
add
aas
mov
into
popf
mov
fs
test
sbb
and
push
add
mov
and
test
add
jecxz
sub
popa
sbb
add
cld
leave
call
and
into
imul
cmovnp
xlat
lret
sbb
test
rcrb
test
lcall
insl
add
jmp
sub
jge
movsb
jp
daa
arpl
jno
ja
xor
or
stc
or
stos
cwtl
push
or
insb
ror
divb
test
pop
dec
jmp
repz
adc
pop
mov
mov
ret
pusha
out
mov
data16
jmp
lret
ret
out
stos
js
stos
xchg
sbb
test
dec
pop
loopne
pop
xchg
mov
push
push
out
into
jmp
lahf
pop
out
or
jl
xor
push
ljmp
inc
lret
sub
and
mov
jae
ds
clc
call
testb
nop
arpl
lods
pop
bound
mov
pop
adc
inc
sub
dec
xchg
xor
pop
int
pop
outsb
xchg
add
mov
sbb
loop
and
cwtl
sub
xchg
scas
inc
and
mov
adc
jl
adc
jb
mov
inc
mov
sub
lret
les
xchg
int
mov
dec
loopne
inc
cli
clc
adc
mov
inc
fnclex
jbe
subb
adc
mov
jne
ret
sub
dec
dec
adc
dec
imul
inc
sbb
stos
push
imul
testb
jne
in
cmp
sahf
sub
or
mov
push
mov
sub
pushf
pop
in
sub
std
push
jle
insl
mov
popf
mov
rcll
mov
jge
jno
sub
clc
mov
loope
imul
add
clc
sub
cmp
test
xchg
aad
cmp
in
mov
mov
mov
stc
mov
popa
cmp
xchg
inc
dec
sbb
sub
and
shrl
cmp
clc
cmp
pushf
insb
xor
inc
push
ss
xchg
lods
aaa
int3
jno
arpl
shrl
int
cmpsb
xchg
or
in
mov
ss
lock
jmp
dec
add
das
cmpsb
cwtl
push
mov
dec
icebp
adc
xchg
sbb
std
or
bound
jb
or
jno
popa
mov
xor
sub
inc
dec
or
mov
outsb
cltd
js
iret
xor
sbb
sub
add
aad
pop
jno
sub
fstl
cmp
cltd
jnp
iret
sarl
test
add
aad
mov
loop
lret
aas
pop
jle
adc
cmp
iret
cli
adc
test
mov
add
data16
aam
push
mov
repz
jecxz
mov
xchg
or
mov
mov
xchg
inc
rcrl
xlat
movsb
xchg
pusha
add
lds
lods
divl
hlt
inc
ret
movl
std
out
mov
push
jb
jbe
push
filds
rcr
add
cmp
pop
mov
add
pop
in
push
xor
sub
bound
inc
lods
aas
cmpsb
adc
pop
lcall
sbb
invd
or
rclb
push
adc
mulb
insb
notl
and
jbe
jp
int3
fwait
hlt
or
sbb
jl
and
out
push
ljmp
push
shl
pop
dec
movsl
cmpsb
pusha
es
movsb
mov
push
icebp
sti
sbb
pop
sub
add
jb
mov
dec
push
sbb
and
sub
test
fisubl
xor
in
xchg
sub
xchg
push
scas
sub
ret
pop
pop
icebp
out
pop
aas
loope
jne
push
pushf
sbb
lods
outsb
mov
ja
sub
lcall
pop
lock
mov
xchg
in
xorb
ja
sub
adc
adc
pop
aas
xlat
adc
lea
daa
and
test
xor
ja
pop
mov
roll
and
pop
add
cmp
inc
fwait
bound
lock
xor
pop
not
inc
addl
js
mov
lret
and
push
push
int
rcll
dec
mov
lods
pusha
imul
push
push
jae
movsl
aam
ds
xorl
mov
gs
xlat
cmpsl
cld
mov
imul
sub
sbb
inc
daa
in
jl
outsb
out
cmp
sub
jmp
xchg
xchg
imulb
sbb
cld
cltd
outsb
hlt
mov
inc
pop
pop
push
test
jle
rcrl
decb
aam
cvtdq2ps
dec
cmp
pop
adc
sub
jno
mov
xchg
pop
mov
push
inc
vmovupd
sbb
hlt
loope
outsl
add
mov
hlt
or
into
dec
mov
fidivrl
pop
mov
or
ret
bound
scas
dec
or
push
adc
or
stc
test
cmp
fidivrl
arpl
cmp
mov
sbb
sub
shrb
dec
fnstenv
xchg
inc
mov
jp
inc
aad
add
stos
jbe
enter
mov
add
jb
dec
pop
adc
loop
sbb
int3
dec
xor
add
adc
dec
ja
cmp
add
scas
cld
xor
xchg
cs
sub
dec
je
cld
scas
add
pop
mov
out
aad
xor
in
arpl
cmc
pop
cmp
or
es
fidivrs
insl
cmp
and
sti
xchg
addr16
jle
push
jp
loopne
cmp
mov
adc
sbbl
out
inc
jmp
fistpll
mov
or
decl
adc
mov
dec
jbe
mov
imull
sub
push
cmp
xlat
outsl
andb
mov
aaa
inc
mov
inc
gs
mov
les
stos
jmp
ret
dec
mov
sub
mov
mov
arpl
stc
loopne
in
int
jg
movsb
popf
aas
push
xor
sub
sbb
test
stc
or
cmp
pop
mov
es
fs
push
mov
enter
andb
pushf
push
lcall
pop
mov
pop
xchg
das
xor
or
push
xor
lods
inc
dec
jae
lock
xlat
loopne
fwait
adc
fstpt
int
add
xchg
lods
add
call
mov
push
or
std
dec
or
lods
pop
rcr
aad
inc
add
or
lret
jne
mov
icebp
and
dec
aad
fsub
mov
in
inc
aad
jl
xchg
orl
mov
add
inc
adc
inc
sarl
stos
ds
mov
sbbb
mov
gs
mov
xchg
rclb
inc
sarl
movl
mov
lds
or
pop
stos
int3
jne
lds
jne
lds
pushf
xchg
xor
in
shr
decb
jo,pn
jg
mov
sub
test
sbb
or
popf
fstps
sub
mov
dec
mov
in
push
xor
or
xchg
add
dec
nop
push
into
jno
sti
lock
xor
mov
or
mov
shll
sub
insb
jae
push
push
jnp
xchg
push
cmpsl
sbb
ret
sub
aas
xchg
jle
jnp
scas
outsl
test
mov
out
and
dec
mov
xorb
stos
or
cmp
imul
imul
ljmp
shlb
pop
nop
lock
pop
inc
cmp
mov
jnp
dec
icebp
inc
je
cmp
data16
push
jae
ss
mov
xor
fwait
pop
imul
fwait
in
pop
pop
jecxz
jp
sti
filds
sub
adc
sub
pop
pop
dec
ds
add
jnp
enter
je
lods
pop
shlb
jmp
sub
or
sub
push
push
lds
cmp
adc
jns
and
xchg
pop
bound
adc
fptan
lret
fcmovnu
xor
shr
andl
cmp
or
sub
rolb
jne
loopne
out
sbb
push
cld
mov
fstpl
mov
pop
aas
xchg
jno
add
xor
mov
adc
sub
dec
or
xchg
bswap
enter
mov
imulb
pushw
lock
loopne
jle
imul
push
add
cmc
fbld
pop
int3
xchg
out
int
pop
shl
fs
push
inc
ja
adc
jp
loope
sarb
out
filds
imul
jg
dec
arpl
out
out
mov
call
or
dec
xor
add
xchg
adc
mov
imul
dec
cmpsl
sub
pop
pop
inc
push
adc
mov
jp
lock
shrl
sarb
stc
add
push
xor
xchg
ljmp
clc
lahf
sti
and
push
loope
shrb
mov
adc
sub
in
push
in
push
imul
push
mov
xchg
dec
mov
mov
add
cmp
test
inc
xchg
adc
xor
sbb
dec
cld
shlb
lds
sub
lret
pop
pushf
pop
jno
jle
push
pop
popa
insl
cmp
sbb
lahf
sub
mov
dec
inc
popa
pop
cmpsb
push
xor
xor
push
ret
mov
stc
push
jp
mov
arpl
xor
xor
sub
scas
out
adcl
enter
inc
mov
jp
sub
cmp
mov
inc
aas
cwtl
mov
mov
mov
sahf
and
icebp
jmp
mov
ljmp
mov
cmpsb
and
mov
mov
fsubl
and
xor
adc
jno
mov
inc
jb
sub
or
popa
add
cmp
mov
test
inc
pop
push
nop
and
xor
or
ret
std
add
cmpl
push
leave
inc
mov
mov
movsl
add
dec
pop
cmp
jns
cmp
mov
push
fstpt
inc
fs
push
or
sarl
cld
std
xor
mov
outsb
ja
scas
imull
inc
inc
sub
stc
jmp
jg
enter
test
or
mov
sbb
addr16
adc
pop
arpl
cmp
xchg
jl
pop
sbbb
mov
inc
sub
es
sbb
and
pop
faddp
sbb
mov
div
or
mov
andl
sbb
mov
or
push
popa
mov
rcll
in
roll
out
mov
mov
pop
clc
inc
outsb
mov
das
inc
dec
jle
jae
jge
mov
push
jns
sahf
rcl
repz
and
cmp
jecxz
push
scas
ja
push
fstpt
js
iret
jno
movl
add
or
int
cld
aam
mov
push
cmpb
pushf
mov
xchg
sbb
pop
jae
mov
cmpl
sub
movsb
inc
xor
out
mov
mov
ljmp
dec
in
mov
icebp
rcl
and
imul
aam
lret
adc
add
bound
jbe
push
cmpsl
jns
bnd
bound
mov
iret
int3
sub
push
mov
or
shlb
aaa
repz
mov
pop
inc
jl
push
pop
mov
dec
data16
cmp
js
inc
push
inc
daa
jne
inc
orl
pop
mov
jo
aam
jg
in
dec
sub
and
adc
jmp
adc
and
mov
add
xchg
aad
inc
sarl
push
adc
lahf
in
loopne
test
cltd
xchg
lahf
cmp
in
push
jno
push
mov
push
mov
sbb
cmpsb
mov
push
imul
jl
loope
sti
or
xchg
pop
aaa
mov
xor
add
mov
sbbl
mov
xchg
push
into
ficomps
lahf
xchg
stos
je
sbb
add
flds
insl
stc
int
lret
or
in
mov
xor
lahf
ljmp
mov
jmp
or
ja
dec
xor
insb
shll
pop
push
push
push
mov
call
cmp
pop
rcrb
test
mov
adc
mov
hlt
jg
push
pop
cltd
sub
subl
js
div
push
mov
jb
dec
sti
and
jo
and
into
aam
pop
mov
les
or
icebp
out
push
mov
jge
pop
inc
call
cmpsb
push
and
adc
addr16
into
insb
or
xchg
mov
adc
sub
mov
rolb
arpl
cmp
jns
pop
mov
sbb
jmp
xchg
lock
mov
popa
shlb
leave
test
xor
divps
mov
lock
dec
andl
shlb
ror
fs
mov
add
rcrb
scas
dec
mov
fs
rcll
loope
fnsave
jno
adc
les
sbb
pop
ja
pop
repz
in
int3
stos
rol
stc
pop
inc
and
cltd
sub
cmpsb
into
arpl
push
arpl
push
in
mov
nop
sahf
dec
test
andl
jmp
adc
and
mov
pop
dec
cli
outsl
jbe
fldt
adc
jecxz
stos
outsl
popf
popf
mov
dec
pop
ret
je
sti
inc
lock
out
dec
mov
sbb
lret
cmpsb
jmp
xchg
xor
ljmp
xchg
mov
sarl
dec
rcrb
popf
xchg
in
dec
shl
mov
inc
rcrl
add
inc
or
pop
pop
test
and
pop
push
fildl
pop
enter
mov
dec
ja
mov
push
cmc
movsb
clc
xor
sub
adc
mov
test
lahf
rcrb
es
xor
popa
dec
pop
pusha
mov
jl
push
ficompl
lahf
addr16
jecxz
adc
mov
popf
cmp
mov
adc
nop
mov
dec
js
inc
iret
dec
xchg
sbb
mov
cs
sub
andb
push
or
lea
inc
push
jns
incb
lret
mov
sub
lret
dec
fcmovnbe
mov
xorl
ja
xor
lock
or
sti
push
in
movsl
lods
pop
outsb
addr16
mov
push
out
shrl
pop
scas
sub
cmpsb
sbb
sub
pop
push
jns
clc
mov
psrlq
cmpsb
and
mov
inc
ficoml
subb
inc
ficompl
dec
or
push
push
inc
ret
imul
push
lea
test
push
call
fldl
scas
fst
adc
xchg
jecxz
xchg
cmp
test
lcall
push
arpl
int
popf
dec
push
lret
shr
sets
mov
cmp
mov
push
pop
hlt
mov
testl
add
insl
into
adc
stos
mov
or
cmc
fst
pushf
mov
out
sub
dec
sahf
sbb
fsubl
push
xchg
int3
xchg
insl
enter
cwtl
pusha
sti
out
ss
aad
push
out
movsb
pop
and
dec
stc
aam
pop
repnz
or
mov
push
inc
jl
lods
push
sti
mov
arpl
jmp
es
pmulhuw
mov
mov
test
mov
std
xchg
das
dec
hlt
or
nop
jp
lea
fiaddl
push
test
test
les
jne
push
pop
cli
mov
cmp
negl
pop
pop
dec
fwait
ja
pop
daa
or
jp
add
scas
clts
mov
and
sbb
sub
insb
fdivs
push
mov
push
aaa
mov
scas
cmp
pop
mov
ret
stos
icebp
dec
dec
rcrl
loop
scas
mov
inc
popa
subl
and
mov
jg
mov
mov
sub
inc
dec
xchg
inc
push
fwait
popa
int3
cmp
cli
fucomp
add
aaa
cmp
jb
call
test
cmp
sbb
and
cmpsl
aas
icebp
dec
and
or
add
mov
test
enter
scas
dec
mov
xlat
cmp
dec
xchg
xchg
out
add
iret
xchg
mov
adc
jmp
ret
add
loope
xor
xchg
mov
sub
dec
mov
nop
mov
ja
xor
testb
xchg
mov
sub
adc
test
fadd
out
xor
sbb
mov
or
ficomps
shll
inc
in
jmp
mov
in
lahf
repnz
sbb
rorl
scas
imull
hlt
enter
scas
sub
inc
cmp
xor
xor
out
cmp
inc
sub
hlt
push
les
cmp
push
cwtl
inc
mov
mov
std
xchg
ds
adc
cmpsb
pusha
ret
and
lret
inc
pop
mov
ret
iret
ljmp
test
lret
jns
inc
hlt
pop
and
adc
paddq
fs
nop
rcrl
sbb
sbb
and
arpl
les
xor
jl
popf
inc
je
xchg
loop
cmp
cld
inc
xchg
jl
mov
fistpl
lods
negb
inc
fwait
pushf
lahf
push
jle
mov
lods
mov
cld
jb
dec
and
and
fadds
sub
jecxz
or
pop
lcall
aam
out
repnz
xchg
test
pop
dec
test
add
adc
add
lahf
aas
je
sbbl
stc
pushf
add
adc
fldcw
inc
popa
pop
sbb
sar
push
in
mov
jp
sbb
pop
aam
and
jbe
fs
movsb
inc
and
dec
or
ds
sub
mov
adc
ljmp
loope
xor
out
rclb
hlt
mov
fnstcw
adc
cmp
add
fnsave
rcl
push
mov
lods
sti
lods
or
push
xor
shrb
sub
testl
inc
dec
sub
addr16
iret
fistps
push
adc
jmp
add
xlat
ficoml
sbb
jmp
shll
int3
sub
cmp
or
jle
jnp
cld
ret
cwtl
int
jnp
rorl
sbb
xchg
pop
movsb
data16
or
dec
jno
mov
add
test
shrb
xor
shll
pop
jmp
push
and
add
pusha
ud2
dec
stos
popf
clc
fwait
iret
loop
mov
sub
add
mov
jmp
xor
mov
imul
xlat
ja
rcrl
sub
int3
rcrl
cli
sub
ret
repnz
xchg
pop
fcomps
popa
popa
and
pop
inc
xor
cbtw
jbe
push
dec
loopne
addb
out
pop
sbb
cmpsl
imul
sbb
int
stos
gs
ds
cs
pop
sub
out
fs
push
les
mov
les
cmp
aaa
shrb
and
xchg
pop
mov
loopne
outsl
or
mov
jb
fwait
xchg
stos
inc
mov
enter
ja
dec
test
cmp
ret
push
hlt
in
or
ret
pushf
cmp
ljmp
stc
negb
cmc
or
iret
iret
adc
outsl
loop
cmp
mov
dec
sbb
adc
mov
sbb
jp
pop
fmuls
into
ja
inc
jae
pusha
sub
add
hlt
xor
inc
in
imul
pop
shrb
outsb
rcl
xchg
lret
icebp
sub
mov
aas
mov
scas
cmp
ds
pop
add
jge
mov
sub
sbb
mov
cmp
and
xchg
scas
js
pop
mov
cwtl
leave
in
and
pop
sbb
je
pop
cmp
or
insl
cmc
cmpsb
mov
aad
mov
imul
adcb
int
pop
and
rcr
imul
sub
cmpsl
ret
in
mov
push
or
sub
adcl
fdivp
inc
mov
inc
in
fisubrl
repz
dec
pop
in
mov
jbe
sarb
repnz
mov
repz
xor
sbb
sbb
mov
dec
mov
lahf
ret
inc
cltd
add
orb
jno
mov
frstor
lret
xorb
push
push
push
push
test
jl
inc
pop
lret
dec
scas
xchg
sarb
mov
ss
pop
sub
dec
adcb
mov
add
call
or
mov
push
test
lea
jne
sbb
lret
movsb
pop
mov
pop
mov
out
out
dec
xchg
xchg
icebp
stos
xlat
stc
test
dec
add
cli
push
mov
test
cmpsb
lods
pop
imul
enter
mov
repz
addr16
mov
cmpsl
test
dec
mov
aaa
xor
loopne
decl
outsl
xor
dec
movsl
outsb
and
mov
adcl
cwtl
popa
jne
xor
hlt
insl
addr16
out
xchg
lcall
sbb
push
mov
cltd
or
cmp
jae
dec
repz
pushf
dec
movsl
lock
icebp
movsb
and
jns
in
dec
cmp
cwtl
ss
mov
cmp
sbb
shrb
mov
push
mov
es
sub
xchg
mov
fbstp
adc
mov
sbb
fsubrl
add
xchg
and
sbb
subb
add
pop
sti
clc
pushf
mov
and
cli
outsl
iret
mov
sarl
mov
mov
fcmovb
imul
sub
mov
sar
adc
mov
mov
xorb
mov
and
adc
jb
pop
sub
loopne
add
pop
in
lods
xor
and
clc
mov
adc
sbb
lret
insb
ret
shll
push
pop
lods
jnp
sub
pop
scas
lcall
adc
mov
into
sahf
jbe
xchg
push
cli
jo
cmc
sub
js
xor
or
lds
test
in
lds
sti
push
sbb
pop
je
mov
mov
into
cwtl
sbb
daa
add
jp
mov
push
mov
cmpsb
xorb
sub
inc
inc
inc
mov
jne
in
push
js
or
push
iret
push
inc
dec
mull
jbe
les
pop
jmp
outsb
aam
popf
mov
in
ja
push
or
test
outsb
out
ss
cmpsb
or
cmp
jne
movsl
push
jge
std
add
adc
test
out
repz
xor
ret
cmpsl
push
les
pop
pop
adc
in
mov
test
push
add
in
push
jle
shrb
shlb
sub
push
mov
dec
push
stc
mov
jge
mov
nop
xor
outsb
push
and
hlt
ja
and
push
aas
xchg
dec
inc
lds
sub
dec
out
jb
push
inc
std
les
imul
arpl
cmp
repnz
rcrb
leave
ret
test
mov
mov
or
ja
adc
push
mov
cs
testl
repz
sbb
movsb
jecxz
sahf
scas
dec
mov
fucom
in
js
popa
sbb
jbe
ds
cwtl
inc
in
jp
popf
mov
and
hlt
pop
rclb
mov
subb
jb
add
mov
mov
das
sub
scas
jmp
and
sbbb
mov
xor
pop
cmp
pop
scas
aam
ss
push
push
or
dec
inc
inc
xchg
into
mov
or
sbb
pop
add
and
testl
gs
fwait
shll
cmp
hlt
cs
push
sub
shl
out
in
lcall
sar
lret
mulb
sub
push
ss
inc
stos
sbbl
pop
or
push
lds
sbb
ds
jecxz
sbb
or
sub
xchg
sbb
jge
jmp
sub
fwait
pop
notl
ret
mov
je
mov
push
push
out
ss
sbb
inc
mov
dec
sbb
add
inc
sbb
add
sbb
cmpsl
mov
sub
and
movsl
cld
add
lods
adc
and
arpl
loope
dec
jns
in
les
fldt
add
pop
fs
and
sbbb
fsubrp
jle,pn
mov
clc
cmp
pop
sbb
sbb
mov
es
std
aam
movsl
xchg
sub
in
sub
mov
shll
mov
inc
daa
rorl
out
js
mov
pop
arpl
mov
adc
dec
mov
jge
or
sbb
stos
xor
dec
aad
sub
mov
imul
loopne
xor
test
mov
sbb
mov
jmp
inc
inc
mov
pop
imul
daa
fstpl
xor
test
orb
or
sbb
lea
jl
xor
ret
push
cs
mov
push
roll
or
xor
dec
stos
mov
lock
popa
and
mov
mov
mov
cmc
test
mov
pop
mov
clc
pop
and
and
mov
dec
pusha
sub
cmp
jb
mov
lods
in
push
adc
sub
pop
scas
adc
and
push
and
testb
pop
cmpsb
jb
sub
and
clc
adc
movsb
cmp
scas
js
sbb
imul
mov
pop
pop
lea
xchg
filds
push
pop
add
clc
jg
pop
fnstcw
and
pop
jb
cmpsl
mov
xchg
jae
inc
subb
outsl
pop
push
dec
das
lods
xor
sbb
je
adc
xchg
fs
ljmp
dec
js
sub
fcmovnbe
js
push
xchg
movsl
mov
adc
fbld
jl
data16
jb
mov
xchg
mov
push
push
mov
jmp
popf
pop
loop
dec
nop
jle
push
bound
jnp
sub
insb
popa
in
fs
push
rcll
ror
scas
popf
in
jne
mov
insb
lods
pop
aam
ret
lods
mov
cmc
xchg
add
dec
test
dec
jae
out
cld
fiadds
addr16
add
pop
xchg
stos
pop
lds
cmc
lret
loopne
int
mov
out
lods
lret
rol
sub
test
or
and
stc
pop
imul
push
mov
das
jae
repz
cmp
shrb
adcb
xchg
xchg
les
xchg
imul
loop
ds
es
hlt
push
repz
jge
mov
lods
mov
adcb
lret
xor
inc
mov
inc
adc
add
xor
dec
mov
lods
and
jmp
xchg
inc
jmp
call
repnz
pop
mov
mov
sbb
rcr
jbe
dec
rorb
cmp
sahf
inc
mov
das
dec
pop
xor
mov
icebp
mov
cmp
imul
test
cmpsl
out
sbb
arpl
add
out
mov
shl
mov
and
fcmovnb
inc
in
clc
mov
mov
arpl
ja
outsb
popf
cmp
jb
aad
insl
pushf
call
outsb
cmp
jle
shrl
xor
popf
xchg
or
dec
orb
mov
adc
stos
stc
ret
subb
jns
shll
push
std
mov
or
xchg
fstps
aad
loope
popa
mov
jbe
cmp
push
test
jg
stos
mov
xor
cmc
dec
cmp
xor
dec
pop
jb
push
sub
pop
cli
mov
cs
int
xchg
xor
mov
scas
sbb
xchg
fistps
cld
or
flds
pop
sbb
sub
arpl
mov
inc
sub
dec
and
cmp
jbe
or
pushf
xchg
mov
pusha
cmc
xchg
cmp
inc
mov
push
mov
sbb
pop
push
ret
pop
data16
lods
push
int3
ret
rcll
jbe
mov
mov
xor
loop
dec
mov
fcmovnu
fnstcw
insb
dec
sbb
leave
xchg
ljmp
and
nop
dec
jg
pop
and
mov
out
ss
sbb
insb
push
arpl
stos
mov
inc
inc
inc
pop
sbb
das
add
sahf
rclb
inc
rsm
cmp
pushf
mov
negb
adc
fnstenv
ficoml
sbb
pop
xchg
xchg
test
mov
insb
imul
cmpsb
adc
sub
xchg
insl
xchg
xor
mov
shrl
shlb
and
inc
fisttpl
call
push
mov
xchg
mov
aas
add
inc
scas
inc
jle
outsb
call
xchg
stos
push
stc
scas
push
ja
shrb
subb
imul
mov
lds
in
mov
mov
or
js
js
int
adc
loopne
aad
jo
and
mov
add
xchg
mov
add
cmp
jo
inc
loopne
pop
lods
inc
das
aam
hlt
inc
jbe
movl
dec
or
ds
jmp
push
mov
sbb
dec
ret
aaa
mov
cmp
mov
mov
rolb
adc
inc
pop
xchg
clc
dec
push
insb
jg
stos
dec
enter
test
fdivrs
es
lea
push
lcall
push
xchg
popa
sarl
lds
imul
cmp
rclb
and
fdivrl
xor
pop
add
and
xchg
and
stos
fldcw
insl
xchg
pop
int
inc
test
and
cwtl
mov
pushf
popf
xlat
xor
lock
cmp
pop
repnz
dec
lods
mov
cltd
test
hlt
mov
iret
fmuls
jnp
push
hlt
push
cltd
cwtl
jnp
sahf
ret
jmp
sbb
jg
mov
pop
sub
into
xchg
pop
pop
push
jnp
mov
jnp
xlat
xchg
or
mov
jp
mov
dec
std
inc
icebp
rcrl
mov
icebp
xor
lods
mov
or
pop
dec
loopne
shll
frstor
xor
movsb
movsl
in
xor
cwtl
adc
inc
pop
mov
sbb
pop
xchg
in
setb
bswap
cmpsl
and
mov
pop
cwtl
in
cmp
sbb
mov
je
dec
out
jns
inc
out
jge
jl
sbb
add
sbb
lret
ret
push
pop
mov
cmpsb
xchg
stos
rclb
jge
xor
fisubs
jg
jg
and
mov
not
ss
divl
ds
push
jp
or
dec
and
stos
pop
sub
push
mov
loop
jbe
push
mov
test
pop
xor
jns
adc
jl
cmp
push
into
lods
js
int3
mov
jne
mov
repz
rorb
test
jo
rclb
scas
inc
pusha
in
das
mov
dec
sahf
lods
push
cltd
daa
cmpsb
xchg
out
scas
mov
rclb
mov
xchg
scas
xor
and
nop
sti
sub
add
pop
pop
in
mov
sbb
nop
daa
mov
out
sbb
add
mov
dec
jne
jp
add
popf
in
cmp
scas
test
jle
sbb
popl
adc
jb
mov
xchg
jbe
jnp
popl
mov
or
in
mov
cmp
gs
leave
jno
mov
aaa
add
xor
xor
cwtl
add
jg
scas
cltd
or
ja
push
push
icebp
mov
adc
ficompl
aad
sbb
jle
adc
jns
dec
jecxz
xor
push
mov
sbb
cld
inc
or
adc
es
xlat
pop
inc
push
inc
pusha
cmp
outsl
scas
jno
fs
int
pop
xor
dec
into
and
insb
mov
int3
push
push
jo
cmp
push
sub
cmp
push
mov
pop
imul
int
adc
test
int
or
push
scas
sub
leave
dec
lret
mov
fidivrs
and
fdivrs
sbb
sbb
inc
sar
sub
fdivrs
ja
test
mov
mov
outsb
sub
icebp
mov
fs
pop
jo
xchg
cmp
movsl
stos
lret
push
jmp
repz
icebp
mov
xchg
or
mov
nop
adc
jb
pusha
sub
pop
jbe
inc
into
cwtl
iret
inc
outsl
push
sti
and
adc
pop
lcall
cmovno
mov
push
jg
sbb
rcrb
push
insl
pop
mov
cmpsb
pop
nop
fisttps
cmp
xchg
call
lret
call
cld
jb
and
xchg
insl
vpunpckhwd
mov
jge
in
push
dec
pop
xchg
cmp
fsubrl
push
ds
lret
icebp
push
mov
js
cmc
dec
jne
sbb
rorl
dec
or
jmp
lret
rcl
pop
aas
lods
out
lds
rorl
mov
adc
mov
lea
jecxz
mov
or
mov
mov
jno
mov
movsb
mov
cwtl
repnz
dec
stos
and
call
adc
fbstp
int3
div
lds
sub
or
stos
je
push
es
jp
in
in
cld
xor
aaa
js
push
loope
rolb
pop
cs
inc
mov
jl
scas
test
jmp
or
cmc
std
leave
aad
fwait
lods
xchg
mov
add
dec
imul
sbb
push
cwtl
xor
jo
and
stc
push
insl
lods
addb
dec
popa
or
mov
ljmp
dec
shll
mov
mov
fwait
popa
push
repz
outsl
sbb
imul
inc
sub
push
inc
filds
jp
out
movsl
aam
mov
mov
es
outsb
lret
inc
int
out
xor
sahf
pop
fst
xlat
lea
call
push
lret
mov
rorb
out
sbb
lods
sahf
or
mov
insl
adc
or
jle
mov
stos
scas
dec
fwait
mov
add
icebp
sub
adc
repnz
sahf
and
and
or
bound
es
xor
shll
cwtl
sti
mov
jecxz
jae
jecxz
test
xor
outsl
mov
sbb
mov
sub
stc
aas
jnp
hlt
cmp
inc
cmc
adc
repz
push
sub
jecxz
push
rclb
or
jnp
jnp
xor
push
mov
fnstsw
push
mov
adc
pop
fnop
push
scas
mov
imul
push
adc
pop
dec
sbb
arpl
inc
outsb
jecxz
in
lods
clc
mov
iret
xlat
push
inc
scas
ficoms
mov
or
jmp
dec
and
into
repz
andl
xor
push
sub
ret
cld
out
dec
push
sub
cmp
cmpsl
jmp
adc
fsubs
insl
leave
pop
iret
outsb
jns
inc
cmp
sti
pop
fnsave
cld
stos
ja
xchg
pop
loopne
xchg
bound
das
notw
shll
icebp
or
cltd
jge
cmpsb
mov
in
jg
push
xchg
dec
or
mov
jle
imul
movsb
jecxz
dec
loope
xchg
jnp
and
movl
insl
dec
push
movsb
mov
mov
mov
xor
mov
icebp
pop
pusha
dec
pop
fmulp
subl
repz
jg
mov
popf
cmp
and
dec
inc
sahf
mov
xor
inc
or
jl
lret
shlb
fsts
sarb
dec
jae
shlb
das
jo
fbld
divl
jecxz
mov
mov
mov
inc
ss
cmp
imul
dec
xchg
sbb
mov
cmp
xchg
cltd
cmc
mov
scas
repnz
pop
fmul
pop
push
popl
xchg
test
sub
in
sub
mov
jl
loop
pop
dec
or
dec
mov
jmp
sbb
mov
les
movsl
sbb
inc
xchg
add
enter
mov
idivb
lret
neg
movsb
dec
mov
in
icebp
daa
loop
pop
pmaxub
fs
adc
sbbl
push
aas
fstpl
cmpsl
mov
repz
mov
sub
clc
jbe
jo
inc
mov
jp
or
je
mov
lret
and
mul
popf
cmp
fwait
dec
cmpsb
jns
jns
and
mov
clc
ret
scas
les
jb
pusha
ret
xor
lea
sti
lods
test
out
jb
push
aas
or
hlt
jbe
push
jmp
stos
ds
notl
loopne
loope
arpl
sub
ret
dec
jbe
test
loope
mov
adc
pusha
push
fnstenv
mov
sbb
fnstenv
fstpt
and
and
scas
loopne
les
testl
out
test
loop
dec
xchg
into
and
cmpsb
ljmp
loope
xchg
popf
mov
xor
xbegin
inc
shrl
xor
jge
ret
adc
lods
mov
xor
in
lods
fcoml
in
fstpt
mov
fs
movsb
pusha
sub
mov
stc
out
imul
mov
jns
inc
movsl
sub
ficompl
or
iret
pop
cs
and
fstps
jecxz
dec
mov
mov
stos
dec
cwtl
mov
nop
jb
shrb
add
sub
sbb
mov
mov
xchg
jns
cwtl
out
xchg
jecxz
mov
add
popa
push
lods
inc
mov
mov
add
jbe
dec
iret
push
and
jno
xchg
dec
insl
aaa
subb
push
inc
xorb
xchg
and
cld
cmp
daa
notb
outsb
cmp
es
jnp
imul
fnstcw
dec
xor
cmp
loop
add
mov
into
xchg
xchg
xchg
sub
inc
sbb
cmp
inc
and
lods
mov
cltd
in
xchg
mov
mov
dec
ret
es
jne
xchg
jmp
into
aam
mov
cwtl
sahf
inc
cmp
icebp
and
pop
nop
adc
shr
nop
cltd
scas
and
imul
xor
inc
sbb
test
inc
cwtl
in
adc
mov
dec
movl
jle
jg
outsl
mov
jno
mov
xlat
sub
mov
mov
push
subb
imul
out
adc
fildl
and
pop
outsl
imul
jge
jecxz
mov
lahf
mov
or
add
fimull
cld
lods
mov
push
gs
push
pop
arpl
jnp
jnp
push
and
lock
jnp
inc
xor
cwtl
xor
jns
push
rcrb
push
cmp
dec
movsl
xor
sbb
dec
out
in
inc
pusha
popf
add
repnz
mov
aas
ret
jle
xchg
fistl
pop
dec
pop
divb
icebp
fcoms
jp
and
pop
icebp
or
in
movl
xorl
out
adc
sahf
pop
call
into
adc
and
xchg
loop
lahf
add
jmp
lods
cmpsl
movsb
inc
mov
adc
in
lret
aaa
add
push
mov
xor
ret
sbb
out
sbb
mov
and
and
or
mov
push
or
xchg
mov
pop
fucomp
mov
loop
pop
push
cmp
push
in
lods
cwtl
xor
mov
cmp
mov
scas
mov
sub
mov
lahf
fstpt
fstps
test
mov
out
push
or
jbe
addb
je
cld
scas
cmp
cmc
mov
push
loopne
mov
subb
movsl
xchg
ds
pop
ret
push
stos
rcll
repz
popf
andl
cs
sbb
mov
loopne
orl
xor
pop
inc
pop
das
out
out
jg
fs
ljmp
pop
leave
sub
mov
add
inc
mov
sbb
push
cmp
mov
mov
pop
test
push
xchg
cmpsl
stc
jns
pop
es
les
xchg
dec
pop
dec
jle
push
les
rol
ljmp
jp
xchg
jb
xchg
adc
out
push
jg
cmp
adc
sub
lahf
out
test
mov
repnz
imul
andb
repnz
daa
push
sub
pop
push
lcall
push
pmaddwd
jmp
or
and
and
add
outsw
hlt
das
gs
or
std
mov
popa
mov
repz
outsb
test
inc
fwait
push
addb
imul
iret
orb
nop
mov
repz
stos
cmc
mov
out
clc
sbb
dec
mov
in
test
and
loope
mov
shrl
in
and
shlb
push
mov
mov
mov
push
lcall
xchg
sub
mov
and
imul
das
push
mov
pop
gs
cld
inc
rcll
mov
insl
sahf
sarl
mov
cmp
dec
xor
cwtl
bound
sbb
or
push
or
int
into
mov
cmp
mov
mov
iret
out
sbb
pushf
lret
mov
push
push
push
in
xchg
outsb
jg
sti
sub
push
xorl
cmp
add
xorl
outsb
dec
int3
mov
nop
sbb
jb
mov
xor
enter
adc
mov
and
out
lods
lret
in
xchg
pop
cmc
dec
add
movsb
in
pop
pushl
add
repz
mov
leave
dec
adc
adc
cli
pop
mov
push
pop
cwtl
lcall
jns
adc
lods
addr16
mov
or
cld
xor
push
push
lret
dec
mov
push
and
jno
pop
cmpsl
cmp
popa
xchg
out
add
cli
pop
setp
cmpl
jb
enter
lock
jle
inc
sub
int3
push
call
and
mov
adc
add
push
xor
sti
and
dec
mov
movl
ljmp
pop
mov
icebp
dec
mov
mov
std
sbb
ret
inc
xchg
cmp
inc
sub
pop
orl
lea
xchg
shl
fmuls
cmp
addb
or
mov
fadd
mov
cmpsl
ljmp
ret
sbb
push
fisubrs
insb
cmpsl
mov
in
jns
mov
pop
lock
push
fidivrs
xor
adc
adc
adc
fisubrs
xor
push
movsb
fs
test
pushl
xor
dec
and
jne
mov
xlat
imul
mov
sub
pop
aaa
aam
pusha
pop
push
jnp
mov
jbe
dec
ss
push
aaa
sub
sarb
pop
cmp
mov
call
dec
mov
in
push
movsb
cmp
mov
shll
add
out
xor
loope
pop
push
mov
jge
add
inc
mov
pop
or
or
lcall
dec
mov
cmpsl
clc
hlt
inc
and
jl
jmp
mov
daa
cmc
jns
adc
fmull
xchg
inc
pushf
and
call
std
lods
repz
sbb
std
stc
inc
add
cmpsl
sti
pop
call
pop
mov
gs
push
out
aad
jl
fsubrl
fcmovne
sti
in
and
test
pop
data16
nop
rorl
outsb
cmp
out
sub
jmp
orb
push
insb
push
push
cld
mov
in
nop
pop
pop
scas
sub
fadds
mov
xor
push
xor
adc
or
lods
add
jo
pop
in
xchg
or
js
arpl
sub
cs
roll
test
in
mov
sahf
push
dec
mov
mov
xchg
es
psubsb
cmpsb
pop
add
sbb
or
inc
call
jge
leave
lcall
fisubrs
clc
add
cmpsb
aaa
repnz
add
push
cmp
push
cmp
ret
cltd
push
rcl
pop
mov
mov
daa
shll
push
in
mov
imul
int3
xor
jmp
jge
add
movsb
jge
jp
es
pop
in
cmp
in
aad
sub
mov
push
push
call
push
mov
out
mov
jae
inc
fdivs
add
cmp
push
jmp
push
mov
jns
arpl
sub
bnd
sbb
cmc
add
pop
push
mov
or
xor
mov
scas
dec
sub
pusha
aaa
dec
inc
fstl
repz
lcall
adc
lods
cltd
pop
es
mov
jmp
das
add
out
inc
jmp
loope
sub
jle
out
push
std
mov
sbb
adc
ret
cmpsl
repz
mov
stc
ficompl
mov
dec
mov
ljmp
push
sub
je
xor
sub
hlt
jns
out
lods
push
lret
cmpsl
js
sbbl
xchg
push
int
lret
sbb
fs
push
nop
sub
push
bnd
mov
data16
xor
jne
fwait
inc
sahf
arpl
mov
testl
cli
iret
jle
push
mov
into
mov
orb
adc
sbb
out
pop
aad
insb
mov
stos
dec
jb
mov
in
adc
mov
xor
add
jne
mov
pop
pop
inc
repz
fs
icebp
adc
mov
inc
inc
mov
fbstp
and
ret
pop
push
inc
ljmp
bound
push
inc
aas
in
stos
cmp
pop
cld
dec
repnz
mov
adc
sbb
rcrl
pop
or
add
in
addr16
in
or
aas
int3
or
loopne
xor
in
in
push
xchg
or
das
add
rclb
call
out
mov
push
pop
adc
outsl
int
dec
dec
cmp
xlat
jnp
pushf
leave
test
inc
push
push
mov
aaa
xor
pop
jae
enter
repz
cmp
mov
inc
dec
add
vdivpd
fsts
les
push
jns
data16
aaa
push
inc
adc
pop
adcb
gs
cmp
sub
lret
sahf
es
xor
test
push
inc
iret
sahf
int3
mov
dec
out
jmp
push
sbb
push
mov
scas
loope
or
mov
mov
into
test
add
and
mov
mov
imul
ds
arpl
enter
pushf
test
lret
mov
stos
sub
aas
cli
add
shr
jno
fcmovbe
mov
psllw
test
dec
dec
int
mov
add
and
pop
aaa
inc
mov
mov
mov
adc
mov
pop
roll
imul
xor
sarb
jo
mov
sbb
pusha
inc
push
scas
pushl
push
outsl
jmp
jne
test
xchg
inc
aam
pop
cld
mov
stos
jmp
ret
pop
in
int
sarl
push
cmp
sub
xor
pop
movl
decb
test
push
ljmp
int
gs
mov
and
cld
inc
shll
arpl
jge
xor
cs
mov
xchg
xchg
in
sar
inc
jns
add
push
inc
arpl
ror
add
mov
andl
xlat
mov
test
pop
adc
ret
jp
cli
push
inc
sbb
sbb
notl
cli
push
data16
sarl
push
lock
rorb
mov
mov
lret
shlb
xor
xchg
mov
push
inc
imul
imull
jge
xlat
enter
cmp
andl
xchg
notl
ffree
test
inc
push
repnz
mov
divb
int
mov
inc
mov
in
mov
cs
jge
in
xchg
jae
xor
out
push
es
xor
inc
lret
sbb
std
movsb
and
jae
jg
mov
push
jge
sub
dec
rclb
out
cld
in
movsl
xor
aaa
js
jne
sub
std
fnstcw
mov
cmp
ja
jne
sti
jmp
push
add
cltd
and
movsl
xchg
dec
filds
and
dec
sub
cs
sub
in
add
into
or
mov
inc
lcall
cwtl
inc
mov
movl
repnz
xchg
dec
xor
lock
sub
incl
ljmp
or
mov
adc
ret
and
cmp
sub
inc
cli
cld
inc
test
ljmp
mov
imul
cmp
sbb
cmc
sbb
inc
push
je
add
and
pop
pop
cli
std
mov
pusha
les
inc
dec
adc
cs
popa
xchg
out
sub
push
div
dec
push
nop
mov
xor
lock
sub
jae
or
push
out
adc
and
xchg
cmp
insb
add
orl
out
cmp
ja
out
sub
sbb
sbb
out
in
rcr
popf
out
fldenv
fidivl
movsl
loop
inc
sti
inc
add
fnstcw
jge
inc
push
cs
push
lahf
xchg
mov
cmp
cld
fisttpl
push
and
outsb
rol
push
add
ret
mov
cmc
hlt
es
decl
mov
push
sub
lea
cli
loop
push
mov
jne
or
in
in
mov
xchg
xchg
lahf
popf
aas
jb
sbb
mov
and
jno
scas
inc
mull
dec
lods
and
mov
ss
insl
js
or
dec
js
adc
jb
jp
cs
xor
sbb
push
lods
cld
push
push
cmp
or
in
ss
cld
stos
into
mov
fs
lods
pop
xor
dec
mov
adc
xchg
mov
mov
adc
or
mov
dec
gs
popf
and
test
sahf
jb
shll
lods
leave
fdiv
pop
icebp
cmc
adc
out
sub
inc
int
js
adc
or
mov
add
add
inc
pop
hlt
and
jnp
ret
test
push
or
mov
mov
cmp
scas
mov
lret
push
cwtl
data16
or
push
mov
negb
jmp
or
pop
dec
rol
add
inc
repz
pop
mov
sbb
rol
std
fldt
pop
loopne
xchg
mov
gs
and
mov
pop
and
cltd
xchg
xor
or
cmp
fcomps
int
ja
mov
ja
cld
ss
ficompl
xchg
scas
sbb
or
rorb
pop
pop
mov
inc
jmp
mov
mov
xor
adc
mov
xchg
mov
sbb
sarb
out
cld
or
in
in
push
pop
in
xchg
mov
aad
stc
into
dec
dec
leave
push
pop
loope
in
data16
mov
xor
cmpsb
mov
insl
dec
es
push
loop
mov
xchg
out
subl
mov
inc
jmp
and
repz
sbb
add
mov
outsl
dec
xor
mov
jbe
and
subl
jecxz
decl
mov
push
push
fnstenv
insl
cwtl
cmp
in
jg
pop
pop
mov
out
cmp
dec
movsl
mov
mov
call
or
add
cmp
rcrb
and
test
and
leave
adc
sbb
les
hlt
cs
mov
jae
jg
sub
push
sub
jmp
mov
cmpsl
mov
pusha
mov
adc
inc
mov
sub
cltd
or
inc
mov
shrb
and
sbb
jnp
jns
mulb
cld
xor
dec
pop
sub
adc
mov
in
adc
mov
cmp
out
aad
inc
xor
test
jbe
cmpsl
lds
pop
out
fwait
fs
sti
cmpsb
fwait
add
pop
insl
call
lea
hlt
or
dec
sbb
shlb
outsl
push
pop
adc
dec
dec
stos
mov
jmp
mov
sahf
pop
mov
xor
out
sub
adc
lods
lea
pop
rcrl
xor
mov
xchg
cmp
adc
stc
aas
mov
push
pop
ljmp
jmp
jge
xor
icebp
aaa
fbld
mov
xchg
add
jg
int
out
loop
mov
push
inc
sub
orl
mov
push
ret
and
ljmp
pop
adc
test
xchg
sub
mov
in
fwait
mov
lods
lahf
out
fdiv
ds
jb
dec
or
or
xchg
stos
cli
test
cmp
jmp
in
xor
fiadds
mov
fwait
js
xchg
stos
dec
cmpsl
aad
cwtl
fistl
push
xchg
push
cmpsb
ret
push
xchg
jl
fiaddl
hlt
adc
frstor
jbe
push
mov
ret
push
pusha
mov
cmp
push
lods
daa
push
mov
mov
sub
insl
insl
jmp
test
add
or
lods
data16
insl
movsb
fsubrl
mov
icebp
jno
inc
mov
and
movl
scas
lcall
push
push
iret
jb
cmp
rcr
pop
outsl
mov
loop
pop
lea
std
das
sbb
cmp
ja
sbb
enter
and
shrl
xchg
inc
inc
inc
push
lods
inc
jne
xchg
jne
cmp
sub
sub
jne
in
sub
inc
lret
je
rclb
cmpsl
jbe
inc
push
loop
xchg
mov
jne
rcrl
out
xchg
fwait
or
mov
or
sahf
test
adc
lods
aas
pop
mov
xor
lcall
outsl
dec
or
jne
subl
bound
pop
imul
pop
in
aad
fidivrl
or
pop
mov
int3
out
lret
or
or
sti
and
lret
cmp
orl
adc
jo
mov
cmp
pop
jo
orl
sub
mov
stc
or
popf
ret
xlat
xchg
lds
mov
add
test
mov
in
or
mov
pop
lahf
xchg
push
adc
and
popf
test
addr16
incl
add
mov
rcrl
rolb
sahf
sub
adc
xor
xchg
cwtl
popa
sub
jl
cmp
out
stos
xor
mov
cmp
lahf
sbb
lcall
or
stos
pop
push
fsubp
xor
hlt
pop
sbb
fs
mov
or
add
mov
cmp
pop
mov
inc
sbb
jp
mov
sbb
repz
adc
xchg
addl
mov
push
imul
movsb
add
mov
xchg
mov
lret
imul
mov
clc
test
dec
fdivl
cs
fwait
jge
jge
daa
ss
mov
stos
jbe
cmp
addl
popf
movsb
mov
std
xor
cmp
pop
incl
sbb
lcall
aam
push
xchg
push
mov
push
dec
xchg
aas
int3
jb
jp
hlt
out
mov
les
aaa
dec
xchg
cltd
sti
or
xchg
arpl
push
sbb
sub
mov
repnz
or
andb
cli
fs
test
orl
mov
lret
and
mov
adc
jp
xchg
mov
pop
pushf
xchg
cli
leave
mov
adc
inc
lret
xchg
clc
xchg
outsb
repnz
push
in
mov
out
jns
pushf
and
arpl
adc
pop
je
insb
push
fwait
rcll
stos
arpl
pop
and
add
aad
aam
adc
nop
rolb
adc
push
dec
aam
pop
jo
mov
les
mov
imul
sub
popf
xor
inc
push
jne
rclb
sti
cmp
mov
stos
xchg
adc
hlt
cli
dec
and
mov
jle
jmp
icebp
adc
out
push
lahf
inc
sahf
icebp
xor
pop
loopne
xchg
inc
je
push
or
jmp
sbb
pusha
fmuls
xchg
outsl
pop
jl
jno
nopl
pop
or
sbb
add
aaa
test
fsubl
insl
daa
or
mov
cmp
mov
dec
test
xor
xchg
dec
sbb
repz
aaa
ljmp
out
sub
add
xchg
iret
jmp
add
and
mov
loop
pop
scas
pop
outsl
sub
and
push
mov
lock
repz
xor
inc
or
mov
es
cmpsb
cmp
imul
xor
pop
in
dec
xlat
dec
mov
pop
lret
popa
add
daa
inc
dec
dec
cwtl
sbb
repnz
fldl
shr
lcall
jnp
clc
xchg
out
push
sbb
pusha
in
pusha
daa
or
and
push
adc
addr16
sub
sti
mov
mov
dec
sbb
dec
jnp
daa
fcoms
ret
cwtl
adc
js
ficoml
and
xchg
push
pop
incl
ljmp
mov
int
cmp
dec
imul
stos
cmp
shll
and
mov
adc
fnstsw
aas
jge
dec
push
add
rcr
lret
ret
push
scas
mov
jmp
mov
pop
mov
popa
xchg
sahf
dec
cmp
or
cmpsb
into
mov
pop
xchg
push
sahf
fdivl
dec
push
addr16
adc
mov
sbb
jmp
or
xchg
pop
mov
shrb
xor
xchg
jo
shll
and
pop
int
lods
enter
sbb
lock
mov
xor
pop
stc
jecxz,pn
stos
mov
push
xlat
fisubl
movsl
pop
test
dec
outsl
cmp
fwait
and
push
popf
and
mov
test
jno
ret
mov
mov
pop
out
lock
into
shl
add
loop
jb
data16
inc
xor
shrl
popf
add
mov
pop
xchg
push
or
aas
inc
icebp
xor
xchg
pop
xchg
push
sbbb
insl
jge
andl
inc
enter
jnp
add
xchg
adc
negl
shrb
aaa
imul
adc
gs
mov
xchg
cmpb
dec
or
jns
mov
daa
cwtl
ljmp
idivb
cwtl
push
aam
jns
and
nop
outsl
cmp
mov
mov
jg
lahf
jge
fisttpll
cmpsl
jae
aas
xor
push
jmp
jae
jno
iret
fwait
lea
and
xchg
addr16
shlb
jg
test
insl
scas
test
add
xlat
or
cmp
xchg
frstor
test
rolb
inc
mov
xchg
mov
in
cmp
or
int3
icebp
xor
inc
lock
jg
andb
xchg
xor
pop
cmp
icebp
inc
and
xchg
imul
repz
lcall
dec
test
movsb
pop
inc
xchg
xor
xor
xchg
or
lcall
lahf
test
mov
loopne
enter
leave
leave
mov
insb
data16
mov
mov
xchg
xchg
adc
xor
dec
dec
lods
or
sti
shl
push
loop
mov
sbb
daa
test
mov
mov
out
xchg
int
lcall
out
scas
scas
lods
mulb
dec
call
popf
dec
and
cmp
adc
xor
cmpsl
adc
clc
imul
aam
popa
jae,pt
dec
push
mov
add
pusha
push
fisubs
xchg
icebp
mov
arpl
daa
inc
call
mov
jnp
call
and
test
xchg
xchg
cmp
pop
decb
sub
dec
mov
loope
es
jecxz
push
out
inc
jmp
xchg
or
cwtl
lds
pop
fmuls
inc
push
lret
ret
aaa
dec
xchg
cmovns
xchg
adc
mov
jecxz
aas
mov
inc
push
aad
shll
aaa
push
inc
sarb
or
mov
jmp
cmp
push
imul
loop
dec
rcl
add
leave
mov
and
push
cltd
cmc
mov
rolb
rcl
sbb
test
les
lahf
xor
aad
xchg
push
decb
cmp
bound
cmp
lret
mov
shrl
pushf
lcall
je
or
ret
mov
adc
or
and
add
mov
mov
dec
lods
addl
or
in
aam
sub
sti
out
xchg
mov
aad
leave
int
inc
std
xor
enter
mov
jle
jae
inc
lcall
repnz
cwtl
push
je
jmp
xlat
scas
int3
push
mov
adc
sub
pop
leave
popf
add
cli
outsb
xor
or
push
or
ja
xchg
pop
mov
adc
inc
pushf
shll
movsl
out
movsb
into
dec
mov
xchg
mov
xor
cmpsl
das
adc
cmp
std
fisubs
pop
scas
out
fstpl
ds
cltd
test
dec
mov
push
mov
fimull
add
mov
sbb
xor
sar
outsb
sti
add
adc
hlt
orb
test
inc
dec
or
xor
adcl
or
pop
out
jbe
push
into
pop
adc
scas
je
enter
fdivrs
sbb
mov
add
adc
pusha
sbb
pop
cli
addr16
add
aas
add
jle
pop
stos
addl
xor
shrb
or
lahf
sbb
pop
jle
lock
or
lods
fiaddl
pop
jp
dec
out
fnsave
lret
add
pop
and
in
pushf
pushf
dec
dec
dec
add
in
mov
xacquire
dec
popa
call
xlat
movsb
pop
ja
and
sub
adc
sub
inc
clc
mov
mov
test
mov
jns
rorl
add
in
lcall
inc
dec
xchg
lret
ret
aam
mov
test
xlat
jnp
jp
icebp
clc
in
sbb
mov
out
rcrb
stos
jg
lods
in
push
xor
mov
subl
out
mov
outsb
dec
inc
fwait
test
push
sub
insb
mov
sar
pop
aas
push
in
push
sub
popf
xchg
rcrb
stos
in
pop
daa
imul
jns
fwait
imul
andps
int3
lcall
ficompl
mov
ss
dec
inc
dec
pop
sbb
hlt
lea
les
lcall
mov
ja
imul
jns
in
rcll
cld
flds
jmp
mov
mov
mov
jns
ret
lods
addb
and
pop
fcomi
movsl
mov
or
or
xor
mov
enter
iret
xchg
jmp
jp
sbb
mov
aad
out
xchg
movsl
xchg
xor
cwtl
loopne
adc
addr16
adc
mov
add
mov
out
out
pushf
pop
cmp
pop
icebp
or
jp
or
ss
lods
jbe
cmpsl
sbb
mov
mov
mov
push
shr
aam
nop
scas
jge
cmp
or
jle
out
andl
push
arpl
mov
movl
sbb
ds
addr16
and
lahf
mov
cmp
std
dec
inc
or
xchg
push
or
xchg
mov
stc
mov
sbb
and
jmp
add
lea
pop
xor
data16
mov
pop
or
dec
sbb
fistps
loopne
repnz
sub
lock
cmpsb
popa
lret
push
inc
in
fs
push
pop
mov
inc
jmp
cmp
fidivl
jae
dec
in
xchg
fcoms
or
out
dec
xchg
push
dec
je
hlt
test
jecxz
fld
lods
lahf
cmc
xchg
push
repz
dec
mov
roll
adc
incl
add
jns
sub
xchg
adc
cld
fwait
popf
iret
jmp
mov
or
clc
xor
push
cmp
outsb
mov
mov
lret
xor
sub
clc
push
inc
jns
jg
roll
mov
push
dec
iret
push
pop
test
xor
aas
and
xchg
and
sahf
sbb
mov
fadds
mov
jbe
mov
iret
fstl
or
cltd
lds
out
fstpt
jns
sub
pop
faddl
lea
icebp
mov
popa
idivb
jl
cld
jge
and
jecxz
adcl
addr16
fdivrl
and
push
xchg
mov
push
imul
scas
jl
push
dec
dec
mov
pusha
jne
push
js
loope
add
or
or
inc
rorb
jl
out
dec
jbe
and
andb
movsl
jge
inc
dec
add
ds
outsb
std
add
push
test
imul
das
pushf
cwtl
mov
jecxz
xor
daa
pusha
adc
je
jmp
insl
dec
cli
add
sbb
jne
add
fdivrs
mov
jl
or
mov
clc
sbb
adc
xchg
pop
in
imul
jecxz
adc
subb
mov
leave
mov
lret
jge
divb
adc
mov
xchg
fisttps
lcall
push
xor
or
sahf
shrb
push
out
fmuls
or
fldenv
fwait
sti
push
mov
jecxz
into
inc
jne
in
out
call
jne
pop
insb
mov
shrl
push
push
mov
stos
jmp
jb
jmp
ret
xor
aaa
xchg
fistl
repnz
or
push
ja
push
push
xchg
stos
es
cmc
std
or
jo
test
stos
ja
scas
xchg
je
dec
jecxz
insl
push
cmp
mov
jl
ds
out
and
fwait
jno,pt
push
aaa
mov
imulb
sbb
aas
jp
mov
adc
fst
xlat
aad
rcrb
cwtl
bound
aaa
ret
jae
test
inc
sbb
and
pop
mov
mov
xchg
fdivr
popf
arpl
les
push
mov
mov
arpl
ficompl
mov
in
jl
or
sarl
lods
pop
clc
leave
cmp
mov
jns
add
mov
loope
fsubl
loopne
jnp
push
pop
inc
jg
mov
in
xchg
xor
and
dec
xor
sub
outsl
test
ds
out
cltd
stos
push
mov
in
das
push
push
cmp
repz
sbb
fisubrs
mov
push
push
dec
jecxz
cmp
or
pushf
inc
outsl
inc
lds
shr
xor
push
sbb
call
ret
stos
imul
dec
push
out
test
sub
mov
push
lock
push
jae
adc
mov
pop
in
lfs
js
fwait
out
jb
lret
jg
push
jb
data16
mov
adc
test
adc
cmp
jge
lret
mov
imul
jb
and
loop
mov
hlt
fildll
sbb
inc
xchg
bound
push
sub
pop
stc
in
aad
or
jae
stc
pop
lods
pop
daa
mov
int3
clc
das
push
out
popf
shl
iret
dec
pop
push
movsb
rclb
xchg
cmpsb
xlat
test
xchg
bnd
mov
cmp
scas
mov
lds
iret
mov
push
sbb
iret
push
mov
jnp
fcom
cmc
sbb
add
les
hlt
jl
daa
stos
loopne
ds
out
xchg
int
gs
push
dec
xchg
enter
imul
push
mov
mov
rcr
add
inc
xchg
jmp
dec
lret
insl
xchg
jg
gs
xor
cmp
sti
dec
lahf
cmp
mov
sub
jmp
cli
sarb
mov
cmp
mov
leave
add
ljmp
cmp
in
test
sbb
xchg
stos
push
rcrl
add
mov
add
push
test
insl
mov
enter
imul
xchg
mov
ss
sbb
and
xchg
or
leave
out
xor
sti
sbb
mov
xlat
ret
movsb
scas
dec
pop
in
lods
insl
or
jne
inc
es
sub
loopne
aad
mov
sbb
and
sbb
jbe
test
mov
lahf
aad
pusha
mov
mov
push
psubusb
dec
iret
mov
out
in
mov
inc
mov
or
inc
cli
dec
mov
and
or
dec
sarl
dec
lods
xchg
rcrb
and
das
ljmp
sub
jno
fldt
pop
inc
daa
adcb
iret
leave
pop
sbb
leave
scas
subl
push
adc
inc
out
adc
adc
push
cmc
dec
adc
out
fnstcw
or
fnstcw
daa
inc
sarl
sbb
and
shll
mov
jmp
stos
outsb
mull
in
sbbb
dec
cmpsl
push
mov
xchg
arpl
jbe
sahf
fildll
in
scas
xor
push
dec
mov
iret
dec
cmpsl
jmp
mov
ljmp
pop
dec
sbb
push
in
movsb
jl
add
cmp
dec
pop
and
insb
jbe
cmp
mov
adc
ffreep
out
test
mov
add
outsb
std
les
lods
mov
xchg
sbb
pop
repz
cmpsb
shr
sbb
mov
add
sub
out
push
pop
push
insl
out
inc
lahf
in
cwtl
je
lock
popf
sub
dec
int3
pop
insl
ss
adc
jge
xor
int
cmp
xlat
sub
jge
pop
stc
xchg
mov
cltd
sbb
add
inc
daa
es
add
fimull
mov
inc
pushl
hlt
ds
fisttpll
nop
cmp
jecxz
mov
insb
ret
rolb
jns
sub
mov
dec
sub
lds
mov
mov
dec
mov
dec
add
lret
insl
mov
jge
xor
je
je
pusha
aad
dec
sti
mov
cmovge
imul
inc
adc
xchg
xor
xchg
call
pop
std
sbb
aad
pop
pop
cmpsb
jecxz
push
sub
mov
mov
icebp
data16
subl
in
dec
push
test
loope
sahf
sbb
sahf
ret
fists
pop
and
push
arpl
mov
cwtl
xchg
pop
xchg
pmaddwd
sarl
in
mov
sub
sbb
out
mov
popf
andl
xchg
jmp
push
fildl
xadd
test
fisttpl
mov
jmp
sub
cli
and
stos
sti
lods
ret
jmp
pusha
sbb
outsb
sbb
jae
notl
fmul
xor
cmp
push
lods
mov
xchg
mov
pop
sbb
mov
out
sbb
scas
mov
mov
ja
cld
divb
push
cli
push
xor
xchg
fsubrl
jae
mov
ljmp
adc
xchg
std
out
adc
xor
aaa
insl
push
fwait
adc
add
inc
jnp
add
roll
aaa
fstp
repnz
mov
out
fucomip
js
jb
rcr
mov
movsb
aad
cmp
xor
jl
and
mov
cmp
pop
in
adc
and
nop
rcrb
inc
pop
in
xchg
incb
pop
daa
fsts
test
or
je
sbb
movsb
subb
mov
addr16
xchg
push
scas
ljmp
stc
int
mov
mov
into
adc
push
scas
movsl
jmp
outsl
test
push
lret
xchg
xor
pushf
inc
rcrb
or
sbb
xchg
jno
testb
scas
pop
xor
rcl
xchg
sub
repnz
push
outsb
add
xchg
push
add
inc
xor
sub
sti
mov
jns
inc
int3
xchg
out
sar
aam
sub
and
add
jbe
pop
lods
mov
sbb
das
rorb
shll
or
ret
fisttpl
jne
jecxz
in
xchg
mov
loope
ret
sarl
mov
test
xchg
mov
pushf
ror
inc
adc
cmpsb
fcmovnu
cmp
adcb
jmp
js
loope
mov
ja
pop
pusha
mov
pop
fbld
jg
xchg
mov
jb
ds
or
das
test
or
daa
mov
sub
repz
xchg
pop
mov
mull
outsl
sbb
in
pop
ljmp
mov
fstl
and
fildll
mov
lahf
in
popf
jnp
outsb
gs
or
test
bswap
js
mov
icebp
int3
xchg
fcoms
xchg
hlt
pop
cmp
xchg
sub
mov
cld
fs
or
fmuls
mov
mov
or
jmp
push
adc
sub
daa
enter
dec
lret
cmpsb
xor
fimuls
push
cmp
xlat
xchg
das
cmp
pop
jmp
sub
sbb
lods
std
popf
dec
fisubrs
cmp
loope
add
insb
mov
aam
pop
lds
or
dec
mov
xchg
inc
push
pop
inc
movsl
pop
xchg
jnp
gs
in
sub
xchg
out
mov
fwait
out
cmp
or
outsb
or
push
add
or
pop
ja
dec
adcb
mov
sub
aas
lret
or
cmpsl
push
or
xchg
dec
std
outsb
cli
cmp
stos
sub
push
stos
cmpsl
in
fcoms
pop
stc
lods
dec
xchg
enter
push
pop
movsb
push
jnp
add
ljmp
xchg
enter
pop
or
dec
add
jge
cli
fiaddl
mov
and
and
or
dec
test
fmull
test
mov
test
ror
loop
add
idivl
xor
sbb
mov
mov
aaa
cmovne
pop
ds
dec
xor
rorb
mov
push
test
js
pop
neg
ljmp
jmp
jbe
lahf
dec
mov
inc
lret
push
xchg
jae
pop
inc
push
gs
jbe
mov
xchg
faddl
sahf
sub
xchg
cmp
int
jp
pop
pop
push
out
mov
cmp
andl
int3
jge
cmp
pop
jge
scas
imul
movsb
pop
mov
shlb
ficompl
loopne
cmc
add
jecxz
inc
lods
lea
sub
inc
add
jb
int3
dec
sub
jnp
das
add
fimull
fincstp
js
xor
movsl
cmp
or
lret
xchg
aas
leave
xchg
test
push
xlat
fbld
adc
xor
pusha
push
addr16
int
adc
dec
rol
jo
jne
pop
xchg
cs
dec
inc
das
lret
push
subb
cwtl
jnp
aad
in
and
std
mov
test
sbb
push
cli
bound
dec
push
out
stos
test
ds
addr16
sub
rorl
push
mov
mov
jp
cmpsb
push
cmp
ret
jo
adc
outsb
mov
testl
gs
das
sti
mov
nop
loope
aam
xor
mov
mov
les
orb
popf
mov
add
jno
dec
sbb
and
movsb
in
scas
dec
in
adc
adc
mov
aas
mov
and
cmp
inc
lahf
in
out
push
mov
fsubp
roll
mov
jns
rcrl
mov
sub
shlb
repnz
ljmp
scas
cmc
and
outsb
fadds
cmpb
int3
jl
xor
cmp
sub
sti
cmp
sub
pop
xor
gs
cld
pop
sub
add
fisubs
jmp
test
sbb
fwait
and
xchg
in
movsb
loopne
ljmp
or
dec
aas
cltd
cld
cwtl
and
outsb
adc
les
mov
adc
mov
lds
int
inc
pop
push
ljmp
dec
mov
dec
pop
les
adc
xchg
outsl
sub
fmull
imul
push
adc
aam
xchg
lcall
mov
imul
or
iret
dec
jge
into
adc
cmp
push
cmpsl
and
xchg
push
in
push
jbe
sub
and
mov
sarl
sbb
js
xchg
xchg
shlb
mov
movsl
push
pushf
xchg
pop
fs
jnp
in
mov
movsb
fwait
push
jg
and
push
lahf
rcll
dec
imul
out
clc
mov
test
push
loop
xor
adc
mov
daa
push
dec
or
dec
mov
mov
dec
xchg
adc
fisttpll
push
out
mov
adc
mov
cmp
jge
aas
ret
push
xor
pop
daa
xchg
out
insl
xor
and
and
mov
sub
dec
mov
pushf
into
dec
cmc
lea
ret
je
sbb
ja
mov
mov
xchg
add
mov
js
nop
mov
outsb
fildll
stos
xchg
sarl
cltd
push
mov
mov
dec
ret
xchg
jl
shl
inc
jno
clc
mov
xor
andl
ja
jp
cmp
in
data16
xchg
or
fs
sub
pop
mul
inc
adc
lock
jno
aam
stc
pop
inc
leave
out
mov
icebp
lea
mov
fsubrs
dec
stos
or
pop
es
jle
sbb
sbb
push
out
jae
xchg
inc
sub
mov
aas
ss
leave
sub
jne
xor
xor
ret
push
mov
add
or
mov
cld
pushf
loopw
cs
adc
jge
test
jno
lahf
test
jecxz
xchg
fcmovu
ja
shrl
push
add
push
popa
mov
mov
dec
repnz
cld
jbe
push
push
cmp
mov
mov
movsl
or
cmc
xchg
mov
and
mov
xchg
stos
push
mov
fcomps
mov
mov
inc
nop
das
push
mov
ljmp
sbb
and
test
rorb
lods
test
loope
and
sbb
sti
add
pop
lea
cwtl
push
scas
adc
popa
xchg
fildl
fmul
sub
adc
loope
lock
popa
les
xor
pop
fdivr
push
mov
jmp
adc
add
fmul
sub
sbb
sahf
insb
adc
insl
add
daa
addb
xchg
push
add
jmp
sub
ds
mov
cmp
aas
dec
inc
mov
popf
jg
jmp
add
std
and
es
data16
fstps
dec
call
das
cltd
push
std
out
cwtl
push
inc
mov
pop
jmp
test
ret
mov
inc
xchg
lahf
rorb
jno
ja
clc
and
mov
pop
xchg
inc
ja
test
pop
and
jo
mov
rcrb
lea
fldt
pop
pop
mov
fsin
fsubrl
dec
fidivs
jg
daa
add
lss
scas
js
jae
push
test
aas
int3
xchg
xchg
divb
mov
sbb
lret
mov
gs
push
out
inc
dec
iret
fs
ss
jle
test
jmp
int
out
test
es
sbb
sbb
nop
sbbb
sbb
insb
mov
cmp
lock
adc
sahf
in
push
testb
jg
inc
lret
imul
pop
sub
xorb
cmp
dec
subb
mov
enter
mov
ss
in
dec
fucomp
mov
imul
jmp
test
add
pop
pop
xchg
mov
loope
mov
fwait
adc
mov
add
cli
sub
pusha
xorb
mov
mov
shl
push
or
mov
addr16
cmpb
jle
xchg
add
push
jecxz
lock
inc
jecxz
fistps
pusha
ljmp
dec
fdivrp
hlt
xchg
hlt
fmull
cmp
cmpsl
sbb
ja
nop
xor
scas
imul
into
push
mov
cmpsb
and
jl
add
pusha
je
jge
insl
lret
cmp
arpl
mov
mov
cmc
iret
lods
repz
cltd
lea
test
add
jae
shrb
sbb
into
das
xchg
push
adc
adc
loop
xchg
out
inc
xor
or
push
adc
lret
into
xchg
cmc
lret
ficomps
fcompl
add
add
push
pop
inc
ret
les
test
mov
adc
mov
add
xor
cld
movsl
xor
psadbw
cmp
sbb
stos
xor
xchg
mov
jno
cmp
outsl
jae
jnp
cmp
test
ljmp
cmp
xor
inc
cmp
jno
jge
test
es
out
dec
xchg
repnz
and
out
mov
mov
adc
fwait
ss
cmp
push
gs
mov
xlat
fnsave
sbb
addr16
lock
pop
repnz
adc
rolb
call
mov
daa
dec
and
rcll
jp
mov
mov
push
inc
mov
stos
lret
jecxz
cmp
insl
lock
and
xor
cmp
xorl
cli
dec
sti
rolb
cld
int
push
in
loopne
jne
sbb
xchg
ja
iret
sub
sbb
aas
adc
mov
mov
xchg
mov
push
adc
jno
mov
popa
cmp
clc
sub
or
pushf
xchg
push
mov
mov
jnp
int
sbb
mov
adc
lahf
mov
sti
insb
xchg
stos
test
ret
and
lret
pop
bound
dec
mov
sbb
lcall
enter
cmpsl
or
into
je
repz
inc
pusha
mov
daa
add
jb
pop
cmp
imul
daa
lret
mov
inc
xchg
mov
xchg
roll
pop
js
mov
mov
cli
out
pop
out
inc
xor
xrelease
or
or
sahf
popf
xchg
in
insb
les
pop
les
mov
shrl
dec
pushf
js
lret
jae
add
jae
std
sbb
push
lock
clc
mov
push
in
pushf
leave
jle
mov
sub
mov
mov
push
imul
jge
ja
pop
movl
and
dec
andl
xchg
in
movsl
pop
jnp
push
int3
push
pop
aad
add
or
clc
es
out
sub
sub
cmc
xor
test
mov
xorl
cmp
xchg
sbb
and
push
sbb
mov
insl
add
imul
in
mov
mov
fcompl
call
in
sbb
sub
das
pop
mov
adc
cmpsb
movsb
pop
xchg
fwait
mov
mov
push
and
lahf
push
mov
mov
gs
fiaddl
push
mov
inc
imul
pushf
iret
pop
mov
rorb
pusha
movsl
dec
les
ror
push
out
mov
fwait
xor
mov
pop
dec
lds
int3
fsubl
cli
mov
ficompl
flds
inc
mov
frstor
and
xchg
xchg
ret
adc
fidivrs
ja
adc
lods
fdivrp
mov
cltd
push
ret
xchg
fsub
dec
pop
mov
xchg
repz
add
stos
fildll
push
stos
xchg
imul
and
inc
or
popf
xchg
adc
adc
sbbl
frstor
aad
mov
push
sbb
pushf
push
adc
icebp
push
sbb
push
and
cmpsb
push
lahf
inc
or
mov
loope
arpl
pop
mov
ret
jo
mov
les
cmp
cmpb
aaa
and
or
xor
leave
push
test
xchg
pop
mov
es
int3
jae
sbb
jl
mov
push
mov
xchg
add
or
xchg
ss
cwtl
sub
push
aad
sbb
xchg
sub
push
mov
mov
jge
ret
add
add
hlt
movsl
sbb
jp
xchg
lcall
pop
imul
and
and
xor
adc
ljmp
xor
mov
lret
pushf
mov
pop
ret
mov
sub
into
outsb
in
loop
pop
or
pop
pusha
js
je
xchg
mov
dec
dec
scas
mov
fdiv
test
cmp
pusha
jl
enter
xor
pop
adc
pop
mov
scas
add
xchg
outsb
cwtl
arpl
jb
sub
jns
mov
orps
push
pop
dec
and
push
sbb
pop
fwait
jne
cwtl
xchg
aas
jno
ljmp
mov
cld
aas
push
add
clc
adc
pop
ret
arpl
dec
sahf
sahf
ja
jl
loope
or
arpl
sbb
lds
dec
or
pop
dec
pause
in
outsl
sbb
arpl
and
or
sub
fwait
mov
iret
mov
shlb
insl
test
dec
hlt
push
mov
mov
shl
fsubl
ss
std
rorb
das
sub
outsl
cltd
ss
sarb
int3
movsb
mov
int
xor
push
dec
popf
fisttpll
cmp
icebp
lea
leave
lret
mov
mov
lret
mov
pop
inc
and
lea
pop
add
fsts
outsl
scas
pop
cmpsl
pop
sbb
pop
inc
adc
iret
js
add
add
push
push
xchg
loope
daa
mov
mov
or
ret
scas
rcll
es
dec
pop
or
addb
lcall
add
subl
int3
pop
data16
xor
loop
xchg
pop
mov
fs
out
pop
imul
insl
insl
xchg
daa
pop
cmpb
push
test
push
in
fbld
insl
sub
xchg
mov
fisttpll
sti
sbb
sbb
cld
sbb
push
and
jns
xor
and
lret
jo
sbb
arpl
cwtl
jmp
loop
inc
push
stos
jmp
fmull
jle
movb
aad
sti
mov
loop
aad
mov
xor
mov
ljmp
add
sbb
mov
adcl
loope
or
mov
sbb
inc
pop
mov
cmp
rol
fdivrp
mov
mov
popa
mov
mov
mov
push
nop
int3
dec
mov
scas
call
push
out
dec
mov
in
pushf
push
std
pushf
mov
cmp
insl
pushf
mov
sbb
jle
test
fwait
sti
mov
mov
mov
or
fnsave
cmp
jl
cmp
dec
pop
mov
call
fstl
sahf
inc
dec
movsb
notb
or
outsl
or
jmp
dec
test
cltd
xor
cli
xlat
xlat
push
ds
add
ds
mov
pushl
sbb
dec
mov
pop
xchg
sub
fidivl
lods
loopne
addr16
pop
jg
or
jl
call
insb
xchg
mov
jbe
fs
xchg
aas
push
mulb
fwait
xor
pop
addr16
cmp
outsb
insl
xlat
xor
mov
imul
cs
sbbb
sarl
loopne
mov
rcrl
jp
lds
jmp
sbbl
loop
mov
ret
outsb
std
and
mov
pop
les
in
push
ds
cmc
stos
mov
lcall
jo
lret
cmpsb
pop
lcall
jp
mov
repnz
mov
pop
fwait
xor
dec
aas
cmpsl
out
imul
lcall
inc
sbb
mov
pop
sub
outsb
sbb
pop
sahf
insb
xchg
icebp
fildll
inc
aam
or
push
cmp
fnstcw
pusha
pcmpgtd
insl
aam
push
popf
std
pop
sbb
inc
or
enter
jb
aaa
inc
enter
insl
insl
test
dec
cmp
lds
fnstcw
aas
js
lret
movl
inc
movsb
mov
adc
pop
sbb
xchg
jne
movsb
pop
pop
mov
mov
jmp
dec
push
xor
test
mov
sub
inc
orl
inc
sub
mov
lahf
sti
fdivrl
stc
iret
mov
jl
inc
dec
inc
imul
mov
push
xor
sbb
mov
cmpsl
stc
notb
cmp
sbb
ds
test
fs
pop
cmpb
fadds
xor
sbb
pop
mov
sub
dec
jl
jnp
aad
pop
mov
push
mov
out
mov
aaa
dec
xchg
add
cmp
cs
jmp
add
test
frstor
mov
gs
pop
lret
fwait
sbb
mov
hlt
pop
and
add
sbb
or
or
cli
das
or
sub
test
iret
jns
pop
pop
loope
rcl
xchg
xor
hlt
aas
or
pusha
mov
adc
xchg
fwait
xchg
xchg
jge
push
fstps
aad
lock
mov
and
push
inc
or
in
outsl
lret
fisubrs
lcall
xor
cmp
ja
inc
cld
push
inc
xor
mov
in
cmc
and
sti
jae
das
push
inc
cmp
or
mov
lods
inc
inc
jno
xchg
mulb
and
inc
mov
xchg
clc
fdiv
sub
fldl
outsb
xor
adc
xchg
sti
jecxz
jb
pop
sub
cmc
mov
and
lods
mov
lret
push
pushf
add
or
insl
mov
int3
pop
fwait
sub
fninit
sbb
inc
jl
cmpsb
cli
fwait
mov
sahf
pop
push
xchg
nop
int3
add
cmp
sbb
sti
ret
daa
insl
dec
pushf
out
mov
fwait
ss
pop
outsb
loopne
pop
arpl
mov
add
add
lcall
hlt
mov
out
aad
jns
mov
ds
movsb
pop
cmp
inc
jmp
jne
mov
lahf
pop
jp
cld
cmp
mov
dec
cwtl
mov
andl
and
xchg
mov
mov
shlb
mov
inc
fbld
pop
sbb
mov
clc
sbb
xchg
mov
je
in
mov
or
jo
int3
cs
daa
jle
push
and
add
gs
cmc
inc
mov
addr16
movsl
loop
rorb
dec
pop
repz
cmc
pop
mov
xor
jbe
ret
ds
iret
arpl
fisubl
pusha
clc
lods
xchg
pushf
enter
js
pusha
imul
fs
shlb
bound
mov
mov
arpl
jno
addr16
xchg
xchg
xor
in
mov
pop
jne
mov
push
lret
iret
fwait
push
push
inc
aas
push
adc
lahf
jge
pop
jmp
sub
les
aaa
mov
adc
cmpsb
sub
push
testl
pop
adc
test
ds
pop
dec
mov
sbb
test
ja
xchg
dec
adc
dec
scas
test
ds
or
mov
fistps
cmpsb
loope
sbb
lods
ficoml
xchg
fiadds
icebp
scas
cld
add
jae
pop
mov
lock
lods
dec
cmpsb
scas
enter
insl
pop
push
aam
or
addr16
icebp
aad
pop
std
inc
fdivrs
inc
jbe
xchg
jb
mov
push
add
out
out
or
xlat
pop
daa
jbe
lock
inc
xchg
loop
pushf
int
enter
jns
aad
repz
mov
das
shrl
popa
ljmp
cmp
pop
jl
sbb
test
cmp
jbe
jae
sbbb
test
or
inc
fs
lcall
cmpsl
out
mov
addb
les
icebp
add
fs
adc
je
lcall
xchg
sets
xchg
adc
out
negl
sbb
cs
adc
jmp
push
icebp
repnz
dec
jns
ret
add
lods
clc
pop
jmp
aad
mov
xchg
clc
jg
adc
stos
fsubrl
aad
dec
xor
sub
mov
int3
jl
test
fdivrl
jne
scas
movsb
jp
cmp
pop
jnp
cmpsb
mov
lock
out
movsl
enter
mov
ds
mov
mov
dec
push
gs
sub
test
inc
loop
pusha
rorl
loope
int
or
or
sbb
add
mov
rcr
xor
sub
or
or
aas
sbb
sub
out
test
mov
aad
sbb
in
cmpsb
sti
jge
cld
lock
scas
in
test
lods
lods
inc
test
jae
nop
push
or
jp
xor
push
loopne
xchg
psubb
cmp
aad
dec
bound
and
cmp
push
sub
and
mov
lret
out
jl
fwait
and
push
aaa
push
xchg
xor
stc
cmp
dec
cmp
pop
lods
jmp
and
xorl
pop
jae
mov
js
push
ja
rclb
inc
xchg
in
push
pop
scas
loop
inc
sbb
jmp
test
xor
mov
fdivrl
mov
dec
jae
push
pop
in
ss
pop
inc
enter
inc
cmp
bound
jo
add
fwait
xchg
mov
mov
xor
sbb
adc
dec
int3
dec
lahf
imul
push
dec
or
pop
and
mull
loope
mov
mov
push
test
push
movsl
lock
sbb
and
mov
ljmp
push
notb
jl
mov
iret
rcr
jle
pop
lock
or
push
add
dec
add
mov
int
imul
fsubrl
clc
adc
popf
loop
fildl
cmp
fcmovb
sbb
xchg
xchg
cmp
incb
pop
mov
ss
popa
mov
shl
gs
pop
mov
inc
pop
dec
stos
sbb
jle
ja
outsb
test
mov
add
in
in
mov
out
popf
push
call
adc
arpl
aad
mov
out
push
stos
arpl
dec
fwait
clc
pop
out
push
cld
rolb
out
push
jmp
stos
mov
push
mov
cs
xor
in
inc
mov
mov
call
imul
divb
sbb
mov
dec
jne
jbe
jp
insl
or
fstps
add
adc
pop
jne
mov
sbb
cmp
outsl
push
dec
mov
leave
pushf
jnp
and
push
insl
pop
data16
insl
jns
jb
inc
addr16
pop
fnsave
mov
out
dec
out
sub
rclb
and
push
xor
lret
bound
nop
add
lods
repnz
pop
mov
daa
sbb
adc
mov
sub
rolb
mov
shll
fmul
cmp
xor
test
sbb
pop
enter
add
sbb
out
lds
and
orb
jg
xor
fisttpl
mov
jecxz
cmp
or
jecxz
sti
inc
mov
ds
call
add
sub
jns
insb
push
mov
sbb
or
sbb
jecxz
dec
inc
and
shr
and
insl
ds
int
jl
loop
jp
mov
call
std
push
mov
add
repnz
divl
jle
in
imul
xchg
sbb
orl
movswl
push
xlat
push
add
add
mov
sub
and
sbb
das
inc
std
les
imul
outsb
mov
ja
xor
into
pushf
sbb
dec
xor
andl
movsl
scas
mov
neg
icebp
mov
ja
outsb
lcall
xchg
xchg
cli
mov
xchg
mov
daa
out
out
cmp
aas
pop
divl
jmp
and
out
loop
inc
pop
inc
out
xor
icebp
sahf
mov
in
xor
or
mov
mov
push
mov
push
fs
jno
test
dec
cwtl
rorb
inc
mov
fwait
push
xlat
out
jae
ret
cld
push
xor
push
repz
mov
push
outsl
add
xor
andl
shl
movsb
jl
movsl
mov
mov
roll
int
orl
push
js
gs
movsl
pop
gs
cwtl
imul
clc
fcmovnu
mov
jmp
int3
mov
mov
xor
js
or
and
mov
or
and
pop
lret
xchg
cmp
xor
push
cmp
psrad
nop
xchg
les
inc
fnstcw
test
aaa
mov
outsb
rcr
push
or
jbe
pop
jno
sub
leave
out
popa
jnp
pop
push
inc
js
scas
out
sti
sub
mov
xor
lcall
cs
mov
xor
fldcw
xchg
call
mov
mov
nop
inc
pop
adc
fstps
mov
xor
decl
lods
test
dec
scas
pop
xor
pusha
into
scas
in
enter
icebp
out
sti
sbb
icebp
xchg
ds
mov
mov
lock
jb
ja
lret
sub
sbb
enter
xor
mov
outsl
mov
cmpsb
cmp
lahf
xchg
pop
test
xchg
aas
pop
loop
dec
xchg
dec
and
lods
jg
daa
add
mov
or
cmp
iret
jl
xchg
in
aaa
xlat
push
push
andb
pop
mov
jns
pop
xchg
cmpsb
dec
xchg
mov
push
shll
inc
mov
mov
add
sbb
repnz
cmp
xor
pushf
cmp
pop
aaa
or
sub
xchg
lahf
out
fistpl
xor
movsl
jecxz
push
lcall
ret
and
jns
imul
pop
imul
xor
stos
and
cmc
push
out
push
xchg
pop
repnz
sbb
lods
add
xchg
xchg
sub
jg
jne
inc
xchg
add
dec
or
or
add
mov
scas
jl,pn
call
inc
or
sub
ds
pop
cmp
mov
mov
ss
in
or
sahf
sub
add
es
pop
ds
jg
jno
int3
lds
test
push
mov
dec
push
loopne
stos
xor
dec
mov
jbe
stc
mov
push
xchg
into
les
hlt
jl
or
push
les
xchg
mov
xchg
in
test
scas
xor
repnz
js
sbb
xor
and
rcrl
dec
out
jnp
ljmp
ja
mov
jbe
adc
jecxz
and
in
es
int3
xorb
scas
aad
sub
out
pop
push
fst
sti
test
jb
push
testl
fiadds
cwtl
cmp
je
and
adc
in
sbb
mov
inc
lea
and
cs
or
push
add
gs
dec
pop
fs
push
cs
mov
push
push
fcoms
cli
push
fstl
sbbb
cwtl
pop
repz
roll
cwtl
sarb
hlt
xchg
stos
hlt
jns
sub
add
movsb
ja
aas
std
lock
ja
int3
sub
std
outsl
or
cmp
add
jecxz
push
mov
cli
push
add
adc
push
divl
sbb
adc
xchg
push
jno
mov
lods
cmpb
ja
mov
pushf
cltd
mov
adc
dec
arpl
faddl
sub
push
inc
push
ror
push
and
andb
add
xchg
sub
mov
jns
fstpl
pop
cwtl
mov
mov
pop
test
add
mov
pop
aaa
inc
jb
stc
leave
sbb
repnz
mul
mov
pop
push
repnz
adc
call
movsb
pop
in
mov
pop
xchg
and
fsubr
fisubrs
sub
mov
push
sbb
cmp
or
stc
mov
lahf
lcall
push
sub
addr16
sub
insb
and
stos
cmp
sbb
imul
push
sbb
cli
gs
negl
fwait
cld
mov
inc
mov
jae
das
insb
cmp
dec
lahf
xchg
lock
clc
pop
jle
ret
das
sbbl
lock
xchg
hlt
xchg
cmp
fcmovb
cmp
insl
and
icebp
push
adc
xor
sbb
and
inc
sbb
jbe
loopne
sar
adc
movsb
negb
cmpsl
dec
fildll
cmp
loop
mov
je
sbb
inc
sub
sub
cwtl
add
fimull
fnsave
push
inc
xor
inc
mov
mov
ds
and
movsl
lods
fdivp
push
inc
cmpsl
dec
mov
in
jge
mov
stos
fnstcw
imul
into
pop
cmp
xor
xchg
popf
in
or
jns
loope
push
jno,pt
jae
cs
aam
push
xor
sub
in
inc
adc
pop
or
divb
ds
jecxz
outsb
movd
sub
xor
rcrb
mov
popf
mov
add
stos
add
iret
xchg
sub
dec
or
outsl
fisubs
or
testl
loope
sbb
adc
and
aam
stos
daa
xor
icebp
das
scas
sarb
mov
xor
and
aam
push
sbb
imul
pushf
into
pop
inc
jns
mov
jae
ret
xor
leave
fcoms
pop
sub
pop
sbb
loopne
das
or
xchg
xlat
or
xchg
imulb
lock
mov
cwtl
imul
rcll
sbb
mov
nop
inc
sti
lds
push
lahf
mov
out
cmpsb
daa
xor
inc
cltd
loopne
mov
mov
push
sarl
xor
scas
sub
scas
out
testl
pop
lahf
gs
cwtl
fnstenv
cmp
dec
adc
dec
popf
or
rcr
add
mov
es
popf
fstl
mov
inc
dec
xchg
inc
jp
out
or
xor
lahf
mov
lret
rorb
xchg
sbbb
imull
shrl
inc
mov
dec
adcb
add
inc
pop
or
pop
mov
icebp
pop
lret
push
add
leave
out
das
les
pushf
jle
fbstp
push
add
sub
mov
jp
popa
shl
dec
xor
orb
cmp
stos
gs
adc
ja
add
out
mov
push
std
stos
inc
enter
mov
inc
xchg
mov
pop
addl
jnp
jge
xor
dec
xor
mov
push
insb
jp
add
pop
orb
test
repz
sbb
sbb
int3
mov
push
mov
shrl
pop
push
xor
dec
or
hlt
jb
mulps
popa
mov
into
mov
test
test
push
xor
rclb
jne
mov
sbb
gs
insb
push
push
pop
iret
lock
mov
scas
rcll
int
fnstcw
dec
or
mov
sti
std
dec
cltd
daa
enter
lcall
sbbl
sbb
cwtl
push
cmp
test
mov
mov
cmpsb
dec
jbe
xor
lahf
push
inc
dec
daa
and
outsb
nop
inc
pop
mov
inc
lret
pop
dec
xor
cmp
add
push
cwtl
rorl
outsb
jae
arpl
stos
gs
xchg
mov
ss
cli
dec
xchg
jns
dec
push
sbb
xlat
insl
movsl
paddq
dec
inc
add
sbb
mov
notl
das
mov
fisubrs
cmc
hlt
insl
jecxz
jl
inc
and
insb
cli
mul
shlb
outsb
pop
cmp
test
scas
xchg
mov
loope
xor
xlat
loopne
jp
dec
adc
les
or
lods
movsl
inc
leave
xchg
pop
push
in
fwait
sbb
lds
les
pop
sbb
out
pusha
scas
lcall
lods
fisubrs
lods
push
dec
lahf
jp
popa
lea
aaa
stos
adc
add
mov
pop
fldcw
adc
gs
mov
loope
aas
push
lret
or
sub
sbb
stos
jnp
imul
cmpsb
lods
lock
push
in
movsl
fidivl
stos
imul
ja
idiv
test
or
pop
jne
pop
dec
push
addb
dec
mov
lret
div
nop
xchg
and
cltd
sub
jno
ss
mov
mov
loopne
add
mov
jne
pop
lock
sbb
inc
inc
sub
lret
ret
mov
movsl
popa
dec
subl
lret
arpl
test
aam
mov
cld
sbb
mov
in
out
mov
hlt
js
outsl
icebp
jne
sahf
or
mov
scas
inc
orl
add
mov
xchg
inc
daa
movsb
cmp
jl
dec
or
lock
jo
cli
fincstp
int
mov
and
mov
std
fisubl
dec
xor
int3
mov
loope
cld
stos
ss
inc
outsl
add
aad
mov
dec
sbbl
int3
gs
aad
repnz
repz
fsubs
cwtl
stos
frstor
mov
gs
scas
xchg
aam
ljmp
ret
roll
hlt
popf
scas
jno
pop
lret
orb
out
ljmp
imul
sub
sbb
fldcw
mov
sti
xchg
ret
mov
xchg
xchg
stc
int3
ret
daa
clc
push
mov
push
mov
loope
jg
clc
mov
fsubr
imul
aam
pop
ss
daa
dec
pushl
ljmp
mov
push
cmp
dec
cmp
inc
mov
call
int3
leave
or
fistpll
adc
lds
lcall
jmp
orl
cmp
xchg
push
jnp
or
jbe
lret
xchg
mov
cmp
addr16
movsb
sbb
lea
imul
xor
rolb
push
outsl
mov
mov
cmpsb
cmp
aam
pop
arpl
mov
inc
insl
dec
test
pushf
ds
push
movsl
xchg
add
movsl
cmp
cli
sbb
icebp
cwtl
jo
sbb
out
xor
mov
jl
and
inc
leave
outsl
or
test
mov
mov
jo
mov
cltd
mov
mov
idivl
push
in
in
repz
jge
mov
and
mull
rcl
jne
xlat
fisttpl
stos
ret
test
inc
sti
xor
in
ljmp
push
mov
jne
insl
icebp
push
mov
pusha
jb
xchg
mov
or
cmp
shlb
sbb
les
in
rcrl
ja
lods
cmp
in
sbb
and
ss
mov
xchg
or
mov
push
mov
xchg
mov
stos
sbb
jg
ret
mov
mov
add
jns
ja
imul
subl
jnp
in
mov
mov
int3
mov
or
mov
push
in
lahf
xor
stos
lcall
sbb
ret
fwait
push
rolb
mov
clc
int
ds
cmp
adc
nop
cmpsb
mov
out
addb
aaa
movsl
repnz
mov
push
addb
push
iret
js
call
jmp
sbb
cmp
shl
pop
pusha
xor
cli
mov
pop
aam
ss
cmpsb
aad
movsl
dec
push
dec
push
mov
push
jle
aam
imul
sub
pusha
imul
test
jp
es
lea
sahf
jp
lret
enter
cmp
cmp
jbe,pn
xchg
cmp
xchg
jle
pop
ret
add
or
add
incb
mov
ret
jge
lods
add
test
cli
push
repz
jnp
jle
adc
jnp
jae
mov
push
xlat
cwtl
out
jnp
sub
scas
dec
rcr
xorb
jb
dec
jmp
rclb
inc
iret
mov
fwait
movsb
incb
out
push
in
mov
mov
sbb
test
or
lods
clc
orl
cmp
inc
insb
mov
ffreep
xchg
adc
jnp
mov
lods
lea
fidivl
mov
aad
pop
subl
mov
and
adc
mov
rcl
cmp
push
in
adc
dec
js
mov
mov
sbbl
mov
in
jg
ficoms
gs
and
jb,pt
jle
pop
xlat
addr16
add
filds
mov
leave
xor
xlat
mov
cmp
jo
add
js
in
aad
les
lds
inc
jg
cld
dec
dec
push
or
push
cmc
insb
inc
nop
push
insl
jns
fldl
popf
subb
adc
inc
sbb
fisubrs
scas
and
push
push
enter
dec
sbb
mov
repz
push
inc
repnz
jle
sub
jns
fdivp
sbb
pop
leave
mov
andb
cld
pushf
cld
mov
or
popa
stc
mov
adc
cld
test
cwtl
addr16
xor
dec
jne
xorb
movsb
jmp
jl
sub
and
or
push
je
mov
dec
jg
push
add
and
sub
in
pop
fistpl
pop
in
mov
nop
cli
inc
aad
sti
cs
pop
outsl
cld
jmp
add
add
lahf
int
mov
add
jecxz
push
outsl
lods
and
nop
jae
mov
xchg
ljmp
sbbl
fiaddl
dec
lret
leave
aas
in
mov
pop
adc
mov
and
xor
xchg
lods
pop
mov
push
fsubrl
mov
adc
adc
out
mov
aaa
subb
test
aad
test
and
add
fwait
inc
jle
mov
mov
scas
jge
or
push
jmp
push
in
pop
xor
gs
arpl
loopne
dec
das
xchg
das
jo
and
es
and
xor
in
jns
pop
xchg
into
ljmp
arpl
ljmp
insl
sahf
in
or
hlt
inc
sti
ret
xchg
fldenv
mov
lahf
icebp
mov
incb
pop
ljmp
adc
les
dec
or
test
cmp
pop
in
je
icebp
jmp
ret
es
inc
mov
lods
jge
fcompl
dec
clc
and
daa
subb
mov
adc
jnp
fcmovnb
dec
pop
pop
rorl
push
jp
sarb
scas
mov
dec
or
fcmove
sub
call
mov
sub
lret
in
or
jle
in
inc
xor
dec
les
in
sub
mov
push
and
scas
sub
ss
push
pop
rorb
repz
mov
sbb
mov
jge
mov
inc
aam
xor
adc
add
ljmp
ss
mov
adcb
fsub
cmpsb
dec
and
add
mov
nop
out
mov
mov
inc
dec
jmp
add
xchg
mov
xchg
stc
aam
sahf
mov
push
push
test
dec
jb
cmp
repnz
jo
adc
arpl
ljmp
scas
sti
dec
mov
xor
sub
insb
and
xchg
fistpl
lret
jbe
dec
das
vplzcntd
pop
inc
jbe
cmp
int
mov
out
test
ds
repz
lcall
int
aad
mov
sahf
cmp
not
inc
mov
fcmove
cmp
add
pop
pop
outsl
repnz
scas
std
pop
loopne,pn
adc
mov
and
sti
or
cld
repnz
or
mov
or
mov
daa
dec
fs
popf
or
cli
rcrl
adc
cld
jmp
add
pop
movsl
mov
mov
pop
mov
inc
dec
ss
test
jge
add
jp
push
lahf
inc
out
ret
jecxz
inc
adc
pop
adc
jl
int
das
mov
sbbb
popf
rclb
mov
inc
clc
packsswb
pushf
xchg
fdivs
shlb
cld
dec
sub
sarl
jbe
pop
dec
push
insl
fisubrl
mov
popf
insb
add
push
inc
inc
adc
adc
adc
iret
dec
out
shl
cli
mov
and
repnz
out
cmpsb
inc
mov
jo
mov
adc
popa
sub
adc
pop
pop
inc
xchg
cmpsl
arpl
mov
das
iret
jle
jge
cmpb
ret
sub
mov
mov
jl
cmp
mov
iret
cs
push
fidivrs
and
fstpl
and
cmp
out
xchg
out
jbe
repnz
pop
and
je
iret
push
hlt
sub
or
adc
pop
and
in
scas
or
sbb
push
mov
xor
xor
int3
sbb
cmpsb
sub
dec
loope
imul
jecxz
insb
push
pop
movsb
das
jl
push
fidivrl
pop
inc
pop
push
and
jno
cld
lea
sub
add
xchg
pop
lahf
mov
lahf
insl
mull
ds
mov
jecxz
jl
sbb
pop
rcrl
mov
sub
pop
insl
test
fildl
push
rol
cmp
popa
test
outsb
xor
lock
dec
sbb
in
in
mov
out
xor
repz
mov
jns
or
in
movsb
lds
fwait
shll
jle
xor
cmp
mov
in
xor
outsl
shrl
aaa
or
mov
enter
xchg
das
in
pop
insb
nop
push
jge
push
push
cmp
out
fwait
cmp
jb
jle
movsl
std
int3
lock
scas
stos
adc
iret
mov
sub
aad
inc
clc
int3
cmp
fs
arpl
js
jmp
push
mov
jns
out
mov
lret
rcr
adc
mov
inc
addl
out
inc
push
dec
lods
loop
mov
repnz
add
addr16
mov
ljmp
and
rorb
shl
icebp
or
cs
lock
sbb
sub
xchg
sti
add
or
or
mov
xchg
lods
push
push
push
adcb
jne
jl
aad
notb
cmp
push
fwait
xor
pop
inc
dec
mov
and
pop
call
pop
inc
jnp
lahf
jae
mov
push
aam
dec
dec
xchg
shlb
dec
daa
les
ljmp
inc
js
jne
push
stos
fcomps
inc
call
jg
insb
inc
pop
mov
pop
xchg
pop
jne
stc
sbb
insb
push
push
mov
stos
mov
lods
ret
mov
rep
or
daa
cmpsb
inc
rcl
aam
inc
pop
leave
das
add
out
dec
xchg
sbb
add
das
lret
jnp
push
iret
rcl
mov
mov
pop
sbb
mov
cmp
fdivs
push
dec
jo
das
jecxz
fistpl
les
mov
add
scas
fistpl
sti
adc
scas
sbb
adc
sbbl
push
push
jmp
adc
jns
inc
sbb
mov
mov
test
xchg
inc
inc
and
sbb
pop
aas
popf
or
jmp
mov
and
testb
xchg
nop
insl
mov
push
arpl
mov
aas
xor
cmp
sub
xlat
xchg
adc
and
insl
inc
outsb
mov
movsl
addl
lods
loope
inc
dec
mov
push
out
push
or
add
mov
insl
pop
bt
jb
cmp
inc
push
fwait
dec
int
add
and
insl
jge
fstps
sub
sbb
dec
or
fsubrs
xchg
jno
into
mov
or
cwtl
dec
sbb
test
mov
sbb
int
jg
int
pop
les
shrl
popf
out
mov
sub
out
xor
xlat
sahf
shlb
xlat
jns
xchg
popf
icebp
jno
cmpsl
lret
sub
fcoml
cld
mov
or
adc
push
outsl
sahf
add
lock
cmp
out
jnp
loopne
roll
adc
lods
mov
xor
negl
decl
pop
pushw
fcmovbe
bound
ss
sub
xchg
adc
mov
test
imul
lds
cld
icebp
gs
js
cmc
push
inc
fucom
mov
out
jecxz
xor
dec
enter
inc
adc
cmpsl
push
add
xor
mov
mov
les
lcall
xchg
cmp
or
loope
push
out
lcall
mov
ja
loope
mov
pop
xchg
cmc
xchg
add
std
dec
xchg
sbb
scas
inc
sahf
popf
fdivs
xor
adc
lea
inc
mov
imul
rcr
shll
gs
mov
fmull
push
enter
mov
inc
std
mov
fcompl
cwtl
das
mov
loopne
jne
dec
movsl
aas
pop
xchg
jo
fisubl
jne
stos
insl
ljmp
xchg
lret
subb
imul
mov
repz
arpl
or
adc
lock
jns
call
mov
jge
popf
scas
jmp
fldenv
imul
pop
loopne
or
mov
repnz
push
push
sbb
outsl
pushf
in
adc
xor
jb
mov
jge
add
jmp
ds
cmp
ds
js
loopne
mov
andl
std
mov
adc
xchg
stos
lds
mov
xchg
outsb
jl
int
mov
mov
xchg
push
je
rcrl
inc
mov
jns
loop
mov
fwait
sub
and
or
push
iret
mov
xchg
adc
jecxz
shll
sub
adc
or
fimull
addb
iret
push
mov
aas
lds
inc
mov
fcomps
movsl
jno
add
icebp
mov
inc
and
popf
xchg
test
sub
dec
pop
mov
jge
mov
lods
out
pop
or
dec
jmp
add
lds
adcb
add
roll
jl
fwait
push
mov
jl
sti
in
mov
dec
fs
mov
lret
xor
cmp
aaa
outsl
dec
xlat
xchg
dec
cs
mov
lahf
inc
cmpsl
out
and
sti
aas
jmp
mov
mov
mov
adc
dec
xor
movsl
fmull
addr16
cmp
mov
imul
pushf
pop
mov
sar
dec
sbb
mov
jle
das
mov
dec
xor
or
mov
jle
aam
mov
cmp
mov
lds
sti
sub
jl
cli
inc
mov
jle
outsb
lods
add
in
dec
pusha
and
leave
out
flds
das
mov
sub
mov
add
bound
push
inc
lahf
insb
dec
jge
xchg
fwait
adc
je
push
ss
repnz
jne
jne
repnz
inc
scas
add
test
mov
inc
loopne
fs
jl
inc
xchg
dec
out
pop
xchg
inc
dec
shrb
pop
sub
xor
insb
leave
leave
in
pop
sti
pop
aad
pop
push
push
and
xor
jno
mov
ljmp
adc
push
sub
and
pop
jge
fmuls
lock
out
sub
add
mov
mov
add
cmp
inc
mov
push
lahf
cmp
adc
mov
jbe
pop
mov
jbe
dec
dec
nop
loope
xchg
aad
sbb
test
scas
adc
xor
jmp
jecxz
cmp
sub
fistps
std
loope
ja
xor
ret
pop
adc
dec
or
xchg
pop
data16
test
jo
xor
dec
add
jae
pop
cmp
test
sbb
dec
pop
or
je
addr16
ror
cmp
push
insl
push
or
outsb
or
pop
pushf
cltd
mov
mov
cs
mov
scas
es
arpl
lahf
jne
sbb
or
jmp
xchg
inc
jno
insl
fbld
mov
popf
out
pop
xchg
inc
addr16
pop
mov
and
js
and
push
lods
inc
add
pop
das
int
add
pop
das
sbb
pop
cltd
mov
mov
pop
pop
je
imul
lcall
lods
inc
jns
push
mov
sbb
jl
out
add
inc
push
xor
sbb
aas
ljmp
int
mov
outsb
rcrb
jns
addb
scas
lret
and
xchg
enter
lock
cmp
in
dec
in
dec
push
and
jmp
out
dec
fcom
fisttpll
mov
lods
xchg
mov
push
sbb
push
xor
mov
push
in
loope
sub
aas
test
cmp
js
xorl
cwtl
fwait
mov
gs
xchg
xor
adc
aad
xor
or
cmp
mov
inc
mov
orl
or
sub
inc
cmp
dec
sahf
subb
movsl
fnstenv
iret
pop
or
inc
gs
push
out
cli
pop
or
inc
in
das
add
arpl
stos
jmp
dec
sub
sti
ret
or
inc
mov
test
inc
pop
cltd
icebp
shr
cmp
les
mov
pop
jb
sub
dec
pop
xor
add
jo
aas
sbb
sub
jae
cmc
mov
inc
aad
xchg
xor
jo
fcomp
into
sbb
push
push
gs
inc
popa
and
and
and
in
stc
dec
inc
leave
jle
adc
jno
mov
ljmp
call
jns
ljmp
xchg
pop
jge
pop
cs
mov
sahf
loop
vrsqrtps
lret
mov
mov
and
pop
xor
in
gs
movsb
xor
add
push
mov
sahf
test
enter
adc
ret
das
pushf
ss
movsb
jns
in
sbb
push
pop
mov
sbb
push
adc
cld
movsb
arpl
cli
out
mov
dec
mov
dec
and
push
lcall
repnz
cmpsb
cltd
dec
jnp
cmp
loopne
sub
jbe
gs
cmp
jns
scas
cmp
shl
or
inc
push
and
jecxz
movsl
aas
inc
jbe
cs
xor
and
cmp
icebp
clc
add
stos
jo
jnp
mov
push
test
mov
mov
hlt
popf
mov
in
out
pushf
or
jg
adc
outsl
adc
dec
push
or
mov
sub
cmp
lds
mov
scas
fildl
data16
mov
xchg
movsl
shll
es
das
imul
stos
sub
sub
aas
pop
push
and
in
sti
test
stc
stc
jmp
xchg
mov
aam
outsl
cmc
push
rorl
pushl
movl
mov
xor
jp
cmpl
dec
cld
in
test
loop
xchg
imul
fsubrs
insl
or
dec
pop
out
in
or
imul
xchg
fdivrp
xchg
fisubs
xor
les
or
out
std
push
addr16
pop
xchg
cmp
divb
sbb
push
int
pop
mov
aaa
mov
rcrb
daa
lock
mov
in
fs
test
rcrb
cs
xchg
jecxz
push
mov
jnp
xchg
dec
push
ficompl
inc
and
xor
loopne
rolb
enter
imul
xlat
movsl
fs
cmp
lret
dec
pop
xor
sti
mov
pop
and
or
test
cmpb
out
lahf
push
and
sbb
popa
lock
fwait
notl
xor
icebp
int
sub
mov
sti
cmp
mov
sbb
cmpl
nop
in
mov
xchg
adc
cltd
arpl
scas
cmp
mov
push
cmpsl
call
cmp
imul
adc
cs
sub
inc
jle
push
fsubrs
pop
adc
cld
js
in
cmp
sbb
ret
hlt
or
sahf
jge
mov
movsb
mov
fsts
push
js
mov
pop
sbb
into
bound
ret
rcr
push
test
jmp
mov
jge
test
lret
sub
insl
lods
repz
leave
pushf
mov
xor
jl
push
push
pop
popa
aaa
xor
in
or
mov
mov
aad
into
push
xor
jne
rcll
xchg
mov
ljmp
cmp
or
jno
xor
sbb
in
jbe
call
test
adcb
sub
addr16
inc
jnp
inc
jbe
int3
push
rol
and
pop
ljmp
in
jg
fnstsw
cmp
pop
testb
jecxz
fistl
mov
xchg
dec
fs
cmc
and
cmp
lcall
push
loope
xor
leave
or
daa
mov
jge
mov
shlb
inc
aaa
mov
add
test
lds
push
leave
mov
aam
sub
ret
pushf
mov
add
add
les
mov
fisttpl
lcall
adc
int
jne
inc
arpl
or
and
fscale
sbb
pop
out
mov
add
adc
and
shr
jmp
cmpsl
loop
and
jge
xor
movsl
pop
or
jl
sub
mov
xor
xchg
jae
test
dec
hlt
js
rclb
ret
ret
inc
je
lret
sbb
lret
sub
cmc
sub
pop
insl
mov
in
mov
cmp
mov
rcrl
pusha
imul
jp
imul
leave
cltd
push
out
iret
push
xor
adc
xchg
jmp
dec
jnp
xor
mov
adc
xor
arpl
pop
mov
jnp,pt
mov
outsb
iret
fs
lahf
or
add
mov
adc
out
or
cmc
fdivr
rcl
dec
ja
jmp
mov
aad
xchg
push
xchg
xor
jno
in
lods
xchg
je
lds
cmpsl
loope
mov
push
jle
jnp
ret
xchg
out
cmp
hlt
or
inc
add
stos
imul
xor
out
out
pop
and
ljmp
pop
and
aas
mov
mov
xlat
fldcw
push
fcmovnb
push
das
cli
sub
or
fstl
cli
ds
leave
dec
xor
outsl
jbe
nop
enter
xchg
xor
mov
jmp
lods
inc
jle
xchg
mov
lds
push
xlat
push
xchg
loopne
cltd
pop
and
xlat
lods
mov
adc
in
mov
xchg
psrlw
dec
icebp
lods
mov
repnz
stos
cmp
adc
sti
cmp
mov
mov
mov
xor
hlt
outsl
imul
mov
int
push
in
pop
adc
adc
lea
iret
pop
inc
gs
shrl
pusha
fnstenv
into
pop
push
cmpsl
out
psrlq
xchg
int
inc
jae
out
out
cmc
lahf
dec
fisubrs
xchg
fsts
sub
cltd
pusha
cli
pop
enter
adc
lea
and
mov
sub
sub
lahf
rcrb
jo
lods
cmp
stos
lods
popa
jnp
xchg
out
out
cli
outsl
es
stos
fldenv
test
push
pop
and
mov
add
iret
xchg
mov
lret
pop
push
sbb
push
push
pop
je
mov
imul
aaa
sbb
and
mov
add
sbb
push
xor
lret
jle
sahf
ds
testl
ror
cmc
fdivl
mov
ds
into
inc
fldcw
lea
stos
aad
aas
or
iret
fisttps
lret
and
enter
inc
mov
xlat
int3
cwtl
jle
out
icebp
jns
shll
jns
mov
fnstcw
inc
clc
add
pop
sub
das
ljmp
aaa
or
rep
push
push
push
dec
xchg
mov
nop
and
xor
les
pop
xor
shlb
cmp
mov
outsl
mov
push
cli
add
lret
xorb
mov
pop
xor
nop
adc
jo
pusha
shll
inc
out
xchg
mov
sub
and
scas
or
lcall
cmp
sub
push
mov
sub
mov
mov
push
jg
mov
inc
mov
xchg
sub
test
repz
out
jbe,pn
lds
fiadds
mov
sahf
jmp
push
fsubl
sbb
push
inc
push
push
sbb
arpl
inc
or
sahf
in
add
adc
fisubrl
loopne
faddl
pop
lock
add
or
push
into
and
sti
jne
cmpsl
fstl
outsl
faddl
add
xor
mov
push
cs
cmpsb
loope
shlb
jmp
bound
jle
incl
aaa
push
stos
inc
and
mov
imul
mov
les
loopne
inc
mov
fstpl
test
push
sub
adc
xchg
xor
xor
fsubr
xlat
stos
dec
mov
pusha
or
pop
xor
mov
push
rcl
xchg
cmp
loope
stos
add
hlt
lea
mov
push
cld
push
out
outsl
mov
aad
mov
cwtl
bound
sub
mov
xor
push
mov
dec
imulb
mov
subb
mov
rclb
add
and
mov
mov
cltd
add
aaa
inc
add
stos
jp
jecxz
xchg
jp
dec
push
arpl
loopne
roll
outsl
sub
ja
cmp
andl
pop
mov
out
data16
les
or
inc
test
dec
movsl
cld
push
pop
push
dec
mov
lahf
pop
adc
rorl
lcall
aaa
aaa
jp
cmp
adc
sub
aad
ljmp
icebp
cmpb
mull
jnp
push
roll
or
test
xchg
adc
pop
inc
inc
sbb
jno
fwait
andl
sbb
loope
lods
into
rcll
mov
jbe
divb
inc
stc
ret
cmp
jmp
cltd
mov
sub
pop
mov
movb
push
add
and
lods
add
popa
jp
mov
or
push
xchg
mov
xor
shr
add
popf
popa
lea
dec
xor
aas
add
es
mov
into
sub
xor
lock
xor
stos
mov
xchg
arpl
mov
inc
push
xlat
ss
pushl
sbb
in
inc
cmp
dec
pusha
std
pop
nop
mov
or
cs
ljmp
jae
mov
ss
aad
push
out
add
jns
jne
pusha
leave
nop
push
and
fisttpll
mov
iret
pushw
cli
mov
movsl
pop
mov
das
jb,pn
pop
pop
dec
adc
dec
sbb
dec
sbb
aas
cld
xor
cmpsl
loopne
or
jae
test
stos
cmp
fidivrl
test
fisubl
sarl
pop
imul
outsl
ss
daa
jecxz
adc
cmp
pop
push
jmp
hlt
jmp
dec
in
in
inc
ret
cltd
loope
pop
pop
adc
mov
push
aaa
pushf
cmp
cmp
nop
in
push
push
bound
xchg
xchg
adc
add
xchg
dec
mov
push
divb
jne
out
and
xchg
sbb
loop
lods
push
add
xor
jae
xchg
xchg
idivl
stos
xor
adc
cmp
lahf
push
ret
fdivl
pop
mov
mov
rcl
push
jle
pop
rorb
jge
add
cwtl
pop
or
xor
mov
call
mov
loop
in
push
call
and
arpl
and
lods
fstpt
adc
out
fbld
lea
cmpsl
mov
push
lea
mov
or
into
xchg
or
mov
adcl
pop
je
rorl
adc
adc
out
push
ret
inc
and
test
pop
add
fidivl
lcall
jo
cs
xor
bound
lcall
pop
and
add
xchg
sbb
ljmp
cmp
lret
push
or
movsl
xchg
adc
loop
lret
clc
sbb
dec
aas
fwait
shll
mov
scas
icebp
jb
sub
xor
in
xchg
inc
mov
xchg
sti
cmp
mov
or
push
stos
mov
popa
jp
mov
call
frstor
sarb
pop
mov
or
push
mov
dec
inc
push
pop
clc
mov
repnz
or
jg
mov
mov
aas
and
jno
es
and
insl
sbb
jecxz
cmc
pusha
aad
jmp
repz
and
jl
xchg
mov
push
and
jnp
insl
insb
mov
inc
push
xchg
cmp
pusha
pop
mov
mov
or
repz
and
jp
fs
mov
pop
int3
js
jp
inc
mov
insl
jle
insl
pop
test
xchg
mov
adc
add
and
lea
cmpsl
test
mov
cli
xor
sub
xchg
and
clc
ret
aam
add
test
scas
cli
dec
mov
aad
cmp
and
ss
ffree
push
lds
jmp
leave
cmp
xchg
in
or
xchg
push
repz
push
popa
pop
jae
adc
out
cmp
or
hlt
jae
sti
mov
cmp
mov
test
andb
or
shrb
sub
rep
add
mov
bound
lods
inc
and
fldenv
pop
repz
jae
lods
pop
stc
mov
inc
jo
jae
stos
data16
test
xchg
fs
and
out
movsb
cli
adc
dec
movsb
xchg
fcomi
pusha
rcl
enter
or
stos
jp
mov
or
ror
mov
xchg
inc
mov
push
push
mov
pop
jns
insl
pop
add
int3
and
or
ficoms
sbb
rcr
outsl
aaa
inc
jbe
test
and
push
test
loope
sti
scas
aaa
xor
jno
sub
test
scas
aaa
pop
leave
pusha
jb
mov
and
jbe
fisubs
mov
call
pop
pop
add
jmp
and
in
sarb
dec
pop
inc
lods
fcomps
xor
lock
pop
pop
jmp
push
mov
pop
and
and
push
xchg
lods
outsl
ret
sub
fisubrs
lds
inc
jge
pop
xchg
cwtl
mov
cwtl
pushf
jecxz
pop
jbe
mov
push
stc
xor
sbb
mov
ret
jbe
outsl
cmp
mov
clc
pop
inc
in
lods
mov
insb
dec
hlt
mov
mov
fistps
xchg
cmp
and
mov
fimull
sbb
jmp
loop
call
mov
test
cs
jmp
movaps
cmp
sub
inc
add
imul
jb
xchg
push
jp
and
xchg
cmovg
test
inc
cwtl
ja
lea
in
dec
cmpsb
movsl
out
inc
ror
int3
mov
push
push
lahf
aad
pusha
mov
test
xchg
in
and
jnp
xor
mov
int
sub
cli
dec
clc
xchg
aaa
dec
pop
sti
adc
xchg
add
mov
mov
loopne
cs
shll
and
lret
jb
aam
mov
pop
pop
notl
ss
add
mov
in
xor
sbb
mov
nop
fs
dec
imul
aam
iret
xor
int3
cmpsb
jns
add
jae
repz
mov
shl
addb
leave
xchg
push
push
add
in
or
push
push
mov
out
inc
fs
stos
lods
push
pop
cwtl
adc
in
dec
cmp
mov
cld
test
jge
shl
dec
pop
add
and
cli
stos
xchg
fstl
pop
cmc
mov
xor
or
xor
rcll
in
lret
xchg
dec
shlb
and
sub
xor
out
mov
outsl
sub
fmulp
pushf
popf
adc
cmpb
lock
jmp
bound
push
and
mov
into
test
push
mov
ja
or
jg
mov
push
decl
pop
push
sbb
xor
inc
imul
std
add
or
test
jle
inc
insl
cmp
sub
aaa
pop
sub
sub
iret
lcall
xor
xor
arpl
mov
int
dec
xor
cmp
fmull
gs
loopne
adc
fnstenv
mov
jb
aaa
mov
push
or
orb
mov
loop
test
jae
inc
pop
cltd
pusha
jb
fsubrl
test
add
push
pop
push
pop
adc
out
mov
cld
dec
cmpsb
inc
aas
outsl
rcll
fldt
pop
aas
add
sbb
leave
jne
cltd
fnstsw
addl
out
or
push
push
ret
rcl
pop
aas
add
add
out
add
das
xor
xor
shrb
and
xor
daa
mov
lret
daa
pop
mull
in
loop
and
pop
shl
gs
popf
ljmp
push
rorb
mov
pushf
cmpsl
mov
cmpsl
sti
test
push
and
lret
sub
cmp
insl
test
add
scas
mov
adc
and
mov
out
dec
cmp
push
xor
or
jae
push
jno
or
fistpl
jl
add
inc
dec
and
les
lcall
leave
cltd
out
pop
mov
mov
lret
push
pop
mov
clc
cmp
enter
dec
mov
mov
lahf
pop
repnz
lods
xchg
jns
enter
xchg
add
mov
xchg
test
test
test
movsb
pushf
pusha
dec
cmpsb
inc
hlt
into
fistps
sti
paddsb
loope
cmpsb
js
mov
es
leave
mov
cwtl
or
sti
pop
cmpsl
int
xor
test
fstl
mov
enterw
cmp
lret
or
lret
push
push
inc
fs
fcomps
mov
xchg
aam
inc
jne
xchg
mov
lahf
in
mov
dec
or
and
leave
movsb
divb
clc
repz
stos
dec
xor
push
arpl
int3
and
out
xor
pop
scas
xchg
dec
jl
rolb
xchg
push
pop
ja
inc
cs
mov
cwtl
cld
mov
mov
push
cmpsb
cltd
inc
mov
je
cli
cli
inc
cltd
xor
test
pop
or
cmc
add
add
mov
stc
cmp
and
dec
sbbl
int
jno
jnp
add
xchg
arpl
xchg
insl
fincstp
xor
imul
jle
test
rol
fwait
mov
pop
rep
mov
ljmp
movsl
iret
or
movsl
add
ret
adc
mov
add
mov
in
out
push
or
xchg
inc
mov
inc
mov
call
out
loop
outsb
pop
jae
mov
push
inc
mov
mov
aad
enter
aaa
and
stc
movsl
std
mov
cmp
add
fs
and
mov
insl
inc
div
sbb
xchg
mov
xlat
xchg
dec
xlat
xchg
ror
call
sti
ret
subb
roll
fsubr
dec
repz
test
mov
dec
loope
jecxz
outsl
pusha
fld
nop
loope
insl
test
rcll
and
or
test
and
sbb
shlb
xchg
xchg
test
add
add
sbb
sbb
push
xor
cmpsb
sti
psrlw
pop
cmc
dec
adc
adc
ds
jp
jg
les
in
xchg
insb
or
inc
aad
sub
stos
fdivl
test
into
or
icebp
jge
adc
sbb
push
push
popa
fisttpl
jmp
sub
aaa
cmp
popf
call
enter
mov
leave
cli
call
iret
push
aas
add
pusha
dec
or
enter
cli
sahf
ret
mov
sti
sbb
fists
jge
inc
dec
sarb
push
dec
adcb
in
inc
lret
cltd
fiadds
adc
enter
subl
mov
insl
lea
xchg
loope
cmpsb
mov
cld
add
xchg
jae
mov
push
rcrl
es
scas
lea
xchg
ret
fdivp
sti
or
popf
shrb
test
inc
cmc
stos
ljmp
adc
mov
lahf
sub
pop
ss
inc
jo
mov
push
ljmp
pop
sbb
ret
shlb
rcrb
push
sbb
pop
sub
fadds
fwait
rorl
je
push
and
sbb
pusha
repnz
pusha
sbb
sbb
int3
mov
rol
leave
push
subl
push
mov
jge
mov
push
or
lahf
push
inc
cmp
cmp
test
pop
ljmp
addl
mov
scas
loopne
orl
push
or
les
pop
out
rorl
rolb
popf
fwait
imul
xchg
stc
jb
jp
push
fldt
imul
int3
leave
sahf
fldt
dec
inc
pop
data16
push
mov
movsb
cmpsb
sbb
ret
repz
or
inc
rcr
or
shrb
or
subl
adc
inc
scas
or
outsb
dec
add
ds
lock
movsl
cltd
shl
dec
hlt
pop
sub
inc
jo
sbb
test
addr16
insb
mov
jns
jmp
push
fistpll
xchg
sub
add
pushf
dec
popf
cltd
loope
in
sub
sbbb
fstpl
cld
mov
insb
pop
jae
adc
mov
or
gs
push
sub
or
cld
xor
into
dec
sub
arpl
mov
idivl
mov
out
in
in
sub
addr16
xor
add
iret
stc
jae
xor
push
dec
adc
xchg
mov
push
mov
mov
cmp
pushl
jge
mov
mov
daa
mov
hlt
xchg
sbb
movsl
mov
pop
repnz
les
cmp
mov
sub
jmp
ret
xchg
notl
movsb
movsl
push
push
jne
cwtl
inc
pop
into
hlt
adc
jmp
mov
outsb
pop
inc
adc
lret
push
cld
fs
repz
mov
and
adc
or
movd
push
jne
mov
stos
loopne
call
shrb
addr16
ds
jmp
popf
mov
inc
mulb
or
cld
nop
movsl
sbb
and
js
adcl
pusha
xchg
xchg
leave
adc
std
sub
outsb
mov
cltd
mov
jb
adc
int3
sbb
out
loop
fistl
or
dec
pop
xchg
xchg
outsl
push
cmc
mov
hlt
or
addr16
std
repz
jnp
push
cmc
outsb
movd
inc
loope
sti
lea
mov
xchg
imulb
scas
faddl
xchg
xor
stos
jmp
insl
dec
jno
inc
sub
pushf
in
ljmp
repnz
dec
cltd
sbb
xchg
decb
inc
mov
lods
inc
cld
push
mov
test
test
ljmp
jmp
cli
jne
fisttps
pop
adc
jns
push
push
mov
ss
scas
push
outsb
jmp
aas
dec
leave
and
inc
mov
ficoml
xchg
shl
jae
add
cmp
fsubrs
jo
fwait
push
adc
lods
ds
xchg
inc
mov
and
ja
or
add
aas
inc
ficompl
or
push
mov
jae
icebp
enter
or
pop
outsl
jg
push
mov
dec
iret
fstpt
and
iret
imul
inc
xor
arpl
pop
sub
cmpsl
out
ja
push
mov
in
loopne
shl
movsl
sub
jp
loope
push
mov
mov
inc
jne
test
xchg
push
adc
or
test
loopne
and
insl
push
lds
add
orl
xchg
cmp
pop
in
jmp
shl
insl
sarl
push
and
test
flds
imul
test
sti
out
call
dec
lods
std
and
repz
inc
push
sub
dec
sub
mov
push
outsl
mov
cmp
test
push
sahf
and
sub
adc
lds
sbbl
and
test
mov
movsl
call
jecxz
cmp
mov
mov
notl
shrb
mov
jp
and
daa
enter
jno
mov
or
cmp
dec
push
add
xchg
xor
adc
pusha
cmp
loopne
mov
test
mov
sub
mov
mov
mov
or
sub
cmp
dec
movl
insl
pushf
cmpsl
test
lret
xchg
adc
xor
sbbl
repnz
push
mov
mov
sub
out
dec
mov
push
xor
jl
call
gs
xchg
out
sbb
xor
sub
jmp
hlt
mov
mov
lods
xor
pop
pop
mov
pusha
das
jl
pushf
mov
pop
jl
lea
repnz
dec
mov
add
xchg
in
scas
ja
lds
pusha
aad
leave
scas
mov
loop
push
sub
or
aad
shll
jg
mov
lcall
cli
adc
in
adc
xchg
sub
and
jmp
mov
scas
push
sub
shlb
mov
stos
aad
sub
adc
ja
jl
jmp
add
fadds
lea
shll
mov
xchg
fwait
ljmp
xchg
clc
xchg
inc
or
add
orl
je
and
inc
bound
inc
repz
mov
lods
mov
dec
popf
or
outsb
dec
stos
pop
mov
in
cmp
and
fscale
out
dec
notb
pusha
sub
aaa
fs
adc
mov
aad
pop
sbb
xchg
mov
mov
lds
aaa
iret
sbb
push
sbb
sbb
dec
ds
push
mov
pop
xor
jno
call
jbe
jmp
rcrl
lods
not
cmpsl
fldcw
mov
cmp
aad
dec
pop
inc
push
push
std
loopne
iret
pop
xor
pusha
pop
or
pop
cmpsb
xor
cmp
xchg
sbb
fsubrs
or
dec
rep
add
movsb
mov
dec
movsl
icebp
xor
mov
in
mov
je
es
hlt
das
sti
sbb
nop
or
or
fiaddl
aad
cmp
mov
mov
inc
push
push
mov
mov
fdivs
dec
cltd
jge
fadds
cmp
and
xchg
in
sub
and
xor
mov
mov
or
inc
test
roll
mov
mov
sbb
or
test
loop
cltd
push
scas
push
sbb
sub
shll
ja
cmp
lahf
add
divps
cmp
mov
cmpb
enter
cli
test
mov
pop
shlb
movsl
popa
ja
shr
insl
inc
or
lds
and
movsl
adc
addr16
lods
notl
adc
mov
rcrb
and
shrl
mov
or
mov
sbb
inc
dec
push
adc
insb
in
sbb
int
shrb
mov
out
rcrb
xor
push
addr16
push
sub
and
in
mov
inc
xor
jl
scas
mov
xor
cmp
std
out
aas
daa
push
outsl
dec
dec
mov
insb
push
fldl2e
xor
fildl
dec
sti
pop
push
mov
push
dec
push
jmp
scas
fwait
bound
mov
pop
and
inc
xlat
cmp
testb
in
add
aaa
jmp
and
subb
popf
xor
fs
and
jb
adc
mov
add
movsl
inc
packsswb
pop
stos
ror
popa
or
mov
push
fcomps
lcall
jl
cmpsl
mov
lret
dec
cmp
pop
loopne
mul
adc
pop
int3
mov
ljmp
pushf
xchg
clc
cmp
shl
mov
sub
lea
xchg
pop
test
mov
inc
ljmp
inc
ja
adc
sahf
in
xor
sahf
push
in
aas
mov
loopne
sbb
jbe
fstl
aaa
push
xchg
int
insb
or
ficompl
fisttps
jl
or
into
cwtl
addr16
mov
cmp
hlt
push
test
inc
scas
xchg
lods
add
popf
stos
popf
xor
sahf
cltd
inc
icebp
dec
fs
fmulp
shlb
pusha
dec
cli
pop
mov
push
push
sahf
pop
jb
and
xor
xor
je
je
movsb
mov
iret
repz
ret
dec
enter
add
movsb
mov
push
sub
popf
insb
or
pop
mov
flds
xchg
sub
repnz
pop
adc
mov
push
cmp
mov
mov
jecxz
sub
dec
pop
movl
jb
je
xchg
dec
lods
xchg
xchg
lea
in
push
mov
dec
cmpsl
dec
fisttpl
fcomps
das
int3
push
rcll
call
mov
imul
cmp
pop
or
scas
adc
cmp
clc
sbb
mov
mov
lret
push
lret
rcrl
mov
fcmove
sbb
pop
dec
ret
mov
mov
push
mov
mov
repz
mov
and
lahf
mov
mov
push
jns
push
daa
aaa
mov
fsubl
dec
fsubs
cmp
pop
test
mov
lahf
jge
jae
xchg
fidivs
sub
lcall
lahf
rcr
aam
jg
cmp
nop
jmp
divb
cmp
ret
shrb
fisttpll
pop
sbb
push
lock
jg
outsl
daa
xchg
add
dec
fnstsw
in
pop
sub
imul
stos
dec
xchg
inc
popa
jmp
or
outsl
xor
pop
in
shr
mov
cmpb
movsb
xchg
mov
pop
xchg
adc
cli
jle
test
mov
pop
stos
pop
add
dec
cmp
xchg
pop
mull
mov
push
mov
cs
cmc
jecxz
mov
add
js
movsl
xchg
mov
gs
add
cmpsl
or
imulb
push
cmp
bound
ret
in
les
mov
hlt
int
fucomp
or
inc
fmul
dec
pop
or
dec
adc
mov
cmp
cld
and
xor
movsb
inc
mov
dec
ret
fidivl
dec
test
pop
fildll
bound
push
add
xchg
adc
xchg
negl
add
mov
cmc
add
ds
repnz
mov
and
or
lret
pop
jns
push
or
xchg
or
sub
xor
jl
add
dec
xchg
pop
sahf
xor
push
xchg
jp
dec
mov
adc
and
mov
jp
mov
or
jecxz
or
lods
sbb
enter
fwait
mov
push
ficoml
cmp
stc
shr
outsb
fdivl
pop
push
mov
cld
cmpsl
dec
cs
mov
cs
lret
xor
and
aam
gs
arpl
inc
jl
dec
mov
dec
mov
dec
push
pop
stc
xchg
dec
into
or
pop
sahf
mov
jbe
call
adc
mov
stos
pop
inc
dec
or
mov
repnz
nop
push
imul
inc
cli
jb
sti
repnz
pop
stc
inc
mov
in
clc
and
and
shlb
mov
xor
sbb
pandn
aas
jmp
sub
ret
cwtl
dec
mov
mov
mov
cmp
loope
mov
sahf
mov
jl
loope
insb
addl
in
jbe
popa
ss
xor
sbb
cwtl
test
lcall
cmc
mov
jne
sti
add
out
and
add
scas
ret
jmp
push
cwtl
filds
mov
mov
ds
jmp
sti
iret
lahf
cmp
mov
stc
in
test
repz
fs
and
dec
mov
ds
sub
lock
addr16
testl
dec
pop
test
insb
sub
cmovge
lcall
loop
ds
cmp
movl
dec
mov
rolb
sar
mov
push
rorb
adc
sahf
arpl
xchg
and
pop
imul
adc
aaa
push
out
ja
sub
addr16
sbb
push
in
and
pop
ss
xchg
mov
fidivrs
ljmp
imul
imul
mov
and
sbb
xchg
jl
movsl
sbb
add
add
mov
and
cmp
adc
stos
push
pop
mov
or
inc
sub
push
loopne
jne
nop
sub
ja
push
push
bound
je
inc
add
dec
cmp
jle
jb
aad
jno
jns
add
and
dec
mov
hlt
sbb
push
or
cmp
and
fbstp
stos
push
orl
sub
arpl
sub
mov
rcrb
cmp
dec
fcompl
loope
jbe
jmp
cmc
cmp
cmp
jo
fimull
test
push
fldcw
test
sbbb
cmpsb
out
xor
movsb
push
push
in
dec
mov
jnp
leave
push
dec
mov
adc
xor
mov
jmp
mov
es
out
sbb
lahf
and
sub
in
sbb
outsb
xor
push
adc
xchg
nop
pop
adcl
cli
push
fs
mov
jmp
sbb
push
cmp
sub
mov
test
adc
iret
hlt
dec
pop
movsb
and
sub
xchg
fwait
inc
push
inc
fidivrl
add
add
mov
dec
cld
mov
and
pushf
mov
icebp
fldcw
xlat
jne
mov
cmp
test
in
sub
pushf
cmp
imul
dec
inc
xlat
mov
insl
push
roll
icebp
push
cmc
enter
or
jl
sub
add
mov
shlb
les
pop
lds
mov
pop
pushf
outsl
sti
or
popf
test
xor
jle
or
push
mov
in
sub
and
pop
pop
pop
mov
adc
dec
frstor
sub
mov
push
mov
es
dec
out
sbb
pop
lcall
nop
in
imul
jno
mov
inc
xor
clc
add
jne
push
dec
push
and
jnp
loopne
test
add
jno
cmp
lock
and
mov
inc
in
cmp
dec
imul
pop
and
rcrl
sub
pushl
cmpsl
out
gs
out
push
mov
and
fidivl
fiaddl
dec
arpl
or
setae
insl
jo
bound
sbbl
jae
or
mov
aad
adcb
jne
sarl
xchg
repz
andb
cmpsb
ja
jne
push
add
insl
inc
loopne
scas
xchg
arpl
xor
lds
jg
mov
movsb
mov
lods
loopne
rol
rep
push
jb
and
mov
jl
mov
sahf
inc
or
mov
lock
pop
fisttpll
pop
add
inc
dec
xor
gs
addr16
test
jge
mov
pop
or
or
shlb
push
mov
or
sti
push
fsubr
and
mov
imul
mov
sbb
mov
cld
mov
cld
mov
js
or
sbb
mov
lock
cmp
mov
loop
push
or
and
pop
roll
jecxz
mov
sbb
add
jbe
cmpsl
lret
xor
popa
inc
cmp
leave
pusha
mov
push
or
push
inc
gs
std
xor
inc
mov
aad
sub
sbb
mov
and
pop
cmp
lods
or
lods
and
lea
sub
mov
ret
jmp
insl
cmpsl
leave
das
test
adc
rclb
jnp
inc
dec
rol
adc
push
lret
lods
dec
dec
sti
ja
pop
jo
push
push
xchg
fcmovbe
mov
imul
cwtl
and
test
mov
mov
clc
push
push
pop
in
and
jnp
push
jl
aam
xchg
sub
scas
mov
cld
lea
mov
and
pusha
xor
stos
mov
mov
adc
scas
or
push
sub
jl
pop
mov
mov
das
aad
test
mov
dec
mov
lret
or
lret
push
jmp
mov
stc
ljmp
add
xchg
das
lods
xchg
pop
pop
jge
sbb
and
mov
push
pop
cltd
aaa
cwtl
or
sarb
cmp
das
sbb
add
pop
iret
mov
dec
inc
stos
sbb
and
ret
cmpsl
out
add
sbb
cmp
out
je
nop
mov
fidivrl
fisubrs
fldt
xor
mov
sbb
dec
adc
imul
sbb
jno
outsb
sub
cli
pop
xor
inc
loope
push
scas
sbbb
pop
adc
insb
stos
data16
push
fcomps
cmpsl
push
xchg
inc
jg
cmp
stos
addr16
push
pushf
and
add
push
loope
mov
sub
adc
adc
jecxz
scas
insl
pop
data16
pop
das
pop
mov
ljmp
pop
sti
fidivrs
js
daa
loope
inc
nop
scas
flds
aaa
fwait
lret
outsl
sahf
clc
cmp
aad
mov
sbb
jno
xor
adc
lret
mulb
or
mov
xchg
out
cli
mov
cmp
xor
and
sbb
pop
adc
push
cmpsl
sub
or
or
push
outsb
je
cmp
adc
push
loopne
mov
rorl
loopne
and
mov
fcmovnbe
das
imul
sbb
in
into
push
xchg
scas
clc
mov
lret
fdivrs
or
pop
mov
mov
test
insl
in
dec
sar
dec
sub
lds
aas
stos
ja
cmp
scas
les
mov
call
popf
andb
push
adc
mov
leave
stos
sbb
enter
notl
push
or
cmpsb
out
push
xor
sub
les
bound
je
insb
fcmovb
lret
js
pop
or
lahf
imul
repz
add
call
das
pop
mov
cmp
mov
lds
les
cmpsl
repnz
mov
ret
xchg
mov
call
mov
dec
jg
mov
punpcklbw
jns
stc
popa
push
aam
fcoms
jge
lret
push
out
push
inc
shr
mov
dec
mov
scas
sbb
sub
hlt
add
and
mov
orb
xchg
jmp
mov
pop
adc
dec
adc
add
daa
cltd
hlt
repnz
rcrb
outsl
stos
lahf
or
mov
cmp
test
pop
jne
jno
push
dec
sahf
test
xchg
lock
push
mov
gs
ss
cmc
jl
movsl
clc
xchg
leave
cmp
adc
pop
jp
test
jae
stos
sbb
pushw
fwait
iret
cmp
fsubrs
sahf
xchg
test
mov
cmp
rcr
cmc
add
xor
inc
sbb
clc
int
in
mov
fnstenv
cwtl
pop
adcl
lea
inc
scas
je
cltd
pop
or
je
cmp
je
imul
xchg
in
jp
or
loopne
add
adc
or
scas
cmpsl
jecxz
loopne
int3
adc
push
outsb
xchg
scas
dec
xchg
ret
xchg
test
fstpl
cmp
inc
stc
out
int3
incl
push
lock
dec
jns
out
add
push
cmp
and
adc
lea
mov
lcall
andl
popf
jno
shrb
out
jl
jl
mov
sbb
add
push
cmp
mov
mov
in
add
jle
enter
add
mov
rcrl
xchg
xlat
pop
pop
dec
cmc
jmp
lock
lods
xchg
push
push
jl
mov
out
jge
out
rcrl
add
adc
ret
mov
or
or
test
cmpsl
dec
fwait
cmp
hlt
cmp
jae
outsl
add
outsb
aas
push
push
sti
push
arpl
sbb
sub
xchg
mov
inc
dec
push
xchg
lret
xchg
mov
jno
addl
adc
push
xor
cmp
data16
inc
push
icebp
subb
cmp
jge
enter
push
call
xor
jp
mov
add
pop
jmp
cmp
adc
xor
jmp
sbb
loopne
fsub
inc
inc
sub
push
fdivrs
imul
lock
pop
xchg
pop
pop
out
cmp
aam
adc
jbe
cmp
fcomps
daa
jg
mov
fisubl
mov
push
es
mov
jle
movsl
out
rolb
notl
sti
gs
adc
cmp
imul
sub
mov
cmp
pop
imul
push
mov
shld
imul
jle
inc
jno
cmp
mov
add
xchg
fldt
mov
xorl
pusha
mov
sbb
pop
mov
je
aad
insb
dec
xchg
cs
pop
mov
js
gs
lret
nop
cltd
jp
pop
cwtl
pop
cs
jmp
push
fcompl
pop
gs
aad
stc
aad
xor
je
insb
lock
cltd
mov
mov
pop
mov
mov
outsb
clc
xor
dec
add
add
insl
mov
dec
cmp
mov
sbbl
sahf
and
lret
mov
pop
add
lods
add
jl
sbb
in
jbe
inc
push
add
sub
in
rcl
pop
mov
mov
mov
lods
xor
dec
and
movsl
clc
inc
mov
inc
in
add
je
push
bswap
lret
sahf
add
shlb
add
push
and
fstpt
xchg
das
dec
cmp
xlat
adc
ret
or
dec
lods
xlat
pop
ds
push
pop
adc
mov
rcrb
inc
and
hlt
test
imul
push
jle
jne
and
insb
stc
mov
leave
add
pusha
arpl
and
mov
es
push
cld
add
fisubs
out
cmp
data16
mov
pushf
jae
ja
dec
dec
cmp
movsb
or
mov
inc
cli
mov
add
out
dec
cld
xchg
cmpsl
push
in
pushf
inc
cmp
sbb
pushf
je
ljmp
adcb
add
jecxz
aas
ljmp
icebp
dec
arpl
fnstcw
mov
mov
jnp
orl
pop
cmp
testb
jb
sbb
cmp
mul
rorb
mov
pop
and
sub
dec
fistpl
xchg
mov
dec
cmpl
pop
scas
sub
mov
lock
into
test
movsb
js
jle
jns
mov
jecxz
fdivrl
push
jl
jmp
mov
lods
mov
push
pop
xchg
mov
test
jb
jl
mov
testl
inc
inc
outsl
jnp
push
jg
adc
ljmp
hlt
test
xor
mov
rcrb
sub
stc
shlb
mov
cmp
lret
inc
and
lods
das
pop
pop
xor
mov
add
mov
mov
cmpsl
cmpsl
fnstenv
dec
xchg
mov
int
leave
push
sti
dec
inc
jg
sub
jo
adc
push
orl
popa
xor
lret
in
add
xchg
imul
xor
cmp
push
repz
cwtl
or
dec
xor
orl
pop
mov
mov
fwait
adc
cmp
adc
pop
mov
push
fcomp
aas
push
mov
inc
jo
cwtl
cltd
adc
add
sbb
shl
cmp
aas
xchg
in
inc
es
pusha
and
popf
push
cmp
repnz
movlps
xor
sub
dec
cmp
mov
sbb
outsb
ret
push
cmp
arpl
xchg
mov
mov
mov
push
mov
lods
pop
data16
xchg
out
push
fidivrl
rolb
and
loope
std
pushf
clc
out
xchg
mov
ss
ja
pop
mov
in
popa
lret
jmp
movsb
sub
xorl
test
pop
mov
insb
pop
scas
popf
cltd
push
adcb
mov
mov
jl
shl
stos
inc
aad
cmc
jp
inc
lock
enter
lds
inc
inc
outsb
popf
and
lea
out
pop
cmc
sub
outsb
loope
or
adc
enter
mov
lods
fidivrl
sbb
inc
sub
fcomps
xchg
les
sbb
ljmp
xorb
aad
jmp
push
dec
push
pop
push
xor
loopne
movsl
cmp
mov
mov
sub
rcrl
imul
dec
push
outsb
aam
iret
adcl
and
ja
popf
cs
and
pop
movsl
mov
mov
cmp
scas
lcall
cmp
cmpsl
mov
xchg
sbb
mov
adc
ret
sbb
fwait
outsl
mov
sub
int3
std
insb
cmp
adcl
inc
mov
sub
insl
mov
imul
repnz
pop
dec
inc
push
ret
push
sub
repnz
es
sahf
push
mov
sbb
icebp
sti
imul
lods
jb
and
lods
or
out
icebp
push
lret
into
dec
xchg
aam
scas
push
rorb
scas
imul
push
mov
mov
in
mov
or
andl
je
and
adc
cmp
stos
shll
dec
pop
mov
add
nop
lret
sahf
xchg
and
bound
loop
sub
xor
jbe
xor
imul
stos
push
aad
add
push
or
push
lock
leave
cmp
cmp
sbb
shrb
fs
cmpsb
popf
shrb
fcoms
or
out
das
and
fcomi
cli
in
mov
or
fldt
out
adc
fdivp
push
lods
andb
mov
adc
imul
imul
push
mov
ja
dec
adc
cmp
negb
sbb
lret
nop
ds
xlat
cmp
outsl
inc
in
push
cmp
pop
sub
pop
loope
setb
push
int
ret
pop
sub
scas
cmc
jl
adc
xor
in
gs
pop
lock
dec
inc
pop
iret
mov
xorl
fsubl
add
sub
ja
movl
adc
int
add
lret
aas
cmp
push
fbld
scas
lods
pop
xor
cld
mov
pop
sub
pusha
inc
popa
pop
jg
mov
push
lods
mov
mov
fisttpl
inc
daa
inc
jae
decl
dec
enter
sub
lcall
sub
mov
mov
sbb
xchg
ja
xchg
das
arpl
xor
jp
int3
mov
repz
adcl
int
test
add
popa
sbb
mov
push
int3
cmp
gs
mov
inc
test
push
hlt
cmpsl
mov
test
fwait
lret
sbb
lahf
jnp
insb
sahf
mov
adc
ljmp
sub
cmpsl
ds
xor
enter
das
add
dec
js
mov
push
outsb
jae
cmp
sti
cmpsb
movsl
stc
xchg
dec
fstps
adc
in
addr16
mov
xchg
jnp
or
jge
rorl
ss
lds
mov
push
inc
test
lahf
push
jl
cmp
xchg
cltd
shrb
int
fildll
push
pop
cltd
cmp
sub
pop
and
cld
ss
cld
repz
push
stos
xor
sub
xor
xchg
or
shlb
js
push
test
cmp
fildll
test
push
dec
aam
mov
mov
movsb
ret
xchg
mov
stos
call
and
sahf
push
and
or
xor
lea
xor
fs
mov
mov
push
ljmp
addr16
mov
roll
push
add
subl
xor
mov
cmp
addr16
mov
dec
dec
pop
mov
push
xchg
adc
xor
icebp
and
fdivrs
test
xor
fdivp
pop
loopne
cmp
and
adc
or
test
xchg
int
clc
cld
jge
and
insb
cmpsl
jae
test
fbld
mov
and
jb
add
mov
popf
mov
and
cmpsl
add
mov
inc
das
nop
push
cmp
pop
pop
cmp
pop
cmp
jnp,pn
inc
dec
sbb
cmp
sbbl
mov
add
scas
adc
push
jmp
mov
pop
call
push
xchg
add
push
out
pop
cmp
or
iret
je
je
push
pop
cmpsb
jmp
sub
clc
dec
lret
sarl
push
movsb
add
jns
loopne
leave
ror
repz
jmp
jecxz
cli
aas
jnp
pushf
lahf
cmp
mov
imulb
call
shl
lea
dec
or
fs
repz
sub
iret
pop
test
test
mov
pop
fimuls
xor
incl
movsb
or
lret
vmovntps
push
dec
lret
out
mov
gs
aas
idivb
mov
cmp
aam
mov
cwtl
movsl
adc
repnz
jbe
cmp
popf
lea
mov
es
mov
mov
rolb
inc
mov
test
mov
push
inc
xchg
add
inc
pop
mov
lcall
pushf
lds
sahf
mov
inc
inc
dec
push
ja
testb
test
or
add
add
sbb
adc
push
jnp
sub
add
jns
pushf
or
cmp
mov
and
bound
in
push
mov
test
imul
push
dec
pop
scas
or
dec
cmp
jb
mov
mov
ljmp
push
aad
rolb
stos
sbb
je
int
imul
mov
mov
jo
je
add
lret
jns
adc
xchg
subb
out
clc
pushf
jb
sbb
pusha
lds
popf
loope
lea
jp
lds
cwtl
mov
mov
shl
push
call
xchg
add
je
mov
push
mov
adc
aad
adc
pop
sahf
mov
mov
inc
call
int
fistps
mov
cmp
pop
mov
shll
cmp
or
iret
repz
mov
outsl
insb
cmp
jo
popa
cmp
adc
in
out
out
cmp
ret
gs
jnp
inc
addr16
pop
jne
xchg
xchg
mov
mov
mov
into
pop
and
sahf
aam
xlat
push
out
add
int
inc
mov
imul
push
insl
scas
fimuls
stos
or
cld
sarl
xchg
mov
xchg
pushf
js
outsl
and
enter
popa
mov
aas
stc
and
sub
lret
mov
nop
sub
mov
fistps
mov
neg
sub
mov
sbb
lods
xor
loopne
mov
jp
int
addr16
add
popf
imul
xchg
xlat
mov
xchg
adc
dec
mov
mov
mov
adc
and
mov
inc
out
mov
jns
scas
inc
bound
fmuls
jge
inc
jl
cld
je
pop
shr
ds
jns
loopne
in
outsb
xchg
mov
fldenv
lret
pushf
int
mov
bound
mov
jb
sbb
mov
xchg
iret
arpl
fs
jl
lcall
imul
inc
mov
adc
pop
mov
dec
dec
mov
push
cs
test
cmp
loop
sbb
std
dec
xlat
outsl
les
out
push
lds
fcoms
in
pusha
xchg
repz
xor
test
mov
leave
and
cmp
push
pop
dec
test
jge
stos
fs
xchg
jnp
into
mov
fwait
and
pop
or
ds
adc
hlt
jp
inc
dec
fstpt
xchg
add
cli
fxch
sub
in
add
xor
fisttps
idiv
sbb
inc
sbb
ljmp
pop
iret
sub
inc
inc
mov
pop
out
jo
pop
xchg
stc
fcmovnu
cmp
dec
sarb
outsl
cmp
sub
cmp
jne
arpl
ja
cmp
ret
adcl
or
addl
std
fiaddl
sbb
fistpll
fwait
cs
jp
xchg
lock
sub
ja
mov
sti
xchg
iret
jp
cmc
pushf
ficoml
xchg
fs
les
dec
imul
adc
fimull
jmp
aam
shrl
shrb
test
xlat
shll
cltd
es
jno
push
pop
xchg
js
imul
jbe
jecxz
stc
xchg
jecxz
enter
insl
jns
call
add
mov
imul
jmp
xchg
mov
mov
imul
dec
ret
hlt
xor
ret
mov
or
adc
and
stos
icebp
cmp
cwtl
outsl
push
pop
aas
pushf
mov
xchg
clc
xchg
pusha
push
icebp
fiaddl
clc
mov
mov
and
inc
dec
pop
add
mov
out
mov
ds
jmp
icebp
or
sub
push
inc
fimull
test
loopne
dec
cmp
xchg
outsl
pop
jnp
stos
push
int3
sbb
shlb
dec
in
divb
jmp
mov
test
xchg
push
scas
or
dec
pop
mov
pop
adc
xchg
cli
fs
lahf
insb
fiadds
shll
and
fstpt
adc
test
hlt
sub
dec
sub
xchg
dec
push
add
fldt
mov
adc
sbb
nop
popf
adc
rclb
sub
ss
scas
push
loopne
mov
bnd
dec
sbb
or
cwtl
dec
fwait
mov
add
or
mov
pop
adc
xchg
push
mov
clc
test
daa
xor
sub
test
stos
imul
mov
mov
mov
sti
mov
scas
xchg
fidivl
mov
ret
dec
xor
mov
inc
enter
lods
mov
jae
jb
and
or
cmp
push
cmc
xor
cmc
push
dec
xlat
inc
and
cmp
ds
sbb
mov
clc
mov
pop
cmp
add
mov
std
add
pop
mov
cmp
push
out
cmp
ja
mov
mov
sbb
lds
test
pop
notl
out
add
add
stos
lahf
cmovg
jnp
push
mov
sahf
lahf
shlb
pop
aas
jbe,pt
adcl
mov
testb
jge
cmpb
fnstcw
dec
mov
sar
insb
aas
test
push
pushf
jmp
jo
stc
aam
adc
push
dec
lret
icebp
cld
sbb
es
fnstcw
cmp
mov
push
dec
xchg
mov
scas
movaps
imul
pop
int3
push
imul
jmp
mov
mov
xchg
mov
add
add
adc
xchg
insl
pop
mov
imul
test
lret
leave
mov
or
stc
mov
jae
pop
xor
int3
adc
add
ss
jb
pop
cmp
or
push
jno
cmp
stos
mov
mov
mov
lcall
insb
xor
xchg
mov
inc
or
imul
mov
sub
mov
cwtl
les
out
mov
int
or
xor
rorl
iret
icebp
cmpsb
test
adc
lcall
aaa
lods
push
jo
dec
xchg
mov
push
and
sub
add
fdiv
and
pop
test
lods
movsl
cld
fbld
pop
add
mov
lret
add
gs
jge
ret
dec
fs
xchg
mov
mov
pop
sub
adc
jbe
data16
rcll
jno
ret
pop
sbb
gs
shll
dec
es
test
pushf
stc
push
xchg
cmp
pop
sub
mov
sbb
jl
mov
leave
pop
xor
mov
rclb
pop
add
inc
and
pop
mov
cmpsb
adc
scas
fbld
call
pop
enter
mov
jle
mov
roll
fmuls
pop
mov
lret
stos
mov
insl
pop
or
testb
test
lds
leave
inc
push
iret
inc
add
lret
mov
push
sahf
fs
and
and
inc
xor
and
mov
and
mov
pop
xchg
fmuls
mov
lock
xchg
lods
imul
and
push
stos
cmpsl
shl
in
push
subb
movsb
sarb
loope
and
dec
arpl
xchg
add
sbb
inc
jg
pop
rcrl
in
and
loopne
cli
ret
ss
sbb
sti
sub
mov
movsl
add
mov
sub
xor
or
sub
pop
or
jp
push
out
jae
push
test
fmul
mov
rcrl
push
or
push
das
jmp
lahf
jo
fdivrs
adc
popf
lds
aam
dec
lods
dec
sub
adc
mov
call
sbb
insl
sbb
cmpsl
cmp
mov
stos
dec
sti
mov
mov
sbb
cli
mov
imul
lock
inc
mov
sbb
xchg
pop
and
mov
ljmp
stos
mov
cmp
scas
and
mov
push
ja
pop
ljmp
adc
push
pusha
jns
lahf
xchg
lods
fistps
addr16
pushf
jle
lds
mov
adc
mov
fwait
push
dec
mov
jmp
and
frstor
jg
adc
jbe
bound
bound
cmpl
mov
and
mov
out
push
sar
mov
mov
cltd
inc
xchg
or
lock
jg
fstps
sub
mov
xchg
pusha
and
dec
ljmp
lahf
and
mov
or
js
inc
pop
push
cmp
and
push
mov
inc
xchg
inc
cmc
aad
xor
sub
test
push
movl
das
push
jae
adc
arpl
sahf
lods
jl
clc
mov
rcll
pop
clc
pop
xchg
sub
fistl
mov
and
mov
ret
add
in
inc
test
sar
jns
clc
std
rorb
xchg
add
out
mov
pop
out
js
sbb
sbb
movsl
std
cmc
mov
mov
fsub
popl
sub
push
out
fistps
push
fistps
mov
loopne
pop
cltd
repz
in
adc
add
push
cwtl
loop
or
mov
mov
and
and
cld
ret
xchg
fsubl
push
cmp
fdivrp
adcl
xchg
ds
in
push
rol
fnstcw
dec
test
and
mov
popa
cmp
jbe
call
out
icebp
out
inc
xchg
into
out
cltd
ss
dec
cwtl
or
xor
lods
adc
scas
repnz
sbb
repz
jb
mov
popf
pop
jb
mov
jbe
in
and
rorl
pop
stc
mov
pushf
out
adc
stos
daa
test
or
pushf
dec
mov
sbb
hlt
jne
push
xchg
fs
iret
test
push
pop
mov
icebp
mov
mov
dec
pop
imul
cltd
imul
jb
inc
cmp
clc
lods
das
inc
sbb
inc
test
lret
jecxz
adc
pusha
mov
pop
std
call
sbb
mov
ja
adc
icebp
in
mov
mov
mov
sub
lods
push
aas
ja
adc
push
enter
xchg
jmp
cmp
inc
sbb
jne
mov
dec
cld
xchg
daa
and
cmc
outsl
inc
mov
test
dec
mov
lds
iret
xlat
or
xchg
pop
jecxz
arpl
movsl
fwait
sbb
insb
push
cmp
cmc
loope
lret
hlt
scas
fsts
adc
push
data16
mov
outsb
jmp
insb
ret
mov
out
add
mov
push
xchg
jnp
fistps
jmp
and
jl
lock
xlat
sbb
movsl
or
mov
popf
adc
cmpsb
les
adc
xchg
mov
subl
lahf
cmpsl
inc
mov
inc
jl
ror
jne
js
push
dec
jg
xchg
lcall
mov
adc
xchg
sahf
stos
push
xor
mov
mov
sbb
cmp
cmc
or
push
fwait
rclb
cs
js
sbb
imul
mov
xor
cmp
lahf
rclb
mov
popf
dec
cmp
stc
mov
pushf
add
clc
adc
mov
mov
out
adc
loope
aaa
imul
xor
rorb
ljmp
cmp
xchg
ja
pop
inc
mov
xor
inc
adc
outsb
out
sbb
test
pop
mov
mov
push
inc
mov
out
outsl
scas
adc
mov
jb
pop
cmpsb
xchg
stos
insl
ret
aam
inc
push
shrl
push
in
pop
and
lret
inc
js
or
dec
add
inc
aaa
test
add
adc
mov
clc
cld
subb
es
arpl
js
mov
mov
push
test
enter
sbb
jo
scas
and
out
mov
cli
repnz
sahf
test
jmp
push
mov
lock
and
je
loope
jns
aam
pop
sub
cld
jbe
cmpsb
add
stc
test
loope
stos
lds
pop
xchg
push
clc
jbe
xchg
inc
mov
clc
push
jno
iret
mov
jle
out
ja
xor
sahf
lods
loope
jbe
addr16
cmp
mov
lretw
mov
add
mov
in
jmp
cmp
adc
jbe
orl
sub
sbb
and
sti
rcrb
and
dec
stos
data16
sub
inc
lock
cld
fisubs
push
ja
fldl
xor
mov
xchg
jne
mov
push
jnp
ja
adc
xchg
sub
lea
mov
inc
mov
in
jg
add
adc
jb
int3
in
sbb
fdivrs
push
jo
xchg
lret
repnz
lds
and
std
xchg
ret
push
dec
add
adc
sbb
mov
mov
sbb
imul
and
fists
sahf
lock
mov
pop
xchg
hlt
shlb
add
cmp
inc
mov
add
sahf
push
test
cld
jae
jo
scas
xlat
sbb
cmovbe
pop
add
inc
push
jns
or
fisubrl
mov
sbbb
inc
lods
adc
js
gs
cmc
lds
jmp
and
cmova
jbe
cli
pop
les
ss
dec
or
scas
loop
inc
int3
mov
loope
push
pop
jecxz
adc
cmp
sbb
aam
pop
xchg
pop
inc
jmp
je
into
push
mov
push
popf
adc
push
inc
xor
mov
lods
insl
cld
dec
aad
aas
xchg
jb
clc
inc
mov
mov
push
je
push
sbb
cmp
cwtl
aas
xchg
rorb
mov
pop
insl
sbb
push
bound
sub
insb
and
and
push
into
ret
leave
adcl
mov
sub
test
xor
data16
fildl
push
sub
enter
xchg
lds
cmp
repz
ret
add
or
adc
imul
fiadds
push
aam
jp
mov
inc
dec
push
adc
das
int
pop
je
mov
ss
gs
dec
pop
in
inc
fwait
and
daa
negl
pop
addr16
push
xor
shll
add
mov
mov
ljmp
aaa
fadds
fistpl
lock
arpl
sbb
sub
add
push
mov
in
cmp
mov
adc
pop
mov
jmp
push
push
sahf
cmpsl
insb
mov
mov
nop
or
jg
hlt
stc
das
sbb
repz
xchg
loopne
adc
inc
hlt
and
test
jmp
sbb
push
mov
xchg
stos
sub
adc
xchg
lcall
lcall
sarl
test
adc
mov
inc
out
js
mov
push
xchg
call
push
or
out
movsl
mov
jp
shl
test
rclb
mov
ret
sbbl
dec
pop
mov
mov
test
sub
push
nop
adc
pop
adc
xor
dec
and
scas
test
fcomps
fisubl
in
mov
inc
cmp
push
test
sub
rcll
clc
cmpsb
pop
out
push
or
mov
mov
mov
jl
or
xchg
clc
insl
cmpsb
cltd
imul
push
testl
fdiv
push
mov
addr16
les
icebp
mov
sub
add
or
imulb
sahf
mov
jl
mov
adc
mov
int3
loopne
pop
dec
outsb
pop
cltd
xor
popa
aam
nop
aas
in
mov
push
es
or
and
mov
call
mov
push
stc
push
ret
and
and
mov
lret
adc
popf
add
popa
mov
stc
or
sti
loopne
bndstx
aas
pop
xchg
cmp
inc
negl
gs
adc
adcb
xlat
aam
pusha
stos
mov
xchg
mov
aad
jbe
adc
mov
in
aam
fdivrl
and
fisubrs
jmp
pop
jmp
inc
push
push
push
pop
or
movsl
orb
pop
sub
xchg
cs
mov
insl
xlat
popa
lods
push
jle
mov
xor
mov
add
xor
clc
cwtl
je
cli
mov
xorb
and
pusha
or
je
fistps
dec
sahf
xlat
push
ss
adc
push
sub
cmp
xchg
or
cmp
jnp
lds
lods
or
cmp
xor
dec
or
jnp
jl
cmp
xorb
das
pop
lret
sbb
aas
sahf
mov
cmp
sbb
dec
cmpsl
mov
cmp
jmp
push
inc
sbb
sbb
jmp
dec
mov
mov
add
xchg
ret
inc
jmp
lods
lods
xor
fldenv
cltd
lea
outsb
inc
test
xor
sub
roll
pop
outsb
fwait
nop
xorl
mov
pop
inc
bound
popa
mov
lods
or
mov
loope
rcll
aaa
mov
pop
sub
add
sahf
pop
sti
push
add
sub
loopne
movsl
ds
in
pop
and
leave
jp
jns
leave
fnsave
jl
push
loope
ret
cmc
cmp
mov
adc
sub
dec
gs
std
dec
jle
dec
aas
mov
lret
imul
cmp
mov
xchg
gs
movsl
lock
push
in
adc
shlb
dec
xor
add
sub
shll
ret
xchg
rcrb
imul
mov
outsb
bound
mov
or
ffree
cltd
mov
das
repz
out
adc
xchg
pop
mov
push
ret
gs
sbb
lock
imul
ret
ljmp
aam
pop
aam
cmpl
xor
dec
push
rolb
hlt
xchg
mov
pop
aaa
scas
mov
mov
add
dec
fisubrl
divl
cltd
cmp
jo
ret
jns
cwtl
outsb
cmp
jl
mov
js
pop
or
fstpt
push
jle,pt
xor
in
pop
into
fwait
sub
popf
add
cmp
out
sbbb
ret
add
fyl2xp1
xor
orl
and
shll
lea
in
xor
cld
jecxz
jne
pop
pop
xchg
xorb
into
mov
insb
jnp
ror
insl
sbb
xchg
xchg
mov
repnz
and
stc
lret
pop
pusha
movsb
nop
pop
les
dec
sbb
xor
mov
and
sbb
addb
mov
arpl
add
pop
and
sub
movl
inc
push
test
push
push
mov
xor
dec
pop
sbb
add
push
stos
dec
add
adc
pop
and
out
andb
mov
ret
jae
mov
shrl
jae
enter
cmpsb
adc
sub
or
or
int
add
and
call
daa
mov
fcmovnbe
in
pop
dec
js
jmp
dec
scas
jb
cld
push
sarl
and
dec
jmp
nop
cli
cltd
loopne
repnz
cs
cltd
mov
mov
les
xor
mov
cmpb
push
inc
xchg
fwait
pop
lret
jl
add
mov
pop
xchg
lahf
xor
adc
push
mov
jl
cwtl
cmp
stc
std
cmpsl
pop
cmp
movsl
fwait
xchg
outsl
adc
push
mov
dec
insw
pushf
mov
or
xchg
xchg
jecxz
sub
pop
push
adc
leave
mov
adc
outsl
jg
jg
loopne
sub
or
xchg
inc
inc
and
lea
dec
stos
icebp
xor
out
dec
outsl
mov
sahf
cmp
xor
xor
inc
cs
cmp
adc
cmp
dec
add
idivb
xchg
rolb
dec
pushf
insb
ficompl
ror
repnz
repnz
dec
mov
jae
pop
jecxz
sub
xlat
pop
sub
dec
mov
mov
cltd
lea
imul
gs
std
out
mov
sbb
fadds
mov
andl
ds
push
pop
hlt
pop
mov
xor
clc
xchg
xor
je
xlat
xchg
jbe
xchg
outsb
mov
push
int3
fs
mov
jns
cmp
clc
roll
push
add
pop
int
rclb
movsl
std
and
out
xchg
and
and
mov
ficoml
js
hlt
xchg
cmp
adc
ret
or
push
test
jnp
icebp
sti
orl
ret
es
lods
ret
stos
jp
jb
mov
push
adc
adc
mov
xchg
jecxz
notb
out
lds
mov
inc
push
push
cmp
push
roll
lods
or
out
mov
enter
dec
jecxz
fdivl
mov
leave
pop
pop
test
out
arpl
stos
outsb
cmpsb
fsubl
lock
push
lods
lcall
mov
lods
mov
vmovaps
pop
mov
loopne
mov
rorl
repnz
ret
mov
das
dec
or
call
push
lret
cmpsb
push
mov
adc
mov
xor
xchg
imul
lea
adc
cmp
cld
sub
sahf
xlat
loopne
push
mov
bound
jb
repz
int
inc
adc
mov
iret
xor
shrb
sbb
inc
jle
jno
pop
inc
inc
cmc
js
pop
xchg
jg
adc
mov
dec
jp
stc
and
xlat
imulb
mov
xchg
mov
aad
xor
leave
pop
pop
cltd
cwtl
cmp
jo
jecxz
repnz
push
testb
sub
ret
push
clc
sbb
fistpl
pop
sahf
pusha
aam
popa
fwait
xchg
out
add
shlb
dec
nop
in
xor
fdivrl
loope
out
xor
loop
mov
rcr
lahf
mov
xchg
stos
out
dec
je
nop
aaa
cmp
aaa
or
add
cmp
jl
sbb
and
in
loopne
pop
icebp
jecxz
pop
data16
push
cmp
push
pop
push
test
push
xlat
and
test
jne
repz
stos
jg
inc
movsl
int
scas
xchg
stc
repz
jecxz
cmp
scas
fsubl
push
jns
arpl
test
push
mov
inc
mov
jg
repz
je
rolb
out
adc
das
xchg
mov
ljmp
cwtl
pop
pop
stos
outsl
and
mov
jp
lcall
sbb
cmp
xlat
inc
cmp
sub
or
xor
test
sub
mov
ljmp
fs
mov
and
imul
cmp
arpl
adc
cli
and
sub
fs
or
stos
and
cmc
mov
and
hlt
sti
mov
adc
and
out
mov
push
ljmp
mov
cmp
push
sub
cltd
nop
es
aam
pop
incb
and
xchg
mov
ret
adc
sub
push
lods
mov
mov
aam
jg
jno
popf
mov
push
jg
testl
pop
data16
push
shr
cmpsl
xor
push
or
add
out
jecxz
sbb
jle
daa
mov
lea
add
pop
inc
xlat
xor
sahf
loopne
push
inc
gs
inc
nop
xor
add
push
mov
sti
ss
lahf
xor
mov
aas
subl
mov
and
lods
fstps
cld
ret
jge
xchg
out
lds
cmpsl
mov
xchg
repnz
sti
sub
data16
cmpsb
pushf
mov
mov
leave
pop
push
push
push
sbb
sub
sbb
and
fs
jbe
xchg
nop
sbb
test
aaa
in
es
mov
xor
push
dec
mov
mov
mov
js
xchg
dec
sub
sar
cmpsl
push
mov
inc
out
loope
outsb
rorb
sbb
popa
xchg
pop
int3
mov
mov
xchg
out
data16
or
repnz
jne
test
push
sub
mov
in
push
dec
add
out
push
pop
enter
arpl
and
ret
in
stos
xchg
push
mov
push
loop
push
and
inc
jno
int
insl
lcall
cltd
mov
insb
dec
add
daa
cld
xor
dec
cs
sub
cmp
pop
movsl
sbb
push
push
pushf
ret
mov
cld
mov
loopne
mov
jl
cmpsb
ret
xor
dec
sbb
test
inc
fadd
sahf
cs
xor
xchg
sbb
aaa
jmp
or
mov
pop
enter
inc
cmp
in
sarl
ss
xor
pop
jecxz
daa
cld
push
mov
xor
sub
jnp
sbb
cmp
in
and
mov
sub
enter
shll
mov
xor
mov
jnp
jg
aas
sbb
cwtl
in
push
jae
xchg
inc
negb
mul
pop
stos
dec
mov
xchg
cmp
push
ret
or
xchg
outsb
idiv
sti
data16
push
call
sub
ret
mov
sti
pop
ljmp
and
add
jmp
mov
hlt
out
jne
aaa
sub
push
movsb
fs
lret
mov
xor
inc
cwtl
adc
xchg
ret
pop
adc
adc
jg
adc
or
sub
sbb
aas
xor
ljmp
dec
sti
cwtl
enter
mov
xchg
outsl
dec
sar
push
mov
rorb
xchg
ficoml
jno
mov
xorb
pop
mov
test
jb
push
leave
pop
dec
cmp
lods
and
dec
sbb
scas
ds
mov
add
insl
and
pop
sbb
xchg
jnp
mov
mov
bound
pop
mov
pop
mov
inc
hlt
sub
cmp
in
adc
ret
xchg
lock
das
fnstenv
jmp
xchg
jo
xchg
mov
fstp
loope
test
lahf
js
ror
decl
popf
dec
pop
fs
inc
jbe
int3
addr16
push
sbb
add
dec
insl
out
fsubrp
fdivp
in
das
daa
nop
cmc
nop
movsl
pop
fucomip
and
ficompl
sbb
aaa
push
cmp
adc
xor
sub
lcall
dec
outsb
adc
mov
ja
pop
outsb
out
xchg
shl
or
lods
nop
mov
dec
sbb
sbb
sbb
cmc
push
lds
jne
mov
sti
jl
mov
mov
jns
lock
lods
or
xchg
xlat
push
dec
int
cli
ljmp
and
sahf
mov
or
enter
adc
pop
shlb
call
adc
lock
push
gs
push
leave
stos
sbb
push
push
psubusw
jno
repnz
cld
iret
or
mov
mov
rorb
mov
jle
xor
loope
sbb
pop
pop
lock
aaa
dec
or
int3
test
outsb
cmc
inc
popl
cmp
loopne
insl
mov
mov
mov
pop
mull
mov
cmp
xor
xor
cmpsl
and
shll
cld
push
lods
ret
and
mov
sahf
and
in
and
shl
cwtl
cs
das
stc
xlat
into
repnz
cli
add
pop
cmp
loope
push
cmpl
push
push
xchg
gs
add
adc
jbe
loopne
test
or
lods
jmp
adc
and
adc
cltd
pop
pop
aad
mov
sub
and
aad
dec
sub
mov
enter
outsl
incl
adc
sub
pop
pop
adc
pop
xor
cwtl
lahf
fs
pop
xchg
fs
mov
jle
rolb
daa
inc
shrl
movb
cs
fisubl
push
sbb
sub
add
inc
std
test
dec
orb
mov
int3
jns
fwait
scas
aam
jne
je
push
rcrb
add
scas
and
cmpsb
jno
dec
pop
push
and
dec
shlb
and
cld
xchg
cmpsb
push
or
daa
dec
pushf
out
adc
out
xchg
jns
lea
adc
pop
fistl
loope
xchg
push
push
cmc
push
aam
jg
sbbb
or
mov
pop
test
push
mov
jae
cmp
pop
mov
mov
jae
ds
jl
sub
das
jns
adc
les
daa
jp
les
daa
pusha
cmp
dec
daa
jmp
aad
outsl
stc
je
cmp
and
rep
sub
hlt
mov
push
daa
inc
aam
shll
scas
xchg
subl
push
adc
dec
mov
fucomp
aas
fistpll
iret
push
std
cld
cmpsl
in
stc
sub
loope
add
fstpl
add
or
xor
out
sbb
aad
push
inc
mov
aad
cmpsb
xchg
ftst
dec
push
movsl
stos
cmpsb
pop
dec
xchg
sarb
popa
cwtl
loop
cmp
rorb
mov
jg
xchg
pop
xchg
xor
dec
out
push
fidivs
dec
leave
push
cld
fidivl
jmp
xchg
xchg
xchg
dec
dec
mov
mov
push
aas
or
and
lock
sbb
subl
scas
sti
or
or
daa
inc
pop
mov
sub
xchg
adc
jecxz
mov
push
add
xor
gs
push
pop
leave
cmp
cltd
cwtl
pusha
sbb
sahf
xchg
aad
jne
jge
adc
xchg
mov
dec
push
jecxz
pop
imul
push
or
jle
inc
mov
aad
test
mov
mov
ja
jecxz
cmp
stos
stos
es
popa
inc
xor
out
repnz
or
ret
pop
popf
outsl
pop
loop
push
fildl
scas
outsl
and
jp
dec
jo
adc
sbb
adc
std
jo
int3
mov
pusha
clc
in
fsts
and
xchg
cmp
call
push
pop
xchg
es
lods
mov
dec
inc
ret
inc
iret
into
aas
in
je
std
mov
shl
jge
dec
jp
vphaddbq
pop
test
xor
cmp
xor
out
jg
mov
call
test
popf
movsb
movsl
movsl
mov
aam
test
in
push
xor
jbe
clc
hlt
popf
lret
shlb
jle
fadd
mov
mov
sub
mov
arpl
insb
sbb
xlat
xchg
repnz
mov
lahf
sbb
dec
push
mov
hlt
cli
scas
mov
sub
loopne
add
xchg
loope
std
and
and
sbb
pop
pop
mov
mov
in
mov
xchg
gs
cmp
jo
ret
repnz
push
inc
mov
push
iret
clc
movsl
hlt
inc
repz
je
mov
mov
mov
mov
lods
add
xchg
inc
leave
cmp
dec
mov
cli
mov
dec
inc
fsts
ss
nop
jl
sbb
adc
divb
adc
ficoms
aas
insl
dec
mov
jno
mov
cmpsb
int3
into
jp
cltd
lret
movsb
fnstenv
pop
out
pop
pop
out
xchg
mov
push
ljmp
sbb
popf
mov
mov
sbb
adc
lret
daa
cmp
out
movsb
out
jne
das
arpl
cmpsb
adc
mul
lcall
sub
inc
cmp
xor
fsubs
jp
or
repz
icebp
lret
cmpsl
mov
ret
rorb
sub
enter
je
or
test
shll
sar
jmp
fwait
or
mov
jge
and
je
sbb
fnsave
sub
cltd
subl
dec
fnsave
add
jecxz
xchg
std
push
cmpsl
fisubrs
cmp
std
dec
out
dec
push
popf
push
mov
dec
shl
add
cmp
scas
mov
into
sub
push
xchg
pop
xor
cmpsl
int3
adc
and
in
jo
cli
and
aam
mov
scas
mov
push
cmc
mov
sarl
call
pop
mov
repz
and
push
sar
cmpsl
stos
cmp
xchg
and
ja
sbb
inc
js
pop
fs
je
shlb
repz
es
ret
sbb
test
in
stc
iret
dec
jae
inc
das
test
out
enter
sub
mov
jo
pop
jge
mov
pop
mov
jecxz
mov
xchg
mov
xchg
mov
push
ret
jb
or
dec
hlt
xchg
add
pop
jae
push
sub
jge
cld
jl
xchg
adc
sbbb
push
jmp
jae
adc
cltd
fs
mov
out
inc
mov
imul
pop
mov
mov
dec
pop
inc
int
dec
scas
jmp
sub
fisttpl
insb
push
pop
insb
orb
outsb
popa
jnp
add
jno
loop
adc
ljmp
and
dec
add
add
jecxz
push
xchg
xor
mov
out
hlt
cmpsl
ret
jae
decb
pop
jl
cs
mov
mov
lock
add
jno
movsb
cmpsl
popa
jae
xlat
push
aam
repnz
cmp
cli
push
std
xor
loope
mov
xchg
test
jp
pushf
mov
mov
fwait
cmp
pop
xchg
jne
repnz
rcl
test
outsl
loop
add
test
into
fildll
in
popl
pop
mov
mov
mov
sub
inc
hlt
jbe
test
push
test
dec
call
xchg
lahf
int
jle
lret
shll
or
data16
aam
pop
or
in
push
ret
and
outsl
mull
fldcw
sti
pop
jbe,pn
and
or
sbbb
test
cs
mov
wbinvd
aad
lcall
iret
inc
je
xor
jns
test
jg
inc
cmpsb
adc
out
insb
popf
daa
push
ret
pop
leave
pop
lret
lods
mov
mov
xchg
out
inc
mov
aad
mov
popl
arpl
cmp
mov
rcll
outsl
outsl
vunpcklps
arpl
xchg
das
and
dec
xor
push
loope
cltd
int3
xchg
sbb
rorl
test
cmc
faddl
ljmp
mov
test
sbb
inc
mov
xor
aam
into
jge
ja
lock
cmp
rcrb
adc
mov
les
push
in
test
or
mov
sti
fnsave
sti
sbb
arpl
or
sbb
mov
jl
insl
pop
mov
out
repz
jb
xor
ret
fsubrl
addr16
xchg
loope
es
into
fwait
aaa
lods
mov
popf
insl
fildll
pop
cltd
sbb
fsts
daa
or
pop
jae
add
jg
xor
fsts
pop
and
pop
or
lcall
cmpsb
in
fnstcw
push
sub
mov
call
push
pop
or
inc
popf
jae
mov
arpl
xor
fldenv
fsubrl
xlat
jo
cmp
in
outsl
test
adc
dec
ror
adc
and
push
cmc
js
push
ret
ss
out
lahf
lock
fs
stos
and
les
push
sub
out
rclb
out
xchg
pop
fstl
sti
mov
add
mov
dec
pop
push
fidivs
dec
and
cltd
aam
push
jne
add
popf
fimuls
mov
div
scas
clc
outsb
pop
psraw
popa
mov
cmc
jecxz
lea
push
inc
push
inc
mov
arpl
cmp
fwait
stc
out
test
adc
inc
mov
xchg
adc
push
sub
scas
in
sbb
mov
push
imul
cmpsb
rcrl
sbb
add
les
inc
mov
and
mull
inc
jle
cmpsb
cltd
stc
lcall
xchg
imul
int3
jae
pop
cmc
ret
push
sbb
out
pop
pop
cmpsb
into
gs
insl
xor
aas
mov
and
push
hlt
jnp
jbe
es
dec
icebp
pushf
ss
inc
cmp
int
std
jmp
clc
jmp
sar
sahf
hlt
dec
sub
mov
das
mov
inc
or
pop
sub
cmp
notl
xor
xchg
and
iret
movsb
and
loopne
shll
mov
out
xchg
iret
mov
pop
add
pusha
add
ss
test
sbb
sahf
xlat
movsb
jne
das
mov
xor
mov
adc
fmuls
repnz
jb
or
in
mov
sarb
pop
icebp
movlps
xchg
loope
jnp
addr16
cmpb
dec
dec
xchg
cli
stc
jno
mov
loope
ss
sbb
sub
mov
dec
loope
adc
xchg
loopnew
imul
popf
scas
lds
in
cmc
xchg
addl
sub
clc
adc
imul
push
test
int3
pop
xchg
lds
and
pop
or
sbb
lcall
mov
and
dec
or
sbb
jl
lods
loopne
inc
pop
jno
das
es
mov
and
gs
sbb
inc
pop
testl
stos
adc
aas
jbe
into
add
dec
lea
cld
adc
xlat
mov
pop
hlt
mov
sbb
mov
xor
mov
jnp
and
js
xor
and
push
mov
cmp
mov
sbb
stos
sub
out
sub
xchg
ss
scas
les
and
xchg
aad
pop
and
and
mov
sbb
add
adc
add
xchg
stos
outsl
sti
fldenv
mov
std
dec
clc
mov
mov
sub
mov
dec
adc
mov
test
adc
out
ret
add
lahf
pushf
or
lods
xchg
lret
push
insb
jecxz
fldt
outsl
sahf
fiaddl
mov
add
or
mov
add
push
nop
lock
shlb
dec
mov
xor
insl
or
dec
mov
fstl
pop
mov
cli
mov
bnd
and
and
inc
or
mov
inc
xchg
mov
fmuls
mov
jge
xlat
or
pushf
nop
mov
shrl
push
mov
notb
xlat
stc
lods
dec
xor
xchg
lea
mov
xchg
cmp
test
out
dec
pop
fldenv
inc
mov
xchg
sti
imul
jge
mov
push
dec
std
add
jmp
mov
pop
push
fmulp
push
insb
mov
cmpsb
mov
ljmp
mov
sbb
sbb
push
rorl
xchg
sub
cmp
pop
xor
and
testl
pop
hlt
lahf
jae
mov
inc
pop
les
sbb
cmc
push
pop
repz
imul
jl
ud1
jge
push
pushf
aad
shll
adc
jmp
scas
sahf
imul
rcr
rorb
sbb
xor
aas
fwait
mov
jae
test
test
test
adc
pop
jae
adc
rorb
icebp
std
dec
xor
mov
adc
push
cmpsb
nop
mov
mov
sub
or
shll
out
mov
sub
pusha
fsubrl
push
aad
xchg
push
clc
pop
das
dec
xchg
push
stos
lret
fcompl
dec
mov
pop
fidivl
jg
add
int
mov
mov
cmpsl
std
jns
pushf
out
sbb
inc
lcall
xor
xorb
jb
gs
xor
mov
ja
lods
sub
into
ds
leave
add
insl
popa
arpl
xchg
stos
xor
je
push
dec
idivb
mov
push
mov
adc
xor
and
sub
xor
cmc
mov
lahf
mov
push
and
pop
mov
jo
test
mov
inc
scas
data16
call
fisubrl
add
fimuls
stos
add
push
mov
in
mov
dec
xchg
sub
dec
fcom
dec
push
aaa
mov
or
xor
push
or
stos
cmp
jno
xchg
sbb
mov
xchg
out
and
xchg
xchg
jnp
sbb
je
sbb
mov
sbb
daa
shr
xchg
cli
push
rcrl
int
sbb
std
ret
out
xor
aas
mov
and
mov
mov
or
gs
ss
mov
inc
push
mov
mov
pop
sub
call
mov
push
fimuls
pop
popa
enter
arpl
xor
jno
add
cmp
cltd
aas
fcmovnbe
daa
sbb
mov
xor
sti
mov
in
jp
pusha
aaa
pop
js
popa
into
cmpsb
out
out
inc
add
inc
lret
les
adc
fstpt
mov
mov
xchg
in
dec
mov
fcmovnbe
cmp
mov
xor
or
rcl
inc
int
inc
mov
shll
iret
pop
cmc
dec
fmuls
into
insl
movsb
lret
pop
jg
ja
out
cld
xor
fcmove
lds
insb
std
and
sbb
push
loop
pop
rol
nop
jbe
pop
mov
decb
jo
inc
es
cmpsb
mov
aad
xor
aad
inc
xchg
inc
push
mov
hlt
sbb
inc
cmp
push
lahf
jp
fs
mov
loopne
add
sbb
xchg
push
bound
notl
data16
lea
inc
das
sub
loopne
es
iret
pop
les
leave
je
sub
rolb
adc
test
in
pop
loop
ret
push
dec
jae
sahf
add
cmp
push
loope
mov
ds
movb
inc
js
sub
stos
in
cmp
rcrl
sbb
mov
jp
loop
daa
push
mov
xchg
ja
sub
lock
rcl
jns
dec
dec
lret
adc
push
pop
or
and
in
xchg
js
fistps
idivl
fsts
icebp
jge
xor
mov
push
mov
or
ja
dec
mov
mov
mov
mov
xchg
mov
cmovo
test
mov
dec
sub
ja
testb
mov
icebp
dec
out
mov
test
pop
cltd
std
mov
test
pop
lods
mov
aaa
scas
daa
inc
in
sti
xchg
les
mov
or
xor
rcrb
daa
jmp
cmp
push
in
testb
mov
cmp
loop
jg
std
jns
push
sub
push
popf
ret
mov
repz
repnz
lods
mov
push
pop
add
xor
mov
movsb
or
loopne
aaa
sbb
sbb
mov
pop
shl
daa
je
sub
shll
cmp
lods
jbe
lods
add
bnd
mov
inc
jo
pop
scas
pop
push
pusha
add
and
and
dec
or
daa
out
jl
mov
fdivl
xchg
adc
xchg
mov
pop
icebp
inc
mov
inc
out
mov
lea
pop
cmp
dec
mov
inc
iret
les
loope
and
and
inc
pusha
imul
ret
fistps
mov
ljmp
outsb
neg
loope
push
imul
mov
rorb
daa
pop
jae
bound
inc
nop
loope
xchg
and
jg
xchg
lock
sbb
in
sub
cltd
add
push
in
pop
mov
popf
xor
aas
incb
mov
popa
push
sub
ret
es
sbb
mov
je
dec
incb
cmc
shl
outsl
add
mov
stc
cmovo
stc
movsl
fimuls
sbb
push
sar
popf
mov
int3
pushf
mov
dec
inc
adc
aad
std
int
sub
jns
cmp
or
lock
jnp
repz
lret
mov
inc
cmp
adc
out
mov
push
jmp
stc
scas
cmpsb
es
aad
dec
lret
and
add
mov
pushf
or
xor
dec
lods
push
int
ret
shrb
mov
rep
cltd
dec
data16
sub
mov
je
add
adcb
and
sbb
pop
cmp
out
jg
sbb
push
in
iret
xor
bnd
jo
push
mov
dec
hlt
mov
les
shl
repz
jge
push
mov
outsb
mov
mov
cs
icebp
inc
je
sub
ja
clc
out
cmp
gs
mov
add
adc
sarl
xchg
push
sahf
mov
in
in
xor
ja
in
sbb
cld
jae
icebp
cltd
xor
xchg
hlt
nop
movsl
cmp
xchg
outsl
jg
push
popa
or
mov
pop
adc
nop
sbb
nop
mov
xchg
pop
fadds
push
outsl
stos
dec
dec
jb
testl
lock
inc
sbb
jge
mov
mov
add
ds
or
lahf
scas
push
and
mov
mov
ss
adc
fcomps
jp
inc
in
gs
nop
or
jae
push
mov
adc
xor
push
sbb
jmp
push
ficomps
test
push
fs
mov
pop
shlb
sub
sbb
addr16
pop
cld
lock
imul
ljmp
lret
dec
add
or
or
inc
jg
jle
nop
dec
dec
lock
pop
cmpsb
jae
mov
cmpsb
jbe
stos
mov
rep
jb
lock
scas
sti
inc
adcb
mov
pop
movsb
xchg
xchg
push
fnsave
icebp
rcrb
push
or
jns
subb
adc
add
dec
lcall
lds
imul
out
ljmp
fidivl
cmp
out
lahf
xchg
shll
adc
lret
jb
adc
rorb
push
ljmp
xlat
pop
bound
test
mov
outsl
test
loope
outsb
pop
lret
cmp
in
pop
outsb
mov
mov
jecxz
pop
xchg
jne
pop
push
push
xor
orb
xlat
mov
dec
add
push
add
dec
std
call
and
jbe
sahf
sti
mov
inc
test
mov
cmp
inc
int
insl
jg
cltd
inc
lds
inc
and
mov
cmp
repnz
out
sbbb
in
pushf
or
mov
push
es
test
std
lods
jne
stos
stc
sbb
mov
jb
es
sub
into
pop
add
adc
cmpb
cs
mov
adc
lcall
js
xor
dec
cld
pushf
jno
aam
pop
movb
stos
cmp
dec
inc
cmp
shr
leave
outsl
jne
stc
sub
add
js
in
lock
lods
fsts
xchg
add
pop
add
inc
xchg
idivl
cli
dec
sbb
adc
xorl
decl
mov
pop
and
cmp
ret
sbb
dec
repz
movb
push
shll
sbb
and
mov
jae,pn
xchg
cmp
adc
push
test
dec
pop
jmp
int
aaa
mov
mov
arpl
mov
outsl
jle
xchg
mov
out
push
dec
sahf
xlat
push
sar
xchg
test
sbb
xchg
outsl
add
outsb
out
test
add
mov
lahf
fs
sub
cmp
pop
or
lods
push
sbb
mov
adc
ret
sbb
fnstenv
repnz
lcall
sub
push
push
inc
or
movhps
pop
jg
nop
xor
adc
lods
lds
mov
push
mov
mov
mov
sahf
int3
cmpsb
cwtl
es
sub
mov
mov
push
outsb
popa
jae
lret
ss
out
cmp
je
outsb
sbb
nop
hlt
mov
mov
dec
push
dec
mov
fmull
and
in
jl
adc
mulb
adc
push
sub
pushf
xlat
stos
imul
rorb
cmp
lcall
out
and
mov
fistps
sbb
or
push
aad
dec
jne
jp
mov
cmp
mov
sbb
fwait
repnz
inc
scas
dec
dec
xchg
sbb
pop
mov
inc
rcrb
mov
in
aas
lcall
insb
sub
repz
out
pop
cmp
push
inc
pop
adc
aas
rep
or
test
outsb
ss
into
xor
clc
jge
or
and
mov
or
mov
add
cwtl
ret
add
out
rcll
mov
mull
inc
dec
pushf
sarl
fsubr
cltd
dec
test
in
jae
notl
orl
pop
loope
in
ret
cmp
lcall
xchg
inc
mov
or
dec
es
popa
ljmp
or
ljmp
sbbl
mov
shlb
inc
cmpsl
fsubl
xchg
xlat
lds
mov
jcxz
pop
jne
xchg
cwtl
pop
or
sbb
lods
inc
out
fdiv
sbb
insb
cmp
lods
mov
and
jne
aas
lock
push
cli
lods
loop
aas
jle
fwait
icebp
bswap
nop
lcall
push
cmp
pop
ljmp
or
faddl
sbb
loope
push
sub
in
push
out
xor
out
lock
mov
in
lret
mov
mov
jp
out
test
xchg
sbb
xor
insl
push
aam
ret
jne
ret
insl
stc
jmp
les
adc
lahf
adc
in
xchg
mov
inc
nop
movsl
iret
pushf
inc
std
and
dec
inc
out
movsl
mov
inc
les
xchg
push
int3
mov
mov
lods
pop
insl
std
jecxz
mov
shll
mov
lock
aas
push
scas
addb
pushf
cs
mov
mov
cli
roll
mov
es
pushf
mov
adc
pop
and
jbe
cmp
daa
loopne
bound
cmpsb
and
jp
pusha
sub
ds
xchg
mov
xchg
lret
cmpsl
cmp
push
jno
cmpsl
mov
lahf
out
mov
mov
testb
cltd
ss
sbb
mov
or
mov
adc
int
xor
fwait
jns
jbe
nop
pushf
cmp
fwait
dec
add
insb
dec
xchg
mov
cld
rolb
mov
fdiv
cmp
call
and
or
xor
push
xlat
fs
adc
mov
pop
xchg
mov
shlb
cmpl
push
inc
ds
jo
les
xor
stc
pop
outsl
rol
cs
cmp
push
xchg
push
and
sti
mov
popa
push
adc
pop
fisubrl
cmp
into
mov
pop
mov
stos
loopne
adc
cs
pop
bound
sarl
int
sub
lds
push
enter
dec
or
xchg
stos
pushf
das
inc
testw
mov
jp
and
sbb
cmpsl
dec
cwtl
inc
mov
cmpb
mov
mov
mov
adc
mov
test
call
add
test
mov
mov
add
or
and
gs
xchg
je
dec
or
gs
mov
clc
insb
imul
addr16
pop
or
add
fcmovnbe
jo
mov
cwtl
mov
insl
xorl
movsl
adc
mov
lods
cld
das
mov
inc
inc
pusha
je
dec
loopne
and
inc
fildll
push
cltd
and
out
cmp
sub
sbb
sub
sub
xor
pusha
pop
adc
mov
mov
sub
sahf
aas
inc
test
and
push
jns
shr
aad
cmp
clc
xchg
sbb
fdiv
movsb
adc
cld
pop
lret
into
sahf
scas
inc
sub
adc
mov
mov
dec
push
fs
push
in
bound
in
dec
test
cld
lret
xor
pusha
inc
and
lds
jbe
scas
mov
add
pop
aad
iret
popf
mov
jne
pop
mov
inc
inc
aam
daa
inc
lds
loopne
sbbb
mov
shrl
adc
int3
lea
insl
add
add
loope
dec
and
cwtl
scas
mov
loopne
test
shrl
and
rcr
nop
mov
imul
adc
jmp
mov
test
arpl
js
repnz
mov
xchg
in
sub
movsb
jnp
repnz
lods
xor
clc
jb
in
pop
jmpw
fldenv
enter
and
bound
lods
repz
pop
jno
mov
jbe
out
icebp
sub
shrl
lods
xor
xor
lret
and
and
cmpsb
aaa
test
mov
bound
mov
adc
fbstp
pop
push
lods
mov
or
push
or
insl
in
shll
cmp
mov
mov
pushf
fidivrl
iret
pand
xchg
cmp
std
fcompp
or
xchg
shll
mov
adc
pop
cli
mov
mov
fnsave
cmp
push
jg
fbstp
pop
or
iret
sub
lds
jg
lock
sbb
ficomps
lret
out
lea
or
xchg
push
mov
inc
in
sub
jecxz
mov
and
jg
sub
and
aad
lcall
xchg
mov
or
sti
pop
cmp
dec
push
adc
cmp
fildll
insl
out
ljmp
les
add
lret
int3
xchg
pop
lahf
lret
sub
pop
mov
out
call
mov
in
jecxz
pop
scas
pop
mov
pop
roll
and
pop
ja
aam
mov
xchg
out
notb
jp
add
jle
fimull
pop
mov
cmp
jge
movsl
movsb
or
push
cmp
xchg
cmp
sub
popa
je
mov
ss
jge
mov
clc
xor
push
dec
jp
icebp
fsubs
lcall
xor
jno
or
inc
xchg
pop
je
jle
imul
call
hlt
repnz
jmp
mov
hlt
hlt
lock
pop
fcomps
test
in
jge
in
cltd
sub
or
xor
add
test
or
or
cmp
pusha
adc
inc
sub
aam
dec
enter
imul
pushf
dec
mov
inc
xchg
aas
lret
mov
js
mov
bound
jmp
test
lods
sti
add
dec
les
xor
jecxz
xchg
stos
arpl
fistl
lahf
dec
sub
push
cwtl
adc
cmpsl
xchg
js
lds
xchg
pop
mov
dec
and
xchg
mov
rolb
imul
loop
loop
mov
lret
loopne
jg
shl
adcl
imul
iret
cld
xor
and
lret
out
xchg
mov
int3
push
cmp
adc
repnz
mov
pushf
push
inc
stos
ret
jecxz
mov
mov
outsb
and
inc
xlat
mov
push
mov
jle
scas
add
and
clc
loopne
mov
pop
cmpsl
fimuls
ret
adc
mov
cmp
pop
rcl
gs
mov
mov
cmpsb
sub
mov
mov
xor
sub
imul
xor
or
sbb
test
into
jg
pusha
xor
or
xchg
jb
in
xchg
test
icebp
data16
xchg
rorl
adc
fucomi
loopne
add
and
cwtl
jae
adc
pop
jo
cmp
mov
shll
sbb
xchg
ds
int3
add
pushf
push
out
mov
in
out
pop
add
movsl
addb
sbb
rcrb
lret
lret
pop
fisttpl
inc
aaa
cmp
mov
cmp
sbb
sub
mov
mov
loope
push
in
xchg
xchg
fs
pop
fidivs
jb
bound
pop
nop
or
lds
scas
push
pop
xchg
xchg
leave
xchg
xchg
cmpsl
lods
aas
or
cmp
into
aam
add
scas
jl
cmp
es
movsb
bound
and
push
ds
js
sub
jl
mov
and
negl
inc
negb
dec
movsl
mov
shrb
cmp
lock
shlb
mov
or
and
test
int3
movsb
cs
mov
xor
inc
pop
or
gs
pop
and
lock
inc
outsl
aam
mov
add
cmp
push
xchg
int
cmp
nop
jle
cmp
ds
outsl
lcall
cmp
and
push
insb
lret
push
incl
ja
adc
outsl
or
mov
int3
xor
imul
popa
cli
arpl
loope
xchg
mov
dec
mov
shll
mov
loope
sbb
pop
pop
test
test
or
or
mov
scas
aas
pusha
mov
mov
sbb
dec
cltd
es
pop
cmpsb
xchg
sub
xor
xchg
lea
daa
cli
pop
add
or
lods
and
inc
cmp
push
pop
xor
cs
push
jmp
test
xchg
mov
mov
iret
inc
pop
rcr
shll
sbb
inc
add
push
mov
lret
pop
cld
mov
cmp
leave
imul
sub
lret
and
and
mov
test
in
ja
outsl
jge
mov
jg
xchg
cmp
xchg
rol
ret
shll
jnp
push
inc
jbe
rol
lds
repnz
sbb
mov
cmp
faddl
cmp
xor
xlat
cmp
inc
fsts
cmpsl
movsb
pop
lock
mov
add
pop
ljmp
mov
dec
xor
push
dec
mov
lret
lret
jbe
jle
lods
sbb
cmp
push
xor
dec
movsl
xchg
fidivrs
dec
pop
inc
mov
cmpsb
enter
mov
add
mov
jmp
pop
add
add
mov
sub
xchg
or
push
lock
jae
xchg
fimull
cltd
in
xor
jo
jp
mov
pop
cmp
ljmp
mov
imul
sti
pusha
mov
jns
ds
in
mov
inc
xchg
jle
push
push
fistps
aad
mov
inc
sub
sbb
in
xchg
sbb
ja
xor
xchg
aas
dec
in
rorb
cmp
rcll
mov
jp
cli
inc
pop
push
and
mov
xchg
or
inc
nop
mov
ret
cmc
xor
jp
sbb
adc
mov
jb
pusha
mov
cli
into
stos
cmp
out
adc
jne
hlt
imul
pop
push
push
jo
sub
loopne
sub
push
lock
push
inc
sbb
loop
jecxz
bound
sbb
sub
adc
mov
popf
lret
fcompl
adc
rcll
jp
mov
add
jo
adc
bnd
and
pop
scas
imul
lcall
insl
mov
inc
clc
jbe
pop
lods
outsl
mov
mov
ficomps
pop
nop
and
and
jg
adc
sbb
dec
jne
aas
out
popf
add
shrb
fadds
out
sbb
pushf
fimuls
mov
adc
xchg
enter
or
pusha
fxam
mov
lahf
pop
sbb
push
and
add
test
push
rcl
shl
xor
and
movsb
cwtl
pop
mov
jg
and
mov
push
jae
push
out
inc
into
nop
nop
mov
jnp
inc
imulb
hlt
cmp
mov
mov
rcl
fucomi
lea
and
lods
aad
mov
inc
fiadds
bound
pop
mov
dec
mov
pushf
imul
aas
jne
ja
push
dec
pop
je
fs
pop
cmp
mov
movsb
jae
or
xchg
jns
das
icebp
aas
call
scas
mov
aam
loope
cmpsl
push
sub
sub
cmpsl
add
loop
inc
arpl
push
arpl
pop
or
aam
sub
lret
or
sbb
push
mov
push
hlt
adc
inc
lods
mov
mul
cmp
xchg
lahf
adc
icebp
cs
or
dec
add
addl
jp
cld
test
pop
jbe
fisubrs
mull
popa
jnp
pop
push
xor
loopne
inc
jp
into
mov
mov
aaa
hlt
lahf
loop
xchg
mov
jg
or
sub
sbb
in
idivb
fstpt
or
or
jp
mov
jle
popl
je
xorb
popa
sbb
ret
push
jl
popf
outsl
aad
xchg
push
cltd
fsubs
test
cmc
popa
push
jo
fdivrl
push
pop
jbe
pop
mov
pop
add
mov
aad
push
int3
push
sub
inc
sahf
jle
jge
mov
mov
mov
fs
lahf
mov
push
dec
stos
pop
roll
sar
jno
ror
mov
stos
lods
sbb
clc
das
adc
addr16
and
adc
push
out
call
sti
xor
mov
sti
jns
aad
loop
xchg
ds
mov
out
mov
sbb
insb
cltd
mov
adc
inc
ljmp
dec
bound
push
push
pop
fcoml
cmp
lock
js
out
add
sbb
mov
fimull
inc
pop
mov
hlt
xor
adc
xchg
xchg
int3
xchg
clc
leave
adc
sub
add
jle
lea
or
mov
sub
add
xchg
inc
ja
rcr
xor
push
pop
inc
dec
sub
cmpsl
xor
repz
xchg
popf
in
push
cmp
setb
nop
decl
sahf
fiaddl
mov
jp
sub
int3
mov
imul
xchg
lods
test
cmp
or
iret
icebp
sarl
mov
mov
add
jbe
fdivs
aad
testl
mov
mov
sub
call
rorb
ss
mov
scas
jns
into
out
pop
mov
add
push
add
mov
das
cmpsw
imul
nop
pinsrw
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
adc
mov
shlb
in
dec
stos
mov
or
mov
int
add
jb
fnstenv
and
dec
push
or
loopne
xchg
or
mov
jl
cwtl
dec
xchg
pushf
lods
insb
cli
movsl
xor
jno
pop
jmp
push
jnp
push
cltd
out
scas
fsubrp
cmc
in
xchg
lds
ficomps
out
and
test
sub
out
int
xchg
into
adc
sbb
ficoml
stos
aaa
cmpsl
scas
and
cmp
andb
mov
faddl
add
lret
fwait
and
jl
jb
sbb
fsubp
jge
pop
enter
cmp
imul
scas
xchg
je
outsb
popa
dec
outsl
repz
jbe
or
pushf
add
pop
or
inc
mov
dec
or
leave
lret
pop
jecxz
pop
push
sub
push
pop
pop
dec
push
sub
call
loopne
sbb
ljmp
push
addr16
fiadds
leave
inc
cmp
add
or
roll
cwtl
push
cld
mov
sub
sbb
es
inc
test
xchg
cltd
xchg
and
jle
xchg
push
xchg
enter
adc
pop
mov
test
in
mov
xchg
fnstsw
jbe
dec
icebp
bound
add
imul
les
leave
inc
sbb
bound
hlt
ret
cmp
lock
sbb
je
sub
xorb
xor
das
mov
xchg
movntq
sbb
cli
adc
inc
mov
dec
push
fcmovbe
pop
jg
adc
loop
inc
cmp
data16
push
aam
and
cmp
mov
in
mov
sbbb
or
lea
fidivrs
addl
pop
sarb
pop
or
je
call
pop
xchg
andl
jp
xchg
mov
movsb
cld
faddp
xchg
icebp
inc
lcall
xor
push
test
sbb
sarb
mov
xchg
and
inc
test
mov
and
ds
addr16
sub
sti
cmp
dec
or
sub
sbb
pop
inc
pop
add
icebp
push
push
dec
int3
mov
dec
mov
testl
sub
add
mov
les
adcl
mov
lock
jp
clc
mov
sahf
jp
xchg
es
sbb
cli
xlat
push
or
adc
rclb
hlt
dec
dec
xchg
xor
cltd
stos
sti
mov
and
mov
xchg
xchg
icebp
and
fisubs
in
cwtl
scas
sbb
pop
or
sbbl
gs
dec
ret
or
pop
es
sbbb
inc
inc
cs
or
rcll
xor
cmp
dec
mov
jnp
lock
cli
in
pmaddwd
cld
xchg
test
int
push
pop
inc
and
mov
out
notl
lods
adc
clc
ret
mov
or
lock
adc
cmp
sahf
jg
inc
cmpsl
xor
ja
xchg
dec
ret
call
lods
sbb
fistl
ficomps
sbb
fsubr
cmp
pop
jno
shlb
stc
or
sbb
test
jg
cli
push
in
shrl
sub
movsl
stos
cmpsb
subl
inc
push
push
pop
sti
xor
shll
lds
push
xchg
xor
lods
xlat
push
mov
xor
es
pop
xchg
lahf
xchg
mov
mov
mov
sub
movsl
jl
jg
dec
fdivr
mov
out
out
xor
pop
sub
xor
repnz
xor
sar
add
mov
mov
loop
push
push
les
and
jle
xor
mov
imull
clc
or
push
jnp
inc
stos
ret
sbb
pop
cmc
fcoms
pop
add
sbb
jecxz
add
adc
cmp
adc
jmp
enter
push
cmp
jp
shll
jns
push
js
fildll
inc
lods
stos
push
adc
xor
dec
lahf
mov
lock
push
pop
dec
mov
or
mov
out
mov
mov
mov
test
push
jle
in
add
lds
pop
sub
push
mov
pop
cld
sarl
push
popl
test
mov
pusha
ds
mov
ds
popa
fmul
xchg
pop
jle
and
mov
insb
pop
lods
push
mov
push
std
add
jp
sbb
in
das
jle
pop
subb
imul
in
mov
fnstcw
cs
dec
add
mov
test
hlt
xor
pop
or
xorb
adc
pop
jb
jmp
cltd
xchg
lods
jle
ret
jne
negb
or
cmp
xor
ret
inc
pop
fdiv
in
mov
imul
pushf
cmpsb
and
cmp
mov
or
push
pop
xor
sar
pop
pop
cmpsl
sbb
mov
push
mov
aaa
jbe
into
add
add
mov
in
pusha
xor
mov
js
lret
std
imul
and
nop
in
subl
jmp
mov
dec
data16
ljmp
int
mov
push
sbbl
pop
push
push
mov
xchg
sbb
and
jae
gs
repz
dec
mov
dec
add
es
je
and
jp
ja
les
pop
icebp
lret
adc
jb
pop
or
jecxz
insl
sbb
ss
rorl
loopne
pop
adc
push
in
out
adc
pop
lock
cmpsb
sub
xchg
popa
repnz
insl
mov
xorl
add
fwait
push
or
cmp
xchg
xchg
push
pop
cmpb
and
out
test
and
mov
jmp
mov
imul
sub
hlt
mov
aad
roll
stos
jecxz
mov
push
and
add
sub
lds
fadd
dec
jl
imul
jmp
mov
aam
sub
test
gs
fwait
mov
cmpsl
jle
sti
leave
data16
xchg
fcomip
xlat
push
dec
pushf
push
sbb
adc
jae
inc
dec
test
cmpsb
and
jecxz
repz
sbb
mov
repnz
pop
rep
sbb
out
xlat
cli
add
rcrb
add
mov
adc
insl
push
xlat
push
add
and
cli
outsl
out
mov
rcrl
popa
sbb
pushf
repz
pop
jnp
push
push
add
rcrb
aad
pop
pop
mov
test
push
push
add
and
nop
out
xchg
dec
inc
jae
pop
js
sub
push
enter
popf
jl
movsl
cld
xchg
lds
cmp
arpl
je
roll
clc
push
cmpsb
jp
pop
mul
push
push
loop
add
fistpll
mov
loop
sahf
fisubs
in
push
push
jb
mov
add
adc
clc
ljmp
mov
fs
lcall
mov
dec
xchg
mov
jo
js
das
mov
fstpl
shrb
mov
and
stos
add
mov
dec
add
jo
repz
add
or
xor
pop
push
std
cltd
out
jbe
pushf
lods
orb
push
xchg
jmp
rcll
sahf
sub
loope
js
xchg
inc
shll
or
pushf
fs
mov
fdivr
cmpsl
dec
fiaddl
sbb
cmc
cli
xchg
mov
xlat
push
sbb
adc
cmpsl
jnp
nop
int
call
nop
mov
inc
ljmp
sub
scas
or
sarb
fsin
loope
and
sub
in
adc
scas
xchg
add
mov
mov
adc
or
jae
cwtl
nop
testl
sbb
cld
cmpsl
xorl
and
loope
sub
cli
dec
mov
outsb
xor
sti
jbe
jecxz
inc
sbb
cwtl
pop
xor
js
cli
js
xor
cmp
push
fbld
out
or
pop
in
jns
mov
cmpb
pop
xchg
pusha
add
movsb
insl
or
ljmp
add
dec
lret
inc
cli
cltd
push
mov
xlat
and
jp
mov
insb
movaps
xchg
stos
cmp
inc
push
lock
push
mov
ficoms
lods
lea
cmp
rorb
xor
adc
xchg
xor
xchg
dec
lds
out
cmp
lcall
lahf
fisttpl
cwtl
mov
inc
imul
xor
cmp
test
lock
xchg
xchg
lret
decl
push
xlat
mov
int3
fcomi
mov
push
xlat
push
ret
sti
mov
fstpl
sbbl
push
cmpsb
and
sahf
mov
sbb
and
mov
jno
sub
jb
xor
mov
shll
scas
add
test
jg
dec
insb
mov
test
aam
shrb
pop
imul
adc
jl
dec
cmp
add
aas
jge
cmc
and
imul
dec
xlat
xchg
sbb
ljmp
push
sub
jo
movsb
pop
insl
sub
dec
aaa
mov
cmpsb
push
sbb
fdivs
repnz
mov
pop
sub
andl
xor
xchg
in
xchg
shrd
dec
jnp
movsb
jb
jb
mov
add
and
in
jp
leave
push
inc
cmp
gs
test
ja
add
push
xor
push
popf
popf
pop
int3
jge
pop
clc
pmulhuw
add
push
mov
xchg
div
xor
and
adcl
xor
into
sub
lret
imul
inc
scas
fcomi
adcl
pop
or
xor
inc
out
clc
lds
push
andl
xchg
xor
icebp
jge
cmp
scas
push
pop
dec
jns
inc
xor
sar
xchg
xchg
mov
jecxz
jecxz
aad
jnp
mov
aas
shlb
xor
mov
daa
xchg
fildl
inc
pop
mov
ja
jne
push
xor
ja
add
mov
push
jno
enter
pop
jne
stos
movsb
pop
and
cmp
pop
int3
and
sub
and
fcmovb
xchg
add
fs
lock
mov
xor
aam
cmp
ja
add
scas
dec
aaa
xchg
addr16
lret
xlat
add
pop
lret
mov
inc
xlat
rcrl
xor
sbb
mov
subl
xchg
imull
nop
in
pop
add
ja
test
pushf
pushl
jae
loope
adc
dec
je
fdivp
int3
sahf
lcall
lods
dec
repnz
push
cmp
adc
inc
ss
bound
insb
or
repnz
mov
cld
xor
addr16
popa
jmp
dec
ficoml
cmp
data16
fdivl
je
or
insl
ret
jmp
or
mov
mov
repz
inc
push
mov
es
stos
jg
repz
mov
lds
jae
lea
arpl
stos
imul
mov
dec
xchg
loopne
cmp
lods
divb
int3
mov
icebp
arpl
xchg
mov
xchg
pop
ljmp
jmp
cmp
ret
xor
aam
out
mov
aas
mov
jg
or
into
ret
lock
movsb
mov
pop
loopne
sti
dec
mov
dec
mov
jno
xor
fmul
lret
dec
xchg
testb
dec
inc
pop
mov
jns
sbb
pushl
xlat
aas
xchg
leave
xor
jg
cmp
ja
xor
sbb
lahf
mov
pop
loopne
push
xlat
fldl
add
cmp
push
xor
test
lods
lcall
pop
push
inc
lds
sbb
pop
sbb
cwtl
pop
frstor
mov
pushf
and
js
lds
dec
dec
cmpsl
leave
lret
outsl
jecxz
add
scas
shl
and
or
fistps
mov
out
xchg
sub
jo
ret
leave
jmp
stos
xor
xor
les
jg
and
xor
orl
loop
mov
push
and
fcoms
pop
sub
push
mov
loopne
xorl
mov
pop
adc
aaa
jne
dec
lret
xor
xor
jge
sbb
adc
leave
popf
pusha
xor
dec
imul
ja
lret
in
fnstenv
jns
mov
movsb
lods
jbe
cli
pop
cld
push
fldl
ja
loop
scas
sahf
ljmp
ret
dec
daa
sbbb
mov
hlt
scas
pop
mov
jmp
filds
je
rcll
mov
xchg
icebp
jne
inc
cwtl
je
mov
les
dec
or
adc
or
ds
ljmp
push
mov
movsl
cli
fstl
jmp
pop
mov
lods
cwtl
xor
mov
sub
mov
push
test
push
ret
dec
inc
push
repz
das
out
sbb
adc
mov
mov
je
sbb
lahf
or
fistps
lahf
les
push
stos
xchg
mulb
std
mov
sub
jp
ret
lret
push
fdivs
aas
mov
clc
mov
add
cli
add
sahf
subb
divb
lock
sbb
dec
ss
mov
mov
lds
leave
sbb
mov
movsl
add
incb
aam
push
cmp
xchg
je
popa
into
ss
cltd
aad
push
popa
adc
xchg
sub
xchg
ret
jecxz
and
fldt
mov
cmp
std
dec
pop
push
jmp
in
jge
mov
daa
cli
add
cmp
push
xchg
pop
mov
xchg
cmp
scas
xor
daa
or
cli
mov
push
or
mov
stc
mov
sbb
mov
jp
adc
movsl
pop
clc
jmp
jns
xor
push
es
mov
push
inc
mov
cmp
mov
test
xor
aaa
sti
mov
iret
sbb
mov
jecxz
push
mov
roll
lahf
push
imul
std
push
repz
and
fadd
inc
bound
push
xchg
ss
addr16
pusha
dec
data16
sub
shll
mov
sbbb
inc
in
clc
enter
bnd
push
push
es
int3
fstpt
mov
ret
mov
jp
xlat
roll
div
loopne
out
add
sbb
sbb
mov
mov
int3
ret
mov
and
mov
int
lds
imull
mov
cltd
add
pop
sbb
inc
push
call
dec
jo
xchg
push
unpcklps
rcpps
scas
mov
xor
inc
js
sahf
mov
icebp
jg
push
pushf
jae
mov
jecxz
aad
jmp
sub
in
dec
or
fs
stos
fisubrs
xchg
or
or
pop
mul
pop
pop
imul
mov
lods
sbb
test
mov
inc
test
gs
adc
cmc
cmp
data16
ja
daa
inc
loope
push
mov
ljmp
mov
mov
mov
mov
jmp
lret
push
or
jmp
xor
push
cltd
lret
dec
or
sub
dec
ja
adc
cli
cmpsl
or
mov
ds
hlt
jl
mov
xor
into
dec
jecxz
mov
push
sti
cmc
and
add
adc
cmpl
cwtl
lret
into
ret
ljmp
out
cli
mov
sub
stos
xchg
or
cmc
mov
jmp
movsl
shll
rsm
mov
mov
mov
rcrb
xchg
mov
rcl
mov
jg
mov
adc
lret
enter
add
mov
dec
jnp
ficomps
popa
jae
clc
or
adc
mov
pusha
and
sarb
dec
sbb
fcmovnb
shlb
xor
pop
pushf
push
test
pop
ret
sub
ds
jns
or
icebp
mov
ds
mov
incb
or
cmc
or
clc
xlat
push
lds
mov
xor
xchg
and
scas
sarb
mov
bswap
cmpsl
dec
dec
and
es
xchg
iret
inc
xchg
nop
add
mov
lea
add
jle
push
loopew
xor
sub
xor
adc
mov
test
stc
pop
adc
push
mov
out
stos
push
lahf
test
add
mov
cmpsb
pop
lcall
sbb
les
xchg
cmp
cmp
call
push
or
js
outsl
cmpsb
pusha
xor
adc
stos
mov
jnp
jns
xor
jns
cmp
xchg
add
adc
xchg
aad
stos
aaa
bound
stos
enter
or
loop
das
sbb
jmp
sti
testb
stos
jo
stos
jno
aad
add
movsl
pop
lds
pop
xchg
and
call
ds
xor
adc
sub
in
prefetch
jecxz
cmp
add
add
int3
scas
sbb
test
lock
mov
mov
cmp
push
mov
sub
paddsb
and
iret
push
cmp
push
mov
fildll
and
pop
xchg
cld
loopne
add
fisubs
rcr
inc
cpuid
push
xlat
pop
adc
jnp
adc
adc
fdivr
adc
pop
jno
sub
dec
stos
jo
sbb
jp
dec
roll
jne
xor
ret
fsubrl
push
push
test
repnz
mov
jne
dec
repz
scas
jno
int3
xchg
mov
sbb
test
jae
mov
test
sub
pop
scas
pusha
jae
xchg
imul
adc
and
xchg
in
or
scas
loopne
ret
push
lods
lods
shr
test
mov
daa
xor
loope
inc
add
and
dec
fcoml
rcr
mov
cmp
inc
jb
fsts
insl
xor
enter
lahf
mov
flds
insl
add
add
xchg
movb
and
cmpsl
loope
das
cmp
scas
lds
jmp
xchg
test
dec
sbb
in
mov
jge
and
adc
cmp
jbe
clc
mov
cmp
pop
gs
mov
xlat
jno
push
outsb
add
cltd
mov
adc
sub
fsubrs
bound
jo
sub
roll
push
fnsave
cmp
je
fsub
pop
movsb
seta
lahf
jo
inc
repz
and
mov
jb
repnz
xchg
cmp
rcrl
repz
aas
xor
push
inc
add
dec
push
stos
cmpsb
sbb
int3
movsl
pop
aad
insb
sub
pop
xchg
iret
test
lds
jbe
lods
stos
push
cmp
popf
jl
xor
xchg
xor
mov
mov
ret
or
mov
push
push
mov
sbb
pop
xchg
pop
mov
xchg
mov
xor
mov
xchg
fistl
in
in
pop
enter
xchg
jl
push
pusha
ja
pop
clc
fistps
push
jle
jb
mov
adc
sub
mov
aas
xor
mov
push
out
push
sub
fisubl
sbb
dec
mov
pop
mov
xor
test
mov
pusha
add
iret
test
lock
out
add
dec
mov
jge
rorb
int
mov
fadds
inc
lea
dec
jnp
loop
jbe
leave
push
cmp
int3
cmpsl
jmp
les
add
inc
es
insl
outsl
icebp
pop
jne
bound
lods
ficompl
inc
repz
or
sarb
dec
dec
push
cmpl
imul
das
lea
les
cmp
loopne
pop
or
cmp
test
xor
outsb
es
mov
mov
rclb
xchg
sbbb
jmp
xchg
adc
cltd
les
out
ret
jl
sahf
in
jg
sbb
repnz
fsubrl
inc
lds
sbb
sbb
jge
popa
and
jl
lods
jno
mov
mov
adc
mov
inc
cmp
sub
in
dec
dec
dec
lret
fstpl
testb
push
mov
and
fimull
inc
mov
xchg
fimuls
movsb
xchg
repnz
jnp
test
and
lea
fnsave
test
es
fsub
pop
popf
cmp
push
pop
or
cmp
push
imull
inc
inc
jecxz
out
out
fld
std
sbb
push
dec
fidivs
add
repnz
int
nop
fstl
inc
call
in
jmp
or
ret
nop
push
jo
pop
cltd
aam
mov
shll
data16
inc
add
xor
pop
inc
outsb
pop
fists
shll
cmp
push
cmp
sub
xchg
sub
rcl
mov
add
xor
xor
add
add
das
pusha
mov
xorb
mov
push
xchg
add
leave
nop
dec
push
mov
add
js
adcb
roll
in
cmp
jge
cld
sub
xchg
add
rol
inc
cld
leave
add
cli
sub
mov
xlat
jb
fcomp
out
push
dec
xor
stos
fwait
outsl
fadds
and
xchg
ret
movsb
mov
ret
cmc
std
and
loop
push
inc
push
test
js
lret
add
cmp
fstpl
push
stos
push
mov
dec
in
insb
or
and
test
jmp
pop
jl
sub
push
and
pop
fdivr
sbb
cli
xorb
mov
add
testb
xchg
mov
les
es
adc
fdiv
push
popf
fs
and
mov
arpl
cltd
cltd
daa
jge
pop
movsb
adc
test
jbe
neg
adc
sub
je
push
mov
cs
adc
push
add
xchg
dec
pop
outsb
iret
js
mov
pop
push
mov
push
sub
mov
adc
or
lods
insl
loop
or
lds
dec
push
xchg
daa
jns
pop
mov
jg
jle
sub
adc
in
jo
mov
call
push
cmp
mul
pop
mov
jne
push
cmpsl
ret
push
ud2
mov
dec
cltd
les
or
repnz
scas
inc
aad
insb
and
movsl
insl
daa
lods
add
mov
sbb
scas
lock
movsl
push
cmp
push
and
inc
loopne
enter
ret
test
pop
cmc
adc
jo
mov
test
jns
call
in
inc
scas
adc
testl
mov
es
inc
lea
dec
mov
jne
fisubrs
aas
cli
or
lods
call
icebp
pop
pop
ds
shlb
jae
mov
adc
jge
insb
shrl
cltd
mov
data16
jp
shlb
lds
pop
shr
xchg
mov
dec
int3
mov
mov
subl
mov
dec
push
xor
adc
push
inc
mov
sbb
cmp
int
dec
cmp
jb
and
mov
pusha
enter
je
ret
sbb
shrl
jns
push
mov
mov
push
sahf
jecxz
jle
std
out
scas
add
xchg
std
rcl
mov
mov
je
insl
pushf
lahf
iret
mov
lods
or
nop
cmp
xchg
cli
insl
int
inc
sbb
int
data16
jp
bound
hlt
fcomp
sub
sti
cmp
push
idivb
mov
mov
mov
pop
orl
das
jne
mov
aad
add
dec
cmovne
sub
movsb
xor
inc
daa
sbb
movb
xchg
inc
shlb
cmp
andl
out
addr16
push
inc
adc
sub
and
neg
mov
insl
enter
dec
cmp
and
lret
cmp
pop
add
xchg
adcb
inc
mov
jmp
xchg
aaa
out
push
cmp
dec
fcmovb
cld
or
sub
mov
je
inc
cwtl
cmp
in
inc
push
cmp
mov
cld
bound
fstpl
ret
adc
cmp
xor
sbb
std
rolb
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
cld
lcall
insb
lret
