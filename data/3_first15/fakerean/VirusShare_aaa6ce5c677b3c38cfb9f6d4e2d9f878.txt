sarl
adc
dec
xlat
sbb
std
jno
js
int
fdivl
and
or
and
and
jbe
inc
add
clc
xor
mov
inc
mov
sti
dec
xchg
xor
mov
cli
stos
aas
out
push
jg
sbb
lock
test
mov
lds
or
dec
ljmp
pop
jbe
std
xchg
xlat
test
push
push
pop
cmp
sbb
jbe
daa
push
mov
and
xchg
jo
int3
add
sub
xor
jbe
dec
fistpl
mov
or
cmc
pushl
push
mov
scas
mov
xor
mov
dec
push
cs
dec
or
add
sbb
ss
roll
cmp
shl
lea
or
push
push
mov
ljmp
sub
test
jg
aam
push
es
inc
orl
inc
mov
xor
ds
out
or
cmpsb
popf
mov
push
and
lds
inc
xor
push
es
insl
inc
movsl
fldl
rcr
pop
shlb
and
in
cmpsb
les
inc
mov
jno
out
hlt
cmp
or
push
push
and
push
dec
movsbl
mov
mov
call
add
push
and
add
mov
sub
mov
xor
add
lea
inc
inc
sub
mov
sub
inc
mov
or
mov
mov
inc
movzbl
xor
sub
mov
xor
dec
add
add
mov
imul
mov
sub
inc
test
je
add
mov
mov
sub
sub
sub
add
mov
mov
movswl
movswl
dec
add
mov
sub
add
repnz
add
add
sub
jmp
lea
inc
sub
sub
sub
mov
inc
add
sub
add
lea
imul
sub
sub
add
mov
xor
sub
pop
add
add
pop
jmp
push
lea
xor
movswl
sub
xor
add
mov
xor
push
inc
sub
push
sub
call
mov
movsbl
jmp
sub
sub
mov
and
add
mov
mov
mov
add
add
mov
add
add
xor
mov
push
add
add
push
add
add
mov
mov
inc
or
pop
sub
dec
pop
sub
mov
cmp
jne
inc
push
add
and
mov
sub
mov
push
add
sub
push
add
mov
xor
mov
xor
sub
xor
sub
sub
push
mov
mov
xor
movswl
mov
inc
movzbl
mov
mov
mov
movzbl
sub
xor
sub
add
sub
add
mov
movzbl
sub
sub
sub
add
mov
movzbl
inc
sub
add
mov
mov
lea
sub
add
cmp
jb
add
xor
add
mov
mov
inc
add
inc
inc
add
add
mov
mov
dec
inc
add
mov
dec
sub
cmp
jb
mov
xor
add
sub
inc
add
add
add
sub
sub
lea
xor
dec
dec
xor
xor
mov
pop
mov
test
jbe
dec
sub
sub
sub
mov
sub
push
movzbl
incl
add
add
pop
mov
sub
sub
push
add
mov
lea
and
movsbl
or
mov
add
add
movzbl
mov
add
sub
and
add
sub
mov
sub
mov
mov
add
mov
add
sub
pop
jmp
add
dec
mov
mov
movsbl
nop
jne
sub
mov
sub
sub
mov
dec
add
imul
add
mov
mov
add
sub
imul
mov
mov
mov
sub
test
jbe
dec
inc
add
mov
lea
sub
sub
add
mov
lea
push
add
movzbl
xor
sub
sub
pop
mov
xor
add
mov
dec
sub
movzbl
sub
mov
add
inc
and
movzbl
imul
mov
mov
mov
movzbl
sub
sub
mov
movsbl
mov
mov
mov
movzbl
sub
sub
add
imul
and
mov
mov
movzbl
add
xor
sub
movswl
inc
add
mov
inc
add
inc
mov
mov
dec
jne
dec
mov
inc
xor
sub
mov
pop
add
add
pop
sub
add
pop
mov
inc
add
add
mov
mov
add
jmp
push
push
inc
inc
push
push
inc
sub
push
lea
push
sub
sub
mov
add
sub
lea
add
or
movsbl
mov
add
push
mov
xor
add
push
sub
imul
push
add
mov
push
add
sub
imul
add
mov
add
call
add
add
or
add
mov
inc
movsbl
pop
jmp
push
sub
push
mov
mov
inc
je
mov
dec
movzbl
xor
mov
sub
mov
mov
mov
mov
inc
lea
inc
add
cmp
jne
mov
add
mov
add
inc
dec
mov
sub
mov
lea
jmp
mov
push
xor
movsbl
mov
sub
mov
test
je
lea
sub
and
movzwl
mov
mov
add
repnz
add
pop
jmp
movzbl
pop
add
mov
and
sub
inc
movswl
movb
mov
mov
inc
dec
and
dec
jne
inc
pop
sub
pop
ret
lea
inc
dec
inc
sub
sub
mov
mov
xor
sub
mov
and
mov
mov
mov
add
call
sub
sub
sub
mov
sub
movswl
add
add
sub
movswl
sub
sub
mov
sub
and
dec
call
mov
push
call
mov
pop
sub
inc
call
add
mov
mov
push
xor
dec
xor
sub
mov
add
and
sub
mov
mov
dec
add
dec
mov
call
mov
sub
pop
imul
movzwl
add
mov
pop
mov
pop
imul
dec
pop
inc
add
mov
pop
movzwl
pop
add
and
mov
sub
mov
pushl
xor
add
push
dec
jmp
add
push
mov
push
sub
push
sub
imul
push
add
mov
push
inc
sub
mov
add
sub
push
jmp
push
mov
add
add
sub
sub
mov
dec
add
xor
add
mov
sub
add
movzbl
mov
mov
sub
sub
add
pop
pop
jmp
push
call
add
add
mov
push
imul
movsbl
call
dec
mov
mov
pop
sub
movsbl
lea
add
sub
mov
test
je
and
movswl
or
add
mov
xor
lea
add
xor
test
je
mov
mov
add
sub
sub
mov
mov
int3
add
dec
add
sub
mov
sub
add
inc
mov
lea
inc
add
or
add
mov
movzwl
add
dec
sub
mov
add
imul
movzbl
sub
mov
sub
sub
inc
mov
mov
add
sub
add
mov
mov
movsbl
add
add
mov
mov
sub
add
sub
add
mov
dec
imul
inc
mov
mov
sub
sub
inc
add
call
mov
sub
xor
sub
mov
lea
add
movsbl
add
sub
mov
inc
add
dec
sub
mov
sub
add
add
mov
pop
mov
ret
inc
inc
xor
sub
lea
push
sub
inc
push
and
add
mov
jmp
push
std
xchg
sub
or
inc
jo
cmp
or
es
pop
dec
bound
test
mov
adc
pop
sbb
mov
cwtl
adc
and
inc
add
or
xchg
in
repnz
scas
push
push
mull
pop
xchg
pop
rorl
inc
jne
inc
xor
sahf
sbb
push
mov
outsb
addl
jae
or
push
insb
lock
jmp
out
std
add
jns
mov
rorb
pushf
shl
test
pushf
cmp
adc
push
fnstenv
ss
out
jmp
xor
and
lcall
fldenv
jns
and
adc
popf
mov
dec
jp
push
mov
shll
xor
add
mov
mov
cld
jp
cmp
inc
mov
cmp
outsl
stos
movsl
add
syscall
fnstsw
das
mov
sub
xchg
faddl
ret
int
mov
sbb
adc
outsl
inc
lock
jmp
jg
mov
sub
mov
cmpsb
dec
add
cmp
and
adc
sti
pop
fs
insb
push
adc
loop
lock
popa
inc
cmpsl
jmp
in
cmp
cmp
jne
test
dec
ljmp
mov
je
iret
mov
rcll
or
and
jg
icebp
push
adc
negb
sahf
and
mov
jecxz
mov
jo
cli
mov
stc
popf
lcall
fnstcw
pop
pop
add
in
sbbb
stc
data16
pusha
out
pushf
and
incl
aad
xchg
clc
jns
pop
xchg
sub
mov
pop
jb
jg
xchg
pusha
pop
mov
and
fsubr
sub
xlat
cwtl
enter
xchg
mov
dec
lods
pop
sti
push
fwait
test
iret
and
stos
cmp
cs
ja
test
mov
mov
dec
stos
call
in
dec
adc
ret
ffreep
pop
in
cmp
pop
add
movsl
fnsave
cmpsl
cwtl
pop
jmp
mov
clc
das
inc
pmuludq
fwait
mov
rcrl
adcb
jecxz
rorl
cltd
pop
lret
lcall
in
and
loopne
push
sbb
popa
xchg
in
fildl
data16
mov
test
ds
and
xchg
std
sub
xor
mov
popf
test
faddl
clc
inc
sub
std
xor
sbb
sub
push
cmp
movntq
and
lret
scas
mov
add
lcall
call
orb
xchg
mov
cltd
push
push
add
movsb
add
out
or
sub
xor
pop
sub
lock
xchg
pop
pop
sahf
mov
or
adc
inc
les
fidivrl
ret
jg
pop
dec
lret
mov
cmp
jae
add
mov
inc
sub
mov
pop
enter
sahf
sub
adcl
and
xor
shrl
mov
int3
popf
inc
push
mov
out
push
pop
mov
sub
pop
clc
xor
xor
mov
sarb
dec
andb
subb
subb
sub
adc
ljmp
jnp
insl
insl
bound
es
push
lock
sbb
xor
leave
and
and
cwtl
lret
cmp
xchg
testb
mov
ficomps
mov
sbb
adc
push
outsl
mov
lods
enter
adc
xor
cwtl
ret
pop
pusha
lahf
out
mov
or
mov
out
out
push
jmp
adc
xor
xor
cld
pop
cs
in
dec
sub
push
or
mov
incl
sbb
and
jbe
mov
incl
lods
push
mov
xchg
rcr
lcall
mov
insb
pop
xor
pushf
jmp
test
xchg
popa
pop
cltd
dec
out
push
inc
ss
roll
in
stos
outsb
sub
mov
mov
fcoms
xor
cs
cmc
mov
fidivrs
js
push
in
por
sbb
scas
in
shll
repnz
out
pusha
ja
push
stc
iret
add
aam
cmpsl
test
rcr
inc
in
sarl
cmp
bound
loope
adc
in
and
jb
ljmp
cmp
jne
mov
movsb
pop
fistl
mov
test
insl
mov
enter
jb
mov
dec
lcall
push
sbb
adc
adc
push
mov
xchg
mov
stos
inc
sub
pop
mov
push
out
or
arpl
xor
dec
icebp
jo
pop
aad
push
xor
xchg
out
sti
xchg
pop
pop
lods
pop
push
enter
jg
mov
xor
mov
xchg
mov
and
aas
pop
mov
push
fs
ret
ja
ror
lahf
outsl
pop
iret
daa
cmpsb
fiadds
pop
or
fsubs
ss
sti
test
jp
negb
cmp
cmp
ret
scas
mov
popa
add
sub
enter
cmp
mov
emms
sbb
jg
push
dec
dec
adc
mov
or
dec
sti
or
cmpb
lods
aaa
aad
mov
jl
in
and
nop
pop
ljmp
pop
fsubrl
leave
and
fwait
xor
xor
or
sbbl
adc
repnz
xchg
rorb
cmp
jge
push
push
jge
and
add
jle
mov
scas
inc
int
sarb
push
out
add
sub
push
add
sub
dec
push
js
pop
loop
mov
das
xchg
xor
ret
pop
add
mov
xor
inc
fisttps
mov
fisttps
pop
cwtl
cmpsl
cmpsl
adc
ja
xchg
xor
sbb
repz
push
sub
lret
aam
dec
and
fs
scas
mov
sbb
stc
sbb
pop
sub
push
aam
xchg
or
add
or
dec
stc
je
fstp
xchg
iret
inc
add
gs
adc
xchg
bound
insl
fisubrs
cmp
pop
ret
inc
or
cmp
shlb
sbb
cmp
lds
and
xchg
push
mov
sub
add
sbb
ss
insb
jl
xchg
fisubrl
test
filds
out
adc
xchg
push
sar
and
pop
add
cli
icebp
testl
rorl
sbb
scas
xchg
pop
fldcw
iret
dec
mov
inc
iret
fmulp
orl
xchg
fadds
mov
cwtl
cmp
out
or
push
dec
xchg
sub
mov
jns
jl
fldl
ja
or
and
and
sub
mov
pop
sub
add
daa
fucomi
dec
dec
cmpsb
shrl
mov
jns
push
std
lret
mov
pusha
fdivl
imul
repnz
sub
mov
das
add
jnp
or
adc
jg
push
ret
inc
test
jmp
mov
in
add
scas
sub
dec
in
stos
lock
dec
movsb
cltd
mov
mov
xor
pop
sahf
std
jnp
pushf
js
add
std
movsb
mov
xchg
mov
popf
addr16
popf
ljmp
dec
jecxz
push
cmp
add
sbb
mov
jg
lret
adc
cmp
in
int3
push
xor
leave
xor
fsubrs
fwait
dec
pop
jnp
shrl
lahf
mov
mov
lret
sti
push
arpl
pushf
sbb
jg
popf
xor
mov
cli
mov
dec
subl
test
ret
cmc
ds
rclb
sub
clc
popf
jnp
fwait
test
mov
sub
hlt
and
loope
bound
cmp
dec
pop
fs
sahf
jno
pop
nop
mov
pop
out
pop
in
jo
movsb
or
clc
sbb
pop
jmp
orb
xor
fistpll
xor
shl
jo
cmp
or
sub
dec
push
sbbb
lret
jno
push
xchg
mov
or
or
int3
sub
neg
in
push
fidivl
mov
push
ja
mov
add
repz
outsl
daa
fiadds
mov
and
adc
push
lret
cltd
mov
jg,pn
push
jecxz
pop
dec
add
decl
sub
mov
xchg
popf
imul
xor
les
lock
cli
dec
das
cld
xchg
mov
ja
mov
sbbb
aad
dec
cld
push
adc
inc
pop
mov
out
out
jl
push
mov
xor
idiv
cli
js,pn
pop
mov
cmp
or
pop
das
mov
push
pop
call
loopne
int
mov
sbbb
aas
lahf
sub
stos
jl
add
push
pushl
daa
inc
paddusw
in
divl
filds
sti
loopne
fsubl
cld
xor
pop
jp
inc
aas
dec
pop
sti
insb
sbb
and
dec
repz
sbb
push
gs
pusha
mov
inc
inc
mov
shll
add
inc
enter
imul
push
cld
and
jp
jno
cwtl
xor
inc
mov
push
and
lds
push
sbb
push
pop
adc
divl
shrb
ret
jl
out
pop
loope
lret
in
stos
mov
push
push
push
std
es
xchg
push
pop
inc
es
add
test
loop
insl
stos
movsb
shrl
jle
push
pop
lea
scas
fwait
aaa
hlt
mov
ds
popa
rorl
movsb
push
test
rcll
mov
mov
add
push
mov
mov
push
dec
xor
or
add
mov
pop
cmpsb
movsl
xor
cmc
movsb
xchg
add
cltd
pop
popf
xor
mov
and
mov
mov
lock
fwait
sub
test
out
mov
xor
inc
hlt
and
fwait
and
xor
add
insb
sbbl
adc
mov
mov
shll
add
jg
cmp
push
leave
inc
add
lea
sbb
shrb
lret
push
jne
popf
xchg
ja
sub
stos
jb
fcmovne
test
mov
stos
cmp
test
or
dec
pop
push
pop
loope,pt
decl
lods
push
sbb
or
xlat
sub
push
mov
les
test
pop
cmpsl
call
mov
mov
push
mov
mov
fs
movsl
and
xchg
scas
pop
jne
mov
jecxz
mov
and
imul
cmp
loopne
sbb
arpl
xchg
aad
ret
or
shrb
dec
add
adc
mov
or
mov
mov
xor
pop
xchg
push
xlat
std
or
inc
push
add
mov
lret
addr16
int3
data16
mov
mov
push
pusha
idivl
cmpsb
xlat
cs
or
xchg
test
call
pop
push
mov
pop
mov
xchg
mov
jl
lcall
int
faddp
xchg
les
mov
fsts
mov
or
mov
add
clc
pop
sub
fisttps
push
mov
movsl
adc
hlt
sbb
adc
jae
inc
mov
lock
dec
imul
sub
popa
adc
ljmp
stos
jl
push
or
lds
jp
cmp
add
jnp
push
sub
add
cmp
ds
aas
dec
mov
jecxz
mov
cld
jmp
pop
push
xchg
mov
cmp
mov
xchg
aad
push
enter
or
mov
inc
pop
push
lret
push
cli
sahf
mov
loop
mov
or
jno
and
in
sahf
shrl
sbb
fcoml
loopne
sub
stos
mov
adc
popf
loope
insb
push
rcll
or
xor
into
sub
sbb
mov
outsl
mov
ja
in
lods
mov
mov
repz
repz
and
jecxz
mov
push
push
jbe
inc
lret
or
bound
push
icebp
iret
divb
lock
jmp
dec
gs
mov
scas
pop
movsb
loop
pop
adc
insb
js
push
hlt
mov
idivb
jnp
sbb
mov
jle
xor
pusha
roll
or
idivl
mov
movl
adcl
repnz
fldcw
inc
arpl
and
sbb
psrld
iret
int3
lods
imul
pop
cs
push
xor
mov
loope
pop
sbb
dec
cli
lcall
jbe
popf
jb
mul
push
adc
call
mov
leave
rcrb
icebp
cmp
push
inc
jge
cmp
adc
rolb
lea
pop
inc
mov
xchg
pop
push
pop
lock
push
loope
shrl
mov
sbb
push
fldcw
jecxz
divl
push
inc
or
mov
sbb
aam
rcrb
inc
xchg
pop
lret
dec
js
inc
and
mov
cmp
test
push
pop
int3
frstor
lcall
cmp
xor
pop
and
xor
or
stos
fbld
addl
xor
out
and
sub
push
and
sbb
push
push
andb
shl
rcrl
inc
or
aas
das
xor
insl
mov
push
lahf
mov
adc
sbb
mov
mov
ss
repnz
jo
adc
int
ds
in
popf
dec
dec
pop
add
mov
pop
fistps
rol
test
test
xor
imul
jns
in
outsl
xor
in
ffreep
mov
mov
dec
int3
inc
sub
xchg
cmpb
out
lcall
jnp
push
dec
rorb
popf
push
cmp
adc
xchg
mov
stc
or
popl
xor
xor
inc
in
jb
mov
push
add
push
jle
out
inc
xchg
or
bound
mov
and
imul
dec
std
jle
push
jmp
mov
iret
movsl
stc
mov
mov
mov
and
insl
or
lock
std
xlat
aas
cwtl
jge
dec
int3
test
cmp
and
out
xchg
sbb
xchg
jnp
xchg
jbe
push
sub
hlt
stos
pusha
leave
mov
jbe
mov
jmp
jno
jle
adc
mov
mov
cmp
data16
mov
xchg
cmp
dec
scas
inc
adc
imul
mov
inc
aam
imul
inc
lods
jge
adc
xor
jns
adc
cmp
int3
daa
fnstenv
lds
cmpl
addl
and
repz
inc
gs
ficoml
xlat
stos
jb
inc
jae
push
mov
inc
test
imul
dec
and
cltd
jg
dec
sub
int
mov
inc
ret
mov
mov
xchg
mov
aaa
movsb
adc
add
adc
mov
jg
pop
notb
lea
movsb
lods
aaa
sbb
push
sbb
negl
sbb
mov
adcb
xor
jno
sbb
sahf
mov
jecxz
fdivrl
in
jnp
jbe
xchg
rcr
out
outsl
inc
xchg
jbe
xchg
pop
xchg
mov
jl
faddl
sub
fabs
sub
aam
xchg
int
lea
mov
jb
mov
jp
pop
hlt
jmp
push
in
sbbb
aas
pop
mov
jo
cmpsb
cmpsb
pop
ss
mov
out
jo
adc
and
cmp
ds
jnp
ja
sbb
sbb
int3
jbe
int3
pushf
insl
ret
mov
mov
dec
add
pop
fistpll
es
mov
rcrl
mov
push
imul
pop
inc
icebp
test
cmpsl
sbb
or
hlt
mov
arpl
fcmovnu
test
adc
fistpll
xor
adc
insb
xor
adc
dec
dec
or
popf
mov
sbb
scas
frndint
jne
xchg
test
imul
inc
jmp
push
cmp
lds
sbb
mov
pop
mov
adc
push
mov
out
dec
lds
sub
push
inc
mov
fisttps
add
dec
push
in
and
rcr
cli
into
xchg
cmc
xor
add
lret
xor
sub
mov
mov
xor
rcrl
pop
jp
pop
test
dec
jg
or
adc
into
xor
es
arpl
cs
mov
fidivs
jns
mov
insl
mov
adc
rcrl
xor
leave
ljmp
xchg
jnp
mov
pop
addb
movsl
into
lret
and
and
fisubl
mov
adc
mul
movsb
out
adc
mov
adc
sbb
xchg
mov
jmp
into
or
pop
mov
sbb
ljmp
cmp
sbb
add
sub
xorl
call
jp
stos
mov
in
test
mov
cli
and
xchg
add
xor
lahf
and
push
addr16
adc
lret
and
mov
leave
test
xor
aam
cmp
int
ret
subl
test
daa
cmpsl
dec
inc
mov
fcmovbe
movsb
xchg
pop
jecxz
in
mov
sub
mov
jp
add
inc
xor
lds
shrl
incb
push
loope
dec
in
dec
pushf
fcmovne
dec
jle
adc
add
mov
popf
stos
adc
out
int
dec
and
or
pop
or
jns
ret
pop
mov
daa
sbb
inc
or
das
repnz
add
inc
negb
popa
rclb
out
and
daa
push
cwtl
add
popa
repz
fldlg2
xor
and
icebp
and
repz
les
inc
pushf
add
rorb
or
rclb
lcall
rorb
xchg
aam
lret
cmc
mov
pop
cmpsb
sahf
loope
push
fs
loope
out
push
in
jo
push
mov
inc
pop
stc
inc
lahf
js
mov
inc
pop
push
cmp
push
ljmp
jecxz
mov
hlt
pop
mov
cmc
adc
mov
dec
cmp
test
sub
aaa
lods
adc
sub
bound
movsl
and
adc
mov
and
out
and
je
cmpsl
xchg
int
lods
nop
sub
inc
mov
mov
sbb
rorb
mov
dec
popw
fwait
mov
cltd
jae
mov
inc
jne
ja
xchg
pop
ret
in
pop
cld
out
mov
and
pusha
inc
cmp
push
sbbb
xchg
repnz
fldl
xchg
rcl
sub
sbb
in
ljmp
in
and
mov
repz
fstps
push
and
jo
cmc
or
jl
jl
dec
cmp
xchg
loope
mov
mov
mov
jo
std
pop
call
push
rclb
cld
in
xchg
xchg
dec
mov
lcall
into
push
mov
decl
push
popa
sbb
rol
dec
mov
pop
ja
mov
push
xchg
xchg
test
lret
add
jmp
xchg
sub
mov
or
push
bound
mov
xchg
pop
mov
sub
sahf
pop
mov
pusha
in
fistps
push
mov
jmp
std
cmp
dec
jnp
jo
dec
negb
cmp
xchg
adc
popf
enter
in
add
lods
inc
pusha
jg
sbb
stos
pushf
aaa
pop
dec
data16
mov
insl
mov
sarb
xchg
orb
leave
jns
pop
pop
push
mov
xchg
jae
sbb
ret
push
ja
mov
lods
dec
stos
dec
out
mov
ffree
les
outsb
dec
stos
aad
push
out
sub
xor
sbb
test
daa
sub
outsb
mov
xchg
push
pop
sbb
lea
movsb
xchg
fiadds
and
pop
int
xor
adc
insl
adc
xchg
lods
sti
xchg
pop
xorps
jecxz
cmpsb
filds
jg
loopne
inc
add
pop
fnstenv
sti
lea
push
xchg
sbb
aam
push
lods
adc
sub
movsl
mov
out
push
loopne
jecxz
xor
dec
insb
inc
jg
cmpsb
xchg
xchg
out
fldcw
test
mov
mov
icebp
or
adc
sbb
or
pop
push
in
mov
cwtl
cltd
pushf
jno
pop
adc
push
jae
xorl
movsb
loopne
mov
cmp
xor
pop
cmp
push
mov
mov
cli
sbb
test
push
ljmp
ds
push
cmpsl
xor
divps
das
nop
ja
test
cwtl
sbb
pusha
mov
adc
jmp
jge
mov
orb
lods
pop
xchg
shl
jg
mov
pop
aam
add
xchg
push
mov
shrl
aaa
daa
insb
jle
mov
fisttpll
inc
in
jo
call
adcb
lods
fnstsw
mov
or
leave
add
mov
xor
jb
jg
cmp
cmc
inc
adc
push
sbb
and
mov
gs
mov
repnz
fldl
xchg
pusha
push
xor
jnp
jae
iret
xchg
out
fidivrl
xchg
jns
xor
mov
sbb
dec
sti
sbb
ret
lds
std
out
mov
std
fdivp
sbb
sbb
repz
insl
lds
arpl
in
nop
lret
jle
jbe
mov
fnsave
jmp
pop
stos
add
mov
sub
icebp
adc
iret
push
push
inc
int
fimull
mov
pop
iret
push
xchg
mov
and
sbb
mov
xor
ja
test
test
test
es
stos
ret
jmp
sbb
push
outsb
sbb
outsl
push
leave
lods
xor
stos
xor
xor
pop
daa
dec
int3
inc
pop
jecxz
mov
jmp
or
jnp
in
daa
sub
and
mov
add
or
sahf
cmpsl
outsl
cmpsl
fwait
xchg
push
push
ret
sub
sub
into
mov
stc
psrld
or
xchg
lea
mov
movl
inc
out
daa
adc
imulb
mov
xchg
sbb
and
xchg
loope
and
dec
xchg
gs
mov
push
arpl
sbb
into
or
ljmp
sub
pop
cltd
ret
cmp
dec
push
mov
lds
and
sbb
add
pop
fisubs
inc
repnz
push
jne
loop
lock
xchg
cld
and
sub
or
or
into
mov
mov
or
mov
or
clc
sahf
lretw
subl
in
shrb
or
in
bound
jl
sub
data16
shr
mov
xor
or
dec
pop
cmpsb
xchg
popl
int3
adc
daa
sub
mov
cmp
out
fxch
cltd
shlb
xor
push
add
mov
les
jae
aas
mov
outsl
movsl
in
mov
test
lret
pop
adc
add
mov
out
inc
insl
es
push
mov
jmp
or
fadds
pop
xor
popf
sbb
mov
xor
push
and
sbb
cmp
xor
adc
test
sub
xchg
xchg
dec
cwtl
mov
mov
loope
sub
pop
in
cwtl
cwtl
out
add
lods
jnp
add
cmp
sarl
xchg
jae
xor
iret
jge
cmpsb
pop
in
adc
addb
int
fcmovnbe
ret
fucomip
mov
or
into
dec
mov
pop
sub
cmp
pop
aam
sti
cmp
push
pushf
and
dec
imul
jmp
cmpsb
mov
pushf
mov
jge
gs
out
daa
aaa
ds
sub
shrl
out
xchg
xchg
lock
jg
shl
sti
dec
ja
fcomps
mov
add
jp
mov
mov
or
jp
outsl
sub
add
imulb
push
out
lret
rcrl
es
sub
cmpsl
data16
roll
jp
jo
outsb
in
or
loop
hlt
pop
push
mov
cmp
mov
dec
out
cmp
pop
push
cmp
clc
xor
call
popf
dec
and
stos
mov
fs
cld
stos
mov
xor
loop
xchg
and
xchg
fldt
lods
push
int3
fisttpll
outsb
imul
insl
fbld
sbb
push
mov
sbb
sbb
xchg
jne
insl
xchg
out
fdivr
movl
not
stos
subb
leave
jno
not
fldcw
push
inc
adc
data16
leave
mov
cmpsb
out
xor
or
sbb
push
adc
push
and
push
fsubl
jo
loope
jo
mov
sbb
outsl
test
shrl
mov
mov
fwait
push
jns
negl
add
stc
or
cmc
mov
lock
fs
xchg
push
lea
jnp
inc
pop
mov
out
dec
sub
xor
aam
xor
jmp
sub
out
add
aam
lods
outsb
push
xchg
aam
and
mov
push
jo
data16
or
push
mov
push
mov
out
insl
pop
fwait
aam
in
pop
cli
mov
and
xchg
shll
dec
mov
xor
xchg
xor
imul
shlb
outsb
mov
cmc
jnp
jno
jmp
int3
sbb
in
or
pop
pop
aaa
and
mov
dec
stos
fucomip
stos
cmp
sbb
adc
loopne
fucomip
dec
sub
ljmp
pop
sub
add
insb
cmp
movsb
inc
jns
cwtl
mov
dec
dec
out
mov
add
mov
xchg
inc
ret
fs
js
xor
add
rcrb
les
mov
sub
sub
in
xor
sub
cmp
sbb
dec
mov
sub
mov
loope
das
dec
loop
rcll
insl
fcoml
jge
lods
jnp
add
addb
data16
sub
inc
jp
test
out
in
cmpsb
xchg
add
je
sbbb
ja
insl
aas
sub
in
add
push
mov
iret
repnz
fisubl
lock
and
je
add
lock
jmp
mov
test
test
fs
popf
aam
jns
rorb
cmc
test
mov
pop
test
std
cs
sti
inc
ljmp
or
imul
ret
in
clc
or
add
and
fnstcw
inc
mov
push
or
push
gs
ljmp
icebp
cmp
push
and
jl
shrb
add
push
mov
shlb
stos
jae
inc
push
hlt
es
xchg
mov
scas
push
push
mov
sbb
xchg
jmp
insl
out
sarb
push
adc
stos
add
xchg
sahf
es
mov
out
pop
clc
cmp
cld
std
jle
dec
repz
loopne
adc
shl
out
or
sti
sbb
mov
adc
xchg
add
out
add
lock
enter
mov
adc
mov
in
int
sbb
ljmp
cmp
pushf
lods
push
jle
push
sbb
movsb
je
or
sub
xlat
adc
cmc
jle
pushf
adc
rclb
gs
xor
cli
inc
daa
add
loop
mov
push
mov
stos
push
mov
mov
cltd
movsb
inc
mov
cld
mov
out
ja
ret
cmp
fs
movsl
pusha
sub
fadds
mov
cmp
or
sahf
and
or
leave
ficoml
test
xchg
pop
lahf
add
inc
jmp
in
test
mov
mov
push
outsb
insl
ljmp
dec
mov
out
jae
sub
mov
cmp
int
adc
and
je
cmp
lret
pop
xchg
adc
sub
cmp
inc
cld
mov
push
std
in
out
inc
sbb
ljmp
movsl
xor
sub
inc
jp
iret
xor
mov
int
lods
popf
push
xor
dec
push
emms
dec
cmp
pop
int3
stos
and
mov
mov
push
cwtl
roll
insl
rorb
push
jne
and
repnz
mov
inc
std
outsl
int
xor
nop
stc
ret
mov
leave
movl
adc
test
inc
sub
and
data16
cmp
inc
and
xor
jo,pn
repz
sahf
movsb
inc
or
lods
xchg
jbe
mov
out
subl
cmp
sbb
jp
push
inc
and
push
popa
or
stc
pop
dec
jb
cli
inc
lea
dec
jg
test
inc
xor
mov
jb
adc
or
in
stos
pop
pop
test
or
mov
pop
enter
adc
push
and
adc
in
mov
inc
or
dec
sub
in
xchg
arpl
xchg
cwtl
push
shll
cmp
call
push
ljmp
lahf
test
scas
fabs
loop
sub
lcall
push
out
push
in
les
jl
pop
sti
and
xchg
mov
setae
pop
mov
push
pop
int3
pop
jnp
test
and
adc
and
rorl
inc
cmp
imul
fs
push
dec
jle
aam
push
rcrb
inc
cmpsl
nop
jmp
xchg
adc
or
sbb
lock
push
out
mov
pop
jo
xchg
gs
mov
add
mov
int3
mov
mul
div
or
adc
jmp
es
fisttpl
mov
out
jle
jg
stos
inc
adc
lods
fldenv
je
lods
dec
test
sbbl
cmp
mov
and
xor
lock
and
lahf
add
cmp
sahf
xor
cld
xor
leave
pop
jnp
push
mov
pop
cmc
add
jmp
adcl
lods
sbb
sbb
xor
xor
dec
xchg
jg
outsb
mov
call
inc
xchg
inc
xchg
loopne
cmc
lret
in
pushf
jae
mov
xor
or
xor
jne
ja
ret
dec
andb
aas
stos
andb
lea
notl
sub
std
dec
dec
mov
mov
sub
jne
scas
scas
push
pop
cltd
mov
jecxz
mov
add
outsb
xorl
shrb
jmp
aaa
push
xor
add
sbb
pop
insl
pop
and
shr
loope
adc
lcall
pushf
pop
loopne
out
lods
xor
adc
inc
mov
lcall
fidivrs
sub
aas
push
mov
inc
sbb
sar
lds
lahf
ds
mov
add
inc
jl
outsl
add
dec
ror
lret
pusha
jp
or
mov
jae
test
int
insl
addl
jl
cvtdq2ps
cld
pop
push
inc
movsl
sbb
xor
cmpsl
cmp
mov
add
adcl
sbbb
mov
sub
pop
dec
cs
mov
cli
outsb
sub
shl
add
pop
inc
add
dec
mov
push
shlb
adc
pop
push
pop
mov
nop
movsb
repnz
divl
rolb
das
cld
adc
test
mov
movsb
mov
cmp
push
aaa
xchg
addr16
sbb
pop
lret
popf
into
pop
xchg
adc
clc
stc
cmp
stos
dec
shrb
xor
iret
cmpsb
push
sbb
sbb
push
les
lcall
test
adc
mov
filds
and
scas
or
and
mov
fistpll
cmp
ficomps
push
data16
in
xchg
ljmp
into
test
stc
addr16
jae
mov
ljmp
fisubs
xchg
inc
push
mov
les
stos
mov
dec
jns
ret
mov
scas
push
loopne
mov
inc
ret
xchg
mov
fwait
and
stos
adc
scas
pop
xlat
orl
ja
add
imull
popa
xor
xor
xor
insl
jno
jmp
mov
cmp
and
outsb
xchg
pop
fwait
add
fcoml
cmp
in
rolb
xchg
adc
cli
dec
les
adc
pop
xchg
sbb
add
mov
sahf
push
xor
into
jbe
lret
dec
stc
stc
movsb
rcl
cmc
sub
data16
fwait
mov
mov
out
cmpsl
iret
pop
sub
mov
mov
adc
mov
das
jge,pn
adc
popa
imul
dec
leave
cli
popf
pushf
mov
aaa
dec
xchg
add
xor
pop
adc
inc
cmp
jno
push
je
ja
jne
mov
mov
imul
dec
leave
ficomps
push
cwtl
fwait
daa
adc
outsb
mov
sub
js
daa
pusha
adc
xor
test
jnp
adc
push
insb
mov
push
add
shrl
pop
push
cmp
jle
xor
gs
xchg
leave
loop
mov
in
test
arpl
repnz
decl
mov
loop
adc
push
mov
xchg
pop
fiadds
inc
cwtl
and
jnp
cmp
rcll
ds
mov
fmuls
pop
jl
inc
mov
pop
add
mov
shl
jmp
or
shrl
mov
mov
rorl
adc
cmpl
in
xlat
mov
mov
cli
je
inc
add
testb
addr16
addb
cmp
jbe
push
iret
pop
ret
imul
xchg
ret
pop
push
dec
jmp
int3
fwait
xchg
sbb
sahf
mov
adc
sub
popf
mov
jecxz
and
ret
or
icebp
sahf
mov
xor
out
adc
cmpsb
dec
adc
iret
lock
inc
imul
int
pusha
push
les
mov
inc
scas
pop
mov
mov
jno
negl
imul
sub
jp
test
and
adc
inc
sahf
push
xchg
pop
out
setbe
mov
add
sub
mov
mov
xchg
push
inc
icebp
cmp
ja
sahf
lret
jb
popf
pop
and
xchg
mov
mov
jbe
cmp
les
cmpb
sahf
mov
enter
shll
mov
dec
int
clc
movsl
daa
push
repz
imul
lods
loopne
xchg
jg
out
dec
and
stc
out
mov
clc
xor
xchg
xor
int
or
cmp
cwtl
fs
movsl
int
cmpsl
lods
into
popa
je
imul
popf
out
dec
in
imul
add
sbb
sbb
pop
int
mov
push
cmp
int
filds
cmpsb
xchg
aad
mov
or
pop
push
xchg
iret
loopne
inc
sbb
push
mov
push
jle
mov
dec
or
adc
mov
pushf
pop
cmp
test
and
ret
into
loop
lock
pop
adc
popf
mov
mov
arpl
cmp
adc
shll
jnp
sbb
mov
bound
sbb
add
push
add
mull
push
xchg
adc
fidivrs
push
push
rclb
xchg
fsqrt
ror
loope
jbe
addr16
sarl
push
fwait
int3
cmpsb
pushf
jp
fucomi
mov
mov
enter
movsb
adcb
xchg
fldcw
jbe
add
cmp
hlt
pop
lcall
aas
jp
sub
clc
rcrl
pop
fs
mov
mov
sbb
mov
sbb
ficoms
push
push
fwait
sbb
negb
xor
fsubrs
and
push
cmp
sti
mov
inc
pushf
jmp
xchg
jmp
sub
fnstcw
lods
mov
push
jge
xor
cld
into
push
add
xlat
mov
or
repz
sub
cmp
mov
mov
out
jp
sbb
imul
test
orb
bound
ficoms
dec
mov
aaa
cmp
pop
out
dec
xor
in
dec
sub
fnstsw
sub
xchg
mov
stos
fcompl
dec
mov
mov
cmpsl
xchg
mov
out
sbb
data16
xchg
into
roll
call
jmp
push
ja
dec
push
jno
adc
cmpsb
ficomps
in
andl
and
lahf
push
fcompl
and
out
pop
dec
mov
sti
inc
mov
sahf
je
dec
lahf
pop
jl
loope
jmp
stos
add
in
add
flds
sbb
in
cmpsl
or
test
clc
aas
movsl
push
ret
cltd
std
mov
rcl
pop
and
mov
lcall
rorl
cmp
mov
mov
mov
dec
xchg
stos
xchg
movsb
into
sub
cmpl
out
fwait
jge
cmp
sarl
sbb
dec
mov
xlat
call
faddl
jns
xor
xchg
sub
and
mov
push
aaa
inc
sub
push
imul
ja
inc
dec
pop
ja
mov
xchg
dec
xchg
jp
and
and
dec
pop
rcrb
test
in
adc
sub
sbb
inc
sbb
out
ret
mov
inc
dec
inc
adc
push
or
sti
dec
pushf
out
int
jne
push
cmpsb
nop
out
ret
in
sbb
cmpsl
testb
fmull
dec
movsl
imul
into
adc
jl
cmpl
ret
fdiv
adc
scas
inc
add
popf
sbb
hlt
xor
ffree
rol
sbb
or
lods
dec
cmpl
icebp
sbb
cmp
ja
dec
sub
adc
cmpsl
mov
clc
adc
and
cs
inc
and
or
pop
xor
jg
clc
cmp
fildll
pop
ljmp
in
movsl
nop
pop
sub
lahf
xchg
fidivs
fsts
cmp
mov
out
aaa
inc
xchg
inc
mov
stc
jnp
mov
pop
xchg
jbe
lods
xchg
fdivl
lods
mov
add
mov
aas
sub
inc
lret
jns
dec
lahf
inc
and
mov
sub
xchg
gs
pushl
cli
adc
filds
sbb
add
pop
mov
ljmp
xor
loope
inc
fdivrl
cmp
pop
mov
movsb
or
jge
iret
roll
pushf
fstps
jne
xchg
imul
mov
push
adc
sub
fptan
sub
mov
sub
ds
popf
xor
pop
add
push
xchg
add
pop
lock
mov
mov
cmp
sbb
aam
sub
pop
and
rol
cltd
mov
push
fdivrs
xor
fsts
cmp
vpackuswb
mov
dec
pop
fistpll
leave
mov
push
ja
pushl
mov
pop
mov
or
jg
rcrl
lcall
sbb
sub
js
sbb
cltd
pop
out
xchg
mulb
push
pop
cmc
jge
loopne
adc
push
xchg
or
jb
pop
pop
push
je
pop
addr16
into
mov
adc
in
xlat
cmp
addb
mov
push
test
mov
jmp
mov
xchg
or
or
mov
pop
sbb
or
cmp
mov
lods
mov
jne
loop
out
imulb
mov
inc
cmpsb
pop
repnz
pop
test
shll
lret
adc
adcl
loopne
out
xchg
pop
lahf
push
out
or
cmp
nop
adc
cs
mov
jnp
pop
cld
out
push
pop
push
ja
loopne
push
orb
xchg
shlb
jo
outsb
cmpsl
fdiv
mov
adc
push
or
outsl
aaa
insb
inc
stc
inc
loop
mov
clc
push
pop
jne
hlt
lcall
lock
dec
pushf
cmc
sub
stos
repnz
ljmp
mov
je
cld
hlt
ljmp
dec
adc
jne
cmp
pop
xor
and
mov
xchg
jmp
into
int
repz
jne
mov
cmp
nop
mov
mov
cltd
dec
clc
jge
sbb
scas
mov
push
ds
dec
cld
xchg
mov
out
xchg
add
pusha
sub
mov
adc
scas
or
cmc
lea
push
aas
dec
cmp
push
std
cli
pop
push
xor
or
repnz
int
mov
adc
jp
call
stos
lds
clc
push
test
cmpsb
jp
ret
jl
lret
es
push
ds
shll
sub
fcomps
jae
or
ljmp
iret
movsb
sbb
xchg
mov
test
inc
lcall
xchg
imul
xlat
mov
cmpsl
andb
mov
pop
hlt
mov
dec
add
cli
lds
in
mov
mov
out
xchg
xor
cltd
outsl
inc
lret
sbb
das
inc
iret
mov
addr16
test
cli
dec
add
cmc
repnz
push
sub
jno
xchg
mov
sbb
unpckhps
mov
inc
jg
jnp
sub
push
mov
push
or
sar
orl
xchg
cli
cmpsb
xlat
dec
mov
inc
lock
adc
and
xlat
pop
add
cli
fdivrl
xchg
xor
push
into
and
fwait
pop
test
call
mov
roll
inc
movsl
push
xor
pop
cmp
test
jnp
fiadds
adc
loope
mov
xchg
or
mov
pop
loop
or
insl
jne
addr16
jp
fadd
adc
inc
and
or
shll
jne
and
jae
movsl
adc
add
push
dec
jg
ret
push
sub
adcl
push
inc
xchg
icebp
jl
sbb
pop
push
xlat
inc
mov
mov
add
pop
movsl
mov
jnp
mov
jge
lods
inc
mov
sar
cmp
dec
clc
xchg
sahf
mov
or
and
adc
sub
in
lahf
add
aad
jp
cmp
fidivs
mov
pushf
fstl
mov
aas
out
mov
pop
movsl
stos
fwait
add
pushf
ja
mov
add
lcall
sub
mov
test
pushf
cltd
outsb
cs
cs
outsl
icebp
xor
mov
data16
movsb
lcall
cld
mov
arpl
inc
sbbl
adc
cwtl
fld
cmp
fwait
pop
push
inc
jge
sbb
or
stos
rcll
ret
dec
test
sbb
mov
sbb
and
aam
stos
mov
sbb
sub
push
fsubrl
push
mov
jbe
cltd
aas
nop
cmpsb
outsl
mov
cmp
out
pop
jle
and
jbe
js
or
inc
out
ss
sbb
mov
cmpsb
mov
clc
jno
xrelease
shll
mov
gs
repnz
sbb
inc
mov
je
mov
jae
mov
loop
out
inc
inc
jo
out
je
mov
mov
aaa
pop
insl
jge
mov
and
pop
mov
adc
adc
push
sub
and
pop
jns
cmp
mov
push
roll
cmp
or
sub
or
pushf
popa
call
mov
int3
and
fxch
hlt
cld
rorb
push
or
pop
xor
sbb
adc
sub
sbb
pop
add
out
std
jg
xchg
mov
movb
stos
in
les
mov
insl
mov
out
jno
cmp
pop
pop
mov
ret
js
sub
push
leave
cmp
jae
loopne
lock
xor
cmpl
ds
xchg
inc
mov
das
inc
xchg
xchg
pop
xchg
cmpl
clc
add
sbb
sbb
lods
sbb
pop
out
jecxz
push
lods
mov
xor
in
add
jns
jge
jns
push
pop
or
jae
cli
arpl
shll
mov
scas
adc
repnz
pusha
sbb
jnp
and
sub
out
push
inc
ljmp
aas
xor
inc
inc
call
mov
ret
and
or
or
sub
aad
cmp
insl
mov
jae
es
xchg
imul
in
shlb
push
jl
xchg
mov
jp
mov
and
aad
xchg
pop
adc
mov
mov
add
mov
stc
dec
mov
jns
push
mov
adc
mov
xlat
jl
jmp
or
cltd
ja
add
add
cs
adc
arpl
cmp
loope
and
imul
mov
dec
jnp
cmp
jecxz
loope
nop
inc
mov
ja
jmp
bnd
jmp
stc
test
push
out
dec
xchg
inc
and
sbb
scas
and
push
sbb
or
jecxz
sbb
dec
jecxz
jo
mov
cld
out
mov
xchg
push
or
inc
jns
sub
mov
inc
mov
add
sbb
insl
pop
inc
push
cmpsl
ficompl
imul
jae
shl
xchg
pop
pop
mov
xchg
fwait
out
dec
ljmp
jne
xchg
lods
cld
mov
jge
popf
into
and
mov
adc
fs
push
leave
shll
test
mov
cmpsb
sti
out
sbb
popf
repz
out
push
dec
cmpsl
int3
mov
andb
adc
sbb
jae
cmp
push
addr16
xchg
mov
rcr
adc
jb
fscale
add
iret
mov
push
sbb
xor
sbb
mov
push
int3
fmul
cmp
fisubl
jae
lea
jge
enter
pop
popf
les
fnsave
pop
ret
out
repnz
lods
scas
xchg
mov
imul
lret
jp
hlt
bound
dec
fsubrs
mov
fmuls
rolb
pop
push
jb
sub
out
daa
aam
popf
xor
rcl
cs
xchg
jns
mov
jg
jb
mov
and
es
lods
ljmp
daa
inc
cmp
std
sub
jae
pop
xchg
fwait
mov
rcll
sub
lods
jge
sub
rcl
scas
insb
fwait
xchg
and
fs
in
or
cmp
loopne
movl
imul
xor
fldcw
or
mov
sahf
pop
shl
sbb
push
add
das
shrb
inc
push
mov
andl
lcall
adcl
jmp
sub
ds
in
pop
popf
in
fisttps
popf
dec
push
aas
gs
and
dec
pop
ds
fisubrl
std
cmpsl
js
jle
insl
es
repz
xor
fiaddl
push
and
addr16
cs
push
xor
push
int3
incl
inc
roll
sub
ljmp
pop
in
mov
push
inc
xchg
xor
xchg
addb
mov
xchg
sbb
lahf
pop
add
cwtl
sub
movsb
mov
insb
or
insb
add
test
xchg
faddl
stos
add
mov
mov
inc
adc
test
mov
movsl
push
mov
or
mov
or
scas
adc
add
inc
das
sarb
mov
mov
and
xor
imul
mov
xchg
shrb
nop
jne
cmp
fimuls
mov
xor
xchg
xor
gs
int
lods
mov
push
aad
es
imul
enter
sarb
jo
and
in
push
mov
inc
mov
mov
int
cmp
ficoml
sub
aad
sub
dec
add
out
insb
ret
out
jo
repz
mov
jbe
nop
sarb
shlb
loop
dec
mov
mov
repz
test
and
rcr
pop
cld
clc
inc
mov
pop
sbb
shlb
lds
cmpsl
pop
scas
dec
imull
imul
insb
and
jecxz
shll
sbb
cmc
mov
cmp
leave
sbb
dec
adc
jg
jp
loope
cs
rcll
mov
push
jge
idiv
xchg
pop
leave
jae
scas
push
shll
out
cmpsl
mov
and
leave
fistl
and
pop
loope
lea
xchg
add
dec
jnp
or
mov
adc
pop
and
daa
cs
sub
addr16
test
iret
mov
es
fistpl
inc
mov
scas
fadd
jle
jecxz
leave
out
lcall
cltd
adc
and
adc
repz
loopne
and
clc
clc
mov
adc
mov
pop
sbb
push
mov
pusha
sbbb
mov
jno
jae
aam
mov
insb
gs
xor
enter
and
push
pushf
cmp
sbb
sbbl
aaa
js
int
int3
repz
ror
and
lea
les
xor
push
shrb
rorl
cmp
cmp
addl
shlb
and
mov
jp
pop
adc
pop
ret
xlat
sub
imul
sbb
js
mov
int
push
leave
fdivrs
rcr
jmp
dec
fidivs
pop
lret
insl
ret
dec
jnp
idivb
sahf
pop
and
ja
or
inc
mov
inc
jo
xchg
xchg
pop
push
in
inc
es
js
mov
pop
fsubl
mov
jg
outsb
lcall
pop
jecxz
push
fnsave
push
dec
rcl
or
sahf
dec
sbb
jmp
sbb
popl
lahf
jecxz
jl
jmp
mov
mov
fildl
rolb
pop
and
adc
push
cmp
mov
fmull
nop
ret
daa
dec
xchg
test
adcb
xchg
push
lahf
in
and
cmp
testl
imul
ret
scas
in
into
arpl
push
push
mov
test
in
push
cld
inc
ret
sub
mov
scas
mov
mov
mov
scas
push
je
out
jmp
push
sub
jae
sbb
aas
mov
sub
jns
add
movsl
dec
cmp
and
jg
mov
sbb
into
addr16
shlb
outsb
adc
jno
pop
jae
jno
mov
adcb
das
xchg
out
push
push
cmp
jns
scas
and
cmpsl
inc
inc
in
shll
xchg
sbb
sahf
out
fwait
popa
test
inc
movsl
repnz
int3
jae
cs
ret
ss
jo
or
mov
ss
cmp
mov
pop
xchg
mov
pusha
xchg
adc
loopne
fs
mov
or
add
mov
insb
jmp
ud2
pop
repz
pop
fwait
imul
test
mov
pop
push
mov
test
and
xchg
test
adcb
sub
push
and
xchg
or
push
js
gs
jmp
xlat
loope
cmp
sub
mov
frstor
ret
mov
inc
xchg
jnp
adc
xlat
sarb
mov
outsl
das
inc
std
cwtl
mov
jecxz
ficoml
scas
inc
cs
add
int
lds
std
loope
inc
in
pop
and
int
xchg
adc
sti
xlat
es
ret
lcall
fimull
mov
inc
out
mov
sahf
rcll
lret
push
or
cmp
addr16
popf
mov
out
ljmp
neg
xchg
mov
sub
push
sbbl
pop
pop
mov
out
push
push
shl
sarb
popa
roll
push
lods
cmc
cmpsb
xor
mov
and
inc
clc
test
int
sub
cmp
pop
sahf
arpl
pop
add
fs
lret
mov
mov
int
cmp
push
es
aas
popa
mov
enter
jecxz
dec
cwtl
arpl
in
addr16
int3
out
rcrl
adc
insb
js
daa
aam
cld
into
and
push
dec
sbb
stos
jge
sub
inc
dec
or
cmp
cs
in
adc
das
sti
outsb
mov
nop
ffree
lcall
jae
adc
shll
push
loopne
pusha
in
push
add
xchg
loopne
ss
andb
mov
adcb
push
mov
mov
dec
outsb
jns
int3
sbb
pop
mov
cli
sbb
inc
ja
add
xchg
testb
push
fldl
push
insl
popf
out
test
aad
ja
and
jl
sub
loopne
jle
movsl
rorb
or
mov
mov
mov
fwait
jmp
cmpsb
out
sbb
rol
sbb
add
add
push
ret
std
push
shll
xor
push
sbb
lcall
test
adc
scas
sbb
cwtl
inc
pop
loopne
mov
movsb
jg
fs
jo
iret
clc
outsb
dec
push
std
adc
mov
or
test
mov
dec
rcrl
sub
jmp
pop
jge
cmp
stos
dec
pop
mov
cmp
xorb
xor
xchg
xor
in
aas
inc
rcrl
mov
mov
lds
pop
loopne
jns
and
or
adc
xchg
bound
pop
mov
stos
testb
cmp
inc
mov
call
or
cmp
and
jl
or
pop
sub
arpl
test
movsl
gs
addr16
test
subl
mov
push
pop
arpl
pop
dec
adc
xchg
hlt
adc
adcl
stos
mov
push
push
ret
std
imul
cs
jl
or
scas
mov
adc
int
add
stc
test
mov
mov
dec
xchg
into
in
xchg
inc
jl
cmc
stc
jg
push
outsl
ficomps
xchg
add
dec
mov
xor
cmp
lcall
stos
fidivl
xor
cltd
add
negb
mov
addl
or
adc
jo
xchg
jo
dec
std
jno
loope
rcll
ds
idiv
add
dec
xor
jnp
mov
inc
dec
imull
negl
xchg
add
mov
dec
cmp
out
stos
push
je,pt
gs
enter
int3
fstl
xchg
push
sahf
dec
lds
hlt
div
pop
sbb
call
sbb
pop
test
bound
cld
js
test
jge
movsl
push
or
test
mov
push
adc
bound
push
and
cwtl
xor
inc
inc
jo
push
or
movsl
bound
fstl
xor
push
pusha
xchg
lcall
and
sahf
xchg
inc
repnz
pop
push
scas
popa
mov
jle
or
sti
inc
clc
bound
mov
pop
andb
pop
imul
and
out
idiv
es
adc
add
mov
push
mov
cmpsb
lcall
inc
or
shrl
inc
dec
mov
test
out
out
pop
push
jnp
pop
aaa
jne
pusha
shlb
push
mov
xchg
dec
popa
mov
arpl
sbb
ljmp
arpl
sub
jl
test
aam
mov
repz
jbe
jge
dec
cvtpi2ps
jl
test
or
mov
orb
jg
add
scas
sar
pop
dec
lds
in
je
out
mov
bound
push
mov
jno
cmp
cltd
xchg
push
pop
pop
push
movsl
syscall
jmp
test
lods
std
cld
pop
rcrb
out
sbb
xor
jns
and
std
push
add
sbb
dec
jge
pop
xlat
push
inc
lahf
out
inc
and
xor
mov
adc
sbb
enter
xchg
cltd
adc
xchg
sti
divl
mov
fsts
lret
jbe
aam
lret
hlt
and
push
add
cmp
xchg
sti
dec
les
adc
jo
lods
jmp
mov
mov
xchg
insb
jo
sub
push
xchg
sub
mov
mov
outsb
push
lea
adc
mov
enter
out
pop
dec
rorl
pop
test
aad
and
pop
test
incb
or
dec
cmpsl
xchg
cmp
fadds
roll
int
ret
jb
inc
add
push
loope
xor
sbb
pusha
pop
mov
inc
lret
cmp
jne
mov
dec
pop
adc
push
lods
cltd
xor
in
outsb
inc
and
sbb
mov
sbb
cmp
sbb
push
imull
and
sub
mov
xor
out
adc
daa
imul
xchg
sbb
xor
mov
test
push
add
dec
jbe
add
add
fisubs
scas
adc
mov
or
aaa
jge
mov
ds
mov
and
inc
test
xchg
fstpl
test
fdivs
adc
pushl
out
xchg
push
movsb
mov
xor
test
or
imul
pop
pusha
loop
pop
mov
and
and
mov
xchg
add
add
mov
mov
pushf
in
shlb
aas
xchg
sti
dec
dec
cwtl
xor
testb
cmp
xlat
jno
aaa
lcall
imul
cmp
mov
dec
add
fiaddl
sub
aaa
adc
inc
dec
mov
push
mov
mov
out
fldcw
int
mov
out
xchg
lods
fisttpll
out
lahf
scas
pop
jp
jle
shll
inc
aam
dec
cmpsl
xor
into
jl
mov
faddl
cmp
add
and
fistpll
call
jecxz
scas
xchg
rcll
and
lcall
mov
lock
shll
pop
arpl
dec
loop
sub
pusha
stos
sbb
add
sbb
in
sbb
jecxz
ss
cmp
ret
pop
add
adc
dec
sarb
xchg
pop
test
jns
sbb
rorb
xchg
stos
stos
or
jp
out
ret
clc
adc
nop
icebp
add
sub
cmp
mov
add
mov
cmpl
inc
push
popfw
cmp
and
jle
mov
push
imul
dec
jl
cmp
push
fidivrl
cmp
scas
scas
pop
pop
push
inc
cli
movsl
lods
cltd
add
stos
inc
mov
add
lock
shl
mov
sub
push
fcoms
repz
mov
clc
jb
stc
xor
aam
mov
or
lock
jp
lea
test
xchg
dec
sbb
xchg
outsl
arpl
cmp
sbb
data16
popf
xchg
sbb
aam
jb
aaa
fldcw
das
push
adc
or
and
mov
or
sub
lock
test
push
mov
dec
dec
into
lret
xchg
cmp
and
pop
jne
xchg
negb
test
jo
dec
xor
psubd
adc
mov
fcomi
pop
dec
mull
xor
dec
lea
adc
or
popl
ss
icebp
fstl
stos
adc
call
fs
ljmp
jmp
call
icebp
jp
iret
inc
test
cmp
fldt
inc
iret
test
or
inc
xor
into
rolb
out
test
mov
xchg
sub
shrl
mov
fidivrs
stos
mov
push
cli
jl
pop
mov
popl
adc
into
inc
mov
out
add
ror
xchg
sbb
test
push
andb
jmp
lods
add
add
clc
aas
pop
inc
lahf
or
movsb
push
pop
into
cmp
bnd
mov
lock
inc
orb
pop
out
aaa
insb
int3
repz
loop
pusha
int
aam
inc
mov
das
fmuls
and
dec
inc
mov
mov
sub
mov
inc
das
jns
add
ficompl
push
lods
sub
repz
arpl
test
inc
jg
int3
mov
jno
pop
xchg
push
pop
outsb
dec
aas
rolb
movsl
dec
lret
and
pop
xor
mov
imul
mov
fwait
pushf
or
xchg
fistpll
in
out
scas
push
mov
mov
sbb
mov
ljmp
fiaddl
push
sub
cmp
dec
pushf
add
push
mov
out
adc
xchg
mov
push
mov
adc
push
pop
gs
ret
test
loope
dec
jecxz
scas
xchg
jnp
jmp
dec
cs
mov
add
stos
out
in
adc
daa
int3
mov
add
xor
sub
inc
mov
stos
push
pushf
fistps
jle
add
js
pop
or
xchg
fists
pop
and
arpl
jns
mov
in
sub
aad
xchg
movsb
xchg
arpl
inc
xchg
flds
insb
lret
adc
jle
scas
leave
cmpsl
aam
xchg
nop
push
pop
inc
clc
outsb
ljmp
add
cwtl
jne
inc
fpatan
out
mov
push
add
add
rcl
mov
lret
out
fimuls
mov
mov
pop
mov
xchg
mov
stos
aad
sti
sub
push
xchg
rcrl
out
fmull
and
fnsave
and
push
xchg
sbb
stos
pop
and
adc
sbb
mov
dec
movsl
dec
out
cmp
and
pop
sbb
push
mov
cmpsl
mov
xor
jge
and
addr16
sub
pop
mov
loop
outsb
leave
jo
and
mov
ds
out
xchg
cmp
clc
stc
sti
xlat
fidivrs
repz
xor
lcall
dec
inc
cmpsb
mov
ret
ret
cmp
clc
xchg
sbb
inc
inc
call
in
fidivrs
popf
mov
popa
in
icebp
int
enter
or
mov
xchg
outsb
adc
movsl
jmp
mov
cmc
aaa
icebp
inc
cmp
jae
mov
out
mov
js
faddl
stc
mov
stc
jae
fbstp
xchg
adc
bound
adc
loop
es
ror
dec
subl
mov
push
or
mov
push
adc
sbb
and
jmp
call
sbb
fdivs
and
jae
icebp
mov
jbe
shll
lods
andl
ds
icebp
jg
cwtl
sahf
das
mov
aas
imul
push
je
in
sbb
das
pop
sub
pop
fs
pop
push
push
scas
cmpsb
or
sub
mov
or
mov
jle
cld
js
sbb
jnp
push
jb
in
dec
outsl
pop
out
int3
mov
arpl
xlat
cltd
push
or
xorb
mov
xlat
fs
cld
pop
cld
adc
jnp
lahf
adc
jbe
or
cmp
mov
mov
dec
and
lret
imul
addr16
clc
jp
movsb
cmp
xor
ss
int3
rcrb
and
mov
and
jo
sub
arpl
adcl
mov
mov
insl
adc
imul
push
pop
xor
dec
movsl
insl
insl
mov
xchg
cmp
fmulp
fsubrp
arpl
cmp
xor
xchg
mov
clc
jmp
and
jl
jns
loopne
dec
scas
test
subb
js
xor
fdiv
adc
push
test
and
mulb
add
mov
mov
loopne
fisubrs
lret
mov
jecxz
jae
int3
or
fildl
dec
mov
sbb
scas
or
cmc
xorb
adc
lock
rcll
loope
or
lds
mov
mov
fiaddl
aad
das
sbb
or
xchg
and
imul
je
iret
mov
jno,pn
je
iret
push
pop
xchg
clts
sbbl
lcall
aam
in
and
mov
lods
imul
cmp
jp
adc
enter
xchg
repz
pop
pop
in
sarl
icebp
imul
push
cmp
repnz
fnstsw
lcall
mov
pop
out
lret
aad
shll
or
xchg
adc
addr16
subb
dec
jb
movsb
ss
imul
cmp
cmpsb
std
push
aaa
cld
fwait
ret
stc
imul
fs
loopne
pop
bound
js
je
adc
lods
popf
movsb
fs
mov
cmp
mov
ret
pop
lcall
add
in
into
push
cmp
inc
push
jge
cmc
fsubs
mov
push
stos
in
and
adc
and
lahf
push
mov
cmp
push
jae
ret
addr16
sub
jmp
and
daa
push
mov
cmp
push
pop
sbb
adc
xor
and
jg
or
ss
mov
sub
xchg
jl
ja
std
lods
jp
aad
enter
lahf
lret
das
mov
pop
add
cmpsl
out
roll
out
inc
hlt
cwtl
arpl
pop
push
dec
mov
out
repz
out
cld
pop
daa
leave
push
mov
or
testb
ret
daa
cmp
or
add
hlt
cwtl
mov
mov
jne
jbe
dec
and
es
jbe
ljmp
popf
jo
add
adc
imul
add
xchg
xchg
cmpl
push
sbbb
fs
aas
ss
jl
jae
dec
xchg
push
ret
lea
sbb
and
pop
mov
xchg
out
push
fwait
test
imul
and
jbe
mov
jecxz
push
insl
fnsave
pop
and
neg
scas
xlat
inc
jbe
fnstsw
jno
scas
testb
xor
clc
xor
mov
and
bound
pop
xchg
in
xchg
cmp
daa
add
fwait
subl
mov
lea
movsb
mov
jno
xor
imul
push
mov
inc
xor
in
je
test
cmp
std
cli
pusha
popa
lahf
icebp
lods
adc
es
ja
xorb
xchg
insb
es
sub
xor
jmp
sti
iret
jno
cmpl
loope
sti
lret
popl
shll
rcrb
int3
xchg
insl
movsl
gs
mov
mov
not
fistps
out
adc
xchg
pop
or
mov
ljmp
adc
movl
cmp
pop
push
adc
movsw
xchg
imul
mov
popf
int
adc
stc
mov
lea
fdivr
sub
pop
mov
xor
push
pushf
adc
add
mov
xchg
mov
adc
pushf
adc
push
repnz
jge
push
push
scas
add
jg
add
mov
mov
leave
je
fidivrl
add
std
gs
in
fisubrl
mov
mov
xor
daa
mov
cmp
cmc
fcoms
pop
inc
adc
flds
sarb
xlat
adc
cli
push
cmp
add
xor
jg
pop
push
mov
fucom
outsl
and
jmp
dec
push
loopne
pop
aam
xchg
dec
dec
mov
sbb
push
adc
push
cmpsb
xchg
lcall
jae
lods
adc
adc
das
inc
jbe
inc
push
fimull
jo
inc
inc
test
cltd
ja
fsubs
int3
int3
imul
inc
stos
sub
adc
jae
xchg
popa
mov
aas
into
outsl
mov
fidivrl
inc
sub
stc
or
push
add
dec
lahf
in
jg
pop
sbb
mov
pop
mov
add
sahf
enter
repnz
insb
xor
pusha
adc
mov
mov
sub
push
fisttps
and
add
add
jge
pushw
sub
xor
pop
mov
mov
mov
out
es
jge
data16
jbe
pop
mov
mov
cmp
cmpsb
iret
mov
fimuls
out
les
test
and
lahf
in
mov
sbb
adcl
popa
mov
jle
push
adc
test
subb
es
pop
scas
stc
sub
sub
stos
push
jmp
in
sbb
xchg
shl
imul
cld
std
popa
popf
mov
cltd
cmp
test
dec
aam
dec
cs
inc
int3
inc
jp
dec
jb
pusha
jb
sub
mov
loopne
and
or
popf
hlt
fdivrs
aam
dec
or
sbb
sbb
inc
sti
cmp
sbb
es
mov
ja
imul
idivl
fwait
inc
push
sbb
stos
add
int
lahf
mov
cmpl
jae
rcr
repnz
jae
jno
nop
scas
lret
outsl
scas
dec
mov
je
mov
push
mul
cmp
inc
sbb
add
mov
adc
int3
mov
adc
nop
test
test
loop
subl
or
add
int3
lods
pop
in
xor
inc
push
xchg
cmp
mov
mov
lret
sub
mov
ret
add
daa
xchg
imul
imul
push
adc
or
sbb
or
loopne
cmpsb
xor
mov
jecxz
inc
mov
push
jmp
inc
fsubrs
and
or
decl
cmp
fs
jle
scas
adc
bound
push
mov
sub
ljmp
mov
inc
sti
mov
xchg
inc
fbstp
cmpsb
or
in
in
andl
mov
scas
xchg
insb
mov
mov
int
dec
inc
lcall
adc
or
jno
outsl
in
es
shl
pop
adc
loope
dec
dec
mov
inc
push
roll
xlat
sub
ljmp
popa
in
scas
pop
jne
jg
sub
mov
rcl
cmc
or
or
push
shrb
jo
outsb
iret
xchg
lcall
jg
clc
inc
mov
movsl
or
cmpsl
iret
or
adcl
jp
xor
int
in
sarl
scas
sti
je
push
pop
data16
add
sbb
insl
enter
mov
sub
sub
arpl
in
jg
add
push
sub
or
in
xchg
fbstp
test
jne
add
adc
push
in
mov
pop
mov
jle
int
jle
xchg
inc
mov
or
dec
js
and
pop
arpl
aad
pop
aam
xchg
or
in
sarb
adc
jp
xlat
xchg
inc
clc
push
out
ljmp
cs
in
sbbl
decb
lods
insb
call
imul
lds
cli
jbe
mov
std
packsswb
cltd
push
stos
pop
es
pop
sbb
pop
in
push
data16
fildl
mov
mov
dec
iret
cmp
cld
cmp
xchg
jmp
and
pop
jge
int3
mov
fwait
push
mov
js
cld
fdivs
jne
gs
icebp
jb
fnsave
inc
pop
aas
popf
jge
push
mov
testb
pusha
test
jg
adc
xchg
call
addb
and
shrb
lahf
mov
das
mov
repz
and
mov
sub
sahf
rcrb
mov
sbb
sub
pop
sub
pop
push
cltd
push
movl
shlb
imull
pusha
fldt
cmp
fnstsw
ja
scas
jl
imul
xchg
jl
pushf
fst
mov
adc
movsb
arpl
divb
in
fcmovu
lods
pop
mov
lods
pop
inc
repnz
mov
mov
sub
aas
out
inc
mov
add
scas
js
mov
sti
js
rclb
in
mov
cmp
les
dec
and
inc
imul
inc
jmp
addr16
mov
push
push
insb
imul
cmp
std
pusha
dec
bound
repnz
cmpsl
xor
loopne
popf
es
cmp
stos
jg
popa
rcr
scas
pusha
std
jle
mov
dec
test
int
mov
stc
in
shl
je
pop
add
xchg
push
test
push
mov
mov
stc
cmp
nop
mov
push
repnz
shrl
cli
cmp
jo
fldl
repz
iret
dec
stos
xchg
xchg
arpl
ficoml
adc
add
int3
xor
xchg
bound
sbb
addr16
or
jo
dec
int3
jns
lret
or
xor
fs
imul
and
test
inc
int3
test
mov
dec
arpl
add
cmp
lea
jae
sbb
js
dec
adc
bound
cld
pop
test
rcr
in
imul
mov
je
jmp
pop
push
sub
bound
mov
mov
mov
sub
lea
sbb
fidivs
cmc
out
mov
jp
inc
lahf
lea
cs
test
xchg
out
push
fwait
ljmp
shrb
jbe
xchg
imul
orl
cmpsl
ss
push
mov
xor
or
jecxz
push
jb
push
repz
stc
mov
cmp
iret
out
popf
cltd
icebp
ret
jns
pop
add
dec
aaa
adc
cmpsl
jns
dec
sub
xchg
iret
shlb
mov
jmp
enter
adc
lods
add
xchg
and
cmp
jge
push
jl
sub
mov
cmp
in
jo
testb
out
lea
sbb
out
shr
mov
push
xchg
mov
inc
xor
in
push
dec
cmp
cmpsb
mov
push
or
test
fwait
popa
ss
or
les
jne
lods
sub
aam
or
pop
ret
clc
adc
adcb
fdivl
add
ss
aam
jle
call
push
and
pop
adc
xorb
xchg
outsl
test
cmp
mov
xchg
imul
add
jp
add
or
pop
jle
mov
dec
and
dec
clc
jge
stos
add
cmpsb
test
gs
push
test
popa
imull
fcoml
jle,pn
or
outsb
jae
and
sub
rclb
repnz
xchg
lea
push
inc
imul
xchg
jnp
orl
pushf
cmpsb
or
sbb
jo
fldt
dec
dec
sub
mov
int3
jae
test
mov
pushf
dec
enter
dec
fsubs
int
mov
cmpsb
sbb
hlt
repnz
jo
dec
cmp
cmp
adc
cmp
dec
adc
clc
push
mov
test
jns
cmc
cs
aas
pop
mov
ljmp
push
notl
popf
adc
in
xchg
jns
insl
pop
lods
je
stos
or
mov
mov
scas
mov
xor
mov
inc
jae
push
jecxz
dec
loop
aam
add
push
xchg
jmp
outsb
cmp
popa
xchg
adcb
popf
mov
sbb
es
enter
call
mov
ljmp
adc
loope
test
iret
aas
hlt
jbe
cmpsl
inc
lods
pop
add
aaa
movsl
cmp
xchg
not
push
pop
add
pusha
insb
push
decb
mov
inc
push
jne
test
xor
cmovae
sti
int3
mov
sbb
rcl
dec
insb
pop
add
inc
inc
outsl
jmp
pushf
in
xchg
aas
cltd
mov
mov
orb
sbb
icebp
test
shlw
inc
cs
dec
nop
mov
ret
jno
icebp
pop
bound
add
outsl
rcll
fbld
repz
mov
jg
sti
idivb
mov
lahf
rorb
push
sub
dec
daa
xchg
and
inc
dec
fs
push
pusha
and
pop
inc
inc
lret
jno
popa
lods
daa
addl
sub
lea
negb
scas
loopne
add
xor
sarl
dec
or
or
adc
call
lods
add
jle
or
and
bound
mov
rcl
shlb
es
loop
push
aam
mull
xchg
and
push
mov
cli
es
int3
sbb
xchg
sub
push
out
adc
adc
out
jge
xor
ss
dec
push
test
pop
mov
push
lahf
inc
imul
lcall
gs
mov
xchg
pop
xchg
repnz
adc
or
xlat
sahf
lcall
jg
xor
fcoms
xor
shl
push
cmp
jge
data16
jnp
cmpsl
lds
int3
ja
xchg
add
pop
lcall
das
fucomip
jl
out
movsl
or
push
lret
mov
popa
adc
ljmp
cmp
outsb
and
mov
jo
rcll
cmp
leave
stos
xchg
test
add
push
fimull
arpl
gs
in
inc
and
xchg
push
cmp
adc
ret
aad
inc
mov
pop
pop
fistl
stos
ljmp
jae
movsl
dec
stc
es
negl
js
loopne
cmp
jg
enter
test
sar
popf
pushf
lret
out
dec
jno
pop
lahf
pop
push
jg
xchg
fwait
mov
std
rol
pop
enter
popf
repz
inc
jmp
js
or
jae
xorl
out
cld
hlt
lds
mov
xor
loope
and
and
adc
ds
mov
pop
popf
jecxz
sarb
mov
inc
inc
dec
mov
and
loopne
inc
adc
mov
mov
out
cmp
cmc
movsl
popf
scas
cwtl
outsl
inc
xchg
decl
ja
ret
and
dec
icebp
imulb
jge
pop
dec
mov
idiv
inc
test
test
push
cld
imul
fdivrs
xchg
xchg
repz
dec
mov
and
xchg
aas
gs
rcrl
std
mov
sti
shlb
test
sbb
outsl
sub
dec
daa
pop
int3
xchg
int
sub
lock
inc
or
std
xorl
add
mov
dec
cli
gs
subb
ljmp
leave
dec
loopne
cmp
aaa
clc
push
adc
xor
inc
push
bound
mov
push
cmp
mov
add
and
in
cmp
gs
push
or
cmc
aas
ja
jecxz
loope
scas
clc
jl
lahf
test
jbe
out
imul
dec
xchg
sbb
inc
xchg
mov
rolb
outsl
mov
add
mov
inc
push
test
pop
arpl
jle
cli
xor
imul
mov
mov
aas
repnz
lods
pop
xor
ss
or
ds
xchg
das
add
mulb
lret
std
dec
push
xchg
xor
push
rcr
dec
sub
xchg
bound
pop
push
out
iret
les
push
jb
repnz
in
leave
inc
loop
js
jnp
push
or
in
sti
pop
jb
int
push
data16
sub
xchg
jge
dec
call
add
xor
ret
adc
hlt
add
in
pop
push
sbb
push
daa
dec
mov
and
adc
pushf
push
das
dec
xchg
sub
jne,pn
cmc
ja
fsubrp
mov
scas
fucomi
cmp
dec
jns
lahf
cmp
inc
adc
roll
inc
mov
aas
xlat
xorb
popl
mov
sti
mov
in
pop
jge
movsl
push
into
fadds
insb
and
notl
or
push
lret
jg
lret
out
and
dec
dec
sub
dec
jmp
cmp
xchg
lret
ret
cmp
test
sub
pop
punpckhbw
or
adc
fnstcw
les
pop
insb
test
hlt
push
daa
xor
mov
add
adc
loope
xchg
mov
bound
movsb
and
push
and
cltd
jl
xchg
xchg
mov
fidivs
sub
xchg
xchg
and
jo
orl
test
mov
cmp
inc
imul
sub
jp
mov
movl
inc
dec
in
mov
add
push
lahf
mov
pop
nop
ds
xor
lea
mov
fwait
or
and
pop
ret
mov
jno
pushf
cwtl
pop
mov
lcall
dec
lcall
es
loop
iret
dec
ficoml
sub
sbb
mov
cmpsb
mov
jl
sbb
mov
insl
cld
test
divl
mov
dec
popf
in
dec
and
sbbl
dec
xchg
sbb
lcall
xchg
jb
fstpt
stc
xchg
pop
jg
fldenv
scas
xor
scas
and
mov
sbb
js
add
sub
into
xchg
xchg
mov
sub
inc
sub
lods
aam
mov
inc
ror
push
pop
pop
cli
mov
popw
sbb
mov
jo
mov
in
jp
insl
addl
sbbb
xchg
test
outsl
xorb
and
shrb
mov
nop
rcl
adc
imul
out
popa
repnz
dec
test
leave
xchg
push
loope
push
loopne
jne
popa
aas
inc
cli
int3
adc
mov
dec
push
mov
fisubrl
iret
mov
sbb
xorb
mov
xor
push
das
arpl
cmpl
pop
and
loope
sarb
jmp
ffreep
cs
push
sti
sbb
jecxz
inc
sub
pusha
adc
fs
cmp
sub
aam
jb
fisubs
sbb
dec
repnz
sub
shr
sub
mov
les
or
int
nop
mov
lahf
sub
sahf
inc
lods
push
js
fildll
xchg
leave
and
out
push
mov
and
pop
add
lock
or
push
xchg
xchg
arpl
ret
scas
sub
dec
mov
mov
gs
inc
stos
pusha
fdiv
sub
out
mov
sub
das
data16
xchg
loopne
push
xchg
cmp
sbb
sub
or
jp
iret
xchg
scas
inc
outsl
cmp
cmp
daa
mov
shlb
outsl
fdivrp
pop
xor
jg
xor
cld
btc
test
rorb
cwtl
outsb
ljmp
jbe
mov
mov
jl
test
pop
pushf
cmp
in
mov
outsl
jno
sbb
xor
or
icebp
jbe
out
or
loop
rorb
mov
dec
jae
jl
hlt
out
dec
jo
scas
cmp
cltd
ds
imul
paddb
jmp
cmp
xor
inc
and
pop
lahf
xor
sarb
lcall
mov
xlat
sub
xlat
mov
orl
lods
mov
sti
repnz
mov
lds
aad
scas
cmp
xor
sbb
inc
inc
pop
sbb
push
mov
incl
inc
repnz
aaa
lea
add
scas
pushf
popf
and
mov
push
add
dec
push
mov
xchg
adc
inc
sbb
push
pop
inc
push
adc
dec
cmpsl
pushf
sbb
jl
movsb
mov
jp
out
jmp
lods
and
insl
mov
cld
mov
fs
add
lret
test
pop
sub
pop
jae
cmp
and
xchg
add
mov
adc
xlat
and
inc
shll
inc
adc
stc
pop
icebp
int3
jl
push
inc
xchg
push
daa
add
lret
outsb
out
je
jno
mov
xor
ret
lea
popa
cmpsl
sbb
push
fldcw
out
repz
popf
sbb
fwait
add
mov
mov
mov
mov
mov
aaa
push
adc
mov
sti
xchg
test
dec
sub
lret
data16
push
xlat
push
inc
fdivrl
movhps
mov
jmp
pop
sbb
mov
test
inc
jmp
mov
shll
xchg
daa
sbb
inc
cld
sbb
jmp
negb
sbb
xor
xchg
sarb
fcmovbe
lods
test
ret
hlt
test
mov
xor
sub
repz
push
dec
int3
shrl
mov
and
into
test
cltd
inc
in
fimuls
and
lcall
fs
cmp
cmpsb
lds
push
lea
inc
add
scas
std
pop
pop
enter
and
lock
pop
and
add
add
jns
mov
and
dec
in
inc
scas
int3
and
mov
and
sbbl
test
push
cmp
mov
inc
mov
notl
imul
shlb
stos
in
sub
and
loopne
into
cmc
cmp
les
call
xchg
push
sub
pop
sbb
icebp
sbbl
nop
mov
mov
gs
int3
xlat
sti
cmc
dec
mov
fmull
leave
add
mov
jge
pop
mov
pop
mov
jp
mov
add
lret
cmp
push
arpl
lret
xor
inc
mov
rorb
into
jns
fucomip
add
add
scas
xor
push
hlt
addr16
xchg
daa
pusha
movsl
cmp
addr16
movsb
cld
jmp
xchg
popa
in
movq
sbb
jge
into
and
hlt
insl
jp
xchg
popf
add
xchg
in
cltd
aaa
aaa
decl
push
out
xor
pop
or
fwait
pop
bound
push
dec
jecxz
add
xlat
or
int3
cmovl
mov
mov
inc
mov
and
cmp
push
es
mov
xchg
data16
inc
nop
and
dec
bnd
dec
clc
push
jnp
dec
xor
sbb
push
dec
fadds
add
mov
sbb
dec
mov
pop
and
jp
cmp
xchg
pop
arpl
int3
sub
lret
scas
stc
fs
cmpl
loopne
inc
nop
jae
pop
aad
dec
sti
scas
xchg
aas
or
cmp
sbb
inc
dec
sbbl
in
fcomi
jb
inc
stc
je
and
pop
xchg
cs
icebp
cs
jb
and
icebp
push
mov
mov
pop
lret
add
xchg
ss
out
mov
movsl
iret
xor
cmp
xchg
fs
xchg
clc
aaa
nop
lcall
or
sub
jno
in
mov
and
mov
xchg
or
imul
xchg
xor
push
testb
pop
out
and
outsl
fistpll
pop
add
bound
mull
negb
lret
mov
xchg
sub
pusha
lret
es
cltd
adc
inc
jo
xchg
loop
or
iret
aad
icebp
jns
cmp
in
rorb
mov
std
mov
mov
ret
add
jae
insl
jmp
and
fst
mov
fwait
cs
fisubrl
stc
lods
dec
test
sbb
sub
sti
inc
jl
jg
shll
mov
mov
adc
dec
cmp
andb
mov
push
push
xchg
xchg
and
and
xlat
lock
ljmp
cmpsl
mov
push
out
mov
inc
sti
les
xchg
push
mov
lods
dec
dec
testl
leave
enter
xor
loopne
cmp
repnz
cmc
or
pusha
lock
pop
push
jo
and
imul
fwait
dec
movsl
rorl
jbe
pop
shll
in
mov
call
sbb
test
scas
fwait
mov
stos
push
push
inc
or
mov
stc
mov
add
jae
xor
ds
cmpsl
pop
inc
aad
pusha
push
push
ds
in
cmc
jl
pop
leave
push
sbb
pusha
xchg
push
pushf
fwait
push
lahf
xchg
cmp
out
cmp
mov
pushf
cs
rol
or
in
xor
hlt
add
inc
lds
jae
inc
pop
mov
std
loop
arpl
and
test
jp
push
outsb
pop
mov
test
dec
iret
mov
xchg
imul
jle
dec
cmp
gs
bnd
xor
jecxz
fstpl
sub
or
jl
sub
sub
jge
aas
cmp
inc
cmp
fildl
or
xchg
cmp
dec
xchg
dec
add
pop
dec
pop
aad
repz
cld
gs
stc
jno
in
repz
loopne
outsb
js
fnstsw
das
cmp
xor
xor
pop
cmp
aad
sbb
mov
add
push
daa
stos
jo
rolb
fwait
push
jle
mov
sub
rcll
loope
inc
test
push
lcall
sub
pop
and
mov
aas
jmp
outsb
dec
les
cltd
lock
pusha
out
mov
iret
addr16
mov
inc
js
cs
push
add
es
xor
push
idivl
enter
dec
movl
mov
pop
sbb
scas
insb
mov
out
mov
rcll
pop
mov
outsl
test
cli
and
fcoml
jbe
pop
xchg
push
pop
mov
decb
mov
loopne
addr16
in
loop
sbbl
lods
dec
cmpl
or
and
cmp
movsb
mov
dec
push
mov
popa
mov
add
adc
les
mov
and
shll
lods
std
aad
dec
repnz
adc
addr16
xchg
jecxz
pusha
add
mov
ja
test
in
hlt
cld
inc
and
dec
pop
adc
and
ss
aam
lahf
sub
push
inc
notl
adcl
mov
movsb
nop
xchg
dec
testb
pop
cltd
into
fimuls
mov
cmp
call
pop
testb
xor
and
std
adc
xor
fs
xor
pop
xor
push
and
pusha
pop
faddl
imul
push
sti
and
movsl
add
push
xchg
and
inc
out
in
test
mov
push
jge
fs
pop
push
fwait
jmp
mov
jns
loope
ret
xchg
pop
adc
shll
or
cli
push
sbb
jae
sarl
in
and
lret
push
ficoms
les
inc
dec
inc
push
sub
sbb
xchg
mov
stc
or
jno
or
repz
sub
sbb
cmp
lret
icebp
repnz
mov
pop
cmp
bound
sbb
rcrb
popf
dec
clc
or
movsl
mov
or
xlat
call
xor
repz
andb
scas
stos
mov
xchg
adc
in
inc
push
rolb
fimull
dec
aaa
movsl
fildl
mov
movsb
mov
adc
dec
fs
or
lret
lahf
rcr
mov
inc
jg
lahf
add
hlt
pop
adc
test
cli
jae
pop
mov
or
push
cwtl
dec
add
sub
test
test
icebp
shrb
pop
push
pop
push
sbb
push
test
ds
mov
int
mov
mov
xor
pop
lea
fcompl
push
mov
dec
shlb
ds
aaa
inc
pusha
mov
data16
and
cmp
packssdw
div
push
push
scas
mov
imul
jae
sbbb
jae
xlat
leave
lahf
or
cwtl
xchg
test
cmp
inc
lods
or
addr16
mov
jns
push
push
sub
call
mov
loopne
test
test
pop
cmp
repnz
xchg
mov
xchg
repnz
cmp
repnz
xlat
pop
pop
call
push
sub
jle
cmp
dec
mov
adcl
sub
mov
cwtl
cmp
jbe
sub
loop
xorl
notl
std
bound
inc
lret
cmpb
dec
out
jg
hlt
sbb
pop
mov
push
pop
sbb
mov
fisubrl
aaa
inc
mov
adc
das
gs
mov
inc
in
xorb
std
test
mov
lcall
ret
and
push
inc
ret
jno
lods
pop
mov
test
push
aam
testb
sbb
mov
aad
sub
das
fnsave
add
add
cmc
pusha
lods
test
scas
inc
incl
inc
inc
movsb
insl
and
lods
and
mov
iret
pop
out
sbb
jne
sbb
mov
inc
push
inc
ficompl
imul
fs
cmp
mov
shlb
mov
nop
push
mov
mov
mov
inc
fsubl
ret
repnz
imul
dec
insb
rolb
add
and
jle
xchg
ss
imul
xchg
test
sbb
jne
inc
mov
je
cli
leave
in
roll
and
push
cmc
pop
sbb
inc
dec
mov
nop
push
lods
and
xor
push
jb
add
inc
or
clc
jg
sub
stos
and
movb
mov
xlat
andb
in
pop
test
jo
jns
lcall
lcall
inc
repz
js
add
enter
xchg
dec
rolb
outsl
cwtl
test
rcrb
xchg
jecxz
jns
lret
pop
cwtl
xor
enter
ds
adc
inc
cmp
scas
out
push
icebp
mov
fstpt
xchg
jo
mov
push
je
or
clc
xor
pop
inc
pop
rorl
les
imul
xlat
arpl
loope
add
cmpsl
dec
xor
jge
pushf
mov
adc
rcpps
fwait
testb
je
jg
out
cmp
lods
cmc
pop
int3
out
mov
mov
mov
cmp
setl
hlt
adc
lcall
dec
cld
stos
mov
adc
dec
and
add
fwait
pop
sarl
daa
js
movsl
out
and
in
cli
cmp
add
arpl
std
lahf
jge
adc
rcr
jbe
cmp
gs
jae
imul
icebp
mov
push
xchg
imul
dec
lods
push
add
mov
cwtd
adc
ret
add
add
inc
lret
stos
enter
shl
mov
orb
es
dec
int3
lcall
rclb
js
daa
push
push
fsubrs
add
outsb
mov
test
cmp
inc
sahf
sti
push
cmp
push
mov
jecxz
cwtl
push
push
push
pop
lea
push
xchg
mov
xchg
int3
jnp
or
mov
shlb
enter
and
into
mov
js
cmpsl
push
mov
insb
mov
pushf
sbb
sub
sub
xchg
pushf
fwait
icebp
fbld
or
pop
dec
mov
pop
int3
call
lret
outsl
gs
cmc
cmc
cs
mov
addb
push
push
loop
cld
ds
std
adc
loope
jecxz
enter
pop
xor
xor
push
cli
lds
ret
and
imul
aaa
dec
cmp
dec
das
cs
and
add
lds
outsl
icebp
push
adc
jno
cmc
arpl
pop
and
fs
adc
cltd
sbb
mov
mov
imul
mov
in
test
repnz
les
xor
pop
cmovp
jp
dec
mov
ja
pop
cmpsl
lods
pop
or
or
fimull
adc
cltd
das
push
ss
or
cli
mov
jmp
mov
dec
loopne
loopne
adc
jno,pt
cmp
popf
fisubrs
xor
test
filds
cmp
outsb
sbb
popf
insb
adc
fnstcw
xchg
lahf
lods
fnstenv
scas
or
pop
adc
push
sub
testb
push
xchg
insb
std
jnp
mov
dec
rolb
mov
xchg
shrb
mov
daa
hlt
fdivs
dec
out
mov
in
leave
and
and
cmp
daa
push
jl
cmp
mov
movsb
fmulp
fs
mov
lahf
and
xor
cmp
js
aaa
in
jp
test
in
popa
lret
mov
pop
jg
xor
sbb
sti
lcall
dec
shrd
xor
es
lcall
mov
inc
jl
fsubrl
stos
addb
xchg
outsb
adcl
mov
dec
push
push
cmpb
in
sbb
add
adc
push
push
mov
xor
and
test
movsb
fbld
or
in
xor
in
or
or
cmp
je
add
push
sti
mov
aas
pop
ret
mov
or
repz
and
jae
sbb
or
mov
cmpsb
fsubr
and
in
push
xchg
xchg
cmp
lods
push
repz
mov
pop
cwtl
mov
and
je
inc
adc
loope
pushf
pop
mov
iret
jne
pop
jg
lret
dec
mov
jmp
push
sbb
jmp
cmp
push
ret
sbb
sti
loop
pop
jg
adc
xor
in
adc
add
cli
and
fldenv
in
mov
popf
in
ret
les
lahf
fiadds
dec
push
jecxz
mov
mov
mov
and
and
hlt
aaa
ljmp
std
inc
xor
lock
cwtl
sub
cmpsb
outsl
xchg
fidivrl
xchg
mov
pop
mov
loopne
cld
jle
je
sub
mov
lahf
jge
jmp
push
int
or
and
adc
mov
dec
pop
leave
sub
cmp
lods
and
jo
push
mov
es
mov
lods
mov
rorl
push
jg
mov
xchg
add
mov
xor
xor
dec
lahf
adc
in
out
les
sbb
mov
pusha
out
or
mov
sub
sbb
std
cli
pusha
xchg
bound
arpl
push
cmp
stos
xor
je
xchg
repnz
pop
cmpsb
sbb
outsb
add
xor
push
imul
in
cmp
xor
and
sbb
xchg
testl
jecxz
ficompl
mov
iret
andl
add
sbb
sbb
in
cmp
xor
int3
aad
adc
andl
pop
add
int3
xchg
and
sub
nop
mov
scas
imul
jg
adc
sbb
inc
xchg
xor
inc
push
sti
orb
clc
xchg
push
mov
shrb
fadds
cmc
lods
adc
pop
je
jne
test
in
cmp
setp
cmpsl
xor
es
and
sarl
rorb
jne,pt
cmpsl
into
inc
rcr
daa
push
push
push
dec
loopne
mov
mov
add
mov
cmp
movsl
push
mov
stos
into
and
cli
mov
mov
lret
lahf
sbbb
push
adc
mov
push
aas
sub
add
sbb
out
fsubrl
mov
jg
mov
ret
jg
lock
push
in
das
lea
outsb
aam
jbe
lock
pop
bound
mov
sbb
icebp
rcrl
rclb
aad
jg
jne
ds
dec
std
leave
pop
loop
xor
test
inc
bound
fcmovnb
mov
mov
mov
cmp
in
sbb
cli
fcmove
and
ja
inc
pop
mov
sub
or
inc
add
mov
or
lret
mov
xchg
dec
dec
inc
call
cld
pop
fsubrl
cmp
fistpll
cld
push
in
fisubs
dec
cwtl
mov
add
fisubs
mov
lds
arpl
push
jp
sbb
jl
sub
xor
or
iret
jg
daa
cmp
inc
insl
cmp
and
sub
push
mov
cmp
les
int
sbb
sub
inc
adc
bound
push
lods
sub
dec
lea
pop
cmp
dec
iret
mov
mov
jno
xor
outsb
dec
jae
sub
xchg
mov
fiadds
or
data16
in
int
jae
lods
jge
pop
getsec
pop
sbb
sub
or
jbe
jno
sub
add
mov
add
fs
cmp
push
mov
mov
in
push
lret
insb
cld
and
push
lds
dec
sbb
cmp
dec
adc
push
dec
xchg
es
and
xchg
push
pop
jbe
or
mov
repz
adc
ss
xorb
pop
hlt
fsts
shufps
xor
mov
insl
icebp
call
loop
mov
in
fidivs
je
xchg
cmp
sbb
fisubrs
popf
ja
pop
stmxcsr
mov
or
jns
lods
xor
sub
sub
sub
sub
mov
sbb
popf
pop
push
jp
xchg
add
test
data16
arpl
jns
imul
aad
loopne
mov
iret
in
sub
jno
or
mov
mov
lods
sbb
add
stos
daa
mov
add
sbb
dec
add
mov
xor
mov
jbe
add
adc
xor
push
pusha
jecxz
enter
mov
jo
sbb
sub
push
pop
cmp
inc
sbb
pop
cmp
fs
or
pop
and
xchg
pop
mov
rcrb
adc
sbb
cwtl
push
lcall
cld
push
setae
inc
hlt
mov
addr16
outsl
inc
cmp
mov
adc
add
xor
pop
fxam
mov
push
fdivrp
sub
jl
jecxz
mov
dec
je
mov
and
scas
jne
cs
and
dec
xor
or
push
push
adc
or
sub
sbb
fadds
pop
sysexit
imul
in
ss
dec
jnp
xor
popf
popa
fistl
pop
int
data16
pop
sbb
and
sub
in
ret
scas
push
xor
add
loope
xlat
push
fs
icebp
add
inc
cld
sahf
add
push
shl
pop
sub
mov
mov
loope
dec
sbb
xor
and
inc
and
mov
push
test
add
sub
out
mov
outsb
ret
cmpsl
scas
mov
out
push
mov
ljmp
loopne
sub
push
pop
shlb
sbb
xchg
pop
mov
xor
xchg
xor
leave
and
add
and
push
add
and
mov
push
adc
xor
sbb
jg
pop
adc
adc
pop
dec
lret
xor
test
in
repz
add
push
rcl
loope
inc
fisubrl
cmp
push
adc
lea
xor
sti
nop
xor
imul
pop
inc
pop
js
push
push
mov
xor
sbb
into
inc
hlt
or
add
hlt
mov
imul
or
aad
mov
pop
movsb
popf
aam
cmc
pop
mov
cmp
test
pop
and
mov
ret
sub
movsl
cmp
xchg
dec
inc
cli
rcrl
dec
pmullw
xchg
mov
scas
jae
loopne
jae
int
inc
lods
je
sbb
mov
sbb
outsl
mov
push
adc
push
imull
cmc
pushf
pop
imul
mov
movsb
adc
fs
stos
pop
movsl
inc
cmpsb
shrb
lods
xchg
cltd
or
pop
aas
mov
mov
push
pop
or
addb
movsl
mov
dec
add
lcall
test
jbe
mov
dec
fs
pop
and
xchg
leave
xchg
lret
or
dec
out
or
xchg
into
rclb
sbb
scas
inc
adc
add
data16
testb
fwait
pop
xchg
cmp
mov
aam
pusha
add
fbld
xchg
xor
mov
xor
push
xchg
aas
cli
mov
mov
jb
or
pop
mov
sub
jg
adc
xor
je
test
dec
addb
in
pop
mov
shlb
in
clc
repnz
add
inc
adc
inc
lods
xchg
bound
cmp
repz
jge
das
ficoml
mov
arpl
adc
cld
add
sub
pop
fdivrp
jl
or
mov
mov
pop
daa
stos
cld
pop
pop
add
push
aas
ja
inc
mov
pop
push
dec
ljmp
shlb
dec
jg
in
mov
xchg
mov
cmp
aaa
loop
dec
test
adc
fcmovnb
dec
call
mov
mov
xor
sub
adc
shlb
xchg
jmp
lods
push
ljmp
lcall
test
xor
cs
sbb
cs
nop
test
or
data16
xchg
rcl
inc
push
cmpsb
mov
pop
push
lea
and
outsl
out
xor
push
leave
fcompl
inc
xor
fcompl
cmpsb
xor
aam
push
mov
adc
push
add
fstpt
mov
add
sbb
mov
ret
fistpll
not
mov
sbb
cmp
fimull
xchg
mov
mov
ja
mov
cltd
mov
and
in
mov
lods
jmp
aad
lahf
cmp
pop
dec
or
xor
ss
sbb
imul
pop
jmp
nop
iret
lds
mov
pop
sub
jle
rorl
push
xor
cwtl
push
push
adcl
or
push
jne
clc
insb
xor
lds
pop
mov
cmc
repz
mov
jno
data16
cs
dec
stos
fildl
inc
ds
jecxz
cmp
jb
loope
cmp
push
sbb
mov
mov
dec
add
rorb
into
push
cmp
mov
pop
add
js
das
cli
rclb
rcll
lods
rcl
jb
js
dec
jmp
adc
insl
lret
add
sbb
push
and
or
lods
pop
in
sahf
jmp
insl
adc
push
mov
adc
mov
fisttps
xor
mov
push
sbb
mov
push
sbb
pop
popf
fists
stc
outsb
int3
stos
movsl
mulb
mov
mulb
lods
out
jp
lods
mov
mov
jecxz
xchg
xor
mov
pop
int
adc
int3
or
mov
mov
insb
je
icebp
js
pop
data16
sub
jmp
js
mov
mull
mov
movsl
inc
ret
adc
xchg
aas
add
jp
lret
mov
mov
fucom
fbstp
js
mov
inc
icebp
in
and
xor
mov
inc
adc
and
enter
test
mov
hlt
xor
jne
dec
mov
in
ljmp
or
ficoml
movsb
cmp
movsb
fwait
aad
inc
out
add
pop
ss
xor
inc
in
lret
ret
pop
sbb
xor
cltd
cli
fistpl
cltd
cli
sahf
pop
or
scas
ss
lret
inc
mov
mov
sub
dec
ret
push
das
out
lds
pop
mov
into
ja
sbb
mov
sti
push
incl
xor
test
sbb
mov
enter
fmul
insl
test
arpl
test
test
adc
lods
xchg
in
cmp
cli
bound
or
iret
shl
xor
sub
inc
mov
mov
pop
nop
outsl
jp
cld
mov
jo
push
icebp
jb
arpl
pop
xor
adc
outsb
loopne
enter
fs
nop
imul
cmc
pusha
and
inc
mov
subb
xchg
cmpsl
add
sub
out
xlat
or
inc
dec
aas
xchg
ret
push
lds
out
xchg
int
out
mov
stc
jp
push
push
std
icebp
popf
adc
jo
rcll
insl
cmp
cltd
adc
and
stos
dec
add
lcall
pop
dec
mov
mov
mov
ss
cmp
fildll
lock
cmpsl
out
pop
loope
jno
das
into
scas
cmp
add
push
mov
add
push
in
or
addl
adc
jl
adc
mov
adc
mov
int3
mov
outsl
cmc
nop
into
xor
xor
adc
mov
sbb
ret
outsl
cli
ja
push
fimuls
mov
ljmp
aaa
adc
pusha
stos
and
pop
movsb
xor
in
pop
add
pop
adc
inc
inc
jbe
adc
xor
and
inc
fstpt
fcomi
jae
aaa
and
mov
pop
sarb
push
fs
hlt
push
push
mov
sbb
cmpsl
mov
iret
push
jno
hlt
add
mov
mov
enter
test
dec
mov
decl
push
inc
inc
cmp
sahf
cmpsl
pop
pop
pop
push
mov
imul
jp
or
cmc
insl
std
add
lods
sbb
into
xor
push
inc
mov
movsb
int3
mov
push
xchg
mov
into
pop
sahf
fwait
jle
jmp
shrl
ds
fiadds
lret
in
cld
jg
xor
xchg
mov
mov
and
cmc
jg
and
js
inc
lea
cltd
xchg
nop
sbb
fdivl
aad
or
imul
adc
adc
mov
lcall
cmp
out
pop
bound
les
mov
mov
es
sub
pop
cmpsb
adc
sub
mov
inc
adc
cs
push
orb
push
in
cltd
in
roll
lods
jb
push
leave
jns
pusha
lea
pop
inc
enter
jg
pop
push
mov
scas
and
aaa
push
or
cld
sub
in
andl
mov
lea
test
inc
mov
push
in
mov
fwait
je
and
inc
cmpsb
cwtl
jmp
into
inc
inc
pop
popa
pusha
pusha
cwtl
and
in
testb
std
pop
fisubs
repz
sub
cmpsb
test
mov
add
cmp
call
sarl
jge
outsb
call
xor
cmp
adc
adc
sbb
push
aad
pop
jnp
xor
rcr
cmp
jo
ljmp
lret
sub
jl
popa
shll
dec
ffree
dec
sti
test
sub
and
mov
mov
or
cmp
dec
push
adc
push
pop
test
adcb
mov
fisubrl
aas
out
fiadds
pop
inc
lahf
es
add
fcomps
cltd
and
add
or
outsb
xlat
hlt
xor
mul
cmpsl
lcall
sbb
imul
nop
add
shll
loopne
data16
mov
shl
mull
adc
and
out
aaa
bnd
lahf
sub
rcrl
cs
andl
and
shr
or
and
cmp
popa
inc
inc
loop
mov
cmp
lods
push
push
shrb
mov
dec
sahf
cmpb
sbb
fistps
inc
pop
aad
mov
jne
xchg
js
lea
fcomp
push
cli
jns
adc
es
into
jns
sbb
cmpb
pushf
mov
push
jle
xchg
jno
xchg
inc
fnsave
pop
mov
cmp
mov
sbb
arpl
cwtl
jne
add
add
jg
pop
lcall
rcrb
lret
insb
pop
pop
aam
insb
mov
xchg
sub
push
cmp
stos
pop
addr16
sub
jl
fdiv
arpl
pop
sbb
lret
push
fnstsw
std
xchg
movsb
pop
jl
in
push
cmpsb
idivb
xor
dec
pop
lret
jp
mov
or
mov
das
pop
shlb
popa
imul
dec
outsl
xchg
hlt
push
inc
cmp
push
mov
lods
ss
jno
mov
xchg
and
dec
shll
jecxz
lahf
into
rclb
ret
dec
or
mov
stos
mov
mov
or
mov
jne
jnp
xlat
daa
push
mov
pop
xor
sub
pop
and
mov
push
sub
stos
mov
and
icebp
in
ficompl
adc
xchg
insl
jg
push
push
stc
ret
jmp
repnz
sti
mov
jo
push
lds
lcall
cmpsb
xchg
xchg
in
push
in
cltd
or
lcall
adc
mov
rcrl
lret
push
lds
mov
inc
lea
lret
mov
in
add
int
xor
jb
leave
shl
stos
dec
cmp
cmp
add
push
pop
jne
mov
addr16
popf
mov
xor
add
je
jp
push
dec
cmovl
call
lea
cmp
sub
loop
inc
cltd
imul
jo
cltd
xor
dec
popa
add
mov
add
adc
lea
es
inc
fcompl
fidivs
cs
push
mov
and
mov
lret
insl
movhps
lds
dec
jnp
and
out
out
mov
adc
lds
je
sbb
mov
and
push
xor
imul
in
into
aaa
inc
dec
les
sahf
je
decb
popa
lcall
inc
cltd
lods
xchg
ficoms
loopne
mov
mov
push
dec
sbb
out
inc
and
cmp
mov
mov
xchg
lret
cmp
fs
fs
mov
or
xchg
cwtl
cmp
xor
pop
jp
lahf
mov
push
insb
call
pop
jmp
jecxz
je
mov
lea
adc
cmp
dec
das
sub
popa
xor
bound
mov
movsl
or
ret
or
imul
ss
mov
mov
loop
fisttps
adc
adc
into
push
dec
lods
daa
xchg
mov
sub
outsb
das
repz
inc
test
jne
cmp
mov
loope
mov
lcall
pop
cmpsl
int3
jbe
jno
cmp
mov
pusha
aas
in
popa
repz
dec
cmp
push
incb
mov
jb
movb
dec
add
add
pop
int
dec
dec
adc
sub
cs
and
xor
fdivp
int
scas
cmp
or
out
add
push
jl
sbb
aam
ljmp
in
jp
sbb
lods
or
lret
jl
leave
clc
and
sbb
adc
clts
scas
lea
pushf
jbe
aas
aad
aam
lcall
rclb
ret
das
push
push
pusha
mov
cmp
xor
cmp
sahf
push
adcb
rorl
lods
jae
js
sub
lds
cmp
mov
xchg
xchg
lahf
dec
das
mov
ret
cmp
xor
testl
mov
mov
adc
dec
daa
mov
data16
pop
repnz
fcoml
add
or
or
adc
adc
pushf
ret
or
fstl
sub
rcrb
cmp
outsl
pop
inc
adcb
notl
nop
jl
rcr
cmp
cli
cld
fbstp
scas
pop
ret
pusha
fisttpl
mov
push
jp
inc
es
jle
pop
jnp
enter
jo
mov
bound
sarl
or
mov
fidivs
lods
sbb
mov
clc
fcompl
iret
xor
mov
in
xchg
xchg
jns
aam
test
mov
negb
fisttpll
or
fmuls
sub
xlat
cs
xchg
stos
std
add
and
test
enter
jo
dec
pop
inc
pop
xor
aas
into
sbb
daa
out
pop
out
or
push
sub
out
jno
div
stc
jnp
fcmovnbe
lds
nop
add
aaa
fidivrl
loop
lea
sub
sbb
les
dec
sbb
jle
je
add
mov
xchg
xchg
sbb
mov
xlat
pcmpeqd
pop
shll
mov
jne
and
hlt
cmc
ljmp
fmul
out
inc
pop
ja
mov
mov
ret
cwtl
clc
ds
call
inc
cmp
rcr
push
xor
adc
ja
nop
les
mov
stc
pushf
nop
aas
les
movsl
pusha
ror
lret
lea
mov
fmull
mov
ja
mov
dec
pop
dec
jae
cmpb
add
or
fistpll
pop
imul
mov
stc
lock
add
cli
dec
fmul
cli
mov
out
xor
or
std
notb
popf
dec
dec
or
xor
pop
xor
lret
icebp
mov
dec
inc
cmp
cmp
pop
mov
fdivl
mov
jl
rcr
xorb
imull
dec
out
decl
or
add
adc
sbb
cs
mov
pop
and
sub
pop
into
push
pop
lret
sub
rclb
adc
xor
mov
fwait
out
call
mov
sbb
cmp
add
mov
pop
movsb
sbb
out
lods
int
push
cmc
stc
jno
rcrb
aas
sub
lret
lds
mov
imul
cmpb
jg
pop
cs
mov
xlat
fisubrl
int
xor
insl
dec
call
fdecstp
shlb
mov
pushf
sub
add
xor
push
faddl
loope
outsb
mov
scas
bswap
mov
es
pop
jno
adc
sbb
nop
aam
mov
pop
lcall
and
mov
add
lods
aaa
dec
addl
std
inc
xchg
dec
inc
xchg
add
sub
mov
rol
popf
lds
sub
movsl
xchg
dec
cmp
pop
or
mov
orl
or
fdivrs
andl
addr16
aam
gs
out
jne
fisubl
mov
stos
mov
das
gs
push
and
ret
push
mov
leave
mov
mov
pop
sahf
mov
jg
lock
sbb
in
and
mov
xchg
sub
push
lods
push
ret
dec
popf
xchg
call
aas
mov
js
lods
insl
sbb
jl
cmp
mov
mov
dec
aad
sub
mov
outsb
out
pop
ljmp
inc
arpl
inc
inc
or
cmp
mov
mov
fidivs
aaa
mov
lea
add
jno
dec
mov
xchg
add
rcl
dec
ds
xchg
aad
movsl
mov
add
roll
inc
jp
cmp
lahf
enter
adc
pusha
and
adc
stc
dec
std
jmp
mov
or
and
or
insl
outsl
mov
lret
into
arpl
jecxz
int3
lret
stc
mov
push
in
mov
jp
pop
mov
shll
in
lds
out
inc
cs
jmp
add
adc
lret
dec
scas
sub
stos
xor
lret
cli
jns
lret
sub
shrb
mov
stos
fidivrl
sub
scas
lods
pop
or
cmp
fwait
xchg
std
or
pop
stos
xchg
push
ljmp
inc
lock
out
sahf
xchg
or
das
sub
fmulp
lret
push
and
pop
xchg
adc
int
pushf
sbb
push
dec
xchg
and
sub
cmc
mov
stos
xchg
sarb
pop
arpl
push
xlat
fiaddl
mov
lock
aam
inc
pop
stos
and
les
jo
jbe
and
lds
loope
xor
xchg
xor
sahf
cwtl
push
push
inc
sub
pushw
xchg
inc
inc
xor
filds
int
cmp
and
mov
cmc
int3
pop
push
ror
add
dec
sbb
aad
dec
shrb
jne
xacquire
aas
sub
push
add
scas
dec
mov
adc
clc
mov
addr16
xchg
mov
pusha
xchg
mov
enter
sbbb
int3
fadd
or
jg
sbb
lods
icebp
and
cltd
push
cltd
xor
mov
popa
pop
push
dec
jp
fnstcw
int
in
jl
imul
inc
inc
aas
sti
ret
adc
movsb
std
minps
jnp
adc
dec
stos
lods
sub
fildl
and
mov
loope
loope
push
cmp
std
fs
or
jo
test
leave
cmp
mov
and
jae
push
add
cli
cmp
ja
push
insb
adc
aas
stos
pusha
xchg
aad
dec
shlb
notl
std
pop
rolb
cmpsl
lea
jmp
xchg
adc
popf
pop
out
add
pushf
mov
mov
iret
sbb
push
inc
aad
in
loop
bt
add
mov
dec
add
push
sbb
call
pop
inc
stos
movsl
dec
pop
add
lea
cmpsb
fsts
pop
mov
lock
mov
mov
sbbl
pop
mov
jge
sbb
sbb
xchg
test
lret
mov
or
lret
sub
dec
sub
fs
add
mov
rcrl
aad
andl
sbb
jbe
mov
arpl
aad
mov
inc
lahf
daa
sti
daa
shlb
sbb
jae
xor
xchg
nop
add
xchg
subl
mov
push
shl
fdivrs
imul
inc
stc
cmpsb
xchg
xor
add
cmp
sbb
test
jno
mov
xor
icebp
inc
les
push
stos
inc
adc
insb
setno
test
jmp
dec
adc
fldt
sahf
sti
xor
arpl
xor
lds
lcall
mov
xor
lds
andl
sbb
call
fs
lret
insl
ret
fisubrl
and
lret
adc
add
stos
xor
jne
lahf
or
ss
test
adc
aam
sub
pushf
ja
sbb
and
add
lcall
add
push
jmp
and
push
insl
icebp
mov
je
cltd
or
mov
mov
mov
movsl
cs
jne
sub
sbb
pop
pusha
dec
inc
dec
out
bound
dec
cmp
pushf
dec
aam
cmp
sbb
mov
dec
push
mov
test
das
pop
xchg
jp
mov
sbb
push
pop
and
pushf
lahf
xor
jne
and
inc
iret
push
loopne
mov
mov
adc
fisubrs
in
lret
xchg
aad
xchg
xchg
sbb
mov
inc
cwtl
jnp
fistps
cmpsb
lock
lock
imul
mov
mov
dec
insl
in
subb
arpl
xor
add
inc
mov
popf
mov
jbe
fidivrs
jge
loope
lods
dec
mov
push
cmp
aaa
mov
sub
cmp
into
sub
repnz
les
sub
xchg
imull
ss
xor
shll
icebp
xchg
jle
mov
jo
push
mov
sbb
sbb
push
mov
bound
mov
cmpsl
mov
clc
lods
or
push
test
mov
test
and
mov
push
outsl
jmp
test
in
jno
hlt
xchg
fistl
cmp
or
adc
push
les
pop
xchg
push
xchg
mov
rcr
shlb
loopne
cmp
mov
movsb
jmp
inc
int3
mov
or
into
mov
rcl
jmp
dec
mov
mov
fisubrs
loopne
pop
clc
inc
js
fisttpll
insb
out
mov
mov
xchg
inc
push
and
scas
insb
mov
push
cmp
add
fmuls
je
mov
sbb
test
jg
repnz
cmp
mov
loope
xor
bound
pusha
cld
jmp
pop
mov
xor
mov
pusha
fildll
adc
ud1
push
cmc
loopne
xor
les
inc
into
pop
js
jno
cmp
xlat
fwait
mov
out
inc
or
pop
lea
stos
popf
jnp
int3
pop
ja
push
pop
mov
fistpl
xor
inc
insl
ds
jbe
and
xor
push
out
aaa
dec
mov
std
sti
sbb
and
jne
loope
test
xor
mov
push
sbb
rorb
insb
mov
mov
ror
or
push
out
bound
into
jo
sbb
add
mov
mov
loopne
mov
xor
fcoml
jbe
enter
xchg
or
leave
fld
push
mov
mov
jg
int
jne
lret
in
call
shll
ljmp
hlt
cmp
dec
cld
sub
jp
mov
call
jp
jno
mov
insb
lods
xor
xchg
ja
and
loop
imul
ja
mov
jb
pop
mov
fidivs
adc
lcall
jge
cmpsb
xchg
jge
and
mov
add
inc
stos
das
mov
pop
lods
outsl
loop
xor
mov
sub
shrb
push
dec
push
das
pop
rorb
in
ret
adc
nop
xchg
jns
cli
mov
mov
sub
add
test
sbb
push
jns
js
mov
mov
sarb
sub
fst
adc
jo
push
jl
ret
andb
sub
stc
imul
mov
cmp
insb
pop
movl
or
cwtl
test
dec
and
andb
out
mov
cwtl
into
addl
out
out
or
shll
dec
push
and
jge
popa
and
out
jno
outsb
or
pop
xor
inc
adc
lods
hlt
jb
das
shrl
lods
aad
clc
call
jg
sbb
pop
pop
sbb
hlt
in
jg
popa
lods
rorb
popa
ucomiss
cmp
sub
inc
ss
add
insb
aaa
adc
and
and
nop
nop
les
and
push
mov
jmp
lret
lcall
insb
arpl
xchg
adc
mov
jae
mov
or
jo
pop
in
push
mov
int
shll
cld
sbb
push
sbb
cmpl
add
mov
test
bnd
out
imul
or
aas
fwait
pop
mov
loop
or
mov
sbb
xchg
dec
cmpxchg
in
jmp
clc
mov
loop
pop
loope
out
movsb
xchg
xchg
and
flds
push
sub
cmc
push
xchg
mov
dec
ret
mov
push
inc
mov
jmp
sbb
les
jns
addl
and
add
into
pop
mov
pop
adc
in
inc
adc
cmp
mov
cmp
push
pop
iret
into
push
clc
enter
das
imul
leave
xor
leave
loope
sahf
int3
pusha
xor
jp
jmp
or
movsl
repnz
cmp
popf
test
xor
cmp
sub
add
mov
rcr
leave
imul
scas
and
cmp
pop
aas
jo
lds
loopne
popf
imul
call
xchg
push
insl
jl
xor
xlat
cmp
inc
xorb
mov
mov
xor
sti
sahf
xchg
loopne
scas
mov
jb
stc
test
mov
out
insl
lds
hlt
dec
iret
dec
sub
or
pop
inc
adc
cmp
pushf
lds
loop
movl
ja
mov
adc
xchg
cmc
jl
xchg
outsb
push
stos
inc
aam
sbb
stc
cltd
add
hlt
mov
in
and
sub
or
rolb
loope
and
scas
or
hlt
mov
data16
push
mov
hlt
mov
xor
cmp
cld
and
nop
int3
jnp
sahf
pop
daa
mov
push
mov
addb
mov
mov
push
scas
imul
fstps
sbb
aaa
push
in
xchg
lret
xchg
das
in
fwait
sbb
jecxz
cmpl
dec
push
xchg
imul
mov
push
sbb
repz
mov
mov
xor
scas
pop
inc
adc
les
ja
xchg
rorl
push
das
cmp
mov
mov
jbe
lahf
enter
pop
pop
testb
adc
sub
push
add
xchg
mov
push
sub
in
pop
jno
adc
mov
iret
popa
push
sub
rcr
pushl
cld
mov
jae
or
xor
call
test
push
mov
pop
jns
adc
leave
mov
stos
xchg
repz
lds
fucom
out
sbb
or
adc
mov
out
in
add
push
sub
dec
test
cmpsb
cli
mov
lea
in
loope
pop
out
add
pop
addr16
xchg
lahf
popf
fs
addl
xlat
cmp
vdivss
sub
outsb
and
rcrb
mov
jg
aam
push
out
or
arpl
pop
mov
xor
pop
movsl
mov
or
sbb
xchg
and
adc
push
loopne
arpl
jle
lea
cwtl
pop
int3
mov
push
enter
mov
aad
or
inc
not
clc
iret
mov
cmc
idivl
dec
or
in
push
cwtl
jne
or
stos
cld
sahf
jno
jle
jb
aad
std
mov
int3
push
mov
aaa
iret
fnsave
std
sub
add
loop
int3
fadd
stos
xchg
bound
cmc
scas
mov
and
lock
data16
cwtl
mov
inc
ficompl
jb
xor
fmull
hlt
xchg
scas
cmpsl
inc
addr16
loop
int
repnz
adc
sti
mov
and
xlat
lret
xchg
shl
fwait
adc
sbb
xchg
out
adc
adc
cmp
sbb
mov
leave
fwait
stos
xor
outsl
repnz
bound
aam
inc
jne
lods
inc
cli
mov
mov
arpl
jne
incl
adc
pushf
and
addl
fsubrp
and
sub
pop
xchg
cmp
xor
cld
adc
sub
into
xchg
mov
xchg
fsubl
xchg
sub
aam
loop
test
repnz
xchg
mov
lcall
mov
jno
add
pop
mov
bound
lcall
rorb
sbb
rorl
shr
mov
xor
push
sub
xor
pop
pushf
cmp
daa
lock
pop
xor
xchg
js
jp
repnz
fdiv
sub
xchg
shll
sub
push
out
mov
es
jle
inc
mov
jbe
and
and
jo
xlat
fwait
bound
or
rorl
aad
and
insb
pop
add
cmp
int
sub
xchg
inc
xor
adc
arpl
ficoml
test
pop
test
add
push
and
xor
fld
outsb
inc
clc
or
std
pusha
jb
and
mov
jle
int
stos
addr16
movsl
pop
inc
leave
push
add
mov
cmc
mov
pop
cltd
dec
sub
or
pop
xor
sbb
rcl
adc
adc
sarb
mov
add
and
in
pop
mov
cltd
stc
sbb
popa
jns
lock
sub
cld
push
rclb
imul
mov
pop
push
cmp
pushl
push
fcompl
lret
pushf
jne
xchg
inc
push
adc
repz
loope
jl
xchg
inc
outsb
add
bound
jbe
lods
mov
int
pop
push
aaa
loope
ds
or
xor
and
mov
bound
out
jo
daa
rolb
sbb
das
imul
add
xor
or
mov
sub
mov
cmp
mov
gs
and
or
jb
pop
pop
mov
fst
jecxz
xchg
push
sub
push
adcl
mov
nop
or
dec
inc
or
jg
test
cld
xchg
fucomi
jbe
jmp
pop
mov
sbb
cmp
loopne
inc
pushf
dec
lcall
ss
fidivl
sub
imul
aas
dec
fidivl
dec
stc
and
mov
xchg
cmpsl
in
popa
ret
jns
sbb
lods
enter
xor
and
inc
dec
xor
pop
lret
mov
mov
movntq
sub
testb
jno
pop
mov
xchg
scas
pop
cmp
jg,pt
jmp
inc
push
in
movsb
out
push
leave
loop
add
into
mov
outsl
mov
xchg
cmc
loopne
mov
push
inc
out
incl
ret
lock
jo
ja
int3
shl
gs
push
ss
lds
inc
test
lahf
xchg
dec
mov
gs
insl
addr16
es
bound
mov
and
roll
aam
xor
pop
test
mov
mov
jo
mov
xchg
rcrb
mov
mov
add
jnp
shlb
cltd
cmp
jb
jbe,pt
pop
mov
mov
dec
xchg
movsb
fsts
scas
xor
inc
aad
cmc
lret
push
out
pushf
call
or
in
and
add
arpl
sti
cmc
pop
push
test
lea
push
mov
cmpl
pop
xor
xor
leave
jle
fstpl
iret
std
cmp
out
push
movsb
push
push
cwtl
ret
push
xchg
shll
inc
fdivrs
das
sbb
sarl
adc
sub
hlt
push
sbb
add
dec
cld
adc
push
hlt
jns
rep
dec
scas
add
pop
loopne
mov
andl
movsb
ds
sbb
jo
cmpsb
outsl
aam
cs
leave
jnp
mov
out
cmp
adc
scas
scas
jl
mov
sub
loopne
les
test
loope
in
push
lock
dec
sbb
lret
add
pop
push
pushf
add
mov
sbb
loop
stc
rcll
dec
sub
sbb
daa
lret
test
scas
outsb
xor
xchg
cmpsl
pop
gs
cmp
cli
inc
inc
mov
adcb
mov
sub
pxor
mov
lret
push
jae
testl
in
jge
fwait
sarb
sbb
repnz
lods
lcall
pop
xchg
cmpsb
pusha
ja
pop
inc
je
iret
push
jno
or
aad
in
out
int3
aaa
cmp
mov
add
mov
mov
repnz
xlat
cmpsl
imul
sbb
nop
out
ljmp
and
sbb
inc
sub
stos
in
fistl
cli
sbbl
int
add
cmc
xchg
int
sbb
jb
das
stc
das
ret
cli
cltd
std
mov
setle
mov
outsb
jge
inc
lock
jge
fdivl
popf
and
incl
jnp
int
or
gs
dec
fcompp
adc
enter
sarb
rcrl
xchg
sbb
push
xor
mov
mov
inc
dec
xchg
push
ficoms
test
push
in
fnstcw
out
mov
stc
stos
shr
mov
sahf
negb
rcll
and
das
mov
xlat
push
or
addl
je
int
test
cld
dec
xchg
cmp
xchg
and
xchg
pop
leave
pop
sub
ret
pushf
roll
dec
mov
sbb
aas
inc
cmp
mov
xchg
ljmp
clc
rolb
inc
xchg
popa
cmp
mov
adc
sbb
les
xchg
fnstenv
pop
pop
je
lods
arpl
pop
outsb
inc
inc
add
call
and
out
mov
xchg
scas
pop
in
push
inc
icebp
je
jb
btr
imull
out
in
pop
adc
jp
xchg
icebp
mov
arpl
push
push
mov
sub
jmp
jl
adc
gs
push
cmp
inc
pushf
jb
dec
movb
sar
aaa
xchg
int
hlt
push
shl
fucomi
xor
dec
inc
and
mov
aaa
int3
aas
mov
xor
call
ja
adc
and
sbb
inc
loop
push
jp
push
mov
dec
sub
jno
sti
sbb
jns
push
mov
les
jbe
sbb
hlt
xchg
int
dec
sti
ja
mov
jp
cmp
add
jnp
inc
jno
jge
fstps
adc
or
fwait
shll
sbb
test
jl
xchg
inc
lods
ja
sbb
dec
xchg
ss
int
jge
in
shlb
bound
and
das
jbe
std
xor
jns
pusha
xchg
mov
and
dec
cltd
lcall
and
sbbl
jl
mov
jp
adc
mov
clc
insl
out
lds
pop
stc
mov
aam
subl
sub
mov
stc
pop
adc
out
jmp
imul
push
push
push
ret
inc
lret
imul
push
pop
imul
sub
fldl
test
mull
adc
cmp
cmpsl
and
enter
mov
loop
lret
push
in
insl
int3
add
xchg
mov
jb
or
lock
jne
insl
hlt
add
lock
out
into
fdivl
loop
ret
fisubl
ret
clc
in
add
call
rclb
add
sbb
mull
jg,pt
aad
icebp
sahf
xchg
push
in
loop
xor
push
test
or
dec
jb
fstl
pop
frstor
xchg
mov
dec
js
lea
pop
shlb
inc
sub
jns
and
stos
int3
sub
xor
loopne
or
test
xor
aaa
fwait
aad
inc
lea
pop
push
jae
lods
adc
mov
pusha
dec
test
xor
movsb
cmp
daa
push
lea
pop
jmp
sbb
inc
popa
add
cmp
jmp
ret
jle
sbb
dec
add
sub
rcll
lock
scas
adc
aas
fiaddl
dec
mov
bnd
sbb
addb
jne
mov
sti
push
xchg
cwtl
cs
jmp
cmp
lods
je
imul
fnstcw
in
nop
cli
push
and
xor
ss
insb
xlat
loopne
mov
sbb
pop
outsb
adc
lar
cli
rcr
inc
xchg
pop
jns
cmpsb
and
push
std
lcall
pop
fistpl
ja
out
sarl
cmc
add
ja
pop
out
rorb
dec
cmp
mov
sbb
test
movsb
adc
les
xor
lock
sub
movsl
outsl
xchg
inc
roll
jns
test
push
pop
movsl
fldz
xchg
out
clc
pushf
popf
pop
mov
push
mov
mov
jns
or
xchg
mov
mov
xchg
inc
jecxz
add
fsubrp
and
mov
shll
sti
stc
xlat
pop
mov
mov
push
scas
mov
xchg
xchg
enter
push
inc
pushl
scas
add
cmp
add
push
das
xchg
imul
cmpsb
int
pop
sti
outsb
adc
out
mov
or
pop
in
repnz
hlt
xor
hlt
jne
addb
call
icebp
loop
mov
cmp
icebp
icebp
mov
sub
scas
loopne
dec
dec
xor
xchg
clc
popf
pop
sbb
cmp
cmp
xchg
mov
jle
stc
add
das
std
cmp
xchg
xchg
pusha
loop
sub
mov
adc
sti
add
stc
sbb
or
mov
mov
rorb
mov
pop
sarb
mov
dec
cmpsb
sub
lret
scas
ret
jb
inc
dec
push
mov
scas
pop
mov
rolb
jae
ds
sbb
xchg
movsl
lret
aaa
add
hlt
fisttps
insb
ret
xor
or
sub
adc
out
into
leave
jle
es
adc
push
inc
jae
repz
je
cmp
jns
adc
cltd
and
out
data16
rcll
cld
cwtl
push
pop
popl
dec
repnz
test
lea
push
out
and
jb
std
cli
popa
jns
xchg
nop
inc
in
popf
loopne
scas
and
out
xorb
mov
aad
jae
mov
sub
clc
cmp
popl
cli
sbb
adc
or
clc
or
test
pop
int
adc
xchg
mov
lods
xor
mov
dec
add
imul
mov
in
jne
xor
push
inc
or
aad
movsl
insb
sub
dec
push
xor
pushf
push
and
push
aad
lahf
dec
sbb
popa
push
cmp
dec
adcb
test
adc
imul
push
add
int3
ljmp
mov
out
pop
add
hlt
adc
xor
lcall
push
ds
stos
xchg
cmp
mov
jmp
jg
pop
push
push
adc
scas
push
sub
jb
in
test
sub
mov
xor
shll
mull
fists
into
shll
jb
out
cmp
mov
add
xchg
lcall
xlat
xchg
or
dec
xchg
std
mov
cmp
push
add
xlat
cltd
dec
push
push
arpl
sbbb
push
mov
mov
popa
fsubl
pop
mov
sbb
movsb
pop
adc
pop
and
add
adc
cmpsb
lods
pop
xchg
xchg
vcvtss2sd
sub
mov
sbbb
out
or
inc
cmpsb
out
xchg
mov
out
fisubs
xchg
mov
xor
loopne
sahf
ja
fwait
bnd
lret
mov
shll
lahf
pop
ds
xchg
push
inc
cmpsb
pop
pop
pop
dec
pop
call
lahf
sub
outsl
enter
mov
xor
pop
inc
mul
aam
dec
fbld
into
aam
and
cwtl
inc
adc
andl
sbb
cmp
xchg
fimull
call
es
xorl
pop
fildl
add
movswl
push
loope
jbe
ds
push
mov
push
andnps
imul
pop
hlt
outsb
sahf
add
or
pushf
loop
fs
icebp
add
in
cwtl
cs
mov
push
pop
jno
mov
int3
push
mov
xor
jle
cmpsb
inc
sub
pop
jbe
mov
test
jg
mov
pop
mov
dec
loopne
xchg
or
daa
mov
mov
mov
mov
xchg
fstpt
fprem
out
dec
dec
mov
shrl
push
mov
adc
inc
jg
clc
fists
cli
pop
add
fisttpl
dec
rclb
cmpsl
das
mov
or
arpl
aas
mov
outsb
mov
add
adcb
push
mov
lds
xor
push
movsl
push
cmp
ljmp
or
cmp
mov
leave
out
loopne
arpl
mov
ret
jno
mov
jle
push
lret
ficoms
mov
in
xchg
jnp
adc
jno
mov
jae
push
popf
mov
pop
lds
out
test
sub
out
adc
dec
pop
dec
lcall
xor
add
mov
push
jnp
lock
out
cmpsb
lahf
fdivrl
test
fiaddl
jo
sbb
test
arpl
shrb
imul
jne
daa
jge
push
or
icebp
add
mov
nop
js
add
pop
jmp
xchg
in
dec
inc
mov
adc
jge
jo
xor
ret
imul
out
std
ds
jle
repnz
add
fisubrs
repz
xor
inc
in
jae
sahf
leave
mov
push
repnz
insb
push
adc
jmp
and
inc
lret
outsb
push
fcompl
jecxz
in
ret
or
mov
fists
pop
adc
adc
jno
call
xor
jge
xor
adc
pop
ret
loop
xor
addr16
mov
jge
push
dec
sub
jnp
fdivp
data16
xchg
imul
andb
sub
scas
jno
mov
jp
cmp
or
lea
and
loopne
pusha
movsb
jle
add
cs
push
ficoms
mov
ss
shrb
call
jle
sbb
out
add
or
inc
add
xor
and
popf
inc
xchg
mov
dec
loope
ja
adc
lcall
jae
das
lahf
xlat
in
fldl
or
pop
xor
cltd
mov
mov
xchg
int
cltd
push
cmp
cs
xchg
stos
cmc
sbb
test
mov
fcomip
jl
ja
fimull
sbb
mov
jle
pop
adc
jmp
push
adc
jle
sbb
xchg
xor
cmpsb
repz
cmpsl
mov
mov
and
dec
inc
les
and
sti
mov
repz
xor
xor
sbb
sbb
gs
jne
add
outsb
xchg
xchg
inc
call
icebp
arpl
pop
mov
mov
add
cmp
repnz
enter
and
bound
pop
push
sub
push
subb
fdivl
or
jmp
pop
mov
lds
xor
andb
mov
pushf
dec
sbb
faddp
mov
cwtl
sbb
jo
cmp
add
dec
xchg
mov
popf
daa
mov
add
xor
xlat
sbb
mov
mov
sub
je
fisubl
xchg
dec
mov
jae
adcl
ljmp
jl
xchg
outsb
movlps
iret
in
insb
in
mov
mov
and
mov
stos
add
es
mov
jg
xchg
jbe
or
iret
fistpll
cld
push
rorb
rol
popa
fnstsw
pop
aas
add
inc
sti
add
cmpsb
outsb
or
int3
jl
or
aaa
mov
ficompl
jp
aas
and
test
mov
mov
int3
dec
mov
mov
mov
fimuls
xchg
jle
je
lds
ja
cmpsl
inc
add
and
dec
daa
lret
lret
xchg
push
test
mov
inc
hlt
ljmp
jl
jmp
ss
xor
add
dec
jb
mov
sub
fcomp
leave
dec
nop
cmp
in
inc
and
movsb
mov
pop
bound
cmp
pop
mov
out
dec
fdivrs
jae
loope
cmpsb
mov
adc
jb
imul
mov
loop
sbb
pop
dec
arpl
in
push
jp
sahf
and
ljmp
pop
pop
adc
test
mov
and
jle
pop
push
jmp
sbb
popf
jbe
sbb
mov
mov
mov
or
adc
mov
xor
sbb
sub
popa
xchg
add
cli
adc
jb
push
fmul
pop
xor
push
push
out
lds
icebp
out
xchg
ror
sbb
call
movsl
sbb
xchg
imul
or
rorl
scas
mov
out
test
aad
jnp
aas
jge
sbb
lods
sbb
xor
xorb
cmp
and
hlt
cmp
mov
add
cwtl
ret
roll
lods
int3
mov
je
mov
sbb
dec
jmp
mov
inc
shl
xchg
ret
iret
or
pop
add
out
gs
push
fmulp
int
je
ret
push
andl
cmp
in
pop
xchg
je
lods
lahf
cld
sub
daa
xor
pop
jle
out
ret
or
mov
mov
iret
scas
sub
les
add
sub
call
xor
sbb
sbb
andl
jle
jecxz
imul
xchg
cmp
inc
inc
xchg
lods
cmpl
sarl
popf
sbb
xchg
loope
cwtl
jp
pop
dec
or
sub
mov
cwtl
push
mov
sub
addl
mov
test
pop
cmp
inc
daa
mov
inc
in
cmc
fldt
mov
dec
aaa
test
add
and
int3
out
test
mulb
inc
xor
cmc
roll
cmp
loop
shl
add
or
jae
dec
inc
shll
mov
xchg
adc
testl
hlt
ljmp
daa
inc
rcll
mov
sub
xchg
dec
iret
or
mov
clc
sbb
out
shlb
dec
movsb
aas
inc
in
xlat
int3
notb
clc
in
sub
pop
cmp
mov
scas
shrl
stc
inc
mov
mov
and
jae
out
dec
mov
aaa
leave
add
scas
ja
data16
or
mov
mov
mov
sbb
jmp
ret
loope
rorl
mov
insb
outsb
enter
or
pop
outsl
les
push
cmp
or
addl
lods
push
cmp
jmp
dec
sahf
adc
rolb
es
call
cmp
mov
sbb
jnp
test
push
imul
xor
fisubrl
push
jb
cld
cmp
dec
in
inc
mov
lea
lcall
lock
popf
xchg
jg
clc
rorl
jecxz
sbb
mov
push
idivb
dec
mov
mov
jb
lahf
loopne
aaa
aad
dec
lods
inc
xor
push
dec
sbb
mov
ljmp
jl
subb
cmp
cs
ja
mov
repnz
ficoml
pop
imull
xlat
push
inc
notl
push
scas
pop
dec
lea
cmpsb
sbb
dec
out
jb
sub
push
inc
dec
in
ret
sbb
push
xor
push
and
dec
pop
orb
xorl
imul
mov
mov
cld
fcomps
dec
cmp
inc
xchg
and
push
int
adc
adcl
cmpsl
and
xor
sub
cli
insl
pop
push
xchg
insb
rolb
pop
movsl
fs
pusha
mov
push
pop
cmp
and
add
and
ret
inc
rcl
sti
mov
stc
imul
dec
jnp
pop
adc
test
add
inc
inc
lahf
enter
add
je
mov
and
sub
cmpsb
bound
push
mov
xchg
cld
mov
mov
loopne
mov
sbb
add
dec
cmp
in
adc
or
xor
das
cltd
add
push
lods
out
jge
notb
mov
push
mov
stos
je
fldenv
jns
xchg
in
cmp
jns
inc
dec
mov
push
std
enter
or
push
inc
pusha
sbb
xor
aas
pop
and
jge
jo
pushf
cmpsl
lahf
lret
mov
sub
es
and
add
or
test
or
xchg
test
inc
add
sbb
or
mov
inc
aas
cli
out
mov
pop
cmp
test
xor
lcall
ljmp
cmpsb
addr16
unpcklps
cltd
sub
arpl
xor
xchg
out
sbb
cmp
movsl
jmp
dec
xchg
repnz
sbbl
mov
push
shl
xchg
sbb
xchg
stc
pop
int3
push
hlt
inc
or
pushf
cmp
das
add
sarl
arpl
insb
test
sbb
mov
mov
mov
dec
cmp
cltd
loope
push
adc
cmp
sbb
mov
xor
adc
pop
push
sub
pop
xor
adc
lcall
sub
enter
iret
pop
cld
sbbl
in
clts
push
ss
pop
and
xchg
pop
mov
jmp
std
mov
insb
test
aad
cmp
cmp
mov
cmp
mov
rolb
incb
mov
mov
fcmovne
mov
mov
mov
add
aam
mov
cmpsb
mov
xchg
adc
jg
xchg
add
push
lea
insl
les
lret
leave
clc
dec
sbbl
push
das
decl
xchg
pop
cmp
pushf
adc
shlb
cmpsb
sub
xor
ljmp
mov
push
in
xchg
inc
shrb
xchg
xor
aam
aaa
leave
inc
in
push
push
inc
addl
sbb
jne
mov
test
fmul
and
repnz
and
das
and
mov
lahf
push
mov
push
mov
outsb
push
inc
dec
scas
jns
push
xor
push
sub
jbe
repnz
push
and
xchg
pop
cs
bound
pop
cmp
and
test
or
jno
es
sarb
xorl
hlt
addr16
fistpll
fsubs
daa
lock
sub
jmp
xor
mov
jo
ret
mov
fs
mov
inc
insl
cmp
insl
test
jae
or
adc
daa
icebp
into
mov
jmp
xor
fsubs
pop
xor
and
ja
mov
cmc
cwtl
cmpsb
frstpm(287
or
push
jl
inc
jns
mov
mov
mov
jns
push
dec
imul
add
jbe
dec
movsl
xor
xor
fcomps
cltd
fcoml
clc
jle
movsb
test
popf
daa
push
scas
fiadds
test
push
bound
mov
pop
push
mov
sbb
mov
fwait
jne
mov
xchg
sti
xor
call
xor
dec
mov
xor
repz
add
jl
pop
xchg
xor
popf
push
enter
arpl
test
xchg
cli
push
sahf
cmpsb
out
mov
shll
in
sub
ljmp
sti
cltd
lods
enter
repz
test
cli
jns
nop
inc
add
aas
and
mov
lock
inc
js
mov
adcl
ljmp
pop
mov
das
lods
pushf
shl
dec
pusha
data16
jns
lahf
cmp
add
notb
push
mov
jge
test
roll
and
jnp
mov
mov
sbb
fdivr
push
sbb
in
shrl
inc
ret
stos
mov
mov
adc
cmp
jecxz
mov
push
cmp
dec
shlb
add
clc
mov
imul
das
push
outsb
mov
xor
push
fistpll
sub
adc
stc
adc
sub
cltd
inc
imul
je
gs
push
mov
rolb
pusha
or
dec
dec
mov
rcr
nop
xchg
fucomi
xchg
xor
pop
jmp
jnp
sbb
cmp
dec
jb
shrb
in
pop
adc
push
fs
add
ret
and
icebp
sahf
mov
rclb
jne
ret
push
hlt
into
je
pop
scas
xchg
dec
pop
fstpl
inc
mov
jp
and
sub
pop
fcompl
xor
inc
and
mov
cmp
adc
loop
into
ds
fstl
ficoms
cmp
out
jne
ds
mov
and
jbe
add
adc
mov
std
mov
icebp
pop
loope
xchg
icebp
movsl
fchs
or
in
lcall
pop
in
test
sbb
cmpsb
sbb
mov
xor
and
fisubs
mov
imul
leave
movsl
xchg
andb
pop
pop
outsb
cmpb
and
rclb
sub
aaa
jno
out
cwtl
jge
mov
jnp
push
xchg
bound
imul
adc
dec
and
push
repz
jb
dec
aad
dec
outsl
or
addb
ljmp
je
pmuludq
jns
les
cli
sbb
gs
in
pop
gs
ficomps
dec
lahf
and
jne
sti
push
sahf
js
inc
insl
imul
hlt
xchg
fmull
add
sbb
jb
sahf
jecxz
xor
mov
xchg
lock
mov
iret
popl
mov
adc
testl
lret
xor
cmpsl
and
fists
lea
lods
test
cmc
lahf
das
add
aad
inc
push
xchg
aaa
popf
lds
add
ret
sti
push
es
rorl
or
xchg
nop
mov
shlb
add
push
repz
fidivrs
mov
pop
xchg
add
pop
mov
lahf
testb
add
cmp
adc
sarb
add
xchg
mov
dec
inc
mov
lea
xchg
mov
or
loope
mov
repz
sbb
pushl
and
fwait
outsl
push
xchg
xchg
or
push
inc
xchg
sub
jmp
loopne
mov
fwait
mov
push
mov
lahf
lods
inc
mov
ja
jae
xchg
inc
cmp
sub
adc
in
cld
mov
mov
mov
mov
push
push
mov
or
pop
aaa
sbb
mov
imul
daa
imul
stc
scas
iret
xor
inc
sub
jp
add
mov
sar
aas
jae
ja
lods
adcl
mov
rorb
out
fnstcw
hlt
xor
mov
sub
fcomip
mov
push
adc
mov
pop
push
or
aad
dec
sub
data16
outsb
shlb
and
lods
sti
sbb
mov
push
test
ret
and
mov
movsb
mov
sub
ljmp
shll
jmp
jns
jl
cli
push
pop
pop
lcall
xchg
mov
mov
lret
rcl
sbb
ja
sarl
cmp
push
or
dec
fisttpll
jle
pop
enter
or
popa
cmpb
aaa
and
push
mov
jmp
mov
insl
or
or
mov
sbb
dec
push
aam
aad
sub
test
adc
cmp
xor
xor
xchg
cmpsl
rorb
and
cmpb
repz
mov
push
leave
arpl
test
push
mov
mov
sbb
add
into
push
push
pop
cmp
sub
ss
out
popa
cmp
rcll
xchg
pop
shrl
loopne
shrl
ss
add
add
loope
dec
cwtl
std
gs
insb
adcb
shr
scas
repz
or
or
and
xchg
repz
xchg
push
test
out
stos
fsubrs
xlat
loope
leave
sbb
popa
push
imul
mov
cmpl
aam
mov
aas
jmp
mov
inc
imul
pop
or
or
jecxz
dec
stos
jp
mov
cli
xchg
add
popa
push
fcoms
in
lret
shlb
cld
xchg
loop
lret
xchg
int
lods
mov
shl
lock
scas
adc
popf
sbb
jb
jae
add
dec
cmpsl
mov
push
xchg
fsubr
jg
push
push
in
dec
loop
mov
leave
push
pop
push
push
sti
mov
test
sbb
test
dec
mov
cmp
repz
mov
push
lods
inc
pop
pop
aad
into
data16
fwait
cmpsb
sbb
out
out
dec
jle
arpl
inc
push
or
ds
cwtl
iret
aad
cld
adcl
xor
mov
addr16
mov
mov
fwait
out
dec
mov
out
adc
cmp
xor
inc
ret
test
std
rcll
add
and
push
in
rcll
cmp
test
fldcw
mov
movsl
hlt
das
cmp
push
orl
cmp
jle
or
push
push
mov
not
pop
xchg
loope
fcmovb
pop
xchg
xchg
aaa
jl
add
daa
insl
push
mov
and
in
scas
rcrb
pop
fisubs
mov
cs
or
outsb
out
and
aaa
mov
cmp
dec
lcall
sbb
dec
and
nop
sub
in
out
imul
jno
xchg
int3
inc
adc
out
aad
add
inc
pusha
clc
sti
outsb
mov
mov
dec
fcmove
jno
out
xchg
lret
cmp
and
and
dec
and
fsubrl
xchg
arpl
stc
or
mov
out
xor
in
pushf
mov
jns
scas
inc
repz
cmpsb
push
ja
out
inc
shll
in
add
mov
xchg
in
rorl
pop
or
movsb
adc
sahf
sub
ljmp
push
mov
cwtl
cmp
or
jl
mov
scas
shll
nop
cs
test
pusha
inc
mov
movl
andl
pop
add
jns
sub
jo
push
inc
add
mov
dec
std
out
mov
repz
out
xor
lahf
pop
add
leave
jl
xor
into
push
pop
clc
xchg
jbe
nop
sub
mov
movsb
mov
addl
and
add
adc
pop
imul
in
movsl
popa
arpl
dec
pop
or
cmp
or
iret
mov
insb
rcrb
jns
and
push
mov
je
aaa
fidivrl
pop
xchg
inc
negb
jp
add
test
mov
inc
sbb
xlat
scas
ficompl
rorl
mov
push
dec
orl
mov
and
ja
mov
sbb
xlat
ja
push
mov
push
and
shl
sub
inc
filds
daa
loop
mov
cltd
xchg
push
clc
movsl
jno
cmp
arpl
movsb
push
xor
xor
inc
jno
pusha
sti
cwtl
out
and
jmp
mov
jmp
dec
mov
xor
adc
mov
and
pushf
mov
sub
fmuls
ret
idiv
and
dec
lret
out
aaa
fcoml
cld
mov
in
mov
jb
and
and
push
cmp
inc
and
jle
mov
inc
add
sub
cmp
inc
cltd
adc
jb
std
cmp
xchg
xor
push
test
adc
pop
add
jae
xor
loopne
push
and
js
rcll
or
push
popa
mov
adc
mov
arpl
add
dec
push
xchg
sbb
add
mov
or
in
pop
lods
mov
int3
push
cli
adc
mov
jg
xchg
or
jle
js
push
jecxz
imul
and
lds
in
lret
stos
push
mov
repnz
sub
and
test
push
mov
jns
aaa
push
je
mov
movsb
ror
mov
pop
gs
cli
fidivrs
sti
mov
push
fnsave
andl
stos
mov
xchg
adc
push
jae
xor
jle
xchg
inc
jp
fcmovnb
sub
jae
pop
adc
or
dec
mov
imul
nop
cmp
mov
push
int
hlt
cmp
mov
sub
ljmp
aad
jmp
orl
jge
push
cmp
in
dec
push
rcrb
cmp
xchg
fisubs
fwait
or
mov
mov
popa
or
add
lcall
adc
dec
pop
mov
mov
adc
stos
dec
adc
lea
and
in
ds
xor
mov
mov
jns
push
in
out
jno
inc
in
mov
jns
int
rcll
and
sahf
sub
ret
shrb
and
aas
arpl
xchg
pop
mov
pusha
dec
mov
test
or
mov
xor
adc
jns
pusha
inc
ljmp
xchg
ds
test
imul
mov
push
ficompl
mov
iret
mov
inc
jle
inc
xchg
push
subl
rcl
mov
and
fcoml
outsl
movsl
push
lret
mov
inc
scas
dec
pop
nop
imul
pop
jecxz
in
jge
pop
add
cmp
fstp
sbb
push
xchg
pop
cs
sub
mov
in
mov
jno
jmp
sub
sbb
jl
jle
test
xchg
call
into
or
loop
shlb
nop
or
push
push
inc
add
lea
cmp
dec
les
jg
pop
aam
cmpsl
pop
leave
insl
sbb
pop
leave
in
icebp
add
popa
sub
in
dec
clc
sahf
out
cmp
and
cmpsb
mov
and
jmp
sbb
push
movsb
push
lahf
pop
sbb
loope
pushl
cmp
xchg
inc
add
mov
dec
add
aad
enter
das
cmp
dec
test
mov
cmc
testb
or
fimuls
xchg
sbb
out
fsubrs
mov
aaa
out
cmp
lds
adc
add
cmc
sub
dec
mov
fcmove
cs
mov
lret
js
mov
pop
fcomps
inc
lods
loope
pushf
ret
pop
popf
adc
add
sub
movb
scas
jno
push
and
ljmp
jne
movsb
push
jo
stc
mov
mov
mov
scas
xchg
mov
out
mov
sahf
orl
jns
jo
cld
jp
push
enter
xor
mov
mov
out
dec
sti
cmpsl
sbb
and
jnp
sbb
mulb
out
cmpsb
cld
or
or
das
lahf
into
and
cs
xchg
push
pop
out
into
stc
inc
jecxz
out
push
push
clc
or
inc
imul
jbe
or
mov
push
and
addr16
ficoms
push
mov
push
and
jae
and
movsb
ficoml
ds
push
ficompl
or
add
shlb
inc
fisttps
cmc
pop
icebp
mov
ds
in
out
cmp
mov
mov
push
pop
hlt
jmp
mov
and
fcoml
add
pop
cmp
into
pop
test
mov
push
cmp
sbb
sahf
mov
and
push
popf
inc
adc
movl
jne
adc
jg
lcall
pop
ja
jne
add
pop
insl
decl
lods
cltd
adc
add
push
pop
int
xchg
sub
jl
enter
or
xor
dec
fwait
addb
lret
call
mov
dec
or
adc
jb
push
into
outsl
sbb
mov
inc
sbb
dec
xchg
sub
aas
sbb
mov
dec
cmp
jns
inc
push
out
fsts
pop
lret
mov
pop
jae
cwtl
dec
lret
jmp
adc
xor
pop
mov
pop
ja
insb
ret
adc
aas
mov
mov
rcrb
insl
inc
jne
inc
test
fwait
mov
mov
push
insl
cld
pusha
jns
or
push
push
popa
mov
mov
repz
pop
lret
pop
inc
arpl
in
in
iret
xlat
sub
iret
scas
jbe
jb
outsb
hlt
test
frstor
and
mov
push
dec
push
js
mov
xorl
aas
add
xor
push
bound
add
clc
add
sbb
mov
add
inc
insl
jb
push
das
rcll
lea
sbb
stos
in
mov
lcall
ss
cmp
ljmp
cli
xchg
lahf
push
push
mov
xor
cmpsl
mov
adc
xchg
outsb
pop
popa
jno
cmp
pop
push
pop
cmp
lds
outsl
imul
xor
shrb
jmp
sub
mulb
cmp
orl
idivl
mov
repz
inc
test
in
inc
mov
outsl
push
add
push
lahf
or
adc
add
clc
roll
push
jle
movsb
gs
test
push
cmpsb
int
out
andl
jb
lds
out
or
cwtl
mov
and
rcr
js
sub
jp
lods
push
xor
in
je
clc
xor
imul
mov
push
daa
inc
push
inc
or
loopne
adc
packssdw
push
sbb
clc
mov
call
jmp
lret
cmc
cld
sub
pop
add
mov
or
aas
pop
daa
push
repnz
pop
adc
xchg
and
or
jl
inc
je
leave
lcall
arpl
pop
jno
shrl
aas
sbb
lcall
push
jno
pop
in
orl
or
int
movsl
push
aas
lea
xlat
xor
cs
mov
add
push
dec
push
ljmp
push
mov
adc
and
mov
xor
and
xor
gs
adcb
inc
lods
ja
jle
pop
pop
mov
push
dec
imul
hlt
lret
enter
cwtl
xchg
mov
outsl
push
push
mov
and
fiaddl
fisttps
xor
pusha
jae
mov
pop
adc
in
jecxz
adc
mov
sarb
push
pop
lret
test
int
ss
in
cld
into
push
popa
jmp
out
sub
outsl
aad
inc
int
push
lods
jle
xor
stos
pop
or
idiv
sarb
rclb
shl
mov
mov
mov
imul
mov
int
dec
jg
push
sub
mov
cwtl
fdivrs
sti
out
pop
dec
inc
xchg
pop
adc
push
scas
arpl
jg
sbb
ror
in
xchg
push
sti
cmp
cld
mov
cli
cmp
lods
inc
testl
faddl
arpl
or
push
adc
inc
adc
aad
dec
pop
or
shlb
dec
sbb
into
sub
mov
dec
xlat
mov
push
lods
ljmp
mov
inc
sbb
inc
dec
insl
hlt
pop
and
pushf
push
push
lret
pop
cld
dec
push
test
in
imul
fwait
and
xor
icebp
sub
push
sti
loope
dec
xchg
pop
mov
in
or
dec
inc
xor
ret
xchg
cmp
mov
dec
int3
adc
cli
push
insl
rcr
fisubrs
fwait
jb
clc
jnp
mov
or
sahf
outsb
adcb
xor
pop
mov
fs
xchg
inc
stos
mov
leave
cmpsl
lock
push
cwtl
inc
sub
pop
sbb
es
mov
stos
cli
dec
pop
mov
jmp
leave
lock
rorb
sub
aas
jo
test
pop
daa
xor
jne
jge
pop
mov
test
test
inc
je
repnz
sbb
imul
popf
cmp
sbb
pop
and
add
sbb
insb
fwait
xchg
cmp
or
sbb
gs
nop
aas
push
mov
and
push
ds
lods
clc
sub
fadds
lea
pop
xor
fstpt
repz
mov
push
movsb
mov
push
mov
arpl
add
add
nop
inc
in
xchg
push
inc
movsb
imul
adc
stos
push
dec
mov
iret
fstps
cmp
es
sbb
xlat
mov
xchg
jo
dec
fs
mov
adc
mov
dec
mov
sbb
add
jmp
in
in
rcl
jle
mov
sahf
push
sbbl
sahf
inc
outsl
movd
inc
cmp
scas
repz
test
pop
cltd
cltd
pushf
sub
push
mov
es
fimuls
filds
fidivrl
sub
push
mov
sub
or
jns
subb
xor
cmp
insb
cmp
push
xor
dec
add
inc
pop
inc
inc
lods
push
inc
icebp
insl
or
jecxz
xor
jb
mov
inc
push
fnstcw
addb
or
rcl
add
xchg
xchg
cmp
or
outsl
in
pop
out
xchg
xorb
jno
or
ljmp
cwtl
mov
mov
push
sbb
fwait
enter
fwait
dec
jno
or
xchg
shlb
mov
jb
mov
adc
insw
gs
test
xchg
mov
dec
pop
aad
icebp
fs
into
mov
pop
in
xor
mov
cwtl
sbb
rol
lods
outsl
mulb
sti
out
pop
cmp
mov
lods
and
arpl
sahf
mov
xorl
lret
cltd
ret
pop
inc
xor
cmp
xchg
sbb
ds
enter
jge
cld
add
mov
les
push
inc
js
es
jg
rcll
cmpsb
and
imul
mov
push
push
rcr
inc
lock
rorb
mov
mov
cmpl
frstor
xchg
lret
mov
lret
je
aam
sub
mov
inc
mov
dec
and
cld
cmp
repz
pusha
fsubrl
rorl
jb
sbb
pop
shlb
mov
lahf
push
push
sbb
sub
int3
in
insb
popa
idivb
std
movsb
jl
xor
mov
add
call
jp
lea
mov
movsb
fwait
roll
loop
mov
push
sbbl
daa
adc
lret
mov
hlt
lock
out
push
loope
add
fcmovnbe
lahf
push
jp
mov
iret
xor
dec
and
cmp
cmc
arpl
mov
xchg
cmp
adc
scas
int3
fldenv
sbb
dec
lods
or
subb
cmc
arpl
mov
je
test
aas
mov
dec
nop
pop
mov
or
filds
push
and
js
mov
dec
mov
xor
mov
push
leave
das
inc
sbb
nop
out
in
dec
mov
lods
pop
mov
mov
es
lds
jbe
aad
fwait
mov
inc
mov
xor
add
ja
mov
pop
dec
test
sbb
rcrb
mov
inc
arpl
test
jg
ss
adc
jg
arpl
lret
inc
jecxz
mov
hlt
jp
repz
dec
mov
rol
lods
fdivl
push
mov
xchg
imul
clc
pop
lods
imul
out
sbb
xchg
jle
pop
add
jae
lock
int
mov
inc
adc
arpl
insb
jo
testb
dec
jmp
sub
jp
loope
or
mov
int
dec
inc
subl
xor
sbb
or
inc
jmp
shlb
mov
xlat
sbb
testl
adc
pop
adc
fldenv
lods
aad
jns
lea
test
daa
cmpsl
adc
icebp
mov
mov
push
xor
pushf
out
mov
rolb
jg
mov
dec
mov
or
mov
stos
adc
bound
inc
inc
or
sub
sbb
jecxz
jb
out
fildl
mov
or
lret
icebp
inc
daa
mov
imul
adc
arpl
ljmp
popf
cld
cmp
mov
add
or
push
mov
jae
cwtl
in
push
icebp
xor
jmp
jmp
aas
xchg
fdivr
enter
xchg
lcall
push
pop
lods
add
call
div
std
rorb
jecxz
outsl
inc
ret
and
inc
out
icebp
mov
jg
or
repz
add
montmul
cmpsb
inc
xchg
pop
push
shll
push
addr16
or
jle
mov
daa
mov
fisttps
sbb
mov
jle
push
cwtl
fcoml
inc
rcl
ja
xor
popl
cltd
and
cld
xchg
jnp
jp
ret
in
pop
sti
push
test
pop
xorb
pop
movsb
fucomi
pop
or
mov
jp
jbe
add
inc
and
test
fnstsw
xchg
sub
pop
into
xor
pop
mov
sbb
xchg
inc
push
jae
pop
push
or
sub
jno
fldcw
inc
dec
or
pop
jo
fwait
out
xor
mov
aad
inc
imul
jecxz
les
mov
jnp
imul
mov
cmp
xor
addr16
cmp
mov
push
loopne
loope
dec
icebp
push
jnp
iret
lret
rolb
int3
test
lds
cmp
and
orb
cmpsl
mov
add
xchg
sub
daa
insl
lds
add
cmp
jb
adc
mov
mov
jb
mov
sbb
sti
pushf
xlat
and
and
in
sti
inc
dec
sbb
mov
xor
push
lcall
sbb
mov
mov
cmc
loopne
xchg
cmc
lds
inc
xchg
daa
push
int
ja
test
fs
incb
mov
fists
cmpsb
push
sub
mov
std
sbb
fs
in
into
lret
pop
in
add
xor
or
mov
push
outsl
cld
pop
out
shrb
jb
pop
subb
jle
fldl
les
clc
xor
stos
mov
pushf
add
sbb
iret
mov
inc
sbb
and
mov
jne
fiadds
push
cltd
fidivs
jecxz
adc
pop
xlat
test
aaa
ja
das
into
or
mov
mov
or
add
add
mov
mov
or
aad
mov
les
mov
sbb
stos
xor
imul
loope
aas
xor
mov
mov
loope
idiv
push
mov
adcb
arpl
std
repnz
test
cmp
sub
pop
dec
and
lcall
jo
aaa
andb
fdiv
xchg
xor
es
pop
fimull
xor
cld
sbb
repz
mov
mov
fistl
cmp
cmp
aas
and
int
pop
mov
stc
fst
pop
lock
add
push
out
mov
lods
jg
aas
jmp
fwait
rorl
divl
cmp
dec
cltd
push
push
data16
sub
lret
loope
add
addr16
pop
mov
sbb
mov
sbb
fbld
sbb
call
out
jno
inc
add
lods
add
push
add
repnz
or
sbb
divb
mov
push
jg
ss
lret
pop
stos
mov
mov
fsts
faddl
cld
add
int
jnp
xchg
and
rol
mov
addr16
lea
scas
cmp
outsl
repz
test
dec
mov
xchg
dec
call
mov
hlt
fmuls
out
lcall
lret
cs
test
loope
aam
cmpl
jno
leave
xor
cmp
cmp
jns
or
jnp
in
adcl
adc
sbb
pusha
test
inc
ror
jle
or
lcall
aaa
rcl
pusha
push
or
bound
jl
jg
sbb
mov
pusha
mov
xor
fwait
loop
int
and
in
aad
bound
inc
popf
or
cwtl
lock
jno
or
push
jo
jecxz
push
lock
adc
dec
insl
sbb
repz
fisubs
xchg
shrl
in
push
cmp
mov
scas
fldt
sbb
mov
insb
fwait
lcall
push
jp
lods
cmpsb
jnp
mov
aad
dec
xor
mov
push
das
andb
nop
mov
xorb
orb
sbb
aad
test
xlat
xchg
lea
mov
sbb
inc
nop
ja
das
mov
fsubl
sbb
flds
outsl
pop
shll
cli
ds
mov
xor
add
int
rol
andb
call
add
shll
lea
xor
rcll
leave
lcall
ror
clc
bound
sub
adc
mov
cmp
sub
push
in
popa
dec
dec
mov
sti
jnp
push
or
es
jne
add
fildl
add
xor
hlt
int3
mov
xchg
leave
mov
imull
mov
dec
pop
pusha
lods
mov
aaa
loopne
pextrw
jae
int
cmp
ss
jbe
int3
xchg
jp
and
fildl
ss
pop
insb
xchg
and
lea
arpl
cld
xchg
dec
pop
stos
jne
popa
dec
and
in
add
cli
jg
xor
arpl
shrl
shl
mov
sahf
iret
mov
cmpsb
and
pop
stc
and
mov
daa
popf
push
ja
lock
mov
out
stc
mov
addr16
xchg
rorl
out
int3
mov
insb
sbb
sbb
hlt
and
rolb
mov
daa
and
leave
stos
mov
inc
outsl
mov
pop
dec
sbb
or
jmp
gs
repz
je
and
out
mov
mov
dec
pop
repz
sbb
test
or
test
jno
xor
inc
popf
mov
adc
xchg
jmp
inc
ss
cld
outsb
pop
idivl
in
fs
loope,pn
sbb
lock
test
mov
leave
je
jb
das
mov
sub
int
cmp
repnz
movsb
mov
mov
fwait
add
sbb
insb
seto
out
jecxz
stc
sbb
sbbl
xchg
xchg
pop
movsb
hlt
iret
stos
jae
idivb
mov
cmp
cmpsb
rolb
cmp
xor
gs
pop
jo
aaa
jns
cmpl
push
mov
fnstsw
cltd
xor
sub
sbb
mov
mov
das
adc
inc
push
sar
xchg
ret
xchg
fstpl
or
mov
ljmp
sub
sti
and
mov
ds
out
out
into
std
fwait
xchg
jmp
int3
and
gs
push
popw
hlt
xchg
fidivrs
in
jno
inc
mov
xor
push
and
jp
mov
inc
arpl
ljmp
das
ja
sub
fimull
bnd
push
ss
mov
shrb
cmc
jne
mov
xchg
loop
sub
imull
xchg
and
xorl
adc
movsb
mov
cmp
xor
mov
mov
in
adc
cmp
iret
mov
insl
stos
js
int
arpl
imul
test
lds
and
insb
xor
xchg
add
sbb
sahf
daa
jmp
pop
arpl
jnp
loope
sbb
xchg
adc
inc
sbb
in
mov
sbb
jge
daa
rorb
jle
adc
insb
add
icebp
fcmovne
cmp
and
mov
and
scas
cmpsb
xor
ret
or
fs
rorb
jmp
dec
sarl
int3
scas
iret
inc
sbb
int3
push
xor
into
daa
inc
or
jle
aad
sbb
rcll
mov
jg
adc
sbb
inc
addb
stc
or
add
xor
jp
pop
push
incb
or
push
into
inc
xor
cmpsl
push
mov
fs
loopne
js
call
xor
and
dec
in
xor
mov
push
inc
loop
inc
sbb
rolb
out
push
push
add
jmp
push
mov
push
xchg
shl
lods
in
inc
cmp
push
pop
icebp
mov
sub
add
xchg
push
and
sub
or
mov
pop
and
add
xor
pop
dec
call
xor
adc
shll
cmpsl
aas
and
int3
sbb
daa
arpl
jl
push
cmp
clc
popa
ret
cs
addb
or
and
scas
in
or
sbb
and
das
in
push
sti
cmc
cmp
inc
mov
scas
in
pop
in
adc
std
shl
test
pop
and
enter
xchg
loope
xchg
sub
mov
movl
stc
movsb
pop
daa
stos
adc
fidivrs
fsubrs
or
add
out
sti
icebp
pop
cwtl
mov
push
or
das
ret
out
out
sti
xor
xor
add
adc
and
jb
flds
hlt
inc
fisttpll
ds
hlt
outsl
jno
pop
int
add
pop
test
test
int3
xchg
in
call
pop
jmp
in
push
push
sub
loope
jle
pop
int
enter
mov
sub
loopne
fbstp
cmp
adc
icebp
les
dec
pop
adc
insl
mov
mov
mov
push
mov
adc
popa
testb
and
mov
loop
and
push
repnz
mov
dec
std
fidivrs
jne
ljmp
mov
aad
jg
add
pop
and
cmp
movsb
add
ljmp
xchg
adc
neg
push
shlb
lds
insl
mov
fbld
repz
pop
mov
xchg
data16
fistl
xorb
pop
adc
call
stos
shlb
jle
xor
dec
test
push
inc
das
or
repnz
xor
push
cli
icebp
push
loopne
and
and
sbb
and
enter
sub
pop
lret
loopne
mov
cmp
xor
mov
sub
jge
insb
daa
jge
push
imul
xor
push
or
xor
mov
push
mov
movsb
insl
pushf
or
dec
shrb
int
adc
outsl
mov
repnz
cmp
rcll
jb
rcrl
iret
movsb
pop
mov
popf
lahf
cli
rorb
jne
cmp
aad
jge
cmp
fisttpl
mov
ljmp
mov
rcrb
pop
iret
jp
push
shl
lret
sub
adc
lret
cmp
shrb
pop
stc
xchg
shlb
dec
lods
adc
or
jl
or
stc
mov
andl
inc
mov
mov
dec
adc
dec
mov
divl
add
iret
push
push
xor
dec
xlat
fcoms
or
mov
push
ret
ljmp
mov
jae
pop
sbb
arpl
rorb
ljmp
fwait
xor
adc
call
jae
add
dec
ja
mov
push
jae
jo
call
add
je
mov
popa
mov
push
insb
inc
cwtl
cwtl
cmp
adc
cmp
push
aam
lds
popa
cmp
popa
in
adc
and
mov
hlt
mov
ds
test
cmpsb
push
faddl
dec
pushf
push
adc
jg
in
cltd
dec
mov
sub
fiaddl
inc
loopne
movsb
inc
fldenv
inc
sbb
mov
fwait
mov
hlt
ffree
sbb
push
arpl
sub
jns
push
mov
and
mov
js
inc
xchg
and
mov
lret
jp
jg
std
repz
decl
in
in
jmp
ja
stos
cmp
out
xlat
mov
xchg
into
dec
sbb
ret
rep
cmpsl
test
add
xlat
icebp
push
sbb
lods
popf
inc
jo
cmp
xchg
cmc
fdivrs
dec
aaa
cmp
imulb
cmp
add
pop
and
mov
test
je
and
pop
fucompp
xchg
jecxz
dec
fcoms
adc
jmp
mov
shl
repnz
jl
dec
jno
or
add
mov
bound
daa
mov
test
fisubl
fsubr
jl,pn
or
or
adc
push
and
stos
push
ficomps
ds
insb
push
dec
push
iret
out
xchg
cmc
addr16
fwait
lock
jbe
pop
xor
jbe
mov
or
fidivl
push
adc
mov
mov
adc
push
pushf
add
sub
in
rcl
jbe
mov
orb
clc
ljmp
dec
xor
ljmp
push
jmp
out
dec
cmp
inc
inc
xor
imul
test
pop
cli
int
jmp
inc
sbb
repz
mov
mov
inc
dec
mov
cmp
and
dec
test
aaa
mov
and
repz
outsb
xor
out
enter
stos
ss
push
nop
idivb
xchg
mov
and
pop
sbbl
ds
into
rcrl
fwait
push
fistpl
and
aas
cs
cld
dec
jnp
jmp
pop
mov
int3
and
lea
les
sti
mov
nop
out
xor
ljmp
call
cwtl
movsb
sub
cli
int3
pop
or
mov
add
out
sbb
dec
jbe
in
sbb
adc
add
insl
push
loope
dec
cld
mov
idivl
mov
in
inc
in
loop
cmpsb
cld
or
inc
inc
ret
mov
inc
sbb
xchg
xchg
jl
and
inc
loop
jnp
or
imul
sub
dec
rclb
in
inc
das
adc
mov
in
pop
or
pop
std
lcall
lock
and
cmp
sbb
dec
mov
and
shll
cmp
mov
mov
outsb
push
cmp
cmpsl
xor
mov
clc
hlt
push
out
ret
je
aas
mov
test
addr16
adc
jg
cmp
xchg
xor
adc
scas
adc
dec
mov
jmp
cld
stos
sub
add
ret
xor
jg
xchg
fwait
pop
pop
dec
dec
gs
mov
shrb
fnsave
mov
sub
into
pop
out
scas
or
push
cmp
xchg
ss
in
fsubr
or
or
sub
xchg
mov
lock
xrelease
fsts
loop
dec
fnstcw
gs
xchg
add
aaa
pop
push
fists
sub
out
mov
mov
pop
mov
fimull
cmp
ss
bound
lret
jbe
cmp
inc
jle
imul
fwait
xor
mov
add
sbb
imul
xor
xchg
jle
pop
pop
mov
mov
jbe
add
and
pop
mov
imul
xchg
push
rolb
jb
xor
daa
pop
lret
js
mov
out
repnz
dec
scas
mov
push
dec
insl
jb
jb
dec
fs
inc
lret
test
add
push
mov
xchg
inc
cs
adc
into
mov
cmp
cmp
int
mov
lcall
popf
mov
mov
test
les
addr16
popf
inc
shrb
bound
pop
add
movsl
pop
ds
rorb
jl
test
add
adc
outsb
xor
or
inc
cs
fisubs
inc
xchg
shr
out
popf
in
ja
imul
loop
ja
stc
dec
scas
pusha
mov
leave
cmp
mov
into
lods
inc
xchg
scas
je
ja
std
loop
push
or
rolb
lods
sbb
rcll
jno
jl
mov
aas
dec
ret
mov
mov
stos
ret
ja
aam
or
jne
push
js
pop
addb
mov
mov
fs
addl
xchg
jns
scas
push
rorl
xor
in
mov
popf
in
das
push
adc
mov
inc
jnp
jb
sbb
mov
test
and
lock
mov
imul
shlb
cwtl
push
dec
icebp
pop
bound
mov
lret
lret
fdivrs
jno
jbe
shl
jb
dec
fsubr
sbb
mov
and
inc
sbb
rcl
and
in
pop
stc
pop
mov
push
in
sbb
lods
enter
jmp
js
out
xlat
fidivrs
adc
js
inc
and
cmp
mov
jl
shlb
sarb
div
mov
dec
nop
dec
mov
jo
push
lods
fwait
scas
test
dec
cmpxchg
dec
pop
cmpsl
ret
jg
inc
add
push
shr
sbb
fwait
subl
jns
inc
push
movsl
mov
test
inc
push
arpl
inc
fdivl
bound
mov
push
rorl
stos
ret
adc
jge
jecxz
sub
cmpsb
dec
dec
aam
add
scas
mov
in
loop
mov
test
push
push
out
mov
mov
xor
dec
aam
fisttpl
or
iret
fs
loopne
cmp
mov
or
sbb
lea
xor
popf
shr
pop
mov
adc
sbb
adc
ret
sbb
lcall
lret
inc
pop
dec
mov
mov
aam
inc
xor
mov
cwtl
aad
dec
jne
insb
iret
adc
sbb
add
out
xlat
iret
sbb
or
mov
out
jb
mov
fists
in
inc
adc
jne
mov
xchg
jp
mov
cmp
jecxz
jge
push
aad
imul
andl
mov
cmp
outsl
mov
xchg
aaa
sub
out
mov
sti
xor
shll
mov
and
mov
test
fsubs
ds
dec
inc
loopne
nop
jecxz
popf
jbe
mov
mov
sub
cmp
frstor
xchg
jo
and
inc
cmc
aam
mov
sbb
das
jb
mov
mov
jg
addr16
mov
inc
fldcw
dec
scas
adcl
dec
mov
mov
adc
push
push
imul
mov
and
out
cmpsl
sar
rep
stos
dec
jmp
dec
push
in
test
mov
lret
mov
add
loop
lcall
adc
jo
xchg
mov
clc
fcom
sub
jbe
inc
jecxz
aad
out
call
mov
leave
lods
push
inc
dec
cmpsl
js
mov
fs
lods
mov
adc
and
mov
cmp
jle
sbb
cmpsl
mov
int
jmp
movsl
sub
bound
ljmp
jae
insl
or
clc
jbe
xchg
dec
push
pop
adc
add
sub
adc
rorb
setae
mov
mov
sub
loopne
push
jnp
les
fs
pop
pop
fwait
pop
jp
aaa
outsb
mov
in
aas
adc
jo
rclb
push
inc
lea
mov
sub
inc
call
nop
and
call
sub
mov
adc
or
jecxz
cwtl
xor
enter
cli
or
hlt
les
jo
xor
mov
cmp
aad
xchg
pop
pop
xchg
jns
mov
adc
lret
pop
xor
aam
push
cmp
fidivl
mov
test
xor
loop
movsb
or
js
repz
push
ficoms
xchg
shll
or
outsb
data16
push
fnstenv
pop
xchg
sbb
hlt
jmp
adc
add
push
push
pop
pop
or
jbe
xchg
mov
push
xor
test
loopne
loop
xor
mov
mov
mov
pop
push
das
fwait
imul
xchg
addb
mov
adc
mov
pop
shl
cltd
mov
inc
jno
dec
jnp
inc
in
data16
push
rorl
mov
sub
ss
lods
in
not
ja
std
or
fimuls
cmpsb
adc
rolb
shl
movhps
jp
xchg
into
jg
fldenv
test
jge
and
pop
mov
xchg
sti
dec
sahf
cld
ja
aam
mov
and
mov
cmp
hlt
push
xlat
mov
fcmove
repnz
jnp
sbb
push
stc
and
sbb
sub
adc
bnd
movsl
cld
ljmp
push
imull
jbe
xchg
dec
jge
aam
add
mov
xchg
lods
push
mov
push
inc
ljmp
cwtl
mov
and
push
mov
dec
jmp
or
push
mov
sub
pop
addr16
or
or
lahf
in
adc
sbb
mov
xchg
std
sti
pop
jne
out
pop
sbb
jl
scas
cmpsb
stos
js
add
lods
jl
sub
or
lods
jne
mov
cmpl
mov
mov
arpl
subb
push
sti
aad
rcrl
and
popa
icebp
aad
dec
gs
dec
mov
push
sbb
push
jae
adc
test
mov
not
movsl
ret
cmp
add
stos
jle
mov
push
and
mov
out
inc
dec
or
rorb
in
pushf
imul
fsubs
push
clc
das
test
xor
pop
insb
rol
xor
pop
outsl
mov
mov
push
scas
pop
arpl
pop
aad
in
jmp
xchg
dec
xor
insl
xor
cmp
insl
xchg
adc
das
pop
mov
dec
data16
sbb
sbb
xlat
idivl
sti
xor
mov
mov
mov
jo
mov
and
pop
or
lcall
sbbl
daa
cmp
outsb
xchg
adc
movsl
jmp
iret
lods
dec
mov
cwtl
adc
imul
pusha
xor
and
pop
jbe
or
jg
xchg
inc
rcrl
pop
sbb
in
mov
leave
hlt
inc
incl
pop
fdivrl
push
aas
xchg
mov
cmpsb
dec
sbb
lret
fwait
pop
movsb
jecxz
cmpl
insb
test
xchg
frstor
xchg
loopne
cmc
mov
xchg
jnp
sahf
sbb
aas
call
pop
dec
test
mov
insl
and
pop
aad
movsb
rol
aam
fwait
pop
les
sarb
test
pop
adcb
xchg
adc
pop
inc
enter
or
push
lock
pop
jb
icebp
addb
mov
sbb
push
jle
pushf
and
int
mov
aaa
xchg
lds
aad
pop
xchg
pop
cmpsl
dec
xor
hlt
dec
jge
lret
hlt
push
jmp
fwait
movsl
sub
jp
test
mov
xor
popa
setno
lds
shlb
xchg
mov
fwait
push
jmp
jbe
test
orl
jo
test
lods
jp
inc
aas
in
out
mov
xchg
lods
mov
fsubrl
loope
cs
or
rcrl
fidivrl
jne
mov
neg
inc
push
fcmovnbe
inc
scas
xor
mov
outsb
inc
arpl
jg
sub
jo
xchg
pop
adc
scas
xchg
or
push
jp
in
dec
das
mov
and
je
insl
mov
cld
adc
call
pusha
les
or
rcrb
ret
decb
xor
ret
sub
pop
inc
sahf
test
fadds
mov
ret
cmpsl
inc
in
daa
xchg
adc
adc
mov
xchg
lret
jecxz
mov
lret
inc
pop
fcompl
cli
dec
sbb
enter
in
xor
leave
mov
jb
sbb
jae
inc
and
inc
xchg
pop
jo
jp
or
dec
push
and
add
repz
add
xchg
shll
pop
pop
int3
data16
push
jecxz
gs
push
in
push
pop
roll
inc
fsubrl
icebp
cmp
jbe
push
and
and
fdivrs
stc
xchg
leave
lods
fstpt
adc
sbb
daa
add
xchg
icebp
popf
ret
push
aas
loopne
iret
push
dec
and
leave
addl
popl
lea
adc
xor
lea
mov
je
adc
xchg
adc
mov
repz
sti
or
xchg
out
out
sub
xchg
push
dec
cmc
adc
mov
xchg
aad
insl
jo
xor
lea
adc
inc
lods
les
in
cmp
jb
in
jl
add
and
nop
fidivs
pop
repz
test
popf
mov
push
push
repnz
pop
cltd
push
adc
idivl
inc
or
js
xchg
jge
xchg
enter
sub
jle
xor
std
cmp
cmp
aad
push
lahf
or
mov
std
jne
inc
and
mov
testb
cmpsl
sahf
icebp
scas
test
pop
adc
cs
xchg
push
repz
or
pop
pop
xchg
iret
les
inc
or
fstp
imul
inc
sarb
imul
sti
mov
cs
mov
fs
inc
or
rolb
cmpsl
cmp
je
mov
pop
lds
fs
mov
sub
fs
stc
pusha
addl
dec
cmpsl
mov
inc
arpl
add
nop
or
ss
movsl
sbb
sbb
mov
sbb
sub
imul
nop
or
mov
cwtl
in
adc
mov
icebp
lea
sahf
int3
mov
pop
or
roll
mov
movsl
les
test
xlat
mov
mov
aaa
loopne
sub
mov
add
in
dec
adc
repz
jb
mov
shrl
fadd
xor
cmp
nop
cmp
addr16
movsb
push
push
pop
or
mov
test
xchg
mov
lea
cmp
inc
fldenv
je
pop
inc
add
add
cmpsl
ret
dec
jecxz
adc
and
frstor
imul
aam
es
push
add
or
shlb
dec
cmp
and
test
outsl
bound
cltd
adc
push
jns
ljmp
aad
mov
popf
orl
pushf
dec
push
data16
dec
bound
sub
jge
and
incl
inc
insl
pushf
rolb
insb
fsubrs
mov
rclb
cld
popa
hlt
aad
inc
out
mov
stos
push
gs
cmp
mov
inc
imul
and
jp
mov
mov
xchg
lret
push
fprem
dec
jmp
push
xchg
mov
mov
mov
loop
xchg
or
pop
mov
fcomp
rcll
xor
add
rcrl
nop
je
lahf
shrl
icebp
mov
aam
xor
or
scas
push
or
and
pop
stc
dec
sbb
std
jb
xchg
jae
subl
sar
jo
ljmp
add
sub
mov
iret
mov
mov
lret
jmp
cmp
outsb
push
pop
rclb
dec
jno
mov
aas
mov
sti
or
lods
jo
jae
test
movsb
sbb
push
dec
daa
outsl
mov
cmp
jmp
mov
stc
push
xchg
cmp
mov
xor
pop
add
jno
mov
pop
in
inc
pop
sub
cmpsb
jae
lods
fsubrl
fiadds
and
jo
stc
dec
sahf
scas
dec
push
aam
imul
arpl
outsb
add
and
lods
insl
sub
stc
xchg
or
lahf
movsb
pushf
fcoml
cmp
jp
mov
cmp
push
ret
rcrb
inc
cli
lret
and
adc
inc
adc
mov
push
cmp
pop
sub
dec
addr16
inc
mov
test
das
in
mov
movsb
movsb
icebp
xchg
lret
push
mov
dec
add
faddl
lods
pushf
xchg
adc
mov
push
rcrb
push
divl
iret
lods
pop
xlat
jo
cmp
shl
cmp
lock
into
in
mov
cmpsb
sub
cltd
test
nop
jo
aas
mov
push
rorb
pop
std
iret
aad
mov
lods
push
arpl
shlb
js
xor
sbb
jne
adc
rol
push
test
xchg
mov
jmp
pop
mov
mov
add
test
clc
dec
pop
and
mov
ljmp
jns
jno
push
in
in
movlps
dec
add
mov
sti
stos
sub
repz
fmuls
ljmp
je
fs
xchg
mov
xor
inc
inc
pop
or
fwait
cmpsl
lahf
hlt
les
sarb
rcrl
jno
pop
jb
push
pop
test
movsl
mov
sbb
sub
inc
ret
xchg
aad
jecxz
mov
sub
ja
add
pushf
test
cld
sub
imul
mov
sub
jae
xchg
inc
shll
ss
push
add
jmp
sahf
mov
sbb
cwtl
bound
jle
inc
aas
sahf
jmp
arpl
cmp
push
xor
mov
lahf
cmp
aas
mov
adcb
and
repnz
jno
pop
lea
outsl
aam
add
jno
cmp
sub
jecxz
in
orl
clc
jb
mov
pop
jae
and
mov
inc
cmp
inc
gs
dec
xor
adc
repz
and
push
jns
repz
inc
aaa
aaa
insl
fstps
cmpsl
mov
cmc
add
repz
cmpsl
sarb
adc
aaa
in
ret
xor
outsb
shll
mov
ljmp
js
xlat
jno
dec
push
mov
popa
xor
aas
push
push
std
rcr
push
and
xor
stos
mov
hlt
add
mov
je
xlat
stos
rcl
jae
nop
add
shlb
fisttps
xor
int3
cmc
jecxz
shlb
sbb
xor
jns
pop
adcb
lods
jmp
inc
jge
push
sbb
sub
xor
jae
pop
jp
cmp
in
add
call
fsubrl
adc
fnsave
ljmp
dec
shlb
pop
andb
mov
fstpl
adc
mov
iret
inc
jne
mov
mov
sbb
and
div
clc
mov
fstpt
mov
arpl
test
push
add
in
pop
xorb
cmp
lcall
fadds
or
es
sbb
jp
fdivrs
test
jmp
fwait
and
rclb
push
and
mov
ja
cmp
mov
clc
add
pop
into
and
sti
or
gs
aas
mov
lret
or
xchg
mov
dec
outsl
sbb
jne
mov
dec
cmpsb
es
sbb
stos
cmp
iret
jno
setp
mov
xchg
mov
je
js
out
xchg
sub
jbe
es
das
sub
test
test
cld
mov
inc
scas
addr16
out
mulb
stos
jl
repz
cmpsb
mov
dec
pop
jge
fs
mov
xor
aam
jne
pushf
popf
dec
inc
mov
leave
sbb
and
jns
sub
sbb
xlat
sbb
int
or
testl
out
pop
or
sbb
cwtl
hlt
inc
and
or
add
add
inc
testl
scas
mov
jecxz
pop
je
add
inc
and
dec
es
cltd
mov
fstl
push
leave
mov
push
pop
adc
arpl
push
int
sbb
rorl
inc
imul
aad
pop
add
push
or
jecxz
xor
mov
push
popa
xchg
scas
out
mov
fwait
jbe
ljmp
and
cmp
ret
push
sbb
dec
adc
mov
pop
or
es
push
ret
loop
mov
test
push
negl
icebp
insl
mov
dec
repz
outsl
dec
sbb
jle
jnp
pushf
pop
std
add
dec
mov
das
inc
push
sub
inc
fadds
sbb
ljmp
fmuls
aas
push
andl
mov
adc
in
in
leave
and
dec
lcall
scas
pushf
pop
pop
and
xor
push
pop
or
jmp
pop
lret
ficoms
stos
adc
adc
and
sub
movsb
movsb
out
pop
call
xchg
sbb
mov
adc
jp
mov
xchg
dec
loope
fsubrl
and
ja
mov
loop
adc
push
xor
and
mov
dec
sub
push
push
cmp
and
pop
enter
stc
mov
filds
into
push
mulb
sbb
sbb
rclb
push
cmpsb
xchg
pop
cmp
call
jae
cwtl
dec
sbb
jnp
iret
pop
negl
into
nop
call
mov
add
inc
les
scas
cmpsl
dec
jns
inc
inc
subl
fisubl
pop
xchg
out
jbe
fstl
mov
sbb
xchg
sbb
adcb
loope
mov
sub
rorb
pop
jnp
sbb
jmp
aam
push
stos
sbb
ja
sbb
lahf
mov
or
gs
call
iret
xchg
lods
rol
xchg
and
mov
adc
cmp
ds
pop
push
add
lods
cmp
jb
adc
ror
xor
sub
jnp
dec
cwtl
jnp
push
das
xor
fisubl
mov
xchg
mov
and
push
nop
ds
xchg
pop
mov
sti
inc
jnp
lcall
push
inc
jl
and
xor
hlt
ljmp
rdtsc
inc
in
sub
insb
add
cltd
push
movsb
movsl
mov
sub
or
xor
rcll
data16
or
daa
in
je
stos
ljmp
adcb
leave
xor
sbb
push
or
and
push
sbb
sbb
jmp
movsbl
in
pop
lcall
xchg
jmp
push
fldl
pop
sub
push
xor
push
xor
mov
push
js
mov
gs
mov
sub
cmc
xor
xchg
sbb
or
imul
push
inc
iret
movsb
pop
lods
ret
fnsave
push
pop
inc
push
xchg
cmc
push
repz
fisubrs
mov
sub
or
mov
incl
xor
cli
das
rolb
mov
test
sub
dec
push
dec
imul
outsl
add
ljmp
movsl
shll
leave
mov
sub
aaa
scas
ficomps
mov
xchg
aad
push
add
mov
dec
movsb
outsb
aad
fidivrl
pop
shll
subb
daa
cmp
inc
test
jg
fnstcw
dec
adc
push
cltd
and
xor
mov
cwtl
pushf
cmp
dec
mov
outsl
insl
mov
js
jbe
stos
sti
int
mov
je
inc
dec
test
dec
cmp
xor
ret
test
fimull
lock
inc
mov
push
fwait
push
mov
mov
les
int3
push
dec
je
lods
push
push
push
fwait
mov
lods
add
sbb
fdiv
ret
pop
cmp
cmp
xor
ljmp
xchg
bound
pop
aam
lods
xor
add
mov
pusha
mov
in
gs
fcmovbe
cmp
mov
inc
sub
mov
mov
lret
gs
stc
push
xchg
mov
hlt
pop
hlt
cmpsb
mov
jp
lret
pop
sbb
lods
inc
insl
push
dec
iret
push
test
bound
in
insl
loop
mov
xchg
mov
aad
mov
scas
xchg
fmuls
subb
sahf
psubw
jae
imul
stos
sub
pop
inc
push
sahf
pop
inc
ljmp
xlat
pop
jg
xchg
mov
fstp
sub
mov
int
xchg
in
and
fstl
std
and
mov
xchg
iret
scas
test
inc
mov
adc
push
mov
insb
pop
mov
cmp
push
sub
aam
fimull
add
xchg
pop
test
stos
notl
inc
enter
xchg
dec
dec
lods
imul
pushf
mov
mov
mov
and
add
sbb
in
xchg
rclb
mov
add
mov
sub
jle
xchg
sub
divb
cmp
testl
shl
pop
fstp
in
test
repnz
xchg
jb
jecxz
cmp
ljmp
mov
mov
in
pushf
stc
loop
shrb
mov
or
mov
popa
mov
xchg
jbe
add
stc
ret
mov
filds
dec
mov
mov
es
cmp
andl
xchg
scas
jmp
ljmp
arpl
cltd
clc
adc
xchg
gs
leave
insb
out
push
or
xchg
inc
mov
setne
popa
ret
dec
mov
testb
push
lods
into
sti
jge
lahf
fcmovne
jb
cmp
sub
mov
mov
mov
scas
inc
test
sbb
arpl
adc
cs
rorl
outsl
sub
sub
jge
jecxz
movsl
jb
adc
imul
inc
dec
pop
dec
mov
push
cwtl
inc
xchg
adc
das
pop
jecxz
xchg
push
push
pop
ret
sbb
movsb
push
rcll
addl
popa
orl
jmp
gs
sbb
xchg
fdivs
pop
inc
pushl
test
std
mov
add
ret
adc
jmp
out
into
lds
daa
out
loopne
movsb
data16
hlt
adc
mov
mov
sub
and
push
mov
mov
mov
out
cltd
push
xchg
mov
xor
dec
mov
data16
inc
out
and
cmc
ds
imulb
adcl
jge
cmp
or
gs
mov
push
arpl
cli
mov
inc
mov
pop
fisttpll
stc
cmp
outsb
daa
push
fwait
and
or
add
nop
jns
int3
cmp
stos
out
push
leave
pop
mov
insb
into
cmp
loope
stos
mov
pop
inc
mov
test
inc
dec
sar
in
jp
in
mov
add
and
jp
xor
xchg
add
outsb
pop
sbb
mov
ja
rorb
inc
jge
xchg
iret
xor
sahf
gs
jle
mov
movsl
test
add
scas
sub
xor
pop
ror
or
pop
jecxz
sahf
shll
imul
pop
pop
inc
and
dec
imul
inc
xchg
lds
jmp
cmpl
xchg
stos
ja
in
mov
movsl
es
xchg
mov
xchg
sub
dec
into
cli
mov
jle
jb
push
mov
jge
outsl
jmp
roll
jns
jl
leave
cmp
out
cs
cmc
jnp
jbe
pop
jmp
test
imul
ss
mov
jne
pop
fcmove
or
aad
lods
adc
fabs
std
adc
or
add
sbb
pop
ss
test
mov
dec
push
int3
nop
mov
mov
std
mov
sbb
jecxz
fwait
sub
lods
inc
sub
sahf
jp
push
sub
rorb
fwait
add
mov
pop
js
or
mov
int3
lahf
addl
out
push
push
rcrb
xlat
push
out
mov
jnp
mov
adc
loope
test
pop
push
mov
mul
mov
pop
mov
push
sahf
pop
push
pop
sbb
mov
add
mov
test
xchg
push
mov
fdivs
and
mov
int3
xor
mov
dec
sarb
icebp
add
mov
cltd
dec
add
cltd
out
mov
movsb
insb
mov
adc
add
push
dec
and
add
fcomp
sbb
jns
mov
xchg
jb
jmp
xchg
mov
scas
pmovmskb
pop
mov
popf
stos
inc
mov
rorb
or
push
cmpsb
ss
aas
insl
mov
push
inc
repnz
shrl
add
jns
jnp
outsl
cmp
cmp
push
jbe
and
stos
lods
xor
dec
int
pushf
loop
clc
push
nop
mov
push
push
sub
sbb
sbb
pcmpgtw
inc
daa
mov
sub
sahf
outsl
dec
in
in
hlt
and
inc
push
stos
pop
lahf
mov
sbb
sub
sahf
stos
mov
lods
int
cmpsb
in
add
cmp
mov
adcb
add
pop
lods
push
mov
push
fdivrs
cmp
sub
mov
out
mov
mov
ficoms
imul
das
cmpb
andl
aam
mov
out
ds
adc
mov
addb
ds
pop
mov
mov
ret
xchg
sarb
loope
enter
push
cmp
arpl
imul
sub
arpl
cmc
jnp
fnstcw
or
or
into
mov
pushf
shlb
xchg
xchg
dec
push
lods
jmp
push
adc
mov
repnz
pusha
pop
inc
mov
out
add
aam
pop
pop
fistl
lahf
cmp
inc
dec
cmp
es
aaa
sbb
cltd
insl
inc
aaa
movsb
movsb
sub
mov
aad
shll
pop
in
cld
dec
dec
adc
sub
mov
dec
iret
dec
int3
cli
fbstp
add
je
adc
lods
inc
nop
sahf
jns
inc
push
jne
add
dec
and
loopne
mov
push
mov
sub
and
inc
or
sbb
push
test
stc
jns
lea
mov
fimuls
mov
push
jle
es
movsl
xchg
das
mov
add
in
inc
test
pop
shll
push
sub
call
idivl
pushf
and
mov
sub
orl
mov
xor
lret
inc
xor
sbb
test
mov
sbb
int3
in
out
inc
pushf
loop
add
pop
dec
sti
data16
pop
inc
push
mov
insb
lret
inc
lret
adc
or
push
imul
icebp
and
xchg
jmp
in
cmpsl
push
sub
jge
insb
pop
sub
flds
mov
sarl
mov
jp
hlt
push
sub
jo
test
push
lods
pop
xchg
mov
fnstenv
xor
mov
and
mov
jp
push
push
mov
pop
inc
adc
sbb
das
in
adc
out
imul
movsl
ss
adc
mov
ljmp
jbe
fidivrl
in
xor
xchg
mulb
out
cmpsb
lret
inc
pop
sbb
and
xor
jmp
pushf
int
sub
xlat
scas
aas
jo
mov
push
cmp
and
mov
lret
imul
xchg
mov
rorb
dec
orl
pop
cwtl
jmp
out
adc
add
xchg
mov
and
add
xchg
jle
fs
xor
mov
les
js
mov
adc
data16
sti
mov
mov
lea
sub
cwtl
sbb
ljmp
hlt
adcb
xchg
pop
xor
je
imul
lret
mov
sub
jp
sbb
or
mov
aam
push
mov
or
adc
jmp
clc
test
jo
sbbl
pop
out
xchg
data16
pop
mov
aaa
pop
shl
xor
pop
insl
enter
and
scas
adc
cmp
fcompl
mov
xor
mov
jns
cmpsl
adc
mov
xor
iret
mov
sbb
or
jns
sub
and
call
mov
xchg
pop
lods
repz
mov
lret
call
mov
ret
notb
and
sahf
clc
mov
std
ret
xchg
sub
ss
adc
testb
jno
in
push
pop
cwtl
jbe
stc
xchg
jae
push
aad
lahf
jo
nop
outsb
daa
pop
faddl
adc
stos
fstps
mov
scas
push
push
mov
mov
xchg
mov
mov
jp
jbe
out
int3
movsl
cmp
das
or
test
test
pop
sbb
repnz
fnstsw
mov
clc
mov
lret
into
mov
or
push
xchg
add
pop
xchg
add
jb
in
pop
insl
rcrb
xchg
dec
and
xorl
mov
int
loope
jp
pop
fists
sbb
jo
jae
loope
sub
pop
adc
mov
adc
mov
push
sarl
cli
inc
js
sbb
xchg
shlb
lds
shlb
insb
cmpsl
cmp
in
xchg
push
in
push
and
add
inc
sbb
and
pop
bound
pop
mov
and
mov
pop
mov
dec
xor
push
lret
popf
rorl
das
push
ficoms
in
in
sub
xchg
gs
sbb
push
xor
rorb
movsb
icebp
imul
and
or
das
mov
sub
popa
pop
mov
and
push
mov
test
dec
or
mov
push
cwtl
dec
lock
push
sub
mov
lds
cmp
adc
outsl
dec
mov
divl
aas
mov
add
xchg
dec
outsl
or
dec
xor
mov
sub
fs
mov
fiaddl
mov
int
jmp
sbb
stos
fisubs
ljmp
bound
mov
loop
jb
mov
rolb
test
in
xor
outsl
jecxz
cld
dec
cmp
dec
into
adc
mov
cmp
push
dec
repz
xchg
jo
sti
pop
adc
push
pop
xlat
mov
cld
repz
sbb
sbb
test
sahf
and
sub
dec
mov
ss
mov
bound
ret
push
sub
xchg
cld
faddl
cmp
fldt
or
cli
lret
je
push
cmp
push
push
mov
add
adcl
mov
ret
lret
bound
dec
xchg
out
inc
popa
sarb
push
orl
out
repz
dec
aas
mov
cmpsb
or
aam
xchg
movb
add
dec
push
push
pop
jecxz
mov
xchg
cli
sub
xor
jo
dec
and
inc
movsl
push
or
gs
outsb
cmp
movsb
sti
adc
jg
in
fsubrs
rolb
sti
push
test
jns
xor
adc
cmp
rcll
pop
adc
jbe
scas
push
cmp
in
cld
jae
or
mov
xchg
xor
or
cmc
inc
bound
out
push
mov
add
dec
xor
pop
sti
iret
jbe
fwait
or
test
sub
rolb
pop
inc
and
xlat
fisubrs
addr16
fcmovb
mov
mov
xor
add
fdivl
and
push
leave
adc
lods
outsl
jbe
mov
inc
out
pusha
cltd
int
xchg
insl
mov
in
into
stos
pop
mov
icebp
inc
push
lcall
jl
out
test
jle
and
adc
fisubrs
xor
xchg
mov
dec
dec
cmp
push
lret
movb
mov
dec
stc
sbb
push
mov
scas
jo
leave
jne
and
pop
enter
inc
mov
repnz
imul
lods
dec
pop
inc
xchg
gs
dec
xchg
mov
mov
pop
sub
or
fstp
shrb
jbe
add
or
cmp
jl
push
rcll
imul
cmp
or
into
push
punpckhdq
push
sbb
sbb
adc
loopne
or
xor
rol
cmpsb
mov
push
push
sbb
std
jge
subb
daa
add
pop
xchg
push
rcrl
add
call
add
sbb
jg
call
mov
adc
subb
imul
or
add
test
les
es
ss
orl
idiv
adc
mov
mov
lds
movsl
pop
jno
push
aad
push
inc
stos
dec
repnz
or
mov
outsl
aas
mov
in
xchg
xor
rolb
xor
add
mov
shll
lcall
stos
in
inc
mov
jmp
xor
cld
mov
mov
jge
mov
xor
repz
shrb
add
cmp
xchg
ss
out
cmp
adc
pop
in
push
lahf
test
adc
lods
dec
shll
insl
scas
nop
jne
outsl
sub
inc
repz
imul
mov
aad
xchg
ljmp
std
fdivl
fbstp
int
push
mov
xor
lcall
lcall
mov
cmp
roll
add
sbb
xchg
adc
cmpb
pop
adc
dec
jmp
das
sub
std
shrl
ret
repz
repnz
in
mov
push
aad
dec
fdivl
push
push
mov
js
mov
mov
popf
js
ret
orl
ficomps
mov
mov
adc
pop
mov
lods
adc
pusha
sti
fucomi
mov
push
test
cld
xchg
stos
rorl
mov
cmp
jecxz
inc
cld
test
jno
add
mov
mov
fwait
cmpsl
lea
mov
sbb
or
aad
out
mov
add
xchg
repnz
cmc
mov
push
and
shl
xchg
jno
or
adc
cmp
les
add
out
aaa
push
jno
lock
inc
inc
xor
stos
dec
inc
fadd
and
ja
fldt
cmpsb
xchg
movsl
les
nop
aad
push
jg
loopne
and
lret
add
pop
aad
mov
arpl
sbb
push
ret
mov
inc
mov
adc
insl
sub
push
flds
test
cli
pop
or
iret
adc
add
mov
scas
sub
in
aaa
jecxz
xor
jmp
xchg
iret
inc
test
dec
mov
dec
add
test
jmp
inc
lahf
cmp
sbb
mov
je
xchg
inc
das
fdiv
mov
popf
inc
xchg
js
jmp
call
jo
mov
dec
data16
pushf
test
xchg
icebp
dec
pop
or
iret
outsl
jl
add
cltd
jge
xchg
inc
iret
clc
mov
loop
push
push
sub
push
push
data16
mov
les
pop
or
sub
xchg
ja
pop
dec
fisubrl
push
jb
insb
stos
jmp
inc
pop
mov
cltd
mov
jle
out
and
or
ljmp
xor
pop
jg
and
xor
or
rcrb
jmp
sbb
dec
lea
pop
fisttps
mov
sbb
pusha
jo
xor
int3
add
cmpsl
mov
add
in
jb
mov
sub
stos
lock
pop
les
xchg
or
pop
aam
xchg
jae
outsb
mov
ret
sarb
in
arpl
aas
xor
push
cmpsb
arpl
aas
inc
testb
push
rclb
cmp
stos
mov
inc
jb
rol
jb
sti
loope
push
imul
cmp
out
sbb
pop
push
test
cmp
jne
push
mov
dec
sbb
inc
mov
lea
das
adc
das
push
call
scas
pusha
lret
cmp
pop
xchg
lock
pop
clc
inc
mov
popa
sub
mov
inc
push
push
cmpsl
movaps
push
movl
js
adc
test
xor
addr16
adc
out
es
xor
mov
or
and
mul
ret
int3
push
xor
aam
dec
test
add
ret
add
js
into
pop
mov
out
and
sub
orl
jmp
xchg
push
mov
xor
addr16
xor
push
les
lahf
mov
xchg
inc
jge
cld
inc
jns
sti
adc
out
cmc
jne
inc
xchg
sub
ljmp
pop
cld
cmpsb
test
lahf
ljmp
push
mov
mov
pop
mov
int3
sbb
pusha
loope
pop
cmp
ds
jns
pop
sbb
stos
jg
xor
and
addr16
and
sbb
push
daa
pop
jo
add
icebp
push
jnp
in
dec
fcom
dec
jp
outsb
jnp
js
cmp
add
jbe
pop
iret
jmp
imul
pop
jmp
pop
lret
aas
lds
cmp
lock
xchg
pop
mov
xchg
mov
pop
mov
cmpsb
test
jl
out
cmpsb
push
xchg
es
mov
stos
mov
dec
or
cmp
adc
pop
jae
or
scas
ret
push
and
ja
ds
into
pusha
popf
sbb
mov
cmp
cmpsl
fsubrl
jmp
outsb
fsubl
mov
lret
insb
cmp
mov
hlt
mov
push
dec
lahf
int
jg
or
sub
out
ficoml
lock
pop
cmp
and
cmp
imul
adc
fldl
aaa
movsl
sbb
adc
insl
push
mov
sub
mov
and
push
shl
rolb
cld
in
cmp
pop
adc
xchg
gs
mov
jge
sbb
add
push
std
test
popf
xchg
lcall
fsub
pop
sub
push
dec
mov
mov
leave
sbb
inc
repnz
scas
ss
in
lahf
xor
icebp
push
inc
test
incl
loope
stos
sti
inc
sub
jno
shr
testb
adc
pusha
push
xchg
pop
push
push
out
ffreep
mov
jg
push
out
filds
insb
es
es
test
pop
es
insb
xor
jne
mov
push
jmp
jecxz
rorl
add
or
push
insb
popa
add
cwtl
stos
add
mov
ffree
dec
xchg
pop
das
movsb
or
mov
pop
jne
inc
push
popa
shlb
xchg
mov
push
in
aam
xlat
call
lods
shll
inc
cmp
sub
xor
jge
pop
rcll
mov
cmc
in
insl
std
add
adc
add
ret
inc
test
mov
daa
aas
mov
and
adc
and
mov
lds
or
xlat
and
loopne
cli
jl
xor
out
les
sti
xor
push
test
sub
sti
adc
jno
fucomip
ret
dec
dec
mov
or
mov
or
push
sub
sub
int
cmp
or
mov
out
dec
push
inc
daa
or
popl
add
nop
jae
push
jb
sbb
movsl
stc
cmp
add
pop
nop
das
add
xor
mov
insb
ret
cld
movsl
sti
dec
inc
xor
push
arpl
push
xor
iret
scas
jae
xchg
nop
sarl
fistpl
cwtl
cwtl
inc
xor
push
push
dec
jg
inc
and
int
push
das
jle
bnd
aad
fimull
int
inc
andl
dec
mov
in
loope
addr16
cmp
jp
fstl
add
mov
icebp
ljmp
xor
outsl
lret
mov
mov
or
lods
push
dec
cltd
or
mov
inc
add
aad
into
test
xchg
fidivrs
push
repnz
jb
cltd
cmpsl
pop
jnp
ret
rcrl
clc
adc
in
sub
or
pop
sub
andb
cmp
notl
or
cmp
adc
push
mov
insb
test
dec
push
dec
in
mov
jns
add
mov
jns
pop
jp
leave
xchg
and
ds
inc
loop
aaa
push
pop
fstpt
mov
lret
sbb
call
test
fwait
jg
push
jmp
not
push
out
js
lea
out
lahf
dec
sbbb
iret
pushf
and
and
pop
push
sarl
imul
or
insb
test
pop
ret
cmc
jmp
es
enter
clc
and
jecxz
das
mov
jno
add
into
mov
pop
pop
xchg
sub
test
or
or
mov
or
movsl
stos
jae
cli
mov
in
shlb
add
push
push
jne
stos
pop
xor
divl
cmp
xchg
or
xlat
ss
pop
repz
out
pushf
scas
jbe
punpcklwd
call
xchg
inc
or
mov
mov
dec
dec
inc
testl
jl
sub
add
cmpsl
dec
and
cld
inc
repnz
insb
lret
or
adc
js
xchg
push
outsl
push
adc
xchg
xchg
xor
es
sahf
decb
xor
test
xchg
inc
insb
sub
psubq
insb
int
jle
or
sbb
sbb
popf
lahf
lcall
inc
lcall
repz
lock
xor
or
xchg
mov
lock
sub
mov
insb
or
jg
jp
popa
bound
sbb
cli
push
mov
mov
add
or
dec
cwtl
pop
and
dec
xchg
add
scas
ljmp
cmp
mov
fwait
and
sbb
or
mov
fxch
cwtl
loopne
adc
lock
mov
popa
aad
in
popfw
pop
in
or
pop
sarb
scas
mulb
mov
cld
jo
popf
mov
mov
je
fwait
pop
and
rcl
mov
inc
add
ret
lret
add
shrb
hlt
lods
iret
lret
mov
or
dec
sub
inc
out
mov
scas
mov
mov
push
jb
adc
call
ficompl
lds
pop
mov
sbb
cmp
pushf
xchg
clc
mov
xor
pop
jae
rolb
xor
jl
or
ret
in
xor
mul
pop
jo
jecxz
push
adcl
aaa
mov
xor
aam
ret
or
nop
roll
fbld
and
inc
test
push
rcrb
sub
sbb
jae
fnstcw
fmull
ljmp
std
repz
inc
fcmove
ret
push
xlat
ficompl
and
dec
js
mov
sti
jg
popf
loopne
mov
cmp
fistpl
jae
inc
adc
inc
pop
lret
nop
pop
imul
dec
mov
mov
daa
test
movsb
aam
inc
ljmp
pop
jns
popf
fcmovu
ja
lret
dec
xor
xchg
scas
insl
ja
cmp
dec
push
js
shlb
shl
je
lds
lea
scas
jne
movsb
push
stos
sub
xor
repz
push
les
jmp
sti
int
pop
in
cmpb
shlb
sub
mov
adc
cmp
icebp
rcll
dec
cld
aas
mov
test
push
fisttpl
ret
ficoms
scas
mov
rorb
xchg
jl
sub
jecxz
mov
jmp
test
int3
sub
sets
jae
push
decl
mov
fstps
ror
mov
and
pusha
inc
ds
in
mov
mov
mov
daa
arpl
iret
xchg
shrb
mov
cmp
repnz
test
push
repz
imul
pop
xor
bound
mov
popa
popa
cmpsl
popl
pushf
and
in
push
push
add
shll
dec
js
mov
inc
add
xlat
mov
ficomps
xchg
or
ret
adc
and
sub
sub
xchg
bound
sbb
out
push
pop
daa
loope
xor
jg
sahf
mov
sahf
xor
and
add
or
lea
sub
pop
repnz
test
inc
xor
nop
into
in
sarb
cmp
sub
js
cld
add
idivl
xchg
cld
sub
pop
xor
jle
push
mov
jns
push
stos
pop
ficomps
ss
fsubrs
sub
sarb
mov
dec
out
je
mov
imul
scas
test
gs
das
add
xor
pusha
clc
fldcw
mov
cltd
and
jge
aaa
mov
ds
xor
dec
dec
data16
fldcw
leave
sbb
repnz
mov
lcall
es
pop
and
loope
inc
cmpsl
movsb
sbb
mov
xchg
fists
pop
arpl
mov
js
jge
cmc
push
cmp
pop
add
add
sub
or
movsl
adc
mov
cmp
je
cmpsb
dec
daa
test
lahf
mov
jnp
xchg
jb
std
mov
int
mov
push
out
cmp
repnz
xor
pop
and
popa
lcall
loopne
pop
shl
insl
sub
fdiv
jmp
or
adc
pushf
mov
add
push
rcrb
push
mov
xor
rorl
mov
sti
or
loopne
push
sub
stos
sub
mov
hlt
jb
mov
cmp
jp
rcll
mov
repz
push
sub
cmpb
fs
ja
in
ljmp
push
and
das
and
stc
dec
mov
aam
lret
js
lret
mov
lock
push
add
add
cltd
add
test
rclb
and
int3
pop
mov
inc
popa
push
int
or
cmc
fcmovu
jmp
outsb
jnp
cld
cmpsb
bound
adc
cwtl
ja,pn
lods
mov
out
aaa
fcompl
xlat
mov
pop
push
notb
lret
cs
dec
push
fnstsw
xchg
cmpl
cmc
pop
rorb
nop
and
lods
rcrl
pop
push
xchg
adc
andl
jmp
sub
pop
cmpl
mov
jae
mov
or
daa
xor
mov
pop
xchg
je
sub
inc
imul
push
dec
mov
lods
lds
pop
mov
xchg
addr16
int
mov
jg
or
enter
loop
cmp
pusha
les
cmc
jmp
inc
mov
sub
mov
push
inc
xor
xchg
loop
mov
adc
movsb
push
sub
rclb
cmp
push
sub
jnp
mov
dec
fisttpll
mov
or
cmpsl
ficomps
rorb
inc
mov
mov
pushf
xlat
cmp
test
mov
cs
data16
jge
mov
sbb
test
aad
jns
push
scas
xor
aad
mov
pop
adc
jmp
lcall
ss
jb
push
stos
arpl
mov
jmp
jge
insl
add
mov
repnz
sti
jns
jg
test
mov
add
ret
faddl
dec
cltd
bound
jno
push
dec
adc
testb
aam
dec
cmc
jmp
jne
cmp
test
test
adc
insb
xchg
rcrb
inc
fwait
xor
int
push
cmpsl
add
into
pop
xchg
add
dec
push
loop
cld
inc
adc
iret
xlat
int
fcomps
into
into
pop
insb
outsl
and
inc
lds
cmp
jecxz
push
incb
popa
shrb
jge
xchg
out
clc
sub
pop
sub
outsl
shrb
or
sarl
sarl
js
push
ret
jmp
divb
xor
std
jge
cmp
sbb
sub
push
std
sbb
rcrb
sbb
ds
cli
add
sahf
or
fstps
je
pop
jb
adc
add
push
or
rcll
adc
scas
pop
lods
mov
out
ret
jl
or
les
mov
in
pop
filds
and
adc
sarl
adc
inc
cmp
popa
jp
ret
ss
aam
mov
out
sub
stc
jne
xchg
sub
sbb
leave
daa
fyl2xp1
xchg
clc
and
fbstp
push
mov
lods
fdivrs
imul
cmpsb
int
pop
jno
out
out
and
loopne
inc
sub
xor
cmc
fadds
push
cmp
sub
mov
subb
xchg
mov
add
cmpl
fs
lret
push
or
xor
cmpb
cmp
aad
xchg
xor
xchg
nop
push
lahf
adcl
dec
mov
and
mov
fdivr
cmp
adcb
xchg
lcall
mov
lret
lods
bound
xor
xchg
cmc
js
jg
inc
mov
shll
lret
insb
rolb
int
test
inc
bound
adc
nop
mov
xchg
add
test
out
mov
and
xor
mov
pop
ret
inc
scas
lds
xor
push
repz
jbe
pop
mov
pushf
push
adc
dec
dec
out
xor
sbb
imul
aam
insl
adc
sbb
cwtl
inc
mov
ljmp
aaa
mov
inc
jbe
repnz
cwtl
mov
test
lods
xchg
mov
lret
sbbl
sbb
jno
mov
movsb
mull
xchg
orb
out
push
cmp
jp
stc
jle
fildll
dec
xchg
js
lret
pusha
xor
xor
and
movsb
mov
jg
add
add
or
sub
ja
leave
mov
into
hlt
popf
push
adc
ljmp
outsb
pop
sbb
mov
insl
inc
jbe
dec
or
push
jo
adc
push
into
mov
and
adc
sahf
dec
sbb
push
inc
inc
sub
inc
fnsave
enter
mulb
sbb
pop
xchg
movsb
jmp
aam
cmp
xchg
ljmp
cmpsl
fimuls
add
cmpsb
mov
sub
cmp
out
adc
movsl
sub
jmp
and
mov
sbb
cwtl
scas
sub
outsb
loope
dec
fistpl
mov
and
or
lcall
push
fdivp
test
pop
fdivrl
xchg
or
adc
sbbl
in
push
pusha
jecxz
ds
mov
loopne
pushf
lret
loop
cltd
mov
call
push
ds
jle
cwtl
ror
xor
sbb
sbbl
mov
xor
addr16
fcoml
out
dec
call
stos
add
add
movsl
xchg
out
pop
push
mov
test
xchg
jo
sub
data16
mov
adc
fsubs
adc
subl
ds
mov
imull
int3
cmp
mov
mov
movsl
dec
ljmp
and
mov
xor
out
push
arpl
cmp
mov
gs
xor
push
pusha
mov
and
dec
fdivp
ss
jecxz
jle
add
and
pop
pop
insl
push
cmp
pop
or
push
pop
into
dec
pop
movsb
xchg
in
into
lds
jbe
xor
lret
mov
mov
insl
pop
ljmp
push
xor
mov
push
bound
imul
orl
mov
pop
mov
jb
inc
or
addr16
dec
hlt
cwtl
and
fnstenv
jbe
inc
pop
push
push
sti
imul
idivl
dec
pushf
sarl
xlat
push
jmp
mov
sbb
add
movsb
push
or
mulb
mov
hlt
pushf
in
mov
mov
pop
push
mov
adc
imul
cmp
dec
insl
mov
pop
sub
xchg
mov
push
negl
push
in
mov
sbb
mov
pop
mov
dec
fidivrs
push
push
jge
push
cmp
push
dec
adc
mov
pop
pop
insl
pop
mov
xorb
sub
aad
loopne
dec
dec
jae
je
ljmp
mov
stos
insb
inc
and
xor
adc
cmpsb
cmpsl
xchg
in
push
fisubs
mov
notb
dec
bound
js
push
dec
out
dec
ret
in
sub
lahf
push
fadds
push
jns
and
sbb
sub
push
push
jae
movsl
arpl
xchg
and
pop
jb
ss
scas
jno
mov
repz
jno
rcr
sub
sub
sbb
inc
fsts
sub
xor
adc
add
and
dec
lea
cmp
cmp
cmpsb
xchg
cmp
orl
push
pushf
bound
movsb
fucomip
lret
fiaddl
aas
cli
mov
pop
aam
pop
rcrl
add
out
sub
shrb
fildll
in
call
jns
sbb
cmp
mov
test
cmp
pushf
sub
orl
sbb
mov
cmc
dec
cmpsl
or
adc
mov
sahf
idivb
in
mov
add
incb
xor
adc
xchg
sti
sub
fstps
les
icebp
aas
push
out
ffreep
cmc
in
jb
push
stc
sarl
pop
cmp
jle
jnp
imul
inc
call
dec
fisttpl
pop
scas
cmp
push
arpl
sbb
insb
fisttpll
mov
sbb
xchg
pop
mov
push
fdivrs
push
mov
mov
xchg
repz
xchg
cli
dec
mov
popa
cmp
sub
jo
addr16
sub
mov
jnp
jbe
mov
sbb
sub
or
stc
sbb
mov
sub
add
cltd
cmpsb
push
jbe
xchg
mov
test
mov
in
decl
leave
xchg
jl
dec
xchg
pusha
outsl
xorl
mov
pop
push
pop
inc
movl
sbb
leave
popa
sub
push
xchg
mov
adc
mov
jbe
dec
mov
test
mov
mov
pop
push
lahf
mov
mov
fcmovnb
shr
mull
in
adc
in
ljmp
mov
aaa
fists
outsl
xchg
clc
sahf
pop
cld
frstor
test
adc
push
pop
fildl
cld
cwtl
loopne
fdivrp
push
dec
out
and
popf
mov
movsb
xor
push
lret
les
ret
movsb
rclb
mov
jmp
add
ss
cmp
sbb
loop
push
push
leave
pop
cmpb
dec
and
lods
cli
aaa
repnz
mov
imul
adc
hlt
jns
test
ficomps
jo
stos
and
xchg
aam
std
lahf
daa
sbb
lock
xchg
xchg
mov
xchg
cmp
jns
scas
fsubs
sub
jmp
sbb
push
pop
fistps
push
cmpb
add
loopne
push
mov
jnp
dec
sub
push
stc
xor
xor
cmpsb
dec
ret
je
iret
aad
je
mov
ror
adc
lods
test
jle
inc
jecxz
cmp
dec
sbb
loope
xor
mov
test
loope
mov
add
dec
int
sahf
pop
sub
movsb
mov
and
std
jns
subb
cmpb
mov
mov
dec
xchg
out
nop
dec
jmp
lods
push
sub
dec
xchg
cld
mov
and
mov
vhsubps
xchg
imul
sbb
nop
add
fmuls
popa
mov
je
mov
xchg
sub
sbbl
cmc
xchg
xor
pushf
mov
popa
ret
movsl
jno
inc
lret
push
push
add
lahf
das
push
mov
jne
sub
dec
lods
push
repnz
push
stos
add
cmc
jp
mov
jg
inc
lret
mov
mov
fmul
inc
sbb
cmpl
pop
xchg
or
mov
sbb
subb
dec
cltd
and
cmp
add
insl
mov
dec
cmp
push
cs
orl
xchg
mov
or
inc
cmc
int
mov
adc
addr16
push
dec
inc
fildl
movsl
stc
pop
fdivs
inc
pop
lds
je
push
jmp
sbb
push
dec
ja
int3
pushf
gs
cmpb
mov
int3
jmp
push
pop
cmp
or
clc
data16
sbb
cmc
sahf
pop
xor
fistps
sbb
add
es
insb
jno
out
mov
pusha
ds
imul
xchg
jl
and
dec
cmpsl
test
inc
andb
adc
sbb
enter
mov
imul
mov
push
ret
xor
popf
xor
inc
add
fmuls
mov
pop
cmp
mov
or
test
shl
inc
inc
imul
mov
test
lock
mov
xchg
jecxz
into
pop
jo
and
pop
jb
or
or
pop
rclb
ret
loopne
xchg
sub
js
pop
mov
xor
out
pushf
xor
leave
cltd
les
inc
push
outsb
addl
lods
subl
pop
inc
lcall
sbb
shlb
aam
sbb
daa
push
lods
daa
cmp
addl
rorl
xchg
test
sbb
mov
dec
xor
lret
into
sbb
adc
jbe
scas
imul
mov
testl
or
adc
cmp
popf
icebp
mov
mov
mov
test
dec
addb
xchg
and
push
test
rcrb
or
push
dec
sub
std
sbb
cltd
outsl
pop
sbb
data16
and
mov
jb
pushf
push
mov
fwait
incb
cld
lea
add
mov
xchg
lds
test
scas
xchg
xchg
aam
xchg
lcall
and
test
cmp
lock
jbe
cli
stc
adc
xor
int3
inc
pushf
jg
mov
cmpsl
es
push
loope
mov
mov
sbb
add
cmpsb
sbb
pop
jo
inc
xor
cld
aaa
mov
inc
std
jno
dec
jno
lret
xchg
cmc
lods
jle
dec
aas
inc
dec
xchg
cmp
xlat
mulb
ret
ret
es
fstpt
sbb
add
lea
jb,pn
imul
shll
out
pop
inc
xchg
cmpl
call
hlt
jge
out
daa
ds
iret
inc
lret
lods
jns
enter
push
fnstsw
jbe
shrl
lret
sub
mov
push
das
cmpsl
push
dec
aaa
jl
cmp
mov
pop
movsl
lods
mov
stos
jp
and
loopne
rcrb
cmpb
inc
cmp
stos
mov
sbb
adc
xchg
les
cmp
lds
jmp
push
lds
and
sbb
jns
sbb
mov
int
clc
pop
iret
jbe
addr16
loope
sub
outsl
jno
jne
iret
pop
pop
sbb
stos
hlt
cmpsb
pop
fcoml
popf
decl
inc
jb
mov
aad
fldt
pop
cmp
js
and
add
and
sbb
mov
jp
iret
sbb
outsb
xor
cs
and
cmp
mov
jmp
lret
int3
loopne
dec
movsb
jge
sbbl
leave
je
mov
clc
addb
insl
addr16
cmp
mov
fld
leave
dec
out
insl
cmpsl
adc
sub
shlb
hlt
push
push
or
jbe
xlat
repnz
push
ret
xor
xor
inc
les
pop
sbb
orb
cld
lret
add
cmp
iret
nop
cwtl
adc
gs
outsb
dec
jmp
iret
out
dec
shrb
or
scas
push
push
imul
out
push
inc
in
mov
jmp
xchg
lods
cmp
sti
ljmp
mov
cmp
dec
xlat
ret
stos
call
ja
in
push
cltd
cmp
mov
or
insb
je
xor
xchg
bound
jp
lahf
sub
pushl
xor
cmc
cltd
faddl
cltd
mov
out
mov
inc
stos
test
push
push
loopne
xchg
add
pop
add
or
dec
lock
jmp
xor
pop
mov
mov
stos
ret
fdivl
lds
push
lock
mov
gs
lahf
iret
xchg
cmp
jns
dec
inc
add
cmpsb
xchg
sbb
mov
mov
leave
pop
xorb
xchg
dec
and
jmp
mov
xchg
add
mov
push
jecxz,pt
and
in
dec
push
push
dec
lea
jl
into
ljmp
push
pop
mov
cmp
xchg
scas
dec
orb
movsl
dec
outsb
pop
or
das
out
pop
pop
imul
xchg
sbb
mov
cmpsl
jecxz
sbb
lock
cmpsb
cli
std
add
rcrb
inc
stos
xchg
push
hlt
hlt
and
test
dec
mov
adc
in
mov
dec
dec
das
push
fidivrs
sbb
aaa
mov
xchg
ret
js
dec
imul
shll
fwait
xchg
mov
xor
push
aaa
daa
test
stos
mov
push
js
jae
loope
out
mov
jae
add
inc
std
leave
lcall
pop
sti
popf
jne
test
jae
sub
inc
in
jne
enter
fiaddl
pop
jecxz
add
es
lods
xchg
or
test
lahf
sbb
ljmp
enter
jb
imul
mov
mov
inc
pop
jnp
mov
push
mov
dec
ja
test
xchg
subb
mov
pop
loope
cmp
jne
cld
push
mov
arpl
sbb
jne
inc
push
leave
popa
sti
push
pop
xor
les
or
pop
and
mov
cmpl
mov
jecxz
inc
add
mov
xor
cltd
std
outsl
nop
js
xchg
mov
addl
ret
cli
cmp
push
sarl
movsl
and
dec
jle
jg
inc
addb
sub
pop
cmp
hlt
dec
jnp
or
fiaddl
mov
adc
test
lcall
cwtl
cmp
xor
addr16
dec
mov
push
inc
imul
xor
rcrl
adc
xchg
push
push
mov
mov
sub
inc
int3
cmp
xor
les
add
fwait
jb
cmpsb
dec
xchg
cwtl
enter
shl
clc
loopne
test
lcall
repnz
sbb
cmp
popl
imul
incb
mov
int3
cmpsl
out
stc
sub
and
fsubs
adc
dec
dec
jnp
xor
ss
out
movb
ds
push
xor
dec
sbb
mov
cli
or
jecxz
aas
push
jo
pop
mov
idivb
push
mov
data16
sbb
add
sub
stos
cli
add
movsw
and
fiaddl
rorb
sub
imul
stc
dec
mov
cmp
add
sbbb
test
adc
cld
stos
shll
orl
addr16
pusha
push
jl
xor
push
xor
lcall
aaa
mov
shrb
xchg
aam
pushf
rol
adc
hlt
sbb
xchg
inc
jo
dec
shlb
out
inc
push
enter
add
ret
xchg
out
add
or
lock
in
push
pop
sub
push
mov
popaw
mov
pop
add
pop
lret
cmp
sub
bound
lea
or
outsb
pop
bound
lret
adc
sbb
ret
mov
sbb
or
or
fstl
addr16
iret
gs
mov
mov
fadds
rorl
int
push
sti
movsl
test
test
pop
loopne
jmp
mov
dec
shr
mov
divb
mov
mov
mov
jg
icebp
or
aam
or
gs
notb
sub
shl
pop
repz
mov
jno
sbbl
imul
adc
mov
into
std
cld
jmp
shll
pushf
test
inc
lcall
xlat
dec
mov
leave
mov
mov
mov
inc
mov
or
mov
xor
cltd
xor
mov
test
push
les
arpl
mov
jp
mov
test
sub
pop
dec
stc
cmc
push
and
adc
push
jle
jmp
jo,pt
mov
fcoml
mov
sbb
xadd
adc
add
sahf
xor
imul
gs
xchg
xchg
call
in
push
stos
das
mov
fidivrl
mov
ljmp
insb
lds
push
cltd
pop
loop
sub
mov
or
dec
cmp
jecxz
xchg
dec
js
inc
mov
push
int
inc
inc
roll
int3
cmp
xchg
fcmove
lods
push
pop
orl
popf
loopne
int
xchg
inc
pop
cmp
divb
int3
rcl
xlat
sahf
or
or
adc
jb
sahf
cld
pusha
into
out
xlat
inc
shrl
add
lahf
stos
or
stc
push
xchg
lods
mov
inc
jg
sub
les
xor
inc
into
mov
nop
pop
rorb
lcall
stc
jae
jecxz
mov
sub
stos
xchg
rolb
adc
cmp
out
xor
sbb
popf
js
mov
jns
and
xchg
dec
xchg
loope
add
pop
cmc
aam
inc
dec
dec
xchg
jne
ss
dec
push
jo
loopne
mov
jne
push
fdivrl
fcoml
out
pop
mov
into
ret
cmp
and
add
daa
movsl
sbb
mov
xor
popf
test
call
loopne
clc
rorb
andb
lea
out
jns
call
fnstenv
sub
loopne
scas
cmp
and
cmpsl
cmpsl
xlat
into
clc
jp
lret
cmp
inc
mov
cmp
test
dec
fstl
mov
xchg
jns
hlt
decl
sub
push
xor
notb
rorl
sub
les
sbb
aaa
or
jle
fwait
inc
addr16
xor
dec
sbb
out
out
pop
jne
js
loop
cmp
movsl
dec
inc
add
in
ljmp
adc
jmp
pusha
ja
and
pop
jbe
push
push
mov
adc
push
pushf
xchg
imul
ss
test
lea
nop
movsb
pop
adc
lcall
shlb
imul
add
pop
imul
adc
out
pop
pop
cmp
shl
roll
popa
jmp
mov
pushl
mov
lock
cs
fistpl
adc
add
movb
xlat
out
sbb
mov
add
cmp
cld
jae
in
fdivr
sbb
aam
das
inc
pop
mov
xor
jbe
cltd
xor
stos
imul
mov
pop
xchg
jg
xchg
fldl
xchg
cmp
push
fst
test
adc
fistpll
push
adc
out
jbe
jnp
adc
sar
push
push
out
pushf
xor
mov
cmc
xchg
cmpl
mov
lret
icebp
rolb
jmp
rorl
sub
js
aaa
pusha
mov
and
imul
hlt
mov
pop
adc
icebp
pop
jo
cmp
cmp
fnstcw
lods
or
sub
adc
shrl
xlat
scas
lret
imul
push
imul
in
or
xchg
fwait
mov
bound
outsb
aaa
inc
sub
inc
lds
inc
xchg
movsl
ja
xor
addl
and
jge
int
fistpl
cmpsb
cs
mov
mov
aad
ljmp
les
push
push
imul
es
sbb
jno
mov
leave
adc
std
inc
xchg
outsb
and
dec
out
mov
mov
xchg
push
cmp
fcomps
push
xchg
sbb
and
adc
fwait
outsb
pop
push
or
outsl
out
jp
les
adc
or
aaa
xor
cmpsb
test
jnp
jnp
imul
lea
add
push
mov
pop
add
test
push
lods
aas
cltd
lret
jbe
aaa
jg
sbb
aaa
pushf
rcr
sti
cmpsb
jbe
dec
cwtl
push
pop
xor
in
xchg
cwtl
mov
or
ljmp
inc
fs
cmp
es
ljmp
inc
out
test
push
mov
fstl
cmp
ja
aad
push
and
das
pop
leave
inc
jg
scas
pop
imul
shl
cld
push
ja
mov
shlb
mov
pop
pusha
inc
jbe
inc
pop
pop
push
xlat
cmp
rolb
sbb
lock
jns
sbb
dec
or
mov
negb
mov
cltd
mov
mov
push
push
push
int
dec
ret
jno
push
pop
cmc
aaa
call
jo
dec
out
mov
pop
cmp
sbb
fbld
js
decb
add
fldl
mov
cmp
fsubs
nopl
mov
test
lods
pop
push
xor
hlt
or
dec
xchg
pop
out
lods
push
dec
int3
insl
addr16
cltd
push
jp
pop
std
fisubrs
jbe
rolb
cltd
jmp
sub
mov
adcb
cmpsb
and
stc
jae
fiadds
fsubs
adc
jle
fidivl
loopne
repz
sbb
scas
sbb
mov
sysret
shll
add
leave
adc
sub
sar
repz
in
mov
int
mov
out
mov
stos
add
jmp
cmpb
call
push
sbb
push
cmc
out
fwait
pop
lods
and
inc
xchg
jecxz
lock
cs
andl
dec
loopne
mov
cmp
xor
fwait
or
les
sub
fldcw
add
mov
adc
outsl
insl
in
or
pop
imul
je
stc
mov
lcall
test
into
ds
outsb
push
es
push
mov
cmc
fst
jno
pop
mov
cmp
sbb
mov
sub
hlt
pop
pop
imul
xchg
mov
pop
and
cmp
mov
in
add
mov
in
subps
mov
pop
repnz
sub
scas
jo
repnz
test
in
int
adc
out
cltd
mov
jecxz
add
roll
mov
fwait
std
pop
cmp
xchg
cld
or
cmpsb
cld
pop
jno
addr16
cmp
mov
and
pop
push
xchg
jo
imul
cmp
repz
adc
sub
mov
and
sbb
ficoms
fwait
xor
stos
sbbb
idiv
and
aaa
xchg
arpl
sahf
cmp
test
sti
push
pop
repz
repz
nop
cld
sbb
in
xor
push
add
outsl
orb
movsl
es
mov
out
xchg
cmp
aas
or
shlb
lock
cmp
mov
enter
imul
add
inc
fwait
loop
icebp
add
test
mov
std
jl
pusha
dec
sub
xlat
mov
cli
and
sti
mov
mov
lods
inc
aam
test
mov
int3
fwait
sbb
cli
mov
jno
loop
cmp
incb
jo
sbb
test
jle
cmp
insl
sub
mov
cmpsl
jno
lret
popa
outsl
jns
sbb
jns
mov
cmpl
inc
jbe
add
or
scas
mov
xor
hlt
and
lods
dec
mov
gs
les
sbb
ja
xor
repnz
data16
mov
lds
data16
loopne
aaa
mov
mov
in
adc
ss
mov
sub
mov
and
test
jns
mov
jae
test
add
pushl
sahf
cmpsl
bound
jne
ret
test
jno
xchg
cmp
fistpl
ret
fimull
stos
sar
into
mov
aad
gs
sbb
fistpl
add
dec
push
cmp
imul
fisttpl
fcompl
repz
adc
stos
jl
and
pmaxub
clc
dec
jge
mov
mov
movsl
iret
pushf
pop
out
push
movsb
adc
xchg
sbb
int
mov
xchg
div
mov
pop
dec
clc
push
lock
xchg
and
xor
lret
arpl
les
inc
and
sub
xchg
ret
test
xor
mov
in
mov
and
push
ja
mov
ja
arpl
or
imulb
push
stos
fmull
push
stc
jle
xor
ret
repz
std
sahf
test
aas
bound
inc
mov
mov
nop
in
inc
gs
js
repnz
mov
lcall
arpl
pop
cli
xchg
mov
add
sbb
je
cmpw
sbb
lret
cmpsb
adc
mov
dec
sti
cs
jl
mov
mov
stos
inc
insb
pop
mov
dec
hlt
ljmp
and
stos
push
mov
xchg
movsl
clc
push
inc
mov
subb
push
mov
and
pop
mov
sahf
cmpsb
push
shrb
into
add
addr16
jns
jno
sub
inc
sub
pop
hlt
loop
lret
jecxz
sbb
addr16
adc
mov
je
and
xchg
cltd
adc
push
sbb
or
push
popf
popa
ss
repnz
push
sbbb
xchg
fdivrl
cmp
repz
in
ret
xchg
jb
sbb
inc
clc
xor
shrb
xor
cmp
div
mov
push
fistps
xor
inc
lods
mov
cmp
movsl
push
inc
push
sbb
sub
test
cmpsb
stc
sbb
data16
mov
push
ret
dec
outsb
and
pop
ss
xchg
cmpsb
rolb
sub
pop
arpl
fstl
or
mov
mov
cltd
lahf
dec
dec
lea
loope
or
jno
pop
outsb
fdivr
xchg
mov
pop
popa
loop
jae
mov
pop
pop
mov
lods
cmp
jle
ja
mov
jecxz
mov
push
adc
cmpsb
rcr
mov
mov
fcomip
rolb
pop
sbb
xchg
mov
les
push
sbb
mov
movsb
sahf
pop
sbb
and
into
jle
in
ja
adc
or
jb
jmp
and
xor
xor
pop
aas
mov
pop
cmp
cli
push
pop
pop
loopne
movsl
jp
sbb
addr16
xchg
cmp
cmp
lret
ror
fisubl
sbb
in
jl
add
cmpsb
jg
int
clc
sbb
inc
into
test
mov
call
mov
pop
arpl
mov
jbe
pop
dec
sub
out
jg
sarb
jb
out
imul
xor
or
lock
mov
sbb
hlt
rcrb
xchg
imul
comiss
aad
gs
add
insb
dec
js
pop
mov
and
sbb
ret
mov
pop
adc
roll
mov
xchg
outsb
jb
scas
xor
jmp
outsl
movsl
mov
adc
inc
jg
inc
or
xor
mov
pop
fcoms
scas
fsubrs
gs
pop
mull
adcl
out
outsl
mov
mov
sarb
in
pop
xchg
in
mov
mov
imul
cmc
dec
mov
add
out
movsb
stc
test
or
pop
addr16
inc
xchg
lods
out
les
cmp
sbb
adc
or
loopne
ret
push
inc
fimull
cmp
mov
push
dec
ljmp
cmp
sahf
imul
cmpsl
lcall
push
rol
pop
iret
push
fbld
add
and
push
mov
sub
mov
insl
mov
cmp
int
adc
xor
mov
pop
cmp
mov
into
xor
test
jo
sub
push
icebp
sub
repz
sub
push
mov
jmp
mov
aaa
in
test
cmpsl
push
inc
add
lea
xor
out
loopne
add
int
sbb
mov
mov
inc
cmp
xchg
negl
or
xchg
je
and
or
mov
push
or
sub
xchg
dec
xor
jmp
and
shll
movsb
add
mov
mov
loop
ss
mov
mov
mov
shrl
add
icebp
jno
sub
mov
insl
jo
mov
or
fbld
insl
les
xchg
negb
jg
sbb
xchg
sub
cmc
ficomps
stc
sub
sub
iret
adc
mov
dec
int3
cs
cli
stc
mov
scas
imul
xchg
sub
pop
mov
outsl
push
aaa
in
jge
xchg
jp
subb
inc
out
push
scas
jmp
cli
fcoms
inc
movsb
sahf
pushf
popf
ja
aad
inc
dec
mov
mov
lods
adc
iret
ja
push
mov
fs
out
pop
add
cld
clc
repz
push
mov
fdivl
xor
mov
pop
jmp
inc
add
rclb
add
push
imul
sbb
and
popa
mov
push
pop
pop
push
ljmp
leave
adc
pop
add
or
jecxz
xlat
sti
push
cmp
inc
sarb
cltd
jno
dec
adc
jle
sbb
mov
mov
sbb
aam
outsb
push
xor
sti
add
cli
rclb
pop
dec
mov
cwtl
pop
stos
clc
sarb
neg
outsl
xchg
xchg
jns
dec
outsl
cltd
or
push
sti
scas
cwtl
dec
std
bound
cmp
mov
adc
lods
pop
std
xlat
or
pop
and
mov
or
jg
xor
loop
pop
inc
popf
pop
inc
cmovle
dec
ret
mov
push
loope
jne
cmp
mov
jecxz
mov
inc
dec
lods
sub
lods
stc
icebp
out
mov
stos
out
clc
adc
fiaddl
jg
xchg
sbb
leave
sub
out
dec
out
jne
iret
pop
xor
stos
mov
enter
in
iret
cmp
or
mov
nop
dec
repz
test
arpl
fists
mov
cli
and
subb
lret
push
jne
ja
jb
ja
into
xor
inc
add
jl
fstl
mov
shrb
push
dec
sbb
mov
add
push
jns
in
fsubrl
jne
jno
cmp
sbb
push
in
rcll
arpl
mulb
jle
or
jbe
andl
pop
and
jmp
cmp
sub
or
into
dec
fists
test
mov
sub
or
clc
arpl
out
insb
push
bound
popa
repz
cltd
mov
ret
xor
pop
jb
clc
sbb
call
das
gs
pop
jo
movsb
popl
loope
and
dec
mov
mov
clc
loop
jge
jb
icebp
mov
or
frstor
inc
std
subl
fadd
xchg
mov
addr16
pop
xchg
nop
or
mov
cmp
dec
jge
sahf
test
pop
jnp
xchg
aaa
test
xchg
pop
add
icebp
xchg
sbb
pop
dec
mov
sbb
push
fstps
loop
mov
aad
dec
jae
inc
movsb
mov
mov
rol
mov
push
jae
scas
rcrb
add
int
ds
arpl
ss
mov
mov
call
push
fcmovu
imul
enter
ret
add
inc
inc
and
test
in
stos
add
lods
lock
sub
stos
mov
das
out
adc
ja
pop
gs
push
cmp
aam
sub
loope
adcb
iret
fdivl
bound
and
js
loopne
call
arpl
jg
mov
aas
sbb
out
add
mov
cs
gs
inc
jmp
pop
cmp
pop
aaa
jae
js
test
mov
adc
push
sahf
xchg
jo
sbb
mov
adc
jne
adc
mov
xorl
push
ret
sbb
sub
sub
sbb
mull
dec
jo
popf
mov
mov
add
shrl
movsl
sbb
or
dec
lea
dec
les
cmp
sarl
mov
sahf
dec
xor
mov
imull
lret
fdivr
jno
dec
rolb
insb
xor
ja
mov
lcall
jbe
sbb
dec
adc
movsb
cmc
adc
xor
mov
mov
lahf
lret
mov
mov
repnz
mov
shll
xorb
dec
mov
fwait
pop
jne
outsl
xchg
stos
pop
pop
xchg
cwtl
cld
imul
jl
jl
cld
cmp
and
mov
nop
mov
lret
fs
mov
lret
xchg
push
mov
add
xchg
int3
aad
xchg
mov
mov
xor
add
jmp
xchg
xor
adc
cmp
mov
fdivrl
ficoms
add
cld
dec
das
mov
std
sub
and
ret
pop
loope
popf
jp
mov
push
lock
inc
sub
out
push
mov
pop
adc
mov
shlb
pushf
das
jl
dec
stc
mov
push
jae
jb
mov
ret
push
cmpsl
lea
rolb
gs
aam
rclb
jbe
mov
arpl
jge
dec
test
push
rorb
mov
jno
ds
test
jmp
push
pop
pusha
leave
cmc
jp
dec
xchg
movsb
cmp
pop
inc
push
push
orl
sar
popa
xchg
cmp
int3
popa
push
std
sub
cmp
lret
adc
adc
or
mov
ljmp
adc
xchg
rcll
or
sbb
xchg
cmp
or
and
push
negb
test
inc
mov
fnsave
imul
cmpsl
cmp
pop
mov
out
xchg
lret
add
and
cs
mov
jnp
jbe
data16
loop
pop
fsubs
sti
inc
pop
jecxz
mov
push
enter
push
jl
pop
cmpl
xor
mov
dec
iret
jmp
mov
dec
sbb
push
lret
dec
rcl
je
aad
inc
jmp
and
xchg
cltd
or
fistps
cwtl
ja
lret
sub
scas
and
jp
and
sahf
xchg
subl
mov
inc
imul
xor
pandn
add
out
mov
mov
jno
ljmp
daa
jb
xlat
enter
stc
jl
sbb
lods
std
or
out
enter
mov
sarb
js
lock
out
mov
repnz
cmp
jmp
ljmp
out
jl
sub
out
push
cmp
sbb
pop
dec
lods
fcmovnu
cmp
ret
out
push
inc
mov
bound
dec
icebp
xchg
fsubrl
cltd
sub
xchg
clc
pop
popa
ds
push
xchg
add
and
or
hlt
in
sarl
jge
pop
dec
add
jecxz,pt
adcl
ret
lock
inc
add
cltd
and
cli
xor
mov
test
pop
cli
pop
test
or
fs
adc
stc
inc
call
dec
mov
daa
ja
movsb
cli
pop
data16
rcll
mov
push
icebp
jns
mov
add
and
push
jo
adc
cmpsb
pop
sbb
cmp
push
or
cli
sahf
jp
or
hlt
jl
addl
insb
lea
xor
mov
pop
scas
ss
push
es
and
xor
or
pushf
pop
ja
insl
push
dec
or
push
shll
outsb
int3
mov
push
xchg
xchg
mov
mov
mov
sahf
jmp
jbe
sbb
les
sbb
movsl
leave
pop
lahf
cmpsb
psraw
cld
or
jno
mov
add
int
cmp
adcl
jge
jl
xchg
adc
mov
pushf
sbb
cmp
dec
sbb
loope
ljmp
mov
shll
push
cmp
xchg
test
or
lods
or
or
or
xor
pop
push
shr
enter
daa
loope
jle
sqrtps
lea
pop
pop
add
aad
std
fmul
push
lcall
dec
xor
push
or
pop
pop
cmp
mov
jmp
imulb
inc
sahf
pusha
lds
popf
repz
inc
out
and
sub
ss
sub
icebp
inc
dec
xchg
dec
addl
mov
jmp
sbb
out
cmp
sbb
insb
rorb
jb
arpl
lods
sub
jl
or
or
lret
cltd
gs
dec
push
add
pop
xor
push
jecxz
movb
mov
sub
add
xchg
dec
xor
ljmp
mov
fstpl
ret
lahf
inc
inc
sbb
cmp
lods
adc
mov
push
sub
jae
xlat
aas
add
and
mov
jge
dec
pop
movsl
sbb
jno
or
dec
mov
push
mov
test
icebp
aas
mov
or
inc
dec
mov
pop
neg
or
shlb
xorb
mov
fwait
std
cltd
or
mov
jl
dec
test
ds
ds
stc
adc
imul
idivl
sub
fnstenv
sar
jae
pop
mov
sbb
mov
das
adc
inc
jl
xor
mov
loopne
jmp
jb
mov
pushf
or
stc
sbb
andl
test
inc
add
loope
push
cmpsl
dec
mov
popf
mov
mov
imul
jmp
jne
stos
jbe
xor
aaa
lret
sti
nop
ljmp
cmp
leave
cmp
xadd
rorl
dec
or
lahf
shrb
mov
ret
or
js
pop
imul
inc
xchg
push
je
lret
ret
jmp
sub
scas
loop
out
shrl
mov
sub
jae
aas
jnp
test
movsl
jge
or
sbb
push
sub
ljmp
add
insl
aas
loope
xor
pusha
ds
inc
fstps
add
pop
adc
pop
scas
or
push
fwait
mov
dec
push
roll
ja
mov
cmp
mov
stos
or
xor
push
jp
sbb
std
ja
in
cmp
mov
iret
sbb
dec
divl
int
mov
lea
jbe
es
mov
cs
rol
fildll
out
ds
xchg
sbb
xor
sbb
mov
insl
out
xor
sub
shll
mov
cmp
xchg
sbb
adcl
push
scas
jnp
mov
mov
stos
in
pushf
cmp
insl
mov
pop
and
xor
xor
lcall
nop
movsb
pop
inc
fstsw
out
mov
fildll
dec
stc
out
std
ja
iret
repnz
fidivrl
loop
loop
sub
fcmovu
test
adc
dec
jo
sub
pop
idivb
arpl
aad
sub
jge
ret
sub
sub
das
pop
cmp
fsub
cmp
xchg
popa
inc
xchg
pushf
and
and
mov
sti
lret
inc
xchg
jns
push
sti
cmpsb
dec
aam
or
or
loop
adc
sub
pop
jae
hlt
pop
dec
stc
sub
push
aaa
sarl
jbe
mov
xor
cmp
push
stos
adc
and
add
push
or
ds
sbbl
outsb
sbb
cli
aam
fists
cmp
arpl
mov
aam
jo
or
cmp
cmpsb
mov
add
pop
andl
int
pusha
sbbl
xlat
in
jbe
jg
fldcw
mov
ja
mov
mov
xchg
test
addr16
pop
mov
f2xm1
loop
cmpsb
sahf
jle
jg
adc
pop
adc
adc
mov
fnsave
dec
icebp
lods
jbe
xchg
pop
mov
outsb
dec
loop
mov
push
jmp
shl
push
sahf
xchg
inc
outsb
btr
cmp
stos
sub
dec
stc
or
fidivrl
in
sarl
sub
loopne
dec
movsb
mov
push
pop
cmc
aad
xchg
je
sti
cltd
dec
inc
movsb
mov
pop
pop
dec
jle
cld
mov
mov
add
mov
mov
pop
mov
test
xchg
aaa
pop
and
nop
fisttpl
mov
mov
mov
js
mov
cmp
and
push
lea
outsb
ja
icebp
andb
inc
addr16
or
cmp
repnz
cmp
cmpsb
pop
cmpsb
push
push
pop
cmc
ret
jbe
punpcklwd
or
push
push
ljmp
fiadds
jmp
nop
lea
fdivl
stos
gs
dec
insl
mov
inc
xorb
pop
test
jnp
test
dec
pop
lahf
jnp
push
in
rclb
out
loope
jnp
xchg
in
jno
sub
adc
scas
pop
ds
mov
cli
xor
ret
sarl
xor
inc
mov
xor
imul
bsf
das
dec
in
mov
in
bound
and
push
jge
xlat
push
jbe
sbb
xor
lods
cmc
bound
cmp
push
in
lods
cmp
sub
out
cmc
xor
add
or
jae
or
dec
je
mov
cmp
xchg
dec
icebp
xchg
lock
xchg
call
mov
je
test
mov
dec
test
jl
jo
stos
lcall
adc
xorl
push
xor
add
repnz
adc
add
push
fcoml
pop
xchg
call
pop
ljmp
dec
jo
or
aam
mov
stos
and
lret
mov
mov
jb
repnz
rolb
mov
sbb
or
in
iret
int
mov
mov
dec
pushf
sbbb
pop
push
fdivs
lret
fs
jb
mov
hlt
cmpsb
stos
movsl
and
or
jae
icebp
test
xor
pop
xor
stc
or
mov
lods
jo
in
xchg
aaa
out
dec
adc
ss
dec
jns
mov
cli
sti
push
mov
aam
mov
loopne
mov
mov
lret
mov
xchg
jnp
xchg
xor
lods
mov
imul
ficoms
int
cmp
lods
sti
and
scas
hlt
stc
cld
insb
inc
sub
mov
out
nop
inc
push
jb
test
xchg
loope
fs
add
sti
pop
cmp
cmp
ficoml
jo
out
adc
cmc
mov
movsb
lods
mov
hlt
mov
insb
inc
dec
pop
xlat
inc
mov
and
aas
mov
btc
outsb
in
outsl
je
or
add
aam
clc
push
mov
movsl
sub
jmp
loopne
lods
test
dec
xchg
fistpll
and
sbbl
in
rcll
push
call
shr
std
in
shll
xor
test
xor
lds
push
adc
std
lods
rolb
xor
pusha
mov
inc
mov
std
or
fbstp
pop
lods
cld
jle
dec
inc
xor
in
jo
pop
scas
mov
lds
fs
notb
pop
popa
sub
nop
jle
xor
or
pop
mov
lahf
mov
push
sub
mov
fstpl
pop
xor
dec
mov
jbe
insb
lea
std
imul
stos
sbb
mov
and
fisubl
pop
ja
sub
insl
xchg
icebp
rclb
add
jns
cli
push
insb
xlat
lea
sub
rcrb
sub
xchg
push
pop
jb
push
mov
jle
mov
fdivs
pop
mov
sahf
repz
pop
lods
adc
jg
pop
or
add
imul
lods
or
das
andl
sar
dec
mov
je
in
pop
mov
mov
adc
shll
sub
jbe
inc
push
xlat
xchg
jge
pop
and
cmp
icebp
mov
test
pop
mov
dec
xchg
pop
daa
int
push
out
xlat
dec
or
or
lods
out
or
push
add
fsubs
shlb
sarb
andl
inc
popf
mov
push
push
xchg
inc
pop
loop
and
mov
icebp
rcrl
sbbl
or
fists
ljmp
sbb
jecxz
adc
cmp
or
and
inc
aam
lock
fs
xchg
shll
jbe
adc
cmp
mov
pop
lea
icebp
out
imul
nop
outsl
popf
pop
mov
test
addr16
add
mov
in
xlat
rclb
mov
pop
ret
rcrb
jle
stc
push
adc
hlt
dec
dec
jo
add
push
cmpsb
out
ret
inc
mov
lea
xchg
pop
pop
in
mov
lea
hlt
push
mov
pop
or
ret
or
mov
cli
mov
sbb
push
ja
mov
fstpl
movl
and
popa
inc
ret
cltd
ret
cs
stos
dec
xorl
sbb
sub
mov
add
mov
push
jnp
hlt
inc
mov
lcall
lock
add
sbb
loopne
lret
ret
mov
and
mov
ret
pop
ret
mov
mov
fistps
mov
or
call
push
and
insl
in
push
pop
imul
les
sbb
dec
aam
lcall
lcall
in
xchg
cmp
into
push
sub
adc
idiv
xor
loope
sub
jge
imul
movl
push
fadds
cmp
push
lds
sub
mov
popf
cmpsb
sub
stos
xchg
add
popf
and
movsb
les
daa
adc
pop
lods
mov
jecxz
push
out
iret
mov
jl
cmp
lods
dec
push
icebp
enter
xchg
pop
adc
pop
lea
test
or
fcomps
out
mov
cmp
clc
fisttpl
xchg
adc
pop
adc
ja
mov
shll
and
jnp
cld
mov
daa
add
out
jmp
or
int
cmp
inc
lahf
jp
mov
sbb
xor
mov
jle
adc
stc
sbb
lods
sbb
mov
in
insb
pop
mov
pop
daa
mov
push
mov
cmpsb
jne
sub
cmpsl
mov
mov
sbb
push
out
cmpsb
ds
mov
int
pop
pop
lock
push
or
cltd
or
mov
xor
push
rol
sbb
nop
inc
outsl
push
mov
push
dec
arpl
mov
add
mov
xchg
test
scas
xlat
out
outsb
push
inc
dec
or
push
cmp
sti
or
pop
mov
adc
hlt
push
popf
insl
xchg
out
xchg
jns
jl
call
fsubr
jo
add
faddl
movl
ficompl
test
andl
push
dec
push
push
xor
lea
and
and
sbb
das
out
dec
jae
inc
xchg
pop
inc
jno
js
iret
mov
mov
push
outsl
jne
lret
mov
xchg
jae
pop
inc
adc
pop
rcrb
add
adc
or
push
cmc
dec
jb
xor
jnp
into
shrb
mov
pop
jle
ret
and
mov
pop
sti
mov
mov
inc
roll
test
movsl
test
std
inc
push
pop
push
bound
cmc
and
jae
notl
xchg
cs
jo
adc
sub
and
rolb
mov
cmp
adc
sub
fwait
lods
icebp
pop
cs
std
rclb
mov
mov
dec
pop
leave
sarl
sbb
mov
sub
mov
cld
add
movsl
xor
popf
pop
mov
test
xor
divl
push
dec
lds
dec
push
sbb
movsl
mov
rcrb
ss
sub
mov
pop
pop
lock
or
sbb
test
jno
fildl
and
push
sbb
sub
mov
xchg
insb
sub
inc
cmp
arpl
pop
mov
pusha
adc
leave
aas
mov
inc
cmpb
mov
out
ror
sahf
mov
sub
stos
xor
stos
jge
daa
scas
lahf
out
movsb
data16
xchg
out
jne
sub
pop
xchg
pop
aad
scas
push
mov
je
mov
xchg
roll
xchg
arpl
mov
out
jp
add
sub
sub
rorl
divb
or
sti
pop
loop
mov
js
xor
vphadduwq
add
lcall
dec
in
test
stos
faddl
jmp
int3
mov
sti
jl
adc
jecxz
loopne
test
js
std
sbb
adcb
jmp
xor
daa
and
leave
int
movsl
mov
ja
aas
jo
cmpsb
lods
pop
fsts
nop
lea
dec
sbb
adc
lds
ss
dec
jge
lahf
pop
push
mov
xchg
ss
inc
jmp
shrb
aad
lds
addr16
jmp
fcomp
inc
xchg
lea
outsl
stos
dec
addb
add
test
sarb
sarb
adc
int
sahf
in
jns
xchg
pusha
int3
int
add
ljmp
jo
outsb
pop
loope
cmpsb
rcrl
jno
sub
pop
mov
lahf
add
aaa
pop
cmpsb
sbb
cs
sub
inc
cmpsl
aam
push
mov
cmp
inc
subb
jb
or
inc
dec
push
ss
sub
fcoml
fsubs
lods
mov
and
cmp
cmp
mov
in
lret
enter
xor
cmp
mov
pop
cli
xor
jno
sub
and
xchg
sub
js
popa
inc
repnz
mov
pop
mov
cltd
aaa
jno
mov
ss
add
sahf
dec
or
sbb
vpsubd
inc
je
cld
add
adc
sub
mov
iret
pop
adc
and
and
sbb
mov
outsb
sub
mov
data16
lret
cs
in
enter
mov
and
mov
clc
gs
jne
push
inc
mov
dec
mov
cmp
adc
mov
pop
mov
jmp
inc
andb
pusha
loopne
inc
sbb
jle
std
xchg
ja
pop
int
cmp
subl
fisubs
nop
scas
ficompl
movsb
sarl
jl
adc
add
or
rcrb
ficoml
das
inc
xchg
xchg
test
jo
adc
pop
cmp
stos
inc
dec
shll
push
scas
in
jb
add
pop
scas
insl
andb
les
mov
cmp
ljmp
xchg
cwtl
js
movsb
jae
lcall
cmp
xor
mov
and
adcb
jg
div
adc
jb
mov
xor
stc
test
gs
js
sar
push
pop
into
mov
out
adc
shll
add
push
xchg
call
outsb
les
movsl
test
lods
jmp
xor
add
add
imul
pop
adc
xor
fsub
inc
mov
cmpsb
add
sbb
mov
in
dec
cltd
add
push
test
and
lea
push
add
daa
xor
add
shll
xchg
xchg
push
loopne
insl
stc
mov
push
push
sub
pop
lcall
lods
clc
repz
inc
sbb
xor
push
clc
out
das
push
jnp
mov
and
mov
xorl
insb
xchg
mov
test
dec
outsb
jmp
shl
outsb
cmp
and
stos
pop
addr16
orb
and
rcr
xchg
arpl
bound
ret
xchg
mov
lret
mov
movsl
mov
and
add
cmp
pushf
jae,pn
lea
xlat
add
sub
push
arpl
lea
scas
loop,pt
mov
xrelease
in
loope
pop
mov
popf
xor
dec
push
mov
leave
out
xor
int3
rcrb
or
cwtl
faddl
inc
xor
xchg
mov
inc
xchg
insl
or
push
jecxz
mov
pusha
adc
imul
or
std
dec
mov
mov
mov
jp
int
popf
fldcw
lods
inc
adcb
cld
mov
jne
sahf
push
imul
mov
adc
xchg
lea
test
xchg
in
pop
push
jo
fimull
test
scas
push
mov
lock
int
les
fcoml
xor
push
jno
push
xchg
loope
or
cld
ret
cld
ficomps
andb
movsl
push
pop
cmpsb
sti
jnp
stos
je
dec
lods
roll
mov
jae
adc
lahf
cmc
movsb
fidivl
mov
dec
push
rorb
in
lcall
out
mov
mov
aam
add
cmp
jbe
pop
sub
xchg
mov
psrad
xor
mov
or
mov
rcl
mov
jno
test
popf
lret
push
pop
test
fiaddl
push
in
lahf
xor
out
aad
mov
push
orl
mov
mov
mov
test
ret
pop
xor
mov
in
dec
pop
sub
loopne
mov
jb
fmull
push
inc
or
loop
inc
insl
cmpsb
push
mov
mov
dec
pop
push
outsb
sub
test
sti
inc
inc
mov
jns
xchg
xchg
xchg
movsb
mov
lret
dec
mov
jnp
inc
push
lret
lock
scas
xchg
jo
pop
sbb
or
das
stos
int
clc
adc
out
push
inc
mov
setl
data16
aam
mov
aad
sahf
push
sti
int3
push
daa
sti
inc
pop
js
fnstenv
pop
addr16
ljmp
xor
push
lret
push
gs
add
cmpsl
xchg
xlat
mov
data16
xor
mov
mov
das
lds
pop
push
addr16
imul
divb
test
and
inc
add
into
scas
xchg
mov
pop
cld
stc
leave
adc
lret
add
xchg
mov
lahf
imul
xor
and
xor
sub
jg
or
xor
ret
sarb
mov
fs
insb
ret
lcall
imul
sub
sub
dec
cmp
ret
sub
add
lods
pop
std
mov
mov
iret
fs
push
lret
mov
jnp
out
cld
and
add
outsl
arpl
mov
lods
push
mov
stos
sub
pop
xchg
testb
sbb
and
aas
aad
cmpsb
popf
enter
outsl
in
cmpb
add
mov
stos
aam
lret
sub
add
lret
xchg
dec
or
setl
lcall
or
andps
cmp
mov
icebp
mov
rcrl
push
xor
mov
xchg
jge
mov
sub
pop
cltd
aad
out
push
adc
lods
jb
psrlq
imul
cmpsl
sub
push
stos
mov
mov
idivb
fldenv
stos
dec
imul
lret
ret
jne
cmp
pushf
fs
lods
push
cmc
insb
inc
adc
outsb
sub
sub
push
lods
decb
in
hlt
inc
or
lahf
mov
jbe
gs
je
sbb
sbb
and
ss
dec
jbe
loopne
cmp
adc
cmpsl
jle
push
xor
leave
rcrb
das
inc
cmovns
icebp
xchg
and
or
fsubp
lock
xchg
xor
lahf
ret
lods
push
jle
imulb
inc
repz
xor
xchg
fcomps
mov
jo
dec
loopne
daa
lahf
sbb
mov
hlt
aam
into
push
xchg
mov
dec
mov
dec
out
mov
xchg
adc
rcrl
cmp
mov
fsubrs
push
inc
jnp
mov
pusha
mov
out
pusha
pop
repz
out
bound
push
jns,pt
jp
jno
cmp
and
xchg
fildll
push
pcmpeqw
and
ljmp
decl
enter
add
push
jp
call
insl
push
pop
inc
fldt
dec
dec
lret
in
mov
popl
adcl
outsl
enter
data16
jp
rclb
aad
jae
dec
mov
inc
xor
bound
movsb
mov
cs
notl
push
daa
sbb
loop
push
adc
and
pushw
pop
je
push
ret
test
add
sbb
cmp
out
movsb
cwtl
mov
fisubrl
cmp
xor
in
movsl
cmpsb
enter
ljmp
xchg
das
jl
mov
push
in
push
pushl
in
xchg
mov
pop
daa
pop
subb
xor
dec
adc
inc
and
lret
xor
pusha
scas
ret
mov
gs
pop
pop
cmpsl
jo
shrl
test
adc
adc
pop
xlat
cmp
icebp
ror
leave
lock
sahf
dec
jp
jl
pop
sub
mov
fmuls
add
jo
mov
xchg
cli
xor
push
xor
sub
or
loope
inc
aaa
leave
in
sbbl
mov
cmp
bnd
jnp
mov
stos
xor
adcb
sbb
das
fcmove
arpl
fdivp
pusha
stc
insb
jmp
loop
ss
fcmovbe
push
xlat
jns
sub
add
mov
fists
adc
jae
aas
sub
push
adc
fadds
out
push
push
mov
mov
in
loopne
mov
or
push
mov
fwait
aas
rcll
add
fstp
xchg
loope
inc
cmc
xchg
sub
push
lahf
imul
pop
cmp
mov
mov
iret
lret
mov
mov
xchg
mov
jl
mov
cmpl
in
pop
cmp
inc
mov
mov
popa
jecxz
faddl
in
mov
pop
bound
add
xchg
inc
and
push
sbb
icebp
jns
sbb
sbb
shrl
int
pop
adc
mov
sarb
fwait
xlat
or
push
aad
push
cmp
inc
jne
jo
into
sbb
addl
jg
dec
jb
test
ficoml
add
cmp
adc
jae
test
bound
jmp
inc
xor
cmp
lds
movsl
jle
into
xchg
stos
mov
add
cmp
pop
lods
fucom
fistl
sbb
xchg
push
lcall
add
xchg
and
xchg
and
aaa
out
cmpsl
or
and
std
call
jl
cmp
mov
fcoms
ret
jg
in
jae
in
jnp
je
cmpsl
sub
add
inc
insb
and
fiadds
lock
es
lods
daa
dec
inc
rcl
rclb
and
lock
dec
cmpsb
or
adc
jle
lds
dec
xor
adc
int3
ret
aas
in
cmp
xor
orb
dec
sahf
sub
dec
pushf
shlb
ret
fbstp
mov
inc
push
cmp
pop
pop
push
insl
jmp
shll
mov
jecxz
imul
sbb
push
cmpsb
cmpsb
xchg
sbb
jae
stos
add
imul
push
test
xchg
pop
imul
pushf
add
and
cli
jge
jl
bound
inc
adc
out
xor
xchg
xchg
xchg
lods
jne
and
cwtl
in
ds
jne
push
mov
pop
dec
sbb
jnp
decb
inc
push
jo
push
or
pop
mov
sub
xlat
andb
jge
lret
mov
and
mov
scas
xor
fwait
mov
mov
dec
and
dec
arpl
cli
mov
push
je
mov
add
inc
push
inc
out
mov
push
adc
je
mov
adc
cmp
movsb
cmp
out
cmp
xchg
push
dec
push
pop
xchg
adc
cli
jp
mov
cmp
mov
or
and
or
pushf
pop
imul
repz
mov
movsl
loop
and
insb
inc
lret
mov
pop
xor
mov
out
iret
adc
mov
stc
cs
lods
pop
in
test
icebp
fdivrs
out
jge
cmp
cmp
insb
rcl
push
xorb
rclb
lods
pop
mov
rcrb
and
xor
sti
push
and
pop
je
ds
xchg
arpl
add
dec
cmpb
push
insb
add
push
cmp
fwait
push
adc
popf
addl
fdivrl
mov
sub
mov
cmp
loope
sub
cmp
cld
inc
pop
repz
push
stos
push
or
inc
fadd
adc
mov
inc
push
mov
push
push
je
hlt
leave
stc
mov
cli
inc
loope
movsl
imul
or
dec
mov
into
imul
and
mov
xor
sbb
push
adc
inc
sarb
inc
cmpsl
cltd
mov
mov
ja
lret
xor
mov
jmp
mov
cmpsl
xchg
mov
mov
sbb
loop
pop
or
sub
dec
bound
incl
mov
fbstp
or
mov
out
push
inc
imul
adc
sub
mov
push
test
aam
mov
jb
cmp
cmp
mov
cmc
pop
cld
clc
push
sbb
loop
dec
xor
aas
and
xlat
inc
mov
lahf
adc
aas
orb
mov
push
and
cmp
inc
std
pop
int
dec
xchg
xchg
movsl
sub
les
outsl
push
sbb
pop
scas
cmpsb
and
shl
add
jge
filds
cmpl
test
lahf
in
mov
mov
sahf
adc
fistps
lods
or
imull
data16
rolb
test
jnp
xor
repnz
adc
test
rorl
fisubrl
adc
xchg
stos
subl
outsl
dec
jne
repnz
icebp
xchg
sub
popf
jb
push
pop
testb
pushf
sbb
arpl
in
sbb
add
arpl
mov
clc
cltd
mov
cwtl
xchg
sbb
mov
test
mov
rcr
and
jge
outsb
xor
test
mov
mov
adc
enter
popa
lahf
hlt
stos
cmpsb
dec
jae
and
out
mov
mov
stos
movb
mov
cmpsb
gs
mov
push
push
sub
inc
mov
jmp
adcl
mov
loope
mov
imul
cmp
imul
dec
loopne
loopne
mov
xchg
mov
jmp
cmpsl
jne
stos
popf
mov
jnp
add
clc
xchg
ret
mov
test
pusha
xor
sbb
and
xor
add
roll
dec
hlt
jp
xor
jbe
adc
adc
insl
jp
push
add
cmpsb
pop
push
mov
jecxz
mov
mov
pusha
xor
xchg
dec
ret
leave
mov
test
mov
sub
test
loopne
mov
pop
jge
push
out
sbb
or
int3
pushf
fnstenv
adc
lcall
shrb
xchg
insb
jns
push
cmp
movsl
cmpsb
lock
inc
cmc
mov
mov
pop
push
pushf
stos
sub
outsl
lret
ret
repz
or
add
out
dec
imul
cwtl
fcmove
outsl
and
adc
xor
shl
ret
jae
mov
stos
popa
mov
mov
scas
cmp
shlb
les
mov
and
dec
call
int3
dec
ss
mov
jp
cmpsb
aad
adc
aad
gs
pop
push
je
lret
inc
pop
movl
outsb
sub
pop
jge
fistpl
push
xchg
push
rcr
push
stos
ret
cwtl
adc
pop
shll
mov
inc
pop
loope
ret
sarb
inc
lods
mov
mov
pop
and
xchg
les
fucomi
jbe
out
leave
sbb
std
and
int
add
into
jbe
movsl
xor
add
lahf
mov
icebp
xchg
push
out
sub
or
mov
mov
popf
and
cld
lcall
jnp
pop
cwtl
daa
mov
pop
cld
mov
rcrl
int3
testl
movsl
in
mov
add
aaa
fidivl
mull
mov
iret
lret
ret
outsb
out
mov
jge
dec
out
gs
inc
jne
stos
dec
push
outsb
int3
mov
fiaddl
clc
adc
popf
xchg
dec
adc
pop
cmp
cmp
mov
iret
lea
and
call
xchg
std
xor
mov
xchg
push
and
jmp
mov
fidivs
mov
mov
adc
sti
adc
pop
rcll
or
pop
cltd
ror
ljmp
test
jbe
aad
dec
jns
mov
pop
js
sbb
mov
test
leave
mov
imul
shl
fdivp
aaa
cld
pop
jg
das
pop
xor
xchg
addl
outsb
out
ret
or
jbe
aaa
xor
push
jnp
fildl
lods
fstpt
stos
sbb
andl
dec
pop
aam
and
and
scas
or
cmpsl
in
inc
test
loopne
jbe
add
and
popa
mov
movsb
or
push
dec
pop
hlt
dec
push
mov
adc
test
push
and
outsl
loope
xor
jge
push
popf
dec
mov
int
ja
fadds
scas
mov
adc
iret
mov
ret
cs
test
insl
out
push
sub
iret
mov
mov
xchg
pop
fisubl
cmp
sarl
sbb
adc
outsl
inc
or
push
and
cld
aaa
sbb
outsl
fdivrl
sub
adc
fiaddl
push
mov
enter
push
ret
mov
lret
mov
mov
xchg
das
cmp
push
shl
dec
scas
push
mov
aaa
je
repnz
ljmp
popa
xor
sbb
enter
shrl
enter
mov
push
sub
int3
inc
xor
leave
add
mov
mov
loope
imull
lods
sbb
sahf
jle
imul
push
cmp
fsts
andb
js
inc
push
inc
aam
push
sub
lret
dec
mov
mov
mov
jnp
fs
icebp
and
and
mov
scas
aad
push
stc
insl
push
call
xchg
add
cmp
sbb
int
shrl
divb
scas
pop
pop
dec
pop
in
roll
sbb
dec
inc
dec
push
shll
orl
lahf
filds
or
mov
push
mov
inc
pop
fimuls
jmp
inc
jg
cmp
jmp
mov
fldt
mov
sub
push
fdiv
dec
stos
iret
xchg
mov
push
jmp
push
test
and
in
push
ret
sbb
mull
xor
leave
pop
loop
push
xorb
inc
or
jne
out
mov
out
movsb
xchg
and
sahf
and
adc
or
mov
xor
mov
fldcw
push
scas
iret
push
test
jns
mov
mov
nop
add
sub
mov
insl
outsb
dec
popf
lods
jg
push
int
loope
stos
push
les
gs
stc
cmp
mov
mov
movsl
rcrb
les
lahf
jnp
insl
push
outsb
jne
aad
and
xor
nop
insl
jne
sahf
cmc
or
test
nop
xchg
stos
testb
jmp
jo
popa
jne
adc
test
shll
popf
cmp
inc
lea
loope
lcall
out
inc
imul
cmc
movsb
dec
dec
xorl
fstps
enter
sbb
xchg
add
fldcw
ljmp
in
mov
xor
and
push
xor
sbbl
adc
mov
shrl
mov
add
mov
lret
les
inc
sbb
xor
jg
pop
dec
cwtl
mov
test
les
push
jne
sti
jmp
adc
adc
adc
pop
mov
dec
mov
aam
inc
cmpsl
jns
xchg
jge
lock
in
cmpsl
clc
inc
out
shlb
out
push
mov
mov
in
and
xchg
in
mov
cmp
lods
les
jmp
mov
hlt
add
xchg
aas
cwtl
mov
cmp
xchg
add
jo
dec
lods
addb
loopne
sarb
pop
jmp
cmp
dec
dec
jmp
pop
pop
jae
pop
ja
push
ret
jp
filds
sub
mov
dec
mov
divb
mov
cs
popf
ja
sub
aaa
fcoms
or
movsb
ljmp
in
add
dec
add
inc
push
out
dec
ds
dec
pushf
cmpsb
mov
leave
inc
sbb
push
jl
mov
mov
mov
jle
push
int3
ja
pop
ljmp
insl
aad
notl
loopne
sbb
aaa
lea
sbb
adc
and
aam
aaa
mov
int3
push
nop
imull
sub
cmpl
push
cmpb
fistpl
jl
mov
cltd
scas
mov
fs
inc
pop
jbe
add
and
ficompl
add
mov
mov
repnz
and
js
lds
xlat
roll
pop
push
cmc
jno
push
add
push
xchg
leave
aas
imul
sub
inc
sahf
push
cmp
xchg
test
mov
jo
popa
imul
mov
jle
push
hlt
sarl
inc
xchg
cwtl
mov
push
out
addb
repz
push
leave
jmp
dec
and
loop
pushf
inc
jne
nop
mulb
push
xlat
add
fisubl
dec
aas
push
and
inc
lret
notb
xchg
fcoml
sub
and
inc
push
shll
pop
cmp
add
ljmp
ret
sub
in
inc
nop
nop
pop
adc
fdivs
or
jecxz
pop
jne
aaa
cmp
mov
rolb
sub
je
pop
out
xor
pop
xor
mov
movsl
fs
dec
jns
or
insb
mov
lret
mov
xlat
dec
das
test
push
xchg
xorb
hlt
pop
and
lds
popf
push
int3
mov
dec
cwtl
stos
fsub
rorb
frstor
icebp
std
shrl
in
jge
insl
push
jne
imul
sti
fisubl
pop
push
adc
mov
les
mov
mull
ljmp
js
pop
movsb
mov
mov
mov
add
add
add
mov
mov
ret
roll
sbb
adc
mov
loope
jl
imul
jb
inc
mov
stos
enter
hlt
ja
fisttpll
mov
das
xchg
push
loopne
adc
inc
mov
jns
push
inc
mov
hlt
jmp
push
dec
scas
es
or
out
pop
mov
push
mov
int
or
mov
repnz
ret
or
adc
sbb
mov
je
inc
mov
mov
in
jp
mov
jo
loope
cltd
and
inc
inc
adc
xchg
js
or
inc
xchg
cmpsb
in
loop
push
rorl
js
fmull
mov
popa
data16
cmp
xchg
ja
iret
adc
cmp
imul
inc
jge
push
inc
aaa
fsubs
push
daa
sti
inc
cmp
hlt
int
xchg
nop
lcall
jle
outsl
jecxz
es
test
adc
inc
jae
roll
push
xchg
inc
data16
jg
jecxz
in
or
jbe
xor
mov
push
jp
idivl
xor
out
xor
shr
in
iret
dec
inc
dec
sub
cmpsl
push
push
enter
xor
enter
pusha
je
shl
aam
jbe
sbb
stos
in
dec
adc
adc
xor
ss
js
lods
sub
mov
fisttps
jge
mov
lahf
jb
xor
movsl
cmp
and
clc
mov
insb
aas
xchg
or
mov
xchg
mov
mov
pop
xlat
cmp
pop
js
jp
out
mov
lret
cli
mov
ljmp
sti
int3
xchg
enter
add
mov
shrb
mov
sub
push
inc
add
insb
adc
xor
pop
cwtl
lock
shll
or
popf
insl
ljmp
mov
stc
iret
rdmsr
das
pop
xchg
sti
push
mov
xchg
add
fcomps
outsl
cld
insl
xchg
int3
inc
mov
orb
shrl
sub
push
xor
push
and
inc
sub
lods
mov
inc
idivb
mov
lods
and
in
xchg
sbb
jb
movsl
insl
rol
xchg
lods
push
xchg
je
sbb
fwait
add
dec
scas
clc
add
repnz
leave
in
jmp
jmp
push
dec
iret
pop
sahf
call
and
fadds
sti
xchg
or
xchg
mov
jmp
sub
sbb
decb
out
pop
data16
jnp
adc
jge
push
inc
mov
xchg
fldl
in
mov
ljmp
jbe
inc
adc
dec
xchg
rclb
cltd
cmp
std
xchg
cmp
out
or
or
inc
mov
dec
push
lcall
mov
testl
ret
pop
lret
jp
dec
cmp
cmp
jl
mov
pop
and
cmpsl
or
mov
jnp
shlb
xor
shl
mov
test
ja
fsubl
mov
xor
movsb
push
gs
fneni(8087
adcl
mov
sbbl
jl
js
mov
xor
sub
and
cmp
ficomps
clc
xchg
cmc
or
lcall
divb
and
out
mov
inc
testb
mov
mov
pushf
fwait
xlat
or
mov
nop
dec
cmp
fmull
sbb
jmp
scas
aas
pop
xor
mov
cmpsl
in
hlt
lods
out
push
or
lods
mov
test
mov
add
ds
mov
rcrl
pop
mov
stos
or
jb
fsubrs
push
fmull
clc
imul
adc
psubsb
jmp
test
cmp
jno
enter
icebp
add
push
cmp
cmpsb
and
pop
inc
push
fidivs
loop
jp
or
cmp
fcomi
and
adc
jb
jge
out
data16
jmp
jmp
add
cli
inc
push
jge
mov
mov
rolb
sti
mov
mov
mov
adc
dec
int3
mov
xor
cmp
jo
adc
mov
movb
insb
mov
pop
jmp
call
pop
jbe
inc
imul
addb
dec
into
lcall
jge
out
mov
push
loope
mov
mov
xchg
out
sub
stos
jae
mov
cmpsl
fdivrl
dec
and
xchg
cwtl
fdiv
or
test
jo
mov
stos
mov
mov
mov
or
sbb
movsl
imul
ficoml
adc
jecxz
push
ds
outsl
fcomps
test
pop
lods
lahf
xchg
test
popf
int3
test
stos
and
leave
pop
ficoml
fdivl
std
ret
sub
inc
mov
aaa
lods
outsl
aas
scas
je
mov
or
cmp
dec
xor
gs
push
inc
mov
lahf
testb
pop
testb
and
ljmp
mov
mov
or
popf
mov
xchg
sub
addl
push
das
lds
pusha
pop
data16
dec
int
in
andl
add
or
in
icebp
mov
push
rcr
subb
cmp
sbb
pop
iret
lcall
dec
aas
popf
push
testb
idivl
sbb
loopne
fildll
int
push
add
mov
std
add
xor
rcrl
leave
pop
mov
pop
mov
in
dec
pushf
loopne
cmp
push
pop
fdivl
or
idivb
shll
fiaddl
imul
pop
jle
cmp
xlat
mov
mov
push
repnz
mov
mov
jbe
cltd
jb
xchg
mov
cmpsb
dec
mov
ja
or
add
or
scas
mov
push
mov
mov
pop
jg
cld
bound
or
cmp
inc
lods
xor
cmpsl
pop
into
shlb
iret
ds
gs
push
inc
jmp
cmpsl
ss
dec
jl
sbb
mov
pop
movsl
incl
sbb
dec
pop
mov
stc
lods
loope
xchg
leave
js
and
push
xchg
inc
jae
in
js
xchg
lock
and
or
call
and
mov
push
sahf
add
pop
push
enter
fdivl
outsl
push
mov
mov
test
int
jl
push
add
xchg
xor
pop
int3
sbb
mov
mov
insb
bound
inc
add
dec
loope
xor
orb
cltd
aad
mov
adc
test
dec
loope
outsl
inc
pusha
stos
adc
pop
out
add
push
inc
jle
lret
lret
dec
dec
push
mov
cltd
and
test
or
jp
outsl
mov
push
push
inc
cs
jmp
outsb
xlat
testl
mov
push
test
cmp
pop
jns
xlat
sbb
pop
int3
imul
mov
sbb
outsl
loopne
sbb
push
pop
js
rcrb
mov
mov
lea
insb
xchg
pop
inc
or
lret
loopne
or
pop
iret
fwait
mov
jno
out
add
cmp
sub
push
mov
daa
ja
xor
xor
xchg
cmp
fisubrl
push
lret
jnp
xchg
rolb
inc
inc
cli
fisttps
xlat
daa
xchg
mov
stos
lea
dec
vpperm
sub
xchg
nop
mov
bound
mov
dec
or
dec
adc
popf
add
cmp
scas
cmc
and
push
lods
add
aad
push
mov
jmp
insl
popf
es
xchg
sbb
inc
cmpsb
sbb
xchg
out
lods
push
mov
aam
push
inc
jno
mov
pop
xchg
mov
loopne
ds
push
add
dec
adc
ja
test
inc
in
lret
push
jb
or
loop
or
notb
ljmp
mov
adc
cmp
jo
mov
mov
dec
and
inc
cli
pop
xor
pop
leave
lods
mov
xorb
sub
mov
add
dec
push
push
adc
repnz
jp
push
lods
jmp
hlt
scas
fmul
mov
xorb
cwtl
fisttpl
and
lret
sbb
mov
push
mov
loopne
sbb
out
pop
fcompl
outsl
repnz
shlb
fisubrl
flds
int3
mov
cmp
pop
mov
das
dec
inc
dec
ret
sarb
xchg
mov
mov
enter
call
or
cmp
outsl
enter
jnp
leave
sub
fcomp
mov
dec
insl
inc
jne
pop
sub
bound
movsb
aad
jb
arpl
xchg
dec
call
inc
xchg
mov
stos
adc
mov
cltd
pop
mov
stos
pusha
adc
push
scas
cmp
jle
adc
jb
jnp
lahf
inc
jecxz
mov
aam
or
rorl
pop
dec
pop
add
mov
dec
hlt
mov
pop
xor
data16
push
out
mov
fcmovb
jecxz
cmp
jp
lcall
aad
dec
mov
das
cmp
jmp
push
and
cmp
jecxz
rcrl
ja
cmpsb
dec
test
jo
imul
cmp
adc
out
sub
jb
and
xor
sbb
shrb
pop
lcall
sbb
cs
push
cli
cltd
pushf
or
xor
push
pop
xchg
movsb
pop
mov
jge
jne
std
jne
adc
rorl
dec
add
enter
jp
movsl
iret
sbb
fiadds
pop
in
add
imul
icebp
dec
movb
stos
cmp
aas
jo
pop
mov
andl
cs
sahf
jne
pop
cld
lods
lods
pop
stos
dec
pop
loopne
and
xchg
dec
and
adc
addr16
inc
push
ret
jne
insb
test
and
push
sahf
es
push
iret
push
cld
jns
adcl
test
bound
out
mov
mov
mov
in
ss
es
inc
mov
test
fwait
pop
mov
sahf
xchg
dec
pushf
mov
cmpsl
add
adc
jg
push
pop
jl
fld
mov
mov
clc
mov
in
xchg
inc
mov
xor
fs
jne
addr16
dec
imul
clc
fldl
ja
and
pop
out
add
sbb
adc
rcrb
and
jle
negb
adc
pop
pop
pop
dec
jle
sahf
hlt
in
fisttpl
jns
mov
jl
mov
push
push
and
mov
xor
xor
mov
mov
pop
fsubp
xor
sub
xor
loopne
repz
sbb
lock
adc
lock
inc
outsl
repz
loop
aam
cwtl
in
ficoml
jno
mov
dec
mov
jo
test
leave
jo
push
and
leave
or
fs
imul
sub
xchg
inc
pop
mov
mov
cmc
pop
sbb
flds
bnd
loopne
test
icebp
popf
add
ljmp
outsl
dec
inc
aaa
sub
enter
rep
mov
aam
mov
adc
popa
ljmp
ret
jg
inc
rorb
sub
ljmp
fs
fs
or
mov
pop
push
inc
cmp
mov
divb
lahf
inc
icebp
or
add
inc
movb
xor
xor
sti
psubusb
mov
cmp
jne
or
cs
into
xchg
mov
pusha
leave
daa
arpl
push
dec
xlat
pop
mov
cmpsl
icebp
lods
xor
mov
fstl
add
mov
outsl
inc
out
rcrb
decl
test
cltd
cmc
lds
test
test
mov
cmp
or
es
add
push
push
mov
bound
jecxz
lock
lcall
xor
arpl
cmpsb
push
mov
stc
leave
xor
call
sub
inc
push
shl
jnp
push
mov
movsl
pop
xchg
sbb
outsb
mov
aas
inc
shlb
movsb
cmpsl
je
dec
add
test
dec
shlb
movsb
leave
rolb
cmp
sub
xor
mov
ljmp
add
sbb
adc
mov
jae
push
sbb
cmpsb
pop
or
std
arpl
mov
daa
mov
mov
movsb
movsb
adc
dec
or
jge
lds
dec
in
stc
pop
push
jbe
jae
pop
fsubs
imull
aas
pop
das
icebp
jg
jbe
loop
sbb
dec
xchg
push
cltd
mov
test
imul
mov
jno
mov
cmp
cli
and
xchg
xchg
scas
inc
fidivrs
mov
aad
out
push
cmc
xchg
pop
mov
dec
gs
dec
fisttps
inc
scas
mov
xchg
dec
das
jo
push
inc
test
ret
lock
sti
jl
out
mov
push
mov
jnp
jcxz
and
mov
push
movsb
sub
daa
jmp
jnp
add
jnp
xchg
imul
mov
orl
scas
adc
and
insb
cmp
iret
cltd
pop
hlt
push
and
mov
popf
rcll
fisttpll
test
jb
cmpsb
arpl
mov
mov
xor
adc
ret
push
test
inc
sub
lods
outsl
rcrb
gs
push
jl
ja
lret
ret
jmp
mov
cmp
sbb
test
xor
in
cld
lahf
fs
jp
xchg
mov
mov
cmp
adc
or
push
mov
dec
add
mov
sbb
jp
fists
sub
into
and
adc
xchg
dec
jecxz
dec
xchg
shll
insb
movsb
xchg
dec
push
das
lods
imul
push
test
shll
das
sub
fwait
jo
bound
mov
mov
subl
and
imull
and
pop
mov
sbb
push
mov
inc
add
in
mov
and
xor
fistl
lret
xchg
or
xchg
sub
add
push
loope
or
sbb
sbb
sti
das
int3
test
mov
in
adc
ret
repnz
push
push
stos
repnz
das
jmp
or
fdivrl
push
test
insl
adc
sbb
jns
pop
mov
cltd
jbe
adc
test
mov
pushf
sbb
xlat
push
enter
inc
jnp
adc
or
pop
pop
push
mov
cmp
mov
adc
test
test
sub
pop
add
jle
out
das
sbb
push
jno
nop
cmp
cltd
lods
fcmovb
fistl
and
aaa
loope
mov
add
jp
or
pop
cs
push
in
enter
or
movq
sbb
dec
cmp
fwait
lods
add
jp
in
jp
mov
aam
aad
aaa
sbb
fdivrl
fisttpl
sub
xchg
addr16
pop
xor
fcoml
xlat
mov
fcomip
notl
pop
test
insb
in
jne
jmp
mov
jg
subb
outsl
mov
mov
jge
cmp
xchg
pop
add
adc
fidivrs
inc
sbb
or
mov
lods
push
cmpb
stos
int
or
adc
or
ljmp
aad
jl
lods
pop
and
daa
xor
int
push
arpl
rcl
and
mov
bound
inc
rorb
jae
mov
arpl
add
pop
bound
xor
push
lret
push
test
jmp
pusha
push
add
sub
movsb
add
out
inc
stos
fsts
test
in
add
mov
mov
lret
push
ss
pop
aad
jo
dec
mov
mov
mov
jne
xchg
or
add
and
roll
mov
int
imull
fsubp
xor
arpl
sub
lea
fcom
xor
sahf
loop
fs
xchg
les
int
bound
cli
aam
xchg
test
loop
fimull
fwait
sbb
fidivrs
cmpsl
not
mov
mov
mov
scas
mov
outsl
movsb
xchg
lret
pop
and
ds
jmp
test
pop
js
fisttpl
dec
repnz
mov
mov
fldenv
push
pushl
outsb
mov
xor
cmp
mov
inc
popa
daa
or
mov
sub
lret
mov
hlt
xchg
dec
adc
or
arpl
push
jne
push
pop
cmp
clc
mov
and
clc
dec
adc
das
jge
fst
adc
scas
stos
fsts
js
sub
shrl
push
lods
lret
xor
sbb
popf
xor
dec
push
push
lahf
aad
lds
shrl
sub
pusha
adc
xchg
ret
or
cmpsl
movsl
or
mov
test
and
imul
push
inc
mov
add
decl
fimull
cwtl
int
sub
imul
out
jne
inc
repz
dec
jo
mov
jno
push
or
jae
and
jo
test
sbb
xchg
xlat
fwait
mov
iret
sub
mov
gs
sub
ljmp
in
insl
in
add
mov
push
lcall
sub
cli
out
fisttps
in
pop
out
inc
enter
xor
adc
scas
jmp
cli
adc
icebp
mov
mov
sbb
aas
mov
pop
jno
shlb
and
or
je
call
cld
icebp
xchg
gs
out
out
and
pop
mov
mov
test
pushf
mov
sbb
rol
addr16
repz
push
mov
or
pop
loopne
lret
sub
push
aaa
jp
and
mov
mov
cmp
stc
loopne
sub
fildl
les
ljmp
outsl
inc
mov
or
std
test
add
stc
ds
mov
nop
push
jecxz
inc
in
lcall
fcoms
cld
mov
cli
es
jle
jecxz
inc
or
int
imul
cli
mov
movsl
and
cmp
cmp
sbb
push
push
xor
fiaddl
cmp
adc
mov
jl
out
push
in
mov
dec
pushf
adc
xor
hlt
outsb
inc
test
push
xlat
dec
and
xchg
push
lds
pop
imul
repnz
pop
jne
sbb
testl
add
xchg
pop
pop
cmp
cmpsl
idivl
inc
movsb
cwtl
test
sub
stos
jns
ror
adc
mov
fcoml
test
bnd
and
mov
test
pusha
out
push
add
out
jmp
andb
xchg
sub
adc
mov
cltd
add
mov
push
mov
push
in
sub
sbb
inc
pop
xchg
notl
inc
lcall
cs
mov
push
xor
pop
std
or
inc
loope
filds
lret
stos
pop
dec
jb
clc
sti
and
orl
add
fcmovnb
jbe
inc
push
or
mov
sub
add
jmp
fstpl
pop
outsl
cmp
popa
jg
jbe
push
mov
sbb
push
data16
pop
addr16
addr16
mov
sti
pushf
xchg
xchg
jnp
loopne
insb
jecxz
pop
cmpsb
popa
jge
or
add
push
dec
loopne
cmp
pop
aam
popf
sbb
mov
int3
mov
aas
sub
aas
in
inc
or
cli
sub
aad
mov
fimull
flds
outsb
cmpsl
push
popa
les
pushf
ja
adc
or
mov
js
push
mov
push
ret
push
add
ljmp
hlt
or
repz
scas
and
in
in
cmp
xchg
stos
and
fstpt
outsb
bound
loop
int
push
lcall
xchg
jle
cmpsl
ret
pop
mov
jno
movsl
mov
lcall
inc
leave
pop
mov
pop
mov
dec
inc
jnp
mov
loopne
jb
inc
das
xchg
js
dec
fwait
jae
cwtl
fcoms
divl
cmp
icebp
jne,pn
mov
rcrb
pop
xor
ss
inc
addb
xchg
fcompl
lods
fisttpll
rorb
sub
neg
mov
fs
xchg
lahf
js
cmpsl
filds
call
movsb
pop
cs
adc
arpl
test
inc
test
add
add
repz
push
add
cltd
popf
sub
pop
mov
push
test
cli
xchg
mov
push
and
xchg
inc
push
sbb
std
sbb
js
les
inc
test
testl
icebp
or
pop
mov
pop
or
mov
pop
cmpsb
repz
jbe
xor
xor
insb
jbe
mov
mov
nop
lret
or
mov
jl
mov
inc
mov
inc
xor
sbb
push
ja
popa
adc
cmc
push
ffreep
and
rcl
and
jae
xchg
popa
imul
andb
adc
lods
mov
imul
cmp
xchg
sub
adc
inc
pushf
jg
in
arpl
dec
mov
popa
mov
xchg
cmp
imul
jo
or
push
cltd
cmp
insl
mov
sub
outsl
scas
fidivrl
or
and
push
imul
shll
mov
idivl
cmpb
mov
xchg
sub
inc
inc
adc
int
call
insl
pop
cmp
ds
int
int
jle
popa
std
or
cltd
aaa
add
inc
fisubl
pop
add
pop
stos
insl
mov
test
rep
mov
lea
pop
sbb
mov
xchg
or
or
rcl
jle
xchg
mov
test
mov
out
add
add
ret
dec
mov
mov
stos
leave
dec
outsl
dec
stc
inc
mov
outsb
cmpsl
into
fiaddl
icebp
in
jns
je
out
shll
sbb
mov
in
pop
adc
mov
jle
fidivs
into
add
je
outsb
fadds
mov
xchg
mov
or
jns
fdivrs
cmp
jne
mov
loopne
test
jns
and
inc
mov
xor
push
inc
xor
xchg
xchg
mov
out
mov
and
fsts
jne
adc
ss
and
xor
xchg
daa
sub
sbb
dec
pop
sbb
mov
loope
ljmp
dec
push
hlt
arpl
pusha
imul
scas
jmp
mov
mov
or
std
sbb
in
mov
out
addl
mov
jmp
std
fdivs
rcll
and
push
outsl
cli
jg
dec
add
stos
inc
lods
pop
les
cwtl
dec
add
jae
dec
loope
repnz
mov
push
or
dec
cmpsb
in
and
sub
mov
dec
add
pop
push
pop
add
lock
or
loopne
into
sarl
mov
mov
mov
xchg
mov
xchg
and
or
add
cli
stc
mov
sub
cltd
cmp
rcrb
in
sbb
jmp
hlt
mov
fmull
push
push
inc
fs
adc
jge
xchg
inc
dec
test
sub
sbb
pop
insb
test
arpl
adc
push
add
insl
pop
jg
fstps
xchg
into
loopne
mov
fidivl
add
sub
outsb
jne
jl
cmpl
mov
cwtl
sub
mov
rcrl
and
movsl
mov
mov
dec
mov
mov
sub
mov
inc
xor
ret
mov
push
inc
sub
das
cmpsb
cmc
lahf
loop
test
add
faddl
jbe
adc
ds
dec
sbb
pop
pop
mov
outsb
lcall
mov
pop
sti
jle
mov
xor
arpl
rcrb
inc
ret
adc
in
mov
sbb
mov
cmp
pop
add
jl
fs
xchg
dec
addr16
scas
lods
unpcklps
or
push
add
scas
fsubrl
xor
push
xchg
mov
mov
xor
mov
ret
mov
test
aaa
mov
ja
pop
mov
sbb
mov
mov
jmp
flds
xchg
out
pushf
daa
jno
shlb
cmp
mov
jnp
pop
sbb
or
shlb
and
jae
insb
stc
js
adc
hlt
lret
not
jb
sub
cs
int3
xor
enter
inc
mov
lods
pop
leave
lcall
cmpsb
pop
std
shl
stos
pop
mov
jg
faddl
add
push
or
loope
mov
xor
imul
out
shlb
mov
aas
mov
add
mov
mov
lret
jmp
dec
jbe
and
inc
call
xchg
push
mov
cld
out
test
dec
xor
in
test
pop
cmp
fwait
pop
dec
sbb
and
pushf
jmp
sub
pop
inc
xchg
ljmp
scas
push
mov
or
cmpl
fs
sub
faddl
loope
fstps
les
ficoml
jo
icebp
mov
sti
xchg
mov
movsl
mov
mov
hlt
push
inc
lods
jb
fcoms
add
movsb
icebp
or
out
dec
fadd
mov
aaa
jnp
jnp
shlb
out
inc
fs
into
inc
call
mov
mov
jo
lret
cmpsb
icebp
mov
aad
loop
cmp
sub
fwait
in
mov
int3
cmp
das
sub
ds
cmpsl
pop
lock
jae
mov
loopne
mov
sub
push
inc
out
pop
xlat
sbb
ds
inc
jp
sub
clc
push
psrad
test
mov
jnp
xchg
jbe
out
xchg
scas
lahf
aas
jp
push
add
or
or
push
loopne
jmp
or
or
testb
and
adc
sub
mov
mov
xchg
jmp
sbbb
xor
xchg
mov
jb
mov
enter
sub
jo
xchg
lret
pop
call
pop
sub
stos
push
xlat
repnz
jp
adc
aam
std
loopne
in
je
jecxz
fs
adc
std
cld
rclb
dec
pop
movsb
fs
push
dec
sbb
std
fistps
call
or
loope
dec
adc
fiaddl
lea
push
addr16
div
xchg
loopne
and
jae
fldl
xchg
insb
add
into
sbb
cmpsl
sbb
pusha
insb
movsl
stc
cmpsl
mov
jmp
nop
ret
testb
push
lret
add
sub
orb
aam
push
cwtl
jae
inc
lea
cmpsl
mov
sbb
push
and
lcall
cli
ret
dec
pushf
xor
imul
icebp
je
mov
rcrl
dec
mov
mov
push
jae
or
sbb
push
mov
inc
lret
adc
aad
pushl
jge
fbstp
in
adc
cmp
mov
loope
ret
dec
js
jae
mov
nop
sub
jge
push
or
jae
fidivs
inc
xor
sahf
and
subl
ljmp
jbe
cs
flds
mov
dec
push
inc
pop
push
or
and
sub
adc
mov
js
dec
lret
cld
and
inc
shll
pop
popf
push
sub
jmp
add
jle
es
testb
ficoms
repnz
dec
in
add
sbb
dec
decl
mov
push
push
push
rolb
xchg
pop
or
mov
sbb
ljmp
jp
inc
push
jle
xor
cmp
popa
movl
inc
ja
push
cmpsl
mov
out
or
lahf
lds
push
or
sub
pop
jmp
call
mov
outsl
cmpsb
sti
shlb
lret
ret
jo
fsts
add
in
sbb
mov
jg
orl
in
and
fldt
xor
cmc
into
out
inc
cmpsb
stc
dec
das
push
imul
ds
and
pushf
aas
pshufw
cmp
orb
xchg
mov
xchg
out
dec
icebp
push
arpl
adc
xor
sub
ja
push
push
push
jnp
aas
push
ret
jge
cli
clc
shll
inc
mov
rcrl
cwtl
rclb
iret
xor
add
xorl
jnp
jmp
out
test
mov
hlt
lock
stos
fnsave
fists
adc
pop
int
fildll
mov
mov
xor
test
mov
icebp
dec
in
jl
rcr
adc
popf
sbb
movsb
cmc
std
sub
sub
test
inc
test
xchg
adc
shl
add
mov
divb
imul
lret
sub
fsub
imul
mov
mov
push
loop
xchg
addr16
out
mov
andl
sub
mov
jp
push
sbb
xor
pop
rcll
cmp
xor
imul
std
imul
xchg
je
aam
loopne
mov
call
sbb
loope
cmp
dec
xchg
xchg
inc
mov
and
mov
popa
insb
sub
pop
lock
sbb
jl
ret
lcall
cmpb
enter
sbb
jnp
lods
fildl
insl
xor
jg
repz
or
roll
daa
jmp
leave
cmc
jle
pop
adcl
arpl
jbe
mov
xor
subb
and
scas
add
adc
mov
cli
mov
aas
inc
xchg
les
popf
mov
xadd
jne
adc
add
adc
xor
mov
sub
sub
lock
mov
dec
cli
jnp
lds
xchg
dec
insl
push
in
cmc
int
ds
pushf
int
es
fs
mov
cmp
push
inc
cmp
mov
jle
xchg
cmp
popf
jne
xor
and
ja
lods
aaa
sbb
jle
lods
icebp
add
cld
stc
xchg
cmp
out
cwtl
shl
roll
nop
les
xchg
ror
sbb
add
mov
or
out
xor
paddd
push
and
add
arpl
xor
inc
jle
cwtl
pop
scas
pop
xchg
push
pusha
outsb
rclb
aaa
loop
xchg
dec
scas
mov
jmp
add
int3
mov
sub
inc
pinsrw
mov
add
shlb
enter
jns
rcrl
popa
xor
push
out
cld
mov
sbb
or
std
jno
adc
cmp
jecxz
int
sub
ja
push
cmp
mov
xchg
and
push
mov
jnp
mov
mov
ret
pop
xchg
lds
jae
shrl
fwait
xlat
xorb
jae
push
popf
inc
xchg
jbe
push
mov
into
popf
aaa
adc
xchg
push
mov
cltd
sub
icebp
insl
cmp
sahf
jecxz
pusha
push
leave
sbb
push
test
mov
rcll
mov
add
xchg
je
jle
hlt
mov
xchg
es
push
ljmp
jle
jp
dec
or
sub
jae
pushf
sub
push
insb
into
inc
out
fwait
pop
cmp
stc
ss
cltd
pop
jg
adc
dec
push
mov
ja
inc
mov
xor
pushf
cmp
jb
adc
jno
lret
test
xor
test
xor
fs
pop
dec
sub
push
adc
out
test
std
in
enter
stc
frstor
nop
xchg
or
in
aam
sub
aas
lret
mov
scas
pop
cld
and
add
lds
insl
pushf
xchg
ds
dec
loop
mov
dec
out
push
mov
call
and
pop
mov
sub
leave
and
and
pusha
inc
jp
jecxz
loope
dec
repz
lret
adc
int3
fcomp
rol
push
pop
daa
arpl
xor
aad
sbb
mov
addr16
sub
dec
cmpsb
pop
aad
mov
imul
lret
lret
jecxz
dec
add
insb
xchg
es
push
mov
or
ret
imul
xor
stos
pop
jns
dec
jl
inc
mov
xchg
xorl
nop
sbb
pop
lahf
rclb
push
dec
mov
insb
out
imul
leave
test
push
cli
sbb
cmp
pop
lcall
nop
sbb
stc
dec
inc
rolb
cmpsl
aas
cs
jns
arpl
punpckldq
add
cmp
push
cld
sub
adc
pop
dec
hlt
sub
mov
jle
dec
add
sbb
fstps
mov
xor
mov
mov
in
pop
fisubl
inc
adc
mov
mov
sarl
mov
inc
into
rclb
test
iret
jne
mov
sub
roll
xchg
xchg
fwait
mov
inc
andl
pop
nop
add
imul
push
dec
or
in
lods
push
push
movsb
pop
and
cltd
sbb
and
outsl
or
dec
jo
daa
daa
or
ret
mov
and
lret
pushf
aas
xor
arpl
push
aam
stos
push
stc
push
divl
cmp
divb
mov
or
push
add
outsl
mov
xchg
push
mov
add
mov
pop
in
lods
xchg
mov
std
dec
subb
faddl
out
adc
xchg
out
insl
mov
mov
jo
mov
stos
mulb
mov
rcrl
xlat
jl
stos
dec
jl
mov
mov
push
and
inc
fdivp
add
sar
fst
push
push
leave
test
in
adc
jne
lahf
jge
data16
pop
jae
cmpsb
fidivl
pop
cmp
push
mov
bound
data16
dec
notl
sub
xchg
aad
in
fldenv
add
push
fcoml
ja
out
fwait
jns
imul
in
mov
cmpsb
imul
stc
daa
int
int
mov
js
ds
sbb
aad
test
cmp
in
sbb
popf
mov
in
push
xchg
mov
xchg
test
das
sub
push
jno
dec
dec
dec
xchg
push
fdiv
jae
stos
lods
sahf
xchg
push
dec
xor
ss
or
into
inc
and
fisttpl
les
push
lea
mov
add
add
outsl
push
cltd
push
mov
popa
xchg
popf
sar
adcl
jl
mov
xchg
insl
sbb
xor
push
test
push
jmp
stos
xchg
fmuls
mov
cmp
test
test
dec
mov
nop
pushf
add
adc
in
repnz
jno
sbb
sbb
push
sbb
daa
scas
xor
or
mov
int3
cmp
sbb
std
loop
pop
insl
and
popl
in
cs
fwait
loop
mov
mov
aaa
cmp
pop
iret
sbbb
shr
jae
dec
mov
mov
repz
jl
jp
xchg
out
movsl
bound
stc
les
std
cmpl
aam
mov
fimull
fisttps
sbb
addr16
ja
lahf
ficoms
aam
push
enter
xchg
pusha
in
mov
mov
mov
mov
push
xchg
out
icebp
das
aad
ljmp
mov
arpl
cltd
push
ja
jmp
jo
lods
js
lcall
out
mov
out
fcompl
lret
mov
adc
mov
nop
icebp
fcompl
or
fcompl
add
jp
sti
loopne
adc
add
mov
sbb
inc
out
cmpsb
out
mov
push
cwtl
jp
incl
add
lret
lret
arpl
mov
cmpsb
pop
sbb
dec
decl
dec
pop
cltd
xlat
sbb
test
scas
addr16
test
call
repnz
fldcw
xor
jecxz
in
pusha
out
clc
push
pop
lods
jmp
clc
pushf
mov
xorb
hlt
jl
outsb
jge
lret
mov
adc
fsub
sub
out
lock
mov
arpl
test
loope
popa
jecxz
ljmp
movsb
pop
mov
outsb
testb
xor
pop
iret
stos
pop
mov
sub
dec
add
jge
cld
lcall
fsin
cwtl
inc
int3
pusha
ficoms
push
xor
movsl
adc
je
mov
pop
xor
dec
out
daa
fwait
rcll
add
insb
jg
scas
mov
push
dec
sbb
dec
push
stc
pop
jl
shlb
mov
inc
adc
mov
dec
ljmp
clc
cmpl
or
imul
add
lock
push
sahf
nop
xorb
in
shll
and
inc
xor
sub
push
adc
and
in
out
sbb
pushf
inc
loope
outsb
pop
lods
ret
dec
out
mov
sbb
adc
cmpl
rcr
popf
arpl
ss
in
dec
mov
or
incl
lret
mov
pushf
into
pop
sub
adc
inc
insb
popf
dec
xchg
iret
enter
push
pop
ret
test
jno
orl
iret
hlt
jo
pop
aad
idivl
adc
and
mov
push
jl
mov
test
out
jp
xchg
push
lock
and
and
subb
and
jecxz
or
push
imul
dec
hlt
lcall
ss
pop
mov
jg
mov
sbb
sbb
popa
mov
mov
bound
test
inc
mov
test
or
or
jo
mov
sahf
mov
xchg
dec
loop
ja
insb
mov
sub
inc
xor
mov
insb
lret
jge
mov
cmp
xorb
inc
xor
inc
push
inc
ret
dec
fmull
arpl
push
icebp
or
pop
hlt
std
std
sahf
not
and
sub
hlt
adc
inc
cmc
cmp
jmp
mov
push
fcomi
aas
addr16
cmp
stos
mov
inc
insb
pop
fnstcw
cmpsb
leave
mov
test
push
lcall
cmp
push
lea
clc
imul
cmpsl
jp
cmp
fsubrl
orb
fistps
int3
pop
out
add
sbb
adc
mov
rcrb
outsb
and
mov
cmp
mov
loopne
loope
mov
jle
mov
xor
or
mov
popf
pop
cwtl
pop
movsb
jno
es
nop
jbe
fs
scas
xchg
int
mov
fidivrl
cs
jmp
inc
pop
shrl
jp
call
out
cmpsb
pop
dec
mov
push
inc
ds
das
xor
das
jbe
jns
inc
fistpl
cld
xor
cwtl
js
push
inc
shl
out
mov
xor
sar
icebp
pop
shrl
mov
lock
cmp
and
mov
add
sub
mov
jmp
mov
lcall
sbb
cmp
clc
mov
push
outsb
xor
aam
jp
jns
je
mov
mov
jp
mov
std
mov
pop
stos
add
push
jnp
mov
push
mov
test
fadds
divb
nop
sarb
jmp
loope
jmp
dec
pushf
cmp
and
jb
and
movsl
test
stos
mov
aas
xor
pushf
out
sub
or
mov
in
jge
or
das
test
xor
sarl
mov
cmp
scas
mov
test
push
pop
dec
jge
fs
cltd
dec
inc
sub
inc
lods
roll
sbb
shlb
xlat
call
loop
and
outsb
or
ja
push
jns
stos
lcall
sbb
xchg
sub
push
cmp
aas
or
lahf
fcmovnb
adc
hlt
dec
jo
test
lret
xchg
xchg
and
inc
aam
sub
adc
dec
cli
inc
sub
imul
add
nop
or
jno
jns
fcoml
mov
in
aam
shrl
dec
gs
dec
mov
roll
pop
mov
inc
ret
dec
cmp
clc
ret
and
stos
push
std
loop
and
pop
xor
mov
fcom
insl
cmp
and
aad
sbb
jne
out
lcall
mov
cwtl
xchg
push
pop
enter
ficoml
cmp
repz
dec
out
cmc
mov
int3
shrb
movsl
add
xchg
cmp
inc
les
lret
jle
test
stos
xor
xchg
lock
mov
push
adc
sbb
mov
jmp
jle
ficomps
pop
xorb
push
pushf
mov
inc
sub
cltd
into
ss
push
or
jne
sbb
push
mov
shlb
out
pusha
adc
mov
std
cmp
pop
test
and
leave
xchg
inc
aaa
call
hlt
xchg
jns
adc
dec
fimuls
xchg
pop
es
mov
mov
icebp
sbb
cmpsb
loop
mov
in
lods
cmp
lock
int
sbb
and
and
cmp
sbb
inc
repz
push
mov
mov
lods
and
in
add
cs
mov
hlt
outsb
sbb
les
pop
add
movsl
jp
movsl
push
mov
jae
das
inc
lds
xchg
lea
jbe
jp
fs
xor
loopne
xchg
addb
mov
xor
lcall
mov
xchg
and
jg
cwtl
pop
xchg
inc
pop
mov
lods
scas
sub
shll
ljmp
repz
fs
scas
jb
out
inc
inc
mov
es
fimull
mov
sti
jno
add
frstpm(287
stos
scas
insl
insl
dec
add
xchg
sub
cli
push
pop
mov
aad
in
clc
loop
adc
pushf
or
out
inc
stc
mov
and
add
inc
add
adc
out
imul
pusha
dec
cmp
stc
enter
mov
repnz
rorb
pop
adc
loop
xchg
cmpsb
sarl
mov
adc
jbe
loope
call
cs
pop
xchg
iret
pop
js
jae
adc
popa
jns
pushf
mov
data16
enter
stos
hlt
movsb
or
stos
dec
jbe
ds
in
sti
rolb
and
insl
inc
mulb
xor
lahf
jl
push
add
in
mov
push
std
incl
or
pop
mov
divl
jbe,pt
jmp
repnz
mov
fs
dec
imul
push
pop
push
adc
imul
imul
int3
lret
loopne
push
bound
jnp
daa
jl
popa
cmpsl
sub
nop
fstp
pop
sub
adc
clc
bound
clc
or
loopnew
nop
popf
out
mov
inc
loope
mov
xchg
push
shlb
xchg
cmp
jno
or
push
pop
andl
lods
or
imul
xor
mov
add
cmpsb
fiaddl
mov
je
cmp
fmull
cli
sub
js
notl
popf
dec
xor
pop
mov
sbb
addb
mov
and
push
adc
loope
mov
mov
or
bound
shlb
sahf
mov
mov
ucomiss
push
jp
stos
shrl
push
decb
loope
pop
rorl
cli
mov
pop
jp
add
push
mov
movsl
jnp
cwtl
add
dec
loop
xlat
pop
add
test
mov
adc
fsubl
cmpb
mov
clc
stos
sti
cmp
lret
aam
fmuls
push
mov
cs
rorl
cmp
test
push
cwtl
lods
loopne
mov
repnz
gs
or
push
aaa
jecxz
and
mov
push
scas
popf
popf
fwait
sub
iret
xchg
xor
pop
mov
aas
hlt
les
test
inc
aad
add
sub
mov
pop
aam
popf
arpl
lahf
mov
pop
dec
test
loopne
aam
scas
call
mov
and
adc
jnp
repnz
dec
push
xchg
jle
pop
xor
pop
cmp
add
adc
sub
xchg
jge
xchg
mov
aaa
in
cmp
xor
xchg
lret
addr16
mov
push
add
add
test
mov
ja
ljmp
addb
inc
popf
fwait
insl
jns
lret
popf
add
aad
scas
mov
pushf
ljmp
xchg
sub
mov
inc
jge
xchg
mov
xchg
ds
ret
sub
push
or
xor
sub
rcrl
xchg
outsl
das
cwtl
loope
push
push
adcl
mov
hlt
daa
jecxz
test
sbb
fwait
pop
fsub
mov
xchg
faddl
ret
pop
push
loopne
fbld
shr
insl
cmp
int3
pop
pushf
daa
mov
inc
dec
lret
and
xor
fwait
dec
xor
push
and
jecxz
mov
mov
ja
int3
lods
iret
inc
lods
sub
mov
jbe
and
outsl
push
aam
insb
push
pusha
mov
xor
jnp,pn
sbb
pop
sub
cwtl
ljmp
scas
mov
shlb
das
fdiv
jns
push
mov
pop
lret
pusha
push
sub
lret
jnp
inc
idivl
pusha
adc
xchg
insl
ljmp
sbb
dec
adc
mov
mov
loop
movl
mov
mov
scas
std
jl
sub
sbb
inc
xor
jmp
sbb
sbb
iret
out
adc
sub
push
inc
pop
or
dec
mov
loop
push
gs
or
ss
inc
or
int3
cmp
divl
ret
add
mov
mov
addr16
fwait
es
scas
xor
add
mov
cmp
mov
pop
or
cmp
mov
rorb
jno
data16
aas
lock
in
hlt
push
add
insl
cli
ss
fdivr
pop
in
cli
or
mov
jb
xlat
xchg
add
pop
jno
fisubrl
mov
or
mov
rolb
stc
add
ret
push
sbb
sub
pop
mov
mov
mov
aaa
cltd
cs
fcmovnbe
test
push
inc
jae
adc
push
jp
gs
mov
push
int
jp
notl
mov
adc
jge
lods
clc
ret
and
aad
cmpsb
mov
ret
add
and
scas
push
aad
push
cltd
shll
lea
ljmp
movsl
or
test
jl
sbb
nop
out
xor
mov
sub
xchg
jle
inc
mov
sub
sub
repz
pop
addr16
lock
push
loope
fistpl
jnp
sbb
sbb
test
out
xor
fsts
in
add
xor
inc
rorb
mov
mulb
dec
stos
mov
js
in
adc
jb
mov
pop
dec
ss
inc
mov
sbb
mov
fidivl
addr16
outsb
out
int3
jl
mov
mov
xchg
xor
das
cmp
dec
daa
dec
sahf
fmull
and
xchg
inc
pop
or
fisttpll
aam
lea
adc
lea
jecxz
pop
mov
fwait
aam
mov
lods
out
addr16
fstpt
mov
loop
mov
subb
mov
dec
mov
mov
popa
sbb
test
or
jg
ficompl
add
popa
icebp
ja
push
stos
push
rcll
dec
scas
add
lret
cmpsw
pop
les
inc
les
mov
jb
xchg
xchg
ds
push
sub
mov
xchg
cli
mov
pop
or
adc
and
cmp
mov
jb
ficomps
push
push
xor
sub
ss
and
sbbl
gs
rcr
pop
jo
add
movsl
in
jnp
lret
ljmp
sub
jb
fnstenv
ret
pop
pop
jae
adc
loop
xchg
push
mov
push
outsl
xor
adc
sub
lods
ds
jg
shll
sbb
jo
xchg
loope
gs
jae
cmpsb
dec
cltd
call
add
xor
or
call
in
and
mov
add
popa
pop
test
and
push
int3
ja
stos
xorb
fnstsw
lret
xlat
pop
bound
cltd
leave
mov
push
jae
xchg
add
aas
mov
sub
aaa
mov
mov
movsl
aad
xchg
rcrl
jmp
add
out
outsb
imul
inc
or
xor
test
mov
add
movsl
test
add
fidivl
rorb
xchg
out
leave
xorb
cmp
pop
mov
pop
mov
inc
out
sti
add
pop
fsubrs
push
pusha
push
fisttpll
jmp
or
rorb
out
mov
scas
adc
fisttps
icebp
popf
lret
loopne
aas
jbe
das
jge
std
in
pop
stos
iret
fcoms
gs
in
outsb
jo
movsl
jns
pop
xlat
cwtl
lret
xor
insl
mov
enter
add
in
fxch
nop
pop
jp
push
and
sti
xchg
es
fcmovnb
aad
xchg
add
pop
jge
loopne
mov
sub
cltd
lret
pop
ret
or
dec
rcll
inc
test
adc
and
sbb
mov
loop
cltd
lods
xor
lahf
icebp
ljmp
lods
negl
mov
mov
inc
cs
mov
xor
adc
stos
dec
xor
sbb
adc
aas
pop
cmp
jp
inc
push
pop
jb
jae
cmc
adc
push
mov
or
push
je
xchg
jne
in
jns
hlt
add
scas
add
subb
frstor
or
pushf
popa
and
xor
mov
ror
movsl
int
xchg
mov
mov
aam
lods
xchg
lock
xor
in
lds
test
out
ds
lcall
sti
pop
mov
test
dec
and
jge
jno
push
cmpsb
push
fs
aas
cltd
inc
test
sub
ds
fidivs
mov
ds
inc
in
aaa
pop
add
movsl
subl
cli
xchg
cltd
mov
dec
mov
fucom
adcb
push
cli
xchg
out
mov
mov
jns
test
add
xchg
pusha
popf
mov
nop
cltd
ja
movsb
mov
xlat
cmp
pop
xchg
jno
mov
in
das
scas
in
fimuls
jo
scas
and
ljmp
inc
outsb
cmpb
shrl
cld
fs
addr16
test
inc
clc
leave
les
jp
cmp
sbb
lods
xchg
sub
pop
or
or
mov
xchg
cmp
std
popa
mov
ja
repnz
clc
mov
fwait
xor
cmp
mov
adc
xchg
push
dec
shlb
sub
daa
jecxz
insb
jge
scas
mov
data16
out
mov
mov
sub
enter
xchg
jge
mov
push
sbb
xor
sub
and
xchg
add
fsubs
loop
cwtl
mov
arpl
stc
lret
mov
xchg
push
adc
or
lods
mov
mov
xchg
jmp
cmc
xorl
les
dec
mov
addr16
and
mov
in
jae
iret
adc
mov
dec
cld
or
cmp
aad
into
ss
subb
jmp
fldl
xchg
and
mov
xor
xor
xchg
pop
pushf
push
sar
jb
inc
jl
jnp
and
dec
roll
sub
repnz
leave
xchg
addl
arpl
sbb
ja
icebp
mov
rcl
mov
pusha
jmp
push
push
mov
repz
jmp
dec
cmp
push
les
inc
negl
divb
pop
icebp
out
stc
scas
sti
mov
pop
cltd
push
fstps
add
jb
mov
sti
sub
xor
inc
fsubs
loopne
jb
das
lret
hlt
mov
int
imul
jbe
aaa
cli
xchg
fadds
jle
mov
push
hlt
inc
inc
push
out
jae
out
insl
cs
jnp
jb
xchg
cmc
jno
mov
fidivrl
sbb
mov
sub
pusha
mov
lods
daa
mov
xor
rcr
cli
mov
scas
ret
dec
push
clc
sub
repnz
sub
mov
js
dec
aas
rolb
cmp
cmp
inc
xor
xor
cwtl
ja
in
push
stos
lea
jl
out
add
jne
sbb
leave
add
jmp
test
enter
cwtl
xor
mov
mov
cld
inc
mov
addr16
movsl
fbld
fdivrl
lret
sbb
cs
stc
jb
test
daa
repnz
cltd
lock
and
sti
mov
scas
mov
fwait
sahf
out
push
insl
pop
shrb
adc
sbb
cmp
push
repz
popa
add
stos
iret
and
xchg
out
jge
add
cwtl
and
mov
lret
shl
inc
enter
and
insl
dec
jne
sti
lret
lahf
cmp
je
ret
mov
dec
insl
insl
rclb
mov
out
xor
popa
mov
hlt
xor
nop
fwait
xor
imul
cmp
adc
out
sub
cmp
push
push
cmc
lea
fstps
rol
aad
out
fldl
lds
dec
imul
mull
pop
jb
in
jge
and
enter
and
xor
jae
xchg
fmull
filds
dec
cmpsl
cli
mov
push
jl
mov
mov
xor
sbb
ljmp
das
mov
in
iret
or
mov
scas
mov
push
and
push
test
loopne
xchg
andl
jge
xchg
mov
filds
bound
pop
mov
loope
stc
mov
adc
shrb
jmp
leave
xor
push
shll
shlb
and
aaa
jl
push
adc
sahf
fmul
cli
loopne
xchg
pop
pop
aam
int3
jae
cmp
mov
mov
mov
lret
dec
add
jle
add
jo
loope
adc
jnp
rcrl
sbb
test
lods
mov
cmp
cmp
cmp
cmp
icebp
mov
fimull
mov
mov
icebp
dec
sub
pop
aaa
ror
cmc
sub
lods
inc
ret
in
xor
repz
jmp
mov
pop
rcl
lcall
loop
mov
in
lds
cwtl
sbb
sub
sbb
push
mov
js
inc
ret
xchg
mov
dec
xchg
sub
rorl
jmp
mov
xor
movsb
xchg
sbb
mov
shll
fs
sbb
sbb
inc
inc
es
ljmp
loopne
adc
fdivs
adc
mov
xchg
xchg
dec
in
aam
and
adc
jg
dec
or
repz
stos
fstl
mov
sbb
iret
data16
stos
cld
dec
ds
pop
aas
cmp
xchg
repz
sub
nop
push
inc
fwait
jo
mov
movsb
mov
or
adc
lahf
ret
test
mov
cmp
out
das
pop
cmp
mov
add
mov
stc
mov
mov
jno
push
pop
add
outsl
fbstp
pop
fs
or
dec
adc
mov
ret
xchg
es
inc
or
lcall
stos
push
push
ja
pop
lahf
xchg
call
in
lods
mov
and
cs
dec
push
imul
sbb
add
and
ss
lea
mov
scas
xor
or
rorb
andb
mov
movsb
xchg
dec
mov
pop
xor
sbbb
ss
out
sti
add
shl
pop
loope
add
jbe
fsubrl
ss
js
xlat
test
mov
cld
shr
cmp
scas
dec
fsub
mov
aas
insb
sbbb
push
pop
in
daa
adc
je
xor
mov
out
push
add
sbb
mov
popf
pop
insl
fists
enter
cmpl
xchg
insl
insl
sahf
popf
std
adc
push
dec
xchg
add
out
cmp
call
ljmp
stc
inc
adc
popa
and
rcrl
lock
jae
sub
mov
ficoml
adc
addr16
bound
mov
fs
add
sub
in
cmp
cs
les
ficoms
lds
or
mov
notb
aam
mov
jmp
int
sbb
test
cmp
out
jg
cmpsb
sbb
xor
jle
mov
push
jae
mov
popf
jns,pt
sub
rcl
sbb
xor
decl
mov
ds
mov
les
cmp
adc
leave
and
aaa
jbe
loop
jp
loope
imul
mov
daa
test
or
mov
xor
push
pop
sbb
sbbb
stc
xchg
pop
mov
lock
les
jl
or
sahf
sub
loopne
xor
insl
xchg
or
aaa
mov
mov
pushf
mov
sbb
cli
push
leave
repnz
inc
add
mov
mov
cmp
pop
sub
dec
ror
mov
lds
aas
pusha
lret
sarl
cmc
subl
mov
dec
addr16
cli
adc
mov
dec
js
shrb
lds
outsb
cltd
int
lret
adc
jae
adcb
inc
xchg
leave
push
test
adc
outsl
dec
or
mov
pop
cmpsl
in
jbe
leave
cltd
inc
dec
mov
lret
scas
mov
jg
xchg
les
pop
mov
xchg
divb
lcall
jbe
in
xchg
push
push
shrb
popa
lea
cli
mov
lcall
ret
mov
cmp
mov
xchg
cmp
clc
fsts
or
mov
js
lcall
lods
or
cmp
xor
mov
pop
fbstp
cmc
push
jns
mov
or
and
iret
rcll
insb
push
jns
adc
cmp
and
sbb
xchg
test
pop
sahf
rcll
rclb
stos
imul
cltd
jns
out
cltd
and
sahf
xor
adc
loop
sbb
std
mov
fildll
xchg
ljmp
lock
mov
fsubl
mov
add
sti
xchg
filds
dec
out
cmp
shlb
and
jg
in
jp
cmp
int3
push
jle
data16
mov
movsb
rolb
xor
adc
insl
xlat
insb
fs
add
cmpsl
test
out
pusha
dec
int
les
roll
adc
mov
imul
jnp
jp
sarl
or
dec
add
mov
leave
sub
mov
cmp
mov
or
dec
lds
push
cmp
push
or
push
out
add
inc
test
dec
popf
xchg
fwait
jp
adc
in
mov
inc
inc
adc
nop
push
popa
ror
pop
in
xchg
push
inc
mov
bound
movsl
pop
cmp
jo
scas
xchg
dec
mov
aaa
mov
in
or
or
sbb
repnz
out
call
sbbb
mov
movsl
jge
dec
stos
mov
push
nop
hlt
lahf
adc
repnz
in
jmp
dec
scas
jge
bound
dec
adc
add
repnz
mov
adc
mov
inc
lods
movsb
hlt
ret
loope
int
loope
out
movsl
inc
add
aad
pop
xor
test
popl
mov
out
shr
xchg
mov
stos
jmp
dec
mov
push
cli
cltd
out
xchg
outsb
imul
femms
lahf
in
imul
inc
test
and
and
push
sbb
arpl
sbb
clc
adc
xchg
cmc
pusha
loopne
sub
and
push
add
imul
mov
sbb
mov
insl
push
or
and
popa
add
lahf
mov
or
mov
jg
dec
add
mov
push
or
and
sahf
dec
fstpt
lcall
adc
cmp
push
push
stc
add
mov
or
xchg
pop
daa
imulb
or
add
mov
or
movsb
adc
xchg
sub
xlat
mov
or
cmpsb
inc
rolb
nop
cltd
repz
nop
cmp
xlat
aas
cmpb
test
popf
loopne,pt
gs
movb
or
jnp
lea
cmpb
test
xor
dec
xor
xchg
sbb
lcall
jecxz
mov
orb
jno
mov
loope
addr16
inc
lods
mov
sbb
pop
inc
xor
adc
cli
mov
or
fdivrl
jno
fwait
lea
sbb
subl
push
sub
lea
jmp
cmp
push
mov
and
std
out
inc
mov
push
das
cmpsl
adcb
and
and
and
subb
fnsave
fsubrs
mov
xchg
popa
adc
icebp
or
mov
push
enter
xchg
mov
jo
pop
adc
mov
out
mov
jmp
std
xchg
pop
mov
les
nop
jo,pt
int
xlat
pushf
aam
js
cmpsb
into
cwtl
out
add
fmuls
cmp
xchg
mov
xor
insl
mov
xchg
std
es
pop
or
daa
sub
imul
cmpsl
dec
fs
hlt
negb
xchg
arpl
arpl
mov
test
je
cmp
int
enter
push
and
cwtl
cmp
xlat
pop
lock
pusha
xchg
mov
mov
sbb
pop
test
and
sub
lods
insb
pushf
cltd
and
jno
mov
adc
sub
mov
ds
test
ffree
mov
arpl
lods
cmpsb
cmp
jl
and
lock
mov
mov
sarl
pop
jns
iret
cltd
add
pop
lret
xlat
xchg
fsubrl
ljmp
fs
jp
mov
dec
push
or
mov
sbb
imul
lahf
jecxz
movsb
dec
out
nop
stc
jl
jne
mov
ret
bound
lods
fistpl
jl
fucomi
imul
push
push
lock
sbb
mov
int
add
pusha
fldl
cmp
push
testl
out
orl
dec
and
nop
push
add
stos
dec
add
sub
int3
clc
pop
mov
je
ss
xor
shll
jae
mov
out
fisubrs
jne
sti
aas
loopne
outsb
inc
inc
push
sub
jno
loope
pop
push
push
sub
lahf
gs
in
rcl
jns
std
add
jg
sarl
cwtl
mov
cmp
or
in
push
jecxz
or
aaa
imul
test
mov
mov
cmp
cs
pop
and
xlat
gs
or
stc
test
in
aaa
sbb
out
xor
fwait
xor
xlat
in
jmp
lahf
rolb
and
repnz
mov
adc
xchg
aas
xchg
xchg
dec
push
pusha
into
hlt
sbb
jb
mov
xchg
sub
mov
repz
es
outsl
std
loopne
cwtl
lods
cs
push
roll
cmpsb
dec
mov
dec
cmp
fnstsw
mov
int3
ja
adc
lcall
mov
xor
add
or
shrl
jp
aam
mov
xor
mov
inc
ss
cltd
or
sub
scas
adc
xor
add
xor
mov
out
mov
add
ljmp
pop
inc
push
push
cwtl
inc
push
inc
mov
andl
mov
jbe
jle
inc
fildl
xor
xor
hlt
push
loopne
test
imul
or
out
pop
xchg
subb
sti
call
pop
pop
jnp
jge
inc
rcrb
pusha
out
jmp
lret
sarb
lret
jge
mov
sbb
ret
cmc
lock
xchg
pop
cmp
mov
cmp
dec
jecxz
cmp
sub
lret
jb
xor
pop
pop
sub
jnp
cmp
sbb
inc
movsl
movsb
xchg
rol
cwtl
lods
mov
sbb
xchg
push
push
pop
addr16
movsb
xlat
pop
mov
scas
xor
jo
outsb
cli
lock
movsl
push
outsl
xor
sub
rcrl
inc
pop
leave
cmp
mov
movsb
cmp
xlat
hlt
mov
or
inc
xor
out
sub
fistps
rclb
mov
pop
adc
clc
leave
and
sahf
sub
fcmovne
lds
push
jp
fcmovnb
sbb
mov
outsb
cld
inc
je
pop
cmc
add
call
cmp
inc
outsl
call
imul
outsl
add
pusha
imul
int
push
out
lahf
mov
xchg
ror
inc
lds
pop
xchg
push
jmp
popa
or
push
test
outsb
out
sub
and
arpl
add
loopne
mov
hlt
sbbb
jno
test
mov
stos
jo
int3
mov
cwtl
jns
and
sub
add
inc
inc
nop
xlat
jecxz
rcrl
stos
xchg
push
mov
cmpsb
xor
cmp
loop
retw
inc
subl
xchg
pop
inc
mov
dec
stos
repnz
push
je
mov
pop
xor
cmpsb
xor
xlat
ret
jns
test
fdiv
pop
ret
sbb
fwait
mov
pop
lcall
stos
sbb
out
lods
xlat
jp
or
sub
das
pop
dec
loope
pushf
popa
mov
xor
jge,pn
mov
fadd
stc
xor
fwait
stos
mov
movsb
sbb
sub
rorl
push
jae
lret
mov
cmp
cmpsl
fcmovbe
shll
add
push
or
inc
fwait
adc
adc
es
jnp
add
jg
inc
mov
or
bound
cs
cmp
or
mov
aaa
jmp
imul
jno
sahf
out
pop
fists
cmpsl
fucomi
arpl
push
sbb
dec
jp
push
jmp
fcomp
ret
les
into
jns
test
mov
adcl
push
add
stc
popf
in
cmp
jl
fsubrl
and
rcrb
xchg
jb
fsubrs
pop
enter
mov
pop
out
xchg
add
add
neg
and
jle
push
dec
mov
shlb
mov
daa
xor
bound
and
cmp
pshufw
cld
add
pop
xchg
mov
stos
xchg
mov
rol
cmpsb
leave
push
dec
xchg
adc
or
movsb
shll
popa
lods
cmp
cs
fcmove
mov
and
xchg
fwait
or
mov
aam
jmp
jp
ss
shlb
mov
push
add
and
xchg
or
in
out
jo
pushf
aaa
pop
enter
into
imul
xchg
ljmp
scas
call
lds
xchg
push
nop
scas
inc
pusha
xor
add
xchg
mov
fcmovne
movsl
or
lods
sub
mov
sub
mov
pop
decl
push
aas
xchg
dec
cmpsb
mov
fwait
aad
fnsave
push
cmpl
push
xchg
sbb
test
inc
test
xlat
sar
loope
add
push
mov
cmp
cmp
out
and
cmpsl
mov
rorb
pop
pop
div
outsl
pop
jne
jmp
mov
pop
stos
adc
mov
cltd
push
pop
out
cmp
mov
imul
xchg
lahf
push
mov
and
scas
inc
jns
xchg
cli
pop
mov
add
loopne
cmp
dec
stos
cmpsl
dec
in
rcrb
jmp
icebp
pop
icebp
mov
push
sub
add
xchg
push
mov
gs
xchg
push
xor
or
std
push
fiadds
xchg
test
das
aam
movsb
cwtl
jne
jo
pop
add
outsb
and
xchg
add
std
cmpsb
and
icebp
push
xor
xchg
jg
sub
scas
fs
add
mov
cltd
daa
mov
test
into
and
jb
loop
ds
mov
pop
testb
cmp
daa
sub
adc
das
test
fldl
mov
xchg
loopne
inc
or
and
cmp
imul
in
pusha
add
pop
add
repz
adc
sbb
mov
push
or
mov
xor
out
std
adc
pushl
aam
in
mov
mov
mov
cmp
push
dec
lods
xor
je
inc
xchg
pusha
inc
shll
xor
sub
cmp
xchg
sahf
mov
cmp
fs
sub
bound
lahf
shrd
fisttpl
fdivl
push
roll
addr16
or
mov
cmpsb
mov
ljmp
xchg
xchg
leave
repz
xor
lds
pop
int3
aaa
mov
cmp
push
mov
mov
and
jbe
fwait
or
adc
push
adc
testl
ret
test
pop
in
mov
jb
sub
pusha
ds
loope
pop
fwait
sub
je
xor
xor
xchg
in
xchg
mov
sbb
inc
ret
out
xor
xchg
cli
outsb
sarb
cs
aad
enter
mov
leave
adc
mov
pop
sub
sti
dec
loop
stos
sbb
or
shll
loope
adc
jmp
out
xchg
mov
mov
sarl
loope
mov
push
inc
sbb
insb
roll
cmp
dec
push
ret
in
cmp
icebp
jno
movsl
outsl
stc
sahf
arpl
subb
fnsave
cwtl
jmp
and
mov
push
arpl
mov
inc
inc
jno
sbb
sub
adc
je
add
pop
pop
and
cld
lods
dec
cmpsl
popf
push
jo
lcall
push
mov
scas
repnz
pop
jns
aaa
add
or
jns
call
cmp
cmp
lock
add
push
cld
icebp
out
fxch
sub
jne
jl
out
aam
sub
xor
and
add
xchg
test
adcl
jmp
dec
cmp
fs
jae
ret
icebp
jmp
push
adc
xchg
sbb
mov
shl
add
pop
js
mov
mov
or
adc
adc
mov
cmp
jo
rol
and
mov
lds
mov
lods
xchg
repz
lods
xchg
sar
sub
bound
lahf
testb
mov
add
lock
int3
pop
add
jb
cld
inc
cmc
fstpt
sub
cmpl
loopne
insl
ljmp
filds
mov
adc
add
ffreep
fdivrs
ss
add
mov
mov
out
popa
popf
sub
push
xchg
mov
pop
fistl
daa
jl
push
loop
push
inc
popf
orb
mov
cwtl
inc
out
xchg
push
iret
out
sbb
push
lret
scas
mov
sub
mov
dec
pushf
pop
add
mov
push
cs
pusha
and
mov
mov
in
ficomps
dec
clc
dec
negl
xor
jle
cmp
mov
repnz
out
fnsave
pop
push
add
mov
lock
dec
sar
lahf
cmp
and
sbb
jge
dec
std
inc
std
jl
in
fs
inc
fbstp
add
sbb
pop
cmp
push
jno
cli
call
pop
js
mov
xor
sbb
adc
dec
or
cmpl
mov
inc
fiadds
xchg
popf
cld
jbe
push
es
out
xchg
dec
dec
mov
test
add
fsubrs
xchg
sbb
pop
shll
or
dec
or
push
dec
mov
sub
imul
pushf
xchg
cmp
imul
rep
cmpsb
and
cmc
sub
cltd
xor
mov
xchg
out
lret
pop
nop
inc
icebp
mov
rclb
push
cmp
sahf
jge
fabs
repz
je
adc
mov
cmc
cmp
mov
adc
xlat
dec
aas
fs
push
cmp
pop
mov
xor
imul
repnz
lahf
or
mov
xchg
cltd
adcb
mov
sub
jnp
dec
imul
mov
add
lret
test
mov
lret
push
in
mov
loopne
bound
popf
jmp
sbb
das
movsb
ljmp
push
push
jle
fsubrs
bound
cmp
in
ror
mov
dec
in
dec
dec
push
cli
cmp
cmpsl
pop
and
fcmovnb
xchg
xorl
and
dec
icebp
ljmp
cmp
iret
cmp
or
test
or
lds
adc
cwtl
lahf
loopne
lcall
das
xor
hlt
pop
bound
jle
je
pop
cwtl
ficomps
ds
xchg
lock
imul
movsl
leave
mov
xchg
ret
fmuls
jae
xchg
mov
mov
aam
add
xchg
pop
movsb
or
testb
or
ud1
jle
std
lcall
jns
in
rcll
pop
adc
out
mov
mov
test
daa
push
jb
test
popa
mov
scas
lret
push
and
mull
fwait
or
mov
add
in
stos
js
inc
jnp
pop
mov
add
dec
pop
adc
mov
jo
fisttpll
xchg
shrl
mov
xor
or
xchg
cmp
xor
inc
dec
loope
test
add
stos
push
jns
dec
pop
cld
mov
lret
popf
fimull
ret
mov
rcrl
in
jo
idiv
jbe
pop
gs
xchg
mov
cmp
sbb
cli
jae
push
mov
and
cmc
insb
add
pop
pop
push
nop
or
and
sbb
mov
cmp
pop
jne
ret
clc
ljmp
das
inc
fbld
xor
fmul
into
lret
fcoml
cmovp
repz
pop
hlt
stc
fnsave
push
dec
popa
lds
push
js
test
loop
xor
cmp
movsl
jg
aam
pop
lahf
aaa
repnz
es
xchg
mov
mov
inc
fsubrl
cwtl
out
test
les
out
ficomps
xor
jmp
jg
dec
push
les
dec
faddp
pop
subb
push
cli
jno
mov
jle
jne
out
sbbb
cmc
xor
and
xor
shrl
pop
rol
xchg
sbb
shlb
xor
fadds
loope
cmp
ss
daa
fnstcw
shlb
jecxz
mov
fiadds
and
xchg
inc
addr16
decb
aam
orb
popf
leave
ljmp
pop
cmpsl
ret
lods
or
andl
xchg
addr16
mov
mov
and
xchg
xlat
jb
cmp
mov
adc
sub
xchg
imul
dec
adc
cmp
lock
or
jae
pop
lds
data16
jb
sarb
jno
adc
xchg
cmp
fildl
aaa
testb
push
cmp
jne
mov
lods
nop
shrb
push
ret
mov
or
dec
fst
push
lods
js
cmc
lds
stos
cld
addr16
mov
das
movsb
je
xchg
icebp
mov
leave
and
mov
jge
orl
mov
mov
repz
in
or
mov
and
in
xlat
xchg
sbb
daa
cwtl
sub
pop
ja
shlb
jge
fnstsw
lcall
adc
jae
or
pop
xchg
dec
and
pop
out
cmp
xchg
inc
adc
int
xchg
addb
adc
in
sub
icebp
adc
pop
or
xchg
pop
adc
jecxz
push
jbe
daa
sahf
or
mov
stc
mov
push
cltd
or
push
shlb
test
xor
fcomps
xchg
push
movsl
stos
lock
call
jno
or
jp
int3
imul
ja
fiadds
dec
lds
jno
in
or
mov
add
inc
xor
jmp
or
xor
cmp
mov
lcall
insl
sub
dec
xlat
push
cmp
push
mov
xchg
push
movsl
mov
fucomi
push
test
mov
xor
out
dec
or
cmpsl
imul
inc
mov
dec
cltd
outsb
xor
add
xchg
cmp
fwait
sub
cmp
iret
pop
sbb
push
dec
xor
and
nop
fists
mov
pop
push
int
push
int3
scas
mov
frstor
jge
xor
gs
or
adc
inc
xchg
scas
into
icebp
insl
pop
adcb
outsl
fwait
cmp
cltd
ret
movsb
ds
mov
in
loop
xor
push
push
cmp
lea
mov
and
sub
pop
inc
xor
adcb
dec
pop
mov
inc
in
sbb
mov
es
pushf
mov
fldl
fs
mov
outsl
pushf
subb
std
repz
stc
cltd
mov
sbbl
rorl
imul
xchg
sti
xchg
faddp
inc
sub
cmp
jo
cmp
lea
cltd
cs
mov
push
adc
push
lahf
jbe
jbe
dec
test
cmp
xchg
fwait
in
addl
es
hlt
loop
fildll
lret
roll
sub
jne
xor
mov
sub
mov
imul
pop
lahf
jne
sahf
cmp
fmul
aam
sub
gs
sahf
cmp
dec
inc
out
pop
pop
fstps
sahf
test
scas
ljmp
test
add
pop
push
les
imul
adc
sub
lret
sbb
pop
cmpsb
cli
mov
popf
push
int
ss
jecxz
shl
in
lahf
lret
adc
dec
lods
sbb
adc
je
or
cmp
cmpsb
es
fidivs
adcb
xchg
mov
loopne
xor
xor
lds
jge
jle
sub
adc
and
arpl
test
push
xchg
jne
testb
cmp
enter
add
pop
sbb
mov
xchg
inc
add
jae
adc
adc
pop
jg
aas
pop
inc
xchg
imul
push
push
out
xchg
dec
mov
test
mov
cmp
stos
sub
or
icebp
test
lahf
mov
mov
cmp
mov
cmc
pop
adc
push
push
mov
dec
aam
imul
jge
lea
adc
xorl
inc
xchg
pop
xchg
mov
addr16
les
adc
adc
ffreep
fldl
arpl
insb
sbb
std
sub
sbb
jmp
ficompl
xorb
cmp
shl
sbb
in
lcall
into
hlt
clc
mov
push
addr16
jecxz
sub
dec
imul
mov
imul
pusha
faddl
inc
pop
jmp
adc
mov
std
lret
fdivs
cld
int
jmp
out
mov
mov
sbb
lea
into
aaa
fwait
icebp
xchg
icebp
shl
daa
inc
push
insb
out
test
rorb
nop
jae
aam
mov
pop
xchg
sub
adc
into
jb
adc
mov
adc
xchg
add
stos
xchg
scas
popa
pop
push
lds
lock
incb
gs
lahf
pop
cmp
adc
pushf
lods
xor
repnz
cmp
ficomps
jno
pushl
mov
cmc
xor
sbb
xor
inc
lods
orl
cld
faddl
int3
sub
movsb
cmp
xchg
dec
lahf
xchg
jmp
jb
pop
mov
into
in
or
aam
scas
add
stos
or
jg
sbb
sub
sub
outsl
pop
push
and
pop
mov
dec
pusha
push
push
inc
es
dec
or
ret
rorb
jge
push
mov
lret
lret
insl
cmc
stos
aam
push
dec
cmp
sub
mov
push
push
fisttps
in
data16
pop
not
sub
popf
das
pop
xor
imul
sti
jb
clc
icebp
mov
stc
movsl
test
inc
push
inc
mov
inc
xchg
mov
lds
xchg
loop
sbb
sbb
out
lods
stos
or
add
dec
sbb
imul
lods
in
sub
leave
loopne
add
repz
adc
mov
mov
inc
add
jnp
or
leave
sbb
inc
cmp
push
lods
ret
addr16
xor
fwait
push
sbb
xchg
sub
pop
and
addr16
adcl
in
fdivp
jmp
test
add
popf
hlt
call
imul
aas
mov
test
adc
bound
cs
mov
or
lret
cs
dec
push
cmp
push
jns
xor
adc
mov
push
push
pop
adc
pop
fmuls
stos
xor
push
sbb
rol
sti
cmpsb
mov
pop
xor
cld
mulb
or
xchg
inc
bound
dec
sub
daa
mov
call
rcll
adc
xchg
xor
lods
cmp
out
roll
mov
adc
fcomps
dec
dec
sbb
push
frstor
mov
out
movq
loope
mov
jns
pop
xchg
pop
push
mov
enter
popa
jge
mov
jg
and
enter
in
push
rorb
push
in
mov
cmp
mov
sub
jmp
in
and
mov
nop
imul
pop
xchg
pusha
ja
dec
jnp
and
mov
test
add
xchg
dec
es
jle
mov
mov
sub
nop
mov
dec
sbb
dec
and
pop
adc
gs
jae
or
mov
ds
out
or
loope
bound
ror
xchg
xchg
in
add
ret
mov
int
scas
shl
push
cmpsb
mov
push
cmp
je
repz
cwtl
mov
xchg
adc
and
pop
pop
sub
push
or
dec
fucomi
mov
jb
arpl
mov
inc
pop
aam
ret
adc
insb
inc
popa
sub
or
cli
pop
cltd
movsl
inc
subb
jae
and
cmp
mov
push
adc
sti
cmp
push
push
testb
mov
leave
outsb
jo
into
push
adc
xor
hlt
fcomps
leave
jno
fs
sbb
shll
push
jg
mov
dec
testb
push
mov
adc
ror
and
mov
fimull
add
or
adc
insb
fs
rolb
push
pop
pop
add
jne
push
push
xor
jne
cmp
mov
cmp
popa
sbb
mov
mov
and
xchg
adc
nop
mov
and
scas
ss
aaa
in
or
xor
addr16
ljmp
mov
nop
in
loop
faddl
mov
je
pop
inc
lahf
sete
addb
pop
test
scas
outsl
dec
arpl
push
out
cmp
or
jg
adc
ljmp
xchg
loopne
dec
xor
or
and
outsl
out
das
xor
repz
das
pop
out
std
xchg
mov
movsl
pop
std
and
cmpsb
divb
cli
in
push
mov
les
jbe
ljmp
pop
inc
stos
pop
fmulp
lock
jb
and
and
inc
lods
cmp
int3
ret
pop
movsb
or
cltd
jns
repnz
bound
iret
inc
lret
inc
in
cld
jge
xor
stc
mov
pop
mov
outsl
imul
mov
negb
cltd
mov
repz
insb
aaa
stos
jl
loop
stos
fsubl
mov
adc
mov
mov
jo
cmp
in
ljmp
cltd
jae
nop
mov
inc
dec
aam
mov
pop
xlat
push
imul
dec
dec
adc
inc
push
fidivl
scas
push
dec
add
adc
dec
sub
lret
jo
lods
mov
push
jbe
int3
push
xchg
mov
outsl
add
outsl
jg
cmp
jo
stos
inc
test
cli
dec
in
mov
cld
popf
es
int
aas
push
lahf
addr16
add
out
push
inc
push
orl
cmp
cmovge
dec
push
mov
out
ds
es
xchg
sbb
imul
sub
jmp
mov
xchg
repz
movsb
inc
fwait
movsb
sub
xlat
jns
push
jbe
sub
add
cmpsb
xchg
ret
clc
jecxz
mov
popf
imul
rcll
dec
pop
xchg
mov
dec
out
jbe
dec
jge
push
push
fidivrs
mov
ds
mov
lea
ja
inc
mov
jne
xor
inc
jp
aam
add
aad
mov
or
adc
mov
push
add
add
and
mov
sub
addr16
cmp
cmpsb
in
das
rcll
or
mov
mov
popl
cld
into
arpl
out
cmpsl
push
mov
out
and
rcrl
popa
jb
jp
jne
jns
fs
rcrb
sti
push
jmp
stos
repz
mov
enter
fisttpll
mov
cmp
fwait
sbb
shr
int
add
fnsave
xorl
test
fnsave
popa
ljmp
pop
lahf
fwait
ds
out
inc
stc
sbb
in
lret
dec
scas
cmp
mov
dec
icebp
push
das
jb
pop
dec
lea
and
insb
jmp
pop
outsl
stos
insb
jle
push
mov
div
jnp
idiv
andb
call
cli
pop
push
sti
mulb
add
je
fs
xchg
mov
dec
imull
sahf
in
repz
xchg
loope
in
fisttps
pusha
xchg
mov
inc
shll
pop
xor
and
xor
lret
push
data16
fcompl
sub
aas
popa
je
int
incb
inc
daa
scas
mov
xor
dec
cs
out
lods
push
or
mov
pop
dec
sbb
rclb
jmp
push
lock
call
or
pop
mov
call
lret
lds
cmp
dec
test
aad
mov
pop
enter
pop
testb
xor
adc
push
xchg
adc
add
stos
orb
jl
rcrl
lret
scas
nop
or
add
cmp
bound
pop
fisubl
arpl
sahf
jae
cmc
dec
divb
pushf
jae
and
sub
flds
xchg
add
test
daa
push
mov
mov
imul
and
jmp
push
test
push
js
mov
dec
fnstcw
loop
test
mov
in
pop
cmp
orl
adc
hlt
inc
cmp
xor
out
das
mov
sahf
leave
ljmp
les
das
pop
and
inc
cwtl
shrb
mov
out
sbbb
push
pop
dec
out
dec
jecxz
cmp
movsl
push
pop
loop
call
dec
les
psllw
repnz
cmp
mov
xchg
mov
dec
mov
xor
inc
iret
lock
add
cmp
mov
push
push
test
sti
sahf
lahf
mov
cld
cmpsl
xlat
repz
dec
outsb
mov
rcrl
popf
mov
mov
or
adc
and
jle
jbe
and
insb
push
or
idivl
ror
loopne
ja
sbb
aad
adc
sbb
cmp
push
pop
sbb
insl
test
and
jmp
jno
data16
outsb
fistpll
in
push
popf
andb
sub
pop
icebp
push
inc
aad
mov
int3
xacquire
inc
subb
lret
and
ljmp
outsl
sbb
inc
jg
mov
xor
mov
jae
icebp
enter
test
and
add
push
cmpsl
adc
daa
out
call
es
js
push
inc
lock
test
pop
adc
ret
lret
stc
outsl
adc
inc
xor
xchg
add
mov
inc
lret
out
mov
adc
fisubrl
scas
mov
je
inc
call
ret
dec
mov
jno
mov
xor
je
mov
cmp
sbb
stos
jo
cmp
out
pop
push
mov
cmp
stos
outsl
cmc
out
fstps
cmp
dec
and
inc
fcompl
push
jecxz
push
and
dec
xchg
inc
jne
sbb
cmp
out
sub
aas
aas
xchg
jnp
dec
shrd
nop
inc
or
mov
push
icebp
sbb
mov
pop
mov
mov
sahf
pusha
dec
jg
push
mov
imul
in
in
and
sub
xor
jge
cld
mov
mov
sub
test
data16
mov
fnsave
add
inc
leave
pop
cmp
mov
test
cmp
push
jl
xchg
cwtl
and
ja
stos
pop
mov
jb
sbb
adc
xchg
jg
scas
jno
aam
pop
sub
scas
push
fidivrs
inc
pop
mov
leave
xchg
or
addl
outsl
pop
or
mov
xchg
cld
addr16
jle
add
sbb
pop
mov
pop
mov
in
add
sbb
aas
les
int
lcall
stc
lds
jle
mov
inc
adc
pop
xor
mov
fisubl
in
sbb
hlt
test
pop
pextrw
xor
dec
or
imul
sti
sahf
in
mov
into
adc
or
loope
and
shll
cmp
or
inc
pop
lcall
test
out
or
lahf
mov
push
mov
clc
repz
pop
cs
mov
sbb
sub
aas
mov
inc
mov
and
rolb
mov
andl
adc
pop
adc
sbb
xchg
movsb
sub
addr16
rep
push
dec
mov
mov
lods
xchg
out
pop
neg
int
popf
mov
xchg
gs
scas
gs
jmp
push
jg
test
and
and
or
adcb
sti
push
lea
inc
ficoms
jne
mov
jno
outsl
std
and
gs
scas
bound
inc
and
shrb
lahf
jp
adc
into
xor
rorl
shrb
lcall
ret
dec
aaa
cmp
push
sbb
repnz
int3
push
pop
stos
popf
jmp
push
mov
xchg
jo
cltd
cmpb
or
in
add
loopne
jecxz
adc
xchg
pushf
jo
inc
fldt
and
xchg
mov
push
rcl
scas
adc
nop
adc
jb
aad
pop
cmp
dec
imul
adc
mov
pop
and
das
scas
cmpsl
pop
cmp
dec
jo
mov
mov
mov
bsr
add
sbb
xor
hlt
sti
xchg
dec
testb
mov
hlt
dec
test
xor
push
jl
jnp
shrl
mov
in
fidivl
or
mov
cmpsl
rorl
mov
wrmsr
enter
pop
clc
pop
pop
scas
mov
push
inc
pop
add
in
push
ja
push
or
pop
lret
xchg
andnps
push
mov
fisttpl
pop
dec
jns
ds
movsb
mov
dec
jl
pop
add
xor
movsl
push
cli
sbb
sub
enter
mov
rcll
or
sbb
outsb
mov
mov
arpl
jl
fidivs
or
data16
icebp
imul
pop
aam
xor
fyl2x
inc
imul
or
fisubl
sub
push
lock
hlt
xchg
adc
ja
inc
pop
dec
or
fdivp
push
push
cmpsl
xlat
push
ss
pushf
outsb
mov
aaa
lret
pop
jno
adc
cs
into
pop
adc
jo
xchg
cmpsb
cmp
xchg
popf
fwait
jmp
mov
sbb
mov
cmp
jns
fmull
clc
push
scas
enter
pop
cmpsb
leave
inc
in
dec
cmp
push
cmpsl
aaa
daa
inc
cmc
jp
pusha
mov
xchg
test
or
mov
xchg
int3
lock
and
push
dec
xor
stos
lods
jb
inc
test
push
cwtl
fimuls
gs
loop
sub
jae
pop
dec
mov
dec
cwtl
jbe
adc
in
in
imul
dec
xchg
into
test
lret
movsl
addr16
addr16
test
adc
scas
mov
js
dec
daa
lret
int3
mov
rclb
sti
push
xlat
movsl
or
aam
outsl
add
pop
add
push
out
mov
xchg
cmp
ss
inc
orb
push
test
mov
cltd
mov
xchg
test
mov
cld
push
in
shlb
dec
aam
pop
adc
ror
aam
outsl
dec
mov
imul
sahf
clc
loop
out
sub
pop
xlat
ret
sbb
bound
or
ret
mov
mov
out
jl
fcom
notl
cs
mov
sub
lcall
movsl
add
push
daa
dec
inc
inc
jge
addr16
shl
cmc
mov
dec
cmp
int
cmp
dec
movsl
movsl
cld
and
cli
insb
bound
inc
cld
pop
sub
icebp
pop
add
dec
repz
nop/reserved
clc
xchg
mov
inc
in
hlt
iret
movsb
add
sbb
jmp
fcmovbe
aas
andl
test
call
xor
insl
add
fdivl
fisubl
movsl
add
repz
mov
xchg
push
lcall
and
frstor
cmpsl
sbb
pushl
and
imulb
stc
int3
loope
daa
jbe
popa
into
or
arpl
xchg
jp
sub
test
pop
stos
cmp
push
mov
jl
les
mov
inc
mov
aas
pop
sti
dec
aas
dec
sub
mov
mov
jmp
dec
std
fsubrl
xchg
out
gs
jns
sbb
adc
mov
ret
mov
nop
in
or
test
pop
repnz
ljmp
push
dec
out
mov
imul
push
movsl
cmc
xchg
stos
cs
dec
clc
imul
lods
ja
jns
in
mov
ret
frstor
sub
aas
mov
popf
pop
lea
inc
adc
int
insb
scas
mov
push
mov
jl
lods
fisttps
adc
mov
inc
fs
cmp
fwait
clc
setge
in
jne
inc
push
lds
add
loopne
arpl
shl
fadd
inc
push
lods
fwait
xchg
lock
cli
jns
cmp
push
mov
popa
mov
or
mov
jb
cmp
mov
jno
xchg
pop
jb
sbb
cmp
mov
insb
pop
sbbl
out
push
jge
cmp
pushf
xor
ficoml
ficoms
enter
mov
dec
inc
inc
xor
mov
push
adc
mov
enter
call
adc
lds
xchg
out
sub
pop
fisubl
or
jnp
out
add
pop
mov
adc
sub
sbb
loop
inc
leave
sti
sbb
sub
repnz
push
js
stos
aas
imul
push
xchg
xchg
cs
mov
std
sbb
int
sub
test
mov
out
push
pop
fstpt
or
int3
mov
or
push
push
jp
int3
cmp
xchg
pop
sub
sub
sarb
sbb
lds
jle
js
pop
pop
mov
jne
leave
inc
fsubl
pop
inc
out
jno
incb
lahf
mov
pop
mov
aam
aaa
loopne
sti
test
mov
cmp
mov
push
push
ss
xlat
adc
add
stos
inc
ljmp
mov
sub
ret
and
pop
inc
inc
and
faddp
idivl
cmp
out
sbb
adc
stos
aam
sub
mov
sbb
dec
leave
sub
sbb
xor
cmc
adc
lret
in
xor
icebp
add
xchg
jge
xchg
sub
xorb
pop
mov
fsts
or
gs
and
mov
mov
lds
lahf
mov
pop
mov
jne
push
out
leave
aam
movsl
mov
xor
mov
jae
jno
call
adc
mov
bound
mov
test
cmp
pusha
mov
arpl
insb
jne
shl
sbb
mov
mov
or
xor
cmc
mov
ja
xor
lcall
jp
inc
aaa
cmp
dec
daa
inc
inc
dec
pop
pop
enter
inc
aas
push
iret
add
or
fwait
add
ds
pop
jg
or
cmp
xor
mov
sbb
ret
frstor
jecxz
cmp
mov
mov
add
fsts
add
in
cmp
test
mov
cmpb
lods
pusha
insl
xor
sarb
jne
sub
cmp
xlat
rol
inc
sbb
pop
notb
mov
scas
xchg
outsb
sub
mov
push
mov
lods
inc
sbb
push
les
mov
hlt
das
or
insb
mov
ret
mov
ljmp
shll
cmp
sahf
bound
ds
pop
mov
add
ljmp
popf
mov
mov
pop
loop
scas
mov
xor
jmp
cmp
adc
xor
jle
jae
push
sbb
xchg
mov
test
inc
fldt
fdivrs
fimuls
fidivs
ret
mov
sbb
mov
adc
mov
xor
jns
dec
xor
add
jnp
imul
mov
sbb
out
xorb
cs
outsl
push
and
gs
and
dec
repz
sbb
leave
popa
sbb
jl
or
mov
andb
test
mov
pop
mov
imul
popa
movsl
fcos
xor
push
pushf
xchg
xchg
lock
mov
lahf
adc
sbb
fdivrl
and
mov
aas
pop
dec
push
push
and
cmp
sbb
add
jecxz
pop
xlat
rorl
out
ret
lret
out
fwait
sub
and
dec
aad
mov
int3
mov
xor
adc
adc
in
add
jl
cmp
subb
je
cmp
jne
addr16
ret
pushl
lock
out
xchg
into
sub
movl
lcall
dec
mov
add
jl
fs
cmpsl
mov
jbe
or
add
mov
mov
pop
inc
xor
mov
dec
mov
or
addl
inc
mov
push
cli
cmpb
mov
ds
lret
pop
stos
mov
movsb
mov
sahf
loope
sub
cmp
shrl
clc
jns
fstpl
or
pop
inc
pushf
movsb
inc
jnp
cmp
int3
push
cli
nop
jecxz
cmp
inc
lods
push
sahf
xor
or
xchg
mov
jmp
imul
mov
add
ss
repnz
in
add
pushf
cmp
jb
aam
dec
sarl
ret
mov
adc
pusha
loop
dec
pop
aaa
in
arpl
lahf
out
lods
push
scas
pop
mov
cmp
sbb
pushf
pop
fwait
or
jae
rclb
mov
into
data16
fsubl
addr16
ljmp
ja
sbb
ret
sub
ja
jp
fisubrl
add
fistps
mov
sub
ja
je
jne
int3
or
sahf
push
inc
rcr
mov
data16
scas
mov
mov
loope,pt
and
cwtl
sarb
or
mov
add
aas
xor
sub
roll
lods
andb
popa
push
arpl
cmpsb
pop
xchg
jns
inc
outsl
jb
push
cmpsb
repz
es
sub
aad
call
les
cwtl
imul
test
add
lret
adc
in
add
pop
stos
bound
cmp
cmp
and
subb
cmp
xor
and
fwait
das
loopne
test
les
jns
insb
in
adc
adc
add
rcl
js
cmp
out
cli
idivl
mov
outsb
mov
jno
ret
jmp
stos
push
jl
xchg
ljmp
xchg
inc
xchg
outsl
adc
add
repnz
int
xlat
xchg
lret
sub
pop
shrl
mov
push
mov
repz
cwtl
sub
clc
mov
imul
or
ret
jp
jns
pushf
aad
iret
mov
out
mov
loope
imull
popa
ljmp
fists
xchg
inc
adc
cmp
and
cmp
sub
shl
pop
push
aam
push
xor
lahf
mov
mov
add
sbb
fcompl
add
stos
pop
fiadds
fisubl
push
dec
xchg
add
loopne
jbe
xlat
mov
adc
and
inc
sbb
fucomip
stos
dec
mov
int
cwtl
insl
dec
push
dec
sbb
ljmp
stos
imul
ljmp
cmp
popf
vpsubsb
jg
popa
inc
pop
sub
leave
fcmovnbe
outsl
dec
sub
pop
add
push
mov
ret
fimull
mov
inc
fwait
out
mov
xchg
pop
or
xchg
ret
data16
dec
sbb
stos
jns
xchg
xor
bound
pop
dec
mov
sub
aam
xchg
les
xor
xchg
mov
aad
pop
enter
bound
lahf
pop
fs
cmp
jmp
loope
mov
and
add
lahf
cmpl
rolb
loope
pop
sbb
lret
lock
lcall
xor
pop
xor
push
xchg
pop
push
xchg
jo
add
ljmp
iret
jnp
mov
mov
xchg
ret
jmp
or
sub
mov
nop
jp
xchg
fwait
pushf
and
mov
mov
push
in
add
mov
adc
test
stos
outsb
xor
mov
lock
sub
in
mov
sbb
sbbl
arpl
dec
sub
lret
movsl
xchg
hlt
dec
add
imul
scas
pop
inc
xor
jge
cmp
push
das
movsb
fmuls
mov
xchg
cs
push
sub
adc
nop
lahf
xor
mov
mov
aas
mov
das
hlt
lds
cmpsl
mov
inc
mov
adc
in
mov
push
popa
pop
xchg
mov
bound
xchg
hlt
dec
inc
mov
or
sbb
cmp
jg
icebp
pop
fidivrl
lcall
movsb
xchg
and
or
and
data16
fisttpl
ljmp
int
xlat
pop
cltd
sbb
cmovo
jbe
inc
iret
inc
mul
sti
test
jo
pop
cltd
add
push
out
insb
aaa
mov
dec
pop
sub
sub
int
mov
or
mov
push
daa
or
mov
int3
mov
mov
ss
movsb
add
clc
push
pop
pop
outsb
push
sbb
daa
push
outsl
into
sahf
xchg
add
or
xor
lahf
cmpsl
dec
push
in
mov
gs
lods
cli
cmp
lahf
scas
jmp
dec
movsl
jmp
stos
xchg
loop
ret
fistps
inc
jmp
inc
inc
fwait
add
and
mov
call
pusha
in
movsl
jmp
leave
cmpsl
icebp
jg
jb
xor
faddl
and
jle
add
andnps
add
or
fsts
gs
add
jmp
xchg
xchg
cmp
dec
incl
and
pop
sahf
mov
pop
popf
jmp
dec
push
inc
inc
jnp
mov
inc
add
jne
mov
xchg
jge
lods
jbe
mov
daa
lds
gs
es
cmp
ret
xchg
dec
cltd
leave
or
jmp
cs
xchg
add
push
inc
dec
repz
cmpl
pop
and
push
sbb
imul
loope
int
sub
test
shrl
dec
and
cmpb
xlat
mull
cmp
cmp
or
add
fnstenv
jo
xchg
sub
cld
ljmp
or
xchg
int
cmp
adc
sub
xor
movsl
or
addl
xchg
or
xchg
popa
mov
mov
mov
repz
xchg
scas
mov
mov
cltd
mov
jle
xchg
repnz
lahf
leave
std
mov
out
xchg
sub
std
xor
repnz
xor
jne
fnsetpm(287
jp
dec
adc
push
mov
adc
push
or
add
mov
popl
pushf
dec
imul
in
adc
jne
mov
sub
inc
movsb
mov
lahf
jno
outsb
jmp
mov
stos
incb
lret
inc
cltd
ret
cwtl
mov
test
outsl
pushf
pusha
enter
add
dec
bound
outsb
jo
mov
iret
repnz
iret
sbbl
jno
xchg
add
fwait
cmp
fstps
jle
jae
mov
inc
or
in
mov
movsb
pop
push
mov
fsts
jge
divps
aam
adc
pushf
inc
push
push
sbb
pop
popa
mov
imul
adc
xchg
int3
pop
cmp
push
repz
imul
dec
sbb
dec
mov
iret
pop
jmp
xor
mov
pop
sahf
test
dec
dec
inc
push
jno
add
add
xor
out
push
scas
lret
lcall
lret
xchg
call
pop
mov
pop
fsub
fnstsw
or
jmp
mov
lock
dec
push
daa
repnz
fistpl
mov
adc
dec
pop
jae
stos
fwait
push
xchg
push
xchg
push
vrsqrtps
lds
por
repz
adc
sti
enter
mov
inc
jnp
xchg
fadds
insl
imul
cmp
cmp
jno
cmpsl
in
dec
jecxz
push
dec
in
gs
fstpt
mov
sbb
test
call
enter
jg
roll
in
or
pop
push
test
test
hlt
xchg
or
data16
mov
popf
rolb
or
subl
sbbb
mov
testl
fs
sub
psllw
pop
fnsave
repnz
lret
mov
int
cmp
mov
xchg
mov
pop
inc
push
and
inc
or
cmp
and
cmp
pop
mov
jmp
sbb
push
rcl
test
mov
daa
cmp
pop
into
loope
mov
cs
push
scas
pop
outsl
out
or
push
and
xlat
pop
push
pop
nop
adc
out
xor
inc
mov
jge
adc
inc
vmaskmovdqu
shl
mov
xchg
mov
push
ret
das
add
out
cmp
add
pop
xchg
push
mov
push
push
ja
sub
outsb
mov
add
and
lret
jae
dec
xor
enter
test
adc
dec
adc
lahf
adc
ljmp
dec
lret
pop
add
mov
push
push
xor
add
pusha
sbb
lcall
xor
inc
xlat
fcomi
pop
jns
clc
xchg
outsl
cli
aad
pop
jge
inc
xchg
dec
out
jae
mov
pop
adc
push
fwait
jo
xchg
add
adc
or
test
xchg
test
test
insb
sbb
clc
stos
imul
add
pusha
push
cmp
into
shl
mov
mov
call
sub
xchg
in
es
inc
jns
mov
jne
push
xor
cmp
or
cwtl
aas
movsl
xor
xor
enter
jnp
test
xacquire
fwait
push
pop
aaa
repz
pop
js
xchg
pop
pop
ss
inc
sti
push
sarl
gs
ret
pop
push
imul
mov
test
pop
psubsw
xor
testb
push
mov
jne
arpl
jns
mov
lahf
dec
in
inc
adc
repnz
and
sar
fs
lret
stc
add
and
in
and
addb
js
mov
xor
dec
outsb
les
mov
in
fdivs
xor
rcll
sub
push
jecxz
dec
push
xchg
lods
sub
add
and
gs
or
pop
rcll
cmp
mov
xor
add
mov
sti
cmc
imul
and
mov
sahf
pusha
mov
inc
xor
mov
imul
pusha
fbstp
jnp
nop
jmp
push
or
hlt
lret
fildl
xchg
jmp
cmp
mov
sbb
sbb
xchg
lods
cmpsb
ljmp
cmc
push
xchg
mov
add
push
leave
jecxz
sbb
out
loope
stos
call
adc
pop
js
pushl
das
loope
jae
and
imul
mov
insb
in
jnp
out
cmc
ss
ljmp
jge
dec
fistpl
sbb
cwtl
lods
push
test
xor
cmp
arpl
jno
and
in
shll
arpl
mov
sub
xor
pop
push
xor
adc
push
push
mov
out
adc
fwait
pop
sbb
insb
fmul
and
jle
jb
and
sub
ret
daa
or
xchg
leave
mov
mov
mov
jo
cwtl
cmp
push
and
and
add
mov
inc
xchg
in
mov
lret
inc
xchg
cltd
jmp
push
hlt
dec
jb
lock
inc
sub
sbb
push
inc
sub
pop
mov
sbb
push
xchg
les
repnz
clc
nop
dec
movsl
lcall
dec
or
stc
add
ret
xor
enter
mov
add
xchg
ss
clc
and
push
cs
sbb
fdivl
stos
pop
lret
lods
shl
jge
das
dec
fwait
aas
xor
stc
insl
ja
fwait
push
or
lret
push
adc
pop
adc
push
aaa
insl
mov
repnz
in
pextrw
insl
inc
ds
pushf
lcall
out
out
lahf
adc
movsl
hlt
xchg
dec
inc
ja
xor
mov
outsb
aad
fdivs
aad
add
adc
jl
mov
adc
nop
pop
aaa
fiadds
inc
movl
sbb
mov
shl
in
rolb
jge
outsl
add
xlat
ss
clc
or
pop
outsl
rorb
loop
push
push
adc
sbbb
mov
and
mov
lock
and
inc
popf
out
mov
jns
pop
jp
mov
cmpsl
xchg
jl
push
or
adc
or
mov
push
ljmp
cwtl
jle
adc
fs
std
cmp
or
imull
cmp
cld
mov
cmp
or
js
xchg
cmp
shlb
mov
gs
sarl
inc
push
ret
stc
cmp
xor
inc
lahf
dec
push
cmp
cmpsl
lods
xchg
pop
pop
mov
dec
inc
subb
xor
inc
xchg
mov
lret
fcomps
loop
lock
rcr
or
dec
jmp
pusha
jl
int
enter
int
ret
ret
pop
ficompl
fcompl
push
lods
mov
imul
lcall
sub
mov
sti
and
jmp
cmpb
rol
xchg
lahf
or
pop
adc
push
dec
pop
cmpsb
cmp
or
and
mov
push
mov
movsb
mov
cmp
ljmp
sbb
xor
inc
dec
arpl
scas
cltd
lret
sub
or
into
mov
ljmp
fldl
cld
fisubl
or
push
cld
inc
fprem1
sub
push
hlt
insl
sbbb
mov
fisttps
fbstp
mov
out
popa
jnp
stos
cmp
pop
leave
ror
mov
push
mov
lods
pop
hlt
insb
mov
xchg
stc
iret
stos
cmp
in
fdivrl
sbb
into
mov
fwait
pop
mov
mov
imul
int
in
jns
in
adc
mov
adc
jg
cmp
fildll
add
add
push
test
fstpl
bnd
mov
add
in
push
mov
cwtl
xor
mov
pop
mov
rol
jecxz
cmp
ffree
lret
out
std
cmc
mov
pushf
inc
js
fldl
xchg
jnp
hlt
hlt
ljmp
xor
js
sub
xchg
subl
pop
data16
mov
std
xor
or
movsb
outsl
jecxz
cmp
push
sbb
xchg
xor
mov
loope
adc
cli
fdivl
enter
add
jle
dec
or
adc
mov
or
icebp
cmp
mov
mov
dec
adcl
fisubs
inc
pusha
xchg
cmc
mov
push
push
lcall
fsubl
mov
call
xchg
mov
sbb
fstps
xchg
sbb
jb
mov
jg
enter
pop
jbe
int3
xor
adc
add
loopne
xchg
adc
mov
pop
cmpb
test
jne
jp
push
mov
cmovs
outsb
cmc
out
lahf
cld
test
mov
daa
and
das
mov
js
adc
es
in
stc
cmpsl
cmp
xchg
loopne
push
push
stos
jae
or
das
xchg
std
xor
lods
test
mov
and
mov
push
aam
loope
dec
jge
scas
aad
bound
fs
sub
cmp
adc
dec
and
jnp
mov
inc
jp
sar
test
cmp
or
pop
into
xor
cmp
setne
imul
xor
xor
int
cwtl
sub
mov
loop
jl
push
neg
lds
push
data16
sbb
cmp
sub
scas
inc
stc
gs
add
inc
iret
int
sub
aaa
out
xorb
or
lret
push
inc
mov
sbb
mov
jge
mov
std
push
sbb
or
mov
mov
xor
adc
ja
js
mov
sbb
repz
jmp
push
fsubl
mov
sbb
out
push
sub
and
sub
inc
stos
push
mov
ja
cmp
andb
in
lods
xchg
insb
imul
es
into
and
push
push
sub
pusha
aad
sub
jecxz
sub
outsl
lods
cld
xor
shlb
stos
ficompl
push
lock
movsl
pop
sbb
adc
and
push
or
jmp
cltd
cmpsl
and
dec
add
hlt
push
shl
xchg
out
cmpsb
cs
int3
push
mov
icebp
pop
push
push
inc
xchg
incl
sub
test
dec
ret
mov
adc
or
jae
add
jge
test
cmc
out
jns
rcrl
stos
sbb
cld
mov
fimuls
pop
add
fstpt
mov
or
xchg
daa
test
cmc
cmpsl
neg
fstps
pop
es
in
gs
imul
push
cmpsl
iret
jo
pop
add
clc
jg
push
hlt
mov
dec
mov
aam
imul
test
sbb
fisubrs
sub
mov
in
mov
xchg
add
arpl
cmp
fs
push
rcll
sarb
cmp
movsl
push
dec
clc
adc
dec
push
xor
mov
jnp
sarb
repnz
mov
stos
sbb
jno
xor
and
lods
adc
push
cmp
mov
jle
adc
mov
mov
lea
cmpsb
pop
fwait
data16
ja
cld
popa
iret
shlb
outsb
mov
sub
in
test
test
xlat
adc
fimuls
out
aaa
adcl
rdmsr
ljmp
pop
or
sar
inc
mov
add
int
inc
cmp
cltd
push
arpl
lock
das
xchg
cmp
mov
jbe
sarb
ficoms
xor
aam
insl
fistl
addl
dec
insl
sub
popf
jl
call
push
sub
adc
dec
test
push
fisubs
out
jge
or
xchg
mov
imul
mov
xor
mov
sbb
sub
inc
mov
mov
nop
fs
push
pop
std
xchg
push
pusha
mov
xor
lock
ss
into
scas
data16
push
insb
add
cmp
or
out
push
sbb
jnp
sub
xchg
sbb
std
jbe
dec
pop
and
aam
pop
stc
sub
fnstcw
xor
add
pusha
jno
out
inc
jno
cmp
fldz
aaa
sahf
stos
ret
xchg
sub
push
out
repz
cmc
fstps
mov
pop
ret
in
test
jno
mov
xlat
fcos
imul
cs
stos
pop
xchg
lods
rol
mov
dec
or
lds
inc
ss
push
xor
loope
jno
std
iret
push
arpl
aad
cld
stos
rcl
aad
adc
jmp
sub
int3
orl
jne
cmpsb
sbb
xchg
fdivp
aam
insl
call
lret
call
cld
mov
bnd
mov
lret
sbb
in
test
inc
inc
enter
loop
lret
push
jecxz
fs
rcrl
and
cmp
cwtl
scas
addl
iret
int
jne
and
imul
ret
out
ds
push
mov
or
jo
push
aad
mov
mov
lret
repz
insl
arpl
push
mov
and
fwait
cmc
mov
sahf
cmpsb
push
mov
jbe
jle
xchg
nop
cmp
mov
cmp
dec
mov
jg
mov
mov
ror
lods
gs
cmp
mov
push
sub
cmp
fadd
imul
xchg
mov
adc
orl
fstpt
push
jae
out
cmpsb
or
mov
mov
outsl
loop
push
es
fnstenv
imulb
pop
jmp
hlt
xor
xchg
jns
sub
leave
cmp
popf
cmp
adc
xor
jae
sub
xor
cmpsb
lea
sub
cmp
or
addr16
mov
xchg
add
sbb
fists
repz
and
aad
loope
mov
push
ficomps
jecxz
cli
mov
or
pop
dec
xchg
rcrl
inc
sbb
jmp
lret
pop
push
dec
shrb
scas
insl
push
add
push
mov
pop
cmp
xchg
mov
pop
mov
xor
adc
pop
cmp
in
mov
push
loop
sub
mov
iret
and
ljmp
mov
jno
js,pt
adc
push
xorb
clc
sbb
push
imul
and
add
rcrb
pop
or
movsb
lahf
lea
pushf
sub
imul
inc
or
push
cmp
loop
mov
and
push
inc
shlb
dec
jp
test
mov
or
enter
aad
inc
cmp
fbld
sub
pop
xchg
ret
das
subb
inc
mov
or
and
fcomp
lds
in
cli
pushf
arpl
repz
mov
mov
inc
imul
int
jecxz
or
out
fldl
rcr
insb
dec
mov
adc
out
jecxz
xchg
mov
add
ror
aas
mov
imul
negb
cmpsl
shl
int3
cmp
xchg
addr16
incl
push
mov
js
gs
sbb
cmp
dec
loop
in
and
imul
xor
testb
add
mov
mov
stos
in
mov
xchg
lods
leave
sbb
xor
fsts
aam
into
outsl
and
cmpsb
out
ljmp
push
pushf
fimull
jge
rorl
push
pushf
mov
lcall
sbb
pop
xchg
mov
adc
xchg
push
adc
or
or
mov
insl
add
movsl
scas
add
addb
add
loope
sti
mov
adc
rolb
jno
sbb
push
xor
mov
push
xor
loopne
imul
jmp
pushl
xchg
inc
pop
pop
icebp
sbb
push
test
dec
xchg
push
iret
mov
andb
es
out
xor
xor
jmp
sbbl
imul
dec
cmpsl
xchg
jg
lcall
aas
pop
mov
rcll
dec
shl
in
ret
add
pusha
fidivl
aas
popf
mov
out
aad
into
and
inc
mov
dec
pop
adc
jle
xchg
sarl
orl
imul
loope
xchg
dec
movsl
and
popf
shll
clc
imul
ljmp
repnz
je
cmp
cmpsb
cmp
enter
imul
stc
jae
ja
movsl
movsl
sbb
or
xchg
scas
mov
or
icebp
inc
scas
shll
mov
xchg
popa
adc
in
mov
outsl
push
scas
sub
add
mov
mov
shlb
imul
insl
pop
test
mov
pusha
mov
jnp
outsb
pop
or
and
mov
lret
nop
push
mov
push
pushf
jp
mov
lds
fs
jmp
arpl
pop
lds
xchg
cmp
rorb
mov
cmp
shrb
outsb
lods
insb
movsl
cmpsb
pusha
xchg
cmp
xchg
loop
cmp
dec
in
inc
cs
fdivrp
xor
xchg
push
inc
sbb
fisttpll
notb
cmp
jp
incl
xor
and
dec
or
sub
test
dec
and
jae
shll
pushf
lahf
and
mov
cmp
pop
leave
in
scas
imul
xor
xor
decl
and
or
push
in
push
xor
movsb
or
pop
dec
lock
jne
inc
sbb
int
stos
leave
out
inc
rcll
scas
fiaddl
add
lcall
adc
pop
add
add
pusha
pop
arpl
xchg
mov
mov
aad
aam
push
jmp
cmpsl
sub
pop
xor
imul
lods
lea
add
iret
push
pop
adc
pand
xor
add
jne
mov
jnp
cmp
push
rorl
loop
add
inc
add
push
adc
sbb
cmc
iret
xor
and
mov
pop
pop
lea
xlat
and
fstl
inc
cmp
cmpsb
add
inc
fidivrl
test
inc
fists
cltd
and
fadd
ficompl
inc
inc
cmp
pop
fs
inc
add
enter
nop
adc
sbb
outsl
rcl
notl
ret
leave
jno
mov
lcall
in
in
shl
push
inc
and
inc
loop
daa
xorb
pop
mov
enter
or
and
sbb
data16
cmp
daa
sbb
bnd
or
push
icebp
test
hlt
jno
jae
push
hlt
popf
lahf
test
cwtl
leave
fdivrp
sub
cmp
scas
lods
adc
jmp
or
inc
pop
or
test
mov
pop
mov
loopne
and
and
aas
xchg
cmp
int3
dec
test
adc
loope
sub
xchg
jg
outsl
xor
cld
mov
lcall
ljmp
and
add
inc
adc
cmp
cmp
loop
jecxz
mov
add
push
fucomip
sbb
mov
sahf
dec
mov
xchg
ret
mov
repz
push
xchg
sub
stc
jbe
xchg
push
pop
es
mulb
arpl
out
outsl
scas
aas
ljmp
mov
sbb
mov
out
mov
sbb
es
dec
arpl
aam
inc
sbb
mov
ja
mov
adc
jns
xchg
pop
enter
cli
pushf
aas
jl
or
adc
cmp
fmulp
inc
pop
jo
lret
add
test
stos
inc
dec
adc
mov
xchg
dec
fidivs
repnz
imul
aam
or
out
dec
xchg
push
sub
mov
loop
orb
in
pop
lods
iret
mov
add
or
lcall
push
and
sbb
jp
mov
mov
sbb
sub
mov
push
fmul
mov
pop
scas
add
sub
push
cmp
test
xchg
mov
jg
xchg
xchg
push
out
mov
xor
lahf
popa
gs
cmp
mov
adc
adc
pop
loopne
mov
out
push
cmp
xchg
das
test
ficompl
mov
in
inc
push
lcall
adc
dec
xchg
xchg
push
call
push
push
xchg
lods
hlt
popf
xor
add
out
test
add
fwait
in
int3
fldenv
fwait
mov
sub
aaa
and
pushf
insb
das
pop
in
xor
jbe
ret
push
clc
mov
repz
lret
cmp
cmp
roll
dec
outsb
add
in
adc
push
fwait
jp
into
fiaddl
jecxz
jg
out
popw
jo
pop
mov
cmpsb
pop
fstpl
arpl
repz
push
jle
in
iret
adc
imul
adc
dec
add
nop
add
mov
clc
mov
call
icebp
add
cmc
push
movsb
ficompl
stos
cmpsb
ss
xor
mov
fdivr
jnp
test
or
mov
sub
pop
inc
jmp
pop
mov
or
stc
ja
daa
xor
mov
or
sub
call
ljmp
jg
stc
jbe
rclb
add
dec
jle
cmpb
in
jo
and
test
ljmp
dec
jnp
jno
cltd
cmpsb
sbb
mov
mov
and
xor
and
insl
mov
inc
addr16
add
adc
aaa
push
loopne
ljmp
scas
pop
mov
adc
dec
xchg
xlat
jecxz
xor
hlt
ja
mov
cmpsb
test
xor
lcall
or
xor
icebp
imul
call
cmp
mov
ss
mov
int3
inc
pop
add
inc
mov
sub
add
bound
rcr
inc
push
cmp
mov
mov
mov
test
or
jmp
sbb
repnz
fidivrs
sub
loop
sub
movsb
xchg
je
pop
pushf
cmpsb
movsb
adc
cmpsb
test
xchg
sbb
fcoml
mov
cli
lods
jecxz
inc
inc
dec
push
inc
sub
mov
ret
push
flds
dec
dec
and
mov
and
icebp
mov
sub
mov
inc
loop
int3
movsb
dec
test
lcall
test
loopne
xlat
test
push
pop
xor
or
mov
pop
or
inc
stos
pop
xchg
test
daa
std
leave
xor
xchg
loope
stos
lea
jns
pop
or
inc
xor
clc
push
xor
pmaxsw
xchg
sbb
insb
push
pop
fcompl
leave
repz
mov
ret
adc
into
xor
mov
in
pop
inc
insb
shll
cs
dec
inc
daa
push
call
cmpsl
icebp
cmp
ss
pushw
sub
in
mov
sar
mov
dec
mov
fdivr
inc
dec
sbb
push
add
movsl
daa
inc
mov
dec
pushfw
cmp
sbb
lcall
std
xor
xchg
pop
shll
ljmp
add
xchg
ljmp
add
inc
fadds
lods
loop
stos
sub
xchg
dec
out
adc
cmp
lret
inc
aas
sbb
push
jecxz
iret
dec
bswap
cmp
pop
mov
cmp
mov
stc
and
stc
shll
outsl
mov
xor
mov
jmp
sub
lcall
adc
cmp
repz
fld
jbe
sub
mov
cmp
aas
rorl
pop
aam
clc
sub
mov
mov
sub
mov
in
xchg
nop
rcrl
imul
jbe
cli
in
mov
popf
and
fmuls
pop
or
movsl
fwait
push
push
dec
pusha
popl
in
sarb
rcrl
pop
lret
scas
push
ficompl
scas
inc
sub
dec
mov
pop
sub
cmc
imulb
leave
mov
push
push
push
clc
pop
sti
outsb
je
adc
and
sub
push
lea
stc
mov
hlt
and
ljmp
dec
push
out
pop
jg
jnp
inc
mov
decw
lds
cwtl
int3
sbb
fistl
addl
stos
and
jae
and
or
dec
add
call
ss
xchg
mov
test
ret
xchg
call
jns
inc
push
jle
gs
sbb
movsb
mov
fnstsw
sbb
call
xor
hlt
inc
lret
pop
push
into
push
std
push
or
lahf
rolb
jmp
hlt
cmpsl
repz
lds
mov
and
lret
inc
jge
js
xor
xchg
cmp
mov
repz
mov
or
mov
bound
icebp
outsl
mov
xor
sub
cmp
hlt
add
sub
hlt
popf
mov
ficompl
lods
arpl
sub
test
xchg
sub
push
aas
ret
mov
nop
sub
dec
gs
push
xchg
add
inc
pop
jbe
sub
cmp
xchg
pusha
mov
inc
mov
adc
jmp
out
push
adc
sahf
jb
cli
arpl
mov
inc
jbe
pop
rcrb
loopne
mov
add
inc
inc
subb
pop
inc
sbb
sub
jbe
fwait
sarl
movsl
fidivrs
or
lock
sbb
add
nop
or
cmpsl
xor
inc
sti
aam
push
rcr
mov
jns
movsl
cmpsl
imulb
sub
inc
cmp
jp
clc
mov
shrl
pushf
fldl
xchg
stc
arpl
dec
ja
loope
cmp
cmpsl
adc
add
mov
aad
out
adc
sub
xchg
mov
cli
insb
and
jmp
push
fidivs
loop
repnz
fldt
and
ret
cmpsb
aas
cmc
in
or
sub
outsl
inc
ret
xor
mov
cwtl
or
hlt
mov
mov
cmc
std
sbb
add
push
cmpsl
add
std
enter
sbb
in
mov
js
dec
dec
mov
movsl
dec
or
fstps
sub
lds
test
inc
ss
push
xor
mov
shl
add
mov
cmpl
adc
add
push
rol
lock
adc
mov
outsb
filds
push
bound
and
pop
in
push
pop
adc
mov
lods
mov
cmp
inc
dec
mov
sbb
enter
and
mov
jnp
daa
xchg
clts
je
dec
test
movb
sbb
call
in
cld
cmpsl
lds
lea
push
cmc
adc
lods
pop
out
in
clc
in
jge
mov
mov
fs
inc
icebp
out
scas
hlt
je
sti
stos
sahf
adc
ss
int3
addb
and
xchg
shr
xchg
push
push
sbb
enter
call
shll
pusha
cmp
popa
xchg
call
mov
int3
push
imul
addps
je
cmpsb
rcll
pop
gs
add
icebp
add
push
shl
or
add
xchg
mov
pop
ja
mov
das
sub
pop
notb
test
jae
sub
xlat
lcall
sub
call
repnz
add
pop
mov
push
cmpsb
cmpsl
testl
fwait
jmp
xchg
je
mull
add
mov
arpl
sub
sub
push
das
cmp
fisubrs
cmp
sub
std
inc
cmp
sbb
xor
sbb
call
adc
add
fisttpl
loopne
sbb
inc
rol
pop
mov
inc
ljmp
andl
bound
jne
sbb
test
inc
pop
push
jnp
nop
xor
or
repz
adc
ljmp
repz
or
xor
aaa
mov
insb
push
pop
std
jnp
in
out
dec
jmp
cmp
push
int3
out
arpl
out
pop
push
add
mov
dec
lods
inc
ja
movsl
and
ficomps
push
out
cmpsb
lea
faddl
xor
imul
jle
xor
in
xor
push
push
mov
and
jge
mulb
adc
add
cmp
mov
test
stc
lods
push
sbb
dec
setg
lds
cmp
addr16
push
adc
cltd
xor
pop
xor
cmpsl
adc
scas
mov
pop
cld
xchg
inc
gs
fistps
mov
rcr
mov
adc
arpl
jg
fsubs
test
push
lahf
pop
ljmp
sub
xlat
cwtl
out
mov
mov
mov
mov
frstors
pop
or
test
sti
mov
and
jne
fisttps
xor
es
shrl
repz
push
adc
mov
fs
ret
push
std
pop
inc
and
pop
add
addr16
out
ret
or
mov
outsl
shrl
es
es
cmp
push
cmp
lahf
dec
jbe
lahf
jae
sub
cs
cmp
cs
push
jmp
divl
xor
or
aaa
dec
scas
movsl
and
sar
sub
mov
movsb
adc
add
add
mov
cltd
add
les
lock
inc
mov
cld
adc
sbb
mov
rcrb
push
sbb
and
sbb
xor
mov
fucomp
daa
adcb
mov
les
adc
bound
out
xchg
add
adc
stos
loopne
cs
pop
inc
xor
fidivrs
dec
rcrl
dec
push
sub
add
aam
push
fdivrp
in
adc
mov
jbe
hlt
push
push
nop
in
xor
ja
inc
hlt
ljmp
addr16
push
xchg
test
mov
aad
iret
iret
xor
inc
inc
xor
lea
add
pusha
pop
and
addr16
lret
or
jnp
pop
or
ss
cwtl
fcmovb
mov
cmp
lds
cmp
xor
test
xchg
cmp
arpl
inc
push
mov
lds
or
jne
pushf
lret
mov
pop
push
sbb
fs
mov
orb
mov
cmp
stc
mov
int
out
cmp
mov
sub
pop
cmp
sti
repnz
in
pop
popf
js
pop
ret
mov
adc
lods
jne
addl
aad
mov
ja
inc
or
subb
xor
stos
jecxz
push
mov
test
push
fldenv
xchg
loop
nop
push
cmp
add
test
pushf
xchg
incb
push
decb
lcall
test
pop
inc
loopne
roll
mov
xchg
push
call
insb
add
lcall
sbb
lock
shlb
inc
pop
inc
test
push
pop
out
out
push
jb
add
lds
dec
dec
clc
in
sbb
add
js,pn
in
jne
mov
sbb
dec
sub
fs
test
fldcw
push
jns
adc
adc
jbe
aam
add
sbb
decl
mov
jns
mov
xchg
jmp
fdivr
enterw
push
add
add
inc
mov
cwtl
add
adc
addb
pop
in
push
mov
fstl
insl
inc
lods
adc
sub
mov
push
push
imul
pop
cmp
pop
loop
jp
sbb
stos
or
dec
pop
aam
je
push
clc
jecxz
jmp
jp
pusha
das
fcoml
es
dec
dec
cmp
lcall
push
decb
or
addl
movsw
adc
add
arpl
int
call
mov
aas
sbb
adc
mov
leave
loope
aad
shlb
hlt
jmp
ret
or
icebp
push
loopne
cmp
or
and
sbbb
xchg
test
cmp
adc
in
dec
mov
fimuls
or
insl
lock
adc
int
adc
dec
mov
inc
stos
nop
push
shl
enter
cltd
cltd
imul
cmpsb
imul
cmp
outsl
negl
sti
mov
push
mov
mov
cltd
push
jg
mov
fstpl
lock
adc
mov
mov
fimuls
cli
cmp
loopne
or
cmc
scas
mov
inc
outsb
fcmovne
inc
aam
sub
repz
jnp
add
adc
dec
out
imul
out
adc
xor
or
inc
loop
pop
jne
stc
inc
movsl
or
inc
inc
pop
sbb
jle
add
aas
adc
xor
scas
inc
rclb
pop
arpl
sub
add
int
outsl
into
scas
call
mov
ror
pushf
fs
jp
dec
rcrb
inc
jge
dec
sub
jmp
adc
add
push
ret
test
fisubrl
stos
in
xor
sub
add
daa
dec
pop
pop
dec
sbb
std
rcll
xchg
in
stos
lcall
nop
pop
test
leave
out
xor
sub
sbb
iret
sbb
adc
negl
int3
jle
popa
fldcw
inc
push
popa
xchg
popa
mov
fwait
push
xchg
out
pop
mov
je
and
push
jle
jp
bound
cmpsl
into
adc
addr16
paddsb
fildll
xor
jge
out
mov
mov
sub
int3
outsb
arpl
adc
add
and
ret
adc
jle
mov
sub
mov
ss
mov
inc
loope
repnz
lea
daa
popf
pop
cld
inc
jbe
pop
mov
call
out
fstps
call
adc
xor
cmp
mov
mov
push
xchg
mov
je
mov
popa
mov
push
testb
add
ljmp
sub
shr
push
rcrl
sbb
int3
xchg
cmp
pushf
pop
test
mov
in
jmp
mov
div
jae
jmp
jo
adc
mov
stos
loop
in
add
mov
enter
add
mov
stc
fwait
sbb
lods
lahf
sahf
sbb
sub
loop
pusha
inc
jo
aam
jp
add
jne
push
lahf
push
rcll
xchg
scas
or
sub
or
lock
mov
dec
add
pop
mov
call
test
daa
cwtl
xchg
adc
add
or
rclb
cmc
or
xchg
xor
ret
lods
test
je
cmp
cmp
fwait
jno
out
mov
sub
ds
movsb
adc
dec
pop
cmp
cwtl
das
mov
pop
aad
cmp
push
sub
mov
xchg
mov
cmp
xor
jnp
jmp
adc
dec
xchg
pop
sbb
inc
lds
add
mov
dec
mov
jo
lea
out
mov
nop
fxch
enter
fucomip
xchg
or
xchg
pop
ret
insl
dec
adc
aaa
mov
and
xor
sar
adc
in
testl
xor
movsb
xchg
imul
cmpsl
movsb
mulb
das
push
dec
xchg
jae
cmp
mov
lahf
popl
subl
cmc
xchg
fistpll
sarb
shrb
jle
gs
test
bnd
repnz
xor
std
gs
jno
jl
movsl
mov
out
popl
fwait
ds
xchg
nop
ljmp
mov
outsl
out
sbb
popf
fxch
leave
sbb
in
and
aas
clc
lret
and
inc
lds
lret
ds
fdivrl
out
cmp
mov
and
adc
idivb
lock
cli
mov
inc
cmpsb
or
sub
jle
push
jbe
out
pusha
and
std
xor
inc
push
pop
lds
ljmp
or
mov
cmp
les
stos
mov
xchg
pop
dec
jno,pn
ja
fbstp
mov
repz
inc
stos
sub
loope
mov
mov
sbb
xchg
dec
sti
stc
mov
sub
or
jbe
lret
sbb
repnz
lret
hlt
data16
test
je
stos
test
jge
lcall
loope
sar
sbb
and
inc
std
fs
add
aam
xchg
lret
push
mov
cmpsb
sarb
in
mov
data16
aam
push
xchg
movsl
adc
pop
lock
dec
pop
stos
push
push
jno
push
jp
cs
mov
push
loop
jno
addb
cmpsb
jecxz
inc
inc
lods
jcxz
add
dec
xor
xchg
jbe
dec
inc
mov
jnp
sbb
xchg
sub
cmp
push
nop
outsl
cmp
daa
js
in
pop
mov
imul
mov
xchg
mov
cltd
imul
xchg
sti
mov
les
sub
dec
popa
sub
pop
inc
fcomp
or
inc
dec
out
xor
subl
das
iret
divb
sbb
xor
ds
jo
and
inc
mov
in
inc
inc
les
aaa
mov
or
jle
xor
pushl
das
jnp
adc
jle
pop
lret
pop
int
lahf
out
mov
mov
repnz
cmp
insl
cmp
mov
orb
test
dec
sub
mov
pop
cmp
mov
movsb
pop
int
add
bound
neg
scas
inc
mov
imul
or
push
push
mov
sub
add
mov
mul
aam
pop
in
add
and
cld
inc
jmp
push
cs
aam
push
xchg
jl
aaa
jle
adc
mov
cmp
cld
xor
inc
cmp
add
xlat
call
adc
cmp
push
daa
xor
mov
xchg
mov
sub
sbbl
daa
test
inc
data16
xchg
add
clc
out
or
das
sub
leave
sbb
int
push
sub
pop
push
sarb
jno
jo
mov
cmpsl
cli
scas
xchg
jno
jae
scas
nop
ljmp
call
loopne
lret
jmp
scas
inc
js
mov
xor
bound
jl
xor
xchg
fwait
rcrb
cmp
nop
lahf
jb
cmpsb
inc
scas
andb
scas
or
adc
stos
pop
sahf
push
cltd
mov
addr16
and
mov
pop
andl
hlt
mov
in
or
fstl
cmpsb
test
mov
stos
xor
sub
adc
sub
pop
lret
sbb
mov
adc
cld
sub
js
inc
out
icebp
test
push
fnsave
subb
xchg
insl
sbb
or
data16
and
sbb
out
xor
shlb
dec
cltd
mov
or
push
leave
xor
je
arpl
stc
jne
inc
int3
sbb
add
pop
push
xchg
mov
sub
mov
push
fldl
movl
ret
test
dec
shll
or
into
add
aas
data16
cmp
ja
inc
mov
adc
rcrb
and
jecxz
and
scas
cmpsl
adc
dec
sub
dec
fistps
outsb
xchg
int
jbe
lret
inc
xchg
xchg
in
stos
mov
xor
dec
xor
jbe
scas
mov
adcb
stos
cld
xchg
sahf
int3
add
mov
jno
jge
out
mov
loope
popa
push
jmp
push
arpl
repz
mulb
cmp
fcmove
addr16
push
adc
loope
test
mov
push
stos
test
mov
xor
fs
dec
mov
cmc
or
dec
jmp
adc
sbb
sbb
inc
nop
stos
push
jmp
cs
mov
xlat
hlt
pop
inc
or
js
into
mov
jle
into
sub
rorl
inc
fcomps
adc
pop
xor
lock
gs
sub
adc
add
ljmp
popf
stos
pop
add
push
mov
mov
xchg
jae
loop
inc
sub
ficoml
loope
xorl
cli
pop
or
mov
xchg
cli
pop
adc
ficomps
testb
mov
enter
data16
std
loop
jns
mov
cs
add
ret
jno
das
push
repz
inc
add
test
cld
xchg
mov
stos
dec
cs
inc
pop
mov
lahf
je
sbb
pusha
jecxz
clc
data16
mov
pop
pop
add
loope
lahf
and
sbb
daa
mov
adc
cmpsb
arpl
xchg
into
add
and
jp
adc
jg
pop
mov
sub
lahf
test
es
or
xchg
sub
movsb
mov
test
pop
test
jno
jb
in
mov
jns
outsl
and
mov
gs
push
cmpsb
dec
push
orl
sub
hlt
lret
sub
cltd
ret
pop
xlat
xorb
mov
mov
inc
or
adc
sbb
test
fnstcw
inc
nop
and
jle
je
outsb
les
pop
or
js
sbb
cmp
cmp
push
icebp
cmc
push
mov
push
jbe
or
pop
jp
xor
lret
push
push
cmpb
xchg
stos
adc
lret
sub
adc
xchg
test
push
or
out
fildl
loop
sbb
repz
or
repz
sub
insb
jns
adc
cmc
arpl
push
lret
mov
stos
loopne
push
pop
pop
jb
adc
mov
std
adc
xchg
outsl
cltd
orb
cmpsb
push
lret
push
mov
jge
push
inc
jns
cmc
nop
daa
movsb
jg
mov
sub
sbbl
in
and
ss
pop
rcr
xchg
out
es
psrlq
repnz
mov
aaa
sarl
or
fucomp
out
push
inc
popf
sub
pop
or
inc
jns
iret
hlt
bound
icebp
fcmove
inc
fwait
aam
adc
cmp
xchg
movsb
shlb
icebp
xor
inc
or
movsl
pop
mov
lea
into
sub
xchg
jae
imul
jmp
mov
lods
clc
stos
add
lret
pusha
ss
or
and
xchg
add
mov
dec
cwtl
fbld
cli
dec
mov
ss
insl
pop
or
scas
or
jmp
mov
dec
rcl
jbe
mov
lcall
mov
push
mov
dec
xlat
inc
cltd
stc
and
mov
ja
pushf
push
add
push
inc
or
daa
cltd
dec
pop
pop
enter
and
rcrl
daa
stos
imul
mov
jle
sub
push
pushf
ffree
ds
xor
xchg
xor
jmp
mov
fisubrs
adc
mov
xchg
add
cwtl
repnz
dec
inc
out
sub
adc
inc
adc
addr16
jne
or
sbb
mov
rolb
push
adc
imul
loop
lret
lahf
in
mov
xor
xchg
fnstcw
jno
xor
jmp
cmp
enter
enter
pop
cmc
arpl
test
shl
stos
aam
jne
push
hlt
mov
arpl
ret
sbb
adcb
out
mov
xchg
js
out
adc
shlb
xchg
scas
call
adc
cmp
adcl
test
mov
pushw
xchg
fnstsw
push
sub
movb
adc
test
cmc
mov
cmpsl
mov
enter
mov
jne
fcoms
pushf
push
jp
outsl
stos
mov
mov
lret
or
pop
ficomps
xchg
movb
mov
dec
insl
out
cs
test
jnp
xor
popf
rcr
movl
call
cli
push
mov
jg
pop
loope
subl
jbe
dec
mov
mov
cltd
daa
mov
daa
mov
lods
clc
sub
pop
call
daa
decb
sub
jl
movsl
or
call
and
sub
or
in
lea
inc
mov
lods
inc
scas
ljmp
push
jns
icebp
pop
ja
jb
xchg
bound
or
rcrl
shll
adc
into
jnp
adc
int3
loopne
cs
loopne
xchg
fcmovnb
mov
out
out
mov
ss
sbb
es
test
inc
sbb
cmp
call
arpl
or
cwtl
call
pop
adc
inc
pop
scas
outsl
sub
and
add
xchg
ds
push
xchg
push
mov
leave
rorb
sbb
fmul
addr16
stos
push
cmp
adc
adc
cmp
mov
add
int
outsl
pusha
in
je
xlat
or
push
mov
shrb
out
imul
add
cmpsb
xchg
ds
std
mov
js
andb
push
rclb
shr
in
inc
mov
cmpsb
std
ficompl
lar
mov
sarl
xor
sar
or
fiadds
ds
shlb
mov
or
dec
sbb
pusha
loop
jl
ret
jecxz
in
dec
mov
not
jmp
adc
cmpsb
xchg
cmp
add
jp
jae
sahf
jns
test
xchg
pop
inc
push
rolb
dec
push
pop
sub
stc
jl
push
or
sbb
repnz
add
pop
adc
fisubs
push
add
ja
lahf
shrl
enter
shlb
and
sarb
jno
and
in
ja
jbe
xor
jb
cmp
inc
push
xchg
iret
fistpll
ret
sub
jge
push
scas
adc
mov
addb
hlt
xchg
ds
mov
loop
cmp
out
adc
sub
adc
dec
cli
adc
jmp
or
push
cmp
out
inc
mov
int3
mov
jmp
cmp
repz
imul
notrack
into
imulb
and
ss
jle
mov
mov
adc
rcll
xchg
jecxz
ja
cmc
lahf
cmp
aaa
xor
movsl
fwait
enter
inc
int3
std
lods
pop
enter
dec
ss
cmpsl
inc
jbe
xor
out
jae
stc
imul
shll
aad
bound
or
gs
fcomp
xchg
jg
std
and
loop
mov
arpl
adc
sbb
in
pop
mov
aad
cmp
mov
xchg
ja
or
adc
jae
xchg
stc
ret
or
cmpsb
push
jle
aam
je
int3
sti
sbbb
cmp
sub
mov
mov
jne
sub
adc
add
test
sub
inc
cmp
mov
lock
jne
dec
imul
cmpsl
dec
pushf
xor
adc
out
addr16
dec
leave
sub
push
push
adc
add
jmp
daa
add
int3
sbb
ds
cli
add
lods
jmp
lds
loopne
adc
fcompl
push
lret
ss
sbb
mov
cmp
mov
lods
jne
divb
loope
les
add
push
xchg
sbb
inc
je
les
popf
jno
test
ficoms
jns
lock
xor
mov
xor
fwait
jae
push
daa
aas
mov
cli
loopne
cmp
xor
xor
bound
cmp
push
aas
scas
pop
lods
mov
jecxz
jecxz
stc
rcrb
push
and
adc
ret
loopne
mov
imul
daa
adc
outsl
scas
and
xchg
add
xor
ret
insl
push
loop
arpl
lret
push
inc
add
fdivr
mov
cld
jns
xor
ss
adc
add
sub
insb
xchg
dec
pmaxub
push
ficoms
cwtl
adc
add
fsubrs
jo
and
mov
mov
xor
outsb
aad
xor
cmp
mov
scas
into
sub
div
sar
cli
in
test
test
sbb
mov
dec
push
fistl
or
sub
inc
xor
jnp
scas
push
incl
ret
sub
mov
js
jns
mov
arpl
mov
lds
aad
stos
pop
hlt
enter
sub
and
data16
and
hlt
or
faddl
scas
add
cmp
or
ret
lret
notl
or
data16
sub
sbb
xchg
push
leave
clc
lret
cmp
in
xchg
cld
pop
and
push
jmp
cmp
repz
mov
les
sbb
mov
mov
filds
dec
daa
arpl
mov
pop
xor
push
into
sub
mov
pop
cmpsb
jns
jne
adc
movsl
fidivs
in
incb
xchg
mov
push
mov
mov
pop
in
xor
in
les
push
mov
leave
mov
inc
stc
mov
andl
daa
pop
cmc
adc
dec
lds
pop
or
sub
scas
punpckhdq
sbb
and
jmp
outsl
pop
mulb
pop
sub
cs
fcom
mov
inc
ret
lret
nop
jge
push
orl
jmp
imul
in
mov
cltd
xchg
push
leave
jge
add
cltd
pop
jle
add
pop
or
xchg
mov
clc
rdpmc
stos
out
xchg
xor
adc
mov
and
and
pushfw
and
xor
pop
jne
add
mov
jge
xor
mov
cmp
mov
jbe
inc
and
and
push
xor
scas
inc
jbe
in
lea
js
pop
fcoms
xchg
mov
popa
dec
lahf
dec
mov
out
xor
mov
sub
pop
adc
sbb
leave
sti
imull
cmp
cmpsl
push
push
mov
lahf
mov
dec
sub
sbb
mov
adcb
push
sbb
int
mov
movsb
sub
xchg
int
lret
adc
xor
push
jl
scas
ss
repz
jl
std
shr
jp
xchg
cld
ljmp
cmpsb
xchg
jle
popf
sti
cmpsl
aad
inc
jmp
lret
ljmp
jg
scas
add
call
insb
dec
fiaddl
enter
sti
hlt
cmp
xchg
ja
lret
jno
sub
add
aas
jno
and
in
mov
loop
mov
xor
sub
or
rcl
cmpsl
vpermi2d
dec
aam
pop
push
mov
js
fwait
and
cltd
xor
add
or
aas
xor
cmp
xchg
jbe
jno
pop
faddp
pop
repnz
out
mov
sbb
sbb
das
and
pop
sub
sbb
or
gs
repnz
daa
jge
negb
mov
lret
lods
pop
notl
cmp
pop
cmpsb
ja
pusha
and
xor
lcall
lods
jecxz
lods
out
xchg
ljmp
in
fstl
cmp
sub
lcall
fnstsw
add
rcrb
aaa
sbb
cwtl
pop
mov
mov
dec
push
call
sahf
mov
ret
xchg
in
and
cmc
ret
sbb
inc
sbb
stos
jae
sbb
and
andl
js
shrl
jmp
rcrl
fwait
clc
or
adc
sub
lahf
mov
lds
adc
or
ja
mov
push
sbb
push
push
adc
xchg
add
and
inc
inc
mov
sub
sbb
lahf
fnstcw
lods
les
cs
dec
mov
leave
in
add
fstpl
push
jno
mov
adc
out
or
pop
push
mov
insb
push
sbb
adc
add
cwtl
push
popf
call
inc
pop
outsl
iret
int3
std
lcall
jno
sbb
sbb
pop
aaa
cmp
sbb
mov
outsb
mov
scas
cwtl
imul
mov
xchg
xlat
jbe
aas
jg
cwtl
push
xchg
out
cmpsb
or
rclb
pop
shr
ds
add
pop
push
repnz
jge
mov
add
cmp
cmc
fnstsw
jne
mov
les
xor
cmp
push
es
outsl
inc
fistpll
sbbl
lods
mov
or
sub
jne
dec
push
aad
sti
adc
ljmp
sti
adc
xchg
je
in
push
push
mov
std
dec
xchg
or
js
ja
push
mov
jle
jle
jp
stos
bound
icebp
popf
pushf
js
ret
fwait
xchg
cmpsl
fwait
push
cmp
sbb
dec
and
into
sub
jnp
out
rorl
adc
inc
aad
add
lret
shll
outsb
ss
or
xor
je
inc
sbb
add
mov
adc
or
push
mov
jbe
out
pop
mov
pop
xchg
or
je
aas
mov
aad
dec
pusha
lcall
mov
repnz
or
sbb
cmpsl
int3
out
dec
loop
jmp
cmpsl
inc
xchg
mov
push
sbb
xchg
and
add
jne
jns
push
mov
mov
gs
in
leave
dec
lods
rcrb
inc
add
fstl
xchg
adc
into
sahf
mov
push
xor
iret
add
dec
ret
out
and
mov
add
and
dec
cltd
ret
inc
ds
pop
ret
movsl
adc
push
push
fwait
in
shr
fistpll
xor
frstor
push
ja
xchg
fildll
std
sbb
sarl
sti
lret
adc
sub
xchg
test
int3
jae
xlat
rcrl
clc
in
aam
pop
push
leave
jae
pop
jns
sbb
mov
fidivrl
out
adc
mov
cmp
inc
test
xchg
mov
xchg
lock
jecxz
mov
xor
pusha
rcrb
dec
xchg
jne
pop
jno
out
sbbb
imul
adcb
add
xor
addr16
cmp
aaa
pop
lret
pop
xor
pop
js
push
xor
push
scas
mov
mov
rclb
shl
pop
mov
jns
xorb
imul
sub
adc
mov
cmp
out
mov
in
rcl
repz
xor
cli
xor
das
fcompl
repnz
insl
mov
jge
xchg
int
loopne
leave
mov
sub
cltd
xor
dec
popa
jnp
xor
mov
pop
mov
stos
cmp
test
jecxz
clc
push
lds
gs
std
mov
push
loope
imul
pop
pop
mov
inc
je
test
cs
push
and
adc
ret
xor
sbb
cld
mov
in
xchg
mov
loopne
ficompl
outsb
fstps
mov
sub
dec
dec
push
lahf
out
xchg
testb
inc
mov
xor
pop
hlt
jmp
jno
push
ret
mov
sbb
pop
adc
mov
cmp
dec
popa
and
rclb
fidivs
bound
lds
mov
movsb
pop
dec
clc
iret
jle
incb
push
xchg
test
cmp
leave
aam
in
mov
and
leave
xlat
stc
jl
stc
fsubp
repz
aad
sti
add
sbb
lock
and
in
pop
insl
dec
xor
rorl
dec
xchg
mov
lea
addb
sub
pusha
mov
fnsave
fwait
dec
mov
xor
fstpt
sbbb
sahf
repnz
in
add
out
arpl
das
and
fisubrl
xchg
aad
jl
adc
ds
or
shl
xor
inc
cmpsl
inc
pop
add
roll
fstps
adc
fcomi
mov
adc
jp
pop
lea
sub
xor
data16
pop
inc
xlat
inc
iret
aaa
ret
fnsave
icebp
movsl
pop
mov
sub
mov
inc
jl
lock
push
je
rcl
leave
aad
jb
in
xchg
mov
dec
out
mov
jns
into
repnz
in
or
sub
std
sub
lahf
add
and
addr16
dec
mov
adc
ljmp
lock
mov
into
xor
imul
fwait
loope
movsl
movsb
xchg
daa
pop
jbe
popa
pop
cwtl
push
popa
pop
loopne
push
inc
adc
xchg
pusha
adc
xor
in
leave
adc
mov
jnp
mov
in
faddl
rcl
push
inc
sti
pop
idivl
jmp
out
push
dec
fstpl
pop
mov
push
cld
shll
cmpsl
mov
adc
mov
ljmp
fbld
add
mov
or
out
push
mov
test
pop
sub
gs
mov
and
and
lods
xlat
fcoms
jnp
push
jge
mov
aas
mov
lods
cmpsb
and
sbb
iret
in
cmpsb
sbb
or
inc
or
not
stos
pop
mov
or
and
jb
adc
sahf
int3
mov
les
inc
pop
sub
aas
fwait
in
mov
rolb
in
outsb
sub
or
enter
mov
fldenv
xchg
std
sbb
rol
fs
dec
popf
in
mov
push
add
lret
insb
add
mov
fsubl
mov
arpl
sub
out
es
mov
or
sarl
add
iret
mov
ror
sub
mov
imul
inc
les
push
clc
jmp
gs
fwait
bound
sti
cli
pop
cmc
push
std
lcall
aam
dec
je
repnz
sbb
fldl
adc
pop
mov
and
push
cld
jb
imul
or
fprem
mov
fwait
outsb
sbb
out
pusha
dec
mov
xor
decb
cmp
inc
aas
inc
xchg
xchg
pop
ss
push
sub
pop
sbb
mov
xor
sub
rclb
out
pop
jns
ss
test
and
xor
pop
popf
cmp
jnp
lods
cmp
inc
mov
in
jb
and
pop
lock
adc
sahf
arpl
or
movsb
mov
test
enter
and
xchg
push
js
js
mov
inc
les
das
pop
js
arpl
dec
fs
mov
mov
cld
test
xor
stos
and
hlt
rorb
cmp
sti
sub
sub
adc
fs
fisttps
xchg
test
sbb
fcom
fistl
jge
shll
daa
enter
mov
mov
mov
or
mov
mov
push
fildl
idivl
lcall
mov
adcl
mov
jmp
std
mov
repnz
mov
sub
ret
and
adc
sahf
mov
addr16
sbb
xchg
jmp
out
mov
sub
stc
out
ds
sub
lret
testb
loopne
add
ret
aaa
lds
lret
mov
pusha
test
jmp
test
roll
repz
or
lret
xchg
lret
pop
push
mov
iret
mov
jb
add
je
mov
add
inc
mov
mov
mov
icebp
jne
xchg
add
dec
incl
les
out
fisttpll
loope
test
pop
fs
cmp
test
mov
int3
xchg
adc
jg
clc
ss
lods
imul
push
xchg
fbstp
mov
jbe
push
adcb
hlt
mov
and
icebp
mov
pop
js
inc
jnp
mov
inc
jno
sub
stc
leave
push
fistps
push
adc
push
pop
nop
inc
dec
outsl
add
pop
movsl
pop
imul
inc
aam
xchg
hlt
adc
gs
adc
xchg
xchg
add
out
jle
mov
and
shll
pop
sub
fcomi
pop
sbb
repnz
popf
ljmp
sbb
aad
xchg
cmp
cli
gs
daa
notl
mov
or
xor
shlb
popf
pop
pushf
test
inc
cmp
int
sbb
rcr
repnz
dec
fbstp
sbb
pop
ret
and
pusha
add
lret
pop
xor
dec
sbb
adc
ja
inc
and
jnp
and
daa
sbb
xchg
andl
jp
jns
sub
xchg
sbb
sub
ret
sbb
add
je
addb
mov
iret
or
subl
jno
sti
jns
call
xorb
dec
loop
adc
aaa
scas
xor
jmp
jno
add
xchg
nop
and
xchg
aad
inc
test
shrl
shll
dec
arpl
insb
xor
mov
pop
cli
popf
sub
repz
lock
xor
fs
pop
int
jns
pop
and
popa
cmp
fbstp
test
jle
adc
jne
pop
leave
push
enter
pop
push
xor
data16
mov
mov
cmp
xor
ret
fdivr
movsl
pop
bound
and
insl
sub
and
outsl
mov
ficoms
jo
imul
or
movsb
jg
mov
rclb
inc
xor
xor
negl
mov
stc
inc
push
test
ja
adc
cmp
repnz
lret
fldl
and
push
dec
idivl
jge
xchg
fcoms
fdivp
mov
mov
sbb
dec
ret
les
pop
out
adc
or
cmp
aam
sub
repnz
mov
mov
push
mov
add
cmp
shl
mov
adc
movups
pop
iret
ret
ljmp
xchg
mov
in
adc
xchg
enter
xor
sbb
sub
clc
cs
lods
cli
and
mov
cmpsl
das
xor
sub
loopne
cmp
dec
push
lahf
dec
xchg
jns
rclb
push
inc
adcl
subl
xor
ds
push
jp
cs
xchg
shr
imul
fstps
xchg
push
add
lret
filds
add
push
or
lahf
add
mov
data16
fldenv
inc
push
xor
movsb
lcall
push
push
clc
push
add
push
inc
lock
or
jecxz
popl
popf
movsb
sbb
and
int3
pop
push
addr16
xor
and
inc
and
lods
dec
cmp
test
mov
dec
and
dec
stos
adcl
pop
push
iret
sub
in
fidivrl
sbb
jp
ds
ds
rcr
stos
xor
dec
and
sbbl
mov
rorl
idivb
aad
popf
push
sbb
dec
xchg
or
push
rcl
fwait
sub
ja
sbb
loop
mov
adc
les
jae
push
fs
fs
gs
fld
and
les
enter
icebp
fistl
fldl
xchg
cmpl
add
shll
pop
test
fimuls
xchg
repnz
shrl
pop
push
lds
neg
mov
mov
inc
inc
and
jge
mov
pop
adc
adc
cmp
cmpl
inc
fiaddl
sub
dec
push
xlat
sbbb
int3
jle
push
jo
jbe
sub
xchg
push
andl
jl
lahf
pop
cmp
jbe
imul
push
add
lahf
mov
sysexit
inc
into
pop
ljmp
ret
ret
movsl
mov
fbld
jnp
mov
scas
jp
insl
ljmp
insb
cmp
jae
inc
mov
lea
cmpsl
stc
inc
push
xorl
imul
inc
sbb
push
std
ljmp
cs
mov
cmp
ret
or
jecxz
mov
lock
sub
jo
aaa
call
paddusw
xor
push
or
cmpb
rclb
lea
xchg
lcall
ret
add
mov
ljmp
aaa
sub
test
fs
jne
mov
lds
sbb
lods
sub
outsl
das
sahf
or
mov
push
out
jecxz
fwait
insb
sbb
fs
or
gs
in
sbb
call
push
fnsave
mov
cs
inc
lea
xor
les
lret
push
push
push
cmp
xor
adc
push
lahf
xlat
lea
xchg
sbb
sti
icebp
mov
xchg
or
and
movsb
insb
mov
out
lea
stos
fcomip
xchg
call
stos
dec
pop
popa
and
dec
in
cld
jae
xor
aam
cld
or
je
inc
out
push
fmuls
sbb
cmp
add
mov
cmp
adc
push
ret
sub
add
inc
pop
out
movsb
pop
insb
outsl
loopne
lret
xchg
xchg
cli
subl
mov
xchg
arpl
xor
pop
into
and
das
mov
pop
xor
ret
loope
push
andl
fdivr
mov
xchg
push
lods
and
loope
outsl
pop
inc
jnp
inc
jecxz
pop
or
iret
jge
adc
cli
loope
aaa
arpl
lret
cmp
lcall
xor
out
dec
jae
push
push
les
sbb
test
lcall
or
call
jbe
mov
jo
mov
out
xchg
ret
xchg
cmp
xorps
xchg
pop
shr
xorl
mov
mov
dec
ds
and
lret
jmp
mov
test
ds
or
sbb
sbb
adc
adc
inc
scas
lods
stc
pop
loope
dec
add
outsb
lcall
cmp
fstps
push
jno
and
cmpsl
mov
pop
ss
mov
push
int
jne
addr16
mull
lahf
jo
xor
adc
pop
scas
pcmpeqd
cmp
ja
repnz
push
xchg
sub
mov
mov
outsb
movsl
jae
push
lds
xlat
xlat
dec
mov
push
push
add
enter
cmpb
cmp
cmp
dec
cmc
mov
jmp
stos
cmpsl
in
lret
jge
pushf
sar
mov
xor
loope
sbb
sbb
lea
call
sub
es
pop
sbbl
rcr
push
mov
sahf
cmp
adc
scas
push
aam
fisubrl
hlt
inc
push
in
xor
add
inc
mov
outsl
addb
loopne
les
btc
imul
repz
cmp
add
aas
stos
mov
mov
mov
inc
or
mov
sub
mov
icebp
mov
cmp
dec
mov
lret
imul
mov
gs
cwtl
addr16
out
jns
mov
xchg
jae
adc
lret
loope
ret
icebp
sbb
shrl
jmp
bound
clc
jp
add
in
outsl
shlb
js
sbb
cli
pop
sbb
ljmp
push
dec
sarb
rol
push
fldl
scas
cli
pop
push
and
loope
cmp
incb
out
test
add
scas
in
popa
imul
sub
mov
adc
incb
and
sub
leave
inc
arpl
and
xchg
test
add
lods
movhps
jbe
push
sub
or
add
subl
jecxz
xchg
jns
in
cmpsl
call
push
sub
fcmove
in
in
xchg
mov
gs
mov
jle
lahf
faddl
ja
dec
loopne
cld
jge
cmpsl
arpl
fbld
out
mov
jb
jae
fistpl
mov
aaa
test
sub
mov
mov
out
add
pop
mull
in
ficomps
test
push
jo
sbb
enter
test
pop
out
and
mov
xchg
mov
xchg
shll
nop
jecxz
mov
mov
adc
dec
sub
sbb
and
and
out
cmpb
cmpsl
das
int
inc
mov
sti
dec
leave
je
adc
ljmp
negb
sbb
adcb
stc
stos
fstps
xchg
lcall
xchg
jbe
addb
lret
imul
outsl
stos
inc
pop
scas
push
mov
and
out
dec
lods
leave
and
xchg
jns
jmp
push
add
xchg
insl
fdivp
ja
daa
pop
js
call
and
dec
mov
or
stos
sti
adc
push
pop
movsb
daa
popa
loopne
mov
xor
int
sti
in
add
cmp
mov
out
stc
jne
cmp
lahf
mov
scas
and
inc
rcrb
mov
ljmp
push
dec
push
ds
imul
sbb
mov
push
dec
pop
pop
inc
roll
mov
sub
mov
mov
imul
pop
jb
pop
pop
iret
cmp
xchg
push
sub
nop
sbb
arpl
xchg
adc
push
and
sub
daa
cmp
leave
in
movsb
sub
movsb
scas
and
sub
arpl
add
inc
insl
fidivs
es
pop
or
inc
insb
inc
mov
jns
jo
sbb
int3
xchg
aaa
sub
jnp
shr
fsubrs
inc
fnstsw
and
sbb
fisttps
shl
add
pop
mov
sbb
fwait
xchg
rorb
inc
hlt
pop
ret
xchg
cmp
into
int
cltd
xorl
sbb
out
imul
push
loop
pop
pop
mov
push
fldenv
ljmp
or
add
push
inc
daa
jns
push
mulb
or
jno
nop
xchg
sti
leave
test
sbb
dec
xchg
inc
pop
cli
cmp
cmpsb
divl
stos
outsl
sub
cmp
ja
add
iret
pop
pop
insb
mov
push
or
fadds
mov
jo
movsl
bound
xchg
aam
dec
or
adc
jmp
out
cmpsl
daa
adc
push
sbb
mov
mov
sti
adcl
mov
vmread
sub
andb
mov
sahf
nop
pusha
mov
cmpsb
fisubrl
hlt
fs
shlb
cs
xor
and
pop
mov
es
aad
mov
mov
hlt
xchg
sbb
and
push
or
sbb
xchg
jmp
inc
arpl
mov
movsb
cwtl
mov
fcmovb
test
pop
mov
or
xchg
sub
stos
mov
shrl
xlat
in
data16
and
xchg
data16
jecxz
js
mov
daa
jbe
sbb
aam
scas
xchg
subb
js
icebp
or
movsl
jmp
outsl
pop
cmp
cmpsb
aam
pop
fmulp
cmp
xor
int
jl
addb
shlb
popf
test
stc
push
jne
loope
mov
cmp
cmp
fildl
mov
mov
mov
push
in
das
pop
add
sti
inc
or
nop
push
lods
dec
push
push
or
xchg
push
mov
cmp
cmc
popa
outsb
cmp
add
imul
lea
sub
in
lock
dec
xor
popf
inc
ss
sub
mov
push
inc
push
pusha
pop
push
xchg
and
leave
pop
push
enter
stc
pop
sub
xchg
cltd
enter
hlt
gs
ror
pop
std
jno
fiaddl
clc
xchg
scas
pop
in
test
inc
outsl
fsubrs
add
not
sbb
adc
test
jo
mov
xorl
xlat
sub
push
push
mov
out
fdivrl
pop
or
ret
push
ficompl
out
xor
xchg
aam
jp
sti
pusha
jle
loope
sbb
insl
xlat
and
pop
loopne
push
cmp
and
xchg
or
cli
pop
dec
fsubs
sub
adc
mov
aaa
sti
xchg
inc
aas
push
xchg
dec
call
adc
xchg
in
enter
xchg
mov
jae
mov
push
test
movsl
pusha
imul
int
push
data16
dec
xchg
push
sub
fildl
jb
es
fidivrl
inc
sub
cmpsb
imul
and
cmp
mov
jb
jb
sub
mov
and
cmp
jge
pop
pop
xchg
push
test
push
adcl
cmp
testl
daa
xchg
add
int3
adc
fsubl
inc
dec
arpl
fistpll
cmp
jle
jbe
jo
cmp
or
cmp
push
mov
xchg
cmp
mov
cld
push
add
stos
sub
or
in
jb
mov
out
sbbb
pop
jecxz
cwtl
stos
test
aas
cmp
in
gs
cmpsl
ds
push
xchg
out
inc
mov
mov
int
incl
clc
lock
sub
push
fld
pusha
inc
insl
xchg
dec
lcall
push
fucomp
inc
rcl
mov
mov
ljmp
hlt
bound
xchg
rclb
pop
je
insb
mov
in
js
mov
pop
adcl
sub
out
xor
cmp
jg
mov
pusha
test
in
insb
daa
lcall
cwtl
lods
xlat
dec
insl
cmp
jmp
mov
mov
xchg
mov
call
repnz
stc
cltd
cwtl
stc
enter
loopne
jge
push
mov
aad
lock
sahf
int
divb
roll
mov
jo
inc
sbb
jb
fldenv
inc
inc
jp
mov
stos
bound
sub
jae
cmp
push
rolb
rolb
pop
outsl
push
xor
sti
xchg
push
and
scas
ljmp
insb
pusha
arpl
xchg
ljmp
cwtl
adc
les
jge
pop
insl
loopne
insl
and
xor
or
out
dec
std
or
dec
add
aas
pop
adc
add
out
fiaddl
inc
jno
mov
cmp
lret
cld
mov
mov
jns
and
xchg
je
insl
test
out
in
negb
shl
inc
cltd
popa
lods
jge
mov
int
cld
add
add
push
fcoms
test
stos
pop
inc
pop
pop
bound
xor
pop
xchg
jl
and
jae
stos
xor
inc
and
out
mov
lahf
repnz
test
insl
jg
lret
push
fs
ds
ljmp
or
repz
xchg
arpl
ja
mov
clc
mov
repz
xor
jb
mov
or
or
mov
andb
inc
sub
addb
int3
mov
add
mov
cs
push
negl
pop
bswap
int
fwait
inc
xlat
ret
inc
rcrb
sbb
add
mov
ss
xlat
hlt
call
xor
lret
out
pop
mov
pop
xor
arpl
loopne
adc
push
bound
inc
jns
clc
jbe
test
mov
fidivrl
ja
xor
int3
jecxz
xchg
mov
mov
pop
lahf
and
pop
bound
repz
sub
arpl
stc
cmpsb
sbb
cltd
add
gs
cmp
cmp
sub
jnp
adc
inc
outsb
ss
ret
sub
imul
daa
mov
ret
mov
hlt
mov
and
hlt
jbe
mov
push
ds
push
pop
cmpsl
int
jmp
mov
in
inc
add
fcmovnb
ss
sti
jne
decb
insl
test
shl
mov
cmpl
pop
push
daa
incb
or
das
fwait
insb
cmc
and
cli
ljmp
lds
sbb
dec
mov
push
popa
bound
adc
dec
push
loop
cmpsb
ss
aas
jecxz
ds
out
arpl
dec
shlb
inc
movsb
or
out
dec
das
xor
lock
in
sbb
test
adc
roll
dec
mov
jl
andl
dec
jecxz
xchg
enter
xchg
es
pop
mov
mov
push
out
scas
cmp
repz
jne
jge
add
stc
shrb
cmp
icebp
cwtl
imul
outsl
sbb
cmp
jp
mov
leave
inc
mov
cmp
jl
push
add
inc
adc
dec
sub
insl
sbbb
or
into
and
and
mov
cmp
pop
mov
add
push
mov
fmul
mov
jle,pt
data16
xchg
idiv
in
in
push
sub
sbb
les
sbb
mov
dec
or
out
mov
adc
jae
ja
push
sbb
fstpt
xor
call
adc
cmc
popf
adc
mov
in
xchg
push
push
add
mov
jl
add
out
scas
mov
das
sarb
xlat
or
mov
pushf
cmp
test
cld
jbe
cld
or
push
pop
flds
adc
inc
adc
push
xchg
mov
fmull
int3
xor
inc
aad
cs
pushf
out
cmpsb
cmp
imul
sbb
insl
adc
xchg
inc
mov
mov
adc
pop
and
mov
fisubrs
xor
and
out
arpl
push
call
sbb
ret
fldenv
jg
jbe
cmp
icebp
push
fbstp
fwait
mov
mov
and
pop
jns
fistl
adc
out
sti
movsl
std
in
shlb
mov
imul
cltd
aad
dec
stos
pop
sbb
or
lcall
and
cmp
xchg
xchg
inc
lock
loopne
adc
movsb
std
push
pusha
inc
pop
jmp
stos
fs
mov
or
das
adc
cli
jmp
addr16
lea
xchg
mov
jle
add
nop
mov
xchg
popl
xor
dec
rorb
push
out
insl
xchg
ja
jmp
push
xchg
stc
fsubrs
pop
cltd
sbb
es
mov
push
fstl
jp
clc
cs
test
and
jbe
in
cs
hlt
das
shrb
jmp
sub
pop
adc
out
cwtl
cmc
into
int3
mov
in
mov
test
jae
xchg
xor
cmpsb
cltd
jl
shrb
jo
xor
xorl
repnz
cli
mov
scas
inc
push
add
ja
lcall
cmp
sbb
mov
mov
hlt
test
cld
xchg
insb
push
mov
xchg
popf
mov
mov
icebp
out
xchg
pusha
xchg
mov
ret
xor
sbb
aas
ficoml
movb
pop
fcomps
sbb
fmull
xor
test
hlt
cmp
xchg
sbb
aad
inc
sti
outsb
xlat
push
addr16
cmpsb
ret
pop
and
pop
lcall
mov
or
rcrl
cmp
adc
int3
cmp
jno
mov
scas
mov
dec
mov
jne
jne
dec
fucomip
or
call
sub
es
jnp
jb
sbb
bound
sarb
or
mov
jmp
push
xor
mov
inc
inc
cmp
dec
fwait
clc
repnz
inc
bound
icebp
ret
cld
inc
or
push
sti
mov
sbb
push
add
movsl
xchg
push
jmp
jge
icebp
add
call
sub
out
fdivrs
out
and
addb
inc
sbb
push
call
test
es
in
icebp
mov
jmp
loopne
pop
into
out
scas
or
in
adcb
icebp
aam
or
inc
jmp
adc
loop
jno
fcmovnb
mov
mov
stos
push
mov
adc
sbb
jl
jb
push
movsl
sub
pop
mov
int3
ljmp
ror
test
popa
xchg
flds
in
sti
mov
and
lds
pusha
loop
lds
push
and
pop
mov
pop
movsb
sbb
dec
in
into
dec
fidivs
inc
jecxz
int3
or
cmc
sti
sub
es
ja
jbe
popa
fistpll
push
das
popa
mov
outsl
jo
sub
inc
sub
ljmp
sub
enter
arpl
fisubs
xchg
adc
pop
jg
rolb
in
xchg
pop
adc
xchg
ljmp
nop
aas
xor
xorl
scas
adc
ja
fwait
sub
aam
pop
xchg
movsl
jnp
arpl
jbe
xchg
jle
les
xor
cmpsb
cmp
aam
jbe
stc
cs
push
mov
js
jae
rcr
sbb
sbb
sub
addl
push
test
cmp
adc
fstpt
stos
dec
hlt
repz
testl
fnstenv
sbb
clc
out
rcrl
jnp
repz
clc
aam
inc
jmp
pop
push
ja
pop
std
aas
mull
sub
adc
fsubs
mov
sbb
mov
add
jo
jecxz
dec
popf
mov
repnz
je
adc
cmp
mov
add
out
aas
das
fs
mov
cmc
sarb
in
xor
incb
and
jne
rcrl
sarb
mov
pop
sub
push
clc
lods
nop
test
inc
nop
test
cmc
in
xchg
inc
add
pop
push
data16
adc
or
pop
dec
cmp
mov
lret
xchg
pop
jns
lods
dec
mov
mov
sbb
jbe
or
push
mov
dec
in
and
inc
cli
jecxz
into
pop
cmp
fbstp
idiv
ficoms
insl
xor
xor
lea
xor
imul
sub
jns
sub
out
mov
shr
mov
mov
ljmp
add
out
call
add
dec
ss
or
js
das
clc
jae
js
sbb
scas
dec
scas
es
jno
into
sti
add
fs
pop
sub
add
popf
out
fmuls
int3
mov
xchg
mov
sub
ret
sub
adc
inc
jl
iret
fwait
pushl
jle
sahf
and
add
stos
pusha
cld
and
std
jmp
adc
cld
imul
insb
clc
or
and
jmp
imul
xchg
sub
notb
scas
lcall
add
inc
cmc
shlb
ss
je
pushl
mov
xor
jb
mov
lods
add
xor
sub
sti
dec
xchg
jnp
mov
mov
xchg
fbstp
jp
jmp
inc
adc
pop
sbb
sbb
lret
in
andb
mov
out
movb
jb
mov
add
push
out
cmp
or
out
mov
mov
push
sub
jl
icebp
cwtl
call
or
pop
mov
add
test
pop
or
cmp
inc
fiaddl
pop
sub
push
xchg
sbb
ror
jp
and
mov
push
iret
outsb
dec
mov
in
stos
fwait
inc
repnz
cld
clc
xor
push
fdivs
cmp
idivl
inc
jo
jo
inc
stc
xchg
repz
mov
pop
sub
push
xor
mov
mov
xchg
cld
cltd
push
inc
in
adc
cltd
inc
ljmp
cmpsb
lcall
xchg
loopne
mov
sbb
fs
cmp
ficomps
popf
pop
daa
xor
add
cli
xor
adc
icebp
xchg
or
and
pop
mov
push
hlt
mov
lcall
pop
adc
jae
filds
mov
outsb
decb
outsb
test
inc
pop
and
rol
test
pop
imul
scas
jne
pop
fmulp
cmp
hlt
or
adc
xchg
dec
xorl
xchg
xor
push
cmp
or
cmp
testl
adc
mov
mov
inc
jnp
sti
cmp
or
js
pop
call
fadd
cmpsb
push
add
movsb
stc
enter
iret
out
mov
sbb
or
cmpsb
mov
scas
and
shl
in
and
jnp
xchg
sbb
pop
adc
cmc
pop
sub
pop
bound
jg
push
icebp
add
aam
movsl
or
inc
fidivrs
imulb
std
out
fcoml
sub
shr
scas
cmp
mov
pop
push
mov
lahf
fisubrs
push
push
movb
pop
bound
xchg
cmp
bnd
xchg
daa
sub
loopne
jg
dec
js
push
subps
or
movsb
pop
push
adc
adc
mov
mov
fidivrs
push
lcall
lock
and
push
xchg
insb
ret
pop
cmp
repz
jnp
add
dec
mov
aam
pushf
pop
mov
addr16
pop
and
fs
xchg
lahf
adc
pop
inc
xlat
or
call
movsl
outsl
cmc
aaa
mov
loop
les
and
fstp
sbb
xchg
aad
adc
int
leave
int
std
lcall
xchg
ret
pop
js
xchg
cmp
out
jle
mov
rcr
inc
ret
jg
or
jmp
cltd
fwait
dec
mov
push
int
lds
into
movsb
sahf
jbe
jnp
mov
rorl
mov
mov
xlat
jmp
adc
mov
or
fisubs
or
clc
icebp
cmc
and
push
mov
or
lret
xor
jo
adc
sbb
pop
pop
out
and
inc
out
cmp
stc
sub
lds
insb
jo
fisttpll
dec
pop
ret
movsb
push
jl
mov
push
in
and
ds
xor
adc
cmp
fidivs
scas
push
mov
or
or
sub
call
incb
mov
pop
mov
push
fbld
repnz
xlat
inc
mov
mov
aad
fistps
cmp
xor
arpl
insl
xchg
daa
fdivrl
xchg
adc
into
sbb
bswap
xchg
outsb
mov
or
mov
xlat
frstor
in
cmp
in
xchg
adc
lahf
cs
sub
lods
mov
inc
scas
and
ss
or
rorl
loop
or
dec
sbb
pop
das
and
add
in
daa
fidivrl
push
fstpt
ret
dec
jns
jo
or
mov
mov
mov
cmp
ss
lcall
es
es
lock
les
jno
mov
sarl
or
push
aad
jb
lock
bsr
xchg
cmc
push
cwtl
cmp
jecxz
xor
jae
repz
enter
or
hlt
sbb
mov
mov
ficomps
xor
inc
xor
stc
sbb
mull
jmp
dec
dec
cmp
imul
sbbl
aas
ja
inc
mov
and
fildl
or
add
out
adc
xchg
mov
cld
xlat
mov
pop
ret
sub
leave
pop
loop
aad
insl
data16
nop
shr
inc
or
shrb
adc
and
push
insb
cmp
popa
mov
xchg
mov
pop
jmp
es
or
jp
xchg
sub
xchg
loopne
cwtl
inc
mov
pop
shlb
adc
mov
dec
inc
pop
push
mov
popa
add
xor
ficoms
xor
pusha
inc
in
stos
sub
push
mov
cmp
cmp
xchg
mov
outsb
fidivrs
add
inc
loope
inc
push
popf
scas
in
test
pop
xor
inc
push
pop
pop
mov
stc
push
cltd
hlt
inc
mov
rolb
cmp
pop
jae
sub
leave
sbb
push
mov
cmp
xchg
pop
adc
out
fidivs
addr16
add
mov
test
sbb
xchg
ja
repz
jbe
les
pop
xchg
lcall
mov
sub
popf
xor
jne
lret
push
mov
mov
repz
std
insl
adc
xchg
pop
out
xor
mov
xchg
inc
inc
lahf
and
repz
sbb
push
fcmovu
ud1
and
in
fstpl
push
xlat
pushf
cmpsb
push
xchg
stc
push
xchg
aaa
sub
add
pop
clc
leave
test
pop
inc
sbb
xchg
add
fisttpll
xchg
popf
pop
mov
mov
ucomiss
out
adc
and
aas
add
sbb
outsl
add
and
cs
pop
enter
outsl
stos
inc
insl
testl
test
nop
cltd
cmpsl
cmp
insb
notb
enter
loopne
dec
push
shll
sti
xchg
jnp
hlt
sahf
shlb
cmc
fbstp
orl
sbbb
xchg
test
push
cmpsb
cmpsb
sbb
jge
or
cmova
push
inc
xchg
jl
lock
push
das
add
mov
imul
outsb
orb
inc
sbb
cmp
out
xchg
and
iret
lea
push
rcrb
cmpsb
cmpb
pop
pushf
mov
mov
rolb
aad
or
not
icebp
in
push
dec
adc
cs
inc
jb
out
repnz
rclb
cld
add
sub
in
je
sbbl
in
sbb
aam
les
cmpsb
psraw
or
and
adc
add
mov
add
lods
mov
inc
shrl
xchg
das
sbb
in
data16
mov
jne
pop
jmp
js
mov
and
fimull
shrb
fwait
pop
outsl
push
mulb
jmp
sbb
popa
jns
sahf
cmp
mov
imul
js
jmp
mov
cs
xchg
xchg
lret
aas
scas
shlb
xchg
popf
dec
icebp
aad
push
dec
faddl
mov
mov
pop
inc
and
ljmp
ljmp
push
fs
lods
pop
ss
test
subl
fists
mov
loopne
lods
test
inc
mov
add
xlat
std
mov
inc
jge
les
aad
cli
dec
and
bnd
sub
pop
cmc
xor
jo
inc
mov
sbb
push
bound
lea
sti
hlt
mov
aad
cli
xchg
daa
push
sbb
fbstp
xchg
mov
movsb
sub
and
orb
inc
dec
sbb
cli
enter
insb
aas
xlat
pop
xor
movsl
int3
in
jg
int
iret
repz
test
lods
xchg
pop
andl
bnd
call
aas
mov
push
scas
xchg
out
cs
addr16
out
xchg
add
cmp
dec
subl
push
mov
mov
cmp
jecxz
mov
xchg
call
add
mov
sub
test
dec
ret
xchg
and
mov
push
scas
lahf
jmp
inc
push
dec
sti
out
rcll
jecxz
or
cli
cmp
pop
imul
sbb
enter
pop
sub
nop
adc
dec
or
jmp
scas
insl
insb
cmpsb
les
lret
or
xor
pop
pop
and
mov
aaa
jb
ja
or
iret
loopne
roll
jecxz
mov
aaa
and
and
in
es
in
outsb
add
ds
cmp
std
mov
je
jo
movsb
cmp
xchg
or
gs
jae
jb
mov
jmp
adc
jne
enter
mov
inc
jp
xor
mov
loope
add
mov
push
push
scas
pop
push
inc
jl
lock
and
mov
pop
ret
mov
sbb
xchg
pop
fs
in
in
push
pop
mov
repnz
and
icebp
js
imul
repnz
mov
mov
xchg
sti
jbe
add
dec
insl
cltd
mov
inc
push
cmp
xor
enter
lret
pop
sahf
push
lahf
in
clc
bound
xadd
ljmp
das
dec
and
popf
xchg
das
or
cmp
bound
mov
pop
dec
push
movsb
cmc
mov
movsb
jnp
pop
lahf
add
insl
ret
push
pop
jp
jp
dec
and
fsubr
jmp
xlat
mov
idiv
enter
mov
dec
in
and
loop
jg
repnz
xlat
push
add
fwait
push
mov
or
and
cmp
inc
xor
xchg
mov
clc
lods
fldl
and
cmp
push
xor
pop
imul
sbbl
sub
and
fisttps
pushf
lahf
push
mov
stos
test
stos
das
popf
adc
and
jl
dec
and
cs
sbb
mov
push
jnp
mov
popa
test
xor
xor
orl
pop
fstpl
mov
int
fsubrl
scas
shll
mov
push
xor
mov
xor
stos
inc
xor
cmc
push
dec
mov
sbb
jecxz
sub
or
lods
stos
pusha
xchg
clc
xor
inc
dec
iret
or
pop
insb
adcb
and
imul
xchg
push
out
mov
pop
add
and
lcall
xlat
sti
pop
add
daa
xchg
jecxz
cwtl
push
divl
sbb
shrl
mov
xor
into
repz
adc
insl
cltd
xchg
pop
inc
push
popf
aad
push
addr16
dec
jge
int
mov
ret
mov
fsts
sarb
mov
xchg
mov
loop
cmp
cmp
pop
jb
or
xchg
sub
fstpt
in
xchg
imul
in
int
popf
cmp
jno
and
mov
icebp
iret
loopne
popf
mov
jae
enter
inc
jns
xchg
mov
and
aas
jb
mov
scas
inc
xchg
push
std
push
add
or
int
outsb
xor
je
pop
mov
mov
fs
mov
test
mov
or
nop
movsl
dec
add
imul
icebp
fsts
mov
add
or
jecxz
mov
ret
xchg
mov
test
xchg
push
jne
lcall
jbe
jb
jmp
push
repnz
test
cli
int3
mov
mov
outsl
mov
addr16
mov
arpl
pop
inc
data16
clc
and
sub
adc
mov
aad
mov
loope
mov
inc
push
adc
mov
fldenv
xchg
jge
lcall
mov
fs
sub
add
popa
or
aad
mov
pop
into
mov
lock
sti
xor
pop
pop
pop
cmp
sub
rolb
scas
scas
dec
idiv
sti
pop
test
xor
or
out
lods
nop
sti
fists
inc
inc
mov
pop
jb
testb
inc
xchg
and
in
dec
dec
mov
inc
add
adcb
lods
out
je
mov
push
sbb
xchg
ja
and
mov
popa
aam
mov
push
fwait
out
fmuls
cwtl
daa
mov
push
test
loope
xor
cli
in
inc
out
push
mov
cwtl
loopne
stos
pop
mov
int3
icebp
push
icebp
cs
push
fwait
clc
lock
cmp
mov
cmpsb
repnz
sbb
mov
das
outsb
lods
sti
mov
push
jnp
and
jo
cli
jae
push
push
sub
out
into
sub
loopne
add
sbb
int3
inc
dec
mov
lahf
xor
loope
xlat
in
fidivrs
or
inc
push
push
stc
pop
stc
or
fcoml
xor
mov
fistpll
aas
mov
xor
outsb
clc
push
pusha
cmp
icebp
or
jmp
js
adc
test
fsts
mov
lahf
insl
pop
mov
aaa
push
mov
add
shlb
push
push
sarl
adcl
jecxz
ljmp
lea
lods
push
je
sbb
xchg
pushf
mov
inc
xor
std
dec
push
jne
addr16
loop
outsl
mov
sub
stc
repz
in
mov
dec
xchg
push
jae
loope
imul
shrb
into
pop
outsb
hlt
jnp
insl
mov
in
xchg
and
mov
imul
pop
sbb
js
addr16
into
sub
out
es
mov
push
ffreep
add
or
dec
adcl
xchg
fs
and
lcall
sub
mov
sti
je
notl
in
shrl
les
cmp
cli
call
icebp
mov
or
adc
xor
and
xchg
dec
mov
dec
jbe
in
cmpl
lret
jg
xor
into
jnp
pop
fimull
ljmp
fcompl
iret
jecxz
out
orl
xchg
mov
adc
pop
jl
xor
rorb
xor
in
fcomps
dec
ficompl
cmp
push
lret
xor
xor
fimull
mov
push
loopne
add
ljmp
lret
dec
fwait
xor
cli
xchg
cwtl
test
repz
cmpsb
cmp
lahf
cli
arpl
out
testl
and
or
ret
out
mov
fwait
scas
mov
jno
inc
fidivrs
push
mov
addr16
mov
inc
jae
or
pop
pop
idivl
call
xor
add
hlt
hlt
scas
fs
xlat
test
sbb
push
xor
and
dec
loope
mov
inc
xchg
enter
ja
scas
jmp
je
dec
lods
mov
sbb
pop
negb
jl
adcb
loopne
fwait
add
xor
ret
jo
pop
add
sbb
mov
daa
jg
add
aaa
js
cmp
dec
push
cltd
mov
ret
jle
dec
cld
jg
inc
std
mov
es
aam
adc
ss
out
fistpll
pop
adc
mov
add
popa
in
push
sbb
repz
mov
ret
jns
addb
fdivl
in
sub
adc
ror
js
xchg
pusha
cmp
xchg
cmc
dec
lods
rorb
sbb
sub
pop
imul
inc
loopne
mov
and
insb
lods
pop
scas
shlb
mov
push
or
push
les
adc
lcall
pop
sbbl
repnz
les
fdivrl
lret
cmp
lcall
das
cwtl
mov
dec
imul
sarb
mov
addl
iret
fwait
mov
push
movsb
test
push
sub
mov
lds
lahf
jo
pop
out
adc
hlt
dec
add
subl
push
dec
ficomps
mov
mov
sbb
jg
mov
adc
mov
rep
pop
fldt
in
icebp
sbb
inc
sbb
and
and
mov
insl
push
add
adc
jp
cmpsl
push
push
int3
js
out
push
or
fldl
pop
jne
ljmp
loopne
xchg
test
dec
adc
cmp
ficomps
movsl
out
xchg
sub
mov
pop
inc
sti
es
push
jl
addr16
mov
add
in
sub
adc
int3
push
imul
test
or
dec
inc
or
frstor
inc
loop
pop
loope
sbb
push
shl
ljmp
or
ss
xchg
pop
adc
outsb
imul
sub
outsb
mov
insb
lods
mov
mov
xchg
push
dec
cli
js
clc
in
les
mov
into
push
lods
out
sub
out
out
dec
in
inc
jl
dec
rorl
mov
ror
shll
out
mov
mov
dec
outsb
jmp
mov
mov
in
les
icebp
hlt
mov
push
mov
cmpsb
icebp
adc
push
sbb
mov
jbe
lods
ret
xchg
jmp
bound
jg
mov
dec
jmp
lret
and
mov
push
ss
inc
jbe
notb
adc
out
jb
pop
loope
daa
and
and
enter
out
or
pop
xor
enter
xor
cli
fisttps
decl
lods
and
cli
dec
pop
push
mov
adc
ja
lods
or
dec
cmpsl
into
sbb
jb
cltd
pop
dec
lahf
std
sbb
push
dec
mov
mov
pop
in
stos
outsl
call
bound
mov
push
pushf
mov
test
dec
test
mov
test
fprem1
mov
push
adc
and
scas
test
orb
xor
outsb
pop
dec
jge
and
pop
push
jecxz
ljmp
mov
fdivp
hlt
fwait
sbb
ljmp
mov
scas
inc
fistl
pushl
xor
out
decl
loopne
mov
js
out
hlt
xchg
or
mov
jge
repnz
lret
adc
mov
xchg
adc
add
cmc
or
in
loope
mov
add
iret
insb
sbb
imul
dec
aad
push
push
mov
dec
fdivs
loope
push
push
ljmp
aad
clc
adc
sub
flds
lods
fldt
xchg
out
push
jecxz
nop
cmp
fdiv
xor
popa
jae
leave
cmpl
into
lods
dec
out
xor
dec
outsl
adc
and
cmp
mov
xlat
push
mov
inc
sbb
add
lods
jge
pop
push
jo
jne
and
rorb
mov
cmp
aas
scas
jmp
add
inc
jbe
and
scas
and
pop
ficoml
pop
add
inc
xor
mov
out
mov
repz
jp
ljmp
fstpl
insb
xchg
cmpsb
dec
xchg
aas
dec
adc
iret
pop
into
jnp
sbb
sarb
dec
mov
jle
lds
popf
stos
stc
xor
dec
stos
adc
stos
inc
push
add
push
shl
cmp
cltd
clc
pop
xchg
pusha
jne
push
ficompl
jmp
jbe
pop
cmp
cltd
and
outsb
mov
aad
fsts
mov
mov
loop
and
test
test
mov
push
popf
pop
scas
insb
sub
out
hlt
mov
data16
xchg
pop
out
je
or
push
push
mov
or
sar
adc
xor
sbbl
xchg
cmp
inc
mov
jecxz
je
ss
sub
outsb
push
jp
mov
pop
adc
lock
jnp
mov
orb
popf
pop
push
mov
inc
rorb
lret
add
pop
xor
mov
js
dec
xchg
jnp
jge
fiaddl
push
add
mov
adcb
push
pushf
dec
cs
pusha
cld
adc
hlt
pushf
dec
mov
ret
test
sbb
dec
xor
and
mov
dec
imul
dec
jne
xchg
pop
int3
mov
mov
xor
testb
and
dec
inc
xor
xchg
mov
jge
or
test
hlt
mov
pop
pop
mov
orl
out
push
negb
sub
ss
cmp
cmp
xor
mov
fcmove
fidivl
sbb
mov
fldt
xor
test
into
jg
xchg
sti
add
ds
loop
jbe
imul
push
lcall
or
mov
call
outsl
sbb
adc
jnp
jmp
pop
test
xchg
xchg
daa
jmp
cmp
popf
push
arpl
push
in
push
or
xchg
test
fadds
xor
mov
ljmp
xor
aam
in
pop
xchg
filds
push
pop
ret
test
pop
jnp
jmp
nop
out
fdivrl
aam
scas
cmc
xchg
pop
xor
mov
pop
push
clc
out
mov
xor
movsb
add
aad
ds
jne
and
mov
les
js
lods
mov
xor
in
sbb
cmp
shlb
aaa
sarb
sbb
mov
xor
push
cltd
lcall
rol
mov
push
pop
mov
add
sub
testl
inc
dec
xchg
push
lods
xchg
pop
lret
jmp
cmp
jne
push
adc
dec
add
lods
ss
jmp
lods
or
repnz
outsl
jp
sub
xor
cmp
xchg
dec
fnstenv
push
adc
and
pop
sbb
xor
popa
cmovnp
lcall
push
xchg
data16
stc
shlb
mov
test
mov
push
insb
xchg
xchg
pop
aad
dec
or
mov
cmp
dec
roll
sbb
shll
pop
rol
outsl
mov
dec
pop
int
push
in
jmp
lcall
sahf
fiaddl
mov
xor
fcmovb
push
or
out
push
xchg
lea
push
pop
mov
fidivl
add
xchg
rolb
imul
dec
gs
adc
stos
xchg
cs
or
out
push
addr16
jmp
push
aaa
arpl
aas
mov
jns
arpl
jecxz
pop
xchg
cmpsb
xor
jno
pop
test
xchg
stos
or
lret
jg
push
loop
out
push
mov
daa
fmull
pop
out
adc
jmp
test
out
mov
adcb
jnp
addr16
dec
scas
int3
cmc
mov
inc
sbb
jg
xor
ret
pop
cwtl
dec
shlb
mov
ja
js
popa
mov
inc
push
lea
ja
pop
xlat
adc
dec
dec
add
test
push
sbb
mov
cmp
push
jno
or
out
rorl
loope
call
call
aas
xor
xadd
xor
jae
dec
jg
shr
add
or
stos
push
rol
jne
mov
mov
jecxz
xchg
and
add
and
dec
dec
lret
pop
aad
inc
xchg
and
add
or
xor
scas
loope
mov
aam
jge
jp
mov
shl
in
repz
cmp
xchg
inc
adc
lods
inc
mov
mov
mov
aas
xor
sbb
lea
addr16
out
stos
cwtl
sbb
rcrb
lcall
pop
int3
xor
sbb
sbb
jp
into
test
pop
popa
loop
mov
sub
repnz
xchg
cmp
nop
inc
jbe
dec
in
inc
push
stc
mov
mov
cmpsb
es
sbb
pop
mov
daa
push
andl
mov
je
inc
mov
iret
aam
fidivrl
stc
cli
mov
fldcw
pop
int3
sub
imul
lahf
and
xor
shlb
rolb
push
mov
jno
stos
vpaddw
imul
jo
push
clc
jge
notb
or
rol
icebp
cmp
mov
sbb
addr16
xchg
loop
aad
aam
shr
fidivrl
rcl
loop
push
fdivl
clc
xchg
rclb
cltd
fstpt
push
and
add
into
cmpsl
inc
divb
outsl
test
arpl
daa
mov
mov
mov
ljmp
insb
mov
test
jae
fisubrs
ret
aad
nop
push
xchg
and
lods
xor
pop
add
jmp
aad
frstor
and
loopne
or
test
std
das
mov
sbb
lea
cmpsb
cmp
pop
inc
jo
jecxz
leave
icebp
push
shl
add
push
mov
pop
and
inc
push
pusha
push
xor
int3
adc
cmp
cli
or
adc
push
sti
mov
std
jge
xchg
push
dec
ret
outsb
xchg
popl
roll
fwait
std
mov
or
pop
sbb
data16
cmp
or
mov
and
adc
mov
adc
mov
fidivrs
repz
push
or
repnz
push
movsl
push
cli
aaa
in
add
and
dec
jmp
dec
lds
outsl
sbb
pop
dec
inc
adc
cltd
jp
and
sbb
daa
cmc
sub
sahf
js
push
mov
mov
in
or
popf
fidivs
mov
out
mov
outsb
in
push
add
fcmovne
sti
repz
mov
scas
out
mov
stos
out
fwait
je
cmp
lds
fwait
cltd
aaa
incl
add
xchg
and
rol
mov
sahf
inc
xor
cmp
jecxz
sbb
mov
mov
jbe
dec
sarb
repz
mov
stos
push
xchg
jmp
sti
fwait
jo
cwtl
mov
repz
movsb
nop
jp
mov
mov
rorl
inc
sbb
mov
mov
adc
xor
lret
inc
popf
mov
adc
mov
in
pop
xor
test
sbb
sbb
mov
negl
jl
jno
js
ja
pop
inc
leave
push
and
andb
ret
mov
es
xchg
nop
psrld
mov
into
mov
jl
mov
in
sbb
clc
inc
add
cwtl
pusha
mov
adc
pop
in
mov
adcl
and
in
push
xchg
cltd
adc
leave
in
lcall
movsb
add
mov
call
lret
jbe
mov
or
adc
xlat
ret
mov
or
dec
mov
lret
je
push
cld
mov
aas
dec
and
sub
aaa
sub
lret
mov
cli
cld
cmpl
data16
ds
insb
adcb
loop
xor
flds
xor
mov
push
mov
push
or
enter
dec
dec
std
cmc
push
cwtl
jg
fisubrl
lods
inc
jl
test
mov
adc
xchg
popf
lret
popf
xchg
jo
xor
xlat
push
cmc
cwtl
rcl
pop
pusha
xchg
je
and
sbb
adc
jno,pt
xor
mov
into
push
xor
mov
and
fbld
xor
xchg
nop
insl
push
mov
fnstsw
ja
mov
rcrl
repnz
mov
fs
inc
cwtl
pop
leave
cmpsl
mov
push
fisubrs
inc
loop
test
lret
enter
pop
insb
jns
cmp
or
rcrb
adcb
cli
jmp
push
loopne
sbb
repnz
xor
mov
ret
push
dec
or
pop
cld
fwait
jb,pn
ret
cmp
iret
mov
or
out
repz
mov
mov
and
addr16
dec
mov
jl
outsl
dec
aas
aad
cmpsb
outsb
mov
jne
and
call
cs
and
xchg
adc
push
pop
cltd
loope
push
shll
insb
xor
arpl
inc
mov
das
pop
adc
jle
mov
data16
fdivrl
sarl
sub
andb
popa
inc
loope
subl
popa
ret
dec
xor
insb
add
les
ss
and
mov
push
or
lcall
aas
imul
cmpsl
sbb
sub
icebp
inc
out
cmp
andl
mov
lods
enter
movsb
test
pop
pushf
xchg
fidivl
pop
inc
loopne
fs
push
repz
add
std
mov
mov
jle
call
cltd
ret
and
cmovg
add
bnd
sahf
je
je
notb
pop
mov
inc
fwait
cltd
cmc
mov
outsl
mov
mov
js
mov
inc
jl
jge
sarb
mov
cmp
lea
enter
xor
fisttpll
std
movsb
cmp
xchg
push
mov
mov
mov
push
jne
mov
lret
mov
lock
stos
scas
inc
xor
push
aas
fucom
mov
mov
rorb
sarb
stc
push
nop
test
pop
and
ret
cmp
xchg
into
addr16
sub
sbb
mov
mov
cmp
cmc
inc
sub
adc
add
inc
fs
adc
insl
jg
addb
sbb
jp
dec
cmp
jge
pop
mov
dec
and
addb
inc
lahf
out
lds
mov
jnp
shl
mov
hlt
jne
fldl
lods
or
std
scas
xchg
pop
sti
pop
jne
pop
outsl
mov
xchg
jmp
fdivl
jge
icebp
mov
mov
faddl
idivl
adc
xor
mov
or
rolb
sub
or
imull
mov
gs
cld
mov
or
mov
push
dec
mov
iret
scas
mov
adc
outsb
sub
xchg
sub
add
or
xchg
xor
popa
dec
pop
out
pop
mov
and
xor
xchg
push
push
in
mov
mov
fcomps
push
sahf
cmpl
mov
and
leave
mov
cmpsb
lcall
in
enter
pmulhuw
out
dec
les
leave
cmp
aas
or
enter
dec
mov
mov
cmpsl
adc
push
xchg
lahf
or
shrb
pop
dec
test
rclb
adc
test
pop
in
push
add
xor
lcall
daa
in
xchg
ss
lds
inc
inc
mov
dec
xorl
mov
jbe
adc
iret
divl
test
mov
aam
jns
mov
test
push
ds
fwait
inc
pushf
sub
test
sub
jge
jns
jbe
xchg
mov
shrl
ds
sub
push
cwtl
mov
into
fiadds
cltd
ja
dec
mov
movsl
adc
xchg
cmc
je
test
lahf
push
xchg
pop
xlat
xor
lock
add
outsb
sti
mov
inc
and
add
or
inc
dec
and
filds
cmp
fbstp
jbe
or
hlt
loop
lahf
pushl
sti
add
imul
flds
pushf
mov
fninit
clc
and
jae
cmc
mov
andb
cmp
popf
lods
adc
dec
pop
lds
mov
lods
mov
nop
pop
stos
jp
or
scas
cmp
mov
lcall
cmp
nop
imul
clc
pop
out
outsl
fwait
jb
iret
jne
xor
fs
push
fadd
dec
and
dec
and
test
xchg
shlb
stos
fmull
ret
out
adc
sub
push
mov
std
xor
cmpsl
cmpsl
gs
mov
push
sahf
ret
fistpl
movsl
das
cmp
mov
push
arpl
cmp
fildl
jge
dec
cltd
insb
bound
cli
iret
jmp
add
mov
ja
fisubrs
sbb
cmp
and
and
cltd
pushf
xchg
sbb
jmp
push
das
jae
pop
pop
sub
cmp
je
pushf
int3
dec
xlat
sub
mov
iret
mov
pushf
pop
mov
and
mov
xor
in
add
add
fcoms
sbb
jmp
xchg
jge
in
cmp
push
sbb
stos
sbb
int3
jne
dec
pop
inc
sub
std
ret
cltd
ljmp
sub
dec
aam
mov
mov
jecxz
push
stos
cwtl
add
outsl
xor
xchg
cmp
cwtl
mov
jp
imul
sbb
imul
sbb
sbb
xchg
dec
ljmp
aaa
and
inc
outsb
ret
fbstp
gs
fisttps
jmp
data16
aam
cwtl
ret
pop
loopne
es
sub
andl
je
addr16
insb
add
mov
xlat
outsl
push
stos
ja
rcrb
adc
addr16
jno
mov
test
jo
mov
and
das
movsl
aaa
popf
sbb
xchg
ret
scas
inc
lods
pop
xor
sbb
stos
test
pop
inc
cmp
inc
dec
bound
jecxz
mov
or
inc
jae
stos
inc
fxtract
jo
cmc
add
xor
insb
out
inc
mov
mov
outsl
mov
nop
sub
inc
dec
repnz
jp
inc
stc
call
and
cmpsb
outsl
push
lods
add
fidivs
push
imul
or
and
insl
call
or
js
in
sub
pusha
xchg
andb
pop
out
jb
xchg
inc
lds
push
ja
lock
mov
jb
jp
test
std
mov
sbb
push
int3
mov
mov
aaa
inc
bound
adc
xor
sub
or
cmp
xchg
push
adc
pushf
mov
stc
xlat
and
pop
in
mov
inc
ss
fdivs
mov
and
sahf
push
aad
out
pop
and
fsubr
addr16
jg
in
cmp
cmc
and
cwtl
xchg
jl
push
dec
mov
jg
pop
jp
cmp
push
or
lds
add
jmp
imul
mov
add
mov
arpl
int3
mov
aas
in
mov
or
stos
sbb
inc
mov
iret
shl
cmp
sti
aam
and
in
cmp
xchg
push
pop
adc
cmpsl
cs
sub
dec
jmp
sbb
push
repz
fwait
mov
mov
jno
mov
cwtl
inc
dec
scas
jb
push
pop
les
push
mov
mov
dec
and
sahf
sbb
sub
push
repnz
int
sbb
dec
loopne
arpl
inc
bound
pop
clc
into
out
cmp
jbe
test
cmp
mov
sti
push
ret
inc
xchg
cld
hlt
mov
fnstcw
stos
in
int
outsl
daa
adc
repnz
ret
fldcw
popa
jg
push
movsb
xor
sbb
imul
iret
arpl
lcall
dec
or
lods
mov
stc
mov
push
mov
int
test
hlt
fnstenv
das
call
js
mov
pop
and
push
mov
sub
call
setb
das
mov
mov
cltd
mov
fwait
mov
ret
xchg
jae
mov
pop
mov
and
mov
les
out
hlt
jo
mov
scas
inc
call
aam
mov
lds
push
popa
adc
scas
fcomps
lret
or
aas
push
fwait
ret
mov
mov
mov
rcll
scas
dec
jecxz
add
inc
out
lcall
bound
mov
push
in
sbb
sahf
and
xor
repz
xchg
loope
stos
xor
mov
enter
xchg
nop
jmp
dec
pop
mov
mov
sbb
sahf
cmp
repz
lret
addr16
xor
push
adc
les
sub
mov
add
jp
mov
mov
stc
inc
cld
cmp
jmp
and
cmp
test
mov
inc
idivl
fs
fdivr
cmp
int3
jo
jnp
xor
aam
mov
pop
fcoms
into
push
sub
jg
and
pop
or
cmc
xchg
and
jb
cmpsl
arpl
andl
push
shlb
lret
dec
mov
cmp
pop
or
push
loop,pt
mov
fistpll
jno
out
insl
movb
jb
les
jg
pop
xorl
jle
shl
jmp
mov
sub
xor
sbb
mov
lcall
data16
add
loop
fmuls
cmpsb
mov
jae
xchg
cmc
rorl
imul
or
inc
mul
lock
mov
loop
insl
test
rorb
fistpl
adc
int3
mov
gs
inc
es
enter
jmp
sbb
nop
and
push
fistpll
ss
cmp
sub
shlb
and
or
lcall
cmp
push
cmp
adc
punpckhdq
pop
fs
adc
adc
mov
sub
xchg
sbb
ja
js
mov
fwait
das
mov
int
add
mov
lds
bound
ficompl
xchg
int3
sub
or
adc
inc
and
mov
movsl
pop
inc
sub
inc
shrb
adc
movzbl
scas
in
sub
push
mov
shr
js
inc
jge
sbb
lock
jp
add
and
xor
push
sbb
add
sbb
pop
bound
sbb
iret
xor
rcrb
test
pop
aaa
ja
clc
loopne
add
fs
mov
adc
and
and
outsl
bnd
rcr
or
cwtl
fdivp
push
call
daa
pop
jne
mov
loope
call
or
xchg
jo
lcall
fbstp
jmp
in
loopne
ds
dec
mov
adc
xchg
add
sar
dec
jns
sarb
xor
ss
loope
inc
adc
xchg
mov
cmp
mov
aam
xchg
jge
mov
pop
jo
sub
push
sub
rorl
lcall
je
and
mov
stc
sub
mov
sub
bound
imul
enter
push
push
dec
setns
aam
mov
push
insb
aad
pop
adc
into
loop
ss
call
daa
fwait
dec
mov
imul
stc
shrb
call
stc
sub
push
sub
cmpsb
lcall
lea
jge
dec
aaa
ss
add
and
ss
dec
insb
div
js
out
push
testl
in
ja
xchg
add
ffree
inc
mov
push
mov
sar
push
mov
lea
outsl
xchg
popl
lods
cltd
insb
dec
rorb
or
or
popf
mov
mov
lahf
in
out
mov
ss
pop
push
sub
nop
fs
movsb
ljmp
jmp
cmp
xor
lahf
xchg
xor
add
pop
jmp
add
adc
hlt
sbb
out
inc
sub
test
push
pop
mov
dec
cli
cmc
loop
dec
add
outsb
test
je
or
pusha
arpl
insb
pop
rcrl
aam
add
mov
lret
sub
xor
cli
pop
lock
pop
stos
and
shl
or
mov
push
in
pop
sub
pop
bound
adc
orb
inc
adc
ret
cmp
mov
insl
fcomps
test
push
mov
sti
cmp
adc
jbe
mov
in
std
add
or
clc
aaa
xor
inc
add
and
ret
aam
mov
pop
lods
mov
and
loopne
xor
mov
push
xchg
je
jb
xor
dec
sbb
movl
xchg
push
cmp
xor
and
arpl
jno
and
push
pop
rorb
out
xchg
outsb
or
out
std
inc
push
cmp
out
or
xchg
repnz
push
in
aam
les
movsl
jl
jo
mov
rcrl
inc
push
fisttpll
xor
outsl
dec
add
xor
das
gs
dec
iret
xor
mov
movsl
sbbl
push
sbb
shll
leave
cmc
lahf
adc
jne
daa
outsb
ret
mov
test
jge
imul
imul
std
and
mov
shld
xor
hlt
into
push
scas
pop
enter
inc
insl
add
daa
sub
addr16
add
sbb
shlb
cmp
sbb
xchg
cmp
push
mov
enter
add
dec
sub
sub
xor
inc
test
stos
or
out
xchg
push
dec
pop
dec
adc
mov
enter
cltd
mov
mov
dec
push
and
ss
push
iret
fsubl
pop
push
add
inc
arpl
jecxz
dec
clc
jecxz
ds
lds
dec
fsts
and
dec
int
or
xchg
lock
inc
mov
adc
pop
pushf
jecxz
mov
xor
daa
jg
inc
mov
mov
and
in
dec
movsl
xor
lock
jae
xorl
jno
xor
inc
xchg
into
pushf
pushl
in
fimuls
bound
call
cmp
ficompl
jl
push
stc
adc
cmpsl
xchg
movsl
mov
scas
pop
in
rorl
add
add
notb
repnz
jecxz
mov
popa
cmp
mulb
loop
orl
fimull
push
inc
sub
sub
cmp
out
movsb
fmull
fisubrs
and
dec
negl
and
and
sbb
enter
mov
add
popf
sub
or
ret
js
mov
jl
jmp
imul
mov
mov
psrlw
cmpb
out
int3
test
mov
pop
ret
int3
mov
sub
jnp
xor
add
xchg
jae
rcll
ret
imul
pusha
and
push
or
int
lds
xchg
out
sbb
pop
ret
mov
prefetch
or
or
jp
adc
sarl
ljmp
jbe
roll
push
lcall
add
mov
clc
push
pop
mov
mov
pop
dec
je
mov
addr16
outsl
xor
stos
push
cmpsb
call
push
cmpsb
push
jp
cmpsl
jno
sbb
out
inc
movsl
fwait
popf
test
push
daa
sub
ret
jns
dec
mov
mov
call
cwtl
in
incl
sub
dec
jno
sub
add
int
xchg
inc
call
pop
inc
ljmp
out
add
pop
and
xchg
sbb
xchg
and
mov
shll
es
int3
test
jae
sub
popa
cmp
push
out
lcall
or
mov
fs
sub
sbb
insl
pop
pop
sub
out
mov
cmp
out
shll
stos
push
xchg
jecxz
adcb
aam
in
dec
or
lds
pop
cmp
mov
popa
sbb
data16
scas
mov
ljmp
lock
psubw
add
push
adc
imul
inc
cmp
lret
aam
gs
aas
stos
push
out
cmp
cmpsl
enter
sbb
int3
aas
scas
or
pop
jne
jge
and
jnp
push
add
in
adc
sub
loop
cmp
ret
jno
sbb
xchg
outsb
mov
sbb
ljmp
dec
mov
pop
xor
sub
xchg
inc
and
cltd
out
sbbb
push
lock
out
lret
es
xor
xor
pop
movsl
ret
pop
add
test
add
aam
cmp
stos
pop
mov
or
pop
fs
call
sub
fnsave
cltd
jnp
or
mov
rcr
ret
enter
fisttpll
bound
aaa
jmp
xchg
dec
imul
outsl
or
adcl
popa
and
adc
push
cmp
push
cmp
dec
sbb
adc
mov
mov
jae
mov
push
jmp
dec
cwtl
fidivl
into
mov
adc
pusha
jp
xchg
push
nop
add
jne
inc
shll
add
repz
out
pop
sbb
cmpsb
fs
mov
push
repz
scas
std
push
subl
in
inc
stos
dec
push
fneni(8087
adc
imul
jnp
inc
clc
ret
aam
mov
lea
xor
pop
sub
into
mov
cld
inc
xor
in
std
mov
es
in
cmp
pusha
sahf
push
out
pop
lods
add
push
lcall
in
jl
cmp
jno
dec
push
test
add
lds
fldcw
mov
in
push
add
lret
rep
mov
out
or
mov
xchg
cltd
sahf
enter
mov
sti
push
pop
pop
pop
jne
mov
xchg
into
xchg
arpl
pop
jnp
jecxz
loope
jmp
fdivrl
ss
ja
add
das
adc
cmpl
clc
adc
out
scas
bound
xchg
add
imul
cmp
and
mov
testb
pop
pop
cmpsb
push
icebp
or
xor
fldl
sbb
jl
dec
inc
cmp
mov
int3
xor
enter
sahf
fwait
rcrl
scas
jle
int
in
lcall
mov
shll
xchg
and
mov
clc
lahf
ja
enter
das
and
outsl
xchg
dec
leave
rcrb
push
mov
sub
fld
add
pop
movb
xchg
sub
mov
adc
push
jnp
mov
jmp
mov
push
cwtl
mov
jp
movsb
or
dec
inc
adc
pop
lock
fistps
cmpsl
adc
movl
xor
dec
inc
pop
jbe
ds
mov
cmp
stc
or
std
jns
ds
xlat
xor
dec
mov
mov
mov
fs
dec
cmp
stos
mov
mov
sub
mov
clc
ja
outsl
addr16
fnstenv
lods
inc
adc
or
or
jge
lea
adc
pop
mov
loope
pop
mov
xor
out
add
sub
mov
adc
mov
dec
mov
out
mov
push
test
ja
repz
es
lods
lods
push
push
das
push
or
sub
jae
leave
adc
bound
push
fdivrs
and
int3
pop
push
pop
jae
cmp
inc
mov
dec
push
mov
cmp
fisttpll
sub
nop
jmp
adc
stc
mov
dec
cmp
xchg
ljmp
aam
dec
or
push
mov
in
mov
insl
cwtl
andl
cmpl
lret
ret
rorb
imul
das
sbbb
popa
mov
cli
xchg
push
aaa
nop
dec
movsl
cmp
mov
jbe
cli
push
or
aas
dec
out
popa
test
dec
adc
inc
add
mov
clc
push
subb
shll
int
mov
dec
mov
inc
repz
mov
negl
ljmp
jg
sahf
pop
sub
aas
pop
ljmp
inc
test
mov
and
fwait
mov
stos
sbb
loop
adc
cmp
jbe
loope
push
pop
cmc
pop
pavgb
adc
dec
xchg
test
hlt
xchg
test
mov
ret
mov
leave
dec
jmp
call
shlb
not
scas
inc
dec
insb
cmp
lahf
fbstp
rorb
cmpsb
or
daa
fninit
cmc
and
add
aas
sbb
ja
mov
int3
jb
adc
xor
shlb
outsb
nop
xchg
scas
les
jmp
xchg
jmp
cmc
scas
sub
dec
ljmp
jnp
stos
ja
dec
xor
ret
push
mov
xor
arpl
in
mov
stc
fisubrl
inc
adc
pop
sbb
int3
mov
addb
lea
pop
jno
jne
out
roll
int
mov
jg
add
pushl
clc
repz
mov
mov
fsubs
ret
rolb
aas
adc
sbb
cltd
and
pop
int3
aam
test
mov
andb
jl
inc
add
idiv
or
subl
cmp
add
and
loop
fcmovu
int
out
lcall
ds
mov
push
mov
xor
jecxz
subb
or
cmpsb
push
xlat
fs
push
je
pop
rolb
add
sti
js
bound
jge
and
push
and
leave
add
gs
sbb
repnz
fstl
loope
xor
jp
shl
jbe
sti
xchg
cmp
or
loope
ss
push
mov
pop
jno
cltd
pop
call
scas
cmp
or
pop
nop
jmp
pusha
test
cmp
in
cmp
jp
outsb
cmpsl
cli
sahf
out
mov
imul
enter
and
fistpl
adc
mov
faddl
mov
jae
add
jno
adc
cmp
imul
popa
orb
shl
push
xor
faddp
adc
in
int3
pop
adc
cld
notl
mov
out
pusha
ss
cmp
dec
mov
push
into
adc
adc
mov
fisttps
inc
lahf
mov
out
arpl
pop
dec
sub
test
sub
addr16
in
lock
and
mov
xor
inc
jne
jb
pusha
pop
sbbb
fistl
push
insb
inc
mov
push
ljmp
lea
pop
pusha
lret
jno
test
imul
sbb
addr16
xchg
lret
and
aad
stos
jmp
testl
jne
pop
mov
iret
mov
lods
push
adc
mov
jge
inc
jns
insl
aas
lret
jmp
cmp
jae
popa
cli
shlb
jne
add
test
mov
sub
mov
in
adc
inc
xchg
push
test
sbb
cmc
dec
ret
pop
push
insb
rcrl
pop
jo
push
mov
mov
dec
cwtl
sub
pop
sbb
jecxz
xlat
pop
mov
fdivr
in
xchg
subb
push
push
inc
pop
dec
mov
jae
push
aas
icebp
cmp
sub
aas
cmp
test
mov
mov
cmpb
adc
cli
cmp
lea
gs
push
int
daa
mov
inc
popa
xchg
lods
std
mov
mov
push
adc
pop
inc
mov
std
dec
and
push
shrl
sbb
inc
leave
xlat
imul
dec
dec
adc
jp
sub
pop
xchg
icebp
pop
xor
bound
xchg
incb
pop
mov
mov
xchg
cmc
push
hlt
in
mov
xchg
inc
fwait
add
push
add
cs
and
shr
mov
mov
fisttpll
sbb
popa
xchg
xchg
mov
adc
xlat
and
xor
dec
ss
sahf
dec
jg
inc
lods
testb
add
fistps
test
ret
aaa
adc
movsl
std
xchg
cmpsb
fsubs
scas
pop
fs
fcos
jl,pt
xchg
dec
je
inc
aad
push
mov
icebp
dec
jno
jns
fwait
aam
dec
sub
iret
pop
xchg
arpl
fsubl
cwtl
mov
in
adc
mov
insb
add
xchg
xchg
jne
in
mov
jb
imul
pop
popa
jae
mov
jo
inc
cmc
movsl
test
js
mov
sti
outsl
pusha
shlb
push
les
icebp
fcompl
insl
adc
fidivl
scas
incl
jle
xchg
insl
test
lret
aam
std
xor
cmp
test
push
jle
add
and
lcall
aaa
sbbl
shrb
leave
dec
sbb
clc
pop
rclb
push
je
add
push
sbb
repnz
mov
sub
loope
dec
jns
jle
cmc
pop
pop
out
aad
pop
push
push
scas
adc
cmp
aam
gs
test
xchg
sbb
enter
cmp
push
jbe
or
adc
add
fwait
mov
insl
imul
out
push
js
push
jno
or
jo
sbb
cli
in
cwtl
jo
movsl
ficoml
stos
xor
lds
sub
inc
adc
sub
movsl
ds
mov
popl
dec
and
mov
mov
and
cmpsl
xchg
sbb
out
loope
and
mov
and
mov
in
mov
push
lods
enter
jno
mov
pop
mov
sub
xor
or
push
mov
int
inc
mov
std
xor
jne
pop
aaa
jno
inc
pop
out
push
test
push
cmp
push
int3
push
and
mov
mov
js
test
scas
mov
loop
jns
sti
inc
rclb
jge
cmp
shrl
add
mov
scas
push
inc
insl
int
ret
ja
icebp
out
pop
xor
add
dec
inc
jle
lea
sub
push
jb
xchg
popa
jo
dec
mov
mov
bound
test
cltd
pop
xorb
loope
scas
loopne
aaa
mov
adc
ficompl
fisttps
mov
jno
jg
shrb
es
adcl
cmp
sub
adc
xchg
lea
mov
jg
jge
push
sahf
fisttpll
jo
rcll
xor
xor
xchg
mov
sbb
jl
lods
pop
into
inc
sub
repz
cmp
mov
xchg
testl
lds
outsl
lods
gs
lret
movsb
rcr
outsb
adc
test
sbb
nop
je
push
xchg
inc
xor
lahf
push
mov
pop
push
fcompl
stos
pop
ret
repz
insb
add
lods
faddl
mov
fmulp
stos
dec
fsubl
lret
movsl
cmp
dec
popa
repz
icebp
pop
pop
lea
sarb
pop
loope
movsl
js
xchg
mov
fxch
cmp
push
push
aas
pop
push
in
jne
jg
jg
and
lds
or
fisubs
cltd
dec
in
mov
or
jge
mov
popw
inc
xor
and
xlat
cwtl
loop
inc
call
movsb
and
out
xor
orl
xor
xchg
data16
jno
loopne
cli
leave
jb
xchg
dec
xchg
sti
pop
aaa
repz
mov
cmpsl
insb
mov
jle
and
cs
xor
inc
call
adc
sub
xchg
ror
push
xchg
call
fnstenv
push
cwtl
cmc
mov
out
inc
outsb
inc
xor
lods
filds
add
dec
push
jecxz
jge
scas
xchg
mov
stos
mov
sti
or
data16
dec
sub
jg
mov
and
movsl
es
cld
jnp
lea
push
into
aas
ficoms
fidivrs
mov
push
hlt
push
pusha
sbb
out
popf
push
int
jo
aad
mov
out
mov
stos
test
mov
out
adc
sbb
addr16
mov
or
cmpsl
icebp
add
cli
mov
or
adc
sbb
xchg
xchg
jns
mov
xor
dec
addr16
pushf
fwait
mov
fsubr
xor
pop
addr16
pop
lock
in
jo
fwait
test
insb
rcr
cld
sbb
push
inc
pop
leave
aaa
xor
mov
bound
in
xlat
movsb
in
cli
xchg
divb
lods
push
subb
mov
jmp
pusha
and
and
sarb
subb
int3
xchg
fsincos
mov
imul
ja,pn
sub
pop
js
test
mov
xor
jecxz
into
xchg
add
out
repnz
idivl
mov
in
cmp
shrl
insb
add
xchg
fmul
dec
stos
xchg
xchg
mov
adc
cmp
inc
sbb
in
lods
movsl
lahf
je
lahf
data16
mov
inc
cs
sub
dec
outsb
loopne
inc
es
les
dec
js
outsl
dec
stos
xchg
cmpsb
arpl
push
mov
or
ss
dec
lods
xor
dec
movsb
or
push
adc
addr16
dec
fistpll
nop
jge
in
movsb
push
xor
xchg
test
cld
xchg
fpatan
fdivp
insl
add
jl
fistpl
ljmp
jae
jmp
mov
adc
out
iret
popa
push
fistpl
in
adcl
pop
sbb
push
int
sbb
imul
test
sub
lock
mov
inc
jp
arpl
bound
leave
sahf
jne
sbb
mov
fwait
rcll
sbb
inc
fwait
insl
lea
adc
and
cmp
mov
ret
repnz
pop
mov
push
negb
out
dec
xchg
cmc
and
jbe
inc
push
mov
test
xchg
xor
testb
pusha
pop
loopne
cmpsl
jae
sbb
pop
popf
lock
jge
sub
jl
call
push
dec
sbb
fsubl
add
or
stos
xchg
cli
lea
mov
cmc
fdivl
out
sti
pop
shlb
inc
xorb
sub
adc
and
add
jne
repnz
mov
push
xor
ret
mov
scas
lcall
testb
and
inc
arpl
sbb
xchg
js
data16
xor
pop
lea
inc
sbb
aaa
sub
xor
add
loopne
ljmp
bound
addr16
push
jle
pop
xor
loopne
mov
cltd
dec
push
xor
xchg
jp
pop
xor
pop
lahf
mov
cltd
in
push
dec
xchg
and
divl
stos
xchg
mov
sub
xchg
in
inc
jnp
sbb
cmp
inc
xchg
dec
imul
sarl
ret
out
movsl
ucomiss
or
xchg
stos
push
xor
cmovle
dec
stos
dec
sub
jb
lret
dec
dec
add
adc
fsincos
pop
xchg
push
ret
xchg
stos
sub
std
mov
sbbl
add
jle
rcrl
or
xchg
or
sbb
out
xor
or
push
jp
mov
iret
inc
ljmp
or
sbb
or
push
lods
inc
adc
mov
mov
mov
push
jb
and
decl
test
pop
add
or
lret
stc
ja
into
idivb
fdivs
out
sbb
jo
fwait
push
sbb
xchg
out
fcoml
in
test
cld
jp
mov
mov
jp
incb
sub
pop
int
enter
sbb
movsl
enter
loopne
push
pop
scas
mov
mov
lret
je
xor
adc
mov
sbb
loope
push
and
out
pop
push
out
or
fcoms
stc
add
daa
or
flds
sub
das
daa
pop
mov
adc
nop
out
cli
roll
loop
mov
push
and
mov
add
or
loop
inc
sub
jg
mov
push
inc
sti
loope
inc
aam
aaa
ret
push
cmp
sbb
xchg
mov
mov
out
xchg
mov
shrl
or
xchg
or
fsubs
xchg
sti
fwait
pop
loopne
adc
dec
rcrl
ss
movsl
jnp
jnp
inc
sub
mov
or
insl
std
fbld
sti
cmpsl
add
std
cmp
sub
mov
inc
test
jae
or
jb
ret
adc
push
ret
ljmp
mov
add
mov
mov
jge
jmp
ljmp
xor
stos
add
and
mov
mov
push
adc
push
xchg
adcl
out
pop
or
cwtl
sti
inc
sub
mov
sbb
sub
enter
push
cmc
lcall
mov
movsb
adcl
pavgb
cmpsl
repz
sbb
mov
call
xor
shlb
aas
and
lods
push
std
lcall
sbb
daa
fidivs
movsl
dec
sarb
subl
out
je
or
jmp
sti
dec
mov
xchg
mov
or
and
mov
cmp
mov
fdivrs
imul
mov
imul
ljmp
mov
sub
pop
dec
mov
aad
sub
cmp
xlat
fwait
xchg
lret
loope
lahf
add
push
dec
into
rcr
jp
fistps
jecxz
add
insl
jbe
gs
outsb
or
dec
xchg
dec
push
insl
orb
add
inc
push
and
adc
add
xlat
xchg
xor
jae
cmpl
pop
lea
xchg
repz
push
push
inc
xor
fldcw
mov
int3
jnp
ja
push
movsl
mov
ficoms
pop
popa
imul
ja
test
data16
stos
test
add
in
nop
mov
and
fistpll
push
scas
xlat
fwait
stc
push
je
shl
jl
scas
out
and
lods
dec
scas
sbb
sbb
fisttps
scas
lods
loope
cli
std
ljmp
dec
mov
es
cmpsb
jo
adc
or
cld
mov
push
push
push
out
es
xor
pop
ret
imul
xlat
push
xchg
cmp
in
enter
decl
test
mov
sub
addr16
push
subl
dec
adc
xchg
pop
and
fsubrl
push
dec
sbb
out
inc
dec
int
das
fs
sbb
or
mov
mov
aas
cmp
pop
mov
push
jp
jnp
sbbb
mov
cmpl
jle
mov
mov
mov
loope
pop
or
pop
dec
insb
sbb
push
sub
pop
mov
loopne
lds
stc
pop
fcomi
mov
jne
add
outsb
dec
cmc
inc
pop
push
sub
mov
insb
xorb
fstps
subl
int3
in
mov
inc
mov
or
dec
or
movsb
cmpsl
mov
ja
jo
pop
repz
or
in
adc
cmpsb
dec
aam
add
mov
add
out
out
mov
pop
pop
xchg
lret
mov
pusha
into
sti
outsb
dec
popa
xor
dec
pop
daa
aaa
cmpsl
push
jo
out
in
stos
insb
cli
rcll
inc
sub
test
inc
dec
or
insb
add
shlb
sub
add
adc
jg
adc
jl
push
lock
inc
shlb
ret
iret
loop
pop
mov
arpl
pop
pop
jb
inc
sub
jnp
sub
cli
shll
pop
idiv
cmp
popa
mov
stc
jae
pop
and
mov
push
and
mov
rcll
dec
push
dec
loopne
add
pop
call
in
mov
nop
xchg
popa
mov
xor
lcall
mov
fistpll
dec
sbb
push
jno
sahf
inc
aam
imul
and
jecxz
mov
jo
xlat
sbb
mov
ret
call
push
imul
sub
jo
adc
test
inc
imul
and
nop
and
mov
addr16
les
dec
sbb
rol
mov
stos
testl
cbtw
scas
mov
jl
jae
sti
lret
sbb
push
bound
xchg
mov
dec
jge
and
xchg
push
fbld
xor
fnstsw
leave
inc
mov
sub
mov
sbb
push
lods
mov
xor
movsb
jmp
sahf
test
xlat
push
inc
adc
icebp
pop
sbb
and
cmp
mov
jge
sbbb
orb
sub
mov
and
pop
shlb
dec
mov
hlt
std
movsb
cli
push
xchg
mov
je
mov
mov
nop
or
mov
dec
scas
in
inc
pop
xchg
shll
imul
push
dec
sbb
jb
repnz
rcl
frstor
add
in
mov
jo
jns
mov
inc
add
push
add
add
mov
push
sbb
int3
data16
stos
push
inc
loopne
push
adc
inc
xor
ja
mov
sbb
sub
pop
and
ljmp
sbb
or
xlat
outsb
repnz
arpl
xchg
sbb
cmp
inc
sbb
outsb
pushf
mov
jnp
jbe
jle
sbb
imul
sub
push
inc
test
push
sub
lret
add
jbe
pop
pop
int3
lods
xor
xor
jns
xor
add
pop
enter
int
jl
jae
bound
in
std
popf
pop
mov
mov
and
adc
xor
movb
push
or
fisttps
jne
push
xchg
inc
mov
cmpsb
xchg
xor
in
cmpb
sbbb
shrb
das
fildll
cmpsl
mov
xchg
stos
shrl
in
inc
inc
sti
mov
scas
bound
add
pop
xchg
mov
xchg
jg
sahf
push
xchg
and
push
outsb
pop
sbb
fbld
adcl
dec
pop
out
std
test
inc
push
shll
inc
xchg
cltd
mov
pop
stc
mov
adc
inc
jae
dec
cwtl
pushf
push
fdivrs
push
mov
shl
mov
inc
test
fiadds
adc
inc
inc
nop
or
je
add
fcomip
cli
inc
add
pop
inc
mov
push
test
push
lret
test
pop
test
hlt
cmp
rclb
pushl
subl
push
lds
in
popf
ffree
lsl
adc
or
push
mov
dec
jmp
mov
cmpsl
mov
cmc
jl
sbbb
inc
sarb
test
int3
jl
pop
sub
andl
sbb
add
pop
jnp
or
pop
cwtl
jb
aas
loope
mov
fnstsw
loopne
leave
gs
rcrl
xchg
fdivrs
inc
pop
xchg
mov
lea
adc
xchg
fildl
arpl
lret
ds
gs
dec
cmp
and
cwtl
jp
or
pop
ret
iret
mov
rorl
fbstp
mov
call
call
mov
loopne
jl
xchg
xchg
sarb
mov
xor
inc
and
dec
dec
aad
pop
jne
icebp
loope
dec
insb
scas
mov
fisubs
shl
cs
cltd
pusha
cmp
jne
mov
cmp
arpl
xchg
into
enter
xor
daa
rclb
jecxz
sub
outsl
inc
out
push
xor
movsb
loopne
dec
loop
push
neg
outsb
jecxz
addb
pop
lcall
cwtl
scas
fldt
es
scas
bound
nop
xchg
and
out
dec
mov
inc
jo
or
ret
xor
stc
shlb
or
sub
decb
mov
xchg
ds
mov
pop
xchg
mov
pop
addr16
jge
imull
sbb
ret
xchg
xor
cltd
jne
lcall
lods
movsl
out
mov
adc
jns
cli
shll
adc
push
jge
jp
gs
mov
repnz
pop
push
arpl
inc
adc
or
mov
or
push
cld
repnz
jmp
and
pop
inc
cmc
adc
or
xchg
jecxz
movsb
lds
imul
adc
repnz
or
cwtl
imul
loop
jecxz
mov
mov
aas
in
inc
jno
popa
pop
cmp
pop
arpl
jbe
add
dec
aaa
rcrb
outsl
insl
or
aaa
je
iret
ss
xchg
enter
insl
repnz
out
mov
shll
cmpsl
or
mov
xor
mov
dec
cmc
ficoml
and
xchg
insb
pop
jb
xlat
cmc
shlb
dec
pop
test
mov
lock
mov
mov
fprem1
insl
adc
test
aas
and
insb
mov
jmp
jnp
mov
popa
es
ljmp
adc
push
xor
sti
add
mov
cld
jmp
out
out
fs
ljmp
addr16
leave
lods
jb
out
jb
mov
push
push
arpl
jmp
add
scas
repnz
ljmp
sbb
pop
in
mov
cltd
call
ja
or
or
clc
js
nop
movsb
cmp
adc
sub
adcb
sahf
cmp
lahf
popa
mov
sub
pushf
mov
pop
xor
lods
xor
mov
adc
or
movsl
cmp
in
push
push
dec
shlb
loopne
repnz
pop
pushf
lea
adc
and
or
loope
mov
ficoml
push
xchg
in
or
imul
xchg
movsb
js
pop
jbe
les
test
andb
js
push
cli
imul
dec
mov
subb
clc
divl
cmpsl
adc
or
mulb
cs
sbb
lea
popf
xor
test
movsb
and
sti
inc
add
daa
inc
les
xorl
cmpsl
inc
mov
pop
xor
jnp
lcall
pusha
pop
setnp
cmp
cwtd
out
sub
pop
sti
and
xorl
pop
pop
clc
xchg
mov
dec
sub
lds
fsubrl
add
pop
data16
sbb
out
sarb
call
dec
jg
mov
jbe
pop
pop
and
fdiv
pop
dec
lret
mov
dec
xchg
stos
aam
jb
stos
ss
cs
jbe
cwtl
push
push
cmpsb
adc
sbb
imul
loopne
ds
and
mov
sub
jp
jp
mov
in
xchg
aam
rol
or
jno
inc
int3
mov
pop
or
push
scas
int3
sub
rdpmc
dec
sub
loop
xchg
or
adc
out
test
out
aaa
mov
ljmp
clc
and
fisttpl
pop
mov
aad
cmp
inc
dec
dec
xlat
pop
jmp
jmp
sub
arpl
ret
pushf
decb
sahf
push
mov
outsb
jo
clc
cmp
mov
jnp
add
cli
mov
je
mov
adcl
repz
fisubrl
mov
jecxz
xchg
mov
xchg
popa
push
rcr
pop
sub
cmp
movsl
inc
push
cmp
sub
repnz
dec
out
jp
popa
cmc
call
aam
iret
jl
pop
lods
lods
paddsw
push
mov
mov
into
hlt
andb
mov
je
imul
out
add
xchg
insl
mov
or
lds
cwtl
daa
xchg
jge
jno
imul
push
sbb
sub
adc
push
push
pop
inc
cmpsl
out
mov
inc
and
and
lahf
out
lock
inc
and
es
mov
mov
cmp
clc
xor
inc
cmp
popf
sub
je
mov
mov
inc
cmp
cmp
add
xor
decb
pop
xchg
or
lret
inc
inc
sub
xchg
or
or
push
lds
iret
fst
loope
mov
mov
jg
adc
inc
out
mov
mov
es
movsl
repnz
bnd
outsb
xchg
pop
addr16
mov
or
jns
cwtl
xchg
mov
inc
shlb
add
jg
clc
pop
insl
das
push
mov
insb
sub
lods
jp
lods
cmp
dec
aas
adc
shlb
jecxz
jo
pop
sbb
mov
aam
and
and
mov
sub
push
sbb
or
ljmp
cmp
insb
movsb
jbe
divl
pop
aad
popf
push
cmc
adc
jg
neg
testb
jle
push
jo
es
xchg
pop
stos
dec
in
and
sahf
cmpsb
xchg
add
imul
cwtl
ja
std
sbb
cmp
xchg
push
cmp
xchg
out
xor
out
or
sbb
subl
imul
add
inc
js
stos
adc
xchg
bndldx
decb
adc
sti
aaa
loop
adc
jne
nop
mov
and
imul
je
dec
xchg
mov
hlt
pop
lret
mov
and
mov
notb
es
mov
adc
mov
xchg
fcmovnu
repnz
jno
mov
dec
push
fisubl
jnp
mov
mov
pop
popf
mov
test
mov
push
mov
jo
cld
sbb
mov
push
push
std
inc
xchg
imul
sbb
repz
mov
or
lods
outsl
mov
movsb
stos
dec
popf
sbb
push
adc
mov
subb
push
inc
stc
adc
repnz
popf
out
inc
pop
ja
addr16
aas
pop
fisttps
pop
outsl
cli
push
dec
dec
xchg
iret
loopne
pushf
aaa
dec
pop
movsl
xchg
sub
add
sub
lret
push
outsl
mov
mov
test
enter
mov
je
icebp
jbe
in
pop
sub
pop
mov
stos
mov
push
imul
fists
push
into
aaa
fs
mov
add
ds
mov
leave
fidivrs
adc
mov
insb
push
adc
sbb
js
mov
mov
mov
sbb
sub
and
divb
adc
and
in
or
out
clc
aam
jne
inc
gs
arpl
arpl
pop
cmpsl
or
xor
lret
or
fbstp
movsb
negl
cwtl
push
std
xor
mov
jnp
push
rclb
sub
arpl
dec
insb
mov
jns
inc
mov
cwtl
cltd
push
mov
call
and
xchg
fisttpll
shr
push
insb
mov
pusha
iret
fidivrl
push
ss
adc
xlat
mov
xor
mov
cs
cs
divl
gs
insb
mov
fildll
jbe
cmp
movsl
test
pop
scas
cmp
sbb
add
in
pushl
popa
sub
or
push
sub
or
les
jae
fimuls
dec
push
jne
roll
test
push
cmp
dec
ret
mov
in
into
xchg
out
push
mov
lods
popf
mov
dec
pop
lods
and
push
or
je
adc
fistpl
loop
call
sub
mov
cmc
out
daa
push
xchg
xor
int3
pop
cld
mov
dec
add
lods
pop
loop
ficomps
and
mov
leave
repz
mov
mov
or
test
andl
leave
mov
decl
sbb
pop
ja
xchg
pushf
out
cmp
push
inc
xor
mov
pop
and
adc
lret
push
sub
xchg
xlat
cltd
and
imul
movsb
in
add
inc
repz
int3
xchg
cwtl
inc
clc
mov
xchg
enter
pushf
das
pop
sahf
push
xchg
xor
fsts
loopne
out
leave
mull
mov
mov
push
and
loopne
mov
mov
push
popa
aaa
sbb
les
ja
pop
mov
outsb
sbb
dec
loope
cmc
mov
divb
pop
jmp
loop
fs
jne
or
push
xchg
xchg
subb
sbb
sub
lcall
add
ficoms
dec
sub
jb
gs
lret
repnz
dec
or
bound
mov
sub
lret
and
xor
jecxz
xor
dec
xor
test
inc
mov
cmp
sti
add
dec
std
dec
lods
cmp
imul
icebp
xchg
inc
dec
pop
jb
inc
icebp
frstor
dec
add
push
inc
dec
jge
ficoms
sbb
jmp
sbb
lret
dec
xchg
mov
fxch
mov
add
cmovl
movsb
sahf
mov
gs
out
adc
mov
inc
jl
inc
xor
jge
xlat
int3
and
xchg
pop
cmp
xorb
dec
ja
or
jae
fisttpl
movsb
jne
in
adc
pop
inc
add
cli
lret
xor
sahf
mov
adc
sbb
fisubrs
cmp
subl
add
push
cmp
repnz
or
in
mov
push
sbb
cmp
out
ret
jmp
add
imul
andb
aad
jno
aas
cmp
cli
inc
adc
jno
mov
mov
push
jb
lock
imul
orb
int
fistl
clc
jnp
imul
sub
add
push
adc
jae
push
adc
push
push
xor
mov
cld
scas
frstor
mov
addr16
test
sub
pop
fidivl
cmp
ficompl
int
xor
sub
and
and
jle
jl
shlb
mov
ljmp
pop
pop
mov
lods
sub
testl
inc
cmp
loop
sub
test
pop
mov
and
sub
xchg
loop
insb
in
nop
inc
inc
adc
cmpsb
inc
leave
popf
sub
or
lret
ret
xor
nop
or
insb
test
lods
sbb
dec
dec
mov
add
mov
ss
fcompl
cs
mov
test
pushf
lret
sbbl
xchg
adc
out
mov
mov
pushf
mov
lret
loope
mov
inc
lret
xor
sub
sub
push
push
mov
es
add
movsl
inc
push
xchg
add
cwtl
mov
std
dec
push
enter
scas
in
cmp
rdrand
sbb
jmp
iret
fwait
in
sub
outsb
fiaddl
aad
fwait
sti
mov
shll
dec
pop
movb
cmpsb
into
add
loope
pop
ja
cld
scas
imul
lods
add
jnp
mov
or
xchg
mov
and
in
fwait
lret
rclb
and
xor
mov
cli
inc
xor
push
cmpsb
jbe
js
xorl
xchg
sahf
jb
mov
test
lds
into
mov
push
xchg
push
or
test
pop
pop
orl
mov
xchg
or
bound
aam
dec
cs
ficomps
pusha
pop
add
lods
lods
pop
and
sbb
sahf
xor
mov
push
sbb
sti
inc
test
lods
sbbb
cmp
adc
mov
aas
mov
inc
std
sbb
enter
add
bound
xor
and
push
scas
mov
mov
cmc
cmp
out
adc
int3
jne
outsb
sbb
cmp
dec
gs
mov
push
cmp
adc
dec
mov
xchg
mov
in
in
sbb
xchg
and
in
stos
dec
out
push
mov
daa
xchg
outsb
xchg
lret
cmpsb
movsl
fistl
or
sub
add
loopne
or
xor
xor
adc
pop
mov
fs
push
pop
xorl
ficoml
out
add
dec
aaa
dec
les
fstpt
adc
and
out
sbb
mov
jle
pop
daa
fimull
les
inc
and
pop
push
inc
and
inc
xor
fisubrl
ljmp
cs
and
adcb
movsb
aam
mov
xor
cmc
leave
xchg
xchg
daa
fidivrs
insl
dec
andl
js
dec
xchg
inc
fsubl
daa
lahf
addl
add
xor
xchg
xchg
adc
adc
sbb
push
xorb
int3
adc
inc
test
leave
sub
push
cmp
cmp
push
mov
mov
in
arpl
bnd
pop
sbb
shlb
and
mov
sahf
push
xchg
je
shl
or
and
cmp
xor
lcall
out
lds
lret
pushf
iret
pop
cli
jbe
or
js
sahf
insb
mov
inc
pop
sub
sbb
lods
push
sbb
or
out
data16
incb
adcb
test
jg
in
push
inc
or
adc
clc
loop
mov
rcrb
push
ja
sub
test
xchg
icebp
and
gs
cwtl
mov
cmp
cs
sub
mov
inc
cltd
jecxz
sti
daa
add
fcomps
pop
jns
mov
fwait
repz
int
addl
jno
repz
xchg
mov
pop
ds
xlat
xchg
xor
loop
out
cmp
mov
mov
jne
adc
add
cmpsb
jge
jb
popf
out
sbbl
xor
pop
notb
xchg
dec
fucomp
pushl
mov
lea
cli
jmp
pushw
push
add
ljmp
ds
hlt
sbb
enter
pop
mov
rcrl
xchg
insl
pop
test
xor
xor
rclb
mov
push
adc
iret
cmp
es
cltd
out
adc
in
mov
cli
push
std
insl
inc
gs
or
xor
jne
pusha
jnp
ret
imul
pop
push
loope
inc
sbb
sbb
in
cmc
or
fimuls
pop
xlat
movsb
enter
inc
xor
xchg
in
jae
pop
movsl
mov
inc
shlb
inc
pop
adc
cmpsl
pop
xchg
mov
sbb
in
test
lods
jb
mov
jnp
je
cli
pop
push
bound
cmp
clc
dec
and
shl
ljmp
adc
out
es
ds
js
pop
pop
lret
aam
movsl
dec
test
mov
popa
icebp
mov
enter
dec
adcl
fstl
outsl
je
mov
push
rorl
jl
daa
or
enter
cs
lahf
imul
sub
mov
cmp
shrb
in
imul
jb
popa
xorl
movsb
sbb
aas
push
iret
ss
dec
sbb
adc
inc
insl
aad
fnsave
ret
xchg
xor
fiadds
xor
jb
xchg
ljmp
outsb
stos
xchg
imul
ficomps
outsb
repz
in
xchg
sahf
scas
lods
sub
std
lock
cmp
push
movq
mov
sub
std
jno
pop
lods
ret
test
in
xlat
dec
cmp
dec
test
pusha
inc
aam
xor
loope
int3
mov
mov
aas
scas
adc
xor
xor
sbb
jg
adc
cwtl
sub
scas
lret
fmuls
inc
push
mov
std
pop
in
arpl
cltd
jecxz
es
mov
popa
adc
pop
les
popa
sub
call
loope
ss
inc
push
nop
push
std
int3
dec
js
mov
push
repnz
jnp
jp
in
or
in
aas
mov
xor
push
jp
orl
inc
jg
aam
jmp
lods
or
fldcw
sar
jae
fistl
imul
mov
jbe
jb
nop
ss
fsubl
addb
mov
fldcw
xor
add
test
ljmp
adc
movsb
icebp
in
lahf
lea
cmp
or
inc
incl
xchg
test
jmp
sub
adc
sub
xor
push
popa
sbb
xlat
sbb
xchg
loope
scas
push
movsb
test
jmp
xor
mov
cmp
icebp
xchg
pop
jno
fmuls
xchg
sbbb
fadds
rep
imul
cmp
push
push
adc
mov
add
lds
repz
sub
scas
inc
push
mov
jge
dec
pop
xchg
fistps
inc
pop
es
jb
cli
sar
aaa
dec
popf
popa
mov
dec
fistps
pop
mov
mov
push
xor
push
fwait
ds
dec
repz
jne
inc
imull
pusha
jmp
push
or
nop
sub
cmp
mov
andb
and
xor
cmp
lds
rcrb
in
mov
lret
dec
mov
sbb
add
outsb
pop
push
pop
enter
int3
inc
mov
jb
or
inc
add
rorl
rcll
adc
push
jmp
xchg
gs
rorb
pushf
cmp
cmp
adc
out
inc
xchg
ret
imul
insl
pushf
fidivl
out
sub
enter
adc
aas
mov
pop
sub
jbe
sbb
mov
icebp
mov
in
fwait
sbb
xchg
lds
aam
fstpl
fldenv
add
xchg
movsb
cmc
and
jb
cmpsl
faddp
ljmp
fbstp
dec
rorb
mov
xchg
scas
inc
jne,pn
les
rcrb
andl
jge
adc
fwait
mov
jg
fwait
inc
test
adc
lock
inc
adc
out
pop
jb
out
mov
sti
xor
repnz
mov
lock
dec
push
xchg
push
xor
lea
or
jbe
mov
and
pop
mov
mov
into
and
stc
je
inc
and
jae
sub
pop
hlt
loope
lods
pop
mov
xor
cmpsl
stos
push
lods
lds
clc
jle
mov
cs
xor
stc
adc
imul
push
pop
mov
out
inc
pop
adc
les
das
insl
push
add
imul
mov
cmp
loop,pn
lahf
add
aad
sbb
xchg
ficoml
xorps
sub
inc
ds
into
xchg
std
push
dec
mov
pop
int
scas
inc
daa
ja
ror
cmp
or
pop
ja
movsl
push
fwait
roll
mov
loopne
clc
mov
mov
lahf
cmp
scas
lret
sahf
cmp
std
testb
sbb
es
add
sub
aam
lahf
jnp
xchg
sahf
je
mov
inc
and
loop
sti
aaa
movsb
push
jmp
ds
add
mov
insb
jg
arpl
frstor
dec
or
push
push
sub
es
xor
xchg
jle
fmul
nop
loopne
pushf
cli
mull
clc
mov
mov
sub
test
out
or
aas
jmp
stc
push
xlat
mov
fnstsw
dec
movsl
sahf
xor
pop
loope
loopne
fidivs
testb
xorl
sbb
mov
sub
loopne
sub
or
dec
push
add
xor
mov
sub
mov
dec
jae
push
into
pop
inc
ja
sbb
sub
test
fsts
push
cli
or
fidivl
fisubrs
mov
test
lds
xchg
cmpl
es
jno
lods
cmpsb
lea
outsl
xor
cmp
lret
pop
jno
inc
inc
lods
shlb
or
out
fmull
mov
fcmovu
stos
insl
adc
lcall
xchg
ja
add
les
nop
pop
cmp
cmpsb
sub
shll
push
adcb
cmp
sub
hlt
push
in
xlat
iret
sbbb
sbb
mov
mov
adc
cmp
pop
rorb
bound
cltd
sbb
xchg
jne
int3
xchg
jmp
lods
jge
loopne
mov
cs
sub
sar
loope
test
insl
inc
jle
sbb
jae
cmp
fs
addr16
mov
sahf
imul
jbe
rorl
push
sub
cli
push
adc
lret
insl
loop
ror
dec
push
sbb
outsl
clc
jo
pop
adcl
sbb
or
aam
dec
add
jge
and
adc
das
push
imul
mov
lret
test
fdivl
shlb
push
test
jno,pn
adc
fucom
gs
subb
cltd
xchg
lcall
push
aaa
and
xchg
mov
mov
push
push
mov
xor
stos
addb
lcall
pusha
mov
cmp
test
mov
hlt
dec
mov
or
test
gs
add
inc
lods
or
mov
pop
mov
xor
add
arpl
fimuls
sahf
in
mov
out
ret
fwait
xor
js
scas
push
and
testb
repnz
pop
jg
cmp
inc
xchg
jge
mov
jo
jb
mov
jmp
push
add
jg
adc
cmp
push
cs
je
lock
mov
inc
dec
push
pusha
push
add
xchg
xor
add
xlat
clc
sub
in
lods
and
in
dec
push
arpl
sbb
dec
out
jo
sahf
mov
adcb
or
adc
out
jl
dec
mov
push
cwtl
imul
cmc
lea
sbb
xchg
sahf
scas
lods
ja
in
push
movsb
out
cmpsb
xchg
ja
dec
stos
in
or
aas
xor
xchg
mov
dec
test
lods
push
outsl
addr16
les
out
daa
movsb
or
les
inc
addr16
push
test
mov
inc
dec
jb
cmp
cmpsl
xchg
cmpsb
testb
xlat
mov
jl
aaa
nop
popa
xchg
int3
jge
mov
pop
lahf
mov
in
icebp
mov
add
lods
adc
mov
inc
mov
cli
lcall
sbb
out
mov
stos
lds
sbb
call
mov
out
jge
xor
xchg
or
clc
adcb
and
add
scas
dec
aas
mov
std
setns
cwtl
add
pop
or
pop
aad
dec
dec
pop
push
shrb
mov
iretw
xchg
mov
in
jecxz
cltd
push
shlb
testl
mov
fstps
loope
cmp
cmp
jmp
jns
mov
inc
mov
jne
lea
sub
xchg
cltd
push
mov
jne
push
stc
js
out
cmp
xor
mov
rorb
imul
fbld
push
lea
jns
fs
pop
push
std
daa
jns
shlb
push
shrb
test
xchg
test
push
push
mov
in
cmpsl
mov
xor
push
jmp
jne
mov
mov
xor
daa
mov
imul
jno
lret
mov
push
lret
mov
sbb
mov
popf
scas
add
pop
adc
inc
cld
fs
dec
clc
adc
adc
jp
stos
addr16
orb
push
int3
sub
pop
xor
fs
mov
shrw
and
adc
mov
fwait
and
xchg
and
cmp
pop
mov
in
pop
shl
jl
xchg
loop
mov
xchg
je
in
lahf
outsl
outsb
pop
cltd
mov
mov
test
xchg
jmp
sub
shll
lock
jno
popf
stos
sub
jno
sub
sarb
adc
gs
insb
dec
sub
dec
mov
or
mov
stos
cmc
int3
cmp
mov
xor
pusha
out
mov
pop
pop
cmpsl
ja
push
out
insl
pop
inc
or
fldcw
test
repnz
or
mov
mov
xchg
push
stos
in
ret
pop
aaa
scas
out
xor
push
cli
or
xor
movsl
fdiv
test
push
aas
imul
adc
sub
jnp
sub
mov
and
adc
pop
sarb
add
jb
lahf
insl
sbb
pop
and
cmpsb
xor
adc
scas
cmp
pop
sbb
out
aad
shlb
repnz
and
iret
cmpl
loopne
and
shlb
mov
mov
lods
cmp
xor
xchg
inc
je
dec
test
scas
sti
sbb
icebp
push
std
aad
sub
out
lods
mov
ds
shll
mov
mov
les
mov
addr16
mov
mov
xor
js
in
push
sbb
mov
push
loopne
jno
sub
inc
fsubrp
xorb
jnp
das
add
jmp
sbb
mov
push
adc
mov
adc
sub
cmp
add
xchg
pop
add
mov
in
xchg
repnz
mov
aaa
jae
fwait
pop
adc
push
movsb
cmp
or
ds
stos
adc
mov
data16
xorl
test
pop
adc
cmpsb
mov
add
fadds
sar
sub
dec
dec
cmp
imul
mov
cwtl
dec
in
pop
out
cmp
sub
xchg
adc
mov
in
and
popf
in
inc
in
dec
lahf
mov
jmp
mov
dec
xchg
jne
fisubs
stos
lods
ljmp
stos
pop
or
out
jg
scas
push
hlt
aad
sbb
shrb
xchg
bound
subb
test
ss
and
idivl
mov
inc
dec
clc
add
xor
std
dec
les
push
mov
xlat
imul
and
inc
push
sbb
or
push
cld
rorb
call
push
cli
popf
jnp
rorl
or
call
mov
movsl
jnp
pop
and
fsubl
inc
cwtl
xchg
test
inc
pop
pop
jge
fwait
ja
out
mov
xchg
icebp
stos
dec
or
and
imul
jmp
loop
dec
ret
and
pushf
rcrl
push
leave
call
fidivl
jmp
pop
or
xor
mov
add
add
mov
jno
mov
shlb
jb
cmpsl
jns
lcall
mov
test
insb
rcrl
loopne
push
push
xor
jne
adc
insl
add
testb
popa
jle
jnp
xchg
add
shlb
leave
mov
jb
pushf
ret
push
fsubs
push
aas
sub
jg
sahf
les
popf
imul
or
outsb
gs
pop
dec
popa
push
lods
fs
or
lret
andl
cmp
les
add
inc
cmp
inc
ds
jnp
ds
push
mov
cmc
cmpsb
push
lcall
push
push
pop
sub
mov
mull
and
pop
int
mull
mov
out
and
testb
dec
pop
outsb
mov
repnz
lret
sti
je
fidivrs
lods
inc
movsb
dec
xor
push
sub
or
mov
and
xor
das
lods
test
xchg
cltd
loopne
dec
cld
jne
ja
fildl
js
arpl
arpl
rcll
push
or
mov
push
push
mov
ror
ficomps
jbe
xchg
adc
xor
in
popa
js
or
jbe
fs
cmp
xchg
les
mov
loope
les
cmp
cmpsl
sbbb
aaa
inc
int3
dec
cmpsb
sub
aaa
cmc
push
shrb
xor
pop
pop
lds
pop
cmc
inc
sbb
add
and
dec
scas
mov
inc
xchg
insb
jno
xchg
xchg
and
mov
xchg
je
add
andl
pusha
xlat
fs
pop
or
mov
xor
loop
imul
test
icebp
outsl
andl
jo
mov
stc
lahf
xchg
adcl
or
int3
mov
in
cmp
imul
js
movsl
arpl
scas
sbb
outsb
pop
adc
xor
jnp
mov
mov
or
mov
inc
sarb
fptan
loop
icebp
mov
cli
aad
xor
fistpll
mov
sti
jge
push
lock
aam
mov
mov
sahf
ret
adc
bound
xor
imul
jbe
mov
xchg
rolb
mov
outsl
mov
imul
and
xor
cltd
es
dec
pushf
cwtl
lahf
and
mov
cmp
jne
add
incb
sbb
loope
xor
mov
andb
cmc
dec
comiss
jo
data16
pop
pop
xchg
lea
insl
imul
sbb
popa
xor
movsl
arpl
in
add
js
aaa
add
cmpl
imul
mov
jae
into
mov
arpl
aam
popf
cmp
stos
jbe
xchg
cmc
jge
enter
stos
test
pop
pusha
cmovb
repnz
pop
addl
fsubl
jno
mov
mov
shll
add
xchg
sarl
fbstp
mov
sti
in
out
pop
jo
xchg
fmuls
pushf
xlat
jmp
ljmp
out
out
addb
adc
dec
hlt
movsl
sub
dec
div
cmpsb
pop
popa
cmp
push
xchg
pop
pusha
enter
lahf
pop
push
stos
dec
mov
sub
adc
mov
iret
inc
add
addb
pop
pop
inc
xchg
loope
pop
inc
mov
out
shlb
or
fnsave
leave
jg
mov
and
push
pop
adc
test
ja
fisttpl
inc
cmp
adc
xor
xor
pop
scas
adc
mov
or
adc
insb
or
push
mov
cmp
mov
push
sbb
and
mov
inc
xchg
mov
aam
movsl
lret
imul
mov
jg
ss
sub
or
cld
int
std
mov
pop
dec
fdivrs
push
leave
lahf
pop
jmp
ret
jmp
and
sub
push
ja
dec
or
lds
mov
inc
push
repnz
data16
dec
scas
fcmovne
inc
mov
xchg
xchg
mov
movb
test
pop
std
pop
and
cli
out
pop
rolb
stos
adc
mov
mov
out
negl
xor
mov
cltd
out
out
sub
jb
adcl
push
aaa
hlt
adc
add
fwait
jo
loope
das
xchg
push
and
fcomps
data16
jp
dec
jae
sbb
enter
fadds
dec
dec
test
pop
icebp
ja
pop
arpl
push
nop
jecxz
rorb
mov
popf
std
imul
lds
notb
xor
fcomps
mov
imul
push
cmpsb
pusha
jle,pt
fs
xorb
pop
push
gs
inc
add
movb
mov
rcr
scas
loopne
cltd
cmpsb
xchg
stos
or
cltd
dec
mov
or
pop
or
cs
mov
xchg
mov
pop
das
xchg
icebp
test
pop
fucomp
xor
pop
inc
into
inc
sub
popa
xchg
mov
test
mov
and
cmp
sbb
mov
sbb
das
addr16
clc
mov
xor
xor
xchg
daa
shlb
call
mov
ret
dec
push
movsl
mov
dec
jl
fsubrp
inc
jnp
outsb
jmp
int
out
rcrl
fnsave
mov
sub
mov
pop
lret
mov
mov
imul
adc
and
xor
inc
add
inc
in
cld
or
adc
movsl
jo
movsl
cs
cs
jns
mov
adc
popf
jp
or
aad
cli
fistl
sbb
jno
and
push
js
movsl
and
mov
daa
push
pop
in
pop
repz
inc
aad
add
mov
mov
jl
sbb
jmp
into
testl
aam
outsl
aaa
and
mov
or
daa
sbbb
test
xor
mov
les
xor
or
lds
sub
xor
jnp
xchg
ret
arpl
push
add
push
nop
icebp
push
fwait
xchg
scas
outsl
lcall
and
jl
rol
xor
popl
dec
or
fnstsw
inc
subl
jnp
jmp
jmp
pop
xlat
aam
inc
and
in
sub
mov
pop
imul
sbb
in
out
fnstsw
push
or
lcall
mov
or
mov
and
nop
sbb
aam
test
mov
jo
add
and
dec
inc
and
out
mov
ss
xchg
sbb
mov
fldt
bound
aam
movsb
loop
add
sub
das
sub
add
orb
inc
pop
inc
rolb
subb
xor
mov
or
incb
jne
cmp
or
xchg
loope
sbb
inc
rcl
hlt
xchg
push
cmp
gs
subl
shll
inc
addr16
inc
fisubs
xor
xchg
stos
push
shll
mov
xchg
lock
cli
test
push
stc
pusha
lock
movsl
push
or
fdivrs
ss
and
jle
shlb
into
imul
dec
or
lret
pop
adc
cli
inc
das
and
movsb
outsb
insl
xchg
mov
repnz
lock
psllq
mov
adc
fisubs
jno
mov
insb
jp
fstpt
xor
test
inc
jbe
mov
jb
dec
outsb
cli
aam
mov
adc
pop
and
pop
add
push
loope
xchg
cs
sbb
dec
mov
addr16
insl
sub
clc
imul
mov
into
ljmp
lock
dec
loopne
mov
xchg
scas
movsb
lods
lds
xchg
subl
loop
leave
int
sub
dec
cmp
xchg
xor
lea
lods
rcrb
shr
xor
aas
ret
in
out
mov
push
push
pop
inc
xor
xchg
std
xchg
repnz
cmpsl
mov
sarl
xchg
cmp
dec
cmp
iret
fs
loopne
insl
test
scas
das
or
cmp
leave
iret
mov
out
inc
xchg
fcoms
mov
dec
rcl
dec
mov
mov
mov
rclb
test
inc
cltd
xor
clc
insl
jno
push
clc
fsubl
movsl
xchg
repnz
inc
stc
mov
stc
or
sub
cmova
pusha
pop
mov
aaa
cltd
sti
sub
mov
jmp
or
in
lods
mov
out
icebp
dec
mov
repz
fcoms
sub
push
ja
aad
data16
shrb
insl
inc
es
hlt
out
clc
shr
cmp
stos
and
jne
pop
inc
movsb
lds
cmp
icebp
rorl
push
pop
int3
les
jne
pusha
cmpsl
fidivrl
mov
sbb
ljmp
push
fcomi
mov
push
xchg
cmp
ret
sub
push
sub
shrb
fisttps
mov
jecxz
or
daa
andb
bound
jg
in
xchg
aaa
xchg
xor
test
cmpsl
jns
mov
push
or
and
rorl
xchg
mov
mov
jae
outsl
sbb
jmp
lds
push
repz
xlat
ds
adcb
jno
lret
cmpsl
or
push
stos
mov
jo
imul
mov
popa
cs
xor
sbb
pop
mov
push
lahf
daa
cmp
lods
push
jmp
sahf
les
lds
icebp
inc
inc
loopne
pop
dec
or
jne
lcall
xor
inc
xor
int3
lea
outsl
loopne
cmpsb
fsubs
push
sbb
mov
sbb
xor
pop
mov
mov
pop
mov
mov
mov
or
adc
lahf
mov
mov
hlt
flds
pop
and
cmp
sub
lahf
movb
cmp
arpl
test
adc
add
dec
dec
push
in
js
dec
dec
sbb
pop
xchg
scas
test
out
jl
nop
mov
dec
scas
pop
push
dec
xchg
dec
incl
rclb
arpl
sub
pop
ljmp
cmp
test
xor
insl
cmpsl
add
imul
ret
jno
mov
add
xor
and
aam
movsl
mov
cmpsl
xchg
pop
les
sbb
push
and
icebp
pop
xchg
adc
fidivs
xchg
dec
sbb
xchg
outsb
sub
push
sub
pushf
inc
xchg
push
dec
dec
mov
idivb
cmpb
add
mov
outsl
mov
shlb
xchg
sub
int3
movsl
jmp
pop
xchg
hlt
dec
adc
loopne
rorl
xchg
pop
lds
add
sub
mov
jg
fwait
aaa
out
lods
ds
or
inc
cld
les
out
in
out
insb
xor
pop
fistps
xor
cs
push
xchg
dec
adc
rcrb
cwtl
and
or
fmulp
cs
imul
ds
mov
lret
mov
arpl
ret
out
data16
sbb
idiv
cmc
xor
cwtl
lock
jp
adc
sub
fdivr
xchg
cli
aam
or
icebp
jl
fiaddl
stc
gs
or
mov
mov
popf
xlat
dec
mov
in
pop
in
pop
add
push
xchg
jo
ljmp
movsb
fcoml
push
mov
mov
push
and
cmp
call
mov
mov
xchg
aam
pop
and
fmuls
sub
addb
jmp
sub
mov
sub
repz
stc
adc
mov
ss
xlat
inc
fdivrl
dec
pop
mov
or
jmp
shrl
mov
jb
jne
push
jmp
aas
jmp
imul
inc
inc
mov
and
sub
arpl
mov
pop
hlt
jecxz
test
cmpsl
cmp
inc
add
and
pop
lcall
mov
test
int
dec
rcll
pushf
jo
stos
bound
repnz
fwait
push
mov
outsl
cltd
cltd
clc
pop
outsb
clc
inc
loop
or
xchg
sbb
bound
jl
adc
sbb
hlt
jne
mov
jecxz
inc
fldcw
idiv
pop
cmpsb
xor
pop
jb
and
xchg
in
shl
int3
push
addb
inc
sub
and
lock
xchg
dec
adc
sub
call
xchg
jg
push
das
stos
lcall
sar
mov
jne
inc
mov
pop
rcr
mov
dec
pop
xchg
test
dec
jmp
outsl
inc
mov
jmp
adc
push
lcall
or
out
adc
arpl
push
cltd
int3
in
inc
popf
mov
lcall
and
xchg
push
xchg
mov
inc
cmp
aaa
pop
xor
and
lock
sarb
cmp
jl
mov
sbb
test
push
jno
subb
cltd
jl
xor
mov
push
push
les
rorl
enter
es
mov
pop
sbb
pop
out
adc
lret
lret
jmp
sbb
fidivrl
stc
dec
jb
loopne
mov
or
mov
push
lahf
sub
mov
ja
repnz
and
pop
data16
shrl
pop
clc
push
xor
ja
dec
fists
jno
fildll
negb
and
shlb
scas
fimuls
lods
adc
adc
adc
xchg
cmpsl
out
icebp
out
dec
pop
push
mov
in
jno
xchg
cmpsl
mov
push
into
repz
ret
ljmp
sti
sbb
push
stc
mov
aaa
xor
pop
int
movsl
adc
inc
cmpsl
push
test
pop
repnz
and
rorl
add
rolb
outsl
jmp
into
jnp
dec
cmp
mov
sbb
push
out
subb
inc
mov
test
xor
cmp
xor
or
jge
pop
cmc
lock
and
push
imul
and
mov
enter
and
fadds
push
pop
icebp
fwait
aad
lods
xor
addl
inc
adc
xchg
cmp
jmp
fmulp
inc
in
mov
lahf
dec
push
and
xchg
add
and
mov
jmp
or
in
out
nop
cmpb
in
push
xor
push
xor
inc
aaa
and
xchg
int
outsb
loopne
cmc
cmp
xchg
jmp
xor
add
inc
and
mov
daa
or
js
ret
mov
jns
mov
mov
push
xor
pop
dec
addb
lcall
shll
jne
push
push
insb
das
in
cmp
xlat
sub
notl
cmp
push
lret
mov
ss
jbe
mov
xchg
mov
xchg
sti
or
std
pop
inc
pop
int
dec
add
pop
dec
pop
lea
xchg
inc
sti
loope
lahf
jae
xor
imul
fimuls
jp
lcall
adc
or
cwtl
jmp
pop
popa
dec
or
mov
mov
in
pop
jg
loope
add
rcr
or
les
lcall
fwait
daa
aaa
sub
ja
pop
loope
mov
lods
test
jnp
mov
inc
adc
sbb
xchg
enter
add
push
insb
test
jnp
imul
scas
out
dec
ficomps
sbb
jb
and
and
popf
add
cli
sti
xchg
xchg
pop
loop
test
sub
out
sub
aas
jge
and
outsl
mov
and
adc
gs
adc
cmp
out
pop
mov
in
stos
popf
leave
test
cli
sbb
fisttpl
cmc
popf
pop
jo
push
jae
scas
scas
ja
pop
jns
mov
out
jp
pop
aaa
sahf
mov
mov
xor
jle
dec
mov
data16
jnp
or
jmp
imul
sahf
pop
lods
les
xchg
xor
imul
scas
movsb
jecxz
loop
scas
mov
adc
cmp
pop
dec
mov
mov
fneni(8087
lcall
in
out
ror
hlt
mov
cmp
pop
pop
cmp
xorb
insb
xlat
gs
add
xchg
sub
dec
int3
dec
insb
test
adc
mov
in
dec
push
cli
mov
into
sub
pusha
lahf
push
and
in
sbb
xor
jp
lea
cmp
and
fsub
inc
int
jbe
jmp
inc
test
push
mov
adc
mov
dec
cmp
aaa
and
xor
test
xor
jp
sbb
mov
ja
sub
es
out
and
in
addb
xchg
jnp
lock
sub
or
jns
lret
or
mov
mov
mov
cmpb
push
mov
push
stos
fwait
pop
fsubl
adc
in
sub
sbb
dec
jg
mov
push
xchg
jne
popa
imul
or
lret
xchg
push
push
ljmp
pop
and
scas
inc
push
flds
cmp
aaa
insb
sbb
sbb
add
sbb
fdivrp
lock
shlb
bound
xor
sti
dec
jge
dec
mov
mov
cmp
dec
call
test
push
ret
xchg
jbe
xchg
and
xor
dec
out
adc
decb
mov
dec
mov
adc
xor
lods
mov
mov
adc
das
lods
push
mov
mov
inc
ret
scas
adc
mov
push
cmp
sub
iret
in
ss
clc
mov
xchg
fptan
in
dec
repz
sub
and
roll
dec
push
mov
jg
cmp
incl
sbb
nop
es
aaa
pop
cmp
jg
xchg
mov
sti
sbb
mov
xlat
test
mov
or
xlat
dec
adc
jg
xor
jg
fistps
pop
xchg
xor
test
mov
xlat
inc
fs
out
mov
sbb
aaa
lods
nop
cmp
js
iret
cld
sahf
rcl
jg
push
sarl
dec
dec
push
andb
daa
pop
and
adc
sub
ret
paddsw
or
into
mov
jno
in
test
das
test
mov
cmp
cwtl
push
add
call
jg
add
bound
pop
jae
movsb
adc
lret
test
mov
insl
jecxz
push
sub
jle
leave
push
mov
inc
mov
rcr
hlt
mov
xchg
out
jmp
int
js
shr
loop
push
cmpsl
pop
or
ret
and
je
pop
xchg
adcl
std
cmp
xchg
lods
jb
iret
mov
jmp
cltd
loope
jle
push
xchg
dec
push
xor
xor
push
stc
shlw
dec
jl
lret
or
icebp
pop
push
call
xchg
dec
mov
dec
and
cli
push
and
and
and
jmp
inc
inc
ds
dec
lret
push
imul
push
lret
jne
aam
popa
push
stc
mov
xlat
mov
sar
scas
add
jl
mov
pop
sub
movsl
repnz
or
cltd
jge
push
mov
ds
mov
push
adc
jb
jmp
pop
fldcw
jecxz
pusha
sbb
or
sbb
cmpsl
dec
add
sub
dec
adc
dec
pop
ljmp
adc
mul
mov
shlb
xor
das
jo
cmp
pop
pop
dec
gs
xor
in
ljmp
pop
loopne
mov
jecxz
and
aam
sub
sbb
out
lcall
stos
outsb
push
fdivl
adc
sbb
pop
out
xor
cmp
push
pusha
jge
pop
sarb
cmp
in
stos
jae
mov
push
aas
mov
and
leave
nop
push
movsl
rcrl
outsb
push
pop
hlt
cmp
dec
push
mov
mov
test
scas
cmp
push
push
dec
mov
int3
mov
rolb
loopne
fwait
cmp
insb
in
mov
insl
imul
fistl
outsl
or
push
sub
pop
inc
je
jle
mov
dec
push
dec
jnp
lods
mov
adc
dec
scas
sbb
jo
testl
jge
lret
xchg
dec
ds
out
xlat
pop
push
lods
ds
push
jg
push
enter
push
mov
adc
mov
pop
dec
leave
sbb
push
mov
roll
aad
mov
int
insb
bound
xchg
xchg
push
push
repnz
in
ljmp
cmc
jg
mov
mov
shll
shll
in
xchg
mov
loop
cli
mov
nop
push
jmp
xor
js
jmp
jnp
mov
push
xchg
dec
mov
add
or
addr16
mov
loop
xchg
ds
cli
iret
and
mov
add
out
lea
call
testb
clc
dec
shlb
test
push
xor
arpl
mov
inc
in
sub
mov
fisubs
push
jne
jnp
mov
fidivrl
in
test
addr16
ss
fdivrs
jle
stos
push
orl
fdivr
jo
enter
mov
and
add
cmpl
sbb
or
xor
std
pusha
pop
leave
repnz
fisttps
add
dec
xchg
and
in
ficoms
aad
push
mov
repz
out
or
pop
push
inc
fisubs
jno
dec
leave
adc
pushf
cs
add
fsubrl
adc
out
jmp
sbb
xor
adc
rcrl
or
and
insb
pop
sbb
jae
out
sub
ss
imul
call
fdivrs
outsl
cmp
push
aas
stc
ja
push
lea
int3
sbb
mov
sbb
push
xchg
jmp
rorl
or
sbb
push
push
cld
ja
mov
jnp
push
push
gs
sub
xchg
dec
lock
jmp
js
arpl
js
pop
jnp
cmp
aaa
into
data16
fidivl
add
inc
dec
out
pop
inc
and
push
leave
arpl
fistpl
sub
and
cmp
rcrb
outsl
add
js
mov
cld
aaa
popa
adc
cltd
scas
pop
loop
adc
in
lret
cmp
push
cmp
sub
push
hlt
push
xor
jae
movsl
inc
lcall
dec
in
out
jne
fdivp
inc
out
push
in
in
inc
out
push
cld
jl
rcll
loopne
mov
sbb
cmp
loope
jbe
or
mov
and
arpl
fidivs
cmpsl
in
shlb
xchg
gs
ja
in
movsl
dec
inc
shlb
notl
mov
xor
inc
pushf
fsub
fisubrs
sbb
mov
mov
xor
and
lods
sbb
dec
cwtl
out
cmpsl
mov
popf
std
bnd
add
xor
jne
push
call
lods
aam
dec
das
sub
gs
lcall
enter
outsl
insb
pushf
adc
xor
rclb
push
lods
xor
lcall
xorl
clc
jle
adc
sbbl
sbb
test
cltd
push
and
mov
cmpsb
popf
or
scas
push
loope
mov
clc
subl
or
lcall
jo
ljmp
test
outsl
jbe
movsl
push
popf
loop
aad
adc
pop
jmp
cli
mov
sbb
mov
adc
lret
adc
movsl
cmp
in
pop
popf
fsubl
fsin
cmc
mov
fldl
mov
xchg
ljmp
push
mov
adc
mov
jmp
iret
bound
mov
add
xchg
xchg
lods
cmp
lds
daa
adc
adc
ss
inc
xchg
in
xor
int
pop
lea
mov
mov
mov
push
mov
outsl
xchg
ljmp
sub
mov
test
cld
pop
dec
jne
mov
jecxz
out
stc
sbb
test
js
sub
js
and
and
mov
cmc
gs
cltd
add
loope
or
dec
push
xchg
es
sub
ds
ja
dec
mov
insb
lds
fnstcw
ret
jns
xor
adc
pop
mov
lret
cmc
stos
and
test
sub
lods
out
inc
adc
ds
mov
lcall
outsb
nop
xchg
mov
xlat
xchg
inc
push
add
mov
cmp
inc
andb
adc
out
out
imulb
pop
sub
dec
aas
daa
push
mov
loopne
inc
nop
sub
loopne
sub
mov
cmpsl
js
stc
jbe
out
pop
cmc
jp
out
dec
push
lret
dec
test
add
outsl
scas
aas
loope
sbbl
adc
jbe
data16
add
or
aam
mov
dec
push
cmc
push
and
cmpl
sub
movsb
sbb
into
sub
fdivrs
jl
add
xchg
das
dec
cmp
mov
sub
rclb
pop
cmpl
xchg
int
test
inc
mov
stc
sub
fdivrs
mov
adc
cmp
pop
imul
or
cmp
jo
ss
addr16
enter
rol
test
cmpl
shl
pop
inc
clc
sahf
mov
jmp
xorl
cs
es
xchg
mov
outsl
lds
mov
fnstenv
test
fst
dec
ds
test
sbb
insb
jmp
jb
mov
sub
inc
jns
pop
push
mov
fstps
mov
jg
divl
les
cmp
lcall
adc
sarb
std
dec
and
ss
mov
mov
jnp
mov
fadd
mov
jle
mov
aam
and
xlat
out
aaa
dec
in
push
jecxz
jl
xchg
ja
or
and
jb
xchg
popa
das
repnz
or
iret
aad
mov
add
lods
rcrl
pop
push
arpl
inc
xchg
xchg
cld
stc
ss
mov
push
dec
or
xchg
cmp
inc
pop
dec
dec
ss
xlat
stos
push
add
nop
stos
cmc
dec
lcall
xlat
mov
pop
call
aad
sahf
or
cmpsl
popa
jl
cmp
xor
pop
xchg
and
push
dec
mov
mov
test
into
frstor
pop
jae
or
add
sbb
or
jae
xor
insb
out
rcrl
idivb
xchg
jle
call
push
scas
xchg
aad
sbb
inc
mov
jp
cmp
xor
decb
push
rcrb
inc
dec
mov
ror
mov
mov
jbe
pop
test
or
fwait
cmpl
cmpsb
scas
pop
lret
mov
ret
cmpb
stc
add
aad
mov
lds
push
pop
pop
dec
adc
ret
sub
pop
jae
nopl
scas
push
sbb
push
jmp
das
adc
or
xor
lock
or
in
xchg
jmp
pop
bound
pop
or
inc
sbb
xchg
xlat
push
scas
in
pop
ret
clc
shl
mov
roll
xor
mov
sub
push
outsl
aaa
xor
pop
sub
addl
pop
inc
xchg
push
in
fs
xor
adc
movsl
sbb
cltd
les
js
in
pop
cli
loope
dec
aam
add
loop
push
outsl
and
stc
cmp
ss
mov
add
fdivr
in
mov
pusha
mov
out
jne
cld
jns
adcb
mov
jno
inc
sbbl
divl
push
fidivs
rclb
or
and
mov
je
push
mov
mov
inc
jnp
mov
xorl
adc
aas
sbb
sub
mov
pop
js
jecxz
adc
shrl
push
add
fs
xchg
movsb
das
negl
fs
jo
pop
jo
mov
adc
negb
lahf
ljmp
lods
xchg
data16
xlat
and
pop
push
and
test
adc
test
mov
aaa
jae
rcrl
jmp
in
jb
es
ficoms
mov
sbb
xor
gs
add
mov
out
outsb
pop
mov
cli
xchg
mov
inc
add
lea
pop
pop
cmp
mov
roll
mull
addl
pusha
cwtl
int3
popa
xchg
cs
inc
jle
mov
shl
inc
and
es
sbb
inc
pop
ret
nop
leave
ss
lods
jg
rcl
cmp
in
test
sub
insl
dec
and
or
stos
std
dec
jns
shrl
lea
mov
lret
in
inc
jl
movsl
mov
fldenv
cmp
fsubp
nop
push
lret
push
lret
pcmpeqd
push
push
jmp
jne,pt
mov
jbe
adc
cld
lds
ret
push
movsl
je
jnp,pn
clc
xchg
adc
mov
lret
call
inc
fldt
cwtl
mov
cltd
imul
les
cltd
xor
shll
sub
mov
jge
mov
xchg
adc
es
call
jmp
or
fiaddl
dec
inc
pop
out
in
mov
pusha
xchg
dec
mov
pop
lods
sbb
lret
xchg
or
sti
hlt
imul
mov
and
sbb
lea
sarl
lahf
stc
divl
sub
mov
or
xor
hlt
ss
sub
adc
adc
push
iret
fwait
outsb
and
inc
jnp
xor
mov
lods
cld
jno
mov
mov
pusha
inc
inc
mov
fsubl
cmp
mov
loop
hlt
push
push
leave
popa
lahf
inc
jb
push
movsl
mov
mov
int
add
mov
lock
mov
mulb
into
jae
xor
pop
or
fidivrs
mov
test
fimuls
test
jb
xchg
jl
lock
adc
loope
xchg
daa
daa
dec
test
pusha
mov
adc
and
push
pop
pushf
adc
push
pop
scas
jmp
sub
dec
jp
mov
test
mov
mov
xor
or
std
dec
jl
jecxz
pop
sbb
gs
test
test
pushf
adc
das
dec
inc
mov
push
inc
mov
push
pop
inc
sub
or
imul
or
push
hlt
arpl
pop
push
jl
xchg
cld
xor
or
pop
nop
or
outsl
les
adc
lock
ret
and
cmpsl
xor
aad
add
ja
iret
sbb
imul
jecxz
scas
jecxz
mov
mov
mov
push
inc
les
sbb
rcrb
mov
loop
lock
pop
das
xlat
or
sub
lcall
mov
call
insl
decl
sti
mov
xchg
jg
lahf
push
xlat
push
mov
push
in
mov
mov
push
or
jo
movsb
jns
ja
ret
ret
pop
push
enter
xor
xor
mov
xor
push
mov
lret
je
iret
pop
xchg
push
in
adc
test
fmull
dec
aas
les
lret
push
sub
gs
adc
sbb
sbb
xchg
bound
aam
push
call
mov
pop
add
or
pop
cwtl
cltd
cmp
jbe
fs
mov
je
inc
ds
sub
nop
hlt
repnz
dec
je
scas
int
cli
test
sbb
aad
rcr
test
insl
mov
stc
or
add
push
test
inc
sahf
sbb
push
mov
mov
pop
jge
leave
int
jo
mov
xchg
lods
mov
out
cmp
outsl
xchg
jb
loop
push
sbbl
cld
daa
mov
fsubrs
rol
and
nop
xor
add
cli
jmp
dec
nop
pop
cmp
rolb
orb
mov
dec
cmp
fwait
aad
cwtl
int
movsl
push
mov
mov
daa
mov
nop
repz
aaa
lds
lods
jo
cltd
push
data16
push
mov
push
pop
cmp
lock
mov
mov
ja
int3
xchg
jno
mov
js
pop
rcr
mov
rclb
shl
sub
mov
scas
add
sub
andb
mov
arpl
dec
scas
shll
out
fcompl
fldenv
je
aad
mov
les
je
cmp
fsts
lret
xchg
popf
push
xchg
sahf
mov
mov
sarl
pusha
adc
dec
js
dec
mov
out
cmpb
fists
push
divb
pop
hlt
popa
repz
jle
insb
lcall
cmc
shll
or
xlat
dec
loop
adc
cmpsb
mov
pop
cmpsb
aad
or
sub
jl
push
test
add
test
das
add
xorb
lock
mov
mov
push
xchg
sbb
sub
or
iret
mov
sbb
inc
imul
pop
gs
sbbl
pop
loop
mov
pop
sahf
jae
outsb
pop
outsl
stos
dec
popf
das
pop
adc
add
and
in
imul
sbb
inc
sub
adc
mov
add
cwtl
push
push
mov
mov
inc
hlt
aaa
dec
leave
data16
loope
and
xor
jg
decl
mov
and
push
and
jmp
hlt
outsl
sub
push
mov
and
shl
mov
adc
xorb
mov
mov
ret
or
andl
sub
sub
mov
push
mov
pop
xchg
pop
xchg
out
cmc
iret
mov
faddl
in
repz
push
jecxz
add
leave
inc
and
pop
cmpsl
divl
mov
sti
das
cmpsl
loop
out
aam
mov
pusha
scas
addr16
dec
js
mov
cmpsl
xchg
mov
mov
or
inc
cmp
stos
mov
and
jo
pop
cs
xor
cmp
jmp
pop
jb
add
add
sbb
sti
daa
adc
jno
lds
sbb
jle
pop
ds
jmp
mov
ret
push
fstpl
leave
loopne
shlb
pop
jecxz
inc
push
stc
mov
jne
inc
fwait
call
jo
pop
xchg
push
arpl
sbb
jecxz
jno
in
inc
mov
dec
dec
sub
jle
inc
or
inc
pusha
fwait
das
mov
xchg
and
xchg
jmp
lods
les
adc
xchg
shlb
pop
ficomps
push
popf
enter
mov
shrl
mov
pop
imul
push
jg
cmp
xlat
arpl
int3
cwtl
add
push
cmp
xorb
lea
push
movsb
fiadds
loopne
pop
rcrl
sbb
adc
push
jecxz
cld
out
lret
cmc
loop
xor
jmp
je
sub
mov
xlat
ljmp
xchg
movsl
test
imull
mov
rcrb
cmp
scas
mov
adc
aas
pop
in
addr16
dec
sbb
sarl
adc
ret
mulb
shlb
stos
ss
xor
pop
and
rcl
xor
mov
scas
lods
outsl
in
mov
dec
sbb
loope
leave
aad
es
jne
or
mov
cli
lret
inc
je
fdivp
xchg
add
xchg
loope
mov
mov
jge
cltd
inc
jo
gs
bound
mov
test
and
or
sub
mov
adc
movsl
or
inc
mov
sbb
mov
les
nop
pop
shrb
in
call
or
std
in
fdivl
cmp
mov
sarb
movsl
loope
mov
hlt
sbb
mov
js
testb
shll
lcall
ret
and
and
sbb
jo
aas
jg
rorl
xchg
leave
fiaddl
pusha
rorb
lret
dec
in
xchg
data16
add
pop
je
xchg
xor
dec
andl
pop
mov
push
arpl
dec
lds
cmc
fsts
cli
and
mulb
in
sbb
pop
dec
out
mov
loopne
aam
scas
outsl
push
jne
std
enter
and
lods
rcll
push
lcall
pop
jbe
xchg
fsubrs
pop
in
sub
push
das
pop
xchg
lods
cltd
mov
sar
ret
fisttpll
add
mov
addr16
das
fnsave
cli
repz
gs
sub
jbe
jp
sub
cli
add
xchg
test
push
and
mov
repnz
lret
js
pop
inc
paddusw
pusha
pop
dec
cmp
or
pusha
push
inc
xor
push
xor
fisttpll
push
pop
cmc
or
mov
jne
lods
fsubrl
cmpsb
adc
movb
mov
test
imul
js
mov
in
rol
dec
or
cmpsl
inc
lahf
and
orb
mov
imul
sti
lods
es
arpl
cltd
stos
pop
push
iret
add
dec
xor
jecxz
mov
sbb
int
pop
cltd
or
roll
pop
dec
xor
repz
adc
lret
jg
loope
fxch
cltd
mov
sub
shrl
adc
jae
xchg
mov
bnd
add
nop
mov
pusha
ret
push
arpl
push
mov
fsubrs
push
cltd
xchg
incl
stos
pop
popf
test
loopne
pop
lret
or
and
in
push
aaa
jnp
xchg
test
movsb
sub
out
jno
and
lds
jle
aas
call
jmp
inc
leave
pop
and
sub
mov
pop
adc
idivb
sub
int3
jns
sbb
add
call
sub
ret
cmp
push
sahf
or
jb
inc
mov
out
sub
imul
fcoml
sbb
sbb
fwait
sbb
jge
aaa
lahf
adc
fxch
in
add
scas
jno
sub
mov
js
pop
inc
inc
xchg
mov
nop
negb
add
and
in
pop
and
shrl
push
jbe
fidivs
icebp
shll
repnz
ja
test
pusha
lret
jae
cmpb
xchg
or
lock
frstor
adc
sbb
lahf
xchg
mov
sub
or
test
imul
mov
mov
call
dec
nop
push
inc
ret
mov
inc
adc
rolb
shrl
pop
mov
pusha
or
repz
sub
adc
lock
lret
pop
mov
cli
or
jb
xor
xor
xchg
xchg
mov
dec
jg
xor
cwtl
mov
in
xchg
cmp
cmp
xor
pop
loopne
mov
lret
jb
pop
sbb
push
mov
shll
std
sbb
dec
mov
sbb
add
cli
inc
add
test
cmp
ror
ror
push
add
inc
inc
lahf
pop
in
and
nop
scas
pushf
mov
mov
xchg
int
ja
rolb
loope
movsl
mov
adc
sub
xlat
jmp
push
inc
addr16
jo
data16
cltd
ss
scas
push
sbb
cld
testl
cmp
jb
dec
out
pushf
mov
ret
mov
inc
sub
jo
pop
mov
pop
shl
jb
pop
pop
xchg
push
icebp
rol
loope
inc
cmp
push
call
push
mov
sub
jne
scas
sbb
cmp
pop
dec
xor
xchg
jge
xor
es
fistpll
cmp
inc
pusha
fiadds
test
ror
mov
cld
inc
dec
jo
out
lahf
xchg
and
inc
out
addb
inc
sub
mov
cmpsb
imul
or
sbb
std
cwtl
cmp
addr16
mull
jne
fisttps
cld
rol
jl
mov
pop
movsb
lret
lods
imul
cmp
cmp
xor
pop
inc
addr16
cmp
inc
fisubs
repnz
out
xor
mov
popf
and
jno
popl
andb
es
dec
mov
je
mov
popa
sar
xor
adc
fldt
mov
or
aad
fwait
push
xchg
push
cmpb
or
jp
stos
loope
jl
inc
mov
add
icebp
dec
dec
jge
fpatan
cwtl
shlb
aad
fdivrl
cmp
mov
fcmove
dec
mov
mov
sbbl
loop
out
hlt
mov
mov
dec
sbb
in
aaa
pop
pop
xchg
mov
push
mov
add
xchg
xor
mov
dec
mov
push
mov
incb
sbb
arpl
es
mov
aam
or
das
imul
cs
pop
fcomps
shrl
subl
xchg
and
out
std
mov
cmpsb
pop
xchg
lea
mov
sets
mov
push
cld
int3
cmp
jb
pusha
xchg
sub
loopne
cmp
cmp
lahf
stc
lods
dec
mov
cwtl
arpl
decb
sub
out
and
adc
cmc
repnz
out
adcb
jl
cmpb
mov
sub
test
rol
popf
push
dec
lret
xchg
xchg
jnp
cmpsl
pushf
add
push
push
sub
xor
shll
dec
add
sub
addl
push
mov
test
or
mov
ja
aam
ficompl
mov
into
outsb
xor
faddl
stc
push
cmpsl
nop
cltd
fs
dec
inc
out
imul
mov
cmpsl
push
push
mov
mov
cs
mov
sbb
arpl
movsb
mov
pop
xor
push
inc
inc
repz
shll
aaa
jo
pop
je
sbb
or
aam
fcompl
addr16
les
add
mov
mov
xor
jnp
fldcw
or
faddp
add
jge
shl
or
ffree
mov
aad
xor
popf
xchg
dec
dec
cwtl
push
loop
xchg
nop
adc
jnp
fiaddl
adc
jge
ret
cmp
mov
cmpsb
adc
inc
loopne
rolb
mov
ja
cmp
adc
out
push
ret
jnp
cmpsb
movsb
inc
rol
les
gs
loop
push
and
mov
xor
sbb
addr16
mov
mov
shrl
adc
pushf
imul
sahf
nop
ds
xor
jle
inc
sub
or
ja
test
decb
xchg
mov
cmpl
fs
shrl
aam
mov
lret
enter
push
imul
jg
loop
xor
mov
xchg
add
add
mov
dec
inc
ret
mov
xchg
outsb
movsl
sub
pop
stos
or
out
jno
and
lods
out
jo
out
push
outsl
dec
aam
es
sub
call
add
icebp
jb
mov
and
data16
or
test
push
inc
inc
xchg
hlt
and
ret
mov
mov
ss
push
push
pop
sbb
icebp
nop
ret
pop
mov
pusha
push
cwtl
mov
jns
mov
enter
mov
xor
dec
addr16
inc
inc
mov
mov
loope
mov
loope
int3
xchg
insl
jmp
test
jmp
sub
clc
push
fs
dec
dec
mov
cltd
inc
and
cmp
cmpl
pusha
jge
iret
lret
subb
ret
pop
dec
out
push
sbb
repz
jge
push
cwtl
mov
add
jb
ret
lahf
push
js
xchg
mov
or
xor
sub
and
enter
mov
test
pop
jl
pop
push
int
xor
aaa
mov
das
sub
push
inc
sbb
mov
fsubrl
rcll
les
lods
pop
push
xchg
arpl
pushf
mov
add
mov
sti
lret
xor
je
mov
push
jmp
lods
notl
add
xor
out
push
push
ja
mov
pop
inc
mov
add
xchg
aas
test
cmp
mov
rcll
dec
ja
adc
sbb
dec
cmp
xchg
and
sbb
testl
xchg
inc
inc
clc
push
lahf
cmp
xor
xchg
test
bound
cmc
add
sti
hlt
fwait
xchg
cmp
imul
inc
lcall
push
stos
in
clc
clc
notb
jns
push
mov
sbb
and
sbb
iret
ret
int3
sbb
cmp
outsb
gs
push
xchg
adc
int3
adc
daa
jns
out
jne
fwait
push
cmp
add
mov
push
inc
add
cmp
inc
imull
inc
xchg
sbb
shl
mov
cmpsl
fiadds
inc
daa
in
ljmp
xchg
or
mov
mov
jne
adc
std
mov
sbb
and
stos
mov
mov
std
mov
and
movsl
test
bound
xchg
push
shll
in
cmp
insb
in
test
addr16
push
test
scas
mov
das
ja
lcall
sahf
push
xor
int3
lcall
mov
sbb
rcll
int
sub
inc
orb
mov
cmp
mov
and
jg
dec
int
pushf
mov
pop
sahf
xor
mov
lcall
inc
cmpsb
roll
push
cmp
dec
jns
mov
cwtl
pop
movsl
movsl
xchg
mov
cwtl
push
fwait
mov
push
mov
lds
dec
cmp
adc
arpl
lds
in
adc
dec
fnsave
out
push
adc
ds
hlt
lods
inc
test
jl
ficoml
and
push
jp
jle
shlb
cmp
wrmsr
cmp
push
mov
and
addr16
sub
test
bound
mov
mov
popw
cltd
pop
jl
pop
pusha
jge
scas
dec
ja
leave
push
std
ljmp
cmpsb
stos
test
in
out
xor
inc
in
inc
loop
bound
inc
pop
rcr
push
jp
ret
mov
outsb
setle
jge
and
add
stos
or
mov
test
lret
xchg
test
das
popf
mov
stos
stc
fwait
lret
dec
call
cmp
push
mov
mov
pop
inc
adc
inc
mov
lret
fcmovnbe
lcall
into
or
add
adc
in
fdivs
add
ficoms
pop
jo
outsb
jp
cmpsb
or
inc
xchg
pop
pop
adc
cld
and
mov
sub
lds
dec
cmp
xchg
push
call
ss
lret
lcall
xlat
adc
shrb
xchg
int3
push
adc
cmc
cwtl
dec
sub
dec
test
loope
jno
mov
inc
gs
test
push
idiv
cmc
aam
fcmovnbe
xor
sub
jns
cmp
add
das
jne
mov
pop
outsb
clc
or
cmp
adc
sar
xlat
pop
jl
repz
pop
popa
add
xchg
popf
jno
test
cmpsb
add
cmp
adc
inc
adc
sbb
jmp
xor
jno
add
dec
hlt
sarl
cwtl
call
lock
fucom
rolb
mov
fs
in
or
fwait
aas
pop
js
test
dec
inc
xchg
mov
fmull
shll
cwtl
sti
push
jmp
andl
scas
out
cltd
daa
aaa
sbb
xor
nop
dec
push
pop
ljmp
mov
cld
mov
aad
jle
push
mov
fdivl
add
ljmp
arpl
sbb
cmp
mov
mov
fdivrs
adc
cmp
mov
xor
jl
cmp
mov
xchg
jo
push
loopne
push
scas
repz
flds
or
test
xchg
cmpb
push
jns
ljmp
and
lods
pop
imul
xor
or
sbb
mov
lods
dec
out
sbb
outsl
add
mulb
sbb
xchg
add
and
adc
pop
jmp
in
mov
and
in
dec
dec
or
cmp
loopne
bound
enter
mov
jge
fidivrs
ret
cld
les
add
out
xor
scas
xlat
and
pop
jns
out
cltd
outsl
fwait
in
cmp
and
repz
xor
iret
cmp
or
lret
push
mov
pop
pop
loop
je
pop
lret
push
xchg
mov
sub
test
push
xor
lods
imul
or
xchg
inc
push
lret
loope
out
xlat
repnz
aaa
movsb
mov
adc
jno
fstps
cmp
sub
divl
out
insb
pop
fwait
or
lret
push
inc
mov
jno
inc
dec
ret
inc
jnp
pop
enter
pop
divb
mov
mov
mov
dec
ljmp
xchg
or
shll
sbb
mov
negb
jae
ds
cltd
push
outsb
and
ret
stos
pop
jp
enter
andl
lock
add
mov
xchg
pop
jg
pop
repz
lds
jbe
pop
adcl
inc
imul
xchg
push
push
jae
es
jp
hlt
ror
scas
ret
xchg
mov
rcll
scas
stos
lret
push
out
ss
mov
aaa
cmp
jmp
scas
cwtl
jg
rcr
int3
or
pop
into
repnz
cmpsb
jecxz
or
sub
cltd
shll
pop
imul
or
jo
adc
scas
imul
int3
xchg
xchg
leave
outsl
call
push
cmp
fbld
imul
cld
pop
pop
lods
andb
push
adc
mov
sbb
or
aam
cmpsl
out
aad
loope
mov
mov
push
imulb
cmc
dec
mov
push
sahf
shll
inc
cltd
add
jmpw
insb
pop
fcmovb
dec
int3
xor
cmc
xor
mov
hlt
jae
lret
cmp
and
cmp
jnp
lds
lret
cmp
xchg
lock
repnz
mov
pop
fs
movsl
and
cwtl
shlb
xor
mov
inc
add
mov
or
inc
jbe
insb
dec
jb
or
mov
ja
push
mov
sarl
push
xor
mov
xchg
not
dec
call
push
sbb
inc
adcb
stos
stc
stc
cmp
pusha
cli
icebp
mov
xchg
mov
shrb
pop
outsl
das
fidivrs
call
pop
in
iret
sahf
aaa
in
mov
out
icebp
adc
cld
mov
or
in
push
insb
fldcw
inc
test
push
or
jnp
mov
sbb
xor
or
stc
add
sti
pop
mov
add
add
cli
ss
in
mov
addr16
sbb
mov
mov
rolb
loopne
push
ret
repz
into
jle
enter
cmc
add
jno
ljmp
addr16
sbb
pop
adc
out
imul
lahf
jae
loopne
xchg
fs
ds
fildll
jp
sbb
lods
cli
lods
and
lahf
xor
leave
out
sahf
mov
pop
imul
ds
xor
rcll
pop
sbb
mov
lahf
or
andb
or
leave
pop
inc
sub
dec
cmp
test
mov
jnp
stc
dec
fisubl
xchg
mov
sbb
in
push
ja
in
lods
sbb
clc
jns
imul
lcall
stos
xor
mov
mov
stc
imul
aaa
out
sub
cmpsl
mov
mov
cltd
sti
inc
outsl
sbb
out
lods
aad
bound
and
mulb
enter
sahf
and
ss
push
mov
fwait
test
into
outsb
mov
pushaw
mov
mov
dec
scas
xor
push
xchg
jns
mov
popf
xchg
xchg
pop
mov
nop
psrad
dec
sbb
xor
mov
jne
dec
ds
cmp
ret
mov
or
arpl
aas
or
addl
dec
and
adc
push
enter
scas
adcb
iret
pusha
lret
nop
xchg
mov
stos
movsl
fnstenv
mov
xchg
push
mov
adc
dec
dec
imul
cltd
push
xchg
icebp
pushf
popl
sar
xchg
inc
sbb
add
push
sub
cmpsl
push
pushf
xor
fstps
call
xor
cmpsb
leave
inc
aam
dec
pop
pusha
out
xor
and
lods
shl
pop
enter
jno
icebp
sbb
test
lods
xchg
ljmp
add
xchg
add
add
cmp
movsb
jp
xor
push
cwtl
test
push
orb
inc
sbb
mov
mov
jo
push
dec
sbb
adc
pop
mov
jge
pop
popf
flds
repz
add
loopne
mov
arpl
daa
jno
jle
mov
shll
dec
xor
icebp
cmp
movsl
xchg
xchg
cmpsl
xchg
jb,pt
adc
decl
je
andl
addl
push
push
xchg
shll
inc
xor
inc
lock
or
and
nop
push
mov
push
jne
mov
imull
push
scas
inc
mov
mov
out
mov
int3
jbe
or
mov
and
xchg
mov
icebp
cmp
mov
push
cli
jb
mov
cltd
mov
stc
dec
xchg
test
fcmovnbe
jo
cmp
jae
aas
shll
xchg
mov
adc
nop
subl
notl
mov
mov
push
mov
or
push
push
mov
mov
andb
hlt
push
int3
jno
adc
xlat
add
arpl
push
adc
insl
or
arpl
gs
xchg
loop
imul
adc
out
addr16
pop
inc
pop
dec
or
imul
in
or
cltd
pop
mov
xor
or
dec
lcall
xchg
into
test
es
dec
adc
fnstenv
inc
pop
mov
aas
mov
or
mov
cmpsl
xchg
idivb
and
jle
cmp
fucom
adc
hlt
lret
lock
out
pop
aaa
mov
cmp
fcoms
pop
pop
loopne
lea
test
mov
push
outsl
or
inc
enter
lret
lods
stos
popa
orb
sahf
cltd
movb
xor
fidivs
sub
adc
pop
lds
jmp
add
push
arpl
push
inc
xor
sbb
fnstsw
mov
loope
daa
cmp
dec
sahf
lods
nop
fdivl
mov
jnp
jge
sbb
shrb
inc
push
leave
das
and
and
lret
sbb
jl
mov
test
sbb
fwait
add
mov
lds
jge
notb
fs
je
cld
cmpsl
mov
jge
sub
jo
stos
pop
lret
test
inc
lahf
pop
sub
mov
std
mov
repnz
sub
dec
jmp
adc
insl
pop
jns
xchg
xchg
fnstcw
push
enter
push
shrb
fs
xchg
aaa
xor
cmp
test
xchg
mov
mov
test
test
pop
push
jb
js
mov
stos
pop
idivb
inc
mov
mov
lods
dec
sahf
xor
push
popa
shll
enter
cwtl
test
mov
and
xchg
push
jb
dec
into
iret
push
cmp
and
mov
xchg
mov
subb
inc
inc
movsl
lods
cmpb
in
pop
dec
push
xchg
test
fcompl
fcmovnb
cltd
mov
popa
outsl
pop
dec
mov
xor
mov
add
insl
cmpsl
and
jnp
into
mov
sbb
lods
mov
jns
mov
mov
push
or
push
popf
sub
cltd
dec
bound
dec
rorl
arpl
aaa
and
loopne
jle
jb
out
enter
push
dec
inc
cmp
xor
enter
push
cli
mov
cltd
mov
in
cmp
imul
ficoml
fidivrl
jnp
decb
popf
push
gs
pop
mov
and
vmovsd
and
daa
push
lock
lods
in
jb
sbb
sbb
cmp
sub
push
sbb
scas
mov
pop
xor
push
pop
pop
mov
lods
dec
pop
adc
daa
fptan
jmp
sbb
pop
cmpsl
inc
jno
add
mov
xchg
jno
shrl
popf
shll
lahf
mov
inc
arpl
sbb
xchg
mov
loopne
je
test
imul
or
test
cmpsb
mov
mov
iret
cli
mov
xor
popf
sub
and
cmc
add
outsb
popa
adc
mov
add
lret
pop
addl
dec
hlt
stos
dec
divl
sahf
push
mov
pusha
add
mov
sbb
dec
adc
and
repz
cmp
push
out
jp
pop
call
out
cli
ret
dec
or
imul
xchg
mov
cli
shrb
pusha
fstpl
rolb
pop
add
sbb
lret
cmp
fcoms
popa
add
jle
loopne
add
popa
js
pop
rorb
loop
pop
xor
std
cmp
add
fstps
dec
mov
je
inc
mov
adc
inc
sub
mov
jno
push
push
mov
and
rcll
stos
test
das
jmp
dec
push
test
shrb
mov
xor
sub
dec
push
pop
loopne
popa
inc
xchg
sbb
lods
push
adc
sbb
pop
bound
decl
xlat
xor
pop
stos
lea
mov
repnz
vpsrld
int3
sbb
test
out
les
es
or
scas
pusha
sbb
dec
jmp
les
dec
mov
sub
cli
add
or
out
xchg
int3
dec
sub
shr
sbb
insb
adc
pushf
imul
movsl
cli
movsl
lahf
or
xchg
divb
insb
mov
bound
or
leave
push
pushf
dec
mov
testl
xchg
lret
cmp
push
mov
lods
lret
adc
scas
fistl
push
into
mov
xor
mov
shl
push
jmp
jecxz
jp
or
sub
jae
sahf
hlt
mov
adc
xchg
rolb
push
mov
mov
in
cmp
adc
icebp
movsb
push
js
dec
mov
cmc
or
xchg
insb
andb
mov
cwtl
lcall
push
adc
xorl
loope
shll
mov
push
mov
and
pop
ffreep
das
js
loop
add
pop
iret
leave
loope
jnp
jge
jmp
cmp
jecxz
imul
push
mov
sbb
adc
xor
aam
or
mov
lahf
sub
mov
andl
jg
shlb
sbb
or
sbbl
sub
inc
fsubrs
mov
and
testl
mov
inc
test
std
in
popf
fisttpll
mov
js
cwtl
mov
xchg
cmp
xchg
jae
add
mov
pop
adc
xor
mov
lea
and
pop
outsb
dec
mov
int3
leave
call
cli
popa
sub
shl
mov
sahf
mov
cwtl
or
push
xchg
jno
jg
mov
into
rolb
add
loop
sahf
add
cmp
inc
push
inc
xchg
xor
jbe
pop
rcr
inc
in
pop
imul
sub
xlat
mov
jnp
es
dec
out
sub
aam
out
gs
sub
rol
sahf
mov
aam
div
push
xchg
fnstenv
lock
subl
les
js
xorb
cmp
pop
mov
imul
hlt
mov
and
inc
sbb
es
pop
outsb
stos
xchg
jge
scas
fidivrs
or
orw
sti
out
sar
ds
mov
mov
icebp
rol
jge
rcrb
ficoms
jmp
xor
mov
sub
icebp
add
cmp
push
mov
xor
dec
sub
popf
or
inc
rcll
es
sahf
cvtps2pd
arpl
dec
mov
ljmp
dec
pop
imul
mov
push
repz
cmpsb
mov
jecxz
mov
xchg
push
sub
fsubrs
add
mov
ret
xor
xchg
xchg
vmovlpd
fdivs
bound
ljmp
outsl
movsb
enter
xchg
enter
cmp
xchg
dec
nop
and
mov
rol
test
arpl
jne
test
and
dec
lret
push
or
push
std
push
in
jmp
jnp
xchg
sub
ja
mov
push
jl
push
sub
addr16
jl
mov
sub
or
ds
mov
loop
aas
sub
mov
jle
int3
add
mov
aad
stos
mov
andl
mov
xchg
xor
cmpsl
or
mov
aad
inc
xchg
and
add
dec
add
mov
inc
xchg
rolb
xor
inc
pop
xchg
cld
cld
lods
pop
movsb
and
jecxz
repz
mov
sub
pop
push
sub
cmp
mov
lea
in
nop
mov
pop
ret
scas
sub
cmp
aad
sbb
lods
cmp
mulb
outsl
pop
push
mov
and
shlb
ljmp
fcmovne
icebp
xor
rep
dec
mov
mov
daa
mov
imul
xor
inc
scas
hlt
xor
inc
jbe
push
mov
fistpll
lret
dec
jns
jp
lds
out
dec
pop
iret
rorb
and
lret
push
pop
cmpsb
push
call
jae
lds
dec
int
or
aas
push
sub
js
stos
into
out
lods
imul
adc
xchg
mov
xor
cmp
push
fdivrl
or
or
xor
mov
adc
and
adcl
sub
and
mov
mov
jp
add
mov
pop
ss
dec
or
mov
jp
add
sarb
dec
lea
js
and
cmpsl
push
dec
jae
sub
cltd
dec
or
cltd
test
and
out
push
and
ss
push
jnp
adcb
xchg
ret
addr16
mov
leave
popf
ret
mov
push
pop
scas
mov
popf
jne
add
jle
sub
adc
xchg
mov
lock
pop
pop
pop
push
cmp
lock
pusha
fcompl
mov
out
pushf
sub
mov
repnz
mov
sbb
xor
sarl
leave
sar
rclb
jecxz
dec
addr16
ds
or
pop
and
xchg
mov
adc
sarb
stos
xchg
xor
shll
scas
or
iret
imul
cld
jae
cmp
inc
and
dec
js
cli
cld
pusha
rcrl
xchg
jbe
lret
push
inc
sbb
pushl
fnsave
pop
ljmp
jg
clc
in
jb
loope
iret
dec
dec
mov
js
jp
xor
add
iret
ja
push
movsb
daa
aas
push
outsb
ljmp
inc
fistpll
add
shrl
inc
mov
das
les
jae
sahf
jns
push
fstpl
jg
pop
mov
repnz
push
mov
jl
mov
lcall
xor
xchg
mov
mov
outsl
adc
mov
cmp
roll
test
mov
xchg
mov
sti
lods
dec
sub
popa
cs
dec
add
and
xlat
jo
fisubrl
push
pop
mov
push
bound
cs
fwait
out
cli
jno
lods
loop
xchg
dec
pop
cmp
lea
pushf
dec
inc
dec
loop
cmp
psubd
add
xor
mov
push
pusha
in
jno
dec
xor
mov
rclb
sbb
in
push
xchg
and
arpl
int3
mov
repz
fwait
subl
adcb
adc
in
es
inc
cld
stc
iret
mov
inc
icebp
rolb
add
rol
push
inc
loope
fs
pavgb
lahf
sbbb
int3
scas
nop
xor
sub
adc
push
aaa
loop
and
xchg
out
test
add
ret
or
dec
int3
popfw
imul
stc
addr16
es
mov
popf
mov
add
mov
imul
inc
jmp
testl
or
cmp
or
pusha
pop
out
das
shlb
xlat
jle
sub
stos
jg
jne
push
or
inc
pop
ret
sar
push
adc
add
mov
insb
mov
stc
lcall
jb
jg
jmp
test
or
push
ja
pop
inc
push
inc
push
mov
dec
rcr
dec
jb
xchg
bnd
and
cmp
dec
iret
mov
aam
mov
divb
jbe
sbb
pop
push
and
pop
pop
push
mov
hlt
or
xor
xor
data16
out
adc
dec
jl
xor
jne
fnstcw
inc
cmp
inc
jae
movsb
fists
test
inc
mov
add
jno
or
stc
xlat
loopne
sbb
mov
inc
sub
lds
or
jecxz
mov
out
scas
mov
xor
arpl
enter
dec
jno
jmp
inc
push
jge
daa
lods
mov
add
fnstsw
push
fmull
ss
icebp
and
add
pop
xchg
add
cmp
push
test
lahf
sbb
dec
xchg
dec
or
mov
lret
mov
push
adc
push
mov
loope
mov
leave
cld
les
mov
out
xchg
cmc
lock
xor
gs
stos
test
aas
lock
mov
jbe
mov
mov
ja
mov
push
orb
xchg
and
mov
dec
add
mov
cmpsl
outsb
and
les
addr16
cmp
add
sub
es
add
and
pop
push
mov
es
xchg
stc
clc
aam
inc
dec
mov
xor
pop
ja
mov
pop
sub
inc
inc
cmpsl
adc
loop
aaa
xchg
mov
outsb
pusha
push
sti
mov
rol
pop
xor
mov
push
ret
loopne
mov
out
outsl
jbe
adc
shrb
pop
add
lds
pop
test
mov
add
ljmp
int3
xor
movsb
cmp
mov
int3
aad
pop
cmp
push
pusha
mulb
repz
xchg
fmuls
add
sbb
push
pop
ret
jle
popf
xchg
pop
testl
rolb
lock
and
adc
lds
or
cmpsl
aaa
cmp
sub
popa
dec
push
mov
into
inc
jp
xor
sub
mov
mov
mov
test
adc
jecxz
pop
cmc
mov
push
mov
push
dec
inc
fsubrl
cmp
lret
xchg
mov
or
arpl
std
mov
xor
and
and
cmp
fidivrs
sub
dec
movb
das
dec
ret
loopne
leave
cwtl
sub
mov
mov
test
es
mov
imul
scas
je
fwait
les
lods
loop
movsb
pop
sub
test
bound
out
inc
xchg
mov
pusha
dec
pop
mov
push
sub
xor
les
inc
ss
xchg
sbb
outsb
cvttps2pi
inc
ja
pop
cltd
hlt
jge
int3
adc
flds
pop
ss
and
movsb
pop
pop
push
xchg
and
addr16
ja
ja
sbb
rcrl
aas
out
sbb
pop
mov
ljmp
ret
cmp
jo
mov
fwait
cmp
or
dec
cwtl
add
int
pop
es
sbb
pop
push
adc
div
mov
sbb
xor
cmp
push
or
mov
int
inc
jbe
lods
push
jno
push
out
jl
pop
std
jge
sbb
in
clc
push
fldt
stos
enter
dec
lcall
into
pop
cltd
mov
fbstp
add
dec
push
enter
insb
in
mov
and
mov
insl
insb
sbb
jbe
sti
ja
pushl
sub
and
aad
adc
xchg
xchg
hlt
dec
and
xchg
push
xchg
lods
pop
shrl
push
lods
cmpsl
add
mov
sub
test
mov
bnd
mov
mov
jno
loopne
lods
or
popa
dec
ret
stos
sbb
sti
out
or
xchg
add
adc
mov
push
mov
out
cmc
mov
mov
gs
mov
pop
or
sub
repnz
addr16
das
das
test
push
push
pop
enter
in
call
repz
add
inc
fiaddl
je
dec
les
inc
aam
out
adc
inc
sub
jg
gs
inc
push
inc
push
icebp
mov
and
xchg
mov
cmp
push
dec
sbb
inc
fstpt
iret
arpl
cli
and
in
jp
mov
push
gs
iret
pushl
add
jae
leave
xor
in
frstor
fdivrl
mov
repz
sbb
mov
rdpmc
enter
scas
faddl
mov
add
fsubl
mov
arpl
test
lret
xchg
je
adc
js
lcall
mov
test
pop
arpl
xchg
cmp
pop
xchg
adc
pop
mov
mov
insl
add
inc
stc
and
aas
lock
roll
lods
inc
shll
outsl
insb
insl
fists
adc
ja
dec
test
fnsave
into
mov
and
adc
shlb
jnp
jle
jmp
add
xor
js
push
push
adc
xor
lret
jg
daa
cmc
and
in
daa
adc
enter
jmp
popf
push
add
aaa
jne
out
and
pop
push
sub
jo
mov
cmp
cmpsl
icebp
mov
fs
lcall
outsb
icebp
inc
jae
call
outsb
fwait
cmpsl
mov
ja
ds
leave
mov
and
sub
cmpsb
mov
add
xchg
mov
ficoms
pop
and
push
rolb
sahf
sub
aad
ljmp
jbe
lcall
mov
int
addr16
jne
add
imulb
clc
cmc
xchg
lret
jne
mov
orb
pop
shl
ret
and
inc
pop
pop
mov
mov
lods
inc
mov
xchg
mov
movsb
movsl
addl
outsb
stc
and
fcmove
mov
adc
es
lret
jb
es
mov
aam
and
xchg
add
loop
dec
sbb
xchg
add
ffree
jns
dec
ds
jl
aaa
outsl
jl
js
jnp
ss
dec
jne
push
mov
pushf
jnp
push
ret
adc
lods
mov
movsl
out
shl
cmc
pop
sbb
stc
pusha
ss
insb
hlt
xorl
mov
imul
stos
jmp
aas
dec
bound
dec
push
shll
enter
sub
mov
roll
jb
xor
sarb
xor
push
movsb
mov
and
adc
dec
jae
test
sbb
gs
in
jno
and
ljmp
rclb
mov
mov
fwait
pop
xor
addr16
jbe
or
lret
loop
rorl
push
xor
jb
ja
mov
jl
mov
addr16
or
adc
inc
andb
adc
sbb
icebp
or
outsl
out
sub
xchg
int
cli
imul
adc
cmpsb
test
mov
push
nop
repnz
fmull
mov
imul
xor
dec
int
xchg
adc
cmp
pavgb
popf
imulb
push
bound
sub
cmpsb
imul
lock
fnsave
lods
dec
lock
inc
jmp
aam
out
cmpsb
sbb
lods
cwtl
push
std
jge
stc
mov
xchg
cmp
and
fstpt
cmp
leave
aaa
loope
mov
lods
dec
ljmp
pop
jb
and
pop
mov
dec
fwait
pop
jmp
pop
fwait
mov
dec
iret
movsb
adc
add
mov
fldcw
arpl
and
xchg
add
mov
bound
frndint
pop
push
pop
dec
ljmp
lret
es
and
push
rcrl
lret
mov
stos
dec
into
aad
shlb
push
shlb
and
imul
xor
imul
and
jmp
sub
call
fdivs
mov
pop
sub
popa
add
rcll
mov
pop
testb
call
mov
add
and
mov
jnp
shrb
cwtl
jns
cmpsl
mov
push
xlat
jbe
xor
jbe
icebp
mov
pop
jp
js
inc
and
scas
add
fiaddl
add
ret
movsb
push
clc
jl
mov
pop
popa
push
lahf
ljmp
mov
xchg
pop
fldt
mov
add
xor
clc
movsl
out
cli
cmp
push
and
fs
nop
dec
sbb
xor
cli
add
nop
jnp
sti
jbe
cmpl
push
es
rclb
sub
fistpl
into
xchg
xchg
push
cmp
rcrl
std
lods
and
inc
pop
ja
fcompl
and
leave
insb
xchg
mov
rclb
sbb
push
or
sbb
inc
jnp
push
ljmp
ljmp
sahf
dec
mov
push
push
in
out
cmpl
add
scas
lods
int
mov
out
xlat
pusha
insl
adc
data16
outsb
das
xchg
cltd
shl
inc
rorb
add
insl
jnp
jle
xor
popf
loop
sub
out
pop
pop
test
push
mov
stos
xchg
mov
cltd
int3
adcb
cwtl
mov
pop
mov
pop
push
adc
call
in
lcall
icebp
push
aad
push
jbe
mov
adc
jbe
movsl
adc
mov
xor
addr16
or
mov
fcmove
xor
cmpsb
hlt
xor
sahf
jge
mov
test
fs
adc
adc
mov
cmp
addr16
icebp
bound
mov
and
xor
and
arpl
jne
xchg
fldt
stc
cmp
popf
cli
push
mov
and
sub
scas
sub
pop
adc
push
adc
mov
aaa
out
or
push
rcll
inc
in
push
faddp
std
xor
dec
xor
adc
jg
fprem
aad
popa
aam
and
or
fstps
popf
jnp
and
jb
dec
lock
mov
cs
mov
inc
loopne
lds
xchg
outsb
jmp
mov
pop
mov
rolb
sub
or
dec
xchg
jno
and
or
addr16
add
mov
jmp
mov
in
pop
lods
and
jnp
mov
stos
out
xchg
dec
xchg
sub
xorb
int
jnp
idivl
jmp
lahf
jne
sub
cld
je
mov
sub
sahf
cmpsl
sub
push
stos
adc
cs
lahf
mov
shrb
popf
shrl
std
rcl
or
aas
test
dec
ljmp
mov
or
cmc
jns
mov
dec
fimull
mov
xor
ret
lods
xor
jl
mov
pusha
inc
jge
ja
jg
push
and
push
mov
aaa
ds
out
sbb
xor
pop
xlat
jno
jbe
jp
or
inc
loopne
scas
aas
outsl
cmp
push
push
or
sub
cmp
xor
addr16
sahf
notb
xor
stc
lock
mov
adc
xor
mov
movsl
add
push
test
xchg
inc
sti
mov
sbb
dec
sub
jmp
in
push
pop
add
mov
dec
aam
mov
and
stc
xchg
mov
xor
movsb
push
arpl
xchg
out
xor
pop
mov
hlt
xchg
iret
jmp
pop
dec
add
inc
or
fwait
adc
xor
cwtl
loopne
mov
inc
xor
cmpsl
or
bound
lret
dec
insb
es
fisubl
repz
lcall
rorb
xor
push
lretw
xor
adc
lods
insb
cmpsl
jo
xchg
fsubrl
fstl
insl
icebp
inc
mov
ds
rol
mov
orl
sbb
repz
inc
pop
in
inc
pop
mov
push
jp
xor
xchg
shlb
or
dec
xlat
subb
pop
loope
xchg
jbe
dec
outsl
call
pusha
sub
movsl
cld
notb
mov
loope
jne
daa
pop
sbb
dec
out
sub
out
ror
cmp
pop
insb
jl
sar
clc
or
and
mov
pop
dec
idivb
mov
lcall
insl
lret
sub
iret
int
loopne
mov
xchg
hlt
pop
push
fcoml
into
push
ja
roll
pop
inc
cmp
fwait
out
test
js
int3
push
xor
ret
out
dec
dec
push
in
xchg
or
insl
sub
insb
jp
xor
es
sahf
scas
pop
jle
test
inc
hlt
add
pop
mov
adc
mov
jp
call
sbb
or
cmp
dec
jmp
and
lods
insb
hlt
jne
fadd
jl
mov
adc
call
push
cmpb
and
lret
push
dec
mov
iret
test
xchg
sahf
mov
pop
cwtl
push
jg
in
push
and
mov
or
ss
shlb
mov
mov
mov
pop
pop
out
dec
push
xor
into
test
xor
cmpsb
repz
jg
adc
inc
mov
bound
pusha
outsl
jg
shll
jb
mov
pusha
xchg
mov
js
mov
bnd
not
decl
iret
or
lock
push
pop
iret
dec
xor
icebp
popa
popa
adc
shl
test
jne
cmp
iret
push
mov
rcrb
cmp
sti
ret
mov
cmc
sbb
aad
adc
ja
push
out
cli
clc
inc
test
aaa
test
and
gs
mul
out
iret
mov
pop
fldt
movsb
mov
or
out
in
inc
cwtl
push
dec
pop
push
add
movsl
cmc
mov
fldl
jl
or
lcall
inc
xlat
test
cmp
js
mov
arpl
pop
mov
cli
dec
into
or
and
das
insb
bnd
mov
inc
push
rcl
cmc
mov
and
leave
and
inc
mov
ret
lods
jmp
or
fcomps
push
mov
mov
cli
sub
cmp
stos
push
or
xchg
test
and
ljmp
push
xchg
jl
outsl
and
outsl
fprem
int3
add
mov
lods
adc
negl
repnz
aas
cmp
pop
mov
dec
push
mov
fsubs
jecxz
dec
jmp
pop
sbb
into
pop
xchg
imul
or
jo
push
cmp
idiv
pop
test
fnstenv
ljmp
mov
stc
push
xor
out
jne
loop
addr16
cwtl
and
sbb
jecxz
adc
dec
es
mov
int3
iret
xchg
mov
int
or
and
inc
cwtl
js
cli
sbb
push
shll
add
dec
lret
mov
popf
push
pop
xrelease
jle
lods
pop
idivb
bound
add
stc
jmp
dec
mov
arpl
fwait
adc
dec
call
pop
insb
xchg
mov
mov
sarl
hlt
lods
xor
movsl
out
and
jge
ds
jns
leave
jae
dec
iret
jl
add
nop
xlat
sub
jb
jo
lret
cmc
or
stos
add
xchg
xlat
add
add
xchg
stc
test
and
mov
mov
sbb
mov
lcall
movsl
mov
cltd
or
adc
mov
add
push
imul
mov
and
in
xchg
jns
lret
rcrl
push
scas
into
movsl
push
enter
xchg
xor
mov
ljmp
fnstcw
sbb
insb
adc
sbb
and
fidivs
insl
test
pop
test
dec
jmp
ja
cltd
jle
nop
xchg
add
mov
scas
or
repz
push
lret
in
dec
adc
repnz
dec
sbb
cs
jge
ds
dec
cs
and
mov
aaa
js
lea
inc
mov
inc
push
rorb
inc
outsl
cmp
ss
in
and
arpl
lret
les
and
jo
repnz
call
int
fs
xchg
dec
fcmovnbe
insl
aam
mov
stos
sub
stc
test
add
bound
mov
out
or
push
pop
rcr
movsb
inc
orps
inc
mov
jbe
pop
xorb
daa
pop
leave
sarb
dec
leave
jae
ss
jp
cmpsb
lea
stos
and
in
negl
iret
fcoml
push
jb
cmp
inc
aam
cmp
xor
out
stos
je
scas
into
and
sbb
xlat
lea
jl
daa
dec
ja
or
pop
sti
and
loopne
sahf
adc
lcall
and
pop
pop
popa
sbb
sbb
push
add
xchg
icebp
icebp
insw
push
adc
mov
icebp
adc
std
test
push
clc
mov
divb
shlb
or
std
cltd
mov
ret
jle
pop
dec
dec
test
aaa
dec
mov
xor
cmp
addr16
stc
lahf
or
or
fcoml
int3
add
add
lcall
mov
dec
loopne
push
and
imulb
jg
xor
enter
test
mov
insl
iret
rclb
arpl
pop
xor
outsb
adc
cs
insl
mov
dec
dec
iret
jno
and
cli
push
stos
cmp
xlat
subb
fwait
clc
mov
push
js
clc
or
add
stc
mov
cmp
and
addr16
xor
out
dec
sbb
push
out
xor
mov
cmp
popf
bound
xor
sub
sub
add
repnz
pop
repnz
sub
mov
fs
push
cmp
inc
jg
cmp
shrb
andb
jge
push
fildll
imul
ja
lret
xorb
pop
fiadds
add
gs
xchg
xor
fsts
dec
jge
fildll
xchg
gs
cmp
js
jae
jb
bound
test
popf
cmp
mov
shrb
enter
scas
in
ds
cld
xchg
adc
addb
xchg
adc
inc
fidivrs
xor
jge
sarl
xlat
sbb
and
lock
push
loop
and
jbe
pop
movsl
aad
and
cmpsb
adc
inc
mov
push
dec
jle
push
enter
shr
pusha
sarb
fdivrs
loop
inc
xchg
mov
popf
fdivs
push
shr
hlt
into
bound
std
addr16
fcomps
xchg
outsb
mov
sahf
test
mov
lret
addl
push
jmp
es
out
ss
adc
or
enter
jae
xor
jge
int
inc
fs
cmp
fstpt
cmp
std
xor
rclb
fs
hlt
pop
jge
fwait
cld
pop
sbb
js
dec
addr16
jg
xor
xchg
sbb
out
sub
pop
fucomp
imul
cli
mov
daa
xor
testl
jo
push
loop
out
dec
fsubrl
js
rcl
adc
push
repz
and
dec
fwait
arpl
jnp
add
aaa
scas
mov
aad
xchg
sub
loope
push
cmpsb
cwtl
sub
movsb
into
ret
mov
test
clc
enter
ret
in
pop
test
inc
xchg
adc
imul
inc
xchg
out
jmp
rorb
adc
ss
push
mul
pop
jg
sub
inc
sbb
lcall
jge
repz
adc
inc
jne
sub
xchg
push
clc
jmp
xchg
mul
jbe
in
mov
fdivp
aaa
adc
and
mov
out
push
out
sub
and
adc
cmp
rcl
stc
mov
cmc
and
bound
shlb
pop
cmp
and
scas
test
xor
sti
mov
cmp
orl
addr16
jl
jae
cwtl
pop
xor
call
adc
into
add
outsl
jo
mov
pop
addb
inc
or
add
jno
push
xchg
cmp
xchg
in
add
mov
and
add
leave
std
into
lock
cli
inc
sbb
jno
pop
xor
aam
or
push
les
fstl
mov
inc
or
test
testl
adc
cmp
arpl
fsubr
jne
or
icebp
lds
sub
inc
dec
mov
aas
sub
enter
stc
outsb
mov
inc
out
outsl
sbb
mov
shl
lret
test
sub
cmc
repnz
push
jb
push
adc
xor
xlat
pop
mov
inc
outsb
into
ret
popa
inc
jecxz
test
js
test
push
fildll
xlat
jb
push
jmp
and
lcall
xchg
mov
pusha
fcmovb
and
leave
into
test
xor
in
movl
mov
push
sbb
mov
lret
mov
pusha
mov
dec
and
mov
add
je
daa
inc
pop
fsts
adc
test
imul
das
movb
dec
test
and
or
pop
mov
arpl
inc
fiadds
or
add
add
out
dec
pop
mov
std
gs
lret
pop
fwait
xor
xor
enter
mov
adc
ljmp
test
scas
sti
stos
mov
lock
scas
xchg
call
xchg
pop
lods
dec
into
call
icebp
adc
outsb
scas
stos
imul
add
jo
popa
xchg
aam
cs
fisubrs
adc
out
and
push
lret
mov
std
int3
mov
out
pusha
push
inc
or
fcoml
cmc
in
inc
out
aaa
dec
adc
mov
xchg
inc
mov
mov
and
push
mov
repnz
dec
mov
jle
mov
inc
mov
sub
mov
jne
pop
dec
mov
out
in
outsl
adc
xor
push
jbe
push
jl
adc
fsubl
add
hlt
inc
mov
es
mov
idivb
dec
fdivrs
imul
movsb
aaa
cld
jbe
xchg
lret
fsubs
ret
insl
xor
cmp
xchg
jae
sub
enter
xchg
stos
push
icebp
inc
or
test
clc
movsb
stos
dec
and
dec
fistpll
jnp
cmpl
insl
adc
push
mov
add
divb
push
mov
jp
xchg
mov
mov
sbb
or
xor
adc
add
xchg
int
cmc
cmpl
into
cltd
leave
cmc
fidivs
bound
test
lret
push
call
jb
push
loop
dec
xchg
sub
popa
fstpt
movsb
jb,pt
aam
sbb
test
cwtl
add
es
fdivr
int
arpl
mov
dec
aas
icebp
test
ljmp
test
adc
imul
inc
popf
xor
insb
int
mov
lock
sub
movsb
adc
insl
mov
push
xchg
aas
push
mov
test
sub
push
inc
jl
pop
pop
dec
cli
sbb
leave
adc
mov
js
push
cltd
add
mov
cmp
stc
adc
cli
mov
lahf
out
lahf
arpl
jns
or
into
sti
or
or
imul
push
push
lock
cli
lods
pushl
gs
push
mov
cltd
fiadds
adc
add
iret
inc
sahf
test
add
xchg
inc
nop
mov
inc
cli
jg
xor
out
inc
lods
lds
jno
stc
adc
jno
lcall
mov
je
in
mov
sub
mov
xchg
push
pop
js
push
jl
mov
daa
test
in
int
sub
push
fistpl
fsubl
push
pop
pop
mov
mov
les
push
fldt
mov
insl
fs
loop
mov
lods
cmp
sub
das
mov
outsl
decb
test
pop
xchg
xchg
rcrb
out
xor
popa
jecxz
call
mov
dec
loopne
js
add
inc
rorl
push
ret
out
mov
xchg
mov
pop
or
insb
mov
sti
mov
mov
mov
inc
push
and
lcall
rolb
imul
fidivs
adc
cmpsb
push
aaa
imul
fisubrl
jge
jg
das
push
push
sbb
jge
popa
pop
lds
arpl
inc
cmp
mov
stos
rorl
push
or
dec
fwait
sub
ljmp
add
lock
mov
aas
scas
es
sub
test
bound
sarl
mov
mov
or
xchg
test
sbb
mov
sahf
ret
aad
jne
sub
mov
sbb
jb
cld
mov
imul
fdivrl
push
mov
lcall
sub
and
int3
adc
es
lcall
mov
movsl
or
sarb
arpl
pop
mov
jmp
xor
loopne
inc
popf
xchg
add
xor
dec
loope
aaa
add
or
outsb
xor
clc
es
or
pop
cs
or
repz
xchg
cwtl
jo
pusha
or
jecxz
es
das
stos
mov
sbb
adcl
cmc
sbb
divb
push
mov
dec
add
push
adc
sbb
dec
daa
mov
inc
xor
push
les
ss
cmp
loope
arpl
aas
mov
mov
or
adc
sbb
jb
inc
cmpsb
pushfw
stos
fcoms
sub
and
and
push
incb
inc
ds
flds
scas
mov
popf
mov
cld
cli
xlat
int3
rcll
sbb
adc
or
outsl
push
cmp
popl
cs
push
jae
mov
and
adc
mov
jo
repnz
outsb
sbb
or
inc
fwait
push
push
repz
pop
stos
lret
jmp
cmp
mov
insb
scas
push
xor
addr16
jl
and
fistpll
mov
aaa
scas
xchg
repz
push
daa
cmc
dec
ljmp
ljmp
mov
add
push
and
jg
adc
inc
xor
aas
sahf
push
icebp
push
movl
lds
pushl
lret
mov
sbb
aad
std
movl
or
jmp
cmp
daa
adc
ja
jo
stos
inc
sub
outsb
sahf
mov
notb
divb
push
leave
mov
in
sbb
imul
cmp
subl
xchg
jbe
pop
push
push
pop
sti
orb
test
adc
push
repnz
mov
mov
dec
sbbb
mov
dec
lahf
loop
std
sbb
icebp
or
or
movsl
adc
xchg
xor
scas
adc
or
pop
cmpsb
inc
and
xlat
adcl
rcrl
dec
push
jge
loope
out
pusha
mov
out
stc
stos
jb
outsl
xor
cmp
push
pusha
inc
lods
fwait
enter
decb
inc
nop
dec
xor
lahf
insb
in
lock
popa
pop
pop
fmulp
xorl
and
out
cli
pushf
push
in
mov
add
xor
lret
dec
inc
add
cli
cmc
pop
jp
loopne
ss
mov
pop
xor
sbb
sbb
mov
out
lock
mov
aad
pop
ja
loopne
mov
out
sbb
cmp
cmp
je
lcall
mov
popa
sub
cmpl
loopne
pop
imul
add
shll
cmp
add
arpl
out
pop
stos
mov
cwtl
je
popf
call
andb
inc
loopne
mov
bnd
push
mov
or
in
xchg
pop
xor
movsb
dec
jae
dec
and
jge
push
call
mov
inc
add
mov
loop
cmpsl
jns
jb
adc
adc
out
out
xchg
cld
pop
fldl
in
movsl
aam
mov
lret
scas
aam
sahf
cltd
sub
mov
pop
or
or
int3
aam
ds
mov
lret
push
sbb
cli
mov
subl
mov
pusha
xchg
jno
xchg
xchg
jo
fs
or
cmp
adc
les
fsincos
pop
sbb
int3
mov
mov
outsl
lds
push
xchg
mov
push
push
mov
mov
jmp
mov
mov
sub
mov
mov
inc
mov
pop
xor
mov
test
jmp
push
inc
fimull
and
xchg
leave
aaa
or
inc
and
lods
sbb
jae
fdivl
pushf
push
insb
and
fistpl
shrl
jle
out
pop
lret
lret
fsubrs
sub
mov
mov
or
adc
and
cmpsl
leave
cmp
les
fidivrl
or
dec
inc
aam
movsb
repnz
or
mov
sahf
fsubrs
idiv
add
add
popa
leave
imul
xchg
jae
mov
nop
in
fcmovnb
in
xor
es
mov
jp
iret
push
movsb
push
ljmp
jnp
and
dec
in
mov
in
cmp
cmpsl
popa
xchg
pop
cs
xor
adc
jp
je
test
std
cmp
xor
xchg
sub
pop
or
mov
sub
cmpsb
nop
in
das
in
and
cwtl
pop
es
mov
lock
sub
mov
or
xchg
lods
mov
push
dec
ret
jecxz
pop
add
xchg
out
pushf
lret
xor
and
push
xorb
and
pop
mov
popf
mov
pop
mov
insb
pop
and
scas
pop
xchg
lea
stc
nop
les
xchg
or
js
and
mov
adc
add
xchg
push
mov
pop
outsl
loopne
stc
loop
outsb
dec
mov
bound
push
jge
jno
lahf
ds
mov
adc
jnp
jmp
ss
js
in
inc
icebp
and
out
ja
push
loope
or
int3
scas
stos
in
push
push
jg
rclb
and
or
adc
mull
jle
xorb
mov
or
insl
adc
mov
lcall
mov
in
cmc
xchg
mov
sub
pop
sbb
shll
ret
movsb
stos
imul
cmp
pop
in
jg
outsb
cld
cwtl
movsb
and
sub
jbe
cld
cmp
addr16
in
dec
sbb
jg
fwait
std
ljmp
sub
mov
ja
lcall
dec
mov
shrl
cmpsb
or
jb
push
clc
xor
mov
rcrl
sub
add
add
push
dec
in
xlat
push
prefetch
lret
fcom
into
cmp
imul
and
xlat
lret
in
add
jbe
leave
cmpsb
nop
jg
int3
je
jbe
dec
test
sbb
aad
cmp
call
mov
jns
stc
xor
mov
pop
mov
aas
dec
aam
cmpsl
lock
cli
aas
scas
lock
inc
stos
inc
fldenv
loopne
xchg
xor
sbb
stos
scas
jae
in
adc
testl
jp
jo
scas
dec
and
mov
pop
in
test
mov
push
push
pop
mov
jg
sub
sti
out
in
dec
xor
sbb
inc
lods
shrl
sub
dec
adc
jns
je
add
test
mov
ficoms
leave
js
jno
cli
in
mov
push
test
pop
leave
add
and
adc
inc
ss
or
xchg
cltd
xchg
inc
and
imul
push
add
xor
and
int
mov
dec
sbb
sbb
xchg
adc
pushf
popf
cld
cltd
nop
mov
popf
lret
jmp
in
and
and
sar
pop
out
push
orl
pusha
sub
call
idivb
lods
adc
mov
cmp
mov
dec
leave
push
repnz
cld
xchg
mov
ja
ror
inc
xchg
scas
add
pop
imul
xor
fbstp
fs
faddp
and
or
xchg
jbe
js
mov
out
or
pop
stos
sbb
fidivrl
repnz
xchg
cmpsl
lock
lret
pushf
xor
push
insb
mov
outsl
cmp
sarb
bound
sti
adc
jle
hlt
push
or
bnd
in
stos
dec
pop
sub
fildl
fists
xor
sub
cmp
push
bound
mov
pop
test
xor
loopne
dec
jns
scas
cmpl
push
out
mov
pushfw
adc
je
push
push
xchg
icebp
push
pop
lds
andb
in
test
push
mov
sbb
cltd
pop
int
rorb
fbstp
or
adc
jle
jmp
sbb
in
mov
cli
mov
outsb
mov
inc
or
lods
cld
outsb
xchg
stos
je
mov
int3
xor
jnp
push
ljmp
popf
data16
lret
or
outsl
xchg
and
xor
clc
sbb
mov
and
scas
je
cmp
test
jg
and
or
imull
daa
lcall
lret
mov
dec
jnp
xchg
clc
jae
addr16
js
notl
insb
popf
in
cwtl
ljmp
mov
adc
mov
jno
rcll
push
stos
xchg
mov
and
inc
shr
cmpl
push
ja
add
add
or
mov
js
scas
cltd
mov
jg
ss
popf
sub
icebp
add
aam
arpl
insl
dec
addr16
cltd
iret
xchg
in
fwait
sahf
sub
mov
add
xchg
leave
repz
andb
push
imul
int
stc
jle
xchg
ret
push
fdivrp
lods
inc
enter
xchg
popa
cmp
sbb
push
sbb
ficompl
jp
cmp
pop
fists
jbe
aaa
mov
pop
dec
pop
push
addr16
mov
and
jmp
ffreep
cmp
pusha
dec
xchg
inc
icebp
or
in
inc
test
sbb
push
int
insl
adc
ja
popa
movsl
push
xchg
push
test
pop
sub
sub
mov
xor
loop
jbe
push
jbe
add
push
xorb
mov
lods
outsl
lret
and
scas
setbe
dec
fs
and
out
aas
loop
cmp
test
and
test
ret
stos
mov
les
adc
in
je
dec
lahf
xor
int
pop
pop
call
push
insw
pop
in
and
iret
jae
and
sub
xchg
mov
sub
and
cmc
call
xor
cmc
int
add
andl
sti
loopne
sub
jo
les
jp
mov
cli
sarb
dec
dec
out
xchg
jl
sahf
mov
adc
loop
jg
rclb
adc
jle
addb
in
cwtl
out
sbb
hlt
scas
out
daa
pop
mov
popl
mov
cwtl
fcoml
sbb
jmp
and
add
movsb
sub
imul
or
cmp
sub
dec
cltd
mov
cmp
gs
aaa
repz
sub
jp
inc
xchg
add
test
cld
push
mov
int3
filds
daa
in
dec
jnp
push
xchg
loop
adc
movsb
sbb
in
icebp
test
aad
cmp
jo
jno
fimull
std
dec
and
dec
xchg
jge
dec
sti
inc
add
stos
or
fbstp
daa
fimull
inc
sti
into
cltd
ds
je
jp
in
cmp
test
jecxz
push
inc
stc
adc
pop
mov
add
jb
xchg
shrb
ds
data16
ljmp
dec
addb
adcb
pusha
cld
mov
and
lods
imul
add
cmp
aam
inc
repz
out
cmp
stos
and
lret
mov
in
inc
xchg
or
cmpsl
movsb
arpl
cmp
and
xchg
scas
sub
es
adc
pop
lds
arpl
test
rorl
outsb
mov
fsubrp
xor
lds
inc
mov
lock
fdivrp
mov
je
clc
mov
inc
cli
or
aam
push
pop
mov
ret
lods
jne
popl
jecxz
fsubrs
dec
sub
jns
cmp
imul
rclb
cmp
pop
and
movsb
push
xchg
mov
es
add
jmp
stos
xor
inc
jae
mov
mulb
fiadds
imul
test
das
mov
inc
sbb
or
mov
icebp
push
cltd
iret
mov
cmp
daa
inc
clc
sub
mov
pop
fst
es
int3
jge
push
sub
std
aaa
scas
jno
das
sub
inc
xchg
stos
clc
jo
ss
aaa
push
int
aam
cmp
call
mov
jb
outsb
jg
out
enter
shll
int
pop
dec
mov
lcall
inc
outsb
das
or
inc
aad
add
aaa
jne
jp
loop
lret
sub
or
jp
test
fisttpl
push
fidivrs
daa
mov
pop
cmp
arpl
popa
inc
dec
cld
stos
dec
mov
xchg
add
cmp
mov
jg,pn
out
clc
inc
or
xor
aam
das
lock
push
sub
shll
cmp
and
ret
scas
loope
or
jne
lret
xchg
pop
mov
insl
dec
jg
push
test
dec
out
lea
popf
outsb
mov
int
repz
int
fdivp
xor
cltd
cmp
jb
inc
cmp
enter
daa
dec
and
push
popf
cmc
cmp
loopne
xor
jbe
xor
or
lods
push
roll
jo
lods
and
cmp
and
je
movsl
inc
shlb
dec
out
mov
and
mov
jge
lret
mov
cmp
mov
insb
cmc
outsb
insl
push
mov
adc
scas
pop
ret
push
bound
cli
test
out
mov
sub
sahf
lock
sbb
stos
fidivs
ficoml
sub
ja
cmp
fwait
jg
fsubr
inc
mov
sub
adc
stos
dec
popl
inc
jnp
push
iret
xchg
gs
lret
xchg
jnp
mov
stc
inc
lret
mov
je
xor
jae
icebp
stos
xchg
jl
xchg
inc
insl
cmpsb
push
cltd
gs
xchg
jae
pop
jp
dec
sarl
mov
vshufps
mov
shrl
scas
pop
mov
inc
into
inc
sarl
cmp
xchg
shll
jnp
and
mov
ds
sbb
out
mov
mov
sbb
mov
sub
mov
xchg
push
shl
movsb
clc
addr16
mov
outsl
icebp
stc
add
mov
mov
dec
test
fmul
imul
mov
pop
pop
inc
int
gs
mov
lret
mov
push
pop
daa
cmp
mov
ljmp
enter
ja
lods
aas
clc
lods
lods
outsl
jge
sbb
sbb
insb
in
jge
test
mov
or
push
xchg
cld
pop
mov
cli
lds
adcl
mov
enter
lret
jg
sub
cld
push
test
call
out
push
push
lods
lock
leave
push
aam
pop
leave
inc
pop
xchg
in
insb
test
inc
divl
mov
outsb
jbe
in
xor
mov
loopne
pop
push
add
pop
or
cmp
call
push
movsb
mov
adc
or
add
or
xor
es
pop
fmull
mov
and
ret
push
sbb
fimull
mov
lock
loop
stc
mov
cmc
hlt
loop
adc
inc
incb
mov
jno
js
int3
mov
cmc
fnstenv
jg
stos
stc
or
cld
int3
inc
sub
ret
mov
jo
in
mov
ss
nop
xchg
nop
sub
adc
dec
shrl
jb
inc
or
filds
sub
xor
xchg
cltd
xchg
ja
fdiv
xchg
inc
dec
mov
jbe
lds
pop
mov
rsm
enter
lret
movsl
lds
das
push
pop
icebp
fistl
and
imul
insl
mov
movsb
and
movsl
and
aam
push
push
inc
orl
setno
push
lahf
aam
inc
rcr
mov
and
sub
jmp
cmpsl
xchg
dec
jnp
jge
pop
negl
adc
mov
sar
mov
rcrl
call
xchg
pop
cltd
mov
sub
cmpb
cmpsl
mov
pusha
sub
xlat
pop
mov
je
mov
and
test
and
mov
sub
aaa
or
inc
adc
or
lods
xchg
inc
int
mov
mov
push
clc
xchg
std
into
xchg
dec
test
mov
sar
xorb
or
or
jg
pop
shrb
outsb
mov
shlb
enter
mov
sbb
ret
mov
push
in
or
in
mov
mov
lds
loope
cmp
sbb
pop
push
in
pop
ret
insb
adc
sbb
mov
rolb
jmp
mov
ja
jecxz
pop
icebp
roll
jae
pop
jbe
add
int
ror
adc
jecxz
pop
jne
xchg
call
inc
scas
push
sbb
jb
lea
aas
stc
js
fs
cmpsb
mov
sbb
cmp
imul
or
int3
sbb
test
push
add
imulb
stc
fsubs
addr16
jb
sbb
dec
addr16
nop
into
imul
loop
mov
jb
cmp
jns
movsb
jns
insl
inc
bound
sbb
pop
jg
jp
js
int3
push
bound
add
lret
push
and
push
pop
adc
pop
jg
adc
inc
in
adc
xchg
xor
pop
testl
repnz
clc
outsb
mov
jmp
cmp
jge
orb
mov
cmpb
add
lods
mov
lds
pop
lcall
ljmp
push
mov
push
push
cld
mov
jne
inc
icebp
cmp
fsubs
clc
xchg
shll
jmp
add
jno
push
inc
cmp
js
xchg
or
pop
mov
pop
aas
mov
mov
sbb
mov
in
mov
sub
add
add
fdivrp
test
jl
mov
dec
mov
dec
fxch
dec
cmpsl
inc
lods
insl
or
les
mov
cmpsb
jbe
fs
insl
cld
mov
jecxz
imul
pop
repnz
xlat
xlat
and
pop
mov
and
sbbl
int3
cmp
inc
mov
stc
adc
xchg
xor
faddl
sub
popf
pop
ds
rolb
arpl
out
push
sti
jb
into
js
iret
dec
pop
cli
jle
jo
std
insl
shl
int
sbb
cmpl
jge
in
jb
les
xor
scas
es
pusha
and
fmulp
jecxz
inc
and
nop
sub
inc
pop
or
jbe
jo
leave
mov
mov
dec
jns
and
lock
lds
or
rclb
in
imul
push
sub
xlat
mov
sub
ror
add
loop
inc
cli
mov
subl
sahf
dec
jno
repz
ja
ja
gs
xor
sub
scas
setno
or
and
leave
cli
repz
mov
fwait
dec
jno
xor
std
mov
data16
push
mov
test
insl
pusha
mov
enter
jno
repz
test
stos
xchg
test
loope
rolb
jo
push
ja
inc
mov
xor
out
or
cmp
or
loop
arpl
add
add
mov
mov
rcrl
dec
mov
int
lret
pushf
ja
movsl
pop
or
sbb
jo
loope
dec
push
in
sub
les
stos
jle
push
push
out
push
aad
clc
repnz
loope
xlat
bound
jo
pop
das
push
mov
pop
jae
and
inc
jnp
and
sbb
clc
or
xchg
rolb
flds
mov
mov
fnsave
cli
or
inc
repz
sub
cld
outsb
pushf
sub
sbb
push
inc
movsl
xor
or
inc
push
sbb
lods
add
ret
pop
cwtl
mov
sbb
cltd
xor
outsb
mov
and
xor
repnz
mov
xchg
scas
data16
pop
cwtl
xor
or
jns
push
in
cmpsb
rolb
lds
out
pop
cmp
stos
out
enter
jns
sub
sub
fstp
mov
sbb
and
xor
pop
int3
inc
mov
in
cmp
pusha
cltd
dec
adc
mov
add
insb
in
shrl
push
fs
mov
aad
jne
jo
adc
sbb
mov
sub
loop
lcall
pop
movsl
aam
xor
adc
add
dec
mov
ljmp
sub
inc
mov
mov
cld
outsb
pop
addr16
cli
mov
cmp
push
adc
jo
mov
add
push
jl
cmpsb
popa
lock
ret
mov
push
push
jp
testb
sbb
bnd
test
xor
testb
inc
mov
ljmp
clc
pop
stos
push
in
mov
cmp
das
cltd
or
imul
sbb
mov
rol
sub
jecxz
insl
or
test
jne
xchg
insl
test
jo
repz
push
push
fstpl
inc
cmp
cmpsl
xchg
iret
lods
push
mov
mov
push
mov
adc
xchg
aad
or
roll
out
dec
xor
in
sbb
sbb
xor
rolb
and
inc
mov
mov
sbb
arpl
outsl
cld
xlat
jl
outsb
cmp
mov
repnz
jl
mov
into
inc
add
jmp
mov
cmp
cld
adc
addb
fcomp
and
or
jg
jmp
fidivrl
cmp
lods
inc
out
clc
bound
ret
adcb
xor
cwtl
out
ljmp
cld
test
cmp
add
ret
or
repz
fs
and
test
sub
or
cmp
adc
rorl
pop
hlt
les
andl
insb
add
and
xor
cmp
sbb
mov
add
aad
pop
test
mov
jo
jbe
lret
out
arpl
cmp
jno
sbb
add
in
dec
out
js
mov
fimuls
fs
mov
lcall
int
push
frstor
adc
adc
mov
daa
leave
push
cmc
pop
xor
adc
mov
adc
scas
enter
mov
jg
scas
sarb
ss
sbb
sub
jmp
cmove
test
das
mov
add
andl
add
sbb
cmp
cmp
or
hlt
push
sub
loopne
nopl
insb
mov
std
sbb
dec
pop
jp
shlb
inc
sti
es
pop
mov
adc
fisubrs
and
int3
xor
stc
sub
inc
mov
and
repnz
push
hlt
inc
xchg
into
xchg
sub
adc
fdivl
fprem
jl
roll
mov
cmp
push
fsubrs
jb
cld
jnp
std
or
sub
lock
add
call
repz
sub
push
adc
push
jb
mov
subl
adc
xchg
xchg
cmp
mov
jle
repz
adc
orb
cmpsl
sbb
jo
fistl
sbb
push
inc
push
iret
inc
in
cltd
shrb
xchg
lret
mov
pop
imul
in
and
fbstp
xchg
call
cmc
or
arpl
adc
outsl
add
or
outsb
stos
ret
lret
sarb
dec
shll
cli
push
notl
or
xlat
test
ret
test
mov
pusha
test
and
mov
cmpsl
sub
dec
idivl
repz
or
mov
adc
inc
test
cld
lds
icebp
lret
clc
outsb
int3
mov
cltd
in
dec
push
push
pushf
lret
ja
fstpt
fstp
jae
jle
repz
lahf
sub
cmpb
pop
cmpsb
outsl
mov
and
stos
es
dec
ss
ja
enter
mov
push
push
lock
dec
cmp
jp
add
jg
dec
insl
and
ja
cmp
or
rcrb
push
mov
push
lcall
mulb
fidivs
mov
jbe
dec
in
adc
pop
inc
add
cmp
adc
filds
pop
shl
xor
lret
stos
cmp
mov
mov
repz
sub
xlat
test
rorb
aas
nop
cmp
fcoms
mov
outsl
cld
and
mov
mov
inc
lods
mov
scas
pop
inc
push
sbb
mov
incb
mov
and
dec
shll
insb
out
sub
cmp
xchg
test
add
adcb
xor
fadd
aad
test
ljmp
adc
mov
out
push
pop
sahf
or
jne
sub
imul
jae
scas
sub
push
and
inc
cmp
iret
lea
cltd
loop
lods
inc
faddl
push
push
arpl
mov
nop
pushf
and
jg
mov
out
gs
aam
mov
stos
pop
mov
pop
loopne
sti
out
sub
das
push
adc
ss
icebp
cmp
in
pop
std
add
aaa
mov
gs
push
aas
es
mov
xchg
movsl
imul
ret
xor
ljmp
insl
mov
mov
mov
pop
je
push
int
sbb
cmpsl
xchg
mov
dec
repnz
jle
or
scas
xor
adc
xor
cmpsb
push
push
ljmp
xchg
aaa
or
mov
insl
xor
adcl
lds
je
cmp
loopne
pop
nop
mov
js
mov
mov
push
fists
insl
dec
arpl
rorb
jg
es
xor
jo
mov
cmp
dec
movsl
pushf
fcomps
sub
std
int
inc
int
out
arpl
jae
push
cltd
cmp
imul
lahf
xor
sbb
dec
dec
jns
sub
es
xchg
mov
pop
mov
add
test
dec
lea
enter
mov
mov
imul
xchg
out
aam
enter
ret
sbb
xor
inc
jae
inc
andb
test
push
or
fadds
cli
cmp
jo
jmp
mov
push
lods
mov
jo
push
popf
cwtl
fwait
addps
mov
cs
cli
sub
scas
adc
inc
aas
sbb
jb
leave
mov
jl
push
inc
hlt
xchg
add
inc
jo
insl
addr16
stos
dec
sbb
xchg
dec
lock
and
call
or
jmp
push
cmp
jnp
add
cmpsl
js
inc
mov
pop
xchg
pinsrw
dec
push
xor
call
and
mov
jl
pop
call
mov
imul
jbe
inc
cmp
out
std
cmp
int3
pushf
iret
fisttpll
and
mov
aaa
mov
xchg
push
xchg
outsl
pop
test
mov
xchg
out
inc
sbb
ss
mov
sbb
movsb
into
leave
ret
xor
movl
aam
test
push
xchg
dec
test
stos
adc
out
aaa
aad
mov
push
rcrl
negb
lcall
fistpl
dec
push
int3
xor
xor
fisubl
sahf
sbb
and
adc
out
inc
mov
mov
roll
decl
cld
in
cmovbe
sub
pop
outsb
mov
loope
nop
aam
dec
and
icebp
mov
inc
jp
push
jne
imul
sahf
sbbl
stos
and
and
test
mov
jne
int3
push
pop
xor
imul
xchg
lahf
stos
int3
pop
inc
mov
sub
rclb
int
and
sub
insb
adc
rol
push
jnp
cmc
add
scas
arpl
add
and
inc
aaa
jmp
lds
scas
ss
jmp
outsb
int
xchg
insb
scas
testb
push
test
addr16
gs
and
gs
add
jb
add
mov
mov
mov
imul
shr
filds
sbb
cmp
lcall
loop
stos
adc
jb
cmp
int3
test
sub
cmpsl
push
adc
mov
enter
pusha
add
out
xchg
rcrb
dec
insl
out
ror
out
and
sub
iret
dec
leave
xor
add
lods
loopne
aas
sub
pushf
add
pop
xor
push
sub
adc
fisttpl
xor
js
addl
or
mov
mov
push
mov
mov
adc
loop
lcall
xlat
adc
bound
sti
cltd
in
decb
rsm
les
gs
push
add
cmp
jnp
cwtl
cmp
test
mov
xchg
mov
xchg
les
sub
inc
setge
es
mov
adc
fsubl
pop
jl
adc
push
test
popaw
push
icebp
cmp
ret
imul
mov
aaa
je
dec
lahf
gs
add
mov
cwtl
jmp
test
and
jne
sbb
sub
cmp
sbb
add
dec
scas
dec
adc
push
inc
cmc
jge
in
lock
stos
fcos
out
rolb
ficompl
outsb
stc
pop
jmp
out
adc
add
dec
adc
cmpsb
push
filds
filds
add
dec
mov
les
pop
icebp
into
mov
xor
xor
aad
roll
fistps
mov
lahf
test
inc
mov
adc
mov
and
fidivrs
xchg
mov
fdivrl
pop
and
ret
sahf
lcall
rcll
push
or
xlat
push
in
in
mov
dec
push
pop
xchg
ds
test
stos
add
ljmp
and
rcl
xchg
rcr
les
push
pop
jo
cmp
add
sbb
sbb
lds
leave
mov
out
and
imul
mov
ret
icebp
and
ficoml
or
mov
pop
clc
sbb
std
and
sub
pushf
xchg
jg
stos
nop
push
mov
cmpsb
mov
rolb
sar
inc
jp
inc
fwait
cld
addr16
push
in
jno
mov
je
jl
push
sbbb
out
je
dec
jmp
cmp
dec
scas
mov
dec
les
mov
scas
sar
hlt
add
out
and
cmp
jmp
repnz
lods
ja
rcrb
cmp
leave
sub
into
rcrb
or
dec
add
sbb
shll
rcrb
cmp
push
int
adc
addr16
xor
adc
push
or
pop
xor
sbb
jbe
jno
jb
cmpsb
sbb
fnstsw
inc
inc
scas
xchg
dec
fidivrs
repnz
popf
ss
in
loope
adc
sti
xor
mov
rol
lds
jnp
push
mov
push
fnstsw
add
orb
dec
iret
outsl
add
fdivp
cmp
icebp
icebp
add
push
inc
inc
xor
jp
cmp
repz
inc
shlb
adc
sbb
cs
mov
mov
lds
xorb
test
jp
daa
inc
mov
add
and
cmp
mov
in
jbe
xor
fisttps
fdivr
push
pop
testl
dec
test
pop
mov
iret
test
cmpsb
xor
and
push
mov
mov
push
stc
fistps
ret
imul
pop
xor
adc
dec
in
clc
enter
stos
and
insb
dec
shl
orl
xor
adc
test
adc
mov
in
mov
mov
nop
nop
sbb
loope
and
outsb
mov
lea
mov
cmp
jge
dec
addb
mov
test
cmc
sbb
inc
dec
add
insl
adc
loopne
dec
jmp
mov
inc
jne
pop
test
sbb
and
jle
js
lret
test
jnp
roll
iret
jne
lahf
pop
lods
mov
loopne
sbb
rcrb
xchg
cmp
cmpsl
fisttpl
lea
in
jge
hlt
add
mov
mov
xor
xor
imul
mov
xchg
mull
jecxz
and
outsb
lret
mov
pop
imul
push
push
xchg
inc
cmp
xlat
dec
push
mov
arpl
out
inc
push
add
fstl
adc
ja
inc
and
add
inc
pop
shll
dec
cs
aaa
test
sbb
mov
xchg
call
fwait
into
out
in
mov
adc
sar
lods
pop
and
iret
jne
inc
lods
enter
cltd
shlb
scas
stos
xchg
xchg
adc
or
lods
gs
enter
fwait
jb
cmpsb
xor
mov
xchg
call
aad
mov
popf
and
cmp
dec
movsb
mov
jmp
cmp
cmp
dec
or
jp
repnz
sub
adc
and
or
xchg
jne
clc
int
push
lods
sarb
mov
mov
sub
pop
and
leave
sti
sbb
movsb
orb
sbb
repnz
mov
xchg
sti
decb
shl
stc
sub
cmp
pop
inc
lods
and
stos
sbb
addr16
data16
fs
fiadds
das
jo
nop
bound
rcrl
out
fs
inc
fiadds
aam
repz
repz
sub
adc
sbb
les
or
push
jmp
inc
ficomps
pushf
mov
cmp
int
lret
aam
jne
ljmp
lds
lahf
push
inc
sti
xor
insl
lds
or
daa
and
cmc
test
or
rclb
xor
leave
or
mov
push
fwait
inc
jne
lea
xchg
dec
mov
sub
in
lock
and
addr16
cmpsb
mov
into
into
inc
xor
inc
mov
sbbl
js
adc
pop
fmuls
das
or
adc
sbbw
popl
xchg
sbb
cmpsb
add
mov
and
adc
xlat
dec
adc
inc
les
xchg
cmp
mov
mull
jb
rorb
and
push
daa
inc
bound
add
ja
pop
ds
out
divps
mov
jmp
xor
mov
dec
outsb
shlb
in
arpl
lds
add
cmpsb
stos
idivb
adc
outsb
orl
push
add
add
inc
scas
xchg
xor
sub
outsl
mov
fptan
test
mov
jl
sub
pop
jbe
arpl
sub
int3
xorl
aas
aam
popf
push
dec
arpl
and
int3
lds
cmpsl
add
jo
xchg
push
insl
scas
iret
negl
dec
fwait
adc
jmp
inc
rorb
xor
push
pop
les
stos
fbstp
xlat
es
lcall
leave
xor
xchg
stos
pop
movsb
jb
mov
push
hlt
decl
gs
adc
out
add
into
and
sbb
mov
cli
xor
add
lahf
ja
dec
xchg
sub
jle
or
test
data16
mov
adc
add
fimuls
stos
stc
ffree
bound
ret
lret
push
inc
pop
mov
adc
push
std
or
sub
dec
insb
xchg
push
repz
bound
inc
loope
nop
push
in
mov
stos
mov
in
xor
insb
add
mov
daa
rcll
mov
pop
pusha
mov
mov
pop
iret
cld
lret
sub
rorb
test
pushf
aas
dec
xor
out
ret
in
outsb
ret
sub
lds
mov
adc
hlt
xor
adc
push
bound
loopne
or
stc
icebp
push
popf
mov
cmp
and
test
xor
jns
push
cmc
stc
inc
hlt
inc
movsl
xchg
jo
movsb
lcall
or
lock
and
add
sbb
outsl
mov
js
enter
mov
ror
scas
lods
fwait
cmp
pop
test
hlt
fldl
rorl
mov
addr16
xor
orb
adc
rorl
cmp
dec
xor
add
xor
addb
mov
or
aad
rcr
rclb
push
fcomps
nop
frstor
int3
test
iret
rol
lods
iret
xor
mov
shl
xor
loope
aas
jb
and
jb
dec
int3
je
adc
sub
icebp
inc
dec
push
call
orb
repnz
pop
test
stc
sahf
repz
in
jne
pop
jae
mov
stc
xchg
mov
add
and
hlt
push
jbe
fsubr
jp
aad
aaa
jmp
push
fmul
fsubrs
add
ja
jns
imul
jnp
into
cmpsl
lahf
pop
xor
pop
mov
movsb
je
xchg
mov
lds
cmp
je
inc
xor
pop
scas
pop
lcall
add
sub
in
sets
push
loopne
xchg
mov
mov
inc
std
test
inc
insl
push
out
push
dec
test
mov
fisubl
std
out
shll
outsl
jno
ret
fwait
ss
pop
add
fcomp
push
enter
or
add
dec
outsl
inc
psubw
sbb
out
pop
arpl
out
push
add
repz
pop
gs
sbb
sbb
jne
and
xlat
pop
mov
fs
orb
cld
mov
add
es
push
out
fcomi
xor
dec
xor
add
aad
xchg
xchg
movsb
jl
cmp
aad
cmp
in
pop
and
inc
jno
jns
fdivr
sub
cltd
cld
in
mov
pop
cmpsl
out
mov
out
call
pop
xor
adc
or
cs
imul
mov
rcl
dec
aaa
sub
scas
adc
mov
test
mov
addr16
ljmp
mov
cmc
xor
inc
push
loope
mov
xchg
lret
pop
and
in
out
xor
inc
adc
dec
fucomp
imull
cmp
dec
or
ret
adc
js
dec
out
jne
or
das
insl
ficoms
jbe
adc
adc
xor
xor
push
or
jle
mov
inc
in
bound
jb
and
cltd
add
mov
cmp
aam
inc
cmp
pop
adc
jmp
enter
dec
inc
ret
xchg
js
mov
add
lds
cwtl
int
push
call
repnz
adc
loope
jmp
mov
sub
mov
push
inc
pusha
xorl
aaa
pusha
aad
mov
xor
repnz
arpl
adc
icebp
xchg
jmp
mov
out
push
jp
aaa
push
ljmp
jecxz
and
popa
sub
push
pop
out
data16
repnz
or
imul
mov
fadds
xchg
out
ss
cmp
xlat
push
cmpb
adc
xor
mov
orl
xor
jecxz
cmc
pop
mov
sub
xor
xchg
ds
mov
and
xchg
sbb
lcall
popa
push
pop
test
mov
push
jg
imul
cld
rcrl
pop
dec
lret
jp
mov
cwtl
bound
push
or
sub
mov
sarl
xchg
pop
adc
rorb
in
rcl
std
adc
jl
mov
xor
jbe
out
inc
stos
push
mov
dec
sahf
mov
push
ljmp
orb
subb
xor
lods
adc
xchg
fstl
mov
sub
pop
ret
mov
xchg
adc
or
add
and
mov
xchg
leave
gs
sub
pop
mov
and
cmp
scas
es
pushf
push
daa
clc
pop
das
outsl
lahf
jg
sti
mov
xor
mov
les
cmpsl
cld
or
xor
or
loopne
cld
sbb
outsl
les
fs
fs
cmp
lar
fs
int3
por
sub
pop
xchg
cmp
mov
mov
movsb
add
inc
aam
or
mulb
sar
bound
testl
and
cmp
mov
popf
push
divb
fsubrs
jle
push
test
and
or
mov
mov
roll
out
add
xlat
lcall
hlt
ds
mov
xor
into
daa
dec
mov
sub
inc
movsl
mov
push
inc
fs
enter
cmp
hlt
push
in
and
cli
fwait
int
cmp
std
dec
xor
aam
push
mov
jecxz
push
outsl
sbb
add
shl
xor
xchg
filds
cwtl
mov
int3
adc
or
pop
lock
arpl
cli
shlb
scas
lret
test
pushw
and
subb
pop
push
loope
jg
test
movsb
lock
mov
dec
inc
out
jae
fbstp
nop
xchg
test
jns
mov
cmc
dec
push
aas
cs
jmp
xchg
adc
sub
or
flds
movsb
lret
test
dec
aad
push
movsl
in
add
inc
xchg
and
aad
dec
jne
sbb
pushf
dec
out
dec
pop
cmpsl
inc
andl
sbb
aad
jp
push
scas
sbb
stos
cltd
sbbb
jb
fwait
xor
dec
pop
mov
cmp
push
sbb
dec
test
int
jle
repz
push
insl
mov
mov
loopne
adc
mov
xchg
ss
xchg
es
xchg
leave
xor
and
and
sub
popa
xchg
shrl
outsl
addr16
cmp
pop
lods
std
adc
in
jns
pop
cld
lods
inc
mov
add
es
ficoms
adc
inc
xchg
xchg
xor
and
pop
ret
adc
or
xorl
add
fstps
cmp
mov
cmp
xor
jno
jbe
scas
push
mov
or
jmp
leave
add
or
pop
pop
push
xchg
addb
dec
xchg
and
and
ja
pop
mov
add
ss
jp
lock
push
sti
dec
push
pop
inc
xlat
jmp
mov
mov
xorl
sbb
xor
adc
das
xchg
mov
cwtl
lcall
into
dec
sahf
addl
test
jbe
sub
and
outsl
sbb
mov
sub
mov
outsl
pop
mov
add
ljmp
lods
in
aaa
incl
inc
int3
rcrl
not
sub
dec
pop
sbb
out
sub
cmpsl
fistps
in
mov
jl
add
je
mov
fsubrl
popf
inc
pop
loope
ds
inc
icebp
out
scas
imul
imul
aad
cli
es
js
lock
pop
mov
sub
push
ds
xlat
lret
sbb
das
int
decl
and
aas
data16
or
push
adc
adc
pusha
or
fwait
sahf
push
sarl
inc
decb
fidivl
addr16
sub
inc
push
mov
out
or
mov
pop
fsincos
fisttps
stos
add
mov
mov
mov
xchg
or
in
or
jnp
mov
rcrl
cmpsl
jbe
cmp
idiv
cmp
dec
pushf
movsl
lret
and
xor
cmp
fcomps
cmp
xorb
mov
xor
cwtl
mov
sbb
dec
iret
xlat
add
xchg
fsubr
test
inc
gs
pop
pusha
es
movsb
rorl
test
fists
dec
cmp
into
xchg
jmp
sub
cmp
xchg
xlat
mov
mov
pop
push
imul
mov
push
fs
cmc
mov
ss
or
mov
jae
sti
adc
or
insb
dec
fldt
daa
mov
push
in
repz
add
in
jo
and
mov
cmp
xchg
sub
add
out
aam
rclb
int
cltd
out
adc
stc
loope
scas
cmp
sbb
in
nop
inc
shl
lcall
jmp
scas
cmpsb
mov
ds
loopnew
popa
sub
inc
xchg
add
out
cwtl
mov
push
mov
outsl
jmp
pop
clc
repz
int3
call
cmp
aaa
xchg
cmp
repnz
and
loopne
imul
and
mov
xchg
mov
lcall
adc
pushf
mov
add
fldt
sbb
in
stos
enter
sahf
xor
jmp
xchg
xor
call
adc
sub
fstl
insb
jl
pusha
xorb
push
jae
pop
lods
inc
adc
xchg
pushf
jg
test
push
and
scas
out
scas
std
xchg
sbbb
out
mov
clc
in
push
mov
fs
xor
movsb
push
lret
je
inc
sub
aaa
mov
adc
rep
fiaddl
mov
bound
iretw
adc
jp
adc
lea
adc
jno
cs
jge
cltd
mov
sub
nop
push
ja
mov
stos
push
imulb
xchg
movsl
sarb
add
mov
int3
lods
out
ret
stos
jbe
dec
mov
push
outsl
call
cmpsb
lret
mov
nopl
xor
adc
xlat
hlt
fildl
es
call
jmp
mov
repz
movsb
mov
insb
aaa
xchg
jge
nop
rcr
int3
sbb
inc
scas
mulb
inc
inc
adc
repnz
daa
push
cmc
insl
lock
push
pop
aad
out
push
pop
mov
cmpsb
out
push
imul
test
mov
dec
leave
cld
cmp
out
ret
adc
pop
mov
mov
push
call
in
sti
mov
movsl
xor
int3
xor
stos
mov
sbb
pop
outsb
out
xor
in
outsl
mov
pop
xchg
aaa
lcall
mov
inc
in
inc
mov
ror
popf
add
sub
sub
lods
inc
lret
cwtl
add
out
ds
ficompl
push
lock
sub
add
rorb
jle
push
xor
fidivrl
jnp
stos
or
add
daa
lret
cmp
pusha
push
call
in
and
in
mov
orb
sar
push
movsb
cmpsb
or
iret
sub
mov
fdivr
push
or
sti
or
sbb
sbb
mov
or
pop
jmp
insb
insb
sbb
jnp
push
rcrl
frstor
das
mov
xchg
call
scas
jge
lret
jp
dec
lea
pushf
repz
in
stos
dec
cmp
mov
in
dec
push
push
xchg
mov
jg
xchg
xchg
cld
mov
sbb
push
dec
rolb
in
push
mov
in
mov
sbb
icebp
aaa
ffree
xor
aaa
sub
pusha
pushf
into
pop
imul
inc
xchg
iret
aam
mov
orb
mov
inc
or
or
leave
dec
subl
movsb
inc
test
mov
push
sbb
mov
lahf
adc
sarb
iret
insl
sub
sti
lcall
popa
fisttps
movsl
push
loop
imul
and
int
jmp
jno
mov
stos
outsl
out
mov
loop
and
pop
orl
jp
outsl
xor
mov
xchg
outsb
jae
dec
pop
sub
pusha
or
andl
jne
out
aas
mov
dec
ds
addl
jns
xchg
xchg
add
cmpsb
daa
mov
clc
adc
fidivs
imul
sbb
jecxz
repnz
xchg
test
ret
ficoml
movsl
inc
lds
xor
stc
mov
mov
jg
or
seta
xchg
sub
jle
ret
dec
pop
clc
enter
int3
rcl
mov
jbe
pop
mov
aaa
jo
cli
adc
lods
cmpl
movl
fucompp
jno
xor
lock
push
sbb
cmp
in
cmp
int3
and
lds
jge
nop
mov
js
cmc
bound
lock
inc
mov
cmpsl
ss
js
jmp
xor
lods
mov
in
xchg
inc
jl
push
notb
add
in
inc
adc
xor
jbe
shlb
pop
icebp
inc
jo
push
rcll
or
and
add
int3
and
cmp
adc
adc
dec
inc
inc
shlb
mov
mov
aam
cmp
jge
sbb
stos
xor
lea
ljmp
cmp
add
mov
push
fidivrs
js
cmpsl
jo
jp
jne
sub
popw
in
addb
icebp
sub
rcr
sahf
pop
pop
jecxz
mov
test
sbb
iret
cmpsb
out
mov
mov
and
add
push
jno
iret
insl
mov
push
add
scas
mov
gs
pop
cmp
xorb
loope
in
cwtl
cwtl
mov
cs
mov
jecxz
stos
sbb
jnp
add
dec
push
test
int3
scas
out
subl
bnd
fsub
or
xor
notb
dec
repz
cmp
mov
push
inc
pop
popa
gs
mov
xor
mov
mov
sbb
pop
pop
fcomip
push
sub
jns
add
sub
pop
aad
inc
add
decl
aas
sub
sarl
add
lret
lds
sbb
inc
aad
push
xchg
inc
push
cmp
loope
xor
movsl
cwtl
scas
sub
mov
sub
pop
add
add
int
ja
dec
ja
push
outsb
fldenv
int
call
sti
xchg
push
addr16
outsb
jp
fsub
jbe
pop
xchg
pop
and
or
push
push
pop
push
xor
sub
mov
rcl
push
fists
mov
into
fwait
jbe
push
jmp
add
addr16
leave
add
pushw
inc
xor
outsl
aaa
int
dec
cmp
mov
push
mov
xchg
dec
je
cmp
inc
and
not
push
add
clc
xchg
mov
cmp
gs
lock
jmp
xlat
daa
push
mov
xchg
ret
pop
push
aam
int3
push
lret
je
adc
repz
in
sub
mov
hlt
mov
pushf
mov
push
mov
sub
sbb
add
mov
pushf
pusha
adc
jmp
xlat
movsb
adc
push
loopne
testb
mov
dec
push
stos
xor
xchg
loope
push
push
loop
pop
sub
sbb
lea
adc
adcl
enter
push
pop
cmp
jle
jb
out
jmp
xor
dec
xchg
xor
movsl
ret
test
jne
inc
jge
mov
insl
aad
cmp
adc
arpl
push
std
rorb
shlb
sbb
insl
fists
mov
mov
leave
and
jbe
icebp
inc
rorl
adc
repz
push
imul
addr16
or
sub
jle
cli
ficompl
push
ds
mov
fnstenv
movl
js
mov
or
incb
out
add
cmpsl
and
and
ss
jge
fdivp
dec
push
inc
inc
mov
xor
xchg
pop
aad
cmp
or
mov
dec
testb
xchg
pop
sti
cld
outsb
dec
inc
cli
mov
in
add
test
std
in
hlt
jne
mov
test
stos
dec
stos
mov
xor
sub
mov
adc
adc
fdivrl
jg
nop
sbb
inc
gs
add
hlt
and
xchg
inc
sahf
xor
movsb
xor
push
lahf
mov
cmpsb
mov
push
xchg
jl
cmc
and
adc
push
cwtl
dec
pop
xchg
cmp
std
xor
into
inc
or
sbb
xor
imul
sub
push
and
lds
sbb
xor
mov
push
cld
pop
js
pop
dec
sub
lret
pop
dec
add
sbb
popf
push
sahf
mov
xchg
or
addr16
or
mov
pop
jns
fwait
imul
ljmp
push
cli
sarl
das
adc
shlb
sub
adcl
push
pop
loope
notb
push
xchg
sbb
stos
mov
stos
jecxz
or
xchg
fstpt
pmaddwd
pop
js
push
movsb
cmpl
adc
fidivl
sbb
dec
mov
xor
into
aas
fs
or
shll
or
outsb
mov
ret
test
in
xchg
sti
and
or
das
xor
dec
mul
cli
dec
inc
insl
fdivrp
lea
sbb
or
push
push
lock
aad
testb
dec
push
lock
or
sub
stos
cltd
lret
lret
and
ficoms
dec
adc
or
rorl
adc
idiv
lret
enter
lahf
inc
cmpsb
push
mov
add
mov
mov
in
push
sbb
and
pop
movsb
push
sarl
stos
roll
dec
dec
pushf
xchg
lods
icebp
dec
or
jmp
push
int3
push
sub
sbb
negb
dec
push
loop
jno
xlat
lock
mov
jp
sti
xor
mov
xchg
add
iret
mov
lret
dec
es
mov
mov
cmp
xchg
cmp
shrl
ds
add
sbb
inc
cs
mov
jl
pop
inc
test
scas
push
or
cmc
hlt
add
jge
jne
fcompl
adc
insb
push
xor
jecxz
fisubl
cmp
sub
rcrb
data16
test
cmp
pop
xchg
lret
sub
lret
aas
sahf
push
mov
fcom
mov
daa
and
cmpsb
cwtl
sar
loopne
js
call
jg
push
rclb
pop
in
pop
imul
add
jmp
mov
cmp
sub
cmpsl
xor
fwait
xor
testl
inc
insb
dec
sbb
fldt
dec
add
lock
in
stc
dec
jecxz
xor
sti
movb
popa
pushf
mov
pop
pop
pop
fisubrs
dec
jae
std
jnp
cmp
into
jmp
icebp
sbb
mov
jnp
pushl
fwait
insl
pop
mov
xchg
imul
push
push
jae
hlt
je
or
out
call
sbb
and
cli
jle
out
jmp
inc
iret
rcrb
push
and
and
ret
dec
testl
push
pop
ja
dec
jne
push
cmpsb
pop
and
sbb
std
dec
cltd
lret
dec
push
adc
adc
movsb
daa
rclb
cmp
ret
add
xor
das
icebp
sub
addr16
js
or
in
rcrb
add
in
sbb
fwait
mov
or
fisttpl
xor
sub
and
xor
xchg
fwait
sbb
std
stc
push
inc
push
mov
in
push
mov
push
mov
ret
les
mov
movsb
and
xchg
cmp
sub
fldt
dec
cmpsl
mov
add
and
mov
jbe
xorl
xchg
inc
rorl
fs
cmpsl
inc
call
pop
test
ss
int3
lcall
cmc
xor
outsl
push
daa
inc
or
and
xchg
dec
cli
and
daa
data16
cmc
xor
daa
fs
adc
and
mov
cwtl
or
sub
mov
and
repz
inc
rolb
mov
mov
push
in
push
push
jne
mov
lea
and
pop
jns
pop
lret
mov
ret
jb
inc
jnp
movsl
sbb
cmp
and
outsl
fimuls
daa
hlt
fs
lcall
or
or
sub
fmuls
pop
push
insl
es
int
int3
lods
jmp
sub
mov
xor
push
ret
cmp
mov
je
add
sub
pusha
and
imull
out
jb
into
hlt
add
dec
insl
outsl
call
insb
sbb
add
cltd
and
pushf
addr16
dec
test
imull
xor
ss
insb
dec
jecxz
leave
fbld
sbb
cmpsb
pop
add
xchg
and
jecxz
cmp
aas
cmp
mov
lods
lcall
leave
shlb
mov
enter
iret
adc
jg
leave
outsl
pop
loopne
outsl
and
das
xor
lcall
jb
xor
mov
xorl
outsl
subb
jnp
xlat
shrb
mov
pop
jnp
dec
in
lods
mov
int
mov
mov
mov
push
das
cmc
xchg
call
sti
pop
stos
outsb
pusha
mov
cmpsb
pop
data16
stos
out
mov
cmp
imul
outsl
dec
lods
jne
push
sbb
push
mov
fdiv
mov
dec
cmc
sbb
rolb
or
xchg
enter
and
pop
mov
enter
inc
cmpsb
fdivrp
sbb
mov
sub
push
push
jb
jbe
mulb
inc
cmp
add
push
inc
sub
mov
dec
and
dec
pop
shll
into
mov
xchg
xor
incl
test
dec
aas
adc
loopne
sub
mov
mov
mov
push
popf
out
lret
mov
push
sbb
jb
fistps
movsb
push
push
sub
inc
lds
fs
shll
inc
sub
repz
and
cwtl
xchg
ja
repnz
notl
inc
sub
aad
mov
dec
cmp
adcl
scas
mov
adcb
adc
sbb
inc
ficoms
mov
fstpt
in
and
ljmp
jnp
cmc
cmp
push
sti
push
dec
insl
into
add
jmp
jo
in
rcrl
mov
sbb
or
xchg
adc
pop
cmpsb
push
inc
jae
mov
fisttpl
pop
pop
cpuid
jb
pop
xor
in
and
lret
icebp
cmpsl
mov
xchg
subl
pop
xchg
push
mov
sub
adc
mov
jns
int3
rcll
rcrb
daa
adc
adc
insb
dec
sub
adc
stos
jnp
stos
cwtl
adc
lds
pop
aam
jecxz
inc
inc
pop
in
mov
cmp
sarb
mov
cs
push
add
inc
int
mov
inc
jp,pn
repz
cli
rolb
lock
outsb
mov
bound
mov
fcmove
out
jno
out
lret
or
or
sub
mov
adc
jno
cmovg
jnp
mov
jg
les
stos
call
movb
xlat
sub
pop
nop
rorl
adc
bound
std
pop
mov
sub
xchg
xchg
inc
inc
or
andb
lods
icebp
push
and
adc
out
mov
mov
jbe
shrb
or
fcos
aas
add
inc
test
out
movsb
sbb
aas
cwtl
fwait
imul
mov
mov
mov
jle
or
jge
in
in
xchg
icebp
adc
out
cmp
outsl
or
inc
mov
dec
fs
mov
pop
gs
mov
mov
pop
sub
cmc
dec
jl
xchg
mov
in
aas
add
and
test
xchg
shlb
jne
out
ffree
push
sbb
sub
push
dec
movsl
sbbl
loop
mov
lods
mov
jp
out
xchg
mov
jmp
xchg
out
pop
ja
loopne
sub
popf
test
stos
sbb
lea
mov
cmp
mov
xchg
sbb
pop
test
dec
sub
icebp
fisubl
adc
xchg
pop
xor
or
dec
jb
fldcw
mov
add
xor
shrb
xor
cmp
inc
sbb
push
mov
pop
insl
pop
xor
push
cmp
clc
dec
and
xchg
mov
push
es
insl
rorl
mov
test
push
arpl
cltd
repz
dec
cmp
sub
iret
nop
adc
add
jge
fwait
sbb
jecxz
mov
sahf
scas
sbb
out
in
mov
xchg
mov
and
mov
movsl
cs
pop
sub
scas
and
pop
cmpsb
aas
loope
and
int
fisubrl
pop
sub
adc
stos
ror
sub
je
addl
jnp
stc
arpl
inc
fwait
jno
loopne
pop
jl
and
cmc
jne
ret
ret
and
cwtl
mov
rcr
cmp
mov
inc
jmp
sti
movsl
out
push
dec
les
mov
mov
hlt
or
cmp
xchg
out
push
ss
gs
call
shll
add
pop
or
cli
ss
mov
mov
sbb
cmp
push
repnz
add
sbb
xchg
push
sbb
adc
jno
mov
inc
sbb
loope
add
popf
aaa
mov
push
xchg
jecxz
fcmovne
rclb
mov
xor
loope
cmc
sub
jg
roll
xchg
loope
fldl
inc
lds
cli
movsb
cwtl
dec
cltd
icebp
insl
sub
push
jns
adc
push
pop
xchg
pop
rolb
inc
out
push
aam
pop
or
rcpps
aas
pop
cwtl
xor
push
popa
aad
dec
rcrl
jns
fwait
mov
inc
pop
stos
pop
mov
inc
mov
jne
cli
and
das
add
addr16
shll
xchg
sub
dec
repnz
stos
jo
xor
push
pop
cmp
jo
inc
clc
out
stos
cmp
lret
mov
or
adc
cmp
bound
inc
dec
test
push
outsb
std
xchg
xchg
xchg
adc
cmp
inc
inc
jae
icebp
js
jp
xchg
stc
jmp
sbb
inc
adc
mov
and
sbb
xor
pop
fs
and
stc
push
push
fimull
movsb
das
cmpsb
jecxz
push
pop
lret
mov
jge
add
push
push
push
out
cmp
fxch
clc
ja
mov
cwtl
pop
pop
push
inc
xor
ret
pop
mov
stos
mov
mov
mov
inc
jns
rcl
pop
mov
cli
leave
mov
jmp
bound
sbb
pop
cmpsl
push
test
aam
ret
bound
addr16
sub
mov
add
decl
mov
imul
xchg
xor
enter
divb
pop
jb
cmp
add
mov
or
shrl
pop
fucom
fildl
add
dec
lret
ds
or
dec
mov
cs
leave
mov
push
jae
cld
xor
js
jecxz
out
sbb
pop
in
mov
jge
adc
sbb
lret
mov
add
jmp
aam
lret
mov
in
lahf
mov
adc
mov
call
aad
enter
xchg
mov
mov
sbb
xor
mov
arpl
xchg
outsb
mov
jmp
jno
sub
xchg
cmp
and
nop
ret
xchg
xor
sarb
jmp
aam
out
es
out
sarb
adc
add
cmpsl
icebp
cld
fldz
jle
mov
lea
sbb
cwtl
js
out
adc
popa
sub
dec
lcall
lods
int
xchg
add
or
daa
cmp
arpl
jns
in
xor
cmp
pop
inc
icebp
stc
lcall
fists
push
and
cmp
cmpb
push
sub
adc
sub
inc
hlt
xorl
call
cmp
and
mov
sub
gs
inc
and
stc
je
imul
in
dec
pop
mov
ds
pop
fisubrs
fs
lds
ret
iret
inc
push
hlt
adcl
icebp
into
dec
sbb
pop
movb
sbb
push
insb
mov
lds
mov
jnp
ds
shlb
leave
pop
pop
lea
add
fsts
adc
xchg
das
popl
and
test
adc
mov
out
fucomp
dec
sahf
fists
push
add
outsl
xor
inc
fildl
aas
push
cmp
pop
loop
add
data16
sbb
jle
xchg
negl
ret
mov
test
sub
and
repz
add
add
mov
daa
outsb
add
ds
sbb
ss
aam
jno
jl
xchg
inc
mov
sbb
pop
or
out
or
fwait
sub
lea
lahf
enter
outsl
pop
push
call
push
xchg
mov
iret
stos
or
dec
aad
fs
lcall
aas
mov
sub
mov
push
int
or
mov
push
fimuls
inc
jecxz
loope
and
adc
push
mov
ds
pop
xchg
xchg
fsubr
lret
jnp
pop
loopne
lds
xor
aam
cmp
inc
in
push
xchg
ja
out
mov
subl
imul
dec
adc
or
adc
pop
push
sbb
ss
adcw
insb
add
les
inc
pop
pushf
out
andb
dec
sbb
jge
insb
rcrb
mov
push
mov
sub
mov
mov
add
xlat
mov
nop
aam
mov
sbb
add
in
pop
bound
xchg
fucomi
mov
sbb
sub
ss
outsb
addr16
mov
mov
pop
and
test
out
dec
and
stos
fisubl
iret
sbb
daa
cmpsl
in
ret
add
sbb
mov
jg
lods
in
xchg
lcall
sbb
or
sarl
and
cli
roll
adc
pop
xchg
cmpsl
adc
mov
sub
add
idivb
pushf
cld
inc
push
inc
mov
cmp
mov
mov
aas
cmp
adc
in
orl
cmp
out
out
pop
mov
cld
rol
lcall
xorl
lods
loope
insb
imul
into
out
jnp
mov
jo
mov
stc
std
cltd
das
hlt
pop
fdiv
scas
icebp
in
jno
icebp
dec
lret
mov
mov
out
into
dec
push
into
shlb
addr16
mov
aas
scas
inc
push
mov
sbb
sbb
dec
lret
xor
push
add
xlat
test
ja
pop
daa
das
in
lcall
xlat
outsb
adc
jp
jg
inc
addr16
xor
inc
sub
jle
and
adc
or
cwtl
data16
insb
repnz
sbbb
xor
in
or
leave
cltd
sahf
in
outsb
sbb
sbb
xchg
sbb
sbb
imul
mov
and
inc
imul
lods
out
push
sahf
repnz
add
pop
insb
mov
movsb
ret
pop
mov
push
mov
mov
pop
push
xchg
enter
loop
and
inc
mov
test
shl
dec
addr16
repnz
xchg
jp
fs
mov
ret
cmp
push
adc
cmpsl
mov
inc
sub
cmc
mov
loopne
inc
mov
and
push
pushf
mov
sub
dec
cwtl
cltd
jmp
xor
stc
inc
or
js
ljmp
xchg
in
or
xchg
cmp
sahf
xor
aad
xchg
loopne
ljmp
or
fcmovu
ficomps
adc
pop
popa
or
and
imul
push
loopne
ror
in
cs
sub
xlat
aaa
mov
fisubs
scas
ret
jo
enter
mov
push
js
jg
out
jne
mov
add
or
out
addr16
dec
icebp
idivb
push
mov
lcall
imul
and
sub
mov
or
mov
jb
roll
icebp
cltd
add
call
jp
mov
popf
pop
or
pop
les
out
cmc
out
lret
lods
ret
in
loope
jl
adc
and
das
ljmp
ljmp
push
xor
add
loopne
adc
ja
aaa
lahf
shlw
xchg
sub
jmp
push
jb
and
loop
lcall
rcrl
das
aad
mov
out
pop
imull
jp
dec
jno
hlt
pop
push
dec
divb
fmull
out
outsb
icebp
loop
jge
leave
inc
ds
aad
pop
pop
insb
nop
mov
inc
dec
fcomi
sub
jne
insl
addr16
pop
std
shrb
repnz
sub
or
mov
bound
push
xlat
sbb
cmp
or
stos
nop
test
inc
stc
or
xlat
pop
pop
ljmp
mov
nop
jnp
cwtl
stos
cmpsb
ss
aas
sahf
sbb
jb
xchg
dec
lcall
stos
test
xor
mov
xor
dec
jb
imul
dec
rorl
pop
push
je
and
inc
outsl
and
incb
das
imul
pushf
sbb
and
and
cs
in
sub
cmp
sub
push
dec
or
test
mov
push
xchg
es
cmp
adc
stos
sub
mov
lea
fsubl
out
push
stc
or
je
sub
jmp
aam
lods
hlt
sub
imul
push
add
mov
lods
dec
dec
repz
push
inc
aas
loopne
mov
repz
mov
aad
cmc
inc
mov
push
imul
inc
cltd
outsb
adc
adc
mov
in
js
or
in
std
and
out
adc
addb
jno
push
or
in
lcall
cmp
cmpl
movsl
dec
xchg
xor
sbb
inc
or
aas
sti
mov
inc
test
xor
mov
sbb
mov
adc
lock
aad
lret
outsb
test
add
cmp
jo
xchg
cmpl
xor
cs
push
sarl
roll
testb
js,pn
push
add
jmp
adcl
or
adc
or
xor
dec
push
cmp
iret
mov
mov
cmpsb
xchg
lcall
pop
push
xchg
add
pop
pop
mov
adc
push
xor
sbb
mov
mov
sub
shlb
shlb
in
jo
push
mov
xchg
xchg
leave
pop
mov
xchg
cmp
mov
call
rcll
out
mov
mov
aaa
movsb
js
or
sbb
xor
cmp
lock
in
std
lret
aad
cmc
jmp
aad
pop
andl
mov
and
add
inc
dec
out
insb
lahf
inc
add
sbb
jns
addl
dec
pop
add
sub
jb
ficoms
fnstsw
inc
shlb
jno
or
add
mov
adcb
out
aas
ja
into
inc
mov
cmp
fsubp
pop
push
aaa
imul
cli
xchg
mov
sbb
push
mov
xchg
ja
in
xor
fildll
jo
and
fistpl
pop
pop
les
test
rcrl
mov
cmp
test
bound
jno
jo
stc
add
sarb
mov
or
sbb
mov
lahf
aaa
stc
ret
mov
mov
lods
mov
std
dec
cmpl
ss
jno
out
inc
sub
dec
dec
and
call
imul
ss
xor
lcall
jb
mov
jns
aas
bound
inc
jge
cmp
sub
loope
pop
pusha
mov
jae
inc
fldl
loop
cld
es
std
lahf
jmp
adc
jge
pop
or
pop
popa
mov
ja
inc
outsb
sbb
movsb
ret
iret
mov
sub
rolb
adc
adc
cmp
jnp
ds
int
fisttps
jle
ja
sbb
loop
shll
or
xchg
mov
xor
add
jge
mov
pop
outsb
push
xchg
rclb
inc
lods
scas
push
inc
in
push
xlat
adc
jnp
xchg
out
sbb
inc
ds
dec
lds
sub
or
int
in
lret
jp
iret
cmp
push
xlat
jne
jns
sti
xor
add
insb
adc
cmpsl
inc
jmp
sbb
sbb
sub
adc
daa
stc
in
fidivl
fnstenv
imul
scas
jne
jo
mov
aaa
jns
sbb
push
inc
iret
dec
mov
pop
jmp
lea
arpl
mov
ljmp
sbb
lret
jbe
lret
scas
mov
add
cli
stos
cld
aad
test
jno
rcpps
arpl
fs
cmp
push
push
sub
pusha
mov
adc
lret
xchg
add
frstor
mov
and
pop
inc
fistpl
std
aad
jmp
push
cmp
out
mov
jae
mov
mov
jbe
push
out
sub
add
pop
mov
ret
add
ljmp
adc
jo
and
data16
xor
push
cld
shll
adc
jle
cmp
les
fstp
sbb
movsb
cmpsl
mov
out
in
pop
dec
mov
out
xor
movsl
sbb
xor
add
imulb
mov
and
icebp
xorl
dec
dec
pushf
xchg
or
cmp
cmp
cld
mov
cmp
or
push
add
pusha
mov
push
imul
xchg
pop
push
mov
jmp
push
mov
sub
les
lods
test
ret
and
jmp
data16
into
sbb
lea
les
hlt
push
pop
notb
mov
mov
mov
js
outsl
addl
xchg
inc
shlb
or
sarl
in
mov
jae
popf
subb
ret
xlat
inc
mov
cmp
inc
ja
cmp
push
imul
test
mov
and
fistl
inc
jnp
daa
add
or
nop
jmp
sbb
aam
mov
jp
lahf
addr16
inc
pop
cs
or
push
inc
pop
stos
push
jne
cmpsb
sbb
stc
inc
push
and
mov
fcomps
out
xor
fs
xchg
in
mov
add
pop
sbb
in
mov
imul
fisttpl
movsl
sbb
sbb
or
jae
mov
xchg
pop
push
jge
mov
sti
fcompl
sbb
inc
popl
filds
mov
sbb
jle
nop
sub
loopne
popa
stc
xchg
pop
pop
mov
xor
in
pop
jae
jne
add
sbb
dec
cld
movsl
jge
shl
adc
xor
dec
es
scas
dec
pop
call
shll
popl
pop
mov
cmp
inc
xchg
jbe
cli
cmp
jo
push
loop
cmp
out
pop
dec
mov
nop
into
aaa
outsl
sub
jmp
add
lea
jl
add
sbb
mov
jbe
dec
jle
mov
mov
pop
fldl
mov
push
adc
add
stc
mov
jo
xchg
mov
push
dec
xor
outsl
hlt
fs
jno
mov
mov
cmp
and
inc
js
in
jle
pop
push
ljmp
cmp
add
stos
into
mov
call
jge
mov
mov
cmp
lahf
pushf
xor
out
pop
lds
jae
aaa
inc
mov
xlat
and
jo
out
and
mov
or
fstps
pop
das
outsb
in
mov
in
jb
jns
mov
imulb
dec
xor
ljmp
or
in
je
cld
rcrb
movsb
push
adc
rorb
mov
lcall
mov
js
fs
pusha
call
mov
test
xor
or
cmp
sub
mov
aam
and
mov
mov
push
sbb
pusha
fsubrs
xchg
shll
push
loop
leave
add
sbb
or
sbb
rorb
add
sub
sbb
and
out
lds
dec
sahf
enter
test
mov
jg
mov
hlt
call
push
push
ret
add
jbe
and
cli
mov
gs
aaa
adc
popa
push
in
push
inc
sub
sbb
cmp
test
push
jl
push
mov
mov
loop
pop
negb
jb
inc
mov
aas
insl
bnd
aaa
cmpsl
frstor
lea
hlt
pop
lods
mov
outsl
mov
and
sbb
loope
pop
cmp
pop
mov
sub
lea
push
les
les
fimull
movsb
into
leave
rclb
stos
sub
jmp
sahf
mov
enter
xor
add
xchg
movsl
dec
mov
in
jp
sub
pop
mov
push
repnz
inc
xchg
and
int3
mov
stos
mov
lret
jmp
outsb
idivb
ljmp
mov
xchg
dec
cmpsb
xchg
sbb
lret
ret
xchg
leave
into
je
testb
add
inc
jno
fildl
mov
in
push
iret
andl
loope
pop
sub
xchg
dec
je
icebp
fldl
pop
sub
rclb
or
pop
cmc
dec
push
cmpsl
lods
icebp
xor
push
push
int3
out
fs
fistps
testb
mov
aaa
pop
ds
sbb
sbb
jge
arpl
xchg
ret
jecxz
iret
sbb
sub
jecxz
bswap
icebp
movsb
mov
sub
push
or
int
xchg
xchg
imul
jmp
or
sub
stc
in
jbe
xchg
frstor
stos
mov
mov
sbb
push
lds
dec
adc
rcrl
mov
mov
movsl
inc
test
aaa
frstor
cmp
jl
adc
jo
xor
mov
mov
loope
cmp
sub
test
jnp
mov
add
adc
mov
out
jecxz
push
pop
sti
fsubr
pop
inc
push
dec
lret
out
mov
cld
xchg
shrl
rcl
or
add
pop
idivb
sub
sub
imul
inc
xchg
xor
push
js
and
cmc
pusha
in
pop
sbb
mov
sub
and
jg
pop
mov
xor
push
sub
js
sbb
pop
and
jne
push
rcrb
ja
jno
add
sbb
mov
cltd
mov
add
dec
pop
mov
out
bound
sub
insl
push
mov
sub
je
test
cld
popf
sarl
mov
mov
xor
mov
push
cs
imul
or
dec
sub
cmp
mov
jmp
bound
xchg
hlt
xchg
xor
sbb
inc
jl
mov
push
push
test
dec
and
lcall
mov
imul
push
sbb
adc
mov
sub
shll
xchg
jne
out
lods
mov
lods
xor
clc
push
rorb
xchg
lods
or
pop
adc
arpl
xor
clc
fldcw
hlt
loopne
icebp
notl
dec
imul
sarl
jae
push
ret
push
cmp
mov
pop
adc
push
inc
imul
mov
imul
js
mov
and
testl
cmp
lahf
dec
idivb
sbb
ror
cmpsb
sub
mov
or
xchg
loop
add
lret
and
mov
jnp
dec
bound
cmp
pop
add
fcoml
imulb
loope
imul
jl
push
rcll
test
or
lea
jge
ret
cli
das
pop
shrb
mov
cli
jo
or
js
mov
add
add
scas
sub
adc
shl
or
inc
out
imul
sbbl
bound
and
outsl
xchg
lret
and
outsl
pop
xchg
dec
xlat
imul
adc
gs
xchg
dec
cli
mov
sbb
push
cmpsb
pop
popf
aaa
dec
jmp
mov
insb
sbb
xor
pop
lret
or
or
lds
pushf
jbe
add
orl
or
xor
mov
mov
xchg
daa
cmpsb
aam
xor
mov
cltd
jo
nop
add
mov
fsubl
cmpsl
inc
cmp
pop
sbb
and
inc
mov
mov
mov
inc
or
jmp
adc
sbb
pop
test
clc
icebp
stos
jno
sub
ds
jne
add
cmp
push
xchg
test
push
fucom
jne
cmp
mov
popf
inc
xchg
mov
jle
icebp
cli
or
and
jmp
dec
outsl
inc
std
fists
push
cmp
das
sbb
xchg
pushl
inc
das
out
and
mov
lret
jge
pushl
lds
ja
mov
xor
dec
lret
pop
or
bound
nop
dec
ss
pop
fsubl
stc
daa
into
mov
lret
pop
mov
jecxz
jecxz
scas
hlt
or
subb
jmp
out
imul
xor
xlat
dec
rcr
push
lea
scas
iret
cld
ja
and
nop
repnz
test
xor
enter
pop
mov
rorb
popf
insl
inc
hlt
lahf
sbb
testl
inc
stos
je
scas
cli
dec
mov
sahf
loop
scas
shrb
mov
dec
or
outsb
or
leave
idivb
aas
mov
mov
sbb
xchg
jns
int
or
mov
in
ja
dec
stos
sub
repnz
cmp
idivb
int
mov
and
pop
add
xchg
ljmp
push
jo
sub
xor
or
mov
xor
lea
stos
inc
mov
sub
sarb
adc
jecxz
xor
sub
daa
test
dec
xchg
stc
push
aam
sbbb
pop
cmp
ficompl
xorl
and
or
int
lret
sub
adc
loop
add
ja
sbb
xor
push
adc
mov
add
cmpl
pop
or
push
aas
rolb
add
aad
mov
add
pop
adc
add
mov
pop
cli
or
sbb
iret
or
js
popa
out
fsubl
pop
ds
incb
pop
push
cmc
cmp
add
sbb
add
cmp
mov
and
dec
push
push
shrb
or
mov
sbb
mov
jmp
xlat
pop
dec
in
and
ds
pop
jno
int
and
sbb
sarl
mov
cmp
mov
adc
sbb
out
mov
adc
mov
lods
adc
mov
xor
bound
xor
fsubrs
dec
xchg
mov
pop
dec
out
add
jmp
lock
jno
inc
jns
les
xchg
jo
mov
cli
ja
imul
cmc
add
shlb
adc
out
xchg
jmp
push
out
xor
rol
and
shr
repz
stos
ss
xchg
jmp
pop
xor
push
sbb
sub
mov
nop
mov
xor
les
xor
sbb
mov
pop
adc
xchg
adc
hlt
or
insb
leave
inc
pusha
pop
pop
cmpsl
bound
add
xchg
repnz
mov
into
movsb
lods
movsb
adc
sub
xchg
cs
jb
ret
mov
sarl
mov
subl
mov
dec
loop
push
addb
pop
in
arpl
push
mov
adc
insb
push
adc
inc
mov
dec
cli
lahf
and
pop
mov
sbb
dec
pop
insb
push
and
and
mov
sbb
push
push
lds
cld
dec
jns
addr16
mov
mov
adc
xchg
inc
js
add
lret
aaa
cli
mov
jne
sbb
shl
push
stos
ja
sub
xchg
inc
movsb
test
mov
pop
out
cmpsl
mov
pop
jns
in
fucomip
leave
cmpb
sbb
outsb
cmp
xor
adc
daa
in
jg
fidivl
xor
mov
sub
xchg
inc
ret
cmp
mov
push
arpl
mov
pop
in
mov
xor
cmpsl
push
ljmp
imul
mov
push
js
gs
xor
xor
popf
fcmovnu
addr16
sub
sbb
mov
sub
arpl
lods
and
cld
cli
movsb
and
jo
jg
push
leave
lock
jbe
mov
cmpl
insl
sbb
mov
stos
dec
mov
jbe
mov
jl
mov
js
pushl
mov
jno
int
jecxz
inc
push
or
mov
adc
inc
push
dec
inc
xchg
add
outsb
jge
gs
mov
imul
add
push
and
pop
pusha
out
add
mov
rclb
dec
hlt
es
outsb
rolb
out
add
sub
icebp
add
jmp
push
repnz
ret
jl
cmp
xorb
out
aas
fistl
cmp
inc
sub
in
test
mov
push
arpl
inc
je
inc
mov
cmp
movsb
mov
dec
xor
or
nop
jbe
mov
or
cmp
les
sub
and
divl
push
add
int3
cmp
xchg
iret
fadds
scas
xchg
les
and
mov
ljmp
push
cmp
cmpsl
jg
push
pusha
aam
adc
push
hlt
sub
adcl
xor
add
popa
int
or
xor
lock
mov
shl
push
lahf
push
xchg
xchg
push
test
bound
ror
mov
mov
dec
lret
dec
enter
gs
push
or
and
sbb
in
sbb
mov
incl
lods
mov
in
xor
pop
xchg
dec
xchg
neg
pushf
xchg
leave
sbb
inc
movsb
mov
xchg
nop
in
insb
adc
fnstsw
pop
cli
loope
jbe
push
ss
cmp
pushf
call
out
jge
pop
std
cld
pop
mov
popa
mov
inc
and
stos
cmp
cmpsb
push
add
mov
sbb
pop
sbb
push
call
aas
pushf
aas
add
jle
cld
in
in
mov
movsb
sysenter
scas
jb
movsl
ss
outsb
xchg
popf
test
jmp
scas
fs
sub
xchg
bound
jle
stc
fnstsw
xchg
in
call
add
jne
lock
sti
jns
cmp
lret
shlb
xchg
pop
pop
push
movq
add
hlt
mov
jnp
mov
lret
pop
add
pop
mov
pop
inc
sub
mov
cmpsb
arpl
popf
mov
movsl
push
sub
mov
cmpsb
repz
sub
cld
and
jns
push
bound
popf
xor
mov
or
shlb
test
sbb
mov
pop
stc
jle
sbb
jnp
daa
sub
jge
data16
push
push
push
mov
movsb
pushf
ss
fstl
mov
sub
fsubl
pop
xchg
mov
lods
push
fimull
jmp
mov
in
popl
and
jae
jl
gs
bound
xchg
or
inc
and
fs
pop
repz
dec
aad
sbb
cmp
cmpsl
fstl
sti
popf
push
xor
in
repnz
aad
push
les
adc
cmc
popf
sub
gs
rorl
scas
imul
cmp
xchg
xor
dec
jl
lods
sub
call
iret
push
dec
sub
test
lods
mov
sub
mov
mov
sti
test
xor
mov
and
jecxz
xchg
int3
adc
das
ret
add
mov
insb
add
out
clc
adcl
bound
jecxz
pop
in
fmul
out
xchg
adc
xlat
or
dec
xor
jns
mov
bound
push
into
inc
dec
push
outsb
mov
ss
inc
sub
leave
outsl
jo,pt
cli
iret
push
jae
out
fbld
repnz
jno
icebp
inc
mov
adc
jge
dec
into
and
jno
lea
lea
fisttpll
loopne
adc
cmp
es
lret
pop
mov
out
test
rclb
xchg
or
or
loope
adc
jbe
fs
pop
xor
gs
cmp
jp
xchg
mov
lret
stos
insb
outsb
cmp
pop
inc
pop
mov
lret
fdivrs
xchg
fwait
cmp
std
int3
xchg
call
mov
pop
xlat
insb
test
push
hlt
ljmp
outsb
aam
push
push
mov
inc
inc
call
add
lret
cmp
mov
popf
jp
mov
shlb
push
jne
je
testb
add
lahf
cmp
icebp
or
cli
mov
and
sub
mov
push
mov
jns
bound
mov
sbb
movsb
dec
jge
mov
je
sbb
movsb
sbb
pusha
push
pusha
sub
sub
fwait
test
push
push
mov
push
ja
inc
push
cli
mov
add
and
push
mov
fwait
cmp
outsb
mov
std
push
xchg
test
test
mov
mov
xchg
xor
xchg
addr16
xorb
cmc
ljmp
aam
lods
cmp
mov
or
push
call
movsb
lods
lds
mov
hlt
push
cmp
dec
rcl
cltd
incl
pop
cmp
mov
pop
daa
clc
mov
push
adc
sub
subl
adc
ret
push
out
jne
push
stos
cmp
jo
pop
fdivrl
jo
push
xchg
fldt
add
adc
pop
pop
push
repz
xchg
sub
cltd
adc
xchg
fisttpl
negb
sub
lcall
mov
fwait
pop
dec
inc
cmpsb
adc
adc
mov
sti
popf
es
cli
xchg
out
push
xchg
adc
add
mov
adc
cmp
sbb
dec
cmpsl
sub
test
mov
ret
jo
mov
mov
mov
pandn
cltd
pop
movsl
into
add
push
pop
mov
xchg
sub
int
pop
jecxz
fwait
jnp
stos
mov
inc
je
and
test
scas
mov
nop
push
push
js
shlb
dec
out
cmpb
cmc
idiv
mov
movsl
add
test
sbb
add
out
aam
lahf
mov
adc
xchg
sar
xchg
pushf
mov
aaa
and
pop
cli
adc
and
mov
xchg
mov
mov
cld
push
mov
mov
dec
mov
sti
gs
and
mov
or
pop
xchg
fnstcw
inc
add
xchg
fnsave
rorl
sub
cltd
xchg
sbb
rcr
adc
rclb
sub
pop
inc
pop
fistps
fwait
das
mov
sbb
in
jbe
and
xchg
cmpb
repnz
xchg
mov
inc
xchg
cmpsl
popf
cmp
adc
add
mov
in
xchg
adc
es
push
stc
pushf
clc
cmpsb
push
mov
push
popf
test
jle
push
add
movsb
push
jp
adc
pop
adc
sbb
xchg
dec
push
push
imul
sbb
leave
lea
jo
and
mov
fsubrp
sar
cmp
enter
mov
push
mov
jb
cmpsl
mov
jp
loopne
sti
mov
xchg
pop
push
jmp
pop
mov
adc
inc
mov
add
js
jnp
inc
mov
cmp
jg
pop
add
and
std
data16
js
popa
fnsave
and
lods
filds
cmpsl
into
mov
test
or
les
pushf
lret
rcrb
mov
repz
shll
and
mov
mov
pop
lret
adc
push
pop
push
jo
mov
sbb
pop
imul
test
or
and
mov
ror
inc
flds
es
sub
push
inc
inc
pop
push
ss
xchg
mov
dec
pop
into
mov
jnp
push
sbb
bound
inc
mov
inc
scas
push
icebp
enter
fwait
xchg
in
in
or
mov
lds
jbe
xlat
repz
jmp
cmp
mov
mov
imul
lcall
xor
fcmovne
test
inc
out
cltd
adc
inc
jno
xchg
subl
and
daa
outsl
lods
out
in
popl
sbb
pop
push
mov
in
push
pushf
out
out
stc
and
sub
clc
mov
dec
andl
and
test
adc
jle
jb
rclb
pushf
in
xor
ja
mov
sbb
inc
sbb
and
jmp
push
repnz
mov
or
mov
jns
scas
imul
cmp
icebp
cmpsb
push
or
jb
mov
pop
mov
lahf
cmp
cmp
adc
ja
push
lods
std
negl
inc
lods
mov
dec
int3
or
in
xor
or
inc
mov
fdiv
in
jne
jp
xchg
clc
and
pop
movsl
push
and
dec
bound
mov
test
xchg
lock
sbb
sahf
mov
fwait
jns
loop
mov
and
ss
dec
pop
loopne
sti
bound
mov
xchg
inc
bound
pushf
push
shll
xor
mulb
xor
sarl
test
hlt
frstor
std
lcall
and
sbb
pop
add
iret
sbb
int3
ljmp
adc
fistpl
pop
loop
add
xor
iret
push
lea
mov
ret
xchg
cmpsb
pop
dec
xchg
jp
daa
adc
test
pop
mov
std
dec
add
sub
adc
lahf
add
mov
out
adc
push
cltd
mov
fsts
lret
pop
sub
cli
fs
scas
adcb
sahf
sbb
int
movsl
xor
ja
div
insl
fiadds
adc
ret
fcomp
vmread
push
movsl
lods
jl
mov
pop
in
mov
mov
dec
cmp
sbb
int
cmp
dec
repz
movsb
int
icebp
outsl
dec
sub
mov
int3
test
pusha
jns
sub
loop
inc
lods
test
orb
push
mov
mov
lods
xor
jns
xor
popa
jp
jb
sbb
in
xchg
cmovnp
inc
stos
fiadds
in
test
lret
rcrb
push
jle
hlt
movsb
cwtl
sub
mov
iret
xchg
imul
inc
mov
outsl
pop
out
push
dec
sarb
out
cli
cmp
lcall
jne
adc
fcompl
inc
push
add
xlat
dec
cmp
pop
arpl
sahf
out
aad
out
dec
and
int
mov
jmp
mov
popa
dec
jg
pop
and
adc
xchg
jmp
sbb
jmp
movsl
sti
aam
orl
jmp
mov
xchg
xor
push
or
xor
fbstp
xor
dec
popa
jns
mov
orl
out
xor
cmpsl
ds
jb
xor
mov
mov
or
in
push
cmp
dec
jae
mov
movsl
lcall
mov
sbb
scas
js
mov
xor
xor
cmp
outsb
xchg
push
mov
pop
daa
fcomp
mov
cltd
lock
roll
xchg
and
js
pop
and
dec
push
sbb
and
xor
rorb
adc
ljmp
mov
mov
lcall
xor
in
mov
outsb
in
adcb
sub
cmpsb
jmp
cwtl
imul
add
adc
adc
push
or
call
addl
fs
mov
les
push
add
pop
and
mov
push
cvttps2pi
jecxz
cmp
test
mov
insl
lret
sbbl
out
adc
add
push
adc
cmp
mov
push
outsl
lret
aas
imul
cmp
daa
xlat
xor
daa
ret
sbb
mov
jle
loop
lret
cmc
andl
fiadds
mov
push
hlt
popa
jge
jno
inc
and
add
dec
je
shll
push
sub
xor
cwtl
aad
or
mov
fmuls
fnstsw
outsb
into
push
sub
clc
cmpb
adc
stos
out
adc
movsb
adc
inc
jmp
imul
imul
shrb
imul
rep
add
push
leave
inc
fdivrs
rolb
popa
dec
iret
jle
insl
dec
sti
dec
leave
cmpsb
notb
bndstx
in
cmp
jle
repz
jmp
shrb
cs
dec
jbe
ss
loopne
xchg
and
insl
xor
sbb
xchg
repnz
jg
aam
jmp
adc
fsubrl
mov
and
es
mov
fstpt
hlt
cmp
pop
xor
mov
loope
test
dec
or
stos
cmp
fwait
pop
mov
xor
and
inc
test
inc
in
ret
hlt
lret
mov
xor
adcl
dec
or
sub
inc
inc
and
adcl
out
pop
xchg
or
mulb
jmp
push
mov
fdiv
fisubs
adc
addb
jb
imul
nop
xlat
shr
hlt
das
jp
adc
mov
add
mov
aaa
inc
xchg
repnz
mov
push
addr16
xor
es
loopne
outsl
sbb
pop
xchg
and
pushf
rcl
and
ds
or
sbbw
idiv
cmp
outsl
xchg
lea
mov
mov
mov
pop
or
insl
jmp
mov
adc
sub
mov
xchg
hlt
mov
out
mov
adcl
daa
add
xor
xchg
enter
mov
mov
mov
ljmp
jp
sbb
inc
add
mov
fs
rcll
mov
sbb
add
xchg
in
insl
add
jl
or
roll
and
dec
lods
lods
push
imul
ss
mov
sub
and
push
xchg
test
fmull
mov
push
les
lods
subl
mov
sbb
and
aaa
shll
jmp
mov
popa
sbb
aad
dec
in
daa
js
ljmp
call
popa
test
out
rolb
ret
mov
nop
adc
or
mov
inc
add
mov
pop
adc
xchg
mov
ljmp
cli
enter
xchg
dec
mov
dec
les
adcb
movsl
inc
in
ljmp
mov
push
scas
pop
push
and
and
cmp
fwait
mov
lods
push
iret
stos
aas
mov
sub
ja
popf
leave
pop
jl
out
scas
jge
xchg
mov
dec
xor
hlt
xlat
arpl
and
push
add
mov
clc
pop
insb
sbb
cmp
sub
scas
lock
and
adc
adc
adc
mov
sub
cmp
out
lock
inc
xchg
in
add
jg
jnp
test
outsl
xchg
jae
push
das
test
sub
pop
cmp
mov
loop
call
push
push
lret
in
fs
add
add
aam
add
lcall
sub
sbb
dec
pop
mov
jge
fs
pop
aaa
xchg
xchg
add
fisttpll
mulb
je
inc
pop
mov
jae
push
and
jae
add
testl
out
jge
repz
aaa
into
jmp
shlb
outsl
das
jmp
fnstenv
rorb
inc
fwait
jg
xor
cwtl
rcl
loope
jo
ret
clc
xorl
orl
and
test
jmp
dec
add
push
lahf
xlat
sahf
inc
cmp
imul
and
push
test
jbe
jae
mov
pop
mov
xchg
es
and
mov
or
popf
or
adc
lcall
mov
ja
xchg
pop
loopne
push
adc
push
or
sbbb
sbb
andl
idivb
int
mov
adc
adc
adc
cmp
daa
mov
or
jle
push
test
mov
imul
pusha
sub
scas
aaa
int3
das
fisubrs
mov
out
xchg
dec
aam
push
push
outsb
jp
and
pop
mov
push
lcall
xchg
xchg
inc
mov
add
adcb
leave
out
mov
idivl
inc
mov
and
mov
mov
je
sub
add
xchg
gs
push
cwtl
adc
adc
aad
sahf
dec
daa
ret
add
fdivl
idivl
xor
cld
in
outsl
xlat
mov
pop
andl
std
add
or
movsl
ret
mov
scas
movl
adc
aad
bound
mov
add
lret
xchg
sti
cmpb
xlat
dec
sub
xorl
xchg
pop
inc
push
addr16
imul
pop
mov
scas
dec
cs
jle
loopne
push
roll
aam
dec
sbb
fisubrl
out
adc
clc
lret
xor
and
pop
pop
mov
mov
shrl
pop
mov
test
mov
sti
mov
jbe
idivb
cmpsl
lods
sub
repnz
inc
xchg
cmc
mov
ljmp
lret
icebp
mov
dec
adc
xor
shl
gs
xlat
mov
sub
fwait
cmp
or
add
nopl
jno
cli
mov
jle
arpl
dec
aaa
lods
jne
jle
and
movsl
mov
orb
mov
and
ret
xor
movsl
popf
lock
mov
in
mov
mov
sbb
jg
and
daa
clc
inc
cmp
mov
int3
cmp
cmpsb
mov
inc
insl
stos
jbe
and
dec
stos
daa
repz
cmp
mov
out
daa
mov
xor
ss
iret
js
outsl
jg
mov
dec
ret
fcmovb
lret
nop
divb
sub
aas
adc
pop
subb
dec
outsb
push
loop
out
jg
adcl
ljmp
imul
jg
mov
hlt
fimuls
xchg
pop
lahf
mov
pop
push
cmp
ljmp
sub
pop
les
mov
sub
arpl
sar
and
xchg
imul
cmpsl
pop
ljmp
mov
cwtl
cwtl
pop
ds
jnp
scas
stos
imul
sub
mov
fnstcw
bound
or
xor
arpl
mov
mov
repz
scas
repz
test
cmp
sub
adc
and
in
pop
inc
js
iret
test
loopne
cmp
sbb
mov
test
test
movsl
leave
pusha
stos
jb
jge
arpl
mov
leave
sbb
inc
xlat
ja
cltd
test
xchg
test
cs
int
push
lds
mov
sub
cltd
fsubrs
inc
popf
mov
adc
push
test
pusha
hlt
rorb
mov
mov
xchg
mov
fwait
sub
out
lods
inc
sbb
pop
mov
inc
add
or
out
daa
or
mov
mov
adc
mov
dec
mov
xchg
jle
pop
test
imul
sbb
cmp
in
inc
jb
icebp
pop
push
clc
adc
pop
jb
jo
pushf
in
shrl
xor
mov
xchg
repz
sub
pusha
sub
mov
mov
pop
aam
clc
mov
popa
push
stos
cmp
inc
sar
adc
xchg
xchg
out
sub
fbld
cmpsb
fdivrp
leave
jne
jle
aas
enter
xchg
fmuls
cmpsl
pop
fs
sub
jp
arpl
mov
stc
pop
mov
out
jno
hlt
lea
cli
insb
test
aam
stos
push
sub
pop
fldcw
or
push
sbb
push
cmp
in
shl
sbb
or
xchg
xchg
les
lods
jae
pushf
mov
jg
ror
dec
in
scas
je
nop
icebp
and
jo
add
xor
mov
jns
xchg
mov
std
xor
jb
mov
hlt
adc
xchg
js
sahf
pop
xor
stos
cmp
jbe
cmp
ret
je
add
test
das
mov
aam
aas
push
push
dec
jl
fsubrp
inc
and
mov
dec
mov
jbe
fstpl
mov
push
repz
cwtl
fiaddl
lcall
repnz
inc
xor
leave
mov
loop
pusha
cli
adc
repz
pusha
push
jecxz
adc
pusha
dec
cmpsb
sub
jne
addr16
iret
sbb
arpl
mov
inc
cmc
ljmp
mov
int
rcl
aas
pop
sbb
iret
cmpsb
dec
fstl
insb
and
js
jl
cmp
sub
int3
jnp
mov
xchg
fs
aaa
fsubl
mov
lea
sti
and
hlt
and
hlt
das
enter
xor
into
lea
add
arpl
inc
mov
cmp
outsl
daa
repnz
outsb
jmp
imull
xor
scas
aam
leave
adc
mov
arpl
xchg
jmp
jne
fisubl
out
fmull
popl
pop
idivl
dec
mov
into
xchg
mov
xchg
add
jno
popf
jl
in
aam
xchg
pop
std
push
pop
enter
stc
call
clc
inc
out
dec
in
dec
cmp
mov
ja
das
pop
inc
cmp
cmp
and
jmp
jle
and
loop
cmp
mov
scas
mov
jnp
and
xchg
mov
test
xchg
mov
decl
push
andb
out
mov
mov
jg
movsb
mov
push
mov
clc
dec
stos
rcrb
stc
in
sti
cmp
sbb
ja
add
push
movsl
movb
fdivrl
insl
lock
cld
mov
fs
cmp
mov
sbbb
push
xchg
push
mov
inc
repz
out
mov
add
mov
movsb
push
adc
xchg
inc
shl
sub
pop
cmp
mov
jae
jb
add
jmp
shll
aam
lods
lcall
and
inc
and
cmp
rorb
imul
inc
jmp
adc
jp
inc
lret
push
inc
dec
mov
mov
jae
adc
in
xlat
movsl
sbb
jo
test
negb
test
fldlg2
xor
cli
shr
push
and
xchg
adc
fcoml
fisubrs
loope
xor
jo
in
out
mov
test
inc
jns
addr16
enter
lods
mov
cmpsl
push
cli
xchg
into
lock
push
aam
mov
push
in
stc
mov
imul
fdivl
test
scas
lret
stos
push
xor
pop
inc
loop
sub
imul
or
daa
jne
pop
cmp
das
sbb
movsb
inc
cmp
mov
jae
int
ret
xor
loopne
out
push
js
ss
je
inc
les
lahf
jecxz
insl
sbb
and
je
scas
sub
aam
mov
xchg
adc
outsb
push
daa
mov
dec
test
pop
insl
push
sarb
cmp
add
and
fistpl
gs
dec
lret
mov
ja
or
inc
lods
andl
icebp
sbb
cmp
fidivrs
inc
cmp
aas
mov
and
icebp
ss
xchg
push
and
xchg
shlb
adc
xchg
pop
xchg
push
mov
xchg
push
movsb
or
dec
push
push
out
xor
fadd
adc
dec
cmp
sbb
jb
cmp
les
stos
es
insl
jo
add
jmp
les
xchg
xlat
or
dec
inc
push
sbb
lds
cs
cmc
adc
outsb
jg
icebp
adc
push
jns
add
mov
sti
pop
addr16
out
or
mov
popf
and
mov
jne
or
mov
loopne
sbb
cmpsb
pop
test
fistpl
mov
inc
repnz
cltd
pop
jge
pop
out
in
test
add
jo
repnz
lahf
out
pop
addr16
outsl
das
push
mov
push
mov
cmp
sbb
enter
scas
pop
int
mov
add
and
sbb
push
lods
stc
std
xchg
or
popa
pop
in
nop
fwait
xchg
in
xor
dec
ljmp
mov
pusha
ljmp
adc
mov
inc
mov
daa
inc
int3
stc
or
psrld
jle
dec
xchg
int
push
cmpsl
sbb
or
dec
pop
mov
out
mov
int
cmp
and
xchg
popl
dec
lret
das
loopne
push
mov
je
mov
stos
imul
out
xlat
mul
jo
adc
ds
imul
mov
jb
out
xor
mov
clc
lcall
jbe
pusha
jne
pop
and
sbbb
dec
in
and
and
jle
fsubl
popa
add
jge
pop
enter
sub
aas
je
adc
inc
push
lret
test
pop
mov
cmp
cli
or
xorl
icebp
in
cmpsb
or
lret
mov
jbe
add
popa
or
lret
cmp
cmp
cmp
scas
or
cmpb
shrb
pop
ror
xchg
dec
push
cwtl
jl
sub
lods
pop
push
mov
jl
js
insb
jecxz
push
sub
aad
ljmp
sbb
jle
adcb
stos
aam
gs
push
test
into
lods
sbb
cmp
push
lds
inc
testb
dec
jl
sbb
push
arpl
pop
out
inc
lahf
and
decl
lods
mov
pop
jge
jnp
lahf
mov
or
loopne
jns
loopnew
cltd
popf
icebp
jle
sbb
sbb
and
cmp
ss
jmp
xor
add
or
cltd
xchg
enter
clc
sbb
mov
out
mov
adc
mov
and
jp
lds
lea
pop
scas
or
jns
nop
cmp
mov
cmp
flds
mov
xlat
pusha
mov
rcrb
lods
xchg
sub
es
ret
xchg
loop
idivb
inc
jne
hlt
pop
adc
push
dec
xchg
aas
mov
adc
jne
ds
out
jmp
xor
lods
in
ja
out
lret
mov
mov
aad
dec
test
sbb
dec
sub
aad
ficomps
outsb
push
test
mov
pushf
fidivrl
adc
push
xchg
sub
or
lods
and
stos
pop
sbb
pop
push
test
xchg
std
cmovae
insb
lcall
js
out
decb
aad
inc
in
adcb
in
mov
imul
cwtl
push
insb
mov
push
adc
add
pop
sub
jle
in
fwait
and
dec
adc
add
mov
push
loope
cltd
dec
sbbl
roll
sbb
xor
adc
mov
cmp
add
inc
xchg
xchg
pop
and
jmp
mov
add
sub
iret
push
test
cmpsb
xor
test
dec
push
mov
outsb
insb
dec
sar
in
in
dec
out
into
rcll
mov
arpl
dec
insl
out
sbb
inc
sbb
loopne
cwtl
popf
das
test
sti
dec
mov
sub
push
addl
pop
ljmp
mov
or
hlt
inc
cmc
es
mov
cltd
mov
mov
xchg
stos
loopne,pn
hlt
loopne
cs
add
rorl
outsb
mov
and
pop
push
adc
stos
xchg
clc
push
aad
cmp
aad
push
push
mov
inc
enter
stc
hlt
jmp
lods
mov
xor
xor
div
lods
or
loope
jge
cmpsb
adc
pop
fimuls
cmpl
pusha
mov
nop
push
fdiv
jl
ret
std
xor
and
adc
clc
dec
xor
push
in
ss
or
cmp
and
int
ljmp
push
ret
inc
pop
mov
and
adc
adc
push
and
push
sti
dec
loop
out
mov
sbbl
pop
ljmp
int
mov
jno
aam
loope
loopne
dec
jle,pn
adc
inc
lahf
jo
in
push
jge
push
test
xor
ja
iret
xchg
xchg
jle
popf
jge
imul
test
dec
pop
xlat
lea
popa
rcrb
xor
mov
ds
cmp
shlb
adcl
jg
and
dec
fstl
daa
inc
mov
cmpsb
inc
int3
gs
test
and
pop
pop
repnz
jnp
adc
jge
repz
pop
push
mov
ja
pop
adc
mov
lds
xchg
aaa
popa
xor
imul
sub
inc
jo
sub
pop
nop/reserved
jns
lahf
adc
nop
inc
vmread
pop
jle
aam
in
lods
mov
cmp
ljmp
mov
cmc
mov
testb
cmpsl
je
mov
mov
push
scas
cmp
mov
sbb
jmp
cmp
xor
mov
push
pusha
xchg
daa
mov
push
out
jb
inc
jne
sbb
loope
lods
out
popa
mov
cmp
pop
sarl
mov
in
xor
mov
push
xchg
xacquire
dec
mov
mov
adc
incb
dec
gs
imul
rclb
adc
clc
adc
cwtl
adc
test
cli
mov
ss
pop
dec
add
jge
push
jecxz
jge
icebp
idiv
out
out
mov
xlat
mov
pop
mov
or
or
add
add
repz
in
pushf
push
mov
loope
arpl
adc
enter
ret
pushf
mov
lea
jl
or
and
push
and
ljmp
ret
icebp
mov
stc
mov
es
pop
push
cmpsl
add
push
mov
xor
jbe
sub
adc
mov
icebp
pop
push
insb
cmpsb
jmp
aaa
scas
orl
stos
aaa
fildll
pop
xchg
rol
pop
out
call
sub
jnp
xchg
or
adc
repz
inc
and
ss
les
xchg
outsl
push
movsl
xchg
mov
test
sub
mov
mov
pop
dec
or
out
mov
inc
ficomps
call
adc
dec
rolb
inc
scas
or
roll
popa
inc
mov
mov
js
and
cmp
mov
addr16
jbe
xchg
sti
xor
aas
jb
sub
ljmp
movsl
imul
or
and
sbb
dec
mov
lret
xchg
mov
lcall
adc
insl
ljmp
hlt
xchg
ret
or
add
jno
xchg
mov
pop
lcall
int3
pop
pop
mov
arpl
lock
mov
into
xor
lahf
dec
imul
data16
xor
and
adc
mov
mov
jns
adc
lock
sub
xchg
xchg
rcl
push
jae
sbb
insl
jae
mov
sbb
jmp
std
mov
jnp
mov
stos
push
ljmp
fptan
inc
int3
in
sub
inc
jo
sub
mov
jne
push
jge
push
rcrb
test
and
shrl
or
in
outsb
fistl
xor
insb
inc
nop
fs
shll
into
cmp
dec
mov
sub
mov
push
insb
js
test
sbb
into
fprem1
out
push
and
xor
ret
dec
or
jle
pop
rclb
or
outsl
mov
jg
xorps
mov
xchg
mov
movsl
xor
inc
fucom
xlat
cmpsl
test
xchg
out
xchg
repz
gs
into
jnp
xchg
test
imul
inc
xor
pushf
filds
sbb
push
les
xchg
dec
sbb
cmc
into
mov
lret
or
stc
mov
mov
js
hlt
test
mov
push
sub
scas
cltd
xchg
push
les
dec
adc
data16
std
mov
shll
aas
loopne
add
pop
test
popa
leave
cs
jne
xchg
in
dec
aad
mov
xchg
insb
pop
add
mov
loope
add
push
mov
stos
movsl
data16
lret
out
pop
sub
xlat
pop
leave
aas
add
adc
fisubrs
xor
push
enter
gs
sub
stc
testl
push
out
test
pop
push
lcall
xor
dec
test
imul
push
int
jmp
add
addl
adc
or
mov
mov
xchg
mov
int
mov
imul
adc
les
js
mov
rcr
enter
sub
roll
add
or
test
dec
test
in
aad
dec
xchg
pushf
sbb
mov
jo
sub
int3
adc
mov
cltd
and
xchg
mov
loope
outsb
das
sbb
pop
push
fldt
lds
or
fists
xchg
and
shl
inc
imul
in
add
jle
lcall
push
sub
and
pop
ja
xchg
addb
cwtl
ds
mov
into
out
xor
in
jno
jg
inc
ret
or
fwait
cwtl
ss
inc
outsb
mov
out
jecxz
popf
and
jecxz
movsl
push
dec
dec
sbbb
or
int
cld
shrb
psrad
or
push
sbb
or
sahf
and
ds
outsb
xorb
xchg
mov
loope
pop
cmpsb
inc
sbb
out
push
jbe
sub
or
aas
push
lcall
dec
lret
sub
cmp
push
dec
idivl
xor
sbb
imul
fildll
sbb
inc
imul
xor
fnstcw
mov
or
mov
rclb
test
incl
mov
stos
arpl
shr
sbb
enter
cltd
and
mov
xor
mov
mov
jbe
add
cltd
cmp
out
sahf
int
lods
lret
push
cltd
int3
addl
sub
xor
lods
push
pop
mov
std
cmp
stos
jbe
inc
aad
movsb
ss
fs
and
enter
inc
jns
sti
aas
mov
and
push
lds
sub
call
cld
jno
pushf
dec
and
pop
xor
mov
inc
test
mov
sbb
inc
mov
loope
pop
sbb
adc
jmp
pop
loopne
add
inc
jo
sub
jae
cmp
jmp
pushl
xchg
add
aad
jle
outsl
mov
cmp
jns
or
jo
scas
nop
pop
les
hlt
in
lret
or
ljmp
or
cmp
pop
push
cmp
call
sbb
fiadds
jmp
dec
and
cmp
push
call
add
pop
inc
mov
or
push
xchg
mov
inc
xor
frstor
leave
shll
add
adc
scas
sbb
dec
outsb
js
push
int
cli
mov
in
jmp
sub
push
jmp
inc
movsl
pop
lret
jns
rol
jbe,pn
out
cmp
out
push
outsl
push
sar
push
jb
sbb
mov
js
jl
das
je
push
push
xlat
daa
daa
push
js
sub
jecxz
jg
mov
test
in
xchg
add
stos
lods
cltd
cli
xor
iret
sahf
loop
popl
push
cli
push
pop
mov
jmp
mov
xchg
cmc
or
call
ljmp
push
mov
loopne
and
stos
and
push
mov
adc
pop
push
icebp
cmp
xlat
bound
mov
lods
daa
add
nop
add
add
jp
jne
mov
inc
pop
inc
dec
outsl
jno
cld
rolb
push
jecxz
les
mov
pop
xchg
mov
int
mov
jecxz
rcrl
mov
fsubrl
push
jmp
lcall
cmp
in
push
jns
mov
dec
vsqrtss
scas
mov
xlat
inc
lea
leave
sbb
aam
and
int
loop
fdiv
shlb
xor
xchg
mov
jge
jg
pop
sub
fs
pop
rol
rorl
jg
sbb
xchg
inc
call
dec
adcb
in
jo
addl
jge
data16
xchg
enter
xchg
pop
std
mov
adcb
jmp
push
in
push
dec
mov
ret
add
or
iret
inc
test
ljmp
jge
inc
cmp
mov
lock
je
lea
sbb
test
sbbl
mov
repz
xchg
mov
xlat
cld
mov
mov
lods
cltd
das
neg
or
jecxz
cmp
mov
adc
dec
int3
scas
dec
mov
inc
je
xor
dec
jp
cmp
int3
mov
adcb
jmp
dec
inc
in
fwait
pop
inc
push
mov
cmc
mov
cltd
mov
pop
fwait
pop
add
bswap
cmp
jne
shr
push
cmp
idiv
pop
test
sbb
pop
pop
and
pop
aam
popa
add
and
inc
cmp
out
iret
mov
call
mov
jo
lret
js
mov
push
pusha
push
jg
cwtl
mov
add
lahf
scas
xchg
pop
sbb
pop
inc
call
push
test
stos
fisubl
pop
mov
rol
sbb
sbbb
fstpt
adc
lret
outsl
push
cltd
sub
shlb
or
cmp
les
into
jne
push
push
outsl
dec
lret
fsub
popf
je
test
aas
jo
adc
aam
or
pop
inc
fidivl
sub
dec
test
jg
jp
jnp
push
sbb
push
xchg
leave
loop
popf
rcll
cmpsl
push
mov
fcomp
mov
push
test
push
loopne
mov
aam
test
leave
jl
ficomps
adcl
bound
lock
or
pop
scas
push
adc
data16
data16
fldcw
subb
jno
mov
jbe
loopne
pop
mov
mov
fcompl
mov
push
cmc
out
test
fwait
push
sbb
cmp
adc
jmp
adc
test
ja
int3
sbb
adc
cmp
xchg
inc
pop
sbb
movsb
jae
dec
leave
push
pop
adcb
and
push
loope
xchg
aaa
sub
xchg
andb
jecxz
stc
inc
rorl
in
or
xchg
jne
pop
ja
pop
mov
mov
outsb
cs
lock
mov
mov
add
popf
cmp
pop
inc
xchg
lock
push
sti
nop
dec
and
adcb
loop
mov
sub
sub
sbb
adc
call
adc
ja
jg
sub
in
js
pop
jmp
xor
clc
pop
mov
mov
and
or
bound
leave
mov
idivl
sarl
dec
fnstcw
imul
imul
shrb
xor
fwait
lock
push
daa
repz
stos
sub
adc
loope
icebp
jecxz
pop
push
xchg
fbld
fimuls
pop
out
jg
stc
jp
jae
mov
mov
mov
adc
es
cmpsb
inc
add
call
push
cmp
or
push
int3
sub
test
lret
inc
mov
sti
or
lea
pop
push
iret
add
mov
int
jns
cmp
stos
xor
push
aad
sub
scas
pop
cmp
mov
mov
mull
cwtl
roll
mov
test
paddusb
fdivrs
cld
mov
sub
jne
loope
cld
mov
scas
adc
scas
movsb
cmpsl
xchg
fidivrl
xchg
adc
or
xchg
fsts
movsb
xchg
mov
call
cli
in
inc
push
aad
sbb
lea
sub
mov
out
sarb
inc
mov
or
pusha
ljmp
mov
jmp
xchg
lods
fisttpll
push
out
xor
pop
sbb
ficomps
rcpps
dec
inc
mov
xor
fmul
mov
aas
mov
mov
cli
outsb
or
sbb
mov
xchg
popl
cmpsb
cld
je
dec
fs
sub
inc
xor
in
aaa
inc
out
or
dec
sbb
xor
daa
call
xor
add
xacquire
test
add
inc
cli
imul
in
adc
shlb
jp
cld
push
and
cmp
mov
or
pop
fdivrl
outsl
jmp
arpl
lcall
movb
sub
rolb
in
sub
or
imul
and
js
or
iret
psllq
scas
std
iret
cmpsl
ss
imulb
lds
mov
pop
sbb
sub
outsb
test
and
mov
call
inc
dec
sub
enter
lock
push
pop
dec
cltd
out
in
andb
cmc
fisubrl
lret
mov
js
mov
jbe
stc
sahf
ss
pop
ret
popa
dec
xor
out
lods
push
cmp
call
push
out
mov
xchg
sbb
iret
sarl
mov
xor
sbbl
mov
mov
aaa
pushf
xor
xor
jmp
sbb
inc
sub
test
cmp
sub
or
fwait
repnz
imul
push
or
fisttps
mov
test
testb
add
ret
imulb
jecxz
xchg
xor
lret
insb
sbb
adc
gs
out
enter
in
nop
jle
std
subb
testl
mov
scas
sbb
push
adc
cld
dec
sub
pop
jne
xchg
out
orb
test
or
in
ja
jnp
xor
push
and
mov
pop
pushf
mov
add
out
and
loop
xchg
dec
dec
xchg
or
adc
cmpsl
push
sahf
jae
lcall
iret
outsl
fsubl
or
push
adc
and
mov
xlat
jg
bound
fs
adcl
outsb
sbb
sahf
cmpsb
pop
mov
stos
int3
mov
imul
mov
mov
sbb
in
push
aam
add
fisttps
adc
sub
dec
dec
ret
loopne
mov
push
pop
sbb
std
sti
clc
insl
call
std
rcrb
flds
mov
rcll
cmpsl
and
fbstp
testb
xlat
fistl
jae
sub
es
push
mov
mov
inc
insb
mov
scas
push
cmp
lea
bound
popf
jl
cmp
sahf
out
pop
pop
movsl
cmc
mov
sub
cli
push
mov
mov
pushf
test
jae
add
or
mov
mov
insl
pop
aam
jmp
popa
call
pop
adc
jl
outsl
test
adc
mov
or
jb
adc
mov
repz
lock
sub
dec
mov
aas
push
hlt
ror
add
push
test
sub
movsl
shll
scas
shlb
aaa
fdiv
sbb
shrl
jl
shlb
mov
fiaddl
lcall
pushf
fdivs
jle
popl
std
push
aad
add
dec
test
or
daa
es
xchg
sub
loop
cwtl
or
dec
jno
xor
push
hlt
roll
inc
push
outsl
cmp
push
cmp
rcll
pop
cmc
aas
sbb
mov
mov
divl
enter
lret
pop
adc
in
ja
and
push
or
pop
loope
shrb
or
insb
xchg
inc
and
add
test
mov
cli
xchg
aad
insb
mov
mov
cmp
lret
test
jg
enter
outsb
lcall
jns
out
testb
dec
outsl
ss
jo
push
lret
xchg
stc
das
repz
add
arpl
lods
subl
lahf
test
fildl
dec
imul
mov
fdivl
mov
popf
imul
sub
sbb
or
addb
push
mov
xchg
jg
mov
icebp
mov
xor
xor
jne
das
dec
ret
xchg
dec
xchg
push
push
dec
jmp
test
sub
cmc
fwait
add
lret
divl
cwtl
and
mov
mov
jo
push
movsb
movsl
pop
pop
push
or
pop
xchg
out
xchg
ret
in
jmp
fstl
and
adc
xchg
cmp
faddp
mov
js
push
mov
or
push
inc
push
ljmp
jmp
ja
push
sub
inc
push
jmp
jno
xchg
adc
cmpsl
jae
jae
sarl
xchg
dec
stos
mov
call
mov
and
or
add
loopne
push
out
testl
mov
jmp
mov
mov
jmp
inc
dec
dec
adc
adc
xor
or
aad
xchg
add
outsb
rol
test
scas
out
xchg
sub
fadd
or
or
test
inc
das
mov
addr16
mov
xor
insb
pop
push
inc
jo
das
scas
xchg
aas
push
pop
int3
push
adc
xchg
pop
decl
rolb
jecxz
rclb
sub
jo
mov
jae
popa
sbb
into
cmp
mov
xchg
hlt
divb
adc
daa
dec
mov
shl
dec
pop
mov
dec
mov
ljmp
push
cwtl
out
imul
and
int3
and
movsl
inc
lods
sub
cmp
mov
popf
and
cmp
pop
mov
and
pop
stos
fiaddl
dec
sub
add
push
in
fistps
cwtl
loope
lods
xchg
aas
dec
js
cli
sahf
out
dec
jae
and
fistpll
popf
mov
fldenv
xchg
stc
dec
jno
lds
out
mov
dec
or
rcrl
mov
cmpsb
dec
xlat
mov
popa
mov
xchg
xor
fidivrl
and
sahf
dec
mov
cs
xor
push
inc
orl
inc
add
mov
popf
out
into
jo
lcall
xchg
xchg
ljmp
cld
inc
iret
int
adc
lods
mov
push
dec
pop
sar
sbb
jge
lods
xchg
outsb
je
out
popa
aaa
push
push
dec
into
xchg
or
fld
dec
int3
repnz
popa
push
mulb
mov
incb
sub
mov
imul
pop
mov
shlb
cmpsl
push
int3
cli
inc
pop
push
fdivrp
movsb
jecxz
rcrl
loope
lcall
xor
add
jg
pop
push
pop
pop
push
decl
ljmp
pop
std
jge
add
pop
xchg
xchg
or
ret
das
fnstsw
add
xchg
shll
and
faddp
iret
ljmp
fs
fsubrs
addr16
mov
enter
mov
mov
xchg
out
jb
mov
insb
mov
mov
lahf
cld
jg
sahf
mov
hlt
repnz
xchg
movsb
sbb
insl
mov
sbb
pop
mov
xchg
test
call
pop
lahf
out
test
push
mov
loope
outsl
xchg
mov
mov
push
inc
lods
add
sub
ret
movl
xchg
inc
adc
add
pop
test
enter
or
adc
jno
cld
dec
jae
call
in
push
mov
imul
xchg
jo
xchg
jns
ud2
pop
jg
out
sub
xchg
mov
gs
mov
xchg
pop
out
sar
sub
fistps
mov
jae
or
mov
subb
jmp
sarl
inc
cwtl
mov
popa
aas
test
jo
cmp
push
out
fcompl
leave
leave
in
xor
call
rorb
out
mov
push
enter
and
sbb
pop
in
stos
adc
cmp
sar
shlb
out
pop
inc
cmp
cmpsl
sbb
pushf
lods
shll
outsb
ljmp
movl
push
shl
adc
shll
aaa
sti
adc
or
test
ljmp
lret
lock
aaa
mov
mov
pop
adc
movsl
dec
outsl
ja
push
dec
pop
jns
stos
pop
popf
fldcw
pusha
stos
xchg
popa
and
insb
decb
out
sub
out
sbb
ljmp
inc
push
ret
shr
cwtl
pop
jecxz
cmpsl
jo
testb
lahf
dec
test
ret
xor
dec
jo
xchg
jp
xor
out
inc
push
cmp
cs
pop
call
sub
in
mov
sbb
xlat
out
adc
loope
jp
jbe
mov
mov
and
movsb
xchg
jbe
sbb
xor
mov
sub
fisttpll
dec
out
cltd
xor
mov
hlt
xchg
test
push
mov
inc
aas
pop
pop
xor
sbb
into
sub
inc
or
pop
cmp
sbb
cmp
mov
push
insl
jae
aas
out
mov
stos
aam
mov
pop
inc
push
aad
and
cmc
outsl
pop
fadd
roll
das
mov
xor
sbb
mov
sbb
mov
push
pop
inc
hlt
inc
fchs
icebp
lods
call
pop
daa
mov
xor
jl
sub
dec
in
sbb
jp
sbb
aaa
pop
mov
int3
xor
fidivrs
fiaddl
cwtl
mov
inc
fsubl
int3
hlt
bound
in
add
sbb
mov
arpl
push
fnstenv
mov
dec
ds
lds
add
insb
aas
int3
outsl
jmp
and
cli
sub
sub
mov
jecxz
mov
jbe
mov
and
rorl
aas
mov
mov
or
add
jb
test
and
push
out
cmpsb
aad
adc
bound
scas
pop
fcompl
add
test
xchg
mov
aaa
pop
inc
add
into
inc
jge
sbb
sti
or
nop
push
add
sbb
inc
mov
inc
and
in
mov
pop
push
stos
push
fidivrs
ud1
dec
inc
bound
mov
shlb
pop
popa
push
jl
add
pop
cmp
lcall
insl
gs
sbb
or
dec
adc
or
out
mov
dec
fsubrl
mov
pop
loop
push
and
sbb
or
and
cmc
movaps
in
xchg
jle
xlat
stc
cmp
movsb
outsb
aad
inc
mov
sub
xchg
sub
mov
adc
or
enter
mov
cld
popa
jmp
or
leave
enter
fcmovnb
push
repz
gs
adc
inc
jl
mov
test
fmull
or
mov
cwtl
jns
icebp
xor
mov
mov
lret
push
ret
popf
mov
mov
enter
negl
insb
pusha
jl
push
xor
xchg
dec
cltd
xor
cmpsl
push
cmpsl
pusha
test
pop
addb
inc
cmp
adc
inc
std
sub
testb
test
repnz
sbb
mov
jns
jbe
push
jns
call
in
push
add
push
mov
mov
test
xchg
bound
or
fiaddl
out
test
jp
clc
test
push
mov
adc
xor
xchg
push
xor
out
jb
add
cwtl
test
jnp
dec
lods
out
mov
add
inc
pop
stc
movsb
out
mov
mov
ret
xchg
adc
mov
lret
push
nop
xchg
or
in
enter
out
mov
je
mov
sbb
jmp
icebp
dec
mov
movsl
jnp
push
testb
sub
stc
sub
xchg
mov
in
inc
jbe
cli
jno
and
mov
jmp
lret
out
loope
mov
adc
adc
in
and
in
or
shl
shrb
scas
cli
in
pop
cltd
aas
inc
jae
cs
ffree
fwait
mov
or
and
imul
imul
clc
cmpsb
add
les
pop
adc
jnp
lods
sbb
aam
insb
imul
arpl
daa
sbb
add
pushf
jae
xor
jne
mov
pushf
lahf
dec
lds
mov
sbb
mov
xlat
push
dec
and
mov
inc
out
mov
sbb
pop
add
mov
dec
fdivl
insb
jns
test
lret
xchg
in
jp
push
mov
lret
pusha
jle
mov
incl
imul
push
negl
mov
ret
mov
mov
lea
sub
bt
es
cmp
sbb
fxtract
jnp
pop
mov
push
dec
insl
or
inc
sub
fildll
call
or
rorl
daa
sti
in
dec
ljmp
popa
pop
inc
rcrl
cmpsl
mov
jns
sbb
mov
xlat
push
std
cmpsb
insl
ret
mov
icebp
in
cmp
mov
mov
xor
shlb
mov
mov
sub
mov
fadds
roll
js
jmp
mov
sbb
inc
ret
icebp
mov
push
push
ror
push
dec
push
cmp
or
scas
sti
jmp
push
test
mov
cld
pop
pop
loope
xor
enter
or
jne
mov
mov
lret
sub
cmp
fimull
addr16
mov
outsl
push
sbb
or
in
cwtl
loop
jae
push
xchg
sub
jge
outsb
mov
stos
mov
sbb
lea
loop
sub
mov
hlt
inc
push
jecxz
leave
jecxz
in
cs
push
int
ljmp
arpl
aas
add
inc
flds
cmp
fsubp
adc
jno
inc
int
and
gs
addr16
fnstenv
mov
cmp
inc
and
xor
lds
pop
pop
xor
jle
sbb
jae
add
pop
lret
fbstp
or
ds
lahf
lahf
xchg
pop
insl
dec
inc
jo
out
popf
fs
adc
mov
fcompl
jl
clc
inc
repz
into
insl
pusha
pop
xchg
push
outsb
pop
dec
dec
insl
mov
dec
lods
xor
lds
jbe
sub
mov
pop
insb
push
insb
in
add
popf
xchg
rcll
jae
adc
iret
mov
mov
xchg
sub
push
jb
xor
cmc
addb
or
mov
roll
push
ss
cmp
and
sti
ds
add
je
pop
xor
inc
inc
push
sub
hlt
xchg
jns
fs
aam
cwtl
outsl
hlt
lock
mov
or
mov
push
xor
mov
jo
jle
addr16
lcall
pop
mov
enter
sbb
adcb
into
fiaddl
enter
inc
rolb
mov
imul
fs
jbe
xchg
jmp
xor
pop
adc
es
aam
das
mov
rorb
push
and
shlb
lods
out
nop
js
xor
out
lods
shl
inc
push
outsl
enter
rclb
mov
in
mov
pop
cmp
sbb
fs
roll
jo
mov
mov
fildl
xchg
aas
lods
aam
in
xchg
mov
pop
jp
insb
xchg
cwtl
lcall
out
pop
sbb
pop
scas
pop
sub
add
sbb
mov
or
push
inc
arpl
sub
or
rclb
add
jl
dec
test
add
fsubrs
inc
rcrl
pop
scas
jp
fldenv
es
add
push
cmp
xchg
and
mov
rcrl
xchg
es
iret
push
lods
xor
fwait
dec
sub
mov
frstor
dec
or
mov
jb
or
dec
inc
mov
imul
mov
icebp
decl
dec
and
inc
mov
pusha
sbb
ret
mov
outsl
das
fnstsw
repz
adcl
in
outsb
cli
std
jg
inc
and
push
add
sbb
mov
arpl
les
cmp
loop
iret
jge
mov
push
das
aaa
xchg
mov
add
sahf
pusha
outsl
ja
push
test
push
jbe
mov
cli
dec
adc
xchg
nop
pop
xor
add
jns
outsl
ja
fmulp
dec
and
jbe
add
popf
push
adc
xchg
add
test
ja
mov
cld
mov
or
popf
movsl
pop
inc
jle
xchg
sarl
lock
pop
mov
inc
and
lcall
mov
mov
frstor
insl
aad
aas
xchg
rorl
lret
lds
out
jl
or
test
dec
imul
push
cmpsl
leave
sbb
jg
xor
aas
rcrl
sbb
movsb
and
push
sub
jl
inc
push
icebp
leave
jae
jbe
mov
nop
test
sub
nop
movb
sub
mov
xchg
dec
mov
mov
fistpll
pop
dec
mov
mov
aad
push
sarl
call
in
in
and
jecxz
dec
hlt
mov
leave
daa
cltd
divl
jle
leave
shlb
fiaddl
xchg
mov
push
push
pop
lret
outsb
aad
push
lock
dec
lahf
push
jle
jbe
mov
or
sbb
fcmovnbe
dec
fwait
or
pop
add
fwait
cmpsl
xchg
xor
jns
mov
ror
and
aam
xchg
mov
jno
xchg
cmp
faddp
aad
icebp
enter
mov
mov
test
jne
pop
xor
mov
mov
sbb
arpl
mov
cs
and
or
inc
pusha
shrl
loop
push
and
and
mov
nop
lock
and
cmp
test
popf
xor
arpl
int
sahf
lods
and
dec
lea
jae
loope
jbe
cmp
and
jns
adc
inc
sub
ss
xor
or
and
mov
add
loope
push
in
lahf
jnp
mov
icebp
dec
add
or
aam
sub
pop
icebp
inc
adc
or
aaa
xor
dec
rolb
fistl
or
lds
add
mov
mov
xchg
lds
mov
enter
dec
pop
loope
mov
jmp
and
mov
mov
test
repnz
sub
lahf
push
lret
scas
pop
fdivrl
adc
mov
mov
loop
test
sahf
sbb
ret
xchg
scas
inc
rol
mov
lea
das
cmp
xor
shll
jne
stc
sub
stos
pop
and
imul
add
mov
enter
mov
sti
lret
test
lds
pop
test
adc
mull
fprem1
or
xor
movsl
pop
lret
rep
mov
sti
pop
lahf
xchg
ss
dec
push
imul
clc
and
test
inc
xchg
movsb
mov
jmp
or
imul
push
cmpsb
ret
xor
mov
jmp
jo
ss
sbb
mov
jp
out
xor
or
sarb
clc
cmpsl
or
movsl
and
inc
push
and
inc
lcall
sbb
rolb
mov
mov
cmp
pushf
in
xor
mov
popa
stos
fnstenv
mov
xor
cmpsb
add
jo
sarb
mov
or
call
xlat
sbb
inc
jns
mov
lret
dec
rcll
adc
xchg
sti
cmp
pop
repnz
mov
lret
push
jecxz
in
sbb
adc
ret
push
or
cmc
add
push
cmpsb
inc
inc
scas
push
add
out
shlb
and
sbb
xchg
xchg
xor
out
dec
push
lock
cmpsb
scas
fsubl
aas
into
add
push
bound
and
inc
les
mov
lods
mov
fisubrl
push
xchg
mov
cmp
mov
jbe
cmpsl
fnstenv
sbbl
inc
xchg
in
clc
or
mov
test
loopne
xchg
inc
sbb
jno
add
cmp
imul
movl
pop
mov
add
and
mov
sub
jle
mov
shlb
jecxz
and
inc
scas
cmpsl
das
lods
cmp
shll
sub
push
lods
mov
cmp
adc
repz
xchg
aas
outsl
mov
dec
js
pop
dec
arpl
dec
loope
push
add
ja
shrl
addr16
out
stos
dec
ljmp
mov
mov
in
dec
mov
jb
and
sbbb
orl
test
sbb
sbb
mov
adc
lret
inc
or
pop
cmp
repz
push
dec
mov
mov
sub
inc
and
fimuls
lret
aaa
call
and
xor
mov
movsb
out
repnz
popf
mov
pop
sub
push
out
mov
mov
jb
scas
xor
int
mov
sbb
iret
sbbb
cmc
lds
clc
sbb
lea
mov
jae
arpl
cmpsl
ret
insb
loop
pop
mov
ret
or
push
cli
and
out
out
xor
jns
aad
sbb
cltd
or
insb
outsl
notb
dec
nop
jecxz
ja
loope
xlat
mov
pop
xor
xorb
sbb
cli
ficompl
fcmovbe
xchg
or
fistl
lret
mov
pop
xchg
dec
lea
dec
inc
cli
inc
push
ficoms
or
push
sbb
or
push
sub
dec
clc
sbb
push
stos
mov
fbstp
xchg
push
xlat
mov
mov
orl
pop
mov
inc
popf
mov
jmp
sbb
movsl
pop
mov
dec
mov
ja
pop
bound
push
ret
push
aas
dec
xlat
dec
pop
pop
push
dec
pushf
pop
adc
sti
ss
aas
jecxz
fdivrp
mov
test
mov
or
add
and
inc
loop
in
mov
jno
js
xchg
push
ret
xor
xchg
insl
orb
mov
and
icebp
ficoml
xchg
test
in
js
mov
ffree
int
pop
xchg
jge
mov
push
xchg
incl
enter
lods
inc
sbb
inc
pop
pop
sarl
in
cmp
xor
notl
enter
push
pop
xchg
mov
xor
scas
xor
rorl
hlt
in
push
lret
mov
imulb
mov
les
sub
or
mov
test
mov
loop
pop
loopne
mov
pop
in
mov
sbbl
jns
sarl
in
cltd
pop
in
xor
adc
cwtl
mov
xor
daa
out
and
ret
add
icebp
lret
inc
push
xchg
cwtl
pusha
sbb
inc
dec
xchg
cmpsb
mov
pop
stc
loop
adcl
pop
out
lret
insb
mov
ljmp
out
adc
movsb
pop
sub
cli
dec
sub
dec
sti
xchg
or
and
or
xor
popf
cs
add
cmpb
mov
jne
mov
in
and
in
imul
xchg
jbe
pop
jno
xchg
gs
add
outsb
cmc
into
out
inc
push
xchg
dec
push
pop
lret
std
out
dec
mov
shrl
cmp
pop
jo
push
xchg
adc
push
mov
lret
lods
std
cmpsl
and
stos
loope
push
jb
shrl
into
dec
fs
pop
cmp
lods
cmpl
loop
or
int3
cld
inc
and
hlt
mov
clc
dec
call
ds
adc
jnp
popa
pushf
cmp
and
loope
mov
mov
and
mov
push
xchg
cmp
lcall
mov
add
pop
pusha
xchg
clc
sarl
jmp
mov
out
ja
adc
mov
outsb
pop
xchg
cmp
cmp
andl
cmp
sbb
and
and
testl
pop
mov
xor
add
pop
jno
pop
xlat
out
stos
imul
stos
js
xchg
jb
cmp
mov
lock
aaa
add
push
insl
xchg
ljmp
cmp
add
lcall
jmp
in
mov
xchg
clc
cld
xchg
jnp
in
stc
sbb
ds
ds
fucom
popa
jle
lea
imul
sbb
daa
out
cli
dec
cwtl
cltd
fsubl
cmc
cld
adc
imul
cmp
mov
pop
loope
mov
jne
adc
std
shlb
pop
pop
mov
add
loop
test
xchg
rol
out
xchg
hlt
sbb
negb
inc
mov
sub
inc
in
movsb
mov
pushf
out
and
pop
int
into
aas
xor
cs
hlt
push
jnp
push
add
movsb
cmpsb
in
rorb
or
pop
div
cmp
fdivl
add
imul
cmp
dec
mov
xchg
dec
int
cld
int
cmp
or
or
adc
es
ret
sbb
mov
sub
inc
loopne
xchg
test
sub
les
sub
bound
icebp
xchg
or
sbb
icebp
aam
loopne
imul
jle
xchg
or
mov
fisttps
arpl
mov
sbb
jns
mov
and
and
pusha
and
jecxz
js
in
mov
jo
in
jle
stc
push
adc
shll
inc
fcoml
test
fucom
iret
push
ret
pop
mov
movsb
jl
cmp
outsb
add
movsl
mov
ljmp
out
pop
lods
xor
inc
test
int3
fisttpl
dec
xor
andl
iret
xchg
fxch
lea
pop
xor
sub
adc
fxch
push
scas
ret
fcompp
ja
stos
nop
push
icebp
cmp
gs
repz
fwait
shr
repz
lods
add
xchg
cmp
xor
lods
fnstsw
cltd
js
sbb
or
push
jmp
notb
xor
loopne
in
sbb
and
mov
add
mov
cltd
shrl
pop
popf
out
dec
ror
fbstp
pop
imul
cmp
pop
adc
test
ror
jbe
push
sarl
sbb
dec
jmp
sahf
jne
lahf
sahf
inc
repz
and
lds
test
in
into
clc
mov
add
mov
cmp
jle
aad
ja
push
adc
xor
sbb
mov
xchg
ja
mov
ret
jl
cmpsl
je
dec
push
leave
mov
cmp
loope
stos
mov
negb
jnp
dec
adc
aam
orb
mov
mov
sbb
push
imul
pop
mov
cwtl
repnz
scas
sub
mov
arpl
pop
fsubrp
mov
xor
pushf
push
cmc
insb
mov
push
jl
sbb
xor
sbb
cmp
or
and
test
loopw
jmp
in
add
lea
pop
loop
clc
cli
ljmp
fcoml
adc
lret
and
mov
popf
lcall
pop
adc
jp
imul
sub
in
fistpl
push
ljmp
pusha
push
cmp
inc
out
xchg
push
mov
sub
cmp
adc
add
fucom
add
cmp
pop
jmp
fiadds
das
mov
dec
sbb
dec
flds
movsb
jecxz
push
loope
push
adc
fadds
mov
test
addr16
fwait
push
push
repnz
mov
dec
ds
lretw
pop
push
xor
sar
push
loop
sub
mov
rolb
add
mov
adc
hlt
loop
mov
push
jno
adc
sysenter
outsb
data16
mov
xor
aas
ficoml
adc
shlb
add
inc
stos
das
mov
mov
mov
insb
or
arpl
dec
mov
dec
jmp
cmpsb
scas
sbb
jecxz
enter
stos
int3
icebp
test
dec
shll
and
scas
jno
dec
pop
add
cld
nop
cwtl
mov
mov
clc
and
xor
and
pop
sarl
cmpsb
ja
orl
ljmp
jbe
cmp
movsl
adc
aad
xchg
or
and
jae
jmp
loop
out
in
pusha
sahf
or
adc
jno
jo
adc
les
mov
cs
dec
mov
shl
out
or
dec
das
xor
jmp
push
cmp
pop
jge
lods
pop
xchg
mov
inc
adc
sub
and
inc
lret
in
lock
nop
xor
jns
in
and
dec
loopne
and
mov
test
dec
inc
rcll
sti
push
ljmp
dec
test
scas
mov
hlt
shl
xchg
mov
icebp
fildll
fiaddl
les
dec
dec
cmp
pop
push
ficoms
loope
in
inc
faddl
jne
test
iret
pop
dec
fsubrs
lret
dec
lods
pop
sub
rorb
inc
popf
adc
rcrb
sub
push
dec
jmp
rclb
jne
xchg
xchg
xor
mov
popl
jmp
jmp
outsl
xchg
outsl
sbb
cli
push
fldcw
or
into
mov
test
aam
cmc
xchg
sbb
add
pop
cltd
xchg
or
lods
pop
dec
adc
add
testl
divb
std
jp
mov
js
ret
jge
scas
push
xchg
jno
mov
outsb
movsl
pop
push
cmp
sub
std
shlb
mull
sbb
aam
sbb
imul
jo
push
add
xchg
je
daa
pusha
std
add
jns
xor
out
shll
pop
push
inc
fistl
cmp
lds
jmp
xchg
inc
add
add
or
sub
cmpsl
push
cli
in
cmp
notb
xor
icebp
sub
and
out
or
mov
dec
arpl
call
xor
pop
sahf
jne
or
jmp
sbb
mov
xchg
jg
sbbl
xchg
add
subb
xchg
mov
ret
and
imul
ljmp
flds
dec
mov
nop
hlt
ja
push
or
inc
xchg
mov
and
stos
mov
dec
int
dec
les
bound
sbb
pop
lret
lcall
subb
stos
getsec
inc
mull
imul
lret
jno
mov
loope
int3
test
repnz
pop
stos
cmp
sub
mov
mov
les
dec
inc
mov
clc
and
adc
cmp
gs
mov
iret
jne
cli
out
pop
or
pop
gs
dec
adc
cmp
fildl
pusha
cmp
rcl
or
dec
test
xchg
js
or
xchg
arpl
fsubr
jg
stos
sbb
daa
aad
fsubl
mov
int3
jg
push
xchg
into
xor
lods
hlt
lea
adc
push
addl
and
jmp
xor
imul
stos
imul
mov
cld
mov
mov
inc
fldl
andl
test
insl
or
pusha
dec
pop
in
test
imul
std
or
xchg
xchg
pushf
mov
mov
loop
push
idivl
ret
sbb
add
in
xchg
in
fists
dec
outsb
cwtl
test
jno
aam
insl
popf
sub
mov
mov
aas
mov
jo
jg
sbb
sbb
push
push
dec
daa
mov
cmpsl
ds
xchg
sub
cmpsl
jne
xlat
and
mov
andl
dec
inc
jmp
cmpsb
imulb
cwtl
f2xm1
lock
cmp
mov
cmp
dec
xchg
and
hlt
mov
adc
repz
repz
mov
xlat
cmp
inc
adc
pop
roll
lds
sbb
loope
pop
cmp
xchg
cmpsb
pop
lds
xchg
add
nop
jecxz
test
or
std
pop
and
sbb
out
mov
xor
hlt
jecxz
das
imul
jb
je
push
jnp
cmp
mov
adc
shl
je
mov
jp
jno
sbb
adc
test
into
pusha
mov
pop
in
pop
add
inc
cmc
or
repz
popa
roll
fucomp
arpl
mov
push
sbb
adc
push
stos
pop
adc
mov
pop
mov
stos
ja
dec
dec
sub
add
repz
sti
shlb
sar
aaa
test
push
xchg
daa
jg
mov
inc
dec
movsl
adcl
xor
pop
mov
sbb
inc
aaa
adc
lods
and
cmpsl
mov
ja
dec
sbb
push
cmc
or
push
push
add
inc
sti
pop
sub
dec
dec
xchg
dec
iret
bound
jl
or
popf
sbb
int3
or
cld
or
inc
jle
jp
add
dec
adc
sbb
add
cli
aam
jno
gs
sahf
jg
in
movsb
push
jae
add
push
or
and
arpl
sahf
sbb
nop
and
mov
cltd
cmp
rcll
aaa
das
fs
push
repz
mov
xor
xchg
mov
in
cmp
cltd
inc
push
scas
movsl
loopne
cmp
pop
mov
popa
in
push
xchg
insl
lahf
and
dec
popf
pop
aad
loope
dec
aad
cli
ret
xchg
leave
outsl
xlat
or
ljmp
sbb
lock
fadds
hlt
mov
insl
push
push
mov
clc
mov
xchg
bound
mov
push
stos
sbb
mov
imul
fimuls
inc
pop
lock
es
push
test
lods
enter
mov
cmpsb
push
ja
push
hlt
push
cmp
movsb
pop
addl
pop
xchg
into
insb
dec
adc
insl
jnp
push
pop
dec
popa
or
xchg
sahf
push
and
mov
mov
cmp
fdivrl
pop
fwait
add
imul
cltd
aaa
mov
mov
jl
shl
mov
pop
push
movsb
data16
push
leave
addb
jle
in
rcrl
std
out
cmp
push
stos
neg
mov
popa
mov
aaa
sbb
fimuls
dec
cli
clc
inc
aam
add
jecxz
test
dec
cmp
lcall
repz
push
enter
sarl
and
and
addr16
stc
or
and
rol
lret
int
ja
push
pop
mov
in
lods
xchg
cltd
or
push
xchg
arpl
add
lahf
cli
and
xchg
or
xor
stos
es
inc
and
mov
fidivl
ret
mov
arpl
push
mov
mov
cltd
in
cwtl
lea
mov
sbb
lret
push
mov
mov
lea
xchg
std
and
adc
sti
jno
test
adcl
cmc
adcb
sub
mov
decl
cmp
lret
inc
into
outsb
rorl
dec
ficompl
in
insl
add
dec
push
loope
std
insb
rclb
sti
sbb
ja
jbe
adc
or
mov
aam
mov
adc
jnp
movsl
cmp
adc
ret
jbe
xchg
sub
sbb
pusha
push
lea
les
repnz
rolb
jge
adc
fmull
sbb
mov
pop
cmp
fldenv
je
mov
or
push
sti
addr16
mov
add
lea
xchg
int
test
mov
out
loope
es
nop
outsl
les
hlt
sbb
push
xor
pop
divl
push
xor
xor
outsl
fcomps
in
hlt
pop
loop
pop
or
outsb
scas
xor
add
and
push
aaa
cmp
mov
fdivrl
mov
xchg
insb
repz
mov
mov
sti
and
aas
aad
out
lds
pop
xor
and
jecxz
mov
inc
xchg
sbb
push
outsl
add
fwait
mov
inc
ss
ljmp
pop
andl
inc
enter
adc
js
lahf
nop
mov
or
xchg
jne
add
inc
jg
jne
sbb
std
dec
xor
or
inc
mov
mov
stc
xchg
jge
testb
lock
jnp
mov
test
lret
cs
imul
cmp
dec
xchg
jae
mov
and
inc
sbb
add
push
ds
push
ret
inc
les
stc
sbb
and
sub
pop
mov
mov
addl
push
decl
bound
xchg
je
jl
addr16
sub
lock
xor
faddl
cmp
lds
jnp
add
sbb
cmp
sub
cmp
inc
cli
fcmovne
icebp
sahf
or
dec
xchg
dec
std
cmc
cmpsl
lcall
mov
aad
outsl
fisttpl
bound
movsl
mov
pop
xor
jl
xor
add
outsl
jb
fwait
cmp
or
mov
lods
into
enter
imul
sub
and
inc
lcall
aad
cmpsl
mul
push
xor
shl
je
xchg
scas
pop
push
pop
imul
push
jns
jl
cmp
add
adc
jmp
js
out
hlt
lret
sub
mov
pusha
and
xchg
iret
hlt
rclb
mov
mov
xor
aas
loop
scas
ss
xor
cmp
mov
scas
sub
and
jne
cli
insb
or
xchg
out
xor
ret
cltd
enter
xchg
insl
je
insb
xchg
cmp
loop
sbb
inc
loopne
into
pop
outsl
sti
xor
inc
and
lods
jle
jbe
in
push
out
cli
push
int3
lock
dec
ror
sub
insb
sbb
dec
inc
mov
into
mov
sahf
or
sti
push
inc
xor
stos
pop
push
dec
and
cmp
jo
fidivs
fstps
and
jbe
enter
repz
jns
pusha
inc
xor
adc
repnz
cmp
cmpsl
je
xchg
mov
leave
inc
lret
add
cs
mov
or
loope
cwtl
dec
xchg
nop
sub
cmpsl
sbb
jnp
aaa
in
lock
in
adc
jp
dec
lcall
ret
shlb
and
movsl
mov
inc
call
cli
cmp
cmp
sub
push
sub
loope
mov
mov
arpl
lods
push
fs
jbe
pcmpeqd
mov
test
or
pop
aad
mov
iret
sub
sub
aas
pusha
jns
sbb
scas
xchg
dec
cmp
bound
in
out
pop
push
les
inc
fimull
sbb
paddusw
stc
cld
cmp
sahf
fnsave
inc
xchg
mov
fwait
mov
sub
mov
pusha
xchg
clc
xor
outsl
jg
data16
cmp
jg
add
in
jno
mov
clc
jle
out
dec
pop
push
add
dec
jne
adc
int3
pop
sbb
add
and
mov
out
call
cmpsb
call
in
addl
cmp
pop
push
and
stos
and
or
scas
sub
pop
lea
adc
rcrb
shr
lret
add
rcrb
pushf
loopne
stos
adc
and
dec
rclb
int3
jp
les
ss
mov
pop
lret
clc
sbb
push
ret
adc
test
mov
ss
or
scas
push
mov
ljmp
add
xor
insl
mov
inc
rorl
and
enter
jb
cmp
pop
pop
adc
popa
sbb
clc
sbb
idivl
sarl
stos
mov
lods
repnz
outsb
and
scas
pop
and
daa
sti
ret
inc
in
jne
and
jb
loope
fidivrl
aas
xlat
mov
out
movsl
movsl
data16
or
out
aad
pushf
fisubrs
add
dec
lea
test
fcmove
sbb
sub
inc
push
repz
adc
js
std
xchg
jns
xor
lods
into
shll
jp
outsb
jmp
test
and
sbb
outsb
push
push
push
push
lcall
bound
lcall
jl
movsb
test
mov
dec
std
adc
or
mov
andb
sahf
pusha
int
xchg
ret
and
or
sbb
pusha
sub
divl
push
cwtl
pop
fstl
dec
mov
pop
adc
popf
shr
seto
dec
imul
inc
sahf
xchg
or
push
lds
je
rclb
mov
inc
lock
sbb
hlt
scas
push
push
scas
filds
lea
pop
add
jecxz
xchg
sub
and
call
dec
or
sbb
pop
adc
jo
or
adc
cmc
jecxz
xchg
adc
mov
inc
sub
call
lds
lahf
imul
jo
cwtl
shlb
iret
fwait
mov
bound
out
cwtl
mov
test
cmc
outsb
icebp
xchg
popa
lret
rolb
str
add
test
pusha
arpl
push
cli
pop
inc
daa
sti
or
mov
andl
and
mov
js
dec
fsub
aaa
mov
jnp
xlat
dec
aam
adc
jb
icebp
inc
test
stos
cmp
push
repnz
sub
mov
xlat
sub
push
sub
adc
mov
popa
xchg
sti
bound
out
out
or
sbb
neg
insb
xor
or
hlt
cmpsl
xor
int3
or
pushf
mov
jne
mov
iret
jl
movsb
sub
sbb
cmp
shl
and
outsb
aas
test
and
lahf
lods
nop
adc
dec
ret
test
loope
aaa
bound
dec
mov
sub
mov
mov
jae
idivb
inc
inc
sbb
movsb
shrb
and
mov
adc
insb
sbb
pop
add
adc
add
lock
jge
stos
lea
xor
xchg
movsb
cmpsl
daa
repnz
mov
pop
cmp
das
pop
sbb
imul
push
sbb
outsl
and
lahf
sub
int3
das
icebp
mov
insb
push
fstl
mov
sub
scas
enter
test
enter
imul
cmp
shlb
pop
dec
loop
dec
test
movsb
cwtl
mov
pop
jle
std
in
xor
pop
fxch
cmp
sarb
and
cs
test
xchg
sbb
adc
pushf
bound
inc
and
and
adcb
jmp
outsb
lea
popa
stos
hlt
jbe
movsb
popf
inc
dec
insb
pop
mov
cltd
push
iret
sub
roll
cwtl
add
lods
rol
sub
loope
mov
xchg
fs
out
int
nop
sbb
or
or
jecxz
test
sbb
cmpsl
shrb
pop
sbb
ficoml
out
loope
iret
jle
jl
popa
aas
fisubs
in
sub
sbb
cmc
xchg
sub
adc
fistl
in
inc
out
or
int
add
scas
dec
test
imul
jne
adc
insb
js
pop
lcall
cwtl
std
xchg
mov
shll
push
icebp
adc
inc
dec
mov
xor
or
dec
int
and
add
fs
cmp
movsb
fdivp
mov
cs
out
stos
and
int3
pop
test
xchg
push
movsb
jnp
cmpb
add
push
cmp
mov
sbb
int
mov
imul
and
add
sbb
movsl
lcall
mov
lret
cltd
idiv
jnp
aas
and
cli
pop
cld
pop
clc
dec
testb
ret
mov
iret
nop
insb
lods
xlat
stc
jbe
mov
stc
jbe
xchg
loopne
ficompl
mov
pop
cld
xor
lret
scas
push
mov
mov
leave
dec
inc
mov
jmp
leave
lods
pop
xor
dec
mov
movsl
addr16
or
jecxz
movsl
out
hlt
popa
add
xchg
std
fs
jl
js
outsl
into
roll
mov
jno
pop
adc
cmp
mov
ds
jle
and
jg
imul
ficoms
aad
mov
ret
aas
adc
fldl
dec
fsubr
inc
inc
outsl
adc
cmp
mov
jno
rcrl
lret
mov
jnp
in
test
push
adc
lea
xor
cs
dec
and
mov
push
push
adc
or
outsl
out
push
xchg
imul
and
fldl
rorl
or
andl
mov
dec
vmovmskpd
or
lret
ja
dec
fimull
or
icebp
pop
lds
stos
push
mov
rcl
adc
push
push
loop
sbb
ss
pop
stc
mov
dec
jns
leave
divb
cmp
sub
mov
mov
and
push
lahf
incb
xchg
iret
mov
lret
or
xchg
jo
fbld
cli
shl
xchg
jg
or
sbb
dec
daa
lds
jae
pusha
and
and
push
or
cltd
inc
arpl
xlat
jl
inc
imul
sbb
testb
pop
xor
mov
cli
clc
nop
leave
fyl2xp1
xor
jecxz
btr
mov
mov
fldl
fsubl
fnstsw
int3
and
jne
cmp
jg
daa
push
mov
jno
push
popf
sub
mov
lahf
push
sbb
push
lahf
insb
jle
push
cmp
fwait
jecxz
mov
and
pop
jne
jg
sbb
sbb
pop
dec
out
mov
ljmp
jnp
mov
leave
inc
xchg
xchg
fs
clc
addr16
jge
mov
pusha
xchg
es
subb
or
xchg
sub
imul
je
add
nop
in
lds
push
ret
insb
push
sub
in
fiaddl
mov
das
into
out
mov
xor
xor
enter
cmc
int
adc
movsl
test
inc
fistps
xor
sub
push
or
clc
cld
xchg
out
xlat
outsb
fcmovnu
push
mov
push
jecxz
xchg
repz
push
jecxz
in
out
pop
mov
fimuls
mov
repz
int3
es
js
incb
js
mov
loope
out
jo
adc
lcall
push
cmp
bound
into
xrelease
test
xchg
ficoms
mov
sub
shlb
mov
iret
mov
clc
aas
jp
es
ror
rcll
out
subb
push
data16
iret
lcall
add
mov
and
das
add
in
cmp
lret
or
push
repz
push
push
pop
mov
out
shrb
cmp
mov
jmp
sbb
insl
jmp
inc
mov
push
push
inc
shll
xor
popa
movb
adc
mov
rorl
ret
push
rcr
decl
cmpl
daa
push
cmp
xchg
push
cmp
out
xor
popa
mov
test
in
inc
xchg
cmp
pop
jl
xchg
sbb
xchg
loopne
out
sbb
xor
and
int
cmp
sub
and
je
in
in
sub
iret
not
push
mov
scas
pop
out
xor
test
sbb
in
cmc
sbb
add
scas
insl
dec
jge
ss
xor
xchg
push
jmp
or
test
cmp
jle
rolb
jle
outsb
ds
inc
fs
test
iret
data16
dec
cmp
outsl
sti
or
adc
inc
je
or
ljmp
test
push
mov
push
jl
in
pop
sub
mov
or
mov
insb
xor
subl
popa
mov
cmp
dec
jo
xchg
iret
lods
or
pop
push
inc
jnp
dec
xchg
ss
push
aad
in
enter
jmp
lods
dec
orb
cld
inc
and
pop
fstpl
mov
cmp
adcl
sbb
cli
dec
inc
lret
and
dec
fsts
lahf
pop
ret
mov
leave
mov
fs
je
jne
hlt
add
push
and
leave
xchg
xchg
sbb
mov
dec
sub
inc
xlat
push
sbb
cmp
dec
add
ds
and
fldt
pushf
enter
jle
bswap
cmp
inc
andl
cmp
push
je
pusha
push
sbb
les
pop
int
cmpsb
sub
sub
out
mov
bound
das
cli
mov
pop
sub
lret
mov
pop
insl
clc
mov
inc
outsb
pop
mov
inc
xor
and
les
lret
movsl
leave
pop
cltd
out
sbb
jle
jns
xchg
sbb
orl
icebp
fcmovnbe
idiv
xchg
sub
mov
stos
sbb
dec
in
inc
imul
repnz
xorl
into
loope
and
sbb
xchg
fwait
pop
mov
xchg
js
xor
mov
imul
xchg
subb
bound
mov
pop
xlat
pop
and
jno
xchg
iret
cmp
ds
sbb
mov
arpl
pcmpeqd
jl
test
xor
scas
cmpsl
sti
fsubs
ljmp
mov
jbe
scas
or
pop
mov
mov
jnp
jae
arpl
lds
insb
jns
cltd
sub
cmp
mov
sub
mov
inc
rcrb
ret
aam
fcomip
or
dec
cmp
clc
lret
xchg
rol
mov
add
push
adc
inc
sbb
call
data16
sahf
daa
xchg
xchg
xchg
mov
rcrl
aad
mov
ljmp
jae
aam
shl
imul
adc
push
mov
cmp
outsl
addr16
jae
lahf
push
nop
adc
mov
movsb
xor
mov
add
inc
rcrb
lea
and
cs
mov
jp
or
pop
pop
rorl
cmpsl
mov
or
inc
sbb
fs
sub
xor
cmpsb
xor
inc
jns
fs
push
out
in
mov
adc
xor
push
cld
pop
stos
lea
arpl
jg
repz
jbe
lea
cwtl
test
mov
scas
pop
jp
popa
mov
xor
shl
jns
cli
lds
lds
inc
loope
out
les
sub
popa
int3
in
test
xor
popf
push
sbb
sub
lret
add
mov
sbb
and
arpl
fmulp
mov
adc
sbb
aad
pop
rolb
in
scas
jge
mov
lahf
cmp
or
adc
jecxz
push
or
and
hlt
push
xor
pop
fnstcw
in
repnz
xor
jmp
sbb
das
ds
dec
int3
imul
pop
pop
push
fnstcw
jecxz
movsb
mov
ljmp
mov
mov
lcall
out
jae
xchg
cmp
sbb
loope
mov
adcl
adc
lahf
out
out
repnz
cli
add
cltd
js
dec
mov
mov
pop
adc
mov
inc
mov
cmpsl
mov
sbb
cltd
aam
stos
push
int
mov
fcoml
lods
pop
iret
or
mov
pop
pop
jb
and
push
out
rorb
sarb
addr16
adc
pop
repz
push
stos
pop
push
mov
pop
roll
shll
jbe
mov
aam
fisubl
sar
call
movsl
cwtl
jmp
sbb
xchg
clc
dec
dec
enter
mov
sbb
dec
clc
sub
pop
ja
xor
add
daa
xlat
add
lret
dec
test
xor
into
fsubs
mov
mulb
cmp
xor
mov
movl
stc
shl
push
movsb
lds
pop
roll
dec
js
inc
ffree
inc
add
pop
gs
jl
and
test
push
sub
and
shl
pushf
inc
sahf
mul
or
out
cmc
fdivs
bound
jl
in
insb
ja
shll
outsb
call
jg
cmp
sbb
mov
test
add
ss
call
jp
xchg
mov
in
jp
dec
loopne
inc
dec
push
ds
pop
jge
pop
in
mov
mov
aam
shlb
jecxz
insb
and
mov
dec
inc
pop
rdmsr
adc
mov
scas
pop
push
cwtl
push
dec
fdivrs
in
jne
or
mov
adc
lret
fcmove
push
int
push
cmp
push
jbe
mov
xchg
aad
xchg
mov
cmp
xlat
add
inc
lea
jnp
cmp
lods
fcompl
js
les
or
jns
fs
jbe
outsb
push
int
bound
push
pop
sahf
popa
xchg
push
push
sbb
outsb
xchg
mov
dec
and
push
jecxz
or
mov
pop
sbb
not
lret
js
std
dec
test
rolb
dec
push
mov
xchg
repnz
sub
mov
outsb
cwtl
or
inc
fiaddl
hlt
mov
cmc
sbb
setl
enter
and
xchg
sub
add
sub
push
cmc
aaa
xlat
outsl
int3
lods
pop
pop
pop
std
cs
mov
mulb
mov
je
ss
push
xchg
inc
fstpl
or
dec
les
pop
fstpt
stc
lods
rcrb
fs
xchg
mov
sti
xor
pop
data16
roll
loop
shr
xchg
cld
lret
sti
push
jle
xor
aad
sahf
push
in
sbb
xchg
movsb
rclb
loopne
pop
nop
ror
dec
and
or
xor
test
dec
dec
push
sub
out
lea
mov
cmpsl
and
call
out
add
js
scas
popa
mov
fwait
mov
in
xor
mov
insl
loope
push
incl
loopne
stos
cmp
rcl
cmp
adcb
mov
jno
cmp
int
xchg
xorb
shll
adc
mov
inc
mov
jbe
fmuls
adc
mov
adc
out
imul
enter
sub
jecxz
cs
ljmp
xor
jns
dec
jg
pop
lea
int3
push
cld
cld
dec
cmp
jp
stos
aas
addb
mov
scas
mov
dec
pop
sti
jnp
pusha
mov
xchg
sub
lcall
mov
enter
cmc
shlb
and
scas
pop
es
or
icebp
mov
in
or
fstps
inc
idiv
ljmp
or
and
pop
lods
add
xchg
clc
push
arpl
insl
enter
in
lock
sbb
xor
decl
cmp
mov
cld
icebp
mov
jg
cwtl
inc
aad
enter
enter
add
lret
xor
dec
push
add
dec
mov
add
sub
cmp
shrb
mov
jg
jp
fldl
inc
and
xchg
inc
sti
inc
lcall
lahf
inc
sbb
scas
sbb
test
fsubs
popf
push
mov
sti
inc
jno
and
arpl
jmp
mov
cmpsl
dec
and
fsubl
mov
idivl
fcoml
imul
ds
mov
leave
pop
ficompl
mov
xchg
int3
sub
sbb
divl
pop
cld
into
xor
pop
mov
mov
jp
or
hlt
test
xor
jle
cmc
jge
push
lret
lock
sub
scas
mov
leave
xlat
pop
cwtl
iret
loope
sub
imul
out
mov
jge
rolb
jns
xchg
inc
dec
negb
push
fdiv
popa
mov
jecxz
sub
repz
shrl
sub
add
or
mov
cmp
cmp
inc
cmp
and
ret
aas
mov
mov
mov
mov
loope
fisttpl
sahf
out
loope
enter
ljmp
daa
sub
jle
dec
dec
andb
sub
sahf
push
imul
push
rol
xchg
xchg
pop
xor
ficomps
je
arpl
and
dec
sub
rolb
faddp
shr
xchg
lret
or
pop
sbb
mov
mov
imul
sbb
cmp
push
pop
in
std
in
xor
mov
icebp
adc
fs
rcrb
lods
adc
lods
sub
jbe
orl
cmc
leave
cltd
ljmp
mov
fimuls
insl
movsl
add
adc
das
xchg
mov
test
lret
cli
and
xor
adc
add
xor
sbb
fisubs
imul
jg
fistpll
mov
mov
out
mov
rcl
int
sub
xchg
mov
xchg
int
fwait
addb
add
pusha
fcmovnbe
xor
in
loopne
sarl
aas
add
mov
sbb
out
int
sbb
mov
add
in
dec
fisttpl
lret
xchg
push
fxch
dec
adc
sub
mov
or
lret
movsb
xlat
jmp
lret
aas
fstpl
mov
or
pop
pushf
dec
xchg
in
das
aaa
push
pop
mov
push
comiss
loopne
orb
outsb
aam
movsb
dec
push
dec
loopne
ja
mov
lds
mov
and
or
repz
dec
jmp
xor
decl
mov
cmpsb
jae
int3
das
icebp
mov
sbb
or
push
aad
imul
dec
add
int
repnz
outsl
inc
aad
sub
add
dec
sbb
sbb
or
xor
jge
adc
test
xor
rorb
test
aaa
jae
mov
add
jb
movsl
xchg
aad
ja
push
es
mov
sbb
add
shlb
orl
push
pop
push
les
sub
mov
ret
add
nop
mov
inc
push
repz
lahf
test
lret
fs
lret
inc
cmp
sbb
iret
mov
jge
sbb
cmp
fiaddl
lods
push
ret
add
lahf
dec
aas
jb
adc
add
xchg
cs
stc
cmp
fnstcw
mov
fmuls
adc
push
cmp
in
xchg
pop
aam
push
mov
inc
outsb
add
mov
inc
xchg
sub
mov
or
cmpsb
mov
pop
test
xchg
divb
mov
sbb
jle
inc
pop
jle
daa
adc
ja
into
cmp
jp
pop
sahf
adc
push
jecxz
repz
insb
or
mov
push
out
dec
int3
orb
roll
xchg
stos
loop
inc
cmp
jp
out
inc
pop
out
inc
cmp
adc
mov
out
inc
int3
dec
arpl
test
call
ret
stos
orl
push
shrl
fdivrs
pop
sub
and
fbstp
mov
cmp
dec
pop
pop
shll
repnz
negl
inc
sub
es
mov
mov
xchg
lods
sbb
mov
in
xchg
xchg
pushf
sti
es
sub
popf
sbb
movsb
sub
pop
mov
push
jl
into
or
lods
les
or
xchg
imul
clc
xchg
and
mov
xor
aas
idiv
fdiv
and
xchg
xor
mov
aas
inc
pop
mov
push
sbb
lahf
mov
dec
pop
push
mov
add
bound
fimuls
clc
gs
xchg
sbb
pop
sbb
lahf
ret
jg
idivb
notb
nop
inc
mov
inc
cmp
and
sbbl
movsb
dec
xor
mov
fcomps
jne
jecxz
add
inc
repz
lock
mov
add
mov
xchg
pop
int
testl
fmul
jb
sarl
or
cmp
add
mov
pop
and
ror
bnd
cltd
in
jp
out
push
out
loope
je
sbb
orb
out
popa
lock
and
sbb
inc
out
addl
cli
scas
sbb
inc
ret
loop
jl
pop
or
sbb
lock
stos
and
push
mov
sti
jge
dec
enter
lock
out
inc
ret
bound
xchg
aam
lahf
out
push
addb
sarl
addl
dec
sub
mov
jp
in
cmpsl
pop
addl
dec
xchg
mov
nop
pop
push
call
mov
add
fstl
das
cwtl
clc
jae
pop
aad
fwait
sbb
sub
cmp
ret
subl
mov
call
loopne
jne
ds
add
pusha
or
test
fdivrl
loop
repz
adc
push
bound
stos
sub
cltd
push
mov
and
dec
loop
push
and
dec
icebp
push
push
pushf
jle
mov
pop
repz
xchg
sbb
inc
push
test
xchg
mov
jb
and
pop
add
pushf
and
in
clc
stc
dec
or
dec
stc
mov
lods
add
test
in
arpl
fisubs
jl
mov
mov
pop
mov
push
scas
cmpsb
or
inc
dec
test
loop
push
lret
cmp
jae
push
icebp
daa
mov
xchg
cmp
dec
orl
es
jo
scas
mov
xor
sbb
sarb
or
in
mov
gs
mov
cmp
mov
fucomi
pop
and
sahf
push
xor
add
faddl
lcall
aaa
scas
popf
push
inc
inc
arpl
hlt
mov
mov
gs
mov
jmp
cmp
pop
jne
pop
add
jl
sub
mov
fnstcw
andl
sbb
mov
ja
das
int3
or
mov
mov
adc
xchg
lock
push
pop
fldl
ja
add
and
mov
and
cmp
xchg
fwait
loope
aad
xchg
mov
mov
mov
cmp
lock
nop
pusha
sub
addr16
mov
das
mov
hlt
icebp
xor
fdivrs
out
and
xchg
add
rcrl
mov
cmp
adc
cmpsb
or
jmp
mov
aaa
push
nop
mov
fists
stos
push
mov
shl
mov
shll
das
or
out
cwtl
repz
sti
vcvtdq2pd
pop
mov
std
shrb
add
lods
add
bswap
pop
or
leave
arpl
push
imulb
push
cmp
cmc
adc
int
mov
es
imul
rclb
push
mov
aaa
repz
das
icebp
xchg
loop
popf
mov
aas
xor
mov
in
rcl
movsb
mov
test
loop
or
lock
test
icebp
push
divl
adc
jmp
xchg
and
gs
mov
in
ljmp
enter
int
push
int3
inc
in
add
add
shlb
mov
or
jbe
shrb
adc
and
push
test
loop
cmpsl
pushf
scas
pop
xchg
fcmovne
lret
stc
xchg
adc
in
cmp
fsts
je
icebp
mov
cmp
data16
adc
or
dec
mov
inc
js
sub
jbe
mov
loope
lahf
test
stos
push
xlat
popf
test
nop
adc
jbe
sub
push
xchg
out
or
add
mov
xor
jne
aam
jbe
mov
xlat
push
je
daa
bound
push
std
sbb
mov
lret
pop
jno
dec
stc
mov
cmp
xchg
add
and
fnstsw
or
xchg
fsts
insl
inc
mov
scas
fidivrl
jl
adc
loop
sti
ds
push
inc
mov
or
sub
push
sahf
in
pop
push
mov
sub
sbb
ror
fstps
subb
pop
or
lea
pop
lahf
inc
xor
lods
mov
lret
gs
fnstsw
repz
push
or
insb
lds
push
mov
in
sbb
sub
insl
test
mov
shlb
inc
push
or
and
imul
jecxz
push
test
pop
dec
ret
fwait
sbb
nop
mov
sbb
mov
cmp
adc
jle
pop
add
fs
jl
mov
in
stos
mov
mov
aam
adc
inc
inc
fs
daa
incl
or
int
decl
cwtl
inc
ret
sbb
shrb
add
dec
dec
sbb
fsubr
fsubs
scas
sti
add
pop
mov
mov
jecxz
ss
sti
lods
aaa
and
add
sbb
push
mov
cmpsl
addr16
test
sbb
push
rclb
icebp
addr16
lret
xor
pop
cmp
fistpl
imul
or
sbb
insl
push
clc
xor
daa
faddl
inc
mov
xchg
test
rcll
push
mov
jo
pop
pop
roll
idivl
mov
mov
out
jbe
test
loope
inc
aam
sbb
xchg
push
inc
in
pop
or
nop
lods
es
pop
dec
jmp
cmpsl
ret
xor
mov
dec
push
cmp
jmp
xchg
mov
out
push
sbb
pop
mov
inc
imul
cmpb
and
dec
push
repnz
bound
sbb
inc
sub
lea
xchg
in
dec
and
lcall
das
ja
push
pushaw
mov
fwait
aam
push
xchg
pop
sub
xchg
push
loopne
fs
xchg
out
mov
ljmp
mov
add
pop
fnsave
dec
stos
lods
fwait
mov
and
shll
pop
clc
push
imul
or
inc
leave
arpl
jecxz
fiadds
pop
xchg
pop
ret
mov
scas
pop
inc
inc
gs
test
add
jecxz
outsl
leave
ss
lea
or
xchg
and
jmp
outsb
adcb
jb
mov
popa
aaa
or
inc
xchg
push
jg
out
ljmp
sub
push
rcrb
bound
inc
or
jp
pusha
pop
or
loopne
js
sbb
jnp
in
out
push
sub
sub
cwtl
dec
mov
push
sbb
jecxz
ss
xchg
push
dec
ret
xor
cli
rcrb
dec
xchg
mov
lret
cmp
faddp
rcl
xchg
jmp
or
sub
pop
xchg
mov
aad
enter
jl
and
loopne
pop
cmp
je
add
lods
push
jmp
out
dec
jmp
fwait
mov
shlb
int
daa
insl
xor
ret
pop
imul
cmpsb
sbb
sub
jne
inc
dec
mov
jb
adc
cmp
je
mov
jmp
es
jb
sbbl
repz
or
cmp
imul
jo
aad
inc
cld
test
lods
or
inc
or
fsubs
jbe
push
test
mov
add
out
jp
std
testb
inc
sbb
inc
cmp
ds
test
aas
loope
mov
fdivrs
repz
mov
test
orb
and
jnp
daa
cmc
pushf
pop
dec
jmp
mov
xchg
push
adc
add
or
cld
cmovg
lret
out
cmp
icebp
mul
fdivrs
xchg
inc
sti
bound
sbb
hlt
cmp
in
sub
or
inc
in
hlt
outsl
or
and
mov
pop
test
push
fsts
dec
loope
xchg
stos
push
mov
addr16
mov
jno
sti
lods
movsl
cmp
loopne
xchg
aas
push
dec
and
imul
or
les
bnd
das
mov
and
leave
stos
fsubl
and
dec
pop
imulb
mov
testl
sbb
fistl
push
xor
andb
bound
cmpsl
mov
mov
inc
lahf
rorl
mov
dec
sub
pop
jmp
ret
xchg
hlt
push
lods
pop
out
xchg
ror
mov
cmp
xor
lahf
add
cmpb
ds
loop
lds
fwait
mov
arpl
int3
cld
adc
mov
adc
lcall
test
jno
notl
fadd
fwait
rorb
mov
outsl
mov
out
jb
jno
cmp
inc
xchg
ss
xchg
pop
mov
fstpl
sahf
inc
outsb
popf
and
cmc
testl
mov
ret
xor
leave
push
arpl
fst
mov
mov
mov
pop
sbb
dec
ja
pop
popa
inc
mov
or
popf
aaa
into
fnstenv
or
rcll
add
clc
xchg
sbb
sahf
hlt
iret
push
jmp
imul
mov
pop
cmp
scas
inc
adc
sub
fucomi
sub
test
lock
out
or
pop
lods
test
dec
cld
movsl
push
mov
dec
and
inc
rclb
adc
xor
decb
mov
test
add
je
push
mov
fadds
stc
stc
lret
rolb
add
shll
mov
std
cmpsl
adc
cmp
aas
add
or
ret
push
xchg
xchg
adc
jmp
cltd
mov
add
imul
inc
mov
push
arpl
sbb
xchg
test
push
mov
clc
jns
iret
xchg
imul
push
dec
add
fwait
add
sub
mov
add
addr16
push
xor
jno
shlb
bound
sub
dec
push
mov
sub
mov
pop
mov
sarl
jne
pop
adc
dec
dec
das
cmp
sbb
mov
mov
add
or
ja
test
push
stc
dec
mov
and
nop
dec
imul
cmpsl
xchg
test
add
jnp
push
and
ds
pushf
repz
fstps
lock
dec
jmp
fldenv
mov
inc
push
shll
inc
adc
or
in
cltd
inc
dec
subb
mov
cltd
aad
mov
in
pop
gs
aam
dec
mov
test
xor
sahf
stc
mov
icebp
fldt
loopne
sub
and
cmpsb
enter
pop
loop
push
daa
js
rorb
jmp
sbb
adc
cmp
das
or
lcall
mov
out
lea
inc
mov
cs
and
xlat
enter
and
push
dec
dec
test
daa
enter
daa
call
in
xor
and
pop
in
cmp
mov
aaa
mov
aas
gs
enter
ss
ret
adc
inc
cmp
sbb
or
jp
ror
fs
fcmovne
cltd
test
orb
sub
adcl
pop
fmull
push
xchg
xchg
repnz
jg
sbb
add
movb
andl
lret
mov
addr16
jns
filds
sub
jl
cmpsb
cwtl
dec
sti
cmpsb
popl
push
clc
add
je
sub
sarb
mov
pop
or
sub
jmp
cmp
adc
inc
add
outsl
icebp
lcall
icebp
mov
dec
xchg
adc
fbstp
outsl
mov
in
ds
xchg
fimull
faddl
out
dec
mov
rcrl
sub
xchg
out
inc
icebp
aad
mov
cmpsb
bnd
jne
lahf
mov
insl
pop
jmp
bound
loopne
iret
cld
pop
xchg
cmp
sub
jo
cmp
loopne
bound
lea
jp
pop
adc
arpl
test
les
dec
cmp
daa
into
cmp
adc
stos
sarb
jne
mov
fs
aam
out
sub
mov
int3
and
mov
xor
xor
push
ljmp
xchg
cmpsl
jp
pusha
fisubs
mov
mov
sbb
mov
shll
xchg
mul
mov
push
int3
clc
pop
jb
in
add
ja
sub
hlt
inc
cltd
stc
pop
lea
insb
sbb
mov
mov
inc
adc
mov
lods
xor
xchg
ja
cmp
enter
or
or
mov
xor
in
and
cmp
sub
rorl
or
test
das
cmc
movsb
mov
mov
adc
mov
jl
into
enter
lds
pushf
insb
jno
aam
into
in
mov
dec
jmp
scas
cmpsl
or
ja
outsb
into
push
xchg
scas
loope
mov
pop
add
fst
push
js
mov
push
and
cmp
jbe
jo
dec
stos
jnp
fidivs
scas
inc
fbld
clc
inc
das
scas
arpl
insl
sbb
mov
push
xor
push
fs
and
fs
inc
addr16
test
xor
nop
std
rorb
pop
add
sbb
xchg
mov
cs
xor
out
push
cmp
lret
or
inc
jmp
mov
mov
cmp
repz
imul
jecxz
in
js
call
sbb
jecxz
rolb
xsha256
mov
jnp
jp
and
push
push
pushf
pushf
jo
inc
imul
sbb
bound
mov
sahf
test
fdivr
adc
jne
gs
imul
push
mov
dec
or
scas
sti
inc
cmp
mov
lcall
mov
test
cmc
mov
cmc
push
or
sub
or
out
daa
push
mov
jp
in
movsl
xchg
out
inc
cltd
in
pusha
cmp
les
mov
xlat
lods
dec
mov
lock
aaa
mov
push
iret
inc
das
addr16
inc
jg
or
pop
movsl
test
adc
les
test
popf
jno
push
movb
or
add
dec
mov
mov
xor
int
dec
pop
mov
xor
dec
mov
inc
and
or
dec
mov
enter
mov
xor
out
xorl
fucomip
lock
jno
pop
pop
mov
sbb
stos
addr16
xor
scas
mov
inc
rcll
cmp
ds
mov
ret
mov
dec
cmp
pusha
xor
call
sbb
int3
jg
push
cmpsl
mov
mov
xchg
data16
jns
xchg
dec
insl
jp
jmp
rorb
das
mov
cltd
imulb
cltd
jg
daa
jmp
mov
aam
outsb
inc
pusha
popf
sahf
sub
int
sbb
aaa
push
add
push
jbe
sbb
scas
loope
or
jo
xchg
cmpsb
js
mov
push
negb
mov
mov
sti
fxch
pop
sti
movsl
cmc
iret
outsl
sub
adc
pop
mov
cmp
sub
mov
fnsave
ficoml
xchg
into
sbb
test
jnp
mov
inc
repz
pusha
ljmp
out
sahf
xor
mov
push
cwtl
or
cmpsb
sbb
notl
pop
movsl
xchg
cs
push
clc
sbb
mov
std
sbb
push
mov
pusha
es
push
fstps
and
push
fldl
out
add
add
adc
ss
fstps
and
dec
hlt
pop
addr16
mov
adc
std
mov
add
xchg
daa
jg
int
sti
xchg
out
sub
cmp
fcompl
mov
cmp
in
inc
sub
mov
and
mov
fcoml
jmp
adc
loop
cli
insb
jns
add
arpl
cld
push
rcrb
gs
into
int3
push
push
inc
div
mov
out
scas
pop
addr16
jg
call
cmp
xchg
dec
dec
lods
notl
sbb
ss
shll
xor
dec
lret
push
inc
leave
jno
inc
in
test
stos
cmp
add
sbb
inc
sbb
pop
cmp
pushf
pop
cmp
adc
mov
add
in
sbb
lret
in
test
mov
or
pushf
jmp
pop
adc
sub
in
adc
pop
jecxz
in
lods
lahf
sbb
inc
sub
or
into
add
mov
push
push
inc
in
jle
and
dec
scas
fwait
lcall
loope
cmc
jmp
popf
xor
xchg
push
push
push
xchg
or
cmp
add
in
shlb
dec
mov
loop
mov
xlat
aad
loope
xlat
add
adc
and
test
lods
mov
aad
fidivl
pop
pushf
sbb
dec
mov
sarb
imul
push
jmp
inc
hlt
push
xchg
adc
jae
cmp
cmp
push
lret
sub
decl
std
ljmp
std
sbb
fcmovu
and
mov
xor
aas
sub
lods
pop
loopne
outsl
pop
hlt
lods
rclb
shlb
inc
xlat
xchg
lods
jge
pop
and
push
mov
rcr
and
mov
test
dec
jns
sbb
lock
mov
mov
and
pusha
cmc
jb
pusha
sbb
push
inc
aas
or
jno
js
jns
mov
xor
lret
lods
enter
mov
or
addb
xor
movsb
loopne
pop
or
sub
popa
cli
push
jmp
adc
sub
xor
cmp
xchg
cmp
inc
movb
lea
adc
aad
mov
sub
das
sbb
and
dec
fnstcw
ss
ret
das
stos
cld
sbb
call
ss
lds
cmp
jbe
imul
jecxz
mov
cmpsb
cmpsl
jnp
ret
inc
cmp
adcl
cmp
lahf
add
push
push
mov
lds
incl
dec
xchg
mov
push
inc
int3
jno
dec
popa
int3
sbb
rcl
push
pop
loop
out
ja
xor
mov
mov
push
mov
pop
xchg
subb
cmpsl
shlb
push
test
or
shr
stos
test
inc
sub
sbb
mov
sub
or
jo
sbb
jb
scas
into
ret
or
inc
xchg
pop
add
push
mov
push
in
sti
adc
stos
fnstcw
shrb
popf
or
mov
lea
sti
int
jbe
jbe
cld
jae
xchg
fisubrl
inc
mov
insb
push
jns
fistl
mov
insl
int
mov
or
push
mov
xor
dec
add
ret
shll
cmpsb
loopne
rcrl
adc
ljmp
add
mov
fdivl
pushf
mov
loopne
jnp
pop
cmp
sub
mov
push
cmp
and
xchg
cmc
stos
cmp
out
adc
movsb
push
mov
lock
mov
cmp
cwtl
pop
pop
lret
subb
sbb
adc
add
jecxz
fwait
lcall
push
add
mov
orb
pop
cmp
fmull
and
mov
pop
in
push
push
sbb
jo
test
adc
insb
icebp
fnstsw
lods
sbb
into
cmp
xor
sbb
mov
lds
sahf
pop
xchg
adc
cltd
arpl
xchg
inc
mov
dec
jnp
dec
out
fimuls
mov
dec
scas
dec
sbb
dec
xchg
xchg
scas
popa
insb
xchg
test
fsubr
mov
mov
test
incb
into
aad
mov
in
inc
shll
les
inc
stos
pop
rcll
and
lods
arpl
xor
addr16
nop
leave
jno
cmp
into
mov
jo
jg
fisubrl
mov
fistpl
inc
pusha
xor
mov
mov
out
imul
push
test
inc
int3
stc
rep
sub
in
loope
mov
xchg
cmpsb
xchg
ror
xchg
or
fwait
sbb
int3
jmp
cmp
loope
icebp
movsl
out
dec
fstpt
cmp
cmp
dec
jmp
insl
pop
stos
mov
mov
cld
mov
in
fs
ljmp
int
add
xchg
rcrb
lahf
push
je
xor
fbld
push
add
sub
into
lea
sbb
add
mov
call
test
stos
or
dec
into
push
cmp
sub
hlt
jnp
pop
lea
testb
aam
lret
jmp
cmp
loopne
imul
xchg
dec
mov
push
jg
subl
fs
xchg
cmp
je
bnd
cs
icebp
movl
cmpsb
repnz
jno
imul
cmp
jbe
aaa
cmp
pop
out
inc
inc
hlt
cmp
imul
in
mov
pusha
scas
call
sub
mov
mov
ja
sub
fcomp
int
stos
addr16
leave
test
adc
loop
pop
popa
adcb
aaa
std
jmp
movsl
bound
divl
sub
lcall
fwait
mov
shll
loopne
loopne
or
cmp
inc
mov
movl
mov
sub
shrl
mov
dec
hlt
lea
jle
mov
jmp
and
sub
mov
jg
stos
lret
push
push
fsub
mov
pop
xor
outsb
push
out
icebp
inc
push
ret
push
or
dec
cmp
xor
cmc
push
sbb
js
ja
push
pop
jg
fs
jb
xor
xor
jge
in
jno
aas
or
icebp
das
scas
pop
mov
push
jge
mov
mov
dec
sti
jae
fisubrs
inc
dec
sahf
lock
insl
mov
mov
mov
pusha
test
test
js
ficoms
js
mov
inc
sub
add
xchg
mov
xor
push
sti
mov
sbb
mov
lahf
xor
inc
loope
or
add
pop
loop
jp
pcmpeqw
test
mov
pop
imull
insl
push
sbb
addr16
xor
rorb
or
out
js
addr16
lret
or
mov
lahf
push
in
jne
cwtl
nop
sahf
sbb
inc
inc
jp
iret
hlt
xchg
lret
push
rdmsr
dec
clts
push
std
shlb
pop
and
movsb
jge
add
int3
jo
jecxz
mulb
subb
add
cmpl
fdivrp
xor
leave
dec
int
pop
insl
xchg
leave
jge
sarb
insb
and
mov
add
clc
rcll
lea
test
aaa
fimuls
fstp
int3
jmp
mov
xchg
nop
jne
out
lcall
mov
sbb
xlat
ds
icebp
arpl
xchg
lock
or
sbb
xchg
shl
out
xchg
jl
lret
scas
shr
orl
inc
leave
jl
stos
cmp
lods
das
shlb
dec
add
lahf
out
cmc
mov
jnp
loop
xchg
jns
push
insl
and
add
pop
mov
xchg
ficoms
or
jae
int
dec
imul
sbb
bound
mov
mov
pop
sbb
mov
test
movsb
and
mov
adc
sbb
inc
jl
cli
int
dec
ss
stos
stc
lods
lret
adc
dec
leave
push
mov
mov
pop
adc
xchg
pop
sub
outsl
push
mov
rolb
cmp
mov
cld
imul
xor
mov
xchg
add
lret
sbb
rsm
xor
mov
out
inc
inc
dec
sub
add
fnstcw
jns
aam
imul
or
jne
cs
fiadds
test
add
pop
int3
jb
cwtl
mov
jmp
cmpsb
mov
jne
sub
xor
test
test
les
hlt
test
add
pop
mov
lahf
push
lock
sub
rcl
sub
mov
ss
cmp
sarb
sub
pop
xor
or
dec
xlat
sti
add
ret
push
addr16
inc
cmpsb
push
lahf
push
adc
mov
xor
sub
aam
pop
cmp
popa
mov
sbb
lods
and
or
orl
bound
cltd
sbb
dec
dec
dec
ds
inc
outsb
addl
clc
lods
sahf
jo
and
jb
out
jg
pop
cs
in
stc
push
ret
xor
xchg
xor
out
cld
mov
cltd
or
push
lods
add
cmp
loopne
xor
or
fs
push
lahf
ficomps
aad
jmp
xor
jno
push
in
dec
mov
lret
sbb
sbb
ljmp
mov
dec
js
cmp
scas
dec
cmp
mov
scas
and
and
bound
popf
and
lret
sbb
jge
pop
sbb
enter
movsl
lock
shr
sub
shll
loop
lret
adc
xchg
enter
stos
rorl
inc
xor
repz
and
pop
push
pop
int3
push
sub
hlt
mov
pop
add
ss
jbe
xchg
int
leave
sub
and
mov
repnz
lods
xor
repnz
jae
loop
insb
loope
loope
daa
stos
jo
data16
mov
xchg
mov
leave
loop
cmp
lahf
jnp
popa
cmc
xchg
dec
mov
ds
scas
lea
js
cmp
cmpsb
inc
dec
cmp
cwtl
aam
neg
fmuls
ret
jns
shlb
or
mov
popf
bound
pop
inc
pop
cmc
push
xlat
es
into
int3
mov
loope
jns
xor
mov
inc
fbld
mov
popf
les
cmp
insb
xchg
sub
dec
add
mov
jnp
fwait
sbbb
jb
repnz
or
lods
repz
adc
or
cmpsb
xor
push
lds
movsb
js
adc
movsb
insb
dec
fadds
lcall
out
adc
mov
call
mov
or
sub
pop
sub
fisttpl
pop
iret
lret
insl
imul
or
mov
or
scas
pop
cmp
jne
and
repz
sub
lcall
into
test
fmull
rorb
aas
mov
jl
add
inc
mov
test
cmpsl
mov
adc
popf
inc
mov
aaa
lret
in
insl
xchg
sbb
lds
or
and
sbb
push
repnz
rol
pop
mov
into
mov
hlt
dec
repz
xchg
iret
cli
inc
push
mov
sti
inc
jae
or
xor
mov
outsb
lcall
in
es
fstpl
in
fidivrs
nop
ljmp
sub
cmp
test
cmp
pop
pop
sbb
out
aas
pop
arpl
sbb
push
xchg
repz
mov
jbe
mov
xchg
out
inc
hlt
or
xchg
xchg
nop
ds
stc
popa
and
mov
push
push
test
lret
xlat
jl
lret
cmp
xor
gs
leave
int3
jbe
cmp
les
jae
push
sarb
or
pop
mov
and
stos
mov
cmp
dec
mov
lret
out
and
and
mov
popf
dec
lds
inc
lea
dec
xor
mov
mov
daa
arpl
xchg
sub
pop
or
xchg
push
dec
add
pop
movsb
xchg
shll
faddl
adc
mov
sar
in
shrl
adc
jecxz
add
push
lret
fsts
add
pusha
jo
mov
xchg
lcall
mov
inc
shll
in
add
scas
dec
ds
das
mov
pop
pop
scas
jmp
push
inc
jno
dec
test
lahf
inc
rol
push
cmc
adc
shl
es
cmp
lods
and
jo
sbb
mov
dec
add
and
mov
lahf
dec
js
incb
es
int3
sbb
or
cmpsb
fadd
popa
mov
dec
lret
inc
add
pop
bound
frstor
out
subl
in
shlb
into
cmp
pop
sbb
adc
call
rcrl
mov
mov
imul
mov
aaa
push
lahf
mov
mov
add
mov
inc
xor
mov
lock
stos
push
or
lods
rcrl
cld
mov
lods
xchg
sbb
pop
popf
xor
mov
lock
sub
xchg
sbb
pop
cli
sub
mov
mov
and
jecxz
aad
stos
cmp
outsb
dec
lret
sbb
and
cmp
loop
adc
mov
and
mov
fs
push
dec
cmp
aaa
cltd
or
mov
dec
cwtl
movsl
pop
repz
pop
in
insb
gs
xor
das
fistps
xchg
add
mov
sbbb
aam
and
mov
mov
sar
rcr
ror
lret
test
scas
dec
test
loope
mov
int3
and
jmp
scas
inc
pcmpgtb
inc
add
dec
add
lock
fwait
inc
cs
or
test
pop
adc
bound
mov
or
std
test
cld
iret
pop
jg
subl
and
cmpsl
mov
pop
pop
xorb
rolb
or
and
and
lret
xchg
mov
cmpl
adc
jge
cltd
call
jl
push
push
push
cli
jg
push
xorb
test
jmp
loope
cmp
xchg
addb
icebp
ss
jle
loop
pop
rolb
cmc
mov
pop
mov
addb
loopne
and
adc
jne
lahf
add
inc
or
movsb
pusha
lock
push
add
dec
pop
cmpsl
jb
mov
pop
loope
mov
pop
aad
nop
aad
cmpsb
dec
stos
fs
cld
movsb
shr
stc
fldcw
movhps
pop
hlt
lahf
ljmp
out
test
enter
cmp
aad
sbb
insl
in
cmp
push
xchg
or
mov
pop
incb
pusha
mov
or
add
leave
repnz
inc
cmp
adc
cld
xor
ret
mov
rorl
aam
rolb
lea
jne
dec
mov
out
imul
inc
add
out
lahf
push
pop
enter
test
popl
dec
push
mov
ljmp
call
push
jecxz
aaa
mov
aam
fists
lahf
pop
cld
shll
leave
cmc
sbb
xchg
out
pushf
or
or
es
imul
pop
jle
push
jl
pop
xorb
bound
cmc
dec
test
inc
out
pushl
andb
cs
das
mov
xchg
addr16
adc
es
and
sbb
add
pop
bound
mov
cmp
out
pop
aad
xor
stos
xchg
rcr
cmp
mull
bound
sub
ss
push
and
mov
sbb
outsb
and
imulb
mov
fs
pop
rolb
inc
fldt
or
mov
mov
clc
outsl
fadds
jecxz
dec
xor
out
ds
jg
sbb
xor
jg
sti
adc
pop
dec
mov
mov
pop
lds
cs
sbbb
ret
mov
adc
jnp
out
dec
addl
lcall
call
jbe
mov
mov
push
lods
push
arpl
push
cli
test
lds
cs
cmp
lock
pop
lahf
mov
rcrl
jmp
and
xor
inc
stos
or
stc
or
adc
in
inc
shr
lcall
pop
mov
sbb
push
int3
adc
in
sahf
cld
fcoms
outsb
push
mov
aad
pop
cld
or
add
test
xchg
pop
shrb
xlat
adc
cmpsb
pusha
and
and
jbe
push
jns
dec
test
aas
add
push
cli
cmp
xchg
out
hlt
mov
lret
lahf
repnz
data16
push
push
mov
out
push
cmp
scas
jo
dec
cmp
mov
sti
cmp
add
das
lret
bound
js
pop
shlb
fstps
out
mov
loope
insb
sahf
enter
or
repnz
adc
nop
out
ret
lock
jmp
loop
enter
andl
adc
and
jno
daa
xor
and
or
fisubrs
ror
cwtl
inc
nop
fnsave
repnz
mov
cld
mov
lahf
lods
andl
xor
jnp
sub
mov
jecxz
mov
js
sbb
cmpb
push
mov
jne
loop
xor
in
and
xchg
xchg
enter
xor
mov
ljmp
jo
pop
sbb
mov
xor
iret
jecxz
pop
loope
push
inc
pop
sub
cmc
jne
ljmp
cmp
dec
dec
mov
lock
pop
cmp
adcl
pop
sbb
cmpsb
adc
inc
cmp
popa
sbb
addr16
push
ss
xor
sub
cli
fmulp
repnz
or
cmc
in
dec
mov
inc
inc
jae
lahf
pop
std
push
dec
dec
stos
loop
popaw
cmp
xchg
mov
out
xorb
dec
mov
into
test
xchg
push
mov
mov
gs
arpl
inc
cmp
addr16
test
xorb
mov
aaa
ret
pop
add
fcompp
push
rcl
cli
pop
dec
xor
pop
sub
cld
jmp
roll
repnz
jo
jg
push
inc
aaa
cs
outsb
pop
cmp
aam
dec
add
mov
out
stos
ret
hlt
sbb
fs
mov
and
lods
loop
aas
ret
mov
repz
out
call
clc
jecxz
jnp
pushl
shrb
push
jp
rolb
sub
data16
insl
mov
jp
push
jmp
mov
sbbl
dec
aad
rorb
sbbl
adc
iret
sbb
xor
pusha
jnp
movsl
pop
in
mov
and
out
pop
cmp
fsts
sbb
mov
dec
loopne
push
out
cltd
jbe
sub
je
inc
xor
mov
push
in
ret
ss
in
rorb
add
push
ret
pop
add
adc
lock
test
bound
jno
pop
push
testb
out
sbb
and
aad
adc
push
pop
push
aam
in
ja
dec
fsub
in
dec
test
pop
mov
push
lahf
outsl
iret
push
jecxz
lods
and
mov
push
xchg
jp
scas
popf
jae
push
cwtl
int3
cmp
xor
add
xor
xchg
lahf
aaa
ret
filds
shll
stc
cmc
mov
stc
and
dec
mov
loop
mov
cltd
test
mov
xchg
sub
shrl
cmp
jbe
test
push
fistl
sub
xor
in
shlb
inc
xor
and
andb
mov
inc
add
fsubrs
xchg
jne
sbb
adc
cltd
in
add
cmc
rcl
jb,pt
xchg
jo
mov
xchg
int3
outsl
jae
add
push
rcrl
mov
scas
jo
push
addr16
jno
jmp
imul
push
mov
push
push
add
roll
in
dec
cmp
adc
and
leave
cld
rorb
jmp
outsl
cwtl
xlat
pusha
pop
test
xor
js
pusha
push
rorl
sahf
in
out
pop
add
nop
dec
push
ds
mov
lds
sbb
mov
push
push
fidivs
subb
jmp
in
sarb
xchg
pushf
inc
aaa
cmc
shl
inc
mov
aam
ret
lcall
inc
js
jne
sub
das
mov
jmp
mov
xchg
fistl
sub
add
in
lret
data16
adc
jle
rcr
outsl
jb
cmp
jmp
push
inc
pop
in
scas
dec
pop
inc
mov
push
roll
fs
icebp
dec
mov
push
push
jo
into
jnp
in
dec
sub
pushf
lahf
mov
jnp
pop
xor
gs
sti
push
pop
pop
lahf
out
fisttpll
std
aam
sub
mov
inc
jno
lret
xchg
push
test
push
add
movsb
popa
jmp
lret
sbb
lods
mov
push
imul
sahf
push
movl
out
sub
xchg
sbb
imul
mov
lods
sbb
push
dec
into
mov
pop
inc
ret
pop
je
and
jnp
mov
pop
mov
mov
xchg
add
pop
mov
cmp
and
in
mov
jne
push
jge
iret
sbbl
mov
test
sti
mov
xchg
xor
sbb
sbb
inc
outsl
dec
mov
cwtl
cmc
or
fs
cmc
push
mov
jne
ljmp
jb
fldcw
inc
mov
fsubrl
mov
push
push
pop
push
call
inc
xchg
pop
jg
mov
mov
push
adc
cmc
sbb
dec
sbb
push
adc
cltd
test
dec
xor
int
sub
and
sarl
lret
sbb
mov
sbb
inc
ret
jno
sub
pushf
repz
out
out
sub
gs
jle
cltd
imul
loopne
adc
mov
leave
dec
lods
push
sub
cs
int
lret
stc
leave
cld
daa
or
es
push
dec
andl
jns
divb
mov
fdivl
repnz
push
pop
test
in
inc
ja
scas
mov
mov
test
scas
sub
outsl
addb
inc
jns
pop
mov
outsb
int3
xor
stos
lret
xor
cmp
adc
sbb
sbb
in
pop
lret
push
rorb
adc
add
push
insl
xor
cmp
sub
and
or
add
mov
stos
mov
lret
fnstsw
sub
popa
lds
mov
mov
mov
out
sub
daa
mov
sub
scas
pusha
and
loopne
adc
loopne
xchg
mov
sbb
pop
inc
add
xchg
cltd
lock
outsl
mov
cmp
xchg
cltd
pop
repnz
into
mov
and
stos
jge
pmaxub
add
popf
in
cmp
pop
adc
loopne
mov
jmp
ret
and
pop
in
std
jbe
ret
lcall
push
pop
mov
js
and
xchg
adc
pushf
mov
push
gs
xchg
dec
out
dec
jg
cmp
aam
jnp
jo
test
fs
push
push
shll
and
mov
outsl
gs
mov
lret
std
mov
cmp
adc
rorl
ret
icebp
adc
xor
add
mov
in
sbb
aaa
mov
xor
jbe
mov
xchg
mov
xor
addr16
dec
jg
les
aas
xor
enter
decl
jle
pop
les
xor
pop
jmp
mov
pop
rcll
pop
sbb
cld
jo
iret
fsubrs
adc
cwtl
shll
pop
jg
mov
and
push
push
xchg
adc
jge
dec
jle
stos
jg
test
and
call
mov
stos
push
add
dec
movsb
aad
add
cmp
mov
pop
sbb
cmc
out
jbe
dec
pop
hlt
xchg
je
jmp
adc
sub
orl
pop
add
imul
dec
push
repz
int3
adc
push
shlb
sub
xchg
fists
gs
push
or
daa
arpl
sahf
push
mov
adc
lret
test
imul
pusha
add
push
je
shlb
and
mov
les
push
xchg
in
push
push
rclb
xor
inc
ja
mov
jle
in
das
lret
filds
ret
xchg
in
mov
pop
dec
xchg
mov
stc
adc
aam
inc
and
nop
pop
cli
rcr
pop
das
std
adc
and
call
in
xlat
cmpsl
test
pop
sete
xlat
adc
shr
in
out
jae
pop
stos
sub
movsl
and
pop
lea
xor
add
inc
mov
lds
sub
cmpsl
mov
mov
nop
add
mov
scas
in
in
pop
lahf
flds
scas
arpl
rcrb
fiaddl
test
aas
leave
add
mov
test
gs
jbe
dec
sbb
fdivrs
inc
in
jge
fwait
je
jg
cld
sub
jl
cmp
out
add
jp
shll
mov
add
and
add
leave
stc
add
push
jns
shlb
and
mov
add
cmpsb
cmc
arpl
insl
int
cmp
push
dec
jge
fdecstp
ljmp
loope
insl
xlat
cmp
ret
mov
push
sub
xlat
mov
cs
mov
push
push
add
jne
fsubrs
int
adc
clc
stos
sub
push
daa
in
fucomp
gs
ret
cld
in
and
ret
add
sbb
xorb
cmc
popa
icebp
inc
gs
and
pop
shll
vmovhlps
out
int
dec
insl
int3
adc
mov
mov
jl
sarl
lea
xchg
sub
lret
sbb
test
xor
pop
addb
pop
mov
negb
rclb
push
or
ret
inc
mov
push
xor
fstpt
in
loop
icebp
add
sahf
jbe
push
mov
aas
subl
adc
std
cltd
call
push
aaa
push
outsb
in
sbb
mov
xor
daa
or
sbb
fidivrl
orl
add
mov
cmp
call
add
xchg
or
in
js
mov
pushf
aad
pusha
mov
cmpsl
outsl
mov
nop
lods
shlb
jp
push
rorl
mov
insl
bound
mov
pop
fnsave
cmp
nop
inc
jae
mov
pop
fwait
int
fdivl
shrb
inc
pusha
pop
mov
vpcomq
loop
adc
adc
mov
ja
fiaddl
mov
dec
xor
popf
jns
mov
jno
dec
jne
push
mov
cmpsl
test
adcb
int3
jge
push
in
js
ret
fidivs
insb
scas
into
xchg
ror
add
lods
pop
sar
shrl
dec
movsb
xor
xor
fsts
adc
or
sbb
mov
filds
out
mov
add
leave
orl
sbb
xchg
mov
lahf
push
jmp
xor
nop
dec
sub
sub
mov
iret
ljmp
push
dec
xor
pusha
adc
loopne
int
movsb
add
xor
xor
and
mov
ljmp
pop
jns
leave
sbb
jl
cs
call
xlat
xchg
mov
jge
test
cmpb
jae
daa
aam
sbbl
pop
imul
push
sbb
push
loopne
or
scas
inc
hlt
psllw
out
add
lods
pop
out
cmp
int3
insb
and
sbb
cmp
mov
int
iret
and
pusha
fstpl
jl
inc
icebp
enter
fisttps
pop
cli
lea
rcrl
pop
push
mov
mov
icebp
cmpsb
popf
mov
pinsrw
and
clc
inc
into
cmp
popl
mov
and
or
in
insb
sub
sbb
cmp
aas
push
ljmp
out
jecxz
js
pop
repnz
lods
mov
mov
sub
lret
pusha
mov
call
cmp
movsb
xchg
xchg
push
in
stos
es
adc
xchg
leave
lock
jnp
popa
imul
adcb
outsl
std
out
outsb
lea
mov
es
mov
jge
xchg
jno
jge
xor
push
adc
pop
mov
pop
ja
xchg
and
enter
mov
and
lcall
imul
popa
push
pop
enter
das
fidivs
inc
mov
mov
dec
imul
repz
in
outsb
cltd
push
loopne
iret
cmp
enter
xchg
and
adc
adc
imul
adc
jnp
jl
jno
sbb
inc
stc
inc
pop
subb
jb
sub
leave
xor
data16
fistl
out
xchg
loopne
cltd
pop
test
inc
adc
mov
sbb
pusha
fldl
icebp
xchg
dec
mov
cs
inc
dec
inc
add
pop
inc
gs
repz
stc
dec
cmpsb
hlt
shrl
sbb
sbb
push
lret
js
or
cs
js,pn
inc
out
adc
pop
in
clc
std
aad
ret
sahf
out
and
pop
and
push
std
outsb
call
gs
ja
imul
add
xchg
adc
outsb
shll
sarl
xorb
out
push
out
mov
sbb
addl
ffree
sarb
inc
les
fimull
in
sbb
out
jl
push
push
xchg
push
fmulp
hlt
lahf
lret
mov
mov
add
dec
inc
mov
push
arpl
jp
fdivl
jmp
fs
cli
scas
scas
outsl
pushf
aaa
mulb
js
and
sbb
andb
push
mov
push
and
addr16
in
into
roll
lea
aad
mov
xor
movsl
add
inc
mov
jg
in
add
movsb
inc
xor
jp
sub
lea
sub
pop
mov
lock
jne
and
pop
dec
jecxz
movsl
repnz
loop
xchg
es
je
and
repz
subl
jge
xchg
xchg
sub
push
pop
and
or
dec
sbb
jnp
xor
js
lods
jge
mulb
sbb
lock
dec
stc
and
jb
lahf
mov
aas
in
icebp
pushf
out
js
ss
xor
push
cmp
stos
mov
loopne
pop
jle
adc
jp
lcall
in
pushf
out
subl
xor
dec
mov
jle
jp
sarb
loope
sub
dec
xchg
sbb
icebp
fisubs
lcall
jno
dec
bound
push
faddl
jp
mov
sbb
leave
lods
std
push
ds
mov
dec
sahf
add
xor
ss
cmpsl
cwtl
mov
movsb
pusha
ja
aaa
lods
pop
xor
outsl
xchg
mov
aam
in
adc
and
jno
cmp
sbb
lds
inc
adc
mov
adc
lcall
rcl
aad
cmpsb
scas
stos
ret
and
inc
jecxz
loop
mov
push
int3
aad
and
sbb
jecxz
stos
mov
sub
dec
or
lock
ljmp
negl
aam
xor
jp
jge
push
imul
or
fnstsw
xchg
insb
and
rcll
add
cltd
ja
add
or
pop
daa
nop
scas
rcr
into
adc
dec
jge
and
cmp
adc
in
jmp
xchg
or
cmp
ret
jecxz
imul
orl
idivl
push
and
inc
xor
or
in
aas
mov
ss
hlt
iret
pop
push
sbb
jbe
and
xchg
cmp
mov
add
aad
clc
and
inc
mov
imul
sub
push
sbb
leave
or
test
xchg
mov
mov
insb
sahf
jge
mov
jnp
pop
and
les
bound
mov
std
sub
cmp
add
xor
sbb
pop
test
lock
pusha
mov
push
jae
dec
push
idivb
pop
cmp
adc
cmp
inc
enter
mov
mov
push
cmpsb
sub
test
outsb
mov
iret
pushf
sub
sub
out
fbld
fbld
mov
idivl
push
mov
icebp
lds
aad
fwait
aad
mov
jge
dec
fidivl
mov
dec
push
fs
fmul
rorb
stos
jl
jae
mov
arpl
daa
push
pop
push
xor
xor
mov
lahf
sub
push
icebp
lods
cltd
call
mov
mov
cmc
sub
notb
pushf
les
outsb
mov
push
mov
cltd
test
lds
fld
movsl
sti
in
js
push
outsl
push
xor
mov
setnp
push
jge
mov
and
add
jecxz
sahf
lods
mov
imul
mov
xor
pusha
loopne
in
adc
add
mov
repnz
and
mov
cmpsb
cmp
pop
mov
hlt
repz
cs
ja
rcl
pop
add
xchg
andl
out
loopne
clc
pushf
in
shll
pop
pop
mov
xchg
push
adc
fcompl
cmp
jg
mov
push
sti
push
pushf
lods
mov
scas
cmp
lods
push
pop
push
dec
mov
or
inc
insl
data16
dec
hlt
pop
fwait
adc
std
fdivs
xchg
push
or
stc
xchg
das
sbb
popf
adc
jns
out
inc
pop
pop
in
xchg
mov
cli
and
xlat
ljmp
pop
out
jno
mov
loope
stc
adc
sub
je
or
jge
aad
or
loope
inc
mov
loopne
adc
imul
cmp
jbe
mov
xchg
fldt
pop
pusha
cmp
mov
push
push
adc
inc
fadd
out
jae
mov
pushf
lret
xorl
jmp
xor
pop
pop
movsb
xlat
inc
imul
lea
inc
push
sbb
cld
fwait
aas
cwtl
inc
fs
test
test
dec
cmp
das
fcomps
inc
mov
add
jge
into
adc
xchg
sub
popf
jbe
popf
test
mov
lret
icebp
push
dec
xchg
fs
ficoml
aas
aas
adc
xchg
test
jnp
scas
sub
mov
cltd
mov
mov
adc
das
dec
xlat
pop
inc
inc
ret
xchg
mov
adc
cli
mov
or
mov
clc
jne
dec
ja
sub
scas
andb
loop
xor
aam
ss
repnz
push
rcl
loope
xor
imulb
xor
dec
sub
jb
hlt
into
bound
enter
movsl
push
dec
movsl
out
xchg
cld
iret
jge
jbe
inc
mov
cmp
push
add
mov
inc
iret
push
push
mov
lcall
outsl
xor
addl
lcall
mov
testb
sub
and
cmp
jns
ss
pop
add
test
xor
or
push
repnz
jmp
ret
test
out
push
ss
leave
outsb
mov
mov
adc
xchg
inc
push
sahf
out
addl
adc
sahf
mov
aas
xchg
mov
enter
lods
std
mov
rol
aas
jp
rorl
in
ror
cmp
movsb
test
data16
insb
shrl
or
xchg
dec
aaa
and
xor
nop
outsb
pop
std
jnp
dec
outsb
sbb
mov
pop
arpl
test
sbb
lahf
outsl
test
icebp
dec
mov
int3
xor
shl
push
std
mov
jecxz
dec
push
xchg
sub
mov
pop
cmp
mov
push
fcmovb
in
mov
jmp
adc
mov
dec
pop
dec
pusha
mov
sub
xchg
sub
mov
mov
push
gs
sub
mov
inc
mov
movsl
pop
inc
and
jge
inc
pop
repz
hlt
aaa
fiadds
mov
cltd
aas
xchg
push
push
cs
dec
pop
aam
cmp
sub
repz
std
cmp
mov
mov
push
xor
out
mov
bound
std
rorb
dec
test
and
jge
lahf
sti
jmp
mov
jecxz
repz
mov
ljmp
repz
testl
test
mov
xlat
jl
rol
xchg
popf
movb
mov
sbb
dec
mov
lock
inc
and
cmpsl
stc
add
ljmp
scas
stc
clc
das
and
jecxz
mov
cwtl
and
mov
push
cmp
pusha
cld
xchg
xchg
inc
aad
fwait
xor
push
push
xorb
jp
xchg
roll
ja
fisubrs
fwait
mov
cmpsl
in
es
cmpsb
bound
sub
push
cwtl
jo
push
mov
icebp
add
outsb
popa
in
jl
scas
loop
jmp
scas
cmp
and
iret
cltd
cmp
das
add
shl
adc
fwait
sub
mov
add
mov
mov
sti
fcom
lds
pop
push
divl
dec
std
jne
out
scas
stos
sbb
add
bnd
clc
inc
push
sarl
xchg
enter
and
and
mov
sbbl
cltd
cmc
xor
xor
jbe
aaa
stc
xchg
mov
mov
ja
inc
dec
insl
mov
aaa
xchg
loop
ljmp
mov
inc
lds
push
and
call
mov
test
stos
das
jb
fdiv
jmp
lahf
cwtl
mov
sbb
loope
lods
xchg
rorb
push
and
sub
push
bound
pop
lds
inc
adc
stc
push
sub
insb
aaa
inc
jl
dec
shlb
xlat
push
stos
lds
pop
push
sub
iret
rcll
les
push
sbb
fisubrs
outsl
push
js
outsb
sbb
pop
lock
daa
addr16
inc
int
mov
int
dec
inc
nop
sarb
add
jb
xchg
and
insb
push
js
sbb
sub
and
enter
scas
decl
jbe
jnp
push
rorb
xor
call
scas
ret
add
push
scas
mov
add
outsb
imul
mov
fs
sbb
daa
cltd
sahf
xor
sbb
mov
outsl
fsubrs
sbb
daa
dec
je
inc
fbld
fnstenv
add
fwait
adc
out
idivl
negl
push
adc
shll
mov
and
xor
or
int
mov
sub
push
jecxz
sub
jo
cmp
jne
insl
jmp
mov
sbb
sbb
sti
je
lock
in
dec
inc
daa
daa
pushf
mov
mov
xchg
xchg
jl
sub
rcl
icebp
mov
or
push
imul
ljmp
sbb
cmp
cmp
clc
push
dec
push
jae
jp
loope
mov
sbb
into
sbb
adc
sbb
mov
xchg
pop
in
sbb
imul
into
shll
pop
popf
mov
adc
or
mov
jp
insl
mov
pop
pop
cli
inc
mov
rcr
xchg
dec
mov
test
sti
xchg
dec
push
mov
inc
movsb
lods
es
leave
fwait
gs
pop
lds
mov
mov
clc
stc
jl
cmp
sub
add
xchg
push
mov
xchg
call
sbb
pop
lods
lahf
aam
mov
scas
enter
push
insl
add
mov
es
xorl
lods
pop
xchg
leave
lds
pop
jb
outsb
mov
pop
call
mov
bound
loop
dec
dec
sbb
lret
mov
push
lcall
cmpsb
repz
es
mov
scas
mov
mov
and
sub
cs
rclb
test
and
jb
ljmp
fwait
xor
dec
ja
lahf
ja
push
lock
adcl
int
cmc
pop
call
shlb
adc
in
imul
les
lcall
or
xchg
mov
sub
dec
or
addr16
inc
mov
clc
mov
xlat
lods
fcmove
add
mov
cmpl
pop
mov
pop
pop
sbb
add
mov
xchg
fcmove
repz
fidivrl
pop
mov
jb
ja
fs
mov
je
adc
fwait
add
mov
mov
push
inc
adc
inc
inc
mov
add
and
push
jnp
cmc
in
adc
je
inc
mov
je
leave
cmp
sbb
jo
int3
ss
arpl
imul
lock
add
xchg
cmp
into
cmp
add
xor
sub
dec
xchg
rolb
out
fs
rorb
xor
jecxz
jp
cmpl
pusha
les
pop
ja
fcompl
dec
dec
pop
dec
mov
aam
xchg
fnstcw
add
in
lods
pop
jns
sub
pushf
xor
dec
and
sub
mov
add
mov
sub
incb
adc
jbe
bound
dec
cltd
call
lods
inc
je
icebp
inc
mov
dec
dec
xor
jb
adc
movsb
mov
push
sub
cmpsb
lods
cmp
pop
push
mov
xchg
adc
or
inc
mov
cmpsl
scas
mov
lea
out
or
xor
mov
adc
push
out
fisttpll
movsl
jae
mov
ret
in
jmp
sbb
imul
cld
fisttpll
cmpsl
xchg
dec
shlb
ljmp
pusha
cmpsl
jge
bound
pop
lahf
cmpsl
lods
loop
out
xchg
imul
and
mov
out
pop
fiadds
push
gs
xchg
lcall
push
mov
jecxz
and
mov
cmp
testl
test
clc
pushf
pop
cmp
push
pop
xlat
in
mov
jecxz
outsb
call
outsb
mov
cmp
or
sti
adc
jle
call
xchg
icebp
lds
push
adc
inc
mov
or
lahf
and
sub
test
mov
fwait
xor
fcoml
iret
movsb
stc
mov
and
cmp
je
dec
test
cmp
pop
pushf
push
mov
hlt
adc
xchg
mov
clc
and
push
adc
les
mov
or
sti
outsl
cmp
sub
fstps
jmp
fwait
sbb
pop
out
sbb
shlb
and
ret
movsb
mov
loop
daa
std
xor
sarl
xchg
xchg
cmpsb
mov
sub
cmp
scas
pusha
jl
xchg
rep
cmp
negb
jns
scas
cmp
int3
adc
cmpsl
aad
sub
push
lds
xchg
iret
pop
pushf
aam
dec
ja
cmp
push
xchg
push
or
xor
push
pop
adc
xchg
adc
adc
dec
loop
xor
mov
psrad
arpl
ljmp
cwtl
ficoml
jge
ret
push
call
inc
movsl
lods
loopne
fstpl
lock
js
mov
push
xor
xor
int3
mov
push
decl
pushf
dec
push
repz
mov
sbb
stc
jae
cwtl
xor
lahf
or
test
aaa
out
dec
push
and
mov
cli
cmp
push
jnp
test
jae
inc
scas
sbb
insl
or
int
jae
enter
cmp
push
pop
adc
rclb
inc
ror
pop
dec
mov
sbb
in
cmp
mov
in
fs
ffree
xchg
xchg
movsb
outsl
lods
xchg
cltd
nop
rolb
dec
rclb
push
xchg
lds
mov
mov
dec
mov
minps
inc
jae
dec
into
jmp
stos
sub
ljmp
add
xchg
pushl
mov
xor
mov
push
xchg
or
xor
add
jmp
out
into
add
scas
xchg
push
ss
fisubl
mov
pop
ja
inc
or
mov
inc
adc
fsubrl
pop
sbb
clc
sbb
test
shlb
sub
and
aam
lahf
cwtl
inc
decb
jb
add
push
sub
loope
xchg
imul
js
int
mov
sbb
popf
mov
adcl
leave
inc
iret
mov
add
cmp
xor
into
fadds
es
mov
mov
aaa
or
mov
bound
sti
cmpsl
dec
lea
mov
fs
or
lock
pop
rcll
aam
icebp
xchg
int
movsb
ja
test
xchg
mov
mov
mul
push
sbb
sti
xlat
pop
in
repz
cs
arpl
xchg
pop
xchg
jmp
subb
je
out
pop
mov
mov
sbb
xchg
imul
mov
pop
aaa
aad
cmp
or
cltd
adc
ss
jno
mov
xlat
inc
loop
mov
vxorps
notl
std
inc
popa
adc
popf
cmp
fisttps
iret
sbb
push
test
jecxz
orb
sahf
inc
movsb
mov
aad
or
xchg
shlb
inc
jp
mov
and
movb
mov
jnp
push
xchg
and
push
mov
or
loope
sti
dec
movsl
cmp
mov
jo
jne
mov
push
dec
mov
icebp
mov
lcall
repnz
mov
orl
cmp
popa
testb
dec
pop
jns
cmc
xchg
divb
mov
mov
leave
pushf
xchg
mov
jae
xor
xchg
aaa
mov
aas
mov
jb
pusha
lds
outsb
mov
out
push
sbb
mov
loopne
jno
jmp
and
in
xchg
loop
leave
xchg
fld
mov
pop
jg
xor
pop
clc
idivl
pushf
fldt
xchg
ss
adc
inc
mov
push
sbb
jmp
dec
andb
roll
std
mov
push
xlat
rcrb
in
addr16
pop
mov
outsl
xchg
fcoml
hlt
movsb
stos
dec
mov
push
mov
jg
insl
hlt
insl
xchg
loopne
xchg
sti
mov
xchg
push
dec
cmp
jne
inc
pop
addb
pop
cmpsb
xchg
shl
or
stos
lods
fdiv
adc
test
mov
aad
dec
clc
push
sbb
sub
daa
aas
adcl
cmpsb
ffreep
cmp
xlat
xchg
add
std
test
adcl
inc
fcmovnb
cltd
test
sub
cld
xlat
loopne
push
inc
lahf
xorb
sub
ss
xchg
mov
mov
push
popf
mov
imul
push
out
adc
out
idivl
adc
mov
sub
fcmovnb
pop
scas
sti
je
xor
mov
lods
xchg
mov
xor
mov
xchg
aaa
cmpsb
push
and
jae
xor
in
shl
mov
dec
xor
jae
sarl
mov
divl
adc
mov
mov
cld
push
cli
add
cwtl
fwait
jno
push
jo
xchg
aas
mov
pusha
adc
sub
pop
out
out
in
sbb
out
mov
push
ss
ret
mov
mov
jnp
call
xor
sub
not
push
mov
pop
fwait
jecxz
xchg
inc
xchg
ljmp
mov
jmp
imul
jl
push
jne
loopne
xchg
iret
js
fsubrp
subb
cmp
fmuls
cmpl
insl
ror
outsl
sbb
xchg
neg
xchg
ficoml
adc
in
int
xlat
addr16
les
scas
push
insb
cmpsb
mov
sub
leave
push
sub
or
loop
subl
sub
sbb
push
mov
xchg
aad
jg
in
inc
aas
sub
push
push
sub
repnz
ja
pop
ljmp
adc
cld
mov
push
or
push
sbb
adc
push
adc
stos
mov
ret
lea
cmpsb
pop
pop
cli
jnp
inc
xchg
sbb
push
sbb
imul
xchg
cmp
clc
lods
jle
sbb
sub
sbb
push
adc
sub
test
out
jo
popf
aad
mov
movsl
stc
cwtl
leave
aas
sub
sbb
jae
or
inc
push
icebp
jmp
daa
clc
out
and
mov
sub
fwait
cld
push
add
ljmp
inc
ret
sahf
inc
aam
xor
push
jl
out
xchg
test
das
xor
fistps
out
mov
enter
add
divb
and
fadds
jne
mov
jno
pushl
xlat
mov
sub
in
and
aaa
jl
pop
inc
mov
xor
dec
pop
sub
in
lock
pop
sbb
mov
sbb
push
mov
sbb
scas
popf
movsl
xor
push
cld
adc
test
int3
mov
out
fdivrs
mov
ret
xor
loope
mov
mov
sbb
fs
sub
movsl
push
popa
pop
push
rol
out
jbe
ss
and
cmp
roll
movsb
lds
inc
or
fldcw
pop
lds
in
mov
out
jns
in
ret
dec
dec
repz
loop
lods
add
data16
mov
jo
iret
xchg
cld
pop
jmp
and
loop
xor
inc
test
cmp
enter
fistpll
and
outsb
xchg
out
nop
sbb
jno
lods
adc
jnp
popa
std
outsl
dec
sub
mov
mov
mov
lods
mov
jmp
cmp
les
imul
mov
sahf
loop
cwtl
pop
sub
popf
cmp
lahf
ret
add
int3
ret
push
mov
leave
xor
subl
icebp
add
xlat
nop
cmc
lods
mov
cltd
int3
out
out
std
xlat
mov
and
fsubrs
lahf
inc
fs
push
cmp
aas
gs
jmp
pop
cltd
aad
jl
iret
lret
insl
push
and
cld
cmp
push
inc
insl
mov
push
push
sub
je
popf
cmp
dec
jp
mov
jb
jb
sahf
adc
in
test
jo
dec
andl
into
stc
movsb
fs
jnp
ficoms
xor
je
sub
jns,pt
mov
jbe
mov
jp
inc
dec
xor
shll
or
push
call
jne
sbb
popl
sbb
mov
leave
mov
sub
pop
cmc
inc
shl
std
aaa
cmp
push
out
jno
inc
ret
shlb
fdiv
testb
movsb
mov
pop
fcomp
shr
mov
mov
inc
inc
add
rorb
pop
cmp
jo
ror
jo
xor
mov
lahf
mov
and
cmp
jne
shll
sub
movb
adc
aam
or
mov
jne
daa
fsts
jbe
fcomps
into
imul
add
jp
jecxz
jge
call
push
jl
enter
lahf
push
pop
push
ret
lahf
into
ficoms
testb
gs
ja
clc
imul
sbb
addr16
cmp
dec
sahf
lcall
fdivrp
std
pop
out
jne
push
sub
pop
inc
daa
and
sbb
jns
sub
add
subb
test
inc
cmp
icebp
xchg
fsubrl
add
bnd
ja
push
add
movsb
mov
aad
xchg
fimuls
jg
jb
sub
aam
or
mov
ror
in
push
cmovo
mov
pop
scas
fcom
shrl
fmuls
pop
out
ss
mov
push
loop
dec
loope
push
dec
mov
xchg
aaa
leave
inc
test
imul
hlt
or
aad
je
mov
xor
loope
xchg
mov
push
rol
fdivl
fnsave
sub
dec
mov
xchg
rcrb
and
cmc
dec
repnz
jmp
sub
shl
pop
movsl
cmpsb
leave
adc
stc
stc
xchg
or
lahf
cmp
jge
mov
stc
loopne
xor
loop
sbb
repnz
or
sbb
incb
in
add
cmp
jp
pop
mov
fisubl
shrl
sti
mov
into
inc
push
jmp
adc
jmp
inc
popa
divl
insl
and
clc
xor
cmp
cmp
std
xchg
insb
inc
inc
faddl
adc
fistl
and
jl
ffree
sbb
sbb
dec
jno
lods
xchg
jp
adc
call
int
mov
lret
xor
and
push
xchg
push
pop
lds
gs
cmp
ljmp
xchg
xlat
rorb
mov
mov
arpl
mov
in
std
je,pn
imul
push
xchg
popa
mov
cmp
daa
jns
cmc
push
xor
mov
mov
dec
adcb
rcll
inc
lea
jnp
and
sub
dec
and
add
sbb
xchg
and
fldt
jl
ficomps
push
repnz
lds
cmp
inc
nop
pop
mov
shlb
cld
jae
push
in
imul
scas
adc
lret
add
xchg
adc
movsl
jae
fidivl
sar
mov
push
pop
inc
insl
dec
mov
inc
lods
idivl
mov
fwait
jge
inc
cmpsb
out
or
outsl
rolb
sub
stos
aaa
and
lret
outsb
pushl
cwtl
inc
mov
push
mov
cs
mov
fcomps
in
inc
push
lahf
rcll
sub
sub
xchg
sar
jg
lea
fisubl
iret
lret
pop
fsubrl
lret
movsb
std
rcr
stos
push
outsb
nop
mov
lret
mov
xor
dec
mov
jmp
pop
pushf
idiv
lahf
xor
fldl
and
sub
pop
js
sbb
pop
add
push
test
call
xchg
push
mov
sub
adc
loop
pop
fucom
fcom
xor
sub
and
shll
popf
scas
mov
add
cmpsl
or
mov
and
pop
loope
xor
cli
jnp
sbb
mov
cs
mov
inc
mov
or
sub
inc
pop
cli
shlb
mov
jns
dec
or
lahf
jb
movb
push
lret
cmp
jg
outsb
dec
and
insl
in
adc
imul
cli
dec
adc
testl
loop
shrb
or
sub
cmpsb
outsl
xchg
data16
cmpsl
xor
test
dec
pop
hlt
fstl
nop
inc
inc
cmp
dec
or
inc
in
dec
push
mov
mov
mov
outsl
cmpsb
mov
cmpsb
ret
dec
or
inc
popf
cmpsb
jle
add
into
cmpsl
in
insl
orb
dec
arpl
mov
lods
push
add
enter
xchg
push
jns
cmp
push
out
out
lds
test
sbb
add
sbb
popf
jns
int
jg
out
xor
mov
push
cmpsl
push
or
mov
adc
rol
gs
pop
fwait
pusha
popa
or
outsl
stos
popf
lods
push
jb
aaa
push
mov
sbb
shrb
jb
xor
movsl
loop
movsb
and
mov
outsb
mov
add
inc
push
mov
jns
xor
repnz
stos
shl
int3
xor
je
pop
shl
arpl
negl
sbb
mov
popa
call
pop
sbb
and
icebp
xchg
jecxz
pop
popa
nop
xchg
lods
jb
jl
test
jo
push
sub
sbb
xchg
cli
orb
xchg
test
cmpsl
pop
mov
push
mov
mov
mov
repnz
insb
and
mov
mov
je
mov
xor
mov
js
movsb
ljmp
xchg
enter
mov
bound
stc
scas
mov
jns
jl
xchg
out
mov
ds
or
sub
into
les
adc
pop
test
and
dec
adc
fcoms
cmp
nop
inc
aam
and
xor
fdivrp
mov
gs
movsl
out
into
or
std
xchg
fidivrs
xchg
rcll
jns
xor
adc
loope
mov
loop
lods
mov
enter
jle
loop
lahf
cmp
mov
inc
xchg
xchg
mov
adc
add
popa
or
or
inc
jns
ljmp
pop
push
jl
mov
xchg
test
adc
jmp
jl
adc
xchg
mov
push
xor
inc
xchg
fcoms
push
sub
inc
ret
fsubrs
fsubl
sub
add
ja
fcomip
xor
aas
add
gs
dec
repnz
push
add
inc
jg
lods
mov
pop
sbb
scas
sbb
dec
test
xchg
pop
add
or
enter
push
pop
andl
cld
cltd
sahf
and
add
push
add
ja
push
ss
mov
cld
and
loop
jno
and
sbb
mov
push
int
mov
enter
leave
cmp
push
ljmp
mov
or
mov
mov
mov
mov
push
mov
mov
inc
jns
or
push
cmpsb
cld
testb
es
or
xchg
jne
mov
push
jmp
push
aas
mov
stos
add
loopne
insl
adc
and
pop
pusha
jo
inc
pop
test
mov
jbe
sarb
hlt
shll
inc
mov
adc
out
push
ja
mov
and
movsb
jno
mov
ljmp
cmp
clc
inc
repnz
push
push
cmpb
hlt
dec
pop
aam
adc
jo
add
adc
push
sbb
sahf
jg
push
and
jecxz
iret
fadds
lds
outsb
xor
aas
jle
push
push
stc
jns
jns
xor
inc
pushf
test
and
addr16
add
cli
mov
cmp
xchg
jmp
fnstenv
push
pushf
xlat
orl
adc
xlat
sub
push
je
lods
pusha
enter
adc
stc
shl
jg
ret
jne
fldenv
sbb
pop
jae
loopne
sub
test
xchg
mov
insl
jne
jmp
popf
jg
pop
sbb
cmpsl
sti
es
shl
lds
out
dec
jl
xor
repnz
rcll
jmp
insl
test
push
pop
mov
cli
dec
xchg
pop
out
je
fwait
add
jb
repz
lds
adc
mov
js
das
mov
mov
hlt
rol
ds
sub
popa
push
movsl
lcall
lcall
cli
dec
stc
push
adc
adc
in
pop
mov
sbb
push
pop
lcall
insl
push
sar
mov
les
negl
out
mov
jns
pop
stos
cmpl
adc
ficoms
xchg
pusha
fldenv
push
push
pop
sbb
sarl
dec
mov
add
cmc
into
cltd
shrb
test
push
stc
int
das
add
fucompp
sub
out
sub
fnsave
loope
lds
xor
xchg
jae
cmp
add
or
xchg
mov
pop
aaa
and
jnp
sub
std
push
leave
iret
jns
mov
movsb
sbb
lahf
xchg
mov
mov
mov
rorb
cmc
mov
or
inc
repnz
pop
mov
lods
push
arpl
sahf
xor
push
xor
xchg
cmp
push
xchg
pop
and
pop
mov
fwait
nop
shlb
addr16
mov
testl
sbb
sahf
cmp
das
sbbb
ret
dec
adc
mov
and
mov
scas
add
in
cmp
adc
fistps
sbb
ja
aas
jge
mov
rcll
aaa
icebp
imul
jae
mul
mov
not
leave
sbb
repz
jne
repnz
fs
aad
xchg
jmp
cmp
mov
enter
add
repz
inc
and
jno
fs
mov
orb
jmp
arpl
scas
pusha
stos
ds
mov
adc
pop
pop
out
mov
inc
xor
sub
adcl
cld
movsb
mov
cmc
scas
adc
mov
dec
mov
adc
sub
mov
dec
and
adc
push
ret
cwtl
loopne
cmpsb
mov
hlt
xchg
mov
aas
testl
test
mov
shll
mov
mov
cmpsb
pop
bound
mov
dec
pop
insb
push
outsb
sub
fildl
dec
mov
adc
and
enter
lods
mov
movsb
mov
call
lahf
std
xchg
shl
push
xchg
push
mov
fnstcw
jmp
and
cmpsb
lods
jbe
cmpsb
sarb
adc
or
sbb
jb
repnz
scas
rcrb
add
push
pop
sbbb
clc
dec
fwait
dec
lods
xchg
and
fwait
mov
and
mov
ljmp
and
lcall
in
ljmp
sub
invd
and
lds
pop
pop
xor
and
sub
imul
jmp
jbe
sarl
imul
push
loop
add
cmpsb
rcll
fisttps
cmp
icebp
lock
out
scas
js
insb
pop
sub
sbb
xor
ja
stos
in
xchg
ds
add
iret
adc
imul
orb
pusha
xchg
pusha
outsb
cmp
inc
shr
stos
das
das
add
add
xchg
add
xchg
int3
mov
sti
push
setb
stc
movsb
das
ja
dec
sbb
sbb
scas
or
ss
push
mov
xor
xchg
cmp
jae
and
imul
sub
out
dec
mov
je
aas
xchg
mov
stos
mov
aaa
push
xchg
cs
fdivrs
dec
repnz
fs
out
ror
clc
or
jbe
xchg
mov
imul
mov
sub
repz
int3
hlt
xchg
je
xchg
es
lcall
cmp
sti
data16
cltd
mov
mov
inc
mov
fucom
hlt
ljmp
out
lds
aad
and
ss
sbb
inc
mov
xor
fcomp
and
and
pop
add
js
jne
or
or
lahf
push
outsb
ret
dec
lods
call
test
std
test
add
xorb
push
xchg
sbb
test
add
pop
inc
les
jle
adc
mov
jb
fdivr
jae
addr16
inc
enter
mov
adc
xchg
xchg
jmp
push
dec
in
mov
adc
sub
mov
rorb
pop
jo
pop
addb
and
les
pop
data16
stos
negb
in
and
insl
movsl
pop
lock
lretw
xchg
in
push
repz
leave
inc
jmp
ja
shlb
jb
and
sub
mov
daa
xchg
ret
cltd
shl
mov
int3
xor
fcomip
xor
cli
sub
and
mov
add
mov
hlt
subl
int
shlb
pop
jae
push
jmp
add
enter
bound
call
inc
mov
data16
cmpsb
stc
mov
xlat
repz
scas
pop
pop
inc
cmp
xor
sbb
push
dec
aas
out
mov
push
mov
cltd
mov
mov
jb
dec
push
inc
insb
filds
scas
imul
test
enter
and
in
and
std
pop
xchg
inc
pusha
rorb
add
mov
dec
outsl
mov
add
sbb
push
sub
jl
dec
scas
insl
iret
dec
push
into
mov
out
outsb
mov
xor
out
push
push
fwait
jno
imul
inc
sbb
jne
popf
rorl
enter
pushw
adc
pop
lcall
jb
lods
in
cmc
add
sub
adc
mov
pop
xchg
or
clc
mov
lds
or
cmp
pop
sbb
mov
cmpsb
jne
mov
push
jp
sbb
lods
push
xchg
inc
movsl
cmpsb
xor
cmc
pause
jbe
mov
pop
adc
and
fiadds
scas
mov
sbbl
sbb
pop
pop
sahf
and
les
xor
pop
pop
popa
cmp
jl
jmp
aas
dec
jge
sub
clc
push
pop
stos
cwtl
mov
lock
aad
sahf
test
mov
mov
test
inc
popa
ja
push
gs
push
sub
pop
insl
sbb
scas
or
pushf
pop
mov
in
push
xchg
lret
lret
mov
in
sbbb
dec
addr16
mov
jbe
and
cmp
jae
sbb
xchg
mov
push
sahf
add
or
rcr
dec
scas
inc
negb
cmc
xor
dec
sbb
pop
test
dec
cmp
in
mov
in
xchg
mulb
repz
loope
or
sub
adc
push
mov
pop
add
pop
pop
stos
movsl
push
cmp
add
test
adc
cwtl
mov
adcl
imul
sti
outsb
push
lea
and
aaa
clc
sub
or
addr16
jae
jmp
xchg
enter
jmp
push
push
stos
fidivl
clc
mov
addr16
mov
stc
sub
mov
addb
rorl
sbb
xor
ficoms
cs
ss
or
xchg
cmp
data16
push
rcll
aaa
jmp
cmpsb
scas
pop
mov
push
cmp
sti
jmp
nop
mov
pop
pop
jl
push
inc
daa
test
xor
popf
dec
push
and
or
jge
sub
cwtl
shrb
mov
xor
or
add
clc
and
inc
mov
mov
pop
hlt
mov
dec
inc
ljmp
sahf
xchg
push
lret
subl
and
aam
fildll
push
aas
or
jmp
jno
xchg
cli
arpl
jne
jl
lods
add
add
addl
mul
scas
cmpsb
pop
sub
inc
adc
xchg
lea
gs
stos
adc
ror
or
lret
xchg
xor
js
sub
dec
or
mov
mov
rcrl
filds
dec
push
js
cld
mov
jne
psrlw
fwait
and
or
cmpsb
add
or
xor
cltd
mov
dec
sub
fwait
jnp
jbe
jno
fidivrl
fwait
mov
fmuls
mov
js
push
push
sbb
lahf
mov
mov
dec
push
imul
fadds
sbb
pop
xchg
mov
fisttpl
pop
clc
insl
push
hlt
pop
inc
outsl
out
push
sbb
inc
cvtpi2ps
call
push
push
es
jmp
add
mov
mov
int
loop
mov
in
dec
ja
rcrb
fidivl
sbb
in
out
dec
in
movsb
lock
jbe
rolb
cmp
sbb
out
or
pop
pop
sub
pushf
orb
xchg
insb
mov
das
mov
rcll
xchg
lods
mov
cmp
pusha
push
je
sbb
jns
xchg
mov
sub
mov
jae
gs
bound
pop
addr16
xchg
xchg
and
mov
jns
or
mov
pushf
movsl
xchg
push
lods
fnsetpm(287
sbb
cltd
jecxz
adc
sahf
mov
test
arpl
lret
cld
dec
into
rol
in
jo
push
imul
push
inc
loopne
negl
shlb
in
inc
push
les
jno
das
xchg
cmp
enter
negl
and
xchg
fs
js
lcall
out
std
jb
out
push
or
and
or
lds
fidivl
pop
jne
mov
call
ljmp
sbb
jne
xor
xor
or
xchg
push
movsb
and
mov
movsb
xor
ficomps
dec
jp
mov
lods
cltd
mov
shl
and
in
out
cmp
add
dec
fwait
inc
out
mov
das
mov
stos
test
dec
fisubrs
sbb
repz
xchg
das
insb
push
cli
push
push
out
cmp
dec
and
sbb
testb
fdivrp
push
jle
dec
xor
ss
jp
adc
pop
push
mov
lret
leave
pop
cltd
jnp
lcall
jo
xor
lds
push
les
jle
or
addr16
mov
push
sbb
and
sub
push
cmp
mov
xchg
pop
stos
out
mov
mov
jb
xchg
mov
movsb
xchg
cmp
adc
xor
lcall
lods
push
jae
sub
fldcw
push
sbb
and
push
sbb
pushf
xchg
mov
or
add
aam
xor
xchg
out
ljmp
aas
clc
ret
je
insl
mov
jnp
fbld
aaa
hlt
sub
lock
mov
or
mov
and
cmp
stc
icebp
mov
jmp
lcall
pop
scas
fs
je
push
push
xor
push
insb
inc
cmp
in
fwait
push
xchg
mov
data16
shlb
sbb
pop
jecxz
dec
pop
jle
xor
jg
xchg
or
leave
sub
popf
insb
adc
call
mov
jne
lock
add
jmp
xchg
add
or
jg
dec
hlt
test
and
sub
pop
loop
lods
enter
cli
mov
pop
aam
sahf
push
adc
push
iret
jecxz
add
stos
loope
cs
gs
lods
push
test
push
cwtl
sub
push
andl
test
mov
enter
test
into
dec
jg
addr16
sbb
daa
jb
push
mov
xor
cmpsb
sub
iret
mov
sbb
lcall
pop
lods
and
mov
mov
push
push
sbb
xor
xchg
mov
xchg
test
arpl
inc
adc
nop
loope
out
cmp
es
push
cmp
xchg
xchg
mov
mov
mov
dec
mov
bound
pop
mov
in
adc
ret
int3
jnp
repz
roll
sbb
cmp
push
mov
cmp
and
ret
jo
adc
mov
popf
test
popa
add
repz
not
pop
into
mov
bound
mov
dec
imul
movsl
stc
cli
inc
dec
sub
xor
push
dec
sbb
out
adc
pop
rcl
lods
pop
xchg
lock
pop
into
cmpsl
and
adc
xchg
daa
sti
ret
xor
out
xchg
inc
fisttpll
pop
stc
xchg
lcall
jmp
cmpl
into
sarl
dec
push
enter
jne
popa
inc
push
aad
xor
mov
test
jae
addr16
daa
inc
mov
sub
adcl
mov
ror
push
push
adc
mov
adc
mov
loope
pop
adc
push
sub
dec
or
xor
mov
lret
incb
jno
jo
aas
push
and
arpl
and
iret
lret
pop
enter
adc
stos
xchg
jg
js
lea
scas
pop
xchg
insl
ret
mov
cltd
into
test
arpl
nop
push
mov
repnz
data16
mov
repnz
test
in
sbb
lcall
and
popf
xchg
sub
fbld
out
shrl
dec
dec
pop
adc
xchg
adc
bswap
fisttpll
sbb
gs
in
inc
mov
in
loope
mov
mov
into
cmpsb
nop
mov
int3
dec
loope
pop
movsb
cs
imul
scas
lret
stos
stos
mov
aaa
xor
mov
jne
pop
ret
or
pop
cmp
push
pop
sub
pop
mov
sub
pop
mov
fwait
daa
loopne
mov
popf
and
arpl
xchg
jo
dec
mov
pop
mov
mov
in
mov
jl
sbb
xorl
jns
sbb
cmp
std
pop
es
repnz
push
sahf
ficomps
fdiv
stos
lahf
sub
clc
dec
jmp
sbb
push
rorl
cmc
mov
sbb
xchg
aas
xor
lahf
or
iret
daa
xchg
mov
adc
push
or
xchg
aad
jo
mov
test
jge
into
lock
enter
xchg
loope
movl
sub
outsl
fs
aam
je
mov
or
pop
fisubrl
out
and
push
imul
cmp
sub
aas
fdivs
jp
or
scas
jne
sub
js
fcoml
repnz
mov
scas
js
dec
fst
imul
loope
test
and
push
jb
jae
dec
inc
pop
jmp
add
cmpsl
rolb
or
orb
daa
aaa
scas
dec
into
dec
and
das
add
pop
push
sub
sub
push
or
idiv
xlat
lcall
dec
cmp
fsub
je
jo
jbe
loop
mov
fidivl
scas
sub
adc
packssdw
psubsb
cmp
cmp
outsb
sub
push
popa
sub
sbb
mov
dec
dec
das
or
gs
xchg
fsub
jecxz
stos
cmp
mov
xor
outsl
out
mov
gs
gs
call
inc
cmp
mov
adc
jmp
mov
stos
lods
pusha
imul
adc
inc
jg
add
pushf
imul
cwtl
cmp
pop
rcll
imul
enter
js
fstpl
mov
mov
sbb
and
clc
pop
xchg
addr16
ljmp
dec
js
and
shlb
ljmp
mov
stos
arpl
stos
repz
pop
pusha
mov
ffree
pop
notb
mov
cmp
addr16
cmp
and
or
jg
inc
lret
add
ss
test
sub
scas
mov
loopne
aad
iret
sti
mov
dec
leave
xor
test
push
mov
cli
xchg
jmp
into
loope
cli
das
mov
pop
sub
popa
ss
es
dec
stos
push
addr16
mov
mov
test
xchg
scas
inc
dec
lods
loop
mov
scas
daa
aaa
test
sbb
mov
inc
cmp
popf
orl
sbb
fwait
test
cwtl
pop
popf
mov
ret
test
fidivl
mov
fdivrl
push
dec
mov
imul
and
or
pop
push
es
addl
pop
mov
pop
in
dec
dec
int3
jmp
aad
sub
aas
mov
mov
xchg
data16
mov
andl
fcmovbe
test
adc
pop
adc
ds
lods
out
test
sub
pop
xchg
xor
std
sub
cmpsl
fdivrs
jmp
xor
stos
std
mov
jge
push
mov
mov
scas
fcompl
fcomip
xchg
fst
cmp
and
fsub
push
push
add
fdiv
xor
or
xchg
xor
fdiv
push
mov
fcoml
out
loop
jle
pushf
les
jecxz
inc
imul
adc
adc
imul
sbb
xor
cmc
out
insb
inc
dec
adc
orl
sbb
movsl
lods
inc
ss
cmc
leave
xchg
pop
out
jg
in
ret
les
es
cmc
fcomi
jmp
loopne
adc
mov
sbb
add
mov
xor
pop
cmp
aaa
jns
sub
bound
cmp
or
pop
dec
fwait
in
jge
ss
inc
loop
or
and
sub
dec
out
scas
push
std
pop
mov
mov
push
lcall
xchg
inc
fs
sarb
sbb
dec
int
daa
push
popa
cmpsl
sub
mov
mov
test
ret
jnp
cs
ss
rclb
inc
shll
jne
add
adcb
cmc
jb
sarb
pop
dec
lods
push
jno
sbb
loope
pop
adc
add
add
mulb
js
idiv
rorl
testl
test
add
orb
bswap
loopne
lret
xchg
mov
jb
shlb
jmp
es
pusha
icebp
inc
or
rol
xchg
mov
jne
pusha
push
mov
mov
cmp
pop
add
and
ret
lods
xchg
mov
aas
cld
or
rorb
xor
imul
jmp
mov
popa
mov
push
pop
fbld
fidivs
jns
loopne
popf
pop
xchg
js
xchg
out
xchg
ljmp
pop
jmp
push
xchg
mov
mov
mov
and
mov
jle
popf
dec
cltd
jge
inc
inc
into
shlb
rolb
fwait
ret
dec
outsl
out
push
inc
and
mov
sbb
cli
scas
push
rcll
clc
pop
aaa
out
xchg
mov
movsb
divl
jo
push
es
lods
pop
test
js
and
ljmp
mov
cmp
cmc
xor
stc
insb
cli
jmp
mov
jmp
icebp
mov
hlt
loopne
mov
imul
or
inc
ret
lds
and
or
pop
gs
pop
xchg
rcrl
pop
jl
xchg
iret
fnsave
and
jo
subb
cltd
cs
mov
sbb
mov
sti
arpl
loope
repz
mov
test
in
loope
mov
loopne
aas
mov
xchg
fcoms
into
pop
and
popf
popf
lods
mov
movsl
push
popa
icebp
mov
mov
fcomps
in
ds
mov
pop
std
cmc
aaa
jno
add
lock
fwait
dec
push
mov
loopne
pop
lds
in
stos
popa
repnz
ret
mov
scas
insb
cmp
sub
jae
shlb
or
ljmp
ret
and
dec
xchg
fwait
test
inc
xlat
sub
push
in
push
fidivs
xchg
cmp
pop
fisubl
sbb
cmpsb
fildll
movsb
push
in
fwait
in
lret
fs
iret
xor
xor
jle
shlb
aaa
pop
pop
or
jae
xchg
lret
inc
stos
pushf
mull
pop
pop
das
jae
pop
adc
and
jnp
xchg
ljmp
push
and
loop
test
add
push
data16
add
popa
jno
mov
sahf
fsubrl
loop
xor
sub
mov
push
mov
mov
xchg
cmp
and
sbb
stos
cld
xorl
pop
jge
out
or
mov
ja
popf
sbb
pop
loope
mov
das
lcall
inc
outsl
enter
scas
sbb
jno
mov
mov
adc
add
scas
call
ljmp
mov
fcoms
jns
out
faddl
in
pop
popf
cmp
add
xor
call
sbb
hlt
push
fwait
lret
movsl
cmp
ja
lahf
add
mov
push
or
lcall
inc
call
and
inc
mov
addr16
out
fwait
or
pop
sahf
cmp
mov
incb
mov
test
imul
jne
fsubl
les
xor
jg
jo
es
mov
add
lock
and
insl
jmp
lfs
in
jle
clc
xor
dec
or
out
and
lret
sbb
into
jo
mov
out
scas
xchg
insl
adc
jmp
adc
dec
xor
cltd
lock
ja
mov
daa
loope
imul
sub
add
cltd
or
cwtl
scas
idivl
jns
xor
and
sarl
outsb
sarb
inc
aad
jbe
push
add
cmpsb
cs
shll
pusha
sahf
iret
mov
push
out
jmp
sbb
jecxz
dec
shr
fnstsw
and
subl
inc
or
insb
xor
sbb
add
ss
and
nop
sub
subb
sbb
dec
ja
and
push
xlat
test
push
pop
adc
or
or
xchg
out
sbb
adc
fdivl
enter
rcrl
xor
sarl
push
push
pusha
lret
test
xchg
sbb
aaa
decl
mov
mov
jns
pop
test
call
scas
sbb
js
or
add
lahf
push
fcomi
jo
xchg
scas
movsl
mov
dec
jg
or
sub
xchg
insl
mov
aaa
mov
mov
cmpl
pusha
and
ljmp
push
mov
ljmp
pop
enter
pop
into
mov
call
in
xchg
movsb
pop
xchg
mov
mov
push
lods
daa
push
adc
aas
adc
dec
or
mov
popa
fwait
das
aad
gs
fidivs
lods
out
loope
sub
jne
shlb
cli
outsb
push
xchg
pop
mov
mov
out
mov
sub
js
sbb
sub
xchg
jge
jnp
ds
sub
shl
sub
or
add
das
push
mov
div
or
gs
and
or
mov
outsl
shlb
sbb
sub
inc
mov
push
fs
daa
xchg
jle
stc
test
inc
movsl
lret
jp
dec
or
mov
orl
fs
je
inc
adc
push
adc
sub
mov
pop
sbb
jne
mov
outsl
xor
movsl
into
push
adc
out
loope
inc
cmp
jge
shll
out
bnd
cmp
or
loopne
sbb
push
cwtl
sub
adc
test
xchg
imulb
mov
add
xchg
cmpsb
js
cltd
repnz
loop
pop
out
into
add
xchg
mov
dec
pop
cld
popa
xor
pop
out
xchg
sub
movsl
and
inc
addl
je
ret
test
mov
or
mov
call
adc
loope
push
jmp
mov
xor
fiaddl
loope
lods
or
in
nop
push
push
pushf
mov
shll
stos
jbe
scas
loope
lock
fsincos
lock
jl
negl
cmp
out
mov
int3
fisubrl
mov
mov
adc
fisubrl
mov
inc
add
jmp
xlat
in
mov
xor
jo
gs
dec
popa
adc
xlat
loop
or
cmc
lahf
enter
cmpsb
inc
lods
ss
mov
xor
pushf
mov
aaa
es
arpl
outsb
xor
ja
shrl
ret
mov
stos
repz
adc
cmp
icebp
pusha
inc
xchg
mov
jp
xchg
xchg
add
cmp
shlb
mov
push
add
out
xor
xorl
mov
xchg
loope
xor
push
mov
pop
loop
movsb
hlt
outsb
xchg
push
inc
in
repnz
hlt
imulb
sbb
iret
mov
cmp
daa
cld
aas
ljmp
push
sbb
scas
pushf
adc
std
cld
dec
push
les
seta
packssdw
and
cmpsb
sbb
lcall
pop
pop
sbb
outsb
lea
jnp
inc
pusha
push
jl
mov
fisttps
fisubs
jp
movsl
pop
in
sub
call
out
fcmovnb
sub
push
adc
dec
test
push
and
and
pop
mov
insl
inc
pop
popf
push
mov
outsb
xor
arpl
jmp
imul
iret
push
mov
test
xor
daa
or
push
cmp
push
pop
stos
xchg
aad
mov
adc
popa
lds
lock
cmp
sbb
ret
push
cmpsl
pop
add
add
das
outsb
test
cld
xchg
aam
sbb
cmpsl
add
jmp
movsb
and
xchg
xor
jp
xor
stos
xorb
add
insl
ret
sbb
pop
push
les
add
gs
fwait
mov
shlb
cmc
cmpsl
leave
mov
pusha
sahf
loope
imul
or
testl
sub
and
adc
jp
mov
clc
cmp
dec
and
push
ja
lea
bound
int3
pop
add
sub
aam
sti
in
and
pop
xchg
aas
pushf
and
rcrl
in
jmp
xchg
popa
xchg
mov
sbb
clc
adc
xlat
mov
or
jge
mov
scas
push
fcomps
or
cli
dec
xor
mov
shlb
mov
push
or
pop
out
or
mov
or
cmpsl
mov
dec
adc
mov
adc
push
add
lret
pop
xor
cmc
fadd
fldcw
or
cmp
jmp
int3
mov
inc
jbe
pop
out
testb
enter
push
shll
mov
fsubs
shll
push
adc
out
mov
and
outsl
cmpsl
mov
dec
mov
pop
push
ret
cmp
sub
or
popa
sti
xor
jge
and
push
movsl
mov
insb
call
lods
ljmp
dec
jno
jecxz
arpl
add
pop
test
xor
and
test
pop
fs
xor
dec
sahf
test
mov
ret
add
mov
xor
sahf
lock
out
lock
and
in
inc
leave
out
fs
xorps
mov
shr
cmpsl
cmp
xchg
scas
stos
or
mov
je
outsl
cmp
xchg
or
pop
fwait
mov
aam
sbb
jae
mov
sbb
clc
jb
rclb
jnp
add
dec
cmpsb
sbbb
mov
add
arpl
inc
jmp
jl
mov
bound
xor
ffree
cli
xor
adc
inc
and
mov
push
leave
test
repnz
mov
enter
out
int
xorb
les
outsb
cmp
pushl
inc
data16
out
push
xchg
cmpsb
clc
cmpsb
int3
pop
fildl
or
nop
push
jns
mov
mov
push
push
sbb
clc
pop
jmp
call
shrl
in
nop
sahf
out
lret
lods
push
sbb
loopne
aaa
pop
rorb
and
push
mov
lret
inc
mov
xchg
push
in
adc
ficompl
mov
stc
mov
out
scas
rorl
mov
arpl
fldt
mov
hlt
mov
lret
in
call
dec
inc
adc
dec
or
sub
gs
jg
mov
jne
rcl
or
sahf
aam
fnstsw
test
cmc
cltd
ret
iret
cwtl
cmp
shl
sbb
jns
sbb
adc
or
adc
lods
sti
sub
dec
push
les
daa
leave
orb
cmpsb
xchg
test
mov
push
aaa
mov
and
das
mov
shll
bswap
movsb
xchg
jecxz
cmp
in
dec
sti
jne
clc
sub
mov
das
adc
jle
cltd
mov
fwait
fmuls
pop
imul
enter
and
xchg
or
lahf
cmp
mov
sti
xchg
sbb
mov
jmp
shr
out
or
loop
sbb
mov
and
adc
das
sub
add
sbb
inc
sub
push
jbe
out
shlb
dec
lret
lds
jmp
in
inc
mov
adc
fmul
shrb
pop
or
je
loop
push
push
dec
xchg
enter
cmp
jne
mov
jecxz
xor
das
imul
notl
clc
mov
loop
jbe
adc
das
jns
shrb
and
push
and
xchg
xor
fistps
xchg
es
movsb
hlt
mov
pop
adc
scas
pop
int3
sahf
repnz
mov
fiadds
test
add
add
iret
and
in
orb
and
xchg
or
nop
xor
inc
jmp
fsubl
cmp
fcompl
and
xchg
adc
mov
fcmove
lods
mov
mov
nop
dec
push
push
add
or
ret
jp
test
pop
lret
adc
xor
cmc
out
fisttpl
push
push
adc
ja
lds
sub
mov
int
push
or
insb
mov
into
mov
scas
cwtl
mov
push
ljmp
or
jmp
mov
jp
repz
fs
nop
cmp
pop
xchg
push
adc
jg
out
gs
jp
mov
int3
pushf
stc
push
in
outsb
jg
mov
fcoms
pop
hlt
and
popa
xchg
pop
mov
int
stos
push
add
mov
movsb
pop
pop
fwait
jecxz
nop
stc
iret
xchg
insl
mov
inc
std
jbe
lahf
into
jae
out
jne
mov
sti
pop
xchg
andb
fwait
sbb
mov
imul
jb
mov
stos
push
inc
lcall
mov
je
aaa
dec
jne
fldcw
sti
jo
push
enter
data16
mov
loopne
add
loop
adc
cli
es
bnd
daa
sbb
push
ljmp
pop
push
jle
adcb
cmp
sub
xchg
mov
outsb
push
push
popa
addr16
pushf
movsl
dec
test
sub
push
loop
ret
sub
push
arpl
aam
push
stos
cmpsb
movsb
test
lea
mov
inc
mov
stos
jmp
and
ds
seta
mov
pop
mov
in
mov
jb
dec
fs
cmp
pop
xor
jp
fwait
push
xchg
pushf
mov
push
test
gs
jmp
sahf
pop
fs
push
pop
push
movsl
sbbl
cld
sbb
ret
cmpsl
stc
xchg
jecxz
or
adc
push
mov
push
xor
adc
fldt
leave
dec
js
mov
dec
push
mov
mov
repnz
je
xchg
or
mov
jbe
jmp
dec
mov
sbb
out
inc
dec
negb
scas
jno
fwait
and
jmp
lods
or
in
xor
mov
push
inc
lret
and
mov
leave
xor
sub
repz
popf
sti
je
xor
sub
inc
xchg
ficomps
mov
repnz
pop
out
xchg
add
sbb
leave
cmpsb
jno
inc
xchg
inc
movsl
cmpsb
cwtl
scas
pop
mov
pop
std
or
addr16
mov
out
pushl
mov
shlb
ja
mov
jp
out
fistpl
hlt
add
rorl
mov
int
push
leave
lea
notl
jge
cwtl
cltd
or
xchg
test
addr16
cmp
pop
dec
inc
jg
dec
and
dec
dec
negl
sbb
mov
das
xor
bound
repnz
and
and
xor
mov
aas
mov
pop
dec
imul
xor
movsl
dec
aas
cmp
es
jmp
ds
sub
mov
mov
shl
les
xchg
cmp
das
scas
cmpsb
cwtl
dec
test
test
push
xchg
out
mov
inc
or
sbb
repz
jno
cs
sti
test
sub
jae
pop
xchg
dec
std
sti
adc
jnp
das
imul
xorl
jbe
std
and
pop
fadds
inc
lret
lahf
fistpll
imul
mov
dec
xor
test
out
aam
addr16
das
xor
insb
cs
mov
fisttps
call
dec
repz
std
inc
in
adc
cld
clc
test
cli
and
cmp
sbb
and
mov
inc
mov
in
xchg
mov
ds
jb
rcll
jle
dec
cld
pushf
xchg
push
out
aad
cmpsl
xchg
sub
pop
jge
mov
js
sbb
loop
aad
and
imul
pop
cmp
test
std
aas
or
xor
adc
popf
inc
or
jb
dec
les
push
pop
idivl
mov
bt
xchg
gs
test
xchg
pusha
dec
or
mov
fnsave
xchg
sahf
jae
hlt
out
or
push
push
pop
nop
rorb
repnz
iret
bound
and
xchg
sbb
xor
rcl
xchg
fildll
mov
jge
dec
sbb
out
ss
sbb
outsb
das
cs
push
jecxz
and
daa
add
negb
push
and
or
sbb
pushf
inc
mov
lcall
dec
push
add
pop
hlt
mov
pop
gs
jnp
fsubrs
dec
adc
mov
outsb
mov
inc
out
cmp
inc
push
and
inc
jo
inc
mov
sub
adc
in
imulb
test
out
xchg
popf
nop
jb
ljmp
pop
mov
mov
lcall
push
cmpsl
lea
idiv
jge
sbb
fidivs
lds
stc
mov
pop
movsl
mov
dec
gs
or
fisubrs
aas
dec
sahf
push
jno
dec
mov
xchg
add
sub
xor
jle
stos
out
pushf
adc
adc
out
jmp
jecxz
mov
shlb
mov
adc
lahf
mov
push
imulb
insb
stos
adc
mov
inc
es
xchg
mov
ret
jno
pop
in
and
cmpsl
jmp
and
cmp
dec
stos
jmp
fidivrl
mov
xchg
inc
mov
cld
cmp
fsubrs
inc
in
hlt
jb
aad
aam
dec
into
add
xor
lods
add
into
fwait
pop
in
mov
clc
ja
stos
fcoms
ja
mov
dec
push
outsl
sbb
pop
mov
xor
mov
pusha
es
push
pushf
js
mov
jae
lahf
lcall
movsl
pop
push
int
pop
add
adc
and
ret
ss
std
adc
jno
ret
or
and
jns
out
addl
mov
pop
imul
xor
loope
addr16
dec
mov
int3
inc
shrl
repz
sbb
dec
inc
xor
ljmp
pop
sub
mov
mov
pop
or
subb
sub
sub
lock
out
and
push
pop
push
jno
or
jae
test
push
pop
xor
je
and
cltd
sbb
jmp
pop
xor
pop
sahf
test
popa
lahf
testl
adc
mov
sub
mov
adc
inc
dec
add
add
movsb
lods
sbb
mov
pop
xor
jmp
cmp
mov
loop
hlt
xor
ss
sbb
push
lea
pop
inc
jmp
aad
xor
lahf
pop
mov
aaa
jbe
or
rclb
jmp
cld
push
or
ret
push
shl
dec
pminub
push
bnd
test
jmp
mov
pop
insl
cmp
jae
movsl
ret
xor
scas
ret
or
add
xor
std
fs
orb
rcr
je
adc
and
push
jnp
push
inc
pop
mov
pop
jge
pop
xchg
mov
pop
pop
in
jbe
imul
inc
mov
add
mov
repz
jb
out
adc
leave
or
and
adc
repnz
out
adc
mov
loopne
dec
adc
int
pop
add
je
iret
cmp
out
addb
pop
pop
inc
push
ds
loopne
ds
jle
cs
scas
xchg
js
and
adc
fdivs
mov
dec
insl
xor
jns
sub
loop,pt
ret
xchg
mov
sbb
movsb
or
mov
shll
mov
jae
add
push
test
adc
sbb
push
bound
mov
popf
ficoms
or
cmp
xchg
pop
mov
in
pop
pop
cltd
sbb
test
dec
pop
jp
sbb
rol
jl
rclb
shll
mov
adc
inc
jae
push
jo
enter
cs
push
sub
sahf
jns
lds
dec
or
xchg
mov
lds
mov
test
inc
jne
dec
inc
sub
dec
jno
cs
push
rcrb
sbb
clc
or
cwtl
es
mov
inc
es
lcall
int3
mov
movl
cmp
and
fwait
inc
sbb
and
pop
mov
push
mov
pop
popa
mov
adc
outsb
rcll
fldt
xor
cmp
stc
xor
dec
dec
cmc
repz
sub
dec
lock
lret
dec
into
ret
repnz
test
aaa
add
stos
and
xor
nop
xor
je
test
repz
mov
fbstp
sub
mov
xchg
testb
pop
xorb
or
shlb
xchg
push
aam
popa
and
or
xor
lcall
iret
sub
lcall
sbb
mov
pop
cmp
mov
dec
ret
pusha
sbb
jo
fcmovnbe
sub
mov
das
dec
pop
ret
test
mov
shr
and
out
andl
xchg
addr16
xchg
mov
repnz
xchg
inc
mov
out
push
lds
movsl
xchg
add
bound
rcrl
inc
inc
xchg
xlat
cwtl
bound
jecxz
ds
xchg
out
xchg
jno
stos
fdiv
mov
jmp
lea
push
sub
out
mov
das
pop
xor
pop
or
xchg
mov
adc
test
xchg
dec
aad
pop
cmp
or
cmp
adc
mov
cli
sbb
dec
ljmp
ds
or
ret
dec
leave
nop
subl
into
and
mov
adc
pop
push
into
les
pop
fsqrt
fs
testl
lods
and
sbb
mov
add
fnstenv
lock
into
lods
push
mov
cmpsb
sarb
in
and
mov
fwait
push
mov
inc
fisttpll
insl
shlb
pop
xchg
sti
scas
rcrb
push
cmp
cmp
aaa
icebp
and
push
mov
cwtl
push
sti
sarb
sbb
scas
fsubs
xor
add
or
lcall
mov
das
fs
add
scas
jle
clc
ret
pop
pushf
loopne
iret
cmp
repnz
and
paddsb
notl
rcrb
mov
mov
xchg
mov
shll
stos
leave
jg
add
aaa
mov
adc
mov
loope
mov
cmp
stos
mov
pop
daa
popa
loope
pop
push
ljmp
jecxz
call
rolb
sub
adc
ljmp
add
ds
rorb
push
imul
xor
gs
fsts
mov
or
sbb
cmp
es
repz
cld
fistpl
test
xchg
sti
fwait
push
scas
and
mov
mov
clc
rolb
dec
jp
in
add
mov
das
sbb
imul
adc
add
and
xlat
mov
stc
pop
mov
inc
loope
movsb
rep
popa
shr
xchg
jns
mov
loopne
test
xorb
add
gs
cmp
dec
cmp
fs
stos
dec
add
push
sahf
push
or
inc
pop
lcall
dec
adc
pusha
outsl
movsl
add
pushf
or
pop
fwait
inc
js
and
out
idiv
xor
dec
mov
sub
mov
sbb
sub
rcl
jo
insl
lods
cmpsl
ret
dec
dec
dec
mov
pusha
into
xor
xchg
or
in
xchg
mov
inc
sbb
lret
and
add
aaa
popa
les
inc
dec
push
scas
les
popf
cmc
pop
cmp
xlat
call
aam
lods
ds
push
xor
sbb
repnz
popa
aas
aam
pusha
test
jl
pop
jl
or
out
and
aam
jg
jb
adc
in
int3
sti
fistpl
cs
mov
outsl
adc
out
mov
adc
pop
pop
pusha
push
add
mov
pushf
ds
mov
mov
add
lods
push
xchg
mov
insl
adc
js
sahf
cmp
mov
aaa
pand
rcrl
mov
cmp
lahf
xchg
rcr
dec
add
lcall
inc
push
jl
rol
sti
sub
xor
mov
jno
jnp
cmp
mov
push
jl
sbb
jae
in
fistl
test
loope
sub
or
rcrb
leave
push
cmpsb
fscale
or
imul
and
cli
mov
imul
shlb
inc
aad
push
and
add
adc
stc
add
push
dec
lock
pop
sarb
push
movl
ret
push
stc
lods
jecxz
sbb
setl
imul
sbb
and
push
clc
out
xchg
fs
push
jecxz
fsts
sub
ja
lea
push
add
popa
adc
jb
scas
mov
call
push
sub
inc
dec
subb
inc
or
jne
push
cmc
fnstenv
into
lea
mov
out
js
incb
out
mov
je
in
leave
push
daa
sub
movb
and
lds
push
pop
cli
jae
das
sbb
mov
cmp
loop
data16
mov
dec
stos
mov
sub
das
push
cmp
dec
mov
cli
push
mov
lds
dec
test
pop
dec
fwait
or
mov
or
mov
xlat
dec
ja
xor
bound
dec
insb
lret
cli
pop
test
xor
dec
stos
aas
enter
inc
lcall
popf
movsb
pop
rorl
xchg
clc
mov
dec
adc
data16
test
xchg
in
out
fbld
les
push
sub
mov
xchg
sahf
imul
cmpsb
cli
fdiv
mov
or
xor
xor
mov
mov
jge
jge
xor
add
mov
lods
hlt
dec
xchg
mov
pop
or
xorl
xor
popa
sub
sbbb
xchg
mov
cmp
das
cmc
adc
sbb
data16
sbb
inc
mov
xor
add
iret
mov
push
fisubrs
push
adc
inc
lods
cs
lds
xor
sbb
mov
leave
subl
sub
lds
and
imul
and
sti
fwait
pushf
cli
pop
mov
pop
cmp
out
xchg
in
fisttpl
pusha
test
cld
xor
and
push
and
aad
sarb
mov
ja
in
push
xor
fwait
adc
jnp
xchg
xor
aam
loopne
dec
cli
scas
iret
xchg
cmpsb
leave
imul
test
inc
mov
pop
mov
mov
mov
and
adc
notb
pushf
aad
mov
jo
out
test
imulb
out
cltd
sub
or
cmpsl
scas
addl
aas
dec
aad
ret
jae
lcall
fiaddl
and
mov
filds
push
cltd
notl
aam
je
ss
jne
push
stc
les
out
movl
cld
pop
ds
sti
mov
outsb
cld
mov
popa
std
push
jl
ret
lods
ret
imul
popf
jnp
dec
pop
icebp
mov
pop
or
and
enter
jb
xchg
adc
stos
mov
and
mov
shl
dec
and
pop
addr16
push
andl
roll
pop
mov
shrb
pop
mov
lods
jle
data16
rcl
shll
aas
insl
mov
adc
divl
pop
pop
jge
ret
push
sahf
inc
sbb
cmpsl
dec
and
adc
xchg
imul
adc
out
les
nop
jl
sarb
arpl
stos
push
dec
adc
es
ret
xchg
cmpsl
arpl
call
movsb
jmp
inc
xor
xchg
mov
fldcw
inc
leave
orl
inc
cmp
push
and
aam
push
les
dec
push
jns
in
into
mov
imul
jno
cmp
rolb
mov
scas
and
lods
jg
sub
aas
or
iret
jmp
pop
sub
imul
or
add
cltd
xor
mov
and
jmp
cmp
inc
ds
ljmp
mov
mov
outsl
mov
and
xchg
mov
lods
xor
loop
clc
or
push
sbb
xchg
dec
adc
jbe
pop
add
push
popa
inc
dec
lcall
hlt
push
cmp
push
das
mov
cs
lret
aam
adc
iret
lcall
push
shl
in
inc
lds
cmp
mov
sub
inc
xchg
sbb
cld
rcrb
jp
das
mov
enter
in
mov
ret
pop
adc
mov
adc
mov
lret
push
pop
mov
dec
or
pop
les
push
icebp
mov
add
sarb
xchg
push
fcomi
adc
mov
rcr
stc
imul
sbb
cld
sub
bnd
mov
adcb
sub
xor
mov
mov
rcrl
adc
fisubs
cli
call
jnp
mov
cli
fcompl
pop
shlb
mov
outsl
ret
ja
cmp
movsl
imul
shll
clc
sub
sbb
jbe
xor
cmp
faddp
notl
cld
fdivs
fstps
mov
ret
xchg
xchg
popa
dec
sbb
aas
pop
aad
adc
or
aad
add
mov
mov
js
push
lods
imul
xor
loop
inc
sbb
mov
xor
pop
mov
and
stos
sti
out
lret
xor
dec
imul
or
xchg
iret
mov
in
xchg
call
popf
cwtl
mov
mov
add
or
or
out
xchg
xchg
into
into
mov
mov
cmp
adc
add
cwtl
jns
mov
sar
xor
jnp
imul
push
lock
adc
adc
test
sbb
cmc
rorb
sbb
scas
pop
mov
popl
aad
mov
adc
cmp
fsubl
mov
jl
cwtl
lcall
xlat
or
jl
in
mov
data16
inc
xor
ficompl
imul
inc
mov
sub
mov
mov
pop
icebp
push
cmp
les
mov
jo
fwait
push
insb
std
sbbl
sub
adcb
dec
pop
js
jmp
sbbl
lcall
into
jns
fwait
jmp
xchg
outsb
in
pop
sahf
xchg
les
in
movsl
jne
pop
jle
mov
shrl
sbb
insb
dec
fidivrs
fcom
cmpsb
push
popa
pop
fildll
push
roll
mov
les
in
imul
fbstp
dec
test
movl
dec
fisubs
pop
push
mov
out
cwtl
dec
adc
sub
xorl
xchg
xchg
add
lcall
std
adcl
jp
xor
mov
mov
or
sub
mov
xchg
mov
sub
scas
pop
xchg
or
add
sbb
dec
movsl
jns
push
std
sbb
dec
pop
push
xchg
incb
mov
dec
sub
push
sub
xchg
inc
push
push
mov
dec
inc
xor
cmp
cli
enter
int3
jns
inc
inc
jns
xchg
rcl
pop
xchg
out
cs
ljmp
or
imul
xchg
push
mov
pop
pop
cltd
in
shlb
fucomp
jmp
sub
sbb
jae
xor
jns
sub
cs
lahf
mov
fdivl
cmpsb
pop
lods
adc
mov
xor
mov
mov
out
ljmp
ret
jg
fidivs
jno
inc
inc
bound
ljmp
adc
sub
pop
or
sbb
jmp
and
jl
inc
outsb
cs
mov
dec
pop
or
pop
pop
adc
cld
bound
jnp
jg
cltd
pop
xchg
inc
popa
lret
sub
into
lcall
into
gs
inc
adc
out
pop
test
loopew
and
jmp
xchg
cmp
fiaddl
cmp
adc
cmp
push
scas
rcrl
daa
cltd
sub
clc
add
mov
jecxz
jmp
fistps
out
jne
push
into
cwtl
test
pop
sub
leave
mov
aam
pop
pop
push
iret
jl
cmpsl
jb
jg
jg
cmp
loopne
movsb
mov
fwait
sub
jnp
fdivs
insb
mov
dec
out
int3
rcll
or
add
cmp
or
jbe
movsl
cmpsb
xor
push
inc
xchg
mov
dec
fwait
loopne
loopne
dec
dec
sub
or
je
mov
nop
push
xor
in
ja
je
test
and
push
inc
push
sub
testb
pusha
fsts
dec
stc
nop
push
xlat
mov
test
fs
jp
pop
out
test
mov
imul
or
push
ret
and
into
xor
fimull
adc
fstpl
out
jl
sahf
lahf
std
jg
jl
xchg
int
roll
xlat
ficomps
popf
in
sub
hlt
popa
cmp
scas
sbbb
aad
sbb
and
or
ret
pop
push
int
cmp
sub
mov
ret
lea
jns
mov
les
cmp
js
cmp
sahf
lods
dec
dec
inc
test
jp
mov
mov
mov
repz
mov
and
sub
add
cmp
fnsave
pop
and
add
jbe
jns
loopne
fimuls
idivb
shlb
cmc
mov
fs
aaa
pop
cmc
add
jmp
xchg
mov
shrb
push
mov
mov
insl
incb
xchg
pusha
sbb
dec
lahf
pop
add
loopne
xchg
push
rorl
or
jp
push
mov
push
sub
dec
dec
sbb
dec
lret
cmpsl
fcompl
push
test
cmp
and
inc
andl
pop
sub
sbb
inc
ret
mov
test
sbb
movsb
imul
out
xchg
cmp
shll
mov
fsubp
xchg
mov
jne
call
mov
mov
int3
add
cmp
ret
mov
xor
lahf
add
dec
sbb
insb
inc
iret
sbbb
and
pop
inc
sub
sub
loopne
or
pop
dec
aad
daa
leave
cltd
dec
sub
clc
pop
add
mov
mov
mov
lods
mov
xor
fcoml
imul
sub
dec
nop
pop
add
pop
or
mov
xchg
xchg
out
adc
movsl
and
pop
mov
inc
sub
xchg
mov
or
pop
jbe
pop
xchg
in
nop
icebp
icebp
test
int3
jb
jg
or
jg
ss
aaa
jno
xchg
out
clc
mov
repnz
xchg
jb
aaa
push
mov
pop
push
add
mov
movsb
add
add
stos
scas
sarb
mov
test
out
adc
test
insb
dec
or
popf
test
cmp
sub
mov
int3
dec
lcall
push
lret
leave
bound
push
mov
cmp
mov
add
xchg
xor
popf
push
std
xchg
faddl
cmp
jae
xchg
inc
ret
js
fsubl
sbbb
sahf
or
pop
testl
loop
cmc
push
mov
test
adc
mov
push
xor
mov
fiaddl
int
and
mov
and
add
jle
sbb
cmc
cld
push
mov
insl
das
sarl
adc
rcrb
pop
mov
jmp
sti
sbb
inc
aam
mov
or
sahf
xor
les
mov
mov
jecxz
sbb
mov
scas
in
popf
mov
xor
push
sub
je
inc
into
mov
push
mov
js
inc
push
jmp
bound
scas
scas
and
js
dec
mov
sub
outsl
pop
cld
and
mov
push
push
mov
mov
lock
mov
xchg
dec
sbb
cmp
test
in
inc
sub
rcl
lods
or
or
xchg
xor
cli
sahf
sti
inc
xchg
inc
test
cltd
adc
lock
mov
call
popf
fiaddl
unpckhps
xchg
fwait
sahf
sar
call
sbb
push
xchg
pop
outsb
in
mov
mov
test
adc
ja
add
adc
lcall
push
xor
out
mov
jg
dec
pop
xor
inc
cld
jmp
fisttpll
mov
in
pop
dec
ficompl
mov
add
gs
fcoml
lahf
notb
jge
inc
mov
push
cmc
add
hlt
xor
push
xor
out
pop
test
decb
fidivs
scas
das
cmp
stos
sahf
cwtl
sub
repnz
daa
adc
out
nop
sub
push
lret
cwtl
aad
mov
mov
fcmovnb
or
mov
fdivrs
mov
out
or
pop
in
out
and
jo
sbb
adc
das
aad
sbb
mov
or
jne
cs
lea
jmp
test
jo
nop
fnstenv
sub
shrb
or
sti
pop
pop
movsb
mov
mov
mov
mov
mov
js
ret
and
or
adc
fmulp
rcrb
aas
lods
das
mov
dec
rcrb
aaa
mov
fs
fcoml
adc
xor
sub
stc
xchg
inc
aas
xor
icebp
lods
push
in
fdivrl
dec
mov
xor
sub
rcr
or
xchg
cmp
jnp
xlat
pop
dec
das
in
adc
std
xorb
mov
enter
push
cwtl
cmp
test
sbb
push
ss
fisubrs
sbb
pop
mov
and
mov
push
xchg
sub
pushf
mov
movsb
mov
cld
inc
jno
dec
outsb
sbb
jle
jmp
out
cmp
rclb
xchg
js
ja
adc
cld
addr16
sti
fs
fiadds
inc
in
out
xor
aad
xchg
out
pop
mov
shr
push
lret
outsl
push
add
ret
test
jno
mov
xor
add
adc
push
adc
xor
push
mov
lret
and
xor
aas
and
pop
or
repz
popa
fnstsw
dec
fbstp
dec
pop
mov
adc
bound
and
lea
sub
jnp
adc
ss
lahf
jg
repnz
enter
dec
sub
cld
repnz
or
rorb
movsl
cmp
or
jp
rcr
popf
aaa
mov
jecxz
cmp
cmp
popfw
fidivs
mov
lea
pop
sbb
xor
xchg
mov
pop
push
popf
sbb
rcl
cmp
cli
add
sub
mov
in
cmpl
and
xlat
inc
jl
jge
hlt
xchg
out
inc
sti
ja
sub
and
insb
pop
lods
pop
dec
push
jo
insl
pushf
push
push
sub
enter
adcl
fimull
das
sub
insl
or
push
push
add
nop
pop
add
aam
mov
lea
sub
arpl
fistpl
inc
dec
add
int3
imul
xor
hlt
push
xchg
fs
lret
scas
pop
jp
pop
xlat
sbb
xchg
jno
sbb
fcompl
inc
xchg
jmp
test
out
mov
cmp
jle
xor
imul
fmuls
imul
in
mov
inc
jno
outsl
xchg
in
addr16
aam
push
in
add
inc
jae
out
or
in
shl
pop
sub
subb
pop
in
imul
inc
pushf
in
pop
sub
mov
stos
push
leave
cli
mov
push
mov
loop
dec
pop
xchg
int3
imul
call
shll
mov
cmp
pushf
in
scas
dec
cmp
push
das
lcall
adc
and
cs
sub
adc
jae
inc
cmp
loop
lret
pop
out
mov
add
pop
or
orb
stc
cmp
mov
ss
mov
ror
or
in
call
push
sarb
imul
dec
fsubrs
mov
cmp
adc
cltd
and
xor
sub
xchg
inc
sbb
dec
adc
sbb
int
mov
add
insl
les
cs
test
imul
adc
fcoms
pop
out
mov
inc
notb
xor
add
mov
inc
ja
mov
popa
movl
jnp
lret
and
mov
jne
or
pop
pop
mov
sahf
ljmp
ss
sub
sahf
xchg
xchg
jo
dec
or
nop
mov
push
xchg
dec
cmpsl
jno
and
cmpl
push
gs
dec
push
add
fdivrs
xchg
ja
rolb
push
and
push
jne
xchg
fbld
lock
loop
icebp
daa
or
sbb
mov
mov
add
or
xchg
push
aas
inc
jno
pop
pop
sbb
stos
dec
push
mov
or
std
popf
adc
addr16
xor
rorl
jle
jg
sbb
cmp
jo
sbb
sub
jp
or
orl
pop
int
call
loop
stc
push
xor
in
lcall
sbb
mov
in
fiaddl
out
jge
popl
xchg
call
in
mov
js
jb
mov
pop
cmc
fcoms
xchg
addr16
test
push
jge
xchg
mov
in
scas
ja
clc
loop
enter
and
subb
mov
and
lods
xchg
test
shrb
cltd
clc
shrl
les
inc
aas
dec
stos
adc
xchg
scas
mov
push
fs
jbe
das
add
mov
xchg
jbe
shlb
int
or
ja
ljmp
adc
mov
mov
mov
adc
adcl
dec
fstl
cmpsl
push
loopne
sbb
mov
xor
test
xchg
test
mov
mov
add
test
cmc
mov
cmp
mov
push
scas
mov
jg
iret
fcmovb
jecxz
movb
ss
jmp
outsb
pop
mov
xor
xchg
popl
adc
xchg
dec
insl
mov
xchg
dec
or
int
mov
mov
xlat
xchg
jecxz
push
inc
lds
adc
jno
cmc
xchg
stc
sub
push
sub
ret
sub
dec
or
pop
mov
cmp
mov
mov
frstor
push
xchg
test
jl
sbb
sub
inc
sbb
hlt
js
pop
pop
inc
fdivrl
sahf
repnz
add
inc
sbb
sub
add
pop
test
mov
jb
xor
shl
pushf
and
daa
ficompl
hlt
and
xor
fwait
push
insb
popf
mov
xor
movsl
std
add
mov
test
sbb
xchg
pushf
nop
enter
xchg
jmp
notb
mov
movsb
fsubrs
sub
dec
rorb
test
fwait
leave
jns
cmpl
mov
ss
jge
notb
outsb
ret
rol
lret
je
stc
into
lds
aam
mov
int3
fnsave
inc
enter
outsb
push
jp
xchg
inc
icebp
icebp
addr16
clc
rcrb
das
dec
cmc
pop
xor
inc
cmp
fmuls
xchg
dec
add
fwait
lret
clc
push
nop
in
ds
addr16
jb
jmp
sbb
ja
push
jecxz
mov
adc
pop
pop
enter
and
pop
in
xchg
dec
push
lret
insl
inc
rolb
adc
or
lods
xor
mov
pop
fbstp
fldenv
or
sub
sbb
mov
jb
ds
sbb
fsubl
xchg
bound
cmp
mov
pop
shrl
dec
cmpsb
mov
popa
adc
or
mov
adc
mov
jmp
sub
adc
jmp
aad
fistps
pop
add
fdivrl
xor
sarl
xlat
mov
mov
fisttps
jbe
cltd
cli
sbb
adc
or
push
lock
sbb
in
sub
jne
clc
xchg
push
aas
dec
cmp
xor
and
sbb
lahf
test
sbb
dec
aad
inc
shrl
push
sti
bnd
nop
test
fmul
decb
mov
or
in
lea
fldenv
mov
out
adcl
ret
fcomps
ljmp
push
mov
jb
sbb
lds
dec
adcl
negb
cmpsb
ss
cmp
mov
mov
gs
lcall
inc
pop
inc
pop
rcrb
xchg
pop
pop
repz
fwait
add
cmp
jmp
pop
sbb
dec
mov
mov
jo
pop
fiaddl
cmpb
sbb
lret
xor
push
ss
loope
cmp
ja
cmp
stos
shll
or
xlat
push
into
adc
test
fwait
inc
jle
jge
inc
jns
xor
dec
dec
xor
fistpl
pop
jne
mov
sbb
sbb
cmp
leave
pop
pop
ja
and
out
add
aaa
scas
cmpsl
stos
sti
cmp
jne
jbe
sub
sti
or
lock
push
sub
pop
popa
inc
jno
push
pop
and
inc
cmpsl
sbb
lods
cmpsb
fisttps
aam
sub
sbb
scas
lods
imul
loopne
mov
js
inc
cmp
stc
dec
inc
in
fwait
outsb
inc
mov
add
pop
fmulp
pop
cmp
lock
sahf
popf
cmp
popa
xlat
es
out
cmpb
lret
lock
loopne
sub
xchg
mov
loope
jbe
in
push
aas
jbe
dec
mov
push
jbe
ljmp
arpl
movsb
ror
bound
in
and
pop
roll
repnz
dec
xor
in
out
jmp
cmp
ret
pop
lds
ja
rcll
popf
pop
fbstp
subb
outsb
xchg
cmp
lahf
pop
adc
mov
das
or
sbb
cmpsb
mov
or
add
dec
and
rclb
mov
mov
push
add
jnp
setle
push
je
pop
cmpsl
enter
adc
cmc
inc
and
mov
inc
dec
mov
insb
xor
or
jmp
sbb
test
outsb
xchg
sahf
lods
or
push
imul
cmp
sub
or
lods
nop
cmp
inc
aaa
lea
xchg
pushf
xchg
sarb
add
jl
mov
addl
push
pop
sub
pop
fnstcw
push
jl
out
or
fcoms
in
push
enter
sub
out
jns
test
shlb
or
cmpsb
push
sbb
fldenv
pop
pop
mov
mov
hlt
data16
pop
test
mov
pop
push
popf
imul
push
dec
adc
lea
or
gs
cmp
sub
push
mov
testb
jo
push
adc
adc
xor
es
push
stos
pop
daa
sbb
inc
pop
pop
pop
js
cmp
dec
add
inc
hlt
dec
rcr
adc
jmp
rcl
stos
sub
cltd
mov
xor
mov
cmp
fstpt
ret
pushfw
pop
mov
fistps
in
mov
stc
div
scas
sub
lds
xchg
imul
jg
xorl
fcmovnu
mov
xorl
mov
pop
jns
movsl
push
lcall
cli
sub
hlt
add
mov
fmull
mov
int3
in
cwtl
bnd
mov
xchg
sbb
sbb
xor
ds
stos
call
cmp
nop
adc
inc
jl
outsl
or
xor
in
lret
leave
sti
ds
scas
stos
xchg
and
or
mov
pop
add
and
mov
sti
ja
sub
inc
repnz
imul
sahf
decb
mov
mov
inc
das
mov
adc
shll
cmpsl
sahf
mov
sbb
pop
dec
jl
xor
mov
mov
pushf
lret
fstl
jmp
fcoml
mov
and
mov
in
pop
ss
xor
mov
pop
ret
loopne
xchg
jecxz
dec
jne
dec
nop
sbb
mov
fyl2x
xchg
inc
fisubl
insb
lds
cmp
xor
mov
in
push
sbb
into
jo
jo
mov
mov
aaa
sub
cwtl
insl
scas
add
push
insb
lock
mov
cmp
scas
xchg
cmpsl
adc
dec
cmp
adc
add
jge
shll
pop
add
cmpsb
mov
jge
rorb
sbb
add
cmp
or
push
test
sar
sbb
and
cmp
scas
xchg
stc
fdivrl
dec
pushl
repnz
and
dec
or
pop
push
inc
or
insb
mov
test
mov
jp
adc
pop
pop
mov
push
pop
dec
insb
add
outsb
sub
out
adc
sti
cmp
fs
mov
dec
fnstenv
cmp
in
inc
xchg
addr16
popf
cmc
pop
lahf
sbb
fcomp
push
mov
push
lock
push
inc
push
inc
push
jle
adc
jno
pop
jecxz
stos
mov
pusha
mov
push
mov
iret
push
inc
lods
fsubrl
push
sbb
popa
cltd
insb
cmp
clc
adc
mulb
adc
and
xor
stos
push
or
cmc
adc
popa
cwtl
mov
dec
ret
pop
sbb
xchg
cld
pop
clc
outsl
jecxz
push
mov
dec
fsubrl
lods
loope
xchg
nop
sub
and
cwtl
shl
out
mov
lea
mov
mov
sub
push
testl
push
adc
inc
int
mov
sti
and
fmul
adc
pop
mov
loop
push
stc
or
icebp
pop
out
xchg
lret
addl
push
xchg
dec
cmp
jp
sub
adc
sbb
negb
pop
push
mov
mov
mov
lods
mov
mov
incl
xchg
mov
or
xchg
sub
pop
mov
dec
mov
loope
add
subb
dec
test
mov
in
mov
push
cltd
pop
ficompl
dec
fadds
cmp
xor
inc
cmpsb
add
dec
push
pop
and
xchg
test
mov
lcall
xchg
or
push
mov
jge
fdivp
adc
pop
push
sub
std
int
pop
and
dec
sti
mov
cltd
dec
test
mov
enter
cwtl
int3
dec
xchg
test
repnz
pushf
rcll
jmp
pushl
jge
push
les
sbb
push
push
mov
gs
imul
mov
lcall
add
mov
adc
xchg
orb
xchg
lcall
jo
jns
sbb
xor
adc
cmpb
fistpll
add
mov
mov
sti
push
call
clc
fimuls
ret
roll
ret
add
mov
mov
add
push
int
mov
xchg
jbe
and
fnsave
or
lret
repz
jmp
push
or
cmpsl
sbb
dec
arpl
cmp
cld
addb
in
add
into
popf
sbb
ja
adc
jmp
and
inc
mov
pop
sub
pushl
mov
pop
dec
fidivrs
aaa
xchg
lods
loopne
xchg
mov
xchg
jnp
loopne
dec
inc
xchg
les
xor
mov
das
andl
orl
out
cmp
jbe
dec
scas
decl
inc
lods
jmp
pop
ja
clc
xor
and
mov
sbb
fisubl
add
je
inc
jge
mov
dec
dec
jmp
mov
test
fsubrs
iret
pop
and
mov
pusha
stos
mov
std
mov
inc
xchg
cs
pop
jle
mov
sahf
jmp
mov
jns
inc
fs
sub
int3
sbb
rorb
pushf
mov
mov
in
ja
xlat
aam
fdiv
inc
aam
mov
dec
in
inc
push
cmp
aad
sbb
pop
in
cmp
shrl
iret
xchg
add
rcrb
test
loope
xorb
cmp
jmp
sub
movsb
cltd
dec
lret
pop
sahf
mov
addr16
popfw
mov
xchg
testl
jae
shll
jmp
in
lcall
dec
mov
mov
insl
sub
and
test
insl
mov
add
jmp
push
outsl
jecxz
mov
fildl
xor
or
andb
out
sti
nop
xor
loopne
adc
cwtl
mov
divb
push
mov
dec
outsb
iret
mov
movsb
sbb
test
sub
fcmovu
in
cmpsl
push
fstpt
dec
jns
loope
int
stos
adc
stc
jbe
les
in
fiadds
movsl
je
or
cmp
fcmovnu
jmp
mov
daa
xlat
cmp
movsb
fsubs
or
lea
mov
and
cmpsb
jb
mov
popf
sbb
out
out
xlat
push
int3
xchg
xor
repnz
mov
xchg
sub
mov
int
and
test
lods
test
nop
inc
std
inc
mull
int
or
dec
pop
cs
dec
or
lcall
scas
loop
xor
and
xor
inc
xlat
mov
pop
adc
sub
inc
fs
hlt
pop
test
insb
fs
rcll
mov
in
jns
push
mov
cltd
pextrw
lahf
mov
or
pop
add
popa
inc
imul
stc
mov
aas
sub
inc
fdivrl
js
mov
xchg
push
inc
pop
push
ret
sarb
ljmp
pusha
or
jo
rcrb
cli
mov
and
lahf
xchg
push
xchg
cltd
ret
adc
sub
mov
sbb
push
xchg
jmp
repz
jp
dec
sbb
loope
inc
adc
push
pop
push
pop
aas
into
out
movsl
push
push
stos
cmp
mov
mov
movsl
iret
int
push
inc
icebp
xchg
je
sbb
and
or
mull
icebp
or
mov
or
cmp
dec
push
dec
pop
jo
gs
js
pop
and
add
jae
pushf
add
or
inc
imull
cmpsb
lret
jne
pushl
cmc
add
mov
lds
inc
hlt
nop
mov
popa
xchg
inc
fs
mov
in
es
jns
push
in
and
sti
push
mov
push
inc
loope
jmp
xchg
push
mov
push
mov
dec
mov
testb
and
xor
out
jb
push
mov
pusha
call
jnp
out
sbb
mov
cwtl
mov
int
fcomi
fldenv
push
jnp
adc
repnz
aad
and
movsb
pusha
fnstsw
xchg
pop
push
jno
jge
pop
fidivrs
add
andb
sbb
sbb
jno
cmp
hlt
imul
imul
inc
fs
cmp
outsb
jbe
popa
or
jo
ret
std
addb
push
mov
sti
rol
mov
mov
in
das
dec
fcomp
das
dec
adc
inc
add
sbb
clc
mov
inc
out
outsb
mov
mov
lods
cwtl
mov
or
fs
and
ret
push
jg
lock
inc
dec
mov
ja
ja
sbb
dec
fadd
lods
outsl
push
push
dec
cmp
loopne
fldt
and
and
test
jae
add
mov
cwtl
aaa
adc
ja
push
mov
inc
or
sbb
or
and
ja
nop
add
lock
mov
jle
lret
inc
fdivrl
or
scas
push
insb
leave
mov
mov
mov
in
dec
repnz
dec
arpl
mov
loop
jge
push
lds
and
adc
je
test
mov
test
andl
lock
cld
push
mov
das
cmp
lock
movsl
pop
and
repz
sub
fsubl
pop
dec
das
loop
pop
jae
ret
jns
inc
pop
aad
mov
test
xchg
loop
push
je
xchg
fldenv
sbb
jl
jle
pop
orb
fs
mov
and
cwtl
mov
enter
inc
cmp
bound
dec
jbe
test
pop
out
jg
jnp
in
mov
hlt
cwtl
xchg
cmp
test
movsl
cmc
pop
sbb
test
jnp
or
or
lock
aad
pop
ljmp
ret
and
inc
in
call
call
stc
mov
xchg
addr16
push
popa
iret
cltd
lods
pop
cltd
inc
shl
mov
stc
fsubrl
jnp
fwait
mov
or
sahf
sti
dec
insb
mov
sbb
das
scas
cmp
add
mov
imul
jge
fbld
shll
shll
and
fsubrs
sbb
fldcw
mov
jnp
mov
or
loop
mov
out
out
outsl
sub
mov
mov
scas
out
jbe
jp
rcr
jp
out
adc
fwait
notb
mov
enter
mov
movsb
cmp
xchg
mov
sub
cs
test
jle
cld
lahf
mov
in
fildl
or
adc
jo
out
imul
and
dec
xor
insb
push
jne
jne
mov
dec
mov
add
adc
insb
ret
lds
int
popf
shr
sbb
or
enter
adc
lret
test
daa
mov
je
add
lds
dec
xchg
call
iret
fidivl
test
pop
jne
lds
js
shlb
jecxz
aaa
les
mov
arpl
test
inc
pop
sbb
lahf
gs
imul
xchg
sub
popa
rolb
jbe
fwait
mov
imul
fildll
imul
jne
ds
sbb
dec
out
mov
ret
adc
imul
cli
mov
lods
adc
push
lret
adc
jmp
mov
pop
gs
ret
xchg
push
aam
add
mov
movsb
das
or
int3
mov
or
lods
inc
fwait
mov
push
aam
push
pushl
mov
or
test
test
jns
inc
jb
mov
cmpb
mov
ss
fs
shrl
and
fstpt
push
fldt
clc
xchg
test
int3
fstps
mov
mov
jecxz
das
sbb
loope
jne
cmpsl
push
ja
pop
add
xchg
cld
xor
out
sti
repz
in
mov
in
cld
push
mov
inc
data16
mov
sbb
pop
xchg
xchg
rcrb
out
pusha
mov
inc
bound
sbb
adc
push
movsl
adc
xchg
rcrb
or
fcompl
add
xchg
sub
pop
insl
imul
cld
mov
adc
aas
xchg
mov
cmp
xlat
vpunpckhwd
ficoml
sbb
mov
or
popf
add
out
inc
push
mul
pop
in
lods
xor
cld
mov
lods
and
pop
add
sti
les
pop
shrl
add
loop
scas
inc
in
aaa
inc
fiadds
popf
mov
and
add
shld
xchg
sub
into
push
mov
repnz
hlt
push
clc
xchg
mov
stos
mov
adc
jg
cmpsl
and
call
mov
gs
lods
dec
mov
dec
lods
pop
or
jnp
icebp
jle
cmp
sub
jb
xor
mov
das
mov
jecxz
test
adc
lds
dec
xor
leave
cmp
add
mov
arpl
or
fs
ds
jno
xchg
mov
idivb
mov
adc
stos
repz
inc
pop
int
jno
popa
jo
cmp
sbb
sbb
mov
or
inc
mov
in
mov
jge
lahf
imul
sub
xchg
bound
xor
pop
lock
jle
lock
addps
jp
jge
fidivs
mov
testl
mov
dec
les
mov
nop
fs
mov
xchg
mov
push
sub
test
int3
pop
jno
repz
jge
lods
mov
lods
xor
insl
xor
adc
lods
adc
mov
sbb
mov
adc
out
jmp
pop
push
rcrb
push
inc
imul
out
sub
sub
mov
adc
lret
stc
xor
mov
ss
and
cs
lock
xchg
paddusw
in
mov
cmc
ja
aam
or
xchg
outsb
push
jmp
or
adc
sbb
fldcw
mov
repnz
lret
xchg
mov
loopne
xor
inc
mov
call
sub
jno
mov
pusha
add
scas
and
and
data16
cmp
xor
ja
xchg
push
push
or
fbld
into
or
outsb
xlat
sbb
sub
mov
outsl
fsts
ss
scas
lods
inc
nop
nop
stos
mov
jg
xchg
jp
add
sub
or
pop
pop
aam
mov
fwait
cmp
imul
outsb
add
test
lahf
test
cmp
lock
inc
aas
lcall
repnz
out
push
lret
mov
or
mov
push
pop
sbb
pop
lret
lret
out
loopne
int3
stos
inc
add
cmpsl
or
mov
and
jae
scas
xchg
sub
rcrl
sbb
mov
fcomp
sbb
aad
xchg
mov
xchg
imul
cmc
pop
inc
lea
cmp
aas
stos
sub
repnz
jbe
ljmp
popa
sbb
pop
jg
mov
sbb
push
pop
sub
ljmp
addr16
sub
xor
pop
in
out
pop
insb
fiaddl
clc
xchg
pusha
fisubl
jg
arpl
jecxz
jb
dec
xor
es
loope
adc
push
mov
or
stos
mov
dec
sbbb
sub
push
sub
mov
ret
or
mov
lds
mov
ja
add
imul
xchg
push
sarl
pop
jle
sti
sbb
or
int3
and
xor
dec
push
mov
jae
inc
sub
adc
jne
xchg
push
testl
adc
pop
jbe
out
test
mov
loop
jle
dec
pop
repnz
xchg
into
aad
hlt
sbb
jbe
xchg
and
sub
std
test
xor
in
dec
push
ds
int
fldcw
loope
mov
addr16
jns
mov
jecxz
aam
mov
insb
mov
fcmovne
xchg
cmpl
sti
fwait
mov
add
cli
test
pop
mov
sarb
loop
ret
ret
stc
pop
xor
test
inc
mov
adc
sbb
pop
loope
xorl
sbb
jb
xor
or
xchg
sbb
test
xor
scas
cmp
je
pop
pop
imul
aaa
in
cmp
add
ja
sub
ja
adc
insb
mov
orb
clc
sub
pop
int3
clc
sbb
jo
icebp
rcrb
insl
hlt
js
movq
sub
movsb
mov
mov
popa
orb
mov
fcoml
add
ret
lret
push
in
jg
jbe
bound
loop
pop
test
outsl
adcb
lods
out
aam
frstor
fwait
push
or
fimull
cmp
mov
faddl
fdivs
pop
xor
shr
mov
outsl
push
pop
insl
add
dec
pop
xor
and
popa
push
test
mov
mov
inc
out
mov
jbe
or
test
sbb
xchg
xchg
dec
out
iret
hlt
pusha
inc
mov
outsb
mov
lcall
add
cli
addr16
ret
cli
nop
popaw
cmp
mov
mov
in
pusha
hlt
add
ljmp
sti
jno
inc
movsl
repnz
fcmovne
js
out
jae
jg
fidivrl
fidivrs
cmp
xchg
stos
jnp
loop
int3
mov
push
loope
call
mov
sub
push
enter
mov
mov
pop
cwtl
ret
data16
xchg
jmp
cmp
xchg
test
dec
add
cmp
and
pop
daa
insl
sbb
pop
pop
sub
test
adc
push
cmp
jmp
pop
pop
push
xlat
xchg
xlat
or
orl
repnz
pop
xor
cmc
cltd
jle
stos
aaa
lods
sub
and
and
ret
mov
mov
ficoms
xor
icebp
pop
add
pusha
mov
xchg
xor
sub
xor
or
lcall
addr16
cltd
lds
das
jno
mov
xchg
aaa
mov
out
mov
andb
cmc
insb
test
push
push
out
inc
xorl
aaa
notl
adc
push
lret
je
loop
jbe
inc
xchg
in
sbb
jp
loop
and
mov
sub
cli
in
push
dec
push
pop
jge
insl
jnp
mov
xchg
pop
dec
pop
push
into
dec
fs
pop
cli
pusha
std
and
fs
push
rclb
arpl
loopne
addl
xchg
sbb
fsubrs
dec
loope
pushf
outsl
dec
adc
mov
or
scas
int3
xchg
daa
xchg
hlt
inc
out
push
mov
outsl
cwtl
jnp
push
push
mull
cwtl
lods
shll
push
jbe
int
loope
adc
mov
xchg
data16
sbb
or
pop
mov
scas
push
mov
or
pop
lahf
xchg
xor
lret
mov
mov
loopne
lds
shll
data16
dec
sahf
or
xor
icebp
add
pop
pusha
jp
jle
inc
cmpsb
push
sbb
dec
sbb
mov
lret
cld
popa
mov
sub
push
popa
pop
nop
jns
cs
out
push
pushf
or
pop
pop
iret
pop
imul
cs
mov
das
lret
sub
pop
dec
mov
in
sbbb
jg
sub
testl
sbb
adc
or
aam
mov
add
fwait
sahf
enter
pushf
mov
jb
sub
fisttps
add
pop
in
sbb
dec
ret
sbb
push
jb,pn
add
aas
xlat
enter
pop
idivl
sti
aaa
sbb
rorb
mov
xchg
mov
or
push
xor
adc
aas
sbb
pop
add
sub
mov
jno
sub
push
push
mov
xor
imul
loope
cmpsl
fistps
cmp
loop
insb
dec
lds
and
jge
lods
and
sahf
lods
inc
xor
push
jl
inc
sub
jmp
mov
shll
aad
fwait
xor
inc
inc
pop
imul
push
mov
push
or
jno
ds
mov
sbb
dec
loope
notb
stos
pop
add
pop
scas
dec
xchg
jg
dec
jg
ficoms
adc
xchg
leave
stos
xchg
xchg
bound
sbb
lret
dec
dec
mov
or
sub
daa
jns
or
rorl
data16
in
lcall
push
jge
jmp
cli
xchg
push
imul
fildl
inc
push
fsubr
mov
data16
dec
cmpsb
aas
popf
movsl
pop
aam
test
xorb
scas
mov
cmp
mov
mov
rcrl
mov
fwait
test
push
sbb
cmpsb
and
mov
sub
adcl
loop
fidivs
push
cmpsb
jae
inc
hlt
stos
test
dec
out
rorl
mov
dec
pop
cld
push
cpuid
fldl
stos
pop
xchg
jne
sub
or
xchg
jle
mov
add
mov
cmp
pop
hlt
lock
out
xchg
aas
jnp
pop
mov
jmp
pusha
cmp
adc
fstl
sub
xchg
rcll
sub
mov
pop
pop
mov
inc
xchg
or
inc
push
mov
test
aam
xchg
mov
hlt
cwtl
lahf
mov
or
mov
hlt
push
movsb
sahf
and
adc
rorl
mov
lret
fildl
ja
inc
stc
mov
add
mov
fsubs
out
cmp
pop
outsb
mov
cmpsl
fcmove
inc
mov
or
pop
jb
lods
sub
shrb
jae
bound
add
jl
lods
jno,pn
push
xor
in
scas
cmp
mov
or
repnz
inc
popa
dec
add
xchg
roll
and
xor
and
fstpl
in
les
mov
inc
and
xchg
es
aas
ss
cltd
cmpb
cmpsl
scas
stos
lcall
adcl
adc
mov
cmpsb
lods
or
lahf
mov
push
test
mov
push
push
cmp
sbbb
outsb
ret
test
scas
mov
inc
push
inc
cld
cld
mov
inc
pop
adc
mov
insl
stos
fstp
repnz
mov
shld
mov
je
xlat
cmp
movsl
cmc
lea
cmp
out
inc
jl
cmp
dec
dec
sbb
dec
ljmp
insb
jnp
fcomps
add
sarb
jl
mov
movsl
js
lea
mov
inc
mov
lret
jl
mov
inc
stos
movsb
rcr
in
in
add
repz
xor
adc
pop
inc
gs
add
adc
out
arpl
loopne
movsb
xchg
xchg
popa
and
jecxz
cmp
fcomps
adc
inc
pop
daa
jns
icebp
inc
adc
and
in
xor
in
inc
hlt
inc
pop
ljmp
decl
and
test
jp
lea
or
aam
cmp
out
jge
dec
push
or
jg
fidivs
addr16
outsl
je
mov
add
jno
les
aaa
dec
sub
xor
hlt
sarl
inc
mov
adc
adc
jg
push
lods
fidivrl
rcrl
test
jg
or
xchg
mov
dec
and
sub
outsl
fistl
aaa
cmpxchg
mov
pop
push
mov
mov
leave
xchg
dec
pop
lret
test
insb
out
rep
test
jns
cmp
nop
and
fwait
hlt
scas
mov
inc
and
stos
pop
shlb
pop
std
out
insb
xchg
mov
imul
cli
jae
sub
mov
jecxz
jl
xor
imul
xor
sub
popa
fwait
lahf
mov
movsl
inc
test
icebp
mov
add
or
das
add
loopne
cmp
cltd
mov
mov
daa
in
cwtl
test
mov
jge
jmp
rcll
movsb
xor
xchg
lret
sbb
or
sbb
addl
pop
push
sub
jno
stos
repz
add
scas
pop
mov
decl
pop
pop
inc
lret
cltd
out
adc
jg
pushf
jg
das
std
aad
sub
movsb
loope
dec
sbb
ret
push
push
sti
mov
int
lcall
scas
movsl
out
rclb
or
popa
ret
xor
pop
push
js
or
test
cltd
insb
or
mov
sarb
insl
shl
fdivl
inc
xchg
adc
roll
jge
mov
aas
mov
adc
loope
jecxz
inc
xrelease
loop
cwtl
popf
xchg
push
xlat
sub
sahf
sbb
orb
push
ss
push
int
jb
jbe
push
rolb
repnz
or
adc
adcb
cmpsb
les
push
xor
nop
adcb
and
push
sbb
cld
jecxz
outsl
cld
stc
pop
push
sti
dec
cmp
sub
push
pop
call
lahf
or
nop
pop
pop
fldcw
sti
inc
pusha
aaa
cmovo
loop
and
imul
inc
arpl
int3
mov
das
scas
jmp
test
mov
mov
pop
adc
ret
mov
cmp
mov
lods
movsb
cmc
mov
out
test
xlat
push
fiaddl
lock
sbb
jecxz
mov
sarb
mov
and
xchg
popa
scas
rcl
sbb
adc
mov
inc
ret
mov
add
dec
hlt
and
or
fucom
jmp
xor
push
push
sub
call
ds
mov
cs
sub
popa
jecxz
inc
xchg
in
push
xor
pushf
mov
ficoml
mov
sub
daa
gs
cmp
dec
pop
mov
xchg
mov
add
addr16
xchg
stos
xlat
fidivrl
xor
movsl
movl
fs
inc
js
outsb
pop
in
mov
lods
movsb
push
xor
sub
pushf
daa
jae
push
mov
xor
js
mov
sarb
mov
dec
and
test
popa
fnstcw
fcoms
pop
xorl
dec
roll
insl
jo
iret
pop
xor
cmpsb
lahf
decb
iret
out
movsl
dec
xchg
and
movl
popaw
call
xchg
fsubrs
fnsave
push
adc
rclb
cmp
pop
cmpsb
mov
arpl
mov
sbb
push
sub
in
ficoml
sahf
push
mov
xorl
push
jle
inc
jae
mov
insl
clc
mov
incb
cmp
lock
mov
fucomip
and
cmp
xor
or
adc
pop
jmp
ljmp
jns
sub
or
jae
jbe
xor
call
or
cmc
les
imul
cmp
and
pop
push
lods
add
loopne
or
in
inc
ljmp
xchg
add
inc
mov
adc
shlb
imul
mov
push
dec
das
sti
stos
jmp
xchg
into
loopne
fsubl
leave
sub
mov
xor
mov
xchg
sbb
pop
test
lea
fwait
add
inc
scas
lock
mov
ret
cmp
push
mov
in
pop
outsb
dec
into
jle
cmpl
xchg
faddp
mov
nop
jl,pn
fcoms
adc
sub
inc
xor
inc
xchg
xor
jns
sar
xchg
inc
scas
push
jbe
aaa
sub
pop
lea
shlb
lock
pop
cld
sbb
je
push
and
and
jae
imul
or
push
xor
imul
mov
fistps
cwtl
sarb
push
inc
cld
inc
daa
adcl
into
push
in
out
dec
jnp
push
push
mov
mov
xchg
adc
cs
dec
xor
adc
sub
loopne
mov
xchg
test
xor
adc
sub
mov
mov
inc
data16
mov
lret
scas
cmp
movsl
sbb
bound
rorb
inc
pop
dec
in
out
test
dec
mov
xchg
push
jg
out
sbb
pop
lahf
imul
mov
nop
pop
push
inc
test
jnp
out
shlb
xchg
bound
xchg
repnz
add
push
add
push
mov
imulb
cmp
call
sub
subb
ds
in
and
cld
sub
loop
inc
in
or
aad
cli
xor
mov
add
in
push
and
mov
dec
outsb
int3
sbb
sahf
inc
fwait
pop
rcrl
in
loopne
xchg
call
in
stos
push
sub
js,pt
gs
mov
out
jl
cmp
sarl
xor
push
jne
or
imulb
push
mov
add
cwtl
mull
pop
adc
jge
sbb
pop
push
jb
test
outsb
mov
insl
xor
dec
mov
xchg
adc
mov
bsr
and
mov
xchg
repnz
psubb
sub
subl
mov
push
jo
pop
sub
gs
xor
xlat
jl
scas
add
xorb
push
les
push
and
or
push
cld
mov
scas
iret
loop
dec
mov
pop
push
cs
mov
jnp
in
sub
mov
hlt
pop
push
mov
inc
insl
fsts
movsb
insl
pop
data16
aaa
lahf
test
push
stos
jp
pusha
mov
call
lods
out
add
jge
pop
out
pop
xchg
and
clc
cli
call
fisttps
jne
add
mov
out
aad
mov
xchg
movl
fsubrs
mov
push
cmp
mov
mov
repnz
pop
xlat
cli
leave
sub
insb
lods
xorl
hlt
inc
push
mov
jnp
cmp
mov
lahf
fs
cmp
xchg
in
pop
call
mov
imul
or
sub
aaa
loop
sarl
idivl
jmp
jnp
addr16
mov
out
sbb
xchg
jb
jle
movsl
out
xlat
sub
mov
das
hlt
rorl
xlat
out
cld
rclb
sub
push
sub
jmp
dec
pop
push
push
dec
enter
adc
das
outsb
cmp
mov
jle
ds
rclb
jne
mov
dec
jo
adc
nop
inc
out
leave
je
mov
movsb
fsubrl
mov
icebp
adc
pop
out
loope
ljmp
xor
fucomi
lahf
push
ds
cmp
jns
cmp
pop
mov
sbb
nop
jmp
insl
aas
call
aaa
cmp
iret
roll
dec
out
das
stc
push
inc
mov
and
mov
mov
aam
imul
sti
xlat
mov
sbb
test
dec
mov
adc
nop
cmc
out
fidivrl
sbb
fwait
pop
jns
jne
or
lret
call
repnz
shrl
insb
in
outsl
addr16
push
dec
add
dec
lcall
mov
ja
dec
popa
add
test
imul
fstps
jo,pn
or
mov
test
hlt
add
mov
jge
les
aad
fistpl
mov
cmpsl
jae
adc
daa
sbb
jno
int3
stos
inc
lock
jb
rol
call
xor
jo
iret
dec
and
sarl
subl
mov
stos
xlat
inc
push
xchg
mov
inc
push
push
or
mov
fisubl
lret
jns
xor
cld
movsl
cmp
jno
add
sub
clc
inc
mov
dec
test
jns
mov
inc
xor
and
add
xorl
sub
or
jle
inc
mov
insb
mov
rcr
lcall
loop
mov
xchg
imul
push
jmp
aam
inc
cltd
cmp
sbb
outsl
cmp
mov
lds
sub
jmp
inc
fnstcw
imul
push
jecxz
lods
and
mov
fs
adc
loopne
sbb
cmp
bndldx
mov
fnstsw
std
sub
idivl
xor
add
mov
scas
jae
je
out
repz
mov
inc
cmpl
addl
add
lds
xchg
cld
jb
aaa
xchg
mov
fbstp
add
lds
inc
lret
arpl
mov
mov
ret
jno
imul
sbb
jp
push
xchg
in
and
lret
and
out
and
shrl
imul
inc
dec
popa
cs
les
outsb
jecxz
add
adc
xchg
xchg
fcoml
and
sbb
pusha
popf
jno
cli
add
gs
xchg
in
add
push
xchg
cld
xchg
cmc
pop
mov
bound
ds
jmp
pop
and
mov
xchg
ficoms
pop
cmp
inc
jno
or
add
jp
mov
inc
dec
pop
sbb
or
push
stos
pop
jmp
mov
jns
cmp
popa
loop
mov
les
pop
fcompl
mov
and
hlt
xorl
mov
and
dec
cli
in
push
jb
icebp
pop
sarl
mov
mov
xor
jbe
loope
pop
lock
mov
and
and
xchg
filds
inc
ds
or
and
push
mov
pushf
insl
loopne
gs
pop
adc
jge
xchg
cwtl
test
mov
lcall
jecxz
cltd
in
pop
cmpsl
sub
mov
pusha
mov
pop
push
sbb
jle
jo
mov
outsl
std
push
push
sbb
test
jno
inc
mov
adc
mov
or
pusha
mov
mov
xchg
mov
loop
xlat
mov
pop
cmp
stos
add
daa
ljmp
inc
es
fisubl
inc
in
ficompl
fnstsw
lcall
inc
imul
and
inc
scas
xchg
jne
es
jne
cwtl
repz
dec
hlt
loope
xchg
cmp
ds
aaa
addb
loopne
push
xchg
es
jo
adc
in
clc
lods
hlt
inc
and
jb
in
stos
and
flds
and
lret
loop
push
leave
daa
fwait
cli
push
stos
sub
shl
popf
and
sbb
sbb
mov
xchg
sbb
inc
adc
adc
das
inc
inc
movsl
inc
xchg
adc
cmp
jg
add
dec
cmp
mov
pop
add
inc
add
pop
or
jmp
outsb
pop
adc
mov
scas
mov
push
mov
loopne
xchg
in
mov
dec
add
push
addr16
jge
xor
jns
push
jne
pop
mov
fs
sub
pop
ret
shl
jno
rcl
pop
xchg
gs
pop
mov
cs
cwtl
insl
pop
jmp
sub
gs
dec
and
mov
lods
and
add
es
mov
inc
insl
leave
inc
adc
push
movsb
xor
enter
lahf
dec
push
jp
pop
stos
push
fdivp
maskmovq
imull
test
jp
out
daa
test
inc
mov
and
movsb
push
hlt
jg
add
pop
sbb
xchg
jnp
gs
or
or
lcall
xchg
pop
mov
fcoml
or
and
inc
cwtl
cmp
pop
fdivrl
jbe
das
mov
bnd
xor
inc
dec
pop
jo
add
inc
jae
cld
repnz
xchg
scas
daa
or
and
mov
xchg
test
dec
lods
negb
push
repnz
int3
cmpl
scas
push
xor
sub
in
ss
popa
mov
push
fistpl
addr16
jle
cmp
fisubl
xor
gs
scas
inc
repnz
mull
call
adc
xchg
nop
xchg
mov
sbb
ss
add
xchg
shll
int3
sbb
mov
xchg
mov
addr16
jnp
jnp
rcrb
ja
kmovw
xchg
adc
shr
cmp
lret
cli
pop
test
jne
mov
pop
mov
aas
cli
mov
hlt
push
lret
divb
stos
out
sbb
or
sub
sbb
pop
lahf
inc
xor
imul
mov
pusha
insb
push
mov
xor
add
ret
popf
fisubs
lret
lcall
out
gs
jg
pop
jns
fldenv
divb
bound
stos
cmc
scas
push
mov
outsl
outsl
in
lret
mov
and
cmp
or
sub
jmp
lods
push
xor
scas
in
test
sarb
mov
sub
dec
xchg
jno
adc
loope
cmpsb
push
daa
ret
pop
and
sti
cmpsb
pop
push
addr16
jbe
pop
sbb
cmp
movsb
scas
jae
repz
cmc
jae
insl
jnp
mov
mov
cwtl
dec
or
push
js
dec
pop
xchg
dec
cmp
jns,pt
push
mov
lcall
insl
ret
es
rorb
ss
ret
fimull
adc
lods
mov
aam
xchg
xchg
out
push
int
and
jo
xchg
cmp
push
sbb
push
cmp
xchg
cmp
std
jbe
imul
scas
push
cmp
gs
mov
pop
or
insb
or
mov
xchg
fstp
cs
xchg
xchg
dec
jns
hlt
pop
fwait
adc
inc
mov
in
lcall
xchg
insl
ret
dec
mov
push
push
push
shl
cmc
leave
pop
mov
gs
mov
mov
mov
and
pop
mov
mov
enter
adc
mov
loopne
xor
sti
pusha
mov
adc
mov
bound
imul
adc
loope
mov
add
mov
loopne
lods
push
mov
mov
cmc
out
xchg
lcall
ja
popa
int3
xchg
notl
mov
xchg
mov
sbb
popa
xchg
shll
lock
mov
dec
mov
popf
in
iret
leave
xor
mov
les
pop
pusha
leave
and
out
adc
cmp
cmp
imul
int3
fadds
and
adc
test
mov
ds
cmc
repnz
inc
das
movsb
repnz
inc
jbe
test
adc
cmp
lds
fwait
xor
mov
mov
scas
push
fnsave
out
pop
enter
or
cmp
or
stos
out
es
jns
mov
test
call
xor
or
cs
add
divb
orb
jge
call
jl,pt
sbb
jge
icebp
xchg
ds
pop
jns
fimuls
mov
add
std
push
stos
sbb
xchg
into
mov
mov
add
sbbb
lods
enter
loop
inc
adcl
lahf
jnp
subl
xchg
push
test
xchg
call
mov
add
movl
icebp
mov
dec
xchg
pop
push
and
or
in
xlat
jl
cmpsl
popa
lret
mov
sbb
roll
lcall
push
add
mov
pop
cmp
push
sub
lods
mov
jns
sbbb
push
add
nop
sbb
pop
inc
pop
mov
imul
xchg
pop
sbb
es
xor
lods
insb
pop
dec
adc
test
hlt
enter
inc
push
stc
mov
or
add
cltd
aas
test
jle
stos
pop
enter
mov
xchg
testb
cmpsl
xor
pop
xor
sbb
orl
push
add
jl
or
and
pop
into
fs
int3
inc
in
es
jae
sbb
cli
and
sub
ja
jnp
adc
mov
out
fwait
push
mov
enter
es
insb
daa
jmp
add
sahf
rcll
push
mov
sub
aas
sub
arpl
or
mov
mov
repz
addr16
adc
pop
mov
dec
pop
testb
push
in
jne
int3
xor
pop
out
or
test
and
ret
mov
scas
pop
pop
in
cli
cs
addr16
movsl
mov
cmp
mov
jo
cmp
pop
push
or
mov
addr16
and
mov
addr16
jb
pop
adc
enter
je
scas
push
mov
ja
out
sbb
or
ret
lret
mov
jnp
mov
add
lock
mov
add
xchg
movsb
jns
ret
mov
jge
sub
mov
leave
in
sbb
outsl
push
and
sbb
cli
test
gs
xchg
push
jbe
aaa
jb
sti
mov
into
jne
orl
xchg
inc
jae
lahf
pop
push
fucomip
test
test
add
cmc
mov
xor
lods
xchg
jecxz
dec
fstpl
push
insl
popa
stos
sti
mov
add
xlat
cmp
je
std
add
rol
xchg
jns
je
sub
dec
fistl
les
mov
movsb
arpl
or
mov
dec
cmc
dec
jle
ss
xchg
sub
inc
sbb
fdivrl
scas
mov
test
iret
jae
mov
test
pop
pop
sti
insb
sub
push
cwtl
add
inc
add
jnp
popl
sub
sbbl
fcom
sbbl
push
nop
lret
dec
js
mov
inc
cmp
sti
outsb
sbb
push
in
add
cmpsl
dec
ret
dec
sub
das
lret
or
aam
loopne
pop
xchg
xchg
xrelease
push
mov
cmpsl
lret
sbb
fistpll
ret
mov
add
jg
inc
push
adcl
pusha
adc
rol
movsl
aam
ret
ljmp
push
nop
sbb
insb
or
jg
ret
mov
arpl
jnp
mov
loope
loopne
or
lea
push
and
push
sbb
jae
cmpsb
jo
sti
fcmovnbe
loopne
push
in
scas
je
push
dec
mov
pop
fs
xor
and
lahf
xchg
push
fidivl
stos
icebp
or
inc
xchg
mov
xchg
rolb
jl
imul
push
arpl
and
fildl
aam
aaa
loop
push
nop
xchg
mov
jnp
fmull
out
pop
sub
mov
cld
in
aas
or
mov
shlb
stos
insb
lods
xor
xor
inc
inc
push
lret
aad
push
data16
loop
loopne
sub
pop
or
in
inc
pop
mov
pop
hlt
ja
jg
aas
mov
lods
imulb
or
cltd
mov
dec
shll
lcall
out
jae
aas
add
inc
jmp
sbb
sbb
jns
fmulp
cmpsl
sbbb
jo
cmpsl
testb
test
inc
xchg
push
mov
sti
addr16
mul
cs
xchg
jns
adc
sbb
push
xchg
dec
test
adc
inc
je
push
lea
lods
imul
test
dec
or
push
cmp
addr16
and
fistpl
dec
push
pop
daa
xchg
jl
mov
push
or
sbb
andb
bound
xor
cmp
test
add
sub
or
lods
mov
test
ficomps
out
pop
sub
nop
addr16
mov
dec
inc
sub
cwtl
in
jge
ds
out
ja
sub
push
xor
mov
loope
jle
sti
cs
mov
pop
or
call
jno
into
lret
xchg
pop
test
dec
aas
and
dec
fistl
xor
iret
aad
push
mov
out
cmp
pushf
xchg
mov
xchg
pop
sub
push
outsl
or
or
hlt
push
pop
lret
lcall
xchg
push
lods
pop
fnstsw
mov
pusha
push
fdivs
lcall
jnp
or
into
jnp
rcll
loopne
inc
sti
xorb
pop
pop
adc
push
cmp
adc
and
cli
push
loop
shlb
mov
stc
fs
push
cltd
enter
repz
mov
dec
pop
cmp
dec
negl
ss
jne
insl
mov
pop
lret
or
inc
adc
cmp
test
jg
mov
in
dec
cltd
jno
cmpl
fisttps
daa
inc
adc
or
mov
shlb
mov
xor
or
sbb
mov
setge
pop
outsb
addr16
dec
mov
aaa
pop
cmc
data16
in
fnstcw
pop
popf
stc
es
arpl
movsb
mov
jmp
xor
test
adc
test
shlb
mov
mov
inc
pop
mov
rcll
out
es
adc
das
subb
inc
push
iret
add
jmp
pusha
cmp
adc
lock
shll
cmc
repz
push
xorl
xchg
cmp
mov
lock
sbb
int3
in
mov
hlt
orb
mov
in
dec
push
ljmp
pop
xchg
jne
dec
pop
push
fs
jbe
insb
mov
push
push
cli
xor
xlat
push
fisttpll
fwait
add
test
ret
pushf
into
sbb
mov
fbld
xor
and
cmc
mov
add
cmc
call
cwtl
jecxz
and
loop
sahf
cmp
lret
test
sbb
xchg
gs
std
test
mov
push
roll
adc
insl
es
je
and
aam
xchg
sub
mov
jg
lcall
push
cs
pop
xor
outsb
cmp
and
mov
jp
dec
xchg
fisubrs
inc
pop
stos
add
inc
jmp
pop
pop
shll
xor
sti
mov
iret
sbb
push
pop
push
push
leave
pop
out
test
jp
inc
lods
adc
addr16
cmp
aad
in
inc
lods
sub
xlat
mov
rcll
std
sbb
xchg
divb
outsb
mov
fdivl
fsubrl
sub
shll
mov
incl
scas
inc
mov
sub
sub
test
jae
iret
ret
cmp
lret
lods
shl
lahf
arpl
sbb
push
insb
pop
clc
dec
inc
fcoms
insb
in
sahf
imul
test
cmp
inc
test
stos
and
and
dec
inc
cmp
adc
mov
and
mov
jns
xchg
cmp
pop
xchg
in
xchg
xchg
adc
out
xchg
testl
gs
out
sbb
mov
xchg
mov
je
repnz
sti
sub
adc
lods
cmpsl
les
pushf
xor
add
leave
inc
adc
cmp
xchg
dec
add
push
loopne
push
sbb
pop
lahf
popf
mov
outsl
and
inc
push
sti
rolb
xchg
sub
adc
jae
push
xchg
aam
inc
loopne
imul
fmuls
popf
fs
das
repz
adc
mov
rclb
loope
sbb
sarb
pop
mov
js
cmc
adc
xor
sbb
icebp
ljmp
push
test
add
fldl
loope
imull
push
push
js
lods
lods
mov
int
sub
mov
mov
pop
jp
les
and
subb
lcall
cmpsl
pushf
sahf
adc
push
rol
and
movsb
smsw
inc
sub
jne
and
fmuls
mov
mov
push
pop
inc
pop
mov
out
dec
jbe
mov
xchg
fimuls
xchg
jl
fstpt
andl
xlat
pop
push
xchg
dec
cmpsb
lret
mov
mov
rorl
fwait
test
mov
xor
pop
push
or
mov
nop
jo
sbb
ret
cld
lahf
jmp
hlt
mov
rcrl
or
ds
xchg
sbb
and
xorb
push
rcrb
xchg
jo
lcall
jge
in
push
xchg
insl
xchg
je
jmp
cmpb
jns
fs
and
and
and
orl
mov
or
orl
sub
fidivrl
ss
jmp
ja
aas
pop
dec
jg
cmp
jb
sbb
adc
mov
imul
pusha
fwait
testl
cwtl
sub
mov
test
add
cli
hlt
push
dec
clc
aad
gs
mov
pusha
ret
fwait
lds
mov
pop
insb
call
or
jmp
pop
xor
outsb
inc
pop
lret
sbb
mov
mov
orb
pop
cmc
movl
jae
xor
pop
mov
dec
add
or
mov
pop
push
adc
jae
push
stc
and
cmc
sbb
fs
cmp
jmp
aas
rorl
push
dec
repnz
sbb
and
addr16
fdivl
xchg
movsb
push
test
xchg
clc
mov
push
pop
ja
hlt
cwtl
rclb
jle
cmpb
jmp
add
pop
stos
dec
iret
in
and
xor
sbbl
add
pop
nop
push
mov
adc
arpl
sbb
daa
popf
in
into
rcrl
inc
std
and
cmp
xor
jne
clc
sbb
or
cmp
rcll
xor
daa
ja
call
popa
int3
lahf
in
xchg
in
add
sti
aaa
mov
cmc
daa
jle
push
popa
push
dec
push
lea
fwait
lods
xchg
iret
fldenv
pop
lea
addr16
inc
xor
or
push
andb
mov
mov
out
into
aas
mov
mov
mov
inc
inc
sbb
in
jne
xchg
filds
sahf
push
ds
adc
lahf
adc
test
hlt
in
out
clc
push
mov
inc
push
xchg
aam
mov
add
pop
xchg
mov
jns
jp
mov
and
jns
sub
sbb
xor
int
xchg
fiadds
das
fwait
pop
enter
andl
shlb
pop
in
testb
pop
shrb
inc
push
push
adc
push
mov
adc
fs
and
mov
mov
jmp
lods
lods
icebp
addb
stos
push
sub
movsl
mov
or
mov
gs
adc
or
insl
fld
cmpsl
mov
mov
bound
fwait
add
xchg
sbb
loopne
call
rorb
scas
ss
pop
cmp
inc
mov
sti
out
and
adc
repnz
cwtl
inc
rcll
and
pop
dec
add
cmpsb
arpl
xchg
cwtl
scas
lods
adc
out
mov
inc
popf
mov
mov
jns
add
sub
popa
mov
ret
sub
dec
xor
icebp
or
stos
jbe
add
hlt
je
mov
out
mov
push
pop
jp
shll
lcall
xchg
mov
into
push
jmp
xchg
pop
arpl
inc
jo
outsb
pusha
repz
dec
stos
loope
add
stos
fcom
dec
pop
aaa
and
and
sub
ss
jl
pop
adc
mov
push
cmpsl
mull
insb
dec
leave
loop
shrl
and
push
unpcklps
scas
lock
pop
push
mov
inc
xchg
addl
stos
or
rclb
repz
sahf
mov
mov
clc
gs
push
fcmovne
mov
cmpxchg
dec
rcrl
xor
popf
int
ret
mov
sbb
inc
or
xchg
mov
rorl
or
cmpsl
mov
push
les
jmp
fsub
outsl
mov
lret
xchg
mov
arpl
orb
stos
aas
dec
out
jno
pop
popa
xchg
sub
iret
pop
push
push
push
xchg
xchg
hlt
jo
aam
shrb
jae
mov
out
pop
add
mov
repnz
ljmp
xor
sub
or
cltd
in
ja
enter
clc
ljmp
xor
aad
xchg
cmp
xor
bound
loopne
stos
popf
or
pop
aad
decb
cmp
adc
add
ss
mov
xor
xchg
jnp
in
aad
scas
ja
movsb
cmc
faddp
in
addr16
shll
push
mov
out
fdiv
sbb
sti
sbb
cld
or
addr16
mov
jns
test
and
out
lods
sub
pop
into
jno
ss
inc
inc
outsl
cwtl
pushf
std
pop
jmp
or
mov
ja
sub
mov
test
push
lea
call
cmp
jl
popf
hlt
push
pop
jle
mov
aaa
mov
aaa
inc
cmp
lret
cmc
adcb
dec
push
fnstcw
sub
leave
xchg
stos
sub
aam
inc
mul
sbb
repz
jecxz
aam
and
mov
cli
xor
test
sbb
push
jo
mov
adc
adc
ds
mov
in
filds
shll
cmp
jle
push
fdivrl
mov
push
fmull
into
jns
lcall
jo
add
pop
adc
cmp
mov
imul
loope
div
or
imul
sub
insb
inc
push
dec
pop
inc
shl
adc
jmp
jno
js
aas
jmp
lods
push
inc
aaa
mov
cld
pop
imul
adc
fidivrl
loope
mov
addl
mov
lock
add
xlat
push
insb
in
xchg
inc
sbb
mov
lock
jo
mov
enter
fwait
xor
mull
outsb
jg
outsl
xor
add
push
stos
xchg
push
dec
mov
dec
cmpsb
std
mov
adc
jmp
xchg
int
dec
popa
leave
outsb
jp
mov
adc
mov
adc
daa
cltd
fistps
push
and
testb
out
test
lods
lods
mov
gs
mov
test
aam
cmp
cmp
lret
xor
xor
or
loopne
fidivs
xchg
popf
lcall
pop
pop
sub
push
aad
sti
push
xchg
outsl
adc
movl
icebp
out
sbb
decb
cmp
aam
pop
cmp
dec
push
add
add
cmpsb
mov
lahf
cmp
mov
or
lods
mov
xchg
jb
jnp
lret
inc
scas
stos
movsl
jl
pop
sub
or
jb
xor
std
mov
xchg
or
inc
les
push
std
shl
pop
aad
shrb
insb
jo
and
dec
add
loope
dec
es
fs
pop
call
dec
or
cltd
push
xchg
lock
push
add
lea
fdiv
jne
cmp
xchg
dec
jp
mov
adc
mov
sbb
cmc
mov
ror
mov
add
xchg
xlat
dec
mov
xchg
dec
test
pop
inc
loop
push
mov
sub
jg
in
dec
out
mov
and
push
pop
not
adc
lahf
add
cmp
orb
and
ja
inc
mov
inc
mov
push
and
xchg
push
xchg
lods
bound
stos
rcrl
sbb
outsl
jne
cmpsb
mov
xor
aaa
mov
jb
pop
inc
insb
adc
mov
ficomps
cmp
adc
outsb
test
and
out
mov
xor
mov
cmpsb
pop
push
mov
inc
cmp
sub
loopne
movsl
lods
cmc
jno
push
es
jne
pop
jns
jno
aad
add
mov
out
sub
imul
jno
push
stos
jne
add
push
adc
or
ret
and
loope
push
jecxz
lret
and
and
jmp
das
xlat
xchg
sub
mov
jp
jne
in
div
sbb
mov
mov
mov
jns
mov
xor
mov
sub
ja
aad
push
rorl
fwait
mov
shll
jo
and
push
mov
dec
jg
repz
out
sbb
cltd
mov
repz
ret
xchg
jle
or
andl
mov
dec
roll
pop
jb
mov
testb
mov
ror
mov
pop
dec
inc
or
mov
pop
loopne
scas
mov
xor
notl
imul
pmaxub
cmc
xchg
jmp
aaa
bound
lcall
mov
pusha
jmp
sarb
ja
mov
xor
call
mov
lret
pop
xchg
sahf
mov
xchg
or
sub
nop
lahf
mov
out
bsf
jnp
test
clc
orl
in
repz
push
daa
sbb
sub
cmp
mov
mov
mov
jne
rcl
jo
lods
cmp
pop
mov
cli
sub
jns
fidivrs
popa
fisttps
fwait
push
pop
mov
adc
jmp
pop
int
push
addr16
pop
stc
pusha
push
dec
lods
xlat
mov
sahf
idivb
push
outsb
dec
rcll
test
and
fsts
call
scas
outsl
js
xorl
pop
xlat
lods
push
clc
sbb
js
testl
adc
ss
dec
mov
fstpl
mov
aaa
mov
loopne
fisubrl
jle
jp
push
mov
xchg
cmc
je
xlat
ljmp
sti
les
xchg
cld
loop
cltd
dec
imul
xchg
andl
and
test
dec
cltd
lahf
mov
push
daa
pushf
mov
nop
pop
clc
sbb
fs
or
jl
mov
adc
rorb
pop
xchg
jmp
icebp
cmc
dec
pop
in
leave
imul
lds
xchg
stos
push
sub
cs
data16
jne
push
jo
push
sbb
pusha
sbb
mov
adc
loope
cmpsl
mov
aaa
adc
aas
sbb
sbb
divl
cld
aam
cmpsb
into
stc
dec
adc
sahf
fisubs
scas
test
scas
inc
lods
pop
das
xchg
aaa
cld
inc
idivl
xchg
xchg
mov
mov
leave
pop
add
addr16
enter
push
aad
orl
cmp
daa
xor
adc
mov
and
rcrb
pop
mov
pop
xchg
int3
mov
aaa
mov
xor
mov
js
sbb
xor
add
and
jns
xchg
push
test
movsb
lahf
push
cmpsb
sbb
push
loopne
fnstsw
xorb
rcll
popf
cli
dec
xor
ud2
pop
std
push
push
and
faddl
out
jecxz
imul
mov
dec
data16
fadds
clc
xor
push
popa
test
jecxz
xchg
xchg
in
addr16
inc
xor
xchg
cmp
loopne
inc
mov
stc
dec
dec
sub
movsb
sub
je
sahf
stos
cmp
xchg
int
mov
sbb
and
xor
lods
xor
in
mov
pop
adc
cs
pop
add
fwait
jl
push
inc
lock
jl
stos
lods
pop
popa
cmp
pop
or
ret
imul
adc
pop
adc
rol
leave
mov
bound
fs
mov
lock
hlt
pop
add
sub
lret
loopne
loop
add
outsb
add
mov
repnz
push
push
push
jmp
int
cltd
cmp
xlat
aad
adc
jle
xchg
out
adc
std
dec
lret
and
lcall
jae
mov
outsb
out
out
jge
mov
jl
stos
addb
cli
loop
cltd
call
jne
or
inc
adc
in
ret
dec
daa
lock
cmp
clc
ret
mov
imull
incb
mov
xlat
mov
ret
mov
sti
in
cmp
ja
leave
js
fiaddl
test
sbb
jb
dec
fists
mov
jp
out
or
xor
mov
fst
adc
xchg
or
mov
sub
scas
lods
clc
imul
sbb
cmp
lret
jo
cmp
popa
push
aaa
add
test
sub
jb
sub
jmp
cmp
cld
call
push
jne
aaa
adc
adc
mov
outsb
push
xchg
mov
stos
or
into
push
testb
outsl
jbe
enter
pop
pop
push
xchg
mov
xlat
stos
stos
fs
or
jle
fimuls
mov
mov
mov
jo
xor
jmp
inc
faddl
jmp
inc
adc
dec
imul
aas
sub
scas
mov
mov
mov
mov
xchg
pop
mov
sub
cltd
and
test
sub
and
aad
push
loopne
lcall
jle
jne
hlt
fld
cmpb
mov
mov
ror
cmp
or
fsubrl
pushf
cwtl
lea
xchg
cmp
imul
cs
xor
and
mov
mov
add
mov
es
and
jno
mov
or
mov
adc
aas
mov
add
jae
mov
int3
pop
cmpl
cmp
imul
mov
je
add
mov
sbb
nop
xchg
fs
or
pop
jmp
mov
inc
pop
out
xor
ret
outsl
jnp
lods
and
stc
cmpsl
mov
pop
xchg
lcall
xchg
outsl
repnz
cmpl
loope
outsl
mov
movl
jg
sbb
inc
pop
or
jg
out
insb
dec
mov
jl
cmp
fstpt
aas
lret
dec
testl
in
push
shrb
cmp
dec
cmp
adc
lock
sti
out
aam
pop
movsb
js
mov
stc
dec
ljmp
push
cmp
pop
in
std
inc
and
stos
aaa
jo
fisubs
adc
and
fs
dec
lea
inc
stc
shll
adc
cmp
mov
adc
enter
or
fs
pusha
push
sti
lock
ss
jno
lret
push
mov
faddp
movsl
add
xor
xor
cld
jbe
xor
xorl
repz
or
out
dec
decl
xor
in
jle
mov
jl
scas
pop
push
and
jle
hlt
leave
data16
scas
mov
rcrb
cmpsl
fbstp
add
nop
icebp
jmp
push
sbb
jle
jo
stos
pop
and
push
lods
xor
repz
push
mov
mov
shrd
cli
adc
mov
and
mov
jle
inc
out
inc
test
loopne
test
insl
ds
and
nop
and
test
mov
push
icebp
push
jno
divl
stos
add
mov
push
or
cmp
push
push
mov
cmc
jbe
dec
and
mov
vunpcklps
cld
and
xchg
push
aad
add
aam
out
inc
mov
pop
int3
push
fisubrl
and
das
add
adc
mov
mov
sub
notb
test
xlat
daa
jg
push
cmp
inc
movl
mov
xchg
leave
bound
fwait
jb
mov
dec
push
push
push
cmp
xor
rcrb
aaa
ret
stos
dec
mov
sub
jb
je
jecxz
push
add
mov
sbb
and
arpl
rcll
mov
loop
movb
xchg
out
in
aam
pusha
or
sub
aaa
out
ljmp
dec
sahf
and
ja
mov
imul
xchg
pop
mov
arpl
mov
bound
decb
outsl
nop
les
mov
int
fwait
mov
sbb
and
fldcw
fbld
imul
lods
ret
aam
test
test
xor
ds
or
in
push
repz
fimuls
or
pop
mov
cmpsb
daa
mov
push
lea
mov
popa
add
xor
push
lahf
mov
sbb
adc
test
imull
aaa
ljmp
jl
rcl
cld
cmp
mov
iret
test
push
jmp
cmp
xchg
sub
test
xor
sub
les
mov
shr
lcall
jp
leave
xor
mov
repnz
xor
dec
and
xchg
cld
stos
ss
push
jb
sbb
test
subl
lds
mov
cmpsl
in
jo,pn
into
mov
clc
cmp
mov
test
mov
xchg
cli
ljmp
aaa
jae
and
cwtl
push
or
imul
ret
lret
and
cs
xchg
pop
call
adc
dec
mov
jno
int3
add
lods
push
jg
inc
stos
jle
mov
push
arpl
iret
jecxz
push
ficoms
stos
fsubp
test
and
notl
xchg
push
scas
inc
sub
pop
jl
cmpsb
shlb
mov
mov
sub
mov
test
repz
andb
pop
or
jnp
push
sub
push
add
inc
jp
pop
inc
cli
cmp
sarb
fistpl
cmc
cmp
sbb
pop
dec
mov
in
add
cmp
lea
adcb
mov
in
cs
inc
loopne
test
pop
fwait
add
fisubs
fldt
cli
pushf
adcb
fcos
mov
stc
jae
addl
mov
stos
mov
mov
mov
movswl
push
adc
xor
sbb
push
and
hlt
mov
ljmp
daa
inc
dec
mov
dec
orb
or
jg
sbb
iret
insb
pop
xor
mov
les
jbe
add
sub
jge
wrmsr
dec
cmp
aas
js
mov
adc
fdivrl
arpl
pop
aad
jmp
mov
cld
es
push
es
aam
sti
push
or
stos
add
fcompl
mov
cmpsb
and
push
or
fdivrl
addr16
xchg
outsb
int3
or
pop
xchg
sbb
out
adc
fbld
mov
dec
popa
aad
or
lret
mov
inc
repz
adc
inc
sub
push
pop
and
repnz
jmp
xchg
call
in
or
pusha
iret
xchg
fisubrl
dec
inc
jnp
push
pop
sub
sub
das
cmp
jecxz
pop
lds
test
pop
inc
mov
jo
loope
inc
xchg
repz
mov
out
pop
subl
pop
adc
cwtl
clc
jge
or
jmp
in
xor
or
jae
pop
aad
xchg
inc
insb
fmull
shlb
sbb
xlat
or
adc
mov
dec
add
sbb
pop
ror
jb,pn
imulb
shlb
dec
adc
faddl
bswap
xchg
xchg
or
test
pop
jle
ret
repz
in
ss
lock
push
mov
jle
clc
ljmp
push
and
fwait
cmp
adc
inc
pop
mov
pop
leave
mov
jge
mov
cmp
out
mov
push
pusha
mov
adc
xchg
into
and
jecxz
push
popa
mov
andl
push
fldcw
cmp
xchg
icebp
ds
mov
popa
mov
js
mov
cmpsl
inc
lcall
repnz
mov
icebp
outsb
inc
or
je
je
mov
mov
mov
jg
or
mov
jmp
inc
imul
jp
insb
pop
cwtl
pop
fwait
sub
pop
add
int
xor
js
std
rcrl
pop
es
fucomp
addb
int
inc
in
xchg
lret
pop
scas
mov
cs
in
divb
dec
imul
loopne
in
jg
cltd
adc
shlb
push
mov
scas
jne
js
jnp
mov
add
inc
popf
imul
aaa
and
mov
scas
push
leave
cmpsb
add
test
dec
add
ret
push
int
pop
int3
outsb
mov
jmpw
jae
sub
fisubs
adc
or
push
mov
cmpsb
in
int3
dec
fistl
sbb
icebp
pop
ss
daa
dec
adc
das
outsl
inc
jmp
or
sub
or
jne
in
dec
jns
mov
loopne
mov
mov
adc
sar
xor
sbb
inc
push
add
leave
loopne
mov
push
int3
jmp
popf
rcrl
rorb
or
mov
bound
outsl
aas
or
adc
arpl
movsb
mov
popa
mov
aad
sbb
out
in
cmp
ja
adc
call
inc
and
mov
jge
push
sti
or
jg
sbb
xchg
adc
mov
xchg
sbb
cld
cmp
cwtl
xchg
xor
lea
aad
test
dec
pushf
in
loopne
test
fs
or
iret
lret
mov
ja
jno
scas
and
lcall
movsl
pop
jne
mov
cmp
cwtl
lret
ja
sub
mov
cmpsb
das
mov
inc
push
push
test
sahf
push
shrl
aaa
sahf
dec
inc
les
sub
enter
inc
dec
and
add
cmp
loopne
mov
pop
addb
lret
pop
mov
subb
call
imul
stos
test
push
xchg
push
cmp
addr16
jmp
dec
dec
push
fdivl
mov
lea
aad
sbb
sbb
ljmp
fsubrp
addr16
sub
popl
xchg
xchg
push
inc
fmuls
loopne
jno
pop
rcrb
shl
test
add
popa
insb
jl
jp
cmc
cmpsb
adc
sbb
daa
fstpt
mov
test
stc
jo
add
sahf
sub
sahf
sbb
pusha
xor
mov
ret
inc
cmp
cmp
sbb
pushf
jne
mov
cmc
andb
mov
inc
jnp
cmp
mov
out
stos
jb
sti
cli
xlat
and
and
fdivs
push
mov
adc
roll
xor
stos
xorl
cmp
adcl
pop
add
lcall
pop
dec
test
mov
push
mov
xchg
out
stos
xchg
sub
lret
insb
iret
inc
cmpsb
testb
mov
mov
jecxz
cmp
sub
lahf
in
pop
xor
xor
icebp
cmpsl
add
push
mov
sub
ljmp
xor
pop
jmp
sub
mov
cmpsb
repz
pushf
lds
gs
mov
outsb
xor
scas
aas
aad
xchg
into
enter
notl
mov
cltd
stos
stc
stos
aas
pushf
adc
adc
xchg
xchg
and
pusha
xor
jae
hlt
nop
mov
fbstp
xchg
rcll
or
jge
js
cmp
test
stc
mov
dec
xchg
out
test
dec
xor
repnz
push
mov
xchg
mov
pop
adc
mov
daa
adc
mov
pop
or
xchg
js
pop
lds
bound
cmp
sbb
cli
bound
push
jmp
sbb
xor
movsl
fistl
dec
bound
push
sub
adc
push
js
jo
adc
inc
cmp
test
lcall
les
mov
mov
lahf
jnp
mov
js
pop
xchg
dec
add
mov
push
sbb
jno
loope
cmc
jae
sbb
dec
push
and
lahf
mov
mov
scas
loope
addr16
xlat
cli
jmp
sbbl
sbb
add
jae
push
jge
push
pop
mov
std
dec
cmp
test
in
mov
orl
divb
pushf
mov
cld
cmp
stc
pop
sbb
pop
stos
adc
or
sub
ja
adc
push
rolb
into
call
movsl
sub
insl
cmpsl
cmpsl
mov
mov
sti
outsl
xchg
and
popa
shrl
pop
das
mov
ret
popa
jg
push
cld
xor
jg
xor
push
and
or
cmp
fstpl
push
cmp
or
jb
rorl
js
mov
hlt
outsb
inc
mov
hlt
cmp
pop
in
dec
push
mov
pop
jmp
cli
repz
lret
jns
and
mov
scas
ret
movsl
repnz
mov
insb
mov
ret
xor
and
adc
pop
and
jno
bound
cs
divb
dec
cli
test
sbb
js
stos
push
inc
ret
push
adcl
stos
in
sbbl
adc
arpl
mov
pop
lret
mov
or
fwait
jge
jns
push
in
dec
and
inc
add
out
inc
fscale
shl
sub
push
imul
sub
add
push
jb
addl
or
dec
and
mov
cmpsb
sbb
scas
pop
pop
cmp
xor
lret
out
xor
jb
dec
and
enter
ja
mov
iret
dec
or
rol
mov
js
test
pushf
sahf
mov
xor
or
stos
xchg
mov
test
dec
kmovb
dec
sub
sbb
ds
stc
js
leave
mov
jbe
jae
cmp
pushf
lds
in
jge
imul
scas
mov
das
mov
push
push
ss
sub
mov
sar
popa
loopne
dec
mov
das
xor
fildll
mov
je
xchg
fimull
fwait
out
out
scas
cs
xorl
aas
lock
idivl
cmp
sbb
or
jne
cld
js
jns
sar
jb
sbb
js
clc
and
pop
cmp
and
dec
mov
adc
repz
pop
xlat
pop
aas
addr16
mov
and
mov
icebp
sub
add
cli
add
add
sub
push
add
push
sub
cli
push
icebp
repz
inc
sbb
lcall
jae
or
inc
ja
stc
add
insl
push
fimuls
jmp
adc
cs
push
in
cmp
mov
mov
out
push
sbb
add
pop
push
fimull
clc
mov
mov
out
jae
leave
ret
scas
fs
mov
xor
xchg
lods
jge
arpl
mov
cli
and
mov
cmp
add
xchg
jne
pop
pop
jno
imul
cltd
inc
mov
popa
xchg
rol
orl
cmp
shrb
inc
ss
mov
adc
jecxz
lock
jmp
addr16
mov
shrl
popf
outsl
mulb
lds
add
pop
push
ss
iret
push
rcrl
cwtl
loop
or
lods
loope
daa
xor
add
mov
cmp
xchg
imul
cmpsb
lods
dec
add
scas
jnp
add
aad
jg
aaa
test
outsl
stos
adc
xchg
in
push
xorl
insb
bound
loop
dec
imul
mov
add
push
pop
or
mov
icebp
dec
or
aad
mov
adc
push
loopne
cwtl
mov
fdivl
in
mov
fdivrl
jne
mov
lods
int3
push
jns
js
jnp
inc
sbb
cld
mov
push
negl
dec
jge
fidivrl
jge
ret
insb
inc
mov
out
jg
pop
shll
ljmp
pop
cmc
unpckhps
or
mov
or
movsl
scas
adc
loopne
dec
loopne
pushl
mov
mov
jbe
mulb
addb
iret
or
pop
or
xor
add
jg
mov
movsl
daa
mov
loopne
out
in
pop
in
lock
add
idiv
shrl
mov
adc
push
lea
adc
mov
or
mov
mov
or
nop
add
pop
pop
pop
sub
sbb
addb
pop
out
xchg
out
push
xor
mov
enter
add
outsl
or
inc
cs
xchg
movsl
pop
pop
pop
test
jg
adc
jne
push
push
push
cmpsl
fs
fsubrs
xchg
inc
jo
push
test
dec
pop
push
in
push
outsb
mov
cmp
dec
clc
xchg
popa
inc
adc
or
inc
jne,pn
add
lods
adc
push
les
psubw
adc
loope
inc
movsb
mov
cmpsl
call
hlt
inc
dec
mov
out
mov
int
add
sbb
test
gs
sub
add
pop
xlat
adc
arpl
jge
movsl
mov
stc
dec
cmp
stos
pop
mov
inc
add
fdivl
xor
inc
xor
cmp
outsl
in
call
jl
xor
es
inc
jne
and
fstps
out
jnp
lock
or
movsl
pop
shlb
adc
hlt
test
and
cmpsl
movq
jns
lock
imul
aam
cli
shr
test
and
rclb
fnstcw
lea
adc
jb
inc
ja
mov
lea
aam
xchg
out
js
roll
insb
sbb
into
sbb
add
add
fscale
jne
push
mov
xchg
cmpsl
outsb
xor
imul
je
cs
inc
xchg
and
mov
pop
popa
xor
fwait
mov
ret
into
pop
push
mov
add
pop
push
insb
pushf
dec
cmpsb
inc
stos
faddl
mov
push
fsubs
inc
mov
dec
or
addr16
ss
mov
sbb
push
add
lock
inc
pop
shll
rcl
dec
mov
cwtl
test
mov
sarl
adc
adcl
or
adc
inc
adc
ja
cmpb
add
cmp
jns,pn
jae
vmread
lods
repnz
cli
fstpt
fsubp
cmp
sub
hlt
pop
mov
loope
sub
push
or
dec
cmpsl
es
xor
sub
xor
xchg
pop
jo
pushf
adc
or
das
enter
fistpll
orb
and
jae
addr16
addr16
jle
push
inc
adc
idivb
out
mov
testl
icebp
jmp
pushf
fwait
pop
pop
aad
imul
mov
cmp
mov
xor
lret
and
test
sub
jbe
test
lret
addr16
sbb
lock
add
adc
xchg
in
mov
paddd
sbb
cmpsb
jge
push
shll
gs
cwtl
lock
cmpsl
test
or
lret
and
xchg
scas
fsts
pusha
movsl
adc
cmp
xchg
iret
xchg
cs
in
cmp
sti
movsl
mov
inc
jle
lods
bound
xlat
pusha
cmp
nop
repz
mov
subl
pusha
adc
xor
shl
push
jp
cli
xchg
cmp
and
jp
pop
sti
mov
pop
push
or
into
imul
sbb
aam
or
fnclex
mov
and
data16
push
ficoml
mov
data16
pmulhw
cmpl
test
lret
stos
inc
cli
data16
pop
ret
cmp
cmp
mov
popf
mov
cli
call
lods
or
dec
adc
push
add
das
dec
repz
fnsave
sbb
and
fwait
xchg
pusha
mov
xchg
push
inc
push
loop
xchg
jns
imul
scas
mov
mov
int
sub
mov
push
sbb
sub
adc
or
ss
or
mov
cmp
cmp
enter
sub
pop
xchg
cmp
scas
mov
push
xor
pop
mov
lret
aad
inc
stc
test
in
jne
out
std
sub
push
rcrb
std
les
out
dec
adc
loop
movsb
int
lea
jl
xchg
nop
lods
lea
mov
xor
jmp
ljmp
and
or
das
pop
mov
loopne
test
xor
mov
push
out
and
mov
imul
shrb
mov
fstl
sub
jnp
push
repnz
popf
push
stc
outsb
mov
pop
movsb
cmpb
dec
push
mov
jae
inc
loop
movsb
loopne
fldl
adc
push
lret
negl
mov
inc
jae
xor
fs
mov
fwait
add
dec
stc
data16
dec
or
nop
mov
ret
inc
ret
aaa
xchg
inc
hlt
clc
mov
mov
mov
scas
dec
loope
jb
arpl
leave
adc
lods
xor
es
int3
mov
inc
cmpsb
and
jmp
push
jns
and
repz
mov
cmpsl
xchg
fimull
test
jae
adc
call
stos
sbb
cmp
in
cwtl
sbb
push
and
inc
lock
xchg
mov
xor
xchg
leave
push
mov
push
mov
in
xchg
out
jb
ljmp
es
xchg
lea
and
fs
and
loopne
mov
jbe
test
ret
in
xor
cs
xchg
pop
push
pop
pop
mov
pop
stos
ja
loop
mov
cmpsb
and
ret
test
adc
mov
xchg
push
popa
into
cmpsb
in
pop
idivl
and
std
repz
outsl
xchg
mov
inc
test
xor
xchg
mov
jnp
insb
aas
sbb
adc
out
neg
outsl
add
jb
xor
popf
xchg
or
cmpsb
cmc
xchg
fidivrs
call
push
mov
xor
jle
imul
dec
aas
cld
cmc
jle
and
negb
loope
jp
loope
inc
stc
in
sbb
out
js
push
jmp
lock
rclb
and
pushf
sub
ret
push
dec
push
pusha
mov
dec
push
push
loope
add
add
insl
aas
pop
xor
and
shrb
sub
std
fisttps
clc
bnd
mov
fstpl
cmpsb
outsl
ja
xlat
inc
inc
mov
mov
cwtl
lcall
jmp
push
and
les
dec
lods
repz
mov
cmc
cmp
push
adc
cmp
jne
out
iret
scas
mov
insb
test
std
inc
jb
mov
sub
icebp
dec
jbe
ja
mov
ljmp
insl
popa
sarb
clc
push
cmp
iret
ljmp
insl
in
out
xchg
mov
cmp
sub
andl
jge
int3
inc
xlat
pop
add
sar
or
icebp
ds
in
mov
in
mov
xlat
aad
in
mov
push
sti
jo
add
or
rol
push
hlt
pusha
rcll
fcomip
gs
fldt
in
lods
jl
aad
inc
xchg
stos
pop
data16
inc
mov
dec
inc
mov
and
ds
sbb
mov
mov
iret
and
adcb
xchg
frstor
xor
fcomps
cmp
mov
push
testb
call
fnsave
sbbb
subl
stos
inc
add
mov
lahf
in
dec
out
pop
mov
movsl
pop
push
jecxz
in
adc
scas
scas
cmpsb
mov
pop
cmpsl
xchg
pop
in
lcall
imul
test
dec
push
sbb
inc
pop
jge
sub
movsl
icebp
mov
daa
pop
add
inc
loope
mov
mov
sbb
fs
mov
jbe
sub
push
in
jmp
rorl
or
xchg
icebp
sbb
push
jnp
sub
sbb
cli
in
cmpl
mov
xor
inc
aas
mov
stc
mov
pusha
aas
cmp
icebp
xchg
stc
mov
inc
fs
xchg
cmp
cmpsl
shlb
sbb
push
lcall
cmp
sbb
push
mov
scas
outsb
sbb
cmp
clc
gs
dec
jl
ja
js
into
fwait
or
dec
mov
and
loop
cmp
or
iret
outsb
push
lods
rorb
xchg
adc
clc
int
pop
fimuls
ljmp
out
pop
sub
hlt
ja
leave
inc
loope
stos
lret
fistpl
mov
roll
iret
add
and
pop
jmp
outsl
inc
mov
adc
lds
arpl
scas
cmpsb
lret
stc
xchg
mov
imul
mov
and
pop
out
aas
dec
in
lods
mov
add
jb
sub
push
repnz
lahf
mov
dec
in
aam
cmp
cmp
ret
jne
and
loope
gs
mov
xchg
mov
push
push
inc
push
inc
loope
inc
jg
out
hlt
sub
test
cmp
je
inc
adc
sahf
push
jne
xchg
push
aad
pop
push
adc
scas
sub
and
jbe
sti
into
add
movsb
loop
clc
cmpsl
outsb
cmc
imulb
add
ds
loope
add
cmp
mov
ficomps
xchg
cmp
inc
dec
xor
jns
movsl
sti
jp
jg
in
lods
cwtl
jp
je
sti
sbb
ja
pop
pop
addb
mov
popa
inc
add
and
dec
arpl
mov
cmp
mov
dec
incb
les
cs
adc
inc
adc
xchg
jg
sbb
andl
outsb
inc
cmp
push
mov
imul
mov
pop
ret
inc
cmp
imul
pop
sub
sub
xlat
ljmp
xchg
mov
repnz
sbb
xor
or
cs
gs
jp
xchg
mov
out
movsl
pop
inc
xchg
in
std
cmpb
cmp
iret
imull
popa
lahf
sub
call
cmp
xor
xchg
cmp
out
and
insl
pop
daa
lods
xor
or
ret
dec
nop
je
jae
add
mov
cmp
mov
idiv
add
shll
aaa
iret
std
jmp
repz
mov
sub
inc
inc
jp
or
adc
add
mov
cs
fidivl
or
add
xchg
aaa
or
adc
bound
and
mov
ljmp
and
enter
filds
fstp
pusha
addr16
lock
mov
sarl
sub
out
sbb
xrelease
jecxz
pop
cmp
stos
loope
sub
cmp
fbld
in
xchg
mov
jbe
dec
fmulp
hlt
loop
insl
mov
push
mov
mov
fisttpll
mov
pusha
arpl
mov
dec
sti
fwait
adc
mov
cmp
xchg
dec
cs
lahf
mov
std
xchg
pop
ret
lods
add
rcll
mov
ljmp
sub
std
inc
pop
xchg
cmp
push
jg
shr
cmc
mov
jnp
loop
movsl
incb
int
mov
shlb
pop
in
lret
pop
test
pop
pop
pop
ds
aas
mov
push
int3
sarl
in
scas
loop
sbb
xor
pusha
das
repnz
push
mov
cwtl
xor
mov
jmp
sub
adc
xchg
xor
dec
xchg
aam
fldcw
add
cmpsl
mov
aam
push
push
cwtl
sub
jg
sub
in
cmp
xor
inc
aaa
xorb
js
mov
sbb
out
mov
bound
cli
ss
sub
mov
push
out
cmc
xor
inc
sbb
jl
xor
jl
out
loopne
fdivl
fmuls
adc
inc
pop
mov
mov
fwait
imul
mov
sub
loop
push
or
xor
sub
mov
cltd
ret
or
cmp
iret
stos
lock
mov
pop
rcll
or
pop
sub
push
andl
and
pop
adc
adc
popl
cmpb
add
ds
dec
pop
les
cli
scas
mov
or
pushf
sti
xor
mov
call
jp
leave
mov
xchg
sbb
imul
mov
lahf
scas
mov
test
test
lods
dec
pusha
inc
push
add
insl
mulps
pop
adc
pop
pushl
mov
fwait
hlt
mov
js
das
into
jae
cltd
adc
and
pop
stos
std
pusha
mov
xchg
std
pop
es
loopne
and
pop
pushf
xchg
mov
and
push
inc
rolb
sub
insb
andb
add
fstpl
adc
test
popa
sub
push
scas
stos
push
xchg
mov
or
decb
inc
lock
add
pop
jp
mov
inc
xchg
cmp
xor
out
xchg
dec
or
jge
out
out
aam
cmp
fidivrs
mov
dec
test
fsubl
or
cmp
push
push
jb
outsb
popf
mov
imul
hlt
orl
iret
add
in
fimuls
sub
xor
add
pop
pop
imul
insl
inc
ret
rcll
inc
out
add
into
mov
xorb
fcompl
iret
adc
sub
adc
aad
or
mov
dec
js
cmc
imul
out
xor
insb
andl
sbb
pop
xchg
rcrb
or
or
sti
jecxz
jmp
pop
pushf
cmp
cs
cs
inc
ljmp
mulb
sub
ljmp
rclb
adc
insb
cwtl
jmp
xor
xor
testl
loop
and
inc
xchg
add
inc
jbe
mov
mov
cld
cwtl
inc
leave
stc
iret
push
cmpsl
push
lret
lods
mov
mov
push
jmp
xchg
add
ret
mov
arpl
cmp
loope
popf
jecxz
imulb
in
jo
cmp
out
mov
xor
push
xor
mov
sarb
mov
add
filds
cmpsb
and
cld
sbb
das
js
int
pop
mov
sub
mov
pop
inc
inc
add
mov
sub
sbb
loop
or
or
add
cltd
mov
sbb
lods
push
xchg
push
jl
cmp
pop
std
ljmp
sub
pushf
loopne
jnp
imul
cmp
adc
mov
pop
mov
and
cmp
jno
pop
lea
dec
lock
ret
push
inc
push
push
rclb
mov
jmp
or
or
xlat
aaa
xchg
decb
xor
fs
js
or
add
and
or
js
or
ftst
adc
cltd
insb
add
mov
adc
or
sub
add
add
sahf
pushf
mov
push
jae
add
jb
movsb
sbb
xchg
lock
lret
lahf
jg
mov
add
test
sbb
add
inc
pop
outsl
pop
test
pop
or
sbb
cmp
or
js
and
pop
mov
out
jg
or
mov
pushf
lahf
dec
pop
sbb
and
mov
pop
enter
xchg
sub
cmp
push
into
jae
shrb
fbld
pop
scas
xor
jae
rcrb
add
push
fsubrs
or
fwait
lret
pop
cmpsb
push
jne
cmpsb
jmp
mov
jmp
in
fistpl
loopne
int
sti
xchg
and
mulb
popa
lea
popf
pop
iret
in
mov
inc
jg,pt
shl
insb
sbb
hlt
push
mov
cmp
lret
cltd
fstl
pop
pusha
jg
pop
adc
jg
or
aad
lods
sbb
in
test
mov
jl
cwtl
inc
cli
jae
sbb
ljmp
sbb
lret
or
jno
mov
add
adc
or
push
aas
cmp
mov
icebp
shr
xor
pop
xor
xor
sbb
clc
decl
test
cs
mov
pusha
int3
pop
or
in
inc
ds
pop
jecxz
fcomip
mov
or
xor
sbb
insl
fsubr
mov
out
lods
repnz
in
dec
xchg
adc
vfnmsub231ss
not
inc
test
adc
pop
out
mov
jnp
std
pop
ret
mov
inc
lcall
mov
insb
mov
pop
in
mov
mov
data16
mov
cltd
test
jge
leave
inc
mov
mov
lods
xor
fs
je,pt
clc
out
dec
pop
pushf
rolb
cmp
cltd
rclb
out
aas
addb
pop
enter
addl
cmpsb
jae
cmp
int3
dec
stos
mov
mov
xchg
sahf
cltd
cmp
push
and
mov
lds
and
inc
enter
adcl
mov
fprem1
add
adc
mov
mov
jecxz
inc
fldt
cmp
mov
clc
jnp
enter
fwait
out
repnz
jae
shll
pop
test
lds
xor
out
or
subl
sbb
lods
leave
add
mov
push
and
cwtl
cmp
xor
jns
add
cmp
add
cmpsl
test
sub
pop
outsl
cmp
outsb
sarl
loope
out
cld
adc
ss
icebp
mulb
mov
subl
out
ja
sub
testl
scas
pop
out
jns
idivl
jle
repnz
int3
cmp
mov
and
test
ret
jae
push
mov
popf
jno
push
pop
add
divl
movsl
cmp
iret
dec
stc
pushl
or
lret
mov
rcl
jl
lds
nop
jns
and
pop
orb
mov
cmpb
mov
out
in
mov
jecxz
divb
pushw
cld
pop
es
je
xor
data16
fiaddl
add
mov
mov
movsl
xor
xor
cmc
test
fucompp
mov
in
mov
outsb
shrl
and
in
xchg
or
dec
xchg
int
test
push
sbb
movsl
repz
orl
enter
sti
fcomps
jo
jmp
dec
mov
cli
push
jns
push
scas
xor
ret
scas
inc
jmp
mov
mov
mov
mul
mull
xor
mov
sub
jo
dec
faddl
das
or
fdiv
mov
xor
outsb
mov
ljmp
push
jge
add
cmp
shlb
sub
mov
mov
out
xlat
push
enter
mov
jae
scas
xchg
dec
jnp
mov
add
loop
sub
dec
add
stc
repz
mov
jge
out
pop
sbb
sub
mov
and
scas
nop
add
gs
shl
pusha
push
mov
popf
or
leave
mov
into
dec
dec
push
int3
cltd
aaa
adc
xor
scas
insb
mov
dec
or
out
push
fsubs
pop
push
mov
aad
jle
ret
out
arpl
sbb
jae
pop
and
loope
jle
and
das
sub
cmp
push
sub
in
js
xor
jg
mov
or
add
xchg
inc
lcall
outsb
or
iret
xchg
cmp
sbb
sbb
gs
aas
xchg
mov
or
jae
or
or
out
or
lock
repz
pop
push
das
xchg
fisubrl
xlat
mov
scas
outsl
setl
cs
pusha
popa
ret
mov
inc
pop
push
scas
popa
sub
fucomp
inc
repnz
inc
inc
test
fwait
push
inc
xor
lret
push
cmp
dec
arpl
clc
push
sarb
mov
and
lds
jecxz
jne
out
jne
mov
adc
and
je
xor
popf
cmp
orl
imul
jo
push
in
lahf
push
add
mov
jcxz
push
subl
mov
and
push
lods
lods
and
adc
cli
mov
fdivr
sti
rcl
pusha
orb
push
orl
inc
inc
dec
jmp
mov
lret
cmpsb
adc
inc
pushf
inc
mov
and
xor
xor
shll
movd
mov
or
fdivl
notl
pop
aad
dec
int
popf
pop
addr16
addr16
xchg
jecxz
adc
xchg
fisttpll
mov
dec
lea
std
adc
jno
loope
and
in
inc
add
cld
pop
mov
fs
out
out
xchg
imul
lret
inc
inc
jbe
jecxz
xor
das
es
je
mov
jo
xchg
xchg
lock
bound
shr
data16
ret
jg
xchg
dec
cmp
cmp
push
stc
frstor
sub
dec
ret
jno
int
lds
sbb
push
lds
xchg
mov
xchg
or
rclb
cmp
inc
lcall
aam
jns
iret
scas
cmc
rorb
inc
xchg
pop
jno
push
bound
sub
inc
int3
mov
jl
imul
xchg
cmp
mov
nop
dec
adc
pop
push
lock
ljmp
jge
fs
das
rorb
push
jbe
lock
pop
imul
mov
push
pop
xor
mov
pop
loop
and
dec
push
in
notw
pop
popa
mov
test
dec
nop
jmp
cmp
call
cli
or
xchg
icebp
aad
iret
loope
jb
jae
push
enter
je
jnp
jbe
pop
xchg
add
out
push
test
incb
repz
rorl
push
mov
ret
jns
jle
and
test
test
out
jle
jb
inc
push
add
lret
jecxz
or
xor
rol
pop
out
fisubrs
or
inc
pop
or
pop
lock
outsb
push
inc
and
cltd
jno
cwtl
incl
lock
cmp
cli
jp
ret
jmp
nop
and
fdivs
dec
ret
cmp
xor
inc
rolb
jge,pn
enter
popf
and
xor
mov
mov
jecxz
js
dec
xorb
lahf
xor
test
jg
iret
cwtl
jl
lock
iret
inc
sub
cmc
mov
jl
pop
adc
out
xor
and
out
lcall
stos
out
cld
mov
adc
lods
cmpsl
jle
mov
dec
stos
loopne
popa
cmpsb
call
or
add
mov
and
xchg
mov
push
jle
jb
pop
stos
or
push
repz
or
inc
cmpsb
aam
push
cmc
jo
pop
adc
jb
jbe
fistpl
in
push
out
pop
ds
ret
inc
loope
stc
push
enter
popf
call
cld
xor
dec
fs
dec
lahf
mov
pushf
or
shlb
outsb
inc
sahf
xchg
xor
mov
hlt
xor
mov
test
iret
xor
sbb
and
and
xchg
mov
fidivrs
sub
lahf
cmp
inc
adc
xchg
dec
inc
sbb
dec
xlat
jns
cmp
lret
xor
xor
mov
dec
repnz
pop
push
mov
xor
xor
mov
ljmp
inc
lods
and
addr16
flds
adc
rol
inc
mov
dec
inc
mov
int3
jbe
pop
into
ret
andb
jne
mov
cld
jae
cs
xchg
cmp
push
xchg
sti
xchg
ljmp
add
fisubs
mov
std
roll
das
cmp
loop
aam
lcall
adc
int
add
mov
test
filds
push
jmp
xor
sarl
in
push
add
or
pop
in
or
sbbw
mov
cmpsl
push
popf
imul
lods
pop
push
add
fistl
je
pop
in
cld
stos
adc
nop
and
cmp
sbb
inc
fucom
das
dec
pop
ss
push
sarb
sub
in
arpl
inc
mov
jne
add
call
dec
xor
mov
and
roll
and
jp
add
mov
int
add
pop
sub
push
mov
or
imul
sub
les
and
lds
push
les
lock
jmp
loop
bnd
cmc
cmp
push
shl
sbb
roll
push
xchg
cs
pop
in
pop
lods
adc
clc
jne
arpl
cmp
push
jmp
pop
jae
iret
xchg
mov
push
rclb
lret
mov
movsl
nop
insl
mov
popa
call
pop
popf
insl
sub
int
xchg
popf
out
dec
jnp
lds
add
adc
adc
in
sti
nop
sub
mov
sub
icebp
and
or
mov
sbb
arpl
mov
lods
mov
int3
lea
jmp
rcrl
xorl
iret
sub
mov
ljmp
add
mov
xchg
cmpsb
add
test
sub
ret
inc
insb
pop
lret
push
sbb
rorl
loopne
sub
scas
add
adc
xor
pop
inc
fcomps
xchg
inc
in
inc
pop
pop
mov
cli
fisubrs
divl
mov
push
mov
cld
lea
test
adc
or
mov
out
or
dec
xchg
push
push
xchg
dec
jae
ds
xchg
cmp
jnp
ret
push
push
movsl
lcall
pop
jnp
gs
cmovbe
lahf
or
lds
inc
add
jb
lret
fwait
xor
call
test
stos
sub
clc
sbb
repz
pop
pushl
int
in
mov
std
cmp
addr16
leave
mov
ss
adc
cld
or
push
dec
subb
ljmp
loopne
xor
ds
pop
ret
xor
jge
out
xchg
das
nop
subl
dec
pushf
lds
loope
add
push
adc
xor
lea
mov
xchg
cmpsl
out
sbb
aam
push
jbe
cld
or
mov
pop
outsb
sbb
and
ja,pn
add
aas
inc
push
mov
xor
dec
hlt
mov
iret
mov
enter
cmp
es
inc
cmp
sub
xchg
add
cmp
cmp
fs
pop
fs
in
les
sbb
lahf
inc
mov
or
and
std
adc
xor
ret
mov
scas
sub
push
add
jbe
xor
push
mov
xchg
dec
andb
mov
scas
mov
fcoml
daa
and
je
aas
insb
cld
adc
sub
jns
cs
jp
pop
and
clc
cli
sbb
subl
fisttpll
insb
pop
arpl
repnz
or
fildll
aad
push
lret
in
mov
mov
jmp
aaa
mov
sarb
shll
jp
test
ficompl
fldenv
adc
mov
adc
adc
pop
and
lea
fisttps
mov
lds
out
cli
and
xorl
enter
out
push
lcall
push
xor
gs
ljmp
scas
test
out
sub
loop
pop
out
cmpsb
fwait
je
add
imul
rcrb
dec
leave
lea
cltd
cmpsb
sarl
das
pop
roll
stos
fsubrl
rcl
pop
mov
adc
dec
jno
xchg
lods
cs
sub
pop
mov
mov
addr16
mov
jb
or
mov
mov
in
or
mov
lds
push
dec
xchg
mov
adc
pop
xor
sahf
push
stc
mov
loopne
int3
and
mov
xchg
rolb
jne
pop
fcmovu
popa
jae
adc
insb
mov
sahf
jg
mov
mov
inc
mov
jmp
mov
stc
out
daa
mov
jmp
es
dec
into
dec
xchg
push
in
mov
cwtl
imul
shll
sub
or
into
inc
mov
popf
add
or
cltd
mov
rclb
test
jecxz
push
mov
cli
lds
sbb
aaa
lcall
fsubl
imul
push
sbb
fstl
jne
lret
jg
out
loopne
daa
add
push
test
adc
push
jmp
in
cmpsl
pop
stc
ja
ficoml
cmp
pop
popa
int3
pop
mov
xchg
mov
int
imul
mov
sbb
ret
pop
outsl
xor
mov
xor
mov
jmp
pop
sbb
insl
fldl
cmpsl
and
mov
icebp
lret
lea
inc
and
pop
push
sti
or
dec
mov
cmp
pop
lret
jae
cmpsb
sub
mov
daa
pushl
push
in
cmp
js
scas
in
into
mov
cmp
outsb
lret
test
mov
mov
or
std
adc
adc
cmp
sub
sub
aaa
aas
lds
aaa
mov
xchg
test
xchg
lcall
adc
aad
mov
lods
jmp
jg
sbb
mov
add
pop
and
sbb
into
bound
nop
xor
dec
jp
aad
push
fcompl
jo
js
adc
pop
adc
fcoms
movsb
dec
ficompl
shlb
mov
mov
leave
xorl
mov
daa
sbb
les
xor
inc
stos
into
je
push
out
pop
add
and
inc
call
sub
adc
cmp
push
daa
or
gs
jne
xor
mov
push
xor
mov
gs
sub
int3
in
pusha
loop
push
dec
or
in
sub
sbb
cwtl
mov
pop
mov
outsl
stc
loopne
or
push
push
pop
cmp
fiadds
cld
jae
and
and
pop
cs
sbb
stc
in
push
notb
cwtl
mov
mov
dec
cmp
cmpsb
sub
mov
addr16
dec
scas
movsl
dec
lds
pusha
and
lret
lahf
jo
repz
dec
mov
pop
jge
inc
add
sbb
xor
dec
inc
mov
fcompl
xor
dec
mov
fwait
cltd
fcoml
subb
xchg
jg
mov
fnstenv
lods
mov
cmpsl
or
movsb
xchg
mov
cpuid
pusha
hlt
je
mov
sbb
test
mov
jae
push
or
out
pop
cmc
jmp
or
dec
push
shl
les
mov
and
out
scas
mov
xchg
fiadds
mov
mov
ds
pop
stos
add
xor
and
rorl
jmp
je
lods
jno
and
push
outsl
sub
int
dec
popa
jecxz
sub
mov
xor
cltd
es
xor
push
vmwrite
lcall
out
jne
push
scas
clc
adc
fcompl
sub
or
push
das
sti
lods
add
push
sbb
add
test
xchg
adc
inc
push
lcall
jecxz
dec
cmpsb
int
ret
jp
hlt
or
out
int3
pop
loopne
sbb
ficompl
push
mov
mov
pushl
add
pop
js
push
shrl
dec
fs
mov
sbb
in
js
push
xor
loopne
fs
push
test
mov
sbb
jl
xchg
test
stos
and
jmp
or
ja
divb
push
mov
lods
lcall
nop
jp
iret
addr16
xchg
pop
add
xchg
stos
rorb
jne
xchg
cmp
mov
push
fildll
xchg
test
push
loop
jns
sub
or
lahf
ja
je
std
jns
mov
mov
add
fistps
xor
add
xor
xor
mov
aas
aas
fwait
test
sub
adc
add
dec
add
mov
xchg
ret
push
jmp
push
add
sbb
into
mov
shll
pop
mov
dec
push
mov
fidivs
xor
lcall
and
out
inc
push
es
xchg
mov
arpl
mov
jae
push
push
andb
aad
jne
adc
inc
cli
cmp
imul
mov
shrb
push
add
xchg
inc
jl
inc
xchg
jae
sub
lcall
lret
sbb
pop
movsb
jo
in
inc
xor
cmp
std
fldl
xchg
add
mov
or
mov
adcl
push
dec
imul
cltd
ljmp
adc
adc
sbb
pop
fdivl
xchg
cs
aas
xchg
jge
mov
xchg
stos
movl
inc
loope
lret
jge
jp
scas
or
subb
sub
cmc
outsl
jo
add
call
stos
out
add
out
mov
or
add
mov
shrl
popf
fidivrl
ret
rcl
out
and
in
aam
pop
sbb
subb
cmp
test
daa
negl
push
repnz
movsb
ljmp
xchg
push
push
xchg
xlat
test
jmp
cmp
jl
pusha
subl
mov
fimuls
out
adc
sbb
adc
dec
cmc
lret
push
cmpsl
enter
and
add
dec
sub
fstpt
loope
cltd
dec
push
add
inc
mov
mov
and
dec
mov
mov
ret
adc
dec
push
fstps
ss
pushf
sub
mov
inc
or
je
push
mov
jns
adc
cmp
lahf
mov
lods
dec
sbb
fwait
pop
jne
jns
push
lods
mov
lds
shl
popf
push
jo
pop
mov
push
in
ljmp
xor
sarl
jg
and
push
mov
xchg
push
adc
dec
iret
pop
fiaddl
push
aaa
lea
xchg
ret
adc
pop
add
adc
pop
subb
pop
mov
movsl
test
testb
pop
ret
xchg
mov
jnp
loop
sub
mov
mov
fisttps
icebp
pop
inc
jno,pt
mov
xchg
jne
jg
aas
outsl
mov
mov
call
cmp
xchg
push
cmpsb
xchg
xlat
push
sub
and
or
add
mov
cmp
shrl
push
ror
mov
or
jns
push
xchg
ret
push
out
mov
out
push
bound
pop
xchg
lock
loope
sti
or
notb
rcrl
call
cmp
or
mov
mov
pop
pushf
sbb
pop
test
xor
aam
bound
js
push
xchg
cmp
jp
aaa
and
add
inc
jle
jg
daa
sub
mulb
adc
inc
stos
subb
test
stos
jmp
lcall
aam
bound
push
xchg
push
rcrb
test
push
jns
test
sub
jecxz
notb
adc
xchg
mov
jge
mov
sbb
mov
lds
popa
pop
dec
inc
mov
popf
or
rcrl
mov
icebp
xor
mov
cmp
out
mov
dec
xor
es
inc
jmp
dec
xor
xor
or
or
scas
decl
aam
lods
inc
and
adc
sub
push
int
cmpsb
jp,pn
push
mov
xchg
mov
out
cmp
pop
movsl
dec
xor
xor
push
into
lret
stos
loopne
fbld
sub
cmc
mov
in
mov
add
in
ret
subl
cwtl
rolb
and
lret
adc
add
jp
lea
shrl
xor
and
or
sbb
je
xor
and
mov
loope
test
fnsave
adc
push
arpl
mov
into
add
pusha
jmp
add
lret
outsl
popf
add
fsubs
scas
sub
pop
outsl
pusha
pushf
fbstp
adc
jmp
lahf
or
dec
sbb
subb
pushl
leave
imul
and
pop
cltd
icebp
mov
jns
jl
fsubrl
out
fnsave
lea
sub
jmp
std
insb
jb
push
es
jle
xor
mov
in
xor
addr16
insb
dec
jb
fsubrs
das
mov
mov
jo
mov
addr16
jp
jmp
shll
xchg
movsb
xchg
dec
shlb
push
mov
cmc
or
lds
sub
push
jmp
fs
cwtl
je
xor
hlt
add
mov
pop
lds
pop
data16
mul
mov
push
xchg
pop
mov
and
inc
adc
fdivr
call
pop
icebp
xchg
mov
or
pop
mov
lret
push
pop
xor
jb
xor
pop
fwait
cmp
jnp
mov
or
fdivl
mov
sub
adc
jmp
mov
pop
cmp
pop
nop
outsb
aam
or
xchg
xchg
mov
xor
or
fsubp
mov
loopne
cmp
ljmp
out
mov
pop
mov
aam
les
or
jmp
and
div
aam
orb
add
sbb
lcall
cwtl
in
xchg
lods
popl
cltd
frstor
pop
daa
or
and
adc
add
jo
cli
lock
out
in
mov
sub
dec
icebp
mov
mov
add
insl
aaa
pop
lcall
rclb
xchg
mov
sub
rclb
sbb
das
inc
dec
pop
inc
inc
mov
inc
scas
bnd
and
sti
xor
or
cmp
cli
inc
pop
cltd
icebp
cmp
je
mov
popa
test
js
lcall
sbb
mov
out
ficomps
outsl
adc
adc
popa
in
adc
pop
nop
cmp
jg
sub
jge
lcall
sbb
pop
js
jg
xchg
push
stc
pop
mov
div
jmp
in
stos
push
and
lcall
mov
cmp
sbb
movsb
in
dec
jb
mov
js
cltd
cmpsb
xor
cmp
mov
ss
or
xor
out
fcmovnb
in
sbb
stos
inc
mov
mulps
cmp
negl
popf
shl
pop
lcall
lret
daa
scas
dec
or
jmp
adc
jno
pop
xlat
mov
scas
and
push
js
push
lea
sbb
pop
sbb
and
mov
in
ret
enter
xchg
dec
pushf
jg
cmp
imul
adc
sti
fcmove
dec
in
dec
jg
sub
adc
inc
int3
and
pushf
out
jle
xor
test
movsl
ficomps
fisubrs
xchg
mov
mov
mov
adc
and
dec
loop
sbb
cli
xor
enter
je
sbb
shlb
rcrb
test
and
dec
mov
pop
push
popa
ds
scas
jbe
ret
sub
pop
scas
jne
jl
pop
add
and
and
dec
dec
pop
test
push
aad
loop
notl
in
lods
das
int
loopne
sahf
pusha
xchg
mov
and
je
push
data16
pushf
add
and
xchg
cltd
scas
xor
bound
fldt
lcall
cmp
je
pop
jb
pop
movsl
out
ss
repnz
pop
or
sbb
shl
out
rolb
movsb
ret
sub
fidivs
xchg
inc
in
inc
and
in
jns
inc
imul
das
adc
and
icebp
xor
cli
imul
mov
adc
pop
xor
aam
push
rclb
ds
rclb
xchg
jg
xchg
xchg
ja
clc
cmc
lods
ret
lahf
outsb
inc
cwtl
ficoms
mov
je
mov
clc
mov
inc
xchg
das
sub
stos
jge
inc
sub
dec
pop
les
adc
mov
fmuls
mov
mov
or
cli
mov
sub
jo
lods
test
sahf
repnz
lock
dec
cltd
cmp
xor
jae
mov
push
push
addr16
rcll
rcr
cmp
dec
and
xlat
jno
cs
pop
fidivs
or
xor
jb
insl
xlat
pop
in
jbe
push
je
mov
test
imul
mov
add
cwtl
mov
popf
push
ret
ja
cwtl
das
sahf
jnp
and
push
std
sub
sub
cmpsl
jecxz
shll
shlb
fbstp
lret
push
sub
test
push
mov
add
cltd
into
dec
arpl
inc
je
ficoml
rcll
dec
dec
dec
or
loope
imul
mov
in
jo
ja
stc
push
mov
ret
xchg
sub
mov
lret
arpl
insl
cmp
cltd
jne
out
jmp
pop
jne
mov
push
pushf
dec
in
jl
push
lss
add
xor
shlb
or
sbbb
gs
mov
xchg
sbb
cmc
leave
xor
add
add
xor
xor
xor
imul
inc
push
mov
mov
ds
dec
xchg
int3
add
inc
push
ja,pt
pusha
hlt
push
dec
movsl
mov
jecxz,pt
imul
les
fs
decl
cs
cmpsb
pop
cmp
xchg
pop
mov
mov
lods
subb
add
cmc
cmpsb
imul
int3
cmp
xchg
add
push
lea
lds
inc
add
push
mov
das
adc
out
push
mov
xchg
mov
inc
loope
sbb
enter
arpl
mov
mov
and
shll
mov
in
cmpsb
insl
lods
jecxz
repz
lods
mov
arpl
das
inc
pop
mull
xchg
in
inc
mov
pushf
jl
adc
jo
inc
add
or
aam
mov
sub
cmp
shll
inc
mov
add
nop
pop
das
sub
sbb
stos
std
and
ret
lahf
out
jb
cmp
repnz
stc
ja
data16
push
pop
test
xchg
and
loopne
rcr
cmp
adc
popf
jne
xor
pushf
cmp
and
into
popa
jnp
popa
mov
pop
lock
push
imul
xchg
aam
push
fistps
mov
add
sub
call
push
jge
xlat
aaa
loopne
js
xchg
adcl
lret
cmp
sbb
push
adc
fstl
nop
out
daa
or
insl
pop
fwait
mov
dec
dec
cltd
into
repnz
or
fisubs
push
mov
fistps
call
mov
push
stc
out
popa
push
ljmp
inc
mov
push
mov
mov
dec
test
call
shl
push
adc
movsl
insl
jae
add
jnp
sbb
or
adc
outsb
xor
sbb
test
ss
sub
sub
inc
fcoml
ja
outsl
adc
sbb
inc
fcoms
and
xchg
sbb
ret
or
shlb
inc
ret
outsb
sbb
jle
cld
cmpsl
out
test
mov
and
in
fwait
lods
fcmovnu
roll
cmp
or
jmp
cmp
sbb
lods
cmc
pop
pop
stos
jo
insl
js
xor
jmp
nop
sahf
push
inc
adc
mov
addl
into
add
sti
push
cmp
add
call
imul
fnsave
inc
xor
cmp
mov
test
push
pop
push
les
sbb
push
leave
pusha
insb
sti
push
jmp
inc
ret
xor
jge
loop
scas
in
int
xlat
add
sub
adc
dec
enter
fstpt
add
fsubrs
out
push
push
sub
jg
movsb
ljmp
popa
dec
ds
std
cltd
xchg
hlt
fwait
in
adc
adc
mov
inc
test
xlat
jo
es
mov
inc
dec
pop
js
popf
movsb
repnz
in
mov
sub
shrl
addb
push
add
test
lahf
cmpsb
xchg
inc
cmp
inc
inc
and
mov
add
xor
jno
push
xchg
inc
sub
dec
fwait
push
pop
xor
aad
cltd
cmpsb
add
xor
jno
dec
dec
std
loopne
adcb
insl
inc
mov
pushf
dec
popf
dec
sbbb
bound
fldl
cltd
fnstsw
mov
sbb
fs
mov
jno
mov
cs
dec
xor
in
adc
aam
stos
and
iret
outsl
dec
inc
ret
adc
shl
clc
ja
js
repnz
jb
sbb
pushf
pop
jl
pop
iret
push
pop
push
loopne
aas
loope
iret
es
enter
mov
adc
mov
jns
pop
cmp
adcl
test
je
mov
pop
repnz
add
or
shl
jne
sbb
mov
std
in
dec
das
outsb
mov
sub
addr16
mov
xchg
pop
pop
or
loopne
sbb
loope
xchg
or
jno
or
rolb
mov
loop
inc
xchg
xchg
stos
lret
mov
cltd
imul
sub
jae
sub
pop
iret
jbe
jae
mov
push
mov
in
and
idivb
lods
fidivs
xchg
shl
and
or
popf
xlat
lods
popa
popa
inc
stos
fsubs
cmp
loope
aam
adc
xor
cwtl
call
sti
add
fcmove
dec
adc
idiv
lods
sub
outsb
fstp
xchg
test
ljmp
sahf
inc
or
nop
ret
lods
pop
fstl
xor
std
and
es
addr16
push
pop
jne
push
sbb
loope
es
push
fwait
mov
xchg
xchg
and
and
fdivrs
add
xlat
add
xlat
jb
adc
fnstenv
insl
insb
popf
xor
xor
mov
les
rcr
inc
xchg
sub
fsub
jmp
push
mov
out
push
mov
sub
cmp
sbb
mov
es
jnp
or
mov
mov
adc
inc
xabort
je
sbb
inc
es
call
arpl
insb
xlat
test
inc
push
mov
loop
arpl
push
cmp
or
push
dec
div
inc
je
or
xor
fs
adc
and
cmp
ds
pop
cmpsb
xchg
in
sub
mov
pop
int3
jecxz
jnp
push
cmp
loope
push
pop
mov
pop
push
adc
repnz
sub
loope
mov
roll
push
addr16
dec
test
mov
xor
mov
dec
repnz
loopne
dec
dec
fisttpl
mov
leave
xchg
sub
push
xchg
fstpl
lcall
sub
or
out
or
adc
sahf
add
pextrw
add
jnp
pop
ficompl
aas
loop
jo
scas
shll
jb,pt
cmc
xchg
xchg
cli
mov
ljmp
add
cmp
cmp
jmp
cmp
scas
mov
mulb
test
das
stc
push
fnstcw
pop
call
lea
cmpsb
out
les
lret
pop
xlat
lret
ds
and
rorl
xchg
or
mov
and
jge
pop
je
mov
cltd
push
pusha
add
pusha
push
addr16
outsl
sahf
xchg
fstpt
xor
aas
stos
mov
cmpb
dec
mov
ret
fcmovb
test
jl
push
pop
fcmovu
lahf
mov
push
mov
rcr
mov
out
jb
jb
push
mov
aam
lods
out
pop
in
leave
fdivrp
sub
push
in
stos
ljmp
iret
cli
add
dec
push
mov
shrb
push
mov
cmpl
icebp
pop
cmp
lret
adc
movsl
dec
les
stos
lods
sub
dec
push
xlat
jb
xchg
call
xchg
adcl
js
popf
mov
je
fnstsw
loope
imul
rorl
inc
cmpsb
adc
mov
lret
sti
rcrl
pop
xchg
repnz
inc
fwait
jg
sahf
dec
inc
cmp
shll
inc
and
sbb
out
mov
js
lock
mov
rorl
stc
push
or
pop
stos
fcoms
pop
iret
mov
pop
arpl
inc
int3
bound
jp
jl
stc
test
icebp
iret
sbb
pop
pushf
fiaddl
testb
in
sbb
dec
lret
movsl
fcmovb
dec
aas
scas
mov
clc
into
mov
push
neg
dec
jb
test
xchg
imul
cmp
je
aad
mov
push
mov
pop
pop
sbb
in
cwtl
test
dec
stos
lahf
xor
and
jp
adc
dec
xchg
loopne
or
jbe
stc
cmp
imul
and
pop
outsb
add
pop
les
lcall
jmp
cmpb
add
les
inc
les
aad
sub
out
cmp
push
jle
data16
cmp
push
xor
lods
xchg
jp
or
sub
inc
test
popf
fldl
bsf
push
jp
dec
mov
fwait
enter
xor
push
stc
fisttpl
popa
inc
sub
xor
fsubrl
jecxz
arpl
int
xchg
stos
xor
push
inc
lcall
cmp
sub
aad
lahf
cli
daa
insl
push
jp
xor
test
mov
lahf
sbb
push
mov
push
push
push
xchg
and
push
and
xchg
and
sub
adcl
nop
rorl
ljmp
addr16
mov
orb
and
inc
popf
xor
or
outsb
aam
fs
aad
jge
inc
jp
or
xor
mov
mov
jmp
sahf
xchg
rcr
push
cmpsl
jne
enter
out
or
loope
rolb
leave
int3
sti
xchg
xchg
repnz
dec
repnz
xchg
add
jecxz
push
mull
mov
ror
cltd
mov
lret
in
jecxz
adc
add
je
push
jle
gs
outsb
add
fwait
out
inc
pusha
pop
call
sahf
inc
cmp
mov
mov
xchg
mov
cmp
nop
sub
inc
add
jmp
mov
repz
inc
dec
mov
and
sti
push
hlt
add
pop
mov
popw
sahf
ss
xchg
test
shlb
cmpsb
addr16
mov
jo
push
cmpsb
jmp
add
jae
or
mov
std
mov
test
lcall
xchg
out
xchg
jnp
xchg
fadds
sub
out
xor
lds
nop
mov
aam
mov
mov
cmova
or
mov
inc
jle
or
push
cmp
sbb
xchg
test
cmp
inc
sarb
inc
nop
movsl
adc
xchg
orb
xchg
mov
call
testb
sub
mov
int
and
pop
call
in
jge
cmpsb
mov
dec
dec
push
ficoml
mov
cmp
push
mov
xor
sbbb
mov
adc
add
mov
jmp
dec
ja
jnp
mov
addl
xor
aaa
mov
inc
outsl
daa
or
adc
lea
in
cli
bound
dec
fdivrl
jl
inc
or
out
pop
push
aam
shlb
add
mov
loope
push
add
jnp
and
ret
popf
mov
inc
xor
rorl
out
adc
xchg
insb
add
rcrl
cmp
push
fnstsw
xor
shlb
cmp
bnd
xchg
pop
subl
or
pop
mov
shll
mov
cwtl
dec
lahf
sub
lahf
adc
ja
aad
call
jl
dec
rorb
mov
popf
loopne
lods
push
idiv
or
mov
xor
jl
cmp
lahf
mov
ret
shll
lret
add
dec
and
call
scas
cmc
mov
sti
mov
xlat
push
aas
mov
cmp
jb
mov
dec
xor
or
jo
jp
popa
mov
or
fadds
lock
icebp
jbe
call
mov
gs
mov
pop
shrl
rorl
jns
mov
inc
xor
fs
lods
out
insb
pop
ret
out
xor
ja
inc
movsb
fdivrl
jle
jmp
pusha
imul
pop
shr
icebp
mov
xchg
pop
iret
call
imul
add
lock
sbb
push
and
cmc
jae
mov
movsb
sub
mov
dec
hlt
lods
push
ds
dec
mov
or
pop
mov
xor
stc
les
inc
xchg
aaa
jg
icebp
sub
inc
aad
aam
aad
lds
xchg
inc
adc
test
ret
scas
hlt
sub
enter
or
sbb
mov
clc
aaa
adc
adcl
stos
cld
jns
mov
push
fnsave
bound
into
lret
loope
push
jae
mov
sbb
sbb
jg
xchg
adc
mov
push
adc
fimuls
cwtl
fidivrl
xchg
test
and
adc
dec
cs
jmp
je
lds
imul
fmull
test
xor
notl
mov
inc
outsl
out
lcall
sti
sub
sarb
mov
int3
push
inc
mov
icebp
sub
in
inc
mov
js
xor
cmpsb
dec
pusha
dec
popa
je
add
rclb
shl
inc
ljmp
inc
inc
and
mov
iret
test
sti
lret
cmc
outsb
mov
cltd
scas
pusha
lock
test
sarl
pop
repz
push
rcll
gs
insl
adc
add
outsb
les
inc
mov
pusha
mov
add
push
clc
jno
jl
dec
or
int
push
or
xor
xchg
dec
cmp
and
xchg
mov
lods
xor
dec
dec
into
cmp
test
mov
jle
movsl
sbb
sub
adc
push
push
dec
iret
ret
push
mull
adc
cld
ja
neg
popa
loope
mov
push
movsl
popa
mov
lret
fcom
pushf
ret
mov
cmp
or
jmp
inc
popf
repz
lods
cmp
nop
nop
inc
jl
aad
in
lahf
testb
sub
leave
ror
xchg
xlat
dec
shll
repz
aaa
bnd
insb
mov
jno
pop
lea
insl
sbb
imul
mov
outsb
mov
push
mov
inc
sbb
xor
mov
les
jl
insl
mov
ret
or
or
jo
cmp
loopne
popf
test
sub
push
pop
es
aas
repz
and
insb
in
mov
aad
iret
mov
adc
cmp
int
sub
fistl
ret
mov
cmp
push
test
push
fiaddl
add
push
pop
jle
dec
nop
mov
mov
stc
les
xchg
add
xchg
aas
mov
lods
xchg
call
scas
in
shlb
shll
loopne
js
shrl
dec
cltd
leave
jns
or
ljmp
test
insl
test
mov
sub
xlat
sbb
mov
loope
test
xor
lahf
dec
rolb
mov
jmp
adc
test
mov
sub
mov
mov
mov
aam
jg
cwtl
daa
jl
mov
mov
inc
mov
lcall
cwtl
push
outsb
imul
push
in
sarb
mov
sbb
test
mov
imul
in
and
pop
sarb
jnp
mov
lock
push
aas
mov
jne
adc
adc
out
or
bound
and
js
enter
mov
ret
popa
push
xor
dec
adc
addl
dec
lods
iret
sahf
xlat
out
cs
sbb
ret
fdivp
xchg
test
or
push
cltd
adc
xor
cld
sub
hlt
mov
xchg
mov
xchg
xor
sbb
xchg
das
faddp
and
xor
outsl
push
cmp
jle
ds
leave
push
idivl
add
xor
mov
lods
decb
mov
xchg
aas
add
xchg
sbb
xchg
adc
out
add
xor
add
outsl
std
pop
out
pop
movsl
or
xor
iret
mov
xor
repz
mov
popf
aaa
daa
push
dec
mov
rcl
insb
daa
fs
push
loopne
repnz
inc
imul
sub
test
pop
xchg
pop
in
out
xchg
andb
cmp
int3
mov
sti
jle
inc
popa
sti
clc
push
xchg
pop
ja
xchg
sahf
jns
loop
roll
jns
pop
repz
xchg
pop
ret
lods
xchg
pop
jecxz
ja
jl
outsl
add
jne
cmp
push
out
mov
movsb
test
scas
mov
in
popf
ds
cmp
lret
xor
pusha
fisubrs
adc
movsl
inc
int
mov
pop
pop
mov
mov
repnz
or
clc
cmp
repnz
loope
mov
shrl
add
inc
pop
sub
pop
lods
push
mov
pushf
xchg
dec
cmp
jge
leave
add
mov
popa
xchg
dec
mov
jae
clc
pop
bound
lea
mov
aam
cwtl
jge
and
push
mov
jl
xlat
mov
xchg
lods
sar
gs
lret
dec
xchg
xchg
outsl
jge
ret
or
mov
arpl
je
loop
and
jge
mov
sarb
and
sub
subl
or
jge
and
test
pop
cmp
insb
jno
sub
inc
sbb
push
push
pop
outsl
insb
dec
stos
push
and
jge
push
add
lret
in
cmp
dec
jb
sar
jecxz
data16
je
jb
jl
add
frndint
xor
mov
call
mov
gs
or
testb
pop
xor
sub
je
push
inc
inc
call
mov
cmp
push
sub
push
fcom
jmp
xorl
mov
loop
jge
cmp
xchg
pusha
insl
push
idivl
movsl
xchg
sub
test
lds
test
mov
enter
outsl
xlat
ret
cmp
mov
daa
jbe
lods
aas
les
jno
push
mov
push
adc
es
fisubrs
push
out
cmp
dec
push
xor
ret
pop
jae
sbb
xor
hlt
shrb
inc
nop
inc
or
mov
mov
cmp
fbld
gs
shrl
xor
bound
inc
add
sbb
mov
fmull
aaa
jb
sub
int
js
and
leave
push
fsubl
lds
js
sahf
adc
push
loope
sbbb
xchg
arpl
jmp
fmuls
add
adc
sub
je
js
mov
je
xor
loopne
in
jae
jno
push
fbstp
push
test
xchg
jg
ss
mov
jge
pop
dec
mov
fsubl
insb
push
pop
imul
fadds
sbb
mov
sarl
sub
push
push
xchg
lock
add
xor
pop
mov
xchg
outsl
jnp
mov
ret
cmp
enter
mov
notb
das
stos
leave
pushf
mov
push
fnstenv
sarb
dec
lcall
push
cmp
dec
pop
and
loope
cmpsl
xor
sbb
xchg
pop
fldl
xchg
lds
shrb
pop
sbbl
push
and
mov
hlt
lods
mov
imul
fwait
imul
arpl
sub
xchg
int3
jmp
xchg
movsb
pminsw
icebp
aas
or
roll
add
fdivr
pop
jb
push
add
mov
inc
cmpsb
cs
mov
jmp
popf
pop
arpl
ret
loope
pop
and
outsb
mov
cld
sbb
push
dec
cmp
scas
stc
xchg
xchg
mov
sbb
in
lds
orb
pop
dec
divl
inc
sbb
mov
cld
in
sub
imul
add
addb
out
or
call
call
movsb
mov
adc
adcb
cmp
adc
push
das
cmc
or
add
mov
fcompl
cmc
rorb
jmp
pop
and
inc
pushf
xor
fwait
in
mov
push
add
leave
push
rcl
xchg
inc
je
mov
push
ja
or
lcall
xchg
nop
bound
push
xor
lock
fsubrp
push
data16
cltd
or
push
outsl
imul
push
ret
push
xlat
daa
jne
sub
pop
das
or
shl
icebp
xlat
sbbl
add
xor
pop
lods
sbb
rolb
and
push
dec
das
ljmp
push
jmp
imul
fistps
lret
cmp
add
ljmp
xor
xor
pop
mov
push
pop
jnp
outsb
push
sub
pop
fildl
jle
add
xchg
jge
cmpb
mov
mov
jg
mov
aaa
xchg
dec
jne
test
int3
dec
add
sbb
rcrb
mov
push
in
add
mov
aaa
mov
sahf
push
imul
pop
sub
adc
insl
loope
pop
in
arpl
adc
mov
lock
jo
push
cmpl
mov
pop
rolb
stos
pop
dec
xchg
leave
mov
push
scas
iret
ljmp
popf
pop
mov
repnz
outsb
rcl
and
cs
fnstenv
and
lds
dec
adc
call
insb
arpl
testb
pushf
pop
xor
mov
xchg
js
dec
jo
andl
push
incl
out
push
movsb
ss
and
jb
out
test
push
jne
pop
jecxz
cmp
and
cmc
pop
jecxz
hlt
dec
and
pushf
in
mov
shrb
mov
mov
loop
jle
dec
xor
loope
int
xlat
xchg
shrl
cwtl
call
fcompp
mov
cltd
sahf
add
cmp
mov
and
inc
lods
cmp
push
loop
add
pop
mov
sub
push
lock
pop
inc
and
test
in
pop
jle
nop
and
adc
mov
clc
inc
mov
push
push
stos
or
and
mov
fcmovne
ds
lock
into
xor
sub
add
or
mov
xor
imul
cmp
data16
adcb
adc
adc
sub
inc
sahf
fcoml
adc
ljmp
and
mov
or
call
xor
fwait
adc
pop
leave
dec
mov
mov
pop
in
aaa
sarl
jne
adc
push
xchg
adcl
dec
popa
aam
dec
insb
inc
fsubl
mov
jb
addr16
push
adc
int3
pop
popf
dec
push
stos
sub
stos
fs
call
xor
push
jmp
iret
fcoml
sbb
xor
dec
inc
dec
mov
dec
cmc
test
mov
push
fbld
sub
push
xor
cmp
cld
add
fidivl
mov
ret
mov
in
mov
mov
scas
and
push
stc
imul
test
cld
ds
lea
inc
jecxz
mov
cmp
loopne
notl
add
and
cmc
sarb
xchg
cmp
gs
enter
jge
in
push
push
jmp
subl
les
pop
leave
jo
xchg
dec
mov
stos
jno
xlat
mov
ret
sub
nop
adc
in
movsl
sub
mov
aaa
mov
jl
pop
mov
stc
fwait
xchg
push
pop
pop
mov
add
cmc
or
aaa
adc
lret
subl
sbb
sub
pop
xchg
xlat
push
gs
lret
mov
adc
addr16
fsub
jle
push
aad
pop
in
sbb
xchg
icebp
push
ret
addr16
insl
push
out
punpckhbw
pop
fwait
inc
sbb
xchg
out
imul
mov
jne
aad
mov
lods
dec
inc
aaa
mov
jnp
mov
adcl
roll
xor
inc
insb
mov
xorb
jp
inc
pop
mov
and
in
stos
jae
fldl
adc
and
int3
sbb
ds
jne,pt
jge
inc
xchg
mov
sar
xor
push
xchg
mov
ds
sbb
int
mov
lahf
sbb
jno
inc
push
xchg
fadds
aaa
aas
pop
stos
inc
arpl
fidivrl
inc
or
inc
pusha
in
cmp
mov
notl
sub
xchg
test
lret
shl
lds
adc
lret
imul
xchg
stos
fcoml
sbb
mov
movsb
dec
or
mov
enter
insl
clc
scas
movsl
mov
insl
mov
icebp
imul
out
test
mov
sub
mov
fistpll
in
test
cwtl
dec
sti
sbb
inc
jp
adc
sahf
inc
loop
mov
decl
xchg
subb
inc
iret
xchg
sbb
mov
rcrb
js
scas
imul
andb
int3
xor
in
lcall
pop
add
jp
mov
pop
lods
jge
pop
or
nop
adc
nop
bound
cmp
movsl
cltd
add
push
sbb
divl
aaa
loop
push
inc
shlb
inc
mov
xchg
scas
mull
into
test
cmp
mov
out
arpl
mov
xor
inc
pop
insb
inc
hlt
push
mov
mov
testl
popf
adc
fwait
std
leave
enter
jbe
hlt
mov
mov
dec
mov
sahf
xchg
or
cmpsl
das
mov
ja
adc
in
fnstenv
orl
adc
lret
xorl
ljmp
or
jns
imul
sub
imul
mov
sbb
lahf
sbb
int
xor
mov
adcl
rolb
into
xchg
out
sub
stc
ljmp
mov
dec
in
dec
dec
lock
aam
orl
sbb
mov
jmp
leave
pop
pop
mov
fs
cli
test
mov
adc
jb
xchg
aaa
mov
out
decl
mov
xchg
push
orl
addb
push
lret
pop
xor
fdivl
mov
cmp
rcrl
xchg
or
out
bound
stos
or
or
std
pushf
and
mov
push
loop
loope
cmpsl
jnp
jae
inc
jmp
mov
xor
jmp
mov
outsb
or
jno
mov
and
lea
lods
pop
mov
xor
fmull
mov
pop
ljmp
jmp
addr16
stos
shlb
popf
pop
fadd
pop
enter
xor
xchg
mov
call
mov
sbb
aam
mov
dec
test
bound
outsl
and
cmp
xchg
mov
inc
pop
hlt
into
andb
aad
cmpsl
sbb
jle
mov
xchg
gs
mov
jge
push
test
xor
ret
sar
andb
adc
lock
rclb
das
dec
inc
pop
jb
jmp
cmp
dec
jp
imull
push
mov
in
aam
dec
out
out
jo
mov
enter
jecxz
in
mov
mov
in
pop
add
mov
adc
mov
add
repnz
shll
xor
mov
into
jo
xlat
outsl
fistps
sbb
jnp
inc
inc
push
repz
pmulhuw
stc
out
dec
xor
imul
mov
add
in
adc
js
les
inc
xor
fwait
push
loope
xor
arpl
push
xchg
lcall
movsb
jno
lds
out
jo
push
testb
adc
loopne
mov
out
push
mov
push
fcoms
nop
out
rcr
jae
inc
mov
mov
fdivrs
sarb
dec
xor
stos
pop
call
test
add
push
pop
adc
popl
enter
xchg
jnp
sub
pop
and
add
dec
mov
jae
pop
jns,pn
aad
imul
stos
push
outsl
adc
in
cwtl
popf
addr16
xor
adc
test
jle
pop
cwtl
sbb
pusha
pop
clc
pop
xor
ljmp
icebp
mov
sbb
aas
jmp
movzwl
add
sub
lcall
push
fisubs
jge
cmp
rcrl
mov
lahf
scas
aam
in
js
push
push
sub
xchg
mov
jmp
aas
xor
adc
or
nop
sub
andb
jae
hlt
es
xchg
mov
sar
into
adc
out
ds
loop
rcrl
insb
or
push
sbb
or
sbb
xor
mov
add
cmp
sub
in
adc
in
fucomi
movsb
mov
mov
lods
inc
or
test
mov
jae
xor
stc
add
inc
pusha
rorl
enter
aad
stos
add
push
mov
mov
pop
pop
lods
pushf
mov
pop
or
mov
mov
and
and
dec
mov
lret
aad
inc
fcompl
push
mov
inc
shr
dec
jno
pushf
sub
mov
push
cli
rcrl
outsl
push
pop
cmc
cmp
push
scas
fists
xor
inc
fcmovnu
sbb
adc
aas
xchg
sbb
out
mov
jmp
dec
aas
jp
cmp
cmp
jle
pushl
leave
data16
stos
adcb
cmp
xor
add
mov
mov
int3
xchg
push
out
repz
loop
or
test
stos
clc
mov
add
push
inc
mov
iret
gs
cld
add
or
cmp
ret
into
lret
push
aad
out
aas
inc
jl
push
inc
push
push
pop
movsb
or
popf
mov
sub
xchg
ss
rorb
cmp
testb
xchg
cli
adc
ror
push
xchg
mov
std
or
mov
xor
divb
mov
add
xchg
imul
push
jae
mov
mov
sbb
jle
movsb
push
xor
imul
test
shl
pop
lcall
mov
mov
pop
repnz
mov
pop
jge
xchg
insb
lcall
mov
jne
xor
data16
dec
adc
das
into
movsl
cmp
push
enter
rorl
orl
cwtl
sub
and
xchg
movsb
or
insb
push
sbb
mov
shlb
orl
lods
movsb
cltd
sbb
jp
dec
cmp
xor
jl
mov
add
sbb
pusha
std
sbb
call
and
stc
and
sbb
sbb
mov
addr16
addl
pop
out
push
iret
xor
enter
add
push
out
xor
jecxz,pn
and
mov
push
mov
loop
add
xor
lret
sahf
mov
fists
xchg
lret
pusha
aas
mov
out
cmp
fs
jo
mov
inc
aam
mov
sbb
data16
sub
hlt
out
push
popa
out
aad
enter
fcoms
push
sbb
sbb
xor
push
clc
and
lods
pop
rcll
mov
mov
adc
jg
adc
rcrl
lea
cld
sub
push
loopne
xchg
push
iret
sti
xchg
jg
out
movsb
dec
roll
add
xor
jmp
add
dec
in
out
xchg
std
std
inc
dec
push
mov
outsb
les
push
test
dec
mov
jne
sub
push
insb
jb
loope
in
out
mov
in
imul
in
jnp
mov
gs
or
inc
not
mov
fidivs
inc
cwtl
pusha
icebp
sahf
lods
sbb
aad
xor
ja
test
add
jge
and
sbb
dec
mulb
adc
stc
xor
repz
je
inc
push
bound
dec
adc
adc
xor
lds
fwait
jbe
imul
mov
fdivl
loopne
aad
ljmp
sbb
mov
negl
pushl
xor
in
stos
in
mov
dec
dec
mov
pop
mov
adc
adc
jecxz
insb
xor
sahf
mov
stos
out
push
mov
xchg
outsb
mov
sbb
fwait
mull
out
push
je
and
jge
cwtl
shll
inc
inc
xchg
stos
inc
and
or
cs
push
mov
ja
movb
stos
popa
mov
pop
or
xchg
dec
push
leave
lods
mov
testb
mov
pop
mov
inc
mov
sbb
jns
jns
out
cld
jp
xchg
jge
cli
iret
push
pop
idivb
ret
les
imul
push
lret
mov
popf
jmp
pop
scas
cmp
popl
in
jnp
mov
cmp
jg
sub
push
fsubs
aam
jnp
aad
popf
out
sbb
nop
xchg
cld
inc
jmp
jecxz
cmc
and
pop
add
pop
xorb
xor
inc
push
mov
repz
sub
mov
and
hlt
sub
scas
inc
mov
xchg
jns
shrl
aad
test
pop
sbb
cmc
or
lock
mov
jnp
cmp
ljmp
enter
pop
in
push
xor
and
cmpsl
shrl
adc
popa
pop
fdivs
inc
in
movsb
mov
or
sub
lahf
out
shlb
movsb
adc
cmc
clc
adc
shll
mov
fwait
mov
into
dec
mov
or
ror
jle
lcall
add
cltd
aam
roll
data16
lock
stc
addr16
pop
out
das
xor
clc
xor
push
subl
add
mov
roll
jge
iret
movsl
xor
adc
mov
pop
shll
sbb
loop
nop
sbb
xor
sbb
mov
jae
jg
aad
test
jg
push
inc
mov
jo
cmp
ret
iret
nop
pop
lock
je
sar
cmpsb
aaa
les
push
roll
mov
mov
pop
cmp
or
bound
cmp
push
repz
push
and
inc
fadd
mov
mov
cli
mov
pushf
mov
jns
sbb
test
xor
jmp
stc
js
fadds
pop
imul
xor
stos
divl
das
dec
mov
push
call
data16
movsl
lret
ret
mov
into
aad
mov
jnp
pop
gs
shll
mov
cmp
mov
pop
dec
sub
lods
fsubrs
repnz
movsl
and
xor
jno
pop
add
rolb
cwtl
cmp
xchg
sbb
mov
xchg
pop
sub
lods
pop
imul
pop
and
out
sub
dec
adc
mov
mov
sub
and
inc
je
pushl
lahf
ja
leave
sub
stos
mov
adc
fs
inc
adc
sub
dec
in
sub
push
pop
sbb
in
negb
mov
fadds
mov
or
mov
cmpsb
xor
gs
inc
or
xchg
pop
movsl
outsl
push
ret
mov
push
outsb
inc
sub
jne
jp
mov
mov
dec
pusha
dec
cmc
ljmp
adcb
popa
mov
mov
cli
cmpsb
ss
popf
mulb
test
push
test
push
ret
push
in
xchg
push
ja
sub
mov
fwait
cmp
movsl
sbb
add
mov
cwtl
xchg
or
jo
arpl
sbb
fs
sbb
test
mov
jmp
out
cmpsl
outsb
data16
les
jmp
pop
test
lods
clc
cld
pop
xchg
lret
sbb
mov
xlat
popa
hlt
das
or
push
es
adc
ficompl
test
loope
movsl
mov
lret
outsl
das
inc
orl
mov
mov
or
mov
in
pop
jb
sarb
pushf
gs
dec
add
xchg
add
cmpsl
sub
mov
stc
bound
pop
outsb
inc
xlat
movsb
insb
fucomp
mov
arpl
push
pop
xor
pop
xor
mov
ja
gs
jo
pop
gs
pushf
aad
jae
in
out
cli
popa
pop
popa
adc
orb
and
test
xor
mul
out
inc
lods
bound
js
int3
dec
and
mov
andps
into
jb
mov
jecxz
cmpsb
inc
push
or
fsubp
test
lods
xchg
push
leave
fbld
dec
fdiv
cmp
and
out
movsb
pop
fmul
xchg
push
fs
adc
and
imul
mov
movb
je
pop
scas
push
lcall
sarl
xchg
jb
out
mov
mov
mov
or
dec
pop
pusha
sub
and
dec
add
mov
push
cli
fildl
or
cmp
mov
xchg
or
sbb
add
mov
mov
incl
ljmp
out
notl
fists
xchg
xchg
xlat
pop
loope
inc
fiadds
mov
lahf
or
or
lds
sub
pop
xor
out
lods
and
mov
inc
les
cli
ja
int
pop
out
add
cmp
ret
push
mov
aaa
cli
cmp
mov
or
enter
xor
sub
dec
outsl
ljmpw
outsb
xchg
mov
lock
lds
dec
sti
out
pop
and
test
inc
xchg
pop
cli
mov
jbe
xchg
sub
inc
mov
mov
mov
pop
or
xor
cmp
push
dec
cmp
shll
es
adc
daa
ss
mov
imul
mov
lret
xchg
sub
dec
or
xlat
repz
jae
imul
lods
ljmp
mov
inc
jmp
test
fdivs
cmp
cmpsb
dec
jge
cmp
adc
inc
addl
shl
dec
cmp
into
stos
sbb
data16
pusha
sti
dec
std
test
int3
out
or
add
pop
sti
add
adcb
shl
pop
jmp
sub
inc
mov
push
fcomip
mov
fwait
outsl
or
cs
sbb
int
leave
testb
mov
outsl
push
test
fnstcw
mov
sbb
add
pushf
mov
dec
cmpsl
dec
ja
xor
mov
push
inc
and
dec
out
scas
xorb
jbe
sbb
jo
jbe
cmp
jmp
or
shlb
sbb
xchg
out
pop
jge
inc
call
divl
aam
jecxz
mov
test
jo
xor
push
xchg
dec
mov
adc
xor
xlat
hlt
or
push
rcr
pop
mov
dec
dec
daa
mov
push
xor
xchg
xorb
inc
sub
imul
pop
stc
jo
and
sub
mov
in
pop
add
cmpsb
sti
clc
push
jp
and
sub
and
mov
inc
sub
leave
dec
jecxz
sub
inc
xor
adc
lods
adc
clc
aaa
test
inc
jo
imul
jbe
rorl
xor
outsb
pop
movsb
lea
add
inc
pop
or
add
inc
imul
sbb
adc
jmp
test
das
add
mov
loop
jo
xor
sub
mov
xor
in
inc
lahf
stc
and
js
in
jl
mull
outsb
imulb
ds
int3
fnstcw
mov
add
mov
inc
cmpb
adc
popa
lret
xor
cmp
pop
iret
fadd
mov
jle
out
mov
mov
jno
jnp
push
pop
cs
cmpsl
sahf
sbb
or
jmp
fmuls
fs
cmp
inc
jno
adc
jae
loope
fld
sub
push
cmpb
push
push
lods
cmovnp
and
xor
sbb
ss
enter
cmp
push
test
pop
adc
movsb
daa
sub
mov
out
into
push
dec
ret
mov
into
or
jmp
push
daa
jbe
mov
std
movsl
cmp
inc
pop
unpckhps
fistl
fnstcw
pop
mov
dec
sar
inc
jl
sub
out
push
push
scas
or
insl
vpaddusw
mov
arpl
xor
loop
sbb
repz
sbb
rorl
fidivrl
ds
xchg
ret
cwtl
jnp
es
adc
lret
popa
or
fstpl
cmp
sbb
lods
xchg
shl
cmp
std
jg
or
loopne
sbb
xchg
out
ror
jne
inc
and
inc
clc
js
inc
cmpsb
xor
stc
je
xchg
outsb
push
pushf
or
xchg
pop
mov
ror
sbb
rorl
mov
push
mov
pusha
xor
jecxz
scas
dec
mov
sub
jmp
sub
outsl
sbb
and
lock
mov
jge
aas
mov
and
push
aas
mov
mov
mov
dec
sub
fbstp
mov
fnstsw
int3
xchg
push
or
pand
mov
xor
mov
cwtl
stos
adc
insl
bound
icebp
mov
mov
repz
xchg
sbbl
sbb
clc
push
inc
out
mov
pop
dec
pop
xchg
sarb
in
sbb
shr
aaa
pop
jecxz
in
out
push
scas
add
xchg
sub
mov
je
loop
jns
xor
mov
mov
mov
shrb
cmp
xchg
mov
je
scas
lods
xchg
lret
sti
adc
lret
pusha
ja
or
and
xchg
popf
sbb
repz
mov
arpl
rclb
roll
stc
negl
xchg
push
hlt
xor
pop
cmp
test
mov
and
dec
loopne
fdivrl
jge
xchg
rcll
push
test
and
pop
inc
pop
gs
mov
and
cltd
fisubs
jecxz
cmp
xlat
inc
lea
xlat
popa
ljmp
fs
decb
test
sbb
cmp
push
jecxz
mull
mov
dec
das
and
dec
pushf
cmp
push
push
cld
add
loop
fisubrs
and
pop
cmpsl
adc
inc
xchg
into
fisubrs
outsb
dec
mov
and
repnz
lock
lea
cmpsb
mov
popf
pop
and
mov
je
cvttps2pi
lcall
leave
jmp
xchg
sbb
and
push
scas
loopne
fistps
add
sbb
fidivs
icebp
mov
sub
arpl
pop
repz
pop
mov
in
dec
out
and
mov
cmp
mov
popl
imul
cmpsl
cld
outsl
jo
mov
cmc
loope
aad
pop
pusha
sbbb
aas
add
inc
in
push
xchg
inc
adc
jecxz
sahf
imul
outsb
jo
jmp
es
mov
inc
mov
lods
mov
add
lods
mov
sbbl
add
xlat
data16
xchg
addb
or
push
movzbl
and
sti
cli
pop
jns
push
jo
mov
int3
mov
int
xor
sbb
das
mov
sbb
push
aaa
jge
test
lret
cmp
cmc
cmp
shlb
mov
jb
xchg
pop
sbb
push
inc
cmpsl
jnp
ret
out
push
pop
lds
mov
push
mov
mov
xchg
jecxz
jp
xchg
shlb
mov
int
add
mov
adc
mov
inc
js
sub
and
xor
in
jmp
pop
fldl
ja
and
test
jmp
pusha
sub
and
xchg
add
mov
xchg
mov
ret
in
cmp
xor
das
and
sarb
addb
lcall
out
pop
jnp
add
gs
inc
xchg
out
out
dec
loop
scas
ficomps
sbb
mov
mov
inc
pop
imul
lods
lds
cli
jae
sub
push
mov
rolb
aam
push
imul
mov
jge
sub
xlat
rep
rolb
je
sub
mov
insl
inc
bound
inc
or
mov
jne
shll
add
pushf
cmc
mov
test
mov
cld
sub
adc
dec
mov
mov
test
out
sti
loopne
mov
fnstcw
fmull
in
mov
and
rcr
sub
push
and
mov
sahf
rcrl
adc
add
fsts
outsl
sbb
jb
add
jecxz
es
dec
testl
xor
cltd
dec
clc
sub
mov
scas
call
lock
mov
cmp
fistpl
xchg
jmp
xlat
xchg
cmp
rol
pop
jae
les
clc
enter
mov
testb
pop
jecxz
and
jnp
dec
es
lods
adc
push
dec
decl
enter
jmp
repnz
loopne
cmpsb
dec
or
jns
ds
and
push
cmpsb
adc
jnp
jle
xchg
ficompl
loop
dec
shlb
fcmovb
push
mov
lods
pop
mov
daa
pop
inc
xor
push
js
and
xchg
aam
jo
or
adc
rorl
cmc
js
sbbl
mov
sbb
aad
jle
dec
call
xchg
imul
push
hlt
rol
xchg
lods
jg
daa
push
pop
aad
xor
mov
popa
xchg
add
mov
sbbl
andb
cmpsl
fadd
outsb
lahf
pop
lea
sti
xor
addr16
push
inc
jo
negl
mov
adc
or
rclb
push
test
mov
and
push
or
aaa
adc
mov
imul
movsb
je
cmp
inc
cmp
icebp
and
popf
push
pusha
scas
int3
out
mov
jo
dec
push
and
lahf
cmp
jp
pop
sti
lods
dec
pop
jnp
pop
ret
mov
inc
xor
std
dec
test
adc
mov
push
jle
es
jae
stos
add
adc
push
mov
subb
xchg
sub
iret
and
pop
and
pop
xor
imul
push
sbb
sbb
and
insb
jae
adc
lcall
mov
rcrb
xchg
mov
and
xor
push
add
sub
sbb
fmull
push
pop
sbb
fs
les
sbb
je
jmp
xor
aaa
push
scas
les
in
xor
mov
cmp
mov
sub
jnp
jnp
or
lret
cmp
mov
lods
push
adc
fstps
out
push
cltd
dec
push
test
out
pop
mov
jb
jae
adc
jmp
sub
sbb
xor
jnp
jle
cld
rcrl
pop
jp
jno
sbb
shrb
movsb
lret
popf
repnz
ss
loope
movsb
adc
sbb
jnp
xchg
mov
test
cmpsb
jae
sub
dec
into
pop
pop
xor
fistpll
dec
pop
jae
jb
in
loopne
sub
sub
xchg
pop
ret
sbb
scas
adc
fs
std
and
adc
sub
les
inc
in
adc
sub
pop
mov
dec
out
arpl
dec
movsl
cwtl
lods
dec
pop
aaa
pop
cmp
inc
mov
and
insl
mov
das
cmp
je
sbb
movsb
je
jl
fsubl
dec
es
xor
fsubrl
pop
push
cmp
xchg
cmp
or
aad
xchg
sub
stc
cmp
lahf
cmpsl
xchg
and
arpl
movb
imul
ss
pop
rolb
xchg
or
out
xchg
mov
sbb
pop
xor
ljmp
pop
cmp
in
cmpsl
sbb
or
jecxz
cmp
mov
stc
cli
nop
nop
pusha
fldlg2
pop
or
imul
dec
in
lea
mov
mov
inc
xchg
sub
push
jp
adc
inc
xor
cmp
pop
rclb
pushf
ss
gs
cmc
sub
loop
sbb
adc
cltd
out
rcrb
dec
or
mov
aas
flds
jle
sub
test
shl
fbld
or
and
fldenv
sub
insl
sub
mov
sahf
inc
cmp
cmc
jo
sbb
or
gs
jle
clc
lcall
sbb
fimull
fucomi
scas
fdivr
nop
jns
jg
pop
call
pop
push
sbb
add
jecxz
jmp
inc
in
ret
xchg
xorb
inc
xor
shll
into
push
add
js
adc
xchg
adc
xor
cmp
lds
out
or
and
outsb
jns
ss
fs
inc
jae
pop
cmpsl
jno
mov
and
aam
dec
out
jne
sbb
inc
xor
lds
cmpb
psubw
and
push
jmp
je
xchg
sti
jbe
hlt
inc
scas
dec
pop
add
xchg
push
cmpsl
jbe
int3
xchg
into
bound
and
jno
cmpl
mov
cmp
lea
stc
clc
cld
pop
ret
dec
push
mov
sub
std
dec
loop
sub
je,pt
mov
adc
xlat
mov
sbb
jne
mov
shlb
pop
and
and
lret
pop
scas
sar
jp
shrb
pop
aad
test
mov
in
lea
jmp
test
and
push
ss
lret
popa
ficoms
daa
mov
aaa
and
jae
loopne
pop
por
js
hlt
jge
enter
in
jb
dec
adc
jg
in
daa
and
xor
movsb
cmp
cmp
repnz
jnp
xchg
add
lret
dec
mov
mov
outsb
cmpsb
inc
cmc
les
rolb
pop
and
rorl
les
lock
fnstsw
mov
adc
ret
jmp
jg
push
std
std
xchg
popf
xchg
cwtl
subl
mov
jecxz
xchg
add
out
stc
call
jno
pop
jno
neg
ljmp
dec
leave
fisttpl
push
das
inc
mov
cmp
fs
sub
test
sub
add
sbb
push
adc
mov
mov
imul
add
pop
jne
adc
out
in
fwait
cld
mov
es
adc
push
jno
in
xchg
or
jmp
pop
sar
aad
repnz
push
dec
or
cmpsb
lods
mov
in
clc
test
mov
inc
sub
push
mov
adc
jmp
or
cli
xlat
out
jge
xchg
mov
stos
push
dec
xchg
cmpb
lock
or
and
mov
outsl
sbb
test
sub
cwtl
cmpsb
push
fimull
jg
cmp
xchg
arpl
xor
cli
sbb
dec
test
or
js
sbb
out
imul
jp
pop
fsubrs
test
lret
call
xchg
leave
push
sti
sub
ljmp
aam
je
cmp
and
shl
dec
xchg
les
pop
push
sub
mov
push
cmp
stos
lcall
out
shr
fnsave
cmp
fs
sub
les
lahf
jnp
out
bound
loope
jno
push
mov
mov
inc
and
or
push
fsubl
pusha
scas
notl
mov
popa
cli
and
stos
xchg
sbb
insl
mov
push
cltd
jne
xor
inc
push
dec
pop
add
fsubl
pop
insb
shlb
loopne
push
scas
shlb
push
repz
sub
aad
orb
popf
inc
shrb
pop
and
scas
push
cmp
mov
sbb
cltd
or
adc
fcoml
jnp
mov
fsubp
out
xor
mov
xor
lahf
sarb
and
das
sarb
add
cli
and
jne
mov
cmp
ret
ret
ja
ds
jnp
inc
shlb
insb
lret
mov
sbb
popf
push
add
xchg
sub
mov
mov
fdivrs
lcall
lret
test
aas
mov
xor
mov
out
xor
dec
mov
decb
in
movsl
stos
jbe
adcl
jle
mov
ljmp
fnsave
cmpsl
dec
imul
out
mov
movsb
push
lock
out
jno
icebp
ja
pop
test
mov
in
data16
ds
xchg
mov
mov
mov
and
les
cmpsb
jmp
add
cmpxchg
mov
jb
xchg
cmp
or
mov
test
movsb
pop
mov
fwait
push
call
ds
stos
adc
mov
sub
mov
insb
mov
adc
xor
loope
ret
pop
sub
and
mov
cmpl
fstpt
cld
add
jmp
add
jp
lds
iret
ds
in
push
xchg
xchg
and
xor
sub
gs
xchg
fwait
jmp
lock
fneni(8087
cwtl
push
sub
in
popa
cmpsb
sub
mov
fnstsw
cs
push
fstl
mov
inc
lcall
rclb
int3
xchg
xchg
fcomps
jns
popa
or
mov
add
bound
ret
push
cs
inc
xchg
dec
inc
mov
add
orb
push
int3
xor
xchg
clc
push
test
lahf
adc
loopne
cmp
ds
pop
cs
jmp
fwait
and
xchg
mov
xchg
shlb
pop
dec
das
pop
in
idivb
rol
jge
pop
les
lret
adc
std
out
hlt
xor
and
xchg
xor
jmp
sbb
mov
sbb
mov
stc
scas
pop
movsb
xorb
adc
mov
test
clc
hlt
mov
sub
fistpll
mov
xor
sub
cld
movb
xchg
or
lods
testl
or
sbb
xchg
jmp
inc
cmp
das
dec
sbb
or
outsl
inc
sub
sub
dec
imul
dec
lret
ficomps
xor
scas
outsb
xchg
dec
cmp
cmc
addl
lret
or
lcall
mov
xchg
fld
lds
arpl
rcl
pop
adc
cwtl
mov
pop
lock
leave
ja
dec
fwait
xor
fs
daa
loopne
lret
push
outsb
sti
in
xor
jecxz
mov
stos
mov
je
mov
pop
sub
into
in
es
dec
add
pushf
mov
in
mov
pop
mov
push
int
push
enter
iret
mov
pushf
dec
cmp
adc
mov
and
mov
or
pusha
ljmp
lret
pop
bound
ss
ret
arpl
mov
cld
js
pop
and
jne
xchg
lock
or
adc
push
jne
div
xor
das
jnp
adc
jl
adc
into
fimuls
adc
mov
jecxz
lds
xor
dec
sub
inc
sbb
push
mov
xlat
aaa
das
jp
or
test
lds
dec
nop
rorb
push
hlt
adc
bound
jns
mov
in
cmc
push
pop
jae
sarl
lret
xchg
add
js
cltd
mov
mov
sbb
cld
add
nop
lahf
jle
rorl
mov
fwait
mov
pushf
insb
inc
sub
stos
cwtl
stos
xchg
iret
xor
or
fdivr
jl
xchg
lret
and
push
mov
mov
inc
imul
aam
dec
ja
adc
sub
andb
cli
inc
cmpsb
dec
jb
sub
fcoms
cmpb
push
ss
aam
dec
repz
into
aaa
outsb
loopne
into
sub
mov
lcall
dec
inc
fbld
sub
rcrb
ds
cmp
jns
lods
dec
aad
dec
movsl
pusha
rcll
ret
insb
les
fucom
ja
fs
and
mov
test
or
popa
and
xor
loop
pop
jecxz
mov
jp
lcall
mov
sarb
xchg
loop
ror
clc
add
pusha
fadds
xor
test
xor
iret
mov
stc
push
dec
jbe
mov
dec
mov
das
lcall
pushf
ss
data16
pop
and
hlt
push
jecxz
shr
stos
xor
sub
sub
and
or
pusha
clc
dec
pop
add
push
add
iret
cmp
lods
ds
int
enter
andb
mov
cs
outsb
push
outsb
dec
jp
insb
lea
out
fbstp
xor
out
repz
jno
push
mov
ljmp
movsb
cwtl
inc
es
mov
mov
mov
jmp
mov
roll
cmp
or
mov
ja
push
lret
lods
out
call
out
adcl
or
jne
hlt
inc
repnz
pop
push
pop
add
mov
mov
lahf
ret
sbb
cmpl
push
mov
mov
mov
pop
shll
adc
and
prefetcht2
pop
push
pushaw
stc
jne
cli
xchg
sub
sbb
add
add
rcrl
daa
aaa
fld
sub
sub
jecxz
xchg
fldcw
push
xor
sbb
xor
mov
out
mov
outsb
jl
loopne
or
mov
pop
mov
xor
hlt
or
orb
arpl
mov
pop
sbb
fsubrs
xchg
push
mov
aam
popf
jbe
iret
jne
xchg
cmp
fpatan
fsubr
xlat
das
test
test
jl
enter
cmp
clc
and
outsb
cmc
or
cmpsb
push
into
dec
add
inc
and
sub
inc
icebp
xchg
lods
in
push
cmp
outsb
jnp
pop
xor
lds
lods
mov
xor
sbb
in
iret
outsb
inc
cwtl
dec
mov
mulb
mov
js
inc
inc
dec
fiaddl
std
mov
xchg
jbe
fstpt
lret
fnstenv
mov
dec
scas
popa
mov
leave
das
repz
insb
mov
pop
gs
pop
sbbl
stos
sti
bound
aam
add
dec
mov
lcall
dec
popa
clc
mov
push
shll
and
sbb
xchg
shrl
and
iret
or
stc
or
push
sub
bound
mov
or
push
add
mov
jns
pop
shrl
sbb
enter
sbbb
sbb
add
adcb
insl
mov
pop
repz
sbb
ljmp
sbb
mov
mov
inc
test
jmp
push
jns
cwtl
jnp
je
repz
sti
mov
and
adc
push
adc
nop
or
ss
mov
fcom
inc
mov
cmc
sub
and
sti
pop
cwtl
jnp
push
push
repz
dec
pop
adc
xor
mov
roll
jmp
outsl
scas
inc
jns
imul
fadd
pop
cmp
xchg
aas
mov
inc
and
xchg
orb
aam
lahf
insb
out
sub
inc
jnp
dec
dec
pop
push
and
pop
int3
in
repz
pop
push
inc
aaa
adc
inc
lsl
adc
imul
arpl
inc
pop
and
add
mov
icebp
dec
rcrb
jo
sar
push
jo
or
jns
mov
pop
addr16
outsb
push
cmp
sub
and
mov
dec
jle
lods
cli
lods
xchg
cmp
sarl
add
imul
lods
test
std
jge
mov
mov
scas
pop
push
push
subl
imulb
lret
xor
lock
in
sbb
sahf
mov
pusha
popf
mov
xlat
cmp
imul
insb
adc
mov
hlt
lahf
inc
add
loop
clc
push
sbb
xor
insl
mov
bnd
xor
scas
aas
and
mov
push
mov
jb
sub
fisubl
xor
pusha
test
in
jmp
into
xor
lret
ret
mov
push
out
push
movsl
push
mov
fs
cmp
sti
int3
and
mov
shll
pop
mov
leave
jb
mov
lret
push
mov
cmp
dec
add
dec
gs
mov
ret
xor
push
and
mov
shrl
inc
out
andb
xchg
test
jne
lea
sti
jb
cs
popf
rcrl
pop
fidivl
xchg
mov
sub
jne
jns
xchg
sbb
daa
sub
add
cmp
sub
sbb
imul
mov
jns
push
lahf
xchg
sub
push
jne
inc
insl
and
push
cvtps2pd
ret
out
aad
pop
mov
outsb
jne
xchg
adc
xor
add
lret
inc
push
mov
lods
sub
xchg
call
push
int3
daa
add
mov
in
pop
lahf
in
inc
xor
mov
sahf
mov
xor
clc
lock
and
gs
push
pop
xor
push
rcll
popf
pop
add
cmp
mov
cld
repnz
xchg
outsl
jl
jno
ror
in
arpl
imul
out
outsl
popa
pushw
sbb
add
jp
push
call
outsl
cmp
inc
xor
push
inc
or
pop
mov
das
ja
sbb
cmp
orb
mov
test
pop
and
push
ljmp
xchg
jne
pop
aaa
testl
faddl
filds
xchg
jo
mov
xlat
mov
ja
adc
add
jg
cmp
lret
gs
inc
out
mov
lods
jmp
addr16
and
add
jb,pt
xlat
pushf
mov
jmp
dec
sbb
add
mov
imul
aas
fldt
sti
int3
mov
and
daa
xchg
jle
fs
or
les
pop
dec
fldl
outsl
adcb
pop
imul
lock
gs
lcall
xchg
and
fnstsw
shlb
pop
mov
jo
iret
rcll
lcall
ficoms
xchg
jb
inc
pop
or
add
por
sub
out
adc
dec
popf
jns
dec
sub
fwait
jecxz
push
int
sahf
loop
arpl
pop
or
xchg
cmpsb
and
jg
mov
mov
push
ds
inc
sahf
cmp
push
hlt
push
or
lods
fsubrs
sub
pushf
mov
sbb
mov
mov
jae
cmp
loopne
mov
add
lock
sti
xchg
std
insl
jo
outsb
xchg
icebp
mov
add
jo
xchg
shrl
push
clc
mov
loopne
mov
mov
sti
adc
cmpsl
scas
bnd
sbb
imul
sub
xor
leave
mov
jno
pop
mov
icebp
mov
push
setl
mov
push
sahf
leave
mov
mov
test
repz
cltd
aaa
scas
xor
push
scas
add
das
cli
push
jp
sbb
addr16
mov
sbbl
fldt
nop
mov
iret
mov
mov
sbb
xchg
xorb
jecxz
enter
jne
cmp
lret
sarl
mov
fisubl
and
lret
or
dec
insb
push
aam
jmp
addr16
jae
pop
jo
or
in
and
jae
fucomip
lods
mov
in
pop
jo
ja
fmuls
arpl
dec
arpl
xchg
loope
test
xlat
mov
leave
aad
push
mov
pop
les
xor
push
movsb
inc
add
adcl
xchg
cmp
xchg
fs
cwtl
stc
nopl
lcall
cltd
ret
in
sbb
shll
data16
out
jp
pop
jae
xor
pop
sbb
mov
lcall
mov
lds
dec
adcb
pop
dec
int
addr16
fs
shlb
pusha
ljmp
mov
cs
ljmp
jns
mov
sub
xchg
jnp
cs
mov
addr16
xchg
xor
mov
lcall
xor
jecxz
repz
iret
pop
aam
movsl
in
imul
mov
push
out
jmp
dec
mov
addb
sub
cmp
inc
stos
lods
scas
loop,pn
mov
or
fistpll
les
icebp
jge
shll
inc
mov
add
push
sub
nop
hlt
and
cmp
scas
iret
and
nop
fsubrs
push
mov
xchg
aad
ret
inc
sbb
xchg
insb
inc
daa
int3
cltd
push
cmovns
dec
sub
jmp
imulb
jle
clc
lcall
mov
mov
dec
push
popf
inc
xchg
push
pop
and
cmp
imul
jbe
repz
mov
sbb
je
add
push
iret
xchg
sahf
push
shlb
mov
push
out
sbb
mov
and
loope
or
pop
adc
sbb
mov
jp
cmp
inc
xor
pushf
mov
inc
gs
or
xchg
xchg
xlat
ret
dec
sahf
xor
xchg
daa
jg
jmp
ret
cmc
or
sbb
ret
cmp
and
out
inc
jmp
dec
shll
notb
icebp
adc
cwtl
addr16
nop
sbbl
push
inc
adc
pop
mov
adc
jle
stos
sub
aam
movsb
je
pop
gs
outsb
dec
mov
movlhps
add
mov
shll
adc
inc
jno
xor
xor
testl
push
push
sahf
pop
aaa
ljmp
and
add
xchg
mov
xchg
add
mov
mov
cld
dec
test
cmpsl
pop
outsb
mov
mov
pop
clc
mov
adc
mov
insb
add
cmpsb
sub
mov
decb
scas
mov
sub
add
mov
mov
push
dec
lea
loopne
mov
inc
mov
out
sub
mov
cmp
lret
fs
mov
xchg
jge
pop
adc
cmp
and
pop
fcmovne
sbb
mov
mov
inc
add
sbb
jg
mov
dec
popa
xor
adc
jmp
mov
add
movsb
sahf
pusha
shr
testb
out
lds
lret
subl
and
xor
pop
fwait
sub
loopne
adc
out
fcmovbe
pop
push
sub
jp
pop
xchg
dec
pop
jo
xor
insb
mov
add
icebp
in
repz
or
mov
mov
jae
or
int3
fcmovnu
dec
jns
jne
mov
notl
int
inc
mov
outsl
sti
rcrl
test
ljmp
loope
jle
cmp
adc
push
ja
shr
pushf
inc
inc
sbb
fadds
aam
jno
adc
add
adc
jg
xchg
inc
add
out
fildl
mov
popf
mov
sar
mull
fisttpll
iret
push
adc
sti
push
and
push
mov
push
and
or
mov
lahf
jns
and
cmp
jle
call
test
out
sub
or
mov
addr16
ja
and
fdivr
scas
inc
jo
es
push
mov
push
adc
daa
push
inc
sbb
cmp
push
in
xlat
push
arpl
and
sbb
adc
jae
addr16
out
lds
lds
or
xchg
cmp
xchg
cltd
loop
sbb
rolb
push
imul
mov
adc
add
inc
adc
imul
and
or
bound
je
movsl
popa
sub
popf
rorb
adc
xchg
insl
out
sti
fcoml
shll
mov
xor
cli
lods
jb
ret
nop
jl
and
mov
xchg
push
sbb
cmp
inc
stos
mov
jle
inc
jo
cmp
test
mov
ret
mov
loop
icebp
dec
inc
push
jns
das
testl
pushf
sbbl
mov
gs
add
push
arpl
cli
mov
pop
inc
cmc
inc
fidivs
sbb
adc
mov
push
hlt
jns
sub
add
adc
add
and
mov
stos
cmp
xor
pop
inc
dec
rorl
mov
paddd
mov
mov
jbe
int
inc
sahf
lods
addr16
xchg
shrb
dec
addb
ja
jl
mov
or
xor
iret
sbb
push
scas
xor
cmovo
and
jp
and
addb
pop
enter
pop
aam
jmp
sub
addb
xor
mov
jl
shll
aas
push
jns
fwait
adc
lcall
xor
rclb
xorb
stos
and
adc
rorb
push
loopne
aam
mov
daa
inc
sub
push
sbb
xchg
lahf
mov
pop
loopne
jbe
jp
and
in
add
push
xchg
push
inc
mov
jbe
pop
jecxz
push
jbe
fwait
jbe
jge
mov
pop
xchg
je
cld
fdivp
loope
and
fwait
dec
push
cmp
rolb
lock
and
mov
sbb
clc
insb
pusha
or
jp
xchg
ja
fistl
clc
cmp
mov
cmpsl
lret
and
lret
dec
test
addr16
scas
test
icebp
out
cwtl
pop
sub
push
ficompl
add
je
mov
and
and
pop
outsl
mov
ret
cld
out
or
sarb
jg
push
dec
sbb
sub
mov
arpl
xor
cmp
jg
cmp
in
jle
daa
lret
inc
stos
mov
enter
and
not
popa
push
out
stos
push
gs
ljmp
int
scas
jns
add
cmc
pop
xchg
jecxz
idivl
lret
pop
std
lcall
mov
sub
andl
fnstenv
add
inc
movsb
cltd
fcoml
daa
mov
push
jb
inc
shrb
int3
ficompl
imul
mov
fisttpl
addr16
pop
xchg
cmp
in
inc
mov
pushf
xchg
add
roll
shlb
mov
int
pop
clc
cli
push
sbb
pop
lods
cwtl
aad
shrb
lock
inc
adc
jae
lret
fwait
test
idiv
into
loopne
push
xor
enter
inc
mov
shrl
sub
mov
js
pop
and
jnp
add
dec
mov
xchg
rclb
inc
lahf
lret
loop
bound
cmp
sbb
sahf
inc
lret
mov
aas
sub
add
fwait
add
ret
mov
mov
sub
gs
je
sub
xchg
sub
mov
ss
add
mov
in
lret
mov
adc
xorl
es
into
push
or
int
or
rcll
shl
mov
aam
les
cmp
imul
pop
repnz
fistpll
into
insl
fnsave
dec
repz
mov
jne
out
inc
scas
movsl
int
aad
adc
dec
adc
add
push
ja
xchg
js
insl
fdivs
into
mov
sbb
push
cld
enter
lea
mov
xchg
ljmp
jl
rcrl
icebp
mov
pop
out
gs
sub
sub
and
jecxz
mov
sbb
inc
jno
add
add
cmp
cli
xchg
sarb
jbe,pn
das
imul
stos
jnp
nop
sub
loopne
inc
xchg
inc
cvtpi2ps
jnp
dec
loop
in
sub
inc
mov
and
call
add
cwtl
xchg
arpl
mov
mov
xchg
xor
inc
fs
xchg
sub
aad
je
mov
pop
icebp
fildll
or
pop
push
jl
jle
test
arpl
jg
ss
push
mov
xchg
out
fs
push
loope
rol
pushf
mov
and
xchg
xchg
cmp
emms
push
push
dec
loope
cmpsl
popa
popa
mov
sbb
xchg
ljmp
das
out
and
cmp
das
call
and
cmpsl
or
cmpsl
cmp
sub
jg
pop
hlt
xchg
xchg
mov
push
stc
pop
pushf
pop
mov
xor
mov
pop
jle
push
repnz
cmp
mov
loop
xor
or
jo
or
inc
hlt
rcr
arpl
aaa
sub
and
lods
adcb
mov
pop
adc
sbb
test
and
mov
jle
pop
andl
mov
rcr
jb
rcr
in
negl
mov
in
xchg
or
sbb
call
push
hlt
mov
jb
aas
lret
fdivrs
jnp
mov
bswap
es
aam
lea
out
mov
test
dec
in
mov
pusha
sbb
or
lods
inc
xor
shll
les
aas
pop
sub
fsubr
imul
adc
imul
sub
sbb
xlat
cwtl
pop
faddl
cmp
icebp
mov
cmpsb
jle
sbb
xchg
aaa
jmp
loopne
jb
sahf
lock
and
enter
jmp
std
cmp
pop
loope
inc
aad
lds
shlb
adc
xchg
dec
jl
js
rorb
or
mov
fstpt
out
fcoml
mov
adc
adc
fstp
mov
pop
lret
pop
pusha
jae
int3
and
mov
aas
fisubs
xor
mov
or
push
push
incl
lret
add
sarb
jle
pop
out
sbb
aad
push
faddl
divl
add
rorb
ja
cmpsl
push
ja
cmp
jle
add
pop
dec
lcallw
aam
gs
inc
loope
leave
jnp
xor
or
loope
pop
in
mov
mov
sub
pop
stos
fcmovne
cmp
adc
test
mov
sub
inc
in
dec
movsb
sub
or
push
jo
mov
mov
test
mov
clc
lock
out
fadds
test
pop
mov
push
sbb
stos
ret
cmpsb
cli
and
imul
fimuls
and
sarl
fcmovne
push
and
pop
jp
cwtl
mov
ret
mov
cwtl
mov
je
xchg
and
pop
loop
sub
pop
and
loope
outsb
jns
cmp
insb
mov
lock
mov
cld
push
dec
mov
nop
sub
andb
inc
loop
out
loope,pt
cmp
imul
sub
adcb
xchg
fsubrs
xchg
ret
call
ljmp
pusha
or
cmp
inc
push
out
push
pop
std
inc
shrl
jns
mov
test
inc
insl
je
mov
pop
out
loope
push
std
pop
jmp
push
daa
dec
xchg
int3
fiaddl
cmpsl
filds
movsb
mov
stc
outsl
or
packuswb
push
test
addb
push
mov
and
ret
jns
mov
jno
loope
xchg
popa
sahf
test
dec
push
repz
mov
iret
add
lahf
cltd
sub
test
mov
mov
adc
mov
iret
stc
mov
pop
fstps
pop
mov
sub
mov
das
icebp
pop
adc
sub
pop
lcall
jp
addr16
jl
mov
lods
out
insl
jns
mov
sti
pop
or
xchg
mov
rcrl
stos
mov
sub
cmc
cmpsb
cld
cmp
cmpsl
mov
pop
stos
push
mov
int
or
roll
out
push
pop
fldl
cmp
inc
jg
cld
and
shrb
sub
aaa
jp
cmc
movsb
movsl
test
dec
push
inc
lods
fcmovnu
mov
sti
mov
push
or
sbb
jb
leave
ret
push
clc
stc
sbb
xchg
lahf
loope,pn
mov
in
pop
test
xor
sbb
jle
inc
dec
push
lods
data16
in
or
fdivl
daa
sub
daa
xlat
mov
scas
lods
call
rorl
arpl
sub
popf
push
clc
inc
push
jns
mov
pop
shlb
in
cli
or
cli
push
push
popf
pop
ds
dec
out
lret
push
or
aas
in
sarb
sbb
push
pop
incb
sub
dec
mov
xor
dec
push
mov
icebp
lahf
inc
add
stos
insl
add
cli
iret
mov
adc
cmpsb
arpl
xor
mov
les
pop
lock
and
jbe
cmpxchg
enter
loop
inc
mov
inc
jae
cmp
shlb
mov
gs
or
mov
or
cmp
cmp
in
and
mov
xor
push
mov
or
lret
outsl
pop
lock
inc
pop
movsl
push
ljmp
add
leave
imul
sbb
rcr
inc
or
lods
xor
sahf
jno
hlt
pushf
fwait
push
scas
rorb
push
sbb
push
xchg
pop
push
add
les
std
xor
ljmp
pop
sar
in
fwait
inc
insb
pushf
jle
mov
inc
and
leave
shl
dec
xor
popa
nop
xor
dec
or
enter
pop
mov
fs
sbb
xchg
lret
addr16
sahf
cli
jecxz
dec
sbb
lcall
movsb
enter
jp
clc
mov
xchg
mov
stos
adc
lea
dec
mov
push
cltd
push
hlt
xchg
popf
out
cmp
fwait
repz
mov
les
xor
std
pushf
out
lock
cmp
std
or
pop
push
outsl
test
gs
push
fbld
call
aaa
shl
test
insl
int
cmpsl
das
out
push
mov
mov
scas
cmp
jp
ret
filds
jmp
cs
flds
into
and
nop
push
pop
adc
movsb
repz
and
push
mov
or
arpl
rol
fs
sbb
imul
sbb
xchg
or
in
jge
mov
push
scas
call
shlb
cmp
loopne
aam
or
xor
sub
aad
sbb
cwtl
mov
xlat
pop
fs
stos
jbe
sbb
cmp
in
cmpsl
inc
xchg
out
icebp
jnp
cmp
loopne
mov
movsl
dec
sbb
mov
push
mov
jmp
adc
jae
test
repz
icebp
and
pop
rclb
dec
mov
out
add
cld
fwait
jg
cmp
jne
mov
cmpsl
cmp
ret
xor
xorl
add
sahf
popa
push
arpl
or
mov
movsl
add
sbb
mov
int
fdivl
sbb
loopne
cmc
pop
dec
aas
mov
jg
hlt
std
addb
cmp
iret
cwtl
repz
ljmp
ss
testl
or
mov
fisubl
cmp
mulb
insb
lods
out
arpl
popl
lret
outsl
mov
or
mov
fiaddl
jle
jnp
or
mov
aaa
lret
cmp
xchg
mov
add
jge
pop
push
adc
stc
sbb
mov
sarl
dec
nop
ret
adc
test
adc
push
lock
adc
adc
and
push
mov
ja
lods
jno
mov
sbb
out
mov
lock
aaa
xchg
sub
loopne
mov
add
imul
jae
ss
movsl
repz
les
jle
lcall
cmp
jns
jmp
add
repz
leave
loope
xorb
or
pop
mov
dec
pushf
test
movsb
test
popa
lds
dec
clc
dec
orl
mov
mov
lahf
push
cmp
aad
adc
push
lahf
andb
cmpsb
ljmp
dec
jnp
ljmp
add
mov
sub
jecxz
push
inc
sub
mov
xchg
jmp
aad
sbb
cltd
dec
xor
ror
dec
lods
add
sbb
mov
int
cli
lcall
mov
sub
lods
fists
sub
push
movsb
pop
mov
xor
imul
test
dec
mov
aad
mov
mov
push
and
lea
mov
push
push
loop
xchg
jecxz
aam
xor
mov
outsb
mov
out
ja
xchg
icebp
nop
nop
mov
shrb
add
adc
out
outsl
pushf
stc
jl
fwait
lahf
bound
mov
outsl
mov
out
mov
cli
sbb
push
sub
inc
xchg
test
int
push
pop
inc
mov
add
int3
sub
mov
push
js
push
aam
cmpsl
push
ja
xor
scas
xor
push
push
lea
cmp
jbe
and
sbb
fnstenv
pop
push
adc
xor
cs
push
je
adc
jp
lock
enter
push
xor
mov
dec
repz
sub
movsl
mov
clc
lret
ficoml
jge
lods
scas
jb
sbb
icebp
lcall
aas
sub
mov
jp
sbb
pop
cmp
aaa
jbe
add
jecxz
sub
dec
repnz
mov
icebp
xor
into
lds
incl
adc
out
or
rcll
pop
in
xlat
push
mov
je
rolb
or
stc
ja
fistps
aaa
mov
push
pop
adc
cmc
aam
add
dec
xchg
jns
scas
sub
hlt
mov
cmp
cltd
jmp
xchg
scas
pop
std
out
and
mov
jae
arpl
xchg
jp
ja
sti
adc
outsb
fs
inc
pop
inc
xchg
push
popa
lock
mov
lods
xchg
push
mov
adc
ret
and
andl
jl
out
movsl
xchg
pop
or
lods
dec
sbb
xchg
movsl
pop
pop
mov
dec
sub
pop
testb
mov
pushf
or
cs
or
sbb
sub
mov
and
lret
push
popf
cmp
pop
add
clc
jnp
test
pop
cmp
js
pop
rclb
orb
dec
mov
mov
cmp
or
inc
xchg
into
lock
inc
add
and
push
adc
pop
mov
stos
mov
stc
int3
pop
dec
adc
push
jne
outsb
dec
in
lds
mov
mov
scas
mov
mov
repz
insl
js
data16
dec
into
stos
pop
imulb
out
push
inc
jb
cmp
jp
push
adc
sarb
xor
push
pusha
ja
in
jp
int3
cli
dec
mov
ret
mov
sub
aam
fmul
out
inc
rcl
addl
adc
push
sub
pop
xchg
ficoms
aad
sub
pop
fisubrl
cmpsl
xor
imul
inc
mov
mov
leave
lahf
jns
test
mov
cs
sahf
rcrb
out
sbb
in
push
add
mov
xor
dec
int
psrad
or
shll
ret
jb
or
fcoms
dec
fdivrs
mov
into
jp
and
sbb
call
pop
inc
adc
or
popa
loop
scas
inc
mov
pop
out
outsl
jmp
add
andl
inc
mov
popf
pop
sahf
ret
push
shr
push
js
mov
mov
fcmovbe
cltd
xor
bound
cltd
pusha
in
or
and
test
sbb
sbb
stos
push
mov
or
cld
cmp
cmp
jecxz
das
insl
and
clc
mov
sbb
sbb
popf
insl
notb
andb
stos
stc
pop
imul
push
fistpll
mov
lret
sbb
adcb
dec
leave
pushf
pop
pop
cltd
push
inc
push
mov
sbb
ja
sub
mov
gs
int
addr16
lret
test
adc
enter
cli
cmp
out
cmp
mov
push
inc
insl
mov
push
and
mov
adc
pop
add
je
adc
fwait
loopne
call
daa
mov
ret
xchg
dec
mov
ds
inc
in
frstor
stos
movsb
test
jno
adc
mov
xor
mov
push
adc
fstpt
jle
add
aaa
ds
faddl
incl
add
sbb
fcomps
xchg
push
nop
jge
dec
cwtl
stc
test
scas
call
jbe
adc
push
add
push
sub
adc
mov
cmpb
ds
ja
jmp
push
adc
icebp
stos
push
insb
mov
dec
in
leave
stc
or
aaa
fcmovnu
inc
mov
pop
mov
cmpsl
mov
sbb
mov
xor
adc
pop
sbb
fiadds
repz
adc
pop
stos
popa
in
outsl
xor
into
int3
inc
adc
in
stc
sub
cwtl
ret
mov
cmpsl
sbb
and
xor
sub
adc
cmp
sub
mov
add
rep
lret
cmp
lcall
stos
jno
insl
lret
fstpl
cmp
sbb
mov
shufps
outsb
fs
dec
mov
pop
cmp
cli
push
push
subb
std
xchg
aas
xorl
repz
push
scas
fists
mov
in
fmul
cmp
or
dec
movsb
and
aas
add
ljmp
sbb
xor
ret
jb
push
aas
nop
scas
ljmp
lock
popa
popa
out
data16
testb
jp
lods
push
daa
outsl
jns
dec
notb
xchg
pop
jae
mov
cmp
sub
adc
cs
adc
xchg
cmp
pop
lret
dec
mov
jmp
jle
pop
push
sub
jns
xchg
cmp
bound
push
cmp
rcll
rcll
test
aad
cmp
out
sbb
js
std
jp
jle
icebp
leave
and
bound
outsl
mov
and
in
jecxz
outsb
cmpsb
pop
dec
xor
ds
loop
sti
inc
mov
jns
fistpl
pusha
push
add
cmp
je
pop
xor
adc
adc
dec
rcll
adc
mov
dec
stc
and
cwtl
push
inc
dec
cmpb
in
fucomp
bound
mov
dec
sarb
cltd
std
jno
sbb
mov
sbb
ret
ret
inc
je
sahf
fstl
mov
dec
sub
xchg
xchg
cld
icebp
pop
dec
out
jne
push
mov
pushf
xchg
cmpsb
in
mov
mov
xor
cwtl
adc
xor
xor
inc
mov
out
jns
and
mov
cmc
mov
popf
xchg
push
js
cli
and
call
aad
sbb
or
sub
xchg
fildll
adc
xor
sub
scas
popa
cmpsb
xchg
jge
jae
xchg
mov
mov
sub
ds
or
fstps
popa
or
popf
mov
cli
sbb
aad
lock
inc
and
mov
xor
sub
rclb
jae
sbb
mov
mov
aas
sbb
or
cld
and
sbb
inc
add
adc
cmpsb
jecxz
int3
test
jl
loopne
cld
adc
xchg
test
jno
jl
cmpsl
mov
out
int
lret
fwait
lock
jg
mov
iret
lcall
in
push
mov
xchg
fwait
negb
push
inc
xchg
cltd
bound
dec
xchg
add
inc
pushf
pop
push
cmc
mov
xor
fbstp
sub
mov
mov
push
hlt
inc
mov
inc
inc
xor
push
icebp
outsb
mov
push
fmuls
or
push
ret
out
mov
xchg
mov
jne
mov
aas
mov
test
cmp
std
enter
push
nop
add
mov
lret
dec
add
add
add
ret
imul
test
ret
xchg
test
and
push
in
push
push
loope
in
push
movntpd
push
cvtps2pi
je
and
mov
mov
data16
xchg
cs
mov
lcall
xor
adc
jecxz
test
fstl
movsl
lret
or
sbb
push
xor
xchg
push
inc
adc
mov
aad
and
cwtl
mov
das
inc
das
aas
mov
add
fildll
adc
mov
in
les
mov
jae
loopne
pop
mov
dec
mov
shll
xchg
loope
js
lret
mov
loope
push
lds
jno
sbb
sbb
push
enter
pop
sub
loop
add
xchg
cmp
lcall
jle
sub
pop
mov
jl
movsl
xor
loop
pop
adc
jge
and
xchg
sub
sar
inc
cmp
orl
fisttpl
clc
pop
fxch
mov
inc
xlat
push
aad
stos
fwait
aam
inc
jnp
xor
jae
iret
lea
imul
xor
xor
sub
js
dec
dec
cmpsl
inc
mov
pop
mov
js
sbbb
sub
into
push
imul
xchg
pop
pop
mov
cmp
imul
and
jge
cmp
inc
push
mov
mov
iret
mov
cmc
jle
mov
rcrl
dec
mov
cmpsb
es
imul
fldl
mov
subl
in
jge
and
push
mov
shr
inc
and
outsl
shlb
in
push
jmp
mov
xor
lds
in
jp
clc
jmp
lds
arpl
out
pop
iret
cmpsl
loopne
jbe
adc
les
mov
les
sub
es
ds
fwait
and
and
and
cli
jnp
pop
push
enter
outsb
or
pop
test
pop
pop
xor
and
leave
mov
data16
lea
imul
ret
sbb
lret
insl
adc
int
jne
and
insl
and
cmpsl
imul
bound
and
and
mov
dec
iret
out
in
or
or
dec
xor
lock
movsb
daa
fisttpl
or
add
stos
loope
or
cmp
ja
xchg
nop
hlt
lret
sbb
scas
add
in
int
scas
out
in
inc
cmp
cmp
xchg
xor
pop
inc
xchg
jge
in
jmp
jbe
mov
lock
adc
in
ljmp
mov
push
adc
lret
sbb
add
adc
jns
nop
jecxz
icebp
out
pop
xchg
outsb
push
call
jecxz
cs
out
lret
pop
mov
or
gs
pop
mov
mov
fwait
and
jb
fs
outsb
cmp
lret
adc
adc
bound
jl
mov
mov
je
popf
mov
cld
lcall
arpl
lahf
std
stos
std
add
adc
pushf
xor
mov
add
mov
int3
lcall
mov
and
pop
pop
mov
mov
clc
mov
xchg
mov
testb
push
mov
sbb
adc
bound
pop
mov
inc
jl
jo
push
and
adc
insb
mov
or
cmp
pop
xchg
inc
sbb
aaa
lock
xchg
jbe
xor
stc
push
inc
lcall
popa
cmp
stos
mov
mov
fnstenv
repnz
push
jle
pop
mov
out
sub
cltd
adc
mov
inc
mov
cwtl
enter
mov
adc
mov
mov
in
mov
stos
dec
test
mov
test
push
popa
mov
push
lods
or
addb
psrlw
sub
lret
cmp
scas
mov
scas
add
das
mov
dec
rorb
add
negl
sub
jno
add
push
insb
jg
xchg
add
cwtl
flds
mov
sahf
rcrl
jmp
in
les
es
scas
jmp
mov
lods
mov
leave
inc
sub
cli
rorb
add
add
dec
imull
fcompl
ret
lahf
int3
leave
mov
sbbb
mov
pusha
mov
lret
pusha
in
mov
add
mov
call
stc
cs
scas
pop
pop
or
mov
addr16
mov
je
sbb
mov
adc
add
scas
mov
clc
sbb
inc
xchg
mov
out
and
repnz
imulb
mov
dec
pop
jae
rcr
sub
sub
popf
les
test
scas
ja
adc
dec
mov
sbb
imull
and
or
lahf
jno
xchg
aaa
push
jae
mov
pop
in
dec
iret
je
inc
int
cmpsl
cwtl
jle
movsl
push
pop
lds
cmp
push
lock
out
jmp
adc
idivb
cmp
mov
mov
xor
mov
jl
mov
sub
jge
mov
mov
push
mov
jmp
sub
call
pop
test
pop
jp
cmp
fwait
lret
arpl
adc
popa
xchg
pop
adc
jb
sub
insb
inc
ljmp
xor
js
imulb
ret
loop
fldt
loope
insl
je
sub
popa
ret
sbb
mov
mov
xor
jno
push
xchg
aaa
add
scas
mov
jbe
inc
cmpsl
mov
negb
jb
push
xor
fldcw
shrl
pop
xor
dec
push
loope
fwait
mov
pop
push
jae
inc
stc
in
mov
shrb
rclb
leave
jle
aas
mov
xorb
in
sub
cmp
push
xor
mov
insb
mov
pop
ljmp
adc
shr
inc
push
movsb
sbb
outsb
pop
sbb
ja
add
xchg
jp
inc
jmp
insl
imul
inc
jns
pusha
sti
das
push
dec
scas
out
jb
cmp
jbe
testb
jo
out
das
arpl
dec
mov
imul
das
sarl
and
push
add
mov
repnz
loop
pop
stos
scas
xor
cli
lea
and
sti
jp
fistpll
shlb
ljmp
sub
fnop
inc
xchg
stos
ret
fildl
mov
mov
cmp
jl
call
or
rorb
imul
dec
and
aad
daa
xchg
mov
call
and
gs
xor
std
adc
in
jnp
cmpsl
sbb
icebp
loopne
loope
data16
push
jb
or
leave
je
add
rcl
cltd
cmp
pop
pop
mov
fsubs
sub
jns
les
and
mov
xchg
pop
int
pusha
xchg
xor
pop
ret
insl
repnz
insl
pop
dec
jnp
out
in
pop
xchg
popa
dec
test
xor
add
pop
push
mov
xchg
jp
out
mov
std
mov
call
xchg
push
movsl
stos
loopne
test
push
pop
xchg
scas
rcll
insb
testb
nop
cmpsl
cltd
lcall
lcall
gs
in
lcall
cli
stos
mov
mov
add
or
dec
add
sub
shlb
fldenv
inc
or
jo
aad
jnp
xor
mov
add
cmp
out
xlat
adcl
stos
mov
adc
mov
stc
mov
into
idivl
lock
fldt
pop
mov
dec
hlt
jns
xchg
shll
and
push
lret
mov
das
ds
mov
pop
pop
push
iret
dec
push
bound
mov
mov
fmuls
dec
push
jnp
pop
sbb
mov
stc
sub
sbb
shll
lods
inc
sarl
fldt
push
inc
cmp
sar
mov
and
pushf
orb
and
dec
push
imul
pop
jle
std
or
pop
iret
jmp
inc
cmpsb
sub
enter
or
rdpmc
test
adc
lret
and
inc
pop
addr16
inc
sub
sub
scas
jnp
loope
push
dec
inc
dec
stc
scas
es
cli
or
add
out
adc
into
ss
inc
mov
adcb
dec
stos
mov
cmp
push
dec
jge
addr16
pop
ljmp
pop
push
lcall
mov
push
scas
cld
mov
inc
inc
or
xor
and
mov
lahf
pop
sub
lret
mov
jno
cmp
nop
scas
jmp
jecxz
mov
aaa
jae
outsl
lret
lods
push
fsubrp
shl
push
xor
in
xor
int3
or
pop
test
mov
pop
add
leave
fsts
and
xchg
scas
inc
push
cmp
push
dec
dec
inc
lahf
arpl
dec
inc
popa
ds
dec
inc
jnp
movsl
push
btr
push
jno
cmp
jb
call
stos
cmp
sbb
dec
icebp
or
xor
jbe
adc
mov
cmovne
int
xchg
jge
or
push
pop
pop
scas
and
imul
call
cld
fs
ja
or
sub
sbb
enter
loop
andb
mov
popf
mov
inc
adc
or
dec
xor
inc
jg
cmpsl
add
loope
cmpl
lahf
pop
jge
std
push
in
pop
adc
xor
outsl
xchg
xlat
mov
mov
mov
pop
in
cmp
fcmovnu
mov
xor
push
scas
xor
movsl
stos
cmc
mov
gs
jbe,pt
iret
cmp
jmp
inc
sahf
sbb
mov
and
out
add
jns
adc
and
pop
call
insl
in
add
push
bswap
iret
or
ja
cltd
outsb
jl
add
stos
sbb
in
js
adc
inc
add
dec
loope
dec
sbbb
in
pusha
fsincos
pop
pop
push
adc
mov
inc
dec
inc
mov
mov
stos
push
xor
dec
popa
sub
pop
pop
arpl
jmp
sti
sbb
mov
jle
pop
adc
imul
aad
je
mov
mov
mov
xchg
and
ljmp
xor
xor
ljmp
insb
xchg
arpl
sub
cld
out
ljmp
mov
in
inc
clc
push
int
shll
sbb
mov
call
xchg
sub
ret
lret
mov
fnstcw
pop
movsl
jmp
push
and
sub
imul
and
xorb
lahf
inc
or
pop
sub
mov
xor
xchg
lss
std
sub
daa
int3
and
daa
movsl
jno
in
push
scas
icebp
mov
cmp
pop
push
ret
xor
fiadds
xchg
inc
adc
mov
stos
cs
ds
outsl
adc
sub
push
jmp
dec
shl
fildll
push
lock
push
iretw
push
sti
mov
push
sub
mov
and
roll
aaa
push
sub
mov
orb
lcall
xrelease
xor
pop
jne
cmp
mov
and
imul
jno
loope
adc
pop
inc
mov
loope
insb
mov
iret
jl
xor
inc
movsl
mov
dec
cmp
sub
and
push
sbb
std
cwtl
xchg
in
dec
push
jo
push
ret
cmc
in
xchg
jg
cmp
adc
mov
xchg
movsl
iret
xor
inc
dec
lret
pushf
pop
xchg
and
or
mov
nop
lret
xchg
inc
sbb
adc
push
cmp
cmp
xchg
lea
push
inc
xor
or
mov
lcall
out
stos
push
shlb
in
push
sbbl
jp
push
mov
jns
mov
mov
cmp
adc
test
mov
sbb
sbb
or
sbb
loope
movsb
sub
push
aas
mov
push
insl
jl
fcoml
xchg
xchg
jge
test
dec
into
mov
rcll
mov
push
arpl
stc
cmpsb
icebp
leave
std
jnp
mov
icebp
mov
or
rolb
inc
inc
or
add
lods
mov
cmp
orl
push
nop
inc
les
sub
mov
cmp
dec
cltd
ss
pushf
fistpl
out
adc
insl
pusha
ffreep
in
or
jecxz
out
and
mov
jecxz
cwtl
movsb
sub
inc
cmp
pop
inc
inc
adc
push
in
sbb
inc
jp
inc
push
aaa
jbe
outsl
cmpsl
dec
mov
pop
sbb
orl
iret
push
pop
mov
pop
xor
or
pop
push
pop
push
adc
rorb
fsubl
clc
andb
and
mov
xchg
adc
push
sub
pop
adc
stc
es
push
dec
into
cs
add
mov
fistps
add
test
dec
pusha
and
push
inc
mov
mov
cld
inc
test
into
dec
call
sarl
dec
lods
jp
inc
pop
daa
jp
js
rclb
jae
addb
mov
fs
ret
inc
popa
mov
mov
negl
pop
fsubrp
pop
mov
xor
shll
dec
imul
xor
cmp
fimull
add
mov
out
jp
mov
jo
sbb
cmp
lret
cmpsl
and
cmp
pop
pop
in
loopne
inc
mov
push
js
sbb
cmp
pop
mov
add
push
out
pushf
xchg
bswap
cmc
sub
xchg
xor
push
sbb
xchg
mov
outsl
push
or
lods
mov
dec
jge
mov
mov
sbb
adc
arpl
inc
jmp
and
or
or
outsb
fidivrl
mov
test
push
xor
clc
int
push
ret
adc
dec
push
mov
outsl
sub
dec
sub
sbb
std
dec
xchg
icebp
pop
fwait
lret
and
cmc
sbb
xlat
int3
cli
adc
movsb
test
inc
inc
clc
lock
outsl
mov
push
xchg
pop
cmp
dec
inc
sub
repnz
hlt
hlt
lods
outsb
subb
gs
cmp
sarb
ja
pop
dec
lods
mov
iret
jmp
and
sbb
movsl
mov
arpl
pop
dec
lahf
lods
adc
cmp
aas
test
pushf
add
jle
das
lds
shll
xchg
xchg
sbb
jne
push
mov
in
push
stc
cmp
fwait
push
iret
jg
sub
cmp
in
lcall
or
sbbl
call
repnz
sarb
int
jb
inc
xchg
and
lock
inc
shlb
mov
ja
je
and
cld
xor
out
inc
adc
dec
cltd
repz
jae
mov
jmp
aad
ja
lret
icebp
nop
mov
lds
cmp
jns
sbb
ds
cld
fstl
mov
sbb
sub
repnz
mov
divb
dec
mov
ja
fcmovbe
mov
test
in
adc
sbbl
ljmp
jle
rolb
cwtl
mov
jg
aad
xor
push
movsl
jno
jp
sbb
or
jne
xchg
and
aad
push
inc
add
dec
dec
xchg
mov
or
mov
cli
shll
cmpsb
dec
out
in
xor
sbb
mov
lods
push
jg
mov
ret
ret
jle
jle
push
xor
lds
cmp
pop
jecxz
push
scas
pop
bound
scas
jle
cmp
cld
jno
fs
cmpsl
pop
jnp
mov
inc
xor
out
xor
push
jmp
push
sarl
fidivrl
push
sbb
out
test
pushf
push
lods
fwait
mov
pop
inc
and
jecxz
xchg
add
push
sarb
and
push
mov
and
daa
push
or
push
push
loop
mov
ret
mov
jecxz
mov
sub
stos
mov
mov
inc
movsl
xor
sub
loop
cwtl
add
add
adc
dec
shlb
je
shrb
mov
imul
scas
jecxz
dec
xchg
mov
shll
sbb
idiv
mov
gs
daa
cmp
ret
adc
push
mov
imul
jl
push
hlt
push
sahf
lret
ja
test
dec
pop
out
nop
add
pop
xor
mov
lret
push
mov
sbb
imul
enter
xlat
jo
xchg
mov
arpl
aam
jo
adc
pop
lods
in
nop
mov
and
scas
stc
loopne
push
shrl
or
xchg
ljmp
sbb
cwtl
mov
push
stos
xchg
ljmp
inc
lods
cmp
outsb
jnp
lret
or
adc
inc
add
dec
and
outsl
pop
test
sbb
pop
inc
sub
push
pop
mov
jg
pop
shll
addr16
cmp
xchg
aaa
bound
adc
and
cmp
fucomip
clc
mov
mov
leave
and
adc
xchg
int3
jo
or
popf
std
ds
jge
test
mov
sbb
repz
movsb
lds
loope
ret
push
sub
icebp
pop
mov
mov
mov
cmp
push
lea
lret
cltd
hlt
pushf
adc
negb
sub
push
call
mov
outsb
sbb
xchg
xchg
aas
in
mov
out
daa
out
jns
jo
sbb
cmp
ds
sbb
shrl
out
sbb
mov
pop
popf
or
icebp
cld
cmp
rorb
dec
or
scas
ret
push
pop
sbb
pop
or
out
adc
mov
inc
jle
ds
jecxz
xor
dec
andl
call
stos
lods
inc
mov
xchg
inc
cmpsb
test
leave
lahf
cmc
aad
jge
rcl
jbe
jns
test
sarl
sbb
fwait
iret
pop
cli
xor
push
or
mov
mov
je
shlb
sub
pop
mov
adc
xchg
lret
dec
pop
loope
inc
push
roll
dec
mov
sbb
xchg
mul
xchg
jb
out
add
pusha
shl
adc
jns
mov
sti
adc
inc
daa
lods
loop
inc
fstl
mov
and
scas
mov
sahf
aad
lock
cmpsb
cmpl
fwait
or
and
data16
cmc
lahf
inc
iret
add
in
jl
outsl
loope
cld
and
mov
mov
movsb
mov
mov
lock
loope
shrl
jbe
jl
and
dec
scas
sysret
xchg
mov
sub
scas
pop
mov
popa
jno
pop
jne
aad
arpl
rol
pop
jno
xor
push
xchg
cmp
jmp
xchg
imul
mov
pop
mov
push
cwtl
push
int3
pushf
adc
jb
int
pop
stc
test
inc
sbb
and
inc
ret
cmp
in
mov
pop
in
ja
mov
insl
orl
lret
ss
cmp
scas
add
pushf
mov
xchg
push
mov
fsubrs
js
repnz
dec
mov
imul
sbb
inc
imul
sub
bound
xchg
xchg
jl
into
jb
fadds
mov
subl
mov
nop
pop
orb
xorb
outsb
aas
cwtl
fsubs
lods
pop
pop
adc
lea
push
incb
stos
cmp
mov
add
dec
cmp
dec
lcall
int3
insl
int3
divl
and
jno
xor
mov
jo
gs
scas
jl
clc
out
sub
ret
into
push
push
dec
and
or
push
addr16
add
push
sub
fnsave
rclb
cmp
mov
jp
test
jp
cmp
push
xchg
stos
sbb
arpl
xchg
mov
test
call
fildl
movsb
scas
push
add
sub
mov
push
imul
rcrb
test
push
sbb
push
mov
or
adc
sub
popf
test
adcl
dec
xchg
gs
imul
lea
inc
insb
add
xchg
push
aam
adc
in
stos
cs
pop
or
inc
fisubl
dec
xchg
sbb
shrl
pushf
add
push
cmp
and
pusha
push
data16
gs
in
nop
pop
mov
mov
iret
fcoml
adc
dec
inc
es
jge
lods
ret
push
ljmp
decl
dec
xchg
test
push
cmp
mov
outsl
mov
pop
out
loope
jo
hlt
loope
int
push
lea
adc
dec
iret
fsubs
iret
cmp
fbld
add
pop
mov
frstor
scas
scas
fldl
out
xchg
pusha
and
ljmp
xor
mov
cmp
gs
cmp
std
dec
movsb
aam
push
pushf
rcrb
jnp
scas
and
jae
cmc
add
or
jns
repnz
faddl
cmp
push
data16
jl
cmp
or
push
mov
ret
lock
not
pop
cli
scas
popf
dec
cmp
hlt
pop
das
push
bound
ret
pop
mov
div
xlat
push
cs
or
cmp
jmp
sub
jne
cmp
or
int
push
xchg
push
mov
out
jb
push
icebp
add
mov
sub
aad
and
cmpsl
aad
xor
loop
xchg
jne
or
bound
or
dec
xor
cmpsl
xchg
jle
or
loope,pt
test
jg
push
int3
xchg
or
sub
lea
or
pushf
std
test
das
xchg
xchg
push
testl
jl
ss
sub
pop
add
decl
pusha
popf
jb
jbe
pusha
sarl
cs
repz
jl
jl
jle
jbe
lea
pop
mov
test
add
fisubl
adcb
stos
cmp
call
test
pop
xchg
dec
adc
js
dec
inc
incl
gs
fildl
inc
repz
bound
push
inc
cmp
dec
mov
mov
lods
add
test
mov
in
mov
lret
and
add
inc
adc
in
add
xchg
mov
push
movsb
iret
pop
jo
pop
push
fstpt
dec
pop
xor
or
fists
cmpsb
xor
inc
stos
outsl
cld
cmp
pop
pusha
les
adcb
movsl
mov
fists
or
cmc
mov
test
pop
mov
jmp
and
outsl
adc
xchg
test
ret
inc
mov
shlb
data16
xor
pop
and
out
inc
dec
bound
add
cmp
jmp
push
fs
cld
xchg
insb
push
jne
jo
hlt
scas
sub
sti
pusha
mov
aad
outsb
or
aaa
fistl
adc
sbb
push
pop
icebp
dec
lret
sub
in
xchg
out
or
mov
outsl
pop
cltd
dec
sub
fidivrl
or
push
xor
jae
cmp
xor
jns
adc
mov
push
shrl
out
and
sub
mov
inc
cmpsl
mov
xchg
cmpsl
lcall
pop
jmp
push
popf
dec
cmp
out
sti
test
imul
jne
pop
push
mov
add
in
rcrl
xor
mov
jae
movsl
sbb
sbb
repnz
cmpsb
jg
arpl
push
cmpsb
inc
and
enter
jge
dec
shlb
in
mov
sbb
mov
pop
shl
ficomps
cltd
jle
lret
push
test
xor
roll
adc
in
mov
sbb
add
pop
insb
xchg
jl
outsb
mov
out
sbb
dec
hlt
inc
int3
push
addl
flds
cmp
push
dec
sub
pop
pushf
decb
loope
jp
sbb
adc
add
das
sbb
insb
mulb
xstore-rng
cmpsl
add
out
lret
jge,pt
das
je
mov
mov
je
add
outsb
sub
mov
pop
mov
stos
addr16
add
test
inc
mov
push
or
sub
leave
or
mov
rorl
leave
std
ss
pop
sahf
jno
fisubrs
dec
adc
dec
aaa
scas
lahf
pop
and
dec
mov
push
cld
cmp
movsl
mov
arpl
add
ljmp
clc
fistps
movsb
inc
out
fisubrs
lahf
xor
into
cltd
ss
cmp
pop
or
into
push
and
mov
and
push
xor
cmp
std
mov
dec
cmp
cmp
arpl
or
sub
gs
in
push
mov
in
sbb
fisubrl
push
cmp
xchg
pushl
push
shr
and
mov
adc
shlb
mov
jg
fs
fildll
aad
pushf
shll
mov
push
pop
adc
es
filds
cmp
shll
and
ret
arpl
cmpsb
sub
mov
imul
jne
loope
sbb
mov
leave
fnstenv
in
pop
arpl
pop
xor
xlat
push
push
out
shlb
and
dec
mov
rcrb
mov
pop
xchg
push
sub
test
mov
sub
fsubl
jle
mov
xchg
inc
add
sub
mov
pop
sbb
add
add
clc
rcrl
ja
dec
imul
out
or
addr16
divb
movsb
pop
mov
mov
decb
in
ret
sarl
jle
insl
dec
adc
aam
dec
xor
les
gs
mov
loop
dec
push
mov
lods
inc
push
push
push
push
into
cmp
inc
lahf
mov
xchg
pop
mov
adc
out
aam
jo
ret
std
mov
add
pop
jecxz
xchg
popf
dec
dec
add
xchg
xchg
stos
dec
push
mov
lods
cld
sub
icebp
mov
insl
aaa
adc
jmp
cmpsl
push
lret
mov
repz
cmp
outsb
mov
fxch
roll
fbstp
add
stos
jo
aaa
pop
xor
sub
popf
cmp
aas
test
jnp
mov
hlt
fbstp
cli
xchg
sub
and
jns
or
dec
ret
sub
sbb
gs
aas
bound
out
aas
adc
scas
lcall
xchg
mov
das
sbb
in
cltd
sbb
sub
xchg
fs
fldl2t
jle
mov
fistl
adc
imul
and
xor
popa
sbb
out
cmp
cmpsb
pop
or
inc
dec
hlt
stc
add
fs
aad
push
dec
mov
shll
or
fbld
pop
and
adc
mov
mov
mov
pushf
pop
sbb
sbb
rolb
mov
add
mov
pop
mov
shl
or
mov
ja
or
cli
cmp
sbb
fs
cmpsl
add
push
xchg
aas
test
addb
sub
aas
mov
in
mov
jle
inc
xor
xchg
cmp
and
mov
subb
pop
pushl
mov
mov
dec
pop
sbb
repz
movsl
outsb
test
imul
in
mov
mov
or
xor
adcb
stos
or
in
jp
sbb
jmp
notl
add
sbb
test
dec
mov
cs
popf
cltd
insb
loope
push
pop
in
daa
adc
neg
cltd
aad
adc
adc
lods
xlat
enter
cs
repnz
fdivl
and
fsubs
xor
dec
inc
mov
dec
sbb
insb
sbbb
cmp
adc
lcall
inc
fs
adc
loope
repz
add
sbb
out
mov
test
jmp
and
jno
jns
out
jecxz
movsl
jmp
cli
ljmp
int3
jno
pop
and
test
jo
pop
add
lea
lret
outsl
call
mov
xchg
push
pop
mov
and
loope
lcall
fistps
iret
mov
movsl
nop
or
into
cmp
sti
mov
push
jle
cmp
out
adc
loopne
loop
mov
mov
arpl
xchg
rcr
ss
jg
and
mov
into
sbb
xchg
dec
ja
jo
xor
lods
pop
xchg
and
gs
call
inc
shrb
dec
mov
cmp
test
sar
icebp
rcr
loope
mov
jb
xor
enter
inc
iret
cs
insb
pusha
xorl
mov
mov
in
push
pop
add
cmpsl
fisubrs
pop
ss
std
add
insl
orb
inc
or
dec
cld
outsb
cmc
add
pop
outsl
add
lret
mov
jmp
add
test
jmp
into
rcrb
shlb
mov
inc
add
insl
xchg
pop
test
mov
insl
ret
es
sub
cmp
aad
ficoml
hlt
lret
xchg
repnz
push
jbe
mov
or
xchg
jns
mov
icebp
inc
shlb
inc
fists
stos
in
inc
cli
sarb
aaa
mov
movsb
mov
pop
sbb
mov
cmc
int
outsb
cs
fs
inc
adc
call
pushl
xor
cltd
xchg
adc
insl
lsl
divb
iret
dec
or
cli
push
pop
xor
push
fs
sbb
dec
fists
mov
loop
dec
add
out
scas
stos
aaa
sbb
rorb
adc
scas
cmp
jnp
cmpb
push
pop
rolb
imul
mov
jbe
mov
loopne
add
rorb
pop
mov
lods
leave
mov
push
add
enter
in
mov
dec
jae
cmpb
sub
addr16
pop
inc
add
mov
sub
bound
outsb
es
mov
inc
jno
inc
sahf
sub
pushf
cmp
stc
addl
xchg
in
sbb
jl
insb
dec
xor
xchg
mov
sub
jo
push
es
jle
xor
stc
dec
pop
sarb
inc
pop
push
sbb
jnp
jecxz
ret
push
and
jl
clc
mov
xchg
loop
add
addb
and
lret
outsb
and
add
jg
fsub
fstpt
cltd
ja
lea
and
icebp
and
xor
incb
sbb
dec
mov
jb
scas
in
xchg
dec
mov
popa
mov
loop
roll
icebp
lea
out
xor
jecxz
jbe
call
mov
arpl
mov
ret
mov
rolb
push
orb
cmp
and
pop
xor
push
sarb
loop
sub
sub
mov
xor
icebp
mov
mov
push
cmp
test
hlt
add
in
add
xor
dec
stos
sbb
repnz
and
adc
mov
add
stos
push
into
inc
and
in
inc
gs
mov
cmpsb
hlt
add
aaa
mov
es
out
ret
pop
out
das
fsts
push
fdivrs
insl
jo
xor
add
adc
cwtl
push
les
fs
inc
popa
ja
lahf
add
and
push
test
movb
insb
das
in
enter
sub
iret
lods
pop
dec
cmp
js
pop
inc
inc
icebp
es
mov
jg
pop
int
stc
and
jbe
mov
mull
loop
cmp
push
xor
rcl
int3
fmuls
push
ja
mov
cld
pusha
push
push
dec
mov
repz
jl
nop
adc
cld
loop
cmp
das
pushl
mov
sbb
or
jecxz
pop
lret
cmpsl
xchg
pop
xor
and
pop
outsl
lret
xchg
popa
push
xor
jo
cmp
xchg
mov
mov
xchg
xchg
and
andb
and
mov
mov
lret
std
mov
jmp
inc
xlat
rcll
adc
pushf
hlt
repz
push
pop
imul
jecxz
dec
cmpsb
adc
call
data16
mov
mov
sub
insl
sub
pusha
add
out
cmpb
mov
insb
inc
lock
lods
repz
add
sub
aaa
fildl
sbb
es
mov
mov
cmp
pop
or
hlt
icebp
or
inc
pop
cs
xchg
shrb
jp
sbb
lahf
jg
push
jg
add
lea
add
sbb
mov
insl
xchg
push
arpl
imul
inc
std
in
push
mov
and
mov
pop
dec
lea
sbb
out
ret
inc
and
outsl
adc
push
xchg
fwait
sar
jg
fcoms
in
mov
sub
xchg
cld
jmp
rolb
lods
pop
test
es
and
std
push
push
mov
push
lahf
push
mov
and
sbb
and
xor
add
jo
sub
or
inc
and
pop
adcb
call
xchg
xor
xchg
lds
jbe
mov
stc
push
pop
insl
xlat
sbb
jge
rolb
popa
and
push
fisubrs
pop
or
xchg
xor
mov
jo
push
cmpsb
mov
inc
imul
dec
testb
gs
out
sub
test
mov
xor
fisubrl
inc
ret
mov
xor
fcomi
imul
xchg
shlb
ljmp
push
rorl
jb
pop
cmp
insl
jnp
mov
mov
lea
scas
call
in
cld
xor
xchg
jae
mov
mov
pusha
or
add
jns
out
pusha
pop
shrl
ret
xor
rorb
dec
mov
shll
ficompl
rclb
fs
fisttps
add
negb
jns
adc
push
pop
je
fdivp
loop
cmp
fnstcw
lods
sub
pop
pop
arpl
xorb
cmp
enter
ret
insl
add
fmull
cs
movsb
test
ret
scas
aad
imul
insb
jge
fisubrs
stos
inc
outsb
xchg
xor
cs
pop
cmp
mov
push
lcall
push
cmp
sbb
add
test
mov
pop
adc
shll
movsl
sbb
stos
dec
ss
push
imulb
add
push
sar
es
lea
ret
or
pop
icebp
push
roll
xor
mov
sub
mov
fsub
add
or
add
lahf
xchg
xchg
scas
ret
out
shr
mov
mov
adc
ss
jle
adc
popa
ljmp
jg
xor
xor
ret
shrl
pop
test
lods
jl
mov
test
mov
add
pop
inc
lock
xchg
clc
icebp
or
mov
push
sbb
push
or
cs
fists
xchg
cmp
dec
std
jae
jo
sub
pop
movsb
daa
enter
pusha
sub
ds
xchg
mov
andl
in
sub
gs
mov
lahf
mov
pop
pop
sbb
lods
xchg
mov
out
dec
push
outsb
sbb
sbb
and
pop
or
pop
ja
mov
add
cwtl
scas
mov
pushf
xor
aam
push
lcall
das
and
jmp
addr16
stos
loop
ja
xchg
cmp
dec
push
call
jecxz
sub
rolb
std
icebp
aam
or
mov
pop
ret
in
shlb
mov
outsb
inc
ss
adc
or
dec
mov
mov
inc
gs
dec
sti
jmp
enter
popf
mov
mov
jno
jl
stos
sbb
in
rorl
aam
ds
add
mov
sub
mov
mov
dec
jb
or
addr16
jecxz
jmp
push
and
sub
lods
mov
aad
repz
js
mov
insb
loope
rorb
dec
lahf
je
jmp
aad
cmp
xor
pop
dec
iret
adc
or
mov
cld
cmp
insl
dec
data16
jo
in
push
cmp
pop
stos
inc
scas
sub
or
jae
mov
sbbl
insl
les
cwtl
xor
je
push
jae
int
xor
cltd
les
pop
fildl
cld
das
adcb
mov
or
ja
iret
cmp
jns
iret
mov
into
mov
imul
cmp
push
sbb
imul
push
in
aaa
out
push
notb
jns
popf
and
fs
cli
sbb
addl
aaa
fisubrs
sub
lahf
xchg
in
icebp
fidivl
roll
test
push
sub
mov
leave
cmp
sbbl
sbb
lods
xchg
adc
inc
mov
std
leave
mov
aas
fcmovnu
cmp
loopne
andb
add
daa
pop
push
ds
cltd
sub
idiv
and
adc
push
push
sub
aad
jo
enter
mov
je
mov
and
xor
nop
test
pop
jo
sbb
insl
pusha
pushf
and
lret
jge
lods
stos
lret
sub
cmp
das
sub
dec
jp
incl
sbb
xorl
push
icebp
dec
cmp
xchg
sbb
in
mov
pmulhuw
outsb
fldcw
inc
aad
push
or
out
or
pop
xor
pop
mov
xlat
test
inc
xchg
icebp
enter
jns
jmp
sbb
inc
je
loope
repz
or
sbb
cmp
stos
jb
push
fwait
rorl
mov
pop
test
sarl
push
or
mulb
push
sub
addr16
fwait
loopne
jmp
rcrl
xor
cmpsl
pop
cmpsl
mov
repz
in
mov
pop
add
popa
xchg
cmp
sbb
lods
daa
popf
in
or
rclb
cltd
mov
ret
int
and
and
loope
push
dec
loop
ja
int3
push
das
mov
icebp
adc
or
inc
movsb
jge
and
and
push
stc
leave
mov
lret
sub
push
imul
push
cmp
add
jg
ja
pusha
dec
ss
sbb
sub
lods
bswap
and
pop
movl
add
stc
ss
xor
xor
push
lds
xchg
les
add
in
lods
push
cltd
push
leave
add
iret
xchg
ret
sbb
sub
cmc
pop
std
repz
push
mov
mov
push
and
jnp
mov
lret
push
or
lcall
mov
jbe
sub
and
jne
fcmovnb
ja
mov
sbb
inc
sti
ret
dec
jns
insb
lahf
ja
mov
lret
jno
out
insl
popf
jmp
mov
inc
xor
aas
repz
fimull
into
adc
pop
addr16
sahf
xchg
jnp
pop
cwtl
add
and
sbb
mov
and
aam
fmul
inc
add
leave
aad
add
sbb
mov
mov
push
push
mov
xchg
push
push
jmp
sbb
add
ds
test
dec
pop
fdivl
pop
push
mov
xor
mov
inc
pushf
int3
cmpsb
adc
scas
lods
xchg
xor
adc
loopne
roll
cmp
add
add
mov
mov
rolb
ljmp
stos
ljmp
in
dec
fsub
in
inc
sub
cmp
fwait
cli
push
jns
or
push
push
into
mov
daa
cmp
into
dec
adc
fldt
out
cmp
sub
bt
idivb
cmp
in
mov
lods
call
mov
shr
mov
sbb
in
jg
mov
jns
test
jne
dec
sub
cmp
xchg
cltd
inc
pushf
jb
popl
cmp
repz
pop
sub
xor
cmpsb
mov
pop
cmp
xor
repz
sti
jle
std
dec
aaa
frstor
xchg
push
pop
sbb
or
in
cmpsl
call
test
lods
sub
xor
repnz
pop
cmpsl
movsb
insl
cmp
inc
add
dec
inc
stos
or
mov
movsl
mov
les
xlat
bound
insb
push
lret
call
pop
xchg
jns
ficompl
je
in
movsb
std
jp
idivl
addl
ret
mov
testl
imul
jne
inc
jnp
dec
cmp
mov
mov
fs
mov
sti
xchg
fildl
add
ljmp
inc
mov
add
movsl
push
xor
aam
mov
or
xlat
mov
lods
ret
push
mov
lret
dec
xor
jns
addr16
jo
out
divb
mov
pop
push
cli
in
xchg
xchg
xchg
pop
push
mov
jns
push
ret
insb
mov
inc
lahf
jl
aas
rcr
mov
jl
cmp
fsub
test
xchg
mov
cli
mov
inc
and
cmp
pop
shll
int
les
loope
mov
cs
mov
scas
xor
lahf
lret
adcb
sbb
jle
pop
mov
mov
scas
pop
push
dec
shlb
mov
or
shl
jno
dec
pop
and
imul
out
pop
call
ficomps
sub
dec
inc
cmp
lods
jnp
aam
test
arpl
xor
jnp
add
fwait
iret
shll
mov
outsl
or
out
and
pusha
movsb
aad
out
mov
cmc
pop
pop
test
sub
sbb
ret
push
ja
notb
cltd
shlb
mov
jle
loopne
add
and
sbb
mov
leave
in
popa
cmp
aas
fidivrs
xchg
jns
das
loope
push
dec
addl
scas
in
sub
sbb
xchg
addl
pop
enter
mov
test
add
pminub
push
push
mov
pop
or
rorb
icebp
leave
stc
pop
popa
std
dec
int
mov
cwtl
lret
sub
jb
jns
repnz
pop
mov
pop
jg
adc
test
push
repnz
push
xor
repnz
jbe
test
test
nop
add
daa
push
test
add
ljmp
sub
adc
popa
popa
insl
repnz
add
adc
popa
xor
call
push
cmp
aas
fs
aad
flds
push
and
push
or
imul
xchg
push
bound
rcrl
adc
adc
aas
cmp
sub
test
jmp
loop
jle
and
xchg
mov
pop
pushf
mov
nop
into
test
sbb
out
fadds
mov
leave
aam
and
out
xor
or
popf
into
dec
in
adc
lods
push
xor
into
sbb
daa
subb
ss
sbb
cmp
das
or
push
leave
or
aad
aad
mov
and
out
cs
int3
in
rorb
rorl
pop
mov
jmp
add
mov
mov
jnp
add
mov
jns
mov
xor
mov
sti
int3
dec
repnz
inc
mov
cmpsl
mov
jbe
fcomp
stc
mov
sbb
gs
daa
cs
jne
dec
lret
lcall
mov
bound
mov
fstl
xchg
div
xor
std
jl
adc
out
or
andb
xchg
leave
jmp
addr16
sbb
test
in
cmpl
adc
lods
push
mov
push
lret
cmp
sbb
cmp
test
aas
jle
rcrb
sbb
pop
paddusw
xchg
and
push
icebp
movsl
icebp
dec
dec
in
pushf
stos
lods
cwtl
cmp
xor
mov
ss
andl
inc
cmp
mov
movd
adc
xchg
int3
iret
ljmp
xor
push
cld
or
lock
ss
mul
sbb
jg
loopne
into
adc
shl
mov
pop
mov
out
sbb
stc
scas
adc
push
bnd
push
js
mov
mov
mov
ja
int3
mov
jmp
mov
and
jne
inc
sbbl
dec
negl
and
jg
xor
jo
movsl
mov
movsb
mov
mov
pop
push
mov
dec
cmc
jp
mov
rcll
enter
ds
lcall
pop
insl
movsb
mov
insb
or
je
mov
rol
jbe
pop
out
iret
outsl
test
insl
dec
dec
jg
push
lret
cmp
cmp
imul
icebp
push
jnp
sub
mov
adc
mov
lea
mov
sbb
inc
lret
and
inc
mov
ret
cmpsb
movsb
pop
mov
int
jge
in
and
inc
inc
in
cmpsb
adc
jno
add
in
and
jge
dec
cmp
jo
mov
cmpsb
mov
or
dec
and
sahf
xchg
out
xchg
mov
aaa
jbe
add
and
jns
mov
ret
mov
push
mov
push
push
and
nop
dec
cmp
fidivs
jg
ret
iret
pusha
pop
sub
imul
sub
add
inc
das
dec
dec
add
loope
push
jo
inc
xlat
movsl
arpl
mov
add
and
add
mov
in
sub
jp
add
ret
test
insb
push
xchg
filds
pop
mov
call
ds
push
movsb
cwtl
bound
add
cmpsb
add
call
aaa
xchg
sahf
xor
push
jbe
cmp
adc
mov
push
lcall
in
dec
mov
push
push
add
lret
aaa
shlb
xor
movsb
push
cld
and
cmc
mov
cmp
stc
imul
decl
dec
je
mov
ret
push
cmc
push
jae
xchg
in
mov
sub
dec
mov
pop
sbb
push
cmp
fstpt
adc
and
mov
inc
daa
add
mov
jae
ficompl
jmp
nop
push
mov
pushl
stos
xchg
and
jo
mov
xchg
push
mov
ja
mov
rcrb
dec
push
cmp
ror
dec
push
das
or
pop
gs
adcl
mov
je
or
inc
dec
lcall
imul
pushf
arpl
fsubs
loope
fxtract
cmp
mov
xchg
xor
and
imul
pop
mov
loop
jne,pt
repz
inc
in
sub
and
jnp,pt
lret
frstor
mov
repnz
fidivl
dec
bound
sub
jne
pop
in
hlt
arpl
jmp
loope
sbb
xchg
add
adc
mov
jp
and
jne
outsl
out
je
push
mov
mov
sub
mov
inc
mov
mov
or
xor
into
fnsave
rorl
jnp
mov
mov
cmpsb
je
jl
xor
and
xchg
pop
ret
shr
insl
xchg
adc
xor
outsl
ja
div
jo
pop
cli
mov
push
arpl
js
xchg
and
dec
add
and
test
pushf
clc
cmp
enter
push
nop
sarl
mov
out
push
mov
sahf
es
mov
push
lods
sub
les
jbe
out
in
jo
insl
ror
jl
mov
sub
inc
cmpsl
fdivl
xchg
xchg
push
int
jmp
push
out
testl
jl
aas
inc
insb
in
sub
jnp
dec
adc
out
shlb
adc
sbb
jl
mov
add
fistpll
cmp
fimull
fisubrl
rolb
mov
aad
add
cmpsl
rclb
xchg
pop
fsubp
jns
adcl
adc
pop
out
popa
movsb
mov
jne
push
cmpsl
or
adcb
popa
or
aaa
and
lret
or
sub
stc
mov
cmc
or
mov
add
iret
loope
pop
mov
add
leave
xchg
mov
rolb
xor
adc
push
pop
pop
cs
sub
stos
mov
test
xchg
out
pop
out
push
xchg
test
aaa
cltd
adc
sub
lcall
push
cmpsb
sub
jbe
xor
ficompl
or
adc
out
aas
sbb
ljmp
mov
pop
adc
cli
rolb
mov
xchg
xor
inc
movsb
lahf
and
and
insl
sti
dec
pop
loop
dec
mov
mov
std
xor
fwait
aas
testl
int3
aas
loope
adc
je
in
sti
std
jns
fisttps
sarb
or
inc
mov
les
in
inc
mov
mov
adc
out
or
enter
adc
insl
add
cmp
fisubrs
xchg
clc
inc
sti
frstor
mov
pop
xchg
pop
mov
lret
pop
sub
inc
fdivrl
lret
into
fsts
xchg
adc
scas
jbe
fwait
ja
sbbb
adc
data16
nop
adc
into
push
pusha
dec
push
sub
jge
xor
test
repnz
test
sub
jle
inc
lds
stos
popf
sbb
pop
push
or
sbb
xor
or
add
dec
mov
xchg
push
jl
imul
lods
add
ret
dec
sahf
sub
or
in
test
rorl
or
pop
fmull
rorl
push
or
out
mov
dec
pusha
inc
fadds
push
xchg
sub
cmp
adc
xor
dec
mov
inc
or
out
stc
nop
testb
and
sub
xchg
mov
int
push
jp
jo
movsl
out
mov
sub
stos
adc
mov
cmp
inc
dec
cs
adc
push
pushf
sub
push
aad
testl
out
nop
das
ret
insl
cmp
loop
adcb
scas
pushf
mov
dec
push
jns
out
sti
add
popf
adc
jns
or
sbb
in
dec
fsts
push
xor
pop
fwait
mov
test
arpl
mov
mov
dec
pop
fnstcw
jl
push
xor
in
lea
daa
repz
ret
push
jl
push
push
cmpb
push
jne
mov
faddl
push
sub
rcrb
jno
adc
pop
sub
in
xlat
fidivrl
xchg
jp
std
in
out
lock
inc
orl
and
adcl
inc
lahf
insb
dec
int
xor
sbb
cs
dec
out
xchg
je
into
mov
dec
mov
sub
ss
or
insb
mov
stos
xchg
adc
mov
xor
mov
cmc
mov
pop
lds
ss
je
push
push
or
push
and
inc
nop
lret
jmp
rcr
and
and
push
xorb
pushf
and
mov
je
add
lock
push
stc
aad
imul
test
adc
push
xor
push
inc
lods
inc
xchg
jg
arpl
inc
iret
outsb
adc
leave
in
mov
sbb
int
push
mov
test
mov
ret
xor
in
mov
dec
sarb
inc
icebp
cmp
or
addb
or
inc
jo
mov
jecxz
xlat
clc
xchg
sub
outsb
push
shr
dec
in
adc
cmp
inc
lock
arpl
jmp
int
sbbl
dec
fbld
jae
je
and
sub
movsl
ss
xchg
cwtl
mov
aas
push
mov
mov
test
addr16
and
cmpsb
dec
mov
shlb
jmp
dec
enter
add
and
enter
adc
push
hlt
add
dec
ficoms
iret
adc
lret
ss
ljmp
jmp
adc
fs
inc
mov
lret
inc
adc
test
into
cltd
pop
sub
and
inc
jmp
mov
int
in
jle
inc
jnp
dec
negb
mov
jo
dec
stos
imul
loopne
lret
sbb
test
mov
cmp
pop
mov
mov
loopne
imul
xor
je
divw
cmp
mov
test
and
mov
nop
and
aad
cmp
inc
cmc
push
mov
inc
cmc
lea
test
dec
and
or
imul
and
test
cli
inc
dec
fdivrl
lcall
push
push
lods
sti
shl
or
dec
out
fs
loope
js
adc
nop
out
fsts
jo
shr
enter
add
movsb
callw
cmc
pusha
or
xchg
in
push
fwait
cmp
mov
stc
outsl
cli
mov
pop
test
jmp
xchg
push
jns
add
incl
jle
or
es
outsb
ret
cmp
adc
lahf
popf
test
jae
jge
dec
imul
call
cmp
scas
dec
push
cltd
sti
push
out
and
dec
enter
jmp
xor
lods
adc
sti
lods
or
popf
and
shl
jp
or
push
loop
and
out
xchg
test
mov
jnp
push
sbb
sbb
repz
xchg
mov
sbb
stos
xor
fisttps
adc
pop
test
fwait
out
pop
sbb
aad
stc
adc
jb
or
je
push
push
inc
test
lods
jg
adc
xor
dec
cmp
mov
jp
add
push
fucomip
push
sub
pop
lods
in
mov
jl
loope
mov
xchg
inc
mov
mov
mov
xor
jmp
cltd
outsl
xchg
into
daa
jo
neg
mov
lea
push
sub
call
sub
dec
mulb
cvtdq2ps
leave
out
subl
adc
aad
cwtl
pusha
loop
push
dec
pop
int
adc
int
stos
ror
pop
adc
push
aaa
cmp
scas
or
sbb
mov
push
pusha
gs
jo
mov
cld
pop
fadds
mov
lcall
pop
cmpsb
cmpsl
pushl
or
lahf
lret
popf
xor
lret
mov
jae
int3
jbe
je
sahf
cmpsb
out
add
or
pop
fsubl
ret
std
adc
pusha
int3
fnstenv
pop
int
pop
inc
out
scas
in
icebp
leave
inc
xor
or
pushf
hlt
jecxz
in
test
fcomps
mov
push
mov
xlat
push
cwtl
or
pop
cld
roll
cmpsb
lahf
cltd
inc
fucomp
test
mov
adc
sub
jl
jbe
adc
cmp
adc
add
pop
f2xm1
xor
xchg
xchg
or
and
push
dec
mov
hlt
cmc
mov
lret
mov
xlat
lahf
sarb
sti
hlt
jmp
fisttpl
pop
fldcw
ret
mov
xor
pop
and
push
pop
ret
ret
xor
push
dec
pop
stc
sahf
sbb
enter
mov
sub
lret
cmpsl
movsb
int
cmp
ljmp
sbb
aas
sti
ret
mov
xchg
xor
test
es
andb
adc
sbb
mov
jmp
shl
add
scas
hlt
lods
hlt
xor
lret
popa
cwtl
or
add
scas
sub
mov
push
xchg
push
dec
or
mov
xchg
adc
imul
add
test
mov
mov
je
push
add
int
mov
mov
cmp
movsl
xchg
jne
inc
dec
adc
int3
sbb
mov
enter
cld
cmp
pushf
push
loope
jno
mov
xlat
fldcw
lahf
cmp
test
xchg
fst
rol
pop
mov
jle
and
mov
xor
shll
pop
dec
cltd
adcl
push
test
mov
test
pop
xor
lea
add
fmull
jb
movsl
hlt
sbb
fiadds
outsb
mov
add
sahf
in
int3
ljmp
mov
xchg
add
mov
aaa
dec
fnstenv
in
cmp
mov
push
xor
cmc
inc
dec
inc
pop
adc
push
in
mov
jbe
mov
in
rcrb
mov
or
fdivp
test
add
and
jns
cwtl
mov
das
loope
leave
hlt
int3
rcll
add
aaa
xchg
inc
movsl
fcomip
jbe
jle
leave
test
dec
sbb
out
out
xchg
fdivp
pop
mov
push
and
loop
xchg
adc
out
mov
xchg
adc
jae
mov
mov
sbb
mov
cli
push
dec
push
idivl
sbb
fcomps
mov
cli
js
into
sbb
sbb
pop
cmp
mov
sub
hlt
cmpb
cmp
mov
xor
mov
push
inc
mov
mov
je
in
cmp
or
inc
add
adc
fwait
jge
fimull
sub
mov
fs
pop
movsb
popf
jl
push
add
push
and
push
test
mov
jg
cwtl
inc
mov
aas
lcall
push
sbb
mov
test
add
sbb
xor
test
out
lcall
mov
nop
and
sbb
mov
xchg
int3
add
aaa
shrb
push
sub
popf
adc
mov
lcall
testl
sbb
pop
sbb
mov
dec
sub
int3
push
pop
loope
cli
cmpl
xchg
sbb
sbb
loope
inc
fsubrs
or
clc
pop
xchg
sbb
subl
xor
das
jnp
mov
mov
orl
outsb
out
or
mov
pop
sub
lods
lods
mov
adc
ja
insl
repnz
sub
mull
xlat
and
adc
stos
pop
add
cmp
mov
jnp
add
pop
adc
les
dec
cmc
into
xchg
or
mov
mov
and
outsb
into
mov
lea
les
outsb
cmpsl
pop
add
sarl
and
lock
scas
pusha
pop
or
aaa
aas
xor
mov
xchg
fistl
sbb
inc
and
nop
test
xor
pop
xchg
or
jmp
imul
fcompl
loop
aas
mov
push
and
sbb
negl
adc
aam
xchg
imul
dec
push
pop
add
fsubr
jnp
and
sarl
es
pop
fcomps
cmp
gs
outsl
ja
insb
sub
xchg
jns
sti
cwtl
in
xor
sub
push
xchg
mov
bound
pop
insl
xor
xchg
pop
stos
out
sahf
je
aaa
mov
cwtl
movsb
adc
imul
cmp
sti
rcrl
cmp
call
mov
push
fidivs
xor
out
push
sbb
push
xor
pushf
cmp
cmp
cmp
and
int3
ret
push
inc
or
cmpl
push
packssdw
lret
xor
loopne
das
in
stc
pop
dec
pushf
rcll
mov
pop
stos
gs
icebp
cmp
out
sbb
cmp
testb
cmp
or
out
push
fnstenv
cli
enter
sub
cmp
mov
repz
aaa
cli
inc
jmp
pop
outsl
leave
mov
inc
clc
sbb
mov
sub
push
out
jbe
cmp
rcll
fst
mov
inc
ret
int
cld
rcll
cmpsb
int3
cmp
in
inc
mov
popf
orb
das
add
mov
call
aaa
mov
loop
in
filds
mov
das
pop
aas
adc
loope
mov
cmp
mov
sbb
push
pop
incl
inc
or
inc
cld
cmpsb
xor
shrb
subl
xorb
jne
rcrb
xchg
mov
adc
jbe
push
add
pop
mov
adc
fdivs
mov
pop
in
cmp
mov
call
int
push
or
shl
in
push
jecxz
lock
negb
loope
in
imull
js
shlb
imul
jl
ljmp
stos
and
mov
or
es
mov
dec
push
mov
mov
and
dec
adc
add
inc
pop
es
pop
lea
jae
pop
sbb
xchg
dec
outsb
push
xchg
fsub
outsb
pop
icebp
ja
ljmp
mov
inc
sub
adc
push
fisubl
aas
add
andl
int3
cmp
jmp
popf
pop
nop
adc
mov
outsb
movsb
sbb
stos
cmpb
mov
lcall
jns
aad
cld
fsubrs
mov
and
jl
imul
cmp
jo
pop
mov
dec
pop
mov
and
pushf
or
gs
sub
fildll
jae
dec
out
fimuls
fidivs
inc
imul
lret
push
cmp
aas
inc
js
pop
sub
and
dec
sarl
shrl
dec
sbb
movsb
std
xchg
pop
arpl
stos
xchg
push
jno
cmp
push
cs
push
mov
das
repz
and
mov
mov
loop
mov
cltd
xchg
std
mov
dec
jle
aam
je
leave
push
adc
push
pop
xchg
and
in
dec
inc
ret
imul
int3
or
lods
std
dec
or
aas
mov
fildl
xorb
mov
dec
int
xchg
stc
ficoms
pushf
shr
cmp
and
int3
pop
aam
lods
push
jecxz
inc
les
and
mov
pop
mov
pop
ja
xor
cmp
adc
pusha
fldenv
mov
cmp
jnp
inc
fidivl
mov
jg
decb
andl
sbb
aaa
loopne
jb
in
aaa
fadd
pop
into
in
push
mov
adc
sub
outsb
sub
lret
ficomps
xchg
sbb
cs
dec
imul
push
mov
std
shlb
clc
das
push
or
jne
push
inc
cld
mov
adc
stc
loope
arpl
clc
mov
outsb
in
push
adc
rcrb
pop
xchg
shrb
in
or
jle
add
adc
xchg
push
mov
cmp
aas
mov
enter
inc
xchg
add
or
mov
cld
sub
pop
push
out
sahf
dec
rcrl
push
adc
mov
sbb
xor
ret
popa
dec
test
js
jmp
push
sti
sbb
xchg
sahf
cmpl
mov
add
mov
cmp
daa
and
int3
sub
cmp
sub
pop
xor
inc
cs
int3
push
dec
push
fisubrs
lods
or
cs
and
popa
jb
ja
dec
pop
mov
jg
clc
adc
adc
inc
mov
insl
xchg
incl
mov
xchg
xor
mov
sub
and
sub
adc
mov
les
sarl
cmp
pusha
pushf
insl
out
push
fidivs
and
neg
sub
add
fcomp
adc
jno
pushf
in
sub
inc
jne
loope
test
jbe
push
stos
lock
inc
pusha
pop
and
push
dec
mov
lods
shrb
ja
repz
lret
out
std
jle
out
cmpb
pop
lds
es
lods
pop
fidivrl
cmp
dec
ret
jecxz
jnp
inc
outsb
or
mov
xchg
push
pusha
iret
sub
add
add
aad
cmp
sarl
nop
test
xchg
imul
jb
lret
aad
mov
out
mov
pushf
insl
pop
add
add
mov
add
cmp
mov
push
or
cmp
pop
inc
add
fbld
jge
pop
stos
jmp
ret
hlt
mov
test
xchg
mov
fcmovb
call
inc
sbb
je
jmp
lcall
jo
cmp
xchg
mov
xor
test
adc
fstpl
les
cli
std
jns
daa
stc
mov
push
sub
scas
fisttpll
add
mov
jno
fsubr
fs
loope
into
movd
test
mov
sar
mov
push
repz
and
mov
push
sbb
loop
fsubrs
jae
loop
ret
or
arpl
mov
int3
pop
movsl
in
add
mov
dec
out
jae
push
outsl
aaa
mov
sahf
mov
call
xor
or
xor
mov
fcoml
aas
test
mov
daa
or
out
leave
shrb
push
mov
and
adc
stos
shrl
jns
pop
sbb
std
or
mov
xchg
adc
fwait
and
loop
imul
lock
lock
cmp
push
cmp
jbe
pushl
test
icebp
les
mov
push
shlb
xor
adc
sbb
lds
xor
cmp
xchg
push
popf
dec
stc
push
sbbb
ret
cmpsb
mov
fimull
nop
incb
jns
insl
into
inc
sbb
jnp
leave
pusha
ret
add
shll
push
ljmp
pushf
xor
in
movsl
in
cwtl
push
call
fptan
sub
pushf
stos
dec
and
stos
fiaddl
scas
mov
add
jns
xchg
add
add
pusha
or
outsb
mov
inc
mov
add
das
add
cmc
cli
sahf
aas
out
es
mov
push
ret
movsl
lea
jp
cld
add
pop
insl
dec
subb
cmpsb
gs
sbb
add
std
addl
mov
and
pop
pop
xor
lea
sub
xchg
cmc
frstor
xchg
mov
add
push
fisubs
mov
test
and
imul
xchg
pop
and
pop
int3
sub
push
xchg
push
mov
scas
out
push
shrl
add
adc
lcall
xchg
les
add
mov
test
xor
jbe
loop
hlt
setno
mov
or
push
mov
push
insb
les
mov
test
or
inc
sub
in
pusha
ret
inc
cmc
inc
and
ja
cvtpi2ps
idivb
jne
lcall
lahf
dec
inc
inc
mov
cmpsl
add
or
adc
fisttps
inc
sbb
and
mov
test
rcl
mov
in
call
imul
outsl
xor
push
test
mov
inc
xchg
mov
daa
mov
dec
sub
mov
sar
cmpsl
repz
in
inc
fldl
aas
mov
pop
lods
rcll
lahf
dec
stos
cltd
in
jns,pt
push
frstor
call
stos
imulb
mov
push
xchg
and
cmc
adc
adc
fistps
xor
adc
test
call
repnz
hlt
inc
xchg
xchg
jp
jmp
cmpsb
cld
add
sbb
movsb
mov
into
push
out
mov
shrb
and
sbb
inc
xchg
jns
add
cmc
mov
lahf
stc
test
mov
jbe
mov
mov
std
mov
lret
addr16
dec
jbe
imul
jl
fsub
imul
dec
pop
enter
sbb
pop
push
sbb
jmp
outsl
mov
inc
sbb
nop
pop
dec
xchg
xchg
fisubrl
repz
std
lahf
mov
cmp
mov
jl
inc
or
jae
test
je
pop
adc
mov
mov
lock
mov
out
xor
cld
fmull
dec
negl
fmull
mov
pop
aad
mov
xlat
stc
lea
adc
sahf
jmp
and
xor
mov
testl
mov
inc
divl
out
mov
cmpsb
mov
pop
or
in
out
mov
jle
sti
fsts
sub
out
xor
leave
sbb
inc
cmp
sub
xor
sub
shl
lret
imul
adc
sub
daa
rcrl
pop
jae
xchg
dec
sbb
or
dec
xchg
mov
in
xchg
mov
inc
xchg
inc
and
dec
fwait
mov
into
push
dec
les
jp
mov
stos
call
fwait
js
dec
cmpsb
mov
shrb
xor
xor
out
cmp
xor
jmp
xchg
cmp
mov
mov
mov
mov
insb
cltd
lds
xor
mov
sbb
stos
jne
pop
add
inc
or
sahf
scas
iret
rol
cmp
inc
out
push
mov
xor
sub
lret
shlb
mov
lock
xchg
sub
jns
mov
fwait
bound
push
sahf
xchg
push
inc
insl
mov
jns
ds
ss
push
rorl
cmp
sub
sbb
fadds
mov
mov
add
xor
jae
outsb
lods
mov
int
adc
xor
add
scas
adc
mov
in
rorb
dec
add
gs
sbb
add
arpl
aad
lods
js
in
sbb
cmp
mov
push
jbe
and
fisttps
xchg
movsl
xor
stos
xchg
lret
outsl
inc
andl
pop
sub
xor
repnz
mov
mov
or
aaa
mov
adc
sub
sbb
push
dec
cmp
sbbb
mov
test
add
jmp
ret
push
mov
cltd
pop
or
int
inc
xor
pop
hlt
mov
fs
sub
fs
cmc
xchg
rolb
movsl
pop
shl
insl
xchg
add
das
push
inc
mov
xchg
loop
add
aad
outsl
lret
cmp
fdivr
adc
ret
and
mov
mov
sub
push
stos
mov
sbb
fiadds
fwait
jge
ret
xor
pusha
das
push
pop
and
mov
dec
lret
repz
mov
out
xchg
dec
cltd
xor
adc
jbe
mov
pop
lods
sbb
flds
lds
sub
push
rcr
cmp
mov
cmp
mov
push
mov
pop
gs
test
es
movsl
faddl
cmp
mov
pushf
pop
imul
loopne
scas
mov
sbb
fdivs
fs
sub
test
call
push
mov
fcoml
loopne
sub
rolb
adc
je
loope
in
sahf
scas
dec
xor
movsb
jl,pn
xor
movsl
or
push
xchg
cmp
aad
bound
and
dec
sub
xchg
sub
add
mov
aad
pop
movsl
xchg
and
push
pop
mov
out
shlb
fadds
mov
cmp
pop
int3
je
lret
cld
cmp
jns
dec
xchg
sbb
add
dec
or
sarb
mov
negl
scas
push
test
bound
ret
inc
cmp
lahf
mov
enter
jns
pop
fcmovb
inc
jecxz
jmp
pop
mov
shr
jbe
fsts
xchg
movsb
or
push
fdivrl
add
cmc
mov
hlt
sub
fistpl
in
cld
lcall
xor
ljmp
pop
mov
ljmp
inc
add
inc
push
repnz
dec
mov
es
cs
test
gs
fildll
pop
add
arpl
lret
mov
mov
int3
cltd
dec
jl
cmp
and
in
xor
ss
sbb
and
test
jbe
es
jbe
xlat
daa
inc
mov
pop
faddl
loope
es
scas
xchg
pushl
pop
fstpl
xor
mov
dec
mov
out
mov
mov
adc
dec
or
ret
iret
mov
adc
jno
ficoml
out
rep
lcall
outsl
jo
fstpl
pushf
jns
mov
pop
push
cmc
pmaxub
call
sbb
push
hlt
cltd
mov
adc
mov
mov
mov
mov
sbb
movsl
xor
push
insl
loopne
ljmp
inc
dec
inc
pmullw
fsubs
scas
loopne
mov
add
div
dec
or
mov
xor
lods
sub
xchg
jns
enter
and
mov
loopne
sub
lret
out
push
lock
adc
push
or
ja
cmpsb
aam
and
mov
mov
adc
ss
pop
xor
push
fwait
add
xlat
sti
test
pop
dec
outsb
adc
cltd
xor
das
incb
inc
sbb
jae
lods
scas
inc
jnp
sub
dec
mov
cmc
adc
sub
inc
mov
in
add
mov
sbb
push
fldenv
adcb
icebp
inc
jp
cmp
jg
xchg
dec
or
jns
jno
test
inc
xor
push
xchg
adc
or
or
adc
add
sbb
icebp
pop
cli
xchg
in
call
leave
lret
cli
pop
dec
rorb
and
xor
and
jnp
pop
jge
jp
cmpsl
push
fidivl
cmp
sub
ret
push
lds
and
push
notb
sub
mov
shr
jns
sbb
push
mov
pop
push
push
adc
jl
rcll
xor
xor
xchg
jecxz
xor
jmp
cmpb
sub
adc
loop
daa
inc
js
subb
push
out
adc
or
jne
loop
mov
rcl
cmp
lea
xor
pop
das
lds
mov
movsl
jmp
pop
mov
mov
enter
dec
dec
dec
std
cltd
and
xor
lds
outsb
sub
dec
add
imul
in
jg
or
mov
lods
push
subl
sbb
inc
xor
and
pop
xchg
mov
lods
pop
leave
rcll
fidivrs
test
movsb
lahf
inc
mov
test
sbb
cmp
scas
dec
movsl
cvtps2pd
jecxz
push
push
stos
shl
xchg
cmp
cmp
push
push
mov
push
sub
jmp
mov
adc
mov
aad
rcrb
sbb
aaa
xor
ret
sbb
dec
or
mov
mov
jg
les
sub
out
movsb
jl
add
lds
pop
jle
dec
mov
icebp
cmpsb
lds
pop
orl
enter
inc
xchg
mov
cmp
push
jne
mov
aas
and
add
cmp
aaa
gs
sbb
lods
push
es
bound
mov
fwait
push
jae
out
mov
sub
roll
mov
mov
fldt
pop
add
mov
mov
mov
adc
ret
fisttps
xor
xorps
push
mov
add
dec
icebp
xchg
mov
scas
dec
and
imul
inc
data16
test
and
loope
fbld
sbbl
imull
xor
imul
je
imul
sub
sti
pushf
xor
add
les
inc
les
in
and
jo
adc
inc
loope
push
push
sbb
pusha
mov
cmpsb
jp
clc
xor
sbb
xchg
sbb
mov
testl
imul
mov
ret
or
jb
dec
in
cwtl
mov
das
movswl
add
push
insl
xchg
pushl
aad
mov
sbb
mov
pop
jo
adc
sahf
rorb
xchg
aam
pop
push
int3
push
sub
rcll
js
dec
xchg
xchg
fists
add
xor
adc
jle
loopne
fs
aad
in
mov
push
lret
fsts
xchg
clc
out
adc
and
push
pop
std
aad
int3
cmp
add
adc
or
movsl
adc
adc
jbe
in
das
add
aam
movsb
xor
add
jnp,pn
jae
mov
inc
pop
pop
push
scas
incb
mov
sub
push
push
cmp
cs
popf
sti
mov
lds
xor
les
xor
lahf
loopne
int3
mov
es
test
into
adc
push
add
and
inc
jne
xor
sbbb
xorb
fidivrl
imul
rolb
jns
ja
sbb
xor
bound
jle,pn
sub
dec
iret
fildl
cmp
cltd
mov
mov
or
aad
imul
pop
idivb
es
imul
imul
jge
fs
leave
in
push
int
push
jne
adc
pop
imul
xchg
das
xchg
loopne
aaa
pop
inc
mov
aad
jb
fisttpl
cmp
push
fs
jae
jg
inc
sahf
sbb
outsb
jmp
push
daa
dec
push
push
ret
mov
pop
loopne
es
pop
adc
or
cmpsl
ret
call
aaa
xlat
or
push
iret
or
std
mov
icebp
push
cmp
dec
jo
lahf
sbbb
movsl
in
subl
lods
loope
aad
pop
mov
outsl
sub
loop
das
sbb
mov
icebp
jno
js
mov
mov
cmp
cmp
jl
adc
je
push
sbb
out
push
cmpb
jo
jns
add
jmp
ljmp
mov
aaa
cmc
rolb
frstor
iret
or
dec
fcoml
push
aad
adc
repnz
lods
out
xchg
adcl
ror
lahf
leave
loope
lret
pop
jns
xchg
loop
lcall
psubsb
aam
or
stos
cmpsb
push
out
aad
push
xchg
push
popa
pop
bound
data16
push
jge
repnz
movsb
rcll
lods
pushf
in
add
inc
cmp
cmp
es
add
cmp
dec
movsl
inc
add
push
outsl
aas
cmp
xor
inc
ret
add
jne
outsl
es
clc
jo
les
fs
add
stos
js
xchg
mov
pop
xlat
cmpsl
loop
and
inc
aad
mov
jnp
aad
test
push
jmp
sub
cmp
shrb
sahf
pop
lret
pop
pop
jmp
scas
xchg
clc
push
cli
push
lods
push
out
jp
mov
sbb
mov
stc
stos
pop
sbb
cmpsb
test
cmpsb
push
rclb
push
fldl
xchg
imul
sahf
mov
imul
or
jle
bound
mov
and
sbb
mov
dec
ret
sahf
jle
mov
movsb
test
pop
jae
pusha
inc
mov
cmp
cmp
int3
loop
fcompp
adc
stc
arpl
ret
mov
mov
push
jbe
push
scas
pushf
cmc
fistps
out
sub
nop
add
ss
out
and
loope
test
lret
sub
pop
push
or
movsb
jnp
mov
inc
dec
add
test
jg
lods
cld
xorb
iret
ja
push
lds
ret
or
jns
sahf
push
adc
cmp
fcoms
lahf
lahf
sbb
xchg
mov
notb
cmp
add
fidivrl
lods
mov
mov
sub
repnz
int3
jp
pop
lahf
aas
xor
repz
gs
div
jno
testl
dec
pmaxub
out
mov
neg
int
jo
ss
insl
inc
fcompl
push
add
in
adc
loope
in
stc
add
sub
add
jge
imul
bnd
cltd
adc
fcmove
dec
mov
insb
pop
ljmp
push
sub
inc
stos
insl
outsb
push
rcll
es
cld
js
push
mov
inc
add
aaa
or
int
pusha
and
lds
cmp
ret
stos
mov
adc
sbb
sub
rolb
imul
in
insl
sahf
cmp
jle
imul
leave
xor
dec
rclb
mov
stos
push
push
stc
aaa
xor
sbb
or
lods
dec
sbbl
dec
ret
mov
mov
pusha
scas
jns
push
xchg
int
out
ljmp
inc
jg
decl
or
cmpsl
sti
popf
leave
add
shlb
outsl
andb
inc
xchg
and
mov
lods
jmp
xor
sub
add
xchg
xlat
mov
push
jg
push
pusha
scas
fistpll
add
adc
pushf
pop
jne
mov
or
add
mov
in
jmp
mov
cmp
dec
jbe
mov
aad
mov
xchg
ljmp
lea
dec
inc
adc
imul
sub
pushf
jo
fucomip
cld
cli
imul
in
jnp
arpl
sbb
and
cmpsb
inc
shrl
dec
sahf
and
lret
adc
xchg
mov
sbb
clc
push
loop
adc
sbb
icebp
pop
test
icebp
fwait
lea
adc
in
pop
mov
das
jmp
push
jno
int
lods
ljmp
jmp
or
push
and
sub
insb
out
xchg
or
rcll
mov
or
js
cmpsl
dec
dec
sbb
mov
xchg
xor
mov
mov
add
or
mov
jo
subl
addr16
fildll
push
mov
fs
push
adc
jmp
xor
and
int3
push
testb
adc
push
pop
ret
xchg
js
outsb
lea
lahf
and
je
and
je
and
add
pop
jl
xlat
jae
cmovnp
nop
and
adc
arpl
movsb
andb
adcb
pusha
outsl
mov
ljmp
daa
idivl
cmp
pop
sub
ret
orl
jb
push
loopne
mov
adc
mov
mov
pop
movsb
gs
inc
arpl
out
cs
test
mov
sbb
pop
in
pushf
divl
call
sub
xchg
lret
sub
fmuls
jmp
pushf
inc
add
sahf
in
stc
and
add
je
pop
and
push
out
lcall
lahf
loope
je
pop
cmp
pushf
imul
mov
push
clc
xchg
enter
sbb
mov
adc
adc
and
adc
lret
fs
add
push
cwtl
ja
scas
xchg
push
enter
ret
jne
cmp
push
fldl
lret
and
pop
sub
sbb
movsb
xor
pusha
push
cmpsl
mov
rcrl
fstl
sub
sub
pop
cs
rorl
aad
xchg
mov
mov
jg
xor
pushf
add
adc
xchg
or
cmp
fwait
mov
inc
jl
gs
ljmp
mov
or
push
insl
sbb
mov
stc
sub
psllq
callw
mov
pop
sarb
jmp
loopne
popa
and
pop
loope
scas
iret
gs
stos
lds
sub
jae
pop
xchg
mov
scas
xchg
fsubl
pop
test
sub
jns
sub
clc
hlt
cmp
sub
rcll
mov
jae
pop
movsb
pop
and
inc
fwait
ret
call
and
or
adcb
fnstcw
push
xchg
mov
mov
scas
mov
lods
cwtl
lret
sub
rclb
shll
fists
pop
sbb
pop
adc
dec
jbe
in
cld
dec
mov
nop
add
and
dec
mov
inc
push
push
xor
push
sbb
aas
out
push
or
imul
shr
loopne,pt
fldenv
sbb
mov
or
fdivr
je
inc
aam
push
push
sub
stos
les
xchg
push
outsb
loopne
nop
pop
mov
mov
inc
fisttps
out
jns
imul
mov
mov
insl
add
stos
fiadds
mov
das
sahf
sbb
pop
pop
inc
xchg
mov
pop
in
cmp
int
mov
xor
inc
outsb
sahf
into
sub
xchg
sub
movsb
out
das
jnp
mov
mov
inc
test
jbe
mov
addr16
icebp
jbe
subb
sbb
sub
add
je
xchg
fs
ret
add
sub
xor
jp
sti
in
test
je
add
adc
scas
imul
jns
inc
adc
testb
pop
jnp
xor
movsb
jle
xor
add
jbe
int3
jle
cmc
xchg
repnz
or
jne
dec
mov
inc
xorl
aad
pushl
hlt
movsl
ret
push
dec
lret
xor
mov
movsb
repnz
es
imul
das
add
pop
negl
fsub
inc
arpl
lods
inc
movsl
adc
cmpsb
repnz
gs
repz
push
pop
arpl
data16
hlt
add
push
roll
or
fistps
je
mov
xchg
or
fnstsw
push
ss
add
add
mov
adc
stos
adc
push
dec
ret
ret
scas
ljmp
lahf
icebp
jb
out
addr16
fisubs
outsl
lods
ds
mov
loope
jge
inc
lock
jp
shr
adc
cmpsb
mov
sar
std
in
jmp
jno
sbb
shlb
push
pmaxsw
mov
in
nop
ljmp
sahf
loopne
mov
sahf
outsl
sbb
cmp
sub
and
mov
push
inc
lods
shrl
fsubl
jns
pop
jmp
inc
cmp
ljmp
add
sbb
adc
jne
clc
addb
jmp
scas
sbb
xlat
jns
cmp
jo
ds
scas
dec
loopne
scas
sbb
add
int3
mov
cli
sub
lea
lret
ds
push
hlt
cmp
jns
dec
push
mov
inc
out
sbb
inc
popa
in
sbb
and
or
dec
sub
xchg
lock
and
push
push
and
xchg
add
inc
sti
fwait
pop
repz
test
fs
insb
xchg
sbb
push
jecxz
lret
sub
push
mov
ja
push
stc
adc
mulb
lock
rclb
adc
sub
aad
stos
test
adc
inc
lods
mov
jle
js
jge
shrl
test
je
pop
or
cmpsb
std
clc
cmp
lds
cmovb
dec
decb
push
outsl
mov
mov
push
inc
push
mov
movsb
push
push
jbe
out
ror
adc
dec
movsb
lret
dec
sbb
or
cmp
hlt
sti
test
mov
dec
icebp
adc
adc
sub
daa
mov
test
xor
mov
cld
inc
dec
push
inc
insb
scas
in
test
mov
subb
cmpsb
mov
aam
xchg
shlb
xor
sbb
bound
inc
test
shl
sbb
fs
cmp
jg
movsl
mov
fcoms
lahf
fidivl
les
xor
jge
imul
dec
push
lds
movsl
jl
mov
iret
push
add
movsb
inc
add
cltd
adc
mov
adc
inc
loopne
xchg
mov
ss
jle
or
lods
fistps
scas
xchg
loop
adc
scas
inc
jmp
mov
mov
aas
das
lods
sub
ljmp
inc
sbb
mov
out
in
test
cmpsb
mov
in
adc
adc
fadds
popf
imul
xchg
mov
sar
loope
cmpsb
daa
aas
xor
loop
inc
pop
push
aam
sarb
add
add
rcrl
cld
mov
ljmp
mov
jno
cmpl
and
mov
fstpt
sbb
xchg
push
cld
mov
loopne
sub
imulb
adc
cli
jge
mov
or
mov
or
sbbl
xchg
fbstp
es
ljmp
pop
dec
jo
clc
sti
pop
rclb
mov
and
pop
mov
jge
add
jmp
pushf
rclb
jns
fcoml
ja
sbb
sub
mov
mov
dec
pop
addb
aaa
imul
lret
sbbb
push
clc
sub
shll
xlat
test
ds
jle
clc
clc
xor
stc
jle
inc
hlt
adc
cwtl
ljmp
mov
in
aas
ds
cld
dec
stos
andl
cli
icebp
rcrb
pop
sti
adcl
sbb
push
xchg
das
mov
cmp
sub
lods
es
leave
add
test
frstor
out
or
hlt
gs
push
fstpl
pop
jno
mov
je
add
push
pop
shlb
mov
aaa
jge
popa
dec
sbb
testl
ds
xchg
int
dec
dec
cltd
cmp
pop
mov
fsubl
inc
sub
xchg
inc
loop
xchg
push
xchg
mov
sti
movsb
and
mulb
not
arpl
popf
imul
sahf
sub
push
cld
rolb
out
dec
jns
mov
outsl
mov
lahf
mov
lea
mov
cmovne
aad
scas
mov
and
dec
adc
cwtl
fs
xchg
jge
es
jl
cmpsb
and
dec
add
mov
fbstp
ss
xchg
jmp
test
scas
push
add
pop
jmp
daa
and
fidivrl
test
in
ljmp
inc
pop
jb
adcb
cli
dec
dec
enter
mov
cmc
loope
xchg
sbb
and
sarb
push
imul
xchg
lds
movsl
inc
cmpsl
inc
out
xchg
xor
cmp
sbb
div
enter
xor
inc
sbb
ror
pop
imul
lock
int3
lahf
push
inc
iret
jb
pusha
jae
int3
adc
push
pop
adc
adc
or
not
ret
js
push
inc
out
pop
mov
jae
loope
pop
stos
in
inc
xchg
push
mov
and
call
mov
stos
in
insb
scas
fdivl
mov
call
fimuls
ret
jo
jecxz
rcll
js
mov
sub
outsl
popa
repnz
enter
mov
fistpl
or
xor
fnstenv
pop
inc
lods
faddp
jmp
inc
mov
fdivs
xor
and
dec
xor
jl
fdivs
clc
popf
cmp
subb
xor
mov
cwtl
outsb
iret
sbb
xlat
cltd
int
lods
ret
push
adc
in
cmpsb
in
add
orl
rcrb
xchg
leave
fwait
mov
les
aas
cs
pop
fs
ja
pop
sub
jns
inc
sbb
pop
repz
fists
sbb
mov
jbe
scas
jge
jl
jnp
jae
fstl
insb
test
cmp
popa
adc
and
or
sbb
aaa
or
sub
daa
in
push
cmp
sar
mov
leave
aas
fidivl
add
es
mov
jnp
sarb
inc
pop
aad
pushf
iret
xchg
mov
inc
push
mov
jo
dec
jb
xor
icebp
lcall
or
and
test
cmp
inc
fisttpl
sarb
repnz
out
stc
pop
sub
sbb
inc
cmc
fcmovu
xchg
insb
cmc
pop
test
jae
inc
pop
mov
scas
test
inc
in
xchg
and
mov
fsubl
jnp
je
fwait
mov
fisubs
hlt
inc
int
push
pop
iret
and
mov
mov
push
mov
inc
js
or
js
jnp
icebp
push
sbb
xchg
imul
jno
mov
xor
jbe
jbe
cmp
fsubr
repz
xchg
cmp
mov
fsubp
stc
jp
pop
inc
xor
iret
iret
cmp
mov
inc
das
enter
add
inc
cmp
das
pop
out
fidivrl
rcl
pop
mov
dec
mov
mov
shrl
orb
pop
pushl
lock
push
lds
dec
xchg
jmp
add
arpl
stc
mov
test
cmp
in
je
inc
sbb
rorl
jnp
fsubs
stos
rorl
jo
adc
jo
xchg
push
xor
push
pop
sub
loopne
sahf
ds
jae
rclb
xchg
shlb
in
cmp
mov
shlb
ret
add
sbb
pop
fcmovnb
lcall
lcall
pop
push
inc
ljmp
pop
mov
js
shlb
fcmovbe
cmpsl
test
movsb
mov
sub
mov
stc
and
pop
dec
add
adc
pop
pop
add
lock
lods
cmp
fadd
out
es
mov
mov
pop
movsb
movsl
scas
jb
jbe
and
enter
pop
movsl
mov
jl
push
cld
jg
mov
out
inc
int3
sub
mov
jecxz
popa
fisttpll
xchg
test
pop
add
push
aaa
mov
nop
es
and
lods
push
mov
cs
jne
add
mov
inc
add
add
sbb
cs
cmp
shll
sub
jbe
sub
out
and
outsb
jnp
cmp
xchg
mov
rcl
icebp
or
adc
adc
shl
dec
jp
push
add
lds
mov
iret
ficompl
into
jne
xor
jmp
and
jp
pop
pop
dec
xor
sahf
mov
sub
jnp
aas
push
pop
mov
inc
add
mov
lea
into
mov
in
push
or
repz
or
loope
sbb
fwait
divb
push
dec
scas
or
add
and
rcll
or
add
lcall
and
inc
loopne
xlat
jge
popf
adcl
aaa
icebp
outsl
pop
sbb
js
jmp
lret
mov
test
push
fstl
aam
mov
push
cmp
and
cmpsl
je
inc
and
fbld
adc
dec
lahf
pop
or
and
in
aaa
std
pop
bound
daa
mov
xor
out
xor
mov
push
idivl
sub
push
inc
jno
and
std
data16
adc
sbb
in
cmp
xor
fidivrl
sarl
testl
xlat
divb
bound
and
mov
mov
dec
enter
fisttpl
pop
cmp
pop
pop
mov
aas
xor
add
xchg
fcomps
pop
add
call
scas
in
mov
leave
sub
push
xlat
adc
adc
mov
mov
lds
push
shll
mov
mov
in
inc
xchg
push
jp
mov
lds
outsb
lds
sahf
or
daa
mov
ret
mov
lahf
out
add
das
es
dec
mov
and
je
xor
mov
push
xchg
aaa
or
mov
jbe
sub
fisubrl
push
jmp
lahf
movsb
cld
or
push
mov
mov
cmp
xchg
int
jbe
adc
inc
aad
lds
cmp
orb
ja
dec
aad
inc
stos
cli
dec
xchg
pop
pop
pop
xchg
ja
fiaddl
mov
adc
inc
sub
xlat
ficoml
xchg
cmp
xlat
xorb
pop
inc
fabs
and
cmc
adc
mov
fisubs
or
mov
xchg
scas
inc
ljmp
mov
adc
or
sub
adc
push
mov
xor
jne
jl
mov
sub
sahf
mov
sbb
and
push
insl
rclb
mov
jmp
cld
jle
shrb
test
cmp
sub
icebp
nop
pop
cmp
outsl
or
xchg
sbbb
outsb
sbb
lods
and
clc
jle
cmp
test
mov
sub
cmpsb
sahf
add
mov
xchg
mov
or
data16
push
adc
push
xchg
jae
inc
fsubs
dec
inc
je
mov
and
push
cs
lahf
lahf
sub
sahf
xchg
hlt
push
pop
gs
pushf
imul
daa
inc
fsubs
mov
les
repnz
mov
jmp
mov
lcall
pop
les
inc
cld
adc
push
idivb
jae
dec
and
xor
stc
movsl
outsb
push
idiv
pcmpgtd
test
jp
xor
fwait
and
leave
int3
iret
xchg
add
push
xchg
sbbl
aam
adc
dec
lahf
jnp,pn
mull
jle
testb
pop
mov
in
and
fdivl
push
repz
cmp
cs
out
arpl
ljmp
add
repnz
in
frstor
cmpsb
popl
or
popa
ficoml
int
inc
jg
or
xor
xchg
outsl
in
push
add
push
cld
outsl
aad
imul
lret
jg
jae
incl
daa
xchg
mov
bound
mov
lcall
ds
add
or
push
inc
out
xchg
insl
inc
sub
dec
and
xchg
out
mov
add
mov
les
cmpb
mov
adc
fists
push
inc
push
iret
xchg
push
lahf
sub
sarl
dec
outsb
rcrl
jo
cmp
dec
xchg
or
mov
xchg
mov
xor
xchg
jno
and
mov
push
arpl
mov
cltd
pop
cs
and
rcrb
jo
dec
imul
adc
rolb
call
xchg
outsb
test
adc
mulb
sbb
push
imul
idiv
adc
and
fsts
out
das
dec
inc
out
notb
inc
pop
mov
pop
icebp
fistpll
dec
xchg
xchg
cmpsb
or
and
das
dec
inc
mov
jbe
outsl
call
cmp
inc
pop
add
mov
mov
xor
sbb
cld
push
imul
ds
adc
jo
test
loope
loop
or
cmp
dec
ss
dec
push
jl
cmpsb
lods
aaa
rorb
inc
ljmp
mov
xor
mov
mov
shrb
mov
or
pop
mov
adc
xchg
jae
pop
cmp
movsbl
adc
push
adc
push
mov
aaa
std
mov
jns
pop
xor
sub
cmp
pop
xchg
xchg
mov
jnp
push
das
in
cli
sbb
popa
pop
pusha
push
cmpsl
jge
stos
scas
mov
leave
and
adc
shrb
std
in
aam
subl
rcl
popa
sbb
xchg
pop
cmpl
pushf
and
mov
xor
sub
int
addr16
arpl
dec
stc
sub
test
mov
mov
inc
mov
push
lcall
cmp
daa
mov
xor
mov
repz
cmp
ret
fists
jle
jns
test
test
pop
inc
inc
test
arpl
test
imul
jp
aas
fwait
mov
sub
sbbb
pop
xor
outsb
dec
fiaddl
pop
js
mov
lds
mov
push
pop
xchg
popl
in
jo
movsb
sub
xlat
adc
pushf
lcall
mov
test
jp
inc
mov
dec
into
fists
shll
fsubl
lea
lods
mov
mov
sub
jle
add
xchg
inc
stos
push
adc
mov
mov
enter
pop
ds
into
push
std
nop
add
jecxz
push
nop
xchg
push
lcall
loope
mov
test
lret
idivl
adc
adc
mov
out
subl
push
insb
push
adc
sahf
push
cmpsl
mov
push
pop
test
or
in
scas
inc
or
mov
mov
test
add
bound
les
fisttps
sti
mov
je
jb
cmp
push
mov
mov
subl
outsl
cld
fimuls
sub
daa
inc
mov
jl
negb
shrb
sarb
test
dec
pop
add
int3
sbb
dec
xor
or
movq
jmp
sahf
clc
fnsave
idiv
dec
jmp
dec
pop
stos
insl
ljmp
sub
xlat
and
inc
pushf
push
jne
test
pop
xchg
pushf
mov
fs
stos
xchg
adc
data16
push
adc
add
sti
aaa
dec
insl
and
sbb
mov
inc
xchg
xor
add
sbb
add
push
mov
add
mov
rolb
jo
mov
xchg
mov
mov
aam
lods
jp
jnp
pop
cltd
pushf
xor
adc
rcrl
out
inc
and
pusha
jge
jge
xor
outsb
out
dec
mov
sar
call
sub
dec
int3
std
js
and
sub
pop
stos
lcall
add
adc
add
icebp
inc
xchg
push
lea
test
dec
push
lock
sbb
mov
mov
dec
dec
dec
pop
pop
test
aam
push
js
int
sbb
xor
push
cmpb
add
in
xor
lods
push
negl
push
sub
add
orl
scas
arpl
mov
lock
sub
mov
daa
jg
lea
jbe
pop
enter
pop
into
scas
jg
leave
out
call
hlt
inc
outsb
clc
cmp
fldt
mov
dec
mov
pop
test
ja
call
and
imul
mov
cltd
arpl
mov
and
rolb
mov
jle,pt
insl
jmp
lds
dec
mov
dec
sbb
mov
xor
xor
sbb
mov
inc
imul
in
nop
fadds
inc
cmp
clc
fcomip
pop
mov
out
jae
mov
pop
mov
xchg
push
call
ret
cmc
jl
test
push
and
scas
out
jno
pop
in
or
adc
aad
cmpsl
inc
jne
js
inc
out
inc
imul
cmp
jbe
cli
sub
sbb
popa
cmc
aaa
out
push
xor
int3
fnstenv
es
dec
flds
in
adc
mov
dec
inc
mulb
jae
cld
push
popf
mov
aaa
popa
dec
call
jecxz
dec
inc
jae
repz
xchg
dec
mov
loopne
pop
das
lea
jmp
add
sbb
insb
out
jp
push
xchg
inc
aaa
cmpsb
in
in
cmp
jmp
adc
xor
in
mov
mov
lds
dec
cli
mov
add
cmpsl
scas
and
lahf
scas
mov
incl
outsb
push
inc
test
mov
xor
xorb
inc
iret
push
jmp
icebp
push
dec
imul
mov
sbb
cmp
cmpsl
mov
js
fistpll
xlat
inc
aaa
sahf
sub
int3
lock
dec
jne
ds
xor
pusha
dec
jmp
jmp
cltd
mov
out
cmp
add
cmp
cmp
mov
adc
pop
int
mov
xchg
cli
pop
icebp
arpl
fldl
testb
ja
add
ret
fldln2
pop
js
lods
or
leave
pusha
inc
popa
ss
xor
push
in
adc
mov
sub
cmp
adc
xor
repnz
push
dec
pusha
ds
lock
stc
sbb
adc
aad
lret
lods
sbb
dec
lea
outsl
lcall
jmp
mov
xchg
ret
loopne
not
js
hlt
es
xor
negb
fdivs
notl
sub
ja
inc
test
and
sti
add
enter
xor
xchg
push
pop
and
fsubs
js
sub
push
rol
sarl
movsl
push
in
insl
mov
inc
sbb
push
xor
sub
mulb
xchg
push
xchg
cmc
xchg
and
mov
outsl
idivl
mov
pop
ljmp
mov
sub
sub
arpl
and
fsts
inc
cmp
cmpl
cmp
mov
aas
insb
inc
xchg
add
jnp
lret
dec
inc
aaa
icebp
pushf
and
inc
movsl
ret
shrl
sbb
xor
cmc
mov
mov
xlat
mov
push
out
and
push
dec
push
xchg
xor
push
cmc
adc
push
jle
xor
mov
call
shlb
mov
cwtl
xchg
xcrypt-cbc
cmpsl
xchg
out
outsl
mov
and
jno
or
repz
xlat
aas
lahf
sub
adc
icebp
mov
jns
and
popa
aad
dec
lea
add
cltd
fnstcw
or
add
loope
jns
push
test
inc
das
loopne
cmc
and
jmp
popf
mov
pop
test
add
mov
pushf
sbb
adc
ds
and
fimull
xchg
sahf
outsl
shrb
mov
pop
ds
sti
imul
fildll
and
push
cmpsb
cld
fdivp
ss
push
mov
add
popa
popa
inc
lcall
mov
mov
add
sub
pop
mov
repz
pop
in
ffree
push
into
shr
loopne
outsb
in
jle
jle
imul
test
call
jle
mov
inc
frstor
or
std
sub
dec
lcall
jns
mov
sbb
inc
adc
push
popa
mov
jbe
ret
sti
insl
sahf
mul
pop
sti
jmp
jle
jo
jne
push
pop
leave
jne
cmp
ret
cmp
addb
mov
push
lahf
or
cld
pminsw
xchg
out
gs
xchg
divl
repnz
add
aad
mov
jno
lcall
jmp
loope
gs
cmc
pop
xor
jle
jno
push
mov
lret
mov
int3
jnp
jb
enter
icebp
cs
sti
aam
or
jge
jns
pop
jae
fistps
pop
rclb
mov
xchg
out
das
repz
fiaddl
jb
or
xor
xor
shrb
mov
out
movsb
add
inc
push
in
push
cmp
cmp
pop
stc
jle
mov
sbb
pop
xchg
rcrl
push
ja
int
mov
inc
inc
dec
test
lea
mov
sti
xchg
xchg
daa
data16
pusha
lock
mov
bound
xchg
je
fsub
pop
daa
adc
xchg
mov
add
cmpsl
sti
test
mov
push
push
mov
xor
cli
test
dec
add
sbb
stos
call
pop
and
jge
adcl
and
adc
daa
je
mov
adc
or
hlt
jns
adc
dec
push
clc
sub
imul
aaa
vpcmpeqw
mov
dec
mov
and
sti
jbe
xchg
data16
cmp
push
and
aam
dec
into
outsb
mov
dec
inc
dec
push
orb
jb
mov
aas
push
idiv
shr
fsub
out
mov
pop
cmpb
repnz
or
add
sub
into
and
pop
popa
and
enter
shld
pop
fldl
addl
aam
testl
testl
adc
scas
scas
iret
mov
insb
stos
push
adc
jmp
lret
inc
jmp
jo
in
mov
lcall
mov
cli
pop
jmp
cld
inc
inc
lds
jge
adc
jl
into
sub
out
mov
xabort
leave
mov
mov
push
imul
cmp
scas
adc
loope
jbe
push
insl
or
mov
adc
xor
sti
hlt
jge
cmp
pop
and
dec
mov
mov
in
sbb
int
stc
mov
imul
aas
in
push
jle
push
stos
imul
pop
mov
push
in
and
das
in
cmp
or
xchg
scas
aas
xchg
jbe
pop
push
sub
sahf
pop
mov
and
out
ds
xor
aad
dec
fmull
jmp
fwait
mov
mov
xchg
notl
stos
mov
pusha
lea
cmc
sbb
sahf
inc
mov
push
movsb
pop
ljmp
jmp
mov
subb
mov
sbb
jo
or
xchg
fwait
add
xchg
rorb
push
mov
xlat
dec
stos
mov
mov
out
arpl
adc
cmp
fnsave
fs
aam
shlb
jno
js
cltd
or
mov
ss
inc
adc
mov
jp
sarl
lea
lret
sbb
js
shll
push
and
inc
ss
xchg
lea
jp
ljmp
lret
les
jle
dec
and
mov
mov
push
mov
cmp
fsubrs
fndisi(8087
insb
pop
out
push
pop
outsb
outsb
ss
mov
and
pop
ficoms
cwtl
filds
pop
mov
int3
pop
push
in
stos
xor
mov
inc
jg
fistl
clc
mov
add
stos
xor
or
mov
jmp
fxam
mov
sub
jnp
loope
repz
stos
adc
mov
in
adc
loope
push
sub
and
xchg
sbb
inc
into
addr16
out
jae
loop
jle
jae
cli
icebp
stos
push
inc
xor
xchg
outsb
push
and
movsb
fcmovb
pop
dec
aad
pop
addb
mov
lcall
in
cmp
dec
mov
in
jmp
cmpsl
and
mov
cs
bound
mov
cltd
add
in
inc
data16
push
das
sti
ret
out
cmp
roll
into
pop
lret
sbb
sti
sbb
mov
cmp
test
addb
inc
sbb
mov
sbb
and
inc
jae
dec
fnsave
fcmovbe
adc
js
aas
nop
pushf
jnp
outsb
ljmp
jl
movsb
test
jp
jno
mov
lret
mov
cwtl
mov
xchg
ds
jecxz
mov
rcr
repnz
bnd
xchg
lret
and
out
pop
inc
sub
stc
ljmp
mov
cmp
scas
mov
fbstp
mov
inc
add
movsb
scas
sub
cmp
jmp
push
mov
dec
inc
ret
mov
jl
sti
push
adc
jmp
ljmp
jno,pt
aaa
mov
in
pop
cmp
stc
mov
mov
mov
rcr
lret
loop
jg
pusha
xchg
mov
push
faddl
outsb
sar
inc
cwtl
sub
fs
cmp
imul
popa
leave
or
fprem
jne
ljmp
mov
pop
lds
es
pusha
jp
mov
jl
mov
jns
xchg
movsb
mov
aaa
sbb
push
jno
push
out
sub
sti
and
dec
pop
leave
jmp
push
sbb
ds
icebp
lods
xchg
in
push
jmp
dec
cld
lock
mov
push
test
xchg
outsb
fldl
push
les
adc
cwtl
daa
xor
jp
xchg
lret
mov
dec
cmp
fwait
dec
dec
rorb
jb
cmpsb
mov
jl
cmp
ja
inc
rep
dec
mulb
pop
mov
sub
jl
cltd
jle
je
jg
xor
xor
sbb
pusha
xor
rcrb
dec
pop
je
es
fsubs
push
jle
std
sbb
pop
cmp
xchg
cli
sub
adc
flds
pop
inc
stc
mov
cmp
btr
es
je
or
pop
jo
mov
in
adc
popa
jg
pop
cmp
pusha
push
ret
inc
in
cmp
add
cmp
cmc
mov
decb
mov
sbb
pushf
scas
xchg
sbb
shll
iret
mov
dec
push
push
jo
jb
cmpsb
or
ljmp
mov
rcrb
xchg
mov
cmp
inc
mov
mov
mov
hlt
insb
hlt
sub
out
sbb
insb
stc
xchg
pop
xchg
cltd
mov
lds
add
outsb
sub
jae
lret
push
and
cmp
test
push
xchg
inc
push
ja
adc
dec
push
jae
stos
and
mov
mov
pop
scas
push
push
cmpsb
mov
repz
cmp
adc
mov
mov
in
push
outsb
jp
mov
xchg
xor
pushf
mov
insb
and
mov
xor
fcompl
push
lret
and
sbbb
add
lcall
jcxz
call
fucomip
fdivrl
dec
dec
or
daa
lds
xchg
je
push
push
idivb
es
stos
xchg
mov
jle
mov
add
sbb
jmp
aad
popl
cmp
aas
into
aaa
inc
sub
movsl
add
jno
jge
mov
xchg
sbb
inc
inc
and
jns
fldln2
cmpsl
movsb
inc
xchg
or
sub
push
pop
jbe
inc
sub
lret
lret
mov
and
dec
test
js
cmp
pop
lds
dec
int3
cs
and
popa
inc
sbb
inc
mov
outsb
movsb
xchg
push
in
jmp
pusha
loope
ja
stc
jno
shll
in
hlt
jmp
je
cs
and
and
sbb
fsubrp
stos
jecxz
cmp
jae
sarl
sbb
push
xchg
pop
push
cmp
in
push
or
and
stos
js
sbb
sbb
cwtl
std
push
test
movsl
inc
adc
in
test
lret
ja
mov
xor
repz
test
rcll
xchg
test
xchg
add
mov
in
jge
xor
sti
cmp
enter
adc
imul
lds
mov
pop
negb
loopne
cli
xor
cwtl
je
cmc
dec
clc
push
filds
jle
push
gs
aas
mov
lahf
xchg
inc
cmp
lock
mov
mov
jnp
mov
dec
sub
or
jg
movsl
ret
shll
loope
insb
or
dec
dec
adc
push
fs
xor
les
arpl
loopne
daa
adc
in
jo
loop
movsl
gs
mov
jb
inc
xor
push
lcall
pop
bound
dec
jno
imulb
sbb
stc
out
inc
lea
repnz
mov
inc
movsb
test
popf
int3
fldt
call
cli
daa
sbb
mov
xchg
dec
mov
arpl
push
xchg
ss
push
inc
movsl
xor
push
icebp
cmp
cmp
mov
pusha
xor
xchg
pop
adc
or
lret
push
jg
das
jb
divb
in
mov
inc
jns
inc
push
xchg
lcall
add
adc
sbb
addl
mov
xorb
arpl
fwait
inc
sub
mov
or
xchg
cmpsl
cs
mov
gs
cmp
sub
in
xchg
ja
imul
sahf
fdivrl
xchg
test
mov
mov
add
push
je
xchg
enter
pop
leave
ja
xchg
push
xor
out
and
adc
adc
cmp
fisttps
mov
out
aam
xor
pop
dec
in
into
fimuls
mov
out
dec
lahf
dec
das
sbb
cmp
aam
xchg
adc
push
and
push
jno
sbb
das
adc
out
adc
cmp
in
adc
adc
roll
mov
add
aad
mov
mov
add
cmp
popa
out
cmp
mov
call
nop
adc
out
sti
int3
bound
pop
jb
xor
pusha
cmc
lods
out
xlat
js
mov
aad
cmp
inc
push
mov
adc
mov
cmp
pop
mov
repz
loopne
or
fmul
mov
mov
push
pusha
into
shlb
scas
shr
inc
xchg
cmp
mov
aaa
jno
xchg
dec
cld
push
lahf
mov
icebp
xchg
jmp
popa
pusha
outsb
in
les
jns
inc
and
inc
sbb
push
addr16
movsl
push
pop
xor
cmp
je
xor
cltd
cmp
mov
pop
xchg
xchg
push
mov
inc
sbb
sti
shll
mov
xor
dec
jge
mov
pusha
dec
mov
call
push
je
cld
in
sub
lock
cmp
dec
inc
ret
iret
add
cwtl
outsb
dec
mov
fdivrs
sub
mov
fistps
adc
fisttps
mov
adc
or
dec
insl
inc
rcll
pushl
inc
mov
sbb
mov
push
aaa
push
insb
je
push
xchg
or
fistl
xchg
cmp
cwtl
cli
xchg
nop
in
in
aas
push
pop
jg
mov
jmp
jg
into
sbbb
ja
sbb
mov
mov
pop
adc
dec
pop
push
adcl
iret
add
lock
jne
stos
push
mov
dec
inc
xchg
mov
in
loope
xchg
lds
dec
in
dec
mov
add
add
adc
pop
push
adc
xor
xor
lcall
cmpsl
mov
cmp
dec
ds
lods
or
sarb
les
in
pop
jnp
movb
or
adc
mov
outsl
gs
shrb
pop
pop
in
pushf
mov
mov
or
push
aas
sub
xchg
icebp
ret
mov
inc
or
jo
aad
pop
stos
inc
push
jnp
popa
js
clc
insl
mov
insl
push
cmp
inc
aam
stc
movsb
push
popw
adc
pop
xchg
xor
sbb
cld
sub
adc
imul
jp
xor
stc
out
jns
fs
ror
in
push
les
dec
out
lds
imul
in
sub
stc
sbb
pop
in
fstp
fwait
mov
sub
xlat
add
iret
test
jecxz
mov
test
jo
arpl
mov
push
fistpll
cmp
std
nop
test
lods
jge
scas
repz
ret
xchg
mov
nop
cmc
cmp
insl
add
leave
mov
dec
repnz
popa
jecxz
sahf
push
gs
push
dec
outsl
hlt
pop
enter
sbb
sub
addr16
xor
imull
xlat
and
adc
xor
rcrl
fisubl
pop
fs
jp
push
idivb
inc
sbbl
jle
pushw
mov
adc
addr16
xor
leave
cwtl
mov
cli
dec
ja
mov
mov
movsb
std
mov
insl
insl
into
dec
aam
add
push
stc
jg
pop
xchg
fdivl
das
ret
pmullw
inc
dec
dec
pusha
mov
mov
xchg
popa
xlat
arpl
pop
aaa
sbbb
movsl
test
sub
fsubr
xor
pop
ret
dec
clc
scas
cmpsl
mov
pop
mov
jp
hlt
jns
jae
lea
cmpsl
mov
subl
mov
lret
jecxz
leave
cmp
xor
andb
mov
pop
ret
or
ds
inc
mov
mov
cs
lcall
jl
and
int3
xchg
or
dec
push
jmp
add
xchg
outsb
xchg
jnp
lods
xor
cmpb
push
pop
cmp
call
lret
imulb
fnstenv
outsl
xor
sub
ss
outsb
mov
outsb
movsl
cmpsb
push
out
jb
je
jne
jl
lret
cwtl
jmp
addl
sahf
les
jnp
push
and
loopne
inc
push
cmp
adc
mov
addr16
cmp
jo
test
or
test
repnz
push
in
popa
push
jmp
push
cwtl
push
mov
repnz
aas
mov
sub
adc
xchg
pop
pop
mov
fisubs
xlat
les
ficompl
push
or
dec
fsubrl
outsl
pop
daa
mov
rclb
inc
dec
adc
js
xchg
inc
scas
ljmp
imul
cmp
loop
shrl
push
inc
xor
cmpsb
xchg
pop
add
icebp
cs
mov
ljmp
or
clc
popa
sbb
loop
push
arpl
jp
and
scas
push
pop
push
cmp
imul
dec
dec
lock
lret
sbb
add
std
std
mov
or
push
icebp
bound
inc
push
adc
stos
ljmp
arpl
vfmsubadd213ps
int3
mov
fcomps
pusha
in
ja
std
push
xchg
je
cmp
rolb
cld
cmc
jecxz
cmp
int
adc
add
mov
ss
lret
icebp
xchg
xchg
out
push
inc
js
jle
les
imul
mov
pop
aaa
subb
xor
mov
int
cmpsb
pop
push
add
pop
pushf
rep
movsb
iret
pop
dec
pushf
jp
jbe
call
sub
scas
cmp
js
inc
xor
ds
mov
push
cwtl
inc
loopne
mov
inc
xchg
out
mov
dec
movsb
imul
mov
xchg
cmpsl
into
sub
sbbb
cmp
mov
lods
stos
fwait
lret
cmp
aam
out
cmp
aad
lcall
xchg
pop
pop
inc
subb
sbb
jne
inc
ja
cltd
ret
js
jl
and
fildl
sarl
int3
mov
mov
mov
or
mov
lock
cwtl
andnps
dec
fs
and
push
movl
pop
rcrl
cmpsb
movsb
jbe
push
cmpsb
sub
cmpl
sub
mov
pop
inc
push
inc
outsl
sub
scas
sar
mov
mov
daa
inc
xchg
push
in
roll
xchg
stos
out
je
or
or
addb
push
call
fdivrl
push
adc
dec
leave
xorl
fs
push
test
out
push
shrb
mov
sub
das
inc
packssdw
arpl
mov
push
adc
ljmp
mov
or
imul
sbb
je
adc
jns
cli
jmp
lret
aad
xor
pushf
push
leave
sbb
mov
movsb
cltd
inc
and
push
sbb
adc
dec
push
cmp
xchg
push
test
jbe
pop
pusha
lods
test
ja
or
test
mov
into
dec
divb
cmp
fistpl
sarl
pop
mov
or
sub
cli
outsb
sarl
mov
mull
pop
outsb
std
mov
out
push
or
xchg
dec
fnstsw
mov
mov
insb
jne
dec
mov
or
outsl
cltd
ss
and
xchg
data16
pop
test
repnz
pop
or
cmp
aaa
lcall
push
js
lahf
xor
jl
lret
ljmp
push
cmc
xor
shll
cmc
aam
xchg
adc
adc
add
lcall
cmp
imulb
addl
ja
int3
mov
test
pop
ror
jge
fsubr
into
movsl
sub
lods
push
mov
inc
outsb
aas
gs
mov
xchg
enter
stc
push
mov
sbb
xchg
add
sub
and
mov
cmp
dec
or
mov
pop
and
mov
aaa
scas
in
sub
add
sub
cltd
and
lods
and
push
mov
pop
mov
addr16
cs
cmp
jns
stos
int3
loop
shll
pop
xorl
xor
push
rorl
ljmp
data16
loopne
mov
loopne
sbb
xor
jo
push
cmc
xchg
les
test
js
aam
jns
das
jge
mov
sub
cmp
loop
out
mov
mov
sub
cwtl
cs
popl
imul
popa
ds
sub
jmp
jbe
pop
xchg
stos
leave
pop
movsl
push
push
out
popl
out
leave
xor
or
xchg
jp
imul
gs
or
mov
in
out
push
cltd
xor
imul
cmp
out
imul
gs
cmp
add
fnstcw
xchg
jno
es
add
idivl
and
push
or
or
lahf
cmp
stos
pop
sbb
mov
outsl
sbb
ljmp
je
movsb
add
xor
xchg
pop
and
push
inc
sub
je
fnstcw
ret
test
lret
or
aas
adc
shr
mov
xchg
xchg
pop
leave
scas
xchg
add
pop
adc
pop
xchg
add
pop
fsubr
jmp
popa
sbb
shrl
fwait
or
bound
scas
dec
mov
stc
sub
mov
gs
sbb
cli
adc
into
and
loope
adc
mov
pop
adc
adcb
adc
mov
mov
enter
xor
lds
sbb
aad
mov
dec
mov
or
mov
out
fnsaves
and
push
inc
xchg
ljmp
ret
push
cmc
xor
data16
insb
mov
and
cmpl
and
mov
test
js
sarl
lret
xchg
adc
sub
adc
ss
shrb
inc
push
push
imul
adc
pop
in
cli
popf
jecxz
lea
loop
add
adc
sub
mov
fwait
das
adc
mov
add
out
icebp
xchg
mov
testb
gs
mov
push
cltd
mov
or
jle
adc
and
dec
insb
inc
mov
dec
jae
cmp
jbe
jnp
add
cmp
cltd
jecxz
adc
or
sub
cmp
pusha
aas
or
xchg
out
mov
call
lahf
movsb
scas
cwtl
popa
mov
cmpsb
pusha
pop
bound
add
mov
ss
sbb
mov
mov
iret
jmp
or
in
addr16
inc
mov
pushl
mov
ret
ss
adc
inc
add
adc
icebp
cmp
adc
mov
dec
or
in
lret
std
shlb
fs
mov
sub
and
mov
test
call
std
leave
push
cmp
jns
shll
mov
rcr
nop
pop
bound
cli
sbb
adc
outsb
idivl
into
pop
mov
xorl
mov
bound
pop
in
pop
mov
mov
add
dec
nop
jg
dec
lock
dec
jns
repnz
cld
repnz
xchg
xchg
out
or
popa
notb
push
in
hlt
sti
fidivrl
jnp
mov
lahf
std
adc
movsl
fists
shl
xor
stos
sbbb
dec
cld
mov
sub
push
test
sarb
pop
aad
cmp
imul
adc
sub
out
clc
das
mov
aas
jbe
test
fsubs
out
push
rcll
mov
push
sub
inc
daa
jne
mov
jne
dec
or
fdivrs
mov
mov
sbb
xchg
cmpsl
inc
aas
mov
mov
sub
jae
ret
lods
stc
pop
pop
outsb
mov
push
or
mov
pop
jo
cmp
fcompl
loopne
xor
mov
push
dec
add
outsl
and
repnz
scas
dec
ljmp
mov
leave
insl
loopne
idivb
inc
add
out
data16
stos
push
adc
dec
xor
inc
fld
in
mov
stos
pop
xlat
notb
jae
mov
sahf
rorl
mov
sub
arpl
jne
cmc
adc
pop
imul
mov
jbe
sub
sbb
mov
mov
mov
imul
inc
jnp
mov
sub
xor
mov
xlat
xchg
aam
daa
cmc
outsl
mov
insl
mov
mov
in
pop
jmp
pop
call
aaa
test
cmpsb
pushf
ds
not
insb
xchg
jnp
cmp
inc
and
or
sbb
xchg
cmp
pop
les
cld
mov
popl
xchg
sbb
enter
clc
nop
loopne
cmpl
mov
repnz
inc
sbb
insl
lahf
jmp
jmp
push
xor
popf
lret
fidivrs
test
mulb
xor
stos
mov
mov
das
popf
add
adc
inc
pop
add
stos
insl
or
mov
adc
add
in
or
jecxz
fwait
xchg
in
stc
cs
mov
nop
loop
push
mov
mov
cmp
and
clc
loop
xorl
je
jae
add
call
xchg
icebp
push
jnp
add
adc
mov
fbstp
std
adc
dec
xor
jecxz
out
jg
xlat
sub
lods
pusha
loop
fimull
andb
pop
cmp
xor
sbb
loopne
mov
mulb
insb
sti
inc
cmc
add
mov
inc
popf
jl
ljmp
inc
fmulp
push
iret
repz
mov
cs
mov
pop
and
in
addr16
subb
xchg
rorl
jge
ret
lods
sub
loope
push
popa
add
push
mov
sub
lea
inc
cmp
fsts
sub
sub
movsb
sub
jnp
loop
shrb
into
mov
cmp
test
mov
sbb
loope
test
imul
xor
mull
lock
ficoml
adcb
js
popf
cmp
xor
imul
out
xchg
sub
push
test
mov
dec
bound
mov
jge
cmp
hlt
mov
jmp
jmp
cmp
cmpsb
inc
mov
test
or
xor
mov
xchg
cmp
push
inc
lock
out
insb
xorb
mov
outsl
adc
or
std
jnp
js
dec
jecxz
add
push
jle
and
pop
dec
or
idivb
push
adc
mov
je
daa
dec
mov
fimuls
mov
mov
lcall
cmp
push
and
fwait
hlt
lret
incb
dec
xchg
mov
pop
imul
sahf
imul
test
icebp
pop
lahf
sbb
sub
loopne
lea
lods
mov
movsb
jno
iret
pop
and
cld
pop
mov
pop
movsl
lods
pop
rcrl
xlat
mov
sub
cld
jmp
mov
lods
aad
test
sbb
mov
out
push
push
push
jmp
jmp
notb
push
aaa
fs
lret
adc
insl
mov
and
push
pusha
and
outsb
gs
mov
pop
and
jmp
jno
sahf
adc
movsb
mov
inc
and
lcall
mov
dec
ror
cwtl
fldt
es
dec
jge
jnp
out
test
fidivrs
and
push
or
xchg
push
sbb
sbb
add
mov
jnp
xchg
pop
aas
dec
xchg
sub
adc
xor
jns
cmpsl
and
jg
cmp
jae
flds
test
js
mov
add
or
mov
and
stc
xchg
push
push
aaa
sti
daa
dec
fisubl
sub
jb
inc
xchg
adc
mov
out
pop
and
mov
lods
adc
lret
int
dec
and
test
call
mov
test
arpl
pop
rcll
sti
jecxz
jo
sbb
pop
lea
push
out
ja
jno
movsl
icebp
and
pop
loop
add
inc
dec
xchg
lock
mov
test
iret
cmovge
loop
cmpsb
cmp
jp
fucom
xorl
std
adc
mov
test
push
enter
nop
lds
lcall
movsl
hlt
pop
inc
or
push
pushw
jne
or
negl
test
cltd
adc
ret
cmpsb
add
add
mov
cmp
mov
repnz
aas
test
inc
push
jns
mov
inc
pop
imul
inc
mov
sbb
xchg
and
into
sarb
or
lret
movsl
jmp
repnz
lret
fidivrl
lcall
les
pop
pop
mov
mov
pusha
fildl
gs
xchg
jne
sub
inc
pop
or
ss
repnz
scas
and
adc
mov
paddd
sbb
in
mov
adc
jmp
jp
cli
test
das
mov
neg
mov
add
jg
xchg
xchg
mov
ret
mulb
pop
xchg
and
dec
or
add
imul
jno
push
imul
pop
push
sbb
call
enter
inc
mov
test
xchg
or
test
test
jl
cmpsb
add
enter
ljmp
fsubs
ret
mov
repz
cmp
in
xchg
movsb
out
in
je
jge
inc
imul
loop
repz
pop
imul
and
push
iret
xchg
jno
jae
or
pop
cs
cmpsl
and
xchg
call
jmp
jno,pt
fcmovne
and
jno
rorl
xchg
popa
dec
je
pop
sbb
flds
pop
add
loopne
ret
inc
push
jnp
mov
outsl
add
xchg
mov
adc
in
jae
pop
and
leave
push
lret
sbb
imul
inc
clc
call
xor
sub
mov
adc
stos
rclb
sub
icebp
hlt
mov
shl
hlt
inc
adc
or
mov
aaa
fcoml
xor
mov
insb
aaa
je
ret
aas
les
addr16
push
jb
jns
roll
mov
in
hlt
ficomps
loop
pusha
scas
test
ds
mov
jg
test
mov
push
loop
test
jl
jne
cmp
sbb
fmull
imul
mov
cmc
stc
out
sub
outsb
inc
adc
pushf
pop
incl
insb
loopne
shlb
dec
outsb
aaa
jmp
rorl
dec
lahf
ljmp
fistpl
cli
and
sub
stos
retw
test
jns
mov
sbb
sbb
push
mov
sbb
scas
adc
addb
fwait
mov
and
xchg
mov
bound
andl
cmp
sbbl
mov
dec
and
roll
jg
fnstenv
and
loop
inc
aaa
sub
xor
rcl
mov
dec
iret
mov
stos
cmp
mov
pop
lcall
aad
dec
test
and
mov
ss
jl
xchg
adc
es
cltd
jb
jo
fdivrs
adc
mov
imulb
scas
xor
lods
lea
aaa
js
xor
sbb
jno
clc
sbb
push
jns
inc
outsb
add
pop
xor
ret
mov
push
iret
adc
inc
xor
jbe
sbb
fldenv
mov
nop
stc
cmp
movsl
mov
adc
pop
jp
fsubl
push
adc
inc
test
call
push
sbb
loopne
cld
pop
inc
jns
shll
inc
sbb
inc
movsb
push
jae
test
jne
xchg
orl
jge
push
out
jl
mov
push
sub
adc
in
jmp
gs
loopne
jae
ret
cli
sti
push
jecxz
push
insl
inc
shll
dec
popa
jp
or
xchg
lods
adc
push
loop
mov
cmpsb
lret
lcall
mov
lds
movsb
cmc
jecxz
test
xchg
mov
iret
push
es
icebp
xchg
xor
push
scas
inc
and
adc
or
sub
daa
ss
jge
adc
negl
push
nop
in
jmp
add
nop
aam
cmp
lret
ss
xchg
lds
into
xchg
lcall
icebp
std
cmpsb
sahf
rclb
sbb
pop
pop
aas
dec
lcall
sub
ss
mov
nop
sbb
fwait
cmp
popf
cmp
cmp
push
fsubl
mov
rorb
lea
jl
fcomps
mov
dec
shll
or
mov
ror
bt
mov
fidivrs
mov
push
psllq
or
mov
call
cmp
jle
mov
repnz
add
or
jg
lock
movsl
fsqrt
sub
cmp
jg
outsb
fiaddl
cli
dec
rcrl
xchg
or
inc
pop
mov
xchg
add
push
push
fimuls
decb
lret
xlat
or
mov
shl
xor
frstpm(287
cmc
push
mov
dec
in
lahf
push
sub
lcall
xchg
shll
inc
outsb
mov
fdivs
fwait
loop
push
sbb
mov
xchg
mov
jae
xchg
enter
xchg
push
clc
inc
das
bound
sbb
out
push
jg
adc
out
cmp
mov
addl
jmp
jle
scas
addr16
add
lods
shl
sbb
xchg
inc
repz
and
pop
test
imul
fcomip
jns
pop
clc
or
daa
out
pushl
or
scas
ds
mov
sbb
arpl
jne
mov
xchg
xchg
testl
icebp
inc
xchg
mov
mov
subl
in
xchg
stos
push
jle
fwait
test
adc
mov
loope
cmp
jp
out
out
dec
ss
jl
mov
outsl
int3
sub
sbbl
xchg
push
xor
mov
or
add
push
pop
pop
pop
inc
adc
xor
test
dec
xchg
and
cmp
movsb
idiv
or
filds
mov
mov
lret
pop
and
ficomps
add
push
or
add
xor
lock
insb
ret
popa
inc
pop
inc
sbb
fsubrs
stos
or
and
dec
adcb
mov
dec
aad
pop
enter
dec
cmp
es
dec
testb
sbb
inc
xor
je
rorb
jb
fistl
fmull
mov
add
mov
icebp
sub
sbb
push
mov
dec
out
das
pop
test
leave
xchg
dec
pushf
ficoml
add
addb
jo
or
jo
mov
int
mov
jle
mov
aas
shrb
into
pop
and
xor
scas
lcall
int3
inc
clc
cld
jp
mov
cs
in
loop
jp
aaa
inc
cli
jnp
js
adc
lret
xchg
dec
icebp
jae
push
jne
and
sbb
xchg
adc
imull
into
mov
bound
jne
xlat
std
enter
jp
add
xor
test
cmpsl
movb
inc
jne
stos
negl
mov
push
or
cmp
aas
pushf
jne
shll
loopne
pusha
rcll
mov
inc
repz
outsl
and
push
mov
in
movsb
mov
lea
stos
push
push
fldenv
mov
jbe
repz
mov
int
insb
inc
mov
add
jp
f2xm1
rorl
imul
mov
je
out
mov
js
cwtl
inc
sti
mov
sbb
fcmovnu
cli
psllq
mov
mov
inc
sbb
mov
test
mov
bound
test
push
cmpsl
fimull
mov
mov
cs
jb
movsb
push
or
fnclex
sbb
mov
sbb
xchg
arpl
popf
les
ds
stc
ret
roll
lret
xchg
enter
fwait
lods
shl
and
adc
jb
dec
rcl
test
out
mov
in
outsb
sbb
call
stc
fwait
dec
popa
fcmovu
or
nop
push
int
jns
scas
fst
loope
push
addr16
pop
dec
jle
sub
cmp
ljmp
xchg
enter
movsb
paddsw
pop
xchg
jge
jmp
sub
hlt
mov
lret
sbb
insl
mov
insb
push
scas
scas
cmp
popa
mov
loopne
mov
inc
sbb
push
push
add
mov
mov
push
pushf
xor
das
movsb
imul
cmp
cmpsl
clc
lods
scas
jbe
loope
int3
cltd
push
lret
bound
jmp
push
mov
jnp
dec
call
clts
call
insb
mov
mov
clc
xor
push
out
test
inc
dec
cmp
pusha
mov
fildll
push
fs
aam
test
neg
sub
pop
ret
mov
fwait
inc
mov
pop
jmp
sub
mov
xchg
mov
push
add
notb
test
in
and
cmc
pop
iret
icebp
pop
dec
mov
jo
std
stos
mov
adc
xchg
pop
outsb
sbb
shll
pop
sbb
in
out
pusha
jnp
outsl
xchg
in
int
xchg
pop
and
dec
and
mov
push
icebp
pop
mov
adc
push
ljmp
pushf
popf
add
imull
mov
daa
es
jl
add
dec
xor
je
jmp
dec
gs
and
pop
js
push
and
jmp
sub
data16
jl
insb
aam
ret
pop
add
push
adc
mov
fcomi
outsl
ret
xchg
jl
dec
popl
jne
xchg
xchg
push
call
lret
mov
inc
aaa
add
in
shr
jecxz
and
outsl
push
movsb
out
pop
push
mov
aas
add
daa
sub
in
adc
sahf
fidivrs
movsl
clc
bound
stos
daa
psrad
andl
pop
xchg
andl
aam
or
mov
sbb
xchg
mov
mov
jo
pusha
addr16
pop
xor
pushf
not
xor
sbb
mov
pop
mov
inc
xor
loop
push
adc
pop
dec
cmp
lods
rcl
test
mov
insl
xchg
dec
mov
imul
adc
sbb
ret
or
xlat
mov
iret
xchg
insl
imul
lock
mov
sub
out
mov
xchg
mov
enter
xchg
mov
out
test
mov
push
stos
pop
imul
pop
dec
pop
sbb
push
out
cmpsl
orb
and
inc
jno
fisttpll
pop
je
push
add
andl
push
xlat
xchg
popa
aam
sub
shll
lret
aas
std
ljmp
add
loop
adc
lcall
arpl
idivl
enter
fwait
mov
cmp
enter
repz
cmp
xchg
push
hlt
jne
and
jno
push
sti
jno
mov
mov
lea
mov
jo
loope
or
pusha
aaa
mov
stos
js
xlat
xchg
rclb
jecxz
xchg
jne
ds
cmpsl
push
mov
pop
ljmp
or
jg
es
dec
add
pop
mov
rol
mov
sub
sub
add
outsl
push
into
pop
pop
fwait
pusha
inc
enter
xor
dec
test
mov
xor
sbbb
mov
jnp
iret
out
xchg
mov
pop
pop
movsb
inc
je
rclb
test
rcll
xchg
inc
sbb
or
xchg
gs
ret
popf
or
scas
mov
push
bound
enter
out
inc
push
cmp
xchg
pushf
mov
mov
adc
mov
pop
dec
stos
mov
cli
movsl
pushf
mov
jne
push
jb
mov
mov
outsb
push
xlat
jns
xchg
ds
jnp
mul
mov
or
mov
adc
jmp
pop
mov
aaa
add
cmc
lret
xor
mov
in
mov
xchg
pop
js
mov
jp
fs
cmp
imul
and
dec
sub
inc
std
push
and
std
sbb
mov
xchg
or
adc
lcall
jnp
mov
add
and
and
cmpsb
pop
aad
mov
ret
out
or
jns
insl
and
jle
mov
lock
adc
fiaddl
add
ja
mov
inc
out
mov
pop
lock
and
mov
loope
addl
andl
in
test
jmp
pop
mov
aam
sub
adc
mov
sbb
mov
and
push
sahf
dec
ljmp
or
popf
call
mov
rolb
xor
addr16
sarl
hlt
push
ljmp
jmp
pop
bound
pop
jns
inc
mov
insb
push
cmpsb
mov
lret
ljmp
lret
cli
mov
adc
push
mov
push
dec
jnp
icebp
cmp
push
mov
xor
sub
repnz
test
out
pop
lea
pop
sub
mov
lcall
jle
lahf
mov
add
mov
jbe
jno
mov
int
sub
imul
mov
cli
mov
push
add
add
arpl
and
xor
push
inc
aas
pop
jnp
pop
cmp
bound
pop
jne
inc
loope
fdivrs
push
mov
pop
mov
das
insl
stos
cmpsb
fs
arpl
and
in
xor
jno
xor
js
sub
mov
popa
jp
mov
jnp
xchg
jbe
aas
inc
pop
imul
sahf
in
cmpsl
cmp
pop
lods
popa
in
test
test
sbb
leave
jle
push
sarb
test
add
mov
inc
ret
xlat
adc
and
ljmp
mov
sbb
jmp
sbb
dec
xchg
cmp
rcr
sub
adc
ja
outsl
push
cltd
cmp
add
fists
fsubrs
push
test
repnz
inc
pop
out
pop
pop
imul
insb
sub
cmp
and
xchg
test
ljmp
cmp
cmp
insb
das
push
sahf
xor
jns
add
jmp
in
data16
jmp
std
dec
leave
fistps
xor
data16
scas
std
sub
add
fs
lods
pop
lret
cs
rcrb
jno
sbb
cmova
repnz
arpl
repz
add
push
mov
jbe
push
hlt
xchg
dec
negl
adc
inc
dec
out
inc
inc
jno
jge
fs
aad
int3
cmpl
jmp
in
insl
jns
shrl
popf
sbbl
cltd
ljmp
out
mov
xor
mov
loopne
imul
cmp
test
rcr
jcxz
and
cmp
or
test
divl
testl
dec
loop
jne
cmpsl
or
adc
ljmp
loope
inc
aad
jne
nop
daa
enter
lods
sbb
bound
repz
cmp
cmp
subl
add
pop
mov
dec
mov
sahf
cli
pop
lahf
inc
jo
xchg
pop
xor
dec
jae
inc
ret
push
sub
or
jle
jae
xchg
andl
int
sub
lds
rcrl
jae
inc
mov
pop
push
or
xchg
or
inc
daa
sbb
inc
push
aam
xorl
jno
fwait
inc
cmc
xchg
mov
cs
fmull
and
sub
pushf
cmp
fnstcw
sub
sahf
lcall
fstps
gs
mov
leave
cmpsb
dec
push
shufps
pop
push
pop
imul
adc
xchg
fdivrl
xor
cmp
mov
pushf
and
add
loop
pop
es
jb
xchg
xchg
std
jbe
jle
cs
ret
outsl
stos
jns
imul
imul
jb
les
mov
cld
pop
mov
sbb
scas
add
cld
lods
mov
mov
hlt
repnz
cltd
dec
fnstsw
inc
jo
or
fsubrl
movsl
dec
and
mov
or
lds
xchg
adc
clc
inc
or
mov
lret
repz
int3
mov
sub
mov
pop
mov
ljmp
ds
das
xchg
xchg
jbe
pop
push
cmc
jl
pop
inc
add
std
pop
xchg
push
test
dec
mov
xchg
subb
es
repnz
or
ret
out
pop
fistl
loope
xor
jmp
cmc
aaa
jo
out
jne
mov
and
jp
sti
addl
imulb
lods
shl
and
lock
cld
or
sub
sbb
arpl
mov
fisttpll
aas
roll
stos
xor
xchg
cmp
sti
mov
std
imul
pop
lock
cli
push
mov
mov
jmp
or
push
push
ljmp
pop
andl
out
sbb
jmp
stos
or
jg
call
ds
adc
movsl
call
gs
push
sbb
fldt
push
xchg
sbb
call
and
std
mov
pop
xchg
mov
pop
aam
stos
aad
out
imul
repnz
add
cltd
sbb
mov
adc
dec
adc
dec
orl
stos
lock
cltd
pushf
fcom
mov
fcomps
or
lds
pop
mov
cmp
leave
pop
pop
mov
xor
scas
mov
mov
mov
sbb
rclb
into
adc
cmp
cmp
jp
jno
push
mov
xchg
pop
sti
iret
pop
sbb
cs
testl
and
pop
imul
dec
jnp
shr
shrl
jbe
mov
sub
mov
sub
out
fsub
push
pop
push
cmp
and
dec
imul
pop
out
mov
movsl
inc
in
in
mov
jno
out
cmp
scas
arpl
test
insb
sahf
sahf
lcall
inc
xchg
and
iret
sti
xor
loope
jb
rolb
mov
push
add
cmpl
jb
sbb
xchg
daa
pop
aam
leave
dec
aaa
pusha
jle
sbb
imul
xor
push
xor
into
repz
xchg
dec
xchg
es
sbb
dec
es
xorl
aaa
gs
jl
and
sar
push
icebp
popa
roll
popf
sbb
cmpsl
mov
sub
push
pushf
dec
mov
test
scas
xchg
aas
pop
jo
dec
mov
repz
fwait
mov
jg
lods
rclb
mov
shll
stos
in
add
xchg
and
js
mov
out
in
push
dec
outsb
push
cmc
jl
aad
mov
into
lods
shll
mov
push
enter
cmc
adc
insb
adc
pop
sbb
mov
pop
inc
jae
mov
dec
dec
lcall
enter
jb
xchg
ss
inc
jae
push
stos
movsb
mov
imul
jle
shrl
fnstcw
popa
xchg
dec
mov
jnp
mov
and
dec
in
insl
mov
cmp
fwait
cs
xlat
arpl
cli
lea
imul
dec
jbe
popa
lea
xchg
inc
mov
add
lahf
enter
xlat
jae
pop
dec
push
pop
push
rclb
outsb
or
mov
test
sub
push
les
inc
shrb
push
repz
push
jns
shlb
ficoms
push
icebp
mov
sbb
xor
addl
pop
jmp
sub
arpl
pop
jp
sahf
fsubl
mov
pop
pushf
clc
adc
mov
ja
adc
pop
in
xchg
dec
cmp
fwait
int3
popl
sbb
aad
adc
mov
inc
sub
js
xchg
loope
fdivl
cmp
ss
pop
iret
push
inc
test
push
inc
sbb
add
lret
inc
cmpsl
pop
js
test
in
les
addr16
dec
inc
add
pushf
and
aas
pop
arpl
xor
jns
push
sbb
cli
mov
movsb
or
lcall
mov
mov
pop
or
sbb
sub
fnstenv
int3
fdivrp
movsl
xchg
shll
rcll
les
inc
repnz
cmp
imul
push
leave
out
mov
jge
xor
add
sbb
sbb
push
andl
push
jnp
test
rclb
mov
lea
loop
pop
xor
ficompl
mov
mov
iret
sbb
cmp
fs
cld
inc
xchg
and
or
mov
sbb
mov
fldenv
adc
and
push
out
pop
jg
inc
pop
jle
xchg
nop
pop
push
loop
xchg
mov
imul
sbb
pusha
gs
loopne
jnp
jge
mov
sbb
pop
push
mov
jge
mov
xor
aam
jmp
sub
aam
jp
mov
mov
jnp
fsts
stos
dec
push
shrb
mov
lret
into
mov
outsb
sub
imul
ficomps
add
adc
mov
lds
jl
cli
adc
mov
mov
push
sub
movsl
sub
ljmp
push
lahf
sti
in
mov
insl
sub
xlat
cmp
lcall
or
xor
inc
mov
iret
test
mov
and
push
sub
xorb
xor
mov
add
fwait
mov
mov
pop
cli
adc
sbb
or
aad
cmc
mov
fisttps
inc
push
leave
loope
mov
mov
add
scas
aam
cmp
push
pop
adc
jnp
fistpl
and
sbb
aaa
test
es
mov
cs
stos
pop
insl
xor
xlat
repnz
out
sti
push
aam
adc
pop
pop
loop
shrb
mov
ljmp
push
pop
loopne
lret
int
in
dec
repz
jl
bnd
aas
pop
sbb
nop
sub
xor
mov
in
mov
in
scas
adc
sti
pushf
jns
scas
movb
pusha
fsubrl
mov
repnz
xchg
jae
sub
push
push
mov
mov
adc
int
icebp
mov
push
outsb
add
inc
inc
mov
jne
pop
mov
shll
outsb
std
and
adc
sub
adc
push
sub
push
mov
ds
insb
adc
and
andb
out
fwait
rolb
dec
mov
mov
gs
scas
outsb
or
lea
fidivrl
scas
jnp
adc
or
mov
je
and
popf
xlat
mov
inc
int3
stos
add
and
hlt
mov
jmp
fmul
in
xchg
cmpsl
daa
push
pop
bound
push
rcrl
stos
mov
out
xchg
inc
js
sbb
daa
cwtl
xor
push
inc
ljmp
orl
push
insl
add
mov
cmpsb
cmc
add
cld
aam
mov
mov
cmp
lahf
dec
jbe
xchg
sbb
mov
icebp
cmp
inc
adc
shlb
xchg
int
mov
sub
fisubs
outsb
movsl
pop
loope
xchg
adc
js
sbb
xor
mov
rcll
out
cmp
ja
lcall
mov
lds
xchg
iret
push
inc
push
mov
lahf
fbstp
adc
daa
addr16
dec
mov
int3
scas
scas
das
pop
in
sbb
sub
sbb
ffreep
jp
fwait
mov
icebp
fisttps
or
jle
ljmp
xor
ss
pop
and
test
adc
popf
aad
push
shrb
movsl
sbb
adcl
sti
cld
mov
je
vpaddb
jo
xor
mov
mov
enter
sti
inc
int
fs
imul
sub
mov
pop
push
sbb
inc
adc
orl
ret
or
mov
arpl
push
mov
aaa
lock
shll
aas
dec
dec
imul
rorb
arpl
sahf
popa
dec
add
out
mov
pop
js
imul
pop
out
shrb
outsl
mov
out
lea
daa
cmpsl
pop
add
add
roll
push
in
adc
fldt
imul
pushf
test
jmp
popf
sub
pushf
les
or
cmpsl
dec
cmp
stc
mov
gs
and
fsubr
subb
xor
iret
aaa
xor
imul
movsl
popf
mov
push
sbb
adc
inc
sbb
fmul
adc
cltd
lret
ret
and
stos
xchg
sub
sbb
pop
cld
loopne
mov
jle
jns
cmpsb
sub
incl
jp
push
xchg
mov
jne
lgs
cmc
mov
push
fcomp
je
lods
scas
sbb
mov
push
test
sub
inc
call
dec
cmc
aad
cmp
cmp
xor
aaa
inc
les
out
in
test
add
fdivrs
out
cmp
add
dec
jne
adc
rcrb
cmp
and
push
cmpsb
jl
insl
mov
push
jo
xchg
cmpl
pshufw
pop
xor
lds
lret
addr16
fsubr
inc
std
les
repz
addl
int3
adc
mov
mov
inc
in
movsl
std
adc
adc
gs
sub
sub
aaa
dec
js
cmp
pslld
leave
idiv
lea
push
mov
dec
cmp
mov
lret
mov
xchg
push
mov
ret
xchg
mov
aaa
mov
mov
pop
jg
movsb
cmp
mov
jae
dec
fistpl
mov
jge
sahf
sbb
out
hlt
xchg
insb
cmc
fmuls
jecxz
and
mov
push
push
jecxz
movsb
mov
clc
cld
push
das
lret
cwtl
pop
cltd
jbe
jbe
xchg
sbb
xor
and
push
mov
mov
stos
xor
sub
jnp
jbe
or
daa
lods
xchg
fidivrs
fisubs
arpl
xlat
inc
or
adc
jns
fistps
decl
decb
jnp
sub
pop
bnd
mov
sbb
mov
jb
stos
xchg
mov
mov
inc
cmp
pop
cmp
clc
push
add
inc
jle
fldt
aam
push
cwtl
lahf
je
sub
mov
add
xor
xor
js
in
inc
xchg
js
add
add
pop
pusha
loop
cmp
mov
push
sarb
and
mov
push
fnstenv
mov
ljmp
out
push
xor
scas
xor
ja
ret
mov
fisttpl
sub
push
rorl
decl
idivb
shll
xlat
mov
xor
sub
adc
lahf
pop
int
das
cmp
dec
sbb
mov
xor
dec
rorl
stos
dec
add
mov
das
lret
scas
cmp
add
cmpsb
mov
adc
adc
pop
adc
and
mov
push
fldt
inc
adc
loopne
push
adc
outsb
pushf
push
mov
shrb
and
xchg
pop
je
sbb
mov
pop
ja
call
sahf
cmp
push
adc
and
push
adc
shrl
sahf
inc
push
fisubs
pop
xchg
cmp
ds
xchg
add
jo
mov
out
inc
mov
and
add
jbe
and
and
jns
das
and
lahf
out
les
js
or
mov
mov
xor
in
xor
mov
sub
jmp
pop
sbb
fs
fcoml
mov
push
pushf
and
in
aam
or
inc
sarl
nop
mov
jnp
ds
jp
fwait
fwait
mov
pop
fstps
mov
mov
mov
mov
adc
in
xorl
push
jg
push
enter
js
out
mov
jne
pop
or
mov
insl
pop
aad
imul
std
push
cmpsl
fstl
rcll
cwtl
and
dec
fsubrs
xchg
out
xor
mov
es
and
out
mov
mov
fisttpll
adc
or
lret
int
push
stos
cmp
mov
adc
cwtl
loope
cld
sub
sbb
icebp
pop
xor
sub
jecxz
sbb
sbb
clc
repnz
inc
adc
sbb
enter
sub
sbb
lret
and
and
imul
rcrb
lcall
jle
shll
push
adc
in
loop
sbb
movsl
or
loop
adc
outsl
sbb
cld
xor
mov
inc
ret
and
add
rol
inc
jns
jecxz
bound
stc
ja
push
and
popf
outsl
stos
dec
or
push
into
push
outsb
ds
std
out
xchg
push
pop
dec
cmpsb
sub
add
xchg
fwait
in
imul
jge
cmp
lret
test
negl
lret
cmp
js
arpl
fwait
xorb
sub
jns
scas
lcall
inc
jl
insb
in
shrl
adcb
adc
jmp
ret
repz
sub
in
aad
cmp
mov
mov
mov
pop
out
jp
ljmp
and
pop
xchg
lahf
fldcw
leave
scas
imul
inc
pop
inc
mov
shrl
lret
push
push
loop
mov
xor
and
jo
and
out
loope
in
push
repz
out
mov
int3
pop
mov
sub
lods
rcrl
add
movsl
outsl
jne
xor
mov
cld
cld
sahf
push
aaa
outsl
sub
sbb
cmpsl
xchg
es
stos
and
lahf
int
add
ficoml
out
mov
aad
hlt
imul
sub
xchg
movsl
cmpsl
ja
pop
fdiv
rorl
std
sarb
aam
cmp
clc
ficomps
popf
fwait
mov
mov
dec
xlat
dec
push
xlat
xor
imul
jle
cmp
dec
pop
mov
mov
insl
je
in
sub
xchg
loopne
add
lds
xor
lock
mov
shlb
xor
jle
hlt
mov
stc
bound
lock
dec
sahf
fsubr
cmc
xorb
popf
mov
pusha
adc
xor
sbb
in
lret
push
mov
movsb
fs
stos
mov
xchg
sbb
imul
or
jns
xchg
mov
adc
mov
mov
push
push
adc
lock
mov
add
cli
mov
lahf
mov
ss
std
out
mov
jbe
xchg
jbe
mov
sti
push
jp
out
adc
inc
mov
cs
cmp
cmc
inc
inc
stos
aas
imul
xchg
into
xchg
cld
pop
cmc
mov
push
movsb
inc
adc
idivl
push
lea
sbb
and
lods
addl
dec
inc
stos
mov
xor
inc
jne
jb
sbb
jle
cmp
stc
test
aas
loopne
push
pop
sti
cmpsb
and
and
jb
dec
pop
loope
or
daa
enter
adc
adc
stos
in
pop
sbb
pop
ja
jl
aaa
outsb
arpl
arpl
sub
icebp
sarl
sub
subb
test
push
jae
ds
xchg
rorl
mov
jp
insl
mov
jge
pop
xor
jmp
mov
test
int3
cmpl
add
pop
movsb
loop
bound
ret
call
sub
out
and
dec
sarb
scas
push
insl
jp
add
cmp
jnp
adc
xor
xchg
insl
repnz
jne
sub
xchg
int
mov
dec
rorb
in
mov
jg
fs
adc
cmp
add
pushf
mov
hlt
mov
jg
push
mov
push
and
pop
jbe
adc
lods
out
imul
movl
mov
cmpl
aas
cmpsb
pop
fldenv
jmp
lcall
and
cmp
mov
leave
test
and
mov
or
and
pop
push
out
pop
outsb
mov
cmpsl
pop
test
and
lock
pop
pop
lock
sbb
adc
push
add
push
nop
aad
outsl
add
cmc
jl
call
or
dec
cs
mov
cwtl
loopne
loopne
sub
mov
and
add
add
inc
sbb
lret
in
fildl
adc
pop
push
loopne
je
cmp
and
das
push
mov
cmc
test
pop
sbb
aam
rcrl
jno
js
mov
xchg
out
inc
add
mov
daa
push
lods
cmpsb
mov
dec
xchg
test
xchg
jmp
push
dec
push
scas
push
inc
in
lcall
cmp
mov
int3
hlt
inc
pushf
sarl
dec
lock
iret
inc
fdivrs
loopne
jne
hlt
jbe
ret
push
push
push
pop
filds
loope
adc
sub
and
inc
cmp
ret
inc
nop
mov
xchg
xor
inc
popf
jp
mov
mov
xchg
sarb
mov
and
repnz
dec
rol
idiv
pop
shlb
add
mov
fnsave
stos
int
out
xor
lret
je
rcr
fst
iret
dec
push
push
jmp
mov
sub
jmp
out
pusha
ficoms
out
cmp
divb
lret
xchg
mov
scas
ds
sub
popa
or
rcrl
test
std
mov
rep
cld
add
arpl
dec
cmp
cmpsb
mov
sbb
insl
dec
xor
push
push
and
mov
movsl
push
gs
cmc
and
jle
mov
xchg
adc
jns
pop
inc
lret
cmp
ja
jge
mov
test
ds
in
inc
testl
lods
jnp
call
popa
or
xor
pop
je
mov
inc
cwtl
push
xor
pop
adc
push
daa
out
mov
shlb
lret
pop
in
push
push
and
xor
pop
aaa
mov
sub
cmp
sbb
subl
and
push
sub
push
push
mov
xchg
inc
cmp
mov
push
xor
cmp
jg,pn
ss
in
testb
sbb
mov
mov
ret
out
mov
clc
ret
cmp
xchg
sub
jae
inc
aad
out
mov
xor
fildll
bound
sbb
stos
fnstenv
cmp
xchg
cwtl
lcall
xlat
xchg
mov
pop
jae
divb
sar
xchg
and
shll
outsb
jo
mov
imul
enter
inc
jmp
mov
mov
mov
cmpsb
sarl
and
inc
adc
mov
xchg
push
arpl
mov
popl
add
scas
jge
jne
movl
mov
leave
sub
jb
fldenv
add
ds
imulb
shlb
in
fadd
mov
in
fs
imul
cmp
add
xchg
xor
out
int3
addr16
xchg
push
pop
pop
vunpckhps
cwtl
mov
int3
or
cwtl
lahf
mov
or
inc
push
fsubl
xor
mov
xor
mov
fsubs
scas
xchg
add
ja
es
mov
pop
sbb
inc
xlat
adc
jge
hlt
scas
in
stos
pop
sub
push
mov
fildl
mov
leave
or
dec
push
push
jbe
pop
insl
stos
mov
pop
daa
sbbb
jnp
inc
jmp
push
rcl
lods
lret
jl
inc
jge
in
shr
cmp
dec
cmpsl
jno
xchg
push
mov
fld1
cmp
mov
mov
mov
subl
or
adc
cli
lock
push
dec
fwait
sbb
fmuls
xlat
insl
ljmp
shll
push
fs
jl
lea
push
ficoms
sub
jbe
ljmp
sahf
lods
mov
adc
mov
out
jo
mov
push
aad
out
int3
jne
mov
mov
inc
xchg
sbb
or
in
stos
or
orl
andb
cs
mov
sub
das
popa
adc
scas
jne
jg
inc
rcrl
adc
pushf
out
in
hlt
xor
mov
jl
inc
lock
enter
jle
inc
mov
mov
nop
and
repz
sbb
inc
rcr
dec
icebp
cmp
lods
xor
les
out
push
repnz
nop
lret
jns
and
lahf
iret
cmp
lds
js
stc
sub
mov
sbb
add
aad
or
pop
lods
add
in
in
adc
dec
xor
aas
dec
cmp
jmp
ret
xor
sbb
mov
sbb
data16
in
jnp
push
imul
inc
mov
repz
mov
mov
fnstenv
sahf
ja
adc
mov
pop
cmp
insl
or
adc
inc
popf
add
sub
cltd
add
imul
cli
jns
ja
sarb
decl
xchg
int3
cwtl
std
incl
dec
out
enter
and
idiv
jns
mov
jae
movsl
jns
pusha
orb
pop
inc
jmp
cmp
add
xchg
xchg
mov
ljmp
inc
jnp
jp
cs
or
xchg
pop
push
int
mov
xor
in
imul
add
inc
pop
cmp
mov
out
xchg
fbstp
insl
or
in
inc
mov
xchg
int
add
clc
ret
xchg
test
or
sub
es
icebp
out
fildl
pop
mov
jb
stos
ret
dec
add
outsl
or
in
enter
add
ja
cmpsl
and
mov
das
add
dec
negb
imul
mov
cld
stos
jecxz
or
and
jae
cmp
flds
pop
ret
lret
outsl
fldl
mov
mov
pop
stc
add
andb
aam
mov
cmpsb
mov
nop
mov
cmp
ljmp
push
push
jmp
les
sarb
lea
mov
xchg
out
xchg
push
ficomps
add
test
sbb
pop
push
popa
push
jp
lret
cli
cmp
add
mov
mov
negb
xor
pop
mov
mov
mov
nopl
mov
cmp
pop
out
andb
or
jns
or
jmp
cltd
push
daa
add
mov
xchg
inc
aas
sub
mov
je
leave
int
cwtl
sub
dec
in
xchg
les
mov
pop
das
cmp
lods
mov
pop
out
mov
pushf
rorl
enter
fmuls
xchg
xor
pinsrw
je
jp
cmp
out
and
popa
mov
mov
mov
or
fwait
cmp
rcl
hlt
mov
scas
xchg
aad
pushf
nop
push
mov
pop
mov
iret
popf
adc
insb
jg
and
sti
xlat
fistps
and
mov
or
sub
push
pop
cmc
sub
imul
and
cmp
cmp
adc
jae
popa
jmp
sub
test
push
dec
pop
mov
out
sti
mov
out
xchg
sbb
pop
rcr
inc
jl
ret
sahf
sbb
cmp
jl
mov
push
xor
in
into
ss
mov
adc
or
push
mov
xchg
insb
filds
jno
mov
xchg
jns
mov
dec
outsl
fidivrl
cwtl
ja
es
pop
and
test
xor
enter
or
daa
and
cmpsl
shll
mov
stos
mov
inc
xlat
jmp
inc
pushl
and
das
or
jl
nop
mov
mov
mov
jo
push
xchg
es
fistpl
add
add
adc
enter
ja
insl
xchg
lods
cmpsb
dec
sbb
push
je
or
pop
popa
inc
test
jbe
fdivr
xchg
add
push
clc
add
stos
pop
rcl
pop
xchg
push
or
aaa
mov
jb
push
pop
jmp
das
adc
mov
into
sbb
sbb
repnz
sub
sti
test
test
gs
lret
cmpsb
adc
mov
pop
pop
in
inc
popf
mov
stos
mov
push
pushl
mov
push
mov
fistpll
fwait
add
cmc
pop
add
jne
roll
pop
lret
std
leave
add
mov
jle
dec
xor
sub
or
mov
inc
sahf
inc
adc
ds
scas
sbb
iret
fiadds
adc
rcrl
mov
lahf
mov
mov
out
lods
loopne
sub
xor
pop
sbbb
dec
and
cmpsb
icebp
pop
mov
rorb
push
sub
inc
bound
cwtl
daa
cmp
std
xchg
gs
cmp
inc
adc
lea
cwtl
dec
imul
jae
sbb
fcmovnbe
mov
lods
repnz
cld
sti
imul
sbb
data16
cmp
push
dec
cmp
movsl
ds
std
dec
jmp
inc
notl
push
dec
and
push
sbb
jl
cli
shlb
inc
leave
stos
jmp
es
jno
loopne
inc
lock
ret
sbb
pop
ljmp
mov
imul
mov
test
and
or
clc
icebp
pop
lret
pusha
test
and
mov
or
mov
addr16
mov
add
int
or
enter
mov
add
mov
adc
out
mov
inc
bound
xchg
stc
xlat
int
push
gs
mov
mov
hlt
mov
push
xchg
sub
lods
mov
enter
scas
pop
pop
shll
sarb
lds
xor
add
sub
inc
adc
add
add
jae
rcr
dec
xchg
adc
push
push
mov
icebp
push
in
dec
pop
sti
inc
xor
movsb
mov
xchg
std
outsl
loopne
sub
stos
xlat
sub
adc
add
pusha
stos
adcl
in
ss
ja
hlt
shrl
outsb
roll
icebp
sbb
shrl
and
aas
fwait
aam
je
lret
mov
ljmp
das
push
int
icebp
add
ljmp
gs
js
pop
stos
inc
and
arpl
cmc
mov
add
data16
ds
mov
or
scas
jmp
mov
push
mov
lods
mov
sbb
pop
jle
mov
pop
imul
loop
call
jl
and
or
inc
iretw
cmpsb
cs
push
pop
aas
cld
fs
mov
cwtl
nop
sbb
jge
dec
mov
adc
int3
mov
pop
imul
pop
pushf
in
jmp
into
mov
push
add
cwtl
outsl
add
cmp
mov
leave
shrb
cmp
mov
mov
aad
push
fs
xchg
mov
xchg
jl
arpl
mov
mov
scas
mov
in
movsl
rcl
sbb
leave
bound
jmp
ljmp
sub
in
clc
gs
sub
lods
adc
lea
inc
ret
mov
daa
xor
addr16
loop
nop
cmp
fwait
shll
sbbl
cmpsl
lds
insl
mov
mov
mull
add
les
add
add
lds
mov
imul
add
mov
xchg
test
inc
sbb
jecxz
leave
adc
call
xchg
push
dec
jg
call
inc
or
in
mov
or
sbb
insb
rclb
xor
data16
popf
dec
loope
insl
push
and
daa
aaa
ja
jne
pop
inc
mov
mov
subb
leave
mov
cmp
push
repnz
mov
cmpsl
ss
jne
jo
stc
dec
or
ret
mov
sbb
nop
lods
push
repnz
popa
mov
push
fs
notl
add
sub
add
adcb
mov
xchg
mov
or
data16
iret
test
sahf
stos
hlt
idiv
pop
test
add
pusha
aam
push
dec
pop
adc
or
jg
inc
fwait
or
shrb
and
popf
add
sarl
push
jnp
cltd
cmp
jbe
mov
pop
jecxz
sub
mov
mov
pop
bound
xchg
out
xchg
xchg
ret
cmp
jl
push
xor
and
inc
hlt
jb
fistpll
test
mov
xor
mov
mov
cmp
dec
ja
mov
leave
test
out
jge
xchg
mov
cmp
xchg
std
es
in
mov
imul
pop
dec
into
lods
ret
int
fs
sbb
fistps
das
mov
call
and
insl
jmp
cmp
loop
scas
adc
repnz
lret
mov
push
das
xor
je
push
shlb
pusha
dec
icebp
push
add
dec
out
cmp
sbb
mov
cmp
lods
stos
ljmp
cmpsl
push
xchg
xchg
mov
push
cmpl
flds
mov
xchg
cli
fmuls
sahf
inc
push
mov
das
adc
and
xchg
lahf
insb
outsl
xchg
leave
cs
or
pop
push
mov
fwait
pop
push
dec
outsl
sbb
cs
add
mov
pop
jnp
leave
movsl
push
pop
pushf
adc
in
mov
push
into
mov
cmp
outsl
sub
sti
into
xchg
inc
in
fwait
mov
pop
test
push
xor
cmpsb
bound
pop
ss
aad
inc
enter
xor
jns
cs
cltd
ljmp
adcl
test
dec
rcr
add
xchg
sub
idiv
cltd
imul
xor
mov
ret
scas
popl
shl
mov
loopne
mov
lahf
push
popf
sub
xchg
insl
jno
xor
sub
jl
cmpsb
imul
cmp
push
adc
xchg
adc
xchg
xor
lcall
mov
fcmovnbe
jmp
mov
pusha
sahf
out
xor
push
aaa
dec
int
jnp
jmp
add
mov
fwait
movsl
loop
adc
dec
mov
fs
rorb
insl
sub
mov
pop
insl
sbb
imul
int
imul
in
movsl
mov
loop
ret
std
sub
dec
jg
xor
outsb
cmp
and
in
mov
sub
jb
dec
cmp
clc
mov
es
mov
js
or
lret
outsl
dec
or
fildl
jmp
sbb
cltd
scas
push
mov
xchg
xchg
push
pop
scas
xchg
lea
aaa
or
cwtl
outsl
ret
dec
push
inc
push
mov
jne
bound
inc
popf
scas
jns
dec
add
mov
sub
cli
cli
je
push
xchg
mov
test
call
lcall
sub
or
xchg
sbb
out
jge
mov
jb
inc
jns
mov
movsb
pusha
xor
mov
dec
or
imul
add
or
mov
mov
and
pop
aas
xchg
jecxz
pusha
insl
repz
mov
mov
fmul
xchg
xchg
js
mov
ds
mov
gs
pusha
out
sarb
pop
shrb
adc
push
fildl
jmp
hlt
das
mov
cmp
pop
jecxz
sbb
cltd
stos
mov
mov
les
cwtl
out
xchg
or
das
sbb
jp
rol
loopne
lcall
push
mov
adc
sub
mov
and
mov
xchg
orb
mov
mov
fbstp
sbb
push
adc
out
popf
icebp
std
cmp
mov
mov
imul
shlb
inc
mov
xor
hlt
xchg
xlat
cmp
pop
pop
and
daa
cwtl
mov
xchg
test
insb
adc
sbb
and
xor
les
xor
ret
xor
cmc
subl
outsl
int
scas
mov
movsb
add
out
cmpsb
push
out
outsl
insl
pop
scas
mov
jnp
or
mov
dec
lcall
push
or
jnp
loope
cmp
negl
mov
idiv
loope
inc
dec
lahf
aad
pop
js
insb
inc
rorb
in
icebp
cmp
fwait
xlat
pushf
ret
mov
mov
adcb
cli
in
test
rorb
jae
cmc
pusha
mov
xor
pop
xchg
mov
into
sub
mul
lahf
cwtl
lods
and
lcall
dec
insl
pop
and
xor
and
pop
fs
cmpl
adc
jecxz
mov
mov
adc
and
enter
jp
fdivrl
pushf
test
or
push
jo
jg
aad
inc
cli
cmp
test
imul
mov
in
mov
imul
push
mov
jae
adc
js
aas
mov
cmp
pop
pop
cmpsl
or
call
in
out
hlt
xchg
pushf
sub
cmp
aas
pop
ret
mov
sbb
mov
pushf
pop
int3
int
mov
les
add
jb
scas
cs
inc
mov
add
div
jle
ss
inc
dec
cmp
insb
jb
std
jne
aas
roll
cmc
nop
inc
jecxz
adc
js
shll
add
movsb
movsl
stos
inc
pop
sub
jge
push
pop
shlb
add
add
sahf
or
gs
jno
cmp
inc
xchg
sub
mov
ss
add
cmpsl
dec
jns
call
pop
add
repz
dec
mov
jns
sub
inc
shlb
in
enter
mov
and
jns
cmp
sti
into
mov
xchg
pop
dec
lret
iret
pop
loope
jne
mov
cmp
push
cmp
lock
mov
jb
inc
push
dec
andb
jmp
ljmp
mov
or
aad
jmp
addl
rcr
in
loopne
mov
jp
and
or
out
push
xchg
xchg
bound
lahf
jne
out
pop
lcall
mov
bound
repz
mov
xchg
jb
dec
fucomip
xorl
sub
adc
fcomps
dec
ret
scas
fwait
mov
scas
jb
mov
icebp
pop
test
fcomps
mov
xlat
sub
rcr
movsl
ret
lret
push
and
inc
sti
xchg
mov
or
adc
sub
out
or
pushf
dec
or
add
rolb
cs
std
or
scas
loope
xor
movsb
mov
mov
ret
adc
in
push
orb
xor
sub
pop
mov
cmc
sar
lcall
lock
lret
adc
jo
loope
mov
mov
std
repnz
mov
mov
mov
jle
out
daa
mov
jge
mov
push
out
dec
xchg
shl
loop
in
ljmp
mov
push
aam
mov
shrl
mov
add
xor
je
hlt
xchg
test
and
movsl
pusha
lahf
adc
lcall
rcrb
stc
sub
mov
or
je
adc
leave
mov
test
fdivl
pop
movsb
idivb
jg
stos
xchg
pop
frstor
pop
cmp
loope
pop
add
mov
mov
mov
pop
stos
adc
imul
js
lret
test
and
mov
in
fsts
push
lret
mov
pop
out
repnz
jmp
shrb
js
mov
jne
sbb
lcall
imul
sahf
ljmp
ds
xor
scas
adc
jge
mov
fimull
push
data16
pop
pop
imul
dec
adcl
or
add
or
xor
lds
lret
fmul
dec
js
xor
jg
daa
movsl
pop
jge
cld
call
ljmp
lds
ljmp
adc
sub
push
sub
sub
cmp
jbe
xchg
ror
jmp
iret
insl
xlat
ret
jo
inc
xor
push
adc
mov
sub
xlat
add
pop
sub
mov
adc
cli
popa
xchg
ljmp
lcall
das
and
lret
out
dec
lret
push
push
mov
movsb
inc
outsl
add
push
cmpsb
jo
int
xor
add
inc
or
xor
outsl
cmpsl
jp
mov
roll
mov
adc
push
jge
xchg
dec
mov
jo
xchg
pop
aas
stc
mov
fwait
push
shlb
out
pop
add
pushw
iret
push
add
out
addr16
inc
outsb
xchg
out
rcll
add
popa
push
or
push
pop
nop
pop
mov
insl
pop
rcrb
mov
xchg
icebp
pushf
ja
pop
fcmovu
mov
inc
negb
imul
rcrl
test
push
lcall
cmpsl
inc
fsubrs
pop
cmpb
sahf
emms
push
fwait
adc
ljmp
aam
fcmovnu
es
cs
stos
xchg
adc
or
cmp
ds
sub
cmpb
jg
clc
aaa
inc
xor
jmp
jbe
rcl
movq
sub
push
cmp
out
jp
out
push
fisubl
std
jo
repz
cmp
cltd
cmp
lods
outsl
gs
pusha
popa
imul
push
repz
add
popa
test
adc
arpl
mov
inc
ds
int
mov
bound
inc
mov
out
xchg
push
outsb
sahf
sti
jo
lret
pop
xchg
loopne
lcall
adc
sub
or
mov
sbb
pop
pop
mov
mov
push
xor
xchg
loopne
dec
adc
or
dec
shl
sub
xchg
mov
cltd
shll
outsb
leave
mov
and
or
lahf
int
repz
pop
jg
aaa
sbb
bound
sbb
aad
sbb
push
ja
je
jae
aam
cmp
mov
lret
insl
pop
sbb
aaa
mov
mov
jbe
mov
ds
arpl
ja
add
push
push
daa
out
orb
std
inc
jb
and
push
fs
ja
or
xchg
xchg
insb
sbb
push
xchg
pop
sbb
mov
jmp
fldl2e
inc
enter
adc
dec
imul
cwtl
pusha
pushf
stos
mov
dec
in
gs
mov
fwait
in
out
bound
xor
fiadds
sahf
sub
push
adc
xor
mov
fdecstp
mov
mov
sub
pushf
addr16
int
cltd
ret
sbb
shr
roll
dec
rol
push
adc
mov
test
inc
cmp
inc
ss
mov
xchg
sarl
fwait
mov
xor
int3
sub
pop
mov
cmp
cmpsl
add
iret
cmpsl
jns
jmp
aas
mov
lret
sub
pusha
jno
jne
in
mov
addr16
dec
jl
pop
pop
ret
sub
ljmp
aas
pop
xchg
mov
loope
push
fmuls
rsqrtps
jns
mov
push
arpl
add
push
sbb
repz
or
sub
xchg
and
lods
adc
cmp
cmp
fists
push
mov
jl
scas
inc
sbb
cmp
daa
xor
mov
out
ljmp
loopne
faddp
movsl
iret
rolb
mov
fmuls
pop
stc
cmp
xor
daa
aaa
inc
out
cmc
and
popa
sbb
sub
shlb
fists
mov
insb
and
cli
scas
lds
sub
movlhps
ss
lock
pop
call
fldcw
out
xchg
insb
out
jne
fldt
cwtl
mov
jge
aaa
push
imul
inc
cltd
mov
mov
sbb
mov
jno
nop
out
xchg
cmpl
daa
imul
hlt
in
or
int
sbb
insb
movsb
pop
mov
xchg
adc
gs
mov
pop
add
cmp
pop
sub
cmpsb
add
arpl
dec
sbb
lods
cli
add
mov
xor
fsubrp
rcrb
sbb
jb
imul
aam
or
xchg
inc
das
fwait
or
add
add
push
inc
scas
lret
imul
inc
sti
pop
test
or
ret
mov
clc
and
push
adc
dec
nop
cli
lods
xchg
jl
or
or
arpl
out
shll
in
rcrb
or
jne
lds
pop
xor
sbb
sbb
and
icebp
in
notb
jo
mov
sbb
xchg
bound
fisubrs
mov
pop
ficoml
mov
xchg
xchg
and
rolb
in
pop
pop
pop
pop
sbb
mov
cmpb
or
cmp
add
xchg
xor
jl
mov
push
je
insl
dec
sahf
adc
sub
insb
rol
mulb
adcb
adc
out
int
push
mov
mov
and
jmp
mov
addr16
add
cwtl
pop
add
mov
jae
int3
push
mov
inc
xor
es
in
andl
and
jg
lret
push
xchg
adc
cmpsb
push
mov
pop
popf
push
sub
enter
addr16
dec
dec
mov
test
pop
adc
push
out
sbb
xor
stc
in
test
adc
loope
and
cmpsb
jnp
jecxz
and
aam
jmp
and
push
fcmovu
fwait
std
mov
add
sub
sbb
popf
or
adc
movsb
mov
dec
cmp
jbe
in
and
xchg
js
scas
loopne
pop
test
aam
out
xchg
add
dec
xchg
int
daa
xchg
inc
outsb
cld
shlb
out
mov
xchg
shll
out
mov
lret
xchg
pop
imul
mov
sbbb
aad
hlt
ljmp
and
bound
xchg
and
and
push
inc
cwtl
and
mov
pop
in
add
or
cwtl
push
xchg
clc
jg
xchg
in
xor
cmpsl
jge
and
ljmp
jl
icebp
jmp
mov
jo
shll
mov
mov
in
dec
jmp
sub
shlb
add
mov
lahf
outsl
inc
rorl
jno
xor
test
sbb
mov
inc
loop
mov
loope
push
data16
sub
pusha
jb
outsb
add
pop
push
mov
jno
out
xchg
mov
mov
daa
bnd
daa
out
pop
cmp
xchg
movb
pop
testl
push
into
leave
dec
mov
push
push
jmp
jle
stos
fnstenv
xchg
fldl
ss
pop
mov
sbb
jb
repz
out
mov
push
dec
jb
pop
sbb
sub
pop
sarb
jmp
aad
jle
xchg
push
cmp
adc
mov
aas
push
test
xchg
loop
jl
and
xchg
mov
mov
xor
pop
or
int
mov
jg
repz
jle
add
js
das
pop
ret
pop
mov
faddl
mov
out
sub
or
adc
out
sbb
xor
pop
roll
push
fisubrs
stc
push
stos
jb
test
and
mov
cmc
icebp
movsb
es
push
aad
sbb
dec
mov
scas
lds
nop
xor
mov
sbb
push
leave
insl
dec
mov
mov
or
mov
hlt
cwtl
xchg
push
lock
jge
mov
xchg
shl
jg
add
imul
pop
aam
cmpsb
faddl
adc
mov
mov
or
mov
repnz
jne
inc
xchg
sbb
mov
int
xor
movsl
add
aad
ficompl
aas
repz
xchg
pop
rclb
cmp
adc
stc
pop
jb
jb
cmp
fsubs
std
xchg
loop
inc
mov
xor
je
jl
filds
icebp
mov
adc
sbb
cmpsl
imul
icebp
jno
sub
cld
cwtl
push
xor
mov
ror
outsl
xchg
out
punpckhbw
or
cmp
hlt
mov
mov
push
pop
lret
call
sub
cli
adc
fwait
inc
cmp
inc
arpl
and
je
fidivl
orb
add
call
jl
pop
sub
fnstcw
pop
add
jl
test
sbb
sbb
jle
dec
das
or
rcll
stos
stos
inc
fadd
lret
ss
and
adc
loope
cld
push
cmp
mov
push
call
lret
mov
xchg
ficomps
enter
xor
aam
adc
inc
idivb
or
jbe
push
cld
ret
dec
and
sub
fcmovnbe
sbbb
popf
pop
adc
mov
stos
dec
cmp
mov
inc
mov
mov
xchg
mov
aam
dec
dec
es
xor
inc
mov
or
cld
adc
insb
cmp
jg
xchg
loopne
mov
das
fimull
cltd
cmp
idiv
punpckhbw
movsb
mov
scas
dec
cmp
jnp
vsqrtps
mov
xor
mov
xlat
outsl
iret
mov
adc
insb
fisttpll
mov
cmp
ficoml
fld
xchg
testb
xchg
dec
cwtl
repz
pushf
arpl
cmp
out
sti
popf
jo
pop
mov
shrb
sub
loop
pop
cmpsl
bnd
sahf
inc
pop
shlb
or
jl
std
inc
loope
popf
stc
call
std
add
lcall
xor
into
arpl
cltd
out
mov
push
and
stos
lods
dec
jo
ret
push
mov
das
cmp
adc
push
jecxz
and
xor
repnz
fcoml
cmp
out
or
addb
push
mov
out
movsl
sbb
xchg
push
sbb
mov
dec
jecxz
call
ljmp
pop
les
mov
cmc
mov
dec
clc
jle
daa
repz
lret
shrl
add
cmpsb
pushl
adc
mov
or
adc
add
mov
cwtl
jno
mov
fs
aas
dec
ret
mov
outsl
ret
jl
sbbb
add
push
pop
out
or
jno
lea
fs
pop
cmpsl
mulb
stos
cmp
in
lahf
jb
xchg
shlb
cmp
xlat
add
cmpsl
mov
pop
push
cmp
sub
xchg
jp
cmc
gs
mov
jl
add
add
xor
pushf
icebp
jns
dec
pushf
or
stos
and
aaa
or
popl
pop
push
enter
dec
add
subb
aaa
leave
pusha
imul
js
jno
pop
fisubl
lock
mov
negl
sbb
adc
js
fsubrs
sub
mov
in
test
mov
jo
into
scas
add
in
repz
nop
mov
arpl
int
out
fnstsw
xchg
xor
test
push
fidivl
ss
lock
jno
jg
fsubs
lcall
lcall
int
insl
call
or
jo
or
push
mov
outsl
lret
pop
cld
lods
push
adc
fidivs
dec
mov
shll
dec
or
adc
xlat
cli
testb
and
pop
outsl
xor
mov
call
das
ret
out
add
jle
sbb
shl
inc
lahf
mov
mov
mov
into
inc
and
aas
mov
mov
jl
sub
fistpll
mov
test
dec
adc
mov
inc
jae
out
fisubs
es
cmp
mov
pop
pop
lods
cmc
inc
out
or
sbb
popf
ja
data16
jge
xchg
xor
nop
sarl
mov
push
xchg
pop
ljmp
xor
inc
sbb
adc
pop
aam
sbb
cmp
adc
mov
loop
gs
mov
fmul
pop
push
stc
jb
dec
mov
lret
popa
mov
jp
xor
dec
or
jno
movsb
mov
xor
adc
movsb
cmp
or
loop
jecxz
daa
push
popf
cmp
mov
sub
test
pop
repz
test
adc
scas
jnp
mov
je
mov
add
dec
ret
cli
lock
adcb
cmp
pop
addb
mov
jb
xor
shrb
and
jae
mov
lea
test
mov
adc
data16
xchg
ljmp
xor
outsb
repz
jb
lods
xchg
push
and
dec
pop
or
daa
je
enter
lcall
fcmovbe
nop
mov
fs
in
movsb
push
ss
in
jp
movsb
idivl
std
cmp
rcl
mov
repnz
dec
pop
mov
incl
and
sub
xchg
inc
andb
pushf
mov
and
pop
adc
mov
xor
pop
roll
pop
imul
push
dec
movsb
rcll
mov
pushf
mov
ljmp
sbb
and
sub
push
xor
and
cld
cmc
mov
es
les
push
scas
push
mov
fidivl
push
dec
cmc
arpl
out
clc
jo
rcll
jae
lret
mov
es
dec
hlt
sub
xlat
jne
push
jb
mov
arpl
movsl
mov
scas
in
adc
dec
cmp
inc
mov
mov
lahf
repnz
push
mull
dec
test
popf
cmp
adc
bound
jp
add
stos
cmc
int
dec
lcall
lret
shrb
lret
jb
shll
in
push
ret
dec
sub
in
xchg
and
loopne
cld
pop
jb
cmp
push
adc
xor
or
out
lods
jno
fwait
js
push
xchg
aaa
add
loopne
test
dec
aad
leave
inc
in
shll
xor
xchg
clc
mov
nop
push
dec
lret
pushf
je
cmp
repz
out
sarl
leave
sub
mov
inc
fwait
sti
jb
lods
sbb
mov
filds
in
mulb
pop
or
popa
or
inc
jb
xor
add
jge
sub
inc
adc
adc
cld
rcl
ret
mov
adc
std
addr16
cmpsb
and
dec
sbb
test
push
xchg
fcmove
cmp
pop
sti
sub
sub
sub
sbb
movsb
loope
push
inc
inc
outsb
arpl
xchg
and
sbb
mov
inc
lcall
mov
out
mov
lods
and
lahf
jbe
lods
sbb
lret
jl
pop
inc
lahf
leave
push
in
test
mov
lret
cwtl
mov
push
push
push
mov
mov
mov
sub
lahf
in
shlb
sub
fnstcw
inc
or
add
dec
dec
sar
and
flds
dec
pop
pop
dec
mov
pop
pop
pop
mov
rol
cmpsb
scas
cmp
loope
sti
movsl
mov
add
popf
loop
lods
cmc
aam
testb
and
xchg
cmc
and
iret
ret
mov
imul
lock
cmc
xor
sbb
mov
cwtl
cmp
add
and
out
mov
mov
jmp
into
movsl
cmp
jns
cmp
xchg
jecxz
aam
mov
pop
add
adc
sbb
jbe
sbb
jnp
xlat
xchg
mov
mov
add
or
icebp
mov
nop
jl
sub
imul
outsb
fstpt
addr16
push
fst
insb
cmp
cwtl
dec
inc
add
leave
addr16
cmp
cmpsb
or
loopne
adcl
jns
fsubr
inc
lds
push
sbb
cld
fdivr
sub
imul
stc
add
test
outsl
hlt
mov
pop
xchg
mov
fisttpll
fmuls
xor
stos
push
mov
push
jae
jae
pushf
repz
lahf
clc
cld
and
addr16
stos
pusha
scas
js
aas
imul
cmp
jno
fisttpll
cli
push
jb
jecxz
loope
loop
dec
jb
jg
pop
mov
adc
mov
xchg
adc
cmp
dec
mov
or
movsl
xor
cmp
inc
mov
ret
cwtl
xchg
into
jl
pop
lea
loopne
rcll
mov
ret
mov
lcall
push
inc
push
push
and
xchg
loop
mov
mov
xchg
stos
std
or
lea
cs
mov
cmp
jge
es
fdivrs
xchg
xchg
mov
cmpsl
dec
xorb
xor
lods
xor
repz
aas
cmp
xchg
and
dec
cli
mov
sub
mov
mov
push
stc
jne
sub
in
xchg
les
cltd
jo
cltd
push
lock
pop
inc
mov
int
cmp
jnp
addr16
out
push
popf
mov
imul
cmp
clc
xchg
jecxz
stos
mov
cmpl
mov
cltd
push
out
jle
adc
push
push
and
out
add
test
insb
dec
add
mov
jmp
mov
arpl
pop
jle
jecxz
in
jle,pn
fs
ret
push
push
fs
adc
bnd
stos
inc
pop
loope
std
mov
sahf
or
mov
jbe
push
lahf
pop
jne
nop
ret
xor
and
dec
nop
not
sbbb
adc
lcall
adc
and
pop
out
mov
clc
dec
jecxz
ret
pop
jmp
jle
mov
stos
mov
add
hlt
mov
jge
mov
cltd
fs
fistps
ret
outsb
jecxz
add
jnp
cmp
rcll
jge
cld
mov
out
out
scas
jae
in
std
mov
rcrl
jmp
xorb
aam
cwtl
aas
mull
jne
xchg
loop
loop
in
data16
and
mov
pop
stos
mov
inc
or
les
jbe
jg
xor
mov
jp
fucomi
cmp
test
push
nop
sub
cmp
int
nop
data16
cmpsl
jmp
xor
fwait
lods
ds
aam
push
cld
pushf
cmpsb
inc
cmpsl
jmp
xor
sub
pop
jle
cmpsl
xor
jle
push
mov
and
inc
bound
inc
xchg
pop
fwait
loopne
in
jg
xor
outsb
fcmovnb
pop
add
andb
xor
les
jnp
jle
push
in
mov
xor
cld
in
add
mov
add
loope
sub
dec
or
jo
subb
pop
cmp
and
xor
inc
pop
pop
mov
test
lret
cmp
or
in
frndint
sbb
adc
aam
mov
rorl
test
or
mov
les
in
mov
inc
xor
into
mov
adc
call
repnz
lds
push
loope
fnstsw
sbb
push
dec
pop
out
rorl
enter
xchg
push
jbe
lea
adc
xor
in
sahf
arpl
test
out
test
rorl
mov
jle
leave
adc
sbb
das
and
adc
mov
add
insl
stos
cwtl
lcall
sub
pop
xchg
shrb
clc
popf
lcall
outsb
popa
aam
add
push
pop
cld
addr16
fnsave
and
push
clc
notb
into
stc
insl
clc
sbb
push
movsb
xor
add
sbb
imul
ljmp
xor
in
push
xchg
push
ret
jns
mov
push
and
rcrb
inc
fbld
adc
fcomi
adc
mov
test
xchg
and
fucomip
add
dec
jg
sbb
xor
pop
lods
les
in
in
scas
mov
mov
lock
and
or
pushl
inc
and
mov
xorl
xchg
ss
mov
sbb
push
mov
enter
fdivrl
jo
roll
push
loope
jl
add
dec
mov
mov
jg
xchg
cmp
and
in
xchg
and
ficompl
orb
sub
pusha
or
cld
pop
loope
loopne
mov
jp
push
data16
leave
loopne
icebp
or
dec
ss
mov
xor
data16
rolb
sbb
pop
leave
decl
or
pop
pushf
das
xchg
adc
scas
or
push
cmp
cmp
outsl
fisubl
cmc
sahf
bound
jns
dec
mov
lea
xchg
mov
pushf
ljmp
pop
jne
sbb
pop
inc
iret
gs
lds
dec
or
sbb
mov
mov
pop
mov
std
jae
or
dec
pop
mov
outsl
imul
mov
dec
gs
outsl
add
pop
sub
cmp
mulb
shlb
negl
jnp
sarb
imull
stos
jle
out
push
pop
in
pop
lret
adc
push
mov
mov
pop
mov
arpl
mov
mov
in
push
xor
mov
clts
sbb
jp
lahf
dec
movsl
push
cmpsl
sarl
inc
addr16
mov
scas
mov
out
cltd
jo
jb
push
out
mov
mov
mov
sbb
lods
lods
shlb
mov
ret
sbb
cwtl
mull
out
jmp
insl
movsb
jmp
popa
inc
sbb
mov
sarl
es
mov
faddl
pushf
shlb
push
sub
fimull
gs
sbbl
pop
push
sub
sbb
popa
push
mov
into
cli
notb
in
fistpl
jb
cmpsb
outsb
mov
subb
jne
add
xchg
fildll
jge
mov
jmp
loop
xchg
clc
mov
jnp
and
adc
sahf
and
mov
push
inc
lcall
in
in
xor
in
mov
out
rorl
imul
ret
jl
lret
pop
adc
push
int
adc
bound
fists
movsl
mov
push
daa
sbb
jmp
pop
add
xor
pop
aaa
push
push
inc
dec
push
int3
outsl
cmpsb
mov
lret
or
leave
dec
push
cmp
sbbl
daa
cmp
and
adc
dec
fcmovnbe
cwtl
imul
mov
mov
jbe
orl
movsl
into
push
aas
and
mov
and
jne
sbb
xchg
and
jb
jbe
add
icebp
shrl
stos
and
jl
int
cli
push
lret
jge
fldl
push
or
pop
out
fucomp
xor
adc
mov
mov
sub
popa
outsb
xchg
not
shrb
sbb
cmpb
dec
movsb
jo
mov
or
stc
rorl
lcall
mov
xor
push
add
push
sub
xorb
xchg
call
out
mov
fdivp
bound
orl
lea
sub
loope
pop
nop
adc
fidivs
xchg
call
sbb
out
test
xor
or
add
xor
nop
push
inc
lods
out
je
popa
jb
push
imul
inc
pop
inc
dec
pop
jge
orb
jmp
pop
daa
outsl
pusha
adc
lahf
das
gs
inc
sub
imul
cmpsl
mov
xchg
loope
cmp
int
pop
lods
xchg
jae
jmp
lcall
sbb
xchg
and
mov
outsl
inc
mov
daa
cmp
mov
ds
add
pop
stc
pop
push
sti
sbb
andb
mov
push
outsl
ds
sub
clc
mov
rorl
ret
jp
and
jl
pushf
jge
xor
in
loop
pop
test
jb
dec
nop
jg
or
mov
lret
pushf
pop
sub
dec
cmp
dec
test
cltd
xchg
sbb
icebp
call
aas
or
subl
jle
mov
cmpsb
ds
mov
cs
push
outsl
inc
cld
pop
shlb
sarl
mov
xchg
aas
loop
inc
stos
and
cmc
test
jo
int3
cmc
shl
mov
mov
cli
scas
xor
sti
cmp
cmpsb
idivb
mov
les
or
sub
repnz
push
rcll
mov
sti
adc
and
mov
int
cs
bound
ss
jmp
push
cmp
push
mov
les
pop
xor
lock
push
daa
vprotd
pop
push
cli
dec
or
imul
xlat
clc
pop
xchg
dec
xchg
xchg
push
lcall
mov
shl
ret
icebp
frstor
scas
ret
xor
cmpsb
out
jnp
xchg
jns
xchg
cvttps2pi
pop
push
into
push
cmp
or
push
insb
daa
mov
and
aad
push
mov
or
div
add
loope
fs
lea
call
mov
push
push
lret
pop
cmc
nop
arpl
xchg
xchg
inc
aad
in
sub
xor
leave
adc
aaa
imul
loop
pushf
push
pop
xor
and
push
jns
test
jge
loop
cmpsb
fcompl
mov
into
in
jmp
dec
sbb
or
in
pop
xor
insb
mov
push
out
dec
jo
mov
addr16
adc
fcoms
outsb
xorb
je
sahf
dec
inc
arpl
pop
add
cmpsl
adc
sar
icebp
fildll
sbb
sub
jp
fistps
adc
test
pusha
adc
int3
sar
jae
idivb
mov
das
mov
inc
pop
add
xor
push
sub
ret
add
cld
dec
jae
inc
push
add
pop
and
ret
test
mov
xlat
ret
test
dec
scas
fldl
push
notb
dec
pop
fsubp
or
inc
ficompl
jecxz
xor
movsl
mov
aad
lret
sbb
add
add
lods
insl
mov
icebp
movsl
fisttps
sbb
into
xchg
or
jecxz
jp
fs
in
jmp
mov
cmpsl
and
cmpsb
inc
insb
push
mov
shrl
mov
pushf
aam
in
xchg
add
shll
movsl
mov
dec
or
rcr
jno
mov
fistpl
fistl
xchg
out
arpl
call
out
fcoml
jns
lret
imul
sbb
stos
add
pop
pushf
lcall
jg
push
cmp
testb
pop
cmp
repz
arpl
lds
cmp
cmp
test
inc
ljmp
loopne
push
movsl
test
push
and
push
adc
dec
pop
bound
sub
insl
js
movsl
and
cs
lahf
jne
xchg
mov
mov
scas
lret
jmp
sub
in
andl
mov
popf
adc
divl
pop
hlt
shl
test
cmpsl
xchg
popa
lcall
in
jne
cmpsl
mov
stos
je
sub
sbb
sub
jl
arpl
push
jae
inc
cmp
pop
jb
paddsb
mov
leave
gs
mov
dec
adc
cli
push
out
and
adc
cwtl
test
mov
in
sbb
out
out
adc
imul
jno
repnz
sub
repz
roll
add
out
bswap
test
enter
sbb
frstor
push
stos
ret
dec
mov
mov
test
inc
fdivl
shlb
sub
movsb
xor
xchg
pop
les
imul
test
or
in
cwtl
or
sbb
fwait
push
jecxz
stos
mov
jl
lea
addr16
xor
movsl
sti
jns
dec
repnz
mov
mov
jnp,pt
push
imul
outsb
fs
in
sub
int3
cmc
pop
inc
adc
add
out
lahf
sub
sbb
xor
mov
ss
jecxz
ret
es
sbb
movl
mov
roll
or
dec
int
loop
dec
fstp
fiaddl
pop
nop
adc
cmpb
xchg
fildl
idivb
dec
flds
lret
outsb
lret
cwtl
repz
andl
adc
dec
xchg
push
push
addr16
sbb
clc
int
adc
adc
aas
jns
xchg
push
fadds
adc
clc
aam
enter
subl
jo
imul
dec
add
or
ficompl
push
out
xchg
cmp
jmp
stos
lock
popa
hlt
push
sbb
rcll
cmpsb
adc
lock
add
ljmp
push
imul
nop
fcmovbe
ror
cmpsl
arpl
aas
lock
xchg
aad
xor
rclb
add
sbb
test
jmp
loopne
or
in
cmpsb
test
mov
or
inc
pop
out
cltd
adc
pop
push
stos
mov
add
mov
jns
cli
mov
sub
pushf
jno
push
bnd
retw
push
inc
out
and
int3
add
jno
and
enter
es
cli
jo
xchg
enter
or
fimuls
ja
mov
repz
dec
arpl
mov
sub
pop
aad
xlat
data16
jl
or
cli
ja
sbb
movb
pop
cmp
pusha
fisttps
dec
loope
mov
add
mov
dec
ljmp
call
mov
push
aaa
test
cwtl
mov
add
iret
mov
xchg
rol
je
cli
push
push
push
lahf
jg
imul
aas
js
movsl
add
imul
in
and
add
clc
subl
mov
add
ret
popa
in
push
inc
sbb
test
cs
shl
push
js
mov
stc
ljmp
mov
xchg
xchg
pop
add
flds
push
mov
pop
cmp
ror
dec
inc
jnp
xor
add
cmp
gs
mov
dec
outsl
in
mov
push
xchg
in
jnp
shl
imul
stc
loop
add
into
pushf
push
leave
push
mov
insl
mov
xor
mov
jge
mov
xchg
movsb
add
dec
xlat
sahf
xor
or
adc
adc
popf
xchg
jl
fwait
cld
mov
sahf
mov
lods
pop
mov
call
xorb
fidivl
cmp
addl
add
mov
int
inc
push
popa
cmp
out
pop
dec
cmpb
fnstcw
jb
add
cmp
pop
ficoml
xor
popf
adc
lcall
cmpsb
or
mov
cmp
add
minps
lahf
jg
push
and
xchg
cld
xor
fsubl
out
or
ja
rol
js
mov
cmp
pop
movsl
jo
pop
into
fnstsw
sub
sub
insb
scas
mov
leave
jle
pop
in
xor
pop
mov
mov
sub
lock
les
sbb
mov
imul
adc
or
ret
clc
adc
jb
xchg
inc
dec
out
movsl
pop
inc
cld
outsb
mov
lahf
xchg
pop
add
rorb
mov
int
leave
cmp
or
cmp
pop
xchg
shl
aad
cmp
mov
es
xchg
cmp
in
out
jns
ret
insb
push
sarl
dec
and
mov
rorb
ret
pop
into
push
push
test
xchg
jecxz
xor
jecxz
push
cmp
gs
daa
loopne
adcl
xchg
sti
push
fwait
mov
cmpsb
dec
popf
sub
cmpsb
push
and
adc
xchg
rcrb
adc
inc
lret
jp
or
out
jnp
pop
icebp
loopne
xchg
push
mov
cli
gs
and
push
xchg
flds
ret
test
mov
add
xchg
inc
cmp
das
pushf
out
cmp
fdivs
rclb
xlat
jnp
or
cmp
pop
ret
xlat
jns
aas
sahf
pop
fnsave
cli
aad
pushf
out
mov
and
push
jp
not
push
outsb
xchg
cmc
loop
push
fmull
ss
pushf
sbb
mov
jbe
dec
lea
mov
dec
jmp
stos
enter
mov
bound
hlt
nop
insb
or
lret
gs
add
push
aas
cmp
fildl
inc
shlb
mov
cmp
push
sbb
lcall
xor
nop
add
lret
mov
out
call
pop
adc
aaa
es
add
test
push
loop
mov
sub
cmpb
inc
or
daa
mov
fisubrs
fcmove
std
jle
pusha
adc
std
lret
mov
decl
sub
cmp
inc
dec
inc
dec
arpl
lds
cwtl
out
stc
pop
push
or
out
pop
shl
push
test
xor
aaa
arpl
std
stos
mov
pop
sbb
cli
fbstp
aas
inc
out
mov
push
add
es
imul
sub
nop
repnz
shlb
pop
xchg
dec
xchg
inc
shl
mov
call
xor
int3
fcomps
add
sbb
push
lock
inc
jge
rclb
or
mov
cltd
sti
fstpt
sub
aas
out
jg
jp
sub
lods
xchg
loop
mov
popa
loope
mov
sub
mov
sbb
nop
js
jmp
pusha
repz
dec
push
fidivl
cmp
and
pop
movsb
sarl
ficoms
popa
in
or
into
test
mov
loope
push
xor
or
sbbl
scas
mov
inc
push
popf
outsb
or
pop
sbb
mov
std
in
mov
pop
fmulp
pop
into
pop
stos
adc
mov
inc
cli
bnd
movsl
pop
icebp
loop
xchg
int
lea
fcmovb
jmp
and
xchg
push
gs
insl
push
lret
mov
cmp
addl
aam
outsl
rcl
mov
fisttpl
shll
jg
ja
adc
push
fcoml
jnp
mov
cmpsl
mov
cmp
jp
nop
pop
mov
dec
mov
xor
in
pusha
ljmp
cmpsl
xchg
out
arpl
out
dec
lods
insl
mov
in
mov
dec
ret
adc
pushf
sbb
inc
lods
testl
cmc
lcall
enter
xchg
xlat
xchg
and
mov
int
in
mov
stc
ljmp
jge
stos
scas
ret
clc
sub
lds
and
lcall
push
mov
dec
cmc
das
mov
and
xchg
divb
loop
jne
cltd
in
mov
jnp
out
movsl
push
xchg
in
int3
sub
mov
mov
ret
andl
dec
pushf
xchg
hlt
out
xor
pusha
sbb
cmp
jge
out
pop
loope
fidivs
jbe
into
or
and
push
inc
and
cwtl
jnp
mov
es
in
jle
adc
mov
fisubrs
cs
mov
int3
test
ss
iret
xlat
hlt
aam
cmp
pop
out
insl
adc
jnp
lahf
mov
ret
xor
rorb
movsb
and
jp
sub
mov
sbb
ljmp
pop
push
mov
leave
lock
push
mull
push
xchg
jae
test
mov
xchg
sub
testl
jle
lret
xchg
lret
fwait
add
sarl
mov
fisubrl
mov
fcmovb
das
cmc
cld
pop
ret
int3
test
adcl
sbb
ljmp
aam
enter
mov
mov
cmpl
or
push
mov
lret
xchg
rolb
mov
mov
jnp
lds
xor
cmp
mov
cmp
mov
xor
insb
stc
xchg
push
arpl
xchg
ds
insb
or
fdivs
xchg
dec
add
cmp
pop
addb
dec
mov
cs
int
jbe
scas
sbb
adc
sbb
test
jmp
jns
inc
cltd
and
xor
hlt
mov
in
jmp
cs
cwtl
sub
push
adc
mov
enter
inc
ficoml
and
out
jae
repnz
repnz
push
pop
inc
stos
lahf
push
rorl
jge
cmp
mov
in
add
loope
roll
xchg
icebp
push
lahf
push
fwait
xchg
into
push
notb
cmpxchg
cmpsb
ja
stos
adc
add
data16
pop
dec
mov
ret
lahf
mov
mov
fistl
pop
pusha
jne
cmc
cs
mov
lods
mov
out
jo
in
nop
incb
sbb
fcmovnb
sahf
add
test
sti
inc
jp
and
push
jmp
mov
mov
or
in
sti
inc
sbb
or
inc
or
jge
dec
pop
cmp
pop
adc
sahf
add
jge
cmp
movsb
pop
add
out
mov
add
jo
jns
pop
adc
into
out
sub
adc
mov
sub
iret
fnsave
jmp
ffree
mov
cmp
cld
arpl
stos
jnp
xchg
and
fs
lcall
leave
scas
xchg
inc
jle
push
std
push
and
inc
lahf
fisttpll
out
xchg
in
and
inc
jns
inc
adc
inc
in
in
jp
dec
mov
xor
rorb
jge
jg
lahf
sti
ret
dec
push
ds
mov
out
cmp
rcrl
scas
or
scas
in
mov
gs
xchg
data16
in
stos
mov
icebp
repz
adc
cmp
mov
and
adc
popa
mov
test
jb
xor
mov
inc
les
xor
jp
fistps
ret
jle
cmp
lds
lods
mov
inc
mov
xchg
mov
push
addr16
xlat
arpl
pop
xchg
and
out
xchg
sbb
ficoml
and
adcb
mov
nop
mov
push
loop
loop
test
jb
pop
popa
das
sub
jl
loope
popf
jl
xchg
xchg
ret
inc
enter
jmp
fbstp
out
and
jl
push
dec
add
nop
mov
inc
pop
hlt
insl
cmp
jle
cmp
add
pop
ret
divb
lea
mov
mov
mov
mov
insb
scas
cmp
pop
inc
inc
mov
out
iret
add
sahf
out
cltd
ds
popa
mov
xchg
jp
cmp
divb
add
clc
call
xchg
lods
or
mov
rorl
add
mov
incb
lcall
mov
lret
sbb
sub
divps
sbb
mov
stos
mov
out
bound
xchg
dec
cld
xchg
push
inc
jle
adcb
push
pusha
and
inc
xlat
push
mov
iret
mulb
shll
fistpll
push
sbb
out
es
inc
out
push
mov
pop
in
mov
push
fmul
scas
fisubs
and
push
icebp
shl
sub
mov
sbb
stos
mov
loopne
push
scas
xchg
or
dec
icebp
repnz
lods
inc
adc
mov
push
and
dec
push
in
pop
cmp
nop
mov
sbb
lods
sbb
xchg
add
push
adc
mov
jb
imul
in
fdivp
mov
xlat
fidivrs
sub
push
inc
fisubl
sub
mov
scas
fidivs
gs
mov
sub
data16
sbb
cmpsl
aad
loop
in
mov
ja
jecxz
jmp
mov
xchg
lret
or
mov
mov
mov
mov
mov
inc
mov
inc
jo
and
fnstenv
xor
popf
mov
mov
push
shll
call
pop
inc
scas
xchg
sbb
inc
into
outsl
outsb
pop
xlat
scas
sbb
lock
lahf
sub
divb
add
push
andl
dec
fisttps
repnz
arpl
scas
in
push
jg
cld
roll
pop
iret
mov
outsl
fs
testb
push
and
cmc
fldcw
jge
popa
xor
sbb
mov
stc
xor
mov
jb
pop
shll
xchg
in
inc
pop
and
cmc
xor
icebp
movsl
rcrb
cmp
punpckhdq
divl
mov
and
mov
xlat
inc
mov
repnz
iret
push
dec
xor
sti
push
vpandn
aam
push
and
mov
jg
xchg
out
and
cmp
fcmovnb
xor
stc
xchg
orb
sub
sbb
mov
aam
in
add
fs
aas
repz
dec
mov
call
bound
adc
and
data16
xor
dec
jnp
dec
jp
cmpsb
repnz
mov
cmp
fstps
mov
adc
out
mov
adcb
loop
adc
xorl
inc
ss
repz
or
jb
movsl
out
outsb
das
aam
test
jae
pusha
sub
mov
icebp
out
pop
js
lock
in
cmp
jne
add
ds
mov
std
push
mov
inc
lea
jg
hlt
pop
movl
hlt
jle
out
cmp
xlat
loop
mov
aam
arpl
mov
xlat
outsl
xchg
sub
mov
hlt
sbb
movsl
sbb
es
add
rcrl
pop
lret
rcrl
pop
inc
cmp
jp
jae
cmp
jg
add
into
push
inc
adc
and
push
xor
repnz
dec
inc
loop
pop
or
iret
cmp
test
push
inc
fidivrl
mov
inc
bound
pop
loope
push
jbe
dec
mov
mov
adc
sub
push
das
mull
sbb
dec
test
jae
std
jecxz
sub
jno
jno
in
fucomp
jp
ret
lods
arpl
xor
icebp
pop
fs
lahf
mov
mov
sbbl
ljmp
pop
or
movsl
and
or
xchg
cs
push
sbb
pop
ja
xchg
mov
cmc
pop
jb
sbb
and
inc
cmpb
mov
inc
lods
adc
push
dec
scas
div
dec
xchg
and
pop
inc
rcrl
adc
push
sub
pop
dec
cvtps2pd
loope
xor
sbb
mov
and
inc
lret
hlt
mov
push
mov
pop
jb
xchg
jge
mov
jne
les
shl
stos
scas
sbb
loope
pop
push
jg
inc
push
dec
cwtl
or
inc
add
lock
xor
cmp
sbb
mov
lods
pop
jae
lods
mov
lock
pop
cmp
lock
pushf
pop
and
jle
mov
xchg
sbb
data16
mov
es
mov
movsb
ja
test
push
adc
inc
repnz
inc
daa
jl
mov
shrb
push
push
mov
xchg
and
adc
fs
mov
filds
cltd
mov
jo
inc
sbb
or
into
inc
pusha
sbb
adc
es
ljmp
xchg
es
bound
in
jl
in
mov
adc
jg
and
mov
popf
sbb
mov
jp
mov
mov
jmp
addr16
push
adc
loope
push
dec
push
inc
push
scas
movsb
inc
pushf
add
jo
cmp
xchg
shl
pop
dec
pop
leave
roll
xchg
in
ror
mov
adc
repnz
lock
nop
cmpsb
inc
loop
mov
jo
sbb
popf
sarb
aas
pop
stc
pop
stos
mov
divl
mov
test
xchg
adc
adc
fsub
mov
xchg
mov
cmp
adc
push
dec
es
daa
outsb
adc
mov
pop
jno
and
add
xchg
jno
or
pushf
iret
fstpl
xchg
into
cmp
cwtl
or
test
addr16
and
push
ja
sti
sti
push
out
xchg
push
pop
xchg
xor
dec
lea
pop
pop
xchg
sub
lods
lods
faddp
pop
insb
adc
mov
fildl
sub
push
jg
clc
mov
inc
out
mov
xchg
dec
xlat
nop
lds
std
mov
mov
push
sub
ljmp
adc
dec
cmp
fcom
mov
call
inc
push
xchg
popa
mov
mov
xchg
jno
push
int3
incl
xchg
bnd
mov
cld
sbb
xlat
fs
jmp
push
lret
cmp
sbb
xchg
ret
cld
adc
xchg
adc
mov
pop
xchg
out
shl
andl
or
inc
cld
addr16
cmp
push
or
xchg
daa
push
dec
andb
sbb
jmp
out
adc
stos
scas
cmc
push
int3
push
sub
lock
inc
xlat
jae
ss
daa
pop
adc
hlt
or
and
pop
jnp
nop
in
xor
lock
and
or
pop
fisubs
and
scas
add
push
cmpsl
fbld
or
fwait
rol
cli
mov
and
and
mov
gs
cmp
daa
jno
mov
mov
outsl
icebp
sti
ficomps
pop
xchg
icebp
sbb
push
or
lret
and
mov
pop
cmp
jle
insb
adc
in
sarb
xchg
and
stos
pop
and
dec
mov
sub
pop
pop
cltd
gs
jl
cmp
addr16
test
pop
push
xor
cli
sub
addr16
cmpb
xchg
loop
aam
out
test
lret
into
addr16
fisttpl
mov
inc
dec
mov
pop
loopne
xchg
lds
push
pop
shll
fiaddl
mov
adc
mov
xchg
jl
jge
xor
cmpsl
dec
test
dec
mov
mov
popf
dec
shrl
shlb
adc
or
sub
cmp
test
mov
rcrl
cwtl
push
sub
cmp
inc
mov
jae
cmpsl
push
fcoms
and
in
dec
jmp
lods
xchg
orl
adc
stc
pop
loope
jns
sbb
sbb
divps
sbb
sbb
add
cmc
or
xor
outsl
and
sbb
cmpsl
pop
xchg
lock
xor
out
jp
popa
stc
mov
loopne
insl
loopne
push
xor
inc
test
arpl
sub
mov
push
popl
xchg
mov
mov
push
aaa
inc
or
dec
xlat
sbb
insl
movsb
orl
pop
cld
mov
xlat
lcall
adc
mov
fistpl
jecxz
mov
out
retw
cmp
cmp
pop
mov
fs
hlt
inc
fwait
sub
dec
decl
testb
in
mov
rcll
push
je
int3
mov
push
cwtl
aaa
push
rcrb
repnz
and
mov
mov
sub
mov
xor
adc
xor
filds
adc
and
inc
test
sub
mov
pop
inc
sbbb
jecxz
cmc
es
fimull
pop
mov
mov
cmp
gs
mov
push
adc
stos
lock
rsqrtps
cld
mov
sub
decl
jge
push
dec
xor
lcall
leave
inc
mov
je
pop
push
loopne
lock
mov
cmp
dec
jle
mov
jl
xchg
mov
add
push
aaa
test
mov
dec
push
xchg
inc
in
dec
xchg
cwtl
xchg
dec
adc
loope
pop
mov
out
das
xchg
cli
aam
sub
scas
lahf
mov
pop
adc
aad
mov
lret
outsl
jo
lahf
sub
dec
push
push
push
adc
mov
xor
sbb
je
ds
push
test
js
and
stos
dec
xchg
jmp
add
lcall
shr
pop
rorl
dec
stos
mov
or
iret
jne
leave
jl
out
mov
xchg
mov
fcmove
in
xchg
leave
pop
jge
subl
shll
xchg
sbb
sbb
pop
arpl
mov
dec
arpl
sub
aam
fbld
aas
inc
xlat
inc
es
add
lods
cmpl
push
cmp
loop,pn
cmp
call
push
pusha
push
insb
pop
insb
xchg
sbb
test
jnp
pop
icebp
popa
hlt
or
rcr
mov
fsubs
andb
idivb
data16
mov
ja
jnp
loope
mov
sub
mov
ds
mov
xor
adc
jns
xchg
mov
dec
ror
cmpsl
push
cmp
mov
sub
in
in
ret
push
push
adc
and
pop
stc
shrl
pop
in
lret
xor
mov
inc
add
daa
aad
lock
or
aad
sbb
test
sbb
aas
sbb
pop
int
pop
ljmp
xchg
dec
gs
sub
and
loopne
and
aad
aas
mov
sarb
hlt
enter
pusha
inc
jo
dec
loopne
out
stos
mov
gs
test
pop
fsubl
dec
push
dec
aad
jb
jl
or
les
pop
enter
stos
js
sub
sahf
pop
jae
into
pop
and
sub
fs
scas
ja
push
jns
mov
test
js
aam
add
data16
dec
cmp
pop
outsl
mov
dec
inc
push
pusha
sub
repz
sub
pop
and
xchg
in
add
and
jb
pop
xor
cli
mov
in
int3
push
jmp
add
adc
inc
call
or
and
test
out
pushf
inc
inc
xchg
or
add
pop
and
mov
push
rcrb
xchg
dec
leave
push
add
stc
in
iret
enter
jne
loop
cmovp
daa
adc
and
stc
dec
imul
cld
out
ret
pop
push
test
cmp
and
add
or
jle
popa
add
cwtl
pop
push
inc
push
inc
mov
pop
adc
jmp
popf
movl
sub
cmp
bound
lret
popa
lret
lods
xor
adc
mov
leave
lcall
adcb
and
jbe
imul
repz
dec
pop
out
adc
dec
sbb
or
jne
adc
mov
into
mov
loop
or
je
out
out
cs
and
or
out
fcoml
sahf
mov
adc
test
and
imull
pop
xchg
xchg
jae
addr16
arpl
ss
sub
adc
xor
jne
sbb
scas
dec
dec
push
pushf
popf
xchg
adc
dec
mov
mov
fldt
pop
leave
sbb
mov
inc
pushf
jle
sbb
ror
adc
add
les
lret
push
jmp
mov
aaa
rcll
push
int
xchg
mov
dec
fiadds
nop
push
fistpll
push
lahf
fnstsw
nop
out
mov
icebp
outsl
popf
imulb
iret
dec
cmp
push
fwait
mov
jl
sub
sbb
adc
jae
fisttpl
push
pop
push
in
push
arpl
jg
mov
pop
push
stos
fs
cmp
test
push
push
push
xchg
mov
repnz
adc
sub
push
xor
lahf
push
mov
push
push
daa
flds
push
movsl
loop
pop
jae
lahf
rolb
sbb
scas
jle
push
sub
xor
hlt
aad
adc
pop
fnstenv
sub
and
cmp
add
and
shll
xchg
test
scas
sbb
pushf
sbb
inc
or
push
push
fisubl
pusha
test
js
pop
dec
pop
cld
xchg
dec
movsb
mov
add
les
and
stc
cmp
sub
push
nop
cmpsb
xchg
or
fidivs
push
loopne
rol
pop
mov
aad
cs
cmp
imul
push
cmp
lcall
les
loop
repz
xlat
dec
cmpl
mov
inc
mov
adc
sub
cmpsb
mov
out
imul
mov
sbb
push
out
pop
jecxz
daa
mov
or
push
test
dec
jle
test
jecxz
mov
adc
cmp
jge
mov
or
insb
lahf
mov
pop
xor
pop
stc
test
fcomps
test
push
in
adc
loope
mov
shlb
mov
cmp
cmp
rcll
sub
fnstsw
lock
mov
ss
cmp
pop
clc
popf
sarl
cmp
jl
lret
aad
mov
cltd
dec
pop
int
cmp
cmpb
or
jo
pusha
mov
loop
insb
into
mov
jge
push
xorb
xchg
icebp
test
cmp
addb
arpl
bound
push
mov
mov
jae
cli
xchg
decl
sbb
loopne
cmc
out
or
lods
flds
adcl
inc
in
pop
sub
mov
mov
sub
pusha
outsl
mov
mov
or
adc
insl
jns
int3
or
pop
out
push
adcb
ds
in
data16
xor
sbb
int
add
jno
movsb
test
add
cmc
cld
pop
ss
dec
ss
aas
lahf
sti
xorl
jne
mov
push
cmc
xchg
out
push
divl
inc
mov
jo
nop
cmp
mov
mov
push
test
lahf
in
cmpsb
cmp
push
hlt
mov
scas
adc
mov
sbb
inc
stos
and
pop
orl
jae
movsb
pop
mov
lods
shr
push
mov
and
repnz
lret
inc
rcrb
sub
pop
xchg
jg
mov
push
dec
pusha
stos
mov
adc
scas
cmpsb
sti
lret
jmp
loope
push
push
aam
add
sbb
or
dec
jl
fmull
in
imul
stos
mov
cltd
popa
pop
sub
cli
add
xor
cld
lods
xchg
cmp
lret
sar
xchg
sub
test
cmpsl
jns
xchg
std
add
jb
sub
jno
in
mov
add
jp
inc
xor
dec
jb
pop
sub
pop
gs
scas
imul
clc
ds
inc
or
fcoms
fwait
loope
fcom
pop
pushf
inc
sti
pusha
pop
adc
xor
hlt
fmul
or
repnz
fwait
insl
inc
mov
cmc
jae
xchg
adcb
insl
loope
cmc
push
push
notl
jmp
daa
and
addr16
jo
in
and
inc
sub
pop
xor
scas
xchg
repnz
dec
mov
fucomi
lds
outsl
lret
fwait
mov
adc
std
mov
push
and
pop
adc
dec
cmpb
outsl
loopne
in
fdivrs
out
mov
stc
aaa
adc
es
gs
and
dec
sbb
mov
pop
add
imulb
rorb
and
ja
lahf
xor
xor
dec
les
mov
fimull
mov
fmull
lods
out
adc
push
rorl
adc
dec
sub
push
jnp
xchg
js
out
jb
xlat
loope
aas
fdivrl
arpl
ret
stos
adc
rcr
mov
nop
adc
xchg
call
cld
movsl
aad
lret
xor
or
cli
jae
jb
jnp
aaa
leave
das
inc
sbb
stos
ljmp
outsl
cmp
stos
outsl
mov
fcoml
inc
sub
push
and
repnz
loop
mov
pop
into
ja
addl
mov
xor
jl
add
mov
decl
pop
xchg
push
scas
scas
test
dec
push
imul
sbb
je
push
sub
inc
jno
pop
or
ret
sahf
mov
sub
stos
in
inc
sti
sub
and
mov
loope
sbb
xor
ja
adc
fs
xchg
mov
mov
pop
clc
mov
dec
fisttpl
cmpsl
movsl
jo
sbb
jo
loope
enter
pop
pop
out
xor
ret
jmpw
or
aam
pop
and
sub
ss
cmp
xchg
scas
inc
in
add
mov
out
bound
sbb
jno
add
pusha
mov
add
enter
adc
ja
cli
shl
xlat
mov
adc
adc
aam
add
push
and
fiadds
fstl
test
inc
mov
or
sahf
sbb
sub
cs
push
jo
lods
sub
pop
and
cltd
loop
cli
movsb
test
iret
jmp
gs
lods
daa
adcb
arpl
adc
push
pop
sahf
in
scas
into
ja
je
popf
or
lret
mov
pushf
into
daa
mov
es
cmp
mov
dec
pop
inc
push
flds
push
inc
mov
fwait
push
sub
xchg
mov
cmp
xchg
pusha
jecxz
aad
lea
push
cmp
cmp
inc
add
mov
and
or
xchg
mov
notb
sub
and
pop
rorb
sbb
mov
sti
mov
inc
fsubrp
fidivs
shll
cmpl
lret
aas
repz
sub
std
dec
xor
sti
sub
std
dec
mov
cmp
daa
cmp
jb
data16
imul
bound
out
push
sbb
pop
xor
cli
xor
outsb
mov
push
mov
insl
mov
std
inc
and
dec
push
scas
pop
sub
in
lcall
push
aas
or
leave
jne
jno
insl
dec
xor
xor
les
outsb
or
dec
or
scas
pop
push
jecxz
jmp
inc
cmpsb
aad
add
dec
addr16
popa
mov
mov
xchg
call
roll
push
cmpsl
push
jno
lahf
and
push
icebp
cmc
repnz
icebp
sub
jmp
add
and
rolb
fdivl
daa
push
ret
les
pusha
cmp
add
xlat
dec
inc
or
or
int3
jnp
or
aas
mov
scas
add
xchg
pop
add
mov
mov
mov
imul
jecxz
test
inc
mov
iret
js
pusha
cmp
insb
andl
dec
test
fidivs
pop
mov
add
in
sub
dec
jmp
jbe
and
sub
lods
js
adc
jae
push
inc
jecxz
rorl
arpl
fisttpll
jns
pop
adc
dec
jl
fdivs
mov
mov
sub
cmc
addr16
rorb
scas
push
in
stos
les
or
adc
shr
imul
push
dec
push
push
in
sbb
sar
xchg
sub
or
test
jbe
mov
and
lahf
ud2
rorl
push
mov
jo
lahf
movsb
jge
pop
and
jb
mov
test
push
or
mov
jge
push
arpl
insl
cld
sub
icebp
dec
outsb
popa
scas
into
jecxz
mov
ss
mov
cli
imul
dec
jno
xchg
mov
enter
mov
imul
repnz
cwtl
orb
fwait
xchg
cmp
cwtl
add
dec
or
in
push
fidivrs
sub
cwtl
iret
pushf
and
jb
clc
scas
sub
sbb
imul
lock
push
jns
mov
jb
cmp
jnp
inc
dec
lret
mov
ja
test
push
and
negl
fistl
movsb
sub
cli
fadds
mov
stos
add
jbe
and
xchg
mov
insb
and
sti
and
addr16
dec
mov
mov
mov
pop
push
push
sub
mov
adc
add
in
ds
jno
je
dec
mov
jne
ljmp
mov
dec
jge
push
lcall
sbb
xlat
or
lock
jae
sub
in
rolb
pop
int
popa
mov
sbb
sub
cmc
in
and
scas
pop
push
sub
into
jmp
push
push
dec
mov
dec
ja
push
aad
dec
xor
mov
das
xlat
xchg
mov
mov
add
mov
mov
aad
out
mov
or
cmpsb
dec
hlt
inc
ljmp
or
imul
fwait
sbb
jmp
ljmp
mov
and
mov
leavew
movsl
js
mov
cmpb
xlat
or
inc
or
pop
fstps
sub
ja
xchg
adc
ljmp
bswap
xor
inc
sbb
inc
jl
jle
cmp
xchg
pop
mov
sub
loopne
stos
add
xor
adc
cmc
mov
jecxz
seto
and
outsl
cmp
out
out
out
adc
cltd
sbb
outsb
ficoml
gs
jne
cmp
xchg
adc
rcrl
mov
mov
mov
mov
sbb
jecxz
in
pop
push
xchg
lea
or
test
outsl
xchg
cwtl
pop
sahf
cld
or
pop
push
aaa
test
jne
pop
and
test
push
shlb
lods
aaa
adc
inc
mov
jb
ss
mov
mov
fs
rolb
mov
ror
adc
lods
inc
inc
and
test
jne
in
movsl
repnz
mov
mov
fdivrp
fstpt
or
sahf
xchg
inc
fstl
dec
xor
dec
push
cmp
or
pop
aas
dec
icebp
lds
pop
insl
mov
idivb
dec
aad
addr16
dec
jno
cwtl
mov
sub
xchg
call
xor
adc
repz
and
shlb
insb
lods
and
scas
inc
es
adc
xchg
pop
jle
adc
adc
mov
clc
dec
xchg
push
jae
lahf
xchg
sbb
pop
sub
add
fstl
dec
mov
outsl
add
xchg
jb
enter
insl
int3
sub
imul
or
pop
xchg
inc
or
mov
pop
es
out
repz
into
jmp
in
jg
cmc
stc
mov
dec
cwtl
sub
pop
shll
xorl
dec
hlt
jmp
test
pop
aaa
inc
push
xor
xlat
dec
xchg
mov
bound
cmp
mov
test
jg
fcomp
jo
cmc
enter
or
cmpsb
repnz
jns
es
icebp
push
mov
ds
loope
or
pop
subl
cmp
mov
or
mov
std
sbb
popa
push
sub
xchg
daa
out
lock
add
inc
and
out
add
xor
inc
adc
pop
sbb
mov
jo
fwait
cmp
shrb
and
push
mov
in
mov
sbb
rclb
and
fsubrs
xchg
out
fiaddl
dec
cmpb
test
sub
mov
cmc
sahf
lock
imul
adc
adc
sahf
fwait
cli
cs
loopne
inc
hlt
lcall
jg
lret
pushf
sbb
je
dec
mov
ror
cmp
out
pop
je
mov
push
enter
dec
mov
mov
icebp
dec
cmpsb
xor
hlt
das
push
call
dec
xchg
fcomps
cmpsb
pop
adc
inc
and
ss
in
jle
gs
insl
arpl
cld
mov
mov
fstpt
mov
lea
cwtl
pop
inc
xlat
pop
daa
fs
inc
xlat
outsb
loopne
push
add
in
imul
sbb
xor
mov
rclb
mov
in
sub
gs
rcrl
inc
mov
jns
lock
sub
bswap
or
incl
outsl
xor
xchg
inc
stos
test
loope
jecxz
cmpsl
mov
pop
push
adc
rcll
cmp
pusha
pushf
and
test
daa
and
xor
xchg
mov
mov
adc
repnz
call
jno
add
jl
test
inc
repz
testl
cmp
repz
call
imulb
pusha
lods
xchg
jecxz
mov
jns
in
arpl
sub
fldt
out
dec
xor
test
adc
lods
inc
gs
les
or
adc
jnp
mov
mov
lea
and
std
in
jmp
cmp
mov
xchg
pop
add
je
fiadds
lods
and
add
mov
inc
jne
mov
sarb
adc
mov
xchg
xchg
mov
cmpsl
addb
testb
insb
lret
push
pop
pop
cli
inc
mov
enter
pop
push
xchg
pop
das
inc
pop
jecxz
xchg
test
adc
ljmp
out
jge
lret
leave
push
ljmp
mov
inc
jbe
adc
jb
arpl
pop
and
or
push
mov
stos
sub
mov
inc
mov
pop
mov
xchg
sbb
pop
xor
insl
cs
pusha
xor
sub
inc
and
pop
mull
jle
push
inc
mov
stos
hlt
ss
jb
cmpsl
lcall
mov
mov
imul
test
daa
xrelease
push
filds
nop
mov
pop
mov
push
loope
jb
adc
call
pop
adc
or
mov
inc
sahf
mov
jg
adc
outsl
push
mov
add
dec
ror
scas
outsl
sub
enter
xor
lret
adc
mov
popa
fldcw
xchg
dec
add
dec
in
hlt
rorb
cmpsl
orb
sub
mov
cmp
sub
jle
loope
add
cmp
andl
into
outsl
mov
out
adc
loop
mov
jnp
sbb
sub
stos
shlb
arpl
daa
adc
add
lds
addr16
xorl
lret
sahf
jae
lds
into
cmp
xor
mov
rcll
pop
or
pushf
fists
sbb
push
cltd
js
pop
mov
mov
loope
xchg
sarb
or
inc
loopne
jmp
pushfw
jo
ss
push
movsb
insb
insb
mov
and
ss
or
outsl
jns
mov
xchg
mov
iret
mov
sti
bound
sub
mov
movsb
je
xor
xchg
rclb
pop
into
rcr
cmp
cltd
sub
test
shll
daa
mov
imull
xor
loopne
push
and
movsl
icebp
stos
sub
pop
cltd
and
shlb
imulb
call
mov
pop
adc
movsl
ljmp
bound
cmp
nop
mov
sub
lea
mov
or
std
stc
mov
ja
in
mov
push
inc
sub
flds
lret
stos
cli
sub
mov
push
divl
out
cmpsb
inc
jmp
jnp
cmp
scas
fcomi
icebp
jbe
push
sbb
nop
and
adc
sub
mov
jnp
cmpb
stos
mov
ja
dec
mov
inc
inc
dec
mov
mov
repnz
ljmp
out
sub
pop
imul
lds
or
xchg
jae
in
fs
lods
mulb
adc
ret
cmp
cld
push
je
je
and
fwait
cmpl
jecxz
mov
mov
mov
pusha
mov
mov
sub
push
adc
into
lods
test
xchg
sub
test
inc
push
std
and
loop
ret
mov
xchg
clc
test
xchg
andl
push
adc
iret
mov
cltd
sbb
inc
mov
dec
out
mov
call
sarl
les
lcall
xchg
add
jl
int
arpl
push
adcb
fidivrs
fiadds
ljmp
xchg
push
inc
cmp
lret
mov
lods
mov
jge
lcall
or
inc
into
adc
pop
mov
outsb
xchg
inc
xchg
fstpl
mov
add
cmp
addr16
insb
adc
fdivl
popf
pop
add
cmp
bound
jg
jl
push
out
std
inc
stos
sub
hlt
jecxz
sbb
add
jecxz
jp
aad
jb
fwait
mov
mov
xlat
lock
mov
pushf
cmpb
ds
xor
test
jmp
ret
push
xchg
sbbl
inc
dec
sahf
and
adcb
mov
mov
push
xor
nop
pop
int3
push
push
mov
xor
adc
xchg
mov
cmc
push
xchg
mov
sub
gs
mov
das
adc
jmp
inc
mov
xchg
adc
and
mov
mov
fisubrl
shlb
out
decb
xor
cmp
sub
dec
jo
iret
ret
ds
xchg
adc
lods
lcall
js
movsl
loope
cli
lock
push
jg
inc
imul
inc
push
push
dec
icebp
testl
lds
cmp
xchg
enter
test
push
aad
call
push
mov
mov
push
rorb
mov
inc
adc
std
stos
data16
int3
repnz
out
dec
aad
adc
cmp
dec
push
dec
fdivr
mov
aam
clc
rclb
js
mov
fs
mov
jecxz
cmp
repnz
add
xchg
loopne
or
and
mov
insl
repnz
jecxz
pop
repnz
repnz
xchg
or
loop
frstor
shll
sbb
fdivs
inc
mov
or
jns
in
add
test
xchg
sub
hlt
push
rol
mov
cmp
ret
adc
jbe
fld
cli
sbb
movups
push
imul
adc
inc
push
or
and
gs
inc
push
xchg
dec
or
out
jecxz
lcall
test
push
std
es
pop
or
push
andl
sub
add
mov
arpl
cwtl
or
int3
test
dec
add
push
xchg
sub
hlt
push
into
jmp
jp
inc
out
push
jp
ljmp
inc
movsl
insb
ds
dec
or
nop
jno
mov
add
ret
lock
cmc
xor
or
lahf
adc
mov
stos
xchg
mov
xchg
sbb
ret
pop
cmp
fsubrs
bswap
fninit
inc
mov
push
nop
push
xor
in
xor
sbb
adcl
jne
insb
jge
loopne
icebp
mov
pusha
aaa
xchg
lds
push
bound
test
lahf
mov
xor
fstl
inc
add
imul
rclb
push
cli
mov
dec
in
jg
mul
mov
or
push
xchg
rorl
mov
arpl
sub
xor
cmp
inc
fsubs
and
mov
mov
ds
mov
jb
xchg
cmpsb
add
pop
inc
fwait
je
cmp
movsl
loop
or
mov
repnz
mov
dec
ja
pop
or
add
dec
scas
or
insl
fwait
in
xchg
stos
mov
adc
cld
mov
cmp
inc
cmpsb
pop
sub
idivb
mov
mov
xchg
outsl
mov
aas
leave
add
repz
sahf
rorl
xchg
cmovnp
jle
sar
cmp
mov
mov
inc
dec
out
push
push
jmp
mov
jge
cmpsl
in
push
movsl
and
and
in
dec
sahf
cmp
je
sbb
or
inc
lret
inc
lea
fwait
jmp
cltd
inc
jmp
inc
and
add
sub
out
sub
push
pop
dec
fistl
jge
sbb
ja
or
aam
fwait
xor
fbld
cwtl
ds
or
dec
push
sbb
xor
pop
inc
jl
push
adc
shll
add
aad
inc
popa
fwait
dec
add
repnz
gs
lahf
repz
negl
pop
cmp
loopne
bound
cmp
out
jecxz
push
mov
loop
mov
cmp
aas
fs
mov
xchg
mov
stc
ja
std
ret
in
inc
rclb
mov
lds
cmpsl
int3
inc
pop
sub
int3
xchg
xchg
push
popa
or
lea
lea
insb
cwtl
adc
pushl
add
das
pop
and
xor
testl
push
add
popf
jg
out
out
int
and
add
push
mov
mov
ds
and
int3
dec
scas
jns
adc
stos
cmc
pushf
aam
xor
cmc
jae
and
jg
lret
js
sbb
mov
pop
cmpsb
jg
and
xchg
sub
cltd
ss
es
out
mov
mov
inc
xor
out
lret
pop
pop
addr16
mov
add
dec
inc
mov
mov
push
pop
popa
fisttps
lahf
mov
lods
sub
mov
aad
jo
mov
out
mov
imul
pop
mov
loope
inc
xchg
sub
push
fidivs
out
lret
imul
decl
inc
adc
das
aaa
adc
and
mov
cmpb
jle
add
sarl
fsubs
and
pop
movsb
mov
ret
jl
push
arpl
test
pushf
xchg
mov
hlt
cltd
lahf
and
fnsave
hlt
jbe
jae
ljmp
ljmp
dec
mov
out
test
mov
sbb
cmp
dec
sahf
ror
mov
rol
cmp
orl
inc
cmpsb
push
pop
add
xor
lods
cmpsl
jno
jmp
xchg
test
xchg
xchg
pusha
ror
test
push
jmp
fisttps
adc
xchg
daa
je
lret
dec
mov
ljmp
and
fstpl
loop
subb
int3
or
pop
adc
sbb
inc
pop
test
lahf
movsl
pop
adc
enter
into
rorl
jbe
clc
xchg
sub
lcall
fldt
lcall
xor
idivb
xlat
mov
jl
inc
mov
add
mov
out
mov
jle
jp
adc
loope
aas
cltd
mov
push
jnp
iret
or
faddl
aas
mov
adc
ds
imull
sbb
xchg
iret
jo
ljmp
repz
pop
orb
mov
out
in
insb
xchg
lea
sbb
inc
bound
mov
pop
mov
push
int
lret
in
enter
pop
mov
in
ljmp
add
add
jmp
cmpsb
cmp
rcrb
xlat
mov
cld
adc
mov
adc
fs
insb
inc
shl
mov
mov
fcmovbe
mov
inc
sub
cltd
xlat
dec
jb
jmp
sub
ficoms
xchg
push
jo
xlat
lea
mov
cmp
repz
in
cs
push
xor
sti
leave
icebp
pusha
nop
test
mov
dec
das
aaa
cmpsl
push
mov
mov
fs
js
pop
imul
mov
imul
or
fdivr
mov
stos
cmp
dec
cli
in
mov
pop
add
js
sti
inc
test
lcall
imul
sub
sti
cld
fstpt
xor
pop
addb
xchg
adc
jl
test
icebp
jno
add
mov
jge
lds
scas
cmpsb
mov
mov
jg
out
aam
push
pop
fstp
push
pop
inc
test
adc
cmpsl
repz
mov
cs
mov
jne
cmpsl
rclb
xchg
push
add
das
rorb
lds
js
pop
leave
push
xchg
pop
xor
dec
and
inc
push
pop
sub
inc
xor
std
int
jbe
aam
push
stos
push
pusha
push
push
in
mov
push
pop
cwtl
sub
xor
in
jae
pop
ucomiss
fdivr
mov
jo
xor
dec
push
pop
jmp
aad
xor
lret
push
movsb
mov
push
stc
out
ret
xchg
or
add
call
test
mov
es
filds
cmp
push
outsb
dec
in
dec
mov
mov
inc
les
ret
daa
fisubrl
adc
popf
mov
mov
std
and
inc
repz
mov
jecxz
ds
lret
jne
sahf
aad
add
sub
lret
ffree
add
shll
mov
adc
fldt
and
cmpsl
cwtl
and
mov
fstpl
loopne
jl
sbb
push
dec
mov
sub
call
jg
pop
fldt
shll
xchg
and
fnsave
xor
lcall
repz
roll
stos
std
testb
out
adc
leave
adc
mov
test
push
mov
push
inc
push
pushf
pop
clc
bound
fabs
pop
mov
lds
dec
mov
adc
stos
out
pop
push
xor
scas
cmp
and
pop
push
push
test
xor
outsb
xchg
mov
test
or
jl
sub
mov
repnz
iret
repz
and
jg
push
test
jmp
lcall
leave
xchg
in
in
int
sti
ret
sub
dec
scas
jle
xchg
cmp
inc
repz
add
mov
pusha
mov
pop
arpl
xchg
sahf
mov
mov
mov
popf
ds
sub
mov
in
gs
mov
mov
int
sbb
scas
cmp
jne
dec
mov
mov
stos
mov
out
rorb
icebp
cli
inc
sarl
and
mov
loopne
stc
stos
not
rcl
sar
out
dec
addr16
test
push
jno
iret
cmp
mov
ficomps
dec
int
pushf
mov
aad
dec
mov
xchg
or
test
mov
stos
out
xchg
cmp
cmc
mov
popf
jns
sti
push
mov
roll
push
mov
or
jns
fiadds
insb
xor
ficoml
add
jnp
sbb
pusha
or
in
inc
pop
push
cmp
cwtl
test
adc
xchg
xchg
mov
stos
push
push
sbb
push
pop
aad
outsl
mov
lock
cmp
inc
aad
or
scas
aam
fmuls
jne
data16
sbb
cmpsb
ror
popa
push
fildll
dec
daa
pop
dec
sbb
pop
sbb
mov
out
orb
pusha
mov
imul
shrl
pop
mov
in
adc
jmp
cmp
cmpsb
imul
icebp
pop
aad
addb
lahf
mov
dec
mov
dec
pop
rcll
stos
mov
call
cs
rolb
fisubrs
xchg
ret
imul
aad
mov
in
jg
inc
jbe
sub
mov
mov
push
xchg
cmp
loope
je
add
push
out
jl
xchg
and
mov
inc
push
dec
out
xor
or
les
mov
inc
jno
dec
popa
sub
cmp
pushf
xor
sub
daa
in
push
jnp
idivl
dec
xlat
xor
add
popa
mov
add
pushf
insl
stc
xor
pushf
in
and
lods
xor
inc
cwtl
imul
shr
or
xchg
es
repnz
or
mov
pop
es
jb
and
mov
adc
shlb
xchg
cli
imul
fstps
push
in
repnz
jmp
push
push
lea
push
lret
push
pop
addr16
lods
out
jge
aas
aam
mov
and
sahf
lods
sti
repz
sub
sbb
xchg
or
mov
clc
or
ljmp
cld
je
push
pop
cmp
cli
ljmp
mov
lahf
shlb
xchg
andl
inc
and
add
add
stos
out
repnz
lahf
jns
ljmp
xor
lret
fstps
add
lcall
loop
fdivrl
inc
and
divb
dec
mov
and
nop
jecxz
dec
pushf
jo
roll
xlat
xor
outsb
int
jge
mov
out
xchg
fs
sub
sub
pusha
ljmp
repz
scas
mov
jp
add
lds
and
insb
lods
push
sbb
dec
jo
cld
mov
movsl
pop
jp
out
arpl
mov
repz
mov
and
pusha
popf
sarl
and
arpl
fdivrl
ss
mov
jno
test
testl
subb
xor
daa
mov
cmpsl
mov
mov
jne
pop
jle
psllw
pop
xchg
and
xchg
push
js
and
rorb
js
lcall
cmp
dec
xchg
es
cmp
or
aad
jl
xchg
add
out
adc
cmp
cmp
jae
sti
loopne
popa
pop
pop
pop
mov
pop
cmpsb
lock
in
pop
inc
fwait
adc
mov
push
inc
lret
outsl
jl
xchg
lods
adcb
xchg
mov
movb
inc
pop
pop
jnp
adc
sti
pop
addr16
dec
add
and
cwtl
lcall
and
movsb
sbb
stos
dec
aad
adc
sbb
cmp
push
or
leave
js
sub
fisttpl
lret
shrb
push
inc
mov
jmp
jbe
pop
inc
das
shll
mov
add
loop
xor
inc
and
xor
pop
call
iret
mov
dec
dec
cs
pop
stos
dec
js
mov
adc
add
mov
sbb
mov
jmp
lret
mov
jmp
add
and
out
push
and
insl
and
ljmp
stos
out
hlt
ja
cmpsb
aaa
movsb
mov
and
xchg
movsb
sbb
out
outsb
dec
fcmovu
inc
or
sub
shlb
sub
out
lds
insl
loop
lcall
xor
jp
jge
int
loope
inc
sbb
fldt
pop
and
rcll
add
popa
xchg
lea
adc
jnp
ficoml
cltd
mov
push
iret
cwtl
stos
sbb
push
sub
or
pop
xchg
mov
dec
add
jnp
add
int
lahf
ss
sbb
fdivs
sbb
stc
out
and
and
scas
movsl
in
fisubrs
cld
iret
sub
dec
jmp
cwtl
xor
cltd
add
push
xchg
xchg
inc
xchg
pushf
xchg
jg
rcrl
loopne
dec
addr16
jb
jnp
xlat
stos
std
and
xchg
ja
xor
xor
xchg
inc
fimuls
cmp
pop
dec
or
add
adc
push
jl
rorb
rorb
ss
push
xchg
lds
and
xor
les
wrmsr
xor
push
das
push
fwait
cmpsl
out
fucom
dec
mov
adc
insl
fmuls
sub
int3
jle
in
push
icebp
aaa
pop
inc
sub
in
xor
pop
mov
jp
lret
shlb
add
mov
aad
jae
push
cmp
adc
sbb
loope
mov
adc
cmp
in
inc
push
mov
imul
dec
in
femms
push
jo
in
adc
mov
mov
jns
mov
and
or
sub
push
cmp
pushf
xchg
hlt
inc
xchg
into
pop
and
xchg
inc
push
jp
mov
and
dec
rcll
adc
clc
adc
mov
and
sbb
cmp
sbb
inc
stos
jge
jmp
xor
ficompl
inc
inc
sarb
jecxz
mov
out
ljmp
dec
push
cmc
fadds
sbb
and
inc
adc
fwait
mov
pop
dec
mov
mov
xchg
jno
aad
aaa
fbld
sbb
lods
pop
fidivs
xchg
pop
fwait
into
inc
jbe
ja
insl
push
sbb
enter
xlat
lret
mov
lods
lods
lret
push
xchg
repz
cmpsl
dec
mov
lret
jns
add
mov
push
mov
mov
jle
dec
sbb
inc
xor
jae
mov
cltd
mov
sbb
mov
pop
or
fs
jb
and
loop
sbb
loopne
cmpsl
cmp
int
or
mov
adc
movsl
pop
loope
adc
in
cmpsl
jecxz
insl
stos
adc
or
dec
ljmp
dec
mov
jle
mov
aas
jae
scas
jns
inc
push
inc
pop
mov
loopne
push
mov
dec
jbe
sahf
mov
test
pop
push
xor
pushf
mov
fs
cmp
cld
dec
mov
popa
rcrb
pop
fiaddl
test
int
cmp
sub
cmpsl
dec
push
in
mov
daa
mov
inc
sbb
jns
push
xchg
mov
push
inc
adc
pop
or
outsl
cmp
sub
sub
fnsave
in
adc
in
or
push
jg
jmp
pop
ds
mov
or
cltd
mull
or
xor
dec
xor
push
xchg
mov
loopne
jo
jmp
imul
mov
je
cli
sbb
mov
push
cmp
sbb
xchg
cmpb
mov
ljmp
mov
inc
push
mov
adc
pop
mov
loope
pop
xor
pop
fildl
and
test
sub
loopne
sti
xchg
cmp
subb
xor
rcrl
bound
in
fisttpll
lock
testb
mov
mov
dec
lcall
lock
cmovp
push
or
add
mov
or
adc
ficompl
ret
imul
jns
rorl
leave
icebp
or
insl
outsb
jno
adc
into
loope
daa
fistpl
mov
lds
mov
jmp
loop
iret
dec
sbb
in
pop
sub
mov
sub
mov
mov
cmp
mov
jmp
or
scas
repnz
or
adcl
lods
sub
pop
mov
jl
push
or
insl
rclb
shrl
dec
mov
leave
xchg
xchg
jns
xchg
xchg
sti
pop
jb
cmp
xchg
sub
movsb
push
mov
test
cmp
cmp
loopne
lds
or
mov
imul
jb
mov
pop
std
xchg
push
dec
xchg
aaa
pop
dec
data16
sbb
push
out
test
jecxz
xor
imul
mov
fs
sbb
xor
aad
jmp
and
cmc
pop
or
arpl
dec
jo
dec
or
int3
divl
in
fnstcw
gs
mov
dec
jp
sbb
int
inc
int
push
or
fstpl
cmpsl
ret
inc
sub
jo
rolb
xchg
mov
adc
sbb
mov
add
sub
adc
stc
mov
insl
mov
sub
sub
cmc
in
cmp
nop
xor
fwait
push
add
mov
inc
test
ss
jb
imul
aad
stos
push
jl
pusha
js,pt
sub
xchg
xor
mull
push
xchg
mov
jo
cmp
test
xor
sub
nop
sbb
sub
sbb
icebp
xlat
inc
xor
mov
fdivrl
xchg
dec
and
stos
cmpsb
adc
mov
sub
adc
cmp
repnz
xchg
test
das
push
fs
notb
pop
sbb
xchg
call
push
and
add
mov
inc
push
jg
jg
roll
adc
push
push
ficomps
sti
repnz
ds
sub
cs
cmp
or
scas
dec
mul
dec
outsb
xlat
pop
xchg
cld
adc
push
jmp
jns
lods
sarb
shr
scas
push
jle
inc
lret
add
mov
dec
test
jne
lcall
hlt
sahf
mov
popa
push
mov
mov
adc
cmp
stos
test
hlt
adc
jp
movsb
sub
mov
xchg
jge
inc
mov
or
mov
inc
aad
add
jge
in
xchg
xor
dec
lock
test
pshufw
in
mov
mov
jge
test
sub
cmpsb
push
popf
pusha
jno
bnd
push
push
aad
sub
cmpsb
pop
cs
and
into
dec
cld
int3
jns
mov
sub
bound
ljmp
adc
xchg
xchg
dec
pop
mov
cs
shrb
push
jp
lds
int3
push
ss
insb
or
fs
or
xor
inc
jp
sub
out
and
testb
mov
cwtl
int3
sbb
mov
flds
pusha
movsb
push
inc
jnp
xchg
out
push
inc
pop
push
cvtps2pi
imul
pop
inc
add
push
sbb
xchg
push
mov
jns
mov
mov
mov
in
das
outsl
push
test
mov
in
inc
sub
aad
or
popa
loop
or
xor
jno
inc
je
adc
jo
cmp
hlt
ror
mov
jmp
sbb
pop
shlb
mov
dec
xor
ljmp
adc
jmp
xchg
std
inc
in
lret
inc
idivb
movsb
xor
call
mov
popa
dec
xchg
mov
xchg
mov
push
fsubrs
fildl
test
inc
push
adc
mov
push
mov
xor
cmp
movsb
jge
cwtl
cmp
and
pop
adc
inc
jl
jns
dec
into
test
and
mov
push
mov
lret
fxtract
add
dec
pop
lcall
shrl
xor
dec
out
fscale
xchg
sub
gs
packuswb
jo
xor
mov
int
loope
pop
add
ja
clc
add
gs
lock
xor
jmp
gs
xchg
cmp
out
push
cs
jne
sbb
cmp
pusha
jns
repz
jg
in
insb
jb
movsl
adc
jno
test
scas
and
dec
outsb
xchg
mov
clc
dec
mov
movsb
das
das
fcoms
and
in
or
jle
leave
repz
cmc
pop
and
mov
adc
push
jl
and
fidivrs
enter
push
inc
push
adc
push
les
shrb
test
pop
aam
push
movsl
jae
pop
cwtl
sbb
cmp
les
scas
shlb
out
pop
jmp
mov
dec
sahf
or
or
jp
inc
xor
push
add
xchg
jle
cmpsl
das
mov
loope
lock
cmpsb
or
mov
xchg
lret
leave
jae
cld
cmc
mov
std
mov
nop
ud0
test
stc
push
push
roll
sub
pop
mov
aaa
jmp
stos
mov
or
sbb
xor
rcr
cmp
fmul
test
adc
jle
inc
mov
inc
inc
notb
lods
cmp
leave
in
cld
in
ds
jo
cmpb
mov
rolb
roll
cmpsl
xlat
nop
push
mov
movsl
or
stos
sub
mov
aam
in
jp
cmp
mov
xchg
adc
push
mov
scas
xor
dec
in
sbb
cmc
or
dec
and
popa
cmp
xchg
xor
mov
pop
sub
pop
add
pop
jecxz
add
rorl
pop
rorb
icebp
sbb
add
repnz
mov
dec
ret
push
rclb
andl
add
push
cltd
sub
gs
inc
stos
addr16
clc
movsl
adc
push
loopne
push
push
add
sub
popf
mov
pop
jnp
jge
dec
insl
and
fisttps
xor
jb
pop
sub
xchg
adc
push
sbb
pusha
lret
inc
cmc
or
mov
and
outsb
inc
iret
add
mov
mov
push
pop
pop
clc
loopne
sti
inc
popa
scas
pop
scas
enter
mov
push
loope
mov
adc
mov
push
ficoml
shr
adc
push
pop
cmc
repz
sbb
ljmp
ds
xlat
or
dec
enter
lcall
sbb
loope
push
xchg
faddl
cmc
orb
imul
cmp
pop
in
cli
movsl
push
into
lret
inc
xor
and
data16
setne
xorb
pop
repnz
sub
fs
xchg
push
je
int
push
dec
adc
test
sub
push
into
xchg
jo
mov
in
imul
dec
xor
mov
dec
jg
or
out
sbb
lret
movsl
cmc
leave
dec
mov
pop
out
push
mov
fcmovnu
hlt
xchg
sbb
jge
fdivrp
outsb
lds
pop
dec
cwtl
pop
xlat
jnp
vmovlpd
stos
inc
add
rcrb
add
mov
dec
call
mov
aaa
clc
daa
icebp
fwait
clc
xor
xchg
add
lods
and
lods
in
or
mov
jmp
or
and
ror
mov
push
add
outsb
mov
dec
jne
ds
imul
stc
fildl
cli
mov
out
jle
jmp
daa
adc
xor
outsb
iret
aas
cmp
dec
repz
fs
fmull
dec
enter
out
pusha
in
sub
je
add
mov
mov
repz
mov
add
add
inc
enter
addr16
stos
clc
dec
mov
orb
icebp
sub
cmp
mov
mov
and
cmc
jne
mov
cmp
push
xor
lcall
mov
into
cmp
stos
aam
ds
insl
lock
imul
outsb
iret
add
sti
lcall
scas
test
xchg
xchg
xor
cli
call
push
dec
sub
fsts
sbb
test
fdivrp
mov
inc
out
cwtl
or
andl
and
cmp
outsl
int3
xchg
daa
sub
jl
and
cmpsl
sub
jno
and
loope
push
xlat
enter
mov
subb
sahf
inc
jmp
arpl
push
insl
push
ret
ficoml
or
or
repnz
dec
jge
lods
jge
call
xchg
xor
fisubrl
mov
jecxz
out
xchg
loope
or
jae
out
and
pop
mov
mov
pop
es
out
jp
jnp
je
pop
or
jp
jns
test
in
xor
adcb
mov
out
or
push
adc
xchg
jb
stc
es
mov
push
ret
mov
arpl
jecxz
or
pop
add
gs
mov
mov
and
lahf
dec
mov
and
and
add
lcall
push
imul
jbe
test
sbb
mov
mov
dec
inc
fnsave
dec
jp
mov
sti
cmpsl
xchg
out
popa
and
dec
mov
cltd
aas
mov
add
scas
imul
push
and
sub
iret
xchg
mulb
mov
lods
div
add
stos
data16
aam
dec
adc
push
popf
repnz
push
inc
jb
pop
out
dec
sub
sub
xor
jg
fdivrs
adc
ret
test
mov
fldt
sti
inc
stc
imul
stos
add
insb
mov
fwait
xor
or
sbb
lds
push
push
rclb
adcl
pusha
pusha
fldenv
loop
out
dec
test
jae
sbb
sbb
movsl
xchg
or
jbe
or
push
add
jnp
sub
pop
in
push
mov
dec
dec
pop
imul
fisubrl
in
lds
ljmp
jge
stc
cmc
cmp
mov
push
mov
jmp
add
popf
sbb
pop
mov
xor
push
add
add
shlb
mov
mov
icebp
cltd
sbb
in
and
rclb
in
or
dec
inc
inc
cwtl
mov
popa
jp
and
push
out
rdrand
inc
pushf
pushf
adc
sbb
dec
repnz
jge
inc
aad
push
jae
push
push
or
lret
ja
jae
jne
test
scas
or
xchg
push
rcrb
jle
mov
aas
popa
cmp
inc
fldenv
jae
lret
jb
mov
jge
cmp
xor
cs
lods
outsl
cmp
shll
pop
xor
into
pop
xorb
fdivl
fidivrl
into
arpl
xlat
jae
lods
ljmp
lea
insl
cli
into
pop
xchg
out
in
add
mov
pop
and
jae
imul
aad
mov
inc
cmp
xor
or
jle
push
jg
ret
rcrl
ret
adc
adc
xchg
ret
xchg
mov
stos
outsb
jecxz
jmp
xchg
int3
shlb
mov
dec
je
js
out
jmp
pop
aas
lods
cltd
jns
mov
dec
inc
mov
push
add
ret
aad
add
in
push
jp
icebp
add
adc
lea
pop
movsb
fwait
jp
adc
aam
and
inc
lea
sbb
es
jb
inc
cmp
int
aam
xor
in
xor
push
popf
jg
xchg
test
jo
scas
dec
pop
outsl
sbb
pop
jp
sbb
shlb
js
scas
xchg
in
mov
pop
lods
xor
insl
cmp
sub
nop
push
cmp
xchg
arpl
cmp
jno
sbb
pop
cmp
sbb
fdivl
inc
xchg
pop
clc
subb
dec
ret
mov
mov
or
inc
sbb
or
xchg
mov
xor
cmpsb
sbb
ja
xchg
mov
fbld
push
hlt
sbb
hlt
add
insl
or
mov
fcomi
loop
and
sub
jge
xchg
repz
lock
mov
mov
cmovne
dec
xchg
loope
xor
cs
mov
jnp
arpl
mov
rorl
or
imul
sbb
fsubrs
inc
aas
lret
lahf
shll
aas
add
addr16
xor
jno
call
xchg
jmp
gs
outsl
in
cmp
sahf
mov
inc
xlat
iret
ds
xchg
pop
cmp
scas
aad
lds
jns
sub
sbb
mov
shl
loope
xor
lahf
or
mov
pop
fxch
dec
insb
pushf
xchg
mov
aad
xchg
and
adc
popa
mov
gs
xor
out
jne
movsl
in
mov
movaps
adc
popf
jns
mov
shrl
addr16
and
subl
imulb
lahf
shrb
cmp
lfs
push
or
fwait
loop
or
jp
sub
xor
pushf
adc
and
jmp
daa
mov
setl
and
or
repnz
popf
mul
sarb
shl
cmpb
popa
inc
mov
pop
into
mov
popaw
test
pusha
jo
pop
rorb
xchg
add
adc
mov
cmpsl
scas
add
call
sbb
test
test
rolb
aas
jl
inc
lods
arpl
insb
jno
roll
jae
enter
stos
inc
and
mov
stos
xor
in
jle
push
mov
pusha
jmp
ss
shrb
mov
cmp
dec
mov
pop
fnstenv
push
xor
adc
or
mov
or
adc
jb
mull
mov
jbe
pop
mov
js
std
mov
fucom
dec
mov
scas
cli
jg
hlt
std
cmpsb
ret
clc
mov
and
jl
js
enter
dec
xchg
mov
cmp
int
fucomi
enter
add
add
pop
popf
and
cli
lods
push
aaa
lahf
jecxz
mov
cmp
adcl
mov
mov
mov
fs
mov
xchg
stos
mov
add
dec
repz
sahf
mov
stos
lea
mov
pop
stos
pushf
hlt
mov
sub
dec
mov
pop
pop
jl
aaa
sbb
pushf
cmc
popa
out
lret
sbb
fcomps
mov
shrl
loopne
add
mov
mov
insb
lea
fisubrs
cmp
ret
pop
inc
and
fmull
cmpsl
jl
mov
data16
das
imul
jl
jp
inc
hlt
sub
dec
imul
xchg
mov
pop
xchg
sub
xchg
outsb
push
cmp
mov
jo
and
arpl
lods
popf
cmp
mov
rcll
mov
ds
mov
dec
ss
enter
test
add
fldcw
stos
pop
in
mov
push
push
or
fsubl
lods
bound
pop
or
shrb
ljmp
push
out
das
iret
push
out
mov
or
test
sub
roll
xchg
mov
mov
cmp
negb
push
data16
notl
pop
mov
push
leave
and
in
xchg
leave
fbstp
inc
and
mov
imul
ret
lahf
add
push
repnz
sti
cmp
mov
fwait
jb
ljmp
mov
fsubrs
dec
push
or
jp
and
mov
sub
repnz
pusha
sub
aad
jo
add
inc
cmp
dec
test
mov
rorb
in
cmp
bound
push
ret
dec
cmp
push
push
inc
pop
pop
fsubs
dec
mov
shlb
xor
aaa
mov
lods
push
cwtl
rcrb
mov
ret
push
dec
imul
test
sti
xor
push
movsl
inc
call
push
loope
xor
or
lods
outsb
lcall
mov
ds
test
inc
or
xchg
cwtl
mov
jmp
jbe
cmpsl
insb
lcall
pop
sbb
mov
les
jb
xor
imul
cmp
rcl
cwtl
xor
mov
push
in
push
test
sub
shll
jo
sub
test
dec
xchg
push
jecxz
dec
or
sahf
js
jb
lds
jg
clc
imull
or
mov
xchg
into
inc
ljmp
mov
cli
xchg
mov
out
push
xchg
dec
pusha
xlat
lds
das
dec
bnd
sbb
dec
lcall
adcl
jo
mov
pop
jmp
insb
mov
jmp
push
jo
imul
sbb
xor
inc
push
lahf
inc
je
mov
icebp
cmp
iret
sub
in
jnp
scas
jb
mov
mov
dec
mov
insb
cmp
add
push
xchg
test
mov
sbb
or
mov
fs
inc
cld
movsl
pop
mov
into
xchg
push
cwtl
or
dec
or
jmp
sub
cs
mov
xchg
adc
mov
pop
adc
add
mov
or
sbb
imul
cli
pusha
clc
adcl
xor
mov
push
repnz
outsl
shll
out
addb
or
subb
rcll
pop
inc
ljmp
aaa
pushf
into
sbb
fbstp
mov
cwtl
negl
js
in
cltd
aad
movsb
shll
es
aaa
testl
xorl
inc
sbb
insb
outsl
fsubr
sub
push
std
adcl
pop
and
sbb
lea
mov
andb
mov
shrb
dec
mov
jp
dec
sar
sbb
xchg
aas
nop
std
loop
inc
or
pushf
into
inc
fisubs
adc
xor
and
cmp
jge
adc
loopne
and
jmp
dec
mov
jno
jnp
xchg
lahf
leave
or
je
xor
add
adc
test
sti
mov
mov
cltd
aas
popa
xchg
pushf
lret
pop
out
inc
or
or
lret
je
mov
pop
imul
jbe
leave
adc
cmp
movsl
jp
ret
xor
ret
mov
fwait
pop
shl
push
sbb
xchg
lahf
movsb
stos
xchg
xor
stos
or
pop
fldl
cltd
in
xchg
sbb
ds
in
jo
stc
mov
cmp
cmp
rorb
sub
mov
je
lcall
add
inc
ja
adc
std
shr
jle
xor
cmpsb
mov
orl
repnz
inc
sti
push
sbb
jb
imul
add
or
ljmp
xor
sbb
push
push
push
aad
and
push
and
enter
std
aam
push
jbe
cmpsl
in
rclb
and
mov
pop
out
rclb
mov
std
dec
adc
enter
push
mov
add
xor
cli
cs
test
jmp
or
xorb
int3
mull
dec
lods
aaa
test
pop
xor
cli
and
test
mov
mov
cmp
mov
mov
inc
or
dec
adc
hlt
or
push
hlt
out
in
add
cmc
jg
dec
jae
addl
mov
dec
xchg
push
sub
jg
cltd
or
cmpsl
cmp
sub
inc
out
fcoml
push
out
inc
pop
cmp
push
cltd
xor
or
jo
jle
clc
push
mov
jp
sub
in
in
cltd
adc
out
xchg
aaa
iret
push
dec
dec
cmpsb
cltd
and
push
das
dec
xchg
mov
mov
sti
mov
leave
aam
cli
inc
ret
inc
push
popa
inc
test
jg
push
loope
mov
lds
movsl
jmp
dec
test
sub
in
sub
push
scas
int3
pusha
inc
fcmove
push
rorb
adc
sar
jbe
testl
orb
jns
mov
cmpsl
mov
fldlg2
add
jno
push
jle
add
dec
jecxz
inc
arpl
out
mov
das
jbe
fnstenv
in
pop
xchg
dec
xchg
aam
jns
pop
adc
shl
cld
lods
sbb
and
add
iret
jne
jno
jb
cmc
movsb
ds
bnd
sbb
or
xor
popa
add
dec
push
and
mov
in
dec
cmp
loopne
push
xchg
mov
xor
leave
or
jge
dec
data16
aam
movhps
pop
mov
cmp
adc
lods
cmpsb
dec
or
out
xor
sti
jnp
ds
mov
rcll
pop
imul
pop
mov
imul
xchg
scas
xor
pop
jl
jo
out
jno
or
push
fldl
lahf
js
loop
idivl
push
mov
mov
mov
dec
sub
loopne
lock
xchg
call
arpl
ss
dec
into
cmp
jno
mov
sub
in
jp
shlb
mov
inc
pop
mov
outsb
cwtl
mov
es
fnsave
or
mov
jbe
xor
add
pop
xchg
push
lret
mov
add
sub
stc
xchg
cmp
sub
xchg
xor
mov
sbb
or
gs
mov
repnz
adc
daa
sub
out
shll
adc
lock
mov
cld
fldenv
pop
xchg
test
sub
loop
popa
bound
pop
ljmp
pop
mov
push
es
cmp
shlb
insb
inc
iret
in
data16
or
sbb
mov
fnstcw
in
push
sbb
lret
gs
mov
fwait
mov
scas
jecxz
sti
ja
sti
sbb
stc
scas
out
pop
push
adc
cmp
shlb
or
xor
pop
inc
add
jo
pushf
enter
outsl
or
xor
sbbb
mov
test
int
pusha
and
mov
aam
icebp
xor
pop
loopne
lods
mov
jecxz
jmp
mov
mov
lock
xor
fwait
adc
pop
fstpt
jge
inc
pop
or
fiaddl
fwait
shr
outsl
xor
xchg
mov
mov
loop
fidivrl
lret
sahf
sub
add
out
lahf
mov
into
fldt
add
fsubrl
rcrb
pop
lret
data16
pop
out
jp
and
pop
dec
sahf
pop
out
loope
jp
pop
clc
aam
pop
mov
repz
aam
mov
and
jno
cltd
lcall
sbb
sub
notb
lds
pop
jae
adc
imul
rorl
icebp
mov
adc
aaa
je
xor
sti
push
pop
arpl
add
push
aam
lock
jmp
mov
stc
lea
push
ret
and
sub
cltd
xor
sub
aas
push
add
jp
push
dec
into
add
in
das
jbe
outsl
xchg
push
push
iret
dec
push
das
arpl
out
jl
fwait
sub
push
imul
in
push
cwtl
or
jae
daa
cmc
xor
mov
jae
fistps
nop
mov
movsb
xchg
sbb
mul
jp
pushf
push
pushf
push
pop
daa
mov
adc
loop
sbb
in
mov
fcoms
pop
gs
inc
sub
mov
lret
jl
mov
lret
mov
jecxz
adc
imul
subb
into
xor
sahf
mov
jns
jg
enter
mov
mov
pop
push
cld
mov
dec
mov
movsl
test
cmp
into
pop
mov
pop
scas
dec
and
test
mov
pop
gs
inc
sub
jbe
pushf
fisubl
xor
roll
xchg
cmp
xchg
or
js
or
lret
jle
std
insl
cmc
iret
test
shrb
cmp
movsb
fidivrs
inc
jne
cmp
jp
jae
loopne
push
sbb
orl
xchg
loop
repz
sbb
data16
sub
in
ret
xchg
sbb
and
push
jecxz
je
mov
loop
loopne
lea
inc
nop
add
and
jg
repz
mov
sarl
add
das
push
shll
or
xor
push
dec
and
into
cmp
sbb
sub
hlt
mov
jmp
testl
pop
mov
xorb
cs
jecxz
inc
outsb
dec
xchg
repz
xchg
inc
in
xor
jne
mov
push
dec
andl
test
loope
jno
bswap
loope
adc
mov
push
pop
popf
iret
pop
cmp
add
stc
andl
dec
aad
mov
add
loop
sahf
jo
push
sub
stc
add
mov
in
dec
and
jle
add
sbb
adc
xchg
jne
pop
cmp
idivl
es
push
shlb
dec
test
shrl
mov
lds
or
dec
aam
sub
mov
xor
pop
jle
pusha
sti
push
dec
push
lret
jae
inc
aad
cld
bound
mov
addr16
sti
jle
dec
mov
clc
loopne
test
pop
jmp
mov
sub
and
push
xorl
pop
push
push
xchg
sbb
push
push
lret
or
jnp
pop
or
in
in
jns
andb
enter
es
jnp
xor
lods
dec
push
push
dec
sub
pop
mov
test
fildl
or
es
pop
mov
inc
pop
pop
jne
andb
test
test
bnd
sub
mov
inc
mov
xor
push
lret
out
sub
inc
cli
nop
fdivr
inc
ret
sbb
pop
push
jae
jae
mov
stos
adc
popa
fists
mov
mov
aas
mov
sub
pop
cmp
mov
cwtl
mov
mov
test
or
xor
adc
loopne
inc
popa
inc
scas
stos
dec
or
adc
imul
js
scas
mov
rorb
sbb
pop
mov
xor
shld
jnp
sub
adc
inc
fs
adc
add
nop
gs
pop
mov
push
push
aas
add
sbb
mov
xchg
rclb
dec
iret
lea
icebp
cmp
es
test
mov
jmp
inc
imul
icebp
in
dec
xor
pop
pusha
mov
sub
sahf
sti
xor
push
mov
pop
jno
ret
jb
mov
inc
hlt
fimuls
xchg
or
push
stc
mov
inc
push
pop
arpl
add
push
adc
push
adc
lcall
dec
xchg
xchg
lret
int
out
xchg
and
mov
inc
mov
outsb
mov
into
xor
mov
lea
mov
dec
int
data16
movsb
lea
push
lods
movsb
fsub
insl
pusha
fs
hlt
and
pop
push
stos
xchg
add
imul
int
push
xchg
or
bound
mov
cmp
aam
outsb
push
adc
lods
jns
mov
xor
jne
or
xor
pushf
jl
inc
in
and
mov
jmp
loop
notb
push
cmp
sub
push
iret
int
or
and
gs
xlat
mov
push
lods
push
adc
cld
and
cld
ja
mov
jle
adc
inc
fldenv
add
movsb
mov
jae
and
outsb
sbb
fcompl
xchg
outsl
mov
imull
xor
in
xchg
dec
pop
imul
mov
mov
inc
ss
push
mov
stos
roll
rclb
nop
xchg
loop
movsb
enter
fdivrs
mov
lcall
mov
cltd
jno
add
inc
pushf
js
orb
mov
int3
pop
cmp
cmc
fdivl
icebp
stc
fildl
lahf
push
lds
push
pusha
or
pop
mov
cmp
scas
add
jno
sub
xchg
cmc
in
cli
inc
xchg
sbbl
adc
xor
xor
pop
fst
mov
dec
mov
int
nop
push
test
popa
ret
xchg
rcll
cmpsb
lea
push
movsl
mov
pusha
xor
mov
or
mov
aaa
jecxz
inc
dec
leave
cs
mov
mov
mov
xor
mov
dec
xor
in
sub
test
repz
stos
dec
add
push
hlt
mov
imulb
int3
imul
icebp
mov
dec
push
mov
dec
jns
xchg
fisubl
sti
cli
jo
arpl
sbb
jl
out
or
lret
inc
cli
outsb
stc
cmp
rolb
sbb
ficomps
int
lock
out
cmp
mov
fbstp
mov
imul
out
les
xchg
jnp
pop
inc
js
addb
out
push
jb
xchg
aaa
mov
roll
fistps
mov
ja
add
fisubl
lret
enter
dec
push
lock
loop
mov
sbb
leave
jb
mov
or
aad
int3
lret
stos
aaa
cltd
cmp
or
mov
out
arpl
sti
stos
and
mov
ret
adc
scas
repz
test
iret
ror
sti
cwtl
xchg
loope
lods
shrd
das
icebp
les
das
rorl
fstpt
pushf
pop
cli
push
outsl
sbb
lret
jle
cltd
test
inc
pushf
sub
sbb
cmp
js
xchg
dec
aad
bound
idivl
dec
call
faddl
fisttps
insb
xor
lahf
push
insl
jl
mov
push
outsl
xor
xchg
insb
sti
xor
adc
jl
sbb
cmp
jne
movsb
or
outsb
jmp
mov
les
adc
aas
mov
or
xor
push
ss
and
and
scas
and
xor
xchg
xchg
dec
sbb
or
or
sub
call
add
shlb
sub
cmp
mov
mov
or
or
mov
mov
xchg
das
outsb
imul
pop
jecxz
inc
outsb
clc
mov
rcll
sub
adc
scas
movsb
out
test
inc
cmpsb
sti
rcll
call
mov
pop
lret
adc
mov
dec
pop
pop
and
mov
test
popf
int
repz
pop
xor
mov
cmpsb
in
int
iret
pop
cmpsl
xchg
inc
jbe
cmpsb
sub
sarb
scas
fldt
pop
add
fmul
xchg
pushf
in
stc
cmp
cmp
pop
mov
dec
test
pusha
xchg
lea
jmp
frstor
ja
int3
cmp
adc
in
jns
cmp
mov
sub
iret
jg
jb
rcl
fstps
loope
pop
sbb
jg
fadds
push
jecxz
fwait
andl
lcall
fnstcw
push
mov
or
dec
insb
aam
into
sahf
or
pop
jae
sbb
icebp
and
push
hlt
mov
adc
mov
cs
pop
jecxz
pop
icebp
sbb
adc
in
lea
fldcw
adc
sbb
ja
in
jno
out
repnz
xlat
push
mov
lahf
xor
mov
hlt
insb
lret
and
mov
inc
outsb
mov
add
pushf
out
mov
mov
sti
mov
movsl
cmc
test
fsubs
daa
mov
push
xor
xchg
in
push
or
or
add
das
outsb
movsb
int
cld
or
cmp
dec
push
insl
sub
pop
stos
mov
and
lret
xchg
scas
lods
push
loope
fldcw
jnp
in
xchg
and
call
push
in
sbb
loop
push
jns
sbb
dec
incb
sub
push
mov
dec
push
into
cmp
mov
and
push
mov
lods
rcpps
pop
arpl
out
xor
pop
imul
mov
sub
xchg
mov
insb
lahf
loope
mov
sub
cmpsb
stc
movsl
mov
leave
ror
sbb
or
loopne
bound
aam
xor
fcompl
mov
dec
lahf
popa
mov
pop
inc
and
int
ss
fs
subl
dec
popf
mov
and
bnd
jg
or
lods
xor
sub
pop
dec
popa
mov
mov
stos
xor
jl
xor
das
aad
andb
clc
call
push
test
cli
in
push
inc
xor
pop
xorl
fs
mov
mov
pusha
xor
nop
mov
cmc
jne
push
inc
mov
mov
notl
xorb
ljmp
push
mov
mov
pop
cmpsb
je
jl
int
jb
inc
lcall
cltd
xor
dec
insl
and
lahf
js
jne
sahf
stos
out
ljmp
jecxz
pop
push
push
test
test
pop
es
shrb
div
push
out
std
sti
nop
xor
pop
pop
and
in
push
call
data16
xor
leave
jbe
or
rolb
notl
fcom
jecxz
add
pop
cld
mov
cmc
ror
cmp
stc
mov
push
in
inc
sbb
jl
loope
mov
lods
shrb
push
mov
sbb
push
ret
xor
push
push
lret
jae
pop
aas
rcrb
mov
push
adc
adc
shrl
addr16
test
sbb
ja
out
ja
jae
sbb
pop
pop
lds
pushf
lock
popf
jl
icebp
aas
pop
xchg
cmpsl
ficompl
hlt
shrb
outsl
push
movsl
or
leave
xor
es
push
pop
and
jp
cmpl
inc
adc
mov
xchg
pushf
sub
pop
jne
sbb
and
add
iret
addl
cli
and
jmp
iret
mov
pop
adc
xchg
sub
clc
sub
test
fsts
jecxz
in
ror
pop
lret
cmp
popa
and
inc
and
jb
or
add
int3
ds
jg
push
pop
sbb
and
push
aaa
cmp
sub
mov
adc
xor
popa
lret
lea
faddl
movsl
inc
ret
rolb
pop
inc
outsl
or
xchg
jp
add
ljmp
adc
xchg
jae
out
sti
xchg
sahf
lds
gs
pop
xchg
push
jns
pop
pop
sub
lock
in
or
push
je
scas
jnp
sbb
aas
cmp
ret
sarl
popa
adc
inc
pop
stos
cwtl
ja
pusha
and
mov
adc
push
inc
dec
push
or
aam
cmpsl
mov
mov
out
mov
pop
jl
xchg
ja
pop
mov
jo
add
jmp
sti
adc
sbb
movsb
mov
sbb
dec
jmp
adc
dec
cs
leave
cmp
in
inc
dec
inc
jae
jnp
jnp
sub
sbb
mov
insl
mov
mov
add
or
xor
sub
es
negl
mov
aad
aas
mov
test
pop
push
jbe
mov
inc
lret
mov
mov
dec
pushf
xchg
stos
xlat
dec
ja
inc
loope
scas
cmpsb
sub
jnp
xchg
sub
mov
and
sti
or
mov
fldl
popf
cmc
rep
lods
push
rorl
pop
das
fbld
cmp
dec
fmulp
std
jne
sbb
push
scas
ds
addr16
push
dec
jg
ja
das
jge
dec
shrl
das
out
lret
repz
mov
dec
fsubl
sahf
pushf
inc
shlb
push
and
cmp
inc
adc
or
inc
adc
mov
arpl
add
test
lds
mov
push
mov
nop
xchg
jb
mov
cld
or
stc
pop
push
and
xor
aam
fsubrs
push
xor
push
loopne
or
iret
xchg
mov
pushf
mov
je
std
mov
pop
xchg
dec
or
repnz
call
add
xchg
add
or
iret
mov
xor
arpl
sahf
or
sbb
add
push
adc
adc
icebp
sub
xor
jo
movsl
test
outsl
xor
push
jmp
arpl
test
lahf
or
push
inc
and
dec
xchg
push
mov
out
push
and
pop
jne
pop
xchg
adc
test
sahf
jg
leave
fwait
fs
gs
or
jg
and
mov
ret
into
in
ficompl
loopne
arpl
fsubrl
lahf
mov
dec
in
adc
xchg
loopne
daa
fidivrs
jle
scas
xchg
in
mov
test
push
pop
jbe
xchg
add
mov
mull
mov
push
sbb
ss
jnp
mov
inc
addr16
leave
push
scas
in
xchg
inc
cs
stc
or
mov
imul
arpl
add
pushl
pop
hlt
sub
in
add
jmp
add
jg
fdivl
outsb
in
jo
icebp
int
sub
and
loop
cli
jl
pop
jno
inc
jb
xchg
push
mov
cwtl
jb
icebp
mov
mov
xchg
adc
clc
inc
ds
xchg
adc
adc
push
add
xor
cli
pop
xor
jns
inc
fisttpl
ficomps
shlb
aad
out
xor
loope
ja
stos
iret
adc
jmp
divb
lods
jp
mov
jb
lock
icebp
dec
jnp
stc
icebp
or
enter
filds
xchg
sub
mov
nop
push
or
ficomps
les
jle
enter
sbbb
mov
or
or
aam
aas
mov
pop
jecxz
mov
push
js
subl
sub
addb
mov
outsb
xchg
addr16
xor
push
sbb
gs
dec
mov
adc
cmc
dec
fs
mov
sub
jmp
cmp
sbb
mov
sub
clc
int
mov
and
insb
or
xchg
mov
dec
push
dec
int3
imul
jp
sub
scas
pop
cmp
repz
bound
inc
mov
push
inc
filds
scas
clc
or
sbb
inc
lret
bound
jg
or
or
jg
mov
mov
add
push
mov
cmp
mov
xchg
clc
xchg
aaa
mov
fcomps
or
jns
sahf
ds
mov
in
inc
lret
push
jns
mov
mov
iret
popf
push
rorl
jb
add
pop
sub
cwtl
mov
and
jno
dec
sti
xlat
push
sub
ret
sub
mov
cmp
jl
cmp
sbb
gs
icebp
inc
sub
in
xchg
jg
mov
enter
and
lods
xor
sahf
in
das
cmp
mov
shl
mov
sub
repnz
ret
mov
mov
sahf
cltd
aam
sahf
lahf
ds
sbb
rcrl
pop
mov
ficomps
inc
cmpsb
nop
fiaddl
bound
dec
shlb
movsl
cmp
sahf
stos
mov
rcll
lods
cs
or
xor
dec
fsubl
or
aas
mov
and
shl
mov
sub
sbb
or
sbb
repz
push
in
dec
nop
das
aad
add
fisttps
cltd
push
jp
xchg
mov
mov
sbb
mov
fwait
add
fs
loopne
iret
popa
mov
fs
in
fldenv
aam
ret
and
push
push
mov
add
pusha
or
hlt
add
mov
dec
lea
mov
adc
pushf
jo
call
fabs
movsb
dec
add
les
pop
push
ja
jle
dec
fldcw
imul
and
stc
push
xabort
enter
imul
push
jae
insl
gs
mov
sbb
cli
and
andb
fbstp
aaa
imul
push
cld
jne
sub
fwait
cmp
xor
jns
movsl
int3
or
in
cld
adcb
les
jl
sti
movsb
and
adc
add
rcrb
arpl
fidivl
add
pop
dec
cld
inc
cs
xchg
dec
bnd
rorb
adc
adc
or
fsubrl
mov
shll
in
out
minps
test
ja
test
out
jae
pushf
jns
fisttps
aaa
lcall
popf
fisttpl
and
loope
leave
push
sbb
pop
cmp
jp
sbb
adc
mov
jmp
loope
push
mov
inc
mov
fcompl
xor
cmp
insb
cmpsl
inc
stos
shr
push
adc
inc
mov
sahf
mov
test
inc
movb
pop
xchg
dec
mov
or
and
mov
shl
xor
lock
repz
xchg
push
outsb
test
push
cmpsl
movsl
or
jnp
xchg
or
hlt
popa
in
mov
pop
xchg
jo
and
push
stos
int3
aas
sub
xchg
mov
inc
je
xchg
test
lcall
ret
std
stc
addr16
mov
or
and
push
in
cld
push
inc
sbb
pusha
ret
icebp
mov
mov
dec
jmp
xor
or
sub
mov
mov
call
adc
arpl
jmp
repz
lret
jle
leave
shl
or
adc
jno
add
mov
js
ja
and
dec
pop
movsl
int3
lcall
leave
stc
adc
inc
subl
out
rolb
xlat
inc
or
sbb
or
loop
jae
test
inc
out
mov
push
loope
fnstenv
int
dec
xor
imul
call
pushf
imul
add
scas
cmp
mov
mov
sbb
jmp
popa
sub
push
rcrl
pop
xlat
cmp
mov
or
hlt
push
or
and
popl
gs
loope
dec
mov
sbb
xchg
jb
and
fwait
rorl
arpl
adc
test
aam
movsb
andb
inc
push
add
sbb
xor
stos
jecxz
ds
cwtl
lds
xlat
data16
arpl
gs
scas
ss
mov
xlat
pushf
and
gs
out
dec
in
je
shrl
mov
cmp
xor
jmp
or
das
and
mov
xchg
pop
jl
sti
push
jne
jmp
sbb
gs
fwait
mov
fldenv
outsl
jmp
push
push
fsubs
adc
inc
cli
dec
mov
jg
xchg
mov
cwtl
sub
xor
xchg
aaa
add
add
jmp
or
inc
imul
leave
push
into
add
gs
sbb
cld
push
aas
in
imul
pusha
sub
mov
mov
pop
mov
mov
adc
les
in
hlt
negb
cmp
nop
testb
pop
dec
mov
add
inc
and
ja
cmpl
or
jae
xor
or
add
stc
pop
xchg
outsb
fsubrs
ds
sub
std
jo
and
inc
lods
sub
cmc
push
arpl
push
mov
mov
shl
or
adcl
aaa
xor
lcall
inc
mov
shrb
daa
ljmp
data16
dec
sub
inc
xor
pop
dec
shll
add
pop
scas
push
mov
lods
or
lock
xor
in
mov
xchg
xor
mov
cmp
sub
jbe
mov
out
hlt
es
jo
das
push
and
and
inc
mov
sbb
jecxz
pusha
ljmp
mov
out
pop
mov
push
out
mov
lock
jge
leave
stos
nop
mov
lahf
push
or
xchg
aad
lcall
js
es
add
addr16
xor
sbb
sub
outsl
scas
das
out
in
out
aad
testl
nop
movsb
pop
pop
sub
push
sbb
adcb
push
adc
inc
fimuls
jg
fcoms
jbe
sub
dec
inc
popa
push
add
test
pusha
jle
xor
adc
stos
push
xlat
and
and
mov
cli
sti
ret
out
mov
mov
fs
cltd
inc
mov
rcl
and
add
jmp
or
cmp
cmpsb
cmpsl
pusha
out
or
in
faddp
or
shlb
repz
lds
jp
pop
push
mov
gs
add
add
arpl
xor
sbb
dec
push
stos
movsl
push
xor
xor
cmpsl
cmp
orb
mov
cmp
dec
in
dec
xchg
hlt
lock
lret
dec
cmp
dec
pop
mov
dec
jae
lea
jo
in
mov
je
lock
inc
dec
jbe
or
fidivl
stos
int3
loopne
pop
pop
xchg
cld
lock
push
xor
lea
test
mov
ljmp
cmp
repnz
fisubs
add
out
push
cmp
arpl
rcrb
jae
push
lea
daa
add
push
add
and
lods
cld
hlt
jnp
mov
pop
es
out
rcll
movsb
mov
movsl
popa
js
mov
inc
sbb
xchg
mul
jg
jle
mov
xor
testl
jae,pn
inc
add
std
or
adc
nop
pop
pop
xchg
loop
adc
mov
fmull
scas
dec
scas
aad
mov
pop
fnstsw
aas
adc
dec
test
mov
dec
mov
adc
and
loope
lock
in
xchg
in
out
das
pop
inc
lahf
arpl
lret
fmuls
in
push
mov
jno
paddusw
insb
test
daa
cli
out
rorb
cli
inc
fnstcw
xor
jp
outsl
dec
xlat
mov
xchg
xlat
xchg
inc
cmc
and
aad
adc
xchg
mov
lock
sbb
sarl
imul
in
or
js
mov
sbb
sbb
xchg
fcoms
cwtl
xor
add
test
pop
mov
cmpsb
cs
sub
cmpsl
cmovs
inc
clc
loop
push
add
mov
cmp
add
mov
fwait
scas
and
or
inc
fdivrs
adc
cmp
sbb
fstp
subl
nop
pushf
and
add
pusha
pop
cwtl
shlb
lods
shlb
in
ret
mov
sub
out
ret
lods
inc
lret
sbbb
xchg
push
jo
sbb
push
imul
mov
dec
mov
insl
sbb
jnp
stos
cmp
insb
aad
dec
and
nop
inc
fists
jecxz
das
lahf
lods
movsb
imul
or
nop
xor
outsb
inc
xchg
mov
mov
inc
pop
push
dec
jo
rcrb
mov
and
punpcklwd
movsl
lds
movsl
test
rcrb
or
int
arpl
lds
outsb
cmc
pop
pop
fsubr
lret
int
push
mov
test
add
push
push
mov
pusha
mov
gs
scas
arpl
rclb
jnp
stos
add
insl
push
nop
jo
pop
dec
or
inc
push
mov
and
mov
mov
leave
out
movsb
ds
pop
in
dec
outsb
push
pop
push
fs
jno
fcom
jp
testl
popf
daa
daa
xorb
and
inc
imul
pop
cli
and
and
in
xchg
in
test
les
or
in
or
mov
dec
inc
loopne
pop
push
jne
jle
xchg
adc
xchg
xor
imulb
nop
mov
imul
fsts
or
pusha
movsb
xchg
cmp
inc
pop
xor
or
in
inc
mov
pop
cmp
push
push
hlt
int
sub
arpl
outsb
aam
jp
pop
incl
mov
mov
push
sti
or
fmull
sbb
push
nop
test
pop
popf
clc
or
jp
movsl
xchg
pop
adc
pop
adc
mov
mov
push
pop
es
mov
sub
mov
lods
lods
mov
push
sub
in
jp
inc
data16
add
xchg
sbb
and
xchg
les
jmp
pop
fbld
fldt
push
jge
int
mov
ret
inc
sbb
nop
out
cmp
xchg
ficoml
stc
and
or
jo
add
inc
jae
lcall
je
cmp
add
mov
xchg
sahf
int
push
cmpsl
and
movsb
ret
ljmp
punpckhbw
popa
test
jbe
in
je
or
xor
fs
xor
lahf
popa
jge
imul
xor
dec
pop
inc
inc
inc
pop
adc
xor
jae
sahf
in
pop
mov
cli
pop
jmp
and
pop
dec
sti
and
ja
mov
add
loopne
imul
call
pop
dec
shlb
lcall
or
add
push
rcrb
dec
stos
lcall
rorb
mov
push
andnps
xchg
pop
outsl
jbe
and
stos
jmp
and
aaa
add
xor
pop
popf
imul
or
push
mov
je
fstps
cli
inc
cltd
ljmp
out
and
repz
mov
push
clc
jg
push
hlt
push
inc
pop
push
in
ljmp
pop
outsl
pop
popf
add
mov
out
add
inc
jmp
cmp
fs
es
mov
dec
sbb
and
daa
pop
sub
dec
subb
or
repz
inc
gs
adc
mov
out
xlat
mov
cs
neg
pop
ljmp
sub
cld
leave
sti
mov
cmp
mov
rcrb
shrl
jne
rorb
xchg
mov
sbb
xchg
decb
inc
cwtl
cmp
push
and
xchg
sahf
or
xchg
jge
jecxz
rcrl
xor
in
mov
inc
cmp
notb
aam
cmpsl
ss
sub
sub
aaa
addr16
or
popa
sti
iret
cmp
pop
cmp
sub
in
stc
shll
jae
add
jne,pt
out
jge
sbb
stos
push
inc
aas
out
xor
pop
xchg
je
ror
outsl
repz
jo
fistpl
inc
out
mov
push
jnp
aad
aaa
insb
fidivl
repz
sbbb
or
mov
jae
adc
sbb
inc
lret
loop
scas
inc
push
ror
jg
loop
inc
and
jne
sub
je
push
sahf
dec
dec
xor
outsl
pop
jp
mov
jecxz
adc
inc
push
cmpsl
test
nop
jg
xchg
hlt
pop
subl
jo
cs
icebp
mov
subb
sub
cs
lret
fisttpll
outsl
xor
xlat
add
std
in
cld
pop
sbb
mov
dec
pop
and
push
int3
pop
push
jmp
pushf
scas
addb
rorb
loope
lcall
test
bndstx
fs
movsb
lahf
outsl
cli
in
jno
pop
jbe
push
push
sbb
mov
aam
data16
mov
inc
add
inc
mov
cmpsl
pop
jecxz
adc
jl
and
inc
adc
fdivrl
std
repnz
cmp
or
sbb
lcall
mov
mov
cs
inc
dec
and
jmp
jns
loopne
adc
jae
mov
mov
xchg
bound
jl
movsl
adc
fldl2t
push
fdivs
ret
out
ds
ljmp
push
adc
idivl
mov
arpl
or
adc
out
imul
or
out
fdivrs
lret
shl
sbbl
stos
and
fs
cmp
xchg
aaa
pop
fcmovnb
hlt
and
add
loopne
mov
sub
sub
or
pop
push
out
leave
add
jp
mov
cli
sbb
add
mov
xchg
shll
in
xchg
imul
icebp
scas
mov
sub
cld
sbb
inc
bound
fnsave
inc
aas
xor
mov
sbb
test
or
xchg
cmp
jl
jecxz
dec
xchg
mov
or
arpl
int
lea
icebp
loop
push
icebp
push
cmpsb
aas
xor
push
rcl
jae
xorl
shlb
outsb
mov
ljmp
mov
xchg
cmp
or
mov
rorb
scas
dec
xchg
fwait
mov
lods
xor
adc
sub
mov
mov
xlat
jbe
push
push
push
push
mov
xchg
movsl
gs
push
int3
ret
in
mov
js
and
add
mov
fisttpll
and
addr16
out
into
mov
sub
jg
xchg
or
cmp
sub
mov
xchg
sbb
xor
ficoms
xchg
jne
mov
xor
mov
dec
cmpsl
fmuls
aam
jae
jbe
mulb
fwait
jb
inc
cmp
mov
pop
movsl
xchg
hlt
pop
sub
xor
sub
adc
sub
fcmovne
inc
dec
popa
dec
xorl
mov
dec
or
adc
inc
hlt
push
add
adcb
sbb
jns
mov
bnd
pminub
push
mov
push
pushf
in
jg
stos
ljmp
popa
or
cltd
std
push
sub
stc
js
in
push
fidivl
inc
and
daa
loopne
in
xchg
ss
mov
int
adc
rorl
inc
insb
jae
sub
rcll
cmp
fmull
loop
mov
ljmp
cmpsl
mov
mov
scas
push
test
sub
rclb
popl
subb
hlt
and
mov
idivl
shll
fnstsw
jge
ret
fidivrs
sub
or
jg
dec
and
mov
leave
aam
sub
idivb
sbb
jno
lret
jge
ret
sbb
mov
fists
lret
mov
lock
inc
sbb
into
loope
inc
push
push
sbb
xor
inc
add
sub
int3
arpl
add
mov
cli
es
push
cmpl
mov
sub
cwtl
dec
lret
mov
dec
adc
mov
pop
xchg
pusha
js
push
pop
inc
or
jmp
and
loope
and
xor
xor
jmp
and
mov
loopne
mov
sbb
hlt
xchg
add
cld
imul
mov
es
popa
mov
dec
movsb
adc
dec
pop
inc
mov
jmp
lret
dec
out
mov
ret
lds
clc
and
imulb
test
into
mov
mov
cld
nop
mov
adc
sub
in
frstor
gs
pushf
fstpl
jecxz
loope
mov
aad
xchg
outsl
pop
push
inc
fidivrs
sahf
and
xor
pop
sub
addr16
aaa
push
push
fbstp
cmp
stc
pop
repnz
outsl
or
ret
jl
into
dec
std
mov
push
popa
add
mov
mov
and
sub
mov
in
sti
fimuls
or
jg
mov
call
dec
movsb
movsl
push
mov
jnp
rolb
pop
adc
sarb
scas
add
xor
xchg
test
xor
dec
ja
mov
fsubrs
enter
sysexit
mov
addb
inc
xlat
cmc
jge
jno
or
cmpsb
xor
inc
jae
xor
rcrl
int
pop
clc
dec
aaa
js
add
mov
jo
sbb
dec
fs
ja
inc
adc
sub
pop
nop
xchg
xor
lcall
mov
mov
pop
leave
sbb
and
outsb
mov
lret
mov
or
das
push
push
mov
es
shl
sub
test
add
or
clc
pop
addb
sbbb
inc
fldcw
insb
sbb
push
push
popa
and
mov
xchg
inc
loop
ja
push
pop
fldt
mov
push
pop
das
fnstsw
xchg
xlat
mov
arpl
jo
lock
dec
fisttps
inc
ficoms
add
mov
mov
or
lret
call
cld
pushf
dec
xchg
mov
cmpsl
sbb
scas
jo
adc
mov
ja
pop
jmp
scas
fsub
jge
test
mov
mov
push
pop
int
sub
mov
and
xchg
fsubs
icebp
pop
scas
in
int
add
cmc
aad
cli
push
jb
mov
xchg
push
xor
jle
test
div
or
addr16
test
test
sub
pushw
lods
hlt
int3
push
pop
xor
enter
push
or
pop
cmp
add
mov
xchg
pusha
mov
aas
shrl
out
ret
in
rcll
add
xchg
std
mov
xchg
gs
adc
inc
ret
rorb
sbb
test
cmpsb
mov
dec
enter
cli
rolb
or
push
insl
adc
sbb
aaa
push
jmp
ret
idivl
xor
mov
xor
inc
xchg
test
sub
outsl
es
insl
outsl
scas
ja
jmp
icebp
out
insb
cmpsb
push
pop
mov
lods
pop
jo
and
sub
ret
cmp
xor
push
fldt
lret
jge
cmpsb
inc
cli
ds
mov
mov
adc
int3
loop
das
mov
popa
jbe
xor
sbb
jno
push
icebp
test
jnp
add
mov
mov
adc
xchg
imul
stc
js
mov
jle
or
pop
shll
fs
cs
mov
icebp
push
out
mov
jno
insb
bound
push
leave
push
sar
out
fnstcw
push
and
cs
stc
rolb
iret
cmp
or
lods
pop
mov
jnp
loope
cmp
or
sub
negl
jbe
ss
cltd
adc
push
cmp
add
pop
jne
ror
cwtl
mov
js
test
lcall
mov
icebp
mov
mov
xchg
je
inc
int
fsubrs
fwait
loop
xor
mov
mov
jmp
sbb
mov
pop
pop
rcr
xor
loop
push
push
pop
mov
mov
arpl
add
ret
pop
in
je
pop
pop
inc
test
imul
dec
jae
flds
sbb
jmp
jmp
cmp
xor
dec
aam
dec
shlb
dec
add
hlt
sbb
pop
xchg
or
arpl
mov
mov
enter
cltd
push
push
sub
jb
jl
gs
insl
dec
xor
test
cmp
ret
insb
out
lods
mov
dec
aaa
movsb
iret
pop
aam
fisubrs
cltd
into
push
nop/reserved
cmpsb
xchg
lcall
je
xor
scas
fistpl
xchg
fidivs
sub
rcll
in
cmp
test
and
ret
adc
mov
or
xchg
mov
xor
xor
jbe
jg
jmp
mov
mov
pop
mov
mov
xchg
jge
jl
pop
loopne
sub
jns
je
jae
jbe
ret
push
pop
loop
cmp
pop
dec
xchg
dec
in
jge
pop
xor
inc
mov
popf
into
adc
into
jbe
mov
pushl
in
jl
lock
jmp
lcall
inc
addb
leave
pop
mov
push
lahf
xchg
sub
or
adc
idiv
cmc
mov
cld
jo
xchg
rorb
sbb
or
pop
cld
push
jns
sahf
out
xacquire
jns
lods
pop
push
andl
sti
xor
in
es
mov
adc
test
imul
leave
fs
push
inc
int
cltd
lea
mov
xor
dec
pop
sbb
insb
or
dec
pop
in
push
testl
movsb
je
lea
dec
push
dec
lahf
fbstp
mov
mov
divb
push
add
sub
loopne
mov
aas
sti
in
cs
jbe
adc
push
cmpsb
xchg
mov
cli
xlat
dec
sub
adc
jmp
jg
inc
fsubrl
lret
adc
jl
adc
outsb
jge
cmp
dec
push
roll
add
push
push
mov
jbe
sbb
rol
mov
jb
popa
cmp
popa
sbb
fucom
xor
repnz
rclb
inc
lahf
outsl
loopne
add
rcrb
push
fwait
inc
jg
test
repnz
mov
into
rcrl
mov
cld
stc
scas
push
xchg
sub
gs
mov
iret
adc
popf
fisubrl
adc
fdivl
fsubrl
inc
mov
and
ror
icebp
loopne
pop
insb
iret
push
mov
sbb
sbb
cmpsl
dec
int
pushf
addb
imul
adc
push
shll
fwait
dec
scas
xchg
xchg
cmpsb
cs
cmp
add
inc
popf
aas
mov
cmpl
loope
imul
or
inc
leave
pop
mov
mov
dec
mov
iret
loope
inc
test
enter
cmpsb
mov
out
shrl
pop
loopne
or
xchg
jle
sub
call
push
xor
loop
stc
loope
push
push
mulb
mov
jl
xlat
add
js
rol
incb
jmp
xchg
or
jo
sahf
daa
pop
jg
stc
and
test
mov
inc
xchg
pop
sub
cltd
sub
jmp
inc
adc
sub
jae
shrl
jb
pop
cmpsl
daa
add
subb
shrl
fcoms
adc
gs
pop
xchg
fcompl
cmp
inc
cmpsb
movsb
aaa
push
xchg
out
and
out
iret
clc
mov
jmp
sbb
std
in
xor
cltd
cmp
sub
xlat
cmp
or
inc
push
mov
and
int3
dec
test
xchg
mov
jle
mov
cmpl
pop
pmaxsw
daa
es
jl
sbb
xor
jne
outsl
mull
pop
sbb
sbb
lock
mov
jmp
mov
add
cld
out
jnp
pop
test
sbb
dec
sbb
mov
decb
xchg
lock
jb
dec
call
mov
xchg
push
sbb
insl
adc
mov
ret
mov
jle
cs
dec
into
sbb
xchg
xchg
jecxz
fisttpl
mov
in
enter
push
mov
push
jno
stc
xor
inc
inc
add
mov
jmp
clc
cmp
xchg
pushf
mov
mov
jp
lret
jb
mov
sub
pop
imull
pop
push
sub
mov
mov
pop
mov
and
xchg
cwtl
sti
pop
adc
push
scas
je
cmp
addr16
outsl
repnz
loope
mov
insb
jge
sti
push
sub
xchg
adc
nop
push
cmpsb
lret
or
jmp
mov
outsl
orb
aad
jns
mov
jle
jl
leave
mov
sub
ja
inc
aas
aaa
mov
or
add
and
xchg
repz
pushf
pushf
pusha
xchg
pop
push
cmp
cmp
pusha
cs
fdivr
cmp
test
mov
out
in
inc
sbb
ss
xor
mov
out
fdivl
jo
mov
scas
in
jne
fdivrl
adc
mov
jle
add
insl
fs
cmp
cmpb
fwait
out
mov
xor
jmp
hlt
ds
add
shrl
stos
aas
aas
popf
adc
mov
out
repnz
mov
jmp
sub
jmp
dec
rcll
sbb
xchg
jg
imul
popa
mov
inc
lods
pusha
fimull
gs
stc
and
or
mov
mov
adc
mov
jg
or
pop
test
xor
sti
rolb
scas
push
popa
cmp
sub
add
push
movsb
cmp
mov
sub
and
repnz
sbb
mov
icebp
pop
mov
movl
or
add
mov
add
gs
inc
push
pop
xchg
cmp
pop
movsb
mov
pop
jge
sbb
mov
adc
outsb
ljmp
mov
lock
jnp
mov
sbb
adc
xor
push
inc
sti
leave
sub
xor
xor
aaa
outsb
mov
jo
pop
pop
stos
scas
cmp
sbb
jmp
jle
sti
sbb
xchg
and
xor
in
xlat
addl
in
sbb
push
jb
dec
icebp
aam
loopne
xchg
jo
jmp
mov
add
outsl
and
xor
je
xchg
in
lods
int3
xor
imul
lds
ds
sub
cmp
iret
test
fsubs
inc
inc
out
dec
fstps
cmp
bswap
mull
dec
mov
mov
add
mov
add
inc
nop
xchg
lcall
mov
lahf
loop
in
lahf
and
xor
xor
clc
adc
test
sub
jecxz
sbb
or
clc
mov
xor
and
adc
pop
jle
aaa
pop
xchg
sub
stos
mov
mov
gs
cmp
mov
fadds
outsl
jno
add
push
and
jno
push
out
mov
js
dec
ffreep
xor
jle
fs
xchg
or
inc
mov
and
sbb
ljmp
lock
sbbb
fucomp
out
frstor
test
roll
aas
leave
test
cld
jecxz
fld1
popf
jbe
les
add
pop
add
or
inc
cmc
inc
push
arpl
inc
insb
or
mov
lea
imull
mov
ss
and
push
cmp
push
mov
ficompl
jp
stos
je
bt
pop
xchg
push
or
add
mov
pushf
mov
test
movsb
pop
loope
or
aas
fdivrl
ljmp
dec
lea
lret
in
mov
push
xchg
jbe
jl
xchg
xor
imul
orps
dec
or
push
into
cli
sub
or
lods
mov
push
mov
stc
and
ret
inc
fiaddl
fs
or
mov
cmp
nopl
inc
fs
arpl
ss
outsl
xchg
sbb
add
sbb
push
lahf
jl
stc
xor
xchg
imulb
shlb
rol
clc
lret
mov
dec
sbb
hlt
je
jns
sti
or
mov
push
jmp
test
pop
out
scas
cmp
and
in
jecxz
rorl
sub
sahf
xor
cmp
jl
add
lea
iret
pop
les
test
imul
mov
add
test
dec
add
test
mov
or
iret
cld
xchg
jb
addr16
hlt
push
stos
sub
cld
ret
mov
icebp
fistpll
cltd
insb
outsl
in
add
mov
mov
inc
lret
bound
stos
jge
pushf
in
cwtl
rcrb
adc
push
and
adc
addr16
xor
jg
aaa
pushf
testl
je
xlat
arpl
or
adc
sbb
add
and
negl
aas
sub
popf
cmpsl
mov
movsl
imul
lods
xlat
push
nop
test
jns
jmp
jg
push
shlb
cmp
pop
sysenter
in
sub
in
pushf
les
mov
xchg
add
jmp
sub
cld
cmpsb
daa
in
inc
hlt
dec
cld
push
cmpsl
hlt
or
andl
pop
cmp
lds
xchg
sub
es
lret
inc
les
xchg
dec
mov
inc
loopne
repnz
int
adc
or
in
les
mov
sub
pop
jg
lods
addb
xor
inc
mov
repnz
outsl
mov
inc
sub
dec
aaa
sbb
fiadds
xchg
leave
mov
clc
sbb
shr
sahf
mov
stc
and
in
mov
push
jmp
sbbb
loop
repnz
aaa
dec
lods
pop
xlat
jne
mov
repnz
clc
adc
outsb
test
or
popf
cmpsb
jo
cld
jne
mov
push
jge
mov
nop
jnp
xchg
mov
cwtl
mov
lea
sbb
dec
mov
mov
dec
push
inc
mov
cwtl
popa
fistl
cmpl
add
outsl
stc
mov
adc
push
out
pop
and
int3
sbb
les
mov
add
nop
testb
in
int3
ret
and
fildll
mov
push
inc
je
shrb
jo
inc
jns
icebp
in
sub
scas
leave
cmp
jecxz
fbstp
jecxz
movsb
movsl
xorb
clc
or
call
pushf
out
pusha
fmulp
push
inc
dec
jo
aas
rorl
movsb
les
add
data16
push
adc
aas
lahf
out
rol
aam
xor
pop
and
popf
icebp
cs
sub
mov
stos
test
mov
cmp
xchg
pushf
inc
jno
push
sub
inc
fwait
dec
dec
sub
push
lock
adc
fmull
or
xchg
xlat
push
mov
jle
outsl
scas
aad
fnsave
sub
dec
xchg
cmpsb
xor
mov
ja
fisubrl
dec
aad
mov
inc
jg
mov
pop
lods
mov
pop
jbe
pop
push
cmp
test
cmc
fldt
movsl
ljmp
mov
aad
cmpsl
out
mov
pop
or
sub
and
jo
jge
cli
mov
jb
ret
sub
in
imul
aas
mov
shr
push
dec
sub
sbb
mov
ds
cs
imul
xor
push
add
or
mov
mov
js
scas
addr16
int3
clc
data16
inc
cmc
sub
cli
push
mov
int
pop
leave
and
sbb
aas
push
xchg
push
mov
test
mov
xor
add
mov
insl
out
mov
icebp
adc
insb
shll
pop
or
shlb
push
rorb
cltd
sub
cltd
lret
sbb
pop
mov
jbe
loopne
arpl
jmp
scas
xor
adc
jno
jecxz
and
fadds
cmp
cmpsl
inc
idiv
xchg
inc
push
mov
add
push
je
jne
jae
das
sub
lea
mov
popf
cmpxchg
lea
je
div
divb
jns
mov
jmp
pop
loop
adc
shll
sbb
jb
sar
jg
bound
adc
fiaddl
sbb
push
ja
adc
fiaddl
lret
or
mov
mov
das
popa
push
mov
push
cmp
aaa
mov
insb
add
popa
movl
test
jmp
movups
in
push
scas
lcall
lods
fucomi
fadds
incl
clc
fs
jno
fwait
jle
and
xchg
fnstsw
popa
sbb
push
loope
rclb
inc
cmp
out
imul
mov
test
sbb
lds
andb
lods
or
fwait
js
rorb
out
pop
push
pop
add
in
andl
and
in
cmpl
pop
mov
jge
pop
aad
push
fstl
jo
out
sbb
jns
lret
aam
popf
sub
dec
dec
xchg
fdivrs
mov
sar
xchg
outsb
fstpl
cmpsb
sbb
add
push
cltd
jb
xchg
out
fstps
loope
insb
mov
mov
adc
jo
cmp
and
mov
pop
mov
xor
inc
cld
test
sub
popf
cmp
inc
mov
sahf
inc
xorl
popf
scas
sbb
push
xchg
mov
test
mov
int3
ds
xchg
add
pop
sub
xor
adc
and
loop
and
je
lahf
sbb
mov
sbb
jae
fwait
adc
xchg
fidivrs
jns
mov
xlat
mov
xchg
int
mov
jle
ss
sub
and
push
push
out
sbb
dec
mov
repz
jae
cmp
pop
es
test
add
ss
insl
cmp
mov
xchg
dec
or
mov
mov
xchg
idiv
xchg
js
fisubs
fnstsw
add
test
sbb
or
mov
xchg
dec
mov
icebp
sar
mov
es
cmpb
jne
fcmovbe
mov
arpl
mov
mov
mov
push
push
jo
shrb
jmp
and
xchg
push
pop
pop
or
or
mov
outsb
pop
inc
cmpsl
out
into
fnstcw
stc
xchg
xchg
arpl
jl
mov
pop
data16
sub
push
cli
mov
xchg
or
inc
and
xor
es
int
divb
cmp
movsl
cmc
mov
sub
or
out
jae
mov
xor
mov
push
movsb
xchg
fldcw
cli
out
aas
icebp
ljmp
push
addr16
jae
adc
pop
ret
aam
fidivrl
sbb
inc
in
cli
sbb
ja
jae
mov
fadds
pop
ret
iret
push
out
mov
int
pop
int3
je
sbb
sub
sub
sub
or
xchg
loopne
cmp
and
mov
pop
mov
dec
inc
jnp
subb
adc
insl
ja
imul
aam
in
shr
jp
lods
jp
in
rorl
mov
pop
loope
into
mov
mov
push
arpl
iret
jb
iret
cld
cmpsb
cmc
adc
adc
lahf
movsl
lret
xchg
inc
jae
pop
ds
mov
lret
shl
mov
out
dec
fstpt
hlt
ss
jbe
and
pop
add
sub
or
in
loopne
scas
fwait
mov
jo
es
inc
les
dec
out
arpl
mov
movsb
pop
mov
push
les
add
test
push
mov
mov
test
push
push
call
leave
mov
scas
mull
mov
push
daa
pop
or
pop
and
pop
test
bnd
int3
repz
outsl
jmp
out
sbb
jecxz
sbb
lock
arpl
inc
nopl
xchg
mov
test
sti
sahf
lock
mov
ret
jle
std
bnd
pop
jo
jnp
inc
push
jb
mov
paddd
repnz
loope
jb
arpl
arpl
fld1
insl
enter
addb
loop
mov
xor
xlat
sub
pop
mov
jnp
adc
sub
sarl
in
jnp
lds
popa
jle
xor
or
popa
push
jl
mov
push
lret
subl
insl
xor
outsb
and
mull
push
jne
mov
add
scas
xor
lcall
xchg
fidivs
lock
xchg
fcoms
and
shr
popa
xchg
jmp
add
xchg
shlb
lods
mov
xchg
rorb
lret
sbb
aam
int
add
sub
sub
loope
or
dec
mov
jno
xor
mov
jge
popa
add
xchg
fisubs
inc
push
cmp
pop
and
sbb
and
and
and
xchg
int3
int
pusha
repz
or
push
inc
xchg
and
cltd
dec
mov
sti
scas
sbb
and
jno
pushl
jg
rclb
and
push
sub
inc
jle
sbb
das
std
mov
imul
mov
pop
scas
xlat
push
mov
xor
pop
sub
jl
lock
and
pusha
pop
es
mov
les
lret
mov
mov
pusha
pushl
andl
fadds
xchg
je
mov
loop
outsb
in
aam
push
in
jne
arpl
imull
and
sub
jns
lcall
dec
or
pop
test
push
sbb
sarb
mov
shl
lret
xor
shll
inc
sub
js
lcall
fldl
inc
jmp
fnstsw
addr16
push
push
test
ret
sub
mov
sahf
xor
in
ret
xchg
add
inc
lret
mov
nop
mov
aad
lahf
dec
push
pop
lret
push
pop
sahf
dec
mov
out
inc
popf
sbb
xor
mov
or
in
arpl
inc
mov
push
repz
mov
pop
sarb
mov
int3
mov
or
mov
fisttpl
cltd
ja
lea
cwtl
jne
jmp
inc
mov
jp
cwtl
cmc
cmpsl
mov
adc
jnp
test
mov
pop
add
movd
sub
lock
mov
pop
add
incl
push
fadd
stc
mov
int
sahf
test
into
xchg
fdivs
out
int3
sbb
lods
popa
pop
or
ss
testb
cmp
or
fidivrl
cltd
lret
ds
imul
or
rol
adc
push
jp
mov
mov
lods
cltd
inc
cmovle
lods
adc
push
jnp
push
lahf
sbb
cli
or
cwtl
rcr
cmp
pop
push
push
jne
cmp
xchg
pop
jmp
in
jecxz
cmp
push
cmp
sub
mov
push
sbb
repnz
sbb
in
xchg
push
add
fdivl
cmpl
pop
test
icebp
sbb
mov
frstor
lds
ficoml
mov
jl
lahf
mov
xchg
cmp
fmuls
ret
xchg
xor
adc
lret
ds
icebp
mov
test
fistpll
jbe
lock
rcl
test
jge
mov
push
cs
faddp
pop
xor
arpl
mov
cmpsb
addr16
cmp
addb
aaa
pop
cmp
ret
jg
fiaddl
sbb
mov
mov
mov
mov
in
dec
jmp
test
push
dec
enter
xchg
lds
jge
dec
mov
sarl
jge
jnp
inc
and
cmp
rcrb
pop
ss
pop
test
add
ljmp
test
or
lea
hlt
std
sbb
jmp
fldcw
add
xchg
je
push
sub
outsb
mov
add
xchg
jge
arpl
and
sub
jo
pop
lock
pop
mov
mov
mov
pusha
insb
arpl
add
inc
adc
dec
cltd
jbe
push
movsl
cmp
aas
sub
lods
mov
rcrb
ss
mov
inc
mov
outsb
push
js
imul
js
lock
mov
jb
cmc
in
mov
mov
xchg
inc
fstl
xor
and
lret
dec
cmp
lods
sbb
lock
sub
mov
subl
cmp
fiaddl
loope
fs
jbe
add
call
inc
adc
pop
pop
subb
jl
and
jnp
or
push
sbb
push
and
sbb
xlat
dec
int
mov
and
popl
and
inc
out
lock
or
add
ss
adc
sbb
mov
dec
out
orl
hlt
mov
pop
jns
and
sbb
fisubrl
clc
jle
mov
scas
sti
repnz
cmp
cli
mov
lock
in
andl
fwait
mov
pusha
push
loopne
or
dec
vpavgb
daa
shll
mov
mov
jno
jbe
movsl
in
pop
mov
insb
idivb
arpl
push
out
mov
xchg
clc
out
inc
inc
pop
push
mov
jbe
aaa
in
sbb
jmp
jp
scas
sub
sub
insb
jl
inc
aas
push
repz
cmpb
xchg
and
rorl
movsb
sahf
stc
mulb
and
dec
movsb
cmc
sbb
std
push
add
cmc
xchg
jo
xchg
mov
xchg
lret
push
adc
mov
xor
stc
sub
or
clc
or
push
repz
mov
push
inc
add
mov
adc
xchg
out
out
ja
lds
push
js
jae
fnstcw
push
icebp
inc
addl
push
inc
jp
daa
sti
out
mov
dec
movsb
mov
xchg
add
push
ret
data16
add
add
mov
or
lods
sub
dec
push
in
push
test
sub
xor
mov
sarl
fwait
arpl
stos
xchg
insb
rorb
lcall
and
mov
je
xchg
pusha
cld
cmp
out
stos
xchg
stos
jmp
ret
sahf
rcrb
andl
jb
mov
sub
into
pop
inc
aad
or
and
rorb
loope
jae
int3
mov
xor
popf
cmp
push
sub
test
fcoms
sub
dec
inc
scas
popa
mov
or
xchg
adc
mov
repnz
adc
ret
inc
mov
inc
out
add
cmp
lret
mov
lods
shrb
inc
xor
icebp
cmp
fyl2xp1
and
sbb
pop
incl
ds
sbb
ss
bound
in
xchg
sbb
rcrb
mov
xlat
fnstcw
lods
push
sub
aas
scas
xor
fdivrl
jb,pt
lahf
cmp
and
lods
lods
pop
pop
sub
repnz
xrelease
cltd
in
cmc
scas
test
dec
hlt
nop
mov
pop
mov
sbb
je
fstp
subl
inc
js
pop
inc
xor
pop
sbb
mov
mov
mov
loopne
shrb
push
or
or
or
mov
mov
gs
mov
push
push
jl
add
dec
mov
in
popf
cld
testl
ret
xor
adc
jne
outsl
jg
std
jb
pop
daa
dec
mov
iret
int
rcrb
call
xchg
jp
std
in
dec
insb
jno
clc
dec
mov
xor
pop
in
rorl
push
sub
mov
mov
and
mov
xchg
inc
push
lret
in
push
pop
aas
or
jno
outsl
xchg
dec
scas
daa
mov
rorb
imul
pop
outsb
jbe
aad
inc
shlb
jmp
inc
clc
push
pop
cltd
stos
xlat
mov
cmp
out
push
pop
mov
je
insl
add
inc
fbld
fwait
pop
rcrl
sub
pop
push
push
and
dec
mov
sti
fwait
pop
addr16
and
wbinvd
movl
jl
sbb
mov
pop
sub
ds
fmulp
mov
hlt
xchg
fnsave
cmpsb
mov
pop
movsl
xor
lret
mov
mov
cltd
mov
dec
mov
push
out
ss
push
adc
mov
sti
jg
stos
scas
push
lcall
xor
sbb
xor
test
sub
inc
fildl
lds
mov
das
outsl
xor
add
orb
jns
fdivs
xchg
inc
pop
test
fnstenv
sti
mov
xor
lret
subb
cli
rorl
test
pop
icebp
push
dec
jmp
jecxz
jbe
lcall
fwait
call
and
sbb
mov
xchg
test
fwait
stc
pop
mov
nop
pop
mov
std
clc
jae
xchg
dec
stos
inc
insl
loope
or
mov
hlt
mov
cli
neg
mov
mov
pop
ret
shll
out
out
ret
xor
or
mov
sub
push
adc
aad
jbe
out
push
or
xorb
and
mov
daa
xchg
push
ret
jne
inc
jns
int
xor
cmp
aam
pop
hlt
jmp
ja
xor
fcomp
jp
dec
pop
push
mov
int3
pop
pop
push
es
call
inc
lret
mov
leave
cmpsb
insb
and
popf
xchg
mov
pop
dec
stc
xchg
cli
or
jl
sub
pop
pop
cld
fldcw
push
ret
adc
or
gs
test
imul
jp
or
movb
jle
inc
shlb
jo
jl
into
cmp
inc
imull
mov
int3
shrb
ret
imul
sub
or
push
roll
and
or
sbb
dec
push
jns
and
push
pop
pop
push
mov
inc
adc
fdivrs
mov
lcall
out
les
jl
mov
pusha
xchg
cmp
inc
inc
mov
scas
pushf
arpl
and
test
and
push
xorl
std
movsb
push
xchg
clc
xchg
andl
jne
sbb
mov
jo
lcall
jmp
je
mov
sub
cmp
cmp
inc
push
add
xor
pushf
lea
cmp
dec
and
mov
mov
shrl
add
test
movsl
stos
movb
jmp
ret
jge
push
xchg
jg
fdivrl
repnz
in
dec
add
jno
iret
xchg
cwtl
cmpsb
orl
or
inc
xor
jp
fsubrs
outsl
xor
testb
and
adc
mov
pop
mov
cmp
inc
stos
inc
push
ret
cmpsl
dec
cmp
pop
out
or
jae
lahf
rcrl
ds
xchg
xor
sub
je
push
mov
rcrl
pusha
rorb
add
or
popa
enter
mov
and
push
shr
sbb
mov
push
addr16
sbb
pop
stos
mov
ffreep
adc
imul
addr16
lahf
mov
inc
lea
jp
outsl
shll
adc
cmpl
pop
pop
add
imulb
mov
pop
pop
insl
scas
stc
mov
mov
xlat
push
stos
xor
fsub
and
cmpsl
test
test
sbb
fmulp
or
test
iret
jmp
pushf
sub
pop
sbb
mov
or
clc
and
cmc
pop
xchg
mov
jae
xchg
leave
ljmp
dec
cmp
cmp
dec
add
cs
xchg
in
and
repnz
sbb
cmp
dec
mov
jnp
adc
jmp
fisttpll
pusha
aam
mov
aam
mov
fisubrs
pushf
daa
mov
cmp
scas
inc
cltd
jmp
loop
sbb
push
inc
pop
cmp
inc
test
arpl
cld
inc
mov
popf
add
lret
xchg
cmp
mov
lahf
jbe
mov
loopne
cmp
mov
out
jno
adc
repnz
mov
fmulp
ljmp
and
inc
push
push
sub
mov
loop
adc
stc
dec
inc
dec
add
aam
js
xchg
mov
jae
jns
int3
aaa
subb
jb
lods
stc
jl
fwait
jmp
test
aaa
and
popa
dec
fsts
pop
stos
daa
mov
or
add
pop
shlb
inc
mov
test
out
popa
in
mov
dec
arpl
sbb
bound
lret
scas
cmp
aas
xor
mull
xchg
loope
repnz
cltd
stos
std
xlat
mov
sbb
xchg
mov
movsl
adc
jae
nop
inc
outsl
inc
pop
bound
cmpsb
mov
pop
lods
mov
xor
pop
inc
or
daa
leave
or
sub
pusha
add
cmp
mov
add
push
in
xchg
adc
rcrb
daa
daa
mov
pop
hlt
adc
testb
stc
jecxz
and
nop
test
jno
in
ss
orl
push
mov
daa
pop
jmp
icebp
call
inc
dec
dec
popa
xor
leave
mov
lahf
nop
mov
lea
cld
push
and
shlb
mov
push
jnp
movsl
mov
push
cmp
or
jl
xchg
sbb
cmp
test
movsl
adc
dec
mov
dec
addb
lock
ret
ljmp
nop
repnz
cmp
movsb
lea
jae
std
fnstenv
inc
lods
and
dec
imul
ljmp
inc
cmpsb
in
xor
pop
mov
mov
test
xor
lods
ret
mov
mov
pop
ds
call
sub
arpl
sbbl
leave
out
sbb
inc
pop
rcr
and
repz
lcall
add
inc
out
mov
mov
push
adc
cmp
push
mov
xchg
popf
xor
adc
iret
ret
dec
sub
fldcw
and
mov
or
jg
lds
lret
cmp
mov
test
push
jge
pop
xchg
push
ret
cld
shll
jg
fldpi
jne
loopne
insb
sti
pop
mov
es
lods
in
inc
ret
adc
les
repnz
add
push
inc
in
lret
lea
jg
sbb
sbb
hlt
aas
mov
jge
xchg
dec
aas
jb
sarb
lcall
in
mov
nop
sub
lods
cmp
jo
pop
dec
pushf
cltd
das
int
mov
xchg
mov
je
ret
dec
ror
shr
xchg
clc
insb
adc
dec
mov
pop
aas
push
fstl
sub
out
mov
lods
push
xchg
pop
stos
push
testl
pop
in
aas
insb
int
mov
imul
daa
pop
mov
pop
rcl
imul
test
imul
xchg
sbb
imul
in
add
orb
adc
mov
pop
sar
cltd
fstpt
jne
or
inc
in
inc
inc
cmpsl
or
inc
cmp
outsb
repnz
shufps
fisttpl
mov
pop
mov
add
std
cs
test
or
jnp
push
and
sub
dec
xchg
mov
cmp
jmp
popf
xor
int3
outsb
mov
jbe
inc
out
xor
push
mov
dec
dec
inc
mov
mov
in
xlat
dec
aam
and
sbb
dec
pop
and
mov
test
cmovae
push
clc
or
cwtl
dec
gs
cmpsl
push
ljmp
addb
inc
mov
fists
aas
ja
sbb
paddd
and
insl
inc
aad
xor
sub
mov
hlt
cmc
mov
xor
dec
jecxz
sahf
lea
cmp
dec
add
divl
aaa
sahf
mov
mov
cltd
inc
scas
ss
dec
cmp
das
fsts
mov
lahf
dec
test
jge
sub
inc
sub
and
imul
test
push
andl
sub
jmp
xchg
jmp
dec
jno
repz
sub
cmp
dec
sub
xlat
dec
lock
decl
fbld
sarb
cmp
fucomp
push
cld
aam
push
addr16
scas
in
jbe
dec
shll
push
ds
inc
dec
out
sub
cmp
mov
shlb
enter
fiadds
inc
lcall
lock
pop
xchg
add
out
pop
mull
das
xchg
out
int3
mov
dec
jnp
sbb
out
sub
pop
hlt
add
movsb
xor
or
insl
adc
sub
or
lods
mov
fildll
mov
movsl
jg
mov
jle
test
imul
xor
fimuls
insl
rolb
pop
or
shrl
adc
fcmovu
outsl
out
loope
cmp
adc
outsb
fists
outsl
aaa
pop
cs
rcrb
mov
sbb
pop
pop
jp
stos
xchg
adc
add
fwait
mov
jge
cmc
mov
xor
iret
sahf
daa
lods
rolb
xor
lock
sbb
pop
cld
pusha
out
mov
repnz
popf
sub
stos
sub
inc
lods
es
aad
dec
mov
outsl
lret
sbb
scas
gs
popf
movsl
testl
jecxz
scas
cli
shrb
push
or
scas
jo
sub
sti
xor
outsl
lock
cmpsb
adc
inc
ljmp
roll
pop
push
mov
test
test
xor
out
cmc
pop
sti
xor
mov
inc
inc
or
fcomi
ret
jbe
nop
in
push
inc
aam
popf
dec
mov
std
mov
rorb
mov
pop
xchg
loopne
rorl
mov
cwtl
jnp
sub
add
rcrb
pop
push
pusha
xchg
movsb
mov
cmp
inc
and
adc
pop
xchg
ret
xchg
inc
xor
adc
push
mov
test
insb
jl
xor
aad
movlps
test
test
jno
sub
dec
mov
scas
and
fisttpl
inc
lret
imul
out
movsl
jg
dec
mov
jns
cs
test
shrl
mov
popa
out
nop
cmc
call
out
sbb
shll
jmp
inc
cmp
out
pop
jmp
dec
xchg
stos
das
daa
lahf
push
push
pop
mov
jle
ss
fnsave
add
push
xor
jb
cmpsl
and
rcrl
dec
xchg
inc
cmp
jns
inc
lock
inc
fwait
std
bound
or
mov
xor
iret
inc
and
fucom
icebp
mov
out
in
xchg
les
dec
mov
sbb
sti
add
clc
lock
adc
fidivl
mov
stc
test
out
rol
and
int
les
icebp
add
aaa
fidivrl
adc
add
dec
push
cmp
xchg
stos
aaa
out
pop
dec
sbb
add
jp
dec
jno
push
push
test
lcall
test
ds
pop
inc
movsb
stos
cmp
add
shl
pop
xchg
stos
add
inc
mov
xchg
imul
jp
repnz
aas
xchg
xor
cld
jns
jmp
pop
movsb
popf
les
push
mov
xchg
sub
or
es
sbb
mov
imul
sar
mov
notl
arpl
insb
popl
ja
fldl
adcb
ret
pop
or
pop
cld
push
push
xchg
mov
cmp
arpl
test
adc
xchg
mov
leave
cmp
roll
push
pop
push
jecxz
xlat
jecxz
ret
js
dec
sbb
fsub
pop
ret
flds
stos
imul
imul
inc
cwtl
adc
call
xor
xor
xor
mov
stos
push
sbb
xchg
or
pop
in
je
jns
mov
fsubrl
add
scas
in
or
push
fs
or
mov
push
gs
pop
lods
jp
bound
inc
dec
fmuls
incb
adc
xchg
and
adc
pop
push
cmp
xor
sub
mov
idiv
push
scas
nop
mov
aas
addr16
pop
idivb
adcl
mov
in
sub
and
sti
scas
cmp
or
mov
sbb
adc
cld
or
or
adc
adc
cmp
mov
jg
loop,pn
push
pop
and
fwait
push
cld
jecxz
inc
fcmovnu
sbb
jnp
rsm
and
inc
jb
add
xchg
push
push
jg
daa
bound
xor
nop
and
rorl
fdivs
popf
add
push
or
mov
jecxz
adc
dec
dec
sub
sub
js
cwtl
ds
add
push
inc
aad
dec
dec
mov
sbb
clc
mov
shlb
movsl
fiaddl
popa
lds
gs
aas
mov
mov
dec
sub
push
lcall
pushw
jnp
sbbb
es
fwait
out
pop
xor
sub
dec
push
xchg
cmc
push
push
pop
aam
fimull
cmp
idivl
pop
mov
push
rcl
mov
inc
sub
sub
loop
push
rclb
mov
mov
adc
scas
jle
adc
sbb
test
push
xor
mov
pop
insl
mov
loopne
mov
hlt
jp
cmp
mov
aam
imul
push
pop
cmp
loopne
stos
inc
dec
fs
adc
sarl
sub
int
or
mov
pusha
rclb
mov
push
call
mov
inc
lret
outsb
mov
shll
xchg
mov
adc
enter
and
inc
pushf
out
addr16
inc
cltd
loope
sbb
push
mov
es
movsl
or
aam
pusha
xor
dec
cmc
adc
xor
lret
in
and
xchg
fcoms
push
loope
pop
jae
fisttpl
mov
or
add
sbb
dec
stos
arpl
fdivl
dec
jb
jle
in
xchg
jle
pop
std
loop
mov
mov
ficompl
daa
mov
mov
push
insl
jnp
sbb
fstpt
dec
adc
mov
and
push
sbb
clc
in
mov
jl
into
les
or
dec
pop
rep
sub
decb
fldt
jne
xchg
inc
push
fisubrl
pop
pop
sahf
jg
push
jecxz
clc
aaa
mov
rorb
cwtl
call
adc
push
js
outsb
cltd
push
push
fiaddl
pop
and
es
stc
lcall
addl
cmp
mov
fiadds
imul
outsb
push
mov
and
xchg
add
jbe
iret
sbb
dec
into
mov
sub
push
sub
pop
push
pop
or
lock
or
or
mov
in
aas
mov
je
jne
dec
pop
je
cmpl
sub
and
ds
add
cmpsl
stc
cmc
fdivp
jmp
dec
daa
mov
inc
pop
jns
mov
inc
push
push
fs
pop
and
popl
shll
lahf
pop
ss
and
add
xchg
cmp
es
sub
and
adc
xor
mov
inc
sub
xchg
cmp
movsl
xor
pushf
rclb
insl
ret
mov
das
call
inc
enter
adc
pop
add
es
div
or
vmptrst
lret
aam
arpl
popl
loope
rclb
mov
jge
adc
push
dec
and
pusha
pop
pop
push
aad
mov
stc
hlt
mov
aas
dec
repnz
call
sub
sub
out
andl
movsb
int3
cld
pop
loopne
loop
ficomps
je
fsubs
jge
imul
cmp
cmp
cld
hlt
int3
mov
pop
dec
cld
mov
mov
std
xchg
je
outsl
cltd
repz
cmp
sbb
mov
mov
and
push
dec
sbb
imul
out
mov
addl
test
xchg
scas
loope
push
jae
pop
pop
xchg
xchg
lea
xor
popf
gs
jge
and
adc
insl
mov
iret
adc
pop
rcrb
iret
jle
bound
in
adc
xlat
mov
cmp
fwait
sub
add
call
inc
ds
out
call
pop
mov
xorb
adc
into
mov
rclb
lock
and
ljmp
pushl
adc
sub
dec
daa
ja
int3
leave
push
aad
roll
jp
icebp
andb
sub
jmp
js
and
mov
mov
dec
fdivl
ret
out
loopne
mov
jecxz
fdivs
and
orl
cltd
repnz
outsb
sbb
insb
push
mov
daa
ja
adc
jo
in
jb
lods
frstpm(287
inc
cs
aad
push
sub
mov
iret
out
xchg
fidivs
pop
xor
mov
xchg
mov
sbb
subl
out
add
mov
xchg
and
xchg
repnz
pop
int3
daa
sub
ds
in
xor
stos
cs
mov
jae
mov
pcmpeqw
dec
add
decl
pusha
and
js
mov
les
sub
ss
sbb
and
lea
cmp
clc
mov
hlt
xor
add
je
fwait
std
aam
fistpll
mov
mov
dec
push
andl
cwtl
push
jno
popa
jmp
jnp
add
cmpsl
dec
sbb
dec
movsb
jge
push
mov
dec
cmp
std
pusha
pop
xchg
sub
lret
ljmp
pop
sub
fldz
mov
jne
jge
xor
cmc
adc
push
popf
cli
fsts
in
or
mov
repnz
pusha
cmp
scas
mov
sbb
pop
mov
mov
scas
xchg
inc
aad
sub
pop
push
imul
out
faddp
push
sbb
pop
mov
pop
xchg
mov
pop
pusha
jmp
add
jno
test
loop
fs
xorl
mov
dec
dec
sbb
cmp
mov
dec
movsl
push
jne
xchg
xor
sub
std
out
std
ret
and
int
xlat
adc
shll
fs
xchg
mov
dec
mov
bound
dec
xchg
add
fists
dec
add
aam
mov
fwait
mov
andl
mov
icebp
adc
push
int3
stos
mov
mov
lahf
mov
lds
shl
incb
jg
jno
push
int
int3
jge
sub
xorl
xchg
mov
mov
call
push
sbb
shll
mov
aas
xchg
dec
add
insb
cli
or
adc
add
insl
cld
xchg
outsl
pusha
out
loopew
sub
jns
push
pop
dec
push
jp
inc
adc
push
outsb
rclb
decl
cwtl
pushf
scas
je
mov
jne
push
cmpl
fstpt
scas
push
xor
les
jns
cs
mov
xchg
enter
das
js
fcmovb
sbb
in
or
mov
les
dec
xor
dec
xchg
inc
pushf
or
es
stos
and
sub
jg
xchg
inc
dec
punpckhwd
jo
sub
cmpsl
jne
jo
mov
adc
stos
mov
add
mov
fadds
adc
dec
aaa
xchg
inc
lahf
sub
test
in
inc
cmp
xchg
iret
fbstp
jl
xchg
in
fadd
data16
loop
scas
jecxz
jl
mov
cli
sbb
sbb
fldcw
lret
xchg
nop
xor
and
loope
out
ja
mov
dec
pop
out
push
jge
outsb
iret
movsl
jo
adc
mov
mov
out
push
mov
sub
sub
aaa
subb
mov
stc
aas
add
fistpll
pop
or
add
out
adc
lcall
iret
std
insl
aas
and
ret
sub
xchg
fimuls
lods
das
jg
xor
lret
fadds
lea
movsb
add
bswap
mov
push
sub
insl
stos
rolb
rol
in
lcall
pusha
outsb
xor
mov
add
rorb
iret
jbe
imul
out
das
in
imul
pop
shl
cs
push
ss
and
adc
aaa
dec
outsl
jo
iret
push
cld
and
adc
stc
xchg
xchg
loope
insl
jne
inc
outsb
lods
push
ds
outsl
ds
and
dec
lea
dec
push
inc
mov
iret
xchg
mov
nop
dec
fstpt
lret
add
pop
insb
in
sub
in
call
dec
out
insb
lock
into
enter
pop
loop
mov
into
aaa
mov
data16
or
in
xchg
gs
pop
fwait
mov
mov
mov
xchg
sar
or
pusha
mov
cs
lods
inc
mul
cld
cmc
movsb
add
cmp
stos
cmpsb
ljmp
inc
jg
jnp
and
insb
jne
xorl
adc
inc
xchg
sbb
ret
add
push
popf
cmp
mov
sub
and
mov
dec
xor
mov
mov
sub
push
mov
jno
decl
and
jmp
shlb
jo
fldenv
push
inc
mov
in
sub
adc
sbb
push
lret
cmpsb
jae
dec
jmp
icebp
je
jne
into
test
sahf
dec
jmp
dec
cmpsb
dec
mov
xlat
cmpsb
pop
xor
jns
sbb
insb
inc
mov
out
shll
mov
xor
leave
fadds
gs
fs
and
fdivr
pushf
sub
inc
xor
rcrb
push
sbb
mov
xchg
div
add
filds
lods
adc
popf
jp
adc
lock
cmc
push
je
cmp
insb
sub
xchg
adcl
sbb
sub
pop
mov
test
inc
movsl
out
xchg
into
adc
mov
mov
xchg
orb
ss
fdiv
and
scas
hlt
loope
lret
stos
repnz
pcmpeqw
add
sub
push
aam
push
stc
mov
or
iret
ljmp
scas
hlt
jbe
popa
lret
jg
push
mov
pushf
sub
mov
das
popa
mov
push
shrb
std
jo
jmp
sbb
das
jmp
add
cmp
mov
cmp
xchg
jnp
mov
in
or
mov
ret
jbe
stc
outsb
mov
std
mov
jp
shl
incl
in
push
jecxz
adc
inc
mov
mov
loop
lcall
stos
loop
dec
mov
pop
mov
sub
or
cmpsb
mov
inc
shr
hlt
mov
lret
mov
mov
push
popf
push
mov
and
sbb
xchg
aas
enter
inc
add
and
dec
jns
mov
movsb
test
lods
add
fs
sbb
jmp
sub
dec
movsl
jle
inc
or
push
cld
test
adc
jae
in
inc
std
loopne
mov
adc
sbb
jp
sbb
cmp
out
insl
and
das
daa
xchg
lods
js
into
out
insb
addb
or
lcall
lcall
mov
mov
pop
es
or
pop
push
aas
out
push
fcoml
cmp
sbb
cltd
sbb
fcoml
jg
rcl
mov
imul
dec
or
fisubrl
dec
push
repz
inc
sbb
lods
adc
rcr
stc
jge
sarl
dec
dec
push
inc
hlt
xchg
bound
rdpmc
cmpsb
sbb
loopne
or
aad
les
push
leave
jae
sarb
in
call
ret
sbbl
ss
add
xor
lcall
mov
in
add
jo
dec
aam
shlb
fcoml
xor
dec
mov
js
sahf
xor
sbb
bound
xchg
mov
rcr
xor
popl
inc
adc
xor
fcompl
in
and
lods
sub
aaa
inc
pop
cmpsl
daa
sbb
cmp
filds
in
inc
cmp
mov
mov
enterw
dec
test
repnz
insb
nop
inc
lods
outsb
je
adc
add
mov
xor
in
push
sub
in
adc
rcrl
popa
push
insb
je
push
insl
clc
loopne
xchg
adc
pop
fisubs
dec
dec
shlb
in
fnsave
sbbl
pop
push
pop
fs
lahf
es
or
lods
out
test
sarl
jbe
fimuls
jno
add
pop
in
decl
dec
repnz
fwait
aam
sbb
dec
cmp
js
pop
dec
lock
add
in
push
xchg
je,pt
popf
xor
clc
push
ljmp
jne
insb
sbb
ss
inc
mov
daa
pop
outsl
add
or
dec
je
sbb
pop
stc
das
sub
dec
push
gs
push
jge
xor
jns
loopne,pn
fstl
or
cmpsl
jmp
mov
jp
and
inc
pusha
mov
shll
inc
and
xor
inc
mov
mov
add
cltd
xor
lds
clc
and
orl
xchg
xchg
out
enter
mov
test
int3
mov
leave
mov
xlat
mov
rorb
repnz
xor
lret
add
push
std
jns
or
cwtl
jno
daa
das
add
inc
lret
sub
sbb
lds
bound
inc
ss
mov
in
or
cs
mov
push
sbb
add
pop
lret
inc
cmp
and
cmp
hlt
loopne
mov
cmc
sbb
xchg
scas
jmp
je
xlat
and
bound
insl
sbb
dec
add
call
jle
jl
incl
xor
dec
and
lret
inc
xor
aam
or
pop
add
test
jle
out
push
push
lcall
and
jns
mov
jge
pop
lds
jno
adc
outsb
mov
inc
cli
nop
inc
jl
or
or
cwtl
fdivrs
jns
into
aam
xchg
mov
into
pushf
sar
sub
test
imul
mov
loop
movsl
fidivs
leave
push
add
adc
lods
sbb
out
setl
jmp
or
lock
clc
cmp
cmp
or
xor
push
dec
sbb
andl
xor
pop
add
rcll
mov
mov
imul
mov
dec
in
das
xor
fs
push
aam
daa
push
lds
xchg
push
adc
push
call
xchg
out
bound
in
mov
lret
sbb
out
mov
shll
iret
inc
push
imul
mov
loopne
xchg
out
cmc
inc
jmp
or
lcall
cmc
in
sbbl
cmp
movsl
inc
cmc
jae
daa
lcall
outsb
bound
rorb
test
pop
nop
lea
call
test
inc
je
imul
xchg
leave
fdivp
jecxz
pop
sbbb
call
inc
lret
aam
test
xor
cmpsb
mov
data16
inc
std
stos
mov
cmc
jge
test
pusha
and
sub
rolb
dec
mov
or
lock
addr16
test
mov
xor
push
mov
or
sub
xor
mov
sub
and
mov
sub
mov
stos
mov
jb
add
test
fwait
ret
imul
icebp
out
les
repz
dec
dec
test
insb
pop
jp
sahf
dec
sub
faddp
lods
inc
pop
lds
mov
stos
fnstenv
hlt
leave
loope
into
icebp
push
dec
and
adc
in
imul
pushf
movsb
in
filds
lret
rcrl
popa
xchg
sbb
fidivrs
mov
fildl
loop
dec
fisubs
mov
xchg
lock
mov
repnz
loopne
mov
jmp
pop
jne
push
mov
or
mov
cwtl
inc
pop
mov
push
jb
add
push
ss
pusha
sbb
pop
xor
divb
add
pusha
je
fsubrl
call
xlat
mov
lds
xchg
mov
je
out
dec
loope
sbb
sbb
pop
in
cmp
add
push
and
add
outsb
pop
stos
cwtl
jecxz
cli
and
jecxz
insl
pusha
gs
ss
addr16
stos
or
lret
js
jbe
add
push
cmp
bound
sub
add
mov
imul
adc
pop
push
xor
gs
push
dec
sbb
rcrl
lahf
xor
mov
repz
xor
mov
xor
jo
mov
inc
cwtl
mov
cltd
jmp
lahf
pop
mov
push
xchg
mov
imul
repz
sbb
loop
adc
gs
dec
lahf
fwait
imul
mov
adc
mov
mov
jae
dec
push
dec
cltd
test
inc
or
adc
add
inc
and
nop
popa
dec
scas
divl
lods
push
in
stc
mov
stc
out
add
daa
mov
pop
xor
jb
daa
cmp
or
clc
mov
vmovd
mov
mov
sahf
sti
int3
movsl
cld
roll
jno
shlb
arpl
cmp
js
insl
testb
std
and
sbb
loope
fs
orl
adc
mov
aaa
clc
mov
jecxz
mov
cmp
fsts
dec
adc
mov
add
push
mov
insb
aas
cmpsb
cld
dec
stos
jnp
cltd
jo
adc
ja
mov
stos
and
jl
xor
inc
push
fmulp
ja
iret
and
mov
es
mov
adc
bound
pop
jge
insb
push
rorb
in
sub
mov
in
in
ljmp
aam
dec
out
and
test
or
xchg
cltd
xlat
pop
or
lock
jp
or
imul
imul
mov
loop
not
les
mov
rorl
data16
test
inc
out
push
repnz
pop
ret
imul
sti
pop
add
and
ja
sub
mov
or
fimull
dec
jmp
int3
sub
fldcw
add
mov
jge
pop
movsb
xor
adc
data16
xor
shlb
xchg
pop
xchg
je
jmp
mov
inc
je
lahf
ljmp
pop
fsubs
or
push
sub
lds
push
mov
ljmp
testb
js
adc
cmp
jns
imull
jecxz
pop
push
and
outsl
repnz
jge
or
dec
jg
push
movq
insb
sti
adc
scas
in
shll
fdivrl
shl
or
push
in
int
push
dec
call
jbe
dec
daa
jecxz
sbb
cwtl
dec
loope,pn
fxch
imul
mov
mov
sbb
sbb
lahf
or
push
push
hlt
jns
or
dec
cmc
jne
lods
mov
jle
dec
push
xchg
popa
out
testl
lds
mov
mov
or
movsl
dec
or
gs
sub
fs
jbe
sarb
mov
cmpsb
cmp
shr
dec
in
test
xchg
jae
leave
ds
rcrb
mov
push
inc
jecxz
inc
clc
int
in
popa
add
nop
push
mov
jo
nop
adc
les
test
lods
xor
pushf
jns
aam
push
dec
fnstsw
mov
or
add
mov
mov
push
xchg
cmpsb
les
test
xor
leave
call
in
and
xchg
add
jo
in
outsb
or
mov
mov
mov
pop
repnz
adc
jecxz
gs
int
mov
hlt
mov
and
je
pusha
mov
cmpsb
xor
add
movsb
sti
add
pop
cmpsl
inc
daa
scas
aas
aaa
dec
xor
in
js
mov
xlat
imul
push
bound
cwtl
mov
fcompl
arpl
xor
push
ret
das
mov
mov
adc
adc
or
popf
into
int
and
mov
cli
icebp
cmc
testb
xchg
xchg
int
imul
gs
adc
xchg
inc
xor
mov
ret
dec
sub
pop
push
push
lret
outsb
cltd
cmpsl
xchg
cmpsl
mov
inc
pop
push
sti
jl
lock
je
cwtl
aas
jo
adc
mov
nop
std
pusha
xor
xchg
push
adc
xchg
or
mov
into
shl
ljmp
aas
pop
gs
test
sub
mov
dec
ss
cmpsl
es
imul
xchg
xlat
mov
push
lds
cmp
xchg
sub
mov
mov
pop
fidivrl
pop
ja
out
jnp
mov
repz
jno
pop
xchg
std
sarb
push
xor
cld
pushf
cwtl
mov
mov
movsl
out
fldl
das
and
cmc
add
ds
sar
fsubr
insb
insl
and
jo
jnp
in
adc
mov
in
mov
icebp
ja
mov
mov
int3
or
or
inc
cwtl
mov
xchg
fs
lcall
stos
lods
inc
leave
mov
mov
cmpsl
xchg
enter
mov
bound
cld
ja
mov
jb
cmpsb
mov
mov
cmp
push
sub
out
or
clc
sub
xor
dec
mov
push
in
and
mov
imul
xor
mov
ja
repnz
jae
pop
ret
imul
mov
lods
jmp
sub
in
stos
sub
push
mov
add
xor
pop
add
jns
mov
fwait
pop
gs
cmp
lahf
pop
ds
pop
cmp
insb
sbb
jle
push
ljmp
aad
outsl
lahf
push
sti
jecxz
adc
mov
jb
add
push
shr
sub
add
mov
addl
inc
mov
leave
xchg
sbb
sti
xor
lods
mov
push
pop
or
mov
lahf
jmp
mov
inc
push
divb
fs
loop
movsb
inc
or
jns
cmp
test
mov
sarb
out
lods
rol
add
sbb
sub
imul
xor
std
movsl
orl
mov
fnstsw
sub
mov
rorb
jp
movaps
imul
clc
cmp
or
or
in
shr
mov
dec
push
or
push
dec
les
and
hlt
push
push
lock
jle
dec
and
push
push
scas
movsl
jmp
mov
xor
jbe
movsl
inc
cmc
aad
pop
arpl
push
cltd
jge
sbb
out
js
push
xor
xchg
movsb
jle
and
movsl
or
push
andl
mov
xchg
repnz
jmp
aam
sbb
xchg
movsb
and
xchg
popf
cmp
loop
sbb
mov
das
mov
cmp
dec
in
fsubl
sbb
jae
stos
orb
enter
scas
shl
fdivs
push
xchg
loope
inc
jnp
aaa
in
loopne
les
sub
inc
sub
xor
sub
mov
xchg
lods
sti
inc
inc
lret
stc
and
pop
sbb
adc
dec
pop
jp
bound
push
int
lds
pushf
cmp
lock
adc
mov
add
pop
ljmp
in
ror
xchg
gs
jl
and
push
mov
jmp
cltd
and
pop
idivl
mov
in
pop
jg
sbb
jge
add
test
push
mov
jns
ljmp
mov
clc
clc
cmpsb
xchg
add
adc
mov
adc
inc
imul
xor
hlt
add
jo
or
mov
push
mov
test
or
jno
sbb
inc
imul
pushf
dec
and
jne
or
cmpsb
jge
mov
hlt
mov
aas
add
movsb
ret
in
pop
daa
gs
cwtl
and
test
mov
pop
xchg
mov
daa
adcb
push
ds
aam
pop
sub
jp
sbb
pop
xchg
xor
mov
pop
loopne
orl
cmc
out
jne
dec
adc
mov
add
adc
lret
adc
xchg
sbb
dec
repnz
mov
rcrl
and
cmp
push
pop
adc
sub
aam
outsl
imul
ds
adc
std
not
xchg
add
andb
insb
or
icebp
sti
das
pop
push
and
push
stos
ja
addl
std
mov
mov
mov
div
pop
push
xor
loop
scas
inc
addr16
outsb
in
iret
push
xor
out
mov
movsl
daa
icebp
sub
scas
enter
mov
pop
pop
pop
test
sbb
sbb
rorb
enter
cmpsb
std
out
sahf
lret
mov
mov
out
mov
mov
shl
fldcw
pop
test
mov
stc
mov
lods
mov
xchg
mov
pop
aad
dec
xor
scas
mov
pop
inc
clc
mov
aam
sub
rclb
mov
fs
cmpsl
ret
fucomp
out
cmp
inc
pcmpgtb
fsubrl
cld
adc
sub
test
std
test
mov
xchg
jo
jge
mov
mov
or
and
lahf
push
mov
inc
inc
xchg
sti
inc
std
lods
lds
into
jae
mov
rorb
jmp
fstl
pop
stos
enter
dec
sti
in
nop
cli
pop
fcmovnbe
add
mov
roll
enter
push
jmp
push
jne
xlat
sub
jns,pt
mov
mov
daa
push
adc
stc
lcall
and
add
rorl
adc
sub
data16
and
ret
out
jl
jae
iret
mov
sarl
jge
pop
mov
pop
pop
xchg
aam
dec
cmpsl
lret
cs
sub
stos
lret
xchg
roll
leave
test
cs
and
jg
push
pop
and
mov
cwtl
ret
test
cmpsb
jo
mov
jle
or
out
repnz
shll
push
pop
jp
arpl
lds
mov
dec
sbb
mov
out
jecxz
xchg
repnz
dec
jno
fsubl
ljmp
imul
std
jmp
jle
push
sub
and
jmp
jg
pushf
stc
fisubrs
mov
icebp
inc
mov
jp
cmp
in
es
dec
mov
and
out
dec
and
mov
inc
stos
jno
or
jmp
pop
mov
inc
icebp
sbb
in
in
sub
mov
pop
mov
test
cmpsl
sub
sub
gs
test
cltd
jecxz
das
iret
pop
negl
push
arpl
inc
adc
push
jb
and
es
lret
scas
pop
inc
sbb
in
stos
and
shl
push
lcall
and
hlt
es
dec
mov
out
pushf
mov
xchg
lods
push
cli
aas
out
and
and
shll
mov
sbb
mov
and
inc
or
jns
rcl
ljmp
push
dec
imull
scas
mov
je
mov
dec
outsb
loopne
je
je
insl
push
bnd
in
ja
cmp
push
ret
jbe
mov
out
dec
pop
xchg
push
dec
mov
lret
and
inc
loop
xchg
cmc
pop
cs
or
test
bound
shufps
or
mov
pop
std
xchg
xor
and
pop
jo,pt
je,pn
pop
and
int
adc
lahf
rcll
out
ds
repnz
jle
inc
inc
add
push
les
clc
insb
xchg
sub
push
mov
and
lcall
arpl
into
stos
jmp
add
ss
cmp
jl
ds
repz
pusha
std
mov
js
push
inc
dec
cmp
sub
or
outsb
mov
in
xlat
cwtl
dec
lds
cmp
gs
int
pushf
mov
mov
and
sub
xchg
add
stos
add
gs
jl
or
stc
pop
mov
push
push
jecxz
push
repnz
loope
cmp
jmp
fdivp
fadds
fidivrl
aam
icebp
mov
pop
pop
lea
cmp
push
inc
mov
cmpsb
ret
mov
sbb
jmp
sbb
test
jo
test
sarb
jb
ja
mov
gs
mov
pop
mov
and
mov
das
fisttps
and
insb
push
pop
push
addb
sbb
sar
sbb
dec
pop
data16
das
mov
mov
push
and
sarl
repnz
pop
mov
cmpl
lods
sbb
pop
out
je
ds
je
inc
fs
xor
xchg
ljmp
and
pop
mov
addl
insl
in
fwait
cmc
cmp
mov
push
fmull
lret
in
loop
movsl
xor
mov
adc
inc
pop
nop
ret
sahf
shll
ret
mov
popf
testl
pusha
out
xchg
cli
jecxz
pop
pop
xchg
leave
arpl
mulb
jmp
sbb
sub
xchg
fs
popf
push
mov
lods
std
icebp
add
movsl
loopne
lods
dec
dec
sbb
mov
je
pop
fistl
leave
loopne
pop
scas
cmp
xchg
jno
inc
xchg
push
jge
cmp
jo
xchg
insb
jg
mov
push
fcoms
or
aad
hlt
stos
pop
les
dec
pop
sbb
add
jg
fcomip
andl
lock
jb
xchg
popf
in
ljmp
mov
test
push
push
sbb
inc
jmp
mov
aas
fdivrs
jns
and
sbb
sahf
dec
add
sub
or
test
or
out
pushf
fidivrl
stc
xor
psubq
inc
lods
jmp
pop
movsb
cmc
subb
push
inc
cmp
cwtl
push
cmp
adc
mov
in
cmp
in
dec
add
aad
and
mov
jbe
lock
pop
insl
repz
jg
dec
leave
rcll
aaa
dec
inc
repz
dec
xchg
and
lahf
repz
mov
cs
jns
dec
adc
sti
addr16
cmp
or
cmp
xor
ret
pop
mov
addr16
cmpsb
dec
fadds
in
test
cmpb
aaa
inc
in
in
rcrl
xchg
scas
out
push
hlt
jnp,pn
lods
cmc
popf
xchg
sub
pusha
shlb
mov
pop
ret
adc
sbb
push
inc
addl
or
rclb
add
cmp
jle
in
inc
cs
gs
sti
aas
mov
adc
les
lahf
jp
mov
xchg
mov
lret
test
ficompl
call
xor
fcoms
jmp
iret
insl
mov
push
xchg
sub
lret
push
add
fists
cmp
pop
add
sub
aas
pop
enter
inc
lahf
out
and
and
movsl
ret
pop
aam
out
inc
jmp
jge
inc
inc
pop
fwait
push
data16
aad
cmpsb
xchg
push
add
sbb
js
aad
cs
cmp
ret
gs
loopne
inc
je
cld
xchg
in
or
push
xor
pop
sbb
jo
lock
cld
lods
not
and
cli
mov
pop
sub
out
fmulp
xor
mov
fldenv
fisubrl
int
xor
movsl
imul
pop
inc
xchg
mov
lahf
test
cltd
push
lods
jne
sub
int3
enter
push
jbe
dec
adc
addr16
repnz
bound
pop
scas
jl
push
jo
sbb
leave
std
lahf
test
negb
movsl
movsb
sub
jge
scas
adc
outsb
cltd
jns
pop
mov
push
scas
inc
js
outsl
aas
icebp
rcrl
stos
scas
enter
dec
mov
aaa
sahf
push
lods
leave
test
cmp
cwtl
scas
jno
or
icebp
imul
jb
adc
push
fmuls
mov
jle
nop
cwtl
push
adc
mov
push
pop
test
stc
lock
and
push
cs
mov
mov
inc
xchg
cmpsl
push
leave
lods
into
pop
movsl
scas
dec
lods
and
sbb
into
dec
adcl
lods
imul
hlt
pop
lock
sbb
lds
and
sbb
test
rolb
push
js
mov
push
mov
mov
push
cmpsb
shl
testl
xchg
mov
loope
ljmp
push
mov
mov
fistps
decb
aam
in
lods
jno
inc
outsb
shrb
fmul
cmpsb
jo
xor
dec
mov
sub
loopne
enter
dec
push
frstor
xor
ret
fnstenv
xlat
stc
lahf
add
or
pop
cli
ret
jmp
or
mov
movsl
clc
mov
idivb
icebp
mov
fidivl
add
aaa
popa
dec
mov
or
cli
mov
mov
mov
popa
aad
imull
aam
imul
call
int3
adc
out
pop
push
mov
test
adc
popa
stc
lock
jb
pop
popa
shrb
adc
mov
sti
push
sbb
inc
loope
mov
in
and
xchg
js
cmc
dec
jo
loope
pop
mov
shl
fisubs
fistps
popl
mov
push
jg
in
js
sbb
ss
push
mov
sbb
popa
lahf
aam
cmp
cmpsl
sbb
arpl
adc
outsl
cld
rcrb
scas
scas
inc
sub
leave
dec
test
imul
repz
pusha
cld
cmp
rorl
mov
mov
aas
aam
xchg
pop
inc
and
icebp
in
dec
xchg
ljmp
mov
subb
mov
mov
xor
push
cmp
jbe
aad
pop
jle
int3
xchg
mov
fs
inc
mov
xlat
jp
stos
fisttps
cld
sbb
fs
add
cmc
or
xchg
sbb
inc
adc
js
incb
jmp
hlt
jmp
stos
mov
int3
xor
movsl
in
into
inc
mov
and
add
subl
scas
fsubrl
outsl
dec
and
cs
sarb
test
push
mov
sub
or
loopne
jg
mov
push
mov
xchg
loop
add
jmp
cmpsb
adc
jae
dec
out
inc
pop
mov
inc
test
mov
loop
clc
xchg
or
push
loop
push
aam
stc
add
rcr
cmp
enter
dec
sbb
out
das
lret
pop
pop
or
inc
mov
lea
pop
daa
je
jo
xchg
fwait
or
arpl
fsubs
dec
lahf
stos
dec
aas
add
std
inc
arpl
mov
bound
and
inc
fs
out
stos
inc
mov
cmp
fsts
addr16
cmp
lsl
sbb
iret
sbb
jns
mov
add
leave
popa
pop
into
add
fwait
xchg
shll
icebp
and
out
mov
scas
xchg
push
pop
in
jbe
clc
xchg
pushf
cmp
imul
push
push
jo
adc
mov
out
das
push
push
jg
cmp
cmp
ss
dec
mov
mov
cmpsb
dec
push
mov
inc
inc
int
cmc
loope
cltd
cmp
mov
and
rep
xlat
sub
lods
lcall
dec
cmpsb
mov
mov
shrb
loope
jae
je
mov
outsb
inc
mov
enter
sarl
sub
mov
lahf
sbb
xchg
push
mov
dec
pop
mov
jnp
fiaddl
jae
aam
fisubl
leave
push
clc
mov
sti
xchg
in
in
call
mov
add
dec
pop
nop
sbb
cmp
xchg
push
rol
push
dec
add
push
sub
lcall
int3
lds
push
push
add
add
pop
lods
in
mov
sahf
sarl
adc
pushf
inc
mov
sbbb
sbb
mov
popf
popa
test
fistl
inc
sbb
ss
ja
std
jae
negb
clc
pusha
pop
test
add
dec
adc
cmp
and
jo
sub
pop
popf
fisttps
pop
dec
add
add
iret
std
fstp
les
dec
and
adc
jge
cs
iret
jge
pop
fdivrl
in
push
jmp
inc
jle
fwait
xchg
push
std
inc
jae
xorb
mov
loope
out
iret
jmp
rorb
imul
sbb
xchg
subb
mov
sub
jnp
jns
mov
mov
xchg
mov
cmc
or
mov
outsb
adc
inc
jno
das
sbb
inc
sub
mov
pusha
cld
enter
xor
cltd
movsb
dec
jns
clc
bndstx
push
data16
loop
xor
leave
mov
je
shll
sub
and
out
inc
xchg
mov
insl
cwtl
jnp
test
mov
mov
mov
scas
test
insb
movsb
insb
jno
and
push
or
xchg
popf
lock
sbb
js
adc
insb
repz
sbb
aas
sbb
adc
pop
xorps
sbb
sarb
fnstcw
or
jp
cmpsb
inc
fwait
out
adc
add
xchg
inc
mov
add
mov
xor
push
pop
je
xchg
lahf
jmp
dec
sub
pushf
frstor
mov
jb
adcl
jns
sub
inc
cmp
jge
sbb
es
and
jl
and
or
lahf
xlat
addr16
aaa
mov
xchg
add
int
aas
jg
add
or
cmp
push
xor
fdivl
or
shlb
shrl
out
inc
sahf
adc
nop
fcmovb
popa
insb
and
stos
fwait
jo
call
clc
mov
pop
fwait
xchg
pop
xchg
cmpsb
fwait
cwtl
push
xchg
test
shlb
sub
sbb
inc
test
fsubrp
adc
ds
jns
dec
pushl
inc
fwait
xchg
std
push
pop
in
faddl
xchg
jb
jl
pop
fsubrl
inc
pop
or
jl
sbb
out
push
cld
lret
aaa
cmp
sub
mov
push
fadds
nop
mov
pop
sbb
sbb
test
popf
hlt
adc
or
in
outsl
jp
sub
std
ds
cmp
aam
pop
js
sbb
xchg
insl
pop
fdivrl
ja
test
push
or
push
out
sub
imul
cmpsl
lahf
sub
cmp
pop
sub
repz
aad
iret
out
in
jle
roll
mov
fmul
lcall
jne
pushf
fadd
mov
pop
add
js
mov
cmp
cmp
outsb
nop
lea
popf
pusha
loop
jae
pusha
daa
pusha
add
andl
ljmp
cltd
and
loop
roll
mov
jl
push
insl
mov
jbe
mov
cli
insl
mov
mov
in
inc
jg
loope
push
repz
sbb
jo
mov
fwait
pop
xchg
xor
mov
int
cmp
jne
data16
shll
rcrb
or
sbb
sub
int
xchg
int3
dec
push
push
mov
dec
add
lock
cmp
scas
sub
int3
out
add
popl
shll
pushf
mov
jns
rolb
ret
sti
adc
stos
mov
int
mov
mov
aad
scas
push
ds
xor
popl
stos
push
pop
imul
inc
scas
clc
roll
fcmovnu
adc
sub
fcomps
jl
sbb
rclb
scas
push
xchg
fwait
clc
mov
gs
xchg
out
rcrb
shr
daa
or
xchg
repz
call
enter
lcall
lea
jl
hlt
dec
cmp
cwtl
inc
xchg
xchg
dec
cmp
sbb
shlb
inc
test
cmc
mov
pop
jnp
and
push
push
pushf
lods
lret
test
pop
dec
adc
lea
xchg
inc
jl
icebp
dec
jle
popa
test
dec
sub
outsb
icebp
xor
xchg
xor
lret
andl
aad
xchg
mov
call
nop
rcr
or
sub
loop
mov
mov
and
xor
into
int
pushf
aad
lcall
jp
ret
jbe
inc
fucomi
xchg
dec
dec
mov
pusha
add
fcomps
lldt
push
aad
fdivrl
and
cli
mov
pop
add
icebp
iret
push
jle
stos
inc
and
adc
jg
xchg
clc
lea
into
popa
jbe
cmc
cmp
add
subl
fwait
sbb
pop
jmp
mov
xchg
rcl
xlat
negb
pop
adc
stos
jmp
addr16
jge
push
imul
and
pop
int3
xchg
cld
movsl
insl
aas
sahf
scas
arpl
sarl
dec
js
outsb
flds
cmp
pushf
pop
outsb
mov
dec
pop
ds
iret
int3
cmp
aad
roll
dec
push
xlat
jns
cmpl
in
negb
push
jmp
or
outsb
inc
lahf
or
mov
push
mov
pop
push
enter
xor
popf
and
adc
aam
mov
imul
and
adc
adc
rorb
incl
incb
les
jno
stos
push
cmp
dec
popf
out
call
js
xor
popf
jno
push
and
out
movsbl
inc
lods
mov
xchg
in
call
xorb
lret
push
aas
pop
add
imul
repz
xor
data16
mov
inc
cltd
aas
mov
mov
pop
and
mov
dec
nop
xchg
cmp
xchg
sbb
xor
lahf
iret
mov
lcall
inc
jle
test
fsubrp
outsb
sbb
leave
pusha
in
in
sbb
fcomp
lods
lock
dec
inc
pop
mov
notb
outsl
mov
jle
icebp
cmpsb
mov
jl
or
sbb
jae
jb
inc
jb
ljmp
cmpsl
jmp
fwait
dec
fildl
jmp
jbe
fdivl
xchg
decb
pop
das
mov
arpl
adc
rcr
jmp
mov
fisttpl
arpl
lcall
cli
filds
jl
aad
repz
jg
sbb
push
pop
push
and
clc
adc
ret
ret
in
call
test
jo
inc
dec
nop
test
or
lea
or
add
sbb
push
mov
mov
xor
jle
fwait
sbb
sub
sbb
xchg
popf
mov
jo
cmpsl
xchg
rcrb
and
adc
js
cmc
adc
pushf
cwtl
lock
push
mov
mov
push
dec
je
jno
pop
jge
insl
test
daa
rcrl
cmp
add
inc
xor
add
stc
fisubl
int
leave
jl
ja
cmp
out
in
or
sub
int
adcl
insl
push
cwtl
fcoms
pushf
aad
cs
sbb
mov
add
into
xchg
xor
ljmp
das
jg
xor
mov
add
stc
dec
das
icebp
es
repz
inc
add
adc
mov
sub
punpckldq
shll
sar
push
es
xchg
jae
inc
in
xchg
push
leave
cmpsl
cmpsb
fwait
out
sub
mov
out
mov
cmp
or
fstpt
push
in
add
jno
and
mov
xor
push
pop
das
js
lock
enter
mov
jbe
jnp
mov
enter
ffreep
pusha
lock
mov
cmp
jecxz
das
pop
mov
in
cmp
aas
mov
push
sbb
clc
lea
mov
pop
test
cmp
out
out
lcall
mov
sub
popf
sbb
and
sbb
into
lret
notb
divb
cli
inc
dec
je
fmull
or
stos
mov
mov
pop
mov
add
ljmp
dec
xchg
mov
sub
dec
fsub
das
add
mov
xor
pop
daa
mov
movsl
das
rcr
or
in
mov
dec
ret
mov
ret
mov
test
or
and
test
inc
stos
lods
xchg
cmp
mov
inc
cmp
das
pop
xchg
jae
pushf
sub
cmp
bound
test
lret
jno
lods
dec
sub
add
inc
push
shl
and
xchg
ret
inc
movsb
imul
pusha
or
pop
nop
adc
xchg
mov
sahf
out
pop
lds
xor
aad
cmpsb
add
and
push
popf
movl
adc
jp
test
test
push
push
icebp
jp
sub
push
ret
sbb
aaa
and
imul
xor
into
test
jae
scas
popa
push
stos
int
cltd
push
out
mov
mov
gs
xor
sbb
mov
ss
push
jge
sub
sub
push
mov
mov
xor
nop
out
pop
jb
adc
data16
std
stos
add
fnstenv
in
cmp
in
popa
subl
add
or
in
shl
ljmp
in
ret
add
mov
mov
inc
ret
jo
mov
push
mov
xchg
popf
cmp
orl
scas
and
push
lahf
jp
insl
mov
rolb
mov
push
lock
or
jns
mov
pop
hlt
inc
aas
xor
aad
add
test
xchg
mov
jp
jns
and
andb
cmp
and
mov
mov
mov
cmp
cwtl
push
orl
ss
ret
push
jl
xchg
jns
scas
sbb
aas
out
sbb
jle
pop
inc
int3
adc
mov
sub
nop
inc
scas
jmp
cmpb
mov
repnz
cltd
dec
out
mov
stc
shll
imul
out
adc
imul
jb
cmp
test
mov
push
or
mov
into
mov
xor
or
cmc
pusha
jno
cmp
or
xchg
cld
mov
sub
jo
lret
lds
mov
notb
mov
repz
cmp
leave
jbe
shlb
xlat
and
mov
test
mov
sarb
and
adc
jg
idivl
es
cmp
fcmovbe
jns
pop
cmpsl
nop
jnp
inc
jns
pushf
loope
cmp
out
bound
inc
fsubs
addb
cmpsl
je
dec
imul
loop
sti
push
lods
ja
mov
mov
cmp
or
fisttps
cltd
and
in
xchg
addl
pop
punpckldq
mov
sub
test
outsb
jge
loopne
jg
inc
mov
sub
and
cmp
ss
test
cs
insl
fldl
inc
lods
dec
dec
mov
test
sub
xor
lret
mov
iret
rcll
ret
cwtl
sbb
sub
insb
mov
xchg
jbe
lea
jb
insl
in
inc
sarb
cmpsl
mov
insb
cmp
sbb
stc
dec
lcall
cmp
mov
cmpsl
and
dec
cmpl
xor
lahf
cmc
cmp
lahf
in
inc
push
cmp
popa
sbb
cmpsb
gs
enter
and
aas
inc
cmp
xchg
dec
mov
xorl
das
sub
fldenv
xor
imulb
sub
dec
mov
rclb
sbb
pushf
inc
pop
jne
nop
adc
cmp
pop
sbb
pop
shll
mov
mov
mov
xor
xor
repz
push
jnp
pop
lock
pop
std
bound
arpl
sbb
das
je
mov
test
insl
pop
sub
mov
jle
inc
andl
call
int
mov
pop
lcall
clc
mov
test
outsb
insl
mov
out
pop
xchg
pop
dec
push
pop
pop
inc
test
xchg
mov
sub
push
mov
inc
popf
sbb
inc
mov
inc
mov
mov
loop
xor
xchg
push
fldl
mov
mov
lea
cmp
aad
pop
lahf
jae
push
pushf
pop
xor
imul
je
outsb
and
insl
scas
fwait
cmpsb
jae
or
mov
mov
rcrb
into
mov
addr16
arpl
cld
fisttpll
sbb
add
cmc
mov
pop
inc
jbe
scas
inc
xchg
mov
iret
out
shl
aam
faddl
sbb
cmpb
cmp
stos
or
mov
loopne
std
xchg
mov
sub
clc
sbb
jecxz
sbb
nop
mov
or
cltd
or
jp
mov
push
xchg
addr16
fwait
popa
mov
mov
sahf
jns
test
pop
fcompl
xchg
cmp
loope
out
in
out
outsb
out
pop
aaa
push
lret
call
ds
xor
pop
sbb
shrl
fidivs
ret
stos
movsb
mov
mov
mov
lret
dec
movsb
push
loope
loope
cmp
inc
cwtl
js
mov
out
mov
sub
xor
pop
mov
xlat
adc
scas
int
or
xor
rcr
xchg
xor
sti
clc
std
inc
mov
pop
js
pushl
pop
negb
aas
rcrl
xchg
outsb
test
pop
sbb
mov
lock
mov
add
xchg
mov
mov
push
ret
dec
scas
enter
inc
xor
and
push
inc
add
dec
jp
push
pop
js
cld
fs
or
int
or
cwtl
rcrl
clc
in
jp
sahf
pop
xchg
mov
div
icebp
pop
sbb
aam
hlt
enter
inc
in
xchg
rcr
je
jns
lcall
adc
mov
scas
jge
fdivr
push
enter
movsl
add
jge
orb
fisubs
test
or
rcl
out
test
cmp
test
leave
xor
aas
jae
and
sub
mov
les
inc
cli
mov
mov
test
les
xchg
jmp
sub
sahf
xchg
int
inc
rcrb
int3
mov
sub
in
lcallw
dec
xchg
xchg
mov
lods
rolb
jb
movsl
adc
mov
das
sbb
cmp
jg
pop
add
and
into
jae
jne
out
bnd
inc
jbe
mov
dec
clc
xchg
mov
cltd
sbb
and
arpl
mov
sbb
lahf
icebp
cmp
push
lcall
lea
and
popf
jno
fldt
inc
popf
adc
inc
fdivrs
or
movb
aam
sub
sbb
sub
push
inc
jno
sbb
aam
scas
pop
leave
int3
jnp
cmp
jno
fisubrl
aam
aaa
aad
and
ja
mov
xchg
jecxz
int
lods
inc
mov
xlat
in
mov
or
adc
inc
pop
repz
fdiv
mov
fdivrl
sub
cmp
stos
push
jmp
dec
pop
sahf
push
mov
std
bnd
pushf
sbb
test
out
mov
fs
stos
ljmp
mov
xchg
lahf
inc
lcall
fistps
dec
ja
imul
sub
movl
and
je
pop
jo
aad
sbb
clc
cmp
sub
add
push
mov
in
mov
rclb
je
sbb
mov
jno
out
repnz
dec
mov
rcrb
or
pop
mov
cwtl
imul
fsubl
inc
test
enter
call
rcrl
call
jp
push
push
fdivs
pop
popa
xchg
dec
in
adc
xorb
push
pushf
mov
jne
fcompl
incl
xchg
xor
inc
sti
ds
jp
arpl
and
push
xor
and
cmp
dec
mov
out
iret
push
inc
fiaddl
xchg
lret
xchg
xchg
mov
icebp
cmp
loopne
mov
jne
lods
jecxz
mov
in
jbe
cmp
sbb
adc
enter
js
adc
stc
pop
push
mov
push
dec
sbb
in
lret
cmp
sub
lahf
in
or
inc
popw
cmc
sar
aad
dec
jmp
and
sbb
ja
scas
loopne
xor
sub
push
xor
mov
and
clc
push
or
cli
fwait
xchg
repz
pop
ds
jo
jae
jmp
and
mov
mov
and
divb
roll
mov
dec
fsubr
ffree
lahf
xlat
outsl
lds
or
mov
rorb
inc
iret
mov
push
push
jb
fcmovnb
jmp
ret
mov
pop
jge
shll
jecxz
sub
inc
and
sub
aam
jmp
aad
dec
ret
das
add
xor
fsub
lods
xor
test
sub
lods
mov
adc
pop
pop
mov
mov
cmp
sbb
loopne
test
ret
push
jg
mov
sub
lock
dec
sub
mov
xor
fwait
dec
popf
bound
or
mov
lods
mov
loopne
lds
dec
jecxz
imul
jmp
sub
lret
push
and
jge
dec
cwtl
test
andb
je
js
insb
cwtl
jnp
fsubs
mov
pushf
push
jmp
test
subl
sbb
jl
aam
int
jle
and
sub
xor
dec
pusha
test
add
pusha
daa
jns
pusha
xor
jnp
jmp
and
pop
xlat
cmc
and
xlat
enter
testl
inc
test
mov
shlb
pop
dec
js
mov
push
in
mov
mull
xchg
popa
push
imul
add
inc
and
scas
and
mov
divl
bound
outsl
insb
adc
in
es
jecxz
enter
sbb
shll
push
xchg
outsl
cmpb
jae,pn
lret
hlt
sbb
js
xor
lea
test
aad
xor
aas
xlat
pop
call
lock
mov
sub
jecxz
cld
fwait
test
pop
jbe
push
dec
aam
adc
insl
pop
stos
jg
cmpl
pop
mov
cmp
lret
sub
sbb
pop
sub
xor
mov
test
test
sbb
mov
push
lods
xor
ds
push
cmp
jb
jns
ret
lea
push
outsl
outsb
pop
aam
repnz
aaa
cli
mov
mov
mov
std
repz
mov
adc
cli
out
push
in
ficoml
push
mov
ret
sub
lret
xchg
jg
aas
xchg
push
dec
jb
jb
js
movsl
lret
jp
lret
inc
imul
cmp
fcoml
fucom
es
addl
negl
push
sbb
testl
jbe
sbb
jle
fs
sbb
xchg
popf
in
inc
mov
adc
push
xchg
inc
jns
int
mov
jnp
xchg
sub
cld
mov
lret
jle
fmuls
adc
aas
mov
idivl
test
mov
xlat
daa
xor
repz
shrb
mov
dec
data16
sti
xchg
jns
popa
jae
mov
add
dec
xorb
lret
add
add
sbb
mov
scas
push
inc
add
inc
lret
jb
daa
jno
mov
rcr
xchg
jecxz
push
push
mov
pop
add
cmp
push
cmp
pop
stos
dec
test
bound
dec
ds
je
pushf
sbb
xor
adc
movsl
ja
inc
pop
jg
fstpl
int
mov
das
ret
or
jl
daa
fdiv
add
pop
addr16
insb
pop
push
imull
out
das
jnp
push
add
mov
mov
jns
mov
or
stc
xchg
daa
and
sub
stos
inc
sbb
outsl
or
punpcklwd
test
aas
jl
pop
dec
fldcw
and
add
imul
cmp
xor
hlt
pop
icebp
inc
and
out
mov
mov
jmp
js
mov
mov
sub
fisubl
mov
pop
or
sub
ljmp
jo
andb
out
push
mov
inc
inc
lods
cli
xchg
sub
sbb
ss
js
lods
jno
inc
stos
dec
pop
pop
fildl
inc
fwait
xor
dec
mov
push
mov
dec
xor
shl
lret
dec
pop
xchg
lock
adc
jne
push
clc
test
mov
inc
shr
sub
pop
in
adc
mov
inc
outsl
cmp
cmc
xor
inc
outsb
enter
rorl
add
aaa
movsl
or
sub
inc
mov
fsubr
add
inc
inc
and
out
inc
sahf
jle
mov
ret
leave
daa
inc
pop
mov
inc
jne
add
icebp
push
sbb
and
lock
and
pop
and
mov
push
xor
xor
outsb
push
imul
loop
xor
lret
xchg
jbe
mov
cmp
pusha
xchg
mov
hlt
int
rclb
cmp
push
mov
orl
fdivrp
or
int
mov
jecxz
pop
shll
mov
fwait
test
iret
repz
inc
ss
insl
imul
pop
mov
movsl
push
push
adc
je
cmp
push
mov
push
mov
jae
aas
and
fdivr
add
mov
xlat
clc
mov
mov
pop
lods
cmp
jg
fcmovne
and
or
sbb
bound
lret
jbe
pop
jmp
insl
and
and
or
or
push
enter
jl
and
dec
adc
stos
mov
jo
dec
pop
mov
jl
out
insb
out
inc
push
hlt
adc
dec
push
clc
sbb
sbb
jae
rclb
mov
push
aaa
adc
cmp
and
xor
mov
arpl
shlb
lods
inc
jle
cmp
popf
xchg
popf
inc
and
in
ficoms
inc
repz
sbb
mov
push
js
andb
cmp
or
xchg
mov
je
inc
push
push
leave
clc
push
mov
xlat
pusha
out
mov
cmc
lods
adc
sti
cmp
inc
push
jmp
jle
fxch
sbb
imul
xor
add
jmp
mov
ffree
pop
cmp
sbb
xor
mov
xchg
sbb
ljmp
gs
lods
in
fisubrl
push
xchg
xor
pop
add
jle
mov
je
mov
data16
inc
push
loopne
mov
lret
imul
or
mov
stc
negl
cmpsb
pop
adc
adc
out
xchg
int
mov
jecxz
sahf
ja
movsl
mov
jb
add
jle
cmpsl
adc
fcomps
jle
push
test
push
add
cs
dec
sbb
or
loope
iret
enter
xor
repnz
pop
add
jle
cmp
hlt
push
cmp
pop
ficomps
push
out
or
bnd
sub
sub
arpl
add
cmp
mov
jge
push
clc
loope
xchg
lcall
sub
adcl
loope
mov
pushf
imul
imul
push
push
mov
iret
ljmp
in
cmc
pop
aaa
dec
mov
gs
aas
dec
mov
aas
andnps
sub
sahf
or
sub
rorb
fists
or
pop
adc
loop
ljmp
sub
cmpsb
popf
inc
nop
xor
mov
pop
pop
repnz
jae
mov
pop
add
xchg
pop
aaa
xor
jno
fistpl
sub
adc
xchg
out
push
arpl
adc
adc
stos
fidivrl
sbb
jg
sbb
leave
mov
sub
sbb
mov
pop
mov
jecxz
fcomps
sub
arpl
jne
gs
rclb
pop
in
xchg
sbb
adc
loopne
fcmovbe
lcall
loopne
cmp
add
in
mov
push
sahf
xor
pusha
pusha
out
cmp
inc
scas
add
rorl
les
dec
pop
sub
pop
xchg
sarb
out
in
divl
fwait
stos
dec
pop
mov
jl
std
jbe
lock
mov
cld
or
cmp
mov
mov
mov
xor
shl
int3
popf
fistpl
cmpsl
rclb
fcmovu
lods
rcrb
mov
jge
popf
xor
leave
arpl
sbb
mov
xchg
ds
insb
gs
lods
mov
test
fnstcw
push
cwtl
mov
ret
sarl
and
subl
push
push
jbe
rolb
out
ds
dec
and
xlat
lods
daa
add
in
jno
call
inc
pusha
insb
orl
jl
imul
pushf
jae
lods
or
mov
pop
in
lea
shlb
xchg
pop
call
in
push
je
dec
adc
add
fidivs
imul
dec
inc
inc
push
inc
adc
notb
cmp
aad
xor
pop
and
push
push
gs
jne
insl
add
std
and
out
push
mov
sti
xor
push
mov
xchg
jge
cs
and
or
jbe
imul
fsubrs
or
sub
sub
inc
lret
fsubl
mov
in
cltd
sub
stos
add
xor
movsl
imul
adc
test
call
add
xchg
push
out
aad
stc
xchg
mov
mov
jl
xchg
hlt
add
movsl
pop
mov
mov
dec
inc
jl
test
xchg
pop
xchg
mov
sub
sub
int3
ja
cltd
add
dec
popa
sbb
lcall
jecxz
pop
push
lahf
jno
sbb
push
push
adc
dec
aaa
mov
and
adc
das
cmp
or
add
mov
icebp
ja
loop
jnp
fcoml
ret
cmpsl
rcl
mov
outsl
test
xchg
in
push
daa
insb
push
ret
cld
stc
cmp
xchg
popa
push
xchg
add
shll
jns
mov
ucomiss
inc
rorb
jbe
out
add
or
das
xor
dec
and
ja
mov
push
sbb
and
jge
mov
imul
test
test
push
xchg
out
add
xorb
pop
lods
loope
es
fsubrl
pushf
movsl
sahf
sahf
ret
dec
fdivs
xor
fmuls
jmp
fsubrs
push
push
ljmp
xchg
ret
out
adc
mov
jnp
in
jge
cltd
mov
scas
lcall
sub
jb
repz
lahf
and
jle
std
arpl
mov
xchg
lahf
push
pop
push
out
jae
dec
push
and
pop
fucomip
lahf
inc
push
or
jmp
iret
xor
xchg
lahf
add
imul
movsb
mov
add
push
xchg
lret
push
push
lods
xor
into
cmp
leave
dec
hlt
lret
xor
jmp
int
xor
jbe
movsb
mov
test
test
mov
jns
cltd
imul
scas
lahf
imul
push
out
stos
mov
loopne
or
sub
inc
fs
fnstenv
pop
jns
mov
sarl
fsubrl
add
dec
call
xchg
mov
nop
ds
lret
mov
bsf
pop
and
scas
cmp
push
dec
jne
mov
loopne
or
dec
jb
bound
adc
ss
repz
fsubrs
and
add
sbb
sbb
stos
cli
out
in
outsb
clc
rclb
sarl
int
ficompl
ds
jb
ret
xchg
mov
lea
stos
mov
int
sti
addl
lds
xchg
jl
jmp
pop
cmp
sbb
notb
mov
mov
fucom
inc
mov
pop
shrb
or
cmpsb
fistpll
int
inc
sub
in
rcll
fsubrl
mov
jecxz
push
mov
or
outsl
jecxz
xchg
dec
sub
sahf
mov
pop
test
in
mov
lock
mov
pusha
mov
push
sub
cltd
push
out
push
sti
data16
dec
fadd
mov
fmuls
addr16
mov
sub
div
sub
dec
or
sub
in
mov
in
sub
and
and
add
out
in
popa
int
inc
sar
addr16
lock
shlb
gs
add
jne
cmp
addr16
test
mov
add
fsub
add
inc
stos
jg
add
push
lret
mov
mov
loop
jmp
add
jecxz
xor
mov
out
js
ficompl
gs
pop
rolb
ret
sbb
mov
fsts
nop
sub
pop
lret
jbe
test
mov
jns
add
icebp
push
and
xchg
push
subb
push
jmp
call
inc
lahf
aas
js
and
out
pushf
sti
subb
shrb
sti
insl
inc
pushf
sbb
push
jp
int3
imul
sbb
jp
stos
cwtl
mov
ja
ds
cmp
clc
scas
call
jmp
aam
xchg
cmp
cmp
add
testb
mov
pop
nop
lcall
nop
and
mov
cld
shl
add
inc
mov
inc
jl
jns
jns
aam
lahf
adc
pushf
es
in
popa
std
push
jecxz
loop
sub
insl
jmp
lret
sub
fildl
int3
mov
arpl
push
push
mov
mov
fisubl
mov
xchg
imul
adc
jp
adc
lock
hlt
mov
fsubr
add
add
mov
pop
loope
testb
pop
mov
sub
in
mov
cmpsb
mov
mov
and
pop
subb
jne
nop
inc
and
push
jo
cs
imul
jl
mov
add
mov
xlat
movb
sub
icebp
adc
inc
les
icebp
dec
pop
int3
push
fsubl
inc
xor
xchg
mov
les
xchg
nop
push
jnp
xchg
mov
xor
mov
push
cmc
pop
std
mov
jp
sti
pop
pop
add
ljmp
popa
add
out
cmp
pop
xchg
mov
mov
andl
lret
ret
xchg
cmp
sbb
mov
sti
pop
leave
dec
ds
iret
inc
je
std
leave
jge
jns
data16
imul
add
pop
inc
jno
or
into
out
lods
push
ret
mov
push
ret
sarl
fstpl
jle
hlt
add
and
fsub
sahf
ljmp
popa
cmp
adc
lds
mov
inc
insl
mov
out
xchg
cwtl
dec
sar
inc
add
std
mov
inc
or
lret
ds
flds
mov
mov
int
das
pop
out
mov
clc
ret
jle
push
shlb
lds
in
notl
push
notb
ds
xchg
pop
shll
pop
sbb
popf
mov
cltd
mov
jmp
push
ret
shrb
pop
loopne
cli
pop
inc
sbb
jg
rcrb
lea
xor
cli
jmp
sub
insl
sti
out
cmp
sub
and
and
aam
lcall
aam
and
popa
or
ret
jo
inc
push
jb
adcl
addl
cmpl
push
fsubrl
test
lcall
dec
push
pop
jg
je
sahf
mov
lods
jb
cmp
push
ds
cwtl
fstpl
imul
or
and
pop
jae
mov
sbb
mov
bound
fwait
jecxz
add
inc
fwait
add
sarl
or
shrl
sub
add
cmp
cmp
jae
push
repnz
jb
dec
xchg
lret
adc
and
inc
icebp
dec
out
adc
stc
mov
cmp
cmc
mov
push
push
sub
fs
jge
lahf
xchg
test
in
lcall
stos
lods
push
xchg
cli
shll
adc
inc
sub
repnz
adc
ljmp
mov
and
loope
cmpsl
add
imul
inc
jecxz
xchg
or
jg
arpl
sub
inc
testb
imul
aaa
adc
mov
adc
test
mov
movsb
sub
test
add
xor
sbb
push
rcrl
lret
jecxz
loopne
loopne
push
in
dec
dec
out
xchg
mov
lods
pushf
sbb
xor
and
mov
sbb
mov
inc
out
testl
das
loope
es
add
and
fstps
adc
jne
dec
in
adcb
test
das
negb
and
sbb
sub
push
push
adcb
popa
mov
mov
inc
mov
popa
sti
hlt
nop
xor
lods
mov
and
mov
mov
insl
mov
sbb
pop
fwait
mov
sub
mov
pusha
xlat
scas
rorb
ror
sahf
in
mov
pop
das
out
cmp
lods
fwait
mov
adc
jns
inc
rolb
push
push
std
jge
aad
aas
mov
unpckhps
or
pop
add
adc
scas
mov
xor
fmuls
pop
xchg
mov
dec
cmpsb
into
pop
cmp
and
sub
sub
xorl
enter
jge
aam
stos
cmpb
inc
sbb
push
xor
insb
lods
or
lahf
add
add
jb
sbb
sub
mov
adc
xchg
or
xchg
xchg
ja
std
lret
cmc
fists
jae
cmp
xor
movsb
inc
push
aaa
and
ds
xchg
add
mov
xorl
mov
inc
rclb
int3
cwtl
arpl
and
ss
xchg
or
in
sbb
mov
and
add
pop
dec
rcll
test
std
inc
inc
sub
loopne
mov
cmp
cmpl
pop
sub
pop
sbb
femms
test
les
lea
popa
lret
ja
sbbl
mov
into
mov
fsubrl
leave
stos
cmp
pop
pushf
mov
in
ljmp
inc
sbb
push
out
in
mov
repnz
ret
push
pop
ss
out
jge
cmp
mov
std
pusha
pop
mov
sbb
mov
out
and
sbb
sub
mov
lods
shr
rolb
pop
icebp
mov
jne
stc
pop
add
sbb
or
lret
or
clc
dec
jno
add
leave
xchg
cmpb
xchg
jmp
js
lds
mov
dec
sbb
in
xlat
mov
in
jo
daa
mov
jae
or
adc
dec
dec
sub
mov
out
and
or
and
xor
mov
sub
adc
lods
icebp
push
cmp
dec
imul
xchg
add
dec
adc
test
mov
in
pushf
outsb
cmpsb
xor
push
jge
ss
test
push
mov
mov
sub
pop
cltd
enter
stc
in
sub
outsl
push
in
mov
and
iret
in
adc
and
dec
jnp
cs
lret
xor
sub
cld
imulb
lock
sahf
shll
mov
int
pop
gs
xchg
outsl
or
xchg
stc
inc
fdivl
je
cld
hlt
dec
insb
lods
setg
test
jo
das
pop
sti
subl
test
or
in
push
sbb
jns
xchg
imul
inc
mov
xchg
mov
xchg
pop
repnz
xlat
mov
jge
xchg
xor
cmp
sub
dec
jecxz
sti
das
clc
xchg
or
xlat
jae
jg
push
dec
inc
out
jge
in
and
mov
dec
es
cmp
mov
lds
lret
add
cld
push
xchg
jb
fadds
cmp
jle
inc
lods
and
jb
dec
add
popf
iret
xchg
mov
fisubrs
je
mov
ds
inc
enter
xor
negl
add
adc
jmp
and
mov
dec
aaa
xor
cltd
jbe
call
pop
in
arpl
out
jb
icebp
and
jns
and
jmp
sbbb
sbb
xlat
les
leave
test
repnz
loope
sbb
cmp
jl
aaa
inc
jae
adc
loop
cs
pop
test
sub
dec
fs
leave
push
cld
xchg
xlat
mov
and
mov
popf
mov
mov
inc
mov
xor
imul
inc
mov
or
test
std
pushf
push
mov
jg
push
scas
pop
xor
sbb
push
fdiv
mov
inc
jnp
lock
aam
pop
outsb
popf
jae
cmp
lahf
stos
jnp
scas
inc
push
movsb
mov
inc
dec
jo
ret
in
or
mull
test
into
mov
fwait
dec
jae
lcall
or
fldl2e
pop
fcoml
mov
cwtl
sbb
pop
rolb
push
lret
sub
push
add
cld
or
sbb
mov
xchg
lcall
fcmovbe
mov
fs
iret
xchg
xchg
lahf
ljmp
xlat
jne
stc
xchg
in
push
xorb
mov
xchg
or
mov
stc
jnp
cmpsl
add
pop
addr16
mov
or
lret
popf
mov
out
and
daa
mov
ret
ds
fwait
adc
cmp
mov
mov
iret
cltd
sbb
pop
aas
jns
sahf
xchg
mov
xchg
add
dec
sbb
sbb
sub
xor
aas
movsl
sub
imul
lret
es
pop
lret
xchg
andl
inc
insb
adc
cltd
mov
cmpsl
lods
push
inc
dec
push
shl
fimull
lds
inc
cmp
jg
into
mov
cmp
mov
jl
lahf
stos
mov
out
push
sub
cmp
mov
mov
xchg
bound
stos
out
into
push
sti
clc
das
in
push
imul
mov
xor
xchg
test
inc
out
xlat
pop
jg
xchg
xor
bound
adcl
pop
mov
dec
pop
pop
cs
testb
cli
mov
outsb
stc
inc
imul
mov
pop
bound
pop
adc
mov
mov
int
cmpsl
jbe
or
or
mov
add
aad
pop
xor
clc
xor
test
gs
stc
jo
xchg
dec
sub
out
add
divb
test
xor
hlt
fstps
pop
mov
sub
and
ret
repnz
mov
jp
rcrb
adc
and
out
outsl
ret
xchg
jno,pn
lods
loopne
js
adc
mov
pushf
lahf
cmp
bound
subl
xchg
pop
sbb
ds
push
jne
inc
push
mov
je
mov
sub
pop
inc
push
ret
lret
fbstp
pop
jno
popf
vandps
inc
xchg
outsl
push
pop
xor
fiaddl
dec
cmp
ds
mov
pop
dec
add
mov
test
cli
lret
fidivrl
jl
xchg
outsb
shr
fldenv
popa
mov
cmp
out
rolb
push
mov
xor
outsl
mov
xchg
arpl
jbe
pop
inc
pop
das
andb
adc
and
jge
push
arpl
xchg
push
mov
sub
sahf
or
or
and
adc
push
scas
fst
pop
cmp
ret
and
add
pop
cs
call
xor
subl
jge
in
jg
pop
and
jecxz
test
jne
push
jo
movsl
fldl
push
enter
push
call
outsl
popa
mov
push
jl
dec
inc
cmpsl
fsubs
enter
push
ret
inc
xchg
loopne
and
inc
xchg
mov
out
cmp
repnz
sti
lahf
xchg
or
fiadds
pusha
jmp
lahf
cli
fbld
test
cmp
inc
fcompl
cmp
gs
adc
test
pop
sarb
les
sub
mov
test
hlt
and
hlt
pop
dec
sbb
jae
or
lret
sub
mov
inc
out
inc
lret
xchg
xor
fists
xor
cmp
js
out
xor
jl
daa
mov
pushf
xchg
inc
xchg
mov
in
js
scas
les
sbb
sub
jl
fnsave
mov
jl
insl
lods
imul
lock
cmp
daa
repz
mov
aad
insl
fdivs
fwait
mov
out
imul
and
fwait
mov
mov
cld
stos
enter
shrb
xor
pushf
enter
ljmp
test
and
mov
fsubrl
fisttpl
and
aaa
jo
shlb
sbb
in
ja
cli
insl
xchg
pusha
cmpsb
or
mov
out
movl
cld
subb
pusha
cmp
shll
mov
cmp
push
stc
and
arpl
jg
pop
mov
inc
sub
sbb
mov
bound
gs
cmp
dec
frstor
shr
inc
ss
aad
or
mov
pop
in
ror
stos
loop
faddl
das
mov
enter
dec
addb
push
mov
pop
mov
jmp
aaa
mov
or
xorl
repnz
cmp
test
aad
pop
add
mov
jno
es
xchg
pushf
sahf
sahf
mov
movsl
das
sub
leave
mov
sbb
mov
out
gs
imul
or
dec
orl
jns
neg
add
and
push
in
shlb
jle
jo,pn
pop
ss
test
adc
mov
in
xchg
mov
stc
pop
sarb
sbb
mov
in
popf
bound
push
or
sahf
jne
jmp
je
in
in
pushf
fldl
dec
adc
add
dec
stos
mov
pop
dec
dec
arpl
add
lret
popf
pop
les
add
xchg
push
push
aam
cmpsl
push
mov
adc
fcmovu
sbb
jmp
pop
add
movl
lahf
insb
mov
xchg
mov
sbb
mov
cmp
mov
insl
ds
jns
cmp
adc
sbb
pop
sub
dec
mov
inc
cmp
mov
xor
or
pop
bound
xchg
mov
je
jo
stos
and
or
push
dec
ror
fs
sbb
cld
xchg
ljmp
pop
inc
inc
lock
daa
lret
shlb
mov
fs
add
adc
movsl
mov
insb
and
pusha
add
sti
cld
push
inc
rcrl
xor
daa
sbb
cmp
in
push
dec
jge
fsubs
fadd
adc
jns
adc
popa
or
xchg
pop
mov
adc
imul
cmc
fimull
mov
das
roll
cmp
in
push
insb
enter
sbb
scas
add
xchg
xchg
xchg
test
lcall
loop
mov
dec
xchg
es
jne
or
xor
cmp
insb
and
sbb
mov
stc
rorb
xchg
dec
fdivs
inc
pop
movsb
mov
sub
sbb
ss
stos
pop
subl
ret
test
stc
scas
movsl
iret
outsb
cld
inc
repz
and
dec
mov
les
cld
ljmp
mov
inc
mov
or
in
push
xor
mov
lret
mov
jns
js
div
imul
lds
repnz
mov
dec
sub
add
sub
fisttpll
repz
jecxz
jnp
add
and
pop
pusha
out
mov
mov
das
and
outsw
inc
cld
jno
das
outsb
pusha
repz
cmovle
pushl
decl
fbstp
mov
jmp
jecxz
in
xor
fisttpll
fs
inc
jne
sub
popf
ud1
scas
xchg
in
in
in
nop
cmpsb
and
push
xor
add
dec
rorl
cmp
daa
cs
adc
xchg
cmp
pop
js
out
xchg
iret
push
mov
xchg
lds
fmul
mov
icebp
push
pop
and
lret
fmull
jnp
iret
ljmp
add
dec
sub
jg
addb
pop
std
in
scas
xchg
pop
fwait
popa
xor
bound
lcall
mov
dec
xchg
aaa
push
mov
or
jnp
data16
mov
jb
sbb
fstpt
jle
jle
nop
ret
jne
lret
xor
in
mov
add
inc
inc
int3
sub
xor
aaa
jne
enter
inc
ds
nop
push
jg
push
inc
in
in
push
jmp
imul
pop
add
popa
movsb
cmpb
insb
dec
pop
ljmp
ss
cmp
jge
sub
jl
aaa
cmp
jbe
push
xchg
mov
xor
mov
dec
jecxz
std
or
adc
call
and
es
pop
icebp
push
bound
shlb
inc
lods
push
scas
and
loopne
mov
mov
mov
push
jae
jns
in
outsl
sbb
add
les
aam
mov
pusha
add
jecxz
jo
insb
sub
push
arpl
pushf
and
cmp
andb
inc
adc
cltd
pop
test
or
insb
add
out
lea
pop
out
pop
add
test
in
xor
mov
pop
es
imul
and
arpl
mov
xchg
and
xor
test
inc
pop
push
pop
cli
sbb
jno
pop
and
test
xchg
adc
outsl
cmp
xor
mov
test
jle
mov
mov
pop
xchg
aas
mov
sub
mov
push
fcmovb
pop
inc
ret
clc
cli
das
gs
add
cmp
push
push
jb
xchg
in
loopne
btr
xchg
mov
inc
xor
rorl
imul
or
pusha
aad
in
insb
mov
sahf
inc
push
mov
movsb
leave
xor
daa
sub
fsubs
dec
push
xchg
sub
pop
mov
sub
inc
push
and
mov
push
aaa
rol
out
lret
inc
sub
cmp
pop
sub
dec
stc
out
push
cmp
mov
jae
sahf
out
jae
mull
sti
sub
jg
sub
std
inc
mov
add
sti
sbb
test
icebp
adc
fdiv
hlt
mov
mov
hlt
or
mov
add
pop
pop
inc
pop
mov
and
jb
out
jl
push
out
xchg
mov
sahf
mov
mov
jecxz
jns
lcall
inc
pushf
mov
dec
rcrb
clc
arpl
mov
pop
addr16
roll
sub
hlt
scas
inc
in
pop
les
imul
xor
dec
fdivl
scas
out
test
ret
sub
movsl
jne
repz
mov
mov
imul
or
mov
or
pop
test
mov
sar
adcb
sbb
add
shlb
jo
and
enter
adc
jecxz
push
cmpsl
adc
xor
aad
std
stos
mov
sbb
cli
int
adc
in
push
lods
mov
xlat
aaa
lods
cmpsl
enter
dec
sub
ljmp
jb
int
dec
mov
nop
pushf
xor
dec
pop
fistps
movsb
clc
cmp
mov
sub
sbb
nop
mov
jae
adc
jae
lods
mulb
cmp
mov
and
ds
xchg
cmp
insb
imul
std
xlat
inc
lret
mov
dec
cwtl
mov
cmp
mov
mov
cmp
nop
das
mov
in
repnz
cmp
std
cmp
inc
add
scas
mov
std
dec
lock
aaa
test
test
push
into
rcrb
or
mov
out
gs
lret
mov
fnstsw
xchg
dec
aad
adc
xchg
or
sahf
das
into
and
inc
fprem
repnz
jl
pop
outsl
clc
in
jl
push
aam
push
imul
adc
shlb
hlt
loope
mov
stc
and
mov
test
and
out
fisubrl
cmp
es
out
fldl
inc
add
push
add
jp
sbb
jbe
pop
jno
jbe
into
cmp
cmp
outsb
in
cli
mov
add
inc
lods
mov
adc
pusha
xchg
fmull
and
es
inc
push
mov
js
bound
sbb
cmp
xchg
or
dec
ret
xor
mov
add
jp
jg
dec
leave
pushf
mov
std
jbe
sbb
aaa
in
fiadds
iret
movsl
or
xor
mov
inc
mov
xor
es
out
flds
mov
push
xor
int3
mov
hlt
sbb
adc
jge
cli
ja
sbb
push
adc
arpl
push
inc
mov
lret
pop
nop
stc
push
fcmovnbe
jmp
mov
cmp
cld
xchg
or
icebp
movsb
cmp
lods
gs
out
and
out
and
cmp
repnz
gs
push
dec
call
popa
popf
negl
xor
inc
notb
sar
push
lods
jbe
sub
and
pushl
pop
push
sbbl
pop
loope
mov
inc
dec
jns
xchg
jo
mov
cmpsb
push
lret
or
xchg
cmp
mov
dec
mov
add
das
cmp
or
out
cwtl
inc
xor
lret
sbb
jmp
loope
clc
andb
cs
cli
shl
dec
jns
lods
dec
push
sub
imul
sub
sbb
jb
mov
push
or
sbb
pop
dec
filds
and
push
js
push
icebp
stos
pop
sub
sub
push
leave
jmp
out
inc
sarb
dec
jmp
sub
lahf
adc
jno
lock
iret
lds
add
dec
adc
xchg
bound
inc
sub
std
imul
mov
inc
sub
sbb
cmp
outsw
test
adc
jle
popa
stos
dec
jns
aad
mov
rcr
inc
jnp
andb
adc
mov
sub
roll
mov
adc
fwait
daa
sbb
push
outsl
in
inc
adc
add
into
pushf
adc
adc
and
dec
push
test
xchg
lods
popa
adc
push
sahf
sbb
mov
and
or
lea
jbe
in
lds
hlt
into
jmp
adc
add
push
push
sti
dec
outsl
fs
mov
adc
mov
pop
add
pop
pop
ljmp
mov
dec
xchg
into
pop
lret
dec
pop
push
mov
fisttps
lock
icebp
iret
sahf
xlat
fistl
add
inc
mov
xlat
or
xchg
pop
imull
push
stos
add
shrl
in
faddl
mov
loope
cmpsl
repnz
hlt
mov
sub
inc
mov
jmp
jb
sbb
shl
mov
push
push
lods
inc
iret
and
xor
cmc
test
ret
lea
mov
adc
or
xor
mov
xchg
rorb
popl
jno
mov
dec
mov
les
sub
xor
outsl
cmp
fsubs
xor
add
pop
pop
pop
ret
stos
cmp
pushf
movsb
ficoml
mov
fdivr
and
fistpll
dec
loopne
mov
xchg
imul
xor
popf
fidivs
pop
dec
add
outsb
fcomp
mov
out
mov
adc
xor
hlt
mov
sti
test
test
jp
pop
lsl
xor
and
xchg
nop
adc
add
aam
mov
cltd
aad
mov
jge
add
pop
sub
test
inc
bound
stos
fisubl
jb
insb
icebp
inc
negl
and
test
cld
fmulp
push
mov
xchg
imul
dec
dec
or
xchg
xchg
stos
cmp
mov
jp
rolb
add
mov
out
in
mov
aaa
sub
rclb
xor
int
pop
sub
lods
ret
movsb
adc
ret
testl
xchg
cmp
jg
sbb
aas
push
sti
push
xor
mulb
push
pusha
int3
cmc
mov
and
iret
push
push
sbb
repnz
fnstenv
jecxz
jecxz
and
aas
jp
movsl
xchg
jle
les
push
ljmp
inc
push
out
fists
dec
mov
push
jo
adc
pushf
lret
and
insb
pop
jo
cmp
mov
roll
cmc
xor
mov
sub
lods
or
repz
insb
dec
pop
das
jnp
pop
or
jecxz
aam
adc
cltd
stos
movl
ss
mov
pop
ret
cmovne
popa
lock
push
jmp
out
ss
daa
test
xchg
ret
jg
sub
mov
push
sub
ds
add
mov
jle
push
pop
lahf
jp
mov
out
add
aam
add
mov
add
mov
mov
out
popf
push
cli
sbb
aad
mov
test
mov
scas
mov
jbe
mov
xchg
iret
mov
in
jnp
sub
subl
lods
jbe
push
popa
xchg
pushf
xor
adc
adc
loope
push
in
ret
stos
jns
fisubl
or
ret
ds
xchg
call
xor
jbe
shlb
ret
pop
int
mov
int
pop
pusha
mov
xchg
sub
cmp
out
mov
mov
sub
ror
dec
dec
pop
inc
push
sbb
scas
lret
dec
adc
jp
dec
lret
and
incl
push
cmp
dec
popf
dec
mov
fisubrl
test
mov
mov
jo
xor
test
adc
mov
es
pop
or
cld
ror
inc
insl
fwait
lret
or
aam
ljmp
xchg
pop
repz
sub
outsl
sub
call
sub
es
xchg
adc
adc
outsb
xchg
dec
push
inc
js
into
mov
mov
movsl
roll
xor
mov
fsubl
out
sub
or
inc
jl
push
cli
mov
les
xchg
fisubrl
leave
rolb
dec
shll
adc
and
ss
mov
add
or
mov
int
push
test
aaa
mov
cmpsb
push
dec
leave
lods
in
fcomps
or
notl
les
mov
inc
jb
nop
pop
pop
mov
sbb
mul
jnp
pop
arpl
lret
aam
test
sbbl
xchg
iret
out
orl
fs
dec
adc
fs
or
lods
in
mov
sbb
push
js
fists
cmp
std
stc
in
fdiv
sbb
lret
out
cmpl
or
rcll
aam
lahf
xor
movsb
cs
cmp
stos
push
inc
mov
add
inc
add
and
cmp
mov
and
xchg
mov
xor
add
ja
clc
sti
mov
ss
ss
scas
out
lret
bound
loop
nop
adc
lahf
aas
pop
mov
rolb
adc
sub
inc
in
jae
lods
sub
jne
sub
xor
repnz
nop
cmp
subl
xchg
mov
je
mov
bnd
adc
sub
sub
add
xor
xchg
or
ljmp
insb
mov
sbb
jle
inc
inc
mov
roll
aas
int
mov
ljmp
in
push
mov
or
mov
lods
pop
pop
push
cmc
inc
aam
inc
lret
adc
repnz
jo
push
in
in
clc
scas
xchg
pop
arpl
add
leave
sti
mov
repz
sahf
jb
lcall
cmp
sub
push
in
fsts
test
loopne
enter
psrlw
cli
data16
out
pushf
ss
pop
out
daa
mov
dec
mov
call
hlt
push
mov
and
std
xor
jo
jb
lea
mov
sub
pop
clc
cmp
lret
arpl
mov
xor
or
call
fidivrl
cmp
outsb
push
or
push
xchg
mov
pop
jle
outsb
stos
ds
push
mov
inc
mov
inc
jbe
or
call
lret
mov
loopne
jecxz
scas
in
pop
sbb
cmp
push
leave
mov
aaa
jo
sub
shlb
mov
xchg
cmp
pop
mov
pop
mov
std
andnps
push
push
shlb
mul
test
int
pop
in
fcoml
mov
sbb
sbb
inc
arpl
cli
mov
das
push
adc
mov
fstp
dec
mov
fmuls
fwait
jmp
inc
popf
shlb
cs
push
jle
mulb
lret
adc
sub
lcall
ss
push
vmovd
mov
dec
scas
sbb
pop
pop
aad
fisubs
cs
jae,pn
mov
push
lock
and
paddw
cmp
lods
ret
int3
sub
mov
xor
lret
inc
jp
fistps
fsts
int
cmp
push
mov
and
mov
or
inc
dec
in
jnp
and
shlb
push
xor
mov
shll
imul
jno
daa
jnp
mov
fisubrs
das
dec
aas
mov
mov
fildll
sub
lahf
xchg
mov
push
insl
sbbb
jnp
leave
sarl
leave
add
insl
pop
or
or
shll
sarb
adc
stos
mov
sbbl
mov
and
lret
and
sbb
fcompl
fstpl
xchg
imull
shl
cwtl
pop
inc
and
mov
pop
mov
bound
jecxz
nop
pushf
lds
dec
push
imul
sti
sbb
les
adc
xchg
add
repz
pusha
movsb
mov
jp
in
lret
clc
xor
adc
pop
std
popf
fsub
mov
pop
outsb
mov
add
inc
iret
loopne
push
outsb
jmp
and
push
in
mov
out
mov
sub
inc
mov
add
nop
loope
xchg
or
cmpsl
add
mov
insl
pop
fsub
fimuls
add
jns
stc
pop
repnz
jnp
outsb
xlat
pop
and
mov
bound
es
and
stos
xchg
jecxz
add
ja
ss
mov
stc
sbb
loope
lods
dec
and
dec
cmp
inc
sti
mov
and
mov
adc
rcll
pop
mov
imul
cmp
adc
int
lret
outsb
lods
xor
mov
and
add
dec
nop
add
and
iret
pop
lcall
mov
sbb
or
sbb
lea
inc
and
mov
jmp
fbstp
xor
or
push
popa
sub
sar
mov
fs
sbb
in
pop
jmp
add
ljmp
or
sbb
jns
xchg
jo
lahf
mov
sub
xor
mov
mov
lods
mov
pop
and
ja
pop
cltd
push
adc
stos
loop
mov
pusha
mov
lret
dec
adc
cli
insl
imul
sub
sbb
jmp
xchg
pop
insb
mov
out
mov
movb
jnp
outsb
scas
xchg
adc
mov
or
jo
nop
fwait
jl
inc
js
loopne
fisttpll
push
add
jae
rorl
repnz
inc
cmp
sub
mov
or
jno
pop
rcr
in
rcrl
push
cmp
mov
arpl
cmc
rclb
inc
cli
push
xchg
dec
lahf
mov
add
jno
mov
jb
mov
arpl
test
popa
or
in
sbb
inc
push
cmp
xchg
je
mov
and
add
shl
adc
sbb
push
test
xor
test
outsb
cltd
fsubrp
pop
xor
stos
pop
push
xchg
in
lret
cs
dec
xor
insb
fstpl
jl
nop
adc
loop
je
cmpsl
fnstenv
pop
fisttpll
ret
mov
scas
idivl
or
lahf
add
mov
popa
jmp
icebp
es
ret
mov
ja
mov
inc
in
fwait
not
cmp
imul
cmpsl
pop
gs
nop
nop
stc
jecxz
mov
sub
hlt
xchg
jns
jmp
jl
es
push
test
insb
jb
hlt
pusha
mov
xor
rolb
xor
outsb
pop
cmp
test
mov
lret
aaa
xor
push
sbb
cmpsb
adcl
nop
es
add
mov
mov
lahf
pop
test
push
or
jne
sub
push
popl
mov
scas
inc
cmp
cs
jbe
popf
inc
sbb
dec
xchg
inc
in
fcoms
shrl
jge
sub
scas
lahf
jp
dec
fcmovb
or
xchg
notb
ljmp
jae
dec
incl
popa
pop
mov
or
mov
into
shll
and
loope
jns
mov
leave
aas
movsl
and
push
imul
xor
in
pop
mov
and
scas
mov
cmp
mov
push
popf
mov
mov
cwtl
dec
add
mov
jbe
pop
jbe
pop
cwtl
gs
hlt
adc
in
inc
sbb
mull
lods
mov
inc
mov
and
aas
btr
lea
jle
je
mov
rolb
addr16
push
mov
pop
js
pop
mov
xor
arpl
aas
push
test
mov
dec
sbb
add
cmp
shrb
mov
pop
test
cmpsb
sub
imul
sub
ja
into
jg
sub
and
in
lea
nop
mov
cli
loope
call
loop
sarb
cli
or
movsl
sbb
std
push
pop
xchg
push
jecxz
lods
lds
push
loopne
inc
inc
push
ljmp
and
push
sub
fstl
clc
xchg
or
mov
and
movsb
cmp
sub
xchg
aam
out
outsb
push
xor
ja
xchg
or
loop
test
adc
data16
fldcw
ds
fs
adc
add
das
pop
mov
cltd
and
shll
adc
dec
and
andl
fbld
jb
adc
xor
mov
les
mov
fs
dec
mov
lea
scas
pop
mov
cmp
cmc
pop
sbb
xchg
adc
pop
sbb
push
pop
mov
out
jne
or
xor
xchg
inc
sbb
pop
add
test
dec
add
addr16
ds
sub
mov
or
xor
xor
or
aam
icebp
cli
mov
and
iret
lret
addr16
mov
or
mov
push
fstp
cmc
pop
and
cmp
call
js
shlb
notl
fiaddl
mov
add
adc
sbb
push
jne
ret
push
jle
mov
pop
mov
in
and
sbb
pop
inc
loop
or
aad
addl
popf
pop
test
push
jbe
test
inc
or
bnd
adc
hlt
test
fldt
adc
sbb
int
dec
or
pop
repz
mov
cmpsl
inc
ss
inc
sbb
mov
xchg
aam
pop
hlt
icebp
add
hlt
xchg
pusha
sbb
mov
or
or
loope
dec
push
leave
orb
sub
cmpsb
inc
decl
lret
daa
cmp
leave
mov
rolb
outsb
sbb
add
lret
lcall
ja
stos
scas
cmpsb
popf
int3
dec
jnp
or
mov
xor
or
jge
sub
hlt
push
cmp
jge
test
outsl
aas
cmp
pop
sub
cmp
lcall
jecxz
aas
and
jns
jle
jno
mov
in
add
mov
bound
push
mov
jb,pt
mov
daa
lret
push
aam
or
mov
mov
adc
fwait
xor
ret
int
ret
jle
out
dec
jb
fimuls
adc
xchg
scas
mov
call
in
rol
sbb
dec
mov
cmp
aas
insb
aas
cli
adc
pop
sahf
pop
and
inc
mov
sbb
sti
int3
inc
loop
loope
lea
rolb
gs
jmp
ret
call
ficomps
imul
rolb
stc
ljmp
sahf
popf
rep
lea
jp
xchg
inc
mov
imul
fistps
inc
inc
test
xchg
xlat
ljmp
jg
mov
data16
lods
xor
ficompl
sahf
lcall
sbb
cmp
xchg
js
xor
das
mov
mov
mov
push
dec
push
xchg
and
out
and
outsl
rol
or
data16
pop
mov
movsb
mov
push
push
aaa
push
test
and
mov
pop
xor
imul
iret
jb
jecxz
push
jae
out
mov
scas
lea
jne
mov
lea
ja
xor
pop
push
mov
xor
shlb
or
shrl
mov
pop
sahf
enter
lea
xor
loop
and
or
cmp
loopne
sub
push
fstps
fwait
lods
push
adc
mov
push
push
les
dec
xlat
pop
es
icebp
add
or
andl
push
lea
lahf
shr
sbbb
xchg
subb
es
or
lahf
sub
cld
icebp
inc
out
xchg
psrlq
and
dec
adc
sub
xor
fs
ja
lcall
leave
or
mov
cmpsb
in
imulb
pushw
push
popa
push
push
sar
leave
cwtl
dec
bound
push
push
neg
jb
addr16
dec
xor
push
ret
sub
int3
stos
mov
dec
movsl
xchg
pop
call
clc
dec
test
pop
xor
cmp
and
sbb
inc
inc
inc
cmc
dec
test
mov
insl
mov
xlat
sub
shlw
loope
sbb
icebp
insl
in
mov
adc
mov
ror
daa
pusha
imul
aaa
out
push
stos
insb
mov
inc
dec
xchg
mov
insb
out
cltd
xchg
js
rolb
or
dec
xchg
test
xchg
clc
nop
je
inc
lds
ja
fsub
cmp
pop
dec
push
or
sti
push
in
ret
adc
and
imul
cld
mov
dec
fstpt
xlat
jnp
icebp
push
std
fcoml
test
bound
dec
ret
inc
faddl
outsl
test
mov
sti
rclb
or
shll
mov
mov
jb
repz
test
and
ja
mov
pop
aas
jno
mov
mov
xchg
cli
add
mov
aaa
xchg
stos
push
push
sti
sub
lret
and
in
xchg
add
mov
shlb
push
xor
pop
inc
rcll
jge
jno
subb
jl
xlat
icebp
mov
fldl
pop
icebp
repnz
push
lret
out
mov
mov
cld
rorl
sub
mov
into
push
aad
ja
mov
adc
aas
and
lea
adc
mov
mov
and
out
jl
cmp
pop
mov
push
mov
mov
out
nop
out
adc
or
cmp
mov
ss
mov
pop
loopne
dec
jns
and
adc
add
fucom
xchg
mov
dec
sbb
aam
mov
inc
arpl
push
sub
shlb
xor
ljmp
xlat
inc
int3
xor
sahf
or
pop
push
shlb
inc
hlt
add
xor
cli
mov
cld
ficompl
leave
in
xchg
ljmp
sarl
rclb
mov
enter
fcompl
and
ficomps
ret
push
mov
adc
lods
outsl
orl
push
insb
stos
or
outsb
dec
sbb
in
mov
fwait
ret
add
push
and
fsubs
shrb
test
inc
sbb
lahf
sbb
inc
and
or
mov
test
pop
sbb
adc
iret
movsl
fucomi
or
inc
out
bound
fstl
pop
add
ret
imul
ss
jge
and
mov
testl
mov
ret
lret
cmp
and
cmpsl
rcrb
jmp
adcb
and
test
push
jle
lds
sub
cmp
sub
icebp
cld
lcall
stos
cmc
adc
std
dec
jo
imul
test
pop
cli
add
popf
ljmp
repz
xor
test
fnsave
xchg
insb
sbb
pushf
sbb
dec
pop
xor
fwait
sti
sub
sahf
mov
lret
rorl
mov
and
icebp
push
lods
cld
sbb
jmp
push
daa
jle
xchg
xor
fcompl
inc
arpl
add
cltd
mov
lods
xchg
popf
adc
cmp
loope
jmp
jns
pop
fstp
js
and
stos
lret
pop
mov
cmp
mov
lods
mov
sub
and
movsb
push
or
aas
dec
inc
sbb
outsb
adc
xchg
xchg
insl
cmp
lods
inc
mov
sbb
xchg
add
mov
and
xor
jle
xor
push
xchg
frstor
orl
jmp
shll
add
mov
sbb
mov
test
int3
movl
and
and
mov
scas
adc
xor
lcall
xlat
nop
fistl
enter
xor
jae
mov
lods
xlat
mov
cmp
mov
or
cwtl
fcomps
and
xchg
or
xchg
call
sbb
pop
xchg
mov
js
cld
js
jno
jbe
sub
out
cmp
or
adc
pushf
mov
in
sahf
leave
stos
inc
fldl
mov
insb
add
cmp
cmpsl
cli
push
add
add
xor
mov
pop
arpl
add
out
sub
jnp
adc
in
and
cmp
aad
iret
adc
or
scas
inc
pop
hlt
insb
xor
in
cmp
movsb
xor
imul
jle
into
cmpl
fcomps
inc
int
out
sbb
dec
rclb
test
or
jecxz
iret
ds
call
nop
gs
push
ljmp
and
mov
fsubs
push
inc
repz
xor
cmpsb
ret
push
imul
jne
push
fildll
mov
sbb
add
js
dec
sbb
bound
xor
fiadds
push
loope
jecxz
mov
add
cli
add
lret
lods
mov
repz
je
adc
mov
dec
dec
push
fs
shlb
pop
fisubrl
outsl
mov
loop
jbe
inc
xchg
adc
adc
add
mov
adc
push
mov
mov
and
or
lret
inc
lahf
mov
movsb
pop
add
or
sub
xor
add
cmp
jae
shll
fs
xor
rcrb
imul
mov
xor
in
shlb
adc
pop
or
int3
mov
lods
daa
xchg
and
dec
xchg
rcr
fmulp
fidivrl
in
repnz
je
imul
pop
int3
stos
sub
cli
rcrb
test
pusha
and
aad
or
sbb
mov
jb
js
sbb
xor
jmp
fnstenv
out
lods
mov
xor
pop
cmp
test
cs
filds
rcl
adc
fldcw
add
cltd
imul
pop
fwait
rolb
jg
add
xchg
adc
pop
or
add
lret
xchg
jmp
push
das
cmp
ljmp
jb
lret
pop
cmc
aas
and
sub
sarb
flds
mov
je
aaa
pop
lret
or
ljmp
add
sbb
out
dec
xchg
mov
imul
ljmp
push
test
call
or
lods
aas
add
mov
je
mov
pop
push
pop
jo
mov
inc
movsl
movsb
insl
insb
mov
out
xchg
jl
mov
repz
sub
mov
outsb
mov
out
pop
frstor
sbb
dec
stos
out
dec
ds
jo
sub
mov
rcrb
loop
pusha
cmp
fwait
data16
dec
vmovaps
sub
daa
jl
in
ficoml
in
pop
pusha
dec
jns
xchg
sub
enter
movsb
je
jl
mov
xchg
call
add
jns
cmpsl
pop
push
repz
mov
pop
sub
jg
addb
jp
mov
mov
or
jle
out
inc
out
cmp
push
loop
leave
pushf
out
scas
aam
and
mov
jg
pop
mov
xacquire
sbb
lret
add
cltd
imul
inc
or
xlat
into
mov
sbb
popa
jl
xor
pushf
out
adc
fstps
push
lcall
jns
addb
sub
cltd
les
sbb
ret
dec
pop
hlt
inc
pushf
int
inc
mov
cmp
pop
dec
and
pop
roll
adc
aaa
ds
push
sti
sbb
js
adc
push
das
fdivl
and
sbb
es
xlat
jp
mov
lods
adc
jno
and
or
cmp
das
lret
mov
rorl
fmulp
popa
inc
out
es
adc
jle
popa
inc
inc
loop
jo
cs
push
cld
leave
ja
fisttps
int
test
and
scas
dec
pop
lret
dec
insb
in
push
jge
dec
xor
lods
pop
cmc
leave
pop
mov
shll
pusha
das
and
xlat
xchg
xor
call
xchg
hlt
mov
stos
xor
out
push
mov
lea
and
es
andl
or
divb
shr
cwtl
out
add
adc
mov
dec
cmp
not
pop
cmpsl
jo
test
mov
sti
in
addr16
xchg
cltd
fs
sbb
cmp
cmc
call
imul
or
sub
inc
dec
iret
cmp
and
inc
out
mov
mov
dec
leave
jne
inc
push
rcl
repnz
inc
adc
xchg
sub
or
roll
sbb
sub
xchg
push
mov
jns
xor
adc
ret
xor
or
lea
enter
outsl
push
in
popf
sbb
mov
mov
and
out
ljmp
test
mov
pop
push
rclb
lea
pop
and
stos
fs
pushf
imull
and
lods
cmc
movsl
arpl
sub
cmpsb
fcompl
push
je
push
adc
push
test
jne
leave
dec
add
sub
add
or
pcmpeqd
test
add
dec
out
dec
dec
rcll
leave
stos
mov
clc
clc
cmpsb
sub
inc
out
lret
sti
out
cmp
inc
in
mov
in
add
ret
rorl
in
das
jle
mov
stos
inc
lea
dec
dec
stos
adc
pop
mov
or
mov
in
cmpl
pusha
sbb
out
outsb
aas
cwtl
mov
and
into
add
dec
mov
in
inc
push
hlt
sbb
jae
mov
add
sub
fs
fldl
in
sbb
mov
pop
aaa
xchg
imul
ds
out
mov
icebp
and
movsb
pop
cwtl
leave
imul
leave
shlb
xchg
jecxz
fisubrl
pop
adc
cmpb
ret
dec
pusha
ljmp
lods
mov
fildll
xor
jns
iret
adc
in
addr16
add
scas
or
negb
movsl
popa
mov
movsb
mov
inc
pop
jbe
pop
mov
and
jecxz
xchg
nop
hlt
and
jmp
dec
cmp
jns
sbb
mov
pop
dec
icebp
jp
or
xor
les
pusha
mov
mov
ret
out
test
and
xchg
dec
mov
xor
or
andb
inc
rclb
mov
negb
pop
cmp
push
mov
jnp
sti
out
add
nop
scas
and
ret
int
movsl
sbb
loope
mov
lods
stc
imul
je
fs
aam
outsl
cld
js
sbb
cmpsb
das
stos
inc
xchg
repnz
mov
les
xor
jp
mov
mov
dec
addr16
add
push
xchg
or
iret
test
pusha
icebp
dec
fs
sti
data16
shl
sub
or
les
mov
daa
jae
mov
adc
lret
jbe
ja
ret
push
fcoml
add
add
or
mov
inc
iret
sbb
mov
dec
pop
outsb
sub
and
mov
push
push
out
sbb
pusha
inc
imul
movsb
data16
xor
or
je
loope
sub
stos
lods
sti
mov
out
jae
pushf
jg
ret
adc
dec
lock
gs
add
push
adc
mov
ja
jecxz
cs
dec
jge
mov
jbe
cs
mov
push
ds
inc
repz
ror
fwait
sbb
mov
jo
mov
popf
cmp
popf
je
push
movups
into
or
out
adc
and
add
imul
repnz
sub
lock
jge
pop
mov
insl
aam
jnp
in
aas
cld
fnsave
push
mov
aas
lret
inc
leave
pop
fimuls
jb
mov
pushf
xchg
mov
and
mov
add
cmpsl
mov
enter
jmp
leave
std
inc
mov
out
out
xorb
sbb
gs
mov
xchg
ret
xchg
mov
stos
mov
cmp
aad
inc
jle
outsl
mov
xchg
cmpsl
and
stos
mov
std
mov
sbb
das
jb
or
adc
jp
ds
call
movsl
xchg
lds
sub
push
fstpt
jle
mov
inc
cmpl
fwait
push
xchg
fidivrl
imul
neg
sbb
shlb
stos
sub
int3
xchg
pop
arpl
enter
test
pop
jns
pop
inc
negb
iret
std
pop
lcall
subb
sbb
pop
fidivrl
pop
jbe
gs
stc
pop
xor
in
test
pop
mov
add
mov
xor
sbbl
shld
insb
dec
fisttps
lret
mov
in
inc
outsl
sub
xor
pusha
sahf
inc
add
out
xlat
mov
xchg
nop
dec
ds
mov
jbe
cmp
pop
push
shl
dec
sbb
mov
scas
inc
or
jmp
es
lahf
mov
shrb
in
lahf
xor
js
insl
and
jno
inc
cmpsl
fucom
sbb
les
push
cmp
add
mov
mov
in
xor
pop
jmp
popa
dec
sbb
icebp
imul
icebp
sbb
or
and
mov
cmp
faddp
inc
pop
adcb
add
clc
cmp
xor
test
sub
nop
test
xor
add
mov
loopne
sbb
push
out
xlat
mov
jmp
pop
push
push
fs
arpl
dec
jmp
cmpb
fildl
lret
movsl
lret
mov
inc
mov
cs
in
cmp
aam
repnz
rclb
dec
adc
cli
fisubl
daa
mov
mov
jmp
hlt
pop
adc
push
dec
cmp
dec
jns
ja
mov
dec
add
xchg
push
mov
sub
xchg
jl
push
movsb
dec
xor
mov
in
inc
addb
push
fst
repz
xchg
out
jg
in
cmp
add
jno
inc
xchg
pop
daa
xchg
inc
movsl
ret
clc
aad
sub
dec
repz
out
ja
inc
fwait
jle
fcomps
insb
xchg
pop
repz
adc
sbb
loopne
fdivr
cmpsb
shlb
mov
push
ljmp
adc
and
pop
push
stos
mov
mov
push
lock
call
xorb
cld
adc
inc
mov
aas
and
cwtl
popa
scas
flds
ret
jbe
popa
and
or
andl
mov
push
pop
jnp
push
push
xchg
rol
js
popa
fstpt
mov
sbb
scas
mov
sub
clc
out
xor
into
sar
mov
call
mov
test
or
icebp
add
enter
mov
out
addr16
lods
cmpb
test
test
lods
add
cs
std
mov
sbb
mov
fs
aad
js
pop
fsubp
ret
sbb
add
mov
stos
movsb
xchg
mov
aam
lods
lea
or
ss
popf
inc
sar
xor
out
pop
sti
insb
cmpsl
cwtl
mov
fmul
nop
std
dec
aam
movsb
out
mov
jecxz
cmpsb
mov
sub
add
clc
in
xor
adc
add
repz
inc
mov
pushf
fs
pushf
mov
push
xor
pop
gs
ret
movsb
out
mov
std
mov
lahf
scas
jns
aam
pusha
inc
xor
pop
cli
sahf
pop
mov
cwtl
pop
pop
push
mov
icebp
int3
lds
or
push
add
pop
adc
mov
aam
sub
mov
mov
test
adc
mov
mov
pushf
jnp
es
jno
and
mov
aad
aas
ljmp
addr16
call
inc
ljmp
push
ud0
push
mov
and
add
subl
dec
push
mov
jl
test
popa
cmp
xchg
mov
sub
test
xor
cmpsb
push
mov
call
inc
cmc
or
or
stos
cwtl
adc
mov
fwait
test
xchg
out
mov
mov
popf
cmpb
mov
stos
dec
mov
test
jns
lods
fisubs
push
push
int3
xor
test
mov
adc
outsb
les
pop
xor
jecxz
mov
iret
push
cli
mov
sbb
repnz
sub
repnz
seta
sub
out
cmp
hlt
xchg
push
lret
jb
sbb
jge
pop
dec
add
insl
cltd
add
lea
and
int3
sbb
pop
mov
xchg
jp
cs
and
xchg
mov
cmp
fidivs
jo
sbb
and
inc
jns
pop
dec
incb
mov
mov
lods
or
enter
fidivs
inc
out
sub
icebp
pop
cmp
in
jno
fmuls
dec
sub
inc
add
repnz
xchg
push
in
lods
xor
push
jp
sbb
js
ret
sbb
xor
adc
push
out
bound
dec
ffreep
xchg
lds
fadd
cmp
lds
mov
and
jne
mov
lret
sbb
sbb
cli
sub
jae
mov
test
mov
fdivrs
loop
test
scas
sahf
movsl
cltd
rcr
mov
inc
popa
cli
jne
sub
mov
add
lock
mov
repnz
leave
cmp
pop
sbb
sar
rcr
shlb
sub
sub
adc
arpl
fnsave
ljmp
ss
sbb
stos
icebp
shrl
stos
mov
lahf
dec
loope
inc
loope
jp
push
dec
inc
test
shll
nop
xorb
xor
xor
lret
enter
or
sbb
pop
pop
cmp
push
xor
ret
sub
cmc
mov
aaa
xchg
sbb
or
mov
hlt
xor
out
aam
lods
cmc
cmpb
loop
xchg
xor
ja
jg
aam
cltd
mulb
not
mov
hlt
jnp
mov
insl
lds
scas
adc
mov
out
ds
lret
insl
push
push
xchg
inc
sar
sbb
icebp
das
hlt
fdivp
in
jge
shll
cs
jmp
mov
sahf
mov
sub
xchg
jl,pn
insl
dec
test
shrb
adc
jbe
push
inc
or
lds
icebp
ficomps
mov
test
xor
ret
loopne
test
pop
and
jle
icebp
jnp
jg
cmp
adc
sub
inc
push
stos
cmp
mov
loopne
sub
hlt
aam
jge
outsl
cli
add
xchg
dec
nop
popf
cmp
pop
cmpsl
popf
icebp
inc
inc
jbe
ja
test
jecxz
mov
xchg
mov
imul
jp
sub
push
stos
lahf
add
inc
inc
cmp
push
push
adc
clc
mov
into
loop
adc
push
mov
repz
sbb
xchg
jb,pn
jnp
cwtl
in
ja
cmp
into
das
and
cmpl
sahf
and
mov
aaa
mov
fldt
jae
fs
xor
je
lds
jecxz
mov
jge
sub
test
add
xor
xlat
cwtl
sti
stos
sahf
pushf
aam
imul
out
xchg
pop
jbe
inc
inc
ds
iret
or
lret
rcll
js
push
xchg
pop
js
in
pop
adc
xor
mov
dec
cmp
or
je
sub
popf
jl
or
push
loop
movsl
imul
push
mov
mov
outsb
pusha
push
jo
shll
mov
cmpsl
shrb
adc
lock
mov
jnp
fldenv
sbb
sahf
fsubl
sbb
out
cmp
inc
jmp
out
pop
lret
push
jl
sub
fistps
mov
mov
pop
jne
stos
pop
jns
nop
inc
adc
xchg
mov
pop
mov
inc
jo
inc
push
add
cld
push
pop
dec
and
aaa
mov
fcomip
mov
sti
mov
mov
jae
and
loopne
or
pop
test
pop
and
ret
push
data16
ficompl
ficomps
sbb
mov
xor
pushf
mov
cmp
rolb
add
js
insb
jge
lods
adc
outsb
push
sub
xchg
jno
jmp
sbbb
loop
lea
sbb
mov
repz
cld
xchg
std
cmpsl
out
pop
jns
mov
scas
and
inc
fcompl
rol
inc
inc
jns
lret
and
xor
sbb
daa
mov
jno
mov
cmpsb
mov
mov
shrb
movsb
js
push
rcrl
mov
jmp
push
cmp
push
cmp
xlat
fwait
loopne
in
cld
cmp
aaa
aaa
pusha
mov
pop
inc
sbb
loope
int3
ja
mov
adc
stos
fidivl
lret
jle
je
mov
andl
js
inc
iret
insb
movsb
mov
mov
push
xor
and
dec
jno
cli
mov
cmp
cmc
xchg
sub
or
or
inc
lret
sti
pop
lcall
dec
dec
dec
js
popf
stos
lods
xchg
loope
sub
inc
es
out
jg
dec
xchg
jns
inc
sub
aas
push
xchg
inc
testl
roll
jecxz
sbb
pop
fcmovnbe
int
inc
outsb
pop
mov
jge
insb
jl
fs
loope
mov
push
xor
push
add
daa
push
lods
push
inc
jmp
sub
sbb
negl
insb
sbb
jmp
call
jge
xchg
cmp
sub
jge
gs
push
je
lahf
add
jmp
adc
clc
jg
xchg
cli
mov
in
call
jge
ret
lock
cmp
subl
add
push
sub
jmp
dec
pop
mov
mov
cmp
and
dec
test
mov
leave
or
popa
mov
xchg
ljmp
sbb
mov
lret
and
adc
addr16
in
pop
mov
int
sbb
add
push
push
and
add
shlb
into
push
mov
mov
out
in
repnz
and
pop
push
stos
lahf
xor
xor
push
adc
adc
rorb
pop
das
fimull
cmpb
mov
inc
sbb
xor
sbb
xchg
addb
sub
adc
andl
and
mov
lret
xchg
push
fcoml
dec
jbe
aam
jno
add
sub
or
sub
cwtl
mov
jecxz
push
jg
mov
inc
out
xor
lcall
ret
xchg
fwait
sahf
pop
out
xchg
iret
xor
or
loope
add
push
and
setbe
xlat
dec
sub
outsl
or
das
movsb
mov
popf
lahf
mov
or
lds
insb
bound
mov
add
aas
loopne
and
out
imul
mov
xchg
stos
sahf
xor
sbb
inc
cmp
mov
fisubrs
jno
lds
xor
jne
std
fimuls
enter
fidivs
ja
jge
cmp
in
ret
dec
lock
data16
sti
je
repz
js
pop
jl
insb
push
xor
adc
dec
insb
sub
mov
add
aad
mov
cli
add
dec
push
hlt
cwtl
inc
rorl
xchg
lods
aam
mov
cld
xchg
xchg
rclb
dec
mov
or
mov
pop
fnstcw
push
fmull
fwait
push
pop
mov
sbb
leave
xchg
push
bound
pushf
pop
mov
sbb
enter
ss
repnz
pop
cmpb
or
data16
mov
cli
dec
insl
mov
repz
repnz
mov
xchg
fdivs
cmp
adc
aaa
pop
adc
cs
add
mov
imul
xchg
cs
call
jnp
pop
xor
xchg
loopne
and
aas
xchg
push
xchg
icebp
imul
add
pop
cmp
dec
aaa
sbb
in
fxsave
pop
enter
mov
clc
fstpl
push
in
call
xor
lods
insb
cs
gs
cs
ja
in
mov
inc
in
xor
lret
data16
cli
cs
icebp
and
cli
in
xorl
insl
shr
aad
mov
lahf
and
inc
es
fdivr
xchg
aas
push
xchg
loopne
sti
cmp
and
movb
popa
aas
andnps
sbb
push
sub
xchg
adc
pop
dec
stos
jl
jnp
push
xor
xor
mov
pop
xchg
add
add
ds
loop
mov
xor
xor
pop
popf
ja
xor
mov
cmpsb
xchg
mov
dec
mov
jge
dec
cli
shl
shr
pop
dec
pop
inc
jns
jle
jecxz
lods
inc
mov
mov
movsl
mov
addr16
mov
xchg
mov
adcb
jp
push
jmp
mov
dec
int
lods
das
das
inc
insb
test
int
ljmp
outsb
push
test
add
xchg
and
xor
addr16
mov
js
mov
aad
mulb
mov
jmp
push
jbe
dec
movsb
movntq
out
jmp
movsl
mov
push
jle
xchg
jno
dec
cmp
xor
fiadds
out
aas
stc
xchg
mov
xor
fistpll
scas
iret
dec
mov
and
add
add
popf
dec
push
mov
sub
pop
vmovntpd
aam
in
gs
pop
dec
add
xor
fwait
xor
add
and
stc
in
or
lea
pop
mov
in
sahf
adc
cmc
enter
test
inc
idivb
and
loopne
incb
jmp
jo
loop
sbb
and
mov
xlat
ret
hlt
fprem
bound
pop
mov
jno
inc
lea
mov
sub
mov
into
test
ror
repz
or
dec
insl
cwtl
in
repz
data16
xchg
or
dec
cmpsl
cmp
jnp
jge
jmp
dec
or
mov
mov
mov
xor
cltd
dec
pop
adc
popf
sub
cld
push
jmp
push
pop
push
ficompl
push
aas
cmpsb
les
pusha
mov
pop
icebp
inc
adc
das
ds
xchg
lret
lcall
sub
push
push
push
mov
cmp
push
inc
outsl
sbb
cli
outsb
aas
jg
or
xchg
out
in
add
jnp
jns
movsb
iret
std
adc
fidivrl
and
add
cmc
mov
js
data16
dec
cld
lods
mov
mov
sbb
into
sub
adc
push
fldenv
fs
mov
les
sbb
cmc
int
fdivrl
out
xchg
out
ss
test
add
xadd
cmp
xlat
gs
mov
mov
movsl
int
rclb
dec
ret
jle
fmuls
loopne
adc
ljmp
sbb
call
call
jle
fidivrs
adc
loop
mov
jmp
pop
movsl
in
xchg
pop
xor
or
pop
into
in
nop
outsl
dec
inc
hlt
mov
dec
mov
lods
add
mov
jbe
imul
xor
cld
movsb
inc
sbb
xchg
push
mov
out
loopne
xchg
mov
xchg
cli
leave
and
das
cmp
in
adc
cmp
mov
and
filds
add
sti
mov
incl
pop
shrl
into
sub
cmp
sub
mov
daa
pop
mov
clc
in
and
cwtl
push
mov
sub
fwait
adc
inc
pop
and
sbb
idivl
stos
sbb
mov
push
sub
lods
out
divl
mov
mov
inc
adc
out
dec
or
add
les
lret
popa
es
xor
fcoms
cmp
jnp
movl
pop
pop
inc
xor
push
dec
pop
movsl
test
loope
dec
ljmp
mov
xor
out
mov
pop
adc
sub
jb
test
fidivrs
int
ret
fisubrl
out
mov
enter
cltd
push
loop
shrb
sbb
jl
xchg
and
into
cld
cmpsl
mov
cltd
adc
sbb
into
dec
pop
sahf
mov
inc
subb
inc
mov
push
inc
pop
and
jmp
cmpsb
out
sahf
outsl
shll
add
lods
mov
adc
movsl
or
lea
mov
jb
or
cmpsl
cwtl
sahf
jecxz
cwtl
rolb
seto
fcmovnb
dec
fwait
or
jae
inc
sbb
test
repz
mov
rclb
xchg
and
stos
xchg
jg
subl
data16
and
or
test
xor
nop
mov
stc
in
sub
pop
dec
andl
push
dec
sub
rcrb
pop
xchg
repnz
jl
cmpsb
mov
ja
movsl
inc
cmp
mov
jmp
sub
leave
mov
add
rorb
mov
xlat
adc
lds
into
xchg
pop
adc
ds
and
add
adc
xchg
ds
pop
sbb
jb
mov
mov
jecxz
cmp
fucomp
sbb
ja
cmp
stos
pop
xor
cltd
mov
loope
inc
stos
sub
repz
icebp
jne
cli
ds
in
pop
cmpsl
pop
leave
inc
popl
insb
ds
mov
fcompl
pop
dec
and
adc
cmpsb
xchg
stc
mov
and
and
mov
pushf
xchg
stc
scas
repnz
jge
ficoms
lea
sbb
sub
push
add
mov
ret
icebp
mov
inc
in
adc
and
dec
fs
dec
in
mov
repnz
mov
fcomi
out
lahf
jmp
test
aas
xchg
adc
cld
dec
lcall
xor
add
lret
adc
sbb
lods
xlat
lret
call
aas
test
ret
loope
pop
push
and
mov
mov
clc
and
mov
shll
sub
insb
pop
addr16
pop
sub
mov
cmp
jb
cmc
mov
mov
add
in
mov
outsb
pop
inc
sbb
out
out
in
test
jmp
push
inc
divl
fmuls
bound
test
es
inc
jo
jle
xchg
in
aas
hlt
popf
sub
sub
faddl
pop
and
jae
inc
and
xchg
or
xor
push
push
orl
dec
push
cld
mov
and
mov
dec
outsb
int
sub
shrb
aas
scas
fwait
shr
add
adc
out
rcr
rclb
pushf
jecxz
imul
inc
into
lods
lret
jge
jmp
jmp
in
stc
gs
insb
fistpl
jg
fcoms
sub
jp
jns
fildl
pop
jae
mov
invd
rcll
loopne
or
sbb
lods
mov
fimull
lods
sub
pop
mov
xchg
les
push
dec
adc
inc
mov
cmpsb
fs
lret
mov
dec
inc
stos
mov
xchg
pop
ret
inc
jns
mov
ret
les
mov
repnz
xlat
or
rcrb
mov
leave
mov
frstor
adc
popa
cmp
ficompl
sbb
mov
mov
jl
adc
xchg
and
fiaddl
inc
notb
loope
mov
jp
mov
ljmp
daa
jge
add
pop
cmp
adc
in
fdiv
adc
jo
out
and
aam
dec
out
push
jl
test
jbe
jg
cmpsb
jae
dec
jns
adc
push
insl
xor
xor
gs
xor
inc
hlt
push
into
push
es
aad
xchg
repnz
jmp
ljmp
pop
xchg
xchg
sub
insb
push
adc
jae
insb
roll
shrl
sbb
mov
jno
iret
fsts
xor
cld
in
sbb
xchg
int3
mov
and
enter
shlb
mov
pusha
or
mov
xchg
and
addr16
idivl
mov
out
into
mov
subl
adc
ds
adc
shl
das
fsubl
jns
arpl
pusha
scas
inc
gs
jno
sahf
dec
shll
aam
cmpl
cmp
xchg
inc
dec
jl
jge
mov
pop
and
pusha
sub
sbb
fucomip
shll
push
adc
adc
js
push
and
cmpsl
push
jo
pop
mov
sub
out
popf
aaa
insb
adc
js
lds
outsb
das
lar
xchg
adc
cwtl
fs
jb
adc
insl
rcl
mov
shll
sahf
xchg
jns
cmp
dec
lea
iret
push
mov
xor
jb
outsl
repz
inc
mov
pusha
mov
stos
fcomps
mov
xchg
or
inc
fmull
dec
stos
addr16
inc
sub
add
je
sti
push
in
add
push
cmp
push
stos
inc
push
adc
repnz
push
jb
mov
pop
aam
mov
daa
mov
xchg
ret
adc
adc
xor
mov
inc
lods
xchg
arpl
lret
inc
push
das
push
xchg
jne
jg
pop
in
adc
dec
dec
pop
pop
ds
sbb
sbb
sub
in
xchg
or
sbb
inc
jle
insl
pop
fdivp
jb
dec
lds
or
mov
inc
mov
cs
xchg
cwtd
or
sbb
movsb
xor
out
arpl
js
bound
movsb
add
or
adc
and
sbb
jo
sbb
dec
jecxz
mov
xchg
repnz
mov
fistpll
ret
mov
insb
inc
sahf
and
and
out
mov
jmp
jae
add
inc
dec
gs
stos
ljmp
xor
rclb
pop
cmp
xchg
out
and
push
or
cmc
popa
jp
in
xor
mov
pop
jg
mov
inc
repz
clc
cmc
aaa
jb
subl
jg
pop
ja
adc
aad
mov
es
add
in
scas
cmp
inc
add
popf
mov
add
shl
inc
sahf
rep
cmpsb
cwtl
jbe
push
mov
loop
out
das
push
imull
mov
in
cmc
jmp
and
pop
sub
test
mov
xor
jle
jae
sti
scas
inc
xchg
into
xchg
push
in
pushf
outsb
in
gs
in
and
subl
sbb
ret
shlb
imul
xlat
or
adc
sbb
mov
call
pop
enter
dec
popf
xchg
and
push
dec
add
mov
push
inc
in
push
fildll
push
loop
adc
rcll
jge
pop
dec
popf
mov
test
arpl
and
xchg
mov
loopne
sbb
fldt
or
jge
test
adc
mov
popl
cmpsb
adc
je
lea
dec
imul
mov
arpl
std
imul
sub
or
rcrb
dec
dec
mov
pusha
mov
adc
addr16
mov
addb
jecxz
pop
jmp
fidivs
and
into
or
popf
std
fisubl
sbb
test
pop
push
fldenv
lock
push
inc
xor
icebp
jle
insb
push
ss
xor
mov
push
jo
mov
push
dec
test
push
jo
or
xchg
andb
inc
mov
push
dec
xor
fstl
pushf
inc
out
les
pop
subb
push
xlat
adc
xchg
push
inc
ss
jnp
and
aam
jle
cmp
xchg
icebp
sbb
dec
fwait
arpl
push
scas
pop
js
sub
jle
fwait
lret
xchg
ret
int
cmpsl
popa
sbb
loope
mov
jecxz
xlat
test
inc
outsb
les
clc
test
ss
shll
mov
cmp
pop
push
dec
cmp
push
js
daa
mov
insl
ja
inc
add
pop
in
jno
std
pushf
stc
add
je
mov
cltd
pop
stos
dec
push
leave
test
cmp
loop
adc
push
jb
and
lock
jb
int3
jae
adcl
rcll
xchg
pop
sti
lcall
repnz
mov
dec
add
inc
xlat
test
mov
int
inc
stos
mov
adc
das
adc
fwait
fisttpl
and
mov
dec
mov
nop
add
fs
lcall
sub
mov
or
jle
sti
pop
movsb
add
cmp
sbb
cwtl
push
mov
das
sub
outsl
cli
loop
cmp
repz
lods
push
and
les
lahf
js
stos
xor
pop
push
add
insb
jnp
xchg
icebp
mov
into
inc
shl
popf
xor
test
popf
test
shrl
pop
mov
push
loope
dec
xor
fildll
or
int
cmp
rcrl
jg
sub
mov
ds
and
mov
push
mov
push
cmp
fildl
orl
arpl
rclb
dec
int3
lret
mov
push
aaa
shll
movsl
mov
dec
fisttpl
cmp
xor
out
int
add
add
dec
mov
adc
mov
jmp
int
lcall
sub
inc
popf
addl
out
idivl
pop
cmpsl
iret
or
imul
cmpl
sub
sarl
bound
adc
cmp
aaa
or
dec
add
sets
mov
push
roll
mov
mov
cmpsl
jge
push
pop
pushf
lret
lahf
lods
aad
inc
hlt
cmp
in
jb
sbbl
push
xchg
adc
mov
pop
adc
xor
adc
test
icebp
xor
sbb
xor
enter
mov
pushf
xor
xchg
imul
mov
test
sbb
shlb
dec
lds
imul
sub
insl
sbb
filds
mov
inc
cld
cmc
imull
jl
ljmp
in
ret
pop
out
jmp
push
icebp
repnz
sbb
jl
push
xchg
mov
dec
cmp
repnz
cmpsb
imul
mov
loopne
sub
inc
sub
push
jmp
mov
popf
add
and
pusha
dec
dec
repnz
popf
pop
jbe
hlt
outsl
dec
fmulp
jp
das
ljmp
cmp
and
bound
cmc
pop
mov
cmp
in
add
push
push
push
jge
push
add
scas
dec
mov
mov
and
jl
lds
adc
pop
cmp
insl
aad
cmp
movb
filds
mov
sbb
xchg
ss
and
mov
stos
dec
dec
movb
mov
or
aad
idivb
mov
push
sar
cmp
mov
insl
imul
out
add
pop
add
jo
add
mov
add
sti
aaa
imul
mov
ficompl
adc
push
and
push
dec
mov
pop
mov
icebp
jge
hlt
jno
dec
inc
jg
dec
jae
test
iret
cmpsb
and
cmpsb
lds
xchg
and
jge
push
xor
xor
cmpsl
jns
ljmp
jle
lret
pop
push
movsl
push
mov
ds
sahf
imul
or
and
sub
insl
sub
mov
aaa
inc
aas
mov
jae
fisubs
daa
mov
push
out
in
rcll
es
jo
jmp
dec
sbb
cmp
mov
jmp
inc
xchg
mov
fcomps
xchg
pop
sarl
pop
rcll
lahf
bound
mov
ficoms
xor
loope
jne
repnz
and
sub
sar
js
subb
and
pop
stos
add
xchg
xchg
or
roll
or
lcall
frstor
cld
out
mov
xor
mov
aaa
es
push
in
test
faddl
loop
insb
sub
std
pushf
pop
pop
lahf
call
cmp
sbbl
inc
pop
jne
insb
ret
cmpsl
inc
and
sbb
lret
cmp
mov
mov
mov
gs
jg
sub
loope
mov
mov
xchg
cmpsb
pop
mov
fs
mov
sbb
into
sbb
cmp
push
scas
scas
lods
pop
stc
sbb
pop
xchg
inc
xor
xor
cmp
bound
lret
and
ret
aas
or
ja
mov
add
dec
rolb
adc
arpl
ficoml
popf
shll
movsl
pop
jmp
xchg
sub
mov
sarb
dec
test
adc
ja
hlt
jae
adc
add
mov
pusha
and
xchg
xchg
sub
cmpb
fistpl
dec
fbld
stos
cmp
repz
fcomps
push
mov
xor
fdivrp
adc
add
add
cs
or
shll
imul
das
inc
out
fisubs
shll
loopne
cmpl
add
daa
xor
dec
and
nop
jge
and
mov
lahf
xlat
test
fisubs
push
add
add
jge
out
inc
idivl
xchg
negb
out
sub
stos
rolb
jge
or
adc
out
sti
mov
xor
mov
pusha
or
popa
cmp
sbb
cwtl
fisubl
lret
test
adc
jg
shl
nop
dec
inc
cwtl
sbb
sbb
xchg
cmp
inc
ret
das
sub
mov
call
imul
ds
addb
add
pop
mov
xor
mov
sub
push
dec
cmpsb
xor
je
das
and
outsb
mov
and
popf
inc
jbe
xchg
ljmp
sub
cmp
mov
jne
cwtl
cmp
xchg
pop
jg
xchg
or
cltd
out
mov
pop
fldl
je
mov
jae
sbb
data16
out
sbb
push
mov
mov
mov
repz
repnz
pop
push
and
sbb
test
mov
mov
in
popf
cmpl
out
shll
xchg
addl
mov
mov
push
sbb
insl
pop
push
cmp
lods
adc
cmc
jg
adc
js
cmpsb
push
mov
out
jmp
jmp
js
mov
arpl
pop
sbb
out
insl
or
push
mov
rcll
cmp
cmp
lret
icebp
sbb
and
pop
int3
cmp
cmp
mov
inc
fiaddl
pop
xor
test
xchg
orl
jmp
or
mov
dec
cli
push
sub
in
or
mov
iret
push
or
inc
mov
and
jmp
pop
cs
xor
cmp
lcall
pop
fildl
cmp
xchg
sbb
push
mov
mov
sbb
notb
aas
or
cltd
add
loop
mov
sbb
push
lret
in
pop
sub
xorl
icebp
rorl
xlat
stos
xchg
in
leave
adc
rorl
pop
ljmp
rcr
test
sbb
jle
inc
jecxz
loop
test
pop
adc
fstps
mov
movsb
gs
lock
mov
mov
and
cmpsb
test
fists
xchg
mov
add
gs
cmpsl
fstl
into
popa
jge
scas
fldenv
mov
lea
xchg
xor
mov
dec
sub
jg
ja
clc
hlt
or
mov
sub
add
shlb
lahf
adc
inc
jbe
pop
or
bound
inc
lcall
add
nop
out
add
mov
in
lea
sbb
and
push
pop
ficoml
cli
movsl
jo
xchg
test
mov
adc
ljmp
cli
fwait
call
cmp
testl
repz
call
mov
xlat
xchg
cmp
jl
psllw
or
xchg
mov
jmp
shll
daa
jg
dec
jnp
mov
mov
xchg
out
pop
scas
push
mov
lods
movb
popf
mov
xlat
test
cmp
sbb
cmpsb
mov
cmp
jmp
stos
movsl
int
es
aad
scas
mov
pop
or
clc
sbb
cmp
dec
in
inc
fdiv
sub
push
adc
mov
mov
fwait
jp
daa
sbb
dec
aaa
mov
or
adc
fidivrl
mov
mov
inc
gs
cld
mov
xchg
hlt
inc
xor
adc
or
out
add
cmpsb
ljmp
rclb
push
lret
mov
cmpsl
in
and
mov
hlt
pop
dec
inc
cmp
mov
inc
test
sub
mov
push
mov
pushf
gs
arpl
movsl
xchg
pop
and
mov
stc
push
mov
fnsave
xchg
test
inc
iret
cs
mov
cld
fmull
pop
test
outsb
in
clc
mov
dec
xabort
test
cld
xchg
dec
lcall
negl
push
test
imul
scas
out
test
popf
insl
mov
into
jp
inc
push
sbb
jno
cld
scas
dec
decb
cld
cld
jle
pop
inc
push
insl
aas
cs
or
sbb
leave
sbb
stc
cmp
stos
call
lods
push
mov
out
stc
add
sub
jbe
xchg
stos
and
mov
jecxz
test
loope
xchg
add
scas
jns
flds
dec
xor
pop
inc
inc
inc
hlt
out
rcrb
add
sbb
jnp
jmp
insb
outsl
adc
push
je
div
mov
adc
xchg
adc
leave
aam
mov
and
push
jnp
iret
sub
ds
xchg
fwait
pop
or
out
fidivrl
pop
cld
ja
dec
adc
fsubs
pop
call
sbbb
jl
test
arpl
rorb
cmc
outsl
rcll
fsubrl
push
dec
or
mov
or
test
mov
push
ds
jns
push
pop
pop
jp
jecxz
outsb
xor
aad
jge
outsl
scas
mov
cmp
push
in
push
mov
test
sarl
cmpsb
mov
cltd
fwait
pop
dec
insl
jecxz
jo
dec
and
cmp
hlt
pop
enter
sbb
pop
out
js
dec
push
fwait
test
ss
fsubr
jae
mov
add
shrb
push
push
ret
dec
lock
ljmp
in
dec
shll
mov
aas
and
cs
xchg
add
arpl
sub
or
lea
xchg
xchg
adc
or
cmp
jae
leave
popa
outsl
inc
jbe
and
jl
pop
xor
push
adcb
push
xor
es
pusha
test
out
add
mov
push
inc
inc
xor
sti
and
addr16
dec
xchg
popa
sub
mov
mov
adc
popf
xchg
daa
cmpsl
stos
add
or
lret
clc
push
pop
add
add
xchg
cwtl
dec
cltd
mov
lea
add
lock
mov
std
ljmp
or
dec
xchg
repnz
mov
sahf
aas
stos
sub
jae
adc
leave
pop
filds
loop
mov
scas
mov
call
push
add
insb
imul
xchg
sbb
push
cs
or
mov
pop
jb
jg
mov
pop
cmp
scas
mov
sub
sub
test
lock
dec
and
mov
outsl
ficoml
xor
fmul
loop
aas
mov
jne
imul
fcoms
push
or
orl
dec
aad
pop
push
fiadds
mov
mov
mov
jae
inc
sbb
rolb
lods
add
call
sti
adc
pushl
jmp
mov
jmp
cmpsb
or
pop
push
sub
enter
and
call
mov
xor
aaa
inc
mov
ja
lret
insl
push
xor
std
sahf
add
lods
jae
cmp
leave
data16
push
sbb
neg
out
dec
outsl
in
fisubl
dec
mov
add
iret
fnstsw
xor
cli
xor
insb
pop
jb
inc
xor
sbb
lret
sbb
jle
cmp
cld
inc
inc
outsb
inc
ret
pushf
inc
loope
aas
xchg
mov
sub
sbb
std
ret
push
mov
scas
test
mov
sbb
fs
jecxz
imul
cmp
adc
xchg
sub
jmp
hlt
push
mov
rcl
push
jb
in
loopne
in
sub
ljmp
jp
add
cmp
pop
pushf
das
mov
repnz
cld
out
jp
dec
add
aaa
mov
adc
cmp
scas
push
ja
add
sbb
jne
pop
lcall
lret
mov
cmp
pushf
dec
mov
xchg
rcrb
insl
ss
fsubr
fwait
gs
ja
push
popa
push
push
mov
aaa
inc
sub
cmp
pop
rcrl
popl
testb
cmpsl
nop
cmc
imul
mov
cmp
adc
leave
push
add
fisubrs
inc
call
add
pop
outsb
pop
mov
pop
pushw
xor
pop
or
nop
xchg
pop
cwtl
pop
pushf
xlat
push
ljmp
xor
std
or
int
sub
mov
dec
ss
outsb
aad
enter
call
out
mov
pop
inc
mov
xchg
lea
mov
jno
cmp
lea
jmp
loopne
lret
int3
inc
aam
xor
xchg
dec
inc
fldcw
xchg
insb
ret
mov
jno
gs
jbe
or
ret
xchg
jb
pop
jbe
inc
xchg
pop
adc
loopne
in
push
dec
arpl
sub
out
movsl
cli
pop
pusha
pop
push
mov
stc
sbb
pop
dec
xor
sbb
std
xchg
cmp
clc
ljmp
ja
xchg
in
xor
fwait
xchg
sub
movsb
out
xchg
sbb
ja
push
js
or
jle
scas
leave
cli
call
or
mov
adcb
stos
out
sub
imul
call
cmp
insl
divl
pop
adc
ret
mov
or
jns
dec
in
aaa
xchg
jae
je
pop
addb
jg
sub
movsb
es
popl
arpl
mov
and
cltd
std
push
inc
dec
popf
xchg
shl
cwtl
xchg
pop
sbb
mov
jbe
push
je
adc
std
nop
xor
lret
mov
and
test
ja
es
mov
fmul
andl
loop
add
insb
jb
sub
pushf
aad
jns
lock
fstpl
aaa
ds
xor
or
mov
lods
sbb
push
fs
nop
lret
mov
rcr
inc
sti
hlt
lods
fiaddl
cmp
iret
lods
test
rcrb
outsl
inc
bound
testb
xor
sbb
mov
mov
clc
and
in
fs
push
and
mov
jne
call
cs
or
jmp
mov
fsubl
push
ds
jmp
rorl
lods
mov
cmova
mov
inc
call
jae
sti
mov
repz
mov
pop
mov
xor
lret
jns
jl
push
sar
jno
mov
mov
mov
int
dec
push
pop
cld
pop
inc
and
and
sub
pop
add
or
jge
gs
scas
push
adc
test
out
das
pop
jno
popa
push
pop
jle
jmp
fidivrl
pop
test
int3
inc
and
and
cli
mov
sub
je
sbb
int
mov
sbb
cmpsb
pop
in
es
stos
test
xor
mov
push
adc
das
push
adc
arpl
jl
mov
xor
sarl
push
std
lods
ds
inc
mov
push
push
icebp
dec
mov
ret
mov
pusha
adcl
arpl
dec
pusha
ljmp
lret
dec
sbb
dec
js
stos
fisubs
cmp
xchg
sbb
orl
mov
cmp
fstp
mov
mov
or
mov
hlt
and
addr16
imul
pop
cs
loopne
stc
repz
cmpsl
out
popf
adc
movsl
jo
xchg
popa
sub
dec
in
popf
inc
inc
lahf
sub
lret
xor
imull
mov
in
sub
add
sbb
test
dec
cmpsb
mov
stos
xchg
es
jle
or
lods
call
xchg
std
lahf
mov
mov
shlb
or
cmp
jo
mov
sbb
dec
popa
mov
sbb
xchg
xor
mov
xor
loopne
pusha
mov
lods
adc
ja
test
repz
push
leave
add
dec
in
xor
sbb
and
xchg
inc
xchg
scas
inc
nop
testl
xlat
lret
fwait
test
jecxz
loop
rcrb
xor
cmp
enter
jo
dec
fisttps
jnp
adc
je
repnz
inc
push
test
pop
mov
push
pop
ret
cwtl
cs
adcl
sub
push
fidivl
addb
fwait
mov
insb
mov
xor
insb
in
jbe
ja
popa
xchg
gs
mov
lock
and
cmp
pop
jno
sub
data16
inc
inc
xlat
xor
test
jl
inc
jle
push
adc
sbb
popf
cmp
mov
jno
sbb
in
inc
xchg
mov
stc
lods
jge
xor
repnz
lahf
out
pop
jmp
or
addr16
pusha
call
inc
mov
cmp
jge
loop
mov
loope
and
testb
into
rorl
lock
sbb
cmpsb
subl
call
mov
mov
test
jns
and
jne
lds
sbb
stos
ljmp
jecxz
nop
int3
test
mov
mov
cmc
loop
bound
test
xchg
add
in
es
shll
mov
or
jae,pn
arpl
push
add
fbld
xchg
add
jns
nop
jbe
repnz
pop
mov
add
loop
mov
xor
cmpsl
inc
jmp
pop
fadd
add
shl
xor
add
mov
iret
add
adc
in
outsl
dec
stos
subl
fiadds
jge
adc
mov
ret
sub
mov
dec
fisttpl
pop
dec
inc
xchg
ss
push
or
or
out
jecxz
daa
aam
push
cs
inc
repnz
push
inc
imul
mov
mov
jp
xor
xchg
out
iret
mov
jns
shlb
nop
insl
das
mov
test
int
or
orl
sub
push
xchg
aam
popa
pop
xchg
lcall
movsb
loope
aaa
inc
repz
push
cs
adc
lcall
inc
hlt
int3
lcall
fstpl
gs
hlt
xchg
xor
sbb
adc
jp
cmpl
icebp
pushf
cli
insl
or
repz
mov
daa
bound
sbb
scas
adc
push
push
in
cs
outsb
loop
orb
mov
imul
push
push
mov
mov
insl
ss
rol
adc
dec
or
jle
adc
add
lock
and
fwait
rolb
sti
sub
aas
xorb
popf
call
jecxz
mov
pop
negb
cmpsb
jl
add
xchg
aad
xor
push
jmp
mov
sbb
mov
jecxz
scas
jp
pusha
xchg
mov
cmp
movsb
pop
pop
popa
adc
and
int3
lds
sbb
movsl
mov
mov
ret
push
xchg
mov
mov
fsubrs
mov
mov
js
dec
push
lcall
jbe
into
ret
std
fiadds
out
and
into
call
sbb
jmp
sbb
stos
loop
mov
nop
push
or
xchg
mov
stos
ds
xor
inc
lods
sbb
shufps
mov
dec
outsb
lcall
shrb
out
mov
out
bound
subb
movl
repnz
cmp
shrb
jecxz
jae
jnp
mov
jno
or
lock
xchg
loop
imul
push
sub
sbb
inc
bound
ja
jge
cmpsb
mov
xchg
dec
ja
mov
mov
push
adc
cmp
sub
jmp
pop
hlt
lds
push
loopne
xlat
xchg
xchg
cmp
sub
movntq
adc
adc
inc
ds
inc
idivb
xor
or
movsl
lret
scas
stos
rolb
mov
popf
stos
divl
or
inc
jb
xor
and
ds
out
push
out
ret
pop
mov
xor
sub
movsl
push
js
out
rol
xchg
fsubs
std
rcrb
stos
cmp
jae
sbb
xchg
arpl
clc
imul
pop
adc
cmc
pop
dec
or
cmp
cmp
xchg
test
cmpsb
mov
pop
fcomps
in
popf
sub
sahf
xlat
cmc
mov
stos
or
std
jp
ret
jns
out
dec
cli
loopne
mov
and
sarl
push
into
push
mov
cmp
fists
out
and
sub
insb
inc
in
jnp
jnp
push
add
xchg
mov
cs
rorb
sbb
add
and
daa
push
jae
jbe
add
xchg
add
rsqrtps
jne
out
mov
cmp
cmp
imul
or
xchg
sahf
xlat
in
push
mov
ds
sahf
xchg
dec
pop
and
jmp
inc
scas
jecxz
inc
test
shrb
in
dec
or
cmp
adc
pusha
cmpsb
daa
test
data16
stos
mov
dec
sub
enter
jecxz
sub
es
mov
outsb
test
push
inc
or
fidivl
jle
sbb
and
loopne
fildl
out
ficomps
sub
inc
sub
inc
sahf
int3
jbe
xchg
sbb
outsl
sbb
xchg
jbe
dec
popa
lret
pushf
xor
sbb
and
idiv
xor
push
std
and
es
cmp
jg
push
pop
and
xor
sti
add
mov
out
push
mov
or
mov
stc
imul
lock
and
lods
mov
enter
jo
inc
dec
stc
xchg
loope
push
test
fstpt
mov
and
cwtl
daa
test
push
jnp
fcoms
add
outsl
hlt
aam
or
arpl
push
mov
adc
rolb
imul
mov
dec
adc
pop
push
lret
mov
pop
lods
mov
idiv
and
and
pop
int
sbb
jb
shrb
cmpsb
and
pushf
mov
insb
sub
fsubrs
icebp
push
testb
adc
negl
push
or
std
pusha
sub
mov
push
fimuls
cmpsl
jnp
bound
xor
xchg
cmp
arpl
pop
or
or
in
mov
pop
xor
fmull
and
iret
jl
adc
les
or
fisttpll
xchg
in
xchg
jmp
clc
xor
dec
xor
mov
je
xor
aaa
sarl
sbb
mov
loopne
push
aas
mov
cli
xchg
push
shlb
test
lret
scas
mov
vpackuswb
sbb
lret
push
mov
or
xchg
inc
push
add
stos
js
adcb
fisubrl
mov
add
mov
cli
popa
out
repz
fisttps
sbb
out
test
sub
jle
ss
inc
dec
pop
add
push
jp
sbb
adc
jg
push
jle
ffreep
lds
adc
pusha
pushf
sub
xlat
pop
mov
xor
or
lock
push
xor
add
les
pushf
js
fwait
cmp
les
push
mov
in
push
outsb
push
in
pop
mov
cmp
add
push
sub
stos
and
pop
jge
mov
repz
mov
and
cmc
or
scas
sbb
ljmp
das
stos
add
jo
xchg
dec
bound
dec
xchg
push
lds
stc
movsl
dec
fwait
aad
xor
mov
cmp
push
mov
insb
xlat
std
jne
cmp
cmp
ja
fisubs
vhsubpd
cmp
mov
into
sbb
mov
pcmpgtw
ret
and
mov
enter
rolb
pop
fcomi
cmp
lods
jb
addl
and
xchg
std
mov
dec
jp
dec
sub
lahf
sbb
rolb
mov
imulb
push
test
cmp
xchg
shl
fs
add
mov
out
aaa
jb
dec
div
dec
gs
mov
stc
add
sti
dec
fmuls
orl
loopne
push
adcl
cwtl
cs
leave
mov
int3
lods
cli
fsubl
mov
lahf
movsb
pop
mov
stos
adcb
lods
jl
adc
cwtl
pop
fiaddl
in
and
cmp
or
pushf
fcompl
sub
js
sbb
mov
push
mov
das
cmp
lret
test
mov
into
in
push
sahf
cmp
sub
pushf
adc
push
outsl
mov
adc
jl
shlb
enter
sbb
jle
push
and
dec
pop
arpl
data16
loope
cmp
inc
loop
add
ret
mov
movsl
nop
hlt
push
pusha
xor
cmp
add
nop
mov
mov
mov
inc
and
jbe
scas
adc
jno
out
lcall
ja
inc
mull
into
cli
scas
and
cmp
mov
or
mov
pop
pushf
outsl
jle
test
push
mov
lds
cmpsb
sub
inc
mov
incl
loop
bound
cmp
and
mov
out
push
xorb
or
jmp
jg
push
jbe
imul
mov
es
jge
ficoml
imul
mov
mov
adc
sbb
and
or
stc
cltd
ret
dec
pop
xor
dec
andb
push
jb
mov
fwait
push
pop
push
jae
fs
xlat
mov
dec
sbb
adc
or
mov
jae
push
popa
sub
repnz
pop
loop
pop
push
dec
and
push
lds
adc
cmp
testl
jne
aas
loopne
hlt
pop
bt
aaa
subb
xchg
insb
std
imul
out
mov
inc
iret
pop
insb
lods
mov
mov
jg
mov
mov
or
ret
add
out
xor
add
cmp
ret
sub
pop
dec
add
popa
xchg
ss
push
mov
test
jae
pop
push
dec
inc
xchg
and
or
insl
stc
shll
pop
sbb
mov
cwtl
sbb
pop
scas
mov
xchg
pop
cmp
cmp
pop
fcompl
xchg
into
cmp
aaa
imul
shlb
xor
out
or
adc
inc
test
jnp
or
enter
and
in
inc
sub
cmp
aaa
or
and
in
dec
sahf
movaps
leave
int
add
popf
mov
inc
test
push
xchg
popf
adc
aam
and
xor
inc
jmp
jmp
shll
mov
push
fists
push
aas
lea
loope
mov
daa
sarl
lcall
jmp
inc
jge
rolb
mov
lea
push
xchg
inc
imul
movsb
inc
mov
les
sbb
mov
add
movl
loop
ds
dec
outsb
xor
movsb
movsl
clc
pop
xor
movsb
dec
push
notl
test
push
test
xchg
out
les
adc
jg
popf
jne
and
movl
inc
jnp
inc
sub
dec
mov
jo
std
xchg
pop
outsl
push
lret
jp
push
je
icebp
aad
les
loop
dec
cmp
inc
shrb
je
and
jecxz
aaa
psrlq
loop
in
xlat
lret
roll
cs
stos
cmp
push
mov
mov
orl
fistl
cmc
sbb
dec
lcall
or
out
jecxz
xor
lret
adc
pop
jecxz
das
in
mov
mov
dec
xchg
sub
repz
mov
aaa
mov
pushl
fs
xchg
dec
cli
in
out
jmp
mov
xlat
inc
and
sub
enter
pop
push
fsubr
pop
fmuls
cld
add
mov
jecxz
sub
xchg
mov
les
xchg
push
movsb
test
jne
cmc
out
je
movsb
repz
outsl
cmp
sub
test
ds
out
mov
pushf
mov
sub
adc
add
push
mov
add
jle
cld
jnp
mov
and
mov
add
sbb
lds
mov
cltd
sbb
jne
imul
inc
jbe
popf
mov
data16
mov
sub
sub
xor
dec
sub
xchg
pop
push
shrb
aas
and
rcrb
fdivs
mov
lcall
mov
dec
sarl
popf
ds
or
repnz
ja
mov
xlat
sbb
lret
aas
ret
push
cmc
in
dec
sarl
arpl
add
lahf
and
push
jp
jno
fsubs
test
inc
aam
sub
cmpsl
pop
pop
into
cmp
sub
insb
lock
xor
mov
jb
loope
scas
inc
test
bound
pop
addb
xchg
sub
xor
fs
xor
sub
push
add
push
std
jo
in
cs
push
push
and
bound
addr16
sbb
mov
rorl
adc
mov
pop
sub
ljmp
jmp
leave
outsb
dec
sbb
call
jl
jns
xchg
add
adc
sbb
pop
stc
repz
mov
int
jbe
or
jnp
xor
cmpsl
add
mov
cltd
push
movsb
jle
fdivl
idivl
sbb
stos
inc
das
jp
mov
jns
cld
jnp
addr16
sbb
lods
jns
fwait
jnp
jae
xchg
testb
inc
sub
adc
in
icebp
lret
jb
lret
mov
dec
add
push
outsb
add
mov
hlt
test
jo
push
mov
push
xchg
xchg
push
mov
pop
jno
loop
mov
ret
insl
dec
fs
cmp
sub
mov
jg
mov
xor
sbb
aas
in
aad
mov
cld
jg
inc
imul
mull
jnp
xchg
mov
sub
ficomps
sti
xchg
cmp
jmp
pop
or
dec
scas
lahf
addl
rcrl
xchg
add
cmp
aas
inc
mov
outsb
shll
scas
rorb
mov
add
addr16
in
mov
add
dec
adc
pop
lds
pop
jmp
mov
sti
scas
movzwl
xchg
cmp
psllq
clc
mov
lret
loope
inc
push
push
ror
out
lods
jo
add
dec
mov
push
in
aad
jmp
lock
push
mov
pop
adc
fiaddl
out
pushf
cmp
lods
xchg
lret
push
ja
mov
add
inc
sbbl
lds
xor
insb
xor
insb
lret
stc
hlt
ret
sbb
arpl
addr16
imulb
sahf
push
lock
cmc
sarl
pop
jb
loopne
xchg
push
adc
push
dec
xchg
into
add
jno
out
aas
arpl
pop
outsl
or
inc
xor
insl
xchg
je
sbb
mov
hlt
lods
sahf
and
or
pop
inc
inc
push
push
cld
in
and
leave
inc
icebp
ds
push
mov
rclb
adc
sub
push
imul
cwtl
and
daa
adc
push
inc
xor
add
push
cmp
ret
aaa
dec
adc
inc
fldcw
fstl
lods
pop
stos
add
add
mov
mov
xchg
test
jmp
inc
lret
adc
sub
imul
dec
mov
repz
cmp
add
cmp
lods
lds
sub
mov
xor
roll
push
sbb
pop
or
dec
arpl
or
adc
pop
push
push
push
in
cvtpi2ps
adc
pop
call
push
cmpsl
insb
fcmovnu
mov
jae
in
repz
pop
sub
fbld
inc
repz
mov
lret
shlb
sbb
push
mov
mov
inc
addl
sahf
das
test
xchg
xlat
das
int3
or
xor
scas
nop
push
inc
rclb
cmp
push
add
dec
shlb
outsb
mov
cmpsl
jbe
mov
clc
jno
jae
jg
or
or
dec
sbb
movsb
inc
mov
or
addr16
cmpsb
jns
repnz
add
insb
adc
push
aad
mov
push
adc
jl
mov
std
mov
popa
dec
pop
or
loop
sahf
gs
xchg
pop
push
push
lcall
mull
pushf
jno
push
mov
fcomp
jo
xchg
xchg
push
lods
mov
push
js
sub
push
std
ja
fdivrl
mov
pop
in
jg
popa
push
xchg
lcall
xor
xor
stc
mov
imul
inc
mov
cli
lahf
jp
test
sub
and
imul
repnz
bound
popf
shr
push
fstpl
popf
stos
pop
xlat
adc
and
xchg
push
in
aaa
mov
or
jns
lds
movsb
add
sbb
mov
scas
jecxz
xchg
mov
std
add
push
fsubl
cmp
sub
inc
mov
repz
dec
adc
sub
or
daa
cmpsl
pop
std
cmp
inc
push
xor
inc
mov
cmp
das
inc
and
je
int3
fucomip
cltd
fnstcw
mov
push
bswap
mov
fnstenv
fadd
out
orl
lret
rcrb
jne
pop
jge
sbb
add
adc
add
and
std
sahf
mov
push
jle
jecxz
push
stc
gs
shl
or
cmp
aaa
aam
dec
cmpsl
out
outsl
xor
pop
cmp
dec
mov
and
adc
gs
pop
add
popf
push
jnp
push
pop
mov
out
movsl
mov
imul
ja
or
aas
or
mov
push
xchg
sahf
je
push
insb
jg
dec
dec
xchg
repz
in
outsl
push
aas
in
dec
les
js
and
cmpl
add
out
mov
lods
jno
mov
xlat
xchg
push
jmp
sti
sub
cld
pop
mov
dec
mov
loop
js
push
dec
sbb
mov
xchg
sub
aaa
pop
es
push
cmpsl
cli
loope
push
data16
aad
sbb
imul
incb
inc
xchg
cmc
inc
lahf
mov
jp
pop
mov
mov
movsl
ds
add
flds
int
inc
jp
or
out
adc
adc
dec
fwait
push
and
popf
jno
cld
xor
notb
jmp
outsb
pop
lret
fldl
fs
idiv
repnz
push
pop
jmp
mov
aam
nop
aaa
dec
xor
add
jp
shll
sub
aaa
push
int
mov
je
or
and
add
xor
jge
add
and
adc
and
pop
push
jl
xchg
mov
add
cmp
imul
sti
dec
jno
cmpsb
push
push
push
mov
imul
push
addl
cmc
loopne
dec
ret
dec
push
pusha
adc
mov
subl
js
cmc
push
push
sbb
mov
ljmp
or
test
jno
ljmp
xchg
jle
ficomps
in
stos
push
adc
js
xchg
adc
push
cvtdq2ps
and
out
fsub
leave
fwait
jns
add
cwtl
std
in
std
outsl
mov
push
outsb
nop
aad
lods
enter
jge
mov
pop
loope
flds
in
cld
test
push
adc
rorl
adc
xchg
sbb
push
jp
cmp
push
inc
pop
js
or
xchg
loop
or
pop
test
ss
pusha
xor
push
loop
add
pop
pop
popf
lcall
lret
or
xchg
add
add
stos
jbe
sbb
push
shrl
or
gs
clc
or
arpl
outsl
add
mov
jns
sahf
cld
sub
xchg
cmp
push
cmpsl
xor
imull
je
push
cmc
cmp
ficoms
scas
mov
xor
xor
stos
jle
cli
xchg
add
mov
push
popa
dec
xchg
and
daa
push
mov
pop
jge
mov
xchg
cmpsb
ja
sbb
or
push
loop
sti
call
dec
inc
pop
movsb
xchg
mov
lods
lea
xor
idiv
ficoms
xlat
nop
ja
mov
xchg
pop
cmpsl
xor
incl
daa
out
inc
or
add
add
ficoml
jp
xor
pop
push
test
idivl
push
pop
imul
filds
jmp
scas
ja
jecxz
push
sub
add
mov
mov
stos
mov
shrl
mov
jmp
iret
and
push
jmp
mov
xchg
iret
lret
xchg
mov
fiadds
iret
mov
movsb
xor
pushf
sub
xchg
sub
xor
ja
ret
mov
adc
outsb
push
into
fidivrs
and
enter
inc
pop
adc
out
sti
stos
fs
and
or
fcos
ja
pop
dec
push
mov
sub
add
cltd
inc
mov
inc
jmp
aas
lods
adc
mov
mov
xor
pop
xor
aad
pop
daa
roll
movsl
imul
xchg
push
adc
jmp
push
mov
int
icebp
repnz
and
int
lock
sbb
mov
ret
xchg
loope
pop
loope
mov
imulb
mov
clc
mov
sbb
shrl
jae
dec
dec
cmp
ja
lea
adc
aas
stc
mov
cmp
add
jno
mov
scas
xchg
or
arpl
adc
jmp
stos
xor
out
std
xor
sub
xor
fstp
cmp
fs
sbbl
mov
or
lds
clc
xor
mov
add
fsubrl
push
pusha
jnp
xchg
push
loopne
xor
jnp
dec
and
gs
push
jne
out
imulb
imul
pop
sarl
repnz
outsb
fwait
lcall
cmp
orl
xchg
out
add
cmp
out
lret
push
adc
cmp
xor
pusha
loopne
test
xchg
mov
push
ds
lret
push
pop
add
fldenv
idivb
xor
gs
loopne
lds
adc
fs
adc
addr16
inc
aad
hlt
out
inc
xlat
mov
jno
pop
add
lret
xor
dec
cmc
pop
nop
loope
loope
xchg
rorb
jecxz
mov
mov
jae
clc
mov
sbb
xchg
test
ja
mov
pushf
aas
adc
pop
push
enter
test
test
mov
mov
adc
mov
jle
or
push
arpl
call
and
push
into
push
sbb
sbb
jae
decl
and
enter
decl
imul
cmpsl
mov
pop
aad
fidivl
pop
scas
lret
xlat
movsb
fcmovne
cld
push
push
mulb
adc
out
icebp
cmp
sub
shl
dec
aam
orl
push
lods
in
cs
fistpl
and
ret
pop
mov
pop
jnp
xchg
jb
insl
mov
mov
sub
or
sbbl
mov
shll
push
das
mov
mov
inc
jle
ret
push
out
cmp
inc
mov
mov
int
mov
xchg
jle
out
pop
push
test
lret
sbb
fnstenv
outsl
iret
mov
adc
sbb
mov
fsubrs
lods
adc
pop
mov
leave
xor
push
repz
imul
inc
adc
jecxz
dec
or
pop
push
popf
push
lds
push
or
sbb
pop
pop
mov
xor
xchg
push
cli
imul
add
ret
iret
outsb
outsb
push
lds
lahf
mov
ficomps
in
sbb
jmp
stc
push
or
lret
lcall
cmp
cld
aam
loope
jbe
aam
jg
sbb
jle
jbe
stos
mov
movsb
add
frstor
mov
mov
fisubs
arpl
icebp
inc
arpl
pop
jno
add
ret
lds
dec
fadds
ss
jae
fwait
pop
and
mov
cmpl
jecxz
mov
bound
movsl
mov
inc
xor
call
xlat
das
rcll
pop
dec
add
into
xchg
insb
xchg
lock
lret
imul
inc
inc
clc
mov
xor
int
rclb
xlat
jo
xchg
jb
cli
shr
mov
stos
sahf
movaps
shlb
mov
lods
mov
mov
sbb
push
xchg
mov
sub
outsb
daa
repz
outsl
jnp
fmull
cmp
jp
xor
mov
hlt
sbb
pcmpgtd
push
mov
insl
dec
js,pn
and
sub
sti
xchg
or
cwtl
call
test
loope
pop
xor
test
push
pop
mov
orl
mov
fdivrl
adc
pop
sbbl
add
jg
mov
or
call
int3
cmp
aaa
fwait
popl
push
sub
sti
cli
call
dec
jnp
sbb
add
in
xchg
incl
jp
cmp
insl
insb
mov
mov
repz
mov
inc
fwait
test
sti
jne
xor
loope,pn
fwait
dec
inc
xor
or
jbe
test
in
adc
fiadds
rolb
add
fistps
scas
inc
adc
mov
sub
cwtl
rol
cmp
dec
in
test
xchg
inc
jle
ss
xor
pop
xorl
inc
and
cwtl
lea
lret
mov
pop
xchg
aad
in
bound
and
xchg
sahf
dec
stos
pushf
mov
xor
fildl
stos
jne
sbb
sbb
dec
adc
cmpsb
fsts
xor
sbb
je
add
xor
scas
pushf
push
insb
fisubs
test
or
fbld
outsb
test
dec
and
scas
cmpb
fmul
aas
jmp
stos
jmp
iret
mov
sbb
test
repnz
ficomps
adc
filds
ss
call
xor
pop
mov
mov
lock
imul
mov
in
movsb
cld
cmp
pusha
dec
rcrb
dec
fs
inc
push
movsb
loopne
jne
mov
xor
or
ja
jo
jg
sub
xor
out
add
push
pusha
xor
scas
jae
mov
mov
pop
push
imull
inc
push
jae
je
xchg
inc
or
repz
jnp
enter
xor
jp
lcall
add
push
daa
test
ds
nopl
outsb
mov
lret
cmpsl
pop
das
loopne
add
adc
add
loopne
add
lock
data16
stc
and
out
dec
and
or
xchg
loope
in
xchg
or
divl
insb
leave
mov
mov
mov
jge
cltd
das
and
jmp
dec
xor
in
in
xchg
or
icebp
movsl
jb
and
jb
xor
ja
ja
bound
xchg
mulb
and
stos
mov
cmp
adc
sub
lock
sub
xchg
mul
out
mov
ja
sub
sti
repnz
cli
inc
arpl
mov
insl
jo
pop
jno
inc
loope
daa
mov
push
pop
xor
pop
in
mov
mov
adcl
ja
repnz
or
pop
jae
test
loop
cmc
enter
addr16
rorb
dec
scas
fisubrl
mov
adc
push
sub
jmp
pop
inc
sub
sub
in
repnz
rcll
push
notl
dec
dec
adc
fildll
shlb
lods
out
test
aad
xlat
sub
rcrl
les
into
sub
std
icebp
or
fisubrl
pop
test
inc
jnp
cmp
push
clc
cmpsb
xchg
xchg
and
nop
iret
loop,pt
fsubrp
cmpsb
rorl
outsl
jg
pushf
adc
mov
adc
pop
fmulp
cmp
xchg
loope
or
xchg
mov
outsb
hlt
xchg
jnp
push
push
mov
mov
addr16
or
push
jecxz
mov
mov
fstp
mov
fimull
inc
fldt
mov
cltd
jns
xchg
jecxz
dec
push
fstl
cmp
jmp
mov
inc
and
inc
call
xchg
mov
adc
shrl
xchg
int3
sbb
mov
push
jp
mov
inc
sub
or
mov
in
xor
hlt
and
loope
xchg
mov
insl
cmpsl
jbe
pop
mov
xor
ja
popa
xchg
sub
pop
or
inc
inc
clc
mov
fstps
cmp
mov
pop
sbb
stos
sub
popl
inc
cmpsb
jnp
fsubs
lods
arpl
xor
neg
sbb
je
stos
mov
add
adc
mov
adc
xchg
in
jo
mov
call
push
cli
mov
sbb
push
lea
outsb
mov
std
or
xchg
xchg
repz
es
mov
push
lret
xchg
lahf
in
pusha
stos
add
mov
subl
sub
push
adc
inc
sbbl
fsubr
stos
out
xor
or
dec
mov
nop
mov
mov
pop
or
out
and
in
jg
pop
shlb
jns
mov
pop
dec
aam
dec
xchg
and
pop
cltd
dec
and
mov
sbb
rcrl
or
std
push
das
jnp
inc
repz
cmc
or
pop
xor
pop
cmpsl
dec
dec
mov
add
cltd
js
clc
jmp
xor
adc
xor
iret
or
stc
xor
xchg
push
push
bound
out
sub
dec
outsb
scas
and
xor
sub
jl
or
test
pushf
cmp
jbe
aad
leave
outsl
data16
cmpsl
mov
jne
xor
mov
lahf
sbb
mov
lods
push
sbb
ds
ds
sub
dec
loopne
test
enter
insl
xor
iret
fcompl
cmp
mov
mov
jge
cmp
mov
scas
and
out
jmp
cmpsb
shlb
in
lods
mov
lea
fildll
dec
lea
testb
std
lcall
ds
dec
data16
cmpsb
mov
xchg
cmp
aas
lods
push
outsl
sbb
add
addl
push
jae
and
imul
arpl
sbb
sub
lret
dec
sarl
vmovapd
sti
sti
add
sbb
mov
or
lods
subl
cmp
push
fsubs
jb
out
lea
les
flds
xor
cmp
fidivrs
mov
in
cmp
jno
sub
fisubl
or
lock
jg
addr16
and
test
cmp
dec
cwtl
gs
pusha
push
adc
mov
or
dec
sbb
cmc
int
push
dec
int
das
and
test
jnp
adc
enter
add
lds
out
pop
and
pop
scas
cld
mov
iret
adc
push
mov
mov
add
pop
cmp
arpl
fldcw
addr16
iret
jge
xor
cwtl
movsb
cmpsl
mov
fldl
xchg
mov
push
pop
and
mov
outsb
inc
jno
ret
jp
pop
xchg
inc
push
push
mov
sti
lret
mov
xchg
mov
mov
ficomps
stc
in
leave
and
jb
hlt
mov
add
nop
sub
sbb
fsts
mov
cmp
stos
inc
jne
mov
and
and
test
or
in
push
mov
loop
and
push
xchg
lcall
jmp
rcrl
scas
into
mov
aaa
and
add
sub
sub
outsb
xchg
mull
jb
xor
inc
inc
or
sub
insl
push
incb
inc
daa
test
lret
decb
dec
fcomp
ss
cmp
sub
imul
daa
pop
shl
call
dec
pop
bound
aas
sahf
inc
push
push
push
pop
or
mov
imul
adc
lock
or
pop
xchg
cmp
lcall
loop
imul
push
jmp
pop
push
sti
mov
xorb
push
mov
adc
cwtl
int
jge
sub
fs
xchg
pop
push
ljmp
mov
clc
xor
addr16
mov
dec
add
jae
mov
xchg
dec
pop
mov
enter
jns
pop
decb
xchg
mov
ret
jg
mov
sti
es
loope
test
out
nop
rcrl
inc
xor
imulb
xchg
popa
arpl
fs
in
lret
push
mov
popf
push
hlt
into
jb
adc
mov
les
lret
xchg
add
enter
ss
cmp
xchg
pop
popa
jecxz
fisubrs
gs
repz
mov
dec
test
inc
std
gs
inc
mov
dec
pop
ficoms
int3
out
cmpl
xor
jbe
mov
mov
test
cmp
data16
pop
jmp
loope
pop
nop
pusha
out
out
addr16
cmpsl
pop
jnp
in
inc
nop
or
std
rorb
mov
mov
push
into
lret
sbbl
xchg
imull
in
lds
inc
add
and
push
fists
call
arpl
sbb
into
inc
jo
sub
adc
add
mov
sub
out
push
icebp
fsubs
xchg
sets
ret
lret
mov
mov
js
shlb
scas
popf
popl
xor
or
aas
xor
push
std
adc
sbb
fstps
and
shrb
fnsave
mov
add
jle
jmp
push
int3
outsb
mov
sbb
nop
push
mulb
fstpt
fldenv
jmp
loope
fs
mov
mov
dec
mov
cmp
mov
adc
jae
adc
push
sub
shll
sub
stc
and
in
js
mov
xlat
neg
js
shll
adc
push
out
dec
stc
into
cmp
repnz
pop
orb
jle
xor
cld
xchg
imul
and
jno
pop
jecxz
jp
neg
mov
mov
lret
sar
leave
test
fwait
ret
jns
add
ret
cmp
pop
popa
xor
and
mov
std
pop
sti
mov
pop
outsb
imul
mov
shll
scas
xchg
pop
mov
pop
mov
mov
mov
and
push
idivl
lahf
push
cmp
xor
ljmp
popf
rcl
loope
mov
test
jp
xchg
mov
fisttpl
xor
and
push
mov
sub
or
movsl
mov
aas
adcl
lret
daa
push
insb
stos
outsb
pop
pop
jne
ds
xor
xor
jge
lock
pop
sbb
aam
test
out
call
pop
lods
repz
pop
je
mov
insl
stc
mov
push
sbb
scas
sbb
inc
sbb
xchg
xor
sahf
xchg
ret
sbb
push
clc
jmp
test
jp
xchg
push
insb
les
jge
lret
pop
aam
nop
ljmp
cs
push
call
pusha
xchg
or
sarb
sbb
jae
cmc
or
jno
xchg
stos
cmp
inc
insl
xor
pop
data16
movsl
sahf
movsb
cld
jo
push
pop
push
pushw
jp
cmp
xchg
fwait
lret
jo
dec
push
fs
data16
stos
sbb
xor
rorl
push
fcomip
out
push
and
stc
or
jb
mov
movsb
sbb
outsb
fstpt
fisubrs
arpl
daa
into
push
inc
lahf
in
aad
cmp
lds
jbe
cmpsb
stc
inc
in
dec
sub
mov
insb
es
xlat
xor
mov
pop
dec
inc
push
mov
sbb
or
dec
jbe
pop
pushw
mov
fdivrp
dec
je
pop
push
add
outsb
sbb
mov
ds
setp
add
push
cmpsl
inc
jg
mov
scas
dec
icebp
mov
pushl
repnz
cld
lret
jecxz
jnp
mov
mov
push
fisubs
dec
push
stc
or
dec
int3
mov
inc
jle
xchg
xor
cmpsl
out
je
push
divl
sub
pop
fimull
xor
cmp
jb
sub
cli
lea
ret
repnz
loop
push
or
dec
cmpsb
js
out
dec
aas
cs
cmpl
xor
inc
fistpll
jge
xchg
push
push
notb
cmc
js
xlat
cwtl
or
jne
sbb
neg
daa
sar
popf
mov
cmp
in
mov
lret
in
dec
inc
push
cmovl
aas
cmpsw
shrb
mov
ja
adc
or
pop
pop
call
movsl
popa
imul
mov
movsb
ds
jbe
lret
sub
and
mov
movsl
cltd
mov
push
sbb
and
mov
aad
push
mov
movsl
push
pop
or
les
ret
sub
popf
cmc
insb
ror
negb
dec
filds
push
in
mov
lret
push
and
pop
divl
inc
aad
lcall
xchg
cmp
out
mov
pop
loope
adc
lock
daa
push
mov
je
fwait
adc
ficoml
fwait
push
lea
loope
out
fwait
fwait
enter
sub
flds
jae
lods
leave
stos
ljmp
sbb
jns
xor
jne
inc
fs
cmp
cmp
sbb
je
ds
repnz
fstps
cld
adc
dec
add
outsl
sahf
aam
mov
adc
ret
in
mov
fxch
mov
dec
cs
fdivrs
loopne
sub
lret
mov
cli
sbb
mov
xchg
cmp
adc
fnstcw
cwtl
test
call
jne
idiv
mov
sbbb
cmp
mov
bound
imul
aad
push
iret
fstps
mov
mov
and
shlb
mov
mov
insb
mov
les
into
scas
jnp
xchg
cmpsb
popf
fdivp
push
add
outsb
aad
aaa
cmp
cwtl
xchg
ljmp
lcall
out
adc
inc
in
cmpsl
mov
jae
decb
dec
enter
aam
out
sti
push
mov
in
jbe
inc
daa
inc
mov
pop
mov
mov
add
or
xchg
push
mov
adc
std
mov
int
push
ljmp
cmp
sub
sub
mov
pop
xchg
fdiv
and
in
lahf
call
sub
outsb
mov
mov
out
test
cli
pop
test
lcall
jno
sbb
xor
rolb
in
cmc
sbb
cmp
jecxz
insb
fistpll
cmp
fdivl
clc
je
jne
sahf
cmp
sbb
mov
sub
pop
ror
in
das
call
and
or
pop
pop
mov
daa
sbb
or
out
loope
push
gs
iret
out
insb
pop
jle
fs
lock
lahf
and
adc
push
insl
xchg
cld
call
icebp
pop
mov
xchg
and
adc
pop
xor
test
enter
jmp
dec
pop
enter
sub
cmpsl
test
cmpsl
push
mov
inc
dec
and
inc
orb
mov
ljmp
dec
jb
xor
int3
shlb
rorb
cmpsl
or
ss
mov
out
cmovo
scas
testb
fnop
mov
cwtl
xor
cmp
and
push
filds
jl
fisttpll
sbb
push
add
xor
lret
pop
shll
loop
loopne
fdivp
xchg
jb
addr16
mov
push
movsl
push
mov
mov
adc
push
and
mov
push
es
movsl
ret
ja
mov
movsb
add
push
je
push
mov
cmp
iret
cld
mov
cmpsl
hlt
fmuls
xchg
and
inc
divl
jo
inc
sbb
jge
loop
inc
subb
mov
cmc
cmp
imul
cltd
popw
lods
sbb
mov
pop
cmp
jb
lahf
or
lea
jg
fdivrl
stc
imul
dec
out
ja
js
nop
mov
sub
cmpsb
push
xchg
jo
fsubrp
rcrb
popf
xlat
dec
lret
data16
jns
pop
pop
add
add
and
jbe
aas
pop
testl
xchg
pop
das
in
ret
cmp
inc
push
push
loope
je
mov
and
mov
pop
jns
mov
push
ret
jmp
sbb
sub
in
push
push
push
mov
sbb
jae
push
push
xchg
fimuls
push
sbb
xchg
xor
cli
cwtl
mov
ret
pop
push
jecxz
data16
aam
mov
repz
testl
mov
pop
insl
js
sahf
cmpsl
sub
leave
out
pop
loopne
fildl
les
scas
aaa
adc
xchg
insb
and
lods
fdivr
or
scas
test
les
mov
jge
out
mov
adc
cmp
and
lea
push
push
out
out
xchg
mov
sub
cs
jmp
lea
fists
jno
pop
ret
push
icebp
faddl
rorl
loope
add
jnp
ja
movsl
in
in
repz
ja
es
and
and
dec
cmp
and
or
add
adc
mov
in
les
icebp
or
sbb
xchg
dec
xchg
int
xor
decl
shlb
imul
test
cltd
push
adc
pushf
or
xor
jmp
jle
cmpsb
jnp
dec
jne
adc
push
pushf
sbb
loop
or
imul
lds
cli
lods
movsb
movaps
fwait
popa
cmp
mov
lods
push
mov
dec
jbe
in
jnp
roll
xchg
enter
inc
fcoms
imulb
lret
sub
aaa
sbb
idiv
mov
dec
and
and
imul
lea
mov
ja
inc
ljmp
loopne
push
lods
jnp
xchg
jmp
jle
inc
fwait
mov
or
cli
cmp
jb
mov
movsb
je
sub
insl
xor
mov
mov
rcll
push
push
lea
loopne
mov
push
les
add
pop
loope
lret
in
into
ss
iret
sbb
movsb
cmpsl
dec
scas
call
mov
ss
push
imul
add
push
test
jp
leave
inc
hlt
loopne
mov
cmp
jbe
inc
test
mov
loopne
sbb
xchg
push
dec
mov
cmp
add
aas
ffreep
dec
cmp
sub
stos
inc
mov
fxtract
test
jno
jbe
or
pop
xor
inc
scas
pop
movsb
and
dec
mov
es
int
lea
ja
cs
mov
cld
cmpsl
mov
aas
push
out
or
xor
xlat
cli
mov
cli
je
sub
into
shl
push
sti
jge
outsb
ret
mov
add
aad
out
or
fldcw
mov
sub
lret
sbbl
inc
in
inc
mov
cmp
jnp
aam
lods
imul
jmp
leave
cmp
dec
adc
jb
jno
dec
lcall
mov
push
fstl
ja
inc
leave
aas
test
adc
or
adc
test
inc
sbb
or
outsl
insb
test
pop
and
xchg
or
push
xchg
xchg
or
pop
lret
adc
mov
inc
cld
mov
mov
or
mov
jne
xor
out
adc
sub
movsl
xor
mov
adc
popa
adc
out
sbb
or
mov
mul
push
fisttpll
pusha
mov
add
icebp
sti
push
dec
shlb
pusha
cmpsb
mov
inc
iret
fcmovu
or
add
sahf
xor
pop
lret
popl
stos
inc
popa
repnz
push
xchg
cmp
pop
jnp
push
mov
cltd
aaa
andb
fistpll
hlt
sbb
jo
sbb
in
fdivr
xchg
lock
movsl
mov
lods
pop
or
sub
shrb
xor
data16
add
cltd
insl
stos
adc
jl
jo
adc
cwtl
pop
loop
dec
fisubl
movsl
repnz
in
fnstcw
xor
outsb
loop
cmp
fldt
loopne
or
pusha
aaa
ret
std
cwtl
hlt
lods
iret
ret
jge
xor
xchg
ljmp
xor
rdmsr
sbb
ret
pop
inc
movsl
sbb
shl
and
out
or
and
or
mov
xchg
std
out
outsb
or
movsl
ss
mov
xchg
movl
sub
pusha
rorb
lcall
cmp
testb
and
xor
sbb
out
je
sarb
cmpsl
out
scas
pop
mov
scas
mov
loop
das
or
xchg
pop
gs
cmp
fdivrs
push
decb
daa
sbb
gs
ret
mov
push
cmp
popl
cmpsl
cwtl
jle
add
out
and
and
adc
or
push
dec
mov
sahf
inc
push
mov
xchg
mov
xchg
xchg
lds
add
enter
rcll
shll
scas
pop
pop
mov
dec
or
mov
fdivs
nop
sti
mov
sub
lods
out
fisubrl
int3
sbbb
jmp
add
bnd
add
sub
rol
loope
cltd
scas
jbe
inc
mov
fisttps
inc
dec
jg
xchg
sub
sahf
fsubrl
inc
testl
sbb
xchg
mov
repz
or
inc
inc
loopne
ljmp
push
js
pop
mov
inc
push
cmp
pop
mov
shll
cmp
sub
inc
dec
jb
push
fisttps
or
or
ds
fidivl
rorl
repz
shl
sub
cltd
pop
or
push
stc
fidivs
cmp
pop
cwtl
mov
pop
add
jg
mov
ljmp
stos
push
jo
xor
insl
lods
xor
pop
sbb
push
lock
adc
outsb
and
fcoml
mov
movsb
or
mov
cmp
movsb
lahf
repnz
dec
aam
mov
mov
cwtl
add
xor
xor
mov
mov
sahf
fwait
xchg
cs
fwait
je
arpl
xchg
adc
mov
in
scas
dec
clc
or
add
push
test
fists
mov
inc
lahf
xor
cmpsl
sub
fwait
xchg
jb
xchg
pop
cmp
sbb
cmp
gs
mov
adc
roll
dec
fwait
movsl
into
imul
sarb
add
ficomps
mov
sub
add
mov
push
jmp
mov
mov
sub
outsl
test
or
insl
fadd
xchg
sbb
pop
outsl
mov
shl
sub
cwtl
shrb
daa
fists
cmp
push
xchg
cmp
xor
test
ret
outsl
xchg
mov
xchg
jg
shrl
adc
scas
mov
dec
aad
inc
sbb
push
inc
or
mov
or
push
out
mov
dec
jp
inc
stos
das
enter
lock
and
enter
inc
mov
out
pop
call
jbe
mov
bound
roll
jl
pop
fsubrl
cli
push
dec
cmc
inc
xchg
imul
aaa
stos
aaa
bound
insl
xchg
mov
inc
daa
call
les
int
mov
xchg
testl
xor
inc
mov
pop
mov
fwait
movsl
mov
inc
lahf
outsl
cmp
dec
lods
pop
int
lods
xchg
std
gs
rorl
push
mov
das
jne
int3
fwait
xor
mov
dec
gs
mov
adc
push
jp
pop
into
xchg
fnstcw
jge
push
xor
ja
jb
in
xchg
test
mov
leave
xchg
icebp
or
mov
xrelease
outsb
cs
inc
push
mov
pop
adc
test
cmp
xor
xchg
aaa
xchg
jmp
stos
sbb
cmpsb
inc
xor
and
incl
mov
sbb
cmpsb
icebp
push
mov
push
push
test
xor
insl
addb
mov
or
rcrb
cs
imul
inc
in
and
mov
pop
sbb
repnz
mov
mov
mov
or
cld
cmp
in
icebp
jne
sbbb
jmp
mov
push
add
dec
cmpsl
in
outsb
int3
jae
psllq
jo
xor
fisttpl
lret
mov
imul
inc
adc
je
jg
daa
jecxz
movsb
jmp
mov
das
jl
cmpsb
cmc
int
jno
cmp
and
ret
and
push
dec
test
data16
roll
scas
cs
and
or
inc
clc
lock
cmpsb
call
loope
rorl
add
cwtl
mov
aas
in
push
push
xchg
repnz
iret
mov
sub
jns
sbb
lds
sub
mov
push
or
lcall
push
and
jge
cli
sub
adc
or
sbb
out
call
jmp
cmp
push
jne
xchg
jns
loop
mov
pushf
popl
pop
clc
fstpl
and
sbb
cmpsl
shll
mov
sbb
pop
xchg
mov
repnz
or
js
cmp
xor
mov
push
inc
shrb
jo
mov
and
push
mov
push
inc
pop
pop
add
inc
and
movsb
sub
clc
cltd
adc
rcrl
aam
mov
cli
cld
push
jg
test
push
push
mov
adc
jnp
mov
mov
add
ss
sub
sub
add
cmp
add
mov
mov
jmp
in
xchg
repz
pop
cmpsl
movsl
aas
pop
ret
mov
sahf
cmp
mov
mov
loop
xchg
inc
inc
orb
mov
imul
out
mov
adc
mov
mov
stc
push
fs
adc
call
jmp
push
cmpb
lea
xor
cmc
jae
jns
xchg
sbb
insl
or
jg
sbb
daa
jo
lods
or
push
sub
lret
jmp
subb
adc
and
jp
inc
test
xor
sbb
stos
pop
xchg
cmp
sub
sub
out
psubusw
pop
and
popf
push
neg
pop
or
test
sub
jae
sbb
sbb
jo
mov
sbb
sbb
fistpl
sbb
in
xchg
sbb
ret
push
sbb
imul
push
mull
and
idivb
and
pop
xchg
jg
jo
and
in
lcall
push
cmpsb
xchg
lcall
es
shrb
fiadds
std
jns
cwtl
add
rcl
aas
cmp
aaa
mov
inc
aas
out
mov
adc
mov
arpl
or
xor
fildll
sbb
jns
cwtl
cmp
jnp
dec
ljmp
adc
or
push
mov
cwtl
sub
dec
cmc
jns
sub
in
inc
pushf
inc
ret
mov
ja
push
sti
mov
aas
sbb
movsl
popf
push
pop
clc
mov
mov
pop
or
cmc
mov
les
subb
out
add
les
test
jns
xor
jmp
xor
pop
pop
gs
sub
jmp
rorl
and
dec
jns
pushf
outsl
pushf
jae
jl
nop
sti
cs
int3
xor
inc
sub
pusha
add
inc
jae
mov
mov
in
imul
sub
adc
adc
mov
repnz
cmp
test
cmp
inc
mov
gs
andl
lods
xchg
jmp
add
xor
dec
loop
add
push
imul
sub
ja
mov
aad
mov
stos
or
jecxz
mov
push
iret
sub
lods
mov
in
test
push
and
inc
and
mov
jecxz
pusha
add
adc
cmp
stc
dec
jle
out
int
xchg
imul
xor
adc
or
sbb
fs
ret
sbb
pushf
dec
jp
mov
inc
addr16
aad
fistps
mov
jge
mov
fld
stos
mov
xor
cmpsb
cmp
adc
jmp
orb
outsl
cmp
sub
testl
movsb
outsb
shll
test
mov
xchg
jge
fistps
inc
imul
je
int3
negb
cli
inc
mov
jg
popa
and
imul
jmp
aaa
lret
jp
icebp
lods
out
popf
es
adc
loopne
adc
aas
in
push
fcmovnb
lret
pop
pusha
mov
and
jb
mov
test
stc
popa
in
movsb
push
addb
sub
lret
loop
sbb
sbb
xchg
push
and
out
gs
or
jecxz
es
inc
mov
cmp
inc
xor
xor
mov
xor
jg
pop
mov
rolb
hlt
mov
lret
add
iret
or
mov
or
jge
dec
xor
hlt
fidivrs
lcall
xchg
ret
push
mov
sbb
mov
decb
fs
jge
jge
loop
mov
lds
or
mov
and
insl
sarl
divl
mov
inc
xchg
cs
psubsw
jecxz,pn
mov
es
bound
arpl
insb
daa
out
nop
sub
addb
mov
loope
pop
loop
push
add
adc
adcb
int3
push
nop
mov
jne
inc
fildll
inc
bsr
lahf
adc
add
arpl
mov
test
cmp
pop
std
xchg
test
inc
mov
jle
pop
out
adc
mov
or
js
mov
pop
movsl
rcrb
pop
iret
mov
into
rcrw
das
xchg
lahf
sub
jb
jne
test
popf
icebp
jae
popa
mov
jmp
lods
push
jo
or
xchg
inc
sarl
in
repz
cltd
out
in
push
sbb
mov
js
enter
dec
out
mov
std
fsubrl
push
mov
xchg
inc
stos
xchg
inc
lahf
js
push
cmp
arpl
push
notb
or
fistpll
ss
mov
mov
mov
sbb
and
mov
clc
orb
das
xorb
movsl
cld
movl
jg
outsb
mov
mov
pop
cmpsb
pop
xor
jecxz
push
mov
adc
cli
sbb
nop
lret
fs
insb
loopne
fbstp
stc
xchg
jmp
push
mov
jmp
sbb
cmpl
stos
cmpsl
ljmp
add
mov
pushf
out
ret
lret
aam
jmp
out
rolb
repnz
rorl
jp
cmp
push
repz
jp
out
sar
in
sbb
into
mov
popa
lods
jmp
bound
sbb
and
dec
into
cmp
in
mov
icebp
jb
push
jb
scas
xchg
mov
xchg
test
test
and
cs
dec
jae
iret
out
cmp
pop
inc
sbb
mov
push
ret
cld
mov
aam
aas
push
data16
cmpsl
out
lret
mov
fdivs
sub
adc
out
ds
ss
scas
test
insb
das
push
pop
je
sbb
push
cmp
sbb
jg
ljmp
popf
sbb
aad
repz
push
ljmp
int
aam
lods
daa
pop
pop
push
xchg
test
mov
jle
loopne
cmpsb
and
insl
mov
icebp
cmpl
push
dec
xor
mov
repz
into
inc
jmp
adc
sub
imul
or
xchg
jmp
sub
dec
mov
ds
je
pop
icebp
stos
mov
push
popf
mov
cmp
cmp
ds
jbe
js
out
mov
mov
sbb
or
test
or
je
xchg
loope
sbbl
movsl
sti
mov
enter
dec
push
jl
pop
insl
fidivrl
addr16
mov
pop
pop
sbb
sti
add
shlb
int
push
shll
adc
into
andb
jnp
fisubrs
shlb
aaa
jno
sub
loop
push
sub
arpl
and
sbb
fs
lock
movsl
jge
stc
cs
out
aaa
shl
orl
push
inc
ja
cmp
push
adc
mov
fcoms
mov
jmp
sub
mov
lods
add
into
sarb
and
ffreep
ss
push
pusha
xchg
fwait
pop
mov
pop
xchg
das
addl
pop
jae
call
dec
mov
pop
dec
out
push
nop
xchg
jecxz
popa
test
fstpl
mov
cmpsb
rorl
stos
add
adc
gs
les
lret
push
outsl
inc
dec
cmpsl
jno
lods
xor
xchg
rorb
mov
ret
cs
and
int
mov
push
lahf
fidivrs
stos
cmp
sahf
cmp
push
sub
aad
xchg
dec
cs
jge
xchg
jns
or
mov
and
das
pop
dec
inc
sbb
data16
or
xor
xor
cmc
jle
icebp
es
pop
leave
xchg
cmpsl
pusha
addr16
pop
ds
pop
sub
sub
out
insl
mov
movswl
addb
test
in
adc
mov
push
loope,pt
enter
out
mov
cmc
jge
out
xchg
jp
pop
inc
sub
test
mov
xchg
test
dec
sub
mov
and
mov
add
jae
les
call
mov
mov
push
imul
les
inc
imul
mov
mov
sbb
mov
mov
fimuls
pop
cwtl
xor
loop
inc
pushf
push
ret
push
imul
pop
push
pop
cld
jle
xchg
cmc
mov
shrl
adc
dec
cli
sub
or
out
loope
ficoml
pop
cld
cmp
inc
push
sbb
out
outsb
push
orb
ret
add
sub
aad
insl
scas
in
cli
pop
add
fisubrl
sub
jno
cli
outsl
mov
daa
cltd
mov
fwait
hlt
sbb
das
les
pop
ffreep
push
jo
ja
push
gs
les
stc
push
push
xchg
aam
cmp
mov
dec
movsl
xor
data16
cmc
popa
and
jne
xorl
xor
cmp
mov
pop
ret
out
loopne
ja
lods
mov
or
mov
call
mov
mov
mov
jae
xchg
orl
pop
jnp
ret
cmp
adc
out
pop
mov
xchg
int
pop
inc
in
loopne
cs
add
sub
push
aam
mov
mov
xor
push
ljmp
lock
das
adc
enter
sub
and
sub
js
in
insb
pop
inc
push
mov
test
stos
mov
xchg
pop
mov
stc
pop
mov
fsub
outsl
mov
adc
mov
cmpb
pusha
dec
add
xlat
sbb
in
inc
push
sarl
cmp
pop
test
xchg
mov
das
xchg
dec
mov
in
mov
adc
xlat
push
push
push
push
mov
mov
sti
stos
push
arpl
xor
insl
jmp
es
or
inc
cmp
push
fs
ljmp
sub
inc
sbbb
push
mov
dec
ss
add
fcompl
cmp
add
and
jecxz
aad
cmpsb
in
mov
sbbb
jbe
int
fs
mov
adc
scas
sub
inc
mov
pushf
out
pop
fwait
mov
das
test
sub
ret
xor
inc
inc
in
fcmovu
lock
add
push
and
sub
out
jnp
pop
lahf
xchg
sub
shr
arpl
adc
and
inc
test
cmc
and
icebp
cmp
add
jle
cmp
pop
dec
pop
mov
mov
mov
jge
mov
lret
sub
sub
xlat
push
pushf
fsubrp
and
inc
lret
xchg
sbb
xor
mov
mov
dec
xorl
inc
mov
lahf
dec
int3
dec
mov
xchg
mov
data16
xchg
mov
mov
mov
xor
fstps
stos
out
cmp
mov
loope
pop
mov
pop
xor
sti
das
and
movsb
int3
cwtl
xchg
insb
imul
mov
pop
inc
fsubrl
push
sub
xchg
xlat
popa
jecxz
scas
jns
and
push
es
pop
shl
xlat
xor
inc
xor
ja
pop
mov
testb
jnp
adc
mov
dec
push
popf
aas
repnz
cld
xlat
mov
jle
ja
jecxz
and
popl
pop
std
mov
and
scas
in
jnp
lds
dec
cmpsl
pop
dec
in
fistl
test
push
sub
mov
xorw
inc
and
fistps
mov
xchg
clc
lods
xchg
fwait
sahf
stos
jmp
out
sar
dec
cmovns
ret
jbe
mov
xchg
xchg
mov
scas
cmp
fldt
fwait
push
mov
jb
shrb
push
out
jl
lret
ror
jl
je
dec
lock
xchg
pusha
lods
test
add
jg
mov
or
fiadds
adc
ja
mov
idivb
call
daa
shrb
fcmovnu
ret
loopne
mov
fsubrs
or
loop
fwait
ss
mov
arpl
sti
cmp
xlat
mov
dec
pop
and
cli
add
add
lahf
enter
dec
repz
cmp
cmpsb
and
adc
pop
fcomi
fadd
sbb
xor
jb
cmp
xchg
add
add
add
pop
mov
ficomps
mov
inc
or
cmp
or
fbld
test
mov
lea
push
sub
subl
shll
dec
sub
les
cmpsl
enter
nop
out
std
xor
ja
mov
arpl
leave
xor
sbbb
inc
std
or
jo
add
std
repnz
test
gs
testb
pop
adc
stos
xchg
xor
dec
jnp
gs
inc
loopne
pop
int
xchg
popf
xchg
pop
aam
adc
or
mov
sub
jae
mov
ror
scas
cwtl
xor
or
les
or
mov
cltd
jb
mov
stos
leave
lcall
pop
adc
insl
and
jno
lahf
xchg
cmpsl
lret
jmp
xorl
jb
mov
arpl
mov
jo
sbb
dec
mov
xorl
inc
icebp
mov
sti
mov
mov
xor
sbb
rcrl
stos
pop
cmp
sub
or
pop
mov
or
ljmp
js
nop
dec
xlat
mov
push
jbe
test
xsha256
cmpsb
pop
stc
and
mov
cmc
push
pushf
push
lea
int
jle
iret
cmpsb
icebp
mov
imul
sbb
pop
stos
and
adc
int
xor
clc
mov
jno
hlt
cltd
aad
jmp
sbb
push
data16
into
inc
cmp
and
popa
fsubr
lods
push
subb
xchg
mov
scas
lock
and
lds
lods
push
dec
in
test
out
leave
adcl
int3
into
addb
dec
mov
push
xlat
fdivl
cmp
mov
out
leave
sahf
adc
sbb
pop
push
xchg
cmp
or
fstpt
xchg
mov
lahf
subl
leave
test
sbb
adc
shr
adc
int3
pop
cltd
nop
test
data16
aam
add
xlat
inc
push
or
jns
aad
jl
es
inc
mov
xchg
pop
test
mov
inc
das
sub
addl
in
dec
dec
adc
pop
paddusb
sbb
xlat
push
call
gs
rcr
sbb
rclb
mov
mov
movsl
jo
mov
push
ss
pop
jnp
test
push
jle
mov
or
mov
jmp
insl
xchg
mov
mov
es
stc
fisttpl
sti
hlt
loop
insb
jg
stos
les
rcll
aad
daa
pop
stc
ret
inc
loope
pop
enter
aas
es
dec
imul
cmc
fbstp
push
lcall
dec
cld
mov
pop
or
lods
lret
imul
or
ret
jl
sub
imul
fmuls
in
push
mov
outsl
inc
dec
into
or
mov
lea
sub
sub
insl
jnp
shll
cmp
inc
adc
mov
fmul
push
sar
jb
sub
and
cmc
mov
incb
xchg
pop
inc
mov
inc
dec
imull
mov
lods
pop
or
in
nop
je
lds
add
mov
jne
jae
xchg
cs
fcmovnu
add
sub
fs
jno
orb
inc
div
add
aam
pop
jbe
pushf
mov
or
gs
insb
addr16
mov
insl
mov
sbb
xchg
fcmovne
cmp
arpl
add
jnp
dec
popa
mov
xchg
lcall
and
pusha
mov
loop
call
or
inc
and
push
inc
mov
mov
adc
pop
or
add
pop
mov
sti
addb
dec
rcrl
mov
push
pop
push
idivl
pushf
outsl
mov
jbe
test
dec
enterw
pop
aas
cs
mov
inc
movsb
pop
orb
adc
repz
sbb
jo
jne
shrl
in
or
aad
sub
xor
btc
mov
push
push
push
lahf
adc
mov
jns
add
push
lcall
mov
mov
lods
or
fdivrl
mov
stos
dec
push
outsb
clc
ljmp
rcrl
aaa
pop
ja
ja
pop
mov
or
dec
sub
cwtl
mov
cld
inc
out
mov
lret
sti
cmpsl
sbb
jp
jl
data16
and
imul
movsb
pop
ficomps
cmp
lret
pop
add
in
and
lcall
cmp
clc
push
pop
push
popf
adc
mov
xor
push
addl
stc
sbb
adc
inc
ret
gs
mov
mov
sub
daa
imul
cld
loopne
movsb
fdivr
or
js
mov
mov
movsl
jae
data16
out
gs
sub
jge
repnz
cmc
dec
stc
push
push
lret
dec
ja
dec
js
or
push
jae
mov
or
pop
mov
mov
cmp
push
sub
daa
and
xchg
jle
test
cld
imul
dec
repnz
out
fwait
cli
hlt
cmp
cmp
mov
loopne
xchg
loop
mov
jecxz
cli
mov
stos
mov
mov
push
adc
fs
scas
jnp
inc
jne
mov
fisubrs
pusha
add
push
cmp
loop
or
mov
mov
dec
push
mov
imul
cmpsb
jle
enter
repnz
ret
adc
movsl
imul
lds
cmc
cmpsb
clc
cmp
je
sub
add
out
mov
loopne
testl
into
sub
push
jg
shlb
jno
and
fbld
lds
mov
shl
push
shll
sub
inc
imul
clc
mov
shl
adc
aam
xchg
stos
ret
pop
das
aad
mov
sub
sub
movsb
xor
pop
movb
adc
lods
or
dec
push
enter
mov
rolb
mov
adc
xlat
jnp
inc
mov
jge
dec
sub
lods
dec
xor
jno
cmp
add
insb
hlt
cmp
sbb
xor
aad
push
fisubrl
push
sub
aas
pop
jg
jns
or
scas
or
lods
loop
lock
nop
imul
mov
mov
into
cmc
add
push
movsb
push
sbb
and
sub
movsb
ficoms
pop
leave
test
enter
decl
pop
fnsave
push
jb
stos
xchg
icebp
es
aam
pusha
aas
ss
popf
into
faddp
xchg
mov
add
lret
test
loope
xchg
or
das
mov
call
nop
cmp
inc
in
sbb
test
jne
out
add
xor
pop
sahf
stos
cmp
sub
mov
xchg
sub
ja
xchg
dec
cmp
push
xchg
push
insb
dec
dec
xor
pop
sti
adc
lds
les
addr16
imul
nop
and
fiaddl
sarb
dec
pop
dec
cmpsb
lgs
or
iret
xlat
daa
fcoml
cmp
sahf
pop
icebp
addl
push
and
rcl
sub
sbb
jmp
daa
push
in
in
in
sbb
and
insb
jmp
aad
add
out
popf
in
loope
sbb
xor
xor
js
fucomip
or
imul
decl
cwtl
popf
xor
mov
jne
icebp
cmp
cmp
ja
stos
lea
int
push
xchg
and
mov
in
test
dec
push
lods
mov
stos
fnsave
lret
sahf
mov
pop
adc
dec
rorb
ds
andl
mov
mov
daa
adcb
xor
adc
or
jns
decl
jecxz
jb
sbb
das
cmp
lds
xor
push
add
fs
je
pusha
rcrb
clc
mov
mov
pop
insl
rcrb
movsb
pop
xchg
adc
mov
out
xchg
lods
push
fwait
enter
cmp
add
sahf
or
test
dec
scas
pusha
xor
add
xchg
inc
jae
push
test
das
adc
jnp
adc
xchg
shll
loope
int3
hlt
push
inc
cmp
mov
inc
mov
mov
sbb
adc
ja
and
cli
xor
arpl
pop
dec
xor
stc
decl
hlt
sbb
pop
or
lods
cmp
les
sub
mov
aad
mov
cmp
and
mov
out
add
adc
nop
nop
sub
cld
mov
push
sti
xor
cmovns
mov
dec
subb
inc
aaa
mov
adc
or
sbb
rol
or
clc
mov
clc
cmp
adc
scas
push
hlt
jno
fnstcw
xor
sbb
movsb
inc
mov
add
cmp
test
adc
outsl
xor
push
loop
iret
lock
mov
mov
movsl
sbb
pop
sub
xlat
pop
stos
mov
sahf
lret
fiaddl
push
in
test
cmpsb
xchg
sub
sbb
fsubl
hlt
insb
hlt
sbb
cli
out
and
iret
push
jbe
int3
popf
cmp
push
hlt
es
cmp
xor
test
pop
mov
mov
mov
fcompl
mov
mov
xchg
sbb
xor
mov
in
mov
pop
mov
lods
mov
ss
rclb
inc
sbb
cs
sbb
xchg
pusha
dec
mov
lret
jo
in
outsl
mov
int
in
pop
adc
mov
pop
jnp
jnp
inc
cltd
mov
mov
movsb
cld
enter
lods
push
jge
mov
pusha
add
or
xchg
pop
push
push
xor
imul
ljmp
fists
dec
cmpsl
jb
xor
cld
jle
cmp
push
lahf
mov
scas
aam
jp
mov
pushf
mov
cld
frstor
pushf
aas
out
cmp
push
mov
mov
push
test
jne
aaa
mov
callw
xchg
fwait
dec
add
push
rclb
jl
sub
push
mov
test
mov
mov
mov
inc
fs
es
bound
push
cmp
or
cmp
mov
stos
fisubl
repz
mov
fbstp
mov
push
sub
push
sub
dec
movsl
mov
dec
mov
stos
add
test
cmp
fs
es
or
adc
xor
mov
lret
mov
js
sub
push
xlat
aad
and
jle
in
cld
cmp
out
lahf
scas
aas
insl
or
outsl
mov
push
mov
stos
jo
jnp
inc
dec
mov
fptan
cs
add
rorl
pop
inc
ljmp
out
rorl
mov
lds
and
inc
or
sub
int
push
jle
mov
sbb
and
or
aas
mov
es
mov
jb
hlt
jne
and
xchg
jo
outsl
imul
fcmovbe
xchg
push
mov
leave
subb
sahf
cwtl
lret
sbb
dec
xchg
fs
shlb
or
push
xor
mov
lret
and
ja
call
loopne
xor
fcoml
iret
pop
arpl
xchg
test
sub
cmp
test
leave
in
adc
fldenv
add
xor
inc
xchg
shr
cmp
dec
pop
addr16
rcrl
xchg
inc
or
leave
jecxz
jns
mov
jb
cmp
je
mov
notl
adc
dec
pop
test
xor
mov
popf
ret
jnp
leave
repnz
inc
out
lret
in
inc
ret
jle
mov
jo
mov
and
and
sbb
sahf
rcrl
cmpsb
adc
mov
cmp
out
stos
inc
call
mov
inc
loopne
jle
add
idivl
dec
lahf
adc
sbb
xchg
sub
dec
and
push
xor
sti
xchg
mov
sahf
xchg
icebp
pop
inc
insl
mov
xchg
push
movsl
mov
xor
xor
cld
sub
les
dec
push
out
aam
add
pop
imul
sti
jnp
cmp
cmpsl
mov
xor
popa
int
adc
int3
push
mov
fsubp
insb
adc
push
loop
mov
sbb
dec
add
push
in
mov
fucomip
xor
xchg
movsl
add
xchg
xchg
sbb
scas
sbb
adc
aas
out
enter
adc
ja
es
pop
addl
dec
repz
cmp
fcmovu
cld
lcall
shrl
shll
sub
dec
push
rolb
push
dec
icebp
popf
jle
aas
les
and
addl
mov
mov
pop
mov
or
scas
xor
les
mov
adc
loopne
ljmp
pop
loopne
jmp
jmp
mov
add
ja
aam
xchg
inc
pop
lcall
test
ret
jecxz
or
xchg
add
or
inc
repz
xor
add
dec
addb
in
aas
repz
jmp
jne
es
scas
or
pusha
xchg
aad
nop
and
jl
add
sbb
shl
add
jae
in
addr16
jp
movsl
test
shr
mov
and
outsl
cmp
or
jne
mov
cs
fwait
or
mov
insb
push
jb
mov
mov
int3
subb
jecxz
cmp
outsb
jnp
add
xor
mov
cltd
dec
rolb
enter
sbb
repnz
fchs
lods
add
sbb
out
lods
add
dec
stc
int
stos
push
xchg
imul
lock
out
not
push
adc
stos
adc
xchg
stc
int
shl
xchg
dec
cmpsb
bound
mov
mov
lock
inc
mov
mov
and
sarl
pop
leave
pushf
xor
cld
jmp
sub
pusha
outsl
out
push
dec
jle
jle
inc
sub
inc
pop
movsl
sub
push
aam
and
mov
lahf
movsb
data16
pop
pop
pop
stos
rol
mov
sbb
push
inc
cmc
adc
je
pop
or
and
jb
push
and
pop
das
mov
cmp
dec
call
addb
sahf
add
adc
data16
sbb
jmp
jl
cld
sbb
sub
into
cwtl
flds
or
int3
mov
cmp
adc
sub
and
clts
stos
mov
add
pop
xlat
lods
pop
test
hlt
popa
dec
jno
lods
push
or
and
lret
fisttps
xor
dec
in
cwtl
add
mov
add
jns
mov
pop
sub
mov
das
int
std
add
shr
test
loope
pop
into
sbb
enter
les
or
in
pop
or
pop
movsl
rol
mov
in
add
push
aaa
stos
daa
push
sub
pop
push
add
xchg
cmp
subb
out
test
mov
outsl
stos
dec
clc
dec
sarl
lea
sbb
lret
inc
lods
xchg
addb
stc
out
or
into
sbb
icebp
or
add
icebp
test
inc
orl
xchg
adc
pop
add
pop
in
enter
test
outsl
jnp
repz
js
inc
imul
xor
cmp
addr16
fsubrl
sbb
push
dec
xchg
dec
shl
adc
add
mov
aam
out
cs
cmpsb
jno
sub
mov
outsb
jae
pxor
stos
hlt
pop
cmp
call
pop
fldl
add
jg
into
pop
inc
add
ja
sub
out
and
pop
push
jl
es
cmpsb
cmp
loopne
insl
pop
pop
add
sub
push
outsb
cs
xchg
pop
dec
outsl
cmc
cld
xchg
addr16
pop
mov
dec
mov
mov
dec
dec
ja
sti
int3
ret
jno
sbb
cmp
inc
xchg
push
mov
test
dec
jp
jns
fdiv
jno,pn
pop
push
mov
inc
xor
or
sub
xchg
not
mov
rcrl
and
ret
into
ret
rol
scas
js
and
mov
stos
std
pop
gs
int
jge
mov
inc
mov
js
fdivs
outsl
jno
sub
jo
jle
loopne
popa
sbb
aaa
sub
sbb
in
pop
cld
in
shl
add
ss
sub
cmp
adc
insb
sub
jmp
mov
xchg
mov
xor
pop
fwait
cwtl
ljmp
iret
fwait
es
dec
pop
push
pop
inc
cmp
mov
add
or
cmpsl
imul
xchg
add
cmp
sub
cwtl
jg
shr
mov
jle
shlb
fmuls
out
sub
fisubl
stc
mov
add
add
push
inc
stc
mov
jecxz
f2xm1
ljmp
icebp
xchg
les
sahf
inc
push
inc
das
xchg
dec
jmp
ret
cld
pop
cli
aam
mov
cmp
fwait
pop
fmul
aaa
test
or
scas
jp
adc
das
pop
test
xchg
nop
push
mov
xchg
mov
push
out
add
jge
dec
xchg
adc
stc
pop
mov
sub
adc
jmp
in
popa
or
adc
mov
adc
insb
cmp
repnz
cld
faddl
js
mov
icebp
popa
imul
add
aaa
fnstsw
mov
or
mov
mov
out
inc
mov
out
and
cmp
inc
pop
mov
or
mov
sub
inc
dec
or
dec
insb
cmpb
adc
adc
or
fdiv
cmp
dec
mov
inc
inc
nop
xor
add
pop
cld
rolb
in
inc
xchg
push
mov
in
jne
pop
jns
jecxz
cmpsl
pop
adc
test
rolb
rcr
icebp
hlt
push
dec
inc
add
shlb
cli
xor
movsl
fldenv
xchg
jle
fists
test
mov
lret
or
jbe
inc
add
ss
adc
jg
mov
fcomps
xchg
sub
call
insb
lret
popf
jae
mov
popa
ficompl
adc
mov
jo
pusha
f2xm1
mov
dec
jne
jle
adc
pushf
test
dec
cmc
fs
test
xchg
add
aaa
fs
xchg
cmp
sub
sub
pushf
or
inc
adc
adc
pop
scas
add
mov
shl
mov
add
das
fwait
and
ret
js
sbb
ss
lret
sbb
iret
jns
mov
push
mov
lcall
mov
add
add
popa
test
dec
dec
jns
in
push
leave
lea
add
adc
jge
push
xchg
fcomps
rcr
std
jo
pushf
pop
outsl
mov
inc
out
sub
out
mov
sbb
hlt
imul
idivl
inc
sub
sbb
xchg
ret
shrl
jno
sbb
mov
addb
scas
aad
sarb
dec
clc
mov
test
sub
test
loope
mov
stos
cmpsl
jmp
mov
and
out
sbb
push
rorl
clc
lods
ret
gs
sti
out
pop
sbb
shl
xchg
add
mov
pop
push
dec
xchg
lock
leave
jb
xor
and
xchg
jo
cmp
or
cltd
sbb
in
ss
incl
cltd
imul
xchg
cmp
movsl
loopne
pop
sbb
add
or
repz
sbb
loope
rcrb
mov
shlb
ss
loope
add
shl
dec
dec
pop
fldcw
inc
pop
aaa
stc
mov
arpl
sub
test
insl
xchg
cmp
inc
test
mov
sub
jp
xchg
test
inc
stos
ja
push
outsb
nopl
clc
bound
xor
or
xor
and
dec
shlb
xor
jp
aas
ja
rsm
push
das
in
dec
xor
dec
mov
icebp
sbb
out
cmp
adc
addr16
push
cld
in
insl
add
lret
roll
xchg
xor
repnz
hlt
sbb
push
aaa
rcl
mov
sub
sub
inc
dec
js
jmp
hlt
sbb
lock
sbb
imul
ja
cmp
popa
test
xchg
les
ss
fwait
test
lret
daa
jno
mov
bound
dec
xor
es
ljmp
push
fidivrl
mov
dec
and
std
cmp
aas
in
cmp
je
out
aaa
arpl
gs
addr16
pop
lds
inc
adc
inc
insl
jbe
add
lock
cmc
sar
aas
mov
mov
out
pusha
aas
pop
xchg
ret
mov
xchg
ficompl
dec
xchg
jae
stc
cmc
incl
cmp
popf
addr16
sub
push
outsl
dec
or
ret
loope
push
pop
icebp
pushf
popa
add
pop
mov
pop
dec
loop
push
mov
xor
pushl
pop
insb
repz
loop
and
pop
pop
adc
jno
push
cs
cmp
adc
outsl
mov
pop
movsl
fwait
ds
daa
dec
mov
pop
sbb
dec
and
daa
mov
mov
mov
dec
fbstp
fcoms
out
mov
mov
dec
mov
xchg
mov
add
mov
jecxz
pop
push
and
push
fcomps
lahf
lahf
sub
mov
or
cmc
fildll
into
repnz
outsb
cmp
jg
push
xlat
int3
or
and
mov
pop
mov
gs
cmp
sbb
outsl
push
sbbl
adc
ret
xor
stos
pop
inc
lods
out
mov
adc
clc
or
sub
ja
push
mov
rclb
mov
stc
iret
sbb
fwait
in
mov
out
push
adc
xchg
rcl
dec
jecxz
into
stos
jp
popa
mov
pop
call
psrlq
jmp
jns
mov
xor
adc
fisubl
test
pop
cmp
mov
push
lea
xchg
stos
test
jle
scas
jl
call
cmp
pop
ja
mov
jle
inc
lret
jnp
sub
dec
popf
aam
xor
pop
push
stos
mov
std
ret
bound
and
sbb
and
mov
sub
jg
aam
sub
and
and
dec
outsl
das
nop
out
jae
out
xor
sub
inc
jae
push
push
out
gs
into
stos
adc
inc
rol
jg
mov
sub
test
dec
pusha
mov
push
movsb
mov
push
fists
mov
inc
or
pop
mov
cmp
or
std
dec
lock
cli
xor
bound
jg
or
ss
cltd
cmpb
stos
mov
fs
test
popa
in
rol
aaa
lea
imul
out
inc
inc
fwait
loopne
movsb
xchg
inc
cltd
sti
adc
enter
in
adc
push
adc
leave
jns
pop
in
jl
stos
sarl
mov
out
mov
fcompl
add
mov
jnp
icebp
popf
add
les
add
ljmp
adc
push
and
xor
in
mov
dec
dec
mov
lods
shrl
ljmp
lcall
dec
lea
add
add
fwait
jbe
mov
or
test
enter
sahf
mov
mov
cmp
sub
sbb
aad
or
and
adc
cmp
inc
je
cs
mov
lds
ror
and
or
decl
xor
lret
in
push
cmp
jae
cmc
comiss
es
dec
xchg
sbb
push
leave
mov
cmpsb
shlb
iret
adc
jns
out
xor
xchg
lret
ja
jbe
and
jmp
out
jae
pop
mov
std
out
or
les
or
or
nop
adc
mov
lock
adc
mov
call
cmp
push
sbb
aam
adc
push
jnp
mov
dec
jb
fwait
sub
adc
aam
jbe
out
iret
icebp
lret
popa
add
or
dec
stos
inc
mov
imul
scas
jb
push
jge
lret
pushf
adc
mov
push
lods
sub
adc
imul
adc
lea
cwtl
movsb
mov
inc
test
sti
stos
cmova
lods
std
and
jbe
imul
scas
shlb
mov
pop
scas
lods
lret
mov
and
sub
stc
lcall
jp
adc
cltd
decl
sbb
pop
daa
and
test
sarl
sub
addr16
test
lea
push
dec
and
pop
mov
lahf
test
imul
cmpsb
push
add
xchg
mov
std
xchg
test
cld
cmp
add
sbb
frstor
or
push
sbb
subl
ret
testl
mov
or
movsb
pop
mov
imul
lds
loopne
imul
iret
icebp
mov
cmc
push
std
lcall
ss
mov
push
fstpt
mov
add
inc
xlat
sbb
push
cmpsl
pop
shl
shll
push
push
or
inc
or
fisubs
or
pop
les
mov
and
mov
or
test
scas
repz
lds
imul
pop
cmp
lcall
in
sbb
xor
out
lock
addr16
mov
test
leave
outsb
jbe
lods
mov
imul
mov
push
push
pop
add
and
jns
movsl
pop
stc
pop
ds
sarb
fldt
xor
push
jne
or
jo
mov
mov
negl
aas
sarl
sbb
jb
in
imul
inc
outsl
jbe
nop
outsb
in
xor
out
mov
fistpll
jl
xchg
ds
mov
repz
sub
xor
jb
aad
movb
dec
cmp
mov
sub
xor
arpl
pushf
fidivrs
sarb
cmpsb
loop
out
arpl
xor
xor
fisttpl
cld
or
xor
jb,pt
mov
stos
imul
mov
stos
iret
jb
sub
xorb
xor
pop
pop
in
out
mov
xlat
xchg
lods
add
mov
mov
and
xor
pushf
sub
cltd
xchg
in
icebp
lahf
rcl
sahf
cli
mov
add
adc
sbb
xchg
mov
push
rclb
in
push
pop
pop
sub
jnp
mov
jmp
jbe
subl
call
sub
jp
stos
mov
stos
mov
push
xchg
out
loop
xchg
movb
lock
int
test
sbb
fnsave
or
cmpsb
cmp
dec
or
int3
xor
mov
xchg
ja
pop
sub
ret
inc
adc
in
mov
xchg
out
movntq
out
push
sbb
push
loopne
in
repnz
imul
xchg
repnz
cli
in
jp
subl
inc
mov
movsb
mov
ret
add
stos
adc
pushf
or
xor
lcall
stos
sbb
pushf
addl
cmpsb
dec
out
and
ret
je
cmc
dec
and
dec
dec
pop
jp
mov
sbb
mov
mov
ds
or
cmp
leave
fisttpl
out
or
add
repnz
xchg
decl
hlt
sbb
and
inc
insl
jle
mov
mov
or
push
pushw
popa
outsl
scas
sbb
add
pop
xchg
adc
adc
push
xchg
imul
cwtl
sub
imul
xchg
mov
adcb
jl
and
mov
popf
push
daa
jae
test
mov
cmp
push
lods
push
pushf
inc
or
add
jmp
mov
daa
fs
bound
jns
pop
xor
push
loop
sub
mov
sub
adc
pop
mov
mov
push
push
jae
icebp
xchg
in
orb
cs
lods
out
test
je
xchg
xor
xor
adc
mov
push
mov
std
popa
sbb
pusha
pop
inc
test
cmpsl
sbb
and
stos
push
sub
inc
xor
add
clc
ja
les
xchg
ljmp
jnp
out
out
inc
insl
sub
adc
sahf
push
popf
inc
pop
test
lret
sub
mov
adc
cmp
fwait
push
sbb
push
xchg
dec
xorl
out
or
push
shll
ljmp
loop,pt
jne
movsl
dec
or
call
mov
nop
call
jmp
jl
loopne
int
scas
lock
push
ret
cltd
jl
nop
in
cs
fistl
mov
push
and
das
xchg
sbb
addr16
in
xchg
test
push
cli
xor
dec
insl
iret
adcl
movsl
xchg
xchg
or
jne
mov
mov
cli
push
rep
mov
mov
ja
push
into
ds
mov
dec
int
adc
jmp
mov
test
fs
addb
outsb
dec
cmp
sbb
ds
sbb
push
jle
imul
sbb
inc
and
and
pop
sahf
loopne
inc
mov
add
out
mov
rclb
sbb
mov
out
push
mov
dec
icebp
outsl
inc
pop
les
dec
add
pop
cmp
and
adc
xchg
adc
fnstenv
inc
sbb
cmp
lret
das
fcomps
je
enter
inc
pmaddwd
in
pop
xchg
xlat
imul
xchg
sbb
cli
inc
fisubrl
ret
fucomp
xchg
test
addr16
jge
movsb
dec
dec
dec
outsl
add
jno,pt
movsb
mov
nop
cmpsb
push
cmc
cmp
mov
fcom
cmp
xchg
rorb
push
sti
call
xchg
adc
popf
lret
and
mov
inc
lods
nop
cmp
test
fsubrl
or
hlt
test
jmp
push
mov
xchg
ds
adc
aad
cwtl
mov
push
cli
add
mov
pop
jl
mov
sbb
jmp
stc
xchg
cli
ss
sbb
andb
add
test
das
icebp
jg
jns
xor
cmp
or
rol
loop
jecxz
outsl
adcl
fadds
push
sbb
mov
aaa
mov
movsb
inc
cmp
adcb
or
xor
fldl
hlt
pop
ljmp
xor
cmpsl
mov
clc
mov
add
xlat
lods
jp
mov
pushf
scas
call
mov
jl
andl
jmp
sti
mov
rorl
fdivs
cmp
jb
push
push
and
es
cmp
shl
jae
fsub
imul
cld
lret
inc
mov
xchg
or
sbb
jg
inc
dec
jge
loop
push
sti
ss
jl
mov
mov
pop
int3
and
cmp
cld
push
or
ja
cmpl
test
cmc
sbb
frstor
gs
in
push
cmc
or
cmp
bound
idivb
addl
pop
nop
loop
mov
mov
mov
ret
jl
sub
sbb
pop
insl
xor
outsb
and
inc
movsl
aad
jg
jge
xchg
sub
daa
fcmovb
out
test
sub
daa
dec
loop
out
mov
jmp
jo
ret
imul
into
mov
test
mov
out
call
stc
fwait
xchg
outsw
das
sarb
mov
in
sqrtps
mov
int
testl
mov
jns
add
js
jbe
xchg
mov
insb
loop
js
xor
lods
in
fwait
jmp
pop
pop
pop
icebp
dec
enter
leave
mov
movl
int
xor
xor
sbb
dec
dec
imul
pop
nop
push
mov
repnz
mov
cmp
stos
cmpsb
and
sarl
std
add
ret
inc
or
sub
push
push
add
movsl
cs
outsl
outsl
lcall
int3
sahf
mov
fdivrp
fildll
sti
xor
inc
insb
call
jmp
out
or
das
sti
xor
test
imul
push
add
loopne
shrl
push
mov
loopne
push
and
cmp
jecxz
inc
outsb
cltd
mov
push
sbb
das
sar
shrl
mov
mov
adc
pop
pop
push
icebp
jle
xor
or
inc
rcrl
jne
lret
insl
popa
adc
cli
xchg
sub
jne
push
out
push
xlat
cmpsl
lods
aad
mov
ss
inc
pop
dec
dec
adc
jo
ret
es
fiadds
push
mov
or
loope
shrl
pushf
and
xor
iretw
stos
flds
mov
sbb
lea
cmp
lret
cs
gs
xor
dec
nop
dec
add
push
cs
popf
addl
xor
mov
adc
inc
pop
jg
or
fucomp
add
jg
test
inc
xchg
push
call
jmp
shlb
lods
inc
inc
or
mov
sti
mov
xor
sahf
leave
addr16
pop
pop
cli
mov
xchg
pop
pop
stos
fidivl
adc
and
and
cwtl
inc
or
cltd
mov
cs
adc
cmp
sbb
mov
cmp
pop
std
mov
pop
or
ljmp
pop
test
test
aas
pop
xor
scas
je
stc
shr
add
pop
cs
push
push
test
das
xchg
push
out
dec
push
loop
mov
and
lods
decb
pop
sbb
mov
mov
es
dec
cld
jmp
repz
outsw
cmp
insl
stos
das
nop
adc
lods
sar
mov
inc
xchg
mov
ds
out
xor
mov
repz
lret
fadd
andb
inc
outsb
xchg
movsb
rol
sti
dec
mov
mov
das
idivb
jo
xlat
sbb
or
rcrb
fiaddl
mov
mov
jp
xchg
fdivrl
aad
clc
and
cmp
xor
pop
and
fnsave
daa
or
jecxz
and
xchg
int3
mov
mov
lock
or
ss
je
sar
ret
rolb
in
movsb
dec
cmp
inc
popa
negb
stos
mov
adc
nop
pushf
inc
popa
push
jg
jp
push
lock
dec
pop
push
ljmp
stos
push
or
scas
call
pop
call
pop
imul
mov
call
mov
std
xchg
hlt
stos
int
fbld
mov
and
fcoms
mov
sti
pop
push
or
mov
or
pop
push
testb
mov
push
loopne
adc
ret
jnp
jecxz
mov
jo
scas
jp
sbb
negb
aad
mov
rcrb
in
mov
dec
xchg
lods
sahf
aaa
out
movsl
xchg
out
or
pop
fcomps
pushf
dec
xlat
popf
push
jbe
scas
fbstp
cmpsl
xor
xor
call
and
std
pop
jl
repz
pop
cs
fidivl
xchg
in
mov
sub
jp
push
shlb
lock
xchg
out
lea
mov
xor
xchg
sbb
imull
cwtl
lahf
pop
es
dec
fbstp
xor
add
scas
imul
jno
cmp
fmulp
je
pop
stos
pusha
mov
repz
xlat
dec
pop
adc
std
test
iret
popa
sbb
out
add
jmp
popa
daa
add
mov
pop
int
sahf
ret
ljmp
xchg
ss
jnp
jo
cmpsb
pushf
pop
jg
mov
fdiv
cmp
add
test
ja
stos
jmp
adc
push
push
test
lret
xchg
and
mov
adc
out
sbb
mov
fs
inc
push
adc
sbb
js
mov
push
jno
leave
push
inc
pop
push
and
jmp
call
or
mov
and
movsb
mov
add
sub
push
mov
push
push
cltd
out
and
push
ljmp
cmp
push
mov
dec
adc
add
inc
xchg
inc
les
mov
cmp
or
mov
xlat
popa
inc
jo
lret
xor
mov
imulb
mov
lds
fstps
sahf
mov
pushf
add
sahf
clc
add
mov
mov
pop
xchg
jbe
je
xchg
ja
xor
fldcw
push
adc
cmp
xor
pop
lods
out
and
xor
test
addb
cld
sbb
lea
negl
lahf
and
adc
pushf
add
adc
pop
add
push
adc
imul
gs
lret
cmpsb
pop
mov
push
adc
push
ret
mov
or
call
dec
adc
jmp
xchg
loop
fs
xor
and
outsb
xchg
mov
clc
and
shll
mov
mov
xchg
jl
push
inc
adc
adc
stos
dec
ret
les
stos
out
mov
imul
and
lret
data16
addl
push
push
push
jne
adc
push
sub
call
cs
outsl
pushf
aam
shlb
stc
fs
cld
mov
mov
sti
mov
push
jns
int3
push
pop
push
addr16
jae
loope
jns
je
add
xchg
test
cs
and
imul
cmp
sbb
and
ret
test
jb
pop
lods
dec
fld
pop
es
cmp
sahf
nop
mov
push
mov
mov
jecxz
rcrb
mov
pop
daa
outsl
jnp
or
outsb
push
js
push
fdivl
jmp
movsb
mov
adc
push
ja
push
test
mov
add
add
jnp
jg
push
push
push
xchg
pop
sbb
adc
dec
mov
test
cmpsl
add
in
pop
push
jle
sub
jns
data16
jns
jno
jb
adc
sbb
ljmp
out
ret
ljmp
cmp
mul
jno
or
xor
shlb
nop
push
push
ficomps
rol
lret
ret
cmpl
arpl
and
pop
sub
dec
sbb
mov
cmpsl
int
out
ja
fs
sub
pop
pop
dec
fidivrl
pop
dec
jmp
mov
je
hlt
mov
gs
mov
pop
cmp
sub
lea
fldt
int3
lcall
mov
push
lret
popa
mov
jle
or
xchg
pop
pop
insb
mov
xor
lret
nop
iret
or
test
cli
add
testl
inc
cmp
sbb
cmp
jg,pn
push
aaa
sbb
or
jbe
stc
cmpsl
sbb
inc
movsb
das
out
cmp
addb
into
outsb
out
inc
cmovle
mov
stos
sbb
subl
pop
lea
clc
lods
loop
cmpsb
stc
ja
or
jo
pusha
sub
mov
outsb
icebp
ja
std
add
imul
shrb
dec
push
jbe
mov
hlt
pop
cmp
jl
push
adc
jp
rorb
iret
neg
std
mov
movsb
xchg
add
movsb
cmpsb
xchg
mov
stc
jnp
daa
jae
add
sub
les
in
or
mov
rcll
or
cmp
in
mov
push
push
xchg
jne
ret
pop
xchg
aaa
inc
cwtl
cmp
test
mov
into
lcall
cmp
mov
loope
mov
dec
lods
ret
and
mov
popf
rcrb
scas
push
aad
scas
pop
sarl
stos
cmpsl
loop
sub
inc
dec
and
aam
cs
fs
imul
pop
dec
movsl
xlat
movsl
lock
fiadds
cli
sahf
xchg
out
std
vmovlps
mov
ret
sub
jnp
push
mov
outsl
adc
and
pop
fistps
adc
clc
jmp
add
add
pop
pop
fs
jle
lahf
and
cmp
enter
cmp
pop
mov
jp
adc
idivl
cmp
sub
add
xchg
cmp
movsl
fs
jnp
insl
and
sub
testb
mov
stos
ljmp
inc
aaa
repnz
add
pop
mov
rol
dec
push
loop
jp
jo
add
sbb
xor
lret
adc
mov
js
xchg
dec
fcoms
mov
and
pop
and
or
push
pop
scas
pushf
xor
inc
mov
inc
rcrl
int
roll
cmp
xchg
scas
pcmpeqd
pop
js
test
mov
je
cmp
mov
pop
mov
hlt
or
and
mov
popa
pop
pushf
daa
pushf
xchg
push
inc
sbb
adc
and
insl
push
loopne
andl
xor
in
mov
xor
sbb
push
leave
gs
or
fists
pop
in
mov
xchg
js
add
aaa
adc
insb
test
cmp
xchg
in
mov
aad
jmp
sbb
jbe
jnp
and
addr16
cmp
es
lahf
jbe
orb
insb
testb
push
iret
in
js
dec
andb
inc
xchg
pop
push
lds
lret
test
loop
outsl
sub
cmp
xor
jns
out
push
sbb
inc
les
mov
dec
lods
nop
jo
add
rorl
stos
popf
mov
push
das
rol
aas
sub
or
jge
adc
arpl
in
cmp
fwait
mov
sti
dec
mov
mov
pop
pushl
jae
cld
sub
mov
out
lods
cmp
dec
das
popa
inc
into
jbe
stos
or
pop
xor
cld
push
out
insb
fistl
les
loop
out
les
or
jmp
and
sub
test
pop
jno
je
outsl
movsl
loopne
pusha
add
out
aam
in
loopne
mov
mov
hlt
mov
fwait
inc
jg
push
fimuls
and
roll
pop
cwtl
xchg
fimull
xor
pushf
js
sbb
ret
push
sub
cmpsl
cmovle
dec
mov
add
mov
sbb
lcall
inc
bound
push
inc
into
cmp
dec
ds
out
jecxz
dec
sub
arpl
push
jo
pop
inc
jno
sbb
pop
pop
push
mov
inc
test
pop
out
xor
mov
scas
decl
mov
popa
sti
inc
jmp
negb
push
repz
xchg
inc
iret
test
testb
into
pop
dec
mov
sub
daa
jmp
sbb
xor
sub
fwait
and
sahf
add
test
call
notl
sub
xor
mov
rcl
mov
jle
orb
sbb
mov
adc
mov
insl
mov
jp
movb
test
sub
mov
jo
sahf
jge
movsl
pop
xchg
mov
add
dec
test
fwait
pop
sub
jecxz
inc
adc
movsb
pop
and
dec
jno
xchg
cmp
jp
dec
hlt
daa
cmp
jge
arpl
sub
mov
and
push
fistpl
clc
jmp
lods
xchg
rolb
addr16
cmp
add
test
or
adc
das
lock
mov
in
sub
or
mov
adc
test
shrl
or
mov
sbb
scas
and
cmp
dec
mov
ljmp
xchg
add
je
aaa
outsb
in
xorb
push
pop
push
pop
aas
push
sub
jle
dec
mov
pushf
imul
dec
or
cmc
jb
push
adcb
pop
decl
push
cs
push
push
cwtl
mov
dec
dec
imul
inc
jnp
push
ret
shll
sub
dec
outsb
dec
or
stos
scas
test
sbb
xor
adc
iret
add
gs
nop
or
dec
inc
in
int3
inc
mov
sti
imull
test
add
cmp
lock
imul
sbb
fwait
ret
ret
je
leave
mov
push
push
and
in
or
adc
jmp
mov
sbb
sar
add
call
and
shl
pop
inc
add
mov
or
clc
jo
mov
lods
pop
pop
mov
sub
fwait
add
xchg
push
fs
dec
sub
push
xlat
cmp
cwtl
dec
push
xor
out
outsb
std
into
in
test
adc
adc
cld
cltd
cmp
sbb
adc
cli
mov
sbb
fnstsw
rolb
ds
popa
dec
out
lds
mov
call
ss
cmp
push
cmp
lea
sbb
ds
xchg
sub
lea
xor
push
jmp
fsubrl
jnp
lahf
popa
lods
ljmp
xchg
das
outsb
sbb
inc
push
inc
sub
sbb
loopne
xor
movsb
mov
outsb
inc
scas
mov
xor
mov
mov
xchg
pop
push
pop
cmpsb
aas
cmp
lret
inc
cmc
push
push
repz
pop
jmp
fsubl
das
fs
pop
hlt
lods
mov
and
aam
mov
into
and
sub
pop
inc
jo
dec
fiaddl
jmp
mov
push
jbe
push
add
lods
sti
push
cmc
das
mov
insl
mov
mov
fwait
mov
insl
cwtl
dec
pop
jb
cmp
mov
aad
pop
lret
push
outsl
pop
xchg
in
xchg
ss
enter
or
in
int3
dec
subl
enter
pop
ret
je
fdivrs
mov
dec
cmpsb
ss
pop
cmp
shrl
sbb
shrl
dec
pop
dec
cltd
fnstenv
enter
sub
push
lahf
fldcw
pop
dec
fstl
adc
popa
aad
jle
mov
je
push
popf
push
int
in
mov
inc
stc
mov
jle
dec
int
sahf
leave
jge
mov
cmp
sbb
push
scas
jmp
adc
es
cmpsb
push
es
mov
push
mov
scas
insb
in
scas
lahf
out
aaa
cmp
stos
das
std
pop
push
mov
insb
popa
push
bound
push
movsb
fnstenv
cltd
sub
and
mov
dec
mov
out
pop
hlt
sbb
jp
xchg
in
cmp
pop
pop
add
jo
inc
push
xchg
inc
inc
mov
orb
cmpsl
pop
xor
repnz
xchg
pop
jge
icebp
rcrl
loop
add
inc
lock
adc
mov
sbb
inc
sub
pop
lods
pop
and
rcr
jae
in
rol
repnz
cmp
jne
lcall
mov
mov
cmp
jo
dec
jp
in
sahf
mov
jg
fidivrl
pop
mov
mov
sub
inc
std
ljmp
scas
rcrb
jnp
sub
mov
ficomps
and
dec
push
and
cmp
pop
stc
cmp
pusha
and
xor
shlb
xor
pop
dec
loope
jmp
pop
pop
pop
imul
pop
pushf
jo
or
pop
mov
call
inc
sub
xor
sub
arpl
sub
hlt
decb
rcll
ficoml
movsl
pop
jle
lods
add
and
lds
test
mov
popf
aas
cmc
jo
int3
mov
mov
jbe
push
stc
in
fld1
pusha
mov
aaa
sbb
add
mov
mov
int3
pop
xorl
or
lods
lea
lret
rcpps
in
loop
out
xchg
inc
sub
mov
add
jge
scas
push
lahf
repz
push
cmp
mov
daa
cs
mov
bound
mov
push
cmpsl
xor
jo
jno
std
loopne
sub
adc
testl
jbe
jmp
sub
cmpsb
sbb
pop
iret
mov
adc
and
test
push
push
mov
mov
dec
movsb
and
repz
mov
mov
test
or
add
les
shlb
clc
jo
out
push
xor
pop
push
xchg
popf
mov
addr16
aas
pop
movsl
mov
call
and
das
outsb
cmc
outsl
mov
push
pushf
jle
cmc
jae
cmp
in
pop
sub
xlat
shlb
and
loopne
cwtl
xor
pop
pop
cmpsb
mov
repnz
sbb
enter
leave
push
scas
cwtl
sbb
lea
and
test
ror
mov
push
jp
push
sbb
sbbb
rcrb
mov
int3
cmc
dec
test
cwtl
cmp
lds
cmp
mov
fdiv
ja
lea
and
lods
popf
adc
mov
add
sbb
imul
lret
jge
mov
add
dec
sbb
ret
push
xor
pop
xor
add
mov
or
mov
lret
stos
push
stos
jp
in
sti
pushf
xor
push
cmc
fs
adc
fnstcw
mov
stos
es
adc
pop
fimull
mov
adc
ljmp
in
xchg
or
stos
fcmove
sahf
rcl
out
lea
jbe
jne
ja
xchg
inc
outsb
popa
xchg
ud2
adc
jbe
sub
cmp
cld
clc
cmp
sti
cld
sarb
stos
jbe
stos
movsb
xchg
pop
push
out
and
add
mov
lock
add
pop
and
push
rolb
pop
sti
jmp
daa
mov
pop
cmp
pop
ret
push
out
sbb
insl
push
push
fcoml
or
dec
sti
pop
lods
jg
je
pop
jge
sbb
cmp
cmpsl
into
push
cmp
inc
push
cltd
jne
mov
cmp
repz
mov
jl
in
adc
xor
push
jbe
mov
inc
insl
mov
xchg
xchg
mov
adc
inc
addr16
pop
sbbb
add
int
inc
int
imul
mov
adc
mov
sbb
scas
sbb
mov
sbb
xchg
mov
aas
pop
mov
popf
pop
add
loop
mov
addr16
or
cmp
repnz
jns
bswap
andl
inc
adc
jmp
mov
jp
mov
jecxz
imul
jge
pop
ljmp
jmp
or
dec
sbb
jo
std
ds
lock
jnp
jae
mov
jns
stc
cwtl
adc
into
add
mov
imul
cmp
mov
jge
inc
push
mov
jb
dec
pop
push
pop
lods
shr
dec
jae
fbstp
aaa
jl
inc
inc
adc
mov
scas
icebp
add
inc
fsub
pop
xor
push
and
and
push
dec
test
pop
or
ljmp
xchg
jle
fadd
fwait
sub
pusha
lock
jecxz
mov
jb
je
adc
aaa
xchg
pop
cmp
imul
sbb
push
push
aaa
out
add
sbb
mov
pop
lahf
call
aam
outsl
cmp
jnp
in
adc
sub
push
leave
addr16
lcall
cmp
pop
xchg
mov
mov
and
pop
adc
int
mov
lea
es
in
mov
and
ljmp
hlt
add
sbb
mul
notl
add
loope
fucom
or
cmpl
xchg
mov
pop
jg
out
xor
test
mov
mov
pop
dec
lcall
sahf
out
mov
and
push
roll
pop
sahf
mov
popf
pop
das
sar
mov
sbb
int3
or
ds
scas
jno
lcall
inc
mov
gs
jnp,pt
cmpsb
sub
dec
popa
jne
enter
or
add
shr
div
push
or
jae
test
jp,pt
dec
push
pop
xor
xchg
and
orl
mov
fisttps
and
test
lods
flds
lcall
std
sub
shrl
into
movsl
outsl
xor
xor
aam
or
xchg
addl
push
jmp
push
xchg
mov
adc
jne
and
xor
popf
add
mov
xchg
add
cmp
jp
mov
aaa
movsb
push
lret
mov
mov
sub
sub
jmp
int
pop
mov
fldl
jl
jmp
xchg
mov
aas
push
and
negl
push
inc
lods
pushf
dec
std
cltd
clc
int3
jo
int
add
imul
pop
out
add
jmp
and
mov
sub
testl
inc
shl
pushl
mov
ror
mov
in
movsl
xor
adc
and
call
adc
in
pushf
sbb
insb
adc
ljmp
xchg
stos
or
cmp
dec
pop
lods
inc
cmp
sub
lret
inc
sbb
push
pop
loopne
mov
fisubrs
xlat
cli
sbb
into
mov
rcrb
mov
arpl
insb
sub
outsl
call
sbb
sti
cmovg
jmp
cmpsb
movsl
xchg
pushf
adc
adc
inc
cmp
cmc
push
cmc
mov
or
mov
add
pop
arpl
pop
imul
movsl
xlat
and
push
inc
or
mov
lds
jle
mov
cwtl
test
in
incl
push
pop
or
cmp
or
push
scas
mov
loope,pt
dec
notl
adc
pop
push
mov
xchg
bnd
xor
lcall
cmc
outsb
adc
lea
addr16
cmp
xchg
or
fwait
mov
cmp
push
cld
xchg
lock
dec
fidivl
adc
fsub
sub
pusha
pop
pop
scas
jbe
sub
xor
inc
popa
out
in
daa
popf
mov
rorl
xchg
sub
sbb
or
mov
rcrb
mov
loope
lcall
adc
xlat
sub
int
push
rorb
lret
sbb
push
push
mov
ds
mov
mov
movsl
sub
xor
inc
aad
outsl
out
nop
jbe
in
inc
out
dec
push
and
outsb
outsb
jle
in
jecxz
repz
cmp
inc
xor
jge
push
and
mov
and
xchg
pop
dec
dec
fs
leave
fsts
int3
and
mov
shrl
sti
adc
or
dec
adc
jbe
cmp
and
or
insb
scas
out
rolb
jp
jo
pop
je
or
pop
push
xor
mov
nop
ds
pop
shll
pushf
and
daa
mov
nop
sbb
outsb
jno
push
fisttpl
inc
iret
int
ret
mov
mov
inc
or
outsl
shlb
cmp
jne
or
inc
inc
add
pop
jecxz
adc
mov
addr16
adc
sub
lret
sbb
cld
cmpsl
pop
or
lret
dec
outsb
cwtl
stc
in
xor
roll
subb
cltd
cmpsb
lcall
or
jecxz
clc
and
aaa
test
xorl
imul
test
push
std
scas
jbe
jle
fmull
jnp
and
and
mov
pushf
rcl
xchg
cmpsb
les
aad
push
sub
jb
rcl
push
sub
xor
cmpsb
jnp
enter
mov
call
sub
mov
xor
mov
adc
sub
loop,pt
push
sub
pop
es
mov
mov
mov
jmp
and
outsl
mov
in
loop
xlat
in
js
adc
sti
xchg
mov
add
pop
mov
inc
loope
les
sbb
test
inc
out
jge
je
daa
dec
lods
mov
js
movb
loop
mov
test
into
mov
dec
sub
cli
aas
sbb
mov
push
mov
inc
add
imul
das
add
loopne
repnz
movsl
loopne
mov
dec
and
fldt
jle
mov
ja
scas
nop
and
fs
push
cmpsb
adc
xchg
mov
shll
cmp
imul
jb
push
outsb
jecxz
mov
hlt
xchg
cmpsl
scas
xchg
and
or
in
insb
xchg
adc
push
stos
dec
xchg
pop
lret
pop
cmpsb
cmp
mov
mov
cli
fsubs
xor
dec
adc
push
lret
push
popf
push
cli
mov
adc
mov
addr16
sbb
pushf
mov
fs
cmp
stos
push
inc
into
cmp
adc
pop
mov
xchg
icebp
jo
pop
cmp
xchg
push
shrl
dec
xchg
lret
sbb
sbb
movsl
jge
cmpsl
mov
outsb
xchg
cmp
add
push
sub
push
sahf
arpl
fistps
adc
or
sub
jecxz
aam
iret
jecxz
pop
lcall
push
das
push
cltd
insb
aaa
or
mov
outsb
aas
push
outsl
inc
cmp
mov
cmpsl
test
test
mov
outsb
into
jge
or
add
lods
push
mov
lods
add
adc
and
aam
cmpsb
ja
push
fwait
out
push
test
sub
xchg
rorl
mov
pop
xchg
in
lods
adc
or
movsl
xchg
xchg
stos
mov
cltd
out
mov
fidivrl
enter
cld
ret
jle
fstl
jne
popf
xor
rcll
inc
inc
std
sub
pop
cmp
int3
pop
mov
in
clts
cwtl
sub
xor
lcall
pop
jbe
lock
sbb
pop
jmp
popf
lcall
add
daa
std
es
push
mov
stc
add
mov
lods
push
cmp
adc
mov
xor
push
nop
cmp
add
push
cmp
movsl
mov
cld
faddp
mov
mov
xchg
adc
mov
pop
pop
xorl
mov
xchg
cmovs
jne
negb
loope
nop
xor
out
ds
les
outsl
mov
nop
test
jb
jo
inc
lcall
push
test
sbb
xchg
push
push
fldcw
adc
enter
mov
mov
fdivl
das
push
icebp
xchg
mov
sub
aas
pop
inc
shll
aad
jle
test
adc
jmp
adc
or
mov
jnp
js
movsl
add
cmp
cltd
fadds
daa
push
pop
fs
jo
pusha
gs
mov
lcall
pop
jecxz
mov
jne
dec
cmp
add
cmp
pop
push
faddl
xchg
in
jge
shlb
or
ret
sarb
sbb
fistps
hlt
push
jns
xchg
xor
jbe
cmc
cltd
push
cwtl
sub
scas
pushf
pop
loope
rcr
clc
stos
push
or
cltd
push
in
pop
sub
jmp
mov
pop
xchg
mov
je
adc
xchg
adc
pop
repz
outsb
pop
adc
es
test
dec
inc
or
push
xlat
cs
dec
in
ss
sbb
xchg
in
xor
inc
jle
jg
jne
dec
idivl
xor
push
imull
stos
mov
inc
mov
dec
xacquire
xlat
into
xor
jae
push
popa
jne
or
pop
mov
add
pop
in
sbb
repnz
mov
inc
mov
jp
dec
push
push
cmpsl
mov
cld
gs
mov
cwtl
lock
mov
int
mov
adc
sbb
notl
jno
lret
gs
adcl
inc
repz
push
jp
add
test
jg
ja,pn
stc
jns
cmp
les
or
into
sub
repnz
fcmovb
ret
pop
cmp
jp
mov
sub
sahf
push
fwait
xchg
rorb
inc
and
dec
sub
mov
mov
shl
push
pop
push
xor
repz
xor
loopne
scas
mov
ret
shlb
loop
add
ss
call
inc
push
aaa
xchg
inc
cmpsl
std
fwait
xchg
xchg
dec
pop
sbbb
dec
xchg
adc
in
test
sub
mov
je
and
cmpl
or
adc
or
out
mov
mov
sub
xchg
out
xchg
lea
dec
and
fisubs
data16
add
sbb
mov
call
scas
outsb
popf
enter
jl
pushl
icebp
pop
fimuls
push
pushl
adc
sub
cmpxchg
in
leave
mov
out
ljmp
jge
loope
adc
xor
testl
sbb
pushf
fisubl
cmp
js
les
and
xor
and
pop
sbb
enter
out
cmp
out
cmp
sub
jmp
je
jno
sbb
xchg
stc
sbb
fincstp
xor
nop
fmulp
xchg
mov
aad
fnstcw
xchg
scas
xchg
lahf
push
add
xchg
xor
sahf
daa
in
out
mov
pop
lcall
inc
push
out
jbe
es
outsb
mov
inc
jcxz
sbb
dec
add
ja
sbb
test
jns
jl
jmp
das
jg
jp
ss
in
out
dec
mov
jns
mov
jns
dec
xor
int
or
aas
cli
jecxz
or
outsb
ss
dec
dec
test
pop
mov
xchg
imul
lret
pop
jbe
and
int3
insb
mov
int
fistps
jne
adc
xchg
ret
push
in
mov
jo
sub
add
pop
movsl
and
jmp
push
dec
loope
lcall
bound
js
fwait
stos
aam
or
or
es
sub
stc
jmp
mov
fldt
cmc
or
xor
mov
fdiv
push
mov
data16
jg
es
or
rcl
mov
dec
xchg
je
cli
mov
call
push
inc
test
cmpsb
jnp
xchg
jb
pop
add
outsl
mov
cmpsb
pop
loope
arpl
and
addr16
out
cmpsb
adc
sub
cmpsb
and
and
rcr
mov
adc
pop
cmpl
aas
xchg
add
nop
inc
enter
stos
add
fcomps
xchg
out
sub
adcb
loope
push
or
sbbb
and
xor
pop
je
enter
lea
pop
inc
push
mov
das
test
test
das
mov
cld
xchg
or
jns
daa
stc
inc
pop
lcall
imul
in
enter
pop
subl
andl
xchg
nop
outsl
xor
cld
movsb
je
jns
fyl2x
aaa
hlt
cwtl
jae
mov
ret
mov
loop
ret
inc
mov
jle
jb
imul
and
cmp
leave
pop
push
jae
lret
insl
out
cmp
dec
dec
add
je
aam
sahf
sub
pop
mov
stc
xchg
cmp
pop
pop
mov
and
mov
ret
sarl
leave
adc
mov
push
mov
mov
and
dec
fsubrs
cmp
icebp
lock
inc
cmp
lock
mov
sbb
push
negb
jge
push
cwtl
adc
pop
andb
sbb
mov
xchg
sbb
sub
add
and
jg
daa
int3
push
push
dec
inc
fstp
les
adc
push
sbbb
xor
cli
xchg
push
mov
mov
lret
sub
jo
imul
sti
fsubs
cmpsb
out
popa
jnp
in
int3
cli
mov
fsubrl
pop
pusha
adc
addb
add
pusha
call
ljmp
inc
or
cmpsb
adc
in
mov
adc
arpl
sahf
pop
or
leavew
and
sti
xchg
inc
dec
sub
cmp
push
mov
sub
enter
adc
mov
mov
in
xchg
movsb
xchg
mov
mov
adc
cmpsl
lahf
and
pop
in
sbb
mov
dec
lret
push
inc
hlt
mov
pop
dec
loop
cmp
test
mov
inc
jo
mov
loope
mov
pusha
mov
xorb
insl
or
aaa
imul
mov
es
mov
jl
sbbb
bound
pop
fisubs
jae
test
fists
push
jmp
jecxz
ljmp
nop
xlat
sahf
jl
clc
sti
mov
pop
stos
test
aad
repnz
in
lods
xchg
ret
adc
pop
lcall
out
bound
mov
out
ret
into
inc
ja
xchg
mov
lods
or
arpl
imul
push
inc
or
pop
shr
fs
or
imul
or
push
mov
inc
in
aad
lea
push
aaa
mov
in
mov
or
add
in
add
pushf
push
arpl
dec
dec
pushf
sub
bswap
dec
pop
fildll
inc
inc
mov
hlt
pushf
push
jmp
ret
xchg
lcall
mov
mov
mov
test
ds
fstpt
push
mov
or
stos
mov
pop
stc
jle
outsb
lret
mov
add
mov
rcrl
sub
bound
ds
mov
inc
pop
mov
stc
push
dec
mov
mov
dec
stos
dec
xlat
cmovbe
cmpsl
out
leave
mov
mov
mov
xchg
pop
mov
cmp
xchg
dec
sub
aaa
fnstcw
stos
out
and
out
pusha
fisttps
mov
pop
dec
or
and
xchg
push
nop
int
jmp
int
ss
iret
jbe
xchg
xor
inc
aad
scas
sub
push
xor
ja
push
mulb
in
outsb
insb
fmull
hlt
movsb
cltd
dec
iret
adc
xchg
daa
inc
pop
dec
aam
sub
jmp
and
mov
clc
pop
sub
cmp
roll
leave
mov
sbb
or
ficompl
xchg
sbb
xor
add
mov
push
int
lods
les
movsl
jge
std
dec
js
iret
cld
mov
shrb
add
xor
int3
xor
push
mov
lahf
je
insl
mov
cmp
xor
fbld
lods
jo
inc
mov
les
cs
pop
ret
and
fiadds
pusha
push
loopne
out
insb
and
cmc
cmpl
sbb
pop
mov
mov
add
push
lods
in
loopne
iret
cmp
sbb
push
testl
shll
mov
dec
flds
js
pop
mov
mov
and
jo
jl
push
mov
lret
add
les
mov
push
js
hlt
in
pop
rcrl
mov
out
push
add
cs
mov
sarl
ficompl
fidivl
popf
jnp
xchg
add
or
and
and
das
mov
dec
imul
cmpb
mov
pop
jb
and
mov
pop
inc
scas
adc
scas
fsubrp
adc
mov
es
jge
sub
xchg
sbb
into
fcomip
jmp
add
inc
pop
or
push
aaa
std
mov
xchg
mov
push
movsl
xlat
sub
das
add
mov
jne
push
xor
push
add
leave
dec
and
sub
mov
adc
xchg
js
scas
test
adc
pop
cmc
push
sbb
scas
push
mov
aaa
cmc
adc
orb
push
cmp
inc
lcall
sub
or
adc
lods
jnp
pop
xchg
cmp
fdivs
xchg
xchg
repnz
xchg
mov
adc
cs
push
cmp
imul
aas
push
xor
sub
ja
pop
adc
das
sbb
mov
inc
iret
cmc
jns
pop
xchg
and
insl
dec
mov
adc
out
add
push
xor
fisttps
in
cld
mov
inc
rcl
dec
cmp
pop
jnp
mov
jl
xor
cmp
test
int
hlt
inc
icebp
cld
in
sub
and
fildll
xchg
ljmp
mov
mov
jmp
add
sub
pushf
adc
xchg
dec
adc
rcrl
adc
das
bound
neg
xor
mov
jp
xchg
outsl
cmp
repnz
xchg
mov
add
and
movb
dec
mov
fs
push
imul
test
cmovne
or
xor
or
fiadds
xor
jmp
jo
mov
and
push
scas
movsl
xor
mov
mov
push
int3
cwtl
cltd
mov
sbbb
and
mov
js
sbb
fidivrl
cmp
test
sbb
inc
lcall
or
decb
cmp
mov
mov
ljmp
mov
lahf
cmpsl
push
sub
addr16
push
cmp
dec
xchg
push
aam
adc
and
xchg
jge
cmpsl
jno
add
repz
rcrb
out
fcmovne
push
inc
inc
push
push
and
add
imul
push
inc
dec
xchg
sahf
inc
int
xor
ficompl
inc
leave
nop
arpl
testl
add
mov
fbstp
jg
imul
mov
jb
lock
cmp
repz
shll
call
popf
stos
jne
mov
and
iret
out
adc
pop
mov
dec
sub
scas
call
int
xchg
xlat
xchg
adc
xor
push
pushf
jne
mov
sub
xchg
pop
jp
faddl
ljmp
mov
and
sub
lock
add
je
cmp
rolb
push
jge
mov
push
mov
mov
pop
and
and
adc
cmp
mov
lret
dec
hlt
imul
push
dec
inc
nopl
int
mov
or
jne
dec
hlt
stos
xor
push
hlt
jmp
inc
dec
and
clc
adc
inc
fwait
lock
push
add
out
mov
cmp
es
mov
sbb
movsl
shrl
sub
ret
mov
jp
test
xor
iret
cmpb
mov
fs
cmp
cmpsb
bound
push
fisubrl
lret
ret
push
je
std
bound
gs
push
fnsave
mov
data16
cmpsl
pusha
cmp
jo
inc
dec
cmp
jo
mov
aaa
push
fisttpll
popa
pop
bound
pop
mov
sbb
xchg
int3
xchg
xlat
daa
sbb
inc
mov
popf
add
cld
pop
push
fwait
mov
mov
push
and
cwtl
lahf
sbb
push
mov
adc
lret
mov
fnstenv
xor
and
out
or
clc
loope
mov
xor
mov
adc
jnp
sub
icebp
cmpsb
aad
mov
das
add
pop
cwtl
cmpb
or
out
outsb
adc
inc
fistps
sbb
dec
rorb
mov
imull
sbb
adc
mov
stos
pop
test
and
mov
mov
fmuls
push
add
cmp
sub
nop
cmpsb
mov
or
add
mov
lret
arpl
pop
mov
pop
dec
sub
cmc
ljmp
mov
clc
leave
imul
mov
bound
pop
xor
in
pushf
and
mov
loopne
jmp
xor
push
stos
jns
pop
mov
sahf
xchg
setp
es
imul
fwait
loopne,pt
rcrb
popf
xchg
insb
imul
push
idivl
cmp
insl
ja
sbb
fimuls
sbb
jle
insb
cmp
pushf
in
mov
cmp
frstor
ljmp
xchg
loopne
dec
jns
shlb
xchg
loope
push
xchg
pushf
mov
aaa
mov
inc
sbb
pop
xchg
or
xchg
lahf
fcomps
dec
sub
repz
cltd
daa
mov
jae
push
or
in
outsl
cmp
push
adc
xchg
mov
je
aam
shl
xchg
add
mov
leave
xchg
fwait
xchg
push
and
jp
pop
xchg
mov
aas
iret
dec
xor
add
sbb
insl
mov
xlat
iret
add
jp
xchg
jp
xor
xor
mov
aad
sar
xor
lret
lock
jns
mov
push
loope
jae
pop
add
mov
ja
sbb
push
stc
sti
jp
jle
scas
in
outsl
push
repz
data16
sub
cmpsl
addr16
xchg
adc
mov
mov
mov
fs
xchg
dec
push
xor
mov
ja
and
add
outsb
pushf
arpl
rcll
call
sbb
cltd
bound
stos
xor
add
fwait
or
jg
jl
stc
add
pop
inc
out
shll
arpl
iret
mov
mov
sub
mov
or
enter
mov
sti
in
xor
repz
pop
out
icebp
add
mov
dec
push
daa
jecxz
insl
push
stos
sub
mov
clc
dec
roll
sbb
aas
mov
jmp
mov
mov
clc
scas
shl
data16
int3
jns
or
push
or
movsb
xor
aas
xchg
loop
jne
sti
mov
push
adc
std
add
add
rcrb
push
loopne
pop
arpl
lahf
mov
sub
mov
test
sub
xor
repz
popa
jmp
mov
gs
mov
fisubrs
ret
xchg
es
mov
push
pop
mov
mov
pop
mov
std
mov
jne
cwtl
loop
xchg
enter
fildl
jp
or
stos
mov
sub
sub
mov
push
mov
aad
popa
mov
and
xchg
adc
and
fwait
test
test
cld
test
push
icebp
fisubrs
cmc
pop
and
jno
pop
incl
popa
sub
fidivrs
pop
adc
orb
xor
mov
mov
mov
mov
js
adc
adc
icebp
je
ljmp
jnp
xchg
add
inc
fnstenv
push
fs
mov
ret
inc
jns
pop
mov
sub
mov
int
jno
icebp
and
sbb
cmp
cs
insb
popf
cs
lods
repz
pop
sbb
or
bound
js
sbb
mov
outsl
adc
jl
cmp
mov
add
xchg
ss
je
icebp
xchg
sbb
or
data16
or
xor
or
les
mov
push
cmpsb
mov
in
xchg
sarb
pop
jae
jnp
rcrl
das
pop
mov
scas
mov
sbb
push
rcll
push
aas
adc
push
sbb
pop
fbstp
arpl
sti
imul
pop
sub
int
cmovs
ja
scas
mov
add
or
loopne
adc
push
lret
lods
jmp
test
mov
or
xorl
jg
in
mov
adc
adc
add
sub
inc
daa
stc
cmp
mov
mov
mov
ja
dec
inc
sarb
lods
and
rclb
stos
fistl
loop
loopne
and
fisubs
lcall
fcoms
or
xchg
and
jmp
ficoms
fwait
mov
mov
jne
das
xor
xlat
test
push
dec
int3
movb
adc
clc
mov
int
pop
xor
cld
push
add
outsl
lea
cmp
sub
mov
xor
and
dec
jb
ds
filds
ljmp
or
and
js
frstor
in
sbb
jbe
mov
cwtl
sub
lret
popf
aad
stos
mov
lahf
pushl
adc
loopne
sbb
repz
aad
push
sub
pushf
stos
flds
pop
fistpll
scas
pop
cmp
cmp
or
gs
push
push
cmp
cmc
fldt
pop
cmp
jecxz
hlt
std
add
or
clc
lcall
fwait
aas
xchg
fucom
add
sub
aam
and
mov
test
push
jo
xchg
mov
xchg
and
jp
les
popfw
jae
sub
inc
and
je
cli
jne
mov
fbstp
xor
sbb
mov
iret
cltd
jbe
mov
xchg
cmp
imul
inc
int
scas
push
or
cltd
and
iret
mov
dec
xchg
imul
ret
jecxz
mov
mov
icebp
mov
in
inc
mov
ret
mov
icebp
pop
jnp
popf
adc
scas
fidivs
int
adc
mov
mov
mov
addr16
std
mov
aas
or
or
push
push
test
in
sbb
movsl
fmuls
or
sti
movsl
dec
ret
shrb
nop
mov
sbb
jo
pop
mov
shrb
add
repz
fucomi
add
or
sbb
push
movsb
adc
daa
push
and
lcall
sub
xor
mov
std
dec
lea
xlat
pop
shll
push
les
push
dec
cmp
cmp
repnz
scas
jl
andl
sub
and
dec
add
mov
add
pushw
inc
iret
les
xchg
jbe
sbb
stos
and
add
sub
mov
mov
xchg
xchg
push
jp
outsl
push
or
lock
xlat
cli
dec
xor
test
pusha
leave
or
xchg
push
cs
sub
ja
adc
aas
roll
sub
fisttpll
test
imul
arpl
jge
pop
loope
sbb
repnz
mov
in
loopne
nop
inc
or
xchg
xor
imul
ljmp
cmc
push
cmp
pop
scas
sbb
and
inc
cmp
stos
fwait
pop
test
fisttpll
sti
mov
into
jl
enter
icebp
gs
mov
pushf
adc
pop
aaa
lds
je
mov
inc
fisubrs
ret
arpl
int3
rorb
dec
jo
push
mov
xor
mov
shl
out
popa
in
imul
lods
inc
fcomp
inc
lds
lods
push
push
int
and
jecxz
sub
icebp
pop
and
stos
ret
xchg
mov
dec
jo
push
icebp
stc
pusha
sahf
in
jl
fiaddl
mov
lods
outsb
idiv
cmp
ficompl
cld
sbb
movsl
inc
mov
cmpsl
jbe
dec
outsl
mov
repnz
push
and
sahf
cwtl
xchg
inc
inc
or
insl
int
lahf
add
xchg
int3
add
fwait
sub
addr16
pop
pushf
pop
adc
and
fsubp
lods
jae
fisubl
pop
adc
lcall
aas
pop
das
lods
add
gs
repz
cmp
mov
stos
jo
out
cmc
mov
mov
jmp
and
ficoml
or
sbb
fimull
sub
and
sbb
inc
cmp
mov
jge
push
cmp
ljmp
leave
jle
push
push
dec
xor
push
daa
cld
add
pop
mov
je
xchg
xchg
mov
sub
add
cltd
mov
mov
outsl
rcl
push
outsl
inc
push
cld
mov
mov
arpl
es
fstps
mov
add
test
lods
jle
test
popa
or
int
xchg
mov
or
arpl
imull
ds
xor
push
mov
out
push
xor
cli
sbb
int3
cmp
lods
aas
mov
pop
jl
push
dec
add
mov
imul
lock
mov
pop
push
pop
and
dec
mov
adc
mov
jmp
or
xchg
xor
icebp
mov
mov
cmp
adcb
aad
mov
push
inc
js
lods
jmp
adc
xchg
dec
mov
loope
aad
ss
addb
add
xor
repz
mov
push
in
jmp
jmp
lret
divb
mov
xchg
je
stos
mov
jmp
enter
xchg
fmull
mov
enter
pop
pop
jae
arpl
xchg
jne
insl
in
add
jo
dec
loope
add
pop
cwtl
cltd
pushf
and
inc
dec
lcall
daa
push
mov
testl
mov
in
xor
out
fbstp
jb
sti
repnz
xchg
clc
pop
mov
push
pop
xchg
fdivs
in
mov
mov
sti
pushl
push
enter
cltd
in
clc
mov
mov
or
cmp
inc
sbb
push
mov
test
adc
insb
adc
pusha
mov
adc
mov
jbe
mov
ret
pop
jnp
pop
sbb
shlb
jo
test
movsl
sub
les
aad
inc
and
xchg
shrl
aaa
jge
inc
xor
push
or
xor
jo
aad
lret
sub
outsb
into
stc
mov
mov
xchg
nop
dec
in
xchg
inc
ds
mov
ret
and
adc
test
sbb
pusha
sub
push
pop
add
leave
xor
dec
mov
fisttpll
cwtl
dec
fwait
clc
js
je
pop
sub
add
sti
or
jnp
adc
aam
jmp
lahf
add
data16
adc
daa
stc
adc
sbb
in
jl
jnp
pop
mov
and
cmp
cmp
and
icebp
in
or
mov
mov
in
shr
nop
rcl
negb
shlb
out
inc
or
lods
cs
sahf
ja
movsb
mov
call
jbe
fwait
ss
mov
cmp
test
pop
mov
into
out
pop
ret
decl
sbb
imul
jo
int
mov
subb
sbb
lods
push
or
push
push
or
daa
push
enter
movsl
xchg
push
sbb
sub
mov
hlt
loop
pop
fwait
xchg
or
jbe
mov
xor
in
sub
fsubrp
cmp
in
or
dec
xchg
jp
mov
xor
testb
or
jae
mov
mov
cmp
push
addr16
and
loopne
in
jns
hlt
pop
xor
shrl
mov
inc
pop
adc
pop
inc
adc
cmp
mov
push
jae
loopne
icebp
push
sti
dec
mov
cmp
ja
movsb
pop
int
stc
and
je
push
sub
or
and
ret
and
stc
mulb
nop
in
jno
filds
jne
aaa
add
sti
mov
mov
ljmp
lea
hlt
xor
cmp
cmp
mov
mov
add
push
pusha
pop
mov
outsb
enter
mov
or
adc
push
loopne
mov
dec
lcall
scas
gs
in
xchg
sub
fbstp
inc
jo
xchg
add
js
xchg
pop
push
add
aad
add
xor
jnp
daa
adc
lods
sub
jns
sub
out
jl
xchg
ss
cmpsl
insl
mov
mov
inc
adc
xchg
mulb
adc
imul
adcb
and
je
xchg
and
fwait
loop
das
cmp
push
sub
mov
sbb
cmp
arpl
add
push
call
sub
push
inc
int3
dec
jecxz
into
add
push
lock
add
xchg
pop
aas
and
xor
rolb
inc
add
jl
jae
not
pop
lock
add
sti
pop
jne
inc
arpl
loope
mov
mov
adc
inc
sbbl
scas
sarb
push
adc
push
mov
jp
sbb
cld
out
mov
or
test
adc
arpl
xchg
imul
imul
or
mov
sti
pusha
pop
test
lea
mov
shrb
pusha
outsb
mov
jae
addr16
pop
add
mov
xchg
scas
mov
jl
shrl
inc
inc
mov
jge
and
pop
popf
push
xor
filds
jne
ljmp
addr16
mov
and
xor
xor
sbb
dec
pop
and
insb
loop
imul
or
push
jno
enter
insl
loope
inc
jecxz
add
cmp
mov
gs
popf
jg
pop
divb
xor
out
popf
push
fdivs
into
jg
mov
xor
fmul
das
xor
push
in
xchg
cmp
xchg
xchg
in
mov
xchg
les
push
call
pop
imul
pushf
into
fbstp
sbb
push
ds
or
pop
jo
dec
add
cmp
push
or
movsl
aam
xchg
sub
mov
jne
loop
punpckldq
cmp
ss
test
scas
fisttps
cmp
insl
mov
lea
cld
lret
mov
inc
xlat
movsb
pop
test
clc
sbbb
jns
or
outsl
lea
addl
xor
ret
jge
popl
sarl
addr16
and
bound
popa
inc
fcmovne
pop
sbb
pusha
add
iret
ffree
xchg
pop
dec
xchg
mov
push
jg
cli
rcr
into
int3
andl
push
les
pushf
xor
cltd
sub
call
scas
dec
aam
mov
movsl
ds
pop
lret
imul
mov
mov
cmp
mov
out
jbe
int3
mov
cwtl
xorb
movsb
xchg
xchg
xchg
jp
sub
fmuls
mov
cltd
push
in
pop
xor
xor
fstps
or
jl
mov
pop
adc
in
dec
add
sub
std
xchg
lret
xchg
xchg
stos
cmp
jl
insl
mov
dec
es
dec
push
adc
pop
add
inc
lea
mov
js
aaa
std
out
je
jae
stos
out
mov
jbe
push
ja
dec
and
jg
push
inc
ds
mov
nop
orb
and
icebp
insb
sub
add
int3
cs
fcoml
inc
bnd
fmul
fs
cli
xchg
movsl
xchg
ja
sub
pop
out
into
mov
add
lea
cwtl
rcl
cmp
rclb
cmp
xor
sub
in
push
dec
loop
in
mov
icebp
jbe
insb
test
leave
jno
orb
in
js
add
and
test
loope
mov
xchg
in
xchg
fsubrl
dec
mov
andl
pushf
in
stos
lret
pop
int
mov
je
mov
push
rep
out
in
jmp
or
adc
or
push
sbb
fwait
loope
fcoms
icebp
outsb
cmp
cmpsb
xchg
scas
ret
int3
ret
mov
inc
mov
inc
mov
test
push
rorl
sub
push
stc
jns
imul
scas
push
in
int
imul
cltd
sbb
shl
mov
push
or
icebp
add
mov
scas
pop
outsl
fstl
sahf
enter
scas
ss
xchg
js
and
mov
ss
add
mov
push
or
xchg
add
mov
mov
sbb
mov
mov
in
sbbl
sub
gs
adc
lret
ret
mov
fldcw
aaa
push
imul
jb
inc
xor
pop
aaa
jae
call
push
jg
xchg
xor
insb
adc
fmulp
add
mov
test
jecxz
push
adc
mov
and
jmp
push
lret
cmp
lahf
mov
sub
inc
fiadds
cmpsb
in
ja
push
sub
call
cmp
movsb
repnz
popf
pop
pop
popa
sbb
mov
arpl
stos
xor
sub
pop
andb
addl
pop
dec
mov
dec
daa
dec
mov
jl
icebp
pop
cmpsl
jns
push
cli
aad
or
in
enter
rorl
xlat
mov
mov
adc
adc
clc
pop
repnz
dec
int3
out
loope
or
ret
fdiv
into
mov
jb
mov
dec
stos
push
xchg
jno
aaa
xor
aad
push
es
add
mov
add
cmc
cmp
adc
pop
add
ds
xchg
jae
lock
andb
xor
lahf
or
push
mov
xchg
or
and
roll
int
aas
fld
inc
iret
mov
cmp
test
mov
add
fs
fs
lret
mov
mov
das
jno
adc
xor
sub
adc
outsl
rcl
movsl
out
popa
lret
leave
cmp
pop
imull
and
jle
stos
subl
cltd
mov
inc
push
test
mov
rorl
fidivrl
and
pushf
push
repz
roll
sub
ljmp
cmpsb
orb
adcb
mov
jl
or
xlat
jb
clc
sarl
push
and
leave
out
test
push
repnz
add
popa
cltd
push
or
mov
fmulp
out
and
cmpsl
pop
call
jae
adc
out
and
mov
mov
imulb
cli
add
ret
clc
xor
mov
rorb
cli
push
lods
mov
inc
jb
sub
rolb
lds
xchg
jmp
xchg
aam
pop
leave
lret
inc
in
cmp
inc
dec
mov
movb
sbb
mov
mov
dec
mov
sub
fnstcw
xchg
jb
pop
push
test
or
lret
imul
xlat
jne
jne
sub
aad
out
and
fcmovb
push
sub
or
mov
cmc
jecxz
jp
bound
lea
dec
jp
lret
cmpsl
aas
and
dec
ret
loopne
out
addr16
hlt
test
push
adc
or
jle
mov
aas
and
aaa
rol
lahf
cmp
sbb
xchg
ss
sbb
xchg
dec
cmp
sbb
xchg
out
cmpsb
das
shll
mov
mov
xchg
xlat
nop
rorl
jne
mov
adc
rorb
push
not
jmp
ljmp
out
cmc
dec
mov
div
add
cmpsl
aad
std
addr16
dec
dec
inc
fs
imul
dec
test
xchg
mov
inc
pop
jne
insl
stc
lcall
fistpl
js
mov
jns
dec
ror
mov
jl
xchg
pop
sbb
daa
lods
sbb
outsl
imul
ror
jns
aas
cmp
nop
and
scas
mov
xor
cltd
cltd
cli
xchg
and
addr16
mov
dec
es
adc
jge
loopne
idiv
pop
inc
xlat
fidivrs
add
add
jp
aaa
lods
out
call
pop
mov
insb
insl
xchg
out
negb
xchg
mov
addb
daa
outsb
addr16
popa
out
mov
in
xor
sub
push
fistps
ret
sbb
push
fdiv
fsubs
pop
xor
arpl
xor
out
cmpsb
push
mov
dec
bound
jle
stos
das
inc
lahf
lock
int3
jo
inc
jmp
insb
int
xchg
data16
xchg
fidivrl
add
push
pop
xchg
dec
add
xchg
mov
ret
cmp
dec
jmp
je
popl
or
insl
and
cmp
xlat
in
add
inc
and
jb
mov
call
sti
push
sahf
jp
jmp
add
sbb
mov
dec
loope
pusha
stos
repz
out
pop
aam
cmp
mov
test
cld
mov
mov
arpl
push
or
jmp
dec
icebp
imull
adc
mov
jle
hlt
mov
out
xor
mov
repnz
push
bound
pop
add
out
jg
icebp
add
xorl
enter
mov
mov
mov
mov
inc
movsl
cwtl
nop
push
mov
push
inc
outsb
inc
mov
in
cmpsb
xchg
add
add
sub
rcrb
imul
xchg
rorl
dec
mov
push
inc
cmc
orb
fsts
ret
fistpl
mov
es
dec
sub
inc
sbb
ds
das
lods
mov
ficomps
mov
jo
xor
popa
aam
mov
cmp
sbb
ljmp
xchg
aaa
in
add
fucomi
mov
rcrb
inc
pop
in
incb
sbb
adc
bound
fildll
ljmp
push
movsl
loope
jmp
mov
aad
test
repnz
push
rcr
xchg
cmpsb
xor
stos
dec
xchg
push
seta
and
std
hlt
shlb
cltd
mov
mov
add
mov
mov
insb
insl
cmc
xchg
pop
lahf
lret
es
ja
repnz
push
mov
sbb
xchg
cmpsb
pop
push
mov
pop
xchg
pop
scas
push
movsl
cmpsl
cmpsb
fiaddl
add
mov
pop
and
scas
ds
adc
mov
decb
pop
ficoms
jg
jns
gs
xor
adc
sbb
in
pop
xor
es
add
jge
xchg
cmpsb
jle
or
cs
lret
jne
icebp
iret
roll
leave
mov
pusha
scas
ret
stc
cltd
sub
xchg
jae
aam
xchg
loop
clc
xchg
inc
adc
adc
fsubrs
pop
mov
push
xorb
mov
pop
fnop
mov
out
lahf
bound
sub
scas
lods
pop
addr16
gs
leave
adc
mov
nop
xchg
inc
push
das
outsl
mov
add
sbb
inc
ss
stos
dec
inc
mov
aad
rcrl
ror
lods
les
fbstp
aam
push
adc
cmp
cmp
scas
jmp
outsb
pop
cmpsl
stos
push
insl
cwtl
stos
stos
popf
xlat
nop
popf
sbb
dec
xchg
cld
lret
ficoms
push
rorb
cmovs
shll
dec
arpl
gs
push
pushf
pop
inc
imul
stos
adc
idivb
and
imul
xor
dec
test
pop
mov
imul
iret
ds
push
lret
or
cmp
jge
add
fldenv
imulb
rcrl
mov
aas
sbb
inc
shll
dec
mov
mov
sub
test
cs
push
call
jnp
xor
mov
aaa
ds
xchg
das
mov
dec
imulb
adc
inc
fisubrl
push
pop
mov
ja
jle
out
jae
mov
out
lret
cmc
xchg
inc
sub
imul
movsb
nop
sub
inc
sub
test
and
xchg
sbb
mov
loope
inc
push
add
pop
push
and
and
ret
or
push
stos
or
jp
bnd
cld
pushf
cvtpi2ps
imul
movsb
xor
jmp
adc
mov
fiadds
aas
jo
scas
inc
xchg
or
out
mov
cmp
repnz
cmp
insb
pop
sbbl
icebp
aad
sbb
cltd
aad
push
and
xchg
or
adc
or
xchg
icebp
fmull
enter
js
inc
call
dec
jne
mov
bound
inc
push
add
int
push
mov
fldenv
testb
sbb
or
inc
mov
sbb
loope
cmpsb
jb
fisubl
cmp
in
mov
xchg
cli
mov
out
out
push
mov
stos
test
cltd
stos
and
mov
mov
push
dec
leave
int3
je
das
movsb
jne
pop
setne
and
cltd
dec
sahf
add
and
mov
in
insb
fadds
dec
cmp
jb
es
mov
ret
aas
push
dec
or
int3
mov
insb
lahf
insb
fadd
jnp
aas
and
mov
jg
fs
adc
inc
xchg
movb
es
dec
scas
push
add
lret
cmp
inc
dec
loopne
adc
sub
clc
arpl
icebp
cwtl
lcall
xor
xchg
jmp
sbb
ds
adc
sub
mov
mov
pop
sub
mov
mov
pop
adcl
sbb
push
sbb
cltd
popf
sbb
cmp
sbb
mov
add
stos
movlps
push
add
hlt
rcrb
divl
fwait
dec
sub
and
adc
pop
pop
shll
shlb
jmp
mov
mov
loop
and
es
sub
sahf
adc
lret
or
hlt
xchg
xchg
adc
lock
fs
or
xor
cmp
ret
add
and
insb
iret
sub
je
shll
push
dec
sub
cmpsl
cs
movsl
pop
sbb
xchg
mov
push
pop
xchg
adc
insb
push
cmp
and
dec
push
dec
cmp
pfmin
dec
jle
add
push
push
cmp
sub
add
jne
dec
ret
imul
mov
sti
xor
mov
push
mov
pusha
inc
sbb
jb
lahf
xorl
add
repz
cmpsb
imul
inc
sahf
cmp
call
sbb
xchg
push
andb
mov
cmp
shlb
rcll
pop
jnp
push
lock
xor
mov
loopne
jge
add
jae
xor
inc
adc
mov
sar
enter
sub
xor
ja
mov
mov
lods
inc
push
test
mov
dec
xchg
flds
jge
test
fidivrl
aas
mov
adc
gs
mov
aas
ret
inc
fsts
dec
jnp
int
icebp
js
lret
jno
scas
je
repz
test
stos
jae
shlb
hlt
sarl
add
push
jbe
jo
inc
xchg
mov
dec
inc
mov
mull
cmp
dec
lock
push
jo
cmpsl
cmc
lods
fcoms
add
insl
outsl
add
orl
sub
xchg
jnp
leave
dec
fs
xchg
xor
mov
push
mov
adc
lds
mov
jno
in
sahf
sub
loope
and
lds
mov
dec
adc
jp
adc
adc
inc
lahf
inc
mov
cmp
xchg
clc
jno
lcall
ret
add
xor
clc
push
mov
inc
pop
sbb
mov
pop
mov
mov
and
fisubrl
aaa
inc
jns
inc
mov
and
stos
lret
adc
ljmp
jae
lea
rorb
ret
movsl
cli
fnstenv
leave
xor
call
add
sar
hlt
jg
inc
push
movsl
daa
jo
sti
xor
arpl
pop
into
push
mov
enter
daa
icebp
sub
cmpl
jae
ss
pop
pop
test
mov
push
mov
arpl
dec
push
adc
int
add
push
sub
xchg
mov
cmp
cmpsl
in
iret
int
pop
dec
dec
push
sbb
sahf
sub
mov
sub
jne
mov
inc
lods
mov
push
push
aam
inc
repnz
mov
daa
lds
cmp
and
divb
xchg
sbb
shlb
leave
add
add
xchg
fiadds
mov
pop
aam
inc
movsl
cmp
pop
addl
push
lcall
cmp
jmp
into
dec
scas
in
std
dec
out
jo
daa
mov
dec
loop
push
lock
sbb
pop
nop
xor
push
test
xchg
arpl
jo
xchg
ret
adc
sbb
jnp
and
mov
mov
push
mov
inc
aad
inc
addr16
xchg
push
mov
sub
lcall
loope
pop
lret
cmpsb
inc
pop
sub
fnstcw
sub
stos
shl
push
test
leave
xor
into
stos
xor
test
testl
mov
adc
push
or
add
fst
nop
js
sub
addb
scas
pop
popf
and
xchg
ja
pop
inc
dec
es
sub
jae
imul
outsb
cmc
repz
imul
add
pusha
cmpsl
push
xchg
add
cmp
xchg
je
into
int3
xchg
cmpsl
mov
shrb
ret
sarb
iret
inc
mov
fists
frstor
in
daa
mov
aam
push
aad
pop
mov
loopne
dec
jnp
push
jbe
mov
imull
movsb
inc
pop
add
iret
insb
pushf
push
out
jecxz
mov
add
push
fwait
mov
ss
and
testl
mov
push
andb
jp
aam
lods
sbb
imul
fcoml
insb
ljmp
arpl
pop
xchg
jo
daa
cmpsl
pop
imul
pop
es
dec
mov
push
cmpsb
repnz
out
loope
dec
bound
aam
leave
cmp
lret
mov
and
inc
call
ja
or
push
pop
lret
cs
sub
mov
loop
xor
ljmp
nop
nop
out
sub
test
and
loopne
mov
inc
mov
add
out
xchg
arpl
sub
pop
cwtl
shrb
mov
les
mov
push
ret
call
andl
scas
nop
shr
loopne
pop
fs
decb
in
lods
jp
das
sub
xchg
sbb
mov
inc
repz
and
stc
jae
test
mov
xchg
cmp
pop
sbb
dec
int
push
shrl
sub
sarl
fbstp
adc
xor
test
add
jge
or
fsub
xor
and
in
sbb
sbb
mov
dec
das
mov
aas
jmp
xor
int
addl
xlat
xlat
ret
pop
and
in
es
adc
fdivr
lret
sub
fildll
lock
repz
mov
pop
jg
xlat
jp
imul
js
push
xchg
leave
adc
pop
std
dec
lret
push
fidivs
insb
xchg
stos
xchg
xchg
icebp
cmp
add
push
pop
and
or
dec
or
lahf
icebp
sub
adc
je
cmp
push
push
icebp
xchg
popf
add
orb
mov
fwait
inc
xor
clc
adc
mov
lea
push
sbb
stos
pop
shll
fwait
lods
sub
pop
push
loop
mov
out
mov
stos
jo
inc
scas
mov
movsb
fs
sbb
push
leave
and
xor
xchg
jne
push
in
dec
ret
dec
mov
fldcw
loopne
rcl
inc
add
les
dec
sbb
nop
mov
data16
jns
out
test
pop
movsl
mov
outsb
xor
lods
out
xchg
and
out
mov
inc
mov
pop
pop
aas
inc
lods
scas
js
loop
movsb
xchg
push
and
mov
loop
mov
sbb
out
sti
imul
leave
fwait
mov
or
inc
out
xchg
mov
jns
loop
sub
out
inc
push
scas
shrb
scas
inc
std
cmc
int3
fwait
js
fs
test
mov
test
jbe
je
mov
insb
sub
cld
mov
insb
push
frstor
imul
pop
out
mov
dec
pmullw
sbb
dec
or
mov
ja
sbb
int
lds
aad
sbb
insl
pop
push
jg
pop
lret
in
mov
or
sub
icebp
inc
lds
xchg
int
addr16
test
adc
add
pushf
outsl
in
lea
rcr
jbe
inc
mov
or
inc
sbb
out
add
mov
mov
mov
ss
fdivs
pop
and
cmp
inc
inc
jbe
inc
pop
iret
stos
mov
mov
jecxz
sub
jp
aad
dec
adcb
fiadds
mov
out
lods
xchg
lcall
lods
push
lcall
push
jnp
pop
out
xchg
mov
or
in
inc
push
add
sub
pop
in
in
imul
sti
cwtl
add
mov
push
inc
icebp
mov
arpl
cmp
mov
pushf
cwtl
push
pop
sbb
mov
jb
mov
mov
pushf
jmp
das
je
outsl
pushf
stos
outsl
sar
adc
jbe
nop
adc
shrl
mov
scas
xchg
lret
mov
push
jno
adc
xor
fadd
and
lea
add
fsubrl
cmovne
sbb
sbb
jo
cwtl
push
mov
js
sub
sbb
adc
ret
test
fimuls
inc
mov
aas
xorl
xchg
sub
mov
subl
mov
dec
ljmp
mov
jae
cmp
mov
jo
inc
std
mov
or
xchg
push
arpl
pop
insl
ss
dec
sbb
sbb
mov
stos
mov
das
add
lea
sti
out
push
jb
cmp
fwait
lods
fnstcw
jle
dec
mov
insl
push
pop
mov
ret
cmc
addr16
ljmp
push
loopne
test
std
inc
fs
int3
leave
sub
push
pop
shlb
xchg
add
fimuls
mov
movb
jnp
mov
mov
das
or
xchg
aad
mov
cmp
es
dec
xor
mov
enter
sti
popa
fstpl
cmp
inc
aaa
stc
scas
ror
test
enter
addr16
adc
sbb
movsb
jo
icebp
xchg
cmpl
jl
mov
das
addr16
loop
mov
mov
push
xchg
cmp
xchg
cmp
aaa
jge
outsb
push
test
sahf
sahf
xchg
and
mov
sarb
add
or
sbb
daa
cwtl
ja
push
sbb
jbe
dec
jecxz
das
mov
inc
rclb
out
clc
push
xchg
aas
roll
mov
sbb
pop
jae
nop
or
dec
mov
xchg
dec
add
xor
movsb
cmp
jge
mov
je
pop
and
fs
or
pop
mov
push
mov
dec
icebp
dec
cs
imul
pusha
pop
in
mov
push
lret
aaa
pusha
popa
xor
sbb
jno
mov
dec
outsl
add
or
aad
add
pop
ds
ret
test
test
sub
jns
bound
jge
call
push
sub
flds
adc
sti
sub
mov
dec
cmp
mov
loop
or
dec
leave
stos
outsl
addr16
out
mov
mov
int3
mov
inc
cmp
push
jb
mov
dec
ds
jne
lcall
push
ja
jbe
jge
add
lods
fildl
cwtl
pop
pop
rorl
cli
or
add
mov
orl
xchg
sahf
sub
sbb
cmp
jmp
cmp
and
in
sbb
leave
jno
push
mov
lods
mov
and
mov
mov
out
sbb
mov
scas
lock
das
jmp
add
fucomip
pop
roll
aad
ret
mov
jle
insl
fs
inc
xchg
int3
data16
mov
xor
mov
cld
mov
cwtl
and
sub
out
pop
push
popf
pushf
imul
test
mov
and
movsb
and
inc
dec
das
cwtl
sub
fisttps
fs
mov
mov
jmp
stos
ja
mov
shlb
lods
loop
jne
xchg
xchg
movsl
cltd
fadds
shrb
pop
arpl
mov
lret
inc
add
xlat
sahf
cltd
sub
dec
aam
mov
add
inc
es
adc
insl
imul
or
xchg
mov
jmp
push
outsl
xor
pop
cmp
lret
lds
gs
inc
mov
lcall
lret
pop
pop
push
and
push
mov
sub
inc
and
rolb
popf
das
popf
frstor
xchg
aaa
push
jno
add
fucomp
lret
in
shrl
push
lahf
ret
imul
push
int3
test
mov
mov
mov
cmp
add
cmp
pop
int3
shlb
dec
mov
stc
pop
in
das
int3
lds
or
sub
inc
dec
adc
enter
jmp
xchg
test
imul
stc
xchg
jno
imul
sub
cltd
mov
xchg
pop
inc
mov
sarl
in
jns
xchg
mov
out
xchg
mov
negb
pop
cwtl
sub
fistpl
pop
xchg
jo
addr16
push
mov
aad
push
scas
adc
ficompl
sahf
push
and
bound
insl
pop
andl
xor
mov
sahf
std
dec
xchg
in
movsl
andps
adc
rcl
jno
add
scas
add
pop
push
inc
jmp
inc
xlat
mov
movntq
mov
pop
xchg
mov
andb
adc
leave
lock
cld
in
add
fwait
pop
subb
mov
cmc
mov
pop
std
arpl
adc
sete
cmp
ja
sar
cmpsl
xchg
cmpb
pop
enter
jno
in
out
imul
xor
fs
mov
xor
cmpsb
mov
add
mov
sub
andl
mov
xlat
aaa
sbb
sub
inc
jae
push
shlb
jmp
push
popa
push
idivb
pusha
push
sub
std
mov
pop
jecxz
mov
inc
xor
lcall
inc
into
mov
sub
stc
dec
jo
sub
test
mov
sub
push
sub
lret
cmpsb
mov
aas
jo
std
pusha
mov
pushf
fs
sbb
hlt
call
call
sub
dec
push
push
mov
dec
inc
lret
cmpsb
push
lcall
adc
mov
push
aad
jecxz
roll
lret
in
dec
inc
aas
int3
mov
cwtl
sbb
out
sbb
clc
out
adc
fs
pop
cmp
stos
ret
icebp
adc
jmp
add
imul
cmp
nop
mov
xlat
lea
or
rolb
cmp
dec
and
or
pop
or
out
sub
cli
fistl
rorb
gs
xchg
mov
push
bound
daa
mov
insb
pop
sub
dec
das
fdivl
mov
jp
ret
jl
inc
dec
notl
imul
rorl
adc
cmpl
fildl
mov
mov
dec
dec
std
jno
pop
aaa
test
pop
cmp
sbb
cmc
add
mov
es
ds
and
outsb
gs
push
outsb
adc
xchg
outsl
movsb
pop
sub
and
push
cld
adc
mov
mulb
repnz
lcall
inc
in
rcrb
mov
rorl
in
xchg
sahf
adc
jbe
ror
addr16
lea
jno
fnstsw
jg
aad
mov
push
jb
xchg
and
pop
mov
mov
sub
je
jb
orb
stos
pusha
fsubrs
dec
add
xor
out
jmp
addb
push
cwtl
xchg
shl
add
xlat
jb
loop
push
push
in
loop
pop
setne
add
or
cmp
inc
sbb
pushf
xchg
shll
jbe
xchg
pop
fbstp
pop
xor
dec
inc
dec
rorl
es
mul
cmp
iret
imul
testb
push
add
addl
jg
or
in
xchg
xchg
lds
dec
xchg
clc
mov
inc
pop
mov
push
push
cmp
data16
push
out
fcmove
pop
aam
iret
cli
jp
test
lods
jle
xor
xor
rcrb
dec
std
bound
fisttps
and
jbe
leave
loopne
mov
mov
int
xor
sbb
shlb
aas
mov
fwait
push
inc
dec
sbb
mov
or
icebp
mov
xchg
in
stos
or
enter
adc
jp
fldpi
je
pop
or
cmpsb
hlt
pushf
mov
ficoms
stc
dec
insl
sbb
nop
mov
sub
cmp
cwtl
shrb
cltd
sbb
sbb
das
or
lcall
stos
lods
mov
jmp
out
aam
out
xor
inc
lods
push
test
jo
inc
stos
mov
add
jb
push
das
mov
push
std
or
cwtl
andl
add
enter
inc
or
cltd
lods
leave
mov
sub
or
cmp
pop
stc
xchg
loopne
adc
popf
xchg
inc
sub
jecxz
or
mov
dec
mov
fwait
test
adc
mov
sub
pop
push
sub
movsl
jg
dec
add
jg
shr
sbb
pop
in
jg
ja
mov
lock
movsl
sub
mov
add
sarb
push
fcmovnu
mov
out
push
mov
mov
test
lcall
in
mov
xor
inc
int
lahf
or
sub
xor
jo
xor
push
xchg
mov
dec
inc
outsb
mov
out
cmp
or
daa
jge
push
jbe
mov
or
dec
mov
cmp
mov
out
insl
in
fldt
add
cmp
repnz
mov
add
fisubrl
mulb
insb
mov
jecxz
xchg
mov
insl
push
and
push
fadd
push
sar
insl
pop
int3
or
shrl
jecxz
or
pop
psubusw
jb
fldenv
pop
lea
outsl
aaa
xchg
loopne
testb
cmp
dec
lahf
and
cli
cs
arpl
adc
push
add
and
and
mov
dec
sub
fnstcw
cmpsl
and
xchg
frstor
fbld
bound
out
adc
push
mov
jbe
leave
test
push
in
pop
gs
or
or
mov
inc
xchg
ret
jns
pop
cmp
jbe
cmpsb
cs
sti
testl
lret
push
push
es
and
mov
je
pop
ja
fldz
mov
sub
adc
js
sub
sbbl
bound
or
insb
cltd
push
repz
ret
cs
test
cli
sbb
pop
inc
and
lcall
xlat
xor
inc
adc
adc
jge
cmp
mov
inc
jp
xchg
and
outsb
jp
cmp
and
xor
xchg
imul
hlt
fwait
pop
inc
mov
sub
subl
fimuls
sub
lds
shrb
pop
fs
adc
iret
lds
movl
hlt
movl
mov
jp
or
mov
punpcklbw
dec
js
icebp
daa
add
jp
sbb
test
mov
add
stos
mov
test
and
nop
pop
and
mov
divb
push
pop
sbb
jae
jg
fwait
pushf
cltd
pusha
pusha
jnp
in
mov
mov
data16
or
mov
fmulp
jb
scas
in
clc
mov
mov
jae
les
ret
ja
sub
or
addr16
push
cmp
idivb
cmc
mul
mov
xchg
call
xchg
mov
xor
dec
lret
cmp
imul
mov
add
cs
sbb
lods
adc
mov
int
lret
hlt
mov
inc
ljmp
push
aad
popf
icebp
rcll
lds
aas
mov
and
incb
mov
jne
mov
test
fsubl
ja
aaa
jns
lret
insl
inc
cmpsl
mov
lret
lcall
add
xchg
ljmp
and
cmpsb
into
je
fucom
ret
shrb
cmp
ret
mov
adc
out
sub
fimuls
clc
pop
fadds
xor
mov
ljmp
aam
andb
sbbl
popa
adcb
clc
mov
fisttps
mov
in
jne
mov
xchg
test
mov
lock
push
aaa
jnp
mov
xchg
mov
je
ds
sarb
daa
fprem
imul
mov
enter
inc
sbb
xlat
stos
lret
sti
out
js,pt
adc
pop
pop
xor
jno,pn
or
add
xchg
push
mov
add
je
jae
inc
mov
cmp
jl
int
xchg
into
cmp
pushf
fwait
testl
aam
xchg
mov
push
xchg
inc
push
je
loopne
adc
aas
cmc
mov
rorl
lret
or
sub
mov
dec
cli
push
int
sti
jg
sub
jg
sahf
mov
dec
add
adc
jbe
daa
xlat
xchg
jmp
je
lods
inc
xchg
pop
roll
testl
push
shrb
sarl
push
roll
or
decb
cmp
lret
fincstp
lret
sbb
or
inc
loope
lcall
mov
xor
in
loope
rdmsr
mov
pop
pop
adc
outsb
addb
cmp
inc
add
or
push
mov
jmp
cmp
fldt
shl
aad
pop
sbb
and
dec
pop
lods
and
mov
dec
mov
pop
cmp
shll
jb
icebp
fisubl
jmp
inc
in
call
fwait
fs
cli
loop
test
fnstsw
clc
fisttps
cltd
mov
gs
sub
inc
test
or
xchg
jne
mov
out
pop
pop
or
adc
int3
cmpsl
enter
popa
sub
imul
pop
dec
fcoml
mov
adc
mov
inc
xchg
scas
inc
push
jl
sarl
outsb
xlat
clc
adc
sarb
pop
fistps
push
sbb
into
iret
xor
rcrb
sbb
fwait
roll
mov
cli
repz
fnstenv
jae
fcomps
and
cmp
nop
repnz
fdivl
inc
xorl
movsb
jg
dec
addb
je
int
push
sub
pop
aas
adc
sub
mov
adc
mov
jecxz
mov
push
pop
or
test
stc
mov
sarb
jnp
rcll
xchg
push
outsl
out
mov
ljmp
clc
mov
aas
cwtl
cmp
mov
cld
dec
pop
movq
roll
sub
jge
xchg
int3
aad
daa
xorl
sbb
mov
xor
or
adc
mov
adc
fisubrl
inc
push
lret
ja
loope
cld
jmp
mov
or
or
cmp
xchg
stos
mov
sub
sbb
in
hlt
push
dec
fimull
xor
loopne
dec
mov
int3
in
cmpsl
subl
scas
xchg
and
jge
xchg
divb
xchg
jp
movsb
and
into
push
sbb
div
xchg
pop
in
stos
sbb
daa
add
popa
repnz
sbb
loope
cmpsb
inc
adc
loopne
sub
sub
lcall
dec
rcrl
jns
xchg
and
add
test
mov
idiv
pushf
rorl
out
roll
inc
stos
push
or
and
xor
or
pop
fists
add
adc
fisttps
popa
and
sub
in
or
sbb
pop
cmp
dec
mov
or
mov
mov
in
clc
inc
cmpsl
cmpsl
stos
je
jns
or
fidivrl
jl
mov
or
sub
inc
out
repnz
sub
and
bound
push
mov
or
aad
dec
out
and
fnsave
aad
add
inc
fs
jle
addr16
cmp
inc
jge
jl
shr
jne
or
ja
dec
jnp
xchg
cmp
mov
icebp
lea
outsl
push
fs
jbe
ljmp
insb
mov
pop
incl
xor
icebp
mov
sbb
dec
jmp
out
cmp
mov
add
xlat
mov
sbb
ffreep
inc
jbe
test
test
pop
das
mov
into
fmuls
xrelease
pusha
xlat
sub
dec
sub
push
imul
pop
sub
or
je,pn
in
lock
xchg
lds
roll
inc
add
adc
outsb
jb
fwait
pop
xor
fisttpll
sub
mov
push
sbb
mov
sub
mov
stos
imul
aaa
sti
sub
sub
xchg
lods
verw
out
out
shll
sub
pop
test
dec
mov
pop
aas
into
sub
mov
mov
and
jmp
and
fs
mov
pop
icebp
mov
inc
arpl
fdivrs
mov
xor
push
pop
inc
xor
push
mov
sbb
js
fldt
fwait
mov
jl
shlb
data16
pop
pop
jb
cmpsb
into
sahf
inc
stos
mov
cmpsl
out
arpl
cmpsb
aam
out
mov
enter
or
cmp
xor
jl
and
int
add
or
fisttps
xchg
cli
xor
nop
imul
jecxz
jae
stc
adcb
pop
push
xchg
je
fwait
movsb
add
add
push
inc
inc
lret
inc
sub
push
xchg
or
int
mov
push
aad
mov
xchg
cmp
iret
adc
in
mov
mov
ds
mov
enter
pop
lds
mov
mov
outsb
hlt
orl
sbb
jmp
jmp
mov
xor
xor
iret
dec
xor
mov
fnstsw
and
cmp
xor
fstpt
inc
call
ret
xchg
cmp
push
xor
dec
scas
pop
and
push
das
popa
push
orb
mov
mov
dec
loope
push
jb
std
repz
adcl
outsb
jae
jl
inc
popf
scas
fnsave
jbe
out
lahf
scas
mov
lods
pop
mov
imul
xchg
pushf
shlb
cltd
xlat
and
pop
cmc
loope
dec
lock
sub
out
icebp
into
jne
movsl
and
jo
inc
xchg
add
pop
in
sub
nop
cltd
andl
add
imul
xchg
repnz
inc
and
adc
jp
fildl
xlat
addr16
loope
adc
mov
cmp
imul
loopne
mov
stc
out
test
hlt
outsl
mov
sub
js
mov
push
cmc
dec
and
cmp
shr
adc
mov
xor
mov
and
subl
or
imul
decl
ljmp
call
ret
orl
push
outsb
es
sbb
lods
lods
cld
cmp
fwait
cmp
sub
fisubs
xlat
pop
int3
and
scas
mov
mov
popa
add
add
test
pop
mov
push
inc
cmpsb
mov
notl
imul
test
mov
jl
sbb
mov
loope
cs
jne
push
repz
les
es
add
stos
imul
jg
push
push
fwait
mov
sbb
push
sbb
test
cmp
add
clc
imul
add
int3
les
add
mov
daa
inc
sti
push
or
or
push
scas
jbe
out
or
xchg
jecxz
or
arpl
dec
fwait
pop
stc
fstpl
hlt
push
test
popf
or
popa
daa
sbb
adc
push
or
inc
out
lods
aaa
or
int3
add
pop
add
fisubs
sbb
mov
lret
rorl
shrl
xchg
cmp
inc
xchg
popf
lock
cmp
xor
jmp
jnp
lock
xchg
xor
mov
cltd
sub
xchg
nop
in
cwtl
rcrb
into
std
dec
lea
add
out
xchg
lret
shlb
or
test
sbb
add
push
rcr
and
jae
push
insl
in
push
xor
mov
loope
push
sbb
aas
xchg
or
lea
dec
out
or
loop
dec
push
adc
jle
xlat
xchg
jecxz
inc
jb
je
mov
out
xor
cli
inc
out
adc
gs
idivl
cmp
jns
jno
or
or
rcrl
xor
pop
bound
lea
xchg
xchg
cmp
and
jmp
xlat
in
sbb
out
jmp
xchg
sub
fsubl
push
xchg
gs
lret
cmp
scas
out
cltd
mov
test
jnp
cwtl
xor
jo
mov
nop
push
mov
sbb
nop
add
and
jle
mov
into
sbbl
mov
cmp
push
lret
inc
addr16
push
fs
xor
aam
pop
mov
fcoml
mov
mull
pop
cltd
dec
or
les
jl
lahf
push
xlat
jo
bnd
in
lock
dec
aam
aas
pop
cmpsb
popa
add
loopne
sbb
cmc
push
push
nop
ficoms
push
rcrb
sub
lods
mov
daa
ds
cmpsb
cmpsl
pop
mov
popa
xchg
cltd
outsl
mov
or
xchg
jno
cli
push
mov
cld
hlt
mov
cli
ss
ret
jle
pop
mov
and
in
jmp
fildl
pop
ret
xor
leave
testb
aaa
add
jne
dec
addr16
loopne
negl
les
and
inc
mov
cltd
push
mov
adc
mov
in
jnp
cs
push
xchg
cmpsl
repnz
rcl
or
mov
cmpsl
stos
sub
das
lcall
xor
aas
mov
mov
sub
loope
pop
mov
sub
outsl
jmp
fcompl
es
repz
xlat
sub
adc
adc
enter
add
jp
xor
incl
or
pop
sbb
mov
aaa
jle
stos
xchg
std
pop
xor
push
lods
fs
imull
in
xchg
orl
aam
loopne
mov
mov
sub
cmovne
sbb
and
cmpsl
cli
pop
hlt
ss
xchg
cmpsb
jg
mov
inc
outsb
and
push
pop
int
dec
test
xchg
cwtl
mov
xchg
iret
iret
lods
addr16
out
mov
or
scas
jno
mov
inc
sarb
pop
push
movsb
pop
shll
popa
call
cmc
xchg
cmp
lods
xchg
cmpsb
rcr
fwait
and
pusha
push
enter
jecxz
fwait
addr16
jp
movsb
leave
mov
fscale
sub
or
rolb
mov
inc
xchg
aam
jg
movzwl
xor
out
insl
jl
lcall
icebp
inc
rcl
and
add
out
xchg
mov
fdivs
pop
sub
pop
xor
shl
stc
in
cmp
mov
inc
push
push
sbb
sub
mov
fiaddl
mov
lods
cmpsl
cli
and
mov
push
sbbb
push
daa
lods
jge
xchg
sti
pop
sbb
mov
shl
sbb
in
sub
or
int3
add
mov
loope
cmp
enter
ficoml
sub
pop
or
in
int
fcoml
sbb
std
and
sbb
imul
test
jecxz
cmp
or
push
jne
in
jmp
sub
js
push
push
push
in
sub
dec
scas
loopne
dec
and
pop
in
test
push
aad
pop
pop
cmp
fiaddl
or
movsb
imul
imul
xor
test
push
inc
ljmp
into
jl
mov
xor
stos
pop
jae
push
ror
in
pop
mov
adc
mov
inc
adc
outsl
cs
cs
and
pop
adc
cmpsl
movsl
gs
popf
cmpsl
jno
xadd
stc
inc
int
adc
popf
faddl
xchg
jo
inc
and
xchg
idiv
sub
mov
ja
cmp
lahf
ficoms
pop
outsl
jbe
cs
negl
push
cmpsb
out
sbb
sbb
jge
add
mov
insl
mov
fsubp
orb
add
push
aas
xorl
mov
sub
ret
cmpb
es
rolb
fwait
push
pop
cmovg
mov
cmp
ror
dec
cmp
rclb
test
jg
js
inc
fcoms
adc
add
xchg
ds
fcmovb
movsl
rcl
je
imul
xlat
mov
movsl
ja
insl
js
mov
outsl
sub
cwtl
jnp
sub
push
pop
pop
add
loope
shl
and
sahf
lahf
leave
adc
loope
mov
or
xchg
jmp
enter
cmp
icebp
mov
stos
lods
push
sub
ret
dec
orl
aam
jo
in
cmp
jbe
xor
lret
sub
xor
inc
and
and
cmpsl
xchg
lods
adc
mov
rcll
out
xorl
mov
pop
mov
lea
jbe
int3
cmp
jg
mulb
mov
ret
adc
fwait
cmp
xchg
xchg
mov
mov
addr16
scas
cli
sbb
jno
dec
fimuls
mov
sbb
insb
sub
lcall
mov
mov
cld
les
add
inc
push
popf
cli
inc
ljmp
cmp
adc
fwait
test
and
pop
iret
outsl
jge
push
cmp
hlt
test
jmp
add
in
ret
sbb
cmp
enter
cmp
stc
sbb
sti
jae
mov
mov
mov
push
aaa
push
inc
cmp
pop
sub
jmp
cmpsb
push
or
lahf
aad
icebp
push
xchg
inc
and
adc
sbb
mov
dec
cmpsb
sub
stc
in
in
or
fnstcw
stos
mov
pop
ficompl
cwtl
scas
lea
lret
fs
ror
andl
ljmp
outsb
into
mov
mov
int3
mov
pop
pop
push
test
mov
jb
mov
adc
jmp
xchg
pop
adc
or
cmp
dec
jbe
movsl
mov
mov
jb
push
leave
sbb
push
jbe
push
or
mov
mov
bound
fwait
jp
xchg
push
and
push
dec
pop
xchg
ret
sahf
aas
xchg
cli
fs
lds
or
fabs
cmp
jae
mov
int3
xchg
wrmsr
hlt
sahf
jmp
ja
pushf
ret
add
push
inc
test
mov
and
cmpsb
test
adc
push
xchg
enter
das
lret
daa
cmp
arpl
xor
dec
mov
gs
and
lret
pop
rorl
addl
jmp
imul
xchg
push
mov
sbb
dec
shlb
xor
gs
or
mov
ja
sbb
out
in
rorl
jnp
rol
cmpsl
sbbl
sbb
xor
jno
rorl
enter
in
shrb
pop
ja
xchg
fdivs
pop
rcrl
out
fwait
push
arpl
pop
xchg
adc
cmp
xchg
pop
inc
dec
pop
fcmovb
fadds
cmp
jns,pt
inc
insl
sbb
call
mov
call
shll
orl
adc
xchg
icebp
pop
lock
mov
sub
insl
mov
sarl
out
popa
movsl
push
xchg
push
cli
dec
movsb
lock
andl
fwait
adc
xchg
or
jae
rorb
mov
push
in
loopne
mov
mov
ficomps
mov
xchg
aas
sub
pop
or
clc
imul
inc
sbb
and
push
lcall
imull
into
mov
push
push
dec
fmuls
int
lcall
pop
adc
stc
mov
stos
and
mov
adc
jns
xor
fdivrl
or
loope
cmpsb
rcrl
cmp
mov
ds
sbb
sub
push
loope
xor
or
mov
in
mov
das
jno
jno
test
xchg
xor
dec
arpl
adc
int3
pop
sub
pop
jo
movsb
ficoml
insb
add
push
pop
and
lods
addb
dec
or
and
int3
ficompl
in
cmp
psubusw
rolb
inc
push
mov
sbb
pop
xor
fwait
iret
popf
mov
cmc
lret
ret
mov
test
dec
in
xchg
adc
xor
pop
pop
mov
pop
leave
dec
mov
out
lea
lods
xchg
call
orb
cmp
pop
addr16
in
jno
jb
adc
dec
shrb
inc
bound
fnsave
mov
fst
ret
out
inc
mov
inc
hlt
movsb
ret
adc
pop
or
jns
hlt
gs
sbb
arpl
mov
push
xor
scas
xor
popa
pop
iret
sub
stos
dec
mov
and
sub
rcrb
dec
mov
cmpsl
adcl
stos
lret
adc
cmpsl
push
and
test
sbb
xchg
xor
push
sub
adc
ret
cmp
or
mov
into
cmp
xchg
mov
mov
fildll
jae
add
sbb
test
push
popf
into
inc
and
dec
outsb
nop
pop
aam
push
xor
push
mov
sub
mov
cmp
flds
ret
nop
ljmp
and
add
xlat
push
pop
fistpll
pusha
jno
jnp
sbb
mov
push
iret
dec
or
adc
scas
and
fwait
popw
stos
sub
rcrl
pop
mov
mov
hlt
mov
adc
popa
mov
push
mov
adc
aaa
fsubr
and
xchg
scas
xchg
dec
bound
dec
xchg
adc
sub
adc
jae
sub
push
push
jo
jns
in
aas
or
jo
icebp
adc
mov
mov
testl
ds
jb,pt
icebp
pop
test
adc
imul
sub
sub
sarl
out
out
aad
pop
sarl
cmc
sar
in
pop
sbb
call
test
hlt
mov
rcrl
push
xchg
mov
cwtl
xchg
fs
sub
mov
inc
or
std
xor
add
inc
ljmp
cmp
and
xchg
xchg
pop
cmpb
in
outsb
outsl
js
in
jge
lcall
test
pop
mov
push
adc
out
sbb
dec
scas
lahf
imul
sbb
cltd
mov
xchg
xor
cmpsb
pop
int3
test
cmp
ss
js
xchg
mov
sahf
dec
enter
adcl
ret
inc
clc
rcl
xor
push
inc
ret
mov
scas
mov
mov
fdivl
faddl
mov
pop
lret
pop
mov
adc
add
or
add
pop
or
jge
push
xchg
icebp
or
fisubrs
inc
lods
leave
sub
xlat
out
push
inc
clc
sbb
stos
sbb
rorb
sub
jl
leave
lods
rol
aad
addr16
lock
push
mov
jge
outsb
jp
ss
push
adc
int
jge
mul
push
adc
mov
mov
sub
xor
insb
pop
imul
leave
mov
xchg
xchg
ds
lds
xchg
xchg
jg
push
cld
lea
nop
lock
js
test
push
jnp
sub
out
mov
and
insb
xor
cwtl
test
test
addr16
xchg
loopne
rorb
add
xor
push
jo
dec
add
sub
rcrl
and
in
mov
cmp
pop
fisttpll
or
dec
pop
rcl
sub
bound
scas
hlt
sub
push
adc
call
add
xorl
push
in
adc
dec
mov
jle
dec
adcb
icebp
mov
push
jmp
in
outsl
in
fisttps
xchg
xor
negl
enter
sub
testl
pop
mov
and
inc
mov
aad
nop
and
call
jnp
mov
push
mov
cli
pop
xchg
add
sbb
push
fcmovne
xor
repnz
into
cmp
js
sub
pusha
ja
icebp
outsb
xlat
cli
jo
shll
nop
add
cmovo
jl
nop
jno
pop
xor
jns
sarl
dec
xor
int
push
data16
and
inc
arpl
in
or
repnz
gs
ds
jmp
fistpll
add
imulb
daa
sahf
inc
mov
xor
push
in
fldln2
in
sbbl
push
ss
mov
je
fldl
fldt
mov
add
push
cmp
test
mov
pop
adc
repz
xor
mov
xor
pop
es
int3
insb
cld
lahf
cwtl
jns
popf
sti
mov
ja
pop
pop
decb
ret
outsb
or
cmp
lds
add
cwtl
lock
sbb
jmp
shll
mov
push
pop
lods
loopne
dec
sahf
lahf
testl
adc
arpl
aad
sub
je
push
test
jno
popa
addl
lahf
loope
xor
std
fsts
sbb
data16
dec
mov
pusha
fisubrl
add
xchg
mov
pushf
arpl
clc
pop
mov
scas
ljmp
sub
add
fadds
fwait
subb
rcll
mov
in
jno
inc
xchg
jecxz
sbb
mov
push
ds
jecxz
mov
sete
sub
pop
sbb
lea
popa
lahf
sub
std
add
jp
cmp
pop
dec
daa
pop
xchg
sub
sbb
xor
adc
lahf
das
push
ror
inc
imul
rcr
jbe
cli
das
and
or
insl
xchg
xor
adc
roll
mov
xor
xchg
pop
or
iret
out
cmpsl
ret
leave
test
adcb
mov
es
js
test
sti
sti
add
std
orb
adcl
pop
lds
pop
adc
sbb
xor
mov
rolb
pop
sbb
mov
imul
pop
mov
test
lahf
ret
cmpsl
into
sbb
loopne
adc
pop
aad
testb
or
mov
nop
lea
inc
mov
adc
loop
cmp
or
loopne
cmp
jne
enter
out
loop
add
cmp
adc
xchg
sub
das
iret
push
outsb
xchg
push
mov
into
sub
inc
enter
cmp
shl
push
cmc
mov
xor
addl
push
cwtl
test
and
xor
cmp
aam
pop
sbb
mov
inc
rcll
and
dec
pop
stos
push
dec
add
dec
mov
mov
xchg
mov
mov
jnp
xlat
jno
or
dec
outsl
repz
std
pusha
je
mov
rcrl
lea
mov
xchg
loopne
and
dec
push
add
cmpsl
pusha
pop
bound
sub
push
inc
subb
movsl
push
mov
push
jns
sub
pusha
push
cwtl
inc
bound
cs
jns
movsl
ret
sub
xchg
push
loopne
jg
ret
mov
leave
sti
add
xor
inc
das
adc
call
repnz
sub
push
sti
pop
shl
inc
mov
mov
imul
movsb
xor
cmp
sbb
mov
inc
cmp
push
nop
stos
loope
pop
sub
mov
or
nop
mov
sub
test
sbb
out
xchg
push
lret
fdivs
rolb
mov
mov
push
mov
outsb
es
sub
add
xchg
iret
aad
mov
cmc
and
push
pop
movsl
nop
ficoml
inc
push
pop
cmp
rcrb
fwait
orb
mov
inc
mov
mov
imul
adc
lock
adc
std
out
jp
jle
leave
stc
cmp
sbb
ljmp
mov
out
aaa
mov
mov
clc
push
fisubl
mov
out
jno
leave
ret
sub
and
stos
aad
mov
mov
sbb
inc
inc
stos
xor
cmp
jns
push
mov
mov
xor
test
xchg
xchg
outsb
jl
orb
fwait
pop
and
adc
in
test
adc
insl
test
or
xor
add
fs
mov
or
ss
imul
and
in
add
jo
mov
cli
ljmp
bound
add
cmpsl
daa
push
notb
xor
inc
or
jbe
add
inc
mov
mov
cmp
and
push
inc
add
xor
in
jne
mov
sub
pop
mov
sarb
xor
lea
jbe
cltd
and
pop
mov
jge
pusha
add
xor
mov
sub
stc
push
adc
clc
cmp
leave
cltd
ret
push
jbe
mov
add
and
sub
and
aaa
xor
adc
xchg
in
sub
jne
inc
lahf
movsl
adc
jo
jmp
insb
xor
rclb
pusha
mov
in
shll
movsb
loope
xchg
jle
sub
or
lret
xchg
sub
mov
in
mov
adc
inc
out
addb
rol
lea
xchg
xor
call
test
add
cmp
int
hlt
lcall
mov
inc
fmuls
sub
mov
sbb
popf
repz
jge
xor
outsl
xchg
xor
mov
push
frstor
cmp
addr16
movsl
cli
outsb
dec
mov
aas
ds
adc
movsb
mov
adc
xchg
hlt
fs
sti
lods
inc
and
or
ss
xor
int3
jns
adcb
sbb
mov
adc
xchg
pop
negb
or
and
outsl
cmc
decb
idivl
inc
xor
inc
cmp
jmp
jae
sub
sub
jle
jb
into
and
jg
loope
call
adc
and
jb
jo
lret
xchg
xor
dec
xor
pop
mov
xor
sbb
insl
dec
rorl
fisubl
decb
jmp
cmpsl
add
dec
loope
push
hlt
mov
loope
insl
mov
cmpb
stos
and
sbb
mov
aas
mov
ret
add
inc
and
subb
dec
js
sbbl
add
subl
fcomi
fcoml
mov
mov
loop
mov
roll
out
dec
add
sbb
hlt
sbb
cmp
sbb
movl
push
lea
or
push
shr
sub
sub
or
sub
dec
stos
dec
add
rcr
pop
pop
out
sbbb
or
scas
std
push
gs
aas
fs
push
je
jge
aam
sbb
jnp
pop
into
and
out
xor
mov
push
dec
iret
and
aaa
rorb
jecxz
insl
adc
inc
std
xchg
mov
es
dec
lcall
les
fcmovb
adc
xor
sbb
mov
in
nop
inc
fsubrs
in
out
fidivs
lahf
mov
and
pmuludq
sub
jbe
inc
jns
sar
les
in
pop
mov
push
int
xchg
push
and
and
ljmp
cmp
xchg
aaa
outsl
cmp
push
fstpl
je
ficompl
outsl
rcll
jbe
xor
jmp
mov
dec
mov
add
outsb
call
fwait
loopne
aas
xor
mov
push
push
iret
dec
xor
sbb
jg
movsl
repz
pop
mov
cli
xchg
pop
andl
fcmove
fstpl
adc
ja
mov
rcrl
clc
xor
in
pop
pop
andb
lahf
push
aam
mov
js
je
mov
pop
mov
cmp
inc
lcall
lods
pop
mov
outsb
bound
sub
sub
jecxz
push
xchg
pop
stos
iret
inc
jp
mov
jbe
movntq
out
pop
ret
movsl
rolb
and
dec
cli
inc
out
push
cmp
mov
xor
shlb
xchg
xlat
out
out
movzbl
push
cmp
jp
cmpsl
lret
pop
arpl
out
push
dec
lcall
jnp
negb
adc
xchg
loopne
jns
mov
cs
dec
cltd
ss
mov
incb
mov
push
pop
mov
ret
jne
inc
inc
mov
mov
xor
mulb
pop
insb
xor
ret
mov
fsub
loope
loopne
in
and
mov
mov
rcrb
das
ljmp
mov
xor
add
sub
les
shl
mov
dec
push
mov
cmp
fisubl
push
mulb
adc
xchg
mov
xor
test
in
jbe
inc
shll
les
pusha
inc
push
jge
push
xor
push
sbb
aaa
test
pop
ret
sbb
or
lret
adc
add
push
in
adc
clc
push
lods
out
push
mov
incl
cs
adc
mov
ljmp
sub
adc
in
mov
lods
push
dec
rorb
mov
push
xchg
into
lods
mov
mov
cmpsl
mov
and
xchg
aam
mov
xor
or
fisttpl
aaa
scas
jne
add
mov
xor
dec
mov
cmp
ja
sub
and
ja
xor
testb
popf
imul
mov
xor
jno
xchg
xor
push
mov
dec
arpl
cmp
mov
shll
icebp
cmp
arpl
or
sbb
sti
xchg
inc
sbbb
inc
dec
imul
popl
mov
in
and
jle
in
movsb
sarb
xchg
subl
push
imul
sub
mov
lods
cli
and
jb
outsb
int3
iret
mov
xchg
sbb
pop
adc
arpl
popf
das
cs
sbb
ret
xor
clc
ret
jecxz
adc
jmp
mov
xchg
inc
mov
hlt
cmp
shrl
iret
scas
mov
call
orb
sar
jmp
adc
xor
jp
bswap
mov
rorb
jmp
mov
es
pop
mov
push
movsb
mov
dec
jge
dec
aam
pop
imulb
sbb
shrb
adc
ds
sub
arpl
imul
add
fwait
mov
fcmovnbe
mov
enter
ret
ss
dec
inc
sub
pop
add
xchg
sub
pop
fs
in
sbb
mov
out
movsl
rol
pop
arpl
fistl
mov
jae
bound
rorb
in
pop
jae
int
data16
into
rolb
push
daa
pop
sub
clc
adc
stos
rcrb
sbb
and
push
adc
lfs
mov
shll
cmp
mov
repz
imul
jmp
cmp
fsub
orl
sbb
push
xchg
cmp
mov
adcl
ss
jg
sti
les
push
push
adc
fcompl
int
mov
lcall
mov
mov
pushf
stos
lea
lret
jbe
sub
sbb
xlat
cmpsb
mov
or
sbb
imul
mov
mov
enter
movsb
bnd
xchg
scas
mov
lods
inc
xchg
jmp
adc
jne
dec
gs
add
adc
das
in
or
push
in
cltd
cmp
mov
sub
dec
test
mov
dec
inc
leave
jmp
insb
sti
sub
in
imul
mov
push
inc
fnstsw
ret
and
inc
loop
and
loopne
inc
sbb
nop
sar
pushf
call
nop
or
sbb
jmp
test
lea
jae
pop
push
call
int
jl
inc
pop
pop
ret
mov
xchg
loopne
adc
adc
sbb
ja
sub
ficoml
test
mov
loopne
shlb
jecxz
in
inc
insl
mov
lods
decl
cmp
push
aaa
or
xorb
call
fprem1
xchg
mov
adc
into
xor
shrb
pop
std
dec
sub
mov
adc
insl
ja
sbb
mov
mov
pop
in
dec
xor
lds
and
push
adc
dec
test
clc
repnz
mov
push
cmp
shll
repz
cmp
popa
cmpsl
mov
test
stos
add
fwait
xorl
jp
loop
popf
fs
mov
bound
pop
push
pop
lcall
cmc
std
and
push
fistps
xchg
fsubrl
cmp
mov
lea
cmpsl
jno
daa
jecxz
pop
xchg
insb
jns
cmpsl
lret
and
and
imul
dec
fnstenv
cmc
shrl
insl
mov
jg
inc
dec
pusha
inc
sbbl
push
in
mov
ret
cmp
mov
movsb
arpl
sub
pop
lods
mov
out
mov
push
push
mov
popf
xor
add
inc
xor
push
cli
pop
jbe
jbe
sbb
jg
in
add
and
xchg
push
js
divl
mov
or
sub
bsr
cmp
inc
mov
out
mov
in
xor
mov
jo
push
cmc
jbe
cmp
pop
jg
xchg
sub
aas
pushf
add
pop
inc
rorl
inc
nop
mov
and
mov
push
mov
es
or
jne
outsl
daa
cltd
rol
add
in
and
aam
scas
add
jg
pop
aaa
pop
jl
dec
sbb
sbb
push
xchg
pushf
les
out
and
mov
daa
jo
sub
enter
fiaddl
fs
sbb
sub
ja
jmp
jle
add
imul
out
imul
mov
mov
cli
xor
mov
jnp
push
xchg
inc
sbb
sahf
data16
pusha
out
adc
fcom
ja
xor
orl
adc
out
daa
movsl
or
push
mov
adc
and
in
out
hlt
xchg
push
sbb
push
out
mov
pop
cmp
pop
cmp
jecxz
into
rorb
jg
jg
xor
je
sub
sub
pop
popa
push
idiv
inc
pop
les
mov
jno
lcall
mov
mov
pop
insl
dec
scas
inc
pop
dec
inc
sahf
add
fisttps
mov
dec
sbbb
scas
jecxz
ficomps
mov
sbb
repz
cmpsl
jge
jmp
jnp
in
jns
push
std
xor
mov
mov
mov
or
xchg
in
ror
faddl
or
movd
mov
sbb
sub
add
scas
nop
scas
fstpt
xchg
mov
movsb
outsb
gs
dec
inc
ljmp
cmp
outsl
mov
xchg
in
sbb
shlb
jmp
ljmp
fsts
rcl
dec
in
fisubrs
pop
fcomp
popf
loop
daa
inc
ret
stos
fs
leave
leave
mov
pop
gs
push
pop
loop
fcompl
dec
xor
xor
sbb
xchg
mov
sub
xchg
ja
mov
ss
ret
cs
jno
jp
in
testl
and
sbb
out
xor
push
lods
add
push
jle
jecxz
jbe
push
aaa
mov
fbstp
rcll
jbe
test
xchg
push
data16
sbb
xor
call
scas
sti
mov
pop
shr
pusha
jl
call
bound
inc
fcomps
jp
aad
ret
mov
imul
jae
outsl
or
push
popa
sub
pusha
push
mov
mov
jl
or
xchg
jb
xchg
cli
lcall
pop
ficomps
dec
cli
mov
repz
pop
adc
jno
push
arpl
push
push
hlt
jbe
jecxz
popf
orl
stc
mov
sbb
and
mov
push
jae
sub
push
sbb
cld
rcl
mov
call
adc
adc
sbb
aaa
movsl
outsb
jb
sahf
enter
adc
xor
jp
xchg
or
mov
fdivr
ret
cltd
inc
inc
stos
cmp
mov
mov
lods
outsl
and
pop
xorb
mov
xor
aad
stc
data16
lock
inc
xchg
out
mov
addr16
idivl
push
imul
nop
mov
mov
or
fdiv
or
faddp
xor
pop
inc
push
ret
inc
mov
mov
dec
lret
dec
test
idivb
cmp
sbb
jo
in
xchg
into
push
insb
xchg
test
int3
int3
das
lahf
fsubr
shr
inc
mov
inc
xor
xor
cmp
fdivr
inc
sbb
fistl
mov
bound
fwait
xor
jne
cmpsl
enter
leave
fistl
insb
mov
cmp
jl
cmp
ss
push
loope
ljmp
mov
inc
sar
mov
mov
mov
loope
inc
jns
je
cmpl
inc
sbb
or
gs
mov
add
push
dec
shll
or
int
mov
cli
push
shll
movsb
push
adc
popf
dec
mov
cmp
sub
in
mov
loop
leave
xchg
adc
adc
sub
iret
ret
cmp
fadd
stc
xor
pop
sbb
mov
lcall
movsb
xlat
imul
or
pop
movsb
inc
out
sahf
inc
and
and
cwtl
mov
mov
faddp
mov
mov
inc
add
cmpl
cld
jmp
cmc
cwtl
cmp
cmp
jmp
fldcw
inc
pushaw
xor
lahf
add
fldcw
shlb
push
or
xchg
cmpsb
es
mov
daa
mov
adc
stos
ja
pop
imul
mov
dec
push
xchg
mov
adc
cmpsb
dec
sbb
xchg
fsub
test
mov
imul
inc
mov
ds
add
sbb
mov
jp
dec
lcall
pop
jl
mov
ja
cmpsl
neg
xchg
dec
pop
xchg
xor
jecxz
or
inc
bound
and
adc
dec
arpl
adc
cmp
push
xchg
cmpsb
xchg
in
pop
or
pop
jge
cmp
in
sahf
pop
inc
cmp
mov
pop
sub
and
or
outsl
lret
mov
ja
pop
sahf
inc
push
out
shl
jmp
mov
pushf
jmp
push
lcall
ret
mov
loopne
xor
cmpsl
jecxz
lods
stos
fwait
rclb
stos
dec
adc
fcoml
mov
scas
jmp
and
daa
push
mov
and
or
sub
ret
jp
aas
pop
mov
ja
scas
out
mov
pop
jmp
fsubl
mov
jne
fsubl
dec
arpl
int3
and
mov
fldenv
xchg
in
outsl
mov
xchg
int
icebp
lret
es
xchg
frstor
hlt
sbb
das
xchg
jnp
sbbl
xchg
cmp
testl
push
mov
out
leave
ficoml
insb
push
sbb
sti
adc
ja
loop
push
stos
dec
xor
outsb
mov
sub
inc
jbe
xchg
sti
or
pop
dec
mov
aas
xchg
ficompl
outsl
ficoml
cltd
mov
mov
add
popf
sbb
dec
and
pusha
sub
es
sar
dec
cmpsb
shrb
and
imul
xchg
ja
add
js
cltd
inc
nop
xor
popf
push
lahf
cmpsb
movsb
mov
mov
addl
std
cmp
ret
xor
mov
inc
fnsave
stos
sbb
rclb
or
lret
js
cmp
out
or
pop
push
pop
jno
aas
mov
jle
mov
int
adc
mov
hlt
and
xchg
xorb
jno
sbb
cmp
pop
fadds
jns
mov
test
fiadds
bnd
mov
nop
jne
cld
loop
es
fstpl
mov
mov
inc
mov
mov
dec
fcmovb
push
leave
es
sub
fildl
pusha
jle
inc
push
pop
ret
add
pusha
lods
add
das
xchg
scas
jp
pop
inc
bnd
subb
loope
dec
pop
xor
repz
pop
jle
std
mov
adc
sub
jl
iret
es
repnz
dec
sub
push
es
and
movb
push
dec
aas
imulb
jnp
ret
fnstenv
mov
sbbb
nop
and
fdivrs
dec
bound
dec
push
or
inc
adc
insl
jns
ljmp
rcll
movq
gs
aam
test
mov
inc
rol
lcall
dec
mov
rcr
or
xchg
movsb
loopne
sbbl
adc
or
and
fimuls
sub
jecxz
fs
dec
xor
mov
and
push
jp
pushf
movsl
cmpsb
aam
jp
push
int
cli
es
add
std
idivl
or
repz
lods
rorl
les
inc
jl
mov
mov
aam
jbe
inc
es
mov
jbe
push
test
leave
jb
xor
addr16
and
mov
rclb
mov
loope
fidivrl
xchg
cmpsb
sub
imul
push
aam
xchg
enter
hlt
mov
std
out
hlt
test
xchg
dec
orl
mov
repnz
les
sarl
scas
jp
repz
jp
dec
lret
ss
push
xor
jecxz
inc
add
stc
cmp
dec
mov
adc
adc
xor
int
pop
push
clc
stc
mov
pop
loope
push
xchg
sub
cmc
and
icebp
mov
push
lret
out
jp
call
sub
into
in
test
mov
mov
mov
mov
ret
push
es
sbbl
inc
and
push
test
cmp
mov
xchg
fisubs
sbb
cmp
loopne
mov
dec
jne
lods
mov
and
icebp
xchg
fildl
or
jb
fwait
mov
cmpsb
roll
and
loope
les
mov
jp
fisttps
push
mov
mov
mov
arpl
push
pop
ss
aas
dec
dec
sub
roll
out
gs
ret
ds
xor
scas
sbb
or
or
out
push
mov
pop
sbb
mov
cmp
cmp
dec
pop
add
stos
mov
xor
pop
lea
std
mov
icebp
out
mov
loopne
scas
in
jl
cmp
gs
sub
sbb
popf
or
or
push
mov
iret
mov
movsl
cli
das
mov
sbb
scas
dec
enter
pusha
xchg
mov
mov
ljmp
cld
dec
mov
int
test
sub
inc
inc
mov
cmpsl
adc
fistpl
mov
mov
mov
lea
mov
mov
stos
or
push
inc
insl
push
mov
sub
xchg
repz
in
adc
divb
leave
into
pushf
ret
test
mov
sub
sub
xor
adc
and
cmpsl
cmp
pop
aas
pushf
decb
jl
pop
pusha
add
mov
sahf
outsb
scas
das
mov
jl
stos
mov
notl
mov
sbb
aad
aad
sub
pop
out
mov
jno
jmp
ficomps
sti
lods
push
mov
clc
jp
repz
mov
adc
sbb
jge
ss
out
cld
data16
pop
stos
data16
outsl
inc
push
sbb
cli
das
fnsave
dec
mov
cmp
push
pop
scas
insl
add
leave
cmpsl
or
push
inc
jmp
divl
js
arpl
add
ja
xlat
aas
loop
cwtl
ljmp
fcmovnu
cmp
scas
insb
dec
cld
pop
bound
mov
inc
dec
pop
in
lock
or
xchg
rcl
shll
xchg
push
add
sub
fisubrs
call
std
push
inc
mov
mov
or
ja
pop
lret
cmc
or
xchg
sti
int3
mov
push
mov
pop
cmp
cld
ret
jns
mov
pushf
push
repz
fistps
mov
pop
imul
bnd
or
std
lea
add
fdivrl
int3
cmpsl
rclb
pop
ret
pusha
in
adc
fimull
adc
negl
adc
dec
mov
stc
adc
aad
cmpb
add
xchg
dec
test
fwait
das
mov
push
enter
fadds
and
cmpsl
addr16
push
in
lret
ljmp
mov
pushf
jp
xchg
bound
int
loope
js
in
out
daa
clc
call
fwait
aad
outsb
repnz
dec
or
xor
lcall
dec
in
push
loopne
ds
lea
or
sbb
aad
cmp
xor
sbb
bound
or
jmp
adc
push
fistpll
pop
pop
push
mov
cmpsl
add
jle
jne
orb
xor
dec
aas
mov
aad
vcvttss2si
fistl
addr16
mov
xadd
mov
and
fbld
pop
out
je
add
insb
imul
aaa
sar
mov
mov
leave
dec
push
pop
ret
ljmp
sub
mov
adc
iret
add
inc
mov
pop
insl
jecxz
sbb
push
pop
test
hlt
xcrypt-ofb
cmpsl
test
mov
shrb
jle
nop
fcomi
dec
mov
xor
jnp
insl
and
mov
jecxz
aas
divb
in
cmp
je
adc
loopne
push
shl
cwtl
push
je
mov
jmp
cmpsl
or
push
ja
sbb
ret
and
lahf
and
lods
aad
loop
aam
jecxz
xor
shrl
sbb
pop
sub
in
loope
mov
shr
inc
add
testb
mov
xchg
push
dec
test
pop
or
jecxz
jle
push
cmp
int
jl
sar
push
fsubrs
pop
call
icebp
or
adc
xor
dec
addr16
adc
and
xchg
xor
aam
mov
repnz
test
xchg
and
cmc
xchg
lods
loope
mov
or
pushl
loope
fcmove
loope
inc
cmpsl
fisttps
xor
call
sbb
pop
mov
cltd
ret
enter
sub
cmp
add
lret
in
jno
movsb
or
daa
mov
sbb
sub
xor
adc
enter
pop
inc
out
and
arpl
loopne
adc
testb
loope
push
sbbl
sbb
mov
outsl
shr
push
loope
xor
imull
imul
out
in
mov
jae
push
xchg
sbb
dec
ja
in
loopne
mov
pop
push
imul
shr
cld
gs
push
lcall
mov
push
xchg
pop
cltd
cmp
insl
fdivrs
imul
fbstp
or
lcall
pop
or
sub
fiaddl
add
mov
xchg
xor
cli
inc
pop
and
aad
popa
or
or
mov
xchg
hlt
aam
push
add
or
and
pop
mov
insl
es
mov
pusha
jbe
push
mov
cmpsl
push
xor
or
push
mov
imul
stc
ds
aas
stos
dec
and
xchg
adc
add
jnp
or
or
xor
jecxz
bound
fstps
shl
adc
xor
add
add
inc
imul
pop
mov
testb
das
inc
xor
mov
cld
xchg
lcall
lahf
shlb
fidivrs
pushf
scas
int3
iret
rcrl
into
jg
cli
push
insb
scas
lcall
dec
dec
fstl
test
push
xchg
clc
pop
rcrb
fmuls
aad
inc
sub
pusha
int
jnp
aas
out
cmc
test
xor
adc
cmp
sahf
add
movl
fwait
mov
into
lods
fwait
loop
dec
sbb
ret
xor
dec
xor
fsubrl
dec
jge
mov
out
xchg
popa
pop
jb
jns
fmull
rcll
and
jl
mov
inc
icebp
sbb
adc
subl
jno
pop
fmul
out
xchg
rorb
aam
pusha
adc
sti
scas
adc
xchg
repnz
test
dec
movaps
adc
ds
adc
loopne
xor
mov
dec
fld
fidivl
test
add
in
int
add
sub
wrmsr
and
loope
jae
cmp
sub
cwtl
pop
cmpps
sub
imul
cmp
fwait
into
pop
ja
sbb
adc
ret
add
aas
ret
adc
push
dec
xchg
enter
mov
mov
cmp
push
pop
test
push
or
inc
lahf
repz
mov
xor
mov
pop
fdivs
insb
lcall
cmpl
into
mov
pop
sahf
loopne
mov
jp
mov
movsb
test
lds
aaa
in
mov
mov
push
pop
ljmp
imul
xchg
mov
jnp
jae
cmpsl
arpl
mov
push
xchg
vucomisd
pop
push
daa
or
push
mov
leave
xchg
add
jno
fsubl
stc
loopne
in
jle
daa
ds
mov
call
ret
mov
lahf
pop
adc
mov
push
mul
adc
es
fdivl
loop
jno
test
xchg
sbb
nop
adc
xor
repnz
sbb
push
mov
mov
mov
push
add
push
and
clc
mov
and
aad
cwtl
push
scas
or
pop
jns
jmp
lahf
jno
pop
sahf
mov
les
and
push
xor
jmp
into
dec
adc
out
repnz
lods
inc
fnsave
subl
sti
adc
mov
cmp
arpl
mulb
inc
enter
decb
cmpl
add
daa
xlat
das
xor
cwtl
cmpsl
ret
jge
popf
xchg
jmp
cltd
sbb
les
xor
out
fcomi
arpl
mov
lret
insb
add
xchg
stc
daa
in
int
mov
dec
or
add
jnp
jnp
subl
mov
cmpsb
pop
aad
js
dec
push
push
cmp
xchg
scas
mov
fcoms
add
or
mov
sub
ror
adc
or
cmpsb
jo
and
inc
js
push
pop
test
xor
sbb
and
pop
push
mov
adc
test
loope
mov
cmp
mov
int3
rcrl
mov
std
mov
xchg
mov
orl
call
xor
fnstcw
xor
call
sbb
clc
pop
adc
jl
sbb
gs
subb
xorb
xor
orl
rcrl
aaa
insb
int
mov
mov
out
nop
shlb
sbb
jb
stos
lea
pop
call
lcall
push
mov
inc
cld
push
lock
push
ret
sahf
orb
imul
jge
pop
notb
and
jo
xchg
jb
inc
enter
inc
cwtl
popf
cmc
cmp
movsl
jge
push
outsl
leave
gs
jnp
and
or
popf
insl
out
test
inc
divl
mov
stos
xlat
jne
ss
push
add
stos
push
repz
cli
lahf
and
add
inc
push
mov
push
pop
mov
inc
add
cmp
push
xor
xchg
jns
mov
lock
dec
mov
movl
fmul
imul
mov
or
lahf
insb
int3
dec
fmulp
movsl
cs
jle
xor
xchg
and
or
int3
dec
jae
jle
push
fcomip
inc
jns
xor
mov
in
push
jae
push
cmp
sbbl
ss
insb
test
push
lret
in
loope
jae
jae
out
xlat
jne
negl
lcall
inc
mov
cwtl
adc
int3
jno
das
out
add
dec
insl
test
xchg
xor
mov
in
xlat
pop
out
push
adc
cmp
jmp
fwait
daa
xlat
ficomps
cltd
imul
pushf
cmc
mov
or
jne
push
inc
pushf
add
or
mov
sbb
pushf
aas
xchg
xor
inc
test
dec
cwtl
mov
pushf
pop
daa
shr
jae
sub
xor
pop
inc
ljmp
arpl
sub
subl
loop
mov
adc
rcll
rcrb
pop
mov
stos
aad
push
bound
ret
aad
fs
sub
repnz
pusha
pusha
and
lods
push
push
xor
xor
sahf
lahf
idivb
outsl
repz
psubd
es
mov
xchg
daa
out
xor
adc
jns
dec
inc
xchg
add
pop
cmp
leave
pop
out
out
xor
pushf
ja
jp
and
add
sub
mov
mov
add
cli
adc
sbb
dec
daa
xchg
xlat
sub
fcoml
cmc
mov
fisubrs
inc
test
outsl
fs
inc
sbb
cltd
sbb
mov
hlt
jmp
cmpsb
mov
lock
int
call
lock
jl
loopne
in
add
imul
int
fcmovne
cmc
das
push
mov
mov
or
and
movsb
jmp
fldenv
mov
icebp
cmovne
inc
push
pop
mov
ljmp
test
xchg
or
adc
ljmp
in
orb
sbb
mov
xchg
imul
xor
adcb
xchg
fisttps
enter
push
mov
and
test
and
push
divl
pushf
shlb
call
jmp
ret
jmp
jnp
xor
repnz
or
loope
and
xchg
mov
xchg
call
fisubrs
cmovs
cmp
ljmp
mov
jmp
cmp
pop
cwtl
and
insb
loopne
xchg
xchg
mov
xchg
out
mov
pop
pop
xor
cld
push
xor
dec
mov
push
sub
jl
int
xchg
xchg
jg
out
inc
sti
into
dec
sbb
scas
xor
sbb
movsb
insb
jmp
insl
rorl
mov
and
adcb
decb
sbb
addb
ja
and
aaa
push
jge
jo
sub
mov
add
sbb
adc
mov
mov
and
xchg
and
popa
inc
aam
mov
sbb
ss
xchg
scas
aam
scas
lcall
add
mov
lods
nop
fmull
test
in
jne
ljmp
lods
int
mov
push
addr16
mov
pop
xchg
rcl
xchg
shll
imul
sar
sub
pop
insl
jle
mov
das
into
and
das
mov
or
or
or
test
xor
dec
and
push
loope
repz
dec
mov
mov
in
inc
pushl
and
mov
xchg
mov
xchg
push
repnz
insb
pop
dec
xchg
push
lods
dec
jmp
jb
insl
aaa
mov
inc
aaa
fsubrs
cmp
incb
and
push
mov
insb
jmp
and
cmp
push
pop
adc
xor
int
in
adc
push
pop
bound
std
outsb
test
mov
mov
imul
arpl
in
pop
add
lods
mov
xchg
xor
ljmp
or
stos
sbb
data16
mov
mov
pop
or
lcall
sbb
mov
jmp
and
data16
inc
in
fidivrl
fistps
insl
push
jbe
push
dec
ljmp
fwait
sub
mov
jge
ret
roll
adc
or
lods
lds
frstor
lcall
fisubs
pop
jno
in
mov
fwait
push
jl
test
popf
insl
pop
gs
push
or
lds
imulb
imul
inc
and
stos
cli
pushf
cs
lock
xor
xchg
or
dec
sub
push
std
and
jl
enter
js
xor
sub
ljmp
xchg
dec
stos
outsb
mov
xchg
pusha
jo
clc
dec
adc
mov
xor
cltd
cltd
data16
xchg
gs
ret
insb
mov
lret
fsubrp
fimull
mov
int3
fsubrs
sbb
sbb
pop
imul
xor
dec
fucom
data16
or
gs
fmul
mov
jno
push
es
clc
mov
das
mov
test
sbb
mov
mov
push
dec
or
pop
jne
in
xchg
xor
jne
in
loope
cmpsb
sbb
jne
mov
inc
cli
in
loopne
pop
pop
push
push
mov
add
xor
movsl
jg
mov
imul
lret
inc
je
arpl
xchg
in
lret
mov
in
mov
and
in
std
in
movsb
jns
sub
stos
jg
jl
cmp
les
daa
mov
lock
scas
adc
or
xor
sbb
inc
aad
inc
add
outsl
push
jl
pop
rorb
or
out
inc
mov
pop
rcrl
repnz
add
mov
mov
enter
xchg
pop
inc
test
xchg
adc
inc
push
mov
scas
negb
inc
jl
xlat
shrl
push
xchg
jge
data16
stos
aad
cmp
aad
add
sbb
cmpsl
push
inc
mov
pop
cmp
into
mov
sub
nop
outsl
dec
adc
prefetch
sbb
jnp
out
cmp
sub
jns
jne
sbb
or
hlt
pop
lret
iret
mov
sbb
sbb
outsl
add
clc
iret
test
mov
xchg
sbb
mov
mov
jns
out
xchg
rolb
mov
jge
jns
xchg
xchg
insb
mov
jmp
push
sbb
loope
add
sbb
dec
dec
std
in
hlt
cmp
movsl
pop
aad
orb
cld
add
jbe
mov
cli
mov
sub
fcoml
xchg
add
cli
fidivs
mov
scas
xchg
les
jp
pushf
xorb
xor
or
and
sub
in
mov
repz
lea
inc
jmp
mov
jp
fnstcw
pop
ret
adc
aad
push
mov
test
adc
pop
sbb
in
pop
cmp
jbe
aam
jne
and
lahf
insb
lock
sbb
fistps
aaa
dec
addr16
mov
stos
or
xchg
test
add
sbbb
pusha
lock
push
push
cmp
test
xchg
mov
inc
sbb
xchg
lea
lods
repz
push
pop
lret
insb
pop
xlat
dec
mov
ss
mov
cmp
lret
cmp
lods
icebp
fstps
invd
mov
cmp
loopne
mov
push
adc
hlt
jne
inc
or
call
cmpsb
mov
xor
and
test
pusha
insb
int
ret
jle
pop
leave
lods
inc
mov
mov
hlt
jmp
in
jle
repz
sbb
out
xchg
insb
sub
sub
add
divl
adc
aam
and
jg
mov
repz
icebp
cmp
decb
insl
cmp
pop
push
and
out
mov
adc
mov
sbb
stc
adc
loop
add
push
and
mov
out
mov
lock
mov
call
insl
lods
push
cwtl
sub
or
and
lock
mov
push
xlat
movsl
stos
xlat
orl
pushf
insb
mov
push
xchg
and
xor
sbb
adc
sbb
inc
nop
dec
ret
in
push
adcb
adc
call
or
cmpsb
xchg
mov
push
xor
das
insb
dec
mov
fs
faddl
or
int
addb
sub
nop
lods
pop
mov
and
arpl
aas
add
loop
mov
jb
call
rolb
ljmp
pop
in
ljmp
jecxz
jecxz
jge
in
adc
outsb
pop
rcll
imul
inc
mov
push
in
inc
xchg
mov
out
xor
out
jnp
cld
les
inc
push
cli
lahf
push
mov
and
dec
out
fldcw
imul
add
mov
popf
sub
push
pop
testb
dec
xchg
add
lret
jl
mov
cwtl
cmp
test
loopne
aaa
roll
xlat
jmp
js
das
jnp
jmp
stos
fsubrs
decb
ja
pop
mov
jb
mov
aam
popa
test
ss
test
jl
adc
xor
inc
addr16
jno
aas
add
mov
inc
push
dec
js
aaa
pushf
cwtl
loopne,pt
adc
ljmp
push
push
cmpl
stc
mov
rolb
sbb
xor
mov
cld
sbb
mov
xor
sub
mov
repz
and
jb
jp
test
lds
cmp
jecxz
arpl
add
bound
sbb
mov
mov
aaa
dec
push
mov
incb
es
shl
and
std
mov
cmp
fneni(8087
aad
cmp
dec
adc
ss
aas
push
lret
xchg
push
aaa
ds
int
sbb
std
test
popa
mov
xor
rcrl
stc
outsl
roll
test
add
cmp
cmp
push
in
mov
loopne
movsb
into
jl
jl
sbb
lahf
addr16
das
out
in
out
xor
scas
je
jns
push
pop
sub
icebp
push
sahf
mov
pop
dec
push
pop
jae
jge
rcl
stos
cmp
add
lds
jle
cwtl
lock
mov
fdivl
dec
jge
mov
sbb
addr16
das
in
xor
out
cltd
or
mov
popa
ss
mov
daa
cli
or
daa
lret
mov
add
and
push
adc
es
test
inc
pop
imul
repz
in
imul
mov
sub
add
xlat
cld
call
cmp
mov
loope
push
mov
pop
xchg
pop
stos
sub
adc
or
divb
ljmp
xchg
dec
jp
icebp
mov
dec
daa
and
pushf
cmpsb
nop
add
mov
daa
inc
ret
movsl
out
add
add
inc
addb
xorb
mov
ds
xchg
or
aam
roll
adc
addr16
mov
add
dec
mov
sub
mov
inc
jns
pop
out
xchg
inc
sub
and
sub
fs
or
xchg
xchg
scas
aaa
cmp
push
sbb
push
add
faddl
setne
inc
push
push
and
pop
lcall
mov
pop
dec
repnz
push
loope
sarb
pushf
movsb
push
jge
push
mov
fs
andb
ret
mov
push
out
push
sub
shrl
stos
push
shlb
ljmp
dec
mov
sti
repz
or
loope
fsubl
das
adc
scas
test
inc
in
addl
les
push
mov
mov
dec
outsb
test
mov
inc
das
push
cs
sbb
enter
jno
loopne
dec
test
inc
movsl
jae
ret
ljmp
cmp
xchg
dec
arpl
xchg
clc
adc
out
mov
outsl
sbbb
push
int
adc
or
in
sbb
and
dec
lret
jg
pop
and
mov
xlat
mov
jbe
cmp
test
sbb
stos
xchg
cli
jae
jmp
lahf
dec
cmp
test
cmpsb
sarb
stc
pop
out
mov
int3
sub
mov
push
inc
lret
xchg
and
xor
xor
lret
push
pop
cmpsl
adc
inc
cmpsl
sub
push
repnz
inc
cmpsl
adc
cmp
and
in
pop
fs
out
push
out
sahf
push
push
into
outsb
outsl
outsb
sbb
xor
add
pop
pop
add
pop
lahf
lods
inc
sub
rcrb
and
mov
mov
push
arpl
sbb
int3
xor
adc
dec
int3
popa
xchg
cli
aaa
cli
and
inc
cmp
stos
lods
or
insl
pop
rorb
outsb
negl
xor
sub
dec
addr16
rorb
repz
fistl
and
push
cmpsl
ja
and
leave
fnstenv
js
decb
outsl
and
rcrl
cmp
imul
gs
sub
dec
mov
pop
and
data16
cwtl
jb
mov
cmpsl
jnp
cwtl
mov
out
gs
and
inc
xchg
sahf
push
and
mov
dec
stos
mov
add
inc
leave
inc
mov
jne
xor
sbbb
pop
ret
sahf
xchg
dec
stos
arpl
cmp
mov
aad
stos
rcl
and
sti
xchg
aaa
jg
ljmp
outsb
mov
js
and
sbb
pushf
out
push
lret
addr16
sbb
icebp
cmpsl
add
or
sahf
dec
outsb
mov
pop
leave
arpl
icebp
mov
loope
cmpsb
popa
and
outsl
or
jae
xchg
mov
dec
jbe
scas
out
lds
mov
xchg
mov
sub
sub
test
pop
and
xor
orb
lods
shr
out
stos
jnp
lahf
inc
aam
pop
push
call
jmp
dec
dec
fwait
mov
mov
outsb
adc
pop
and
stc
jae
movsl
cmp
pushf
pop
inc
mov
push
jge
loopne
xlat
sub
adc
test
jge
push
lret
dec
lods
icebp
cmc
test
or
movsl
jecxz
pop
mov
inc
push
add
xchg
jmp
lret
push
dec
imulb
cmp
mov
sti
sub
dec
sbb
lds
adc
icebp
sbb
ret
dec
jecxz
stos
movsb
lods
je
mov
adc
push
sub
dec
repnz
add
jle
loope
lahf
and
jo
movsl
aas
cmp
outsl
mov
pop
pop
aam
cmp
lret
pusha
cmp
cmpsb
jl
outsb
xchg
das
or
mov
out
mov
test
fldcw
mov
bound
rorb
dec
add
xchg
mov
sub
stos
in
rorb
mov
ret
notb
pop
or
std
adc
jl
xchg
call
ljmp
rol
lcall
pop
cmpsl
mov
lock
pop
adc
xchg
fs
xchg
add
cmc
stos
call
sahf
mov
jno
outsl
jno
xor
mov
leave
push
std
mov
mov
mov
adc
push
ss
aas
sub
fldl
and
or
sbb
bound
cmp
adc
pop
popa
shlb
xor
lods
sub
insl
inc
call
sbb
sbbl
fldl2e
pusha
inc
lods
cli
enter
or
push
fidivl
cwtl
jbe
adc
xchg
jecxz
stos
int3
sbb
inc
pop
mov
cmp
insl
jl
ret
test
les
js
jo
push
sbb
subl
push
outsl
lea
shll
dec
je
test
dec
cltd
add
ljmp
das
orb
mov
nop
mov
pop
lcall
sbb
mov
or
mov
xchg
cmp
mov
cmpsl
jecxz
mov
cmp
and
fildl
mov
push
pop
clc
je
clc
aas
pop
pop
loopne
fwait
arpl
and
push
push
lea
push
push
fstpl
jmp
arpl
gs
inc
pushf
leave
sub
fnstcw
pop
fisubl
jle
in
pop
mov
jnp
dec
inc
add
test
in
les
and
xor
jp
xchg
addr16
mov
inc
xor
sub
pop
inc
mov
call
in
movsl
cli
aam
sub
dec
out
cs
and
dec
dec
psrlw
cmp
sub
pop
lret
subb
sahf
xchg
mov
rcrl
sbb
fisttpl
mov
imulb
test
int3
icebp
jmp
ret
adc
test
or
jl
sbb
je
into
xor
clc
notb
sub
dec
outsl
out
xchg
dec
cmp
jl
and
inc
leave
jnp
pop
scas
sub
call
adc
pop
aam
popf
das
sub
pop
fisubrl
cmp
fisttps
cli
aad
inc
push
dec
push
out
or
outsl
mov
divl
stos
fcmovu
xchg
mov
popf
cli
adc
sbb
fmull
adc
sbbl
pushf
cmp
mov
adc
pop
cmpsb
xchg
dec
pop
xor
sub
jb
rcrl
lret
mov
push
cmp
and
dec
or
jae
bound
ret
lods
cmc
push
ss
nop
sbb
iret
mov
cmc
ret
sub
stos
lea
lahf
inc
mov
sarb
in
aaa
jae
dec
push
cmpsb
rcr
or
sbb
jle
push
cmp
fnstsw
enter
scas
jg
fsubr
and
aad
inc
out
es
popa
mov
sbb
iret
mov
mov
sub
sahf
and
addr16
lahf
mov
push
mov
iret
call
ret
xchg
mov
cmp
mov
imul
sub
sbb
jns
jmp
jo
mov
sahf
ja
cmp
or
dec
ret
xchg
mov
mov
lcall
xor
mov
out
push
xchg
sbb
dec
or
in
fcomip
mov
mov
popl
push
sbb
sbb
je
in
or
xchg
jecxz
fsubrl
dec
sbb
ja
jmp
and
mov
cwtl
xor
jno
fsubl
cmp
stos
enter
mov
cmp
cmpsb
mov
cmpsl
movsb
sarb
pop
mov
xchg
rcrl
inc
nop
fdiv
inc
jge
testb
aad
sub
cmp
dec
lods
mov
arpl
and
or
xorb
mov
push
out
mov
insl
xcrypt-ecb
cmpsl
mov
jns
aas
inc
jnp
sbb
outsb
dec
sbb
mov
xorl
call
jb
movb
jge
mov
xchg
es
hlt
rcrl
jecxz
cs
and
push
push
pop
adc
repz
cwtl
mov
je
in
hlt
gs
or
insb
sbb
dec
cmp
pop
dec
insl
das
push
cmp
es
movsb
mov
push
test
mov
adc
or
loop
push
sbb
inc
add
jge
mov
xor
outsb
xorl
xchg
xor
test
and
cmc
rcr
stc
sbb
repz
or
lahf
push
push
inc
push
dec
fs
repnz
lea
pop
daa
pusha
cltd
xchg
dec
arpl
inc
mov
mov
scas
inc
and
mov
push
sbb
xchg
mov
faddl
mov
sbb
cmp
aaa
jmp
pop
sbb
or
mov
andb
in
cmc
scas
dec
into
into
cld
xchg
sub
xchg
ret
inc
and
mov
jmp
jae
popa
cli
loope
cmp
test
inc
out
mov
cwtl
fwait
inc
push
xor
fstps
fimuls
sti
mov
sub
arpl
mov
adc
or
out
ret
add
dec
imul
add
pushf
lods
push
xchg
mov
gs
outsb
sbb
fnstsw
jl
pusha
and
ljmp
call
das
sbbb
dec
aam
jno
je
mov
into
das
pushl
stos
das
ret
sbb
pop
ja
dec
bound
cmp
xor
sbb
mov
dec
cmp
and
sub
jge
arpl
jbe
mov
adc
std
fwait
cwtl
test
lods
sbb
add
cmp
popf
push
es
sbb
and
test
cli
iret
popa
sahf
mov
jmp
sub
mov
mov
out
iret
or
imul
stc
aaa
sbbl
mov
into
and
cmp
call
dec
les
add
in
push
pop
imul
lret
sub
dec
clc
out
sub
pop
xchg
dec
in
dec
xorl
dec
xor
pusha
fimuls
adc
inc
mov
dec
mov
pop
sbb
mov
std
jno
cmpsb
jno
leave
in
and
ss
cmc
aad
int
mov
sub
loope
cmc
and
dec
ficoms
lea
adc
dec
mov
sub
push
mov
fs
daa
nop
imul
xor
xor
and
or
in
leave
lcall
xchg
notl
inc
arpl
stc
ficomps
push
repz
xor
or
in
xchg
jp
ficoml
loopne
sbb
fimull
fs
jbe
movswl
mov
cwtl
add
lret
and
loopne,pn
xor
dec
sbb
jb
dec
mov
pop
cwtl
fcmovb
push
mov
xchg
and
cmc
test
dec
cmp
cmpsl
inc
movsl
inc
dec
imul
xorl
aaa
add
sub
cld
xor
or
pop
mov
mov
inc
and
pop
add
out
mov
je
sbb
imul
adc
movsl
lcall
adcb
repz
add
pop
lea
mov
lahf
and
stos
mov
iret
adc
jmp
mov
mov
dec
repz
dec
mov
int3
mov
inc
xorb
xor
int
pop
or
lds
lods
mov
add
xchg
sub
add
xor
hlt
mov
dec
adc
in
xchg
push
outsb
inc
xorb
add
mov
push
adc
dec
push
lcall
mov
mulb
dec
jae
leave
push
jae
inc
mov
mov
adc
cmpxchg
test
lock
push
xor
sbb
ret
mov
inc
out
mov
jp
jnp
cld
lret
cmpsb
xchg
hlt
rcr
divl
sbb
das
daa
pop
jp
lock
sbb
je
xchg
in
into
push
scas
push
push
pop
loop
xchg
add
mov
test
loop
out
push
mov
imul
pushf
ljmp
or
mov
jb
stc
aaa
xor
dec
ja
call
mov
push
push
adc
mov
add
fildl
insb
xorb
add
mov
ja
xchg
mov
pushl
pop
mov
cwtl
xchg
push
jnp
cs
lea
in
adc
jg
out
aas
sub
out
imul
stos
test
add
adc
push
aam
push
cmp
cld
imul
jne
adc
sti
jae
cltd
divb
sub
cmp
sbb
popa
lret
adc
jge
pop
int
mov
stc
scas
push
mov
clc
rcl
enter
into
es
hlt
lods
fldenv
std
ss
scas
mov
addl
jne
push
repnz
add
imul
add
mov
iret
adc
and
adc
test
jl
or
shl
es
push
cmpsl
sbb
cmc
mov
pop
add
mov
test
push
fbstp
test
xchg
insl
or
mov
add
cmp
popa
xor
jo
movsl
cld
mov
dec
adc
pop
mov
in
add
imul
cmpsl
add
mov
mull
cld
mov
in
jns
add
dec
inc
je
js
mov
repnz
sahf
add
gs
dec
fldt
sti
test
mov
or
fmuls
inc
mov
fcoms
cmpsl
sti
sbb
mov
mov
or
int3
adc
cmp
push
xchg
xor
pop
and
mov
fcomps
mov
in
pusha
aas
scas
fdivrs
in
pop
inc
jle
ja
mov
movsb
pusha
leave
enter
dec
mov
xchg
jbe
push
call
pop
out
jns
inc
stc
push
aaa
imul
lret
inc
lods
add
jl
mov
loope
mov
shlb
fdivl
ja
fwait
aaa
dec
pop
push
shrb
inc
mov
das
add
cmp
pop
roll
fidivl
leave
arpl
cmp
mov
jecxz
xchg
movl
sub
xor
push
sub
je
das
mov
push
jae
cmpsl
test
add
fldcw
sbb
or
pop
jle
xlat
sarl
movsb
and
mov
movsl
adc
out
push
and
idiv
mov
dec
mov
clc
aad
mov
ret
inc
xor
dec
xchg
push
jne
dec
out
enter
cmpsl
dec
pusha
cmc
dec
mov
std
lods
loop
cmp
orb
or
in
lcall
inc
out
call
cmp
mov
push
jae
jno
and
dec
sub
hlt
repnz
jp
mov
mov
mov
lcall
das
mov
cmp
and
das
dec
xor
jnp
cmpsb
shl
cli
sbb
push
adc
addr16
or
lods
filds
and
stc
jnp
xadd
rorl
cld
out
sub
add
and
push
inc
jle
fildl
mov
xor
sbb
fidivrl
adcl
sub
dec
jp
test
fstpt
fs
mov
dec
mov
sbb
push
je
outsl
push
xchg
and
xchg
lock
cwtl
fsubl
push
jno
filds
scas
pop
xor
inc
dec
inc
and
fdivs
inc
pushf
jge
xchg
hlt
push
mov
dec
jns
pusha
push
test
pop
dec
mov
pop
pop
lods
xor
shll
mov
xchg
in
in
xlat
dec
jl
fisubs
test
jmp
mov
ljmp
mulb
xor
inc
dec
inc
ficomps
adc
mov
xchg
aam
adc
lods
out
int
and
dec
sbb
test
pop
test
cmp
loop
jmp
cmp
shll
push
push
dec
out
xchg
mov
pushf
clc
cmpsl
jae
pop
mov
jns
jg
out
movsb
fisubrl
mov
mov
xor
aam
lret
xlat
add
movsb
addr16
fs
mov
mov
or
ds
leave
xchg
pop
fstl
push
dec
testl
fdivrl
push
push
cmpsb
cmp
or
hlt
add
mov
pop
mov
in
psrlq
push
push
nop
outsl
inc
mov
inc
xor
dec
rcrl
xchg
es
fdivrp
pusha
popf
pop
repnz
push
pop
arpl
fadd
adc
mov
jle
mov
pop
sub
sbb
jg
repz
mov
imul
adc
add
sti
ja
and
ds
stos
mov
call
xchg
jns
adc
adc
adc
das
and
pop
loope
sub
leave
cmpsb
jge
and
out
sub
aad
aaa
movsl
jne
xchg
dec
dec
sbb
sahf
ficompl
loope
or
or
pop
mov
iret
push
sub
mov
mov
rcrb
testb
insb
sub
sahf
ficoms
jg
call
xor
jmp
push
lods
incb
fadds
aaa
adc
jns
lods
bound
repz
sbb
daa
mov
in
insb
fdivs
push
lahf
cmove
arpl
cwtl
inc
sahf
pushf
js
sub
mov
xor
popa
sbb
leave
xchg
fimull
mov
movsb
fildl
sarl
inc
loope
mov
xchg
les
jo
jo
pop
jb
xchg
mov
cli
cmp
outsl
sbb
push
or
adc
cli
jg
mov
loop
rcrl
xor
lods
inc
dec
inc
stc
dec
loop
xor
push
lret
out
jnp
cmpsb
adc
lret
daa
cwtl
xlat
and
lea
adc
mov
mov
ja
insb
iret
mov
leave
pop
inc
sub
loopne
push
sti
lcall
dec
xorl
adc
xlat
int
add
sub
scas
insw
aas
lea
sbb
add
stos
cld
packsswb
shll
test
dec
cmp
mov
scas
lods
mov
fs
call
inc
push
imul
test
fisubrs
lahf
fdivrs
xor
pop
out
and
push
fwait
incb
stos
inc
lds
xor
loopne
inc
inc
jo,pn
push
insb
jne
inc
int
add
xor
push
fldenv
pop
imul
and
mov
js
mov
jmp
and
test
insb
or
leave
js
in
cld
push
pop
pop
arpl
clc
test
imul
sbb
imul
add
cltd
mov
xchg
pop
mov
xchg
and
pop
imul
in
dec
cmpl
and
mov
jl
and
les
out
xor
xor
movl
icebp
adc
push
mov
sub
movsl
pop
pushf
fnsave
or
jmp
in
js
das
sbb
iret
in
test
lret
loop
jne
inc
mov
cmp
ret
mov
icebp
enter
cmp
fstpt
mov
repz
adc
jle
push
in
lret
fidivrl
stos
sub
aam
outsl
outsw
mov
daa
or
push
notb
sti
push
pop
pop
arpl
out
xchg
and
mov
add
push
subb
stos
pop
jnp
lret
and
in
pop
adc
jae
popa
iret
aaa
not
cmc
inc
jnp
jne
push
int3
pop
pop
xor
or
rcrb
push
push
int
int
in
out
lea
ja
mov
and
hlt
mov
adc
sub
jle
es
js
in
xchg
mov
stos
cmp
jle
cmpsl
add
aas
stos
jo
mov
pop
arpl
lea
inc
gs
out
xchg
fs
enter
cmpsb
or
mov
popl
xchg
jnp
popf
aaa
lods
ja
lds
sbb
and
fiaddl
or
ror
aaa
leave
push
xchg
pop
pop
inc
push
cmp
sbb
cltd
test
xor
aas
data16
fstpt
sub
mov
pushf
sub
mov
in
mov
push
test
cld
xor
outsb
sbb
adc
jle
mov
push
add
lock
xchg
lods
dec
dec
add
and
cmp
sub
pop
mov
lods
sub
sub
stc
or
in
push
test
push
loopne
xchg
adc
inc
mov
cmp
push
int
push
pop
mov
mov
sub
mov
enter
xchg
inc
fstl
adc
add
push
or
cwtl
pop
jae
jge
lock
adc
stos
dec
les
rorl
fs
lcall
jbe
sbb
sub
jno
jecxz
push
fisubrs
out
add
lahf
lods
lds
hlt
xor
xor
or
pop
out
jbe
rcll
or
lds
cwtl
xchg
or
pop
sbb
in
push
aam
add
xchg
jb
aad
xchg
repz
insl
adc
adc
pushf
pop
lds
mov
mov
test
in
adc
pop
xchg
xchg
in
stos
out
cmp
mov
sub
das
dec
in
push
sub
call
insb
ret
adc
cmpl
or
or
fidivrl
xchg
in
int
adc
add
ss
sub
pop
jnp
iret
aaa
sub
sub
fldcw
icebp
repz
mov
mov
cltd
rolb
loop
lods
loopne
hlt
add
cli
dec
fucomip
inc
dec
mov
jmp
aas
les
or
fnsave
adc
add
push
push
in
inc
ret
mov
sbb
xchg
cmp
xor
mov
mov
dec
sarb
cmp
std
fs
or
addr16
int
mov
mov
and
xchg
and
lds
iret
movsb
dec
jne
dec
iret
stos
fs
mov
mov
pop
aam
sub
outsl
ficoml
in
mov
call
mov
and
rorl
mov
subb
add
jmp
or
push
fidivrs
pushf
xor
cmp
out
push
insl
inc
sub
shr
test
test
pop
sbb
dec
push
std
mov
fstl
add
popf
fsubrp
das
inc
fdivs
xor
ljmp
rcrl
fs
loopne
cvttps2pi
lahf
xchg
cmp
push
and
jp
es
out
adc
inc
mov
push
call
test
cmpsb
jecxz
xchg
jo
outsb
cli
add
je
pop
scas
push
xor
sahf
xchg
or
in
push
cli
mov
arpl
cmc
cmpsb
or
mov
test
fisubl
pop
cmp
mov
adc
adc
xor
adc
je
xor
cltd
rcrl
lods
repz
cmpsb
shll
and
mov
or
outsb
sbb
mov
jno
cmp
and
nop
loopne
dec
jne
inc
in
dec
lods
or
test
and
adc
fdivrl
sub
jbe
sbb
sbbl
fs
loope
pop
sti
test
movsl
xor
fxch
std
sbbl
push
mov
add
sub
xchg
aam
xchg
mov
mulb
mov
dec
add
hlt
jmp
jmp
arpl
push
in
das
adc
xchg
lock
jle
or
test
cmovae
sbb
mov
icebp
fwait
pop
bswap
xlat
mov
das
inc
xchg
in
mov
pusha
jle
cs
jg,pt
sub
cmc
inc
imul
sbb
cmpsb
cmpsl
mov
push
jno
loop
lahf
ljmp
jmp
sub
and
push
rclb
sub
shrb
insb
mov
outsl
repz
sbb
in
add
rorl
gs
mov
test
stc
jne
cmpl
xchg
into
insl
adc
cli
cwtl
cmp
adcl
push
daa
loopne
mov
mov
ds
jg
lds
iret
xchg
pop
or
pop
cld
inc
fmul
outsl
xor
les
stos
jge
pop
out
mov
scas
inc
sahf
stos
jl
push
cmp
add
out
sub
adc
jle
push
push
ljmp
inc
push
test
push
scas
popa
insl
nop
popf
iret
rcl
mov
mov
pop
add
xlat
xorb
mov
jbe
ss
cmp
sahf
into
sbb
enter
sub
inc
cmp
dec
push
mov
mov
ret
xor
sub
mov
in
ja
add
cmp
mov
mov
mov
lea
sbb
jg
pop
rcl
mov
mov
mov
les
inc
jbe
jbe
and
pop
popa
popa
sub
lods
rcll
inc
adc
aas
mov
adc
bound
insb
negl
push
lret
pop
jecxz
inc
sub
cli
cld
loopne
pushf
inc
nop
sbb
jno
leave
xor
dec
rcll
or
scas
push
mov
jp
fiaddl
sub
and
mov
pop
push
cs
lods
movb
ss
inc
add
scas
xor
xchg
or
out
xor
or
fwait
mov
push
into
or
imul
jns
sbbl
insb
mov
sbb
loopne
push
push
or
mov
xor
imul
std
fwait
fs
adc
xor
push
ljmp
jno
insl
mov
add
ljmp
pop
out
jae
stos
mov
icebp
inc
cmpsb
mov
mov
int3
mov
cmc
adc
pop
and
mov
lahf
add
inc
aaa
mov
dec
cmp
ljmp
lock
cmp
sarb
out
pop
sub
jg
jg
mov
dec
inc
sbb
call
sub
lea
push
mov
insl
push
fdivs
jl
mov
js
leave
push
loop
int
dec
mov
sahf
insb
cmp
outsl
movsb
out
cmp
dec
jmp
inc
adc
mov
inc
push
inc
daa
and
and
lea
pop
mov
fcoml
out
pop
sub
jne
adc
dec
cld
dec
lahf
or
cmp
lea
pop
mov
repnz
pop
dec
sub
or
add
pusha
pop
push
in
call
lock
pop
mov
mov
in
inc
inc
popf
subl
push
add
or
mov
popa
xor
sbb
dec
and
mov
jnp
dec
lods
or
in
sti
cmp
push
int3
push
frstor
negl
xor
cmpsb
mov
pop
jae
or
testb
divb
or
jle
ds
mov
push
rcrl
xor
mov
jno
fdivr
aaa
mov
or
push
mov
push
movb
or
push
push
inc
push
mov
cmp
lods
movsb
negb
aam
icebp
imul
and
jmp
push
jb
in
jle
imul
andl
lods
fs
mov
fdivrp
push
inc
je
repnz
xchg
and
or
orb
and
mov
dec
sti
dec
iret
xchg
popa
and
push
add
fimuls
mov
ficoml
iret
or
add
and
xchg
xchg
les
mov
mov
xorb
dec
test
out
into
lea
sub
mov
cmp
lock
push
mov
loop
xor
pop
push
enter
addr16
lds
rol
dec
mov
int
cmp
loopne
xor
sbb
jl
pushf
push
ja
movsl
or
push
mov
iret
das
aaa
sub
sahf
mov
mov
cs
add
pop
icebp
jnp
jmp
dec
je
xor
dec
add
add
jecxz
in
inc
in
sub
mov
mov
or
cmp
ljmp
sub
popl
jnp
dec
dec
mov
out
and
pop
add
loop
leave
lret
push
inc
mov
push
push
je
xor
inc
andl
cmp
push
pop
adc
test
mov
in
pusha
xchg
aaa
arpl
jo
mov
bound
fcmovu
push
in
clc
stos
nop
fisttps
push
je
pop
jg
loopne
ja
cmp
cltd
inc
shr
loop
jge
mov
inc
or
xlat
xchg
scas
fisubrs
dec
xchg
dec
fidivrl
mov
mov
lock
cltd
test
fmull
clc
cld
sbb
jmp
jp
lret
inc
dec
repnz
push
mov
and
subl
mov
push
fisubs
scas
insb
or
lock
stos
insl
push
add
mov
nop
pop
movsb
imul
js
hlt
or
mov
xlat
pop
add
hlt
xchg
arpl
inc
pop
xor
iret
mov
sbbb
fistps
mov
lods
mov
lcall
xchg
decb
cltd
int3
cwtl
jecxz
mov
dec
movsb
and
es
add
adc
sbb
dec
hlt
and
mov
inc
xchg
in
jge
adc
xchg
push
popf
lds
push
cmc
imul
jo
xor
push
push
dec
and
mov
inc
add
jle
shrl
dec
loopne
mov
jbe
jl
push
xchg
or
xchg
add
cmp
lea
int
aad
imul
mov
push
test
dec
js
jl
jmp
subb
or
imul
testb
leave
push
mov
jl
out
mov
mov
clc
shl
mov
enter
add
jo
stos
insl
push
add
mov
or
into
sbb
aas
jbe
mov
push
fbstp
add
push
xchg
mov
jae
enter
dec
push
fwait
push
xor
into
adc
xchg
mov
dec
and
aaa
das
dec
inc
inc
rorl
mov
and
aam
jp
aam
clc
xchg
push
out
jge
iret
push
js
or
sbb
outsl
ficoms
jo
and
push
ljmp
rol
dec
and
das
fwait
out
sbb
imul
adc
and
and
xor
cmp
jo
in
inc
rolb
pop
mov
insb
cli
enter
jno
jb
push
imul
or
mov
dec
iret
mov
imul
mov
aad
movsl
mov
cmp
mov
jns
xor
push
push
mov
movsl
lock
mov
jmp
inc
mov
and
loope
cmp
cmpb
add
fstsw
jb
pop
andl
push
cmp
jle
mov
cmp
sub
or
push
xchg
push
mov
test
sbb
dec
adc
dec
sub
jno
add
sahf
in
fld
lds
int3
lods
imul
push
pop
lds
outsb
roll
lds
aad
pop
inc
adc
sub
fdivs
mov
daa
xchg
adc
les
cmp
sarb
ds
dec
jecxz
in
icebp
jb
push
sub
fidivrs
mov
nop
mov
cs
pushf
xchg
sbb
adc
adc
xchg
rcll
test
ret
pop
mov
ret
dec
insb
pop
enter
ljmp
jg
mov
pushf
push
inc
xchg
sub
xor
sub
pushf
mov
dec
jl
pusha
ja
push
les
movsb
lret
cmp
or
clc
scas
push
in
rcll
rorb
adc
and
xchg
inc
lds
fucomip
pusha
xchg
test
icebp
push
sub
push
sahf
push
ret
add
cmp
imul
inc
sti
mov
lret
std
pop
jne
les
pop
xchg
mov
aad
sbb
mov
test
loopne
mov
pop
nop
sub
fsubl
cmp
mov
cmp
pop
test
fldcw
push
dec
addr16
xchg
push
pop
lds
lock
call
jmp
enter
push
mov
stc
push
icebp
fisubs
mov
fcomi
jge
cmp
fcoms
lods
loope
js
push
xchg
mov
rcrb
dec
sbb
adc
addr16
sarl
xchg
lcall
add
dec
movsb
cld
mov
mov
push
dec
xchg
in
data16
dec
popf
sarl
lods
adc
popa
adc
jo
jb
dec
xchg
lret
mov
xor
int3
sub
or
fstpt
add
and
insb
shrb
cs
les
xor
mov
lret
fldt
outsl
jecxz
pusha
xor
push
cmpsb
ds
sbb
into
inc
les
addr16
icebp
lock
lea
lahf
pop
sbbl
fcoms
popfw
lods
push
mov
mov
push
out
fistpll
je
or
cmp
das
insl
adc
push
aad
jmp
cld
dec
je
lock
dec
mov
dec
adc
outsb
mov
sub
add
jle
mov
sbb
in
mov
jle
jo
jp
js
jmp
sbb
push
idiv
lahf
sub
and
xlat
notl
movsl
enter
cwtl
dec
sti
jmp
mov
jle
pop
or
push
stos
dec
sbb
push
xor
nop
fiaddl
mov
xchg
outsb
stc
xor
movsl
je
adc
icebp
sbb
push
push
adc
scas
add
test
pop
mov
xlat
stc
enter
push
or
repz
mov
sarl
add
push
pop
inc
pushf
adc
pusha
pop
dec
and
ret
sub
jmp
mov
xor
xor
xchg
fimuls
sub
push
jno
pop
lea
mov
fwait
imul
int
inc
repnz
adc
inc
out
cmp
sub
aam
mov
pop
test
dec
mov
icebp
jbe
push
xchg
and
dec
stc
cmpsb
sub
les
or
push
daa
xchg
push
inc
jg
fidivs
jge
dec
xchg
jo
cmp
mov
ja
and
pop
dec
out
dec
lcall
cld
mov
bound
sahf
into
sub
repz
inc
neg
out
xchg
mov
cmpl
push
push
xchg
xchg
outsb
fsubs
int3
sub
dec
cmp
test
xchg
mov
clc
aas
aam
or
or
test
iret
mov
mov
imul
sbbl
adc
xchg
jno
jbe
call
xor
js
js
aaa
mov
ficoms
mov
out
mov
jne
loopne
hlt
inc
ss
clc
cltd
xchg
sbb
fwait
arpl
or
nop
adc
fs
xchg
sbb
cmp
cwtl
adc
cmp
cmc
int3
ljmp
sbb
xlat
call
jl
inc
in
and
jmp
mov
push
push
mov
sub
cmp
mov
cmp
leave
popaw
xor
stc
adcb
testl
mov
inc
or
cmp
push
hlt
pop
jle
daa
and
adc
mov
xchg
sbb
jl
push
jnp
sbb
cli
push
mov
daa
push
in
push
jge
fs
int
or
test
jl
jo
stos
cmp
inc
test
mov
push
into
lods
out
jno
lret
cmpsb
mov
in
push
sub
adc
mov
jns
testl
enter
xor
push
ds
and
pop
repnz
push
jle
pop
jae
xor
xorl
stos
dec
rclb
dec
leave
or
ljmp
aad
test
adc
dec
xor
jle
pop
jb
sub
loopne
and
and
cmp
fisttpl
cwtl
scas
ja
in
cmp
push
add
mov
sbb
or
sub
pop
stos
aad
lock
xor
sub
outsl
lods
cmpsl
cmp
mov
push
jbe
cmp
frstor
mov
cmp
fnstcw
loope
or
jbe
orl
mov
sahf
daa
jns
out
push
lock
pop
xchg
lret
push
testl
negl
and
movsb
dec
addb
jnp
adc
jecxz
out
xor
sbb
stos
mov
push
aad
push
fcomps
mov
inc
sbb
movsb
jle
out
jne
in
add
inc
stc
js
ljmp
shr
sbb
cs
jmp
addl
daa
jle
mov
out
lods
dec
push
pop
imul
jbe
mov
aad
sub
sarb
sbb
xor
nop
cmp
push
pop
push
sub
lock
mov
ret
icebp
add
imul
mov
lods
mov
jmp
gs
mov
adc
mov
mov
cmp
pop
test
pop
jge
incb
pop
push
or
xlat
ret
popf
push
sub
push
sbb
int3
stos
sub
and
or
pop
add
xchg
lds
iret
fmul
push
mov
and
das
lcall
mov
pop
mov
movsl
repnz
imul
inc
push
mov
xchg
das
mov
push
dec
cmpsb
test
push
js
jle
push
movsl
sahf
lea
fadds
cmp
stc
movsl
inc
dec
testl
dec
jno
loopne
dec
mov
ret
pop
shll
push
stos
loopne
sbb
scas
imul
ljmp
sbb
movsl
lcall
sub
lahf
pop
sahf
lcall
xchg
cmp
jne
or
and
xor
daa
cmp
mov
or
cmpsb
mov
out
xor
imul
jo
popa
popf
hlt
out
adc
dec
add
in
cmp
lods
das
pop
lret
push
sub
arpl
add
mov
xchg
lock
addb
inc
ficoml
mov
cld
or
call
lds
or
dec
cmp
popa
sbb
std
xchg
sub
add
mov
push
addr16
push
icebp
add
inc
int
outsb
repnz
mov
testb
or
movsb
add
jne
mul
insl
popf
sub
rorb
sbb
mov
mov
dec
jne
ja
pop
sub
mov
lcall
cmc
hlt
and
xchg
movsb
and
mov
imul
out
enter
and
dec
sub
sub
popa
sahf
cmc
rorl
in
cltd
sub
loope
enter
sti
out
rclb
ret
jmp
rcl
xlat
mov
and
lahf
pushf
mov
mov
fnsetpm(287
cmp
mov
fistpll
mov
int
push
and
lret
xorb
int3
cmp
sbb
add
sub
xchg
fcomi
cmpl
mov
ja
les
hlt
cs
xor
mov
mov
mov
adc
and
out
pop
enter
mov
mov
mov
lahf
adc
lret
adcb
inc
imul
jbe
dec
inc
jne
inc
ffreep
lret
and
fucom
cs
mov
shl
inc
fstpl
fldl
shrb
test
mov
add
push
test
pop
and
outsb
fsubrl
adc
inc
fimull
das
push
push
pop
push
jecxz
sbb
or
or
insl
in
and
mov
aad
das
rcrl
fbstp
push
jle
jns
inc
pop
mov
jns
sbb
rcrb
int3
mov
lds
or
ret
mul
xchg
movsb
and
stc
test
int3
pop
mov
mov
inc
and
sti
mov
mov
clc
mov
mov
inc
xor
mov
leave
mov
arpl
ja
in
xor
ret
mov
jb
lret
pushf
sub
repnz
push
imul
push
popf
rcr
mov
and
popf
push
mov
lods
pop
outsl
and
ja
mov
clc
out
push
into
test
mov
adc
arpl
pushf
cld
insl
and
sahf
hlt
dec
stos
inc
jle
inc
lahf
push
ret
aaa
pop
mov
cs
jp
add
stc
jecxz
iret
xchg
inc
stos
add
icebp
dec
xor
pop
sbb
movsb
repz
jmp
adc
sub
jl
cltd
dec
jmp
xchg
jae
in
lret
lds
cwtl
loop
dec
adc
jne
std
add
das
cs
xlat
or
jb
gs
sub
sahf
xor
or
fistpl
push
cmp
fadds
xor
jle
in
cli
pop
mov
xchg
push
pop
lds
push
outsl
andb
ds
push
call
stc
jle
xchg
push
test
insl
jbe
cmpsl
adc
aad
test
mov
outsb
in
inc
repz
mov
ss
xchg
push
dec
lret
jp
ret
sbb
jb
fs
push
fsubrl
mov
push
and
cmp
fstpl
lods
cwtl
xor
lock
cs
das
and
lock
inc
xchg
xor
push
addl
fidivrs
add
add
fidivs
scas
les
sbb
xor
fs
adc
std
mov
mov
jns
mov
or
mov
loope
imul
push
insl
cmc
cmp
jmp
frstor
cmc
imul
add
fwait
and
sbb
lock
pushl
hlt
stos
and
pop
movsb
into
or
push
adc
movsl
pushf
xchg
mov
movsl
out
sbb
aad
push
fnsave
ss
daa
test
inc
daa
xor
les
pop
in
pop
sarb
xlat
aad
or
cli
xchg
movsl
bound
rorb
test
or
std
add
dec
add
dec
adc
or
in
in
xor
call
xor
dec
and
jno
push
jl
inc
out
mov
movsb
in
dec
and
and
jne
lea
mov
daa
scas
loopne
add
inc
pop
adc
xor
popa
pop
ljmp
or
enter
js
loop
cmp
int3
pop
lods
xchg
push
sub
icebp
mov
mov
mov
jl
pushf
out
inc
or
fisubrs
adc
movsb
loop
xor
incb
nop
mov
popa
inc
lock
js
xchg
xchg
add
lods
xchg
jge
loop
push
lods
fcmovne
lahf
mov
and
xchg
jmp
loope
adc
push
jge
sbb
xchg
iret
fdivr
xchg
ficomps
enter
xchg
roll
inc
push
arpl
mov
jbe
xchg
mov
pop
and
fistl
xor
leave
mov
test
ret
mov
dec
in
cltd
jnp
sub
fwait
aaa
cmpsb
pop
dec
mov
popa
pop
jne
inc
insb
sub
mov
test
cld
lret
add
cld
data16
pop
outsb
hlt
jp
cmp
mov
loope
xchg
adc
sub
iret
data16
mov
imul
or
out
inc
insl
xor
mov
xor
icebp
gs
jmp
js
sub
dec
lds
and
ret
pop
ss
push
mov
pop
mov
adc
outsb
cld
icebp
dec
inc
clc
mov
ret
aam
adc
xlat
adc
mov
popa
sub
lahf
push
pop
out
lret
das
lret
outsl
mov
stc
stos
add
xchg
aaa
jecxz
test
loopne
ss
cwtl
repnz
xchg
jnp
call
rcr
pusha
clc
xlat
mov
inc
test
inc
inc
loope
jle
popf
xchg
aas
testl
sub
stc
scas
and
xor
insl
mov
adcb
or
outsl
stos
insl
call
mov
xor
cmp
add
pop
mov
lret
cmp
aam
cmp
scas
mov
inc
jecxz
bound
or
mov
xchg
mov
addl
cli
sub
inc
lret
arpl
stc
mov
adc
mov
hlt
jae
sub
or
xor
xchg
dec
xor
push
xchg
and
xchg
test
adc
sti
ficompl
popf
insl
mov
cmp
mov
pop
lahf
scas
popf
cmpsb
cmp
jl
aam
arpl
les
in
xchg
or
jge
faddp
jnp
mov
mov
mov
cs
in
xor
ja
popa
add
mov
lock
inc
dec
jae
jns
icebp
bnd
jno
nop
icebp
imul
mov
outsl
imul
push
xchg
or
jge
aad
mov
jno
scas
pop
idivl
add
daa
fidivrl
sbb
and
adc
imul
or
rcl
push
imul
outsl
mov
je
adc
dec
shrl
insl
mov
mov
in
jl
ja
test
ret
mov
inc
or
jge
stc
dec
push
test
mov
loopne
inc
mov
inc
adc
pop
xchg
inc
mov
jnp
mov
icebp
call
jne
add
ret
cmpsl
movsb
mov
lods
cmp
push
push
push
pop
inc
cmp
lods
inc
cmp
cmpsb
in
movsl
subl
cltd
repnz
int3
xor
clc
shll
decb
mov
ja
sbb
sbb
icebp
adcl
daa
test
imul
push
frstor
movsb
jecxz
cmp
aaa
aas
dec
fwait
adc
mov
xor
inc
stos
mov
mov
cmp
ja
inc
and
in
mov
lret
js
out
push
or
repz
psllq
aam
int
sub
aad
push
adc
cmpsb
cmp
add
pop
xor
ret
xchg
mov
xchg
int
adc
hlt
cwtl
xchg
test
pop
xchg
imul
cs
mov
pop
imul
rclb
out
jbe
xor
cltd
shll
sbb
or
aad
iret
loopne
or
in
dec
lods
insb
popf
inc
inc
out
ja
cwtl
xchg
ss
stc
andb
or
push
subl
fimull
pop
fisttps
sarl
stc
pusha
stc
lea
ss
shld
enter
gs
mov
mov
das
jl
out
and
sbb
insb
test
inc
adc
xor
ret
mov
out
mov
fisttpl
cmpsl
xchg
push
cmp
inc
or
add
sub
mov
push
into
sbb
jg
inc
es
mov
dec
xchg
lods
shrb
sbb
inc
cmp
pusha
mov
sbb
and
loopne
lods
push
mov
das
pop
jns
xchg
push
push
jp
mov
mov
imul
adc
push
icebp
mov
dec
mov
cli
sbb
xchg
adc
out
sbb
loopne
sti
mov
inc
mov
in
dec
jle
push
add
or
mov
pushf
xchg
mov
out
cmp
stos
ss
retw
inc
loopne
cs
xor
imul
ret
add
stc
inc
test
jne
or
aas
enter
inc
aaa
xorl
orb
roll
push
sbb
aam
ret
in
adc
and
inc
xor
mov
cmc
inc
pusha
rcll
push
push
ret
pop
pop
inc
arpl
dec
mov
jecxz
push
xor
sub
loope
xor
incb
push
test
sbb
and
rclb
shll
and
pop
insl
movl
scas
xor
mov
shll
imul
or
fidivrs
in
imul
std
jnp
cmpsl
aam
mov
jg
rcr
jmp
jnp
push
out
jo
out
or
and
pop
sub
pop
adc
je
bswap
cld
jp
fdivp
imul
xor
jae
adc
push
rorl
call
push
popf
adc
inc
icebp
iret
daa
sbb
or
sbb
clc
in
sub
stos
xchg
adc
push
push
loopne
shlb
ret
sbb
jecxz
cld
dec
or
stos
cld
in
push
push
pusha
decb
xor
jbe
fstpt
add
call
mov
mov
mov
std
dec
stos
push
lahf
mov
arpl
dec
sbb
sbb
sub
push
and
mov
movsb
push
mov
mov
or
pushf
subb
inc
sbb
imul
nop
cld
cmpsb
arpl
xor
lret
cmp
mov
outsl
xor
inc
mov
hlt
iret
lret
rcrb
rcrb
pop
mov
xchg
cld
lea
pop
clc
mov
xchg
jb
push
aaa
sub
pop
push
cmpsb
imul
clc
int
and
fcompl
lret
frstor
sarb
addr16
dec
mov
sub
sbb
jg,pt
shr
adc
hlt
sub
cmp
xchg
inc
std
rcr
into
mov
sub
jnp
sub
or
in
cmpb
mov
push
lods
hlt
cld
scas
adc
sub
ja
test
mov
js
rol
fsubl
push
lret
mov
adc
mov
mov
xor
sti
or
or
lods
push
cld
xchg
mov
dec
sbb
push
ljmp
out
mov
lea
sbb
es
in
lret
jp
das
lods
push
adc
add
xor
add
dec
lds
cwtl
pop
pop
pop
cmpsl
movsb
loop
cld
pushl
xchg
bound
lret
pop
mov
adcb
out
in
xchg
add
shlb
mov
lcall
dec
pop
sar
or
addr16
xchg
or
push
xor
enter
scas
pop
lret
cmp
cmp
shlb
or
jp
movsb
inc
mov
mov
insb
push
xor
or
cli
inc
push
fs
shlb
mov
mov
push
add
insb
mov
out
lds
cmp
out
pop
int
xor
dec
xchg
dec
pop
mov
jg
flds
sbb
pop
inc
mov
push
clc
test
or
jl
cwtl
dec
jb
daa
inc
push
test
adc
sbb
outsl
xchg
adc
cmp
push
mov
fucomi
sarb
pop
xchg
jmp
subb
sbb
push
xchg
gs
fs
mov
sbb
lahf
mov
in
sbb
subb
pusha
mov
adc
push
adc
cmpsl
scas
in
out
adc
cmp
mov
into
xor
sbb
xor
mov
jnp
push
xor
scas
stos
add
or
dec
ror
sarl
add
mov
push
xchg
out
insb
lret
icebp
push
ret
test
mov
pop
mov
les
inc
mov
mov
inc
add
mov
daa
xor
pop
cwtl
jnp
test
sub
imul
xchg
loopne
and
or
or
xchg
icebp
and
inc
jnp
lret
jge
movsb
cmpsl
stos
mov
pop
mov
outsl
in
testb
lea
dec
pop
shll
sahf
gs
or
push
call
mov
adc
out
ret
inc
movsb
dec
call
mov
mov
sub
push
pop
pcmpeqb
mov
sti
sahf
jle
or
jbe
out
sarl
data16
int
lret
data16
xor
adc
cmp
mov
mov
fldl
mov
sbb
clc
cli
xor
xchg
xorb
aad
push
jb
cli
jae
pop
jmp
iret
push
cltd
data16
fstps
mov
adc
jl
pop
push
cmp
je
pushf
xor
daa
leave
pushf
jl
int3
mov
lods
sbb
jb
sti
jecxz
mov
test
push
nop
lds
sbb
cmc
fldt
int3
jmp
pop
rcll
mov
mov
and
repnz
fdivrl
add
es
push
rolb
es
and
stos
and
xor
dec
movsb
add
mov
inc
sti
jmp
and
je
mov
rorb
push
or
rorb
add
les
shlb
aam
fiadds
inc
repnz
ss
mov
mov
push
and
pop
xchg
pushf
daa
sbb
push
lods
mov
int
iret
xchg
pop
lods
adc
cmp
sbb
mov
xlat
sub
dec
dec
lahf
mov
addl
push
lods
cmp
dec
pop
addr16
insl
cwtl
xchg
clc
lds
jb
sbb
sbb
xchg
dec
and
add
xor
mov
call
bound
mov
or
or
or
mov
into
pop
imul
or
mov
in
xchg
test
movsb
stos
mov
mov
cmp
jge
mov
inc
daa
jmp
adc
fwait
shrb
cwtl
idiv
adc
outsb
jne
mov
sub
mov
push
lds
dec
test
insl
clc
push
mov
bnd
mov
xor
movsl
mov
cs
out
test
cmc
insb
popf
popf
inc
stos
xor
mov
pushf
imul
inc
sub
ss
arpl
push
pop
cmpsb
fdivl
dec
cmp
xchg
add
test
push
cmpsb
sub
sti
jbe
bswap
and
ja
push
int3
rol
and
pop
mov
dec
in
adc
call
jne
into
or
mov
jp
movsb
stc
outsb
imul
push
push
pop
outsb
pop
sub
dec
and
jbe
xchg
xor
push
cmp
shlb
outsl
out
sahf
lret
lret
or
sarb
insl
cmpsb
pop
or
insb
lcall
imul
out
add
sub
stos
test
mov
mov
lock
mov
xchg
dec
xor
mov
mov
scas
rorb
loope
inc
sbb
xchg
push
lds
lret
fcompl
sbb
push
dec
arpl
xchg
rorl
shll
test
fisubs
nop
sbb
mov
fldenv
push
xchg
aaa
push
xor
fdivrp
loop
sbb
mov
mov
cmp
loop
and
jae
cmc
sub
sub
scas
sub
push
es
pop
mov
arpl
fadd
sub
fisttps
dec
fs
jnp
push
push
out
or
jns
sahf
cmp
pushf
xor
mov
movsl
adc
popf
rorl
cmpsl
cmp
mov
pop
sti
repz
jnp
adc
mov
jno
into
fs
popa
xchg
enter
pushl
mov
inc
and
adc
scas
and
or
ret
lret
ljmp
test
int
cs
mov
iret
pop
out
jge
stos
imul
cld
loop
test
push
lahf
stos
cli
scas
inc
mov
lods
push
pop
shrb
fildll
mov
hlt
pushf
add
insl
jl
int3
sbb
stc
test
cmp
and
jno
aas
incb
mov
add
loop
in
dec
lods
jecxz
fsubrs
mov
adc
or
sbb
rorb
into
inc
rcll
dec
and
cmp
mov
ljmp
inc
sbb
out
mov
es
and
jle
pop
push
out
or
xchg
ret
test
and
push
mov
cwtl
inc
jle
mov
out
cmpsb
leave
add
mov
push
or
inc
nop
and
add
bound
fucomi
orb
sbb
aaa
jl
jb
mov
testl
sub
xchg
push
jg
ljmp
cmp
jb
sub
xor
xchg
cmc
and
and
inc
stos
in
jmp
nop
cmp
mov
mov
mov
mov
inc
loopne
cltd
lock
xlat
mov
daa
mov
xchg
addb
or
ss
xor
jl
lods
enter
movsb
stc
int
dec
inc
or
sbb
jl
stc
mov
sub
lock
inc
adc
sbb
xor
xchg
loop
scas
or
out
ret
xchg
push
xor
or
repz
sub
pop
mov
int3
add
inc
out
and
push
or
mov
iret
xor
inc
sub
adc
ljmp
add
pop
mov
sub
xor
dec
pop
xchg
les
adc
push
into
sbb
pop
ret
pop
add
pop
sub
dec
cmpsb
rclb
adc
inc
lahf
push
cmpsl
insl
jmp
fsubl
mov
cld
mov
movsb
push
ljmp
adc
jp
jge
mov
push
push
hlt
in
test
mov
hlt
jno
adc
adc
jne
mov
jecxz
pop
outsl
xchg
cli
sbb
movsl
dec
jae
in
pop
sbbb
int3
push
dec
lret
xchg
lods
filds
or
push
stos
push
and
jmp
insl
inc
lods
pusha
mov
pop
iret
pop
outsl
loopne
jno
es
pop
fwait
lcall
fdivrp
jo
sbb
ret
inc
jo
rorl
jl
insl
cmpsb
xor
dec
mov
pop
mov
mov
lret
insb
sarl
sbb
mov
stc
aas
outsb
outsl
mov
iret
jg
ss
ds
xor
push
push
dec
mov
mov
arpl
fnsave
sbb
inc
jmp
sbb
dec
push
and
lret
cmp
popf
xchg
call
imul
loop
in
scas
mov
inc
adcb
cmpl
stos
push
int
lahf
xchg
pop
lock
idivb
jae
pushf
sub
test
mov
pusha
lock
dec
inc
cmp
inc
idiv
in
ret
imul
aad
xchg
jae
sbb
mov
add
push
jg
repz
lods
cmp
xlat
add
test
js
adc
jl
nop
call
lea
xchg
lcall
loopne
mov
lds
mov
adc
inc
push
leave
imulb
dec
adc
cmp
or
imul
push
dec
rcll
dec
stos
and
js
ret
mov
bound
cmpsl
sbb
mov
test
js
push
cmp
scas
test
push
fists
mov
aaa
and
adc
daa
loope
test
push
xor
jb
xchg
sbb
inc
cwtl
mov
in
and
inc
adc
aaa
stc
and
ficoml
daa
ja
in
or
push
sbb
and
jg
icebp
ret
dec
push
inc
enter
dec
lcall
dec
xor
jbe
inc
mov
lods
dec
push
inc
imul
scas
add
mov
sbb
insb
push
cwtl
iret
insl
shrl
cmpsl
jae
xor
scas
dec
pusha
fcoml
jle
add
push
mov
xchg
mov
lds
xor
jecxz
iret
inc
ffreep
xchg
popl
call
jb
mov
inc
pop
pop
imul
repz
push
push
xor
sbb
push
rcll
cltd
jns
xlat
lahf
inc
cmpl
nop
cmp
cmpsl
leave
jge
mov
shll
pop
or
subb
std
jp
jl
sub
xor
or
bnd
fcmovb
pop
sbb
mov
push
sti
cli
and
add
jle
ljmp
mov
push
add
add
jg
fimuls
nop
pop
xchg
movsb
test
add
cmpb
ja
dec
cltd
sub
stos
scas
lea
dec
sbb
cmp
cli
call
dec
in
xchg
and
aam
fs
mov
push
jnp
shrl
cmpsb
scas
out
add
push
cmp
cmp
dec
shl
dec
shr
sbb
inc
out
xchg
pop
add
jne
adc
mov
js
push
cmp
or
push
jae
xor
and
jns
cmc
in
push
sub
and
scas
jg
aam
mov
fiaddl
inc
mov
xor
push
test
xor
insb
mov
aas
xchg
pushf
sarl
mov
imul
pop
mov
hlt
roll
inc
jae
mov
sti
addl
or
pop
je
fs
pop
xchg
push
sbb
mov
ja
repnz
movsl
push
pusha
pusha
pop
push
inc
xor
lret
cmp
int
jmp
dec
lods
cmp
xor
pop
enter
test
in
add
add
mov
test
repz
mov
frstor
xor
or
movsb
pop
loop
push
addr16
out
aam
sarb
inc
aad
xchg
and
adc
add
pop
and
scas
imul
and
add
sbb
mov
mov
fsubs
or
sub
or
ja
aaa
movsl
adc
imul
or
in
adc
jge
mov
mov
fstps
test
shl
xor
loope
ja
ss
call
cmc
dec
cmp
inc
adc
cltd
dec
js
mov
lods
lcall
sub
jg
push
adc
int3
pop
adc
or
shlb
imul
sbb
dec
pop
and
lods
xchg
sbb
pop
jecxz
cs
push
mov
cmp
cmp
jns
push
iret
out
jl
pop
xor
mov
outsb
nop
sub
xchg
xor
xor
jge
and
adc
cmp
pop
cmp
jbe
adc
pop
out
loop
mov
pop
push
mov
mov
cwtl
sub
stc
shll
ret
pop
lret
repnz
clc
fucomip
fdivrl
addl
lods
por
ja
sub
aaa
dec
cwtl
pop
push
lcall
rcl
iret
scas
cmp
sar
mov
fisubrl
push
xchg
inc
push
leave
sub
call
inc
dec
mov
ss
bnd
push
fimuls
mov
push
inc
sub
lea
add
stc
jbe
adc
es
dec
and
xor
jl
cmpsb
ret
push
int3
and
sbb
cld
mov
and
sbb
push
fldl2e
pop
hlt
xchg
xor
fs
inc
jbe
sbb
pop
clc
jecxz
cli
hlt
loop
cmpl
cmp
fs
out
aas
mov
addr16
pop
loope
ret
movsb
push
jecxz
nopl
imul
popf
mov
adc
sub
cmc
xchg
xor
xchg
js
cmpsl
stos
lret
jmp
xchg
dec
out
imul
sar
into
inc
fistps
loopne
xchg
push
sbbl
mov
je
adc
cmp
movsl
cs
jge
in
ss
push
cld
call
pop
das
and
sub
cwtl
push
test
sbb
push
add
popf
call
jl
xlat
lods
sub
inc
stos
sti
fcoms
mov
shr
loopne
and
loopne
and
and
xchg
jl
push
mov
push
lods
ljmp
fs
adc
push
mov
dec
fcompl
enter
dec
dec
inc
aad
push
push
int3
movsl
dec
jb
mov
xorb
pushf
add
adc
test
lods
mov
or
shlb
mov
test
jne
add
mov
subb
xchg
sub
jge
repz
sti
jnp
iret
and
mov
sub
pop
out
mov
xor
outsb
in
in
push
adc
and
out
das
pop
js
ss
cmp
or
in
mov
adc
or
in
loop
sbb
mov
push
rolb
stc
ror
cli
mov
std
dec
jmp
dec
xchg
cmp
mov
mov
aad
add
mov
cmc
jl
mov
pop
sar
cmp
enter
fistpll
lahf
mov
mov
das
daa
inc
scas
mov
sub
popa
jno
adc
mov
jbe
cmpsb
or
pop
mull
imul
mov
dec
fdiv
jmp
and
add
das
xchg
in
mov
cmp
jae
push
js
movsb
data16
dec
test
rcll
and
mov
pop
lret
sbb
and
dec
repnz
add
pushl
popf
iret
sub
fldenv
push
pop
movsb
fisubrs
addr16
popf
out
sahf
inc
sti
and
sti
push
out
lret
call
cmpl
es
xchg
subb
lods
xchg
rol
iret
out
jge
xor
inc
xor
jae
mov
hlt
cmp
or
outsb
imul
lods
pop
cmp
fidivs
jmp
xor
inc
or
mov
mov
sub
dec
adc
push
outsb
push
dec
ss
lea
pop
aad
mov
ret
push
cli
jge
scas
sbb
sbb
mov
shll
mov
xchg
lods
int3
sbb
mov
add
pop
fisttpll
push
shrl
js
mov
leave
xchg
shl
shlb
gs
jmp
sub
jo
mov
add
pop
sub
mov
sub
dec
xor
adc
adc
xchg
lahf
mov
pusha
imul
and
pop
dec
movsl
add
mov
adcb
shl
push
fnstcw
and
sbb
dec
les
ret
std
das
cmc
sbb
sahf
lods
pop
daa
in
movsl
test
push
push
push
call
or
mov
jns
stos
xchg
and
andb
mov
mov
jp
das
cmpsl
pop
sti
xlat
int3
sahf
lahf
dec
mov
jns
pop
jl
lods
add
sub
sub
jp
loop
or
lods
ds
and
inc
in
repz
jne
popf
push
push
adc
jl
sbb
push
mov
push
mov
mov
dec
inc
gs
cmp
xchg
lods
push
lret
cmp
repnz
loopne
loope
push
push
lcall
shrl
cmp
je
repz
hlt
push
enter
pop
fdivrs
mov
xchg
stc
push
mov
dec
andl
in
push
adc
icebp
dec
shlb
sub
iret
pop
mov
mov
adc
out
loope
testl
test
dec
xor
mov
and
outsb
test
div
push
fstpt
xchg
xor
sbb
subl
imul
dec
sub
fcmovnbe
sbb
sbb
js
leave
addr16
iret
pop
cmpsb
sub
sbb
fildl
std
xchg
sti
add
or
into
cmp
andl
popf
sbb
dec
or
jne
outsb
sti
ret
cld
loope
cmp
pop
roll
lret
xor
add
jge
pop
xchg
jne
cld
pop
in
or
mov
sbb
add
inc
add
fldlg2
jmp
aas
jo
pop
test
ret
or
jne
xchg
inc
add
pop
and
push
into
xlat
sbb
jle
std
pop
inc
mov
mov
xchg
cmp
shll
xchg
pop
add
and
pop
adc
ljmp
lret
mov
dec
popl
sub
sahf
push
insl
sbb
pop
bnd
pusha
insb
cmpsb
int
test
aad
call
push
rcll
inc
or
test
pmuludq
or
xor
into
mov
pop
or
ret
add
lock
enter
fs
out
and
push
push
push
cmp
mov
sbb
aad
and
push
mov
dec
in
sub
adc
insb
jp
dec
jbe
and
int3
je
iret
shlb
lret
and
pushf
outsb
and
dec
je
lcall
out
cmp
xor
data16
mov
inc
pop
push
pop
fisttpl
scas
xchg
popf
in
dec
add
popa
ljmp
push
clc
adc
pushf
inc
lret
lods
or
mov
jb
ret
mov
push
and
fstl
xchg
push
mov
jo
xorb
sbb
mov
adc
dec
out
popf
int3
pop
loope
sub
add
sbb
in
cld
jle
mov
mov
addr16
fcompl
lret
add
mov
std
mov
xor
in
enter
push
mov
std
insl
xchg
iret
jp
push
sbb
cmp
sbb
push
pop
adc
ja
cmp
xchg
mov
inc
cmp
cmp
push
cmp
rclb
jp
mulb
bound
pop
into
add
jo
cmpsb
in
mov
in
faddl
sbb
in
loop
jg
loope
orb
into
popf
popw
xor
jmp
xorl
sub
xlat
mov
xchg
xor
pop
stos
cmp
push
enter
into
ror
popf
pop
or
sbb
lock
shld
sbb
sbb
loopne
stos
sti
stos
jae
icebp
add
push
imul
cmc
sub
lret
iret
pusha
dec
shl
out
push
jnp
push
sub
xchg
ds
and
in
mov
sti
and
shll
push
xor
sub
push
dec
inc
xchg
ss
test
mov
adc
mov
mov
jge
add
daa
vandps
outsl
and
call
aad
mov
and
or
addl
jne
hlt
xchg
pop
sahf
sub
fildl
mov
shr
sub
or
jmp
jbe
ds
push
jne
and
mov
icebp
xchg
neg
sub
out
xlat
mov
xchg
insl
and
insl
fs
jge
les
dec
inc
inc
cltd
arpl
pop
mov
insb
pop
push
outsb
subl
sahf
sbb
push
adc
test
sub
cmpsl
sbb
or
insl
movsb
popf
fistpl
add
cld
cmpsl
js
sbb
jmp
or
pushw
mov
push
mov
les
fwait
call
dec
cmp
test
pop
adc
fsubrp
sub
inc
in
pop
push
or
pop
pop
xchg
xor
sbb
xchg
dec
test
arpl
xor
test
nop
xor
std
in
loop
cmpsb
ficoml
shrl
es
aam
out
enter
inc
mov
mov
out
dec
and
lcall
pop
cmp
mov
test
mov
testb
lods
loop
movsb
inc
or
mov
sti
sub
lcall
into
shrb
jecxz
push
sbb
fsubrl
loop
push
fildll
dec
mov
les
lret
cmpsl
adc
dec
enter
fstp
fsubrl
outsl
nop
mov
bound
jns
std
aad
mov
adc
adc
mov
test
xchg
or
mov
push
movsl
xchg
mov
mov
add
sub
xchg
ror
jmp
mov
mov
in
mov
jg
fldt
jge
fdivp
xchg
push
std
sbb
mov
adc
stos
aam
std
loop
cmp
clc
pop
sarb
mov
pushf
pop
gs
sub
and
mov
ja
mov
out
ds
add
pop
push
test
pop
or
and
in
pop
mov
sbbb
imul
push
aas
and
xchg
pop
cmpsb
lahf
orb
imul
decb
sub
inc
inc
psubb
nopl
fiaddl
repnz
shl
and
das
and
test
rcll
push
cmpsl
cmp
movsb
sbb
push
inc
sbb
call
into
pop
pop
lods
enter
repnz
mov
movsb
lods
inc
popf
xchg
pop
inc
jnp
xor
jg
lods
add
and
mov
fcoml
daa
movsl
adc
push
imul
pop
outsb
in
jmp
cmpsl
jno
in
das
mov
das
icebp
dec
jle
add
clc
psrlw
jbe
mov
sahf
fwait
ja
dec
mov
stos
ljmp
or
cmpsb
rorl
sar
cmp
xchg
jb
rorl
aas
test
fstl
lahf
in
and
orps
inc
pop
ljmp
mov
leave
addr16
leave
out
mov
adc
fs
loopne
push
mov
popa
scas
jno
into
in
push
out
pop
jp
clc
jb
test
movb
and
loopne
cmc
nop
push
fdiv
lods
lods
dec
sbbb
lds
fcompl
fisttps
leave
std
arpl
sub
jns
mov
sub
cmpsb
data16
jb
cli
push
push
fcmovbe
clc
jnp
stos
popw
rcll
inc
fdivrp
or
jnp
sbb
xchg
out
cmp
sub
cli
pop
fidivrl
rcr
mov
cwtl
push
adc
cli
ja
adcb
push
sbb
add
add
and
aas
jmp
mov
scas
or
movsl
dec
dec
or
add
xchg
mov
ds
mov
dec
dec
mov
cwtl
jmp
jl
gs
addr16
lea
js
mov
pop
pop
loop
es
inc
int
sbb
cmp
sub
xor
jg
arpl
xchg
sub
mov
cwtl
sbb
mov
jge
jle
or
pop
cmp
movsl
sbb
mov
popf
mov
dec
mov
ret
mov
loopne
dec
or
les
lahf
les
mov
mov
mov
imul
gs
jle
fsubrl
add
repz
divl
or
push
push
in
aas
push
mov
push
mov
insl
hlt
xchg
repz
xchg
xchg
mov
lock
inc
jmp
in
push
sbb
imul
sub
mov
fnstenv
ss
dec
imul
test
sahf
loop
rcll
dec
cmp
dec
into
mov
or
shll
cmp
pop
lahf
mov
mov
jns
repnz
test
movsb
jecxz
push
out
ja
or
xchg
in
sub
dec
push
pop
xor
xchg
out
xchg
mov
mov
adc
into
pop
pop
mov
loopne
cli
mov
push
mov
jnp
sbb
push
out
mov
jae
mov
fldt
xchg
push
int
je
les
sub
xchg
cmp
add
out
out
push
outsb
cs
xor
je
dec
jo
jmp
int3
call
adc
xchg
cmp
inc
mov
cmpsl
out
mov
fbld
aam
jbe
sbb
xchg
call
push
mov
ja
mov
sbb
and
cmp
shr
xchg
int3
and
dec
mov
stc
insb
mov
in
sahf
out
sub
cmp
adc
jmp
mov
js
dec
rcrl
icebp
insb
mov
cmp
fstps
mov
cltd
das
outsb
cs
lret
push
lret
pop
mov
leave
add
push
mov
pop
push
xorb
xchg
nop
or
aaa
rcrl
ss
sub
shr
lods
adcb
jae
fistpll
sub
lret
pop
xor
mov
jp
jns
stc
mov
push
std
test
jo
adc
mov
bound
lds
mov
xchg
mov
xor
pop
cmc
sahf
ds
mov
mov
jl
and
hlt
xchg
cmp
sub
jl
faddp
adc
cltd
push
add
and
repz
dec
push
int
clc
mov
test
xchg
inc
std
cmpsl
cld
mov
lea
pop
pop
and
push
or
xchg
sbb
inc
inc
aas
imul
mov
cmp
js
add
xor
das
lret
mov
and
outsb
pop
add
push
shl
mov
outsb
decl
int3
je
or
lcall
mov
jnp
std
fneni(8087
ret
out
mov
fwait
lds
push
xor
sbbl
fistpl
les
popa
push
xor
fisubrs
imul
test
xor
js
cmpsb
xor
adc
push
es
adc
add
dec
lcall
arpl
popw
jns
int3
int
fldz
jmp
add
std
push
rcrl
ret
adc
sbb
pop
push
sub
add
inc
xchg
push
push
mov
orb
shll
ret
je
push
repnz
jmp
pop
pop
push
mov
aas
mov
mov
sbb
arpl
mov
add
mov
inc
stos
xor
testl
pop
out
out
mov
dec
push
jbe
and
pop
xor
fwait
bound
jae
stos
out
repnz
cmp
fdivrl
mov
jbe
dec
bound
rolb
and
adc
xchg
mov
lcall
scas
and
in
adc
insl
jg
cmp
xor
in
mov
or
clc
xchg
lods
test
push
mov
xor
pop
adcb
ja
fnstenv
mov
movsl
or
sub
out
jno
sub
fistps
pop
push
loop
iret
jle
lcall
xchg
sub
mov
push
pop
cmp
out
outsb
cltd
dec
mov
xor
cmp
and
xchg
cli
lret
cmp
test
cmp
divb
popa
add
jl
ret
clc
pop
js
cmp
scas
xchg
scas
out
iret
movsb
popa
mov
xor
ljmp
adc
mov
test
and
cltd
test
mov
push
pavgb
xor
fwait
xchg
out
cwtl
insb
sbb
push
mov
push
pushl
repz
test
and
data16
movsb
jge
inc
sbb
out
mov
daa
inc
lods
lahf
repnz
mov
mov
mov
push
jnp
adc
fldl
or
lahf
test
dec
jp
iret
bound
jb
mov
jo
mov
push
mov
les
dec
adc
fisubrs
shlb
sbb
insl
add
arpl
sbb
sbb
orl
test
mov
mov
mov
push
pop
mov
jmp
cmp
push
push
ja
xchg
ss
test
out
sub
jno
popa
xchg
aad
pusha
insb
lds
sub
shrb
or
or
xchg
clc
imul
ret
adc
cmp
cmp
xchg
cmp
test
mov
adc
cs
xchg
mov
rcrb
orl
inc
ljmp
in
shl
xor
push
test
jg
pop
cmp
push
cmp
inc
divl
jbe
daa
and
rcrl
sbb
xlat
pcmpgtb
mov
les
popa
faddl
lds
or
fimuls
call
and
cmp
sub
jo
xchg
jbe
mov
fisubrs
mov
mov
fcomps
cmp
and
xor
or
mov
cmp
cwtl
xchg
mov
xchg
push
mov
mov
mov
push
pop
aad
jo
jl
js
xchg
mov
jae
cmp
aaa
out
std
mov
popf
sahf
clc
mov
or
imul
out
int
push
lcall
cmp
cli
testl
and
adc
xchg
adc
jb
xchg
add
imul
xor
sub
pop
out
jno
adc
lods
cmp
fcomip
add
rol
jge
mov
mov
daa
cmp
inc
push
ficompl
mov
jnp
arpl
iret
sbb
or
or
and
lods
lds
xor
cmp
pop
pop
jnp
enter
addb
loop
add
mov
scas
mov
std
jg
push
lock
xlat
cli
cmpsb
fdivp
push
cmp
aam
out
mov
xchg
inc
and
dec
iret
or
push
insl
push
adc
inc
sbb
xchg
mov
xchg
adc
and
inc
cmp
out
and
add
inc
add
lea
lds
dec
cwtl
mov
mov
mov
aaa
ffreep
mov
sbb
sahf
jmp
adc
cmc
jecxz
test
lods
pop
push
mov
xor
inc
pop
in
push
xchg
hlt
jl
iret
fcomp
push
out
divb
lret
sub
dec
das
cmp
negb
ljmp
push
leave
out
or
les
push
fdivrs
or
jecxz
ret
mov
jnp
add
nop
inc
loope
bnd
loop
push
mov
lahf
jns
aam
cwtl
fwait
cmp
mov
popa
mov
add
fwait
int
push
pop
xchg
lcall
cmp
add
popf
rorb
and
mov
out
dec
mov
mov
dec
decl
ja
cwtl
leave
jecxz
pusha
jb
fdivrl
into
mov
xchg
mov
test
sub
into
push
or
mov
sbb
xchg
mov
jg
aad
mov
shrl
dec
sub
sbb
shlb
cmp
pop
nop
shll
cmp
shlb
test
xchg
sbb
pusha
cmc
xor
jno
sbb
inc
loopne
add
jp
jle
mov
jl
lds
push
fists
stc
int
js
and
divl
push
mov
xor
rorl
mov
jmp
scas
popa
stos
mov
repnz
ljmp
lret
jne
sbb
in
insb
pusha
xor
into
fdivp
adc
lods
fwait
sub
adc
ja
cmp
cmp
cwtl
inc
xchg
add
dec
pop
push
add
mov
inc
jbe
dec
test
sub
repz
or
cmp
jmp
jp
xchg
dec
xchg
in
cld
or
inc
jbe
sub
mov
bound
mov
xchg
mov
repnz
cmpb
sub
gs
fcomps
mov
insl
pop
movsb
stos
loope
push
xor
fadd
mov
inc
add
enter
xor
cmp
rclb
cmp
and
jle
mov
aaa
inc
push
out
ss
daa
aas
inc
out
cmpsb
pop
mov
mov
insl
inc
mov
jge
mov
cmp
push
dec
das
leave
and
data16
stc
call
addb
mov
clc
dec
jns
and
inc
fwait
push
sbb
std
test
test
int
mov
mulb
and
lock
xor
js
and
or
jae
int
test
lcall
cmp
pop
mov
jns
aaa
in
sbb
nop
xor
inc
loope
or
mov
xchg
jns
or
xchg
dec
cli
les
or
ds
fsubrs
in
or
loop
out
mov
mov
sub
test
sarb
outsb
pop
add
test
popf
cmp
jns
psrlw
fs
mull
inc
mov
call
pop
cmp
dec
mov
sbb
test
jne
lock
dec
xchg
int3
les
imul
int
cmpsl
push
lret
shrl
bts
data16
dec
dec
jmp
pop
jb
fwait
mov
lea
dec
sub
into
jg
ss
outsb
cld
sub
hlt
ja
cmp
in
mov
xchg
push
cld
push
dec
jns
test
enter
add
dec
or
xchg
pop
jg
gs
imul
pop
inc
cli
lock
pop
test
loop
popa
mov
mov
mov
mov
xchg
movsb
je
dec
or
cmpsl
dec
mov
imull
push
stc
mov
inc
dec
mov
xchg
or
sbb
adc
leave
sti
arpl
push
sar
mov
and
test
addr16
mov
popa
sub
mov
pop
dec
cltd
loope
int
sbb
mov
push
lods
push
add
push
fwait
daa
mov
aam
inc
mov
test
imul
jnp
inc
sbb
sbb
mov
mov
pushl
out
cmpsl
jo
in
xor
mov
sti
repz
add
enter
movsb
sbb
lea
jae
repnz
cmc
mov
sub
and
shlb
ret
insl
jnp
add
mov
push
out
les
cmp
out
add
or
incb
mov
mov
xor
movsl
add
sbb
and
xchg
xchg
test
xchg
push
es
mov
rcrl
addr16
lret
mov
call
ja
push
test
pop
cwtl
inc
ret
rclb
jmp
into
faddl
jp
pop
sub
dec
xor
gs
pop
pop
pop
sub
shlb
jg
scas
adc
rcll
sub
int3
ss
int3
loop
jo
pop
aaa
fdivl
sub
js
call
das
mov
das
outsl
pop
pop
push
nop
xchg
int
mov
iret
inc
setb
outsl
insl
es
outsb
and
inc
mov
das
and
sbb
xchg
lcall
imul
inc
xor
inc
adc
pop
rcll
sbb
and
push
dec
cmpsl
call
sub
or
ja
shlb
bswap
lcall
sbb
mov
xchg
mov
push
aaa
pop
int
inc
imull
insb
pop
cmpsb
or
and
ja
xor
lea
mov
lahf
jbe
mov
outsb
aaa
daa
xor
and
out
in
and
imul
push
jp
sbb
push
add
daa
mov
aam
sbb
das
add
inc
int
pop
das
aam
into
rolb
stos
xchg
cs
jl
dec
aaa
sarb
lret
cmc
pop
insl
mov
lods
dec
stos
sbb
ljmp
out
sbb
pop
cmp
sub
test
mov
aad
inc
inc
add
out
mov
out
lea
cmp
sub
imul
mov
imul
jae
ja
ja
xchg
movsb
shl
jge
push
aad
sti
out
inc
ret
icebp
cmp
and
out
fptan
or
xchg
xchg
adc
loopne
loop
mov
mov
dec
into
xor
sbb
add
test
adc
and
pop
es
out
out
fs
cmpsl
ret
jbe
out
sahf
cmp
fcoms
in
cld
or
mov
xchg
xchg
mov
jb
arpl
jbe
push
pushf
xor
sub
nop
mov
xchg
movsb
adc
inc
nop
push
jge
xchg
push
lcall
mov
jle
idivb
push
dec
sub
ljmp
cmp
testl
dec
shlb
bound
or
aam
sub
inc
add
mov
cmpsb
xchg
sahf
gs
call
cmc
sahf
int3
fwait
test
pop
mov
inc
push
scas
scas
popf
outsb
pusha
jecxz
lret
push
sahf
fcom
daa
inc
clc
subb
in
movsb
lds
and
and
popf
xor
ret
pop
or
dec
dec
or
in
addl
pop
jne
sbb
shl
xlat
pushf
fs
and
mov
loopne
aas
in
xor
ja
or
inc
mov
sbb
outsb
movb
mov
lret
push
adc
sub
enter
mov
mov
punpckldq
test
rcrl
xor
aam
fldt
lret
sahf
inc
rol
rol
push
xchg
mov
inc
lds
add
icebp
mov
sub
sti
mov
or
fsubrl
cli
push
fidivs
cltd
or
addl
mov
call
imul
jmp
js,pn
stos
jmp
xchg
jae
ds
pop
std
leave
xchg
mov
leave
jle
adc
sub
jbe
jb
test
mov
hlt
arpl
js
dec
cltd
mov
int3
add
adc
js
test
jle,pt
push
jl
dec
flds
mov
cmp
sbb
into
push
dec
mov
loopne
xor
dec
cmp
sbb
dec
aaa
push
leave
push
scas
sub
or
pop
pushf
sti
jb
and
mov
mov
jbe
repz
insb
dec
es
pop
js
andl
cmp
cmp
inc
test
outsb
lahf
jmp
add
lret
outsb
dec
bound
cs
insb
out
inc
js
jl
leave
sub
insl
mov
jb
imul
fsubrl
xor
fimuls
jae
fistpl
stc
and
jb
sub
test
or
xchg
shl
hlt
fsubr
ret
xchg
add
in
loop
in
pop
repnz
push
nop
xchg
dec
ffree
pop
fnstcw
adc
xlat
push
cli
sbb
xchg
mov
pusha
and
icebp
ret
mov
adc
stos
cld
jl
lcall
js
and
cli
jmp
jbe
js
and
out
inc
sbb
xlat
lds
dec
repnz
push
push
and
arpl
jmp
xchg
push
push
pushf
loopne
lahf
mov
testl
pop
mov
mov
add
sti
pop
js
loop
notl
leave
push
pop
pop
sbb
pop
mov
das
lmsw
or
fcoms
subl
cltd
mov
cmpsl
sub
stos
movsl
jae
add
inc
pop
mov
shlb
out
mov
rcrb
pusha
cltd
outsl
nop
cmpsb
lods
pushf
test
mov
repnz
cltd
mov
jb
test
jae
adc
cmp
add
scas
ja
bound
sbb
testl
fstpt
cwtl
jl
sbb
xchg
loopne
cmp
push
shll
or
xchg
adc
adc
daa
adc
xchg
arpl
sbb
scas
in
mov
clc
lcall
xchg
nop
xlat
out
call
mov
jp
mov
jmp
cmpsb
ss
fwait
js
movb
inc
fwait
lods
or
push
out
popf
popf
outsb
xchg
and
push
jl
aaa
mov
lock
jmp
adc
ds
mov
mov
nop
cmpsl
mov
adc
stc
aaa
insb
in
mov
out
outsb
inc
out
mov
movsl
lds
push
or
in
jo
stc
sahf
es
outsl
addr16
movsl
cmp
icebp
lods
xlat
std
repnz
ss
faddl
fldenv
icebp
dec
mov
cmc
sub
xchg
adcl
mov
lods
jmp
mov
in
sbb
sub
popa
in
sbb
lcall
imul
cmpsl
sbbl
lock
data16
clc
loop
xor
pop
pop
dec
sbb
mov
lds
nop
repz
sub
sarl
dec
push
and
push
mov
push
lods
mov
push
ror
xchg
jns
lret
popa
mov
push
fimull
mov
lds
xchg
lret
insb
add
fldenv
repnz
lds
scas
mov
dec
lds
std
xor
jo
outsb
ss
xor
xchg
orb
sbb
cmpsl
iret
pop
sub
sbb
or
into
dec
pop
lods
jbe
pop
test
dec
or
add
cs
lods
aam
das
cmpsl
xchg
jecxz
stos
pop
pop
pop
lret
aam
ljmp
push
or
pop
and
mov
push
adc
xchg
fistpll
inc
xchg
inc
lret
test
sub
jge
movd
aas
cmp
mov
cmpsb
pop
loop
inc
test
xlat
shrl
imul
lahf
decl
jb
inc
in
aaa
dec
sub
in
pop
loopne
sub
or
into
add
addr16
insb
xchg
lret
mov
std
cmpb
push
xchg
imul
sub
dec
fidivs
jbe
and
xlat
jae
jo
push
hlt
mov
fstps
ret
arpl
pusha
cmp
pop
nop
mov
leave
in
and
and
push
jg
es
mov
adc
push
and
pop
leave
mov
jge
sub
pop
and
int3
jle
push
hlt
and
lods
push
or
rdpmc
adc
pop
dec
cmp
dec
jae
sub
fstp
das
jg
mov
imul
mov
dec
test
mov
jbe
dec
push
imul
int
cmpsl
int
xchg
mov
nop
lcall
test
sub
fmull
dec
ss
sbb
mov
es
push
subb
je
shrl
lret
and
stos
das
push
sub
fcomp
gs
add
jne
cmp
mov
cmpsb
xchg
xchg
xchg
add
dec
cmp
cmp
pop
cld
xor
and
mov
gs
jae
fcoml
loope
test
imul
sahf
push
cwtl
movsl
pushf
clc
sahf
or
hlt
mov
lods
icebp
addr16
pusha
aad
enter
jns
outsl
mov
faddl
mov
inc
cmp
jnp
into
adcb
shll
fdivs
or
dec
mov
fistps
cmpsb
adc
xor
insl
jb
push
decb
xchg
hlt
push
sbb
scas
sub
pushf
or
mov
je
and
mov
stos
ja
pop
jnp
lret
add
pop
mov
push
pop
push
fiaddl
ret
mov
or
ret
stos
push
mov
jbe
bound
mov
pop
cmp
mov
jae
mov
call
or
mov
pushf
or
imul
cwtl
sub
lret
pusha
pop
jg
pushf
jg
mov
stos
mov
mov
jae
cmp
sahf
adc
sbb
sbb
push
dec
push
shrl
cmpsl
pop
or
adc
sbb
std
mov
rcr
mov
mov
jb
pop
das
fstpt
pop
xlat
dec
cmp
jecxz
rclb
jne
sub
push
xchg
divb
jns
js
cld
lods
inc
mov
xchg
ret
unpcklps
scas
jbe
mov
push
aaa
addr16
sbbb
ret
inc
jne
mov
cmp
je
or
inc
fst
jmp
pop
popl
mov
mov
pop
out
mov
sub
inc
mov
iretw
push
and
imul
stc
popa
dec
lock
sub
jne
add
push
shr
xchg
xchg
loop
or
lret
cmp
mov
int
lahf
jbe
inc
stos
xor
rorb
adc
or
sbb
pusha
aad
sub
shrb
sti
aas
jle
sub
mov
sbb
sub
inc
popa
pop
pop
push
cs
pushf
in
and
push
push
adc
cmpsl
jae
or
insb
pshufw
xor
lahf
sbb
imul
pop
mov
jp
xchg
pop
lods
lds
push
xchg
test
sub
inc
movsb
stos
scas
daa
aad
jne
hlt
mov
sbb
dec
mov
sub
shll
scas
mov
pmullw
scas
pop
push
push
scas
push
mov
fldl
jo
fimuls
mov
or
leave
fisubrl
cmp
jge
repnz
cmpsb
insl
hlt
scas
repnz
dec
mov
hlt
cs
xchg
dec
data16
cmc
xchg
mov
add
mov
hlt
mov
stos
in
pop
adc
jp
push
push
jo
push
jg
sbb
testb
or
fimuls
mov
mov
adcb
scas
push
add
xchg
test
sti
push
ljmp
push
popf
jb
jecxz
mov
in
sub
jne
neg
das
decb
mov
or
lret
enter
arpl
jecxz
outsl
adc
stc
mov
out
dec
sbb
xor
cmpsl
loopne
jne
jl
test
inc
pop
call
es
xchg
fmul
xchg
orl
pop
aad
leave
enter
shr
jecxz
jns
std
sbb
popa
xchg
cmpsb
and
push
pop
out
jecxz
inc
or
aas
push
test
sub
pusha
enter
hlt
nop
bound
shll
das
nop
mov
ret
loopne,pt
xorb
imul
jae
ret
ret
jl
mulb
xchg
push
idivb
lret
sub
xor
dec
mov
test
push
mov
jne
pop
mov
out
or
and
rolb
inc
inc
mov
cltd
cmp
jg
xor
fnstsw
push
xor
repnz
pop
inc
mov
in
add
int3
xchg
sbb
test
jne
mov
mov
cli
fs
adc
dec
add
test
sbb
jbe
inc
push
xor
data16
cltd
dec
push
fsubr
in
negl
inc
mov
push
jmp
sub
in
push
leave
pop
push
xor
inc
data16
add
mov
mov
in
jbe
xchg
loopne
push
dec
inc
inc
or
sub
add
mov
or
ret
or
dec
push
lea
inc
outsl
das
into
test
xor
mov
loopne
adc
mov
cmc
jo
and
loop
inc
jg
cmp
dec
push
push
jmp
jb
dec
xchg
je
jb
into
scas
inc
or
mov
cmpsb
pusha
pop
and
insb
cmpb
loope
dec
sbbb
push
popf
lcall
jp
inc
es
std
int3
sbb
xor
xor
outsb
cld
mov
outsb
jbe
sbb
sub
out
aas
add
mov
and
pushf
push
jnp
test
mov
mov
push
and
rorl
xchg
xchg
jns
lods
arpl
cld
or
popa
pop
repz
sbb
push
fs
sbb
data16
in
sbb
mov
xchg
xchg
aas
rcrb
mov
repnz
pusha
pop
sbb
pop
ja
mov
lcall
xchg
into
cwtl
js
hlt
sbb
push
insb
xor
lds
adc
or
xor
out
mov
orl
popf
and
add
pop
loopne
jnp
test
cmp
cmp
pop
call
into
push
test
mov
pop
or
sbb
jno
inc
jg
pop
mov
sbb
xchg
das
popf
shlb
in
mov
outsl
shlb
fisttpll
mov
mov
cmp
jp
inc
into
popa
test
xor
or
adc
push
fcmovbe
inc
mov
leave
fdivrl
mov
and
sbb
sub
jle
insl
rcrb
xor
ljmp
lock
pop
data16
push
xor
lock
fcoms
lds
ja
sbb
fs
dec
notb
shll
push
cwtl
pop
movsb
and
iret
push
fnstenv
mov
and
cmp
inc
mov
add
fwait
orl
cmpsl
and
xchg
inc
inc
dec
aam
icebp
jb
movsl
adc
mov
and
gs
test
leave
adc
fmuls
mov
add
out
add
xchg
mov
push
push
pop
mov
push
repz
scas
leave
repz
imul
pop
hlt
ss
sub
xor
xchg
add
arpl
and
lods
xor
push
adc
js
mov
xor
std
push
les
xchg
mov
xlat
test
loope
incb
add
or
fdivrs
setle
je
sbb
fistps
or
sahf
fists
mov
push
rcrb
xchg
loop
adc
add
xchg
xchg
adc
movsb
mov
ret
das
iret
call
jmp
mov
imul
lret
movsb
push
pop
into
jg
or
xor
xor
push
outsl
xchg
enter
jmp
cli
mov
xor
pushf
int3
mov
sbb
xchg
inc
adc
push
orl
lcall
xor
daa
pusha
cmp
out
clc
jb
sahf
das
mov
xlat
pop
mov
fidivrs
mov
pop
adc
cmp
mov
loopne
lods
mov
int
sbb
arpl
cmc
jae
cmpb
fisubl
cmc
in
lods
and
mov
int
mov
dec
fiaddl
shrb
test
imul
cld
mov
or
repnz
xchg
ret
inc
aad
mov
lock
fistps
mov
aaa
pushf
jne
sub
add
fbld
sub
push
jge
add
and
xor
repz
mov
imull
movb
cwtl
insl
repnz
jmp
iret
push
mov
cli
xor
pop
or
pop
or
sbb
jae
and
stos
and
mov
lret
movsl
scas
xorl
test
and
pop
out
inc
xlat
lahf
dec
cmp
xchg
fsubrl
in
data16
das
test
or
call
dec
in
inc
mov
sbb
inc
data16
xor
xchg
int
lea
out
std
cmp
xchg
xchg
fs
add
mov
shll
divb
lds
jbe
cmovp
rcll
push
pop
adc
jbe
mov
lods
je
fsubr
arpl
xchg
je
aam
and
mov
cmp
idivl
xchg
shr
cmpl
aaa
icebp
lret
lds
xchg
out
test
rorb
nop
rol
mov
es
dec
fstpt
fmull
jle
int3
lock
stos
lods
push
sub
vandnps
cwtl
mov
add
je
sbb
and
xor
fsubrp
dec
or
rcl
adc
mov
cltd
lcall
sbb
int3
lods
jge
filds
mov
sbb
out
and
cmpsl
in
add
cmpl
aam
addb
rolb
mov
xor
push
or
dec
sub
ja
add
adc
mov
and
adcl
cmp
repz
mov
cltd
mov
loopne
mov
icebp
into
mov
xchg
pop
add
sbb
je
into
cmc
cmp
push
in
and
dec
add
add
add
out
arpl
jle
shrb
adc
gs
jb
adc
in
jno
testl
into
mov
cmp
jp
into
cmp
pop
mov
xchg
xor
test
mov
scas
xchg
rorb
cmp
mov
sub
push
ds
outsb
lock
daa
mov
aam
std
pusha
sub
xlat
call
ja
lret
cmp
in
push
xchg
push
mul
out
mov
daa
push
shlb
sub
jle
dec
dec
mov
and
mov
ret
mov
daa
in
cmc
icebp
aas
add
faddp
jl
daa
jnp
scas
into
xor
pusha
es
mov
out
movsb
dec
out
push
aaa
xchg
out
insb
out
jns
lret
das
lret
xor
mov
or
aam
repnz
adc
aas
mov
sbb
push
rcll
push
scas
or
pop
ds
push
das
dec
std
iret
add
aas
fimull
adc
sbb
xchg
popf
rcrb
lcall
push
shr
clc
inc
clc
sti
icebp
mov
out
aas
jne
subb
and
push
xchg
jecxz
gs
addr16
mov
ret
add
cmp
lea
test
pop
je
bound
jnp
inc
popf
mov
push
and
push
inc
xchg
xor
mov
inc
sahf
pop
mov
add
fisubrs
das
push
fisubs
das
lretw
rcrl
out
sub
hlt
push
push
outsl
js
icebp
cwtl
xchg
dec
clc
sahf
das
jmp
cmp
aad
outsl
push
cld
daa
cmp
push
data16
test
jg
jg
adc
xchg
shlb
es
mov
cmc
inc
jl
jb
test
xor
mov
sbb
cmp
fdivp
fcom
mov
test
pop
les
ljmp
xchg
sbb
inc
sbb
xchg
mov
subb
mov
lret
stc
sub
mov
adc
inc
sub
adc
cltd
sub
cmp
es
ffree
je
mov
mov
push
or
sti
xchg
or
mov
inc
fiaddl
jae
ss
filds
jno
jecxz
sbb
push
inc
pop
pushf
fwait
mov
popa
popf
data16
sbb
mov
dec
or
sub
mov
ret
push
push
dec
pop
xchg
sti
in
test
dec
pop
xor
rcll
orb
adc
enter
cmp
out
pop
loope
sar
fwait
mov
jo
loopne
dec
pop
negl
or
sub
mov
scas
fimuls
push
enter
imul
cmp
cwtl
jecxz
fadds
fsubr
sahf
sarl
call
stc
xchg
inc
xchg
xor
mov
mov
cmp
call
ds
or
repnz
inc
inc
mov
outsb
popl
dec
out
sbb
lds
push
cmp
cmp
push
ja
pop
mov
loope
aas
pop
jl
xor
outsb
pop
mov
gs
dec
xor
daa
jne
imul
push
pop
adc
sbb
out
imul
arpl
mov
dec
pop
mov
cmp
jp
pop
jl
rorb
les
dec
mov
sbb
add
popa
ja
pop
adc
pop
cmp
fiadds
mov
nop
outsb
shll
dec
cmp
mov
push
dec
pop
ficoml
mov
add
shlb
out
ds
int
fcoms
in
scas
cmp
xchg
add
cmp
ss
dec
xor
outsb
and
mov
leave
test
push
clc
lret
jp
pop
dec
jno
std
xor
pop
push
xchg
dec
movsl
push
jle
sarl
stos
iret
mov
aam
push
sti
outsb
dec
mov
mov
insb
xor
sub
dec
xor
clc
inc
inc
lock
sbb
adc
sbb
testb
dec
lret
mov
mov
or
xchg
mov
test
or
mov
adc
les
fwait
das
adc
addr16
shlb
mov
cmp
ss
lahf
loop
inc
imul
pop
or
jge
xchg
sub
cli
sub
popa
cmpsb
or
fwait
lds
dec
xchg
mov
pop
cmp
fwait
pushf
repnz
or
xor
sahf
in
inc
sub
mov
sahf
inc
cs
add
out
jns
mov
lcall
pop
ja
lods
push
mov
movsb
shl
add
icebp
out
pop
xor
std
cwtl
loop
aam
loop
loop
mov
jmp
rep
and
imul
in
popf
dec
xchg
pop
add
and
jmp
or
loopne
or
cltd
icebp
cmp
jno
fdivs
das
jp
aam
mov
jno
lods
in
sub
mov
jne
lcall
jbe
int
pop
push
sarl
loope
push
cmp
jg
call
push
mov
push
xor
shl
mov
fcoms
imul
dec
popf
sub
mov
push
push
es
out
cs
cmp
xor
pop
push
loope
mov
mov
loope
pusha
cmc
cmpsb
jle
sbb
jmp
mov
filds
push
ja
test
std
loopne
push
lods
ja
in
cmp
orl
adc
pop
pop
ds
rcrb
add
mov
and
jbe
add
ds
or
dec
adc
outsb
mov
leave
jg
mov
push
mov
aaa
hlt
inc
or
push
sti
xor
mov
out
pop
int
or
cmp
mov
mov
sbb
scas
and
mov
cmpsb
mov
cmp
pop
mov
stc
push
xchg
cltd
or
out
es
mov
jbe
cld
scas
mov
fwait
pop
nop
jns
clc
loopne
sbb
sbb
mov
jo
and
sbb
in
fsubl
dec
mov
jmp
ds
mov
mov
js
in
dec
in
xchg
cmp
xchg
mov
or
es
add
mov
pop
loope
cmc
pop
aas
adc
jmp
leave
cmp
mov
mov
sti
out
cs
adc
ss
mov
jmp
ficoml
in
mov
leave
xchg
inc
jae
push
in
jle
int
pop
ret
dec
sub
sti
lods
rorl
shl
jg
repz
cmp
add
scas
mov
xor
or
daa
lods
lea
dec
sbb
jmp
dec
test
dec
adc
outsl
faddl
sarb
sub
add
fnstsw
jo
adc
xchg
andb
in
jmp
xor
dec
push
cmp
clc
lret
daa
mov
fdivrl
int
jecxz
xchg
sub
jge
into
shrl
push
sbb
sub
adc
hlt
xchg
imul
mov
inc
cmp
jg
or
loopne
mov
jo
imull
fdiv
xchg
scas
or
xchg
and
pop
xor
imul
jns
aaa
bound
jp
and
xor
xchg
dec
push
rcrb
jbe
mov
sbb
add
out
xlat
hlt
mov
inc
cmp
pop
lcall
scas
pop
cmp
jae
push
push
jno
sbb
cs
stos
stos
rorl
test
mov
mov
sbb
adc
lcall
mov
mov
xchg
sub
mov
xor
arpl
adc
imul
adc
jmp
xor
fwait
add
scas
push
sub
mov
mov
jle
in
mov
mov
outsb
mov
idivb
cli
loopne
pop
mov
test
push
jmp
fucom
not
gs
fs
sbb
addr16
leave
cmp
add
jo
mov
xor
mov
dec
loope
sahf
add
inc
jle
clc
push
add
lock
lcall
mov
push
sbb
mov
mov
xchg
repnz
adcl
add
jp
push
xchg
dec
adc
add
dec
pusha
adcl
movsb
aam
in
fistpll
mov
call
add
push
mov
outsl
sbb
mov
ja
mov
sub
ret
inc
lret
add
xor
add
dec
lret
mov
negb
xchg
push
mov
mov
jle
daa
mov
mov
std
inc
xchg
cmp
jbe
adc
push
cmp
cmpsl
cmp
clc
mov
fisubs
mov
sub
shrb
sub
ret
std
jb
das
test
imul
push
ret
push
inc
pop
mov
jno
cmpb
cmpsl
sbb
sub
mov
cwtl
mov
mov
push
cmp
or
scas
loope
adc
push
adc
sub
mov
xchg
inc
repnz
cli
mov
mov
pop
popl
pop
mov
mov
and
fmuls
mov
insb
and
pushf
dec
mov
lret
mov
icebp
jo,pt
push
cmp
fistl
push
or
shrl
push
test
dec
push
scas
mov
fistps
dec
inc
loope
inc
xchg
es
lahf
out
jp
inc
xor
cwtl
cs
add
movsb
shl
sbbl
cmpsl
or
xor
rdpmc
xor
leave
xchg
inc
test
xchg
adc
mov
jecxz
dec
out
adc
lea
push
mov
rorb
dec
aaa
lods
sub
mov
popa
lret
sbb
sbb
sub
jo
add
sbb
je
ss
sub
xchg
loop
or
pop
and
les
ljmp
pusha
jg
rcrl
mov
or
xor
xchg
mov
jb
int3
je
bound
movl
and
imul
xlat
rclb
imul
aas
repz
jbe
and
pop
mov
iret
push
push
mov
pop
xchg
fwait
inc
das
shlb
mov
or
xchg
sbb
mov
pop
cs
mov
mov
or
outsb
iret
ret
pushf
adc
sbb
pop
addr16
pop
dec
ljmp
add
mov
or
cmpl
push
jbe
inc
adcl
das
fdivrp
adc
andl
mov
sub
xor
cltd
push
dec
inc
cltd
sub
test
fldcw
mov
int3
out
cmp
ljmp
sbb
lret
cmpsl
and
sbb
inc
or
mov
push
push
call
pop
stos
xor
lcall
sbb
ret
rol
in
inc
or
aam
fstl
and
hlt
cmp
int3
sub
adc
adc
imulb
xor
push
mov
loop
xor
mov
aaa
lods
imul
movsb
pop
sub
inc
push
adc
lea
mov
mov
out
mov
push
test
jae
push
ds
fsubrl
xchg
add
ljmp
cmc
jg
in
daa
in
mov
mov
sub
das
lahf
das
daa
stos
sub
stc
push
inc
in
jge
fidivrl
leave
movsl
mov
pop
pop
decl
pop
out
fdivrl
push
cmp
arpl
push
pusha
popa
xor
and
push
jg
inc
fidivrl
pop
bnd
call
mov
mov
and
and
repz
ljmp
andnps
mov
ljmp
aaa
push
push
out
sahf
call
xorb
ret
imul
mov
je
jae
ja
mov
sbb
in
pop
lret
sub
mov
or
adc
pusha
iret
ljmp
pop
inc
add
dec
fiadds
das
movsl
sub
pop
mov
mov
sahf
pop
out
testb
aad
jae
fsubrl
mov
mov
fwait
stos
cmp
cld
xor
test
test
mov
and
stc
loopne
lea
lret
inc
inc
push
les
out
or
sahf
andb
iret
jno
jns
push
popa
push
sahf
and
cmp
push
mov
cld
mov
mov
insl
mov
ret
call
adc
pop
lahf
nop
sbb
popa
cmp
push
jle
adc
cmp
cmpl
mov
lds
cli
and
pop
shrl
cmp
fcoms
cmpsl
sub
lock
jecxz
dec
aaa
stc
mov
repz
pop
pop
push
push
inc
std
xchg
lret
or
and
lea
icebp
popa
movsb
nop
bound
gs
mov
sti
mov
or
jg
push
mov
inc
adc
sub
push
cmpsb
add
jmp
rorb
adc
lock
int3
mov
push
and
mov
mov
adc
loop
scas
pop
inc
dec
adc
fsubrs
push
enter
and
sub
pop
mov
xchg
push
int3
inc
push
inc
push
out
cwtl
push
ja
imul
ja
fnstcw
mov
stos
mov
insl
push
sub
xlat
aaa
or
addr16
fdivrl
popf
cmp
in
movsl
jae
and
int3
dec
and
stos
mov
inc
movsb
out
outsl
jae
outsl
lods
or
lahf
mov
int
or
es
icebp
mov
inc
inc
call
cli
mov
addr16
xor
push
xchg
mov
cwtl
sarl
xchg
xchg
jb
pop
repz
push
jmp
shlb
mov
pop
push
jp
fidivs
add
sbb
into
shlb
repnz
scas
jge
dec
xchg
mov
ds
dec
pop
js
bnd
daa
sbb
in
scas
jae
inc
jg
cmp
rcll
call
pop
or
in
movlps
aad
in
push
daa
andb
test
movsl
fsubp
mov
es
into
nop
mov
sbb
mov
jb
jp
add
jge
test
push
dec
cmp
lock
sarb
cmpsl
xchg
jmp
cs
jg
adc
insb
je
lods
push
cmp
inc
outsl
scas
pop
imul
xchg
jle
add
inc
push
dec
test
out
cli
add
pushf
jae
andb
pop
arpl
dec
dec
or
sarb
jl
mov
pop
mov
in
scas
xor
mov
add
add
and
pop
dec
orb
dec
rcl
jbe
dec
mov
arpl
rorl
addr16
dec
add
fcoms
pop
push
repnz
inc
insl
ret
rorb
lods
lcall
jle
in
addr16
xorb
xor
dec
idivl
pop
fnstcw
mov
mov
or
sbb
pop
push
movsb
mov
inc
sub
lock
push
adc
pop
cltd
xor
and
pop
fists
rcll
adc
scas
into
lea
sbb
mov
mov
lahf
sbb
pop
mov
lret
out
jmp
pop
in
out
sti
mov
loope
out
pop
and
and
aam
cmpsb
dec
jmp
adc
jae
push
enter
adc
mov
das
cmp
mov
xchg
fisubs
mov
adc
mov
and
push
cmpsl
outsb
cltd
fiaddl
fbld
and
lret
in
pop
clc
shrl
mov
adc
aas
sbb
jno
fsubs
test
cmc
pushf
clc
int3
push
jae
lods
sbb
lods
cmp
call
or
pop
mov
sbb
xor
mov
add
dec
pushf
subb
imul
fst
cwtl
stos
fimull
push
shlb
xor
dec
outsl
xchg
or
leave
cmp
addl
adc
imul
rcr
mov
pusha
ds
adc
and
pop
lcall
mov
push
xchg
shrb
push
loop
mov
stos
adc
aad
sbb
aas
xchg
leave
sub
sub
mov
push
xchg
jbe
push
maxps
and
fistl
push
insb
setns
in
repnz
jg
sbb
jp
jo
lret
xor
and
mov
jmp
xchg
jecxz
ror
ljmp
jnp
insl
push
push
dec
rorl
enter
inc
lcall
push
rorb
sbb
aad
fistpl
mov
dec
and
or
dec
cmp
outsl
js
test
inc
movsb
repnz
ljmp
xchg
cltd
sbb
dec
jne
pop
mov
cld
or
ss
int3
mov
lock
mov
jmp
aad
push
mov
sbb
leave
aam
rolb
adc
inc
add
dec
in
add
cmc
cltd
dec
jo
xor
sbb
add
jl
scas
xlat
out
inc
jge
js
leave
mov
cmp
fwait
adcb
inc
sbb
das
cmp
sti
cmpsb
daa
push
sub
fnsave
mov
call
les
ss
aam
sbb
inc
jmp
sti
mov
cmp
sub
pop
das
xor
fadd
insb
aad
aas
and
sbb
shrl
inc
add
aas
dec
movsb
scas
jmp
push
pop
test
mov
jno
pusha
sbb
dec
push
xor
fs
fisubs
fs
jo
mov
push
stos
ljmp
mov
adc
shll
pop
xchg
cli
mov
sbb
arpl
add
stos
pop
push
add
and
loop
sbbl
shlb
mov
mov
jle
lods
add
jecxz
loop
xchg
jge
mov
incl
or
dec
sbb
es
dec
jge
xchg
fiadds
stc
push
fldln2
inc
jp
fs
push
dec
fs
mov
cmpsl
daa
inc
xchg
xchg
add
push
mov
aad
xchg
push
in
adc
push
cmp
xorb
insb
xchg
dec
pop
shrl
test
movsl
xor
fnstsw
je
fimull
pop
xor
xlat
and
push
dec
pop
pop
pop
je
mov
sub
push
or
xchg
pop
adc
sub
cmp
adc
jge
gs
xchg
cmp
out
cltd
sbb
mov
test
pop
in
pushf
jmp
lcall
int3
loope
jbe
aad
pusha
mov
push
add
das
les
dec
cld
xchg
out
sahf
ds
mov
cmp
mov
outsb
insl
inc
inc
sub
mov
xor
xchg
xchg
loop
jmp
idivb
xchg
push
in
mov
inc
cmp
and
cmp
popf
or
push
xchg
adc
fwait
xchg
fdivrl
jne
add
icebp
into
in
sub
jbe
jbe
imul
jb
xchg
xchg
cltd
inc
loopne
pop
mov
jge
xor
cli
pop
loop
jnp
lods
outsl
sub
in
hlt
sbbb
or
sub
xchg
iret
loope
push
xlat
rcrl
orl
ret
imul
sarb
jne
mov
mov
jecxz
es
jecxz
mov
mov
jle
lret
inc
xchg
mov
dec
arpl
xlat
pop
or
dec
mov
clc
aas
sarl
popa
mov
in
jae
sub
sub
mov
jp
and
mov
inc
aas
mov
mov
pop
inc
aas
dec
and
mov
arpl
adc
xor
mov
pop
ret
and
mov
cmc
xor
mov
jecxz
adc
js
add
test
or
push
push
arpl
in
xor
mov
scas
pop
shr
cmpsl
jecxz
fmull
insl
repz
xlat
ds
mov
arpl
sub
jmp
jno
and
stc
jg
pop
pop
xchg
pop
push
je
fs
ds
lock
movzbl
pop
mov
mov
or
mov
std
lret
or
jns
imul
jnp
addr16
es
andl
inc
lret
adc
pop
mov
pop
mov
sti
push
pusha
dec
pop
xchg
pusha
ds
xchg
mov
bnd
mov
adcl
inc
div
incb
out
rcr
aas
sub
fstl
sub
mov
fwait
outsb
adc
les
inc
lret
pop
push
icebp
lds
dec
ljmp
jbe
subl
aad
lock
sbb
leave
jge
jno
push
jb
mov
push
add
rcrl
mov
cmp
push
xchg
jnp
sbb
dec
pop
divl
mov
in
lahf
scas
lods
and
sbb
stos
fdivrl
cmc
sti
inc
mov
aaa
mov
add
pop
add
test
scas
xor
gs
mov
iret
or
push
fs
or
cmc
pusha
mov
ds
test
adc
pop
outsb
out
xlat
cmp
mov
repz
inc
ja
stos
mov
aaa
or
cs
mov
cmpb
dec
sbb
inc
shll
js
xchg
out
sub
pop
in
xor
mov
cmp
dec
mov
xchg
push
rorb
aad
lret
mov
insb
push
push
ss
test
sub
pop
pushf
mov
hlt
loope
jbe
add
xchg
out
fdivr
xchg
fsubrs
cmp
xchg
shlb
push
stos
ficomps
mul
scas
cmp
and
inc
jecxz
cmpsl
lds
mov
ja
gs
lock
xlat
add
arpl
mov
adc
dec
pop
ss
jb
mov
mov
pop
pop
iret
add
pop
nop
cld
adc
push
mov
inc
push
jmp
mov
inc
pop
in
jmp
and
adc
or
test
ss
rorb
and
daa
dec
nop
mov
cmp
std
add
dec
loop
pop
cmpsl
add
out
lds
jg
add
push
shlb
mov
int3
or
mov
mov
push
xorb
add
pop
aaa
je
jle
jle
sbb
cmc
xchg
fnstcw
fwait
xchg
inc
fcomps
imul
dec
mov
cmc
ja
mov
add
lock
fistps
xchg
inc
mov
cwtl
call
xor
push
ror
xchg
mov
scas
or
bound
cmp
pop
out
and
fstl
or
popf
stc
fmull
fimuls
mov
bound
mov
enter
pop
hlt
cmp
jae
inc
dec
adc
and
jno
jns
je
push
cltd
xchg
mov
xor
cmp
push
test
mov
sbb
cmpsb
call
jo
rorl
jp
jg
fidivrs
aad
shl
pusha
xor
mov
lret
jmp
fwait
push
and
mov
shrb
adc
pop
in
in
cmpsb
dec
mov
mov
jbe
xchg
mov
pop
xchg
xchg
sub
stc
mov
andl
js
xchg
xor
mov
lahf
sbb
push
aam
push
pop
jle
and
mov
data16
and
push
cmp
inc
add
mov
insb
jno
fisubrs
adc
mov
insl
jmp
subl
cmp
lea
mov
cmpsb
jp
ss
push
loopne
and
pop
push
je
cmpb
pop
mov
imul
pop
mov
pop
fstpl
inc
scas
outsl
aas
adc
mull
pop
sbb
pop
push
mov
pop
jmp
inc
mov
and
sub
adc
int3
mov
mov
add
mov
imul
gs
add
push
repnz
xchg
ds
mov
or
sub
fs
pop
mov
in
ret
push
iret
push
and
mov
test
jecxz
push
repz
jbe
push
mov
xor
push
xchg
imul
lea
or
rcl
push
mov
test
repz
in
dec
lret
jle
sahf
stc
xchg
sbb
fisubrs
cwtl
call
fnsave
push
adc
mov
push
aaa
adc
jge
and
dec
mov
pop
jne
inc
jge
sahf
lods
into
pop
mov
out
cmp
push
addr16
fcoms
push
mov
xor
cmpsl
jge
mov
inc
das
iret
mov
test
sbb
pushf
loop
std
adc
fsubrl
xor
and
addr16
adc
cltd
add
stc
mov
xchg
cmp
fdivrp
scas
mov
rorl
or
mov
xchg
jno
mov
cmpsl
pop
lahf
mov
aam
mov
xor
inc
cmp
lret
adc
je
shlb
jge
push
xchg
arpl
mov
shlb
mov
or
jo
pusha
jae
repnz
lret
fidivrs
push
jae
sub
lods
fildll
mov
dec
cmp
shrl
aas
cs
mov
push
loop
rcl
lods
mov
and
mov
add
repz
mov
ja
jecxz
mov
pop
in
mov
inc
js
stos
mov
mov
mov
inc
adc
push
push
sbb
push
jge
inc
aad
xor
and
cmp
push
jae
ret
mov
and
call
adc
testb
gs
lock
xchg
in
cmp
lret
rcll
hlt
sbb
and
pop
xchg
les
in
jno
rcrl
sub
push
add
in
jno
fdivrl
mov
and
outsl
inc
jp,pt
std
fsubs
popf
jnp
std
cmc
push
andl
sub
ljmp
test
out
js
out
add
lds
test
cltd
mov
mov
insb
or
test
jle
arpl
dec
repz
dec
or
fildl
loope
and
mov
cwtl
lods
xor
loopne
gs
imull
daa
das
movsl
add
mov
test
adc
cmp
jmp
push
inc
hlt
jns
jg
mov
sbb
mov
push
movsb
aam
adc
push
xchg
rorl
cli
dec
xor
pop
xchg
punpcklwd
or
getsec
lea
aas
call
pop
mov
xchg
xchg
in
push
pop
push
mov
daa
loope
fs
pop
outsb
loopne
or
inc
test
push
fsubl
gs
xor
sbb
dec
xchg
xchg
mov
pop
fucomp
fsubrl
jge
pop
clc
jp
push
sbb
shlb
mov
fwait
arpl
sbb
cltd
xor
data16
mov
inc
dec
adc
mov
data16
add
dec
sub
lahf
lods
data16
jbe
test
and
dec
sub
jecxz
push
pop
push
cmc
fcomip
lret
sbb
mov
out
outsb
repnz
test
lods
adc
shl
mov
arpl
xor
push
jg
xor
mov
je
push
mov
pop
mov
mov
xlat
ret
pop
mov
data16
test
dec
mov
jle
jne
iret
insb
cwtl
pop
cld
addr16
rcll
inc
adc
mov
std
imul
push
lret
pop
xor
pop
movlps
mov
mov
hlt
fldenv
out
mov
adc
push
add
inc
jnp
lods
dec
pushf
out
or
inc
adc
sbb
jb
mov
mov
leave
or
jb
lret
fbstp
dec
ret
dec
pop
hlt
xor
test
mov
stos
mov
icebp
in
mov
mov
push
inc
cwtl
in
cmp
leave
pusha
or
lret
or
iret
ss
mov
jnp
shr
and
jnp
inc
stos
add
out
mov
mov
dec
imul
sub
bound
fisttps
out
xor
mov
sahf
fcoms
fistpl
idiv
xor
fcomi
add
dec
mov
jge
test
into
push
fmuls
jb
clc
sbb
mov
loope
js
sbb
icebp
aaa
mov
cmpsl
and
ret
movsl
addl
mov
fstps
rolb
popa
push
std
adc
push
imul
sub
adc
dec
sub
cmpsl
iret
shrb
sbb
sahf
shl
inc
inc
mov
dec
ss
in
mov
inc
outsl
mov
sub
lock
push
notl
cmp
shrl
in
mov
push
cwtl
lods
cmc
or
xchg
mov
imul
pop
xchg
inc
fildl
and
cld
leave
fdivrs
dec
xchg
and
lods
ficoml
int
sbb
push
add
ljmp
repz
and
pop
scas
push
mov
sti
pop
cmp
mov
out
shlb
add
xchg
or
loop
cmp
inc
mov
data16
jecxz
in
arpl
and
inc
jns
stos
push
or
or
dec
mov
fbld
jb
pop
gs
jae
mov
aad
push
insl
movswl
mov
int3
sbb
sub
and
int3
xor
js
repz
inc
adc
loope
daa
cs
daa
sbb
scas
imul
push
mov
loope
push
shlb
rorb
sub
mov
adc
sub
dec
sub
or
mov
mov
or
in
or
loop
leave
cwtl
cmc
push
mov
int
sub
xchg
aaa
sub
sbb
cmp
push
sti
jge
xchg
dec
insb
and
pop
rclb
mov
xor
adc
imul
cltd
mov
imul
mov
sbb
shl
pop
sub
lret
jmp
scas
loope
fildll
iret
jbe
xchg
rol
mov
push
and
xor
xchg
xchg
in
ds
pop
lea
leave
add
in
mov
or
sbb
sbb
hlt
add
cld
fisttps
push
xchg
adc
stos
xchg
lock
ret
or
insb
lea
dec
fwait
dec
js
std
fwait
xchg
mov
inc
xlat
mov
repz
push
mull
mov
fadds
jo
decb
stos
test
and
push
nop
icebp
pusha
sub
ds
push
lock
cmp
cmp
fs
xchg
data16
xchg
roll
orb
adc
test
test
adc
push
faddl
lods
loopne
jge
sahf
jle
in
xor
and
bound
cmp
cmp
ljmp
add
pop
lahf
shll
pop
push
xchg
dec
lods
shll
gs
xchg
mov
repz
rcr
dec
aas
mov
xor
lock
lcall
sub
or
xlat
jns
outsb
mov
bound
shll
test
das
out
adc
stos
adc
insl
jle
xchg
jmp
mov
push
out
int3
jno
add
rcrb
bound
adc
xlat
cmp
ds
jae
mov
mov
push
bswap
sub
and
jne
xchg
das
jne
cmp
sub
pop
fcomip
out
xlat
arpl
in
xor
das
xor
gs
lcall
xlat
out
inc
aad
popf
ljmp
sbb
loop
pop
div
mov
std
pop
xchg
mov
jne
movb
xchg
scas
xchg
inc
int
mov
adc
aas
inc
fists
cmp
icebp
sbb
stos
pop
cmp
rep
sub
test
dec
movsl
jmp
pop
mov
push
pop
pushf
push
mov
pop
xor
pop
cltd
jne
mov
or
push
adc
lds
adc
adc
sub
mov
loopne
repnz
pop
sbb
sti
out
repnz
aas
loop
js
and
push
movsl
cmp
adc
aam
scas
mov
stos
cltd
mov
fistpll
fcomip
jecxz
jno
ss
loop
mov
mov
lods
mov
out
jg
add
popa
sbb
or
cld
fistpl
xchg
add
push
je
sbb
sbb
and
inc
cmc
rcll
adc
hlt
push
andb
scas
jl
or
mov
xor
dec
insb
or
test
push
rclb
cmp
mov
dec
cli
orb
mov
or
add
push
out
out
fistl
adc
inc
adc
call
mov
popl
inc
xor
push
repz
mov
gs
loope
dec
mov
mov
sub
mov
cmc
dec
jb
lods
pop
fstps
ds
inc
jp
lods
popl
fadds
fstpl
pop
push
push
and
ds
add
push
xchg
sbb
fisubrs
std
seta
jnp
int3
aas
aas
and
xor
das
out
in
or
and
rolw
data16
pop
fbld
aam
rol
xor
add
arpl
dec
shrl
and
pop
xor
fisubrl
push
lret
in
adc
sahf
adc
in
in
mov
mov
cwtl
pusha
inc
adc
dec
shlb
jle
js
cmp
mov
xchg
push
or
stos
leave
mov
xor
leave
cmp
add
sub
dec
mov
sbb
and
cs
lock
mov
xor
mov
mov
push
ret
lds
push
xor
std
loop
js
or
cmpsb
iret
jae
jge
rorl
xchg
pop
sarl
pushf
bound
sahf
into
mov
test
mov
out
orl
mov
mov
nop
mov
fistps
outsl
jl
repnz
in
mov
push
push
xchg
js
push
cli
fbld
or
or
clc
push
mov
and
in
adc
scas
aaa
addr16
hlt
je
add
pop
nop
scas
push
push
push
out
out
adc
or
fldt
and
mov
dec
pusha
push
push
push
fs
out
mov
or
jae
ret
and
pop
pop
xor
add
fnstsw
dec
mov
sub
mov
inc
xchg
and
enter
lods
jmp
jne
jnp
and
jl
into
adc
jl
int
in
mov
rcr
push
rcrb
in
ds
inc
sbb
dec
decb
dec
mov
ja
pop
mov
and
push
ds
pushf
cmc
mov
mov
loopne
mov
lea
cmp
imul
mov
xor
mov
cwtl
mov
mov
mov
cmp
xlat
sti
push
jg
adc
push
std
push
arpl
insb
ljmp
pop
xchg
mov
sbb
sti
mov
insl
mov
lret
jecxz
ret
cld
fs
fisttpll
adc
sbb
xchg
jg
sbb
inc
in
cmpsb
sbb
xor
push
mov
fwait
mov
mov
add
fwait
cld
lahf
test
les
push
push
xor
aas
shll
xchg
jge
dec
mov
add
mov
sub
fists
pop
nop
je
pop
mov
scas
rorl
setg
mov
repz
pop
jbe
repz
fdivrl
add
stc
sbb
dec
pop
mov
out
inc
adc
icebp
dec
or
mov
rolb
pop
add
inc
inc
fninit
adc
rcrb
enter
cmpsl
adc
pop
xchg
or
sbbl
icebp
xchg
clc
push
data16
xor
push
xlat
aas
jb
cli
dec
sbb
cltd
inc
or
adc
fcmovnb
outsb
lcall
add
rclb
jecxz
cmp
xchg
mov
ficoms
aaa
xchg
pop
cld
dec
movsl
test
pop
cmp
push
inc
mov
shl
cmp
adc
ja
xchg
dec
js
stc
push
fs
mov
je
rcll
cmpsb
pop
jno
fimuls
lret
stc
scas
pop
inc
push
xchg
int
adc
cltd
loope
pop
sub
sbb
mov
gs
sbbb
dec
fildll
test
pop
ljmp
push
sbb
jnp
shrb
call
cmp
push
cmpsl
push
push
mov
daa
repnz
mov
mov
cmp
clc
jae
jmp
sahf
call
test
pop
cli
mov
daa
arpl
pause
or
jo
mov
and
push
xchg
stc
nop
in
mov
xor
adc
lods
mov
or
inc
xor
xchg
sbb
jmp
aas
sbb
jne
push
mov
out
mov
pop
inc
pop
inc
aas
xchg
not
mov
mov
xor
rcll
imul
loopne
subl
test
sti
and
cli
sbb
xchg
push
add
pop
sbb
sarb
inc
mov
addr16
sub
jne
pop
cmpsb
xchg
cmc
fists
mov
leave
add
fistl
shrd
jae
pushf
adc
mov
adc
in
pusha
out
mov
push
pop
push
sbb
xchg
out
rcrb
test
nop
test
xor
xchg
mov
das
mov
cmp
imul
and
mov
arpl
add
or
inc
icebp
xchg
stos
movsl
jno
cltd
in
mov
cmpsl
subl
adc
cltd
xlat
stc
orb
jno
inc
pop
adc
push
sbb
jmp
inc
repnz
test
mov
stc
mov
lock
pop
lret
repz
mov
cld
xchg
inc
xchg
cmp
mov
push
loope
popf
inc
cli
jl
out
add
xor
pop
push
xor
insb
sti
xor
or
xlat
ficompl
xchg
imul
pop
inc
pop
xchg
mov
dec
mov
loop
fbstp
push
jge
shrb
sbb
in
push
out
add
xchg
jecxz
pushf
mov
lock
adc
call
mov
jg
inc
roll
shll
daa
sti
test
insb
fnstenv
mov
push
jb
adc
cmp
or
cmp
adc
aaa
popa
inc
in
cmp
mov
les
pushfw
jns
popf
outsb
mov
ret
add
add
mov
sub
fisttpll
fidivrl
xchg
and
or
mov
pop
frstor
jns
adc
les
dec
mov
daa
aaa
popf
mov
cmpl
xor
xchg
bound
pop
pop
push
enter
aad
lret
mov
sub
dec
in
or
xor
ja
xchg
cwtl
mov
out
test
scas
push
rorb
xchg
divl
andl
mov
lret
outsl
adc
mov
mov
cltd
mov
ret
dec
xchg
mov
sbb
das
mov
add
or
movsl
cmpsb
dec
pusha
adc
dec
add
or
ret
in
enter
inc
loopne
lcallw
add
push
inc
xchg
add
rcll
cwtl
mov
imul
scas
je
in
mov
xchg
mov
jl
cmpsb
cmp
out
cld
mov
jbe
ret
dec
lret
pop
imul
adc
lea
mov
push
dec
iret
sbb
xor
mov
jmp
push
mov
inc
cli
xchg
cmp
pop
sub
in
daa
imul
js
sub
sbb
fwait
sti
pop
jne
lods
das
cmc
mov
mov
cmp
sub
test
dec
jl
xchg
lods
test
jno
mov
cmp
ficoml
mov
add
setbe
or
pop
aad
fldt
adc
mov
lahf
aaa
pop
xchg
ret
hlt
mov
jmp
mov
inc
das
fyl2x
push
mov
xchg
mov
in
leave
pop
ss
das
jno
lds
dec
jle
popf
aas
dec
adc
sub
inc
out
xchg
leave
mov
fisubrs
adc
filds
cltd
and
imul
sbb
jb
fisttpll
subl
push
dec
xchg
mov
push
pusha
or
repz
xlat
xlat
imul
mov
xor
sbb
jmp
pop
xor
jmp
xchg
gs
popa
dec
mov
movsl
sub
push
sbb
and
mov
mov
mov
mov
loope
add
and
xor
pop
mov
xchg
outsl
xchg
ret
aam
jg
mov
cmp
lahf
push
adc
std
lret
add
mov
jle
js
mov
sbbl
lret
sbb
jno
inc
dec
dec
push
and
in
fwait
and
xor
idivl
push
ret
adc
xor
fs
pop
mov
bound
sbb
or
out
jne
push
adcl
lock
sbb
xchg
enter
gs
fwait
jbe
cli
dec
cs
in
popa
out
ja
fstpt
push
pushf
mov
stos
ret
icebp
xor
aas
mov
imul
xor
xlat
arpl
cmpsl
jnp
xchg
cmp
add
iret
dec
cli
lahf
lea
aas
push
and
sub
push
ljmp
mov
shl
mov
fcoml
push
xorb
pushf
mov
hlt
inc
mov
add
imul
push
testb
fcoml
inc
cmp
call
adc
dec
mov
arpl
inc
jmp
jbe
dec
xchg
mov
cltd
out
sub
sbb
cltd
shll
xor
rcr
or
leave
fisubrl
xor
dec
fmuls
ljmp
jb
sub
aaa
push
shl
jle
xor
das
je
jl
add
adc
pushf
fnstcw
sbb
or
jnp
mov
pop
cmp
ffree
repnz
dec
clts
sbb
mov
jecxz
push
inc
sbb
scas
sbb
in
test
hlt
mov
mov
mov
mov
inc
push
xor
inc
stc
lods
sbb
lret
fidivrl
adc
movb
inc
cmp
mov
fdivrs
pop
arpl
daa
mov
testb
js
mov
movsb
insl
mov
inc
jno
mov
fisttps
setge
push
pop
movsb
les
rcl
jmp
stc
jg
mov
sbb
jmp
mov
ficoml
loope
cmpsb
rcrb
or
fisubl
out
mov
nop
iret
cmpsb
fisttps
inc
cmp
enter
jl
jecxz
xchg
ds
adc
sub
sub
out
rclb
inc
fdiv
idivb
mov
mov
das
jae
mov
fwait
sahf
mov
pusha
mov
adc
or
insb
xor
or
sbb
icebp
xorb
push
repnz
fadd
sbbl
jmp
clc
lret
mov
cmpsb
xlat
push
mov
loop
jmp
stc
lods
in
sub
pop
push
cmp
pop
nop
or
mov
add
sub
gs
shrl
shl
inc
inc
pop
rcrl
rcrl
mov
into
sahf
aad
pop
pcmpgtb
in
add
push
push
cmpsl
inc
gs
pop
cmp
iret
mov
enter
sti
lods
scas
in
jns
mov
rep
push
add
mov
jge
addb
lahf
stc
insl
cmpsb
mov
and
test
jns
rcl
jl
pop
pop
push
inc
dec
push
nop
pop
lods
movsl
and
sbb
test
clc
adc
pop
std
adc
jp
cld
dec
sbb
mov
fmull
loope
cmp
sub
in
lret
pop
push
inc
jmp
in
lret
sahf
push
dec
popa
repnz
and
ss
xchg
iret
pop
xchg
mov
sbb
cmp
cmpb
inc
xlat
pop
xchg
sahf
loop
xor
inc
int
insb
sub
icebp
sbb
es
add
adc
inc
jne
inc
add
loopne
jae
test
test
fistpl
sbb
out
mov
mov
sbbl
jg
hlt
sahf
addr16
pushf
rcrb
test
ds
cmpsl
jnp
pop
outsb
dec
mov
push
aas
lods
js
inc
test
mov
mov
mov
jmp
in
cld
ss
and
test
xor
sbb
jnp
stc
fwait
ret
add
out
jne
sarb
cli
jns
stos
loop
subl
or
lods
sub
cmc
sbb
data16
jge
mov
and
into
cmp
xchg
or
imul
subl
push
cmp
in
lret
insl
and
cmp
inc
cmp
jge
xor
or
pop
or
ss
mov
imul
decl
bound
mov
xor
mov
loopne
cmp
fs
test
and
popa
dec
fisubrs
mov
imul
mov
leave
mov
insl
xchg
push
mov
sbb
push
mov
repz
add
mov
and
imul
jbe
cmp
das
or
out
loopne
cmc
add
js
mov
test
xchg
push
dec
aad
sub
pop
lds
adc
dec
xor
mov
lds
push
mov
das
jo
sarl
dec
cmp
loop
push
jecxz
lods
push
xor
ret
fs
inc
in
jb
mov
inc
mov
shlb
or
push
mov
jecxz
mov
loopne
sbbb
int3
jno
mov
insb
popa
hlt
mov
jle
xlat
mov
inc
lock
jmp
push
jmp
xchg
sbb
xchg
hlt
xchg
push
pop
adc
orl
cmpb
test
add
xchg
dec
in
sub
mov
ss
repz
sub
cmp
insl
call
lcall
shlb
rcrb
mov
xor
mov
inc
pop
mov
hlt
shl
and
sub
lock
adc
mov
xchg
cmp
imul
xor
xor
and
shrl
pop
lods
sub
and
je
dec
mov
in
fidivrl
lahf
cld
scas
adc
imul
testl
jne
xchg
test
add
call
xchg
movsl
leave
call
aaa
push
stos
xor
fnsave
add
jb
imul
inc
sbb
cli
fidivl
int
pop
xchg
rcl
mov
and
in
pop
inc
lock
bound
ds
push
or
pushf
inc
mov
daa
test
outsl
into
push
push
aas
repz
add
adc
jns
mov
jmp
jle
jecxz
add
in
xchg
xchg
das
jb
hlt
jecxz
lea
test
mov
cmp
pop
dec
rcr
aas
cld
les
inc
xlat
pop
dec
outsb
mov
ret
mov
mov
iret
mov
cmc
ret
or
in
lret
dec
or
pop
jae
jp
cld
fldt
testl
adc
addr16
ds
cmp
inc
sar
sti
rcl
pushf
je
mull
insl
in
push
rcl
mov
add
and
dec
scas
xchg
out
sub
lea
imul
shl
daa
push
xor
cld
sti
repnz
daa
fsubp
std
mov
loope
inc
pop
mov
jmp
push
push
stc
repz
or
out
cs
add
stc
inc
mov
or
push
push
loopne
ss
mov
dec
sbb
pop
or
sbb
sbb
inc
imul
lock
jb
mov
jns
test
inc
call
mov
and
mov
cmpsl
stos
mov
and
out
clc
cmpsl
sbb
push
arpl
stos
cmp
jo
rorl
cli
fwait
jne
sub
push
inc
mov
adc
data16
out
int3
jl
add
mov
bound
xchg
and
and
or
cwtl
mov
hlt
mov
pop
inc
jns
push
push
sarl
lock
mov
sbb
negb
outsb
inc
inc
scas
sub
lods
pop
addb
jo
pop
and
out
stos
addr16
inc
jl
hlt
xchg
xor
pop
cmc
inc
add
or
es
mov
cltd
dec
mov
dec
push
pop
and
fstps
dec
adc
jl
xchg
add
push
repz
pushw
inc
ret
loopne
ret
jp
xchg
push
stos
fidivrl
ret
lods
push
cmp
fnstenv
push
aas
xor
mov
orb
adc
in
mov
gs
sub
mov
fcmovnu
clc
int
xor
icebp
enter
pop
adc
fwait
or
add
jo
and
inc
adc
fcompl
in
icebp
inc
mov
push
cwtl
inc
movsl
jno
inc
mov
ret
cmpsb
adc
popa
jmp
xor
cmp
mov
jecxz
xchg
lcall
mov
push
xchg
mov
or
xor
in
lods
mov
xchg
dec
push
xor
sbb
negl
mov
inc
daa
pop
enter
mov
cmp
cli
cmp
mov
icebp
cmp
push
jne
xchg
mov
pop
cmp
xor
jle
data16
mov
add
adc
out
adc
mov
inc
mov
dec
clc
ss
fistpll
cmp
xor
mov
push
or
hlt
les
insl
aam
shl
int
or
loope
lock
sub
mov
in
mov
push
pop
xor
imul
aas
mov
push
sbbl
jo
js
adc
adc
and
cld
inc
push
das
out
call
mov
loopne
rorb
jg
imul
popf
out
mov
dec
insb
add
ret
ljmp
shlb
inc
insl
daa
sbb
scas
jecxz
call
pushf
xor
dec
stos
inc
es
and
mov
stos
or
clc
lock
enter
in
or
cmp
dec
outsl
and
sbb
push
pop
xchg
inc
mov
imul
cmp
cmpsb
sar
outsl
mov
jo
fisubs
std
mov
inc
movsb
sarb
imul
mov
mov
xchg
insl
mov
daa
push
repnz
push
push
xchg
adcl
mov
imul
loopne
int3
xor
xor
sbbl
push
jae
sub
sbb
gs
das
loope
pushf
movsl
clc
and
lcall
xlat
adc
pop
test
call
dec
cwtl
fnsave
lock
test
inc
jl
nop
out
aaa
enter
addr16
pop
mov
cmpsb
popa
in
mov
int3
fdivrl
xchg
sub
icebp
lret
xchg
and
ror
lcall
cmp
insl
xchg
es
jnp
sbb
push
add
dec
repnz
pop
mov
fs
jp
pushl
jnp
cmpsb
pop
int
fbld
mov
xor
fmull
mov
dec
jae
sub
int3
inc
lret
cmp
subl
jnp
div
adc
lods
mov
cmp
popa
icebp
pop
testb
fs
xchg
mov
shrb
cli
mov
retw
pop
dec
and
je
xchg
cmpsl
jbe
cmp
les
dec
ret
mov
imul
aaa
mov
push
cld
mov
mov
std
add
sbb
mov
add
xorps
mov
dec
mov
sub
mov
mov
add
divb
jnp
dec
inc
mov
jle
sub
loope
icebp
jae
jno
dec
xchg
cmpsl
pop
cmp
test
xor
jmp
push
or
in
adc
imul
push
xchg
cwtl
js
lds
insl
push
addr16
mov
pop
aas
lds
mov
leave
sub
cwtl
jg
insl
cmpsb
fimull
xor
mov
or
inc
out
mov
sbb
fstpt
or
stos
es
sub
insl
inc
or
int3
add
lods
xorl
ret
jp
xor
loopne
sbb
jnp
sbb
and
xor
xchg
daa
inc
test
jae
loopne
cli
add
and
cmpsl
cmove
or
dec
push
jp
cmp
pusha
imul
lahf
ret
pop
mov
scas
lods
fs
mov
clc
pop
imul
loop
gs
call
adc
in
mov
mull
mov
mov
sub
sahf
sahf
pop
push
sti
xlat
nop
out
cli
jb
jno
daa
inc
xor
imul
leave
push
lds
mov
dec
push
mov
popa
lret
mov
into
in
int
loope
mov
push
cmp
push
sbbb
sbbl
mov
sahf
fisttps
repz
dec
test
subl
enter
test
aas
xchg
sbb
pop
mov
popf
inc
push
out
sub
out
push
popa
rcr
adc
jge
test
push
out
dec
dec
fld
movsb
mov
push
mov
pop
std
or
push
lret
movsb
lcall
imull
fcomip
cmp
mov
jg
movsb
jl
fdivs
sbb
and
mov
cmp
xchg
xor
pusha
icebp
ret
or
push
test
cmp
pop
add
frstor
fmull
lret
push
movsw
mov
clc
rcl
inc
and
add
out
mov
arpl
in
stc
andl
push
sbb
mov
push
pushf
jecxz
pop
xchg
test
sti
or
cmp
ret
cmp
insb
pop
repz
xchg
adc
pop
cmpsb
lea
xchg
cli
call
call
testb
push
mov
xchg
dec
loopne
sub
cmpsl
mov
sub
sbb
cli
stos
xchg
add
fprem1
inc
dec
cmpsb
outsb
lock
sub
mov
xchg
into
shrb
xchg
scas
lods
dec
ss
cmp
and
sahf
loopne
mov
test
stc
ja
das
or
aas
sub
cmp
dec
adc
loopne
lods
sbb
lahf
or
stos
pop
mov
sbb
iret
incb
sub
cwtl
cwtl
xchg
lods
movsb
inc
lock
ja
inc
sub
fcomps
adc
cltd
std
mov
push
addr16
mov
add
cmp
pop
test
pop
push
lods
rolb
cmpb
xchg
mov
adc
push
mov
sbb
jnp
and
movsl
or
sbbb
int3
add
mov
out
fstpl
fwait
roll
imul
int3
jecxz
jmp
sub
xor
repnz
xchg
in
inc
outsl
fistl
mov
stos
sarb
nop
xor
cld
and
insl
push
or
lock
imul
xchg
sub
jbe
mov
sbb
inc
jo
pop
push
dec
dec
cmpsl
aam
cmp
out
ja
lods
sub
ficoml
icebp
aas
arpl
rcrb
sub
cltd
adcl
stos
jno
dec
insl
movsl
dec
aam
jae
dec
ja
xchg
xor
negb
jle
repz
xchg
inc
xlat
ja
mov
adc
or
mov
fistl
mov
dec
les
rorl
fs
jno
mov
loopne
mov
movsl
adc
xchg
outsb
and
imul
mov
xor
mov
lods
jecxz
aaa
fldt
sub
mov
rorl
loop
and
push
cli
stos
cltd
push
push
std
int
icebp
cld
fstp
dec
and
imull
jbe
push
inc
sti
into
adc
mov
fnsave
inc
sub
clc
pop
jmp
repnz
push
pop
enter
dec
cmp
in
sbb
aaa
add
ret
mov
inc
cs
jae
popf
stos
movups
or
pop
pop
push
lcall
lret
call
imul
in
repz
mov
mov
cltd
xlat
mov
adc
cmpsl
lea
repz
cltd
ret
xlat
clc
fsubl
daa
jno
in
imul
nop
dec
sbb
pop
das
cmp
mov
pop
pop
dec
lcall
xchg
int
or
sbb
pop
fs
lahf
cmp
nop
pushf
ds
adc
lods
in
pop
xchg
cli
xchg
das
add
dec
les
xchg
push
mov
xchg
and
and
std
lds
push
cld
cmp
int
add
fcmovnb
mov
scas
push
and
cmpsb
push
lock
ret
pop
cmp
push
stc
mov
enter
lret
stos
mov
data16
je
outsl
sbb
xor
jno
push
jle
shll
hlt
popa
xchg
clc
sarl
pop
xchg
stc
sub
push
hlt
pop
sbbl
lds
dec
cmc
fnsave
mov
fidivl
aam
ljmp
cmp
lahf
into
lock
jge
xchg
pop
lds
mov
ret
shl
mov
sub
iret
ljmp
repz
lock
fdivp
add
mov
xor
add
dec
cld
and
dec
add
clc
mov
call
jnp
mov
cwtl
push
adc
insl
enter
icebp
pop
lcall
in
xchg
stc
out
sub
pop
jle
push
ret
cmp
sbb
inc
in
pop
pop
inc
in
adc
and
mov
sbb
sbb
mov
popa
enter
lret
mov
adc
cltd
mov
add
icebp
push
or
loop
loop
roll
xlat
jb
mov
iret
stc
push
gs
jl
mov
aad
ljmp
push
andl
out
dec
mov
jmp
xchg
jno
out
test
cld
cli
cltd
lods
aas
cltd
push
sti
in
inc
adc
stc
in
mov
jne
jmp
insb
mov
notl
mov
je
add
bound
dec
jmp
adc
mov
in
insl
push
fiadds
adc
stos
add
xchg
mulb
pop
cmp
daa
inc
dec
adc
test
outsb
fsubp
outsb
and
in
mov
in
scas
dec
stos
sub
push
mov
imul
xchg
inc
notl
mov
add
loop
adc
fs
push
ds
pop
ltr
xchg
aaa
fiaddl
adc
scas
aad
xor
adc
pop
jg
mov
arpl
data16
push
roll
pop
ret
mov
mov
dec
shrl
cmp
xchg
adc
divb
mov
movsl
jecxz
ljmp
and
repz
jno
adc
sub
jbe
sbb
jp
icebp
ja
inc
pusha
adc
push
xchg
rcrb
cli
insl
movsb
das
push
fwait
call
lods
inc
mov
adc
scas
mov
fisttps
pop
dec
mov
fwait
jle
ss
mov
sbb
mov
out
stos
mov
lock
cmp
add
pushf
sub
lock
jl
push
xchg
pop
mov
jl
inc
xlat
xchg
cmpl
int3
loope
jmp
mov
cmp
ja
pusha
dec
insl
lahf
out
scas
cmpsl
push
je
jp
jl,pt
inc
push
xchg
stc
rcrl
and
pop
xchg
adc
hlt
das
repz
shl
lahf
test
jne
mov
adc
mov
idivb
lods
push
cmpsl
das
jp
dec
mov
inc
ja
insl
imul
stc
add
addr16
in
leave
adc
cmp
hlt
push
rcl
daa
repz
rorb
loope
add
xchg
aam
mov
imull
inc
gs
mov
xor
push
enter
les
pop
lret
lods
jg
fsts
mov
mov
das
mov
fimuls
push
repz
pop
pop
insb
decb
jnp
xchg
add
icebp
jno
scas
mov
inc
scas
je
or
dec
or
imulb
xchg
jl
push
lods
into
test
fsts
mov
in
add
aas
sub
adc
mov
push
shr
cmpb
push
out
jns
bound
push
mov
push
pop
dec
fdivs
nop
adc
cmpsb
insb
cmp
fs
popa
aad
lods
cmp
repnz
fstpt
fbstp
inc
sbbb
sbb
cmp
outsb
push
cmpsl
repz
test
je
lods
or
jmp
cmpl
or
or
es
icebp
sub
inc
clc
fmull
adc
push
fidivrs
rorb
pop
add
inc
ss
aad
xchg
cmp
ds
jmp
mov
ficoms
out
pop
pop
sbb
cmp
insl
dec
insl
mov
jge
test
mov
fistpll
jnp
jbe
xor
inc
test
cli
ret
push
dec
xlat
movsl
loope
push
push
jae
or
mov
imul
jle
mov
rolb
ret
cmp
into
ret
sbb
sub
xchg
jns
fisttpl
js
hlt
sbb
fs
dec
sbbl
lcall
dec
ds
into
jg
aam
shrl
fcomps
rclb
pop
jb
push
inc
es
test
jle
pushf
adc
ret
xchg
xor
sub
mov
push
push
fwait
dec
dec
sub
mov
dec
rolb
mov
lock
add
movlps
test
jns
in
mov
incb
inc
fcmovnbe
xchg
loop
mov
lret
jecxz
inc
lods
and
pop
cs
repnz
xchg
push
inc
fbld
and
inc
sub
mov
cmc
mov
jl
nop
jns
push
mov
lahf
dec
push
push
in
gs
out
test
adc
test
repnz
push
add
jecxz
andl
mov
inc
daa
push
fldl
xor
das
inc
adc
xchg
and
mov
rorb
cmp
hlt
add
cwtl
mov
push
lret
lret
sbbl
push
aam
and
xchg
aaa
lock
sub
push
idivl
mov
mov
dec
adc
inc
cwtl
pop
pop
pop
jns
mov
mov
lret
imul
orb
lret
add
gs
sub
test
mov
push
xor
js
jae
mov
mull
mov
fsubl
sbb
mov
lret
test
xchg
cwtl
pop
xor
iret
push
hlt
mov
in
mov
sbb
add
adc
inc
fidivs
xchg
in
es
inc
int3
mov
ret
dec
ret
pop
xchg
cmp
cmp
lock
repnz
xor
dec
mov
clc
fdivl
xchg
into
leave
push
push
mov
push
pop
jle
cwtl
das
aam
push
inc
or
xchg
addb
or
cmp
push
push
xchg
adc
hlt
jbe
les
inc
fisubl
jecxz
push
xor
fsubl
lds
imul
insb
and
addr16
into
add
cli
sbb
jmp
scas
push
adc
stos
xor
add
jle
inc
arpl
imull
sti
ja
xor
add
cmp
mov
mov
dec
pop
xor
iret
jo
pop
fiadds
adc
lret
or
dec
das
loop
cwtl
ja
in
dec
insl
popf
stos
imul
mov
in
out
mov
dec
mov
jnp
adc
sbb
push
or
sub
mov
test
ret
inc
loope
pop
in
add
les
jae
mov
jmp
scas
test
into
sbb
les
cmpsb
mov
das
cmp
lds
sar
cmpsl
outsl
mov
mov
repz
cmp
mov
mov
cmp
cmp
xchg
inc
idiv
xchg
insl
sub
xchg
mov
insl
mov
push
inc
pusha
repz
stc
gs
pop
dec
inc
nop
mov
fsin
cmc
out
sub
xor
insl
cmc
mov
push
sbb
or
aad
daa
push
call
arpl
shl
jecxz
jge
ret
add
pop
adc
out
fbstp
or
movsl
push
jb
mov
loopne
in
pop
sbb
or
popf
jae
mov
push
shrb
dec
or
push
or
mov
daa
gs
xor
jp
xor
test
mov
cmp
push
rclb
jns
bound
mov
and
out
or
adc
xor
aaa
push
cs
fcoms
mov
les
mov
cs
out
xor
testb
add
fmuls
sbb
add
arpl
adc
add
sbb
pushf
loopne
cwtl
mov
adc
push
cs
push
in
cmp
mov
add
xchg
jg
fnsave
imul
std
xchg
mov
sbb
cmpsb
popf
adc
cmp
jno
sti
loop
ret
pushf
sbb
ficoms
sahf
aad
jmp
adc
adc
or
jl
xchg
cwtl
out
push
jle
int
mov
mov
repz
imul
cmp
pop
push
xor
pop
aaa
xchg
insb
or
jne
movsl
pop
aam
leave
sub
dec
div
fidivrs
inc
call
pop
out
add
jnp
adc
cmp
xor
es
jmp
xor
jl
xor
pusha
and
xor
std
pop
inc
jmp
sbbl
fwait
xchg
mov
mov
inc
fisttpll
mov
test
leave
jo
lret
xchg
jp
jns
loopne
xchg
cli
mov
test
jp
xchg
cmp
add
rcrl
popa
push
stos
fwait
mov
movsl
cs
loopne
add
adc
movb
adc
fildl
jmp
bound
fnstsw
sbb
pop
mov
cltd
outsl
scas
and
sbb
inc
js
mov
mov
fsub
outsb
or
lea
mov
pop
stos
insl
roll
daa
cmp
fimull
je
xlat
pop
push
js
cmovo
mov
sub
std
pop
sbb
bound
outsl
push
pop
mov
mov
cmp
mov
push
arpl
cmp
fldt
out
cli
outsb
push
je
cmpl
push
cmpsb
js
mov
xadd
push
inc
xorb
aas
fadds
mov
or
xor
sub
push
les
sbb
jae
fcomp
iret
mov
iret
in
sbb
hlt
movsb
adc
mov
enter
pop
push
mov
bnd
loopne
incl
std
cmp
into
loope
mov
xor
idiv
flds
inc
push
adc
push
es
shrb
out
movsl
les
shlb
push
mov
int
loope
and
movsl
lods
inc
and
jmp
pop
jmp
inc
int
push
cli
dec
mov
inc
jle
cmp
cmc
mov
test
jbe
mov
xchg
xor
test
aad
loope
cmc
sbb
test
or
push
hlt
test
popa
and
mov
iret
mulb
pop
or
sarb
pop
cltd
aad
je
or
push
imul
or
in
sbb
subl
fcomip
bound
aas
sub
adc
xchg
push
pusha
ret
lahf
or
test
mov
jae
push
pop
and
mov
xchg
dec
clc
daa
xchg
fsts
hlt
cmpsl
and
push
int
cmp
and
sbb
insb
push
sub
dec
fwait
pop
shlb
mov
or
repz
ret
xchg
jp
dec
nop
lods
cmp
cmp
adc
nop
dec
mov
dec
add
jne
daa
sub
ret
xor
xchg
ljmp
in
sbb
loop
imul
mov
ss
std
or
ficomps
jmp
push
movl
cmpsl
jae
jl
icebp
and
adc
mov
rol
iret
cmp
adc
xor
fwait
popa
sbb
in
fdivrl
ss
popa
or
in
xchg
pusha
sbb
pop
fdivp
test
mov
cmp
movsl
jecxz
sbb
and
pop
jl
xchg
cmpsb
xor
stos
pushf
mov
pop
outsb
rorl
sbb
mov
and
xchg
push
imul
add
pop
xor
jns
inc
ffreep
xchg
pusha
movsb
cmpsb
cltd
fxsave
mov
pushf
out
adcl
clc
adc
divb
jmp
xchg
cmp
pusha
mov
inc
fmuls
cwtl
jns
dec
inc
lcall
push
cwtl
and
imul
xchg
cli
add
mov
addr16
outsb
push
mov
scas
mov
push
add
nop
icebp
inc
in
jg
aaa
out
cld
and
out
add
xor
cmpb
stos
fisttpll
jl
in
sub
es
xor
pop
xchg
insl
stc
mov
test
sbb
clc
dec
mov
lods
dec
inc
push
inc
mov
dec
dec
scas
dec
notb
mov
push
std
fwait
dec
or
pushf
or
jo
movsl
js
cmpsl
sub
cmp
adc
and
out
push
sbb
in
cmp
movsb
sub
pop
xchg
popa
push
mov
fnsave
dec
adc
cmpsb
xchg
mov
sbbl
cld
mov
test
scas
dec
std
pushf
push
clc
cmp
icebp
inc
out
sub
popa
shr
repz
xchg
es
mov
mov
loopne
add
ret
in
inc
mov
xchg
popl
mov
mov
cld
ficomps
loope
push
cmp
dec
test
mov
divb
std
inc
lret
inc
sbb
cmc
in
je
into
int
idivb
sub
pop
pusha
mov
mov
push
cld
popa
fisubl
and
or
pop
call
dec
or
int
xor
daa
sub
fldt
push
or
fstl
cmpsl
cmp
xorb
push
dec
out
push
add
pop
or
sahf
in
mov
mov
adc
mov
cltd
pop
sbb
cmp
mov
testb
cmp
inc
fwait
dec
add
sbb
mov
test
ret
arpl
jmp
rcr
fdivl
test
test
sbb
adc
mov
ljmp
sbb
shlb
mov
mov
sub
mov
repnz
inc
addl
outsl
adc
fsts
mov
outsb
inc
sbb
outsl
int3
cmp
sti
adcl
sbb
test
in
and
jg
repz
test
push
mov
inc
or
sub
movsl
inc
aam
jno
out
or
popf
push
lahf
and
and
sbb
jp
in
test
int
rclb
dec
sbb
sahf
push
iret
xchg
xor
fimull
mov
lods
es
in
imul
mov
xor
and
rcrb
orl
sbb
pop
inc
lock
not
test
outsb
jp
cmp
or
lds
cmp
cmpsb
jl
cmp
or
adc
sbb
fs
cmp
cmp
stos
in
jmp
mov
sub
cmpsb
and
int
sahf
ss
sahf
xchg
cmp
xchg
aaa
pop
pushf
cmp
ss
sub
mov
in
jg
repz
rolb
out
sahf
adc
imul
fwait
lret
dec
imul
adc
arpl
pop
out
bnd
subl
int3
mov
in
sub
mov
inc
inc
dec
adc
loope
add
nop
sub
and
iret
or
add
add
dec
sahf
je
mov
or
pop
repz
adc
and
pushf
cmp
jl
jg
ds
imul
jmp
in
out
data16
pop
or
xchg
sahf
sbb
std
scas
sbb
sub
xor
xor
cmc
in
mov
andb
dec
jecxz
repz
mov
ljmp
ret
mov
fstpt
data16
lock
pop
es
mov
mov
btc
jg
dec
jmp
fs
mov
sti
cmp
sub
push
sbb
lds
push
mov
repz
inc
movsb
jae
fildll
adc
fbld
hlt
and
mov
test
inc
jg
cmp
mov
fsub
jge
pop
push
adcl
out
andl
ss
out
ret
inc
test
xor
cmc
fs
das
out
mov
mov
mov
imul
xchg
push
dec
jnp
pushf
shl
adc
mov
add
scas
into
push
scas
jge
in
std
enter
shll
insl
or
dec
fisubrl
sub
push
imul
mov
cmp
cli
jne
nop
aaa
mov
add
lcall
pop
and
ret
push
xchg
aad
aas
clc
test
out
jmp
pop
dec
ret
outsl
inc
mov
dec
ljmp
aad
add
das
push
xchg
inc
pop
cmp
mov
xchg
mull
dec
push
ret
xchg
lods
mov
in
popl
iret
sub
pop
popa
lahf
or
sub
xor
scas
jecxz
ret
fcomps
imul
xchg
mov
int
sbb
sub
jp
dec
stos
sbbl
aam
aas
fbstp
xchg
ret
jg
ficoml
cmp
fdivrl
pop
cmp
mov
sub
test
pop
xchg
shl
addl
rcl
xchg
cltd
jns
jnp
aad
iret
loope
pop
dec
das
imulb
xorb
mov
aad
std
push
testb
movsl
nop
shr
jge
int
cmp
adc
subb
shll
mov
pop
jae
jmp
hlt
push
mov
sahf
int3
and
or
inc
jle
inc
sar
inc
and
jl
es
orb
incb
aas
sar
arpl
sarl
mov
jne
dec
arpl
sub
jp
sbb
fsubrl
outsb
push
in
jp
cmpsb
testl
adc
repz
jmp
cwtl
jnp
shr
movsb
inc
push
outsl
dec
dec
sbb
mov
cs
scas
xchg
inc
imul
mov
fnsave
mov
test
orl
sti
sahf
or
out
inc
mov
out
xor
es
mov
mov
sub
cmp
mov
aam
sbb
lret
jb
and
xchg
ja
sbb
mov
jnp
cs
inc
pop
jle
lret
cltd
rorb
push
mov
or
sti
or
fdivl
jbe
mov
sbb
addr16
fcomp
jnp
aad
inc
addb
push
std
sbb
jg
lret
push
loope
lcall
or
pushf
inc
or
rorl
and
sahf
ret
sub
lds
fcomps
fldlg2
cmpsb
aad
divl
lahf
pop
ret
das
cmpsb
cmp
jmp
movsb
sbb
lret
mov
xor
sarb
or
fsubl
mov
push
jbe
mov
push
stos
add
test
mov
cmp
andl
fdivp
popa
addr16
dec
inc
popa
cmp
inc
xchg
icebp
adc
call
scas
movsl
fcmovnbe
fldcw
sub
pop
hlt
mov
addr16
add
mov
sub
or
jns
sbb
xchg
cld
lahf
arpl
stc
ja
rorl
mov
xor
clc
inc
insl
scas
mov
mov
lea
pop
jg
inc
jl
sbb
jno
pop
pop
incb
mov
mov
adc
dec
imul
imul
adcl
cmc
xorb
pop
out
xchg
rcl
daa
cmc
cs
das
daa
dec
xchg
pop
mov
jge
sbb
mov
xor
cwtl
jne
fcmovnb
pushf
jnp
and
out
dec
jl
pop
sbb
mov
push
or
mov
xchg
jbe
sub
mov
int3
push
ss
inc
mov
jmp
js
mov
inc
jbe
adc
push
cld
jmp
cmpsb
insb
ss
orb
inc
push
lahf
xchg
fmulp
add
cmp
jb
cld
aaa
sub
shr
push
pop
inc
and
jns
and
bound
es
nop
inc
push
sti
jg
cmp
mov
mov
ds
xlat
or
push
pop
lods
jl
sub
jns
jno
adc
js
sahf
aad
pop
test
ss
mov
aaa
sub
sbb
ret
out
shrb
dec
or
js
xchg
jb
adc
fidivl
xor
mov
push
mov
jg
push
inc
flds
rcrb
out
sahf
push
ljmp
xchg
fnstenv
mov
cmp
mov
pop
loopne
add
loope
jb
cmpsl
adc
jl
int3
add
mov
stc
mov
repnz
mov
or
sub
pop
cld
jge
fstpl
dec
push
pusha
sub
inc
adc
sbb
hlt
adc
aam
fbld
popf
push
shr
std
jae
movsl
jmp
sbb
enter
adc
aad
or
ss
pop
cmp
mov
fcom
mov
aad
shrb
and
push
mov
mov
insl
dec
xchg
movb
jp
cmp
mov
or
adc
dec
leave
fwait
jmp
jns
xor
mov
and
scas
popa
push
jmp
pop
test
std
fmull
lahf
out
pop
add
dec
mov
stos
popf
inc
fiaddl
cltd
adc
daa
outsl
sub
mov
push
loop
call
cmp
int
and
fdivp
lea
mov
or
insb
rcll
mov
call
push
clc
call
mov
jne
push
xchg
inc
sub
aaa
or
mov
stc
out
push
push
enter
lret
pusha
mov
lahf
xchg
xor
mov
sub
push
pop
popa
pop
pop
pop
ds
inc
jno
mov
sar
cmp
xchg
pop
sbb
test
rcll
mov
imul
jns
ds
nop
into
loopne
scas
mov
xlat
pop
pop
mov
and
out
in
in
idivb
adc
cmpsb
dec
clc
xchg
stos
or
sbb
iret
jmp
lahf
jns
int
cmp
jp
outsl
sub
push
adc
std
loop
or
mov
pop
loop,pt
lea
in
addb
and
dec
outsb
inc
sbb
add
popf
xchg
repz
addb
push
or
gs
fistps
ss
fcomps
pop
sub
pop
repz
inc
stos
popa
out
dec
sub
mov
ret
enter
rcrl
das
xorb
mov
int3
rclb
ljmp
mov
mov
movsl
fimuls
jecxz
lcall
mov
out
or
out
sub
and
jge
fistpl
movsl
adc
jg
pusha
jae
cmp
outsl
inc
and
mov
sub
or
jle
rcrb
add
jnp
insb
xchg
fldl
inc
sahf
dec
add
sub
lahf
pusha
fldl
dec
loope
aad
scas
clc
dec
dec
movsb
inc
fdivs
cmp
nop
inc
adcb
sbb
lret
xor
fstpt
out
lods
jle
repnz
aad
mov
mov
lret
jb
repz
mov
push
sub
pop
js
rorb
mov
divb
loopne
fs
test
jae
lret
data16
push
inc
sub
push
add
idivb
sub
jecxz
ret
out
cmc
out
mov
call
xlat
cmp
lret
add
aaa
fmuls
mov
and
andb
lret
cmp
cmpsb
in
xchg
mov
xchg
movsl
sbbb
or
scas
adc
ret
pop
mov
sbb
pop
imul
mov
in
es
adc
mov
or
cli
fidivs
stc
inc
mov
ret
xchg
aas
cmc
stos
test
in
mov
divl
int
or
pop
push
mov
jecxz
cmp
pop
and
mov
out
iret
jmp
push
loope
mov
xor
in
xchg
push
cs
jb
inc
xchg
fldl
movsb
test
cwtl
jl
sbbl
push
push
sbb
xor
iret
ret
ja
std
popf
outsl
mov
into
lea
mov
ret
inc
mov
or
and
je
jp
mov
aad
dec
or
xor
xor
pop
add
xchg
lock
call
inc
repz
mov
push
dec
fimuls
testl
and
adc
push
lret
test
and
adc
xchg
cmp
mov
adc
jne
aas
xor
push
jp
data16
decb
pop
fildll
xchg
pop
pop
xchg
dec
mov
repnz
cmp
push
das
pushf
mov
jb
sub
pop
jge
sbb
into
mov
roll
cs
adcl
into
xchg
scas
out
in
movb
and
xor
xor
fadds
je
stos
aam
cmp
gs
cmp
mov
dec
and
push
fstpt
repz
daa
aas
or
xor
cmpsb
orl
mov
popa
ja
cs
ds
adc
push
push
fldt
loop
movsb
sbb
inc
sub
or
cltd
mov
stos
fistpl
or
stc
nop
and
xlat
push
mov
mov
lret
fwait
dec
or
lock
mov
cmc
xor
insl
cmp
sbb
lea
push
femms
push
xchg
into
fs
add
int
pusha
cmpsb
inc
test
add
mov
and
push
fcomps
sbb
lret
popf
pop
jmp
inc
test
adcl
pop
mov
and
sub
inc
jb
dec
mov
and
xor
xchg
xor
jne
imul
lods
sub
loop
and
std
out
scas
push
inc
outsl
push
push
cmp
cmp
cld
out
push
rolb
test
sub
xchg
lock
shlb
arpl
in
dec
sbb
notl
add
inc
out
mov
cmp
mov
aad
xorps
pop
cmpsb
cmp
cmpb
lds
push
jne
xchg
dec
and
and
mov
loop
insb
jg
lahf
or
test
push
pop
inc
into
gs
jle
nop
mov
xor
mov
out
sub
test
add
in
lock
fcmovb
xchg
popa
adc
test
outsl
ds
lods
sbb
ljmp
xorl
xchg
inc
popf
xor
ret
xor
dec
into
sti
call
mov
jns
in
push
and
fs
repz
cmpl
test
es
imul
repnz
sbb
inc
mov
xor
adc
insl
andl
fdivrl
sbbl
daa
mov
sub
push
rcll
add
push
mov
popa
xchg
mov
ficoml
push
sub
negl
or
pop
push
scas
dec
hlt
addb
and
lret
sarb
jne
ret
es
mov
mov
loopne
mov
push
jmp
and
sbb
loope
mov
sbb
faddl
push
aam
mov
ss
inc
rcrl
xor
sbb
bound
iret
lock
xor
or
scas
mov
jnp
out
lock
push
inc
lods
andb
inc
mov
int3
in
or
xchg
xlat
in
sbb
or
mov
cmp
adc
mov
lds
mulps
daa
mov
orl
cwtl
push
sbb
rcll
imul
xchg
inc
mov
cwtl
dec
sub
sbb
cmpsl
mov
inc
pop
jbe
xchg
mov
fsts
or
les
cmp
mov
or
push
test
jb
mov
push
mov
es
jae
sbb
inc
dec
rcr
dec
fcompl
jno
imul
idivb
lret
push
pop
leave
push
mov
stc
push
int
fiadds
movsl
push
shrl
inc
repnz
sbb
pop
mov
and
imul
jb
add
jbe
sub
pop
jne
jmp
and
mov
fidivrs
inc
and
mov
jb
cmp
cwtl
sbb
incl
sub
js
outsl
imul
and
lahf
mov
dec
rorb
lds
xor
cmp
imul
cmp
mul
dec
shrb
mov
and
pop
add
ret
lcall
lret
dec
outsl
fmull
or
and
add
maxps
sti
mov
xor
int3
or
inc
push
cmp
cmpsb
insb
int
enter
jnp
inc
or
jle
ret
or
stc
movsb
sub
bound
mov
cmp
xlat
jecxz
std
push
outsb
push
arpl
ficoml
pop
mov
mov
cmpsb
inc
inc
stc
mov
faddl
jne
or
push
dec
cli
inc
sub
lret
jb
shlb
cmp
iret
hlt
pop
inc
xor
xchg
cmpsl
push
ficompl
scas
mov
loope
clc
dec
call
mov
pusha
inc
xor
call
sub
pop
faddl
jg
dec
mov
lods
add
push
imul
adc
lods
cmpl
je
mov
icebp
rcrl
xchg
mov
and
xchg
fisubrs
push
fiaddl
leave
outsb
movsb
scas
push
push
cmp
les
or
jle
stos
cli
or
jb
clc
ss
adcl
inc
lret
or
push
and
movsl
or
leave
lahf
xchg
in
aam
loope
in
js,pn
fstpt
push
lods
cmpsb
pop
rcll
push
xchg
add
cmp
mov
xchg
mov
dec
inc
or
mov
inc
pop
mov
xchg
dec
cld
rcrl
mov
mov
add
jmp
pop
pop
popf
adc
loop
sbb
fisubrl
pop
inc
pop
cs
sbb
cmp
dec
ficomps
add
mov
xchg
cwtl
inc
lods
insb
xlat
adc
mov
mov
pop
test
mov
pop
pop
mulb
test
or
push
xchg
xchg
aam
adc
or
push
test
cmp
insb
mov
addr16
addr16
and
cmpsb
push
mov
xchg
mov
pop
cmp
sbb
test
or
lea
xor
mov
outsb
stos
mov
test
or
jl
sbb
into
push
mov
cmpl
fadds
xor
dec
lret
inc
test
mov
int3
repnz
adc
pop
into
pop
stos
outsl
js
jnp
je
insb
pop
mov
push
loopne
sbb
gs
movsl
adc
popa
roll
les
faddp
sub
cmpb
inc
dec
mov
int
push
and
imull
ljmp
mov
out
ds
sbb
jmp
std
cmpsl
arpl
mov
push
xchg
sti
clc
mov
mov
jl
dec
fiaddl
push
outsb
push
out
xor
into
aad
sti
sub
mov
jae
push
test
inc
aas
je
popa
int
outsb
jge
push
imul
addr16
js
mov
cmp
jg
mov
or
enter
test
jmp
mov
addr16
mov
mov
adc
mov
cmpsb
movsb
fistps
mov
fcomps
loope
lock
xchg
lret
mov
adc
mov
push
or
lahf
push
lcall
mov
insl
xchg
push
js
mov
inc
inc
or
jmp
movsb
or
add
cltd
inc
popf
je
mov
inc
pop
cmp
add
mov
stos
push
cs
ret
jnp
int
fstpl
xchg
inc
jp
popa
cmp
mov
fstpl
xor
pop
lret
jns
cmp
cmpsl
lock
js
xchg
nop
jbe
je
pushf
ljmp
js
mov
or
daa
mov
sub
jmp
xor
das
outsb
mov
aas
push
sbb
jl
in
push
lret
mov
daa
test
pop
xor
movsl
icebp
decl
xchg
xchg
daa
je
loopne
out
lods
cmp
sbb
addl
sbb
dec
xorl
enter
bnd
les
int
daa
clc
hlt
stc
lds
imul
xchg
mov
sub
data16
repz
xchg
pop
jb
js
inc
lret
and
aam
xchg
lods
mov
ds
cld
jne
in
ja
jo
in
adc
arpl
mov
outsl
out
and
add
mov
xor
dec
pop
aad
nop
popa
stc
dec
add
lcall
dec
inc
inc
jne
leave
xchg
mov
scas
push
daa
jo
mov
loopne
xchg
aad
mov
test
dec
es
jb
out
pop
and
xor
inc
stos
in
ds
scas
sti
mov
xchg
test
mov
outsl
cmp
ljmp
jge
inc
xchg
loop
mov
lret
aaa
js
leave
icebp
sub
ret
cwtl
out
scas
aaa
cli
push
jp
mov
repnz
adc
adc
out
stc
aas
enter
dec
lahf
sbb
sub
fstpl
stos
add
jae
pop
mov
mov
jae
lea
orl
enter
lahf
push
jns
stc
sub
pop
roll
push
mov
xchg
in
dec
fisubrs
les
jg
sub
hlt
sub
cmp
adc
xchg
lret
lods
jge
mov
or
sbb
push
test
shlb
mulb
iret
int
in
loope
das
stc
mov
adc
jne
movsb
sub
dec
jge
cmp
push
xor
fistps
xlat
sahf
pop
vmovaps
mov
shll
sbb
pop
jns
xlat
enter
push
xchg
cli
addr16
mov
fs
in
xor
int
into
pop
je
pop
scas
das
and
xchg
push
xrelease
adc
mov
dec
dec
addl
test
addr16
ljmp
dec
stos
pop
sahf
mov
outsb
pop
adcl
lods
xor
xor
push
into
repnz
scas
mov
mov
cmp
pop
ret
mov
daa
mov
xorb
ljmp
scas
pop
fimuls
or
mov
dec
dec
and
push
inc
or
inc
sbb
repnz
jp
sub
aam
fcomp
mov
and
cwtl
pop
add
sub
mov
xchg
ss
stos
and
in
mov
ja
jge
in
adcb
cmp
lods
add
movsb
repnz
pop
jle
lds
bound
fidivl
mov
insl
aas
scas
xchg
bound
pushf
jbe
nop
ds
mov
ret
add
ljmp
xlat
cwtl
sub
lahf
hlt
jb
adc
dec
cmp
add
incb
lcall
mov
inc
out
mov
push
add
in
loop
cmpsl
es
jnp
and
fstpl
ficoml
xchg
dec
adc
imul
icebp
fwait
cmp
lret
adc
mov
xlat
pop
fldenv
jg
jp
sub
xlat
inc
andb
data16
and
and
sbb
shr
sub
mov
lahf
sub
inc
es
rol
addl
or
sti
pop
fdivrs
and
xchg
gs
push
and
inc
aam
sbb
add
mov
rorb
dec
xor
xor
lahf
fwait
sub
add
mov
mov
sbb
int
aas
leave
push
fwait
das
jne
xchg
adc
sub
mov
lret
jbe
sub
adc
mov
xor
and
pop
dec
mov
add
fdivrs
sub
dec
test
sub
daa
cmpl
cltd
lret
lds
xchg
jnp
add
int3
mov
stos
adc
pop
mov
adc
sbb
aam
lock
sbb
push
push
add
orl
jp
dec
lcall
shl
ret
mov
push
mov
and
mov
jns
jl
mov
in
aaa
push
into
lods
fldt
shll
add
jno
add
out
dec
adc
mov
ror
in
inc
xor
int3
fiadds
loop
add
pop
int3
inc
out
stos
jg
inc
ds
mov
mov
sbb
lret
in
push
or
inc
xor
pop
or
push
xor
jge
mov
ss
push
lds
push
dec
call
inc
ret
ret
cmp
lret
jle
cmpsb
shll
and
add
ja
pop
in
lret
pop
ljmp
sub
imul
cmp
ja
or
sbb
repz
jecxz
mov
sbb
out
and
dec
test
push
xchg
cmp
inc
out
rorb
pop
in
jecxz
lods
nop
dec
jl
xchg
clc
xor
jo
mov
aad
cwtl
pop
add
pop
jge
fbld
pop
cmp
aas
scas
imul
je
jb
mov
push
dec
gs
push
ret
test
mov
mov
mov
push
jecxz
jecxz
jno
inc
sub
push
enter
sbb
call
mov
mov
pop
push
mov
xchg
gs
mov
dec
pop
lret
pop
mov
repz
imulb
loop
xchg
jne
int
nop
push
lahf
dec
and
pusha
sub
lds
leave
and
sub
clc
movsb
and
out
sti
pop
movsl
decl
sub
sbb
xchg
xchg
add
cmpb
push
mov
pop
std
popa
push
in
xchg
jmp
add
pop
bound
sbb
pop
lret
jmp
imul
mov
sub
push
mov
xlat
leave
mov
lahf
mov
sub
push
pushf
into
mov
sub
inc
lds
imul
shlb
mov
clc
sub
xchg
xchg
and
ret
repz
and
add
outsl
and
imul
sub
inc
mov
mov
pop
pop
xor
hlt
mov
popa
jg
xchg
and
fistpl
aad
ret
vrsqrtps
adc
in
scas
das
jl
inc
sub
add
fidivs
aaa
pop
stc
and
pop
mov
andl
or
mov
and
mov
or
add
xor
sub
andl
jle
les
mov
fisttps
inc
cwtl
push
inc
sbb
jle
inc
insl
addb
cmp
pop
cwtl
dec
inc
cmp
pusha
rclb
jo
rolb
lods
and
and
popf
jl
dec
jle
cmp
push
mov
mov
push
mov
sbb
mov
xor
adc
mov
push
in
sbb
jecxz
adc
adc
push
mov
xchg
ret
mov
int
lods
fdivrl
mov
mov
xor
sub
jne
cmpsl
pusha
dec
lods
add
pusha
sbb
cmp
cmp
ds
aam
xor
ljmp
add
pop
xor
dec
jl
push
enter
movsl
adc
inc
fs
mov
adcb
push
and
xor
fs
inc
push
pop
lret
adcb
loopne
in
inc
xchg
aam
cmpsb
call
es
mov
sbb
sbb
lock
pop
out
lcall
pop
fildl
movsb
sbbl
mov
iret
mov
mov
sbb
sbb
cmc
or
rclb
push
mov
sbb
or
in
in
je
cmpsb
xchg
and
mov
enter
dec
push
shl
mov
fists
daa
ret
insb
mov
imul
or
push
orl
push
pop
dec
sub
ficomps
jb
push
jl
cmp
hlt
sbb
or
adc
sbb
fmul
int
mov
xchg
jle
stc
or
pop
xor
mov
sub
jno
push
push
mov
lds
sbb
adc
sub
iret
pop
sub
or
xchg
test
inc
mov
rorb
sub
cmpsb
mov
testb
aas
loope
mov
and
mov
dec
fstl
pop
rcrl
int3
ficomps
inc
mov
rdmsr
fstps
or
sarb
int3
mov
sbb
cmp
lahf
mov
push
cmpsb
cmp
push
mov
pop
into
xlat
push
or
lcall
bnd
and
xchg
xor
cmp
mov
jne
push
pop
icebp
cmpl
lods
out
aaa
inc
out
aas
addr16
test
fmull
jno
data16
lcall
mov
sbb
aam
inc
jl
sti
push
lcall
nop
sbb
mov
jg
lods
fwait
cwtl
dec
pop
or
mov
pextrw
jle
faddp
xor
pop
push
lea
push
and
data16
sub
into
inc
inc
outsb
sub
pop
inc
push
mov
scas
dec
mov
subb
mov
push
and
bound
jge
das
rorb
out
sarl
jns
mov
stos
mov
sub
adc
inc
xchg
and
hlt
int3
mov
push
shrl
movsl
ss
jg
push
and
test
sbb
xchg
xor
cmp
int3
dec
pop
sub
jge
jle
std
push
clc
xchg
aas
pop
insb
cld
rclb
or
stos
push
mov
test
insl
popa
cmpsl
cli
sahf
divb
aas
out
popa
jmp
shl
cmc
cld
mov
adc
adc
test
inc
aaa
loop
int3
into
mov
and
xchg
loop
dec
popa
jns
cmc
es
test
sbb
cmp
xchg
xor
lds
cmp
or
mov
xchg
cmpl
xor
dec
arpl
dec
mov
add
cmc
out
xor
subb
scas
cmpsl
fildll
imul
push
dec
jns
dec
xchg
adc
cmpsb
mov
hlt
orl
pop
gs
xlat
iret
dec
popa
jge
mov
out
mov
popf
call
movsl
mov
imul
shl
xchg
je
xchg
cwtl
inc
xchg
in
push
movsl
into
stos
aad
daa
xchg
mov
mov
push
ja
xchg
in
inc
xchg
xorb
and
xor
rorb
add
andb
inc
cmpb
mov
mov
cmp
ficompl
test
dec
fadds
imul
sub
push
adc
dec
sahf
ljmp
add
jle
mov
sbb
pop
sbb
mov
push
stos
pop
fisubs
xchg
pop
push
push
arpl
push
pop
fists
stos
jne
jno
or
aad
bsr
push
js
fadd
push
mov
roll
mov
sti
icebp
ret
mov
bound
sbb
ss
pop
daa
xchg
xchg
sub
mov
xchg
jmp
jl
jne
inc
pop
mov
cld
decb
daa
jmp
sahf
adc
inc
lods
fcmove
inc
test
mov
dec
sbb
xchg
mov
ljmp
inc
out
pop
lcall
inc
push
insl
jnp
sbbl
sub
jg
lds
xchg
add
sub
fstp
cwtl
inc
das
mov
xlat
cmp
int3
repnz
xor
je
jb
pop
test
scas
jecxz
loop
test
rcll
xchg
insb
inc
test
push
dec
fistps
movsb
lods
imul
inc
rorb
js
lret
loop
pop
std
inc
pop
scas
and
add
dec
ret
scas
jnp
mov
sub
fwait
sub
mov
ss
inc
loop
int3
mov
repnz
mov
xchg
leave
aas
in
xchg
mov
xlat
shlb
mov
jp
add
std
testl
mov
add
mov
mov
dec
xor
xor
cmp
cli
cmp
xchg
jp
out
aam
loopne
jmp
mov
xchg
push
and
decl
into
push
push
test
or
or
add
pop
mov
or
mov
rol
ljmp
imul
sbb
cwtl
call
test
repnz
sbb
and
adc
and
in
push
test
mov
sbb
ret
and
in
das
dec
dec
test
push
dec
dec
xchg
inc
pop
jmp
lret
fsubrp
dec
shlb
jno
repz
test
fidivrl
and
xchg
add
xlat
dec
out
out
cs
movsb
cli
jecxz
mov
iret
adc
mov
scas
and
leave
sbb
iret
dec
and
pushf
call
pusha
loope
jbe
iret
ret
mov
add
add
aam
adc
lods
movsl
adc
ja,pt
pop
popa
pop
xor
push
out
sbb
divl
dec
mov
cwtl
inc
popa
cltd
lods
testl
mov
loop
and
cmpl
inc
adc
jbe
pop
mov
mov
lock
int3
test
xchg
je
dec
mov
xchg
jae
js
shll
lcall
loope
dec
scas
sbbl
jbe
cmp
xor
push
adc
sarb
fsts
mov
loope
mov
fisttpl
cld
push
push
and
mov
add
loopne
mov
xchg
shl
es
mov
popf
ret
and
dec
xor
inc
fstpt
jge
std
out
cmp
dec
lods
ret
or
cld
sti
test
sub
xchg
rep
or
sbb
dec
cld
inc
jl
bound
iret
pop
sbb
push
jmp
std
cmc
jge
ret
mov
xchg
daa
push
out
mov
fsubrl
pop
dec
xchg
mov
or
cltd
fisubrs
outsb
lds
fsubrl
push
cld
or
sbb
xchg
mov
test
jns
js
cmpsb
add
fsubrs
mov
pop
pop
ds
mov
jne
push
jp
jmp
and
mov
mov
add
arpl
pusha
out
icebp
lcall
xchg
fcomps
jnp
xor
aas
clc
inc
pop
ret
loope
xor
or
test
xor
mov
arpl
je
cmp
repnz
and
in
sub
push
cs
and
jge
dec
jg
movsb
add
adc
mov
sub
nop
pop
or
mov
xchg
xchg
fstps
das
nop
arpl
sbb
dec
test
xor
and
pop
scas
inc
pop
jno
push
test
jo
fsubrs
inc
test
or
icebp
cmp
pop
cmpsb
jns
fidivs
inc
push
adc
sbb
inc
sbb
adc
xchg
mov
or
mov
pop
inc
xor
ds
pop
xchg
add
mov
fwait
cmp
ja
sub
push
sub
mov
mov
movsb
jno
xchg
adc
or
fbld
lods
rcll
imul
push
jno
enter
pop
pop
cmp
fistl
mov
push
pop
fadds
roll
fcoml
inc
outsl
popf
cmovnp
dec
jo
push
mov
add
cmp
push
lahf
push
shll
int
fbstp
mov
mov
movsl
cltd
push
dec
push
stc
jne
mov
outsb
xor
ja
mov
push
push
mov
jae
leave
or
fisubrs
mov
adc
sub
cwtl
mov
inc
rorb
aad
mov
xchg
sbb
xchg
xchg
daa
pop
mov
cmpsb
xor
cmp
mov
mov
mov
mov
sbb
dec
mov
xchg
jge
dec
sti
push
aaa
dec
mov
aas
sbb
inc
push
shr
int3
mov
clc
outsl
cmpb
dec
pusha
mov
dec
mov
call
push
adc
adc
in
test
push
sti
jae
stos
mov
mov
pop
xchg
popa
mov
jbe
mov
daa
pop
dec
dec
jno
sbb
dec
nop
mov
jne
inc
xchg
mov
pop
lahf
mov
inc
mov
mov
mov
mov
aaa
imul
pusha
adcb
bound
mov
movsl
jp
and
inc
or
dec
xor
add
in
test
adc
sbb
adcb
add
cmp
loop
jp
int3
pop
cs
mov
mov
cli
shr
aam
fisubrs
sarb
add
insb
scas
cltd
add
std
push
outsl
sub
roll
in
enter
pop
pop
cmpsb
in
pop
mov
scas
sub
lret
jbe
stos
add
je
cld
ret
icebp
test
inc
pop
movsl
xchg
rcl
pop
cld
or
or
adc
cltd
mov
adc
test
inc
out
adcl
add
jg
popf
pop
arpl
and
xchg
jne
xchg
stos
mov
and
or
cltd
fdivrl
cmp
add
sahf
sbb
shll
sbb
or
popf
cmp
jnp
jno
clc
sbb
imul
fwait
iret
jne
sub
ds
push
mov
jp
fwait
pop
pusha
inc
aas
daa
adc
xor
bound
stos
sub
mov
cmp
jecxz
jae
inc
pop
insb
push
jb
adc
jecxz
and
xchg
int
loop
lock
ljmp
mov
dec
imul
or
xor
inc
nop
mov
out
push
in
imul
test
popf
sub
push
lods
inc
add
ljmp
pop
mul
loopne
jecxz
mov
scas
pop
sarl
ret
outsb
lret
jo
sti
mov
mov
sbb
ja
push
sub
and
mov
sub
ja
and
popf
dec
fdivl
outsl
repz
test
push
enter
fstl
add
sbb
test
push
lea
and
stc
cli
ret
fstpt
jo
lret
sbb
mov
cltd
out
pop
repz
out
out
dec
mov
out
stos
mov
sbb
out
stos
jp
nop
mov
push
aam
mov
scas
cmp
add
mov
jbe
iret
sbb
xchg
push
and
inc
xchg
stc
aas
and
dec
mov
imul
push
inc
pop
into
jg
fisubrs
inc
or
xor
insb
mov
fs
adc
mov
pop
add
cmp
fidivl
outsl
cmp
out
cmp
aas
inc
je
pushf
jp
and
mov
ja
sbb
xchg
lds
fidivrs
cmc
cwtl
icebp
dec
fabs
dec
rcll
jns
mov
lret
adc
sbbl
pop
es
out
addb
xchg
push
or
in
mov
popa
mov
push
mov
loopne
aam
mov
adc
adc
dec
sbb
push
sub
mov
inc
in
sbb
xor
leave
xor
lods
inc
fs
repnz
jmp
mov
gs
xor
push
pop
sbb
cmc
or
push
testl
daa
mov
sbb
sbb
and
js
shrb
sbb
shr
ja
lahf
or
mov
jge
loop
mov
das
pop
sbb
sbb
mov
push
leave
dec
push
int
in
cmpsb
pop
subl
imul
idivl
scas
cmp
adc
cmc
jb
rclb
and
push
test
pop
shll
jle
sbb
xor
push
cmovp
loopne
popf
and
jne
xchg
mov
cmp
mov
add
dec
xlat
inc
repnz
pop
xor
cmpsb
cli
sbb
ret
into
cmp
dec
out
sbb
sahf
movsl
xor
pop
fiadds
push
shl
nop
mov
or
pop
push
cmp
jg
ja
cltd
adc
mov
xchg
pop
or
jecxz
push
mov
imul
sbb
loope
popl
jg
ffreep
sbb
jl
test
xchg
sbb
jbe
int
arpl
cmp
fstpt
pop
xor
sbb
jno
leave
aaa
or
pop
je
mov
and
rorl
ds
push
jecxz
mov
pop
filds
jle
sub
nop
lret
cwtl
mov
push
test
jmp
push
mov
out
ret
test
add
repnz
aam
mov
andb
dec
dec
add
inc
in
aad
andnpd
jecxz
or
mov
iret
lcall
scas
cmp
push
jp
lods
les
mov
sbb
mov
cmp
cmc
divl
fcmovb
cmp
pop
fs
inc
ljmp
enter
inc
repz
and
in
push
xchg
mov
sti
and
bound
push
push
mov
lock
fistps
mov
lea
pop
stos
add
into
xchg
jnp
cwtl
or
imul
in
ds
lods
sub
aam
pop
mov
into
mov
mov
clc
push
add
repz
lcall
cmpl
xchg
sub
seto
imulb
pusha
xor
iret
stos
push
pop
push
pop
mov
mov
in
cltd
pop
mov
aam
outsb
mov
call
jmp
test
test
mov
fildl
sub
or
cld
sub
inc
pop
pop
add
and
push
bnd
dec
rcrl
enter
or
clc
dec
iret
or
add
dec
xor
movsl
lcall
hlt
xor
gs
mov
or
xor
js
mov
push
inc
xor
xor
and
bnd
imulb
cmp
adc
sarl
mov
sub
sub
sub
repz
pop
mov
andb
imul
and
lods
lds
cli
adc
jl
addr16
xchg
imul
pop
movsb
lock
imul
scas
neg
cmp
int3
shrb
hlt
dec
out
int3
jl
hlt
push
xchg
dec
dec
jb
aam
mov
cmp
std
call
loop
in
out
sahf
jae
cmpsl
lock
addr16
push
mov
adc
push
movzwl
and
inc
mov
or
xchg
cld
sub
add
aas
push
imul
fsubl
pop
frstor
dec
loopne
sbb
cmp
or
pop
scas
loope
xchg
pop
jno
and
mov
adc
mov
leave
add
xchg
std
sub
lret
popf
sbb
xchg
mov
data16
in
loop
cmp
stc
mov
inc
sbb
fistl
adc
mov
lret
or
les
idiv
inc
dec
mov
div
pop
sub
pop
adc
cmpsb
idiv
stc
and
popa
in
movsb
mov
clc
mov
nop
xlat
pop
lea
out
jge
lds
daa
pop
xor
aam
mov
repnz
add
mov
mov
sbb
scas
ljmp
stos
sub
outsl
jle
mov
addl
mov
jae
sbb
cwtl
jl
in
sbb
pop
dec
xorl
outsb
cmpsb
imul
in
jg
test
int
stc
inc
jbe
jmp
iret
adc
mov
ret
and
sub
fwait
insb
pop
xor
and
and
xor
out
sub
andb
cli
int3
pop
scas
add
out
mov
pop
outsl
add
fcompl
cmc
pop
jle
mov
lds
add
mov
and
movsb
push
out
movb
dec
dec
scas
lret
adc
jle
ret
loope
repnz
mov
out
fmull
call
out
addr16
cmc
outsb
fbstp
mov
leave
jmp
mov
and
xor
jmp
shll
xchg
add
push
sbb
ret
pop
pusha
cmp
dec
clc
inc
xchg
push
test
das
push
sarl
mov
or
mov
adc
mov
inc
stos
pop
sub
mov
in
or
cwtl
lahf
test
ja
ds
pop
cld
bound
lds
cmp
xor
xor
jb
movnti
fistps
and
daa
and
jmp
dec
int
cmpsb
outsl
jp
or
negl
jecxz
jb
inc
call
adc
and
or
rcll
add
mov
push
dec
adc
movsl
out
xlat
xchg
adc
fbld
sti
or
cltd
sub
es
enter
mov
cmp
and
and
sub
or
and
jns
mov
cmpsb
adc
ja
mov
jno
in
dec
cmp
sahf
lret
mov
mov
lods
mov
icebp
dec
xor
xor
inc
jp
imul
mov
or
fsts
in
test
adcb
movsl
dec
cs
xor
jo
in
or
dec
mov
cmp
repnz
xor
mov
aas
jne
inc
aaa
inc
dec
cld
dec
into
test
adc
dec
lea
test
clc
pop
shlb
inc
mov
and
add
stos
xor
mov
push
mov
xchg
stc
inc
dec
jp
stos
dec
movsl
add
iret
mov
in
mov
cmp
les
addr16
ljmp
inc
gs
xor
data16
mov
ljmp
xchg
and
int
into
scas
jmp
jae,pn
movsl
je
jge
lock
fiaddl
and
mov
push
jnp
mov
xor
inc
pop
add
outsb
loope
mov
dec
out
movsl
loopne
lods
arpl
ret
out
lret
popf
jns
addr16
je
cmc
loope
mov
adc
imul
mov
xor
adc
jbe
sub
or
push
inc
jnp
leave
fimuls
movsb
mov
pusha
test
out
sbb
mov
add
add
test
out
xchg
mov
or
subl
mov
bound
insb
add
in
outsb
mov
in
mov
push
sti
dec
add
into
das
outsb
rcr
push
dec
add
xchg
cmp
cwtl
je
push
loope
jmp
dec
pusha
mov
mov
mov
inc
sub
int
aam
stos
outsl
fstpl
pop
pop
dec
mov
ret
insb
fisubs
subl
mov
pop
jbe
inc
adc
mov
out
xchg
int3
iret
je
xchg
lret
sub
das
pop
xor
hlt
mov
mov
lret
outsb
in
in
inc
cwtl
out
pop
mov
pop
scas
shrb
int
and
fnstcw
jns
imul
inc
sub
ds
fldcw
es
push
std
push
pop
or
dec
insl
rorl
xor
cmc
scas
dec
and
subb
or
push
sti
add
push
popa
std
inc
sbb
cltd
dec
sub
loopne
mov
lret
mov
test
jmp
or
vhsubpd
xor
add
leave
aas
dec
mov
insb
rclb
push
out
sarl
sub
iret
mov
push
test
cmp
pop
fsubl
dec
xchg
or
into
inc
std
pop
and
lea
mov
jae
xor
or
cli
pop
inc
mov
pop
add
cmp
faddl
pop
lahf
pop
into
faddl
mov
add
mov
mov
pop
outsb
and
add
or
addr16
and
inc
insl
in
jbe
and
repnz
outsl
inc
mov
les
push
push
or
insl
dec
fs
test
call
pop
mov
xor
pop
ss
xor
cmovne
mov
movsb
push
js
insl
faddl
mov
clc
nop
jp
jne
push
jle
mov
subb
into
mov
jnp
roll
scas
cs
cmp
outsl
lahf
bound
mov
mov
pop
fdivl
and
adc
inc
dec
cmp
ret
sarb
inc
and
cmp
jne
bswap
mov
in
xor
jnp
lret
hlt
test
cmp
xchg
sbb
jp
pop
push
or
xchg
and
pop
sub
mov
daa
mov
push
pusha
sbb
rorb
mov
or
scas
loopne
cltd
inc
test
pushf
mov
sti
movsl
in
xorb
and
mov
shrl
in
mov
add
nop
dec
sbb
loopne
fistps
popa
lret
xchg
outsb
mov
test
xor
andl
aad
lea
push
lds
jecxz
lahf
ja
or
jmp
mov
xchg
and
and
pop
cltd
dec
push
jmp
cwtl
xchg
aaa
loop
mov
push
jecxz
mov
sahf
shrb
aaa
add
cmpsl
out
test
pop
dec
dec
pop
dec
lcall
adc
dec
xor
dec
push
sti
xor
call
and
fnstenv
adc
enter
nop
popf
jb
shrb
cli
and
add
aaa
mov
stos
mov
xor
imul
mov
shlb
lahf
aad
icebp
xchg
jmp
std
in
fidivrl
jnp
pop
cmc
pop
mov
lods
std
jns
pop
and
or
adc
lret
dec
out
inc
and
push
leave
pop
or
jg
xor
adc
push
mov
rcl
sub
pushl
and
fsubr
mov
lcall
cmp
faddl
call
dec
mov
push
outsb
lods
adc
xor
push
mov
out
in
mov
sarb
inc
inc
pusha
fsts
push
mov
aam
cmp
ss
aas
cmp
mov
cmp
xor
cmpsb
lea
movsb
xor
cmpsl
lock
test
fcmove
sahf
sahf
mov
push
mov
adc
mov
mov
add
mov
push
xchg
lcall
sbb
sbb
push
aaa
mov
xor
icebp
jge
in
outsb
sub
lock
pop
jle
in
repz
aad
add
fs
shrb
pushf
mov
fadds
cli
sub
leave
cmp
mov
xorl
jb
je
dec
leave
mov
pop
mov
das
dec
mov
inc
int
das
pop
aad
xor
enter
sub
jge
subb
rclb
fwait
cmp
mov
pop
je
enter
and
icebp
clc
dec
xchg
test
dec
stos
xchg
mov
mov
push
adc
daa
mov
aad
outsb
ljmp
mov
ss
pop
push
lea
out
add
cwtl
cli
cld
repz
xchg
cs
arpl
movsb
mov
inc
cli
mov
jo
adc
push
push
inc
mov
pop
dec
cmpl
popf
out
or
pop
and
aaa
sbb
sahf
xchg
and
loopne
mov
in
sub
adc
inc
adc
xchg
sbbb
scas
test
xor
repnz
cmpsl
loop
and
mov
pop
cmp
adc
jno
adc
cli
insb
cmp
mov
repz
inc
push
in
jne
int
or
mov
mov
push
ret
loop
adc
and
stc
mov
in
arpl
push
shrl
hlt
cmp
ficomps
and
cmp
jbe
inc
mov
jns
or
mov
test
pop
in
pop
xchg
sbb
ret
js
add
lods
imul
jg
leave
sbb
or
pop
loope
mov
and
stos
lock
ss
mov
mov
cld
xchg
mov
test
lahf
mov
or
mov
xor
and
add
adc
push
repz
loop
loopne
and
imul
lock
xchg
sub
mov
xchg
xchg
pop
loop
xor
das
shrb
mov
jge
test
test
fsubr
inc
adc
or
sub
inc
outsl
push
mov
pop
daa
cmp
adc
mov
aam
cmp
or
mov
fsubs
test
mov
fisubl
cmp
inc
outsb
cmpsl
lahf
or
mov
stos
or
ss
in
xchg
test
jnp
add
sbb
stos
fisubs
pop
mov
clc
xor
cmpb
addr16
adc
push
cmpsb
dec
cmp
sub
xchg
fninit
or
or
push
xorb
add
fldl
js
sbb
adc
test
shlb
xlat
add
adc
iret
xchg
movswl
sbb
inc
or
mov
jl
or
lods
loopne
iret
js
imul
jae
divb
ss
or
cmp
xchg
mov
sub
adc
aaa
test
or
push
cmp
jmp
pop
pop
xor
or
fbstp
loope
mov
aad
subb
outsl
cltd
test
out
push
call
lock
into
mov
xchg
push
punpckldq
sbbl
pop
xor
xchg
adc
fwait
mov
movsb
aaa
shlb
cwtl
push
sbb
repnz
incb
negb
decb
bound
fildl
aad
cmp
ss
push
std
mov
jno
push
sti
aaa
arpl
xor
pop
sub
sub
xor
xchg
scas
fs
je
data16
outsb
movsb
cli
and
fsubrs
dec
dec
adc
aaa
loop
inc
cmpl
dec
and
ja
shl
ret
mov
add
add
pop
aad
ljmp
les
push
pop
stos
mov
cmp
add
or
sbb
adc
push
call
out
fisubl
and
jg
jmp
cmp
push
in
cmpsl
xchg
stos
cmp
push
push
adc
cmp
mov
pushf
or
mov
add
sbb
mov
inc
jbe
lods
sbb
mov
jecxz
add
sub
fcmovu
pushf
add
mov
mov
rcrl
outsl
in
cli
dec
pop
lock
jecxz
mov
sub
in
out
mov
xor
shrl
mov
mov
jne
and
subl
dec
add
aam
test
add
inc
xlat
mov
and
aaa
shrl
xor
mov
enter
ret
xchg
and
shll
xor
xor
aaa
jno
xchg
test
jg
andb
jg
or
hlt
inc
int3
xor
cmp
push
adc
dec
adc
mov
and
mov
add
sub
xchg
push
negb
sub
cld
int
fsubrl
rcll
imul
xchg
and
mov
or
mov
fcoml
jb
jne
hlt
mov
inc
rclb
lret
or
inc
outsl
outsl
pushf
xchg
sub
inc
test
jmp
jne
inc
fs
push
push
add
sti
dec
ljmp
or
fcmove
daa
push
aad
mov
int
rol
insb
call
arpl
cmpsl
clc
cmp
mov
inc
or
dec
xlat
cmp
sbb
subb
push
sbb
or
mov
rorb
shrl
add
bound
repnz
mov
sub
sahf
inc
ss
push
aas
loope
mov
shll
add
movsb
or
outsb
outsl
mov
sbb
xlat
es
sub
lcall
int
cmp
test
xor
fdivl
scas
jo
xchg
and
rcrb
adc
scas
pop
xor
test
movsl
stc
sbb
addr16
mov
popa
ror
js
mov
mov
add
stos
push
pop
sbb
out
mov
test
rol
leave
inc
inc
xchg
jb
xchg
push
inc
aaa
mov
pop
sbb
lea
sub
cli
mov
adc
jmp
repnz
cmp
dec
inc
adc
movsl
or
mov
test
insl
adc
lea
stos
icebp
pop
pop
std
xor
stos
sbb
xchg
fcmovne
loopne
and
dec
push
loopne
dec
in
xchg
ja
js
loop
pop
mov
xchg
sub
lds
jbe
mov
ds
orb
and
aaa
outsb
in
adc
addr16
dec
ret
dec
mov
lods
shl
push
sub
sti
and
outsl
gs
jb
pop
addr16
mov
pop
or
jns
iret
stos
pushf
sbb
in
mov
or
push
jp
lcall
hlt
push
pop
nop
push
mov
cld
sahf
jl
sub
cmp
and
pop
or
or
out
addb
xchg
adc
testl
mov
push
mov
ljmp
and
and
push
cld
jo
or
hlt
jmp
movsb
xor
sub
xchg
and
and
inc
xchg
push
into
xchg
jno
out
aaa
rcrl
inc
bound
stc
arpl
inc
jmp
push
arpl
les
push
test
stc
sub
stos
jnp
repz
fimull
and
ret
mov
insb
bound
lods
sbb
adc
add
cmp
out
das
clc
jle
pop
lret
leave
and
scas
sub
aaa
mov
mov
fldcw
push
mov
pop
jle
je
cmp
scas
inc
movsb
or
xchg
call
xchg
adc
hlt
mov
notb
fwait
loopne
jne
cmpl
daa
cmpsl
in
mov
pusha
pop
xchg
insl
lea
xor
inc
or
jnp
pushf
jecxz
mov
in
ds
cmp
ret
adc
xor
mov
into
inc
xor
push
pop
scas
pop
sahf
and
xchg
mov
cwtl
push
gs
jmp
mov
jae
push
pop
lods
xchg
mov
push
adc
pop
stc
and
sub
cli
dec
sahf
scas
adc
pop
sbb
add
cmp
add
jno
mov
bound
mov
clc
lret
add
in
js
outsl
test
test
out
scas
mov
mov
jae
call
jno
bound
dec
pop
lahf
ret
or
out
subl
mov
dec
insb
shl
sub
inc
in
js
cmp
and
cmp
add
das
fcomi
insb
and
xor
movsb
idivb
lock
rcll
lahf
mov
bound
xor
jl
cmp
sbb
pusha
bound
xor
push
mov
lret
mov
lret
push
xor
inc
cmp
xchg
fs
mov
std
loop
popa
mov
or
xor
cld
push
mov
sub
add
test
and
push
mov
inc
mov
icebp
dec
lea
test
imul
ja
pop
jp
adc
sbb
pop
adc
lods
push
adc
cmc
lds
jne
bound
test
mov
mov
insb
loope
orl
or
test
sub
aas
jg
dec
outsb
or
and
shl
fcmovbe
lret
mov
mov
dec
arpl
xor
scas
ret
pop
xchg
sub
mov
pop
push
repnz
adc
adc
adc
cmp
sahf
pop
jne
mov
mov
jno
adc
leave
les
dec
mov
mov
adc
or
mov
mov
add
adc
mov
dec
loope
add
cltd
inc
scas
adc
inc
in
jnp
in
aaa
popa
sub
pxor
adc
imul
rcrl
test
clc
mov
mov
loop
mov
cwtl
fyl2x
paddq
cmp
xchg
in
lahf
loope
inc
iret
and
sub
jbe
sbb
cmc
leave
and
mov
andb
jg
scas
jnp
insb
dec
pusha
xchg
sahf
sbb
or
inc
pop
dec
dec
push
sahf
cmpsl
push
push
jl
mov
xor
shrl
xor
mov
ss
cmp
lock
mov
mov
cs
lahf
pop
jno
xchg
and
jg
inc
cmp
inc
arpl
pop
or
mov
rcrb
addr16
xlat
jmp
mov
leave
mov
dec
fisubl
jl
insb
stc
hlt
jle
lds
sahf
int3
push
cmp
movsl
sbb
std
mov
mov
cli
dec
adc
sti
test
xchg
lret
sbb
gs
pop
aas
sarb
fdivr
std
inc
inc
push
mov
cmpsb
mov
jbe
cvttps2pi
data16
mov
gs
or
xchg
aad
addl
sti
pop
iret
pushl
pop
mov
sbb
inc
in
imul
cmp
sarl
jle
roll
or
jae
arpl
pop
ja
jle
ds
mov
cmpsl
mov
shl
lods
sbb
test
and
mov
jae
and
mov
orb
mov
or
xchg
fs
xor
xchg
sub
into
idiv
js
adcl
or
fmuls
add
sub
push
sub
pop
mov
popa
fiadds
jle
inc
or
add
jmp
cmc
sbb
shrl
pop
adc
xor
movsb
test
iret
imul
mov
popa
mov
lret
sub
loopne
lahf
mov
frstor
enter
pop
xor
orl
push
inc
and
lahf
shlb
xor
sub
adc
jb
jge
stos
mov
xchg
cltd
cmp
xchg
popf
outsl
or
repnz
xchg
jecxz,pt
inc
inc
cmp
fisubl
and
mov
mov
ja
movsb
xchg
lret
ret
enter
loop
sahf
repnz
inc
or
in
test
fisubrs
or
jl
push
mov
ret
aad
pusha
jge
and
je
inc
aam
inc
test
shll
cmp
shll
mov
rcl
adc
andl
pusha
inc
dec
or
in
sbb
mov
mov
fdivrp
cmp
and
add
sbb
mov
mov
dec
pop
out
or
xchg
scas
mov
call
xchg
sbb
mov
hlt
or
movsb
mov
sbb
js
push
jp
cmp
cltd
sub
jo
jno
cmp
sti
dec
jbe
insl
lea
je
xchg
mov
dec
popf
push
lahf
lods
js
les
ret
clc
les
faddp
mov
rclb
test
cmp
pop
or
pop
xor
mov
dec
aaa
push
in
dec
insb
adc
in
imul
aaa
dec
sbb
sbb
inc
or
xchg
pop
fwait
inc
outsl
sub
jle
xor
shll
test
pushl
mov
push
stc
jbe
ret
adc
mov
out
sub
jmp
adc
mov
dec
lods
scas
xlat
out
repnz
and
pop
outsl
inc
inc
mov
add
xor
jns
fisttps
repnz
fidivrl
psubd
jnp
pop
add
stc
cmp
aaa
ficoms
jbe
sbb
popa
xor
mov
add
loope
jp
push
adc
movsl
mov
and
fstl
lods
lods
test
dec
add
popf
mov
push
or
and
jp
repnz
ret
mov
mov
inc
movsb
sub
in
and
mov
mov
jl
adc
aas
movsb
pop
out
xor
push
fisttps
mov
int3
fcmovb
movsl
xchg
xchg
std
bound
sub
sub
fdivrl
push
add
clc
aaa
mov
mov
add
dec
lea
dec
sub
addr16
add
inc
add
xlat
fcompl
pop
test
xchg
mov
insl
aad
adc
add
push
mov
es
push
loopne
rclb
scas
fcoml
add
mov
jnp
xchg
adc
jb
sar
cmp
inc
xor
jns
push
aaa
xchg
pusha
hlt
push
mov
stos
push
test
mov
and
mov
jnp
scas
test
scas
xor
into
add
mov
dec
test
aad
in
scas
cmp
or
xchg
pop
push
xor
lock
add
pop
int3
hlt
aam
rclb
pop
scas
mov
testl
xchg
insb
mov
outsb
outsl
adc
xor
cmpsl
cmp
adc
add
fsubl
mov
mov
adc
xchg
inc
ret
adc
sub
cmpl
test
ss
inc
inc
adc
lret
mov
aas
decl
into
mov
sahf
fbld
mov
mov
mov
lahf
sar
out
fadd
cld
adc
lcall
push
dec
mov
and
mov
push
loop
in
xlat
sub
dec
push
mov
das
dec
jne
mov
xchg
or
push
cmp
and
jnp
pusha
in
inc
push
sbb
jmp
nop
loop
fcompl
jbe
addl
jl
sbb
adc
repnz
cld
mov
jbe
imul
mov
out
fwait
lcall
pop
lods
aam
and
jg
sarl
sub
fldt
stos
xchg
add
dec
fcomip
xor
mov
es
push
sub
stos
mov
inc
jge
lret
leave
and
mov
sbb
mov
out
mov
xor
fcoml
pop
fiadds
mov
hlt
out
adc
js
sbb
or
test
fstps
sub
push
mov
shl
xor
lahf
repz
inc
mov
mov
dec
or
lahf
rclb
xchg
push
jge
push
jae
sub
addr16
cs
fisttpl
mov
scas
jl
pusha
xor
push
jp
call
mov
xchg
mov
or
push
and
pop
js
sarl
sbb
push
jge
inc
fidivs
loop
jno
and
jg
mov
shll
leave
stos
pop
mov
lret
or
sbbb
out
adc
outsl
jl
sbb
fcomps
cwtl
add
mov
in
jge
mov
andb
inc
inc
shlb
dec
xor
xchg
test
clc
mov
out
ret
pusha
clc
gs
dec
ds
cli
push
lods
xlat
fwait
add
pushf
and
gs
xor
mov
mov
xchg
cltd
loop
mov
rolb
pop
in
adc
clc
je
addr16
outsb
jne
pop
pop
in
jecxz
pop
mov
add
jnp
in
popf
sbb
jmp
repz
adc
inc
lods
sub
rcrb
xchg
shlb
int
pushf
or
es
mov
nop
adc
inc
jbe
cmc
sbb
mov
xor
push
sbb
or
cltd
adc
cmp
jnp
cmp
lods
xchg
leave
rorb
cmp
stos
ljmp
mov
nop
push
in
pop
inc
dec
cmc
rcr
sar
sub
dec
mov
insb
mov
mov
ret
sbb
fisubs
push
les
add
test
filds
mov
and
int3
jno
scas
test
inc
dec
cmpl
lock
xor
adc
test
add
imul
lods
sub
pushf
in
fwait
leave
subb
cltd
lret
jle
stos
dec
cmc
sbb
and
xchg
jno
push
sbb
or
adc
stos
ret
and
xchg
sbb
ret
cltd
mov
ds
sbb
sahf
cmpsl
aad
or
out
and
and
jecxz
or
cmp
pusha
mov
cvtpi2ps
inc
jae
inc
cmp
sub
aad
pop
in
xchg
popa
or
clc
into
add
bound
mov
inc
sbb
xchg
call
dec
mov
sbbb
pop
out
xchg
gs
outsl
imul
scas
jg
xchg
rolb
gs
add
mov
cwtl
sbb
mov
repnz
mov
ret
push
enter
cmp
pop
test
pop
cmc
fnstsw
mov
clc
push
mov
xchg
jb
mov
jae
rcll
and
dec
jnp
es
popf
aas
hlt
inc
testb
mov
sub
add
push
dec
mov
push
jno
jp
outsb
in
fisubrl
pop
sub
mov
out
ja
dec
dec
mov
mov
pop
leave
nop
por
cmp
fmuls
add
jns
cmp
cwtl
addr16
into
sbb
negl
pop
push
cmp
ss
fs
or
sti
lods
xchg
insb
test
and
fistpl
inc
mov
push
andl
out
add
ds
jge
dec
inc
pop
shlb
mov
in
cmpsl
enter
mov
cmp
test
movsb
mov
lock
jmp
lds
or
xchg
nop
mov
fldcw
cltd
mov
rcll
sub
or
jne
and
dec
jge
sbb
jecxz
out
aas
sub
fs
fidivl
rcrl
and
pop
cld
cmc
mov
imul
loope
popf
jmp
sbb
pop
test
daa
cmp
inc
loop
sub
xchg
adc
push
pop
lods
push
mov
cmp
fsubrs
dec
bound
out
ss
xchg
xchg
add
push
pop
xor
dec
and
dec
loop
sub
xchg
mov
cli
mov
xchg
push
add
sub
insb
cmp
enter
mov
ljmp
mov
in
dec
dec
xor
pusha
fsubs
inc
or
push
add
push
mov
prefetch
popa
loope
inc
cmp
dec
fs
or
les
mov
subb
mov
lds
xor
add
mov
cmp
sub
das
jne
sbb
cli
iret
adc
mov
mov
push
lahf
or
arpl
dec
push
xchg
xchg
js
mov
call
add
inc
in
mov
lcall
mov
xchg
loope
loop
or
movsb
in
hlt
mov
mov
mov
into
ljmp
or
xlat
or
sbb
cwtl
mov
in
shrl
sbb
xchg
jns
mov
cmp
jne
sbbl
mov
mov
mov
je
ret
xor
sub
cs
xor
xchg
aas
jo
dec
adc
pusha
iret
fcomps
xor
add
adc
in
pop
rcrl
decl
into
cmpsb
jno
dec
cmp
or
push
dec
xchg
add
dec
out
push
std
dec
lret
leave
movl
add
into
adc
xor
outsl
nop
ljmp
shrl
in
into
fstpt
pop
add
mov
pop
repz
lcall
enter
pop
fdivs
mov
cmp
jns
pop
mov
cltd
daa
leave
pop
adcb
dec
aad
outsl
xchg
rcrb
in
sbb
mov
shl
adc
cmpsb
imul
mov
ds
mov
pop
or
adc
ljmp
in
dec
fiadds
xchg
push
jno
mov
or
sbb
mov
insb
popa
clc
mov
mov
pop
cmp
mov
dec
cli
pop
ret
mov
mov
xchg
xchg
test
lods
arpl
cld
cli
rolb
sbbl
in
icebp
int
mov
cli
imul
push
out
out
popa
jns
mov
xor
test
test
daa
int3
jmp
cld
mov
pop
sbb
fidivs
mov
imul
dec
fbstp
push
loope
in
scas
in
test
rcr
push
sahf
cmc
or
je
xlat
shrb
loopne
mov
inc
ret
pop
xchg
pop
cmpsl
lcall
sub
mov
pop
inc
xchg
jae
sub
pop
repnz
js
pop
arpl
hlt
sub
out
ret
pop
pusha
xor
addr16
test
sub
push
shll
jb
cmp
or
mov
pop
cmp
popf
jl
loopne
adc
pop
test
cmp
je
pop
xchg
pop
push
mov
and
pop
out
outsb
xor
es
inc
aaa
sub
push
sub
inc
andl
adc
imul
xchg
cltd
cmp
mov
lds
hlt
mov
dec
jecxz
and
jne
mov
insl
das
mov
mov
fldl2t
dec
nop
movsb
dec
bound
lahf
test
lds
sbb
sub
fiadds
adc
fimuls
imul
mov
nop
loop
pop
mov
xor
cmp
jl
pushf
mov
outsb
jne
insb
test
xchg
sub
je
sbb
sahf
cmpl
pop
mov
popl
adc
fcom
push
jo
cmp
js
ja
add
cmp
and
and
ss
sbb
sub
mov
adc
fwait
xor
add
mov
std
inc
pop
data16
sbb
sub
sub
stos
mov
inc
test
mov
mov
mov
xor
push
push
inc
xor
push
ja
add
data16
mov
clc
ss
and
jg
inc
sub
mov
sahf
sub
jecxz
mov
fs
adc
lcall
jp
or
test
and
cmpsl
movsb
add
and
das
jnp
mov
xor
pop
add
in
fldenv
in
ret
ds
mov
lahf
arpl
out
test
mov
fdecstp
or
jbe
lea
ret
mov
jg
stc
nop
xchg
xor
mov
adc
mov
and
mov
or
lret
icebp
adc
and
sub
rcr
scas
cmc
jo
jnp
test
mov
xor
cmp
inc
jno
lods
addb
ret
push
mov
movsl
movsl
mov
mov
dec
dec
call
movsb
jns
adc
jecxz
aam
nop
push
aaa
inc
push
addr16
adc
pop
adc
in
ret
mov
sbb
push
inc
jae
outsl
repz
mov
insl
arpl
or
jnp
mov
cs
fs
lods
mov
jle
lea
mov
dec
das
daa
bnd
cmp
jecxz
rcll
roll
xor
mov
hlt
pop
test
push
in
rcr
xchg
in
mov
es
mov
sub
cmp
aam
mov
int3
jge
subl
pop
mov
push
push
shlb
sbb
fstpt
add
cmp
jle
sub
je
or
jnp
ljmp
cmpsb
cmpsb
or
xor
mov
cmpl
out
rorb
ret
cltd
fiadds
insl
jge
mov
div
sub
pop
or
fsubrl
or
pop
dec
mov
mov
jnp
aad
jae
push
stos
pusha
or
addl
adc
js
sub
mov
aas
popa
adcl
mov
rcrl
aaa
lahf
jne
out
lock
in
out
test
or
mov
das
push
lods
mov
imul
sub
dec
ljmp
dec
test
enter
adc
xor
mov
lahf
js
push
in
repz
and
cmp
jmp
xchg
cmpsb
es
int
call
insl
mov
mov
and
jge
dec
test
je
mov
sub
fsubs
insb
lods
adc
lods
or
loop,pt
cld
pop
fimuls
sub
imul
inc
sub
imul
scas
cmc
xor
adc
cmpsl
push
jmp
xrelease
daa
test
mov
xchg
jle
mul
cli
into
orb
pop
xchg
sub
xchg
test
push
into
adc
push
cmc
jle
dec
fisttpl
scas
pop
xor
orl
fsubs
push
int
push
adc
test
negb
jo
in
repz
mov
sub
sub
or
fiadds
gs
xor
inc
cmp
out
cmp
jo
je
test
aam
pop
pop
call
mov
sbb
addr16
cmp
adc
aas
or
xor
loop
push
lcall
mov
push
jg
imulb
xor
iret
stc
jae
xchg
mov
mov
add
pop
loop
push
das
inc
dec
movsb
repnz
or
setnp
in
mov
jb
test
inc
adc
xor
out
dec
ds
mov
arpl
sbb
sbb
outsl
xchg
sbbb
data16
mov
and
pop
sub
das
push
inc
bound
int
repnz
adc
xchg
aad
enter
in
clc
jbe
fistps
jae
dec
jmp
cmc
or
xchg
fcoms
inc
mov
sbb
jbe
add
ret
jmp
mov
btr
adc
xchg
cmp
add
shl
cli
imull
and
mov
jle
enter
test
mov
into
jl
ret
dec
bound
scas
mov
and
sbb
sub
mov
inc
insl
sbb
jb
out
insl
mov
fsubp
mov
push
leave
movsl
mov
leave
push
jns
je
pushf
frstor
or
andl
es
push
jnp
fsin
sbb
jbe
das
aas
aas
push
and
xchg
int
jnp
inc
mov
jbe
cs
loope
push
sti
or
aas
dec
les
data16
divl
add
sub
adc
pusha
jge
clc
mov
adc
cmp
mov
jo
push
pop
xchg
je
mov
lea
dec
xor
lods
push
xlat
stos
push
cmp
cwtl
rol
jle
roll
es
and
jns
lcall
leave
bound
cmp
dec
push
dec
and
lahf
movsl
xchg
leave
mov
cmp
push
cmp
sub
xchg
loope
xchg
daa
arpl
lret
je
sbb
mov
mov
push
pop
movsb
das
mov
jne
jecxz
push
mov
daa
les
xorl
js
pop
adc
pop
pop
addr16
sbb
jne
stos
mov
mov
push
pop
sbbl
aaa
sub
mov
int3
xor
inc
cmp
mov
ds
cmp
xor
in
mov
and
int3
inc
out
in
sub
test
sbb
insb
lock
repz
sbb
mov
mov
push
in
test
xor
data16
xlat
add
ja
repz
mov
add
mov
js
testb
scas
push
add
mov
testb
scas
jnp
push
sub
stc
js
mov
loope
cmp
mov
sub
adc
int
leave
leave
sbb
shrb
frstor
xchg
js
inc
fisubl
pop
adc
js
sub
pop
test
xor
adc
adcl
cltd
leave
orl
jb
vmovss
push
stc
mov
add
clc
mov
xchg
inc
xor
xor
adc
shrb
or
jg
pop
cmpl
xchg
cmp
cld
shll
cld
mov
repz
int3
bound
inc
mov
js
iret
sub
xchg
loope
out
mov
push
dec
inc
je
mov
movsb
push
jg
sub
subl
jp
fstps
fsts
dec
xchg
inc
xor
loope
arpl
xchg
cmp
sbb
fwait
mov
fists
lret
mov
pop
and
call
loopne
mov
mov
inc
cmp
add
adc
mov
les
xor
repnz
mov
clc
lock
inc
outsl
mov
ret
xchg
call
cmp
shrb
jge
in
cmp
sub
repz
mov
call
dec
lea
ficoms
inc
dec
loopne
out
cld
and
outsl
into
lock
out
insl
push
xlat
ficoms
in
add
scas
mov
pop
lcall
jno
call
scas
or
pop
cmp
pop
xchg
ret
jg
adc
and
sub
repnz
xchg
cmpsl
addl
push
or
dec
shrb
and
adc
rcll
adc
lods
stos
cmp
bound
fnsave
dec
xchg
rorb
jmp
inc
stos
push
xchg
sub
in
pop
adc
sti
xor
test
mov
pusha
push
xor
push
lahf
lock
mov
lock
adc
loopne
jmp
push
pop
fistpll
jmp
push
cmc
adcl
cmp
data16
pop
push
test
jmp
call
test
lock
or
mov
mov
sub
out
sub
sub
and
hlt
xor
dec
ljmp
bound
add
and
jne
adc
xchg
pop
jg
into
cmpsl
xor
xchg
mov
shl
or
or
sub
mov
push
mov
lds
sbb
xchg
cmp
in
les
loope
inc
and
mov
jecxz
mov
jmp
loop
stc
movsb
jg
sbb
xor
movsb
dec
push
lret
test
shlb
movsb
jb
lea
jb
bound
cli
int3
lret
jnp
scas
nop
loope
daa
movsb
outsl
inc
dec
jge
adc
lock
xchg
stos
inc
cmc
imul
test
cmpsl
cli
movsl
mov
mov
dec
js
outsb
rcrl
pop
or
add
adc
mov
inc
xor
xchg
xor
fisubrl
xor
mov
lahf
push
cltd
push
mov
inc
cmp
les
cmp
test
xor
xchg
out
sub
or
jecxz
cmpsb
dec
push
pusha
out
shl
leave
loope
mov
mov
and
stos
mov
lock
pavgw
and
adc
xchg
adc
js
sahf
fsubp
mov
push
rcll
gs
sub
adc
dec
xchg
add
sbb
cmpl
cmc
shrl
fwait
mov
xchg
mov
call
add
add
xor
mov
mov
aad
inc
in
lahf
clc
jbe
xchg
xchg
dec
daa
and
adc
jl
push
cmp
pop
aad
or
sti
pop
mov
je
popf
aaa
jne
xor
jg
pushf
xchg
icebp
mov
pop
push
xor
test
leave
jcxz
into
xchg
call
mov
mov
stos
fcomps
pop
xor
cli
aas
sub
mov
scas
mov
jne
push
fstp
inc
mov
dec
or
or
xchg
push
out
push
lret
icebp
ss
push
mov
xchg
mov
repnz
scas
call
adc
sub
inc
sbb
roll
lret
fwait
sub
push
rol
nop
or
int3
and
mov
jg
mov
mov
or
lret
adc
sahf
inc
add
pop
push
int
add
jnp
adc
or
inc
mov
je
pop
jle
inc
fcompl
push
pop
dec
mov
dec
mov
mov
push
xlat
sbb
cmpsb
cmp
xchg
or
xchg
xchg
cwtl
sbb
mov
jnp
add
pop
in
lret
xlat
shrl
push
stc
xlat
and
pop
or
inc
mov
push
cmp
out
push
cmpsb
cmp
mov
mov
cmp
out
mov
pusha
xchg
dec
sub
scas
push
call
ficoml
int
scas
mov
arpl
sti
dec
repnz
adc
jle
dec
inc
cmp
in
scas
push
das
mov
ret
mov
lahf
push
mov
xor
jmp
sbb
mov
or
and
xor
jb
or
ss
or
bound
xchg
dec
scas
mov
mov
lods
jg
adc
or
test
pop
push
push
idiv
call
adc
mov
push
loop
jb
fisubl
js
jae
cmp
dec
sub
adc
andb
and
xchg
dec
cmp
mov
nop
dec
aaa
loope
enter
into
xchg
dec
int
les
fwait
mov
sbb
push
in
out
push
jg
adc
aaa
xor
sub
insl
cltd
arpl
mov
cmpsl
push
scas
and
leave
ljmp
or
aad
out
pop
cmpl
stos
into
dec
mov
cmpsb
clc
push
mov
dec
mov
lea
add
js
xor
daa
pop
mov
sbbl
fistl
fistps
and
mov
push
movsl
scas
mov
push
or
js
jmp
dec
nop
sub
sub
mov
fs
or
pop
data16
xchg
and
pop
cmpsl
adc
inc
xor
xlat
shl
out
dec
cmpsb
aaa
fwait
mull
pop
pop
loopne
int
cmp
or
sub
sbb
push
jb
pop
xchg
rcr
jae
call
and
sbb
sbb
add
roll
add
sbb
dec
fildl
xchg
lods
and
fstl
mov
mov
in
loop
jecxz
xor
imul
cmc
pop
in
cs
pop
mov
ss
insl
add
push
adc
in
lcall
or
push
pusha
mov
mov
pop
pushf
dec
shrl
dec
popf
daa
adc
adc
test
adc
inc
fcomps
cmp
cmpsl
pop
imul
stos
cmp
out
insb
push
jno
sub
push
shlb
shll
jge
or
xor
push
mov
in
and
sub
mov
jp
push
mov
inc
adcl
leave
mov
jb
popf
ja
ja
leave
je
bound
jl
or
sti
pop
pop
arpl
xchg
outsl
scas
jns
orb
inc
mov
inc
ljmp
or
push
jbe
inc
orl
push
movsb
xchg
push
push
xor
push
jbe
mov
mov
lret
sub
rol
xchg
and
adc
loope
push
mov
fcmovu
pop
push
jmp
adc
jl
cmp
ljmp
aam
jo
push
test
cld
cmp
xor
mov
jmp
xor
cmp
gs
cmpsl
hlt
int
mov
fsubs
cmpsl
adc
jmp
cmp
fldl
popl
sahf
dec
dec
or
fwait
scas
sbb
xor
adc
adc
or
out
cmpsl
shlb
leave
das
and
jmp
cmp
hlt
shl
push
test
adc
ret
and
mov
addr16
shrb
and
pop
mull
push
jle
jmp
ja
cmpsl
pop
adc
mov
fs
je
lea
jno
scas
in
inc
pop
es
xchg
push
loop
sti
aam
pop
sbb
ljmp
lret
pop
insl
jnp
rcr
into
gs
shlb
sub
xchg
xor
rolb
mov
outsb
nop
xchg
ds
out
loop
fists
fstpt
in
iret
lds
and
ljmp
jno
push
adc
jp
or
push
aaa
mov
cli
jl
aaa
inc
xor
arpl
inc
daa
clc
cmp
pop
out
mov
test
sbb
int
mov
in
pop
and
int
je
fidivl
aaa
divb
or
xor
jno
repz
es
cli
lret
cltd
lcall
jno
sbb
mov
adc
mov
jg
push
push
or
loope
sti
mov
add
rorb
dec
popl
fwait
add
leave
xchg
adc
dec
andb
mov
push
mov
in
shlb
sbb
scas
pop
fwait
sti
gs
cmp
into
dec
sub
repnz
inc
add
jl
inc
ljmp
dec
test
jle
xor
xchg
xlat
inc
das
pop
incb
sub
and
movsb
js
outsb
cld
bound
pop
leave
pop
dec
bound
sbb
rcl
out
fists
push
je
mov
inc
scas
std
add
sbb
cltd
mov
and
lock
fimull
lret
sbb
stos
popf
aas
loopne
arpl
loopne
loop
scas
out
xchg
push
xor
or
mov
sbb
xchg
sub
sub
dec
clc
fdiv
jmp
pop
cmp
mov
rorl
imulb
in
mov
adc
inc
adc
mov
mov
in
cmc
test
jl
gs
pop
dec
rorl
mov
mov
adc
pushf
mov
jl
ss
jbe
push
mov
pop
push
mov
mov
ret
mov
aam
subl
inc
add
enter
cmp
jns
inc
xchg
hlt
bound
pop
pop
sarl
jl
pop
push
sub
sarb
add
call
sti
jmp
fdivrs
pop
jbe
rol
jbe
das
scas
hlt
cmp
das
ss
lcall
or
xchg
fs
push
add
push
mov
cmp
inc
jnp
roll
cwtl
lret
out
push
xchg
cmpsl
pop
cmp
xor
fidivrs
outsb
outsb
dec
dec
stos
cltd
loope
cwtl
popa
mov
mov
dec
js
outsb
mov
sahf
stos
ficoms
lods
xchg
jle
and
jo
scas
jnp
cmp
sbb
push
mov
loop
or
pop
or
stc
repnz
std
adc
pop
test
imul
movsl
in
mov
dec
add
cmp
sbb
inc
push
adc
fcomps
jl
xor
lret
mov
mov
jbe
fucomip
pusha
cmpsl
lods
pop
inc
xlat
push
dec
inc
loop
sti
shl
fstps
sub
icebp
xchg
adc
out
aas
mov
aad
scas
mov
push
cmp
adc
test
or
and
into
cwtl
mov
push
shrb
into
inc
adc
mov
sbb
jno
test
sahf
cmpsb
push
xor
jge
in
cmp
out
sbb
or
pop
cmp
popa
pop
lret
jp
notb
pop
idivl
adc
mov
xchg
or
fcomps
sbbl
xchg
leave
cmp
pop
pop
outsl
inc
cmpsl
in
jmp
jle
mov
inc
or
sbb
movsl
decl
mov
notl
or
sub
in
fstpl
push
mov
xchg
jo
cwtl
jbe
jecxz
cs
xchg
neg
xchg
jl
ret
das
cmp
arpl
mov
push
mov
mov
cmp
sub
xchg
push
out
jae
loope
push
inc
aad
sbb
pop
jecxz
cld
sub
cli
lods
int3
cmpsl
push
hlt
cmp
push
icebp
sbb
or
loope
shr
dec
nop
mov
push
xchg
jmp
push
inc
fstps
out
stos
imul
sub
pop
out
popl
test
repnz
data16
enter
push
iretw
inc
call
mov
pop
movsl
sbb
or
add
push
mov
ja
in
mov
ret
movsl
push
and
and
loop
cmp
nop
cmpsb
xor
xor
mov
push
jb
jne
mov
cmpsl
pop
xchg
push
xor
dec
mov
push
adc
popl
xor
jnp
lcall
fs
add
mov
push
sbbl
sub
add
jno
popf
pop
dec
and
xchg
and
mov
jmp
cmc
in
lods
loopne
clc
push
sbbl
ficomps
cwtl
mov
repz
mov
and
gs
xchg
subl
cmp
dec
rcrb
arpl
xchg
movsb
int
shll
call
rorb
call
ret
pushf
sub
adcl
call
lea
xor
dec
pop
cs
or
jne
xor
push
and
pop
out
mov
ja
popa
xchg
test
pop
lods
adc
mov
pop
and
pop
xor
ljmp
dec
jno
lods
bsf
ja
test
add
fwait
dec
mov
out
jne
es
mov
push
push
sub
push
sub
dec
divb
test
sbb
mov
dec
popf
in
mov
add
stos
add
leave
mov
dec
sarl
xchg
adc
sahf
int
les
call
add
das
in
pop
xchg
dec
ljmp
xchg
icebp
in
fwait
mov
pusha
aaa
testb
leave
dec
xlat
jbe
aad
imul
into
mov
fidivrl
test
mov
cltd
lret
es
pop
rclb
pop
cmp
mov
cltd
push
call
dec
xlat
sub
pop
gs
sub
iret
and
insl
ret
push
pop
andb
sbb
imul
je
jg
dec
aad
jp
jae
jmp
cmp
ret
sahf
fucomp
push
mov
push
arpl
je
mov
out
imul
push
cmp
incb
add
fs
cmpsl
cld
inc
push
and
cmp
sar
cmpsb
mov
incb
sub
ljmp
and
repz
pop
jg
pop
inc
sbb
inc
dec
and
dec
inc
test
dec
sub
fidivrs
jbe
mov
cmp
mov
popf
dec
call
jae
cmpsb
and
enter
cwtl
sbb
scas
inc
aas
std
and
popa
int
in
push
ss
int3
inc
xchg
aaa
fsincos
adc
inc
adc
sub
lahf
iret
or
inc
xchg
pop
jge
popa
das
data16
and
sub
ficoml
push
insb
xor
xorb
sub
cmpsl
mov
adc
adcl
scas
popa
push
out
pop
lahf
movl
cmp
add
out
and
test
cmp
iret
and
xor
fistl
imull
outsb
mov
pop
dec
pop
add
lock
adc
or
sbb
xchg
fstpl
sub
or
adc
dec
jle
push
jb
xor
xchg
data16
lea
inc
out
inc
icebp
push
rcll
sbb
iret
push
stc
dec
mov
jo
xlat
into
and
push
or
inc
add
pop
jg
lods
lock
mov
inc
movsl
mov
hlt
xchg
dec
iret
cmp
fisttpl
popa
xchg
loopne
xor
mov
jp
aaa
les
call
test
das
lret
insl
cmp
ficoms
push
xor
mov
loop
fldt
add
stc
xchg
jbe
hlt
ds
sub
mov
mov
in
push
or
sub
xor
push
xor
push
and
in
or
push
sbb
in
jge
outsl
sbb
xchg
pop
cmpsl
cmp
addr16
xor
gs
jbe
dec
add
test
pop
pop
mov
inc
inc
ljmp
stos
movsl
adc
cltd
and
add
mov
test
insl
jge
mov
pop
mov
loop
mov
sub
fists
mov
pop
fsubrl
sbb
adc
fdivrs
add
ds
sbb
sbb
or
sub
insb
cmc
cmp
push
add
inc
ss
fldenv
pusha
inc
dec
adc
xchg
idiv
add
xlat
aam
xor
sub
push
jo
xchg
jle
and
comiss
in
stos
jbe
mov
mov
icebp
sub
cmp
mov
add
lods
and
fchs
repz
lods
es
xchg
push
int3
adc
sbb
dec
sub
push
fnstsw
adc
and
inc
mov
mov
fidivrs
xchg
xor
jno,pt
mov
add
fcmovb
and
xlat
xor
xchg
ror
and
xchg
pop
fldt
xor
mov
stc
nop
imul
mov
adcb
aas
and
bnd
and
xchg
cld
xor
mov
pop
lods
out
lret
nop
test
mov
sbb
sahf
sarl
jbe
cltd
and
call
fwait
out
std
push
mov
pop
push
inc
loope
imul
mov
in
cmp
cmpsb
xor
js
mov
in
mov
sub
xlat
mov
loope
push
dec
cmp
pop
fsubrl
rcrb
aam
cmp
pusha
ds
mov
pushf
mov
loopne
in
shlb
test
mov
dec
cmp
icebp
test
call
mov
mov
imul
stos
popa
push
mov
aam
mov
adc
add
mov
pop
adc
mov
mov
xchg
xchg
push
cld
sub
cmc
xchg
xchg
push
int
mov
pop
mulb
cmp
xchg
or
mov
push
mov
popf
fsubr
cli
orl
movsl
rcrb
pop
push
pop
push
and
ds
inc
jp
pop
jecxz
mov
xchg
ret
daa
jo
mov
popf
mov
pop
repz
sbb
sbb
test
fistl
sub
pop
xchg
mov
ljmp
in
xchg
pop
push
sbb
test
jecxz
xor
rclb
iret
pop
push
xchg
imul
xorl
je
xchg
scas
outsb
mov
sub
pop
stos
test
fdivrp
mov
pop
inc
xor
sbb
pop
sbb
outsl
mov
add
notl
and
loopne
fs
or
push
mov
dec
inc
jns
mov
insl
jno
outsl
data16
stos
push
insl
stos
hlt
mov
out
test
push
pop
pop
xor
lret
loop
push
push
mov
out
in
dec
mov
aaa
cwtl
add
sbb
adc
enter
lret
xchg
mov
fiaddl
xor
enter
aas
loopne
cld
int3
sbb
in
pop
stc
push
push
lret
test
pop
and
jns
enter
lret
adc
or
lods
mov
fldcw
cmp
cmp
or
adc
mov
addl
sub
and
out
jmp
mov
lock
bnd
or
inc
int3
mov
jnp
sub
mov
fbstp
pop
add
in
divl
lock
pushl
pop
sub
outsb
dec
sub
lea
mov
add
and
xchg
aas
lock
cvttps2pi
in
dec
in
sbb
lcall
out
mov
scas
or
sarb
pushf
mov
call
and
mov
dec
stc
mov
mov
mov
add
sub
mov
xchg
insl
sbb
call
dec
inc
jns
xor
sti
xchg
test
cmpsl
sbb
lods
push
adc
outsb
addr16
fldl
insb
and
lds
add
sbb
into
outsb
aad
mov
pop
rcl
int
add
add
or
sub
dec
ficoml
jnp
fidivrs
insb
mov
jecxz
dec
sub
xor
pop
shr
jmp
call
mov
lock
pusha
xchg
ljmp
sbb
mov
push
in
je
sub
fsubrp
divb
sbb
mov
test
jbe
fdivp
imul
out
add
push
pushl
test
and
dec
mov
inc
in
add
pop
and
mov
pop
mov
jae
xor
repnz
in
pushf
out
xchg
je
and
notb
int3
dec
or
inc
add
or
stos
mov
mov
lret
xchg
xchg
pop
ret
imul
xchg
mov
cmc
add
sub
or
jbe
call
sub
fcoml
bound
adc
cs
call
mov
and
mov
data16
test
mov
lcall
push
mov
daa
adc
lock
daa
xor
int3
cmp
mov
jbe
call
dec
jecxz
rcll
push
cs
aas
in
scas
pop
push
pop
dec
pop
out
pop
jge
xor
jns
sbb
jl
pop
idivb
pop
jecxz
sub
dec
fwait
mov
cmp
mov
cmp
clc
scas
scas
sbb
mov
mov
mov
dec
sub
roll
xchg
xor
fnop
cmp
jae
inc
out
enter
or
ja
aam
inc
inc
cmp
xchg
sbb
lcall
adc
je
movsb
mov
adc
dec
and
dec
or
in
lods
out
ret
fldl
jl
pop
pop
or
inc
sub
jecxz
xor
imul
add
dec
mov
xlat
aaa
lcall
add
lahf
mov
adc
call
shr
lahf
sahf
inc
adcl
sbb
das
lea
imul
jno
adc
je
sub
incl
mov
or
push
cld
cmc
loope
mov
popf
lcall
or
lea
arpl
xchg
mov
dec
out
shll
test
lahf
aam
in
xor
mov
ja
xchg
gs
push
pop
dec
mov
xorw
xlat
push
stc
repnz
jmp
scas
ljmp
sbb
push
arpl
xchg
sbb
divb
insb
fnstenv
leave
mov
dec
xchg
fwait
std
sub
jns
shlb
sbb
xor
mov
fnstenv
cmpsl
movsl
pusha
push
insl
ja
nop
ljmp
fs
push
push
mov
orb
jno
enter
outsb
out
mov
sub
movsb
int
test
lahf
sti
lock
xchg
aas
cs
push
cld
dec
mov
iret
pop
cmpsl
jp
rcrl
pop
imul
stos
mov
add
push
add
cmp
xlat
xchg
cmp
mov
sbb
mov
mov
push
sbb
lret
dec
mov
lock
movsl
bound
dec
jae
insl
ret
sub
xchg
cmpsl
inc
mov
fmull
dec
mov
jno
sbb
cwtl
and
sub
dec
push
mov
shl
jmp
pop
insl
xchg
xor
fptan
cmpl
test
stos
xorl
jnp
scas
jg
jb
push
jno
lret
jl
xchg
or
mov
pop
add
loop
fbstp
scas
jge
sub
jo
adc
popa
xor
cmp
in
int3
test
hlt
add
push
divb
pusha
pop
cmp
flds
pop
nop
inc
jnp
mov
aas
mov
and
jmp
sbb
cmpsb
ficoml
mov
stos
xchg
jns
subb
pop
lret
int3
test
mov
inc
nop
sbb
pop
mov
loop
dec
call
lock
adc
fldenv
shrb
jge
mov
xchg
mov
adc
mov
dec
xchg
pop
lret
dec
ljmp
fimull
nop
inc
xor
sub
xchg
clc
into
jns
inc
adc
inc
pop
adc
xorb
and
mov
lret
mov
ret
or
enter
aas
jmp
outsl
rorb
inc
call
sub
add
lock
mov
repz
nop
push
cmpsl
clc
sahf
dec
aam
mov
bound
push
arpl
out
mov
add
mov
inc
pop
dec
gs
push
outsb
jo
push
mov
ljmp
test
scas
fisubrs
mov
or
les
mov
mov
sub
aam
testb
jge
mov
sbb
inc
cmp
repnz
imul
push
jb
pop
add
adc
push
std
add
pop
inc
or
inc
mov
call
stos
inc
and
cld
leave
and
mov
mov
dec
xchg
movsb
add
push
mov
xorb
xchg
cwtl
cmp
mov
dec
sbb
inc
stos
sbb
test
sub
mov
push
fmuls
rcrl
mov
lods
jo
push
mov
add
pop
es
and
jle
mov
inc
pop
mov
xchg
das
adc
jo
insl
das
fcomip
ret
call
mov
pop
sub
into
mov
call
push
mov
sbb
mov
mov
add
repnz
into
nop
stc
add
cmpsb
mov
mov
pop
call
bound
dec
cmp
add
jo
stos
icebp
cwtl
pop
sahf
mov
in
shll
enter
xchg
lds
incl
xchg
pop
mov
fimull
pop
cmpsb
cmp
push
and
leave
sbb
lret
mov
in
cld
rclb
adc
pop
push
jp
mov
in
inc
in
outsb
inc
je
mov
or
xchg
dec
movsl
into
xor
sbb
sub
aas
imul
xor
ds
lods
lcall
sub
jg
outsl
test
int3
icebp
ljmp
or
sti
in
and
or
push
repnz
leave
cmp
jae
adc
incb
sub
hlt
sub
xchg
mov
fwait
insl
add
xchg
mov
cmp
into
mov
std
mov
lcall
or
xor
test
jle
mov
ljmp
int
or
xchg
test
icebp
mov
xchg
loopne
aam
jae
jmp
cmc
push
cmp
bound
pusha
mov
jmp
lcall
aam
mov
lahf
inc
mov
add
push
pushf
es
ss
cmc
mov
fcoml
jno
mov
push
loope
mov
std
jp
cmc
dec
adc
lods
mov
sti
mov
push
lret
push
popa
aam
movsl
cli
cmp
jne
into
jge
mov
mov
out
mov
push
int3
addl
pop
arpl
push
repnz
jns
or
xchg
sub
aam
inc
and
mov
mov
les
push
stos
push
stos
xchg
int
or
lock
sahf
xor
pop
test
inc
jmp
lods
xchg
dec
xor
pop
cmp
inc
add
mov
daa
shll
jnp
arpl
imul
jmp
mov
xchg
imul
aaa
cmp
out
add
into
or
pop
hlt
add
xor
inc
mov
jl
fs
dec
sbb
testl
sahf
push
xchg
push
add
icebp
pop
xchg
jecxz
adc
aas
divl
pop
xor
popa
xor
int
xchg
inc
ja
movsl
and
cmp
ror
test
ljmp
or
inc
mov
shrb
or
sti
addl
fsubrl
xchg
xor
pop
out
shll
rclb
mov
mov
xchg
xchg
xchg
or
lock
or
push
cmp
pop
xlat
adc
pop
or
xchg
dec
jno
push
into
jbe
push
pop
mov
negl
subb
xchg
loope
xchg
xchg
push
sub
or
data16
xchg
shll
mov
int
sahf
test
lods
and
rcll
js
call
sti
xchg
adc
sahf
jno
add
dec
xchg
movsl
mov
loopne
mov
aaa
xor
loopne
das
out
lret
nop
cmp
pop
add
stc
push
insl
xor
aaa
ficomps
ljmp
adc
sub
lret
in
cwtl
xchg
fldl
or
sbb
pop
dec
shl
fimuls
push
es
fs
sahf
xlat
imul
add
ja
jnp
sahf
lock
pop
push
cmp
xchg
and
scas
mov
adc
mov
pop
rolb
inc
and
mov
pop
lock
into
movsl
popf
and
imul
mov
nop
ja
pop
test
stos
xor
out
jmp
jbe
rsqrtps
push
push
lret
icebp
jns
es
mov
adc
outsb
pushf
push
lret
testl
leave
lods
mov
cld
mov
sub
jae
imul
jl
jb
lret
mov
push
inc
adc
dec
sub
aam
std
mov
bound
adc
leave
add
jl
xor
lahf
jle
outsb
or
mov
adc
iret
repnz
push
mov
push
mov
or
ds
or
jecxz
mov
cmc
movsl
push
jno
or
stc
loop
fs
mov
xchg
jl
icebp
lea
imul
push
mov
out
xchg
insl
jp
adc
or
scas
sbbb
adc
pextrw
jae
pop
fdivrp
jl
fldenv
mov
xchg
iret
test
test
pop
sbb
lea
xor
pop
inc
mov
push
ljmp
stos
mov
sbb
cmpsl
pop
ret
mov
push
sub
lret
sbb
in
inc
cltd
fs
xchg
sbb
mov
pusha
pushf
add
pop
fwait
mov
mov
pop
hlt
jle
insb
stos
push
mov
out
push
dec
nop
ret
fildl
sbb
push
clc
es
push
mov
cwtl
and
sbb
adc
addb
decl
popfw
fs
enter
push
into
movsb
mov
out
sbb
and
mov
push
xchg
mov
movsb
clc
rorb
cld
ficoml
pop
mov
ss
lock
imulb
das
dec
imul
push
push
cli
clc
sbb
mov
or
mov
movsl
mov
stos
mov
fnstcw
in
daa
out
inc
into
je
imul
mov
call
dec
and
sub
jbe,pt
cmp
pop
mov
pop
sbb
fcom
scas
lods
jno
jns
out
mov
add
or
mov
daa
mov
stos
int3
jl
push
das
adc
and
pop
xchg
insb
in
jno
adc
xchg
mov
icebp
pop
mov
pop
push
mov
sub
dec
sub
in
dec
or
daa
mov
xchg
jo
jge
in
aas
jns
cmp
jbe
movsb
cwtl
cmp
sti
xchg
inc
mov
insl
loopne
or
outsl
jle
cmpsb
fstpl
xor
repnz
push
fldenv
xchg
les
bound
and
mov
loope
pop
jp
fsubs
pushf
or
mov
bound
pusha
std
prefetch
outsb
dec
iret
sbb
xor
mov
or
sbb
mov
lds
aam
adc
push
sbb
sbb
test
in
mov
fdivs
sti
and
shrb
sbb
cli
xchg
dec
lds
fs
mov
cmp
out
movsb
ja
cmp
je
sub
js
data16
in
dec
xchg
mov
dec
push
inc
mov
jno
cmc
clc
sbb
imul
jae
mov
sub
mov
mov
and
push
in
fidivrs
xor
inc
xchg
pusha
std
jmp
xor
cwtl
imul
shll
pushl
lock
jbe
add
cmp
jnp
fs
out
movsb
stc
cmp
dec
ds
push
jo
loop
xchg
inc
dec
int3
or
lock
mov
mov
xchg
mov
push
imul
pop
mov
jno
sub
inc
negb
add
ljmp
cs
repz
aad
in
mov
adc
or
movsbl
adc
into
loope
stos
nop
shll
ficompl
sti
pop
aaa
sbb
gs
pavgw
fs
inc
xchg
mov
shl
mov
mov
lea
xor
push
dec
repnz
jno
mov
xchg
mov
js
xor
into
adc
pop
jge
push
in
cmpsb
jb
and
xor
mov
fldt
lcall
gs
repnz
pop
and
sub
int
pop
mov
jmp
and
cwtl
jae
xor
xor
sbb
pop
lret
xchg
test
lcall
stc
push
sbb
ljmp
scas
pop
inc
and
or
cmpb
aas
pop
sub
dec
cmp
dec
pop
xor
add
adc
decl
adc
pusha
or
or
loope
adc
dec
outsl
sahf
push
pop
shll
jb
jae
xchg
repnz
gs
sbbl
loop
aam
mov
dec
movsl
dec
stos
add
mov
repnz
jmp
xor
mov
pop
jp
in
jnp
std
cmp
push
nopl
pop
xor
inc
repnz
imul
jmp
lods
testl
sub
mov
or
add
iret
cmovo
dec
add
xchg
jne
je
sbb
or
cwtl
xlat
clc
sti
pushf
mov
lcall
push
cmp
int
ja
mov
push
popf
push
out
movsb
jo
or
and
aas
stos
mov
repz
idivl
sbb
cli
mov
nop
jne
jmp
dec
and
and
aam
fwait
mov
fsts
movb
fiadds
adc
data16
shlb
loop
aad
sub
jl
fstpl
test
daa
dec
inc
out
pop
jb
sub
cmp
sbb
fisubl
mov
cmp
xchg
add
xchg
cmp
pop
sbb
int
ja
rcrb
and
bound
mov
jbe
or
mov
icebp
out
or
mov
pop
lcall
out
pushf
int3
xor
sti
fs
nop
sbb
sahf
movsl
pop
jmp
idivl
or
mov
imul
jbe
test
fmul
xor
mov
addr16
test
scas
mov
push
sub
jp
jmp
jne
jmp
dec
xchg
mov
xchg
scas
jne
and
cmpb
in
rcrb
adc
rcl
outsb
out
stc
addr16
jl
stos
mov
pusha
adc
insl
jecxz
aaa
pop
sub
sbb
js
fs
insb
jle
fsubl
test
xor
mov
mov
mov
in
and
les
inc
cwtl
xchg
aam
xchg
mov
in
sbb
ljmp
push
adc
mov
mov
loope
jp
sub
xor
mov
icebp
sub
jnp
sub
andl
lahf
cwtl
imul
or
xor
lcall
fistpll
push
jmp
push
xor
mov
fidivs
push
movsl
sub
pop
xor
inc
fs
cld
sbb
sub
sub
subl
xor
pop
pop
mov
xchg
ds
stos
lds
pop
cmp
mov
fcoml
and
cmpl
mov
xchg
movsl
nop
xchg
ja
pop
xor
pop
jecxz
pop
sbb
sbb
inc
rcrb
push
lds
mov
jmp
mov
lds
fnsave
into
arpl
mov
inc
dec
incl
mov
push
and
ds
xchg
push
aas
scas
push
popa
leave
stos
push
ds
xor
sbb
scas
nop
xor
mov
mov
cld
mov
loope
cwtl
xlat
stos
aam
pop
dec
inc
xchg
clc
adc
sbb
sbb
out
je
inc
add
sbb
ret
or
sahf
add
sbb
and
imul
mov
enter
imul
push
inc
push
bound
nop
sbb
imul
imul
mov
ljmp
cmpsb
lods
mov
sahf
xchg
daa
fdivl
mov
add
xchg
sbb
nop
jne
jle
imul
sbb
inc
and
mov
sbb
imul
out
pop
sub
push
movsbl
mov
pop
jno
outsl
push
lret
mov
xchg
jo
insl
inc
lds
xor
adc
movl
cli
shl
xlat
or
cmp
adc
icebp
or
stos
js
jg
ret
pop
shll
adc
rcll
stos
lods
ds
pusha
fcomp
jecxz
inc
cmp
sub
subb
cwtl
add
adc
pop
jne
push
xchg
out
push
rclb
mov
repz
pop
aam
and
rcll
movsb
daa
clc
mov
es
adc
dec
aaa
hlt
mov
or
mov
adc
ja
push
testl
imul
adc
mov
cmp
mov
lods
movsl
int
dec
sbbl
inc
jb
pushw
rorb
int
xchg
cld
push
mov
ja
aad
fwait
int3
sub
rcr
cmc
movsl
or
jo
inc
inc
dec
adc
dec
or
jne
out
mov
jge
or
mov
mov
out
jecxz
adc
jae
fidivrs
push
dec
and
jg
dec
adc
xor
xchg
shll
push
dec
sbb
daa
mov
xchg
cmp
out
xchg
outsb
test
dec
push
arpl
mov
mov
or
sub
ljmp
add
dec
imul
xor
out
push
inc
push
fisttpll
enter
cwtl
adc
or
inc
aas
stos
fmuls
mov
ficompl
movsb
mov
pop
lods
ljmp
lods
fmul
nop
into
scas
inc
imul
test
dec
sbb
mov
jge
aad
and
xor
lds
cld
ljmp
dec
push
sub
pushf
jae
test
shll
add
lds
hlt
mov
pop
sub
pop
jns
xorb
jae
in
mov
lret
addl
mov
shlb
into
loopne
jae
jge
cli
out
mov
sbb
jecxz
mov
lret
test
arpl
sub
icebp
lret
inc
cld
xchg
mov
andl
cmpsb
cmp
push
mov
pop
hlt
inc
mov
dec
inc
hlt
rcrl
push
push
test
xor
jb
push
ret
jns
mov
arpl
js
mov
add
mov
or
pop
xor
mov
cmc
negb
pusha
inc
cmc
sbb
ret
sbb
outsb
mov
pop
pop
or
sbb
pop
adc
lret
out
test
push
jae
jno
lock
xchg
jo
iret
xor
push
ffree
mov
jno
ja
jns
mov
inc
fdivrl
loopne
cmp
iret
jge
int3
sbb
out
lods
or
pop
cmp
push
jecxz
pop
test
outsl
push
les
fnstenv
dec
add
scas
lock
in
xchg
dec
test
pusha
xor
sahf
arpl
pop
in
xchg
adc
inc
gs
ljmp
cmc
add
data16
sbb
idiv
lahf
aam
jg
shrl
xchg
insb
aad
lret
orl
inc
out
imul
in
scas
cs
test
sbb
pop
sbbb
pop
cmpsb
sub
adc
stos
in
add
data16
add
xlat
jl
cmc
mov
mov
scas
xchg
inc
aad
ja
jns
xchg
outsb
cmp
pop
scas
shrl
add
test
dec
test
mov
sub
clc
adc
shl
add
out
sub
mov
jo
fcomp
pop
dec
cmp
jno
dec
inc
cmp
fwait
popf
loope
das
inc
inc
loopne
jne
cmpsb
ret
or
popf
into
fsubs
arpl
imul
rcll
in
rcr
lock
sbb
mov
movsl
or
sbb
cmp
or
lret
cmpsl
xchg
stos
popw
jecxz
adcb
subl
dec
out
cmpsl
mov
mov
jae
mov
orb
or
nop
mov
push
pop
lea
dec
xor
rorb
cmp
aas
daa
int3
xchg
add
mov
sahf
push
jecxz
xor
cmpsb
mov
gs
into
pop
arpl
jp
jle
mov
adc
push
cmp
dec
stc
xchg
push
mov
out
ds
xchg
mov
mov
stos
adc
pop
pop
ficoms
add
sub
mov
sub
insl
mov
andb
ja
gs
push
inc
sbb
lahf
daa
stc
out
xchg
add
sub
and
xor
adc
pop
or
out
push
lcall
push
xchg
mov
or
lret
mov
jnp
push
jg
pop
fbld
dec
xorl
dec
dec
iret
jo,pt
mov
test
jmp
imul
adc
hlt
scas
jl
loop
jns
and
xor
ror
pop
mov
ja
sub
arpl
jl
hlt
mov
pop
jmp
dec
push
daa
pushf
pusha
push
cmp
lods
cld
mov
in
dec
pop
mov
into
fwait
scas
inc
test
and
popf
inc
les
mov
stos
push
mov
movb
cltd
mov
data16
pusha
test
jo
jae
lea
in
shll
jmp
pop
je
ds
icebp
pop
cmpsb
pop
push
pop
pop
lods
lock
cmp
popf
cs
in
cltd
adc
sub
mov
push
mov
sbb
push
pusha
enter
pop
and
lds
mov
cmp
inc
pusha
cmp
outsb
out
movl
mov
dec
or
std
jo
pop
data16
or
push
lods
adc
ds
adc
inc
pop
dec
pop
mov
dec
fstpl
rcl
lods
pop
jmp
pushf
xchg
test
test
xchg
sub
push
inc
popf
int
add
sub
dec
data16
out
and
clc
iret
cmp
jp
jge
inc
or
movb
jmp
arpl
mov
das
mov
mov
mov
lret
stos
inc
imul
aad
cmp
popf
repz
cmp
enter
inc
mov
shlb
cld
cmp
sbb
fmull
pusha
mov
incb
fcomi
pop
cmp
adc
push
jbe
movsl
pop
push
movsb
int
adc
sub
mov
ror
nop
imul
leave
arpl
out
fiadds
pushf
test
add
sbb
jb
jge
lcall
iret
imul
push
mov
push
stos
adc
cmp
pop
jae
insb
mov
sbb
sahf
fisubs
adc
and
add
jne
repnz
leave
and
adc
and
adc
jbe
jp
sti
mov
dec
fwait
xchg
js
sbb
adc
mov
insl
insb
sahf
call
and
cmp
dec
mov
and
bound
mov
mov
punpcklbw
addr16
mov
jo
int
pop
stos
pop
popa
inc
int
test
add
jg
enter
mov
sbb
icebp
cmpsb
mov
pop
inc
lea
xchg
pop
and
sbb
mov
add
cmpsl
jl
inc
push
xor
out
cli
and
cmp
cs
pop
mov
stos
xchg
call
jae
add
dec
sub
push
stc
xor
iret
adc
popf
popa
insb
aam
push
push
clc
cmp
pusha
mov
loopne
jnp
and
iret
enter
clc
or
push
add
stos
out
xor
adc
icebp
lds
xchg
mov
stos
fidivrl
inc
mov
mov
xchg
mov
std
jbe
gs
push
std
push
inc
and
adc
rcr
int3
addr16
bound
pop
sub
loop
push
rcrb
jno
cmp
jp
addr16
sti
repz
mov
inc
xor
outsb
mov
push
sub
ret
fs
lods
popf
ret
je
mov
cmc
int
mov
push
or
std
push
mov
repz
sub
pop
nop
pop
ds
aad
inc
mov
lods
dec
push
sbb
mov
inc
test
mov
add
mov
mov
push
pop
lret
xchg
out
or
mov
or
jo
push
mov
cmp
jbe
jmp
jg
dec
lods
mov
jae
xchg
insl
sbb
dec
out
pop
pop
stos
dec
in
or
sbb
and
pop
ret
test
dec
cmpl
xchg
pop
or
inc
cmpsb
inc
xchg
fisubl
sub
or
in
scas
je
mov
mov
es
mov
div
xorl
loope
sub
outsb
lret
bound
mov
testl
lret
jae
icebp
mov
xchg
test
jae
stos
stos
int
xchg
pushl
sbbb
lods
fstpl
cmp
and
inc
dec
jmp
push
push
repnz
mov
inc
add
mov
in
push
sti
pop
arpl
xor
xchg
outsl
xchg
add
or
iret
int
imul
jae
fsubl
cld
sahf
mov
cmpsl
mov
insb
mov
sub
inc
and
dec
inc
mov
fdivl
adc
fdivrl
mov
mov
mov
cmp
fmul
cs
pop
push
in
imul
cltd
test
testl
dec
mov
push
xor
lret
inc
pop
clc
mov
inc
out
stos
jle
lret
es
sbb
xor
rcl
aad
es
sbb
cmp
cs
jg
fsts
jecxz
jmp
sbb
pop
sahf
out
data16
xchg
ror
sbb
push
sbb
mov
mov
xchg
clc
jge
mov
push
shll
and
adc
pop
and
and
adc
psrad
sub
movsl
icebp
mov
mov
mov
push
jl
pushaw
int
push
cmp
mov
push
pop
dec
add
out
lea
icebp
fs
in
pop
mov
push
and
popf
in
fs
sub
stos
aad
or
adc
pop
ret
test
shll
mov
mulb
cmp
iret
pop
sbb
add
pop
shll
mov
adc
mov
loope
sbb
clc
jg
arpl
jmp
sbb
sbb
sub
jae
fcomps
inc
jns
mov
xor
cmp
adcb
cli
lock
xor
movsb
clc
das
mov
jae
adc
out
adc
jns
sub
sbb
jmp
mov
mov
sub
push
rcll
in
dec
in
mov
mov
cli
js
cmpsl
orl
imul
sahf
mov
xor
gs
pop
pop
das
jns
mov
and
loope
xor
add
mov
xor
add
clc
cli
out
xchg
jno
orl
mov
nop
inc
cltd
inc
dec
mov
jp
out
out
rcr
test
repz
or
or
cmp
insl
fstps
in
mov
or
mov
repz
gs
insl
fbld
sahf
fwait
sbb
xchg
sti
sub
cmp
fmull
ljmp
push
dec
pop
in
and
push
cs
mov
movsb
mov
clc
loop
dec
cmc
pop
aaa
add
mov
movsl
rcl
popf
mov
insl
push
mov
jb
jg
and
lock
jb
sub
add
lahf
outsb
sbb
imul
cltd
cmp
mov
xor
popf
neg
add
ret
add
dec
add
lcall
and
pop
adc
sub
leave
add
hlt
push
dec
mov
cmpsl
push
inc
push
mov
popa
ret
inc
ds
push
mov
cld
enter
imul
cmp
or
pushf
movsl
jb
xlat
mov
xor
push
dec
add
xchg
es
xchg
push
scas
sbb
das
movsl
xchg
out
leave
add
arpl
aad
sbb
jb
in
mov
sarl
out
stc
dec
or
mov
std
cltd
and
dec
test
sub
pop
mov
mov
repz
pop
sbb
mov
adc
dec
jmp
out
fmuls
fisttpll
in
pushf
jl
jbe
ret
jae
cmp
imul
lods
in
fsubp
int3
aas
lcall
xchg
addr16
cmp
arpl
lea
jo
fsts
lods
xor
in
rolb
xorb
loopne
call
das
cmp
js
or
sar
out
mov
lods
and
ljmp
pop
mov
setl
jmp
mov
pushl
outsl
and
push
fdivrs
cmc
jmp
inc
mov
fsub
xor
mov
push
insl
add
outsb
push
xor
mov
xchg
fisubl
pop
mov
dec
and
jl
ret
adc
sbb
es
mov
shll
adcl
jmp
shlb
insb
std
or
dec
add
mov
mov
or
cmp
out
jl
xchg
pop
mov
xchg
icebp
cmp
sub
jp
xchg
aas
test
cmp
stos
mov
nop
push
xchg
testb
xor
inc
movsb
fs
inc
outsb
rol
xchg
fnop
pop
enter
and
ficoms
jnp
xchg
hlt
pop
push
cmp
pop
xlat
ljmp
pop
in
fimull
jnp
aad
call
xor
mov
add
sti
mov
sbb
ljmp
cli
or
push
int
shlb
movsb
push
rcll
inc
inc
loopne
adc
cmp
dec
add
mov
imul
xor
and
pop
imul
pop
flds
fstpl
out
jne
inc
dec
xchg
adc
pop
cmp
ds
insl
ljmp
test
inc
in
pop
lea
mov
and
clc
xchg
sub
xchg
mov
pop
adc
stc
cmpsb
dec
scas
pop
add
sbb
and
push
inc
shr
outsl
in
mov
xchg
jmp
ret
add
xchg
mov
test
jge
xor
in
fcomip
lcall
add
or
cmpsl
outsb
ds
inc
lock
push
pop
push
hlt
lret
sub
movsl
scas
and
sbb
xchg
pop
lret
outsl
cs
test
repz
stos
bnd
ja
pop
cmp
xor
insb
sahf
adc
jb
sbb
adc
in
sahf
imul
mov
pop
pop
aad
mov
add
loop
dec
fdivr
mov
gs
mov
aas
cwtl
loope
fcomip
pop
adc
xchg
int3
fistpl
ljmp
add
lret
jp
adc
add
jnp
test
cvtdq2ps
cmp
mov
outsb
lcall
add
cmp
lcall
lods
dec
test
mov
mov
hlt
adc
inc
xor
inc
das
push
cli
mov
imulb
rorb
leave
sbb
inc
mov
mov
sub
ficoml
xchg
ret
xor
sbbb
mov
fadds
cmp
cmp
je
xor
lods
mov
sbb
push
ss
imul
cmp
xchg
flds
add
pop
push
add
gs
stos
mov
pop
orl
dec
push
adc
lock
out
mov
or
insb
imul
lcall
adc
out
and
inc
sahf
jne
fdivrs
adc
dec
cmp
xchg
cmp
in
sbb
adc
xchg
jno
inc
inc
fidivrs
mov
mov
clc
loope
js
ret
pop
jl
sbb
lcall
imul
dec
in
adc
lcall
out
push
sbb
pop
mov
fwait
push
mov
jb
fadds
cmpl
mov
scas
push
jne
sbb
dec
or
daa
or
inc
pop
jl
sub
mov
mov
fs
dec
xor
mov
out
imul
sub
dec
xchg
roll
clc
pop
scas
pop
cltd
or
push
dec
test
fisttpll
jg
ljmp
mulb
inc
rclb
testl
decl
inc
mov
sbb
cmp
lcall
daa
outsl
mov
xchg
pop
ud2
jge
mov
ret
jnp
jno
out
lcall
and
sarb
fs
loopne
fucom
int3
add
xchg
das
mov
bnd
test
or
addr16
mov
leave
pop
stc
and
jb
idivb
mov
std
mov
scas
loope
adc
adc
aam
pop
sbb
fmuls
sbb
lret
mov
adc
mov
xchg
jl
sbb
inc
rolb
sbb
jb
sub
adc
ret
xor
jo
outsl
push
sahf
mov
ret
mov
iret
in
orb
rcll
sahf
cmp
ja
jne
or
cmp
sbb
xor
rorb
jno
cmp
mov
jecxz
fmulp
enter
out
or
jb
mov
jnp
push
mov
adc
outsl
or
xchg
sbb
inc
xlat
add
sbb
sbb
and
cld
je
push
jnp
lret
cli
enter
cltd
lock
rol
and
das
push
jo
pop
jns
sub
xor
js
cmc
jo
mov
mov
jns
add
loope
jo
call
cmc
cmp
inc
mov
js
out
int3
incb
std
fdivs
aad
or
arpl
jecxz
mov
test
stc
ss
pop
ficomps
stos
lods
xchg
pop
mov
jno
iret
push
int
xor
jl
gs
std
scas
sti
out
hlt
mov
xor
scas
iret
mov
andl
dec
outsb
or
inc
cmp
jg
push
js
inc
dec
or
sti
daa
addl
or
mov
imul
shrl
lock
inc
andb
cmpsb
sar
lds
iret
out
es
insb
popa
test
dec
sbbb
fcoml
pop
mov
es
jno
mov
scas
lods
insl
mov
cmp
jl
lods
hlt
mov
cmp
mov
mov
cmp
jge
popa
mov
arpl
enter
push
and
mov
jle
aaa
dec
fistps
sbb
ljmp
hlt
pop
mov
mov
test
cmp
or
push
pop
or
cwtl
icebp
mov
fists
xlat
sets
dec
dec
xorb
mov
je
jns
cwtl
mov
sub
xchg
jle
sbb
push
int
pop
lock
and
cli
xchg
je
in
cmp
roll
adc
in
outsb
imul
enter
out
or
cwtl
mov
cmc
pop
addr16
dec
pop
cwtl
adc
xlat
push
cmp
add
lahf
lret
stos
shrb
fidivrs
loope
pop
mov
nop
incl
flds
cmp
aaa
push
mov
mov
out
sbb
pusha
xor
pop
pop
ja
dec
aaa
add
dec
adc
cmp
enter
pushf
loope
xor
dec
inc
dec
fs
stos
out
cmp
jbe
repz
out
jno
mov
cmp
lret
mov
push
loop
or
xor
imulb
mov
in
push
out
loop
lea
mov
lods
or
mov
sbb
or
jnp
sub
dec
mov
mov
or
adc
sbb
adcl
mov
push
mov
mov
xchg
lret
imul
jno
mov
mov
outsb
add
sub
daa
nop
mov
cli
mov
or
arpl
out
call
neg
pop
cmp
mov
xor
pop
jg
divl
loope
push
add
mov
and
sahf
sub
add
push
mov
push
push
icebp
jp
pop
mov
sub
test
jecxz
shrl
repz
add
fistl
mov
mov
push
inc
jl
pushf
mov
lahf
pop
cltd
sbb
jne
lds
add
add
or
ret
jmp
popf
pop
mov
adc
fstl
int
xor
cli
adc
addr16
xchg
sbb
dec
icebp
aaa
and
mov
mov
addr16
out
mov
cmpsl
jle
sbb
movsb
inc
loop
xor
cs
pop
xor
fisttpl
or
mov
add
aas
mov
xchg
jp
cld
jae
push
push
lds
push
dec
dec
inc
movq
clc
insl
rcl
inc
sub
mov
dec
ret
jecxz
ret
aam
lcall
cmp
sbb
jo
mov
pop
repz
mov
cld
push
int
loop
out
mov
xchg
adc
push
arpl
mov
lods
pop
jnp
lds
outsb
into
inc
fst
sahf
jge
or
pushf
push
hlt
push
cmp
mov
ja
mov
aam
pop
adc
flds
inc
pop
stos
leave
adc
push
aam
mov
lock
cs
jae
xchg
cli
shlb
mov
adc
imul
push
loopne
lcall
daa
cltd
push
mov
int
inc
lahf
pop
push
lahf
jns
rolb
shrb
das
dec
and
lcall
lea
xchg
mov
fcmovnu
pop
aaa
pop
data16
mov
test
divl
pop
inc
sti
jmp
sbbl
jmp
adc
ja
cli
inc
rorl
jp
push
test
push
pop
xchg
inc
andl
sbb
shrl
lock
out
out
inc
dec
insl
add
call
out
nop
pop
dec
aaa
sbb
out
xchg
push
adc
fistps
xchg
std
cs
mov
call
mov
jg
dec
insl
test
shrb
mov
or
adc
sub
pop
cmpsl
sub
shr
shrl
mov
cmpsl
fdivl
inc
adc
rcrb
dec
mov
and
xchg
xchg
call
test
or
pusha
mov
and
mov
mov
leave
pop
fnstcw
mov
xor
mov
les
testl
ds
xor
dec
sahf
ja
cmp
outsl
cmpsl
int3
jmp
mov
xor
xor
aas
stc
cmp
xor
pop
inc
out
fwait
jb
sti
dec
jp
enter
push
inc
rol
gs
cli
gs
inc
stos
mov
mov
loope
fcompl
push
lods
mov
aam
cmpl
adc
sahf
jl
xchg
mov
lods
and
jecxz
aas
and
mov
cwtl
add
push
mov
mov
insl
cli
stc
sti
daa
jbe
out
jne
mov
out
jnp
and
inc
cmp
lods
sub
and
xchg
push
and
cmp
fucomp
add
pop
cli
or
ds
lock
int
add
out
outsb
mov
and
jmp
les
pop
jecxz
rclb
sbb
rolb
cmc
insb
outsl
push
fildl
push
popf
dec
mov
mov
pop
dec
inc
jbe
rclb
and
adc
insl
int3
sbbl
xor
or
xor
stos
inc
or
fbstp
mov
arpl
xor
xchg
leave
cs
out
clc
sub
lods
sub
dec
fadds
das
jge
jbe
or
sbb
icebp
add
pop
adc
movsb
push
jle
testb
fldl
arpl
sbb
addb
test
ret
negl
pop
call
cmp
adc
push
pop
gs
sub
pop
loope
fsubrs
push
fsubrl
ds
xchg
ret
mov
loope
xchg
or
sub
daa
add
dec
pop
mov
or
sub
xchg
aas
loope
js
xchg
pop
push
sbb
and
in
ret
jle
jo
sar
sub
fsubrl
dec
xchg
push
or
shlb
mov
add
dec
lods
shr
movsl
stos
sahf
push
lock
lahf
sbbl
jne
loope
stc
aas
imul
and
xor
inc
jne
mov
and
ret
pushf
push
stc
dec
int3
mov
lahf
push
loope
fcom
ss
imul
in
xor
iret
push
stos
mov
das
jmp
bound
xchg
icebp
rol
jmp
xor
xor
bound
js
cld
jg
push
cmp
fldl
sub
test
test
cld
scas
jno
fistl
jno
pop
cmpsl
or
dec
insl
and
push
cmp
cmc
sub
mov
mov
sub
jne
scas
push
jo
pop
popf
xchg
rol
in
xchg
mov
xchg
mov
xabort
mov
adc
xchg
sbb
sar
or
cs
cmp
inc
adc
cmp
or
cmp
inc
sub
jbe
mov
in
je
int
rcrl
cli
mov
xchg
pop
inc
and
sub
sahf
gs
xchg
shll
imul
mov
cld
jmp
sbb
test
cmp
cmpsb
push
test
fistps
pop
mov
mov
mov
fs
aaa
push
pop
sub
das
cmp
daa
jns
jl
pop
xor
data16
mov
loopne
sub
fsubl
stc
adc
fdivrs
fs
es
lret
shl
dec
in
cmpsl
in
ss
mov
inc
and
pusha
popl
mov
jb
mov
fmull
xor
xchg
int3
sbb
lea
add
push
or
add
jb
add
dec
mov
jns
nop
jbe
adc
insb
orb
jle
mov
leave
scas
mov
outsb
xchg
mov
inc
minps
dec
stc
fnstcw
dec
loop
fwait
jno
std
iret
stos
hlt
test
add
inc
shrb
lret
imul
dec
je
lret
dec
pushf
stos
push
lahf
mov
pop
ds
xchg
pop
and
adc
xchg
xchg
pop
xor
inc
pop
out
push
xchg
cld
xor
ret
je
xor
bound
cmp
or
dec
xchg
xlat
mov
cmpsl
and
sub
shl
sub
les
movsl
pop
outsl
jne
sbb
rclb
jnp
mov
add
out
push
leave
ds
lods
in
lahf
aaa
dec
shr
shlb
add
jno
push
divl
or
int
mov
push
mov
out
out
ret
cmc
dec
test
lods
jnp
mov
out
orb
ja
loope
inc
add
dec
mov
mov
pop
xchg
clc
cmp
aaa
je
lock
cli
fmull
inc
mov
xchg
jecxz
into
cwtl
cmpb
pop
dec
inc
insl
int
inc
mov
push
adcb
adc
rcrl
inc
mov
inc
xchg
xlat
ja
rorb
sub
into
out
hlt
stos
xor
dec
ret
xchg
dec
shll
rolb
adc
rol
push
or
cli
sub
xchg
dec
das
add
sub
cmpsb
sbb
shrl
or
mov
shrb
lret
sbb
in
lret
test
data16
insb
jbe
lds
jne
inc
hlt
jns
jmp
and
int3
sub
xor
sarb
inc
xchg
cmc
stos
pusha
xor
mov
push
cmp
mov
jmp
jge
ja
je
push
sbb
xor
jno
cmp
movsl
mov
int
push
jno
adc
out
call
xchg
xchg
push
call
out
and
es
jo
adc
int3
jo
cmpsl
ds
push
mov
xor
inc
mov
popf
outsb
in
sub
imul
sar
xchg
rorb
sbb
push
mov
jge
loop
sahf
test
and
mov
and
mull
jne
arpl
pop
scas
jno
test
repz
cmpsl
inc
adc
stc
and
xor
roll
add
into
sub
rcll
mov
push
dec
pushf
sbb
mov
pop
int3
repz
dec
repnz
icebp
in
pushf
das
test
mov
aas
pop
mov
ret
ret
sbb
outsl
inc
rcr
out
in
pop
or
imul
mov
andl
or
sub
shlb
loope
addr16
in
push
mov
cli
data16
loope
pop
cmp
adc
out
push
loop
leave
push
and
mov
xchg
sahf
and
insb
lahf
in
push
lcall
jp
bound
xor
pusha
mov
xor
inc
daa
mov
or
jns
aam
aaa
push
jo
jmp
inc
and
in
out
sti
cmp
movsl
inc
subl
test
inc
ja
mov
ret
push
pop
fptan
add
mov
dec
and
inc
insb
bound
mov
or
push
arpl
mov
mov
inc
arpl
pop
pop
mov
xchg
dec
push
mov
add
outsb
popa
sbb
movsb
xor
mov
scas
jmp
mov
mov
add
push
mov
fsts
imul
sub
pop
iret
push
xchg
mov
cmp
out
sarb
scas
sbb
fsubl
push
pop
lods
inc
das
outsl
inc
mov
imul
adc
pop
inc
sbb
outsb
xor
fistl
in
rcl
imul
mov
dec
insl
outsb
in
into
lahf
sbb
xchg
outsb
push
call
dec
add
add
aas
xor
outsl
sbb
xor
jns
cld
push
rcl
cmpxchg
outsl
int3
sbb
out
fnstenv
inc
pusha
xchg
mov
cli
cld
sti
jnp
sbb
adc
loop
mov
add
imul
or
cmc
pusha
cwtl
pop
push
xchg
outsb
mov
xchg
mov
sub
and
cltd
pop
test
fmull
add
sub
or
and
in
sbb
xchg
enter
push
repnz
mov
aam
scas
push
andb
data16
cwtl
repnz
cmc
pusha
cs
loop
xchg
call
push
mov
adc
repnz
xor
sbb
mov
add
int3
push
inc
repz
inc
insl
imul
and
push
decl
cs
mov
xchg
loope
cmp
sarl
jns
iret
cmp
mov
rcrl
cld
sub
cmp
mov
adc
pop
cmp
lods
ss
mov
es
ret
mov
icebp
ret
sbb
cmp
mov
stos
push
dec
add
adc
pop
nop
jmp
mov
lock
and
xlat
mov
adc
sbb
out
adc
nop
dec
test
scas
push
push
sarl
test
mov
mov
xor
cs
mov
pop
dec
push
cmp
adc
adc
int
mov
xchg
or
scas
lea
sub
dec
aaa
mov
nop
arpl
into
mov
sbbl
mov
adcb
fimull
fnsave
icebp
addr16
xchg
xchg
jo
fimull
xchg
mov
clc
mov
jae
inc
addr16
repz
cmc
je
pop
mov
pop
inc
pop
jnp
jo
cmc
mov
push
lods
adc
pusha
lods
orb
leave
push
cmp
pop
or
andb
mov
and
inc
or
ljmp
jnp
lret
jns
pop
out
xchg
ljmp
inc
jo
adc
adc
dec
dec
add
rcrl
dec
and
and
xor
inc
fs
sub
leave
push
shl
nop
loopne
xchg
inc
cmp
pop
inc
pop
addr16
mov
dec
sbb
dec
inc
and
in
cmp
imull
fwait
arpl
outsb
xchg
sbb
ljmp
mov
push
jnp
leave
inc
mov
pop
or
push
mov
and
sub
cld
and
jge
xchg
push
sbb
push
sbb
mov
cmp
dec
repnz
hlt
mov
out
rcrb
daa
dec
mov
ds
arpl
cmpsl
xchg
stc
mov
jl
xchg
adc
pop
mov
sbb
sub
dec
fdivp
loop
pop
xchg
sbb
cmp
mov
aam
stos
mov
inc
fmul
dec
repnz
fbstp
lcall
jle
xchg
outsb
out
fldl
and
aad
data16
rol
mov
mov
repnz
aas
pop
cld
inc
pop
push
ret
dec
mov
sahf
cltd
mov
movsl
sub
xlat
inc
sbb
test
sahf
and
icebp
mov
and
std
imul
mov
out
mov
mov
divl
dec
mov
push
roll
sti
pop
imul
lcall
jnp
cmpsb
ljmp
jmp
popa
sbb
xchg
enter
push
ficomps
xor
and
mov
call
xor
pop
lods
xor
xor
mov
out
jbe,pn
push
pop
xor
jnp
and
mov
into
sub
cmpsb
mov
sub
add
pop
sub
aaa
xor
xor
add
fwait
fwait
sub
jbe
or
lods
jl
cltd
jg
xor
or
mov
mov
js
loopne
sbb
pushf
ficoms
sbb
xor
sub
addb
or
shlb
clc
sbb
idivb
mov
test
push
cmp
add
repz
test
lcall
std
lret
fnstsw
and
mov
adc
or
lods
je
lret
adc
ret
sbb
rcrb
jmp
cltd
aad
xlat
push
or
mov
xchg
and
mov
out
das
test
xor
push
mov
repnz
lods
out
jb
jl
ljmp
shrl
stos
mov
adc
push
in
fimull
unpckhps
mov
imul
sar
jnp
out
pop
repnz
fidivrs
adc
fmuls
int3
fnstsw
mov
jle
sti
mov
das
dec
push
jae
xchg
and
out
and
sub
outsl
lret
xor
add
cmpsl
pop
sbb
setno
mov
test
pop
nop
decl
or
jp
push
and
mov
sub
sbb
arpl
sub
sub
mov
rcrb
and
out
cs
inc
mov
call
push
jmp
mov
mov
rolb
pop
es
jle
mov
cwtl
jl
or
int
adc
fldcw
or
mov
inc
or
pushw
sbb
xor
bound
mov
ss
sub
push
or
shrb
scas
test
push
xor
test
rclb
cmp
dec
repnz
cmc
inc
fwait
ss
lahf
push
add
arpl
xor
bound
lret
sbb
sub
add
and
xor
mov
sahf
movsb
imul
je
insl
in
mov
inc
sbb
ret
ficompl
les
jle
lods
pop
adc
in
mov
jecxz
es
xchg
std
mov
inc
pop
lds
pusha
dec
test
daa
pop
addr16
sbb
mov
pop
push
add
mov
pop
js
lds
insl
cwtl
lret
dec
out
xchg
fistpll
dec
cmpl
jle
test
pushf
jne
inc
cmp
jno
lea
mov
add
js
lahf
jecxz
or
inc
ljmp
pop
mov
sti
dec
seta
nop
ret
mov
push
fldl
lahf
into
stc
loop
cmp
xchg
sbb
jl
loop
ficompl
out
mov
in
jg
push
jl
push
sub
dec
ret
jno
jmp
pop
push
pop
push
jne
inc
fcoms
mov
arpl
sbb
sbb
iret
in
mov
jle
test
add
xor
xor
test
sbb
les
ret
arpl
pop
call
lahf
or
cld
out
fsubl
fbstp
push
jno
std
cwtl
ja
add
cwtl
idivl
xchg
mov
mov
pop
mov
ret
pop
cwtl
inc
cmpsl
and
cmp
pop
and
jecxz
jnp
jne
not
popa
xor
jnp
mov
addr16
test
pop
xor
mov
cld
sbb
mov
mov
popa
in
pop
rclb
je
stc
and
cltd
pop
jo
iret
pop
jmp
pop
sbb
lcall
push
xor
cmp
add
or
lock
xchg
shrb
ds
sub
pop
mov
and
cltd
scas
mov
es
cmpsb
sbb
mov
sub
mov
in
cmp
popa
pop
dec
shlb
addr16
mov
mov
enter
jle
out
push
orb
xchg
cmp
pop
xchg
mov
pusha
mov
stos
cmp
jne
mov
rcr
cmp
mov
mov
sub
inc
lods
mov
dec
in
mov
into
mov
cmp
dec
xor
push
xchg
fwait
dec
lahf
or
je
and
adcl
xor
lods
inc
in
cli
cmpsl
lahf
loope
imulb
pop
push
std
pop
faddl
insb
mov
fildl
dec
fists
cli
pop
push
push
add
loop
mov
xor
or
ja
adc
shrb
cltd
repnz
and
cmp
sbb
pusha
mov
sbb
push
shrb
fmul
sahf
xor
sbb
mov
add
dec
cmc
sub
into
jo
and
mov
xor
inc
xchg
mov
lcall
add
pop
push
ja
stc
dec
leave
mov
sub
imul
int3
push
xchg
push
fisttps
imull
cmp
hlt
fs
iret
daa
sbb
jno
repnz
loope
add
mov
inc
push
adcl
and
movsb
push
call
xchg
sarb
mov
cmp
cmc
insl
pop
mov
mov
in
adc
push
lods
or
test
mov
icebp
clc
popf
inc
pop
das
sub
mov
dec
lahf
fcmovnb
test
outsl
lds
frstor
repz
dec
out
and
or
adc
push
ljmp
mov
xor
in
lcall
jne
jmp
repnz
stos
adc
add
sub
aas
pop
lock
lea
adc
push
aam
lods
jmp
scas
sbb
adc
out
stos
pop
lea
sub
ret
dec
lock
lret
and
dec
jbe
add
cmp
stos
xchg
lahf
shll
das
in
pop
mov
push
lea
jnp
jp
inc
shlb
lcall
pop
xor
inc
sbb
pop
aas
inc
cltd
pop
mov
nop
popa
mov
jle
mov
xlat
mov
inc
xchg
mov
inc
push
cmc
hlt
and
or
inc
mov
call
xor
insb
sarb
popf
pop
pop
cmp
outsl
testl
cmpsl
nop
mov
leave
sbb
cmp
fildl
insb
adc
xchg
subl
outsb
jnp
adc
cli
stc
push
sub
aam
in
inc
cmp
into
imul
sub
mov
imul
jbe
mov
rcll
sbb
mov
lea
out
sub
pop
push
ret
pop
jle
pop
xor
dec
mov
xchg
or
sbb
push
hlt
je
dec
in
idivl
cmpsb
js
push
in
fistpl
test
adc
lcall
jae
pop
lock
bound
or
ret
js
xor
adc
xchg
enter
pop
xor
push
xchg
push
lods
xor
aas
add
xchg
outsl
cmp
bound
jmp
push
push
xor
jae
inc
test
ds
fcomps
xor
daa
mov
test
inc
mov
rcrl
aaa
pop
pop
mov
or
adc
outsb
clc
mov
stos
cmp
adcb
pop
aam
pop
faddp
mov
cmc
xchg
pop
push
mov
jg
mov
repnz
xor
sub
and
dec
in
lcall
cmp
out
mov
mov
or
or
push
mov
xchg
mov
lahf
pop
lret
push
fsubs
jp
scas
mov
sub
aaa
jp
push
inc
xchg
sbb
fcoms
inc
lahf
jbe
addb
mov
movd
mov
lret
imul
std
shl
nop
int
std
ret
ja
mov
add
stos
mov
les
inc
outsl
pop
call
pushf
call
aad
xchg
push
xchg
push
jb
movsl
push
insb
test
add
in
adc
jg
push
div
div
xchg
int
and
enter
lea
cmpsb
mov
dec
push
es
xchg
loope
sub
push
mov
scas
sub
dec
sub
mov
xchg
cwtl
jae
add
ret
in
das
mov
inc
push
jno
ret
push
and
mov
sbb
jbe
mov
mov
adc
mov
in
loope
lahf
loop
xor
pusha
inc
mov
mov
loope
xor
les
call
fcoms
mov
cmp
repnz
sbb
jbe
cmpl
movsl
les
xchg
scas
ljmp
out
cld
js,pt
lods
and
jne
mov
mov
sub
sbb
sbb
notb
sbb
adc
scas
adc
and
inc
add
hlt
fwait
negl
or
mov
sbb
sub
pop
leave
mov
fcmovnbe
mov
out
mov
sub
mov
mov
in
cld
fs
pop
ffree
in
ljmp
and
ss
and
fdivr
add
int
dec
dec
add
mov
pop
add
inc
decl
cmp
in
pop
xchg
in
lahf
sub
rol
cwtl
mov
mov
lahf
mov
lods
push
sbbl
and
mov
fildl
jmp
sub
movl
das
jmp
stos
xor
ljmp
subb
stos
mov
mov
in
decb
push
js
arpl
pushf
mov
sbb
push
mov
fstpt
jle
pop
adc
cmc
jns
inc
mov
test
arpl
cmp
aad
cld
cld
sub
mov
lods
jns
rcrb
or
nop
std
insb
push
sbb
xchg
scas
aam
jge
aaa
add
jne
mov
aad
loop
xchg
jae
int
mov
mov
cmpsb
sub
je
sarb
jnp
in
pop
mov
bound
cmp
add
in
add
sbb
jno
das
dec
add
insb
add
jne
dec
xor
rolb
nop
ficoml
and
xchg
mov
test
mov
and
xchg
sub
or
dec
fs
mov
pusha
ds
adc
imul
mov
pop
lcall
mov
decl
adc
mov
or
mov
dec
cs
jle
mov
lock
cmp
sbb
subb
cmp
sahf
filds
xor
cltd
sub
test
dec
shll
aam
mov
mov
cmp
stos
lahf
xchg
loop
jl
and
pop
scas
sbb
arpl
push
test
shr
push
cwtl
or
push
stos
sbb
adcl
mov
jns
mov
mov
pop
or
cmpsb
jno
daa
hlt
imul
shl
xchg
pusha
daa
fwait
nop
inc
mov
dec
mov
dec
add
add
push
in
mov
filds
push
push
bound
push
cmp
sub
je
into
sbb
jo
push
mov
push
enter
mov
xor
outsl
xchg
lds
push
arpl
push
lret
dec
dec
dec
cmp
dec
insb
mov
sbb
jno
add
jmp
mov
xchg
dec
icebp
cmp
sbb
arpl
mov
mov
cld
dec
adc
mov
shll
insb
mov
mov
xchg
xor
sbb
fucomi
clc
lcall
inc
dec
cwtl
cmpsl
sub
lea
popf
xchg
shrl
in
adc
sub
movsb
lcall
dec
scas
aam
push
aam
xor
xor
rcrl
vunpcklps
push
ja
movsl
in
sbbl
mov
xchg
adc
mov
xchg
mov
shll
imul
jp
out
mov
add
nop
ds
stc
test
xor
lret
push
cld
adc
ljmp
sub
aas
inc
movb
mov
jp
mov
sub
adc
sbb
lock
stc
aad
ret
push
adc
lret
arpl
das
outsb
sbb
sbbl
int3
out
outsl
pop
pop
inc
mov
ss
sub
xor
dec
mov
pop
loop
popf
jecxz
push
pop
adc
fldcw
xchg
mov
mov
dec
xlat
out
insb
xchg
aaa
dec
test
jg
xchg
xor
pop
loop
pop
pop
sub
leave
mov
and
icebp
sbb
fbstp
out
adc
je
mov
rol
lret
cmp
decb
mov
les
fdivrs
jmp
jns
jl
pop
mov
test
sub
sahf
mov
bound
sbb
adc
push
outsb
jno
ja
arpl
imul
mov
xchg
sahf
fildll
pop
push
adcl
mov
xchg
movsb
test
sbb
mov
dec
or
inc
push
push
dec
imul
adc
arpl
and
stc
mov
pop
aad
mov
xchg
test
pop
mov
pop
cmp
sub
hlt
nop
cmovb
xorb
sub
adc
shll
add
xchg
pop
leave
cmp
xor
lods
mov
fadd
into
cmp
cld
pop
stos
into
mov
inc
pop
and
mov
push
in
arpl
or
adc
and
sbb
sbb
lods
pop
daa
sbb
aam
push
das
fisttpl
sbb
xchg
fs
ret
fdivs
and
sub
jae
push
mov
rcl
sbb
aam
mov
xchg
jbe
mov
sub
repnz
call
adc
pop
outsb
sub
add
lcall
dec
idivl
cmp
inc
or
or
mov
fildl
adc
inc
insb
daa
adc
sub
out
jnp
inc
pop
out
incb
jno
in
js
jbe
add
dec
mov
jge
mov
aad
push
mov
shr
add
cmp
fwait
pusha
icebp
mov
adc
dec
lods
lahf
xor
push
sub
pop
dec
add
sub
ret
cltd
ds
jae
mov
jbe
mov
dec
repnz
int3
mov
and
lahf
jp
fiadds
das
scas
or
pop
rorb
in
decl
pop
lcall
lds
js
sub
sub
rorl
adc
loope
sahf
xchg
push
adc
mov
lahf
movsb
inc
mov
jnp
push
jns,pn
xchg
mov
mov
xchg
sub
adc
mov
les
mov
push
pop
jns
and
mov
cmp
stc
orl
cmp
adc
or
aad
or
push
xchg
xor
push
fstpl
jmp
sbbl
ret
mov
pop
stos
gs
shl
xor
out
cwtl
cwtl
ss
jp
sbb
sub
or
sub
dec
mov
pusha
jl
push
iret
popa
mov
mov
cmp
cmc
faddl
cmp
scas
imul
jg
mov
push
repnz
xchg
dec
mov
leave
in
xchg
add
mov
push
sbb
fwait
xor
das
xchg
push
sub
outsb
andl
fs
xchg
test
popa
jl
int3
loope
mov
xor
call
fstl
test
in
xor
test
insb
push
pop
movsl
mov
push
stos
sti
pushf
or
push
in
ror
push
out
jns
dec
cmpsb
scas
shll
mov
mov
aaa
inc
push
lcall
and
movsl
pop
mov
xor
addb
push
stc
and
incb
roll
xor
stos
addb
dec
movsb
jns
fimull
outsl
pop
loopne
int
loopne
popf
aas
lea
push
cmpsl
pop
and
xlat
inc
dec
out
push
jbe
push
push
aas
stos
inc
dec
pop
faddl
mul
dec
nop
cmpsl
pop
ficomps
or
lods
inc
popa
pop
repnz
cmp
test
dec
repz
sbb
push
iret
xor
out
addr16
mov
mov
mov
inc
or
and
inc
ds
rcrl
cld
repnz
mov
pusha
and
push
fistpl
mov
inc
add
les
test
push
es
test
xchg
aas
and
movsl
pop
pushl
stos
pop
add
sub
push
js
scas
push
xchg
or
jae
test
jne
and
push
dec
into
cmp
jle
sbb
nop
mov
jp
dec
xchg
mov
scas
cltd
add
inc
call
sub
add
fldcw
imul
adc
push
stos
aas
cmc
sub
lods
push
mulb
adc
mov
cmp
insl
sub
int
int3
mov
or
mov
lahf
mov
rorl
ss
int
popf
mov
leave
inc
test
jp
and
lods
ss
andb
aad
out
dec
daa
lods
sub
sar
das
loope
add
int3
fwait
nop
jg
mov
fwait
xor
mov
xchg
and
sbb
les
jae
clc
test
test
push
push
jg
loope
repz
out
loope,pt
rclb
jnp
push
push
aaa
cmp
mov
mov
inc
mov
pop
pop
dec
and
hlt
stc
movsl
pop
xlat
icebp
dec
or
addb
inc
and
loope
add
pop
call
jno
int3
pop
jp
inc
int3
scas
mov
lods
pop
xorb
push
repz
xchg
cmp
xor
push
in
test
in
inc
sbb
sti
inc
mov
cwtl
inc
ds
sbb
outsl
sub
cltd
adc
sbb
mov
jge
lock
mov
sub
scas
adc
xor
loop
out
mov
and
das
inc
gs
into
pusha
popa
xchg
fsts
push
arpl
sbb
jge
jmp
cmpsl
out
cmpsl
das
loope
jne
sahf
ret
cmp
dec
cwtl
call
xor
aad
xor
ljmp
add
lahf
std
mov
mov
push
dec
insb
insb
xchg
mov
hlt
fsub
call
push
xor
sub
pop
movsl
xchg
sbb
ds
aaa
jae
das
scas
mov
test
mov
js
dec
fsubl
adc
and
jnp
cmp
mov
jl
int3
dec
jl
xor
and
ss
pop
and
cmp
sahf
and
fstpt
es
outsb
add
pop
jle
push
inc
mov
inc
loope
inc
or
sub
jge
movsl
pushf
mov
mov
mov
hlt
push
mov
jnp
and
fdivp
int3
test
shr
jae
cmp
mov
fcompl
xor
test
in
test
test
mov
xlat
test
lea
sarb
notb
mov
in
mov
inc
inc
jl
mov
lret
incb
loop
outsl
pop
mov
ret
sbb
xchg
dec
lret
aad
popf
pushf
je
xor
adc
xchg
inc
mov
fsubrp
data16
pusha
xor
mov
mov
xchg
outsl
and
dec
decb
outsb
popf
lea
jle
sub
xchg
ds
sub
mov
mov
cmpsl
lcall
dec
pop
in
aaa
and
leave
xor
clc
mov
pop
mov
lods
push
jns
cmp
pusha
daa
pop
stos
xchg
push
cmp
hlt
and
andl
push
shll
shrb
ja
mov
je
ljmp
xor
les
loopne
sbb
shll
out
nop
pop
xor
faddl
pop
adc
mov
or
pusha
add
movsl
cli
int
bound
dec
pop
cli
pop
and
dec
sub
xchg
or
icebp
aad
xchg
pop
mov
sub
sti
push
or
push
mov
cwtl
iret
and
shll
jae
popf
lret
or
daa
in
out
mov
mov
loopne
insl
mov
xchg
ret
sub
int
mov
or
lahf
lds
jo
xchg
xchg
out
incl
loopne
pop
lds
dec
adc
nop
out
push
faddl
cmp
shrl
xchg
jno
test
xchg
jnp
mov
nop
inc
ret
push
lahf
xchg
adc
int3
xor
out
call
or
aas
jge
frstor
call
jp
out
and
and
scas
dec
arpl
mov
xchg
mov
mov
dec
cmc
andl
push
ljmp
sub
loop
xchg
xor
orl
stc
mov
lret
sbb
ss
icebp
mov
mov
cmpsl
add
ret
cld
mov
inc
cmp
cs
sub
push
cmp
push
sbb
mov
addr16
push
orb
icebp
lods
and
add
test
into
pushf
dec
or
sbb
inc
rol
pop
rcll
pop
push
add
cwtl
pop
fbld
insb
test
xor
mov
xchg
jae
mov
jo
fisubl
outsl
pop
movb
in
inc
movsb
fsubrl
arpl
mov
sarb
ret
fmuls
adc
les
or
adcb
mov
insl
cmp
and
aas
rcrb
cld
fs
outsb
loop
dec
and
push
and
outsb
mov
fneni(8087
or
sti
push
sub
hlt
pop
in
sub
jo
cmp
loopne
ljmp
int
aas
mov
mov
and
cmp
mov
out
scas
inc
lods
inc
push
mov
adc
lret
push
icebp
sub
aam
mov
into
jecxz
or
out
aas
mov
pop
or
sar
mov
adc
mov
loopne
rcll
dec
insb
daa
xor
out
out
jge
add
and
test
inc
icebp
xor
cmp
lods
or
xor
mov
andl
lds
pop
dec
dec
mov
subb
xor
mov
insl
lcall
sahf
push
mov
rcrl
mov
inc
add
jno
bound
imul
pop
loopne
xor
push
rcrl
lret
add
gs
leave
xchg
sub
stc
lcall
jb
mov
test
mov
cmp
aad
movsb
andl
cmp
lret
js
mov
pop
push
xchg
inc
mov
add
out
out
mov
mov
scas
push
ds
add
pop
fs
int
sarl
add
pop
shlb
cmc
and
icebp
xor
add
mov
jle
jne
push
xor
xor
jbe
xor
dec
leave
and
pop
xchg
mov
clc
push
and
test
push
lea
fisubrl
jmp
sub
and
add
cmpsb
push
inc
add
imul
dec
test
testb
test
mov
xor
sub
push
arpl
jecxz
jns
or
xchg
idivb
jne
push
jmp
roll
test
aaa
imul
repnz
dec
push
in
cmc
push
das
mov
adc
mov
mov
or
cmc
ja
shlb
xor
sbb
call
xchg
movsl
fsubrp
mov
les
daa
jbe
pop
dec
or
lock
add
pop
xor
jne
sub
icebp
dec
jp
mulb
mov
decl
inc
outsl
lcall
jb
cld
cs
les
addb
xor
pushf
ret
jecxz
sbb
cmp
pop
loopne
imul
cmp
or
test
mov
jb
xor
inc
addr16
inc
jno
dec
in
and
lds
dec
add
mov
pop
dec
mov
rcrl
test
jbe
cld
lods
push
cmp
jnp
gs
out
outsl
sub
ret
ret
jns
mov
popa
mov
stos
sarb
jecxz
lahf
cmpl
ja
adc
xchg
jl
mov
dec
adc
mov
test
and
dec
push
mov
lock
push
jno
insl
stos
add
jae
lds
movsb
inc
mov
pushf
sbb
xor
cmpsb
inc
popf
xchg
xor
test
mov
push
mov
out
pop
push
outsl
pop
xor
jle
cmp
sub
orb
jmp
es
das
mov
mov
hlt
int3
pop
aad
movsb
jno
inc
mov
out
sub
jecxz
rclb
out
push
out
lcall
dec
and
and
pop
cmp
fcmovb
push
repnz
xchg
adc
int3
aad
or
aam
icebp
ret
ret
jbe
sbb
arpl
inc
pushf
push
inc
scas
loopne
fcmovnbe
dec
ret
dec
clc
jmp
sub
xor
or
call
int
jmp
jle
outsb
mov
xor
test
rcrl
push
sbb
and
pop
inc
jo
xor
mov
rorb
data16
nop
jbe
stos
dec
cmp
into
scas
pop
add
mov
aad
mov
bswap
xchg
pushf
movsl
lods
jle
pop
sbb
mov
inc
ljmp
inc
mov
pop
adc
out
mov
faddl
mull
pop
iret
mov
add
jae
xor
mov
fs
loop
imul
mov
mov
aad
sarb
insb
mov
icebp
dec
in
addr16
cmpsb
sbb
add
mov
mov
pop
jns
je
aas
mov
mov
xor
push
xchg
repnz
mov
js
je
and
mov
loope
fldt
movsb
data16
jg
adc
shll
popf
add
aam
int3
gs
filds
push
movsl
and
or
sbb
into
out
imul
and
sub
stc
adc
sub
rcrl
add
fstpl
fcomi
add
es
inc
aad
xchg
jp
lret
enter
sbb
out
bndldx
clc
pop
shld
jmp
popf
outsb
sti
xor
lea
fcoms
push
or
mov
xchg
or
sbb
repnz
sub
into
insb
inc
mov
pop
daa
imul
cmp
lods
push
jb
cs
shlb
push
cmp
shlb
loopne
movsl
enter
sub
mov
xor
int
imul
insb
jg
inc
pop
xor
or
fistpll
fmulp
and
pop
aad
sbb
ret
imul
adc
js
xor
pop
or
fwait
stos
add
les
push
test
adc
push
dec
rcl
lcall
jp
jp
insb
jg
aas
mov
sbb
aad
insl
jo
mov
ret
ret
leave
add
pop
mov
stos
movsl
pop
in
sub
pop
add
shlb
fimull
inc
in
xor
pop
jg
inc
adc
into
lret
dec
sarb
sbb
lret
adc
push
testb
inc
fadds
jns
dec
aas
and
mov
ret
icebp
repz
jns
notb
fs
jbe
popa
lahf
lret
fs
enter
push
test
sub
pop
scas
sub
aad
out
sub
mov
daa
xchg
xchg
pop
dec
add
stos
addr16
jb
jnp
shll
xor
mov
mov
pop
movsb
fisubrl
call
fldl2t
cmp
andl
pop
jbe
xchg
cmp
jp
sbb
and
ss
or
gs
out
call
mov
mov
or
fcomp
out
aad
clc
push
xchg
fisttpl
cli
je
pop
insl
mov
lret
pop
pop
shlb
outsb
or
add
xlat
xor
inc
enter
call
inc
sub
test
cmp
pop
pop
testl
cmpsb
lods
lcall
cbtw
sub
fsubrp
mov
dec
cmp
je
jb
dec
xchg
fisubl
mov
mov
pop
xchg
mov
xchg
sub
inc
ss
push
cmpl
push
repnz
push
pop
imul
push
jg
xor
mov
jns
mov
and
rorb
das
cmp
repnz
xchg
mov
or
sbb
and
lea
mov
fsubrl
not
inc
xchg
mov
jge
mov
jecxz
mov
jge
dec
adc
dec
mov
int
lds
push
cld
addr16
leave
inc
xchg
inc
out
iret
clc
adc
xchg
stos
clc
dec
fildl
add
xor
call
aas
inc
add
add
push
jmp
aas
sbb
and
xlat
push
dec
enter
push
sahf
push
shl
dec
aam
imul
push
je
and
pop
add
xchg
icebp
add
mov
cmp
in
cmp
push
mov
jb
xchg
pop
push
sbb
dec
jne
add
cmpsl
xchg
and
push
out
testl
fwait
mov
je
cs
lods
adc
jmp
call
jge
mov
shrl
jns
dec
cmpl
cmp
mov
mov
mov
insl
pop
xor
or
mov
sub
mull
xor
xor
sub
jg
dec
cmp
cmp
sbb
outsb
pop
les
mov
mov
jnp
lret
xchg
movl
movsb
shll
jno
cli
adc
aam
cli
pop
xchg
cmp
ljmp
jmp
jmp
ljmp
add
fidivs
test
pop
jae
int3
inc
push
xlat
or
dec
test
lret
sti
filds
outsb
inc
loop
push
sub
xchg
inc
bound
out
fsubrs
in
sarl
adc
or
rolb
cwtl
test
shlb
mov
cmp
jg
or
mov
jle
rcrl
imul
fwait
mov
add
pop
jbe
outsl
pop
push
push
xor
movsl
pop
inc
int
stos
dec
lahf
fwait
mov
adc
xlat
mov
cltd
insb
test
gs
cli
shlb
test
in
pop
jno
xor
dec
divb
adc
dec
aam
loopne
frstor
orb
outsb
std
mov
lds
add
leave
testl
out
movsb
xor
xchg
sbb
dec
fisttps
outsl
mov
xor
mov
jne
sub
mov
sub
ret
jge
sbb
sahf
stos
xor
mov
enter
enter
mov
addr16
cmpsl
mov
inc
inc
rcl
lock
push
mov
inc
jb
movsb
scas
out
popa
or
fsubr
sub
lret
xor
cmc
pusha
cs
dec
add
push
xchg
out
mov
sub
sarl
stc
or
sub
inc
in
mov
or
xlat
push
adc
xlat
adc
xor
inc
push
jno
imul
sub
jb
loope
mov
mov
lret
pop
and
jno
sbb
mov
outsb
and
sub
jge
ja
lods
dec
les
dec
push
mov
push
adc
imul
incb
pushf
inc
leave
xchg
pop
nop
imul
fs
les
stos
push
jl
push
repnz
pop
adc
sbb
int3
adc
sbb
pop
xorl
mov
adcl
sub
and
inc
das
scas
mov
fcoms
sarl
mov
inc
lods
dec
insl
bound
and
cld
ret
je
scas
inc
or
xchg
fdivl
popf
sbb
fstp
xor
vpminsw
mov
ret
mov
cmp
lahf
aas
repnz
push
mov
add
inc
push
cmpsl
mov
stc
in
dec
ss
dec
jge
push
dec
xchg
call
add
pop
mov
mov
cmp
stos
push
pop
aaa
add
sarb
imul
xlat
fcomip
andl
lods
lock
push
test
leave
int3
inc
jbe
mov
push
push
mov
js
lret
push
jg
sub
push
xchg
adc
jo
ljmp
in
sbb
pop
push
xchg
pop
dec
arpl
hlt
xlat
jo
lret
jmp
xor
stos
movsb
call
jecxz
adc
inc
fwait
aas
cs
insl
sub
daa
dec
cmpsl
testl
xchg
repz
rorb
or
jle
jnp
push
fisubs
imul
adcb
mov
mov
scas
mov
xchg
jp
xchg
add
adc
fidivrs
in
pop
pushf
loope
mov
out
xchg
fs
cmp
enter
adc
fistpll
int3
es
scas
lods
cmp
fisubl
jmp
ljmp
sbb
cmp
jmp
push
dec
lea
pop
pop
mov
test
jle
dec
xchg
cmpsl
dec
mov
gs
js
fwait
fwait
cmp
fmuls
movsb
outsb
adc
sbb
imul
mov
insl
xchg
shl
inc
test
jno
test
cmpsb
popa
mov
jp
or
xor
lea
mov
sti
mov
mov
add
push
je
scas
popf
dec
psllw
fdivs
dec
inc
test
fidivrl
rcrb
sub
mov
or
idivl
fldln2
test
sbb
inc
and
sub
push
sar
adc
test
sub
ret
stos
jmp
les
aam
pop
inc
and
jmp
mov
jno
out
sub
cmp
sub
stos
sbb
call
or
jnp
xor
fiaddl
pop
pop
cmp
jg
and
stc
icebp
pop
cmp
inc
jge
add
mov
jp
lret
xchg
mov
or
bound
sbb
movsl
inc
shll
pavgb
fsubrl
sbb
mov
lea
imul
je
push
test
aad
rolb
fisttpll
jb
cmp
loop
lret
cmpsl
clc
mov
push
js
push
sti
shr
mov
stc
mov
add
and
xchg
mov
push
push
imul
xor
lret
scas
jae
aad
dec
lcall
pop
fnsave
jne
negl
dec
cmp
shlb
cmpsb
hlt
mov
in
or
lock
jb
cmp
xor
lods
leave
mov
add
sub
xchg
out
dec
scas
push
fisubrs
inc
jl
ljmp
mov
pop
push
cmp
dec
fcompp
lcall
out
mov
and
mov
rcl
add
or
cmp
or
mov
xchg
jo
cltd
mov
sbbb
outsb
ret
push
lcall
xlat
dec
mov
movb
pop
ss
pusha
add
adc
lret
insb
imul
int3
add
xchg
or
cltd
add
dec
cmp
inc
mov
popa
ret
clc
test
sar
adc
lea
lret
mov
lock
add
pop
adc
add
fsubl
push
jp
out
loopne
aas
fs
add
xor
and
sti
or
andb
push
cld
pushf
mov
jmp
stos
pop
mov
fldenv
sbb
push
mov
cmpsl
imul
sub
divb
inc
sub
mov
pop
roll
sub
lods
imul
mov
out
dec
in
push
cld
xchg
cmp
inc
mov
fwait
dec
lock
sbb
in
hlt
js
xchg
xlat
add
cmp
sbb
inc
inc
mov
xchg
adc
rcrb
jnp
sti
out
pop
sub
push
push
insl
xor
cwtl
add
adc
les
cmc
fwait
lcall
inc
mov
loope
lcall
sahf
jmp
and
pop
bound
push
jbe
jbe
les
flds
sbb
or
and
push
stos
in
test
lcall
add
aad
stos
mov
jno
push
pop
dec
and
jns
inc
ds
sbb
stos
inc
int
push
inc
xchg
xor
and
mov
push
inc
dec
arpl
sub
loopw
lods
pushf
pushf
lcall
and
xor
mov
mov
push
lret
and
mov
adc
test
adc
cmp
popa
dec
push
and
and
jno
xchg
sub
shll
fsubs
ret
mov
pushf
popa
or
mov
mov
ss
out
push
xlat
repz
mov
fs
pushf
sub
adcb
mov
xor
pop
adc
sbb
jo
inc
push
dec
mov
inc
dec
and
xor
test
push
mov
pushf
sub
mov
pop
testl
dec
call
hlt
jg
pop
cmpsl
mov
push
jge
jnp
ret
push
xchg
pop
mov
popf
pop
test
xor
mov
and
out
loopne
inc
outsl
mov
movsl
ds
pusha
test
dec
push
push
fs
in
push
call
iret
outsb
clc
push
pop
xchg
pop
pop
sti
mov
mov
cmp
hlt
int
mov
add
testb
xor
and
js
mov
fdivrs
inc
xchg
orl
popf
imul
lcall
jno
push
mov
xchg
cmpb
dec
cld
mov
mov
fs
xchg
pop
jle
mov
insl
inc
sbb
les
outsb
pusha
dec
add
int
bound
dec
clc
and
fwait
rcrb
ljmp
std
mov
mov
roll
jmp
cmpsb
pop
in
pop
dec
adc
in
dec
sbb
dec
xchg
push
call
cmpsl
cmp
jno
push
mov
sub
testb
ja
cli
ljmp
sub
cmpsl
rcr
leave
cmpsl
std
cmp
imul
jge
movsb
fimuls
mov
pop
popf
mov
shlb
adc
testb
mov
dec
mov
pop
mov
xor
outsl
add
aas
out
lods
in
movsb
jle
push
bnd
in
aam
dec
cmp
mov
jbe
or
pop
mov
iret
sbb
out
dec
pop
jg
add
popa
push
mov
adcb
jge
inc
aad
jnp
gs
pop
adcb
movsb
lcall
std
or
fcomps
fcmovu
and
jle
bound
sub
mov
adc
pop
sbb
das
inc
movl
mov
jns
loopne
out
outsl
mov
or
adc
add
xor
xor
inc
enter
in
jne
and
sbb
call
push
mov
aad
cmp
test
dec
mov
add
jns
imulb
bswap
mov
sbb
mov
cmp
sbb
in
add
dec
mov
cmp
ret
sub
fistpl
pop
jo
pop
or
ret
lds
in
loop
lods
or
ror
icebp
pop
jle
insl
xor
aas
out
pop
enter
stc
dec
mov
push
xchg
call
xchg
jo
arpl
adc
aam
or
inc
fidivrs
cmp
mov
cmp
fcmovnbe
and
pusha
push
or
mov
and
push
insb
xchg
mov
cmp
fbld
jns
mov
inc
adc
cmc
adc
loopne
test
loop
cld
repz
outsb
xchg
stos
test
xchg
xor
xor
fsubs
xor
add
and
xchg
loope
les
lret
pop
push
pop
addr16
and
imul
push
idivl
in
sbb
jp
fldenv
scas
inc
cmpsb
push
mov
cmc
fsubrp
or
jp
aad
outsl
mov
cwtl
and
and
shl
push
mov
mov
push
ret
push
push
jmp
repnz
cmp
pusha
fnsave
lcall
dec
xchg
insl
cmp
mov
adc
pop
pop
sti
mov
or
or
add
ret
sbb
mov
or
and
sub
in
inc
xchg
loopne
jecxz
jno
scas
rcll
mov
hlt
sti
das
mov
push
clc
enter
fisubrs
nop
push
popf
xchg
rcr
sti
xchg
mov
pop
mov
push
je
arpl
out
stos
pop
jecxz
xlat
scas
pop
stc
xchg
xor
lods
mov
test
into
add
mov
ds
in
dec
cmp
sbb
and
stos
cmp
pushf
sub
xchg
push
dec
cmp
add
sbb
shll
repz
and
inc
arpl
mov
add
mov
and
mov
lret
push
in
aaa
cmc
sbb
das
and
bound
pop
pop
xchg
inc
jl
imul
add
sbb
shl
cld
fnstenv
mov
out
and
mov
daa
loop
je
sbb
push
repnz
mov
inc
jo
lcall
xchg
inc
cltd
cmp
xchg
pop
adc
lods
aam
pusha
xorb
les
in
xchg
dec
out
push
scas
dec
jmp
and
push
imul
mov
iret
leave
outsb
dec
lods
loopne
and
dec
sahf
and
int
mov
mov
pushf
fcmove
adc
push
daa
bound
hlt
push
jne
pop
pop
test
sub
lods
push
bound
inc
or
notl
clc
pop
mov
jae
inc
repz
fcmovb
or
inc
lock
inc
je
daa
pop
pop
in
std
mov
test
js
icebp
inc
ret
push
or
mov
in
or
cli
dec
in
cmp
push
mov
shlb
jmp
outsl
in
sti
popa
jle
ss
and
mov
into
or
xchg
jne
fnstenv
mov
dec
xchg
testb
dec
stos
add
push
push
jl
pop
pop
icebp
std
sti
in
xchg
push
pop
fistl
ja
mov
shll
adc
pop
lret
aas
popa
add
nop
cmc
hlt
mov
gs
insb
fadds
rorl
and
jecxz,pt
addr16
sub
imul
sbb
jnp
add
xchg
pop
loope
sbbl
sub
lret
test
adc
pop
shlb
push
fwait
sub
dec
sub
pop
mov
divps
sbb
cmp
test
ret
mov
lods
je
dec
push
lret
and
test
iret
fidivrs
cltd
or
jbe
jp
dec
xchg
mov
repz
push
fst
mov
shlb
sub
test
sbb
cltd
jbe,pt
and
iret
popl
test
test
stc
jle
xchg
test
or
push
sbb
push
mov
and
ljmp
adc
sbb
scas
and
jnp
data16
sbb
xor
push
fistpl
xchg
xchg
sub
sbb
push
mov
mov
cwtl
fldenv
les
mov
inc
xor
adc
shrl
cmc
mov
and
in
inc
clc
mov
cmpsl
dec
fisubl
push
mov
pop
mov
and
scas
movb
cmpb
hlt
mov
or
sbb
std
movsb
iret
faddl
inc
mov
sub
cmp
add
mov
dec
sub
insl
fnstsw
pop
fiadds
jmp
ret
sbb
and
jmp
pop
addr16
and
stc
and
inc
mov
test
inc
call
jmp
add
sub
daa
mov
mov
pop
sub
cmp
stc
mov
loop
in
mov
out
xchg
dec
into
jb
mov
das
stos
fmulp
cmpsl
inc
fnstcw
outsb
cmc
clc
add
enter
hlt
jg
scas
leave
ljmp
shr
mov
std
das
sahf
inc
sti
in
mov
mov
sbb
jl
xchg
jo
jo
xor
or
jp
xchg
je
jg
scas
jae
scas
and
fsts
mov
pop
scas
imul
aas
out
movsb
test
outsl
add
sub
adc
or
icebp
std
pop
mov
sti
cmpsb
scas
or
cli
sahf
mov
pop
out
xor
cld
jnp
stos
pop
ljmp
pop
and
fldl
adcb
ja
out
push
lret
push
mov
fcoms
pop
mov
sbbb
fdivp
mov
inc
lret
addr16
sbb
ds
xchg
stos
aad
aam
mov
cmpsb
mov
push
cmp
mov
or
adc
jl
sbb
sbb
bnd
test
mov
ljmp
rcll
fldlg2
and
arpl
nop
mov
inc
inc
shll
adc
imul
sti
roll
mov
inc
push
cmpsl
jl
and
sub
in
lea
jl
je
pop
lds
shl
mov
fstps
add
or
sub
or
in
outsl
and
xchg
ljmp
cmc
add
pop
clc
repnz
add
inc
mov
dec
mov
rcrb
testl
jnp
push
xor
push
dec
jbe
das
stos
jnp
push
push
sarl
cmp
divb
sbb
mov
mov
add
xchg
and
sub
fcoms
test
push
pop
pusha
mov
xor
pop
add
xchg
lock
jb
sub
pop
mov
loopne
jp
idivl
push
cltd
out
inc
inc
adc
mov
push
ds
cs
shll
mov
push
loop
jo
adc
add
and
mov
xchg
out
mov
jns
in
in
jbe
or
or
mov
pop
out
add
cltd
pop
pop
inc
adc
xchg
mov
mov
add
mov
fcoml
lret
lods
ljmp
fcomip
cmp
adc
gs
movsl
push
iret
push
mov
call
shlb
insl
sbb
ja
popf
adc
lcall
aas
fwait
add
jl
imul
mov
leave
jns
mov
aas
push
mov
scas
mov
inc
scas
test
mov
and
jp
adc
pop
cmp
or
sub
pop
mov
jnp
in
cmp
rorl
fistpll
add
sbb
pusha
inc
nop
dec
push
fcoms
aad
rol
add
shr
rcr
dec
and
pop
and
out
xchg
addr16
fbstp
xor
loopne
mov
in
dec
mov
cmpsb
mov
ret
enter
dec
dec
sub
pop
std
mov
stos
xchg
pop
add
call
cmpsb
lods
mov
mov
jb
daa
cmp
pushl
sarl
orl
ljmp
loope
jae
xor
and
jb
push
int
mul
xor
pop
fucomp
mov
jns
iretw
in
out
mov
dec
jg
dec
sub
sub
add
sub
mov
scas
imul
outsb
aas
cmpsl
dec
movsb
out
pop
pop
aam
cmp
sahf
jmp
out
xchg
jmp
js
fisubl
shrb
push
adc
push
xchg
pop
lret
or
or
dec
adc
mov
jns
fistpl
dec
or
xchg
sbbb
inc
jb
stc
clc
mov
cmp
mov
jg,pn
and
jg
mov
inc
cwtl
push
mov
and
stos
loope
dec
push
popa
and
pop
push
mov
cld
fdivr
push
mov
ret
adc
xor
insl
and
xchg
and
in
pop
loop
bnd
sbb
stc
add
aam
xchg
dec
xchg
cmp
aam
rcll
pop
clc
stos
inc
xlat
jbe
jp
gs
xchg
fistpl
je
mov
out
push
out
imul
mov
pusha
mov
push
mov
lret
sarl
mov
xchg
iret
lret
in
and
mov
jecxz
or
pusha
push
lods
shl
aas
fistps
or
ds
popa
inc
popa
or
movsb
loopne
pop
in
or
sbb
bnd
lret
mov
lock
mov
mov
mov
sbb
and
test
add
xchg
mov
inc
dec
cmp
mov
movsb
prefetchnta
push
std
aaa
loope
lret
out
stos
test
adc
xchg
inc
repz
pop
cwtl
stc
aam
cmp
repnz
repz
scas
mov
out
or
fstpt
xorl
das
add
stc
dec
call
insl
rcr
and
jne
jb
in
inc
scas
xchg
add
mov
xchg
sbbl
xor
mov
fisubrl
and
lret
mov
outsb
or
xchg
enter
push
enter
into
push
dec
lret
pop
sbb
inc
leave
pusha
dec
outsb
dec
add
cmp
jbe
popf
pop
pop
adc
xchg
and
cmp
fists
pop
sub
xchg
sbb
sub
and
xor
mov
imul
inc
das
xor
xlat
mov
icebp
sbb
ret
xchg
out
call
js
xlat
and
adc
cwtl
and
or
movsb
sbb
push
adc
inc
cmp
mov
pop
insl
mov
sub
jb
dec
dec
test
dec
jb
xchg
mov
movsl
add
sub
mov
mov
aas
call
ja
jp
scas
aad
xchg
cwtl
sbb
imul
repz
push
aad
mov
pop
jecxz
pop
repz
lods
push
or
loopne
sbb
sbb
sahf
sahf
xchg
movsl
xor
sub
add
adc
push
insl
stos
jle
xchg
sbb
addb
stc
mov
pop
jecxz
push
cmp
and
mov
aaa
pop
shrb
shrb
in
mov
sbbl
cld
jae
in
int
mov
add
fbld
mov
sub
out
xchg
push
repnz
orl
ret
jbe
ret
mov
xchg
xchg
and
mov
enter
das
xor
arpl
xor
in
xor
push
mov
jmp
sbb
cwtl
inc
mov
pushf
dec
inc
call
sub
xor
mov
xor
mov
fisubrl
sub
xor
std
mov
adc
pusha
flds
insb
mov
mov
hlt
mov
dec
daa
test
lock
cmc
call
add
jp
and
jle
sub
out
insl
out
sub
xor
jle
xchg
mov
and
mov
pop
dec
sbb
leave
in
fmuls
mov
adcb
popa
pop
test
out
inc
in
xchg
dec
xchg
int3
adc
add
push
and
mov
ss
push
xchg
test
repz
xchg
and
pop
mov
mov
aaa
sti
iret
dec
mov
push
addr16
lods
repz
shl
imul
inc
push
testl
enter
mov
xor
pop
cmp
andb
xchg
mov
mov
dec
jo
jo
push
push
push
pushf
out
repz
push
cmp
lret
ss
loopne
popa
subl
push
paddsw
push
pop
pop
fsts
rcrl
pop
in
mov
add
hlt
push
mov
xor
insb
leave
xchg
mov
cmp
mov
pop
push
fnsave
shrl
std
cwtl
mov
shlb
pop
mov
xchg
lret
push
mov
adc
aam
hlt
mov
movsl
aad
sti
iret
pushf
icebp
sub
xchg
adc
je
sbb
and
lret
sbb
mov
popf
shlb
adcb
inc
lret
push
fisttpl
sbb
mov
ret
test
cmp
jb
jle
sbb
jp
pop
call
scas
js
sub
fisubl
outsb
xor
jnp
mov
imul
in
ss
hlt
les
ret
pop
or
push
jge
cmp
xor
and
out
mov
in
adc
aam
adc
fidivrl
daa
mov
dec
dec
fnsave
aam
stos
sbb
mov
dec
inc
push
mov
test
movsb
outsl
adc
mov
js
dec
sub
aas
fstp
xchg
daa
scas
add
shrl
jae
push
jle
ljmp
ljmp
mov
dec
mov
push
in
push
fs
gs
icebp
fildll
fcom
mov
insl
shlb
clc
sar
rorl
xchg
sbb
stc
adc
sbb
pop
xchg
repnz
js
enter
out
sbb
and
jbe
lea
sbb
xchg
sbb
mov
mull
ret
ret
mul
sub
outsb
lret
mov
sbb
jl
mov
sahf
dec
int
add
adc
cmpsb
push
lds
fimuls
mov
add
dec
hlt
pop
mov
dec
jmp
push
jb
subb
jge
jl
xchg
mov
pusha
out
xchg
sub
dec
mov
icebp
lods
inc
jno
dec
clc
js
cmpsl
mov
aas
push
cmpsb
xor
fwait
pop
ljmp
push
outsl
inc
cmp
enter
dec
push
pusha
cmp
add
mov
cmp
mov
dec
mov
sahf
lods
cmp
std
into
sbb
cmpsl
push
sub
pusha
dec
inc
push
mov
adc
xorb
dec
leave
fsubrl
cmp
popa
add
es
jne
cmp
pop
cmp
cmp
mov
aad
xchg
jo
or
addr16
cli
sub
and
hlt
iret
aaa
jne
sti
xor
push
fwait
enter
sbb
call
inc
xlat
loope
mov
icebp
daa
sub
push
mov
xlat
jl
sar
dec
jb
arpl
sub
scas
jne
jecxz
idivb
push
int
mov
loop
add
jnp
outsl
sti
test
push
dec
or
fiaddl
inc
mov
aaa
mov
dec
fs
aaa
in
mov
mov
push
xlat
and
push
jno
xchg
lock
lret
cmp
je
insl
cwtl
lret
gs
push
and
shrl
mov
push
nop
imul
lods
iret
push
aas
push
movsb
fwait
xchg
out
adc
popf
test
dec
mov
dec
cmc
inc
loop
or
je
or
and
push
pop
sub
out
or
lret
test
idivb
xchg
in
test
xor
and
mov
cmpsl
stos
fdiv
das
cmpb
pop
and
inc
sub
xlat
dec
test
pop
xlat
hlt
cmpsl
outsl
test
fsubs
and
xchg
push
and
div
xlat
xor
pop
in
movsl
dec
lret
in
inc
add
xchg
mov
push
imul
add
mov
xor
push
jnp
std
sbb
lahf
mov
mov
cli
insb
stos
dec
stos
fdivs
sub
xlat
out
cltd
lret
mov
pop
lcall
mov
cmp
mov
mov
stos
cmp
rolb
das
enter
or
aad
cmp
xchg
stos
push
pop
js
scas
cmc
inc
xlat
rcll
push
imul
lods
mov
lods
sub
mov
pop
add
outsb
in
jbe
cmp
inc
loope
pop
hlt
sbb
jg
pop
mov
cwtl
mov
cmp
mov
fbld
insl
or
inc
cmpsl
mov
fmuls
mov
cmp
mov
stc
pop
jecxz
pop
out
mov
xchg
or
sub
adcb
push
repz
dec
mov
push
dec
and
gs
aaa
push
xchg
aam
push
lds
nop
bound
xchg
aad
adc
aam
lret
data16
js
cli
push
cmpb
jbe
adc
mov
cltd
mov
cmp
insl
insl
cmpsb
es
into
idivl
rorb
sbb
sub
rorl
int3
psubsw
mov
lods
mov
bound
xor
or
xor
inc
movsl
fnstcw
push
push
xor
js
cmp
mov
and
dec
xor
cmpsl
or
push
gs
aam
fsts
dec
add
adcb
inc
loop
sub
dec
lret
xchg
add
les
jns
add
mov
cmp
adc
adc
lret
int3
inc
adc
sub
lcall
pop
jmp
push
fcmovu
cmpb
inc
mulb
cli
mov
or
repz
leave
pcmpgtd
inc
lret
stos
xchg
pop
dec
mov
and
roll
mov
mov
sub
xchg
and
cmp
mov
movsb
pop
or
pop
lahf
or
sahf
or
mov
or
enter
test
cmp
mov
sahf
cmp
pop
sub
pop
cwtl
pushf
aas
jecxz
add
mov
mov
xchg
decb
push
xadd
mov
sub
test
push
pop
repnz
dec
lock
mov
adc
xchg
and
adc
je
outsl
lret
jl
mov
lahf
out
push
fbstp
popa
sbb
cmp
cmp
fnstsw
repz
lcall
hlt
and
inc
xchg
cwtl
data16
flds
rcrl
or
jge
fsubrl
clc
push
aad
or
scas
mov
out
xchg
movsb
stos
push
mov
popf
jbe
fcmovu
lahf
aas
lds
cmp
fmull
xor
push
inc
xchg
lods
daa
cmp
hlt
jo
and
stos
stc
test
cs
dec
leave
mov
mov
sub
inc
in
pop
out
subb
mov
or
push
arpl
push
push
jmpw
cs
cld
sub
xchg
mov
call
cmpsb
mov
fadd
data16
and
jg
outsl
cmpsb
pushf
aad
adcl
jl
int
pop
out
int3
mov
roll
repnz
js
or
mov
sub
cmpl
mov
push
adc
lahf
call
lcall
scas
into
ret
inc
js
jno
add
sub
or
cmp
sub
iret
rcrb
nop
push
xchg
lret
mov
hlt
push
push
xchg
mov
pop
ljmp
mov
xchg
push
cmpsb
fimuls
xchg
or
aam
js
test
iret
ret
lahf
andb
add
aas
mov
adc
mov
test
lea
ja
or
sub
scas
sub
fs
dec
js
and
iret
add
insl
jmp
xchg
xor
xlat
pusha
mov
jmp
cmc
xorb
sti
and
fs
xchg
fcompl
and
pop
xchg
outsl
lret
movsl
pop
mov
mov
fcompl
popa
push
push
hlt
mov
cmpsl
pop
addr16
in
test
popa
stos
jno
push
loop
or
addr16
xchg
inc
fldt
js
fsubs
out
repz
mov
fs
pop
push
adc
lcall
inc
jecxz
pop
incl
pop
das
mov
orl
add
push
dec
scas
push
jmp
cmp
in
mov
push
xor
xor
ss
push
inc
lods
mov
jb
xor
test
sbb
iret
adc
es
daa
cmc
ret
and
adcb
mov
and
icebp
ja
or
jnp
lods
push
mov
pop
xlat
mov
psubsw
xchg
test
int3
icebp
sbb
cmp
dec
jle
adc
sbb
ds
mov
cltd
sbb
xlat
xchg
mov
lcall
aam
sti
lcall
xchg
push
cmp
cmp
mov
adcl
in
and
movsb
loop
lea
sarb
cld
lds
jmp
adc
xor
imul
mov
fwait
inc
mov
dec
sar
sbb
outsb
fucomi
jg
mov
xor
jbe
fstpt
rorl
jge
cmp
jno
adc
jno
xlat
inc
dec
jo
sbb
push
test
mov
mov
push
fisubrs
cmc
cmp
xor
pop
xor
sub
add
repnz
ljmp
into
cmpsb
es
jg
and
mov
jecxz
push
inc
aaa
nop
jbe
xchg
mov
cmpsb
and
push
inc
pop
cmp
dec
push
push
aam
lods
in
jp
fstpt
repnz
mov
sbb
sub
fcmovb
adc
lea
in
loope
jo
cmpsb
jbe
mov
int3
dec
mov
xchg
fisttpl
dec
inc
xor
inc
daa
sub
mov
push
les
rclb
cmp
js
inc
imul
xlat
call
push
add
fcmovu
mov
nop
lds
fs
in
mov
push
or
cld
mov
jae
loopne
and
cld
outsb
sub
cli
push
mov
sbb
test
subl
add
xchg
leave
jmp
or
dec
ret
xor
lret
mov
icebp
test
fidivrl
push
into
rorb
imul
pop
jmp
ljmp
pop
mov
sub
dec
xchg
push
pop
inc
xchg
cld
movsb
dec
lea
pushf
inc
icebp
mov
mov
cmpl
jg
divl
dec
mov
pop
arpl
adc
and
push
cmp
or
pop
adc
xchg
roll
mov
xchg
stos
sub
insb
jp
add
cmp
das
cmp
push
sti
xor
xor
fnstsw
dec
mov
mov
jno
cmp
rclb
and
das
mov
mov
mov
sahf
pop
xchg
add
xchg
fwait
mov
push
mov
jns
lods
jnp,pt
pop
mov
jecxz
adc
pop
pop
jns
mov
dec
lret
pop
add
add
mov
or
jbe
in
dec
or
inc
adc
das
mov
out
push
sub
dec
adc
sbb
scas
les
inc
cmp
add
mov
int
sti
rcl
pop
push
popf
dec
inc
mov
fldcw
lds
and
arpl
mov
fidivs
xchg
js
shr
push
pop
push
mov
aaa
popa
mov
mov
push
shrl
mov
ljmp
cmp
loop
or
fmull
mov
xchg
pop
xchg
lods
fwait
nop
ficoms
add
jg
dec
sbbb
sbb
jecxz
push
inc
lods
divb
mov
bound
jp
mov
sbbl
loope
bound
xor
adc
shrb
cmpsb
enter
push
nop
cmp
outsl
gs
sbb
or
lds
aaa
xchg
imulb
push
cmpsb
je
repnz
clc
cmp
pusha
in
cmpsl
push
pushf
sub
fldt
in
int3
std
sbb
fadd
int
ret
or
pop
or
adc
and
leave
loopne
sub
dec
mov
dec
xchg
ret
fs
and
add
lods
addl
loope
sahf
add
mov
dec
repz
mov
repz
mov
xchg
xchg
outsl
adc
dec
pop
gs
test
jmp
testb
push
test
lret
dec
lods
popf
mov
add
mov
stc
xor
pop
pop
fs
jnp
cmp
add
cmp
cmp
adc
inc
sub
cli
sbb
cmp
mov
mov
addr16
mov
movsl
fisubs
ret
addb
cltd
gs
adc
mov
loopne
test
fistps
pop
inc
nop
ja
dec
aaa
fidivrs
add
roll
dec
dec
mov
sbb
int3
sub
push
and
sub
dec
lret
inc
mov
dec
cli
into
in
ss
stc
pop
sti
ds
cmp
test
leave
cmp
fildll
jb
loopne
jne
cmp
adc
and
mov
roll
cmpsb
mov
jb
jl
or
jno
in
stos
mov
jae
leave
fimuls
loope
mov
iret
shrb
call
arpl
rorl
or
cwtl
push
in
pop
rcrl
mov
call
mov
cmpb
xchg
arpl
jbe
mov
xacquire
xor
ficoml
into
stos
jne
and
out
test
loope
sub
enter
sub
xchg
scas
in
pop
xchg
push
ffreep
out
dec
fwait
repz
xor
cmp
sub
push
fsubrl
cmpsb
hlt
add
push
add
mov
stos
pop
data16
xor
in
js
shrb
sub
mov
inc
in
jecxz
mov
insl
jmp
fmuls
mov
fnsave
js
loop
lds
inc
test
jnp
lock
mov
out
dec
add
dec
pop
and
push
aas
leave
xchg
iret
xchg
loope
ret
ljmp
scas
test
leave
and
inc
jnp
lea
xchg
mov
mov
loope
xchg
push
fwait
or
loopne
ljmp
aam
in
jbe
daa
and
call
enter
call
cs
mov
in
or
ret
aaa
lock
out
outsl
std
out
xor
mov
stos
and
xor
insl
adc
fisttpll
stos
aam
mov
push
push
mov
lods
mov
jns
or
mov
pusha
dec
push
pushw
mov
aaa
shll
sbb
xor
fdivrs
imul
pop
and
xchg
mov
xchg
testl
fsubp
add
pop
add
cld
cli
lahf
pop
and
add
idivl
or
xor
repnz
sbb
cld
dec
mov
adc
idivl
cmp
push
jb
or
dec
sbb
cmp
jecxz
bound
mov
std
lea
loopne
shll
stos
lods
imul
repz
cmp
mov
add
mov
pop
inc
xlat
push
push
sahf
in
test
imul
stc
jle
add
xor
hlt
nop
bound
pop
and
gs
sub
sti
jns
sub
stc
hlt
fisttpl
dec
out
insl
cmc
mov
out
add
cmp
xor
cwtl
hlt
or
pop
push
xor
sbb
in
cld
xchg
and
mov
cwtl
ss
imul
mov
enter
push
es
pop
lods
pushf
pop
mov
mov
and
std
pop
and
imul
js
jp
call
dec
bound
xchg
inc
lds
out
lahf
icebp
xor
fnstcw
sbb
lods
sarl
jmp
or
or
xchg
inc
xchg
mov
rorl
jne
adc
std
push
adc
jle
and
cmpsb
ror
jo
aad
mov
ss
lds
arpl
add
test
ja
push
lea
or
aad
jb
inc
aad
add
add
addb
loop
notb
jb
int
pop
insl
sbbl
scas
bound
in
std
cmp
fsub
imul
stos
call
stos
dec
push
inc
xchg
arpl
and
mov
scas
push
dec
imull
imulb
inc
sub
and
shll
sbb
jnp
sub
inc
xchg
shlb
movsl
imul
jbe
mov
pop
ret
jecxz
fsts
xchg
mov
mov
inc
push
repz
js
loopne
inc
lea
dec
in
repnz
xchg
push
cmp
popa
sub
mov
sbb
popa
push
lock
pop
jp
inc
fcompl
fbstp
sbb
mov
out
jnp
dec
mov
aam
mov
or
cmp
lods
fcmovb
dec
bndldx
loope
cmp
push
mov
sbb
loopne
outsb
lds
mov
daa
popa
mov
mov
add
lret
pop
mov
pop
or
lret
in
mov
psubd
lret
int
pop
mov
cmp
cmp
mov
incl
jns
and
incl
jno
dec
aam
jl
imul
xor
add
shlb
add
outsl
test
cmp
shll
sti
es
jae
stc
mov
lret
js
out
enter
jmp
xlat
cmc
nop
lock
js
lcall
lcall
pop
push
adc
ret
out
inc
add
jecxz
or
xchg
lcall
out
lcall
addb
jecxz
fnsetpm(287
push
jl
iret
jl
xchg
rcrb
fimuls
shl
sub
jno
sti
pop
and
lret
sub
testb
mov
lret
clc
add
sub
lds
in
sub
adc
add
fdivs
testb
push
sbb
test
mov
sub
or
push
imul
arpl
test
mov
pop
xor
push
ljmp
dec
push
or
and
data16
and
pop
mov
inc
mov
sbb
ds
mov
in
mov
pop
stos
sub
stos
fsubs
sbbl
pop
or
cli
daa
test
push
cmp
push
movsl
xor
in
mov
idivb
mov
and
lahf
cmp
int
ficoml
es
sbb
push
out
sub
jmp
mov
xchg
inc
mov
jne
bound
mov
xor
xchg
push
jl
jecxz
xchg
adc
xchg
imul
add
aad
js
dec
jb
lock
push
xchg
xchg
movsb
xchg
aad
movq
sbb
mov
ljmp
xor
shlb
sub
pop
jb
test
push
rol
cmp
jns
mov
cli
adc
xchg
pop
imul
sub
mov
dec
sti
std
mov
in
out
and
js
imul
dec
sbb
sahf
push
addps
inc
pmulhw
cmp
sub
aam
and
mov
sub
sti
movsb
add
aaa
sbb
mov
out
gs
jb
push
sub
repz
scas
mov
sbb
movaps
cltd
lcall
mov
jno
dec
mov
or
out
lea
movsl
jno
outsb
movsl
and
lcall
jmp
push
sub
fsubrl
jecxz
jge
hlt
push
xor
add
jns
sbb
pop
jl
scas
jle
arpl
jmp
and
fadd
cmp
mov
xchg
or
inc
int3
ljmp
stos
push
dec
push
cmp
or
adc
sbb
ja
cld
mov
out
push
aas
add
std
jmp
cltd
movsb
jp
inc
or
or
adc
xchg
push
dec
mov
push
enter
add
fdivrl
jns
dec
sahf
inc
push
lahf
push
cmc
cwtl
jo
or
je
insb
xchg
adc
rol
faddl
and
stos
insl
jbe
stos
xor
outsb
jmp
sub
mov
or
aad
adc
in
sbb
xchg
nop
jl
test
loope
ret
inc
jnp
adc
add
iret
test
rcrb
repz
cli
loope
movsb
pop
cmp
or
loope
cmpsl
adcl
fildl
rclb
xchg
sar
cmpsl
daa
cmp
dec
or
mov
sbb
movsl
stos
sub
xchg
mull
adc
push
or
repnz
push
xorb
inc
cwtl
lods
xchg
jle
and
ret
roll
ret
dec
jle
add
enter
insb
cwtl
dec
jle
or
add
push
pop
mov
mov
data16
fldt
dec
pop
mov
out
dec
pop
push
pop
ret
rolb
adcb
pop
dec
adc
flds
lret
mov
xchg
out
push
jae
xchg
mov
mov
adc
inc
out
aam
lahf
outsb
sbb
out
aas
add
inc
lock
loope
sub
call
shrl
sbb
or
out
add
inc
jno
subb
pop
leave
in
movsl
cmp
imul
imul
xor
jp
in
mov
inc
orps
out
aam
pusha
rolb
jl
arpl
push
add
das
jo
lods
mov
mov
movsb
or
mov
popf
repnz
add
add
shll
leave
adc
adc
cmp
and
rorb
lods
jge
pop
clc
aas
fwait
testb
dec
xchg
stc
fisubl
push
mov
sbb
les
sbb
popl
addb
out
inc
cs
mov
or
mov
lret
adc
inc
ds
inc
stos
js
xchg
lock
rcrl
and
cmp
iret
cmp
jp
jns
sbb
rorl
in
punpckldq
cmpsb
shrb
jae
jmp
fmuls
pop
push
imul
xor
push
push
mov
scas
mov
in
test
pop
mov
leave
mov
roll
insb
call
movsl
ljmp
in
inc
xchg
mov
jge
sbb
les
jge
sar
ljmp
cmp
and
pop
enter
gs
insl
int3
ljmp
and
in
js
es
rcll
push
pop
jns
fldcw
popf
sub
cmp
insl
cli
xor
stos
xchg
lret
mov
mov
es
dec
sbb
stc
mov
aas
adc
sbb
sbb
pusha
jbe
push
sti
stos
divps
adc
addr16
mov
loopne
cmp
std
xchg
mov
lods
add
scas
pop
negb
ja
and
out
fmull
rcl
xlat
sub
add
jle
push
sub
and
cmp
xchg
jnp
and
scas
cltd
cmovbe
loop
inc
notl
bound
aam
insb
mov
mov
push
push
push
cmp
pop
push
sbb
test
addr16
mov
push
mov
aam
add
xor
lea
jne
outsb
loopne
pop
stos
adc
sbb
loope
push
aas
dec
cmp
mov
push
js
cmp
pop
push
add
sub
loop
loopne
adc
pop
xchg
jo
xor
inc
repz
cmc
pushf
jns
repz
call
out
iret
push
push
inc
rol
dec
pop
jmp
xor
mov
ret
imul
and
fdivs
and
and
pop
test
popf
mov
out
cmp
xchg
push
scas
and
adc
enter
cli
or
test
xchg
movsl
ret
mov
push
pop
mov
mov
movsb
out
pop
loopne
repnz
sbb
sbb
and
aas
das
cld
and
mov
xchg
clc
xchg
dec
jae
ja
pop
insb
test
test
test
daa
lret
jns
scas
ficomps
fldcw
xor
insb
lds
lods
shl
xchg
ret
je
cmp
inc
mov
and
push
jns
shrl
test
mov
sub
es
sbb
jge
add
pop
and
push
pop
push
ret
lret
push
hlt
in
ljmp
ja
pop
sub
ret
daa
int
jnp
jne
mov
mov
pop
stos
jno
iret
rcll
clc
in
pop
mov
add
ljmp
add
aaa
aaa
push
xchg
jmp
test
dec
cmc
loope
cmp
push
xchg
nop
add
push
mov
xchg
xor
dec
das
pop
mov
test
xor
jbe
arpl
adc
mov
or
xchg
fiaddl
imul
nop
out
rcr
jne
push
pop
push
sub
jecxz
inc
out
mov
sti
ja
inc
lahf
inc
in
stos
dec
cmpsb
or
pushf
cwtl
xor
sarb
jge
out
adc
ds
mov
and
mov
imul
pminub
mov
xchg
gs
lea
lods
in
mov
shr
adc
into
hlt
cli
ljmp
add
pop
dec
in
lods
pop
out
push
iret
lret
push
push
mov
sti
ljmp
ds
sbb
aad
test
fstpl
xorb
sbb
loope
ja
adc
aam
pop
cmpsl
out
push
sbb
push
sbb
neg
std
adc
mov
cmp
xchg
adc
jp
lea
in
std
jo
fs
jo
pusha
cmpsb
mov
sbb
xchg
popf
and
or
add
sub
sbb
jnp
jae
aaa
push
jbe
mov
shlb
jmp
mov
mov
mov
mov
mov
cs
mov
mov
push
pushf
mov
mov
out
insl
mov
cmpsb
roll
in
sahf
test
mov
dec
cwtl
dec
mov
dec
add
mov
add
sub
sbb
icebp
je
push
insl
sahf
jle
in
cltd
jnp
lret
dec
mov
stos
add
pop
sbb
nop
pusha
movsb
sbb
int
cmp
mov
cmpsb
fildl
pop
shl
outsl
lret
push
mov
int3
sbb
dec
daa
xchg
and
into
cltd
dec
jno
jp
mov
or
mov
mov
jmp
cli
enter
jbe
inc
imul
cmpsl
imulb
add
sti
or
movsb
sbb
loopne
push
sar
add
outsb
jle
xor
scas
sbb
ljmp
pop
divb
aas
stc
popf
aas
dec
dec
call
xchg
arpl
fmull
push
xchg
push
cmp
aam
push
pop
add
cmp
leave
sbb
and
push
xor
mov
mov
sbb
movsb
cmp
push
int
scas
in
inc
sbb
or
out
add
xor
test
jne
daa
sub
cmp
fwait
xor
jmp
cmp
mov
mov
rorb
jne
test
sub
xchg
jo
mov
mov
pop
aad
ret
jno
dec
sub
inc
pop
mov
or
inc
mov
and
lods
adc
jecxz,pt
xchg
jo
cld
dec
push
rclb
ljmp
fidivrs
or
lods
loopne
adc
pusha
xchg
mov
insl
loope
cltd
rorl
pusha
popf
repz
xchg
shrl
dec
jl
xchg
fdivr
and
jo
test
fcompl
inc
movsb
pop
jbe
or
fsub
sti
jg
xchg
xlat
ret
in
idivl
add
in
int
lods
xor
adc
mov
lods
in
add
or
cmp
ja
dec
mov
mov
aaa
sahf
lcall
push
aad
arpl
xchg
mov
xor
cmp
pop
inc
sub
or
gs
ja
and
lret
add
push
fcomp
je
mov
sub
jae
push
fdivrs
lahf
cmpb
push
sub
cmp
in
ja
and
dec
xor
repnz
jnp
jno
cmp
fisttpl
mov
inc
mov
sbb
cwtl
mov
fists
outsb
jmp
aas
test
or
xchg
imul
sbb
test
or
rcr
sbb
ja
mov
and
iret
push
or
idivl
aaa
sub
shrl
adc
mov
gs
cmc
mov
aam
fs
inc
nop
mov
inc
mov
daa
cltd
and
inc
push
cs
xchg
insl
fwait
cli
outsb
mov
sbb
orl
and
cmp
xchg
pop
xor
sub
fs
pop
jo
outsb
pop
push
sti
dec
xor
jne
rcr
mov
clc
loop
clc
mov
adc
scas
iret
cltd
lods
pop
mov
insl
call
daa
mov
sete
or
sbb
cli
sbb
lret
aas
adc
fsubs
aaa
add
and
int3
sbb
inc
and
mov
shlb
and
sbbl
pop
mov
push
push
xlat
and
out
loop
and
jb
lds
jno
xchg
xchg
inc
cmp
frstor
in
adc
adcb
pop
out
pop
xchg
ret
and
push
out
addr16
mov
inc
rolb
inc
mov
stc
loope
xor
in
jns
mov
and
sub
cmp
pop
ja
aam
pop
xchg
out
cmp
pop
idivl
mov
outsl
and
ds
xchg
adc
push
sub
jecxz
jae
sbb
push
xchg
or
inc
jle
not
out
xchg
xchg
cli
loopne
es
ss
ljmp
sub
mov
jno
add
fiaddl
inc
add
mov
pop
xchg
cmp
cmp
stos
lahf
xor
mov
hlt
sti
loopne
ljmp
or
js
pusha
fsubr
jb
mov
loop
and
cmc
mov
inc
outsl
in
out
push
inc
fcmovnu
cmp
testb
test
aaa
arpl
pop
lahf
lea
stc
fwait
mov
jo
clc
roll
loope
xlat
inc
lds
ss
daa
push
and
imul
jg
mov
add
std
test
shll
push
mov
and
xchg
lods
adc
imul
push
mov
int
dec
into
repz
mov
mov
pop
add
mov
cwtl
aad
fnstcw
das
lods
out
add
jecxz
fsubl
push
mov
xchg
fdivs
popa
inc
jno
sti
cmp
add
mov
lcall
pop
and
in
leave
add
lods
pop
and
xchg
add
and
push
ja
inc
or
fsubl
bound
sbb
cmp
les
repz
sub
cli
aam
pusha
lret
jp
pop
je
pusha
pop
xchg
jnp
repz
or
or
and
mov
mov
inc
xor
xchg
stos
ja
roll
into
fildl
cmpsb
jno
scas
pop
or
mov
mov
adc
imul
les
insb
or
stc
sub
mov
push
shl
or
jae
dec
sbb
rorb
ret
out
push
dec
push
loop
xor
xor
stc
cmp
loop
hlt
dec
mov
cmc
in
call
mov
inc
push
adc
int
rcrb
divb
std
pop
xor
mov
cmp
cmp
xor
dec
sub
and
cltd
fidivl
outsb
xor
pop
lods
xchg
xchg
sbb
adc
mov
aaa
and
jmp
rcr
das
mov
or
or
dec
stos
xchg
sahf
shlb
mov
std
cmp
das
push
stos
mov
mov
das
repz
cs
dec
dec
pop
in
out
scas
ret
imul
xor
push
fs
pop
xor
aaa
mov
xchg
mov
ss
sub
inc
mov
push
or
pop
mov
pop
aaa
or
leave
adc
inc
arpl
aaa
mov
shll
mov
and
pusha
popa
lods
iret
mov
call
dec
iret
fadds
movsb
or
xorb
push
aaa
testb
loopne,pt
xchg
dec
fiadds
lret
xlat
popa
mov
cmpsl
or
sti
movsb
call
dec
in
ds
jle
jnp
shlb
nop
enter
jns
dec
fadd
mov
into
les
pop
lods
adc
clc
mov
mov
mov
sub
xchg
push
sbb
test
and
jo
xchg
xor
ficoml
cmc
and
lahf
push
jns
outsl
mov
gs
pushf
push
repz
das
mov
push
loopne
cli
dec
negl
pop
add
fiadds
fcmovnb
jg
jecxz
dec
sbb
mov
test
aas
dec
lods
mov
add
pushf
in
loop
outsl
imul
xchg
insb
push
push
sbb
int
dec
and
out
std
mov
inc
std
mov
adc
xor
addr16
sbb
cwtl
inc
pop
mov
jae
rolb
mov
ljmp
xchg
and
xor
negb
pop
cmc
mov
and
leave
ja
xchg
out
inc
sub
getsec
push
push
sub
push
cmpsl
fs
cwtl
cmc
mov
pop
mov
mov
jle
jae
adc
ret
jo
popf
call
inc
mov
leave
addl
mov
xchg
xchg
das
xor
cld
dec
imul
pop
inc
mov
or
adc
lret
roll
mov
leave
insl
add
lret
jne
cli
sub
jne
adc
hlt
das
push
and
and
out
adc
and
add
jp
iret
sbb
xchg
and
sbb
push
inc
call
test
push
sbb
jecxz
stos
and
int
mov
mov
xchg
cmp
pop
dec
pop
or
mov
rol
nop
fs
sarb
adc
push
clc
sub
push
sbb
add
and
pop
push
test
pushf
scas
push
sbb
adc
and
cmp
aam
inc
lock
push
lods
sbb
mov
pop
arpl
gs
int
jle
hlt
cli
cli
mov
sarb
xchg
adc
mov
test
popf
sub
out
pushf
lea
jmp
lret
div
lds
fistps
daa
mov
jns
adc
aaa
sbb
loop
mov
mov
dec
in
lcall
adc
push
aas
pushl
dec
rol
cmp
aaa
insl
jnp
mov
xor
in
iret
and
pushf
out
in
into
cmp
sub
mov
in
lahf
fsts
roll
inc
inc
in
dec
add
in
lds
shrl
xchg
pop
movsb
bswap
jp
xchg
add
or
addb
popf
or
les
icebp
arpl
adc
mov
add
mov
adcb
aaa
dec
out
jmp
stos
jmp
stos
out
jg
stos
dec
jmp
push
mov
mov
les
sbb
int
adc
mov
movsb
enter
mov
jnp
inc
push
decb
popl
adc
sub
iret
popa
scas
imul
out
lcall
sahf
mov
leave
sbb
xchg
xchg
fs
lea
and
xor
jmp
scas
mov
cs
loope
inc
dec
je
inc
xchg
adc
pop
int3
in
mov
out
mov
mov
cmp
inc
push
mov
psllq
aaa
inc
dec
adc
mov
cwtl
mov
pop
in
mov
fsubp
rorl
mov
mov
stos
dec
cld
mov
movsb
pop
ljmp
cmc
xchg
jmp
jecxz
scas
pop
mov
xchg
jo
or
sub
add
pop
lea
dec
jbe
cmpsl
adc
test
stos
aaa
adc
lcall
jge
movb
push
mov
xchg
or
fbld
mov
je
inc
test
jg
mov
sub
dec
mov
pop
sub
test
ficomps
out
cmp
adc
ds
push
cmp
andb
or
xchg
out
in
push
mov
scas
aas
fidivs
fyl2x
cmp
test
test
arpl
adc
shl
es
xchg
out
xchg
jp
sub
insl
std
int3
sbb
fldt
scas
xchg
inc
sbb
frstor
addb
cmp
stos
add
in
cld
mov
jno
dec
out
push
add
sub
sub
addr16
mov
out
pusha
or
mov
sahf
jnp
cmpl
mov
std
insl
fimuls
icebp
add
in
testb
fwait
lret
loope
pop
cmpsb
movl
clc
jne
stos
pushf
xchg
add
pop
xor
pop
jno
addr16
clc
fimuls
pop
mov
imul
adc
loope
in
sahf
jmp
jb
aam
or
push
movsl
push
mov
in
mov
addb
push
negl
adc
in
pop
rcl
lret
mov
add
shrb
or
imul
xchg
fmuls
in
add
loopne
xor
add
cmp
jecxz
popa
cmp
jp
jge
adc
out
or
jecxz
enter
mov
sbb
xor
mov
mov
sub
and
jne
imul
dec
shl
rcr
loope
decl
int
aam
mov
lcall
dec
mov
mov
add
push
aad
mov
std
and
lcall
jns
dec
frstor
sarl
clc
test
das
cmp
push
out
aam
test
cmp
xchg
adc
add
xor
inc
dec
scas
mov
sbb
jne
sbb
or
sar
jo
push
or
cmp
jnp
cli
push
out
ja
dec
enter
lods
mov
mov
mov
leave
aaa
push
add
dec
mov
clc
out
adc
es
getsec
mov
lea
shlb
add
fisttps
push
cmp
push
xor
mov
rclb
or
lds
fisubl
scas
stc
rclb
popa
dec
mov
or
jae
mov
sbb
daa
fwait
test
cmp
shrl
cmp
and
clc
mov
stc
ss
iret
push
cli
jp
xchg
push
shlb
sbb
dec
clc
jnp
push
inc
sarb
jmp
fstpl
sbb
push
jnp
scas
icebp
test
imul
xor
in
loopne
sbb
orl
jmp
test
adc
insb
insl
jae
inc
call
inc
xchg
sub
scas
push
das
jecxz
fimuls
lret
ja
mov
mov
je
in
icebp
outsb
std
sub
push
xor
and
loopne
test
ss
fisttpl
cmc
aad
xor
add
je
int
stos
jne
popf
insb
jb
or
test
int3
jecxz
push
sub
jb
subb
aaa
fisttpl
movsl
hlt
add
adc
imul
ja
xor
mov
mov
lods
jp
outsb
fs
in
scas
add
sbb
sbb
mov
clc
loop
mov
das
cmc
pop
mov
and
dec
leave
jge
movsb
xchg
xor
push
jb
cli
sbb
fidivrs
xchg
fxtract
inc
ja
jp
xchg
push
lds
in
inc
adc
cmpsl
inc
repnz
jle
cmp
fnstenv
jbe
clc
data16
add
lcall
lods
pusha
push
push
cli
cmc
jno
mov
mov
cmp
pop
nop
lcall
ret
mov
xchg
inc
sbb
push
xchg
fwait
mov
test
cs
sbbl
dec
dec
sarb
pop
repz
clc
push
mov
jecxz
dec
sub
push
in
stos
inc
call
cmp
pop
mov
iret
shll
adc
inc
jae
pushf
add
cmp
pop
test
in
iret
pop
stc
mov
xchg
cmp
mov
jl
pop
shll
scas
or
addr16
sahf
dec
mov
sbb
out
dec
xchg
stos
out
iret
inc
sar
lahf
push
frstpm(287
sbb
pop
jne
push
das
scas
in
pop
and
jne
adc
popa
arpl
das
mov
es
inc
xchg
mov
popf
mov
pusha
shll
cmp
lock
pop
xchg
cmp
mov
fnsave
pop
movb
shrl
cwtl
xor
jae
fwait
imul
mov
in
out
fmull
pop
pop
jp
mov
lea
mov
lahf
rcll
push
fnclex
push
push
lcall
ds
sbb
fnsave
add
add
mov
cmp
dec
push
pop
and
adc
leave
cltd
cmp
cmp
lock
ret
je
jns
xchg
out
xlat
iret
push
push
cmp
ret
es
ja,pn
mov
out
sbb
stos
pop
mov
jmp
push
pop
in
shlb
mov
mov
jl
clc
pop
dec
push
jo
sbb
test
mov
dec
ret
mov
pop
popf
dec
fsubr
lret
jle
jl
mov
lods
push
lock
ret
cli
pop
jb
cmc
lcall
int
inc
outsb
push
stc
test
mov
mov
sbb
outsl
ljmp
fwait
mov
ret
ficoml
jnp
jb
out
pop
mov
js
lret
push
mov
cmp
or
insb
icebp
pop
aas
or
mov
inc
and
mov
fs
out
jb
xchg
mov
xchg
mov
dec
enter
fcmovnb
sarl
aad
aam
mov
shll
pop
cmp
ds
jno
das
cld
cmp
mov
pop
shlb
cmc
lods
hlt
outsl
sub
adc
jmp
jno
pop
in
in
test
popf
fidivrs
fldt
and
mov
movl
jne
fcomp
and
cwtl
stos
mov
sahf
jg
dec
jne
mov
sub
adcb
pop
push
ror
sub
xor
jge
add
in
in
inc
out
ja
jne
fsub
mov
mov
fildl
cmp
pop
dec
aas
add
add
int3
insl
into
loopne,pt
lods
mov
pop
int
and
jmp
push
inc
inc
and
stos
and
insb
dec
sbbb
pop
cmp
push
cmp
test
out
movsl
xchg
push
aaa
cltd
inc
idivb
cwtl
adc
sti
mov
sub
sahf
fldcw
or
dec
fwait
pop
shrb
mov
ds
fstpl
mov
gs
out
les
jl
arpl
cmp
stc
repz
pop
sbb
and
inc
fdivl
insl
into
xchg
push
imulb
sbb
mov
sub
data16
add
mov
push
loope
out
fwait
in
movsl
mov
fimuls
bound
dec
outsl
imul
stc
pushf
lds
popf
xchg
mov
or
scas
mov
mov
jl
and
pop
int3
bound
stos
cs
incb
push
rol
notb
and
sbb
dec
xorb
stc
xchg
insl
hlt
jb
ret
sub
push
jb
or
leave
shrb
push
cmp
gs
imul
scas
lea
xlat
and
xchg
pop
pop
cld
cmpsl
sub
push
add
sbb
lea
inc
je
stc
inc
push
inc
xchg
mov
or
daa
test
iret
adc
inc
lahf
jnp
and
shrl
jecxz
pop
or
cltd
jae
jae
ljmp
add
lret
bound
mov
ret
aam
scas
add
xor
lea
je
cmp
movsl
sbb
sbb
arpl
mov
jle
stos
test
cmpsl
ds
and
daa
nop
movsb
mov
and
xchg
fsubp
mov
jg
jl
xlat
add
and
ja
mov
or
ds
mov
dec
inc
cmp
sbb
xor
fs
xchg
jl
sub
mov
aad
pop
sub
imul
jge
sbb
ljmp
inc
jp
jns
ret
addb
jmp
jne
aaa
add
sub
jb
cwtl
int3
inc
pop
mov
mov
adc
jno
cmp
imul
pop
addr16
jmp
adc
xchg
add
lret
popa
bnd
aas
sbb
ja
mov
in
mov
adc
aad
cmpsb
cmp
jle
rolb
icebp
sahf
ret
sbb
shrb
push
cmp
cmpsb
outsb
jmp
lret
sbb
push
inc
jbe
xor
mov
or
stc
adc
sub
in
aas
cmp
sub
aaa
pop
test
fisubs
inc
negb
xor
lret
adc
push
movsb
jns
cld
mov
adc
ljmp
popa
mov
icebp
insl
je
xchg
jb
add
sub
das
mov
out
xorl
repnz
xchg
xlat
add
sub
icebp
jo
xor
fdivp
xor
or
mov
adcb
or
mov
or
gs
pop
jae
ds
adc
pop
mov
daa
xor
ss
stc
mov
adc
iret
in
gs
pop
int3
sbb
ret
and
pop
lret
je
cmp
test
or
jle
arpl
jge
pushf
xlat
test
add
and
dec
mov
push
test
xchg
cwtl
jmpw
xor
cmp
pop
movsl
arpl
cmpsl
inc
jp
and
xor
dec
dec
test
or
and
jp
popf
faddl
xchg
fisubrl
lret
sub
dec
or
rorl
push
sarb
jns
mov
or
sub
inc
cmpsl
dec
pop
jl
mov
jb
int
jmp
les
mov
fcmovnu
test
out
mov
sbb
dec
mov
jnp
fnsave
repnz
stos
jbe
cmp
shll
inc
lret
mov
mov
and
repnz
test
or
sbb
lds
mov
rcrl
mov
push
mov
push
jmp
push
lcall
or
aas
sub
pop
test
jo
mov
mov
lods
mov
xor
subb
in
rorl
adc
bound
data16
daa
cltd
fnstenv
mov
or
jmp
notb
stc
pushf
dec
repnz
push
int
fadds
mov
or
sub
js
jge
adc
inc
sbb
aas
xlat
mov
jmp
jge
mov
pop
xor
jbe
movsl
out
mov
jb
adcb
roll
mov
cmp
cmp
sub
sbb
movsl
lods
inc
mov
pop
sbb
ja
pop
and
fnsave
cwtl
les
inc
mov
jae
inc
cmpsl
das
mov
push
fisttpl
nop
jno
inc
jecxz
jge
sbb
fldt
filds
mov
lahf
stos
sbb
stos
stos
xchg
sbb
lret
rcrl
pop
jp
fisttps
xchg
fsts
ret
jg
sar
shrb
jmp
or
ret
shlb
jno
mov
push
mov
mov
lea
leave
int
mov
mov
fistl
mov
cmpsl
jg
out
add
les
mov
and
in
subl
fidivs
push
scas
add
test
stc
mov
pop
mov
push
lret
cmpb
pop
mov
cmp
inc
jae
xchg
sahf
inc
cmp
cltd
cmp
gs
jle
je
jmp
mov
push
stc
jl
fwait
sbb
inc
scas
js
sbb
popl
mov
or
das
out
fdivr
lods
add
or
daa
cmp
pop
hlt
fwait
in
xor
pop
cmpsb
jle
negl
hlt
pusha
push
push
jle
aas
adc
aaa
xchg
or
pushf
lods
xor
lea
out
test
push
dec
fldenv
repnz
add
adc
inc
dec
pop
inc
cs
xchg
xor
dec
and
scas
iret
xchg
mov
sbb
scas
push
sub
pop
pop
dec
sbb
imul
mov
mov
and
rorl
pop
mov
mov
repnz
xor
or
repnz
lahf
xchg
test
test
subb
or
cmp
sbbb
sti
mov
mov
inc
push
test
or
cs
xor
clc
cmp
rolb
repnz
icebp
mov
sarb
ficomps
aas
loope
pop
jo
outsl
scas
outsb
mov
fimull
jecxz
xchg
cwtl
inc
mov
push
in
xor
sbb
lods
pop
pop
push
xchg
daa
jae
pop
cwtl
lock
in
testb
pop
loopnew
insl
sbb
dec
pop
pop
pop
inc
or
mov
inc
cmpb
pop
mov
das
pop
add
adc
cmp
divb
xor
loope
enter
outsb
mov
notb
xlat
or
out
cli
dec
xor
xor
popa
sbb
jmp
xchg
in
xchg
jecxz
pusha
test
jnp
imul
jmp
addr16
cmp
icebp
xchg
push
daa
leave
bound
push
mov
pop
pop
cmpsl
ret
rol
insb
les
je
cmp
jmp
leave
and
out
inc
arpl
pop
adc
lahf
xor
fmull
xchg
xchg
and
sub
loop
add
outsl
sahf
bound
les
mov
fisttps
jo
xchg
cmp
lds
loopne
aaa
jecxz
mov
shlb
jecxz
xor
cmp
sbb
ja
mov
fadds
xchg
mov
loopne
testb
stos
loopne
mov
out
loop
fdivrs
inc
enter
scas
adc
je
sarl
cmp
int3
xchg
lods
or
sbb
push
jge
das
and
out
sub
mov
or
mov
jmp
nop
mov
test
into
adc
jp
mov
je
stos
ss
mov
ret
jne
mov
leave
sbb
xor
movsl
pop
or
in
dec
dec
add
jo
nop
cmpsb
push
das
jl
mov
mov
xor
and
test
aam
sub
xor
and
cltd
dec
pop
hlt
divl
pop
testl
adc
pop
shrb
push
adc
sbb
adc
pop
in
xchg
dec
fadd
push
jns
push
mov
or
into
push
pusha
pop
lock
push
leave
mov
dec
fcoms
cmpsl
adcl
sbb
inc
test
mov
inc
shl
imul
xor
inc
xor
adc
push
ljmp
pop
fisubl
in
sbb
scas
outsl
cmc
cmp
pop
push
in
data16
xor
adcb
cmpsl
ficomps
inc
add
sub
outsl
ja
inc
pop
out
aaa
roll
jno
and
movsb
add
outsl
test
or
jnp
je
lret
mov
jnp
sub
lcall
push
cld
cmp
mov
ljmp
in
dec
cmp
nop
clc
ret
jb
sub
movsb
inc
nop
push
mov
sub
mov
repz
shll
cmp
or
push
fwait
aaa
xor
inc
insb
fs
fnsave
outsb
mov
jo
fsubrs
push
and
pop
jg
aas
jmp
ja
addr16
jns
rolb
mov
xchg
outsl
mov
loopne
xchg
and
jmp
insl
and
and
xor
jle
xor
mov
popa
mov
lock
pop
inc
xor
sbb
jmp
pusha
xlat
aad
dec
or
lret
fadd
ret
inc
mov
adc
mov
adc
in
insl
mov
lods
adc
iret
mov
push
adc
pop
xor
aas
adc
fists
icebp
dec
repz
inc
mov
lret
lret
jae
aaa
and
sbb
xor
jnp
pop
ficoml
orb
xchg
push
push
mov
cli
scas
inc
sbb
mov
sbb
sti
aam
mov
inc
aaa
stos
or
call
push
push
ficoml
test
push
push
xor
dec
dec
or
fwait
scas
inc
push
test
out
imul
ret
cmp
cs
mulb
int
push
jbe
in
ss
push
fbld
cltd
nop
adc
xchg
out
lret
push
dec
in
loop
pop
lea
fwait
push
xchg
test
decb
cmp
add
push
add
ret
arpl
loope
jecxz
int
frstor
adc
and
xchg
minps
push
sbb
push
ss
add
pop
mov
lret
jae
mov
inc
mov
add
xchg
pop
out
mov
dec
cmp
jg
sub
daa
mov
int
adc
mov
in
push
jns
mov
popf
mov
mov
xchg
orb
orb
xor
movsb
jecxz
aam
movsl
and
mov
sbb
mov
dec
sbb
out
xchg
dec
jnp
enter
les
fwait
jecxz
data16
in
std
lret
int
xchg
lods
repnz
jecxz
pop
leave
out
sarl
dec
adc
mov
mov
pop
ja
and
sbb
dec
jae
jmp
ds
rol
inc
int3
adc
ljmp
imull
jbe
fwait
fwait
dec
adc
xor
inc
nop
inc
aam
lea
inc
dec
loope
inc
movsl
sub
mov
stos
ret
mov
sub
daa
enter
sbb
adc
sub
mov
push
outsl
push
loop
movsb
xor
test
inc
inc
stos
negl
in
dec
mov
inc
dec
jo
das
pop
in
ret
ljmp
pop
xchg
clc
adc
adc
sub
mov
sbb
xchg
imul
inc
rcll
in
jne
inc
loope
mov
add
inc
loope
cmp
pop
inc
movsb
lret
clc
fnstcw
push
ljmp
cli
cld
push
pusha
dec
add
jnp
and
jge
dec
ljmp
loope
test
data16
mov
gs
push
cld
pop
sbb
in
mov
sub
outsb
push
mov
push
mov
aas
dec
mov
clc
cld
cmc
inc
xor
cmpsb
fnstsw
movsb
pop
add
pusha
sub
shll
cwtl
dec
or
lods
mov
popf
mov
mov
mov
xor
addr16
xor
and
adc
push
sahf
popa
filds
lcall
insb
dec
xchg
repnz
add
jns
push
mov
sahf
mov
mov
popa
cmp
mov
cmp
in
rclb
inc
stos
inc
add
dec
and
loop
mov
lock
lret
mov
add
shlb
cmp
inc
sbb
mov
xchg
stc
in
cmc
iret
out
test
jno
sub
jo
mov
mov
mov
pop
dec
lds
push
pop
fs
fimull
pop
or
pop
and
jne
rcr
shlb
daa
mov
out
push
jns
das
mov
xorl
xchg
mov
out
or
inc
jmp
mov
jl
and
sbbl
xchg
and
pop
xor
xor
int3
mov
arpl
cmp
shrl
xchg
repnz
out
sbb
push
stos
in
mov
inc
push
lea
in
cli
cwtl
sbb
jmp
movsb
xchg
sub
cmpsb
mov
imul
jns
ljmp
out
ja
int3
mov
shll
fs
pop
std
sbb
in
rclb
aam
jnp
lret
pop
cmp
fnstsw
cltd
jno
jg
and
dec
sub
or
mov
pop
gs
leave
inc
and
mov
mov
mov
mov
mov
mul
add
pop
sub
dec
lret
test
loop
mov
cmp
jns
das
adc
push
xchg
jbe
add
xchg
jle
jns
push
roll
cld
je
fisubrs
sub
xchg
andb
aas
out
mov
call
lds
scas
test
sbb
stos
cmp
lea
sub
push
cmpsb
jmp
dec
jecxz
sbb
xor
push
pop
clc
or
iret
sbb
inc
shrl
mov
add
mov
push
in
inc
rclb
pusha
dec
outsl
jbe
xor
je
adc
adc
pusha
int3
push
cwtl
bound
cmp
lcall
outsb
xchg
sbb
into
or
ds
mov
add
push
movsb
inc
insb
push
inc
push
mov
xchg
out
pop
jb
dec
loope
dec
rorl
je
in
adc
fwait
rorb
mov
adc
inc
mov
call
ss
jle
icebp
repz
and
int3
jp
mov
es
cltd
push
pop
movsb
fcmovbe
nop
out
jmp
dec
data16
xchg
push
pop
push
rcrb
lret
ss
fisttpll
xchg
inc
jo
xor
inc
jae
pop
int3
pop
sahf
and
mov
cmp
xchg
and
xchg
in
adcl
daa
adc
bts
addr16
je
cmc
mov
or
jae
sbb
or
or
and
sbb
adc
jle
test
es
cmpl
out
pmullw
jo
out
sar
fwait
push
lds
insl
insb
rcrl
jl
aam
cmc
push
dec
test
mov
into
adc
out
pop
lods
into
aad
imul
mov
mov
mov
call
popa
mov
es
iret
pop
ret
out
xchg
pop
jns
imul
fdivs
repz
mov
lds
add
xor
mov
adc
repz
push
fcompl
pop
inc
xor
sbb
nop
leave
dec
and
inc
icebp
push
adc
xchg
push
push
mov
and
int
mov
data16
pop
dec
loope
mov
sub
xchg
mov
push
jbe
arpl
mov
sub
add
and
aam
imul
subb
or
ljmp
clc
test
adc
inc
mov
inc
pop
dec
push
test
push
sub
enter
cmc
insb
sbbl
lods
and
pop
pop
xchg
mov
add
mov
xabort
jb
pop
sbb
or
lock
jl
push
sbbb
sub
lret
mov
ljmp
sahf
cmp
add
jno
push
addl
test
in
dec
jge
movsb
imul
mov
or
faddl
sahf
negb
or
jne
imul
sbb
xor
inc
pop
dec
sub
ret
rclb
cli
or
pop
and
mov
jbe
push
fnsave
inc
repz
push
aaa
xchg
gs
sbb
std
inc
cltd
or
sarl
mov
push
cmovb
sbbb
jns
mov
cmp
push
nop
push
or
loopne
mov
dec
cli
add
add
cmpsl
mov
or
inc
in
xor
sbbb
xchg
data16
xor
push
jnp
cmp
inc
xor
adc
iret
mov
or
cmp
pop
sub
jns
movsb
ja
bound
xchg
je
sarl
les
xor
jmp
push
ds
loope
cmp
inc
push
add
test
iret
sub
or
cs
daa
xchg
pop
arpl
stc
std
push
loope
jnp
xchg
sbb
pop
xchg
jmp
mov
call
into
dec
adc
cwtl
out
xor
pop
fnstcw
stos
idivl
or
stos
lret
jmp
sub
inc
jb
cmp
cmp
cmp
mulb
fisttpll
dec
mov
add
jb
lock
sub
fcompl
data16
test
das
in
in
je
xchg
bound
cmp
push
cmp
ss
cmpsl
out
and
pop
lods
loopne
mull
or
imul
mov
insl
mov
jecxz
ret
pop
xor
mov
mov
xchg
aad
pushf
enter
cwtl
dec
jno
aaa
add
and
cmp
insb
xchg
inc
icebp
push
mov
mov
mov
iret
jp
idivl
mov
out
fiadds
mov
loopne
mov
cwtl
popf
push
jae
xchg
add
xorl
cmp
dec
pop
mov
movb
add
mov
pusha
in
mov
cli
jne
pop
test
add
jae
divb
fsubs
callw
inc
xor
sahf
mov
pop
lahf
xorl
pop
inc
xchg
push
shrb
and
clc
lods
into
and
add
push
lret
xchg
jecxz
push
enter
xor
lret
scas
push
stos
shr
rcrl
adc
test
adc
mov
fistpll
mov
inc
repnz
push
pop
divl
jo
hlt
sbb
fbld
mov
mov
movsl
sub
and
jo
adcb
mov
cmp
sbb
add
imull
pop
in
sarl
push
xchg
add
pop
into
fs
jmp
call
dec
packsswb
jne
fisubrs
sbb
out
movsb
mov
je
outsl
iret
mov
jle
pop
sti
and
push
jmp
repz
loopne
jb
mov
repz
data16
test
push
mov
xchg
jnp
xchg
cmpsl
scas
mov
xor
leave
ds
sub
add
mov
adc
mov
enter
fsts
ret
pop
repz
fs
mov
or
je
pusha
loop
daa
test
bound
call
dec
jp
xor
out
scas
pop
push
pop
fs
sarl
jle
in
lock
out
pop
xorb
lods
xor
add
outsl
pop
ficomps
or
sub
push
js
pusha
fimull
mov
push
jae
cmpsl
mov
cld
jmp
or
xorl
je
mov
sub
jbe
mov
jmp
inc
mov
jo
lcall
cmp
push
in
pop
mov
or
sbb
push
xchg
out
icebp
and
dec
leave
xlat
mov
pop
or
fcomip
jo
into
inc
scas
push
addr16
inc
movsb
hlt
rcll
iret
adc
loop
aad
mov
sub
out
xchg
jbe
or
fldl
add
push
push
push
fildl
stos
cld
jnp
test
popf
lock
iret
cmp
jl
push
fmulp
int3
add
lods
fidivl
jne
sub
push
leave
jle
not
ret
cmpsb
leave
cmp
cli
inc
add
iret
int3
push
pop
inc
jns
mov
jmp
pop
outsl
jp
jb
sub
cli
call
cltd
inc
lcall
jnp
sub
testl
sbb
and
sub
push
xor
ret
sahf
test
test
inc
fnstsw
mov
and
mov
lds
xchg
lcall
fwait
popf
rcrb
lods
cmpsl
int3
shll
inc
or
inc
fstps
repnz
mov
sbb
imul
jl,pt
adc
loopne
and
lcall
cmc
mov
push
fmull
imul
push
mov
pop
out
mov
xchg
push
xor
jmp
and
outsl
push
stos
cmc
mov
fstps
add
mov
push
iret
mov
lds
push
movl
cmp
xlat
jmp
mov
movsb
sub
fiadds
mov
arpl
cli
xchg
or
pop
insl
lods
dec
fwait
adc
push
pusha
outsl
mov
popf
addr16
repz
cmpsb
fwait
stos
add
mov
mov
test
fs
add
dec
xchg
ds
dec
stos
inc
jg,pn
sbb
push
out
xchg
fdivrl
out
push
popf
sub
andl
das
fists
jp
cli
jecxz
out
out
fdivs
push
leave
imul
sbb
inc
inc
pusha
shll
int
test
popa
in
or
xor
lds
int3
insb
mov
mov
test
inc
psllw
inc
std
add
inc
inc
bound
mov
ret
mov
call
in
movsl
cmpsl
push
cmp
popf
ret
lods
lret
jge
je
xor
cmp
push
bound
fcmovb
pusha
testb
mov
sahf
xchg
test
jo
adc
push
add
cltd
mov
es
add
add
mov
push
rorb
cld
loop
pop
vrsqrtps
pop
and
and
scas
scas
shll
enter
nop
lret
bound
dec
jg
fimull
lcall
mov
mov
xchg
or
or
rcrb
jno
xor
cmp
mov
jle
mov
xor
mov
lods
sbb
adc
pop
sahf
adc
push
fiaddl
rorb
inc
mov
pusha
xor
push
inc
imul
aas
pop
cmp
sahf
mov
scas
push
std
lahf
dec
clc
inc
inc
mov
mov
fdivs
movsb
sbb
ret
push
lahf
pop
les
or
int3
mov
mov
das
insb
faddl
jnp
dec
imulb
sbbl
lahf
out
push
push
jmp
loope
cmpsb
xor
mov
pop
cwtl
in
fidivs
data16
std
pop
sbb
cld
xchg
in
inc
xor
addb
js
into
mov
sbb
xor
imul
mov
sbb
xor
call
sbb
loope
mov
push
sub
sbb
xchg
sbb
cmp
jnp
lods
cltd
call
jns
sub
nop
cmp
xor
pusha
xchg
adc
pushf
jne
outsl
sub
andb
mov
jne
xorl
call
dec
or
pop
mov
popf
jge
test
dec
dec
ficompl
mov
sbb
popf
cmp
inc
jmp
nop
sub
aaa
idiv
mov
inc
les
dec
mov
insl
jnp
xchg
fldt
mov
repnz
sbb
clc
stc
adcb
push
cltd
xchg
imul
xchg
insb
xor
aad
inc
insb
mov
lock
or
pop
in
iret
loop
outsb
cli
int3
shll
mov
fwait
dec
daa
mov
mov
adc
add
imul
stos
out
sbb
cmp
test
das
inc
fisubl
mov
data16
push
jecxz
pop
sbb
mov
shlb
mov
push
inc
add
jno
cmp
cltd
movsb
fs
jl
cmc
shlb
pop
in
mov
lods
je
inc
fisubl
movsl
pusha
mov
in
xchg
pop
and
ljmp
cmp
dec
and
xor
addr16
movsl
adc
xchg
or
mov
je
sbb
sbb
mov
stos
in
cmp
aam
popf
decb
push
xor
xor
xor
dec
pusha
test
xor
loope
out
nop
aam
cmc
mov
test
sub
pop
pop
sarl
mov
frstor
cmc
ret
dec
inc
adc
xchg
push
push
xchg
sti
jecxz
movsl
idivl
pop
add
pop
in
mov
stos
xchg
sahf
gs
stos
les
mov
aaa
jno
or
out
in
mov
xor
cmc
or
inc
cmp
jmp
xchg
insl
sbb
rcrb
jmp
das
js
repz
pop
xor
ds
loope
push
rorl
dec
pop
jae
aas
cli
insb
pusha
dec
and
jg
subb
mov
xchg
imul
in
fdivr
loop
cmp
jg
push
push
rclb
ret
add
pop
cmp
push
out
lcall
mov
mov
add
lret
xchg
or
mov
sti
jne
push
xlat
je
xlat
mov
mov
test
clc
push
add
mov
sbb
xchg
je
adc
mov
mov
pop
mov
jge
stc
imul
dec
clc
stc
sub
xor
xchg
and
cli
ljmp
test
sbb
mov
jo
scas
ljmp
fdiv
sub
arpl
jecxz
add
mov
out
cwtl
subl
scas
xlat
mov
orb
or
xlat
fwait
mov
sarb
std
add
ret
or
sub
or
popa
in
jle
add
aad
mov
or
insb
inc
dec
mov
xchg
add
push
jp
loope
add
push
cli
mov
je
jge
xor
inc
dec
push
inc
out
sti
xchg
ljmp
add
mov
sbb
push
stc
jle
repz
jae
enter
sbb
scas
cli
cmpsb
pusha
xchg
push
loopne
pop
leave
jbe
fs
outsl
cmc
loop
lcall
daa
in
enter
adc
sub
repnz
fwait
les
ss
cmpsb
and
mov
dec
mov
sbb
xor
stos
jle
or
push
loope
or
clc
sbb
xchg
xorb
pop
inc
pop
push
outsb
push
popf
ficomps
les
lock
cmp
pusha
jge
out
mov
jmp
or
jae
es
push
sbbb
mov
loope
bound
out
popa
push
and
popf
das
cmp
sar
shr
mov
cwtl
push
lods
pushaw
xchg
ss
stos
loopne
jle
pop
mov
cltd
fsubl
jle
inc
mov
dec
es
mov
jecxz
leave
or
outsl
add
jge
int
imul
inc
sets
pop
stc
sti
jns
int
xor
rcl
in
push
fldcw
in
xchg
int3
or
mov
jns
inc
mov
bound
roll
lret
adc
mov
xchg
mov
jl
ja
andl
mov
out
out
mov
adc
dec
cmpsb
or
dec
mov
scas
xchg
fwait
inc
adc
jo
xchg
movsb
jne
cmp
mov
jns
cmp
scas
shll
mov
mov
push
dec
ret
sub
xor
xchg
pop
jnp
aad
adc
clc
lods
aaa
out
notl
popf
mov
pushf
dec
mov
sti
addb
or
lahf
dec
loop
scas
add
stc
lds
sahf
bound
sub
lods
idivb
arpl
addr16
icebp
inc
xor
mull
adc
insb
std
sarl
ja
ret
add
xchg
lods
xor
cltd
push
mov
in
jecxz
lret
cmpsl
dec
dec
mov
push
inc
mov
mov
or
mov
pushf
sbb
mov
aam
js
or
jge
stos
fistpl
mov
fdivs
push
into
push
sub
mov
negl
sbb
les
cmp
add
cmp
fs
cwtl
mov
xor
loop
in
leave
mov
mulb
or
dec
in
orb
xor
ja
mov
loopne
addr16
repnz
add
sahf
sbb
fcoms
call
or
shr
xchg
js
shrl
cmc
cmpsb
sbb
out
imul
cmpl
inc
sarb
add
or
sub
pop
push
sahf
dec
inc
cld
jecxz
cs
pop
mov
adc
mov
xor
mov
imull
cmpb
push
test
xor
je
mov
dec
cmc
adc
mov
out
jae
scas
and
and
test
imul
push
test
fmuls
lret
fists
xorb
insl
ja
mov
mov
pop
imul
dec
pop
dec
mov
icebp
into
sub
mov
inc
xlat
dec
mov
and
dec
aad
and
sbbb
xor
popf
xchg
xchg
xchg
icebp
pop
add
fwait
xchg
sbb
movsl
pop
stos
dec
es
xchg
xor
adc
inc
cwtl
jnp
out
push
xlat
loope
adc
inc
xor
and
cmp
aam
icebp
into
mov
sbb
mov
mov
pop
adc
pop
int
mov
sbbl
xchg
pop
fs
data16
gs
stos
mov
xchg
stos
jmp
aas
jge
shrb
push
je
push
inc
and
out
mov
xchg
test
imul
mov
or
aas
pop
mov
pusha
sub
popa
into
int
mov
pop
cmpsl
sub
out
jno
or
sti
dec
test
rcrl
lahf
stos
ficomps
sub
cltd
push
mov
mov
mov
aam
mov
les
xchg
pop
aam
xchg
adc
xor
roll
jb
fsubr
add
aam
stos
test
jae
in
mov
int
or
leave
add
jbe
or
lcall
mov
sbb
pop
xor
pop
test
subb
xchg
jecxz
jb
mov
mov
jne
xor
scas
pop
popfw
mov
pop
jne
rorb
cmc
cmp
mov
sahf
sbb
cmpsl
pop
jns
add
lret
arpl
pushf
inc
jne
pop
dec
add
sub
or
jno
xchg
int
and
cmp
loope
adc
mov
xorl
sti
mov
rcrl
std
push
sbb
loopne
push
pop
xchg
jle
adc
mov
dec
jo
xchg
nop
popa
fwait
inc
iret
mov
mov
out
out
les
add
out
addr16
adcb
lds
les
inc
pop
pop
sub
jae
imul
out
ja
aam
dec
mov
cmp
jae
imul
add
in
idivb
pop
mov
jb
in
shll
pop
std
fsubp
jp
test
imul
sbb
push
lods
lods
dec
mov
pop
std
in
in
dec
loop
jb
lods
out
xor
xchg
test
jmp
mov
es
jge
push
stos
push
push
inc
fs
push
leave
dec
lea
data16
cmp
inc
faddp
ret
scas
leave
roll
add
fwait
dec
push
sti
dec
adc
mov
mov
xor
xchg
xchg
inc
and
outsl
jns
ss
mov
add
lret
and
push
and
sbb
xchg
gs
jl
or
scas
cmp
andb
and
mov
cmpsb
mov
gs
jae
ret
popa
push
adc
push
dec
cmp
jns
mov
mov
orb
ror
mov
pop
in
xchg
push
pusha
hlt
fisubl
inc
mov
lock
test
cmpsl
pop
out
gs
sub
lret
pop
testb
out
jecxz
xchg
int
mov
push
cli
shr
cwtl
mov
sbb
pop
stc
lods
cmc
in
add
sbb
shr
pop
pop
lret
sti
pop
adc
jbe
pusha
repz
dec
pop
adc
xchg
mov
mov
push
pop
xchg
xor
cld
sbb
popa
cmp
stc
inc
enter
xchg
pop
and
dec
out
movsl
ja
daa
sbb
test
pop
negb
pop
push
mull
movsl
movsl
cmp
addb
add
cmpsl
jl
ss
in
stos
xchg
cmp
add
sbb
ficompl
and
inc
pop
call
fdivp
sub
insl
cli
cmc
pushf
insb
test
xlat
cli
and
ja
out
xchg
adc
hlt
stos
dec
jo
add
inc
mov
mov
inc
in
and
xchg
adc
push
lea
mov
pop
adcb
out
in
mov
cmp
jle
inc
pop
xor
fldt
add
lods
lret
jmp
add
mov
jge
cwtl
pop
xlat
inc
mov
mov
inc
pop
cld
insb
or
jbe
add
and
inc
push
dec
movsb
stc
pop
popf
xor
or
jl
push
mov
outsb
int
lock
xchg
ds
sbb
maxps
sbb
inc
das
and
decb
clc
xor
jnp
sub
xor
xchg
int
int
adc
icebp
dec
xor
icebp
xchg
and
dec
dec
data16
jne
pop
cmp
stos
or
ss
imul
pop
out
mov
fiadds
rolb
adc
out
inc
pop
shrb
push
push
mov
mov
outsb
jmp
scas
xchg
sub
adc
adc
mov
loopne
inc
sahf
js
pusha
aad
mov
ljmp
js
inc
das
fadds
xor
dec
mov
ds
aam
dec
sub
repnz
push
mov
mov
out
int3
xchg
jecxz
jbe
sbb
jp
lahf
pop
mov
pop
jl
lds
test
arpl
xchg
cmpsb
loopne
out
aas
dec
xor
xlat
sbb
cmp
imul
pop
sbb
in
pop
sahf
sub
pusha
adc
mov
inc
or
mov
cmpsl
add
mov
sub
sbb
gs
push
aaa
stc
loopne
adc
insl
sub
jge
sbb
shll
enter
jle
jp
dec
testb
push
lods
dec
mov
les
dec
xlat
cmp
ja
aas
add
aaa
add
test
inc
xchg
in
pop
out
mov
pop
out
repz
decl
dec
pop
int3
imul
ja
and
add
mov
sbb
mov
mov
cs
cld
pusha
enter
jns
pop
jno
lcall
fnstcw
dec
xchg
iret
and
sub
aad
repnz
inc
call
fs
add
xlat
frstor
sbb
cltd
fcoml
sub
jnp
inc
pop
cli
test
pop
jg
sbb
or
scas
adc
dec
xchg
stos
rolb
in
aam
cmc
leave
cmp
test
std
ja
in
sbb
fcmove
pusha
outsl
cmp
ljmp
push
ljmp
nop
stos
lret
lods
xor
clc
jl
jmp
inc
cbtw
and
jge
push
cli
push
stos
shlb
sub
xchg
cwtl
jmp
xor
sarb
cmp
mov
pop
jl
pop
or
pushf
xor
daa
jae
xor
xchg
xchg
fs
dec
outsl
xchg
cmp
jnp
jbe
fwait
jl
fidivrs
cmc
add
xchg
xor
jge
aad
mov
test
pop
aas
sbb
mov
mov
xchg
ds
inc
push
cmp
inc
inc
mov
imulb
push
and
mov
stc
cwtl
insb
imul
inc
and
jnp
outsb
popa
mov
cmc
pop
xchg
pop
outsb
sub
jae
fs
cltd
cmp
xor
xlat
inc
fdivr
pop
rclb
dec
loope
push
xchg
cmp
push
sbb
xor
dec
loopne
push
jno
loope
sub
bound
sub
push
pop
je
insb
mov
inc
add
inc
ss
xor
pop
mov
xor
std
adc
inc
mov
sub
xor
fisubrl
outsb
jae
std
dec
sbbl
sub
lds
jle
xchg
push
inc
push
cs
test
dec
gs
cmp
xor
popf
jo
sub
mov
cltd
dec
addr16
popf
dec
mov
push
fsubr
push
cmp
bound
and
pop
lods
int
xchg
es
and
push
mov
leave
arpl
out
mov
xchg
fcoms
push
inc
outsb
mov
mov
jecxz
cli
and
jb
ror
inc
scas
neg
lahf
dec
rclb
test
or
dec
pusha
hlt
gs
arpl
es
mull
mov
inc
jge
lea
xchg
inc
pop
cmpsb
imul
dec
ret
mov
in
nop
cmpsb
jo
int
push
inc
push
int
nop
mov
cmc
movsl
and
mov
ret
lcall
cmp
dec
scas
dec
jp
or
movsb
pop
loop
inc
push
into
fldt
xchg
sub
jg
lcall
fs
outsb
xor
mov
xor
push
addl
decl
call
cmp
shrl
inc
dec
in
or
cli
jb
xchg
add
test
shrl
push
jns
xlat
ret
jg
iret
lretw
push
aaa
dec
addr16
icebp
mov
push
fadds
jns
jecxz
fidivs
mov
xchg
or
sahf
jg
add
out
hlt
and
ljmp
out
mov
and
pop
fdivp
sub
aaa
and
push
nop
sub
xor
in
dec
add
mov
popa
push
nop
es
or
mov
pop
mov
fstl
pop
addl
xor
pusha
ret
cmp
inc
add
lret
stos
scas
cmp
cmp
gs
ror
sub
xchg
fdivp
xor
int3
popf
frstor
stc
dec
cltd
jbe
mov
pop
iret
push
fs
or
mov
pop
stc
push
cltd
lock
aaa
js
cmpsl
mov
hlt
jge
loopne
lret
inc
mov
jbe
fcmovnb
pop
out
and
sarl
cltd
nop
jp
lea
mov
rcrl
xlat
xor
add
movsl
inc
pop
mov
lods
stos
outsb
sarl
add
fsubrl
and
in
cmp
test
sub
sbb
mov
stc
mov
xchg
in
clc
push
stos
or
mov
loop
and
fldenv
pop
lea
shl
push
cmpsl
sbb
enter
test
sahf
xchg
cmp
incb
dec
inc
push
mov
push
sbb
xor
cli
push
jns
cmp
nop
xor
shrl
xor
sbb
cld
fs
inc
jbe
fstpt
arpl
add
xchg
cmp
aas
adc
cmp
dec
cwtl
pop
jae
pop
xlat
ret
je
jo
clc
mov
aad
in
xchg
lea
mov
mov
mov
cmp
sahf
icebp
cwtl
incb
inc
cmc
push
cmp
decl
ljmp
outsl
or
xchg
dec
addb
fdivrl
pop
and
fadd
mov
popf
movsl
nop
xchg
test
jbe
cmc
loope
mov
dec
mov
mov
xchg
inc
inc
and
jns
jmp
xlat
mov
test
dec
aam
mov
pop
or
sbb
xchg
cmp
scas
outsb
xor
aad
roll
pop
xchg
mov
xor
lods
lods
add
pusha
incb
lock
leave
dec
aaa
mov
sub
loopne
or
mov
push
lret
push
lss
andps
push
js
and
fcoml
data16
xor
xor
movl
fisubrs
loope
repnz
shll
inc
lret
cmc
push
push
jo
jae
pop
mov
nop
or
mov
lret
inc
fdivr
jl
jnp
inc
sbb
inc
pop
mov
xor
gs
lock
sbb
cmp
pop
fidivrl
flds
inc
stos
pop
dec
fnstcw
pop
stos
lds
mov
dec
call
addr16
cmp
mov
push
mov
xchg
mov
int3
stos
mov
pop
dec
cld
sar
push
mov
jae
aam
clc
xchg
mov
jne
ja
cmp
shll
xchg
sbb
mov
scas
pop
fabs
pop
mov
out
jmp
add
inc
fists
ds
or
push
xor
jne
jbe
es
sbb
jge
mov
xchg
je
mov
clc
fcomps
cmp
xlat
outsl
xchg
out
xchg
sub
mov
leave
movsl
rcl
sti
adc
and
int
imul
fcmovb
and
icebp
fstpl
orb
push
stos
lret
mul
cmp
stc
sbb
mov
mov
les
dec
rclw
adcb
and
into
mov
stos
xor
fwait
sbb
shrl
push
hlt
outsl
dec
sti
pop
aad
daa
xchg
cs
mov
int
sub
movsl
leave
mov
jmp
jmp
outsb
xor
inc
mov
movsb
inc
pop
xchg
mov
adc
mov
push
xor
push
arpl
sbb
out
imul
je
push
mov
out
test
push
push
lods
mov
sbb
pop
arpl
add
enter
cmpsb
in
and
scas
cltd
stos
test
lods
dec
sahf
push
inc
repz
pop
ret
mov
mov
mov
jmp
jne
push
aas
add
and
hlt
mov
std
out
mov
cmp
int
sbbb
add
xchg
daa
cmp
pop
into
fldt
decb
stos
stc
cli
aas
enter
mov
pop
sub
ret
pop
pop
and
insl
xor
imul
pop
push
push
or
mov
sub
and
push
sbb
cmp
push
aam
adc
sub
scas
jbe
push
add
cwtl
movsb
cmc
mov
aad
mov
scas
data16
push
cs
mov
sbb
or
repz
and
jnp
into
inc
jle
js
pop
scas
xor
xor
lret
jge
clc
adc
inc
sub
inc
sbb
sub
inc
and
add
aad
daa
mov
scas
leave
int
out
xchg
addr16
pusha
or
ret
out
test
fcoms
pop
jbe
stos
inc
in
and
ss
lods
sbb
pop
dec
mov
push
fmuls
mov
cmp
js
inc
loopne
ret
sub
mov
sahf
and
cwtl
nop
cmp
mov
cmc
mov
cmp
cmpsb
repnz
mov
stos
add
push
stos
pop
pushf
xor
mov
mov
inc
sbb
lcall
pushf
out
out
movsb
mov
jp
lea
xchg
out
jb
push
xchg
push
push
fsubl
sbb
xchg
mov
stc
in
adc
fsubl
mov
fwait
push
xlat
clc
call
icebp
jmp
or
and
lahf
imul
sbb
jl
arpl
mov
fidivs
xchg
add
fsts
test
cwtl
clc
and
adc
sbb
das
test
adc
inc
lret
clc
cmp
sub
inc
dec
inc
mov
pop
sbb
aad
pop
leave
xor
jo
push
sub
push
test
lcall
jecxz
arpl
aaa
ficomps
xchg
daa
rcrl
jecxz
xchg
jno
sbb
dec
setnp
fwait
sub
jg
outsb
aam
hlt
dec
stos
sbb
movsb
adcl
pop
or
icebp
fstpl
insl
stc
push
adc
daa
jnp
inc
testb
pop
xchg
mov
jb
adc
inc
inc
fidivrs
enter
sub
add
cmp
cli
push
pavgw
into
cmp
xor
sub
jae
xchg
push
shlb
aam
pop
cmpsl
add
push
out
shrl
mov
or
inc
jp
inc
jg
out
pop
push
add
je
ret
repz
pop
mov
cmp
fbld
mov
fxam
sbb
test
shll
jmp
mov
cmp
xor
and
icebp
mov
xchg
or
mov
aam
out
or
icebp
loopne
or
jo
jge
mov
aaa
sbb
sbb
cs
push
jmp
xor
lahf
test
imul
mov
fstp
mov
insl
jbe
and
std
adc
out
xchg
and
mov
repz
jmp
push
mov
jecxz
push
les
mov
js
xlat
pusha
cmp
fwait
jle
cmpsb
push
inc
dec
call
aam
lahf
movsb
and
aam
xor
das
lret
nop
pop
arpl
dec
push
inc
cmp
inc
jmp
xor
cmp
xchg
iret
adc
mov
push
pop
cmp
ljmp
movsl
jge
mov
les
out
sub
push
and
stos
call
fstpt
jae
insl
popa
fistpll
insb
cmovs
xchg
inc
cmc
imul
cmpsb
popa
in
movsb
or
mov
movl
mov
mov
mov
jle
sbb
jbe
mov
in
lcall
fidivl
mov
pop
push
sarb
xchg
pop
repz
sub
xor
enter
push
repnz
or
push
mov
sbb
mov
push
and
cmc
call
sub
shll
jge
call
and
dec
pop
or
int3
sbb
aas
enter
xor
out
inc
push
adcl
mov
push
arpl
xchg
mov
or
out
pop
into
or
push
push
fistl
lods
sub
mov
push
sahf
jb
cmp
xchg
adc
mov
fsubl
inc
sub
inc
xchg
xor
outsb
push
push
in
inc
jge
jno
pop
mov
das
pop
adc
int
mov
mov
dec
xchg
pop
or
loopne
push
in
sub
xor
js
out
mov
mov
dec
cmc
stc
or
dec
pop
out
dec
aam
jnp
mov
jae
push
sub
dec
ljmp
fucomip
iret
sti
in
xchg
sub
lahf
ss
inc
cltd
cld
loopne
cwtl
push
iret
scas
shlb
clc
and
xadd
xlat
pushf
je
add
lcall
mov
mov
jg
cwtl
ljmp
dec
xor
dec
rclb
in
pushf
out
inc
mov
xor
cmp
jae
sub
inc
cmp
scas
cmp
cmp
jns
popa
inc
xor
cmpl
jnp
pop
gs
xchg
push
jmp
popf
xor
std
shl
lahf
mov
jns
test
mov
xchg
testb
pop
lock
call
notl
jmp
testb
leave
scas
xorl
arpl
xor
and
and
push
xchg
outsb
in
mov
add
sbb
xchg
jnp
mov
pop
in
or
lods
into
mov
sub
jb
dec
mov
gs
jle
dec
out
fucomi
dec
xchg
cs
shrl
clc
enter
cltd
cmp
pushf
js
outsb
push
xchg
shrl
les
jmp
push
push
clc
xor
mov
fadds
fcompl
cltd
mov
xor
ss
jno
adc
push
ds
imul
fstps
imul
mov
or
push
push
dec
cmpb
insb
pop
dec
cmp
into
ja
aaa
jns
mov
shl
add
outsl
fadds
dec
mov
xor
mov
mov
cld
ja
jecxz
repnz
push
xchg
jae
out
jae
mov
test
add
repz
or
xchg
push
test
neg
sub
or
sub
test
sbb
sub
in
sar
adcl
xchg
mov
sbb
lret
stos
fwait
xchg
outsl
push
add
ljmp
mov
pop
mov
add
push
aas
inc
push
jns
test
lods
jae
jle
sahf
pop
iret
imul
push
mov
pop
and
xor
in
dec
or
pop
test
sahf
jae
jl
test
outsb
out
mov
ret
push
pop
fistl
ljmp
inc
adc
pop
pop
mov
daa
fsts
fbstp
pop
outsl
xor
add
mov
xchg
sub
imul
cli
fwait
gs
lea
repz
push
scas
cs
int3
int
jecxz,pn
xor
mov
leave
mov
es
clc
out
jne
xchg
xor
cwtl
fcoml
incb
test
in
pop
sub
bound
nop
or
ja
jge
arpl
sti
mov
popf
inc
mov
mov
xchg
push
dec
imul
fcomip
in
inc
sbb
or
inc
sub
jno
lret
mov
fdivrs
inc
push
push
dec
cmp
inc
cmp
popf
push
mov
cmc
jae
adc
nop
imul
lret
or
pushf
inc
cmp
in
pop
jnp
mov
xor
sub
xorb
jecxz
pop
pop
add
call
sbb
pop
stos
les
and
xor
int
xchg
sub
mov
ret
or
cmpb
ja
mov
pushf
jge
sbb
jge
inc
pop
dec
sar
fnstcw
nop
lcall
cltd
xchg
daa
or
pop
inc
movsb
int
fcmovu
push
cld
daa
and
ja
sub
fnstcw
cwtl
dec
jecxz
sahf
xor
mov
imul
xor
jb
or
fsubrp
imull
xlat
pop
pop
je
cmc
aam
pop
shll
jecxz
pop
mov
mov
ret
pop
inc
and
sub
les
mull
cmc
cmpl
sahf
xchg
mov
call
test
push
rorl
lahf
push
mov
cli
out
mov
jp
mov
xor
add
dec
cmp
push
lcall
push
mov
xchg
add
test
cmp
out
mov
insb
inc
shll
mov
push
inc
ds
fldt
push
pop
mov
sub
insl
leave
push
sub
lods
fisubrs
or
into
sbb
out
andb
int
repz
mov
jbe
cltd
lahf
push
jbe
aas
sbb
cmpsl
stos
movsb
dec
jo
xor
xchg
es
aaa
lret
inc
repz
lcall
repz
mov
icebp
pop
das
mov
sub
inc
out
sbb
jno
inc
dec
mov
mov
in
and
mov
icebp
jg
cmp
add
jg
xor
sarl
call
mov
insl
aad
int
jmp
xorb
inc
pushf
dec
and
stc
cmp
notl
cmp
call
xchg
mov
inc
mov
xchg
pop
arpl
mov
test
into
add
xor
sbb
roll
add
mov
inc
mov
adc
ds
aas
sub
aas
popf
testl
sbb
cs
clc
and
fwait
sub
scas
in
clc
cmp
inc
jge
es
int3
jbe
ja
jo
xor
stos
outsl
test
jno
sbb
push
jecxz
xchg
sub
mov
data16
aam
sub
loopne
rcrb
push
jecxz
mov
mov
dec
mov
jb
sahf
add
push
ss
sub
lods
or
mov
dec
cmp
mov
loope
out
cmpb
mov
cmp
pop
xlat
push
testl
roll
push
je
add
jnp
shlb
pushl
dec
and
test
cmp
adc
xor
push
mov
push
inc
das
dec
xor
jle
cmp
in
cmpsb
sub
jno
movsb
push
ficoml
shlb
pop
jl
xchg
scas
xchg
mov
xlat
mov
mov
xchg
sbb
lret
jb
add
mov
mov
mov
repz
jmp
stos
cmc
addr16
or
push
cmp
rclb
xchg
add
mov
mulb
movsl
les
or
leave
lret
lret
xchg
hlt
sbb
pop
jmp
mov
aam
xchg
mov
outsb
mov
xor
mov
call
xor
mov
mov
sub
pop
mov
mul
inc
pop
sbb
adc
outsl
cmpb
pop
sub
or
out
cld
fs
loop
shrb
int
pop
popf
fnsave
or
cmpsl
pop
cltd
in
loope
jno
push
push
or
call
ror
jle
add
mov
sub
pushf
jp
mov
test
inc
addr16
add
cmp
push
testl
clc
dec
out
pop
and
mov
addl
jl
xor
dec
scas
rep
mov
inc
mov
add
sub
ds
jae
fdivrl
push
mov
pushf
lock
pusha
cmpsl
sub
jmp
sbb
out
scas
sub
stos
mov
pushf
xor
subl
add
or
jecxz
jg
shlb
mov
ljmp
popw
xchg
shr
outsl
fchs
jb
imul
cmp
test
daa
cld
mov
fists
loopne
cmp
fistl
inc
mov
adc
mov
and
negl
xor
sub
pop
jb
js
mov
or
test
int
aam
enter
sbb
lds
mov
inc
test
data16
xchg
test
dec
aaa
jmp
inc
pop
cmc
jnp
outsl
xchg
pop
cmpsb
cwtl
push
arpl
sbb
pop
gs
push
jmp
out
mov
sub
xchg
loopne
push
ljmp
adc
cs
adc
xor
mov
out
mov
xchg
mov
std
inc
fs
insb
sbb
push
dec
push
xor
or
push
adc
int
push
std
int
lds
jl
les
adc
stos
loopne
cwtl
loope
jne
dec
push
and
and
cmp
xor
stos
xchg
ss
stc
mov
fldcw
sbb
adc
xor
ja
addr16
leave
pop
add
sahf
and
mov
mov
cmc
pop
stc
push
aad
loop
jo
adc
mov
mov
pop
shlb
mov
pop
mov
test
popf
nop
fstps
pop
or
das
sbb
shlb
and
icebp
add
push
testb
pop
jl
pop
xor
mov
int3
fcoms
notl
les
in
ret
push
inc
xchg
mov
jnp
movsl
push
xchg
aas
or
push
aas
insl
jmp
dec
ljmp
jb
aad
add
push
out
push
aad
push
cmp
xlat
mov
fidivl
dec
rcr
mov
pop
pop
int3
repz
jo
push
cmp
mov
lahf
aas
sarl
push
push
or
std
lock
xchg
push
ret
loope
fs
inc
dec
lds
mov
adc
sbbb
and
gs
cld
mov
lock
lock
push
adc
jmp
into
out
and
popa
rcrl
fsubp
adc
cmpsl
xchg
inc
cli
int3
mov
inc
andb
in
aam
dec
scas
pushf
insl
arpl
mov
addr16
int
jnp
cmp
add
mov
add
sbb
or
out
shlb
inc
lea
rcrl
aas
mov
push
mov
inc
xchg
mov
gs
push
fsubrl
pop
jge
icebp
sbb
pusha
jecxz
xchg
xchg
mov
push
aam
push
xor
mov
mov
clc
fidivs
shrb
adc
pop
pusha
and
dec
push
mov
jns
sub
mov
pop
inc
fnstsw
lcall
arpl
xor
dec
xchg
ljmp
rcrl
add
adc
and
cmpsl
xor
jnp
cmp
cmp
push
jb
jb
adc
add
insb
lods
scas
jo
inc
neg
popa
push
xchg
sub
pop
mov
cmp
and
push
dec
push
pop
pop
mov
ficoml
or
mov
mov
flds
fwait
cltd
jbe
jle
loop
add
loop
aaa
dec
out
mov
scas
push
js
ret
lea
mov
xor
cmp
rcrb
aam
add
into
jo
add
xchg
jl
or
sub
lock
sarl
and
out
cmp
fnsave
mov
js
cmp
mov
jb
dec
call
stos
cmp
push
dec
and
cmc
out
dec
fbstp
mov
inc
push
inc
mov
movsl
in
dec
xchg
xor
loope
or
ja
jne
mull
lcall
push
shrl
cmp
aas
das
mov
inc
popa
mov
xchg
xchg
cmp
jp
arpl
cmp
mov
mov
jno
orl
xor
cltd
mov
cli
dec
inc
repz
mov
test
shrb
std
xorb
push
gs
push
int
pushf
jp
out
mov
bound
icebp
jae
popf
mov
add
mov
push
mov
lret
fisubs
lret
mov
mov
repz
in
mov
jecxz
push
mov
lcall
sub
push
dec
mov
insb
pusha
ja
sahf
shrb
les
pop
mov
popa
insl
popf
rorb
jmp
outsb
lds
sahf
and
div
add
jmp
out
jge
loop
mov
pop
cmpsl
orb
fisttps
mov
inc
arpl
push
test
mov
cmp
loope
clc
fdivrs
shlb
push
push
insl
andb
inc
sbb
ljmp
dec
sti
mov
jne
push
fnstenv
lcall
jg
bound
jne
xor
fiaddl
lods
push
mov
loopne
push
jns
sub
ret
es
add
xor
loope
sub
dec
sub
fsts
pop
in
pop
xor
cld
dec
jmp
repnz
rorl
or
loopne
adc
stc
pop
insb
adc
dec
movsb
cmp
je
imul
ficoms
out
xor
fsubr
ss
in
or
jmp
push
pusha
lcall
cmp
sbb
mov
js
notl
xchg
xorb
jbe
jb
xor
and
jno
xor
dec
mov
sti
add
lods
add
mov
sub
sahf
lret
hlt
xor
jbe
mov
test
rorb
xor
pusha
mov
movsl
add
lds
stos
xchg
rol
addr16
pop
dec
js
rcrl
push
pop
xor
rcr
push
es
pop
cmpsb
pop
out
lds
push
xchg
cvttps2pi
adc
dec
addl
adc
jle
out
insb
inc
push
dec
mov
adc
out
sti
pop
pop
inc
mov
push
mov
and
jbe
mov
jb
adc
xchg
jle
sbb
shll
mov
scas
mov
int
loopne
jne
sarb
mov
pop
or
popf
dec
dec
ret
xlat
xlat
jp
xchg
popa
push
mov
xor
mov
pop
mov
pop
jle
xchg
adc
les
add
fisttpl
lret
movsl
mov
shrl
aaa
divl
and
push
sub
push
hlt
scas
mov
sub
cmp
es
xchg
pop
cmpsl
sbb
ljmp
push
pushf
pop
xchg
insb
pcmpgtd
nop
or
lret
and
shll
jecxz
and
or
lods
adc
int3
movsl
sbbl
cmp
jmp
fistpll
fimull
mov
je
cwtl
xchg
push
ftst
inc
out
pop
fstpt
cmpl
inc
es
dec
or
inc
mov
or
in
aaa
push
or
cmc
gs
and
test
cmp
ret
aas
jp
stc
jnp
fisubl
mov
inc
and
push
leave
push
jle
mov
dec
push
shrl
and
mov
adc
insl
in
pop
imul
xchg
ret
in
inc
xchg
mov
pop
hlt
adc
mov
inc
lret
outsl
jnp
mov
sub
sbbb
pop
rolb
std
decb
lahf
mov
cwtl
je
cmp
jle
fwait
pop
mov
insl
enter
cmpsl
nop
or
inc
xor
pusha
jo
xchg
inc
cmp
dec
push
inc
out
test
mov
and
cmp
sbb
and
xchg
ljmp
mov
aas
add
jae
lahf
into
popf
rorb
mov
sub
xchg
pop
test
cwtl
stos
xor
jns
outsl
jne
pop
add
call
jp
js
jle
adc
lea
dec
jae
das
push
pop
pop
add
cmp
arpl
rcrl
and
cmovne
and
mov
test
pop
jmp
test
xorl
or
sub
scas
movsb
adc
jmp
jne
aad
testl
add
mov
jno
aam
lods
lods
mul
mov
mov
neg
xchg
ljmp
jmp
shlb
pop
ss
test
cmpsl
loop
dec
mov
popl
xorl
cld
or
into
xor
iret
or
pushf
push
shlb
in
cmc
into
cwtl
fisttpl
lret
sub
testl
push
adc
cmc
mov
xchg
nop
pop
dec
mov
or
ds
and
mov
push
sub
sbb
negl
mov
nop
push
jns
mov
xor
and
sub
jle
jno
dec
mov
jne
es
lcall
cltd
stc
pop
call
adc
jecxz
mov
xlat
sub
aaa
push
out
sub
das
jb
in
scas
jne
loope
orb
mov
aas
push
arpl
jmp
ja
in
xorl
out
adc
iretw
inc
fldl
mov
pop
fisubrs
ja
pop
movsl
xchg
dec
test
scas
adc
ret
jno
mov
inc
cmp
mov
mov
sub
xchg
dec
mov
sahf
mov
rorb
fiaddl
xchg
mov
imul
sbb
or
scas
out
popa
and
das
mov
out
mov
jecxz
je
xor
mov
leave
gs
data16
int
mov
idivb
xchg
loop
pop
or
adc
push
mov
testb
outsl
cmp
cmp
jmp
scas
clc
ljmp
rorb
sub
out
and
cltd
push
mov
or
sbb
out
mov
or
jp
push
repz
popf
cli
frstor
inc
jmp
lcall
mov
cwtl
push
mov
mov
popf
mov
rolb
pop
dec
out
fisubrl
ja
je
pop
mov
mov
cwtl
push
mov
insb
xor
fisubl
into
fisttpl
sbb
sub
mov
push
sub
mull
adc
dec
ret
aam
xchg
adc
mov
xchg
xchg
sarl
ss
stos
outsl
int
or
mov
imul
loope
push
mov
xchg
cmp
mov
jmp
lods
xchg
lock
mov
mov
lahf
mov
add
ljmp
cmp
test
lcall
mov
in
push
sub
ja
xchg
cmp
adc
mov
ljmp
and
mov
cltd
xchg
inc
xchg
dec
in
out
fidivrs
cmp
xlat
inc
inc
sub
lods
cli
xchg
mull
into
push
out
pop
rcrb
cli
mov
push
jb
xchg
dec
pop
popf
mov
cli
sti
dec
or
sub
enter
inc
dec
and
js
sti
in
or
lcall
shrl
push
mov
add
mov
in
jmp
cwtl
or
orb
aad
ret
sbb
jae
cli
or
jmp
std
pop
test
vmovq
rcl
sbb
shlb
dec
dec
mov
cmp
pusha
pusha
inc
loope
data16
or
adc
imull
scas
dec
aas
cmp
or
mov
push
pop
sub
adc
adc
idiv
mov
sbb
pop
ss
aad
cmp
sti
roll
add
subb
insl
out
mov
mov
add
cwtl
xchg
and
adc
dec
sub
lret
mov
add
jle
jge
lea
int
mov
scas
dec
inc
outsl
push
jne
pop
pop
fs
fwait
insl
mov
bound
sysenter
fmul
test
inc
movsb
daa
and
out
cmp
cmp
adc
je
mov
dec
adc
ja
cld
xor
xchg
lods
adc
jg
mov
jno
pop
adc
xchg
mov
fisubs
rorb
xor
lds
sub
sbb
push
fwait
ret
pop
mov
or
or
mov
imul
xchg
inc
mov
std
into
xor
add
aaa
data16
lret
pop
mov
es
jae
in
inc
dec
adc
stos
inc
das
sbb
ds
call
xor
sti
loope
pop
and
popl
xlat
imul
inc
xchg
lods
idivl
cmp
stc
mov
jns
and
data16
xchg
jge
or
int
aas
fmuls
pop
iret
inc
rcr
inc
push
sbb
pusha
xchg
outsl
adc
xor
xchg
push
add
inc
cltd
inc
sub
xchg
xorl
pop
xchg
dec
xor
and
cmp
data16
xchg
push
or
orl
clc
or
scas
dec
add
test
jg
jl
and
jne
jle
add
xlat
and
sub
mov
lret
cs
scas
adc
sub
mov
in
cmp
or
jg
jge
sbb
mov
fldt
pushf
inc
jp
inc
fs
les
popl
mov
sub
push
dec
xchg
inc
test
inc
adc
enter
aad
inc
add
jecxz
cmpsl
mov
jnp
cli
lods
jae
test
xor
jge
movsl
xchg
push
jl
into
inc
aad
popa
rcrl
jns
insb
ja
xchg
sbb
leave
imul
scas
xchg
dec
mov
mov
sbb
jns
icebp
push
scas
xchg
fidivl
movsl
popa
cmc
aaa
insl
mov
jae
jbe
mov
hlt
mov
fnsave
mov
stos
xor
in
loopne
push
jl
movsb
inc
scas
jl
and
fs
fs
pop
pop
insb
cmp
nop
lods
sar
mov
adc
je
loope
ljmp
jno
movsl
in
adc
adcb
pop
and
flds
jl
repnz
mov
mov
mov
cmp
pop
and
sub
sar
in
sub
sbb
jecxz
aaa
gs
fs
and
rcll
movsb
pop
mov
in
ljmp
inc
mov
mov
xor
inc
and
xchg
mov
jge
sub
fstl
push
cmp
adc
push
lcall
push
pusha
push
inc
pop
adc
rcll
cmp
sarb
lds
and
fbstp
neg
inc
call
adc
cmpsl
aas
cmp
push
and
mov
in
dec
ljmp
xor
pop
stc
push
xchg
mov
icebp
mov
gs
je
movsb
pushf
lret
std
call
xchg
push
xor
imul
mov
push
sbb
mulb
dec
sbb
or
iret
jb
cli
scas
stos
mov
push
lea
cmp
cwtl
lea
inc
popf
xor
adcl
adc
inc
lahf
movsb
dec
in
push
mov
fdivl
iret
mov
js
shlb
es
pop
je
pop
push
jmp
xlat
pop
jge
scas
cmp
jns
jecxz
outsl
cmp
mov
in
fstpl
sti
jne
mov
lea
dec
je
int3
inc
mov
aas
bound
jmp
ja
xlat
push
icebp
call
pop
inc
sub
into
test
and
sti
push
stos
ja
fcmovb
mov
cmp
stos
push
pop
xor
popa
mov
rol
in
add
loope
nop
cmp
neg
out
and
stc
inc
stc
addl
pop
dec
call
jg
daa
jle
cmp
pusha
loopne
std
mov
inc
add
das
loopne
iret
and
xor
lea
cmp
dec
insl
out
pop
cmp
add
lods
pop
cs
add
adc
xor
push
ret
cmpsb
outsl
mov
dec
push
cltd
or
sub
out
xor
mov
rol
and
arpl
jns
inc
pop
stos
lcall
insb
adc
jmp
push
dec
mov
dec
sahf
lods
scas
and
inc
out
or
push
insb
in
icebp
in
subl
fiadds
sti
lods
mov
jl
xor
mov
pusha
sub
aad
jecxz
inc
cmp
cmp
mov
mov
adc
pop
inc
stc
xchg
test
sbb
cmp
mov
stc
sbb
jo
sbb
xchg
sbb
or
fwait
jns
lret
jne
jecxz
and
js
jmp
ljmp
inc
dec
mov
je
mov
incl
fadds
int
imul
sbb
jecxz
jmp
daa
sbb
pusha
push
and
gs
nop
cmp
mov
imul
insb
mov
clc
cs
add
dec
jecxz
jb
pop
sbb
popf
movsl
adc
adc
mov
lret
arpl
int3
xchg
mov
js
mov
inc
dec
adc
sahf
push
loopne
mov
js
xlat
out
push
xchg
inc
dec
xchg
dec
or
mov
or
movsl
or
cmp
dec
mov
mov
lods
inc
test
js
push
xchg
std
ss
sbb
sarb
sti
out
es
dec
ret
call
xorl
imul
enter
rcr
mov
pop
loope
std
out
push
mov
mov
or
jp
dec
mov
mov
divb
add
enter
outsb
es
ljmp
out
shrb
xchg
mov
xor
push
test
dec
aas
sbb
lret
sahf
test
mov
or
inc
addr16
or
sbb
lcall
mov
add
int3
out
rol
inc
mov
jo
pusha
dec
lret
inc
iret
inc
dec
xchg
adc
dec
mov
or
sub
stc
std
stos
je
ret
pop
aaa
inc
stos
or
sbb
xchg
lret
or
xchg
mov
aaa
cld
popa
cmp
push
push
adc
jne
fimuls
pop
sub
test
test
push
loop
pusha
add
xor
or
lahf
inc
xchg
test
lods
push
jmp
pop
daa
leave
sbb
mov
es
cmp
inc
leave
inc
out
mov
movsl
scas
sub
loop,pn
out
push
inc
inc
dec
test
data16
repnz
cmp
stos
and
and
and
cmpsb
lret
add
push
dec
xor
stos
and
int
lock
jne
or
mov
add
in
cltd
aam
jae
and
jmp
jns
sub
push
pop
and
loope
scas
pusha
shl
jmp
rorl
adc
adc
scas
imul
push
lret
into
aaa
out
xor
lret
inc
gs
in
sti
sub
or
dec
push
sub
test
or
outsb
pop
packssdw
sub
pop
jp
jnp
aad
pop
mov
push
movsb
lods
pop
or
ss
ja
mov
inc
jnp
jecxz
out
je
jmp
pop
fstl
or
leave
sub
rcrb
adc
inc
test
push
add
sub
subl
cmp
mov
xchg
jne
mov
adc
call
xlat
or
sahf
sub
daa
rcll
shl
mov
inc
pop
push
pop
xchg
out
mov
add
sti
push
test
xor
jns
sub
cmp
stc
movzbl
xchg
test
mov
push
pop
xchg
cmc
scas
test
push
xchg
cmpsb
mov
jg
outsb
pop
lret
xchg
jle
scas
lods
cmp
data16
sbb
and
xchg
out
sbb
in
lods
popa
add
push
or
and
out
aam
repnz
mov
enter
sahf
pushf
les
and
sub
cltd
mov
jns
push
and
je
ret
ss
xchg
ffree
out
fdivl
hlt
sbb
cmpsb
cmp
test
fs
or
pop
xchg
lock
rcrb
mov
adc
addl
mov
ljmp
and
xchg
mov
pop
sbb
jmp
psubsb
jecxz
lret
xchg
jle
adc
sahf
outsl
dec
mov
jne
pop
inc
mov
les
or
out
pop
iret
xor
mov
mov
lret
nop
jp
fwait
inc
xchg
je
test
popaw
insl
mov
insb
dec
lock
out
mov
imul
pop
popf
rorl
cmp
jge
adc
xchg
inc
push
add
xchg
test
int3
mov
mov
lock
or
pop
test
jbe
testb
pushf
pop
aas
out
jns
dec
lcall
jae
rolb
inc
xor
popa
cmp
sbbb
sbb
mov
shlb
lods
aad
in
jne
or
add
xor
popf
adc
or
inc
out
inc
out
out
xor
pop
mov
push
cwtl
fdivl
inc
or
xor
pop
test
sub
test
int
jne
inc
int3
loop
out
dec
push
add
push
incb
inc
aam
bswap
into
es
sbb
add
das
push
arpl
lods
rorb
stos
inc
outsl
inc
imul
icebp
test
dec
xchg
push
xchg
mov
jle
dec
cmp
xor
mov
imul
cmp
js
das
xchg
mov
addr16
xor
sbb
adc
xchg
pop
fistpll
testl
push
dec
lea
xlat
cltd
daa
stos
in
cmp
lods
rol
sbb
mov
cmp
dec
xchg
lret
in
int
in
add
ficomps
adc
rclb
add
mov
mov
aas
or
add
jno
sub
fucom
cmp
fwait
ret
popa
insl
scas
icebp
xor
and
push
push
and
cmpxchg
es
adc
pop
sub
andl
pop
test
mov
xlat
adc
clc
int
push
test
adc
push
or
and
shlb
jns
and
mov
xchg
cli
repz
jle
scas
mov
jecxz
je
js
scas
or
fucomip
jg
dec
test
fdivrs
cmp
jb
push
xchg
test
das
mov
pusha
shrl
fisubl
ret
mov
mov
push
push
add
std
pushf
xor
sbb
pusha
adc
repnz
data16
mov
mov
fwait
out
add
sub
push
jmp
daa
stos
adc
jbe
rep
lahf
push
sbb
lock
addb
out
xchg
divb
arpl
xchg
sub
pop
into
lcall
pop
gs
adc
insl
push
aaa
sub
jno
cmp
out
les
xchg
shll
mov
sub
xor
add
add
lock
vblendpd
outsb
call
ja
fisubs
mov
lock
fistpl
mov
or
insl
cmp
jno
cmp
cld
ja
stos
gs
inc
pushf
sarl
mov
out
add
mov
cmp
ficompl
test
subl
sbb
sub
inc
test
mov
pop
lret
fldenv
jns
clc
xchg
js
ret
rol
jl
pop
xor
popf
push
mov
jecxz
rcr
add
jne
sbb
pop
lahf
jns
ljmp
add
loopne
jp
or
into
stc
loop
mov
aas
inc
mov
ja
ret
dec
push
stos
push
mov
dec
push
aas
jg
xchg
pop
push
and
subl
xchg
xchg
jbe
mov
es
mov
mov
sub
std
inc
jb
std
je
imul
rorb
daa
push
jae
mov
enter
mov
decl
les
mov
xor
test
jns
adc
cwtl
cmp
sbb
sahf
mov
mov
pusha
in
mov
cmc
cld
dec
mov
cmp
scas
shl
stos
mov
dec
gs
adc
addb
es
sub
xor
ja
insb
jae
hlt
ss
dec
dec
push
cld
pop
add
cltd
cmp
and
push
sahf
mov
xchg
fldl
push
movsl
cmpsl
sub
and
mov
push
dec
imul
jge
fisttps
mov
rclb
add
je
lcall
inc
inc
aas
push
jmp
push
sahf
test
fstl
test
call
mov
fstps
pop
pop
out
mov
fs
sub
jne
je
cltd
inc
and
mov
inc
sbb
repz
mov
test
fst
bnd
push
and
jmp
pop
xchg
lds
sub
cli
mov
cli
arpl
mov
dec
ja
dec
das
sbb
add
jp
cmp
stos
push
sti
sarb
jae
rep
mov
rep
sub
aad
das
xchg
cwtl
add
sbb
shrb
mov
fdivr
imul
sbb
lea
or
sbb
xor
aam
xchg
cmp
mov
stos
mov
lds
cmp
imul
cmp
aaa
jo
jle
pop
xlat
lea
int
outsb
or
mov
mov
pop
cmpsl
push
stos
push
lret
sarl
adc
xor
sbb
mov
mov
mov
adc
or
addr16
cmp
push
jge
aaa
sub
shrl
dec
jecxz
hlt
sbb
sahf
xchg
addr16
sti
pop
mov
or
inc
ljmp
sbb
jns
and
adc
imul
iret
or
xchg
test
add
aaa
es
sub
lds
cwtl
jge
dec
in
dec
in
mov
addr16
mov
xchg
ljmp
mov
mov
icebp
loope
mov
xchg
jb
rcrb
xor
fldt
lahf
leave
das
mov
and
push
xchg
pop
int3
push
xchg
adc
data16
int
popf
add
sahf
test
add
mov
fidivl
lea
mov
bound
adc
fiaddl
mov
stos
dec
lcall
fdivrs
loop
xor
mov
mov
arpl
fsubl
popa
cmp
repz
xor
sbb
lock
xor
mov
shrl
and
or
repnz
mov
outsl
arpl
stc
adc
mov
fs
push
lret
xor
cmp
ficompl
in
out
sarl
dec
xor
jl
sti
jno
filds
adc
adc
and
mov
fwait
pop
enter
fcoms
jb
mov
fnstsw
in
jmp
dec
mov
pop
insb
dec
push
push
jne
imulb
sbb
sti
scas
pop
sbb
mov
xor
ss
xlat
add
ja
mov
xchg
rcll
adc
stos
push
mov
sbbb
hlt
jo
push
test
movsb
push
or
ss
ret
idivb
dec
out
xchg
mov
xchg
aad
icebp
ds
mov
cld
and
hlt
push
add
sbbl
dec
sub
nop
pop
mov
aad
cmovbe
jl
fwait
mov
imul
jle
in
ss
enter
and
mov
js
mov
add
nop
out
lret
inc
inc
mov
pop
popa
imull
pop
mov
sub
xchg
and
fwait
xor
and
push
mov
cmpsb
lret
icebp
add
lahf
inc
sub
jl,pn
sti
mov
jp
jge
insl
loopne
pop
xchg
movsl
negw
mov
jmp
and
pop
ja
ret
xchg
xchg
mov
dec
fcmovbe
xor
ret
or
xchg
pusha
enter
lods
cltd
leave
enter
insb
mov
std
sbb
lret
popa
push
ret
ficompl
pusha
cmp
scas
mov
xchg
sbb
cmp
xchg
lret
andl
jnp
div
push
or
push
push
jecxz
fld
and
hlt
sub
in
ret
mov
jg
sarl
and
dec
es
jne
in
outsl
out
xchg
mov
bound
cmp
pop
mov
jmp
ljmp
push
movsl
hlt
fdivrs
add
push
sub
insl
and
dec
and
aaa
xchg
jns
ss
mov
dec
or
stos
mov
sub
or
mov
cmp
test
mov
rorb
int3
ja
fidivl
je
jecxz
daa
fistl
ja
dec
inc
int3
mov
push
cli
xor
outsb
leave
push
mov
pop
sbb
in
ja
mov
add
inc
mov
sub
mov
fiaddl
jg
push
test
in
push
xor
cld
enter
xor
nop
jne
xchg
sahf
ja
subb
sbb
negl
aad
mov
or
jne
inc
cmp
jle
ret
xor
jg
sbb
testb
pop
int
in
sahf
stc
mov
fwait
mov
outsl
in
sbb
loopne
in
or
rclb
int
ret
sub
ret
cltd
or
jle
inc
aad
lods
add
sar
scas
out
jo
sub
xchg
fidivs
daa
lods
sub
les
sbb
cltd
jp
sti
lcall
scas
rcl
pop
fsubrs
lret
into
add
pop
jg
pop
fstl
dec
ljmp
inc
mov
sti
mov
adc
adc
cli
test
jl
jge
loope
cs
cmp
pop
mov
xchg
sti
rcl
in
inc
jo
push
mov
mov
push
ss
or
xlat
ljmp
xchg
fwait
pushf
sub
jne
sti
pop
xchg
idiv
fsubl
mov
mov
lahf
mov
sbb
sbb
sbb
or
int3
pop
pop
push
xchg
jno
cld
decb
aas
sub
out
jge
lahf
mov
dec
inc
insl
jne
mov
xor
loop
sub
pop
in
add
sub
addr16
xor
adc
cmp
loop
lods
cwtl
xchg
insl
popf
in
xor
xchg
sahf
mov
cltd
xchg
mov
cmpsb
jecxz
or
sub
lods
stc
pop
cltd
lahf
nop
mov
fidivrs
insb
cmc
mov
adc
push
adc
scas
mov
sahf
outsb
ret
jne
mov
pop
dec
mov
fs
call
mov
mov
sbbl
pop
and
sub
add
movb
mov
or
aaa
cmp
lcall
xchg
add
cltd
dec
mov
fidivl
push
push
lods
aam
mov
dec
dec
scas
aam
mov
mov
stos
xchg
sarl
enter
outsb
rcl
mov
out
sub
mov
jns
cmp
sub
loop
ss
fnstsw
xchg
jl
pop
mov
and
sti
push
std
cmp
lret
pushf
decl
pop
out
inc
pop
scas
mov
adcl
adc
push
addb
insb
jo
mov
lret
hlt
xor
andb
in
movsl
xor
mov
lret
push
mov
ss
add
add
and
imul
mov
movb
cmp
jbe
cld
xchg
cli
ret
push
mov
adcl
fisubrs
add
pop
sub
inc
faddl
out
fisttps
inc
cmpsl
jb
aaa
gs
push
fsubl
fistpl
pop
sbb
or
mov
arpl
fbstp
mov
pop
cwtl
jp
add
popf
int3
jecxz
and
in
stos
dec
in
rol
cld
imul
mov
gs
mov
xor
pop
adc
loope
popl
push
ja
mov
mov
mov
iret
xor
sbb
adc
add
xchg
out
dec
xor
es
jne
mov
mov
push
pop
adc
hlt
call
inc
aam
cmp
adc
fsub
sbbl
repz
jb
inc
xorl
bnd
mov
jo
cmpsb
pop
ret
insb
push
lods
dec
pcmpgtd
pop
das
outsl
inc
mov
mov
cmp
cmp
pop
mov
xchg
loopne
jle
test
sbb
mov
dec
int3
mov
sbb
adc
movsb
data16
sub
je
lock
call
sub
lret
test
fbld
mov
inc
addr16
pop
hlt
ss
ret
inc
test
cmpsb
pop
test
jb
andl
jno
mov
rcr
fidivrl
repz
jne
push
shll
mov
out
jno
stos
pop
jmp
sbb
out
xchg
pop
and
push
loop
add
scas
aaa
jae
and
xchg
test
cmovb
mov
mov
jl
sub
gs
dec
ss
dec
mov
iret
pop
enter
sbb
adcb
lock
nop
call
mov
inc
mov
lods
dec
mov
pop
push
into
mov
leave
xchg
roll
je
or
js
lods
jno
gs
xchg
fwait
mov
shrb
les
mov
jbe
jge
cmp
push
inc
sub
mov
xchg
lea
out
xchg
pushf
loopne
mov
add
aas
repz
mov
sub
add
mov
lock
popf
movsl
mov
push
xchg
add
andl
jl
popf
repz
pop
icebp
notl
mov
jae
into
push
add
cltd
sbb
fwait
push
into
shll
jo
jns
outsl
or
jl
mov
jg
test
inc
adc
loopne
sub
xor
adc
std
cmp
xor
mov
outsl
inc
sarl
movsbl
sbb
rorl
inc
inc
cmpsl
sub
cmp
jno
mov
fistpll
cmpsl
and
push
fcomps
movsl
and
test
fisubl
dec
mov
mov
add
into
shrb
jo
out
push
cmp
xchg
bound
pop
imul
rcl
out
mov
adc
pop
add
add
sbb
or
jo
inc
roll
or
jno
mov
test
adc
mov
sub
adc
in
inc
loopne
or
or
xchg
mov
mov
adc
scas
and
jle
or
xlat
scas
shrl
sbb
leave
das
jo
pusha
xchg
mov
sbb
lds
lock
cmpsl
fisubs
inc
dec
mov
orb
push
jp
nop
jmp
and
popf
pop
nop
push
or
rclb
sbb
leave
mov
stos
lret
int
dec
aaa
nop
stos
imul
add
push
imul
cmp
lahf
push
mov
into
jb
lea
sbb
shrl
shll
insb
and
dec
or
lcall
add
push
loope
sub
xor
nop
pop
fs
jb
adc
jns
xchg
pop
jbe
lock
cmovge
scas
push
xchg
dec
xor
shlb
sbb
add
in
xchg
sbb
jecxz
popf
lret
inc
mov
pusha
xchg
repnz
loop
in
and
xchg
mov
jecxz
shll
mov
hlt
ror
divl
pop
mov
push
pop
push
movsb
xor
pop
lcall
out
neg
sarb
mov
loope
adc
mov
pop
out
dec
xchg
and
lcall
cltd
push
xchg
sti
inc
xchg
lds
lock
mov
pop
cmp
cli
push
lret
inc
shr
repnz
cltd
insl
scas
sub
cmp
jb
scas
xchg
xor
subb
push
push
fcomi
pop
mov
ja
and
es
dec
sbb
rolb
inc
fnsave
cmp
xor
and
pop
xlat
or
pop
pop
lods
xlat
and
cmp
mov
ret
sub
fsubrs
ljmp
repz
sub
xchg
ret
mov
ret
xchg
sub
add
sub
fcomps
mov
adc
pusha
add
cltd
sub
xor
sbb
jne
and
dec
loop
dec
xor
ja
ljmp
or
xor
and
sbb
dec
and
into
insl
push
into
cmp
or
fiadds
mov
fisubrs
dec
out
das
in
and
je
cmp
inc
mov
sarl
jecxz
out
shll
pop
push
push
cmpsb
pop
push
push
mov
dec
inc
ja
aaa
xor
mov
out
mov
int3
xchg
adc
xchg
jl
push
and
lods
int
lock
xchg
out
lock
jecxz
add
push
out
mov
nop
push
jmp
adc
pop
push
mov
pop
pop
mov
shll
std
jnp
pushf
jno
aad
je,pt
jae
sub
imul
and
push
push
call
dec
dec
pop
add
push
xor
sbb
pusha
sbb
addl
mov
fisttpll
pop
push
mov
jnp
jl
xor
aas
cmc
in
add
push
mov
js
js
test
outsl
mov
sbb
sbbl
or
mov
cmpb
test
test
jbe
cmpsl
dec
jge
and
popf
push
into
dec
or
adc
jp
mov
inc
xchg
lea
sbb
int
lods
cmpsl
stos
sub
in
ds
mov
or
mov
mov
pop
arpl
enter
imul
push
cmp
scas
sbb
test
movsl
sub
cmpsl
jnp
std
jns
roll
gs
adc
andl
loope
mov
sub
movsb
jnp
fnstenv
mov
push
lods
scas
sbb
sub
fs
or
mov
out
sarb
jp
cmp
test
fisttpll
ret
pop
xor
loopne
jmp
or
xchg
xchg
stc
cmp
shrb
inc
pushf
stos
mov
gs
xor
arpl
rcl
sbb
jl
cmp
xchg
imul
insl
std
jno
ds
aad
in
lods
lods
mov
outsb
adc
mov
outsb
stos
xchg
lods
xchg
int
mov
test
cltd
stc
in
jmp
jo
jnp
push
call
mov
fmulp
insb
rorb
xor
divb
es
xchg
mov
fildll
into
loop
xchg
and
and
in
cltd
sub
testb
insb
jb
push
fisubrs
hlt
push
nop
int3
jbe
mov
mov
dec
insb
sbb
mov
sub
in
shlb
lock
and
pop
push
and
popa
aas
rcr
dec
push
cltd
lahf
fwait
cmpsb
jnp
jle
or
call
mov
sbb
push
jb
cmp
xor
push
lock
out
jo
xchg
mov
stos
jmp
mov
pop
push
xor
into
xor
push
mov
rcll
ret
mov
mov
lret
or
adc
xchg
adc
imul
shll
mov
sub
mov
loop
fisubrl
push
icebp
cmpsb
mov
cld
xchg
lods
push
mov
mov
add
or
jne
cwtl
mov
mov
jmp
and
cmpsb
sbb
xor
lods
cmp
dec
xchg
loop
pop
dec
clc
stos
daa
dec
jge
mov
or
dec
xchg
add
lret
or
mov
test
add
mov
aas
mov
out
mov
xchg
ljmp
sbb
in
jne
mov
and
inc
and
adc
push
jle
push
ljmp
das
or
and
je
jge
outsl
stc
shl
mov
daa
sbb
fdivl
lahf
pop
iret
xchg
dec
jmp
pop
push
loope
fucomip
scas
stos
pushf
popa
stos
clc
lds
rcrl
aaa
pop
cmp
add
std
addr16
xchg
imul
aam
in
xchg
jae
mov
mov
leave
cmpsl
aas
fadd
pop
fdivp
pushl
or
mov
imulb
jae
mov
push
push
loope
jns
call
stos
aam
xor
mov
test
push
popf
xchg
ds
inc
stos
cmp
xchg
lods
mov
fdivl
mov
add
dec
or
fsubrl
fcoms
fwait
and
fimull
pop
pop
xchg
fnstenv
and
inc
enter
push
xor
dec
push
jl
rorl
movsl
inc
movsb
sbb
dec
ss
mov
bnd
jno
aam
mov
lcall
cmp
pop
ljmp
dec
jb
ja
out
xchg
sbb
fsubrs
pop
imul
icebp
shrl
pop
pop
mov
lahf
icebp
sub
pop
inc
arpl
arpl
idivb
data16
xlat
and
daa
pop
push
push
mov
cmpsl
and
dec
gs
sub
addl
push
or
je
add
fdivs
rcrb
push
out
test
pop
lods
add
hlt
push
adc
mov
dec
out
addl
iret
jg
outsl
movsl
popf
add
int3
lods
in
out
xor
cld
nop
push
mov
lcall
mov
popa
lcall
sbb
cmp
xchg
push
jge
add
dec
adc
in
jg
pop
gs
jmp
mov
es
imul
push
cmp
xchg
stos
bound
ror
cwtl
mov
in
fwait
mov
pop
scas
outsl
push
mov
add
adcb
insb
add
pop
sbb
data16
out
in
or
std
aad
out
arpl
loop
cmp
rclb
sub
mov
sbb
ret
pop
xor
push
fisttpl
fiadds
gs
inc
and
popf
dec
cs
leave
sbb
inc
pop
scas
add
and
out
and
insl
xor
jp
push
bound
stos
xchg
popa
pop
fxch
dec
and
pop
push
stos
pop
test
mov
pop
jmp
shll
push
mov
lret
push
cwtl
ret
pop
push
fisubrs
mov
jns
sbb
nop
and
hlt
sarb
sbb
or
inc
fimull
fsubs
sti
pushf
push
fsubs
negb
jge
hlt
sub
fldl
not
les
mov
jno
divb
ljmp
lcall
push
mov
orb
fsubr
mov
mov
dec
fnstenv
adc
sub
and
push
ljmp
cld
shll
mov
aad
mov
adc
mov
xor
icebp
mov
cmp
pushf
test
es
adc
pop
push
sub
adc
mov
or
pushf
outsl
imulb
jg
mov
inc
pusha
ds
stc
cmp
and
add
cmp
cmp
add
sub
dec
test
jb
mov
xchg
jmp
fildl
sbb
jmp
fbld
insl
xor
leave
cmp
imul
jge
aaa
mov
daa
inc
shrl
and
rcll
xor
xor
xchg
cmc
mov
jecxz
out
inc
lret
loop
and
fidivrs
popf
jo
xchg
xchg
stos
adc
sbb
outsb
push
xchg
ret
push
mov
xor
xchg
adc
jle
and
cmp
nop
add
pushf
insb
mov
aad
jb
outsb
add
rcrl
into
mov
xchg
repnz
mov
add
out
testl
insl
scas
call
sub
test
mov
mov
and
das
into
dec
outsl
stc
xor
imul
sub
push
jl
negl
and
jmp
into
jecxz
pop
xor
mov
cmp
nop
mov
sub
jl
iret
shll
inc
fidivrl
repnz
and
push
out
mov
pop
or
gs
mov
and
fisttpll
xchg
in
mov
adc
pop
jnp
or
scas
sub
leave
in
mov
arpl
cmpl
dec
bound
push
iret
and
mov
dec
jbe
xchg
xor
push
push
lret
add
inc
pusha
shrl
mov
popa
jecxz
inc
rorl
mov
scas
push
or
hlt
dec
jnp
cs
cmp
add
jo
jmp
movsl
lret
pop
mov
add
fidivs
js
ficoml
stos
xchg
mov
sub
es
jecxz
mov
dec
push
ds
lahf
or
inc
scas
pop
xchg
dec
shl
pusha
inc
push
push
fsubrl
dec
sub
repz
dec
mov
inc
mov
mov
sbb
sbb
std
sbb
xchg
pop
and
and
out
popa
icebp
clc
adc
shll
jnp
dec
adc
cmp
sarl
mov
clc
fimull
test
out
inc
data16
and
mov
add
loope
icebp
or
mov
rclb
cmp
sub
mov
mov
fs
pop
sbb
nop
xor
call
pop
and
push
fldenv
add
push
repz
cltd
js
iret
mov
imul
outsb
dec
hlt
repz
ds
stos
mov
fsub
out
iret
sub
lcall
mov
movsl
rorb
sti
xchg
jp
lods
ret
xchg
jb
mov
pop
xchg
xor
insb
ret
js
xchg
sub
or
jb
cli
popa
pop
dec
xchg
add
cmp
xchg
lea
xor
push
sbb
stos
dec
and
cmp
jae
fiaddl
mov
notl
dec
pop
lock
jnp
and
dec
jo
enter
cmp
dec
sbb
out
es
pop
push
dec
and
ret
out
mov
lcall
pop
cmp
ja
sarb
mov
cmp
pop
mov
cwtl
dec
pop
test
bound
scas
adc
jmp
sub
lahf
jl
nop
mov
push
mov
inc
jle
and
cmp
cmp
jo
stos
es
jmp
pop
push
inc
mov
loope
lahf
mov
sbb
or
js
pop
pop
mov
or
popa
js
shlb
mov
ficompl
bound
mov
stc
jmp
out
jbe
mov
testb
cmp
fisubs
or
lock
or
mov
or
scas
push
or
out
cmp
ds
mov
and
dec
faddl
insb
mov
jno
cmp
aam
dec
and
xor
faddp
stc
inc
mov
sub
jb
pmaxub
je
ja
daa
mov
enter
lea
aam
int3
jl
sbb
inc
xchg
inc
push
repz
mov
movsl
inc
add
clc
rolb
and
or
cmp
or
xchg
cli
repnz
loope
pminub
loope
iret
pop
xchg
xchg
xchg
mov
dec
sub
mulb
dec
pop
rol
ljmp
lret
cmp
test
inc
ds
pushf
push
bound
stos
jp
out
add
das
seto
fisubs
bnd
les
xor
dec
dec
and
bound
adc
jle
fdivrs
xchg
test
xchg
mov
and
push
inc
cmp
xor
inc
scas
or
imul
jnp
or
cmp
mov
jae
jmp
int3
leave
dec
mov
lods
lret
xchg
adc
negb
inc
sti
stos
xor
ja
lea
cli
clc
xlat
and
pop
bound
xchg
sti
lods
jno
push
loopne
ss
fmul
inc
fwait
lods
mov
lret
rorl
inc
imulb
pop
mov
mov
mov
cltd
cltd
fmuls
scas
scas
mov
int
sbb
gs
dec
sbb
outsl
dec
adc
mov
out
iret
push
add
adc
add
or
mov
das
inc
repnz
pop
or
stos
int3
enter
jmp
push
aad
setle
andb
lds
psllw
out
loope
jge
inc
insb
or
sbb
inc
dec
lods
data16
jecxz
dec
insl
inc
mov
repz
scas
movsl
test
repz
push
negl
adc
jge
xchg
mov
lret
mov
rcrl
bnd
les
rorl
cs
sbb
inc
xor
out
cmp
lahf
mov
insl
arpl
mov
pop
lods
jnp
loopne
aad
xchg
bound
sub
imul
enter
cmp
daa
cltd
lret
jecxz
adc
pop
xchg
in
mov
lret
ret
shll
fisubs
aaa
pop
adc
cli
popa
push
inc
fwait
movsl
popf
les
stc
add
fcomp
dec
and
cs
xchg
jne
adc
mov
fdivrs
pop
test
or
stos
xor
push
lret
shrl
mov
pop
outsl
fs
mov
outsl
sbb
js
push
sbb
dec
ror
cmp
test
ljmp
cli
test
stos
insl
mov
dec
movl
push
jmp
into
in
shll
lods
inc
fucomip
out
mov
mov
leave
cld
jle
daa
lock
and
adc
sub
loop
sahf
jl
xchg
push
es
gs
je
inc
sbb
mov
dec
inc
add
jle
mov
fwait
icebp
pop
inc
add
movsl
mov
arpl
pop
pop
push
cmp
pop
add
inc
in
pop
inc
stos
add
jo
jle
mov
scas
shl
test
push
lea
pop
pop
lods
pop
hlt
aas
ja
jne
and
and
inc
in
adc
fdivrs
and
add
jae
daa
lcall
push
jp
adc
dec
imul
movsb
mov
push
shll
movsl
test
sub
repz
jnp
int3
lds
out
aad
ret
lea
repz
out
sar
cmp
fwait
jb
mov
ja
mov
pop
notb
lret
not
jnp
decb
cmova
cli
aad
and
pop
sub
scas
push
xchg
pop
adc
adc
and
cli
push
cmpsb
ljmp
inc
outsb
push
add
sti
in
or
fstpl
lock
jg
adc
dec
xchg
mov
test
xchg
repz
mov
mov
inc
pop
mov
cmp
pop
or
int
fisubrl
in
aad
cmp
and
loop
jg
push
imul
and
add
into
data16
pop
fidivrs
push
jae
pop
loope
lret
fdivrl
idivl
outsw
inc
ja
insl
and
mov
mov
sub
insl
arpl
mov
jg
lea
sub
jmp
rorl
pop
jmp
adc
adc
mov
inc
mov
push
out
or
lahf
inc
test
adc
or
dec
xchg
lods
adc
imull
out
stos
lock
cmpsl
push
bound
aam
sub
es
mov
xor
in
mov
cwtl
int3
or
fistpll
jbe
mov
mov
icebp
mov
or
push
inc
scas
mov
jne
out
pusha
flds
sub
xchg
leave
jne
cmp
pusha
test
fildl
adc
outsl
cmp
push
jae
mov
into
xlat
or
push
movsl
push
lcall
addr16
mov
addr16
add
jne
movsl
out
inc
sub
int3
rolb
cmp
cmc
push
sti
jmpw
xchg
orl
push
fucomp
flds
gs
mov
imul
je
fcomip
insb
adc
push
sbb
fstl
push
adc
aam
dec
sbb
or
divl
lea
insb
movl
or
test
mov
cmp
adc
jne
pop
pop
jno
inc
sub
jbe
in
mov
imul
fldl
movsl
in
sub
jge
outsl
or
push
stc
jno
mov
pop
adcb
cli
pop
xchg
cmc
loope
fwait
daa
and
loop
scas
cmpsl
sub
or
mov
repnz
popf
and
mov
mov
repnz
jg
mov
sbb
imul
scas
inc
pop
and
rcl
sti
sub
dec
ds
and
cld
xchg
dec
inc
sub
fdivs
lea
inc
aam
fmulp
sub
sbb
jl
xchg
or
jno
mov
and
mulb
ret
aam
jbe
mov
jg
pop
ds
push
adc
cmp
mov
mov
inc
int
cld
nop
daa
stc
mov
xor
rorl
sbb
imul
adc
or
fisubrs
cmp
pop
push
icebp
dec
icebp
mov
lea
jo
int3
subb
adc
cmc
sbb
icebp
push
scas
xor
adc
js
adc
push
outsb
or
test
pop
in
es
push
aas
repz
ret
call
scas
pop
mov
inc
pop
pusha
les
xchg
xor
std
mov
stos
pop
pop
mov
sti
mov
cmp
jne
aaa
xchg
in
pop
push
mov
pusha
ffreep
enter
xchg
sub
pop
daa
sbb
rcl
mov
insb
call
jl
cmp
mov
scas
fwait
les
push
shlb
or
push
jnp
push
xchg
xchg
xchg
inc
jge
clc
nop
sbbl
hlt
fdivl
ja
in
in
icebp
inc
in
test
xchg
out
fcomp
cmp
out
and
add
pop
out
frstor
push
jecxz
pop
testl
xor
mov
stc
xor
ds
ss
les
mov
xchg
lods
cmp
hlt
push
icebp
xor
in
dec
ljmp
xchg
aas
add
mov
adc
in
clc
mov
icebp
popa
fistpl
in
inc
int3
enter
jmp
sti
test
sbb
xchg
sbbb
inc
mov
fnstcw
outsb
push
jle
and
push
and
arpl
int3
ret
xchg
popa
cwtl
enter
add
cmp
dec
cmc
mov
std
jbe
rolb
push
stos
push
push
jne
inc
nop
movsb
mov
lcall
and
pop
repnz
mov
lds
push
lods
dec
sub
push
push
mov
mov
stc
clc
test
push
or
les
push
inc
inc
sbbl
mov
fisubrs
push
mov
pop
insb
call
sbb
sbb
xchg
mov
insb
cmp
and
hlt
loopne
adc
adc
je
gs
test
aas
xlat
cld
lods
nop
popf
fistpl
pop
cs
shrl
roll
cmp
das
or
mov
xchg
loope
aam
std
mov
gs
mov
pop
add
xchg
cmp
add
pop
pop
rorl
loope
sbb
add
icebp
xlat
sub
jae
loopnew
mov
mov
xchg
inc
addr16
jmp
fwait
push
inc
ret
cld
dec
loopne
cs
test
insl
xchg
jbe
cmc
or
pop
test
adc
sub
cmp
cmpsl
fisubrl
jo
push
xchg
sub
and
pop
mov
jns
pushf
andb
sub
ret
xor
repz
xchg
xchg
sub
fwait
inc
pop
ficoms
decl
sbbb
rcll
add
mov
test
daa
daa
pusha
dec
and
and
mov
or
and
mov
jge
hlt
mov
mov
push
test
imul
jl
or
push
push
in
sub
std
dec
lods
xchg
rcl
sub
imul
or
push
test
int3
insl
cmp
lods
mov
lods
enter
cmp
scas
xchg
fs
inc
imul
inc
stos
repnz
xor
dec
mov
insb
dec
dec
cmp
pop
dec
cltd
lahf
stc
jne
sti
fwait
mov
arpl
test
sbb
cltd
fmull
or
lods
nop
xor
add
js
lahf
and
cmp
mov
dec
pop
lods
enter
xchg
dec
push
xor
andb
inc
mov
rorl
pushf
lret
lods
push
out
push
mov
es
mov
push
mov
stos
add
pushf
cli
fcmovnu
es
pop
mov
xor
or
jmp
or
mov
negb
pop
or
out
lds
or
adc
je
loop
shll
mov
inc
sub
mov
or
imul
sub
push
inc
mov
jmp
fsubp
out
mov
xchg
mov
sbb
pushl
lods
pop
out
bound
int3
dec
xor
pop
leave
mov
push
test
sub
adc
adc
inc
sar
xchg
sub
lret
inc
repnz
sbbb
fldl
sub
or
inc
lea
xchg
xchg
cmp
stos
daa
out
incb
sbb
xor
aas
ficompl
and
sub
in
sar
push
outsb
lret
add
dec
push
xlat
das
sahf
xor
out
lds
pop
dec
xor
scas
imul
out
or
and
add
cld
mulb
pop
shlb
mov
and
fldt
das
cltd
leave
rcrl
adcl
pop
jle
iret
popa
push
sub
mov
addl
inc
fildl
cwtl
dec
and
pop
mov
xchg
dec
jmp
idivb
inc
mov
cmp
cmp
mov
popf
jbe
shll
es
lds
push
dec
mov
mov
and
iret
push
xchg
xor
push
repnz
push
aas
pop
add
lds
out
leave
adc
mov
pop
fdivrl
jmp
adc
inc
xchg
adc
movsb
xchg
jge
dec
insb
ds
mov
add
mov
jo
adc
sbb
push
imul
xorb
adc
sbb
cmpsb
xor
pop
out
lods
aad
fsubs
lret
les
sub
sub
jle
push
aaa
add
gs
or
insb
inc
lret
push
loope
mov
fstpt
fnsave
xor
decl
mov
or
movl
push
inc
or
fstpl
jno
cmp
xor
ss
cmp
lods
push
jb
filds
clc
movsl
xlat
mov
and
lock
jnp
xchg
or
mov
mov
add
outsb
xchg
insl
les
or
mov
jg
mull
data16
jmp
jno
pushf
xor
push
insb
movsl
call
ds
sub
sahf
jmp
inc
pop
mov
lock
xchg
inc
not
cld
and
push
jno
inc
sub
call
aaa
inc
cli
push
xor
and
aam
das
aad
fadds
js
fbld
movsb
mov
and
adc
cltd
pusha
lahf
dec
rorl
dec
stc
pop
into
xor
mov
xchg
jns
or
mov
pop
cmp
inc
jns
icebp
mov
and
sahf
mov
mov
mov
sub
push
jo
push
cmp
mov
push
iret
pop
out
mov
cmp
xchg
mov
imul
out
stos
and
dec
mov
je
leave
pop
mov
mov
dec
push
jb
mov
xlat
mov
push
nop
mov
out
mulb
faddl
sahf
test
inc
push
mov
pusha
sub
insb
cltd
and
adc
and
pop
jbe
and
mov
jne
mov
xor
rorl
sub
jnp
lcall
and
out
es
fstpl
movl
into
ds
push
xchg
push
mov
cltd
push
rol
sbb
push
movsb
cli
fildll
jmp
gs
cmp
xchg
imulb
inc
pop
stos
xchg
popa
jbe
pop
xchg
test
jg
es
jmp
mov
stc
test
sbb
mov
incl
fistpl
fbld
push
xchg
xchg
xchg
cmp
or
insl
cltd
xor
xorb
popa
jp
sbb
dec
xchg
jnp
ror
cwtl
dec
pop
add
jle
pop
mov
jb
push
mov
adc
int
push
jge
dec
shll
add
jno
pop
jl
ds
pop
loop
jbe
sub
stos
gs
add
ljmp
scas
int
pop
scas
clc
pop
jb
inc
cltd
xchg
subb
insl
or
jne
pushf
test
mov
jmp
inc
shll
bound
xchg
test
and
or
pusha
adc
fidivs
sbb
cmpsl
mov
push
ljmp
push
pushf
push
and
sbb
shll
andb
cmpb
and
adc
jno
mov
lcall
int
test
dec
clc
scas
push
lods
adc
daa
or
jp
jmp
jns
les
int3
dec
aad
xchg
aam
in
jp
mov
leave
sbb
orb
fiadds
fnstenv
mov
movsb
lods
cli
push
out
push
xchg
xor
mov
pop
aas
jae
testl
jns
xor
aam
dec
xchg
inc
imul
xor
arpl
xchg
cmp
jo
jnp
aam
insb
and
out
mov
repnz
mov
ljmp
adc
mov
mov
mov
xchg
cltd
mov
aaa
pop
adc
push
push
mov
adc
mov
in
jno
and
push
mov
cmp
mov
push
jne
shlb
adc
sbb
js
adc
adc
mov
outsb
ja
xlat
push
test
sub
mov
lcall
nop
ljmp
add
roll
pop
jno
add
loop
mov
mov
ljmp
push
sbb
cmp
and
jnp
adcb
mov
xor
movsb
insb
popa
loop
dec
jl
mov
pop
dec
xor
push
and
cltd
outsb
mov
testl
sahf
jp
rorl
fimuls
mov
loop
inc
enter
xchg
cli
dec
cmp
push
loopne
gs
imul
cli
mov
jmp
in
es
in
push
fldl
mov
js
repz
or
lahf
icebp
xor
data16
std
mov
xchg
inc
cli
or
rcl
loopne
push
in
sub
push
mov
outsb
inc
sub
mov
ja
shrb
xchg
xchg
inc
decl
pop
push
dec
cmp
in
adc
loop
xlat
mov
out
sbb
cltd
sub
jmp
movsl
sub
and
adc
cmp
lds
fdivrl
push
sub
out
push
arpl
ror
ljmp
push
inc
adc
cmp
in
jbe
xchg
movsl
test
test
arpl
inc
gs
hlt
jae
lds
das
cmp
cmp
out
sub
nop
mov
mov
data16
adc
lods
dec
add
xchg
repnz
std
test
push
push
mov
cs
test
std
movsb
cmp
ss
lea
push
popa
outsl
mov
js
out
cmp
sbb
lods
scas
mov
hlt
inc
aam
jl
adc
arpl
mov
mov
out
stc
in
and
sbb
shll
fcomps
stc
icebp
ret
or
xchg
sbb
fldt
mov
lea
sub
adc
and
inc
pop
dec
add
aas
psrad
mov
dec
cld
shll
mov
call
stos
xor
dec
and
mov
add
mov
scas
jne
lods
jp
inc
pop
sbb
repz
inc
pop
dec
adc
pushf
mov
jge
enter
fadds
dec
mov
pop
mov
into
mov
push
push
push
lcall
pop
adc
loopne
imul
cmp
ljmp
and
subb
stos
icebp
mov
imul
rcrb
fnstsw
jb
pop
mov
sbb
sub
jg
jb
scas
out
mov
jns
les
cld
jmp
loop
pop
sbb
cmp
push
mov
xor
fcoms
les
test
repz
scas
add
mov
jbe
addr16
pop
mov
lods
imul
push
or
xor
test
xor
xchg
fldt
or
fwait
add
pusha
inc
mov
sbb
sub
cli
push
in
inc
mov
add
repnz
inc
ret
clc
test
in
repnz
xor
push
out
inc
into
pop
aaa
inc
sbb
sub
sub
fs
lcall
rcll
cmpsb
sbb
mov
xchg
mov
push
cmpsl
dec
cs
dec
xchg
add
inc
test
fnstsw
nop
pop
ret
mov
scas
dec
into
push
imul
sub
or
orl
enter
xchg
push
stos
outsb
bound
adc
cmp
jg
adcl
aad
mov
cld
mov
hlt
aad
lahf
jl
cmp
add
mov
push
insb
inc
lods
jp
in
cmpl
les
sub
push
jecxz
jno
or
jb
add
dec
stc
mov
mov
mov
mov
add
pop
mov
adc
sbb
hlt
es
add
or
mov
outsb
mov
out
test
adc
in
sar
mov
adc
jge
lods
movsb
into
fnstsw
push
xor
add
movsl
push
stos
rcrl
and
add
mov
sub
and
movsl
push
mov
and
cmp
lock
std
mov
xchg
insb
into
dec
push
sti
or
movsl
or
mov
pop
mov
in
lods
xor
dec
push
rol
out
sbb
pop
cmp
dec
lock
and
cmp
ret
jb
lods
imul
sub
lea
aad
pusha
mov
out
sub
mov
shlb
in
dec
rcl
call
jbe
hlt
sbb
je
adc
cmp
adc
nop
hlt
imul
xchg
mov
mov
ljmp
cmp
ja
jnp
adc
pop
add
test
inc
in
mov
pop
cmp
xor
rcl
adc
nop
inc
sub
xchg
jl
jnp
je
stos
cltd
mov
mov
dec
lods
jecxz
jne
pop
push
mov
cwtl
pop
mov
aam
mov
int
movsb
fcoms
xor
or
cmp
sbb
and
iret
sub
bsf
push
into
rclb
mov
mov
or
daa
test
testl
jnp
nop
xchg
xor
movsl
sar
and
ljmp
push
xor
clc
outsb
jo
faddl
mov
cmpb
mov
adc
paddsw
fldl
cmpsl
push
push
jp
mov
push
xchg
xchg
int3
pop
mov
inc
add
lcall
xchg
add
imul
mov
stc
int
fisubrs
dec
popa
enter
mov
cmp
sbb
xor
les
sbb
cmp
add
sbb
gs
mov
push
or
std
adc
push
test
xor
mov
add
fs
sbb
push
jmp
sahf
hlt
addr16
pop
pop
dec
fs
stos
addb
rclb
out
aaa
jne
pop
iret
loop
iret
fwait
push
cltd
aaa
out
repnz
out
jg
std
sbb
xor
dec
mov
or
jbe
pop
push
lret
sbb
and
pop
test
pop
push
sub
sub
out
push
push
sub
push
sub
jmp
mov
ds
jne
ss
je
inc
mov
inc
pushf
jb
hlt
add
and
add
add
movl
rol
cwtl
out
ja
push
xchg
ret
dec
cmpl
in
jae
int3
mov
mov
pop
jb
inc
popa
maskmovq
divl
movb
and
inc
inc
cmpsb
imul
insb
mov
jns
clc
in
iret
pop
lret
push
cs
mov
mov
push
and
pusha
std
xchg
fcmove
out
inc
test
insb
sti
inc
test
push
test
push
js
push
jne
pop
stos
and
xchg
mov
mov
aas
arpl
and
lea
mov
dec
popf
fldenv
icebp
jg
or
int3
incb
fldl
in
cmpb
rcl
mov
repz
push
sub
pop
jg
mov
cmpsb
mov
fs
repz
hlt
xchg
adc
mov
xorb
arpl
or
lods
fistpll
jl
ret
jne
mov
cmp
in
adc
add
mov
jbe
sub
insb
push
sub
adc
gs
jb
cwtl
sahf
cs
icebp
popa
pop
adc
sbb
dec
mov
into
lahf
mov
gs
lds
jp
js
fstps
adc
nop
enter
and
sbb
jge
pop
ret
stc
and
pop
cmp
imul
repz
or
pop
das
adc
into
push
out
aaa
and
imul
xchg
js
cli
shl
out
movsl
push
rcll
pop
out
test
add
daa
inc
icebp
arpl
rcrl
mov
dec
push
icebp
int3
sub
push
add
arpl
pop
dec
jo
inc
pushf
pop
inc
fisubs
imul
popa
push
mov
ja
lods
ret
testl
filds
test
lcall
sub
or
xchg
insb
cmp
fdivrs
or
repnz
popa
shlb
xchg
lret
shll
fistpll
imull
inc
mov
adc
or
push
jg
inc
cs
gs
pop
jbe
cmp
icebp
mov
outsl
or
mov
push
cmp
arpl
es
dec
fcoms
push
lods
sbb
mov
dec
nop
sti
out
scas
cmp
js
es
je
mov
fidivl
xor
lds
push
arpl
in
mov
loopne
test
out
jae
xor
xor
push
mov
mov
xchg
cmpsb
insl
xchg
cltd
rorb
imul
sub
enter
syscall
jg
mov
dec
and
push
inc
loop
fbld
mov
push
aam
sbb
ljmp
fmuls
not
out
push
mov
aas
pushf
pop
dec
inc
js
les
sbb
movsl
inc
fcoms
add
pushf
inc
pop
or
stos
into
sub
sti
jb
or
jne
add
fistl
xchg
sahf
test
jb
push
add
xor
mov
je
insb
sub
push
adc
cltd
aas
sahf
enter
shrb
je
mov
loope
popa
pop
lods
cwtl
imul
push
sar
sbb
mov
ss
xchg
in
mov
xchg
mov
lahf
daa
mov
loope
ret
xor
andb
lea
into
insb
mov
mov
push
inc
call
inc
sbb
pop
dec
jecxz
out
push
jb
flds
pop
es
pop
inc
and
sbb
loope
jmp
rcr
orb
and
aaa
xorb
notb
fcmove
add
stos
repnz
pop
push
jae
js
and
mov
push
in
nop
dec
out
outsb
lret
mov
cmp
and
and
rcrl
ljmp
and
lahf
lcall
outsb
popf
lcall
mov
push
mov
xchg
cli
int
push
call
mov
dec
les
test
repnz
adc
mov
int3
cwtl
jns
hlt
cmp
pop
sbb
loop
add
loope,pt
add
stos
jae
and
iret
call
aas
add
shr
cmpb
adc
mov
loop
jns
xor
mov
xchg
fidivrl
gs
fidivl
cmp
inc
xor
es
call
xchg
pop
xor
xchg
out
and
lret
inc
or
inc
sub
loopne
jno
xchg
push
rorb
lcall
fistl
aas
fsubrs
lea
leave
stc
mov
les
add
in
and
dec
aam
ret
fisubrl
loopne
scas
les
pusha
aam
jle
push
jecxz,pn
jae
mov
mov
mov
scas
push
dec
icebp
xchg
test
lret
sub
push
mov
fwait
cmp
add
test
add
mov
stos
out
xchg
outsb
aam
lahf
mov
data16
push
xchg
inc
and
mov
inc
pop
sub
fsubrp
clc
push
insb
shlb
call
ljmp
test
sub
mov
gs
insb
push
mov
xor
inc
or
fsubrl
push
imul
xlat
loope
pusha
aam
cld
xor
aaa
mov
push
insb
dec
iret
add
push
out
lds
adc
daa
sbb
adc
add
push
dec
mov
push
sbb
adc
or
xchg
lahf
stos
mov
stc
mov
or
dec
sbb
lea
movlps
rol
push
mov
int3
dec
cmpsb
push
rcr
and
xchg
fs
jecxz
adc
xor
popf
or
hlt
jae
add
outsl
fwait
mov
pop
push
mov
jle
jb
cmc
shll
and
scas
hlt
movq
jns
cmp
call
lea
sbb
adc
jns
xor
dec
addr16
sbb
lahf
fmull
shrb
add
mov
fistpll
dec
call
mov
jecxz
and
cltd
cmc
inc
push
dec
dec
fstpt
mov
aas
push
jns
jb
leave
je
out
test
push
sub
xchg
test
pop
sub
bound
lret
imul
and
leavew
and
insb
add
jl
mov
js
jp,pt
fcomip
xchg
or
hlt
mov
and
sub
inc
push
mov
out
mov
cld
in
sahf
les
inc
push
stos
hlt
dec
fmull
js
and
test
push
adc
sub
cmp
aaa
pop
push
sub
mov
lcall
mov
cmpb
ljmp
das
adc
hlt
push
dec
adc
pop
mov
xlat
mov
or
dec
inc
aaa
je
dec
pop
loop
js
je
xlat
xlat
mov
stos
test
xchg
mov
insb
lock
cltd
or
sub
pop
add
adc
and
xor
popa
ljmp
sti
pop
pop
dec
cld
cs
inc
aad
int
lret
cltd
adc
xor
aam
sti
pop
lcall
in
stc
push
rep
fiaddl
shll
jg
or
rdpmc
cmc
pushf
mov
xchg
sub
jp
sbb
out
xchg
xor
cmp
lret
inc
lds
sbb
cld
sub
mov
cmp
leave
mov
roll
shlb
inc
nop
mov
mov
add
int
mov
mov
fxam
xchg
test
sub
outsb
dec
mov
inc
and
mov
sub
out
xor
inc
sub
gs
mov
ja
es
sub
outsb
xor
xchg
rclb
shrl
mov
fistl
pop
enter
clc
pop
cmp
pop
xchg
jns
and
add
mov
lcall
or
sahf
add
cmp
cmp
push
pushl
addl
lock
aam
test
pushf
inc
jle
fcomps
mov
movsb
jo
loopne
or
jnp
insl
push
adc
dec
and
aam
and
rcr
jg
lahf
insl
push
inc
adc
std
mov
stos
fwait
popa
mov
lahf
jmp
icebp
jbe
pop
mov
pop
lds
mov
sahf
cmp
xchg
gs
pop
mov
inc
les
sub
xchg
sub
pop
out
push
popf
and
roll
cmpsb
mull
lahf
inc
dec
in
sbb
cmp
sub
imull
cli
push
mov
inc
test
cmp
adc
pop
aam
pushf
sub
adc
ret
dec
shr
adc
mov
into
loop
inc
cwtl
xor
cwtl
add
and
jns
mov
addb
mov
daa
fcoml
and
jmp
lret
sub
subl
inc
leave
je
icebp
fiaddl
mov
dec
lock
add
cli
movsl
jg
cltd
sub
sbb
add
adc
mov
std
stc
sbb
loopne
inc
mov
cmpsl
xchg
clc
lock
repnz
leave
hlt
push
daa
jb
fisubrl
enter
or
add
mov
push
mov
aam
outsl
cmpsl
dec
ror
sub
clc
ror
sbb
push
mov
jb
loop
mov
incb
addb
push
adc
stos
xor
into
cmp
in
jge
cwtl
scas
ret
addr16
add
divb
jle
jmp
pop
jnp
jge
dec
aas
lock
or
mov
cmp
sub
sbb
mov
cwtl
adc
mov
inc
fimull
sub
ret
pushf
imul
xchg
jne
mov
push
jle
pushf
jnp
xchg
sbb
lgs
inc
adc
in
in
adc
xchg
lock
mov
pop
mov
or
jge
cmp
popa
inc
push
push
popa
sbb
fs
mov
adcb
gs
lcall
lods
shlb
out
push
push
and
das
sbb
sbbb
jg
outsl
repz
mov
cmp
jb
xor
int3
out
cltd
adc
lret
int3
out
lds
out
xchg
dec
mov
pop
sub
in
popf
mov
inc
dec
xchg
push
loop
sub
shrl
lods
push
sub
rorb
ret
xor
fisubrl
loope
sti
xchg
decl
je
xchg
inc
inc
pop
cmp
fwait
jmp
sbb
movsl
shr
js
sbb
je
jg
pushf
xor
lcall
imul
lods
filds
push
mov
dec
mov
adc
cmp
sub
mov
adc
fcmove
mov
ret
dec
popf
fmull
rclb
or
cmp
add
cmp
shrl
out
cmp
loope
lods
out
sbb
js
les
ljmp
add
dec
nop
cmp
jno
xchg
and
hlt
mov
lret
stos
ret
mov
jg
mov
lahf
fprem
dec
nop
js
push
fsubrs
fsubl
ds
dec
loop
dec
push
cmpsb
shlb
repnz
out
pop
add
sti
lods
adc
lahf
adc
hlt
mov
and
out
jno
dec
inc
sahf
sar
dec
and
das
pop
mov
pop
pop
jne
sub
cmc
push
fsubl
bound
je
shrl
add
stc
sub
sub
cwtl
push
xor
add
jecxz
mov
xor
repz
mov
icebp
notl
mov
cmp
dec
jge
pop
movsb
mov
testl
int
enter
fs
cmp
mov
aad
repz
aad
mov
mov
pop
adc
rcrl
sbb
pop
rorb
push
adc
stc
xor
cld
xchg
xor
sub
mov
push
call
sub
pop
mov
hlt
mov
testb
mov
push
ds
jmp
stos
dec
aam
jns
jno
cmpsl
lods
and
sbb
mov
inc
xor
mov
dec
push
jmp
movsl
scas
sbb
and
mov
jecxz
xchg
bnd
lea
ret
test
mov
inc
lods
jle
sbb
inc
lcall
push
cmp
sahf
jno
or
pop
out
hlt
mov
jo
loopne
jg
xchg
xlat
rcrb
mov
cmp
pop
pop
push
cmp
movups
sub
xchg
lock
push
aaa
in
jb
aas
shlb
cli
lds
push
arpl
scas
mov
fcmove
sub
bound
call
xor
mov
sar
cmpsl
or
pop
fstpt
adc
mov
sub
cmc
xchg
cmc
sbbb
out
ret
inc
repnz
dec
pushf
div
and
enter
addb
adc
xor
jae
lods
jns
cltd
cmpsl
sub
leave
int
add
adc
leave
cmp
outsl
and
adc
fsts
mov
andl
loope
fcomp
jns
cmc
outsl
inc
add
and
add
clc
push
cwtl
ret
jns
fidivl
cmp
mov
call
aam
fdivrp
addr16
and
mov
shlb
repz
int3
loop
pop
xchg
add
mov
push
shll
hlt
jb
xor
push
xchg
std
cld
fadds
fidivrl
lods
sub
xchg
pop
iret
shll
xchg
test
fisttpl
or
dec
mov
mov
dec
mov
mov
pop
xchg
push
add
test
mov
int3
jmp
arpl
gs
jp
xor
stos
nop
adc
xchg
enter
sub
cmp
in
jbe
insb
pop
pop
or
xor
sub
adc
mov
pop
dec
cltd
pop
movsl
pop
test
insb
xchg
sub
and
xor
aad
dec
pushf
push
inc
pop
mov
fidivrs
movsb
and
sbb
jno
mov
adc
cld
in
cmp
xor
mulb
and
mov
or
bound
add
mov
and
jmp
jbe
sub
pop
and
dec
mov
arpl
and
stos
sub
dec
sbb
mov
add
scas
push
shll
dec
dec
jns
jno
xchg
add
int3
sub
dec
adc
xchg
pop
pushf
sar
jg
test
addl
shrb
add
and
mov
mov
sbb
out
loope
jae
push
sti
fisttpl
addr16
xchg
cmc
sbb
pop
jecxz
fdivrs
xor
in
int3
ljmp
add
in
dec
movsb
movl
fidivs
inc
rclb
mov
clc
lock
mov
or
xchg
pop
jbe
push
loope
lods
and
ja
rcrl
and
in
mov
scas
inc
addl
scas
mov
mov
ja
and
xor
lcall
sbbb
orb
cmpsb
ds
mov
cmpsl
and
sbb
jb
test
clc
imul
pop
add
lds
cltd
aad
daa
push
pop
cmp
mov
inc
pop
gs
test
and
not
out
and
int
shll
and
ficoms
push
dec
push
sar
add
loop
leave
sbb
cmp
pop
xorb
sarl
enter
sbb
arpl
in
mov
add
mov
push
push
in
insb
add
and
fildl
cmpsl
hlt
cmp
cmpsl
lea
mov
adc
repz
xchg
mov
cmc
movsl
outsl
mov
mov
adc
xchg
orl
loopne
sub
pusha
add
mov
movsl
loop
stos
pop
imul
aam
push
jno
and
aam
stc
pop
testb
xor
icebp
popf
add
into
aaa
sub
add
lahf
push
cmp
aas
xor
inc
jg
cmp
push
insl
and
push
mov
mov
insl
push
sahf
icebp
cltd
movsb
mov
cltd
mov
aad
mov
fidivrl
jle
sub
nop
jp
dec
mov
lods
sub
std
loopne
idivb
sbb
pop
inc
mov
pop
daa
jle
mov
subb
sbb
pop
and
mov
aas
push
bound
imul
mov
xchg
mov
mov
mov
clc
push
mov
test
and
gs
mov
clc
pushf
add
icebp
sahf
popa
sub
mov
add
sub
orb
imul
mov
xor
daa
pop
jl
decb
scas
and
xchg
push
mov
repnz
add
pop
or
jmp
stos
data16
movsb
movsl
cs
fs
pop
inc
sub
mov
je
push
addb
and
mov
lods
mov
adc
in
pop
inc
sbb
inc
aas
adc
fistl
int
int3
in
popa
movsl
cld
lods
dec
and
jl
fs
cmp
jmp
jp
imul
fstpl
jnp
cmp
mov
xchg
inc
jecxz
xchg
xchg
fldl
outsb
int3
enter
rcl
test
jne
dec
dec
push
sbb
nop
or
js
sahf
lcall
roll
cs
sub
lret
pop
cmp
out
sub
adc
repz
fldcw
stos
mov
jbe
xchg
das
push
sahf
call
data16
mov
sbb
jmp
inc
cmp
dec
sub
adc
mov
fcomps
das
ja
jo
push
insb
outsl
xchg
es
fildl
mov
push
xchg
fsubs
notl
pushf
and
pop
lahf
hlt
xchg
and
fbld
loopne
adc
stc
xchg
and
adc
adc
mov
mov
and
stos
pop
dec
outsb
push
ljmp
sbb
inc
adc
icebp
jmp
jmp
push
push
mov
mul
sti
nop
ss
faddl
jnp
pop
les
push
insb
int3
bound
fs
mov
cmp
mov
pop
lods
push
lock
cwtl
iret
idivb
push
pop
popf
outsb
xchg
push
mov
sarb
add
or
cmp
clc
fsubrs
por
mov
mov
sub
daa
mov
inc
mov
pushf
lea
iret
sarl
lahf
jae
cmp
call
add
inc
pop
cmp
in
push
xor
nop
movsl
sub
shl
jmp
into
and
inc
subl
fwait
out
inc
mov
inc
sbb
jns
bound
in
mov
jge
cld
popf
test
or
scas
cli
push
dec
ret
pop
dec
ss
mov
add
mov
nop
or
sub
ds
hlt
insl
lcall
inc
je
push
mov
xchg
mov
jle
inc
fs
insb
dec
push
daa
dec
and
push
cmp
js
sbb
ret
outsl
ljmp
xchg
mov
stos
test
lds
fdiv
rcll
and
insl
inc
pop
push
mov
push
sarl
punpcklwd
adc
and
mov
jo
std
mov
std
adc
lock
aad
mov
push
loop
shlb
inc
jmp
jecxz
push
mov
dec
nop
dec
mov
std
into
mov
sub
jmp
jo
mov
das
ss
pop
mov
stos
int
popa
pusha
call
cmp
dec
pop
test
or
imul
aad
imul
pop
imul
aad
ret
xchg
in
dec
sub
movsb
scas
add
out
in
dec
mov
jp
das
jns
fwait
divb
fstl
into
inc
inc
push
xor
cld
xchg
xor
iret
sbb
divl
pop
rcl
mov
mov
inc
cwtl
ja
add
or
popa
fists
imul
les
push
lahf
jecxz
lods
push
dec
fists
or
dec
not
jg
jno
inc
and
push
sub
int
movsl
cmpsl
push
push
stos
jne
cld
movsl
pushf
loope
jne
or
dec
cli
cli
jno
scas
dec
rol
jl
in
repnz
into
fsubrl
out
jbe
fisubs
test
aad
lock
inc
xor
xlat
fwait
cmp
pop
outsb
pop
dec
das
mov
addr16
fldenv
mov
jg
jno
es
dec
pop
mov
out
xchg
stc
inc
aad
push
scas
fs
jbe
mov
xor
std
and
rorl
push
mov
dec
mov
cmc
sbb
fsubr
cld
scas
fdivp
cld
cmp
in
xchg
and
adc
movsb
push
inc
dec
push
xor
dec
stos
test
push
dec
cmp
jle
sahf
jecxz
stos
push
mov
inc
je
jo
pop
push
mov
repnz
jno
std
aaa
cmpb
cld
sbb
sbb
popf
sarb
lods
aas
lret
pop
inc
dec
filds
mov
xor
lret
loope
and
test
xor
mov
pop
cmc
jb
decl
push
movsl
bound
fnstenv
ljmp
dec
cld
adc
and
pop
sub
push
in
dec
mul
mov
shrb
or
inc
jmp
sbb
scas
jbe
insb
arpl
push
dec
mov
out
adc
mov
mov
sbbb
sub
cmp
cmpsl
xor
push
loope
sti
lret
sbb
push
xor
xchg
pop
adc
ds
mov
xor
and
les
dec
pushf
xorl
bound
test
add
ret
lock
das
push
xchg
pop
push
sbb
in
xor
rol
cmp
sbb
out
pop
dec
int3
into
jg
rcll
sub
mov
aaa
addr16
cmpsl
mov
scas
fstl
ficoml
jmp
imul
addr16
loopne
jb
insl
es
dec
push
gs
inc
int3
aad
mov
divl
sub
push
sbb
leave
nop
or
out
in
stos
out
lock
mov
repz
cmp
and
fisttps
pop
pop
sarb
js
sub
adc
mov
fisubrl
lods
test
push
aaa
jl
scas
arpl
dec
sub
xchg
lock
mov
cs
inc
inc
movsl
pushf
push
test
test
pop
xchg
mov
scas
sbb
mov
jl
stc
fsubrp
pusha
dec
jno
push
adc
sbb
pop
outsl
sbb
xor
test
xchg
pop
jo
sub
mov
sub
fisttpll
adc
lahf
iret
push
jae
push
jmp
lret
ret
fdivrl
mov
hlt
in
push
mov
mov
inc
cmp
and
xchg
fldlg2
push
mov
sub
mov
cmc
cmp
pop
ficoml
xchg
inc
xlat
push
lock
lods
cmpsl
ror
shrl
bound
xchg
clc
pop
adc
sub
jg
leave
imul
sbb
pmullw
out
shlb
jo
iret
gs
leave
sub
addr16
cltd
mov
sbb
pushf
push
xor
mov
pop
pop
ja
xor
add
adc
xchg
nop
loope
mov
inc
mov
inc
adc
jge
pop
mov
fidivrs
mov
mov
rol
mov
and
fsubp
push
mov
xor
mov
imul
jno
jecxz
hlt
cwtl
sbb
mov
and
mov
loopne
fsubr
clc
or
int
inc
xlat
dec
or
push
fwait
mov
xor
mov
repz
add
sub
popa
dec
add
push
das
sub
lret
xlat
xor
ffreep
scas
jo
mov
xor
cwtl
mov
jno
pop
cwtl
xchg
test
xor
dec
mov
mov
adc
imul
insb
adc
dec
mov
iret
enter
fs
push
adc
mov
pop
mov
lea
insl
add
add
mov
xchg
add
fwait
rol
and
push
es
and
cmp
and
cmp
and
stos
inc
cli
lods
fsts
mov
out
shl
jmp
or
addb
mov
pop
push
xchg
pop
sub
inc
lea
shll
jg
or
subl
jg
jl
and
or
aas
lods
imul
cmc
insl
aaa
adc
dec
add
pop
scas
xor
out
jno
xchg
xor
into
sbb
fsub
cltd
rcll
xchg
jg
dec
movsl
loope
in
imul
testl
xchg
dec
mov
push
jae
mov
movsb
jge
sbb
pop
adc
mov
lods
clc
xchg
ret
mov
cmp
aas
clc
add
icebp
sub
fistpll
inc
and
andl
and
dec
push
std
int3
or
lret
movsb
test
mov
mov
push
add
shr
dec
loopne
in
or
mov
xchg
inc
sub
repz
lock
pop
and
clc
cmp
xchg
mov
addr16
jp
cmp
not
popf
vpmacswd
movsb
add
pop
xchg
aaa
sbb
call
jmp
sbb
popf
pop
and
mov
xchg
imul
rcrl
loop
mov
les
mov
stos
cmp
lea
add
adc
scas
adc
inc
xor
int
jge
xor
pop
cmc
push
fwait
adc
mov
out
ja
pop
sub
popa
pop
mov
inc
pop
jge
repnz
mov
fstl
mov
cmpsl
rcrb
jmp
in
addr16
sbb
or
xchg
jle
cmp
mov
shll
xlat
out
mov
pop
mov
mov
sahf
ja
sbb
loope
inc
xor
jecxz
xchg
std
sbbl
mov
lods
sar
adc
xchg
stos
lods
pop
cmp
push
scas
loopne
lahf
mov
xchg
loop
push
mov
popf
repz
lret
mov
stc
xchg
push
add
push
pop
movsl
push
xchg
and
lds
mov
and
add
push
xchg
cltd
inc
dec
push
jl
cs
outsb
inc
popf
xchg
or
xchg
mov
imul
fs
imul
loop
pop
out
add
leave
and
push
cmp
inc
add
into
xchg
lahf
dec
push
xchg
pand
or
mov
decb
fildll
cmp
cmp
shlb
negb
lods
fisubl
and
adc
push
ffree
xchg
cwtl
and
daa
push
lods
nop
pop
add
rclb
cli
inc
hlt
js
push
inc
push
addr16
out
or
fsubrs
jmp
lea
xor
lds
push
adc
xchg
test
notl
push
add
push
aad
icebp
test
sbbl
and
adc
sub
lds
and
cmpsl
or
orb
ret
fistpl
ret
push
aad
pop
add
or
xchg
out
btrl
mov
sbb
xor
xchg
pop
or
stc
sbb
loopne
pop
mov
aad
loop
out
rolb
fidivs
loopne
xchg
lcall
aad
adc
ret
daa
inc
cli
imul
push
cltd
xor
and
sti
pop
fwait
pushl
adc
mov
out
push
dec
dec
test
lea
push
xor
push
dec
pop
icebp
lods
es
sbb
add
js
mov
jb
rcll
mov
and
jge
jmp
dec
jo
jae
push
pop
pusha
ja
leave
adc
mov
and
xor
push
sub
bound
jae
xchg
ret
pop
fimull
scas
sbb
ret
mov
and
mull
cmpsb
inc
cmp
pop
pusha
xor
xor
mov
stos
mov
pushf
jmp
xchg
add
enter
cli
ret
mov
xchg
jo
notl
sbb
push
jns
lcall
insl
add
imul
lods
ret
and
pop
or
xchg
in
cltd
sbb
mov
xchg
inc
jns
dec
clc
add
adc
fimull
adc
clc
dec
add
adc
in
ja
lahf
scas
add
sub
fwait
inc
xchg
into
dec
shrl
mov
inc
or
mov
push
or
jae
add
bound
test
ss
jbe
cmpsl
icebp
pop
lcall
insb
int
xor
aad
in
push
adc
scas
test
push
or
mov
inc
insl
mov
cmp
jns
mov
jno
lods
test
or
test
mov
cltd
das
popa
test
arpl
sbb
xor
fisttpll
dec
popa
enter
mov
lock
and
add
add
outsl
fisttpl
inc
fs
pop
icebp
aaa
mov
ljmp
push
loop
cmpsl
push
mov
sbb
enter
cli
mov
push
test
divl
iret
outsb
jle
nop
mov
mov
sbb
xchg
pop
clc
call
sub
jns
ljmp
mov
fadds
jge
adc
sbb
mov
lods
sbb
call
loopne
sahf
pop
mov
xchg
dec
or
sub
mov
pop
sti
sub
or
jno
add
pop
add
shl
xor
into
pop
cwtl
mov
js
cs
orb
sub
push
mov
lock
cmpl
js
push
sti
fnsave
dec
outsb
adc
stc
xchg
jmp
lea
stos
inc
aad
sub
xchg
sub
jb
mov
loope
ljmp
sub
add
movsb
push
sti
jne
fs
dec
insb
popa
rclb
rolb
gs
aaa
xor
mov
and
mov
je
sub
repnz
scas
outsw
jae
xchg
mov
dec
mov
mov
ss
xor
rcrl
mov
clc
xchg
imul
xchg
cmp
sbb
cmp
je
out
hlt
pop
lret
jnp
sbb
cltd
xor
das
inc
inc
push
adc
fmuls
xor
aas
nop
js
jp
in
in
mov
mov
xchg
sub
mov
sbb
test
fld
aam
repz
pop
mov
and
mov
fs
fldenv
repz
sti
cmc
adc
subl
jno
adc
outsb
out
iret
mov
inc
mov
sahf
xor
stos
loopne
jecxz
inc
dec
cmp
and
push
inc
or
or
lret
xor
push
inc
mov
stos
xchg
jnp
mov
and
dec
imul
aam
xchg
repz
movsl
sub
inc
jb
fadds
jmp
psubw
pop
mov
adc
and
add
xchg
fcompl
sbb
shlb
shlb
pop
rolb
inc
ret
sub
les
gs
xor
mov
loopne
mov
inc
mov
cs
dec
and
cmc
adc
bound
sub
ret
rcll
mov
jae
jne
stc
adc
xor
movsb
xchg
imul
mov
inc
negl
imul
ds
lret
enter
mov
inc
test
inc
std
mov
push
jns
test
lret
and
sarl
sahf
adc
gs
pop
xchg
jg
out
dec
dec
arpl
mov
stos
fiaddl
xchg
ficomps
inc
ror
jle
lret
jbe
sub
in
sub
sbb
ljmp
insb
mov
cmp
inc
mov
mov
jno
es
adc
shrb
arpl
imul
adc
jmp
dec
mov
fisttps
out
push
push
cmpsb
icebp
jb
or
xchg
mov
aam
push
xor
repz
mov
mov
dec
sbb
adc
popf
imul
stos
jle
pop
das
sete
testb
outsl
mov
sbbb
scas
xchg
sbbl
jmp
ljmp
test
int3
xchg
adc
gs
loop
rol
incl
scas
or
xchg
or
pop
pop
mov
jb
lds
je
inc
lret
sti
or
ja
dec
js
mov
out
aad
sahf
out
cmpsb
scas
test
rclb
stc
fcomi
sbb
or
cmp
push
mov
mov
fldenv
dec
jmp
std
loope
inc
pop
pop
pop
movsl
xchg
cli
daa
xchg
and
std
push
mov
mov
jbe
cmc
push
ficomps
cli
sbb
pop
sub
lds
lcall
imul
loopne
es
cmp
mov
pop
push
jl
aas
xchg
sub
repz
jae
inc
fadd
cli
mov
fisttpll
or
push
sbb
dec
push
inc
sarb
sbb
jbe
mov
inc
jae
data16
sub
scas
xor
dec
shll
sahf
cmp
jg
dec
jno
stos
cs
add
int3
lret
stos
shrl
mov
jbe
mov
mov
xlat
add
sbb
cmpsl
test
flds
adc
mov
push
scas
adc
mov
pop
push
adcl
mov
lcall
in
icebp
inc
into
leave
cmpsl
add
negb
movsl
add
div
mov
jb
sti
int
xor
loopne
stos
adc
mov
ret
ret
and
jmp
and
inc
mov
add
pop
xchg
push
mov
pushf
dec
mov
std
mov
aas
ret
fistps
mov
in
add
and
push
das
xor
iret
loop
add
push
jle
xor
add
ja
pusha
sub
outsb
orb
mov
imul
mov
mov
and
test
je
mov
xchg
xchg
cltd
lods
popa
adc
fs
pop
mov
cmp
and
push
pushf
xlat
clc
add
xor
xchg
call
aam
out
mov
addl
fwait
fs
flds
push
aas
jecxz
aam
mov
inc
jae
daa
and
fsub
lahf
sub
lock
js
mov
lds
adc
arpl
sbb
push
daa
idivb
and
in
test
neg
push
or
fcmovnbe
scas
lret
call
out
negb
xchg
daa
xor
incl
or
mov
or
pop
test
jnp
sub
mov
pop
adc
xor
aaa
es
lods
or
dec
cmp
inc
mov
adc
or
pop
mov
or
int
xchg
fs
and
repnz
dec
dec
sbb
and
xchg
cmpsl
mov
push
push
pop
or
testb
sti
rcr
mov
and
mov
pop
adc
lret
arpl
test
js
fcmovnu
lss
cli
cmp
out
mov
inc
cltd
in
xlat
jo
adc
in
pop
arpl
sbb
push
std
sbb
imul
jns
mov
xchg
cmp
pop
data16
mov
in
cli
mov
fs
cld
rcll
xor
or
push
cmp
arpl
pop
lea
jmp
inc
mov
inc
lds
incl
sbb
push
xchg
inc
andl
add
imul
insl
repz
sbb
xlat
fadds
in
leave
xor
mov
dec
xchg
cli
dec
mov
pop
test
fisubrl
adc
addl
scas
inc
or
mov
jp
xor
imul
ror
andl
aaa
mov
nop
mov
sub
push
paddq
fsubp
mov
cmp
sub
cmpsl
xor
repnz
push
push
jmp
inc
daa
stos
dec
popa
rolb
cmp
arpl
je
repnz
mov
in
mov
stos
mov
cwtl
mov
sti
mov
test
mov
mov
fs
xor
mov
add
pusha
notl
mov
lea
cltd
dec
enter
pop
or
or
mov
pushf
cmc
cmp
and
shrb
dec
test
leave
rcrb
mov
push
sub
lcall
dec
std
std
shrb
pop
and
adc
cld
push
xchg
dec
adc
in
fdivl
mov
stc
pushf
imul
loop
adcb
ss
dec
mov
into
ss
das
stos
add
stos
xor
xchg
out
out
xor
lea
mov
push
inc
mulb
xchg
cld
inc
push
jb
xchg
popf
js
cli
mov
shl
clc
pop
sbb
push
ss
test
std
stc
pop
xchg
pop
push
cs
pop
mov
and
inc
jl
insb
test
or
inc
push
sbb
cmp
lahf
xor
in
scas
add
or
inc
sbb
lret
pop
push
xchg
imul
lcall
xchg
out
call
dec
mov
bound
or
gs
adc
shll
sub
jle
lds
push
aaa
repz
inc
add
out
dec
cmc
mov
push
adc
xlat
into
mov
dec
add
cmp
dec
mulb
jae
mov
xchg
cmpb
inc
mov
loop
sarb
or
addr16
outsb
sti
fldcw
mov
das
loopne
inc
sbb
xchg
pop
adc
lock
mov
inc
jle
inc
repnz
lcall
inc
xchg
cmpsb
cmp
leave
lods
jle
adc
jns
test
outsl
ret
adc
jge
push
and
pop
dec
out
mov
daa
dec
or
pop
stos
pop
and
push
jmp
out
or
js
in
mov
push
addl
jl
xor
scas
mov
ret
mov
imul
data16
jmp
fidivrs
mov
mov
lea
dec
dec
pushf
pop
insl
stos
pop
loope
shll
bound
xor
cmc
fidivrl
imull
adcl
stos
mov
sbb
ret
cmp
js
hlt
xor
sbb
ja
jmp
sub
inc
into
dec
xchg
pop
scas
push
imull
lock
or
lods
mov
lods
test
addr16
aaa
decb
stc
cli
push
mov
inc
mov
jmp
test
jo
push
stos
rorb
or
lcall
xorl
fstpt
int3
shrb
mov
pop
cmp
add
xchg
cmp
sbb
sbbl
xor
cmp
jl
cmc
loope
scas
leave
fwait
sbb
iret
iret
push
push
ret
mov
xor
call
add
cmp
dec
repnz
bound
clc
cmp
repnz
jno
lahf
dec
add
mov
adc
les
fwait
mov
popfw
inc
sub
xor
push
push
or
and
xor
pop
jae
cld
mov
mov
je
addl
cmpsl
xchg
sbb
aaa
inc
inc
repz
sahf
and
inc
lret
lret
push
jg
ret
mov
mov
lcall
push
lds
dec
insb
ja
jmp
push
aad
adcb
sub
insl
sbb
fwait
inc
pop
inc
jno
mov
lods
lahf
cmpsb
ja
or
arpl
bound
mov
sub
int3
xchg
imul
jns
insb
fwait
cmp
cmpsb
pop
pop
mov
xchg
fwait
inc
push
push
daa
dec
repz
leave
adc
leave
pop
push
mov
dec
stos
jne
pop
jmp
es
lods
orl
ss
std
fldenv
cmp
sub
movsb
shl
fwait
daa
popa
loope
stos
or
mov
pop
loop
mov
inc
or
test
mov
cld
jnp
mov
jg
sub
test
cmp
cmp
sub
roll
mov
imul
fwait
aam
enter
dec
dec
push
les
push
outsb
aad
dec
and
mov
push
mov
jge
stos
sbb
cs
popa
dec
push
jmp
jbe
ret
adcb
iret
adc
push
pushf
outsl
push
jp
mov
int
adc
inc
es
int
lcall
test
adc
ss
mov
into
mov
pushf
call
loope
dec
jmp
xor
stc
push
xchg
mov
lea
and
ss
cwtl
call
imul
push
enter
push
push
popf
pop
jp
mov
dec
inc
movsb
jge
dec
jmp
call
jp
cs
lret
cs
imul
and
lods
sub
stos
pop
fadd
scas
mov
fldenv
xchg
inc
jp
imul
lds
in
daa
fsubrl
sbb
mov
cld
int3
push
dec
push
les
pop
movsl
rcrb
aad
fistps
push
in
or
pusha
lock
mov
mov
fdiv
clc
jae
jbe
cmpsl
iret
jne
loopne
mov
jo
test
popf
add
inc
inc
fistps
jmp
out
jb
and
add
imul
sbb
rorl
xchg
aad
out
cltd
xor
pop
dec
insl
mov
mov
enter
rolb
add
aaa
scas
insl
jbe
xor
inc
jg
sbb
add
iret
xchg
mov
mov
cltd
mov
and
lahf
pop
jmp
call
fildl
pop
xchg
ljmp
int
movsl
rol
iret
sub
mov
jl
jmp
push
hlt
mov
daa
bound
stc
daa
sbb
cmp
dec
mov
cmp
lea
jbe
invd
sahf
shrl
mov
or
mov
xchg
lret
xchg
pop
les
adc
or
inc
repnz
inc
enter
loopne
push
push
cmp
push
jbe
repz
fistps
push
jbe
jecxz
xchg
cmpsb
inc
out
push
inc
mov
cmp
rolb
popf
in
bound
shll
push
push
jle
ss
rcrl
in
and
push
pand
mov
lahf
dec
mov
icebp
cmpl
or
inc
or
sub
cwtl
shl
stos
dec
insb
shll
shll
push
push
pop
cmpsb
cmp
loope
mov
add
mov
pusha
test
cmp
inc
lods
inc
enter
out
xlat
lds
je
and
cwtl
ja
stos
addr16
pop
jno
add
out
loope
ljmp
mov
mov
in
ret
xchg
mov
gs
sbb
push
xchg
adc
repnz
jbe
data16
pop
add
xchg
mov
shll
test
or
push
cmpsb
cmp
sub
gs
fimull
sbb
inc
fadds
es
ljmp
jns
stc
xchg
jne
arpl
push
push
imul
subl
mov
int3
inc
pop
dec
push
mov
enter
mov
mov
xchg
and
sub
fstpl
push
push
pop
imul
xor
sbb
xor
push
xchg
jae
pop
and
xchg
cmp
push
adc
xchg
cltd
lods
cmp
outsl
sahf
cmpsb
mov
xor
cltd
test
mov
mov
int
fistl
std
xchg
enter
mov
jmp
outsl
jo
dec
das
xor
push
and
lods
mov
lret
inc
mov
mov
in
mov
aas
lock
bound
mov
jo
enter
xchg
sub
test
fcoml
shll
stos
sbb
push
cli
fabs
stc
sbb
mov
jge
shlb
aad
inc
pop
cmc
pop
jp
pop
dec
cmc
ljmp
fidivrl
outsl
dec
jle
mov
pop
cmp
mov
scas
loopne
repnz
rcrl
jl
cmpsb
pop
shll
inc
adcl
jnp
dec
mov
mov
xor
dec
divb
or
les
pop
inc
and
xor
ljmp
std
loopne
mov
mov
fisubrs
sub
aam
sub
subb
fildll
dec
dec
std
test
rorl
rcrl
in
addr16
clc
inc
pop
fildll
sbb
cmpsl
jg
clc
subb
bsf
inc
lea
xchg
ss
pop
and
jp
arpl
cmp
dec
mov
mov
add
adcl
push
movsb
mov
sar
cli
fcmovb
cmpl
mov
push
adc
xchg
dec
cmp
and
push
popa
insl
ja
mov
sti
icebp
rclb
xor
sbb
add
push
loope
pop
inc
jbe
or
push
pop
adc
adc
xor
cmpsl
leave
stos
mov
test
subps
clc
addr16
test
ret
or
outsb
and
push
outsb
mov
push
loope
inc
idivl
pusha
pop
xchg
sub
fistpl
rcrb
push
imul
add
das
fsubs
xchg
inc
mov
or
inc
aam
mov
sbb
jae
jae
roll
push
filds
loope
or
push
jo
loop
jp
insb
sub
add
imul
mov
push
or
lods
and
andl
mov
add
sub
sub
add
arpl
adc
mov
adc
pop
es
sbb
insl
loop
jno
mov
sub
mov
insl
push
out
push
pop
or
jp
mov
xchg
addr16
mov
cmp
bnd
or
pop
lahf
jno
cmc
and
and
and
xlat
mov
and
sbb
mov
out
mov
add
mov
adc
xchg
cli
cmp
pop
dec
push
cmp
ficomps
push
shll
loopne
in
or
and
xor
pop
jle
adc
inc
cmp
mov
cmpb
test
jo
pop
xor
movsb
pop
adc
push
inc
cld
or
stos
lahf
add
push
xor
sub
pop
loopne
dec
mov
ljmp
xor
add
dec
and
xchg
es
and
push
xor
push
add
pop
ljmp
mov
aam
inc
sbbl
shlb
fstl
xorl
out
dec
or
idivb
fs
repnz
movsl
inc
push
or
js
lahf
daa
sub
add
sbb
jmp
dec
push
push
dec
cmp
insl
sub
mull
jg
xor
mov
xchg
xor
and
and
loopne
push
mov
sahf
leave
inc
dec
push
jecxz
push
fisttpll
in
cmp
pop
pushf
divb
int
jae
loopne
gs
pusha
sbb
add
cmp
out
std
adc
dec
mov
ja
inc
out
mov
mov
insb
cs
pushf
add
ja
movsl
mov
stos
dec
xchg
mov
xchg
pop
pop
mov
push
pop
in
lods
add
or
scas
pop
loope
lds
push
mov
pop
mov
sub
xchg
loope
xchg
add
sbb
scas
incw
mov
or
mov
jge
jb,pt
fnstenv
cmpl
das
pop
pop
stos
xchg
in
aad
lret
lods
cmp
stc
sbb
cmpsl
out
das
cmp
cld
bound
dec
jmp
mov
sub
sbb
push
gs
mov
jmp
rcrb
or
dec
scas
xor
loopne
repz
push
sub
jg
and
int3
mov
jo
fidivs
mov
aam
xchg
arpl
cmp
xchg
pop
mov
push
cmp
pop
ss
loope
lods
sbb
push
pusha
test
jae
cmpsl
or
or
outsl
mov
add
cwtl
inc
fildll
xchg
push
push
ljmp
call
mov
inc
sahf
mov
lahf
iret
repnz
push
stos
or
and
cmpps
outsb
insb
jbe,pt
adc
jnp
push
in
jge
rcl
icebp
jne
xchg
imul
clc
fidivl
pop
push
loope
push
xlat
sbb
in
call
aaa
dec
add
mov
outsb
sahf
lret
push
pop
jo
enter
pop
mov
lods
xor
add
jmp
fcomps
arpl
lret
push
jo
inc
add
outsb
shll
decb
int
jnp
or
rcll
or
jmp
lods
lds
clc
enter
fiaddl
pusha
out
sti
lock
xchg
or
lret
pushf
movsb
out
addr16
fdivl
loopne
cmp
inc
leave
add
roll
lret
and
jbe
sub
push
cld
scas
inc
jle
jo
pop
nop
roll
mov
xchg
sbb
sbbl
movsb
jecxz
fnstenv
test
mov
adc
xchg
xchg
mov
daa
ds
idivb
adc
xlat
popf
xchg
push
push
fiaddl
cmc
stos
and
fisttpl
jl
lahf
inc
imull
fs
stos
pop
xor
sarl
ss
push
xor
ljmp
cmp
cmp
out
sbb
jge
pusha
adc
jns
testb
fwait
lcall
ret
js
mov
sbb
sub
aam
or
pop
or
dec
lock
add
sub
mov
xor
jo
jb,pn
jg
cltd
pop
and
pop
je
lret
or
call
clc
leave
stc
dec
xchg
jge
inc
lock
sbbl
jmp
pop
shr
push
into
outsb
pop
clc
jnp
mov
push
outsb
in
mov
xor
nop
into
jno
jne
mov
mov
mull
insb
std
or
jns
xlat
sub
xor
sub
lret
or
enter
inc
sub
jbe
cli
nop
lock
lds
addl
sti
in
icebp
outsb
xchg
dec
push
fstpl
push
subb
sbb
fmull
pop
cmp
push
mov
jae
pop
mov
mov
pop
jo
pusha
xchg
xchg
pop
inc
lret
arpl
pop
lcall
pop
repz
fucomp
mov
lock
adc
or
ret
sub
int3
cmp
jg
xchg
dec
bound
dec
inc
loopne
inc
xor
shl
ds
scas
testl
inc
outsl
xchg
je
dec
xchg
lods
inc
shr
andb
cs
jb
addr16
andl
adc
pop
sbb
imul
notl
lds
or
adc
cmpsl
or
clc
sti
push
aad
jne
xor
movsl
mov
movsl
inc
rclb
mov
imul
ss
sbb
fcomps
sarb
out
gs
cli
les
rclb
sbb
mov
ss
outsl
shl
int
pop
insb
aaa
or
cltd
aam
mov
or
jne
scas
and
mov
push
or
fwait
mov
in
fwait
in
dec
xchg
cli
push
scas
cmc
f2xm1
jno
mov
xor
pop
clc
xchg
xchg
and
lcall
adc
pop
inc
cwtl
enter
jl
xor
in
stc
sbbl
ljmp
rorl
mov
jl
test
movsb
xlat
sub
cltd
sbb
insl
or
pop
repz
out
push
movl
push
test
mov
stos
cmpb
jnp
cwtl
push
adc
imul
mov
jbe
addr16
mov
push
rcr
xchg
mov
cmp
test
loopne
mov
mov
dec
jg
movsl
popa
and
leave
ds
cltd
loopne
push
stos
in
inc
subl
push
in
dec
cmpsl
or
outsb
jo
add
fnstsw
ss
repz
xlat
or
sub
inc
fldcw
in
clc
ss
mov
adc
ja
push
mov
sbb
sbb
push
scas
inc
jno
loopne
popa
loop
lret
and
aaa
ss
push
loop
xchg
popa
xchg
mov
js
arpl
jl
cmc
adc
dec
cmpb
dec
mov
nop
cmc
push
lret
jp
in
mov
jns
mov
insb
adc
test
popf
jl
jno
mov
and
mov
mov
mov
sub
sar
sarl
and
leave
add
andb
or
mov
sub
xor
addl
adc
dec
cmp
mov
jo
push
push
mov
gs
adc
jae
push
ds
dec
jmp
jp
adc
movsb
int
sahf
aaa
loop
dec
sub
lods
mov
cmp
test
gs
push
std
add
fs
xor
out
je
es
xchg
dec
sbb
push
pop
leave
nop/reserved
mov
jl
jle
jno
cmp
loop
insb
aam
jecxz
jnp
sbb
or
nop
sahf
icebp
push
mov
sub
ja
data16
aam
xchg
xlat
xor
jge
stos
jmp
xchg
lret
inc
adc
test
pop
into
and
pop
push
or
lcall
mov
mov
stos
pop
cmp
sbb
scas
les
sub
mov
popf
jecxz
push
push
clc
push
mov
jp
popf
arpl
mov
test
sbb
jnp
mov
xchg
pop
inc
jne
addb
dec
inc
mov
std
imulb
xor
test
or
xor
mov
mov
sbb
dec
sub
test
ss
inc
add
fdivl
jne
clc
adcl
dec
stc
mov
lds
push
pop
mov
mov
inc
pop
add
cld
je
arpl
and
xchg
jae
pusha
xchg
andl
jmp
setae
mov
adc
int3
cwtl
xor
push
inc
xchg
aad
xor
inc
ret
mov
or
mov
adc
lahf
push
and
push
mov
pusha
adc
cmp
push
mov
pop
mov
pushf
roll
or
in
je
push
bound
or
add
jbe
cld
imul
movsl
sti
jl
inc
sarl
push
popf
ss
repnz
mov
mov
cmp
in
mov
xchg
inc
mov
sbb
les
in
mov
in
mov
mov
leave
push
and
add
jge
imul
lret
push
inc
mov
inc
shl
inc
and
sti
aam
xchg
loope
fcmovnbe
out
jnp
test
jae
popa
pop
lods
rclb
lds
inc
pop
dec
flds
xor
cmp
adc
pop
and
or
stos
les
pop
dec
aaa
mov
and
sub
test
add
jb
sar
pop
add
jne
or
popf
jmp
push
jecxz
sub
icebp
cmp
pop
xor
fnstsw
aam
inc
inc
cmpsl
addr16
jbe
insl
pop
or
aas
sbb
xchg
in
pop
sbb
sub
das
push
int3
fdivs
les
arpl
and
sbb
jmp
inc
ret
add
mov
lahf
scas
mov
push
inc
xchg
in
cmp
push
jp
pop
inc
or
pusha
inc
data16
and
xchg
sbb
dec
mov
cmp
pop
inc
int3
outsb
add
sub
imul
mov
xchg
push
ja
movsl
push
gs
or
cmp
dec
sbb
lret
sahf
loope
imul
cmp
jae
mov
and
stos
mulb
mov
cli
in
mov
pop
insl
sar
loope
aad
mov
push
das
movsb
sbb
xor
mov
adc
or
mov
jns
push
xlat
pop
mov
xchg
shr
xchg
and
popf
and
cli
xchg
test
aas
pop
pop
and
sbb
mov
mov
shr
insl
inc
mov
sub
xchg
ja
push
inc
sbb
addr16
sub
ret
add
sbb
and
fildll
ret
shrl
ret
mov
cs
ja
sbb
and
pop
jne
jge
daa
jmp
nop
sub
sub
mov
mov
adc
jmp
nop
or
inc
stos
scas
pop
ret
or
jmp
out
inc
xlat
or
or
mov
push
fmull
scas
push
ja
push
test
pop
lahf
pop
hlt
mov
push
pop
fs
push
cwtl
pop
cmp
fs
popf
mov
aas
movsb
sbb
fistps
dec
repnz
movsl
ljmp
in
popf
sbb
push
mov
dec
xor
fstpl
sbb
lcall
in
imul
ljmp
mov
mov
push
adc
xor
and
xor
dec
arpl
inc
jne,pt
addr16
jmp
pop
adc
fcoms
cmc
shr
inc
lock
push
aas
sbb
leave
mov
pusha
in
xchg
adc
popl
nop
mov
and
mov
repnz
xchg
insb
out
jle
push
mov
or
test
lock
movsl
and
aad
cmp
movsl
mov
xor
mov
cmp
lahf
sub
aaa
icebp
adcb
or
insl
pop
pushf
add
aad
jb
and
je
jecxz
jae
aam
adc
and
aas
adc
cmp
rcr
xchg
adc
rclb
xlat
xchg
push
daa
mov
dec
pop
push
sbb
leave
lods
and
pop
inc
out
hlt
adc
mov
ret
cmp
out
scas
cmp
cmp
and
fwait
adc
dec
jo
and
movsl
push
nop
fwait
or
mov
loopne
adc
movsb
nop
jnp
sub
pop
dec
mov
in
push
push
jb
inc
addb
inc
lods
ret
cld
or
jne
xorb
lahf
cmp
aam
push
gs
pop
sub
xchg
pusha
aaa
jmp
lret
or
test
cmpsb
xchg
add
js
lret
sub
mov
mov
mov
outsb
mov
jb
mov
rclb
sbb
cmp
scas
cmp
int3
insb
faddl
mov
loop
clc
or
cli
es
adc
loop
sub
insb
and
dec
or
add
dec
subl
in
push
mov
pop
orl
add
or
popf
fwait
rcl
ret
icebp
sub
into
gs
adc
fsubrs
test
sub
aaa
out
push
xor
add
popf
stc
xchg
popa
jb
inc
push
push
inc
push
xchg
cmp
jae
sub
cwtl
repz
xchg
pop
scas
jo
mov
mov
mov
mov
in
clc
loop
mov
loopne
or
into
mov
sub
pusha
cmpb
or
push
xchg
jmp
push
fisttpll
mov
stc
sub
push
dec
and
in
push
setbe
sbb
or
push
ffreep
ds
push
lock
lret
out
rclb
fmuls
jb
jae
lahf
cmp
mov
je
and
aaa
jecxz
aad
shrl
cmpsb
sub
xor
lcall
mov
addr16
add
out
xor
jae
add
push
push
fsubs
jge
xlat
out
xchg
and
push
cmp
aad
mov
push
sub
or
pop
cmp
add
jl
lret
push
getsec
cmpsb
cld
cmc
dec
orl
fcoml
sti
ret
mov
dec
aad
xor
sbb
vpshad
test
or
insb
adc
xchg
rclb
push
and
mov
fbstp
pop
pop
and
dec
mov
adc
enter
cmp
push
aad
sbb
lahf
ljmp
aas
mov
sbb
aas
je
mov
fbstp
cli
pop
mov
cli
cmpsl
shll
or
xchg
add
gs
inc
jo
popa
jno
sub
cli
adc
jge
cwtl
cmp
cmp
add
in
popf
push
stos
mov
in
mov
mov
fnstsw
addl
pusha
repz
and
jp
inc
ret
xchg
push
cmp
imul
adc
sbb
aad
jns
push
repnz
mov
inc
cwtl
cmp
jmp
lret
es
cltd
icebp
sbb
and
mov
mov
add
outsb
pop
inc
mov
jb
subl
mov
xchg
in
dec
mov
stc
cmp
add
jb
sahf
push
shr
mov
push
rcll
mov
mov
add
fcoml
stc
xor
mov
loopne
or
push
loop
imul
mov
mov
push
add
lret
jbe
stos
aaa
sbb
or
or
inc
out
jo
pop
mov
mov
and
shrb
jb
mov
pop
rcrb
lods
sbb
sbb
adc
iret
arpl
xchg
out
cmp
and
insb
dec
rclb
fsubrs
sub
imul
cmp
or
lods
mov
mov
sahf
lods
fwait
les
push
in
in
sar
movsl
pushl
in
dec
or
cwtl
ja
jle
movsl
cmp
jp
or
sub
adc
pop
in
aad
repz
sahf
ror
adc
sub
sarl
mov
insl
sub
dec
aaa
stos
in
add
rcr
lret
jl
cmp
dec
mov
push
pop
xor
mov
jge
lods
and
outsb
xor
pop
mov
sbb
inc
mov
push
insl
sbb
push
fs
or
or
cld
aaa
adc
push
cmpsb
push
lea
dec
pop
pop
and
sub
movsl
jmp
stc
fnstcw
pop
loopne
out
mov
lret
int3
int
ss
aaa
stc
xlat
fiaddl
dec
sbb
pop
cltd
jbe
xor
sbb
das
inc
xchg
je
adc
cs
or
sub
insl
xchg
clc
loop
xor
pop
xchg
adc
and
inc
pop
mov
ror
negl
mov
xchg
dec
stos
pop
cmp
arpl
test
jg
adc
inc
jne
loopne
xchg
incb
jae
cmp
push
loope
add
cmp
and
add
sbb
insl
mov
mov
pusha
test
out
cli
xchg
add
jns
testl
ljmp
mov
fbld
mov
xchg
fstpl
scas
sub
xchg
stc
xchg
stos
arpl
aas
push
popa
mov
imul
and
mov
push
roll
adc
fwait
in
stos
mov
adc
arpl
dec
jmp
pop
stos
das
dec
shll
and
or
jns
sbb
and
add
push
xchg
jbe
pop
mov
iret
and
sub
pop
push
pop
mov
call
popf
xchg
pushf
push
dec
ret
ret
sbb
hlt
pop
into
jmp
xchg
add
mov
gs
rolb
sub
cmp
mov
xor
dec
cld
jne
test
ljmp
adc
faddl
or
into
scas
idivb
cmpl
dec
test
xor
fcmovbe
xor
sub
pushf
mov
and
insl
jge
lcall
hlt
mov
cmp
and
sub
fstps
fistps
jnp
xchg
dec
or
jp
pop
cmpsb
push
cmp
mov
pop
mov
in
lods
pop
aad
pop
jle
rolb
clc
lahf
icebp
test
add
adc
adc
mov
pop
push
and
sbb
lahf
mov
ja
push
and
sub
and
in
cmc
dec
gs
mov
inc
fcomp
sti
mov
or
les
mov
jp
push
aas
sbb
mov
aas
mov
sub
and
push
sub
dec
jnp
sbb
sahf
out
imul
xchg
sub
sub
int
aaa
ss
dec
sahf
cmp
and
dec
dec
sbb
mov
test
shrl
loopne
adc
or
and
enter
cmp
jbe
mov
out
add
pusha
in
mov
rcrl
test
fimuls
push
mov
into
xchg
jmp
mov
jge
cmovns
dec
push
push
mov
jae
insb
sub
test
jmp
out
fucom
shrl
xchg
xor
add
and
xchg
inc
sar
push
mov
popf
inc
leave
int
mov
in
out
and
mov
sub
shll
out
repz
dec
fucomi
push
mov
lods
xchg
sbb
sub
and
or
sbb
data16
pop
push
repnz
cmp
iret
pushf
jne
mov
dec
mov
inc
inc
jo
shll
popl
and
push
dec
inc
stc
jbe
sarb
mov
mov
popf
jp
mov
push
adc
sar
add
sbb
xor
test
push
mov
frstor
push
xchg
insb
mov
mov
rcl
sbb
div
mov
test
push
xchg
repnz
sub
dec
lcall
stos
test
es
cmpsb
cmpsb
aaa
nop
addr16
imul
cltd
xor
es
pop
push
push
cs
inc
dec
pushf
into
aaa
in
sbb
bound
addl
sbb
inc
mov
scas
cmp
fdivr
inc
sbb
push
mov
aaa
test
rcll
mov
adc
out
mov
lea
ds
pushf
es
jp
mov
adc
dec
ficompl
aaa
dec
push
and
xor
jmp
jb
jnp
dec
aad
dec
ja
pop
das
or
lods
sahf
pop
pushf
out
push
jae
add
sbb
adcb
jne
in
xchg
pop
out
mov
push
xor
sbb
cmp
in
sub
iret
inc
icebp
jle
xchg
xchg
adc
repz
and
mov
mov
mov
mov
ret
xor
out
loope
lret
nop
cs
pop
sub
dec
loope
lcall
mov
les
or
sbbb
insb
es
push
dec
sbb
xchg
cmp
movsl
rcrb
add
mov
insb
ret
aam
cmc
std
push
repnz
loopne
and
aaa
cwtl
xchg
adc
mov
sub
push
inc
je
inc
mov
sbb
xorl
cmp
add
jl
test
fwait
push
and
loope
mov
sbb
sbb
sbb
stos
loop
cmp
pop
ds
call
enter
or
cmp
adc
xorb
xor
mov
inc
clc
out
clc
fimull
lretw
sub
and
pushl
insl
push
stos
add
inc
inc
mov
and
push
arpl
data16
ffreep
mov
push
cmpsl
xlat
adc
push
icebp
add
fdivs
sahf
xchg
lahf
aam
or
leave
mov
dec
int
adc
dec
and
faddl
pop
add
cmp
xchg
icebp
cmpsb
out
xor
xchg
bound
fnstcw
xchg
mov
add
adc
sbb
mov
cmc
xor
mov
xor
nop
jg
mov
xchg
das
mov
and
leave
cmp
std
test
xor
inc
adc
outsb
mov
push
inc
call
sbb
cld
mov
and
cmc
sbb
in
mov
pop
push
imul
jmp
lret
push
out
fs
fisttps
vpshuflw
sbb
test
arpl
je
fdivl
sbb
add
insl
jae
jmp
add
cs
leave
movsl
jl
mov
jl
ret
push
add
stc
fisubrs
adcb
cmp
and
mov
xlat
adc
jle
cltd
mov
shr
jb
jle
ss
std
inc
jecxz
adc
dec
inc
popf
in
loop
jle
pop
scas
les
cld
jnp
mov
arpl
hlt
xor
adc
xor
loopne
imul
mov
dec
cmp
jno
lds
hlt
adc
or
cmpsl
add
fmulp
es
inc
xor
dec
mov
xlat
iret
sub
lods
or
stc
js
and
ss
dec
xchg
sbb
pop
lods
add
and
mov
sbb
pop
rcr
gs
inc
pushf
or
fstpt
ds
fldl
cli
mov
mov
jecxz
pusha
mov
push
xchg
sbb
mov
rcrl
push
mov
popf
pop
pop
sahf
ret
mov
adc
aad
popl
int
movsb
xchg
ds
lea
push
shlb
inc
xorl
or
adc
xchg
dec
adc
jns
mov
insl
xchg
pop
out
loope
aas
push
call
fs
arpl
or
leave
rorl
addr16
jb
or
inc
icebp
movl
sbb
jo
adc
sbbl
and
sbb
lret
xchg
je
cmp
sub
cmpsl
out
adc
das
in
loop
sub
imul
xchg
inc
mov
jl
xor
shrl
inc
rolb
push
imul
scas
xchg
cmpsl
push
xchg
jb
adc
add
cmp
es
ljmp
aam
inc
cld
jp,pn
add
aas
test
nop
jae
dec
pop
pop
mov
je
inc
or
cmpsl
out
lret
int3
mov
inc
jge
dec
jmp
push
aas
adcb
pop
jp
jae
or
push
pop
mov
fisubl
test
lds
imull
fninit
test
dec
mov
pop
jecxz
and
js
add
pop
xchg
cwtl
call
into
jae
out
test
mov
sbb
mov
push
cmp
subb
fmul
lock
frstor
mov
push
xor
das
fldenv
sahf
sti
data16
or
xor
cwtl
ror
test
ss
fs
nop
test
in
and
inc
mov
inc
cltd
pop
test
call
arpl
enter
jp
in
push
mov
pop
and
mov
inc
xor
inc
loope
pmaxub
xor
inc
in
xchg
push
jge
jl
inc
jle
iret
imull
test
fcompl
mov
iret
fcomps
js
out
cmpsl
mov
adc
outsl
add
or
fldl
push
xor
mov
sbb
sti
das
sbb
nop
sbb
sbbl
mov
jl
pop
jge
xor
sbb
xor
mov
dec
test
jns
cmp
cmp
test
adc
movsl
sub
into
fistpl
mov
mov
pop
incb
inc
jge
mov
mov
adc
fimuls
dec
icebp
and
push
push
incb
jecxz
mov
sti
lock
cmpsl
ja
inc
jl
scas
jg
rorl
pop
ljmp
inc
movsbl
imul
js
cmp
ds
and
loopne
and
mov
or
cmp
std
out
dec
js
push
jp
mov
pop
fs
cwtl
or
xor
pop
sbb
xchg
adc
jno
pop
pop
movsl
les
and
sub
and
fists
push
pop
fs
aad
jge
popa
shlb
addr16
lea
cmp
xchg
pop
je
push
xchg
push
dec
js
inc
mov
outsb
ret
xchg
cltd
pop
ss
and
mov
imul
insb
mov
shl
into
jno
int3
pushf
push
xor
scas
ja
ret
lret
mov
sbb
je
fisttpl
cld
icebp
push
in
shlb
jecxz
negl
push
cmc
std
pop
fisubs
lcall
jno
adc
and
add
fsubs
push
inc
sbb
push
mov
or
xor
inc
nop
sbb
pop
jl
xchg
or
imulb
mov
pop
mov
add
cmp
jle
add
addr16
sub
cmpsl
push
lea
jmp
adc
mov
stos
out
jp
mov
xchg
es
push
sahf
dec
loopne
into
insb
xlat
ss
mov
push
subl
inc
xor
dec
sbb
loope
mov
jne
inc
xor
jae
lds
dec
add
mov
aaa
and
lods
mov
scas
jae
mov
loopne
push
loopne
icebp
test
sub
inc
or
mov
sub
push
sbb
add
push
iret
fdivrs
xchg
xchg
sar
jmp
clc
nop
stc
clc
push
sar
fwait
xchg
in
test
mov
ret
add
stc
xor
jmp
aaa
out
movsl
loopne
lret
and
or
pop
bound
test
push
push
jnp
mov
clc
push
mov
pop
outsl
jmpw
rol
iret
ss
xor
jp
push
cmp
jne
adc
in
pop
insl
mov
push
aas
in
test
mov
xor
sub
stos
mov
loope
loopne
test
outsb
lret
and
jae
jne
or
stc
scas
dec
jno
inc
push
dec
shlb
mov
jl
stc
xchg
add
pop
mov
outsb
mov
or
mov
cmp
lea
dec
xchg
js
shrl
jae
or
jp
inc
aam
pushfw
ljmp
inc
dec
pop
adc
adc
insb
mov
inc
xlat
outsl
push
mov
pop
jo
scas
and
stc
jb
fidivs
aaa
mov
pushf
pop
test
movsb
xchg
lcall
jg
or
or
cmp
xlat
or
lods
push
mov
jmp
or
dec
inc
adc
insb
shlb
mov
add
cld
xchg
jmp
or
and
enter
mov
mov
cmpsb
dec
mov
push
lods
sub
and
mov
xor
cmp
arpl
add
sti
mov
mov
add
mov
lds
cmp
xor
xchg
push
pop
rcrb
je
and
dec
add
inc
lcall
dec
fidivs
stos
dec
test
mov
daa
inc
sbb
push
js
rcl
dec
loop
add
out
dec
into
in
pop
add
jb
jae
movsl
add
inc
sub
stos
fs
mov
bnd
into
adc
fbld
pop
pop
dec
pop
mov
subb
stc
mov
cs
mov
xchg
sub
jae
test
movsl
xchg
or
scas
cmp
sar
sbb
adc
lock
mov
sub
sub
pushf
xlat
or
out
jnp
jg
pusha
jg
loope
jae
jl
out
xorb
or
sub
xchg
aam
fwait
into
jle
jbe
mov
notb
push
bound
outsl
dec
loope
pop
xlat
dec
lcall
les
jl
loop
in
inc
and
pop
mov
clc
insl
lock
adc
cwtl
push
in
jo
insb
loope
aaa
jl
sbb
mov
dec
ljmp
lret
leave
mov
mov
mov
mov
data16
and
xor
inc
jnp
sub
adc
adc
add
aaa
xlat
jbe
test
inc
aaa
jno
sub
aam
xor
push
inc
out
out
imul
add
pop
sbb
out
pop
aam
dec
xlat
daa
ljmp
repz
jns
dec
shl
adcl
pop
dec
enter
gs
sti
loopne
xchg
add
cmp
cltd
test
aaa
jno
cltd
xor
fistpl
mov
arpl
push
pop
lds
shrb
sbb
lds
xchg
lahf
add
mov
imul
movsb
repnz
jae
cltd
mov
das
inc
xor
sbb
fdivr
inc
inc
xchg
pop
push
rclb
sub
cmp
xor
mov
mov
pusha
sub
in
ret
repnz
and
cmp
cmp
dec
movsb
sub
add
movsl
and
add
inc
jnp
loop
cmc
jg
nop
xor
nop
dec
mov
xchg
jge
jb
xor
add
sarl
xchg
sub
fadds
stos
sarl
or
stos
test
fcoms
sub
icebp
inc
cwtl
aaa
adc
xor
aas
xchg
cmp
mov
xorl
fldenv
dec
dec
cmp
and
cmp
rolb
sbb
adc
cmp
setb
out
mov
mov
push
inc
dec
jo
mov
xor
test
cmp
andl
repz
daa
jne
cli
mov
sub
loop
xchg
dec
aam
enter
aas
dec
inc
int3
js
rorl
addr16
negb
js
test
out
adc
test
xor
das
pop
mov
or
aaa
pop
aad
push
mov
stc
jne
lods
sbbb
xchg
addb
adc
les
lea
add
or
add
dec
or
pusha
jle
mov
js
vmread
int
adc
push
add
test
jo
sbb
fcos
aad
adc
xlat
test
mov
jmp
jecxz
xchg
ja
cwtl
popa
and
shrl
enter
adc
dec
xor
popa
arpl
jle
xor
and
fisttpl
mov
xchg
xchg
js
rcr
xchg
inc
push
stos
bound
lods
stos
ss
test
pop
rorl
ret
cmp
cmc
mov
push
xor
adc
inc
divb
jno
rcrb
cmp
ret
jmp
out
inc
pushf
lcall
sub
pop
lock
negl
sub
sub
jge
cmc
jl
pop
jae
shrb
lods
rclb
xor
loopne
iret
dec
adc
dec
pop
aad
mov
lahf
jo
daa
cmp
faddl
ret
pop
daa
xchg
sub
mov
fwait
out
dec
cmp
sbb
ret
addr16
sub
shl
mov
mov
xchg
cwtl
push
add
pushf
insl
sbb
lods
lahf
int3
lea
sbb
dec
loop
mov
popa
loope
jno
int
fdivl
je
es
mov
lcall
push
mov
or
orl
rorl
rorb
push
and
cmp
push
mov
mov
cltd
push
push
and
js
nop
in
cmc
call
cwtl
mov
jns
insl
mulb
aam
jge
daa
out
jecxz
sub
cs
hlt
stos
jle
cmp
push
cmp
dec
js
mov
clc
add
sbb
mov
sahf
hlt
mov
mov
inc
je
fwait
and
or
popf
lahf
test
push
or
pop
sub
call
and
mov
arpl
or
sbb
adcb
popa
adc
testb
call
ds
mov
inc
out
xor
ss
movl
sbb
fs
daa
fstps
mov
fidivrs
sub
dec
int3
jp
shrb
sub
lret
and
jo
cltd
test
movsb
pop
sbb
add
lods
jbe
mov
fisttpll
popa
xor
ret
dec
mov
jbe
push
mov
test
add
or
lret
addb
arpl
mov
add
insb
mov
lahf
jo
dec
or
add
xchg
mov
push
sbb
xor
adc
pop
in
lock
jo
xchg
cmp
dec
dec
aam
test
mov
ss
stos
out
ja
cli
pusha
and
cld
cmp
cmp
cltd
push
or
jp
pop
jae
sbb
xabort
sbb
iret
xchg
adcl
dec
sub
xchg
cmc
mov
jbe
add
xchg
ret
sbb
fstl
jmp
cmpsb
daa
cmp
or
btsl
stos
lock
popf
sti
jmp
mov
test
shll
es
cltd
cmpsb
daa
test
fsubs
imul
stos
lret
jo
arpl
stc
and
mulb
dec
stos
mov
loop
ret
push
lea
mov
rorl
aas
and
into
js
add
test
je
aad
lods
ds
dec
sub
scas
arpl
negl
inc
push
gs
inc
add
repnz
xor
sub
mov
fistpl
jo
lret
sbb
add
or
shll
aas
scas
dec
dec
push
mov
pop
mov
in
inc
push
fidivrl
xor
loope
mov
push
adc
add
jno
das
jp
sahf
push
sti
sub
sbb
js
in
inc
push
test
xchg
adc
mov
out
jle
jle
push
cwtl
adc
fldcw
aaa
cwtl
ja
mov
xchg
stos
scas
insl
out
xchg
cmpsl
in
das
movntq
mov
sti
jle
lret
ret
pop
out
cmpsl
xorl
les
jae
jne
and
ljmp
pop
paddsb
ret
mov
jne
mov
jmp
scas
xchg
push
scas
fs
inc
adc
jo
jp
pop
inc
cltd
or
jnp
mov
repnz
xlat
xorl
js
push
fildl
or
or
add
cltd
push
jne
mov
out
push
dec
sarl
pop
mov
test
loopne
pop
movsl
mov
inc
push
mov
mov
and
jbe
addr16
ds
or
mov
addr16
insl
lret
stos
dec
cmpsl
stc
test
ljmp
imul
cmp
xlat
cmpsb
or
mov
inc
into
in
movsb
xchg
test
in
add
and
inc
aad
mov
sti
les
and
add
lea
cmpl
mov
lock
add
stos
stos
outsb
testb
or
pusha
stc
and
lds
in
aas
dec
adc
pop
fs
mov
ss
movsl
subb
shlb
cmp
rclb
push
dec
cld
xor
push
aaa
push
into
fistpll
cmp
ror
mov
xchg
test
pop
mov
pop
int
ljmp
dec
sbb
sub
sub
popf
test
xchg
jns
and
rorl
push
push
out
in
mov
fwait
jg
pop
insl
outsl
dec
add
mov
fs
pop
mov
cli
xchg
jle
test
push
test
addr16
push
lea
mov
xor
dec
xor
ljmp
sub
and
aad
push
std
mov
popa
mov
scas
sbb
pop
pop
test
add
push
mov
loopne
xchg
pop
and
dec
mov
stos
sbb
add
pop
jge
inc
fdivr
or
inc
aas
dec
repz
sahf
add
mov
and
lods
outsb
enter
inc
int3
push
add
xor
add
lahf
pop
xchg
rcr
cmp
xchg
cs
cmp
mov
jb
addb
sub
int3
cmp
mov
push
leave
inc
sbb
imull
jle
imul
adc
jle
pop
repz
adcl
stos
adc
dec
mov
lea
inc
inc
imul
imul
cld
fdivs
jl
stos
test
xchg
push
in
mov
es
aam
sahf
jg
aam
mov
mov
popa
cmp
and
icebp
pop
xchg
push
sub
sub
into
jmp
test
mov
ss
dec
das
jns
cltd
hlt
fsubl
out
std
lods
pushl
cmp
stos
icebp
add
and
cmp
xor
sub
clc
jmp
and
push
sbb
pop
mov
fildl
int
std
out
sarl
fmull
or
push
cmp
mov
cmp
idivl
sbb
aam
mov
mov
push
xor
xchg
stc
mov
mov
icebp
mov
sub
pusha
dec
stos
xchg
inc
dec
and
insl
loop
pop
addr16
in
mov
outsl
add
test
jne
les
orb
movsl
cs
fmull
pop
push
dec
push
sub
jecxz
sub
dec
mov
clc
pusha
pop
or
mov
mov
dec
test
stos
mov
jae
add
pop
push
repz
xor
or
xor
adc
mov
cmp
push
sbb
cmp
xchg
insl
mov
mov
rcl
pop
lock
ficomps
inc
adc
stos
stos
inc
ret
out
sbb
inc
sti
sbb
sahf
pop
addl
or
jg
out
mov
mov
fistl
pop
nop
test
lock
enter
push
jle
jae
cmp
cmp
pop
fimuls
pop
cmpsb
out
jmp
or
nop
xor
ds
and
mov
pop
jne
ret
push
je
xor
xor
insb
inc
mov
aad
cltd
push
lahf
push
dec
mov
sbb
cmpsb
push
outsl
aam
push
push
pop
mov
cltd
and
sbbl
shrl
mov
sub
mov
loopne
or
dec
jo
divl
add
mov
add
into
popa
push
xor
into
sub
sub
inc
push
loopne
std
das
jp
out
push
and
dec
cwtl
push
jae
imulb
jecxz
movsl
shrl
jnp
dec
psubq
push
je
pop
push
add
jg
push
pusha
push
cmpsb
cld
xor
lea
add
sahf
pop
int
stc
jp
mov
gs
mov
mov
jle
fstps
int
and
push
sub
mov
out
xor
out
sub
xor
gs
out
add
cmp
sarl
add
xor
insb
clc
sti
dec
inc
test
adc
pop
cltd
xchg
iret
in
mov
push
aas
mov
sbbl
nop
pop
xchg
xchg
andb
in
pusha
cwtl
or
mov
and
push
sub
dec
jb
jae
jle
dec
daa
mov
add
cwtl
lcall
loope
mov
mulb
adc
bswap
cmpsl
mov
lea
fs
addr16
inc
cltd
in
mov
hlt
movsl
in
push
push
lahf
jb
testl
jmp
sahf
call
push
mov
cwtl
in
inc
aad
fistl
jne
or
movsl
out
popf
sbb
pop
and
sbb
mov
add
mov
xchg
xor
sbb
repnz
push
out
push
aas
movsl
fnsave
test
imul
es
push
je
mov
dec
daa
sarb
or
lock
les
mov
push
mov
xor
jae
leave
sub
gs
fwait
lea
xchg
xchg
or
test
movsb
mov
out
push
push
dec
in
xchg
mov
xor
ja
cmp
imul
sbb
sub
clc
aad
inc
shrb
nop
cmp
adc
mov
xor
data16
das
es
insb
enter
add
test
sbb
out
xlat
jne
sahf
out
lahf
adc
fcmovu
inc
xor
daa
push
std
jb
sub
ret
ret
pop
adc
shll
xchg
push
out
aam
pop
scas
push
movsl
sahf
stos
es
xchg
scas
ds
jb
mov
mov
ja
stc
pop
mov
mov
mov
gs
mov
xor
in
pop
insl
adc
aam
decl
cs
dec
addr16
aaa
sub
mov
push
cwtl
adc
shlb
push
in
lret
call
fwait
pushf
mov
ret
add
fidivs
push
and
cmc
mov
imul
scas
aaa
out
lret
mov
jl
loop
xor
mov
or
and
cmp
aas
xor
lret
pushf
inc
ja
lret
push
enter
adc
imul
jae
xor
or
push
xchg
xor
sarb
fnstenv
repnz
adc
loop
adcl
pop
sbb
sqrtps
or
jae
jg
call
jge
lcall
scas
ret
rcll
inc
sbb
bound
fimull
icebp
into
imul
sbb
adc
or
test
or
mov
fcompl
les
cli
popf
push
dec
les
push
jb
call
mov
shl
cmp
movsb
xchg
xor
jae
sbb
mov
mov
fwait
xor
cs
jns
sbb
hlt
push
lahf
insb
ds
scas
add
push
or
mov
xor
inc
das
push
lea
push
push
cwtl
mov
adcb
push
imul
push
stos
jno
add
imul
mov
jecxz
add
dec
xchg
loope
je
pushf
mov
ror
push
aaa
ja
xlat
mov
pop
or
pop
clc
out
mov
push
xchg
mov
jo
jle
mov
cltd
jno
fs
aad
sti
imul
jl
cltd
adc
sbb
and
mov
mov
insl
mov
repnz
mov
addr16
sbb
mov
cmc
sub
pop
push
repnz
xchg
push
jns
and
jno
sub
je
lcall
add
lret
gs
out
xor
int
add
jbe
dec
ja
lret
shll
xchg
add
cmp
cld
jmp
fcompl
loop
aam
cmp
or
leave
roll
fstpt
xchg
roll
add
jno
fsubrl
add
xchg
pusha
dec
adc
adc
lds
loope
in
loope
add
cld
cmp
mov
adc
mov
cli
in
cmp
jp
mov
inc
push
mov
movsl
push
dec
movsb
test
adc
out
enter
sbb
lods
fst
xchg
ja
js
rclb
pop
sub
add
sahf
lock
push
jmp
idivb
dec
push
xor
add
ljmp
inc
mov
dec
aas
sub
stos
arpl
sub
dec
shrl
xor
and
or
inc
ret
ds
pushf
pop
adc
pop
and
leavew
lea
popa
xchg
cmp
fs
xchg
dec
pop
cld
lret
jb
ret
push
ss
rcll
xor
pop
repz
xchg
lods
leave
adc
cmp
mov
or
push
xchg
in
imul
mov
ljmp
movsb
in
pop
or
in
xchg
das
mov
cld
push
subb
jmp
mov
inc
test
out
mov
ret
jecxz
sbb
imul
xchg
stc
push
mov
aam
xchg
mov
sahf
sub
mov
pop
nop
mov
or
mov
sbb
sbb
loopne
hlt
mov
cmc
movsl
pop
pop
loope
rcll
jo
push
and
jge
test
xchg
das
xchg
add
sub
aaa
fists
jo
add
mov
sbb
loopne
inc
mov
mov
pop
jge
jmp
dec
sahf
mov
out
cmp
rcll
call
xchg
stos
clc
mov
das
mov
dec
cmp
mov
dec
dec
mov
in
add
push
stc
cwtl
loope
mov
movsl
mov
adc
int3
je
or
mov
adc
imul
pop
jle
pop
inc
cmp
ljmp
and
sbb
adc
push
cld
mov
push
add
pop
sbbl
ljmp
clc
mov
sbbb
hlt
adc
pop
cmpsb
lods
imul
jne
shlb
daa
clc
aad
fwait
cmp
or
push
stc
pop
ficompl
sub
std
cs
jbe
xor
push
jbe
fwait
sbb
or
xlat
push
jp
fwait
mov
insb
or
xchg
data16
lret
sbb
adc
lods
jmp
cmpsl
adc
mov
inc
inc
xchg
out
data16
push
jno
jmp
push
lods
mov
xchg
sbb
dec
popf
xchg
or
gs
jg
fisubrs
dec
mov
sti
popa
jg
rcr
aaa
bound
mov
xchg
and
idivb
xchg
fcompl
sbb
mov
sub
mov
push
mov
cltd
enter
nop
jl
gs
stc
and
scas
mov
loop
push
inc
mov
or
push
sahf
stos
push
test
ficoml
adc
mov
pop
shrl
fstpl
cs
inc
iret
cmp
fdivrs
add
push
sbb
shl
xchg
outsl
mov
mov
inc
adc
mov
dec
mov
pop
shl
sbb
je
imul
mov
sub
fsts
fadds
or
mov
jno
stc
mov
cmp
mov
sub
gs
pushf
fisubrs
jno
sbb
outsb
xchg
cltd
cmp
stos
pop
in
mov
lea
ja
outsl
mov
dec
imul
cmp
mov
mov
mov
jmp
dec
mov
dec
addb
imul
jg
stc
mov
mov
cs
movsb
xchg
stos
inc
stos
dec
aam
mov
fdivrs
aad
cmp
imul
mov
ljmp
test
stos
or
pop
test
jne
stos
and
mov
dec
pop
aaa
xchg
into
lea
lcall
mov
out
add
jmp
gs
dec
pop
mov
repz
hlt
gs
hlt
adc
aad
ret
jnp
adc
es
adc
insl
and
popf
test
hlt
test
movsb
iret
out
in
sub
ret
ret
pop
aaa
and
and
jg
daa
js
sub
cmp
xchg
and
aam
je
xor
push
int3
xchg
sbb
sahf
adc
xchg
int3
cld
mov
data16
and
addr16
cltd
push
call
xor
int
lahf
insb
test
out
or
inc
int3
insl
js
jb
cmpsl
repnz
test
arpl
sub
push
xor
fcmovnbe
stos
cmp
cmp
outsb
fldcw
in
je
pop
push
jns
cmp
mov
jge
shl
inc
xor
movsb
loop
push
and
jbe
mov
arpl
stc
push
outsl
mov
and
pop
push
outsl
fs
stc
pop
xchg
pushf
loopne
stc
jno
fwait
pop
inc
mov
dec
insl
shll
push
sbb
or
setge
mov
out
rcrb
pushf
pop
and
and
fiadds
dec
cmp
fcmovnbe
cmp
adc
fsub
insl
xor
std
les
push
lods
mov
jl
es
jp
cmpsl
in
lods
mov
mov
xor
mov
or
testb
outsb
jle
push
lret
mov
mov
mov
jle
add
push
pop
scas
jns
pushl
mov
sbb
fistl
sbbl
pop
adc
mov
ror
data16
push
cmpsb
fmul
fs
bound
adc
push
cmp
out
xchg
mov
pop
stos
ds
push
jnp
int
xchg
stos
mov
and
sti
mov
sub
add
mov
push
js
xor
mov
test
add
xchg
xchg
scas
fnstenv
cmp
pmulhuw
loop
aam
xlat
fwait
jbe
mov
cwtl
jnp
push
gs
popf
or
cmovs
sbb
mov
sti
inc
mov
mov
hlt
jns
inc
hlt
test
es
mov
xchg
push
xchg
cld
cmp
stc
iret
and
push
inc
in
mov
lcall
xor
inc
stos
mov
in
movsl
xchg
scas
pop
popa
fs
dec
mov
lret
mov
lret
rorl
lret
rcrb
push
mov
aam
ret
dec
jno
pop
ja
fwait
idivl
add
mov
pop
fists
mov
cmp
sahf
pop
push
pop
inc
call
daa
enter
fs
dec
in
xor
xor
mov
insl
jbe
scas
jmp
adc
jp
ret
ds
or
pop
cs
mov
test
ret
xchg
incb
fiaddl
pushw
pushf
fld
and
or
inc
leave
test
dec
jnp
stc
loopne
jns
or
lea
test
hlt
and
or
pushf
sbb
sbb
pop
add
add
imulb
test
dec
push
push
sbb
dec
add
dec
shlb
shlb
das
mov
fwait
nop
shlb
and
cmp
cmp
hlt
push
shlb
fs
sbb
dec
fnstsw
lods
sbb
adcl
mov
dec
or
frstor
push
sbb
dec
pop
rcr
popf
scas
or
mov
mov
outsl
bnd
adc
fstpt
adc
cmc
adc
mov
mov
mov
orl
mov
loopne
adc
gs
stos
negb
jp
aam
cltd
mov
inc
ficoml
jno
xchg
xor
pop
or
fucom
or
jge
push
or
push
sub
out
jno,pn
pusha
cmp
out
insl
sahf
daa
repz
in
ljmp
pusha
popa
and
shll
faddl
jle
inc
adc
sahf
inc
sti
jns
xor
addl
cmp
lret
scas
pop
mov
out
test
jge,pn
rorb
lcall
adc
mov
sub
in
shrb
fsubs
mov
dec
into
xchg
inc
mov
enter
jbe
and
sbb
push
int
mov
mov
sub
dec
lret
out
add
and
idivl
int
movsb
and
aaa
xchg
loope
aad
mov
pop
repnz
ss
mov
jg
movsl
lock
or
mov
adc
and
add
push
es
dec
add
dec
ret
es
lahf
bound
insb
adc
inc
add
mov
or
pop
popf
mov
mov
test
test
iret
xlat
sarb
sub
sbb
sub
dec
addr16
xor
mov
ljmp
dec
scas
stc
and
cltd
in
loope
sbb
call
xorb
sub
add
popa
cld
addb
mov
pop
inc
ret
mov
icebp
cmp
jae
fdiv
xor
push
push
dec
sub
fbstp
inc
das
push
lret
inc
aad
jp
mov
mov
fisubrs
xchg
pop
pop
popf
mov
pop
push
sub
push
and
cmp
xchg
cmp
and
cwtl
shrl
sub
in
mov
pop
lret
std
test
mov
xor
sub
and
lret
add
or
inc
sbb
test
sbb
cli
sbb
cs
stos
popw
push
push
inc
dec
out
popf
cmp
xorb
xchg
jmp
add
in
sbb
pop
stc
jle
out
pop
mov
dec
and
out
push
pusha
mov
and
testb
outsl
insb
icebp
ret
insb
push
imul
cmc
data16
add
mov
and
enter
mov
div
push
fldcw
iret
js
std
outsb
xor
dec
popa
insb
xor
ss
inc
inc
push
sub
int3
aam
std
insl
icebp
adc
jp
sbb
sbb
inc
mov
jg
lret
xchg
lret
inc
xchg
pushf
outsb
loop
jb
jnp
mov
mov
xchg
mov
jmp
lods
loopne
pop
mov
shl
test
cmpsl
dec
jbe
push
lret
insb
mov
mov
mov
or
mov
xlat
lock
scas
xor
or
xchg
mov
jne
push
pop
in
hlt
or
lods
fidivrs
ret
push
imul
cmp
sub
sub
lahf
push
jo
test
test
andb
cmpsb
sbb
mov
test
icebp
sahf
dec
push
ret
jo
cwtl
loope
addr16
xor
out
movsb
hlt
pop
arpl
push
dec
jo
add
xchg
insl
mov
jne
icebp
mov
pushf
lahf
xor
popa
xor
lahf
roll
lahf
mov
jns
aam
inc
pop
mov
enter
adc
pop
rcll
pushf
pop
fldenvs
lods
push
cmc
out
popa
cmpsl
pop
dec
movsb
bound
icebp
lret
icebp
mov
adc
lcall
pop
xor
mov
insl
xchg
inc
mov
xor
dec
int
mov
push
xchg
aas
cld
jmp
pop
jp
pop
in
mov
pop
popa
out
push
xor
lea
mov
leave
frstor
gs
or
mov
out
ds
xor
pop
xchg
pusha
mov
gs
pop
sti
push
mov
lret
or
cmp
xchg
adc
inc
jl,pn
ss
mov
cmpsb
roll
pop
mov
pusha
mov
or
adc
lcall
stos
xor
lcall
bound
shll
push
subb
sti
sub
out
adc
fcomp
scas
mov
ja
mov
pop
cltd
xchg
inc
flds
bswap
mov
cmp
js
nop
ret
or
jge
add
inc
scas
add
ret
jae
inc
pop
xchg
arpl
jnp
and
inc
mov
sbb
loope
xchg
mov
popl
cmpsl
cltd
dec
call
push
in
aaa
fsubrl
xchg
rol
loope
pop
loop
cld
xchg
scas
rol
js
ret
xchg
add
stos
push
inc
popa
push
aad
xchg
sbb
jmp
inc
jmp
fwait
mov
fists
imul
sub
fistl
add
imul
inc
xor
call
outsl
jl
pushf
into
mov
mov
sti
es
divb
rolb
mov
out
adc
push
push
push
pop
push
adc
in
fwait
push
popf
xchg
sbb
inc
add
movb
les
mov
and
fstl
lods
sub
mov
and
sub
add
jp
and
lret
jbe
std
addr16
xchg
int3
mov
mov
notl
dec
movhlps
insb
cli
xchg
pop
adc
popf
xor
pop
mov
ret
and
push
ds
rolb
dec
in
cwtl
test
les
jb
sbb
jle
cmp
adc
mov
lahf
out
jecxz
and
imul
loop
mov
sub
push
loop
xor
repz
repnz
mov
es
imul
ret
fucomi
decl
js
xchg
mov
lret
and
adc
push
cmp
xor
pop
adc
push
outsl
ljmp
fs
ficomps
adc
mov
cli
inc
aad
fsubrs
out
js
outsl
addr16
xor
and
xor
and
or
jo
xchg
repz
mov
jae
shll
push
rcll
dec
notl
push
rcll
jne
add
cli
and
xor
and
fbld
loope
and
adc
pop
add
xchg
mov
push
mov
cltd
cmp
push
ja
jl
je
pop
mov
inc
or
test
add
inc
cmpsl
pop
test
dec
out
sbb
outsb
mov
rcrb
cmpl
testb
rorl
test
rcll
push
jo
lret
test
pop
imul
xor
pop
mov
and
and
and
inc
inc
mov
shl
stc
movsl
mov
mov
cmc
sahf
fldcw
test
in
daa
push
or
pushf
jne
or
aaa
push
push
mov
push
pop
mov
xor
in
pusha
mov
inc
jmp
test
es
add
mov
mov
ljmp
les
add
sbb
shr
inc
loop
mov
push
inc
shll
imul
pop
xbegin
jae
or
loopne
in
stos
push
outsl
cmp
adc
push
or
cli
imul
test
sbb
adc
cmp
dec
iret
data16
add
std
pop
push
xchg
dec
ja
das
lcall
xor
sbb
dec
arpl
xor
dec
sub
test
ss
and
inc
push
shl
jmp
jmp
push
scas
push
jne
jp
popa
cmp
ret
and
nop
aam
insb
jae
pushf
cmc
andb
repnz
mov
add
cmp
push
stos
and
popf
mov
hlt
stc
or
sahf
xor
and
xchg
push
xchg
mov
inc
inc
dec
adc
dec
push
aaa
jmp
xchg
lcall
push
std
mov
fcmovnu
xchg
stos
and
mov
mov
add
mov
and
pop
xorl
sub
xchg
loope
fisubs
adc
inc
sti
test
pop
test
lods
push
sti
cmc
lea
jae
mov
cmc
add
addr16
lahf
adc
outsb
cld
loope
std
loop
pop
dec
mov
arpl
push
jg
mov
pcmpgtb
jae
movsl
pop
adc
cmp
sbb
lds
int
sti
inc
push
xor
ret
and
getsec
dec
mov
xor
test
or
adc
adc
js
iret
je
adc
lods
xor
adc
fldenv
test
push
fsubs
fdivp
mov
push
test
or
pop
jp
fiadds
out
bound
lret
cmp
aad
add
cmp
lods
lahf
cmpsb
scas
sub
mov
jnp
movsl
push
incl
loop
or
add
mov
ds
push
cltd
daa
stos
pop
xorl
mov
popa
sub
bnd
nop
xor
or
inc
mov
and
mov
sbb
mov
ret
or
dec
lret
test
jo
orl
std
or
loope
mov
dec
loopne
mov
jp
insb
push
adc
mov
repnz
dec
int
mov
addl
sbb
dec
mov
sub
xchg
push
enter
xor
sbb
cltd
fistl
icebp
ljmp
shl
push
mov
enter
movsb
push
ret
idiv
cmp
mov
movsb
push
in
mov
sub
adc
pop
and
incb
push
repnz
call
mov
mov
in
popa
scas
push
fs
or
shl
es
mov
cwtl
lods
pushf
pop
and
jae
mov
push
clflush
push
inc
jmp
lahf
inc
je
mov
dec
pusha
cmp
pop
and
xchg
in
jl
movsl
bound
fmull
adc
cmp
clc
stc
pop
stos
sbb
xchg
pop
ret
pop
inc
ret
pusha
mov
int3
jg
into
push
pusha
adc
pusha
xor
das
adc
lods
pop
cwtl
mov
jno
out
dec
iret
je
pop
pop
std
xchg
jae
mov
mov
ret
dec
mov
icebp
cltd
or
adc
addr16
stos
pop
in
sbb
xchg
mov
cmp
push
movsl
mov
xchg
add
popf
cmc
addb
dec
dec
add
mov
and
mov
or
mov
sbb
ss
std
mov
out
popa
adc
adcl
jno
cmp
es
nop
icebp
fwait
and
xchg
das
in
xor
data16
test
sub
inc
les
xchg
inc
mov
xlat
or
in
cmc
push
sub
scas
mov
adc
lock
push
decb
mov
pushfw
mov
add
out
jns
outsb
out
lcall
outsl
cli
and
test
cmp
outsb
lcall
add
lahf
mov
roll
fistps
lock
stos
mov
sub
loope
cmp
mov
xor
arpl
dec
adc
jecxz
and
orb
adc
lea
rcll
xor
inc
lcall
andl
fiaddl
jmp
inc
ret
das
sbb
rcl
jae
push
aam
and
popa
shr
xor
negb
jle
dec
and
arpl
leave
xor
add
sub
es
in
subl
sbb
push
aas
das
xchg
enter
js
ja
stos
movsl
mov
adc
int3
leave
push
outsb
daa
push
pop
sub
mov
fmul
mov
pop
cli
imul
mov
fidivs
and
sub
leave
ds
arpl
shl
jmp
fwait
xlat
dec
and
mov
fidivrs
int3
push
pop
mov
mov
lea
inc
shlb
lcall
test
fcompl
cmp
mov
xor
adc
je
sub
sub
test
push
sub
loope
jle
icebp
sahf
xchg
cwtl
and
test
iret
je
xchg
repz
in
mov
leave
add
clc
jnp
mov
mov
shr
mov
sub
pop
xchg
inc
pop
inc
cltd
adc
mov
adc
xchg
xor
out
out
sbb
push
jnp
into
ret
ss
mov
fwait
nop
or
lock
subb
inc
test
sbb
xchg
jno
xor
mov
mov
arpl
data16
popa
cltd
jl
adc
xor
lods
shrb
fnsave
sti
dec
dec
mov
in
mov
dec
push
jo
aam
and
cmp
pop
xchg
int3
xchg
pop
pop
bnd
dec
add
jae
jnp
mov
sarl
je
pop
xor
outsb
pushw
stos
pop
lea
jae
ja
nop
mov
add
stc
lret
stos
mov
inc
add
mov
sti
pop
pop
jl
inc
test
aaa
jl
mov
sub
mov
push
xchg
iret
mov
cmp
movsl
dec
pop
push
mov
adc
xchg
xlat
and
xchg
fsubl
stos
stos
mov
push
sti
dec
inc
jl
xchg
iret
dec
in
js
cmpsb
xor
pop
addr16
or
cwtl
cmp
repnz
xchg
ret
push
mov
mov
dec
daa
or
jl
repz
aaa
xor
xor
lret
fstpt
jg
test
add
push
mov
pusha
jg
lods
out
movsl
ret
cs
mov
lret
ret
jnp
outsb
jb
xchg
jo
es
dec
jb
dec
push
sbb
imul
xorb
add
xor
orb
sbb
in
push
in
es
daa
cmovno
pop
dec
outsb
popa
add
rclb
xchg
lea
mov
xchg
pop
mov
push
mov
add
jo
cmc
adc
add
pop
dec
idivl
test
dec
push
pop
fcmovnbe
ret
or
lods
cmpl
add
out
adc
negb
xor
loop
mov
and
xor
mov
aaa
push
dec
fsts
aas
scas
lret
repnz
cmpsb
test
mov
or
fs
jbe
xchg
dec
xchg
cmpsl
adc
inc
cmp
mov
push
les
push
test
loopne
add
dec
mov
lods
inc
inc
push
adc
rcl
movsl
sub
lods
in
and
or
outsb
bound
mov
dec
mov
enter
lcall
mov
fisttpl
daa
jp
push
call
mov
call
sub
dec
scas
repz
mov
push
xchg
orl
loop
rcrl
jg
push
loope
xorb
lea
movsb
and
mov
aas
jo
xor
xchg
mov
push
fwait
push
mov
add
lcall
movsb
shrb
inc
or
orl
cli
test
push
push
pop
jp
mov
xchg
push
call
push
addr16
in
pop
cmc
push
mov
xor
jo
mov
es
repz
mov
out
out
mov
bound
inc
add
and
sbb
fwait
mov
dec
pmaxsw
cwtl
sub
xchg
cmp
sbb
sarb
xor
pop
add
and
pop
sbb
ja
cwtl
inc
mov
cmpsb
adc
adc
addr16
fldenv
fmulp
mov
mov
cld
shlb
push
imul
cmc
jnp
aam
pop
pop
xor
outsb
xchg
sbb
push
xchg
xchg
mov
rolb
sbb
or
inc
push
or
push
imul
adc
js
jo
add
push
adc
and
pop
movsl
lds
sub
fimuls
lret
stos
mov
lea
adc
lods
insb
or
inc
test
mov
jb
adc
shr
mov
mov
je
ljmp
mov
push
inc
stos
push
sbb
xchg
test
js
insb
lock
and
pop
fsubrl
imul
daa
jl
dec
les
fisubl
out
dec
mull
repz
lock
mov
in
xlat
inc
adc
dec
adc
sub
divl
jg
imul
jmp
dec
inc
mov
ja
jl
or
adc
loope
mov
lret
in
mov
fiadds
test
or
sbbl
jno
push
cmc
mov
je
mov
push
outsb
jecxz
scas
push
enterw
mov
add
sti
cli
data16
or
fs
scas
add
sbb
sbbl
out
sarl
add
mov
mov
int3
pop
push
les
sti
daa
iret
lds
std
cltd
clc
push
stos
out
gs
pushf
test
sarb
cmpsl
pop
jp
dec
cmpsb
jb
add
xchg
and
pop
clc
add
rcl
sahf
jl
and
pop
jle
test
addr16
add
cli
cli
imul
xlat
jg
adc
pmaxsw
imul
xor
sub
lock
push
into
stos
inc
and
scas
fcoms
into
inc
and
or
int3
jae
sub
cwtl
adc
pop
sbb
sahf
loopne
test
and
shrb
dec
mov
xchg
aas
xchg
mov
push
ljmp
outsl
movsb
insb
aam
lea
jp
xchg
mov
in
out
ret
mov
sbb
and
scas
mov
test
enter
xor
lods
imul
push
aad
mov
ss
pop
popf
cli
repnz
pop
or
stos
lods
out
scas
or
push
loop
sbb
jnp
mov
mov
out
push
sbb
jnp
bound
dec
inc
adc
leave
lahf
test
aad
lods
out
mov
not
loop
push
out
mov
sub
inc
daa
pop
dec
aaa
and
popf
repz
repnz
in
dec
sub
jnp
and
aam
jae
negb
pop
cmpsb
dec
add
inc
lahf
mov
pop
nop
mov
push
adc
add
out
lock
jo
repnz
push
adc
les
out
int
inc
dec
addr16
jl
cmp
cmp
sub
dec
pop
inc
ja
loopne
clc
int
inc
repnz
out
xchg
cmpb
in
imul
sbb
jno
cltd
jne
scas
push
cli
xlat
or
rcrb
pop
and
mov
insb
sbb
mov
pusha
mov
sub
lahf
daa
sbbl
sbb
aam
cmpsl
fscale
aaa
out
mov
dec
mov
popf
call
scas
ret
inc
jbe
jo
xor
test
leave
or
pop
bound
or
mov
leave
dec
push
jbe
pop
mov
mov
push
dec
xor
popf
mov
push
mov
pop
mov
lock
lahf
push
jne
shlb
pop
cmp
nop
cmp
mov
repz
and
pop
and
jmp
aam
jl
pop
sbb
lock
add
adc
jbe
mov
scas
adc
sbb
pop
inc
xchg
lret
jp
aad
cwtl
jmp
fnsave
pusha
pop
xchg
sbb
xor
orb
mov
stc
add
dec
lcall
push
dec
mov
test
push
adc
dec
jge
cs
es
subb
jp
cmp
es
ret
xchg
dec
pop
adc
ljmp
inc
loop
xor
leave
mov
jb
dec
mov
cli
mov
test
daa
or
push
adc
mov
outsl
ja
cmc
std
imul
add
push
add
scas
test
pop
jbe
push
sarl
lods
mov
jle
std
test
mov
sub
sub
push
mov
cmp
adc
leave
inc
add
lcall
jp
inc
xchg
je
lret
push
mov
jae
mov
pusha
je
aaa
in
out
mov
pop
mov
fcomi
cmpl
mov
add
out
in
addl
leave
cmpsl
scas
cltd
sub
xor
or
mov
cmp
sbb
lcall
sbb
fidivrl
sahf
std
cmp
mul
cli
arpl
dec
xchg
ja
mov
inc
arpl
push
enter
jge
adc
cld
cmpsl
inc
lds
add
cmp
in
push
and
mov
aas
jo
lds
ss
inc
test
jno
lods
dec
dec
cmp
das
xchg
std
repnz
cmp
pop
add
dec
mov
mov
push
ret
xchg
int
cmp
pop
mov
cwtl
add
push
arpl
cld
movsb
cmc
inc
int3
cmp
int
out
sub
fwait
push
add
cmp
mov
dec
sub
clc
inc
xorl
aas
lret
loope
pop
out
sub
push
subl
movsl
mov
out
push
mov
mov
adc
sbb
push
bound
repnz
inc
or
jmp
cltd
je
fistl
push
jo
jmp
pop
pop
pop
gs
icebp
push
mov
sub
jns
xchg
jno
js
dec
rorl
xchg
ret
push
mov
in
in
pop
imul
pop
fisttps
cmp
xlat
decl
pushf
mov
mov
mov
daa
out
jns
sbb
or
mov
int
pushf
jns
lcall
jl
cwtl
movsb
movsl
jecxz
ret
mov
sbb
push
pop
adc
or
xchg
clc
repz
ficomps
inc
pop
mov
push
pop
and
add
cs
shl
xchg
xchg
gs
mov
push
or
lods
ljmp
inc
cmc
outsb
push
or
mov
xor
out
hlt
pop
outsl
mov
inc
mov
mov
jmp
call
arpl
xor
xor
dec
pop
pusha
shrb
pop
scas
ds
push
or
xchg
and
inc
mov
lcall
adc
xor
mov
jo
cmpsb
pop
test
mov
pop
scas
pop
sub
cmpsl
push
scas
lret
fstpl
add
scas
jle
rorb
add
mov
push
in
fidivrs
sbb
cmpsb
adc
ds
sub
mov
push
stos
pop
rcll
fildl
push
stc
pop
lcall
mov
mov
movsl
fwait
xchg
mov
negl
repz
test
push
lock
cmp
pushf
nop
sbb
stos
push
sub
cwtl
movsb
lods
negb
out
push
push
dec
movsb
jecxz
fsts
lods
fisubs
rcr
out
add
cmp
ss
mov
mov
inc
mov
in
mov
xchg
aam
mov
inc
mov
movsl
je
mov
jb
cli
cmp
push
xchg
mov
es
sbb
fidivl
dec
int
lahf
mov
mov
jb
sub
mull
sahf
ds
and
add
adc
pop
dec
mov
dec
or
bound
mov
pop
push
leave
dec
adc
fcomps
cmc
pop
aaa
adc
and
inc
lock
pop
in
arpl
hlt
or
jmp
sub
cmc
jp
cmp
je
adc
pop
aaa
cli
repnz
das
xor
roll
cmc
enter
adc
sub
into
repz
les
jecxz
xor
sarl
rclb
fstpt
scas
shl
dec
mov
out
mov
pop
jno
add
push
push
jno
mov
inc
lea
out
mov
mov
inc
scas
aaa
lret
aad
push
test
subl
cmpsb
push
rolb
mov
out
and
jmp
andl
inc
int
push
adc
adc
mov
and
adc
clc
jl
xor
mov
cmp
jmp
inc
movsl
js
and
push
int3
and
pusha
push
mov
sub
cmp
sbb
mov
adc
lea
and
cmp
or
notb
and
or
xor
mov
dec
xor
mov
adc
insb
insl
testb
xchg
pop
cmp
inc
pop
mov
pop
lods
shll
mov
sub
mov
shlb
nop
je
add
jg
cmp
test
aam
jne
or
adc
dec
mov
out
sub
data16
pop
pushl
and
pop
fsub
pop
jne
in
je
mov
add
pop
or
mov
xchg
outsb
mov
dec
pop
fiaddl
repz
cld
sub
cwtl
test
stos
mov
mov
mov
mov
push
xchg
pop
in
test
inc
push
repnz
mov
cmpsl
scas
push
test
pop
push
repz
shll
pop
repz
push
dec
jo
jmp
jp
aad
mov
inc
ud1
adc
mov
mov
push
dec
insb
sub
out
pop
aad
mov
das
sub
lahf
push
ljmp
ficomps
mov
mov
pop
and
add
popf
mov
daa
divb
stos
lcall
mov
mov
push
ss
xor
lods
inc
sbb
add
sbb
daa
push
xchg
sub
pop
mov
pop
fsubl
scas
test
or
mov
mov
adc
jnp
and
mov
les
mov
sub
inc
insb
popf
push
cmp
lret
push
sub
nop
fcmovu
insl
aas
stos
push
sbb
inc
inc
lcall
pop
lds
add
pusha
jecxz
fwait
sub
adc
sbb
aaa
mov
ds
enter
xchg
adc
jg
sub
fisubrl
or
popa
cmp
sub
pusha
jnp
and
pop
xor
push
jle
mov
subl
iret
clc
mov
jp
xor
mov
int3
pusha
lret
lret
pop
mov
mov
push
call
mov
xor
into
in
insl
shll
add
lods
inc
cltd
mov
mov
je
sahf
xchg
lret
cltd
jbe
dec
es
mov
out
jle
or
and
pop
cld
sbb
daa
mov
into
xchg
aam
insl
insl
sub
out
cltd
lds
sub
mov
pop
mov
pusha
repnz
movsl
dec
loop
scas
xor
pop
rolb
loop
and
inc
or
jg
lods
dec
test
movsl
dec
out
xorl
ret
and
sti
cli
fstpt
stos
cmc
inc
inc
jae
xchg
xchg
sbb
scas
or
push
pop
xor
and
push
inc
jg
cld
repnz
pushf
cmpsb
cs
pop
fiaddl
shrb
add
loope
lock
adc
sub
ficoml
les
jl
jle
adc
in
mov
pop
dec
jle
loopne
dec
into
aas
cmp
popa
pop
cmpsl
cmp
xchg
or
pop
subb
push
dec
mov
loop
lods
lods
lods
sbb
mov
sbb
and
push
xchg
lea
adc
or
sbb
or
dec
cltd
orb
sub
lret
rcrl
test
fidivl
adc
cmp
js
push
and
shufps
arpl
popf
or
pop
jno
jbe
pop
call
push
pop
ds
es
xchg
ret
xor
dec
sub
dec
fmull
inc
pop
rclb
pop
inc
das
sbbl
dec
je
or
movsb
push
and
mov
mov
jo
add
ret
mov
lcall
mov
aaa
shlb
push
out
mov
xlat
loop
andl
jmp
int3
leave
mov
imul
fst
mov
loope
sbb
xchg
pop
mov
stc
add
loope
sahf
shlb
idivl
sti
lea
testl
js
add
lcall
cs
jl
loopne
add
ds
jae,pn
loope
popa
add
jnp
mov
jecxz
cmc
call
shlb
mov
call
outsb
xor
adc
pop
xchg
out
fcmovbe
jne
push
rcr
bound
mov
xchg
mov
sub
inc
xor
jp
mov
mov
mov
adc
pop
rorl
jecxz
dec
pop
gs
sbb
mov
jle
insl
insl
cli
xchg
cmpsb
mov
cmp
add
mov
pop
das
mov
xchg
adc
and
sub
movsb
icebp
or
push
negb
data16
stos
jp
aam
sub
jnp
clc
ss
icebp
adc
jne
ss
aas
adc
fs
dec
add
jle
mov
cmpsb
cmpsb
push
sub
mov
and
ds
mov
scas
and
cwtl
xchg
outsl
pop
lods
mov
or
pushl
pop
jnp
std
insl
cmpl
movsb
mov
mov
aam
mov
cmp
je
cmp
hlt
fstpt
shll
cs
es
out
fsubrs
arpl
clc
mov
les
movsb
mov
std
inc
or
inc
rcrb
cmp
iret
pop
mov
adc
sti
cld
or
sub
jns
mov
loopne
mov
fisttps
fmul
stos
daa
xchg
mov
or
test
adc
push
icebp
sub
int
jge
sbb
inc
inc
inc
pop
pop
stos
cs
fcoms
adc
sub
mov
inc
mov
test
add
rclb
imul
ja
je
or
mov
inc
aaa
add
iret
stc
xchg
lds
sub
lods
jnp
dec
gs
inc
xor
xorl
icebp
sub
sub
iret
inc
ficomps
jmp
mov
ja
das
lcall
pop
scas
andl
fwait
push
mov
mov
adc
mov
gs
sub
repnz
test
jbe
test
and
add
rcrb
push
movb
and
push
pop
xchg
jne
sti
fsubrl
adc
fs
jp
sti
dec
fidivrs
je
dec
inc
mov
pop
ds
sub
mov
xor
enter
popf
dec
outsb
shlb
cltd
adc
lcall
mov
push
push
lahf
into
jl
mov
nop
iret
pop
cmp
jns
xchg
xlat
xor
add
xchg
mov
cmc
scas
pushf
jnp
roll
jnp
xor
xchg
jae
cmp
and
pop
cmpsb
repz
push
sub
addr16
je
xchg
mov
mov
sub
or
out
ret
and
dec
fildl
cmp
sub
roll
lret
js
cli
cmp
orb
incl
test
loop
icebp
loop
cmpsl
shll
inc
push
mov
add
faddp
and
inc
in
out
pop
fisttps
xor
add
lods
xor
jecxz
xor
arpl
repnz
mov
add
mov
rcr
add
in
roll
shrl
mov
es
int3
cmc
push
inc
xchg
xchg
mov
mov
inc
inc
les
xchg
add
jnp
sbb
or
ss
out
lcall
jae
mov
addps
aas
ds
lea
pop
fidivs
add
pusha
out
pusha
leave
dec
cmpsb
mov
pusha
and
push
and
cmpsb
mov
icebp
or
pop
test
xchg
pop
lret
outsb
push
loopne
jns
push
ja
stos
sti
xor
cwtl
pop
leave
insl
add
jno
rol
mov
add
sbb
dec
pop
fstpl
out
into
sub
test
imul
cmp
mov
outsb
fbld
add
movsb
inc
pop
lret
ret
shll
mov
out
ds
mov
mov
xchg
xchg
mov
jp
mov
pop
movsb
fs
aaa
rcll
int
repz
lock
rcrl
repnz
cmp
mov
icebp
bswap
dec
insl
xor
jle
insl
int3
cmp
xchg
pop
pop
push
fsubrl
cmp
lds
jns
or
movsb
pusha
jns
lock
jge
ds
cmpl
shlw
mov
and
repz
mov
push
adc
sbb
push
repz
adc
pop
test
ret
ret
aad
test
popf
push
dec
pop
xchg
fld
scas
pop
and
mov
mov
cmp
mov
mov
sub
mov
call
rcll
shll
sbbb
mov
adc
gs
cwtl
scas
mov
pop
adc
mov
adc
stc
adc
shlb
clc
jge
xchg
imul
lret
dec
ljmp
or
pushf
sub
adc
movsb
add
inc
inc
fnstenv
cmc
mov
sub
jne
lret
movsl
mov
shl
repnz
mov
cmpsb
stc
ficomps
push
mov
repz
jl
cmpsb
inc
cmp
jg
in
sbb
dec
pop
adc
scas
gs
add
adc
bound
iret
pop
js
pop
imul
xchg
outsl
lcall
insb
jg
cmp
adc
rcl
or
mov
dec
mov
outsl
adc
test
dec
js
adc
sbb
add
pop
data16
test
std
push
lahf
cmp
test
pop
lods
inc
mov
jmp
mul
add
inc
jns,pt
and
popf
pop
aad
fucomi
pop
sti
imulb
sub
dec
outsl
movsb
inc
sub
jno
xor
add
pop
leave
cmp
das
push
fstpl
mov
fidivrl
cmpsb
push
outsl
pandn
push
ja
in
inc
push
stos
lds
adc
pop
xor
repnz
sbb
dec
sub
ljmp
push
mov
loop
daa
jmp
rcrb
stc
cmp
pop
pop
and
mov
inc
fsubrs
add
shlb
loop
pop
add
jo
aam
add
adc
data16
mov
push
fidivrs
xor
sbb
dec
data16
mov
test
mov
lcall
shll
mov
lahf
mov
int
xor
pusha
and
shrb
jmp
mov
pushf
rolb
test
int3
jb
inc
mov
jecxz
mov
fildl
push
or
fwait
jecxz
icebp
jmp
mov
mov
cmpsb
fiaddl
mov
and
mov
test
sbb
adc
hlt
xor
or
mov
mov
sub
push
jle
mov
jno
dec
loop
mov
push
inc
test
test
dec
xor
add
lea
lea
mov
sub
fstpt
pushf
add
add
in
loop
js
orl
and
push
in
xlat
inc
arpl
or
xor
movsb
add
add
and
in
iret
flds
rorb
cmp
mov
sbb
lods
sbb
sub
sub
data16
inc
fdivrs
cmp
mov
test
xorb
cmp
stc
pop
add
mov
or
dec
inc
aas
cmpsb
imul
cwtl
ljmp
or
aad
insb
jae
hlt
lret
vshufpd
mov
sub
jmp
sbb
enter
das
inc
mov
jmp
mov
dec
mov
add
stos
or
mov
or
push
lock
orl
jp
mov
ret
xchg
mov
adc
jo
cld
xchg
fdivrl
notl
je
lret
iret
mov
fcomi
cmp
jbe
push
and
inc
dec
and
std
mov
fcoms
jmp
pop
cwtl
jbe
cmpsl
call
ret
loop
pusha
xor
decl
fiadds
mov
mov
out
xchg
or
scas
pusha
in
pop
orb
push
push
dec
xchg
dec
pop
aad
cmpsl
xor
shlb
mov
jmp
push
or
cmp
cmp
sahf
rcll
pop
out
popa
ja
in
mov
sti
xor
loope
popf
rolb
popa
xchg
push
sahf
push
testb
cwtl
pop
push
jbe
movsl
xchg
mov
inc
fwait
push
mov
mov
rcrl
inc
popa
popf
cmpsb
ss
pusha
cmp
cmpsb
js
dec
mov
mov
sbb
std
sub
enter
subl
sbb
lret
adc
xor
pop
lret
stc
mov
push
pop
pop
jle
push
push
fwait
pop
fs
mov
cmpsl
pop
movsl
in
sbb
lret
push
fcmovbe
scas
jle
push
shr
mov
pop
inc
adc
in
jns
adc
mov
dec
subb
pop
ret
or
jnp
clc
test
cmp
adc
shrl
shrb
in
xchg
mov
xadd
int
je
xchg
mov
mov
mov
in
push
or
and
call
addr16
jne
int
or
cmp
shl
jle
daa
outsl
cmp
xor
cmp
daa
and
lds
push
fnstsw
call
pop
arpl
xor
call
rcrb
int3
or
repnz
outsb
into
fmuls
fdivs
shr
mov
inc
test
push
add
sar
mov
or
jl
leave
add
mov
xchg
xchg
in
and
loopne
je
dec
sbb
fiadds
inc
popw
lahf
jae
mov
idivb
cwtl
xchg
pop
pusha
or
bound
rol
inc
jle
mov
add
inc
xchg
fwait
adc
sub
cs
jae
jge
sbb
adc
loop
sbb
push
test
rcr
sub
aas
push
adc
adc
pop
pop
jg
cmpsl
fsubp
adc
mov
popa
mov
xorb
dec
arpl
push
cli
cmpl
cmpsb
out
adc
mov
subb
add
push
push
stc
and
mov
inc
test
xchg
cmc
xchg
push
inc
hlt
add
or
lds
jne
xchg
int
add
add
mov
mov
cmp
inc
rcrb
fisubrs
in
test
xchg
jmp
and
inc
push
pusha
xchg
fbstp
or
dec
pop
add
mul
dec
dec
push
leave
cld
shll
add
sbb
jo
ja
popf
fbld
les
cmpsl
jge
mov
jo
jge
jbe
mov
adcl
test
jge
or
pop
aas
aaa
les
cld
std
xor
gs
xchg
and
ret
aam
popf
mov
push
lcall
mov
test
cli
and
sbb
in
bound
daa
vpshad
fstps
in
mov
es
stc
mov
pop
push
pop
aaa
xchg
or
call
scas
push
sbb
cwtl
xchg
jne
add
xor
lret
jl
loope
pop
xchg
int3
push
xor
scas
sbb
inc
inc
das
mov
frstor
cmpsl
push
loopne
or
push
fwait
in
test
cmp
decl
shll
pop
aas
ss
pop
jl
mov
clc
and
shll
xchg
test
leave
sbb
dec
cmp
push
scas
push
fisttpl
xchg
test
pop
divb
rcrb
ds
outsl
cli
mov
add
add
popa
sbb
mov
sub
push
roll
adc
stos
cmp
fcoml
fildl
dec
pop
fists
cmpsb
setno
jns
cmpsb
loopne
mov
pop
pushf
aas
out
inc
mov
xor
lahf
cmovs
push
test
push
dec
lahf
std
lock
or
dec
mov
test
hlt
fcoml
popa
add
nop
inc
push
testb
subl
in
add
lret
dec
adc
cli
mov
xchg
icebp
or
ds
loop
in
inc
sub
inc
repnz
mov
xlat
aas
pop
lods
popa
cmp
mov
cwtl
stc
dec
fcomp
mov
xchg
pop
subb
in
and
int3
pusha
cmp
ja
dec
lea
sub
loopne
mov
push
lret
or
ds
xchg
push
stos
and
xor
jns
cli
cmp
enter
mov
aas
rclb
imul
lret
pop
pop
push
jo
jb
cld
inc
ret
adc
push
add
loopne
shlb
aam
inc
fcomps
daa
scas
pop
or
sub
lahf
mov
scas
shll
daa
nop
mov
arpl
cmp
outsl
lret
jne
leave
inc
xchg
insl
pushl
xchg
dec
inc
sbb
push
cmp
add
loope
sub
enter
ret
popa
mov
adc
jg
adc
mov
insl
jmp
push
sbb
lock
filds
imul
or
imul
sbb
fstl
movb
xor
stc
fcoml
mov
push
dec
test
dec
mov
or
dec
lds
push
mov
sub
jb
jge
popf
push
daa
sbb
out
jnp
inc
arpl
dec
mov
add
outsb
adc
in
in
pop
stos
push
lods
or
jle
sub
jnp
je
and
sbb
dec
pop
bnd
je
loop
push
sbb
gs
ret
mov
pushf
pop
push
loop
dec
int
outsl
sub
jge
repz
daa
in
add
das
cmp
inc
xchg
add
pop
pusha
dec
stc
mov
gs
mov
shll
test
jmp
or
pop
dec
fwait
scas
push
jle
lcall
push
or
inc
push
lds
jbe
xor
inc
out
sub
dec
and
decb
xchg
or
test
rol
lea
mov
push
out
popa
dec
js
in
push
add
std
sti
dec
mov
sub
dec
dec
jecxz
call
pop
lahf
pop
xor
mov
sub
insl
std
enter
mov
xchg
je
pop
mov
int3
fstps
bound
adc
xor
dec
mov
jae
js
test
lods
mov
push
addr16
sar
int
ror
sub
aad
and
fisubl
add
shr
cmpsb
pop
push
jo
add
cwtl
mov
cmpsb
xor
clc
fsubs
cs
pop
push
mov
aas
or
lods
or
aad
fsubr
ljmp
cld
lods
hlt
movsl
sub
adc
outsb
clc
pusha
iret
pop
mov
insl
and
jbe
outsl
lods
jle
mov
gs
push
adc
xchg
or
adc
dec
and
jmp
sub
mov
push
sbb
icebp
add
rolb
sbb
dec
mov
mov
daa
fldcw
andb
sub
imul
jmp
inc
jae
int
leave
jbe
popf
dec
sarl
mov
test
push
mov
cmp
mov
cmc
jp
inc
or
jb
lods
inc
mov
adc
mov
jp
mov
xchg
enter
dec
sbb
xchg
arpl
mov
and
mov
mov
mov
lret
or
decb
and
shrb
stc
rorb
push
jmp
mov
push
push
adc
cmp
lods
sbb
xbegin
pushl
pop
cmp
ret
ss
jns
int3
sub
pop
leave
lret
fnstsw
hlt
inc
push
inc
dec
in
pushf
xchg
imul
jbe
neg
dec
stos
pushf
push
mov
out
dec
sub
das
push
push
or
lret
push
push
cmp
cmp
xchg
inc
mov
nop
mov
fsubl
mov
sub
push
cmpsl
mov
popf
and
scas
mov
add
clc
ljmp
add
jo
mov
ret
ret
or
mov
or
aam
in
gs
or
pop
and
adc
int
xchg
and
aas
cmpsb
or
dec
and
inc
cs
mov
aad
loope
mov
lock
lds
arpl
sbb
mov
or
cmpsl
jmpw
fmull
sahf
fstpl
jns
idivl
movsl
dec
je
bound
out
icebp
pop
fsts
fisttpll
xchg
push
jno
shlb
sub
dec
mov
inc
cwtl
mov
movsl
negb
dec
push
jns
mov
xorb
push
lods
outsb
adc
adc
push
sbb
jle
jns
cli
ds
sub
aaa
rcrl
negl
out
xor
jo
outsl
cmp
fdivl
insl
jae,pt
inc
ret
sarb
jae
repnz
cmpsb
sbbb
fidivs
mov
pop
cmp
insl
jnp
das
fidivs
in
add
jnp
dec
ret
mov
scas
mov
in
xor
jecxz
push
xchg
lret
cmpsb
rcrl
or
pusha
jge,pn
inc
add
cmp
sbb
inc
shrb
bound
sbb
shrl
iret
jmp
and
cmp
sub
xor
mov
mov
repnz
sti
test
int
movsb
add
add
adc
adc
mov
inc
pop
leave
daa
js
mov
mov
pop
add
sbb
out
gs
xchg
mov
fcomps
pop
insl
inc
dec
pop
repz
pop
in
jmp
imul
jmp
imul
out
stos
sub
mov
rcll
inc
je
movl
rcrb
jmp
out
inc
sbb
stos
outsl
clc
arpl
adc
addb
mov
mov
add
popf
shl
fdivr
inc
test
lahf
add
mov
loopne
sub
push
sub
fisubrl
or
ljmp
ljmp
pop
mov
ss
scas
jle
xchg
fwait
lcall
and
in
jnp
mov
xchg
mov
dec
cmp
or
mov
inc
add
pushfw
dec
mov
add
pusha
stos
xor
incb
xor
in
mov
scas
inc
push
das
pop
cld
push
mov
xor
push
xchg
add
mov
neg
add
mov
adc
cmpsb
cltd
push
push
dec
icebp
std
fisttps
lea
std
xchg
aam
lods
rolb
jns
push
out
jge
ljmp
lods
xchg
add
sub
insl
pop
jmp
dec
or
fsubp
rol
out
push
js
xor
or
xchg
out
dec
or
adc
ds
shll
cmpsl
divb
xchg
xorl
clc
mov
or
inc
rcll
inc
mov
lock
push
xor
jae
shl
out
sti
ja
out
les
push
cwtl
stc
je
iret
mov
cld
iret
jp
pushf
and
clc
add
into
dec
pop
and
jns
mov
mov
sbb
lea
xor
dec
mov
push
mov
push
loop
and
sar
mov
data16
mov
ja
jle
aam
cmp
or
adc
test
adc
inc
add
fldenv
fdivrs
mov
mov
push
notb
shl
stc
jg
test
push
test
push
comiss
lds
sahf
pop
into
xor
and
xlat
outsb
inc
mov
add
in
inc
scas
push
push
in
mov
aam
jbe
cmpsl
insb
leave
iret
cltd
mov
dec
int3
xchg
pop
in
xor
mov
cli
jge
and
dec
push
idivb
aas
push
repz
xchg
push
es
xor
mov
insl
loop
stos
pop
addr16
addl
or
inc
xchg
jnp
or
fucom
or
cmp
jo
jae
add
hlt
mov
mov
xchg
xchg
cmp
or
cli
push
mov
mov
sub
fimuls
sub
icebp
fmuls
mov
xchg
mov
dec
cmovo
pushf
cld
movsb
es
jge
or
in
lret
incl
sbb
inc
mov
cmpsb
sub
push
pop
push
or
pusha
push
stc
inc
pop
dec
fwait
add
or
pop
aaa
movzwl
stos
pop
in
cmp
inc
mov
or
lret
movsb
or
fildll
shll
lods
cmp
in
adc
pusha
popf
hlt
test
push
dec
mov
mov
push
outsl
std
fdivrs
mov
dec
pop
xchg
lds
jmp
fwait
or
mov
and
or
jbe
pop
jno
movsb
sub
pop
inc
stos
dec
mov
inc
in
mov
pop
leave
inc
dec
cmpb
sub
rcrl
jmp
xchg
jp
sub
sbb
loope
push
scas
push
addr16
arpl
popa
in
pusha
cmp
daa
adc
fwait
outsb
rcll
outsb
jo
pop
stos
pop
imul
out
dec
enter
sub
insl
ret
int
mov
enter
ja
or
mov
aad
add
je
pusha
pop
xchg
cs
rorl
fisubrl
nop
mov
cld
fists
sub
imul
ror
mov
aam
mov
stos
xlat
pop
into
mov
shrl
lods
aad
sbb
sub
sbb
imul
sbbb
sub
ds
sbb
jns
pop
adcl
scas
xor
test
push
notl
cmp
sub
add
shrb
bound
call
mov
and
jbe
xchg
or
inc
adc
cmp
adc
stos
leave
mov
test
cltd
sbb
addr16
adc
popa
xchg
pop
ljmp
and
fldt
jae
ds
adc
push
pop
inc
js
lahf
aaa
stc
or
mov
mov
cwtl
aas
pop
movsb
adc
lret
outsl
mov
int
inc
insl
xor
stc
pop
int
cwtl
cmp
in
je
loopne
mov
lret
pop
lret
push
mov
mov
push
sub
fcoms
loopne
dec
aam
aas
cmp
and
pop
sbb
pop
outsb
mov
fdivl
outsl
nop
das
hlt
xchg
fs
xchg
lea
xorl
iret
inc
mov
jb
jno
fstl
cmp
imulb
pushf
sbb
lea
and
mov
push
negl
sub
into
xchg
mov
jmp
insl
loopne
aaa
lods
xor
xchg
fistps
pushf
and
rcrl
pop
jg
lock
mov
icebp
mov
inc
movsb
insb
stos
cwtl
out
fistpll
or
and
loope
lods
sub
fwait
fwait
mov
push
inc
cmp
in
lea
jp
pop
dec
ja
mov
mov
inc
out
jb
dec
jmp
fsub
sub
mov
bound
cmpsb
push
sbb
adc
xchg
pop
push
nop
filds
sarb
scas
cmp
lea
out
shlb
mov
or
push
mov
xchg
pop
dec
sbb
xchg
in
mov
inc
jl
test
jmp
push
fdivrl
sub
jp
mov
mov
sbb
sub
and
dec
adc
shrl
mov
adc
rolb
fsubrl
aad
or
push
cmc
mov
pop
jb
idiv
rolb
aam
dec
mov
sbb
xchg
test
mov
lret
jecxz
lea
idiv
inc
out
add
loop
push
adc
dec
jge
sbb
cmc
outsl
jns
jg
sbb
mov
cmp
popa
rol
in
pop
cmc
push
xor
ljmp
fstps
jg
fcomps
sbb
adc
xor
push
xor
jge
push
xchg
cmc
mov
jne
mov
stos
bnd
sbb
int3
jno
jl
aad
cli
fildl
movl
add
outsb
into
insl
pop
mov
inc
mov
mov
dec
stc
mov
xchg
dec
hlt
jmp
pusha
popa
scas
gs
sti
movsl
mov
idivb
pop
lea
xchg
loopw
mov
ljmp
dec
inc
xor
rolb
in
movsb
sub
popf
fisubl
pop
mov
adc
push
dec
pop
inc
mov
pop
pop
pop
lds
push
test
dec
lcall
insl
int
jecxz
insb
xchg
in
push
flds
xchg
xchg
add
and
jmp
mov
repnz
xchg
sbb
test
shll
xchg
dec
and
jnp
cmpsb
sub
xor
sbb
jl
or
and
aam
mov
xchg
aaa
mov
and
push
cmp
inc
das
xchg
xor
push
jb
fst
jmp
clc
pop
gs
test
shrl
sbb
push
ljmp
adc
mov
mov
gs
xor
and
adc
and
lods
lea
or
xchg
adc
xlat
mov
pop
lods
cmp
sbb
sbb
adcl
test
mov
ss
and
add
pusha
bound
xchg
xor
adc
xor
bound
jb
movsb
repz
mov
in
add
imul
mov
lds
popf
test
ret
push
cmp
pop
ds
mov
sub
repnz
lahf
sarl
dec
pop
sarl
in
sti
cmp
mov
mov
push
jno
ss
bound
xor
es
fsubl
rcrl
lock
test
mov
insl
adc
inc
adc
fbld
lret
xor
push
mov
int3
lahf
cmp
add
push
mov
icebp
mov
inc
stos
jns
ror
loope
test
xchg
and
dec
lods
add
sub
dec
loop
mov
fisubrl
call
orl
scas
add
int3
push
test
mov
pushf
push
in
jo
das
cltd
push
mov
xor
ret
xchg
popf
imul
js
flds
jnp
or
and
and
pop
adc
xorl
mov
jae
stos
add
cmp
dec
jnp
fsubrs
popa
ret
pop
leave
sub
dec
pop
jle
cmp
sbb
jp
aas
push
sub
in
loop
ret
cwtl
inc
insl
sub
xchg
subl
push
dec
sub
outsl
mov
leave
or
icebp
jmp
fwait
out
cmp
jo
fidivl
pop
inc
repz
or
in
fsub
out
mov
shlb
sub
mov
js
orb
filds
xchg
sahf
ret
mov
test
and
and
pop
fcmovu
and
pop
xor
xor
xor
push
jbe
sbbl
jbe
push
hlt
sub
loope
cmc
inc
in
sbb
aad
cltd
fstl
daa
adc
xor
cmpb
mov
jbe
push
loopne
inc
mov
sub
mov
sbb
ljmp
data16
jo
xor
fidivl
ficoml
sarb
ljmp
xchg
mov
dec
stos
push
jmp
xor
mov
xchg
push
das
in
pop
clc
sahf
xlat
lea
cmpsb
xor
das
xor
adc
arpl
jge
cmp
mov
sbb
xchg
xchg
jle
push
or
xchg
into
xchg
jns
shlb
add
stos
mov
cld
fcompl
loope
mov
push
addr16
ja
rorb
pop
cmp
ret
out
mov
mov
ret
mov
in
push
outsl
std
in
call
mov
sub
cmp
loop
mov
jae
xchg
mov
pushl
add
loop
mov
jno
pop
frstor
adc
cmp
pop
popa
and
aad
js
popa
in
cmp
rolb
push
aam
jno
xor
scas
and
hlt
imul
out
insl
jns
cmp
push
int3
fisubrs
lea
stos
movsb
fisttpl
push
aad
mov
and
in
repz
xchg
add
sbb
push
daa
imul
insl
xor
shrb
std
cmp
lret
pop
push
inc
ljmp
mov
pushf
mov
sub
sbb
mov
pop
push
mov
fwait
push
push
test
aaa
loope
test
adc
add
jecxz
movsb
dec
pop
loopne
filds
jg
addr16
mov
cs
jmp
mov
shrb
cmp
pop
adc
int3
push
dec
mov
and
dec
aam
pop
int3
lock
pusha
mov
pushf
sub
in
or
fbstp
repnz
push
sti
stos
fs
xchg
mov
pop
lret
add
insl
jae
adc
jecxz
xor
or
pop
sub
aad
jns
mov
pop
inc
jg
xor
jecxz
mov
fstl
sub
sbb
push
sbb
sbb
cmp
sahf
push
lahf
cmc
hlt
stc
add
adc
iret
sbb
testl
je
xchg
jne
xchg
or
dec
jne
cli
shll
imul
push
push
inc
xlat
outsl
ljmp
cli
dec
jnp
add
fwait
lret
loopne
negl
scas
mov
insl
divl
fnsave
movsl
mov
mov
jo
std
and
jne
insl
jo
inc
or
inc
pop
aas
and
adc
sub
xchg
or
sbb
adc
cld
adc
pop
push
mov
jno
cmp
sbbb
hlt
subb
mov
ljmp
mov
fsubrs
cmpsl
mov
cltd
mov
sbb
adc
adc
test
aaa
loopne
outsb
pop
xor
pop
push
mov
icebp
sbb
xor
rclb
sahf
mov
iret
lret
dec
cli
xchg
sub
xchg
cmpsl
add
push
mov
adc
addl
or
call
mov
movsl
add
lds
mov
cmp
aaa
je
xchg
rcl
in
dec
into
rclb
std
jo
lret
xchg
inc
loopne
adc
movsb
int
lret
xchg
into
add
inc
inc
fsub
push
pop
mov
push
enter
fdivl
mov
sbb
and
mov
rcrl
add
cmp
xchg
and
mov
mov
stc
rorb
shrb
loopne
test
xchg
push
add
es
or
outsl
lret
jnp
into
mov
pop
iret
fists
adc
xorl
mov
std
lret
test
add
je
adc
mov
sub
int
out
mov
out
jg
pop
xor
lds
cmc
jge
out
or
shr
mov
daa
movsl
in
enter
mov
into
xchg
stc
dec
fimuls
mov
inc
push
mov
rcll
jae
jbe
or
idivb
inc
sbb
sbb
cli
dec
loope
aad
leave
or
jne
push
pop
pop
lea
test
add
stos
cmc
std
xor
test
push
addr16
call
leave
movsl
push
fistl
iret
mov
xchg
add
cld
mov
pop
jnp
add
test
adc
pushf
arpl
in
stos
js
lea
mov
push
in
sub
and
inc
or
pop
iret
test
inc
sbb
repz
in
sub
and
mov
les
outsb
mov
and
xchg
xchg
out
out
dec
and
xor
stc
adc
jbe
lcall
mov
dec
lods
mov
fisttpll
sub
inc
jg
iret
ficoml
mov
mov
lock
jp
inc
push
das
sbbb
cmp
sti
mov
push
imul
dec
int3
xor
xor
xchg
out
pushw
and
cmp
popa
cmp
fsub
xor
imul
cmpsb
xor
xor
push
mov
cmp
inc
rorb
push
pushl
sub
movsl
out
outsl
sbb
repnz
ljmp
ffree
fistpl
loope
insl
push
out
popl
sti
or
ret
fstps
lret
sub
out
mov
lds
mov
push
js
pop
push
bound
cli
jno
stos
sub
vmlaunch
sbb
aam
out
pop
xor
enter
clc
jge
add
mov
jns
fadds
or
push
cli
fldcw
hlt
mov
stc
nop
lea
or
or
inc
leave
hlt
nop
mov
dec
scas
and
mov
repz
mov
lret
dec
popa
fstpl
or
sbb
repnz
lock
out
ja
pop
pushf
sub
fs
mov
push
rol
fisttpl
sub
gs
sub
mov
pop
xchg
sbb
adc
sbb
in
fucom
aas
cmpsb
lea
cmp
push
jo
lea
inc
cmp
outsl
adc
rcrl
pushf
xor
dec
xchg
ljmp
es
jbe
dec
add
jne
or
mov
fdivl
adc
popa
ds
push
cmp
push
xor
pop
mov
dec
inc
xor
aaa
or
inc
mov
dec
daa
fdivrs
lret
icebp
lods
xchg
stc
fadd
pop
xchg
dec
add
in
aas
test
and
add
gs
xlat
clc
pop
dec
cltd
insl
adc
push
xchg
dec
fcmovne
mov
in
cs
es
mov
dec
cs
inc
xchg
popf
je
leave
sbb
cmc
sahf
aas
mov
or
loope
cmp
mov
test
push
add
mov
mov
jl
andb
push
fimull
add
mov
scas
and
pusha
leave
cmc
or
loop
jnp
in
sbb
push
arpl
sub
sti
pushf
jle
test
mov
loopne
setbe
mov
lods
sub
inc
fnstcw
out
sbb
inc
add
ss
cmp
dec
mov
addb
ss
push
les
jmp
popf
imull
adc
std
stc
test
clc
inc
aad
jne
sub
sub
push
std
loopne
mov
sbb
sahf
in
push
inc
jmp
mov
push
cld
decb
pop
adc
repz
cmp
sbb
dec
cwtl
imul
xor
pop
je
push
and
cmp
fdivrs
insl
pusha
test
sbb
jg
fs
mov
sbb
fimuls
sbb
and
jb
daa
mov
scas
mov
jmp
xor
subb
mov
mov
xor
rclb
sbb
pushf
bound
inc
hlt
sbb
std
lock
dec
fucom
jno
js
popa
mov
lret
sbb
leave
nop
lea
adc
fisttpl
addr16
scas
sub
in
jns
jne
insl
mov
rorl
adc
iret
popa
jle
cmp
insb
ficoms
jmp
fstpl
jl
sarb
push
inc
scas
pop
and
mov
loope
ds
push
movsb
xlat
adc
out
xor
push
mov
addr16
bound
bound
xchg
je
mov
ret
leave
pop
cmpsb
aam
xchg
sub
or
movsb
pop
xchg
mov
xor
add
pop
pushf
fmull
mov
ss
xchg
xchg
movsb
aaa
or
in
cs
ror
fsubl
mov
mov
dec
jae
mov
pop
mov
addb
sbb
dec
mov
jmp
loope
xchg
add
out
push
push
into
in
arpl
push
jae
lret
jb
jecxz
lds
adc
pop
mov
es
sbb
stc
insb
cmp
aad
ss
fmuls
add
add
cmpsb
iret
sub
dec
ja
pop
sub
dec
orl
mov
pop
mov
decb
fsub
and
and
mov
shll
inc
mov
sti
jb
cmpsb
data16
sbb
vmovshdup
adcl
scas
cmc
adc
leave
outsl
pop
mov
jbe
dec
xor
inc
xchg
or
cs
inc
adc
std
adc
and
pop
mov
lods
inc
aaa
cli
stos
int
pop
lods
sbb
jg
leave
cmpsb
push
dec
scas
and
enter
cmp
xchg
adc
cmp
aam
movsl
ja
bound
sub
lahf
pop
fstl
lock
fsts
pop
int3
insb
fdivl
push
jo
aas
push
adc
pop
lret
mov
shlb
push
cmp
jg
xchg
cmpsl
vpaddsw
leave
paddw
xchg
lds
imul
rcll
call
adc
out
xchg
fisubrs
pop
add
es
jae
mov
cmpsb
fadds
cld
in
dec
add
push
imul
jae
rolb
pusha
out
xchg
das
fcmovbe
into
mov
xchg
jne
xchg
cwtl
xor
xchg
pushf
inc
popf
cltd
aam
cltd
aas
je
or
les
fildl
cmp
jl
jo
enter
or
sbb
pop
mov
hlt
subb
cltd
mov
push
fstps
repnz
ficoms
jno
ret
jae
push
mov
fs
xorl
sti
jecxz
push
lock
sbb
fwait
sbb
sbb
inc
or
mov
les
xor
loop
into
std
add
outsl
mov
insb
dec
and
sub
push
inc
jg
int3
adc
aam
add
pop
sbb
pop
dec
js
ja
mov
dec
nop
out
into
icebp
or
cmp
xor
lods
jb
push
sub
shlb
dec
push
stos
mov
and
jle
and
cmp
mov
rcll
cmp
inc
add
outsb
pop
cmp
fisubrl
xor
inc
ja
mov
cli
xchg
push
ds
jae
out
pop
add
andb
or
mov
inc
dec
inc
pop
cltd
push
int
clc
stos
inc
mov
aam
mov
cmp
pop
inc
pop
cltd
xor
stos
mov
inc
mov
push
dec
outsb
cmp
stos
icebp
push
mov
mov
shl
mov
sub
test
sarb
aas
je
mov
pop
inc
mov
lcall
jmp
xor
sahf
cmpl
pop
es
lret
pop
pop
mov
mov
or
out
shl
xor
dec
pop
sbb
jge
popa
add
test
jl
cmc
daa
pop
int
mov
movsl
outsb
xchg
push
gs
jbe
ret
push
repz
sahf
and
add
inc
in
jecxz
pop
lret
outsb
pop
out
mov
sub
cwtl
clc
jne
xorl
ss
jecxz
cld
es
jle
jmp
inc
out
adc
sbb
addr16
mov
sub
int
push
jmp
popf
shll
std
jg
pop
and
shlb
add
mov
push
adc
add
push
jno
mov
lret
push
adc
dec
pop
fucompp
mov
add
pushf
scas
jne
inc
out
sti
test
inc
ja
fs
test
push
shlb
ja
fnsave
out
mov
mov
es
xlat
mov
adc
xchg
inc
into
cmp
inc
enter
mov
cmc
jge
cli
mov
ret
dec
cmpsb
push
rol
pop
call
push
sti
cmpsb
inc
push
leave
xchg
xchg
sub
xchg
or
dec
mov
pop
sub
leave
sbb
pop
lods
lea
enter
je
pushf
cmc
rcr
inc
cmpsl
lret
xchg
cmp
test
aaa
dec
test
inc
clc
ds
stos
addr16
lds
enter
rcll
mov
push
cmc
int
xchg
dec
arpl
inc
imul
push
push
movsl
rcl
or
jnp
imul
xor
adc
push
sbb
rcrb
cmpl
addr16
add
mov
test
addr16
jg
std
push
pop
out
sub
dec
cmpsl
push
xchg
std
xor
and
shlb
les
das
mov
addr16
push
xlat
cmc
scas
pop
inc
loopne
inc
notb
mov
pop
dec
test
scas
pushl
mov
push
je
sbb
push
adc
pop
jbe
add
hlt
dec
cmp
arpl
lahf
mov
add
aam
mov
out
or
cwtl
jne
mov
and
stos
dec
stc
int
sub
rcrb
push
cmp
mov
or
adc
std
cmp
repz
cmpsb
ss
cmpsb
shrl
pop
jnp
pop
inc
decb
in
adc
mov
shrb
sahf
lods
jbe
sahf
mov
lock
scas
sbb
mov
hlt
add
pop
cli
out
std
mov
jns
cmpsl
cmpb
icebp
imul
mov
loope
cmpsl
in
roll
fs
xchg
cli
mov
inc
call
movsl
push
stos
push
mov
les
mov
dec
push
or
add
lcall
sub
xchg
rorb
lods
sub
orb
bound
jne
inc
inc
sahf
or
dec
jg
and
cmp
jmp
xchg
arpl
xor
mov
pop
divb
xchg
lods
aaa
gs
dec
rcl
pop
dec
es
roll
rcr
lcall
inc
or
xlat
mov
inc
pop
and
mov
rclb
bound
or
ffree
mov
xchg
cmpsb
lahf
sbb
idivb
loopne
push
movsl
mov
sbb
push
in
aas
pop
movl
or
ja
hlt
push
loopne
icebp
mov
and
nop
loopne
lods
jecxz
jb
push
sub
ret
or
or
aas
sub
in
adc
aad
mul
int
scas
sub
dec
sbb
inc
arpl
sub
xchg
push
push
lcall
xchg
add
jb
or
add
pop
xchg
rorl
cld
int
sbb
push
pop
cmp
jns
adc
mov
mov
push
inc
pop
push
cmpsb
jae
das
out
lea
fcoml
xabort
cmp
add
dec
dec
nop
pmuludq
dec
addl
push
out
loope
es
pop
mov
scas
lods
mov
popf
fmuls
aam
cmp
dec
and
imul
jne
rcll
sbb
out
repnz
sarb
and
je
push
lock
xor
out
dec
adc
push
out
or
ret
test
mov
mov
mov
test
cmp
or
insl
jo
mov
stos
inc
xchg
leave
dec
loopne
cmp
adc
insb
repnz
sbb
inc
sbb
inc
cld
push
or
pushf
scas
jno
outsb
jo
sbb
sbb
xor
pop
fwait
arpl
ljmp
xchg
adc
jge
arpl
adc
mov
mov
mov
test
adc
xchg
cmp
fcmovnbe
lahf
aaa
in
mov
popf
jge
jp
cmp
push
xor
pop
dec
jl
test
sbbb
or
mov
or
jb
cld
outsb
dec
jnp
loop
fildll
cmp
mov
hlt
xor
adc
frstor
std
rclb
leave
out
sahf
ret
mov
jmp
movsb
sti
test
adc
adc
pop
into
xchg
add
mov
cli
cmp
rorl
adc
adc
add
dec
inc
mov
fistps
test
xchg
dec
or
loope
fxch
mov
jno
push
mov
int3
inc
mov
int3
std
jecxz
mov
arpl
fstpl
adc
xor
movsb
in
js
and
fistps
fs
sub
sub
mov
or
clc
xlat
pusha
movsl
sbb
aaa
sbb
or
lock
ss
and
xchg
orl
adc
sbb
push
gs
mov
mov
das
inc
and
inc
icebp
inc
cmp
fildll
pop
pusha
push
pushf
push
enter
adc
vmovapd
rcrl
inc
jle
lcall
pop
sahf
or
lret
and
inc
testl
mov
pop
add
imul
test
in
jmp
movsb
ja
xchg
mov
mov
ljmp
jns
subb
jmp
mov
jmp
imul
mov
cmp
adc
fdivrs
mov
mov
dec
cmpsl
mov
cmpsb
inc
setb
sti
imul
xor
icebp
xor
ret
imul
jl
mov
dec
testb
xor
inc
loopne
loopne
dec
inc
add
cmpsl
inc
dec
cmpsl
sub
lds
lods
push
mov
popf
xor
xchg
mov
xchg
lret
cmp
pusha
ds
xchg
xor
xlat
jbe
dec
fisubrl
cmp
push
xchg
cmpsb
loopne
test
inc
ret
jl
popf
push
decl
inc
or
push
push
mov
and
pop
push
js
ds
repz
fucom
sub
push
daa
or
add
stc
sub
test
pushf
mov
adcb
mov
testl
dec
xlat
rclb
jns
ffreep
sub
cmc
xorb
adc
xor
jo
leave
sbb
cmp
push
push
fstl
jmp
pop
ficoms
fs
lret
out
cs
scas
imul
std
mov
add
cmp
leave
enter
stos
les
imul
push
cs
sub
sub
sahf
and
adc
orb
adc
icebp
jns
mov
das
fst
add
jae
xchg
les
insb
sbb
inc
push
jbe
mov
mov
popf
mov
dec
adc
push
in
lcall
lock
cmpsl
cmp
xor
push
inc
sub
lahf
xchg
mulb
mov
lret
int3
movsb
push
or
xorl
out
ja
or
pop
cwtl
fisubs
sub
outsl
adc
test
cwtl
dec
add
push
pushf
mov
das
xchg
xlat
outsb
scas
dec
sub
stos
or
lret
lds
inc
mov
jge
sub
repnz
push
sbb
cltd
mov
imul
mov
lret
xor
scas
jmp
pop
pusha
sub
xchg
movsl
and
and
push
or
out
mov
mov
mov
add
push
es
xchg
xor
mov
cmp
daa
push
mov
cmp
adc
cmp
add
mov
and
or
push
ret
loop
sbb
sbb
mov
sub
dec
push
clc
adc
insl
enter
sub
cmp
mov
js
imul
xor
clc
jp
or
sbb
jbe
jp
gs
push
pop
fmuls
ret
cmpsb
out
js
sti
sub
mov
cld
sbb
push
or
aad
xor
icebp
adc
inc
adc
mov
xor
pop
adc
inc
and
sbb
arpl
out
loopne
insb
lods
xlat
rcrl
scas
pushf
test
push
and
fsub
xor
jmp
fsubr
shlb
add
inc
loopne
or
pop
jg
jbe
mov
pop
mov
and
mov
push
rcll
mov
pop
pop
call
outsb
imul
ret
jl
test
mov
mov
push
imul
xor
inc
ljmp
add
es
test
push
lahf
iret
jne
xor
sbb
jmp
fstp
hlt
jno
mov
sbb
xchg
or
orl
mov
xchg
mov
sbb
fists
stos
lret
pushf
shrl
incb
rcr
sbb
mov
dec
cli
xchg
fisttpl
push
xorb
push
push
mov
adc
shlb
pop
dec
jbe
and
xchg
jns
jb
test
cmp
add
sbb
jecxz
adc
mov
mov
outsl
inc
pop
push
push
push
mov
sahf
mov
dec
lods
into
nop
mov
jle
jb
call
sub
adc
rcrl
popa
scas
out
movsb
loopne
mov
pop
sarl
cs
fs
in
cld
data16
test
and
aad
lcall
fsubs
cmp
negb
add
dec
inc
cmpsb
or
std
insb
outsb
icebp
sahf
inc
aas
rcrl
arpl
mov
xchg
cmp
add
clc
or
lods
push
ja
pop
dec
mov
mov
je
push
inc
inc
in
pop
ds
cmpsl
or
shrl
mov
scas
subl
jp
in
orl
outsb
jb
enter
scas
or
pop
aaa
xor
mov
fldt
popa
dec
xchg
in
adc
mov
or
mov
lcall
mov
fisubrs
sub
adc
mov
xchg
incb
sbb
lods
adc
mov
mov
cmpl
pop
dec
sub
cwtl
stos
mov
aad
call
out
and
pop
adc
leave
mov
mov
loopne
xchg
push
cmp
xrelease
inc
sbb
mov
cmpsb
fldcw
in
and
dec
pop
dec
push
nop
es
bswap
jmp
xor
je
xor
insl
fmuls
jmp
cmp
ret
xor
mov
or
addl
push
andb
push
call
repnz
jge
sub
dec
mov
or
pop
inc
mov
and
fisttpll
imul
inc
movsl
push
test
or
sbbl
xor
adc
jbe
and
pop
sahf
fwait
das
xlat
mov
sbb
cs
mov
movsl
mov
repnz
xorl
mov
call
xchg
add
xchg
pushf
xchg
cltd
loop
dec
mov
loope
nop
test
jecxz
scas
sub
pusha
popf
sahf
xchg
xchg
cmc
pop
lea
jp
in
or
in
int
xchg
xor
ds
pop
cmp
loopne
shrb
xchg
mov
std
mov
sbb
cmpsb
in
sbb
or
dec
fs
ja
mov
inc
and
cmpsl
add
add
and
loopne
scas
jno
add
test
ret
pushf
cmp
lods
mov
ret
push
test
pop
dec
adc
lret
aad
sbb
ljmp
jmp
adc
mov
js
xchg
rep
add
mov
rclb
in
or
fxch
jno
and
sub
pop
enter
clc
jae
je
pop
int3
mov
pop
sbb
mov
push
mov
das
aad
or
dec
orl
stos
jl
imull
in
adc
mov
mov
lret
mov
push
aam
test
pop
dec
test
addr16
ret
push
fdivrs
iret
in
int3
adc
dec
inc
sti
add
sub
xor
mov
fsubl
jl
mov
daa
add
insl
test
test
and
jg
pop
test
cmp
sbb
or
lds
pop
lock
insb
aad
dec
dec
pop
cmp
repnz
add
mov
xor
clc
inc
fwait
pop
sub
out
notb
aaa
icebp
sbb
jp
xchg
xchg
add
push
push
jmp
movd
mov
stos
or
jge
sub
sub
imul
lds
mov
xchg
sbb
or
mov
cmp
mov
xor
jno
xor
sbb
movsl
mov
loopne
cmpsl
cmpsl
fmul
les
add
shlb
pop
push
jmp
sbb
out
and
dec
cld
xor
add
push
mov
in
lss
adcb
into
inc
test
pop
out
insl
pop
mov
mov
dec
int3
into
pop
xor
mov
mov
ljmp
jp
mov
push
fisubrs
xlat
stos
jb
pop
rcrl
es
lcall
stc
jae
mov
xor
push
sti
jecxz
lods
push
or
sub
pop
insb
rolb
clc
dec
xor
dec
mov
ja
xor
jmp
aam
jl
iret
cmp
into
lds
xchg
inc
call
popa
ljmp
xor
testb
push
push
mov
fcmovnu
inc
xor
sbb
jae
xchg
lret
in
pop
adc
sbb
dec
dec
roll
adc
xor
mov
mov
test
xor
jns
rolb
sbb
cmp
test
jge
mov
xor
or
xchg
dec
push
lret
test
loopne
xchg
mov
outsb
jbe
jmp
and
sub
unpckhps
outsl
sub
dec
dec
or
jmp
cld
ja
enter
inc
jle
in
jmp
scas
gs
repnz
lcall
pop
and
or
sub
imul
rcr
pop
lcall
lret
pop
dec
dec
fbstp
mov
xor
jge
cmp
inc
addl
sbb
scas
mov
repz
push
jge
arpl
cs
or
stos
sarb
xchg
add
mov
jns
mov
leave
push
inc
push
xorl
inc
je
sub
test
ss
scas
push
jno
pop
mov
lds
cmp
xlat
cmp
dec
mov
insb
dec
xor
lea
xchg
cli
cmp
adc
xchg
call
les
pop
in
jecxz
add
bound
or
adc
loope
rcrb
lods
aam
xor
dec
pusha
pop
mov
loopne
call
xor
scas
loope
ljmp
or
dec
adc
or
inc
sbb
mov
outsl
cmc
mov
jae
repz
in
xchg
xor
stos
out
mov
mov
mov
mov
out
xor
inc
pop
mov
into
scas
icebp
scas
sahf
ret
js
ja,pt
arpl
sub
or
out
cmpl
push
mov
inc
adc
cld
cmp
push
clc
xchg
xor
mov
inc
push
test
or
out
repnz
out
lods
test
jae
ficompl
scas
xchg
cmp
mov
and
sub
icebp
ljmp
xchg
or
xchg
dec
mov
mov
inc
outsl
inc
insl
rcll
mov
cli
mov
add
lahf
xchg
popf
sub
sub
cld
sbb
inc
jae
sbb
push
jbe
fdiv
stos
mov
das
lret
sub
cmp
xor
scas
bound
addr16
cmpsb
push
loopne
mov
sbb
xor
mov
mov
es
notl
leave
cltd
das
fadds
cmp
shrb
leave
sahf
pushl
lret
sbbb
push
pop
insb
mov
adc
add
imul
and
lods
aam
xchg
xchg
into
push
enterw
mov
cmp
cmp
mov
std
popf
ret
hlt
mov
sub
mov
jg
loop
js
frstpm(287
incl
ffree
adcb
dec
push
push
aaa
adc
xor
lret
xor
push
and
cmc
loop
lods
ljmp
or
and
subl
dec
in
cmp
fidivrl
std
mov
int
or
scas
loope
movsb
push
or
mov
mov
fsubl
fbstp
sbb
push
mov
xchg
xchg
mov
cld
jns
lock
jns
jp
lea
inc
gs
lds
xor
add
sbb
xchg
aam
aas
mov
cmp
or
movsl
pop
leave
imul
mov
xchg
lock
mov
sarb
inc
movsb
adc
push
mov
das
mov
mov
fcoms
shll
xchg
mov
out
and
mov
test
ret
pop
or
fisttpll
sahf
lea
jnp,pn
shr
cmp
fsubrp
jbe
data16
sti
xchg
adc
call
dec
mov
scas
sub
ljmp
xchg
movsl
mov
out
movsl
adc
data16
enter
cmp
fcmovu
add
js
cmpl
xchg
cld
out
ret
cmp
sbb
jnp
imul
or
and
cltd
decl
fsubs
push
mov
mov
mov
cmp
and
subl
js
scas
ja
stos
pop
inc
lret
sbb
cmp
pop
sub
jmp
cmp
xchg
mov
fnstsw
cwtl
xchg
insl
pop
shrl
scas
lret
dec
adc
mov
cld
sti
cmp
das
mov
in
and
sub
leave
fistl
mov
shlb
sbb
xchg
inc
loop
pop
push
fwait
jge
scas
pushf
repz
add
adc
dec
xchg
scas
push
mov
adc
dec
in
adc
lret
jmp
or
and
sub
jo
test
xchg
mov
cld
adc
stos
jge
xchg
in
sar
lret
lods
mov
inc
fwait
mov
cmp
hlt
ret
stos
or
int3
xor
push
mov
add
cli
add
movsl
pop
jmp
lods
lret
mov
xorl
fimuls
mov
js
xor
or
repnz
in
push
cmpsl
sub
jb
fdivl
xchg
push
mov
test
int
rolb
xchg
lods
cmpsb
ret
inc
adc
fbstp
icebp
pop
in
add
outsl
out
pop
cltd
divb
cltd
mov
mov
jne
aas
outsl
in
repnz
dec
outsl
xor
mov
mov
and
cmpsb
xlat
pusha
dec
and
addl
dec
outsb
arpl
out
addr16
or
lods
push
pop
jno
jecxz
dec
sub
pop
mov
out
sub
add
out
lods
aad
das
shlb
fldcw
xor
mov
popf
jmp
repnz
fiadds
sbb
jmp
stos
imul
insl
seto
in
and
and
popa
divl
dec
imul
mov
pop
xor
mov
sbb
xchg
inc
pop
insl
and
outsb
sub
and
dec
add
sbb
or
orl
sahf
pop
push
pushf
mov
push
ror
and
movsb
ret
cmp
mov
adc
les
fistpll
aaa
push
adc
lret
sbb
clc
into
cmpsl
or
lds
notb
pop
inc
cmp
inc
stc
aaa
inc
setno
std
adc
loope
mov
aaa
in
mov
sub
fidivrs
leave
or
sub
idivb
cmp
std
pop
jg
aaa
or
sbb
mov
inc
or
stos
xor
xchg
add
cwtl
jae
sbb
or
out
xchg
sub
cld
inc
xchg
fistps
fwait
add
mov
in
imul
call
cmp
ja
shlb
jmp
std
and
fcompl
sahf
sub
inc
stos
push
ret
pop
imul
into
mov
in
jo
lods
adc
repz
gs
sbb
mov
adcl
je
into
inc
aas
add
fmuls
in
or
outsb
sub
jle
outsl
stos
pusha
cwtl
pop
push
mov
jno
ds
inc
push
jbe
addr16
push
sbb
inc
jo
lea
mov
lea
jbe
sbb
add
cs
decb
mov
imul
jle
add
add
pop
cli
pusha
fsts
lahf
xorl
mov
loope
mov
test
mov
lds
nop
cmpsb
xchg
and
jns
or
lret
mov
push
lret
inc
ljmp
sub
pop
jge
pop
nopl
pop
xor
inc
movsl
imul
int
mov
lds
ljmp
js
pop
repz
and
lds
dec
inc
mov
fwait
mov
lahf
add
scas
jge
shrb
jge
nop
jge
adc
push
int
push
cmpl
sbb
adc
jle
push
es
gs
jbe
shrl
add
add
test
insl
pop
lret
xchg
adc
mov
jns
enter
mov
push
xor
mov
and
push
paddb
lods
jb
and
inc
push
dec
movsl
addl
lods
nop
xor
rol
sub
mov
enter
dec
aam
push
push
adc
pop
aam
pop
xchg
in
lea
imul
inc
jbe
push
xchg
inc
test
jle
lret
add
sbb
popf
fwait
dec
stos
xlat
pop
or
cmpb
lahf
cld
push
mov
ret
adc
fwait
push
sbb
adc
aad
lods
push
cli
or
mov
outsb
inc
jnp
pop
arpl
jl
pop
shll
add
aas
xor
orl
jmp
pop
enter
mov
push
pusha
es
sbb
outsl
mov
dec
fwait
icebp
fwait
xchg
mov
xor
pushf
data16
cmp
ljmp
enter
add
jmp
xor
cmp
jl
ljmp
jl
daa
fstps
mov
inc
pop
mov
and
or
ljmp
fstcw
lods
pop
sbb
fs
pop
imul
adc
or
sti
or
adc
fnstenv
or
cmp
pop
jg,pt
jge
pop
fs
jb
push
jmp
cld
test
xchg
and
jns
popa
test
push
cltd
inc
mov
sbb
iret
jle
adc
sbb
test
inc
aas
adc
pop
lcall
inc
pop
arpl
das
dec
ret
out
cmpsb
jmp
std
add
cli
aam
ja
cwtl
data16
leave
pop
shrb
mov
dec
or
pop
int
hlt
movsb
addr16
mov
lock
out
cmpsl
out
sub
push
aam
test
repnz
or
andl
xchg
negl
dec
shlb
ljmp
mov
push
mov
xchg
cs
mov
push
mov
fstpl
movsb
xchg
xchg
pop
int
in
xor
lea
inc
sahf
xchg
pop
and
mov
pop
in
adc
pushl
dec
outsb
inc
stc
arpl
out
cmpsb
pop
inc
and
inc
mov
call
sti
clc
fdivrs
repz
call
movsb
sbb
sub
inc
push
outsb
or
loope
outsl
cltd
cmc
jnp
shlb
and
fs
sbb
sbb
jne
sbb
sbb
xchg
pushf
out
cmp
jne
test
mov
jge
lret
sbb
push
jg
push
mov
xor
repz
adc
sub
scas
mov
pop
adc
movsb
mov
mov
cmp
xor
rcll
sub
sub
data16
jge
test
xchg
pop
sub
data16
jl
mov
inc
jg
inc
popa
push
out
stos
popa
xor
mov
or
lcall
dec
dec
fmull
xchg
sti
movsb
adc
jmp
adc
sahf
jnp
test
enter
nop
pushf
fwait
jne
insb
mov
pop
sbb
or
lods
pushf
jge
fs
aaa
cmpb
mov
incl
jl
mov
mov
mov
cmp
stos
fisttpl
dec
push
pop
mov
sub
icebp
add
imul
cmpsl
mov
pop
push
aam
incl
in
jmp
inc
fs
shr
push
add
sbb
js
adc
push
cmpb
or
add
negb
out
inc
and
xchg
mov
sbb
ljmp
scas
cmc
jne
mov
adc
cmc
fsub
icebp
sub
aas
repz
mov
mov
stos
outsl
fadds
mov
insl
lcall
adc
test
lods
loope
out
fcomps
cmpsb
cld
sub
cmp
jecxz
cmp
xor
inc
push
lds
aas
jmp
mov
in
xchg
aas
ret
jne
xor
mov
test
push
cld
push
pop
sub
pop
jmp
int
xchg
add
push
sub
mov
fs
push
sub
jno
shll
jmp
addr16
or
rcll
xchg
push
adc
push
push
adc
inc
mov
lods
mov
sub
xchg
pop
xchg
dec
stos
cmpsb
xchg
mov
cwtl
loop
xchg
inc
mov
mov
and
dec
jno
xor
jecxz
jmp
test
sahf
and
imul
cmpsl
add
mov
aam
jg
test
jl
pop
lahf
pop
xchg
sbb
scas
jo
fs
lds
out
shll
add
cs
xchg
mov
mov
xor
shll
push
cmp
shrl
and
or
inc
and
jp
xchg
insl
jg
outsb
push
lret
adc
es
aam
mov
mov
push
std
inc
xlat
jo
fidivrl
push
mov
mov
lret
push
or
sub
ds
xchg
inc
pop
sub
push
cmp
aam
push
pop
or
scas
lods
mov
jge
jbe
xor
mov
fimuls
fwait
mov
outsl
jo
mov
xor
je
mov
mov
mov
jmp
fmul
add
hlt
jnp
jl
push
pusha
bound
jns
push
pop
xchg
pop
dec
cmp
stos
imul
into
fs
jb
adc
arpl
loopne
mov
sti
mov
and
aad
mov
shll
inc
xacquire
mov
push
outsl
imul
mov
push
outsb
rorb
mov
push
cmpsb
jns
mov
lea
push
add
iret
gs
pop
jmp
mov
add
mov
ja
xor
imul
sbb
mov
ss
mov
adc
jno
imul
sub
adc
pop
scas
sub
mov
aad
push
jecxz
out
mov
xchg
in
andb
cmp
jnp
cwtl
test
lret
xchg
insl
sub
imul
add
fimuls
out
lcall
fucom
push
popf
sbb
cmpb
movsb
mov
sbb
dec
mov
lods
out
popf
sbb
pushf
push
sub
flds
mov
enter
rclb
and
lcall
jbe
adcl
insb
scas
cmp
push
xlat
sbb
pop
sub
pop
in
fwait
pop
push
out
std
sbb
lahf
sub
xorl
inc
aad
pop
and
pop
pop
dec
and
cltd
repnz
divl
add
mov
or
lods
sub
bound
mov
mov
cld
add
jb
sub
sar
or
adc
or
xor
fsts
lods
mov
and
aaa
jp
loop
rorl
dec
into
repz
mov
mov
sahf
loop
pop
rol
push
pop
pop
stc
inc
mov
mov
jno
cli
fs
jecxz
push
jmp
push
lods
mov
dec
inc
push
insl
js
adc
out
es
dec
andb
scas
sbb
and
movsl
xchg
lods
fistl
jl
mov
repnz
xlat
mov
test
jne
int3
xchg
xor
aad
jp
je
or
repnz
outsb
inc
xchg
pop
outsb
adc
pop
jl
sti
fwait
sbb
mov
ret
mov
jl
dec
movsl
lea
adc
je
es
shrl
hlt
ljmp
pushf
jo
std
scas
xlat
xchg
push
fdivrl
adc
pop
insb
bound
imull
push
out
xchg
icebp
mulb
mov
sub
jl
sbb
fmulp
movsb
sub
inc
jmp
gs
fisubs
xchg
add
cs
and
ss
inc
mov
shll
icebp
mov
lods
fisttpl
inc
xor
add
call
lds
adc
push
mov
push
mov
roll
cmc
fldcw
mov
mov
xor
sub
jecxz
cmp
jb
dec
aad
mov
cmpsl
popf
and
je
sub
bndldx
inc
arpl
inc
xor
fsubrs
jnp
jl
and
cwtl
hlt
shll
inc
popf
mov
pusha
test
aas
test
pop
loope
inc
aaa
xorb
rcl
add
shlb
cltd
nop
xchg
loope
jb
ja
xor
lods
jle
les
xor
cmp
fsqrt
xchg
xor
js
adc
mov
mov
jge
sub
ja
xor
lock
inc
mov
jecxz
add
jp
mov
pop
pop
dec
xchg
adc
jae
imul
xchg
mov
fsts
scas
es
and
jecxz
into
je
mov
cli
mov
xchg
xchg
jne
or
mov
jge
pop
mov
add
imul
lea
push
xor
push
xor
dec
dec
stc
cli
je
add
cmp
mov
and
mov
dec
loopne
xor
dec
mov
repnz
arpl
mov
mov
fmuls
je
stos
xor
lahf
stos
mov
mov
inc
xchg
test
outsb
inc
fwait
jbe
addr16
push
pop
pop
xchg
or
arpl
scas
inc
jecxz
sbb
int
jecxz
gs
cmp
mov
pop
loope
mov
fsubrs
std
repz
mov
adc
fdivrs
mov
dec
fcompl
je
mov
jno
adc
shrb
insl
jp
sbb
jge
pushf
enter
hlt
test
cwtl
mov
mov
aad
in
and
hlt
mov
jno
loop
pop
sbb
jge
jp
and
mov
loop
sarb
and
and
mov
sub
dec
adc
out
pop
rclb
add
xchg
aas
jns
push
loope
jne
shrb
faddl
lods
ret
ss
and
or
push
xlat
mov
mov
es
mov
iret
mov
mov
aam
sub
inc
jl
cmp
stos
iret
sub
mov
jo
shrb
adc
dec
and
cmp
cs
repnz
scas
in
sub
shl
std
push
push
rcll
mov
push
cli
repnz
inc
in
pop
aaa
mov
xchg
mov
int3
sbb
mov
outsl
paddw
jb
in
cmp
xchg
cmp
push
scas
incl
xlat
loop
mov
das
arpl
push
push
and
jmp
pushf
inc
adc
call
push
roll
dec
shl
dec
imul
shll
jns
and
mov
ja
pop
xchg
xor
push
rep
aam
hlt
mov
mov
daa
fadds
pusha
mov
test
test
mov
sbb
addr16
scas
lock
xor
outsl
sbb
jae
pop
hlt
sbb
mov
sahf
cmp
fs
or
cltd
mov
pop
add
mov
je
push
mov
iret
xor
scas
jno
insb
cmp
sbb
mov
mov
mov
inc
jno
sahf
aas
xchg
inc
jmp
pop
push
rclb
and
cmpsl
fs
cmc
pop
mov
sbb
fbld
sub
rclb
in
out
outsb
dec
cs
arpl
andl
cmp
pop
stos
adc
insl
xchg
and
mov
pop
xchg
and
cmp
in
dec
push
lea
test
arpl
mov
call
cmpb
pop
dec
popa
dec
in
cmp
xchg
stos
jmp
sbb
sarl
mov
out
test
aam
es
mov
orb
fcoml
jp
lahf
dec
push
mov
pop
std
jne
rol
loop
rcr
sbb
jp
int3
fcoml
loopne
fbld
repnz
push
rcrl
sbb
jl
mov
push
js
rcl
xorb
dec
jbe
jg
enter
mov
pop
imul
mov
ret
out
cmp
mov
add
ret
pop
push
mov
jbe
jnp
fisttpll
arpl
sub
sbb
mov
inc
add
in
pop
add
repz
xchg
xchg
push
scas
push
out
sub
push
subb
fwait
push
xchg
mov
es
shl
shrb
adc
fs
ret
xchg
pop
mov
push
movsl
xlat
adc
ret
jb
inc
call
pushf
punpcklwd
adc
out
adc
leave
outsb
into
roll
or
shrb
cmp
popf
insl
cmp
pop
push
mov
out
adc
cmp
lods
push
inc
jmp
cwtl
fisubrl
cmp
lahf
mov
mov
jno
std
inc
mov
mov
out
fadd
sbb
sarl
dec
push
push
push
dec
in
fsubr
sbb
orl
lret
push
jne
lods
pop
pop
and
fwait
jb
test
mov
jae
mov
jno
icebp
jle
mov
loope
leave
cmp
jb
jp
insl
sbb
daa
sbb
add
stos
pop
mov
dec
out
movsb
gs
xchg
ret
sub
dec
jbe
sbb
jp
adc
sub
and
dec
fidivs
enter
out
mov
mov
inc
popf
outsl
andb
repnz
sub
lods
clc
dec
aam
xlat
and
adc
mov
ja
mov
xorl
add
xor
bound
orl
mov
mov
and
xchg
into
mov
adc
push
std
dec
fwait
add
outsb
adcb
les
jmp
pop
jnp
or
xor
lea
inc
ja
add
push
xor
xor
rcll
outsb
push
call
dec
xchg
mov
cwtl
pop
sbb
jge
add
add
adc
jbe
xor
subl
jne
aaa
and
ljmp
mov
push
or
sarl
xchg
cmpsl
call
test
xorb
in
and
fcmovu
lds
push
add
ret
sbb
push
and
sbb
stos
push
cmp
jp
mov
imul
push
adc
mov
mov
jp
lahf
pop
jp
mov
mov
xchg
ljmp
pop
call
mov
mov
sbb
fs
push
add
cmc
or
sbb
nop
mov
insl
jo
pop
sub
shrl
jns
rcll
cmp
and
push
das
ret
lret
imull
out
xlat
adc
xor
ret
mov
lds
pop
enter
dec
push
adc
mov
out
inc
push
out
mov
push
outsb
push
pop
xor
les
movsb
test
mov
push
pop
rol
addr16
dec
lds
lea
fcoml
xchg
rolb
xchg
jp
pop
mov
iret
cmc
cmp
push
movb
clc
mov
adc
jae
pop
and
mov
clc
fsubrs
xchg
fwait
inc
outsb
in
mov
je
hlt
xchg
ret
scas
in
push
sub
jbe
adc
int3
lea
mov
add
push
ret
out
sub
rorl
icebp
aad
daa
add
repz
gs
sbb
mov
adc
mov
sbbb
mov
mov
hlt
pop
xor
inc
sbb
fisttpl
jo
cmpsb
fstpl
sbb
and
adc
xchg
push
ds
jecxz
lret
jp
iret
gs
add
rclb
inc
mov
nop
jmp
and
mov
aas
mov
mov
mov
jae
iret
mov
cld
pusha
sti
add
pop
insb
out
xchg
mov
ljmp
aaa
and
popl
int
mov
cmp
cmpsl
or
sahf
xchg
jmp
cli
rcrl
jo
push
sbb
rorb
shrl
in
subb
mov
popa
and
adc
lea
xor
sbb
pusha
add
xor
and
insl
add
loope
in
scas
sub
loope
jns
add
jno
aaa
push
rcl
getsec
cli
adc
enter
cltd
sub
sub
lds
pop
pop
mov
xchg
or
jno
test
add
mov
mov
adc
mov
loop
lret
jle
in
and
inc
outsl
mov
mov
pop
inc
clc
shrl
inc
push
test
fisubrl
daa
sbb
xchg
fcom
adc
pop
mov
cmc
sub
xchg
mov
adc
inc
cmp
or
lds
sbb
cmp
cli
xchg
jnp
xchg
iret
clc
mov
jne
push
sbb
push
xor
lret
cmp
inc
je
sbb
ss
popf
dec
push
and
pop
pop
scas
shrb
xor
mov
jp
push
scas
mov
pusha
and
jno
adc
cmp
add
loope
fildll
jno
in
sbb
inc
jae
pop
lret
jnp
lea
je
in
inc
sub
out
pushw
stos
pop
or
sub
imul
pop
dec
add
in
mov
imul
sti
xor
push
dec
jns
pop
shrl
sub
jae
add
adc
ja
les
mov
fisubrs
into
in
sub
cmp
mov
sbb
mov
xchg
pop
or
pop
xchg
es
es
cmp
daa
xchg
xlat
repz
xchg
test
es
test
das
leave
imull
mov
xchg
push
fisubrs
fisubs
mov
shrl
adc
mov
jmp
mov
push
sbb
fnstenv
or
pop
iret
decb
lret
stc
adc
mov
ret
je
leave
test
inc
ja
xlat
jmp
xor
mov
gs
sbb
add
out
push
sub
in
out
sbb
mov
adc
icebp
inc
je
aad
out
xchg
rcll
jp
sbb
ljmp
adc
mov
mov
jecxz
fistl
sbbb
mov
test
jmp
push
icebp
sub
xchg
test
in
daa
push
push
push
test
call
in
inc
sbb
mov
out
sub
bound
psubq
sbb
clc
lahf
pop
enter
int
aaa
movsl
hlt
xchg
rcrw
xchg
loope
mov
popf
std
movsl
inc
jbe
sub
inc
push
push
fdiv
stc
mov
jg
arpl
or
cmp
loope
push
or
xchg
aam
sahf
testb
cs
shl
ja
in
jnp
stos
mov
push
popf
movsl
andb
mov
fwait
in
mov
shll
std
adc
outsb
loopne
bswap
sbbl
dec
xchg
es
push
filds
repnz
xchg
xor
std
mov
loopne
mov
push
jmp
pop
adc
cmp
xchg
jns
out
ljmp
mov
cmp
jecxz
add
mov
call
gs
mov
or
jne
adc
lret
repz
jae
sbb
jp
add
insb
mov
mov
mov
lock
xor
outsb
pop
xchg
cltd
enter
fimuls
mov
adc
leave
mov
test
iret
xor
mov
dec
insl
jae
jbe
sbb
mov
or
ror
add
pop
sub
or
xor
cmpsb
hlt
aas
daa
fimuls
push
mov
aaa
jmp
outsb
adc
lods
icebp
sarb
call
fdivrs
incl
xor
mov
fsubr
pop
addr16
stc
mov
cmp
call
jb
out
sarl
mov
dec
push
adcl
sarl
inc
fsubs
popf
mov
sub
lods
mov
scas
fwait
dec
and
std
cmpsl
pop
std
xchg
ljmp
mov
out
jp
jmp
scas
js
mov
mov
fstl
ret
xchg
outsl
add
fcmovbe
outsl
movsl
cmpb
xor
pop
jo
push
popf
int
mov
outsl
scas
push
cmc
mov
repz
dec
int
mov
and
es
sahf
cmp
push
aas
mov
outsb
call
pop
aam
in
cmpl
or
inc
and
xor
sbb
push
mov
pop
push
in
adc
add
xchg
inc
inc
in
sti
jo
test
xchg
add
push
iret
pop
ret
jnp
push
stos
sbb
push
add
lret
add
xchg
mov
xor
das
das
xor
adc
and
inc
out
jmp
je
cmp
fdivr
pop
dec
ds
icebp
jo
inc
fwait
popf
les
ret
sbb
cmp
push
clc
mov
fnstenv
ljmp
and
sbb
mov
mov
gs
xchg
hlt
cltd
pusha
xlat
hlt
fists
jl
cmp
add
loopnew
out
data16
xlat
fistpl
dec
clc
call
out
sti
pusha
in
or
pusha
repnz
add
dec
fldl
mov
test
lahf
dec
fldenv
fsubp
mov
test
sahf
mov
adc
xor
cwtl
and
test
dec
adc
ret
dec
sub
dec
daa
inc
xlat
jnp
cwtl
mov
sbb
add
sub
mov
decb
mov
mov
sbb
cmp
jmp
pop
dec
mov
mov
jl
filds
cmc
popa
and
dec
rol
aam
xchg
mov
pusha
push
jmp
xor
popa
xchg
shrl
lret
sub
xor
mov
push
add
add
jecxz
pop
and
daa
jge
mov
enter
inc
lods
mov
fcoms
sbb
jge
xchg
push
xor
pop
and
in
xchg
lret
inc
in
ljmp
push
icebp
bound
push
mov
movsb
xchg
ret
xor
and
js
dec
andb
and
clc
mov
sbb
shrb
sub
mov
repz
cmp
stos
sub
dec
js
mov
or
lds
shlb
add
push
iret
jne
sbbl
arpl
cmp
cmp
aas
sbb
mov
adc
dec
dec
sbb
ja
push
adc
nop
fisubs
or
sub
cmpsl
push
outsl
mov
add
inc
out
mov
mov
adc
jl
test
int3
xchg
push
repz
xchg
fs
int3
daa
cmpsl
push
lock
push
loope
in
add
repz
dec
int3
sahf
jae
jnp
aaa
pop
call
cmpl
xor
jnp
insb
pop
cmpsl
popa
std
push
jbe
mov
jp
in
mov
or
incl
imul
cmpb
cmp
addl
mov
enter
xchg
dec
and
xchg
out
ret
push
popf
and
mov
dec
xchg
mov
iret
pop
and
pop
dec
xor
test
test
sub
imul
daa
fisubs
data16
loope
fdivr
sarl
ja
inc
xchg
data16
jno
sbb
call
sub
in
mov
test
scas
and
hlt
push
jnp
push
stc
outsb
rcll
mov
or
sbb
rcrb
pushf
sub
dec
sbb
pop
gs
dec
mov
scas
fimuls
mov
dec
jnp
sub
mov
lret
ljmp
sbb
dec
in
hlt
mov
cmp
xchg
jbe
pushw
push
cmp
out
movsl
sub
mov
ljmp
in
jp
xchg
add
mov
ss
add
popa
stos
xlat
pop
lret
outsl
shrl
test
filds
lock
aas
and
aas
dec
cmp
mov
cmp
sub
lret
out
stos
imul
sub
int3
in
or
xor
fwait
pop
push
call
out
jle
adc
xor
xor
mov
nop
xchg
jecxz
mulb
popf
imul
scas
cld
sub
jae
xor
xor
lret
add
jg
cmp
adc
mov
popf
cwtl
lcall
scas
jecxz
mov
data16
and
mov
jmp
adc
arpl
and
mov
dec
fnstenv
sbb
push
mov
mov
adc
aaa
or
pop
xchg
inc
fcomip
in
loopne
test
lcall
gs
adc
enter
jno
daa
frstor
dec
rclb
jp
test
xor
add
shlb
inc
fisttpll
ret
aas
lea
or
rclb
jmp
fstpl
and
dec
sub
rcrl
jg
or
inc
xchg
nop
stc
aaa
in
inc
ja
adc
shlb
or
das
gs
and
dec
roll
lret
call
out
lods
ja
xor
sbb
fstps
push
gs
push
xor
add
rol
mov
out
xor
mov
dec
mov
fcoms
sbb
pop
insl
mov
aas
cmp
jmp
adc
mov
sti
push
addb
fucomp
pop
lret
lret
fmull
test
xor
xor
inc
mov
je
testl
sbb
mov
mov
or
ja
cmc
popa
cmp
mulb
aam
xchg
pop
xlat
add
test
sbb
push
xor
pop
movsl
add
das
les
mov
gs
js
sbb
sub
pop
push
jae
fnstcw
adc
jo
mov
lea
inc
in
aad
call
and
loopne
xchg
inc
iret
mov
test
and
fwait
xchg
push
mov
dec
shrb
sti
or
jo
xor
inc
ret
dec
nop
lret
and
ljmp
inc
mov
loope
xor
push
pop
sbb
lds
lret
mov
mov
and
adc
dec
adc
mov
or
mov
jno
jo
push
jl
inc
jmp
sub
insb
push
adc
mov
push
outsl
not
jae
scas
pushf
cmp
lret
cs
ljmp
aam
out
add
push
or
lret
and
mov
jp
jns
sub
cmpsl
dec
popa
sbb
popa
jl
adc
sbb
push
shrb
inc
pop
jg
and
mov
addb
xor
ds
insl
adc
stc
xlat
cmp
jae
fs
push
push
fsubl
add
jnp
shr
ret
inc
orps
int3
push
clc
les
xorb
cltd
aam
leave
in
shll
ret
repnz
std
out
add
fstps
js
je
push
jno
fwait
jnp
icebp
daa
jecxz
cmp
out
je
pop
in
out
dec
xchg
push
push
cltd
sub
add
and
mov
rcll
dec
mov
push
cmc
push
add
scas
loop
mov
jl
inc
inc
pop
outsb
fadds
scas
out
adc
jo
movsb
fst
outsl
push
cmp
xchg
lret
ja
jnp
cmp
sub
cmp
in
int3
push
pop
xchg
idiv
cmpsb
pop
pop
push
push
call
sbbl
sbb
fwait
or
jb
xchg
xchg
gs
mov
ljmp
insl
dec
dec
inc
ret
frstor
iret
orl
gs
mov
ret
or
and
jae
jle
jecxz
lcall
jo
adcb
jle
sbb
and
mov
add
push
ja
fidivl
loope
pop
pop
push
dec
repz
mov
ficomps
dec
pop
inc
out
xchg
mov
xor
pop
pop
cmp
sti
mov
xor
inc
adc
dec
nop
test
dec
mov
in
xchg
push
out
mov
lea
fadds
mov
jecxz
sub
jbe
pop
hlt
fucomi
cmp
xor
rcll
mov
mov
punpckhwd
push
icebp
int
ffreep
or
xchg
rcll
std
or
scas
and
push
in
cwtl
xchg
sub
mov
rolb
adc
jae
add
pusha
int3
test
cld
cmp
sbb
push
inc
ds
xor
idivb
mulb
mov
jmp
mov
jge
sahf
dec
inc
dec
mov
in
and
dec
loop
insl
or
std
daa
lcall
mov
insb
pop
nop
daa
insb
adc
dec
cmp
dec
nop
add
popa
xor
sub
repz
outsl
mov
pushf
push
mov
mov
ds
and
sbb
inc
xor
stos
out
int3
out
shlb
dec
cmp
jae
call
push
inc
shrb
push
jle
fmuls
xor
aad
dec
pop
xlat
pusha
pop
push
inc
mov
push
cs
cmp
popf
sbb
push
push
in
mov
outsb
frstor
pusha
int
mov
inc
mov
push
movsb
fnsave
mov
adc
mov
jb
sub
mov
or
lods
lret
inc
and
lahf
mov
mov
fisttpl
and
cmpsl
xor
pop
cmp
test
or
iret
add
xor
mov
and
inc
js
mov
and
out
jno
or
fisubrs
xchg
pop
aaa
pop
addr16
call
in
sub
dec
add
cmp
subl
ss
jne
cmp
rcrb
stc
ret
adc
daa
sbb
cmp
in
sub
jbe
sub
cmp
movsl
mov
je
aam
cmpsb
js
aam
pop
leave
and
or
imul
jb
test
sbb
add
push
mov
push
sub
imul
dec
dec
das
pop
stos
lcall
and
pushf
in
adc
movsl
movsl
fisttpl
lret
fucom
in
int
jmp
adc
mov
fsubrl
xchg
dec
adc
imul
popf
dec
fdivrl
aad
fstpl
pop
jnp
lcall
mov
mov
jge
mov
mov
and
mov
mov
push
sbb
xlat
pushf
data16
addr16
fwait
int3
ds
jnp
jg
cmp
add
shlb
jmp
fs
out
sub
fists
test
mov
sub
jle
cltd
divb
in
inc
mov
mov
inc
pop
pop
in
ret
push
loopne
sub
jecxz
jle
push
pop
in
mov
es
dec
lock
mov
mov
pop
adc
xor
mov
les
nop
hlt
add
sti
add
pop
cmpsb
movsl
scas
sub
jecxz
xchg
mov
pop
pop
lcall
jmp
rcrl
cld
mov
pushl
fidivrl
add
cmp
dec
push
mov
dec
int
pop
repnz
orl
sbb
fnstcw
pop
xor
mov
xchg
pop
icebp
or
sub
je
and
addr16
xorb
pop
jno
and
and
sbb
or
and
or
and
cmp
inc
jmp
jle
jl
insl
inc
jae
loop,pn
inc
or
sti
sub
dec
je
mov
fcmove
repnz
mov
mov
and
in
or
or
jecxz
shrb
inc
aaa
cmpsl
mov
push
add
test
lea
cmpsb
push
cmp
and
movsb
inc
test
dec
and
pushf
or
scas
cmp
std
cmc
xor
xchg
les
cmp
nop
mov
adc
shlb
add
ja
test
sti
cmp
cwtl
fs
pop
jge
cmc
ljmp
sub
add
or
lock
add
gs
inc
mov
cmpsb
fadds
inc
lret
push
add
or
mov
pop
inc
xorb
mov
push
pop
xchg
or
push
inc
xchg
cmp
add
push
pusha
sub
mov
mov
jno
dec
repz
test
popl
cwtl
push
cmp
mov
shl
mov
or
hlt
cmpsl
push
dec
or
and
mov
dec
lods
mov
push
mov
js
xor
lods
pop
fs
mov
sub
lcall
mov
aad
sub
out
cld
mov
cmp
test
mov
and
mov
gs
push
jo
xchg
out
lcall
sbb
inc
push
scas
out
scas
leave
adc
lret
mov
dec
loope
lods
mov
xchg
pushf
sub
mov
int3
inc
mov
adc
adc
je
ffree
enter
xchg
mov
dec
jno
ljmp
mov
ret
jbe
cmpsb
mov
fstl
enter
dec
xor
lds
push
fwait
dec
scas
mov
les
mov
test
leave
xchg
sbb
jge
lock
or
inc
add
test
push
xor
and
adc
jns
dec
xchg
cmpsb
ja
das
xchg
enter
sub
or
push
jp
sbb
pop
sbb
jo
jb
lret
push
mov
cmp
adc
xor
jns
xchg
mov
xor
cmp
jo
loopne
ret
int
and
push
nop
pop
dec
lods
loopne
add
jp
je
daa
inc
push
mov
push
xchg
cmc
mov
pusha
mov
sbb
negb
ret
or
and
js
test
xlat
push
cld
lods
cld
pop
push
pop
sbb
daa
jnp
push
jbe
je
jge
sbb
and
xlat
cmp
dec
and
rolb
xchg
js
enter
ret
je
jl,pt
sti
pushf
bound
aaa
call
pop
cmp
ja
pop
pop
ja
imul
neg
mov
or
pusha
out
adc
sub
mov
jle
mulb
or
clc
xchg
adc
ja
add
mov
sti
popf
call
int3
or
push
sub
aas
xchg
adc
add
outsl
mov
push
ret
fdivrl
ds
mov
xchg
inc
push
pop
sub
mov
loopne
lret
inc
adc
pop
or
gs
stos
aam
xchg
lock
pop
cmpsl
pop
inc
inc
bound
fildll
mov
call
adc
sub
js
lds
jp
adc
daa
push
add
push
fisttpll
and
sbb
xor
add
push
imul
push
xchg
das
int3
test
scas
test
sub
popf
mov
dec
cli
inc
inc
stc
xor
mov
mov
std
cmpsl
test
cltd
scas
dec
pop
repnz
adc
loopne
pusha
and
aas
add
sbb
bound
cli
jl
rorl
das
lods
insb
or
and
xor
lods
add
je
loop
rclb
imul
xor
inc
and
addb
or
add
push
sbb
idivl
outsb
test
nop
mov
and
je
xor
xor
out
mov
idiv
stos
cmpsb
mov
or
daa
fbstp
xor
push
arpl
lds
jbe
cli
fisubrs
lahf
and
stos
and
scas
xchg
lds
xor
pop
inc
add
pop
dec
mov
lods
in
jne
mov
repnz
sbb
clc
lea
xor
sbb
push
movb
mov
popf
push
cmp
shrb
sbb
dec
negb
inc
add
mov
ret
inc
push
jl
pop
adc
cmpsl
js
pusha
sbb
jge
jl
mov
push
into
mov
mov
mov
and
inc
lcall
push
xchg
mov
shlb
add
addr16
cld
popa
sub
bound
aaa
ret
or
or
lock
mov
pop
jns
adc
xchg
popa
call
pop
adc
rcl
aad
test
inc
dec
mov
add
push
cwtl
pop
jo
jge
ljmp
rorb
xchg
push
ret
int3
mov
insl
arpl
sub
lahf
call
rclb
mov
mov
mov
sub
sub
popf
or
bound
add
jnp
mov
push
lock
in
ja
cmp
adc
cmc
jns
bound
hlt
cld
bound
dec
mov
adcl
imul
enter
out
mov
mov
sti
ficoms
test
aam
adc
rcrb
into
jp
mov
enter
inc
arpl
mov
ret
cli
push
js
adc
pop
sub
jg
mov
mov
fildl
xchg
repnz
ret
loopne
xchg
mov
mov
mov
cwtl
jb
mov
jmp
insb
lret
fistl
adc
pushf
inc
inc
or
jb
xchg
dec
sbb
ret
test
stos
aas
mov
fmull
and
fsubrp
and
shl
lock
mov
leave
mov
aad
cmp
insb
rcll
movzbl
repz
repz
pop
aaa
push
sbb
dec
cmp
xlat
adc
scas
imul
and
add
sub
aad
loope
lea
int3
in
fcompl
out
mov
pushf
decl
jp
aaa
pop
ljmp
jmp
out
jl
pop
mov
sub
push
push
jp
imul
dec
mov
jle
or
xor
aaa
pop
mov
mov
scas
rclb
cmp
pop
movsb
xchg
mov
pop
es
fldt
cmp
adc
push
pop
loopne
xor
pushf
arpl
gs
jmp
pop
xor
jns
pop
adc
leave
sub
jne
mov
xor
jo
pop
pop
mov
popf
inc
inc
mov
iret
mov
test
test
mov
jno
int3
in
jge
popf
cwtl
aaa
jl
xchg
and
mov
jns
xchg
mov
shl
sub
push
scas
cmpsl
mov
icebp
mov
mov
mov
push
decb
inc
daa
mov
adc
push
cmp
iret
lods
mov
into
fistpll
mov
out
pop
mov
in
arpl
es
rorb
add
orb
cmp
mov
dec
repnz
mov
push
and
jg
and
ss
jg
dec
bound
pop
xor
in
pop
outsb
and
clc
cmp
mov
int3
in
or
ficomps
ljmp
push
out
mov
jmp
inc
lock
pop
mov
js
sbb
inc
sub
les
adc
xor
push
push
add
jecxz
pop
mov
repnz
das
lahf
cmp
or
enter
jnp
fcmovu
insb
mov
sub
stc
inc
aas
imul
sti
jo
inc
pop
push
xchg
insb
and
nop
and
jecxz
loop
insl
ljmp
pop
cmp
add
inc
popa
cmc
jl
pop
pop
adc
cmp
mov
xchg
addr16
cmc
imull
push
sub
insl
cmpsb
mov
movsl
loopne
insl
ss
and
aaa
cmp
push
outsl
xlat
fnstcw
push
fisubrl
xchg
jmp
dec
mov
jg
push
adc
sbb
push
xchg
or
xor
dec
cli
test
jbe
es
mov
push
scas
or
push
out
not
jle
push
test
cltd
pop
lock
in
les
in
jecxz
and
xchg
pop
push
xchg
fildl
nop
xorl
fisubs
mov
testl
adc
pop
nop
shl
jl
push
sbb
repz
sub
xchg
addr16
hlt
test
mov
mov
dec
pusha
in
jne
daa
adc
gs
out
push
shlb
cmp
test
repnz
faddp
cwtl
ds
scas
cmc
inc
cmp
adc
insl
arpl
cmpsb
loope
pushf
pop
jns
xor
je
fbld
adcl
xor
jle
sti
xor
hlt
fwait
or
mov
jge
jo
mov
lock
mov
mov
jecxz
repz
nop
mov
notl
xor
test
pop
jp
fldenv
push
or
sub
or
cmpsl
adc
fistps
aaa
outsl
scas
ret
stos
sub
inc
cmp
fst
and
into
sub
sub
pop
ret
pop
cmp
insl
out
mov
test
daa
push
mov
aad
xchg
sbb
mov
pop
negl
jle
je
mov
jno
and
mov
outsb
mov
into
adc
cs
movsb
cmp
cs
sbbl
sub
cmp
movl
cwtl
outsb
xor
sbb
lods
mov
jg
adc
test
jl
mov
cmpsl
cmp
push
jmp
fcomip
cmpsl
jge
push
adc
aad
jle
gs
push
cwtl
mov
push
ljmp
inc
aaa
pop
cmp
out
lds
jmp
insb
push
std
scas
sbb
shlb
int3
mov
sub
ds
and
add
das
adc
imul
sub
or
outsl
ss
out
test
push
add
cmp
enter
xor
lods
mov
iret
add
dec
subb
add
or
stos
call
repz
outsb
jno
and
xlat
das
add
nop
shrl
push
shl
push
shlb
or
rolb
jle
mov
lret
push
mov
fsubr
repz
pusha
pop
and
out
hlt
gs
push
gs
push
dec
and
ss
lds
inc
jbe
and
inc
sbb
inc
ja
roll
sbb
and
outsb
mov
subl
xor
xor
arpl
cmp
movsl
jg
inc
pcmpeqw
adc
cwtl
fucomi
arpl
adc
hlt
add
and
cmp
jne
jg
pop
adc
push
mov
mov
mov
out
push
push
lahf
loope
xor
pop
add
pop
fsts
inc
pop
je
aas
xchg
inc
add
xchg
movsb
loop
fildl
daa
and
shlb
xchg
stos
push
cmpsl
leave
popa
xchg
push
out
mov
inc
push
out
rcll
jae
xchg
jmp
push
dec
add
xchg
stos
xor
cmp
or
lock
fdivrs
push
pop
mov
mov
mov
ljmp
pop
jmp
iret
inc
pop
sub
in
jp
adc
pop
sbb
push
inc
movsl
and
lret
jno
popa
mov
jl
rcrb
faddl
cmp
fimuls
dec
bound
inc
ret
mov
aad
push
push
push
inc
fdivr
and
js
inc
mov
push
outsl
ffreep
jbe
xchg
addb
lods
mov
loop
jecxz
out
daa
scas
xor
sti
or
lret
es
push
dec
cld
mov
push
rcrb
and
push
cmp
pushf
mov
push
or
add
addr16
ja
inc
lret
jne
mov
in
mov
jmp
aam
mov
insb
jmp
jecxz
cmc
addr16
lock
sbb
adc
xor
and
push
lea
mov
push
xor
test
pushf
aaa
pop
aas
out
test
sub
jae
pop
neg
or
insl
icebp
fildll
pop
lods
stos
xor
test
dec
pop
imul
mov
or
pusha
nop
dec
popf
xor
dec
dec
not
dec
add
popf
fbld
jmp
jne
xor
in
or
add
andl
jmp
and
push
push
test
inc
loopne
mov
cmpsb
out
int3
jp
into
mov
or
jle
and
out
jno
and
fsubrl
stos
shl
js
movsl
fistps
lcall
xchg
imul
shll
ficomps
scas
aad
mov
movsb
dec
daa
cmpsl
add
pop
out
xlat
dec
aas
rcll
jp
mov
inc
adc
das
shll
push
dec
fs
pushf
in
sti
mov
test
xor
xchg
xor
outsb
or
mov
cmp
dec
lret
push
cmpl
pop
push
icebp
stos
stos
lahf
xor
orl
or
and
cltd
faddl
lods
inc
inc
jecxz
push
and
lret
movsl
pop
mov
cmp
jnp
outsl
or
notl
mov
xor
lods
jmp
push
aam
inc
cmpb
stc
mov
or
stos
ljmp
pop
adc
test
xchg
xor
mov
std
pop
or
loopne
fistpl
dec
xchg
js
jle
shrl
jns
movsb
xor
dec
xor
adcl
pop
dec
mov
dec
cltd
pop
in
lods
mov
sahf
cmp
cmp
pop
test
stc
cld
sahf
repz
jle
mov
rolb
pop
out
aad
xor
ret
xchg
add
pop
cmp
xchg
int
mov
cltd
popa
lods
cmp
pushf
sbb
imul
pop
in
mov
insl
iret
jnp
mov
or
into
xchg
cmp
pop
jmp
sbb
xchg
push
jp
hlt
lods
sub
incl
int3
xchg
mov
dec
fnstcw
imul
xor
movsb
sbb
xor
jb
cltd
mov
dec
cmp
xchg
xchg
ljmp
inc
xchg
out
and
loopne
xorb
sub
dec
out
adc
or
cmpsl
mov
or
xchg
test
mov
scas
push
or
popa
stos
or
xchg
cmpsl
inc
or
sbb
inc
push
xchg
mov
addr16
out
push
arpl
movl
das
mov
pop
pop
inc
push
shr
test
mov
dec
push
fcoms
addb
daa
jg
leave
imul
cwtl
aad
addb
aaa
fldenv
mov
das
lret
dec
cld
add
push
sub
xchg
mov
ret
lret
das
frstor
outsb
mov
fwait
int
ss
xlat
cmc
mov
sbb
jmp
mov
mov
aas
popa
cs
inc
adc
cmpsl
add
mov
icebp
adc
ja
xchg
adc
dec
mov
outsl
push
movsl
and
xor
fistpl
mov
out
pop
cmpsl
sarb
clc
sbb
sahf
loopne
notb
add
add
mov
xlat
lret
int
pushf
inc
test
xor
jg
scas
mov
sbb
xchg
mov
xchg
mov
and
test
out
scas
repnz
xor
dec
add
sarb
adc
call
sbb
ss
xchg
or
sahf
ss
pop
std
pop
inc
cs
mov
dec
sbb
repnz
aaa
sbb
in
mov
push
pop
sbb
mov
sub
stos
sbb
sbb
push
sbbb
or
dec
stc
push
adc
mov
std
xlat
and
pop
aaa
mov
mov
jne
out
or
test
push
sub
pop
in
dec
push
xor
dec
cmc
lods
sub
pop
mov
psrlw
cmp
and
movsb
add
fs
sbb
push
outsl
mov
in
cmpsl
popa
push
or
or
fcomps
push
push
cmpsb
pop
xchg
sarb
mov
sbb
hlt
repz
mov
cltd
pusha
push
xchg
lea
aad
mov
les
sar
fsubrp
sbb
and
cmp
in
inc
mov
cmp
mov
add
pop
out
push
int
and
inc
sub
adc
xor
mov
stos
rcr
sbb
lea
int3
push
mov
xchg
fistpl
pop
push
out
pop
cmp
xchg
adc
mov
mov
jae
cmpsb
cmp
adc
movl
outsb
repnz
mov
in
inc
jmp
jl
aaa
pushf
pop
mov
out
jnp
cmp
and
shl
imul
xchg
daa
sti
sbb
dec
sbb
pop
rep
sub
jl
shll
test
push
jnp
flds
lods
fildll
pop
repnz
and
jmp
inc
or
jno
pusha
pop
inc
dec
push
ds
hlt
dec
pop
sub
adc
rorl
mov
xlat
push
push
cmp
pop
insl
add
push
test
pop
rcrl
xchg
mov
lea
cmp
cmp
out
jle
arpl
adc
out
adc
mov
ret
out
lret
mov
jbe
pop
xchg
lock
inc
sub
mov
fisubs
cmp
lock
inc
xor
push
or
xchg
call
cmpsb
fs
pop
xchg
movb
hlt
fisubrs
stc
sub
push
cli
dec
aaa
add
aas
mov
sbb
pop
insb
fistps
add
enter
push
adc
test
hlt
loope
xchg
imul
jo
insl
aas
xor
sub
cs
nop
jge
cwtl
add
mov
inc
jno
sahf
shl
inc
xchg
mov
and
cltd
hlt
fsub
xchg
mov
test
push
lret
and
mov
jae
loop
jno
sar
sub
push
push
sbb
xchg
mov
xchg
bound
test
push
xor
jae
or
sub
jecxz
and
dec
pop
in
leave
jle
pop
movsb
insl
lret
cmp
jno
xchg
data16
mov
inc
and
pusha
add
arpl
fwait
adc
xchg
pusha
jns
pop
int
lds
mov
inc
and
pop
xor
cmc
mov
jecxz
dec
pop
fcomip
pop
jb
ljmp
hlt
xor
push
sbb
call
push
sbb
pop
add
dec
cmp
rolb
stos
cmp
pop
mov
mov
push
or
mov
and
sbb
add
pop
into
inc
cli
xchg
cmpsb
inc
int
flds
xor
inc
jp
xor
out
jbe
fs
xchg
je
dec
inc
mov
les
in
mov
iret
out
cmpb
je
xor
sar
in
mov
or
xor
out
cltd
sub
fsubl
into
pop
lahf
mov
inc
pop
adc
and
fstpl
aas
repnz
cmpb
mov
pusha
mov
popw
mov
mov
into
push
stos
or
inc
dec
lahf
xor
cs
cwtl
mov
cs
sbb
cmc
movsl
or
fistps
add
mov
call
push
imul
adc
jge
xor
xor
dec
xor
in
loope
ss
add
adc
xchg
nop
cmp
sub
bound
cmp
fnstsw
adc
push
das
jmp
mov
mov
sbb
xchg
push
addr16
push
adc
ja
fwait
js
in
pop
cmp
xor
aas
shrl
and
cld
xchg
in
or
mov
fcomps
xchg
adc
sub
adc
mov
push
mov
add
pop
loope
pop
add
ret
add
and
lods
xor
xchg
jno
mov
fs
stos
insb
in
xchg
push
sbb
cmp
dec
xchg
call
cwtl
mov
mov
insl
aad
cmc
xor
jl
push
or
je
push
in
dec
jle
jae
std
jg
xchg
mov
loope
icebp
push
fdivs
sub
adc
out
aaa
add
rorb
pushf
popa
loopne
outsl
adc
arpl
sbb
mov
jmp
mov
lods
mov
leave
call
repz
inc
inc
push
add
sbb
scas
adc
sbb
mov
fwait
add
aas
add
and
dec
jno
jno
pop
push
jl
adc
xchg
psraw
addr16
int3
in
adcl
add
ficoml
add
dec
insb
les
push
test
cmp
rcl
sbb
push
cmp
or
pop
adc
xchg
cmpsb
call
push
fxtract
adc
sti
push
mov
adc
sahf
add
repz
mov
addr16
xchg
mov
ja
jmp
dec
mov
shrl
xorb
mov
add
ss
lods
popf
pop
cli
jmp
push
call
mov
sbb
pop
and
int
dec
xchg
push
cmpsb
dec
dec
repz
cmp
pop
xorb
jle
fdivs
and
mov
xchg
jmp
pop
ss
lret
cmp
jecxz
aam
ds
mov
xchg
js
mov
inc
lods
xlat
xor
adc
imul
push
nopl
sub
pop
lret
push
sub
jo
rcrb
shrl
rorl
ficoml
inc
repz
ljmp
xchg
sub
xchg
test
loop
loop
mov
jno
xor
stos
mov
cmp
cmp
call
lea
push
mov
sbb
decl
pushf
push
jo
xor
fisubrs
insl
arpl
and
push
je
pop
jns
sbb
mov
jo
mov
dec
cmpsb
sbb
mov
in
jns
popl
mov
aad
jns
or
mov
cmp
cmp
pop
sbb
arpl
jp
or
xchg
sub
sub
mov
imul
jnp
cmp
aaa
sbb
das
jno
shrl
or
pop
adc
lret
lds
push
test
push
dec
pop
sbb
in
pop
xlat
add
cs
cmp
stc
shlb
aas
push
sbb
into
stos
js
clc
arpl
mov
movsb
hlt
pushf
repz
testb
inc
pushw
pop
ja
xchg
xchg
mov
push
sbbl
das
out
ds
ss
adc
pop
outsl
or
in
scas
out
leave
dec
push
rcll
jg
stc
adc
std
orb
daa
movl
fisttpl
repnz
aas
sbb
or
int
fcmovnb
repz
fsubl
and
imul
jns
mov
pop
push
popa
test
add
jb
jo
shlb
addr16
jae
movsl
cwtl
or
ret
push
sbb
push
jmp
mov
ds
scas
push
rcrl
fadds
inc
mov
xlat
hlt
sbb
jg
push
jmp
popa
sub
rcll
adc
mov
mov
ret
cmpsl
and
sub
add
jp
inc
xor
sub
stos
inc
push
xor
test
dec
in
leave
out
aam
jl
orb
adc
xchg
cmp
mov
les
sbb
jb
pop
out
push
adc
rolb
stc
mov
movsb
jmp
out
jne
sahf
push
xchg
inc
arpl
push
inc
mov
out
adc
pop
and
mov
scas
mov
push
pop
adc
jp
loop
mov
xchg
arpl
inc
and
repz
lret
dec
sub
scas
jne
or
push
cld
pop
outsb
cmpl
jl
fdivl
inc
bound
fdivs
push
nop
xor
mov
loopne
xchg
ljmp
xchg
xlat
fisttpl
loopne
sub
repnz
cmp
sbb
mov
lock
lds
sub
loopne
lea
push
xchg
push
cli
out
sti
inc
dec
or
je
mov
je
andb
cwtl
fs
sbb
pushf
dec
inc
popa
stos
mov
add
adc
pop
push
push
ret
notl
cmp
add
icebp
jg
sbb
adc
out
mov
dec
add
inc
adc
movsb
in
insb
inc
std
xchg
xchg
outsl
sub
je
imul
cmp
mul
and
test
arpl
sti
jbe
stos
dec
sbb
aad
iret
sub
hlt
aaa
test
xchg
repnz
ljmp
cmp
push
xchg
mul
add
aaa
xor
mov
sti
or
shll
add
push
mov
cmp
imul
mov
sarl
inc
sbb
dec
scas
sub
sbb
popf
dec
addr16
rcrb
fdivp
mov
push
je
in
adc
jnp
stos
sub
jp
adc
xor
lcall
das
ja
stos
rclb
mov
lods
xchg
cmp
sbb
xor
fimull
out
jmp
in
call
sub
sub
dec
adcb
jle
pop
das
jge
jl
mov
std
std
jmp
enter
inc
scas
pop
sahf
nop
lock
push
and
jae
pop
mov
mov
cmp
call
xchg
cli
jo
gs
jle
movl
roll
xchg
icebp
dec
cltd
loope
pop
shr
movsl
dec
cs
adc
cmp
and
push
cwtl
add
pop
xor
ss
mov
and
pop
repz
arpl
inc
nop
dec
scas
add
jo
into
add
mov
dec
shrl
jbe
je
add
ds
fdivrs
pusha
addb
or
mov
jg
jmp
iret
je
sbb
nop
cmp
push
popa
mov
jne
insl
stc
out
pop
jl
repnz
inc
ja
int3
and
inc
pop
sete
cmp
sbb
gs
sahf
mov
mov
hlt
bound
jp
xor
push
mov
push
cmp
adc
add
cmpb
push
js
movlps
inc
mov
out
dec
push
adc
sbb
clc
idiv
jae
sarb
daa
pop
movzwl
js
cltd
ljmp
cli
int3
xor
test
repz
add
xor
xchg
nop
inc
nop
and
nop
sub
pop
mov
fwait
xchg
and
adcl
add
fildll
jbe
xchg
push
or
mov
lret
jb
push
rcl
aas
imul
ljmp
jb
cmp
lock
bound
int
inc
aad
cs
xor
in
sbb
push
push
dec
and
mov
push
push
pop
scas
cmp
or
jge
mov
into
xor
push
test
out
lds
loop
or
push
xor
cld
fs
test
and
adc
cld
jl
mov
cmp
sub
rcrb
clc
push
and
jp
stos
ret
lds
xchg
dec
aam
aaa
cld
aas
repz
les
add
cs
sar
int3
out
add
test
or
idivb
mov
sub
jl
rorl
sub
frstor
cmp
dec
xor
or
test
movsb
jecxz
dec
aad
insl
nop
cmp
mov
xor
inc
mov
jmp
add
fst
movsb
mov
or
rorl
fsubl
lds
jecxz
fucomp
cs
sbb
je
inc
xchg
bound
jp
xorb
and
js
jecxz
das
mov
and
xchg
sub
xchg
mov
xor
push
push
sbb
movsb
inc
mov
adc
inc
loope
frstor
push
pop
fcomps
fcoml
cmpsb
rcrb
xchg
or
or
js
cld
iret
fadds
cmpb
or
xor
mov
push
dec
dec
andl
sub
xor
pop
in
iret
and
stos
aaa
xor
fwait
test
cmpsb
add
mov
fwait
sub
mov
add
cs
dec
adc
jecxz
jmp
repnz
lret
mov
aas
inc
xor
mov
mov
push
xchg
ds
mov
cltd
jge
jae
daa
fnstcw
push
jmp
cmp
add
lret
cmc
push
nop
fldl
mov
push
inc
pop
dec
push
push
je
cmp
inc
mov
mov
insl
jae
sbb
jle
mov
xchg
in
incb
out
stos
inc
sar
jne
mov
call
jle
add
movsb
mov
popa
popa
sti
in
loopne
and
mov
push
cli
loope
mov
pop
mov
pop
mov
mov
mov
inc
sub
stc
dec
mov
sbb
repnz
jp
in
xchg
push
adc
push
cs
pop
nop
push
lock
int
sub
cmpb
rcrb
test
xchg
movsb
idivb
adc
xor
sub
jnp
add
push
aam
push
outsb
stos
dec
push
enter
in
es
dec
ja
dec
js
mov
ljmp
mov
scas
test
push
cmp
mov
mov
repz
icebp
mov
mov
aad
stos
xchg
cmp
and
scas
push
and
repz
clts
popa
sahf
sub
xor
push
jecxz
xor
jns
sub
sbb
cmp
add
orb
pushf
mov
mov
xor
or
xor
fstps
push
xlat
xor
fs
mov
dec
cmc
lods
shr
xor
pop
push
and
popf
inc
js
dec
or
and
pushf
flds
mov
pop
scas
jbe
out
gs
call
cs
cltd
inc
dec
adc
jno
xchg
xchg
mov
loopne,pn
notb
xor
pop
pusha
and
push
bound
mov
cmpsb
push
push
notl
js
dec
push
xor
xor
and
xor
or
cwtl
ljmp
mov
pop
dec
insl
sub
pusha
loopne
pusha
mov
test
test
mov
fwait
sub
add
cmp
inc
enter
aaa
pop
pop
pop
mov
sbb
test
adcb
pop
movsl
xchg
dec
xchg
loope
dec
cmp
add
std
push
and
mov
repnz
repnz
idiv
std
imul
daa
mov
rolb
add
lret
add
outsl
ret
imul
pop
cmp
loope
add
push
jp
push
or
icebp
jg
cmp
fs
aas
iret
insb
push
enter
xchg
jg
inc
repz
cmp
adc
es
lds
mov
push
cli
sub
out
xor
lods
es
dec
mov
popa
jmp
pop
pop
pop
mulb
ja
mov
ret
dec
or
adc
or
add
or
cs
or
imul
sub
dec
insl
xchg
push
sbb
inc
fsubrs
and
dec
dec
rolb
loope
popa
jl
mov
daa
test
dec
daa
cmp
faddp
lcall
jo
insb
fcomps
stc
daa
push
adc
add
inc
aad
sbb
push
mov
in
stc
out
iret
gs
lods
int3
cltd
or
mov
dec
test
fwait
orb
pop
sbb
in
dec
jnp
inc
stc
sub
xchg
imul
inc
out
into
inc
push
adc
jl
in
push
mov
jae
and
data16
nop
lret
roll
outsb
push
push
mov
sub
out
fcmovnbe
sbb
out
repnz
mov
xlat
lcall
arpl
push
cmp
repnz
gs
int3
jnp
insl
or
test
fimuls
int3
add
dec
cmp
push
cld
mov
test
or
std
ret
dec
and
ss
cmpsl
hlt
pop
jne
push
dec
insl
mov
cli
pop
call
rolb
outsl
lret
loop
sbb
and
mov
xchg
mov
sub
fdiv
push
rclb
mov
push
xchg
roll
push
lods
insl
inc
and
mov
out
inc
xchg
outsb
push
in
add
pop
scas
xchg
and
call
jmp
sub
fwait
xchg
movsb
insb
mov
jge
mov
mov
jnp
adc
rol
js
cld
imul
fildll
push
mov
jns
or
push
rcrb
xchg
loopne
push
popa
in
insb
sub
push
icebp
test
xor
jg
pop
out
pusha
shrl
out
cmp
in
hlt
shrb
cltd
sahf
adc
cld
push
cmp
add
insl
test
push
jb
xor
stos
or
roll
pusha
cmp
out
mov
mov
mov
and
lods
test
mov
pop
pop
dec
xlat
jge
mov
test
imul
das
aaa
lcall
hlt
jns
jns
inc
xchg
fdivrl
hlt
push
cmp
xor
cmp
fsts
sub
shll
push
dec
pop
lcall
incb
xor
aaa
sbb
sub
xchg
xchg
rcrl
ffreep
icebp
and
cmp
sub
cmp
push
sub
clc
lret
or
mov
scas
loope
and
mov
into
outsl
sar
mov
hlt
stos
push
int3
shrb
ja
mov
mov
movsl
aad
les
daa
push
xchg
and
adc
cmp
lret
iret
sbb
mov
adc
dec
loope
dec
stos
in
or
cmpsl
xchg
outsb
sub
dec
loop
lods
jns
cmp
cltd
adc
data16
sbb
sub
sahf
lea
in
lret
push
pop
mov
test
and
push
mov
inc
ss
xor
xor
mov
push
pop
gs
out
stos
cld
mov
and
xor
push
add
dec
sti
xlat
pextrw
push
push
in
in
inc
andb
aaa
jo
sbb
push
jns
or
adc
sti
mov
dec
jge
push
xor
js
es
nop
mov
iret
lds
jno
gs
push
popf
in
mov
aad
std
xchg
ffree
mov
pop
xchg
lock
inc
sbb
mov
rcll
daa
push
jns
lcall
fwait
jnp
jnp
dec
inc
rsqrtps
jg
clc
add
int
ljmp
rol
inc
mov
mov
ljmp
xchg
int
sbb
push
lahf
push
jle
push
fwait
addr16
push
sbb
lock
stos
loope
pop
jnp
mov
ss
add
or
and
cmc
jno
pop
sub
adcl
pop
adc
jle
push
xchg
in
mov
sahf
or
xchg
test
jmp
inc
sub
aaa
cli
in
mov
push
mov
fstps
shl
fs
cmpsb
sub
sub
push
dec
sbbl
push
stos
fists
sbb
add
lahf
inc
pop
xchg
js
fwait
push
in
jge
lock
adc
addr16
add
outsl
xor
mov
jmp
dec
mov
xor
das
or
lds
xchg
cwtl
push
cmp
mov
jecxz
test
xor
minps
lods
sbb
aaa
and
lret
cmp
leave
xchg
int3
and
sub
push
in
mov
mov
push
or
xchg
push
adcb
testb
rcll
cmpsb
pop
xchg
inc
sbb
xchg
hlt
push
pop
mov
test
lods
mov
movsb
loopne
fistpll
xchg
in
in
add
sub
lea
popf
jns
int
loope
and
jo
lods
adc
mov
dec
pop
hlt
cli
cmp
mov
mov
inc
mov
push
cmp
aam
add
test
cmpsb
ljmp
fldl
test
pop
ss
mov
and
sub
sbb
xor
lods
and
push
jl
nop
push
jae
movsl
dec
addl
cmp
or
enter
sub
push
das
jmp
mov
xor
jno
test
ljmp
inc
fstpl
cmp
out
add
popa
mov
int3
inc
adc
xor
inc
mov
imul
sub
popf
in
negl
ret
sub
stos
jp
jae
out
ficoml
dec
cmpsl
lcall
aaa
in
mov
lcall
jo
ss
fucomip
adc
ret
mov
xor
test
xor
sbb
push
pop
mov
lcall
rorl
jns
les
adc
and
and
cmc
mov
mov
stos
bound
xchg
pop
jnp
pusha
push
scas
out
pcmpgtd
movsb
mov
loopne
test
sub
mov
mov
das
dec
testl
or
lods
ja
leave
inc
das
jbe
cmc
cmpsb
push
xor
aad
imul
aaa
bound
dec
adc
mov
mov
inc
scas
xchg
inc
in
aam
pop
push
sub
insw
or
leave
push
cmpsl
movsl
nop
pop
ljmp
mov
mov
shld
cmp
mov
into
popa
mov
enter
inc
aas
xor
push
js
sub
pop
xor
ret
inc
ja
pop
mov
dec
cwtl
mov
push
loopne
je
xchg
cmp
or
or
mov
rcr
scas
push
daa
bound
leave
jmp
and
xchg
fcmovbe
fwait
shr
mov
push
dec
jae
hlt
aad
das
loope
rclb
inc
in
les
jno
cmc
push
cmp
pop
mov
mov
gs
fildll
or
orl
sbb
js
pop
push
mov
mov
sbb
push
popa
aam
leave
gs
insl
mov
push
push
inc
jecxz
mov
int
push
std
std
and
ds
sbb
out
enter
sub
fildl
int
pop
mov
and
cmc
imul
or
sub
lock
push
and
cmp
ds
pop
dec
bound
movsb
and
aam
add
out
jae
pop
movsb
inc
hlt
ljmp
mov
lret
push
in
xlat
cmp
lahf
jp
sti
in
nop
cs
dec
test
or
mov
jbe
sub
cmp
jmp
cmp
repnz
cs
sbb
xchg
shlb
inc
fcomip
jp
nop
into
cltd
xchg
enter
int3
rclb
lret
jno
jae
adc
orb
adcl
push
ja
pop
sub
mov
jo
dec
test
negl
fld
movsl
mov
imul
loopne
mov
xchg
test
cltd
aas
imul
sahf
jns
arpl
popa
mov
cmp
xor
daa
cmpsl
add
imul
add
lods
jmp
jmp
mov
mov
scas
stc
je
and
nop
stos
mov
or
or
negl
inc
mov
push
mov
stos
cli
rolb
cmp
mov
push
adc
push
imul
xchg
stos
push
fwait
xchg
sub
push
pop
fs
andb
or
mov
jnp
fnsave
jmp
cmpb
add
out
loop
scas
arpl
xor
das
xlat
pusha
ja
es
sbb
leave
lea
arpl
push
sbb
jg
loope
xchg
insl
mov
xchg
cmpsl
dec
mov
cmp
out
jl
mov
sahf
xor
mov
pop
dec
and
fldl
outsl
dec
ret
sbb
sub
add
mov
mov
popa
dec
rcl
xor
cmp
adc
mov
push
xchg
fs
mul
add
add
imul
rorl
in
pop
inc
push
mov
xor
xchg
mov
mov
push
int
jge
shll
aam
out
and
stos
cmp
mov
mov
mov
bnd
je
jne
fucom
push
ja
adc
fadds
cli
jp
popa
stc
mov
jno
sarb
adc
je
push
push
aas
aam
jmp
test
arpl
es
stc
lcall
inc
jns
test
jb
xchg
sbb
ds
or
mov
mov
jg
into
sbb
in
or
inc
movsl
enter
rorl
dec
out
dec
adc
sbb
mov
sub
int3
xchg
fildll
sarl
mov
jne
test
push
lods
mov
in
mov
test
and
dec
mov
scas
stos
jmp
lret
jae
lret
add
pop
sbb
adc
jp
pop
and
mov
jmp
jb
in
dec
movl
push
pop
dec
sbb
mov
xor
xchg
pushf
mov
jns
xor
sbb
js
jge
cld
lcall
int
aad
jmp
das
lds
sbb
xor
cmp
push
push
nop
pop
pop
pop
cli
cltd
inc
add
mov
cs
adc
xor
dec
popf
xor
cmc
xchg
in
cmp
push
mov
adc
es
sub
sbb
push
arpl
pop
sbb
mov
imul
stc
in
fwait
jno
add
pop
scas
loop
cmpsl
mov
push
stc
xchg
jne
mov
inc
push
or
negl
fwait
cwtl
popf
pop
mov
sub
or
push
jae
fwait
mov
lea
cmp
push
cmp
xor
xchg
push
mov
sbb
sub
out
cmp
fldt
fistpl
les
push
mov
jb
mov
cmpsb
fdivrs
inc
add
or
sub
mov
pop
sub
ja
nop
xchg
dec
adc
test
addb
mov
pop
in
imul
subb
push
out
dec
loop
fbstp
fstpl
adcl
je
pop
mov
test
jbe
mov
in
push
aam
dec
cmp
push
sbb
pop
sub
push
xchg
pusha
shlb
int3
in
xchg
jle
arpl
mov
fistl
out
fs
pop
or
mov
cmpsb
inc
mov
mov
and
push
fildl
outsb
sbb
sarl
mov
mov
stc
out
daa
shlb
push
xchg
pop
add
mov
sbb
adc
hlt
fisttps
cmp
pusha
je
nop
insl
lahf
inc
aam
jmp
lcall
cmpsl
add
pop
inc
ss
enter
repz
mov
pop
test
sti
hlt
lahf
jo
cmc
mov
sbb
jae
fdivl
test
mov
mov
sbb
xlat
sub
aaa
aad
push
repnz
pop
mov
fwait
mov
inc
test
mov
or
out
xor
add
push
xor
repz
dec
loop
or
sub
push
jle
cltd
cwtl
pop
test
lock
and
xor
cmp
add
test
icebp
dec
pop
adc
inc
adcb
fimull
lods
out
xchg
roll
jnp
and
inc
lea
push
fsubrs
pop
dec
dec
enter
push
pop
mov
fdivl
rorb
jmp
pextrw
inc
ss
ret
je
jo
mov
daa
mov
xor
arpl
mov
pop
outsb
bound
std
adc
stc
mov
cmp
outsb
andl
packssdw
and
aas
ret
imul
scas
pop
pushf
and
or
lret
and
dec
pop
xor
cmp
add
lahf
mov
jmp
sub
and
lods
mov
cmp
les
adc
shlb
fwait
add
xchg
es
jns
imul
jb
xor
cli
mov
or
adc
mov
push
and
loop
push
mov
or
adc
int
xor
and
jl
pusha
lods
lods
cmp
jge
fdivrl
mov
pop
and
xorl
xchg
jl
mov
stc
clc
or
ror
jae
outsb
cmp
push
xchg
xchg
push
or
in
jl
ret
iret
and
xlat
pop
stos
mov
jp,pn
lea
mov
mov
sbb
fmull
ss
xor
imul
icebp
and
fs
add
int
inc
fmulp
rol
sbb
xchg
jae
jo
clc
mov
jp
push
lcall
sub
out
or
dec
mov
jnp
adc
sbb
adc
addr16
push
aad
popf
inc
sbb
and
cmpsl
inc
js
movsl
out
movsb
jno
push
mov
cmp
mov
out
push
aas
push
pop
mov
in
mov
mov
sbb
in
push
enter
loope
jl
or
inc
cltd
rcl
mov
stos
mov
mov
out
stc
inc
daa
mov
sub
xor
lahf
xchg
mov
ljmp
push
push
fmull
mov
mov
adc
adc
dec
sub
jns
pop
xor
jae
inc
sub
jg
js
dec
jno
pop
movsl
jno
in
pushf
xor
and
dec
jecxz
dec
out
cmp
icebp
push
jo
or
mov
lcall
outsl
lods
gs
cmc
shlb
mov
sbb
cmp
xor
push
ret
push
int3
xchg
call
std
mov
xchg
imul
xchg
pop
fucomp
fsubrp
cmpsb
je
jmp
cs
mov
or
fnstcw
push
mov
test
push
outsl
lcall
xor
xchg
mov
add
push
inc
ljmp
in
xabort
je
pop
cmc
jae
je
xor
jb
sahf
push
mov
and
test
hlt
jb
decb
add
sbb
arpl
decl
push
insl
into
test
movsb
repnz
sbb
mov
scas
and
outsl
mulb
jno
inc
xor
insb
call
lret
push
mov
mov
mov
movsl
mov
xor
dec
lods
adc
lods
mov
cmp
hlt
dec
inc
fdivrs
adc
enter
xor
xor
mov
pushf
dec
pop
adc
out
sbb
inc
mov
hlt
rcrb
pop
xor
insb
out
rolb
sti
push
shl
adc
jle
cmc
sub
nop
stos
mov
push
aas
testl
clc
mov
out
cmovs
test
fcomip
popf
xchg
or
mov
jnp
ljmp
mov
pop
es
stos
jnp
ds
xchg
rclb
test
addr16
movsb
adc
xor
cld
pop
popa
enter
stos
mov
or
inc
mov
jnp
rcr
test
iret
add
enter
cmc
outsb
popf
cmp
dec
adc
push
adc
icebp
xchg
mov
push
mov
cltd
pusha
xorl
scas
daa
or
push
add
out
icebp
mov
cs
xchg
fs
dec
sbb
push
testb
add
std
xchg
pusha
setge
mov
dec
xor
mov
lea
jle
jns
dec
bound
fnstenv
pop
xchg
push
xchg
mov
mov
sub
pop
mov
mov
pop
push
xchg
in
int3
das
inc
ficompl
and
int3
int3
inc
sbb
enter
ret
push
pop
or
pop
rcrl
jbe
pop
sub
pop
inc
mov
cwtl
mov
pop
dec
pop
pushf
fs
popa
ljmp
and
or
mov
in
inc
mov
cmp
fidivrs
nop
in
test
dec
xchg
jp
inc
cmpsb
hlt
mov
pop
rcl
xchg
adc
ret
lret
mov
jo
push
push
push
dec
push
cmp
aas
jno
fcompl
and
cmpsb
push
cmpl
fnstcw
dec
les
sub
in
movl
jae
rcr
cmp
xor
push
jb
xchg
xor
push
jp
and
push
xor
ljmp
loope
sbb
sub
mov
add
mov
xlat
dec
jae
push
sbb
fsubs
ret
mov
cmp
cltd
fbld
push
fucomip
into
gs
sbb
mov
into
hlt
mov
movsl
arpl
daa
enter
push
outsl
repnz
dec
jmp
std
das
add
push
aad
loop
ja
mov
mov
ret
lret
out
out
shl
mov
cmp
mov
xchg
ror
gs
insb
and
or
or
mov
xchg
cltd
xor
jp
popf
or
dec
test
pop
mov
lcall
xchg
push
je
int3
sub
and
jmp
or
adc
xchg
xchg
xor
adc
lret
jb
mov
mov
jmp
lahf
adc
repz
xchg
sbb
loop
pop
in
cltd
lods
jle
mov
mov
mov
xchg
mov
insl
jo
jo
insl
xchg
mov
jo
dec
xor
fwait
test
fs
ljmp
aam
fldcw
repnz
and
sysret
icebp
popf
xor
sbb
sbb
sub
jl
fsubp
and
and
addl
cmp
into
lcall
add
jne
lock
push
pop
scas
push
and
xchg
in
or
in
ja
push
or
filds
cmp
insl
inc
lock
mov
aam
stos
in
das
fisubs
fistps
out
dec
rorb
cmpsb
xor
in
inc
sbb
insl
ret
imul
int
repz
mov
mov
dec
or
in
cmpl
lahf
xchg
cmp
and
cli
adc
xchg
insb
cltd
mov
pusha
adc
arpl
add
fisubl
sbb
out
cltd
or
mov
sub
push
sbb
push
cmp
lcall
xor
dec
imulb
xchg
fstp
cltd
aaa
std
push
cmp
inc
mov
aam
xchg
into
xor
dec
stos
add
cmc
std
xor
mov
jo
jge
cmp
in
in
inc
sbb
adcb
fildll
xor
or
sbb
and
sti
shll
jae
arpl
cmp
adc
mov
mov
hlt
pop
adc
loopne
add
cmc
cmpsl
into
int3
leave
outsb
ret
decl
xor
sbb
xor
sbb
popf
iret
push
inc
mov
out
cmpsl
sti
testb
push
addr16
andl
lods
adcb
ja
pop
jge
jecxz
adc
jnp
add
mov
int
xchg
xor
jle
bound
mov
enter
adc
sbb
adc
bound
mov
and
or
xor
mov
mov
push
in
pop
cs
leave
jp
pop
pop
lahf
cmp
mov
rcrb
mov
call
fildl
adc
ss
fldenv
loop
fistpl
dec
inc
lcall
ljmp
add
lock
int3
cli
inc
int3
shll
xchg
adc
loope,pn
inc
clc
sbb
out
enter
imul
out
xchg
inc
dec
or
cmp
in
shll
push
mov
test
xchg
rolb
ret
sbb
and
xchg
push
ja
sbb
adc
dec
mov
dec
dec
push
lret
push
or
pop
mov
dec
and
push
stos
push
mov
adc
jmp
push
bound
js
ljmp
je
or
and
push
test
sti
cmp
dec
ja
pop
push
testb
push
jns
pop
std
push
mov
pop
lods
xchg
addr16
dec
scas
sub
loop
inc
jg
or
dec
inc
fstps
and
gs
or
leave
fistps
bound
add
mov
and
lock
push
lcall
or
lock
xorl
add
imul
mov
adc
lret
lock
inc
orb
xor
test
leave
pop
idiv
jle
xor
in
inc
test
inc
rcll
xchg
testl
mov
js
xor
sbb
ss
xchg
dec
jp
sub
sbb
ss
cmpsl
dec
mov
push
ss
js
mov
pop
sbb
and
mov
repnz
mov
fbstp
loop
fists
je
addr16
xchg
inc
mov
xchg
xlat
mov
xchg
jp
dec
ss
xchg
mov
xlat
mov
fwait
or
mov
dec
xor
roll
loopne
jnp
pop
repz
xchg
or
mov
and
scas
pop
test
rcl
hlt
jl
pop
roll
dec
lret
test
push
inc
jle
movb
or
rorb
dec
repz
js
insb
cld
cmp
push
mov
add
xor
push
loope
outsl
fwait
daa
pushl
xchg
and
andb
popa
xchg
dec
push
mov
jnp
dec
and
shlb
jae
add
cld
repnz
xchg
jle
add
mov
sub
dec
out
imul
lods
push
addr16
cmpsl
sti
rcrl
mov
mov
dec
sub
out
push
dec
fstpt
dec
inc
sbb
pop
into
hlt
divb
lret
in
adc
mov
dec
mov
aad
hlt
pusha
cmp
adc
push
test
sbb
sub
dec
les
push
or
pop
xor
cmc
cmp
push
stc
dec
mov
mov
mov
xor
mov
aam
ja
out
sbb
aam
dec
push
ss
adc
cmc
cmp
out
sub
jnp
movsl
mov
pop
js
cmp
xchg
push
xchg
cmp
ljmp
dec
iret
sarb
xchg
and
cmp
mov
jmp
mov
sbb
jne
cmp
mov
loop
xchg
faddl
nop
js
mov
mov
pop
rorl
push
out
enter
in
imul
shll
and
test
outsl
mov
inc
and
sbbb
cwtl
decb
pop
mov
ss
dec
jno
pop
push
clc
test
in
jns
daa
push
mov
lock
push
sti
cmp
pop
xor
roll
mov
and
cmpsb
mull
and
lock
xchg
insb
mov
lret
and
sub
invd
xor
mov
pop
inc
xchg
add
mov
cmp
mov
ljmp
in
dec
ja
pop
loope
lea
adc
mov
cmp
adc
scas
mov
jge
imul
mov
dec
adc
xchg
jecxz
sarb
pop
mov
cmpsl
nop
out
idivl
ret
sti
cli
mov
outsb
pop
cli
mov
frstor
lods
inc
and
sbb
xor
or
fucomp
adc
inc
mov
mov
test
sahf
fsts
pop
add
inc
xchg
xchg
das
sub
jb
xor
mov
mov
xor
mov
movl
adc
sub
adc
scas
stos
insl
inc
xchg
in
push
jno
mov
jecxz
leave
adc
add
mov
xor
mov
push
or
jmp
outsb
xchg
notl
adc
fucom
ss
enter
mov
adc
xor
dec
testb
or
pop
loope
rclb
shlb
cmp
pop
xchg
popa
int3
pop
sarl
fsub
mov
dec
jbe
sub
adc
xor
xor
mov
ret
jne
jae
sub
jb
fisubl
add
lcall
inc
dec
in
xor
xchg
je
ss
mov
hlt
int
and
jbe
adc
or
int3
das
dec
rcl
mov
je
and
push
cmp
add
push
dec
das
mov
icebp
mov
mov
pop
adc
fsubs
or
test
sub
roll
sbb
sbb
cld
jg
xor
push
pop
repz
or
inc
add
sbb
cmpsl
and
and
mov
outsl
addr16
mov
cmp
movsb
push
lea
or
stos
stos
daa
add
pop
popa
mov
xor
or
mov
outsb
and
test
adc
fmull
sbb
sbb
scas
test
aas
leave
dec
imul
pop
sarl
pusha
in
stos
pop
sti
cmp
pop
mov
pop
adc
insb
jmp
push
pop
cmp
cmpsb
and
stc
fisubs
jle
mov
in
push
xor
adc
nop
jle
dec
in
xchg
insl
pop
rcrb
adc
mov
jbe
dec
dec
sub
fstps
sbb
pop
jno
and
and
inc
cmp
adc
push
imul
mov
push
xchg
fbstp
jnp
cmc
ss
cld
repz
jns
push
cmp
mov
jmp
adc
xchg
dec
inc
pop
sbb
sti
js
jb
adc
xor
mov
dec
das
mov
cmpsl
xchg
cltd
out
dec
stc
sbb
rcll
imul
jae
or
and
cmpl
insb
mov
mov
pop
xchg
and
sahf
je
iret
ret
push
mov
jns
push
xor
scas
movsl
outsl
out
push
daa
push
lds
lods
dec
test
cmc
mov
jae
jnp
test
outsl
inc
push
dec
and
inc
test
jmp
sub
adc
mov
sti
add
rcrb
cmp
rolb
loop
pusha
mov
imulb
adcb
mov
enter
pop
fucomp
das
push
mov
pushf
insb
lret
or
fdivl
jae
push
xorb
xor
push
or
mov
adcb
mov
adc
dec
pop
adc
icebp
lea
jo
cmp
pop
or
cld
cmp
daa
in
jg
mull
int
lahf
or
mov
and
and
sti
xor
test
cs
popf
dec
xchg
pop
addb
scas
cwtl
imul
movsb
cld
lods
mov
fwait
mov
roll
dec
out
aas
loop
nop
mov
mov
inc
pop
arpl
ret
inc
add
mov
mov
mov
adc
jbe
jle
ss
aam
sbb
jmp
pusha
clc
pop
mov
and
int3
sbb
int
inc
cld
movsb
mov
xor
ret
xchg
iret
int3
xchg
nop
scas
lods
ret
xor
test
in
xor
sub
xchg
xchg
test
in
mov
jae
jmp
roll
popa
jmp
pop
stc
xor
imul
xchg
xor
out
test
leave
and
popa
add
pushf
sti
pop
out
fisubs
lret
sti
jns
ret
sbb
mov
dec
jl
xchg
mov
mov
add
cmpsb
mov
pop
imul
jmp
stos
xor
mov
test
jl
dec
mov
icebp
push
fildl
addb
and
push
fstpl
cmp
cmpsl
mov
sbb
ret
fists
ret
pushf
sub
repz
jmp
push
pop
pop
je
insb
iret
sub
add
outsl
test
adc
xor
mov
jae
divb
movl
sbb
push
cmpsb
roll
push
inc
rcll
aad
jecxz
je
mov
scas
push
lds
in
inc
cmp
lea
loope
mov
sub
test
jle
push
dec
stc
jae
pop
ds
rcll
bound
repz
fildll
popf
enter
sub
stos
lcall
repz
lea
scas
popa
int3
mov
or
push
int3
cmp
fdivr
rorb
je
push
fsubs
dec
mov
in
fnstcw
push
cmpl
addr16
imul
lods
adc
das
aaa
push
push
mov
iret
lea
out
sub
dec
das
out
cmp
mov
sbb
push
mov
loop
jecxz
jnp
out
push
cli
mov
fwait
out
add
cmpsb
jnp
clc
pusha
aam
bound
in
sbb
pusha
xchg
pop
adc
push
lds
mov
outsb
or
insb
mov
aam
cs
ja
adc
dec
bound
stc
scas
enter
and
ret
sti
cli
fstpl
xor
ret
push
test
repnz
or
icebp
xchg
sti
mov
mov
xchg
xlat
adc
mov
daa
mov
mov
out
sti
and
out
je
outsb
xor
mov
or
rolb
inc
daa
ja
sbb
loope
mov
dec
mov
es
test
adc
xchg
and
movsb
jno
in
stos
in
sub
outsl
adc
push
das
insl
stc
jbe
out
xchg
outsb
push
ret
mov
cli
mov
lret
mov
jp
cmp
iret
sbb
inc
ret
sbb
ja
mov
addr16
pop
orl
push
cwtl
pop
lahf
imul
add
jl
xchg
mov
cmp
jbe
movsl
and
sub
pop
ljmp
dec
xchg
out
test
fwait
test
pop
xchg
ss
ret
lods
sbb
sahf
xchg
push
scas
pop
lahf
rorb
jle
andl
aas
push
mov
lret
jg
inc
push
ds
add
dec
adc
xchg
pop
into
cwtl
dec
int3
and
ds
cmp
adc
xchg
adc
mov
ret
add
sub
jno
pushf
push
inc
jge
and
pop
out
clc
nop
inc
cmpsl
in
lock
sbb
or
dec
cmp
jbe
enter
stos
mov
dec
xchg
push
mov
cmpsl
dec
add
sub
testb
mov
pop
sbb
in
rcrb
aas
add
jns
int3
call
xor
mov
mov
mov
mov
test
jle
scas
push
popa
cmp
sub
incb
out
xchg
mov
pop
icebp
add
sbb
xchg
ret
jno
and
cmp
jbe
icebp
jmp
shll
mov
dec
out
sbb
pop
popa
cmpsl
jb
pop
push
repz
pop
fwait
xchg
movb
sub
insb
and
lea
sbbl
adc
jns
or
mov
xchg
cmp
sti
int
xchg
loop
and
lds
add
push
push
out
outsb
pop
mov
cmp
mov
inc
test
xchg
ljmp
jge
aas
addb
jmp
xchg
mov
int
sub
mov
jno
rorl
xorb
outsb
inc
outsb
clc
mov
jge
les
cld
xlat
int3
enter
es
stos
mov
jp
and
adc
or
inc
shrl
lock
ljmp
xchg
mov
lods
sbb
jmp
fsubs
cmpsb
adc
lahf
pushf
xchg
mov
push
out
mov
xor
cmpsl
insl
push
movsl
arpl
adc
insl
iret
and
aad
dec
inc
and
out
sub
adc
sub
cmpsb
push
or
fs
sub
push
or
insl
jae
jge
add
sbb
rolb
sbb
pop
sbb
xchg
xor
popa
mov
inc
mov
adc
test
sti
mov
cld
push
scas
test
and
mov
mov
ficoms
xor
xor
adc
mov
call
mov
cmpb
sbb
and
pop
xor
loope
icebp
adc
or
in
push
mov
daa
sti
stc
insb
bound
mov
pop
out
movsb
mov
or
sub
pusha
add
bound
jl
adc
inc
inc
movsl
pop
cmp
es
and
cmp
inc
adc
popf
or
jecxz
mov
or
push
enter
mov
jb
int3
mov
cmpb
fisubrs
cmp
or
xlat
mov
fs
dec
mov
dec
stos
test
sti
mov
xlat
pop
clc
insb
lods
inc
xor
cli
add
dec
loop
pop
push
jmp
xchg
in
dec
sub
fldl2e
sub
sbb
push
inc
out
push
subl
icebp
xchg
pop
fdivs
aas
js
sbb
std
cmpsl
pop
jle
lea
fbld
xchg
pop
leave
mov
dec
insl
and
mov
mov
js
adc
jo
imul
test
push
sub
repz
cli
aas
shrb
loop
push
and
frstor
or
xor
pusha
add
mov
xor
xlat
sub
stos
adc
mov
es
xor
rcrb
stos
mov
lahf
pop
out
xor
inc
adc
imull
dec
fs
in
sbb
hlt
insl
mov
sub
dec
adc
fs
fs
push
scas
sub
adc
sub
loopne
sbb
dec
repz
aad
or
push
loope
jo
ja
aas
adc
test
test
popa
add
or
jb
loopne
ret
adc
mov
lods
push
dec
mov
cwtl
fidivrs
mov
fisttps
stc
repnz
mov
repz
shl
ja
add
mov
movsl
mov
jae
add
adc
jecxz
jl
push
dec
pop
xchg
popf
push
push
jne
test
sti
fcmovu
cmp
leave
xchg
xchg
add
gs
mov
test
push
jmp
arpl
xchg
rorb
mov
and
clc
shrl
fs
mov
xor
addr16
mov
push
push
pushf
nop
cld
inc
out
jle
call
sahf
in
addr16
rolb
data16
and
shlb
push
enter
mov
inc
sub
pop
mov
rorb
fs
sub
and
xlat
movsb
std
aas
test
sub
ja
pushf
je
imull
fimuls
pop
dec
and
movsb
push
add
mov
inc
xor
test
pop
imul
inc
scas
movsb
std
adc
adc
fistpl
into
fwait
or
je
push
jo
subl
fnstcw
xorl
and
jnp
xchg
jmp
cmpsl
push
jnp
jbe
mov
sub
mov
mov
cwtl
cmp
jp
out
adc
dec
outsl
pushf
dec
nop
ss
cmpsb
inc
fistps
sbb
pop
sbb
or
sbb
or
arpl
fiaddl
and
cmpsl
sub
fld1
or
adc
sub
jge
lahf
rcll
or
imull
inc
sbb
adc
fwait
and
and
sarb
je
mov
add
mov
popf
int3
sbb
jns
shrl
enter
test
stos
mov
fidivl
fimull
push
stos
jmp
ror
daa
int3
iret
push
push
jns
mov
fisttps
loope
stc
jbe
into
sbb
mov
push
inc
push
stos
sbb
push
xor
out
or
jmp
fs
xlat
add
add
icebp
and
and
hlt
test
pop
cmpsl
jb
mov
jne
fldl2e
jg
adc
fsub
imul
std
adc
mov
mov
aaa
std
outsb
push
cmpsb
cli
arpl
stos
pop
lret
mov
xchg
jmp
mov
aas
add
insb
sbb
and
fimull
xor
mov
mov
es
pop
sahf
rcr
mov
outsb
mov
loope
aam
xchg
push
outsb
fiaddl
cmpsl
push
dec
hlt
shrb
sarl
pop
fisttps
mov
push
lret
sub
sbb
test
test
popa
jnp
ljmp
clc
cmp
and
mov
dec
pop
mov
xorb
or
cmpsl
jmp
push
pop
jge
pop
out
test
or
and
mov
leave
mov
addr16
sub
test
mov
fnstcw
mov
jl
cmpsl
js
mov
subb
mov
movsb
add
loope
rorl
clc
cltd
or
maxps
jb
inc
push
push
lahf
push
pop
sub
jle
mov
pushf
mov
ljmp
xchg
pusha
jecxz
fsubs
shll
jno
mov
and
gs
lods
xchg
repz
bound
and
sub
mov
cmp
fwait
xor
cmp
inc
mov
imul
lea
dec
sbb
and
mov
xchg
push
out
adc
daa
cmp
push
pop
mov
imul
push
adc
mov
ss
out
mov
mov
pop
adc
cmp
or
fwait
push
push
mov
adcl
fisttpll
out
aad
mov
or
in
push
sub
sbb
add
loope
cmp
xlat
loopne
jne
adc
lahf
stos
push
lods
aaa
scas
leave
loop
jo
test
std
jae
sbb
sbb
lret
mov
pop
and
cmpsb
addr16
jae
in
push
lret
dec
insl
xlat
pop
fdivs
push
iret
sub
call
daa
adc
and
in
lds
imul
sti
dec
pushf
pop
xor
mov
ss
xor
std
enter
mov
loop
aam
test
cmpsb
addb
push
dec
add
or
and
je
lods
into
ror
sbb
push
not
mov
fidivrs
ret
pusha
and
imul
shlb
cltd
sub
adc
addr16
mov
sbb
dec
sbb
pop
jg
sbb
xchg
and
or
cmovp
repz
jae
fxch
xchg
push
xlat
adc
rorl
and
js
add
in
inc
xchg
mov
push
push
mov
xor
mov
xchg
in
adc
adc
sub
lret
mov
push
add
outsl
adc
mov
inc
adc
sahf
arpl
or
inc
in
push
and
push
and
xchg
xchg
inc
add
xchg
dec
xchg
ret
mov
int3
lods
inc
bound
dec
insl
das
xchg
sub
or
adc
cmpsl
jg
cld
lret
shrl
or
lcall
sub
inc
mov
sbb
or
xchg
rolb
push
outsb
adc
test
div
sahf
or
in
cmp
sub
lods
mov
popa
mov
mov
ja
sbb
pushf
std
je
push
push
daa
inc
adc
mov
push
stos
das
scas
or
fildl
jp
and
pop
xor
jp
roll
outsb
insl
xchg
in
stc
xchg
mov
loope
repnz
das
mov
adc
push
jg
fstl
shl
lods
xchg
jae
push
add
add
icebp
push
movsb
mov
ret
dec
mov
mov
mov
mov
lahf
fstpl
outsl
jg
rol
inc
out
lret
outsl
cli
cld
mov
pop
popf
fisttpll
js
push
xor
cmp
sub
jmp
das
cmc
xor
jecxz
lcall
psraw
addr16
into
xlat
cld
movsl
ret
push
lock
xor
and
pop
cmp
aas
xor
pop
stc
xlat
push
sub
ja
mov
xchg
jno
inc
dec
je
jle
push
mov
inc
dec
fidivrs
iret
push
jbe
dec
sub
std
lcall
pusha
or
and
push
test
push
scas
dec
out
pop
in
sarl
call
ja
imul
xchg
push
mov
nop
out
gs
pop
test
mov
and
loopne
imul
xchg
fnop
sub
aad
outsl
fsubs
dec
popf
inc
fistps
cld
or
mov
pop
inc
xchg
push
push
jnp
push
cmp
pushf
add
jge
fs
sub
add
sbb
pop
adc
and
insl
movsb
xchg
adc
std
mov
mov
fcoms
cmp
lret
jl
xchg
hlt
out
pop
jl
jns
mov
in
adc
mov
fcomps
nop
js
mulb
mov
out
data16
adc
ret
adc
int3
mov
int3
fneni(8087
in
int3
push
test
lock
jb
mov
ja
cmpsb
jecxz
cmp
add
sbb
cmpsl
sbb
add
pop
pop
sbb
sahf
loopne
dec
mov
cmc
sub
and
lock
adc
xchg
add
int
jmp
fbstp
lds
push
stos
push
adc
hlt
adc
push
cmpsb
pop
fbld
cmp
in
fbld
inc
push
ljmp
sbb
pushf
test
dec
ds
lds
jnp
sbb
fsubrl
ja
mov
and
lret
fmull
mov
scas
xor
dec
ds
clc
addr16
ds
sub
mov
cld
xor
daa
test
call
and
cld
inc
and
cmp
or
sbb
push
jb
insw
scas
in
mov
sub
call
subb
inc
sbb
cmpl
mov
mov
wbinvd
mov
fcoms
pop
fcomps
sub
repz
mov
mov
clc
in
push
lock
mov
sbb
cmp
popf
sbb
sahf
xchg
push
jne
add
scas
push
fs
clc
fnstsw
lods
aam
mov
into
mov
mov
dec
fstpt
and
inc
aaa
xor
aam
pop
lods
daa
loope
stc
adc
sub
sbb
adc
das
aad
addr16
fdivrl
jl
into
sub
xor
in
lods
das
daa
jae
jno
sub
outsb
out
xchg
int
pop
orl
fisttps
jle
jmp
aas
mov
je
mov
lds
push
xchg
test
and
aam
sbbb
adc
stc
shlb
test
inc
mov
hlt
les
jecxz
mov
stos
nop
jecxz
loope
dec
imul
ds
cmpsb
push
outsl
sub
push
outsb
mov
pop
xor
jns
push
ror
ds
mov
inc
and
sahf
sbbl
hlt
add
sahf
lock
sti
cmp
js
fwait
adc
rolb
inc
pop
lret
das
add
rol
dec
mov
fsubs
repnz
movsb
push
fs
add
rclb
and
test
inc
adc
and
dec
jp
je
ds
pusha
mov
lock
aas
out
xor
mov
bound
sub
pop
movsl
jge
frstor
sub
cld
adc
sub
mov
call
test
add
loop
test
jo
sub
insb
mov
popa
fisubrl
imul
add
sub
mov
push
fsubrs
popa
iret
scas
in
mov
cvtpi2ps
les
adc
cmp
lret
cs
leave
add
or
jecxz
mov
inc
add
fs
ss
insl
movsl
cld
dec
shlb
pop
sbb
repnz
lods
aad
xor
sub
adc
push
out
loopne
dec
insb
adc
cmc
add
leave
adc
mov
imul
mov
loop
stos
jns
dec
add
popl
push
push
xor
mov
data16
idivl
fstpl
mov
xor
dec
out
dec
stc
dec
push
stos
sbb
imul
or
mov
xor
inc
in
sub
add
aaa
mov
xchg
pop
lds
stos
popf
jb
push
push
add
and
dec
sub
cmp
adc
mov
sahf
fwait
out
jg
ret
mov
inc
and
dec
mov
and
scas
xlat
inc
cld
imul
cmc
jne
mov
jmp
lods
nop
mov
push
cld
call
stos
clc
cs
jnp
jns
jae
sahf
dec
adc
mov
mov
dec
negl
je
sub
pop
xlat
dec
lods
movsl
hlt
sub
push
mov
stos
or
lea
stc
push
test
call
je
mov
test
jb
mov
xchg
clc
into
mov
enter
pusha
dec
fldt
bound
aam
test
add
jno
jl
add
add
push
cmp
call
jecxz
pop
repnz
repnz
dec
ret
jle
andl
inc
repz
rolb
dec
clc
add
sbb
adc
push
fsts
test
lock
jle
out
dec
ja
out
push
scas
lock
or
or
push
mov
mov
pop
or
aas
lods
pusha
and
loope
jle
sub
jp
pop
xchg
cwtl
cs
or
ret
pop
and
mov
push
insb
ljmp
jae
loopne
jo
leave
gs
cli
dec
pop
mov
inc
outsl
push
sti
popf
push
cli
jb
test
arpl
pusha
adc
mov
push
pop
inc
ret
jb
loope
test
and
add
add
out
xchg
fldl
dec
inc
shrl
lods
dec
leave
inc
xor
lret
cmpsl
mov
jns
test
push
xor
inc
xchg
imul
shrb
in
sub
inc
das
xor
sub
mov
data16
jns
pop
mov
push
push
popa
test
lcall
or
xor
imul
loopne
pusha
jo
out
mov
dec
idivl
push
push
rcll
mov
std
jge
ljmp
iret
fisubrl
ljmp
cmp
adc
or
mov
adc
xchg
push
push
mov
cwtl
mov
push
mov
out
cltd
sbb
sbb
adc
addl
jge
add
push
push
in
jge
test
in
sti
imul
mov
push
mov
movsl
out
mov
fistl
mov
sub
jl
or
lcall
ljmp
cmp
mov
inc
cmpsb
adc
mov
gs
sub
and
mov
lods
mov
dec
sbb
mov
int3
sub
pop
push
in
xchg
popa
push
sti
sbbb
mov
mov
lea
and
imul
adc
popa
aad
les
push
jno
idivb
inc
xlat
addr16
mov
int
fsubs
loope
lds
adc
xor
jnp
fimull
std
js
cmp
or
pop
pop
das
pop
dec
pop
es
adc
jne
inc
jne
rcr
mov
insl
icebp
mov
int
das
leave
xchg
sbb
fcomps
loope
sbb
mov
sahf
push
pop
push
push
insl
cli
fldl
push
inc
fcmovnu
int
cwtl
aam
cmc
in
loop
fstpl
bound
shll
je
fcmovne
sub
dec
or
push
dec
mov
add
loop
inc
aaa
inc
scas
repz
jae
movsl
mov
aaa
imul
orb
fstl
xchg
adcb
cmp
push
dec
cmp
cmp
pop
int3
xchg
sbb
ror
mov
lods
inc
inc
mov
jo
jecxz
and
lret
or
cs
add
ds
jns
insb
inc
pop
cltd
adc
mov
xchg
aam
xchg
cmpsl
je
inc
fsubl
mov
mov
adc
xor
inc
cli
mov
adc
adc
fwait
adc
xor
inc
in
xor
adc
out
xchg
cmpsb
mov
rcrl
xchg
mov
fimuls
push
pop
pop
popa
xchg
orl
pop
movsl
add
jno
inc
jne
add
fst
cmp
ss
lea
and
jns
dec
mov
movsl
stos
xchg
popf
xchg
loope
push
lock
sub
lcall
repnz
pop
bound
pop
loop
pop
sbb
sub
bound
xor
shrl
adc
sub
sbb
mov
jbe
idiv
repnz
popa
dec
add
or
mov
daa
outsb
iret
out
outsb
into
or
jbe
sbb
xchg
cmpsb
es
fistpll
jle
sbb
loop
and
push
jmp
xchg
push
pop
push
scas
pop
adc
dec
shll
divl
adc
or
in
cmpsl
scas
popa
cmpsl
jns
es
flds
cmp
xor
out
jl
xor
add
imul
arpl
sub
jns
adc
rorb
inc
nop
pop
pusha
cmp
mov
and
scas
fwait
xchg
outsb
mov
ret
bound
fs
xchg
iret
and
test
xor
pop
test
sbb
jnp
jns
inc
fidivrl
icebp
loop
fcmovne
inc
xchg
fs
push
mov
jb
jno
popf
jbe
push
loopne
pop
test
loopne
cmpb
pop
sahf
stc
or
data16
rorb
orl
rcll
cmp
lock
mov
sbb
nop
out
xchg
je
dec
xor
js
push
xor
xchg
icebp
xor
mov
adc
scas
loop
mov
cltd
into
fwait
xchg
xchg
add
push
pop
cltd
movsl
adcb
xor
into
cmp
push
jno
inc
adc
xor
jle
dec
xchg
dec
pop
sub
xchg
lods
les
popa
adc
popf
aam
cmpsl
ss
add
pop
dec
shlb
leave
mov
dec
adc
add
and
cld
addr16
mov
repz
jns
insb
hlt
push
insl
mov
dec
inc
mov
cli
popa
in
jb
jge
rclb
es
jbe
pop
lods
lahf
dec
xchg
push
xor
lods
test
and
pop
inc
dec
add
rcr
pop
fucomp
std
out
sbb
xchg
jbe
push
lret
clc
push
lods
flds
jle
or
popl
jno
cmp
outsb
mov
in
cltd
addr16
cmp
out
fiaddl
repnz
xchg
jns
dec
mov
scas
into
iret
adc
mov
xchg
pop
cmp
gs
dec
pop
add
inc
xlat
repnz
into
mov
cmp
imul
sub
movsb
lret
mov
pop
push
add
and
mov
dec
lods
sbb
movsl
xchg
xchg
jmp
out
pop
xchg
in
jecxz
pop
mov
xchg
out
das
pop
pop
xor
mov
pop
sbb
int
ffree
jmp
mov
push
dec
pop
push
mov
inc
aaa
cmpsl
sub
out
in
lods
xor
dec
mov
or
sbb
pop
mov
cmp
push
pop
daa
add
adc
xchg
pop
mulb
cmp
dec
pop
push
lea
cmpsb
pop
stos
mov
jmp
and
push
cmp
scas
movsb
xchg
stos
xchg
jmp
fstpl
pop
mov
xor
mov
je
mov
mov
in
mov
lods
stos
sub
jnp
push
pushf
mov
mov
inc
clc
mov
jns
and
sti
iret
clc
inc
lods
fisttpll
push
xchg
pop
push
lret
shr
rcl
adc
jp
sbb
ret
or
in
sbb
enter
xlat
push
push
add
cmpsl
ljmp
jb
dec
mov
mov
testl
lods
fsubrs
inc
cwtl
push
pop
sub
aad
dec
addb
js
mov
sbb
sub
mov
xchg
lahf
cmc
nop
out
cmp
lcall
scas
mov
and
mov
fisubs
ja
les
aad
adc
xor
adc
movsb
adc
hlt
inc
iret
pusha
shrl
aad
insl
mov
mov
xor
out
hlt
ja
jg
movsb
movsb
stos
out
arpl
outsb
push
cmc
lds
pop
add
lret
iret
pushf
push
scas
xchg
sbb
push
and
arpl
mov
pushw
mov
pop
test
mov
test
ret
fcoms
adc
mov
aam
pop
jmp
movb
sti
dec
ja
xchg
push
push
inc
xchg
stc
cs
cmpsb
repz
dec
sti
inc
cld
inc
jne
pop
mov
in
pop
inc
call
fnsave
in
xchg
xor
push
movsl
movsl
xchg
test
mov
shl
push
mov
mov
fdivrs
iret
fcompl
cmpsb
shl
or
insb
lds
pop
sub
lret
negl
or
mulb
push
pop
sbb
and
mov
mov
cmp
inc
outsb
xchg
xchg
sub
inc
mov
jg
inc
imulb
mov
orl
inc
adc
mov
repz
mov
je
sbb
in
ds
fmuls
adc
aas
mov
cmp
add
aam
inc
sbb
mov
outsb
leave
lds
arpl
fs
daa
sti
sti
push
cmp
xlat
enter
push
fisubrl
aad
icebp
push
dec
fwait
test
or
xchg
movsb
lock
xchg
mov
outsl
dec
dec
addr16
inc
lods
mov
fistpl
fsubs
xor
fistps
stos
jne
cmc
xchg
mov
rorl
sub
stc
xor
rolb
test
push
out
dec
mov
xor
dec
mov
mov
xor
xor
cld
sbb
scas
hlt
push
ljmp
cmp
push
fadd
jl
mov
jne
testb
pop
ja
loop
repnz
ror
cmp
push
je
add
cmc
push
xor
fsubrl
cmpsl
jb
xchg
mov
sub
arpl
mov
mov
mov
daa
fmul
lock
mov
mov
arpl
push
cmpsl
push
fs
out
cmp
test
call
sbb
inc
fnsave
sbb
xchg
xor
xchg
dec
stos
xchg
push
nop
imul
int
xor
xorl
lret
jne
insl
dec
sahf
inc
dec
inc
jmp
add
dec
mov
les
mov
cmc
sub
outsb
popf
lds
jno
sbb
sbb
decl
jg
mov
jge
sarb
test
das
fldt
popa
in
inc
add
pop
cmp
popf
jle
lret
sbb
in
scas
loop
stc
push
es
mov
pop
aam
subb
jno
and
lea
pusha
sub
das
sbb
shrb
bound
inc
movsb
inc
ja
lret
and
inc
call
nop
aam
daa
and
mov
sahf
dec
cltd
stc
ja
cmp
push
mov
aam
inc
sub
jmp
arpl
sarb
dec
lea
mov
jge
mov
pop
xor
fxch
cs
sarb
iret
jbe
push
aas
lretw
ljmp
mov
leave
jo
adc
orb
jo
xor
jmp
fcomps
dec
subl
stos
fcmovnb
mov
or
adc
mov
mov
jno
stos
cmc
sub
pop
push
mov
mov
cmpsl
aas
inc
mov
cmc
add
pop
mov
das
push
dec
mov
mov
push
add
cld
xchg
cmpsb
inc
adc
push
dec
outsb
xor
sahf
mov
ja
cmp
jae
push
push
adc
insb
arpl
inc
mov
mov
scas
mov
aas
inc
in
dec
stos
add
rcll
imul
popf
pop
addl
loope
jbe
pop
out
sub
out
bound
adc
or
or
mov
push
or
pop
xor
jnp
stos
push
loopne
rorl
mov
test
inc
mov
cmpsl
dec
jl
push
out
repnz
mov
sub
outsb
or
or
or
ret
lret
aaa
imul
aad
fdivr
subl
cld
pop
fnstsw
movsl
jno
jecxz
test
outsl
cmp
mov
dec
dec
sub
push
inc
fstpl
xchg
in
addl
sbb
out
jbe
in
scas
xor
inc
jne
ss
xor
mov
jno
and
shrl
clc
inc
shrb
sbb
add
enter
insb
in
enter
ds
shrb
and
stos
sub
xor
xchg
scas
in
outsl
lods
lods
pop
mov
push
mov
mov
mov
shll
cmpsb
lods
pop
nop
xchg
insl
and
cmp
pop
cltd
push
adc
pop
dec
jae
or
ror
xchg
mov
jmp
mov
add
lret
lds
push
ret
jg
sbb
sbb
sub
js
inc
int
adcb
adc
cmp
lock
push
jecxz
test
cmc
cwtl
sbb
jg
mov
gs
shrl
lcall
push
imul
fcmovnb
fisubl
js
mov
add
dec
cmp
jmp
cmp
add
mov
dec
aas
outsb
ret
push
stos
jnp
arpl
imul
lcall
xchg
sub
xor
out
cld
movsl
or
mov
pop
jl
ret
and
push
add
push
jb
jo
cld
in
and
loop
fldenv
jmp
jae
gs
mov
or
mov
add
pushf
insb
leave
jle
dec
push
out
sbb
dec
xchg
aam
pop
or
call
jnp
jp
iret
dec
rclb
call
fbld
xchg
xchg
cmp
loopne
lods
adc
into
cltd
ljmp
fbstp
dec
cmc
jmp
out
or
jle
stos
clc
dec
push
notb
movsb
shll
fisubl
test
sbb
adc
mov
fistpll
loope
out
les
xor
sub
adcl
pop
xchg
cli
mov
pop
ret
fnstenv
xchg
cmpb
cmpsl
subl
lds
or
mov
sub
loope
hlt
pusha
mov
xchg
cmpsl
pop
adc
rolb
or
mov
or
push
in
lods
dec
lret
adc
aaa
add
lret
jno
dec
mov
addb
icebp
mov
sub
mov
pop
adcb
icebp
xchg
mov
add
cmc
lret
xchg
lods
sbb
dec
icebp
or
movsl
pushf
dec
push
sbb
cmp
cmpsl
insb
pop
push
enter
jno
cli
pop
test
jp
lea
xchg
pusha
cmc
mov
push
in
imulb
pop
in
dec
inc
and
js
pushf
or
dec
aad
xchg
mov
mov
scas
call
sbb
loopne
popa
sbbl
sahf
and
xchg
jp
ret
mov
xor
lret
addr16
popf
or
pop
ficompl
in
pop
jg
jbe
pop
in
pop
pop
pop
sti
jp
sub
in
nop
enter
rcl
jg
aaa
arpl
adc
cmp
bound
sahf
and
dec
loope
and
and
cmp
or
outsb
loope
fmul
je
mov
add
or
lcall
pop
aad
insl
imulb
stos
adc
xorl
fdivrl
aaa
jne
call
add
jnp
loope
lods
mov
data16
imul
adc
mov
dec
out
div
stos
fstl
les
shlb
push
jl,pt
and
call
loope
lcall
xchg
inc
pop
movsb
test
jb
pop
cmp
out
out
lret
les
xchg
mov
jmp
aam
enter
sbb
mov
lds
add
scas
cmpsb
adcb
add
bound
int3
add
pop
loope
and
xorps
and
je
mov
adc
jns
stos
dec
jno
cli
jae
mov
xchg
pop
pop
or
es
dec
ljmp
xchg
jecxz
inc
cld
adc
inc
outsb
sbb
mov
arpl
stos
mov
ret
in
movsl
and
mov
add
out
jle
cmp
or
pop
inc
xor
pop
dec
nop
nop
sahf
lret
icebp
pop
jge
inc
sbb
es
inc
pop
lret
push
sbb
aaa
mov
mov
imul
inc
pop
or
jae
mov
dec
push
mov
mov
sub
nop
bound
js
shrb
js
lahf
les
jl
decl
std
add
jg
jge
sar
imul
mov
loope
clc
jbe
cmc
mov
or
fcmovnb
jge
pushf
inc
adc
adc
aas
jmp
sbb
and
dec
leave
insb
stos
or
pop
iret
xor
cmp
jge
add
aad
aam
and
or
inc
push
ret
push
push
pop
pop
loopne
mov
jg
adcl
fsubrs
jae
adc
fs
outsb
and
pop
jno
dec
outsb
cmc
inc
mov
rcrb
aas
cmp
je
and
push
dec
outsb
sub
jecxz
xchg
mov
daa
mov
aad
dec
stc
into
lahf
xchg
loopne
xor
inc
lds
push
xchg
out
adc
mov
rorl
into
int3
mov
jge
in
repnz
testl
pop
add
call
mov
shr
fcoms
sbb
xor
into
jne
mov
xchg
mov
lods
sub
jae
aaa
stos
sbb
rorb
add
push
int
mov
adc
and
push
mov
mov
xor
mov
and
mov
leave
fcomps
pop
lods
aaa
hlt
and
aam
push
mov
inc
xor
scas
sub
xchg
fmull
leave
shlb
sbb
cmp
das
push
mov
pop
addr16
fldt
sahf
cltd
repnz
lea
and
stos
push
lods
shll
shrb
inc
popa
and
jp
jmp
mov
push
cld
xchg
cmp
xchg
inc
fwait
add
pop
inc
pop
loope
nop
es
rcl
and
push
iret
pop
imul
out
negl
mov
sbb
sub
push
xor
add
push
movsl
mov
gs
bound
fdivrs
bound
xchg
sbb
lods
movsl
or
test
ds
sbb
mov
xor
add
enter
loopne
call
or
cltd
push
out
and
mov
or
jmp
mov
and
and
xchg
and
and
inc
clc
mov
sub
dec
call
add
stos
jo
andb
popf
ss
jno
faddl
int
and
push
mov
shl
jno
cmp
jl
jmp
xlat
lods
push
push
xchg
int
repnz
test
cwtl
push
cwtl
sti
inc
shll
iret
mov
daa
cmp
ds
paddusw
test
lret
or
test
and
mov
gs
add
in
out
test
mov
clc
push
push
cmp
repnz
std
daa
bound
mov
inc
test
mov
movswl
stc
mov
dec
jmp
mov
icebp
movsl
sbb
sar
lea
cld
dec
pop
sub
insb
or
pop
mov
addb
in
jg
loope
and
mov
hlt
aaa
cld
mov
mov
es
and
adc
push
lods
jl
das
enter
clc
out
pop
pop
cld
stc
sub
shll
stos
dec
stc
aam
into
notl
fisubl
mov
push
cmp
push
movsb
loope
sbb
loope
lahf
lods
ljmp
jns
jnp
dec
or
mov
clc
add
lret
aas
mov
cmp
leave
adc
imul
mov
repnz
das
fs
ss
test
aas
mov
pop
or
sub
xchg
rorb
adc
jg
push
subl
xchg
lcall
adc
shrb
clc
pop
pop
mov
xchg
iret
xor
pop
and
or
xchg
cmp
xor
push
add
mov
inc
in
clc
mov
or
push
ds
mov
inc
lret
mov
scas
popf
pop
add
cwtl
pop
aas
and
add
and
cmp
adc
dec
cltd
stc
fs
push
cmpsl
roll
jp
lods
inc
add
js
xor
int
inc
enter
sbb
leave
dec
ja
dec
ret
fistpll
mov
shll
jb
adc
pop
sub
pop
jb
or
cmpsl
xchg
xor
push
ss
mov
hlt
push
sar
ljmp
int
dec
sub
mov
fsubrl
test
es
inc
aad
xchg
xor
ja
into
dec
andb
push
sbbl
out
cmp
pop
into
ds
ja
fadds
lock
and
daa
push
or
out
idivl
xchg
roll
push
out
cmpsl
sbbl
loope
mov
enter
push
lock
add
mov
pop
call
mov
xor
jmp
jae
mov
sub
cmp
test
xchg
daa
stc
dec
lahf
cmp
lcall
fildll
xlat
lahf
mov
xchg
mov
ja
push
pop
enter
jns
sub
push
sti
dec
mov
inc
cmp
push
and
popf
int
adc
mov
stc
cmpsb
in
loope
and
xchg
aam
stos
lret
cmp
pop
shl
xchg
test
sbb
cmp
xchg
aas
jae
push
lock
sarb
and
xchg
loope
adc
mov
dec
orl
or
mov
loopne
data16
push
jb
adc
js
dec
pop
mov
add
mov
adc
pop
out
xchg
fldenv
in
aas
sub
push
sub
push
and
clc
adc
in
es
out
aaa
xchg
test
sarb
arpl
mov
rcll
and
jmp
fildl
lret
bound
cmp
sarl
test
hlt
test
fmull
lds
jmp
or
pop
cmp
cli
and
loopne
lods
out
jae
xchg
inc
pop
test
daa
or
dec
sbb
mov
pusha
xor
ljmp
es
and
sub
mov
push
lds
cmovp
and
mov
scas
add
adc
push
and
xchg
sub
or
add
cmc
fstpt
sbb
nop
cmpsl
push
mov
std
lock
inc
mov
movsl
enter
rcrb
arpl
out
jnp
inc
inc
push
mov
mov
cmp
outsb
add
dec
mov
and
and
prefetch
decl
push
sub
add
xchg
repz
out
pop
fstl
call
ret
mov
ret
sub
and
sub
gs
add
and
in
cmp
mov
jl
daa
inc
sbb
testb
leave
nop
stos
lods
loope
testl
lahf
int
push
and
insl
mov
gs
clc
lahf
pop
fisubrl
or
inc
test
adc
mov
fistpl
cmc
cmpsb
mov
inc
aas
repnz
fistps
mov
movsb
out
les
in
cmpsb
mov
cld
pop
aaa
or
adc
lds
sahf
in
cmp
xchg
sbb
in
mov
orb
xor
cld
bound
mull
in
xchg
jle
stc
sti
scas
lcall
and
es
xchg
or
lock
movsb
pop
dec
inc
fsin
and
pop
sbb
and
or
je
lret
call
mov
mov
xchg
dec
jno
int3
daa
or
dec
xchg
pop
adc
fnstcw
int
lods
dec
lcall
xor
push
ret
in
dec
divl
and
test
and
adc
je
cld
cmp
inc
or
and
icebp
dec
add
shll
sub
lahf
pop
dec
cmc
push
stos
or
xchg
cmpsl
in
pop
xchg
mov
and
test
mov
lods
mov
pushf
sbb
pusha
imul
outsb
mov
mov
xlat
add
xor
cld
rcrl
fstpl
pusha
sbb
dec
mov
and
mov
mov
mov
cmp
pop
pop
xchg
cmpsb
popfw
adc
lret
cmpsl
ret
jne
adcl
inc
adc
aad
nop
arpl
lret
les
pusha
ja
adc
mov
mov
ss
jb
push
rorl
fdivrp
jno
xadd
xor
mov
xchg
inc
add
cld
in
and
imul
out
popa
cmpsb
push
add
sarb
rolb
push
sbb
xor
ds
push
call
push
rorl
cli
in
popa
xchg
xor
jg
dec
sbb
fsubrp
shlb
or
nop
push
adc
and
aad
rcrb
imul
xor
inc
xchg
xchg
sti
push
xlat
addb
xor
mov
sar
nop
cltd
xor
pop
pop
adc
lahf
popa
int
jno
jle
pop
mov
dec
adc
mov
test
test
popf
jp
pushf
repz
mov
loopne
mov
in
mov
or
hlt
clc
adcl
lods
mov
xlat
pop
iret
cmp
sarl
xchg
jae
sub
arpl
mov
pop
bound
mov
mov
mov
sahf
jmp
dec
js
loope
faddl
outsb
sbb
test
fldt
arpl
xchg
mov
dec
test
jae
and
call
cmpsl
repz
aad
repnz
shlb
jge
movsb
fnstcw
repnz
dec
das
loope
lret
imul
dec
imul
xchg
out
xchg
mov
adc
into
adc
int
hlt
lret
out
adc
movl
jb
movsl
bound
sub
dec
test
ds
les
push
js
add
mov
xor
mov
push
jp
mov
jg
stos
push
call
and
or
aaa
dec
and
push
and
push
mov
rcll
mov
pop
jecxz
in
adc
stc
pop
enter
test
sbb
arpl
pushf
daa
push
insl
dec
lods
mov
mov
mov
mov
push
rcrl
mov
cwtl
roll
imul
shlb
mov
inc
lahf
mov
call
add
loope,pn
adc
stos
xchg
in
shll
push
xor
addr16
popf
inc
subb
fldl
addr16
sub
push
out
lcall
mov
sarl
subb
lock
ds
xchg
mov
mov
push
push
test
loop
lret
mov
dec
ss
pop
loope
jnp
loopne
jg
into
test
adc
sub
jno
xor
clc
mov
lret
in
repnz
subb
shll
mov
push
cmpl
xchg
loope
push
in
adc
pop
cmp
aaa
loopne
mov
sub
rolb
into
iret
cmc
aam
or
add
mov
pusha
arpl
jno
pop
cmp
sahf
xchg
adc
repnz
testb
test
mov
test
fs
adc
int3
ljmp
in
in
lcall
test
pop
or
adcl
aaa
in
cmp
ja
test
sbb
test
cmp
repz
sub
xchg
test
pusha
jnp
mov
jle
mov
sub
outsb
lcall
or
add
les
rorb
or
dec
inc
or
jbe
and
decl
and
or
add
cmpb
add
mov
repz
movsl
lret
aaa
push
xchg
popa
add
dec
xor
cld
sti
das
addl
add
lock
mov
mov
mov
fistpl
mov
shl
mov
jns
add
and
jae
mov
je
test
jns
je
cli
cmpsl
int
or
loopne
cmp
push
mov
jb
and
xlat
sti
outsb
les
aad
sbb
add
xchg
arpl
push
jb
jnp
pop
pop
mov
pop
out
adc
xor
std
add
adc
movsl
insb
rcll
mov
or
sbb
or
dec
or
sbb
jl
xor
mov
iret
loope
cli
dec
jno
jmp
aad
insl
pushf
mov
xchg
aam
ret
mov
jmp
push
out
push
inc
cmp
les
xlat
push
gs
das
pop
xchg
int
mov
mov
or
cmp
pop
push
dec
popa
fmuls
dec
ret
pop
xor
mov
sub
sub
pop
aam
sbb
push
mov
sub
int
mov
jae
ljmp
ljmp
jecxz
add
or
adc
mov
dec
out
mov
in
mov
dec
and
in
sub
xchg
inc
testl
imul
add
sti
dec
shl
fdivrp
test
inc
test
mov
fxtract
jb
push
out
mov
xor
mov
int
cld
sub
xchg
xchg
sbb
sub
movb
cltd
int3
idiv
sub
jp
dec
push
mov
lods
enter
ss
xor
outsl
sub
jae
inc
ds
shll
dec
xchg
popf
push
mov
fcoml
stos
repz
pop
je
lods
pop
sub
imul
add
or
insb
add
inc
inc
fs
add
jnp
cmpl
inc
inc
sbb
bound
mov
jae
xor
aas
arpl
lock
cmp
sbb
xchg
and
rorl
in
pop
jne
movl
jmp
push
pop
cmpb
int3
dec
jle
mov
or
aad
xlat
shrl
out
rcll
xor
movsb
pop
jl
cmp
push
jns
loope
jge
bound
xchg
cld
insl
mov
sbb
test
test
adc
mov
push
inc
loop
loope
xchg
and
mov
icebp
outsl
dec
fs
out
cmc
cmp
push
sbb
int
mov
or
movsb
add
test
mov
cmp
movsb
add
dec
stos
pusha
adc
inc
lret
pop
outsb
mov
filds
movsl
mov
into
enter
test
enter
roll
scas
pop
sub
cwtl
lods
es
test
out
push
pop
xlat
push
inc
xchg
in
das
es
dec
fs
ret
inc
jne
ds
lea
jl
repz
push
data16
mov
xor
and
pop
movl
nop
int
xor
xchg
mov
push
scas
lret
adc
sbb
leave
nopl
sub
push
adcb
popf
cmp
push
ljmpw
data16
xchg
mov
jns
sar
push
push
pop
xchg
scas
jne
xchg
jge
jle
pop
jbe
jmp
inc
aad
adc
icebp
adc
cs
arpl
lods
rclb
mov
scas
cs
loopne
adc
push
xchg
cmc
cmp
sbb
mov
xchg
movsl
jge
xor
jmp
cmpsl
xor
mov
test
dec
testl
cli
dec
bnd
sub
cmp
or
dec
push
popf
into
out
loopne
xchg
or
das
push
xor
or
sbbl
jbe
jg
jb
lret
add
jne
sbb
mov
or
sub
mov
pop
inc
outsb
rcrl
out
mov
enter
mov
call
or
dec
shll
dec
cli
inc
xor
adc
dec
dec
jle
and
jecxz
movsl
inc
sti
mov
add
add
mov
idiv
sub
loopne
xchg
cld
lahf
nop
pop
xlat
fdivrs
mov
inc
cld
imul
rorb
mov
js
lret
cld
dec
pop
dec
mov
push
inc
in
mov
mov
and
pop
stos
xor
insl
jp
enter
outsb
sub
scas
rcrb
movsl
test
xor
mov
xchg
pusha
push
daa
inc
inc
push
push
lcall
jge
mov
ds
lea
xchg
cmp
fadd
or
in
sub
inc
cmp
xchg
and
into
cmpsb
pop
adc
mov
push
fcoms
xor
jbe
int3
inc
mov
cmp
push
mov
leave
mov
hlt
lock
lods
sbb
add
sbb
pop
ficomps
jg
dec
fstpl
insl
movsb
lea
pop
pop
dec
test
daa
push
out
pop
std
shl
pushf
sar
aas
jae
pop
fs
orl
xor
loopne
adc
dec
cmpsb
shrl
js
inc
push
jae
jmp
pusha
pop
popf
jns
sbb
xchg
cmp
cmp
scas
add
sub
enter
repz
outsl
push
subps
adc
fwait
pop
add
lea
and
mov
ret
sub
mov
decb
mov
frstor
pop
and
scas
or
lock
adc
loop
lret
fucomi
loop
sbb
xor
sub
imul
pusha
mov
fsubrl
mov
jo
incl
leave
arpl
enter
adc
cmp
insb
add
jo
popa
lock
push
adc
fmuls
ret
lods
sbb
mov
mov
mov
outsb
stos
cmp
lret
sbb
fcomip
or
or
cwtl
push
imul
jnp
mov
mov
pop
cmc
inc
pop
call
lret
adc
inc
push
add
mov
xchg
fsubs
clc
mov
push
ficoml
out
push
lret
jmp
mov
add
notl
ror
popa
dec
fs
lea
daa
pop
cmp
pop
jb
push
fmul
mov
pop
repnz
insl
and
rcr
dec
mov
aam
and
sti
inc
cld
pop
jg
dec
add
sbb
mov
mov
rorb
scas
aam
lock
lea
lods
into
xchg
mov
into
add
fs
je
xor
inc
xor
rcrl
push
inc
int3
daa
xchg
cmp
and
lcall
pop
jmp
lock
insl
push
mov
or
insl
jmp
aaa
sahf
or
mov
ret
mov
sbb
xor
add
mov
xchg
mov
add
out
inc
out
mov
xchg
out
sar
mov
xchg
push
mulb
push
insb
ljmp
jno
fidivl
push
mov
jg
je
adc
jmp
je
sub
mov
adc
sbbl
push
lock
xlat
xlat
pop
clc
popa
push
mov
in
aaa
jg
sbb
repnz
lahf
sbb
lahf
js
jmp
in
lods
pop
and
and
pop
dec
mov
adc
inc
cwtl
mov
push
push
cltd
xchg
idivl
jne
cwtl
mov
mov
and
push
out
in
scas
or
adc
cmp
or
out
dec
test
jnp
mov
push
or
mov
enter
iret
xchg
subb
mov
jp
push
cmpsl
dec
mov
movsl
insb
imul
sarb
lcall
sub
fsts
dec
xchg
and
pop
ja
fistpll
lahf
jmp
into
sti
pop
bound
mov
cld
fstl
aas
mov
je
fs
cmpsl
out
pushf
cmpsl
movsb
cs
mov
scas
mov
repnz
shrb
sbb
aaa
sub
dec
movsb
imul
dec
loopne
sti
shll
add
jae
mov
mov
push
sarb
clc
push
ficoml
icebp
insl
and
jecxz
bound
lret
add
jo
sbb
xchg
xchg
into
test
dec
mov
imul
adc
lret
inc
insb
xchg
sbb
mov
push
sbb
in
add
pop
cmpsl
or
xor
rorb
jae
add
sbb
mov
jo
mov
loope
push
sahf
jp
lret
push
pop
adc
dec
dec
dec
test
int
inc
sub
and
je
sub
stos
mov
dec
cmpsl
add
jmp
mov
out
scas
dec
dec
inc
cmp
jmp
mov
aas
bnd
loopne
mov
xchg
repz
jnp
fwait
mov
fisubl
xchg
mov
xchg
xchg
insl
lahf
bound
ljmp
je
mov
lret
mov
push
jo
int3
mov
sbb
cmp
add
xchg
sub
inc
cld
sbb
dec
mov
mov
lds
sbb
and
xchg
add
and
fcmovbe
cwtl
subb
popf
test
xchg
cltd
cwtl
and
mov
sbb
gs
inc
loope
xor
xchg
divb
jle
fldz
cmp
mov
sub
adc
jge
fistps
lahf
mov
divb
inc
push
mov
lret
xchg
pusha
sbb
push
pop
dec
in
xor
int
addr16
inc
in
jbe
lods
sub
push
jae
push
iret
jo
out
xchg
jae
ret
inc
cmp
inc
int3
sub
xor
adc
lahf
and
int3
jecxz
stos
mov
xchg
add
aas
je
out
das
mov
jne
push
and
ret
fcomps
xchg
adc
fstl
mov
push
arpl
mov
pop
loopne
mov
rcrb
dec
in
add
adc
add
movsb
xchg
push
scas
dec
xor
adc
subb
cmp
sbbl
pop
popf
push
xlat
insb
mov
shr
in
inc
fsubs
mov
add
add
pop
sub
outsb
pop
adc
sbb
mov
je
inc
out
nop
fwait
in
or
push
pushf
outsl
andl
out
pop
cmpsb
sub
inc
mov
fildll
fcompl
sbb
mov
scas
pop
adc
mov
jns
adc
imul
xchg
loopne
lret
icebp
cltd
loope
repz
call
dec
arpl
fcomp
fdivl
jmp
decl
cmp
fidivrl
test
mov
stos
mov
nop
sbb
pusha
pop
mov
adc
add
mov
jg
push
jo
mov
fistps
cltd
cli
ljmp
ficoml
and
xor
jecxz
mov
hlt
jmp
jae
fistps
enter
mov
sbb
movsl
je
push
or
aas
out
sbb
sbb
fdivs
repnz
icebp
mov
mov
testb
ljmp
std
mov
xor
aam
ffreep
cmp
and
push
icebp
addl
jbe
xchg
loop
test
cmpsl
mov
adc
je
adc
in
jmp
test
aas
mov
imulb
sbb
ret
push
or
push
shl
loope
jnp
xchg
sub
cli
dec
adc
or
push
cmpsb
add
pop
popf
outsb
cmpsb
jno
inc
daa
mov
push
std
cmp
insl
jecxz
std
inc
test
stos
mov
jnp
add
pop
lahf
cwtl
in
loop
or
mov
scas
xchg
clc
adc
adc
js
xchg
mov
test
sbb
loopne
in
mov
and
or
movsb
mov
rolb
icebp
pop
shl
outsb
xchg
dec
inc
and
mov
subl
dec
clc
fistpll
fsub
imul
dec
jns
out
sub
cmp
sbb
add
ja
std
scas
jge
and
push
pushf
notl
loop
aad
or
and
fcom
xchg
in
mov
lods
imul
stos
mov
inc
scas
push
in
cmpsl
inc
leave
cmp
lret
loop
sbb
pop
arpl
cli
mov
fmulp
scas
and
and
push
mov
scas
mov
inc
ret
mov
mov
je
xchg
dec
int
mov
mov
and
repz
inc
pop
adc
inc
gs
cmp
mov
dec
outsb
mov
stc
mov
out
pop
fdiv
stos
fimuls
xchg
outsb
aam
int3
popf
aas
stos
imul
scas
lcall
cltd
testl
push
int
int3
jae
imul
jecxz
pop
and
mov
negl
xchg
mov
xor
push
hlt
lock
int3
inc
subl
mov
xchg
add
adc
insl
orb
outsl
mov
mov
pop
pop
cwtl
ljmp
adc
sub
pop
mov
hlt
pop
add
fisubs
orl
repz
mov
enter
les
or
arpl
mov
lcall
and
lock
push
sub
mov
xor
dec
cmc
mov
test
add
xchg
imul
mov
inc
sub
repnz
idivb
aad
hlt
test
xchg
pop
imul
push
mov
xchg
maxps
dec
daa
or
and
mov
popa
les
inc
les
lret
sub
stos
mov
sub
jecxz
repnz
mov
inc
jae
movsl
pop
dec
inc
repz
and
adc
lret
pop
add
adc
movsb
das
aad
or
jno
ds
inc
mov
xor
ljmp
pop
inc
je
sbb
ffreep
in
loop
in
sub
faddl
jae
fidivrl
and
mov
xchg
add
pushf
mov
inc
movsb
sbb
jns
cld
xor
inc
mov
fnstsw
jmp
idivb
sbb
mov
pop
stos
in
jg
test
lds
sub
or
movsl
ss
lret
das
adc
pop
and
jns
jmp
lods
fldz
xchg
icebp
ja
or
or
aaa
jno
sub
inc
mov
cmp
roll
outsl
cmp
jge
lcall
add
sbb
and
cmpsb
cld
inc
sbb
inc
imull
add
ret
fwait
sub
mov
add
ret
imul
ret
ds
xchg
mov
test
pusha
sub
loope
mov
sti
aas
loopne
jbe
add
pop
loopne
or
jns
sti
cmp
and
jne
add
push
lock
pop
ss
cs
push
jae
lahf
xchg
rcll
mov
pop
clc
sbb
cmp
imul
movsb
fsubrl
mov
and
fnstcw
mov
test
jecxz
mov
scas
mov
mov
mov
ret
push
mov
lret
dec
mull
and
xrelease
mov
lock
sbb
pop
sbb
xchg
sahf
inc
adc
aaa
inc
out
or
xchg
pop
push
scas
pushf
mov
or
sbb
repz
or
mov
jo
mov
clc
dec
int3
mov
push
loopne
arpl
test
inc
lods
cmp
sub
or
add
lcall
es
out
or
pop
fidivs
test
sub
xlat
movsb
xor
in
fcomps
adc
in
sub
xor
fwait
sub
sbb
pop
les
mov
xchg
push
dec
sbb
sahf
xchg
push
jns
out
movsl
cmpsl
xchg
lcall
imul
outsb
outsb
or
int
in
add
shl
das
push
dec
rcl
ror
insb
xor
out
xor
enter
adc
jle
mov
xor
cmp
sarb
inc
sub
and
in
cmc
xor
aad
cwtl
xchg
xchg
cld
mov
dec
jne
or
add
mov
mov
jo
cmp
mov
add
lods
jle
pop
xlat
and
out
ret
scas
dec
into
shll
xor
sub
rep
add
jecxz
push
inc
lock
xchg
movsb
cmp
divb
xor
scas
daa
aad
adc
aam
nop
xchg
lods
ds
aaa
push
sahf
aas
mov
es
mov
subl
dec
test
ss
iret
or
inc
movsb
loope
push
andl
fs
mov
mov
sub
out
rcr
add
rcrb
pop
xorps
cmp
imul
mov
into
inc
cs
add
addb
nop
sub
sarb
jmp
fldcw
ss
vmovups
popa
lcall
lahf
in
mov
cwtl
jl
loopne
lds
and
fs
repnz
leave
mov
ljmp
stc
lods
sub
jae
xchg
inc
stos
cs
mov
add
xchg
aam
push
adc
aaa
rcrb
mull
xor
mov
fwait
pop
push
sbb
xchg
stos
popf
xchg
and
sub
data16
js
loope
inc
js
es
std
push
jle
fwait
sub
or
push
adc
aad
adc
xor
mov
dec
out
inc
movsl
jg
rcll
add
mov
outsb
test
push
jb
fwait
push
inc
scas
lahf
mov
adc
xor
test
bnd
fld
or
mov
fistps
xor
fists
push
inc
inc
outsb
mov
fcmovnbe
xlat
inc
jne
xor
mov
ret
arpl
add
cmp
into
popa
jne
xor
std
and
negb
cmc
lahf
pop
aas
cmp
bound
xchg
jp
pop
adc
repz
lret
rcrb
adc
movsl
sbb
in
jo
mov
sbb
pop
xchg
ret
rorl
rorl
xlat
inc
cmp
outsb
cwtl
mov
jbe
xor
aas
or
inc
test
fstpl
xchg
int3
push
cltd
addr16
stos
and
adc
inc
push
inc
ds
and
movsl
in
mov
mov
mov
ss
cli
push
dec
lret
jmp
cmp
add
jnp
fwait
fwait
jno
iret
push
mov
pop
jo
pop
xlat
ret
pop
clc
sub
ret
xor
sbb
jp
cli
sbb
cld
mov
popl
sahf
hlt
and
mov
sub
dec
inc
cld
push
js
incb
jb
ja
nop
sbb
mov
cli
and
pop
mov
jns
pop
or
das
stos
js
insb
dec
inc
jno
inc
jae
dec
adc
mov
in
test
adc
push
mul
cmc
dec
xchg
stos
mov
inc
or
adc
das
insb
jbe
adc
jns
or
ss
mov
or
xor
fdivl
adc
xchg
sbb
mulb
jmp
inc
je,pt
cwtl
xchg
mov
cmp
and
clc
push
jl
cwtl
fstl
push
push
and
push
and
pop
jne
mov
push
push
inc
xchg
in
xchg
adc
mov
jno
leave
cs
mov
xchg
adc
jmp
mov
stos
int
mov
lcall
xchg
imul
mov
adc
sbb
popf
fstpl
pop
jl
test
lods
lcall
ret
insb
jb
sub
lods
jmp
ficoms
xor
vmovups
cmp
jmp
xchg
mov
pop
sbb
mov
jmp
cmp
clc
xchg
lock
cmc
mov
xchg
and
pop
and
mov
mov
and
push
inc
xchg
mov
call
in
mov
outsb
add
inc
cltd
mov
adc
mov
icebp
pushf
orl
xchg
insb
icebp
cmp
and
mov
movsl
shr
cmp
or
dec
insl
test
sub
cltd
ljmp
loope
pushl
jb
dec
sbb
xchg
pop
dec
adc
and
xlat
fsub
ss
enter
mov
fistpll
sti
cltd
xchg
test
pusha
pop
in
mov
imul
in
cmpsb
or
and
filds
xlat
cs
cmpsb
sti
sbb
sub
ja
fldl
test
bound
jge
lods
std
xchg
jno
pushf
lods
sbb
push
mov
inc
mov
scas
or
pop
add
jmp
lret
cltd
bound
lods
out
repz
std
sbb
push
inc
push
mov
call
enter
or
nop
js
dec
rorl
mov
insl
or
lock
popf
mov
mov
jl
loope
lcall
sbb
jae
aam
int3
mov
pop
xchg
in
pop
inc
cld
mov
insl
js
dec
mov
mov
aad
and
stc
aad
adc
aas
push
jns
in
jp
jo
rcrl
movsb
mov
xchg
stos
scas
mov
mov
subl
xchg
mov
test
clc
dec
repz
xor
pop
pushf
test
sbb
fisubrl
jmp
movsb
inc
and
lods
hlt
cld
cmpsl
aaa
push
xchg
inc
adc
mov
hlt
ret
bnd
arpl
loope
lods
pop
jbe
push
xchg
pop
pop
bswap
mov
stos
enter
cmpsl
jmp
jae
fcmovbe
xor
imul
sub
pop
je
or
aad
jne
xorb
xchg
mov
or
and
out
dec
icebp
pop
xor
mov
jecxz
aas
push
das
arpl
and
movsb
cmpsb
mov
test
xchg
rolb
out
adcl
pop
dec
scas
mov
or
cwtl
bound
test
sbb
sti
xor
jno
stos
cmp
push
pop
push
jne
out
out
xor
cmpsb
jns
fcmove
jle
std
push
rcll
loope
push
test
sbb
dec
pop
cmpl
sbbb
push
out
mov
xor
rcrl
pop
pop
jno
push
mov
pop
daa
and
push
int3
adc
inc
add
clc
push
sub
enter
pushl
das
xchg
int3
lock
ret
mov
push
dec
in
es
push
and
xchg
or
je
lds
in
cmp
cltd
lods
ljmp
cld
lret
cmpb
popf
jge
adc
cmp
dec
push
std
cmp
in
inc
cmp
adc
push
pop
int
mov
push
and
cld
dec
mov
imul
incb
in
nop
or
icebp
leave
xchg
dec
outsl
sbb
fldenv
sti
push
and
loop
adcl
std
mov
dec
or
loope
pop
lods
iret
andb
add
dec
outsl
jae
cli
insl
or
add
addr16
xchg
add
xor
adc
xchg
sub
fsubr
fiaddl
sub
fisttpl
ret
xor
jecxz
fmuls
add
in
sahf
push
int
sbb
js
insb
sbb
pop
dec
inc
test
jmp
popa
push
xchg
xor
adc
test
dec
and
jbe
cmc
add
sbb
mov
mov
pop
mov
sbb
lods
jp
int3
add
add
fst
pop
push
pop
cmp
int
xor
arpl
and
cmpsb
test
negb
mov
fwait
push
lcall
push
adc
mov
jmp
arpl
mov
pushf
adc
inc
orb
stc
cmp
inc
cltd
icebp
scas
xor
pop
popa
and
addl
outsb
push
scas
je
sbb
dec
in
push
inc
sbb
rol
lret
addr16
insl
pop
xlat
mov
or
sub
in
dec
mov
mov
sti
adc
xchg
arpl
mov
gs
pushf
js
out
inc
pop
push
nop
jle
mov
and
in
xor
int3
cmpsb
je
test
outsl
and
imul
xchg
shll
out
nop
sti
int
mov
mov
icebp
push
jne
add
es
stos
testb
clc
test
and
inc
xor
push
frstor
das
xchg
push
ret
cmp
and
or
mov
orb
out
add
xor
dec
ljmp
pop
call
jg
adc
pop
sti
cmp
jne
pop
push
mov
inc
inc
cmpsl
adc
jbe
inc
ret
adc
dec
out
jno
iret
lret
jnp
icebp
inc
xchg
xlat
sbb
fcmovu
loope
xchg
data16
pop
push
inc
adc
loopne
call
jb
in
lds
add
pushf
push
js
xor
cmp
and
ror
in
jg
mov
popf
cmpsl
outsl
ja
sub
add
frstor
leave
adc
jns
scas
std
loopne
push
pop
dec
out
cmp
lcall
cmpsb
gs
shl
ret
adc
push
gs
dec
sbb
mov
cmp
fwait
push
ss
jbe
adc
fcomps
loopne
lds
xor
in
cmpsb
sbb
les
cmpb
rcrb
inc
ficoml
add
adcl
orl
and
movsb
aam
and
pop
mov
sub
push
js
jo,pn
push
or
or
xor
das
stc
sahf
mov
lock
pop
mov
les
push
dec
imul
dec
xchg
sub
push
pop
lods
jecxz
xor
je
jae
loope
lea
fimuls
fbstp
lods
scas
pop
pop
sbb
out
mull
xor
ss
xchg
and
dec
mov
jmp
inc
out
push
or
pusha
xchg
adc
ret
jmp
sbb
sub
xor
push
ror
push
pop
dec
pusha
push
outsl
sbb
and
sbb
mov
arpl
adc
clc
cld
jl
mov
jp
es
push
pop
adcb
pop
adc
and
mov
ss
popa
xlat
and
mov
hlt
dec
shl
mov
or
xchg
xlat
std
rolb
movsl
push
aaa
jno
in
dec
dec
gs
orl
cmp
sbb
stos
dec
add
scas
insl
push
pop
out
shl
and
test
jne
pop
pop
cmp
pop
lock
xlat
lods
add
pop
fnsave
cwtl
or
sbb
adc
or
ds
mov
dec
rcl
mov
addr16
insb
mov
aaa
xchg
pop
mov
mov
sbb
sub
xchg
mov
add
adc
mov
mov
push
popf
xlat
xchg
adc
sbb
jl
shll
dec
insb
aas
xor
xchg
aad
mov
sub
fcmove
fidivrs
lods
cmpsl
lahf
arpl
sbb
fisttpl
cmp
add
dec
out
add
xor
add
ret
jmp
testl
test
aaa
inc
mov
push
mov
call
xchg
xlat
jge
mov
addl
lret
cmp
lahf
add
jle
xchg
xchg
push
xor
xchg
mov
pop
push
out
dec
fcompl
adc
movsb
popf
xchg
inc
in
mov
cli
test
xlat
mov
cmc
inc
adc
dec
into
pushl
popa
movsb
sub
adc
dec
mov
mov
inc
mov
nop
lea
lds
push
inc
addl
xchg
cwtl
or
xor
xor
mov
and
faddl
add
in
mov
ret
lahf
sbb
ja
dec
inc
gs
lock
mov
mov
imull
shll
pminub
and
sar
jae
mov
rcll
push
push
add
lods
ja
rorl
fwait
lcall
into
inc
inc
cmpl
lcall
mov
push
dec
or
xor
jg
test
xchg
pop
clc
or
nop
mov
fcomps
inc
addr16
push
lret
and
push
and
scas
inc
push
adc
divb
mov
mov
push
rcrl
or
jbe
cmc
subb
sub
out
int
cli
mov
xchg
roll
pop
in
adc
ja
out
in
push
sub
ret
and
jle
fldcw
fisubs
mov
jb
loope
pop
or
test
pop
jne
dec
pusha
add
push
popl
pop
cmc
sahf
mov
bound
out
mov
adc
xchg
xchg
aad
or
mov
dec
insl
add
dec
pop
pop
cltd
inc
pop
in
bnd
mov
xchg
loopne
push
repz
xor
sub
and
inc
idiv
lods
xor
movb
sbb
faddl
dec
xor
jns
nop
std
mov
lcall
or
adc
cmpb
out
shlb
or
sarb
repz
xchg
jmp
cmp
jno
pop
idivl
and
aad
pop
xchg
push
imul
loope
push
xchg
lcall
daa
jbe
shrb
mov
fiaddl
jl
xchg
jb
jbe
cmp
in
lret
aaa
out
aad
std
rcrl
push
xlat
jmp
into
lock
lret
testl
aaa
es
decb
shrl
push
adc
repnz
bound
mov
das
mov
and
or
out
pushf
ret
push
add
adc
sbb
mull
adc
adc
sbb
insb
inc
jl
movsb
inc
stos
push
mov
pushf
pop
popa
js
mov
pop
es
insb
iret
xor
int3
lret
cmp
sbb
mov
dec
pusha
mov
cmpsb
mov
pop
test
gs
cmp
sbb
sub
mov
jg
adc
pop
cmp
scas
mov
loop
int3
jmp
jge
arpl
enter
outsb
stc
and
pop
add
jl
mov
mov
or
je
mov
std
adc
je
push
adc
mov
xchg
fdivp
pop
mov
out
mov
outsb
sbb
popa
adc
add
xor
sbb
lock
adc
jae
jl
loope
lea
push
or
adc
jnp
fists
push
loop
and
icebp
mov
daa
xor
add
jecxz
fnstenv
adc
shll
mov
xchg
lods
and
clc
jns
sub
outsb
jecxz
enter
jge
push
das
dec
shlb
adc
mov
rcll
stos
nop
and
fisubrl
pushf
scas
lods
pop
clc
int3
cmp
mov
sbbl
cwtl
daa
sti
push
add
xchg
ss
sub
fistps
mov
sbb
sbbl
es
nop
outsl
add
jno
fiaddl
or
stc
lds
jo
lcall
faddl
inc
inc
mov
aad
shl
enter
sbb
push
cmpsb
push
sub
scas
cld
je
das
xlat
add
push
mov
push
mov
xor
adc
addr16
fcmovb
stos
mov
int
or
adc
mov
jg
dec
pop
loope
fisttpl
add
inc
lods
add
scas
fildll
add
jbe
shlb
push
insb
pop
adc
jge
jmp
xor
sub
sahf
stos
push
xchg
add
xchg
jne
lds
roll
jno
sub
sbbb
pop
sbb
mov
xchg
mov
or
fnstenv
push
push
imul
xor
out
sti
and
jns
and
push
popf
sti
sub
sti
jno
inc
inc
push
cmp
imul
sub
xchg
aam
push
insb
mov
cmpb
sub
std
loop
sahf
push
cli
mov
xchg
fdivs
das
xor
sbb
in
pop
xor
nop
pop
cmp
add
jle
leave
push
mov
sub
popa
pop
jne
xchg
into
into
addr16
add
mov
lcall
dec
ficomps
xchg
push
hlt
imul
push
sbb
dec
mov
cli
mov
in
fnsave
cltd
rcll
shl
mov
pushf
dec
data16
imul
sub
addb
inc
jns
insl
mov
lret
stos
addr16
cmp
mov
bound
adcl
mov
jl
lahf
in
in
jp
lret
cli
push
and
dec
xor
lock
cmp
jl
cmpsl
mov
popf
in
or
cli
int3
mov
cld
cmpsb
popf
jae
stc
std
and
enter
xchg
add
subb
dec
into
jge
fdivrl
xchg
lret
test
push
mov
orl
fldt
inc
or
and
mov
fidivrl
sbb
pop
rclb
scas
xlat
adc
push
in
jb
ror
sbb
push
mov
movb
xor
sub
and
hlt
addb
je
sub
dec
shrl
imul
dec
into
fstl
jo
and
sub
aad
cmp
pop
jge
mov
jge
cmc
pop
xchg
ss
cld
adc
insl
or
jle
mov
stos
ret
in
loope
xchg
mov
fsubs
push
dec
ds
ret
cs
imul
popf
test
mov
mov
and
call
push
in
lcall
int3
dec
lret
adc
xchg
mov
xor
jg
lcall
or
pop
cmc
adc
fdivp
or
cs
sar
insl
sbb
inc
adc
test
mov
cmp
aad
addr16
sbb
repnz
rclb
xchg
roll
dec
std
out
inc
sbb
pop
mov
sbb
inc
mov
mov
int3
pop
stos
and
sar
fbstp
push
add
fdivl
xchg
cmp
je
popa
dec
sub
mov
dec
add
mov
pushf
scas
into
pop
fisubrl
test
mov
ds
add
cld
inc
pop
mov
test
add
loopne
cmpsl
fnstsw
out
rorl
and
stos
mov
jmp
popf
fcoms
mov
imul
mov
aas
cmc
lea
sbb
imul
jge
ljmp
adc
xlat
inc
or
orb
insl
pop
or
ret
sub
gs
in
xchg
and
paddd
mov
into
xchg
xchg
mov
sbb
flds
insl
add
dec
jnp,pn
add
dec
cmp
sbb
add
pop
adc
into
sub
pop
sbb
inc
lret
add
fs
fmull
stos
insl
push
gs
fwait
mov
pop
rcll
sub
mov
sbb
jo
cltd
and
adc
mov
adc
cld
push
mov
mov
out
out
add
aad
xchg
push
nop
ret
out
daa
outsb
test
xor
pop
lds
cmp
or
cli
mov
aaa
loope
arpl
fucomp
lahf
sbb
mov
sub
movsl
adc
add
jmp
shld
mov
movb
push
add
cmp
out
into
shll
sbb
lock
sti
loope
push
pop
inc
imul
jbe
dec
push
icebp
mov
test
push
loopne
push
jno
and
xchg
mov
pop
push
mov
sbb
mov
and
js
pop
xchg
push
negb
scas
movsl
sbb
jo
push
xor
mov
pop
cmp
inc
int3
cs
gs
out
add
adc
out
js
xor
addr16
aad
icebp
jmp
mov
and
cmpsb
jle
pushf
outsl
inc
mov
push
jge
push
mov
sub
xor
sbb
add
mov
mov
cld
mov
xchg
icebp
push
cmp
addr16
ja
insb
in
adc
cmp
sub
xchg
aad
sub
jle
imul
addr16
lahf
xor
rclb
or
mov
push
imul
in
inc
les
and
fcoms
mov
pop
inc
mov
sub
test
mov
stos
lods
xor
jg
mov
pop
adc
jle
ret
add
sub
cld
scas
sbb
sbb
rcll
xorb
lret
fisubrs
pop
pop
data16
adc
scas
insl
xchg
scas
fdivs
sbb
inc
out
sbb
jae
jnp
jb
es
aad
cmp
pop
cmc
jg
ds
ljmp
js
lret
push
imul
pushf
add
dec
lret
aas
sbb
xor
mov
in
fs
and
mov
dec
pop
test
xchg
dec
mov
inc
cmp
das
cli
imull
mull
lock
xor
add
cmpsl
mov
aad
xor
and
xor
dec
scas
rcrb
rorl
push
ret
mov
mov
leave
in
and
andl
loop
test
mov
repz
cltd
mov
sbb
sub
sahf
fdivl
lret
push
scas
xchg
jo
fs
rcr
and
mov
popf
cmpsl
ljmp
ret
jo
fmul
ret
xor
les
add
outsl
cmp
cmpsb
jo
nop
dec
cmp
je
testb
movb
test
lret
xor
and
jecxz
mov
add
or
stos
jnp
clc
push
dec
jno
test
repz
aaa
xor
cwtl
xchg
xor
pusha
or
cld
mov
mov
mov
cmp
xorl
or
mov
jp
aas
xlat
and
ret
scas
stos
inc
push
das
movsl
add
mov
cmp
push
dec
shll
clc
nop
ret
ljmp
inc
adc
ljmp
scas
xor
push
jno
xchg
cmpsb
push
fs
mov
inc
ljmp
sub
out
pop
outsb
xchg
ss
jb
dec
movsb
sbb
cwtl
add
mov
sbb
sbb
and
pop
pushf
sar
popf
mov
xor
lahf
sub
dec
stos
mov
and
xchg
cmpsb
cmp
fnstcw
es
xchg
jge
add
insb
mov
and
mov
data16
pop
jg
ret
cmp
mov
add
adc
mov
ret
ss
mov
test
cs
sub
repz
or
xor
ret
cltd
push
add
hlt
das
and
into
xchg
push
push
mov
push
push
cmp
or
shr
push
cmp
cs
imul
imul
aad
test
push
aad
outsl
daa
adc
stos
sbb
inc
cmpl
notl
shl
inc
mov
jl
mov
addr16
cmpsb
push
repz
aad
lret
xor
cwtl
test
mov
and
inc
xor
sub
lds
lret
cmc
sbb
inc
scas
enter
cmp
imul
sub
roll
addb
fists
imul
jne
mov
mov
les
sbb
les
fnstcw
add
daa
fildl
mov
aad
pop
jo
add
inc
out
mov
mov
pop
sbb
cmpsb
dec
shl
shll
or
pusha
push
nop
ljmp
addr16
jns
imul
add
or
shll
xchg
mov
sbbb
xchg
fisubl
or
dec
lea
test
add
xchg
add
add
sbb
rolb
andl
ljmpw
mov
sub
outsl
push
flds
dec
xchg
sub
jae
mov
rolb
lds
xchg
lea
and
lcall
in
ret
in
icebp
nop
add
xchg
mov
push
cld
add
sub
ss
mov
sarb
cs
push
jb
in
pop
mulb
and
mov
into
push
jnp
jns
shrb
rep
cmp
push
loope
and
pop
push
sub
add
scas
inc
dec
jbe
dec
jne
mov
pop
cmp
adc
add
add
test
es
cwtl
adc
xchg
jbe,pt
push
push
adc
lcall
inc
rcl
cmpsl
inc
sub
mov
test
mov
clc
fiadds
add
popa
dec
sbb
xchg
jp
add
rcrl
fmul
xchg
dec
roll
and
rcr
cld
mov
les
push
jp
aam
outsl
mov
ret
mov
cmp
stos
mov
rcrl
nop
ret
loope
cltd
dec
in
ss
scas
outsb
aas
inc
cmp
es
sbb
pop
pop
push
sbb
push
inc
pop
or
jge
sub
xor
int
jne
adc
arpl
fadd
cmpsl
inc
mov
add
lds
adc
xchg
div
sti
into
in
push
lods
mov
and
stos
sbb
sbb
addr16
jns
daa
inc
xchg
pop
mov
jl
and
icebp
push
adc
jl
or
lahf
leave
add
mov
lods
mov
jae
fnstenv
loopne
scas
mov
fistps
dec
mov
cltd
dec
xor
xor
jnp
repnz
adc
mov
cmp
adc
data16
fstp
mov
pop
daa
movsl
ja
enter
dec
inc
out
xchg
mov
or
pop
xor
add
jecxz
popf
or
pop
jmp
adc
out
or
repz
lahf
in
push
stos
jp
mov
cli
sbbl
js
jmp
fwait
push
out
add
nop
xchg
rcrl
cld
adc
sub
gs
insb
jmp
jno
push
lea
jle
jnp
cmp
lahf
rorl
fcoml
icebp
aad
xchg
lea
lods
or
loop
test
mov
rol
fnstsw
ret
inc
pop
adc
outsl
dec
sbb
out
sub
mov
mov
popa
test
mov
cwtl
cmc
out
shrb
and
and
mov
andl
pop
dec
in
fildl
adc
fnstcw
fs
fstps
mov
sub
lcall
cmp
rolb
sti
testb
xchg
lods
push
adc
ja
adc
pop
mov
adc
add
adc
movsl
pop
mov
mov
fnstenv
fcomp
add
icebp
sbbb
or
rcl
sub
mov
jmp
mov
pushf
jb
sub
mov
pop
shr
jp
popl
out
lea
dec
lcall
push
scas
insb
mov
in
push
sub
in
mov
fwait
add
imul
xor
push
xchg
int3
and
cs
mov
cmp
repnz
jno
shl
flds
push
dec
lahf
xor
mov
adc
xor
aad
pop
stos
lds
jg
mov
mov
and
ficoms
es
cltd
cli
mov
mov
xlat
cmpsb
pop
push
cmp
sarb
movsb
mov
jno
mov
sahf
xor
ja
and
shl
mov
aad
int
scas
aas
fsubrs
bound
sarl
push
cs
test
in
scas
testl
popf
sbb
mov
jle
push
mov
cmp
test
pusha
or
test
movsl
sub
adc
xor
cmp
out
push
sbb
imul
ret
dec
mov
cltd
icebp
or
xchg
shrb
stc
sub
mov
cmp
or
inc
dec
popa
lods
pop
mov
lods
sti
pop
xor
mov
loop
xchg
or
and
jno
in
mov
jo
sarl
gs
cmp
jnp
sub
inc
or
mov
push
jmp
testl
mov
xchg
jb
mov
add
sti
aam
and
loopnew
cwtl
pop
sub
lds
and
mov
add
inc
inc
xchg
in
add
fstps
aam
test
xchg
pushl
jbe
jg
fs
xchg
sub
lods
fists
mov
xchg
jns
adc
cmp
add
jo
cmp
push
xchg
or
dec
je
cmc
jne
ret
mov
lods
cmc
push
mov
repnz
adc
cli
or
adc
or
imul
lahf
add
cmpsb
pop
push
aaa
and
pop
clc
outsb
insl
fsub
lahf
pushf
test
fbld
popf
cmpsl
nop
jae
jbe
sub
pop
push
aam
testb
xor
mov
fstl
pop
incl
in
and
xchg
xchg
mov
add
and
sbb
fdivrs
inc
mov
aam
mov
insb
or
aad
scas
pop
pop
or
idivl
mov
in
sbb
adc
add
xchg
push
fsubrp
mov
push
scas
insl
pop
testb
jge
mov
mov
movsb
shlb
push
pop
pushf
xchg
repz
ss
movsl
fnsave
pop
or
mov
jbe
adc
test
insl
jnp
mov
cmp
or
lcall
push
and
movsb
sub
pop
scas
ljmp
mov
inc
mov
addr16
pop
cmpsb
adc
cmp
fwait
cltd
push
push
push
push
and
hlt
mov
fisttpll
add
and
add
xchg
clc
shrl
pop
lea
aad
jle
daa
jp
int3
mov
loopne
or
mov
stc
sub
adc
inc
add
cmp
adc
stc
rolb
pop
sahf
ficomps
dec
xchg
adcl
dec
movsb
mov
fcomps
adc
inc
mov
fisubs
sub
lea
rol
jl
imul
xor
and
shl
stos
push
mov
fwait
out
mov
ret
test
mov
inc
jg
inc
shll
jmp
cmp
xchg
or
jb
into
mov
imul
adc
adc
xchg
or
mov
movb
and
les
xchg
lret
rcl
add
and
add
mov
cli
daa
stos
jno
into
aas
ret
xorb
mov
outsb
mov
xchg
mov
lds
push
adc
pop
movl
jo
out
mov
push
pop
xchg
dec
mov
mov
inc
lahf
or
adc
cmc
mov
out
cmpsl
outsl
push
sub
sbbb
inc
mov
sar
mov
shrb
dec
xlat
inc
ja
scas
dec
jmp
gs
xchg
arpl
pushf
pop
inc
push
lcall
xor
xor
pop
lds
xchg
leave
sub
push
cmpsl
jmp
and
sbb
gs
test
ret
imul
sbb
cmp
mov
jmp
clc
ret
pop
xchg
das
push
ficompl
push
pop
test
cmpsl
push
test
fcmovbe
pushf
push
aaa
push
out
push
sbb
icebp
pop
cmp
add
repz
fisttps
pop
pop
shl
int
outsl
pushf
adc
push
outsl
adc
lea
outsb
pop
cmc
fsubrs
or
cld
ljmp
out
or
mov
cli
inc
mov
ja
lods
jo
ds
sbb
scas
fs
imul
and
andb
sbb
lods
orl
andb
sub
sbb
lret
popl
shll
iret
jae
stos
and
dec
dec
xchg
mov
mov
gs
pop
mov
xor
cmpsl
jo
sub
lret
int3
fs
gs
sub
imul
sahf
xor
sub
repz
mov
xor
mov
mov
push
cwtl
push
adc
out
ret
xor
push
xchg
dec
cmp
ds
pop
out
shll
stos
nop
xor
xchg
add
aad
lcall
xor
mov
ficoms
dec
jbe
test
ja
sub
outsl
jne
jle
pop
dec
xchg
sarb
cmc
mov
in
xchg
into
mov
popf
mov
push
movsb
add
clc
aam
scas
stc
nop
jo
cmc
iret
stos
or
jne
imul
imull
in
into
xchg
sti
cld
fisubrs
cmp
dec
mov
mov
and
inc
stos
dec
scas
pop
mov
sub
sbb
out
lds
push
pop
in
mov
jge
pop
xchg
xor
add
negl
lods
or
iret
addr16
arpl
push
xor
mov
das
and
pushf
jne
mov
lret
cs
jae
aad
push
dec
sbb
in
lret
and
dec
xor
inc
imul
loope
push
pop
sar
mov
stos
and
insl
fwait
in
cs
jmp
xchg
pushf
add
or
mov
pop
stc
xchg
adc
div
adc
test
fdivp
fs
mov
out
iret
jno
mov
mov
into
sub
mov
mov
sbb
lods
pushf
dec
add
mov
inc
cs
ret
inc
in
sbb
fwait
mov
ja
mov
inc
lock
lea
mov
pop
insl
call
aam
dec
mov
mov
pop
sarb
loope
mov
fs
cltd
mov
jno
adc
lea
in
jg
add
cwtl
mov
outsl
aaa
aaa
sbb
ret
iret
inc
fdivr
sahf
adc
fldt
xchg
jecxz
cmc
xchg
add
mov
or
divl
xchg
inc
cmp
inc
insl
ret
fistpl
jne
gs
bound
insb
xchg
jae
add
daa
jne
aaa
sub
ss
out
je
push
pop
adcl
jg
cmpl
xor
push
push
push
xchg
ficoms
pushf
jb
inc
call
mov
sub
int3
mov
test
xchg
stos
std
aas
add
or
push
sbb
push
inc
inc
outsl
outsl
lret
repnz
mov
test
jno
jne
sub
aam
or
xlat
dec
bound
and
add
aaa
sarl
cli
imul
inc
add
addr16
pop
cmp
daa
add
jp
mov
cld
movsl
xchg
pop
lods
sahf
sub
call
mov
xchg
and
jbe
ror
addr16
or
in
mov
mov
filds
xlat
jg
lahf
pop
sub
jne
add
aaa
mov
push
or
cmc
mov
pop
outsb
aam
sub
mov
addb
sub
repnz
out
pop
jb
jp
pop
cmpsb
jp
mov
dec
mov
push
and
jne
ds
add
jg
fcomi
fnstcw
push
xor
mov
or
push
fbld
pop
lcall
sub
sub
addr16
pop
xor
enter
pushf
push
cli
push
test
push
aas
jnp
dec
adc
test
cmpsl
mov
jne
mov
rclb
pop
subl
and
filds
loope
cmp
ret
add
faddl
in
in
push
into
aaa
out
fcmove
popa
cmpsl
aam
inc
outsl
adc
push
add
pop
cmp
outsb
sub
push
add
fisttps
fists
mov
pop
dec
mov
and
in
and
stc
out
and
addr16
jg
sbb
dec
test
push
enter
out
xor
cmp
jl
shlb
sbb
je
loope
repz
leave
mov
shlb
adc
mov
push
mov
stc
sahf
pop
sub
das
sub
mov
jne
fldcw
jb
xchg
ficompl
cltd
pop
shll
pop
mov
in
fadds
push
insl
idivb
dec
in
orb
pop
addr16
or
ret
ds
cmpl
lcall
into
pop
mov
jns
push
lret
ret
add
jle
mov
xor
into
sub
xor
or
xlat
lds
adc
loopne
rclb
and
mov
ret
loope
lahf
fbld
xlat
push
adc
mov
loopne
xor
xchg
aas
sbb
mov
jbe
fbld
psraw
or
push
xor
add
mov
fistpll
fists
jae
sti
fxam
movups
jmp
sar
jecxz
leave
movsb
push
sti
sti
loop
sbb
decb
mov
movsl
mov
xor
fiaddl
sbb
loopne
cmpsl
in
pusha
dec
xchg
mov
imul
shrb
push
jns
push
dec
lahf
out
cmp
jecxz
cmpsl
and
or
jge
dec
mov
repnz
iret
cltd
pop
lahf
je
pusha
orb
mov
sti
fsubr
outsl
inc
lret
lcall
jl
outsl
push
or
lret
imul
loop
push
xor
test
ja
lods
lcall
pusha
xchg
shlb
mov
imul
jnp
cli
sbb
mov
jo
mov
push
cld
sub
mov
xchg
push
pop
fsubp
xchg
and
test
xlat
xchg
iret
lock
es
dec
jae
cld
fyl2xp1
mov
push
or
dec
mov
hlt
push
addr16
mov
rclb
push
inc
sbb
mov
xchg
test
push
jge
mov
popf
lcall
ss
sbb
iret
lahf
push
mov
pushf
sub
fdivs
sub
std
cmp
ret
sti
ror
stos
sub
aad
push
xor
data16
dec
mov
cmp
mov
out
mov
clc
fnstcw
fdivp
cs
sbb
pop
mov
add
jp
pop
mov
xor
imul
adc
enter
add
es
jge
ds
sub
lods
pop
negb
lret
fdivrs
stc
mov
fbld
pushf
aaa
addr16
cwtl
test
xchg
mov
mov
jg
in
add
jbe
sbb
sub
xchg
pop
sub
push
fiadds
push
sbb
scas
inc
lea
mov
ret
testl
cli
cmp
insb
fldenv
sti
add
add
mov
jecxz
fistpl
push
cmpsl
mov
cld
sbb
repnz
sub
inc
cmp
out
call
xchg
das
mov
popf
sub
mov
nop
enter
jo
ret
in
dec
add
push
push
rclb
pop
sub
adc
mov
hlt
push
mov
dec
ljmp
aad
dec
ja
icebp
aam
clc
xchg
sub
lret
sub
insb
mov
add
cmp
js
push
mov
push
push
sbb
mov
sti
mov
xor
jae
inc
int
jbe
stos
adc
cmp
adc
lods
cmovnp
inc
add
shrl
out
push
push
or
push
sub
mov
dec
fwait
stos
sbb
pop
jo
mov
mov
bound
mov
lds
push
loope
cli
adc
into
add
add
lock
sbb
cmp
mov
subb
test
cmp
inc
xchg
push
cmp
cmp
popf
pop
and
inc
popa
jge
test
xchg
and
dec
pushf
inc
mov
inc
xor
sbb
cltd
dec
cmp
lods
pop
movsb
fstpt
and
add
mov
mov
paddd
inc
jle
subl
mov
dec
mov
rolb
pop
jne
cwtl
push
or
mov
aad
inc
sub
jae
inc
cs
jp
in
jg
out
jg
aas
pop
in
ljmp
push
lock
fmull
mov
sub
es
loop
sbb
pop
repz
out
push
aam
xor
roll
mov
cld
add
lcall
lods
ret
lds
out
xchg
jbe
int
mov
push
push
aam
push
ret
imul
shrl
mov
lea
pop
ss
scas
aam
sti
push
push
fsts
in
sub
jmp
int
js
jg
je
mov
add
pop
mov
and
call
jne
or
cwtl
into
sub
rorb
rcrl
jge
aaa
cmpsl
cmpsb
adc
fistl
adc
hlt
in
pop
test
notb
inc
cmp
out
iret
jo
ret
daa
repnz
cs
popf
imul
test
shrl
and
inc
into
mov
scas
outsl
test
fsubr
cs
fmull
or
push
into
in
out
lahf
into
ja
xchg
jnp
or
pop
sar
mov
movsb
jae
std
add
int
arpl
lcall
push
sbb
loope
mov
sbb
test
rclb
out
lretw
test
pusha
out
aaa
cld
lahf
out
nop
cmpb
arpl
cmpsb
xchg
int
and
jae
mov
into
or
sbb
sub
xchg
push
jmp
loopne
in
xchg
push
pop
inc
mov
bts
add
fiaddl
icebp
std
mov
cmp
fldt
cmp
cmp
xchg
and
xchg
sbb
cmpsl
outsb
mov
or
xchg
jne
push
jne
int
mov
out
stos
pop
xor
loop
inc
cli
mov
test
adc
notb
addr16
jl
lock
xchg
pushf
popa
aad
jns
push
lods
repnz
push
mov
jg
scas
shrl
sub
insb
imul
bound
dec
lds
mov
arpl
inc
jmp
mov
and
and
repnz
mov
out
mov
fistps
gs
mov
cmc
xor
pop
xchg
fldenv
mov
lods
lcall
inc
test
sub
enter
hlt
xor
dec
push
aam
sti
pop
push
pop
addr16
mov
loopne
push
out
pop
fwait
mov
les
int3
fwait
pop
push
jmp
inc
push
scas
mov
sub
mov
out
sub
fmull
cmpsb
hlt
into
push
add
push
jg
je
sub
adc
inc
sbb
hlt
orb
test
jns
and
shrb
popa
mov
lds
ss
jo
call
stos
xlat
sahf
sbb
test
mov
xchg
stos
pop
sbb
adc
movsl
rclb
add
repnz
push
les
mov
cwtl
pop
fs
ret
jae
pop
mov
shl
outsb
loope
cmp
ja
cmp
and
inc
jae
adc
das
mov
pop
mov
aaa
xchg
or
push
sbb
imulb
pop
mov
out
scas
mov
dec
jns
xor
shrl
or
cwtl
mov
inc
stos
stos
addb
jno
mov
fisubrs
jnp
xchg
cmpsb
xchg
sbb
out
push
or
shrb
mov
gs
push
testl
or
sbb
mov
arpl
aad
dec
sbb
inc
insl
insb
adc
xor
push
and
adcl
dec
loope
scas
add
inc
push
and
lea
mov
add
xchg
fistpll
pop
pop
out
or
cmp
push
addr16
and
xor
movsb
clc
test
dec
ljmp
addr16
dec
xlat
mov
das
lret
mov
mov
push
icebp
hlt
int
imul
test
dec
mov
es
fidivrs
mov
mov
push
ret
mov
repnz
int
xor
repz
repz
cwtl
or
jno
scas
in
pop
shrl
and
push
cs
push
test
into
icebp
and
mov
into
fidivrl
mov
add
inc
lods
lock
fadds
bound
lock
mov
dec
in
stc
stc
mov
push
cmp
rcr
or
cmp
xchg
shll
mov
xor
adc
insl
mov
movsb
imul
adc
mov
jl
adc
imul
cs
xchg
inc
mov
xor
inc
outsl
jle
adcl
out
mov
pop
sbb
mov
repnz
add
and
push
or
mov
mov
fnstsw
movsb
ljmp
arpl
pop
jmp
ficoml
notl
mov
test
jl
and
xor
es
sarl
sub
xchg
adcl
and
inc
out
or
les
nop
cmp
add
test
and
popf
xor
test
fcomi
jne
inc
or
push
push
outsl
xchg
cmp
lret
fldl
mov
adc
out
out
arpl
dec
adc
mov
cmp
adc
sbb
push
pop
mov
dec
rorb
xchg
add
jmp
xchg
in
ret
pop
mov
lcall
ret
repz
int
jp
jbe
jmp
mov
jbe
pop
andb
sub
cld
push
sub
daa
mov
aam
xchg
add
or
xor
arpl
cmpsl
jmp
adc
mov
and
adc
xchg
and
xchg
loop
dec
int
aam
addr16
dec
gs
inc
jbe
addl
daa
loop
out
inc
vcvtdq2pd
data16
push
xor
pop
data16
xchg
push
and
ret
pop
mov
insb
and
outsb
xchg
pop
loop
mov
ret
inc
loopne
mov
mov
or
cs
sbb
push
sub
xchg
jl
cmp
sbb
push
movsb
cmp
jmp
test
ss
aas
sub
int3
jbe
xor
stos
aaa
mov
jg
mov
sarl
rcrb
popf
fistpll
sbb
jno
out
cmp
xchg
sub
in
pop
jmp
call
arpl
ret
rcr
mov
mov
test
mov
jg
xchg
dec
iret
mov
cwtl
push
inc
sbb
sahf
fistl
rorb
insb
rorb
idivl
mov
jne,pn
inc
mov
mov
movsb
sahf
hlt
sub
addr16
ret
add
mov
or
dec
insb
sbb
sarb
cmpsl
xor
stc
cltd
mov
dec
std
sbb
add
push
and
push
imulb
icebp
mov
mov
out
test
insb
jcxz
add
inc
or
xchg
push
mov
movsl
mov
out
in
ror
or
jmp
push
and
out
pop
fcompp
aam
adc
and
jbe
mov
loop
jns
cltd
jle
mov
clc
push
jae
in
mov
ret
into
cmp
cld
rcrb
xchg
je
sub
ljmp
aad
addr16
mov
adcl
sub
sahf
lock
pop
xlat
pop
iret
inc
fisubrs
pop
mov
and
mov
mov
mov
mov
ret
in
stos
sub
sbb
cmpsb
inc
or
xchg
pop
int
sbb
or
mov
adc
std
jo
cmpsb
fcomps
xchg
stos
daa
jmp
es
in
push
sti
addr16
inc
movsl
pop
xor
sbb
cmp
inc
lock
mov
push
scas
mov
int
push
cs
xor
adc
loopne
rcrl
dec
sbb
push
jo
ret
cmpb
xchg
mov
add
leave
cmp
es
ret
insl
jp
int
adc
dec
cli
sbb
xor
jne
cltd
loop
mov
sub
push
push
and
pop
arpl
mov
aam
lcall
push
jnp
ja
jg
jno
lcall
out
jae
les
adc
push
out
sbb
fmuls
imul
lret
nop
das
cmp
or
mov
pusha
add
test
push
js
outsb
pop
lahf
inc
dec
and
inc
xor
xor
lahf
xchg
cmp
ss
or
jno
mov
imul
fmuls
mov
sbb
fsubrl
xchg
and
les
jb
mov
pop
push
addr16
lea
pop
in
aas
pop
ds
jb
sbb
fdiv
add
pop
ss
sbbb
dec
mov
xchg
sahf
ret
call
cmp
ret
sub
fs
imull
pslld
mov
hlt
inc
int
mov
inc
pop
push
js
mov
and
out
push
outsb
int
test
lods
pop
cmpsl
stc
ret
addr16
lock
pop
test
in
dec
sbb
inc
xor
dec
scas
popa
in
pushf
leave
enter
lret
out
cmpsb
jecxz
mov
fidivl
popa
fstl
or
sub
push
adc
xlat
lret
jge
ljmp
test
mov
aas
sarb
xor
outsb
int3
ret
inc
jnp
int
jl
pushf
pushl
aam
mov
lock
call
jmp
xor
pop
mov
sbb
xchg
sub
xchg
cmp
adc
data16
mov
and
inc
loopne
and
iret
push
test
cli
je
xchg
lcall
inc
loop
js
scas
out
jns
imul
lock
or
subl
sub
pop
adc
jge
or
adc
xchg
pop
xchg
les
cmp
and
jae
lea
pop
mov
inc
pushf
push
mov
push
jmp
fnstcw
mov
xchg
sbb
xchg
int3
rolb
mov
mov
mov
lea
push
and
pop
push
dec
insb
in
clc
adc
pop
test
and
pop
mov
cmc
add
cmp
ljmp
shll
jb
out
cld
es
iret
in
jns
shll
popf
push
push
xchg
xor
and
faddl
jl,pt
es
mov
lret
inc
daa
mov
sbb
push
mov
in
mov
shrd
push
push
cmpsb
or
bound
xor
outsb
addr16
out
push
cmc
int3
lcall
dec
repz
and
inc
dec
inc
sub
aad
lock
int
popa
imul
cmp
dec
mov
sar
out
sbbl
rsqrtps
stc
pop
adc
adc
enter
mov
f2xm1
in
xor
es
jb
ficoms
fsubrs
push
sbb
inc
loop
js
ret
ja
jl
cwtl
xchg
hlt
cmp
sarl
xor
stos
add
fistpll
adc
cmp
and
xor
xchg
pop
dec
mov
push
or
dec
test
scas
inc
add
or
cmp
adc
jg
add
xchg
xor
jmp
adc
out
sub
and
cmp
fcoms
dec
push
ss
and
jne
scas
mov
adc
or
mov
in
mov
and
xchg
es
xchg
dec
enter
dec
or
add
mov
mov
loop
mov
pop
jnp
popf
aam
or
mov
and
mov
cmp
sub
sub
bound
push
sub
dec
ljmp
fcmovnb
fidivrl
mov
jae
pop
mov
sub
mov
pop
mov
jo
push
and
dec
and
adc
xchg
push
push
popf
and
jae
fdivl
xchg
xchg
mov
test
ja
and
lret
pop
sbb
fbld
out
mov
or
sbb
test
fnstsw
jmp
mov
push
push
popa
cwtl
cmc
inc
fcmovnu
lret
adc
cmp
ljmp
cmpsb
sub
ljmp
cld
mov
pushf
stos
loope
lds
idivl
lock
add
call
inc
add
cmpl
xchg
push
incl
fnstcw
loopne
leave
or
and
icebp
cmp
jae
jecxz
iret
out
xchg
inc
ret
xchg
push
std
pop
imul
and
insl
hlt
orl
push
into
jo
lret
mov
push
dec
push
sbb
xor
cmp
js
push
mov
xor
or
xor
dec
or
test
lods
inc
xchg
adc
movb
sbb
out
mov
aaa
cld
loop
inc
xchg
lea
push
add
rcll
cmp
push
jo
imul
push
jl
cmp
jb
mov
cs
cmp
xchg
mov
or
xor
bound
test
adc
add
dec
test
mov
inc
inc
sub
xlat
fsts
pop
xor
add
lock
sbb
mov
ja
clc
aas
dec
push
xor
stos
mov
pop
sub
fnstcw
sbb
cs
fwait
outsl
cli
cmp
movsb
shlb
xchg
aas
fists
inc
add
fistpll
imul
ficoms
mov
sbb
dec
pop
mov
and
test
xchg
fstps
lret
xor
jmp
in
and
sub
sbb
stc
inc
sub
repnz
scas
jmp
js
dec
adc
loop
sbb
jg
imul
and
mov
xor
lods
mov
lret
fs
cmp
and
ret
fcoml
cmpsb
cmpsl
xchg
cltd
test
mov
cltd
fldt
xchg
adc
js
mov
inc
call
insl
cli
xchg
dec
adc
fistps
push
dec
mov
push
xchg
test
aaa
cmp
xchg
ljmp
inc
pushf
repz
sbb
aas
pop
popa
mov
into
xchg
push
cltd
es
mov
or
mov
push
mov
shrb
add
mov
xor
add
fwait
mov
push
inc
xchg
and
rclb
das
mov
jl
push
clc
test
sbb
add
aas
xchg
hlt
pop
or
movsb
sbb
mov
inc
push
sbb
addr16
mov
add
lds
popa
test
lock
lea
dec
push
fs
xor
popl
in
and
aam
pop
mov
add
movsb
xor
add
inc
sub
xorl
mov
adc
insl
loope
outsl
push
sub
or
aam
xor
mov
sahf
pop
retw
scas
dec
cs
and
clc
nop
inc
int3
inc
dec
movsl
push
imul
je
loop
inc
fwait
nop
and
or
popf
ja
mov
push
addb
xchg
cld
and
mov
fimull
test
pushf
addl
add
inc
in
cwtl
and
mov
dec
dec
sub
cmp
and
repnz
push
jg
xchg
or
test
hlt
jne
dec
or
sbb
scas
jl
and
les
pop
and
sbb
pop
aas
negl
test
cmp
mov
mov
or
add
add
shrl
sbb
gs
sub
pop
jb
cmpsb
int3
pop
push
in
xchg
lods
adc
jnp
dec
in
lock
jo
pop
mov
jne
push
fwait
cmovns
or
xchg
in
sbb
cmpb
repnz
insl
xchg
cld
fwait
push
push
xor
xor
js
fildll
flds
xchg
xor
stc
and
xlat
loopne
ret
stos
jl
pop
jl
loope
ss
sbb
filds
cwtl
test
mov
fwait
movsl
lock
mov
iret
jle
inc
arpl
add
stos
stos
in
push
int3
lods
int3
mov
mov
shl
inc
inc
stos
pop
fnstsw
sahf
or
imul
es
sub
push
aaa
adc
pop
test
cld
or
loop
ds
sub
sbb
out
adc
mov
out
incb
fistl
jne
mov
cmpsb
scas
stos
je
xchg
sbb
xor
gs
fsub
shlb
pop
lods
int3
insl
push
in
mov
fisubs
pop
xchg
pop
fdivrl
das
test
lret
adc
mov
sbb
into
loop
adc
pop
pop
sub
pop
out
mov
std
inc
test
pushf
pop
mov
xchg
sub
jo
xchg
inc
dec
pop
or
in
loope
sub
mov
fwait
or
xor
cltd
icebp
std
test
ficomps
add
out
inc
fs
sbb
sub
and
and
sub
aam
and
inc
shll
mov
sub
xor
or
test
scas
adc
add
or
aas
subb
xchg
inc
fiaddl
rcl
pop
adc
pop
jno
jns
addr16
mov
push
dec
dec
int
add
add
lret
out
add
fstpl
sub
in
jbe
cmp
scas
pop
sbb
mov
jp
sub
add
inc
push
test
fnstcw
cmp
xchg
mov
push
js
xor
push
iret
mov
push
adc
nop
xorl
sub
mov
icebp
dec
jp
pushf
pushf
cmp
test
or
inc
sub
ljmp
daa
sub
adc
call
inc
inc
les
or
inc
cmp
inc
jns
negb
dec
sahf
jmp
into
arpl
daa
cmpsb
add
movsb
stos
js
push
add
stos
aad
push
inc
inc
arpl
dec
rcll
jns
ljmp
stc
cltd
pop
xor
es
jae
sbb
rol
lods
pop
les
mov
scas
enter
dec
mov
pop
dec
outsb
mov
mov
mov
jle
push
movsl
or
adcb
jb
xchg
insl
pop
sarb
stc
dec
jecxz
mov
jmp
pop
sahf
pop
dec
daa
jge
or
test
cmpsb
xchg
mov
decb
out
or
adc
rorb
jg
loopne
xor
cmp
mov
mov
add
test
push
cmp
push
in
nop
lods
lretw
inc
push
mov
lods
push
pusha
adc
cmpsl
sbb
mov
aad
and
mov
shlb
sub
and
daa
push
inc
xchg
pop
push
stos
or
aaa
lea
xchg
pusha
mov
cmpsb
push
lds
setne
xorl
mov
pop
inc
and
ficomps
popa
sbb
ja
imul
int3
lahf
jns
mov
sahf
push
fnsave
mov
xor
jns
fstl
movsl
xchg
or
push
xlat
arpl
fidivrs
stc
mov
jb
adc
mov
mov
jmp
xchg
dec
mov
sahf
inc
jbe
dec
out
jo
lods
sub
sub
ret
je
mov
mov
lds
gs
jmp
mov
mov
aam
xchg
inc
mov
addr16
mov
jae
xchg
adc
cmpsb
mov
inc
test
in
add
stos
lcall
jge
sbb
dec
ljmp
push
lahf
lea
adcb
and
xchg
sbb
xor
mov
shll
arpl
fcmovne
repnz
cmp
movsl
lea
rep
xchg
jnp
es
pushf
fnstenv
mov
hlt
adc
cmpsb
inc
mov
xchg
fwait
cmovne
xchg
pop
out
push
pushf
xchg
fldl
fistps
std
loope
ljmp
dec
lcall
xor
lods
ljmp
cmc
mov
js
or
fsubs
or
js
int3
add
jns
sub
mov
jbe
cs
push
cmp
scas
cmp
lock
sub
lea
fildll
movsb
mov
pop
xchg
mov
sbb
push
adc
fidivrs
out
stc
sbb
test
ljmp
into
daa
jae
mov
stc
cmpl
jmp
shrb
out
mov
and
jmp
and
and
mov
adc
adc
sbb
xchg
sahf
ror
mov
repz
scas
fimuls
jmp
xchg
icebp
pop
xor
ss
add
test
repnz
mov
out
movsb
xor
mov
mov
sub
sbb
adc
xchg
ss
xchg
pop
adc
into
mov
aad
push
repnz
xor
add
sub
mov
andb
idivl
adc
push
adc
int3
adc
mov
add
lods
out
dec
int
push
and
adc
rolb
pushl
cmp
shll
sbb
testl
loopne
je
jle
daa
mov
shlb
add
adc
movsb
mov
adc
adc
mov
xor
daa
int
test
sahf
pusha
adc
xchg
fsubrl
es
and
icebp
sbb
arpl
and
adc
xor
xor
pop
or
and
roll
int
inc
sub
add
push
test
push
andb
iret
lret
and
mov
inc
xlat
in
das
jmp
out
mov
sub
mov
imul
mov
mov
test
outsl
mov
push
lcall
mov
popf
mov
cmp
lock
repnz
ret
push
outsb
mov
inc
sbb
xchg
push
aam
push
adc
hlt
xor
mov
mov
xchg
sarb
in
fwait
add
repz
or
shll
or
pop
mov
pusha
and
rcrl
ljmp
xchg
mov
fs
push
data16
sbb
imul
and
pusha
pop
push
sbb
ror
in
and
inc
ja
rorl
or
adc
testb
sbb
xchg
cs
fsts
jo
jle
mul
push
sahf
je
adc
out
lds
inc
sahf
lret
ja
insl
in
or
jns
loope
xchg
mov
test
mov
in
xchg
movsb
sahf
lods
pop
adc
scas
lahf
mov
cli
jg
stc
into
test
jecxz
outsb
and
ss
jns
in
sahf
xor
sbb
lea
ljmp
test
fcoml
clc
xchg
enter
sarb
les
es
scas
inc
mov
je
insl
or
push
xchg
mov
cmp
xor
inc
inc
jns
aaa
outsb
pop
adc
pop
mov
fists
xor
sbb
loope
in
loope
mov
out
jmp
pop
adc
jb
mov
andb
pop
gs
lea
mov
and
je
and
sub
cmp
or
lods
arpl
popa
cmp
out
rcrl
int3
sarl
dec
insb
jo
jo
mov
sbb
movsb
sti
repz
mov
lock
cld
xor
gs
xchg
jge
fnstsw
in
pop
pushf
jmp
ja
pop
push
and
subb
clc
out
stc
xchg
adc
into
lcall
mov
fsubr
stos
fistpll
push
sbbl
outsl
inc
stos
xchg
xchg
popf
pop
jns
insb
frstor
mov
cmovbe
outsb
in
mov
ret
fldenv
xchg
inc
das
cmc
leave
in
jbe
sbb
and
lds
pusha
mov
mov
out
lock
lahf
cli
dec
es
test
adc
bound
and
mov
mov
jo
mov
sahf
and
or
cmp
sub
inc
sub
cmpsb
scas
push
add
movl
mov
insl
sbbl
ret
ja
out
imulb
mov
or
mov
dec
jne
lcall
dec
mov
ror
imul
pop
cld
mov
loopne
cmp
dec
push
mov
ja
sti
lret
lock
or
mov
roll
mov
js
mov
aad
mov
mov
mov
movsb
vprotw
enter
int3
scas
pushf
pop
rdtsc
negl
sbb
mov
in
dec
fsub
cli
insl
add
outsl
xor
cmpsb
ja
mov
cmp
test
push
mov
in
dec
jae
mov
lea
fwait
ljmp
and
adc
sti
jnp
pop
ret
jae
dec
popf
xchg
xchg
ret
scas
push
mov
scas
vsubpd
mov
cmpsl
cltd
sbbb
adc
jecxz
pop
lods
mov
mov
popa
out
testb
and
dec
rorl
and
push
leave
aad
aam
das
cmpsb
xor
repz
or
out
add
inc
cmp
call
imul
or
adc
mov
filds
pop
or
mov
pop
or
daa
pop
xchg
mov
notb
sbb
pop
addb
xchg
sahf
cmp
ret
idiv
mov
mov
scas
hlt
xchg
dec
or
or
lcall
outsl
cmp
xor
cmp
dec
lea
fidivrl
jo
or
dec
mov
aas
mov
jecxz
adc
imul
repnz
sbb
or
mov
cmc
sbb
xchg
aaa
std
divb
icebp
xchg
out
xor
cli
and
mov
xor
mov
out
push
lods
scas
in
jecxz
xchg
jns
fnstcw
repnz
pop
out
or
mov
in
and
xchg
rorb
dec
inc
jnp
sarl
icebp
adc
or
dec
mov
in
lea
add
xchg
sbb
out
jae
adc
pop
stc
mov
inc
push
sbb
inc
mov
push
dec
daa
jle
das
push
cmp
push
adc
xor
fiadds
nop
daa
cmp
pop
idivl
jae
mull
sahf
enter
xchg
cld
pop
imul
add
out
mov
repnz
push
scas
ja
int3
sub
aam
and
pushl
and
ljmp
mov
inc
mov
nop
xor
sarb
in
dec
aad
xor
push
jecxz
fdivrs
call
inc
cltd
je
dec
int3
gs
shll
fmul
lret
jo
sub
cmp
out
outsb
or
jp
cmp
adc
in
repz
push
movsl
mov
ret
cmp
mov
mov
and
leave
mov
and
mov
movb
fwait
add
cmpsl
mov
popf
pop
es
xor
mov
and
mov
sbb
inc
fcompl
lods
aad
xor
xchg
cmc
and
inc
add
inc
aaa
test
jnp
dec
ret
pop
inc
push
xchg
lods
push
adc
into
adc
shl
sarl
and
or
pop
xor
out
js
fisubrl
fldenv
mov
cmp
inc
fildll
je
jl
stos
cltd
nop
daa
and
fcomps
sbb
inc
jae
cwtl
scas
addb
mov
adc
fidivrs
jle
jae
mov
enter
js
pop
imul
mov
pushf
jne
jl
mov
mov
leave
jle
leave
add
call
sar
mov
ds
ja
ds
nop
test
out
sbb
fstl
ss
fs
subl
in
stc
movsb
sbb
push
xor
mov
shrl
xchg
and
popf
ret
scas
mov
mov
inc
insb
add
loopne
adc
cmp
cmp
lods
sahf
rcrb
push
pop
push
insl
cmpsb
mov
out
les
mov
adc
ss
js
push
and
out
push
xor
outsl
mov
sub
push
fsts
mov
in
mov
insl
loopne
mov
daa
movsb
push
insb
xor
movl
mov
popf
cmp
xchg
adc
jbe
scas
cmpl
test
adc
xchg
xchg
int
pop
adc
push
aaa
not
ret
int
jle
adc
sbb
mov
cmp
mov
jmp
popf
cwtl
flds
pop
leave
in
mov
pop
fwait
jb
gs
sbb
das
adc
and
pushl
fistl
call
imul
dec
out
repz
lods
test
or
xor
xchg
addr16
push
sbb
mov
cmp
iret
mov
mov
out
add
mov
inc
outsb
push
imul
jg
xchg
add
fsubrs
aas
in
mov
rcr
jnp
movsl
lea
dec
fnsave
stos
xor
and
jnp
outsb
push
sahf
mov
adc
stc
je
pushf
inc
loope
sti
cmpsb
es
insl
das
cmp
hlt
jnp
push
scas
rorb
imul
push
jbe
stc
cmp
addb
jbe
jno
fsubl
fnstsw
mov
pop
lods
ffreep
test
or
sahf
fimull
call
dec
adc
ja
mov
shlb
aad
sbb
popf
mov
inc
fbld
rcr
in
push
mov
mov
pop
add
or
popf
and
pop
and
mov
push
mov
cmp
fnsave
hlt
mov
mov
leave
and
aam
gs
mov
mov
push
bound
dec
jp
pop
push
adc
lea
push
or
flds
leave
lods
and
ficomps
int
mov
in
lock
clc
mov
mov
cmp
jg
sbb
dec
cmp
insl
cmpb
ss
adc
or
pop
daa
dec
bound
sub
aaa
xchg
pop
fidivs
inc
inc
jno
cmp
pop
mov
inc
jns
imul
iret
imul
insl
ss
ljmp
imul
and
shll
lcall
fcompl
xchg
cmpl
xor
dec
js
add
popa
cmpsl
je
sbb
dec
push
xlat
inc
mov
mov
loopne
push
push
out
pop
ss
push
push
push
jmp
mov
mov
xor
xor
add
cwtl
loop
lret
inc
xor
adc
sti
sti
dec
jge
roll
jae
scas
scas
pop
aam
cmp
dec
arpl
imul
mov
sub
adc
adc
dec
or
repz
cmp
stos
in
sarl
xlat
jecxz
adc
cmp
outsb
pop
rorl
xchg
pop
imul
stc
dec
inc
test
fisubrl
sbb
mov
fwait
pop
pop
pop
pop
inc
jecxz
cli
ja
js
sub
sub
out
scas
adc
call
sbb
xchg
jle
mov
pop
xchg
sbb
ja
pop
sbb
frstor
push
jae
test
fsubrp
sub
xchg
and
dec
flds
cmp
lret
or
iret
mov
and
mull
mov
xchg
cmpl
cmp
mov
add
and
rorl
fs
sbbl
sub
push
lcall
xchg
mov
sub
daa
jb
ror
hlt
out
test
pop
add
xor
mov
cmpsl
out
inc
add
sub
jmp
sub
mov
jg
out
rclb
xor
and
pusha
mov
jecxz
dec
sti
pop
push
pop
ljmp
addl
mov
and
cmp
sub
lea
sub
fsubrs
mov
mov
outsl
and
sbb
push
mov
scas
dec
jbe
jle
cmp
test
xlat
or
aad
mov
cmp
jns
and
lods
gs
xor
pop
out
jb
outsl
push
cmp
pop
cmp
je
fsubr
inc
push
test
stos
jo
add
scas
push
ljmp
dec
jne
jl
ds
repz
xor
call
dec
out
push
shrb
movsl
cli
jg
mov
lock
shll
xchg
mov
inc
add
fsubrl
enter
push
jne
movsl
mov
addr16
sub
dec
loop
je
dec
aam
jg
jb
push
in
adc
cmp
jl
shrl
call
fisttpl
stos
mov
sbb
xchg
into
fiadds
xchg
fldl
pop
lcall
divb
addr16
and
int
dec
mov
in
aaa
push
std
cltd
pop
push
into
lret
in
adc
mov
ret
das
push
std
push
or
xchg
xchg
mov
sbb
push
xor
jb
xchg
pop
hlt
test
frstor
inc
jbe
mov
push
mov
int3
push
adc
and
sbb
sbb
push
fisttpl
mov
repnz
leave
mov
mov
stos
repz
mov
mov
or
sbb
in
xchg
mov
jl
std
imul
testl
addb
pop
pop
inc
cmc
je
dec
aaa
mov
lds
ja
sahf
pop
push
sub
pop
fbstp
cs
or
dec
and
ret
rolb
push
mov
lea
xchg
add
sbb
cltd
sahf
leave
push
std
or
cli
sbb
insb
xchg
lea
ja
mov
lret
jo
add
or
std
adc
lcall
mov
test
leave
inc
dec
and
fnstsw
mov
push
sbb
inc
decl
lock
pop
inc
mov
xchg
fnstcw
jmp
inc
stos
and
cld
add
push
icebp
mov
insb
push
mov
inc
adcl
loop
std
test
daa
fsubrp
call
sti
lea
add
push
clc
popa
daa
push
or
adc
mov
push
and
loope
icebp
xor
shlb
or
int
jg
jnp
mov
jp
add
in
add
dec
out
aam
pop
sbb
cltd
es
bound
arpl
mov
xlat
lea
xor
cmp
into
mov
pop
mov
sbb
sbb
jno
arpl
xchg
popf
mov
pop
push
sti
cmpsb
dec
mov
pusha
ss
mov
stc
mov
test
popa
lret
mov
stos
push
mov
sub
cmp
mov
adcb
jnp
in
mov
sahf
outsl
add
lock
cli
mov
push
imul
inc
inc
sub
jmp
mov
inc
fs
jmp
mov
push
stos
addr16
pop
outsl
into
pop
cmp
mov
push
jnp
push
fs
stos
pop
cmpsl
sbb
lret
push
jno
adc
adc
pop
cmpsb
push
clc
xchg
and
xor
js
pop
inc
dec
ss
mov
pop
inc
ss
cmc
and
mov
mov
test
sarl
xor
sarb
dec
jl
mov
sub
sbb
xchg
pop
dec
movsb
xchg
cmp
mull
jp
cmp
rcrl
or
ss
pop
aam
flds
int3
leave
pop
pushf
sub
or
cmp
xchg
enter
rcrb
outsb
fs
cmpsl
cmp
push
xor
icebp
sub
ljmp
lahf
in
mov
dec
rcl
aaa
pop
adc
imull
js
sbb
stos
pop
add
fsubrs
scas
cmpsb
mov
repnz
mov
inc
add
dec
repz
sbb
call
cmp
sub
push
sub
pusha
stos
stc
cmp
roll
mov
inc
xorb
mov
pop
cmc
lret
scas
int
jo
ss
test
xlat
rorb
jmp
mov
mov
stos
inc
adc
mov
push
mov
notb
cmp
push
fbld
push
mov
and
or
out
test
push
cli
arpl
ret
push
mov
fisttps
xchg
neg
ja
arpl
mov
pop
fmul
popf
adc
push
shl
testl
mov
and
cli
mov
or
mov
xchg
out
mov
inc
stos
add
inc
dec
icebp
data16
sbb
cmc
dec
rolb
gs
mov
movsb
out
ljmp
in
fldt
push
xor
cmpsl
jmp
rorl
stos
leave
mov
cli
adc
lock
orl
push
inc
or
repnz
sbb
sub
xchg
push
popf
jp
mov
mov
push
pop
mov
out
or
push
mov
mov
push
adc
cltd
jb
cmp
clc
imul
test
or
lock
adc
ljmp
aad
push
push
shll
jo
adc
scas
rcrl
call
xorb
sub
push
push
fwait
stos
xchg
or
push
cmp
insb
sahf
mov
cmp
fmull
out
daa
enter
add
imul
repz
xchg
xchg
sbb
movl
push
adc
ja
out
or
push
stos
insl
out
cmp
jne
adc
inc
cmp
cltd
pop
daa
push
rorb
and
cli
add
jl
dec
cmp
je
sub
repnz
ljmp
push
mov
adc
sti
enter
fwait
push
enter
push
dec
mov
mov
fnsave
stos
insl
mov
push
dec
adc
in
cmp
jmp
sbb
adc
int3
and
lods
or
filds
push
jb
addr16
jp
ret
lods
in
xchg
cmpl
mov
scas
aaa
lods
inc
xchg
jo
je
cmpsb
scas
jb
xchg
out
arpl
sub
fbld
aam
add
sub
xchg
out
iret
xor
cwtl
push
idivl
mov
push
mov
std
adc
repz
frstor
inc
mov
push
fwait
mov
jge
scas
xchg
outsl
lods
mov
gs
cmp
sti
aam
pop
lods
popa
adcl
jbe
in
ja
vmovd
push
xchg
dec
push
popa
outsl
in
add
cmp
scas
dec
mov
and
or
sub
or
iret
xor
mov
test
aaa
shlb
movsb
in
dec
mov
jne
cmp
push
jnp
mov
je
aaa
enter
sub
cmp
xchg
sahf
sbb
mov
mov
std
insb
cltd
inc
dec
repz
mov
ret
iret
add
mov
cmp
into
xor
in
int
push
divl
cmp
mov
sti
inc
ja
int3
pop
int
jge
aas
xchg
xor
and
mov
cmpsb
cmp
sarb
jae
jecxz
cmpsb
mov
mov
cltd
loopne
or
push
add
mov
xor
cmp
mov
pop
ss
pop
push
sti
inc
adc
lret
mov
cli
cmp
sub
out
sbb
jb
cmp
js
xor
push
xor
sbb
add
repnz
pop
inc
or
xor
adc
movsl
or
or
xor
add
jl
mov
add
in
xor
cmpsl
sub
out
ss
adc
adc
imul
mov
jl
push
adc
sbb
test
jmp
cmp
adc
cmp
mov
loopne
mov
cmp
inc
and
push
cmp
cltd
cmp
pop
jnp
in
clc
cltd
sub
adc
hlt
movzbl
pop
lock
fisubl
shlb
adc
sub
scas
js
cmc
fisubl
mov
push
data16
pop
in
aad
jmp
je
clc
pop
dec
mov
xor
adc
outsl
addb
add
xchg
fcomip
mov
adc
jecxz
sub
inc
cld
mov
nop
or
mov
pop
pop
push
pushf
test
cld
fnstsw
rcr
aas
sub
xchg
mov
cs
jne
into
stc
pop
cmp
or
mov
stos
sbb
adc
int
dec
cld
or
mov
dec
out
lds
xchg
call
cmpb
loop
adc
lcall
iret
push
in
mov
lock
sub
ss
xchg
inc
inc
mov
scas
cmc
mov
xor
insb
pop
jno
mov
lds
or
lfs
mov
out
sbb
lock
stos
lahf
xor
testl
rclb
mov
mov
cmp
in
aaa
idiv
mov
jno
insl
fildl
sbb
add
inc
mov
sub
xchg
jb
xchg
xor
fwait
sub
clc
outsb
scas
fsubrs
icebp
pop
mov
add
dec
xor
adc
outsl
hlt
sbb
pop
or
je
ror
lea
sub
xchg
stos
xchg
aas
fisubs
mov
nop
add
mov
adc
lds
mov
and
and
mov
dec
adcb
cltd
popf
loop
lock
jg
cmp
jno
fstpl
fldcw
mov
adc
mov
and
int3
push
shlb
jne
and
cmpsl
and
mov
inc
aad
test
pop
roll
adc
push
cli
loope
dec
in
jg
cwtl
jnp
jp
pushw
fsubrs
mov
inc
push
subl
jno
inc
cmp
xchg
cwtl
adcb
loopne
xor
xlat
jb
std
idivl
add
push
fildl
mov
test
ljmp
fwait
mov
or
das
rolb
or
ficoml
clc
sbb
cs
dec
ret
sbb
dec
or
jns
xchg
insb
shl
jo
dec
cmp
es
pop
adc
in
or
sbb
fisubs
test
scas
cmc
xor
pop
add
testb
push
xchg
adc
leave
cmp
jge
mov
sub
sbb
cmpsb
mov
dec
clc
mov
push
jp
mov
dec
scas
lock
pop
jge
test
sub
push
jl
sbb
pop
xor
dec
push
popf
dec
sbb
lea
cmp
testl
sahf
fisubl
or
inc
jl
aaa
inc
loop
mov
stc
xor
hlt
imul
in
and
xchg
pop
mov
add
lret
sbb
dec
fwait
xor
fistps
icebp
xchg
je
lock
and
or
mov
add
pop
xor
arpl
bound
std
into
pop
cltd
mov
jecxz
xor
sbbb
inc
loope
xchg
sbb
dec
pop
push
xor
repnz
dec
cmp
jo
jns
lds
mov
xchg
lds
sub
cli
mov
out
mov
xchg
popf
sub
xor
xor
push
push
mov
inc
push
jno
and
stos
ret
push
scas
add
lcall
dec
inc
outsb
mov
test
shll
xchg
cltd
cli
lret
jl
mov
xchg
pushf
inc
jbe
fs
cmp
or
jo
inc
cmpsl
mov
mov
inc
gs
clc
loopne
outsb
out
add
fnstsw
dec
loopne
sti
or
imul
push
lods
xchg
lret
out
adc
cmp
adc
shrb
aas
push
cmpsb
lock
bound
mov
sub
in
add
test
jl
clc
mov
in
out
adcl
mov
xchg
in
decb
adc
xchg
mov
lahf
inc
iret
dec
xor
xchg
jbe
pop
loop
icebp
jp
out
lds
inc
aaa
jmp
xor
sbb
in
cmp
push
sbb
and
fbld
loopne
fnstcw
test
out
adc
sub
insl
mov
imul
jne
int3
orb
mov
scas
aad
fbld
fs
hlt
das
lcall
mov
int
xchg
sub
fldl
decl
addl
lret
xchg
lods
jecxz
jecxz
inc
or
dec
mov
mov
xor
popa
mov
mov
aaa
inc
je
or
clc
push
pop
mov
out
hlt
and
sbb
fldcw
xchg
movsl
mov
adc
sub
sub
dec
inc
call
outsl
clc
js
ret
mov
add
filds
fdivl
mov
jnp
iret
insb
test
sub
mov
test
add
mov
add
mov
sbb
sti
cwtl
js
and
cmp
add
pop
xchg
scas
hlt
pop
sti
cmc
cmc
cwtl
subl
rcll
pop
rorb
ror
fsubs
test
or
mov
jnp
xchg
fistpll
inc
mov
lcall
adc
dec
jecxz
add
shlb
lods
and
lea
in
int
jmp
jbe
lret
add
cmp
mov
cmpsl
lods
rorl
sbb
scas
stos
inc
xchg
lock
fs
dec
loop
push
rcl
push
mov
icebp
test
cmp
xor
xchg
imul
lahf
jo
xchg
mov
or
sbb
outsb
mov
cmp
addb
fwait
xchg
xor
sbb
scas
loop
test
aad
mov
mov
mov
mov
cmpsb
jae
out
pop
mov
xchg
jbe
mov
dec
cld
jge
mov
xlat
inc
icebp
pop
mov
mov
ja
pop
pop
dec
cltd
dec
sub
inc
jge
pop
lods
faddl
jmp
mov
mov
repz
rolb
push
rcll
loop
mov
insb
cmp
imul
pop
pushf
mov
jmp
xor
xchg
xchg
mov
sub
out
pop
insb
shlb
jle
inc
push
ss
std
fs
leave
jbe
enter
lret
nop
mov
push
push
jno
sbb
test
fs
mov
pusha
or
sbb
cmp
es
in
ret
push
je
adc
pop
jne
movsb
add
cmp
sub
out
jle
pop
loopne
jnp
les
add
test
enter
mov
and
imull
je
gs
pop
scas
jne
mov
inc
dec
test
or
out
inc
inc
filds
div
fs
shrb
inc
rcl
sti
cmc
stc
xchg
lret
mov
mov
and
jl
push
inc
pop
or
jle
bndstx
jbe
imull
sub
inc
adc
add
push
xor
cmp
sub
cmp
xchg
loope
icebp
mov
fiaddl
cmp
pop
ljmp
je
cmp
rorl
ret
call
sub
dec
fildll
shlb
test
adc
or
push
scas
lcall
ror
fiaddl
push
std
xchg
cmp
decl
fisttpll
lods
mov
adc
mov
jmp
jo
xchg
xchg
mov
mov
mov
xor
jle
and
ss
dec
pop
incb
outsb
mov
jbe
in
or
mov
pop
mov
les
pop
inc
mov
sub
jbe
pop
in
add
ret
sbb
xchg
ljmp
test
sub
in
stc
mov
mov
jg
addr16
dec
cmp
iret
clc
sub
out
sub
call
add
cmp
dec
adc
sbb
push
dec
mov
dec
push
pop
dec
lret
add
cmp
insb
push
mov
and
cwtl
in
cmp
cmp
ja
jne
dec
jmp
mov
add
scas
mov
repz
rcrl
loop
push
stos
jmp
test
jae
and
inc
fs
in
insl
fnclex
cwtl
in
mov
and
mov
mov
adc
xorb
lods
mov
push
adc
loopne
sahf
sub
daa
mov
mov
dec
mov
mov
fsts
fldt
pop
js
push
fcmovnbe
adc
rclb
out
push
or
popf
fs
add
fmulp
shll
push
sub
xor
mov
andb
fnstenv
sbb
gs
xchg
lahf
dec
push
stos
sub
mov
loop
adc
test
lcall
insl
mov
insb
fwait
ss
xchg
cmp
testb
fbld
push
pop
scas
cmp
adc
dec
push
ffree
sbb
jl
jo
sbb
cmpsb
pop
fldenv
jae
mov
jnp
iret
xor
movsl
cmp
cltd
add
adc
pushf
jno
stos
dec
loop
pop
ret
cmpsb
fdivs
add
ljmp
cltd
sbb
in
xchg
cmp
jge
lret
mov
jmp
mov
jle
pop
push
mov
mov
xchg
dec
popa
lahf
jns
loop
in
xor
cmc
outsl
lock
aas
adc
fwait
test
mov
sti
iret
xor
sbb
xlat
lock
sahf
xchg
lea
inc
das
out
rcr
pop
mov
popf
clc
test
ret
fidivrl
fcoml
negb
pop
pop
adc
pop
test
ret
dec
cmp
and
mov
cmp
mov
cltd
sub
in
inc
mov
scas
pop
jecxz
int3
aas
lret
sahf
test
cmp
dec
dec
mov
sbb
jns
cmp
call
inc
xchg
jnp
push
icebp
and
xor
adc
pop
ja
pushf
pop
xor
fisubrl
fsub
les
test
mov
in
fs
xor
test
xchg
or
xlat
sbb
inc
popf
lea
and
jne
fdivs
or
bound
adc
pusha
push
fxam
popf
pop
or
hlt
xchg
pop
or
test
test
not
iret
add
aas
sbb
or
shrb
ds
adc
cmpb
and
cltd
and
inc
sahf
or
adc
icebp
mov
sahf
sub
sbb
cmp
lods
cli
cmpsl
pop
push
dec
cwtl
repz
shlb
cmpsb
pop
lea
fmuls
xor
inc
das
lretw
jne
out
dec
push
out
dec
sbb
and
testl
in
cmpsb
pop
shll
bound
cld
and
xor
mov
test
sub
inc
lahf
sbb
dec
inc
insl
lods
mov
mov
jnp
push
or
dec
stos
mov
pop
pop
aaa
je
fcoml
out
icebp
cmp
fdiv
cltd
or
cmp
and
test
dec
inc
pop
mov
sbb
jmp
push
jbe
negl
cmp
cmp
ret
subl
mov
call
lahf
daa
aad
mov
ret
sbb
cmp
scas
xor
cld
lock
sbb
jo
sub
dec
filds
out
sub
leave
sbb
and
movsl
loope
pop
std
data16
out
jo
jl
push
mov
out
cmp
insl
jmp
cmpsl
push
pusha
mov
xchg
lret
fisttpl
dec
dec
and
aaa
push
std
in
cltd
xor
outsl
das
cwtl
add
pushf
sub
sbbl
movsl
rcr
outsl
xor
dec
fstpt
jnp
shlb
sti
loop
arpl
dec
in
add
push
pop
sahf
fsubp
mov
xor
mov
dec
push
aas
pop
js
js
dec
into
mov
fadds
push
mov
mov
scas
pop
mov
and
fiaddl
pop
mov
mov
jae
jle
xor
sub
out
xlat
cmp
mov
test
rorl
rolb
fisubrl
add
xor
xchg
stc
fstl
shll
push
push
cmp
cltd
cli
enter
add
mov
fadds
popl
aaa
std
push
or
roll
repz
out
mov
mov
bound
aam
ret
mov
add
adc
insb
mov
ja
out
inc
push
mov
adc
dec
scas
cld
enter
xchg
ds
ljmp
subb
cmc
mov
sbb
xchg
out
jnp
xor
mov
cmpsl
cwtl
inc
cmp
xchg
popf
ss
push
lods
call
jae
dec
sbb
mov
lret
and
and
sbbb
lods
lret
mov
pop
add
inc
orb
xor
dec
add
lods
jno
lcall
mov
pop
pop
jnp
or
mov
add
xchg
insl
adc
sbb
aad
dec
repnz
mov
xor
mov
push
add
clc
and
inc
mov
xchg
aaa
jg
in
movsb
js
push
inc
fnstsw
adc
push
dec
outsl
jge
filds
fs
add
adc
cld
sti
ret
jno
ds
rcrl
inc
pushl
jnp
or
and
cld
aad
and
xor
out
call
xchg
push
addl
outsb
shll
push
mov
mov
xchg
jmp
test
and
daa
cmc
push
out
aas
divl
loop
lahf
inc
adc
mov
cmpsl
addl
pop
or
mov
fildl
sbb
dec
jge
inc
sub
mov
xchg
sbb
lds
pop
ja
xor
pushl
push
dec
push
out
cwtl
jecxz
lret
stc
push
pop
or
sub
dec
jne
movl
xlat
lret
or
scas
fidivs
push
bound
pop
jo
cmp
rcll
and
adc
lret
lea
subl
pop
scas
cmp
fsubrs
push
lods
xchg
roll
ret
cmp
push
adcl
sub
adcl
inc
insb
cmpsb
aas
mov
or
fst
das
cmp
leave
or
dec
in
jne
es
ja
cmp
outsb
mov
jno
nop
xor
stc
movsb
mov
cmp
jae
cmp
out
xchg
mov
sub
scas
das
push
dec
adc
jg
mov
mov
dec
ljmp
mov
dec
and
adc
lock
add
jno
push
cmp
push
mov
cmp
sbb
cmc
rorb
lret
jg
test
sti
bound
fsubp
cmc
pop
stos
cmp
pop
sbb
inc
out
iret
add
loopne
cltd
lahf
nop
pop
mov
rolb
mov
jo
aaa
jno
inc
repnz
subb
sbb
fadds
pusha
fwait
dec
daa
dec
sub
lds
stos
mov
push
movsl
sub
fldt
inc
push
fistl
xor
dec
push
into
xor
popf
pusha
and
jae
and
stc
xchg
ficomps
pusha
test
jbe
mov
cmpsb
push
cmp
mov
mov
push
mov
pop
cmpsb
jo
xor
insl
mov
in
pop
push
bound
jnp
sbb
push
insb
push
das
jb
adc
or
mov
sarl
inc
test
xor
xor
stos
jecxz
das
jmp
xor
stos
pop
in
mov
out
pop
pop
dec
stc
imull
test
or
push
enter
sbb
mov
imul
adc
repz
imul
fists
dec
push
cmp
out
cmp
mov
mov
jb
add
dec
mov
cs
adc
ds
test
insl
cmpsl
mov
ret
jne
xchg
mov
daa
lods
xor
subl
cltd
cmp
ljmp
ljmp
push
stc
subb
int3
fistps
inc
in
les
ja
mov
jns
xor
out
ss
push
sti
pushw
push
ror
push
arpl
mov
inc
mov
stc
sub
add
nop
test
add
mov
int3
dec
cli
test
xor
stc
jae
outsl
pusha
icebp
jge
inc
roll
je
mov
dec
and
mov
pop
sbbb
mov
lods
out
mov
xor
jecxz
mov
movsl
push
stos
or
je
xchg
aad
ror
xchg
sbb
sbb
add
sbbl
push
xchg
xchg
sub
lock
loopne
mov
aas
fsubr
pop
lret
std
and
dec
mov
adc
idivb
add
das
sbb
pop
out
xchg
fmul
mov
jae
add
mov
fisttps
lahf
add
add
lea
loope
adc
movsb
push
xchg
pop
ficompl
lret
cmp
mov
rclb
frstor
xchg
dec
dec
aaa
fidivl
add
insl
fstps
test
iret
stos
arpl
and
loopne
addr16
outsl
int
sub
daa
pop
lret
mov
stos
push
in
outsl
inc
pop
pop
stos
insb
or
outsb
cmpsl
repz
jae
cmpsb
cmp
cmp
seto
jnp
xchg
in
fmull
jae
cmpsl
aam
imul
in
cmp
insl
aam
leave
mov
fbstp
pop
cmp
and
and
hlt
mov
out
aam
jno
hlt
jge
js
inc
or
hlt
bound
jecxz
adcb
ss
pop
mov
mov
or
xchg
pop
push
insl
out
cld
hlt
sti
jbe
and
frstor
test
cmp
add
or
jge
shl
or
aad
loope
mov
andl
add
inc
std
sub
or
xchg
lret
sub
movsl
jns
pop
mov
dec
aas
test
ret
mov
adc
xchg
cmpsb
jne
cmpl
sub
adc
cmp
aaa
jg
mov
loope
das
inc
pop
mov
ret
outsb
mov
mov
inc
or
adc
mov
cltd
jmp
aad
mov
outsb
sub
dec
stos
adc
xchg
mov
pushf
mov
lret
sub
cmp
mov
pusha
and
dec
add
or
push
daa
and
push
icebp
adc
cmpsl
jg
cwtl
add
cs
push
out
jp
movsb
push
sbb
lahf
mov
inc
bnd
inc
sbb
jae
push
push
jmp
mov
addr16
mov
clc
mov
sub
test
pop
fnstenvs
mov
das
jecxz
sbb
loope
xchg
fwait
andl
push
mov
testl
pop
add
jo
push
popl
imull
cwtl
dec
imul
mov
xchg
mov
jecxz
inc
jl
push
xchg
push
sahf
cmc
les
inc
jb
sbb
lds
mov
insb
jg
add
push
and
inc
pushf
cmp
mov
pop
jg
inc
dec
add
mov
addl
idivb
out
add
aaa
sub
in
in
xchg
in
ljmp
xor
jp
mov
iret
mov
test
sub
sbb
dec
jo
stc
lret
fsubr
orb
jnp
les
cli
sahf
je
mov
das
pop
das
insl
clc
xchg
mov
daa
scas
mov
sbb
notb
imul
inc
addr16
sub
mov
aaa
pop
sub
test
push
int
mov
shlb
ltr
push
xor
testl
cmp
add
xchg
dec
push
gs
mov
mov
jmp
std
lods
ret
fwait
in
fstp
enter
xchg
dec
push
mov
popf
popa
arpl
fwait
pop
xchg
daa
in
mov
adc
movsb
or
xor
jmp
xchg
fwait
aad
dec
push
add
pop
scas
inc
sub
sub
adc
cld
lahf
or
lods
push
movsb
mov
or
mov
pushf
cmp
adc
lock
das
add
xor
pusha
jnp
mov
loope
stos
add
aad
imul
cs
les
jge
sarl
mov
adc
dec
inc
push
sub
int3
jo
loop
xor
adc
out
or
xchg
out
or
popf
test
mov
pop
or
xchg
adc
mov
xchg
or
mov
mov
sbb
lcall
pop
push
inc
pop
pop
test
test
jnp
xchg
and
mov
out
seto
xchg
xchg
mov
inc
lods
push
imul
or
mov
cmp
add
pop
rolb
jb
pop
jae
jge
out
adc
pop
mov
dec
xor
cs
cmp
call
pop
in
cmp
jle
in
push
mov
sar
lock
xor
and
mov
add
and
lret
mov
int
scas
out
fistps
je
outsb
jl
pop
mov
dec
cwtl
mov
jnp
out
mov
in
push
test
sub
sub
mov
dec
add
pop
xor
fsub
mov
ja
gs
inc
pop
jecxz
mov
movsb
pop
orb
mov
mov
mov
cli
loope
mov
insb
jp
outsb
or
clc
pop
iret
adc
int
pop
inc
and
imul
pop
rorb
lret
jp
push
xlat
sbb
and
inc
xchg
add
xchg
mov
xchg
jb
mov
sbb
ret
out
dec
fsubrs
cmpsb
dec
push
ja
pushf
and
and
ja
sbb
push
insl
stc
stc
aas
insb
ds
sbb
scas
dec
loope
or
mov
xorl
std
xchg
add
adc
imul
stos
pop
fnsave
jle
andb
fisubs
fmuls
mov
lods
lock
xchg
leave
push
rcrb
cli
mov
xor
add
in
out
int3
outsl
dec
or
dec
adc
mov
test
rolb
aas
in
cs
scas
aaa
xchg
adcb
inc
aam
sub
fisttps
mov
fwait
outsl
mov
pop
addr16
mov
push
dec
ljmp
fisttpl
pop
je
mov
sbb
jb
mov
mov
iret
ds
cld
cs
fisttps
insb
mov
stos
js
jns
sbb
add
lods
lcall
stc
mov
inc
inc
cmp
imul
xchg
vpaddsw
cmp
addb
xor
or
ljmp
inc
mov
push
jbe
inc
aad
fistps
xor
xor
rolb
jne
shl
sub
adc
add
cmp
push
jmp
orl
jl
fsubrl
inc
inc
int
or
decb
es
ljmp
jnp
pop
leave
cmp
inc
mov
hlt
loopne
push
xchg
test
int
scas
pop
jl
popa
xor
loop
cmp
push
and
jb
scas
ss
lret
mov
push
jl
pop
cltd
ja
stc
test
dec
add
inc
cltd
lea
mov
pop
pop
lret
mov
pusha
push
icebp
out
and
aad
mov
dec
dec
clc
ja
mov
push
xchg
push
push
cs
lahf
rcr
shrl
in
mov
ret
push
cli
mov
push
aas
xlat
add
adc
mov
scas
push
aam
push
out
sub
inc
jge
mov
jmp
mov
pop
fistpll
insl
xor
sahf
jo
add
dec
leave
test
push
jmp
into
pop
mov
sbb
ss
outsb
aad
repnz
push
scas
scas
stc
push
cltd
push
cmp
fwait
xchg
xchg
pop
sub
sbb
popf
popf
push
mov
leave
adc
pop
sub
outsb
cmp
test
sbb
fs
jne
mov
nop
stos
jo
es
iret
and
in
cmp
xor
fnstenv
imul
sub
dec
roll
cmp
sub
jbe
dec
xor
push
fcoml
leave
les
ret
pop
fistpll
or
test
mov
dec
mov
in
adc
and
cmpsb
xor
stos
inc
rcll
mov
lcall
xor
fists
repnz
fsts
xchg
orb
ds
shlb
or
xchg
push
cmc
dec
add
pop
lds
and
and
push
cs
push
shlb
jmp
push
push
mov
iret
mov
lcall
sub
flds
xor
or
xlat
leave
cwtl
xchg
dec
or
nop
sahf
xor
adc
adc
or
movsb
cmpsl
cmc
dec
je
loope
aam
daa
mov
repnz
mov
add
pushf
outsb
push
xorb
or
test
lods
inc
test
adc
dec
bnd
mov
fisubrs
sqrtps
sub
fists
imul
scas
outsb
dec
pop
aas
xor
push
daa
aas
jecxz
xchg
cld
call
inc
push
nop
scas
fisubrl
pop
push
sti
ss
icebp
inc
std
js
mov
xlat
inc
lods
mov
mov
cmp
push
and
sbb
test
xor
add
leave
xchg
insl
dec
mov
dec
add
cmc
add
or
jle
push
or
jle
sti
addr16
xor
mov
pop
dec
sti
xor
pop
sbb
jbe
scas
enter
or
xor
mov
or
outsb
mov
sbb
out
sbb
cmp
push
stos
dec
xorl
and
in
ja
repnz
mov
jge
outsb
popf
push
aam
jb
adc
in
push
push
adc
add
inc
cmp
mov
adc
sub
jle
in
fcmove
push
test
lds
sbbb
sarl
nop
ss
cmp
xor
xchg
pop
jg
mov
in
jo
xor
rclb
movsl
cmp
test
in
adc
sub
cmc
fnstenv
or
jp
xchg
outsl
jecxz
dec
movsb
es
loop
mov
cmp
enter
outsl
movsl
add
ret
std
aad
cmpsb
adc
in
jae
push
imul
pop
jb
jge
cs
xchg
and
push
outsb
clc
mov
mov
fcmovu
icebp
mov
shlb
aam
adc
loope
lods
ficompl
and
or
lret
roll
imul
ljmp
inc
pop
or
lods
push
div
mov
jno
mov
shrl
js
je
scas
das
or
enter
add
lods
pop
ror
ja
inc
mov
sub
add
mov
push
adc
pushl
test
jnp
sub
add
inc
xor
push
mov
roll
mov
add
jbe
jae
xor
js
test
push
sub
jbe
or
rorb
xchg
fwait
fs
pop
pop
sub
clc
sub
inc
pop
add
pop
pusha
push
sub
shrl
cmp
enter
test
inc
inc
mov
lds
mov
pop
xlat
push
sbb
xchg
insb
jbe
and
es
imul
push
fisubs
sbb
mov
pop
or
push
adc
adc
mov
push
fldenv
stos
cmp
cmp
aaa
add
adc
mull
cwtl
stos
xorb
inc
push
adc
cmpsl
jl
icebp
inc
xor
jg
jl
mov
sbb
mov
fistpll
mov
scas
ljmp
mov
and
subl
mov
cmc
out
out
cmpsl
sub
adc
fdivs
jne
test
jb
fwait
push
or
or
andb
leave
jb
sub
loop
xchg
cld
adc
and
mov
lcall
sarl
stc
in
jo
dec
and
scas
repnz
xchg
cmpsl
mov
imul
inc
outsb
int3
add
push
ret
sub
xor
add
cmp
add
push
xor
sub
pusha
xchg
xchg
and
in
mov
inc
or
ljmp
lret
pusha
cmpsl
dec
cmc
add
sub
stc
ret
ljmp
aaa
dec
mov
adc
std
das
xorb
mov
lahf
repz
subb
loop
adc
mov
lret
sub
add
cmp
add
jns
jo
jbe
fdivrs
test
ror
dec
mov
out
loopne
sub
inc
jl
sub
pop
jg
fiaddl
mov
loop
xor
and
aad
or
and
mov
mov
push
jae
lahf
fisttpll
es
in
negb
push
movsl
mov
mov
pop
mov
lcall
in
mov
repnz
adc
cmp
clc
push
adc
inc
divb
int3
call
aad
adc
xchg
cmc
cmp
jb
das
xchg
jne
fstl
add
push
pop
test
ljmp
insb
mov
sbb
cmp
sbb
adc
pushf
aas
dec
xchg
sbb
dec
movsl
in
and
sarb
scas
cli
clc
in
pop
xor
les
divb
test
dec
stos
mov
jb
inc
or
je
fcmovbe
nop
or
daa
pminub
cli
fstpt
aam
cs
and
idivb
sbb
push
scas
inc
ds
sub
and
mov
popa
int
imulb
mov
in
push
xchg
or
mov
mov
jl
mov
mov
fildll
outsl
xor
aad
dec
sub
add
mov
push
aaa
xorl
or
scas
imul
mov
out
xchg
push
mov
js
xchg
push
movsb
cltd
lret
push
xchg
test
add
jmp
xor
inc
lock
xchg
aas
cmp
imul
mov
nop
test
lods
loopne
jne
loope
xchg
and
push
adc
mov
ljmp
dec
repnz
inc
hlt
ss
mov
adc
pop
cld
add
sub
cmp
push
sbb
stc
adc
xor
fdivs
aad
addl
mov
fisubrs
jnp
lret
lock
push
add
shll
pop
lea
jnp
push
shrl
xchg
out
sbb
lret
ljmp
int
incb
mov
cld
ja
movsb
outsb
in
into
arpl
imul
cmp
mov
dec
mov
out
roll
or
dec
and
pop
cmp
cltd
inc
cmc
mov
mov
xchg
out
or
fld
aas
xchg
mov
sti
cld
mov
add
mov
imul
cltd
jp
xchg
dec
cmp
fdivr
lods
stos
inc
in
push
cmp
insb
inc
jae
clc
sbb
push
nop
es
popf
mov
xchg
and
in
pop
sub
lea
dec
lahf
and
andb
mov
add
mov
pop
repz
mov
and
pop
arpl
pop
mov
stos
iret
and
rcrb
lahf
mov
popa
sub
stos
mov
cmp
pop
test
mov
daa
cli
inc
outsl
lock
jecxz
pop
lret
jbe
daa
popf
test
sti
mov
in
std
jb
pop
and
stos
inc
lods
pop
push
xor
cmc
cmc
pop
push
jl
lock
lret
mov
jle
mov
inc
push
or
jne
icebp
jnp
xchg
in
cli
pusha
gs
data16
rcrl
lcall
leave
out
pop
jne
mov
jp
pop
fildl
scas
loopne
call
insb
clc
stc
ret
mov
pop
out
out
in
or
jmp
cmp
into
lret
jb
sbb
in
scas
pushf
roll
in
push
push
inc
xchg
arpl
loopne
push
insl
add
jg
jmp
and
lahf
and
xor
or
add
pop
and
xchg
movsl
lock
pop
add
mov
int
xchg
xchg
xchg
decb
mov
inc
xor
mov
aad
out
or
fnstcw
popf
sbb
sub
fdivp
ljmp
pop
pop
mov
pop
jnp
or
call
shrb
pop
pushf
sub
or
xor
push
add
dec
pusha
scas
rolb
iret
dec
or
int3
xor
and
nop
testl
ja
or
out
sub
cmp
popa
sub
adc
insl
fwait
inc
inc
dec
sub
and
lods
jns
js
inc
arpl
cmp
sub
jbe
dec
inc
lret
jecxz
addb
in
int
fdivrs
pop
inc
xor
fidivrs
stos
test
lock
xchg
mov
mov
movsb
lahf
movsl
jmp
pop
cmp
int3
mov
enter
cmpsb
dec
std
push
in
mov
sub
pop
cmpsl
mov
add
adc
cmpsl
aad
addr16
jp
pop
jne
lock
mov
xchg
mov
popf
push
mov
pop
cmp
cmpsl
adc
mov
insl
loop
mov
out
mov
loopne
sbb
mov
dec
test
jo
ret
cmpsb
out
pop
lret
mov
cld
aad
jge
in
in
pusha
inc
cltd
ret
push
imul
inc
sub
mov
stc
jmp
add
jb
lcall
xor
xlat
xchg
mov
dec
push
or
mul
mov
out
push
xor
arpl
jo
mov
pop
mov
fmuls
sbb
mulb
adc
loopne
pop
push
mov
push
mov
cmp
xor
das
adc
cmp
mov
inc
cltd
mov
decb
rcrl
imul
ror
sbb
xchg
push
mov
mov
sbb
pop
rorb
push
mov
xor
mov
fcmovbe
jg
jno
in
outsb
sbb
jmp
adc
int
cmc
aad
pop
mov
dec
frstor
mov
cmp
cmp
mov
jb
cmp
mov
ret
xchg
jge
hlt
loopne
adc
aad
aaa
loopne
test
mov
cmc
push
insb
inc
xchg
out
mov
add
sahf
mov
daa
clc
xchg
popf
sub
inc
mov
jbe
scas
adc
sti
test
inc
cs
mov
inc
movsb
movsb
jns
mov
gs
dec
sbb
jp
jmp
jmp
or
lcall
mov
incl
push
cmc
xchg
nop
loop
je
xchg
repz
ja
or
mov
outsb
fcomps
sub
cli
dec
mov
leave
or
pushf
or
pop
mov
in
ret
loopne
adc
clc
jnp
pop
je
or
pop
dec
cld
mov
xchg
lret
pushf
mov
and
dec
popa
pop
jecxz
push
mov
int3
lds
lahf
mov
cmp
xchg
add
jl
call
imull
xlat
dec
in
xchg
pop
jne
fisubrs
pushf
pop
xor
insb
sti
cmp
adc
sbb
pop
subb
push
lods
mov
fimull
mov
test
pop
call
xorb
cmpsl
pop
es
mov
cmp
adc
adc
sahf
orl
mov
dec
movsl
negl
jle
sbb
mov
scas
xor
inc
adc
push
sti
mov
pop
insb
and
ss
lea
in
and
sahf
cmc
sub
shrb
pop
ja
sbb
int3
pop
push
ja
pop
insb
sbb
pop
and
or
enter
dec
sub
sbb
jno
adc
popa
jecxz
fdivl
sahf
push
clc
rcl
dec
clc
dec
pop
dec
ja
fwait
or
or
hlt
je
push
ja
mov
mov
jmp
lcall
fadd
or
mov
xchg
sub
lds
jge
pusha
js
pop
and
inc
loopne
pusha
shlb
sub
cli
jge
test
xor
jmp
or
incb
lock
insb
or
iret
call
xor
cmp
sub
mov
mov
cmp
test
sub
sar
lahf
sub
fldl
mov
add
push
mov
je
or
hlt
adc
ret
sahf
repnz
gs
icebp
pop
nop
sbb
adc
mov
push
test
fidivrs
or
jne
pop
data16
insb
cli
out
gs
cwtl
jae
lret
sub
popa
dec
dec
scas
jecxz
pushf
into
addr16
mov
js
add
in
mov
jne
imul
pop
or
inc
int3
gs
push
inc
mov
dec
adc
idivl
pop
scas
inc
mov
movsl
adc
mov
mov
adc
aam
cmp
lcall
pop
icebp
xchg
jle
jl
out
mov
pop
add
ds
rcll
pop
movsb
or
pop
test
lret
push
mov
fucomi
daa
sbb
sub
push
fisttpl
xchg
add
test
push
fwait
sub
mov
lea
dec
xchg
xchg
push
sbb
out
dec
mov
add
test
push
in
cltd
jecxz
or
je
push
test
imul
insl
jne
dec
nop
xchg
push
mov
or
lcall
add
sahf
int3
pop
jge
out
sbb
dec
dec
jo
inc
lea
cmpsl
popf
and
cmovs
cmp
gs
fldcw
and
mov
out
sar
bnd
fimull
or
and
dec
xor
fldcw
fs
pop
lret
imul
iret
jnp
mov
lods
dec
pusha
pop
insb
dec
divb
add
sbb
cld
cmp
icebp
sub
xchg
movsb
adc
fdivr
test
loope
dec
mov
adc
fstp
int
in
fmull
ljmp
je
jns
out
sub
adc
adc
xchg
mov
xor
jb
inc
pop
movsb
out
test
adc
bound
fiadds
pop
fisubrs
push
hlt
push
mov
pop
pop
add
sbb
popf
mov
jmp
adc
lods
add
push
jne
arpl
test
es
add
pop
sub
mov
cmc
or
testl
in
bound
pop
xlat
mov
push
adcl
adc
js
jbe
and
cmpsb
fisubs
mov
sub
jno
ret
xchg
aaa
cwtl
pop
in
or
scas
mov
pop
sbb
adc
xor
aad
jle
cmp
inc
mov
xchg
leave
gs
mov
daa
push
jge
push
loop
add
adc
push
rcll
add
xor
aam
pop
cld
lcall
cmpsb
or
cli
or
cmp
hlt
xchg
aaa
es
fidivrs
call
adc
out
and
mov
pop
xchg
jns
sbb
or
loopne
out
dec
xchg
test
movsl
cli
out
mov
xchg
cld
mov
je
shrb
je
divl
jmp
lds
outsl
push
fimuls
dec
icebp
jne
in
and
cmp
and
cwtl
mov
les
popf
in
mov
in
sbb
sub
dec
or
fidivl
jp
outsb
inc
sbb
or
mov
dec
notl
bsf
dec
jb
fidivrs
lock
jmp
dec
js
adc
push
rcl
int3
int
sub
push
in
outsb
arpl
sbb
mov
mov
popf
xchg
jo
sbb
out
dec
cmp
push
not
daa
out
loop
pop
sub
adc
pop
sub
mov
je
insb
jecxz
fldenv
xlat
aaa
push
out
mov
sbb
sbb
mov
out
push
lcall
sbb
jmp
jg
push
mov
lea
rcrb
test
jno
out
fsubr
mov
push
xlat
in
add
sbb
push
test
push
ds
jae
xlat
push
add
jmp
add
jno
test
pop
insb
dec
icebp
fstpl
mov
ss
call
mov
add
cs
pusha
mov
or
stos
sub
pushf
lock
arpl
sbb
mov
push
mov
adc
mov
test
or
lods
and
loope
push
in
test
xor
xchg
jne
xlat
out
dec
mov
sbb
xchg
jp
mov
add
pop
adc
aad
jg
inc
ret
je
enter
and
xchg
rcrb
push
fcmovne
pop
js
push
mov
and
adc
push
lds
in
xor
xchg
sbb
jge
jnp
into
ror
mov
cwtl
cmp
std
nop
rol
into
xorb
in
enter
pop
mov
mov
lods
push
daa
ja
outsb
dec
mov
inc
sub
or
es
jne
addr16
mov
push
xor
fiadds
pop
push
inc
ficoml
in
out
rcrb
inc
xchg
ret
fwait
or
je
dec
loope
cltd
in
mov
aaa
add
push
mov
mov
sub
rol
xchg
xor
cli
and
or
leave
add
cs
repnz
in
fcoml
xchg
cmp
call
sbb
sbb
mov
inc
lret
pusha
and
ss
cwtl
stos
mov
rclb
jl
inc
fstps
mov
cmp
in
aaa
sti
pusha
dec
insb
jae
pusha
mov
imul
inc
push
jge
cs
lret
pop
fnstcw
mov
mov
xchg
ret
dec
pop
pop
pop
pusha
cmpsl
arpl
lret
jg
loop
push
ret
rorb
xchg
addr16
cmp
xchg
cld
xlat
dec
loop
test
notl
jl
lahf
sub
daa
jo
pop
xor
lahf
test
sub
loop
sbbb
cli
jmp
imul
rcll
push
mov
insl
insb
and
fisubrl
inc
adc
push
push
cmc
pop
pop
and
pop
xlat
sub
jb
insl
xchg
mov
xchg
jmp
out
xchg
push
les
xchg
mov
pop
fdivrs
push
or
pop
stos
cmp
test
and
bound
push
movsb
pushf
push
les
addb
sbb
rol
pop
push
dec
fidivl
jae
stc
sub
push
xchg
aad
jecxz
dec
je
lds
lcall
inc
xor
xor
test
sub
int3
mov
fistps
iret
xchg
int
pop
movsl
sub
movsb
jle
cwtl
mov
das
add
dec
ljmpw
jp
inc
jle
es
scas
mov
jl
mov
dec
mov
add
jl
cmpb
movsl
scas
xlat
xchg
call
adc
xlat
or
cmp
movsl
xlat
sbb
mov
lcall
add
cmp
mov
shll
and
add
stc
mov
or
or
sub
rcrb
daa
rolb
push
and
cmp
or
mov
xchg
xchg
xchg
pop
xlat
xor
js
and
jno
int3
push
push
imul
fisubrs
push
xor
cmp
or
sbb
fwait
or
add
cmp
dec
movsb
dec
loopne
pop
or
sbb
lret
lcall
mov
mov
mov
outsb
rcrl
add
xor
adc
outsl
popf
and
sbb
mov
idivl
jge
xor
or
xchg
xchg
pop
setbe
adc
test
mov
inc
xor
push
cs
out
call
cmp
sub
fmull
mov
fmul
mov
dec
push
jo
popf
mov
xor
add
outsl
sahf
lahf
inc
add
bt
sbb
push
lahf
sub
xor
jge
daa
mov
ret
sub
aad
or
enter
inc
inc
cmp
fcmovnbe
cmp
xchg
aas
mov
cmpsb
or
repnz
jb
pop
mov
in
cmc
mov
scas
lcall
outsl
xchg
jns
jae
push
pop
xor
xlat
ja
jno
pop
out
int3
jecxz
inc
fwait
aam
add
pop
push
sahf
sub
es
sbb
pop
push
inc
xor
icebp
cwtl
aad
cs
jne
rcrb
aaa
add
and
comiss
ret
sub
sti
xchg
mov
adc
xchg
leave
imull
imul
rcrl
jno
loop
loop
jecxz
push
fistps
lea
pop
jl
xor
in
sbb
lahf
out
sahf
add
lds
pop
mov
jle
test
xor
imul
inc
cmp
addb
sarb
xchg
nop
and
fstps
ja
aas
pop
inc
sbbl
add
inc
dec
adc
ss
enter
imul
frstor
fstl
inc
ljmp
fiaddl
xor
cmp
jbe
pop
test
inc
or
aaa
jl
mov
xchg
scas
sub
xchg
push
xor
call
sarb
popa
pop
fisttps
cwtl
enter
scas
bound
jbe
xchg
fstl
mov
pop
fstl
mov
imul
scas
push
lods
cmp
test
cmp
inc
pop
repnz
xchg
inc
sub
dec
xor
jl
or
test
xor
cmpsb
mov
dec
xchg
jge
inc
cmp
fucomi
mov
fidivl
inc
adc
nop
pop
dec
out
das
cmpsb
test
push
mov
inc
push
clc
test
aas
test
clc
or
addr16
pop
test
add
jb
pusha
mov
xchg
out
es
movsl
movsl
pop
pop
xor
pop
push
stc
or
mov
jno
aam
loopne
imul
sub
sub
mov
bound
aam
push
add
aad
aas
mov
add
dec
fcmovb
pusha
lcall
cli
insb
in
mov
xor
xchg
pop
int
insl
mov
fldl
test
out
cvtps2pd
js
movups
xor
add
jnp
push
cmp
jb
cmpsb
insb
push
cmpsl
ret
and
sbb
out
mov
push
mov
pop
out
jge
xor
jl
movsl
mov
push
add
mov
ljmp
sti
mov
mov
add
or
lea
mov
and
push
lea
idiv
adc
xchg
inc
push
out
frstor
imul
mov
and
mov
inc
pop
aam
repnz
sbb
fcmovne
dec
mov
loopne
out
adc
pop
sbb
adc
ljmp
sbb
pop
aaa
out
icebp
xchg
ret
mov
imul
stos
nop
pop
sbb
lcall
cmp
fidivrl
xor
outsl
dec
lcall
push
add
sbb
dec
lods
movsl
pop
arpl
fiaddl
lock
mov
mov
popa
dec
mov
xchg
nop
ljmp
imul
aad
cltd
sti
cmp
add
adc
pop
xchg
add
jmp
outsl
jp
add
rorl
leave
test
addl
fwait
bound
jge
aas
push
or
adc
test
fiaddl
pop
inc
ret
and
orb
xchg
jnp
in
mov
pop
push
mov
mov
std
inc
xchg
mov
mov
cmp
sahf
mov
pop
mov
shlb
add
divb
in
xchg
lock
imul
jge
cmp
insb
movl
sbb
xchg
fldl
imul
sub
add
xor
stos
mov
cmp
arpl
xorl
std
cld
xlat
out
jnp
fsubrs
rolb
push
inc
nop
aam
mov
movsb
and
sub
orb
mov
cltd
push
jle
repz
cld
adc
pop
ljmp
jbe,pt
mov
and
int
mov
xchg
movsb
and
sti
js
push
in
xor
jbe
incl
hlt
push
pushl
cmpsb
aas
mov
push
imull
push
stc
sub
fs
add
add
or
xor
orl
ficompl
in
xchg
add
dec
lods
xor
xor
jmp
std
jnp
adc
in
xorl
rolb
sbb
xchg
dec
xchg
stc
rorb
adc
cmpsb
daa
mov
and
cmpsl
mov
cld
push
rol
adc
mov
lahf
jns
mov
xchg
test
pop
cmp
inc
jo
mov
std
outsl
and
push
cltd
in
sub
imul
add
jle
xor
lock
cmp
inc
adc
jbe
and
xacquire
sbb
loope
mov
arpl
fistpl
inc
enter
adc
adc
mov
movsl
sbb
addl
mov
insb
pop
fwait
and
shll
rolb
xor
cli
rcrl
imul
mov
push
out
pop
insb
int3
xlat
xor
adc
imull
push
shl
mov
cltd
push
mov
push
fdivp
pushf
pop
nop
cli
jmp
pop
fnsave
sub
mov
xchg
add
repnz
orb
dec
push
mov
inc
dec
dec
data16
je
xchg
sahf
ds
pop
insl
adc
rcll
jae
and
or
ljmp
inc
xchg
lea
repnz
adc
xchg
push
out
xor
add
jne
cmp
add
xchg
pop
hlt
cmpsl
add
repz
arpl
sbb
xchg
test
aaa
cwtl
and
jg
imulb
frstor
add
fs
cmp
fisttpll
data16
push
sub
in
adc
int
inc
leave
mov
sahf
cmp
into
adc
sbb
fsubrs
mov
gs
cld
xchg
jne
add
call
xchg
aas
pop
push
divb
and
mov
test
dec
jecxz
insb
test
rcr
mov
ss
and
test
int3
add
xchg
mov
nop
dec
test
push
fstp
mov
popf
test
xor
cmp
add
inc
mov
add
popa
pop
fwait
xlat
dec
adc
xorl
lea
pop
cs
arpl
inc
orl
push
xchg
pop
add
push
push
push
pop
dec
and
xchg
movsb
jp
xchg
lods
aaa
mov
mov
stc
ret
jnp
test
jmp
jae
addr16
and
cmp
xor
stos
repz
js
dec
push
xor
and
pop
inc
nop
mov
jg
adc
mov
enter
cmp
xchg
das
sbb
stc
shlb
jle
add
fnstcw
out
jecxz
int
popf
sbb
jle
mov
sbb
dec
in
int
cmp
mov
arpl
ret
addr16
ss
mov
ss
xchg
adc
hlt
popa
jg
les
cmp
ret
sahf
in
daa
xor
popa
and
out
fbstp
sub
popf
lds
pusha
orl
pop
push
in
cmp
loop
icebp
loope
ljmp
and
ret
fwait
xchg
rolb
cli
in
mov
into
imul
imull
aas
int3
sti
xchg
lret
mov
xchg
push
jo
dec
data16
icebp
fs
loope
fwait
pop
add
loop
ljmpw
sti
out
jmp
pop
push
xor
adc
scas
sbb
fldt
sti
and
xor
adc
imul
fisttpl
jecxz
xchg
mov
sbb
sub
jno
xor
sbb
insl
sbb
cmc
loope
test
scas
cmpsb
fistl
mov
pop
cmpb
jb
cmpb
cmpl
mov
insl
xchg
or
test
sbb
test
adc
sarb
sbb
push
sarl
lret
sbb
fiadds
xor
mov
inc
in
push
loop
pop
fisubrl
push
jbe
mov
enter
daa
add
adc
sbb
sbb
aam
dec
enter
dec
dec
cmp
loop
sub
call
sub
mov
xchg
bound
mov
pusha
lods
test
mov
fisubs
repnz
mov
iret
jb
jecxz
lock
adc
push
shr
xchg
lcall
fwait
test
cmp
outsb
test
jns
shlb
lods
add
ja
pop
insl
in
jl
stos
xor
aam
inc
orb
repz
nop
xor
lds
mov
lahf
or
lock
push
nop
lret
add
jno
mov
dec
bound
std
fcompl
sub
xor
mov
fisttpll
push
push
xchg
pop
mov
aam
shlb
lea
call
pop
inc
std
push
mov
mov
out
push
add
xor
push
popa
sub
ja
xchg
std
mov
test
mov
push
mov
xchg
cmp
mov
xor
imul
jno
imul
lret
mov
jae
or
popa
out
push
lds
out
out
popf
pop
and
clc
outsl
rcr
push
add
ficomps
in
into
cmpsb
call
or
dec
outsl
dec
bound
ret
add
ds
push
mov
mov
jmp
inc
mov
push
xchg
push
sbb
and
test
sbb
lahf
out
push
lret
pop
push
dec
in
arpl
mov
bound
xor
mov
rcll
scas
test
mov
mov
scas
test
jmp
dec
adc
out
mov
pop
sbb
fidivrl
inc
shrb
xchg
sub
cmp
insl
outsb
dec
out
or
shl
adc
cmpsb
dec
mov
cmpsb
out
pushaw
sub
fcoms
test
js
pushf
outsb
lock
mov
inc
hlt
cmp
push
pop
shll
scas
cmc
push
xlat
cmp
xchg
push
bound
negl
insl
sahf
xchg
mov
test
push
inc
mov
daa
mulb
dec
addr16
je
and
dec
mov
adc
lea
pop
lretw
adcl
pusha
mov
lretw
pushf
xchg
adc
add
imul
add
negb
jnp
repz
sbb
dec
ds
movsb
movsb
por
cmp
sbb
popf
cli
pop
sub
inc
mov
js
xchg
mov
cmp
sbb
jnp
jge
xor
out
movsl
fildll
ret
and
push
rcll
cmp
xor
inc
mov
dec
cmc
lds
decl
nop
jmp
mov
mov
cld
in
subb
ljmp
lods
xchg
fsts
in
push
jne
push
xchg
jg
ds
out
or
call
cmp
pop
jecxz
push
repz
jmp
jle
adc
push
test
repz
mov
out
dec
inc
mov
fst
in
test
add
push
push
jne
push
jns
loopne
mov
pop
jle
xchg
jne
rcrb
dec
sti
aad
mov
shlb
js
and
mov
jmp
icebp
pop
sbb
scas
ret
sub
fwait
addb
cmc
inc
je
ret
jbe
addr16
in
lock
fldenv
or
sub
dec
mov
test
fdivrs
js
sbb
mov
stos
xor
dec
shll
jbe
mov
jg
dec
add
or
imul
cs
and
adcl
and
mov
fs
imul
push
sbb
mov
movsb
inc
jo
ja
mov
cmpsl
pop
push
pop
sbb
xchg
in
sub
jle
cmc
mov
adc
xor
enter
int3
pusha
adc
leave
pushf
cmc
ret
push
call
movsl
add
popf
sub
mov
jp
push
hlt
sbb
fcos
or
sub
shr
add
ret
leave
jbe
fists
xchg
pop
inc
sbb
sbb
lret
jl
mov
test
and
and
mov
scas
aad
shrb
loope
fstl
jae
test
and
mov
cmp
inc
inc
in
xlat
push
aam
out
call
leave
sub
inc
dec
pushf
jp
inc
stc
imul
shlb
mov
movsl
scas
dec
or
mov
lret
xchg
or
ja
dec
fsub
bound
inc
iret
push
test
and
cwtl
js
in
cmp
inc
out
je
std
add
sbb
stc
stos
int
adc
push
jbe
out
ret
sbb
movsl
pop
out
leave
clc
jnp
mov
fcomi
push
fs
ljmp
rolb
enter
jp
xchg
ljmp
adc
jecxz
push
dec
fildll
loope
xchg
lret
xchg
mov
pop
mov
cmpsl
lret
pushf
les
pop
sti
push
mov
add
scas
sbbl
mov
lahf
cld
out
repnz
mov
stc
pop
in
and
push
stos
shlb
orb
mov
dec
mov
sbb
mov
cmp
adc
inc
test
fdivs
or
mov
inc
cmc
sbb
mov
mov
int
lods
lock
ret
loop
adc
mov
das
jb
test
clc
and
pop
sub
sti
sub
cmp
rcll
loopne
xor
addl
add
insb
and
sub
hlt
mov
pop
adcl
jge
jno
in
add
add
push
mov
shll
and
add
mov
inc
incb
mov
outsl
xchg
xchg
loope
xor
xchg
nop
xchg
out
stos
lods
dec
fmull
mov
lahf
cld
mov
xchg
fists
push
and
pushf
sarb
adc
scas
fs
push
or
and
or
ror
inc
es
sti
and
and
sub
pop
sarl
cmp
pop
mov
xor
shll
test
push
into
mov
popf
cmpsl
mov
bound
dec
pop
ret
dec
pop
movsl
jecxz
outsl
es
aaa
jb
push
xchg
sbb
or
addr16
xchg
inc
inc
or
js
mov
dec
stos
fldcw
movsb
cmp
adc
pop
inc
push
mov
sarb
dec
dec
xchg
pushf
clc
and
add
xchg
mov
cmp
mov
ret
insl
mov
lret
xchg
rorl
pop
push
scas
mov
adc
cmc
push
gs
xchg
mov
pop
enter
cmp
imul
mov
ret
gs
xor
xchg
ljmp
jmp
hlt
rcr
cmp
and
mov
mov
test
inc
sarb
adc
invd
mov
cmp
test
jecxz
or
cmp
out
mov
jle
lret
cmp
pop
repz
out
xor
sbb
pop
mov
iret
fcmovnb
pusha
mov
shrl
int3
xchg
pusha
jmp
ja
mov
pop
les
mov
outsl
test
jmp
push
outsl
sti
pop
push
outsl
into
mov
ds
sub
xchg
lds
in
rclb
sub
imul
dec
repz
and
jl
loop
ljmp
and
into
lcall
aad
popa
leave
sbb
pop
enter
hlt
dec
daa
fldt
lea
out
pop
xor
mov
aaa
cmp
arpl
cltd
xlat
sub
xchg
adc
ljmp
lahf
cld
xchg
jecxz
lods
les
inc
mov
push
or
mov
cld
test
add
xchg
mov
dec
in
fildl
arpl
jmp
shl
stos
fiadds
inc
call
jecxz
cli
imul
push
adc
shrb
push
data16
addr16
shrb
dec
cmpsl
dec
dec
in
cmpsl
gs
nop
and
pop
dec
das
icebp
andl
xchg
adc
fs
fcmovu
adc
fdivs
sub
sbb
out
mov
add
sbb
push
adc
xchg
mov
sbb
sarl
fstps
shrb
pop
xor
sti
aam
pop
push
addb
and
mov
and
mov
or
cmpsl
sbb
in
std
mov
mov
lret
jp
out
xor
and
or
mov
push
lcall
pushf
cmpsb
shll
insl
push
push
pop
mov
inc
pop
jp
inc
push
roll
lods
ja
mov
ficompl
mov
lds
or
adc
inc
ja
jns
add
xchg
pop
ljmp
xchg
xchg
fisttpl
and
push
repnz
inc
cwtl
insb
into
ss
xor
xor
add
fnstcw
fcoml
inc
pop
sub
jge
add
sub
jge
cld
inc
inc
inc
push
imulb
jle
sub
mov
and
or
add
out
xchg
dec
std
out
nop
stos
adc
bound
ja
imul
imul
cmp
jnp
mov
mov
adc
negl
ret
imul
ret
dec
xor
or
je
pop
in
pop
div
cmp
adc
pusha
xor
xchg
nop
outsb
and
and
pop
mov
jno
mov
lahf
scas
packsswb
lcall
xorb
push
xchg
add
inc
xchg
aas
cli
stos
push
inc
jno
lock
sub
cmpsb
int
icebp
jnp
in
jg
dec
xchg
cli
jnp
add
shl
in
xor
clc
mov
push
repz
cmc
sub
and
cwtl
push
lock
mov
pop
sbb
mov
push
leave
test
rolb
jmp
out
xchg
push
dec
movsb
popf
arpl
mov
mov
lods
lea
dec
je
ja
xor
cmpsl
into
test
sub
jg
ret
loopne
into
push
jne
pop
dec
xchg
fistpll
enter
pop
lds
loopne
mov
out
movlps
push
in
nop
fildl
cmp
mov
hlt
dec
orb
mov
sar
push
xchg
cli
stos
sahf
or
push
add
push
loop
xchg
std
imul
jo
sbb
stos
inc
cmp
in
stos
sbb
pop
push
int3
movsb
dec
lahf
adc
mov
mov
outsl
ljmp
push
sti
mov
testb
lret
dec
inc
lock
scas
dec
idivb
sahf
sbb
pop
int
sti
mov
andb
lds
ret
ret
or
mov
cmpsb
ja
lret
les
out
stos
sub
cs
cmp
cs
andb
sub
push
cmpsl
sub
aas
ret
lret
xlat
push
jmp
xor
movsb
xchg
imul
js
icebp
lret
mov
shrb
cltd
push
jnp
mov
lea
cs
pop
testb
xor
popf
push
inc
mov
mov
jne
out
xor
cmp
xchg
push
push
loopne
sub
cld
std
xchg
pop
adc
cmp
in
into
fisttps
sbb
mov
enter
xlat
sub
xor
sbb
sbb
pop
cmpsb
in
mov
push
inc
mov
pop
mov
push
rcr
add
ja
mov
leave
loop
mov
lret
enter
pop
dec
dec
push
mov
int3
orl
push
pop
cmpsl
out
aam
push
loop
fdivp
cmpsw
add
sub
push
jbe
pop
popa
nop
pop
push
mov
mov
inc
sti
pop
xor
mov
mov
push
add
test
xor
das
aam
adc
repz
insl
sahf
daa
and
mov
aad
dec
mov
jp
pop
or
ret
shlb
push
mov
inc
aaa
fmul
jo
sub
insb
mov
or
pop
aas
push
xor
sub
stos
and
dec
cmpsb
jns
test
out
push
je
dec
mov
adc
stc
dec
push
out
out
insb
xor
sbb
lret
out
dec
scas
sub
imull
dec
bound
jns
or
test
jmp
subl
loop
or
sbb
mov
fstp
mov
push
jecxz
cmpsl
je
dec
lret
jle
xor
jmp
xchg
and
adc
jno
test
ss
mov
dec
fists
lret
and
nop
push
es
dec
mov
and
mov
cmp
xchg
sub
out
rorl
push
shlb
rorb
je
jmp
sarb
imul
mov
or
xor
pop
lock
push
pop
arpl
pusha
enter
in
outsb
mov
sub
push
xor
mov
stos
mov
cmp
pushf
add
sub
aad
and
iret
xchg
ret
fdivrs
fildll
mov
add
jmpw
xchg
inc
mov
pop
es
roll
leave
in
insl
and
cmp
lahf
lds
jo
dec
inc
mov
add
jle
imul
add
jl
ret
mov
sarl
cli
xlat
out
cld
pop
movsl
popa
adc
ja
ret
push
rorb
sbb
movsl
cmpsb
cmp
jle
or
xchg
fcoms
mov
xchg
or
cld
jns
std
mov
sub
ret
sbb
dec
shlb
enter
cltd
push
jnp
xchg
pop
mov
bound
mov
add
frstor
pop
and
bound
jae
aaa
inc
xchg
add
icebp
xor
je
sub
fidivl
xchg
mov
data16
pop
push
imul
test
pop
dec
ja
mov
popa
stos
push
stc
jl
aad
int3
dec
daa
cmp
fnstcw
mov
mov
mov
dec
dec
inc
sbb
iret
cwtl
inc
stos
add
pop
inc
shrl
cs
xor
test
sbb
sub
mov
into
mov
test
movsb
das
int3
imul
pop
popa
sti
mov
in
imul
insb
adcl
sub
or
push
sarb
jae
push
cmp
gs
aad
mov
je
cmp
js
stos
stos
mov
xor
push
add
sub
add
jmp
movsb
ret
add
and
pop
and
imul
mov
out
mov
xchg
adc
cmp
adc
adc
rcrl
xor
jb
inc
loopne
loop
inc
pop
push
or
ret
xchg
push
push
cmp
mov
or
or
jp
lret
fidivs
fwait
dec
inc
movsb
test
pop
call
mov
jo
jecxz
outsl
test
pop
xchg
fcmovb
sbb
cmp
imul
imul
test
mov
pop
outsb
and
rcl
inc
xchg
enter
sub
and
jno
enter
jl
ficompl
push
insl
cmc
adc
xchg
sub
iret
pop
sbb
test
mov
xor
roll
loop
call
scas
int3
fadd
xor
movntps
cli
push
ss
bnd
mov
push
pop
in
insl
in
hlt
fcompl
sub
jnp
cmp
or
xchg
loop
lahf
mov
cmp
jg
dec
cmpb
inc
cmp
sti
movsb
ds
sbb
incb
mov
into
mov
mov
jge
xchg
nop
sahf
inc
pop
pop
popa
xchg
mov
sbb
mov
movsb
mov
cmp
and
int3
cmp
xorb
pop
enter
and
cmpsl
mov
mov
dec
xchg
sbbb
scas
mov
xchg
in
xchg
and
into
and
stos
dec
pop
mov
mov
es
dec
adc
inc
jbe
mov
pop
fstpl
in
cmc
stos
lcall
int
and
stos
push
mov
sbb
insl
sbb
cmp
pop
jbe
inc
fidivl
lods
xchg
sbb
fs
jecxz
xchg
movsl
sub
fs
mov
adc
cwtl
cmp
stos
adc
mov
dec
fs
sbb
insb
xchg
sbb
ret
cmc
adcl
or
sub
test
and
out
xor
arpl
sbb
mov
scas
mov
cmp
insb
in
cmpsl
and
sub
pop
pusha
into
or
add
stos
rorl
nop
repz
shrd
in
jecxz
lods
jb
mov
pusha
cmp
or
into
hlt
nop
sbb
pop
sti
add
popf
insl
and
adc
lds
out
fcmove
xlat
sahf
or
dec
or
or
dec
in
push
adc
mov
cltd
add
add
xchg
sub
mov
adc
lods
mov
lcall
mov
insl
pusha
add
cmp
mov
dec
repnz
in
je
sub
repnz
xchg
jno
jmp
sub
mov
int3
push
loope
and
sbb
and
xchg
or
add
xchg
mov
push
or
xchg
popf
mov
xor
add
inc
test
popa
repnz
jae
test
addl
inc
xchg
mov
sahf
movsb
jns
loopne
or
dec
ss
notl
add
add
dec
out
adc
popf
push
jp
mov
rcll
mov
lret
popf
push
mov
xor
jge
adc
adc
test
int
loop
mov
xchg
adc
xor
loop
aad
das
clc
lret
xor
pop
outsb
jbe
fdiv
out
push
loopne
out
xchg
insb
adc
and
jbe
call
inc
je
xlat
es
cmp
bound
aas
add
stos
outsb
iret
mov
dec
jae
mov
in
push
pop
addb
sbb
cwtl
rorb
lret
loope
bswap
push
sub
shrl
sub
sbb
push
ljmp
jl
cmp
sbb
pop
les
and
les
sbb
aas
mov
cli
push
dec
mov
insb
or
sub
imul
decl
aaa
bound
jmp
jae
add
dec
cmpsl
adc
push
add
adc
sub
and
jecxz
xchg
xor
dec
push
mov
mov
lret
popa
scas
pop
xchg
jne
pop
outsb
lahf
adc
scas
js
fs
fwait
pop
xor
mov
icebp
mov
pop
cmc
sub
das
mov
jmp
icebp
mov
addr16
das
sub
popa
enter
fistl
dec
mov
sub
das
andl
or
jmp
adcb
icebp
movb
mov
jle
cltd
lds
inc
add
push
xchg
test
cmc
xlat
dec
jae
add
xor
mov
xor
pop
xchg
mov
lds
popa
fldl
shlb
cmp
cld
cmpb
jbe
fstps
loop
int3
and
xchg
gs
xorb
mov
popa
insb
and
jecxz
lock
sub
std
testb
es
mov
xor
lds
xchg
loopne
aas
inc
add
push
mov
enter
mov
lods
rcl
aad
cmp
mov
out
and
movl
dec
sub
push
leave
cmp
clc
sub
arpl
sbb
dec
in
ds
popf
mov
jne
pop
repnz
fistpl
in
sbb
or
call
jle
movb
lds
add
xchg
lods
fs
mov
cmpsl
in
jmp
fstpt
xchg
mov
test
ds
push
in
fs
push
out
pop
scas
ljmp
adc
lods
jb
pop
sub
or
inc
in
test
cs
lret
movb
xchg
lret
push
sbb
pop
sub
jns
dec
lret
lret
push
mov
xchg
fsubrl
fisttps
rclb
xchg
xchg
mov
mov
jne
sbb
mov
test
pushf
jp
andl
pop
inc
pop
mov
xchg
push
clc
fnstcw
movsb
xor
out
pop
aaa
cmp
add
xchg
jno
popf
cltd
in
pusha
dec
dec
out
add
loopne
mov
outsl
jo
cmpsl
ret
mov
mov
mov
daa
push
cmp
dec
xor
mov
stc
sub
xchg
lret
shrb
xchg
jno,pt
push
or
cli
ds
mov
out
mov
sbb
sbbl
adcl
cmp
popa
std
xchg
int
add
and
repz
aaa
outsb
aaa
mov
int3
stos
enter
cmpsl
add
dec
sbb
ret
arpl
scas
shlb
or
mov
test
rorl
sbb
pop
pusha
xchg
test
rorb
add
mov
pop
ds
in
fdivr
in
div
add
push
shll
xor
pop
push
pusha
mov
inc
sub
mov
jae
mov
inc
ljmp
push
mov
cld
sbb
mov
das
lods
xor
or
xchg
fisubrl
xor
stc
jns
notb
push
inc
cmp
fcoms
dec
in
add
cmp
mov
inc
cmp
bound
cld
jge
add
mov
jecxz
pop
scas
ja
fnsave
pop
pushf
jbe
pusha
shlb
pushf
fildll
ja
jge
ds
shlb
sub
das
xchg
fcoml
aad
mov
cmp
mov
insb
adc
push
jo
mov
cmp
leave
add
push
adc
xchg
inc
xor
jmp
jo
arpl
adc
lret
cmpsl
jp
push
xor
pop
cmp
adc
and
test
clc
into
roll
push
mov
imul
popf
add
mov
imul
stos
jle
shll
leave
jl
mov
or
mov
into
and
push
cmpsb
dec
push
in
xor
jecxz
outsb
stos
xchg
lods
stc
pop
in
mov
into
and
out
pop
jp
lds
inc
add
jns
ja
jmp
repnz
and
lea
and
push
push
imul
and
fwait
ljmp
cmp
lock
sub
mov
sub
adc
lods
jno
leave
rcll
xor
shll
ja
lcall
fstpl
push
or
dec
mov
add
test
dec
mov
sbb
and
jo
mov
inc
push
insl
js
xor
jnp
data16
mov
xor
cwtl
dec
mov
dec
loope
mov
repz
jbe
insl
jno
fdivr
push
imulb
push
pop
cmpl
in
stc
pop
mov
mov
test
push
pop
insb
push
mov
ret
inc
push
lcall
or
loopne
xor
fincstp
adc
mov
mov
inc
ja
adc
inc
cltd
xchg
imul
loop
or
je
out
mov
adc
mov
push
lds
mov
das
daa
or
scas
jnp
std
jle
add
mov
imul
jno
cmp
cltd
loope
sub
clc
add
andl
test
ljmp
xchg
push
pop
in
testl
fsubrl
xlat
push
xchg
popa
gs
jg
push
push
xor
aad
in
pop
out
lahf
std
pop
push
fistpll
mov
mull
loopne
movsl
mov
les
and
xchg
sbb
std
mov
cmpsb
scas
xor
loopne
rorb
ja
fbld
or
fisubrs
in
test
int
xchg
jno
inc
jb
mov
test
sar
push
outsl
fidivl
push
rol
lock
pop
pop
jne
xor
mov
cmpsl
lock
imul
cmpsb
sub
and
orb
adc
jno
iret
jb
push
mov
mov
aas
les
inc
sbb
push
sbb
movsl
out
or
popa
dec
jns
mov
fisttpl
scas
or
mov
push
in
or
jge
mov
xor
test
add
sahf
aam
hlt
fidivrl
aad
or
fsts
push
into
imull
push
roll
loop
jbe
cmp
nop
test
sub
fstl
mov
jnp
sub
fildl
push
stc
cmp
scas
insl
iret
call
cmpl
inc
fs
adc
and
int
cmp
jmp
shlb
in
call
and
pushf
loop
add
sti
loopne
xchg
ljmp
jnp
or
call
loope
into
dec
mov
das
sub
inc
repz
add
push
mov
inc
adc
fwait
adcl
dec
fidivs
pop
sub
pusha
xchg
insl
and
xor
xchg
pusha
repnz
adc
pop
xchg
fcomip
insb
jb
pop
pop
movb
push
fldl
xchg
xchg
pushf
push
ret
inc
and
test
in
fucomip
xchg
testb
xchg
adc
stos
fwait
lret
sbb
fcoms
xor
int3
fldcw
fbstp
sbb
cmp
in
movsl
mov
sbb
jns
pop
lahf
gs
sbb
repz
jnp
adc
push
lcall
jb
cmp
data16
ja
sub
adc
jmp
jl
mov
jp
jl
xor
imul
mov
stc
pop
in
leave
xor
adc
cli
cmpsl
mov
test
popf
and
stos
dec
jecxz
jl
scas
jle
cmc
or
outsb
orb
inc
imul
fnsave
add
cmpsl
clc
push
outsb
jbe
call
jb
insb
add
jns
jl
out
pop
pop
add
call
fs
jne
xchg
mov
fnstenv
aam
mov
lds
adc
push
sub
loop
or
gs
in
and
and
stc
psubb
mov
in
adc
jbe
mov
mov
in
pushf
loop
lea
mov
div
movsl
outsb
jno
cmp
push
sbb
cmp
leave
negb
lret
push
dec
insl
sub
cmp
jb
push
push
add
sbb
aad
or
fwait
mov
test
dec
mov
leave
aam
pop
fistps
movsb
adc
fcompl
das
sub
lahf
cmpsb
jl
pop
stos
cltd
push
loop
icebp
pop
daa
sbb
sub
and
push
pop
mov
int
xchg
inc
add
xor
aad
adc
fcoml
xlat
int
testl
sub
mov
icebp
jg
mov
imul
lods
int
decl
out
pop
scas
adc
cmp
mov
adc
push
stc
push
sbb
ds
ljmp
enter
outsl
stos
push
adc
sbb
orb
scas
push
mov
ljmp
lods
push
clc
sub
imulb
lds
pushw
outsl
jb
mov
stc
arpl
xchg
aam
xchg
or
out
mov
gs
das
in
xchg
int3
in
shrl
xor
add
dec
sti
add
cs
repz
push
mov
loope
pop
sub
xor
rcll
in
es
dec
dec
scas
addb
adc
mov
mov
cmp
into
mov
subb
sub
jno
aam
inc
xchg
pusha
dec
ds
pop
push
mov
mov
push
icebp
test
sbb
lret
out
loope
push
xor
sarl
or
sbb
cs
jne
jne
insl
or
xor
lret
sub
push
notb
mov
stos
ljmp
mov
out
into
mov
incb
lret
jne
cmp
xchg
sub
push
xchg
ss
pop
xchg
sarl
sub
daa
shll
cld
pop
cmp
xchg
adc
psubusb
add
sub
lods
jp
daa
and
add
scas
dec
dec
cli
or
dec
adc
mov
pop
ret
popl
gs
test
and
xor
mov
xchg
loope
mov
dec
notl
and
xchg
sbb
jle
mov
pop
jmp
xchg
cltd
imul
in
inc
gs
mov
push
mov
cmpsb
and
pop
out
adc
push
cmp
sub
fadds
xor
aad
out
imul
int3
jmp
imul
in
and
push
jle
iretw
dec
add
mov
repnz
popa
jae
lret
or
call
mov
mov
out
sbb
into
loope
mov
adc
mov
paddsb
cmp
mov
ret
sub
dec
mov
push
les
inc
push
adcl
mov
xor
repz
into
adc
aad
cwtl
sbb
add
sbb
loop
imul
stos
test
jg
stos
pushf
bound
jnp
adc
pop
scas
aad
inc
into
fstl
std
lret
inc
mov
push
fcomps
mov
pop
inc
pop
popa
hlt
in
movb
notb
nop
inc
push
scas
popa
mov
movsl
cltd
lods
push
mov
nop
mov
fwait
dec
mov
out
cs
mov
xor
sahf
fistpl
movsb
pop
enter
push
outsb
int
push
push
xor
lret
mov
add
cmp
clc
mov
lock
bound
aam
cmp
push
or
popa
or
insl
inc
test
inc
fcmove
sbb
out
arpl
or
inc
shlb
jmp
imul
insb
or
or
cli
lret
cmp
sub
rol
dec
call
jecxz
cmpsl
daa
dec
lahf
push
cmp
data16
dec
push
clc
testl
inc
push
jecxz
mov
jnp
ja
lods
pushf
test
popf
or
insb
jae
jno
loopne
ficomps
fxch
jge
sti
mov
jg
lret
sbb
outsb
outsw
cld
pop
jp
mov
mov
pusha
cmpsb
jb
pop
insl
and
cwtl
mul
fnstcw
nop
jg
aad
xlat
mov
repz
sti
adc
xchg
dec
mov
jl
rolb
pop
push
pop
jnp
xor
mulb
sub
xchg
mov
cmpsb
ss
add
hlt
mov
mov
outsb
test
adc
aas
sbbb
push
jmp
and
gs
out
out
lds
xor
stos
pop
test
xor
test
cld
mov
scas
ds
jmp
add
lock
sbb
addl
andl
and
scas
mov
or
inc
mov
push
sbb
xchg
lahf
sarb
and
pop
clc
inc
cmp
sub
jnp
fdiv
cltd
mov
mov
pop
dec
jb
add
outsl
ja
xchg
mulb
pop
lahf
int
push
add
jae
int3
cmp
push
shl
mov
popl
push
ret
xchg
cmpsb
and
inc
dec
jp
xorb
add
cmp
mov
in
or
lcall
mov
push
jnp
or
inc
mov
daa
pushf
sbb
inc
pop
xchg
xlat
ja
adc
adc
mov
push
movsb
rorl
bound
ret
sti
add
into
faddl
jns
in
ret
adc
incl
test
sub
jnp
js
or
jae
mov
imul
out
lock
js
inc
adcb
fadd
lods
pop
sbbb
div
pop
repz
movsb
das
push
adc
lret
cmpsb
stc
pop
rcrl
or
andb
fcmovb
clc
mov
adc
mov
addb
sub
pop
xchg
scas
stos
shr
xor
in
mov
fstps
push
test
jnp
sub
cmp
inc
mov
bsr
cmp
mov
out
dec
outsb
int
in
push
orl
in
lods
dec
mov
addr16
aam
jbe
add
mov
inc
add
pop
lods
andl
outsl
incb
shl
mov
cmp
mov
out
arpl
xchg
xchg
and
int
mov
pop
push
data16
jge
inc
add
mov
dec
test
or
jmp
push
movsb
jp
adc
sub
lods
test
adc
sti
popf
fcomp
jbe
aad
aad
frstor
pop
sub
pop
mov
cmp
loop
inc
jg
xchg
mov
sbb
stos
sub
popa
inc
or
adc
loopne
mov
sub
or
hlt
jae
ret
jns
jl
ficomps
es
dec
pop
inc
mov
in
mov
ret
mov
xchg
sub
cmpsb
xchg
or
dec
jne
insl
and
outsl
sbb
sub
and
jp
sub
gs
adc
add
addb
xor
sbbb
mov
sub
in
enter
icebp
sahf
mov
mov
xchg
xchg
hlt
loope
inc
loop
mov
in
inc
stos
enter
bound
lea
pop
pop
cltd
pop
es
adc
ss
outsl
outsl
push
fdivl
mov
cmpsb
out
lods
insb
fcmovu
out
js
aam
shrl
daa
clc
mov
jle
fnstsw
data16
sahf
lock
push
xchg
add
sbb
in
xchg
mov
or
sub
push
jns
sbb
insb
popa
mov
test
jb
mov
call
test
sti
loop
lods
mov
pop
movsb
out
rol
push
cmp
sbb
test
add
pop
jle
lods
xchg
aas
ret
dec
and
jle
xor
and
jmp
daa
mov
les
inc
cwtl
push
push
sbb
dec
lods
jo
mov
pop
jae
inc
sbb
mov
leave
mov
sub
pxor
push
insb
add
int3
jge
sub
ror
dec
and
pop
xchg
dec
test
in
add
sbb
add
adc
mov
dec
push
inc
adc
pop
push
lret
mov
fdivs
cld
ds
cmc
mov
push
or
sbb
cmp
pushf
ret
add
or
dec
das
dec
sub
inc
inc
orl
out
insl
jg
or
jmp
jne
or
sahf
popf
stos
inc
and
and
adc
punpckhdq
pop
cmp
or
fistpl
xor
push
mov
arpl
pop
or
inc
push
cmp
movsb
fdivr
rcrl
mov
cmp
sub
jle
jmp
stos
mov
inc
adc
add
rcl
sbb
mov
cmp
cli
lods
mov
adc
push
and
jnp
loope
cmpsl
xchg
add
iret
in
fstpl
repz
mov
adc
adc
mov
push
cmp
inc
sub
and
push
aaa
insl
mov
mov
dec
ja
inc
sub
xchg
test
or
xchg
insl
mov
or
pop
adc
add
or
movsl
std
sbb
mov
sub
and
loop
sbb
adc
neg
and
xchg
scas
sub
scas
fstpt
sbb
xchg
es
jne
das
lock
enter
stos
iret
mov
pushf
xchg
dec
dec
cld
jb
push
pop
cs
and
mov
cmp
cld
mov
vpunpckhqdq
sti
cli
jmp
jp
aas
and
xor
fwait
rcll
cmpb
xchg
scas
dec
shll
mov
jmp
test
popf
jmp
ss
adc
imul
test
hlt
movsl
cmc
lds
aam
and
dec
rclb
mov
shlb
rcr
push
addr16
fsubp
sub
adc
std
sub
and
call
mov
fbld
xor
push
xor
insl
mov
call
push
loop
sarb
in
add
push
sbb
lock
jbe
popaw
jg
stc
jo
out
mov
loopne
mov
push
mov
pop
inc
fidivl
xchg
add
mov
lret
and
scas
mov
mov
lahf
std
test
ret
xchg
inc
xchg
adc
mov
inc
fstps
popf
mov
outsl
mov
mov
inc
sbb
sbbl
cltd
ret
sub
xchg
xchg
sbb
imul
mov
jmp
addb
fwait
lods
cmpsl
xor
in
lret
push
pop
bound
adc
repz
lret
dec
jl
adc
xor
loopne
cmp
push
es
ret
cltd
dec
or
xor
jae
loope
je
insl
jnp
mov
push
cmp
and
fsubr
mov
dec
xor
cltd
lock
test
mov
sub
cmp
add
or
cmp
mov
jne
pop
lods
loopne
inc
sti
push
mov
and
cwtl
sub
outsl
ja
int3
stos
or
jno
xchg
inc
cmp
mov
cmp
mov
negl
aad
pop
push
shl
jg
sub
mov
rcrl
push
ret
cmp
popl
fmul
or
dec
jae
adc
jns
pushf
pop
mov
xchg
fmuls
gs
push
inc
push
sbb
lahf
in
clc
lret
xor
xor
fstps
mov
pop
in
mov
pop
add
xchg
loope
icebp
xchg
int
lahf
or
movl
lods
mov
and
ficomps
pop
out
cltd
push
movsb
xchg
mov
inc
push
push
aad
sahf
add
jb
rcrl
push
lahf
jno
xlat
sub
xchg
subb
test
orl
push
dec
mov
icebp
or
rorb
loop
sahf
out
cmpsl
rcrb
xor
call
int
xchg
sbb
inc
mov
add
dec
cmp
addr16
xor
pop
lods
mov
and
mov
pushf
ja
ret
sbb
inc
dec
test
sbb
aam
lock
in
pop
ja
sub
mov
push
cmc
idiv
lcall
xor
jl
inc
setge
lret
or
add
out
inc
inc
adc
dec
pop
adc
dec
int3
ret
push
data16
aas
xor
mov
dec
xchg
xchg
testl
mov
and
xor
add
fisttps
mov
cld
repz
les
popa
dec
jmp
lods
notl
xchg
cmp
std
xlat
fsubp
jmp
popf
mov
mov
mov
xchg
or
xlat
sub
cli
dec
or
mov
mov
lret
call
mov
das
dec
sarb
push
pusha
xor
enter
cmp
repz
add
out
cmp
dec
cmp
hlt
cmp
mov
rclb
dec
dec
jecxz
xor
xor
bound
pop
xchg
adc
xchg
or
mov
mov
xchg
add
dec
mov
out
mov
adcl
push
inc
notb
outsb
lock
stos
movsb
xchg
ret
mov
dec
mov
pop
test
lcall
mov
adc
lods
xor
js
dec
popf
orb
pusha
cli
in
in
add
add
ljmp
xlat
and
and
out
xlat
jl
and
rcpps
push
mov
bound
jne
mov
sub
fildl
call
mov
and
xchg
cmp
jae
cmpl
icebp
dec
add
lods
mov
ret
add
xchg
mov
cmp
push
jp
pop
dec
negb
clc
jg
mov
stos
fs
adc
movsb
ficompl
jge
leave
insl
xchg
out
addb
add
push
pop
push
fsub
mov
pop
into
mov
ss
scas
sub
fs
mov
xor
in
cli
fbld
jb
push
jp
int3
aam
sub
add
lock
push
popa
push
dec
sub
je
cwtl
aas
xchg
pusha
std
push
out
enter
call
mov
mov
or
jecxz
mov
xor
or
push
sub
xor
movsl
mov
outsl
mov
ja
ds
stc
cmpsl
popa
mov
out
jno
jl
test
dec
sbb
aaa
fsubs
mov
and
xchg
rcll
jo
lret
or
inc
jo
rcrb
data16
int3
test
dec
js
xchg
jmp
lret
mov
in
sahf
insl
add
bound
fdiv
push
pop
jge
arpl
add
or
loopne
cmp
popa
cmpsb
out
fldcw
cmpsb
loope
add
cmc
jno
jle
dec
lcall
mov
or
call
leave
xor
xor
sub
mov
and
inc
mov
xchg
bound
inc
inc
js
inc
loopne
jae
mov
in
jne
inc
add
gs
xor
mov
sbb
repnz
xor
dec
enter
or
pop
jmp
mov
inc
aas
cmp
adc
adcl
push
aam
dec
and
adc
adc
dec
ja
xor
lret
pushf
mov
lret
into
test
and
mov
sarb
loopne
adc
fisttpll
inc
out
pop
je
insl
mov
lret
xorl
sbb
testl
or
adc
nop
jno
sbb
push
aad
push
arpl
adc
jbe
mov
jo
or
scas
mov
pop
cs
into
mov
outsb
fmulp
loope
xchg
and
and
movsl
insl
add
std
icebp
cmp
and
cmc
adc
pop
leavew
popl
idivb
notb
frstor
push
loop
insl
popf
aas
daa
jbe
xchg
pop
and
mov
in
fdivp
pop
sub
es
imul
adc
divb
mov
inc
mov
and
sbb
shr
adc
mov
cmp
shrb
stos
push
scas
jge
mov
ret
mov
leave
mov
insb
mov
lahf
push
mov
adc
mov
xchg
sub
iret
or
aam
scas
dec
jmp
aaa
fiadds
and
in
jmp
sbb
cmp
out
adc
pop
adc
fildl
push
lret
or
jge
and
jl
mov
xor
push
imul
jge
dec
pop
pop
sbb
cmp
jo
aas
and
jp
ja
inc
or
inc
adc
mov
pop
addr16
sub
repz
fidivl
pop
ljmp
or
add
sarl
pop
fwait
and
sub
mov
std
adc
push
fnstenv
pusha
pop
imul
jb
push
jmp
in
pusha
xor
iret
jb
loope
loope
scas
push
enter
ucomiss
adc
adc
mov
fnstenv
push
cmp
dec
in
xchg
dec
imul
lcall
sbb
test
enter
popf
call
sub
cmp
cmpsl
out
pop
push
mov
pushf
arpl
movsl
xchg
ja
pop
aaa
mulb
xor
lret
pushf
mov
inc
aaa
shll
fidivl
shrl
je
push
loopne
loopne
pushf
in
mov
fucomp
jb
mov
dec
ret
fiadds
in
popa
mov
in
lret
xchg
test
push
pop
insl
cmpl
push
xchg
push
cltd
jae
leave
test
xchg
adc
mov
jecxz
out
add
mov
dec
inc
push
fidivrl
pushf
and
scas
lret
add
mov
sbb
ss
cltd
sbb
int
mul
sub
bound
xlat
jne
call
notl
sbb
jmp
faddl
pop
aad
push
out
popa
lods
add
mov
xor
xchg
xchg
jle
mov
fldcw
inc
xchg
movl
and
fmuls
incb
in
cwtl
mov
jo
cmpsl
xchg
mov
iret
fsubr
xchg
imul
mov
mull
push
fidivl
xor
push
sahf
mov
fwait
inc
std
stos
ret
filds
xor
inc
loop
jo
and
push
jns
jecxz
push
mov
cmpsb
xchg
rclb
mov
into
mov
icebp
scas
mov
popf
pop
out
sub
sbb
mov
mov
incb
es
decb
fs
lds
pusha
imul
cs
mov
rcrl
rolb
movsb
adc
aam
mov
fistps
push
push
imul
popa
mov
inc
push
jbe
cltd
lea
lret
mov
das
and
cmpb
loop
add
push
pushf
ret
mov
push
mov
mov
push
mov
cmc
lret
mov
jl
lods
push
es
stos
sbb
mov
xchg
dec
and
sbb
xor
cs
cltd
lahf
xchg
xchg
sbb
mov
arpl
push
sub
mov
jp
cmpsl
push
sub
call
jb
xchg
orl
fistpll
jbe
and
mov
dec
fs
inc
mov
repz
xchg
mov
adcl
into
addl
roll
stc
mov
ljmp
or
sbb
add
in
stc
add
adc
mov
adc
notl
and
inc
aas
xor
xor
test
pop
jmp
push
negl
and
adc
popf
pop
cmc
aam
out
rorl
loopne
popa
xchg
sbb
dec
outsb
xor
in
sbb
xor
ja
les
into
sbb
out
in
lahf
mov
add
je
call
int3
std
ficomps
jl
mov
mov
mov
fbstp
test
leave
sahf
pop
push
aam
sbb
push
sti
call
ja
testb
sub
xchg
jecxz
fdivrs
cmp
js
adc
jns
jnp
cmp
jmp
orb
dec
cmp
add
les
fisubs
pop
cmpsw
and
shll
inc
jmp
mov
dec
flds
into
inc
push
jecxz
out
pop
in
mov
push
addr16
xchg
daa
movsl
add
repnz
cmp
xchg
bnd
flds
cmovno
loopne
pop
fcmovu
add
cmc
adc
sarl
inc
out
and
fstpl
scas
fsubr
lea
push
shrb
mov
mov
cmp
pop
sbb
inc
adc
sbb
mov
xchg
add
rol
and
in
jbe
scas
ret
imul
inc
rclb
cmpsl
mov
jl
scas
shll
out
daa
pop
test
mov
push
test
jno
jo
add
and
push
adc
ret
sahf
aad
xchg
in
jmp
lcall
xchg
xor
mov
scas
fsubl
addr16
jb
mov
int
in
push
shlb
loop
xlat
std
cld
push
add
sub
jecxz
push
cmp
cmp
push
shlb
xchg
pop
dec
into
mov
sbb
push
jns
into
mov
cmp
sbb
push
cld
pushl
xchg
mov
sub
int
mov
test
sbb
dec
ret
cmp
dec
out
xor
inc
jecxz
popf
imul
and
outsl
push
bound
je
xchg
popa
mov
sbb
inc
scas
jns
hlt
jle
inc
inc
call
ljmp
fistpll
push
push
add
lock
mov
jmp
jl
clc
insl
mov
in
jp
dec
push
xchg
mov
jne
pop
lcall
xor
dec
movsl
xchg
icebp
jge
mov
inc
jo
xor
pop
jge
mov
mov
pop
test
jg
lock
pop
gs
push
jbe
mov
add
xor
or
fs
and
xor
bnd
je
push
push
and
imul
and
adc
pop
out
mov
in
cltd
std
xchg
into
cmp
sarb
insb
sar
add
jne
dec
lret
push
jg
aad
arpl
movsb
fistpl
xchg
ja
push
loope
mov
aad
lods
xor
xor
push
loope
js
sbb
pop
sub
sub
addb
dec
mov
xchg
into
xor
stos
mov
fimuls
rcr
inc
cmp
test
add
aad
or
add
mov
loopne
and
lods
mov
cmp
lods
pop
mov
dec
mov
jo
jg
aam
gs
inc
dec
xchg
lds
pop
jo
aam
sbb
cmpsl
in
or
stos
rorb
mov
lahf
bound
adc
test
mov
enter
outsb
add
leave
push
daa
xor
loopne
mov
adc
pushf
int
or
test
mov
jo
pop
adc
pop
loope
jae
call
xor
mov
xchg
iret
dec
faddp
dec
lds
mov
outsl
lahf
imul
jge
jle
incl
imul
inc
mov
pop
inc
mulb
loop
mov
cmc
add
mov
pop
icebp
sub
cmp
shl
or
addb
fwait
es
out
out
sub
push
jae
lahf
int
lret
mov
cld
fstpl
les
jno
ret
enter
lds
dec
frstor
mov
push
fcompl
xchg
cmp
rcll
mov
leave
jae
cmp
ss
xor
xchg
into
in
out
sbbb
or
aam
dec
mov
and
clc
das
dec
xchg
jae
adc
xor
cmp
dec
jp
pop
std
mov
mov
aam
mov
adc
cli
icebp
jns
outsl
inc
push
lock
adc
mov
hlt
dec
scas
inc
push
clc
pusha
fwait
mov
int3
arpl
cmc
std
imulb
inc
xchg
fiaddl
jl
mov
and
aam
push
or
outsl
mov
jns
sar
sbb
aad
inc
or
insb
cmp
test
cmpl
dec
fucomi
stc
mov
adc
pop
call
ret
xchg
push
cltd
loope
jno
add
stos
adc
movsl
xor
push
bound
add
adc
negl
cltd
pushf
flds
pusha
sbb
xor
rol
popa
xchg
sarb
sub
mov
pop
inc
pop
ss
adc
pop
ja
out
rcrb
aas
ljmp
adc
mov
in
sahf
push
cmp
xchg
and
sub
jl
cmp
adc
dec
cmpsl
jmp
test
fdivrs
xlat
test
int
mov
clc
inc
adc
pop
pop
call
mov
cmpsb
movl
fadds
aam
inc
pusha
addl
mov
push
addr16
test
mov
enter
jb
add
inc
mov
push
clc
cs
mov
sbb
jmp
jmp
dec
rclb
cmc
sub
ficompl
jne
data16
add
mov
fistl
jmp
fcmovb
leave
insb
movsb
pop
mov
es
das
lds
jp
cmp
mov
out
mov
push
repnz
cltd
xchg
popf
mov
lret
inc
xlat
push
sahf
pop
sub
cmpsl
imul
add
ljmp
leave
test
sub
sbb
into
nop
mov
nop
jl
mov
push
enter
loope
mov
pushf
mov
dec
mov
xsha256
cmpsb
nop
sub
cmp
add
inc
pop
mov
fmul
mov
jmp
xchg
lock
sub
jnp
cmp
sbb
lock
std
addr16
mov
mov
and
test
push
in
loop
scas
cmp
out
jbe
and
adc
push
inc
aad
cltd
test
lock
xchg
xchg
outsb
fdivl
imul
stc
out
xchg
insb
cmc
pushf
inc
jb
sti
jg
fiadds
fimull
dec
pop
inc
test
in
dec
jl
out
pusha
dec
subb
les
mov
call
repnz
or
pusha
aaa
xchg
in
xor
in
add
cmpsl
lret
push
ljmp
add
shlb
insl
jne
jge
jp
loop
inc
add
imulb
popa
jle
mov
jb
sbb
out
das
mov
lahf
mov
inc
cmpsl
test
incl
mov
int
jae
push
arpl
je
sub
jns
sbb
aad
sbb
sub
xor
and
inc
push
mov
pushl
mov
xor
in
mov
mov
lahf
stos
inc
and
lahf
nop
addr16
cmp
jl
fisttps
push
xor
jg
addl
addr16
cmp
icebp
and
sbb
pop
jle
mov
dec
aam
outsb
cmp
sbb
sub
mov
mov
pop
xor
ja
jp
sti
pop
mov
inc
in
fsubrl
addr16
inc
repnz
dec
or
mov
push
adcb
xchg
pop
adc
adc
add
lret
adc
jno
hlt
fdivs
lret
mov
pop
mov
adc
scas
dec
and
test
out
dec
adc
push
orl
mov
add
sub
in
leave
adc
mov
iret
mov
mov
inc
scas
pop
or
clc
jmp
gs
adc
inc
mov
notl
jmp
or
jbe
nop
loope
or
add
in
lea
sbbb
jnp
popf
enter
jo
in
and
loope
repz
aas
shll
cmpsl
and
bnd
push
lods
mov
xor
pop
std
or
rcr
jae
daa
inc
sub
xchg
int
lods
rclb
mov
sbb
repz
fsubrl
in
in
sbbb
jl
scas
insb
cmp
dec
lahf
jns
test
scas
xchg
imul
movsb
mov
adc
add
jl
pop
call
push
loopne
mov
cmc
jns
mov
mov
and
mov
orl
mov
movsb
sub
inc
and
mov
push
cmp
loopne
mov
fistpl
pop
divl
push
neg
sub
lods
cwtl
or
mov
insb
push
mov
es
mov
mov
fldenv
and
sub
sbb
xor
js
push
sbb
xchg
sub
xor
stos
and
pop
js
add
jae
pop
icebp
cmc
cmp
adc
fimull
mov
inc
mov
fbld
mov
insb
mov
cli
testl
aad
nop
repz
scas
popf
xchg
pop
jg
or
aas
clc
rorl
lds
scas
inc
imul
cwtl
push
loopne
jge
clc
mov
nop
push
pop
leave
jo
adc
rorl
xor
repnz
in
pushl
sbb
mov
adc
lods
pop
enter
cmp
sbb
fscale
add
insb
into
sub
fstp
sub
enter
xor
sarl
aam
ss
cmc
inc
cltd
es
insb
sbb
ret
insb
cmpsl
std
dec
pushf
push
rol
dec
jbe
in
cmpsl
adc
dec
int
divl
popa
add
pushw
adc
enter
and
push
push
sarb
cmp
sub
gs
xchg
dec
fistpl
jnp
fimull
inc
dec
daa
cli
dec
lock
jb
xchg
mov
inc
pop
dec
sbbb
push
mov
cmp
adc
pop
jns
cmp
std
int
fstp
fistpl
popa
xchg
xchg
and
dec
loopne
mov
mov
push
mov
mov
aaa
adc
jno
imul
ljmp
sub
lds
pop
cltd
and
sub
or
cmc
test
ds
mov
fimuls
rcrb
enter
js
or
negl
mov
inc
stos
or
xor
xchg
xchg
scas
clc
lahf
out
pop
mov
push
dec
or
sub
and
outsb
test
subl
shll
cmpsb
mov
mov
sti
push
pop
iret
xchg
stos
xor
add
pop
jle
or
or
xchg
adc
xchg
aad
push
push
add
mov
sbb
js
lock
in
adc
insl
add
pop
pop
bound
bnd
leave
das
lea
mov
shrl
std
in
shll
jle
mov
sbb
scas
xchg
inc
adc
ljmp
stos
add
xchg
add
les
push
mov
daa
fisttpl
sti
push
and
inc
cmp
mov
sub
xchg
jbe
sarl
ss
sbbb
and
lret
mov
retw
sar
jmp
push
pop
jge
scas
or
jmp
jmp
push
mov
lahf
fwait
sub
jg
rclb
jns
xchg
movsl
inc
hlt
fiadds
push
add
lds
sub
addr16
fbstp
mov
push
pop
mov
adc
add
sub
rclb
add
mov
test
fistpll
jp
movsl
adc
stc
cmp
lds
mov
rcl
cmp
jecxz
push
pop
jecxz
out
and
enter
ret
movsl
push
mov
dec
pop
fdivrl
sub
pop
sti
and
hlt
and
pushf
sahf
in
ja
daa
lret
imul
jge
or
add
push
pop
pop
int
aaa
sbb
xchg
ds
fs
aas
adc
sub
ja
test
push
pop
push
xorl
daa
dec
cwtl
lds
mov
repz
xor
ret
lcall
ror
pop
test
pushf
orl
sbb
mov
mov
xor
loop
mov
ret
add
les
xchg
jp
or
out
xchg
fildl
enter
mov
fsubl
enter
xchg
cltd
push
cs
sbb
int
xor
sarb
insl
int3
push
sbb
fisubl
mov
fwait
rorb
jae
cmp
lods
mov
mov
adc
cmp
mov
cmp
cld
adc
cmp
data16
pop
xchg
lds
and
out
sub
jmp
mov
cmp
je
and
pop
lea
xchg
push
cmpsl
shll
in
sbb
ss
sbb
mov
jae
mov
stos
and
jmp
stos
push
mov
pop
pusha
xor
cmp
xchg
cmpsb
shl
sti
pop
xchg
inc
sub
jbe
inc
jmp
jg
xchg
mov
adc
fs
adc
or
in
add
mov
js,pn
pop
scas
mov
pop
fistpl
call
lock
loope
pop
xor
out
jmp
test
cmp
cmp
jge
lret
scas
push
int3
dec
push
subb
scas
add
cltd
pushf
orb
inc
jae
popf
and
jns
jecxz
movsl
push
int3
ljmp
outsb
sub
cmc
outsl
or
stos
sbb
sbb
adc
jg
sub
test
pop
xchg
and
popa
movsl
test
test
popa
jno
pop
js
and
and
scas
jb
cmpsb
or
outsb
mov
cmp
popa
push
or
sbb
add
cld
cmpsb
enter
cmp
xor
ret
hlt
push
sbb
mov
repnz
add
fsub
sub
mov
cmp
out
inc
faddp
cmp
iret
xchg
sbb
xchg
ljmp
mov
pop
push
data16
jecxz
dec
ret
jae
dec
sbb
sbb
cmp
jne
test
add
js
add
push
scas
loope
mov
and
into
and
add
icebp
sub
sbb
add
lods
adcl
or
xchg
xor
cmc
sub
dec
mov
pop
enter
inc
fcomp
inc
arpl
mov
fstpl
sarb
push
pop
adc
push
int3
fwait
jno
je
lret
shl
sbb
or
fsubs
int
mov
popa
arpl
mov
mov
mov
mov
pop
mov
movsl
push
mov
xchg
inc
gs
outsl
cmp
jbe
cld
arpl
jne
lods
cli
xchg
add
cmpsb
and
js
jae
mov
xor
aas
mov
mov
xchg
sub
xchg
mov
pop
leave
lahf
es
push
jmp
dec
mov
push
dec
repnz
je
sahf
ds
insl
cmp
outsl
stc
xor
mov
loope
dec
cmpsb
pop
lea
inc
ds
test
and
stos
cld
in
pop
push
loope
popf
and
outsb
inc
mov
pop
dec
push
out
in
out
xchg
fs
repnz
and
pop
jo
mov
mov
pop
aam
setns
sub
mov
mov
fwait
mov
test
cmpl
test
pop
push
mov
aaa
xor
push
pushl
mov
mov
adc
dec
push
mov
aaa
dec
jae
lahf
sub
adc
arpl
push
cmp
lods
out
cmpsb
push
sarb
mov
sub
lock
inc
and
int
shlb
pop
mov
mov
repnz
mov
xor
jle
int3
shlb
and
jb
inc
adc
jg
inc
jmp
xor
out
cmc
pop
xchg
mov
mov
add
in
xor
adc
sub
lock
inc
push
adc
les
mov
ret
sahf
pop
mov
js
test
add
sar
sahf
or
out
jne
loopne
mov
mov
pop
clc
rorl
jle
hlt
xchg
hlt
sbb
fwait
adc
push
jecxz
ss
in
gs
repnz
add
and
cs
stc
lds
lds
push
ss
jae
inc
pop
sub
sahf
mov
adc
pop
out
arpl
pop
cmpsb
lcall
sub
imul
push
mov
iret
pop
pop
adc
pop
mov
sti
cmp
and
push
mov
arpl
or
dec
adc
lds
cmp
leave
jae
cli
nop
out
and
cmp
jmp
pushf
pop
lock
out
mov
or
cli
add
jg
aas
xchg
clc
jae
lahf
push
cmp
dec
jne
adc
and
fdivl
sbb
ljmp
insl
push
sti
add
out
xor
out
mov
push
jne
out
in
ds
jo
leave
push
cmpb
or
mov
cmp
mov
lret
sub
fdivr
jnp
sub
pusha
xchg
adc
je
adc
insl
lret
add
xchg
xchg
dec
lret
xorl
iret
insl
enter
jmp
imul
retw
cmpsl
pop
insb
dec
inc
std
sub
imul
xor
xor
xlat
push
dec
aam
cmp
cmp
leave
mov
inc
sahf
outsl
and
push
jns
movsl
loope
dec
incl
adc
repnz
pop
jp
out
loop
out
xchg
push
std
fadds
mov
mov
lret
movsb
push
jmp
jle
in
pushf
push
inc
adc
aas
pop
dec
stos
call
and
arpl
and
mov
shll
pop
stos
mov
data16
imul
dec
xor
imul
sub
addr16
imul
stos
nop
ficoml
cld
push
dec
ret
cmpl
mov
mov
pop
add
mov
pop
out
fisubrl
xchg
mov
out
and
push
jl
stos
lahf
push
pop
data16
add
fmull
test
popa
mov
leave
and
push
xor
imul
aas
aad
into
inc
xchg
inc
test
xor
sahf
dec
stos
test
mov
dec
mov
out
pop
adc
pop
test
lea
gs
and
push
jns
js
or
pop
out
repnz
fldt
mov
or
shrl
mov
int
inc
xor
je
popf
cmp
sub
mov
jmp
lcall
insl
xchg
inc
lock
fs
in
mov
sub
pop
daa
mov
inc
jo
dec
push
fistl
rolb
xchg
ljmp
jge
xor
dec
je
inc
das
pop
xor
or
sub
jg
lret
sar
in
sub
lret
dec
add
stos
sbb
dec
pop
negb
lahf
xor
std
pusha
popf
loopne
lods
jecxz
test
insl
cs
scas
inc
stos
stos
mov
cmpsl
adc
dec
push
jecxz
add
sbb
or
xor
das
lret
aaa
mov
cmp
dec
mov
mov
inc
pop
adc
xor
in
push
dec
xchg
mov
daa
sti
sub
push
aad
sbb
inc
sub
and
sub
insl
fldt
or
loop
or
loope
jmp
dec
mov
mov
pop
std
and
jp
nop
jmp
ret
inc
mov
inc
in
push
scas
mov
and
jmp
jl
testl
sbb
icebp
inc
fcomip
mov
ror
cmp
test
or
sti
fldcw
xor
and
or
pop
xor
bound
les
fstl
xor
pushf
push
xchg
xchg
movsl
inc
mov
xchg
dec
fists
dec
cltd
arpl
stc
mov
mov
es
loope
push
push
inc
inc
or
pop
mov
xor
xlat
jo
inc
orb
inc
in
push
hlt
mov
iret
mov
jb
jl
notl
add
and
mov
sbb
orb
pop
push
xchg
jmp
xchg
dec
inc
stc
out
loopne
jnp
lds
shll
add
movl
fsubr
shlb
nop
loope
imul
add
cmpsl
push
andb
xlat
xchg
jl
lods
stos
sub
add
pop
push
sbb
sub
incb
sbb
aaa
hlt
cmpb
pop
dec
cmc
push
roll
adc
inc
mov
loop
fsubl
ret
xchg
mov
fsubl
psraw
je
aaa
xchg
jle
jge
imul
xchg
int3
mov
lock
jl
sarb
xor
in
xchg
or
sbb
insb
hlt
std
pop
test
or
in
push
pop
clc
sub
lock
scas
sub
xor
pop
test
in
push
dec
hlt
icebp
pop
fldenv
adc
push
xchg
inc
add
add
xchg
dec
pop
daa
and
xor
rcll
lock
inc
divb
or
jns
insb
dec
mov
mov
cld
jl
push
jbe
jne
addr16
xchg
xchg
mov
or
sbb
out
mov
push
and
or
and
leave
das
inc
dec
mov
xor
outsb
lret
pop
or
lea
xlat
repz
push
push
and
inc
je
pop
fwait
js
sub
fsubrs
pop
sbb
imul
xchg
pop
jo
inc
ja
mov
mov
jg
xor
xchg
std
add
jne
into
fildll
mov
movl
and
clc
xchg
push
sub
mov
mov
idiv
mov
push
cmp
push
pop
aam
shrb
iret
add
test
push
subl
loopne
push
mov
fidivrs
mov
pop
dec
iret
jl
sarb
ret
add
gs
add
pop
rcll
xor
and
fs
pusha
aas
cmpsl
adc
inc
movsb
lods
adc
les
pop
sbb
add
and
rorl
sub
fwait
adc
or
std
testb
inc
clc
add
data16
out
out
dec
out
xchg
scas
add
and
pop
dec
jge
fisubs
ja
push
popf
sbb
add
push
rol
repnz
stos
es
and
sbb
add
xchg
push
jnp
in
mov
les
leave
jge
into
pop
incb
jmp
cmp
cltd
lea
pop
clc
ds
mov
xchg
push
cs
pop
insl
mov
adc
loopne
roll
out
sbb
gs
imulb
mov
add
lea
mov
xchg
and
ja
cmpsl
sub
jnp
setbe
test
cmpb
insb
add
mov
adc
add
addb
dec
scas
inc
pop
mov
xchg
cmp
jp
pusha
push
out
call
incb
push
das
or
jle
adc
adc
sub
and
mov
sub
sbb
xor
xchg
lret
lock
cmp
xchg
enter
das
xor
ret
cmp
xorl
popf
pushf
sub
cmpsb
pop
jbe
cmp
mov
cli
push
adc
shl
cltd
sub
movsl
jne
out
cmpl
popl
jo
jae
push
xor
adc
cld
sbb
dec
mov
mov
ds
push
mov
mov
loop
jg
insl
add
mov
scas
xlat
xlat
pop
push
sbb
and
pop
gs
fdivl
popf
pop
and
and
xor
jmp
dec
call
inc
pushf
sbb
inc
adcb
mov
loop
sbb
jbe
movsb
add
xchg
bound
leave
fiadds
enter
cli
xchg
xchg
xor
xchg
xor
jp
stos
xchg
mov
mov
add
in
cld
ja
push
popa
int3
fldcw
inc
mov
iret
inc
jns
imull
adc
sbb
cmp
sbb
pop
or
add
adc
lock
or
pcmpgtb
or
push
and
lds
jno
inc
mov
pop
dec
rolb
xchg
xor
xchg
pop
inc
xor
xchg
decl
es
hlt
sbb
pop
aaa
out
in
adc
push
loope
xchg
aam
pop
push
inc
jae
and
mov
bound
dec
sub
cltd
xchg
sbb
cmp
cmp
mov
mov
mov
insl
bound
sbbl
dec
push
movsb
inc
mov
stos
or
ljmp
test
jge
arpl
push
fiaddl
and
sbb
sbb
orl
jo
icebp
add
pop
test
cmp
mov
xchg
sub
lods
mov
push
loopne
and
loopne
loope
ret
inc
ja
cs
and
mov
jnp
stos
mov
cmpsl
and
popa
and
mov
mov
adc
or
lock
dec
jbe
aam
lret
sti
jae
cld
aas
sbb
or
sbb
insl
cld
sbb
ss
rcrl
jns
push
jle
pusha
sub
andl
jg
hlt
mov
daa
pushf
rorl
mov
rolb
sbb
sub
popa
cmc
mov
xlat
lock
es
adc
sti
test
mov
lcall
fs
xchg
jg
shl
gs
pop
cmp
xchg
mov
add
and
sbb
adc
fdivrl
jb
in
cmp
lods
xor
cli
and
popf
mov
jp
adc
int
fs
mov
pushf
aas
jne
jp
insb
fs
add
popa
xchg
dec
pop
push
or
scas
into
sbb
pop
stos
xchg
mov
adc
fcmove
jecxz
and
lcall
popf
sbb
sbb
out
or
mov
rcrl
inc
adc
dec
mov
push
fwait
mov
pop
mov
xchg
and
and
xorb
cmpsb
stos
pusha
into
push
adc
push
arpl
jp
jne
push
sbb
sub
mov
lcall
stos
pusha
stos
shrb
pop
dec
mov
pusha
enter
es
adc
sub
es
data16
div
mov
cmp
mov
aas
pop
repnz
jecxz
inc
in
dec
out
mov
xchg
and
mov
add
lahf
jnp
in
or
sahf
iret
push
sahf
cmp
sbb
push
mov
cmp
xchg
pop
jae
loop
jb
adc
in
jle
sub
jmp
sahf
xchg
add
fdivrs
pop
into
add
int3
mov
xor
pop
shll
loopne
sbb
cld
push
loope
dec
scas
inc
lahf
je
jbe
pop
loopne
or
lahf
int3
ljmp
std
test
jg
sub
fildll
push
popf
sbb
sub
lret
loopne
cli
push
push
dec
dec
xchg
adc
jg
fimull
sub
pop
aad
xor
add
xchg
cmp
insl
xchg
add
mov
lret
imul
push
pop
add
adc
mov
bound
shlb
inc
mov
cltd
mulps
jbe
scas
icebp
insb
mov
sbb
mov
daa
pusha
aas
push
xchg
loop
mov
sahf
out
je
imul
insl
cmp
std
cmpsb
jl
out
sub
aaa
mov
insb
lea
push
jg
or
lcall
mov
xchg
add
shlb
mov
js
gs
jle
dec
loop
mov
std
adc
test
mov
out
pop
sub
xlat
repz
sbb
ds
stc
jns
sub
stos
insl
call
jo
es
mov
loop
pop
dec
jae
cltd
lock
lret
ja
mov
mov
add
and
xor
mov
push
adc
xor
sub
orb
scas
or
jb
inc
scas
dec
data16
testb
in
cwtl
in
in
jle
pop
iret
xor
flds
into
xchg
adc
dec
daa
jl
xorb
mov
in
jns
or
popa
mov
mov
xor
push
and
xchg
dec
cld
scas
xor
cmpsb
jns
or
inc
xchg
push
mov
push
pop
jb
lcall
pop
aad
jle
outsb
stc
lahf
sbb
push
push
mov
or
jb
inc
sbb
push
movsl
or
inc
push
mov
pusha
mov
aam
cmp
fsubs
mov
subl
mov
adc
dec
push
jo
sub
fld
push
ja
js
int
xchg
push
xor
mov
and
mov
gs
dec
inc
cli
push
xor
pusha
mov
mov
push
pusha
mov
xlat
iret
lods
aad
cli
mov
fcomip
mov
pop
mov
in
mov
stos
mov
cmp
outsb
leave
andl
push
dec
and
fimuls
dec
pusha
jb
cld
jo
in
ja
inc
cmp
adc
shrl
jmp
sbb
or
pushf
loop
mov
daa
add
into
scas
out
xchg
mov
sar
mov
cld
sti
pop
or
test
stos
shll
aam
push
ljmp
into
dec
ds
shll
xor
adc
mov
cli
lods
or
leave
xchg
or
insb
mov
neg
rorb
xchg
cmp
xlat
fsts
pushf
cmp
fwait
push
movsl
aad
adc
ret
lods
sbb
adc
sbb
stc
cmp
push
xchg
and
or
gs
add
lea
or
and
js
inc
adc
int
pop
test
push
jmp
sub
leave
cwtl
push
pop
test
xor
dec
popa
push
mulb
movsb
outsb
or
pop
xorl
movsb
or
iret
mov
sub
dec
loope
cmp
sti
clc
aaa
iret
xchg
adc
or
mov
lret
int3
jns
add
imul
add
enter
push
ficompl
jl
pushl
movsl
aam
push
aad
jae
or
cmpsb
sub
jae
jbe
hlt
inc
or
push
aam
jl
and
fcoml
dec
pop
cmp
mov
adc
xor
mov
outsl
pusha
mov
loopne
push
dec
ja
and
mov
mov
mov
jmp
cli
add
testl
mov
sbb
rcl
shrl
xchg
out
or
les
adc
ret
jno
mov
mov
sahf
inc
orb
mov
mov
or
mov
cmp
mov
rcl
fdivrs
or
jne
cmpsb
movsb
pop
dec
pop
int3
jmp
jno
aad
add
lock
mov
add
inc
je
cmp
fldt
ja
sub
out
mov
dec
push
into
mov
ret
call
mov
dec
imul
call
cmc
in
xchg
adc
adcb
adc
ljmp
xor
cmpsb
jge
push
scas
jbe
add
or
pop
sti
outsb
fwait
cltd
push
or
stc
mov
ds
pop
in
ds
idivb
sbb
push
pop
mov
icebp
mov
jae
sbb
jns
jge
inc
cs
mov
dec
scas
xor
or
test
mov
mov
ret
mov
rolb
lret
repz
cli
hlt
test
xchg
dec
xor
bound
ret
cmpl
cmp
out
adc
clc
enter
outsb
popa
fs
daa
insb
add
jp
cmp
and
in
xchg
stc
in
cmp
sbb
sar
sbb
js
stos
mov
mov
xchg
cmp
or
fldcw
pop
xchg
mov
lahf
or
jbe
add
push
adc
stos
adc
icebp
icebp
pop
leave
adc
and
cmp
jae
jns
cmpsb
scas
sub
dec
pop
mov
jbe
dec
add
pop
jae
and
push
sub
sbb
popa
jmp
xchg
adc
call
pop
add
push
rorb
or
ds
pop
xor
cmp
insl
and
clc
push
std
fbld
xchg
sub
cld
aaa
pushf
and
or
ret
adc
rolb
div
push
pushl
fsubrs
and
movsb
out
outsb
mov
dec
sahf
pop
pop
mov
out
xor
mov
pop
cmp
xchg
rclb
data16
pop
ror
add
cmp
shll
sbb
sbb
push
sahf
leave
jae
add
sbb
pop
cmp
mov
iret
pop
call
sti
insl
repnz
inc
fdivrs
lds
jae
and
sbb
lock
xor
xchg
insb
or
mov
outsl
mov
mov
mov
out
dec
jno
ror
lret
pop
mov
stos
sub
push
data16
pop
call
dec
sti
xchg
xchg
pop
sti
or
dec
pusha
pusha
negb
jno
enter
cmpsb
adc
jb,pt
xor
push
scas
sub
mov
negb
cmpsl
pop
jbe
shlb
aam
loop
jns
ds
imul
out
pusha
add
push
or
add
dec
icebp
jl
int
mov
out
add
out
dec
pop
fs
and
pop
lds
jle
mov
xlat
ss
and
addl
mov
cmp
xor
xchg
jns
mul
cmp
out
pop
call
fmuls
lea
mov
and
jb,pn
jmp
icebp
in
std
sbb
add
mov
div
xchg
arpl
and
lods
pop
aas
jne
ja
jl
sbb
cmc
and
xchg
aaa
jmp
lods
or
lods
js
stc
inc
and
adc
inc
into
add
pop
adc
mov
mov
mov
push
sbb
xor
clc
push
outsl
sub
fs
cmp
les
rol
cmp
xchg
loop
lcall
inc
ret
pop
push
push
adc
pop
popf
mov
jle
push
dec
in
cld
rclb
sbb
mov
adc
sub
rclb
sbb
ret
sub
xchg
xor
mov
mov
daa
aas
jno
arpl
lret
or
cmp
inc
mov
inc
outsl
clc
insl
leave
and
push
jg
dec
sub
xchg
push
cmpsl
xor
mov
cmpsl
rol
insl
mov
fisttpll
and
cmp
sbb
mov
enter
push
adc
fbstp
imull
insb
push
fcmovb
jb
jbe
hlt
ds
arpl
cli
xor
scas
inc
fmulp
cltd
clc
xor
rol
mov
push
mov
or
out
test
daa
dec
push
mov
imul
sub
add
xor
push
inc
loope
movsb
inc
mov
loopne
int3
push
lret
sub
push
stos
testb
int
stos
jns
jno
sub
xor
in
mov
and
sub
push
in
pop
cld
push
fs
pop
mov
outsl
mov
sbb
int3
fstpt
data16
stos
dec
sub
pop
data16
sbb
inc
pusha
outsb
xchg
sbb
pushf
pop
xor
dec
cwtl
add
adc
jp
push
cmc
pop
outsl
shlb
mov
mov
in
mov
mov
push
pushf
clc
dec
cld
jmp
mov
or
add
cltd
adc
jecxz
loopne
cmp
hlt
sub
sub
mov
inc
adc
or
pushf
push
sbb
out
aam
jl
and
stos
pop
popa
test
inc
lods
ds
pushf
test
dec
add
and
bound
loop
push
jnp
xchg
repnz
sbb
pushf
dec
sbb
stc
pop
and
push
in
jmp
jge
test
ret
dec
mov
mov
int
push
push
and
inc
scas
cmpsl
call
bound
or
adc
es
and
xchg
sahf
push
mov
sahf
insl
loop
adcb
insl
cmp
dec
fcoml
lahf
xchg
fldt
rorw
dec
and
outsb
inc
pusha
hlt
xor
idivl
mov
fisubl
jle
xchg
sahf
clc
repz
addr16
testl
adcl
mov
jo
cmc
and
rorl
sbb
jns
mov
xor
vpaddq
mov
aad
test
loope
ret
outsl
mov
mov
mov
cltd
test
popl
lcall
pop
insl
mov
cs
jecxz
dec
xor
jo
mov
shll
sub
add
lods
in
xor
scas
loope
jb
test
rolb
shll
push
shll
fwait
subb
data16
xor
ja
int3
mov
pop
es
in
jbe
inc
jp
enter
sub
sbb
pop
add
in
dec
fistpll
mov
imul
or
lods
enter
fisttps
inc
mov
loopne
lods
cmp
inc
iret
in
inc
fcmovu
jbe
fs
xchg
mov
and
movsl
ret
in
xor
jbe
ds
fnstenv
or
ficompl
dec
sbb
pop
pop
dec
aam
leave
pop
loopne,pn
dec
and
jbe
stos
sub
cmp
cmp
test
add
leave
fadds
jb
and
xchg
and
shlb
lea
xlat
test
push
xor
pop
arpl
in
test
aad
imul
stos
lods
jmp
pop
int3
js
adc
jno
repnz
mov
pop
or
lock
push
xchg
test
sub
mull
jno
fs
mov
leave
push
out
mov
movsl
imul
push
fs
andb
push
adc
cmpsb
adc
outsb
inc
imul
sbb
inc
mov
jnp
ljmp
push
cmp
xorb
xchg
or
movsb
cmp
push
sub
pop
inc
xchg
sbb
out
add
mov
enter
ffree
lahf
fadds
insb
fmul
or
mov
lods
push
jnp
jle
sub
test
jle
dec
jmp
dec
xchg
cld
into
adc
and
lret
cmp
lret
cwtl
push
cmp
mov
jecxz
sarb
mov
daa
nop
les
push
push
lahf
pop
test
mov
mov
xchg
je
mov
insb
dec
sbb
sub
and
xchg
mov
cmpsl
cmpsl
jbe
cld
sti
and
mov
ss
pushf
loope
lahf
mov
ror
dec
test
in
push
cltd
sti
out
mov
sahf
shrb
ljmp
test
pop
aas
cmc
out
mov
sub
neg
mov
sbb
jp
mov
stc
jne
or
addl
clc
xchg
inc
lods
cmpb
cmc
cltd
xchg
lock
mov
pop
cmp
sub
sub
mov
cmp
popf
cwtl
push
mov
int3
movsl
test
mov
mov
pop
pop
out
mov
shufps
jnp
or
mov
mov
cmp
sahf
dec
xchg
xchg
outsl
ds
sbb
out
lea
or
imul
inc
jb
ja
loope
mov
mov
cmp
xchg
cmc
out
test
stos
dec
stos
mov
push
lret
push
arpl
mov
sbb
dec
gs
scas
testb
or
adc
cmp
jno
adc
dec
or
sti
inc
fstpl
adc
mov
mov
xchg
les
and
fidivs
dec
adc
xchg
push
mov
faddp
dec
sub
js
les
fidivl
aam
or
leave
stc
dec
clc
cld
test
mov
nop
jnp
push
cmp
outsb
cs
pop
adc
aam
in
pop
and
ficoml
sub
dec
sbb
ds
mov
sub
xor
rorb
in
mov
ss
sbb
inc
add
dec
js
lods
or
mov
aad
fstps
adc
xchg
test
aad
movsb
sti
call
imulb
cmp
adc
fisubrl
fs
mov
xlat
sahf
repz
std
cltd
lods
or
in
jl
dec
sahf
lock
mov
push
mov
sbb
dec
dec
mov
mov
xor
mov
bound
add
fdivl
or
fs
push
lock
cmp
inc
imul
pop
xor
pop
data16
dec
popf
lahf
scas
mov
outsb
fsubs
and
das
inc
pop
mov
sbb
or
dec
scas
lret
lret
insb
into
mov
xor
arpl
hlt
insb
std
mov
pop
popf
lret
call
and
jo
clc
jbe
push
shrb
movsb
into
das
test
adc
push
mov
lods
dec
dec
xchg
mov
and
jns,pt
xchg
push
out
aas
test
negb
aaa
jl
pop
jns
sbb
cmp
push
push
and
iret
jle
pop
fiadds
cld
data16
xchg
inc
loopne
mov
cmp
ret
xchg
lret
data16
push
das
mov
fstl
shl
dec
inc
in
mov
cmc
or
fwait
jo
xor
dec
and
insb
inc
dec
in
fsubl
dec
inc
add
cmpb
test
xor
lods
dec
movsl
insl
or
addr16
daa
pop
sub
mov
andl
inc
inc
filds
in
movsb
test
and
shl
outsl
shlb
push
iret
lock
lea
push
mov
or
pushl
xchg
mov
arpl
xor
push
fwait
lret
lret
fsubrp
out
jno
pop
fmuls
icebp
dec
pop
aam
aam
mov
in
mov
aas
stos
xchg
mov
sbb
std
sahf
add
in
push
mov
push
push
mov
aaa
lret
mov
and
mov
int
push
add
mov
call
xor
mov
mov
fsubr
or
cltd
icebp
scas
push
xor
je
push
push
xchg
stos
adc
lock
xor
ljmp
fs
cwtl
int
cmp
and
fiaddl
inc
mov
divl
loopne
leave
mov
or
hlt
bound
mov
pop
stc
push
nop
sahf
imul
loope
call
jecxz
xor
cmp
push
jge
lret
push
scas
add
sub
sarl
xchg
cmp
roll
andl
cs
pop
jbe
add
mov
or
mov
xor
test
shll
leave
test
jne
popf
insl
mov
mov
or
je
sub
rol
mov
or
jo
mov
push
xor
xor
movsl
push
push
dec
jge
movb
and
ss
xchg
push
jnp
out
pop
cmp
xor
aaa
repnz
adc
mov
adc
aad
inc
nop
mov
push
movsl
jb
lret
mov
mov
ja
repnz
and
xchg
outsb
iret
mov
lcall
pop
and
test
loop
sbb
fidivs
push
mov
xor
mov
aad
pop
jle
lret
lds
push
mov
sub
addr16
mov
pop
sti
iret
inc
aad
add
ficoms
mov
lcall
push
ljmp
jns
sub
xor
adc
and
dec
in
adc
into
pop
or
add
lahf
or
es
mov
ljmp
sub
inc
sahf
pop
xchg
scas
hlt
test
adc
sub
jae
sbb
cmp
mov
inc
mov
xchg
daa
mov
jle
iret
sbb
mov
xor
mov
sbb
rcll
dec
test
frstor
aad
ret
cmp
jle
outsl
push
movsb
sti
xchg
or
int
jmp
add
in
or
roll
mov
inc
sub
or
test
hlt
negb
icebp
int
ficoms
or
and
dec
push
adc
in
ss
xchg
xchg
in
dec
in
rcr
scas
pop
dec
mov
mov
xchg
pop
cmp
and
pop
in
les
cmp
and
xchg
cs
add
pop
ja
js
lock
jl
sub
ficoml
push
lcall
push
push
arpl
testb
pop
clc
xchg
pop
imul
dec
aas
xchg
sub
xchg
mov
inc
or
pop
jg
sub
mov
nop
subb
repnz
test
inc
inc
inc
jge
rclb
or
dec
mov
cltd
dec
xor
sti
pop
push
dec
in
out
into
pop
iret
push
add
jbe
cmp
mov
clc
clc
sahf
push
pop
enter
cmp
jp
cmp
xor
pushf
aaa
inc
xor
fs
pusha
mov
xor
jmp
sub
jne
mov
insb
add
jne
sbb
dec
or
addb
test
add
movsl
mov
in
outsl
test
lods
mov
lret
dec
je
lock
out
add
jo
dec
pmuludq
pop
push
push
mov
add
sub
lock
clc
lds
mov
sti
xchg
inc
outsb
and
or
cmp
jbe
ja
and
jecxz
jns
scas
inc
xchg
sub
add
sbb
mov
or
inc
push
xchg
aad
fwait
or
rcrb
xor
rorl
rorb
mov
pushf
test
stc
jo
jl
clc
xchg
inc
outsl
pop
mov
push
sub
push
arpl
outsl
arpl
inc
ljmp
push
push
and
dec
movsb
mov
gs
sahf
cmp
add
mov
xchg
mov
inc
adc
jnp
rclb
cli
fiaddl
mov
leave
cmc
xor
mov
out
mov
shr
cwtl
roll
and
pop
or
mov
loop
pop
jmp
xor
jb
les
es
fadds
sahf
sub
mov
pop
adc
xchg
aas
lret
std
mov
mov
cwtl
jns
sbb
push
or
ret
adc
inc
out
lahf
and
test
jle
je
pop
push
rclb
or
xor
jno
in
sub
pusha
mov
repnz
std
dec
mov
xor
inc
jb
cmc
or
xchg
add
jl
inc
js
mov
pop
test
jmp
push
xor
sahf
push
sbb
xor
cmp
cltd
mov
out
mov
push
inc
push
imul
lret
clc
push
cmp
es
cmp
dec
mov
jecxz
lcall
ficompl
mov
cltd
lock
add
jae
rcrl
movsb
addr16
loop
push
lcall
jns
aam
scas
mov
push
andl
lret
push
repz
mov
lahf
jns
push
lcall
sbb
loopne
out
iret
aaa
xchg
imul
outsl
lret
jne
inc
xchg
or
cmp
sbb
mov
sub
pushf
adc
and
jne
ret
insl
in
pop
lcall
sahf
mov
loope
mov
push
aam
sub
xor
xchg
inc
enter
pop
insl
aaa
dec
adc
and
filds
in
lock
and
pushf
mov
jecxz
or
sti
or
mov
faddp
sbb
cs
sub
push
xor
push
lods
fnstsw
lahf
dec
xchg
rolb
lret
or
lods
push
adc
adc
add
fwait
xlat
sbb
fdivrs
dec
pop
mov
pop
loope
not
push
ja
fisubrl
sbb
icebp
and
das
and
xor
lock
mov
lock
daa
dec
mov
lock
popa
xor
lret
cwtl
xor
dec
sahf
and
fidivl
mov
xchg
sarb
push
cmpsb
push
pusha
aam
pusha
and
rclb
jecxz
insl
loope
adc
outsl
lock
bound
cwtl
sbb
inc
jbe
cmp
xchg
stc
sub
push
adc
in
add
xor
jbe
or
jae
pop
out
push
gs
or
and
cmp
or
pop
mov
andb
jb
pop
inc
push
push
add
lods
iret
pusha
lds
in
cmpsl
int
aad
jno
mov
mov
pop
cmp
push
js
lahf
loopne
add
mov
sbb
jno
pop
or
jo
jg
into
clc
stos
notl
mov
push
pop
xchg
inc
test
cmc
mov
push
and
add
mov
ret
xlat
insb
and
popa
xor
or
cld
lods
pop
sbb
and
fcompl
lods
loopne
xor
cltd
scas
bound
dec
rolb
jns
add
out
push
adc
add
and
pop
cmc
push
sbb
xchg
out
repz
adc
xchg
shlb
adc
sub
push
nop
enter
mov
dec
adc
cmp
cld
xchg
or
jg
shlb
jl
jmp
movl
dec
popf
mov
push
in
mov
cli
mov
ret
into
ds
cli
and
inc
sbb
test
jo
sahf
cmc
dec
inc
loop
gs
loope
lcall
cltd
subl
outsb
imul
data16
adc
jp
test
ljmp
lcall
imul
pushf
push
mov
or
adc
push
sbb
xchg
sub
cwtl
loop
sbb
add
and
pushf
add
add
enter
aaa
sub
enter
mov
fimull
mov
jg
cmpl
std
call
scas
mov
sarl
mov
dec
test
or
mov
dec
lcall
pop
add
cmp
je
rep
inc
add
push
addl
mov
cmpsb
movsl
mov
test
nop
push
js
popa
xor
cmp
popa
or
xor
fcom
je
incb
mov
pop
sbb
nop
pop
jnp
addr16
out
test
ja
rdpmc
push
testl
dec
mov
imul
or
xchg
aad
push
cmp
sbb
sbb
add
iret
push
nop
fstp
xor
xor
in
insb
mov
movsl
scas
cmp
test
xchg
sub
cmp
dec
mov
stos
insb
aaa
mov
inc
lods
scas
dec
sbb
rcrb
flds
pushf
stos
or
movsb
les
sbb
sbb
filds
adc
dec
jns
clc
dec
outsb
test
jne
fnsave
outsb
pop
pushf
cmp
cli
loope
hlt
inc
sti
mov
insb
mov
out
sahf
xchg
in
sub
icebp
incl
sbb
sub
pop
jg
stos
or
mov
pop
and
xchg
popl
int
repz
pop
and
pop
icebp
xchg
and
std
push
dec
out
inc
mov
lods
and
mov
aas
aaa
les
adc
push
mov
sub
xchg
or
and
pop
xchg
xchg
repnz
daa
mov
out
cld
aas
lcall
ret
cld
test
jmp
dec
dec
xor
aas
mov
mov
sbb
xor
jge
imul
lds
andps
xchg
outsl
fnsave
add
pushf
mov
test
cmpsb
sub
ja
xchg
xchg
ss
pop
js
xchg
push
dec
sbb
mov
lods
cmp
pop
pushf
mov
mov
lods
lret
fisubs
dec
xor
sub
jg
add
xchg
lahf
in
jno
sub
sub
xor
fdivs
jns
sahf
lods
mov
inc
mov
sbb
fcomi
out
stc
jo
push
sub
dec
mov
lock
clc
mov
push
rol
pushf
sahf
mov
rcrl
cmp
mov
xor
add
dec
cmp
sbb
pop
popf
mov
sbb
testb
push
mov
out
jnp
xlat
insb
dec
jno
dec
sahf
adc
and
cs
mov
shl
mov
or
idiv
inc
push
fnsave
popa
and
sbb
icebp
jg
jns
sti
jg
fdiv
and
inc
or
pop
jo
clc
fs
shrb
mov
sub
mov
jns
out
or
mov
cs
test
test
repz
aam
jbe
sub
iret
pop
add
adc
dec
mov
mov
mov
and
out
sbb
push
cmpsl
in
push
lahf
bound
in
mov
pop
jmp
or
jne
sub
cmpsb
dec
pop
arpl
andl
fdiv
xor
mov
outsl
push
ljmp
and
rcrl
dec
pop
mov
mov
inc
test
arpl
movsb
and
aam
inc
pop
es
inc
jmp
movsl
push
ljmp
sbb
lcall
inc
cs
pop
mov
mov
cwtl
cmpsl
into
xchg
jbe
out
lret
push
mov
and
mov
mov
out
shr
mov
and
jle
fimull
mov
mov
lret
lea
out
mov
dec
shrb
add
in
jle
aad
in
xor
sahf
inc
cmpsb
or
mov
xor
movsl
xchg
xor
mov
enter
sub
iret
jnp
out
or
mov
push
push
fbld
sbb
movsb
sbb
popf
mov
test
popf
xchg
sarb
jb
sbb
mov
mov
push
scas
push
lret
mov
test
jge
mov
cmp
push
aas
les
dec
cmp
mov
add
out
or
ss
insb
cltd
jmp
or
push
jne
lcall
pop
ret
into
push
mov
outsb
xor
pop
aam
mov
fidivl
test
jae
dec
sub
sarl
lds
ficomps
xor
push
nop
imul
cld
fbstp
popw
das
shlb
test
lret
mov
fildll
pusha
stos
pop
mov
subl
cmp
mov
add
icebp
leave
and
cli
std
movsl
dec
or
pop
loop
and
jge
jnp
loope
cmpsl
add
lret
push
jo
mov
mov
andb
shl
cmp
mov
add
push
dec
dec
adc
or
pop
pop
test
rorb
cmc
sbb
scas
push
daa
in
ljmp
arpl
aaa
inc
js
push
addr16
mov
mulb
ficoms
jle
mov
out
cmpsl
cld
jg
aas
cmp
outsl
dec
int3
push
inc
andb
aam
daa
and
adc
mov
xchg
mov
out
mov
push
pop
stc
or
ds
xor
cmp
mov
push
stos
jmp
push
mov
aas
rorb
jmp
and
and
gs
lea
movsb
pop
aaa
push
xorb
dec
push
dec
pop
dec
fiadds
mov
enter
jae
jmp
or
call
and
cwtl
outsl
cs
imul
cs
lahf
popf
mul
mov
cmp
out
stos
dec
ret
cmp
loope
mov
pushf
ljmp
adc
xchg
cld
arpl
adc
stc
mov
inc
stc
sub
aaa
mov
pop
xor
mov
lea
jp
push
xorb
push
sub
loope
lods
sbb
pop
adc
jle
mov
jmp
mov
frstor
cmc
dec
cmpsb
jp
add
pop
popf
mov
out
dec
sub
xorl
mov
fcmovnb
mov
std
push
pop
inc
sbb
sub
cs
pop
das
int3
mov
pop
ja
dec
push
jp
lahf
cmp
and
test
or
clc
adc
pop
mov
aad
cmp
push
mov
arpl
jmp
in
aas
sub
fdivrs
mov
mov
mull
xlat
movsb
lock
rorb
jb
dec
pop
inc
add
or
sub
cmpb
mov
insb
pop
in
in
jge
dec
cld
repz
jl
ficompl
mov
gs
push
sub
stos
jne
mov
outsb
lret
add
cmp
jb
test
and
dec
cmp
jl
xchg
mov
repnz
xchg
shlb
pop
sahf
mov
mov
test
fsts
mov
fidivs
mov
mov
sub
pop
inc
mov
jmp
sub
inc
inc
movsb
mov
aas
out
test
bound
dec
jno
not
push
or
repnz
loopne
xchg
sbbb
hlt
arpl
ss
jns
cld
lods
loop
mov
inc
adc
fcoms
push
pop
push
movsb
leave
out
pop
adc
push
fstpl
sub
mov
lods
dec
popf
and
adc
cwtl
mov
aam
pop
mov
cmpsl
mov
mov
push
mov
arpl
jb
stos
outsl
mov
xchg
hlt
cs
xchg
ds
imul
es
rolb
in
push
add
mov
dec
cwtl
insl
xchg
sarl
cmp
bnd
mov
popl
dec
ficoml
bound
add
sbb
add
push
xchg
loopne
test
pop
cs
std
fildl
add
xchg
je
enter
mov
mov
jle
jbe
dec
jl
sbb
arpl
dec
iret
cmp
iret
frstor
xchg
ja
imul
sarl
mov
jb
adc
xchg
ficomps
aas
sub
aad
into
loope
mov
loopne
lods
fimuls
in
test
xchg
sbb
adc
jno
jb
insl
lods
sub
popf
ret
and
mov
das
iret
inc
movb
mov
mov
xchg
cmp
fmuls
dec
sahf
out
mov
mov
push
imul
rorl
dec
iret
cmp
jg
jecxz
push
ret
or
dec
jbe
add
mov
cmp
jb
pop
add
xor
xor
push
sbb
movsb
add
and
mov
sub
sbb
push
out
cld
je
jae,pn
xor
pop
repnz
push
std
push
jg
pop
in
or
mov
jmp
loopne
ljmp
cwtl
sub
cmpl
int3
loop
insl
std
add
fs
rcrl
jmp
loope
outsb
inc
and
xor
mov
inc
jmp
and
jg
push
xchg
jg
rclb
jp
mulb
sbb
jnp
in
cmc
sub
aaa
sub
scas
sub
inc
sub
out
mov
out
xor
aam
push
test
mov
cli
pop
jmp
into
or
imul
xor
popf
call
gs
cmp
xchg
arpl
rcrl
sbbl
pop
mov
mov
stos
jae
pop
adc
xchg
pop
mov
sarb
jmp
xor
mov
push
push
enter
cmp
subb
xchg
jmp
dec
xlat
jo
mov
sub
inc
jnp
mov
int3
cwtl
lcall
gs
sub
movsb
fists
jecxz
or
cmc
adc
in
je
mov
dec
testl
xchg
jle
mov
push
shrb
jl
or
or
movsb
roll
lret
mov
sbb
pop
shrb
adc
pop
lret
and
cmp
lret
lahf
outsb
add
add
jae
rorl
mov
jnp
cmp
outsl
pop
push
xchg
and
push
sbb
cmpl
push
mov
add
inc
sbb
or
push
jmp
sahf
test
or
sub
cmp
insl
pop
push
mov
cmp
mov
sub
cmp
pop
out
dec
xchg
push
ja
jp
ds
rolb
into
sub
in
push
add
negb
lods
imulb
inc
cmp
rcrb
loope
mov
xor
or
xor
jo
jae
hlt
add
dec
int3
pop
jnp,pt
mov
lahf
xor
test
lock
bound
ds
repnz
into
pop
das
inc
jb
push
cs
adc
rol
pop
add
dec
outsl
pop
stos
mov
xor
cld
movsb
movsl
imul
loop
mov
dec
push
jmp
in
xchg
mov
dec
mov
xchg
mov
icebp
xlat
push
pop
mov
pop
xlat
fists
sub
adc
das
test
and
orl
mov
mov
lret
dec
mov
push
mov
out
int3
imul
and
cld
enter
imul
loope
loop
icebp
dec
lret
xor
xchg
add
and
movsb
xchg
mov
sub
test
mov
inc
leave
lds
sarl
addr16
aad
fwait
sbb
xor
add
cmpsb
sbb
int
sahf
and
das
pushf
bswap
cs
adc
xor
jbe
jns
jne
mov
loopne
jmp
mull
xor
les
pop
rcll
inc
dec
test
fmull
xchg
mov
push
add
aad
data16
xorps
sbb
mov
sbb
mov
addl
fstpl
jo
cmp
es
call
outsl
and
jl
fidivrs
cli
je
in
in
ret
dec
out
clc
or
xchg
fiaddl
sub
cs
test
adc
ja
jno
popl
in
out
das
dec
sbb
dec
mov
push
or
les
sub
jge
xor
loopne
or
push
sbb
test
mov
xor
mov
sbb
mov
cmc
mov
adc
lret
inc
jmp
cmp
dec
sti
and
jmp
incb
cmp
and
sub
fcomi
pop
imul
imul
insl
push
dec
imul
inc
es
popa
cmp
fisubrs
push
xor
mov
xor
xchg
dec
jnp
insl
push
popa
out
sti
pop
jno
xor
ds
cltd
fisubrl
aaa
inc
mov
mov
push
clc
sbb
cld
icebp
mov
xor
mov
test
pop
pushf
dec
pop
xchg
scas
fisubrl
sbb
mov
shlb
shl
jne
xchg
stc
outsb
dec
push
mov
cltd
mov
pop
loop
mov
jns
das
stos
scas
dec
jb
mov
fsubrl
inc
pusha
repnz
loopne
adc
and
shll
push
and
cmpl
icebp
jp
jge
insl
fistpll
mov
sbb
mov
xchg
jl
nop
pop
sub
adc
mov
jecxz
fbstp
inc
and
jle
nop
int3
sbb
inc
fnstenv
adc
and
lock
dec
inc
inc
xchg
std
inc
push
lret
sub
js
es
and
mov
lahf
sbb
xchg
in
ret
enter
mov
jmp
mov
sbb
mov
sti
shll
jmp
shrl
fcomp
jp
call
mov
adc
cmpl
add
push
imul
and
scas
lea
dec
or
push
insb
mov
mov
daa
mov
notb
cld
mov
aas
lods
imul
cmp
mov
int
fs
test
decl
pop
push
leave
xor
out
repnz
mov
and
xor
into
movsl
xchg
push
mov
mov
mull
sahf
mov
lods
add
fwait
push
shll
out
iret
mov
fwait
sti
mov
mov
lea
rcll
insb
and
stos
stc
adc
mov
pop
sbb
ds
pop
scas
xchg
push
imul
adc
out
icebp
xchg
add
andl
aam
movsb
sub
mov
mov
je
outsb
pop
fdiv
lahf
add
divl
mov
stos
orl
sbb
popf
mov
jne
jecxz
sbbl
and
add
sub
pop
xor
xchg
imul
fistpl
hlt
adc
repnz
jg
nop
in
mov
shrl
and
ss
and
inc
lds
jns
fwait
clc
in
cmpsb
dec
mov
sub
jmp
jmp
ss
cmc
loopne
movb
into
xor
repnz
hlt
inc
shlb
aas
stos
mov
fstl
sub
aas
pop
xorb
xchg
mov
cmp
lods
push
aaa
out
push
mov
ficomps
pop
rorb
cmpsl
mov
pop
push
enter
aam
lahf
dec
and
mov
mov
testl
jp
std
xchg
push
push
loop
and
mov
push
lods
pop
pusha
adc
pop
scas
mov
mov
pop
sbb
jmp
adc
push
sbb
scas
and
cmpsl
jae
test
mov
loopne
mov
mov
xchg
sbb
sbb
ret
ret
fnstenv
jb
mov
aaa
lcall
push
mov
or
mov
xor
fcom
rcrl
jg
mov
cmpsl
push
loopne
loopne
int3
mov
int
std
int3
lods
xor
dec
mov
ficoms
les
ucomiss
mul
xor
inc
adc
sti
inc
das
outsl
mov
test
sbb
sbb
mov
sti
mov
sahf
loopne
stos
add
and
cmp
sub
pop
cmp
icebp
cli
sub
or
je
adc
cld
data16
inc
jmp
adc
push
popf
mov
aam
outsb
std
loopne
and
push
sbb
adcl
aam
sub
dec
fwait
pushf
ret
xor
cmp
lahf
pop
inc
sub
inc
sbb
inc
aad
mov
or
xor
jns
ret
es
lahf
xchg
test
aas
cmp
mov
sub
cmpsb
cli
daa
movsl
cwtl
jo
dec
add
mov
jecxz
test
dec
faddl
xor
cli
aam
fwait
cmc
mov
daa
out
mov
outsl
add
xor
mov
sub
scas
jg
fistl
das
hlt
test
cmpl
test
xchg
pop
xchg
jp
mov
or
and
insl
fwait
shll
pop
daa
sbb
fs
inc
rorb
cmp
test
psllq
adc
mov
fs
shrb
js
adc
xchg
mov
xchg
or
sbb
dec
jne
jno
mov
dec
jle
dec
inc
sahf
mov
dec
aad
cwtl
or
push
dec
lds
int
out
or
pop
int3
gs
pop
xor
xchg
rcrb
loopne
add
jno
ljmp
fwait
loop
idivl
hlt
add
ret
gs
inc
in
cmp
sub
cld
leave
xor
push
jnp
addb
test
or
cmp
stos
inc
add
pop
and
loope
scas
stc
imul
mov
and
xchg
mov
stc
xchg
out
test
and
cwtl
xchg
clc
es
incl
scas
xorb
sbb
enter
fisubrs
push
adc
inc
pop
je
orl
adc
aaa
push
push
cmc
movsb
push
inc
jne
es
in
pop
mov
stos
pusha
je
idiv
sub
lahf
mov
inc
xorb
cmp
sbb
popf
movsl
in
icebp
adc
aam
sahf
loopne
out
test
jns
sbb
push
gs
xor
daa
lea
pop
ret
aas
rorl
and
fstl
or
movsb
fidivl
cmp
in
jecxz
addl
into
rcr
bnd
sbb
loopne
and
int
push
xchg
pusha
loope
mov
out
pop
and
xor
cmpsl
or
call
cmp
cmp
add
mov
shlb
and
popa
movsb
push
cmpsb
mov
out
pop
or
cmpsl
push
add
add
hlt
test
movsl
adc
push
inc
scas
nop
xchg
xor
decl
repz
push
mov
xchg
imull
lock
mov
add
pop
jo
inc
mov
les
xor
sub
jg
jp
mov
dec
stos
test
jne
sbb
jo
out
sub
mov
int3
add
push
xchg
cwtl
sbb
in
xor
dec
add
loope
push
imul
test
es
or
sub
mov
adc
jno
mov
mov
dec
lahf
mov
xchg
xchg
inc
outsb
add
jo
movsl
push
mov
mov
cmp
xchg
das
add
sub
arpl
push
sbb
pushl
mov
andb
push
dec
mov
lods
test
pop
stos
lcall
push
push
mov
dec
insl
in
cld
repnz
xchg
idivl
dec
les
shlb
jns
cmp
sub
mov
and
rorl
dec
into
xor
or
mov
cwtl
push
jno
pop
add
mov
cli
xchg
test
nop
stos
pop
jne
mov
das
std
insl
scas
gs
inc
cltd
fwait
into
mov
mov
nop
adc
aas
stos
loope
cmp
icebp
sub
and
and
push
es
sub
test
xchg
movsb
dec
sub
notl
or
pushf
in
adc
cmpsl
mov
shrb
cld
hlt
in
push
and
fucom
push
imul
cmc
lret
and
push
roll
test
push
add
cmc
push
ret
ret
jmp
xchg
stos
pusha
cli
jno
dec
or
fwait
stos
bnd
popa
pop
aas
pop
mov
xchg
gs
mov
les
and
sub
pop
mov
negl
adc
cld
mov
lock
fnstsw
push
shr
push
sti
add
ljmp
mov
movsl
xchg
mov
mov
out
lea
dec
jle
outsb
fildl
adc
stos
mov
pop
sarl
rol
sub
icebp
xor
mov
xor
and
movsl
xchg
adc
cmp
jae
in
or
aas
stos
cltd
icebp
fs
push
stos
movsb
jg
std
int3
lret
xchg
dec
jne
mov
gs
lret
rorb
pop
leave
mov
ljmp
adc
and
mov
cltd
jno
negl
mov
repnz
fstps
jp
xchg
pop
sti
pop
aam
adc
mov
and
lcall
xchg
int3
in
scas
xchg
sub
inc
outsb
pop
xor
mov
nop
cmp
cmp
fcmovne
push
dec
adc
int
inc
xor
or
push
jg
and
popl
xor
adc
add
repz
push
lods
mov
dec
mov
test
mov
shr
xor
mov
fs
std
add
pusha
push
scas
cmp
mov
dec
pushf
sbb
or
lret
mov
test
xor
ds
js
xchg
aas
icebp
cli
and
popa
cmp
cli
hlt
js
imul
cli
pusha
xchg
ss
push
fs
jb
inc
push
mov
sbb
or
add
mov
aam
aas
mov
aad
mov
or
pusha
idivb
sahf
mov
xchg
mov
lds
sti
sahf
cmc
mov
add
cmp
fs
sbb
fsts
ficoms
orb
xchg
jnp
cld
lea
add
push
xor
jp
hlt
xchg
jge
aas
mov
loop
mov
cld
mov
iret
aaa
rol
rclb
bound
cli
icebp
fs
push
xor
aas
bound
add
inc
fidivrl
xor
or
sub
mov
fcmovnb
push
fs
shll
movsb
loopne
pop
cltd
addb
lret
faddp
push
jecxz
xchg
les
mov
call
movsl
inc
fsubrs
mov
mov
mov
aas
sbb
xor
clc
mov
push
outsl
fwait
dec
mov
fsts
idiv
loop
mov
pop
lret
cmp
test
cmp
insl
inc
mov
xchg
scas
repz
out
icebp
sbb
lods
inc
in
int
popl
mov
sbb
mov
imul
gs
ss
mov
mov
outsl
pop
arpl
jecxz
mov
or
loope
jmp
es
add
je
data16
ss
xchg
pop
das
je
mov
jge
mov
pop
mov
sbb
lods
xchg
xor
mov
dec
cld
and
dec
sbb
fsts
mov
jl
shll
and
dec
add
in
add
pop
fistps
repnz
xchg
icebp
jne
inc
mov
jp
in
sub
xchg
push
xor
mov
call
stos
sbb
dec
cli
jg
pop
fistpl
adc
aam
xlat
mov
xor
in
addr16
cli
lret
rcpps
fistpl
inc
xchg
aaa
mov
dec
add
cmc
push
and
jmp
push
out
push
adc
xchg
outsb
mov
mov
std
sbb
push
xchg
cwtl
dec
mov
movsb
add
xchg
xchg
leave
stos
push
xor
ffreep
aas
jno
inc
xchg
imul
mov
or
movsb
push
loop
jo
sub
mov
xchg
clc
dec
inc
cmpsb
imul
jno
xlat
xor
lahf
mov
into
xor
sub
movl
push
fucomi
push
dec
addb
dec
insl
nop
xor
sub
in
xchg
fimull
inc
xlat
rcrb
test
frstor
lea
test
mov
or
cmpsl
cmp
stc
out
sub
jmp
mov
imul
out
sti
adc
loopne
cmp
sbbb
or
add
loope
jns
test
adc
xlat
pop
push
lret
test
mov
cwtl
sete
out
mov
cwtl
aaa
cmp
mov
imul
jge
sahf
add
dec
lea
fwait
jns
in
push
dec
ret
repz
mov
add
mov
pop
inc
mov
sbb
push
sub
cmpb
stos
xor
shrb
and
les
rcrl
xchg
or
std
sbb
icebp
sub
mov
sbb
repz
cld
mov
xrelease
pushf
mov
xor
inc
es
mov
xchg
push
decl
out
test
out
stos
push
div
adc
mov
push
int
jl
cmpsl
mov
dec
aaa
int
jo
imul
aam
clc
dec
add
push
cs
fdivl
in
mov
or
adc
stos
dec
js
ret
ret
scas
mov
orl
loope
mov
inc
add
lds
ljmp
sub
cli
xchg
call
jle
mov
push
out
rcrb
cmpsb
mov
xchg
xchg
push
lods
lahf
xchg
stc
stos
mov
adc
jl
xchg
push
adc
sbb
int
lahf
mov
ss
repnz
jecxz
push
adc
pop
pop
icebp
and
jecxz
xor
pop
loopne
xor
into
mov
sbb
pop
mov
mov
dec
je
lods
jecxz
fwait
test
mulb
push
inc
push
pop
fcoml
add
into
lods
fs
sub
xchg
push
xchg
loope
xor
out
mov
fucomip
fmuls
jp
arpl
and
fcompl
cmpsl
fwait
sbb
outsl
ss
mov
inc
sub
pop
outsb
lcall
jge
fnstsw
scas
jbe
xor
stos
add
bound
pushf
or
movsl
jae
xchg
pop
out
push
adc
rcll
add
out
mov
mov
es
lret
pop
pushf
add
lock
xorl
mov
repnz
push
sub
dec
dec
lret
xchg
cmp
jmp
loop,pn
push
dec
pextrw
cmpsb
rolb
sbb
and
sbb
cmp
cmpsl
push
mov
or
lcallw
jb
mov
icebp
mov
movb
jecxz
sahf
xor
pop
dec
add
push
faddl
jno
jle
cwtl
dec
cmc
lcall
jmp
sub
sub
adc
bound
cmc
rcrb
pushf
out
mov
pushf
push
inc
dec
xchg
inc
jecxz
incl
ret
xor
fdivr
jbe
pop
or
popa
dec
and
leave
daa
mov
das
lret
pmulhw
mov
popf
in
pop
dec
mov
enter
lods
and
add
push
inc
pop
dec
jecxz
or
mov
mov
clc
pop
sub
lea
dec
mov
adc
sub
push
test
jae
jne
aaa
repnz
popf
mov
xchg
dec
or
ss
xor
push
outsl
and
adc
dec
push
jo
pop
shll
cmpsb
bound
mov
mov
sbb
mov
scas
out
and
aam
mov
cmp
popf
fbstp
xchg
xlat
xchg
outsl
fdivl
mov
cmp
js
inc
in
jle
lret
mov
sub
repnz
inc
inc
xor
and
pop
jnp
imul
or
shll
ds
cmp
pushf
adc
mov
push
cmp
push
mov
jp
leave
dec
addr16
inc
out
out
bound
jle
xor
jge
dec
and
in
adc
pop
pushf
add
sbb
ret
adc
jp
add
mov
rcrl
std
repz
pop
mov
stos
in
add
add
daa
sbb
loop
pop
inc
inc
adc
insb
movsl
aad
movsl
add
cmp
lret
sub
jge
fdivl
fsts
enter
jnp
push
sub
and
test
lods
lods
sbb
pusha
fdivs
cld
es
dec
and
jns
push
cli
test
mov
scas
pop
negb
mov
pop
xchg
jecxz
idiv
sub
xchg
xchg
cs
xor
and
mov
pop
mov
fs
adc
scas
push
xor
mov
cwtl
pop
add
mov
sub
xchg
insl
pusha
dec
inc
cmpsl
cmp
loop
out
xchg
and
jle
pop
cmp
sbb
cmpsl
cmp
fcompl
cmp
xchg
sub
gs
imul
jg
and
dec
push
fsubrl
sarl
push
test
push
mov
mov
jmp
roll
mov
inc
jmp
xor
arpl
outsl
cmp
fdiv
pop
push
nop
inc
jns
ds
mov
outsl
adc
xor
jns
push
lock
movsl
loope
out
int3
or
and
sbb
mov
pop
and
repz
test
lock
push
subb
scas
fadd
xor
arpl
mov
in
and
add
sbb
sub
and
sub
add
jns
jg
mov
pop
lea
inc
fnstcw
movsl
pushf
xor
mov
mov
jns
in
pop
xchg
pop
lods
pop
neg
loop
push
xchg
and
cmc
add
sbb
popa
lds
dec
lods
pop
cmpsl
cld
cmp
int
and
in
pop
lcall
add
xchg
fidivrl
jmp
mov
leave
aad
adc
push
test
outsl
stc
in
dec
sub
push
xchg
test
mov
mov
ret
push
sub
dec
stos
cld
jae
in
orl
push
sub
jmp
lds
cmp
and
out
out
fimull
cld
push
lods
dec
andl
push
mov
adc
xor
mov
insl
cmc
in
mov
aaa
es
cmpsl
ja
sti
xor
inc
sub
mov
xchg
shl
imul
hlt
fdivl
les
add
je
sub
nop
xchg
lea
leave
pop
pop
enter
inc
mov
popl
jbe
jb
xor
xchg
test
or
aaa
lahf
int
mov
test
add
add
mov
pop
or
inc
pop
push
cmc
push
inc
lods
rcrb
lahf
sbb
lock
pop
pusha
out
movsb
sub
mov
leave
arpl
sti
fists
mov
out
inc
xor
sub
mov
ja
dec
mov
jmp
xorb
or
enter
mov
pop
mov
adc
icebp
outsl
mov
adc
or
jne
xchg
push
ss
fstpt
test
repnz
or
insb
mov
mov
in
stos
enter
rorb
lods
clc
test
mov
xchg
and
fwait
clc
pop
xchg
xor
cmp
enter
cmp
adc
in
push
mov
or
outsb
jbe
jmp
pop
mov
and
mov
or
imul
jp
add
rcl
push
xor
push
aaa
dec
aam
lock
xlat
jecxz
popa
into
test
or
pop
mov
imul
cmpb
pusha
dec
push
or
inc
add
rolb
movl
dec
iret
out
in
pop
out
push
sarl
cmp
call
outsl
cmp
test
mov
out
fiaddl
rcrb
dec
cld
lcall
in
aaa
push
push
or
daa
cmpsl
push
negb
mov
mov
repnz
ret
xor
dec
insb
push
add
mov
int3
push
push
xchg
dec
movsb
jle
dec
mov
movsb
fs
jns
cli
mov
mov
adc
pop
push
divb
int3
add
in
push
js
push
iret
movsl
orb
cs
add
or
in
jno
das
rcrl
scas
mov
sahf
clc
mov
mov
xor
ret
aaa
push
leave
ja
push
xor
xchg
dec
addr16
fwait
mov
mov
or
sar
mov
mov
lcall
push
mov
cmpsl
dec
lds
and
out
add
inc
pop
stos
imul
repnz
cmpsb
pop
push
das
or
gs
ucomiss
sub
inc
and
and
cmp
decl
jo
push
mov
xchg
inc
and
sbb
ss
cmp
push
ret
ljmp
push
dec
inc
out
jae
loopne
cmc
push
outsb
fldl
xchg
push
push
loopne
push
aaa
ljmp
sub
cwtl
xor
dec
outsb
fwait
and
sbb
cli
xor
gs
jmp
dec
cmp
and
scas
adc
sarl
pop
cmp
or
cmpsb
push
xchg
inc
jg
pop
adc
imul
cmp
sub
mov
test
pop
jne
adc
arpl
jg
jne
pop
dec
mov
movsb
cmpl
inc
stc
dec
and
jg
rcl
adc
xor
ds
loope
mov
xchg
dec
adc
fstpl
add
mov
push
mov
mov
mov
sub
addr16
test
loopne
and
or
mov
jp
mov
icebp
pop
dec
cmp
pop
fchs
xchg
roll
in
or
or
in
push
sub
ret
push
stc
jae
sahf
aas
fdivrl
mov
push
xor
push
mov
lods
add
enter
fwait
iret
mov
sahf
repnz
and
repnz
lods
or
mov
jmp
out
xor
jo
test
dec
sti
sbb
sub
out
subb
cmpsb
scas
ret
fisttps
adc
push
roll
mov
faddp
loop
lock
lahf
push
jno
popw
xchg
out
xchg
pop
push
das
in
loop
sbb
jle
fisubrl
test
orb
popf
dec
sub
pop
loopne
fidivrl
fidivs
pop
cs
dec
loop
and
imul
or
adc
out
or
add
and
jl
clc
add
std
adc
lcall
repnz
imull
notb
lea
xchg
out
mov
push
scas
mov
lds
addr16
mov
repnz
je
lcall
in
pop
jns
dec
mov
clc
outsl
xor
fdivrs
movsl
or
adc
jb
add
out
pusha
jno
fbld
aad
xchg
sub
inc
fdivs
fbld
jmp
sbb
xchg
and
hlt
cmp
pop
lods
icebp
push
mov
andb
mov
loop
or
sub
orb
les
xchg
cwtl
mov
and
dec
loop
fnstsw
pop
xchg
je
add
icebp
xor
mov
movb
int
out
pop
push
aam
adc
cmc
adc
xchg
push
loope
xor
test
js
neg
jle
xor
and
sbb
push
iret
jmp
sbb
in
cli
imulb
clc
pop
push
xor
aad
mov
mov
repz
and
hlt
js,pn
adc
push
cmp
or
mov
dec
cmc
sub
femms
cmpsl
jmp
adc
jg
lods
mov
loope
dec
xchg
pop
test
cmp
jle
lea
aas
and
jmp
xchg
adcl
pop
pop
aas
pusha
shll
inc
xchg
roll
test
adc
insl
jle
aad
cmp
pop
xchg
fildl
xor
rorb
mull
mov
inc
imul
sbb
movsl
iret
inc
sbb
add
xchg
cwtl
data16
nop
mov
inc
xor
jmp
xor
fldl
adc
sub
fimuls
mov
dec
rol
jmp
sub
xor
in
movl
sub
scas
imul
dec
cld
pop
out
popf
call
xchg
repnz
inc
xchg
in
pop
mov
push
inc
jno
mov
add
push
into
xchg
sub
jecxz
jge
fdivrl
jne
sub
ja
mov
aad
arpl
ds
lds
mov
movsl
pop
mov
mov
xlat
lea
add
pusha
cld
shlb
hlt
add
jle
adc
ss
out
jne
inc
das
fldenv
jne
pop
mov
pop
sbb
shlb
pop
mov
xor
lahf
lea
lcall
imul
jb
adc
adc
pop
imul
add
jnp
js
test
scas
adc
mov
adc
mov
xor
xchg
push
xor
lahf
push
adc
int3
dec
pop
mov
std
lock
add
pop
add
jno
loope
sbb
clc
lods
pop
or
clc
fsub
cmp
sbb
or
out
lret
out
jmp
sub
iret
cltd
rcll
pop
aaa
xchg
mov
ror
xor
add
je
push
inc
pusha
or
mov
add
rolb
mov
repnz
xor
jmp
add
sbb
mov
mov
xchg
mov
imul
das
subb
fidivrl
loopne
shr
push
pop
scas
test
inc
movsb
mov
rorl
mov
rcl
jae
aad
push
jge
jge
hlt
ja
mov
xor
xlat
cmp
je
cld
enter
enter
clc
and
cwtl
cltd
xchg
popa
in
and
mov
hlt
stos
les
aaa
sub
mov
lret
xchg
imul
xor
mov
mov
jle
lret
out
pop
mov
xchg
xor
jnp
aas
add
inc
push
js
xchg
loopne
call
in
movsb
into
cwtl
or
push
adc
dec
test
js
and
repz
pop
mov
xchg
aas
jg
test
push
add
inc
test
cmp
lea
inc
lahf
inc
inc
call
stos
test
aam
call
xchg
dec
sub
jl
jge
addr16
inc
aam
lods
xor
pop
xorl
inc
cmp
sbb
stos
ss
arpl
and
or
js
dec
sub
mov
fdivl
js
imul
mov
or
call
xor
mov
shlb
js,pt
or
std
sbb
jns
jo
test
mov
dec
pop
imul
mov
mov
lret
xor
push
out
xchg
push
pop
int
fsubrs
outsl
jecxz
jmp
repnz
ret
daa
sahf
test
aas
dec
pop
and
shl
mov
and
sub
add
sti
mov
loopne
pop
popf
popa
xchg
roll
hlt
iret
sbb
call
aas
jo
mov
mov
mov
aas
cld
mov
repz
mov
stos
adc
xchg
test
pop
test
arpl
push
cli
push
pop
cld
mov
cmp
pop
push
rcr
push
mov
gs
test
fists
stos
add
sub
aas
rorb
push
adc
pop
idivb
movsb
mov
call
and
mov
je
mov
pop
xor
push
sbb
call
pop
mov
and
je
sti
push
mov
icebp
sahf
lock
jmp
in
push
testl
push
rcll
loopne
lcall
xchg
and
or
pop
xor
iret
xor
in
pop
add
fs
and
cmp
arpl
adc
rcll
dec
dec
mov
push
test
dec
out
push
pop
add
fstpt
push
jns
iret
fcmovnbe
cmp
inc
clc
adc
leave
les
lods
fnstsw
dec
push
sbb
fisttpl
cwtl
pop
xchg
jae
data16
rolb
xor
jno
cs
cmp
jmp
lea
jmp
es
testb
cs
dec
icebp
bound
jl
sbb
cmp
test
mov
ret
hlt
lahf
cmp
sub
sub
mov
adc
jge
gs
stos
mov
rclb
inc
in
leave
push
rcrb
stc
cmp
stos
mov
ja
mov
adc
adcb
hlt
into
movsl
mov
pop
add
std
push
or
cld
cwtl
jo
mov
push
pop
mov
movsl
push
inc
xchg
jmp
in
sbb
sbb
popa
mov
adc
notb
pop
mov
sbb
adc
imul
shll
mov
into
outsl
js
mov
cld
mov
inc
xlat
inc
mov
inc
int3
mov
inc
add
push
mov
sub
pop
shr
ret
lea
sub
and
lds
mov
inc
fildl
test
loop
mov
mov
pushf
dec
cwtl
xor
jbe
xor
addr16
sub
push
sbb
adc
scas
and
pop
int3
mov
cmp
sbb
lods
dec
lods
mov
imul
ficoml
xor
push
cwtl
sti
mov
and
sbb
movsb
orb
jnp
js
popl
inc
fcos
in
mov
add
add
int
in
mov
nop
inc
jmp
or
mov
and
stos
cwtl
xchg
sub
cs
push
sub
aaa
add
repz
loopne
dec
xchg
jecxz
mov
clc
sbb
sbb
jb
test
xchg
xor
iret
scas
je
mov
dec
jne
jnp
popa
rol
adc
cs
scas
cli
mov
pusha
mov
mov
lods
mov
daa
dec
xor
loope
inc
xchg
add
jb
mov
mov
xchg
sub
mov
and
js
ljmp
add
les
sub
movsb
ds
mov
jne
xchg
or
bound
mov
add
fistpll
cmp
cltd
push
mov
xchg
or
adc
pop
movsl
or
mov
ret
repnz
sub
xchg
es
pop
imul
jae
jl
push
dec
outsl
cwtl
mov
mov
mov
adc
ret
loop
ja
push
sub
mov
pop
mov
mov
mov
cltd
xchg
rcll
rcrw
scas
xchg
lods
lcall
in
inc
inc
jl
cmpsb
shlb
add
int
xchg
inc
add
adc
movsl
jno
in
jp
push
or
popf
popa
push
lahf
mov
xchg
fisubs
imul
dec
enter
add
pop
lret
inc
ds
mov
jbe
add
mov
push
into
pop
and
pop
mov
xchg
int
jnp
out
sbb
mov
js
pop
ljmp
xchg
pop
psubusw
sbb
jle
mov
shll
pop
shrl
mov
push
stos
jne,pn
sbb
movl
and
lret
cs
stos
dec
stos
lahf
mov
test
imul
push
push
aaa
jg
xor
lea
fmulp
stos
cli
out
leave
aam
push
rol
js
shll
sub
or
jmp
out
adc
iret
pop
push
jno
ja
cmp
cmp
push
adc
imul
or
int
mov
in
in
jecxz
fsubrp
in
les
lods
cmp
pop
aas
sbb
mov
mov
stc
mov
xor
test
test
inc
jl
fiaddl
add
sbb
xchg
int3
xchg
loop
cltd
xor
aas
jmp
mov
daa
pop
mov
dec
mov
pop
scas
ss
mov
outsb
mov
dec
inc
xchg
xchg
sbb
aaa
fstps
icebp
jmp
sub
adc
stos
scas
ret
adc
fmull
rclb
aad
pop
push
sarl
add
sub
je
std
cld
sbb
cmp
jae
mov
test
loope
or
les
outsb
add
xchg
add
dec
xchg
cmpsl
inc
icebp
mov
jnp
jno
mov
inc
dec
mov
imul
cmp
lret
xor
fcoml
xorb
xchg
addr16
adcl
subl
pop
push
shlb
cmp
jne
and
jnp
or
inc
aas
lods
aas
std
mov
stos
enter
dec
repnz
test
add
jmp
arpl
cmpsb
call
add
into
add
pop
nop
popa
pop
lock
mov
cmp
addr16
jge
add
ss
mov
mov
jns
loope
adc
call
lods
mov
popf
cmc
loope
and
jno
test
or
rcr
pop
scas
sub
jle
xchg
xchg
mov
test
outsl
adc
cmp
cli
imul
add
aas
xchg
xchg
add
cmpsb
lcall
jb
and
xchg
pop
loopne
test
aaa
push
call
pop
xchg
cmp
mov
stos
fsubrp
jae
add
add
adc
rorb
ret
je
jns
xor
sub
cs
shlb
xchg
add
add
push
lds
push
sahf
cs
or
inc
cs
ret
loop
fistpll
aas
sbb
lods
in
dec
dec
sar
xchg
es
mov
jle
cmp
mov
loopne
jno
mov
inc
daa
push
push
clc
roll
test
int
pop
in
cs
leave
adc
xor
xchg
jp
mov
jns
fistpll
adc
aam
and
xchg
or
jne
or
pop
pop
push
jbe
pop
popf
ss
in
sub
test
lahf
lret
lret
mov
mov
pop
mov
dec
cld
test
cmc
push
dec
jmp
lds
stos
aad
out
dec
lock
inc
xor
xor
fwait
push
inc
adc
aad
out
pushf
xchg
fs
mov
fmuls
sahf
lret
mov
or
movsw
cmp
bound
ficoml
adc
xorl
ficomps
xchg
or
arpl
mov
inc
xor
ret
les
cmp
mov
inc
jb
and
shlb
pop
mov
mov
sbb
gs
outsb
popa
repz
cmp
js
cld
sarl
jmp
jl
or
sub
mov
sarl
popa
shll
out
ret
cmp
pushf
xchg
add
aas
jl
rcrl
pop
imul
adc
push
and
mov
insl
mov
sub
in
dec
int
push
fisttpl
testb
jne
fnsave
lods
push
push
pop
adc
cmp
rorl
mov
lret
stc
into
fnstcw
lret
cmp
adc
or
cmp
ret
xchg
test
cmpsl
je
or
in
jnp
std
xor
jp
movb
int3
shll
insl
add
lahf
mov
ja
add
cmp
icebp
xchg
pusha
int3
jl
adc
test
and
cmpsl
int
jb
add
jecxz
pop
shrb
cmpsl
test
cwtl
mov
fwait
arpl
and
jge
frstor
dec
or
push
movsl
lahf
push
mov
lock
iret
xor
push
sbb
std
ret
sarb
imul
inc
mov
fwait
lods
dec
adc
inc
xlat
mov
inc
scas
stos
mov
cld
repnz
dec
sbb
cmp
out
sub
push
shrl
add
xchg
mov
pop
jg
xchg
dec
mov
or
jmp
mov
mov
ds
cmc
ds
sbb
fld
or
std
stc
mov
or
cmp
repz
xor
dec
inc
pushf
lret
push
jnp
in
movsl
xor
mov
add
sbb
dec
mov
push
fs
int3
adc
sbb
shrb
and
pop
adc
mov
or
ret
xchg
jge
sbb
mov
test
sub
fldenv
mov
push
iret
cmc
pop
pop
cli
popf
or
ss
ds
es
rol
and
sub
push
push
sbb
add
push
inc
xchg
adc
and
arpl
inc
iret
int
adc
stos
ret
les
out
push
add
daa
and
add
dec
add
test
repnz
in
imul
test
xor
pop
shl
repz
jne
lock
mov
mov
cmp
cmc
into
lea
add
orl
or
inc
add
cmp
in
test
insb
xchg
push
repnz
mov
loopne
loopne
adc
and
cmp
adc
adc
xor
fwait
repz
mov
jmp
and
pop
xor
roll
sbb
nop
int
jne
hlt
out
nop
dec
dec
test
rcrl
and
clts
xchg
addb
sub
bound
add
lods
jbe
mov
arpl
xorl
jbe
test
ja
ret
and
xchg
add
inc
sti
cwtl
dec
popl
iret
and
cmp
inc
outsb
mov
inc
push
iret
das
shrb
add
push
mov
add
push
pop
popf
push
js
cmp
mov
cmpsb
lret
sub
dec
adc
das
outsl
add
insb
mov
adc
fadds
pop
imul
xor
xchg
lea
mov
mov
xor
das
cltd
pop
addr16
lea
mov
jl
mov
js
popa
push
sub
out
test
or
sti
xor
rcr
or
popa
sahf
mov
out
aas
int3
xchg
imul
jns
mov
out
mov
rol
mov
int3
cmpsl
cwtl
jo
dec
jl
lock
leave
and
pop
pop
aad
je
shrl
mov
outsl
adc
jno
or
ret
pop
andb
aaa
addr16
das
stos
dec
rol
jo
xlat
mov
sub
stc
cld
repz
xchg
mov
mov
aam
jmp
aad
sbb
popa
in
push
fwait
iret
cmp
test
mov
ret
insb
dec
pop
popf
mov
jne
cltd
nopl
scas
and
jg
ljmp
xor
and
stc
pop
int
aad
mov
rcr
movsl
mov
inc
cs
dec
and
adc
mov
cmpsl
dec
aaa
andb
jo
dec
iret
imul
fsub
xor
mov
jo
pop
ss
scas
cltd
cmc
dec
add
inc
adc
mov
in
ret
mov
lret
mov
mulb
iret
aam
lods
mov
cmpl
add
jecxz
cli
lock
and
push
ss
daa
imul
add
fs
jg
xor
cmp
push
test
and
mov
aam
aas
mov
int3
mov
loop
pop
mov
dec
push
dec
push
jmp
iret
xchg
push
es
mov
imul
push
call
push
cld
data16
push
es
fwait
or
dec
mov
mov
or
adc
add
inc
adc
inc
add
ljmp
push
mov
cli
repnz
jle
fistpll
and
dec
sti
inc
adc
cmp
xchg
adc
dec
pop
out
insb
imul
das
cmp
xchg
nop
push
sub
fcmovnbe
mov
mov
adc
stos
popf
and
push
xchg
adc
cwtl
push
cmpsb
mov
xlat
sbb
jo
cld
mov
mov
es
lods
lcall
into
sbb
dec
mov
outsb
mov
jne
popf
xchg
sbbb
inc
movsb
ret
cmpsb
loope
or
into
test
insb
sarb
mov
push
mov
push
clc
dec
jne
xchg
xor
pop
mov
daa
ret
mov
mov
iret
xor
divb
fistl
rcrl
cmp
ljmp
pop
fcoms
sahf
add
addl
mov
push
loop
lahf
cmp
xor
and
call
dec
out
test
inc
ja
notb
mov
sub
jne
out
jb
or
pop
sub
mov
in
les
xor
sbb
daa
mov
subb
sahf
mov
xchg
adc
and
mov
push
lret
pop
xchg
cmp
add
mov
movsl
dec
sbb
inc
call
xchg
sub
test
popf
mov
and
xchg
sahf
aas
add
es
cli
js
test
xchg
cld
in
jnp
pop
leave
shlb
mov
mov
jle
cltd
add
pop
mov
fsts
or
test
dec
outsb
mov
adc
popa
sbb
jo
mov
std
push
fwait
imull
adc
movsb
or
push
or
push
pop
lret
xor
shll
mov
mov
lahf
adc
lods
je
mov
addl
jp
pop
scas
mov
adc
mov
cld
pop
clc
jno
inc
ficoml
push
mov
xlat
xlat
cmp
shlb
mov
inc
arpl
int3
cli
je
imul
dec
pop
and
jge
cld
in
enter
push
jae
sbb
test
cld
fsubrs
fnstsw
cmc
lahf
or
xor
jb
lock
xor
mov
push
xchg
cmp
aaa
loopne
pop
jb
stos
lret
test
mov
ret
push
jp
mov
hlt
push
je
cmp
dec
sbbb
popf
clc
dec
or
pop
outsl
pop
shrl
jns
mov
pop
xchg
inc
xor
inc
pop
jnp
sub
xorb
xor
mov
dec
xchg
cld
ljmp
pushf
inc
inc
push
sbb
arpl
aas
push
xor
or
xchg
leave
mov
jecxz
mov
hlt
cli
mov
or
jae
pop
inc
jg
shrb
add
and
cmp
fdivrs
jbe
jbe
mov
dec
cmp
xor
pop
mov
cld
or
sub
cmc
inc
lods
or
mov
pop
push
jmp
fidivrl
fimull
jno
push
xor
test
sbb
out
adcl
dec
lea
sahf
mov
and
imul
pop
scas
sub
mov
sub
imul
sub
addr16
sub
sub
das
sbb
and
fbstp
repz
or
addb
test
jnp
les
mov
cmpsl
xor
mov
sub
jne
xor
mov
ret
or
and
stc
xorl
pop
and
push
mov
xor
xchg
insb
mov
mov
jl
cmp
mov
and
mov
rol
pop
adc
pushf
adc
das
fisubl
push
insb
mov
xlat
push
push
fyl2xp1
push
cmp
call
fimull
push
loop
cld
xchg
cmp
jl
mov
iret
push
outsl
add
push
repnz
mov
pushl
imul
mov
das
test
jmp
ret
pop
inc
mov
xor
mov
out
inc
outsl
rcrl
stos
lahf
dec
sbb
cmp
leave
mov
cltd
and
cli
push
add
add
sub
jecxz
or
das
int3
repnz
fimull
pop
jae
push
sbb
sahf
push
sbb
sub
push
jge
sub
push
clc
push
pop
scas
dec
cmp
sbb
arpl
add
sti
mov
shl
out
mov
lret
stos
mov
out
sub
mov
pusha
pop
lds
negb
add
add
pop
pop
js
ljmp
mov
repz
xchg
dec
push
cmpsl
inc
mov
iret
adc
neg
lretw
test
rcrl
inc
stos
cld
sbb
mov
leave
mov
sbb
push
cmp
in
add
dec
mov
insb
scas
cmpsl
adc
arpl
push
out
int3
push
and
rcl
mov
scas
xchg
xlat
jg
jns
xchg
dec
lret
dec
test
mov
xor
lds
pop
rolb
mov
jno
sbb
fucom
test
repz
fstps
popa
push
test
mov
dec
in
push
out
ljmp
fxch
addr16
imul
dec
sbb
lods
mov
pop
outsl
inc
loop
mov
push
mov
clc
repz
dec
pop
sbb
rorl
aam
sub
loopne
mov
xchg
adc
cwtl
pushf
movsb
fcompl
jae
ljmp
rcl
sbbb
dec
loopne
punpcklbw
mov
fldcw
xlat
arpl
pop
inc
sub
sti
pushf
loope
dec
jle
xchg
fstpt
dec
push
lock
aad
add
mov
fidivrs
cmp
cmp
jbe
sbb
push
fwait
std
fstps
lock
fistpll
fadds
std
jo
mov
sbb
scas
mov
loop
shll
in
shrb
jns
loopne
adc
sub
lret
rclb
add
out
xchg
lahf
cmp
sahf
mov
push
in
shl
fwait
cmpsl
sub
dec
adc
pop
dec
fldl
inc
lret
xor
inc
loopne
sarb
inc
mov
mov
ret
sbb
jae
in
push
and
cmpsl
mov
inc
jno
mov
mov
push
loop
addl
mov
and
push
push
pop
psubw
sub
fiaddl
sarl
or
cmpsb
add
lret
dec
lods
andl
lea
cmp
fisubl
hlt
jle
mov
mov
push
push
lds
sahf
mov
mov
imul
xchg
xor
cmp
mov
sti
adc
and
lods
or
sbb
arpl
jge
lahf
fnsave
sbb
ret
push
push
dec
in
adc
push
mov
repz
shll
subb
adc
das
xor
in
mov
mov
das
cwtl
in
xchg
sbb
mov
pushf
fwait
ror
icebp
sbbb
rcll
aaa
andl
cmp
cmp
outsl
aaa
sub
or
push
mov
cmp
test
inc
cmp
push
mov
call
shrl
sub
fstpt
adc
movsb
orb
leave
cwtl
adc
sub
sbb
mov
cmp
fdivrs
clc
mov
or
add
sub
mov
adc
das
subb
js
xor
add
dec
dec
pop
adc
es
xchg
xor
stc
aam
push
jnp
call
lock
arpl
xor
mov
add
and
and
scas
nop
dec
dec
into
call
and
and
fs
mov
dec
repz
repnz
scas
dec
jno
dec
ja
sbb
int3
addr16
sahf
add
pop
jb
sbb
push
cmp
mov
dec
add
aad
std
iret
clc
pop
mov
lcall
imul
out
fsubrl
lret
jb
sbb
fldcw
js
adc
jmp
leave
pop
mov
test
cmpsb
hlt
push
mov
mov
mov
lret
xor
xchg
xchg
js
in
and
xchg
cmc
movsb
enter
cmp
and
sbb
test
fcompl
ds
inc
test
sbb
xor
push
inc
leave
dec
push
cmpsb
dec
mov
jp
cs
sbb
popf
lods
or
dec
lret
pop
xchg
insb
cmp
add
xchg
pop
cmc
mov
aam
push
call
lret
adc
mov
mov
push
mov
loop
cmp
loopne
xor
lcall
mov
mov
and
inc
pop
cmc
fsubrs
jno
add
jg
pop
mov
pop
xchg
fcoml
mov
fnstcw
hlt
cmp
clc
mov
add
sbb
pop
add
out
cltd
pusha
xchg
sub
xchg
jae
mov
or
movsb
aaa
jge
lods
cmp
mov
and
test
xchg
mov
cmpl
sbb
enter
movsl
sahf
cwtl
adc
sbb
pushf
int
out
push
push
nop
jmp
inc
fwait
rcll
outsb
sub
ss
subb
repnz
stos
fidivrl
fisttpl
mov
mov
pop
ja
inc
push
inc
imul
push
dec
dec
clc
fsubl
out
lea
fcoms
and
mov
dec
adc
rcrl
jp
cmp
add
push
mov
cwtl
gs
push
cmpsb
mov
bound
cmp
cmp
inc
lret
outsb
mov
dec
movsb
mov
inc
xchg
test
adc
cs
bound
aaa
xchg
fdivs
xchg
pop
pop
inc
cmc
ljmp
push
mov
jae
mov
jg
movb
arpl
mov
sbb
xchg
push
xor
cmp
xchg
pop
xlat
adc
arpl
loop
mov
sub
jns
xor
lea
push
mov
sbb
jae
insl
dec
fildll
pop
or
add
and
pop
cwtl
outsb
and
or
inc
cltd
xchg
mov
jbe
shrb
sahf
arpl
jg
test
inc
mov
insl
int3
test
mov
sub
insl
dec
jp
dec
sbb
leave
shl
xor
hlt
xlat
rolb
ss
mov
xor
inc
cmp
mov
dec
rorl
mov
ss
xor
cmp
iret
xor
cltd
inc
test
fs
add
sbb
movsb
jnp
sub
in
xor
xchg
aam
aas
mulb
shr
test
leave
or
mov
fisubrl
into
cltd
es
test
sub
cmp
stos
fcmovu
sahf
push
or
push
lea
pop
loopne
sub
push
cli
ret
dec
aam
mov
sbb
or
aam
sbb
push
int
int
cmpsl
and
popa
jge
pop
lods
sarb
test
jne
sbb
loop
insl
push
fstl
push
xchg
push
mov
out
fsubs
adc
dec
test
or
sub
bound
lock
and
push
icebp
jecxz
dec
xor
xor
jmp
mov
sub
jp
shll
and
jb
in
jo
adc
subl
jb
rorb
xor
adc
pop
stos
ss
inc
mov
aas
jb
nop
scas
mov
das
jle
cltd
mov
xor
popa
fdivs
xchg
sti
or
mov
or
jnp
fucomi
repnz
mov
mov
stc
sbb
jle
xchg
pop
pop
dec
mov
cmp
loopne
cmp
pop
or
cmp
fcom
insl
jo
fidivs
pop
shlb
push
out
sbb
cmc
out
push
clc
mov
or
out
rcrl
cmp
movsl
xorl
push
pusha
push
outsl
dec
test
jae
das
cmp
xor
mov
and
fcomps
lock
call
sbb
sub
inc
jb
adc
jnp
ja
sub
inc
fmuls
popa
and
outsb
jecxz
std
movaps
mov
mov
push
or
add
pop
or
cmp
mov
adc
jg
fbld
add
or
mov
ds
sbbb
test
jmp
mov
leave
push
or
jnp
mov
mov
shll
test
iret
mov
in
jge
ja
cltd
icebp
push
in
loop
fcomps
ja
mov
sub
imul
mov
push
or
adc
dec
xchg
inc
ret
cld
out
pop
cwtl
xchg
xor
mov
loop
fisttpl
xor
lret
pop
ret
mov
insl
dec
enter
ja
addl
cmp
out
ja
jg
mov
aaa
mov
orl
fdivl
push
in
push
and
std
xchg
js
les
notb
pop
stc
je
incl
aaa
mov
push
icebp
nop
adc
scas
pop
dec
pop
out
cli
push
je
and
addr16
push
rolb
inc
popf
mov
dec
pop
jp
loop
icebp
add
cmp
dec
clc
dec
sarl
cmp
lret
xor
ficoms
jecxz
mov
sbb
rcll
xchg
data16
fimuls
and
xchg
fistl
jl
fildll
shll
out
outsl
icebp
inc
pusha
movsb
and
cmp
or
mov
faddl
or
insb
iret
stos
and
mov
mov
mov
dec
jmp
nop
sub
inc
mov
pop
out
out
or
dec
dec
loope
mov
mov
ficomps
out
sub
sbb
mov
cltd
mov
sahf
push
jl
jecxz
in
pop
mov
pop
dec
fistl
or
mov
mov
mov
movmskps
xor
or
or
pop
push
mov
mov
xor
xor
testb
test
les
pop
lret
jmp
lcall
push
ss
inc
jb
jecxz
push
sub
test
aas
lea
jmp
jmp
mov
test
jl
push
mov
clc
fadds
adc
cmpsl
fldenv
push
and
out
push
dec
lds
lahf
xor
sbb
mov
test
aad
gs
movsb
sbb
popf
sub
jmp
inc
shlb
dec
inc
mov
negl
ret
jae
pop
push
in
pusha
rep
xor
outsb
gs
and
aad
sub
dec
and
fst
mov
add
scas
jo
inc
push
imul
iret
insb
adc
cmp
in
push
sub
daa
lahf
push
cmc
clc
push
jno
adc
pop
mov
mov
andb
jl
mov
cmpsl
dec
mov
jne
iret
adc
lea
mov
js
cli
mov
leave
or
data16
sub
and
push
inc
imul
mov
sub
aad
push
cmp
xor
jbe
add
sarb
push
jmp
mov
jno
dec
fists
inc
push
xchg
cmpsl
or
sub
lds
xchg
cltd
rcll
xchg
dec
dec
pop
daa
movsl
add
mov
popf
mov
jp
mov
xchg
dec
push
pop
scas
push
rcl
adc
popa
daa
loop
inc
jns
mov
cmp
cltd
sbb
jp
movsb
loope
out
mov
lods
adc
bound
nop
xchg
mov
adc
stos
stc
jp
sub
cli
nop
pop
dec
aaa
setp
jmp
adcl
adc
pop
in
jecxz
push
sarl
inc
push
clc
aad
div
stc
xor
or
popf
inc
stc
sbb
sub
repz
mov
push
icebp
mov
xor
fsub
mov
lcall
hlt
in
test
cmp
push
push
jae
leave
pop
xchg
insb
xchg
lds
jp
xor
stos
sbb
xor
out
mov
cld
xchg
inc
ja
pushw
call
jo
popl
in
cmc
xchg
out
mov
pusha
cmp
cli
cmp
push
mov
popa
int
mov
in
ljmp
or
call
in
sbb
push
imul
addr16
mov
or
in
jne
sti
or
mov
pushf
mov
aaa
or
jmp
and
mov
push
out
pop
and
or
popf
aaa
mov
imul
dec
xchg
stos
arpl
mov
or
cli
mov
imul
mov
pusha
adc
mov
stos
pop
imul
not
jl
push
pop
mov
jle
xor
inc
inc
jl
jp
jg
popa
test
xor
stc
dec
nop
mov
cli
outsb
inc
ljmp
jg
dec
push
add
dec
cmp
jmp
xchg
lods
dec
sub
icebp
icebp
push
sti
mov
sub
aad
in
push
cld
addl
sbb
add
aad
test
movsb
xchg
push
xchg
movsl
cmp
ret
mov
in
mov
dec
mov
push
jae
pop
js
int
jo
and
cwtl
out
out
push
leave
es
call
xor
pop
clc
stos
mov
pop
aaa
or
push
cmp
and
inc
popa
mov
fidivrl
mov
sbb
pop
adc
mov
scas
outsb
sbb
mov
mov
adc
fstpl
pop
jle
xor
jne
add
into
cmc
fisubrs
pop
push
ja
lret
mov
mov
loop
sub
hlt
pop
sti
popa
sbb
mov
mov
jae
sbb
xchg
test
out
jnp
out
pop
stc
xchg
dec
loope
add
add
jo
inc
sub
int
cmp
add
mov
outsb
fldl
pop
sub
sbb
sarb
xor
jo
cwtl
mov
xlat
pop
rcl
mov
lahf
adc
loop
shl
in
test
sub
push
or
scas
jmp
mov
dec
testb
dec
fisttpl
leave
jbe
in
cmp
icebp
test
mov
addps
sbb
cmp
rclb
and
adc
jbe
das
jmp
and
adc
and
xor
and
inc
int3
and
insl
dec
mov
sbb
adc
stos
pop
xor
imul
jo
mov
rcrl
inc
ja
lds
mov
cmp
jge
sbb
and
inc
lret
and
popf
mov
loope
or
inc
out
pop
push
cmovae
or
xchg
lret
fs
fwait
enter
sti
imul
in
jl
adc
mov
xchg
leave
ror
xor
or
int3
scas
daa
insb
cs
test
into
inc
xchg
dec
test
mov
pop
jp
jno
sub
insb
aas
and
lock
jae
shl
jp
in
or
mov
dec
adc
jae
push
std
stos
mov
enter
cmpsl
in
sbb
ss
sbbb
mov
in
xchg
lock
add
cltd
sub
mov
xchg
xor
in
out
sub
out
test
fwait
out
movsb
mov
loope
ljmp
inc
test
mov
js
pop
mov
inc
pushf
leave
ja
sub
cmp
hlt
aas
push
std
xor
mov
nop
scas
xor
idivl
pop
cmpsl
push
sbb
fistps
loop
out
push
mov
inc
js
sbb
inc
fsubrl
out
jo
dec
xchg
inc
and
bnd
pop
pop
dec
lahf
xor
data16
mov
pop
xchg
sub
shrb
cld
cmp
outsl
out
xor
xchg
pushl
imul
gs
icebp
gs
enter
mov
mov
push
icebp
mov
pop
add
jmp
icebp
adc
addb
adc
fistl
add
xchg
test
push
inc
push
incl
jge
into
pop
rclb
mov
lds
sub
push
repz
xlat
divl
cld
test
jecxz
arpl
or
or
jne
and
divb
cli
std
sbb
sub
push
in
stos
adc
push
ret
or
xor
adc
in
pop
sub
popa
add
in
iret
roll
adc
scas
adc
ja
sbb
test
dec
or
sub
xchg
vpaddsb
cmp
cmp
sbb
int
mov
adc
enter
ret
push
mov
xchg
jmp
push
fwait
adc
imul
xchg
dec
lcall
add
roll
xor
push
dec
movups
xchg
sbb
lret
xor
pop
pop
das
cs
xor
xor
fs
in
lods
cmp
mov
push
dec
push
shll
out
add
fimuls
in
cmpsl
pop
jg
inc
out
push
push
movsl
add
mov
out
pop
out
push
test
insb
adc
mov
mov
cmp
push
push
push
pop
lea
push
jo
inc
or
scas
test
jmp
nop
std
and
ret
ds
mov
orl
dec
sub
add
rorl
xor
add
or
xchg
aad
std
outsl
xor
cs
or
mov
mov
mov
outsl
sti
int
fwait
adc
loopne
mov
js
sbb
xchg
push
xchg
loopne
stos
xor
lds
dec
push
outsb
mov
inc
jo
sbb
pop
bound
mov
and
into
movsb
dec
dec
or
jno
lahf
arpl
push
xchg
in
lret
repz
mov
xchg
push
int3
arpl
xchg
lock
xor
sub
rcrb
stc
and
lcall
mov
jnp
xchg
scas
pop
lods
pop
imul
loope
es
lods
pop
mov
pushf
scas
cmp
mov
jmp
das
ret
mov
pop
mov
jnp
jo
jg
cli
les
pusha
jecxz
jp
stc
pusha
pop
xor
sbb
mov
xchg
add
sub
add
mov
jge
xchg
sbb
add
addr16
pushf
call
jp
ret
mov
je
sarl
loope
xor
xchg
cld
adc
aad
in
xchg
dec
or
das
jge
std
lock
add
arpl
xchg
repnz
sbb
cmp
push
cmp
lcall
dec
adc
jnp
sahf
loopne
and
out
out
sub
cmp
jg
bound
dec
dec
ficomps
pop
jmp
pop
leave
cmp
xchg
dec
lea
bound
sarl
lea
movsl
popa
pop
pusha
aad
jecxz
xlat
loope
aaa
push
dec
pop
imul
cmpl
cmp
sahf
icebp
fwait
cmp
in
jno
xor
jp
outsb
out
mov
sub
sub
out
xchg
sbb
dec
movsb
xchg
pop
outsb
xor
repz
ja
xchg
arpl
mov
dec
dec
xor
fidivrs
scas
sbbl
gs
mov
jmp
les
pop
arpl
popf
pop
out
cmp
inc
popa
movb
dec
fistpl
or
dec
xchg
nop
sbb
lret
xchg
or
adc
jl
xor
je
repnz
mov
lret
sbb
or
xor
stos
std
mov
out
rcl
aas
and
idiv
lds
lret
bound
inc
add
pop
out
pop
xor
pop
inc
xchg
sub
fwait
mov
call
jl
shll
mov
add
das
pop
jns
movsb
pop
xchg
jb
or
out
push
fiaddl
dec
mov
fiadds
fadds
data16
mov
arpl
mov
jns
fdiv
mov
ds
pusha
adc
shl
pop
xchg
rorl
push
xchg
movsb
fisubl
sbb
insb
fcompl
ret
fucom
movsl
fxch
push
pop
mov
mov
push
adc
dec
dec
out
in
mov
adc
cld
xchg
ds
pop
or
jno
xor
popf
mov
fs
mov
jge
mov
inc
loop
ret
sbb
push
loop
stos
add
ds
cmp
jecxz
xchg
scas
imul
or
int
dec
daa
lret
dec
push
xchg
call
mov
add
repnz
popa
dec
sbb
mov
cmp
pop
or
faddl
ret
xchg
xor
pop
or
push
add
xor
and
loopne
sub
push
mov
out
call
jns
xor
xor
inc
data16
xlat
loope
sbb
sbb
mov
cmpsb
ror
andl
sbb
pop
mov
sub
out
mov
adc
xchg
push
xor
mov
pop
andb
push
aaa
clc
fiadds
ret
push
out
mov
jg
lods
xchg
adc
ss
int3
pop
in
lock
sub
mov
or
dec
jmp
ficoms
xchg
inc
mov
das
or
rcl
imul
aam
jg
data16
cmc
inc
lcall
out
mov
je
inc
mov
or
cmpsl
addr16
cltd
sbb
mul
cld
pop
sbb
pop
andl
cmpsl
and
shrl
mov
lock
xor
dec
mov
test
adc
adc
loop
pop
inc
push
mov
nop
fisttpl
jle
and
and
cwtl
mov
test
sbb
insl
or
xchg
push
fdivr
cmp
movsb
xchg
stc
pop
dec
sti
sti
and
dec
pop
inc
inc
out
test
mov
cmp
cmp
orb
sub
out
push
jno
daa
xchg
or
leave
sub
lods
cmp
in
leave
push
orb
pop
pop
out
hlt
pop
pop
push
inc
test
shlb
nop
jns
pop
jb
xchg
pop
cmc
jle
insb
mov
aad
cmp
mov
xchg
push
mov
ja
cltd
push
int3
aam
daa
mov
sahf
sbb
sbb
or
mov
out
sub
int3
test
or
std
add
cmc
mov
xlat
xchg
ds
js
adc
lods
jg
push
dec
fwait
mov
lret
out
cld
cmp
inc
jge
mov
data16
or
push
ret
adc
jp
movsb
repnz
push
js
pusha
and
mov
sbb
sbb
mull
call
outsl
dec
sti
outsl
stos
jmp
mov
cmp
xor
or
sbb
gs
test
inc
adc
jbe
leave
sbbl
iret
jle
or
lock
hlt
aam
insb
xor
jecxz
fisttps
insl
xchg
adc
or
xor
xor
mov
xchg
cmpsb
mov
cmpsl
jns
movsb
add
push
mov
daa
adc
movsl
mov
imul
fisttpll
jo
xchg
mov
jb
rcr
mov
int3
lret
pop
sbb
sahf
mov
mov
lahf
or
jb
sbb
out
das
mov
rcrl
addr16
lds
call
in
int3
mov
mov
in
leave
mov
mov
cwtl
out
cmpsl
popa
sbb
ds
dec
mov
pop
add
sbb
pop
fnsave
adc
cmp
push
add
gs
into
add
subb
sbb
cwtl
test
mov
mov
or
pop
loop
xor
stos
mov
xor
pop
jle
aaa
cmp
jl
inc
push
push
and
jns
or
cli
loope
repz
jne
and
lret
jne
lahf
fldpi
push
sub
pusha
pop
or
hlt
jmp
clc
test
dec
fiadds
or
daa
nop
stos
add
mov
ror
ljmp
jmp
fmuls
idivb
repnz
sub
mov
andb
dec
ffreep
inc
or
jo
cmp
shl
frstor
adc
push
dec
mov
jnp
mov
push
scas
dec
add
loop
clc
dec
push
js
lcall
pop
popf
out
xchg
idiv
mov
xchg
lcall
loopne
add
movsl
jo
mov
jg
loop
sbb
lock
mov
cmpsb
test
mov
jp
cmpsb
fs
mov
inc
mov
pop
es
decb
mov
dec
loope
lret
leave
cmpsb
inc
hlt
sbb
adc
mov
cmpsl
pop
and
push
test
xor
lahf
sub
push
aam
push
inc
push
das
icebp
jno
pop
push
lods
out
inc
sbb
ret
loop
shll
cmp
rol
push
getsec
test
dec
int
mov
je
xor
frndint
push
and
inc
cmp
in
cmp
push
hlt
and
aas
mov
ss
stc
inc
insb
and
mov
fldcw
push
cmpsl
xlat
pop
inc
push
mov
cli
les
idivb
or
adc
push
pop
push
ds
movsl
sbb
xchg
adc
and
fcmovnbe
mov
fadds
stos
test
fchs
rol
pop
aaa
jp
push
rolb
cli
aas
push
test
ljmp
and
pop
and
jno
jnp
call
xchg
mov
pop
pop
cmpsl
push
pop
add
loopne
call
lock
jg
cld
lock
push
or
pop
out
push
test
loop
fld
xchg
jge
cmpsl
daa
in
cwtl
or
mov
loopne
cmc
fdivrl
loope
cwtl
outsb
mov
add
jge
test
inc
into
adc
sbb
push
adc
adc
dec
dec
push
sub
jnp
je
xchg
fwait
mov
je
jl
cmp
push
and
fldcw
sti
cmp
sahf
movsb
aas
mov
loope
cltd
enter
cmp
sbb
pop
mov
sub
jnp
sub
ss
les
data16
mov
push
jecxz
inc
inc
mov
mov
test
decb
push
mov
mov
ret
xor
mov
jo
int
push
andb
mov
stos
dec
data16
cmp
outsb
test
aas
inc
fnstsw
icebp
add
jmp
stos
pop
fsubs
add
mov
ja
roll
mov
mov
or
and
pop
lds
sahf
dec
or
ret
xchg
sub
dec
sbb
xchg
or
pop
dec
out
pop
xor
sahf
out
adc
fnsave
stc
mov
frndint
add
pop
mov
xor
fbld
and
pop
adc
mov
pusha
and
jnp
push
negb
or
cmp
fcoml
das
std
mov
sbb
lret
iret
add
in
nop
cmpsb
push
inc
xor
int
or
ret
jnp
mov
push
mov
cli
rorb
inc
lock
xchg
push
lret
movsl
mov
sbb
stos
sbbb
data16
ja
adc
sbb
sub
mov
std
dec
adc
mov
cmp
jge
es
lock
pop
repnz
pop
cmpsb
push
out
sarl
adc
add
push
push
mov
and
sbb
in
pop
push
cmp
mov
loope
fwait
and
jg
loope
popf
mov
cmp
movaps
pop
mov
int3
out
inc
add
mov
loop
pusha
mov
lds
movsl
xchg
je
cmp
rclb
or
push
sub
xchg
imul
push
popf
imul
jmp
mov
add
sahf
pop
ds
pop
and
adc
es
das
mov
jno
cmp
or
cmp
jle
cs
mov
fisubs
and
pop
or
mov
in
cs
dec
subb
add
mov
imul
inc
in
mov
xchg
lret
enter
mov
icebp
test
jg
in
and
mov
or
xor
xor
dec
rcll
jb
ja
sub
out
and
xor
mov
stos
push
mov
cs
mov
in
push
xor
xor
arpl
sbb
sar
add
fmuls
scas
mov
pop
xchg
fcmovnb
in
cmpl
fdivrl
push
repnz
dec
cmp
sbb
inc
mov
inc
test
lea
shlb
xor
into
pop
leave
and
in
cs
dec
and
mov
enter
jo
mov
pop
inc
outsl
xor
inc
mov
and
mov
out
inc
mov
iret
lods
int3
cmp
mov
cmp
mov
adc
sub
jl
xchg
xchg
mov
shll
repnz
add
pop
paddb
push
push
xor
jbe,pn
popf
icebp
inc
push
std
iret
fnstsw
cmp
push
mov
jecxz
sbb
mov
jo
iret
adcb
fcmovnbe
movsb
shll
pop
xchg
mov
stc
aaa
sub
add
std
fwait
in
xchg
xor
mov
loopne
dec
nop
adc
add
mov
push
sarl
neg
mov
xchg
xchg
mov
mov
mov
out
lret
pusha
je
and
stc
xor
imul
fildll
mov
xor
out
push
inc
jge
jno
and
jle
cld
sbb
int3
aaa
sbb
neg
fwait
das
pop
inc
or
orb
shll
pop
orl
nop
adc
mov
jle
leave
xor
fbstp
cmp
lcall
fdivr
imul
push
xchg
jne
xor
pop
fistpl
out
mov
cli
fs
daa
adc
repz
mov
scas
jne
adc
xchg
jo
cmp
das
movsb
inc
adc
sbb
push
fbstp
push
enter
mov
pop
movsb
scas
dec
mov
or
cwtl
mov
pop
loop
mov
hlt
lret
cmp
xor
std
notl
push
pop
sub
push
iret
sub
lea
nop
test
jno
pusha
sbb
lahf
dec
mov
js
popf
call
hlt
incb
fdivs
icebp
dec
mov
insl
push
mov
mov
xchg
mov
aas
mov
ljmp
and
out
test
mov
sub
jg
jns
xchg
mov
or
std
xchg
insl
add
jge
pop
inc
mov
fsubl
sti
jl
pop
mov
rclb
cltd
lcall
jo
mov
insb
jne
lahf
lock
fimuls
insl
cs
cmpsl
lahf
sub
sub
repnz
xchg
pop
xor
fwait
push
out
pop
in
sub
cmp
imull
push
bound
pop
cmp
sub
jo
sub
cwtl
pop
popa
js
rcll
aaa
xchg
test
divl
jmp
adc
inc
mov
pushf
inc
insl
xor
fst
scas
push
cmp
dec
ss
aam
ja
adcl
movsb
cli
pop
addr16
test
emms
mov
push
stc
outsl
mov
loope
sbb
mov
in
in
data16
daa
cmpsb
jo
rcll
fwait
jnp
inc
cmc
stos
andb
lret
int3
out
mov
sbb
and
dec
popa
xor
stos
icebp
sub
not
jmp
dec
decl
repnz
jmp
pop
adc
data16
into
push
pushf
rol
xor
jmp
adc
bound
mov
xor
ljmp
pushw
out
out
fwait
jo
mov
push
ret
cmp
or
cwtl
jp
cmpsl
sbb
xchg
in
jne
mov
lock
bound
cmpsb
pop
inc
addr16
lret
es
adc
push
pop
inc
gs
repnz
stos
js
test
sub
mov
movsb
out
sub
or
cmpsl
and
jo
cmpsl
or
sbb
negl
mov
dec
out
jae
adc
nop
flds
imul
outsb
inc
adc
dec
imul
clc
inc
daa
or
jns
jno
sub
es
lea
xchg
std
and
dec
enter
dec
pop
dec
cmp
xor
pop
in
fsubl
lret
or
push
imull
mov
movsb
stc
push
or
das
lock
inc
enter
mov
popf
sbb
or
sbb
repnz
int3
les
lock
rorl
mov
fimull
jl
icebp
sub
in
pushf
repnz
push
and
jl
xchg
pop
mov
mov
mov
lahf
lea
add
cmp
call
push
jmp
subl
fildl
mov
out
mov
jns
inc
dec
and
mov
push
addr16
cmpsb
and
push
bound
xorl
jl
push
pop
js
ljmp
xor
outsb
rcr
and
and
test
data16
xchg
outsb
movsb
sti
dec
mov
adc
sub
dec
imull
cmp
add
outsl
dec
faddl
loop
inc
inc
push
mov
mov
in
orl
xchg
and
inc
add
or
loope
pop
add
ficoms
popa
add
fdiv
dec
cmp
test
test
pop
aas
inc
push
test
stos
inc
push
aaa
dec
jmp
pop
decb
in
in
imul
lock
ret
cld
icebp
mov
cmpsb
pavgw
mov
cmp
add
sub
jecxz
imul
ds
outsl
xchg
ret
adc
incb
mov
push
and
mov
cmovge
les
cld
call
add
es
jmp
pop
jle
inc
mov
cmpsl
rol
jbe
push
adc
inc
test
cmp
cmp
in
xchg
cmp
fldt
imul
fimuls
xor
fdivr
jle
adc
cli
ja
cmc
dec
mov
aam
sbb
stos
es
jecxz
cmpb
inc
ret
je
push
aam
fisubs
push
into
jae
scas
add
xchg
fcmovne
cmc
mov
jb
push
sbb
daa
jno
loope
push
out
mov
jge
call
mov
pop
xchg
fwait
xorb
xlat
dec
inc
push
lock
lret
pusha
push
sub
adc
imul
mov
pushl
ret
adc
ss
pop
loop
or
sbb
idivl
pop
fisubrs
mov
in
inc
jo
enter
add
pop
and
add
pop
rclb
xorb
outsl
aas
movsb
loop
shlb
mov
cmp
mov
sub
xchg
rcl
push
push
int
dec
mov
sbb
std
shlb
divl
mov
scas
scas
ss
clc
in
mov
sub
fs
imul
stos
gs
jae
shl
cmp
cmp
es
jmp
jge
dec
cmp
les
hlt
in
adc
adc
dec
push
std
mov
mov
or
xor
cmc
fistpl
or
xor
push
ja
push
test
mov
int
stos
or
dec
fwait
jne
mov
out
jge
jecxz
cmpsl
andb
inc
pop
sbb
pop
sbb
and
inc
add
jnp
mov
inc
pusha
lret
mov
iret
popa
lods
cmp
cs
fcoms
js
mov
ja
in
pusha
pop
insl
jmp
or
fsts
imul
fldl
mov
pop
dec
in
mov
inc
stos
je
push
repz
or
push
lds
jge
cmp
dec
and
and
fists
mov
xchg
pop
sbb
push
call
das
in
and
mov
aas
push
mov
and
mov
out
lret
cmp
ljmp
pop
mov
dec
mov
call
popf
xor
pop
outsb
scas
add
xchg
xchg
movsl
pop
dec
mov
push
add
lds
movsl
ret
mov
mov
stos
mov
and
in
mov
mov
ficomps
sbb
jns
loope
sub
setp
adc
xchg
xchg
call
pop
xchg
pop
mov
in
scas
jns
insb
or
daa
jmp
sbb
dec
cltd
mov
inc
dec
outsb
adc
pavgb
jge
sbb
sbb
clc
in
mov
pusha
outsl
loope
in
scas
das
mov
leave
leave
push
scas
pop
fdivr
popa
in
loope
cmpsb
repnz
push
ja
cmp
or
xchg
add
sub
pushf
cmp
mov
out
xchg
lds
ret
mov
pop
or
inc
mov
mov
pop
inc
sahf
push
stc
cs
mov
push
std
mov
mov
inc
and
add
pop
and
push
pop
mov
js
imul
mov
push
jo
push
or
sbb
cld
add
ret
les
adcl
jg
dec
jo
jge
enter
inc
jle
push
repz
pop
std
popa
jp
leave
mov
sbb
mov
cmp
or
arpl
icebp
jnp
je
mov
inc
stos
xchg
cld
or
mov
cmpsb
enter
ja
call
aad
push
mov
pop
pop
insb
pop
inc
icebp
out
cmp
jp
sbb
pop
das
test
mov
pop
or
lahf
cmp
xchg
ret
addr16
scas
test
daa
arpl
loope
xchg
xor
mov
mov
jae
mov
rcl
xor
pop
adc
movsb
xchg
negb
or
push
xlat
xchg
pop
divb
push
mov
cwtl
aad
imul
rorb
shlb
mov
ret
mov
hlt
add
xlat
cmpsl
shrb
inc
pop
addr16
outsl
xorb
scas
into
fldl
outsl
repnz
stos
adc
pop
inc
xor
insl
dec
pop
push
mov
in
jmp
inc
pop
and
sti
xor
dec
or
shr
imull
lods
cmc
sub
sbb
xchg
pushf
or
repz
mov
or
inc
push
cmpsb
loopne
push
mov
sbb
popf
lahf
push
lea
xchg
jo
mov
pop
xor
xor
or
jle
jno
pop
jg
push
loope
outsb
push
sub
cmc
mov
adc
jle
pop
dec
cmpsb
inc
pop
les
into
testb
cmp
test
mov
cmpsl
xor
add
sub
push
adc
test
mov
mov
xor
jne
fcomps
inc
loop
inc
dec
test
jno
push
dec
mov
jae
and
cmp
movsl
mov
das
fists
push
xor
cmp
fldcw
aad
out
roll
dec
push
or
pop
icebp
sti
jns
xchg
movsl
loopne
xor
fstpt
push
faddp
mov
dec
pop
xchg
mov
in
dec
jns
mov
lock
test
inc
xchg
stos
rcrb
sub
inc
nop
lds
sub
xor
cmp
addl
sbb
fnstsw
fnstcw
push
mov
jge
push
lret
mov
lods
sbb
xlat
sti
jo
add
inc
fcomip
mov
scas
push
and
idivb
cli
add
mov
xchg
mov
pop
push
inc
bound
enter
sbb
cmc
push
cmp
xor
dec
and
cli
adc
push
push
outsl
iret
test
or
lods
mov
mov
mov
mov
dec
xor
sbb
mov
xor
cmpsl
xor
sahf
stos
rcr
cmp
mov
and
in
jmp
out
add
rcrl
jp
outsb
xor
push
js
jecxz
inc
cmp
mov
test
insl
dec
jge
pop
js
jo
fsubl
jnp
xchg
lret
cmc
xchg
mov
add
push
mov
xor
or
pop
iret
shll
mov
test
pop
sub
int
into
out
mov
sub
sbb
pop
cmp
fdivs
dec
lahf
xor
dec
setne
add
outsl
mov
mov
inc
lahf
aam
jo
lea
or
aas
mov
mov
xchg
in
cld
sbb
insl
pop
rcl
insb
add
es
mov
xor
testb
xchg
mov
mov
mov
xor
pop
outsl
xor
push
and
xchg
lret
lret
test
jecxz
mov
mov
dec
dec
pop
loop
ja
clc
jno
pop
testb
incl
icebp
mov
inc
mov
adc
mov
or
jno
jae
adc
xor
stc
ficomps
insb
push
loope
sub
ret
add
fisubs
pusha
pop
gs
mov
and
or
jno
xor
testl
mov
stc
lcall
push
or
lds
insl
add
addr16
aas
sbb
in
mov
mov
xor
mov
sub
mov
in
jne
jo
cmp
xchg
sti
jmp
dec
je
sar
nop
mov
sbb
lea
sbb
ret
leave
popa
sbb
pop
call
lret
cmp
aas
push
enter
jns
imul
dec
fcmovnbe
sarb
dec
fisubs
cmp
mov
xchg
adc
insb
pop
xchg
stc
mov
movsb
aam
mov
scas
faddp
lahf
negl
fdivs
insb
cltd
cltd
pop
dec
jecxz
rorl
inc
mov
shrl
xchg
loope
aam
test
or
jg
push
repz
int
out
aad
dec
shll
std
lods
faddl
hlt
mov
pop
lret
stos
xor
sub
push
mov
sbb
adc
and
out
into
xor
or
aas
test
jne
stos
fisttpl
jbe
icebp
icebp
mov
shr
fcmovb
cltd
jne
test
rcrl
in
addr16
mov
push
sti
int
loop
mov
xchg
cmc
mov
mov
sbb
inc
push
pop
mov
js
mov
sub
xorb
stos
mov
dec
cmp
int3
push
dec
repz
xor
cmpsb
mov
inc
subb
sbb
mov
aaa
nop
notl
enter
ljmp
mov
popa
js
rol
inc
repz
and
fldenv
ss
clc
loopne
cmpsb
mov
loope
leave
rol
dec
sbb
popa
repnz
mov
adc
xor
ss
aad
jb
adc
ljmp
xchg
xor
lcall
ret
rolb
mov
lds
mov
mov
sub
mov
pusha
pop
femms
push
lea
lcall
pusha
loope
fildl
sub
xchg
fildll
inc
pop
push
int3
out
icebp
adc
popa
aam
push
push
mov
ret
nop
xor
in
pop
popf
lods
jmp
xorb
sarb
leave
mov
js
lods
dec
fisubs
push
mov
push
out
clc
pop
movsb
pop
fists
movsb
lods
jecxz
scas
push
add
hlt
xor
aas
xchg
jg
push
out
cmp
pop
sub
pop
les
xlat
push
cmpb
bound
sub
jns
mov
inc
ja
mov
cmp
rclb
arpl
lcall
cmp
sahf
mov
pop
gs
sbb
mov
inc
andl
ljmp
xor
call
or
pop
dec
mov
mov
xor
pusha
das
popa
cmp
test
xorb
sub
add
sbb
ret
pop
mov
out
mov
loopne
ret
dec
xchg
push
or
cwtl
ficompl
cmpsl
jle
in
mov
loope
in
xchg
push
sbb
or
sets
movsb
xlat
adc
int3
daa
test
or
jae
into
icebp
mov
push
xchg
xchg
nop
test
shll
jl
mov
or
or
pop
push
mov
or
cmpsb
jmp
cltd
rclb
xchg
aam
pop
cmc
xor
icebp
repz
insl
sbb
or
jne
lret
mov
rorb
fisttps
fdivrs
imul
mov
xor
or
lcall
fnstenv
gs
decb
arpl
dec
add
cmpsb
mov
lret
xchg
cltd
lods
fcomip
dec
mov
jb
out
andl
or
fwait
test
leave
mov
dec
push
push
xor
iret
stos
pushf
mov
pop
pop
not
shrl
mov
scas
lea
inc
loopne
movsl
aas
cmp
or
adc
jecxz
cmp
mov
mov
fstpt
nop
cmp
sbb
pop
lods
add
pop
pushf
loope
mov
jmp
je
in
imul
and
mov
aam
mov
cmp
test
pop
or
pop
mov
or
jmp
mov
js
in
ljmp
jge
inc
in
or
scas
je
mov
jno
test
xchg
mov
cltd
nop
lds
std
jbe
insb
and
pushf
js
push
fwait
push
scas
or
insb
mov
dec
cmp
mov
out
adc
dec
jle
call
std
inc
movsl
xor
jecxz
xchg
lock
insl
movsl
loope
scas
xchg
scas
pop
sahf
mov
shrl
mov
fs
mov
mov
cmp
mov
stos
xchg
fbstp
bound
xor
es
sahf
xchg
in
mov
mov
mov
jmp
aaa
cmp
mov
mov
jle
int3
mov
push
push
pop
pop
int
mov
xchg
sub
adc
out
mov
in
int
aas
fmuls
icebp
sub
ffree
repz
dec
loopne
insb
push
je
adc
adc
fs
sub
inc
movsl
ret
ja
xchg
jle
add
push
outsl
pop
sub
shrb
dec
rclb
dec
push
mov
xchg
fdiv
mov
cs
daa
xchg
dec
mov
repnz
movsb
ja
jg
dec
sub
leave
aas
imul
mov
ds
inc
pop
xchg
push
cmp
xchg
mov
fdivr
pop
mov
sar
inc
das
mov
sarl
dec
or
aad
jg
jp
stc
mov
into
mov
push
mov
inc
xchg
les
fldenv
rorl
xchg
sub
xor
cmp
orl
add
xor
fnsave
stc
push
jns
clc
dec
jnp
add
sahf
inc
pusha
stos
inc
push
hlt
cs
jl
xchg
rorb
pop
movsb
pop
jle
enter
lock
popa
and
out
aad
jbe
and
xor
xor
mov
add
fwait
test
mov
and
xchg
pushf
push
inc
or
mov
aaa
or
dec
jb
mov
sbb
sub
mov
add
call
add
hlt
dec
leave
lahf
dec
mov
or
add
adc
adc
dec
movsb
lret
outsb
or
stc
jle
jbe
pop
inc
mov
mov
adc
pop
mov
cmp
cmpsb
add
sbb
or
imul
leave
sbb
add
js
in
out
hlt
push
push
adc
inc
rcr
test
pop
fcomip
lea
mov
arpl
ret
dec
dec
or
mov
pop
add
xor
dec
js
pop
repz
in
push
leave
ja
and
cmpsl
lods
cmpsb
jmp
mov
mov
sarb
sbb
cmc
mov
test
adc
add
xchg
push
movsb
aaa
sbb
jno
push
repnz
mov
shr
adc
das
cmp
or
aas
mov
push
cmp
rorb
pop
sub
fwait
or
lods
imul
or
add
scas
outsl
jo
mov
mov
aaa
pop
and
sbb
aad
iret
cmp
test
and
out
jnp
int3
inc
aad
inc
add
push
pop
sub
cmp
test
push
sahf
imul
loope
xor
cmpsl
out
cmp
sub
cwtl
xor
addl
sbb
jae
out
loop
jge
and
shl
mov
adc
pop
xchg
mov
fidivs
arpl
and
and
jae
add
mov
outsb
es
js
mov
rcrl
jo
rcrl
test
and
sbb
dec
inc
pop
mov
inc
push
jne
jno
and
inc
mov
add
dec
cld
pop
movsl
adc
jb
aaa
inc
mov
mov
pop
jge
in
fildll
jae
fwait
jl
jle
cmp
std
xor
mov
insl
push
xchg
mov
arpl
and
jmp
fcompl
xorb
push
jmp
mov
out
adc
inc
lret
xlat
xchg
jnp
iret
push
jg
and
xchg
fwait
pop
stos
lea
ss
popa
lods
idiv
jl
je
fsubrs
fimull
pop
jl
mov
xchg
push
aad
jle
fnstsw
out
daa
insl
mov
lea
gs
rcrl
dec
jg
insl
cmc
popf
mov
les
movl
fwait
adc
mov
sbb
dec
or
mov
pushf
pop
or
stos
popa
in
sub
iret
inc
and
nop
xor
mov
ret
push
shrb
and
push
test
std
pop
sbb
hlt
sub
jbe
sub
in
and
pusha
push
andl
jno
popa
push
jo
jbe
cltd
test
xchg
add
lahf
jp
hlt
sub
mov
in
push
sbb
sbb
and
loopne
push
shrl
add
mov
test
adc
cwtl
insl
inc
add
lret
xchg
mov
roll
adc
int
lock
jbe
fs
xchg
loope
cmc
xchg
fadd
adc
fcomps
push
sub
das
xchg
les
imul
or
andb
add
push
imul
pushf
mov
ds
and
fisttpll
int
push
movsb
lret
mov
fildl
add
into
sub
and
dec
lahf
hlt
lods
pop
scas
out
mov
mov
and
mov
les
add
arpl
stc
rorb
in
lahf
fstpl
mov
mov
sub
lock
jmp
pop
imul
add
rcll
int
or
enter
pop
clc
movsb
repz
and
in
mov
and
mov
and
xor
cltd
mov
cld
mov
decb
cmp
rcll
inc
mov
ljmp
mov
aaa
xchg
in
imul
scas
ret
fisttpl
shrl
or
lcall
cs
andl
push
xor
sbb
addr16
std
xchg
and
xchg
xchg
dec
out
es
cmpb
xlat
mov
pop
xchg
cli
cmpsl
dec
sub
ret
lods
pop
push
pop
nop
mov
in
pop
addl
lahf
add
mov
mov
and
adc
ss
push
add
inc
mov
adc
in
or
cld
test
lahf
pop
mov
add
repnz
leave
in
add
xchg
push
pop
add
push
xchg
xor
dec
aaa
idivb
cmp
dec
cmpsl
cmpb
push
ret
lahf
test
mov
jns
mov
inc
mov
test
cmp
add
push
jmp
out
adc
repz
inc
dec
dec
adc
insb
jbe
aas
and
adc
sub
pop
test
mov
mov
std
or
fcompl
lret
fwait
aam
test
leave
arpl
jne
and
cmp
fidivl
js
and
mov
mov
jle
sub
adc
inc
xor
je
bound
or
ss
xor
pop
stc
adc
pop
cmp
mov
mov
or
rclb
outsb
xchg
and
or
mov
add
push
loopne
ficoml
pop
and
shll
dec
xor
pop
jbe
inc
push
sub
jg
xor
sarl
push
sarb
pop
inc
jge
xor
dec
scas
pop
mov
jns
cmp
push
dec
out
ljmp
lea
pop
repnz
push
pop
or
add
pusha
pop
xor
mov
mov
fistpl
call
ret
and
xlat
xor
es
test
out
shl
mov
dec
mov
stos
inc
out
pop
cmpsl
rcll
jno
aam
lret
inc
mov
imul
dec
sbb
les
mov
mov
jbe
cmpsb
sub
ja
push
push
stos
and
xchg
iret
pushf
xchg
mov
add
mov
lret
and
pop
test
cmp
sbb
add
sbb
or
aam
loope
fdivs
shlb
inc
and
add
jns
push
lods
movsb
mov
or
lds
mov
in
mov
inc
jnp
sbb
xchg
out
dec
arpl
test
lods
lock
or
out
insl
outsb
in
xor
inc
cld
adc
bound
inc
jno
mov
jmp
add
xlat
outsl
fildll
movsl
pushf
scas
mov
sub
mov
xchg
insb
adc
push
into
outsb
loope
clc
aaa
mov
push
or
loope
es
inc
lcall
fiaddl
icebp
in
call
dec
popa
add
subl
xor
inc
jmp
add
ret
jo
jno
mov
push
xchg
fcomip
inc
rclb
lcall
or
aas
jg
imul
sbb
pop
mov
lods
cld
js
testb
aam
sbb
cs
pop
ret
mull
mov
sbbb
imul
add
mov
cs
out
ret
xchg
mov
xchg
mov
dec
stc
hlt
or
shrb
adc
or
push
pop
xorb
aas
movsb
add
pop
shlb
push
adc
pop
xchg
xor
repnz
fstpt
imul
test
jecxz
cmp
push
pop
jp
cli
ljmp
xlat
inc
fwait
sahf
in
xchg
inc
negb
leave
sub
jo
add
test
rolb
jp
outsb
mov
or
adc
push
mov
adc
jns
hlt
rcrl
push
popf
push
jmp
cmpsl
jecxz
into
cmp
xor
mov
add
shrl
dec
or
ficoms
inc
mov
arpl
fsubrs
lcall
fists
bound
pop
xor
cmp
mov
aad
xor
rol
orl
dec
cmovle
aaa
cs
mov
shlb
pop
movsb
in
mov
sahf
sbb
loopne
ja
loope
out
sub
daa
push
mov
or
out
mov
orb
movsl
cli
pop
or
jp
sti
ss
mov
and
and
sub
cmp
inc
loop
mov
xorb
dec
stc
pop
adc
adc
mov
mov
sub
mov
inc
popf
inc
push
std
cmp
fwait
adc
push
cmpsl
nop
push
shrl
xor
jecxz
sub
mov
pop
jmp
mov
clc
int3
jo
dec
pop
jns
push
xchg
cmp
cmp
inc
fimuls
cmp
mov
shrl
sub
mov
enter
call
outsb
add
dec
cli
inc
cmp
mov
mov
dec
iret
mov
jo
addr16
dec
push
mov
pop
adc
or
cmp
divb
and
or
inc
fadds
lods
out
nop
jne
fldl
repz
mull
testl
dec
add
icebp
adc
xor
jo
or
das
cmpsl
mov
hlt
jg
inc
adc
adc
xor
cmp
popf
loopne
and
arpl
or
fldenv
xor
ss
cmp
orb
in
jb
mov
dec
in
add
mov
movsl
popa
imul
mov
flds
jecxz
insl
push
lret
fldl
push
ljmp
in
inc
fldcw
leave
enter
pop
cmp
in
jl
jmp
push
scas
pop
outsl
sarb
mov
ljmp
xchg
scas
ss
aas
mov
sub
fisubl
cmp
xor
iret
xchg
adc
mov
pop
and
cmp
arpl
fsubs
dec
nop
das
outsb
cmp
arpl
add
scas
cltd
test
push
jae
mov
loopne
lods
sbb
jo
mov
mov
shr
fistpll
rcr
push
daa
div
leave
mov
aam
gs
mov
push
les
cmpsl
inc
leave
cmp
xchg
mov
mov
xchg
adc
mov
clc
in
mov
das
aas
pop
cmp
jge
lods
jb
mov
mov
sbb
stos
adc
jne
cmp
sahf
repz
popf
wbinvd
push
shrb
test
xor
loopne
jmp
xor
in
jnp
insb
cmp
fldenv
lahf
cli
repz
jmp
js
out
pop
imul
fdivs
jbe
jge
jo
sub
fs
and
orb
rorb
push
mov
aas
lock
mov
add
je
cmpsl
cmp
dec
test
nop
in
andb
cli
pushf
rol
inc
mov
sub
xchg
repnz
cli
ss
jge
or
dec
aam
enter
push
call
dec
push
adc
test
or
movsb
push
pop
mov
sub
pop
inc
adc
lcall
pop
and
call
sub
lds
int
popf
xchg
lock
subb
inc
mov
aaa
sbb
push
ret
cmp
mov
mov
mov
or
iret
push
jbe
leave
cmp
mov
lret
js
cmp
lahf
cmpsb
jo
ds
inc
dec
fsubl
shrl
insl
ds
je
jbe
ret
inc
fs
jo
dec
add
dec
adc
lods
mov
push
mov
or
sbb
pop
push
mov
adc
das
inc
jbe
icebp
and
cmp
ds
sbb
jno
dec
mov
pop
imul
cli
adc
mov
mov
in
in
jge
adc
adc
test
sbb
in
insb
inc
dec
movsb
mov
and
negb
iret
mov
dec
push
xchg
mov
mov
sbb
jmp
das
lds
mov
pop
or
addr16
ds
pop
cmp
add
in
fstl
ja
mov
pop
add
jle
dec
push
mov
stc
adc
cmp
cmp
jns
or
mov
dec
mov
shrb
mov
jmp
xlat
sub
aam
xorl
push
pop
add
fimull
pop
xchg
mov
jl
data16
mov
sarb
test
imul
and
pushf
adc
in
jo
sahf
int
inc
mov
mov
fisttpl
lahf
lods
adc
add
add
mov
jecxz
adc
or
hlt
int
or
sbb
fistpll
pusha
add
cmp
loop
xchg
mov
add
fcompl
xchg
cwtl
mov
incl
adc
adc
dec
mov
jno
mov
mov
jg
ljmp
mov
jl
icebp
jmp
adc
std
inc
xchg
mov
pop
dec
enter
mov
leave
mov
call
cmpsb
push
test
in
xlat
in
and
out
lods
popf
loopne
cmpsb
lods
fs
imul
neg
mov
push
pop
xchg
pop
cmp
xchg
push
lcall
pop
mov
lds
mov
cmc
jae
outsl
xchg
dec
push
dec
lods
sub
jne
adc
xlat
int3
fbstp
mov
mov
push
pop
lock
loop
xchg
xchg
jle
mov
jae
lds
mov
insb
loopne
lea
push
mov
mov
mov
rorb
in
outsl
jo
insb
dec
or
lods
cld
mov
mov
push
mov
daa
ss
and
ja
jne
pop
scas
popa
in
aas
mov
dec
shlb
lret
mov
mov
pusha
out
xchg
loop
xor
out
add
mov
push
jne
repz
lret
push
jnp
shlb
cmpsb
dec
in
in
cltd
xchg
pusha
jp
add
das
mov
int3
add
mov
jbe
mov
mov
cltd
sti
cmp
mov
clc
ficoms
and
or
fnstsw
or
mov
jmp
in
jbe
je
lcall
fs
jbe
roll
shl
mov
in
mov
aam
xchg
mov
fnsave
mov
xchg
mov
in
shlb
sub
insb
fcompl
nop
fwait
rclb
add
or
cmpsl
mov
gs
std
repz
push
fs
mov
aaa
and
cltd
fwait
les
subl
rol
mov
mov
cmp
data16
xchg
sub
cmp
xchg
lahf
idivb
cmpsl
insb
and
mov
mov
dec
incl
cmpsl
dec
xor
adc
push
sbb
repz
sbb
cmp
adc
cmp
addr16
stos
dec
cmp
cmc
dec
cwtl
mov
ret
xor
pop
lea
mov
push
inc
test
xchg
mov
xchg
push
loop
xor
pop
mov
test
rol
push
daa
lea
xchg
shlb
test
pop
shll
imull
sbb
leave
mov
fisubs
fistl
dec
jnp
jp
dec
in
inc
jne
into
pop
xchg
repz
mov
xchg
inc
outsb
mov
push
sub
adc
fsub
jmp
fcomps
lahf
sub
pop
or
push
mov
nop
adc
mov
xchg
ret
pop
pop
cwtl
stos
sbb
pusha
insl
out
xchg
xchg
call
shlb
adc
fsubr
push
out
push
mov
test
push
fstpt
ret
push
rolb
mov
je
sub
es
pop
insb
mov
lds
jg
jp
fsts
push
add
out
mov
rol
or
les
push
pop
nop
xor
mov
ret
mov
mov
add
pop
fildl
outsl
sub
mov
xor
push
aad
push
jmp
lret
add
pop
insb
js
inc
mov
pop
inc
loope
mov
cs
sbb
pop
in
cmc
jns
movsl
xor
lcall
pop
jbe
rcll
cmpsb
movsl
xchg
sub
aas
xor
and
mov
pop
sub
mov
add
add
inc
bnd
orb
pop
aam
jo
in
adc
js
dec
add
sbb
mov
lock
push
xor
mov
lret
jno
shll
inc
rol
mov
jb
sbb
fnsave
cmpsl
push
or
mov
fidivrl
inc
clc
dec
xor
mov
cmc
xor
mov
add
jbe
sahf
ficoms
sub
fwait
out
ds
dec
and
push
test
int3
scas
pushf
or
aad
push
dec
fmul
pop
mov
ret
push
or
in
mov
xchg
sbb
mov
fbld
or
dec
out
aad
dec
addr16
cmp
movsl
test
inc
leave
popa
mov
lock
mov
test
jg
inc
scas
ret
add
aaa
jg
jmp
lods
add
xchg
into
cmpsl
cmp
pushf
pop
fisttpl
sub
pop
mov
aas
or
test
cmp
loop
imul
pmulhw
or
or
orb
and
int
shlb
mov
mov
insb
sub
push
outsl
std
lret
xchg
loop
jns
or
fwait
js
push
jnp
mov
mov
cld
sub
stc
les
outsb
and
adc
push
stos
movsl
pop
scas
push
jl
and
lcall
stos
and
dec
dec
sbb
fwait
sar
xor
bnd
movsl
scas
dec
jmp
xlat
hlt
je
pop
lret
cmp
jae
add
pop
and
mov
lcall
mov
in
mov
ret
lods
sbb
xchg
cmp
jo
add
inc
pop
inc
xchg
jns
in
mov
mov
push
outsb
rcrl
mov
dec
pop
or
loop
jmp
cmp
dec
sahf
pop
xchg
scas
cld
push
enter
inc
es
mov
inc
mov
scas
sub
repnz
hlt
pusha
push
incl
addr16
int
outsb
mov
inc
out
je
jp
dec
int3
inc
negl
sarl
jle
in
test
int
sbb
xchg
clc
add
out
cs
or
pop
sahf
lret
iret
jbe
adc
out
or
ret
lahf
sbb
daa
jle
loop
popf
rcr
or
mov
push
ss
mov
stos
test
cmp
in
jno
mov
mov
and
mov
sub
push
fisubrs
and
sub
xacquire
push
push
scas
dec
popf
out
mov
xlat
inc
sahf
xchg
jnp
mov
loop
cmpsl
xor
cmpsb
mov
mov
mov
gs
aad
jl
bound
ljmp
test
push
test
xlat
int3
stos
jmp
lahf
xchg
push
stc
loop
xchg
jns
dec
xlat
jns
orb
dec
pusha
insb
orb
movsl
dec
dec
adc
or
dec
cwtl
dec
pop
js
jmp
inc
push
sub
and
sbb
addl
inc
repnz
into
outsl
push
inc
adc
inc
decb
ficompl
xchg
sub
or
scas
sbb
divl
jle
cmc
xor
cmc
xchg
fadds
mov
inc
les
mov
repz
jne
sub
pop
out
adcl
xchg
arpl
sahf
imul
lea
adc
jp
in
push
test
fsubp
mov
test
sbb
cmp
daa
adc
push
loope
mov
and
dec
jnp
add
lock
adc
addr16
sti
loop
sahf
jo
stos
filds
inc
in
pusha
test
jbe
rcl
insb
xchg
roll
xchg
shr
cmpsl
push
and
xor
add
ljmp
fcmovne
test
dec
add
rcrl
mov
mov
cmpsl
aam
jle
out
xor
pushf
jge
push
divl
test
or
jle
pusha
data16
sbb
xchg
inc
cmp
xorl
or
hlt
ret
mov
int3
je
jo
inc
stc
xor
mov
jg
das
adc
mov
push
lcall
aaa
aas
aad
stos
in
shll
movsb
sbb
push
mov
in
fisubrl
push
lfs
dec
mov
xlat
in
xchg
in
add
and
pop
mov
into
andb
xor
lret
fwait
mov
and
push
xchg
lds
ds
pop
xor
cs
mov
dec
fdivrp
imull
mov
mov
push
add
mov
out
imul
cmpl
lods
cli
cmp
test
push
jmp
mulb
mov
into
in
cmpsl
mov
mov
sub
dec
aam
sbb
jmp
or
push
add
mov
insb
int
roll
pop
sbb
lret
add
jle
shrb
mov
hlt
pop
or
roll
cmpl
cmp
sarb
cmp
ljmp
rclb
stc
popa
dec
xor
mov
stc
cmp
push
int3
jp
pop
mov
shll
stc
jp
push
adc
outsl
stos
inc
jo
idiv
loope
pop
out
xlat
mov
or
test
cmp
andl
fistpl
or
or
int
cmp
or
jbe
imul
daa
leave
aad
xchg
leave
in
pushf
mov
push
or
shl
cmp
jg
or
dec
stos
xlat
iret
xor
cs
xorb
ret
pusha
enter
push
pop
xchg
push
imulb
jbe
fistps
addr16
dec
and
dec
ljmp
pusha
adc
mov
cmp
fstl
nop
mov
and
mov
repnz
cmp
and
sub
cmpb
rcrb
push
mov
and
mov
out
pop
jmp
and
into
fdivrs
cwtl
in
out
pop
inc
xchg
sbb
jge
pop
mov
pop
test
cmp
negl
push
jns
cmp
repz
push
mov
test
sti
pop
sbb
push
repz
std
lea
mov
aaa
sbbl
mov
pop
pop
sub
sti
pop
pop
test
stc
jne
dec
xor
dec
daa
stc
fmull
pop
rorl
cmp
enter
xlat
in
ja
mov
push
mov
loop
fstl
aas
sahf
jae
imul
insl
cs
hlt
imul
scas
jns
or
xor
mov
jmp
and
adc
sbb
in
movsl
jne
xor
aad
dec
cld
fsubl
sbb
test
or
lea
enter
in
inc
cmpsl
fimuls
mov
xchg
adc
xor
shrl
or
in
add
pop
jns
out
mov
mov
scas
add
push
mov
push
or
xor
rcr
sahf
dec
mov
xor
add
mov
sub
mov
xchg
cmp
jbe
mov
jg
xchg
xchg
cmp
gs
imul
stos
leave
xchg
aas
out
push
daa
jb
in
ja
fstl
fs
movsl
inc
jle
sti
dec
jae
das
int3
mov
pop
push
xchg
pop
push
jl
nop
mov
inc
adc
aam
sub
imul
mov
add
data16
in
push
mov
scas
xchg
sub
inc
les
push
push
jp
int3
jmp
jne
push
cli
mov
aad
scas
call
in
aam
aad
mov
xchg
js
fsts
ret
push
sbb
mov
pop
adcb
lcall
sti
out
cld
lea
out
jae
fsubs
ret
int
jne
sub
dec
mov
hlt
mov
xorb
loope
stos
imulb
and
pop
dec
add
and
inc
ja
mov
cmp
cmp
and
repz
pop
out
sbb
jmp
push
sbb
stos
mov
stos
add
push
push
sbb
popf
test
das
adc
pop
jne
jp
dec
ss
gs
and
sbb
in
cmp
cmp
roll
and
push
mov
js
fadds
xor
pop
jmp
push
daa
cmp
popf
je
add
imul
mov
mov
xor
mov
or
mov
sti
js
stc
inc
push
lahf
jnp
jp
or
iret
sahf
dec
mov
data16
add
pop
mov
push
daa
pop
sub
fidivs
sbb
lods
push
test
ss
jp
lcall
pusha
adc
data16
fnsave
or
xchg
dec
xor
shll
mov
insb
lret
cmpsl
xchg
or
cmp
loopne
scas
and
pop
xchg
js
adc
mov
add
out
mov
mov
jne
pop
sub
mov
push
aad
mov
xor
xlat
pop
out
or
xor
stc
inc
xor
fiadds
imul
jno
movsl
fldt
push
mov
cld
ret
jl
or
scas
push
aas
adc
sbb
add
mov
sbb
push
add
pop
rcll
adc
sbb
adcl
stos
xchg
mov
jno
sbb
imul
adc
sarb
push
shrb
inc
dec
scas
and
test
leave
jnp
pusha
lcall
ljmp
mov
ret
xchg
inc
dec
sub
jae
out
les
push
movsb
daa
scas
pop
ss
mov
pusha
push
xor
inc
ljmp
inc
push
inc
call
addr16
add
push
push
mov
add
ret
xchg
dec
jo
lret
subb
cmp
or
roll
mov
popa
mov
and
mov
or
jbe
out
and
push
xchg
cmpsb
add
addb
insb
icebp
icebp
loopne
inc
cmp
mov
jp
sub
es
dec
mov
call
fs
mov
push
sbb
sbb
shrb
outsl
and
in
je
pop
jns
dec
or
aam
sbb
xchg
push
mov
imul
cmpsb
push
lahf
mov
xor
insb
fs
scas
dec
test
cmc
loop
in
pop
cmp
push
cwtl
shl
outsl
out
popa
outsb
push
addr16
sti
in
inc
inc
inc
mov
cmpsl
dec
adc
ss
add
cltd
insl
inc
pop
clc
out
jnp
push
push
ds
fistl
cmp
repz
loopne
inc
xor
jae
adc
or
add
push
xor
cmpl
sbb
xor
and
xor
mov
stc
fnsave
and
fucomp
arpl
xor
inc
mov
xchg
jp
sbb
shlb
js
cmpsl
xor
and
loop
insb
enter
inc
clc
popa
dec
push
xlat
nop
pop
push
jbe
mov
or
in
lds
mov
or
adc
popa
add
lret
lds
shlb
cmp
fsincos
je
lahf
fs
scas
or
xchg
fs
lods
dec
dec
outsb
and
sti
daa
dec
or
aad
les
mov
add
xor
jmp
jne
and
jp
fcom
and
jbe
xchg
mov
repz
sub
pop
loopne
dec
dec
into
pop
inc
leave
or
jl
cmp
jge
push
bound
popf
mov
mov
xchg
xor
clc
mov
in
sbb
gs
xor
inc
cltd
xchg
imul
inc
and
jno
out
fistl
lea
adc
adc
inc
cmp
mov
sbb
dec
dec
lret
mov
outsb
out
rcr
stc
xor
sbb
imul
push
mov
ss
loop
mov
jmp
cli
mov
dec
cmp
jbe
adc
or
inc
jns
pop
repz
bound
add
inc
adc
pusha
loope
int3
insb
push
les
push
add
or
pop
data16
fidivs
shr
fnsave
push
jmp
aam
pop
cmpsl
in
insl
push
hlt
mov
cli
cmp
inc
mov
xchg
xor
jmp
stos
insl
mov
inc
int
cmpsl
mov
push
push
out
jnp
push
fwait
lods
cmp
movlps
mov
ror
je
stos
or
sub
sbb
popa
jmp
insb
push
mov
shrb
inc
movsl
icebp
adc
mov
leave
inc
and
insb
xor
cmp
pop
jge
sbb
pop
addb
pop
in
lcall
xor
dec
jecxz
cmc
cwtl
mov
xchg
and
lods
dec
jae
jae
adc
xchg
adc
pop
cltd
adc
repz
loop
jl
daa
xchg
frstor
je
test
insb
mov
or
jmp
pop
rclw
scas
or
xchg
and
jge
ret
or
lcall
gs
pop
xchg
push
mov
add
pop
or
rorl
mov
mov
and
dec
mov
sbb
test
pop
xor
or
mov
cwtl
and
es
fcmovnu
pushf
ret
jne
sub
push
dec
xor
cmp
rcrb
dec
mov
cwtl
and
in
mov
imull
jnp
inc
daa
dec
jmp
mov
scas
rcr
out
scas
xchg
fdivrl
test
mov
jae
xchg
je
int3
sbb
mov
lcall
xchg
aas
shll
xchg
int
das
inc
ret
pop
sub
xor
sbb
adc
xchg
leave
mov
push
fisttpl
leave
call
xor
ljmp
cmp
jecxz
push
data16
loop
and
call
mov
cmp
inc
filds
das
adc
cmp
in
mov
pushf
xchg
cmp
imul
hlt
mov
test
aas
rcrl
lock
ja
lret
test
sbb
movsl
adc
bound
or
call
aaa
insb
mov
push
sub
xchg
mov
cmp
es
lods
pop
pop
dec
shrl
mov
repnz
sti
imul
add
mov
and
pop
mov
idivl
mov
shll
jge
aam
idivl
push
jae
jge
fwait
xchg
cld
pop
mov
or
test
mov
push
mov
cmp
sbb
xor
sbb
mov
aas
outsb
into
xor
mov
icebp
xchg
mov
lret
mov
ret
cmpsl
push
xor
sti
loop
add
movsl
nop
and
call
ja
mov
das
inc
mov
popf
inc
fcoml
inc
adc
dec
insb
jp
sub
test
sbb
dec
inc
repnz
and
hlt
xor
jmp
mov
je
add
dec
or
int3
jl
dec
xor
or
popa
test
cmp
out
rorl
orb
sub
xchg
adc
loopne
in
cmpb
cmp
mov
dec
dec
pop
enter
lahf
das
rorl
mov
inc
xor
cmc
stos
cmp
adc
push
insl
inc
aad
aam
les
pop
pop
or
push
or
mov
mov
xor
inc
in
fistps
fcompl
test
leave
xchg
mov
sahf
lea
dec
lods
or
out
cs
sbb
outsl
cmp
xlat
lock
fsub
mov
iret
hlt
cli
pop
pop
inc
push
out
fdivr
mov
xor
and
jns
lock
add
outsb
mov
sub
xor
test
into
add
lods
insl
lods
dec
outsb
stos
pop
ret
nop
pop
xchg
dec
int
call
dec
lahf
mov
adc
das
iret
pop
jl
rolb
dec
out
or
mov
jo
mov
js
gs
add
pop
xchg
add
fcmovb
mov
jb
jo
cld
lret
xchg
repz
jecxz
add
call
std
dec
enter
mov
mov
mov
jno
inc
rcrb
or
push
shrb
mov
jo
jne
movsl
xchg
ja
jmp
test
hlt
adc
dec
sub
imul
mov
mov
test
inc
orb
inc
test
sub
in
repnz
cmpsb
iret
stc
jo
ja
fcom
pop
jle
cmc
mov
ds
push
dec
out
movsb
pop
notb
outsb
subb
iret
in
push
cmp
xor
add
ljmp
adc
xor
fnstenv
pop
pushf
cmp
add
negl
mov
pop
inc
lods
or
add
movsb
orb
insb
fs
xlat
int3
pop
xchg
dec
fs
pop
scas
ldmxcsr
insl
xchg
mov
and
adc
and
lret
fstps
dec
mov
lcall
popa
scas
bound
fwait
xor
mov
test
pop
sub
iret
stc
lret
pop
cmp
gs
cmpsb
ret
iret
xchg
fcmovbe
pushf
leave
outsl
and
sub
in
dec
test
pop
ror
sbb
inc
stos
fisttps
aas
mov
add
clc
and
loop
cs
adc
jb
lock
cmp
or
mov
fnsetpm(287
push
lds
push
lret
sub
inc
call
ret
cltd
adc
mov
mov
test
imul
xchg
xorb
pop
subb
inc
and
in
xchg
and
imul
sbb
adc
cmpsl
sahf
ret
dec
arpl
or
jnp
std
or
fwait
cmp
testb
hlt
inc
test
rcrl
call
mov
and
js
sub
pusha
push
es
lret
mov
repnz
adcb
fcmovb
aam
rcl
mov
imul
lea
cmpsb
out
add
jp
cmp
je
add
inc
sbb
jne
jmp
lret
imul
and
xor
jno
pop
mov
cmpsb
jp
push
sub
popa
sbb
mov
xor
sti
and
or
dec
jp
xchg
mov
outsb
add
push
sbb
inc
aam
inc
mov
xchg
repnz
sbb
loope
ja
mov
add
aaa
mov
sub
in
push
and
push
lock
push
idiv
loope
inc
or
sti
pop
stc
jns
or
add
mov
jg
xchg
mov
cli
inc
test
pop
inc
int
cld
jno
xor
add
movsb
ret
push
movsl
pop
adc
add
jle
and
sbb
pop
xor
mov
clc
dec
stc
mov
es
mov
cmp
pop
inc
cmp
push
cmp
mov
nop
cli
jmp
push
mov
nop
mov
xchg
lcall
xor
push
cld
add
daa
push
shrb
repnz
addr16
xlat
cs
lret
das
and
lret
ds
mov
popa
ss
xor
xchg
test
je
cli
xchg
test
mov
adc
outsb
fwait
jmp
das
fwait
sbb
loopne
sahf
mov
mov
mov
jmp
fwait
jnp
pop
cld
adc
cmpb
data16
sub
push
pusha
push
lds
sub
xchg
inc
fistps
mov
jmp
dec
push
add
lods
dec
inc
adc
mov
or
lcall
movsb
lds
inc
jnp
pop
mov
inc
cmpsl
fcmovnb
and
sahf
push
sub
push
hlt
jle
enter
loop
outsl
cld
xlat
jo
ret
cli
lret
sub
push
out
sub
lods
push
aas
pop
insl
pop
xchg
cmp
inc
sbb
push
xchg
add
fisubrs
mov
test
mov
lret
add
in
gs
push
mov
mov
sub
lret
sti
mov
movsl
repnz
in
add
leave
push
lds
xor
es
pop
xchg
xlat
or
or
xor
ds
cmpsb
mov
clc
mov
nop
aas
xchg
push
imul
fwait
mov
sbb
lret
xchg
addr16
add
pop
mov
dec
outsl
popa
jne
nop
adc
pop
andb
xchg
cltd
xor
sub
add
repnz
mov
inc
repz
lock
and
hlt
lods
push
mov
pop
cli
sbb
movsl
js
adc
fsubrl
int
mov
sbb
out
addr16
push
jae
add
ds
pop
and
outsl
movsl
es
fldl2t
and
shrb
addl
push
lcall
js
popf
mov
sbb
insl
mov
sub
lods
std
sbb
test
addl
jge
mov
sub
and
lcall
test
push
mov
adc
lret
and
xor
scas
pop
les
out
sbbb
les
test
jno
mov
inc
movsb
xorb
jae
dec
mov
in
push
mov
outsb
xchg
mov
and
inc
arpl
add
push
adc
jmp
sbb
mov
popf
pop
arpl
rep
shll
fs
or
push
dec
adc
sub
iret
aam
xchg
jb
je
pop
pushf
sbb
js
popa
inc
adc
jmp
out
dec
jl
mov
lea
iret
xchg
mul
add
pop
inc
jp
dec
sub
adcb
enter
fcomps
add
jae
ds
ds
outsl
mov
stos
lds
jbe
dec
and
sub
pop
call
stos
and
sub
lcall
std
stc
xchg
mov
shl
std
mov
les
sahf
pusha
dec
out
loope
std
add
mov
ljmp
scas
cmpsb
pop
test
frstpm(287
cltd
adc
loopne
mov
test
pop
sbb
xor
jl
in
test
shll
imul
adc
mov
push
mov
xchg
es
push
dec
lret
push
mov
fsubr
imul
xchg
adc
daa
or
or
mov
cmc
xchg
dec
int3
jno
push
sbb
xor
mov
insl
ror
out
stos
or
cmpl
mov
mov
add
add
rcrb
mov
int
cmp
jnp
sti
or
push
and
sahf
sbb
mov
or
out
iret
dec
in
fwait
xchg
jnp
addr16
jmp
rcll
cld
sbb
test
or
jbe
and
push
shlb
push
jg
jmp
jg
enter
pop
cltd
mov
xor
cmp
push
rclb
mov
dec
data16
and
std
xor
sbb
push
dec
sub
call
fidivs
mov
nop
or
imul
daa
sub
movsl
rorl
inc
mov
mov
sub
pop
sub
xchg
subb
add
cmp
mov
jle
insb
decb
cmp
jl
jle
aad
out
cltd
sub
sbb
and
mulb
fldenv
movsl
pop
outsb
je
test
sbb
out
jecxz
push
push
and
test
into
add
xchg
xchg
sahf
subl
js
cmp
sub
adc
mov
rcll
dec
jbe
clc
int3
aad
dec
jnp
cmp
add
or
adc
inc
lods
jle
jp
push
repnz
out
in
daa
ficompl
adc
jg
push
popa
sbb
inc
lret
xor
inc
cltd
lahf
movsl
ficomps
test
adc
stos
or
das
cltd
sub
fs
lods
cmpsl
fs
push
std
mov
push
push
mov
jb
xchg
push
mov
out
andl
fdivl
pop
movsl
sahf
gs
les
lods
int3
jecxz
mov
adcl
sbb
invd
push
and
adc
mov
hlt
cmp
repz
mov
hlt
ja
jl
inc
insl
cld
pop
out
pop
push
push
jo
mov
cwtl
fsubr
roll
jne
jnp
add
stos
dec
jns
mov
arpl
rcrl
pushf
out
or
and
scas
xor
mov
std
add
add
lret
subl
cwtl
mov
ja
popa
cwtl
jle
xor
mov
cmp
push
adc
std
pop
sbb
sub
jns
imul
ljmp
mov
scas
pop
push
pop
jb
shrb
cmpsb
loopne
call
loop
iret
scas
jge
rcrb
xor
cltd
shrl
fs
into
fs
stc
lahf
push
fucomp
jo
lods
pop
add
mov
lahf
and
popa
popa
mov
mov
push
and
cltd
or
sub
sbb
mov
enter
cmp
int3
cli
stos
sub
inc
pop
add
jbe
sub
decl
fisubrs
dec
pop
sti
cltd
test
leave
imul
pusha
mov
outsl
imul
and
add
mov
pusha
arpl
lcall
dec
cmp
or
inc
ret
data16
fsubs
mov
push
pop
xor
inc
sahf
das
imul
xchg
stos
and
outsl
out
enter
loop
mov
cmpsl
pusha
js
fstl
les
fisubrs
add
ljmp
xor
loope
cmpsl
das
scas
xchg
mov
push
lret
aam
mov
jae
gs
mov
jnp
sub
inc
push
jmp
aam
jb
push
pop
lea
in
fnsave
icebp
popf
push
xor
push
xlat
fsubrl
jo
lgs
sahf
mov
lods
dec
negb
scas
mov
fbld
pop
ffreep
push
jo
aam
sub
add
or
repz
push
lret
repnz
lret
rcll
cltd
inc
pop
orl
aam
lods
fcmovbe
mov
icebp
cmp
pop
subl
out
add
xorl
out
inc
insl
and
imul
mov
fistl
lods
push
clc
jge
sbb
test
and
dec
push
or
xchg
int
cmpsb
bound
into
dec
stc
in
nop
lea
lcall
jl
leave
inc
sub
push
inc
mov
cmp
xor
sub
cli
mov
lret
aad
mov
push
dec
out
jle
std
push
mov
fcmovne
sbb
or
es
xchg
out
push
mov
inc
jo
fimuls
cmpsl
movsb
push
and
popa
xor
inc
ret
xchg
pop
sub
out
js
xchg
inc
inc
int3
hlt
mov
cmp
xchg
js
jne
mov
or
pop
cld
cltd
lods
adc
hlt
mov
nop
aad
out
movsl
cmovns
rol
hlt
inc
popf
rclb
sarb
jmp
jno
pop
mov
pop
xor
aad
out
cmp
adc
faddl
movsb
cmp
pop
inc
lea
push
inc
repnz
and
pop
push
inc
mov
shrb
or
jle
out
sub
in
inc
pop
xor
or
ret
scas
rclb
sub
fsubrs
sub
cmp
xor
das
inc
xlat
lods
adc
int
xchg
sbb
push
mov
mov
jge
in
or
xor
cs
mov
negl
es
dec
push
adc
push
push
fisttps
jnp
stc
fsub
movsb
std
xor
in
imul
aam
or
sti
call
ja
out
pop
sbb
ss
les
std
cltd
dec
lock
xchg
push
sub
insl
sub
jns
pop
popf
push
inc
add
lret
ja
pop
out
scas
adc
pop
pop
jns
jecxz
repnz
xchg
ffree
mov
or
jmp
jecxz
adc
js
dec
push
mov
cltd
mov
leave
jg
pop
les
hlt
adc
mov
dec
sub
mov
jns
jbe
mov
inc
rorb
out
inc
inc
loopne
xchg
out
xchg
icebp
in
popa
xchg
mov
and
sbb
ror
mov
lds
cmpb
ljmp
subb
inc
mov
lods
stos
or
jnp
fiadds
or
arpl
cmp
mov
push
fistl
adc
dec
adc
outsl
or
test
add
or
call
inc
cli
xor
pop
cmp
adc
movzwl
pop
popa
les
push
xchg
sbb
sar
es
mov
and
add
aam
mov
test
dec
mov
daa
add
pop
dec
fisttpl
popa
sbb
mov
adc
xchg
push
dec
sbb
add
imul
lods
jmp
jne
adc
leave
sub
push
fnstsw
and
lods
inc
or
sbb
xchg
adc
fiaddl
adc
mov
arpl
roll
movsb
insl
jb
inc
std
adc
mov
jae
pusha
cmp
je
cmpsb
and
xor
inc
xchg
fidivs
movsb
outsl
or
jbe
and
jno
or
xchg
pop
into
lea
adc
cltd
gs
add
mov
out
add
mov
push
pop
dec
js
jns
rol
out
test
mov
jle
adc
insb
mov
mov
lock
call
inc
add
test
cli
jae
scas
jo
push
ljmp
aam
cwtl
dec
dec
xor
mov
pop
mov
arpl
iret
mov
mov
loop
inc
and
cltd
push
jne
insl
pop
loope
or
in
adcl
adc
in
xchg
dec
adc
mov
or
inc
test
inc
mov
push
xor
leave
rorb
scas
fmulp
push
xor
cmp
or
adc
loop
xor
mov
int3
lahf
dec
xchg
fbld
jae
iret
out
xor
call
scas
ficoml
mov
xchg
inc
sub
icebp
pop
cwtl
xor
inc
push
les
xor
test
xchg
pop
xchg
push
std
jmp
cmp
dec
leave
push
into
call
xor
stos
mov
pop
ja
mov
ret
push
fisttpll
fstpt
inc
xor
xor
pop
lea
inc
mov
divl
inc
and
jo
mov
pop
out
mov
or
xchg
xchg
pop
inc
jmp
int3
daa
cli
xchg
mov
test
sbb
in
pop
jmp
or
test
cmpsb
mov
mov
popa
mov
pop
mov
sub
loope
jge
and
and
sbb
or
xor
push
cmp
enter
push
outsl
adc
loop
fidivl
add
js
adc
sub
ljmp
push
iret
sub
mov
aaa
mov
aas
fistps
fdivl
loop
stos
out
pop
jecxz
test
mov
sahf
dec
xor
les
std
pop
xacquire
adc
jo
mov
mov
or
fdiv
pop
jns
lods
mov
cli
adc
add
pop
ja
lret
mov
inc
cmp
mov
sbb
xor
mov
jb
push
int
mov
fcompl
in
sti
jnp
sbb
inc
fbld
shll
fwait
jbe
pop
xchg
mov
pop
adc
je
cmp
add
stos
push
hlt
xor
roll
dec
lahf
xchg
pop
popf
icebp
dec
call
push
arpl
jb
push
xchg
fstl
mov
popa
outsl
adc
cmp
inc
fiaddl
inc
pop
or
movsl
sti
out
in
jmp
mov
pusha
sub
dec
sbb
push
dec
sub
sbb
mov
xchg
or
jns
cmc
out
loop
pop
add
xor
cli
jb
xor
adc
mov
add
sti
push
les
inc
mov
mov
imul
sub
lock
inc
out
sub
mov
push
inc
cmp
loope
sub
test
popw
jno
fnsave
lock
out
les
les
leave
aad
arpl
lods
xor
and
dec
xor
fsubrs
mov
lcall
push
mov
stos
add
sbb
xor
imul
xor
xor
pop
sbb
push
ja
or
int3
jl
push
xor
sbb
mov
ljmp
jge
dec
sub
sbb
dec
cld
outsb
aas
sbb
xchg
jp
jge
rorb
out
mov
cmp
mov
jecxz
jno
nop
jle
js
fstpl
jbe
sbb
jae
idivl
mov
fistl
fyl2x
jns
inc
fsubrs
inc
xchg
jge
sbb
add
pop
bound
xchg
sbb
jnp
xlat
pushf
daa
and
xor
jb
sub
mov
sbb
mov
stc
rcll
sbb
mov
lods
popf
lahf
sbb
into
mov
imul
add
jnp
mov
and
cmpb
ret
xchg
push
test
stos
ss
fbstp
add
cld
jae
cltd
inc
insl
adc
pop
or
adc
push
stc
inc
test
xor
or
fdivrl
dec
push
fldt
cld
jae
adc
fnstenv
les
clc
sbb
jb
mov
aam
xchg
sbb
add
hlt
add
inc
and
lahf
dec
mul
negl
jb
popf
je
in
pop
push
mov
jne
push
jmp
sub
mov
push
mov
repz
fs
adc
std
xor
xchg
fnsave
and
test
push
pop
stos
cmpsl
bound
jl
jo
data16
fidivs
fldt
xchg
fldenv
adc
sahf
push
imul
inc
cmpsb
xchg
sbb
mov
xchg
jmp
push
inc
mov
pop
mov
in
xor
cmpsl
xor
dec
ja
lret
lahf
mov
xor
add
aas
les
lahf
call
test
lds
pop
or
sbb
and
ret
pushf
xorb
push
dec
sbb
add
mov
in
leave
shld
sbb
sub
stos
pop
test
inc
sub
xchg
aaa
push
imul
inc
xlat
jo
nop
sub
int
mov
pop
mov
lods
inc
mov
std
leave
mov
popa
inc
lahf
pushf
inc
cmp
jge
push
inc
arpl
xchg
mov
pop
mov
rol
cli
inc
pop
pushf
clc
mov
hlt
mov
push
jg
xchg
mov
pop
inc
sub
xor
inc
stos
pop
test
pop
jp
enter
aas
bound
lock
fmull
add
pop
imul
test
jmp
pusha
test
repz
jne
push
mov
sbb
daa
pop
push
or
cmpsl
push
mov
cmp
dec
xchg
jecxz
sbb
sub
push
sahf
xchg
adc
popf
call
lahf
into
leave
enter
xor
sar
mov
mov
or
push
cltd
cmp
mov
or
pop
outsb
icebp
add
xor
or
pop
jo
lahf
dec
and
xchg
xchg
movsl
mov
fstl
dec
adc
sbb
test
fistps
xor
lea
push
xchg
outsl
jb
stos
mov
lods
mov
sub
fsubs
xor
rcl
sub
test
movsb
aas
pop
jmp
cmp
inc
mov
sub
add
stos
adc
jg
mov
fildl
mov
inc
int3
sbb
add
cmp
sub
ljmp
bound
xor
and
xor
int3
pop
fstps
or
insb
pop
out
jecxz
fptan
or
inc
shr
sub
cmp
jne
push
mov
movsl
sub
je
xlat
mov
lret
test
nop
jp
mov
xchg
or
addr16
and
aas
sahf
arpl
push
mov
xchg
push
xor
mov
mov
cmpsl
jmp
fs
popa
mov
xchg
daa
push
adc
jg
shll
subb
xor
mov
and
xchg
pusha
repnz
addr16
push
pop
sub
cmp
out
xor
aam
cmp
mov
leave
int3
popf
fidivs
addl
jae
inc
jle
xor
pop
mov
cmpsl
and
mov
es
jno
out
inc
inc
dec
sbb
mov
push
cmp
insb
mov
add
testl
pop
hlt
out
cmp
push
mov
add
mov
mov
and
shlb
mov
daa
ret
dec
or
cmp
cmpxchg
xchg
test
arpl
aam
cmpsb
push
icebp
aam
adc
aam
fmulp
sbb
jp
inc
in
push
test
test
enter
pusha
aam
mov
inc
add
push
push
pop
insl
dec
cmp
or
lock
sbb
sbb
aam
and
fsubrl
decb
xor
sbb
and
mov
test
sbbb
insl
cmp
cli
mov
xor
or
in
insl
jb
jle
test
enter
lods
lock
ja
push
mov
dec
scas
out
or
cli
sbb
mov
and
outsl
test
addb
rclb
stos
js
in
nop
pop
or
sbb
xor
call
lds
repz
inc
push
adc
xchg
call
js
imul
pop
xchg
inc
sub
sbb
sar
push
int
in
pop
popf
popf
ds
aaa
in
sub
jmp
inc
aad
popf
leave
adc
sbb
stos
nop
enter
mov
mov
loop
xchg
mov
fcmovne
sbb
cmpsb
into
jne
ljmp
ret
test
push
jbe
xor
add
pop
xchg
cmc
dec
ss
dec
int
outsb
fwait
cld
sti
je
inc
inc
mov
std
sub
push
and
popa
aas
pop
pusha
outsb
clc
jmp
xor
cmp
stos
xlat
pop
repnz
js
arpl
or
jle
arpl
fs
push
rolb
push
sbb
arpl
mov
mov
dec
iret
insl
add
adc
call
mov
pop
repnz
push
pop
outsl
push
gs
ret
rolb
xchg
stc
aaa
imulb
push
popa
xor
repz
or
xor
cmp
add
outsl
sub
ficomps
dec
gs
and
inc
lret
or
fistpll
out
ficoml
cmp
fldenv
fisubs
lods
sahf
or
and
jg
popa
or
push
jg
cmp
xchg
jecxz
jns
sub
jmp
xchg
xor
and
dec
cmp
pop
aam
cmp
sbb
lahf
in
and
outsl
divl
mov
cmp
mov
enter
jbe
sub
ja
out
adc
dec
int3
xchg
jae
lods
in
add
sbb
xchg
pop
les
adc
gs
cmp
test
lds
loop
or
hlt
mov
lea
mov
and
mov
je
clc
loope
out
in
testb
stos
scas
xchg
push
jle
cmp
scas
scas
in
xchg
add
lcall
sbb
pop
ret
outsl
inc
add
sbb
pusha
iret
sbb
jae
or
sub
inc
mov
imul
arpl
mov
inc
pop
fdivl
out
fisubrl
cmpsb
and
dec
cwtl
push
imul
repnz
xchg
and
or
out
fimuls
ljmp
pop
sbb
push
out
stc
pop
clc
inc
out
scas
dec
iret
ficompl
pusha
push
int
mov
inc
push
xor
mov
repz
jl
adc
adc
outsb
mov
mov
cwtl
dec
pop
mov
xchg
scas
lahf
xorb
out
xchg
inc
out
clc
xor
pop
dec
sbb
inc
loopne
out
repz
lret
pop
mov
idivl
arpl
shlb
bound
sbb
push
xchg
xchg
pop
shrl
cli
jbe
scas
inc
mov
les
push
scas
mov
mov
or
test
ret
cld
inc
push
add
loopne
lret
mov
shlb
lret
popf
jl
or
shll
lods
pushf
jecxz
sub
mov
sti
sbb
idivl
test
loopne
or
fs
leave
fildll
mov
cmpsb
pop
inc
dec
test
out
nop
test
stos
popa
rorl
dec
jg
into
jmp
das
push
les
iret
jmp
inc
dec
iret
test
js
imul
in
jge
fildll
sbb
mov
xor
inc
cltd
mov
repz
scas
cmpsl
jmp
in
lret
xchg
or
popf
hlt
dec
fdivrl
lret
jns
sub
cmp
dec
inc
or
mov
add
sbb
pusha
sub
mov
add
add
xor
loop
mov
jno
xchg
lods
gs
outsb
cmp
ljmp
pop
bound
push
pop
xchg
leave
sbb
push
jb
js
popa
mov
xchg
flds
test
enterw
int3
push
pop
sbb
adc
aaa
cltd
cmp
push
les
mov
lock
test
push
jb
test
pop
into
testl
rolb
les
add
imul
push
dec
data16
shlb
bswap
ja
clc
mov
sbb
icebp
cmp
sub
mov
andb
insb
sbb
das
cmp
fld
lret
in
imul
xor
push
int
adc
mov
in
aas
inc
arpl
sub
mov
outsl
xchg
ja
xorb
lea
jl
sbb
sti
test
mov
std
jno
cmpsb
inc
inc
pop
sbb
pop
fistps
mov
repz
sub
shrb
mov
dec
push
outsl
mov
push
fldl2e
in
data16
sbb
loop
imul
mov
sbb
mov
adc
inc
dec
push
mov
sbbl
dec
mov
xchg
sbb
sbb
adc
push
fisubrs
or
push
add
and
mov
nop
sub
cmp
icebp
fcoms
iret
loop
mov
pop
mov
xchg
fucomp
xchg
loop
movsl
mov
or
cmp
mov
ret
ror
icebp
lret
addr16
push
in
pusha
cmp
inc
int
mov
fs
cmove
sbb
dec
and
pop
jp
cmc
out
adc
push
popf
xchg
or
push
adc
fldlg2
push
pop
jl
cli
xchg
inc
call
loopne
add
into
ljmp
inc
test
mov
dec
xchg
mov
fadds
repz
addr16
jl
popa
sbb
shlb
pop
pushf
jb
loop
inc
mov
adc
outsb
xchg
leave
push
mov
sub
bound
mov
adc
jae
les
ficomps
fwait
sbb
dec
sbb
js
sub
xor
rorb
mov
movsl
std
icebp
pop
loop
fdivrl
cmp
cmovp
hlt
jl
lods
and
repnz
test
mov
push
es
sbb
out
cmp
jg
jp
add
sbb
jecxz
lods
mov
aaa
adc
add
int
push
cmp
sbb
mov
sbb
subl
loopne
mov
vpminsw
cmp
jl
es
mov
loope
les
stc
inc
jae
or
je
pop
mov
out
aam
pop
addr16
test
cwtl
fidivl
mov
in
pop
and
rol
ret
jns
add
dec
out
loopne
xor
stos
xor
cli
inc
dec
scas
daa
mov
inc
xchg
sbb
dec
mov
out
pop
jbe
js
jge
scas
fsubrl
or
pusha
stos
xchg
mov
push
adc
ss
xor
mov
cmc
sbb
nop
cmp
dec
mov
fs
clc
and
jp
mov
loopne
adc
cld
mov
nop
mov
adc
push
add
mov
xchg
fucom
push
popf
ljmp
adc
lods
out
mov
out
xlat
inc
cmc
loopne
push
iret
xor
pop
sub
sub
push
shll
jecxz
jle
mov
dec
data16
cmp
inc
stc
jmp
into
mov
icebp
out
pop
sbb
and
or
fnstenv
loope
xlat
cmp
push
jo
mov
int
fidivrl
shrb
mov
ror
mov
mov
cltd
pop
xorl
mov
xchg
jb
adc
test
mov
add
pop
cld
and
push
dec
repz
mov
sub
std
add
decl
sub
push
int
xor
jno
subl
jns
aad
xchg
add
push
ss
dec
stc
lock
adc
insl
xlat
pop
or
add
xchg
jecxz
mov
push
int
scas
mov
adc
loope
xor
push
mov
xor
nop
xlat
xchg
nop
or
adc
bound
xor
cmp
cmp
jmp
sub
cmp
xchg
mov
fs
negl
or
inc
into
or
enter
imul
sarb
or
mov
adc
sub
mov
movsb
add
pop
sbb
add
or
or
in
jne
aas
pop
popf
cs
ss
mov
stc
in
es
pop
and
add
xchg
xor
popa
loope
or
mov
mov
or
mov
fsubr
daa
cmp
daa
scas
mov
jne
insb
popa
or
or
add
into
jno
jmp
popf
or
lahf
pop
cmp
xchg
push
adcl
push
jecxz
iret
aaa
push
adc
lods
jae
mov
or
and
aaa
mov
xchg
pop
cs
scas
dec
dec
bound
add
sub
mov
test
inc
fisubs
jns
mov
and
dec
mov
mov
mov
mov
mov
mov
movsb
sub
mov
xchg
push
fisttpll
filds
test
repnz
ja
push
mov
dec
les
imul
popa
or
adc
popa
shll
pusha
jae
orb
insb
push
movsb
rorl
iret
pop
dec
sbb
mov
cmpsl
mov
jle
xor
outsl
hlt
out
mov
loop
pop
pushl
getsec
rcrb
out
sbb
lock
ret
pop
sbb
jo
mov
adc
add
stos
test
iret
shll
jmp
xchg
and
fidivl
dec
push
data16
ljmp
pop
xchg
jno
pop
and
push
mov
sub
jns
pop
or
dec
inc
adc
fs
sti
cld
mov
inc
sbb
or
mov
repnz
movsl
out
mov
dec
pop
stos
repz
xchg
imul
cld
jbe
or
push
insl
insl
fdivr
dec
pop
das
mull
sahf
lds
cli
testl
add
push
mov
and
testb
sbb
mov
cli
icebp
xlat
aaa
js
icebp
mov
push
loop
cmpsb
mov
dec
jb
aad
fwait
scas
jecxz
fwait
jno
imul
pop
cld
aas
test
addr16
add
jmp
push
jle
mov
out
ds
sahf
or
add
dec
fs
push
and
movsb
fiadds
leave
roll
cmp
mov
add
clc
xor
xor
mov
fstps
dec
mov
lret
mov
jne
cltd
out
mov
mov
jns
mov
popf
cmpsb
xchg
push
addr16
push
ljmp
push
xchg
sahf
cmp
jecxz
sbb
mov
pop
push
pop
dec
push
push
dec
testl
mov
ljmp
mov
outsb
test
inc
push
fnstsw
mov
nop
sub
movsb
in
aad
pop
repnz
sub
fldl2e
outsl
out
or
sbb
ja
pop
fs
jne
add
inc
and
pusha
lods
ja
call
mov
fld
push
mov
andl
das
outsl
sbb
out
push
ja,pt
repz
sub
jecxz
divb
aam
xchg
sub
pop
and
pop
iret
sub
add
push
ja
sti
cwtl
bnd
ljmp
xchg
sbb
dec
or
loopne
lret
repz
or
or
xchg
mov
sub
push
adc
mov
sub
lret
xchg
xchg
sbbb
enter
mov
cmpsb
lock
ja
add
dec
add
dec
xor
pusha
sbb
repnz
cmp
sub
pop
pop
adc
lods
mov
cmpb
aad
cli
mov
cmc
sbb
imul
stos
push
dec
das
adc
fs
push
pop
mov
jle
js
bnd
sub
xchg
roll
sub
push
dec
jo
fstps
pop
push
or
lock
mov
outsl
aaa
cli
stos
lea
mov
cli
jne
add
inc
into
sbb
insl
fldt
stos
sub
scas
cmpsl
out
icebp
cltd
and
arpl
repz
lret
out
inc
orl
js
jo
sub
inc
test
sahf
dec
sbb
scas
enter
hlt
int3
scas
mov
test
pushf
mov
and
xor
push
hlt
mov
test
popa
jae
sbb
loop
aam
and
sub
sbb
movsb
jl
lods
sub
jne
sarl
xchg
inc
or
movsl
or
fistpl
fs
lods
sub
lds
xchg
xchg
mov
bound
cmp
jae
mov
inc
cmpsl
pop
cmc
sbb
lods
ljmp
xor
out
cwtl
jle
add
mov
pop
cmp
dec
in
cmc
ss
sar
pop
push
xchg
aad
sub
mov
add
aad
cmp
outsl
lret
rolb
inc
push
loopne
push
mov
and
test
cmpl
jo
roll
push
xchg
inc
pop
push
push
imul
out
push
cmp
cld
mov
push
or
lods
ds
imul
ljmp
xchg
xchg
js
cmp
dec
repnz
jp
out
dec
mov
out
jns
repnz
or
xlat
hlt
mov
cli
ss
push
mov
addr16
xchg
and
das
xchg
lock
pop
cmp
sub
loop
stc
jae
push
xchg
arpl
sbb
scas
hlt
push
test
inc
lret
fs
push
adc
add
jl
push
adc
inc
xchg
and
xchg
and
sbb
in
add
lock
xor
and
xchg
dec
dec
dec
cmc
pop
repz
nop
mov
outsb
in
jns
stos
rol
sub
nop
imul
gs
adc
xor
out
fs
test
icebp
stos
or
add
lret
in
sbb
sub
sub
sub
enter
insb
jbe
mov
xor
ja
jle
push
insb
aaa
dec
pop
fidivs
sbb
xor
not
cmpsl
fists
jg
lret
jb
hlt
inc
pusha
pop
fsubrp
mov
rorl
cmp
je
mov
stc
mov
js
fsubr
push
cmp
addb
push
div
lods
dec
mov
popa
and
xlat
adc
in
daa
adc
xchg
xchg
or
je
imull
dec
mov
sub
ss
or
mov
xor
rcl
imul
and
sbb
add
sar
loope
out
cmc
shl
jge
aas
fwait
cmp
cmp
and
jge
dec
jb
jb
add
adc
jbe
pop
dec
inc
xchg
push
xchg
sub
adcb
outsb
or
dec
lods
xchg
test
nop
and
jbe
inc
out
add
and
arpl
mov
mov
inc
dec
pop
jne
xchg
mov
pop
fs
or
or
sarl
fsts
popf
cs
ja
cmpsl
mov
mov
pusha
je
jmp
mov
add
lods
mov
jns
mov
push
jo
mov
movsl
add
pop
dec
test
or
or
mov
stos
dec
cmp
jl
sbb
xor
ja
mov
pop
movsb
mov
adc
out
ss
push
mov
and
jle
pop
xchg
imul
cmpl
sti
fimull
je
push
inc
pop
cwtl
or
jmp
int
ret
and
adc
das
loopne
cmp
out
dec
cmc
lcall
xor
add
jl
stos
test
leave
and
cmpb
cwtl
jecxz
call
gs
pop
std
push
inc
add
ds
lds
stos
andl
cltd
test
lahf
pop
sub
push
push
clc
push
push
arpl
bound
cli
jae
xor
or
lret
adc
sub
mov
pop
fildll
scas
icebp
and
subl
sbb
out
cmp
in
push
add
fcmove
stc
adc
jp
xchg
icebp
sarl
xor
je
movsb
xchg
lods
sbb
sub
mov
push
lods
sbb
xorb
or
stos
sub
mov
sar
lods
pop
mov
and
aas
xchg
push
push
cwtl
test
xchg
xor
and
add
and
xchg
inc
mov
add
push
lcall
sbb
out
out
mov
mov
and
and
dec
arpl
insl
ja
jnp
add
xchg
mov
imul
dec
adc
popa
in
adc
and
adc
popl
mov
mov
out
inc
adc
dec
loop
mov
js
add
in
insb
sbb
jns
and
xor
or
xor
xchg
and
out
sahf
getsec
xor
sub
jnp
sbb
or
inc
lahf
sbb
lods
jae
les
lods
int3
jns
in
mov
lock
out
inc
or
jbe
gs
xchg
push
mov
and
in
add
dec
cmp
movsb
mov
push
insl
rcr
inc
das
lods
pop
xchg
xlat
in
std
lss
push
jl
sbbl
add
loopne
xchg
icebp
shlb
or
mov
outsl
mov
xchg
jge
adc
jo
adc
jb
xlat
pushf
fadds
lret
into
jle
in
jbe
dec
dec
mov
in
in
and
inc
je
scas
fsub
std
fsts
pop
mov
nop
dec
jmp
xchg
mov
scas
inc
sbb
ret
dec
ss
cmp
enter
sbb
imul
and
ss
dec
imul
pop
push
pusha
and
mov
test
jne,pt
lea
mov
es
dec
lods
push
in
sub
hlt
jg
adc
in
cmpsl
jae
xchg
mov
lahf
loopne
adc
test
fs
or
or
cwtl
fimuls
push
mov
ljmp
popa
pop
sub
fscale
push
fucomi
push
inc
pop
jecxz
scas
fists
push
test
inc
js
inc
cmp
movsb
push
cltd
daa
mov
rcll
xchg
xor
stc
inc
je
rcll
rcr
cmp
inc
push
rcll
pop
sub
repz
and
rorb
aas
xor
inc
push
jecxz
jmp
inc
je
faddl
addl
pop
add
jle
lret
cmp
mov
fdivr
mov
into
scas
les
or
cltd
add
icebp
popa
addr16
daa
mov
inc
dec
adc
xchg
int
ficoml
xchg
clc
xchg
fsubrs
jbe
cmp
jle
lret
icebp
xchg
push
dec
movsb
pop
adc
filds
xor
mov
xchg
sbb
in
push
mov
loop
sbb
push
xchg
aam
jae
jp
mov
mov
lea
test
xchg
inc
mov
fisubs
punpckhbw
mov
mov
xchg
ret
lret
mov
xor
cwtl
push
shl
mov
mov
and
mov
dec
and
fnstcw
xor
icebp
add
xor
mov
test
dec
fsubl
mov
daa
cld
jp
or
lret
jecxz
add
add
pop
jnp
xabort
xchg
int
add
repnz
outsb
and
rcl
mov
pop
xor
iret
fimull
fcoml
push
gs
jge
mov
jmp
or
or
fidivrs
cmp
sub
aas
faddp
hlt
push
loope
mov
xor
push
or
lods
pop
call
stc
jns
push
and
mov
sub
js
or
sti
mov
push
aam
in
es
nop
iret
mov
nop
fs
mov
lahf
push
sub
pop
in
ret
icebp
inc
loopne
aad
sbb
stos
xchg
cmpsl
mov
mov
or
mov
rcr
clc
sub
inc
incl
pop
jl
adc
add
sbb
sarl
xor
fisttps
pop
inc
mov
mov
or
lret
lock
fisttpl
cmp
cltd
sbb
mov
or
shl
mov
xchg
xor
das
dec
inc
jmp
inc
cmp
xor
popa
es
cmp
adc
sub
and
mov
mov
lret
push
fisttpl
scas
mov
cmp
int
out
sbb
test
and
or
push
adc
lock
lds
call
lahf
pop
je
fistpl
mov
shr
push
and
xor
mov
cmp
into
int3
sti
cmp
adc
adc
sti
pop
addl
mov
dec
mov
fs
xlat
xor
cmp
ss
mov
cmpsb
adc
imul
mov
cmpsl
scas
shr
or
mov
xchg
stos
add
jbe
mov
jmp
xor
push
mov
rorl
aam
nop
iret
and
in
sbb
test
dec
mov
dec
sarl
and
in
int
xlat
mov
cmp
daa
cmp
jb
inc
pop
inc
daa
add
outsb
jae
jmp
mov
jg
and
cmp
push
pop
dec
leave
mov
sbb
dec
xor
ja
cld
jg
ljmp
xchg
adc
fwait
mov
pop
adcb
dec
js
test
call
and
test
repnz
leave
dec
or
rep
push
gs
jge
push
sti
jg
adc
sbb
call
fnsave
mov
mov
jb
sub
cmpsb
out
pop
jae
in
jae
mov
adc
xchg
stc
out
fwait
pop
lret
jno
es
and
insl
lods
jge
xchg
mov
scas
mov
pop
lea
mov
popa
movsl
dec
int3
outsl
test
jbe
cmp
fcmove
addr16
scas
bound
inc
mov
mov
jb
xor
pop
xor
jecxz
sbb
inc
mov
ret
pop
lahf
popa
xchg
jle
cmc
xchg
leave
fiaddl
pop
jge
jmp
pop
jge
or
dec
pop
pop
sub
or
gs
sub
push
sub
lods
jns
sub
xchg
inc
lods
int
push
sbb
add
xchg
jmp
pop
mov
jp
pop
dec
cmp
mov
xchg
sbb
xor
out
inc
loop
mov
addr16
xchg
pushf
pop
and
out
inc
mov
lcall
jbe
lcall
ss
pushf
insl
rcrb
movsb
xchg
lea
and
jns
jbe
imul
cmovle
jns
mov
out
addr16
dec
push
lahf
andl
inc
mov
cmc
pop
mov
xchg
adc
cmp
cwtl
enter
push
iret
imul
jo
mov
adc
adc
xor
adc
sbb
sub
pause
add
outsl
loop
imul
add
sub
stos
lds
jp
outsb
ljmp
pop
mov
adc
mov
setae
cmc
jo
inc
ljmp
xchg
jb
imul
push
pmaddwd
jmp
out
pop
cmp
push
jmp
jl
add
push
leave
inc
popf
inc
pop
out
outsl
iret
jg
insl
in
push
leave
lds
add
jae
cltd
jmp
xor
sub
jecxz
fimuls
mov
ret
sub
sbbb
popf
ret
lock
stc
inc
jnp
shrl
inc
sub
jecxz
nop
insb
sub
push
mov
push
inc
sahf
mov
fsts
in
leave
jg
insl
into
jno
inc
ret
mov
push
xchg
dec
test
xor
pusha
movsl
mov
jbe
adc
jl
loope
addr16
enter
xlat
pop
pop
cmp
mov
clc
sub
mov
ss
out
add
xlat
lret
aas
fwait
or
xlat
out
sbb
les
cmp
mov
cli
rcr
mov
sub
fisttps
jecxz
xchg
stc
ret
push
pop
sub
std
xlat
xchg
jmp
pop
cmc
cltd
push
adc
data16
cmc
pop
sbb
lret
std
push
in
adcl
mov
mov
xchg
xchg
mov
adc
and
add
std
loope
jae
fwait
add
inc
sub
out
push
stos
test
aaa
push
ror
aam
fwait
xchg
movsl
aam
popf
and
adcl
push
and
pop
mov
mov
jb
outsb
nop
icebp
loopne
adc
inc
stos
xor
dec
jg
sti
ss
dec
sub
lods
add
cmp
or
lcall
xor
lcall
jl
hlt
gs
xlat
popa
fwait
js
daa
jl
popf
les
mov
xchg
fmuls
popa
mov
dec
dec
xor
cs
in
orl
je
leave
fiaddl
adc
dec
inc
jnp
enter
test
xchg
or
mov
mov
add
lock
sub
push
adc
lods
shrl
and
sti
lcall
jecxz
cli
mov
fwait
push
jbe
cmpsl
aaa
fiadds
push
popf
popa
and
fidivrl
call
aaa
mov
outsl
ss
popa
enter
or
cs
hlt
sti
bound
and
mov
int
stos
scas
insb
jne
stos
test
jle
add
mov
cmc
icebp
es
adc
nop
xor
subl
stc
sbb
or
add
mov
cld
push
rorb
push
sbb
scas
and
mov
pushf
fcmovu
imul
jnp
enter
les
push
dec
push
mov
lret
sbb
lock
fnstsw
inc
pop
cmp
or
loope
fidivl
ja
fsub
xchg
cmp
inc
sahf
arpl
ljmp
push
dec
fs
push
xor
iret
dec
xchg
cmp
sbb
daa
and
mov
ja
mov
xor
mov
popf
pusha
push
stos
mov
cmp
xor
dec
out
gs
lret
pushf
mov
iretw
and
push
and
mov
or
cwtl
ss
xor
jns
xor
imul
or
mov
push
mov
push
or
ret
push
dec
repz
adc
sbb
pop
inc
sub
cmp
arpl
sbb
test
cmp
and
leave
sub
cmp
ja
ss
into
mov
int
pushf
loop
add
push
jge
mull
sub
jns
adc
or
xor
and
test
push
pop
inc
adc
enter
push
aam
out
and
mov
mov
sbb
test
cwtl
ljmp
dec
xorb
lret
cmpsl
inc
imulb
mov
lock
or
lods
popa
sbb
sub
mov
push
xor
mov
cli
add
jp
mov
es
push
into
shlb
add
dec
adc
push
shlb
and
inc
iret
cmp
mov
and
jns
xchg
mov
adc
call
arpl
mov
je
jmp
clc
andb
inc
xor
hlt
dec
sarb
shll
ljmp
push
stos
je
fiaddl
call
and
sbb
cmp
mov
addl
push
jno
fnstenv
decl
xchg
filds
pop
dec
das
xchg
cwtl
lahf
push
mov
les
cli
dec
xor
sub
iret
pop
adc
cmp
add
fucom
bound
mov
adc
inc
lds
xchg
mov
in
cld
imul
test
cwtl
mov
and
mov
pop
rcrb
fidivrl
std
shl
int3
bound
lock
and
mov
fnop
ja
outsl
dec
pop
movsl
jae
cld
pop
jae
ficompl
cltd
call
push
push
pop
cmc
andb
inc
jne
xchg
outsl
fs
or
in
dec
add
xor
lret
mov
sub
push
mov
scas
jbe
insb
data16
pop
movq
sub
xchg
je
push
jbe
cmc
cmp
clc
add
cld
inc
fisttps
cmp
pop
imul
jp
lock
mov
xchg
xor
shl
mov
jg
ret
cmpsl
push
mov
hlt
imul
push
dec
xorb
sbb
xchg
or
shr
push
and
sbb
cltd
cwtl
xchg
xchg
js
pop
mov
mov
pop
add
push
out
mov
aaa
add
xchg
sarl
imul
cmp
or
pusha
clc
les
test
xchg
popa
jne
loope
fsubs
dec
dec
out
xchg
stos
xchg
inc
aas
loope
push
shrb
ror
flds
sub
add
mov
inc
sbb
and
mov
ss
jle
rcll
imul
out
rcll
inc
and
mov
imul
mov
add
xchg
popa
xor
pushf
inc
add
cli
and
mov
int
movsb
jae
loop
jns
sarl
pop
dec
pop
or
jns
jbe
inc
mov
mov
xor
push
xchg
add
pop
call
in
ja
cmp
das
xchg
push
or
subl
movsl
inc
xor
pop
stos
push
xor
cld
dec
sub
and
mov
jbe
andl
gs
sub
orb
xor
jge
ret
xchg
in
ds
jp
daa
mov
jbe
rol
xor
mov
mov
mov
mov
and
and
sub
jb
out
push
fidivs
jp
std
jecxz
inc
pop
mov
aas
inc
dec
cmp
fsubrs
ja
push
adc
insb
and
jae
cwtl
adc
cmp
inc
lcall
add
aad
inc
ljmp
sub
in
fsub
inc
lods
and
xchg
inc
stos
mov
or
test
fcomp
cmp
mov
je
sub
xchg
push
xchg
ja
lret
add
sbb
xchg
or
pop
in
or
mov
add
stos
jecxz
pop
shlb
and
mov
pop
int
fstps
or
or
cmpsl
xor
and
int
insb
test
mov
fiaddl
cmp
and
mov
arpl
xor
add
push
fcomip
fwait
mov
sar
sahf
jae
paddsb
ficompl
inc
xor
es
mov
adc
aaa
sbb
pusha
test
add
xor
dec
shlb
push
ja
xchg
ficomps
int3
shlb
mov
int
mov
sbb
addr16
xchg
push
rorb
inc
outsl
call
and
sub
mov
pop
and
jo
outsl
adc
sbb
push
mov
add
out
icebp
daa
sti
test
repnz
jnp
mov
push
mov
scas
mov
jns
mov
add
fldcw
xor
xor
pop
sub
adc
dec
mov
push
repz
cwtl
fwait
inc
mov
aam
jbe
enter
dec
fistl
and
push
sub
int3
std
lods
xchg
movsl
fidivrl
mov
arpl
xchg
push
fidivrl
mov
in
adc
sub
cmp
pop
movsb
xchg
pop
pop
adc
stos
mov
and
test
sub
cmc
nop
lcall
fistpl
xchg
xchg
cs
rcl
cltd
orl
ja
les
mov
inc
out
repz
add
je
and
ja
cmp
out
mov
insb
adc
fnstsw
test
cmp
jnp
fimull
adc
int3
loope
in
out
dec
xor
iret
movsl
rcrb
xchg
bound
cmp
pusha
jae
pop
testb
cltd
rol
sahf
mov
xlat
hlt
icebp
mov
and
push
lret
testl
jp
in
add
mov
jae
cmp
sbb
popf
mov
js
mov
mov
das
adcl
add
fwait
adc
and
loope
mov
fadds
icebp
pop
lds
data16
cmpb
jb
jb
sub
loope
rorl
lret
xor
mov
inc
lret
insl
add
pop
adc
mov
int3
inc
adc
xchg
push
and
ret
ljmp
cmp
push
and
leave
lcall
mov
icebp
and
push
adc
pop
out
lret
ror
jge
out
pop
out
xorl
int
pop
push
lods
push
xor
inc
adc
mov
inc
jno
xchg
jns
adc
in
sub
mov
mov
js
pop
fisttps
jno
int3
sub
lods
insl
xchg
pop
add
mull
push
cld
fildl
out
call
popa
hlt
pop
ja
or
pop
mov
out
shrb
stc
scas
fisttps
mov
pop
mov
adc
xor
mov
pop
lods
pop
inc
mov
lcall
jecxz
mov
xlat
xchg
inc
faddl
xor
jb
data16
jp
xor
ret
or
and
or
sub
adc
testb
shrb
adc
imul
inc
mov
inc
in
gs
mov
and
mov
ret
lds
insb
push
call
sahf
divl
add
mov
bound
in
mov
rcrb
sub
jecxz
mov
test
and
leave
imul
ficompl
cmp
mov
or
push
sbb
or
loope
cwtl
loop
dec
stos
mov
add
pop
push
and
imul
stos
lahf
mov
inc
fldenv
sbb
pop
mov
push
cmpb
popa
push
xchg
fisubs
aad
push
dec
pop
scas
loope
mov
jecxz
jb
jg
xchg
mov
test
xor
xchg
dec
jge
stos
dec
fadd
mov
pop
out
lods
mov
int3
push
jno
and
pop
push
sub
in
fdivrl
push
hlt
aam
mov
xchg
or
shll
lea
mov
mov
addr16
xchg
std
btc
loop
cmpsl
cmp
call
insl
xchg
add
not
mov
and
push
dec
bound
jmp
jle
dec
cmp
popa
or
aad
jecxz
pop
sub
push
je
adc
push
stc
inc
int3
int
or
out
bound
sub
pop
mov
lret
push
lcall
ret
int3
push
cltd
mov
pop
shll
cmp
lret
sbb
mov
pop
icebp
cmp
mov
aas
es
std
daa
or
pop
jg
or
insb
pop
pop
pop
mov
and
lock
lea
shlb
push
mov
push
add
aas
int
mov
mul
int
inc
push
ret
cltd
cmp
mov
mov
dec
pop
imul
push
xor
mov
xor
push
aas
add
and
fninit
dec
enter
mov
cltd
daa
fiadds
aad
cmp
jmp
mov
clc
jo
mov
add
sbb
in
dec
mov
mov
sub
jo
pop
jmp
ret
scas
adc
cwtl
push
pop
and
add
jae
jmp
nop
ja
add
sub
jecxz
push
xchg
lahf
mov
shl
inc
fwait
js
out
or
decb
push
mov
xchg
in
ja
mov
int
iret
call
jmp
loope
push
and
faddl
sub
add
xor
mov
add
je
pop
jb
mov
fcmovnb
or
xor
push
repnz
mov
sbb
and
iret
dec
imul
mov
lods
out
xchg
xor
jae
repnz
out
pop
xchg
push
aam
mov
aad
jge
inc
and
fidivrl
mov
pop
leave
cmpsb
pop
xchg
xchg
lret
jecxz
testb
data16
pop
add
int3
std
jl
scas
add
aas
push
xchg
pop
dec
mov
and
pop
and
jb
pop
mov
mov
sbbl
mov
into
mov
rcl
out
ficoms
icebp
xor
xor
sbbl
dec
iret
adc
inc
out
pushf
mov
and
int3
andb
mov
dec
and
mov
dec
mov
mov
or
sbb
sub
call
cmp
popf
push
loop
loope
mov
lods
fwait
xor
mov
and
std
inc
out
sbb
mov
dec
test
jg
loope
xor
jb
mov
mov
adc
movsb
les
mov
sbb
enter
mov
add
mov
and
out
mov
dec
and
sti
adc
nop
ret
or
test
fcmovb
dec
sub
and
dec
jmp
or
mov
fiadds
pushf
inc
orb
incb
arpl
cmp
das
jbe
mov
push
sub
dec
add
adc
dec
xchg
mov
mov
pusha
enter
dec
pop
dec
xchg
in
sti
jne
fcmovb
in
xlat
lret
imul
inc
repnz
loope
enter
fisubs
stc
test
jmp
std
rclb
ret
daa
mov
rcrb
pop
aaa
mov
mull
icebp
fldcw
mov
xchg
bound
cmpsb
stc
jmp
add
lret
jg
repz
mov
das
jmp
sbb
out
ret
push
jmp
out
push
out
in
fs
push
outsl
out
insb
and
jmp
movsb
cltd
xchg
jo
mov
mov
out
fs
or
stos
cmp
loop
fisttps
gs
xchg
dec
scas
and
scas
mov
jmp
jae
test
das
push
or
fisubl
je
pop
mov
mov
lcall
sbb
outsl
jns
adc
xchg
ss
es
xor
test
pop
movsb
mov
or
mov
int
pop
arpl
jns
push
subb
cmpsl
int
pop
adc
xchg
lods
ljmp
jne
adc
push
add
push
or
jle
or
stos
stc
push
loope
sub
rcl
xor
lods
clc
xor
pop
movsl
inc
inc
repz
out
mov
js
and
lret
clc
in
test
lret
pusha
push
mov
adc
jae
and
cmp
mov
fidivl
outsl
mov
das
jne
loopne
sub
cwtl
mov
fwait
mov
and
and
cli
cmp
popa
repnz
out
mov
test
jge
xchg
popa
cmp
out
xor
nop
orb
out
push
and
adc
mov
fstpt
lods
push
xor
add
ss
dec
shrl
std
lcall
cs
push
fsubl
jae
aaa
dec
loop
popf
sub
push
mov
ljmp
data16
pop
adc
loop
sub
int
insb
pop
fstl
movb
aaa
push
dec
lcall
addr16
mov
icebp
flds
scas
movb
mov
pusha
dec
imul
js
insb
mov
sub
test
outsl
fidivrl
scas
mov
in
and
test
dec
aam
repz
out
fwait
cld
test
inc
test
mov
jle
jmp
pop
aam
jge
pop
loop
xor
pop
f2xm1
pop
push
test
jecxz
lds
pusha
je
mov
jb
inc
int
aam
dec
push
pop
aad
iret
sahf
clc
sarb
mov
in
add
iret
js
mov
pop
cmp
dec
push
test
int3
pop
pop
mov
in
imul
js
adcb
sbb
iret
popa
push
fldt
pusha
mov
mov
inc
push
push
pop
out
adc
mov
dec
jmp
dec
sub
and
repz
adc
mov
arpl
fiaddl
and
jg
loop
pop
xor
inc
test
bound
sbb
or
or
sbb
xchg
xor
xchg
dec
fistpll
repz
div
and
sub
xchg
sub
push
cmp
push
add
dec
sbb
lods
mov
inc
mov
pop
fwait
xchg
jo
xor
mov
fcoml
lret
mov
jo
xchg
movl
adcb
cwtl
jbe
in
dec
enter
push
std
stos
xchg
lret
mov
bound
and
xchg
mov
insb
shll
jmp
and
pop
jno
add
mov
lret
add
push
aaa
xchg
sub
lds
subl
adc
mul
jmp
fxch
push
add
xchg
jae
mov
subb
cmp
inc
dec
js
mov
sarb
aad
dec
xor
jmp
mov
or
push
xor
jb
push
and
mov
les
cmpsl
ret
mov
xchg
jg
dec
add
jge
xlat
lret
mov
cmp
gs
std
and
paddq
push
push
les
pop
push
in
pop
test
insb
mov
inc
ret
call
in
imul
cli
lods
push
inc
cmp
dec
bound
dec
mov
inc
clc
cmp
add
push
dec
aaa
or
repnz
mov
jnp
cmpsl
xor
sub
ds
xor
sarl
mov
js
or
xor
pop
sub
ljmp
imul
arpl
lock
adc
nop
push
and
call
xchg
inc
jp
pop
mov
mov
mov
pushf
addl
mov
push
lods
lret
test
push
push
xor
out
xchg
push
in
push
add
pop
mov
jl
push
sbb
push
xor
les
testl
bound
movsb
fnstcw
push
mov
push
ret
pusha
push
inc
adc
xchg
jbe
mov
sbb
stc
fsts
xor
fnstsw
hlt
ja
add
movsl
addr16
ja
jnp
stc
je
mov
and
sub
and
outsb
popf
fucom
sub
push
or
push
add
daa
fstps
cs
pop
fnstsw
in
icebp
cmp
sbb
xor
jae
jle
fcoml
repz
in
enter
leave
scas
or
add
das
push
cmp
mov
out
mov
sbb
hlt
scas
dec
pop
les
mov
cwtl
into
inc
out
push
cmp
dec
mov
jecxz
push
and
and
sbb
sub
cmpsb
data16
sub
and
mov
and
push
mov
outsl
int
movb
sbb
roll
adc
xor
jle
divb
cmp
jl
xor
push
fs
dec
scas
add
dec
out
mov
mov
enter
fstps
sub
jb
in
popa
mov
call
or
jmp
sub
fisubrl
mov
nop
lret
pop
mov
jp
jle
into
pop
xchg
sarb
inc
or
xchg
psubq
jmp
mov
inc
test
sub
sbb
mov
sbb
cli
outsb
inc
mov
mov
xor
sbb
jge
or
and
ds
cmp
inc
sub
lcall
adc
ljmp
test
cmp
cmp
push
aaa
adcb
stc
sbb
xchg
push
jo
push
push
mov
popa
inc
jg
add
add
jns
daa
into
sbb
dec
mov
mov
jg,pt
sbb
int
dec
jnp
jo
xchg
das
mov
pop
dec
ja
jp
xchg
or
int3
orl
mov
arpl
fbld
jmp
test
cmp
jp
sbb
mov
cmp
insl
and
cltd
push
inc
mov
aam
pop
pop
cmp
std
shrb
jl
nop
sbb
std
push
into
ja
xorl
mov
fwait
gs
ds
or
scas
popl
clc
lods
xorl
dec
daa
repz
rorl
int3
rcll
xor
xchg
insl
flds
pop
sbb
fnstsw
mov
and
inc
jp
loope
movsl
mov
insl
mov
adc
mov
pop
pop
dec
jbe
cmp
jmp
jp
in
sub
mov
call
xchg
add
jno
dec
fimuls
xchg
fdivl
pop
icebp
inc
and
cli
rcr
hlt
gs
fistpll
out
sti
fisttpl
jns
push
rcr
adc
filds
jnp
mov
lcall
fistl
popa
fwait
mov
xchg
cmp
sub
or
cmpsb
or
mov
xchg
rol
movsl
dec
or
ljmp
mov
popa
xchg
or
mov
lods
imul
jecxz
sbb
mov
sbb
pop
sti
or
test
into
cli
pop
jg
pop
into
dec
sbbb
cmpsb
andl
sub
fcmove
test
inc
mov
sbb
pop
stos
fs
adcl
mov
xor
cmp
sti
test
adc
movsb
mov
push
filds
sub
call
iret
jecxz
sub
jecxz
clc
xchg
or
and
dec
adc
pop
pop
int
push
int
fcom
gs
xchg
dec
pop
lret
sti
imull
or
or
mov
cs
xor
outsb
dec
jnp
jle
add
xor
call
rcrb
enter
in
punpckhbw
inc
imul
pop
cmpsb
inc
arpl
iret
jle
mov
or
xchg
insb
pop
adc
cmp
jb
xchg
xor
out
mov
fstps
and
das
mov
dec
jns
das
inc
mov
decb
shlb
mov
cmp
or
jle
pop
repnz
pop
out
mov
push
mov
inc
pop
daa
and
adcb
movsl
les
das
sti
loope,pn
or
sahf
sub
cli
push
shrb
mov
int
sub
stc
mov
lahf
cmpb
loop
or
das
mov
pop
fadds
scas
aam
or
int
in
sbb
and
sbb
fidivs
rclb
mov
push
pop
push
add
push
adc
adc
sub
add
mov
push
mov
cs
xchg
inc
xchg
scas
repz
adc
popa
xor
mov
sbb
outsl
mov
repz
test
fcoms
jns
push
lahf
lret
cmpsl
mov
push
in
test
test
push
push
call
inc
shll
shlb
xor
or
inc
pusha
stos
stc
add
rorb
loope
pusha
add
stos
push
ds
sbb
jecxz
dec
into
xor
shlb
mulps
cmp
cmp
pop
mov
subb
xchg
les
inc
lahf
js
shrb
jp
add
dec
lods
adc
mov
and
push
loop
cmp
inc
dec
fcmovnb
repnz
fs
xchg
pop
aam
xchg
gs
xchg
mov
adc
add
xchg
sub
jmp
mov
push
sub
inc
dec
jbe
mov
movsb
mov
push
and
gs
cltd
and
cmp
pop
fcompl
xchg
sbb
shlb
std
mov
lret
sub
out
addr16
xchg
test
fisubl
adc
movsl
jae
int
push
dec
out
xchg
xchg
daa
cmp
stos
mov
pop
nop
inc
movsb
dec
ror
cmc
or
shl
cmp
popf
lahf
subl
loope
xor
mov
push
pop
lea
push
cmp
into
or
push
dec
cmpsl
mov
push
movsb
ljmp
outsb
sbbb
iret
mov
ja
adc
mov
add
jl
imul
mov
rcr
int
jge
push
push
pushf
mov
out
push
dec
sbb
pop
pop
sub
cmp
icebp
aad
ss
or
push
data16
cltd
push
pop
jno
mov
sub
lock
jge
imul
ss
jg
cmp
cli
inc
addb
pop
jne
push
mov
mov
xchg
cwtl
sbb
jle
stos
adc
das
mov
jne
pop
movl
lret
popf
mov
cmp
dec
in
lfs
sti
jle
cltd
xchg
stos
cmp
jmp
xchg
add
adcl
fwait
out
pop
addl
xchg
push
mov
inc
adc
sub
adc
and
lea
ror
fisttps
std
test
push
fcoml
pop
jl
clc
mov
jmp
jle
inc
lahf
add
sbb
mov
add
mov
push
and
cmp
mov
out
repz
sbb
adc
or
pop
adc
and
mov
loop
in
test
or
dec
push
inc
clc
cmp
lahf
xchg
adc
mov
fstl
lds
bound
push
or
ficoml
imul
pop
ret
insb
hlt
test
and
push
aam
out
js
sbb
sub
or
and
idivl
cmp
sbb
xor
and
aad
call
push
mov
pop
rclb
inc
push
lods
loope
insl
shll
push
outsb
inc
mov
lcall
sub
fmul
ret
clc
imul
pop
aaa
adc
adc
ds
lock
mov
jge
or
loope
es
adc
test
out
clc
fistps
into
incl
sbb
jbe
or
ss
cmp
scas
jg
mov
into
cs
adc
mov
loopne
mov
adc
imul
adc
hlt
jle
pusha
imul
pop
arpl
hlt
lret
fwait
cmp
adc
xchg
mov
scas
push
lea
jg
bnd
jno
mov
lret
adc
cwtl
jmp
push
inc
xor
ret
cmp
cmp
cmp
subl
cmpsb
or
adc
push
pop
imul
push
or
loopne
scas
jb
inc
jmp
lods
shrb
push
xchg
mov
dec
std
mov
pop
xchg
lods
scas
mov
xor
pop
sbb
sbb
pusha
sbb
sahf
sub
mov
sar
pop
stos
stos
mov
push
pop
pop
xchg
fdivl
sahf
das
sub
or
stos
in
loopne
mov
aas
nop
pop
or
repz
push
mov
xchg
mov
sbb
movsl
je
fildll
shrl
sub
cmpsl
push
and
mov
or
sbb
test
add
add
push
cmp
cli
jecxz
adc
cmp
data16
push
xchg
inc
rorl
mov
in
lahf
sub
sbb
jb
add
push
add
ret
adc
test
pop
lahf
adc
or
add
adc
mov
arpl
cmp
je
lea
mov
shll
cmp
out
fdivs
sub
sbb
xor
or
stc
adc
push
jmp
fwait
stos
mov
aam
lds
loop
dec
xchg
push
mov
mov
mov
lea
clc
and
lock
ja
sbb
popa
lods
rcl
imul
xchg
mov
mov
xchg
clc
add
std
lods
jbe
and
or
ret
jmp
adc
jp
cld
pop
cld
push
push
mov
pop
hlt
test
sti
divl
les
sub
xor
adc
out
lcall
aad
lods
sub
mov
cmp
out
cmp
fldenv
mov
xor
inc
outsb
push
push
push
dec
in
dec
ror
dec
add
sbb
and
ret
jmp
pushf
lcall
inc
sub
mov
pop
mov
adc
sub
push
and
push
rcll
jo
les
pop
in
jno
xchg
xlat
jns
and
push
fsubl
loope
ret
mov
push
adc
test
pushf
inc
inc
jl
orb
mov
lods
and
dec
dec
and
out
xchg
jns
loope
sub
sub
out
ja
mov
rclb
add
ret
xlat
cmp
ss
enter
and
loopne
inc
movsl
insl
mov
das
in
mov
rcrl
inc
popf
xchg
dec
jns
jmp
xor
jb
idivl
xchg
dec
xchg
cmpsb
push
sbb
xchg
ret
dec
outsb
xchg
add
movsl
addl
mov
and
lret
pop
sbb
cmp
shlb
lods
icebp
xor
stc
and
push
jecxz
test
mov
lds
stos
jno
push
sub
ficompl
or
pop
cwtl
movl
add
jge
pushf
jmp
ffree
cmc
call
cmp
push
test
scas
nop
test
pop
mov
xchg
mov
mov
icebp
lret
xor
testl
adc
imul
and
fsubs
add
movsl
aaa
mov
add
xor
lods
inc
sub
adc
scas
mov
sub
add
push
ret
ret
jns
or
push
push
std
dec
test
ret
push
in
xlat
sub
jae
mov
jae
cmpb
scas
sbb
or
jl
push
mov
incb
sbb
aam
pop
push
repz
or
and
or
xchg
mov
xor
jno
xor
mov
rcrb
xchg
out
pop
mov
fildl
test
jbe
push
pop
adc
mov
nop
xchg
xor
or
dec
sbb
mov
xor
sbb
xor
cmp
cmc
pop
insl
scas
inc
or
lret
cmp
out
mov
add
lods
xor
and
sub
pop
and
shlb
sub
popf
out
in
push
dec
testb
ret
adc
mov
fsubr
pop
ret
xchg
push
cmp
mov
inc
pop
mov
xchg
fldt
xchg
fcoml
xchg
in
mov
xchg
mov
loope
jnp
xor
jl
in
sarb
push
pop
mov
xor
hlt
and
pop
jge
pop
mov
push
inc
inc
or
lds
fildll
out
inc
loope
pop
cli
into
aaa
daa
cltd
cmp
popf
subl
imul
pop
dec
mov
push
xchg
in
jp
cmp
push
enter
and
xlat
push
sub
das
popa
lock
mov
inc
or
pop
pop
xlat
pushf
ret
push
push
sbb
inc
sbb
or
add
std
or
add
dec
into
cmp
icebp
dec
std
adc
ds
das
and
lret
jmp
sbb
cmp
mov
mov
push
ret
pop
add
push
out
and
mov
mov
js
test
jne
xor
and
push
ljmp
jne
mov
into
test
sahf
xor
mov
mov
lods
pushf
xchg
xor
stos
shrl
in
adcl
stos
loope
in
mov
out
ror
insl
stos
mov
mov
lret
fsubrs
shll
sbbb
or
in
mov
fdivs
add
or
js
inc
aad
movsb
xor
xor
jl
add
shlb
add
jne
adc
das
ss
xor
and
fbstp
jp
pusha
les
sub
mov
fistpll
das
push
push
iret
js
jle
addl
push
cmp
mov
mov
pop
cs
lahf
out
push
jns
cmp
adc
mov
ja
adc
push
mov
inc
gs
sub
jae
mov
shlb
fwait
testb
inc
loopne
clc
pop
test
xchg
imul
sub
push
repz
ficoms
sub
testl
dec
sub
daa
push
cmp
mov
push
lret
test
lret
add
pop
pusha
push
and
mov
pop
clc
sti
add
and
xchg
push
movsl
sbb
pop
mov
arpl
inc
sti
jle
cmp
daa
cltd
mov
sbb
sub
push
add
dec
push
lds
or
sbb
outsl
enter
cmc
xor
aam
out
cmc
rcrb
jl
addb
push
fwait
incl
pop
iret
int3
dec
jne
shrb
sub
imul
shll
repnz
cld
dec
mov
push
in
xchg
fsubrl
xchg
jmp
jae
addr16
sti
into
movsl
push
add
in
xor
lds
lcallw
out
xchg
mov
push
xchg
cmp
rclb
test
vmwrite
imul
in
mov
cwtl
sub
aas
mov
jle
and
jp
cs
push
mov
loop
lds
fidivs
out
and
mov
orl
lock
in
mov
ret
aam
jo
les
and
push
in
imul
imul
jl
in
push
mov
rcr
fadds
xor
mov
ja
testb
mov
cmc
fwait
mov
fbstp
mov
push
loop
call
int
pop
mov
lods
jo
leave
scas
loope
xchg
mov
jle
cli
shl
mov
ds
aaa
mov
lods
jg
dec
imul
test
jo
sub
mov
test
cwtl
mov
inc
or
popf
aaa
or
sbbb
inc
xchg
sub
pushf
push
aaa
mulb
xchg
cmp
test
jge
jp
fisttpll
adc
outsl
cmp
push
sbb
xchg
fs
popa
or
jmp
fiaddl
xor
aam
std
inc
ja
pop
shlb
fdivrl
or
lret
jns
test
lds
jbe
lods
aad
jmp
aad
shr
stc
dec
mov
cld
test
out
push
shll
mov
mov
or
sbb
roll
jb
fisubl
mov
and
out
sbbl
hlt
adc
and
je
jmp
and
pop
push
push
insb
sbb
hlt
test
aam
push
mov
or
shll
daa
mov
add
xchg
fimull
ficoms
divb
cmp
push
mov
sub
stc
icebp
lds
push
scas
push
pop
inc
inc
mov
mov
ret
arpl
insl
out
es
pop
push
jns
pop
and
mov
ds
xchg
and
clc
pop
dec
fistl
out
out
add
mov
fnstcw
lds
test
pusha
loopne
shlb
inc
xor
cmp
jno
shrl
sub
sahf
adc
lods
sarl
fs
lcall
push
enter
push
lods
and
test
test
in
popa
pause
mov
sbb
mov
dec
xchg
iret
out
sub
fiaddl
mov
pop
xlat
jp
add
mov
in
dec
xchg
fimuls
popf
test
dec
add
jmp
sub
movzwl
mov
jle
xchg
pop
fwait
out
mov
nop
lock
xor
jge
aam
and
in
popf
jge
xor
cmp
jae
aas
jns,pt
fsub
das
mov
add
mov
ror
test
mov
dec
and
push
icebp
scas
dec
and
pusha
lcall
mov
mov
ljmp
clc
pop
mov
imul
adc
imul
or
add
movsb
pop
jmp
enter
or
jecxz
dec
sbb
push
xchg
in
cli
inc
push
add
push
jmp
push
or
insb
adc
or
in
and
out
insb
dec
cmpsl
addr16
pop
pop
sub
push
scas
jo
sarb
shll
mov
inc
idiv
imul
pusha
sub
and
pop
clc
fimull
mov
fs
add
xlat
mov
shlb
inc
gs
ds
mov
scas
ja
mov
and
pop
cld
ret
call
xchg
in
inc
dec
jb
pushf
push
inc
pushf
push
pop
orl
cmp
push
add
push
pop
xchg
outsb
sub
loop
outsl
adc
sbb
push
das
pop
sbb
push
in
rolb
movsl
mov
sbb
jecxz
inc
leave
sbb
movsl
lock
push
lods
inc
sti
stos
mov
fsubrl
cwtl
into
or
mov
push
adc
xchg
outsb
hlt
push
inc
sti
mov
jp
mov
xchg
dec
sarl
test
out
cmp
inc
mov
fs
in
cmp
jbe
fisubrs
popf
mov
cmpsb
push
loop
or
mov
dec
xor
mov
shl
int
pop
add
mov
in
pop
mov
insb
xchg
mov
pop
inc
in
cltd
xchg
movsb
stc
bound
lret
ljmp
jmp
stos
add
int
lea
or
aad
push
dec
sahf
pop
push
and
lods
test
test
scas
cmp
hlt
push
rcr
sub
sbb
outsb
test
cltd
mov
mov
insl
push
loopne
adc
jge
push
mov
mov
cwtl
adc
xor
lds
sub
or
dec
xchg
push
and
rcrl
pop
inc
arpl
xor
xchg
pop
pop
cltd
cmpsb
xchg
in
nop
out
xor
pop
add
sbb
leave
mov
push
jnp
arpl
push
pusha
and
sub
mov
push
or
cmpsb
mov
in
cmpl
xchg
adc
and
nop
or
inc
test
mov
inc
ret
push
movsl
ss
push
mov
inc
fldl
jle
subl
push
pop
test
cmp
test
mov
lcall
dec
fidivs
mov
adc
inc
in
sub
sbb
mov
call
mov
shrb
enter
stos
sub
mov
add
mov
dec
movsb
out
mov
xor
imul
popf
test
or
mov
jns
push
and
adcl
lea
push
xorl
ffreep
lods
xchg
adc
stc
cmp
fldenv
mov
dec
shl
popa
push
lcall
stos
xor
sub
int
fisttpl
push
lea
pop
test
mov
mov
repz
mov
mov
xchg
inc
pop
pop
fdivs
cmp
dec
aam
jnp
mov
stos
repnz
mov
cwtl
lcall
push
pop
subb
pop
xchg
movsb
in
lea
dec
aas
push
loopne
dec
mov
inc
xchg
ja
push
aam
hlt
mov
lret
jmp
cli
push
cmc
adc
fistpll
adc
mov
les
sbb
fstl
lret
repz
mov
popf
cs
cmp
mov
jno
jae
in
and
adc
mov
sbb
jno
mov
inc
nop
insl
push
mov
orb
lahf
clc
mov
adc
lret
ss
dec
lret
inc
and
cmp
fiadds
jo
sbb
inc
call
xor
ja
repz
and
ret
dec
adc
popf
ret
pop
sti
jecxz
xor
popa
fs
inc
test
inc
add
cmp
add
das
dec
adc
leave
mov
sub
js
into
imul
mov
scas
sahf
push
fildl
lods
loop
xchg
movsl
aaa
mov
roll
in
push
or
mov
hlt
test
mov
loope
loop
cvtps2pd
lock
inc
pop
pand
dec
mov
mov
pop
fwait
dec
out
fidivrs
call
jp
jae
sbb
pop
sarl
push
push
ss
ss
jg
leave
jmp
lock
push
adc
into
mov
fsubrl
adcl
in
pop
push
mov
adc
sub
insl
sbb
mov
fs
lods
out
or
sub
mov
and
lock
cmp
mov
cmc
clc
mov
pop
call
add
mov
jnp
xchg
add
pop
push
fcoms
pop
push
lds
xchg
cs
mov
aas
sahf
test
popa
std
insb
jne
mov
mov
aam
rcrl
lret
or
add
jns
addr16
jg
dec
adc
mov
jb
dec
stc
xchg
fildll
dec
jg
les
lret
cmpsl
pop
insl
pop
pop
jnp
adc
imul
clc
repz
push
aad
jle
scas
sub
shll
incl
dec
repz
jg
dec
stos
hlt
mov
adc
repz
imul
cs
call
nop
pop
jnp
imul
test
dec
mov
nop
jg
sub
js
cmc
cld
je
lret
daa
dec
jns
imul
push
xlat
arpl
loope
jb
add
xchg
jnp
jno
scas
dec
and
je
lock
ss
lea
fcmovbe
cmp
arpl
xor
jecxz
or
push
mov
push
cmp
mov
pushf
sub
lock
ljmp
and
or
loop
jne
push
cld
leave
jg
shl
xchg
aam
xchg
out
inc
aas
xor
sbb
pop
sub
sbb
mov
jb
sub
push
xchg
sbb
or
outsb
add
imul
fsubs
aam
addr16
inc
jecxz
jmp
fdiv
mov
add
sbb
mov
jle
mov
mov
in
test
mov
and
outsl
jb
jmp
lods
adc
mov
outsb
js
lahf
cmpsl
cli
adc
pop
and
test
lcall
pop
push
sub
fsubrs
ljmp
mov
mov
outsb
test
and
or
mov
mov
push
int3
dec
push
adcb
cli
divl
jge
ss
xchg
int
sub
cmpsb
cmp
lock
mov
add
mov
sbb
addr16
popa
cmc
cmpsb
jo
mov
pop
jb
jmp
rcrb
jmp
cmc
gs
add
pop
aas
pop
ret
cmp
stc
js
or
pop
add
sti
jb
jnp
mov
int3
pop
jle
and
mov
outsb
sti
fidivs
rorb
inc
mov
dec
xchg
lret
test
mov
imul
mov
sub
arpl
or
fcoml
cltd
test
and
in
lret
repz
lahf
mov
fisubrs
xchg
xchg
daa
scas
aad
mov
jge
popa
je
xor
aam
lea
std
jb
xchg
jp
fstl
sub
lahf
loope
insl
fcoms
and
aaa
out
fs
dec
pavgb
cmpsb
pop
cmp
inc
mov
loop
jbe
sub
or
pop
lods
cwtl
push
iret
mov
cmpsb
call
dec
cld
cmp
mov
or
std
nop
jnp
cmpsb
xor
rep
mov
fbstp
lret
add
mov
mov
xor
cli
js
push
dec
inc
sbb
adc
flds
popa
es
js
adc
jae
sub
and
dec
or
adc
rcll
inc
clc
pop
xchg
mov
in
xchg
add
cs
sbb
pop
or
adc
test
enter
adc
sarb
sbb
aad
cmpb
add
loopne
in
push
scas
pop
sbb
cmp
bound
push
sbb
inc
out
jb
out
pop
cmc
jae,pn
dec
pushf
and
ret
ja
jg
outsb
sub
leave
jne
xchg
jp
lret
insl
cmp
in
and
test
out
loope
scas
push
shll
xor
push
cmp
fwait
mov
pop
mov
sbb
push
in
fs
mov
jne
xor
aad
pop
cs
jge
or
add
sbb
rcrb
sahf
popf
in
ljmp
cmp
cmp
xor
jmp
add
shll
xchg
jl
stos
movsl
jecxz
ss
pop
jno
arpl
cmp
mov
and
add
sbb
ret
sti
sub
mov
xor
stos
mov
test
inc
int3
xchg
dec
movsb
cmpsl
inc
out
int3
out
call
xchg
fistl
shll
int
push
lock
popf
in
mov
inc
sub
jg
pop
pushf
loope
push
push
dec
mov
cmp
jp
ret
mov
cli
mov
fimuls
shll
rcll
xor
push
imul
mov
adc
mov
jno
adc
mov
movsl
xchg
push
movsb
cmp
aaa
pop
cmpsb
cmp
aas
orl
xchg
push
xor
pop
dec
sbb
sub
and
pop
pop
or
arpl
popl
pop
icebp
push
mov
insb
in
shll
fs
adc
int
loop
or
sub
and
jb
pop
dec
out
cmpsb
pop
cmc
out
add
inc
xchg
inc
push
mov
xchg
or
adc
lea
and
lahf
sbb
cmpsl
push
rorb
jmp
lock
stc
cmp
push
mov
ficoml
cmp
cmpb
lds
or
das
test
clc
aas
movl
xor
fiadds
jne
xor
mov
incb
adc
and
enter
jno
into
pop
cltd
or
push
pop
movsl
test
or
or
loopne
cmp
pop
cmc
push
popa
jbe
loope
out
lret
adc
xchg
jge
add
movsb
push
mov
inc
repnz
sub
sub
mov
pop
orb
push
jl
fidivl
hlt
push
xchg
in
add
mov
mov
popf
test
adc
enter
dec
enter
lods
or
in
aas
add
jl
inc
mov
inc
and
fists
mov
mov
adc
cmp
pop
out
icebp
sbb
in
outsl
push
pushf
dec
adc
es
sbb
push
jno
xor
lahf
mov
popf
dec
xchg
out
mov
hlt
pushf
xor
lret
cmp
inc
add
test
shll
ret
mov
xchg
icebp
scas
sub
mov
xchg
inc
inc
lret
arpl
jne
iret
es
pop
js
outsl
imul
es
aam
addb
stos
out
mov
push
popa
pop
loopne
leave
push
imul
stc
pop
jl
mov
je
inc
xchg
mov
push
jno
xlat
xchg
sbb
fwait
mov
cmpsl
inc
int3
mov
pop
xlat
fidivrl
mov
xor
hlt
pop
test
jle
mov
push
fcoms
pop
add
aaa
lcall
fs
and
lods
arpl
in
dec
lods
mov
mov
mov
js
xor
ss
aad
jmp
in
or
pop
add
jbe
addr16
lcall
mull
mov
addr16
pop
mov
adc
cwtl
in
loope
push
cmp
adc
jbe
mov
mov
jns
jecxz
cltd
arpl
test
popf
xor
loopne
cmp
jae
dec
mov
pop
sbb
leave
in
cmp
jl
lods
xchg
or
lods
mov
test
int
mov
mov
arpl
sub
and
and
es
inc
lea
mov
rclb
in
or
shll
sub
daa
aaa
push
in
enter
mov
shrl
inc
and
add
mov
adc
push
test
insl
xchg
push
jge
insb
shrl
call
aam
and
pop
rorb
cmp
cmc
ret
outsb
fsubl
fmulp
int
xchg
addb
pop
rorb
lock
jb
int
push
sbb
sub
cld
sbb
mov
out
lock
inc
insl
push
test
mov
add
cmp
fimull
fidivrs
into
adc
arpl
int
in
insb
xchg
cmc
in
ljmp
sub
nop
pop
dec
imul
ret
leave
adc
jg
mov
dec
jecxz
sub
repnz
pop
add
sahf
neg
mov
jp
popa
and
adc
out
jl
in
shrb
adc
repnz
cmp
or
aam
mov
lea
out
repz
outsb
cltd
jae
cmp
pop
mov
fsubrp
daa
test
cmp
into
mov
shll
add
adcb
inc
daa
sbb
scas
or
push
outsl
dec
sub
xor
push
jg
fstpl
nop
lods
dec
and
mov
aad
jb
movsl
iret
sbb
jl
cs
scas
dec
rolb
mov
aad
ja
or
xchg
cltd
aam
cmp
subb
stos
mov
sbb
mov
fisubrl
iret
adc
repnz
mov
sar
jns
cmpsb
adc
jp
mov
into
ds
jge
inc
push
xchg
and
or
adc
pusha
icebp
ret
daa
int
pop
into
mov
push
repnz
dec
ss
mov
sub
inc
mov
jge
in
inc
xchg
jo
push
mov
out
mov
test
jnp
xor
sub
in
adc
arpl
push
fists
addl
or
mov
xor
xor
out
push
movsl
jge
das
fsubrl
cmp
subb
xorl
enter
mov
lock
aad
outsl
adc
jmp
jl
icebp
lahf
lods
xor
push
rol
xor
sbb
int3
rorl
mov
test
jns
xchg
mov
mov
into
jbe
jae
dec
mov
mov
sbbl
mov
jnp
idivl
int
jns
lea
imul
clc
int
subb
cmp
dec
adc
mov
pop
cmp
jbe
or
cmpsb
test
push
in
shlb
or
cmp
or
arpl
aas
bound
cmc
mov
push
jg
jmp
fnsave
cmpsb
push
incl
mov
sti
sbb
subb
faddl
xor
loopne
mov
adc
test
cwtl
mov
mov
adcb
mov
xchg
fisubl
cltd
sub
add
mov
ds
fisttpll
or
xchg
in
xor
push
stos
insb
pop
ja
push
lods
mov
lods
fwait
mov
lcall
or
inc
jg
inc
fwait
and
mov
lods
ja
push
fidivrs
adc
iret
orl
inc
test
and
adc
mov
xor
cmpsb
add
cwtl
sbb
jb
mov
mov
adc
test
adc
jg
jge
push
or
outsb
dec
push
or
xor
sub
jbe
dec
cwtl
nop
cmpsl
test
cmpsb
cmp
jne
pop
imul
xchg
shll
and
mov
aaa
cld
cltd
flds
sbb
dec
mov
or
aas
push
fsubl
call
xlat
adc
jmp
mov
fs
aam
cmp
fwait
sbb
mov
mov
cmc
movsb
jnp
push
xor
es
fnstenv
cmp
adc
scas
js
cli
sbb
lcall
sub
cvtps2pi
mov
fstl
movsl
dec
dec
stos
xor
mov
pop
sahf
pop
je
cltd
test
ret
xor
fsubr
pusha
mov
and
and
xor
push
dec
inc
loop
fnstsw
mov
mov
repz
sbb
push
xchg
out
add
inc
in
dec
nop
add
loop
hlt
dec
cltd
mov
fadds
outsl
test
and
pop
int
jno
rol
sbb
arpl
lahf
dec
sbb
mov
in
push
addr16
ja
inc
jns
xlat
js
arpl
in
push
xchg
mov
jg
xchg
push
movsl
sub
popa
jno
sbb
movl
cli
mov
adc
bound
cmp
cwtl
xor
push
add
test
imul
imulb
fidivs
mov
xchg
push
pop
cmp
rorb
jns
in
aas
pop
add
in
inc
test
or
mov
into
pop
es
dec
push
push
push
stos
cmp
mov
lcall
push
push
jb
incl
mov
xchg
mov
push
jle
and
mov
mov
dec
or
sbb
add
int
in
xchg
or
aas
xchg
push
stos
rorb
sub
out
add
mov
inc
xor
and
pop
por
insb
cmc
jne
dec
adc
cmpsb
inc
add
mov
repnz
icebp
push
je
out
cmp
addr16
enter
repz
jo
adc
mov
xlat
cmpsl
or
cmp
loope
cmp
jnp
shlb
mov
out
mov
xor
cmpsl
in
or
cli
jb
ss
das
out
lods
js
push
loopne
imul
daa
imulb
fnstenv
inc
rcr
orb
jb
fcom
mov
ja,pn
iret
add
push
and
mov
xchg
mov
mov
repz
and
loop
fs
outsb
ss
cli
mov
popf
adc
and
insb
mov
sbb
xor
iret
imul
sbb
aam
cmp
lods
xor
sarb
jbe
cmp
cmp
mov
cmp
jo
push
and
xlat
out
dec
jle
idiv
inc
xchg
mov
mov
in
and
add
and
es
and
rcrb
repnz
cmc
xor
ds
push
sub
mov
inc
pop
adc
sub
cmp
clc
jns,pt
xor
mov
push
mov
and
mov
cmc
fwait
rclb
dec
mov
sub
aam
adc
cmpsl
cmp
xchg
or
loope
ror
pop
scas
out
loopne
jns
loopne
mov
cmp
jb
add
sbb
xchg
or
jo
and
ja,pt
and
xlat
jg
pop
mov
xchg
call
mov
xor
mov
cwtl
std
repnz
out
arpl
inc
pop
stos
mov
jbe
jl
je
mov
subl
adc
and
push
icebp
stc
mov
xchg
nop
cvtpi2ps
addl
dec
divb
push
jbe
push
xor
inc
dec
aad
std
xor
subb
orl
sbb
push
pop
sub
push
push
lret
stos
pop
mov
push
nop
sti
fsubr
add
dec
and
jge
test
push
movsl
pushl
into
fs
aas
out
add
call
jecxz
orb
and
inc
cld
pop
gs
jne
lds
sub
lret
pop
jp
repz
sbb
je
in
lds
mul
in
push
cmc
sti
mov
daa
inc
inc
mov
das
cmpb
cmp
inc
test
loop
mov
int3
sub
fwait
int
jae
fildll
cmc
fildll
xor
adc
cwtl
mov
mov
push
pop
inc
cmpsb
mov
mov
mov
push
xor
aam
out
add
test
xlat
adc
in
push
adc
stos
and
cs
jns
push
daa
jmp
in
test
jns
push
and
notb
enter
inc
dec
negb
inc
inc
clc
ja
lods
stos
and
sti
sbb
out
wrmsr
add
mov
leave
fadds
shr
lock
or
out
cmp
adc
cmpb
scas
cmp
and
push
add
xor
adc
ja
push
leave
cmovl
rol
call
scas
stc
jne
repnz
or
jl
cmp
je
mov
mov
jno
stos
idivl
xor
pusha
dec
sub
outsb
lcall
mov
pop
add
sbb
mov
mov
hlt
xorb
repz
mov
popl
or
pop
icebp
or
icebp
roll
xchg
mov
xor
ds
pop
flds
cmp
sbbb
push
lahf
jmp
push
leave
xor
fcomip
stc
push
mov
lea
and
fwait
lock
leave
or
push
fmul
sbb
inc
push
adc
cmp
std
cmp
dec
and
push
ret
or
jle
cmp
push
pop
js
in
rorl
sub
out
es
sub
in
lock
aaa
lret
loop
sbb
inc
mov
cwtl
mov
outsl
filds
lods
or
sub
stos
add
xor
cmpsb
sub
gs
test
push
in
aaa
mov
sti
jp
push
cmp
push
cmpsb
push
cmp
into
int
out
shlb
xor
iret
push
lods
ds
mov
arpl
mov
cmp
daa
rolb
in
lret
pop
lret
subb
xchg
shl
add
lods
xor
cmp
notb
pop
outsl
stc
fldl
jle
orb
pmullw
mov
push
enter
sbb
adc
sti
sub
pop
and
dec
mov
push
mov
cli
push
stc
inc
shll
in
or
das
pop
daa
call
pop
mov
and
popa
leave
scas
jle
cmpsl
outsb
xchg
inc
xchg
es
jp
jbe
and
xchg
mov
dec
push
adc
fxch
or
lret
ljmp
popa
mov
in
mov
cmpsl
xchg
sahf
inc
cmp
xor
jmp
sbb
gs
arpl
mul
inc
out
in
xchg
andb
pop
mov
jns
in
jge
jecxz
mov
mov
je
dec
push
xlat
fs
xlat
pop
push
sbb
aam
add
fwait
cmp
inc
ljmp
hlt
fmuls
filds
lcall
sbb
lret
dec
mov
enter
rorb
adc
dec
js
aad
sbb
cs
and
enter
aas
lahf
test
rolb
lods
mov
popa
mov
mov
shll
cmpsl
jno
push
pop
pop
jne
data16
lret
push
test
cmp
das
jnp
push
insb
int
push
and
into
or
dec
add
sti
xor
lock
cltd
bnd
je
dec
xchg
inc
stos
mov
mov
fdivrl
leave
mov
lcall
mov
mov
int3
int3
into
test
xchg
cmc
imul
mov
pop
repz
arpl
out
inc
mov
jns
fsub
stc
pop
sbb
dec
test
or
cmp
lret
cmp
lret
lock
push
test
popa
in
fisttps
adc
push
jmp
sti
or
pop
das
stc
sarb
jns
loope
test
mov
add
std
cmp
addr16
jnp
mov
push
pop
fisubs
inc
cmpl
lret
fisubs
data16
int3
icebp
mov
mov
pop
sub
cmp
lea
push
hlt
popa
push
jl
cmp
icebp
or
clc
out
push
loopne
add
mov
ja
dec
xchg
pusha
mov
jns
shlb
cmp
movsl
cltd
in
aaa
or
cmp
lods
out
pop
xchg
sub
jmp
imul
iret
inc
ret
call
subl
adcb
push
call
jae
mov
mov
pop
sbb
ror
decb
fxch
int
out
dec
mov
dec
or
das
mov
pop
addl
pop
repnz
arpl
sub
cltd
out
mov
int3
pushf
stos
sub
test
jno
cwtl
inc
adc
daa
cli
xchg
stos
ss
xchg
jle
push
stc
loopne
pop
or
dec
push
mov
inc
lcall
mov
rcrb
js
push
and
stos
fdivrs
sbbl
mov
int3
sbb
mov
in
lea
popa
aas
xor
bound
pop
loop
fnstsw
out
mov
inc
mov
cmc
mov
in
mov
insb
clts
jae
and
popa
adc
ret
xor
push
cmp
xlat
adc
jbe
xchg
mov
add
mov
adc
ljmp
mov
dec
repz
lock
mov
pop
xor
and
mull
ljmp
jp
cltd
jecxz
jg
lock
fwait
in
xor
and
pop
data16
je
aad
dec
ret
push
push
sub
cmpsl
or
mov
xchg
mov
jp
cmc
push
lret
pop
sarb
push
adc
sahf
int3
out
mov
pop
ja
insl
sbb
pop
sub
ret
sbbl
jmp
mov
aaa
xchg
cmpsb
xor
lds
ud1
xor
pop
cld
sarl
inc
dec
imul
xorl
adc
dec
cltd
mov
lcall
int
sbb
cld
fidivl
aad
mov
std
in
mov
pop
imul
sti
std
cltd
mov
jo
mov
insl
fs
out
jb
xchg
js
out
sbb
gs
sete
cmp
in
adcb
sbb
repz
cld
inc
push
repz
in
and
cmp
in
shlb
push
and
scas
and
lea
call
xchg
les
adc
test
push
or
cmpsl
iret
and
or
mov
push
push
lahf
sbb
lock
test
les
pop
xor
dec
iret
cmp
cmp
test
pop
subb
rolb
cmp
out
mov
mov
vpcmpeqb
into
mov
into
gs
repnz
js
aam
sahf
pop
inc
leave
or
ljmp
dec
ss
fwait
add
arpl
jno
dec
adc
dec
outsb
decl
mov
jg
xor
mov
scas
imul
ret
out
insb
jmp
bound
sub
test
and
sub
cld
repnz
mov
stc
insl
cs
bound
sbbl
stos
jne
and
insl
mov
xchg
and
popf
test
addr16
pusha
pop
add
cmp
inc
data16
jmp
cmp
ret
fisttpl
outsl
mov
pop
pop
jecxz
movsl
out
subl
pop
fucomp
inc
add
adc
sub
fs
ret
or
xchg
push
movb
jo
bnd
mov
enter
and
shrb
repnz
int3
sar
inc
push
aas
leave
fdivs
aaa
je
test
orb
imul
out
fiaddl
add
jns
popf
adc
mov
call
xchg
pushf
sub
xchg
lods
mov
push
ljmp
adc
fdivp
xlat
sub
fbstp
mov
pop
pop
gs
adcb
dec
pusha
mov
fld
mov
pop
std
and
jge
je
shlb
xchg
pop
add
and
sub
insb
mov
hlt
jmp
jl
sarb
xchg
lcall
add
sub
jae
das
popa
int
std
push
in
std
arpl
shufps
fsts
inc
add
fnstsw
dec
push
or
add
xor
cmp
mov
mov
inc
jno
or
push
push
xor
jge
insb
push
xor
mov
pop
lods
rolb
sub
mov
or
jl
addr16
ljmp
push
inc
push
jg
cmpsb
outsl
inc
adc
mov
mov
pop
push
xchg
mulb
pop
mov
sbb
mov
mov
fnsave
pop
xor
xchg
dec
out
pop
push
mov
fistpl
lret
adc
rcrb
in
cli
xor
pop
imul
inc
push
js
dec
stos
sub
insl
jae
pop
mov
stos
es
jb
xchg
xor
negl
nop
cmp
mov
lret
xchg
in
mov
or
sti
shrl
cwtl
push
xor
inc
jmp
push
mov
adc
ljmp
fstpl
add
fxtract
pushf
fs
aas
decb
push
mov
test
sbb
adc
sar
sub
arpl
sub
movsl
mov
mov
jb
dec
icebp
stc
mov
push
push
jns
mov
pop
mov
in
jp
insl
cli
dec
mov
insb
mov
gs
sbb
and
dec
lahf
loop
inc
test
fbstp
sub
inc
inc
push
cli
sbb
adc
cld
push
mov
add
pop
repz
stos
cwtl
sbb
lock
mov
jne
out
xchg
xor
sbbl
and
inc
sbb
mov
in
dec
sub
and
jnp
adc
outsl
fimuls
sub
xor
cmc
fwait
push
pop
xchg
sub
int3
xor
imul
fldenv
xchg
and
rorb
xchg
rcll
insl
xor
inc
arpl
nop
jno
mov
jge
mov
cmpsl
push
fidivl
mov
das
mov
pop
pop
xlat
mov
cltd
add
inc
in
dec
sahf
or
push
sub
xor
dec
mov
loop
xchg
icebp
popf
adcl
cmp
pop
mov
loopne
testb
or
sbb
xlat
orl
xor
outsl
mov
mov
fwait
in
fcmovnbe
cmpsb
adc
xchg
mov
test
push
mov
mov
and
out
or
xor
stos
mov
mov
push
nop
add
fldcw
mov
add
dec
xchg
in
pushf
loop
push
les
insb
push
pop
push
adc
mov
int3
femms
dec
mov
inc
dec
ror
adc
ss
aam
cmp
stos
cmpsl
jge
mov
add
cld
add
push
test
lret
mov
sub
mov
jge
pop
scas
mov
in
sub
pusha
pop
out
xchg
mov
data16
xchg
xor
scas
sub
push
and
inc
xchg
and
pop
lods
gs
dec
in
xchg
into
or
scas
in
pop
sbb
adc
and
sbb
cld
dec
jge
add
lods
daa
test
xchg
xor
push
xchg
and
sub
dec
add
inc
xchg
inc
out
cmp
andb
lahf
pop
in
cmc
mov
pop
andb
xor
es
mov
cwtl
lods
mov
fmull
add
xchg
push
add
add
and
push
aaa
outsb
movsl
jge
adc
jb
jmp
popf
push
dec
pop
imul
inc
inc
je
cmp
lret
add
fistpl
pushf
and
andb
mov
xchg
cli
inc
andl
es
push
push
mov
dec
pushf
pushf
repnz
jne,pn
sub
cltd
cmpsb
xor
aas
push
movl
leave
and
sub
data16
popa
jns
xor
movsl
arpl
mov
inc
scas
ljmp
pop
lock
repnz
in
stos
rol
push
add
pop
lahf
push
aaa
mov
cmp
outsb
lret
xchg
dec
rcr
inc
mov
pushf
jp
add
mov
repnz
cmp
jne
insl
fisubrl
pop
dec
inc
cmp
cmc
xchg
xchg
cli
push
das
mov
or
sarb
int
pop
sub
cmp
lock
dec
lods
cmp
pop
data16
icebp
dec
lea
sub
or
sub
fs
lret
imul
jl
and
mov
mov
movsb
rorb
cmpsb
ss
jnp
out
jo
and
push
enter
push
xchg
jecxz
sub
mov
inc
push
call
xchg
mov
inc
sbb
in
or
pop
outsl
std
mov
mov
mov
xchg
femms
iret
mov
xchg
sti
or
push
int3
fisubs
and
jne
pop
loop
ret
pop
out
fcmovne
sahf
dec
aaa
push
repz
aam
aad
clc
aas
mov
pop
cwtl
jge
lds
movsb
sbb
mov
ficoml
pop
sbb
mov
mov
ret
ljmp
stos
cmp
sbb
pop
jne
push
jmp
fcomps
sti
mov
dec
lds
pusha
ret
imul
popa
push
dec
mov
push
fdivrp
ret
lcall
adc
rcrb
fs
xor
mov
leave
and
pop
push
cmp
leave
pop
insb
in
rcl
xchg
dec
xchg
jbe
xor
jnp
roll
dec
daa
fs
int3
jg
subb
sbb
lret
cmp
jns
push
sub
jge
cmp
ficomps
out
xchg
push
fcom
mov
pop
mov
xor
enter
std
and
mov
pushl
inc
loope
test
sub
jge
lds
adc
push
push
lods
mov
lods
pop
jnp
jp
push
scas
mov
jg
and
int3
cmp
xchg
jno
outsl
jae
std
mov
out
xlat
lret
push
jg
add
cvtdq2ps
jnp
jp
push
mov
cmp
aaa
enter
je
pop
mov
pop
cmpl
popa
pop
cld
mov
cwtl
mov
out
aaa
orl
stc
jg
repz
mov
sarl
mov
cltd
xor
sub
mov
fstp
lds
imul
pop
cmp
lea
leave
andb
jge
push
push
imul
jle
insb
push
adc
mov
sub
jne
in
stos
inc
pop
mov
or
push
aaa
mov
fdivrl
jae
jae
jbe
sub
mov
xchg
sbb
leave
gs
sub
outsb
or
adc
vpshaw
dec
xchg
iret
insb
mov
cltd
pop
inc
outsb
mov
inc
adc
repnz
insb
push
std
sbb
mov
dec
cli
sbb
testb
sbb
or
rcll
in
or
jbe
movsl
mulb
jne
jg
xchg
or
mov
bound
jb
ffree
sbb
or
and
jo
xor
push
rcrb
jecxz
popa
push
adc
decl
xor
xor
dec
mov
adc
jns
sbb
and
pop
daa
scas
pop
in
dec
shr
mov
mov
or
pop
and
dec
mov
aaa
jb
cmp
push
test
rcr
cld
iret
nop
or
pop
rolb
mov
sti
cmp
call
sbb
stc
movsb
xchg
lahf
dec
imul
push
int
pop
inc
inc
cld
inc
mov
mov
je
inc
inc
test
push
pop
in
mov
out
imul
mov
mov
and
dec
pop
push
stos
add
out
repnz
cli
scas
gs
add
pop
dec
pusha
in
pop
jbe
fpatan
push
out
dec
add
cmpsl
testb
xchg
cwtl
stc
test
pop
adc
popa
pop
out
ds
mov
mov
fdivr
mov
filds
adc
fmuls
test
js
sarb
jle
mov
or
push
jg
cmp
xor
pusha
mov
dec
ss
jmp
loop
imul
mov
orl
xchg
int
xor
in
pop
jbe
clc
aas
aad
jnp
sbbb
cmp
and
sbb
ret
divl
sahf
cmpb
clc
inc
sbb
pop
dec
add
push
xor
xor
push
push
fwait
andb
sbb
push
sub
mov
out
pop
aad
enter
and
inc
push
rclb
cmp
mov
mov
repnz
dec
cld
insb
dec
dec
inc
mov
sub
loopne
jl,pn
mov
je
es
fidivl
mov
xor
out
xor
sub
loope
js
inc
sub
and
or
stos
imul
push
pop
adc
insb
mov
out
push
movsl
es
mov
mov
cmp
scas
sub
push
shrl
adc
mov
aas
les
leave
inc
dec
adc
adc
inc
jns
mov
xor
mov
cli
into
fstps
scas
fmull
push
jmp
sbb
fwait
sahf
popf
hlt
cmpsb
pop
cwtl
fwait
xor
pop
mov
push
xor
xor
cmp
push
les
mov
inc
jmp
xchg
in
out
jo
daa
mov
pop
jne
jge
outsl
ja
cmp
popf
jae
fwait
test
mov
or
aad
push
xor
das
jb
add
or
add
lods
jns
dec
and
jl
sbb
xor
andl
cmp
in
outsl
cwtl
jl
jbe
adc
push
sub
and
sub
jmp
in
jg
adc
insl
and
mov
movsl
adc
clc
pop
cwtl
adc
push
sub
mov
mov
lcall
std
sbb
push
lcall
lea
ja
ja
xor
stos
lods
jb
xchg
rolb
xchg
popf
out
dec
das
fld
inc
sbb
lret
mov
subb
or
cmpsl
out
mov
mov
les
je
lahf
sahf
lahf
mov
rcrb
sub
rclb
mov
scas
mov
fimuls
jno
inc
mov
jb
lock
sti
addl
add
cmc
insl
out
adc
lahf
push
icebp
dec
andb
pop
cli
pop
xor
movsl
cwtl
or
repnz
add
mov
lahf
jne
shrb
adc
mov
je
push
cmp
test
roll
mov
cmp
sub
or
jl
xchg
adc
aam
lahf
push
sarb
xchg
in
hlt
insl
inc
and
jne
lret
pop
xor
addr16
bound
pop
negb
mov
scas
lret
lcall
push
popf
neg
or
cs
sub
adc
les
mov
jnp
inc
test
pop
js
fsubp
std
ds
pop
loope
sbb
jne
or
outsb
sub
clc
fcmove
mov
dec
mov
push
or
rcrl
add
test
mov
pop
push
or
data16
leave
clc
sbbl
cmpl
cld
pop
mov
adc
jl
pop
xor
jmp
xchg
std
sbb
inc
adc
jge
loope,pt
shlb
jne
aad
stos
out
mov
int
bound
xchg
or
sub
push
lea
mov
std
sbb
icebp
add
add
sub
dec
inc
repnz
jg
repz
pusha
lods
jl
addr16
out
sbb
arpl
das
das
out
ds
jp
dec
into
in
pusha
clc
insb
stos
jb
rcll
sub
or
pop
popf
repz
add
les
je
jle
hlt
ss
in
cmpsb
aas
xchg
adc
ds
lods
scas
ss
in
imul
jno
subl
and
mov
lods
ror
pushf
orl
cwtl
mov
lcall
addr16
nop
jb
jbe
lock
pop
push
or
dec
ja
jmp
jne
inc
icebp
xor
popa
mov
and
add
lds
mov
push
xor
mov
and
icebp
add
loopne
mov
xchg
pop
loope
testl
or
fidivrl
sub
sbb
repz
jbe
or
add
or
xchg
xchg
or
push
jae
pop
cmpsb
and
sbb
dec
mov
cmp
mov
call
sti
sbb
add
pop
es
pop
les
cmp
mov
mov
xchg
pop
and
cmp
ficoms
push
mov
das
idiv
adc
inc
adc
test
sub
cld
fnstcw
add
and
shll
shrb
mov
dec
add
push
sbb
jbe
xchg
jne
jl
adc
dec
xchg
jo
dec
fistpl
cmp
mov
test
sbb
cmovo
dec
jge
aas
mov
in
or
cmp
cmpb
arpl
xor
mov
sbb
notb
pop
ss
cmpl
inc
icebp
inc
push
push
adc
xor
iret
subl
mov
in
mov
mov
shl
sbb
or
adc
mov
mov
mov
es
in
jne
fcmovu
xchg
adc
flds
pop
xor
adc
aam
cld
in
setge
mov
loopne
loopne
adc
stos
add
fmuls
xchg
orb
fsub
fbld
xchg
xor
mov
lret
jmp
pop
mov
mov
lods
lea
out
add
sub
out
pop
jl
jecxz
mov
pcmpgtd
push
push
xor
into
xchg
jno
lock
pop
lea
fmuls
jg
mov
sub
clc
shll
sbb
adc
out
mov
cmp
adc
mov
inc
fcomp
inc
sar
clc
out
add
cmc
mov
jnp
dec
repz
push
sbb
out
sbb
adc
pop
in
nop
mov
std
add
xchg
sub
nop
cltd
pop
lahf
xchg
cwtl
mov
in
mov
add
or
lock
inc
pop
pop
jecxz
add
or
adc
sbb
jecxz
sbb
sbb
subl
mov
sub
sub
ret
inc
loope
push
bound
aas
daa
push
mov
xor
mov
repz
xor
dec
or
inc
push
inc
and
add
int3
in
inc
push
rorl
out
call
pop
repz
sub
popa
or
mov
test
jo
pop
sbb
lods
leave
jae
cmpsl
xchg
fs
imul
pusha
jge
push
rcrl
out
jno
sti
je
aad
sub
jmp
cmp
mov
repz
push
sub
sahf
int3
sub
cltd
lods
hlt
jp
sbb
and
xchg
mov
in
negb
cmpsb
mov
or
xor
xlat
lcall
test
gs
cmp
jbe
enter
test
sbb
push
fildll
sbb
dec
jecxz
cmp
insl
xchg
xchg
rol
mov
sti
das
jge
jb
cwtl
mov
adc
adc
add
mov
push
faddl
mov
addr16
xor
insl
ret
mov
sbb
jge
jns
sub
xor
sbb
fs
cld
rcrb
pop
shll
lds
jae
add
aad
in
mov
daa
mov
sub
les
inc
outsb
jne
lock
test
pop
pusha
xlat
xchg
cmpb
fstps
mov
and
test
mov
jne
lcall
repz
mov
lock
sub
pop
dec
cwtl
sbb
mov
test
and
lods
mov
sub
in
cmp
mov
daa
jbe
popa
xor
inc
mov
mov
loop
das
dec
negl
movsb
data16
daa
stc
cmp
add
jmp
je
and
dec
mov
popf
hlt
xor
sbb
add
mov
sbbb
cld
mov
jbe
shlb
lea
rolb
fists
adc
dec
gs
mov
dec
mov
rcll
sbb
pushf
mov
xchg
scas
pop
add
lods
nop
ds
int3
lock
lea
je
jmp
sbb
add
ret
ljmp
rcrl
or
popa
cmp
inc
xlat
cmp
cld
lcall
sbb
mov
rcr
shrl
xchg
push
popa
adc
push
pop
mov
xchg
sub
movsb
and
push
cli
xchg
aaa
lods
push
xchg
cmp
std
and
mov
imul
mov
rcr
push
mov
mov
imul
push
xorl
aam
sub
dec
cld
sbb
inc
xchg
call
rcll
lahf
inc
inc
add
dec
cmpsb
mov
and
adc
and
push
ja
pop
pop
bnd
test
sahf
icebp
push
call
xor
sbb
ljmp
xchg
add
dec
and
xchg
adcb
add
out
add
pop
mov
xorl
cltd
inc
icebp
stos
xor
add
sub
cmp
adc
sub
add
scas
adc
mov
jl
or
mov
popf
pop
dec
les
xor
aas
shll
loop
adc
shrb
shr
lahf
cld
jmp
sub
idivl
in
or
mull
call
dec
push
mov
daa
lock
cmpsb
loopne
fmuls
int
adc
por
fcomps
push
or
popf
test
add
mov
jo
cmp
xchg
push
sbb
inc
inc
ret
subb
mov
jge
movb
lock
aas
in
popf
into
cmc
push
xor
pop
xchg
not
ret
pop
into
mov
mov
sbb
cmp
scas
test
or
sbb
xchg
es
je
xchg
fistl
mov
scas
push
arpl
cltd
pop
push
mov
out
nop
and
movsl
sub
mov
call
jg
cmp
cmp
mov
sbb
out
push
push
lcall
add
outsb
jl
dec
add
xchg
scas
sbb
pop
adc
hlt
inc
xor
ret
lods
push
repnz
xchg
ret
test
iret
adc
push
out
push
and
mov
insb
cmp
into
jne
cmp
jno
daa
popf
mov
mov
repz
fwait
pop
mov
mov
adc
pop
int
xchg
jbe
aad
movsb
xchg
clc
cmp
add
repnz
adcl
sbb
loop
inc
dec
push
xchg
ljmp
xchg
pop
inc
push
jo
xor
jns
xlat
pop
pop
sarb
jmp
pop
jno
bound
in
cs
test
mov
sbb
push
test
insb
sbb
andl
ror
sbb
add
pushf
hlt
test
jmp
cltd
stos
xchg
sbb
push
cli
xor
pop
repz
out
je
sub
jb
pop
add
mov
mov
cwtl
xchg
and
dec
sbb
inc
popaw
aaa
fcoml
or
insl
inc
repz
xor
nop
push
fwait
add
ljmp
mov
sbb
adc
mov
mov
cmp
stc
aad
dec
bound
imul
mov
shll
test
fistpll
gs
dec
loop
xor
pop
xlat
out
lods
test
sub
cmp
jmp
sahf
mov
shlb
cmp
leave
and
or
mov
ret
shll
xchg
fwait
cltd
pop
xor
cmovo
in
fwait
and
jl
test
cmc
jg
shlb
inc
sbb
push
test
push
pop
iret
test
adc
xchg
and
jns
sbb
jge
fimuls
sub
sbb
cld
repnz
and
dec
loopne
xchg
ljmp
mov
jo
shll
xor
popf
mul
jecxz
xchg
mov
sti
lret
cmp
adc
test
loopne
jecxz
in
in
adc
pop
loope
sbb
mov
sarl
dec
enter
sbb
or
ds
inc
mov
out
es
pop
push
int3
daa
cltd
es
xlat
jns
jb
mov
push
imul
jbe
push
jae
jecxz
mov
sar
inc
shr
ss
sarb
sub
jl
fildl
addr16
stc
pop
sti
xor
jecxz
cwtl
and
mov
xchg
pop
arpl
sub
and
testl
add
scas
ret
push
out
lret
jge
outsb
fsub
sahf
adc
push
push
cmp
iret
mov
sub
sub
mov
test
mov
pop
rcrb
lret
adcb
sbb
jne
imull
add
jno
into
mov
movsl
fndisi(8087
add
jae
popf
adc
cld
push
ret
testb
das
dec
add
scas
jl
push
iret
jae
fidivrl
lret
jl
lahf
outsl
in
fnstsw
xlat
incl
inc
idiv
dec
test
push
xchg
cltd
add
lock
inc
adc
mov
jnp
dec
xor
push
je
fisttpll
movsl
aas
push
cmp
pop
les
repz
jae
pushf
les
xor
push
and
xchg
shrl
iret
scas
and
je
or
jmp
mov
in
xor
leave
push
leave
jne
mov
inc
xlat
or
or
lds
nop
pushf
and
in
fnsave
cmpsl
add
adc
aad
leave
xor
mov
imul
jno
cmpl
imul
repnz
sub
int
pop
jbe
dec
push
loop
add
mov
out
fcompl
cmp
jae
push
ficoml
sbbl
movsl
lret
sbb
out
fisubrl
and
cmp
inc
rcll
mov
cmpsb
xor
outsl
push
sbb
adc
sbb
rorb
xchg
push
sbb
inc
inc
mov
lcall
adc
test
or
mov
int
imul
add
push
sti
lock
dec
adc
stos
cmp
mov
repnz
cmp
repnz
add
sbb
mov
mov
pop
add
fdivrp
in
xchg
inc
push
lahf
fcmovnbe
ja
hlt
cmp
daa
inc
jle
and
sbb
push
xchg
leave
push
dec
leave
outsb
outsl
outsb
test
sarb
sbb
scas
fistps
adc
mov
cs
loopne
loopne
fildl
xor
xor
pop
or
push
sub
lcall
lods
mov
and
leave
pop
cmp
sub
mov
sbb
js
pusha
loopne
pop
mov
and
mov
outsb
sahf
imul
lock
fisttps
jno
popf
in
jns
mov
add
popa
push
adc
jl
push
pop
fcomi
pop
aas
shrl
jg
mov
jns
cmp
add
inc
loop
outsb
imul
shll
jmp
outsb
and
dec
daa
mov
sti
pop
lcall
jne
jl
in
mov
mov
mov
xchg
loop
add
xchg
dec
ljmp
sub
out
out
addl
in
mov
xchg
and
jle
cmp
cwtl
push
ljmp
sub
mov
sbb
movsb
lahf
out
jle
ja
push
mov
iret
jecxz
and
jae
adc
xlat
xor
aam
sbb
jg
and
lods
outsl
pop
mov
dec
add
loope
xchg
sub
cmp
popa
gs
and
divl
push
push
dec
adc
aam
scas
cmp
jge
mov
xor
lds
jnp
jnp
sub
test
cmp
lret
faddl
fstpl
mov
testb
in
mov
outsl
jbe
mov
mov
les
xchg
push
or
decb
jecxz
lret
rcr
arpl
mov
call
sbb
push
mov
leave
bound
inc
popa
sub
out
aam
ficoms
mov
pop
fmul
mov
fidivs
jge
addr16
jle
mov
fidivl
addb
dec
cli
sub
lret
xlat
les
xor
cmp
rol
out
rorb
sub
jecxz
dec
push
sbb
mov
std
mov
stos
dec
addr16
xor
jg
push
jno
int
fnstcw
jne
jg
cmpsl
js
insb
jb
aas
lcall
cld
xor
cmp
bound
inc
cmp
orb
and
jbe
lock
mov
hlt
insl
sbb
jnp
lahf
je
mov
movsb
sbb
divb
neg
pop
sub
in
push
jno
or
mov
call
or
rorb
test
inc
pop
cwtl
cmp
popw
scas
dec
andl
test
sub
pop
popf
ljmp
icebp
and
data16
testb
cmc
and
mov
ss
cmp
in
mov
jo
fldenv
sub
adc
lock
xor
repz
aaa
stos
rcrl
call
dec
popf
cltd
in
mov
in
mov
push
sub
xchg
jbe
shll
pushl
mov
pusha
sbb
pop
in
xor
push
mov
pop
jp
leave
in
pop
out
pop
out
mov
rol
movsb
and
push
repnz
or
mov
xchg
inc
testb
or
push
inc
xlat
mov
mov
cmpsl
cmp
popf
dec
jbe
aam
fwait
jbe
mov
sub
cltd
lods
inc
fisttps
icebp
lods
lret
pop
mov
cmpb
or
mov
sub
andb
mov
inc
in
hlt
dec
xchg
jge
cltd
dec
or
hlt
lock
dec
mov
ret
mov
push
int3
jg
inc
out
jb
dec
cld
lret
push
outsb
idivb
push
push
jmp
daa
pop
xor
ret
testb
decl
rcll
repz
mov
dec
jecxz
loope
or
aas
into
ds
shlb
roll
inc
mov
pop
dec
jmp
in
cmpsl
in
add
mov
out
das
adc
mov
sbb
clc
sbb
cmp
cld
leave
lds
or
movsl
stc
pop
dec
scas
or
icebp
jne
inc
iret
xor
xchg
add
push
js
scas
inc
rorl
aaa
outsb
ja
xchg
xsha1
cmpsb
or
push
jbe
push
pop
or
popa
call
push
stos
jmp
adc
ds
jbe
sub
imul
xlat
push
fwait
icebp
mov
dec
sahf
cld
ds
nop
or
push
fistps
imul
loope
xor
dec
in
add
pop
inc
sbb
nop
pop
add
popa
cmpsl
fdivl
push
xor
mov
push
cltd
clc
divb
std
mov
add
leave
mov
sub
sbb
xchg
ss
sbb
mov
outsl
dec
inc
mov
scas
scas
pop
imul
aad
mov
xchg
mov
dec
sbbb
mov
test
fmuls
inc
jle
aad
jb
xchg
cmpsl
jle
add
pop
and
clc
test
test
stc
cwtl
xchg
je
movsl
push
mov
sbb
dec
or
imul
jg
dec
push
fidivrl
orl
sub
jo
leave
ja
loope
int
jns
nop
into
mov
inc
sub
add
int
xchg
imul
aas
mov
xchg
insl
dec
pop
adc
out
fidivl
xor
or
mov
pusha
mov
nop
mov
lods
sub
jecxz
int
push
push
iret
jge
cmpb
lret
jmp
std
mov
inc
pop
push
sbb
or
fldcw
mov
cwtl
xor
push
mov
fwait
xor
stos
pop
mov
push
inc
cld
jb
inc
and
ds
in
dec
repz
lret
xchg
lods
mov
inc
xchg
pushf
mov
xchg
sub
int3
pop
pop
test
popa
jbe,pn
and
jbe
xchg
cmp
outsb
repnz
out
pop
cmp
mov
pop
aam
movsl
out
loope
in
ficomps
and
bound
and
mov
push
popa
loope
inc
push
dec
lret
or
add
pop
cmp
push
sbb
push
and
bound
jecxz
repnz
jb
dec
imul
adc
dec
inc
clc
xor
in
push
out
mov
out
aam
jns
fisttpl
cltd
xchg
inc
sub
sbb
mov
xchg
mov
push
data16
inc
cwtl
shr
test
mov
dec
inc
sahf
lahf
fstpl
test
or
cmpsb
mov
sub
adc
sbb
rorl
sub
dec
pusha
in
cwtd
in
jl
ja
sbb
cmp
repnz
sub
rcrl
ret
jns
and
loopne
in
xor
hlt
adc
cld
cmp
gs
add
les
jge
icebp
out
dec
xor
leave
fadds
inc
shlb
sub
bound
sti
lret
in
mov
lea
or
out
les
movsb
jno
fnstenv
dec
xlat
ds
push
cmpsl
pop
push
add
das
loop
push
gs
jg
hlt
lods
rol
stos
add
add
add
xchg
fmull
mov
xchg
adc
or
pop
sub
and
jno
mov
pop
push
scas
fisttpl
mov
pop
in
lcall
sahf
outsl
jae
addb
lahf
insb
leave
out
xchg
add
and
js
jge,pn
dec
ja
push
add
dec
or
mov
inc
push
xchg
sbb
lods
addr16
ret
inc
push
loope
xchg
xchg
and
sub
lahf
pop
sub
aaa
fistpll
loop
insb
cmpsl
push
in
fstpl
out
nop
or
into
xchg
pop
test
mov
in
add
pop
jp
jp
jne
jmp
lds
jmp
dec
push
leave
and
ds
fs
mov
loope
mov
pop
repnz
sbb
iret
sti
and
loop
pop
push
rcrl
call
pop
jnp
and
push
xor
jns
push
lcall
out
mov
fcomps
cwtl
inc
ret
in
sahf
out
fisttps
pop
repz
movsl
out
jp
mov
cmp
ss
into
sub
lret
pop
test
inc
mov
mov
dec
push
insb
std
cmc
popa
in
inc
test
or
mov
mov
mov
cltd
lea
pop
adc
dec
xor
mov
movsl
cmp
dec
xchg
lcall
scas
pop
pop
mov
xchg
daa
dec
das
push
jne
jge
fstpt
test
aad
xlat
mov
testb
bound
pop
xchg
call
inc
xchg
jp
fbld
cmp
push
pop
neg
dec
inc
repz
ds
pop
jp
fstpt
out
fmull
mov
sub
outsl
and
push
pusha
fisubl
push
mov
inc
clc
addr16
mov
jg
pop
decl
movsb
mov
fs
mov
jo
xchg
in
fiaddl
or
imul
lret
inc
xchg
out
filds
xchg
pop
adc
inc
xlat
jl
mov
cld
mov
insb
lea
into
bnd
les
jnp
les
fisttps
scas
les
push
pop
pop
shlb
jae
inc
cmp
push
mov
loope
rcrl
out
pop
mov
out
enter
add
sub
jg
or
insb
add
jl
scas
dec
xchg
dec
pop
das
ljmp
xor
dec
jp
sub
test
les
jecxz
shrl
into
push
xchg
xchg
push
sub
leave
and
mov
xchg
mov
push
mov
jnp
insb
cmp
cmp
stc
fninit
jmp
mov
iret
pop
les
add
or
repnz
fucomip
mov
inc
xchg
lahf
jmp
inc
into
mov
bound
das
fnstsw
out
xchg
and
pop
fcomps
pop
sahf
mov
js
and
adc
mov
call
ficoml
jmp
inc
lock
mov
sar
add
divl
lods
aaa
stc
lret
lds
jnp
xchg
xchg
or
aam
and
repz
mov
movsl
out
outsb
push
mov
xor
mov
xor
cld
in
dec
inc
lods
mov
push
repnz
ret
clc
shlb
mov
popl
jmp
xor
dec
mov
movsb
mov
sub
pop
jns
lcall
mov
xchg
mov
sbb
mov
sub
in
testb
sub
mov
fdivrl
imul
cmpsb
fnsave
out
sbb
cmp
inc
mov
mov
xor
into
xchg
enter
jle
dec
nop
nop
loopne
shr
in
sub
lds
pop
lret
jno
jl
xor
and
mov
bound
mov
sub
stos
xchg
push
or
mov
jo
or
push
mov
rcr
sub
or
add
adc
mov
ljmp
mov
shl
shlb
mov
test
imul
ret
mov
lea
imul
push
push
jne
dec
cmp
cld
sbb
cmp
insl
repnz
cltd
jp
out
scas
xchg
shlb
dec
add
faddl
rorb
jne
xor
outsb
adc
outsl
adc
xchg
mov
iret
xchg
push
and
mov
mov
sbb
hlt
sbb
cld
jne
insb
test
adc
adc
cwtl
outsb
dec
push
jl
lret
add
adc
les
and
xor
rcr
adc
int3
push
out
mov
lret
fld
lret
imul
inc
sub
mov
pop
iret
es
fsub
mov
inc
sub
scas
and
ljmp
sub
jecxz
pop
cmp
jl
jbe
xchg
and
pushf
stc
adc
and
out
adc
nop
aaa
push
addl
cmpl
sub
mov
and
adc
rclb
push
inc
cltd
aas
xorl
or
lret
cmpsl
lret
imul
adcl
ret
loop
mov
icebp
dec
aam
add
enter
outsl
push
inc
xchg
sub
dec
adc
mov
divb
cs
aaa
pop
push
cmp
fildl
mov
icebp
jmp
push
stos
fs
popf
fmuls
cltd
pop
and
outsl
popf
mov
cmpsl
push
stos
adc
mov
movsl
testb
mov
push
inc
push
jae
sbb
and
lock
dec
loope
lret
shlb
test
aas
das
xchg
dec
movsl
or
lock
fisubs
ss
pusha
inc
fisubrl
push
pop
insl
pop
mov
and
out
mov
or
push
sahf
icebp
fidivl
inc
push
lret
push
mov
popa
dec
adc
xlat
fwait
inc
ret
adc
enter
loop
sbb
fstpl
xor
adc
repnz
scas
test
xchg
xor
xchg
testb
cld
pop
pop
dec
sub
imul
adc
out
pusha
or
mov
je
sub
test
mov
sub
enter
push
es
pop
push
xchg
mov
sbb
adc
mov
or
push
in
cmp
fsubrs
pusha
icebp
es
test
aas
jmp
dec
jnp
popw
je
lds
pop
mov
popf
pop
test
xchg
in
iret
scas
jge
jns
outsb
xchg
test
inc
mov
inc
fistps
rcll
jp
fists
cmp
pusha
jge
imul
pop
repz
into
pop
jae
push
insb
lea
xor
repnz
xchg
mov
mov
sbb
xchg
out
repnz
mov
insl
ljmp
push
aas
dec
imul
fidivl
lret
rol
xorb
clc
cs
shlb
mov
loop
std
scas
ja
and
cltd
adc
mov
push
fsts
push
cmpsl
fadd
jns,pt
push
add
push
jle
xor
mov
mov
and
jno
and
adc
into
lods
pop
clc
mov
in
pop
rol
push
addr16
dec
mov
xchg
enter
push
cmpsb
outsb
fs
mov
pop
push
add
int
inc
mov
rcr
pop
aam
mov
cmpsb
mov
outsb
js
repz
inc
jge
xchg
xor
xchg
in
aas
decb
cld
xor
lcall
lret
repnz
sbb
jp,pt
into
pop
dec
jae
or
xor
jg
scas
scas
pop
mov
mov
mov
pop
ss
push
pop
cli
mov
add
xor
jns
or
cld
pushf
inc
aad
fs
mov
add
stos
out
pop
jle
adc
jbe
mov
xchg
mov
repz
xlat
sar
faddl
mov
adc
inc
dec
xorb
dec
mov
and
jb
lret
stos
xchg
outsb
repnz
insb
push
inc
jae
ja
aaa
pop
cs
movsb
lds
jns
mov
xchg
rorl
sub
imul
adc
iret
add
test
ja
cmp
xchg
push
mov
or
jmp
fcoml
jns
das
in
repz
or
lods
adcl
ds
out
cmpsl
repz
xchg
lods
sub
pop
jno
mov
shll
jecxz
insl
js
out
mov
pop
je
aaa
out
push
sbb
push
fmull
and
mov
xor
sbb
mov
out
jp
lock
mov
jmp
add
dec
xor
nop
cmp
stos
dec
inc
dec
mov
mov
cmp
loopne
aad
xor
pop
xchg
xchg
in
adc
loop
dec
scas
fsubrl
push
push
movsl
push
inc
dec
jmp
sarl
pop
js
imull
inc
addr16
sbbb
inc
sub
sbb
xchg
fdivrl
jbe
shrb
mov
mov
xor
pushf
cltd
sbbb
push
mov
adc
jmp
inc
push
add
xchg
insl
adc
sbb
shrl
aad
inc
gs
add
test
xchg
mov
add
call
xor
and
adc
inc
leave
sub
mov
ss
pop
ss
loop
pop
cmp
fisubs
sbb
pop
sub
push
push
in
cltd
imul
pop
in
sahf
xor
push
mov
cld
lods
inc
orb
or
cmp
push
lds
int
mov
sbb
dec
es
andb
push
test
xchg
pushf
cld
call
shlb
pusha
imul
sub
loope
sub
cmpsl
mov
push
gs
pusha
dec
cwtl
cmpsb
lds
jmp
rcrl
add
mov
xor
into
cmp
xchg
testl
push
fidivrs
aas
bound
lcall
adc
jp
daa
lahf
mov
jb
fistps
sti
stc
rolb
clc
js
xorb
mov
lcall
push
ljmp
add
stos
andl
mov
mov
xor
xor
cmc
jnp
call
ret
cwtl
sub
cmpl
sbb
sbbl
test
aam
jb
cmp
adc
nop
add
sarl
mov
inc
insl
mov
movsl
pop
dec
in
mov
imul
in
push
mov
adc
xchg
or
or
mov
or
out
cmp
test
stos
lods
or
loope
ja
adc
push
imul
mov
sarb
int
push
push
cmp
sub
cmp
xchg
iret
loop
mov
dec
add
cmpsl
xor
ja
scas
outsl
sti
inc
ja
and
push
dec
outsl
aas
fwait
mov
push
sarb
repnz
add
repz
pop
inc
jp
push
je
je
mov
cmp
xor
shl
xor
inc
cmp
inc
xchg
enter
aad
fldcw
jae
push
sahf
repz
mov
cmpsb
lahf
inc
cmp
int3
or
dec
test
hlt
in
inc
dec
out
mov
fdivr
xor
mov
pusha
sub
xchg
or
stos
ljmp
fs
rorb
mov
and
in
ds
jg
in
clc
cmp
daa
lods
incl
mov
mov
lds
movsl
cmpsl
jb
dec
movsb
pushf
push
cmc
sahf
xor
negb
pop
jae
adcb
cltd
mov
enter
mov
lea
dec
xor
or
repnz
or
int3
aaa
stos
add
jge
and
mov
dec
xor
inc
jno
stos
push
cmp
out
nop
mov
roll
mov
mov
lods
jne
and
mov
sbbb
and
and
push
push
outsb
pop
test
je
mov
mov
call
aad
and
add
mov
or
dec
and
fwait
les
loop
mov
repnz
mov
jae
scas
fwait
sbb
or
shl
and
sbb
dec
scas
xor
ja
jle
fisubrl
pop
jno
movsb
push
stos
sarb
ss
push
movsl
mov
pop
or
aam
inc
stc
outsb
test
push
sbb
dec
test
push
or
pop
mov
xchg
sarl
sbbl
dec
fldcw
pop
shlb
xor
push
addl
test
mov
push
or
lcall
pop
jbe
imul
xlat
movsb
out
dec
adc
jae
sarl
or
pop
lcall
adc
mov
mov
push
imul
std
sub
pop
gs
push
loope
push
lock
pushf
sub
repz
mov
stos
inc
shl
scas
pop
mov
test
xchg
push
pextrw
jge
and
in
and
filds
push
stos
cltd
sbb
or
jp
jnp
jge
iret
mov
jbe
and
mov
arpl
xchg
xor
adc
add
mov
cmp
or
cmp
loope
push
sbb
mov
mov
adc
lock
mov
inc
jp
sbbl
cmp
test
mov
loop
sub
subb
es
out
xchg
in
out
lods
inc
sbb
mov
dec
xor
inc
mov
iret
pop
mov
inc
sbb
mov
in
mov
mov
or
xor
hlt
mov
test
mov
push
mov
cli
enter
mov
int3
cmp
xchg
and
cmpsl
in
fistpl
jno
out
pop
stos
and
out
adc
outsl
xchg
jmp
je
xlat
shlw
cld
scas
cmpsb
aaa
cli
sbb
fisttpll
mov
mov
xchg
rol
add
cwtl
rolb
add
out
xchg
cmp
cwtl
mov
insl
test
push
cmp
lret
rcrl
andb
fsubrs
sub
xchg
jae
inc
jg
orl
int3
add
fistps
icebp
shrl
ljmp
add
cld
adc
jb
jmp
mov
cmc
je
pop
shll
mov
fnsave
jecxz
fs
lcall
jo
pop
shrb
std
pop
jmp
mov
rcrl
mov
rorl
movsl
push
fs
jge
popf
popf
jmp
movsl
shr
add
xor
mov
mov
icebp
jge
int
xchg
arpl
jmp
jecxz
and
movsb
out
fisttps
jge
and
fisubl
mov
cli
outsl
dec
insl
cli
and
lcall
adc
xchg
cmp
out
ljmp
lods
out
and
in
lods
cmpsl
push
inc
lahf
xchg
push
out
xor
mov
dec
pop
mov
mov
xchg
cmp
aaa
add
pop
ror
pusha
js
out
daa
mov
mov
inc
inc
imul
lock
add
arpl
mov
and
icebp
push
jl
mov
mov
pushf
jecxz
mov
fcmovnb
pop
adc
or
jb
nop
jmp
and
mov
sub
jmp
lcall
xchg
cmp
out
dec
loopne
mov
sub
imul
push
xchg
imul
push
jb
pop
ja
cmp
imul
int
push
mov
xor
aam
inc
lcall
std
or
add
jmp
sbbb
daa
sbb
jl
push
jmp
pop
popf
cmp
loope
and
aad
cmp
popa
jbe
inc
push
sti
popa
enter
lods
add
mov
arpl
push
lods
out
int3
aaa
cmp
js
hlt
pop
int3
loop
mov
into
test
jmp
xor
dec
sub
popa
dec
jns
cltd
in
jl
xchg
setnp
out
sbbb
aam
mov
and
inc
cwtl
mov
imul
mul
hlt
cmp
rorb
das
mov
cmp
sbb
mov
xchg
dec
fistpl
adc
test
mov
mov
ficoms
push
jb
mov
mov
in
iret
adc
sahf
xchg
test
int
add
jne
lret
lods
or
cld
mov
out
sarl
aaa
pop
roll
adc
mov
push
cs
jno
out
push
scas
sbb
shlb
mov
leave
mov
dec
or
jbe
inc
jge
sbb
xchg
mov
lods
push
ficomps
dec
outsb
imul
mov
adc
test
insb
cltd
or
fiaddl
lcall
int3
sbb
and
dec
call
jle
aad
daa
iret
or
adc
fnstcw
rolb
xor
push
mov
ss
mov
xchg
lods
and
sbb
adc
sti
loopne
xchg
jbe
pusha
cmpsb
cmp
mov
xchg
shrb
int
mov
sarl
int
push
cmp
inc
sub
adc
jg
and
cmpsl
mov
add
sbb
mov
mov
insb
mov
je
movsl
and
push
bound
and
lret
movsl
or
add
fwait
jb
mov
testl
add
xchg
in
add
mov
cli
repz
pop
leave
ret
jmp
fildll
or
in
xorb
mov
xchg
mov
inc
popa
mov
div
push
clc
ret
dec
pop
pusha
mov
push
xlat
or
scas
push
fmuls
mov
leave
push
lds
cmp
lahf
xchg
and
je
jmp
test
shrl
push
int
mov
push
inc
orb
sbb
in
cmc
stc
pop
xlat
add
dec
pushf
mov
add
das
lret
jp
jl
add
mov
mov
sbb
les
lcall
pushl
fs
mov
dec
data16
aad
lret
push
sub
xor
mov
nop
or
negl
cmp
adc
imul
fxch
loopne
xlat
xchg
gs
push
cwtl
xchg
fidivrl
pop
or
test
pusha
je
cmpsl
in
es
sub
push
cmpsb
movsb
sub
test
pusha
xor
or
scas
add
pop
inc
cmc
fwait
xchg
inc
int
ret
aaa
ficoms
dec
cmp
movsb
jb
lret
sub
outsb
into
xor
and
jns
mov
movsb
cwtl
sbb
pop
jo
scas
sub
jmp
sbb
std
jo
test
cmpsb
pop
xchg
inc
jge
jp
mov
adc
xchg
jecxz
xchg
pop
mov
pop
cmp
shr
add
xchg
stos
out
sub
lahf
sub
lock
fistps
in
jmp
cltd
add
pusha
xor
jno
lock
pop
and
mov
xorb
dec
unpcklps
insb
das
out
xchg
lods
adc
mov
in
fisubrl
addr16
add
pop
shl
dec
jno
xor
roll
push
scas
stos
popl
mov
inc
pushf
sub
lret
popl
xor
repnz
mov
or
pop
cmp
sub
inc
inc
lods
in
adc
mov
cmp
push
cmpb
rolb
in
stc
repz
push
aam
cmp
sub
int3
ljmp
sbb
and
fcompl
out
mov
fwait
mov
icebp
leave
subb
push
xchg
lods
outsl
sub
sub
out
int
or
xchg
ret
pop
aaa
sub
imul
xor
ds
inc
jmp
adc
movsb
sub
outsl
lahf
sar
inc
outsb
inc
lret
xchg
add
inc
mov
add
cmp
push
mov
cmp
xchg
dec
pop
mov
fimull
cmp
inc
and
xor
dec
test
outsl
mov
cmpsl
rorb
and
sub
xchg
fidivl
mov
mov
ss
stc
repz
or
addb
mov
pushf
lea
fdivr
adc
pop
jns
dec
xlat
fcmovbe
mov
sub
mov
inc
jb
aam
jne
ds
dec
jne
std
mov
ljmp
mov
clc
mov
jbe
enter
or
xchg
cmp
and
sub
nop
imul
inc
lret
inc
pusha
out
jae
addr16
mov
lcall
das
dec
mov
aam
bound
out
mov
lods
jns
lret
test
inc
fistpll
sbb
jae
shll
sbb
xor
push
xor
push
mov
stos
pop
mov
data16
and
xlat
repz
scas
in
je
or
inc
mov
mov
testb
dec
lret
loopne
cs
repnz
aaa
dec
negl
mov
cmp
sub
lea
hlt
inc
insl
movsb
jle
sbb
and
dec
inc
cmp
testb
pop
js
mov
push
mov
add
jbe
mov
mov
or
repz
pop
sbb
push
push
ret
in
loope
mov
insb
lret
push
sub
xor
in
push
repz
mov
jae
stos
inc
and
push
movsl
sub
mov
icebp
and
dec
push
xchg
inc
sbb
sub
lret
and
lret
les
xor
mov
pop
and
int3
aaa
xor
ja
xor
scas
call
sti
add
roll
or
mov
dec
jns
cmpl
insb
adc
sub
pop
test
or
iret
pop
lret
hlt
gs
mov
stc
div
in
gs
adc
push
pop
std
mov
cltd
xor
popa
jmp
fs
add
mov
insl
sbb
mov
sahf
addl
adc
cmpsl
pop
out
mov
sbb
int3
test
hlt
loop
out
clts
data16
sbb
push
in
subb
test
pop
int
jnp
dec
jle
xchg
push
lahf
js
cmp
adc
imul
adc
or
mov
int
push
sahf
xchg
add
mov
cld
rcrl
adc
push
gs
roll
in
loop
pop
mov
fs
fdivrs
sub
int
test
mov
insl
fwait
xorl
lea
clc
and
les
inc
loop
mov
push
daa
shlb
inc
jge
cmpsb
cmpl
pushf
xchg
and
cmp
lock
in
mov
negl
fdiv
cmp
xchg
cmp
mov
mull
xchg
aam
mov
insb
and
mov
xchg
adc
mov
pop
and
add
pop
insb
fcomps
mov
fisubrs
cld
xor
movsb
repz
inc
clc
push
jns
sbb
add
nop
cmc
test
ret
test
jno
out
out
jb
mov
cli
js
xchg
mov
adc
cmc
pop
rol
sbb
iret
push
clc
in
mov
daa
mov
popa
sub
aam
xor
shlb
adcb
xor
mul
jmp
jl
or
fdivl
daa
icebp
aaa
dec
jle
mov
rcrb
pop
or
sub
jno
add
xchg
jno
xchg
sub
test
push
dec
test
outsl
cli
adc
imul
sbb
or
lds
add
inc
adc
xchg
outsl
js
pop
xor
outsb
cmpb
cmp
inc
and
push
jne
js
inc
pop
inc
mov
outsl
xlat
enter
ret
pop
int3
jmp
inc
pushf
mov
scas
add
scas
aam
sbb
scas
lock
push
xchg
testb
pop
inc
push
pop
repz
clc
xor
pushf
xchg
fstpt
push
jmp
repnz
pusha
mov
add
fistpll
xor
call
insl
mov
pop
jns
and
push
adc
push
repnz
enter
test
js
scas
sub
shll
ret
cmpsl
scas
aas
mov
cmp
inc
xchg
movsb
fwait
xchg
shrl
sarb
jnp
jg
xor
cld
xor
sbb
je
mov
push
add
sti
test
test
lahf
push
int
in
add
inc
in
cmp
das
inc
xchg
mov
mov
add
enter
shrb
icebp
mov
or
cld
mov
int
shl
test
xor
leave
icebp
mov
call
mov
rcrl
testl
movsl
sarl
sub
fs
sbb
push
push
sahf
scas
xorl
sti
pop
cld
inc
outsb
imul
scas
mov
add
xchg
repnz
sub
or
ja
test
mov
mov
shlb
pop
movsb
add
iret
push
cmp
mov
dec
into
fildl
dec
adc
ret
dec
cld
or
push
push
sti
dec
lcall
loopne
clc
in
ljmp
jl
fnsave
ja
jb
leave
pop
or
scas
sbb
aas
and
aad
in
leave
mov
xlat
sub
cs
enter
jne
in
adc
sbb
and
mov
add
lret
jno
xor
in
callw
inc
mov
sub
data16
xor
cltd
aas
sub
stc
xor
fsubl
mov
insb
sar
fwait
mov
das
mov
jecxz
xchg
pop
loopne
test
icebp
jnp
mov
dec
test
imul
aas
inc
jmp
push
js
es
jmp
repnz
movsl
nop
mov
jno
fidivs
cmpsb
pop
test
sbb
out
stos
cltd
mov
repz
daa
push
xchg
jmp
std
and
lret
jg
adc
lcall
push
js
mov
or
icebp
pop
add
in
ljmp
inc
jl
repnz
push
out
loopne
mov
push
jb
rclb
cmp
lods
outsb
adc
and
fiadds
adc
clc
repz
jnp
jge
jmp
push
mov
inc
xchg
sbb
and
pop
dec
ss
test
jmp
jne
ds
xchg
jle
imul
add
je
into
inc
add
movsb
gs
xchg
xchg
cld
jl
bound
mov
sub
push
loopne
test
cwtl
aaa
in
insb
lods
cmp
fwait
mov
jae
cwtl
jae,pn
clc
push
push
add
xchg
inc
sbb
imul
cmp
mov
jge
sarb
out
push
aaa
dec
mov
outsl
adc
and
mov
and
mov
inc
mov
or
jae
cwtl
hlt
out
mov
mov
imul
decb
fwait
cs
call
or
dec
cmc
and
ljmp
scas
fsubs
test
push
sub
mov
dec
sbb
push
aas
mov
rolb
loopne
ljmp
fcoml
out
pusha
dec
fs
push
sti
pop
imull
jo
call
mov
xchg
mov
add
mov
add
jmp
add
stos
pop
fstpt
dec
out
pslld
stos
scas
cli
aad
filds
pop
decl
aas
push
or
ds
and
iret
lods
mov
lds
pop
jbe
shrb
mov
dec
ss
and
cs
jnp
jne
push
mov
adc
cli
jle
mov
stos
loop
shll
or
xor
push
lret
mov
adc
fwait
lea
lods
ret
mov
sbb
enter
aad
mov
popa
rorl
ds
or
lods
mov
mov
dec
movsl
outsb
mov
les
mov
jle
add
idivb
ror
pop
pop
test
jl
vpaddb
aaa
add
sbb
inc
daa
aad
adc
push
stc
jmp
jecxz
pop
shrb
mov
mov
mov
clc
js
icebp
out
mov
aam
mov
xchg
or
cld
jle
mov
xor
out
cmp
dec
push
push
and
xchg
inc
std
les
xchg
dec
gs
je
loope
fisttps
xchg
cltd
inc
dec
jl
std
jo
jb
pop
mov
mov
jo
icebp
or
jno
aam
jnp
aaa
fwait
adc
add
fdivrl
aam
in
push
dec
negb
call
cli
rorb
out
in
test
cmpsb
aam
or
xchg
fcoml
mov
cmp
mov
repz
or
pop
sbb
loope
lea
rdtsc
sub
xor
and
mov
xor
fwait
cmpsb
add
mov
aad
addr16
mov
add
test
aaa
cli
loope
jnp
push
or
rorb
stos
fnstenv
aad
aaa
cmp
lret
jo
inc
sbb
sarb
in
mov
mov
add
push
addl
mov
aaa
loopne
mov
out
dec
nop
fnstenv
dec
jg
popa
sbbl
mov
das
dec
sub
int
shll
rcll
mov
and
and
pop
sbb
dec
and
loop
hlt
sub
add
jne
fstpt
inc
orl
push
call
sti
cmpsl
std
idivl
andb
outsb
jmp
jp
lret
push
insb
xor
push
dec
adc
dec
out
xchg
jae
add
enter
xchg
and
jmp
mov
inc
fcomps
jmp
jo
cmp
dec
fidivrl
or
mov
adc
lods
test
add
adc
fwait
out
stos
stc
mov
ficoms
cwtl
je
lock
pop
xchg
outsb
faddl
out
mov
pop
push
adc
and
sub
dec
mov
inc
popa
out
ds
movl
push
or
jbe
inc
sbb
add
lods
sub
jo
enter
lret
adc
cld
dec
pop
lahf
and
lods
aam
movsl
dec
xchg
and
jno
aam
jge
rorl
mov
fistpll
lock
sahf
testl
stos
mov
fildl
and
imul
or
arpl
imulb
mov
push
or
out
movsb
repz
jb
sbb
mov
and
out
aam
mov
and
lahf
jg
adcl
inc
cmp
mov
hlt
add
pop
cmp
sub
xchg
icebp
inc
enter
dec
adc
es
test
ss
pop
movsb
enter
ljmp
call
pop
and
inc
and
mov
int
dec
xor
fstl
cmpsb
stc
test
add
out
sbb
mov
movb
ret
repnz
decl
xchg
mov
mov
jae
jno
popa
sbb
test
pop
dec
mov
fcomps
clc
iret
mov
mov
pop
inc
cmp
sub
mov
fidivrs
sub
outsb
inc
mov
and
add
fdivs
sub
das
cmp
xor
or
ficomps
stc
cmp
loopne
xor
jmp
jae
pop
cmp
cmp
xlat
and
insl
jae
mov
repnz
je
mov
pop
inc
sbb
nop
mov
pushf
xchg
shrb
mov
xor
cmpsb
leave
les
stos
mov
out
xchg
pushf
jo
cmp
outsl
and
insl
or
outsb
cmc
jbe
shrl
mov
aam
repnz
push
sub
stos
out
pop
int3
xchg
cmp
aas
jge
pop
pop
cld
and
fs
cmp
das
xchg
jae
xor
scas
adc
mov
fstpt
andb
imul
pop
xor
sbb
leave
out
xor
push
pushf
push
ljmp
xor
stc
mov
inc
or
pop
cmp
iret
sbbl
mov
xor
lret
or
sbb
shr
pop
pop
cmp
jg
test
mov
or
std
ss
push
lods
xchg
popa
jno
adc
enter
ret
nop
es
xchg
or
sub
add
cmp
scas
or
cmp
add
sub
xchg
inc
cmp
movsl
mov
aam
rol
out
js
mov
call
xor
loopne
inc
push
or
mov
out
test
pop
stc
sbb
pop
pop
sub
pushf
push
add
outsl
sbb
pop
idiv
and
out
imul
dec
enter
mov
sub
lahf
pushf
data16
jmp
hlt
scas
ja
pop
and
fdivl
dec
insb
imul
pop
cmp
mov
sub
lods
sbb
fisubl
dec
inc
inc
cli
xchg
jno
je
stos
jecxz
roll
cmpl
xchg
loopne
ret
adc
sti
adc
into
jo
xor
xchg
sbb
sub
sti
mov
addr16
test
pusha
sbb
xchg
cmpsl
sub
lcall
je
ficoml
nop
mov
dec
scas
subl
xor
lds
addr16
add
mov
or
outsl
mov
jmp
js
fildll
pop
into
xchg
ja
cs
adc
test
jo
ljmp
ret
repnz
jbe
mov
lds
xor
dec
or
es
fs
lea
pop
daa
stos
sbb
lret
in
out
test
dec
mov
pop
cltd
add
mov
cmp
pop
push
mov
sbb
push
inc
or
lods
pop
sub
mov
fbld
xchg
or
out
sbb
inc
sbb
inc
shrb
in
pop
sub
cmp
mov
out
sahf
xchg
mov
hlt
loope
shll
enter
adc
out
jns
cmp
jg
jo
movsl
cwtl
xor
and
stos
addl
leave
into
cltd
cwtl
and
sub
sbb
repz
ret
cltd
test
cmc
jno
loope
movsb
xchg
popa
push
xchg
xchg
cld
lods
icebp
leave
cmpsb
cmp
lods
xchg
jne
fbld
in
xchg
push
sahf
icebp
nop
jle,pt
ror
cmpsl
inc
dec
mov
out
mov
pop
push
fsubs
mov
cmp
cmp
jb
repz
xchg
pushl
in
out
jo
cltd
jl
mov
sti
cmp
loopne
push
into
jle
mov
es
shll
out
cmp
in
sbb
repz
and
jnp
mov
pop
cmc
xor
aaa
push
mov
lods
mov
shll
bound
es
es
xor
adc
adc
dec
jae
mov
mov
push
outsl
xlat
jmp
call
aas
lret
jns
ficompl
insl
or
fwait
lods
int
in
cld
xchg
movsb
testl
mov
sub
outsb
add
or
xor
adc
jmp
jge
xor
call
push
xor
jp
xor
cmc
xor
sub
sbb
inc
repnz
hlt
sbb
mov
jno
shll
jae
xor
stos
or
and
popf
push
lods
jl
pop
cwtl
dec
call
and
ljmp
aas
or
in
pop
xchg
inc
mov
scas
xor
es
ss
movsb
movsb
add
xchg
sub
movsl
push
xor
or
mul
adc
sti
in
cwtl
jae
incl
clc
xor
imul
inc
mov
cli
pop
mov
stos
xchg
pop
out
ficomps
sbb
jge
inc
jle
mov
and
fiadds
add
sbb
xchg
push
imul
mov
aad
popa
orb
sbb
push
je
mov
xor
aad
addr16
cli
adc
push
and
dec
inc
mov
stos
pop
adc
bound
add
xchg
sub
aam
loopne
jnp
mov
outsl
cmp
ficoml
mov
fbstp
clc
mov
push
adc
add
cltd
ret
mov
in
pop
add
push
dec
enter
cmp
outsb
xchg
jbe
enter
fwait
lods
decl
xchg
leave
inc
imul
mov
xor
cmp
cli
jecxz
add
out
or
jmp
xor
fsubrl
nop
jle
mov
xor
pop
lret
jmp
xor
int
push
push
mov
outsl
jb
and
clc
sbb
mov
movsb
push
stc
sti
mov
ss
push
pop
into
inc
nop
pop
scas
cld
pop
dec
scas
cmc
add
das
jns
mov
lods
mov
sbbb
jle
clc
fildl
and
sub
jmp
jl
cltd
iret
sbb
inc
lods
loope
out
or
adc
dec
rorb
out
popa
std
shr
insl
pop
int
add
xor
loopne
divl
push
call
mov
int3
in
insb
ljmp
rcl
pop
insb
out
xchg
add
jp
mov
ljmp
clc
sub
movsl
xchg
imul
out
xchg
ds
clc
in
or
jae
mov
in
cmp
or
pop
push
cli
icebp
test
loopne
or
cmp
lds
sbb
scas
push
cmp
je
std
loopne
and
cmp
mov
cmp
mov
or
rclb
or
pop
les
dec
dec
loop
cmp
repz
xor
xchg
insl
loop
or
push
sub
xchg
sarb
sbb
std
test
movsb
xor
cli
test
sub
jle
dec
insl
ds
insl
push
inc
fisubrl
jne
stos
pop
sbb
lds
out
push
insl
lods
mov
mov
mov
movsb
push
inc
incl
inc
sub
lret
testl
cmp
sbb
jg
xchg
clc
clc
fcoml
xchg
movaps
pop
and
iret
xlat
repnz
int3
loop
pop
push
int3
adc
imul
xor
or
jl
push
mov
scas
mov
iret
mov
push
xchg
mov
ljmp
cmp
push
cs
or
shr
stos
insb
push
clc
addr16
dec
fdiv
int3
dec
mov
pop
push
popf
scas
xor
sbb
mov
sbb
loop
and
ret
pushf
add
adc
es
loopne
shl
out
fbld
xchg
das
or
jno
jb
mov
sub
enter
cs
imul
inc
sbb
pushf
sbb
fmul
es
jns
and
fildll
lods
dec
mov
es
cmp
int3
adcl
nop
inc
or
jg
mov
add
pop
test
test
cmp
call
hlt
push
fwait
roll
sub
mov
loop
mov
adc
jne
sub
push
in
dec
xlat
adc
cld
mov
mov
pushf
cli
push
in
int
imul
dec
adc
jns
push
mov
xchg
mov
cmp
cmp
pop
adc
or
fs
push
mov
inc
mov
rcr
stos
lods
jecxz
sub
pusha
jecxz
and
inc
lods
scas
sub
bound
nop
cmp
dec
testb
pop
and
data16
mov
cmp
stos
ss
mov
int
mov
push
pop
adc
push
loop
xchg
jg
push
mov
xchg
cli
nop
sub
iret
cs
popa
adc
cmpsb
pusha
adc
mov
add
fldcw
mov
jmp
pusha
out
sbb
pop
add
pop
gs
shr
sarb
add
xlat
out
push
jle
in
pop
xchg
popf
push
ss
push
xchg
or
ja
or
adcl
pop
add
xlat
pop
aam
pop
rolb
push
mov
cmpsl
scas
xor
out
pop
inc
xor
pop
sub
arpl
sarb
cmpsl
mov
adc
repnz
gs
xor
shll
out
cli
cwtl
loopne
out
fdivs
hlt
repnz
es
xor
jmp
sbb
ja
and
out
sbb
jns
xchg
xchg
pop
iret
ret
inc
popf
mov
incb
cli
popf
xchg
add
addr16
movsb
test
popa
loopne
int
aad
push
pop
out
loopne
or
push
rclb
and
icebp
mov
push
or
sbb
jg
aas
xchg
mov
movsb
mov
cmp
jae
and
cs
push
cmp
popf
jmp
dec
push
scas
sbbl
add
or
enter
mov
xor
int
pop
pop
wrmsr
aad
lods
sub
pop
in
popf
mov
insb
lret
xor
pop
xchg
lods
jno
enter
jns
xchg
pop
icebp
inc
push
mov
mov
std
or
aad
enter
inc
lock
rcrb
aas
pushl
ja
xor
loope
cltd
push
push
mov
or
push
jmp
les
out
cmp
test
pop
xchg
mov
lahf
adc
dec
adc
inc
pusha
sbb
adc
adc
xorl
and
mov
push
inc
mov
out
mov
sbb
aaa
jmp
insb
out
aaa
aaa
push
jmp
pusha
rcrl
pop
cld
sub
mov
mov
add
es
and
sbb
and
and
insb
sbbb
mov
pop
fwait
mov
push
mov
je
jbe
nop
and
adc
inc
incb
jp
fisttps
cli
cmp
mov
pushf
push
adc
inc
int
sbb
lcall
cli
or
sub
mov
jecxz
push
push
sbb
push
repnz
inc
mov
sti
aas
and
mov
dec
pushf
cmp
or
aaa
push
sub
cltd
sbb
cmpsl
adc
ja
adc
aam
jo
push
loop
cmp
push
mov
push
jne
cmp
cmp
js
sbb
jbe
test
lret
das
loopne
dec
pop
fldl
das
outsl
mov
movsl
aad
add
pop
ljmp
pop
into
scas
test
mov
mov
dec
pop
jl
ret
and
and
pop
pop
jnp
adc
inc
jns
pop
hlt
pop
fadd
add
pusha
xor
or
sub
mov
xor
jecxz
fisttpl
ret
in
adc
sti
sahf
lds
dec
xorb
sbb
in
jl,pn
add
js
mov
dec
daa
loope
insl
mov
jp
mov
pop
dec
cmpsb
mov
push
inc
sbb
inc
popa
ret
pop
jle
and
dec
movhps
push
mov
mov
xor
test
out
or
mov
xor
mov
aad
dec
call
pop
movsl
cmp
pop
push
or
xlat
jno
sbb
jl
dec
outsl
stos
xlat
es
dec
and
inc
sbb
push
cltd
repz
push
shlb
jge
lret
mov
decb
or
jmp
jecxz
xchg
and
and
testb
mov
popa
icebp
or
add
pop
or
dec
shll
popf
int3
xchg
popa
stos
dec
mov
add
into
std
mov
add
ret
or
jmp
lret
ss
add
notl
stos
lret
xor
mov
jbe
pop
fwait
sub
cmpsb
cmp
pop
add
call
jle
icebp
fdivr
adc
imul
aam
jae
in
inc
inc
xor
pop
test
stos
call
push
pop
jp
push
lock
pcmpeqw
jno
fisttpl
cltd
jno
lea
loope
test
pop
in
aad
test
xor
jbe
lahf
repnz
mov
stos
movsb
xchg
xor
push
xchg
sub
fildll
adc
lahf
mov
stc
sub
jmp
cli
daa
mov
call
cmp
outsl
xchg
xchg
cwtl
aas
cmpsl
cmpsl
lock
jmp
test
jecxz
fcmovu
inc
nop
push
insl
sahf
inc
xchg
lea
mov
inc
js
enter
lods
int3
popa
sti
mov
hlt
inc
loopne
dec
or
mov
dec
dec
aas
dec
ss
push
sahf
sbb
daa
fisubrs
inc
pop
aas
and
push
inc
jmp
rclb
and
jno
inc
and
lcall
push
xor
push
scas
jmp
inc
adc
imul
fs
inc
jp
jp
xor
pop
ljmp
out
xor
es
jo
push
xchg
icebp
push
xchg
pop
adc
adc
pop
push
mov
adc
shll
or
mov
ficompl
lock
pop
aaa
je
dec
pop
cmpsl
push
or
es
dec
jmpw
add
cld
pop
cmp
popf
mov
repnz
insb
sbb
imul
movsl
jg
mov
inc
ja
rcll
adc
in
mov
ret
ss
xor
cmpsb
cltd
xchg
inc
xlat
sti
add
lcall
decl
xchg
cwtl
lock
fmul
mov
jge
mov
mov
out
cli
xchg
or
std
jmp
div
pusha
mov
mov
pop
adc
js
push
mov
aaa
repnz
aas
xlat
int
and
fwait
out
xor
fs
mov
sub
fistpll
and
xchg
repnz
sar
sub
jl
mov
int3
xchg
dec
cmp
push
jo
jns
les
or
inc
xor
fcompl
js
xchg
fs
xchg
adc
mov
ljmp
push
stc
cmp
jp
sub
inc
or
bound
loope
and
test
push
or
cld
test
push
les
pop
or
les
sbb
lret
inc
xchg
test
decb
test
xchg
xchg
xchg
ret
inc
sti
xchg
adc
out
daa
decl
jo
mov
imul
out
mov
add
fiadds
mov
in
xchg
test
jbe,pn
inc
push
mov
fldl
aam
lea
pop
sub
out
jo
arpl
cld
stos
cmc
dec
sbb
pop
cltd
xchg
sbb
je
pop
cmpsb
pop
cmp
pop
inc
pop
add
xlat
ret
or
dec
popf
jno
pop
std
pop
lret
icebp
cwtl
xchg
mov
xchg
pop
sbb
mov
or
push
insb
mov
push
fwait
and
in
out
mov
js
cmp
cmpsb
pop
scas
pop
sbb
mov
lock
out
mov
into
dec
arpl
cs
xlat
cmp
outsl
mov
fs
sbb
dec
lods
inc
cs
sahf
xor
mov
sbb
adc
les
ss
scas
xchg
leave
xorl
aad
movsb
cli
cltd
movsb
mov
or
jae
or
ds
int3
stc
enter
fcoml
push
xchg
insb
call
je
adc
repnz
or
mov
push
push
inc
mov
lds
das
sub
mov
sub
int3
rcrb
aam
ljmp
xlat
mov
xchg
scas
lret
int
inc
daa
dec
cmp
test
movsl
xor
mov
sbb
mov
xchg
out
inc
out
arpl
mov
mov
sub
jmp
sbb
dec
xor
std
lret
mov
sub
arpl
cmp
and
shrb
xor
aaa
cli
fs
push
push
jp
pop
sbb
add
xchg
mov
mov
xchg
fdivrs
ret
aaa
cmpsb
aam
fldenv
cs
mov
out
shrl
xor
and
add
sbb
mov
add
mull
out
pop
pusha
inc
int
cmp
icebp
lcall
arpl
and
repnz
xchg
iret
pop
cmpsl
sbb
xchg
pushf
xor
jb
and
cmpsb
pop
mov
mov
enter
sbb
mov
int
ljmp
in
pop
mov
cmp
or
adc
or
ss
cwtl
dec
or
shlb
cwtl
cmp
adc
pop
fildl
ror
lds
and
xlat
test
lods
addl
scas
pop
sbbl
movsl
pop
dec
or
les
mov
or
push
nop
add
cs
adc
nop
sbb
push
mov
call
rcll
cld
sub
fnstenv
addb
mov
stos
outsl
jge
pop
inc
repnz
mov
mov
inc
pop
cmc
xchg
repz
mov
sbb
xchg
fdivrp
sbb
flds
add
cmp
faddp
iret
dec
adc
mov
xor
aas
inc
cmpsb
and
dec
gs
scas
mov
int3
mov
in
sub
jge
or
hlt
push
fstpt
jbe
pop
xorl
jno
push
sbb
and
sbb
scas
cltd
or
jecxz
int3
sti
jo
mov
inc
push
sbb
fistl
lret
add
sub
sub
js
jp
sub
mov
icebp
xchg
aas
out
sub
push
lcall
add
pop
decl
adc
and
repz
sbb
mov
lcall
mov
rcll
or
inc
push
clc
cmpsl
nop
in
test
pop
ret
cmpsl
imulb
ds
dec
pop
push
in
push
add
out
mov
inc
out
js
jecxz
xor
in
into
xchg
pop
xchg
jmp
and
mov
or
out
mov
xchg
dec
lods
in
inc
pop
cmp
icebp
or
arpl
dec
aam
enter
xchg
add
pop
das
leave
cs
sub
push
and
sbb
shrb
nop
outsb
mov
adc
mov
es
es
or
out
xrelease
js
lea
je
scas
push
fdivl
fwait
inc
push
jae
idivb
mul
mov
fiadds
inc
and
jae
pop
std
dec
aaa
and
sarl
xorl
push
rcrb
lcall
in
mov
pop
pop
jmp
sti
mov
js
jg
test
and
and
lret
ds
insl
jnp
shll
rcrl
xchg
cmp
or
mov
cmp
rcrl
mov
subb
push
movsb
inc
jns
push
mov
cmp
jecxz
cmp
dec
inc
stc
mov
sbb
xchg
test
jle
or
add
outsl
icebp
add
dec
push
dec
mov
jae
loop
fadd
inc
mul
shrl
enter
dec
xor
adc
push
outsb
dec
sbb
mov
cmp
or
cmp
mov
insl
or
loopne
pusha
cmpsl
mov
ret
xchg
fstpl
je
cmpsl
popf
push
adc
mov
aad
in
xchg
insl
pop
inc
lahf
test
pushf
xchg
mov
mov
sbb
lods
pop
rcrb
rclb
pop
inc
fiadds
popf
stos
movsb
cld
cli
mov
jbe
pop
js
les
jmp
jecxz
or
stos
in
jno
inc
push
orl
aaa
scas
push
push
test
mov
scas
iret
out
lret
aam
sub
mov
and
xchg
das
dec
dec
adc
xchg
dec
sbb
dec
ret
cmc
mov
lock
dec
fdivrl
arpl
adc
stc
iret
cmpsl
adc
or
adcl
lahf
out
out
shlb
adc
pop
sbbl
mov
sbb
je
cmp
xor
loop
orb
ja
push
cli
mov
jl
pushw
mov
dec
push
shrl
adc
icebp
js
pop
pop
pop
xchg
hlt
das
inc
and
stos
mov
mov
nop
push
jl
jno
pop
stos
ss
push
out
call
stc
inc
ss
adc
ss
xchg
aaa
xchg
movsb
cli
adc
pop
sbb
jg
loop
cmpsb
jg
jno
cmpsb
adc
loope
sarl
lahf
daa
cmp
mulb
scas
jp
inc
outsb
call
movsl
sub
arpl
push
loop
dec
movsl
mov
mov
mov
jle
add
fadds
add
add
sub
pop
rcrl
pop
pop
adc
sub
push
mov
cmc
call
aas
hlt
sub
sbb
push
lds
lea
mov
inc
mov
jae
xor
lds
cwtl
mov
gs
dec
fcomps
addl
xor
add
cmp
xlat
mov
and
imul
add
test
out
xchg
loop
xor
dec
xlat
out
loop
lods
decl
dec
div
dec
fmuls
dec
pop
cs
in
repz
imul
outsb
mov
test
adc
sbb
push
lret
inc
lods
mov
pop
int
cs
mov
addr16
testl
xor
shlb
cmp
gs
inc
jne
inc
lock
mov
ss
arpl
std
and
dec
fsts
jbe
mov
pop
cvtps2pi
std
cmp
enter
jl
popa
jbe
push
push
stc
cmpl
ret
cmp
inc
je
cmp
xchg
repnz
mov
or
mov
inc
add
shl
dec
lret
or
xor
inc
pop
push
aas
mov
inc
or
pop
and
sub
mov
add
cli
es
mov
icebp
mov
iret
lahf
outsl
repz
roll
ds
fmulp
mov
mov
repz
and
mov
jne
push
xchg
popa
hlt
stos
insb
adc
and
fisubrl
call
xchg
push
inc
mov
cmp
sbb
sbb
sub
add
or
or
lock
pop
mov
dec
add
cli
cmp
pop
loopne
cmp
sbb
xor
in
fldl
dec
stos
and
repnz
and
adc
hlt
adc
imul
cmovno
jge
inc
push
js
xor
xor
movsb
jns
cltd
xchg
cli
mov
shrb
mov
rorl
ljmp
test
je
push
insb
add
cs
push
stos
push
ljmp
jo
push
jb
mov
lret
jge
adc
mov
mov
les
call
jo
pusha
or
lcall
test
sub
rcrl
addl
in
in
sbbl
rclb
jge
shll
movlps
in
cmpsl
rolb
shrb
xor
add
pop
and
mov
loope
lea
and
adc
push
cmpsb
adc
cmp
and
pop
xlat
add
mov
testw
sbb
xor
cld
ljmp
adc
push
dec
xchg
or
xor
xor
xor
push
sub
cmpsl
pop
sub
or
in
js
cmp
insl
popa
shlb
sqrtps
add
shll
rorb
in
mov
jl
ret
mov
test
pusha
pop
push
jno
data16
fs
push
notb
inc
je
fcmovb
and
sbb
in
dec
jp
insl
clc
xor
insl
int
ljmp
mov
mov
add
add
add
inc
pushf
out
cmpsl
mov
pop
les
dec
imul
roll
scas
add
shlb
mov
push
xor
jmp
ja
cwtl
popa
dec
sbb
push
out
mov
lock
repnz
push
loop
dec
adc
movsb
pushf
sti
mov
mov
dec
or
xor
imul
dec
dec
xor
jno
xchg
mov
int
mov
inc
jae
inc
push
lea
enter
je
jne
je
sbb
sbb
js
add
data16
cmp
pop
add
call
and
or
jae
imul
bound
mov
jg
bound
incl
shlb
mov
push
cmp
sbb
ja
mov
cmpsb
mov
pushf
rdpmc
mov
jecxz
push
xor
fwait
mov
out
mov
test
aas
dec
dec
mov
jae
out
xor
jno
push
bound
test
xor
fsubl
cmc
aaa
in
push
pop
xchg
inc
jle
and
cmc
push
push
jo
je
jmp
fisttpl
stc
mov
xor
mov
daa
sub
cld
xchg
pushf
inc
jnp
loope
inc
daa
push
mov
mov
negl
mov
outsl
xchg
mov
dec
imul
add
adc
dec
or
mov
pop
cli
rolb
fisubs
push
arpl
stos
lahf
and
xor
or
jmp
test
sub
jne
xchg
test
mov
insl
jg
mov
push
stos
rcrb
ss
mov
loope
xor
inc
add
scas
inc
add
scas
xor
call
sbbl
jae
cmp
mov
daa
and
mov
push
daa
mov
out
jns
cmpsl
aam
inc
aas
push
fldcw
rol
test
lds
imul
cli
orb
lock
lret
imul
xchg
or
aam
inc
js
inc
mov
sbbl
mov
pop
inc
sub
push
call
pop
shll
ds
inc
test
in
mov
push
and
xchg
adc
mov
add
mov
dec
ds
push
pop
and
push
push
and
dec
sbb
inc
les
mov
sub
mov
jns
pop
sub
enter
das
lahf
or
ja
xchg
sub
mov
push
jns
dec
jno
insl
push
dec
sub
dec
cld
mov
gs
pop
xchg
and
sti
rorb
fnstcw
xchg
add
in
das
xchg
mov
test
jl
and
mov
in
dec
hlt
enter
sbb
and
imul
lock
jp
xor
outsl
sbb
sub
cmp
xchg
xchg
ljmp
pop
ret
sbb
push
xchg
sub
pop
fs
int
incl
ds
and
mov
int3
pushf
push
daa
push
lea
popa
js
pop
inc
add
fs
inc
adc
add
js
mov
shlb
or
cmp
xor
xchg
lcall
jmp
lahf
test
adc
test
lahf
mov
fbld
jp
movl
clc
leave
sti
nop
adcl
push
mov
mov
xchg
add
mov
das
push
negl
invd
jo
bound
adc
xchg
xor
and
imul
popa
leave
fs
and
jne
lcall
pushf
jmp
fwait
in
cli
scas
xchg
cld
mov
sub
int
inc
cmp
sub
push
leave
push
sbbl
in
pop
js
rorb
jg
lret
nop
push
insb
shll
jno
movsl
ja
cmp
sbb
enter
mov
jb
mov
push
mov
mov
lds
insl
xor
sbb
mov
push
xor
xchg
or
sbb
cmp
xchg
jbe
iret
ja
insl
jb
jle
lock
in
or
xchg
mov
mov
jo
dec
int3
and
cmpsb
add
movsb
dec
push
push
sbb
sbb
out
js
push
pop
xor
dec
ljmp
adc
adc
mov
dec
adc
test
imul
loop
adc
push
push
ljmp
test
push
and
dec
pop
mov
dec
adc
jecxz
fadds
jns
stos
xchg
dec
sbb
lock
push
fimull
xchg
xchg
and
sub
adc
dec
inc
nop
adc
sbb
pushf
mov
aas
mov
sbb
lret
out
mov
stc
mov
ss
add
addl
pop
cltd
out
lea
mov
pop
pop
adc
push
test
xor
or
les
cltd
jb
mov
mov
shll
pop
jl
jo
add
xor
add
js
push
mov
data16
mov
lret
sub
xor
sub
cmp
inc
dec
jge
aad
jo
insl
cmc
jne
inc
jae
dec
push
hlt
jno
sbb
or
pop
or
sti
push
sub
testb
mov
clc
scas
or
mov
popa
adc
loopne
ljmp
loope
and
int3
lods
ss
xchg
cmc
test
jno
adc
sbb
or
xchg
fsubrl
mov
mov
mov
jge
xor
sbb
fbld
push
mov
movsb
iret
add
sbb
ret
popf
dec
and
inc
lds
jne
sub
imul
or
pushf
push
mov
lock
movsl
adc
cmp
inc
push
mov
mov
push
inc
les
stos
lods
aas
mov
xor
jge
loopne
add
rcr
push
sbb
mov
std
ljmp
daa
mov
sti
mov
clc
pop
cmp
push
or
pop
or
sbb
aas
aad
adc
ljmp
mov
repz
mov
cmp
insb
mov
cmp
jae
xchg
jbe
imul
push
adc
repnz
mov
xor
in
arpl
mov
imul
nop
xor
in
pop
push
add
stos
add
test
sbb
jne
mov
dec
lock
jnp
out
fstl
rcrl
es
inc
icebp
push
test
shrl
mov
mov
mov
push
push
gs
jbe
fisttps
xchg
mov
xchg
sub
lahf
lret
divl
ss
movsl
fwait
sbb
push
adc
aam
sbb
sub
or
stc
gs
cmc
adc
mov
stos
lods
je
push
dec
or
mov
or
mov
mov
cwtl
mov
lds
mov
xor
cltd
mov
or
lahf
sub
fst
mov
push
popa
mov
pop
dec
mov
mov
jne
push
sub
jnp
xor
sahf
out
xchg
jnp
pusha
adc
xchg
dec
out
cmc
sub
incl
jmp
push
xchg
jl
cs
inc
scas
push
jns
mov
xlat
cwtl
mov
mov
inc
cmp
xchg
cmpsb
and
in
sbb
pushf
xor
scas
cld
xchg
pushl
push
test
mov
mov
sbb
fwait
jecxz
into
cmp
mov
jne
push
stos
nop
fistpl
push
dec
pop
sub
inc
out
ja
cmp
mov
xchg
subl
movb
aaa
in
mov
jmp
jmp
dec
fstpt
adc
into
rcl
adc
ret
jae
and
push
lea
imul
mov
and
pop
mov
jl
out
arpl
roll
push
movsb
jae
or
das
pop
mov
ja
roll
idiv
sbb
xor
movsl
pop
cli
ljmp
dec
ljmp
jno
mov
daa
hlt
insb
loop
leave
lahf
movsb
push
xor
mov
xchg
mov
jmp
xor
sub
orb
jge
pushf
je
ss
xor
pop
dec
adc
hlt
or
rcll
aaa
ds
dec
repz
sarl
xchg
pop
sbb
aas
std
cmpsl
and
fidivl
jnp
mov
pop
movsb
and
lret
incl
mov
jnp
jecxz
add
xchg
test
jb
adc
mov
sbb
xchg
into
repz
xor
mov
hlt
addr16
mov
int3
je
inc
aas
jl
pop
lret
dec
sahf
arpl
shlb
lret
lods
lods
sbb
adc
popl
out
mov
dec
imul
cmpsl
scas
mov
inc
loope
and
pop
les
les
out
out
mov
fists
andl
mov
ret
popf
sbb
cld
test
and
lods
in
sbb
mov
rep
bound
and
dec
fisttps
sub
xchg
aas
imull
mov
adc
jmp
adc
lds
jle
test
jne
sub
pop
negb
mov
adc
in
push
mov
push
outsb
rcll
xor
rol
out
jb
mov
and
mov
jbe
fs
gs
sub
aas
into
mov
jg
ficompl
mov
cltd
add
inc
sbb
cwtl
mov
push
pop
push
std
bound
and
fcmove
xchg
jmp
fwait
outsl
imulb
dec
xlat
sub
adc
out
or
push
pushf
cmp
lret
pop
arpl
mov
fnsave
jb
dec
sbb
add
es
xchg
icebp
jne
insl
jb
mov
mov
mov
mov
push
adc
repz
and
dec
pop
daa
arpl
lods
sub
push
insl
mov
dec
xlat
add
jge
das
pop
lcall
ret
test
sbb
ret
pop
push
dec
loop
or
mov
jge
add
in
stc
leave
popa
fcmovnb
push
cmpsb
cmp
arpl
xor
push
jle
inc
loopne
xchg
mov
sbb
jl
cmp
pop
cmp
loopne
xchg
es
sahf
sbbl
orb
movb
hlt
add
jno
jne
cmp
cmp
pop
xchg
int
aaa
mov
data16
pop
int3
add
pop
out
push
popf
mov
jecxz
ja
test
sti
dec
and
push
in
adc
pop
or
pop
jne
aaa
stos
xor
or
adc
test
inc
out
imul
mov
ds
sbb
iret
popa
hlt
dec
pop
imul
ljmp
sub
sbbb
lcall
mov
out
mov
xor
mov
cs
ds
addr16
push
pop
sub
push
pop
inc
pop
out
incl
mov
adc
mov
inc
add
fs
jge
pop
jmp
iret
push
fwait
push
push
xchg
mov
insl
mov
imull
sub
js
add
outsb
daa
or
stos
shrl
cmp
shlb
or
xchg
aam
and
mov
insb
pusha
das
inc
stos
mov
pop
fldcw
lret
cmpsb
sbb
sub
mov
pusha
inc
push
sbb
inc
push
jmp
fldt
mov
mov
das
jnp
js
je
sbb
js
loope
jg
int3
scas
data16
push
xor
outsl
mov
cmp
pop
inc
dec
imul
call
sti
push
lret
push
push
mov
in
mov
dec
out
outsl
sub
scas
sub
fwait
and
jg
jl
push
adc
int3
push
imul
xchg
arpl
sbb
sbb
enter
mov
mov
adc
and
cs
or
dec
mov
cltd
pushf
and
cmp
call
sub
cld
push
jno
and
mov
and
fdivs
aaa
sub
dec
fnsave
lahf
and
adc
pop
lock
or
out
xchg
xor
imul
cs
mov
cmpsl
insb
mov
iret
add
stos
stos
cmp
or
jb
xchg
lds
xchg
sbb
push
fstpl
adc
aaa
mov
jg
xchg
mov
sub
xor
add
dec
aas
shlb
xor
imul
xor
cmpsl
dec
mov
insb
rcll
in
cmpsl
sti
mov
movsb
popa
fs
subb
mov
add
cli
lds
pop
jp
adc
scas
enter
test
lret
or
aaa
imul
aam
sub
xchg
pop
cmp
adc
repnz
pop
iret
pushf
cld
call
xchg
in
pop
in
push
dec
movsb
dec
cmp
pop
cmp
lock
jmp
mov
sbb
adc
popa
xchg
xchg
mov
xchg
xchg
sbb
and
or
mov
mov
pop
aaa
lock
xor
dec
int
push
mov
and
call
lret
add
insb
mov
sbb
push
fdiv
jnp
inc
popf
loop
push
into
xchg
fmuls
push
cmp
adcl
popa
nop
loope
adc
xchg
xor
mov
std
push
mov
push
lds
push
test
or
lods
out
pop
xor
fistl
popf
stos
push
dec
ret
jl
jge
scas
fs
push
loope
mov
das
lds
mov
xchg
pop
xchg
std
lcall
icebp
cmp
iret
out
inc
add
sub
into
mov
data16
cmpsl
mov
repnz
dec
fdivrl
cwtl
adc
sbb
std
jle
add
mov
xor
nop
fcomip
jmp
add
mov
jne
fildll
repz
ss
xchg
mov
sbb
vminss
xchg
and
stos
mov
adc
out
test
ret
jbe
mov
faddl
sarl
pop
sub
fcompl
or
mov
dec
aam
jo
in
xor
lahf
shrl
repz
mov
dec
xor
repnz
loopne
mov
inc
lahf
scas
sub
sbb
push
fwait
rorl
iret
xor
je
jo
jle
mov
rcr
setns
inc
mov
mov
leave
dec
pop
aaa
in
sbb
mov
shlb
xchg
loopne
iret
sub
push
xchg
mov
push
jecxz
add
cmpsb
adc
inc
xchg
cmc
out
gs
cs
add
mov
cmp
notb
push
movsb
cmpsb
sub
xor
cltd
add
inc
ret
test
insb
jmp
int
cmp
fisubl
mov
cmp
test
pusha
js
mov
or
pop
mov
fsubl
adc
lret
or
mov
out
addr16
std
hlt
or
jmp
dec
jp
dec
jno
mov
mov
rolb
mov
xlat
pop
dec
dec
jecxz
mov
push
mov
insb
shr
rcrl
xchg
lret
mov
adc
jno
mov
cmc
jmp
daa
mov
test
or
dec
fists
idivb
or
xor
loopne
fadd
cmpsl
popf
daa
xchg
out
rcrb
mov
inc
lahf
stc
sbb
cmp
inc
ljmp
int
jg
dec
clc
mov
mov
pushf
lods
loopne
or
add
test
lret
sub
rorb
sub
mov
pop
out
or
mov
inc
scas
xor
shl
fisttpll
arpl
aam
xor
inc
or
pop
call
dec
jo
mov
cmp
cmc
jb
scas
sahf
jnp
ret
out
addr16
cmpsl
fsts
jmp
lds
push
cmp
adc
aas
dec
pop
inc
rolb
neg
jne
out
sbb
lds
cmp
andb
xchg
orb
adc
outsb
pop
sub
gs
stos
push
push
repz
push
into
sarb
push
jns
cltd
movsl
shl
fmull
sub
mov
les
leave
hlt
mov
out
leave
adc
add
dec
into
mov
stos
cmpb
dec
test
push
enter
sub
xchg
lods
xor
jmp
inc
mov
inc
and
mov
loope
aas
or
mov
lret
mov
or
push
pop
neg
or
fimull
xchg
stos
enter
jae
mov
cmp
les
fsubrp
gs
pop
push
adc
jg
pushl
jns
adc
xchg
mov
and
inc
aad
out
xor
mov
mov
xor
aad
scas
pop
sbb
cmovb
mov
mov
mov
in
arpl
loope
inc
cmpsl
inc
xor
addr16
insb
pop
sbb
in
inc
movsb
push
call
push
xchg
daa
ss
mov
mov
jle
jo
dec
ds
in
sbb
lods
ljmp
mov
or
pop
mov
hlt
mov
imul
pushf
sbb
pop
pop
hlt
rep
pop
stc
notb
addr16
cmovae
pusha
add
nop
sbb
lea
mov
mov
mov
rorb
fdivrs
push
mov
jno
push
mov
and
pop
inc
loope
nop
push
decl
cs
dec
xor
mov
ficomps
movsb
jp
aaa
mov
or
mov
sub
inc
pop
cmp
mov
inc
inc
jb
mov
call
lds
aam
and
mov
sub
fs
inc
mov
add
rolb
mov
call
frstor
lahf
sub
push
mov
push
aad
insb
int3
dec
mov
daa
bound
or
lahf
aaa
in
sub
negl
push
mov
nop
or
pushf
mov
push
mov
adc
mov
cwtl
add
mov
sub
aam
mov
mov
stos
sub
in
cmp
xchg
xor
repz
int3
and
pop
and
gs
aas
sub
movsl
pop
negl
js
xchg
es
xchg
cmp
mov
inc
mov
jg
shlb
sub
and
pusha
adc
cwtl
and
ds
cltd
into
popf
push
dec
leave
hlt
jb
mov
sbb
rcr
testb
les
loope
lea
fldcw
jg
sbb
stos
dec
pop
mov
mov
out
je
and
test
ss
inc
xchg
cld
xchg
jne
add
inc
lret
xorb
imul
mov
xchg
pop
or
js
push
sub
je
ljmp
je
or
std
std
inc
and
ret
or
pop
xchg
ret
cmp
mov
test
push
inc
inc
xor
insl
ja
inc
sbb
xor
or
cmpsl
or
xchg
fs
xor
orb
imul
add
in
fsubrp
aaa
aam
jl
xor
jmp
hlt
push
stc
push
divb
cmp
pop
and
lds
xchg
lcall
adc
pusha
mov
nop
aaa
pop
adc
xchg
aaa
add
pop
cmp
std
adc
pop
push
jae
test
xchg
cmpsb
int3
daa
jle
test
sub
dec
decb
loop
xchg
lahf
test
pop
lea
repnz
dec
fildl
aad
cs
int
add
xchg
and
bound
aas
mov
pop
mov
and
roll
popf
add
popl
add
jg
enter
movsb
xor
mov
icebp
fistpll
outsb
sbb
jo
xor
mov
jle
xorl
repnz
pop
pop
xchg
int
addr16
jnp
mov
sbb
repz
out
adc
mov
lret
push
and
insl
rorl
insb
fimuls
es
pushf
insl
push
gs
mov
pop
mov
add
inc
mov
xor
pop
mov
lods
xchg
scas
lds
mov
cmp
add
add
pop
xchg
loope
int3
loopne
ja
out
jp
jae
sub
rclb
mov
push
aad
hlt
inc
jmp
in
aam
and
lds
outsb
mov
mov
inc
test
lahf
jns
in
cltd
cmpsl
in
jbe
ret
adc
bound
sti
repnz
push
pop
pop
stos
sub
out
jl
hlt
jecxz
pop
sahf
in
sti
out
and
cmp
push
mov
movsl
scas
xor
outsl
insw
test
cmpsb
scas
rcl
pop
cmp
cltd
pushf
rclb
pusha
sub
add
dec
fucomp
pop
ret
fbld
mov
add
clc
ds
addb
xor
int
ds
loopne
rcr
test
in
xchg
lcall
jbe
insl
jecxz
xlat
daa
and
fs
push
pop
push
rclb
subl
mov
fildl
and
and
jbe
cli
in
ds
cmp
sti
enter
js
scas
leave
out
shl
mov
mov
adc
loope
add
mov
movsb
in
dec
xor
lahf
addr16
sbb
imul
xlat
rcll
dec
rcrl
imul
jecxz
xchg
push
adc
pushf
std
and
and
inc
push
mov
mov
in
fwait
sub
push
sbb
xchg
mov
or
and
push
mov
sarl
inc
in
shrb
mov
outsb
lret
jmp
sbb
cmp
les
cmp
xchg
dec
adc
sahf
mov
call
mov
loopne
adc
outsb
push
mov
repz
jno
xchg
cltd
cltd
mov
dec
push
ret
in
add
in
shl
mov
test
push
sub
pushf
fsubrl
insl
cmp
inc
dec
test
test
int3
sub
daa
andl
pop
arpl
dec
add
cmp
jmp
inc
lahf
and
and
shrb
jle
mov
adc
test
or
out
jbe
lock
xor
aam
jp
cmp
test
add
lods
mov
out
int
sub
inc
adc
push
aad
pop
mov
pushf
pop
dec
out
pop
mov
fsubs
int
aas
fstps
or
sbb
flds
ja
out
shll
push
incl
in
or
jo
cmp
inc
into
idiv
fdivrs
pop
inc
inc
mov
or
sbb
inc
mov
nop
lea
js
fiaddl
mov
jmp
cmpsb
add
xor
data16
pop
imulb
jns
cmp
in
lahf
dec
divl
mov
fistpll
fildl
pop
inc
mov
xor
xchg
divb
fildl
xchg
arpl
mov
sbb
xchg
adc
subl
push
mov
xor
cld
sub
cmp
arpl
dec
mov
lret
out
test
or
ja
rcrl
popf
insl
xlat
cmp
adc
jne
hlt
xor
iret
xchg
mov
cmp
in
int3
jge
int3
jge
icebp
jmp
mov
or
xchg
jb
adc
popa
gs
sbb
insl
mov
inc
push
pop
xchg
mov
jecxz
pop
sbb
mov
jmp
cld
dec
mov
inc
sub
mov
rorl
push
xchg
push
aas
inc
insb
lahf
pop
dec
pop
clc
mov
lock
or
sbb
or
push
outsl
insb
adc
rcr
aas
out
push
fcmovb
adc
daa
jns
cs
jmp
pop
pop
enter
int3
and
mov
dec
fstpl
je
cmp
repnz
adc
push
pop
pop
fcmove
shlb
pop
lahf
fisttpll
int3
addr16
jl
mov
ficomps
push
les
sahf
fs
adc
das
dec
pop
sub
push
adc
stos
add
clc
jge
inc
rcll
xchg
fildl
arpl
fsub
fildll
in
movsl
sahf
push
xchg
mov
notb
inc
push
jmp
imul
loope
js
adc
into
ret
in
lea
aam
rolb
insb
mov
outsb
bound
clc
rcrb
lea
int3
lea
mov
push
mov
dec
fucomp
repnz
ret
fstps
lds
lods
subb
mov
mov
pop
xchg
aad
dec
jmp
data16
mov
faddp
cmp
lret
scas
push
pushf
push
pop
ljmp
mov
or
xchg
cmp
js
push
mov
in
push
fdivl
xchg
mov
rcl
sbb
push
sti
loope
repnz
pop
js
pop
shrb
jp
add
pop
cmp
adc
sbb
push
mov
cli
add
xchg
das
pusha
ss
mov
adc
mov
loop
lods
clc
inc
mov
jno
cmp
and
inc
shl
xor
sbb
fs
aad
jle
mov
lret
xchg
sbb
cmp
std
dec
sbb
popf
lds
mov
inc
sub
cmp
mov
jle
rcrb
adc
pop
lea
aad
stc
jp
and
or
jne
ror
data16
or
xor
xor
in
mov
fsubp
inc
adc
dec
or
sbb
dec
cmp
jne
ficomps
fdiv
sahf
mov
sti
bound
dec
mov
aas
pop
inc
out
xor
adc
cmp
rcr
add
inc
test
xchg
sarl
push
loope
mov
ds
or
in
addr16
inc
add
stc
or
xor
adc
scas
cmp
pop
testl
outsl
loope
mov
adc
and
sbb
es
cmp
sbb
add
add
in
lods
test
aaa
in
stos
and
jnp
arpl
scas
cli
scas
leave
mov
mov
add
mov
inc
push
aam
cmpsl
js
and
aas
rol
rorb
jmp
xchg
adc
push
mov
iret
je
or
inc
test
and
xchg
jne
clc
pop
shl
add
popf
or
orb
sub
popa
bound
jb
int
cmpl
dec
xchg
mov
pop
fstpt
push
pop
fsubl
pop
dec
or
fs
xor
sub
out
jnp
mov
pop
sbb
lods
lods
or
mov
popf
lds
push
rcrl
mov
jno
mov
lcall
lds
xchg
pop
das
xor
lods
fs
xor
adc
mov
push
cli
dec
stc
xorl
lcall
leave
pop
mov
mov
sahf
push
push
in
cli
in
ror
fdivs
xchg
lea
popf
pop
sub
into
icebp
or
enter
pusha
cmp
test
xorb
nop
loop
aad
cmp
lock
mov
cmp
dec
shrl
sti
mov
lock
pop
movsb
inc
sysret
hlt
gs
pushf
mov
cmpsb
out
cli
push
mov
aaa
mov
pop
stos
test
lds
inc
xor
in
scas
mov
adc
insb
scas
insb
mov
out
xchg
xor
mov
shll
icebp
sbb
fimull
fstl
dec
sub
or
dec
xchg
ret
jle
lock
cli
cs
rol
imul
sub
lret
fsubl
sbb
mov
push
mov
jg
jne
imul
push
and
js
xchg
sub
int
imul
jns
push
xchg
cld
push
pop
arpl
scas
imul
mov
and
push
test
bound
xchg
push
fstl
cltd
push
sti
sbb
sub
jne
fmuls
mov
outsb
cltd
dec
inc
test
mov
pop
cmc
mov
xchg
xchg
inc
mov
movsb
int3
es
cmp
mov
jnp
repz
in
xchg
imul
fcompl
add
mov
and
mov
daa
sbb
xor
cmp
cli
cmpsl
cltd
sbb
push
xchg
insl
loope
dec
pop
inc
and
fstpl
clc
push
mov
xor
daa
rclb
in
call
rcrl
notb
loop
stos
jno
inc
lahf
jge
xchg
int
fildl
outsl
cmp
mov
push
push
fcompl
je
loope
jg
jae
xchg
pop
add
mov
xor
cld
mov
les
loop
call
aas
xchg
lcall
sub
mov
ret
pop
cmp
push
mov
xlat
dec
inc
in
aaa
fs
add
leave
mov
pusha
cmpsl
or
adc
sbb
stc
inc
gs
cmp
pop
stc
or
adc
mov
mov
adc
pop
pusha
lret
es
icebp
xchg
lods
cwtl
fs
aaa
stos
push
scas
test
std
pop
pop
dec
insl
push
int3
inc
mov
fdivrl
sti
or
out
push
cltd
fwait
idivl
ds
xor
iret
fs
dec
mov
jle
xchg
cwtl
lds
or
sbb
outsl
bound
cmp
dec
movsb
jo
lods
mov
mov
jg,pt
lcall
out
xchg
lahf
iret
into
adc
xor
scas
imul
sub
rorb
adc
mov
mov
jmp
test
cmp
mov
pop
rcpps
mov
jp
push
or
mov
les
jns
mov
test
mov
fidivrl
and
test
pop
test
lahf
add
fisubl
jae
sbb
xor
cmp
cmpb
xchg
aaa
mov
and
push
inc
out
dec
mov
pop
jmp
and
mov
adc
mov
int
pop
idivl
jo
movsb
gs
xor
mov
lods
movsb
shll
sub
rcrb
leave
sub
xchg
inc
popa
fs
or
push
lea
lds
jge
or
and
add
scas
int
xchg
aas
xchg
nop
leave
push
nop
or
and
jnp
mov
pop
xchg
xchg
push
aam
xchg
inc
pop
sbb
push
dec
scas
cwtl
cmp
pop
cltd
mov
mov
cmp
cmp
and
cltd
mov
adc
mov
inc
xchg
std
push
xlat
test
out
dec
mov
nop
or
arpl
jo
xlat
jnp
cli
cli
negl
xorb
out
jl
ja
js
hlt
push
iret
mov
push
mov
ljmp
out
scas
pop
scas
xor
ja
jmp
cmp
imul
pop
stos
bound
jmp
cwtl
ds
clc
movsb
mov
push
push
jecxz
inc
loopne
mov
sti
or
xor
add
test
dec
sub
or
xchg
jge
jp
adc
aam
dec
pop
ret
pop
inc
adc
dec
scas
out
incl
aad
xchg
inc
jp
sbb
test
movsl
push
int
outsb
push
jae
orl
cmp
fs
and
add
jne
insb
xchg
stos
xor
mov
cmp
push
or
imul
scas
xor
rcrb
adc
out
sbb
shl
or
push
outsb
pop
sysexit
in
pop
add
mov
jge
outsb
out
sbb
in
mov
xchg
and
mov
out
push
jp
je
push
dec
gs
insb
inc
jae
dec
aaa
cmp
and
pop
in
inc
pop
xor
pop
insb
push
das
les
and
sti
or
inc
lods
je
scas
pusha
xor
ret
xchg
mov
pusha
and
push
push
pop
mov
pop
cmp
jmp
mov
arpl
xchg
jmp
popl
adc
jns
stos
decb
jg
fwait
into
rclb
adcb
mov
test
in
xchg
jbe
repz
pop
and
sub
sbb
add
sti
les
fstpl
lsl
in
xchg
insl
ljmp
outsl
dec
pop
idivl
sahf
ja
add
or
inc
inc
cmp
push
lcall
add
lcall
out
jg
loopne
insb
iret
mov
movsl
iret
mov
inc
dec
inc
cltd
fwait
aad
imul
jb
rorl
pop
dec
loope
add
repnz
lock
std
dec
lret
and
jge
repz
sarb
js
add
add
add
sbb
adc
push
shll
test
iret
cmp
fcmovbe
stos
cwtl
add
test
mov
pop
mov
call
push
repz
out
xor
rcr
pop
hlt
xchg
scas
mov
sub
gs
insb
cltd
or
xor
andb
mov
and
stos
mov
mov
pop
leave
dec
jb
pop
aaa
loope
pop
loopne
mov
stos
add
xorl
pop
in
sub
and
dec
mov
mov
movsb
sbbl
xchg
pop
lds
movsl
leave
ja
hlt
or
jge
cmp
sti
mov
adc
xor
les
test
mov
push
pop
dec
sbb
mov
jl
inc
jmp
inc
push
outsl
xlat
pop
and
stc
out
inc
xor
pop
lcall
jbe
roll
mov
lods
pushf
outsl
fidivs
pop
fcoms
ror
fcoms
jae
and
out
leave
cmp
inc
add
fmull
adc
ds
xchg
push
or
add
mov
and
movsl
mov
repnz
xor
add
inc
sub
and
xlat
gs
stos
outsl
mov
je
lcall
inc
and
dec
js
adc
adc
cmpsl
sub
jp
pushf
ret
push
fsubrs
or
lods
xchg
cmp
and
cwtl
imul
test
imul
out
jnp
jle
cmp
imul
notb
rclb
push
push
es
shlb
jne
and
mov
xchg
out
or
fwait
test
sbb
sbb
mov
out
cltd
sbb
int3
dec
cs
hlt
sarb
daa
fcmovbe
test
xor
xor
and
mov
sbb
loope
int
cmp
fdivs
cmp
adc
cmpxchg
jp
loope
out
loopne
int
pop
add
rolb
sub
sbb
mulb
scas
fmuls
aam
in
movsb
sub
pop
fidivrs
cmp
adc
mov
jae
push
sbb
or
push
cmp
mov
out
mov
cmpsl
cmp
xor
aad
dec
scas
jae
add
pop
mov
cmp
and
jnp
test
mov
mov
inc
or
nop
jbe
pop
aas
test
jns
xchg
add
mov
js
mov
int
inc
xchg
mov
xor
test
lods
cmp
test
ret
and
popf
push
cltd
leave
dec
jns
or
mov
push
std
mov
push
aas
adc
add
or
lea
in
cmpsb
jge
pop
sbb
aam
cmp
stos
mov
test
loop
out
xor
js
leave
xor
je
add
jmp
int
fisubs
mov
loope
mov
fsubs
ret
push
dec
out
ret
aad
mov
mov
adc
pusha
xchg
dec
sub
js
xchg
cmp
push
add
mov
fs
fiaddl
jnp
scas
js
mov
mov
scas
sub
mov
jmp
sub
ja
mov
jp
aas
mov
cmp
movsl
call
sbb
lock
mov
imul
data16
sbb
mov
test
inc
adc
gs
mov
or
loopne
loope
nop
test
inc
mov
and
inc
mov
nopl
inc
scas
out
test
shlb
inc
clc
mov
xor
adc
dec
xor
les
inc
fs
inc
loope
test
repnz
daa
push
incb
dec
add
jnp
mov
xlat
jo
daa
call
adc
push
jl
push
out
or
add
or
hlt
das
and
into
inc
jae
pop
idiv
push
sub
xor
pop
int
cmp
jle
adc
xchg
inc
xor
mov
movsb
mov
or
lret
inc
nop
insl
fdivl
sbb
add
xchg
out
mov
pop
jp,pt
fidivs
mov
jbe
cmp
push
das
addr16
lret
mov
or
lea
mov
inc
mov
dec
add
rol
in
xor
pop
fidivrs
mov
in
aad
push
add
inc
icebp
mov
lret
ficomps
push
fs
inc
lods
daa
test
ret
ljmp
lret
dec
jae
cld
sub
sti
fidivrl
mov
mov
mov
jecxz
test
dec
pop
pop
inc
add
lahf
inc
les
jb
pop
jnp
inc
fs
jmp
sub
jns
pop
jmp
dec
pushf
mov
lds
inc
out
mov
jne
lods
pusha
mov
jecxz
stos
sub
push
ror
movb
sbb
test
jb
sub
stos
or
pop
cmp
cmp
popa
sub
or
dec
bound
or
cltd
xor
roll
xor
sahf
sbb
enter
out
out
les
std
and
dec
test
rcrb
push
lcall
dec
mov
inc
insb
call
sub
ficompl
imul
shr
bound
scas
adc
add
pop
mov
arpl
sbb
push
ret
cld
roll
out
dec
xchg
pop
lret
sub
mov
sub
insb
pop
popf
pushf
sahf
and
popa
test
push
push
dec
xor
mov
xchg
aad
mov
push
cltd
jb
mov
or
nop
dec
repz
inc
rorb
push
ss
cmpsl
stos
mov
or
mov
pop
mov
mov
dec
aad
loope
in
rcr
push
add
ss
push
jmp
xor
shll
cs
jmp
shl
outsb
mov
jb
ljmp
rcr
dec
inc
sub
mov
dec
fisubl
jns
push
push
idivl
stc
inc
cld
mov
mov
add
mov
mov
jb
jae
inc
inc
fdivl
iret
hlt
outsl
and
mov
mov
adc
push
add
mov
push
xor
xchg
mov
push
adc
and
mov
mov
sahf
mov
jnp
and
je
test
mov
data16
cmpsl
mov
mov
and
mov
imul
inc
sub
lods
cmp
icebp
xchg
xor
mull
fistps
dec
xor
jl
xor
dec
mov
mov
shlb
cmp
rorl
xchg
add
and
and
je
in
mov
dec
bts
stos
je
cmp
lods
pop
hlt
mov
rsm
out
cmp
jecxz
xchg
push
out
xor
lahf
inc
lcall
jmp
test
rorb
cmp
mov
test
inc
adc
out
push
icebp
jo
cmpsl
out
cmp
cmp
clc
adc
aam
andb
push
cli
sbb
out
push
adc
out
sarl
sbb
sbb
and
sub
xchg
jp
subb
movsb
loop
dec
cmpl
sti
addr16
insb
pusha
xchg
fsubs
xchg
dec
adc
aaa
aas
popf
mov
mov
aaa
mov
test
cltd
push
or
out
push
mov
mov
sbb
rol
push
cld
jmp
pop
pop
push
cltd
lds
cmp
loopne
xor
repz
aam
mov
cs
cmpsl
dec
out
movsl
js
outsb
ret
inc
inc
dec
and
testl
and
xor
dec
ja
jmp
sub
mov
add
das
pop
test
lea
loopne
or
or
adcl
or
fisubs
adc
inc
fs
das
mov
out
ja
inc
and
das
mov
sub
sbb
mov
inc
lcall
das
push
sti
jns
sbb
sub
mov
lock
and
cmpsb
dec
ds
stos
add
stos
std
inc
pop
push
jb
cld
popf
jle
pop
mov
mov
adc
stos
ja
xor
ja
hlt
ljmp
lock
lock
cmp
pop
inc
loope
lds
cld
sbb
out
cmp
frstor
out
sbb
popa
outsl
adc
out
add
sub
lock
sub
lcall
adc
test
ret
lods
jl
mov
or
dec
add
adc
shlb
mov
lods
mov
mov
in
push
pop
add
and
cmpsl
pop
out
sti
movsl
dec
scas
outsb
ja
in
sub
xchg
or
mov
or
leave
mov
ljmp
stos
jno
xchg
fnstcw
std
lcall
push
mov
cmpsb
into
add
jbe
inc
pop
inc
outsb
test
in
pop
jmp
push
shrl
lock
cltd
mov
inc
cmp
dec
mov
pop
pop
inc
test
jmp
pop
sysenter
xchg
jp
mov
mov
and
out
scas
xchg
js
cmp
sbb
cltd
arpl
popa
push
jmp
xor
loopne
sbb
aas
mov
scas
loopne
rcrl
sar
add
mov
cli
mov
lea
pushf
mov
cmp
pop
mov
ficompl
stos
lods
insl
or
pop
mov
mov
aaa
test
sub
adc
arpl
push
or
pop
cs
inc
leave
sub
mov
cmpb
ret
pop
and
xchg
jns
iret
push
add
rcll
mov
cltd
imulb
fsubl
add
pop
call
lret
inc
pop
add
mov
fwait
cltd
fwait
sub
test
call
out
xchg
jge
dec
subb
lock
mov
or
scas
lea
jmp
xchg
insb
xor
xchg
out
pushf
jp
cwtl
sbb
inc
vandnps
pop
in
push
and
imul
cmp
dec
push
add
mov
incb
and
adc
adc
xor
push
or
add
rcll
xchg
pop
repnz
test
cmp
inc
inc
dec
out
pop
xchg
in
or
xchg
push
or
or
mov
dec
and
movsl
cmp
xor
lret
dec
fwait
mov
cmp
repnz
sub
shll
movsl
pop
popf
mov
mov
adc
push
loopne
dec
xchg
push
xchg
sti
in
pop
pop
scas
adc
jbe
das
pop
pop
push
popf
jp
cld
outsb
cmp
inc
outsb
pop
cmp
ljmp
aad
or
in
cwtl
sti
iret
cltd
push
test
jmp
mov
jecxz
stos
push
dec
xchg
out
in
add
inc
add
lea
rcll
mov
test
test
mov
out
sbb
insb
mov
out
add
roll
jno
dec
sbb
mov
adc
adc
loopne
add
sub
sub
lret
fldenv
and
sbbb
mov
fstpt
pop
sahf
out
rorl
xchg
inc
shrb
sahf
addr16
sub
jnp
outsb
imul
pop
jo
xchg
imul
in
cmpsb
jl
jg
and
aam
xor
xor
adcl
push
cmp
mov
mov
jno
popa
fs
sub
push
add
loopne
xor
cmpb
das
stos
lret
es
mov
ja
leave
fs
clc
cmpsl
rclb
rep
outsb
shll
xor
cmpsb
fimull
push
mov
and
or
mov
arpl
cltd
add
pxor
and
inc
jno
dec
das
xor
mov
in
out
mov
mov
mov
outsb
aam
repnz
sub
adc
loope
mov
out
cmpb
mov
fwait
xor
adc
pushl
movb
xor
ds
clc
ljmp
or
lods
mov
push
sahf
imul
inc
adc
and
mov
test
gs
inc
sahf
in
cltd
xor
push
fdivrl
pop
imul
cmpsb
dec
ljmp
stos
dec
dec
xor
or
mov
and
jecxz
add
in
or
fdivr
lret
jl
jp
push
jnp
hlt
nop
push
dec
sbb
push
psrlw
stos
jmp
loop
fildl
int3
out
jbe
or
stos
stos
ret
mov
push
cmp
fimull
pop
lods
movd
adc
jno
ljmp
cmp
or
imul
out
cmp
sbb
int3
popf
mov
mov
std
sub
pop
mov
push
xor
test
lret
jne
fdivrl
jb
dec
loope
and
das
mov
dec
mov
and
jmp
int
mov
jp
push
ljmp
shll
cmp
dec
repnz
rclb
xor
mov
push
mov
mov
xchg
stos
stos
or
les
jae
adc
pop
pop
add
mov
cli
inc
outsl
inc
sub
add
mov
and
addr16
call
bnd
lret
stos
xorb
rcll
andb
outsb
arpl
jp
inc
icebp
xor
fmuls
pop
add
fwait
iret
ds
test
push
inc
lock
jo
stos
std
xchg
add
sbb
mov
in
das
dec
mov
adc
pop
cmpsb
fmul
es
pop
imul
add
shll
shlb
dec
sbbl
popa
data16
aam
cltd
rcl
mov
inc
jge
lock
mov
out
mov
cwtl
outsb
ja
dec
xchg
jg
out
out
mov
fiaddl
xchg
mov
test
iret
dec
ljmp
push
cmc
ljmp
gs
pop
or
and
sub
cmp
lcall
xchg
push
mov
xchg
rolb
sbb
into
arpl
sub
iret
push
push
cmpsl
arpl
stos
mov
js
sarb
pop
cld
imul
or
js
subl
das
push
mov
jp
mov
sub
push
xchg
push
mov
test
pop
scas
push
sti
insl
loope
or
cli
aas
xchg
dec
push
insb
lahf
fisttpl
adc
adc
gs
outsl
mov
xor
xchg
in
and
pop
xchg
jmp
out
adc
inc
mov
xor
out
xchg
or
cli
enter
imulb
cmp
mov
fucom
sbb
mov
insb
pop
inc
std
push
jo
out
stos
pop
lock
loopne
rcl
adc
mov
idivl
stos
data16
rclb
xchg
cwtl
insb
adc
cmp
jbe
jne
pushf
inc
mov
test
mov
cmp
imul
outsb
inc
ljmp
mov
cmp
sbb
inc
loop
shll
jle
and
dec
push
decb
mov
adc
xor
fxch
test
cltd
inc
pop
push
or
sbb
ja
inc
mov
ret
mov
sbb
mov
ficoms
cld
ret
xchg
sbb
xchg
bound
mov
fnstcw
mov
scas
addr16
pop
push
loope
push
cwtl
in
mov
or
les
push
pop
mov
fmull
xchg
jb
mov
inc
rcr
loop
aam
sub
push
mov
gs
in
inc
mov
movl
sbb
lock
cli
or
sub
aas
adc
mov
mov
add
push
pushf
adc
lds
outsl
in
mov
jns
push
jmp
fistpll
das
or
mov
lods
lock
sub
repz
sub
lds
or
add
stos
inc
push
mov
or
mov
mov
mov
xchg
iret
adc
jbe
rorb
lahf
lods
rcll
call
adc
dec
negl
fsts
xchg
xor
negb
pop
xchg
hlt
cmp
mov
cmp
and
inc
out
in
daa
mov
out
cwtl
dec
loopnew
xlat
sub
mov
push
sahf
mov
sbb
mov
or
addr16
sahf
stos
xchg
mov
push
pop
inc
cmp
pushf
jl
xor
mov
imul
jno
mov
fdivr
lret
inc
pop
pop
adc
pusha
and
jo,pt
sub
mov
rcll
ficompl
sar
icebp
in
mov
inc
add
inc
lds
mov
mov
and
mov
push
cmp
cmp
je
std
mov
cwtl
sbb
and
enter
lahf
push
faddl
fsubrl
test
or
push
aad
leave
iret
mov
into
lock
adc
xlat
inc
mov
jo
stos
and
sbb
cmc
outsl
or
aas
mov
sub
shll
rcll
mov
ror
fstps
std
pop
adc
test
int3
cmp
push
sbb
cwtl
add
dec
add
or
mov
cs
incl
inc
pop
inc
xchg
push
adc
mov
ss
pop
cmpsb
inc
mov
mov
inc
fildl
lds
mov
add
mov
xor
hlt
fimull
fldenv
pop
add
movsl
cmpsb
into
test
fidivrs
jnp
push
push
pop
into
daa
dec
lds
out
cli
mov
bound
int3
inc
das
mov
enter
push
mov
mov
xchg
xchg
imulb
scas
fwait
cli
lods
out
loopne
lret
sahf
or
mov
and
hlt
jb
leave
cmp
jns
pushf
push
call
mov
fmull
inc
ret
orb
dec
pop
dec
mov
cmp
push
fisubrs
mov
pop
adc
jecxz
iret
gs
mov
sbb
add
xchg
and
jl
insb
fwait
push
loop
ret
insb
mov
out
sub
push
dec
sub
mov
mov
sub
mov
sbb
sbb
mov
jle
shll
add
sbb
push
mov
pop
mov
ficompl
mov
int3
jae
pop
popa
jmp
mov
enter
sub
cs
xorb
xchg
cwtl
and
dec
mov
jo
mov
mov
sub
xor
pop
cmp
pop
mov
push
add
dec
data16
xor
mov
mov
fistl
push
jp
jecxz
test
loope
leave
les
pop
inc
popa
push
sub
stos
fincstp
push
lock
inc
adc
sbb
push
aas
cmp
popa
inc
xor
cmpsl
pop
cmp
je
adc
dec
int3
xchg
iret
add
dec
ret
call
call
scas
stc
cmpsb
or
cs
rorl
nop
ljmp
lcall
sbb
pop
lret
das
push
sbb
mull
cmpsb
mov
xchg
cmpsb
xor
hlt
cmc
push
xchg
inc
test
out
pop
xlat
mov
pop
pop
cwtl
mov
cmpsl
ret
pop
xor
in
testl
sbb
push
ds
cmpsb
sub
int
ljmp
sbb
sti
std
inc
mov
inc
sbb
jno
sbb
inc
fsubl
popf
adc
bt
cli
xlat
and
push
and
mov
shrb
repz
adc
sti
jecxz
fistps
imul
arpl
in
mov
mov
mov
js
mov
filds
push
pop
inc
cmc
jle
ljmp
ret
lret
push
mov
mov
std
ljmp
lods
sbb
jae
fisubl
shrb
pop
sub
or
out
and
push
daa
or
loope
clc
loopne
add
xchg
xchg
and
mov
xlat
xorl
cmp
leave
je
sub
std
mov
insl
lcall
xchg
xchg
mov
aaa
add
sbb
test
inc
sub
push
inc
sti
xor
dec
push
cs
xchg
fs
or
es
inc
inc
in
add
cmp
sub
arpl
sbb
or
into
xchg
push
popa
cltd
roll
shll
lcall
dec
push
xchg
xlat
inc
mov
lods
inc
in
rcrl
sbb
push
pop
jmp
mov
cmc
jae
out
adc
cmpsl
add
xchg
jmp
dec
ret
lret
es
popa
push
arpl
call
pop
push
adc
or
call
dec
pop
out
jnp
aas
jmp
test
int
jno
testb
rorl
fcomp
mov
xchg
fnsave
shlb
arpl
btr
mov
stos
movsl
fidivrl
or
mov
sbb
pusha
and
xchg
ljmp
orb
mov
xchg
mov
stos
fimuls
cli
shlb
mov
push
ljmp
ljmp
popf
pop
xchg
cwtl
out
adc
gs
sub
mov
imul
in
fwait
cld
xor
inc
insl
cmp
and
xchg
in
popl
add
cmc
outsl
cmpb
mov
pop
push
xorb
out
loopne
pop
fsubr
xchg
roll
and
dec
cmc
cmp
sub
jne
xor
push
repz
lcall
push
inc
xor
or
sub
test
int3
sbb
xor
sbb
insb
rcr
dec
and
cs
adc
jns
dec
jbe
sub
subb
jae
pop
into
inc
xlat
aad
or
mov
out
lcall
xchg
or
dec
xchg
mov
add
hlt
call
fiaddl
inc
cmp
xchg
scas
clc
notb
cmp
cli
dec
rcll
roll
fwait
pop
xor
fwait
mov
repnz
jle
clc
int
mov
push
jb
adc
out
out
sahf
xchg
jecxz
sahf
loop
or
orl
jmp
fwait
lret
xor
out
test
adc
cld
adc
pop
cmc
pop
dec
fs
xchg
cmpsl
stos
test
cmp
xchg
pop
stc
mov
cmp
pop
cmp
cmp
test
orl
inc
mov
adc
jo
inc
mov
jno
mov
xchg
xor
mov
movsb
jno
loopne
add
aaa
clc
mov
dec
ljmp
cvttps2pi
sbb
push
fildl
mov
dec
lahf
mov
mov
jb
mov
cltd
cmp
repz
pop
clc
mov
stc
jge
and
notl
cli
add
push
arpl
adc
scas
lods
iret
imul
jb
cmp
jae
fst
xor
pop
dec
pop
lds
mov
icebp
or
aam
push
adc
dec
push
cmp
pop
push
ret
mov
dec
mov
push
movsl
test
mov
or
jp
pop
mov
push
cmp
adc
ljmp
je
mov
stos
lods
cmp
loopne
jl
mov
sbbl
inc
jns
jecxz
mov
add
sbb
in
inc
mov
mov
mov
jl
mov
push
jbe,pt
push
push
lcall
jecxz
stc
fadds
or
sbb
jnp
out
push
stc
adc
arpl
jne
rorb
cmp
pop
int3
sub
push
repnz
or
inc
push
rcll
cmpsb
dec
sbb
push
and
fsubl
xor
mov
fstpl
or
rcl
cmpsl
popf
cld
mov
pop
adc
jb
dec
loope
in
xlat
sbb
add
xchg
dec
lcall
jp
adc
xor
mov
xchg
fimull
jae
cmc
pop
lock
push
sar
mov
inc
sub
push
mov
or
fisttps
xchg
les
cmp
cmp
popa
out
mov
or
dec
jne
rcr
repz
in
out
mov
sbb
fnstsw
dec
mov
inc
sbb
loope
shrw
cmc
add
test
jae
mov
and
lock
adc
in
xchg
test
addr16
cmpsl
pop
mov
cwtl
dec
rcl
dec
pop
mov
scas
bound
sahf
movsb
mov
pushf
mov
add
out
lock
sub
ja
mov
ja
addb
popf
loopne
cmp
push
mov
ror
out
cmp
lods
test
fidivl
addps
ja
je
push
mov
cmp
shrl
dec
addr16
add
xchg
popa
mov
fsub
xor
cmc
xlat
int
mov
lods
pop
test
adc
pop
sub
ljmp
in
outsl
enter
dec
dec
dec
pop
adc
or
in
imul
scas
push
test
sbb
or
push
push
push
xlat
movsb
clc
js
daa
mov
xor
fcomps
imulb
jns
push
push
loopne
mov
ljmp
sbb
fwait
mov
ljmp
cmp
inc
pop
add
dec
dec
xor
dec
out
imul
and
lods
in
pop
adc
inc
nop
fyl2x
in
push
lahf
mov
in
out
or
divb
mov
repz
repz
cmpsb
dec
mov
icebp
inc
fiadds
mov
mov
std
push
push
inc
ds
mov
fildl
cmpsl
testl
js
dec
push
and
dec
cmp
inc
mov
pushf
out
fcoms
add
popa
movsl
lret
daa
pop
adc
pop
testl
mov
mov
iret
jo
cmp
add
push
outsb
push
jbe
test
pop
fs
testl
xchg
repz
pusha
push
pushf
jecxz
outsl
loope
or
loope
addb
jbe
jne
mov
mov
js
xor
or
lret
mov
lea
daa
adc
ja
cmc
adc
rcrb
fistps
dec
test
xlat
cld
cmc
insb
cmp
dec
stos
and
sbb
xchg
mov
cs
sbb
fiaddl
xchg
mov
mov
mov
or
cmpl
sub
inc
icebp
lahf
iret
cs
adc
cmp
add
fdivl
mov
mov
inc
in
int
repz
or
sub
jb
adc
mov
repz
rcrb
jecxz
ret
pop
jae
movsl
subb
popf
ljmp
imul
pop
xor
movsb
out
jmp
gs
sti
mov
pop
mov
popf
push
xor
sub
mov
jbe
mov
jmp
mov
and
mov
fldt
lea
in
mov
repnz
xlat
leave
pusha
jno
jne
pop
sbb
scas
sub
xor
inc
add
sahf
leave
sbb
ret
pop
adc
adc
sub
adc
lock
jns
adc
mov
jae
fistps
jae
rorb
jbe
mov
popl
decl
bnd
loope
jp
das
mov
fildl
enter
xor
xchg
mov
jge
fists
sbb
mov
pop
sub
pop
scas
mov
jg
fwait
mov
aas
cld
mov
ja
das
mov
push
mov
scas
test
jl
mov
es
daa
pop
and
repnz
dec
movsb
fldl
cs
aas
jge
stos
out
dec
mov
lret
cmp
add
fwait
adc
lcall
push
jb
imul
daa
xor
cld
or
mulb
les
fisubs
sbb
jno
idivb
xor
dec
jp
js
sub
imul
jae
inc
stos
dec
pop
outsb
mov
sub
or
stos
push
cmp
aaa
push
mov
jno
xchg
fisubrl
ljmp
andb
adc
push
addr16
leave
fwait
mov
cmp
sub
inc
inc
pushf
or
xchg
call
adc
xor
sub
fistpl
loope
pop
add
inc
les
xor
enter
push
sbbl
add
das
minps
or
inc
out
loopne
cmpsl
inc
mov
cmp
stos
adc
int
mov
mov
ljmp
pop
dec
sarb
clc
mov
aad
ss
imul
aam
addl
sub
imulb
lret
sub
stos
push
test
cs
int3
inc
mov
repz
inc
mov
ja
cs
jnp
loope
imul
mov
or
cli
inc
inc
mov
aad
outsb
outsb
inc
adc
lahf
movsb
and
dec
cmc
inc
cmp
mov
mov
dec
fcmovb
movsl
sub
inc
inc
cltd
sub
pop
push
js
jb
jb
xchg
jle
shll
andb
into
test
inc
test
stos
cltd
insb
fstpt
shlb
scas
test
rclb
lds
dec
dec
data16
leave
mov
mov
aam
mov
test
add
loop
xor
lock
sub
jmp
sbb
leave
repz
lock
in
cmp
ljmp
and
nop
ljmpw
das
dec
rol
pop
pushf
ffreep
add
cmp
xor
nop
push
test
in
dec
xchg
jns
jmp
and
ljmp
scas
push
shll
das
test
lahf
in
aam
testl
shll
inc
adc
push
ret
lock
popf
mov
cs
sub
loope
rorb
mov
cmpsb
add
push
mov
xchg
icebp
mov
in
add
xchg
and
jo
fadd
int3
add
dec
loopne
int
dec
xor
mov
cmp
mov
adc
mov
fcoml
insl
push
mov
push
mov
sbb
lret
scas
insl
push
dec
and
movsl
test
pushf
in
xchg
sub
or
jmp
pop
imul
inc
fsubrs
mov
sub
xchg
das
xchg
fwait
mov
add
mov
std
popf
jg
out
in
push
cmp
into
insl
mov
inc
add
outsl
dec
mov
push
popa
adc
sub
std
mov
add
dec
testl
pusha
inc
dec
out
dec
dec
pushf
jo
mov
sbb
mov
mov
scas
into
ljmp
and
jns
jae
jecxz
cli
cmp
dec
xchg
lcall
add
lcall
mov
add
mov
outsl
xchg
lahf
sti
push
jne
fistps
jbe
pusha
aam
gs
add
push
insb
outsl
cmp
daa
lock
rcrl
jae
rorl
xlat
mov
mov
and
xchg
mov
push
sub
pop
cmp
push
push
adc
scas
imul
out
push
inc
and
xor
mov
rorb
jne
pop
adc
movsb
test
adc
cmp
adc
shrl
or
push
lods
filds
loop
test
xor
cmpsl
and
mov
sub
push
and
test
push
enter
shrb
dec
inc
test
pushl
in
out
bsf
dec
sarl
shll
sbb
xor
sub
sar
inc
xorl
pop
push
push
adc
or
cltd
test
test
push
mov
push
push
aad
push
cmp
enter
stc
jge
add
inc
jp
inc
mov
nop
jmp
ja
je
push
and
aad
insb
test
loopne
leave
cmp
sub
popa
lock
test
add
pop
pop
push
lret
mov
cld
into
push
push
or
pop
into
or
push
enter
imul
insb
ds
cmp
test
push
test
cltd
lret
cmp
mov
inc
sbb
popa
jne
mov
add
jp
inc
test
push
jmp
aas
lock
adc
aaa
lods
xchg
lock
xor
cmc
pusha
cmc
out
pop
xor
push
add
mov
test
cmp
xlat
cmc
mov
mov
das
dec
in
lods
pushl
or
xlat
lcall
mov
insl
or
fnstenv
stos
aaa
sbb
test
push
pusha
sarb
pop
mov
sub
jne
mov
jbe
cmp
negb
mov
daa
cmp
mov
xchg
jmp
aad
adc
jl
jmp
shr
add
pop
cmp
out
sti
idivb
and
ss
inc
fnsave
incb
loopne
jbe
shr
insb
addb
cmp
fildll
and
sub
ljmp
sbb
scas
test
std
test
xchg
arpl
xor
add
ds
pop
cltd
fistpll
mov
and
orl
xorb
ljmp
outsb
mov
mov
enter
and
inc
icebp
mov
inc
sarl
xlat
inc
push
inc
lea
lods
cld
or
dec
ds
out
rorl
mov
js
sub
sub
lea
jp
xor
mov
jle
inc
testl
cmpsl
insb
loop
add
add
ds
dec
inc
mov
sbb
mov
cmp
cmpsb
mov
lods
dec
pop
dec
xor
cmc
xchg
aad
xlat
push
inc
sbbb
cmp
insb
in
push
jns
divps
icebp
popf
add
push
sub
fiadds
inc
shlb
sahf
imul
repnz
jo
in
pushf
jg
sbb
clc
mov
lahf
hlt
push
inc
mov
fsubrl
dec
fistl
jg
in
jo
and
xor
pop
push
add
jmp
push
sahf
aas
inc
scas
imul
push
pop
inc
jp
xchg
inc
jnp
inc
inc
subl
push
pop
lea
jo
aaa
fistl
addr16
das
mov
cltd
aaa
int
pushf
fbld
test
out
mov
sub
or
xchg
decb
lret
nop
dec
iret
notb
push
aam
mov
push
inc
loopne
mov
test
int3
popa
cmp
out
fldenv
sub
dec
scas
imul
jl
ror
imul
mov
cmp
lret
mov
mov
inc
adc
xchg
insb
adc
test
loopne
xchg
mov
rolb
repz
jb
outsl
neg
dec
out
inc
cmpsl
pop
and
push
movl
adc
mov
jmp
pop
ret
imul
out
xchg
cmpsl
into
sub
adc
mov
out
sbb
insb
xchg
movsl
xor
scas
ds
and
push
mov
adc
inc
pushf
mov
push
jl
pop
mov
shr
jo
inc
outsb
xor
flds
stos
popf
pop
incb
into
push
imul
in
fstps
mov
mov
ljmp
shlb
push
or
addb
into
movsl
or
repnz
jg
lods
pop
test
fsubrs
jno
push
ret
push
js
leave
sbb
imul
loopne
xchg
pop
shrb
in
cmp
nop
iret
jl
sbb
sub
mov
xchg
inc
and
xchg
inc
and
cli
xchg
xchg
popa
aas
daa
iret
insl
push
dec
roll
shlb
xor
xchg
adc
jae
dec
ret
cld
aas
gs
jl
or
inc
aas
stos
sbb
cmc
pop
in
leave
fdivs
sub
loopne
sub
test
aas
pop
fwait
mov
cltd
push
in
pusha
pop
roll
mov
lea
cmovg
nop
cld
nop
adc
jg
mov
push
sti
out
xchg
push
mov
and
insb
ds
pop
jo
popa
jp
repz
sub
shrb
cld
mov
or
mov
cmp
fadds
scas
sub
hlt
cmp
dec
arpl
rcrl
ja
push
jp
icebp
push
roll
and
pop
test
push
out
cmp
mov
icebp
lret
sti
jmp
int
and
jecxz
stos
mov
xchg
and
xor
jno
sahf
adc
iret
jb
repnz
pop
push
jae
push
ds
push
cmpsb
push
inc
mov
add
jns
insl
divb
hlt
push
enter
je
mov
test
xor
pusha
mov
cltd
dec
sbb
shl
or
add
xor
or
je
mov
insl
add
jne
xchg
cltd
cmpl
mov
jge
dec
or
adc
dec
scas
ss
adc
loop
cmp
pop
ror
xor
dec
cli
movsl
icebp
stc
sarl
add
aad
cmpsl
and
ret
out
pop
pop
add
lds
mov
ja
add
xorl
repz
mov
and
lods
adc
mov
addr16
mov
inc
sbb
push
mov
in
stos
leave
jb
mov
popf
jb
aaa
loop
xchg
fldl
push
sub
ret
mov
das
xchg
fs
sub
icebp
fdivrs
pause
adc
sub
xchg
push
cmp
mov
mov
sbbl
adcl
insb
add
je
or
jl
mov
adc
shlb
cs
es
int
pop
mov
jmp
fmulp
in
insb
cmp
sahf
gs
xor
fwait
daa
loopne
call
xlat
sarl
jbe
mov
add
sbb
inc
adc
lods
das
push
bound
and
push
pop
push
call
dec
insb
inc
lods
adc
icebp
stos
stc
daa
add
jg
jne
stos
xchg
scas
mov
popf
maxps
icebp
push
repz
popa
and
and
mov
mov
xchg
mov
mov
movq
mov
mov
in
shlb
outsl
imul
jnp
mov
pop
test
ret
mov
sti
shl
ss
sub
pop
sbb
sub
nop
cmp
push
jbe
pusha
loop
dec
xchg
es
jl
sub
aas
hlt
mov
aad
pop
lcall
add
pusha
push
cmp
add
or
loopne
fdivs
mov
loope
jg
in
gs
psubd
mov
cmpl
andb
pushf
sub
sub
mov
das
insl
out
pop
adc
arpl
clc
stc
out
xchg
mov
hlt
pop
xchg
sub
push
xchg
je
cmpsb
mov
and
out
hlt
fs
push
negl
pop
push
pop
shll
addr16
mov
fnstenv
ret
and
shll
scas
cmova
mov
jns
xlat
mov
outsb
cmc
and
mov
or
mov
out
icebp
addr16
insb
jle
or
leave
sahf
lock
cwtl
int3
sub
test
loop
adc
push
in
in
in
mov
mov
in
nop
outsb
jbe
cmp
push
in
ljmp
adc
mov
arpl
push
pmulhuw
sub
sub
pop
mov
popa
jb
adc
sub
push
push
mov
sbb
sahf
xchg
jae
push
mov
jnp
rorb
jl
popa
idivl
pusha
jbe
xchg
dec
mov
xor
xor
ss
sahf
in
stos
fnstcw
pop
lea
cmp
xor
jne
mov
or
outsl
jmp
push
mov
int3
or
sti
mov
fmulp
pop
aaa
repnz
ds
pop
jo
cmpb
js
mov
ja
scas
or
and
sbb
pop
sbbb
push
jns
mulps
rcrb
adc
or
xor
lock
mov
jle
mov
adc
addr16
cltd
cmp
sahf
je
cld
gs
sub
lret
cmc
push
popa
add
mov
insl
pop
pop
loope
test
ljmp
stc
lahf
scas
test
add
test
xor
sbb
int3
jmp
sbb
jle
push
cwtl
mov
outsb
popw
ds
or
fidivrs
mov
pop
popa
mov
jge
fcoms
fwait
jnp
lods
into
xchg
xchg
jecxz
ljmp
outsb
sub
punpckhwd
ljmp
push
mov
ja
xor
movl
aas
cmpsb
ret
aas
loope
dec
lahf
sysexit
adc
shrb
add
lea
into
and
scas
add
outsb
dec
sbb
cmp
fld
mov
xor
insb
popa
mov
pop
lret
subb
inc
pop
sub
mov
out
xchg
mov
insb
or
lcall
and
dec
add
add
lahf
jl
int3
fistl
cmp
dec
or
shrl
mov
dec
jno
jbe
pop
pop
popa
mov
pop
xor
test
movsl
jl
mov
loopne
nop
fbld
icebp
inc
or
or
or
dec
xchg
jno
sub
xchg
cmp
roll
ficomps
lret
push
pop
clc
sahf
fnsave
push
jl
mov
sub
addr16
icebp
test
push
test
mov
fsubr
xor
add
lds
pop
mov
push
pop
cmp
dec
dec
lret
cmp
lock
pop
rcll
dec
add
xorb
jne
dec
mov
dec
push
xchg
loope
cmpsl
push
pop
aam
cli
add
mov
lahf
fs
ret
int
inc
sub
inc
fsub
adc
lds
xchg
jmp
and
push
jae
daa
jns
into
xlat
or
and
pop
sahf
cmpsb
int
pushf
and
or
jp
sub
pop
lret
dec
std
cmp
inc
xor
leave
fdiv
mov
lcall
in
ss
movsb
mov
dec
repz
sub
mov
insb
test
xlat
jg
xlat
aam
mov
cmp
jno
jge
xchg
and
fdivrs
cmp
lods
mov
cmp
lock
outsb
int3
stos
std
jl
push
add
mov
mov
pop
xor
push
stos
and
xchg
rcrb
push
std
movsl
sub
insl
pop
leave
jmp
lahf
subb
add
sti
add
inc
ds
mov
pop
jg
sbb
sbb
hlt
int3
cs
push
adc
cwtl
aas
sbb
out
xor
or
pop
cltd
jae
std
hlt
test
fwait
pop
inc
adc
and
push
scas
fs
pop
shlb
add
adc
mov
mov
adc
sub
pop
push
std
push
add
loopne
js
bound
jmp
xchg
scas
lock
addl
sti
rclb
push
mov
xor
push
std
cltd
loope
and
jnp
inc
jbe
cmp
gs
push
int
sub
jecxz
or
add
jno
cwtl
lock
call
into
lods
fisubl
dec
cmp
mov
mov
jbe
insb
arpl
std
shrd
fcomi
cli
mov
xor
add
lods
repnz
push
adc
shll
inc
sub
aas
neg
scas
mov
rclb
shlb
int3
cmc
xor
movsb
arpl
loopne
xor
or
cli
leave
scas
add
dec
xchg
and
test
nop
dec
jo
les
mov
repz
or
repz
jo
ror
push
inc
mov
sub
or
fisubl
fidivl
int3
fmull
jg
add
jnp
push
andb
jmp
jns
adc
cmpsl
add
test
pop
mov
mov
mov
adc
aam
je
fildl
ret
into
mov
xchg
into
enter
arpl
push
je
fwait
mov
cli
inc
mov
faddl
fldcw
lds
add
jns
push
add
adc
cld
scas
jno
ds
ret
xor
dec
fsubp
sbb
inc
test
lret
data16
adc
push
lea
sub
xor
mov
push
xor
in
scas
les
shr
add
sub
xor
pop
dec
cmpsl
pop
adc
lcall
cltd
adc
push
mov
sub
mov
arpl
mov
pop
xchg
add
push
pop
xor
mov
rol
push
movsl
fiadds
jb
mov
jo
incb
dec
push
incl
mov
jns
nop
xchg
cltd
mov
fnsave
lds
xchg
test
push
pop
lea
fs
xor
or
and
aaa
inc
loope
pushf
lcall
aad
mulb
imul
pop
xor
test
test
inc
add
nop
enter
in
or
mov
js
xlat
test
dec
dec
xchg
icebp
xchg
testl
ret
inc
cld
jle
jb
add
jp
rcr
sub
int
pop
and
xlat
loop
cmp
mov
mov
and
mov
lds
jb
cli
and
jno
loopne
loope
js
notb
or
dec
jno
insb
mov
icebp
test
mov
out
call
jo
js
fstpt
mov
and
out
in
push
pushf
bound
inc
push
adc
lods
add
icebp
imul
mov
cs
push
mov
or
shll
mov
push
stos
mov
scas
repnz
or
call
pop
cmp
bound
mov
scas
fisubs
inc
inc
clc
out
xlat
repnz
out
movb
add
xchg
stos
aad
xchg
inc
push
mov
out
ror
ja
xchg
fnsave
aad
orb
dec
jb
mov
loopne
addr16
add
push
sbb
lock
imul
in
out
and
xchg
xor
mov
inc
lds
xchg
cmpb
jge
jne
jns
fcomi
js
inc
or
fsubl
pop
fisubl
pop
leave
dec
xor
sbb
divb
cmpsl
jecxz
fildl
lea
push
cmp
xchg
shll
cmpsl
lret
das
shrb
outsl
std
sub
sahf
add
lds
addb
xor
int
mov
aam
dec
mov
outsb
mov
out
push
xorl
pop
shll
jmp
dec
add
clc
aaa
xchg
in
adc
sbb
push
jmp
add
aas
out
jmp
sub
inc
out
comiss
dec
push
jp
test
or
loop
sub
push
loopne
adc
cmp
dec
test
sahf
outsb
add
mov
mov
cltd
pop
or
pop
mov
les
ss
mov
mull
lcall
mov
stos
les
jg
mov
aaa
adc
cmp
sub
mov
std
sarl
sub
jecxz
imul
orl
imul
push
pop
aas
mov
sub
or
mull
mov
xchg
sub
sti
add
pop
xchg
in
mov
lds
lea
ret
bound
out
add
dec
sbb
xor
inc
std
sub
pop
mov
fwait
dec
lcall
icebp
lods
movsb
out
mov
in
pop
mov
adc
repnz
dec
pusha
ljmp
imul
sti
imul
sahf
sti
pusha
cmp
andl
orl
sub
xchg
adc
dec
nop
inc
cmp
shll
dec
and
xor
ja
mov
pop
mov
mov
mov
popa
icebp
jle
dec
ret
adc
inc
jae
pop
dec
ja
sti
xor
rcll
cld
stc
cmp
sbb
add
daa
insl
push
mov
dec
sbb
in
inc
jl
xor
inc
movsl
fnsetpm(287
dec
pop
xchg
sbb
push
pop
mov
push
sbb
lahf
out
adc
sbb
dec
mov
stos
sbb
mov
dec
mov
pop
in
mov
dec
mov
xchg
push
stos
je
jp
mov
scas
pop
clc
sbb
roll
aad
cmp
adc
outsl
and
mov
andb
mov
push
cs
jmp
xor
mov
in
xchg
imul
out
dec
jnp
jecxz
push
jns
sub
push
mov
cmc
jo
push
add
dec
xchg
mov
mov
js
cld
leave
xlat
popa
cmpsb
xchg
enter
test
jae
or
adc
out
insb
daa
pop
sub
sub
shr
insb
jnp
add
fisttps
add
insl
movsb
xor
mov
sub
ljmp
int3
aaa
xor
mov
call
ss
lods
fcompl
push
loop
outsl
push
ficoms
ljmp
jnp
adc
jb
mov
lret
pop
orl
mov
fldt
shl
cmc
icebp
cmp
aam
neg
sub
cld
push
fdivs
sbb
ds
arpl
int3
aad
mov
scas
cmp
dec
int3
ss
idivl
add
sbb
js
mov
arpl
mov
fbld
out
pop
push
fisubs
cmpsb
pop
mov
jae
pop
movb
push
test
fnstsw
cli
out
or
pop
adc
in
cmpsb
xchg
dec
addr16
scas
jp
push
in
pop
andb
adc
mov
push
std
push
sti
cmp
stos
fnstsw
clc
scas
stc
or
mov
pusha
jnp
div
push
xlat
pop
pop
outsl
cld
mov
imul
ja
in
xchg
and
xor
daa
jge
cs
mov
loope
aad
jle
mov
loop
adc
pop
mov
push
jb
mov
inc
mov
popf
dec
addl
mov
outsl
insl
xchg
and
xchg
pop
jp
sbb
in
mov
sahf
mov
out
call
cs
xchg
nop
loope
jmp
or
mov
bound
mov
sub
cltd
and
or
pop
in
fwait
adc
scas
pop
inc
cmp
xchg
pop
add
lods
mov
adc
bound
inc
pushf
fisubs
sbb
pusha
scas
dec
cmp
rcrl
addr16
pop
or
std
inc
bound
push
ret
arpl
mov
mov
or
add
sarl
lret
mov
lahf
sbb
fcomps
sub
and
lret
push
fwait
mov
dec
sub
pusha
mov
arpl
cmp
les
mov
mov
bswap
inc
icebp
mov
sub
das
cmp
imul
imul
iret
sbb
movsb
cmp
inc
add
inc
jae
pop
pop
mov
and
testl
enter
scas
inc
sub
adc
dec
xchg
out
xlat
aam
pop
daa
in
cmpsb
and
mov
mov
pop
test
and
movsb
jge
push
mov
jbe
mov
sub
xor
or
aas
clc
sub
xchg
sub
stc
and
mov
bnd
leave
imul
dec
mov
inc
xchg
push
daa
mov
xchg
lcall
xlat
sub
mov
dec
xor
xchg
insb
mov
gs
and
push
sub
mov
icebp
adc
dec
imul
lods
push
push
scas
std
xchg
add
mov
mov
and
arpl
mov
xor
xor
bound
jno
cmpsb
shrl
dec
xor
adc
out
mov
loopne
rclb
xchg
bound
out
imulb
jle
mov
cmp
out
mov
and
stc
pop
sub
push
lea
dec
stos
sub
scas
xchg
lcall
dec
into
fnstsw
pop
andl
fdivl
push
insb
sbb
cli
or
ret
mov
dec
xor
lcall
and
and
xchg
mov
lods
cmp
sbb
sub
test
fmul
xchg
sbbl
int3
call
mov
or
push
fsubrs
ja
shll
fwait
int3
pop
jne
dec
inc
mov
mov
fwait
cltd
in
clc
cmp
loope
mov
idivb
jp
cli
xchg
cmp
sub
aaa
adc
in
insb
movl
ljmp
incl
sub
sbb
xor
push
lret
pop
insl
test
out
lods
scas
es
loop
jbe
or
outsb
sbb
and
shlb
out
cli
out
daa
xor
xor
cli
std
leave
xor
xor
aam
or
xor
push
int
out
sbb
test
pusha
repnz
fwait
or
xor
test
add
ljmp
addr16
int3
stos
scas
iret
cmp
lahf
test
cmp
sbb
pop
sub
cmp
daa
xchg
rol
add
bound
xlat
out
das
popf
or
mov
cld
js
loopne
push
mov
pushf
xor
xor
icebp
cltd
xlat
pop
ss
inc
iret
pushf
xor
dec
dec
push
push
test
mov
jno
popa
stos
gs
les
push
inc
pop
and
and
xor
xlat
adc
outsl
loope
mov
push
lahf
pushf
int3
and
mov
imul
lcall
popf
fcoml
aaa
ja
pop
mov
aad
pop
fwait
sahf
lock
mov
dec
enter
sbb
mov
jge
lock
pusha
push
test
sub
rcll
sbb
dec
adc
xchg
fisttps
rcrl
pop
inc
clc
icebp
cmp
fidivs
js
pop
gs
or
loop
dec
insl
cli
bound
out
xchg
push
pop
cs
ret
outsl
jno
fs
or
in
sub
mov
mov
xchg
jg
mov
push
cmpb
mov
aaa
insb
fwait
mov
sub
jmp
mov
xchg
push
je
mull
mov
mov
adc
rcr
sbb
rolb
call
test
frstor
pushf
loopne
mov
adc
ljmp
cs
jp
out
out
in
xchg
ret
add
cmp
xor
icebp
movsb
das
push
jbe
jecxz
mov
mov
sarb
mov
sti
je
loop
jb
lds
loop
adc
adc
out
fidivrs
mov
xchg
into
jno,pn
fwait
mov
and
dec
push
ficoms
add
stos
es
fcmovbe
or
pop
adc
repnz
cmc
mov
xchg
add
clc
into
cmpsb
pop
mov
popa
lods
lds
cli
cmp
leave
inc
js
or
add
pop
ret
es
enter
sub
outsl
mov
dec
repz
mov
push
and
jp
push
sub
xchg
fidivrl
repnz
xor
add
stos
pop
ret
pop
cmp
inc
jp
mov
jl
or
sub
sub
lret
popf
arpl
dec
mov
enter
hlt
xor
loope
mov
xor
sbb
icebp
pop
dec
pop
pop
mov
in
rolb
xorb
xchg
cmc
push
mov
mov
sbb
dec
cs
pop
in
xorl
mov
dec
sbb
rorl
shr
mov
push
pushf
jmp
adc
cmp
not
cmc
push
add
bound
xchg
add
push
xchg
sbbb
dec
jge
pushf
movsl
lret
sub
xchg
jle
mov
jle
mov
hlt
xor
ljmp
cmp
mov
aad
cmpsl
adcb
or
cmp
mov
les
pop
inc
xchg
inc
dec
outsl
in
cmpsb
rcll
jne
jb
add
scas
fxch
int
cltd
add
movsl
jl
pushf
fsubrs
sar
dec
dec
mul
push
call
pop
mov
inc
cmp
push
test
push
push
aad
sahf
shll
lcall
movsb
lock
in
fisttpll
cmp
inc
mov
int3
es
mov
test
jecxz
adc
out
push
call
pop
jmp
pop
dec
mov
add
push
in
mov
xchg
dec
sub
sbb
fisubl
dec
xchg
inc
jno
test
pop
loope
adc
in
adc
lcall
jecxz
sbb
sbb
clc
and
fsub
push
inc
cwtl
push
jae
call
sub
aas
mov
jge
rcrb
les
and
mov
imul
inc
sbb
dec
cmp
jl
xlat
popl
fnstenv
fwait
aam
rcl
das
loop
jns
mov
adc
dec
cwtl
inc
jmp
xchg
fst
push
pop
and
xor
insb
cmc
adc
repnz
stc
mov
dec
idivl
pop
pusha
mov
sbb
jecxz
mov
ret
test
out
ret
les
scas
cmp
movb
bound
inc
inc
mov
jne
jge
adc
shl
fs
push
test
pop
mov
rolb
loope
jp
xchg
pop
movsl
insb
stc
sti
inc
into
mov
mov
push
pop
xor
out
jp
adc
out
cmp
enter
mov
mov
sub
mov
pop
cmpsl
pop
add
je
add
or
movzwl
mov
jmp
xchg
xchg
nop
mov
mov
xlat
mov
dec
xor
push
mov
cmp
xchg
mov
inc
outsl
add
jmp
lcall
mov
scas
or
cmpl
imull
aam
sub
fwait
xor
fistps
fisttpll
rcrb
int
stc
or
sub
dec
and
addb
mov
add
test
push
adc
xor
test
mov
out
mov
sti
adc
nop
xchg
outsb
aaa
cmp
push
jg
pop
ljmp
mov
pop
sahf
push
lret
loope
mov
lock
xchg
xchg
pop
loop
jge
mov
mov
inc
mov
adc
test
fwait
dec
jo
or
bound
inc
jne
mov
cmp
mov
dec
mov
inc
push
mov
aad
loope
andb
jb
mov
fnstsw
or
out
jo
cli
sbb
mov
mov
mov
mov
xchg
push
xchg
adc
sbb
mov
cmpsl
iret
out
mov
fmuls
or
gs
rcrl
adc
mov
flds
dec
cwtl
xchg
xchg
cmp
loop
dec
fwait
sub
adc
je
sti
lret
pop
or
pop
inc
cmpsb
addr16
fnsave
jae
fidivrl
aas
andb
lock
pushf
sub
sar
cmp
ret
into
mov
inc
sbb
mov
push
fisttps
push
jl
filds
movsl
loopne
test
int3
adc
pop
loopne
aas
cmpl
or
rcrb
arpl
repz
push
std
mov
xchg
mov
cmp
xor
cmp
hlt
jp
xor
xlat
imul
or
push
pusha
jle
add
test
movsb
pop
subb
sbb
jae
stos
pop
mov
les
pop
xchg
loopne
mov
inc
sbb
nop
fistps
std
pop
mov
loope
in
loope
pop
imul
call
or
fs
das
ja
sub
inc
jno
adc
cld
fs
bound
nop
movsbl
mov
ret
dec
in
dec
xor
jb
pop
dec
scas
mov
or
jnp
inc
ss
fcmovnu
mov
daa
inc
sbbl
scas
pop
xor
jl
js
loopne
fisubs
mov
inc
andb
cs
enter
movb
inc
movb
pop
scas
int
inc
mov
jnp
insb
mulb
add
or
mov
adc
enter
sbb
ss
mov
or
push
jl
push
xchg
cltd
push
adc
and
jo
jb
or
movsl
pop
sub
test
sub
push
xor
sub
cmc
jae
pop
dec
int
mov
and
mov
iret
fadds
clc
add
movsb
add
aam
jle
mov
push
popa
lods
hlt
fneni(8087
dec
mov
push
mov
das
mov
leave
push
stos
jl
sbb
xchg
xchg
jns
test
inc
mov
cwtl
or
aaa
outsb
sbb
ss
mov
js
jno
fildl
push
or
inc
xchg
loop
outsb
push
lcall
mov
call
or
pop
pop
sub
leave
btr
loop
mov
popa
jb
cltd
sbbl
arpl
inc
clc
cmp
adc
bound
mov
cmp
jb
shll
inc
add
data16
mov
jmp
adc
loop
mov
xor
pushf
pop
lds
std
pop
mov
data16
sbb
dec
inc
aad
sbb
push
mov
sub
ret
leave
insb
scas
sub
mov
mov
and
inc
dec
mov
sub
mov
pop
pop
jno
pop
in
dec
sbb
aas
adc
ret
sbb
cmp
stos
mov
icebp
sahf
iret
pop
mov
mov
or
jp
mov
and
arpl
dec
pop
arpl
clc
jecxz
jle
data16
push
out
mov
push
mov
int3
cmpsl
add
push
mov
inc
cmp
cmp
jns
xchg
cmp
mov
inc
jne
cmp
cmp
mov
and
mov
idivb
mov
insl
adc
repnz
jnp
or
mov
fimuls
rol
insb
adc
xlat
in
add
out
lock
lds
sub
fldln2
out
filds
insb
pusha
pop
cmp
clc
aas
mov
mov
lret
jbe
out
dec
bound
jne
xor
jbe
inc
arpl
xchg
insb
aas
mov
fwait
lret
mov
dec
cmp
mov
test
jmp
popa
jmp
loopne
mov
or
mov
or
xchg
aas
jle
inc
pop
int
call
or
shl
movswl
cmpsb
add
imul
icebp
into
push
in
lods
add
dec
loopne
daa
test
jno
pop
cld
xchg
insl
add
lods
add
icebp
fdivp
push
jne
stc
sbb
stc
xor
push
pop
mov
clc
mov
mov
rolb
mov
cli
dec
sahf
xchg
adc
push
enter
sbb
sbb
aad
mov
lret
lcall
cltd
xchg
xchg
repz
fcmove
mov
stos
cmp
call
lea
loopne
sbb
popa
rcll
mov
addb
xchg
sbb
push
pushf
test
dec
div
lcall
dec
sarl
lock
mov
test
or
scas
in
clc
in
mov
clc
iret
jne
push
sub
pop
jmp
rcll
cmpsb
pop
movsb
clc
jnp
fisubl
cld
push
mov
outsl
jo
push
into
jo
js
push
loopne
mov
sbb
and
jb
lret
leave
mov
mov
ret
jle
fistps
movsb
addb
jmp
ss
clc
or
sub
sti
jg
les
lcall
outsb
lahf
gs
push
ficoml
aaa
pop
mov
jae
sarl
pushf
mov
cmc
push
jno
mov
push
loopne
shlb
lock
ljmp
cmp
inc
and
out
cmovo
addr16
jne
pop
mov
and
sbb
push
add
imul
xchg
ja
sbb
or
or
sub
enter
aam
fs
jnp
sahf
jp
mov
fisubs
into
mov
xchg
xlat
cmp
jns
jmp
push
jb
in
stc
sbbl
xor
push
lahf
sbb
ds
daa
xchg
mov
into
inc
testl
test
fwait
push
loopne
lods
or
mov
sbb
adc
push
push
mov
out
out
sahf
lds
lock
push
xchg
out
jp
mov
mov
call
sbb
sbb
mov
clc
push
outsl
mov
test
mov
loopw
das
xchg
fistpll
fcomps
jmp
shlb
pop
mov
sti
mov
das
adcl
in
call
lods
xchg
sti
sub
outsl
pusha
sti
lahf
in
inc
mov
xchg
xor
push
and
inc
or
xchg
outsb
adc
or
mov
sbb
pop
lahf
aam
or
jbe
ja
jp
sub
pop
mov
jmp
push
rolb
fwait
jb
repnz
es
lods
sub
pop
cmp
sti
mov
sbb
sbb
mov
xchg
int
inc
adc
fnsave
or
pop
jbe
into
xor
negl
or
sarb
push
inc
add
fsubp
stos
shlb
lahf
fiadds
mov
test
imul
shrb
shlb
arpl
mov
fmulp
jge
test
mov
dec
dec
addl
mov
adc
vpslld
push
mov
adc
pushf
push
or
jle
pop
pusha
xchg
stc
popa
xor
xor
scas
mov
jae,pn
mov
xchg
inc
icebp
mov
sti
aad
mov
mov
shlb
sbb
mov
into
ret
jnp
rorb
ds
cs
inc
and
pop
scas
xchg
testl
in
loop
lods
shr
ds
mov
lods
call
cld
aad
or
outsb
or
jae
mov
sbb
pop
cltd
or
cmc
inc
pop
sbb
jne
lcall
push
cmc
push
fistpll
icebp
dec
shlb
add
orb
fldenv
sub
mov
js
xchg
and
push
repz
mov
xor
popf
clc
xor
mov
or
sbb
sar
sbb
aas
push
mov
mov
push
jae
ret
add
cmp
pushf
and
loope
adc
mov
cltd
pop
dec
mov
mov
pop
lock
aad
adc
dec
ja
stos
insb
in
arpl
cmp
pop
mov
in
std
or
xchg
xchg
fcom
or
popf
sti
movsb
xchg
fistl
divb
dec
lods
xchg
mov
pop
push
movhps
sub
fsubrl
leave
fs
in
insl
int
xchg
std
orl
mov
adc
jge
dec
adc
lret
jle
and
mov
cmp
pop
xchg
add
inc
stc
pop
into
repnz
sbb
xor
or
jle
popa
mov
or
movsb
jnp
aad
or
mov
xor
dec
sbb
shlb
sbb
fs
lock
in
cmpsl
or
xchg
sbb
into
sub
out
nop
mov
sbb
cmpsb
ja
mov
push
pop
push
gs
fnstsw
jne
mov
jne
daa
cmp
loope
mov
pop
push
lret
cld
imul
add
call
push
add
arpl
jle
mov
loope
das
out
jmp
ret
and
mov
imul
mov
mov
sahf
or
push
push
fistps
cli
xchg
push
std
jns
out
imul
jns
jno
cmpl
jle
das
das
hlt
pop
or
xor
das
lcall
pop
sarl
int3
mov
outsb
inc
add
out
or
cmpsb
sbb
lahf
jae
xlat
fcompl
cltd
mov
mov
sti
shll
stos
push
decb
jo
sub
inc
into
loopne
push
xlat
xor
and
outsl
js
orl
loop
fisubs
pop
sbb
push
pop
sub
lds
in
xchg
cmp
pop
inc
loopne
mov
adc
in
out
xor
leave
push
push
ljmp
jmp
lahf
add
cmp
mov
mov
jmp
xchg
aas
jne
xor
xchg
adc
jp
lret
subl
pop
push
out
ljmp
push
cmp
sub
cwtl
lcall
cli
mov
pop
add
xor
data16
popf
xchg
lods
and
mov
mov
sub
incb
ficompl
jl
pop
stc
faddl
cmpsl
pop
mov
call
xor
push
cltd
stos
insb
imul
movsl
sub
xchg
add
test
jg
xchg
cmp
fmull
fsubrl
daa
dec
mov
lds
mov
dec
xchg
sub
popa
add
mov
incl
jl
xchg
popf
daa
inc
dec
sbbb
inc
rcrl
jno
out
out
sub
xchg
inc
inc
outsl
imul
mov
sarb
lahf
out
aas
push
jmp
cmpsb
add
mov
sti
jae
push
xorb
cmpsl
and
roll
mov
push
roll
enter
cmp
enter
pushf
adcb
addl
outsb
test
fdivrp
in
lret
lds
mov
and
scas
ja
aas
pushf
js
pop
aas
cmc
push
andb
sub
inc
das
pop
jns
dec
out
fldenv
icebp
test
sarl
rclb
sub
adc
adc
mov
jnp
xor
sub
dec
sbb
rorb
inc
cmp
mov
aam
mov
js
arpl
xchg
or
into
and
inc
lahf
mov
and
mov
addr16
xchg
jnp
jp
aam
adc
push
pop
mov
negl
mov
andl
gs
testb
push
icebp
pushl
mov
xor
cmp
inc
ljmp
lods
lret
ss
or
cltd
add
dec
leave
mov
popa
and
pop
inc
lock
sar
cwtl
ja
arpl
xchg
lret
dec
add
pop
mov
out
jb
fnstcw
mov
xor
stc
cs
cld
out
xchg
jbe
sahf
iret
dec
xor
lcall
cltd
cmpsl
sbbb
sbb
xchg
fnstsw
mov
cmp
pop
in
cmc
fstpt
hlt
das
lret
test
rcrl
pushf
lock
and
sbb
sbb
cmpb
lret
iret
sbb
mov
mov
popf
mov
inc
or
sub
loop
xchg
cmp
pop
ficoml
js
out
push
popa
fcom
out
cmp
mov
mov
adc
mov
push
stc
movsl
lds
out
mov
fadds
sub
outsb
icebp
fcoml
outsb
setl
test
lahf
stc
outsl
jno
stc
jns
pop
stc
out
sbb
mov
movsl
dec
xchg
push
lret
xor
cmc
imul
int3
adc
push
lret
cwtl
popa
or
fistl
mov
ds
fdivl
cli
or
fcmove
loopne
insl
mov
jne
ret
out
pop
inc
movsb
mov
and
insl
jne
stos
inc
or
pop
nop
inc
mov
push
jb
testb
jg
rolb
sub
dec
iret
loope
xchg
mov
cli
pushf
mov
jle
les
ret
xchg
or
cmp
jmp
fdiv
adc
mov
cmpsb
lahf
sahf
lcall
pminsw
outsb
jb
ret
push
mov
pop
in
mov
sub
push
push
jnp
add
mov
and
xor
pop
lcall
sub
pop
dec
lret
push
dec
pop
orb
mov
sbb
dec
lods
inc
dec
cld
subb
inc
cmp
fimuls
ljmp
ffreep
in
cwtl
pop
mov
scas
xchg
fwait
dec
aaa
mul
scas
add
lea
movsb
mov
jne
pop
shll
incb
dec
in
push
add
add
xchg
call
addr16
pop
inc
jnp
mov
ret
mov
fdivl
xor
jmp
adcl
sbb
fbld
or
mov
jns
aam
jno
jge
flds
xchg
xchg
and
push
mov
xchg
adc
adcb
jae
dec
mov
mov
hlt
xchg
fistpll
cmp
jo
push
mov
mov
add
dec
cli
fnop
dec
jns
rolb
lahf
loopne
or
mov
pop
shl
fstp
mov
dec
test
std
rorb
xchg
adc
xchg
mov
lcall
stc
push
dec
xchg
popa
roll
les
rol
fbstp
lret
cmp
addr16
les
push
cmp
out
push
jno
lret
inc
pusha
pop
movsb
add
cs
mov
jmp
push
pop
rcl
in
fldenv
imul
or
inc
inc
jbe
cli
jle
aas
stos
aad
out
add
lods
scas
or
xor
sbb
inc
xchg
inc
dec
shlb
xor
lds
cmp
ja
mov
jg
cmp
jl
cli
adc
loope
dec
sbb
test
mov
repnz
sub
mov
jecxz
inc
mov
pop
sub
jg
or
cmp
xchg
jne
stos
cmc
and
jle
test
mov
fnstsw
cltd
push
xchg
and
fs
mov
xchg
xor
stos
pop
scas
jg
jnp
push
subl
dec
adc
movsb
std
sbb
lods
adc
mov
jns
xor
aaa
jno
cmp
pushf
cmpsl
pop
dec
cmp
lcall
lret
jae
je
add
sbb
sbb
stos
lret
xor
insb
enter
daa
pop
fcoml
int3
xchg
xor
xlat
jecxz
pop
mov
movsb
push
shl
cli
bound
mov
test
pop
mov
xchg
scas
shlb
mov
imul
xchg
popa
mov
fiaddl
iret
sub
mov
subl
jecxz
jg
adc
mov
iret
rcrl
cmp
popl
mov
testb
and
aaa
aam
push
pop
xor
sub
jecxz
cli
or
addb
or
xchg
inc
gs
fisubl
push
aas
sub
lods
and
jecxz
dec
jae
mov
popf
test
xchg
cmpsb
test
mov
inc
shrb
sar
imull
es
inc
add
adc
inc
sub
jmpw
mov
notl
fistpll
mov
lret
cmpsl
sbb
add
xor
xchg
cmpsb
loope
sahf
es
xor
adc
jae
iret
pop
inc
lret
fsubl
jmp
pop
cltd
and
cmpsb
mov
clc
or
mov
cmpsl
out
lcall
or
cli
fwait
test
cs
cli
jl
push
mov
in
lcall
sbb
xchg
adc
mov
add
imul
add
xchg
movl
in
daa
bound
dec
nop
and
lods
and
dec
cmp
jns
and
sbb
aas
fimull
lahf
cmp
imul
or
cltd
mov
stc
aas
sub
xchg
and
nop
push
int
orl
je
out
roll
xor
les
inc
xor
pushf
mov
add
cmp
jno
rclb
clc
mov
imulb
fdivs
sub
push
cmp
cmp
dec
and
addr16
cmp
pop
arpl
sub
mov
cwtl
addr16
xchg
xor
bnd
sbb
mov
dec
mov
data16
outsl
mov
mov
jns
cmp
mov
inc
mov
gs
pop
test
xchg
test
push
loop
sub
loopne
pop
int3
stos
fidivrl
fnsave
cmp
sub
lret
and
lret
ffreep
je
and
gs
mov
adc
inc
loope
lahf
divb
movsb
jbe
add
push
jnp
lods
js
dec
sahf
mov
cld
cmc
sti
dec
adc
int3
inc
sbb
test
movsl
pop
cli
and
test
mov
cmpsl
in
push
movsb
mov
jp
test
cmp
popf
aad
adc
sub
js
jo
mov
fisttpll
pop
fs
sbb
arpl
cmpl
iret
sbb
push
pop
notl
sub
repnz
and
push
cmp
and
fs
or
rclb
fcompl
scas
add
mov
push
push
fwait
lret
inc
jnp
xor
aas
dec
outsb
dec
mov
mov
fisubs
mov
test
dec
insl
mov
push
repz
xor
les
dec
call
aad
repz
jns
xchg
shlb
enter
lods
sbb
jl
fidivl
lds
stos
ljmp
inc
sbb
cld
test
in
push
iret
enter
inc
and
lods
cmp
fcomps
fsubr
cmp
mov
push
lods
push
push
cmp
js
ljmp
pop
mov
mov
mov
aad
push
push
sti
mov
jecxz
jl
and
mov
pusha
out
adc
cmp
lcall
inc
push
mov
shlb
mov
jb
sbb
mov
add
aas
addl
enter
cmp
mov
lock
mov
movsl
pop
xchg
mov
pop
pop
movsl
inc
jg
insb
jns
xchg
inc
and
mov
call
sub
inc
sbb
mov
cmpsb
cmpsl
ss
sbb
fs
sahf
ss
push
movsb
push
fmuls
jno
jb
int
mov
stos
lret
out
scas
inc
mov
lods
imul
dec
mov
cmc
pop
and
xchg
ja
push
scas
mov
sbb
jb
add
jmp
mov
inc
loope
mov
xchg
dec
pushf
inc
cwtl
lea
and
mov
mov
mov
rorb
rcrb
mov
and
xchg
cmp
jno
adc
pop
xchg
or
bound
jg
jae
jl
push
out
push
sahf
push
out
je
mov
sbb
adc
and
xor
or
fisubrl
sbb
mov
mov
enter
loopne
sti
dec
sbb
mov
adc
out
mov
aas
dec
in
push
pop
ja
insb
add
jmp
dec
push
mov
xchg
sbb
roll
jp
in
cmp
jb
cmp
push
punpckldq
daa
inc
mov
cld
fsubr
mov
jp
sub
dec
out
insl
divb
xchg
and
pop
pushf
outsb
push
xchg
mov
inc
jno
jp
frstor
mov
scas
iret
lret
das
shrl
test
push
int
xchg
enter
cmpsb
mov
mov
cld
das
loope
dec
push
dec
outsb
mov
aad
lcall
test
push
cmpb
aas
stc
jg
or
jl
nop
jg
adc
in
adcb
mov
out
sub
js
xchg
mov
insl
sbb
lea
xchg
ficoml
pop
out
stos
mov
push
icebp
jp
lods
dec
out
popa
jae
adc
jnp
and
sub
lods
fs
cld
lock
inc
sub
int3
push
dec
sldt
push
rorb
dec
fnstenv
popf
cmp
pop
enter
outsl
popa
xor
inc
das
dec
push
sbb
add
xchg
inc
cli
add
ret
in
rcll
lods
jecxz
jbe
into
mov
pop
mov
mov
mov
sbb
pop
cmpsb
cs
cmc
push
mov
arpl
and
js
sub
ret
and
dec
xchg
lods
push
nop
mov
mov
mov
jmp
dec
mov
xchg
rorl
mov
sub
adc
repnz
sub
mov
or
mov
into
test
or
or
mov
rcrl
imul
jle
and
push
out
pop
xadd
js
sub
imul
out
das
mov
sub
loope
cmp
dec
sub
adc
jle
or
sub
push
fwait
test
aad
pop
push
fsts
mov
pop
xor
inc
mov
mov
push
lods
xlat
dec
leave
sti
cmp
cmpb
pop
cli
lods
jmp
inc
rcr
xor
test
test
andb
or
popf
mov
aaa
js
insb
jp
dec
xor
test
mov
jp
rcrl
mov
adc
or
xchg
adc
cmpsl
adc
push
mov
xor
imul
add
movsl
cmp
mov
pop
sbb
test
xchg
lods
cmp
clc
ret
inc
bound
sub
cmpsl
sub
mov
sbb
mov
pop
fisubrs
stc
pop
hlt
dec
sbb
lds
inc
mov
test
mov
mov
sbb
lcall
rolb
xchg
bound
xor
pop
xacquire
pop
call
repz
xchg
fucomi
mov
lock
xchg
insl
push
arpl
out
in
mov
ret
fdivl
mov
jecxz
xchg
and
push
xchg
pop
adc
fldt
mov
push
test
xor
jecxz
jnp
pop
int3
cmp
mov
jns
aam
test
cmc
xchg
sbbl
jbe
stc
push
iret
cmc
loopne
xlat
push
jae
pop
std
test
pusha
into
cwtl
negl
stos
mov
xor
in
add
adc
add
push
in
add
fdivl
nop
imull
imul
push
xlat
xor
jbe
add
cmp
fidivrs
xchg
adc
push
add
jb
mov
inc
xchg
dec
pop
mov
dec
es
sub
mov
jns
push
and
decb
jo
add
cmp
pusha
mov
pop
push
jp
test
popf
sub
adc
mov
mov
xchg
pop
imul
scas
mov
jecxz
push
insb
mov
xor
aas
js
sub
and
and
popa
push
xor
and
aad
inc
cs
pushf
outsl
lret
inc
push
psubw
or
pushf
fnsave
mov
mov
mov
sub
lods
imul
mov
aam
test
inc
gs
sub
mov
push
xchg
movsl
leave
gs
fisttpl
mov
in
xor
fnstsw
fsubr
test
enter
push
sti
in
mov
imul
sub
outsb
and
fidivrl
int3
mov
fstp
mov
aaa
sbb
xchg
sbbb
mov
dec
movsb
xchg
pop
dec
jecxz
pop
push
add
das
aaa
xchg
jecxz
sbb
mov
jnp
ds
jge
xor
je
or
and
lock
cwtl
jge
xchg
int3
jecxz
adc
and
outsb
lock
mov
paddusb
mov
aam
cmp
push
fcoms
add
enter
sbb
mov
xchg
lea
sahf
loop
inc
call
lock
jae
popa
jge
cmp
repz
pop
dec
cld
pop
sub
js
into
ret
xor
jmp
inc
out
ja
leave
or
cs
and
int
push
ss
arpl
mov
outsb
std
test
jo
sub
and
pop
or
out
lret
jno
test
leave
mov
imul
mov
xchg
pop
movsl
sbb
dec
jnp
dec
call
loop
cmpsb
mov
roll
adc
into
sbb
inc
pushf
push
xchg
int3
leave
jb
test
scas
dec
push
es
jmp
scas
enter
ret
jbe
sbb
imul
push
push
iret
addr16
xchg
std
pop
lret
cmp
pop
inc
outsb
jmp
outsb
iret
mov
cmpsl
xchg
divb
dec
loopne
out
lret
sub
jne
dec
or
test
xlat
cmc
mov
orb
or
int
adc
xor
jp
repz
sbb
mov
xchg
sbbl
lods
arpl
jns
cwtl
int
mov
jp
cmc
sub
fisubs
jb
int
or
pusha
dec
ret
fildll
push
mov
out
test
pop
fdivs
fs
das
sbb
and
pop
test
fincstp
xor
mov
ds
cmp
cmpl
cmp
cmp
orb
in
fbstp
sub
dec
or
fnstsw
inc
adc
sub
and
lock
mov
mov
push
mov
jo
lret
sbb
xchg
push
or
mov
fisttps
cmpl
js
adc
inc
inc
outsl
pop
cmc
ljmp
test
dec
and
aas
mov
lea
add
pop
lcall
jg
and
xchg
aam
jge
stc
aaa
je
dec
enter
cltd
fimull
and
xchg
and
outsl
xor
cmc
pop
mov
leave
arpl
jne
daa
push
repz
cmp
push
mov
shll
sub
fnstsw
xor
cmp
js
sbb
pop
sbb
xor
xchg
jl
jne
dec
xorl
adc
mov
popa
mov
xchg
pushfw
mov
lods
and
xchg
dec
xchg
and
jp
dec
int3
jecxz
arpl
lea
repnz
stos
lcall
js
mov
insl
arpl
aaa
jae
sbb
test
sbb
ja
sbb
shl
popf
js
clc
and
icebp
mov
call
loopne
inc
divl
pop
and
dec
add
mov
mov
cmp
mov
shrl
popa
in
rol
jge
push
xor
cmp
add
pop
dec
push
adc
cs
nop
in
pop
xor
inc
mov
cmp
dec
jg
gs
lret
mov
and
ficoml
pop
and
lds
loop
pop
out
popa
loope
xor
mov
and
movsl
mov
bound
shl
lret
pop
or
or
inc
mov
jne
pop
fsub
negb
jle
stos
icebp
cwtl
hlt
andb
mov
in
pusha
inc
push
js
jmp
loop
lods
imul
push
pop
lahf
test
movsl
push
sub
xchg
iret
sub
sub
stos
xchg
mov
xchg
daa
inc
fcmovu
sbb
mov
push
loope
mov
repnz
stos
sbb
jg
push
rol
mov
jnp
xchg
nop
outsl
or
add
std
leave
jle
subb
xor
shr
mov
insl
sub
pop
inc
lods
pop
psubb
lock
add
sub
sbb
xor
mov
mov
sarb
push
outsl
mov
ret
in
inc
fcoml
cmp
pop
jnp
sub
mov
cs
inc
xor
test
push
mov
adc
or
int
sub
pop
sbb
push
cmp
xor
mov
outsl
icebp
pop
enter
add
jno
push
push
imul
mov
leave
leave
outsb
or
mov
sarb
cmp
jl
stc
push
mov
push
inc
jns
fwait
mov
or
push
mov
jb
imul
icebp
arpl
fstps
sub
in
mov
arpl
in
adc
lret
ss
sarl
xchg
cmpsl
loopne
call
pop
fs
les
jle
push
imul
sub
xchg
loope
sbb
cmp
inc
cwtl
xchg
inc
mov
mov
scas
dec
xchg
xlat
lret
in
bnd
xchg
fistps
xchg
dec
arpl
jb
xchg
add
mov
loop
ja
or
sub
es
push
lret
jge
dec
and
push
sarb
or
cmp
call
xor
mov
into
ret
add
lock
mov
mov
push
jmp
inc
dec
push
mov
mov
jo
dec
rcl
xchg
imul
mov
add
lcall
in
and
or
push
stc
xor
jns
sbb
sub
fisubs
outsl
inc
push
add
cld
xchg
and
call
mov
lret
repnz
insl
xchg
mov
and
jne
dec
lds
cmp
mov
inc
mov
xor
xor
mov
push
leave
leave
leave
cmpsb
mov
jne
xorl
test
je
push
cmpl
arpl
jmp
jle
push
data16
push
clc
and
jo
mov
cmp
mov
lahf
call
sbb
das
addr16
rorb
or
push
rcrb
and
mov
lods
or
mov
mov
sbb
popa
jl
jmp
jbe
pop
xor
xchg
das
or
outsl
cli
loope
xchg
jb
rclb
adc
sbb
xchg
push
xchg
sbb
cmp
sbb
jl
and
xor
mov
pop
xor
ret
mov
adc
scas
scas
shll
push
mov
xchg
and
out
stos
es
addr16
mov
jle
cmp
inc
inc
out
sub
add
popa
mov
mov
jl
cltd
mov
or
cmp
in
push
movsb
in
adc
push
addr16
jo
mov
call
jbe
dec
aas
adc
lock
fucom
test
outsl
mov
xchg
jb
rcrb
out
out
adcl
mov
into
mov
or
repz
ja
xor
push
or
inc
leave
dec
lods
inc
sub
push
out
xchg
adc
jle
mov
insl
mov
push
sub
data16
flds
movb
aaa
inc
aam
shlb
or
ljmp
out
dec
push
cmp
push
popa
mov
add
fwait
aas
inc
dec
cmp
cmp
inc
dec
cmp
inc
pusha
in
mov
sahf
push
scas
jo
dec
xchg
pop
adc
cwtl
add
xlat
loope
imul
inc
out
out
repz
jb
jge
loope
sbb
cmp
add
je
xchg
ljmp
pop
out
out
lods
orl
pop
int3
stc
push
jne
in
lret
cmpsl
je
jle
or
fs
shll
les
aaa
sahf
repnz
pop
stos
cmc
ficompl
std
stos
push
idivl
movsl
insb
and
pop
sub
mov
dec
movsl
inc
cs
adc
sbb
add
adc
mov
scas
and
or
jne
lahf
xor
adc
pop
pop
adcb
inc
jb
xchg
xlat
out
mov
cmp
out
pop
frstor
mov
sti
fbstp
push
maskmovq
idivl
pop
mov
pop
mov
or
mov
inc
cmc
adc
cli
xor
push
lret
lea
inc
pop
xchg
mov
push
or
mov
mov
insb
sbb
imul
add
xor
jne
movsb
xchg
xor
push
xor
rcrb
test
or
sbb
enter
imul
or
xchg
dec
xchg
jae
mov
cmpsb
js
rcr
jne
cmp
cmp
sbb
lock
mov
mov
cld
or
push
gs
outsl
jne
icebp
add
sbb
mov
stos
cmp
cmp
push
mov
sti
icebp
cmp
jp
scas
jo
mov
pop
jle
jns
adc
lahf
fsubr
fnstcw
mov
aad
fidivl
mov
inc
mov
daa
pop
pusha
fstpl
scas
bnd
mov
iret
xor
inc
adc
fsubrl
shll
xor
xchg
mov
loope
push
sub
xlat
adc
mov
gs
inc
test
sub
and
hlt
loope
mov
xchg
stc
mov
jnp
mov
adc
mov
mov
inc
stc
lea
repz
inc
mov
xchg
ret
xor
mov
mov
push
add
shll
sahf
int
stos
fimuls
subb
mov
xchg
nop
in
jmp
inc
push
mov
pop
insb
xor
add
mov
mov
or
call
jno
aam
mov
adc
cmp
mov
sbb
inc
out
xor
add
mov
test
ret
fisttpll
add
xor
repz
jae
inc
lods
jne
sub
mov
sti
int
fwait
and
push
inc
dec
hlt
mov
jo
mov
add
std
push
jno
pop
and
insb
lock
pop
stos
inc
xchg
repz
jmp
jbe
mov
pop
pop
inc
sbb
sbb
test
push
xlat
and
cmp
jmp
mov
call
or
out
or
nop
mov
sbb
push
mov
icebp
cmc
aad
push
sbb
push
ss
cli
mov
mov
and
imulb
movl
pop
mov
adc
ret
or
cwtl
js
lock
xor
mov
aaa
jp
inc
mov
rcrb
data16
or
jns
ja
jg
inc
negb
mov
addl
xchg
in
jo
lret
ljmp
or
aaa
add
push
movsl
jno
mov
xchg
pop
cmc
pop
rol
rorl
xchg
clc
addl
roll
popf
test
inc
jae
mov
rolb
fstl
fcmovne
sub
pop
xchg
mov
xchg
in
into
sbb
adc
mov
xchg
inc
insb
je
inc
mov
xchg
and
xor
xchg
add
sbb
jo
xor
inc
mov
das
fdivs
pop
xorl
cmpsb
mov
test
xor
cmpb
mov
adc
sbb
mov
scas
out
mov
jo
scas
push
add
test
mov
ret
out
pushf
mov
mov
pop
ret
mov
das
mov
cld
inc
inc
mov
mov
xchg
lret
or
or
mov
out
or
gs
mov
or
dec
jns
pop
cmp
fcomps
idiv
or
lods
in
lcall
das
loope
das
jp
ss
adc
jecxz
fxtract
fistpll
enter
push
lahf
je
jge
jbe
ja
call
adc
incl
das
out
mov
pop
jns
nop
xchg
cwtl
jo
int
out
mov
dec
jl
mov
push
jae
js
daa
mov
out
adc
pushf
fadd
add
repnz
xchg
test
sub
xchg
and
out
xchg
sub
rcr
or
bound
fucomip
push
xchg
fisubs
enter
or
or
mov
shll
mov
shlb
inc
cmp
push
jns
jb
mov
cli
andl
sbb
dec
cmpsb
mov
ja
addb
sbb
dec
jl
pop
jns
pop
call
sbb
out
or
lods
imul
fcomps
sub
xchg
jb
xchg
scas
or
pop
movsl
ret
icebp
mul
out
sbb
fildll
add
loopne
and
cld
push
pop
cmp
imulb
leave
in
popa
cmpsb
push
cltd
inc
leave
bound
inc
imul
push
mov
outsb
ds
sub
xchg
loopne
data16
sub
iret
sub
lcall
out
int
xor
insl
add
xchg
call
rol
push
lods
cmpsw
push
inc
mov
xchg
sub
push
pop
lock
leave
or
mov
testb
dec
cli
fidivrs
scas
arpl
lods
notl
and
idivl
das
or
adc
sti
inc
xor
mov
ret
jo
data16
imul
rol
adc
lock
sbb
cwtl
fistpll
inc
add
pusha
mov
mov
jne
lods
inc
popa
outsl
jp
dec
and
xor
xor
mov
fisubl
xor
mov
movsl
pusha
push
mov
jp
mov
push
xorl
adc
test
adc
imul
sarb
cmp
hlt
push
push
inc
adc
outsb
fisttpll
nop
push
adc
shlb
cld
mov
mov
xchg
mov
push
mov
frstor
out
inc
ficomps
xchg
push
dec
adc
rcl
sti
pop
cli
mov
test
in
scas
lcall
mov
xchg
scas
out
pop
fiadds
and
mov
stc
rorb
lds
ss
sbb
pop
nop
jecxz
movsl
lds
test
adc
aad
push
and
imul
mov
xchg
pop
popa
in
xchg
cmpl
movsb
es
jp
lock
decl
loop
push
enter
push
dec
xor
loop
fbstp
jae
pop
inc
pop
mov
add
cmc
xor
dec
inc
rorl
pop
adc
jmp
adcl
cmpsl
hlt
sub
pop
lods
jae
fsubrl
jae
rolb
cli
sub
pop
andl
sti
push
mov
mov
aam
xchg
xor
gs
push
mov
in
daa
in
scas
pusha
adc
push
inc
bnd
movsb
jae
popa
aam
sbb
sbb
in
sbb
cmp
lock
mov
sarl
in
pusha
push
cmp
xchg
or
std
cmpsb
lods
scas
inc
dec
stos
push
mov
pop
inc
es
adc
test
test
lcall
inc
cmpsb
or
cwtl
add
sub
dec
mov
nop
pop
mov
sbb
lock
push
lds
loopne
mov
and
xorb
mov
mov
mov
loope
sbb
push
ror
xor
sub
and
stc
ret
fistl
cmp
ss
sub
rcll
cmp
nop
aam
xchg
int3
icebp
cmp
clc
fnstsw
imul
push
dec
push
loop
mov
xchg
scas
or
cmp
sti
in
jp
dec
pop
movsl
out
mov
in
fwait
dec
jge
and
jno
loopne
loope
pop
in
inc
sbb
loop
inc
pop
xor
mov
mov
jp
adc
aam
stc
or
mov
fdivp
or
inc
mov
testb
ljmp
loop
push
mov
iret
mov
mov
mov
js
mov
ret
in
imul
and
sbb
jge
sbb
arpl
xchg
addb
xor
adc
inc
adc
xsaves
jbe
sub
xor
sbbl
in
movsb
add
push
and
idiv
and
push
jge
repnz
xchg
xchg
out
cmp
mov
pop
sub
sbb
jae
cmp
mov
dec
dec
push
xchg
cli
cmp
lods
aad
je
xor
jle
insl
jle
push
jmp
and
inc
mov
push
imull
mov
mov
fwait
dec
sub
push
sbb
out
sub
xlat
pop
push
fcmove
mov
in
dec
xor
fs
jge
xchg
xor
and
mulb
cmpl
rcrb
jbe
leave
pop
in
or
es
cmp
clc
outsl
mov
sbb
lods
jo
cmp
loopne
and
dec
repz
xchg
shlb
jg
inc
xchg
out
dec
cmp
mov
imul
in
push
adc
rcll
test
stos
or
ds
mov
es
add
push
dec
and
jns
icebp
lods
fildl
mov
aaa
enter
jecxz
hlt
adc
jo
roll
cli
inc
arpl
mov
imul
ja
stc
jae
movsl
push
in
test
stos
ret
and
push
mov
dec
lahf
sarl
lods
push
xor
es
and
cwtl
sbb
lahf
xchg
out
mov
and
nop
jnp
jmp
xor
cmp
loopne
das
std
lock
dec
jo
sub
mov
jnp
jae
rol
sahf
push
inc
adc
lahf
jo
inc
cmpsl
cmp
jmp
or
sub
mov
je
pushf
into
mov
xchg
mov
loop
cltd
dec
pop
adc
test
scas
xchg
aaa
scas
mov
pusha
cmpsl
lock
int
ljmp
adcb
cmp
xorb
push
pop
loope
pop
fidivrl
inc
sti
inc
imul
clc
xchg
jae
sbb
ds
xor
sbb
xchg
cmc
jle
hlt
out
mov
cmp
out
jp
nop
xor
xchg
push
xor
cmpl
cmpsb
sub
inc
repz
or
out
sub
jp
das
lods
jbe
jg
sub
xchg
mov
xor
ds
jge
add
and
negb
xor
push
in
sub
mov
movsb
inc
aad
or
dec
or
pop
push
jae
jp
adc
movsb
scas
andl
and
nop
sbb
adc
cltd
outsl
imul
jnp
insb
push
outsl
outsl
xchg
inc
loopne
or
insb
icebp
dec
xorl
test
adc
popf
inc
cmpsb
add
lcall
jmp
test
iret
in
test
push
push
dec
sub
pop
mov
adc
dec
iret
loop
pop
ficoms
imul
dec
fsubs
jns
not
mov
inc
dec
xlat
insl
mov
jg
sar
aas
jg
repz
push
mov
cmc
ds
and
lret
mov
jne
adc
mov
xor
popa
sub
sahf
add
sub
lods
lock
shl
inc
dec
pop
push
mov
adc
ror
cmpb
dec
cmp
sub
outsl
xchg
cs
ljmp
or
inc
dec
fdivl
iret
cmpl
neg
pusha
lock
adc
testl
negl
push
lcall
push
xlat
adc
jno
add
jmp
nop
lret
sahf
add
fisubrl
mov
jp
sbb
or
rcrb
and
push
in
or
aaa
repz
loopne
sti
xchg
inc
add
in
mov
sahf
or
out
ja
jbe
mov
sub
jmp
adc
push
mov
in
sbb
xchg
rclb
mov
jo
add
mov
mov
test
addr16
or
adc
cmc
or
sti
add
lcall
dec
and
dec
fisubs
cmp
and
out
push
xchg
ds
cmpsb
xor
or
in
inc
lcall
sti
push
xchg
std
mov
ss
fmull
jae
lea
mov
jae
dec
pop
fs
xorl
mov
mov
cmp
and
nop
es
mov
xchg
fs
cli
int3
dec
and
mov
jno
scas
cmp
hlt
mov
fucomip
pusha
dec
jae
popa
ret
inc
in
push
and
addr16
or
aam
pop
test
leave
aaa
popa
add
test
movl
aas
sub
loope
cs
dec
inc
or
push
mov
or
dec
stos
mov
clc
gs
dec
mov
fidivs
cmp
sub
les
and
fwait
ret
adc
jae
mov
test
nop
jg
mov
hlt
adcl
mov
push
pop
xor
and
inc
inc
pop
push
hlt
push
cmp
icebp
lret
movl
flds
pop
subb
repz
fwait
std
sbb
pop
cmp
addr16
addl
and
push
inc
inc
add
data16
ret
xor
dec
in
cmc
adc
cmp
ljmp
ror
and
push
movsb
pop
adc
enter
push
adc
mov
mov
dec
ds
sub
xlat
paddq
mov
cmpsl
push
and
xchg
mov
add
and
outsb
add
imul
push
mov
pop
jecxz
adcl
jae
pop
stos
mov
mov
in
cwtl
jno
jecxz
adc
fdivl
cmpb
ret
bound
add
xor
movsl
pop
mov
sub
daa
pushf
push
xor
out
add
sub
in
js
popa
outsb
add
fldenv
cmp
jne
dec
cmpsl
mov
fwait
out
push
clc
or
jp
sahf
lahf
xchg
cltd
xchg
pop
dec
leave
lods
cmp
add
or
cmpsb
in
mov
sub
arpl
out
imul
inc
dec
ljmp
icebp
jb
mov
mov
push
inc
popa
xlat
pop
jb
xchg
addb
xchg
push
lods
xchg
inc
mov
outsb
inc
dec
jp
jl
pop
lcall
lret
mov
cltd
or
mov
jae
stos
aam
xor
sbb
shll
mov
xor
xchg
xor
test
mov
stc
mov
add
rcr
add
cld
divl
xchg
fwait
sbb
lods
scas
xor
out
addb
dec
xor
idiv
dec
sbb
xor
pop
mov
push
mov
sbb
mov
cli
xor
iret
sub
test
stc
xchg
fstl
movsb
rcr
cwtl
sarl
test
mov
or
inc
jb
xchg
sub
mov
stc
lret
mov
push
pop
xchg
or
mov
pop
popf
add
and
lret
mov
cli
mov
xchg
call
jp
ja
sbb
xchg
jp
push
pop
mov
mov
test
and
sbb
jb
jle
enter
push
cmp
mov
scas
in
aad
xchg
add
mov
ret
in
or
cmp
lret
xor
push
and
mov
into
cli
scas
or
int
mov
pusha
aad
stos
pop
lods
insl
gs
in
push
mov
int3
pusha
or
cmc
or
addb
xchg
orb
push
and
loop
mov
add
push
je
xor
out
sub
ss
mov
scas
xchg
loop
in
cmp
movsl
inc
xor
pop
idivl
bound
pop
icebp
mov
add
push
xorb
leave
sbb
lock
jb
lock
sbb
mov
rcrb
xor
mov
enter
cmc
lret
es
inc
push
mov
sahf
xor
mov
outsl
sub
inc
xchg
pop
xchg
sub
lcall
mov
push
mov
add
cld
test
and
pop
adc
addl
in
inc
popf
xchg
sub
add
leave
cmp
mov
mov
enter
pop
push
xchg
push
inc
test
daa
push
cmp
mov
jle
addr16
popa
test
into
cmp
adc
rcrl
xchg
fcompl
push
out
gs
filds
daa
int3
movsl
aad
sti
cmp
ret
or
mov
jnp
push
adc
dec
lods
in
aaa
or
outsb
test
repnz
push
add
andl
mov
mov
test
test
and
rcrl
cmp
dec
js
adc
enter
rcrb
lods
insb
enter
jbe
out
iret
dec
and
ficompl
xchg
jl
cld
cwtl
mov
adc
repnz
data16
fcoml
lods
ja
lret
gs
jae
popa
mov
mov
xchg
push
shrl
loop
lds
jge
ss
adc
lahf
data16
or
inc
fld
add
inc
jmp
rol
fsubr
jae
lahf
aad
push
cld
push
rcll
sub
aad
cs
mov
add
pop
push
ret
mov
jle
sbb
sbb
jge
les
leave
js
or
imul
test
xchg
mov
lods
ret
fdivl
cmp
cmp
mov
test
repnz
aas
jmp
aam
push
insl
ficomps
cli
push
inc
dec
mov
pop
cld
outsl
mov
mov
fwait
inc
adc
sbb
lahf
addl
fcomps
loopne
push
sahf
push
push
mov
xor
jo
dec
call
sahf
mov
stos
cmp
ljmp
and
and
addr16
nop
and
cld
mov
xchg
xchg
addl
xchg
mov
pop
mov
inc
xor
nop
test
and
dec
into
fnstsw
fdivrs
and
mov
mov
sub
bound
xor
mov
pop
push
test
icebp
sbb
jns
inc
int3
adc
push
jmp
pop
rorb
out
xor
in
iret
ret
mov
adc
lea
out
mov
pop
add
and
sbb
mov
jl
mov
mov
cmp
dec
mov
testb
repnz
ss
push
out
add
scas
ffree
sub
cmp
sbb
cli
lods
lods
ret
int3
push
fstpl
or
mov
icebp
icebp
loopne
mov
scas
loope
cs
adc
imul
sub
mov
add
xchg
in
and
lds
dec
fcomps
dec
mov
pop
in
xor
and
xchg
pop
imulb
rcrl
adc
cli
fst
scas
xor
or
fmuls
es
jle
data16
xlat
pop
push
test
ljmp
bound
lds
mov
ja
pop
iret
sti
loope
fdivrl
test
pop
and
xchg
call
push
mov
xchg
and
out
push
add
imul
leavew
cmp
pushl
ds
dec
jg
loop
inc
pop
mov
mov
mov
push
loopne
and
jns
xchg
mov
loopne
xor
inc
sub
push
mov
leave
cmp
fiadds
pop
loopne
sti
in
movsb
ficoml
sbb
xlat
xchg
int
xor
push
mov
lea
xlat
mov
cld
jbe
xchg
mov
adc
je
sahf
xchg
stos
out
cltd
test
xor
adc
jge
out
in
push
add
test
mov
sub
outsb
add
sub
insl
jb
pushf
loop
rcrl
xchg
cmpl
out
ret
mov
dec
jnp
mov
pushf
lret
shlb
fucomp
mov
cmp
xor
jb
int
stc
scas
ss
stos
jnp
jns
lods
test
pushf
int
mov
inc
and
fimull
into
and
es
dec
imul
ds
adc
icebp
movsl
sbb
push
int
fwait
xor
pop
add
jmp
pop
lods
test
movsb
add
mov
out
inc
out
repnz
jecxz
pcmpeqb
xor
mov
xlat
mov
mov
adc
fmuls
sahf
mov
pop
leave
push
mov
mov
in
dec
lock
jecxz
std
mov
add
jmp
lods
mov
mov
inc
mov
fmuls
add
stos
iret
xchg
mov
inc
adcl
cmc
cltd
cmp
addr16
xor
outsl
or
sbb
dec
add
jl
inc
xchg
fcomps
nop
xchg
fisubl
and
popl
sbb
lods
pop
dec
mov
loop
outsb
ja
pop
sbb
subb
lods
inc
cs
test
mov
std
xor
in
mov
sahf
frstor
pop
popf
pop
and
push
dec
fs
dec
xchg
ljmp
jp
ret
negl
xchg
xor
fnstenv
mov
mov
js
mov
lcall
loope
loopne
rcll
or
adc
insl
inc
xor
fimull
jnp
testb
dec
jbe
cs
js
sbb
lea
push
mov
jmp
and
mov
push
sbb
out
stos
sbb
aam
in
xor
inc
add
das
cs
ss
jge
add
fcoms
add
and
bound
shlb
insl
mov
insl
sbb
cld
adc
lahf
scas
mov
cli
and
ja
loope
sti
mov
jecxz,pn
les
popf
rep
mov
cmp
push
in
push
sbb
pop
cmp
pop
jb
and
fwait
pushf
pop
xor
dec
pusha
test
fwait
mov
cltd
mov
jmp
pop
jns
rclb
incb
notl
inc
cmpsb
outsb
lahf
mov
mov
cmc
dec
mov
mov
pop
or
hlt
mov
sbb
hlt
out
dec
pusha
and
repz
int3
mov
or
mov
sbb
stos
nop
imul
call
mov
daa
pop
or
and
lcall
mov
test
pop
ficoms
aas
iret
and
pop
xchg
cmp
aas
sbb
mov
nop
cli
sub
mov
pop
shlb
mov
lahf
cmp
pop
inc
cltd
xor
dec
ljmp
pop
mov
in
and
notl
mov
and
dec
mov
popf
mov
add
movsl
arpl
jle
adc
in
scas
insl
rcr
sub
sub
pop
rorb
loopne
mov
or
xchg
cmpsb
cmp
inc
inc
jle
mov
daa
int3
out
inc
mov
inc
mov
test
sti
arpl
cmp
add
mov
mov
out
or
sub
push
ss
push
push
sti
inc
sub
shlb
test
cmp
and
dec
pop
rclb
push
shrl
inc
repnz
outsb
push
in
repz
lock
test
outsl
mov
pop
add
test
xor
subl
jl
aad
pop
inc
add
sti
mov
mov
in
daa
daa
ficoms
ja
fdivp
cmpsb
pop
adc
bound
shr
fwait
or
push
sbb
add
cmp
mov
ja
in
ret
cmp
pop
cmpsl
sar
or
push
mov
and
add
js
in
dec
loopne
lods
pop
pop
movb
dec
stos
dec
or
sbb
cmp
sub
push
int
mov
je
cli
jnp
popf
cwtl
loopne
stc
cmpsb
mov
in
dec
testb
lea
jecxz
push
jae
ljmp
mov
je
ja
or
rcll
or
and
test
int3
cmp
ret
pop
daa
adc
decb
and
int3
xlat
enter
lret
sbb
fdivs
mov
mov
ljmp
test
jo
mov
cli
loop
ret
orb
lock
mov
push
fdivr
sub
daa
adc
lock
xor
mov
pop
iret
sbb
cwtl
jl
jno
fldenv
fs
into
js
xchg
xchg
sahf
lea
fs
push
adc
or
dec
mov
les
test
pop
dec
addr16
push
nop
int3
dec
enter
add
jns
scas
add
mov
bound
ret
push
cmc
xchg
mov
test
or
jle
mov
jno
pushf
les
cmpsb
movsl
push
sarb
add
jmp
in
and
pop
dec
lods
pusha
inc
sbb
fsubrp
mov
jno
bound
movsb
lods
lcall
or
scas
sub
xchg
dec
mov
inc
pusha
and
xor
push
ds
xchg
frstor
mov
mov
xchg
push
in
jle
lahf
jne
mov
add
mulps
outsl
adc
test
lock
xor
lret
loop
push
push
push
imul
pop
sub
jp
pusha
jl
xor
xchg
push
jp
sbbb
roll
into
cli
lds
daa
pushf
dec
into
push
jl
xor
mov
pop
leave
pop
sub
js
call
repz
pop
dec
je
and
arpl
lcall
aad
jb
xchg
jmp
jnp
mov
xor
ficoms
or
clc
rclb
pop
lock
pop
mov
hlt
xchg
js
xchg
out
ret
fwait
inc
cmpsl
xchg
cwtl
pop
push
imul
or
fwait
dec
lods
mov
mov
cmp
and
call
loope
add
cmp
pop
xor
add
dec
mov
rorl
mov
popa
hlt
pop
xor
cli
ja
fisubrl
iret
and
sar
pop
inc
or
int
and
shll
lods
xor
adc
shrl
xchg
lods
inc
xor
ret
cmp
mov
mov
or
cld
push
divl
lods
repz
xor
mov
test
insb
adc
dec
push
cli
stc
in
ret
lea
push
outsl
sub
call
xor
sbb
les
xchg
icebp
mov
lods
icebp
lahf
stos
push
stc
lahf
addr16
mov
jo
xor
push
inc
add
xor
add
test
xchg
inc
repz
stos
popf
dec
xchg
fadds
dec
mov
in
fisttps
pop
leave
push
ja
outsb
scas
jns
into
mov
inc
sbb
cmpsl
sbb
aad
pop
push
in
inc
xchg
loopne
pop
negl
aas
ljmp
cwtl
sub
cmp
jne
dec
jne
test
mov
xchg
cli
mov
mov
xchg
or
ret
popa
adc
xchg
std
mov
adc
aas
ficomps
scas
mov
or
sti
test
push
and
xchg
lret
imul
adc
call
je
xorl
sbb
aad
mov
fsubrs
fnstsw
jmp
push
daa
push
jg
push
jne
sarb
push
in
push
cmp
xchg
xchg
fidivrl
les
dec
mov
xor
sub
jg
cmp
ret
cmp
and
pop
mov
pop
ds
das
je
imul
jb
mov
jl
cltd
addr16
shrb
loopne
fiadds
ret
cmp
mov
sahf
jmp
loop
sub
imul
daa
or
repnz
xchg
cmpsl
jae
ret
push
sbb
push
pop
inc
sbb
cmp
clc
sbb
mov
cs
fnstcw
jmp
sbb
imul
dec
inc
stos
outsb
popf
mov
cmpsb
pop
sbb
mov
push
xor
pop
stos
pop
mov
inc
loopne
sahf
mov
push
aam
cmp
ss
mov
dec
mov
mov
lods
mov
mov
sbb
sub
loop
xchg
pop
or
sbb
loop
xchg
dec
cwtl
je
repnz
push
movsb
sbb
jecxz
push
subl
sbb
xchg
clc
jae
in
imull
pop
cmp
mov
incb
sbb
out
dec
jmp
jle
sbb
jbe
mov
add
and
lods
and
xlat
in
imul
imul
subl
mov
movsl
fldt
sbb
pop
lea
out
push
xchg
jne
in
icebp
fnstsw
out
sbb
popa
loope
out
pop
lcall
icebp
sub
pusha
test
pop
pop
movl
addl
sbb
movsl
rorb
cmp
aad
dec
aad
push
popf
sbb
arpl
fs
mov
inc
xor
jbe
dec
push
imul
push
pop
cmp
mov
push
inc
pop
in
bound
jp
subb
mov
push
xchg
xor
inc
mul
aas
sub
sub
pusha
mov
andl
clc
mov
jg
leave
cmpsb
inc
stos
sub
jae
push
xor
pop
jle
aam
lcall
sbb
orl
loop
and
cmp
or
jae
divl
push
sbb
xchg
das
dec
pop
insb
into
movsl
mov
cmp
or
mov
xor
inc
add
sub
jl
lret
or
pop
xor
movsb
sahf
mov
sub
jnp
stc
mov
rcrb
add
shll
push
das
mov
insl
andl
insl
clc
cmp
popl
push
test
ret
mov
mov
cmp
gs
out
in
hlt
mov
add
mov
lret
add
mov
jp
test
and
jbe
mov
pop
dec
loope
or
repnz
pusha
ret
test
mov
outsb
mov
cmp
dec
xlat
imul
jnp
jb
adc
rclb
xchg
lcall
mov
stc
jl
xchg
imul
cli
push
mov
fmulp
cmpsb
jo
cwtl
outsl
cmpl
xchg
cmc
jae
mov
jmp
test
incl
dec
in
cmp
in
xchg
add
jns
imul
push
outsb
div
add
popa
add
xor
lret
xor
out
ds
dec
movsl
pop
cmp
mov
ljmp
out
add
xchg
call
push
adc
add
inc
adc
or
mov
sbb
sub
xchg
mov
test
mov
xlat
clc
sub
sbb
or
movsl
out
data16
mov
or
pop
popa
leave
test
iret
lds
adc
stc
ds
mov
dec
pop
fsubrp
fnstsw
bound
dec
xchg
ss
dec
gs
rorl
movb
dec
arpl
xchg
daa
jge
and
or
pusha
jbe
dec
bound
insb
and
ss
push
lock
xorl
mov
jecxz
sbb
sub
pushf
sbb
mov
shl
cmp
push
mov
clc
inc
mov
pop
aas
jae
out
aas
es
out
dec
insl
enter
add
jl
arpl
add
lods
jge
stos
or
lds
dec
xor
pop
mov
cmp
xchg
mul
loop
fsubs
mov
adc
pop
fnstenv
clc
lret
stos
cmpsb
rorl
popf
cmp
cmpsl
cmpb
inc
addr16
mov
xor
jmp
mov
lret
popf
jno
je
dec
ficoml
insl
mov
sub
adc
fidivs
sbbl
mov
fmul
cwtl
aaa
aam
pop
dec
movsb
popf
or
movsb
scas
fsubl
jnp
jo
in
or
push
push
xchg
cltd
daa
ror
xchg
pop
sbb
out
dec
repz
int3
dec
inc
sarl
push
and
push
fisttpl
mov
jns
mov
or
push
pop
cmc
push
push
jmp
cltd
lods
mov
jg
leave
mov
push
es
or
mov
dec
or
pop
inc
mov
sarl
or
push
push
inc
fdivrl
adc
sub
and
jge
pop
mov
mov
nop
or
jmp
imul
mov
addr16
inc
ret
mov
aam
pop
mov
dec
cmp
movsl
leave
push
scas
sub
inc
pop
cmpsb
stos
mov
loop
push
pop
cli
cmp
mov
sub
shll
dec
push
imul
ss
inc
lret
add
sahf
and
sahf
hlt
test
out
xchg
loopne
fwait
scas
jnp
lret
stc
out
je
int3
xorb
dec
xchg
push
sub
imul
mov
pop
dec
sbb
imul
adc
add
xchg
mov
adc
imul
xchg
cmpl
sti
jbe
out
cmc
not
pop
and
int3
inc
rolb
and
popf
inc
test
icebp
clc
jg
fidivrl
mov
call
push
aaa
pop
xchg
adc
icebp
lods
test
add
xchg
pop
xor
xchg
cmp
ret
lahf
fnstenvs
lret
xchg
mov
jmp
fmull
pop
das
adc
mov
movsb
ret
xchg
or
loop
aam
popa
lock
mov
outsb
mov
and
out
lea
mov
mov
shlb
ljmp
aaa
das
mov
jno
rolb
enter
cmp
push
data16
add
in
pop
dec
xchg
push
lds
cmpsl
push
jp
dec
xor
mov
push
lock
add
in
imul
gs
jle
ret
lea
lahf
push
in
inc
fmul
jbe
xor
inc
xor
es
jg
aam
test
bts
movsl
scas
lock
call
lret
adc
mov
sbb
ja
sub
mov
lods
and
mov
push
ror
ja
insb
movsl
addr16
cmc
cmp
test
insl
cld
nop
aas
in
cmp
jne
push
dec
daa
inc
pop
clc
dec
repz
ljmp
dec
inc
sbb
mov
cwtl
xchg
xlat
push
xor
pop
stos
cld
and
and
int3
scas
jp
mov
jge
jbe
push
mov
dec
mov
xor
fldz
aad
gs
dec
and
stos
filds
out
in
xchg
cmp
mov
xor
cmpsl
mov
jge
into
out
divl
mov
mov
sahf
xchg
xchg
enter
mov
pushf
cmp
cs
in
xchg
shll
loope
stos
into
and
dec
das
cmp
out
stc
pop
aad
je
inc
pop
jle
sbb
pop
dec
subb
sarl
mov
cmpsb
pop
movsb
push
jp
lods
jne
clc
outsb
rolb
mov
out
push
mov
push
movsb
mov
movsl
daa
xchg
lcall
fldcw
rcl
jp
xchg
dec
fs
cwtl
imul
pop
into
cmp
mov
adc
out
out
int
inc
in
in
jae
ret
jbe
push
fs
icebp
or
pop
mov
cmp
das
cmp
mov
push
push
push
jne
cmc
les
mov
insb
outsl
fsubrl
mov
or
daa
shl
mov
fcompl
pushf
cmp
aas
mov
mov
loopne
je
clc
sbb
jle
and
xchg
mov
cli
lret
add
inc
inc
jno
mov
push
push
xchg
clc
pop
lds
mov
lcall
aam
jl
pop
bound
loope
mov
hlt
pop
adc
popa
adc
xchg
outsb
nop
mov
stos
cmp
and
sub
or
add
test
push
mov
jae
mov
adc
outsb
xchg
sbb
mov
shr
ret
pop
and
inc
mov
sti
call
loopne
into
add
cli
jle
ds
jnp
jmp
or
xchg
es
adc
scas
add
push
out
roll
xorb
sub
dec
cli
cmp
repnz
repnz
xchg
mov
inc
mov
iret
mov
mov
xchg
les
or
loopne
mov
push
jmp
imul
arpl
add
cmpsl
hlt
xchg
sbb
xor
iret
push
insl
fmull
mov
push
fadds
imul
mov
cmp
movsb
xchg
jge
test
fnstsw
push
ja
jg
adc
mov
mov
ss
inc
sbb
sarl
ja
pushf
lods
test
mov
lea
cmovo
add
push
mov
fcmovne
out
fisttps
stos
mov
fdiv
mov
adc
sarl
lcall
sub
imul
jl
add
cs
sub
or
in
imul
mov
test
mov
mov
aam
inc
mov
xchg
cld
add
push
xchg
data16
mov
sub
cltd
sub
cmp
xor
movsl
xchg
push
out
push
sbb
addb
mov
mov
xchg
xchg
sub
push
jecxz
or
jnp
jns
sbb
adc
jbe
xchg
in
pop
jmp
pushf
xor
xor
sbb
mulb
cmp
sub
mov
push
mov
je
mov
popf
shll
nop
mov
push
pop
sbb
enter
pop
cmp
scas
push
imul
rclb
jge
fisttps
jns
sbb
xlat
je
mov
fistpll
in
test
jns
ja
add
and
pop
into
ljmp
cmc
stc
stc
add
mov
cs
addb
pop
aam
jnp
aad
pushf
push
mov
push
jbe
or
xor
clc
jmp
ror
xchg
xchg
jl
cmp
jmp
lcall
dec
out
dec
aas
xchg
ljmp
fcomi
lahf
add
inc
cmc
outsb
mov
ds
sub
test
inc
nop
ret
mov
bound
push
fld
ljmp
ret
pop
mov
scas
jns
and
hlt
dec
mov
enter
pop
fstpl
movsb
std
movsb
mov
lock
cwtl
test
mov
adc
pop
fsubrl
pop
ljmp
sahf
xor
inc
movsb
arpl
push
arpl
shr
mov
sbb
lods
push
sub
mov
inc
xchg
xlat
cli
mov
inc
inc
dec
add
mov
mov
inc
aas
xor
pop
mov
xor
cmpsb
xor
clc
jge
jb
pop
sbb
push
lret
inc
insb
add
dec
lret
mov
fidivrl
in
notb
out
sbb
popf
loope
lret
movsb
mov
js
pushl
rcrb
scas
sbb
cbtw
jnp
jmp
dec
push
and
mov
cli
aas
cmpsb
pop
adc
sbb
push
cmp
mov
push
add
scas
fcmovu
aas
popf
xchg
scas
cltd
js
stos
popa
xchg
and
lods
loop
scas
test
and
fmuls
sbb
mov
push
mov
shr
stos
pop
lea
adc
sub
mov
stos
test
add
sub
je
adc
push
cmp
jle
scas
lahf
enter
add
push
cmc
pusha
jg
xchg
and
pop
cltd
and
repnz
shrb
sbb
mov
lods
ret
scas
xchg
or
scas
cmp
add
push
lcall
cmp
or
xor
cmp
lea
inc
pop
ror
and
jb
cltd
or
stos
fsubl
xchg
loopne
pop
lret
jg
or
lcall
clc
push
adc
cmp
imul
dec
add
and
inc
test
inc
adc
scas
hlt
cmp
pop
orl
mov
shrl
and
mov
add
inc
push
pop
pop
scas
mov
sub
xchg
adc
fstpl
pop
add
test
add
movsb
aam
sub
ret
sbb
mov
aas
sbb
and
aam
sbb
pop
fsincos
adc
pop
xchg
adc
adc
mov
push
out
dec
mov
rolb
lea
ror
adc
jns
int
loope
mov
movsb
and
cltd
jg
push
inc
scas
lds
outsl
pop
int
add
pop
push
cmpsb
mov
leave
dec
mov
outsb
popa
or
inc
dec
ljmp
cli
shl
mov
into
or
and
clc
jg
mov
cmp
add
push
mov
pusha
jns
adc
push
aaa
jge
mov
sub
imul
int
ficompl
popa
mov
or
mov
jecxz
dec
add
mov
pop
fwait
sbb
shl
jne
cmp
fsubl
and
jmp
add
icebp
ret
test
xor
jge
popa
std
out
insb
cmp
out
mov
test
arpl
cmp
lea
iret
movsl
mov
cmovnp
jns
ficoms
into
add
out
fildll
icebp
shlb
push
hlt
outsl
mov
add
or
mov
cltd
cmpsl
enter
and
cwtl
ds
movsb
xor
inc
inc
sbb
jbe
js
aam
inc
ja
int3
mov
gs
pop
jnp
mov
fcoms
inc
xor
lret
loope
inc
sub
shll
cs
cmpsb
sbb
xchg
jnp
xchg
in
das
popa
pop
in
lds
xchg
jns
das
addl
adc
adc
sbb
mov
cmp
dec
mov
jns
pushf
das
int
les
xorb
inc
cli
push
xchg
movsl
pop
into
ret
jle
loopne
cmc
inc
xchg
mov
loope
pop
sti
dec
das
cwtl
jb
test
and
xchg
cmpsb
pop
mov
dec
or
gs
nop
fwait
mov
pushf
lahf
cmp
adcb
push
push
jnp
pop
mov
scas
js
push
fildll
shrb
jae
sbb
push
or
mov
add
xchg
add
arpl
iret
push
dec
popa
cmp
stos
dec
push
mov
sti
sti
mov
push
inc
cmp
push
ja
dec
lcall
xorl
aad
adc
mov
loope
pop
aad
fidivs
sarl
loop
inc
test
push
insb
inc
xor
dec
jne
add
ss
pusha
jns
mov
mov
xor
sbb
sub
jg
pop
cld
jb
stos
xor
xchg
in
inc
subl
ss
jo
ret
inc
cwtl
jno
xor
push
mov
mov
mov
daa
subb
les
jmp
popf
mov
notb
scas
icebp
mov
lahf
idivl
mov
xor
pop
sbb
stos
pushf
dec
and
inc
or
nop
cmp
cld
jne
movsb
pop
mov
push
xchg
addr16
repz
ret
sbb
sub
pop
idivb
mov
xchg
add
xchg
ret
out
cmp
decb
shlb
pop
and
das
shr
push
inc
pusha
daa
nop
cld
mov
xchg
add
xchg
movsb
loope
jns
test
pop
daa
mov
dec
out
mov
and
in
lock
sbb
test
scas
xchg
adc
sbb
in
aas
add
xchg
stos
movsb
jne
push
jno
pop
xor
int
pop
arpl
fisubrs
jle
out
add
push
aaa
mov
jns
stc
es
inc
xchg
dec
push
scas
add
aas
mov
lods
sub
std
lret
cmc
xchg
jb
jno
sar
shrl
cld
ss
dec
jbe
add
jge
inc
shl
mov
mov
sahf
testl
inc
xchg
out
subl
imul
or
rorl
xchg
dec
jns
mov
hlt
inc
cmp
push
repnz
outsb
shrl
mov
adc
xchg
xchg
sbb
mov
scas
mov
js
insb
dec
fmull
data16
xchg
hlt
cmpsb
gs
mov
outsl
ljmp
push
lock
push
fwait
insb
mov
jp
jecxz
es
pop
mov
or
adc
pop
inc
cmp
sub
push
add
leave
add
xor
mov
sbb
roll
dec
mov
ss
arpl
inc
push
movsl
out
sub
mov
sbb
cltd
pop
xor
rcrl
outsb
mov
mov
mov
repnz
pop
fsubrs
pop
fiaddl
ror
popa
push
lock
inc
and
pop
jecxz
test
sbb
or
push
mov
scas
jb
push
movsb
into
insb
and
mov
jae
lea
push
mov
xchg
pop
incl
xchg
lret
mov
jne
sti
int
sub
pop
call
xorl
mov
fisttps
inc
test
nop
and
mov
loop
mov
push
loopne
cmp
stos
cmp
xchg
inc
cmp
mov
into
adc
mov
es
out
fimull
mov
pop
xchg
add
push
mov
add
test
jp
add
decb
loop
dec
lret
jo
dec
lea
test
fstp
insb
dec
cmp
sbbl
xorb
mov
xor
dec
xchg
flds
loopne
cmp
cmp
inc
movsl
rorl
push
xor
jno
inc
xlat
mov
mov
push
stos
test
imul
lret
pop
sub
push
insb
test
cmp
loope
mov
test
stos
loop
jl
inc
rclb
cmp
push
outsl
fucomi
movsl
cwtl
or
xchg
fdivrl
mov
mov
inc
pop
pop
xorl
mov
jmp
das
pop
lcall
cmp
inc
xor
lods
mov
push
pop
jmp
mov
fistpll
xor
gs
int
fldenv
or
fldl
dec
call
mul
in
les
rorl
insb
jecxz
jp
fwait
mov
xchg
into
imul
pop
movsb
jecxz
mov
mov
mov
push
xchg
cmp
filds
push
ror
xlat
dec
add
je
push
push
cld
in
push
repnz
push
das
ljmp
iret
jmp
sahf
pop
fcoms
es
test
sub
pushf
jnp
xor
add
inc
hlt
push
jge
xchg
insl
shrl
add
cmpl
sbb
shlb
or
or
int3
popa
xor
cmpsl
cmp
fidivs
aam
jns
sub
mov
push
in
leave
cli
jnp
pop
sub
movsl
pop
xor
jae
repz
ss
roll
xor
aaa
cmp
shll
xlat
into
out
adcb
add
inc
adc
mov
mov
add
mov
fstps
clc
test
fdivrs
xchg
inc
fadds
sbb
test
call
adc
add
xchg
stos
cmp
mov
xchg
decb
mov
les
shrl
push
fsts
mov
add
mov
rorl
push
xor
push
in
adc
leave
pop
sbb
sub
imul
add
jge,pt
add
jg
mov
out
ss
nop
rorb
mov
out
sarl
lret
int
out
shl
mov
fisttpl
leave
pop
xor
mov
cli
push
mov
jne
cli
push
ret
push
scas
repz
xor
and
popa
add
imul
inc
mov
jl
sub
mov
push
mov
mov
push
jns
ret
ss
mulb
mov
and
adc
jno
adc
insl
inc
push
stos
decl
int3
je
jmp
jl
cmp
mov
xlat
cmp
mov
add
call
xchg
aaa
popf
test
hlt
inc
jno
sub
stos
lea
call
cwtl
hlt
lret
mov
loope
xchg
lret
xchg
sub
fimull
inc
fwait
aas
xchg
mov
leave
pop
fidivrl
movsl
test
lock
enter
mov
fmull
ss
ret
push
fcoml
in
jno
mov
out
and
sti
sub
or
jmp
subb
push
mov
insb
mov
and
test
test
test
push
mov
in
mov
cli
mov
mov
dec
xlat
push
add
cltd
push
jbe
inc
lea
push
xchg
dec
xchg
enter
inc
mov
outsl
and
jmp
and
add
jb
aaa
in
or
inc
clc
sti
cmp
adc
and
arpl
adc
popf
xor
add
jae
push
hlt
popa
mov
nop
popa
lods
and
dec
xchg
adc
fstps
dec
cmpsb
shll
pop
fisubs
push
pop
icebp
and
fmulp
push
dec
cli
jns
sbb
test
aaa
test
cmc
int
es
push
rcll
mov
sub
ret
jae
xor
ljmp
cmp
xlat
push
jbe
fs
xchg
std
hlt
nop
dec
xchg
stos
add
mov
cmp
ljmp
sub
imul
pop
les
push
js
xchg
or
popa
jge
push
and
inc
icebp
test
cmp
je
outsl
pop
icebp
or
in
imul
mov
cmp
and
push
mov
int3
ljmp
xchg
xchg
xor
jnp
xor
ret
fldt
psubb
nop
jnp
inc
pop
mov
mov
lcall
ret
movsb
xor
ja
dec
inc
in
mov
mov
aas
lret
pop
sbb
xchg
shlb
sub
jns
jge
orl
mov
dec
pop
adc
jge
jae
aam
lret
xchg
pop
and
fdivl
xor
out
sub
sub
inc
jae
or
dec
lret
outsb
pop
inc
out
push
and
mov
adc
cmp
mov
xorb
jmp
fcmovbe
test
addl
scas
or
lea
push
push
jge
scas
call
rcr
push
inc
pop
pop
xor
mov
push
jno
cmpsl
insb
in
shll
jo
in
pop
shll
mov
push
std
ss
fldenv
add
cmp
add
pushf
pop
add
mov
test
aam
imul
xor
imul
lcall
in
sahf
adc
adc
adc
aad
sub
sbb
cld
ss
mov
xchg
rcl
xor
sbbb
lock
jae
arpl
stc
cmpsb
cmp
inc
mov
pop
aas
ljmp
and
xor
aas
lcall
pmaxsw
movsb
mov
in
bound
outsl
std
inc
sahf
xor
test
jg
add
sub
cmp
inc
into
lea
in
out
sub
dec
push
dec
popf
shrb
inc
mov
pop
mov
jo
shrl
xchg
mov
mulps
int
and
pop
mov
push
xchg
nop
push
in
dec
icebp
jbe
scas
dec
add
into
adc
xchg
dec
clc
cs
or
xor
push
mov
rorl
push
sbb
jmp
hlt
aaa
mov
push
push
push
xor
mov
iret
filds
loop
jnp
pop
lds
popa
xor
bound
inc
sub
sub
inc
add
stos
testb
out
fmuls
orb
dec
popf
roll
js
jns
cmpl
push
subl
push
fcomp
sahf
xor
mov
mov
cmp
pop
pop
cmpl
addr16
pop
mov
jne
sub
sbb
inc
js
movsb
ret
test
in
mov
xchg
inc
sbb
add
sub
push
sub
sub
pop
out
mov
lcall
mov
test
add
cmp
xchg
jge
fimull
cmc
stos
xchg
ljmp
sub
mov
ljmp
jl
adc
mov
fs
cs
sbb
jp
pop
mov
mov
cmp
jle
jo
or
xchg
cmpsl
jmp
xlat
xchg
es
mov
xor
xorb
adc
sahf
push
in
inc
loop
loop
mov
push
mov
pop
xchg
fstps
pop
imul
xor
xor
xchg
loope
mov
cmp
sahf
sbb
divl
or
xor
icebp
mov
lret
sub
xor
stos
dec
iret
sti
stos
bound
jecxz
gs
pop
std
imul
or
jg
ror
sbb
sbb
xchg
in
popa
mov
call
add
cmp
imul
sub
icebp
outsb
mov
mov
mov
push
mov
jg
nop
cmpsb
or
cmp
cmpsl
aam
lods
sub
aam
add
sbbl
mov
inc
inc
push
dec
adc
adc
lret
shlb
inc
mov
nop
jge
out
outsl
cmc
ror
dec
or
loop,pt
loop
outsb
xchg
xchg
nop
insl
int
iret
and
test
jnp
fdivrp
scas
std
push
jle
rcll
cmp
and
call
cs
outsb
das
xchg
insb
stos
push
lea
sub
test
pusha
repz
inc
jmp
mov
imul
loop
pop
call
cmp
adc
je
leave
push
dec
les
mov
push
imul
ja
clc
sbbb
or
xor
sbb
mov
imul
cmp
lcall
in
xchg
mov
ret
add
pop
xchg
fstpt
cmp
xchg
dec
xchg
fildl
inc
fwait
sbb
negb
mov
pop
xchg
mov
jp
mov
lret
adc
mov
out
xor
fisttpl
mov
imull
mov
sub
cwtl
cld
sbb
jmp
and
inc
mov
sbb
sub
mov
mov
add
fsubl
mov
orb
les
fs
push
lods
es
mov
push
in
in
or
and
bound
jnp
es
das
outsl
inc
lret
xor
cmp
mov
jp
sbb
jle
cmp
ret
mov
out
jnp
pop
sbb
shr
mov
into
adc
jnp
adc
inc
push
test
imul
ficompl
lds
cmp
and
add
inc
xlat
cmpsb
adc
nop
jne
rolb
xor
adc
adc
xchg
inc
stc
pop
movsl
add
pop
into
xor
test
pop
loop
adc
mov
jno
fxch
jecxz
push
mov
es
testl
jb
ss
sub
inc
dec
or
xchg
pop
in
scas
push
push
and
jecxz
lods
addb
inc
pop
das
xor
scas
lcall
rol
pop
test
and
dec
mov
frndint
xor
xchg
xor
out
ja
fldt
lock
lods
pop
xchg
mov
inc
rorb
push
insl
addr16
ss
sti
mov
mov
xor
push
popf
js
mov
mov
jge
push
pop
ret
cmp
call
and
jae
xchg
cmpxchg
sbb
cmp
xchg
out
and
push
or
aad
cmp
push
out
lahf
mov
adc
jo
stc
jp
out
jbe
jae
mov
frstor
sub
lock
insl
push
xchg
dec
addr16
xor
jmp
xchg
clc
ret
jge
sbb
push
jb,pt
loop
addr16
or
rcr
mov
cwtl
push
jecxz
test
fistpll
push
mov
into
into
lods
sbb
pop
pop
mov
adc
fidivl
je
jle
inc
sub
or
xchg
and
les
daa
xor
std
xchg
lcall
cmp
xchg
decb
dec
jge
popl
int3
xor
fwait
cli
or
pop
sub
imul
push
enter
imul
jnp
or
xlat
cmp
mov
pop
scas
and
mov
dec
scas
fisttps
adc
push
lea
jl
mov
sahf
mov
and
dec
nop
push
pop
mov
sahf
mov
lea
scas
icebp
ret
push
aas
xchg
jae
rorl
sbb
aas
or
lods
imul
mov
dec
repz
add
fwait
sub
xchg
xchg
dec
push
stos
mov
xchg
inc
add
xchg
mov
movsb
iret
mov
xchg
insb
jp
lock
push
loop
mov
bound
lods
rclb
mov
dec
cmp
cwtl
les
movsl
std
mov
xor
push
or
neg
shrb
cmc
sbb
jo
fmul
mov
mov
test
outsb
loopne
dec
addb
fwait
dec
pop
les
sbb
je
loopne
xchg
in
dec
test
push
add
add
mov
inc
sbb
subb
insl
je
mov
inc
or
push
std
xor
daa
push
in
pop
popl
cmp
push
scas
jno
cmp
and
push
insl
mov
decl
xor
add
rorl
xchg
cs
push
jmp
imul
lcall
cmp
ret
popf
and
movsb
adc
push
mov
jg
ret
xchg
pop
jb
test
dec
cmp
jae
rorb
jnp
int3
out
jl
sahf
xor
xchg
cmc
inc
mov
stos
dec
xor
push
or
fs
arpl
xchg
imul
lcall
jl
pop
pop
arpl
mov
cli
and
outsl
fwait
jmp
adc
cld
cmp
pop
aaa
fcompl
cli
lahf
add
cmc
xor
sti
out
jp
lret
lahf
pop
xchg
add
in
jns
je
aam
andl
cmp
mov
clc
lcall
pop
inc
mov
cmpsl
mov
loop
xchg
movsl
loope
shll
pop
in
sbb
out
dec
push
push
int3
fdivs
jl
or
mov
stos
shl
outsb
jnp
xor
ficoml
and
loop
imul
lods
repnz
inc
lea
sub
push
mov
pop
cmpsb
push
jbe
mov
push
addl
dec
add
xchg
or
lret
in
cld
cmc
push
mov
jmp
lret
imul
inc
pop
push
rorl
flds
subl
cli
lahf
push
mov
inc
ret
sub
popf
inc
inc
sti
sub
mov
pop
pusha
mov
or
or
mov
inc
pop
mov
bound
rorb
sti
dec
inc
sti
notb
orl
stos
sub
xchg
jne
add
pop
scas
ret
loope
pop
sub
lahf
xchg
jp
cmpb
mul
lahf
inc
add
aaa
or
cld
scas
adc
hlt
out
mov
adc
mov
movsl
test
mov
mov
and
add
push
out
sbb
cmp
pop
out
inc
xchg
add
enter
rorb
sub
jb
rorb
movl
add
pop
ret
test
inc
sub
js
add
sarl
and
or
sub
xor
sbb
fsubl
push
fwait
repz
jg
in
pop
lret
pushf
shl
and
cmp
bound
lods
push
inc
lods
push
cmpsb
xor
sahf
inc
jno
dec
retw
clc
enter
lcall
inc
ss
pop
std
aam
and
decb
imul
mov
testb
sbb
push
and
pop
cmp
sbb
adc
outsl
popf
repnz
mov
mov
push
mov
rcrb
movsb
cmp
cmp
mov
add
cmp
test
das
fwait
lea
jmp
sbb
lea
add
xchg
js
mov
cmp
cld
cmp
f2xm1
or
insb
dec
cltd
mov
mov
mov
sub
je
orb
xor
cltd
add
pop
sbb
inc
lock
push
mov
cmpsl
lret
rcl
call
dec
mov
pop
int3
push
jmp
fldl
popf
inc
jnp
ficoms
jb
sbb
jo
adc
cmp
sbb
sub
rol
jo
fimuls
hlt
sub
mov
insb
cmp
cmp
mov
xchg
xchg
sub
dec
mov
test
lds
inc
jno
sbb
cs
outsl
mov
pop
jbe
xchg
pop
mov
inc
add
mov
or
cmp
push
mov
dec
sbb
mov
or
sbb
cmp
inc
shrb
nop
scas
dec
jp
test
mov
cmp
push
add
jno
and
pop
fs
in
repz
fbld
xchg
adc
jno
inc
mov
sub
inc
sahf
scas
mov
mov
loopne
jae
movsb
int
mov
out
cmpsb
adc
clc
sub
inc
es
push
mov
aas
imul
mov
jne
push
mov
lcall
jne
leave
cmpb
add
add
mov
cmp
enter
in
mov
xor
incl
jmp
mov
adc
nop
mov
mov
inc
cli
jne
sar
cltd
shll
aas
and
and
addb
dec
divl
addr16
pop
imul
aaa
xor
lea
lcall
mov
dec
cmc
repz
jbe
or
inc
sahf
push
xchg
adc
mov
jecxz
shll
and
repnz
sub
mov
sti
iret
dec
sub
mov
xchg
aad
lret
sub
push
aad
cli
and
popa
jbe
and
cmp
les
or
fisttpll
shrb
ss
in
mov
push
mov
or
shr
incl
add
fidivl
xchg
and
out
cmp
out
leave
or
cmp
cmc
xchg
mov
andl
das
faddl
repnz
add
out
sub
dec
jmp
sbb
xor
iret
push
into
push
mov
addr16
jl
and
and
cwtl
das
pop
inc
push
ss
data16
jbe,pt
add
xchg
lret
adc
int3
inc
leave
dec
dec
icebp
mov
arpl
subl
adc
sti
xor
dec
je
outsb
lods
je
lret
and
add
and
or
and
test
sbb
adc
inc
dec
or
pop
mov
or
xchg
popf
sub
sti
cmp
lods
fisubrs
and
mov
cmpsl
lds
xchg
and
je
ret
adc
rcrl
add
cmp
mov
iret
xor
push
jbe
popa
add
movsl
jmp
mov
xor
dec
mov
add
pop
xchg
mov
jbe
cmp
pop
mov
popa
or
andb
add
imul
sbb
add
adc
arpl
xlat
out
ss
cltd
jo
and
mov
mov
xchg
adc
mov
clc
fisubrs
dec
lock
or
push
clc
outsb
rcll
popa
aad
sub
out
dec
pop
and
cmp
data16
cmp
lcall
and
bound
lahf
iret
out
pop
jg
xchg
insb
in
fcompl
add
nop
rcr
sahf
js
nop
sub
shll
in
ljmp
cmp
rol
inc
iret
call
inc
aaa
jnp
pop
ss
xchg
push
xlat
pop
fistpl
out
repz
popf
dec
jmp
or
fistpll
cmp
dec
ret
xor
lds
push
ljmp
xlat
push
cmp
push
and
xor
jle
nop
out
mov
push
jl
xorb
inc
icebp
imul
adc
iret
inc
into
ret
sub
mov
jns
push
orb
and
xlat
push
dec
mov
dec
cltd
fsubs
and
test
int3
dec
mov
and
outsb
jne
pop
xlat
mov
adc
jno
xor
cmp
cmp
sub
repz
or
or
xor
enter
and
mov
daa
dec
mov
daa
fdiv
loop
jno
jg
fwait
push
xor
and
daa
int
repnz
inc
dec
int
ds
push
mov
or
fs
iret
add
mov
xor
or
jno
mov
pop
inc
adc
je
sbb
dec
je
out
imul
pushf
movsb
mov
fstpl
cld
dec
lret
mov
mov
mov
mov
negb
and
decl
add
fimuls
push
xchg
mov
insl
inc
out
add
insb
pushf
push
das
insb
jmp
mov
push
dec
lods
dec
inc
leave
mov
push
pop
inc
add
in
mov
cmp
adc
ds
in
subl
xlat
loop
ror
in
out
pop
pop
in
ss
hlt
adc
mov
push
jae
mov
les
mull
mov
fldenv
daa
je
pop
cmp
in
ja,pn
mov
sbb
adc
push
cmp
shll
shll
mov
xlat
and
pushl
sarb
test
aas
imul
sbb
lods
mov
mov
js
stos
lds
sbb
add
pop
mov
xor
push
cmp
xchg
mov
cmp
xchg
jno
leave
lea
cmp
aam
sub
or
je,pn
push
jecxz
daa
popf
pop
jne
inc
fstl
cmp
pop
push
iret
mov
mov
mov
popa
sbb
push
loope
rcrl
and
add
jno
jg
jbe
mov
sbb
shll
mov
cli
mov
jecxz
out
sarb
pop
out
add
xor
adc
sarl
sar
rcrb
cmp
in
andl
add
imul
ss
adc
lock
sbb
jecxz
repz
push
cmp
jge
scas
loopw
call
nop
aaa
xor
jecxz
add
mov
push
xchg
test
scas
scas
add
shrl
xor
add
push
xor
sbb
ret
jle
outsl
mov
sbb
das
lret
pop
push
and
add
test
push
push
mov
arpl
mov
jmp
cmp
sub
sbb
cmpb
rcll
sub
push
out
test
outsb
push
jno
das
sbbb
adc
lcall
sub
pop
and
ljmp
nop
xchg
addr16
sbb
mov
adc
xchg
xor
cmp
adc
xlat
and
push
test
outsb
pop
cmp
dec
push
es
and
aad
inc
call
push
hlt
sbb
adc
mov
cmpsb
push
jae
mov
and
clc
mov
cmpsb
lock
test
ret
lods
rolb
push
or
adc
and
push
and
inc
add
into
mov
xor
inc
es
xchg
aad
imul
frstor
addb
negb
std
aad
jno
xchg
mov
out
xor
das
jge
subl
push
xchg
or
mov
push
sub
dec
mov
inc
jo
mov
imul
xor
jmp
mov
add
push
outsl
mov
dec
sub
jle
ficoml
aaa
scas
cmpsb
xchg
jmp
xchg
or
cltd
xchg
pop
add
stc
clc
mov
add
bound
popf
aam
ret
cmp
cs
sbb
icebp
push
lods
xchg
int
xchg
mov
test
cmp
in
dec
in
inc
rclb
jns
cli
cmpb
xchg
aad
insl
dec
rorl
in
decb
cwtl
mov
stos
test
xchg
adcl
pop
sbb
popa
lock
and
int
shr
cmp
lret
shl
je
mov
cwtl
cmpsl
call
bound
mov
dec
fbstp
imul
jl
movl
imul
pop
out
das
fwait
jbe
mov
xchg
fcmovnbe
in
jge
mov
outsl
inc
lods
enter
mov
jge
lahf
fnstcw
in
jae
out
or
shl
mov
inc
push
jbe
imul
xchg
xchg
push
popa
dec
push
shlb
push
mov
sub
push
pop
sub
popa
dec
mov
push
mov
dec
in
aaa
daa
aas
mov
dec
punpckhbw
movsb
jb
jne
ret
test
xor
fsubrs
xlat
push
fbstp
cmp
lods
in
cld
loope
jne
or
fs
mov
loope
nop
jge
sub
xorb
or
aam
jnp
dec
fiadds
xor
rclb
int
adc
repnz
loope
push
jbe
jne
in
sub
push
cmpsl
sti
sbb
sub
jnp
push
push
cmp
cltd
rcrb
dec
jnp
sbb
lea
dec
add
fistpll
lods
sbb
jae
xor
cmp
add
mov
jg
movsb
add
xchg
add
pusha
dec
mov
mov
shrb
cli
and
daa
adc
cs
jo
imul
cld
jnp
mov
cmp
or
ficomps
pop
es
ret
decl
cs
jbe
dec
and
icebp
stos
imul
leave
bound
or
aas
movsb
fmull
mov
pop
packuswb
mov
xor
jne
ja
push
sbb
dec
loopne
inc
adc
das
mov
clc
mov
add
fimull
lock
lret
ret
arpl
xor
pop
ljmp
sub
andl
push
jle
cltd
inc
in
cmp
sub
rcrb
mov
ss
pushf
sbb
adc
adc
and
test
mov
stos
or
mov
sbb
sub
add
call
pop
cmp
or
inc
add
es
aad
cli
sbb
and
jb
test
aam
ret
or
cmpsb
das
daa
insb
sub
popa
xchg
xchg
add
andb
cmp
jg
insl
inc
rep
xorl
xchg
push
pop
ficoml
or
into
jo
sahf
mov
sub
cmp
lea
jo
rolb
sbb
xchg
mov
mov
enter
sti
sub
and
lea
sub
jo
sub
mov
mov
pop
call
jle
or
aaa
mov
subb
out
js
or
loope
push
lock
dec
cmc
das
out
mov
jae
cmp
add
div
je
xor
jbe
pop
and
xorl
popa
xchg
inc
pushw
loop
cmp
pop
rorb
in
nop
cmpsl
lea
mov
cmp
inc
lahf
or
loop
arpl
push
sub
addr16
jmp
or
repz
aam
incb
sub
call
inc
xchg
insb
sbb
sbb
cwtl
push
out
sbb
cs
and
call
lret
push
sbb
xchg
sub
out
dec
mov
dec
push
shrl
sub
call
loopne
mov
iret
mov
add
std
lds
mov
shll
fisubs
ret
in
cmp
ret
pusha
sub
and
popa
jge
fildll
enter
insl
xchg
mov
cmp
les
cmpl
cltd
sub
in
js
and
adc
or
aad
loop
addr16
and
cmp
push
rorb
loopne
dec
sahf
mov
add
ljmp
sub
adc
daa
adcb
sahf
adc
add
lods
out
cli
aad
dec
add
idivb
sbb
pop
enter
clc
inc
mov
push
pusha
testl
sub
fsubl
test
add
push
fsubl
or
lds
sbb
jmp
fisttpll
iret
lods
in
or
sub
mov
push
push
loope
fbstp
outsl
ret
xchg
fcoms
sub
sbb
imull
add
adc
inc
or
out
das
xor
jnp
jmp
ds
ds
lock
mov
adc
mov
sbb
addb
push
ja
imul
js
rolb
pop
outsl
sub
sub
xor
scas
in
dec
lret
cwtl
push
fcmovnu
test
iret
pop
orb
imul
inc
shll
xchg
mov
fucom
in
scas
add
pop
and
shrb
pop
cmp
addr16
outsb
mov
test
fcom
sti
adc
js
lock
xor
jecxz
cmp
mov
test
mov
jge
lods
lods
push
sbbl
dec
pop
push
adc
mov
clc
cld
push
testb
pop
dec
movsl
push
adcl
push
xchg
add
mov
repz
mov
mov
or
ljmp
repnz
rcll
xchg
loopne
mov
in
sbb
jecxz
iret
and
sbb
gs
jns
or
jl
movsb
aaa
jle
stos
or
cmpsb
enter
inc
lds
push
adc
lcall
scas
cltd
xor
mov
sub
scas
lods
out
lret
or
or
ret
add
push
gs
test
mov
and
into
push
outsb
mov
shlb
daa
popf
inc
pop
movsl
jno
xor
es
inc
ljmp
dec
scas
fsubs
xor
mov
shrl
repnz
mov
dec
gs
scas
push
dec
xor
pop
or
ja
pop
sarl
xchg
mov
mov
xchg
push
sub
out
fbstp
cmp
mov
mov
popf
add
sbb
popa
sbbb
je
inc
adc
stc
in
inc
out
add
jo
popa
movsb
jle
mov
cmp
ret
lock
rorl
dec
jns
mov
in
pop
mov
mov
dec
sub
xchg
jnp
xchg
stos
xchg
lods
rolb
shrl
push
icebp
xor
pop
dec
cwtl
cmpsb
mov
inc
lods
leave
mov
fwait
pop
stos
cmc
mov
cwtl
jl
les
dec
jne
fldl
mov
lret
inc
movsb
add
inc
adc
push
sbb
sarb
jecxz
xor
xor
mov
popa
xchg
mov
std
decb
nop
push
inc
cmpsb
aam
inc
loopne
shl
cmpsl
mov
or
hlt
sub
mov
roll
inc
pop
orb
jmp
xchg
jae
aas
jecxz
add
int3
repz
jo
pop
dec
cmc
fdivrs
stos
pop
aaa
bound
outsl
out
incl
inc
mov
sub
pop
add
sbb
test
sbb
sbb
jge
in
mov
xor
cmc
dec
sub
mov
jmp
mov
jge
notl
and
aas
bound
dec
in
mov
lret
mov
sub
arpl
insb
pushf
outsl
jecxz
xchg
sub
pop
pop
and
and
out
lret
ss
sar
adc
testl
xchg
sbb
pop
pop
cmp
dec
mov
or
leave
ret
cli
push
add
movb
xor
shll
scas
nop
sbb
in
orb
aad
adc
pop
adc
push
sub
dec
adc
add
inc
test
xchg
pop
ds
pop
mov
push
in
daa
xadd
fisubl
pop
mov
das
xchg
sub
rcrl
jge
call
mov
dec
std
cmp
dec
imul
mov
pop
jp
out
int
xchg
mov
ret
outsb
mov
pop
jl
sbb
fadd
add
cmp
sbb
negb
fwait
xor
clc
sub
cmp
xchg
sti
jnp
dec
push
lcall
sbb
xor
movsl
jbe
test
jae
xchg
sahf
add
adc
sbb
test
mov
pop
cmp
inc
sbb
enter
lea
sbb
push
xor
xchg
test
mov
pop
frstor
mov
ljmp
fwait
mov
sub
or
int
xchg
inc
lods
cmp
dec
jae
xor
loopne
pop
xchg
mov
jns
loop
mov
pop
dec
adc
pop
pusha
pushf
sbb
addb
cmp
pop
imul
fmuls
push
mov
inc
nop
sbb
or
movsb
sbb
add
xchg
cmp
jp
pop
iret
mov
mov
ret
mov
pop
add
icebp
in
gs
loopne
stc
mov
in
std
fisubrs
sbb
sbb
lods
push
shlb
outsl
insb
adc
xor
nop
mov
xchg
and
pop
test
pusha
dec
out
sahf
cld
adc
sahf
and
in
fisttpll
repz
stos
movb
cmpsl
stos
xchg
push
adc
call
dec
out
bound
andl
lahf
addr16
hlt
xor
mov
push
mov
push
add
mov
cmpsb
imul
add
jl
push
mov
flds
dec
mov
mov
pop
rorl
mov
sub
jp
lods
jb
insb
aam
adc
sub
out
rorb
mov
mov
fldl
fidivs
out
push
xor
sub
cmp
mov
hlt
push
nop
mov
push
enter
lea
scas
and
loop
pop
xchg
inc
lret
addr16
bound
fwait
mov
jg
dec
cltd
pusha
lcall
leave
cmp
lock
call
mov
cmp
imulb
mov
sahf
add
mov
and
in
out
add
in
cli
jbe
test
rorl
out
jge
xlat
sbb
aaa
clc
ds
scas
mov
xchg
xchg
push
bound
push
test
sbb
and
in
int
bound
cs
sbb
rcr
xor
mov
pop
jge
mov
loop
mov
into
add
cmp
nop
imul
loop
imul
push
mov
hlt
pop
subb
jmp
mov
adc
adc
cmp
sarl
and
movsl
lcall
scas
xchg
clc
scas
sbb
les
xor
xchg
xor
in
scas
xor
or
je
out
aaa
mov
pop
cmp
mov
mov
fwait
jb,pt
les
cmp
fcoms
dec
das
add
in
out
ja
jge
rcr
or
dec
mov
sub
aad
ficomps
fldz
shl
inc
xchg
shrb
sub
xchg
jbe
gs
sub
or
push
pop
jns
scas
cmp
lcall
insl
fimull
addr16
jle
xor
addr16
cvtps2pd
adc
pusha
outsl
dec
dec
mov
int
sar
cmp
fcomp
sbb
lret
cmp
jle
aam
xchg
pop
xchg
mov
fcomps
ja
arpl
loopne
shrl
pop
inc
iret
test
xchg
call
or
xor
lea
dec
clc
sub
popf
mov
xchg
push
std
push
inc
or
xchg
ja
and
inc
jae
aam
or
fsub
cmp
push
fistpll
imul
pop
movsl
ljmp
push
sti
popf
es
inc
mov
out
ds
push
fidivrs
push
adc
lds
pop
in
sbb
stc
xchg
mov
mov
push
fsubr
lcall
push
or
lahf
jae
je
mov
or
orl
jb
sahf
pop
xchg
dec
add
stos
and
je
cmpsb
iret
sbb
pop
mov
or
inc
pop
pop
arpl
xchg
scas
push
out
mov
jno
mov
dec
fisttps
xor
filds
daa
push
subb
pop
sahf
andl
pusha
cmp
les
das
insl
mov
cld
dec
xchg
testl
xchg
pop
icebp
pop
jnp
stc
add
outsl
mov
mov
push
test
mov
push
ljmp
push
lret
ds
cmp
adc
xor
inc
ss
add
repnz
test
cltd
pop
or
mov
cmpsb
jbe
aas
icebp
in
push
adcb
jmp
pop
xorb
and
sti
push
dec
xor
mov
lret
xchg
or
lds
aam
in
push
dec
inc
sahf
inc
gs
inc
xchg
pop
mov
mov
aad
aam
sbb
es
cltd
or
ret
lcall
sbb
dec
xchg
xor
nop
sti
fmull
cli
and
cli
inc
xchg
pop
push
pusha
add
mov
xchg
shrl
mov
outsl
popa
or
jnp
aaa
hlt
pop
int3
aad
sar
cmp
sbb
push
dec
pop
jle
mov
ret
mov
int
mov
xchg
popf
gs
rcr
add
repnz
xorb
pop
inc
and
pop
subb
xor
mov
lahf
andb
pop
inc
pop
jno
adc
xor
push
pushf
sbb
sub
pop
std
pop
rolb
jb
jo
xchg
jbe
mov
mov
pop
xchg
lahf
aas
mov
fs
mov
xor
xor
iret
mov
repnz
jmp
sarl
push
and
lret
push
jnp
push
sub
nop
mov
repz
inc
cltd
in
add
jo
insl
adc
dec
sti
push
imul
lds
test
pop
dec
sbb
lea
adc
sub
enter
sbb
bound
mov
lods
mov
push
cmp
outsb
fnstenv
in
pop
ss
addr16
mov
sub
sbb
inc
sarb
pop
xchg
lds
cwtl
mov
pop
repnz
dec
jbe
and
mov
ret
scas
add
and
sahf
push
xchg
cmp
das
add
popf
or
cmp
ds
pop
push
mov
js
popl
ds
sahf
adc
pop
gs
cmp
aaa
lods
das
insb
lahf
jo
sbb
adc
mov
popa
aad
hlt
sbb
and
rolb
outsb
stos
add
nop
pop
gs
insb
es
das
aad
ret
fdivrl
imul
fldl
push
dec
daa
pop
sbb
cmpb
jo
sub
sbb
mov
test
test
sbb
sbb
ljmp
psllw
movsl
imulb
cmp
push
mov
lret
push
and
pop
jae
inc
add
int
and
jecxz
mov
jp
sbb
inc
cwtl
jle
xchg
movsb
xlat
jnp
fimull
pop
mov
jl
inc
addb
add
cmp
dec
je
xchg
aam
in
movsl
aas
imul
js
orb
scas
lods
or
and
mov
popa
push
sbb
inc
mov
mov
cmpsb
jnp
test
bound
fstpt
mov
jne
mov
ljmp
insl
and
xchg
in
inc
js
test
test
sub
daa
aad
fisttpl
lret
data16
pop
pop
aad
adc
adc
sbb
int
inc
mov
add
jecxz
mov
or
cmp
dec
lret
xchg
cltd
push
sbb
push
lret
push
xchg
dec
lret
or
or
jno
add
add
mov
test
ret
les
call
sbb
lcall
inc
icebp
arpl
jo
testb
mov
cmp
cltd
and
ret
pop
dec
or
xor
or
push
adcl
aad
test
test
scas
fimull
push
imul
bt
xor
or
aaa
inc
flds
add
xchg
das
add
push
xor
sarl
daa
pop
push
pop
xchg
shl
jb
aam
jo
ds
cmp
test
in
or
mov
inc
and
adc
pop
shlb
test
lret
push
fcoml
xor
push
jge
js
adc
testl
sub
or
pop
in
pop
fbld
aam
cmp
jbe
rcrb
lods
add
rcl
fdiv
ret
sbbl
pop
ret
aas
mov
repz
sub
and
shll
lods
pop
pop
es
jge
cli
loope
and
fildll
ret
test
xchg
cld
fisubrs
out
insl
daa
lcall
xor
cmp
cmp
add
mov
repz
inc
push
adc
push
xor
dec
push
leave
in
scas
mov
jne
add
add
mov
sbb
add
cs
lods
xchg
mov
mov
dec
in
test
or
sbb
sbb
mov
stos
hlt
int
lahf
lds
mov
leave
lds
mov
adc
loope
dec
out
nop
pusha
pop
xchg
mov
hlt
insl
lret
clc
pushf
sar
std
pop
xchg
es
pop
dec
lret
inc
dec
pop
lret
mov
shl
or
cmp
cmp
icebp
pop
or
cmp
jb
imull
mov
icebp
clc
hlt
test
mov
test
sub
cli
idivl
jnp
rolb
dec
je
scas
push
add
cwtl
call
les
addb
xchg
inc
sub
or
imul
push
fistpl
sarl
pop
scas
xchg
push
cli
stos
aaa
sbb
rorl
adc
shrb
mov
adc
leave
add
or
cmp
mov
cltd
aaa
cmpsl
fisubrl
pop
inc
sub
xchg
jp
pop
inc
adc
sbb
jbe
sbb
sub
jle
rcrb
je
add
and
or
push
sbb
andl
jns
dec
test
and
xchg
mov
sbb
sbb
xor
out
cld
cmpsl
shrl
popf
scas
xchg
dec
mov
jne
push
lock
std
mov
and
sahf
pop
pusha
leave
ret
mov
inc
hlt
jne
jo
adc
out
int
leave
popf
push
cwtl
push
cltd
dec
sbb
hlt
cmp
pop
mov
push
cmp
aad
add
orb
inc
jne
mov
push
inc
adc
rolb
scas
scas
in
ds
inc
popl
pop
mov
daa
cmp
repnz
ficomps
mov
stc
pop
mov
pop
popa
push
and
sub
out
jnp
sub
test
sti
clc
jmp
repnz
outsb
je
das
push
fwait
jne
negl
add
out
and
cmc
fldenv
inc
sbb
out
jae
mov
lds
cmp
lret
inc
mov
dec
adc
hlt
add
push
lods
pop
mov
xchg
das
outsl
outsb
pop
mov
mov
sub
mov
mov
jle
sahf
sahf
ret
ficoml
dec
mov
into
out
pcmpgtw
loopne
push
push
scas
or
add
ljmp
dec
cmpsl
xor
lret
adc
ret
pop
cltd
fstps
das
icebp
sbb
or
sti
mov
int3
add
js
add
mov
mov
dec
push
dec
pop
repnz
dec
fildl
nop
mov
add
in
daa
inc
jl
xor
dec
in
imul
or
push
pop
jp
pushf
lea
cmpsb
push
nop
dec
shl
ljmp
push
mov
adc
xchg
shlb
testb
fbstp
rorl
lahf
xacquire
aaa
rcrl
add
subl
sub
shll
jl
mov
xchg
cli
pop
mov
pop
out
loopne
sbb
push
cmpsl
add
cmpsb
rcll
loop
std
or
mov
mov
subb
or
cli
mov
mov
in
mov
sbb
mov
fistpll
rorl
add
push
xchg
fistps
into
cs
ret
fmulp
leave
xchg
rcrl
pushf
cmc
or
push
ljmp
outsl
or
test
lcall
push
dec
adc
pop
sub
add
loop
cmp
push
adc
adc
push
sbb
or
sub
subb
cltd
testb
jo
lds
push
cmpsb
call
ljmp
sub
mov
stos
test
pushf
xchg
leave
jae
jbe
dec
incl
outsl
insb
nop
cmp
hlt
cmpsb
pop
jmp
test
icebp
xchg
lock
jnp
call
icebp
and
aaa
add
mov
push
fnsave
xchg
ss
adc
adc
xchg
xchg
call
or
ret
pop
ret
xacquire
mov
adc
and
je
push
cmpsl
jae
lahf
xchg
repnz
xchg
mov
test
dec
mov
pop
sub
test
pop
jp
push
int3
rcll
andl
std
stos
jmp
movsb
pushf
lea
and
popf
into
outsl
scas
mov
pop
into
mov
pop
or
or
imul
lods
ret
stos
les
mov
inc
pop
outsl
mov
jle
dec
mov
xchg
xor
repz
and
loopne
mov
mov
sbb
lret
and
daa
mov
dec
sahf
jnp
js
cmp
xchg
test
ret
inc
jge
mov
xlat
and
mov
sbb
lret
inc
and
jno
bound
inc
and
and
or
sub
cmp
jnp
inc
inc
cmp
insb
pop
test
test
frstor
mov
push
mov
mov
call
jecxz
or
fisttps
std
not
mov
sbb
mov
push
mov
cmc
push
rcrb
mov
jge
push
sub
push
rcrb
add
xor
std
enter
xor
add
cmp
subl
jge
adc
cmp
adc
cmp
mov
lds
xor
xor
mov
icebp
les
rclb
dec
cmp
pop
xchg
lock
mov
cmp
sub
ret
dec
pop
int
ret
xchg
std
scas
andb
shr
jne
or
leave
mov
pop
mov
in
add
push
inc
cmp
idivb
mov
sub
inc
mov
test
fnsave
and
out
pop
out
mov
lds
xchg
aam
das
aaa
jo
or
enter
or
jns
dec
pop
push
inc
ss
scas
jae
mov
pop
xor
mov
push
pop
push
movsb
jns
ds
mov
jp
stos
ficomps
outsl
ljmp
sarb
sti
inc
arpl
jmp
adc
or
add
push
mov
cmp
push
aaa
jp
add
imul
in
mov
daa
mov
adc
jl
push
push
and
and
and
mov
pop
xor
jmp
sbb
inc
nop
sbb
fstpl
mov
lods
lret
add
test
pusha
pop
hlt
cmp
icebp
or
push
insw
dec
cmp
inc
dec
mov
sub
add
notl
jl
insl
jae
in
dec
out
imul
inc
mov
sub
rolb
lret
mov
in
loop
ja
cmp
ret
ss
mov
and
mov
mov
xchg
xchg
or
stc
stos
and
jno
mov
and
jle
fdivrl
les
sub
lahf
lods
jnp
jecxz
arpl
adc
push
ja
mov
imul
dec
sbbl
and
cwtl
in
inc
and
jae
insb
aas
dec
and
sbb
rorb
jne
cmc
lods
sarb
pop
sbbb
cli
xchg
aad
sub
aaa
test
push
jne
movsb
adc
dec
adc
testl
pop
inc
jne
jge
ss
arpl
xor
lods
aaa
pop
push
sbb
sub
mov
xor
pop
shll
call
ret
mov
adc
cmp
int3
mov
and
cmpsb
jg
ret
mov
xchg
jg
xor
bswap
sti
insb
dec
push
add
mov
xchg
sbb
or
inc
andl
outsl
mov
stos
or
aaa
movsl
jle
cli
xchg
sbb
xchg
iret
stos
sbb
sub
xchg
push
lret
and
std
aam
xor
ja
dec
sbb
pushf
out
gs
shrl
push
test
mov
ror
data16
fnstcw
pusha
mov
push
fcmovne
sub
cmp
sbb
lods
inc
lea
dec
mov
xor
lea
orb
test
mov
lea
outsl
xchg
cmp
scas
mov
test
sub
lea
enter
inc
emms
js
jno
pop
les
in
push
jo
in
cmp
in
lods
push
fdivrl
xchg
or
ret
or
arpl
mov
cli
ret
mov
loopne
adc
mov
and
jle
clc
popl
sub
fs
mov
add
sarl
push
adc
in
sub
xor
ret
mov
xchg
or
fimull
push
pop
data16
adc
push
cmp
sbb
inc
xor
dec
shr
mov
iret
push
in
pop
pop
insl
dec
cmpsl
xor
mov
in
or
mov
inc
test
aad
add
and
adc
sbb
aam
push
test
je
mov
inc
cmp
push
aaa
and
movsl
out
fdivrl
hlt
dec
mov
movsl
out
inc
cmp
and
push
adc
repnz
cmp
rcrb
leave
repz
mov
cltd
adc
mov
nop
xor
into
sub
gs
data16
xchg
dec
outsl
add
shll
inc
inc
mov
imul
cmp
out
sbb
fs
icebp
adc
push
jle
lret
sti
loopne
jnp
jmp
xchg
les
mov
xchg
xor
lahf
cmpsb
into
jmp
mov
cltd
sub
cmp
or
mov
mov
push
adc
add
xchg
fisubs
inc
fcoml
push
xchg
ljmp
xchg
rorl
shll
das
or
lds
jecxz
orb
aad
decl
mov
sub
mov
outsb
mov
scas
cmp
mov
out
sub
test
mov
mov
sub
orl
fidivrl
je
fs
cmp
sbb
shll
inc
push
idivb
pop
movsl
lods
adc
test
or
jl
xor
clc
mov
cmp
dec
cs
scas
add
lods
lret
cmp
push
xor
pop
test
lock
outsl
sbb
in
jle
fimull
mov
daa
dec
outsb
sti
iret
push
push
stos
fadds
out
jbe
sbb
push
ss
int3
xor
sbb
test
addr16
dec
out
in
inc
arpl
push
fwait
jne
movsb
out
mov
jp
mov
in
addb
mov
jb
jbe
adc
and
stc
jl
mov
pop
gs
adc
and
push
mov
push
cmp
xrelease
and
inc
fldt
push
std
ret
fiaddl
pop
lods
sub
ds
lods
add
pop
sarl
lahf
test
std
xor
push
loop
mov
sahf
mov
mov
or
lret
add
and
or
fnstsw
cmp
aad
adc
js
push
clc
ror
mov
jno
out
dec
sbb
in
mov
inc
sub
mov
cmpb
sbb
loopne
inc
jnp
inc
adc
stos
arpl
pop
js,pt
and
add
and
jmp
out
js
push
jp
xchg
fsubrl
sub
test
std
cs
dec
out
stc
inc
out
fstpt
and
add
sub
daa
loopne
das
jbe
add
movsb
mov
fwait
jge
hlt
aaa
movsl
into
movsl
lahf
arpl
vaesdec
sbb
fcmovb
jno
out
ret
clc
jo
fucomi
or
cmp
aaa
jne
jnp
daa
sub
andb
lret
stos
add
repz
dec
in
jecxz
cmp
push
out
jns
loopne
mov
rorl
push
outsl
mov
xor
pop
lea
mov
iret
jmp
adc
popa
dec
lods
inc
test
push
call
pusha
loop
fsubs
jo
dec
push
xchg
fists
rolb
pop
fwait
jp
push
fimuls
mov
sbb
adc
push
stos
pop
cmp
xorl
pop
outsl
pop
mov
and
mov
mov
push
dec
push
xlat
mov
cmp
lds
jbe
sbb
dec
sbb
mov
cwtl
jg
xchg
mov
aam
mov
mov
pop
xor
sbb
jl
ljmp
addr16
or
in
xor
loopne
test
xor
dec
add
sub
cmp
pop
loop
lret
jno
cmpsb
orl
insl
mov
cmp
pop
inc
test
movsb
sub
scas
xor
sub
aam
cmp
push
syscall
mov
fldt
sbb
inc
cli
xchg
data16
jl
inc
jb
cmp
push
adc
push
cmpsb
jg
iret
inc
add
sbb
fs
jno
gs
fnstcw
sbb
cmp
jae
cmp
invd
xor
mov
clc
imul
dec
hlt
push
fs
dec
hlt
cmp
xchg
sarb
push
dec
adc
ds
movsb
mov
mov
scas
adc
lea
xor
lret
pop
cltd
or
aam
pop
push
push
cmp
push
mov
out
jae
mov
das
jae
mov
mov
sbb
add
notl
fists
jne
inc
testl
xor
out
xorb
xchg
scas
sub
adcl
adc
insb
xchg
lret
inc
enter
scas
mov
jae
popf
inc
in
mov
aad
lods
add
je
fchs
aaa
jmp
mov
push
ds
sbb
mov
add
in
stos
cmp
enter
mov
sub
loopne
nop
int
scas
mov
sub
mov
into
inc
jg
subl
inc
add
je
out
aam
mov
in
jp
sub
fwait
incb
aas
imul
xorl
mov
nop
push
push
xchg
push
sbbb
dec
xchg
mov
or
mov
mov
jmp
xor
stos
insb
sarl
rorl
adc
jecxz
pusha
lods
mov
dec
jbe
std
lds
scas
mov
jne
inc
mov
mov
ds
cs
sbb
mov
jecxz
add
jg
sahf
pop
rep
cld
push
dec
rorb
scas
or
inc
cmpsb
das
pop
push
mov
bound
test
mov
ljmp
push
cmpsb
push
addb
push
and
in
and
mov
lahf
cmp
int
mov
ljmp
pop
mov
aas
mov
stc
into
fwait
mov
add
rclb
push
cmp
jecxz
movsl
gs
adc
in
mov
aam
aas
jecxz
sub
adc
pop
lods
jmp
jae
cwtl
and
cmc
cld
xchg
loop
jecxz
out
xchg
fistpll
xchg
push
inc
dec
jno
push
mov
sub
sub
pop
rcl
fadd
mov
sub
pushf
lcall
xor
push
push
movsb
jmp
push
fs
xlat
adc
xchg
cltd
sbb
mov
jecxz
or
pop
fstl
push
loop
int
aam
aad
hlt
inc
fnclex
ss
mov
dec
mov
js
adc
pop
cld
stos
test
jp
mov
mov
jle
idivl
aas
orb
xor
adc
sub
xchg
push
push
dec
dec
inc
mov
mov
mov
inc
loope
push
repnz
add
insl
iret
push
sbbl
and
movl
bound
pop
pop
in
pop
shrb
scas
nop
inc
pop
lea
shlb
je
imul
outsb
pop
push
in
jle
or
in
shr
in
mov
pushf
shll
push
jp
add
outsb
sbb
jmp
adc
repz
bnd
lahf
jge
xchg
cmpsl
jl
sub
dec
nop
arpl
mov
outsb
mov
adc
inc
jp
or
xchg
test
mov
mov
inc
push
aas
jnp
push
orb
test
idivb
ret
int3
out
mov
ret
jecxz
sub
xchg
fs
jae
mov
pushf
lret
sub
icebp
je
mov
loope
cmpsl
das
jne
stos
fwait
mov
lea
push
mov
jo
xchg
mov
cmp
int
sbb
xor
pushf
cmc
imul
sub
pop
xor
call
in
sub
pop
sahf
andl
xchg
xchg
sbb
movsl
cmpsl
jo
stc
out
cmovae
movsl
add
sbb
or
jnp
addr16
xor
mov
insb
icebp
out
xchg
mov
xor
add
adc
inc
pushf
scas
mov
xlat
imulb
int3
test
shlw
cli
rcr
in
or
cmp
fwait
adc
sub
or
dec
jp
cli
repnz
int3
jnp
push
repnz
mov
jnp
rolb
frstor
mov
sbb
xchg
in
rclw
pop
ret
out
sbb
fdivrs
push
je
out
cli
xor
or
cs
jp
fmul
in
mul
dec
int3
xchg
mov
dec
dec
xchg
rorl
cmp
imul
pusha
int
cld
aad
gs
fdivrl
push
jmp
cmp
mov
cmpsl
ficompl
push
xchg
imulb
sbb
lret
and
and
pusha
sbb
fldcw
andl
sub
call
stos
push
cli
add
sbb
mov
jns
adc
ljmp
cli
std
ficoms
out
insl
xchg
jae
lcall
stc
push
dec
sub
or
pop
sub
jne
data16
mov
test
pop
xchg
divl
and
add
and
mov
sbb
jmp
push
adc
jne
sbb
scas
int
cltd
dec
mov
sbb
pop
adc
fadd
std
sbb
je
push
cmp
bound
addr16
jp
aad
xor
mov
in
xor
mov
dec
lock
movsb
shlb
mov
repz
pop
les
lock
jge
mov
pop
enter
ja
imul
movsb
fldt
in
inc
cmp
pusha
insl
sbb
mov
pop
xchg
cmpsb
or
dec
jg
sbb
inc
mov
loopne
pushf
cmp
push
fldcw
sub
xor
mov
out
rorl
mov
sbb
adc
cwtl
aas
in
ret
popa
sbb
mov
test
xchg
dec
fnstsw
lahf
dec
xchg
lods
imul
mov
mov
push
mov
cmpb
cmp
push
scas
ss
ja
or
fistpl
loope
cmp
rolb
lret
and
inc
mov
sbb
jge
cmpsl
in
in
ljmp
adc
test
nop
mov
sbb
mov
add
test
sbb
pop
cmp
call
pop
mov
int
push
xchg
jg
inc
in
xor
fwait
mov
movsl
sbb
or
push
adc
inc
nop
mov
sbb
pop
xor
repnz
and
push
lea
mov
sbb
lods
mov
adc
ret
xchg
dec
dec
xor
sbb
gs
xchg
adc
jae
cmp
pusha
cmp
mov
sbb
hlt
jns
mov
daa
inc
pop
stos
enter
or
push
dec
xchg
inc
mov
xor
or
push
dec
rep
sahf
and
lock
out
cmp
inc
cmp
mov
cmp
xor
cltd
js
ret
mov
call
clc
std
lea
xchg
dec
movsl
leave
mov
ljmp
and
xchg
jp
lock
fyl2x
aaa
leave
scas
add
sub
in
cmp
popa
scas
fldcw
out
xchg
inc
dec
push
xor
jmp
sub
add
aas
cmp
mov
cmp
loope
cmp
pop
or
subl
adc
or
xchg
les
scas
bnd
out
lock
xorb
pushf
out
clc
xchg
decl
in
lods
mov
pop
iret
ss
scas
or
gs
mov
cld
mov
xlat
jbe
fdivr
out
and
adc
stos
out
inc
add
data16
adc
lcall
inc
xor
jns
test
mov
dec
dec
inc
or
jmp
mov
lds
dec
vpsubsw
pushf
nop
cltd
inc
cltd
pop
pop
jo
aaa
shlb
push
add
pop
cld
adc
dec
dec
sbb
decl
loope
ror
pop
xchg
outsb
scas
aaa
push
xchg
test
ja
inc
jmp
aas
sub
jne
and
mov
or
test
cmp
aas
call
xor
popl
fwait
mov
jo
mov
jmp
jbe
jge
push
dec
movsl
xchg
inc
loope
insb
mov
or
scas
pop
fistpl
ds
push
rorb
or
in
cmp
cwtl
fisttpl
and
ficompl
dec
mov
xor
call
test
leave
mov
pop
shl
and
sub
xchg
inc
jbe
mov
push
jmp
sti
arpl
fidivrs
mov
test
dec
adc
inc
ja
push
mov
stos
jg
mov
icebp
shr
sbbb
mov
ss
es
xchg
mov
mov
filds
jne
jae
mov
lahf
jmp
pushf
data16
call
sbb
popf
dec
int3
fs
shl
cmp
lock
push
add
adc
xchg
popa
imul
mov
int
or
jg
test
jecxz
push
dec
dec
inc
les
lret
xor
mov
dec
sbb
loop
or
xor
inc
push
xor
jo
sub
lret
fsubrs
mov
jnp
jle
scas
or
jns
test
clc
leave
inc
xor
push
popa
mov
jne
fimull
pushl
icebp
jns
lcall
les
sub
pop
js
mov
psubd
push
scas
mov
mov
mov
into
js
xor
adc
pop
insl
pop
fs
mov
cmp
jle
inc
mov
int3
lcall
inc
aam
add
stos
cld
clc
inc
jb
js
pop
inc
mov
xchg
js
and
pop
ja
jae
mov
js
lea
xor
out
jnp
push
in
or
leave
push
dec
pop
fmuls
rolb
xor
mov
pop
xchg
pop
jbe
hlt
out
fmulp
or
push
or
sub
cs
outsl
push
mov
or
sbb
mov
cltd
lret
cmp
mov
lods
jb
adc
inc
test
mov
xor
xchg
scas
xchg
jecxz
lods
cmp
mov
pop
jbe
pop
call
sub
push
xchg
sub
imul
bound
mov
jbe
popa
daa
je
js
addl
cmpsl
aam
or
and
add
icebp
ret
and
shll
enter
push
imul
or
cltd
and
frstor
mov
test
sbb
jnp
test
adc
sahf
and
lret
je
push
dec
test
add
repz
cmp
mov
shrb
xor
icebp
lea
pop
mov
jb
fimuls
cmp
pop
cmc
dec
xchg
cmp
pop
push
sbb
pusha
es
or
and
jl
mov
fwait
mov
bound
shll
in
or
lods
in
jno
into
insb
xchg
jp
dec
jb
dec
sub
xchg
push
sbb
xor
inc
jmp
jmp
cmp
sti
lods
in
pop
je
fisubl
arpl
jo
test
lcall
push
jne
xchg
cld
ror
mov
sub
mov
out
cmpsb
in
pop
idiv
pop
push
inc
shll
or
sbb
pop
sbb
sahf
lret
xchg
mov
and
xchg
outsl
pop
pop
test
mov
bound
sbb
pop
sbb
inc
push
push
xor
push
daa
xchg
test
cmp
in
lods
movsl
xchg
dec
mov
ja
dec
and
push
or
xlat
mov
pop
cli
adcb
cltd
cmpsl
xlat
loopne
mov
mov
ss
addr16
ficoml
out
jns
add
mov
mov
enter
mov
add
jmp
nop
test
mov
cmp
cwtl
pushf
dec
xchg
dec
push
pop
xchg
mov
into
shrb
nop
dec
fwait
into
add
in
mov
xor
mov
cmp
dec
push
and
push
sub
out
mov
xchg
js
ja
and
sub
and
add
clc
xchg
in
repnz
push
sbbb
dec
sbb
mov
inc
je
fchs
iret
jne
mov
cwtl
rclb
out
loopne
out
xchg
xor
pusha
dec
push
adc
xchg
xchg
in
inc
dec
pop
sbb
inc
in
test
fdivl
rcrl
push
hlt
adc
int
mov
mov
mov
cmp
iret
dec
rorb
pusha
mov
jns
xor
push
in
sbb
js
jb
jns
xchg
js
push
dec
sub
push
mov
pop
insb
sbb
movb
dec
fldl
divb
xchg
test
test
push
adc
fistpll
ucomiss
add
xorl
add
int3
dec
cmp
lods
jg
xchg
jl
outsl
pop
cmpsl
pop
inc
push
cli
or
mov
insb
adc
das
push
mov
es
ja
inc
lret
pop
and
sbb
ja
xchg
xor
aad
movsb
mov
int
testb
or
loope
imul
in
arpl
cmp
out
push
mov
ja
test
jle
jae
mov
out
fstps
gs
fiadds
or
in
push
xor
mov
in
push
imul
adcb
lock
into
inc
or
cmp
ret
cwtl
lods
dec
call
das
dec
loope
je
imul
cmp
dec
dec
mov
adc
fdivrp
fnstsw
insl
pop
jl
push
clc
adcb
xchg
inc
in
xor
cmp
cli
add
inc
packssdw
push
inc
jle
cmp
sbbl
adc
pop
imul
fs
mov
loopne
call
pop
cmpsl
sarb
cmpsl
cmp
sub
xchg
or
jo
in
ficoms
arpl
lret
cmpsl
gs
pop
cmp
fistps
pop
jbe
jmp
xor
jns
mov
sbb
aam
sbb
or
pop
ds
daa
into
insl
mov
xor
popa
jmp
and
call
std
mov
fadds
je
jb
shlb
roll
test
fcmovne
push
xor
jo
fists
pop
pusha
xor
scas
mov
in
mov
adc
movsl
jns
jge
movsl
fnstenv
int3
mov
insb
mov
lock
mov
xchg
pop
and
scas
add
pop
mov
cmp
inc
cli
mov
jne
fcoms
je
insl
cmc
mov
aad
inc
add
lock
test
push
enter
mov
mov
or
mov
fs
jp,pn
push
jg
addb
in
jae
xor
push
fcmovnu
cmp
sbb
cltd
scas
addl
jb
icebp
jg
pop
mov
jbe
cmp
jne
cmpsb
sub
push
lds
push
loopne
popa
push
incb
mov
test
xor
dec
sub
sbbl
sahf
out
mov
inc
or
gs
orps
mov
xchg
xchg
or
jmp
add
int3
cld
aaa
add
bound
in
push
test
xlat
push
xchg
cmpsl
and
dec
sub
jp
xrelease
lret
xlat
xor
mov
push
stc
push
sub
rolb
jmp
movsl
jno
shlb
mov
dec
sbb
add
adc
test
dec
adc
test
mov
push
mov
adc
adc
insl
add
dec
add
dec
ds
enter
xchg
dec
mov
outsl
push
test
cltd
call
cmp
mov
jecxz
bound
insl
add
nop
mov
test
xchg
mov
test
xlat
and
mov
inc
xchg
mov
out
rorb
aam
clc
test
sbb
popf
fdivs
xor
rorb
mov
or
inc
inc
sub
fldcw
mov
andl
mov
push
jge
out
ss
cmpb
inc
mov
imul
movsb
mov
ret
jnp
addb
adcb
fstl
arpl
cld
cmp
pop
pop
aam
mov
cmp
lea
hlt
dec
std
fwait
pushf
inc
inc
mov
lock
subb
fsubl
loope
xchg
out
out
push
daa
push
sbb
mov
dec
movsb
jno
dec
jbe
insl
out
xchg
add
lods
je
in
iret
sbb
xor
push
out
fidivrs
enter
jbe
loop
imul
mov
into
daa
cmp
mov
pop
cld
shrb
dec
add
leave
cmp
cltd
lret
sbb
add
and
flds
dec
stos
pop
cmp
jmp
mov
pop
or
clc
dec
sti
push
xor
gs
add
jmp
push
or
inc
outsl
mov
push
push
test
mov
push
rcrb
or
pop
mov
pop
test
and
stc
ja
mov
je
rcl
and
sub
lea
lods
push
or
mov
sahf
sbb
dec
idiv
stos
fisubrs
cmp
mov
loope
jge
iret
aas
sub
inc
mov
lock
xchg
and
les
pop
adc
mov
sub
rcrb
mov
mov
sbb
and
cmp
idivb
sub
add
fwait
mov
push
ljmpw
fwait
cmc
add
mov
push
enter
js
lcall
lock
cmpsb
in
cmpsb
rcrl
mov
mov
push
aad
addr16
mov
jmp
addr16
sbb
repz
sub
jl
xor
dec
mov
or
cmp
add
scas
and
icebp
jbe
test
mov
jnp
je
arpl
push
iret
sbb
mov
add
mov
push
mov
push
sbb
lahf
mov
clc
pop
mov
add
push
pop
sbbl
sub
mov
out
shlb
push
rorb
sub
fsts
les
mov
sbb
aad
jne,pt
mov
outsb
leave
push
cs
fadd
or
leave
loope
and
jmp
out
or
sti
into
xchg
jns
out
out
out
outsb
adc
push
push
jno
loopne
lret
mov
hlt
fnstsw
cmp
jge
das
pop
pop
mov
pop
pop
push
jp
outsb
adc
or
jge
jnp
adc
xor
adc
hlt
dec
dec
out
add
or
es
es
pop
xorb
lds
push
pushf
out
jmp
jbe
lods
xor
mov
lcall
and
mov
add
test
xchg
stos
lret
stos
hlt
arpl
adc
cmp
movsb
sbb
fdivl
mov
sub
fcmove
popf
adc
push
loope
ja
mov
mov
push
in
lret
sbb
stc
insl
orb
ja
ss
rcrb
in
sub
mov
shlb
and
aad
add
stos
mov
xchg
add
sbb
call
push
mov
pusha
mov
stos
in
cmp
lret
arpl
shl
inc
pop
sarl
stos
cmp
gs
aam
std
outsb
int3
arpl
jno
pushf
jecxz
js
push
test
cmp
mov
in
inc
notb
daa
lds
cltd
inc
roll
mov
push
mov
adc
jmp
sub
out
sbb
cmp
das
dec
popa
mov
idivl
jg
pushf
pop
aaa
add
push
mov
and
rcrl
nop
repnz
call
and
andb
mov
cwtl
rol
or
and
aad
and
loop
dec
iret
add
jbe
aad
and
adc
or
inc
fidivrs
push
ljmp
les
sub
enter
xchg
inc
and
cmpsl
sbb
lcall
pop
or
mov
into
enter
adc
cmc
xor
mov
sub
mov
shr
and
sbb
repnz
xlat
sub
in
call
push
and
adcl
push
push
xor
xchg
and
movb
hlt
decl
sbb
rcl
jbe
mov
lcall
ret
mov
scas
out
fdivs
adc
push
fdivrl
ljmp
comiss
push
aas
and
shll
outsl
enter
mov
pop
lcall
mov
ljmp
lahf
push
iret
dec
or
cmp
das
sub
test
xor
push
pop
ret
mov
rclb
and
sub
in
sbb
push
ds
push
imul
call
add
add
sbb
icebp
ds
inc
loope
mov
adc
sbb
flds
and
out
lahf
test
clc
pop
adc
shrl
loopne
jmp
pop
inc
lcall
fistps
ja
mov
mov
mov
and
mov
and
sbb
shll
xor
or
adc
and
xor
add
lods
xchg
insl
cmpsb
xor
cmp
inc
inc
adc
inc
pushf
in
imul
adc
xchg
mov
jo
xchg
aad
movsb
inc
dec
hlt
sbb
inc
or
stos
lock
pop
aad
dec
test
xor
push
pop
outsl
push
and
cmp
outsl
mov
aad
es
imul
mov
in
pop
cmp
out
popa
je
xchg
loopne
cmp
inc
orb
add
adc
movsl
add
jae
mov
pop
dec
xor
mov
push
push
mov
push
xor
xchg
push
sub
repz
lret
in
mov
cmp
cltd
cmp
mov
rclb
test
mov
insl
stc
test
iret
and
push
fidivs
pop
in
xchg
lea
fstl
rcl
mov
testl
fisttps
mov
int
sub
outsb
cmp
mov
int3
cs
cltd
or
mov
push
lds
dec
popl
xchg
iret
fsub
mov
movsl
enter
fbld
fs
cmp
ret
push
jmp
jne
xchg
cmpsl
clc
cmp
xor
cmc
add
fnstenv
inc
cmc
push
mov
cmp
jnp
loopne
nop
xchg
pop
je
out
cmc
mov
push
ljmp
daa
test
inc
mov
test
imul
aad
stos
push
sub
and
imul
sub
xorl
arpl
mov
out
je
xchg
pusha
inc
and
sub
add
add
or
jl
jecxz
jns
pop
pop
insb
popa
jbe
lock
iret
jp
loop
out
arpl
mov
int
dec
pop
push
outsl
add
push
push
outsl
cltd
mov
adc
push
add
clc
lods
add
inc
or
mov
xchg
imul
cmp
xlat
pop
push
pop
xor
xor
sti
xor
dec
push
and
scas
add
adc
xchg
leave
xor
cmc
out
fs
adc
iret
shll
cmovnp
into
iret
mov
cmp
stos
mov
outsb
add
scas
and
jge
ror
xchg
rolb
lret
cld
sub
adc
inc
sti
and
pop
xchg
xor
cmp
and
lods
and
pop
adc
mov
bound
pop
out
stos
jl
xor
inc
repz
cmp
mov
mov
xchg
and
loope
data16
loope
pop
xor
ret
ss
pop
jae
xchg
stos
out
sbb
aaa
mov
arpl
iret
loope
stos
aam
arpl
daa
fnstcw
cld
lcall
xor
jecxz
fcomps
out
loop
mov
jecxz
xchg
adc
push
hlt
pushf
lods
fistl
push
xchg
js
and
push
sub
dec
mov
xor
mov
xor
add
stc
xor
sub
add
leave
adc
cmpsl
pushf
sub
inc
mov
vpsrlq
sbb
jp
test
js
daa
test
or
lret
stc
xor
inc
insl
mov
push
frstor
inc
ss
in
jge
rcr
idivl
push
shrb
mov
xchg
xchg
pop
es
add
mov
iret
cmp
sub
lods
xor
in
div
lods
div
test
adc
jne
jmp
inc
jnp
inc
inc
jl
dec
mov
leave
stos
add
sub
rcll
adc
adc
sbb
rcrl
pop
add
xor
pop
repz
cmp
call
push
mov
cli
cmpsl
popa
lds
in
stos
pop
inc
into
cltd
mov
aaa
jne
data16
mov
sub
stos
pop
roll
sbbb
arpl
fdivs
and
mov
jno
dec
xchg
and
rcrl
mov
xchg
pop
inc
push
jecxz
aas
es
shr
jl
stc
les
xchg
and
out
leave
xor
sub
out
arpl
sti
pop
je
push
sti
shlb
in
or
les
jecxz
push
insb
in
jp
sub
sbb
push
dec
jecxz
and
in
add
lods
mov
push
imul
rorb
push
fisubs
cmp
inc
divl
aaa
cmc
out
sbb
push
daa
add
or
sub
int3
js
add
and
xor
mov
and
and
mov
addr16
inc
pop
outsl
sub
cmp
xor
mov
clc
fxch
movsb
insb
hlt
push
lret
pop
add
sti
pop
andb
aad
mov
dec
sbb
cmp
popf
fsubrl
in
push
sbb
je
adc
sub
jne
add
test
fsts
mov
stos
adc
and
addr16
sub
push
or
psrld
push
aaa
outsl
ds
sti
mov
lods
adc
add
xchg
sub
xchg
movsl
add
inc
mov
fisttpl
cs
dec
dec
ret
inc
pushf
pop
fcmovbe
aas
or
pushf
and
inc
in
xor
push
mov
mov
fsts
jle
repz
leave
mov
leave
mov
cmp
imul
aam
cmp
movsb
sbb
xchg
jns,pn
les
out
iret
xchg
xlat
aaa
sub
add
xchg
movsl
aam
imul
lods
xor
aad
repnz
mov
dec
jo
aas
bound
mov
jle
shl
push
lock
lret
or
inc
or
or
cmp
mov
jae
dec
cltd
test
add
jge
adc
int
cmp
mov
jae
nop
lods
imul
jne
push
arpl
push
stos
test
sub
mov
cmpsb
jg
sbb
scas
in
out
clc
pop
cmp
divl
dec
sbb
jno
add
push
push
or
mov
xor
fisttpll
mov
movb
jl
cmc
adcl
push
and
fldenv
cmc
shl
repnz
sahf
les
push
test
add
adc
sub
testl
lahf
jmp
out
inc
enter
inc
imul
push
push
xor
ret
xor
xor
mov
mov
movsb
scas
lahf
mov
sub
popf
jbe
mov
pusha
or
outsb
addb
sahf
and
sub
cmp
xchg
pop
stc
xchg
fldcw
pop
or
inc
mov
shlb
cs
bound
mov
inc
fsubrl
ret
push
inc
xchg
mov
pushf
jb,pn
mov
arpl
mov
inc
fisubrs
jnp
cltd
out
idivl
fistpll
sub
lret
sub
repz
add
fimull
in
cli
mov
jnp
push
jno
push
jnp
mov
push
je
push
jg
mov
mov
lahf
inc
sub
and
add
xor
les
das
and
adc
cmp
stos
shll
lret
or
scas
xor
popl
pop
nop
dec
mov
fimull
push
xlat
add
mov
push
push
or
and
lds
lahf
dec
dec
jne
out
xor
iret
xor
mov
jmp
stos
pop
fisubs
inc
arpl
or
sub
out
rorl
xchg
in
dec
aad
mov
adc
push
xor
lock
aam
push
add
push
push
mov
push
aam
mov
mov
mov
sahf
mov
fldl
sub
add
mov
lahf
rcl
and
cmp
or
and
jb
popa
add
add
add
hlt
dec
inc
xchg
cwtl
inc
movsl
mov
in
sarl
aaa
mov
or
pushf
jo
add
out
popa
pop
mov
es
scas
outsb
test
sbb
jbe
add
lds
mov
out
adc
sbb
in
adc
pop
jns
mov
xor
or
pop
sbb
outsl
adc
pop
test
mov
cmc
ja
fcomi
movsb
out
dec
aaa
icebp
insl
push
dec
leave
movsb
repnz
jg
or
dec
mov
pop
cld
popf
jb
frstor
inc
inc
addr16
push
xor
shlb
aam
call
inc
pop
inc
pop
push
movsl
sbb
jbe
jge
rclb
loop
xchg
or
int
jmp
xchg
ds
ja
lret
icebp
jecxz
add
loope
lret
pop
push
push
movsb
cltd
mov
ja
sub
ljmp
add
dec
pop
sub
jae
or
add
cmc
xchg
xchg
add
xchg
xlat
mov
and
mov
orb
stc
and
aas
repz
fbstp
adcb
ret
sub
pop
xor
aad
push
scas
xor
outsl
or
clc
adc
dec
loope
nop
rol
repnz
lds
bound
bound
xchg
cmp
jl
in
flds
mov
lods
nop
leave
and
jbe
push
mov
add
mov
jo
push
jg
mov
test
inc
stc
out
addb
fdivp
in
push
enter
call
movl
mov
clc
cmpsl
or
ret
js
test
mov
stos
xor
rorl
mov
cmp
subl
mov
in
mov
and
movsb
inc
out
adc
popf
jg
cmp
xchg
or
inc
xchg
mov
push
ja
pop
mov
xchg
mov
cli
in
iret
hlt
xlat
xchg
hlt
daa
lods
xchg
push
ret
sahf
push
sub
in
fistpl
in
jmp
bound
stos
adc
inc
imul
fld
adc
push
jle
jp
cmpsl
dec
les
mov
inc
inc
aaa
es
mov
fistps
cmpsb
add
push
xchg
les
int
sub
test
inc
cwtl
mov
cmpsl
cmpsl
lret
lods
jo
cltd
ss
jg
mov
dec
fwait
dec
fwait
inc
jne
jp
push
push
daa
cwtl
test
sub
sub
loopne
addr16
mov
enter
js
adc
mov
push
add
and
dec
pop
leave
or
hlt
inc
mov
push
mov
cltd
xchg
inc
pop
aas
xor
pusha
stc
dec
cmp
test
jbe
sub
pop
push
je
xor
out
in
dec
pop
test
sub
dec
into
xlat
mov
mov
lods
xor
xor
das
pushw
xchg
mov
and
adc
xor
fmull
mov
dec
cs
outsb
push
cmp
xchg
iret
xchg
jnp
ret
adc
movsl
idivb
sti
sub
daa
sub
xchg
out
cmpl
push
enter
mov
lahf
mov
aaa
in
movsb
ret
aaa
adc
dec
and
sti
or
push
int
inc
lret
sub
jge
xchg
cmc
mov
mov
in
call
lock
rcrl
stc
cmp
hlt
mov
inc
out
loopne
and
mov
ret
scas
mov
popa
out
and
cmpl
sub
adc
push
mov
push
aam
add
mov
add
call
lahf
outsb
out
popa
fwait
jge
in
push
clc
fwait
pop
popa
or
enter
ficoml
jl
xchg
jo
or
sbb
pop
sub
bound
decb
in
push
or
push
repnz
fdivs
out
dec
pop
cli
popa
int
inc
pusha
xchg
das
and
mov
adc
mov
or
mov
inc
adc
xchg
sbb
cmp
or
stc
sub
and
sbb
push
int3
and
push
push
inc
lret
into
pop
xchg
cmpsl
mov
aam
xor
inc
ja
sub
jmp
stos
out
sub
dec
mov
cmc
sbb
fmuls
sbb
outsb
aad
in
das
add
mov
dec
dec
push
xchg
adc
or
cli
dec
loope
pop
leave
pushf
inc
stc
fsubl
add
out
shlb
leave
les
out
sbb
in
and
es
les
leave
pop
dec
adc
call
cmp
mov
or
jle
cld
loopne
arpl
ret
loop
cmpb
xchg
cmpsb
sub
mov
dec
sub
insb
sub
in
sub
adc
inc
sub
lret
jae
sti
pop
inc
pop
ss
jecxz
stc
mov
xor
sbbb
or
push
js
rol
icebp
clc
push
or
icebp
cwtl
fnsave
add
xor
sub
push
fwait
jne
mov
adc
jae
aad
lea
pop
push
aas
js
lds
jp
stos
outsl
fbld
xchg
mov
adcb
fidivrs
lret
or
into
jb
cmp
inc
out
dec
loope
ds
les
out
aad
push
add
adcb
imul
mov
push
andl
and
pop
adc
jns
xchg
div
mov
mov
push
cmc
pushf
jbe
fincstp
cmp
ret
adc
mov
push
enter
subl
mov
adc
jg
and
icebp
xor
leave
lcall
add
es
jge
or
or
jle
rcrl
out
pop
xor
mov
add
fwait
mov
inc
sti
jno
lds
fucom
xchg
xor
xor
inc
cmp
xchg
xlat
data16
ret
cmp
lock
and
clc
cmp
jb
clc
leave
and
iret
xor
mov
xchg
sub
iret
pop
fs
imul
adc
testl
adc
push
iret
dec
push
sbb
mov
adc
xor
xchg
lds
pushf
push
loop
cmp
push
dec
dec
cmp
mov
cmp
popa
js
shlb
testl
xor
int3
iret
push
jle
cmp
mov
testb
testl
mov
pop
pusha
or
int3
push
mov
mov
push
mov
sahf
or
mov
jmp
adcb
lea
jle
out
ret
test
dec
lods
mov
mov
xchg
stos
dec
xor
outsl
dec
imul
sahf
sarl
scas
mov
lahf
out
mov
sbb
add
inc
loopne
lahf
mov
test
or
scas
and
repz
enter
mov
mov
mul
movsl
xor
dec
ror
push
fwait
jl
mov
sub
push
and
and
push
outsb
mov
jmp
xchg
scas
inc
insl
push
xchg
ret
divl
cmpsb
movsl
sbb
sahf
and
ja
imul
pop
cmp
mov
cld
mov
repnz
push
test
xor
inc
sub
stc
std
adc
xchg
mov
push
icebp
mov
add
adc
push
and
jge
leave
iret
xchg
mov
adc
movsl
int3
mov
das
pop
clc
adc
mov
fidivs
ds
nop
insl
push
mov
push
sti
adc
mov
and
inc
leave
jne
jp
cwtl
mov
jne
mov
xlat
mov
fisubrl
aam
movsl
jno
cmp
cltd
adc
ficomps
xor
std
mov
stc
pop
test
adc
pop
inc
hlt
rol
testb
rorb
lock
jmp
hlt
ror
sub
lock
incb
ret
ds
cmp
test
fsubrl
pop
sub
dec
add
dec
roll
push
mov
dec
into
int
cmp
imul
pcmpgtw
mov
pop
fbld
pop
mov
jl
leave
pusha
jae
xchg
cmpsl
adc
ja
mov
cmp
inc
dec
inc
daa
cs
mov
out
lock
jnp
push
xchg
push
test
lret
adc
stc
push
fucomip
rcrb
stos
mov
sub
ret
dec
inc
and
mov
lcall
mov
dec
stos
mov
popf
xchg
adc
imulb
aas
dec
adc
cwtl
pushf
sbb
ficoml
and
mov
pop
inc
fcomps
loope
sbb
test
push
mov
mov
lret
je
xlat
xor
jle
shl
mov
push
pushf
add
sahf
dec
cmpsb
int3
or
in
cmp
hlt
pop
decl
mov
mov
cmp
leave
sbb
ret
std
push
inc
add
push
leave
inc
cmpsl
enter
bound
repnz
testb
or
dec
jbe
jno
bts
xor
dec
call
std
push
lods
testb
or
shrl
out
add
rclb
loop
aas
push
and
sbb
adc
mov
imul
xchg
or
mov
rorb
sbb
lcall
inc
xlat
scas
jae
stos
sbb
pusha
xchg
inc
jl
stos
pop
outsl
xor
dec
jge
sahf
repz
inc
int3
test
dec
cld
mov
or
sbb
arpl
dec
cli
in
cmp
jbe
cltd
cmp
pandn
repnz
xor
test
sub
lods
push
enter
fmul
or
test
fildl
sub
fwait
rorl
aad
nop
push
dec
orb
cmp
add
cmp
arpl
and
rorb
and
cld
pop
mov
sbb
xchg
fcmovbe
mov
fwait
rcl
loop
sbb
or
mov
lret
cld
testl
ficoms
mov
cmpsb
test
jbe
pop
lods
xchg
and
mov
loop
mov
adc
lods
push
fwait
and
jl
mov
dec
test
iret
div
push
pop
jl
loope
mov
sub
cmc
and
fiadds
cltd
and
arpl
std
mov
jnp
pop
inc
int3
mov
cmc
call
imul
pop
call
mov
mov
xor
push
cmp
jle
xor
dec
js
adc
push
mov
inc
sub
sub
daa
lods
jo
mov
push
lcall
or
push
mov
out
mov
push
cmp
push
mov
cwtl
fidivrl
aad
dec
jb
stos
lods
sbb
inc
jmp
pop
stc
test
out
dec
jno
xchg
jno
xor
movsl
cmp
xchg
inc
js
out
les
add
insb
lahf
pop
and
add
fiaddl
or
aaa
mov
and
iret
cmp
pusha
lock
dec
data16
or
pop
call
pop
hlt
bound
pusha
pop
add
xor
pop
sbb
aas
test
sbb
out
cltd
xor
rclb
orl
shrl
push
in
je
xchg
mov
push
hlt
xchg
andl
lret
bnd
jg
imul
ljmp
pop
cmpsl
lods
push
sub
fmuls
xorl
mov
push
xchg
lahf
aas
sbb
hlt
inc
mov
cmp
movsl
push
adc
lds
add
cmpsl
mov
jecxz
dec
push
fisubrs
shrl
not
mov
mov
cmp
jno
cltd
xchg
loope
xor
in
jne
push
pop
je
jg
lahf
or
mov
inc
repz
jne
adc
div
shrb
loop
shl
inc
movsl
loope
cmp
adc
and
or
dec
icebp
mov
lahf
inc
cmpl
lahf
pop
mov
push
arpl
xchg
lcall
pop
loop
xchg
mov
mov
mov
mov
xchg
std
sbb
push
movsb
sbbl
add
mov
repnz
andb
out
inc
arpl
ficoml
jo
xchg
test
mov
scas
insb
sub
xor
push
xor
pop
cmp
cwtl
add
arpl
mov
fisubs
cli
sbb
les
das
fildll
sbb
scas
scas
mov
and
jecxz
adc
push
insl
jg
xor
and
lret
jge
jl
fisttps
call
es
cltd
or
ret
lret
sbb
push
adc
repz
repz
out
jae
adc
ja
stc
mov
push
daa
imul
adc
movsl
push
sub
xor
add
fmull
add
pop
cltd
push
insl
lahf
in
sub
xor
add
ss
mov
mov
pushf
aas
pop
xor
pslld
outsb
ljmp
fwait
aas
popa
and
xor
xchg
lock
jne
sub
sub
int3
sub
mov
inc
xor
dec
lods
movsb
repnz
subb
stc
dec
xchg
pop
dec
jae
xchg
add
or
pop
pop
mov
adc
cmp
nop
rcl
enter
leave
add
rcr
js
ror
jno
scas
je
and
movsl
imul
aam
mov
inc
cmp
push
sbb
jg
dec
mov
cmovg
jg
mov
cmp
push
or
lcall
les
cltd
stos
mov
xor
mov
loope
add
lods
in
jbe
and
inc
sbb
sub
pop
adc
mov
stos
sbb
mov
std
fidivs
iret
jo
push
nop
adc
adc
lcall
fsubl
add
aaa
xchg
sahf
dec
and
sti
popf
jbe
in
jmp
xchg
out
and
jl
xchg
jecxz
xchg
imul
into
jl
dec
ja
add
or
fsubrp
push
das
mov
jbe
ret
xor
lods
pop
dec
out
or
loopne
lret
mov
mov
lds
add
sub
jmp
mov
imul
mov
gs
pop
push
push
lcall
push
mov
aas
adc
fidivl
sahf
xchg
shll
add
dec
pop
or
mov
sbb
pop
inc
xor
xor
ss
jno
mov
adc
fs
xchg
aas
std
inc
jp
cmpsl
out
push
pop
fsubl
mov
adc
xlat
hlt
jnp
add
mov
out
jge
lret
pop
jae
mov
das
cmp
xor
out
scas
mov
push
or
out
test
negl
pop
cli
or
adc
cmpsb
xor
pop
ds
sbb
mov
out
scas
add
ret
fldl
and
insb
int
scas
adc
adc
lahf
insb
bound
sub
mov
cltd
pop
xchg
and
push
mov
cmp
mov
sbb
insl
fs
imul
push
cld
cmp
lret
mov
ja
in
dec
pop
add
popa
add
mov
xor
clc
inc
fbstp
adc
mov
fiaddl
fmuls
mov
or
divl
faddl
jecxz
jle
pushf
imul
pop
and
inc
or
inc
jmp
or
sub
push
je
adc
jg
ljmp
adc
test
pusha
dec
mov
xchg
aam
repnz
dec
or
loopne
or
push
add
pushf
mov
rorl
test
arpl
movsb
sbb
inc
jo
mov
adc
int
pop
int3
and
repnz
sub
sbb
or
insb
pop
xchg
imul
jecxz
pop
push
sahf
loope
push
std
push
dec
pushf
mov
jmp
andb
cmp
and
mov
or
fucompp
xorb
and
add
bound
fwait
jbe
js
outsl
cmp
jg
ror
shrl
mov
mov
cmp
push
add
jae
sub
fidivrl
mov
lcall
mov
push
push
push
insb
add
lods
nop
addr16
pusha
or
es
jbe
xchg
inc
push
inc
jno
fidivl
add
pop
lret
pop
mov
dec
push
xchg
add
and
mov
pusha
test
dec
cmc
repz
mov
push
stc
int3
or
xchg
mov
cmp
decl
dec
jbe
in
inc
pop
jno
xor
data16
fwait
xchg
aas
cmpb
cmpsl
and
mov
fwait
rcl
adc
lods
int
movsl
push
enter
popf
mul
lret
xor
pop
inc
outsb
popa
add
sbb
mov
dec
or
and
inc
pushl
lahf
lods
lea
pop
sbb
mov
mov
dec
inc
push
mov
lea
cmpsb
lea
push
mov
iret
fwait
dec
or
sahf
out
sbb
into
or
lea
mov
xchg
lahf
pop
cmpsl
repnz
xchg
gs
adc
aad
imulb
in
add
lret
or
fwait
fs
in
xchg
dec
fs
and
mov
add
sbb
dec
push
imul
lods
jge
cmp
in
fdivrp
add
popa
lahf
negb
dec
fwait
stos
gs
push
ss
das
mov
mov
xchg
subl
aam
fs
jo
movsl
ja
xor
xchg
gs
andb
mov
or
arpl
mov
aad
adc
and
leave
loope
jo
adc
mov
dec
fcomps
inc
pop
inc
stos
mov
push
repnz
sbb
les
inc
fmuls
out
xchg
imul
js
les
adc
loope
pop
stc
stos
jne
inc
sbb
sahf
cli
clc
orl
push
sbb
sar
addb
cmpsl
jne
leave
js
xorl
dec
jb
jmp
pop
outsl
mov
xchg
push
arpl
sbb
repnz
scas
arpl
jae
sti
nop
shlb
lret
lret
fs
es
cwtl
loope
add
test
xchg
inc
sub
mov
dec
jbe
je
orl
std
and
jae
aad
pop
mov
test
dec
xor
jle
arpl
jno
dec
pop
jbe
push
pusha
add
pop
loope
call
cmpsl
jae
ja
notb
outsl
xor
push
lahf
push
mov
mov
mov
addr16
push
and
jg
stc
cmp
js
ffree
in
adc
xchg
push
jl
enter
stc
mov
pop
xlat
cltd
or
je
les
in
xlat
popf
int
outsb
fs
sub
shl
jg
jl
and
add
int3
sbb
mov
ja
outsl
xor
dec
push
mov
sub
loop
mov
dec
clc
mov
stos
mov
scas
loope
out
xchg
ja
inc
or
mov
sahf
jecxz
mov
fxch
dec
mov
rorl
out
pop
lods
and
aas
adc
pop
div
js
popl
out
mov
or
dec
and
jbe
ret
fwait
call
test
adc
incb
mov
ss
lods
sti
and
or
in
daa
lods
and
pop
xchg
push
or
xor
sub
and
ror
and
lcall
add
xchg
rorb
push
in
cmp
pop
jnp
or
fistpl
iret
sbbl
xchg
out
lret
adc
test
or
ret
aad
dec
nop
rolb
shl
hlt
pop
jmp
dec
lea
xor
sbb
rcrb
inc
or
mov
jb
enter
pop
or
ja
xchg
in
adc
mov
dec
xchg
into
jo
mov
xor
std
data16
jmp
jp
and
mov
scas
jle
shlb
lock
jle
in
sbb
cmp
jp
lock
add
int3
jecxz
pop
xchg
jbe
fisubrs
mov
test
push
scas
add
mov
xchg
add
fcoms
outsb
cmp
or
in
insl
lcall
pop
das
mov
jo
cmp
stos
daa
sbb
lock
inc
mul
int
mov
repnz
ror
repnz
mov
xchg
fs
jno
push
xor
bnd
sbb
ret
inc
jbe
jns
inc
or
add
pusha
jle
cmp
push
xchg
into
shlb
dec
xchg
shlb
les
inc
jns
inc
in
jbe
or
in
movsl
pushf
jno
mov
gs
idivb
lret
in
jns
jmp
jg
mov
push
pop
lods
cmc
adc
addr16
xor
jle,pt
xchg
inc
in
jbe
outsl
xchg
mov
push
pop
das
lods
lods
addr16
rcrb
and
rclb
xchg
mov
and
imul
sub
or
hlt
fstpt
in
fidivrl
lds
jmp
sub
mov
in
xor
push
ljmp
inc
add
xchg
and
fs
fmulp
sbb
fucomi
and
dec
sbb
jbe
cmc
je
aaa
cmp
dec
and
stos
pop
stc
jns
icebp
sbb
mov
fstl
cld
lahf
xor
sbb
and
clc
mov
stos
inc
aam
pop
push
sahf
sbb
clc
cmc
mov
sub
dec
imul
jle
daa
imul
xchg
mov
cmp
mov
popl
sub
cmp
lods
push
mov
inc
cmc
xor
imul
movsl
ficoml
cli
sbb
aam
adc
imul
les
sub
outsl
nop
in
xchg
lock
mov
mov
and
cmpsl
shll
mov
mov
shlb
inc
and
or
cmp
sbb
dec
out
dec
adc
xlat
adc
mov
dec
mov
cmpsb
sbb
arpl
mov
mov
outsl
negb
or
pusha
out
add
loope
jg
stos
aaa
movsl
mov
cmp
scas
xchg
rcrl
roll
movsl
push
sub
movsb
mov
mov
sbb
lods
call
dec
xchg
js
fucomip
push
adc
or
call
lahf
inc
subl
push
fistl
jne
mov
cmp
add
xchg
mov
fistps
sbb
push
mov
jmp
pop
inc
mov
xlat
mov
xchg
fidivrl
mov
stos
in
repnz
pop
jmp
sbb
lds
or
movsb
aad
leave
pusha
or
stc
pop
ja
inc
incb
ret
adc
adcl
dec
fbstp
cmp
aad
hlt
dec
cmpsl
scas
stc
cs
sbb
mov
pop
add
dec
lds
int3
mov
mov
test
jg
inc
jecxz
pop
ljmp
cmp
jl
xor
xor
out
sbb
push
inc
cmp
mov
jl
xchg
pop
or
mov
lret
xchg
mov
mov
or
in
ljmp
xor
arpl
xchg
cltd
xor
mov
add
pop
jmp
out
fimull
in
subl
das
mov
mov
mov
bound
and
mov
fwait
testl
adc
imul
inc
jmp
xorb
xchg
adcl
cmp
fwait
sbb
loop
bnd
xchg
jle
jae
xlat
leave
sub
popl
sub
jns
xchg
inc
nop
dec
mov
dec
iret
ljmp
sub
mov
arpl
out
stos
popa
mov
mov
push
or
and
dec
daa
lock
ret
dec
jp
aad
in
dec
mov
cmp
insb
jl
inc
adc
mov
xchg
mov
lock
cmpsb
lcall
push
pop
sub
sbb
add
jmp
xor
out
pop
stc
nop
mov
daa
addb
and
fadd
adc
xor
sbb
cmp
push
inc
in
std
pop
jno
adc
stos
imul
mov
stos
dec
mov
iret
pop
add
lcall
pushf
push
rclb
jbe
inc
pop
loope
or
je
jbe
push
jb
mov
xchg
and
mov
adc
jle
and
loope
inc
pop
xchg
mov
int3
push
pop
mov
int
stos
rcrl
pop
pop
test
insl
in
jge
scas
push
sarb
fisttps
imul
in
xchg
jo
mov
xor
lea
stos
xor
inc
std
inc
sbb
movsb
insl
addr16
repnz
mov
and
lahf
mov
add
scas
jg
sbb
icebp
mov
push
icebp
mov
mov
movsb
lahf
mov
sub
fildl
repnz
loopne
insl
pop
adc
mov
or
fimull
aas
xchg
int
pop
pop
jne
jecxz
dec
sbb
call
mov
dec
xchg
push
mov
lods
and
cmpsb
rorl
test
xlat
cmpsl
in
push
jb
sbb
add
push
sub
mov
cmp
fs
mov
push
mov
cmpsb
jg
or
add
fdivl
xlat
bound
ror
mov
mov
jae
enter
repz
test
cs
xor
xchg
lock
fs
mov
divb
push
fs
mov
mov
or
fs
std
mov
rol
mov
and
shlb
pop
sbb
push
cmp
loop
inc
in
test
push
mov
pop
out
aad
dec
cmp
mov
clc
rorb
int
dec
adc
lds
pusha
pop
ljmp
mov
and
xor
sub
cwtl
or
xchg
fcoml
call
and
and
out
push
scas
shlb
sbb
pop
js,pt
std
mov
in
xor
fwait
aam
outsb
icebp
dec
mov
and
repnz
cmpsl
out
dec
iret
mov
aaa
xlat
xchg
or
pop
sbb
xor
inc
jle
add
pusha
ljmp
pop
cmp
clc
rcll
std
outsl
push
insb
pop
mov
push
lret
das
in
sbb
lods
rep
mov
sub
icebp
xchg
out
sub
sub
popa
daa
xor
in
sbb
xchg
or
adc
adc
sub
bound
adc
bound
inc
xor
leave
xor
lods
or
idivl
iret
fucomip
enter
push
adc
pop
rcrb
stc
in
sbbb
xorl
shl
mov
adc
daa
or
jl
lock
ljmp
push
in
jae
and
and
pmulhw
adc
dec
mov
xor
pop
cmp
xlat
dec
cld
fdivrs
mov
or
shlb
sub
mov
shlb
or
cld
inc
cs
cmc
shr
jae
fcoml
sub
inc
data16
popf
and
push
int
loopne
into
fsubrs
sub
add
inc
or
js
jle
and
stc
les
fnstenv
mov
js
push
fists
mov
pushf
outsb
jecxz
in
push
add
je
mov
fcompl
pushf
out
and
aas
rorl
jns
inc
nop
inc
ja
mov
pop
cmc
rcrl
pop
sub
mov
fwait
mov
xchg
cmp
sub
das
test
dec
sub
adc
mov
dec
xchg
das
pop
adc
ret
mov
sbb
jae
call
ror
push
inc
xchg
lock
cwtl
clc
lret
jb
cmpsl
and
sahf
add
subl
or
adc
pop
push
xor
mov
mov
or
pop
inc
dec
jo
repnz
jae
mov
pop
inc
es
shl
out
outsl
mov
mov
in
repz
lahf
arpl
push
sub
mov
push
lret
pusha
pop
lds
adcb
xor
cmpsl
xchg
out
and
sbb
push
adc
ja
popf
lods
cmp
push
cwtl
into
xchg
sub
ss
add
in
lea
testb
or
mov
mov
aas
xchg
clc
jge
test
imul
mov
mov
inc
cmp
mov
mov
xor
mov
add
cmp
xchg
scas
iret
xor
insb
mov
fisubs
push
mov
ret
adc
add
hlt
sub
scas
mov
ja,pn
ficomps
mov
sub
push
inc
pminsw
dec
test
jae
aad
xchg
pop
lcall
test
mov
sub
and
sarb
pop
call
cmp
jnp
sbb
int3
dec
xor
sub
loopne
jne
jp
out
push
or
popf
orl
std
in
adc
xor
lret
mov
into
out
hlt
stos
dec
push
dec
outsb
repz
push
fstpt
jmp
mov
pop
add
jns
in
xchg
sbb
add
xchg
xchg
inc
jp
sbb
fisubl
push
inc
cmp
jge
icebp
xchg
mov
enter
pushf
lcall
call
inc
fisttpl
jge
insb
pop
dec
test
push
in
leave
mov
stos
inc
jnp
add
call
pop
scas
in
xchg
das
out
sahf
lahf
std
add
mov
daa
push
cwtl
in
fsubr
pushf
adc
add
fwait
mov
repz
sbb
outsl
loop
add
addr16
aaa
dec
sbb
fidivl
scas
movswl
inc
dec
clc
fsubrs
jg
and
and
jle
sbb
pop
imul
fldt
in
aaa
adc
leave
ss
add
mov
test
pop
out
mov
sahf
int3
push
cmpb
nop
pop
shlb
mov
pop
scas
push
nop
movsl
movsl
inc
outsb
adc
push
pop
push
das
addr16
jecxz
leave
cmp
push
mov
add
or
lods
aad
je
push
sub
xor
rclb
in
or
sub
dec
xchg
cmpsb
sub
mov
pushf
aam
test
jmp
out
add
jmp
xor
pop
mov
adc
orb
arpl
fs
mov
sub
push
jnp
stos
jno
or
cwtl
sar
mov
cmp
movsl
ret
ret
dec
pop
dec
xor
and
in
jne
hlt
testb
inc
sti
mov
pushf
cmp
out
mov
icebp
loope
or
stos
leave
xchg
pushf
push
cmp
xchg
lds
cmp
in
lahf
inc
adc
xorl
sbb
adc
jnp
out
jo
jl
imul
lea
dec
clc
addb
and
loop
scas
inc
sub
sahf
jmp
pop
and
push
sti
pop
inc
sahf
dec
mov
sub
add
push
push
inc
ja
popf
aaa
shll
or
pop
test
jmp
dec
xchg
enter
xchg
fistl
inc
push
daa
faddp
dec
cmp
push
call
popf
dec
inc
mov
sbb
sbb
nop
jl
imul
jns
push
addr16
fs
lret
dec
adc
cmpb
dec
adc
leave
jecxz
mov
adcb
repz
cmp
dec
adc
sub
mov
sti
jbe
pop
popf
ja
jl
mov
stc
push
je
scas
mov
fstpt
incb
scas
lret
daa
in
test
mov
xor
in
add
ljmp
out
inc
sti
repz
add
mov
and
lret
fimuls
mov
lds
cmp
xor
add
xor
mov
add
outsb
aaa
idivb
mov
or
in
cmc
arpl
call
ss
sub
lret
inc
movsb
int3
cwtl
stc
stc
pushf
stc
cmpb
or
loop
sbb
cmpsl
mov
leave
push
inc
mov
jno
int3
outsl
cltd
cmp
movd
cwtl
negl
mov
das
mov
shrb
add
mov
ss
inc
lcall
mov
sbb
or
pop
daa
les
cmpb
mov
insl
dec
imul
pop
xchg
flds
or
je
call
cmc
sub
xor
xor
movsb
cmp
out
xchg
pop
shll
mov
mov
adc
xor
loope
rol
cs
loopne
sub
xchg
out
jp
popf
in
adcl
dec
or
cmp
adc
out
fcompl
inc
orl
fsubs
mov
sbb
dec
sbb
mov
fs
in
sbb
xchg
arpl
add
call
mov
xchg
pop
cli
movsb
sub
imul
test
popf
pop
xchg
pop
cmp
mov
into
rcl
mov
ret
pushf
adc
ljmp
cwtl
lods
into
pop
lret
movsl
fists
mov
cmp
push
int
cmp
jmp
hlt
js
adc
ljmp
insb
andb
push
push
xchg
scas
insb
fists
repz
mov
hlt
cmc
inc
cmp
clc
adc
das
lcall
cwtl
addb
jmp
das
stos
or
fstpl
unpckhps
mov
jns
adc
inc
aam
push
imul
test
add
mov
adc
shll
cmp
sar
int
mov
inc
cmpsb
inc
idiv
imul
mov
imul
cwtl
sub
dec
adc
clc
sub
jne
fisttps
mov
filds
xor
push
sbb
ja
mov
ret
dec
insl
mov
test
insb
inc
mov
jge
loope
sbb
mov
dec
sbb
cmpsl
push
push
rcll
xchg
xchg
inc
loop
mov
fldt
out
sbb
mov
xor
mov
or
insl
movsl
sbb
dec
or
pmaddwd
mov
test
shr
push
mov
shll
data16
mov
and
je
clc
mov
dec
inc
lods
cs
shlb
lock
push
jne
xchg
nop
lret
add
mov
dec
cmpl
dec
sbb
add
xchg
inc
mov
inc
push
ss
inc
jns
mov
in
push
aad
popa
or
cmpsl
movsb
cmp
xchg
lret
add
pushf
call
dec
push
ret
push
es
mov
and
in
jg,pn
pop
cmpl
xor
jge
dec
loopne
lods
mov
dec
pushf
repz
imul
cs
mov
push
or
test
punpckhbw
xchg
movsl
pop
test
jle
pop
mov
inc
mov
mov
xchg
cmp
jbe
mov
xor
fdivl
inc
inc
in
xor
in
int3
mov
negl
lea
xorl
out
cmpsb
popf
test
cmp
hlt
in
shlb
out
jg
ror
sarl
enter
iret
mov
cmp
xchg
push
pop
sub
popa
pop
inc
mov
pop
out
leave
fistpl
inc
xor
call
aas
adc
mov
mov
into
push
not
pop
fsubr
cmp
xchg
insl
dec
hlt
xchg
lods
mov
and
mov
xchg
lret
fdivs
lcall
mov
mov
mov
inc
jb
call
mov
inc
jnp
stc
cmp
push
in
dec
pop
inc
dec
lea
push
pop
movsb
xor
inc
fwait
jne
xor
jns
mov
out
testb
xor
or
sub
outsb
jb
outsl
pop
dec
or
xchg
insb
push
loop
daa
xor
xor
int
bound
in
sbb
pop
ljmp
lcall
icebp
cmp
dec
mov
rcrl
pop
mov
sub
jno
jp
jno
pushf
xchg
push
repz
xor
ss
or
clc
cmp
daa
jmp
pop
sbb
mov
stos
jge
sub
and
fbld
cmp
add
outsb
adc
xchg
add
jae
sub
xor
ud1
pop
js
xchg
adc
push
xor
push
push
js
mov
mov
cmp
fdivr
mov
mov
jo
mov
sub
call
leave
jns
mov
call
aaa
fbstp
test
add
pop
adc
push
fimuls
or
xchg
or
mov
fldt
lods
cwtl
repz
fiadds
jnp
jl
loop
jno
mov
js
ficoml
adc
sub
mov
imul
mov
icebp
sbb
inc
xchg
add
fildl
mov
lret
addr16
fidivrl
and
jnp
jg
das
jb
js
adc
inc
add
nop
add
int3
push
jp
push
cmp
dec
ljmp
xor
mov
mov
iret
enter
sub
mov
pop
inc
leave
dec
xchg
movsl
stos
icebp
sub
mov
xor
aaa
add
push
inc
test
pop
call
cmpb
loop
pop
jge
push
xor
loopne
frstor
and
fmuls
push
and
jbe
xchg
js
test
xchg
repnz
jmp
cmovs
dec
pusha
push
xchg
sbb
hlt
ja
es
dec
push
arpl
sbb
jg
inc
fs
and
les
mov
jb
shlb
dec
sti
sub
xor
lret
jl
loope,pn
repz
mov
push
inc
and
adc
arpl
cld
fisttps
jecxz
enter
push
sub
aas
mov
shlb
sub
xchg
sub
inc
cmpsl
adc
movsb
push
jmp
arpl
mov
inc
dec
cmp
lods
inc
or
pop
sub
sti
lret
sub
cmp
fidivl
prefetch
fwait
lds
xchg
lea
hlt
pop
ficompl
xchg
cmovno
in
hlt
push
sbb
sbb
cld
and
hlt
adc
jg
leave
int
mov
adc
stos
pusha
mov
add
jecxz
fistps
dec
insb
sub
inc
cmp
ret
sub
sbbb
jge
jmp
xchg
dec
cmp
test
dec
in
dec
ret
push
insl
push
and
push
and
adc
pop
cwtl
sub
movsl
dec
dec
and
xlat
enter
pusha
inc
and
jmp
gs
push
mov
insb
adc
mov
hlt
or
iret
and
icebp
movsl
or
cmc
pushf
jns
out
les
push
fimuls
adc
and
insl
jns
push
out
mov
inc
cmp
lcall
or
pop
inc
leave
jmp
mov
inc
arpl
cmpsl
sub
les
sub
jae
les
adc
outsb
cmp
lods
fildll
test
daa
stc
push
clc
pop
lret
ficoms
rclb
nop
cmp
ret
fcmovu
push
adc
js
test
stc
aaa
loop
imul
hlt
pop
inc
dec
icebp
sbb
mov
fmuls
xchg
popf
mov
mov
cmpsl
mov
into
pop
icebp
dec
and
shlb
stos
inc
pop
dec
insl
jo
sub
and
xor
vmwrite
shrb
test
incb
lea
xlat
gs
xlat
cmp
inc
mov
lahf
cli
cld
add
lods
push
int
mov
lods
dec
mov
ljmp
push
pop
cli
enter
jno
or
push
repz
outsl
mov
mov
int3
jg
loop
movsb
mov
adc
or
ret
jb
in
jo
repz
insb
mov
ret
adc
jmp
iret
jne
jbe
cmc
movsb
clc
popf
mov
xchg
sbb
jge
xchg
add
adc
fsts
jmp
add
pop
mov
push
scas
into
xor
and
mov
jne
in
dec
push
andb
pop
dec
and
sub
or
test
data16
sti
scas
sbb
inc
mov
cmp
les
fdivs
lock
insl
pop
clc
jns
mov
hlt
lods
inc
adc
lock
push
and
xor
push
sub
inc
dec
les
mov
loop
xchg
push
adc
dec
sub
inc
adc
lret
dec
adc
clc
clc
test
dec
xor
push
add
sbb
shlb
mov
insb
cld
xor
es
cmc
popf
push
jp
loopne
mov
mov
mov
fisubrs
test
ficoms
jp
out
mov
pop
dec
aaa
int3
ficompl
icebp
cmpsb
popf
popl
pop
or
inc
jbe
push
cmpsb
mov
icebp
movsb
adc
push
push
xchg
mov
push
fwait
add
jp
js
or
mov
jp
xchg
sub
insb
pop
xchg
mov
jo
out
scas
and
iret
sti
jno
outsl
sbb
inc
pop
adc
push
push
and
nop
sti
jp
inc
sbbb
xchg
loopne
sub
xor
or
inc
mov
cmp
mov
or
push
pop
orl
mov
loop
or
loop
sub
out
outsb
push
push
imul
push
into
sbb
push
mov
aaa
dec
mov
adc
jns
lods
fisttpll
lret
movsl
dec
push
adc
jno
scas
sub
out
and
jne
xor
pop
xchg
xor
adc
sbb
xor
xlat
test
arpl
gs
add
popf
push
xor
mov
mov
inc
inc
fdivs
push
pop
xchg
pop
cmp
cmp
xorb
aas
lods
push
gs
mov
out
xchg
aas
dec
loope
orb
cmc
pop
aaa
divb
xchg
and
ja
in
std
aam
mov
mov
cmp
jg
push
int3
lods
jno
fwait
addl
push
int3
adc
iret
out
js
sub
mov
xchg
sub
add
out
jnp
push
imul
mov
pop
repz
ficompl
lea
daa
inc
sub
clc
jg
cmp
adc
adc
fucomp
adc
fwait
sbb
sbb
xchg
xor
sarb
dec
or
clc
popf
outsl
adc
das
fwait
inc
or
pop
mov
push
and
sbb
ljmp
sbb
sti
call
cltd
imul
ret
popa
ja
sub
xchg
mov
and
sbb
ja
rcl
dec
lcall
das
in
mov
push
mov
mov
cld
push
repnz
hlt
cmp
inc
and
adc
xor
rolb
cmpsb
or
sarb
lret
push
outsl
jne
inc
jno
aaa
mov
xchg
loop
add
imul
mov
jl
sbb
pop
fstl
sti
lret
loope
in
cmp
cmp
and
xor
pusha
jmp
pop
aas
call
fs
pop
insl
rol
sbb
xorb
fwait
aaa
and
mov
rorb
mov
cmp
inc
andl
mov
mov
shl
sarl
dec
mov
dec
cli
scas
aad
cltd
pop
cmp
adc
int3
pop
setne
es
fistpll
cli
mov
inc
cmp
ror
mov
pop
push
mov
pop
push
pushl
jo
loope
into
jns
aaa
enter
mov
stc
cmc
pop
add
and
add
test
movsb
jnp
scas
bound
aas
into
cmpl
fwait
dec
xchg
pusha
popa
xchg
push
adc
adc
test
or
sub
push
in
cmpsw
daa
pop
sub
cmpsb
xor
cmp
cmp
cmp
stc
pop
ficompl
push
aad
adc
and
pushf
cmp
js
stos
loope
jae
loop
xor
jno
xor
leave
inc
push
xorb
jo
jp
loop
sbbl
jl
jmp
scas
xor
xlat
outsb
shrl
mov
jp
das
hlt
cld
std
adc
sti
sti
dec
sarb
cli
and
mov
cmpsl
imul
stos
add
or
jmp
xor
adc
xlat
jne
outsl
je
fiadds
in
jbe
jnp
and
cmp
mov
sahf
popf
test
pop
daa
push
out
stos
imul
sub
adcb
cmp
xchg
ds
enter
jae
sbb
fcomps
cs
fstpl
in
out
mov
xorl
mov
mov
mov
cmp
xchg
pop
stc
call
enter
div
addr16
movsb
sub
jp
stc
lcall
push
jb
mov
xorl
stos
cs
adc
jb
mov
popf
cltd
pop
stos
movsb
sahf
pop
xchg
out
push
fisubrs
cmp
cmp
test
mov
loope
scas
ret
lret
add
mov
cmpsb
and
dec
sub
lcall
enter
jns
xlat
add
sti
decl
ret
jg
out
jl
and
lea
or
sub
loop
sbb
outsl
mov
mov
fists
out
outsb
mov
or
or
xchg
arpl
ljmp
js
dec
jno
lahf
jge
push
mov
shr
push
adc
jae
hlt
cmp
hlt
lcall
or
mov
inc
cmpsb
jbe
jmp
mov
sbb
jnp
adc
pop
out
outsb
popa
push
mov
sub
cmp
imull
shll
jae
in
ja
pop
pop
negl
out
into
pop
scas
cli
nop
cmp
psubusb
sbb
mov
test
jge
xchg
sbb
fsubs
inc
cmpsl
ja,pn
jg
pop
xchg
xchg
jmp
data16
mov
flds
shlb
loop
adc
jae
jmp
into
pop
and
sbb
and
and
xchg
xor
jg
icebp
repnz
idivb
pop
pop
or
mov
add
test
hlt
in
aad
jecxz
mov
add
lret
inc
add
outsl
shll
stos
adc
cmc
out
add
push
lcall
mov
lods
lock
test
or
sahf
jle
pop
jge
adc
rorb
pushf
test
sti
in
push
imul
call
shlb
mov
out
jl
fsubrs
pop
hlt
outsb
push
add
jmp
push
mov
adc
add
divl
mov
inc
pop
cmp
fwait
int3
xchg
cmpl
shrl
cs
adc
lods
push
scas
jbe
lods
push
or
movsb
and
mov
icebp
dec
repz
adc
mov
dec
pop
dec
insl
pop
fldenv
or
fnstsw
fstl
test
sub
mov
fldenv
aam
lock
imul
pusha
js
or
sahf
rcrb
fisttpl
dec
mov
lret
sbb
iret
or
cld
enter
jo
pop
insl
in
frstor
lods
pop
popf
inc
clc
sbbl
notb
out
repz
in
fimull
test
mov
stos
das
fldl2e
mov
jmp
cmp
pushf
push
push
rorl
dec
adc
dec
sahf
mov
aam
fadds
pop
stos
aaa
mov
push
mov
fucomp
mov
xor
mov
sbb
xchg
mov
sahf
pop
mov
fimull
loop
push
mov
push
icebp
int
repnz
rolb
pop
xchg
fmull
loopne
ret
pop
mov
add
cld
fldcw
shll
out
enter
inc
andb
jns
mov
fildl
xchg
jg
and
ljmp
adc
sahf
scas
loop
push
std
mov
mov
daa
mov
jmp
fldenv
xchg
outsl
jl
movq
mov
popf
jne
in
mov
add
imul
aad
lahf
mov
or
mov
inc
jns
xchg
add
mulb
xchg
cmp
sahf
test
or
or
jnp
lcall
xchg
xor
adc
loop
xor
mov
rol
sub
lahf
les
shlb
push
sub
out
mov
mov
in
je
xor
fwait
popf
xchg
test
ret
add
fisttpl
aas
adc
popa
cmpsl
mov
cmp
dec
mov
cmp
or
push
addr16
test
test
jge
pop
enter
in
jl
imul
cmpsb
mov
outsb
into
test
mov
dec
aaa
or
adcb
fisubrs
pusha
es
clc
jo
outsl
out
xchg
mov
mov
mov
popf
iret
mov
imul
stos
dec
test
dec
jl
bound
xchg
adc
int
lock
jp
sub
dec
jecxz
jmp
bound
out
pop
pop
push
and
sub
fidivs
test
nop
popf
add
xchg
xor
sub
mov
xchg
adc
icebp
pop
dec
mov
dec
cli
imul
popf
and
adc
lock
cld
dec
dec
xchg
and
and
jg
adc
sbb
push
xchg
stos
leave
lcall
push
mov
les
sbb
js
jae
mov
mov
int3
int3
dec
sub
xchg
cld
jp
stos
xor
xchg
les
push
dec
mov
cmpsl
lods
sbb
cs
push
rorl
xor
inc
adc
repnz
fmulp
xor
mov
psrlq
push
mov
push
lods
das
dec
adc
xor
mov
je
push
adc
stos
scas
out
cltd
in
ds
or
imul
sub
push
lds
imul
add
jb
and
cld
cmpsl
add
mov
and
fisubrl
xchg
pop
in
adc
fcmovne
ja
inc
cmp
push
loope
mov
mov
dec
fisubrs
movsl
sub
sbb
int
andb
jg
sub
dec
jp
jle
ret
dec
sti
je
fmuls
mov
data16
sub
xchg
inc
repz
sub
inc
cmp
cmpsl
xlat
sahf
and
xchg
add
mov
xchg
mov
mov
ret
insb
in
xor
xor
inc
loop
dec
addr16
pop
bnd
fsubrs
into
fsubrs
sub
mov
imul
in
adc
imulb
mov
rorb
lahf
xchg
xor
das
mov
jecxz
cmp
or
cli
or
push
pop
aaa
loope
test
loop
out
mov
es
adc
sub
rcrb
jmp
push
imul
pop
add
repz
cmpsb
adcb
pop
jmp
ficoms
and
stos
adc
adc
outsl
mov
fimull
test
lahf
imul
xor
sub
add
dec
cmp
mov
pusha
xchg
lahf
jno
adc
sub
test
leave
mov
sub
cs
or
or
lret
mov
stos
mov
xchg
ret
mov
int
lcall
xchg
out
repz
inc
lcall
arpl
out
pop
inc
call
pop
loopne
iret
dec
inc
add
and
push
push
pop
mull
int
and
sub
pushf
cmpsb
sub
mov
out
cmp
scas
or
cmp
cmpsl
cmp
adc
fstps
mov
das
xor
mov
leave
lock
push
mov
fcmovne
xor
loop
les
lods
and
cmp
cmp
icebp
mov
add
movsl
or
mov
loopne
inc
sahf
fcmovnbe
jp
xor
xor
shlb
shl
jge
daa
les
mov
dec
fs
nop
andl
iret
mov
inc
mov
xchg
and
dec
mov
mov
cmp
push
lds
mov
nop
loop
xchg
mov
lret
popa
and
xchg
lods
fsts
rcrl
mov
pop
addr16
adcl
add
cmpsl
cltd
scas
jae
mov
cmp
fisubs
je
lds
xchg
or
ret
clc
pop
mov
imul
filds
ljmp
fidivrs
mov
jbe
mov
sahf
xor
adc
in
std
andl
cmp
ret
pushf
daa
cld
sahf
data16
lods
rolb
mov
pop
aad
arpl
sub
iret
fadds
shlb
xor
aaa
stos
cmpl
andl
ja
pop
mov
jbe
add
xor
jge
sub
cmp
movsb
fs
xchg
lcall
sbb
adc
imul
enter
repnz
xor
jecxz
test
fistpl
xchg
ss
icebp
or
xchg
cmpb
cmpl
stc
scas
lahf
outsl
movsl
invd
shrl
in
fldt
in
enter
scas
ret
inc
adc
mov
mov
sbb
pop
fucomp
push
scas
mov
push
sbb
xchg
pop
xchg
cmp
movsl
sar
jbe
xchg
pop
fsub
loop
sahf
fdivrl
fistl
or
imul
mov
and
shlb
lcall
fsubrl
popf
lock
lock
mov
sub
shr
jno
sbb
pop
inc
push
dec
inc
dec
sbb
lcall
fdivr
fidivrl
jb
pop
jp
sub
jg
mov
iret
pop
pop
ret
cs
mov
out
lret
mov
mov
clc
ss
movsl
inc
lcall
mov
sub
pop
lods
mov
and
push
sub
add
cli
add
adc
or
aaa
xor
mov
dec
pop
pop
add
cmpsb
in
into
and
std
ret
aaa
test
push
sbb
mov
in
push
loop
int
jg
jmp
xchg
clc
jp
and
cmc
ret
sbb
jmp
cmp
inc
ficompl
xor
icebp
xor
subb
mov
bound
mov
cli
aad
jb
int
inc
sti
imul
test
xchg
sub
test
cmpsl
fdivr
adc
ret
push
addr16
sbb
int3
lods
sti
xchg
and
pusha
dec
xchg
cmp
mov
jns
jg
test
shll
test
rorb
pusha
pop
inc
xor
or
add
out
das
call
lods
and
add
inc
shrb
push
fimull
neg
mov
dec
repz
adc
adc
decl
sbb
mov
scas
pusha
fnstcw
cmp
or
fstpt
lcall
mov
inc
dec
push
sbb
and
aam
xor
fs
xchg
into
adc
cld
ja
adc
mov
stos
pop
pop
jno
in
push
in
insb
add
aam
in
sbb
fistl
divb
mov
and
test
lahf
bound
pop
sub
lea
cmp
add
lret
pop
jb
in
jp
pusha
lods
decb
and
jns
aaa
or
xor
insb
mov
cltd
cmc
cmp
orb
adc
std
sub
mov
in
or
inc
lods
aad
movb
pusha
mov
je
sub
outsb
enter
rorb
dec
jp
sbb
dec
jl
jle
call
bound
mov
cld
xor
ja
inc
push
pop
dec
pop
dec
in
xlat
cs
inc
in
leave
cltd
notl
shr
mov
inc
push
cmp
popa
mov
jge
std
addr16
sub
xor
xchg
xor
cmp
push
pop
sub
enter
adc
xchg
loop
sub
loopne
fwait
push
cmp
xor
mov
rcll
daa
std
fnstcw
out
sti
in
mov
inc
pop
add
sub
cmp
push
dec
mov
ficoml
aad
sarb
xchg
push
and
jmp
adc
lret
pop
sub
hlt
rcrl
lahf
scas
push
mov
jecxz
inc
out
mov
jle
lahf
cmp
push
sub
sub
dec
mov
popf
in
dec
mov
cs
dec
or
and
push
inc
mov
outsl
faddl
push
rorl
pop
iret
dec
push
pop
lret
dec
pop
mov
fidivrs
jne
sbbb
or
mov
jg
shrl
iret
clc
adc
and
ret
aas
in
imul
aad
ret
pcmpeqb
fdiv
in
adc
sub
hlt
out
sbbb
out
lea
ljmp
mov
jl
dec
fidivl
loop
icebp
idivb
leave
cmp
sub
push
sbb
js
cli
dec
push
ret
xor
inc
sbb
dec
pusha
addr16
jmp
or
shl
xchg
adc
jge
add
adc
xchg
out
adc
shr
fstps
aaa
or
add
js
out
jbe
imull
iret
dec
push
lods
adc
addl
stos
out
xchg
mov
fsts
lret
push
outsl
sbb
stc
div
jecxz
cmpsb
push
mulb
xchg
fstl
jb
negl
in
aaa
mov
cmc
jmp
and
loop
inc
mov
cmp
adc
nop
movb
std
test
rclb
inc
jecxz
sub
insl
jl
test
and
mov
stos
mov
subl
mov
adc
dec
pop
cs
fcoml
sub
lret
adc
push
fisttpll
lahf
sbb
hlt
fsubrl
out
out
stos
adcl
pop
pop
daa
jge
fdivrl
mov
dec
idiv
out
sbb
jno
testl
stos
jbe,pt
pop
ja
enter
xchg
mov
pushf
cld
pushw
in
out
pop
mov
xchg
mov
xlat
ds
addr16
sub
bound
jl
clc
mov
nop
and
in
jae
clc
ljmp
les
orl
mov
adc
aas
incb
leave
popa
mov
sbb
push
popf
mov
jmp
mov
lock
push
cwtl
lock
jnp
pop
add
push
out
add
xor
jmp
into
ja
in
mov
sbbb
xchg
call
and
test
aam
xchg
sbb
xchg
pop
inc
popw
insb
adcb
xchg
fcmove
outsl
mov
pop
dec
sub
aas
xor
rcrl
sbb
jne
cmp
jno
out
inc
movsb
xchg
lods
outsl
xchg
icebp
pop
popf
cmp
sbb
addr16
mov
mov
lahf
push
mov
hlt
fldl
stos
out
pop
cli
ret
test
imul
es
push
es
clc
mov
xlat
push
jae
pop
pop
fdivrp
xchg
xor
testl
out
insb
int3
mov
sub
or
sahf
test
add
jbe
sbb
inc
mov
jecxz
aaa
nop
es
out
sti
cmp
cmp
in
jno
sbbl
push
mov
ret
fidivl
dec
mov
rcr
cli
pop
in
mov
ret
adcl
packssdw
sbb
ret
xchg
aaa
arpl
sti
dec
lock
jmp
mov
test
int3
out
mov
add
fmul
imul
cmp
and
mov
dec
jecxz
push
pop
fsubs
ja
and
call
add
pop
inc
add
repz
inc
sbb
mov
jno
aaa
add
pushf
popf
fstpl
in
dec
pop
xchg
inc
aam
inc
jp
inc
sbbb
es
xchg
les
addr16
subb
out
cmpsb
mov
pop
rcrb
cwtl
or
stc
loop
lcall
inc
cld
ds
pop
gs
andl
adc
cltd
in
popa
out
ljmp
js
out
add
outsl
push
adc
or
adcb
xchg
imul
sbb
sbb
jne
inc
je
and
mov
and
sti
sahf
sbb
iret
pop
add
push
mov
pop
jns
popf
sub
mov
out
aam
pop
mov
icebp
shlb
and
jbe
mov
das
aad
inc
inc
mov
push
pop
pop
fdivrs
xchg
adc
sbb
and
jmp
movsl
out
fnsave
add
inc
mov
out
fwait
shll
mov
pop
xor
sub
outsl
loopne
inc
mov
lods
xlat
loop
iret
ss
fidivrs
adc
dec
mov
push
pop
outsl
sbb
xchg
sbb
ljmp
mov
into
and
mov
mov
aas
sub
scas
popf
js
jle
sub
stos
inc
mov
jge
ja
outsl
cli
insb
sub
push
mov
lods
data16
mov
or
add
inc
jmp
loop
pop
cmp
popa
jl
cmp
ror
add
dec
mov
movsb
mov
jnp
and
cmpsl
pop
jg
lcall
pop
xor
jle
std
and
inc
or
xlat
pusha
in
dec
das
dec
jno
out
push
bound
mov
sti
jb
je
mov
add
inc
lret
out
push
mov
and
jns
sbb
mov
jne
pop
pop
add
bound
mov
xchg
rcl
daa
lods
and
add
jge
adc
aaa
pushf
pop
pop
push
add
mov
test
clc
mull
push
mov
xchg
stos
lea
js
mov
stos
push
xchg
stos
ret
add
out
cwtl
addl
shl
jne
add
cmp
in
mov
in
aad
aam
jmp
ror
xchg
jns
sbb
stos
pop
ret
aad
aaa
or
out
or
xor
sub
mov
add
cmpsb
es
dec
jl
ss
popa
es
cli
jne
xchg
in
mov
leave
xchg
sub
and
mov
loope
jecxz
dec
mov
pop
scas
cltd
std
negl
cmpsb
fidivrs
repz
shlb
sbbl
out
jge
andb
movsb
push
sub
jl
out
sub
repnz
push
push
in
xchg
imul
out
les
jge
rcll
or
add
jo
enter
mov
mov
lods
sti
and
and
sub
fadd
dec
push
cmpsl
add
pop
scas
les
xchg
lahf
jge
imul
push
out
leave
sub
pop
push
adc
or
xchg
jge
mov
mov
in
push
sbb
add
jge
sbb
dec
ljmp
in
loopne
pop
out
push
scas
mov
mov
jp
adc
adc
push
mov
data16
cwtl
xor
insl
ret
mov
dec
addr16
fmull
pop
lea
or
jnp
outsl
push
outsl
cmp
icebp
or
xchg
mov
in
adc
sbb
mov
dec
gs
in
xchg
dec
aas
icebp
das
out
sub
mov
push
pop
lods
popl
dec
lods
pop
ficoml
xor
cld
jns
mov
shll
stos
in
shlb
cli
fimuls
int3
add
fdivr
and
add
movsl
das
pop
sti
adc
mov
or
lods
xchg
aaa
inc
cltd
dec
out
push
jb
sbb
push
xchg
add
mov
sbbl
jbe
arpl
push
sub
loope
or
outsb
scas
ljmp
inc
addb
inc
xchg
inc
shrb
adc
add
mov
xor
pusha
adc
insl
jmp
add
and
js
push
xor
pop
ljmp
add
jl
lds
dec
imul
stos
stc
push
xor
sub
pop
cmpsl
add
daa
popf
xchg
test
xor
mov
arpl
xchg
fsubrl
rorb
xor
cs
mov
xorb
adc
fs
and
int
xchg
movsb
pop
into
or
js
mov
jge
dec
xchg
outsl
sub
pop
pop
mov
das
mov
and
jb
std
and
xor
in
mov
jge
in
and
inc
lock
jb
mov
mov
mov
push
leave
sub
shl
sub
and
out
inc
mov
lock
lret
in
xchg
cmpsb
and
bndldx
mov
cmc
fwait
ret
lock
bound
or
pop
loopne
pop
outsl
jo
adc
adc
sti
or
and
jl
addr16
repz
pop
daa
inc
int
sbb
push
cmc
call
popf
mov
inc
lret
jo
push
call
lods
arpl
push
fwait
mov
jl
fst
shlb
stos
push
jecxz
and
in
cmp
and
lret
test
or
sbb
jecxz
dec
and
jl
leave
push
adc
shr
jmp
call
aas
shl
sbb
hlt
daa
xchg
shll
xlat
dec
mov
inc
and
xor
es
inc
pop
push
in
inc
shlb
sub
mov
aad
push
jno
test
pop
or
ljmp
lods
fdivr
sub
jb
mov
aaa
fadds
xor
cli
or
xor
jae
rcrl
pop
loopne
fsubs
jecxz
push
xchg
add
std
or
pop
pop
jecxz
jns
xor
jecxz
xchg
adc
pop
jbe
pop
fnsave
cmp
and
jge
cmp
push
aas
lock
sar
dec
push
loope
popf
mov
inc
popf
dec
outsb
rorl
nop
jecxz,pn
popf
jae
pusha
xchg
rorl
xchg
push
mov
dec
mov
repz
out
inc
das
cmp
in
mov
and
jns
pop
dec
ss
iret
mov
lcall
imull
fldz
adc
cmp
or
push
inc
addr16
pop
jne
inc
fldenv
int3
std
and
mov
adc
pop
jnp
xchg
jmp
repnz
inc
scas
rcrb
fwait
ja
and
leave
xor
mov
in
pushf
stos
data16
xlat
push
sti
or
sti
mov
and
sbbl
gs
push
pusha
xlat
daa
mov
xor
fcoms
test
roll
push
mov
mov
adc
loopne
aam
movsl
out
ret
push
loope
push
or
rcrl
std
or
push
and
cmp
dec
lret
xchg
lods
xchg
in
pusha
std
stc
mov
movsb
test
sub
rorl
jp
push
fdivrs
xchg
leave
push
and
scas
mov
push
addr16
jg
in
push
sbb
insl
xor
jbe
enter
btr
fnsave
roll
scas
sbb
and
mov
adc
xchg
mov
out
outsb
jecxz
enter
out
sahf
xchg
out
mov
jb
sub
mov
jb
out
pop
xor
jnp
aad
push
fiadds
sub
aam
aam
adc
pusha
insl
scas
shll
mov
fstps
cmpsb
lcall
add
jne
adc
and
push
or
out
out
and
sbb
cld
xor
addr16
loop
mov
and
cmc
cmpsb
mov
pop
push
repnz
inc
rorl
xor
dec
sbb
dec
out
mov
ljmp
cmpsb
add
mov
out
js
insb
shlb
mov
inc
jbe
inc
dec
stc
cmp
push
outsb
sub
xor
fsubrs
adcl
inc
mov
pop
loop
cmp
xor
mov
dec
mov
adc
lock
je
jmp
std
pusha
push
pavgw
loop
inc
hlt
jbe
sarb
aam
decb
bound
pop
test
xchg
ror
jbe
es
push
push
js
sbb
xchg
in
mov
stc
cwtl
mov
aas
adc
shlb
pop
pop
sbb
jae
outsl
xor
inc
mov
into
pop
pop
scas
daa
vpsrlq
aad
dec
sbb
repnz
shrl
or
mov
add
aam
dec
push
stos
sbb
jge
ds
lds
dec
pop
and
ja
xchg
popf
loopne
cmp
sub
pop
subl
xchg
sar
push
test
out
jmp
fldcw
pop
ja
test
mov
ret
popa
stc
sahf
and
int
push
pop
sahf
fcoms
mov
ret
leave
mov
decl
adc
repz
clc
hlt
fiaddl
jae
pop
xchg
addl
cltd
xor
push
call
leave
push
ret
lock
jbe
repz
rcl
aas
mov
fldl
adcl
dec
lret
arpl
stos
add
lcall
or
cli
jo
adc
stc
outsb
mov
sbb
stos
cltd
dec
mov
dec
adc
mov
add
xor
fsubr
idivl
mov
fistl
rcrb
pop
dec
fsubrl
and
push
es
cmp
jle
rcrl
push
pop
sti
cmpsb
xor
insb
sub
repnz
outsb
out
add
xchg
mov
push
cmpsb
sbb
xor
jns
fmul
scas
test
mov
mov
imul
jge
pop
ficomps
push
ss
dec
fistpll
popf
repz
and
cmpl
or
xor
mov
sti
ljmp
cltd
cmp
pop
iret
xor
lods
cmc
inc
pop
imul
daa
dec
loopne
push
sbb
repz
sbb
add
sbb
stc
out
in
in
js
jge
push
int3
nop
jg
sti
addr16
pop
push
add
sub
cltd
cwtl
pusha
sbb
bound
mov
push
mov
movsl
jecxz
addb
dec
mov
push
out
mov
cmp
daa
shll
dec
adcb
sub
ficompl
adc
rcr
xor
xchg
mov
inc
lahf
push
push
lcall
fs
sbb
push
inc
mov
cmp
popa
pop
xchg
std
daa
xchg
mov
push
pop
movsl
and
jmp
ret
push
in
shll
pop
arpl
push
jns
jne
fwait
and
shlb
adc
and
mov
outsb
cmp
adc
mov
in
add
xchg
stc
in
mov
jp
das
inc
or
jnp
sub
ljmp
ja
lds
in
fldenv
jle
xchg
repz
jno
dec
mov
and
jmp
sub
pop
pop
jb
adc
dec
mov
lcall
push
xchg
sti
sub
sbb
dec
dec
lahf
mov
adc
mov
stos
cmp
shlb
ja
jecxz
sbb
outsb
in
cmpsb
test
jle
icebp
in
sbb
loopne
mov
push
jae
pusha
pop
bound
and
push
or
popf
repz
out
cmp
adc
or
daa
arpl
icebp
mov
mov
mov
outsl
dec
jo
push
mov
sub
stos
and
orl
push
mov
cmp
and
sbb
jp
rclb
adcb
inc
dec
mov
mov
sbb
sub
fstpl
pop
sbb
ljmp
sarb
icebp
sbb
fnstenv
mov
or
je
fcmovnu
nop
adc
adc
scas
mov
and
dec
mov
sub
cld
xor
ja
mov
mov
push
rcl
xchg
iret
xchg
mov
in
je
jno
fdivs
jmp
dec
pop
lds
lock
pop
dec
cmp
arpl
dec
mov
xchg
dec
mov
div
aaa
cmpw
mov
int3
rcll
lds
pop
inc
jecxz
fcmovnb
ljmp
and
jg
decl
inc
jl
pop
bound
rclb
pop
cmp
decb
mov
sbb
xchg
and
lods
test
or
imul
sbb
mov
and
or
cs
jmp
jp
cmp
int
and
bound
pop
int
mov
cmp
cmp
arpl
call
pop
enter
xchg
arpl
out
pop
sti
scas
jnp
jae
push
mov
inc
sub
enter
ficomps
or
push
or
mov
xchg
lret
mov
pop
dec
nop
das
fcmovnb
int
dec
insl
push
nop
cs
ret
inc
clc
and
loop
cmp
enter
fisttpl
inc
enter
and
fwait
icebp
pop
push
std
sti
xlat
mov
ficoms
add
in
sub
cmp
aad
inc
mov
jg
push
jb
mov
int
leave
add
push
and
mov
repz
inc
sbb
bound
ljmp
pop
cld
sbb
mov
js
push
andl
jl
mov
rcll
inc
cmc
lea
nopl
or
sbb
call
jnp
inc
inc
and
pusha
repz
cld
aaa
fdivs
sbb
leave
xchg
lods
enter
xchg
pop
lcall
and
iret
cli
xchg
dec
lret
push
subl
pusha
aas
jne
mov
xchg
mov
mov
xlat
mov
dec
or
adc
xchg
addl
scas
js
fs
cmc
jmp
add
sub
lret
cli
std
bound
fldcw
test
and
ret
in
sbb
mov
arpl
mov
sub
scas
mov
hlt
test
cmpsl
push
cmp
push
ds
pushf
mov
sbb
in
cmp
sub
sub
outsl
aaa
insl
inc
xchg
mov
cs
es
jmp
push
cmpsl
xor
repnz
inc
add
fwait
and
mov
jl
cld
add
out
test
jae
roll
adc
ss
fiaddl
jl
sbb
fisttpl
jg
pop
mov
inc
insb
mov
outsl
cli
xor
jp
in
jae
push
dec
push
lcall
cmp
push
push
fsts
fwait
xor
test
dec
dec
mov
lcall
loope
lea
fistps
jmp
ret
jmp
mov
mov
addl
mov
int3
icebp
mov
movsl
and
adc
lcall
testl
sbb
pop
ret
xchg
cld
test
rorb
cmpsl
dec
nop
nop
add
jge
and
mov
rorb
mov
rolb
inc
scas
inc
sbb
push
in
inc
mov
adc
mov
cmpsl
pop
pop
rolb
inc
dec
push
jno
fst
jbe
jno
aas
test
ja
or
or
lock
cmp
cmp
cmp
cli
daa
jns
cmpl
test
jae
inc
ljmp
mov
push
enter
mov
cld
inc
sbb
insl
mov
xchg
pop
mov
loopne
sbb
and
push
into
lea
int3
ret
cmp
call
cwtl
and
jo
fisubs
dec
push
pop
mov
ret
scas
nop
mov
aad
pop
sbb
daa
jle
and
fisubrl
dec
lods
push
call
adc
lcall
ret
bound
sub
inc
stc
or
pop
mov
xchg
out
repz
sub
aad
inc
movsb
inc
call
cs
mov
ret
add
les
pop
sbb
jae
or
adc
inc
mov
icebp
dec
xchg
sub
jecxz
lock
mov
mov
cmp
stc
xor
xor
filds
jp
or
aam
int3
lods
lea
pop
ljmp
cltd
push
test
or
dec
mov
ljmp
jno
arpl
mov
sbb
cwtl
fcompl
stos
cmpl
and
sbb
cmpsb
cmp
les
notl
jmp
lret
lahf
fsubrs
sub
shll
test
inc
ret
xchg
cs
lods
in
adc
out
out
sub
mov
add
pushf
insb
xchg
dec
cli
pushf
addr16
jno
lcall
and
addr16
xor
iret
and
fidivs
in
mov
test
xchg
sarb
lds
dec
mov
fs
test
cmp
add
rol
mov
push
pushf
mov
push
xor
arpl
add
lret
ror
cmp
pop
cmp
push
inc
lods
hlt
cwtl
mov
insl
dec
inc
ret
mov
xor
iret
sbb
outsb
in
insl
insl
stos
imul
outsl
xchg
mov
cmp
popa
jmp
jecxz
decl
rcr
rclb
call
sub
imul
dec
xor
lea
xor
aaa
in
inc
leave
jl
call
cmc
stos
jge
cld
push
arpl
loopne
pop
pop
adc
fwait
push
xor
jne
es
pop
xchg
loopne
bound
dec
mov
test
arpl
sbb
out
lret
std
dec
sbb
movsl
cmpsl
nop
sbb
lods
test
adc
xchg
jbe
xchg
cmp
orl
push
mov
leave
mov
je
outsl
push
cmpsb
cmp
adc
decb
add
jno
xchg
dec
or
xorps
iret
mov
int
fwait
jbe
pop
scas
loop,pn
out
lret
sbb
je
insl
inc
pop
mov
dec
xor
mov
movsb
mov
addr16
dec
cli
sub
es
pop
loope
xchg
xor
xlat
imul
add
test
fwait
or
cmp
in
lods
inc
stos
add
cmc
stos
pop
test
repz
push
mov
cmc
sub
test
sub
sub
push
push
and
and
mov
je
jbe
repnz
pop
jg
and
int3
test
or
push
pop
jbe
sub
inc
add
cmp
fisubs
scas
sub
rclb
les
mov
mov
nop
pop
addr16
outsl
mov
aam
cmp
imul
outsb
dec
mov
mov
inc
add
push
and
out
mov
ret
or
mov
pushf
stc
pop
xchg
aas
or
and
mov
mov
jb
movsb
jb
pop
adc
loop
xchg
push
cmc
pop
xchg
jle
sbb
jp
aaa
mov
cmp
push
stos
jg
stc
mov
jns
ret
push
mov
dec
test
push
mov
mov
mov
sub
xchg
jmp
pop
mov
aaa
test
push
xor
lds
ljmp
mov
inc
fldcw
pop
sahf
jecxz
push
sub
loopne
ret
sbb
lods
test
dec
cmpsl
ljmp
add
sub
jne
adc
pushf
cmp
push
xchg
jmp
cli
test
scas
sti
mov
cmpsl
sti
shll
mov
jg
push
pushf
fstps
pop
rcrb
fcmovnb
push
add
rcl
out
bound
test
scas
sti
std
cmp
daa
int
gs
push
daa
mov
aas
xor
mov
sarb
fnsave
xchg
pushf
pop
decb
push
xor
sbb
scas
cmp
sub
addr16
add
dec
inc
mov
stos
aam
and
sbb
mov
mov
nop
mov
in
and
lcall
sbb
aam
xlat
pushf
jl
inc
push
xchg
lock
mov
jg
inc
testl
sbb
inc
repnz
sahf
jb
pop
pop
aas
fistpl
sar
and
mov
aad
arpl
aas
sbb
mov
lea
lods
xchg
mov
sub
adc
push
in
loope
mov
outsb
jns
popf
addr16
mov
orb
jbe
stos
bound
jmp
scas
out
mov
push
jmp
js
leave
sbb
sti
cmp
xor
into
adc
in
lret
jl
add
cmp
lds
hlt
and
repnz
pop
inc
hlt
enter
jnp
jg
push
push
pop
jl
stc
add
in
xchg
sbb
leave
add
push
shrl
shl
repz
or
xchg
lcall
or
lret
xor
add
push
mov
gs
jno
les
pop
mov
das
add
and
rclb
push
scas
pop
mov
jl
fisttpl
out
inc
loop
jne
mov
xchg
xchg
cmc
adc
jmp
push
les
jg
push
out
cmpsb
add
jl
aam
jmp
movsl
xchg
cmp
mov
push
mov
or
cld
fsubr
sbb
cmp
lret
cmp
and
sti
mov
imul
pop
push
out
adcb
bound
mov
fcomps
push
cld
fldl
fwait
test
inc
push
pusha
rolb
adc
scas
andb
push
mov
mov
out
mov
and
push
mov
in
lret
addr16
push
es
push
mov
and
in
push
push
xor
sahf
fisttpll
inc
inc
fdivr
inc
lret
rorl
dec
mov
loope
cwtl
push
add
jns
movb
xor
jle
test
pop
sahf
push
push
iret
mov
sbb
addr16
and
or
es
out
aas
pop
outsb
inc
in
das
cmp
imul
inc
cld
mov
sub
mov
xchg
pop
incl
fwait
xchg
lret
xor
push
jno
ficoms
pop
mov
sub
pop
test
dec
add
sahf
shl
test
pop
cmp
stos
ss
push
loopne
out
std
add
test
shr
push
xchg
dec
and
mov
sbb
add
sbb
pusha
div
aas
aad
imul
inc
in
jne
std
jmp
int
mov
bound
add
push
fisubs
dec
jbe
cmpsl
push
js
js
insl
mov
das
popa
stc
pusha
in
loop
jg
push
xlat
pop
lds
or
jl
inc
and
pop
push
push
jmp
repz
out
dec
aam
std
mov
mov
test
decb
gs
sarl
bound
sub
addb
pop
into
test
shl
fwait
pop
mov
and
jp
cmp
sub
and
iret
call
clc
les
imul
repnz
jl
xor
or
sbb
sbb
rolb
cmp
imul
mov
into
xor
jns
pop
push
cltd
inc
pop
addr16
lods
insb
xor
push
jmp
pop
xchg
dec
inc
push
out
sub
push
lock
cmp
subl
lahf
mov
ja
and
nop
fs
shrl
ss
dec
cs
jno
stos
jo
jge
mov
xchg
ljmp
or
xor
movsl
adc
sbb
xchg
push
daa
stos
mov
lods
repnz
xor
adc
cwtl
loopne
mov
sti
adc
xor
cmc
adc
push
lret
in
push
aam
daa
fs
ljmp
mov
cmc
lret
xor
xchg
or
shrb
push
add
data16
cmp
xor
inc
xchg
or
arpl
mov
and
add
test
orb
sbb
imul
sub
mov
pop
mov
out
cld
movsb
bound
pop
sbb
mov
jl
stos
fadd
lods
stos
xchg
ja
popa
arpl
jmp
jle
push
pop
dec
scas
inc
and
test
mov
inc
mov
fcmovnbe
shrb
daa
lcall
andb
push
mov
or
mov
jg
add
inc
repnz
roll
xchg
and
repnz
pop
and
cmp
pop
sbbb
notl
inc
mov
or
test
enter
movsb
sub
pop
push
cltd
aam
lahf
xchg
pop
xor
xchg
jecxz
test
lods
push
cmp
notb
xchg
pushl
loopne
add
popf
mov
shll
fcmovb
call
xchg
jb
and
xchg
or
std
movsb
enter
fisubrl
cmpb
xchg
bound
jne
pop
add
popf
mov
cli
fs
lret
dec
stc
out
dec
lea
lret
leave
pop
add
ret
push
push
xchg
lods
mov
or
and
pop
xchg
xchg
into
out
loopne
push
in
fcomps
shrb
sub
ret
inc
mov
sarl
mov
es
push
sub
pushf
or
enter
mov
sti
insl
ret
xchg
mov
outsl
adc
mov
adc
iret
fwait
and
imul
fwait
addr16
fidivs
ds
inc
sub
sbb
or
into
icebp
jg
xor
outsb
pop
jno
push
mov
add
xor
cmpsb
mov
popa
xchg
cmp
xchg
xor
scas
lcall
jo
rcrb
jl
sub
test
add
xlat
scas
sbb
xchg
dec
repz
aaa
icebp
data16
sti
mov
dec
rol
inc
inc
xor
adc
ss
jmp
sub
or
and
mov
stc
lcall
adc
into
rol
in
mov
push
mov
xchg
pop
cmp
xlat
push
inc
jp
fcom
fnstenv
jg
mov
out
jbe
mov
aas
out
stos
pop
rclb
loope
adc
sub
movsb
fwait
and
push
fidivs
push
loope
sub
cld
rcrb
ss
out
sbb
ljmp
cwtl
addb
out
sarb
and
adc
pop
sub
stc
icebp
adc
movsl
sub
mov
cmc
cmp
ds
nop
cmpsl
and
dec
push
lds
or
cmp
inc
rolb
dec
out
push
ret
mov
push
mov
and
xchg
subb
nop
out
loope
xchg
push
jne
or
inc
mov
cwtl
div
shrb
mov
and
imul
loopne
mov
or
lcall
mov
jo
push
ds
jge
scas
lahf
dec
fcoms
sub
addr16
mov
lock
orl
mov
cwtl
or
inc
jmp
popf
and
xor
mov
dec
loop
jb
mov
mov
and
mov
and
pusha
je
shrb
dec
push
jecxz
xor
in
inc
fld
arpl
xchg
sbb
xor
fldl
mov
add
aas
lret
aaa
push
or
add
xor
shll
jnp
jae
xchg
xor
pop
ljmp
aaa
add
ss
xor
aaa
inc
fisubrs
dec
nop
lret
sti
push
mov
push
mov
xchg
xlat
addb
push
imul
xor
cmp
pop
test
lahf
js
mov
loope
mov
lds
aad
dec
bound
and
xchg
jno
ljmp
arpl
and
cmp
mov
sbb
dec
clc
cmp
mov
int3
testl
call
out
xor
scas
mov
lret
jp
aad
lret
lea
fwait
movsl
shll
push
pop
cmp
sbb
lea
adc
push
fisubl
arpl
xchg
cmpsb
cs
fmul
jmp
mov
add
push
mov
mov
clc
push
sub
jl
popa
xchg
dec
mov
push
inc
addr16
icebp
das
cs
lods
movsl
loope
mov
pop
arpl
imul
ljmp
cmpsl
lods
adc
xchg
aad
stos
push
jne
cmc
cmp
jne
es
pop
out
loope
incb
push
mov
jae
insl
lret
loopne
jge
jbe
dec
enter
stc
mov
inc
xchg
dec
inc
cmpsb
test
leave
mov
cmp
out
scas
loope
addr16
mov
add
cltd
or
push
dec
inc
xchg
cmp
nop
pop
clc
xchg
xchg
sub
fidivl
out
lret
shll
dec
movsb
push
stos
mov
adc
xchg
mov
sbb
jno
cltd
and
inc
mov
xchg
stos
cmpb
fcompl
jae
frstor
int
repnz
or
mov
fimull
outsl
loopne
adc
enter
and
pop
sbb
push
push
daa
test
lret
or
add
add
rol
cs
inc
mov
sub
insl
sbb
addr16
push
xorl
push
inc
jmp
jb
sbb
fwait
mov
in
cwtl
loop
dec
mov
push
push
std
repnz
xchg
test
adc
xor
fdivs
jmp
push
dec
int
sti
and
leave
mov
sti
pushw
aas
dec
cmp
lret
fadds
add
pushf
xchg
sbb
cmpsl
lcall
mov
pop
pop
jmp
pop
fmull
xor
mov
push
aas
mov
aaa
inc
mov
insl
iret
popl
cmp
inc
xor
xor
pushf
cmp
xchg
push
lret
sbb
dec
xlat
lock
cmpsl
sbb
fidivl
or
lahf
dec
or
and
inc
stos
mov
es
psllw
pop
enter
shlb
insb
insl
jbe
cs
insl
inc
adc
jmp
cmp
movsb
pop
int
sarb
int
sbb
adc
lods
push
inc
pop
lock
jo
push
sub
addr16
mov
jg
sbb
pop
int
and
and
pop
cmc
cwtl
fnsave
mov
lahf
dec
cmp
and
inc
ja
repnz
movsl
pop
jp
mov
repz
imul
pop
or
lahf
xchg
xlat
jle
xchg
leave
sbb
dec
xchg
loopne
mov
cmp
and
add
in
repz
daa
xchg
add
cmpsb
mov
adc
dec
xchg
and
stos
pop
cmp
lcall
nop
jae
push
xor
and
in
xor
cmp
jl
lds
push
stos
mov
repnz
iret
filds
scas
add
mov
xchg
adc
adc
jl
jb
hlt
push
int
cmpsl
lret
xchg
jp
pop
jne
jp
fldpi
sbb
cli
add
push
rolb
mov
mov
sub
cmpsb
ja
mov
adc
xchg
sbb
out
add
mov
bound
fsts
int
cs
mov
push
add
lcall
xor
push
into
xchg
lcall
jle
aas
call
inc
mov
lret
in
insl
or
mov
xor
movsb
inc
and
jge
mov
mov
subl
mov
cmpsl
cmp
or
adc
or
and
ja
adc
inc
mov
pop
aas
sbb
pop
fs
iret
loope
cli
push
add
jp
pushf
negb
cwtl
stos
cmp
stos
push
int
sarl
loop
out
mov
jle
mov
stc
dec
jg
lcall
lret
das
bound
gs
push
mov
xchg
mov
repz
lods
fwait
jmp
lcall
inc
xchg
std
into
cld
fstpl
test
inc
mov
addr16
mov
incl
xor
jnp
jmp
jmp
or
addr16
cmp
sbb
jmp
jnp
xadd
jmp
ret
xor
adc
sbb
push
faddl
nop
inc
fldl
push
mov
jge
adc
rcrb
stos
fistpl
jbe
push
sbb
cmp
repz
scas
mov
js
orl
add
mov
testl
dec
scas
je
sub
imul
or
mov
mov
cwtl
das
dec
les
ljmp
mov
out
and
or
cmpsl
mov
mov
cmpsb
mov
fs
lods
incb
sbb
movsb
xchg
dec
enter
adc
pop
adc
pop
test
inc
cmp
jno
jae
fwait
and
xchg
loop
sahf
sub
aad
lret
sbb
xor
add
sbb
in
adcb
stos
mov
aam
mov
and
xor
push
mov
push
adc
aaa
xchg
aad
jo
push
aad
loopne
push
jo
xchg
je
in
mov
imul
and
mov
in
es
push
fwait
jp
cltd
daa
inc
jbe
xchg
nop
sub
scas
in
jo
xchg
aad
cmpsl
jne
loope
xchg
aad
add
mov
pop
ss
mov
or
pusha
addr16
aam
push
les
mov
mov
clc
lret
roll
mov
mov
sub
into
dec
lock
add
lahf
and
xor
iret
or
movsb
xor
push
pop
outsb
cltd
rolb
push
mov
out
cmp
leave
outsb
imul
xchg
and
push
inc
mov
pusha
ret
cmpsb
mov
mov
cwtl
push
pop
addb
adc
jmp
outsb
adc
aam
iret
mov
nop
hlt
dec
insb
xchg
nop
iret
aam
cmp
stos
add
sbb
xor
adc
sbb
les
cmp
push
fwait
sbb
sub
cld
cmp
dec
mov
popf
notb
pop
jbe
mov
and
jmp
icebp
mov
xchg
cmpsb
jg
es
mov
test
push
leave
mov
sub
xchg
mov
not
ret
test
mov
ljmp
push
sbb
jae
aaa
das
fs
es
and
cmp
xchg
adc
sbb
negb
insl
imul
mov
add
xchg
jns
lret
pop
push
sub
addr16
cmp
pop
daa
sub
sbb
or
arpl
in
sub
fldenv
adc
and
jl
lods
mov
mov
pop
jno
outsb
mov
daa
icebp
mov
pop
xchg
sbb
sub
fcoms
push
push
pop
jb
xchg
jo
push
jl
mov
add
xor
jle
add
push
inc
cmpl
mov
push
xchg
and
sub
mov
xor
dec
and
xchg
sbb
xlat
sbb
sbb
call
cmc
pop
nop
lock
inc
push
cmp
pop
mov
loope
push
mov
fdivl
add
repz
out
lods
or
fwait
repnz
out
add
fidivl
test
inc
out
xor
push
mov
inc
repnz
jo
add
jmp
adc
iret
imul
jbe
pop
jno
cli
pop
jb
imul
leave
mov
cmp
push
shrb
inc
pop
fisubrs
xor
push
out
in
push
rol
jmp
push
xchg
mov
lret
ficomps
or
push
addr16
fisubrs
xchg
adc
aam
push
push
pop
outsb
jbe
jb
or
pushf
mov
push
addr16
je
mov
cmp
fstpl
xor
mov
fstl
iret
and
ret
inc
fucomi
femms
push
mov
mov
pop
sbb
sub
mov
and
xor
pop
aaa
cmp
cmp
shlb
xchg
cmp
aad
push
movsb
stos
mov
mov
imul
cmc
lcall
insb
out
cmpsb
sbb
fcomps
ficompl
scas
data16
mov
adc
mov
shll
mov
aas
or
jp
das
dec
dec
or
mov
aaa
aas
mov
mov
out
mov
stc
jmp
addr16
pop
call
sbb
cwtl
lds
dec
or
mov
pop
cmp
dec
mov
jmp
mov
jbe
rcrl
ljmp
in
fldcw
inc
fs
sbb
add
xchg
add
psadbw
cmpsb
pushf
cltd
pop
adc
mov
mov
and
pop
fwait
cmp
adc
dec
rolb
sbbl
pop
xchg
push
mov
sti
adc
js
adc
decb
xor
int3
push
jo
jle
sbb
cmpsl
or
and
dec
outsb
loopne
into
fstpt
test
nop
daa
jge
jle
aad
int3
lcall
sub
mov
icebp
or
lods
mov
popa
jbe
std
jmp
jne
add
and
sub
ret
sub
shrb
mov
xor
dec
cltd
and
loope
push
mov
iret
sub
div
mov
fidivrs
cmpl
sub
jge
mov
shlb
adc
mov
cmp
mov
cmp
adc
and
outsb
mov
xlat
lods
insb
push
xchg
pop
test
lock
push
cmpsb
dec
jg
mov
mov
xchg
jge
inc
icebp
adc
add
arpl
arpl
xor
ret
cmp
imul
fildl
fstl
jno
mov
stc
sbb
push
adcb
mov
lahf
hlt
push
mov
nop
jmp
arpl
into
imul
cltd
lahf
scas
addb
fistl
inc
cmpsl
stos
jno
insb
aas
jnp
pop
in
pop
fimull
push
sub
ret
fbld
int
cwtl
test
lods
je
mov
pop
stos
xor
sbbl
jnp
sub
ljmp
xor
in
jmp
clc
ret
outsb
pop
in
bound
push
and
std
xchg
mov
lcall
mov
int
lret
sbb
or
gs
jle
jmp
mov
xor
inc
cmp
test
nop
repz
cmp
mov
cmp
movsl
loope
dec
xchg
iret
add
pushf
shlb
addr16
dec
enter
movsb
mov
gs
sbb
test
mov
in
pusha
push
mov
pushf
andb
lea
mov
repnz
xchg
js
sbb
enter
pop
push
enter
adc
cld
push
loope
mov
and
dec
mov
mov
push
jle
sahf
jle
imul
xchg
or
mov
bound
cs
fsubl
and
fs
jae
pop
pop
vmread
mov
cmc
fdivl
sahf
mov
das
movsl
lods
mov
mov
push
xor
loopne
js
mov
mov
dec
mov
mov
adc
inc
je
test
inc
stos
cmp
test
push
dec
add
jae
fimull
mov
mov
pop
fsubrs
dec
xchg
aam
testl
dec
inc
ss
or
push
sbb
jle
dec
sbb
bound
arpl
gs
jns
ret
xchg
adc
sbb
jmp
jb
out
inc
jno
xchg
push
mov
psubw
stos
mov
test
xor
push
jge
jne,pn
mov
add
outsl
push
adc
gs
stos
pop
fcmovb
dec
mov
sbbb
movsl
into
sub
inc
mov
mov
leave
push
adc
jne
add
dec
shl
dec
negw
xorl
jae
arpl
jle
jo
jnp
je
ret
popf
xor
ja
push
aas
fwait
xor
mov
add
cmp
xor
mov
mov
fldenv
sbb
cmp
in
mulb
les
xchg
add
in
push
pop
mov
sub
or
adc
inc
mov
data16
add
out
adc
lods
ljmp
cmp
scas
push
orl
ljmp
addr16
push
xchg
scas
jge
sahf
and
sub
ljmp
jo
sbb
int
testl
out
xchg
adc
mov
jae
rcr
mov
pop
fdivr
add
mov
cmc
add
jae
pop
push
pusha
nop
or
xchg
jle
pusha
mov
insb
mov
add
pop
or
mov
mov
jmp
clc
jo
mov
ja
lahf
pop
subb
dec
dec
push
mov
inc
sbb
cmp
aam
cmpsl
jne
jno
adc
aas
js
ja
sub
clc
mov
mov
das
ss
push
sbb
es
adc
daa
cmp
xor
ret
add
aad
mov
adc
push
jle
or
movsl
sub
mov
fisttpll
icebp
jmp
out
xlat
adcb
inc
push
dec
lcall
adc
lods
hlt
pop
sahf
lods
xor
xor
shl
cltd
push
mov
adcb
inc
dec
mov
fbstp
idivl
pop
insb
inc
mov
mov
ds
jae
popf
cmp
stos
jmp
xor
mov
dec
dec
dec
and
out
test
icebp
mov
sub
and
pop
xchg
addr16
jmp
add
or
mov
pushf
xchg
dec
in
xor
inc
pop
mov
inc
inc
adc
lea
mov
adc
lods
lahf
push
adc
mov
inc
jb
and
jecxz
push
arpl
mov
lret
int3
mov
js
aad
push
andb
out
jl
mov
push
mov
fiadds
mov
xchg
jno
imul
sub
push
js
sti
lea
pop
mov
rcll
adc
jecxz
jp
hlt
sahf
shll
ss
mov
jle
dec
xchg
jbe
inc
xchg
jb
fdivs
sub
sub
testb
push
mov
cmp
call
lahf
cwtl
shrb
adc
sahf
xchg
in
jge
mov
and
test
pop
clc
mov
mov
adc
movsl
pop
mov
xlat
or
cmpl
pop
out
daa
sbb
add
loopne
shr
out
add
popf
mov
out
gs
mov
xchg
js
mov
lods
dec
push
xchg
addr16
dec
jmp
mov
sub
es
insl
insb
insb
inc
out
adc
adc
jp
dec
cwtl
push
out
push
mov
idiv
inc
and
mov
aad
mull
adcb
pop
imul
pop
push
ficomps
movsb
bound
leave
sub
loop
lods
aad
repz
dec
pushf
mov
push
fwait
push
fidivrl
icebp
pop
addr16
ror
andb
and
loope
xchg
mov
mov
rorb
mull
mov
push
xor
out
ds
add
ret
add
je
or
mov
and
cmp
movsb
mov
outsl
jg
into
into
pop
aas
xor
aad
aaa
sub
stos
sar
test
mov
mov
pop
xchg
loope
iret
or
mov
sbb
out
xchg
xchg
mov
fwait
scas
mov
bound
jl
inc
mov
push
orb
pop
mov
xchg
and
push
aam
push
addr16
dec
jecxz
xchg
out
jno
sub
gs
xor
imul
stos
pop
jg
ljmp
lods
xchg
xchg
ss
mov
out
adc
into
push
jno
lahf
hlt
cli
xchg
call
sub
and
inc
rcll
add
mov
outsb
xchg
push
sbb
push
mov
jbe
shlb
mov
xchg
and
push
inc
mov
jl
inc
notb
scas
push
ss
adc
xchg
dec
sub
movsb
sub
xchg
leave
test
imul
cmc
ret
xchg
cmpsb
xorb
nop
adc
scas
insl
rcrl
jle
and
sbb
lea
mov
inc
in
dec
aam
sbb
push
inc
jle
insl
aam
stos
outsb
stos
mov
jle
sub
or
out
inc
mov
pop
sahf
mov
scas
mov
mov
mov
shrb
push
sbb
fsubp
sbb
xchg
dec
mov
fsts
inc
mov
adc
enter
inc
int
fmull
out
dec
cmpsl
jp
out
xchg
fisubl
pusha
loop
inc
fiaddl
mov
jle
sub
and
rol
sti
movb
in
add
ss
sbb
and
sbb
fdiv
sbb
repnz
shrb
push
cmp
movsl
inc
push
fdivrs
inc
addl
test
iret
push
jp
pop
in
fmull
outsl
in
mov
dec
or
andl
inc
mov
dec
dec
mov
jge
scas
scas
mov
shl
mov
not
xor
js
xchg
jecxz
mov
cld
call
sbb
inc
stos
xchg
cmp
fidivrs
shll
pop
fcmovnu
sub
lods
cmp
ja
xchg
cmp
push
cmp
inc
sub
loopne
mov
sbb
jnp
jmp
aaa
iret
and
xor
jle
jne
pop
fistpll
lahf
mov
push
jbe
dec
mov
rolb
and
dec
pop
leave
xor
sub
adc
ret
fldt
and
add
xor
outsb
ret
dec
pop
les
or
ds
dec
inc
jecxz
push
insb
lahf
jns,pn
jo
or
pusha
mov
ss
pop
dec
popa
insl
add
jo
lds
std
adc
pop
loop
stos
push
cs
daa
movd
dec
ret
mov
in
pop
testl
outsb
lret
inc
mov
inc
add
js
dec
mov
into
fwait
mov
cmp
xor
stc
and
movsb
cmc
movsb
scas
jecxz
jmp
mov
out
out
pop
int
shrb
les
fs
out
xchg
sbb
or
mov
jmp
cli
out
inc
jb
test
jne
jno
pop
sub
xor
and
insl
jmp
and
call
rclb
rcll
xchg
add
cmp
sbb
fstpl
ja
ret
sub
cld
add
fstpl
sbb
sub
jge
jecxz
sub
push
xchg
and
scas
cmc
jae
ficoms
inc
clc
jle
push
mov
outsl
mov
push
js
xor
cwtl
add
aam
in
xchg
jp
rol
outsb
lahf
push
mov
scas
inc
cld
xchg
or
mov
std
shl
inc
in
insb
cld
lods
adc
mov
inc
jp
sub
add
lahf
xor
cmc
xor
mov
into
ljmp
inc
mov
lock
jbe
jmp
pop
lods
repz
inc
push
imul
add
cmpsb
mov
add
lods
arpl
xchg
jmp
orb
mov
dec
and
fwait
adc
or
push
test
cltd
jl
outsl
pop
mov
or
repz
cli
jno
popf
jb
jg
cmpsl
sbb
rcrl
cmpsb
addb
insb
dec
ljmp
sbb
push
cs
lds
roll
push
cmc
xchg
in
xor
xor
xchg
repz
loope
jg
cld
test
sti
cmpsb
mov
nop
add
mov
outsl
ja
or
fs
stc
mov
ret
lret
xor
sbb
mov
iret
sub
dec
xlat
add
int
and
push
mov
sbb
sbb
cmp
sub
dec
loope
and
push
cmp
shlb
movsb
outsl
insb
call
pop
in
cli
add
mov
add
repnz
xchg
push
add
lahf
sub
rcl
xchg
push
sub
out
loope
shl
rolb
out
xchg
xchg
push
mov
push
and
push
loope
push
sub
lea
test
xchg
in
outsl
push
jbe
adc
addr16
inc
xchg
ds
ss
jnp
pop
sbb
scas
andnps
jo
pop
jg
lret
push
push
mov
dec
addr16
aam
cmp
fcomip
or
adc
test
int
mov
cld
lock
mov
dec
fsubl
mov
sbb
jb
lret
push
jge
and
sub
push
xchg
adc
mov
inc
sbb
shll
cld
inc
mov
mov
mov
lock
je
les
xor
pop
sti
pop
bound
in
cmp
sub
hlt
sbb
ret
lods
adc
gs
mov
dec
sub
pop
sbb
xchg
jo
scas
pushf
pop
scas
xor
add
dec
push
adc
aam
and
in
daa
sbb
int
and
mov
ja
or
dec
and
pop
lods
loopne
daa
in
pop
mov
pop
cltd
test
aas
fadd
and
lcall
popf
xchg
das
lock
sub
mov
inc
cmpsl
int3
push
ljmp
call
dec
lock
test
pop
pop
arpl
mov
sbb
pop
push
sub
sahf
xchg
and
jb
jbe
in
loopne
clc
pop
and
inc
aam
test
and
shrl
mov
std
inc
inc
inc
outsb
fidivrs
repz
xor
ja
je
xchg
fcmovb
sahf
xor
fistps
iret
dec
mov
aas
aam
push
sbb
push
fwait
shll
mov
mov
jb
push
mov
adc
in
cmp
inc
repz
pop
inc
cli
xchg
or
push
pop
sub
lods
lods
decb
and
xchg
sbb
and
test
jmp
jo
js
pop
cmpsb
outsb
pushf
inc
push
xchg
push
fisttps
lcall
xor
call
adc
mov
dec
xchg
push
ffreep
int
jae
or
movsb
push
mov
repnz
mov
mov
repnz
push
imul
roll
xchg
scas
xor
cld
inc
add
jp
push
cmp
and
insl
call
andb
stos
push
in
mov
inc
or
out
mov
cmp
int3
and
ret
nop
insl
jb
fbstp
shlb
fs
mov
push
ficomps
mov
pop
lea
xor
lds
xchg
and
mov
test
jbe
add
clc
and
pop
jg
enter
xchg
rorl
rcll
mov
std
cltd
faddl
icebp
adc
lods
jle
aaa
repz
mov
hlt
insl
jl
and
mov
mov
test
and
mov
cld
out
cmp
push
cs
sub
xchg
mov
xchg
jl
mov
dec
into
in
jp
rcll
or
aad
subb
jbe
jo
ja
jne
add
loopne
je
cmp
shlb
fiaddl
cs
and
add
push
sub
cmp
add
jge
notb
xchg
bound
fiadds
hlt
nop
adc
add
test
fildll
es
imul
dec
xchg
mov
xor
or
push
sahf
cmpb
or
dec
push
push
mul
shll
adc
outsl
sbb
xchg
xchg
loopne
adc
fstpl
addr16
loopne
jns
mov
xchg
xchg
insb
out
aaa
inc
cmp
repnz
jne
dec
mov
out
lret
fisttps
push
adc
sbb
test
bswap
js
add
fmulp
pop
mov
mov
cmp
xchg
add
in
int
mov
and
fidivrl
fcompl
cs
xchg
cld
xor
jmp
pop
movsb
pop
jb
jge
lods
xlat
loope
cmp
jne
aaa
or
pop
push
mov
inc
lahf
mov
test
and
or
outsl
adcl
in
mov
xor
das
mov
pop
std
xchg
add
in
test
nop
push
std
repz
ror
dec
lahf
sub
test
xchg
lds
push
lret
jle
pop
sub
push
sarb
les
adc
inc
ret
add
ja
xchg
jecxz
add
pushf
fwait
pop
out
mov
mov
sub
ret
ficomps
xchg
pop
icebp
movl
jmp
lret
xor
int3
pop
jge
sub
cmp
mov
xchg
andb
add
mov
inc
sub
adc
lret
pop
and
cmp
adc
insl
jecxz,pn
dec
xchg
xor
add
fildll
stc
add
mov
repnz
aas
fisubrs
cmp
jne
xchg
test
int
inc
movsl
push
pop
je
pushf
and
pop
push
mov
orl
lcall
push
mov
fidivs
pushf
aad
cmp
push
inc
add
sub
cmp
dec
and
mov
cld
add
push
pop
sahf
adc
mov
push
hlt
jno
out
popf
pop
test
mov
jo
jo
xchg
push
aaa
ss
jg
mov
mov
cmpsl
mov
pop
mov
jns
or
lret
out
dec
mov
std
jmp
pop
js
pop
xor
lcall
lock
repnz
test
shrb
and
out
mov
mov
mov
sub
fmul
les
arpl
and
pop
stc
jle
mov
xchg
push
daa
shrl
mul
sub
and
pop
sbb
adc
std
test
leave
mov
sbb
inc
insb
dec
mov
call
xor
scas
lret
jae
cmp
fwait
movsb
imul
inc
push
aas
aam
xor
iret
pop
dec
dec
loop
or
in
fwait
stos
or
mov
push
aaa
xchg
enter
mov
lcall
mov
lret
push
jnp
lret
daa
push
dec
inc
aad
or
idivl
fadd
xchg
mulb
jnp
mov
test
push
addl
pop
js
xlat
lret
add
pop
xor
and
cmpsl
add
xchg
cwtl
in
les
das
push
in
stos
lock
int3
xor
call
cli
mov
outsl
pop
push
xlat
in
push
sub
or
xchg
mov
mov
sarl
adc
lea
pop
outsl
inc
aaa
xorb
or
mov
loopne
jp
adc
cli
push
mov
lret
das
dec
movsb
es
push
adc
lret
add
int3
stc
popf
mov
stos
pop
sub
add
jns
sbb
mov
stos
sub
xchg
lds
push
cmpsl
std
out
mov
aas
mov
fs
mov
out
jecxz
dec
aas
push
inc
imul
inc
mov
outsb
xchg
xchg
loope
sarb
dec
push
in
push
push
int3
jp
jmp
add
jb
jp
jecxz
out
test
fimuls
pop
sbb
cli
das
and
push
je
test
add
aaa
cwtl
and
rolb
outsb
test
jae
or
ljmp
dec
lods
movsl
ss
es
jp
cmc
sbb
jno
xor
cmpsb
and
cli
loopne
cs
movsl
outsl
xchg
clc
dec
or
int3
xchg
jecxz
dec
sarb
xchg
fnstsw
fst
dec
repnz
or
in
xor
sbb
mov
and
sub
in
bound
mov
lods
leave
xchg
inc
sbb
ja
dec
inc
out
hlt
outsb
incl
cmp
outsl
cmc
push
inc
push
lret
add
inc
data16
aad
shlb
and
xchg
in
inc
push
arpl
stos
add
xchg
inc
jne
sub
or
stos
and
int
add
incb
loopne
sbb
sbb
xchg
flds
push
pop
cmp
cmc
and
push
test
mov
and
push
popf
loope
scas
mov
movsl
cmpsb
inc
adc
mov
cld
add
popf
rorl
mov
jle
and
imul
jmp
sahf
repnz
fnstcw
scas
mov
imul
fsubrs
push
cli
popl
lods
test
xchg
mov
mov
cmp
jnp
pop
mov
cltd
add
imul
add
or
int
aad
cld
inc
add
jl
xchg
test
mov
scas
mov
mov
in
dec
leave
mov
xchg
inc
dec
sbb
popf
shr
nop
call
xchg
fldcw
mov
test
mov
ja
rclb
or
adc
test
dec
cwtl
xchg
mov
push
mov
out
ja
mov
dec
jmp
inc
mov
test
xchg
jl
rcrl
neg
ficomps
jnp
push
pop
push
mov
popa
stos
mov
dec
xor
jp
push
out
sbb
sbb
pop
ljmp
insl
mov
sub
mov
xorl
cli
cmp
xlat
insb
pop
mov
mov
pop
scas
xor
sbb
fsubl
sbb
xchg
fwait
in
jp
shrb
lods
adc
inc
mov
cmc
jge,pn
add
mov
ljmp
stos
lahf
sbb
imul
sub
push
les
xchg
jne
lods
inc
outsb
jno
in
ljmp
push
test
into
fcmovnu
add
mov
push
scas
mov
jmp
jbe
adc
insb
adc
lcall
xor
lds
ret
scas
mov
inc
adc
mov
mov
ljmp
adc
div
out
add
int
aad
movsl
sti
mov
negb
sub
inc
inc
jb
iret
aam
jb
mov
ljmp
or
xchg
ja
mov
lahf
and
inc
das
push
xchg
dec
aad
out
pop
add
jo
mov
mov
mov
inc
je
jle
dec
fisttpll
das
cli
dec
push
push
and
insb
mov
mov
add
cltd
fistps
push
cltd
jnp
in
or
inc
mov
aam
jmp
jmp
jb
sbb
cwtl
repnz
inc
in
bound
test
sub
pop
lea
repnz
ds
lcall
cmpsl
ror
jb
lahf
je
mov
lock
dec
fdivr
cltd
sahf
js
dec
es
arpl
aam
xchg
inc
mov
xor
cmp
or
cmc
mov
mov
sbb
jp
dec
bound
outsb
int3
cmpb
xchg
sbb
sub
mov
pushl
lds
pop
sub
push
cmp
ds
pop
xchg
pminub
xor
pop
lock
dec
lret
fimull
mov
insl
flds
leave
xor
xorl
add
or
adc
mov
cmp
aad
loop
lret
and
mov
leave
das
pusha
test
gs
inc
int
insb
sub
push
data16
sub
push
cli
mov
cs
aas
arpl
imul
iret
adc
add
mov
cmp
adc
cwtl
dec
ret
xchg
rclb
pop
lock
jns
in
pop
inc
cwtl
movsb
and
popa
rcl
ljmp
sti
icebp
gs
out
aam
test
adc
mov
cmpsb
cmp
dec
push
xchg
movsl
orb
loope
xlat
iret
mov
into
lods
mov
rcrb
es
fcoml
push
add
shr
push
and
lea
push
pop
mov
push
push
cmc
sub
dec
dec
jle
adc
push
xchg
pop
cmp
or
sub
jno
addl
mov
movsl
mov
pop
push
sbb
inc
adc
in
lahf
lcall
lsl
mov
mov
push
cli
pop
xlat
push
ds
add
xlat
cmp
jl
push
aaa
out
data16
stos
push
xchg
icebp
es
pop
mov
jnp
not
mov
in
mov
xor
cmpsl
adc
xchg
cmc
notl
xor
addr16
les
adc
fucomi
in
jge
and
clc
and
popf
inc
sub
std
mov
lods
adc
xor
jne
loop
cli
inc
mov
test
mov
mov
cmp
add
mov
daa
test
je
sbb
ds
fs
in
mov
mov
ret
sahf
adc
mov
test
lock
int
add
outsb
stc
lds
cld
xor
xchg
xchg
loopne
mov
loop
inc
sbb
popa
push
js
das
movl
stos
cwtl
adc
outsb
xchg
les
inc
adc
mov
movsb
in
lods
and
cmp
in
xchg
fwait
ds
inc
jbe
in
jbe
test
and
pop
loope
cli
out
sub
call
pop
lret
cmp
movsl
movsl
jp
push
xor
adc
lods
fisttpl
mov
ss
xor
call
insl
ret
mov
mov
inc
fwait
mov
inc
pop
dec
cli
jle
lret
adc
mov
scas
xor
aam
mov
or
scas
mov
xor
pop
scas
mov
jl
mov
sub
adc
and
xor
pop
jmp
xor
mov
ljmp
rorl
push
punpcklwd
loop
in
adc
das
mov
push
jp
ret
test
adc
mov
cmpsb
in
mov
aam
dec
xchg
inc
nop
insl
or
push
or
cli
sub
lret
add
testl
pop
xchg
sub
je
jne
and
pop
pop
sub
enter
mov
pop
and
bound
push
sub
cmp
or
mov
stc
mov
add
sub
orb
jne
mov
int3
stc
in
in
mov
cld
repz
fwait
orb
push
out
mov
jecxz
fsubs
inc
sti
mov
push
insb
lock
pop
add
fadd
push
cmp
xchg
into
jnp
cli
sbb
icebp
hlt
and
adcl
into
sbb
cpuid
cwtl
hlt
test
in
pop
mov
js
jmp
loopne
repnz
movntq
fsubl
lds
test
mov
imul
outsl
andl
dec
ja
into
jne
push
insb
cltd
in
js
pop
or
xlat
sahf
test
jl
neg
data16
clc
stc
xchg
jl
xor
lahf
pop
inc
mulb
out
adcb
sbb
mov
cmpsb
push
jp
sbb
shlb
movsl
mov
jle
popf
in
mov
fdivrl
pop
jle
mov
stos
es
pushf
lock
mov
out
subl
inc
push
rorl
leave
ficompl
or
das
sbb
push
mov
cli
stos
adc
xchg
roll
inc
sub
push
arpl
fsts
stos
dec
out
int
outsb
outsb
add
dec
adc
mov
test
rorl
fs
ja
sub
push
and
lods
out
cmp
push
sti
mov
das
daa
pusha
xlat
sbb
dec
shll
jle
xor
in
cmpsl
clc
xchg
pop
subb
mov
add
subl
cmp
test
push
into
es
cmc
jmp
jnp
test
xor
adcl
jge
insb
sbb
test
push
in
int3
mov
mov
pushf
call
sub
int
mov
leave
aaa
cmp
sti
daa
jbe
stos
loop
daa
add
std
dec
push
cwtl
inc
test
gs
outsl
inc
add
jb
mov
mov
push
and
adc
pushf
xchg
jb
mov
outsb
and
and
xchg
je
mov
pop
clc
repz
push
daa
fstps
aas
stc
jge
bound
js
add
push
adc
bound
ja
aad
mov
lds
dec
leave
add
fcmovu
xor
enter
add
aad
and
mov
sub
push
sbb
adc
clc
or
iret
loop
fldenv
pop
scas
add
repz
or
mov
xchg
cmpb
xchg
js
or
adc
loop
mov
pop
fcoml
sahf
inc
out
loope
das
pop
outsb
aam
scas
loope
in
dec
mov
les
test
daa
pop
std
jno
fimull
cli
sbb
xor
adc
rcrl
jmp
dec
xchg
and
pusha
adc
ja
mov
test
inc
out
ret
outsl
mov
sbb
or
add
jbe
repz
mov
add
fs
push
dec
clc
inc
add
jo
adc
lcall
mov
pop
jb
adc
outsb
inc
adc
pop
imul
cmp
add
mov
jmp
ret
mov
xor
in
sbb
jnp
dec
jbe
push
dec
scas
data16
decl
jecxz
and
pop
and
pop
imulb
orl
ljmp
xchg
leave
imul
test
xor
cwtl
les
mov
popf
scas
lret
add
divb
and
nop
ss
scas
jmp
fwait
dec
xor
int3
jmp
mov
shl
pop
iret
jns
imul
or
inc
sbb
in
loopne
sub
inc
lods
push
add
ret
dec
cld
mov
mov
fidivrs
xor
cs
mov
jne
int
mov
lds
xchg
and
pop
lea
adcl
mov
aaa
pop
push
rcr
push
in
fistps
lods
repz
sbb
adc
and
mov
xchg
mov
aam
fbld
mov
jmp
lea
jno
and
cwtl
ja,pt
dec
inc
ljmp
enter
lds
inc
jle
jnp
cs
pop
jl
arpl
stos
scas
pop
jle
jb
push
jp
lahf
test
and
pop
add
movsb
inc
jl
out
jmp
xchg
jmp
mov
mov
xchg
dec
in
xchg
pop
pop
mov
out
mov
nop
pop
or
pop
sub
xchg
in
ds
fwait
sbbl
mov
xor
fdivrl
outsb
add
mov
xchg
loopne
fstpt
out
mov
out
js
and
lret
aaa
push
daa
inc
add
ret
flds
adc
pushf
jl
ljmp
adc
inc
subb
cmp
cltd
push
lcall
pop
cmp
insl
not
jecxz
inc
push
pop
add
or
enter
or
ja
data16
xchg
jne
dec
aaa
mov
ljmp
dec
lcall
push
push
and
push
push
and
lock
pop
add
xchg
out
pop
cmc
outsl
loop
aaa
mov
cmp
insl
mov
jb
loope
mov
cltd
xor
bound
out
jnp
pop
cmp
movsl
outsl
std
dec
adc
int
test
add
mov
cmp
je
test
mov
push
iret
aad
sbb
rclb
sub
int3
fadds
lock
add
dec
add
or
aaa
xor
pop
xchg
shlb
or
jmp
push
pushf
mov
add
push
je
jle
testl
stos
mov
cmpsl
sarb
lock
or
stos
outsb
subb
mov
xor
jne
lock
hlt
dec
xchg
dec
es
push
pop
dec
and
aaa
push
xor
pop
andl
xchg
enter
sub
out
test
orb
inc
jbe
ret
loop
mov
and
inc
clc
enter
add
insb
shlb
mov
pop
lods
or
lret
addr16
mov
xchg
fmull
cmpsb
mov
cmp
aam
insl
movsb
cmp
jp
pop
in
and
xchg
xchg
sarl
into
cmp
leave
xlat
pop
fmull
les
or
shl
fldl
push
int
out
sbb
push
pop
mov
pop
in
xchg
test
mov
out
xor
jp
int
xor
in
rorl
xor
js
repz
shrb
bound
leave
in
add
movsl
push
lret
push
lds
xchg
cmpsl
jbe
sbb
into
lret
movsl
xchg
out
mov
cmp
pop
xor
adc
sbb
sub
cmp
mov
and
pop
stc
ret
xor
dec
push
lds
pop
inc
test
sbb
push
sub
add
in
pop
push
out
xlat
xorl
xor
fs
cmp
adc
shrb
inc
xchg
inc
push
jo
cmc
cs
sbb
hlt
fwait
push
cmc
dec
cs
mov
mov
jg
ljmp
leave
in
mov
cmp
adc
ret
jle
jp
pop
mov
movsl
hlt
cmc
adc
leave
mov
jmp
fmul
popa
fdivs
incl
leave
test
and
mov
cmp
lea
push
mov
xchg
cmp
test
push
mov
jo
jp
push
xchg
add
mov
inc
sbb
mov
stc
test
nop
jecxz
lcall
fldcw
aam
xor
call
ret
pop
cmp
test
push
outsb
cmp
aaa
mov
or
jle
jp
xor
jno
ret
pop
or
dec
mov
scas
fadds
inc
mov
jmp
adc
jp
or
sbb
jg
jg
divl
test
dec
sti
xchg
movsl
jbe
inc
cmp
mov
imul
ss
xchg
pop
js
mov
mov
mov
out
inc
jne
mov
push
cmpsb
sub
jp
aad
cmc
out
add
sti
push
xor
out
jo
xchg
jno
jno
mov
mov
dec
js
mov
jns
sbb
jge
jp
incl
and
iret
test
xor
adc
ret
jnp
lcall
adc
mov
jmp
and
into
lret
pusha
fstps
loope
ljmp
fstl
mov
in
and
dec
dec
jo
inc
cltd
adc
inc
xchg
mov
xchg
dec
push
and
push
insb
sub
pop
lods
sbb
jns
fisubrl
out
add
lock
aad
ljmp
cmpsl
mov
push
and
adc
cmp
inc
lea
and
rol
ds
rcl
xlat
dec
and
stc
addr16
imul
aaa
dec
dec
es
mov
iret
mov
pop
stos
xlat
rorl
int
xor
into
xor
fimuls
outsb
inc
add
jg
add
pop
inc
sbbb
mov
push
sub
sub
fwait
lods
mov
push
push
xor
xor
dec
shrl
repnz
repz
mov
cs
and
xchg
lods
or
lods
shrb
adc
stos
or
or
lock
fnstcw
inc
cltd
lock
cmp
mov
jge
pusha
jae
inc
ss
jae
jge
pop
movsl
jno
ss
fcoml
sbbl
cmp
push
push
and
jmp
leave
loopne
adcl
mov
cmpsl
ret
into
adc
pop
add
addb
push
insl
add
jbe
int3
jp
pop
scas
lcall
xchg
callw
rorl
mov
cmp
popa
cwtl
imul
mov
popa
aaa
adc
add
movsl
sub
xchg
jne
xlat
enter
sbb
in
sarb
outsb
ljmp
jnp
addr16
sub
add
dec
adc
js
insl
call
call
mov
mov
mov
lds
aam
adc
pop
mov
sbb
fildll
push
filds
jle
cld
xor
adc
mov
sub
cltd
lock
mov
and
pop
fwait
or
jb
insl
cmp
sub
insl
lret
movb
adc
test
lahf
sahf
jl
or
insb
mov
dec
dec
or
dec
popa
sbbl
lock
outsl
shll
add
je
cld
pop
push
repz
dec
shrb
fisubl
loop
vmovapd
loope
lcall
leave
sbb
cmp
inc
les
adc
mov
aaa
arpl
cmpsl
out
add
in
pushf
jno
sbb
cmpsl
imul
mov
push
mov
daa
xchg
test
pop
arpl
test
imul
push
dec
fisubrs
in
dec
mov
fcomps
lods
imul
sub
cmp
cmpsb
loop
aaa
loopne
mov
sub
stos
jne
imul
les
mov
and
jge
lods
insb
mov
movsl
imul
push
cmp
mov
pusha
loopne
xchg
cmp
pop
pop
mov
test
mov
cld
xor
cmc
dec
push
xchg
jmp
dec
cwtl
mov
cmp
push
iret
aad
rol
testl
stc
adc
pop
xor
stc
testl
sub
mov
lcall
or
cmp
push
adc
jns
enter
fdivp
jl
sbb
sub
and
mov
sub
aad
adc
aas
pop
mov
gs
lods
mov
cmp
jae
cmpsl
xchg
mov
int3
sbb
xchg
or
outsb
ds
pusha
pop
aas
scas
mov
in
pop
inc
sbb
jmp
and
shll
jno
jbe
cwtl
std
mov
in
icebp
ds
sbb
iret
lret
inc
dec
mov
jecxz
cs
pusha
inc
insb
mov
popa
pop
add
imul
pusha
pop
inc
pop
jle
insb
cmp
or
das
inc
lods
cmpsb
xchg
or
dec
mov
or
mov
orl
in
int3
imul
jle
push
or
push
insb
wrmsr
mov
dec
lods
jecxz
insb
mov
mov
dec
or
cmp
les
mov
xchg
fisttpl
jne
addr16
pop
stos
mov
outsl
jge
dec
sbb
js
scas
jl
dec
scas
or
xlat
call
leave
or
sarb
add
sarl
mov
mov
or
icebp
stos
cmp
es
push
int
sub
pop
jbe
lcall
inc
jae
mov
arpl
bound
mov
xor
icebp
lahf
loopne
fwait
cmpl
daa
hlt
imul
jae
scas
xchg
dec
fmul
jmp
stos
push
gs
popa
lods
ja
cs
dec
xor
pushf
daa
and
or
and
gs
xchg
jp
icebp
es
aaa
daa
lds
jns
pop
inc
sbb
mov
adc
mov
mov
cs
adc
or
popa
cmp
add
pushf
jmp
mov
pushf
pop
imul
push
ds
aam
in
pop
mov
adc
and
in
cmp
push
xor
sbb
sbb
xor
cwtl
lock
jae
mov
inc
adc
adc
aaa
push
pop
and
arpl
and
push
movsl
pop
jg
das
xlat
add
out
mov
push
mov
idivl
mov
dec
leave
dec
aas
pop
mov
call
lods
xchg
ror
mov
jne
push
aam
es
icebp
mov
fcmovne
test
sub
fsts
push
imulb
push
fsubrl
mov
movsb
push
shlb
pop
gs
mov
dec
push
int3
push
leave
jmp
js
ss
pop
insb
addr16
or
bound
les
in
jecxz
or
loope
mov
pop
fcoml
mov
and
in
clc
jg
xor
mov
xor
add
xchg
shlb
add
notl
push
mov
in
sbb
rclb
in
outsb
add
dec
jmp
jg
aad
sbb
or
and
out
jo
test
ljmp
test
inc
data16
test
lods
dec
aam
dec
sbb
sub
inc
mov
push
nop
sub
loopne
insb
mov
mov
std
sbb
jge
add
dec
sub
pop
jp
and
in
push
xchg
sbbl
ret
xchg
nop
mov
jo
mov
mov
ret
sbb
ja
lock
mov
es
xchg
push
mov
pop
clc
sub
testl
push
gs
pop
cmp
stc
pushf
inc
xor
mov
jns
mov
loope
jo
fucom
sbb
iret
and
adc
inc
fdivrs
sub
in
push
decl
add
fisubrs
cwtl
cmp
mov
aaa
pop
xchg
not
loop
icebp
icebp
and
xor
add
lea
dec
mov
pop
jmp
pop
pop
fwait
jb
in
adc
cmp
adc
inc
pop
sti
inc
xchg
add
xchg
lret
mulb
push
or
imul
lock
stos
popf
pushf
xor
loope
jp
jae
and
into
mov
and
cmp
sbb
out
orl
lds
push
sub
mov
push
xrelease
fisubrl
scas
xor
hlt
es
je
mov
scas
xor
loope
mov
xchg
fwait
dec
push
mov
cs
push
jecxz
lret
xchg
push
xor
lods
mov
jge
movsl
jnp
test
fbld
adc
cmpsl
das
lock
aam
lret
add
sbb
fidivl
lods
jbe
mov
push
test
mov
int3
lahf
data16
mov
add
xchg
out
cmpsl
mov
lods
mov
je
dec
cmpsb
dec
xchg
mov
jbe
mov
sbb
xchg
rclb
rep
stos
ja
shrb
add
in
pop
stos
inc
fildl
shrl
push
adc
hlt
cli
push
fisttps
dec
insl
dec
pop
fwait
repnz
xor
xchg
mov
pop
aam
incb
sbb
outsl
cmp
jl
scas
cli
mov
dec
mov
pop
in
mov
scas
sbb
pusha
ss
inc
jns
adc
sub
lea
sahf
sub
loop
stc
popa
sbb
sub
das
es
cltd
push
jge
shrl
mov
bound
sub
fsts
dec
test
jno
cmp
push
pop
fwait
adc
dec
in
aas
les
jmp
xchg
inc
jg
or
push
andl
mov
jbe
sbb
fisubrl
sbb
je
into
jb
push
lcall
enter
int3
movsl
adc
pop
pop
mov
push
enter
fisubrl
test
or
lods
push
aaa
inc
cwtl
cmpsb
pop
cwtl
inc
enter
orb
ficoml
cld
rclb
ret
push
movsb
scas
sbb
test
mov
jno
pop
mov
mov
into
inc
mov
mov
int
loopne
adc
xchg
add
out
jns
xor
mov
pop
pop
stos
addr16
push
push
in
cmp
adc
mov
inc
dec
pop
stos
and
loopne
mov
stc
or
or
psrlq
call
repnz
pop
daa
mov
jg
sbb
cmp
dec
xchg
fisubl
dec
cltd
cmp
cmp
adc
pop
pop
out
imul
sbb
push
lea
add
rorl
dec
xor
mov
dec
dec
sti
lock
out
test
push
movsb
jbe
cmp
mov
roll
in
push
xchg
sbb
and
out
into
add
and
mov
sbb
pop
test
scas
jp
mov
movsb
pop
push
cmpsl
imul
mov
mov
push
fdivs
add
lods
adc
jecxz
inc
aam
clc
and
jbe
in
xor
mov
addr16
xchg
sub
xchg
mov
mov
add
es
and
cmp
add
subb
sub
aaa
movsl
inc
cmp
xor
xchg
push
add
mov
movsl
adc
push
and
adc
and
lock
mov
jnp
popa
movsl
in
out
push
fldt
enter
mov
fadds
xchg
fs
lds
ret
mov
mov
xlat
mov
inc
add
push
mov
stos
ficompl
mov
push
push
fsubrs
push
das
and
jl
mov
int
bound
mov
push
lcall
xlat
in
cwtl
cmc
push
call
and
sbb
js
adc
jnp
dec
pop
fldt
mov
pop
cli
pop
inc
jle
rorb
push
int3
mov
jae
mov
popf
jmp
repz
fcom
es
push
or
nop
jl
mov
call
jl
aad
sub
sti
fisttpll
xchg
popf
imul
pop
fnstcw
rclb
jbe
mov
test
pop
push
and
inc
sbbl
mov
inc
ljmp
inc
cmp
xchg
push
push
fsubr
jno
cltd
pop
sbb
xchg
jecxz
and
xchg
fsubrs
loope
outsb
jecxz
shrl
ret
mov
jns
insb
insb
in
xchg
fbld
mov
pop
jns
fwait
jmp
mov
aas
sbb
orb
cmp
addr16
pop
xchg
adc
and
and
or
js
and
dec
pop
jp
test
bound
pusha
mov
mul
fisubrl
jecxz
mov
xlat
push
xchg
jmp
xchg
jnp
jmp
shl
notb
imul
pop
shll
or
fwait
lods
leave
push
sub
frstor
mov
mov
push
mov
adc
sbb
mov
out
xor
cmp
shrl
jne
icebp
std
mov
fyl2x
dec
jbe
mov
int
test
xor
rorb
test
push
jns
fidivrs
sub
fidivrl
popa
rcll
push
hlt
mov
adc
sahf
add
rorb
sbb
lahf
inc
adc
adcl
cmpsb
ja,pt
and
ljmp
xchg
xor
rcr
iret
out
fcmovnb
fucomip
mov
sbb
arpl
lret
cmc
rol
push
cltd
ljmp
fndisi(8087
sub
or
in
jbe
hlt
mov
inc
cmp
adc
dec
push
cmp
into
or
pop
sbb
xchg
mov
jge
nop
xor
or
jmp
pop
jle
inc
outsb
cmpsb
cmpsl
cwtl
pop
xchg
stos
in
scas
addr16
jb
inc
repz
idivb
repz
xor
out
imul
jl
inc
dec
rcrl
out
cs
jl
or
int3
sbb
or
lock
push
lods
ret
nop
mov
adc
and
or
push
sbb
mov
sbb
fbstp
bound
aas
mov
pop
cmp
shl
es
outsl
pop
sbb
push
jno
push
addr16
icebp
int3
sti
sub
mov
or
aas
pop
adc
inc
dec
jne
inc
inc
mov
sub
dec
test
testb
mov
in
cmp
cs
or
jbe
mov
jo
pop
nop
negb
xor
mov
push
or
and
xor
arpl
popa
push
and
sub
mov
aad
xchg
jno
or
inc
je
dec
jge
jmp
aas
lahf
sub
int
pop
cmp
loop
add
mov
add
mov
xlat
aaa
mov
mov
pop
adc
jns
sub
out
push
fisttps
les
test
xchg
sti
mov
pop
xor
lret
lea
mov
pop
mov
add
cmp
cltd
sub
imul
mov
js
push
and
lods
or
daa
dec
lods
xor
mov
dec
jmp
pop
dec
into
mov
pop
adc
sbb
fs
cmc
sub
mov
mov
out
cmp
push
cmpsl
cmpsb
cmpl
movsl
repz
add
fistl
into
call
pop
mov
jle
adc
pop
mov
xlat
push
mov
insb
cmp
enter
inc
popa
cli
mulb
lret
sbb
xchg
idiv
xor
nop
add
ljmp
mov
sahf
cmp
pop
pop
mov
and
cmpsb
mov
sbb
nop
add
mov
lods
sub
dec
mov
lahf
loop
and
inc
fistps
xchg
or
jecxz
dec
pop
mov
rorl
adc
popf
adc
je
mov
jle
fiaddl
aad
push
pushf
aam
mov
in
push
push
int
pop
cmp
outsl
fisttpl
lds
push
mov
fdiv
in
daa
xor
dec
push
mov
xchg
movsb
leave
movsl
push
jp
mov
jmp
mov
xchg
scas
scas
ljmp
out
add
mov
fists
pop
ret
ljmp
aad
dec
sub
add
clc
cmp
jb
xorl
push
mov
or
jb
gs
push
lods
stos
inc
dec
mov
sahf
call
or
popa
sahf
divl
hlt
loope
movsb
pushf
and
inc
cmp
ret
or
cmp
sahf
fldl
sbb
mov
push
push
fcomps
jge
mov
mov
jge
or
xchg
orl
outsb
sbb
xor
ret
sahf
sub
jae
mov
push
add
gs
xchg
sub
xlat
sub
or
push
loopne
in
push
xor
jle
orb
xor
scas
decb
loopne
push
jmp
mov
test
insb
cltd
insb
sahf
ljmp
xor
pop
sub
mov
or
cmp
jnp
out
cmp
jg
pop
dec
ja
sub
hlt
into
aad
or
stos
jmp
rorb
mov
mov
xchg
psrad
cltd
push
lods
adc
andl
and
fistl
into
push
loopne
dec
or
inc
pushf
dec
cmp
dec
cld
stc
and
mov
adc
jnp
xor
jbe
jp
inc
into
mov
mov
xor
jp
push
or
je
lcall
out
pushf
sbb
leave
xor
jecxz
xchg
jmp
push
mov
push
sbb
pushf
hlt
dec
xchg
sbb
into
into
add
call
insb
shlb
and
fimuls
lret
jae
jbe
push
nop
ja
loop
cld
ret
dec
ljmp
pop
out
shl
popa
jecxz
shll
loop
push
mov
sub
sub
and
add
sbb
pop
inc
lret
mov
stos
sti
pushf
adc
cmc
into
repnz
scas
dec
in
mov
iret
xchg
push
clc
out
data16
jbe
pop
lods
xchg
shr
das
lret
cmp
jp
jl
mov
icebp
sub
movsl
insb
test
ret
dec
pop
cmc
ret
cmp
jl
jno
xchg
es
fisubs
fnstcw
pop
mov
sub
shrb
dec
xchg
inc
cwtl
aad
outsl
cmpsb
pop
adc
add
cmp
test
mov
cs
fwait
aam
popa
insl
sarb
or
int3
jle
das
repz
push
jae
aad
dec
test
fldln2
sbb
rclb
ficoms
mov
xchg
scas
sub
jnp
mov
jle
mov
push
stos
and
fistl
in
cmp
mov
pop
mov
pop
mov
sbb
inc
shll
lods
loop
push
xor
xor
insl
sti
cmp
sahf
fbld
ljmp
mov
popa
pop
shlb
jge
shlb
or
fidivrl
in
lret
or
mov
push
mov
pop
in
stos
ds
jp
out
jp
fnsetpm(287
fmulp
sub
sub
fldenv
es
cmp
sub
xor
and
hlt
mov
out
arpl
pop
stos
or
sbbb
mov
mov
orb
xchg
cmpsl
int3
pop
iret
sahf
aam
in
lcall
cli
scas
jge
xorb
aad
pop
mov
xchg
jecxz
addl
gs
leave
inc
jb
sarb
in
jecxz
push
iret
aas
dec
add
xchg
fs
pusha
add
dec
xor
je
fldt
mov
stos
in
xor
dec
imulb
inc
movl
sti
popa
movsb
rolb
jo
int
popf
or
shll
cwtl
imul
in
or
insb
aam
mov
push
sbb
and
loopne
scas
jg
sub
mov
mov
or
das
xchg
jmp
lods
js
adc
push
mov
jp
int3
dec
js
ret
movsl
out
cmp
repz
cmp
or
subb
jp
mov
ljmp
enter
lret
call
fidivrl
outsl
decb
and
leave
je
push
add
and
insb
pop
pop
dec
outsb
ja
addr16
sub
xor
inc
cmp
out
arpl
and
xor
pop
sbb
and
xor
pop
rcl
sbb
movsb
push
sbb
adc
mov
cmp
add
push
dec
pushf
or
cs
popf
mov
insl
clc
cmp
mov
mov
lods
push
jbe
addr16
jb
xchg
push
in
in
cmp
int3
sti
mov
cltd
xchg
bound
aad
lret
out
inc
inc
add
sbb
ret
andb
mov
es
mov
lods
clc
xor
andl
mov
push
in
cmp
enter
and
insb
add
xchg
add
imul
dec
idivb
mov
mov
pop
decb
ja
mov
jno
popa
mov
push
pop
pop
jns
jg
add
repnz
dec
lods
inc
ss
pop
ret
mov
lods
fidivl
scas
loope
lods
mov
int
test
dec
int3
dec
loope
call
sub
fisttpl
mov
leave
cmp
fmull
gs
pushf
fimuls
fstps
je
lret
inc
sbbb
cmpsl
sbb
adc
ds
in
addr16
dec
das
stos
adc
mov
and
lds
shlb
in
inc
inc
shlb
sbb
cld
mov
es
mov
pusha
jmp
addr16
test
cmpsl
repnz
popf
testl
aad
push
cltd
out
mov
pop
jmp
jb
ret
xchg
sub
decl
outsl
test
cld
popf
stos
sbb
pusha
jb
dec
mov
icebp
out
push
fdivrs
sti
enter
lods
data16
dec
push
test
sub
sahf
push
jnp
sub
cmp
mov
adc
pop
movsl
in
test
xorl
push
stos
imul
xchg
xchg
cmp
movntq
mov
loopne
ljmp
sub
add
mov
cmp
mov
pushf
fsts
sbb
fsubrl
lods
push
xchg
mov
fldt
xorl
xchg
and
insb
push
xor
iret
out
mov
xchg
cli
mov
cmp
push
and
mov
mov
dec
pop
ficoml
dec
sbb
pop
js
les
add
inc
inc
cli
push
mov
add
sub
dec
sub
xchg
adc
cltd
lcall
sarl
mov
push
in
xchg
fcomps
shll
jmp
push
add
out
lds
icebp
push
out
push
rcll
dec
mov
out
and
in
inc
jg
lds
inc
insl
test
inc
loope
push
inc
std
pusha
sbb
outsl
lods
imul
std
call
mov
iret
out
cld
loop
xchg
jnp
jne
dec
xor
rclb
fstp
jl
insb
fcom
jp
ret
jl
xchg
clc
mov
addr16
push
in
lock
xchg
das
mov
arpl
popa
pop
out
mov
and
sbb
push
cs
daa
fisubrl
int
inc
mov
ja
push
lds
push
mov
cmp
daa
mov
sbb
or
xchg
mov
sub
hlt
jnp
lods
es
aaa
test
js
mov
pop
clc
roll
inc
mov
jno
lock
gs
lock
xor
fucomi
test
fdivl
cmc
add
xchg
outsb
xor
dec
mov
push
and
push
rorl
xchg
repnz
dec
shlb
repz
push
pushf
and
cli
push
cmp
decl
or
aas
jge
and
dec
int3
mov
mov
inc
scas
nop
jbe
cmc
sub
xchg
push
roll
aas
mov
in
sub
test
inc
or
in
and
push
aas
jecxz
fsubr
adcl
pushf
jmp
or
mov
inc
mov
test
imul
xchg
sub
pop
ss
lahf
jne
dec
xchg
sub
sahf
push
mov
adc
iret
push
out
and
xor
sti
adc
ljmp
and
sbb
jl
adc
incb
xor
rorb
cmp
js
mov
xor
pop
lgs
mov
negl
adc
dec
mov
jg
or
mov
add
imul
stc
jle
loope
cmp
cmp
stos
js
mov
inc
sub
mov
mov
cltd
sahf
mov
dec
pop
stos
jns
sub
and
push
push
add
lods
xchg
dec
roll
or
cmp
inc
rorb
add
aad
pop
mov
pop
add
inc
ret
xchg
xchg
adc
std
sahf
rcrb
std
leave
loopne
and
mov
lods
inc
and
pop
fadd
xchg
sbb
push
outsl
cmp
xor
pop
jbe
mov
inc
aaa
imul
mov
dec
test
insb
daa
inc
loopne
jns
enter
cmp
and
xor
in
pop
aas
pop
testl
jp
loop
xchg
push
xchg
xchg
into
xchg
mov
rclb
inc
fldt
mov
popf
ja,pn
xor
cmp
or
lea
mov
les
xchg
insl
pop
pusha
push
js
cmp
mov
add
loope
sarb
pop
push
or
xlat
insb
hlt
cmp
xor
sbb
aaa
das
rorl
pop
pop
lret
sub
out
pop
mov
add
dec
xor
sub
arpl
adc
jbe
mov
ja
aaa
jl
in
push
movsl
mov
lcall
stos
repz
fcompl
lock
inc
in
jecxz
sub
stos
jmp
pop
mov
jge
inc
xchg
pushf
mov
addl
fucom
enter
daa
clc
andl
adc
lock
mov
add
xchg
scas
dec
cwtl
cmc
ds
push
pop
scas
dec
adc
sub
adc
test
push
in
decl
aam
ds
mov
aaa
mov
aas
in
ja
or
mov
dec
mov
jne
jb
ret
inc
and
and
movsb
sbb
cwtl
inc
les
push
lret
lcall
lea
mov
dec
je
sahf
jno
or
sub
hlt
lods
pop
xchg
xor
push
inc
add
xchg
movsb
mov
push
cwtl
dec
push
lds
fisttpl
lds
pop
sbb
js
jecxz
mov
into
adc
stos
nop
push
loope
in
loopne
xchg
mov
divb
xor
ret
stos
in
or
jae
aam
xor
stos
jmp
mov
sub
into
sbb
jl
pop
sbb
xor
fwait
in
jnp
xchg
cmp
push
ljmp
mov
popf
dec
mov
xchg
push
xlat
add
enter
jb
mov
xchg
clc
lahf
mov
nop
inc
loope
mov
dec
sbb
stos
mov
and
xchg
and
jmp
arpl
jno
dec
repnz
mov
test
and
cmpsl
sahf
popl
je
data16
fs
dec
xchg
xchg
xchg
out
sbb
sbb
dec
fdivr
sbb
add
xlat
xor
sub
or
sbb
aas
fcompl
pop
lahf
enter
mov
andb
and
sbb
xchg
pop
jnp
add
xchg
and
mov
fstl
aaa
xchg
lcall
jg
mov
cwtl
jle
push
push
std
mov
test
out
lahf
pop
stos
addb
aaa
mov
pop
repnz
in
pop
jne
stc
sub
and
xchg
mov
adc
adc
fisubrl
popf
in
xor
js
pop
scas
ja
jo
repnz
pop
jl
add
nop
in
fstpl
sbb
mov
adc
into
push
repnz
and
es
xlat
and
fstpt
aam
pop
inc
in
stos
int
lea
jnp
sbb
cs
pop
xor
adc
mov
int3
mov
mov
imul
lods
cmp
sbb
dec
xchg
sub
aaa
test
push
iret
shlb
jl
adc
outsb
aas
mov
lea
xchg
pop
xor
dec
cmp
and
ja
lret
lds
push
sbb
dec
and
push
ljmp
cld
jecxz
das
ret
cmp
mov
jo
cmp
xlat
mov
push
inc
clc
sti
dec
inc
cltd
cmp
jmp
cs
ja
mov
dec
int3
das
test
notl
dec
imul
mov
lret
and
es
subl
fldl
leave
sbb
in
mov
scas
cmpsb
out
fs
cltd
pop
mov
and
aad
mov
mov
arpl
add
lods
gs
decb
jo
frstor
insb
scas
pop
lahf
pop
std
into
jl
or
mov
and
in
sbb
rorb
in
sbb
aam
sub
mov
jg
xchg
orl
mov
addr16
imul
dec
mov
cwtl
xchg
repnz
add
xlat
mov
lret
shrb
in
push
into
jo
xor
dec
push
mov
push
cmc
pop
into
xchg
outsb
pop
xor
cmp
jmp
add
push
cmp
xchg
cli
data16
xchg
andb
gs
push
sub
pop
jecxz
clc
rclb
mov
test
call
fwait
mov
and
add
inc
dec
xlat
lcall
fnsave
mov
insb
xor
imul
es
pop
xchg
mov
ret
rcrl
test
hlt
sbb
lock
jne
clc
adc
imul
sub
mov
push
push
std
mov
iret
push
pop
in
dec
sbb
int
shll
cld
out
push
das
fcomps
cmpsl
adc
pop
stc
xor
stc
aam
mov
xor
in
mov
or
jno
call
inc
mov
mov
fldt
sahf
cmp
cmp
jge
xchg
std
ja
jg
icebp
pop
push
xchg
out
in
mov
cld
loopne
xor
dec
pop
push
pop
pop
inc
lock
push
cmp
xchg
push
jo
push
in
test
push
test
rcr
mov
xchg
xor
add
pop
mov
mov
loop
int3
leave
dec
in
call
fbld
js
or
bound
mov
hlt
aam
jp
pop
icebp
lea
sub
cwtl
pushl
js
cli
out
dec
mov
and
movsl
jge
dec
inc
xor
lea
mov
daa
mov
repz
xor
or
sbb
xchg
enter
push
test
push
add
das
push
idivb
hlt
or
sarl
add
mov
jg
mov
mov
gs
push
pusha
jecxz
pop
push
das
push
jle
lcall
sbb
xor
outsb
inc
sub
leave
cmp
adc
push
lock
dec
mov
shll
out
push
inc
cmp
movb
test
movsb
and
lods
cld
sbb
stos
push
cmpsl
mov
cli
sub
add
lcall
testb
sbb
arpl
or
cmc
push
ss
pop
inc
dec
mov
cltd
add
stos
dec
cmpsl
pop
rcrl
data16
push
sahf
cmp
sahf
jle
fs
pushf
sbb
movsl
push
daa
push
aaa
jb
and
sti
cmpsb
pop
addr16
dec
xorl
add
xchg
push
or
stc
fsubrp
hlt
mov
mov
push
inc
mov
fiadds
je
repz
cmpsb
insl
mov
hlt
cmpsl
pop
cmp
test
addr16
test
mov
aad
add
pusha
addr16
adc
cmp
fs
xor
aaa
gs
jb
test
or
cmp
xchg
dec
jge
mov
sbb
pusha
pop
jne
frstor
xchg
out
lret
icebp
out
mov
inc
mov
aam
lcall
ret
mov
inc
js
mov
cmp
fnstenv
mov
fwait
and
adc
cmp
adc
add
out
enter
sbb
sub
insl
xchg
test
movsl
test
jae
fwait
xchg
mov
mov
xchg
aaa
icebp
pop
movsl
shll
sub
add
pusha
cs
out
cs
inc
sub
jl
imul
push
inc
mov
jecxz
sbb
jp
cwtl
je
and
shl
mov
push
je
imul
pop
adc
sbb
jbe
inc
iret
test
pusha
adc
repz
mov
cmp
sbb
cmp
test
negl
and
xchg
jb
sub
fistpll
adc
push
fbld
xchg
lret
rcrl
push
call
into
xchg
mov
shrb
sub
push
inc
rcrl
rorl
mov
cmpsb
dec
jbe
hlt
xchg
sahf
mov
or
xor
xchg
imul
outsb
pop
sub
loope
in
pusha
jb
pop
int
hlt
mov
ljmp
pop
cmp
pop
mov
add
cmc
mov
mov
mov
add
pop
inc
xchg
xchg
imull
adc
dec
iret
and
cmp
dec
sub
mov
xchg
mov
mov
push
sahf
shll
adc
enter
daa
stos
or
push
jp
fs
sub
je
pop
fidivrs
push
mov
repz
adc
jne
add
shlb
cmp
repz
lock
sbb
leave
xchg
add
movl
test
ret
xor
in
cmpsl
or
flds
pop
in
jbe
pop
test
xor
loope
or
adc
mov
sub
dec
push
push
scas
push
ss
popa
cmpsl
lock
pop
ss
mov
dec
clc
mov
jecxz
rorb
incb
dec
lcall
data16
ja
mov
gs
sti
es
inc
ficomps
jge
mov
pop
test
in
pop
pushf
jg
push
and
ljmp
sub
sub
into
inc
es
lret
pop
xchg
js
sub
push
pop
add
sub
test
insl
adc
mov
mov
xchg
xchg
pop
mov
fldenv
mov
movsb
mov
mov
sbb
imul
out
outsb
sbb
xchg
add
cmp
fsubrl
sahf
roll
sbb
into
mov
and
cmp
repnz
lret
hlt
xchg
push
jmp
jae
divl
adc
out
clc
incw
insb
in
jp
and
sub
inc
cmc
mov
add
testl
xchg
into
aam
inc
jnp
popa
xchg
sbb
add
sub
inc
aaa
jne
xchg
das
aaa
lcall
mov
popa
xchg
ret
into
out
and
test
cli
push
xchg
in
sahf
test
in
mov
and
pop
out
in
sbb
push
out
mov
addl
enter
movsl
sbb
push
mov
rolb
in
mov
cld
cli
pop
mov
adc
out
jb
test
loop
mov
stos
pusha
adc
jge
or
sub
add
mov
cmp
outsl
inc
pop
mov
je
adc
pusha
xor
mov
cmp
mov
rep
jb
bound
cltd
out
orl
rol
push
lcall
insl
popf
pop
fiaddl
loopne
sbb
add
push
sub
sub
int3
cld
mov
ljmp
mov
sahf
push
js
lretw
push
xor
add
pop
mov
mov
fcomps
xchg
loop
or
sub
push
in
pop
fsubl
movsl
mov
jmp
push
mov
jg
cmpb
addr16
outsb
lahf
ds
jne
lret
fs
push
and
mov
jnp
mov
les
repnz
push
jne
inc
or
nop
in
lock
inc
dec
or
inc
ret
lods
mov
xor
jne
adc
in
shll
cmpb
sub
aas
sti
mov
cmp
rclb
cmpsb
lret
ja
fmuls
arpl
mov
cmp
lods
rol
cmpsl
jo
jp
loop
mov
lock
push
lea
add
loopne
cmc
mov
mov
pop
mov
add
adc
xchg
adc
fstl
sbb
call
push
push
aaa
ljmp
dec
adc
into
mov
incb
in
lahf
test
out
ficoml
and
sbb
mov
push
test
idivb
loop
sub
push
xor
popa
sub
sbb
mov
pop
xorl
jb
mov
out
test
int
fs
adc
dec
repnz
sub
sahf
cmpsb
stc
mov
int
fidivrs
aad
mov
and
mov
ss
adc
test
int3
movsb
cmp
rcr
std
and
loope
ficompl
jae
lods
cmp
lret
inc
les
leave
aad
outsl
dec
sub
imul
rcr
das
sti
dec
fwait
xchg
mov
cmp
or
es
dec
cmpsl
in
cmp
addl
xchg
ss
test
std
cmp
in
pop
pop
int
adc
sti
loop
sbb
sti
pop
jbe
test
mov
insb
xchg
sub
adc
js
adc
pushf
les
mov
pop
popf
adc
pop
cli
mov
inc
mov
data16
sub
dec
pop
xchg
cld
xchg
cmc
ficoml
push
and
mov
push
arpl
mov
mov
sub
mov
jae
xchg
mov
pop
cmp
clc
lea
lea
dec
ret
les
outsb
sub
add
push
loopne
mov
or
push
jle
outsb
sub
xor
cmpsb
mov
ficoml
xchg
cltd
mov
js
dec
shlb
sbb
mov
pop
clc
sbb
jb
jns
push
dec
sub
jle
je
fcomps
loopne
sbb
jns
mov
push
mov
rep
mov
add
xor
push
and
pop
inc
inc
jmp
stos
sbb
lret
bound
shrl
adc
js
xor
inc
test
adc
mov
data16
sbb
inc
mov
inc
push
dec
mov
add
and
mov
movsb
xor
imul
fstpt
stos
inc
stc
lods
test
js
jbe
sbb
sbb
sarb
imul
and
rolb
mov
adc
or
fnsetpm(287
fmuls
mov
xorb
out
xchg
xor
jge
cmc
adc
jns
popa
loop
ret
rcr
pop
fsubl
pop
scas
inc
and
ljmp
mov
pop
mov
shr
or
mov
push
mov
fsubrs
xchg
cmc
inc
and
or
sbb
scas
jge
inc
inc
cmpsl
jle
lret
pop
icebp
xchg
sbb
xchg
sub
outsb
sub
repnz
rcll
lods
loop
xchg
movl
inc
pop
push
push
loope
es
in
adc
mov
in
or
jl
pop
pop
or
aaa
pusha
rorl
cmp
inc
push
cmp
pop
add
cmp
xor
js
pop
pop
push
cld
pop
and
adc
mov
fcoms
out
xor
or
insb
imull
mov
in
xor
cld
add
fstpl
movsb
dec
mov
cmp
aam
fcoml
mov
push
das
xor
push
test
inc
pop
in
cli
popa
fwait
outsl
xorps
shlb
pop
hlt
enter
aam
dec
addr16
adc
mov
dec
xchg
add
sbb
add
or
cs
dec
push
or
in
xchg
sbb
cltd
or
jo
push
ds
xorl
sbb
scas
dec
mov
mov
out
test
xor
push
test
adc
mov
insb
test
push
cmc
inc
pop
pop
in
pop
push
lcall
cwtl
mov
jnp
shrl
sbb
loope
sbb
mov
push
sub
mov
inc
cwtl
int3
dec
rcrl
mov
push
ror
jp
int3
mov
clc
adc
dec
repz
test
dec
aaa
pop
bound
mov
andl
add
pop
outsl
shrb
pop
pop
mov
bound
jle
ds
pop
mov
movsb
mov
aaa
add
cwtl
decl
out
dec
dec
pop
popf
outsl
jle
fnstenv
sti
mov
es
xor
mov
out
jge
pop
ja
cwtl
lret
adc
lcall
hlt
pop
hlt
push
dec
sbb
push
inc
push
or
call
jbe
test
aaa
popa
std
out
and
and
push
mov
pusha
or
adc
lahf
ret
xchg
pop
test
mov
add
aam
cs
mov
ja
mov
mov
mov
jae
or
mov
mov
mov
mov
data16
rcl
ja
sub
and
rorl
mov
mov
inc
aad
lret
rcl
and
ficoml
enter
mov
aas
push
insl
dec
lret
cmpsb
sbb
out
inc
mov
imul
xchg
pop
cmp
and
mov
add
int
cmp
mov
in
fsubl
outsl
call
call
push
addr16
in
xchg
sbb
adc
in
mov
nop
pop
pop
mov
test
push
or
popf
push
in
adc
add
mov
out
rcr
push
popf
xchg
dec
sub
mov
repnz
sbb
pop
xor
daa
in
aad
loop
jecxz
ljmp
xchg
push
insb
jge
pop
rorl
cmp
pop
inc
add
pushf
xchg
int3
fiaddl
lock
inc
xor
daa
push
add
push
xchg
adc
cmp
and
movsb
insl
orb
cs
adc
push
lahf
repnz
fwait
rorl
ficompl
into
inc
xchg
insl
data16
jne
div
addl
or
cmpsl
aas
add
cs
setle
fists
imul
in
fbstp
aad
jo
sbb
mov
xor
cli
xor
call
mov
js
dec
pop
int
or
and
pop
je
and
imull
popf
adc
xor
adc
push
cld
push
cmp
or
push
cs
add
test
add
out
data16
lods
add
and
mov
outsb
cmc
dec
mov
dec
lods
call
in
cli
sbb
xor
sub
repz
or
arpl
cmp
fidivrs
lret
push
test
stc
movsb
in
or
cld
adc
push
mov
jb
or
pop
mov
repz
rorb
fsubrl
dec
ja
xor
scas
fcomi
push
insl
rol
test
or
or
mov
sbb
popa
clc
dec
push
push
mov
fs
dec
push
add
repnz
xchg
xor
lods
popa
js
outsb
iret
popa
je
pop
mov
fs
sub
mov
incl
rcrl
push
xor
lea
jo
ja
mov
xor
bound
mov
jge
sbb
or
movntps
dec
ffreep
cmp
mov
jo
xchg
pop
inc
ja
std
sub
or
inc
or
xchg
xchg
loopne
xchg
jno
shlb
je
pushl
inc
fsubp
popf
test
xor
pusha
lret
sar
sahf
pop
or
loop
mov
inc
jbe
pop
mov
sar
lret
movsb
mov
in
cmp
pop
fnstenv
aam
in
mov
aad
sbb
or
adc
dec
jnp
jb
das
lods
lock
mov
push
sti
flds
xor
jbe
out
dec
sbbb
add
pop
or
ror
call
mov
imul
or
inc
fistps
or
ljmp
sbbl
sub
pushl
sbb
or
mov
push
stos
adcb
jl
jo
adc
movsb
clc
aas
in
pop
xchg
sahf
mov
lcall
add
adcb
add
mov
mov
outsl
rcrb
aas
adc
loope
add
cmp
inc
les
inc
adc
stc
and
into
and
cld
push
mov
lds
cwtl
mov
mov
and
xchg
ljmp
inc
xor
dec
aad
ret
pop
or
and
sar
testb
dec
mov
lds
andl
dec
jnp
hlt
push
inc
push
cmp
xor
ficompl
hlt
mov
scas
out
mov
and
add
adc
push
icebp
pushf
mov
mov
movsl
repz
pop
iret
pushl
ret
aam
mov
fmuls
xor
xor
xor
iret
sub
movsl
repnz
inc
xorl
iret
pop
inc
mov
add
inc
stc
test
push
repz
xor
mov
or
mov
wrmsr
int3
or
orb
jnp
ret
cmp
int
mov
outsl
xor
sar
test
or
mov
fadd
mov
hlt
test
adc
pop
call
aam
cmp
shll
sti
mov
push
jno
sarl
push
xor
sub
mov
fists
lock
packssdw
bound
push
shrb
xor
sarb
inc
and
es
movsb
leave
in
sub
flds
out
sub
inc
cs
pop
inc
cmp
std
and
movsl
shrl
es
pop
cwtl
and
in
test
outsb
imul
xchg
repnz
je
dec
cltd
jbe
adc
cmpsb
fnstsw
mov
outsb
stc
push
push
jno
roll
jmp
fwait
mov
aad
mov
cmp
mov
and
pop
ret
in
dec
test
push
inc
sbb
push
cltd
stos
in
push
xor
sbb
in
cltd
push
push
and
cmpsb
lock
pop
sarb
fs
in
in
jmp
push
mov
pop
inc
sti
cs
inc
mov
pop
and
les
xor
sub
xor
sub
cmpxchg
sti
pop
cld
pop
or
push
sahf
or
mov
call
xchg
inc
add
mov
in
movsl
daa
ljmp
and
movsb
popa
pop
ret
mov
adc
clc
not
sarl
sbb
ljmp
jnp
add
cmp
pop
sbb
lods
jge
push
movb
int
jge
mov
inc
xchg
lods
flds
jne
jp
or
xor
fucomip
cld
sbb
xlat
xchg
xchg
call
mov
xchg
push
insl
mov
test
dec
stos
inc
mov
test
les
xchg
aas
jge
loop
call
into
sbb
mov
in
inc
mov
xor
adc
sub
push
sarb
into
sub
add
cmp
in
add
mov
jb
push
adc
push
push
cmp
outsl
repnz
and
rcrl
dec
stos
ret
out
imul
daa
repz
jne
pop
jle
cli
sti
pop
adc
shrd
scas
xchg
adc
imul
pop
orb
movsl
xchg
xchg
decl
mov
cmp
push
scas
dec
pop
in
inc
dec
mov
jp
sub
xor
jb
jmp
mov
stos
mov
mov
sub
xor
mov
mov
add
pop
mov
pop
adc
dec
jl
xchg
xor
inc
cmp
pushf
add
dec
mov
repz
ds
in
nop
jo
jmp
shll
stos
in
call
mul
sub
mov
or
lfs
repz
cmp
mov
shll
je
pop
push
add
lods
mov
bound
mov
cmp
sub
mov
std
add
outsl
lcall
mov
adc
xchg
mov
add
testl
push
sub
sbb
sub
mov
and
jo
push
in
insb
push
inc
xchg
pushf
popa
push
fstpl
in
loope
inc
xor
inc
xchg
pop
or
cmpsl
pop
dec
sbb
mov
js
frstor
shll
dec
pop
xor
sub
dec
aaa
or
je
mov
daa
cmp
loopne
adc
lods
or
ss
lcall
js
pop
and
enter
xor
adc
jnp
out
cwtl
aam
push
jmp
subb
mov
popa
sbb
call
or
inc
decb
push
adc
repz
ljmp
mov
sbb
mov
sbb
std
stos
scas
dec
cli
or
lahf
in
data16
push
mov
xchg
cltd
in
mov
push
mov
shll
sub
pop
sbb
shlb
add
mov
or
fldt
push
mov
jl
in
fidivrl
pop
xchg
dec
cld
sub
xchg
sub
cmp
inc
jecxz
mov
mov
dec
jg
mov
incl
mov
xchg
int
dec
jno
ss
inc
mov
lods
inc
mov
mov
xlat
push
xchg
out
movsl
pop
lahf
jns
ss
sub
mov
mov
fimull
int
xor
out
shl
mov
cwtl
sarb
sbb
loope
inc
sbb
out
or
xchg
add
xor
jae
push
lea
and
fistl
enter
push
and
out
aas
or
push
xchg
movsb
iret
push
dec
pop
fldl
cmpsb
dec
push
sbb
and
inc
sahf
jae
jl
inc
out
push
lods
cli
dec
push
jmp
daa
sahf
outsb
into
int3
test
fildll
in
xor
or
cmpsl
arpl
stos
xchg
mov
pop
icebp
sbb
mov
cmp
pop
movsb
fstl
dec
faddp
mov
fists
loop
xchg
sbb
pop
push
movl
mov
int3
addr16
lods
sahf
pop
lcall
fiaddl
inc
push
mov
jl
adc
mov
rcl
jmp
lea
xlat
cmp
movsb
imul
cmp
insb
add
fyl2xp1
or
shr
fcoms
push
mov
pop
cmp
add
gs
and
or
rorb
push
out
mov
imull
in
jno
insl
pop
rclb
xor
pusha
ljmp
sahf
out
mov
cmp
mov
sahf
fwait
mov
adc
enter
push
in
adc
mov
leave
mulb
repz
inc
icebp
mov
pop
mov
jo,pt
arpl
jnp
lods
cmp
push
mov
cltd
mov
jbe
jno
out
scas
aam
stos
or
lret
aaa
lahf
pop
stos
sbb
int3
ret
icebp
imulb
loopne
push
lret
mov
rolb
pushw
xor
sbb
icebp
neg
mov
leave
cmp
mov
popa
jl
mov
roll
or
mov
stos
jmp
je
xchg
scas
mov
jo
arpl
or
in
xlat
or
jae
cwtl
xlat
inc
push
mov
shlb
es
xchg
inc
shl
sbb
lret
repz
insb
clc
sbb
pop
mov
inc
mov
xor
add
sbbl
lods
data16
cs
inc
adc
push
add
inc
jg
shll
xchg
movsb
mov
lcall
xor
dec
leave
pop
dec
loopne
push
mov
insb
mov
pop
and
xor
je
cmp
into
push
and
and
cmpsb
and
pop
mov
add
lods
dec
mov
ljmp
xchg
and
test
or
mov
sarl
or
inc
jno
dec
pop
out
icebp
scas
sbb
jp
xor
enter
ja
pop
or
inc
mov
cs
sub
repnz
popa
shl
movsb
push
xor
mov
mov
xchg
inc
adc
dec
les
cmp
imul
mov
leave
lahf
rorl
mov
sahf
rorl
les
adc
push
sub
out
cs
shrl
adc
jg
dec
jbe
arpl
shlb
ja
xor
inc
aas
sub
dec
sbb
xor
add
aas
cmp
mov
aas
sbb
das
ss
lods
into
xchg
xchg
fdivl
popf
roll
popf
and
js
mov
out
cmp
jge
pop
push
jns
sub
dec
add
mov
jmp
loop
insl
mov
mov
les
loop
addl
xchg
cmp
xchg
jecxz
or
ret
daa
cmp
test
outsl
mov
mov
lcall
mov
xchg
rcr
test
adc
or
push
mov
or
pop
sbb
push
add
fnstenv
mov
dec
icebp
mov
sbb
and
test
pop
xchg
mov
sbb
push
int
sub
cmc
shlb
test
mov
mov
and
inc
mov
divl
push
mov
or
sti
pop
negl
xchg
or
xor
divb
stc
lods
lret
insb
sbb
sarb
cli
dec
mov
shlb
cmovge
dec
cmp
loop
sbb
jb
outsl
sbb
int3
xchg
sub
test
dec
ficompl
sub
shll
cmpsb
push
pop
mov
ljmp
gs
add
mov
jbe
iret
adc
addr16
inc
dec
in
fwait
int
inc
into
dec
test
jo
xchg
enter
mov
in
or
loopne
jne
and
dec
xchg
mov
je
dec
inc
repnz
in
push
cmp
and
xchg
out
lcall
mov
jmp
repnz
loopne
cmp
call
xor
mov
cmp
loope
jo
mov
jmp
outsb
nop
jb
and
pop
fistl
fcmovu
sahf
ja
repz
pop
inc
out
lahf
mov
mov
gs
bound
mov
and
mov
xor
ja
bound
or
pop
leave
js
icebp
sub
add
pop
jbe
mov
les
push
lds
xor
mov
cmp
mov
ljmp
lcall
cmpsb
pushf
pop
inc
push
dec
in
dec
fadds
xor
movsl
or
dec
jno
data16
ret
mov
sbb
mov
xor
xor
cmp
push
fs
mov
mov
imul
inc
inc
push
in
sbb
jns
orb
or
mov
push
test
mov
push
test
mov
add
pop
cltd
cmp
pop
adc
popa
int3
fcompl
or
aaa
xchg
popa
clc
je
adc
pop
test
mov
cmp
mov
mov
or
pop
pushf
mov
lods
cmpsb
inc
push
scas
js
or
cmc
nop
sub
xor
jb
and
inc
insb
leave
jnp
adc
dec
inc
push
ljmp
cmp
pop
or
fistps
push
cld
lret
add
ja
add
sub
shrb
je
adc
movsl
jle
inc
or
xchg
pop
pop
pop
rcrb
das
cmp
aas
adc
xchg
pushf
push
or
xchg
sahf
add
rorl
in
test
push
push
sbb
and
adc
push
cmc
pusha
rcr
test
add
mov
outsl
ret
xchg
jo
cld
mov
fidivrs
in
cld
mov
lods
pushf
in
pop
xor
subl
test
inc
push
mov
loopne
adc
cmc
into
lahf
test
lret
orl
pop
das
jmp
stc
mov
xchg
dec
jmp
call
test
sub
jp
xchg
mov
iret
adc
xchg
in
mov
sub
mov
mov
dec
cmc
scas
fstl
cmp
call
push
xchg
mov
es
adc
nop
out
cmpsb
insl
stos
xchg
test
jbe
inc
aas
lods
push
sbb
push
movsl
sub
inc
mov
sbb
xchg
mov
inc
add
repnz
xor
loop
jmp
test
and
xchg
pop
mov
fnstcw
cmp
inc
fs
jns
mov
dec
movups
cmp
lea
and
push
jmp
jne
sbb
pop
inc
loop
pop
fs
mov
or
dec
cli
js
notl
xlat
cltd
cld
mov
jb
int3
inc
mov
cli
add
test
dec
xchg
mov
leave
sub
pop
ss
dec
loop
outsl
mov
bound
imul
daa
sahf
repz
cmpsb
bound
push
rcl
cwtl
test
dec
aam
aas
enter
push
jno
ficoms
lods
sub
adc
xor
lea
inc
xchg
stos
std
add
sub
inc
cmpsl
jp
fwait
xor
cmp
cs
or
lods
sbb
and
inc
mov
dec
add
fcomps
push
sbb
jne
xchg
lea
hlt
sub
loopne
mov
xor
mov
stc
mov
mov
jnp
add
insb
xor
pop
add
cmp
dec
or
das
xchg
outsb
arpl
lret
fstpt
ret
out
dec
cmc
pop
dec
sub
arpl
pop
mov
fldcw
xorb
mov
call
imul
and
clc
and
pop
adc
push
aas
inc
fistps
test
popa
sub
jnp
aam
lcall
jns
leave
or
xor
jmp
push
xchg
xchg
mov
push
xor
in
int
stos
cmp
out
pusha
cmp
mov
cmp
cltd
sbb
iret
ljmp
dec
imul
sar
or
shrb
inc
pop
pop
cmp
mov
mov
mov
add
pop
stos
lods
pop
mov
mov
loopne
xor
fnstenv
or
mov
iret
jb
imul
jmp
faddl
sub
sub
out
push
pushf
inc
loope
hlt
push
in
into
sbb
xor
or
dec
out
inc
inc
cmpsb
orps
or
lock
lods
sub
lock
adc
mov
in
test
loope
push
sbb
xchg
xor
push
and
enter
roll
mov
xor
or
and
ja
je
push
mov
aaa
ljmp
xchg
add
mov
mov
cmpl
xchg
sub
mov
mov
fwait
jmp
in
adc
sbb
adc
adc
pop
mov
push
ljmp
gs
adc
hlt
fwait
push
and
mov
enter
lret
mov
jl
xchg
push
icebp
jg
in
cmp
pop
aaa
cmp
xchg
sub
popf
jmp
adc
jmp
or
aam
icebp
dec
pop
insb
adc
sarb
nop
add
bound
dec
sbb
shll
adc
inc
ret
mov
sbb
cmp
xchg
les
xchg
ret
push
pop
xlat
mov
add
sub
daa
pushf
dec
neg
cltd
add
scas
pop
and
popa
dec
clc
or
fs
pop
jns
shrb
pop
shl
fdivrp
cmc
xor
xchg
sbb
add
divl
fisttps
xchg
ja
sbb
or
cli
dec
jmp
or
sbb
lock
ds
xchg
pushf
in
ret
es
mov
inc
cmpsl
outsb
xor
pop
push
in
fcmovnb
enter
rcr
lds
scas
xor
ss
sbb
push
in
push
push
gs
imul
jl
cmp
test
push
xchg
mov
sbb
or
mov
dec
jo
push
int3
jo
imul
mov
sbb
dec
out
push
xchg
and
lcall
push
popf
hlt
les
push
push
add
and
mov
lea
mov
pusha
pop
mov
jbe
fucomi
or
cli
cmp
stos
outsb
xchg
or
adcb
fwait
js
ja
jnp
shrb
icebp
out
sub
adc
or
add
dec
push
int
jbe
fdivp
pop
fidivrl
push
les
cmc
xchg
lahf
not
xor
into
cmp
scas
mov
inc
shlb
cld
lods
ja
sti
repz
fldt
int
inc
rcr
std
mov
imul
push
ss
out
cwtl
pop
pop
inc
pop
adc
or
adc
scas
incl
sub
ljmp
mov
arpl
sbb
mov
push
jl
out
les
ret
or
xchg
mov
or
aam
sbb
mov
test
in
sbb
and
insb
sub
lret
js
mov
popf
or
bound
addr16
rolb
jae,pt
push
ss
mov
shr
mov
push
imul
xor
push
jl
out
jecxz
adc
or
jns
or
pop
repnz
data16
mov
outsl
cld
bound
fimuls
aad
jae
mov
addr16
push
dec
cmp
mov
daa
cltd
daa
jge
inc
push
jnp,pn
fwait
sub
popa
scas
or
sbb
test
scas
and
insl
icebp
clc
sbb
sbb
out
and
pop
mov
adc
rorl
push
into
xor
cmpsb
and
adc
dec
push
les
xchg
and
or
cs
dec
sub
nop
adc
dec
inc
rcll
mov
add
pop
pop
dec
hlt
cmp
fadds
outsl
lds
jbe
add
ret
push
add
emms
fimull
add
stos
pop
inc
bnd
fwait
nop
mov
push
cmp
push
loop
clc
ret
xor
cmp
pop
jae
mov
shll
je
jnp
sub
movsl
aas
adc
mov
sub
cmp
push
and
inc
mov
pop
mov
push
jle
andl
cli
int3
push
push
outsl
pop
hlt
and
shrl
pop
mov
push
cmp
incl
aas
pop
mov
lds
mov
mov
sub
popf
in
jb
or
adc
adc
push
mov
adcl
and
cmp
cmpsb
mov
pop
nop
inc
lods
mov
adc
jmp
xchg
ja
jl
xor
xor
imul
push
mov
inc
shr
mul
adc
daa
adc
cltd
mov
inc
repnz
inc
adc
pop
bound
push
test
shl
movsb
mov
in
std
repz
adc
jno
cltd
orl
dec
add
pop
inc
fcompl
add
mov
jns
pop
pop
mov
cwtl
adc
ljmp
mov
sub
dec
cmpl
mov
incl
int3
scas
pop
sbb
pop
imul
jge
or
inc
or
sub
outsl
fistps
ja
add
sbb
add
inc
adc
adc
fnstcw
aaa
inc
clc
je
lcall
mov
dec
inc
cmp
pop
sbb
into
popf
loop
adc
fcoms
lret
fldenv
ficomps
and
repz
sti
sub
pop
mov
mov
sbb
jp
in
mov
call
imulb
pop
das
inc
mov
mov
lret
iret
xchg
xlat
cmp
fdivrl
and
pop
push
je
mov
int
and
pop
jg
push
loope
movl
cmp
mov
in
or
fmul
jg
adc
push
lods
or
rolb
mov
jns
scas
lret
aas
pop
xor
je
sbb
push
sub
call
push
insl
cmp
mov
mov
sbb
mov
ja
sbb
sbb
mov
sbb
outsl
cmp
mov
push
shll
jb
cmp
aaa
jg
add
xor
mov
mov
les
lcall
or
xor
push
xchg
and
jne
cli
loope
aaa
xchg
mov
arpl
add
arpl
fildll
push
cmc
sarl
movsb
mov
cmc
jo
nop
push
jne
ja
lahf
push
pop
sub
sbb
dec
mov
push
pop
negb
stos
clc
lds
sub
into
mov
gs
subb
and
mov
jle
in
inc
jb
fbstp
inc
sub
jbe
mov
xor
add
mov
lret
test
leave
xchg
popa
lock
fnsave
sti
adc
fs
and
pop
adc
jecxz
dec
mov
insb
and
mov
andl
adc
push
outsl
lds
sti
lods
jno
mov
push
xchg
mov
and
fadds
lods
xchg
arpl
in
mov
ret
sti
mulb
pop
cli
addr16
mov
xchg
pusha
inc
xchg
lea
inc
mov
push
add
pusha
push
cmp
cmp
lea
sbb
sbbb
adc
lcall
rcll
jecxz
adc
push
scas
xor
mov
outsb
dec
dec
mov
insl
adc
movsb
cmp
inc
xchg
into
sete
pop
mov
mov
mov
ljmp
loop
mov
mov
adc
sub
push
jo
dec
cli
mov
lret
add
popf
dec
dec
cmpsl
or
dec
mov
pop
rolb
mov
adc
jg
push
popf
icebp
rorl
call
mov
gs
pop
ja
xchg
and
xlat
cmc
mov
or
mov
repz
cwtl
lods
mov
scas
inc
popa
inc
xor
push
loope
sub
cltd
and
lret
mov
mov
in
push
inc
inc
inc
push
pushf
mov
sub
movsb
push
ljmp
popa
cld
out
mov
fwait
fs
push
cmp
icebp
sbb
inc
jne
xor
lcall
add
sbb
mov
push
rcll
push
inc
mov
das
ds
xchg
daa
cld
daa
xor
dec
mov
mov
push
fildll
pop
lret
jge
and
out
pop
mov
xchg
adc
adc
cmp
cli
repz
add
lret
test
mov
adc
fcomps
andl
mov
clc
xor
das
js
adc
pop
pop
loop
aad
mov
or
in
pop
out
je
mov
lea
cmp
xchg
out
sbb
fcom
or
jo
mov
or
cmpsl
push
iret
stos
and
xlat
in
pop
outsb
add
xlat
jl
push
sarb
xor
sahf
xchg
in
jo
sub
push
mov
adc
cmp
mov
sbb
in
fldenv
popl
test
shrl
inc
push
ss
lds
push
jns
les
mov
dec
inc
xchg
cwtl
enter
jnp
movsb
mov
xor
push
or
int
add
call
fs
cs
sbb
outsl
pop
sbb
fs
gs
add
push
orb
jecxz
aad
push
jg
insl
testl
out
fdiv
call
jne
clc
dec
call
push
arpl
push
js
mov
add
cs
inc
dec
mov
inc
dec
mov
push
in
rclb
cmpsl
jle
lret
mov
pop
scas
mov
sbb
lods
insl
push
sub
andb
lock
outsb
cmp
jbe
movsb
pop
leave
dec
push
sub
orl
mov
stos
xor
aam
aad
cmp
lea
mov
cs
cld
shrb
xchg
jg
inc
mov
aam
pop
bound
insl
add
ret
add
int
call
or
mov
scas
lahf
das
fsubl
cmpsb
or
movl
imul
and
insl
jg
ret
jp
ja
imul
insl
inc
inc
xchg
mov
insb
cmp
lcall
pop
test
faddl
cmpsl
add
mov
insl
ficompl
lret
cld
es
mov
xchg
movsl
cmpsb
data16
mov
xchg
sahf
jo
das
push
or
pop
cmpb
lahf
arpl
push
sbb
adc
stos
imul
ljmp
mov
mov
adc
sbb
arpl
xchg
loop
mov
and
xor
jbe
push
inc
loope
xchg
xchg
addr16
fisubrs
or
mov
into
arpl
jecxz
push
sbb
pop
movsb
xchg
aam
cmpsl
int3
into
out
sbb
inc
dec
pushf
add
xchg
test
or
stos
cs
mov
repnz
mov
leave
sarb
sti
stos
cwtl
push
gs
mov
imul
lods
addr16
xor
outsl
sbb
sbbb
clc
sub
clc
imul
ret
inc
cmp
adc
ss
cli
xchg
push
rclb
mov
or
push
in
pop
arpl
mov
jmp
push
scas
orb
shlb
pop
sub
cltd
push
adc
pop
mov
pushf
jns
or
pop
or
xchg
inc
lahf
or
push
mov
jmp
add
hlt
and
jae
sub
pop
xchg
leave
dec
dec
movsb
das
sub
mov
fucom
inc
int3
push
gs
stos
dec
pop
lea
notb
mov
sub
or
test
push
pop
dec
sub
cmpb
pop
inc
xor
jns
fwait
js
sbb
repz
aas
mov
mov
mov
popf
pop
lret
loop
add
mov
es
imul
icebp
push
and
mov
push
jg
enter
dec
inc
xchg
orl
call
das
aaa
xchg
adc
fldl
sub
mov
xchg
and
cmpsb
test
cwtl
aam
sub
arpl
bound
add
add
imul
jecxz
mov
jns
aaa
fwait
push
push
call
lods
push
imul
mov
int3
mov
lock
js
rcll
imull
cmp
and
and
push
push
push
and
jns
bound
es
pop
jmp
cmp
scas
fdivl
inc
ss
xor
mov
sbb
cmp
jnp
push
ja
mov
mov
call
sti
into
cmp
lock
lea
sub
cltd
inc
ss
add
insl
dec
sti
mov
movl
hlt
mov
sub
or
sub
mov
out
sub
int
bound
push
and
das
shlb
and
out
dec
sbb
jb
mov
xor
xchg
adc
or
sbb
pop
pop
cmpl
lods
jecxz
push
pop
push
rcrl
pop
jle,pt
fwait
adc
cmp
call
mov
aad
sbbl
and
inc
lock
mov
in
std
jae
jno
push
arpl
mov
or
dec
cmc
cli
rorl
mov
lcall
adc
jns
cmpsl
in
jae
pop
sub
push
pop
mov
insl
in
pop
mov
stos
pop
sbb
lcall
iret
dec
mov
xchg
mov
into
add
sbbb
cmp
inc
pusha
and
jge
into
incb
cmp
cmc
mov
mov
ja
out
mov
fsubrs
enter
and
jmp
fadds
jl
mov
sub
test
inc
jbe
shlb
jae
add
mov
data16
mov
sbb
cmpsl
xor
jge
repnz
pop
and
pop
adc
clc
popa
mov
adc
popf
adc
dec
aam
out
push
sbb
sbb
rcl
add
scas
pop
scas
jle
fldt
push
or
loop
lods
cmc
stos
repz
fs
push
mov
fdivp
fldenv
jg
add
aas
xlat
ret
leave
xchg
and
mov
push
dec
xchg
xchg
outsl
add
xchg
push
hlt
push
xacquire
and
in
jp
jnp
fistpl
test
test
dec
mov
fisttpl
pop
inc
fdivrl
in
sbbl
adc
pop
ss
push
movsb
lods
fisubrl
pop
into
pushf
or
fs
xor
pop
xor
mov
rorl
add
aas
sbb
leave
xor
ljmp
or
xlat
les
mov
add
out
jne
rorl
adc
xchg
inc
jl
add
std
push
ret
lret
inc
lods
gs
mov
mov
inc
jbe
sub
cmp
inc
dec
shlb
pop
in
sub
insl
fbld
or
or
mov
jb
lods
and
inc
ret
cmpl
movsl
addr16
rolb
mov
fistl
or
push
jecxz
loope
sub
pop
test
dec
fsub
mov
roll
js
inc
pop
dec
inc
shl
mov
xchg
lret
in
cltd
je
push
stc
jns
movb
sbb
mov
dec
push
aas
popl
inc
xlat
stc
aaa
add
lret
push
pop
xchg
jbe
fcmovbe
pusha
push
aam
adc
pop
sbb
or
roll
imul
cmp
in
xchg
and
dec
cmp
add
call
fistpl
add
mov
or
insl
xor
or
std
stc
jbe
lea
mov
and
mov
pop
in
loope
pop
repnz
mov
add
mov
jmp
xchg
jge
jne
pop
dec
push
addb
jle
fldt
pop
xchg
or
mov
mov
test
xor
popf
push
in
and
mov
out
mov
mov
cmp
pop
dec
cmp
loope
push
push
hlt
arpl
cmpb
sub
test
jmp
out
test
dec
negl
jmp
movsb
push
imul
ror
movsb
xor
mov
pushf
sub
out
jnp
pushf
push
jno
test
das
ficoms
pusha
aam
push
pop
cmp
imul
xlat
jge
pop
cmp
ja
jb
mov
dec
push
inc
dec
mov
test
or
out
cli
in
jp
arpl
pop
call
or
stos
xchg
stos
into
int
inc
arpl
sti
data16
lcall
xchg
inc
xor
adc
mov
sbb
sub
cmp
dec
gs
jnp
sahf
movsb
inc
scas
add
push
xor
sbb
jne
inc
popf
inc
push
mov
mov
dec
add
cmp
ss
sahf
leave
sub
xchg
mov
pop
sbb
xor
or
sahf
cmp
and
jmp
addr16
mov
xchg
xor
sti
push
xchg
mov
int
ficompl
jnp
jne
fcoms
mov
mov
pop
in
pop
dec
mov
bswap
incb
xor
jae
xchg
jecxz
shl
ss
xchg
cmc
inc
adc
stos
std
mov
lods
mov
xor
pop
xchg
insl
inc
add
sbb
test
add
lcall
cmp
jle
nop
adc
stos
lods
xchg
aam
lock
aad
push
push
aad
cmpsl
push
or
mov
dec
mov
mov
xchg
pop
jb
ret
out
leave
adc
dec
aaa
jae
xchg
shll
mov
dec
and
aas
sarb
push
cmp
ret
movsb
fnsave
dec
sub
mov
les
xchg
sbb
lcall
mov
mov
push
shrl
ret
in
mov
cmpsl
mov
mov
add
push
jecxz
mov
mov
jo
imul
and
add
push
loopne
sub
mov
mov
mov
pushf
push
jle
imul
popa
ficoml
mov
inc
push
in
in
int
jl
sahf
stc
and
dec
test
mov
imulb
in
or
rcrb
inc
mov
add
sub
and
sbb
add
lcall
test
pop
mov
shl
je
les
in
add
push
ret
ret
shrl
jmp
jo
std
xchg
sbb
adc
mov
xchg
xchg
pop
add
or
pop
ret
sub
jbe
or
dec
cmp
push
mov
aaa
lret
cmpsb
repnz
imul
adc
xor
loopne
or
mov
mov
popf
lods
iret
push
sub
sti
in
xor
into
out
mov
das
mov
jno
dec
mov
lods
aas
jp
sbb
daa
negb
jmp
cmpsl
sub
add
mov
add
mov
sub
out
sub
sahf
movb
pop
mov
daa
jg
andl
imull
and
pop
push
stc
and
sbb
popa
mov
ret
aaa
adc
insl
movsb
jmp
add
maxps
adc
fisttpl
cmpsl
pop
mov
repz
les
sub
and
sbb
cmp
adc
negb
pop
adc
sub
stos
test
jge
scas
mov
jne
mov
pop
mov
cwtl
mulb
pop
and
pusha
push
test
insl
and
add
ja
jp
jbe
mov
mov
cmp
inc
repz
ja
xchg
call
pop
pop
xchg
xchg
cmc
pop
and
jp
movsl
inc
call
cld
ja
jmp
ret
mov
xchg
xchg
fistps
pop
mov
mov
lea
mov
shll
faddl
test
mov
pop
insl
das
push
subl
push
in
test
jbe
add
push
xchg
mov
nop
or
in
pop
xor
test
loop
inc
and
mov
insl
rorl
pop
inc
fldcw
sub
jl
stos
outsb
mov
sbb
mov
xchg
and
add
mov
pop
sbb
dec
push
loop
in
jne
pop
mov
scas
sbb
test
mov
scas
push
inc
adc
movsb
jecxz
loop
ljmp
cmp
lods
inc
lcall
inc
push
add
insb
in
es
mov
cwtl
cmp
xor
std
cmp
cmp
dec
enter
int
and
imul
movsl
orl
ss
add
or
leave
fsts
fldlg2
adc
aam
pop
or
sbb
stos
insb
pop
cwtl
push
mov
xchg
xchg
stos
and
add
mov
sahf
sub
xchg
jecxz
push
ficoml
and
jno
imulb
mov
arpl
cmp
aam
adc
inc
stos
ss
or
jp
add
lods
outsb
adcb
ret
mov
pop
stos
mov
loop
sub
sub
and
sub
xlat
push
mov
dec
mov
pop
lahf
and
dec
test
inc
pop
jp
push
jmp
inc
lret
dec
and
pusha
push
and
pop
movsb
fmull
rolb
fs
mov
xor
stos
sub
cmpsb
repnz
ficoml
dec
repz
inc
and
jmp
jo
mov
inc
jp
lods
das
jmp
and
xchg
xor
out
mov
cwtl
pop
push
loop
sbb
dec
cwtl
call
xchg
pop
icebp
subb
push
dec
sbb
jae
scas
add
addr16
xor
and
mov
sbb
push
sub
mov
mov
xchg
sub
jp
insl
push
scas
jg
loope
xchg
dec
scas
sar
pop
mov
inc
outsl
push
or
fsubl
mov
inc
int3
repnz
rol
cld
int3
mov
repz
xor
xchg
xchg
addr16
jno
loop
pop
cmp
mov
mov
inc
cmp
inc
and
aad
xor
push
shll
or
push
sbb
pop
push
out
test
push
out
imul
sub
mov
sub
iret
or
fwait
jae
movsl
and
repnz
out
test
dec
data16
xchg
pop
mov
adc
loope
cmp
mov
mov
lds
int3
lods
and
jmp
mov
lret
and
test
sbb
inc
push
pop
push
test
jl
jg
out
xchg
lods
stc
sub
push
scas
leave
and
mov
jne
push
mov
hlt
lds
add
ljmp
mov
stos
rorb
dec
mov
adc
inc
and
xchg
aam
aam
imul
fs
jne
or
int
and
and
mov
dec
ds
jg
cwtl
das
and
or
add
inc
jne
xchg
inc
push
in
leave
sbb
mov
hlt
and
mov
stos
xchg
sub
fcmovnu
sub
adc
popf
fmul
mov
jne
mov
repz
mov
or
js
insl
mov
add
lahf
test
movsb
icebp
int
cmp
add
popa
mov
aad
jo
mov
mov
pop
punpckhdq
lea
popf
adc
test
inc
and
fs
mov
xchg
and
cwtl
cmp
push
stos
sahf
rorb
pop
jg
sbb
jecxz
cmp
jp
movl
pop
add
push
orl
push
fwait
mov
jo
aad
lcall
in
enter
lods
dec
adc
cmc
xchg
add
xor
lcall
sub
pushl
aaa
pop
sub
inc
pminsw
adc
movsb
std
mov
mov
adc
push
sti
push
push
test
and
iret
outsl
cltd
sub
sbb
in
inc
in
lret
xor
and
or
mov
imul
clc
mov
push
mov
sbb
test
cwtl
out
clc
and
or
test
push
jne
ss
fisubrl
and
stos
fwait
xchg
out
adc
loopne
pop
inc
adc
cltd
fimull
insb
shl
add
ljmp
test
mov
pop
roll
mov
dec
jecxz
cmp
test
and
xchg
add
xor
inc
cld
inc
divb
rcrl
mov
inc
subl
fs
jecxz
mov
pop
sbb
or
cmp
je
add
push
mov
sbbl
push
sbb
je
iret
xlat
repnz
sub
xchg
pop
je
or
xorl
dec
mov
add
scas
cld
or
and
mov
inc
out
lahf
inc
mov
sub
movsb
pop
lea
jmp
sbb
cmp
outsb
xor
movsl
push
dec
mov
adc
mov
sbb
outsl
xor
and
sub
dec
jmp
pop
mov
test
les
sub
pop
or
mov
fnstsw
int
aas
test
adc
filds
adc
lods
fstpl
cmc
mov
pop
cmp
push
arpl
mov
dec
adc
xchg
push
jg
fwait
xchg
inc
adc
fcoms
adc
jb
xor
inc
mov
aas
decl
bound
sbb
xchg
lds
int
addl
push
movsb
sarl
outsl
mov
xchg
insb
fmull
dec
push
cmpsl
ja
fists
in
inc
mov
inc
push
mov
jae
mov
lea
pop
adc
aas
cmp
mov
mov
inc
out
mov
cli
fldcw
test
insl
xlat
jo
inc
push
fistpll
aas
push
and
mov
popa
jmp
stos
mov
call
lods
ss
mov
daa
out
fs
scas
lret
mov
and
pop
inc
test
lods
mov
jo
mov
dec
pusha
jnp
cmp
dec
mov
mov
out
into
sarl
mov
pop
test
mov
ja
out
cmp
fisubrs
push
aam
movsl
or
inc
daa
das
fwait
or
std
lret
and
ret
pop
pop
add
cmpsl
jecxz
and
addb
sar
jp
mov
xor
mov
cmpb
jne
or
push
repnz
addr16
jo
pop
lock
xor
jo
dec
lods
push
in
xchg
loopne
mov
mov
cmp
fwait
sbb
adc
and
aaa
outsb
fwait
mov
jb
or
in
out
xor
pop
lds
jne
aaa
xor
mov
nop
mov
aad
orl
xor
sub
repnz
xlat
sbb
mov
inc
cmp
or
hlt
std
pop
mov
inc
xchg
or
xchg
cld
mov
cmp
inc
and
loop
cmp
mov
shll
inc
jns
push
mov
inc
cmp
adc
test
cmp
pop
enter
sub
pop
add
mov
callw
movsb
addl
cld
ror
in
or
or
lods
sub
and
xchg
imul
aad
fdivrs
add
les
clc
subb
xchg
pop
adc
mov
daa
add
xor
inc
xor
pushf
xchg
mov
push
outsb
cmpb
jns
inc
fwait
sarb
filds
insb
pop
xchg
xor
pop
adc
inc
int
cmpsb
cmp
fcmovu
fsub
mov
xchg
mov
insb
xchg
rcrl
xor
sbb
pop
daa
cmpsl
xchg
xor
add
es
shrb
leave
sbbb
daa
popf
nop
hlt
int3
fs
or
sub
rorl
jge,pn
inc
aam
add
out
test
xor
lcall
repz
fldl
shl
inc
fbstp
sub
adc
lods
inc
lods
repz
adc
jb
js
sbb
cwtl
das
inc
inc
fldcw
call
bound
push
faddl
or
outsb
lret
int
or
mov
or
in
into
aad
mov
into
loope
pop
imull
inc
push
aaa
fbstp
jge
aam
dec
dec
lods
ljmp
jno
push
icebp
sbb
test
iret
xchg
cmp
sbb
shrb
adc
jecxz
mov
dec
inc
inc
dec
mov
push
fstl
jmp
xchg
dec
mov
cs
test
leave
call
insl
cmpsl
ds
pop
mov
pop
lret
pop
fsubrs
les
gs
ss
sbb
sub
mov
mov
inc
adc
pop
iret
adc
fwait
xchg
xor
movsb
push
andb
je
pop
and
mov
cwtl
pop
and
cmp
mov
cmc
xor
lcall
pusha
sub
pushf
mov
mov
mov
jmp
movsb
xchg
jo
pop
clc
imul
xchg
jne
out
imul
addb
cmp
or
aaa
mov
lods
mov
inc
push
pop
fdivl
bound
repnz
sbb
lahf
ret
dec
cmp
subb
push
sarl
repnz
sarb
fists
jb
dec
or
push
lods
cld
mov
dec
mov
scas
ss
pop
sbb
out
adc
in
jae
xchg
xor
pop
int
pop
inc
decl
nop
mul
lret
scas
adc
aam
add
jp
xchg
shlb
jge
xchg
push
xor
sub
cmc
sbb
add
repz
sub
ss
jne
icebp
cs
xor
sub
add
mov
bound
dec
and
test
lock
xchg
sub
sub
jo
int3
fcmovnb
fmull
loopne
cmp
insb
hlt
xor
loope,pt
addr16
jae
pop
stc
push
scas
mov
pop
xor
frstpm(287
lcall
jge
xchg
xorb
or
add
bound
sub
lret
xchg
mov
loope
and
mov
jmp
xor
pop
cmp
rcrl
xchg
mov
pusha
mov
mov
pop
lret
mov
xlat
xor
pop
jae
sbb
inc
inc
and
dec
pop
lods
test
inc
cmpsb
popf
aam
sbb
push
jbe
ljmp
and
out
shll
add
aas
jecxz
fcomps
and
adcb
pushf
xchg
mov
push
leave
pusha
fcmove
cmp
and
pushl
test
in
jmp
and
pop
push
mov
loope
ss
mov
cmpsb
push
dec
popf
jg
dec
xor
dec
add
mov
xor
js
aaa
pop
imulb
push
sub
cmp
repz
or
lods
and
jp
sbb
cltd
xor
stos
add
repz
icebp
push
gs
push
sub
ljmp
cmp
mov
call
sbb
pop
push
push
pop
and
out
mov
fldcw
lock
push
or
scas
frstor
repnz
incl
sbb
xchg
jmp
js
es
fs
movsb
dec
xchg
xchg
mov
cmp
add
dec
loope
push
dec
cmp
add
xchg
mov
mov
mov
or
fxch
pop
js
mov
call
mov
into
loopne,pt
jne
mov
out
jae
fmulp
nop
fsubl
push
mov
jl
dec
and
test
xchg
hlt
repnz
sbb
lcall
mov
mov
inc
ljmp
push
or
scas
aam
icebp
aad
ja
adc
fistps
cld
mov
xor
jge
movsb
xchg
fs
pop
sub
and
jecxz
push
lods
xor
push
and
out
xor
stc
pusha
sub
in
jp
mov
sub
rorb
sbb
into
xor
sbb
or
repnz
push
fdivrs
das
and
into
cmp
cmp
and
and
and
cmp
cld
jle
sub
rolb
xchg
jnp
out
not
push
push
movsb
and
repz
in
sti
inc
xor
push
or
andb
jge
mov
jge
mov
mov
rcrb
mov
pop
nop
aaa
pop
test
inc
sbb
inc
fistl
xchg
shrb
ficoms
jne
hlt
sub
in
pop
sbb
jo
push
inc
sarb
cwtl
out
xor
aam
pop
xchg
out
mov
sbb
mov
xchg
cmp
in
mov
repz
out
iret
jecxz
and
inc
jo
incb
fs
movsb
mov
dec
into
sub
add
mov
nop
jo
add
nop
jbe
jecxz
lods
push
fs
jp
addl
jo
int3
mov
std
inc
lret
out
jp
lea
push
mov
rclb
fstpt
jg
stos
pop
sub
add
jno
mov
dec
and
pop
jb
test
lret
popf
jo
xor
cmp
mov
jo
stc
dec
scas
add
insl
mov
mov
adc
and
adc
pop
mov
outsl
inc
xchg
es
in
les
out
xchg
sbbb
lods
lret
pushf
add
les
and
pop
dec
push
out
push
jecxz
lcall
test
xchg
scas
sbbb
push
mov
mov
lret
std
xor
xlat
sub
outsb
popa
int3
clc
in
ja
hlt
mov
adc
loope
dec
adc
aad
pop
xchg
mov
rcrb
dec
dec
inc
jmp
xchg
mov
cmp
imul
cld
shll
out
mov
negl
or
cli
push
cmp
and
addr16
push
sub
scas
mov
xor
xchg
add
mov
pop
mov
enter
pop
jge
mov
fs
add
outsl
cmp
out
or
mov
lret
fwait
jmp
push
jle
imul
call
test
mov
jle
pop
sub
in
lahf
inc
int3
into
push
jno
insl
je
fldcw
push
hlt
scas
adc
out
adc
cmp
and
cld
push
lret
cmp
mov
push
mov
pop
and
movsb
mov
add
sti
ds
mov
ret
in
outsb
or
pop
enter
fildl
cltd
mov
inc
inc
jge
fisttpl
fidivrs
jns
enter
scas
inc
mov
or
cltd
or
sub
sbb
adc
push
cmpsb
fstpt
push
mov
cmp
inc
scas
lahf
ret
sbb
jmp
xchg
sub
jmp
pop
aas
push
adc
push
sbb
push
xchg
mov
inc
push
or
imul
dec
xor
adc
jnp,pn
popf
jb
icebp
cmpsb
dec
pop
add
in
push
out
xchg
jne
push
push
cmp
stos
stc
add
or
dec
aad
movsl
popa
div
push
ss
push
les
xchg
jnp
loop
loopne
arpl
xor
ret
add
cmc
sbb
out
inc
outsl
xor
xlat
cmc
push
and
fmull
jne
sub
jo
xchg
dec
lock
sub
dec
lret
mov
sub
test
ret
lods
and
adc
adc
loopne
fs
add
sbb
sub
in
jo
insb
mov
ds
xchg
ret
cmp
out
movsl
bound
std
loope
adc
test
daa
mov
jge
fnclex
sub
js
xor
xor
nop
test
push
adc
mov
enter
jb
xor
push
test
imul
pop
xchg
inc
push
mov
fwait
xor
mov
sbb
xor
nop
mov
sbb
jecxz
mov
xchg
aam
push
jo
shrl
pusha
adc
imul
outsl
adc
mov
mov
add
mov
jmp
xchg
fldt
xchg
in
rcll
mov
outsb
mov
mov
fs
loopne
test
dec
mov
xchg
daa
int
lods
test
out
dec
icebp
inc
mov
fdivp
mov
lea
aam
and
sub
sahf
dec
or
test
sbb
jp
les
je
cmp
cmp
dec
dec
mov
xchg
dec
test
jo
jp
dec
loopne
pushf
sbb
movsl
dec
pusha
out
aam
popa
mov
dec
aam
jae
mov
add
pop
jge
out
or
cmpsl
mov
je
jb
out
pop
dec
or
aaa
mov
mov
or
imul
call
call
xchg
adc
insl
aad
fs
lods
jg
repnz
lods
push
outsb
out
xchg
scas
mov
enter
xor
test
out
mov
inc
adcl
jb
cltd
pop
inc
xlat
mov
clc
leave
stos
popf
sbb
jbe
dec
jns
push
push
mov
rdpmc
xor
jecxz
xchg
adc
enter
icebp
inc
fmul
pop
pusha
outsb
cmp
pusha
lcall
lock
pop
jmp
sub
int
sti
pop
fsubrs
outsb
jbe
mov
ds
in
or
add
dec
jle
sub
mov
adc
sub
sbb
lock
add
loop
sbb
sahf
cmp
mov
dec
inc
pushf
xchg
push
cmpsb
pushf
ror
dec
jle
fnstsw
popa
and
test
test
addr16
pop
lcall
sbb
mov
fs
pop
lods
das
xchg
xchg
mov
cmpsl
cmpsl
mov
ret
push
insl
add
or
jb
dec
sti
testl
xchg
add
inc
add
ret
jo
mov
mov
adc
push
push
add
push
push
add
gs
mov
mov
jmp
gs
add
and
imul
xchg
andl
xor
mov
or
and
xlat
push
mov
call
popa
hlt
xchg
out
out
inc
push
cmp
out
les
insl
mov
popf
out
xor
mov
icebp
and
cmc
sbb
xchg
lods
mov
xchg
cld
xchg
inc
fisttpl
rcrb
jne
xchg
jecxz
lahf
xor
sub
cmp
push
xchg
mov
lock
and
dec
or
enter
sbb
scas
jp
mull
outsl
jmp
add
pop
xor
sbb
xchg
add
sub
sbb
mov
fsubl
sub
inc
sbb
pop
mov
inc
mov
into
out
js
cltd
mov
in
mov
mov
jmp
sbb
mov
pop
addl
out
jo
dec
or
xor
push
aaa
popa
lods
aam
dec
call
adc
xor
dec
jo
movsb
inc
adc
xor
sub
out
in
lods
jmp
icebp
add
mov
dec
mov
and
jp
mov
je
loopne
jg
movsl
out
and
cmp
test
out
shr
les
cmp
sarb
or
sarb
or
and
adc
insl
or
int3
cmp
adc
icebp
lahf
sbb
adc
das
jo
mov
nop
std
mov
xchg
ficoml
sbb
lods
daa
dec
stc
pusha
mov
out
sbb
pop
outsb
mov
in
mov
sub
lahf
mov
ljmp
jmp
cmp
repz
mov
repnz
sbb
mulb
daa
pop
mov
inc
jae
imul
dec
insl
aad
aas
in
mov
add
cmp
stos
jno
mov
add
push
lret
cmp
pop
aaa
daa
movsb
xchg
xor
das
sub
call
int3
dec
negb
lock
or
lds
cld
pop
push
xor
xchg
shll
inc
jb
mov
js
and
pop
mov
and
movsb
mov
mov
lcall
sbb
xor
or
ljmp
cmp
add
ja
or
out
xor
loop
mull
mov
mov
jno
xlat
xor
inc
cmpsb
inc
mov
push
and
push
dec
cmp
pop
negl
jle
popl
inc
jb
push
jns
lods
mov
mov
insl
jmp
xor
sub
mov
lahf
movsb
xorl
push
xchg
lahf
test
pusha
insb
popf
das
mov
dec
jge
testl
mov
pop
mov
dec
pop
out
cltd
sahf
pop
jns
das
dec
inc
pop
fstpt
dec
ds
or
inc
mov
out
mov
jl
data16
divb
ret
call
test
test
xchg
pop
aad
shrb
fstps
lods
jg
sahf
fadd
sti
test
xchg
mov
push
jo
inc
outsl
mov
pop
jbe
and
fidivl
rep
or
mov
les
movsb
push
mov
lcall
sar
gs
inc
insl
fldl
xchg
push
adc
movsl
out
push
xor
movsl
and
mov
ds
sahf
lds
in
aas
scas
aad
rorl
adc
test
jmp
jmp
int
insl
dec
mov
adc
sbb
or
jbe
test
testl
pop
loope
hlt
xchg
inc
adc
mov
lods
js
mov
pop
js
xor
movsl
fisttpl
push
ret
pop
outsl
lahf
inc
push
add
dec
stc
xorb
aam
mov
xor
imulb
mov
in
sub
xor
popf
sbb
movsl
cmp
aaa
aas
xchg
inc
test
jb
or
ljmp
inc
pop
pop
shll
inc
movsb
clc
cld
jl
pop
shll
or
adc
divl
pop
xchg
and
mov
sbb
mov
je
xor
in
fstl
mov
int
xchg
adc
jns
mov
or
dec
mov
mov
loopne
and
adc
lret
xchg
sub
dec
fstpl
sbb
xchg
cmp
jae
xchg
es
mov
mov
sub
jno
fsubs
gs
int3
dec
and
pop
sub
mov
clc
jl
scas
adc
sbb
loope
stc
mov
xor
jne
mov
pushf
int
and
nop
mov
outsb
xlat
add
loopne
xchg
or
pop
repz
in
and
es
jmp
adc
pop
or
popa
nop
mov
mov
dec
push
es
mov
push
mov
dec
cs
sbb
ret
ficomps
lcall
dec
test
addl
cmp
xchg
out
jge
out
and
scas
push
and
sti
dec
and
xchg
clc
mov
sub
scas
dec
sahf
insb
pop
repnz
stos
dec
mov
scas
xor
adc
add
loop
out
jbe
imul
jo
xchg
push
popf
imul
and
cltd
dec
push
and
inc
push
sti
daa
sbb
cmpsl
addr16
fcoms
sbb
push
sbb
pop
jne
mov
mov
jae
lcall
pop
into
pop
cmc
ja
lahf
sub
mov
cmpsb
pop
data16
adc
push
loop
jno
xlat
mov
in
sub
daa
mov
aad
dec
xchg
mov
mov
repz
sti
and
inc
inc
mov
enter
hlt
add
into
gs
js
mov
adc
sbb
or
cli
lods
jne
push
xchg
or
scas
or
in
push
add
push
movsb
aam
arpl
mov
mov
cmp
mov
outsb
inc
xchg
and
cld
dec
pop
stc
jg
add
cmp
mov
inc
dec
aas
ss
and
rcr
xchg
mov
fisubrl
in
lcall
mov
mov
out
mov
scas
dec
or
fisubs
mov
sub
push
lret
mov
lret
mov
repnz
lahf
pop
je
popf
adc
fiaddl
xor
fwait
jns
adc
jbe
dec
xchg
enter
lret
inc
pop
mov
popf
lret
dec
sbb
xchg
sub
xor
bound
out
xor
inc
mov
sbb
daa
xor
mov
jge
je
push
loope
daa
inc
shlb
inc
cld
or
sub
std
adc
sub
daa
dec
cltd
aam
loopne
loopne
mov
push
jbe
ss
push
mov
xor
cmpsb
sbb
adc
jl
or
or
push
dec
mov
mov
cmp
aas
pop
jns
push
mov
call
push
clc
outsb
jno
mov
in
ds
dec
stc
sarb
jp
or
inc
repnz
xor
dec
or
test
jae
andl
stc
adcb
inc
decb
and
test
hlt
mov
das
jmp
jg
xchg
incl
inc
mov
xchg
inc
test
lret
sti
mov
insl
adc
lds
jb
dec
xchg
shll
lret
arpl
push
cld
jno
mov
ret
mov
adc
and
pop
mov
xchg
mov
push
rolb
fsubs
sub
aaa
popf
pop
stos
fisubrl
lea
stos
arpl
stos
mov
icebp
and
cmc
repnz
push
push
mov
xchg
xor
fbstp
sbb
lods
ffree
daa
sbb
repz
test
mov
leave
out
dec
or
mov
xchg
out
sahf
insb
mov
or
test
jb
testl
xor
out
lcall
pusha
add
adc
push
enter
insl
enter
push
out
dec
popl
arpl
push
out
adc
cmp
cltd
inc
dec
ret
push
enter
ror
sahf
cmpsl
adc
enter
popf
dec
cltd
mov
cs
cwtl
shlb
add
add
sbb
testb
insb
loopne
es
dec
jle
sbbb
jbe
clc
pop
cmp
enter
mov
jb
pop
add
push
jmp
or
enter
pushf
ret
sbb
xchg
mov
mov
mov
push
mov
cmp
lea
out
shr
imul
mov
cmp
mov
out
dec
imul
push
jg
jl
pop
ficompl
pop
data16
xor
insb
mov
lret
sahf
cmp
mov
icebp
jg
sub
scas
nop
addb
stos
std
dec
sub
push
push
roll
mov
push
loope
pop
mov
shrb
sbb
cmp
daa
adc
dec
and
rorb
mov
jge
push
jbe
aam
popf
iret
bswap
mov
adc
xchg
rcrb
and
imul
sub
ret
and
xchg
adc
xchg
shll
and
jg
fincstp
insl
sub
cmpl
push
clc
addr16
mov
imul
ja
push
lods
imul
or
lods
sbb
int3
scas
lcall
xchg
xchg
jo
adc
push
fldt
aad
xlat
and
fwait
scas
xor
pop
mov
or
ret
call
fisubl
adcb
ret
ret
arpl
adc
movsb
test
enter
filds
sbb
pop
ds
inc
cmpsl
jae
out
aaa
fs
mov
ret
mov
mov
sahf
std
clc
cmpsb
aas
jecxz
sbb
cmc
sub
lret
cmc
jg
ds
inc
or
add
lock
shl
mov
mov
mov
push
push
arpl
mov
mov
scas
jg
test
lret
and
adc
mov
dec
mov
call
xor
dec
dec
dec
mov
rolb
in
xchg
cmp
mov
xor
jno
shrl
jns
push
xor
mulb
clc
adc
enter
stos
out
lret
shrl
pop
lods
push
lahf
iret
andl
and
and
pop
add
adc
and
gs
ljmp
xor
ret
lcall
loopne
jmp
cwtl
lea
lock
jle
push
mov
fadds
dec
jmp
xchg
sub
pop
cwtl
aas
repnz
sub
lock
out
pop
add
aas
aaa
xchg
out
hlt
mov
bnd
sub
xorl
push
repz
fidivl
lret
and
lahf
jo
test
inc
fwait
mov
neg
xor
dec
repz
fisttps
repz
out
cmpsl
lods
push
rorb
mov
push
test
xlat
incb
inc
pushw
lcall
fcoms
mov
add
jo
outsb
xchg
scas
push
aaa
cmp
push
jb
push
insb
jae
lahf
rolb
xchg
cmc
jmp
lock
mov
out
mov
ficoml
push
or
add
mov
rcrb
xchg
pop
stc
jbe
jo
movsb
popa
mov
jb
sub
clc
loopne
test
mov
fnstenv
imul
and
mov
insl
xchg
jnp
loopne
addl
xchg
adc
in
out
push
pop
mov
scas
xchg
out
ret
dec
inc
cmp
xor
fiaddl
pop
sti
mov
jae
push
rcll
add
movaps
sbb
inc
dec
jge
imull
daa
mov
mov
insl
ja
add
rorb
jmp
mov
add
rclb
sbb
push
mov
scas
andl
adc
inc
test
jb
jo
sbb
mov
loope
inc
test
mov
in
adc
sbb
xor
add
inc
lds
mov
cli
add
repnz
fisubl
mov
xchg
enter
inc
mov
sub
xchg
xchg
or
lods
xchg
jle
popf
adc
or
cmpl
add
ror
rolb
push
in
cmpsl
call
jns
ja
push
xor
lahf
mov
rclb
sub
into
imul
inc
xor
cmp
mov
daa
sub
add
xchg
repz
imul
loop
jmp
lds
dec
faddp
addr16
sahf
pop
sahf
andb
pop
test
int
xchg
leave
push
hlt
xor
addr16
fstl
pop
sbb
rclb
iret
gs
cmc
mov
sbb
popf
xchg
dec
loope
fildll
or
cltd
loop
into
pusha
xor
adc
inc
pop
mov
mov
jno
sub
xchg
or
xchg
jne
mov
stos
out
cmp
adcb
je
xor
out
lea
rorb
cltd
stos
pop
add
mov
loopne
adc
hlt
in
imul
cld
adc
addr16
adc
cmp
fwait
mov
cmpsb
sub
aas
stos
into
inc
loopne
negb
lods
jbe
mov
or
cltd
push
dec
xchg
jno
cmp
daa
mov
call
jne
loopne
push
mov
mov
fnstcw
data16
ds
in
xor
test
sarl
pop
mov
insb
adc
pusha
rol
out
push
mov
xlat
rorb
adc
negb
cld
sub
push
and
test
sbb
mov
or
mov
idivb
push
xor
aas
and
pop
into
leave
xor
jmp
aaa
jae
stos
mov
stos
lods
movsb
dec
mov
test
jne
test
scas
mov
mov
movsb
sub
int
call
mov
sbb
mov
rclb
cmpsb
test
lea
iret
cmpsl
adc
leave
add
je
fs
fs
mov
daa
clc
popa
int
ja
inc
imul
shr
pusha
loopne
lea
cmp
gs
pusha
out
xchg
or
xchg
into
ret
xlat
xchg
xlat
lods
push
out
sub
xchg
inc
outsb
in
inc
sbb
sub
jl
xchg
adc
pop
out
in
xchg
cltd
fsubs
sbb
insb
mov
xor
shll
icebp
data16
jns
sbb
movsb
insb
call
je
outsb
shrl
sbb
push
insl
adc
jb
bnd
scas
stc
dec
jp
or
add
movsl
and
pusha
xor
jbe
shll
lods
int3
inc
add
fst
test
mov
and
fs
xchg
nop
mov
xchg
fstpt
pop
pop
leave
loop
sub
jmp
les
mov
mov
inc
jl
pop
vmovaps
xchg
test
dec
int3
cwtl
shr
popa
incb
decb
lcall
dec
or
xchg
seto
in
mov
or
addl
neg
icebp
pusha
adc
mov
dec
dec
in
loopne
stc
dec
mov
cltd
pop
lea
adc
rdmsr
or
roll
push
popf
jl
cmp
push
dec
popf
or
cmpsb
cmp
mov
and
popa
test
mov
int
out
test
loope
lret
enter
jb
push
xchg
or
jg
mov
jne
cmp
inc
aas
out
cwtl
mov
cld
shl
or
cs
aas
aas
pop
push
add
sub
decl
mov
mov
lods
mov
push
mov
sahf
xor
fs
push
out
divl
jns
out
and
sub
movsl
lcall
mov
lods
stos
test
pop
and
cmp
mov
ret
jo
pop
sub
cwtl
mov
das
mov
mov
mov
scas
adc
scas
mov
das
insl
dec
xchg
lods
int
jl
jmp
jg
xor
or
sbb
add
xchg
sar
popf
ror
ss
or
pop
inc
jge
fcmovne
pop
push
mov
cwtl
xchg
lods
xchg
pop
lret
aaa
cmc
pushf
sbb
shlb
or
movsb
ret
xchg
out
aas
mov
adc
dec
gs
pop
pusha
push
pop
jbe
subb
pop
daa
or
pop
movsb
sbb
inc
loopne
ret
icebp
jae
fidivrs
stc
jge
sub
lret
mov
popf
std
pop
inc
nop
xchg
add
mov
enter
inc
jno
adc
fs
pop
shl
xor
test
movb
inc
hlt
lock
pop
mov
ficompl
dec
xchg
add
mov
shlb
fwait
iret
out
xchg
push
sbb
push
adc
xchg
mov
ret
xchg
cmpsl
xchg
push
gs
cmp
imul
addr16
fisttpl
jg
cmp
cmc
xchg
sbb
stc
or
pop
sti
leave
cmp
adc
cmp
xchg
ds
cwtl
add
popl
dec
inc
ret
xchg
out
pop
ret
mov
mov
fcom
jg
xchg
loop
aaa
movsb
sbb
imul
shlb
cmp
orb
insb
fs
cmc
xchg
pop
pop
push
jns
enter
add
push
xchg
test
in
aaa
popf
fidivl
push
lahf
add
cld
add
cmp
jb
aam
subl
iret
iret
mov
movsb
daa
insb
sahf
inc
and
inc
mov
jb
sub
adc
xchg
pushf
mov
outsl
bound
jl
std
mov
mov
xor
aas
sti
popf
mov
enter
pop
fsubp
add
pop
jle
push
inc
rclb
adc
mov
cmp
add
mov
shlb
bound
popf
repnz
ljmp
dec
jecxz
add
dec
mov
clc
add
dec
xchg
out
and
and
or
add
pop
lea
pop
and
clc
movd
aaa
data16
sbb
add
arpl
std
push
stc
out
mov
in
jle
ljmp
icebp
push
mov
pop
sbb
push
mov
mov
pusha
cmp
cmp
mov
push
lods
mov
sahf
loop
fmulp
cltd
sbbb
jno
jg
imul
pop
inc
push
adc
mov
and
add
test
repnz
sub
xchg
mov
cmp
mov
mov
dec
lret
sti
dec
nop
scas
hlt
inc
int
mov
pop
movb
xchg
or
arpl
xor
into
mov
mov
push
cwtl
cltd
mov
shrl
jg
adc
inc
mov
adc
fiaddl
jmp
insb
add
pushf
inc
cld
lea
xor
push
in
push
adc
lcall
lret
xchg
test
leave
out
std
adc
inc
or
mov
sbb
lea
mov
xorl
sbb
add
loope
stc
adc
push
std
jl
fldcw
fadds
sbb
mov
movsl
push
fnstenv
push
popf
mov
jp
popa
or
call
fs
out
loop
mov
mov
data16
jne
les
sub
test
jae
outsl
je
cmp
push
push
cmc
cmp
pop
mov
inc
adc
sbb
sar
rcr
or
sti
xchg
popa
jle
xchg
sbb
adc
jg
lcall
mov
xor
and
add
mov
cmpsl
lods
loope
fdivrl
pop
imul
jae
lods
scas
das
outsb
lret
cmc
and
stos
imul
les
jg
pop
mov
adc
sti
scas
cmp
or
pop
mov
push
inc
enter
adc
je
in
test
mov
pushf
mov
jno
out
sub
shlb
scas
mov
pop
add
cld
add
mov
stos
loop
mov
test
xchg
mov
aaa
inc
in
lahf
xchg
mov
dec
push
movb
ljmp
mov
mov
push
popf
xor
into
jl
xchg
inc
cmp
inc
or
jecxz
sti
mov
lret
mov
lret
jb
pop
jb
xor
int3
push
xchg
xchg
cmp
fistl
scas
xchg
pop
dec
and
xchg
pop
sbb
sbbl
jecxz
mov
fsubrs
iret
push
sbb
nop
je
push
test
and
ficompl
mov
mov
mov
dec
das
ss
mov
sub
sbb
pop
cmc
cli
or
inc
fildll
imul
dec
lock
push
push
call
lahf
pushf
or
push
jge
out
test
loopne
inc
popl
scas
fisubl
and
leave
outsb
cmp
call
pop
adc
lock
iret
pop
daa
pop
cltd
pusha
push
cs
sti
jecxz
daa
stos
hlt
xor
push
and
outsb
mov
inc
mov
jp
push
inc
test
fcmovbe
out
push
cld
dec
fisttpl
add
push
add
push
mov
data16
or
sbb
cmpsb
int3
mov
loopne
clc
sbb
push
mov
stos
push
inc
dec
pusha
out
outsb
dec
jl
mov
cltd
and
mov
iret
adc
cli
shlb
inc
jecxz
add
push
jne
cld
mov
inc
fsubr
mov
cmp
in
rcrl
jne
pop
ret
leave
pushw
push
mov
cmc
add
or
pop
flds
lods
inc
rcll
hlt
fldenv
sbb
xchg
int3
test
in
xor
sbb
mov
jle
mov
fldcw
in
inc
mov
jae
lret
les
addr16
test
into
xchg
cmp
cmp
jne
jbe
aam
cmp
stos
sarl
push
xchg
sub
inc
push
andb
inc
ficompl
lea
mov
push
aaa
ja
in
adc
xor
loopne
movsb
arpl
sahf
shll
mov
mov
pushf
std
inc
inc
dec
js
ss
pusha
icebp
add
jo
sub
test
and
in
dec
fstpl
imul
cmpsl
jp
fdivr
in
pushf
inc
push
push
push
cld
jle
sub
ret
aaa
push
xchg
adc
es
and
pop
arpl
aam
cmp
or
scas
and
sub
dec
jo
or
xchg
or
lret
push
out
mov
mov
scas
pop
fs
or
pusha
mov
pop
jnp
nop
xchg
xchg
in
sbb
movsl
pop
imul
sbb
dec
add
nop
inc
mov
adc
addr16
sub
les
and
ret
cmp
or
call
fistpl
ret
sub
xor
add
in
pusha
push
mov
lods
scas
and
jbe
pop
mov
repz
test
std
add
inc
in
xchg
adc
and
lock
xchg
popa
sub
xchg
pop
jo
in
jae
out
imul
js
arpl
std
cli
mov
sub
or
cmp
cmc
cwtl
sti
jo
push
ljmp
mov
cmp
sbb
in
jb
movsb
pop
jb
cmp
push
sub
ret
adc
in
icebp
xchg
inc
jae
dec
or
lret
pop
mov
aaa
jge
test
add
mov
div
push
pop
cmp
pop
arpl
sbb
adc
bnd
iret
fistps
pushf
scas
pop
cmpsl
push
adc
es
call
outsb
std
fists
xor
add
shl
repnz
mov
fnsave
das
pop
pop
push
js
mov
jge
push
nop
aad
adc
cmpsb
divps
sbbl
ficoms
fwait
ljmp
ret
xchg
jmp
mov
pop
aad
movsl
std
cld
js
mov
sbb
andb
sbb
push
push
dec
addb
push
daa
ds
dec
arpl
das
add
mov
scas
add
xchg
aam
jb
pushf
mov
or
cmc
push
lock
xor
mov
jae
nop
notb
aam
mov
aam
fadds
xchg
in
jl
call
in
lods
pushf
add
and
pop
and
dec
ret
sbb
pop
push
ficomps
and
insb
sbb
test
mov
xchg
pusha
pop
push
fldenv
hlt
pop
lret
xor
xor
ds
mov
sbb
in
jmp
add
push
push
dec
mov
lret
mov
jno
cmp
out
push
inc
pop
xchg
pushf
xchg
aaa
and
lcall
scas
sbb
pop
dec
stos
push
outsl
pop
cwtl
or
adc
sub
sub
or
arpl
xor
sub
xchg
add
rcl
dec
sub
xlat
mov
shl
and
pop
shlb
pop
shll
dec
dec
es
out
cmp
enter
push
lret
in
jecxz
aam
mov
mov
loope
dec
sub
sub
in
and
dec
inc
inc
rolb
aam
out
insb
xchg
arpl
loope
mov
jno
shrb
repz
rcll
xor
dec
inc
icebp
repnz
rcl
and
sub
test
fmuls
stos
push
ljmp
sbb
js
movsl
push
lcall
aam
repz
push
out
xchg
xor
xchg
fdivs
xor
xor
xchg
xor
inc
jbe
push
sub
les
sub
mov
push
push
in
sbb
loop
jb
sub
int3
aaa
call
sub
sub
sbb
mov
adc
test
xchg
loop
fists
mov
fstps
cld
movsb
pop
inc
dec
add
xchg
adc
add
rcrb
aam
inc
jecxz
arpl
out
mov
dec
enter
into
sub
cmp
mov
test
aaa
dec
and
xchg
lock
mov
mov
sub
fcoms
imull
pop
movsb
stc
outsl
mov
insb
fiadds
push
addr16
test
les
mov
sbb
pop
nop
push
or
sub
jecxz
pop
es
mov
cld
mov
adc
mov
movsl
cmp
int
popf
cltd
pop
xor
jne
sub
cwtl
push
jne
and
out
popf
inc
adc
sub
and
push
push
lret
push
lods
arpl
mov
mov
adc
or
mov
repnz
and
sbb
jae
pop
and
push
ficoms
mov
lret
add
arpl
imul
push
out
ret
jle
das
enter
add
fimuls
jns
push
movsl
jecxz
add
adc
sub
lret
cmc
lahf
dec
and
loop
stos
lret
lret
push
jns
iret
test
cmp
push
sub
ljmp
insb
sub
inc
mov
clc
aam
js
jb
js
sbb
mov
xchg
cmc
add
in
imul
push
fisttps
arpl
fisubs
xchg
xchg
sar
shrl
inc
sbb
or
stos
pop
or
and
mov
cmp
jg
mov
aam
xchg
sbb
add
sub
cmp
pop
jo
stos
in
xchg
xor
and
and
adc
pop
adc
add
popf
scas
imul
das
cmp
xchg
div
mov
inc
aas
xor
gs
subl
adc
ss
cmp
push
ficomps
jo
fmulp
imul
movsl
cmpsl
pushf
sub
mov
mov
in
leave
fisubl
mov
dec
or
mov
dec
es
cltd
pop
repnz
stos
adc
loop
cli
sub
mov
push
mov
je
dec
lock
jg
add
xchg
or
xchg
stc
or
sbb
push
mov
pusha
nop
adc
cmpsb
bound
daa
mov
xor
sbb
jnp
nop
adc
add
dec
aad
aam
fidivrl
mov
mov
popf
xor
repz
cld
shlb
aas
cmp
pop
out
jb
add
aad
fnstenv
dec
sbbb
push
add
cmp
mov
fcmovu
cld
test
jbe
jnp
mov
iret
mov
xchg
aas
mov
shrb
aad
ss
rcrl
and
fmul
push
push
int
cld
jmp
nop
pushf
adc
push
pop
add
pop
mov
mov
cmp
scas
push
data16
xchg
insb
jnp
add
xchg
sti
sahf
and
sbb
xlat
push
inc
push
mov
add
mov
and
scas
inc
inc
lea
fimull
cmpb
stc
xchg
dec
xor
xor
jle
sbb
pushf
add
scas
mov
fiadds
mov
in
shrl
inc
in
std
mov
or
mov
and
clc
stc
sub
test
xlat
xchg
outsb
clc
pop
adc
dec
xchg
jno
pop
subl
cli
or
push
sub
bound
ljmp
xchg
sarb
adc
out
sub
mov
jb
loope
xor
jp
add
mov
pop
fnstcw
push
sbb
push
data16
lahf
xor
sarl
or
ja
pop
and
repnz
cmp
inc
push
dec
insl
fisubl
ret
loope
outsb
add
jp
outsb
out
test
adc
rorb
mov
jmp
mov
inc
xchg
sti
pop
push
push
xlat
lret
jne
sarb
add
xor
shrb
and
popa
dec
pop
add
test
aad
xchg
jmp
push
and
pop
or
dec
pop
into
aaa
std
fmull
mov
imul
hlt
ljmp
int3
dec
or
and
fwait
adc
aad
cmp
cmp
movsb
ret
lss
jle
enter
sbb
push
inc
out
push
mov
je
xor
inc
jb
pop
stos
mov
cmp
push
jp
insb
jle
push
insl
pop
adc
dec
shrb
lcall
insb
mov
pop
sar
fldl
or
pop
inc
mov
inc
scas
pop
clc
decl
inc
fnstsw
inc
add
jno
push
cmpsl
xor
jo
jns
fisttpll
add
mov
adc
sbb
dec
adcb
pop
mov
dec
push
hlt
repnz
sbb
mov
jbe
sbb
jne
cltd
lcall
jmp
or
test
scas
sbbb
in
sbb
stos
mov
movsb
xor
jbe
fwait
lods
fcomps
pop
insl
outsl
and
cmpsb
mov
sub
subb
sbb
cli
sub
xor
popa
das
cmpsb
xor
pop
inc
inc
sub
popf
jbe
xor
pop
sahf
aad
mov
sub
cmc
cltd
or
ret
adc
xchg
sbb
negb
sub
lock
es
push
dec
xor
rcr
xor
scas
int
or
stc
arpl
inc
aas
orl
cmp
cmpsl
sbb
in
adc
pop
sub
sub
mov
cli
fisubrs
paddq
loope
xchg
add
rolb
xor
mov
adc
shll
jbe
mov
loope
push
or
cmpsl
adc
xor
xlat
cmp
ljmp
mov
mov
dec
sbb
aaa
aas
xor
ja
push
mov
hlt
fcos
int3
mov
jp
int
lock
xor
jne
mov
sbb
mov
inc
pop
je
mov
mov
and
outsb
movsl
insl
mov
out
dec
pop
push
out
aam
sub
stos
push
xor
adc
leave
idivl
inc
sarb
mov
pop
out
adc
lods
rcrl
cmp
lret
addl
pop
hlt
popl
testl
mov
sub
ds
out
fbld
mov
test
out
xor
add
mov
imull
js
jae
dec
dec
scas
adc
das
in
sub
add
push
test
pop
js
lret
mov
cmpsl
in
pop
xchg
in
ret
sub
cs
pop
mov
cmc
in
or
inc
inc
neg
fidivrs
es
les
stc
fdivrs
inc
mov
mov
aaa
mov
push
into
mov
in
push
subb
jo
adc
mov
icebp
iret
push
or
mov
sbb
push
jae
lret
or
aas
xchg
dec
mov
insl
or
mov
mov
mov
sbb
xchg
xchg
sub
imul
cmp
mov
mov
stos
mov
in
cli
adc
out
aaa
jb
dec
decl
lods
fdivrs
add
and
or
and
incb
inc
imul
mov
test
dec
ja
das
addr16
cld
ret
inc
inc
repz
jnp
in
jne
jmp
call
fidivrs
push
shrl
sub
shufps
or
and
mov
cwtl
data16
sub
mov
add
jo
dec
pusha
repnz
call
lods
lods
imul
cmp
sbb
push
cwtl
push
pushf
inc
orb
cmp
adcl
fs
dec
xchg
testl
push
push
push
fadds
cmc
add
stos
scas
push
mov
ja
lret
or
lods
jl
push
aas
cmp
mov
fs
aas
jge
pushf
std
mov
fbstp
inc
aaa
ret
rorb
push
xor
mov
jg
xchg
push
popa
dec
rcll
xor
lea
sub
xchg
inc
jecxz
mov
dec
or
mov
xchg
and
in
xlat
or
pop
adc
mov
roll
out
stos
mov
or
mov
pop
arpl
stc
cltd
mov
mov
mov
sbb
aam
test
pop
push
push
push
jo
jae
cld
mov
arpl
jl
dec
xlat
mov
push
push
pushf
jmp
cmp
les
shrl
and
adc
mov
push
call
adc
mov
inc
mov
sub
sbb
sbb
mov
in
test
daa
stc
std
dec
sbb
pop
fcoml
pop
mov
js
inc
xor
fidivrl
mov
sbbb
push
jl
test
or
mov
call
push
adc
outsb
and
ja
call
mov
mov
repz
jo
hlt
dec
in
mov
dec
jge
test
push
pop
daa
mov
pushf
push
aas
or
sub
mov
jp
pop
inc
aaa
or
test
xor
lods
sbb
cmp
pop
mull
sbb
rcr
test
inc
lret
lds
xlat
adc
add
push
insl
push
sbb
outsl
ja
ret
sub
gs
sub
cltd
ret
lods
ret
sbbl
dec
gs
adc
das
and
jmp
xchg
test
popa
loopne
rol
mov
dec
cli
lahf
push
xchg
add
test
and
test
push
pop
outsb
in
stc
shrb
icebp
movsl
ja
fcmovbe
les
imul
add
xchg
inc
mov
pextrw
push
mov
sarl
xlat
shlb
rcr
imul
clc
add
or
insl
addr16
scas
adc
xchg
push
push
notb
push
in
inc
mov
lea
cltd
sahf
mov
jmp
mov
es
mov
jo
aas
jb
insl
mov
movsl
cmp
pop
leave
xor
imul
cmp
ret
cmpsb
fildl
movsb
out
lahf
loop
mov
das
sti
push
dec
jg
clc
push
jmp
xchg
sbb
adc
pop
mov
rorl
jmp
into
in
pop
inc
xchg
call
mov
js
push
imul
cwtl
sarb
pop
loop
jecxz
mov
mov
stos
iret
mov
pop
mov
pop
push
fists
mov
incb
outsb
sbb
mov
sub
sub
push
inc
das
mov
xchg
iret
cld
jnp
ret
jl
leave
mov
lock
cwtl
dec
sbb
add
jecxz
cmp
xor
jbe
lcall
into
mov
jo
stc
mov
cmp
repnz
push
lock
cmp
adc
shrl
cmpsb
jmp
cmpsb
aad
arpl
fidivs
loop
jl
test
mov
stos
mov
ja
aad
mov
out
pop
mov
fidivl
dec
lcall
js
mov
sbb
xchg
and
nop
pop
mov
lods
jns
xor
jg
daa
pusha
sbb
or
insb
sub
imul
push
sbb
push
or
cmp
xor
pop
inc
push
imul
adc
mov
xorb
test
inc
mov
movsl
scas
adc
cltd
mulb
cmp
cli
push
xor
in
sbb
subl
xchg
xchg
lcall
mov
push
xor
pop
xor
das
outsl
inc
daa
lret
jecxz
adc
adc
push
cltd
pop
out
mov
pop
mov
mov
inc
cmp
push
fstps
cmp
pop
in
add
push
jmp
jbe
jns
dec
shlb
or
cmp
add
js
cmp
mov
movsl
cmp
pop
ret
cmp
loop
sti
cmp
outsl
clc
scas
inc
push
cmp
push
movsb
inc
sub
shlb
add
orb
in
add
addr16
mov
push
xor
data16
sub
xor
fwait
dec
or
push
outsb
clc
shlb
push
jb
ret
fidivs
rorb
xchg
out
add
sbb
cmp
mov
jns
adc
int3
cmpsl
push
add
jns
sbbb
dec
sub
mov
cmp
enter
dec
mov
daa
int
cmpsb
cmp
sbb
outsl
ds
mov
xchg
cmp
mov
stos
jmp
add
fsubp
add
mov
xchg
fstl
xchg
test
andb
jle
inc
mov
cmp
sbb
pusha
mov
dec
push
mov
sub
pop
and
in
pop
stos
outsb
call
mov
ret
and
insl
aas
je
scas
jae
xchg
push
and
test
mov
or
cmpsl
mov
icebp
pop
hlt
ret
bnd
test
xchg
daa
cmpsb
adc
addr16
jl
cmp
pushf
jae
popa
not
cs
mov
lcall
mov
rorl
fsub
andb
cmpl
scas
push
jmp
cmp
int3
ret
jbe
outsl
popf
cmpb
sub
inc
sub
pop
repnz
lods
mov
mov
cwtl
punpckldq
mov
ss
xchg
cmp
pop
adc
adc
and
jbe
sahf
sbb
xchg
pop
clc
mov
mov
pop
or
push
xchg
pop
add
sahf
dec
jbe
adc
or
aam
mov
call
repz
push
sahf
out
lea
mov
sbb
dec
xor
pop
pop
sti
dec
gs
int3
loopne
ret
lock
mov
inc
and
testb
add
inc
adc
test
cmp
cs
or
in
rcr
adc
repz
cld
and
mov
sarl
lods
xchg
pop
sbb
out
out
inc
bnd
pop
mov
inc
mov
stos
pushf
mov
or
pop
and
sbbb
mov
out
pop
ja
inc
loop
mov
and
leave
cmp
jg
ja
bound
imul
hlt
addr16
icebp
loopne
mov
dec
adc
lret
mov
cli
jnp
jne
fstps
dec
je
ljmp
sbb
and
dec
pop
jne
cmp
mov
cmpsl
xchg
outsl
rcrb
xor
mov
xor
ret
loopne
xchg
mov
dec
imul
popf
mov
mov
or
xor
fidivrs
and
insb
iret
sub
fmuls
jp
jge
sub
es
xor
ror
jmp
sti
repz
add
nop
xchg
cmc
jl
sub
cmp
fldt
call
add
xchg
icebp
or
mov
ds
rcrl
mov
dec
ret
fsubrl
sbb
and
lcall
rorl
xchg
push
movsl
sahf
push
mov
lahf
xor
fwait
xor
rcrl
add
and
mov
mov
aaa
inc
mov
sub
mov
sti
outsl
sarb
test
int3
mov
lcall
aaa
test
mov
jae
mov
or
push
inc
dec
mov
adc
imul
pop
inc
mov
test
xchg
xchg
adc
ljmp
jle
add
push
push
push
jb
imul
push
ljmp
mov
bound
in
adc
lret
mov
imul
and
loope
int
inc
mov
mov
outsb
roll
add
pop
push
in
out
icebp
fwait
and
faddl
lea
test
rcll
xor
cmp
cmp
cmp
cmp
xchg
popf
jns
int
jp
adc
das
jp
pop
rcll
out
pop
movsb
xchg
add
mov
pop
cmp
push
fildl
aas
sub
or
sarl
or
lret
cli
movb
cmp
pop
incl
sub
sub
movsl
aaa
push
xor
jl
jmp
loopne
sbb
lds
lea
xchg
mov
xchg
add
leave
and
adc
adc
cwtl
lods
xchg
dec
add
jne
mov
test
pop
addr16
mov
dec
idivb
fistps
or
or
fistps
adc
mov
jns
jae
jle
xchg
or
xchg
in
xlat
sub
and
call
push
adc
adc
lds
mov
cwtl
ret
adc
fdivl
xchg
int
es
mov
xchg
insl
es
mov
push
cmp
mov
pop
out
add
iret
stos
scas
dec
popf
arpl
jmp
arpl
push
pop
xor
pushf
xor
lret
je
sbb
aad
stos
jl
sbb
push
push
add
adc
add
shll
pop
xor
movl
sub
in
sarl
add
xor
mov
cli
jmp
pusha
test
add
pusha
inc
add
mov
push
insb
jg
mov
je
mov
js
mov
push
repz
xchg
mov
or
mul
pop
pop
call
lds
fcomip
jnp
mov
in
les
loope
dec
dec
sub
xor
out
jnp
popa
addr16
xchg
sbb
into
movsl
test
js
or
cmp
rcrl
lahf
adc
lret
adc
dec
mov
adc
rolb
arpl
pop
int3
mov
xor
sbb
xchg
sub
xchg
insb
test
xchg
push
mov
std
add
int3
mov
pop
mov
shll
mov
aas
pop
mov
rclb
inc
push
mov
mov
cmp
leave
dec
cmpsl
ss
add
in
rolb
add
sub
fnstcw
jge
dec
shll
test
fwait
incb
xor
fwait
loope
inc
jl
pop
jp
adc
xchg
jno
sbb
lret
fwait
push
add
cmpsb
out
fidivrl
leave
je
sahf
std
nop
inc
or
iret
lret
imul
cmpl
cmp
adc
mov
sbb
mov
bound
jno
push
je
fldl
pop
subl
push
bound
out
push
fsubs
adc
sub
rclb
inc
mov
add
in
rcl
and
sub
cli
mov
scas
addb
mov
add
inc
inc
loopne
test
in
mov
xor
outsl
gs
jg
sbb
cwtl
mov
add
aaa
jle
mov
icebp
or
xchg
mov
addl
push
popa
push
and
and
imul
xchg
xor
fildll
lods
stc
jne
and
leave
aaa
ficompl
shlb
pusha
pop
cmc
xor
mov
dec
mov
dec
sub
stc
pushf
in
add
mov
js
and
push
cmp
andnps
mov
dec
std
xchg
inc
xchg
dec
mov
fisubrs
pop
sbb
jb
mov
or
cmp
inc
int
js
adc
rsqrtps
sub
sub
fwait
cli
cwtl
aad
cwtl
add
push
push
hlt
je
daa
jns
mov
pop
push
icebp
js
iret
pushf
loope
add
mov
pop
and
addr16
enter
fldt
cmovne
pop
xor
leave
inc
outsb
inc
out
jecxz
and
lock
xchg
xor
add
xchg
mov
xchg
push
add
test
js
ficoml
add
scas
add
mov
outsl
push
xchg
popa
mov
sarb
scas
addr16
inc
fs
inc
inc
push
nop
dec
dec
push
pop
je
inc
in
and
out
std
dec
pop
and
icebp
sbb
cmp
cltd
jbe
movsb
push
outsb
cli
xchg
sbb
push
add
xor
sub
push
add
arpl
repnz
lods
lds
or
shll
xchg
test
lea
push
iret
cmp
in
sub
mov
addr16
and
adc
ds
pop
ror
inc
js
je
mov
sbb
adc
jnp
xor
inc
ret
push
cmpsb
sub
add
jno
xor
mov
push
cltd
push
loope
cs
mov
imul
push
fiadds
aad
sbb
outsl
aam
lods
insb
adc
add
int
std
mov
push
or
mov
xor
mov
aam
mov
cmp
out
loopne
mov
sub
sbb
rclb
ja
sbb
loop
mov
jge
jl
lock
xchg
repz
pop
aad
ljmp
je
push
call
mov
jl
cmpsb
jae
out
jmp
cs
inc
adc
cld
ja
andb
add
xchg
out
and
flds
outsl
dec
cmp
pop
scas
negl
rcrb
sbb
mov
push
xor
ror
insl
jle
ja
dec
mov
jne
pop
adc
loop
gs
sub
divb
repnz
movsl
xchg
es
mov
mov
rorl
fadds
and
imul
add
mov
hlt
aam
pusha
out
dec
adc
cs
cmpsl
jno
lret
movb
movsl
loop
inc
mov
adc
shll
or
xor
mov
cwtl
sub
push
pop
cmpsl
add
push
aam
lods
outsl
xor
scas
mov
rcrb
cmp
sub
or
xor
mov
and
jl
push
insl
pushf
mov
imul
cld
mov
pop
test
out
inc
push
mov
out
leave
cmp
icebp
cld
scas
mov
cmpsb
mov
xor
dec
lret
sub
stos
jo
xchg
imul
or
arpl
lods
mov
scas
cmp
lcall
inc
sub
jno
adc
jp
jmp
push
cmc
dec
mov
inc
fwait
pop
sub
sub
push
scas
int
pushf
lods
inc
jp
xchg
cmp
cwtl
jns
mov
jecxz
outsb
insb
sbb
mov
js
xchg
pop
and
add
jp
add
mov
shl
mov
cs
test
mov
push
lods
lahf
add
xchg
dec
xchg
pop
gs
mov
mov
jg,pn
mov
lea
cli
stc
dec
out
push
insl
fistl
mov
mov
jae
fwait
and
lcall
lahf
and
mov
push
and
mov
mov
mov
xor
push
mov
sti
ret
sbb
sub
pop
pmaddwd
or
and
orl
fwait
not
pop
cmp
inc
inc
sub
bound
cmc
push
add
roll
add
int
xor
push
cwtl
jl
ds
xchg
add
mov
test
jns
stc
outsb
ja
sbb
or
xor
and
into
outsb
or
cmp
mov
jbe
pop
hlt
and
jecxz
aam
icebp
lds
push
mov
xor
xchg
and
xor
mov
jns
sub
add
jl
out
or
jle
cmpsl
sub
sub
jo
daa
pop
test
inc
jp
into
ficoml
jmp
js
mov
cmp
pop
ss
sub
std
out
int
mov
outsl
jbe
sub
add
clc
in
inc
add
add
cmp
test
rcrl
sbb
and
push
pop
inc
cmpsb
fldl
inc
popa
adc
jbe
das
rol
mov
ds
pop
push
in
enter
aad
add
sub
xchg
pop
scas
fs
test
loope
enter
loop
add
cmp
aaa
addb
shll
ja
mov
test
popf
loopne
dec
mov
or
push
sbb
dec
pop
mov
testb
sub
and
mov
iret
xor
clc
fcomp
aas
jae
inc
lahf
in
sbb
arpl
cmovbe
jmp
insl
pop
arpl
sbb
test
push
mov
aam
or
pop
inc
xchg
in
pop
fnstcw
shrl
aam
es
test
fdivrs
insb
icebp
les
mov
jns
aad
fdivrl
call
xor
push
mov
shll
movsb
pop
mov
ret
fsubl
stc
sbb
movsl
jbe
xchg
dec
notb
out
ficoml
sbb
sarl
cli
jl
pop
fs
mov
aad
pop
and
addr16
scas
shll
stos
adc
aad
push
insl
pop
cmp
cmp
cmp
dec
push
adc
out
fwait
cmpsb
adc
mov
das
xchg
ret
out
cmc
or
in
inc
mov
cwtl
dec
inc
xlat
pop
cmp
or
or
test
icebp
pop
inc
scas
enter
inc
add
sub
mov
xor
scas
xchg
adc
add
fldcw
push
fstpl
shrl
fwait
mov
inc
add
scas
sti
adc
out
jns
and
ficoml
cmp
push
lahf
lds
jae
faddp
push
enter
add
fdivr
pop
inc
pop
add
add
mov
push
xchg
cmp
je
movsb
push
js
and
sub
imul
loope
mov
je
hlt
rcrl
jge
repz
push
and
fsubrs
cmp
shlb
mov
fldenv
loopne
addr16
stos
adc
jmp
in
js
test
sarl
mov
and
lds
xorl
ja
dec
insl
sti
cli
pop
mov
and
mov
pop
into
or
mov
insl
pop
iret
jb
sub
cmp
mov
push
push
inc
cmp
sub
gs
ljmp
mov
int3
jecxz
enter
and
pop
fsts
int3
jl
xor
movsb
js
lret
dec
test
in
and
jbe
repnz
dec
insb
cmp
jmp
adc
fsubl
add
aaa
pop
iret
fdivrl
stos
mov
mov
and
jg
lea
insl
rorl
bound
imul
adc
mov
hlt
ja
pusha
xchg
test
addb
jbe
dec
xor
es
es
fcmovb
ds
cltd
scas
xchg
daa
sbb
inc
repz
sbb
shlb
add
dec
bound
sbb
adc
ss
popa
orb
push
fistpl
dec
adc
int
and
and
ljmp
fsubrl
sub
ret
jb
out
aaa
sbb
pop
push
push
cmp
repz
scas
cltd
ljmp
iret
arpl
clc
xor
ret
push
subb
cmpsb
adcl
cmp
out
insl
je
leave
aam
lods
cmpsl
xor
cli
xchg
outsl
cltd
inc
aam
sti
adc
je
or
jle
out
icebp
in
aaa
mov
or
call
sub
icebp
popf
cmpsl
or
rcrl
movsb
cwtl
incb
and
hlt
jnp
into
or
incl
cmp
add
outsb
adc
or
addb
andb
push
aam
je
and
push
jmp
rcrl
xchg
sbb
stc
inc
pop
push
jg
pop
jge
cli
push
adc
or
test
addr16
outsl
xchg
inc
mov
pop
and
je
test
jo
lea
inc
fcmovu
cld
clc
rorb
imul
sbb
add
push
or
lea
xchg
and
mov
daa
adc
mov
insl
cmp
cli
push
lods
xchg
sarb
mov
push
in
lret
xor
add
xchg
inc
and
xorb
ja
lods
mov
mov
xchg
sbbl
cld
cmpsl
xor
adc
inc
leave
lcall
push
scas
adc
cmpsb
lods
xchg
orb
mov
adc
and
mov
movsb
push
fnstsw
out
ss
movsb
aas
dec
imul
sbb
mov
cmc
mov
stos
ret
movzbl
and
psllq
mov
idivb
sub
mov
out
add
cmp
rorb
fdivrp
pop
sub
ret
xor
mov
out
pop
jo
movsb
ss
inc
nop
jae
mov
or
gs
out
mov
xor
cmc
xchg
aad
dec
cmp
add
data16
data16
jl
adc
dec
loop
and
pop
fs
mov
ret
sahf
jle
cld
pop
dec
mov
sbbl
loope
push
fucom
xchg
xorb
add
ret
sbb
in
inc
push
xor
push
mov
cmp
out
cmpsb
mov
dec
inc
clc
enter
jge
cmpsl
mov
shlb
cmpsb
iret
pop
xchg
and
sbbl
xor
bound
push
lods
mov
add
mov
and
dec
dec
pop
or
dec
scas
sti
or
mov
enter
loop
lret
inc
insb
mov
icebp
sbb
loope
lods
cmp
jns
push
sbb
leave
fadd
add
adc
loopne
sub
scas
dec
mov
sub
mov
jge
cli
pop
cmp
push
dec
ljmp
jb
ret
dec
inc
mov
mov
xor
enterw
sti
scas
or
popf
add
enter
mov
bound
push
movsb
xor
xchg
cs
addr16
and
lret
pop
les
loop
ljmp
repnz
jecxz
jmp
jp
loop
pushf
push
fwait
subl
jnp
dec
pop
or
scas
cld
jae
lods
push
jle
mov
or
jne
pop
cwtl
jmp
jp
mov
popf
dec
bound
jae
adc
dec
popa
pop
or
jno
int3
into
pop
add
shll
cltd
mov
outsb
mov
xor
sbb
fcmovu
or
mov
ss
jp
lds
mov
xor
mov
xor
outsl
lods
cmpsb
sub
ret
fsubl
lahf
stc
xor
repz
scas
cltd
push
adcb
cld
adc
mov
pushf
xchg
pop
addr16
scas
xor
adc
js
jl
mov
push
std
xchg
cmp
push
xor
movsb
rorb
jge
mov
bound
mov
pushf
adcl
sbb
cmp
in
xor
cmp
sti
shrl
inc
ss
test
add
add
adc
lock
out
mov
lahf
mov
sahf
pop
pop
das
push
sub
fwait
call
fsts
pop
iret
int
gs
add
fists
mov
stc
insl
xchg
jbe
mov
cmp
cmc
push
push
std
jnp
dec
xor
insl
mov
mov
divb
lret
dec
push
dec
lcall
push
cli
pop
dec
ja
scas
pop
lock
push
mov
rolb
mov
xchg
jno
xchg
push
jne
call
lea
outsb
cmp
add
ret
mov
sarb
sbbb
lret
sahf
imul
mov
adc
pop
scas
sbb
test
cmpsb
in
cmp
in
push
loopne
adc
rolb
or
into
sbb
push
movsl
mov
and
call
sti
dec
cld
ljmp
cltd
sti
loopne
or
sub
lcall
bound
lock
and
xchg
inc
and
arpl
mov
add
mov
xor
pcmpeqd
xlat
fs
pop
sahf
int
fisubl
and
lock
shr
adc
xchg
or
mov
and
mov
dec
jl
mov
fisubs
cli
ja
or
int3
inc
add
sbb
mov
je
leave
push
inc
es
and
sub
sahf
inc
das
xchg
adc
outsb
and
and
and
enter
mov
jp
pop
mov
inc
mov
dec
test
xlat
cmp
in
popf
ret
or
fnstcw
ljmp
and
adc
retw
lock
movsl
and
dec
mov
jg
add
mov
dec
movsb
std
aad
dec
add
jge
stc
cmp
mov
dec
repnz
pop
sti
jmp
test
jnp
lret
mov
sub
lret
xchg
pusha
jnp
test
lds
sub
sbb
and
mov
sti
int
inc
xchg
pop
fimuls
lods
popa
xor
push
jne
cmp
jmp
es
sub
push
and
adc
add
in
iret
iret
push
push
fnsave
aam
push
outsl
rcl
sub
push
fisttpl
or
and
stc
mov
push
jae
cmpsb
popf
jns
clc
mov
loope
adc
fildll
pop
outsb
inc
push
or
jns
xchg
sbb
push
push
mov
mov
mov
aaa
test
mov
mov
lcall
jg
push
test
mov
or
popa
sti
pusha
jp
test
add
in
std
jp
loope
iret
mov
sbb
xchg
or
sbb
insb
push
cmp
xor
lcall
jp
nop
adcl
aaa
sysret
mov
jbe
cmp
dec
add
xlat
xchg
movsl
sbb
lock
repz
shll
insb
aaa
mov
adc
push
into
push
mov
and
add
paddsw
repz
sarb
jnp
lahf
mov
std
cwtl
xor
pop
iret
gs
leave
insb
mov
push
scas
test
inc
pop
jo
pop
xchg
outsl
sub
sbb
or
or
mov
sbb
dec
pop
pushf
nop
and
dec
dec
call
outsb
cmp
daa
sub
fdivr
fcomps
shll
test
cmp
pop
lods
fwait
into
in
dec
push
fstpt
inc
sub
fwait
xor
push
lock
pop
jecxz
sarb
test
fs
rolb
inc
mov
mov
mov
sub
aaa
icebp
sbb
pushf
lcall
xchg
jne
test
xor
jnp
and
mov
pusha
pop
enter
xchg
mov
cmp
addb
test
adc
mov
jge
push
fldcw
cmpsb
aam
xchg
mov
jae
out
popf
ljmp
inc
mov
repnz
xchg
xchg
jge
int
shll
cltd
or
jecxz
jno
fsubrl
arpl
push
fisubrs
push
mov
daa
sbb
inc
dec
loopne
in
cmp
push
sbb
int
out
xchg
cs
sbb
fcomps
push
mov
fsubs
test
sarb
ret
push
or
jb
divl
shrl
add
adc
push
loop
push
mov
mov
push
cmp
iret
int
inc
jge
lds
aad
mov
icebp
bound
stos
int3
push
dec
fcoml
stos
pop
jg
cmp
xor
xchg
fs
push
pop
push
lea
test
movl
popl
shl
iret
or
pop
mov
or
cwtl
out
mov
mov
xor
in
jns
and
and
and
ficoml
mov
nop
mov
sub
fidivrs
cmc
xcrypt-ofb
cmpsl
insl
adcl
ljmp
sub
jge
addb
dec
imul
jno
push
fcompl
shl
xchg
lds
lds
data16
jecxz
cwtl
push
and
cmp
arpl
mov
mov
or
pushf
mov
fstp
or
out
je
test
push
jmp
stos
aaa
popa
test
js
or
mov
pop
pushf
pop
orb
xchg
dec
dec
jo
mov
mov
pop
popa
mov
mov
loopne
add
adc
inc
ja
pop
xor
shl
push
push
jecxz
push
lods
mov
push
and
dec
loopne
xchg
ja
adc
out
mov
add
out
xor
in
inc
cmpsl
jmp
pop
sbb
scas
sbb
lock
jmp
fstpl
jbe
mov
stos
mov
je
inc
dec
or
jl
or
xchg
cmpsl
test
pop
ja
movsl
scas
fstps
add
mov
inc
rcl
call
out
inc
and
cmp
xchg
aad
xchg
lret
insb
xor
dec
xor
aas
mov
lods
xchg
cmp
mov
insb
or
inc
imul
jle
and
xlat
pop
js
sahf
jns
sbb
or
adc
and
cmp
leave
push
mov
dec
or
lea
xchg
or
xor
out
fmuls
inc
addr16
ror
mov
popf
movsb
enter
jnp
adc
mov
out
inc
inc
push
pop
inc
es
mul
push
mov
lea
jns
outsb
pop
cmpl
mov
jne
inc
pop
pop
cmp
dec
aam
int3
icebp
mov
jecxz
sbb
and
repz
xlat
xor
stos
cmpsb
push
add
repz
push
aas
ficompl
mov
inc
push
pop
or
pop
xchg
popf
and
add
add
adc
xor
mov
jbe
jge
xor
mov
or
std
cmpsb
mov
scas
jae
pop
fcompl
sbb
add
mov
dec
rcll
outsb
iret
icebp
jle
pop
xchg
insl
das
push
cmpsl
pop
lock
push
dec
scas
sbb
pop
cmpsl
in
daa
shrl
jnp
and
dec
xchg
fcmovnbe
jg
in
arpl
push
jns
push
lods
in
dec
pop
shll
jge
xor
jne
sbb
call
or
adc
mov
push
jmp
mov
jno
cld
xor
jle
loop
adcl
pop
xchg
aas
adc
xchg
sub
lret
dec
cmp
dec
roll
imul
popa
daa
bound
mov
cmc
mov
or
enter
pop
mov
xchg
imul
fmulp
adc
pop
je
cmp
popa
clc
xor
inc
movsb
into
xor
xor
enter
jne
mov
test
dec
jge
loop
sbb
mov
mov
push
lock
test
lods
inc
xor
cli
outsb
push
inc
jbe
push
gs
xor
pop
adc
add
pop
sbb
add
fneni(8087
mov
pop
push
cli
push
push
sbb
jg
push
mov
pop
jg
sub
mov
leave
xchg
cli
mov
jbe
lcall
inc
loope
cmp
adcl
mov
in
loopne
lods
add
mov
inc
imul
dec
add
mov
imul
pop
sub
outsb
or
popf
inc
sbb
fimull
dec
insb
xlat
lds
jo
movsb
mov
lahf
addr16
in
rclb
cli
ja
jns
out
sahf
xor
cmp
mov
cli
ret
cld
xchg
or
in
push
add
mov
mov
es
lods
xchg
add
xchg
addr16
xor
movsb
out
cmp
xchg
jle
bound
xchg
testl
ljmp
fsubp
leave
add
push
jl
jno
jl
shrb
push
sub
cwtl
pop
test
inc
dec
sub
push
shl
push
pop
mov
push
movl
out
sub
movsb
push
fcoms
add
stc
pop
xor
out
xchg
sti
jne
xor
ror
dec
cld
fwait
sbb
bound
js
lret
dec
cs
sbb
out
jae
into
xlat
ljmp
pop
xlat
icebp
jl
divl
xchg
aaa
mov
pushf
pop
push
inc
mov
add
xchg
add
dec
sbb
jae
outsl
dec
aad
add
cmpsb
ss
sbb
sub
jg
mov
inc
xchg
pop
test
jecxz
xor
xchg
push
ficoml
push
decb
xor
inc
ffree
adc
cmp
sbb
subl
sbb
pop
loop
cmpl
stc
push
adc
add
jae
jnp
or
mov
out
test
dec
cli
subb
sbb
in
sub
mov
add
dec
or
inc
insb
sti
rcl
cwtl
mov
jne
xchg
dec
out
add
das
ja
push
xor
fisubl
jnp
jns
sbb
imul
shrb
repz
lock
cmpl
sarb
and
ret
sub
ret
daa
rcrl
xchg
fucomp
mov
dec
in
push
ror
shrl
shr
addr16
xor
in
into
cmpsb
cmpsb
fsubr
inc
loope
clc
lds
gs
jmp
dec
ja
movsb
jg
aas
mov
and
cmp
lds
andl
icebp
cld
lahf
inc
cwtl
and
arpl
cli
int3
pop
addr16
gs
fidivrs
adc
xor
out
shlb
in
fcomps
fdivrl
sub
adc
fcomi
dec
sub
adc
and
lods
jl
popf
in
pop
ljmp
sbb
inc
mov
mov
pushf
insl
stc
popa
out
xor
adc
les
push
dec
jg
leave
test
insb
int3
pop
or
mov
fwait
ljmp
sub
push
cmc
rol
jae
inc
dec
jne
in
imul
mov
cmpsl
jge
aaa
mov
xchg
icebp
mov
movsb
loopw
out
adc
shrb
test
inc
ds
sub
sub
push
mov
jge
adc
pop
xchg
cmp
mov
shll
sbb
lods
xchg
dec
add
enter
pop
mov
push
push
int
jl
mov
jmp
ret
lret
std
xchg
xor
pop
jl
lcall
inc
push
mov
fsubr
cltd
pusha
jnp
mov
jg
out
and
cmp
fs
dec
xchg
shl
xlat
mov
pop
mov
push
mov
shlb
push
in
xchg
mov
repz
data16
daa
aas
adc
pop
mov
or
mov
out
add
sub
xchg
hlt
imul
mov
and
xchg
iret
pop
movsb
fs
jge
cmc
mov
xor
ljmp
imul
or
pop
xchg
jp
sub
push
adc
ljmp
and
popf
stos
out
and
outsl
push
dec
gs
hlt
push
divl
fsubrs
outsb
out
outsl
mov
jecxz
je
inc
into
nop
pop
lods
rorb
in
push
dec
dec
inc
lock
fnstenv
cmp
cmc
mov
mov
or
and
lods
sbb
fmul
pop
leave
pushf
sbb
lods
dec
arpl
push
divb
icebp
dec
nop
test
icebp
aas
inc
jbe
add
jle
imull
jno
and
cmp
fildl
leave
inc
sub
lahf
push
add
test
jl
aas
ds
add
cmp
aaa
fcomp
or
mov
out
inc
scas
and
push
ja
mov
outsl
imul
cmp
out
sbbl
push
pop
mov
or
adc
dec
subl
js
xchg
inc
and
std
mov
adc
pop
push
jmp
xchg
lds
push
orb
mov
sti
ds
popw
xchg
sbb
call
sti
repnz
fistps
push
sub
jg
das
add
or
mov
jo
popf
loopne
insb
fbld
sahf
xchg
rolb
addr16
fdivr
stos
jmp
cmpsl
sti
push
or
add
ss
movsl
push
lods
aam
adc
imul
div
inc
jg
dec
mov
mov
inc
xor
mov
adcb
lods
leave
or
cld
dec
mov
cmpsb
xor
orl
inc
xor
mov
subb
mov
cmp
xor
xchg
inc
add
imul
adc
mov
cmp
or
inc
lds
sahf
jno
arpl
cmp
mov
data16
clc
xor
pop
cmpsb
sar
push
sbbb
rcrb
push
jg
jl
dec
push
jbe
addr16
xchg
out
daa
sti
cmpsb
pop
pop
inc
lss
scas
or
push
or
subb
vpunpckhqdq
inc
push
and
and
pop
push
push
adc
decb
repz
xorb
fs
sbb
sub
xor
stos
into
add
inc
subl
push
inc
push
dec
jecxz
inc
sub
fstpt
imul
repz
mov
pop
out
not
lds
pop
add
or
andb
jno
or
cmp
xor
sar
push
inc
add
andl
xchg
pop
pop
adc
in
jb
test
add
lock
fiadds
push
sbb
inc
add
icebp
lret
addl
test
dec
stos
lods
push
clc
pop
sub
cltd
ret
mov
stos
add
repnz
or
lock
dec
cli
into
call
loope
loopne
out
into
sti
lret
mov
and
inc
loope
imulb
xor
rclb
movsl
jmp
push
enter
adc
xlat
sti
loop
lds
add
xchg
mov
repnz
mov
inc
cmc
adc
js
call
ljmp
sti
cmp
aad
movsl
lods
stos
push
fnstenv
push
xchg
xor
push
xchg
scas
jo
jge
outsb
insl
or
addb
rcl
int3
outsl
push
adc
int3
sbb
mov
push
mov
cmp
sbb
cltd
sbb
les
int
jnp
mov
out
insb
out
cmp
iret
lock
push
pop
mov
dec
out
adc
sbb
xlat
mov
dec
cmp
jge
inc
into
dec
iret
aad
lahf
sub
push
pop
lahf
insb
cmp
mov
pop
inc
mov
mov
inc
dec
xchg
rcl
mov
outsb
add
mull
sahf
xchg
adc
jg
or
add
sti
inc
shrb
xchg
mulb
lds
ds
push
fdivr
xor
sbb
xchg
mov
inc
pop
jl
scas
pop
mov
xchg
push
fdivrl
out
test
cmp
xor
push
mov
gs
xchg
outsb
adc
mov
jns
fnsave
adc
jbe
dec
negb
and
test
stos
loopne
mov
mov
outsb
xchg
mov
sub
xchg
and
loopne
lock
rcl
push
scas
cli
inc
mov
jbe
js
in
jmp
imul
xchg
sub
outsl
cmpsl
cmp
das
std
cmp
lret
xor
icebp
pusha
ret
jne
inc
push
pop
fwait
es
mov
lcall
adc
dec
mov
dec
mov
sub
jb
insl
mov
xchg
mov
jnp
xor
xchg
mov
push
cli
out
mov
dec
and
xor
das
mov
mov
loopne
jmp
repnz
pop
and
dec
jp
cmp
les
subb
call
jge
push
xor
and
aad
mov
adc
jne
or
pop
nop
lret
cmp
mov
test
sti
les
jbe
outsb
or
inc
iret
leave
push
std
cmp
xchg
ret
pushl
xor
jno
test
pop
fistpll
mov
mov
xchg
or
rclb
test
int
and
jmp
icebp
or
inc
inc
std
in
icebp
fsubp
pushl
xor
and
sub
repz
fisttps
shrl
push
dec
push
loope
sbb
out
dec
or
icebp
out
arpl
jo,pn
enter
dec
test
xor
sti
shrl
sar
jae
sbb
fldl
daa
rolb
and
inc
push
xor
cmc
add
cmpsb
cltd
cmp
jl
cmp
insl
push
add
and
test
jecxz
jno
adc
sbb
push
test
pop
les
rcrl
jae
inc
sub
inc
sbb
mov
scas
and
mov
jge
jbe
stos
mov
cli
outsl
jl
mov
mov
shrl
mov
in
mov
mov
push
push
mov
pop
jle
lret
aas
push
lea
test
adc
and
xacquire
sub
xor
xchg
mov
jge
sbb
les
sub
test
stos
push
ja
cwtl
maskmovq
notl
xchg
pop
mov
cli
pop
cmp
clc
mov
daa
push
insl
adc
insl
and
cmp
jmp
mov
xchg
pushf
or
jecxz
xor
pop
sub
rcr
gs
test
minps
adc
insl
lret
mov
xchg
xchg
cmp
sbb
arpl
pop
inc
xchg
jecxz
inc
and
inc
dec
push
jmp
shlb
xor
pop
sbb
sbb
in
adc
in
lret
xchg
add
jae
mov
and
je
out
jo
cmc
test
cld
mov
xchg
adc
dec
out
xor
xchg
movsl
and
stos
fdivrs
mov
dec
jmp
fists
cmp
ja
dec
les
lock
pop
add
mov
punpckhbw
pop
xchg
xchg
jnp
cmpb
mov
mov
xchg
sbb
add
sub
sub
dec
inc
outsl
xchg
into
fidivrs
pop
pop
lcall
xorb
jmp
or
xor
ljmp
mov
lcall
cmp
mov
dec
pop
popf
dec
imul
cmp
shrl
loope
aaa
xchg
lock
cmp
cmp
lods
push
fcoms
lea
mov
pop
lods
test
imul
and
scas
jbe
jnp
sub
scas
jmp
xor
cmp
push
sbb
xchg
mov
aad
inc
lds
push
xor
add
push
mov
xlat
mov
sbb
scas
pop
int3
cmp
mov
pop
mov
clc
repz
cld
test
add
clc
loope
cmp
sbb
lods
sbb
lock
cld
lret
sbb
in
cmp
dec
pop
out
lods
imul
pop
iret
add
push
and
outsb
lahf
int
fldl
mov
ret
cld
dec
scas
hlt
or
int
inc
shl
nop
sub
xor
test
cwtl
in
sub
test
jns
sub
dec
pushf
out
outsl
push
push
lods
mov
sbb
jb
sub
xlat
jle
outsl
clc
mov
xchg
xor
mov
jbe
mov
lcall
jb
mov
hlt
decl
daa
or
adc
or
pop
aaa
push
jl
xchg
rorb
mov
adc
pop
cmp
cld
and
mov
outsb
test
loop
add
pop
or
ret
lahf
sub
sbb
stos
xchg
lret
mov
push
loopne
push
pop
mov
ret
cmpsb
and
jns
fst
lea
dec
or
icebp
iret
test
or
sbb
movhps
cmp
mov
adc
popa
fdiv
pop
push
mov
scas
xor
mov
jnp
or
out
jb
adc
notl
aam
iret
in
push
adc
mov
aaa
inc
mov
sbb
xchg
jp
ds
mov
sbb
mov
sub
add
mul
mov
pop
inc
fnsave
sti
jge
fstpl
nop
inc
push
mov
pusha
mov
je
outsb
add
sub
fistpl
mov
inc
in
js
movl
pop
subb
push
and
push
sbb
cmpsl
outsb
xchg
pop
or
scas
xchg
pop
loop
and
rcrl
jmp
lods
adc
fdivl
or
cmp
sbb
add
dec
mov
pop
push
insl
imul
shll
mov
or
in
stos
xor
or
cmp
sbb
out
pop
jae
mov
stos
xor
divb
adc
jbe
ret
mov
push
jge
push
les
dec
sarb
int3
decb
xor
sahf
lock
mov
or
pop
scas
cmp
jge
cwtl
mov
cmp
inc
jo
jnp
scas
ja
pusha
popa
cld
imul
js
mov
pop
into
ret
sbb
mov
fcomps
pop
enter
fwait
scas
xchg
add
cmp
jge
test
inc
into
lret
gs
jecxz
inc
mov
ja
lea
or
add
imul
dec
jne
ret
and
ss
jnp
lahf
push
pop
add
pop
xchg
push
cmp
insb
pop
add
bound
push
inc
or
or
loope
adc
cld
scas
adc
shll
lds
jnp
push
daa
outsl
and
imul
pop
pop
pop
lret
aam
jl
sti
push
mov
pop
sbb
push
and
daa
ja
test
xorl
ficoml
cmpb
pusha
adc
mov
jae
add
orb
and
pop
ljmp
sar
lock
std
xchg
dec
hlt
xchg
add
cld
ja
sbb
into
jle
push
jmp
fcoms
adc
xor
leave
dec
inc
and
cwtl
add
call
xchg
insl
addl
test
add
push
and
popa
add
lea
pop
ds
data16
inc
cmp
scas
xchg
repz
pop
sbb
add
fs
xor
in
jecxz
aas
cwtl
es
shrb
dec
xchg
arpl
xchg
int3
mov
add
push
xchg
or
or
ffreep
dec
jb
adc
sbb
dec
cmp
mov
or
js
jb
jnp
bound
fmuls
xor
inc
jb
mov
sbb
loop
xchg
jno
sbb
nop
out
adc
mov
add
in
jbe
sarl
or
cmp
sub
inc
int
push
shrb
sahf
hlt
xlat
aad
lods
fdivrs
rclb
inc
movb
imul
lahf
cmp
ret
xor
sti
repnz
pop
xor
xor
dec
in
xchg
cmc
dec
cmp
push
adc
mov
sub
xor
outsb
mov
hlt
pop
out
ficoms
xchg
xor
push
cmc
int3
inc
mov
xlat
push
push
testb
scas
pop
cli
imul
cmp
jb
pop
jp
pop
outsl
imull
mov
sbb
test
insb
xchg
sti
pusha
pop
and
mov
cmp
out
in
or
rolb
movsb
ljmp
sbb
cmp
lock
inc
cmc
fidivl
mov
insl
mov
fnstcw
testb
add
cmp
xchg
and
aaa
dec
test
xchg
cmp
test
dec
jg
and
pop
in
out
mov
jl
dec
in
mov
jb
xor
jg
dec
jecxz
push
and
lods
adc
repz
shrl
pop
jb
stos
lods
stc
fistps
shr
sub
fnstcw
sub
rorl
jge
dec
xchg
mov
imul
adc
repnz
mov
mov
cmp
call
jmp
push
test
adc
push
insl
daa
jnp
mov
mov
cmp
add
mov
mov
and
arpl
jge
add
sbb
imul
loopw
lahf
stos
mov
nop
dec
mov
adc
mov
jno
in
push
inc
sub
ss
fsub
fists
aad
sarl
mov
jno
push
or
add
add
in
pop
jb
xor
stos
fcoms
neg
pop
fnstenv
aad
out
add
fistpll
xchg
hlt
cmp
or
push
scas
inc
dec
inc
cli
shrb
fbld
or
in
xchg
in
pop
call
call
ja
add
adc
sub
pop
cs
mov
xor
xchg
scas
in
pop
fstl
inc
repz
add
push
mov
bound
or
shrb
pop
insl
mov
sbb
push
lods
sbb
jne
mov
mov
out
lds
inc
fiaddl
mov
rolb
inc
add
or
stos
cmc
mov
pop
push
pop
sti
cli
dec
sahf
jp
pop
test
popf
iret
sbbb
jne
cwtl
js
mov
mov
mov
dec
jne
jp
fmull
cmp
dec
mov
mov
cmp
inc
leave
imul
and
rorb
std
mov
sbb
jge
cmpl
pop
movsl
push
cmp
jle
adc
dec
aaa
mov
cmp
outsl
cwtl
subl
jle
addr16
add
jecxz
sub
cltd
nop
mov
sub
das
mov
repnz
sbb
shrb
das
movsl
addr16
lock
jne
pop
jns
sbb
xchg
dec
pop
fisttps
fcompl
test
or
dec
int
and
imul
sub
test
mov
sbb
xor
ljmp
mov
pop
enter
ret
enter
subl
loopne
sbb
sub
roll
dec
xchg
or
xchg
xchg
add
dec
iret
dec
xor
xor
bts
int3
mov
xchg
xchg
mov
roll
es
lret
push
icebp
enter
pop
jbe
xchg
push
and
popf
shlb
xor
scas
mov
fdivrl
imul
jbe
xchg
mov
in
xchg
jg
jl
mov
adc
push
cmpl
pop
iret
popa
mov
fwait
dec
mov
fcmovne
dec
dec
je
add
add
shll
ds
pop
sbb
scas
add
add
cmp
pop
int
fldt
test
cmpsl
sub
cmp
pop
les
jo
imul
mov
arpl
adc
ds
fcomip
mov
xchg
pop
sub
loop
sub
mov
ljmp
xor
cmp
rclb
imul
jne
stos
stos
les
rcrb
or
jl
fs
ret
les
ret
jnp
mov
imul
std
inc
mov
cltd
jae
push
testb
mov
dec
aam
shll
std
das
xor
jne
inc
aam
xor
pop
jbe
repnz
test
dec
shl
loope
mov
cmp
stos
mov
shlb
mov
movb
fs
lods
push
sbbb
rolb
popa
xor
cs
stos
inc
xchg
int
cwtl
jl
pop
mov
cmpsl
mov
sub
dec
popf
inc
call
adc
push
jne
inc
and
ds
fwait
inc
adc
push
jae
rcl
mov
push
jle
sub
and
mov
mov
loop
adc
ss
jbe
adc
lock
sbb
xor
pop
mov
cltd
cmpsb
cmc
mov
mov
sbb
mov
arpl
cmpsb
roll
jp
iret
push
mov
call
rolb
jbe
lret
sub
mov
adc
xchg
mov
and
sub
dec
lds
push
xchg
aam
popa
rorb
cs
xor
inc
pop
push
push
aam
push
rol
mov
xchg
mov
sub
xchg
les
dec
xor
scas
movsb
jnp
es
aad
jns
mov
loop
fs
jae
out
pop
or
xchg
push
imul
aam
mov
mov
pop
or
daa
or
add
cmp
or
into
daa
xor
mov
and
dec
ja
stos
mov
jnp
cmp
push
ljmp
jge
mov
adc
fdivrs
std
rorl
lods
adc
sbb
xchg
cmpsl
cli
imul
inc
adc
push
pop
movsb
sets
xor
mov
ja
pop
mov
jnp
loopne
es
lret
adc
dec
push
dec
add
xchg
cwtl
mov
iret
lret
aam
adc
inc
mov
pop
and
and
loope
xor
fdiv
adc
cmp
mov
subb
clc
pushf
xchg
rcll
sbb
pop
ss
pusha
loopne
sbb
lea
icebp
add
ss
mov
out
idivl
dec
shrl
aam
jl
lcall
push
mov
jno
or
aaa
jmp
cmpsl
inc
xlat
outsl
cmp
clc
ss
cmp
and
test
or
out
xchg
enter
cmp
in
outsb
push
cmc
addl
gs
sarb
xchg
mov
lds
out
add
adc
adc
add
lea
sbb
and
mov
loop
out
pop
rclb
dec
pop
or
inc
cmp
mulb
leave
push
xchg
inc
jae
jge
mov
jns
cmp
in
lahf
mov
repnz
popf
push
xchg
outsb
repnz
mov
push
add
dec
fisttpll
jecxz
les
mov
cmpsl
cli
pop
dec
mov
mov
or
nop
dec
call
cmc
cltd
ljmp
pusha
dec
xlat
push
jle
outsl
dec
sub
sbb
sbb
jb
mov
mov
inc
scas
and
dec
cmpsl
mov
lcall
sub
repz
test
out
sub
xor
loope
scas
xchg
scas
rorb
or
push
lret
xchg
mov
dec
gs
in
lcall
mov
jnp
inc
ja
add
les
in
xlat
lahf
adc
xchg
and
or
cmp
sub
test
imul
jnp
inc
ljmp
dec
xor
add
jle
scas
xchg
fcompl
adc
xorl
scas
pop
clc
xchg
xchg
mov
push
mov
push
ljmp
scas
daa
push
daa
int3
cs
cmpsl
inc
jno
insl
mov
das
sub
xchg
dec
pop
iret
sub
xor
lock
mov
and
decl
test
push
dec
sbb
pop
jg
ds
std
jmp
aaa
xchg
lcall
sbb
pop
dec
or
xlat
clc
movsb
xchg
inc
or
xor
push
in
mov
jecxz
mov
rorb
push
ficoml
fidivl
jp
push
ljmp
xor
sub
mov
andl
push
xor
lahf
fucomip
and
push
pop
ret
and
std
xor
xor
sti
xchg
sub
mov
xor
sbb
xor
jp
pop
mov
jo
fwait
jle
popa
insl
leave
dec
roll
lret
push
and
in
outsl
inc
dec
cmp
push
out
ret
ja
pop
daa
incb
int
movsb
les
daa
inc
out
popa
jne
xor
jg
hlt
or
ja
jns
ja
stos
dec
lea
fcmovnu
cmpsb
add
mov
lock
repnz
pop
repnz
pushf
dec
jl
test
jmp
data16
test
push
test
cwtl
push
xor
mov
xchg
fdivrp
sahf
adcl
pop
lods
mov
pop
repnz
jb
mov
mov
call
add
push
add
sub
imul
and
out
xor
mov
cld
jp
sub
mov
lods
add
fsts
bound
jle
push
lods
push
out
add
push
pop
inc
cmp
jmp
sbb
lcall
fwait
aam
mov
xchg
scas
aaa
leave
subb
sbb
outsl
and
les
jmp
aam
out
push
cmp
sub
loop
cmpsl
nop
add
iret
daa
xor
push
loope
jne
test
xchg
mov
test
lcall
adc
sbb
jl
xor
bound
jbe
sbb
lea
aaa
mov
and
xor
test
cld
xchg
cwtl
in
inc
add
fwait
mov
pusha
std
push
faddp
icebp
pushf
dec
xor
mov
push
cltd
pushf
div
jnp
and
sub
dec
ja
or
dec
xchg
mov
call
out
sub
addr16
cmp
inc
dec
push
repnz
and
addr16
add
in
in
mov
adc
push
lcall
cltd
xchg
pop
xor
xor
fstps
fisttps
cmp
mov
lods
add
outsb
fwait
adc
cmp
lea
jne
jnp
sbb
lret
sub
add
sub
xchg
or
push
outsb
and
std
add
mov
loop
stc
es
mov
dec
addr16
mov
in
rorb
in
xor
sti
fidivs
ret
jo
sub
sbb
add
pop
or
jg
addr16
dec
addr16
fmuls
push
mov
lods
fldenv
or
dec
cmp
mov
xorl
jl
xor
pop
jo
adc
fbld
out
stc
cmpsl
stos
lds
and
xor
adc
push
fdivrp
jge
ret
icebp
cmp
cmp
dec
xchg
leave
inc
iret
pop
aam
inc
push
insb
or
xchg
aas
jle
fcomps
xchg
or
dec
outsl
push
test
jl
and
loope
out
lret
repz
pop
mov
cltd
popf
mov
scas
xchg
int
iret
fisubl
push
dec
shrb
repnz
shll
or
mov
and
fwait
sahf
into
in
inc
in
loopne
add
jg
lods
push
jnp
lock
jmp
mov
mov
push
rclb
mov
std
cmpl
pushf
or
sahf
test
xorb
dec
ss
lods
push
fwait
push
lcall
pushf
jo
ret
sbb
pop
sti
and
js
leave
inc
cmc
pop
adc
and
or
decb
fldt
push
xchg
adc
push
mov
adc
addb
push
dec
nop
xor
clc
mov
xchg
out
cli
mov
rclb
repz
bound
mov
inc
stos
mov
stos
popa
cmpl
xchg
xchg
movl
adc
adc
inc
sbb
cmpsb
aas
mov
or
mov
adc
xor
mov
and
shl
test
lock
in
jae
nop
xchg
in
jae
cmp
lret
and
ret
es
add
test
sbb
cmpl
mov
cmpsb
inc
out
xchg
lret
adc
ja
xchg
inc
push
dec
sub
lcall
cwtl
jmp
test
xor
mov
add
xchg
jmp
out
test
inc
xor
shlb
mov
imul
mov
lcall
out
xchg
cmp
sbb
cmp
dec
sub
inc
clc
adc
int
cltd
clc
aas
mov
rcl
jg
lahf
hlt
fnop
loope
xor
push
or
mov
ret
cld
jp
xor
inc
push
inc
scas
fnsave
bndldx
loop
in
je
cmp
push
and
mov
loope
add
sub
aas
sub
les
or
roll
jp
mov
fidivl
ja
stc
lods
popa
mov
sbb
jmp
stc
xor
out
and
stos
and
add
and
mov
stos
push
mov
add
imul
or
xor
inc
les
pop
and
js
out
int3
mov
sub
movsb
imul
insb
dec
hlt
mov
push
dec
add
in
cmpsl
out
xchg
push
xchg
cmp
pop
dec
push
jecxz
nop
ja
jae
push
in
push
iret
jle
mov
jnp
rcr
mov
xor
pop
sahf
imul
outsb
fistl
out
fildll
jns
push
pcmpgtb
jle
mov
xchg
add
rcll
loope
or
rorb
xchg
xchg
mov
or
sub
xor
add
pop
test
fistl
sbb
insb
out
mov
dec
cmp
inc
xchg
mov
int
pop
incb
mov
xor
inc
mov
fcmovu
cs
data16
aaa
pushl
icebp
xor
xchg
add
movb
test
sti
cmp
loop
adc
push
or
sub
push
pop
out
pop
flds
add
ret
push
lret
lea
xchg
push
cmp
xchg
xchg
inc
xchg
push
leave
cwtl
daa
movsl
adc
and
out
mov
sbb
decl
adc
jnp
or
insb
outsl
cmp
mov
mov
cmp
mov
fdivs
xlat
iret
in
and
ljmp
jl
and
call
test
adc
and
push
lods
mov
leave
push
xchg
mov
xor
out
or
xor
pop
sbb
lret
adc
sbb
xchg
jne
bound
mov
sub
loope
mov
popa
out
roll
rolb
into
mov
jecxz
xchg
cwtl
mov
mov
add
adc
cmp
sub
subl
jnp
jne
push
pop
cli
outsb
into
daa
adc
int
cmp
or
jmp
dec
adc
mov
into
stos
adc
mov
fcomp
sub
mov
push
pusha
inc
adc
fldl
cmp
dec
mov
out
xchg
std
push
push
push
lea
mov
add
pop
sar
fdivrl
test
add
pop
pop
shr
call
fdivr
shlb
das
ret
mov
clc
outsb
jae
mov
xchg
sarb
and
outsb
jp
mov
mov
jnp
sbb
add
push
jo
xchg
mov
push
add
inc
fildll
loop
into
movsl
mov
dec
sub
loop
mov
jae
push
add
mov
pop
mov
rorb
dec
loope
lahf
ja
andl
jmp
cmp
xor
cmpsl
xor
mov
or
ss
xchg
xor
addb
mov
faddp
test
lods
leave
data16
movsl
cmc
pusha
xor
adc
scas
sbb
sbb
inc
mov
dec
call
sbb
jbe
or
outsl
dec
mov
push
mov
cltd
jg
or
lods
push
dec
push
pop
dec
push
ds
pop
insl
sbb
cmp
dec
pusha
ret
sub
andb
sbb
mov
push
pmuludq
xor
sbb
mov
roll
push
cltd
add
stos
lret
fldcw
adc
sahf
jne
xor
aas
ds
outsl
scas
xchg
xchg
or
std
pushw
push
push
push
gs
sbb
fxch
jle
adc
jnp
lret
gs
lds
and
shll
cli
mov
jno
mov
mov
jne
mov
in
sbb
scas
pop
and
outsl
lret
jno
mov
aad
rcll
inc
and
test
aam
stc
cmc
mov
loope
cmp
mov
outsl
div
rclb
pop
xchg
cmp
aas
xchg
mov
jg
xchg
clc
rol
ret
sbb
mov
pushf
mov
jp
push
sub
xor
and
mov
leave
inc
push
add
sbb
dec
imul
in
sub
mov
jne
cmpsb
dec
add
dec
jae
pop
jp
push
dec
mov
lea
mov
ss
push
adc
js
jnp
cmp
mov
ret
inc
add
mov
movsl
push
jmp
insl
adc
scas
xor
sub
and
mov
imul
jb
int3
push
stos
cmp
ss
in
inc
subb
or
outsb
filds
rolb
fiadds
push
cmp
inc
insl
xor
cmp
cmp
or
push
mov
popf
imul
loope
mov
int
jno
stos
int
xor
and
sti
push
addr16
jmp
push
pop
je
add
mov
xchg
adc
pop
lock
push
jns
mov
and
imul
sahf
xor
fdivrs
xor
mov
das
cmp
add
movsl
sbb
adc
insl
aaa
popa
pop
ljmp
lock
jmp
push
repnz
fistps
repnz
dec
and
sub
push
out
dec
int
mov
test
and
ror
sahf
sub
aam
push
loope
xor
or
mov
or
adc
sarl
fistpll
xchg
jp
xchg
punpckhdq
loop
cmp
out
xchg
mov
dec
das
adc
fsubs
cmp
xor
pop
add
out
sub
cli
adc
cld
mov
stos
leave
jnp
inc
dec
pop
ljmp
and
dec
fimuls
dec
loopne
and
jbe
aas
adc
mov
and
cwtl
ret
jae
or
in
xor
jecxz
xchg
into
cmp
mov
call
sub
cltd
testb
out
fisttpl
in
in
int
pushf
add
adc
enter
popa
xchg
mov
aad
push
xchg
in
pop
jp
mov
sbb
sti
divb
je
add
dec
xchg
lds
jb
fwait
out
sbb
mov
les
orl
mov
jmp
clc
call
jne
jmp
std
mov
outsb
or
imul
leave
cmp
push
xor
fsubrp
xchg
xor
outsl
dec
push
xchg
rolb
out
aad
lea
arpl
push
cwtl
mov
mov
mov
push
ja
jno
adc
rcl
bound
add
jnp
call
mov
push
sbb
lahf
sub
loop
jge
aad
out
add
nop
in
mov
je
or
leave
cmp
mov
movb
imul
sub
pop
cmpb
push
cmpsb
mov
sub
dec
fdivr
or
das
mov
jb
jmp
popf
mov
adc
push
loope
and
inc
mov
mov
jge
jle
sahf
cmp
pop
addr16
adc
dec
mov
xchg
push
ds
or
pop
adc
stos
push
mov
dec
adc
mov
and
in
and
pop
sbb
or
data16
sahf
cmc
fistps
fdiv
ret
stos
or
iret
ja
lds
mov
or
pop
cmp
add
scas
sahf
mov
dec
jbe
add
mov
jnp
add
cld
dec
and
jmp
add
and
fcom
nopl
cwtl
pop
incl
testb
pop
xchg
push
dec
adc
sub
add
xorl
dec
sub
imul
adc
mov
xor
iret
cmp
insl
cmpsl
adc
test
xchg
inc
movsb
in
cmp
icebp
repz
cwtl
cmp
in
cmpsl
mov
or
push
mov
int
xor
movq
pop
sbb
sub
js
fistl
das
rcrb
adc
movsb
pop
sbb
mov
pop
fs
dec
aaa
ljmp
aad
or
dec
in
and
pop
into
test
xchg
test
adc
lahf
xchg
lods
pop
lods
fistpl
jecxz
xchg
jns
nop
rcrb
sub
test
ss
in
push
gs
xor
mov
in
movsl
lea
int3
in
lret
add
sahf
push
cltd
stos
popf
cmpsl
decl
test
jecxz
mov
adc
jb
or
dec
mov
adc
scas
in
pushl
sub
push
fisttpl
imul
push
xor
push
cltd
lret
dec
stos
mov
lret
pop
ds
and
adc
cli
pop
mov
scas
out
xchg
or
popf
adc
ss
xchg
jp
add
pusha
loope
movsl
push
cmp
call
sbb
sahf
or
push
jl
fdivp
mov
out
mov
imul
and
push
jnp
pop
mov
mov
loop
and
stos
sub
xchg
in
cmpsl
sahf
es
and
pusha
jno
lcall
out
lds
std
in
roll
mov
int3
mov
xchg
sub
scas
and
pop
mov
xchg
insb
adc
mov
in
sub
pop
rcll
sbb
inc
ret
imul
js
pop
scas
ljmp
mull
shr
xchg
shll
out
sbb
call
mov
cld
lods
xchg
sbb
les
movsl
cs
jmp
xchg
push
mov
fs
push
ret
movsb
mov
xor
cmp
cmp
mov
xor
push
xlat
push
xor
dec
pop
cmp
cld
pop
std
testb
aam
add
aad
imulb
jp
dec
incb
push
andl
and
hlt
xchg
inc
jmp
and
xlat
xor
out
fistpl
repz
mov
push
add
fs
adc
mov
dec
sub
sti
sub
dec
jge
adc
test
or
rcl
movsb
push
add
in
xchg
popf
jnp
sub
xchg
push
xchg
mov
xor
jmp
dec
mov
and
int3
jno
rcll
sar
andl
fld
mov
icebp
mov
sbb
xor
mov
lods
adc
pop
or
rcll
jb
aas
push
cltd
stc
lret
mov
test
mov
push
in
xor
cmp
scas
add
push
ds
cmp
cltd
cld
ret
xchg
or
ss
shlb
repz
repnz
cld
test
std
xor
push
mov
push
insb
decb
sbb
shlb
xchg
or
add
cmpsl
pop
out
push
icebp
cltd
cmp
adc
mov
push
xchg
lcall
cmp
nop
mov
pop
outsl
aas
lahf
jbe
mov
push
test
cmp
scas
xchg
and
adc
filds
mov
fstpl
stos
cmpsl
cltd
inc
xchg
rclb
imul
mov
mov
call
data16
cli
xor
mov
addb
pushf
out
xchg
shrb
clc
movsl
mov
fsubrl
dec
mov
push
pop
dec
je
mov
or
repnz
inc
bound
fisubrl
push
test
push
pop
addr16
xchg
add
stos
push
xchg
fistps
xchg
loop
xchg
cmp
push
rcll
push
sub
mov
aas
mov
les
xor
pop
pop
call
pop
mov
push
sbbb
xchg
jbe
cmpsl
add
cmp
adc
inc
mov
sbb
xchg
xlat
jecxz
ret
test
push
mov
sbb
stc
ljmp
mov
shrl
sub
lret
mov
adc
xchg
scas
popa
movsl
cli
aad
pop
popa
push
test
xor
sub
sub
mov
inc
pop
jno
lret
sbb
aam
sbb
pop
repz
xor
sub
jmp
repz
fidivrl
xchg
mov
jg
nop
das
mov
push
jg
xor
pop
mov
cmpsl
out
adc
fcmove
loop
push
aaa
imul
cs
stos
jnp
stc
roll
add
adc
dec
scas
inc
movsb
mov
popf
cmpsl
sbb
sbb
mov
mov
int3
das
push
xchg
mov
pop
mov
lds
push
inc
mov
leave
pop
mov
out
lock
es
out
sub
xchg
push
gs
ss
pusha
mov
adc
xchg
rolb
lea
bound
rclb
dec
xchg
lcall
repnz
mov
pop
pushf
or
xchg
sbb
jg
cltd
jp
fwait
mov
cmp
cmp
cmp
in
jb
hlt
pop
xchg
jle
pop
test
add
mov
testl
fidivs
and
ds
xlat
mov
push
ss
dec
imulb
jg
or
add
jno
jne
int3
jns
imul
and
xchg
mov
jle
xchg
in
cmp
pop
xor
xor
testb
xchg
pop
jb
and
mov
dec
lret
add
sub
sbb
int
cld
loopne
ficomps
cmp
sub
sbb
inc
cmp
and
xchg
or
leave
dec
pop
cmp
mov
insb
sti
icebp
adc
aad
lds
xchg
lcall
jnp
jl
aam
decl
pop
test
lds
or
mov
push
jb
rolb
xchg
or
fisubrl
fs
lret
in
sub
clc
nop
in
lret
mov
jp
stos
sub
or
add
and
cmp
cmp
xor
xchg
jl
push
xlat
sti
rorb
movsl
or
xor
push
scas
xchg
bound
cs
xchg
sbb
lret
fwait
sbb
sarb
sub
ret
push
mov
dec
jbe
data16
lds
das
pop
adc
jbe
add
cmpb
xor
and
shll
sub
pop
roll
push
fnstsw
lret
lahf
cmc
aas
out
cld
jecxz
mov
mov
push
inc
jbe
dec
mov
dec
cltd
sbb
push
ds
xor
sub
into
bound
lock
adc
cmp
in
sbb
int3
test
xorb
loopne
pop
pop
fidivs
jge
mov
jo
inc
jbe
and
sbb
push
in
inc
sbbl
mov
xchg
pop
and
push
xchg
lret
xor
pop
adc
pop
mov
push
mov
pop
aas
mov
add
jno
pop
test
sbb
mov
lock
cmc
and
push
lret
aad
fadd
stos
push
xlat
push
popa
sub
enter
cmp
mov
sbb
pop
sub
cwtl
sarl
or
dec
aaa
xlat
adc
and
and
test
leave
outsl
lret
gs
int
xchg
jns
or
mov
push
push
push
data16
mov
lods
js
notl
mov
pop
rclb
mov
ja
mov
push
stc
dec
cmpb
lret
pop
jp
inc
fwait
pushf
pop
idivb
jo
mov
xor
mov
cmpsl
out
jnp
or
mov
imul
or
xor
int3
jno
sub
mov
fwait
sbb
and
push
pop
inc
shll
stos
cmpsb
ds
imul
iret
stc
or
fwait
cmp
cltd
jb
pop
jo
icebp
sub
jg
mov
or
mov
iret
pushf
jmp
xchg
rcrl
movsb
stos
aam
cmp
int
sub
dec
icebp
add
sbb
insl
mov
shrb
mov
pop
pop
pop
repz
jae
cmp
in
fistpl
cmp
mov
jne
and
repnz
lods
sbb
sub
push
and
adc
or
addr16
xchg
push
cmpsb
lods
cmp
and
lock
mov
aam
mov
es
mov
pop
cmp
lret
sbb
test
je
mov
inc
lods
mov
jle
fbld
addb
in
dec
lcall
adc
mov
inc
sti
scas
pop
xorb
or
push
lds
clc
out
fisttpll
addr16
sbb
xchg
mov
fcomip
pop
dec
cmp
xor
insl
ret
dec
fdivrl
lret
lds
lret
mov
popf
aas
fdivl
xchg
fdivrl
xor
fsubs
mov
insl
popf
lret
leave
movsb
jle
sub
add
pop
cwtl
mov
imul
mov
pop
pop
arpl
jae
cmp
test
testl
pop
mov
sahf
inc
xchg
xor
arpl
sub
mov
loopne
gs
iret
add
dec
outsb
adc
jg
xorl
xor
je
add
pop
xchg
push
cmpsb
push
jl
or
or
inc
mov
adc
std
cmp
shlb
inc
out
inc
test
xor
jae
aad
sbb
ss
adc
stos
jg
rcrl
pop
dec
daa
nop
inc
cwtl
dec
inc
inc
cmc
inc
mov
int3
add
dec
push
push
pusha
nop
push
repnz
sbb
push
add
fisttps
insb
call
mov
outsb
push
into
mov
xlat
push
ret
into
and
sbb
push
and
inc
fidivl
pusha
dec
ret
push
lods
inc
adc
das
sbb
xchg
or
ds
ljmp
popa
sub
iret
cmp
jmp
outsl
fnstcw
rorb
test
shrb
dec
add
outsl
fdivr
call
nop
sbb
rclb
cmpsl
mov
repz
rcrl
daa
xchg
sub
jg
fmuls
add
dec
sub
sbb
and
xor
jecxz
cmp
hlt
loope
pop
imul
mov
jnp
int
mov
dec
cwtl
pop
add
ljmp
xchg
push
stos
cltd
xchg
arpl
je
fwait
cltd
cmp
pop
xchg
outsl
pop
test
stos
pop
sbb
sbb
jns
push
enter
lds
and
jo
xor
adc
cmpsl
xchg
testl
and
add
push
mov
pop
mov
stos
mov
push
xor
lds
pop
pop
addl
stos
shlb
dec
xor
cmp
pop
lret
adc
mov
jne
xor
mov
ss
push
bound
ret
hlt
xchg
jle
push
leave
repnz
sub
cwtl
or
mov
xchg
cmpsl
jbe
push
jle
cs
inc
sbb
xor
loop
xor
sub
mov
jp
shl
jno
push
out
mov
add
mov
push
xor
cmpsl
sub
in
ja
mov
and
out
xor
sahf
xchg
jae
hlt
std
fcmovnbe
pusha
or
mov
xor
fidivrl
in
aaa
pop
loop
fadds
add
pop
mov
imul
in
data16
icebp
mov
lds
sbb
fwait
imul
cmp
out
add
push
repnz
sti
cmp
pushf
fwait
in
mov
push
xchg
pop
lds
cmp
fidivrl
pop
test
dec
test
jo
mov
mov
fisttps
rol
xor
enter
mov
push
insb
ljmp
mov
out
dec
rcrl
xor
hlt
adcb
into
xor
js
xor
push
aad
cmp
push
shr
ds
movsb
dec
xchg
test
mov
push
fdivl
sbb
fstl
inc
add
push
out
dec
and
pop
xchg
icebp
sbb
jl
dec
fdiv
or
sub
and
std
fcomi
jecxz
cmp
cmp
push
cmp
test
or
cmpsb
push
movsl
sub
inc
and
test
pop
or
xchg
loop
fwait
mov
out
mov
jg
xchg
out
mov
fstpl
out
push
dec
push
push
daa
ret
push
xor
into
jl
xchg
inc
rcll
dec
cld
sbb
sbb
mov
pusha
addr16
mov
jae
add
popf
dec
in
or
sbb
xchg
pop
cmp
jg
dec
or
xor
sub
and
mov
pop
mov
xchg
adc
shlb
pop
ljmp
mov
enter
out
scas
shll
lock
or
sub
mov
and
inc
aaa
fcoms
inc
repnz
xor
scas
dec
xchg
jno,pn
adc
cmp
sub
sbb
sbb
inc
fdiv
inc
xor
xchg
mov
ja
adc
pop
pushf
jne
sub
mov
mov
leave
inc
push
cmp
fidivs
xchg
cmp
xchg
lahf
imul
loope
or
push
and
lods
xor
cli
xor
je
pop
xor
cld
or
daa
mov
push
jmp
inc
xchg
cmp
dec
inc
sub
sbb
mov
jmp
lds
into
loop
xchg
mov
imul
jmp
mov
es
rcrb
jno
mov
leave
leave
mov
and
or
add
ret
mov
lds
pop
es
jl
sbb
jecxz,pn
or
inc
cmp
adc
cmpsb
and
fisubrl
pop
push
rcrl
sbb
dec
aad
iret
pop
inc
std
lock
pop
fldcw
call
and
mov
jb
rorb
or
test
cmp
mov
dec
or
sub
mov
fsub
daa
mov
fwait
rolb
mov
mov
pushf
adc
mov
sarl
sub
mov
iret
sbb
in
adc
jge
arpl
or
push
data16
and
out
and
xchg
cmpsl
lds
push
jns
fstps
icebp
mov
pop
mov
or
enter
mov
xchg
push
out
jo
and
cmp
jmp
inc
jne
leave
pop
inc
popf
xchg
cs
imul
ret
popf
aam
inc
xchg
mov
pusha
inc
jecxz
fstpl
inc
dec
adc
add
test
int3
dec
lret
mov
push
fisttps
cmpsl
pop
and
or
insl
inc
int
daa
fs
sarl
sbb
jmp
inc
and
mov
inc
ja
or
jecxz
adc
or
push
pop
insl
push
ret
js
aaa
jg
lea
incb
loope
hlt
push
dec
xor
outsl
xchg
ds
inc
imul
mov
sub
mov
shlb
lcall
imul
push
cmpsb
out
std
popa
call
sub
nop
pop
and
pop
sub
pushf
sbb
ja
xor
pop
mov
add
xor
push
or
popf
sub
mov
pop
jmp
push
push
xchg
mov
ret
xlat
xor
into
jmp
push
in
jae
cltd
outsb
ja
nop
pop
mov
mov
fdivr
insb
cmp
popa
mov
shl
mov
add
mov
inc
sub
rcrb
and
imul
cmp
insl
mov
insb
sbb
ss
cmp
jo
mov
xchg
adc
mov
sbb
jae
aam
mov
mulb
mov
mov
scas
out
addr16
js
int
lds
jl
int
and
or
hlt
call
sub
imul
mov
aas
fiadds
mov
ret
mov
mov
in
push
mov
mov
inc
in
js
inc
pop
mov
nop
and
lods
es
and
mov
mov
je
pushf
imul
fidivl
aam
in
xorb
js
fcmovu
push
paddq
jmp
pushf
aam
or
pop
mov
out
cmp
nop
loop
arpl
push
push
fs
orl
call
in
imul
xchg
aas
shlb
out
cmp
jle
mov
push
and
insl
nop
test
sub
pop
sub
sti
pusha
or
ss
popf
in
frstor
dec
in
push
mov
xchg
orl
and
ret
stos
js
lods
or
lods
jmp
cmp
clc
rorl
test
xchg
add
cmp
adc
mov
xchg
push
adc
ja
es
mov
cmp
jmp
or
ss
and
push
push
mov
push
xor
dec
js
repz
inc
rcrb
push
ret
xchg
jmp
stos
mov
js
xchg
fs
jnp
fucomp
cmp
idivb
movsb
dec
mov
and
test
scas
jle
test
lock
pop
xlat
rclb
adc
inc
xchg
jb
jge
adc
cmpsl
divl
fdivrs
xor
mov
jae
mov
rcll
xor
or
popa
pusha
into
cmp
sub
jmp
movb
inc
movsl
pop
xor
push
and
bound
mov
xchg
in
inc
mov
sub
push
cmp
fs
lods
mov
or
les
jbe
bound
loope
pop
xchg
cmpsl
mov
inc
or
jae
or
mov
loop
sbb
sub
xor
xchg
dec
xchg
and
push
dec
jae
pop
cmpl
fisttpll
repz
push
shlb
bound
mov
pop
stc
inc
jmp
push
insl
xlat
in
push
jne
in
test
test
xchg
push
xchg
bnd
or
mov
ss
push
pop
enter
xor
into
ljmp
or
scas
in
mov
outsl
emms
add
xchg
inc
jmp
or
jle
shl
rolb
cli
fnstenv
xchg
ja
add
in
mov
in
cmp
lahf
push
sbb
inc
fimull
jle
xchg
cmp
aad
mov
pop
cwtl
push
push
push
std
bound
test
mov
mov
push
mov
shl
mov
negl
jmp
jl
cmpl
call
dec
in
inc
test
mov
inc
jno
pusha
sahf
dec
sarb
jns
cmp
dec
insl
aas
pop
flds
lret
mov
lret
fbld
lea
jno
jmp
out
add
jecxz
jmp
mov
jbe
roll
fstl
inc
pop
push
mov
sbb
sbb
test
mov
pusha
push
pop
rclb
jae
inc
cmp
cli
ret
jnp
pop
fadd
jb
add
call
shlb
xlat
ljmp
dec
cmp
sbb
mov
out
lock
cltd
add
popf
cmpsb
mov
xrelease
push
rcr
or
nop
testb
jae
mov
stos
mov
mov
add
jl
cs
mov
gs
jae
dec
mov
jne
in
push
add
adc
aam
dec
jbe
push
lods
shr
jnp
jle
fcmove
push
leave
jecxz
fimull
inc
es
imul
mov
cmp
inc
int3
psubsw
ljmp
lcall
and
cmp
fbstp
sub
test
outsb
jecxz
fstpl
mov
sub
mov
jne
cmc
loopne
adcb
or
sub
or
out
mov
divb
xchg
sub
mov
add
push
cmp
and
mov
jg
ret
cmp
add
fsts
mov
cmpl
add
cmp
xor
jp
jno
imul
lcall
js
loopne
inc
adc
pop
dec
xchg
adcb
in
mov
jne
int3
add
dec
inc
sub
sahf
lret
xor
dec
pop
idivl
popf
dec
cmp
mov
mov
xor
mov
ret
jmp
loop
loopne
sub
jge
mov
pop
sub
lret
fsubrs
cmc
lretw
pusha
mov
push
popf
divb
cltd
xchg
das
aaa
sub
jp
inc
repz
out
jae
inc
aad
or
out
push
xchg
push
rcr
pusha
add
mov
test
aam
into
out
outsl
add
rorl
push
dec
bswap
push
xor
and
mov
test
mov
test
stos
iret
jge
mov
pushf
insl
sub
bnd
popa
test
aaa
jmp
pop
add
out
mov
push
xchg
lock
mov
jecxz
inc
cmp
push
ja
sub
shrb
xor
xor
push
sub
pop
addr16
pop
ss
and
or
mov
mov
xchg
jo
inc
pop
loopne
adc
popf
jnp
cmp
xor
cmp
outsl
out
inc
scas
mov
pusha
xchg
cmp
sub
imul
inc
add
daa
loopne
sub
inc
int
ret
daa
ljmp
push
les
jmp
addr16
cmpsl
or
clc
adc
imul
cmp
fimull
outsl
pop
sahf
sub
sti
sarb
fstpl
xor
rcr
mov
pop
inc
mov
pop
adc
xlat
mov
popa
mov
scas
cli
icebp
fadds
pop
cmpsl
in
pop
cltd
push
push
xor
aas
popa
mov
dec
push
sub
fwait
stos
dec
xor
adc
push
movsb
inc
fstpl
mov
loope
lret
add
dec
fbld
mov
xlat
add
and
icebp
jp
out
fnsetpm(287
inc
in
adc
inc
cmpsb
sub
or
nop
int
aad
adc
sub
out
cltd
sbb
add
mov
test
cltd
fsubrs
mov
rolb
xchg
dec
fsubrp
cwtl
dec
fldcw
adc
jo
push
aas
aad
cmp
repnz
inc
ljmp
das
fildll
dec
cmp
out
call
in
lods
popf
jmp
sub
and
mov
pop
scas
outsb
lods
adc
pop
out
sbb
mov
out
cmpsl
out
jp
das
sbb
das
push
daa
movsl
cli
jp
add
xorb
shll
add
mov
adc
dec
adc
daa
lret
jmp
orl
cmc
pop
inc
pop
fsts
mov
adc
jb
mov
testb
mov
inc
or
es
push
cwtl
lret
insb
add
flds
stc
arpl
fcompl
mov
pop
jne
aaa
jne
xchg
pusha
outsl
adc
scas
push
scas
mov
add
adc
cmpsb
fisubl
sti
mov
xor
rcrb
pmulhuw
or
or
inc
movsl
push
call
in
aaa
mov
dec
stos
mov
xor
dec
cltd
lret
pop
icebp
incl
pop
rclb
mov
in
mov
mov
cltd
mov
lret
cmpsl
in
pop
or
xor
es
ret
cli
push
incb
jmp
inc
push
negb
lods
scas
xchg
inc
addl
mov
mov
fldcw
leave
rorb
jl
pop
sub
rorb
enter
mov
lcall
or
into
call
loop
pop
movsb
jbe
xchg
mov
jnp
adc
push
in
mov
mov
imul
int3
mov
jmp
enter
xor
pop
xchg
jg
mov
shr
dec
test
or
out
sub
int3
jnp
aam
pop
sahf
notl
push
adcb
out
loopne
out
test
cmp
inc
andl
mov
cmc
mov
xchg
pusha
add
test
hlt
data16
cli
xor
mov
bound
adc
inc
jne
lret
cmpsb
ret
sbb
inc
das
rclb
mov
xchg
out
mov
mov
pop
add
sbb
push
xchg
sub
push
in
arpl
or
shlb
ret
popa
push
and
jle
lahf
cli
andl
ds
dec
subb
push
es
push
inc
addr16
hlt
lahf
aam
imul
dec
lods
call
loop
push
imul
sbb
mov
pop
out
adc
and
xor
scas
push
repz
in
repz
bound
stos
lret
mov
mov
push
clc
xor
andl
inc
mov
add
mov
and
mov
cli
xchg
add
iret
cli
scas
rolb
enter
js
jg,pt
hlt
shlb
pop
add
push
movsl
inc
add
shl
ja
inc
pop
mov
xchg
test
push
out
mov
push
mov
jmp
inc
mov
add
insb
stc
jnp
aaa
pop
jmp
sbbb
fld
xchg
lcall
ror
es
cmp
sub
xchg
ror
adc
scas
lcall
xor
or
movsb
xor
fs
pop
aam
inc
and
sbb
push
stc
dec
push
aaa
cmc
outsl
xor
arpl
sub
pushf
fs
fcoml
add
sub
jno
pop
pushf
push
and
pop
cmc
scas
jmp
jne
pop
xor
fimuls
ret
adc
mov
inc
lahf
xchg
ljmp
cmp
repnz
inc
cmp
mov
and
inc
sbb
fscale
lahf
or
lcall
aaa
scas
lods
movsb
push
cli
loop
lock
dec
test
test
push
mov
cmovs
lret
sbb
jge
dec
xor
mov
ficomps
adc
lret
adcb
mov
call
jno
cs
mov
mov
insb
mov
jmp
inc
lahf
mov
and
repnz
pop
fwait
stc
push
pop
fidivrs
xchg
movsb
inc
lods
cltd
adc
push
or
ljmp
push
iret
mov
jmp
jb
mov
adcb
sti
sbb
lock
cmc
inc
cmp
cmp
addl
cmp
xchg
es
mov
out
mov
xchg
enter
ja
lock
xlat
or
jbe
inc
cmpl
repnz
or
jne
jmp
and
sub
cld
subl
sahf
jo
fcompl
mov
inc
mov
pop
or
scas
sub
movsb
push
cmp
and
add
push
push
lret
aaa
jge
add
cmp
pushf
imul
lret
lock
ss
out
cltd
sbb
cli
dec
and
iret
inc
clc
mov
mov
jp
cmp
cmc
inc
mov
cltd
push
enter
xchg
les
pushf
outsl
pop
ja
xor
mov
push
mov
xchg
adc
dec
mov
xor
in
dec
push
adc
iret
lock
xor
cmp
push
popf
or
push
sbb
adc
out
dec
mov
and
mov
into
jle
call
jle
jge
and
iret
ljmp
xchg
popa
xchg
andb
sbb
dec
push
js
outsl
cmpsl
lea
add
insb
or
dec
pop
xlat
lods
jmp
or
push
mov
bound
idivb
imul
push
fld
dec
jne
pop
jo
mov
fs
aam
jb
sbb
cmp
inc
xor
mov
inc
add
xorl
mov
js
dec
dec
xor
sbb
dec
sbb
mov
movzwl
icebp
sub
into
fsubr
push
cmp
pop
or
mov
andl
rcll
imul
les
lcall
aad
adc
xor
inc
jns
mov
fsub
dec
clc
xchg
push
bound
in
into
mov
sbb
leave
dec
in
enter
xchg
cmp
push
lock
pop
stos
pop
imul
push
mov
pop
sahf
xchg
aaa
jg
jne
ljmp
lret
leave
add
imul
sub
leave
insb
fstpt
mov
rclb
xor
mov
sti
test
fists
loopne
fs
jle
push
shll
test
aaa
cmc
sbb
test
dec
or
imul
je
inc
push
rorb
lret
cwtl
int
pop
stos
mov
cld
jns
mov
in
sbb
xchg
push
jmp
fldt
mov
pop
aaa
mov
sub
cltd
sbb
outsl
gs
pop
push
cli
push
pop
arpl
inc
out
mov
dec
mov
and
xchg
mov
pop
cld
jne
pop
rcrb
push
ret
aaa
lods
cmpsb
sub
dec
adc
jae
and
cltd
sahf
jecxz
sbb
mov
in
xchg
iret
push
xchg
mov
sbb
cmp
adc
sub
cmp
xchg
jns
jl
xchg
inc
addr16
dec
cmp
rclb
adc
sbb
cs
iret
sub
mov
push
push
sti
mov
adc
aam
xchg
push
mov
jne
xlat
lcall
ret
dec
mov
outsl
iret
mov
sarl
add
push
insl
xor
lret
outsl
adc
push
into
into
mov
imul
mov
rolb
sbb
mov
cmpsl
cltd
cmc
cli
xchg
push
xor
cmp
pushf
clc
push
cmpsl
fisubs
inc
adc
rcrb
lds
cld
test
xchg
inc
cli
mov
or
cltd
mov
in
mov
push
mov
dec
pop
pop
jb
outsl
jle
loopne
push
cmp
mov
xor
stc
daa
xor
cwtl
shll
push
add
gs
cmpsl
loop
in
fsubp
and
outsl
scas
shll
out
add
out
mov
daa
jmp
adc
inc
push
ds
mov
jge
pop
movsb
mov
cmpsl
loope
insb
and
sbb
jge
pop
repnz
mov
push
and
or
rcr
mov
ss
scas
inc
aaa
push
cmp
leave
and
xor
fcomps
cmp
dec
fldl
inc
sub
add
mov
popa
sub
and
adc
push
cs
sti
aam
sbb
inc
in
xchg
inc
dec
stc
lahf
movsl
fsubrl
insb
adc
ds
scas
cs
pop
shlb
out
lds
mov
cmpl
mov
cmp
cmpsl
sub
pop
stos
ret
push
pop
push
imul
sbb
lock
dec
outsb
enter
in
fidivrs
push
add
ret
fmull
push
push
into
mov
mov
pop
dec
lea
push
xchg
add
and
int
popf
mov
mov
lcall
mov
pop
push
cmp
sub
jbe
pop
mov
dec
mov
jg
outsl
adc
pop
lahf
in
jae
shlb
into
jmp
stos
or
pmaxub
cld
ret
mov
cli
cmp
push
and
dec
loopne
adc
xor
mov
mov
push
xor
addr16
mov
pop
jae
cltd
mov
mov
mov
xor
mov
cli
std
mov
or
repnz
das
daa
sti
in
mov
add
lock
sub
les
xor
aam
push
cmp
sbb
fs
rcr
js
dec
fs
dec
test
pop
adc
mov
jnp
shl
aas
insb
sti
sub
lock
das
xor
pop
ret
es
adc
imul
mov
sub
jmp
stos
rep
ficoms
xchg
aas
cmp
push
jo
sub
add
les
or
loope
sbb
stos
xchg
dec
cmp
cli
push
inc
popa
ds
xorl
and
rcrb
mov
xchg
lcall
inc
sti
adc
dec
push
mov
xchg
jne
fisubrl
xchg
mov
xor
xor
addb
cmc
sahf
shl
sub
sub
inc
scas
les
imul
cmpsl
sbb
loope
adc
adc
ss
lcall
sub
rorb
dec
dec
and
repnz
rclb
xor
rsqrtps
dec
xor
cmp
sbb
pushl
loopne
jb
mov
or
mov
inc
dec
cmp
stos
popf
aaa
mov
pop
xchg
fmul
inc
lret
in
filds
mov
lahf
lds
or
daa
cs
repz
lods
jns
ds
cmp
int
daa
add
jle
lds
icebp
das
outsb
pop
repnz
add
dec
adc
push
int
xor
sub
mov
lret
mov
lcall
or
mov
inc
push
aad
mov
inc
cmpl
sbb
stos
jne
fisttpl
mov
stos
mov
inc
xchg
imul
sti
js
dec
outsl
iret
mov
popf
test
mov
mov
addl
jno
jne
int
fisubl
aad
dec
movd
sub
and
and
enter
xchg
insl
fadds
bound
push
adc
pop
sbb
addr16
push
jmp
add
sti
mov
sbb
cld
pop
inc
jnp
pop
cmpsb
mov
xor
aam
jne
mov
pop
cmp
cwtl
shrb
mov
outsb
enter
dec
cwtl
jl
mov
dec
fs
and
push
pop
jne
mov
imul
cmp
xchg
bound
addr16
leave
xor
xchg
cmp
mov
lcall
pop
mov
bt
inc
adc
sub
and
shl
mov
jb
sbb
xchg
or
add
push
jmp
adc
test
mov
repnz
jb
add
repz
push
div
fldenv
push
inc
insl
dec
lahf
xchg
sub
fwait
test
fcmovne
int3
dec
cld
lret
xchg
gs
jns
mov
cli
imul
dec
or
movsl
xchg
ds
cmc
push
mov
shrl
data16
push
add
push
fisubs
push
mov
add
xor
cmp
mov
ret
cmpl
mov
pop
aas
aaa
pop
mov
sbb
movsl
jo
subb
cmc
fwait
mov
fwait
jmp
icebp
and
ljmp
xor
pop
add
aam
shll
scas
shlb
sub
mov
hlt
or
adc
lahf
or
loop
mov
xor
or
rcrb
xchg
mov
push
mov
movl
sub
jmp
cmc
cmc
lret
or
dec
mov
pop
inc
push
mov
imul
pop
push
jecxz
and
inc
push
push
mov
iret
cltd
push
out
aam
mov
push
adc
push
js
sbb
mov
mov
adc
cmpl
sbb
dec
iret
xlat
dec
fimuls
shlb
cmp
movsb
push
fildl
es
cwtl
mov
and
mov
push
xchg
icebp
jbe
fisttps
loop
dec
fidivs
ds
mov
in
mov
addr16
jae
jne
hlt
cmc
cmpsl
lea
mov
insb
pop
xchg
inc
enter
jle
jno
push
shlb
call
scas
rcr
lods
fdiv
insb
mov
pop
data16
sahf
xchg
loopne
cmpsb
sbb
insl
mov
dec
lret
fucompp
mov
push
push
mov
mov
fs
xchg
out
or
mov
insb
xchg
lret
fldt
mov
cmpsl
stc
ds
sub
mov
mov
fdivrs
push
orl
out
adc
sbb
repz
pop
adc
pushf
mov
sub
sbb
push
mov
cmp
leave
out
xor
xchg
mov
stos
adc
fmull
mov
test
jbe
ja
xchg
arpl
xchg
dec
clc
sbb
xchg
shrb
adc
xorl
fcoml
icebp
mov
cmp
add
jb
movsl
aam
stos
lret
or
xchg
outsb
dec
xor
add
insl
rcll
fwait
stc
aad
mov
dec
sub
andb
pop
lahf
jae
loope
inc
xchg
push
xchg
stc
aaa
jp
inc
ja
jl
adc
stos
and
push
and
test
mov
mov
jne
xchg
sahf
sti
add
xchg
sti
push
lret
adc
leave
jnp
imul
inc
cmpsl
push
mov
inc
xor
outsb
push
std
ret
dec
cld
sbb
out
mov
imul
fstpt
jnp
lahf
aas
ret
pop
test
clc
test
mov
mov
cmpsb
xchg
push
stc
adc
pop
mov
fwait
movsb
popf
jb
ljmp
push
fbld
inc
adc
xchg
data16
and
cmp
in
call
cmp
xor
cmp
fwait
jge
inc
out
sbb
jae
les
jecxz
addr16
or
or
call
scas
pop
sub
sbb
xchg
stc
repz
sbbb
test
inc
ja
fistps
jae
inc
or
sbb
adc
jmp
arpl
xor
stos
or
sahf
add
dec
sub
sbb
or
push
mov
push
imul
movsl
mov
jns
pop
out
pop
sbb
test
mov
mov
sti
mov
sarb
mov
and
and
jmp
dec
jae
push
cmp
sbb
loop
and
outsl
xchg
fiaddl
lock
divl
mov
xchg
or
adc
cld
aam
movsl
lcall
mov
push
ret
mov
fiadds
dec
pop
mov
sub
push
xchg
mov
mov
mov
push
push
test
pop
inc
xor
lea
lahf
sahf
xlat
jns
lret
mov
jle
cmpsb
mov
jne
out
jo
into
notb
arpl
dec
inc
fwait
sub
xchg
fwait
sbb
fsubrs
movl
jg
cmp
push
cmpsb
dec
adc
push
loop
jg
pop
inc
add
xchg
sub
sbb
or
pop
mov
push
sub
aad
lods
mov
fmuls
rorb
hlt
jge
int3
lahf
das
xchg
cmp
add
cmp
es
jmp
testl
dec
mov
out
lea
gs
xchg
jnp
xchg
mov
std
lds
lahf
add
mov
cmp
push
stos
and
and
push
sahf
out
outsl
jl
or
and
lock
xor
ss
fs
mov
cwtl
movsl
push
xchg
sbb
jbe
pop
and
jmp
sub
insl
pop
inc
sub
in
add
aas
jo
cmp
dec
into
mov
in
add
hlt
jmp
mov
sub
je
clc
add
divb
mov
cmp
inc
cmp
adc
mov
sti
cmp
adc
adc
insl
leave
int
push
andb
cmp
out
mov
jmp
mov
xchg
daa
loope
fisttpll
out
idivl
xchg
cmp
sarb
jle
sub
pop
jle
movsb
cmp
dec
xor
mov
and
xchg
loope
jg
into
fdivrs
mov
or
mov
pop
ja
mov
mov
mov
xchg
inc
mov
test
xor
sbb
aam
call
divl
fstpt
xchg
loope
ljmp
je
lock
mov
xor
and
jae
lods
mov
push
pop
imul
ret
jo
gs
sub
rcll
jnp
inc
sbb
ss
int
fxch
jb
sarl
add
inc
cmp
jecxz
int3
mov
cmp
ret
mov
shll
sbbb
aas
sub
stos
es
push
mov
outsl
in
rclb
popa
movsb
sub
in
sbb
jo
fwait
xchg
mov
inc
movsb
fidivrs
push
shrl
imul
jno
and
jge
popf
fsubs
fwait
mov
leave
pop
sub
pop
lock
out
rorl
lods
nop
mov
pop
mov
mov
dec
adc
push
xchg
gs
and
and
xchg
push
push
les
xchg
pop
jg
sbb
stc
mov
test
mov
lods
cmpsl
scas
daa
test
jmp
pop
pop
push
stos
jmp
cwtl
cmp
jmp
in
push
frstor
inc
call
mov
mov
movsw
mov
mov
jle
fsubp
add
mov
aaa
ror
cmp
fsubrl
mov
sub
orl
out
xchg
dec
pushf
pop
xor
fsubr
fdiv
adc
push
sub
imul
daa
imul
pop
jmp
mov
leave
pop
cmp
dec
fs
xchg
mov
dec
dec
out
ss
inc
xchg
or
nop
outsl
into
sbb
xchg
je
and
ds
adc
sbb
mov
mov
xor
add
lods
nop
push
mov
adc
std
jle
xchg
mov
xchg
cmp
dec
xlat
jmp
jnp
pop
add
push
scas
sub
imul
push
aas
inc
sbb
push
pop
sub
mov
add
or
dec
add
orl
mov
shlb
inc
xor
lea
ret
loop
and
xchg
push
dec
int3
lods
lods
push
push
pop
ljmp
outsb
pop
jg
fdiv
int3
cmpsb
mov
adc
lcall
out
scas
mov
mov
sbb
xchg
xchg
add
mov
cmp
aad
ret
enter
lea
lret
adc
adc
mov
mov
test
stos
mov
arpl
sub
jp
mov
dec
sbb
rcll
jle
and
push
push
pop
out
adc
add
inc
jno
dec
push
sbb
adc
sbb
xchg
mov
mov
ret
sub
cmc
push
fs
pop
pop
popf
stc
pop
dec
bnd
push
lret
xor
jns
cli
and
ja
push
mov
nop
divb
lods
cmp
aam
clc
test
std
insl
cmp
scas
aas
jl
push
push
pop
push
das
call
stos
dec
xor
and
xor
leave
mov
cld
lods
int3
mov
xor
enter
mov
test
dec
jecxz
pop
lret
js
test
jne
jb
cmpsb
mov
outsl
mov
aam
cld
aad
push
jecxz
arpl
jns
lods
ljmp
rclb
mov
cli
jno
inc
fisttps
fisttps
sbb
enter
fs
stc
js
scas
sbb
add
fs
adc
sbb
js
fcom
mov
sub
scas
cmpsb
push
cmp
jmp
aam
sub
in
iret
movsb
pushl
das
lds
scas
fwait
jbe
scas
jle
out
pusha
pop
push
and
mov
push
fdivrs
or
shrb
add
cltd
jo
fs
repz
cmp
movsb
enter
jne
cmc
scas
ja
mov
gs
mov
decb
pop
mov
dec
test
int3
test
xchg
mov
ds
sub
loop
pop
int
mov
mov
and
inc
in
pop
mov
lcall
rolb
jne
jg
mov
xor
push
sub
cmp
jb
pop
or
lahf
xchg
push
cmp
jle
fcomps
jg
and
xor
shr
inc
push
dec
insl
leave
sbb
mov
faddl
scas
mov
fisubl
sarl
pop
ja
sbb
push
test
sbb
cmp
ss
xchg
inc
pushf
pop
pop
cmp
enter
in
and
sub
sub
int3
mov
test
imulb
jbe
push
enter
int
test
pop
jmp
sbb
ljmp
sub
mov
pop
ljmp
jp
std
movb
cltd
mov
pop
sub
cli
daa
inc
sbb
adc
lea
ror
or
call
ds
xor
lcall
adc
xor
popa
push
in
movsb
push
cs
push
cmp
cmpsb
cmp
out
mov
je
push
insb
test
pop
je
ss
jp
icebp
mov
pop
in
int3
jp
aaa
shll
aad
stos
mov
and
adcb
sbb
or
or
popf
rcrb
mov
addb
mov
sub
data16
daa
rorl
xor
jne
mov
sbb
imul
lods
sub
in
jle
xor
cmp
xor
std
jbe
pop
test
in
jb
fstpl
pop
or
push
inc
push
add
fisttpl
push
or
rclb
icebp
pop
jle
scas
arpl
cltd
push
push
outsb
cmp
js
cmc
shrl
sbb
pop
pop
mov
int3
ss
ja
xor
lods
pop
xor
jo
mov
ljmp
inc
into
rcrb
shlb
sbb
int3
test
xor
sbb
mov
and
jae
addl
ja
push
stc
movsl
dec
sub
jns
aaa
lcall
dec
lret
add
in
loope
dec
ljmp
dec
or
pop
jge
jne
jnp
fs
mov
popf
inc
mov
mov
faddp
sub
jle
fldcw
fs
and
push
inc
adc
sbb
lock
stc
fmuls
addr16
rolb
lahf
idivl
loopne
push
out
insb
dec
cmp
repz
xor
dec
sub
sub
and
dec
aas
xchg
and
test
mov
hlt
dec
fstl
orps
sub
adc
loop
lcall
dec
xchg
cmp
jge
rol
mov
push
inc
popa
mov
xchg
jne
cld
iret
inc
xchg
jecxz
fsubl
mov
ret
int
mov
test
xor
inc
mov
aad
push
pop
lcall
xor
int3
cmc
popa
mov
add
cs
iret
ret
sub
fsubr
cs
add
adc
mov
pop
sahf
mov
rolb
dec
mov
sub
cli
jp
inc
lods
scas
fldcw
mov
subb
aad
jne
stos
xchg
push
xor
fmul
cmp
lock
stos
mov
nop
mov
mov
pop
push
sub
mov
xchg
cmpsb
or
mov
inc
push
or
das
insl
out
in
adcl
inc
mov
add
int3
pop
xchg
mov
mov
movsl
mov
lods
fisttps
lods
mov
mov
pop
lahf
add
dec
and
or
pop
imul
cmp
dec
int3
and
inc
bound
or
iret
push
addr16
movsl
jnp
addl
and
push
lret
int
xchg
push
sahf
add
lods
jns
mov
mov
repnz
lods
cmp
xchg
mov
mov
mov
popa
dec
sarb
frstor
cld
add
dec
sub
jmp
aaa
jg
hlt
stos
cs
jno
jge
out
adc
mov
arpl
std
shll
push
inc
cmp
jns
stos
xlat
cli
dec
jg
mov
aad
inc
and
pop
jp
aas
sbb
push
adc
push
out
inc
ret
and
or
inc
out
arpl
ret
mov
push
mov
sete
loop
pop
loope
or
rolb
pusha
xchg
xchg
ret
mov
pop
test
dec
imul
ret
insb
ja
pop
jmp
js
popa
and
call
adc
repnz
jmp
sbb
sub
cmp
sbb
cmc
inc
xor
mov
mov
inc
test
dec
les
cmc
mov
dec
int3
scas
out
xchg
mov
push
sub
movsl
stos
or
ret
add
fisttps
out
cwtl
xchg
fwait
mov
fildl
pop
mov
or
cmpsl
cli
jne
lods
ljmp
imul
adc
adc
push
enter
lahf
inc
or
push
lahf
gs
lods
mov
cli
scas
adc
imul
popf
pop
mov
out
push
or
sub
pop
dec
ja
sti
cwtl
xchg
and
xor
dec
sub
mov
push
sbb
mov
inc
push
imul
fdivrs
insl
enter
jp
hlt
or
outsb
jmp
pop
in
fldt
mov
inc
dec
test
addl
es
push
icebp
push
or
stos
lret
shl
popf
les
notb
imull
imulb
and
jecxz
pop
in
jg
add
bound
mov
fiadds
mov
pushf
out
test
call
imul
jo
inc
lcall
sub
xchg
push
mov
imul
js
bound
adc
lea
push
xlat
jmp
add
test
mov
out
mov
inc
push
cs
jne
sbb
mov
mov
mov
cs
jge
sti
jecxz
add
ret
out
or
clc
xor
mov
jns
jb
cmp
adc
shr
or
jbe
sbbl
inc
or
ret
jp
pop
int
sbb
xchg
rolb
cld
ss
inc
jl
xchg
popl
jne
aaa
sub
push
lea
sbb
sbb
sbb
loope
test
lretw
inc
movsl
lret
dec
pusha
pop
aam
mov
pusha
scas
sbb
shlb
jg
xchg
stos
cs
rorl
shr
or
ljmp
sbb
inc
pop
xchg
pop
mov
mov
xchg
sti
cmp
test
aaa
mov
lods
nop
out
pop
in
push
es
shrb
lahf
cmp
cmpsl
push
jg
mov
dec
xor
xchg
inc
mov
sbb
imul
movsb
inc
inc
adc
das
lds
out
lock
mov
data16
inc
insb
xor
call
dec
mov
fs
or
cmp
jnp
out
mov
fs
sub
push
jl
lcall
div
dec
push
add
dec
inc
sbb
jnp
jb
loope
mov
cmp
outsl
fwait
jae
fistl
ljmp
and
ljmp
lret
pop
inc
cld
rcrb
cmp
fstpl
cmpsb
or
idivl
jnp
loop
cmp
and
mov
sarl
mov
imul
xor
jecxz
ss
sahf
inc
out
dec
flds
mov
jle
adc
inc
pop
icebp
inc
fdivl
xchg
mov
leave
mov
sahf
inc
mov
in
mov
int3
and
pop
loope
and
xchg
in
and
add
or
push
sub
movsl
jl
mov
cmp
test
cmp
out
jl
in
imul
sub
test
sbb
shll
cmp
mov
int3
out
adc
jg
fcmovnu
les
cmpsb
mov
or
iret
jae
mov
jns
and
ja
out
pop
cmc
dec
in
std
aas
inc
imul
jnp
mov
call
jns
add
not
cmp
and
dec
jae
pusha
sub
fstp
pop
movsl
loope
mov
enter
jg
push
sub
in
xchg
loop
add
mov
and
jb
loope
add
test
loope
paddusw
or
lea
lret
ja
data16
gs
adc
jnp
cmp
fadd
cmp
mov
sub
mov
fwait
add
addl
mov
in
mov
dec
push
jo
int3
jo
shlb
pop
lods
pop
mov
into
popf
test
pop
add
sbb
addb
out
int3
in
push
psllq
mov
add
loopne
js
xor
mov
pop
cmp
inc
xlat
test
cltd
sub
xchg
sbb
push
xchg
frstor
push
insb
dec
dec
push
sti
mov
sbb
out
push
test
js
lret
popf
push
and
mov
lret
int
test
inc
clc
sbb
es
add
sti
sbb
add
imul
push
xor
out
push
push
popf
dec
pop
dec
shrb
mov
jp
sub
fs
pop
add
pop
adc
out
or
movq
fisubs
mov
adc
pop
addr16
fdivs
and
pop
daa
pop
nop
ret
add
test
mov
lret
and
inc
mov
jns
xchg
das
jmp
push
pop
aaa
inc
test
sar
lcall
andl
dec
xchg
pop
push
pop
adc
gs
xchg
xor
jae
orl
xchg
push
xor
in
inc
rorl
sbbl
lcall
mov
mov
int3
ss
and
in
outsl
cmp
lret
pushf
xor
aam
and
in
inc
jo
adc
and
test
mov
dec
or
xor
xor
sub
stos
push
cli
xchg
pop
mov
mov
call
negl
push
out
add
push
and
lahf
adc
lahf
sbb
leave
aam
pop
movsb
push
repz
mov
push
xchg
mov
xor
push
cmc
gs
xor
add
cmovno
bound
std
jns
jp
pop
je
pop
mov
data16
pop
adc
mov
mov
mov
es
mov
test
sub
pop
mov
xchg
xlat
mov
in
sub
pop
add
cmp
ja
aam
jb
pop
xchg
sub
xchg
sti
stc
imull
in
mov
dec
jg
add
out
xchg
xor
cli
loope
lea
ljmp
dec
xor
out
gs
xchg
in
iret
std
pop
add
out
mov
push
outsl
xor
adc
or
shlb
pop
arpl
jg
roll
inc
xchg
jmp
inc
jnp
arpl
roll
push
sbb
div
or
mov
icebp
sarl
cmpsb
ds
data16
enter
mov
das
jg
push
lcall
mov
das
out
jle
mov
add
sti
in
nop
bound
lods
push
push
clc
shll
jmp
cmp
mov
cmp
and
mov
sub
insl
stos
xor
insb
mov
aam
jbe
idivb
icebp
cmpsl
imul
jb
sub
dec
pop
sbb
mov
mov
pop
loopne
jmp
movsl
adc
int
mov
idivl
fnstsw
fadd
cli
and
shl
inc
dec
mov
cmpsl
push
outsl
jl
sub
xor
shl
cmp
or
rcl
add
aas
mov
and
cmp
addr16
cmp
cmp
ret
xchg
rcrb
fdivl
sub
fisubl
xor
andb
in
test
aad
out
orl
and
pop
mov
add
push
mov
xchg
into
push
iret
arpl
clc
incb
pop
loop
add
xchg
sub
icebp
mov
adc
mov
dec
ds
sub
fcomps
dec
scas
lds
pop
lods
mov
inc
es
dec
cli
pop
mov
cmp
lds
and
sahf
dec
xchg
insb
push
inc
imul
fidivrs
push
jle
cwtl
lcall
mov
testl
cmpsb
xchg
and
cld
inc
popa
push
cmp
sub
xchg
sbb
pusha
push
call
or
inc
jnp
xchg
xchg
shr
pop
lahf
bound
and
xor
leave
sbb
out
adc
sbb
and
mov
dec
push
push
ret
mov
mov
sub
es
cwtl
push
mov
aad
rorb
dec
es
inc
aaa
leave
fiadds
nop
mov
xor
shl
push
int3
xchg
dec
insb
and
mov
js
pop
push
cltd
pop
sbb
int
pop
push
push
add
pop
jge
test
inc
js
shlb
mov
xor
pextrw
xor
inc
xchg
adc
jp
call
addr16
lret
sbb
jp
dec
aas
sub
pop
inc
xchg
fnsave
sub
fdivrs
jmp
push
inc
add
xlat
bound
mov
or
xchg
mov
push
cld
xor
loope
jae
jle
jl
outsb
pop
call
xor
js
imul
insb
fisttpll
xchg
sub
adc
sub
aad
incl
sub
xchg
dec
xor
cmp
mov
pop
ja
and
and
popa
es
daa
test
inc
fdivl
or
push
vmread
stos
jle
dec
push
and
mov
stc
ret
daa
shll
test
push
or
push
ljmp
stos
dec
cmp
setp
xchg
addb
cmp
or
mov
jg
gs
cwtl
sarb
add
leave
stos
push
push
fldcw
sti
inc
pop
ds
rcrb
cmp
daa
push
dec
mov
add
inc
loopne
loopne
test
rclb
shll
cltd
fcmovnbe
push
mov
hlt
fpatan
std
out
nop
cmp
fsubrs
imul
fsubrl
in
add
pop
cmovle
popf
scas
les
fs
outsb
fldcw
fs
mov
das
push
ja
in
push
ds
add
stc
lret
jae
data16
xor
sub
cmp
or
xchg
nop
hlt
and
mov
add
jl
cmp
push
xor
cli
inc
addb
inc
cli
xor
push
stos
cmpsl
out
cmp
shl
rorb
or
pop
add
add
in
popf
lcall
shrl
xchg
imul
adc
jmp
and
rorl
into
lods
sbb
not
xor
mov
cmp
sbb
inc
repz
pop
push
cmp
pop
push
aaa
into
jno
fyl2x
test
jecxz
sbb
lock
sarb
pop
jns
or
andb
push
faddl
or
cmc
test
sarl
adc
xor
inc
cmp
sarl
push
imul
mov
lods
das
mov
adc
subl
dec
or
out
xchg
add
lret
bsr
pop
pop
fnstsw
sti
inc
xorl
dec
sbbl
sub
inc
call
fstp
imul
rolb
cmp
mov
push
das
or
push
jge
inc
fbld
jmp
or
and
ss
cmc
mov
popa
rclb
mov
jge
test
inc
cmp
cmp
int3
insl
push
nop
jb
outsl
clc
in
inc
sbb
dec
arpl
fbld
lock
cmp
test
inc
jae
cli
iret
push
add
inc
int
leave
mov
fcoml
add
and
xor
add
push
jl
mov
cmp
fistpll
xor
jmp
or
and
adc
scas
push
sbb
pop
pop
addl
push
stc
lds
fisttpll
jmp
dec
pop
and
insb
into
movsb
sbb
push
fsubl
jnp
inc
jmp
les
mov
add
or
or
addr16
push
mov
sbb
inc
test
xchg
mov
lret
sar
push
cmc
addr16
rorb
pop
mov
aad
pusha
rcll
cmpl
in
xchg
mov
out
xchg
cmp
in
movb
and
in
push
mov
mov
push
dec
icebp
mov
test
scas
pop
ret
sahf
lahf
xor
xor
cmp
fists
jnp
xchg
into
shlb
fwait
pop
loopne
das
fldenv
fidivs
push
push
cwtl
movsl
adc
inc
je
sbb
add
shll
inc
jae
mov
sub
adc
sbb
lods
cmp
cmp
push
xchg
jle
pop
adc
aas
sbb
or
movb
sub
inc
popa
cmpsl
adc
sub
push
xchg
repnz
inc
xchg
imul
inc
les
add
fcoms
and
test
push
in
push
clc
sub
adc
movsb
or
inc
inc
fnstsw
xor
or
dec
rcll
stos
stc
scas
repz
or
pop
iret
cmp
jb
les
jb
and
mov
fadds
mov
push
lea
call
jmp
push
call
or
jmp
xor
mov
stc
jmp
jnp
adc
cmp
jge
push
dec
aas
mov
add
and
cmpsl
dec
gs
fsubr
cmc
jno
xchg
call
js
pop
out
sub
jmp
dec
xchg
push
sbb
cwtl
rorl
jne
out
mov
inc
int3
lret
mov
stc
push
aad
xor
dec
cmp
or
adc
inc
inc
xchg
sub
fstps
fiadds
or
dec
out
inc
sbb
cwtl
popf
arpl
xor
pop
mov
imul
scas
movsb
xchg
loopne
popf
xchg
test
push
std
and
xchg
iret
dec
daa
outsl
cmp
aad
push
inc
rcrb
pop
xor
mov
jge
leave
pop
push
jmp
dec
shrb
in
mov
std
push
mov
push
adc
dec
push
fistpll
lret
sti
jno
dec
scas
xor
cli
jno
jl
xor
add
and
push
xor
or
sbb
dec
pop
mov
cmpsl
stc
mulb
jle
or
adcb
sbb
or
cmp
lret
cmpb
adc
pop
ret
roll
fbld
pop
pop
inc
jmp
xor
movsb
shll
insb
pop
cmpsl
inc
jo
jg
push
push
pop
aam
out
sbb
cmp
sub
push
fmuls
pushf
popa
fdiv
pop
adc
dec
cld
push
mov
jo
add
xor
fldcw
dec
sbb
aas
lea
push
or
mov
out
lds
sti
xor
push
xchg
mov
mov
or
adc
pop
dec
mov
jg
jg
jle
push
rol
mov
ret
jecxz
add
sub
vmread
cmp
sbb
pop
nop
outsl
stos
sub
xor
test
leave
add
jo
shll
jmp
fistps
and
stc
add
testl
test
jb
aam
mov
and
cli
add
sbb
push
stc
mov
xor
xor
imul
mov
jae
push
jb
xchg
xlat
ret
cld
xchg
fdivl
push
cmp
inc
loop
mov
fs
ljmp
arpl
sbb
jo
push
or
xchg
fsubs
dec
shlb
lret
ds
fs
xchg
xchg
adc
cmc
and
out
pop
mov
movsb
call
roll
jnp
mov
idiv
rcll
mov
xor
xor
sub
mov
cwtl
es
into
lea
push
ror
lret
daa
call
push
push
dec
jnp
pop
movsl
inc
ja
mov
out
insl
pop
js
in
dec
cmp
and
icebp
inc
iret
js
sbb
mov
aam
fisttpll
push
mov
add
insl
mov
je
mov
bound
fwait
jbe,pt
sahf
add
inc
cmc
push
mov
shl
aad
push
mov
out
mov
push
outsl
cld
jmp
jl
pop
orb
mov
or
cmp
mov
das
shrl
pop
jp
cmp
jae
mov
or
clc
pop
sti
lods
adc
pop
arpl
insb
mov
push
scas
mov
shrl
repnz
pop
mov
or
add
ret
cmp
cmp
jae
icebp
fdivs
sbb
in
out
inc
and
cmpl
in
iret
pushf
push
add
popf
ret
lds
cmp
aaa
add
pop
cmc
stos
dec
mov
enter
xlat
pusha
add
sbb
lahf
push
jl
sub
in
mov
cld
pop
lds
add
dec
xor
dec
xor
std
sbb
xchg
pop
xchg
or
or
ja
mov
mov
pop
loope
fcompl
std
mov
sbb
push
test
mov
repnz
xor
aas
jno
in
adc
pop
lods
js
cmp
lahf
lret
outsl
mov
ljmp
pop
movsl
nop
inc
jb
fwait
pushf
sbb
cmp
lods
pop
push
cmpsb
adc
movsl
call
inc
icebp
push
push
mov
repnz
mov
int3
jge
mov
callw
push
push
push
and
ret
pop
insb
dec
aas
stc
add
mov
and
mov
xorl
jg
bnd
loope
out
jno
mov
lret
aam
scas
lcall
ret
test
test
sbb
les
shrl
cs
dec
dec
push
mov
fsubrs
jo
divb
pop
das
pop
in
outsl
std
int
repz
and
aad
rcl
cmp
add
mov
in
in
loope
mov
mov
ss
repz
ja
mov
bound
xchg
xor
push
cmp
add
popa
cmpsl
int
mov
sbb
imul
push
adc
cltd
sti
cmp
push
fidivrl
mov
push
jns
sarb
daa
ret
aam
ret
jmp
mov
mov
and
pop
jbe
test
xor
add
sub
mov
out
and
push
das
sarb
add
jb
xchg
xor
call
dec
mov
push
inc
popa
cmpsl
test
andl
int3
inc
movsb
adc
xchg
fsubrp
aad
xlat
cmc
aaa
pop
inc
mov
dec
insl
fiadds
and
sbb
into
lods
mov
pop
push
dec
js
negb
hlt
add
cltd
add
mov
mov
lret
subl
mov
cmp
pop
inc
jge
pop
dec
push
das
xor
dec
or
inc
dec
jnp
add
int
pop
leave
dec
jb
pop
aad
fs
mov
imul
pop
adcl
xlat
or
in
movsb
xchg
jl
das
pop
iret
cltd
mov
mov
cld
adc
xor
flds
les
cli
or
mov
or
cmpb
bsf
pop
push
dec
dec
sahf
cmpsl
ss
addb
incl
rep
in
jbe
inc
js
sbb
mov
test
xlat
setns
dec
popf
cmp
jg
push
aaa
xchg
jbe
lods
fs
stc
out
pop
int
cmp
xor
fs
pop
jb
jbe
jbe
fbstp
mov
xchg
adc
mov
cmc
dec
and
jbe
dec
fwait
test
jne
pop
mov
push
add
shl
push
sub
out
and
mov
test
jecxz
stc
enter
out
inc
inc
mov
insb
rcpps
sub
sbb
nop
popa
das
add
jne
or
adc
sbb
out
dec
mov
pop
pop
subb
mov
adc
dec
out
xchg
out
loop
jbe
fsubrs
xor
outsl
nop
out
enter
out
push
into
call
or
cmc
pop
inc
adc
or
aaa
lods
mov
repnz
mov
cmp
in
jle
sti
cmp
pop
mov
popf
cmp
dec
mov
sub
pusha
stc
stos
mov
pop
sub
dec
lea
repnz
imul
cld
xlat
ja
popa
cmp
add
int
int3
dec
insl
cli
addr16
or
insl
std
subb
pop
pop
inc
mov
repnz
imul
int
pop
hlt
add
dec
hlt
cmp
mov
das
loopne
daa
iret
test
push
test
clc
cld
xchg
pop
adc
ret
pop
les
loopne
sbb
sbb
add
sbb
imul
pushf
pop
sahf
push
adc
cmpsb
mov
sub
sbb
cmp
sbb
push
insb
jp
xchg
add
cmp
fbld
stc
and
and
xchg
fisubrl
sbb
add
fsubp
hlt
jle
jmp
mov
mov
or
adc
daa
jmp
add
sahf
jg
jnp
fisubrs
nop
ret
adc
mov
mov
ss
out
outsb
xchg
push
inc
rorl
push
pushf
inc
jnp
imul
lock
sub
test
jl
mov
jge
lock
jp
mov
push
push
pop
and
sub
inc
lret
pop
mov
xlat
cli
xor
aad
xor
andb
mov
popf
add
jbe
mov
adcl
cmp
imul
xchg
shrb
or
mov
jmp
pusha
insl
std
out
aas
lcall
adc
sub
into
aad
dec
xor
fsubrl
in
pinsrw
sbb
flds
pop
in
push
adc
orl
lods
test
std
cmpb
or
decb
add
mov
sub
mov
mov
xchg
sbb
adc
scas
jne
mov
mov
fsubrl
popa
leave
xor
pop
xchg
xor
xchg
jl
inc
xor
pop
pop
mov
bound
sbb
movsb
jo
or
into
int
dec
xchg
mov
fists
sbb
xor
daa
push
in
loope
mov
clc
cli
movsb
mov
pop
xlat
pop
mov
or
and
bnd
lods
sbbb
inc
push
testb
aad
cmc
jle
xor
xchg
movsl
lahf
mov
aaa
out
xchg
xor
or
out
jecxz
inc
jb
dec
fnsave
and
loope
fstp
popf
cmp
sbb
sbb
push
inc
xorl
and
push
in
push
mov
cld
sbb
clc
mov
popf
cli
cmp
cmp
pop
cld
insl
movsb
push
fisubrs
hlt
inc
jecxz
and
or
repz
daa
pop
or
js
mov
std
repz
mov
sbbl
mov
xor
insl
mov
sbb
cs
imul
add
enter
add
mulb
fmuls
mov
mov
mov
dec
test
push
mov
cmp
aad
ja
jb
or
add
cmp
cmp
sbb
jl
or
sbb
divl
inc
xor
sbb
adc
jmp
add
test
pop
jae
lcall
insb
inc
rcr
leave
cmpsl
subl
test
push
aad
clc
jl
rcrb
fdivrs
movntq
loop
lods
mov
cmp
insl
mov
lcall
xor
jno
arpl
jnp
jno
mov
fs
dec
out
sbb
pop
pop
xchg
loop
data16
jmp
push
cmc
pop
clc
and
bnd
jecxz
and
sub
sbb
ds
aas
movsb
cmpsl
lock
sub
mov
in
adc
mov
jle
rcll
sbb
rcll
dec
test
jmp
mov
xorl
mov
mov
filds
push
cmp
and
inc
xchg
call
push
push
testl
std
jp
dec
jge
cltd
je
push
add
lods
add
and
pushf
jnp
add
fsub
nop
bound
cld
aaa
test
clc
jg
or
mov
cwtl
inc
pop
inc
jbe
or
jg
and
cwtl
loopne
mov
imul
add
add
lcall
cmp
dec
sbb
aas
int3
mov
test
cmpb
iret
push
ds
xchg
mov
mov
dec
ret
add
aam
stos
xchg
mov
dec
jmp
mov
push
pop
mov
stc
xlat
mov
mov
sub
and
pop
xchg
sbb
mov
fwait
mov
hlt
arpl
adc
xor
mulb
fnstcw
mov
aad
fidivrs
sbb
jecxz
cld
out
iret
pop
mov
add
and
stos
daa
pop
jmp
shll
stos
sbb
shl
scas
adc
sbb
add
jnp
rcr
and
fdivl
adc
mov
add
mov
inc
xchg
xchg
int
fs
inc
sub
popa
mov
add
fs
jno
lock
push
mov
nop
ss
bound
adc
jb
les
lahf
mov
orl
pop
lock
sbb
movsb
dec
ret
mov
add
fldcw
pop
loop
imul
mov
pop
pop
xor
jg
push
into
in
sbbl
push
jl
mov
dec
fildll
add
data16
rcll
or
mov
dec
and
xchg
jnp
inc
cmp
dec
xor
mov
shll
inc
mov
push
bound
mov
mov
sti
push
insl
inc
nop
mov
mov
mov
push
and
loope
repz
pop
mov
and
pushf
xor
sbb
mov
shl
add
dec
xor
cmpsl
into
push
pusha
push
rcr
pop
mov
and
mov
std
es
nop
fsubl
sbb
je
push
push
mov
sbb
lods
sbb
mov
pushf
faddl
push
ja
mov
rorb
mov
sbb
cmpsb
and
push
pushf
repnz
push
in
push
aaa
arpl
xor
iret
out
mov
and
xchg
xor
out
subl
push
push
jns
dec
jmp
xchg
test
xchg
notl
lahf
adc
pop
mov
das
and
stos
addl
pop
icebp
je
lea
xchg
push
jmp
mov
jmp
std
mov
rcrb
cmc
mov
and
lods
aad
sub
push
and
shll
das
data16
outsb
fists
xchg
jle
repz
mov
adc
mov
shlb
jno
push
testb
sbb
das
inc
mov
loope
xor
addr16
adc
push
cmp
call
loopne
sahf
push
shl
and
cmp
orl
scas
push
push
jmp
in
adc
cmpsl
mov
push
push
stos
dec
mov
mov
pop
imul
cmpl
cmp
sub
xor
arpl
cmp
sbbl
mov
ror
out
je
dec
mov
dec
or
lods
mov
lahf
and
ljmp
fimull
repz
sbb
push
mov
pop
out
jl
movsl
sub
pop
rclb
push
std
cmp
rclb
pop
xor
decl
pop
xor
sub
arpl
bound
loopne
ret
inc
fistl
ljmp
sbb
scas
sarl
push
popf
cwtl
in
adc
loop
mov
fucom
sarb
mov
dec
int
imul
mov
push
stos
imulb
pusha
outsl
ja
mov
aas
xchg
mov
mov
insb
push
push
pop
aas
jecxz
repnz
jb
push
sub
loope
sbb
idivb
test
arpl
jb
pop
ficomps
fstl
mov
push
sti
and
push
mov
cmp
ds
cmp
xchg
jnp
popf
addr16
push
xor
cmp
mov
loopne
pop
push
test
insb
lret
xchg
push
cli
in
add
mov
adc
std
push
mov
shl
popa
movsb
sub
js
cs
add
cmp
fs
or
js
jne
outsb
xor
sub
rcrl
pop
pop
mov
fisttpl
imul
lds
and
data16
cmpsb
test
xchg
test
mov
loop
icebp
xor
movsl
popa
sbbb
xchg
sbb
outsl
out
mov
pusha
and
enter
mov
mov
or
bnd
imul
lcall
in
jnp
sub
lret
push
lret
nop
adc
add
push
pop
add
inc
lds
int3
movsb
dec
push
sub
mov
adc
shr
mov
sbb
rcl
repz
std
inc
add
je
or
pushf
mov
or
and
outsl
repnz
rcl
jno
pusha
cmpl
sub
pop
loopne
cmpsl
jnp
jmp
xlat
sbb
xor
adc
adc
cmp
std
cmp
mov
mov
mov
push
aas
dec
mov
xlat
and
mov
cmp
dec
emms
add
mov
jmp
outsl
cmova
js
jmp
js
stos
or
cmpsb
dec
mov
dec
xchg
inc
std
scas
in
push
jle
dec
and
and
cmc
es
mov
mov
cmp
adc
sti
sbb
imulb
or
repz
jl
add
cmpsb
icebp
sub
in
pusha
and
push
stos
icebp
sarb
add
scas
iret
movsl
cmpsb
test
add
enter
mov
adc
addr16
push
ret
insl
xor
imul
cmp
hlt
and
mov
mov
mov
mov
ss
jmp
sbb
push
outsl
into
nopl
jecxz
cmp
cmpb
in
mov
mov
jl
movsb
or
gs
adc
adc
scas
lods
push
ret
loopne
adcb
js
xchg
adc
xchg
xor
icebp
imul
mov
and
sbb
mov
sub
imul
xchg
sub
sahf
ljmp
inc
jmp
lahf
jae
xor
adc
fisubrl
testb
push
pop
testb
nop
je
cmpsb
icebp
je
adc
and
push
pop
push
mov
sarl
shl
std
lods
push
jbe
aaa
ret
mov
inc
push
scas
jnp
xchg
push
jno
pop
inc
mov
aaa
xor
pop
daa
cmp
cmp
orps
add
inc
sub
ja
xchg
push
test
in
fs
lret
mov
sti
fmuls
sahf
cmp
xchg
ljmp
push
xor
or
dec
add
aaa
shll
mov
cld
loop
jmp
and
sub
and
cmc
mov
insl
sbb
mov
imul
inc
test
add
or
in
test
adc
sarl
lock
adc
enter
and
sti
xor
ljmp
push
je
cmp
mov
pop
andb
in
mov
dec
jp
push
mov
std
ljmp
movsb
mov
sub
int3
push
imul
in
stc
mov
and
xor
xor
cmp
xchg
test
popl
orb
jae
sub
imul
jmp
test
movsb
jmp
arpl
cmp
jg
insb
lcall
xor
ss
cmp
decb
repnz
mov
sub
fndisi(8087
xchg
xor
cmp
mov
push
jae
sarl
xor
xchg
lcall
lods
lea
mov
jb
kandnw
test
push
sbb
push
stos
sbb
sbb
jnp
jecxz
roll
push
mov
xor
jecxz
add
push
jg
cld
jmp
addr16
addr16
sbb
daa
cltd
cmp
and
in
pop
xchg
jmp
jns
or
push
adc
inc
mov
and
shrb
jns
je
imul
pop
mov
mov
push
jns
pextrw
movsb
xchg
xchg
mov
fdivp
push
jb
cmpsl
xchg
mov
adc
pop
dec
aas
or
rdmsr
and
mov
cmpsb
lods
in
imul
sub
inc
xlat
fwait
jle
outsl
dec
xchg
jo
sbb
mov
stos
int3
xchg
int3
icebp
adc
pop
cmp
lock
out
mov
push
lods
out
pop
stos
or
out
mov
int3
cli
insl
iret
lret
imul
xchg
movsb
push
fwait
out
adc
scas
push
jg
xor
addr16
outsb
sub
movsb
adc
int3
xchg
arpl
jp
dec
in
sti
push
outsb
imul
inc
or
inc
xor
mov
int
push
jmp
cmp
dec
sbb
mov
mov
test
dec
jp,pn
sbb
repz
push
fldcw
inc
lods
xchg
or
add
outsl
mov
dec
xor
mov
pop
sti
xchg
loope
or
clc
dec
mov
add
adc
cli
cmp
fistpll
or
or
rcr
andb
gs
gs
test
xor
and
jno
push
mov
orl
inc
xchg
adc
sub
test
rclb
jbe
cmp
push
inc
add
xchg
lods
or
imul
push
push
arpl
std
sub
mov
sbb
imul
repnz
mov
xchg
in
jg
pop
divl
mov
adc
adc
mov
xor
ret
pop
data16
daa
das
jmp
aas
pop
xchg
push
jae
loopne
pop
mov
inc
mov
fcmovbe
add
jecxz
cld
or
test
cmp
jl
out
push
mov
xchg
dec
out
rcrl
aam
jne
sbb
sub
std
into
data16
mov
mov
and
test
out
es
lods
inc
popf
in
ljmp
hlt
shll
inc
fst
sub
notb
and
data16
icebp
push
mov
push
cmpsb
stos
dec
cmp
cmp
nop
repz
in
daa
sub
cmp
sub
aad
jg
xchg
jp
nop
push
jo
es
fcomi
gs
mov
dec
repnz
ficomps
sub
inc
aad
mov
inc
jae
adc
rcrl
dec
clc
cmp
ljmp
cmp
aam
mov
inc
loope
fcoms
pushf
test
js
mov
in
scas
mov
loop
loope
mov
xchg
add
mov
xlat
leave
adc
mov
daa
fiadds
data16
adc
jl
jo
jg
popa
cmpsl
cmpsl
push
xchg
mov
sbb
insl
cli
mov
shrl
ja
push
push
add
int3
es
mov
das
ret
dec
sub
or
sub
arpl
ja
nop
bound
inc
pop
lahf
cmp
nop
imul
and
mov
push
push
pusha
jbe
and
push
push
mov
daa
loope
xchg
repnz
sbb
xor
xlat
enter
adc
pop
addl
push
jge
ss
jnp
mov
cmpsb
push
pop
jbe
loope
lock
inc
and
dec
mov
xor
pop
lret
iret
sbb
jecxz
sub
push
adc
and
int
xorb
mov
push
lahf
loopne
pop
orl
jge,pn
adc
sbb
sub
xchg
mov
jno
mov
ret
jnp
lods
inc
fwait
add
loop
dec
mov
dec
and
pop
fiadds
dec
cmp
jecxz
or
adc
fiaddl
stos
insb
cmp
ja
repz
cmp
int
out
dec
push
sub
fiadds
cli
shlb
loop
movb
jp
lret
xchg
push
cs
jle
push
icebp
stos
xor
cwtl
int3
popf
cwtl
popl
lds
adc
outsb
pop
bound
jae
dec
loop
xchg
ror
lret
add
sub
cltd
repnz
shlb
addr16
inc
adc
frstor
adc
adc
cld
sbb
sbb
xor
push
lea
repz
aas
ja
xchg
push
inc
push
scas
inc
mov
rolb
lea
insb
and
fistpll
es
sahf
jb
stos
xor
mov
cmc
cmp
orb
push
addb
addb
add
jg
or
ds
in
xlat
jb
jnp
xchg
mov
imull
lea
shlb
addr16
xchg
hlt
pop
cld
mov
loop
into
add
dec
dec
mov
filds
aad
outsl
jle
mov
adc
les
fcomps
bound
mov
test
inc
movsb
les
mov
xor
sub
add
test
lock
mov
jo
fsubrl
pop
fdivrs
outsl
movsb
push
jns
cmp
ljmp
test
mov
or
shl
add
pop
dec
adc
mov
ss
push
lods
mov
inc
stc
lods
sub
call
cmp
push
xchg
scas
inc
in
add
imul
insl
push
bound
adc
jecxz
aaa
push
mov
inc
rol
xchg
or
loope
push
data16
sbb
movsl
xor
cwtl
inc
cmp
mov
and
jne
push
adc
jmp
fidivl
daa
fiadds
cmp
adc
inc
xor
sbb
adc
mov
or
subl
xchg
xor
test
sub
jmp
add
cmpsl
lods
aad
je
cmp
es
in
cmpsb
xor
mov
push
adc
jnp
xor
sbb
mov
mov
push
fisubs
lds
imul
stc
jl
test
fwait
inc
xchg
pop
mul
scas
sbb
adc
inc
push
sahf
pop
into
sub
xor
jmp
repnz
sub
xchg
xchg
push
xor
pop
jne
pushf
jo
jle
jmp
add
icebp
cmp
jl
mov
in
inc
test
sti
cmp
cld
aas
jmp
lea
adc
mov
cld
hlt
pop
mov
push
mov
mov
fnstenv
sbb
sbb
push
xchg
mov
pushf
push
sahf
clc
out
daa
les
mov
pop
and
mov
cmp
cmpsl
ja
fldcw
mov
lahf
rcll
es
idivl
dec
mov
into
je
in
cmc
inc
int
sub
clc
repz
out
es
pop
je
mov
sbb
sbb
lea
orb
push
ljmp
iret
xchg
and
fs
xchg
out
push
pop
shl
mov
xchg
test
jno
repnz
inc
cmc
push
aaa
xchg
mov
ljmp
xchg
stos
mov
mov
in
cmc
mov
ja
js
mov
inc
repnz
pushf
xchg
mov
ss
jle
rcrl
mov
xchg
das
xchg
push
mov
mov
clc
ret
les
inc
pause
mov
sub
rcl
repz
and
and
push
inc
cmp
out
jbe
xchg
ds
hlt
and
jb
je
aad
pop
adc
xchg
aad
gs
xchg
dec
das
aad
mov
cmp
or
mov
int3
xchg
inc
scas
xchg
sbb
mov
jbe
mov
push
push
mov
setge
pop
adc
dec
jnp
ja
sbb
rorl
addr16
push
ljmp
incb
int3
into
pushf
xchg
dec
sbb
or
xor
fcmovb
xchg
inc
das
into
rclb
push
enter
aam
xchg
popf
scas
xchg
stos
adc
add
loopne
mov
push
cmp
out
mov
jmp
prefetch
dec
repz
negl
cmp
xlat
call
pushf
push
inc
adc
fcoml
mov
pop
or
adcl
lds
push
jle
and
nop
sub
cmp
xchg
jmp
rcll
jnp
out
sahf
lods
jbe
mov
fcomip
addl
xor
fildl
add
fidivs
lds
push
and
push
movb
fs
inc
sub
mov
shlb
push
enter
sbb
sbb
cmp
fcomps
push
shl
push
adc
pushf
cwtl
loope
in
mov
loope
mov
js
imul
lea
adc
repz
jae
pusha
or
xor
decl
xor
dec
inc
enter
cmp
pop
jo
push
stos
dec
mov
into
mov
add
call
imul
shrb
sahf
pop
ljmp
and
mov
lods
jae
sbb
inc
outsb
xchg
in
push
jno
mov
loope
rcr
mov
fadds
in
je
dec
pop
aas
outsb
sub
pop
sbb
cld
or
add
test
mov
push
aas
out
inc
test
inc
mov
sti
cmp
xor
icebp
hlt
gs
push
push
mov
movsl
inc
ffreep
mov
pop
pop
call
test
push
scas
xor
mov
sbb
push
pushf
mov
mov
pop
cmpsl
lock
and
loop
mov
fildl
pmullw
mov
push
jle
or
mov
and
out
sub
sahf
push
jmp
in
pop
popa
xchg
dec
xor
jne
jno
push
push
jbe
or
push
or
aam
sub
das
ret
lcall
or
cs
lds
xchg
sar
jae
cmp
call
call
les
adc
fs
jge
pushf
mov
adc
subl
xor
push
icebp
jno
jmp
sbb
dec
cmp
lods
lock
and
push
pop
sub
jge
and
jns
mov
dec
push
insl
sbb
dec
mov
xchg
lret
mov
and
leave
pushf
inc
push
pop
imul
adc
sub
mov
push
jb
sub
subb
mov
jle
sbb
repz
sub
fists
fldenv
and
xchg
clc
sbb
mov
outsb
popa
loopne
cmp
mov
cld
mov
xor
and
cwtl
sbb
jo
je
push
jmp
xchg
jg
rcrb
stos
pop
jle
pop
test
xchg
and
jne
ret
sbb
xor
jmp
test
jp
loop
add
stos
xchg
add
shll
pop
cmp
int3
test
pop
dec
or
loopne
dec
out
out
dec
push
jmp
xchg
push
adcb
xlat
and
or
lock
ss
testl
lds
push
into
adc
jno
push
mov
cmp
aas
gs
fisubl
std
adc
sbb
push
scas
pop
jle
push
xchg
sbb
int3
push
pop
pop
in
mov
lahf
das
and
push
cwtl
cmp
fs
orl
rclb
cwtl
mov
or
popf
test
push
jmp
ljmp
call
mov
pop
test
and
xchg
lods
push
cmp
fnsave
call
lods
add
insb
dec
cs
xor
adc
push
or
mov
fs
lahf
sti
pushf
cmp
sti
push
test
and
inc
pop
sarl
pop
dec
sbb
std
xor
jnp
shlb
xor
pop
dec
movl
pop
jge
push
cmp
pop
adc
inc
int
out
jno
mov
leave
pop
pop
clc
jno
nop
out
xor
adc
loope
xchg
push
negl
loope
je
dec
insb
int3
xor
fisubrl
jecxz
xchg
cmp
or
adc
mov
sbb
sub
shll
xchg
stos
mov
sub
or
sbb
test
stos
fwait
pop
jge
jae
out
divb
or
inc
stos
nop
cli
adc
stos
and
fwait
inc
pushl
push
push
mov
mov
rcl
push
add
push
push
xchg
std
scas
scas
test
sbb
mov
mov
jl
out
pushf
es
jmp
push
inc
mov
inc
dec
pop
mov
fldcw
aas
dec
movsb
jne
push
xchg
mov
pop
clc
mov
out
outsl
aaa
insb
iret
mov
pop
adc
decl
adc
mov
pushf
mov
insb
push
pop
outsl
lods
inc
push
es
out
out
fisttpl
dec
imul
pop
mov
sub
push
shlb
add
push
push
shrb
mov
stc
jecxz
cmpsl
and
and
mov
mov
les
notb
push
in
mov
xchg
aad
cmc
sbb
nop
es
push
lods
test
pop
and
dec
xor
mov
fwait
adc
daa
push
xor
add
sbb
in
popa
mov
sub
and
or
cmp
js
clc
fisubs
ja
es
adc
adc
out
aaa
test
sub
lds
mov
and
out
test
cwtl
aam
inc
dec
pop
pop
mov
mov
shll
pushf
push
in
pushf
notb
enter
sbb
mulps
xor
pop
ss
enter
jb
dec
not
xchg
scas
out
shrb
addl
jmp
std
out
mov
aas
pop
mov
imul
fildl
pop
es
decl
sub
fs
jae
jmp
aas
xchg
mov
xchg
stos
jl
aas
fistps
scas
ficompl
dec
or
jae
mov
repnz
stos
xchg
bnd
mov
addr16
idivb
popf
es
sarl
scas
out
cld
cmc
gs
hlt
pop
dec
jno
mov
fwait
lds
xor
mov
faddl
lods
or
or
jb
cmp
jne
ds
inc
cmp
mov
mov
ss
jnp
sbb
ficompl
jnp
jae
fidivrl
lahf
push
lods
into
ficompl
push
out
fidivrs
jns
shrl
push
mov
jno
push
xor
jns
xor
or
inc
or
dec
mov
inc
aaa
test
push
lret
xchg
mov
lock
add
push
ret
arpl
loope
adc
jl
push
mov
push
adc
lret
pop
js
jo
addr16
mov
fcoms
xlat
xchg
cmpsl
out
cmpsb
es
xor
jns
xchg
mov
jmp
lea
aam
sub
daa
in
sbb
pop
cwtl
add
jo
mov
lret
add
outsb
int3
test
add
subl
ss
in
cwtl
fwait
outsb
jmp
or
adc
daa
repz
mov
inc
add
inc
or
aam
leave
inc
fisubrl
lods
sbb
roll
out
lods
sub
jbe
lods
ljmp
mov
js
scas
add
add
into
stos
stos
push
sub
imul
fidivrs
sub
iret
js
ds
mov
jnp
cmpl
and
push
dec
popa
inc
mov
push
and
mov
aad
cltd
lret
in
push
cmp
outsl
std
lods
mov
out
jae
imul
ss
add
pop
add
mov
mov
imul
lret
mov
xchg
sbb
loope
mov
mov
gs
shlb
data16
cmpb
pop
insb
xchg
imul
loop
inc
push
sahf
in
into
jl
lock
loop
dec
insb
pop
sbb
add
inc
test
icebp
sub
xorb
mov
pop
loopne
in
inc
cmp
xlat
add
pop
es
mov
rol
testl
dec
dec
stos
mov
push
cwtl
inc
pop
mov
lods
hlt
cltd
cmpsl
cmpsb
sub
push
adc
outsl
imul
in
mov
push
fildll
sub
aaa
icebp
pop
out
mov
scas
ja
mov
inc
js
sub
sbb
mov
xchg
rolb
sub
mov
fsubl
je
std
pop
sbb
fwait
leave
pop
inc
stos
cmc
adc
jno
push
jo
outsb
iret
sub
cli
pop
dec
in
inc
iret
or
add
cmp
cmp
mov
js
jne
call
ret
insb
rol
jne
enter
mov
ret
ficoml
xchg
mov
fucomi
jg
sbb
in
jnp
test
lahf
mov
push
aas
add
pop
or
rorb
mov
pushf
dec
mov
or
cmp
dec
ljmp
push
les
loop
test
inc
jo
dec
pop
inc
and
inc
adc
dec
popa
shlb
lcall
or
lcall
nop
xchg
lret
sub
or
jne
call
and
aaa
aas
dec
test
loopne
pop
inc
fsubp
es
and
stos
ja
stos
das
ret
adc
xchg
cmp
xchg
xor
daa
push
mov
aaa
jg
fstpl
inc
push
dec
testb
sub
inc
adc
push
data16
add
and
gs
cs
mov
pop
or
enter
icebp
push
sbb
cmpsl
daa
movsb
cmpsb
mov
push
adc
testl
inc
pop
or
and
adc
popf
imul
dec
frstor
or
je
jo
out
dec
or
sub
dec
frstor
xchg
jl
pop
jne
pop
pop
orl
je
inc
in
xchg
sbb
lock
hlt
mov
and
mov
mov
pop
cld
lods
or
adc
jge
cld
loope
jb
or
mov
in
and
mov
push
popf
rcl
js
mov
pop
jbe
popa
jno
sub
jl
fstpl
or
clc
jbe
mov
lock
shrb
cmp
ja
pushf
in
xor
stos
adc
mov
call
aaa
ret
mov
inc
cld
ret
mov
lods
jge
xchg
mov
jae
adc
mov
leave
or
xorb
jmp
aad
pop
push
enter
cmp
shrl
mov
insb
stos
sbb
scas
testb
into
fsub
outsl
data16
es
aaa
sbb
mov
xchg
rcrl
push
push
xchg
hlt
jle
inc
dec
ljmp
sti
ss
mov
sbb
mov
movb
cmp
test
mov
pop
xchg
test
cmpl
and
dec
add
fistpl
nop
enter
lods
leave
enter
out
ss
mov
mov
sbb
sbb
icebp
popa
int3
inc
mov
cmp
push
inc
fs
dec
repnz
inc
pop
cltd
xor
xchg
mov
xor
fiadds
push
push
out
cmpsl
mov
aaa
lock
mov
mov
mov
and
fs
jae
out
test
sahf
jp
bound
jne,pn
xchg
inc
and
xchg
loope
mov
sarb
out
shrl
cmpl
jg
rcr
aad
ret
dec
loope
jecxz
mov
push
push
in
mov
cmp
inc
add
push
mov
scas
in
dec
int3
mov
xor
push
nop
xchg
rcr
js
arpl
test
pushf
cld
ja
jle
push
lods
jae
inc
sbb
stos
or
xchg
test
loop
fstpl
rolb
aas
pop
mov
out
pop
call
pusha
pusha
fcmovne
add
xchg
dec
adc
repnz
mov
mov
aas
mul
xor
addl
aas
push
dec
sub
jb
and
sahf
repz
insb
scas
push
xchg
in
arpl
ljmp
outsb
mov
subb
rorl
sub
mov
inc
mov
dec
mov
inc
test
jb
fs
scas
ds
das
cmpsb
nop
shl
mov
and
inc
es
insl
xlat
pop
and
stos
sbb
test
pop
dec
ss
das
add
cmpsb
jne
in
cmp
int3
add
mov
sbb
jae
pop
push
sahf
mov
push
and
push
out
xchg
add
cmpsb
pop
push
jbe
jo
sbb
jbe
in
lcall
add
mov
fcmove
push
push
js
inc
xchg
xchg
outsl
pop
adc
jbe
mov
shl
sbb
cltd
pop
mov
shlb
push
bound
movsl
xchg
leave
inc
es
xor
xchg
add
cmp
pop
icebp
jno
xlat
shrl
inc
fists
jge
jnp
mov
or
sahf
out
pop
adc
mov
jae
pop
loop
cmp
out
dec
orb
out
dec
in
add
stos
push
adc
dec
inc
fildll
in
faddp
outsb
push
dec
jo
aad
gs
jnp
and
sbb
inc
leave
out
cmpb
imul
shlb
std
rorb
jp
lds
bnd
data16
xor
mov
sub
pushf
mov
sbb
popf
sbb
jno
jmp
jle
mov
add
xchg
pop
sbb
daa
adc
in
mov
cli
mov
scas
adc
lods
movd
dec
and
jp
and
mov
movsl
lcall
and
test
xlat
inc
pop
push
mov
cmpsl
fidivrs
mov
push
stc
pop
adc
inc
cs
sbb
inc
pop
rcl
sahf
mov
cmp
mov
cld
std
test
push
testl
or
xchg
jl
les
jae
orb
fs
sub
jg,pt
dec
pop
jb
jg
repnz
cmp
sbbl
out
pop
lds
hlt
dec
loop
sbb
ja
jnp
or
jo
mov
out
data16
js
fisttps
inc
out
xor
cld
pop
jge
mov
fnstenv
pop
mov
and
insl
cmp
mov
or
mov
sti
push
cld
pop
sub
sbb
fldt
cld
xor
sbb
push
movb
mov
adc
pop
movsl
cmp
lock
decb
or
sub
mov
jnp
fcmovnbe
adc
divb
pop
pop
and
in
rcrb
lret
movsb
shrb
arpl
gs
test
pop
rclb
dec
jo
imul
stos
inc
add
sub
in
or
jae
inc
dec
ror
nop
xor
ret
cmp
aas
and
sbb
push
ja
sbb
aaa
lods
add
add
dec
lods
subl
push
mov
hlt
roll
push
pop
mov
jo
xchg
mov
out
xchg
jo
jge
lcall
pushf
mov
sbb
ss
mov
cmpsb
inc
out
pop
pop
sub
cmp
push
test
mov
adc
std
fsubr
mov
lds
dec
call
push
enter
jge
ja
inc
mov
ljmp
jge
or
stc
fsts
pop
jbe
push
xor
cmp
mov
and
mov
popw
mov
xchg
mov
pop
xchg
clc
loop
jnp
or
inc
stos
mov
das
test
ja
and
push
push
xchg
adc
lods
xor
clc
adc
popf
mov
fimuls
or
mov
addr16
xchg
dec
daa
out
movsl
fimuls
jb
andl
pop
in
mov
cmpsb
in
push
les
and
enter
loop
in
cld
pop
std
jmp
mov
pop
push
xchg
daa
lea
mov
ret
dec
test
pop
out
add
xchg
adc
mov
gs
push
loope
not
or
xchg
add
pop
push
jp
inc
sbb
cmpsl
rcll
cmp
adc
pop
xor
adc
push
adc
fwait
inc
sarl
shlb
data16
fadds
jl
xor
sahf
xlat
dec
xchg
add
shll
fsubl
hlt
xchg
ret
sub
jo
and
mov
adc
cmp
das
sbb
pop
add
test
jne
dec
shrl
ss
push
lret
rcll
fwait
pusha
test
add
ss
stos
jle
dec
sbb
mov
sbb
push
inc
repnz
insb
sbb
in
mov
mov
mov
pop
lret
andl
inc
rcrl
push
call
jl
loopne
jb
lret
stos
lret
adc
loopne
push
and
and
stc
out
inc
jl
or
outsb
push
movsl
and
mov
fildll
pop
xchg
pop
mov
push
aad
fsubrl
mov
adcl
push
cltd
movsl
dec
push
xchg
bound
mov
push
sbb
aas
dec
add
sub
cld
add
int3
mov
filds
inc
sahf
pusha
pusha
negb
jg
lret
sub
out
sbb
and
nop
pop
pushf
out
jg
out
mov
fists
xor
lret
and
xchg
xchg
mov
cmc
daa
sub
loopne
pop
mov
add
aad
movsb
sub
mov
out
fnstsw
sub
cmpsl
pop
cli
hlt
loop
xchg
sahf
loope
jbe
jmp
in
pusha
add
sub
shrb
push
enter
in
xchg
ficoms
es
inc
add
jecxz
scas
fwait
mov
pop
mov
or
dec
jmp
mov
or
pop
loope
jg
add
cmp
imul
repnz
jmp
mov
dec
jns
jmp
add
jb
enter
int3
xchg
dec
iret
adc
add
pop
jo
enter
mov
pushf
fstpt
and
ljmp
dec
orl
rcl
into
out
movsl
es
sahf
or
sbb
xchg
pop
or
lds
gs
aas
push
iret
lea
xchg
data16
bound
in
rol
ljmp
dec
fs
dec
sti
xorb
add
or
rorl
sti
insl
lret
movsl
inc
mov
mov
js
test
mov
stos
fistpl
ret
pushf
outsb
fmull
shr
inc
xchg
ficomps
mov
jmp
rcrb
ja
mov
call
lret
jo
inc
mov
mov
add
test
push
stos
or
cmpb
fcmovnbe
test
ja
out
cmpsl
jo
push
push
sahf
add
mov
cmc
sbb
insb
sub
xchg
sub
jmp
scas
xchg
mov
pop
mov
xchg
adc
mov
fnclex
fidivrs
push
sbb
in
push
mov
bound
je
mov
pop
dec
fcoml
cltd
into
imulb
jne
and
sub
xchg
mov
loopne
in
and
ret
jo
lahf
pop
inc
sbb
xchg
jno
cmp
inc
aam
fcmovbe
mov
clc
insl
mov
jae
mov
mov
sbb
out
lea
mov
pop
insb
ss
sub
inc
push
shlb
add
mov
daa
rcl
cmp
jle
ja
test
ljmp
bnd
dec
fs
push
add
add
repz
idivl
lds
cmp
int
jno
ret
jns
add
push
pop
push
inc
mov
stos
xorl
add
rcr
repz
sbb
or
and
push
xchg
fmull
xlat
jge
jle
repz
fldenv
daa
adc
imul
xor
loop
cmp
push
xor
mov
push
lahf
or
shll
add
mov
and
std
push
in
subb
mov
inc
pop
mov
and
into
sbb
pop
and
xor
enter
mov
and
and
jp
and
cmpsl
push
call
ret
sti
adc
fdivrp
inc
dec
sbb
jmp
cwtl
inc
sub
jp
dec
mov
sbb
dec
cmp
enter
mov
lods
mov
mov
div
xchg
cmp
lea
lods
je
push
in
gs
fwait
cmp
dec
fcompl
push
sbb
into
xor
lret
out
pop
fcomi
imul
test
xchg
dec
push
dec
pop
xor
test
popf
xchg
mov
aaa
loope
adcl
push
jo
push
push
popa
pop
loope
es
dec
mov
lcall
idivb
fbstp
sub
mov
mov
and
xchg
jmp
stos
push
out
adc
inc
outsb
cmp
jmp
in
sbb
sti
testl
insb
imul
outsl
test
in
loope
in
dec
jecxz
sub
aam
push
mov
sub
dec
out
pop
sbbb
inc
mov
icebp
xchg
fistpl
adc
adc
insl
lcall
mov
and
push
mov
cmp
testl
mov
sbb
push
pusha
aas
and
rorb
add
push
push
jl
inc
xchg
fbstp
mov
scas
xor
in
or
stos
lahf
mov
lret
and
arpl
stos
test
mov
dec
inc
inc
fwait
das
inc
jae
aaa
mov
insl
enter
adc
lret
or
cmp
rolb
arpl
adc
push
inc
mov
pop
cmpsb
std
movsl
sub
loopne
jnp
inc
xchg
hlt
mov
rorb
imul
adc
cmp
xchg
shlb
nop
add
dec
in
sbb
in
ds
movsl
out
inc
cli
in
cli
mov
pop
push
jecxz
sub
les
pop
inc
sbb
and
sub
pop
sbb
dec
cmc
push
pop
pop
pop
adc
sbb
nop
xor
pop
inc
mov
mov
push
imul
mov
pop
sahf
outsl
adc
int3
aam
rorl
cltd
lret
fistpll
sbb
js
mov
scas
pop
icebp
shlb
test
fwait
daa
sbb
mov
xchg
inc
fdivrs
inc
in
popa
and
cmp
pop
pop
or
adc
sbb
das
and
dec
inc
push
xchg
push
jb
stos
adc
data16
gs
int3
lret
cmp
test
scas
je
xchg
dec
repnz
out
xor
rclb
xor
sbb
fisubrl
idivb
jmp
mov
ds
xchg
mov
xor
mov
push
pushl
inc
push
jl
sub
shll
leave
add
push
push
or
or
push
pop
push
cmp
and
std
aad
pop
mov
int
cltd
out
lcall
fldenv
sbb
ret
mov
xchg
ret
add
cmp
mov
das
fdivrs
cmpsl
test
repnz
dec
in
jae,pt
enter
sbb
jno
stos
xor
mov
ret
xorl
inc
fs
mov
push
pop
push
fistl
lahf
xchg
sbb
sbb
mov
das
mov
dec
stos
mov
pop
xchg
cld
inc
stc
movsl
push
daa
arpl
xor
test
sbb
and
fs
fcoml
in
loopne
jle
pushl
aad
imul
adc
mov
aaa
fistps
fisttpl
int
sbb
inc
insl
popa
ficoml
shlb
lea
pop
jno
jp
push
push
xchg
mov
leave
sbb
out
call
pusha
adc
fildll
dec
mov
lock
lods
aad
test
shrl
cmp
es
jbe
gs
jne
sub
std
xor
out
sub
push
out
push
sbb
push
mov
xlat
pusha
pop
mov
pop
int
jae
xor
int
and
negl
sahf
mull
and
xor
and
jg
jmp
mov
mov
fstp
add
pop
fsubrl
lock
dec
or
sbb
push
je
mov
cs
mov
lret
xor
ffreep
mov
fwait
pop
and
dec
xorb
pop
ror
add
cld
es
inc
aas
push
and
data16
test
fmul
fsubrp
stos
mov
out
or
aaa
and
icebp
icebp
gs
je
orl
popa
arpl
push
inc
push
add
mov
mov
mov
cwtl
mov
fisubs
fldcw
or
push
sbbb
fidivs
cmpsb
test
add
dec
stc
push
test
fistpll
mov
push
sbb
jae
clc
aad
insl
xor
call
inc
mov
lcall
inc
push
aas
xor
pop
fsubl
jmp
push
sub
push
stc
sub
pop
jmp
mov
loopne
aaa
adc
push
aam
sbb
loopne
int3
or
xor
jns
mov
and
jnp
fstps
in
pusha
clc
push
subb
repnz
jo
xchg
aam
add
leave
in
pop
pop
scas
cld
mov
fildl
rclb
push
pop
sub
jbe
ds
inc
loop
imul
xchg
xchg
insl
scas
dec
xor
in
cs
and
dec
mov
push
xchg
loopne
outsl
push
mov
pushf
or
dec
mov
ljmp
mov
pop
fcmovnu
dec
bnd
lcall
lds
add
push
xor
enter
scas
mov
test
sbb
int
shr
into
inc
mov
mov
dec
lea
xchg
jle
fmuls
dec
mov
and
mov
prefetcht0
mov
jg
nop
push
mov
jmp
cmp
cmp
mov
inc
or
mov
jmp
mov
push
xchg
mov
leave
jl
ficomps
out
or
jb
ss
mulb
into
adcb
and
jecxz
inc
adc
cli
ljmp
mov
arpl
sub
inc
jbe
pop
jbe
enter
outsb
mov
inc
pop
loopne
xchg
sbb
mov
xchg
shll
pop
mov
push
add
les
jno
cmp
xor
rol
mov
mov
aaa
lds
mov
lret
jp
movsl
out
mov
add
and
popf
call
loopne
in
leave
les
fisubs
pop
mov
push
in
mov
inc
in
inc
add
cmp
and
pop
pop
lcall
pop
pop
aad
jp
xchg
in
es
mov
lahf
jge
pop
mov
mov
fisttps
sub
sbb
std
dec
negl
mov
xor
pushf
mov
mov
stos
pop
adc
cli
sub
int
push
faddl
cltd
addr16
aam
fistpl
out
fcompl
sub
mov
int
sub
out
mov
stc
aaa
jge
mov
inc
fwait
dec
sub
xor
repz
xor
mov
xchg
add
sub
xchg
lret
loop
enter
js
pop
ss
pop
aas
xchg
or
out
insb
stos
aad
sbb
movsb
leave
sbb
dec
xchg
fdivrs
and
divb
out
pop
mov
daa
test
mov
fstl
out
sub
jg
sbb
sub
cwtl
push
gs
das
imul
jne
mov
or
negb
pushf
sub
inc
frstor
sarb
scas
mov
test
cmp
not
pop
lds
cltd
mov
pop
lret
outsl
jne
ret
inc
clc
mov
lret
inc
imul
fldenv
cmp
add
mov
pop
cltd
pop
scas
cltd
jmp
mov
pop
nopl
push
inc
add
sub
jno
fs
inc
xor
jge
lahf
roll
push
movsl
js
jg
scas
adcb
aas
mov
mov
dec
inc
inc
mov
gs
or
push
jne
mov
test
mov
lret
add
mov
jo
jo
test
stos
js
push
int
mov
add
adc
lret
and
dec
and
into
adc
jmp
mov
rcrb
cld
sub
jno
ljmp
js
test
data16
lahf
pop
daa
dec
les
cmpsb
xor
mov
xchg
and
pop
icebp
xor
and
lea
push
cli
test
sbb
mov
mov
or
jbe
cmpsl
xor
dec
sahf
mov
adc
mov
pushf
mov
jl
pusha
fwait
inc
hlt
out
fucomp
and
jbe
xor
push
pop
rol
and
jb
mov
insl
sub
xor
jmp
cs
mov
imul
cmp
popf
add
adc
jo
outsl
scas
push
add
incl
cwtl
push
add
mov
fistl
add
mov
stos
and
fimull
fisubs
js
aaa
adc
lahf
fbld
push
mov
iret
and
push
mov
push
sub
lcall
mov
sub
nop
inc
jo
lcall
mov
mov
sbb
fwait
mov
jbe
pop
and
outsl
sub
dec
mov
popa
sbb
xchg
rolb
shll
mov
cmp
cltd
xchg
jmp
shrb
cli
stc
push
in
in
jg
iret
popa
test
ret
jl
rcll
adcl
addr16
or
imul
and
ljmp
push
mov
xor
mov
into
xor
jno
pop
negb
jp
inc
inc
xor
jnp
loop
pop
and
push
shrb
arpl
adc
into
and
int
xchg
sti
xchg
in
andb
xchg
push
es
mov
cltd
add
pop
mov
iret
ljmp
mov
adc
filds
imul
adc
xor
jecxz
es
add
mov
ss
adc
adc
xor
xor
push
xor
fmull
insb
lea
in
cmpsl
xchg
cmpsb
adc
push
or
and
mov
aam
je
xor
add
aas
sbb
data16
dec
and
jae
mov
std
bound
xorb
fsub
push
outsl
push
rcrb
xor
sub
je
push
sbb
xor
sub
cmovle
mov
xchg
sbb
pop
fisubl
xchg
cltd
or
fsubl
and
mov
movsb
int
xchg
mov
loope
shl
inc
inc
push
jo
sbb
out
sbb
pushf
add
inc
cmpsb
out
jecxz
in
mov
in
pop
jl
repz
jmp
push
in
add
mov
or
loope
push
outsb
add
xchg
out
stc
in
dec
mov
push
pop
mov
sbb
sub
jnp
popa
movsl
mov
jecxz
jne
dec
insl
xchg
jp
aaa
sub
xor
stos
repz
sbb
jge
sbb
femms
dec
lock
cmp
inc
and
fildl
lods
mov
dec
movsb
mov
int
mov
inc
ret
mov
test
adc
addr16
dec
addr16
inc
cli
add
mov
dec
xor
ds
xchg
pop
mov
mov
add
cmp
cwtl
testl
lods
pusha
add
aam
fs
loope
arpl
adc
cltd
mov
incb
in
adc
sti
mov
push
push
icebp
lcall
sahf
mov
loope
iret
push
in
mov
ljmp
outsb
lret
aam
sti
xchg
out
cmp
dec
cmp
xor
and
sbb
push
sub
push
cmp
dec
out
gs
insl
and
lret
aad
pop
jo
fsubrs
loop
sub
test
div
stc
mov
out
and
mov
sub
adcl
insb
fisttpl
and
aas
ss
mov
das
pusha
sbb
ja
or
sahf
pusha
outsb
pop
outsl
arpl
in
adcl
out
arpl
daa
insb
out
out
xchg
sub
and
xchg
and
mov
nop
idivb
xor
xor
sub
hlt
or
pop
fistpll
mov
dec
in
pop
and
mov
subl
push
mov
lea
loope
outsb
pushf
stos
mov
mov
icebp
cmp
dec
xchg
add
test
mov
adc
leave
stc
test
lods
les
push
xor
pop
test
or
add
mov
jge
adcl
icebp
mov
ret
enter
dec
std
test
enter
sub
jl
into
dec
popa
data16
leave
or
repnz
push
sti
jae
cld
mov
jbe
inc
inc
push
mov
adc
psubb
daa
imul
mov
sub
mov
fisubrs
lods
adc
or
pop
cli
cmp
add
loope
pushf
add
jp
mull
sbbl
icebp
inc
jge
push
push
add
out
das
dec
add
in
mov
arpl
roll
dec
ljmp
stos
fstps
cld
pop
das
in
test
shr
pop
pop
jns
and
cwtl
stc
sub
fwait
push
xor
push
mov
and
mov
sub
adc
sub
int3
bound
jo
adc
fstps
mov
cmc
in
mov
mov
xchg
push
inc
push
pop
shl
int3
aaa
frndint
xor
sbb
nop
dec
test
xchg
or
pop
jge
jge
push
inc
call
mov
add
or
test
mov
jp
shlb
clc
mov
cmc
jae
mov
sbb
dec
ja
out
pop
std
call
add
push
outsb
adc
jnp
fcoml
dec
cmpsl
xor
les
pop
dec
adc
cmp
mov
scas
sub
pop
push
jo
rcrl
in
aas
mov
inc
or
das
xchg
stc
nop
add
incl
mov
push
adc
push
mov
mov
lods
or
sbb
incl
loop
mov
clc
push
push
in
movb
xchg
ljmp
mov
mov
xchg
adc
test
pop
fdivl
bnd
out
out
cmp
push
dec
xchg
ss
iret
cmp
mov
lcall
jne
sbb
mov
int
sti
mov
decb
adc
jge
mov
lcall
pop
sub
rcr
ret
movsb
sbb
fsubs
and
push
flds
adc
das
push
push
pop
jmp
mov
pop
gs
sbb
inc
int
push
mov
sbb
ficompl
mov
aaa
adc
pop
mov
icebp
or
xchg
aaa
cmp
shlb
fcoml
cmp
and
xchg
mov
xchg
pop
cmc
lods
hlt
sub
int
jg
imul
enter
ljmp
mov
mov
inc
imul
ret
popa
cmp
out
frstor
dec
dec
gs
cmp
imul
stc
add
lds
iret
and
fcoms
in
pop
push
cmc
mov
or
into
loop
mov
insb
cmpsb
lods
hlt
sub
sarb
pop
scas
aad
and
addr16
rcl
dec
jmp
repz
popf
xchg
and
mov
and
mov
jmp
hlt
adc
push
dec
xchg
xor
jns
pinsrw
mov
mov
pop
loopne
fwait
add
xchg
adc
add
mov
mov
mov
push
cld
cmp
arpl
insb
aaa
in
je
or
jmp
mov
bound
jbe
sub
sub
xchg
vfnmsub132ps
aam
and
cli
stos
jae
arpl
cmp
out
adc
xchg
pop
xchg
fld
les
pop
je
fistpl
negl
lret
or
pop
or
lret
push
iret
lds
ret
decl
or
sub
pop
xchg
lds
jae
shrl
daa
cltd
test
fmuls
xor
testl
mov
push
les
rclb
lret
xor
push
jl
out
sub
in
movsb
ja
sbb
xchg
adc
negl
insl
jbe
pop
mov
fcmovb
cmp
inc
daa
sti
mov
cmc
jecxz
shrb
leave
dec
pushf
popf
mov
fcmovnb
mov
call
dec
xor
pop
dec
out
adc
adc
mov
push
fidivrl
jle
divb
cs
xor
jmp
mov
jl
int
adc
mov
and
loop
cmc
lods
adc
or
mov
mov
fdivr
mov
mov
es
fisubrl
mov
add
push
adc
push
std
imul
xchg
fdiv
sbb
addr16
call
add
adc
cwtl
mov
add
cwtl
adc
das
add
jp
popa
pop
daa
mov
call
cli
sub
dec
fstl
scas
sbb
je
pop
clc
movsb
leave
dec
bound
pop
ds
out
into
data16
negb
xchg
xor
addl
xor
jg
lea
mov
cmp
lahf
pop
sbb
push
lret
sbb
lret
pop
sub
punpckhwd
dec
out
mov
mov
addb
push
movsb
inc
mov
push
loop
int3
nop
ss
push
sbb
test
dec
and
sub
xor
test
xchg
repnz
addb
jbe
and
fsub
lods
insb
insl
bound
xor
inc
fnsave
or
test
nop
pop
test
xchg
lcall
mov
sbb
movsl
daa
sbb
pop
orb
or
xorl
stos
scas
mov
adc
jo
stos
ds
sahf
outsl
movsl
pop
sbb
adc
cmpsl
push
sbb
lea
mov
jnp
mov
out
pop
loope
mov
push
xchg
pop
lods
mov
mov
add
dec
clc
adc
es
cmp
jle
fs
adc
mov
mov
popf
loopne
mov
sbb
mov
shll
lcall
jge
sub
aad
push
jb
mov
xor
mov
faddl
mov
sub
sub
fsubrl
sahf
fs
aas
aaa
int
cmp
daa
pusha
pop
icebp
pop
push
sub
mov
cmp
fcomps
lds
lock
mov
test
sub
sahf
stos
hlt
cmp
sub
ds
xor
mov
jne
xchg
push
adc
lret
gs
das
daa
jp
ret
or
sub
sbbl
adc
push
pop
sub
fstps
jl
jb
lea
add
inc
push
mov
repz
or
fstl
sub
lret
psrad
je
jbe
sub
add
inc
sub
sti
mov
mov
add
sub
adc
jb
cmp
cmpsl
pop
nop
bound
sbb
into
in
inc
xlat
or
daa
adc
cltd
insl
call
sbb
out
inc
mov
inc
mov
mov
inc
pop
cs
outsl
and
jns
jg
test
push
insb
add
dec
adc
pop
stos
pop
fld1
rcrb
adc
mov
lcall
hlt
sbb
fldenv
inc
and
inc
fsubs
mov
mov
leave
fcomip
nop
test
aam
add
lods
mov
int3
push
pop
cs
cmp
aaa
loope
push
sub
push
setae
shll
dec
js
imul
je
sbb
jmp
js
std
aad
inc
je
int
js
aaa
fstl
aas
inc
mov
adc
movsb
aad
in
outsb
and
pop
popf
negb
fld
arpl
ret
jns
xor
cld
inc
jg
call
lahf
sub
in
aaa
or
dec
sbb
pop
add
push
mov
xchg
iret
adc
fisttpll
sub
in
and
dec
push
xor
test
lahf
xchg
pop
jecxz
lret
in
adc
push
hlt
fmuls
lods
fmul
mov
and
clc
sbb
mov
and
push
dec
incb
call
xchg
mov
push
and
mov
add
dec
push
call
sbb
sub
add
dec
xchg
fmul
jp
and
ret
rep
movsb
icebp
xchg
mov
out
aam
out
movsl
sub
pusha
mov
cld
lret
scas
pop
mov
pop
sti
out
cmp
ds
lds
je
mov
cmp
sbb
mov
xchg
cmpsb
push
hlt
jo
push
dec
adc
adc
ja
mov
mulb
mov
mov
cmpsl
xchg
add
mov
xlat
mov
mov
pop
and
aaa
insb
shl
pop
repnz
or
aad
fsubl
add
cmp
stc
loop
mov
sbb
add
movb
arpl
loopne
ljmp
push
add
mov
fmuls
and
cwtl
mov
ret
or
cmp
cmp
out
cmp
dec
repnz
pop
lds
xor
aam
push
xor
mov
add
notl
stos
jae
out
outsl
dec
adc
mov
inc
push
mov
inc
sbb
push
insb
jmp
and
in
jbe
mov
cmp
sub
cwtl
mov
daa
inc
les
jmp
icebp
shll
xchg
dec
inc
das
std
and
mov
insb
fs
fdivs
stc
cld
lock
out
xlat
iret
orl
ret
xor
call
sub
fucomp
int
icebp
add
inc
pop
mov
add
jmp
jmp
lods
in
sub
dec
cmp
jmp
push
xor
or
jle
out
lcall
cmp
inc
scas
ret
add
push
mov
aad
or
xchg
xchg
enter
scas
xchg
dec
stos
jns
mov
jns
mov
and
cmp
shl
rcll
je
or
jno
popa
lcall
outsb
fs
pop
cmp
aad
imul
test
repnz
int
mov
sub
xor
and
int3
movsb
mov
xchg
jae
ds
jecxz
lret
adc
jae
or
enter
mov
insl
test
lcall
hlt
sub
andb
aas
push
sbb
mov
xor
scas
scas
jnp
mov
xchg
inc
je
dec
adc
push
int3
add
pop
dec
fdivl
sub
push
call
call
jns
sub
push
enter
xor
sbb
mov
xchg
push
loop
sti
mov
adc
test
push
lret
pop
dec
ljmp
imul
daa
movsl
mov
stc
adc
in
jge
aad
mov
cld
call
and
pop
lods
cmp
pop
lods
jb
inc
mov
xor
ret
lahf
icebp
xchg
jbe
inc
popf
sbb
out
cmp
mov
insl
aas
inc
adc
popa
cmp
mov
xor
xchg
add
clc
or
jns
out
jecxz
mov
xor
sbb
cmp
aas
mov
sbb
jecxz
pop
arpl
or
dec
xor
inc
cli
jns
or
test
add
in
ret
push
sahf
sub
mov
xchg
out
push
lret
sbb
data16
nop
sub
mov
ret
push
push
int3
aam
into
repnz
pop
push
mov
inc
dec
shll
push
push
cmc
adc
shlb
movsb
inc
inc
rol
scas
movdqa
push
aam
test
aaa
pop
lcall
jl
mov
stos
inc
jb
jecxz
push
mov
ficoms
filds
or
test
js
push
loopne
adc
push
clc
mov
jns
loop
sbb
and
sbb
mov
ja
and
fmul
sahf
add
fimull
mov
pop
loopne
lret
loopne
insb
jg
mov
xchg
jge
lret
dec
repz
aas
lcall
repnz
lcall
lock
shrl
lahf
pop
mov
xchg
jle
notb
lods
jp
outsl
lods
lret
sbb
popf
bswap
mov
fsubs
push
or
or
pop
pop
stos
jno
test
mul
mov
sbb
push
das
pop
push
or
clc
or
stc
dec
push
hlt
inc
and
ljmp
fisttpl
popf
movsl
dec
cli
mov
mov
adc
ret
sub
adc
adc
adc
dec
std
jns
arpl
and
int3
mov
arpl
fiadds
xor
cmp
cmp
lea
xor
das
push
sti
ds
xchg
stos
call
int
xchg
adc
pop
cmp
add
jnp
xchg
fucomp
cmp
imul
dec
mov
xchg
jle
test
mov
mov
inc
into
rcl
or
lret
jle
outsl
aam
jns
xor
paddq
ret
mov
dec
cmp
mov
sbb
cmp
loope
pop
push
adc
call
shll
stos
pop
mov
push
sub
inc
mov
and
sbb
cmc
mov
push
cmp
rcrl
stc
sub
imul
pop
jecxz
out
mov
or
sub
rcl
std
dec
subl
jp
push
add
pop
xchg
xor
rorl
sub
mov
imul
mov
aas
xor
push
sub
scas
jns
sub
push
sbb
mov
in
xor
xchg
push
ret
add
pusha
repz
jae
jb
cmpsl
adc
sbb
pusha
cmc
cmp
or
ds
out
inc
mov
enter
mov
in
cmp
or
fadds
andl
mov
icebp
adc
les
leave
fwait
popf
mov
inc
int
cmp
sbb
mov
pusha
fcmovu
add
cld
xor
adc
into
dec
jnp
loop
jae
arpl
pop
cmp
and
je
ljmp
cwtl
sbb
pop
jle
hlt
arpl
sub
faddl
xchg
in
jle
mov
arpl
ljmp
jl
mov
js
leave
in
pop
jo
mov
daa
push
jmp
mov
mov
out
insb
and
ss
lret
loopne
movsl
ret
xchg
mov
dec
cmp
jg
aam
jecxz
jno
ss
out
inc
gs
movsl
push
in
sub
mov
cltd
and
lahf
cmp
popa
scas
sub
mov
pusha
stc
es
push
push
loope
call
inc
adc
jmp
lods
imull
dec
jo
in
mov
cmp
xchg
dec
hlt
add
push
std
pop
outsl
pusha
je
xchg
mov
cltd
pop
push
fbstp
ret
imul
cmc
push
xor
insl
dec
cmc
addb
in
add
movsl
icebp
cwtl
stos
sbb
jecxz
cltd
xchg
or
or
pop
je
test
sub
sub
push
scas
popa
in
out
cld
mov
mov
loope
jg
mov
xor
inc
lds
aam
ss
or
and
xchg
cwtl
into
jp
jnp
cli
rcrl
inc
stc
das
icebp
inc
jb
pop
mov
cwtl
mulb
dec
pushf
int3
or
push
xchg
cltd
fistpl
fisubl
data16
sahf
mov
imul
and
cmp
or
test
div
mov
cwtl
lea
mov
test
sbb
and
mov
xor
add
adc
nop
movsb
or
xchg
sub
out
cltd
lret
andl
mov
outsb
mov
add
jecxz
out
stc
pop
lock
push
gs
cmpsl
arpl
push
push
test
mov
in
xor
leave
clc
ficomps
pop
out
mov
cltd
sbb
dec
mov
cwtl
aam
leave
int3
xor
mov
xchg
mov
mov
idivl
mov
stos
movsb
dec
or
push
pop
hlt
add
lret
mov
xor
mov
push
repnz
push
imul
and
stos
pop
gs
xchg
xchg
cld
push
arpl
mov
stos
fwait
ds
mov
cmpsl
ljmp
mov
adc
jbe
lea
ret
add
fwait
jmp
ficoml
insl
lea
andl
in
pushf
imul
mov
add
push
push
sub
pop
cltd
imul
cmp
scas
mov
mov
add
jnp
ljmp
cmp
arpl
out
roll
jg
pop
push
cltd
mov
jecxz
aam
add
mov
loope
adc
add
xor
insb
push
imul
lret
fsubl
mov
dec
xchg
sbb
mov
jbe
dec
dec
dec
shlb
scas
inc
cmpsb
jbe
dec
and
adc
hlt
cmpsl
sub
xchg
in
sbb
mov
je
lods
stc
addr16
adc
push
push
add
pop
jo
hlt
cmpsl
int
dec
lods
pop
das
dec
xor
clc
mov
lods
cmpb
cltd
pop
xor
cmpsb
cwtl
imul
and
pop
addl
pop
mov
out
int3
imul
cmc
aas
adc
gs
pop
or
xor
mov
ljmp
iret
pop
popa
sub
ret
jb
mov
mul
shr
push
cli
xchg
xchg
test
jo
ss
in
ss
xchg
imul
mov
inc
push
mov
fs
pushf
stos
push
pop
sbb
or
xchg
imul
jmp
push
orl
sbb
mov
ja
and
pop
pop
lret
xchg
mov
cmpsl
ds
lahf
popa
inc
push
loopne
xchg
aad
cmp
mov
dec
sbb
lods
mov
push
fisttpl
sub
loope
sbb
and
push
daa
or
mov
cmp
xor
cmp
pop
shl
mov
js,pt
jb
cli
jnp
fwait
or
wbinvd
std
push
ljmp
mov
mov
or
adc
iret
xor
out
inc
mov
pop
inc
inc
enter
and
inc
push
rorb
enter
mov
mov
fnsave
dec
test
jmp
popa
movsb
stos
mov
xor
xor
xchg
lods
xor
xor
xor
sbb
pop
data16
int3
test
iret
add
es
cmpsl
lea
push
dec
xchg
mov
jge
sbb
push
cmp
xor
sbb
xor
jno
out
iret
imul
stos
cmp
shlb
cmpsb
pop
incl
aam
lock
cld
lret
adc
add
add
mov
adc
mov
push
cmp
xor
into
adc
pop
mov
xchg
and
nop
xchg
cmp
jne
adc
insb
pop
bound
test
xor
push
push
aaa
ljmp
data16
clc
shr
notb
adc
push
jp
pop
icebp
push
pop
dec
or
adc
mov
xchg
cmp
clc
inc
xchg
jecxz
adc
ret
in
mov
mov
pop
sti
mov
aaa
add
testl
jno
subl
add
cmpsb
or
std
sub
decl
xchg
and
dec
test
sub
lahf
enter
xchg
dec
cmp
cli
add
mov
add
and
mov
jmp
xchg
mov
and
mov
mov
movsl
xchg
jns
adc
fdiv
sti
loopne
and
jmp
mov
adc
rorb
jns
sub
cmpsb
jae
jae
jge
hlt
bound
jne
sbb
push
insb
out
cld
xchg
jbe
xchg
push
sarb
jo
loope
lcall
or
icebp
dec
sti
cltd
xor
add
cltd
and
xor
sub
jbe
cmp
sbb
daa
mov
cli
ja
xchg
jnp
pop
adc
nop
mov
loope
sub
mov
lea
stc
adc
lea
jnp
add
lods
mov
std
and
pop
daa
mov
inc
cli
push
inc
cmp
sbb
dec
and
xchg
data16
enter
imul
fs
aam
dec
xor
fadds
movsb
sbb
push
test
push
daa
out
mov
dec
xchg
or
pusha
call
lret
imul
mov
cltd
das
mov
iret
xchg
mov
sbb
cs
je
in
sbb
inc
fsubrl
add
sbb
sbb
cmpsb
xchg
outsl
pusha
mov
push
jb
into
fldl
dec
loopne
jo
pop
push
push
mov
push
aaa
dec
mov
gs
jg
cwtl
jecxz
shlb
dec
or
or
jnp
test
xor
scas
push
push
jb
push
std
test
in
inc
out
mov
or
jb
inc
dec
sub
loopne
gs
cmp
dec
cmpsb
push
fdivl
xlat
push
dec
outsb
inc
jg
sub
insb
push
dec
push
push
loop
insl
jo
icebp
mov
mov
sbb
in
fsubl
ficomps
shrb
orb
aas
add
repnz
add
push
fistl
adc
into
stos
addr16
xchg
push
sub
xchg
jns
mov
push
inc
xlat
cmp
stos
lahf
icebp
dec
int3
aas
xor
stos
lret
jmp
xor
and
xchg
mov
pushf
int
adc
push
jno
ljmp
leave
pop
adc
mov
out
dec
dec
dec
or
andl
pop
xor
add
rcl
sub
jbe
lcall
arpl
and
dec
adc
icebp
in
mov
mov
xorb
stc
and
push
call
fmull
fldcw
pop
rcll
into
mov
jne
mov
add
mov
int3
mov
or
mov
pop
out
subb
shll
insl
fisubrl
inc
pop
xlat
or
stos
inc
jg
and
and
xchg
pop
aaa
aaa
pop
push
icebp
mov
popf
pop
rorb
outsl
sbb
pop
movsl
sub
movsl
or
stc
std
addr16
ss
lock
loope
cmpsl
ljmp
pop
out
stos
lahf
cld
fs
aaa
incl
mov
rolb
lret
and
mov
inc
xor
push
xchg
mov
mov
in
loop
shlb
xor
inc
pop
lcall
inc
mov
jne
dec
repz
xchg
stos
xchg
jbe
scas
jmp
fmull
fidivrs
data16
cmp
adc
lahf
iret
lods
js
mov
jb
mov
pop
jmp
les
dec
jnp
orl
push
outsl
int3
popf
push
fstpl
sub
cmp
mov
nop
jne
jmp
outsl
xlat
mov
ds
inc
lretw
popa
inc
mov
xor
addb
mov
sub
pop
jnp
lea
subl
leave
xor
mov
cmpsl
pop
or
call
adc
inc
cmp
pop
pusha
fistpl
lods
sub
bound
mov
aad
in
popf
lret
repnz
jnp
sub
mov
mov
sub
mov
out
addr16
sbb
pop
cmpsl
sbbl
je
imul
jo
mov
mov
or
or
xchg
sahf
add
or
inc
aas
add
in
push
fidivrl
lahf
insl
pop
jge
mov
push
aam
jo
cld
pop
push
push
push
movsl
clc
outsb
js
inc
cmp
add
test
push
sbb
xor
ss
cwtl
push
ss
jns
in
add
mov
jno
in
out
jmp
xlat
adc
ja
movhps
add
adc
lds
ss
popa
lea
test
dec
lock
fcomp
or
inc
pop
rcll
mov
add
xlat
mov
pop
faddl
mov
cli
push
jle
pop
out
jp
adc
es
arpl
mov
push
pop
arpl
dec
cmc
dec
scas
sbb
sbb
mov
insl
cmp
leave
push
cld
repz
test
xchg
adc
ds
subb
push
adc
shl
fisubrs
dec
cs
push
sub
pop
jbe
aas
inc
push
imul
hlt
jb
adc
mov
inc
cltd
outsl
test
movsb
xchg
sub
cmp
cld
imul
push
mov
sbb
jg
hlt
popl
fdivs
fdiv
jl
repnz
xchg
arpl
push
sbb
cmc
jg
lods
pop
jb
jmp
repz
pop
push
aas
faddl
or
mov
fs
inc
lcall
pop
fiaddl
add
std
call
loopne
fdiv
adc
pop
lods
shr
int
clc
in
jle
imul
lret
dec
lods
sub
push
pushf
mov
xchg
leave
jmp
dec
and
leave
jnp
outsb
sbb
stc
repnz
or
sub
test
inc
sub
sub
pop
xchg
xor
test
sahf
jg
xchg
inc
inc
or
xchg
xchg
pop
je
or
imul
dec
push
into
aas
jne
fs
sub
push
or
or
ds
hlt
xor
sub
mov
jmp
call
int3
mov
fsubr
sub
mov
cmp
add
mov
enter
out
jnp
popf
scas
add
or
dec
pop
push
repnz
out
rcr
gs
xor
mov
cmp
mov
repz
xchg
test
jg
mov
sub
jns
inc
mov
jbe
xor
cli
jbe
pusha
xchg
sbb
jnp
fdivl
lods
ror
pop
and
inc
lods
mov
out
int
sbb
xor
push
fiaddl
lods
rcll
rcrl
daa
sbb
cmp
sub
or
lahf
push
fcomi
sbb
push
jne
and
pushf
mov
les
cmp
mov
push
and
jns
rcl
sub
lea
adc
out
jge
cli
scas
jbe,pt
adc
jg
sahf
sbb
xor
lea
cmc
fstpl
je
into
repnz
cmp
push
cmc
xchg
xchg
mov
inc
adc
loop
rcr
iret
ss
stc
lret
out
inc
pop
fcmovnbe
cltd
js
mov
pushf
push
sub
xchg
push
adc
ret
mov
and
inc
test
rcrb
pushf
xchg
fistps
sub
cld
fldcw
pushf
sbb
dec
dec
mov
pop
pushf
pop
lcall
mov
fnsave
fildl
mov
sbb
cmc
test
xchg
jecxz
mov
xchg
ret
mov
dec
fpatan
mov
sbb
sbb
adc
repnz
pop
adc
and
cmpb
cmp
sbb
lods
scas
and
jge
rcl
xchg
or
es
cmp
es
xor
lret
dec
cmc
sarb
addr16
pop
mov
dec
and
push
adc
mov
imul
add
cmp
iret
cli
mov
cmp
iret
push
das
adc
xchg
inc
scas
shrl
insl
je
fisttpll
mov
adc
lret
movsb
pop
add
fldl
in
pop
psllq
mov
jo
dec
pop
ficoms
shrb
inc
or
inc
hlt
pushf
pop
jecxz
orb
xor
inc
cld
std
push
xor
jg
fcom
les
add
jns
popa
inc
push
adc
xchg
mov
push
adc
dec
out
scas
int
out
imul
dec
sahf
adc
outsl
push
aas
xorb
stc
sbb
aad
dec
hlt
les
or
cmp
arpl
xchg
stos
mov
xor
shll
pop
adc
fldenv
push
nop
adc
xchg
cmp
repz
adc
sbb
dec
mov
sbb
xor
jae
enter
in
lods
inc
fnstcw
dec
xor
fld
jge
repnz
xor
dec
lret
movsl
and
push
inc
mov
loope
xlat
dec
popf
mov
mulb
jp
movsb
out
add
arpl
xchg
mov
inc
fwait
adcb
adc
fbstp
sbb
xchg
mov
js
push
int
pop
lods
xchg
daa
leave
mov
mov
sbb
adc
xchg
cli
adc
xor
inc
imul
dec
shll
jg
shr
fistl
add
sub
stos
iret
push
fnstsw
mov
sbb
push
mov
sub
push
jg
fidivrs
outsb
or
jae
fnstsw
push
jmp
mov
int3
jmp
mov
jge
mov
outsb
inc
scas
invd
in
idivl
mov
xor
shlb
loopne
push
sarl
mulb
addr16
add
in
and
inc
lahf
stc
push
mov
mov
and
cmp
mov
mov
jmp
leave
lret
inc
push
fstps
lea
inc
mov
mov
shlb
sti
mov
insb
and
and
cmc
push
insb
push
imul
mov
jp
push
pop
mov
push
xchg
gs
jae
ss
push
out
jmp
cmp
xchg
pop
pop
cmp
cmp
insl
neg
andb
int
scas
repz
cmp
dec
lcall
or
jecxz
subl
add
dec
xor
mov
mov
cmp
pop
push
rcll
jae
push
adc
sbb
das
lock
sbb
cmc
testb
ljmp
xchg
imul
xchg
mov
or
sub
push
ret
sub
lahf
dec
jg
dec
and
dec
enter
add
pop
hlt
cmp
push
mov
insb
inc
loope
sub
lahf
jp
into
fucomip
shlb
dec
pop
xchg
cld
stc
jp
lods
sub
repz
adc
into
jecxz
push
add
jb
jl
hlt
cld
js
shrl
xchg
jg
mov
jp
xorb
xchg
pop
fsts
sub
xor
cld
sti
dec
push
in
mov
and
inc
xor
shll
pop
in
insb
and
fsubrp
fildl
imul
adc
inc
sbb
sub
mov
lock
lahf
test
jle
mov
mov
insb
mov
int3
mov
icebp
adc
ds
call
mov
in
pop
or
xorb
xchg
mov
dec
push
xchg
xor
popa
lcall
mov
test
xor
rclb
sbb
rclb
iret
or
xor
cmp
jge
test
aaa
shlb
inc
dec
sub
movsl
test
or
push
loope
push
std
dec
lock
lret
mov
pop
xor
repz
push
ss
test
push
pop
lret
ds
jnp
lods
ljmp
and
ror
aad
outsb
push
ret
out
ja
pop
mov
imull
fsubl
xor
inc
mov
into
loopne
mov
repz
sub
cmpsl
repnz
sti
in
xorb
jae
sahf
push
mov
ss
cwtl
jmp
jb
test
adc
ss
out
jge
mov
jecxz
fstps
or
fbstp
xor
pushf
cli
aam
in
int
xchg
mov
lahf
mov
sub
mov
add
mov
lods
or
or
pop
ret
sbb
cli
mov
mov
leave
fidivs
fld
shlb
xchg
mov
jbe
aas
outsb
and
or
jbe
getsec
in
fsubl
cmp
cmpb
mov
les
jl
push
mov
clc
pop
jl
stos
mov
xchg
addr16
aas
xchg
mov
and
mov
and
sbb
add
adc
jg
add
jmp
inc
faddl
dec
roll
sub
gs
pop
in
add
inc
inc
cmpsl
repz
and
lahf
jmp
jge
xor
stos
shll
les
pusha
sub
test
cmpsl
or
loop
movb
imulb
adc
and
loopne
pusha
cltd
adc
test
inc
scas
jnp
jb
mov
scas
mov
cmp
outsl
pop
push
fldcw
rclb
arpl
add
popf
or
and
test
cltd
xchg
mov
test
popf
adcl
pop
cwtl
fsubl
fimuls
xchg
inc
inc
stos
fucomp
incl
leave
je
and
xchg
jbe
lahf
mov
xchg
or
jge
popa
iret
pop
push
addr16
std
cmp
inc
gs
mov
and
shl
sbb
xlat
imul
push
push
mov
mov
daa
sbb
or
push
sbb
mov
sbb
ja
push
icebp
and
cmc
or
testb
inc
adc
pusha
and
stos
test
lcall
movd
inc
icebp
mov
into
subb
fmull
jle
adc
outsl
outsl
mov
mov
mov
jle
jnp
dec
loop
popa
push
jo
pop
jns
adc
mov
mov
test
pop
mov
sub
cmp
jp
lock
jbe
pop
push
dec
jno
pop
fnstcw
dec
and
aas
adc
out
adc
dec
inc
jb
lock
scas
test
test
xchg
inc
dec
mov
xchg
cmp
outsb
in
mov
pop
jnp
pop
bnd
lods
mov
fdivs
pushf
push
movsl
testl
fcomi
cmc
inc
or
gs
xor
iret
and
in
loope
and
lods
inc
sahf
pop
pop
mov
xor
lcall
imul
mov
xlat
mov
ja
out
gs
sub
in
dec
lock
xor
cmp
iret
add
mov
or
add
jecxz
scas
dec
pop
loop
sti
add
in
inc
or
cld
xor
clc
adc
les
es
jp
cmpl
push
mov
notb
inc
std
ja
fisubrs
xchg
inc
imul
jns
pop
lock
mov
adc
push
pop
jle
ja
sbb
mov
add
sub
mov
and
inc
outsl
jmp
push
enter
xchg
rcrl
lods
sub
jg
push
pop
loop
xchg
mov
fwait
cmp
jb
imull
cld
ss
cmc
test
fs
fsubs
add
pop
loop
les
pusha
xor
mov
insb
push
rcr
push
js
and
cli
pop
dec
xchg
fwait
push
fucomip
cld
nop
js
stc
sbb
mov
mov
xor
gs
and
ds
nop
push
push
lret
push
jp
ret
notl
inc
jb
pop
pop
pop
sarb
fwait
leave
xchg
jbe
pop
test
fidivl
add
dec
xor
xor
movl
outsl
or
aas
push
repnz
jmp
mov
mov
mov
cmp
and
sub
in
adc
pop
pusha
fildll
shrl
aas
lods
sub
mov
clc
into
ds
lret
pop
fildl
jo
jno
mov
sbb
mov
data16
daa
andb
push
sahf
mov
xor
inc
pushf
fisttpl
imul
stc
pop
fmulp
jns
into
cmc
adc
jnp
or
add
in
push
mov
enter
push
mov
inc
sbb
sub
jge
aaa
call
fs
mov
mov
jecxz
pop
in
push
sub
push
jg
or
add
in
xchg
cmp
pop
ljmp
gs
and
mov
or
sbb
inc
dec
rcll
scas
push
or
scas
mov
and
mov
or
stc
sub
ud1
ret
xchg
xlat
cmp
cmp
mov
outsb
jp
leave
or
xor
push
mov
hlt
lock
adc
adc
mov
mov
lea
cmp
popa
mov
pop
std
insb
and
dec
sahf
pop
popf
pop
icebp
jl
or
jno
fldcw
sub
ds
scas
aad
push
sub
adcl
mov
lret
mov
jb,pt
leave
adc
ret
and
daa
int
fisttps
push
int
adc
fnstsw
mov
sbb
repz
cs
jg
mov
data16
mov
dec
orl
dec
cmpsb
in
es
in
addl
test
jns
pushf
scas
sbbb
mov
cmpb
pop
std
aam
xchg
jmp
fwait
icebp
xchg
bound
dec
idiv
cli
cmc
push
mov
dec
mov
pop
inc
dec
mov
push
sbb
pop
push
aaa
insb
gs
xor
stc
cmp
xchg
sbb
repnz
inc
scas
pop
scas
mov
aas
loopne
imul
pop
lods
fisubrs
pushf
xor
jno
xor
mov
clc
jmp
fadds
mov
pop
mov
jp
add
out
or
scas
sbb
add
enter
sub
xchg
mov
aas
mov
ss
sbb
xchg
fs
push
sbb
mov
push
popf
mov
out
sub
test
sbb
popa
lods
addb
cmc
jne
push
and
out
sbb
pop
cmp
cmpsl
mov
jns
ss
mov
pop
test
repz
adcb
divb
or
icebp
std
push
cmc
xor
jb
jae
cltd
out
and
mov
add
into
repnz
push
mov
or
lea
mov
jae
les
mov
and
sbb
icebp
mov
fstl
mov
adc
xchg
jb
std
cmc
push
push
or
test
in
dec
loop
popa
pushf
bound
cli
rorl
outsl
lock
sarl
ja
shll
iret
adc
xor
push
les
mov
repnz
and
testl
add
sub
mov
sub
add
dec
int
and
icebp
orl
std
inc
mov
cltd
dec
mov
sub
pop
test
popa
out
inc
jns
dec
arpl
enter
mov
mov
jnp
in
jno
imul
mov
cli
lods
jl
lds
jno
sbb
aaa
mov
scas
mov
repz
out
clc
add
inc
lcall
jp
fsubrs
mov
mov
sbb
add
cmpsb
push
pop
or
xchg
jbe
pushf
sahf
dec
rcrb
movsb
ret
jbe
adc
and
imul
bound
cmc
and
outsb
and
shrb
test
imul
je
fists
jle
sbb
adc
in
jecxz
fisttps
aaa
or
clc
sbb
data16
xchg
and
xchg
push
loope
mov
jecxz
sahf
sbbb
rorb
out
jecxz
addb
loopne
in
mov
femms
scas
sub
sarl
xor
sbb
inc
or
pop
cmpsb
push
lods
movsl
inc
fisubl
or
in
push
xor
pop
jmp
scas
sbb
fadd
add
arpl
mov
add
fucomi
mov
and
test
mov
inc
xchg
dec
call
jmp
pop
xor
es
daa
cmpsb
imul
stos
pop
xchg
das
jne
sub
jae
pushf
in
cs
cmp
or
push
sti
cmc
dec
lcall
jl
xchg
xor
aam
test
add
fimuls
jg
jp
push
or
cmpl
xor
inc
loop
faddp
sbb
add
daa
pop
mov
or
push
mov
push
or
cpuid
lret
or
sbbb
inc
or
sar
sahf
les
rorl
mov
sbb
push
sub
repz
ret
test
sbb
xlat
add
cmc
xchg
or
and
and
aas
divl
mov
scas
or
data16
loop
mov
xor
stos
xor
je
push
xor
enter
scas
cmpsl
inc
xchg
sbb
test
pusha
cs
add
xorb
fbld
enter
lock
je
shl
push
cmp
sbb
ja,pt
mov
push
testl
pop
mov
test
xchg
xchg
pop
test
ja
lods
in
and
jns
mov
or
sub
test
aad
aas
out
push
mov
push
inc
inc
sahf
mov
pop
push
sahf
add
dec
xchg
ss
frstor
test
xor
aas
push
jle
push
jmp
nop
xchg
mov
insl
mov
and
or
dec
lret
lock
xor
xchg
ror
test
fimull
add
mov
jo
adc
notl
xlat
and
ljmp
add
clc
pop
aaa
and
xor
mov
inc
and
lahf
mov
add
mov
out
ja
jmp
arpl
hlt
or
and
push
jne
cmp
cs
or
bound
mov
mov
gs
lods
loopne
and
xchg
sbb
xlat
out
shlb
xor
in
push
inc
sahf
loope
sub
movsl
and
push
dec
cmp
test
add
enter
insb
fimull
xor
and
outsl
fadd
js
pop
mov
adc
mov
cmp
enter
out
jmp
inc
mov
iret
jo
stos
loop
dec
sti
sbb
cmp
fistl
popf
mov
sub
lea
sub
jae
fnstenv
cmp
jmp
lret
das
div
outsb
mov
loope
int3
mov
jl
outsl
adc
int
push
cld
lods
stos
sbb
mov
cmp
jl
ficoml
mov
enter
xor
mov
pusha
out
sti
xlat
jb
jae
adc
cs
leave
fsubl
dec
sub
adc
pop
out
inc
lods
xlat
sub
mov
stos
jno
push
je
aad
push
rcr
sub
testb
push
xchg
loop
sub
insl
aaa
jle
sub
loop
mov
imul
out
sahf
addr16
jmp
test
jle
sub
movsl
sbb
popa
icebp
ror
imul
and
jo
push
sub
sahf
lea
xlat
xor
sahf
pop
mov
push
pop
xchg
push
xor
loop
popa
pop
inc
add
cmpsl
push
mov
std
dec
aam
cmc
mov
or
pop
stc
pop
cmc
je
mov
sub
orl
lock
mov
fstl
pusha
jg
das
dec
jge
pushf
inc
mov
xchg
ss
dec
jge
lcall
icebp
jb
xor
sub
mov
stc
cli
jl
leave
mov
les
sub
mov
cltd
add
ret
push
shrb
ds
inc
cmp
mov
push
rcrb
cmp
dec
lods
cmp
pop
mov
xor
mov
adc
sub
xor
lea
push
stos
and
adc
push
call
lcall
addr16
xor
dec
mov
sub
sahf
aad
ret
push
jge
leave
xlat
sbb
adc
loop
add
dec
clc
inc
inc
push
test
push
out
jle
fsubrs
mov
stos
add
outsb
inc
mov
repz
cld
push
outsl
push
jo
xchg
call
iret
imul
aam
push
iret
jp
sub
sbb
xchg
push
rclb
adcl
outsl
and
jecxz
add
or
and
ja
cmp
or
mov
ret
sti
mov
idiv
ret
inc
adc
jl
fists
inc
iret
js
mov
rclb
loop
fwait
inc
rol
adc
lods
fstps
sbb
imul
cs
jmp
mov
and
cli
push
push
mov
lock
subl
lahf
scas
sbb
mov
mov
imul
xchg
in
int3
sbb
bound
mov
sbb
jmp
aas
adc
mov
xchg
addr16
arpl
dec
xor
test
adc
lds
scas
nop
test
mov
adc
add
icebp
pop
sarl
insb
popa
pop
dec
or
stc
pop
jg
inc
iret
ljmp
std
test
repnz
and
pop
out
adc
lods
jg
call
loop
mov
push
subb
adc
mov
in
daa
pop
xchg
xchg
je
add
push
push
pop
xor
inc
or
jmp
test
jecxz
push
shlb
jle
aas
jp
cwtl
adc
and
push
iret
cmc
mov
daa
mov
adc
icebp
sub
adc
aad
into
shrl
fld
add
loopne
mov
push
add
inc
add
inc
inc
dec
sti
mov
mov
cmp
test
hlt
xor
imul
cmp
ret
dec
inc
mov
rcrl
scas
pushf
sbb
outsb
pop
cmpsb
ljmp
fidivrs
pcmpgtd
sbb
adc
inc
fmuls
outsl
push
jns
ds
adc
add
push
mov
test
adc
loop
out
push
rcll
es
stc
icebp
adc
in
mov
mov
lods
xchg
rcll
sbb
sub
jecxz
mov
lret
xchg
call
pop
shld
mov
pushf
push
and
idivl
pop
adcl
out
mov
movsb
cmpsl
adc
push
jae
jl
dec
add
mov
fdivl
addr16
sahf
lea
jp
pop
aam
gs
jecxz
push
adc
xchg
mov
sub
push
test
loop
add
ret
mov
xor
push
and
cmp
mov
add
cmp
fsubrs
aaa
mov
jne
lea
mov
lahf
and
mov
ja
xor
test
lret
icebp
repnz
stos
adc
int3
jbe
xor
shrb
mov
inc
outsl
push
mov
test
sub
mov
cmc
not
test
xor
stc
jne
cwtl
sti
scas
xchg
or
dec
shll
dec
orb
inc
cmpsl
or
cltd
jnp
not
cltd
xchg
and
mov
rcrl
pop
jno
scas
or
out
or
push
or
lret
xor
dec
stos
xor
aas
das
cmp
inc
aas
cmp
ss
jl
sub
push
movb
je
mov
adc
sbbb
addl
cld
iret
outsb
call
inc
aam
popa
pop
loopne
repnz
es
pop
sub
shr
out
xchg
lret
aam
shlb
fcmovu
popa
mov
xor
insb
je
lods
aad
sbb
mov
mov
iret
mov
inc
add
or
add
insl
scas
adc
push
test
into
fdiv
fs
mov
pop
loop
insl
pop
ja
jo
cli
push
stc
les
aaa
loopne
mov
repz
lret
or
scas
inc
mov
push
inc
pop
dec
fildl
pop
mov
fcoms
mov
mov
adc
pop
lds
les
bound
nop
test
xor
in
and
push
inc
inc
sub
mov
xchg
dec
lock
loop
jns
push
mov
mov
sbb
mov
sbb
add
inc
clc
inc
repz
jae
gs
int3
xor
les
sub
sti
cmp
sub
subb
mov
xchg
xchg
mov
punpckhdq
fstps
fwait
add
imul
mov
adc
imul
pop
push
andb
xchg
jne
cli
ljmp
int3
and
adc
dec
xor
xor
pop
fiadds
inc
pop
add
xlat
add
aaa
jecxz
or
out
jg
stc
xor
sub
scas
pusha
rcr
repnz
adc
ret
xchg
scas
dec
ret
mov
lods
add
xchg
inc
scas
jb
les
jne
adc
dec
push
jecxz
push
movsl
jo
test
pop
cld
dec
nop
aad
divb
mov
mov
and
in
and
scas
jb
jecxz
inc
repnz
sub
mov
inc
iret
lret
jmp
or
hlt
js
leave
mov
mov
sub
jne
dec
push
push
xchg
lods
pop
mov
xchg
pop
dec
sub
dec
xor
pop
mov
lods
test
out
sbb
and
fldt
mov
xchg
clc
ret
sub
arpl
mov
cld
mov
dec
mov
cmp
xchg
pop
jl
clc
stc
pushl
xchg
jae
add
and
sahf
lret
and
loope
inc
daa
lods
fwait
mov
jne
call
sub
push
dec
push
push
je
shlb
insb
stos
outsl
xchg
lret
dec
xor
mov
fisttpll
out
and
lds
add
cld
arpl
hlt
mov
mov
push
js
adc
mov
push
lahf
sbb
pop
dec
pop
xor
or
and
jmp
jle
scas
in
imul
shlb
mov
hlt
cmp
mov
mov
sub
inc
insl
inc
and
in
mov
ret
mov
hlt
push
mov
xchg
jae
mov
xchg
push
sub
aam
mov
lea
jmp
and
andl
xchg
mov
xchg
pop
xor
and
mov
das
adc
cld
cmp
scas
jmp
xor
mov
xchg
adc
hlt
fwait
pop
gs
push
or
stos
jp
add
jns
enter
fdivrl
pshufw
rcl
xchg
mov
ror
mov
dec
in
das
and
shlb
enter
arpl
lods
test
loop
js
dec
loopne
aas
cmc
push
or
mov
pop
push
out
pop
mov
int
dec
enter
mov
insl
into
rclb
das
xchg
movsl
popf
fwait
pop
test
popf
out
mov
mov
lea
ret
pop
pusha
lea
push
mov
pop
inc
cmp
cmpl
adc
loop
dec
fimuls
adc
mov
clc
decl
notl
cltd
xor
adc
cmc
shlb
out
cmp
mov
jno
out
jns
xor
fwait
ret
dec
jle
jp
adc
jge
in
aam
out
inc
mov
cld
or
add
jge
ficomps
add
dec
inc
sbb
loope
jns
adc
jnp
call
push
loope
add
pop
jle
add
stos
mov
xor
inc
sbb
jo
dec
push
testb
mov
aam
and
fisttps
mov
or
add
lret
mov
aaa
mov
sub
sub
add
jno
mov
mov
int
pop
cmp
ljmp
mov
scas
ss
out
mov
pop
mov
jae
rcll
dec
mov
out
jb
das
out
insl
leave
mov
fcmovu
inc
inc
xlat
icebp
aam
push
leave
adc
pop
sub
mov
cmpsb
loop
mov
mov
in
cli
cmp
add
leave
orl
les
mov
outsb
sub
jl
or
mov
stos
bound
jl
subl
xchg
loopew
adc
sub
mov
push
and
jge
cltd
movsb
cmp
icebp
xchg
inc
cmc
imul
pop
imull
pop
sbb
mov
xchg
lcall
or
imul
rcll
loope
les
aas
lods
xor
jg
loope
xchg
dec
inc
aad
add
dec
mov
jbe
cmp
add
outsb
mov
sub
xor
sub
jge
and
sti
xchg
orb
sub
jnp
jno
jo
aad
mov
leave
push
sub
xchg
xchg
in
movsl
dec
and
cmp
fcomps
loope
sub
movntq
mov
jae
xor
test
inc
std
push
pop
jbe
xor
adc
adc
mov
inc
popa
push
loope
mov
inc
cwtl
data16
pop
jp
mov
lret
pop
int
inc
aam
test
cmp
rcll
mov
test
inc
outsb
mov
cmp
sahf
and
imul
mov
mov
in
dec
js,pt
popf
cmp
sbb
mov
sub
dec
inc
addb
fs
hlt
inc
adc
and
icebp
push
fadd
aas
or
aas
push
iret
jno
lahf
push
in
push
or
and
and
pusha
insl
aad
pop
lea
cli
push
imul
scas
xchg
inc
push
fnstcw
mov
sbb
xor
push
lahf
leave
ror
sub
in
push
push
mull
inc
push
or
movsb
sub
mov
test
jbe
sub
cmpsb
pop
mov
xor
jmp
add
nop
ret
pop
mov
int
and
loop
xor
in
inc
nop
in
cs
and
push
or
insl
xchg
push
imul
xchg
and
ja
sub
stos
jmp
push
mov
or
fcomi
mov
lock
pop
adc
pop
dec
adc
pop
mov
and
stos
sbb
xor
outsl
mov
fdiv
ret
ljmp
lock
inc
sub
lret
jg
push
mov
cs
test
ss
mov
xor
repz
dec
cs
es
orl
aas
jb
cs
jnp
mov
fbld
sbb
mov
out
cld
push
cmpsl
cmp
insl
xchg
push
sub
pop
sub
stos
mov
pop
jno
mov
inc
in
hlt
mov
pop
push
aaa
test
out
inc
jge
xchg
inc
sbb
cmp
add
cmc
in
or
scas
mov
cs
popa
mov
cwtl
inc
shl
sbb
mov
jae
add
outsb
push
mov
insb
xlat
sub
jbe
mov
inc
movsl
decb
cmp
pop
push
sbb
sbb
add
fldcw
shlb
std
dec
mov
mov
call
pop
jno
lds
jl
xchg
mov
rol
push
xor
push
clc
test
cmp
inc
cli
push
mov
mov
mov
push
mov
das
test
popa
lcall
loop
and
mov
push
or
cmp
scas
jb
into
aad
call
add
lret
sub
push
iret
aam
pop
and
hlt
cmp
jo
shl
aas
sub
pop
jg
push
stos
sbb
cmpsl
lods
pop
pop
imul
outsb
ljmp
dec
xchg
lea
ds
add
nop
mov
sarb
mov
pop
pop
mov
insl
pop
mov
mov
incb
mov
es
ror
xchg
mov
sbb
jae
xchg
dec
js
jmp
inc
sbb
sbb
adc
imul
sbb
arpl
dec
popf
push
aam
pop
adc
cs
sub
clc
std
popa
pop
sbb
dec
test
mov
fcmove
sbb
cmp
scas
sub
loop
xor
mov
push
or
enter
inc
push
add
jno
std
adc
sub
out
rcrl
mov
mov
loope
xchg
add
mov
daa
sbb
and
mov
pop
mov
loope
push
and
push
push
cmovne
mov
jl
scas
mov
scas
cmovo
mov
jno
cmp
movsb
movsl
ret
cmp
jns
mov
popl
inc
aam
mov
inc
or
xchg
je
xor
movsb
rcll
aas
jmp
push
pop
mov
stc
int
sti
cld
mov
jmp
xchg
iret
repz
jmp
and
or
xchg
inc
bound
mov
jnp
jg
ret
xchg
aaa
push
mov
jno
lods
and
jae
test
xor
cmp
into
jmp
clc
pop
xchg
daa
bound
jmp
ficoms
shl
sbb
inc
adc
pop
mov
jg
lods
sahf
lret
adc
loopne
call
add
lea
xchg
xorb
xchg
into
popf
cmp
in
sahf
adc
andb
pop
add
js
adc
inc
fadds
mov
jmp
fisttpll
in
sub
xor
ret
dec
mov
ja,pn
jmp
xor
imulb
dec
in
stos
das
jmp
fsubs
jo
cmp
mov
cmp
dec
cmpsb
xchg
sub
pop
mov
in
adc
lcall
test
mov
push
aam
pop
jnp
scas
or
out
std
fcoml
push
pop
jecxz
pop
pop
jnp
pushf
push
mov
or
inc
jno
mov
add
dec
mov
scas
jb
insb
mov
mov
fdiv
add
in
mov
or
xchg
adc
es
xchg
sub
jmp
cmpsb
push
xchg
mov
jmp
enter
mov
out
cmp
scas
adc
aaa
outsb
ljmp
clc
pop
dec
out
leave
and
adc
stos
push
pop
pop
mov
mov
inc
jp
xor
lea
mov
sbb
jmp
sub
divb
test
mov
daa
mov
cmp
push
rorb
daa
jg
jno
ficoms
xchg
pop
addr16
nop
xor
sbb
and
mov
pop
fisubrs
jp
out
xchg
sub
mov
push
mov
mov
jb
cmp
sub
jae
adc
pop
dec
cmp
iret
jmp
lcall
in
sbb
fwait
stos
sub
repnz
mov
icebp
add
ljmp
in
dec
rorb
sbb
bound
cmpsl
inc
enter
lods
movsb
pop
pop
sbb
or
ss
mov
push
cmp
in
sbb
pusha
xchg
int3
mov
aam
adc
scas
cld
mov
xor
cmp
cld
jp
out
ss
inc
scas
pusha
les
or
inc
rclb
xor
cld
xlat
xor
shll
ret
fimuls
push
aam
mov
outsl
aas
adc
aad
push
sbb
jae
sbb
cmovg
cmp
jnp
packssdw
push
fisubrs
gs
sbbl
sti
sub
push
sub
sbb
mov
push
jne
cmp
fucom
cmp
sub
sahf
inc
pushf
loope
inc
cmp
add
mov
push
xchg
filds
sub
sub
mov
xchg
mov
in
mov
fdivl
je
mov
loope
aaa
test
or
ret
push
xchg
sbb
mov
xchg
jl
test
jmp
cmp
push
mov
adc
sub
ret
cmpsl
pop
xor
mov
aad
xchg
jle
stos
lea
jb
iret
loope
notb
aas
mov
mov
jae
lret
mov
mov
mov
sub
stos
lahf
repnz
push
cwtl
int
adc
push
mov
pop
lods
jne
mov
iret
mov
inc
fldl
out
sbb
xchg
lock
cmp
aad
test
stc
cmc
mov
stos
pusha
outsb
fs
js
cmpl
push
or
xchg
and
lcall
les
ret
sti
scas
xchg
jecxz
adc
xlat
cwtl
push
lret
mov
xchg
ret
lods
popa
fisubrl
divb
jecxz
mov
les
mov
push
mov
fs
daa
mov
scas
sub
inc
and
in
xor
andb
cmpb
addr16
in
or
push
jne
aas
js
sub
fidivrs
movsl
aas
jecxz
iret
lahf
adc
bound
popa
push
inc
pop
mov
xchg
ss
push
mov
retw
int
lret
pop
fildl
pextrw
mov
aaa
inc
add
ficoml
cmp
pop
mov
pop
mov
repz
xor
aas
mov
push
add
dec
sbb
sbb
insl
or
lcall
mov
imul
aaa
dec
insl
cmp
movsb
pusha
insb
cmpsb
out
mov
xchg
lods
sbb
xor
imul
lahf
fs
jle
cmc
add
sub
ja
in
mov
push
adc
jecxz
cmp
adc
cmpsl
inc
pop
rcrl
dec
jp
out
mov
lret
daa
sub
mov
aam
fdivrl
and
ficompl
cmc
lahf
fidivrl
jmp
in
popf
rorb
sbb
movsb
cmpsl
dec
cmp
jne
and
nop
daa
sbb
adc
dec
jae
lret
aad
jl
adc
bound
jp
cmpsl
push
or
test
insb
mov
test
mov
pop
imul
cmpsl
lea
pushf
sarl
testl
inc
je
subl
xor
and
dec
or
testb
cmp
jb
rclb
mov
dec
ja
add
fidivs
ja
fbstp
adc
push
mov
cmp
jb
pop
in
mov
pop
cmpl
test
pop
adc
sbbl
sbb
sub
rcll
jmp
and
sahf
cmpsl
dec
in
nop
fistpll
xchg
pop
cld
daa
sub
pop
dec
or
jbe
jae
push
fld
fwait
stc
mov
fpatan
xor
jnp
jns
movsb
test
push
iret
dec
cli
dec
scas
mov
adc
icebp
enter
mov
addl
mov
xchg
dec
push
mov
add
add
xor
repz
fistps
aad
cmp
mov
or
popf
add
repz
dec
scas
or
mov
stos
dec
inc
ret
and
scas
jge
shlb
cli
setae
div
xor
add
in
pop
je
xor
aam
push
jle
cli
mov
out
xor
imul
pop
into
stos
stos
dec
mov
lcall
nop
and
cmp
hlt
sub
pop
mov
xchg
mov
hlt
scas
loope
add
adc
xor
lock
lods
sub
cmp
pusha
add
cmp
sbb
es
cmp
inc
outsl
push
mov
cmp
lcall
mov
sbb
add
aam
cmp
movsl
leave
mov
scas
or
xor
das
nop
jle
xor
and
cld
dec
or
pop
in
mov
test
stos
daa
popa
stc
sti
mov
jg
mov
lods
inc
and
popa
cmpsl
imulb
mov
mov
jb
mov
nop
mov
inc
xlat
stos
clc
cmp
ss
out
jno
xchg
sub
sub
mov
mov
ret
shrl
outsl
rorl
adc
mov
cmpsl
inc
stc
int3
mov
ljmp
and
outsl
xchg
test
mov
inc
pop
adc
and
add
xchg
push
aas
sub
sbb
sbb
ret
dec
out
add
mov
das
lods
in
nop
mov
aaa
fwait
andl
bound
fstpl
adc
test
push
aaa
sarb
cmp
fs
sbb
mov
pop
ficoms
xchg
jge
and
ror
mov
cwtl
and
xchg
clc
fnstsw
enter
test
test
push
jo
push
cmp
cli
sub
jnp
insl
pop
and
sahf
xor
inc
shl
sar
xor
xchg
repz
fistl
cmpsl
daa
rcll
xlat
xor
xchg
jg
sbb
ficomps
fstpl
movb
repz
lcall
std
mov
adc
push
cmp
int
mov
iret
push
push
mov
roll
mov
cltd
push
ljmp
xchg
xorb
sub
std
arpl
cmp
inc
xchg
inc
push
cli
ret
test
lds
jmp
ljmp
mov
sarl
add
dec
fadds
cmpsl
cli
xchg
xchg
mov
dec
rclb
mov
pop
mov
je
mov
push
loopne
stc
inc
mov
repnz
xchg
mov
jg
add
ja
cmp
push
jae
adc
fmuls
and
mov
mov
ret
jae
mov
in
sbb
pop
mov
or
cmc
jns
pop
icebp
test
insl
fcomps
pop
js
jl
out
clc
mov
jp
stc
jne
push
movsb
nop
sub
pusha
xchg
mov
and
int
push
or
das
lods
jno
ficoml
jl
adc
lods
mov
popa
and
insb
adc
cli
imul
pop
add
xor
hlt
sub
push
adc
fwait
push
subb
jg
push
notb
jb
in
xchg
int3
adc
test
sub
movsl
in
outsb
mov
adc
mov
adc
cltd
xchg
popf
or
stos
or
mov
lea
rcrl
or
fcmovne
in
adc
add
fisubrl
cltd
arpl
mov
sbb
out
add
fstps
addr16
dec
add
mov
or
sar
xor
sub
pop
pop
push
stos
imulb
inc
jb
or
test
leave
cmp
fadd
stos
jbe
iret
add
push
shll
sub
bound
push
pop
adc
cmp
mov
jb
lret
push
shl
xchg
mov
push
sbb
lret
pop
pushf
nop
imul
mov
fstps
lret
and
ret
jo
and
roll
xchg
jno
dec
mov
pushf
bound
call
jecxz
push
inc
movsl
cmp
cltd
leave
cmp
mov
cwtl
gs
aad
cwtl
repz
push
push
fcomps
pusha
pop
repz
mov
ret
mov
pop
scas
push
loope
mov
push
add
mov
and
in
repnz
in
xor
and
inc
lea
bound
stos
add
inc
add
and
add
std
add
mov
push
mov
test
adc
cmpl
sti
pop
xor
cmp
xor
jae
cmp
addb
fldenv
ret
pop
dec
xor
push
pop
adc
mov
sbbl
popf
jp
jae
sub
ljmp
inc
vmwrite
scas
dec
ret
add
mov
and
aaa
data16
add
pusha
sbb
loopne
jbe
out
dec
xor
jl
or
push
inc
lcall
out
pusha
int3
mull
dec
push
negb
cmpsl
rcl
loope
sarb
inc
roll
and
mov
cli
sub
sti
int3
cwtl
aam
data16
in
sbb
mov
idivb
jo
jne
ret
or
pushf
lahf
push
sbb
inc
inc
notl
mov
jo
das
mov
add
incb
ljmp
pusha
scas
mov
pusha
and
and
inc
dec
xchg
lret
ljmp
lea
cmp
mov
shl
js
scas
jns
fsub
and
or
sub
sub
add
mov
movsl
mov
or
dec
mov
push
push
and
lods
push
outsb
cmp
sub
mov
shl
xlat
repz
pop
lret
cs
jmp
lds
xchg
jg
in
mov
mov
andl
je
add
xchg
arpl
rorb
int3
lcall
mov
add
add
ret
lock
daa
push
xchg
sub
call
pop
lcall
js
dec
jl
gs
jge
fidivl
cmp
sti
fwait
add
dec
sahf
mov
ret
ret
aas
outsb
adc
jae
mov
jecxz
jl
push
and
in
jp
push
ret
xor
jl
mov
shlb
lahf
hlt
jge
in
outsl
and
loop
cwtl
dec
and
push
test
add
jb
push
lcall
jmp
mov
aaa
cmpsb
lods
dec
xchg
and
mov
int3
cmp
aad
push
push
mov
jg
mov
mov
xor
add
lahf
mov
or
outsb
js
test
addr16
xacquire
loop
rcl
lret
pop
pop
icebp
sti
movb
mov
js
sbb
xchg
inc
mov
lea
outsb
in
rorl
shrl
ljmp
ret
insb
xor
ljmp
adc
mov
xchg
fidivrl
push
sbb
adc
outsl
dec
cs
scas
mov
or
fisubl
xor
inc
pop
popa
or
xchg
ret
mov
or
loop
push
cmp
mov
or
mov
test
pop
mov
stos
xor
adc
gs
fs
imul
out
and
dec
dec
inc
dec
jle
lods
rcll
in
mov
mov
imul
movl
jno
ljmp
adc
or
out
inc
xchg
jne
ret
mov
in
ljmp
inc
insl
add
xchg
aas
sub
sub
adc
rclb
push
lods
sti
cmp
out
lea
jbe
fdivr
nop
ljmp
inc
jmp
mov
call
adcl
sub
lods
jns
sub
cmpb
fwait
rcrb
xor
push
orb
fs
lea
mov
jmp
sub
fldenv
aas
sbbb
sbb
hlt
rcll
adc
das
outsl
movsl
xor
lock
dec
mov
sbb
push
ss
jns
sbb
out
loopne
xchg
test
in
xor
fsubs
dec
push
rcl
dec
scas
divb
mov
jno
icebp
dec
out
jbe
icebp
addr16
mov
ret
mov
mov
cld
in
bound
pop
outsb
dec
jbe
mov
jbe
fisubrl
lods
mull
pusha
sti
in
push
add
and
les
cli
push
fstps
push
mov
mov
loop
inc
mov
pop
jg
fneni(8087
pop
das
jecxz
test
xchg
mov
mov
jo
stc
xor
jg
mov
inc
rcll
ficomps
mov
gs
pop
or
pop
insb
sub
sti
pop
imul
sbbb
sub
or
mov
iret
pop
fildl
dec
ss
leave
out
fistps
mov
out
jp
cmp
mov
shll
cld
sbb
mov
dec
jl
or
lret
dec
mov
decl
pop
push
arpl
popf
jg
add
cmpsb
leave
psraw
xchg
data16
lods
xchg
mov
movsl
fs
addb
lods
sbb
xchg
jns
rolb
mov
ja
adc
xor
cs
sbb
mov
and
jl
sarl
xor
mov
push
sub
ljmp
add
mov
enter
cs
sub
jnp
and
xchg
test
stos
imul
xchg
pop
xchg
leave
mov
pop
lea
fmull
pop
push
ffreep
and
adc
in
push
xchg
xchg
sub
adc
test
popf
test
lods
pop
imul
repnz
mov
in
enter
inc
mov
push
cmp
insl
inc
test
pop
hlt
andl
iret
add
add
aas
xor
mov
or
popf
dec
sbb
pop
jmp
ret
ret
lcall
mov
inc
cmp
je
sete
push
ret
xor
fcmovne
leave
add
mov
or
mov
arpl
inc
movsb
iret
xchg
push
mov
xchg
and
fwait
xchg
cmp
mov
and
mov
sbb
out
mov
hlt
xchg
out
ja
pop
inc
ret
fldenv
into
inc
test
add
jecxz
jnp
xchg
insl
or
push
mov
cld
mov
and
mov
xchg
lahf
jp
push
cmpsb
mov
daa
mov
in
fisttps
out
cmpsl
mov
or
inc
je
dec
int3
sub
imul
and
dec
push
jp
adc
or
not
into
inc
loope
xor
popa
bound
cmp
cmp
xchg
or
pop
mov
jge
stc
add
das
int
fs
arpl
pop
pop
div
pop
push
inc
in
scas
std
aaa
add
and
ja
mov
orl
aas
mov
sbb
lods
stc
pop
push
and
pop
xor
mov
stc
out
ljmp
repz
clc
jecxz
int3
dec
mov
pop
dec
pop
sbb
shlb
push
aas
inc
xor
arpl
xchg
inc
xor
dec
aaa
fsubs
out
test
mov
xchg
mov
push
sbb
out
aam
fwait
add
fiadds
pop
sbb
test
mov
hlt
pop
ljmp
dec
divb
dec
cltd
lods
mov
mov
jnp
jecxz
push
out
dec
jns
lods
out
aam
pop
into
shlb
cmpl
xchg
sub
add
fstp
les
mov
cmp
sti
jb
clc
mov
inc
mul
dec
dec
adc
aas
cmpsl
out
push
jnp
aaa
or
xchg
push
mov
scas
sbb
jmp
pop
repz
addr16
jge
inc
popa
and
out
addr16
lock
adc
popf
or
cmp
mov
test
pop
pop
pushl
pop
test
scas
dec
adc
cmp
outsb
mov
dec
dec
push
xchg
fsubr
ljmp
insl
cmpsl
pop
movsl
test
loop
pop
pop
call
out
dec
je
leave
pop
add
cmpl
cmp
leave
mov
jp
dec
cld
mov
adcb
icebp
and
fiadds
les
pop
xor
mov
xor
add
or
icebp
jl
out
xchg
out
adc
cmp
or
inc
daa
xchg
add
aaa
sub
push
and
mov
mov
add
push
cmp
sub
sbbb
xchg
lret
std
cmp
out
shrl
adc
pop
fistpl
push
pop
addr16
sub
or
xorl
add
jecxz
movsl
mov
insl
sahf
mov
icebp
pop
fildll
push
xor
outsl
adc
call
jbe
adc
and
mov
repz
hlt
ljmp
add
fimuls
das
sarb
dec
push
les
or
add
sub
adcb
xor
dec
sbb
adc
mov
insl
or
cltd
or
call
add
in
pop
adc
mov
jo
xor
mov
add
pushf
mov
jp
scas
jge
xchg
cmp
das
ds
les
dec
pushf
out
mov
sbb
dec
pop
push
push
stc
xchg
xchg
jl
negb
sarb
sbb
xlat
aad
testb
mov
xorl
std
dec
daa
sub
mov
into
js
sbb
mov
mov
pushf
hlt
jns
xor
fcoms
xor
mov
pop
xchg
mov
sub
xchg
mov
mov
std
or
and
int
imul
jae
aaa
mov
sysexit
sub
sbb
mov
or
sbb
mov
mov
fildll
insl
xlat
and
cmpsl
mov
xchg
or
mov
xchg
int3
push
mov
fucomi
and
stc
pop
out
add
shlb
add
in
aad
add
sub
js
mov
test
fwait
ja
mov
fwait
mov
mov
inc
mov
push
and
mov
sbb
sub
hlt
rorl
aam
lods
dec
add
push
clc
sbb
cmp
push
cmp
ja
mov
fisttpll
ja
ja
dec
mov
dec
in
add
and
inc
daa
mov
jmp
lods
xor
out
push
std
icebp
inc
test
mov
das
jnp
into
push
fisubl
mov
or
std
mov
mov
movsl
sbb
xor
xchg
cs
adc
fcoml
mov
mov
push
add
bnd
adc
or
outsl
jle
jbe
add
jg
clc
jl
lods
stos
jnp
aad
mov
fsubr
xlat
movsl
jg
or
pop
dec
stc
cmpsb
orb
sub
xor
loopne
addl
rolb
xor
popa
mov
or
inc
fwait
gs
fwait
scas
xchg
add
pop
sub
mov
jp
scas
testb
stos
push
sbb
mov
gs
in
gs
rcr
mov
cmp
aad
ficoml
call
jno
sub
jns
dec
add
or
jbe
xor
jmp
mov
adc
pop
inc
insb
cmp
xchg
cmpsl
sub
mov
stos
insl
pop
mov
dec
nop
xchg
sub
push
xor
cwtl
lret
jo
push
sub
lea
jmp
push
mov
ljmp
std
test
sub
mov
inc
jecxz
xchg
sbb
mov
jb
pop
sbb
imul
stos
pop
mov
push
xor
nop
cs
popa
lcall
mov
or
mov
test
cmpsl
and
ljmp
mov
ret
push
jecxz
popw
out
incb
pop
mov
ret
int3
xchg
sbb
dec
imul
sti
xor
adc
sbb
cmp
inc
push
add
into
movsl
in
ficomps
mov
lods
mov
push
mov
in
inc
sbb
aaa
adc
int3
fldcw
je
mov
popf
fbld
mov
fwait
movsl
icebp
mov
lods
aad
in
in
pop
xor
fnstcw
cmp
movsb
jnp
arpl
add
fimuls
adc
cs
add
stos
scas
aad
mov
leave
mov
cs
cmpsb
mov
sub
repz
inc
ret
std
or
stc
test
push
rcpps
mov
push
lret
dec
xchg
inc
aaa
iret
jno
cwtl
iret
xchg
scas
rolb
or
dec
dec
push
mov
jne
mov
cmpsb
bound
mov
push
scas
and
iret
xchg
fld1
into
movsb
lret
std
ss
ror
xor
sbb
pusha
sub
sti
call
push
out
subl
mov
sub
lds
xor
or
and
add
jnp
jb
push
sahf
mov
xchg
pushf
add
adc
lea
pop
add
mov
sti
rep
add
sub
mov
or
stc
jmp
rclb
mov
or
pop
pop
rclb
aam
loopne
xor
and
lea
imul
aaa
data16
out
faddl
mov
in
in
imul
addl
fcmovbe
jns
xor
je
inc
mov
mov
cltd
push
insb
iret
sub
das
addr16
mov
jl
mov
orb
mov
cmc
xor
outsl
push
push
cmp
cmpsb
unpcklps
pop
in
xchg
sbb
adc
aas
xchg
push
repnz
fucomp
inc
inc
cltd
loop
sahf
popa
cwtl
out
cmp
mov
xchg
push
clc
icebp
and
leave
ss
movsl
subb
ret
mov
xchg
xorl
pushl
loopne
stos
lcall
mov
dec
jg
outsl
test
inc
insb
push
movd
sbb
sti
int
fdivl
cwtl
fidivs
or
into
testl
mov
icebp
iret
lahf
inc
arpl
outsb
lcall
rclb
cmc
iret
idivl
or
add
mov
inc
loope
lds
inc
iret
xchg
inc
rclb
pop
pop
mov
lock
mov
jbe
adc
xor
notb
les
jno
xchg
pushf
stos
sahf
dec
fsubrs
mov
dec
cmp
insl
sbb
cltd
add
cli
sbb
inc
lds
and
out
ds
cmp
aas
pop
push
cmc
xor
and
mov
xchg
mov
mov
jecxz
sub
lock
xchg
and
xchg
pop
dec
pop
pusha
mov
ret
fdivl
sub
inc
into
lods
jmp
cs
mov
inc
std
xor
or
movsb
adc
sar
test
shlb
push
add
call
cli
cld
and
cld
push
lock
sub
xchg
pusha
mov
js
pop
inc
scas
add
jl
pop
ja
push
ret
mov
mov
sub
scas
stos
cltd
mov
int3
rclb
ret
stc
icebp
test
mov
xlat
cmpb
and
push
in
mov
pop
push
and
in
add
push
lea
mov
add
cli
dec
mov
pusha
in
cmpsl
mov
adc
pop
sti
sbb
pop
lahf
iret
sarb
cmp
jns
sbb
pop
jb
mov
aad
or
sub
rcrb
aad
out
sub
iret
ficompl
aam
jle
add
push
pop
jae
jo
mov
sti
lret
mov
int3
xchg
pop
stc
inc
pushf
jns
mov
mov
leave
into
sub
imul
add
addr16
mov
push
ret
or
or
pop
push
pusha
iret
icebp
in
out
or
daa
mov
and
stos
cli
ficoms
jno
cld
scas
xchg
icebp
pushf
add
movsb
push
sbb
xor
nop
xor
jge
mov
gs
xchg
cmc
gs
inc
fisubrl
call
cmp
lods
addl
push
orb
pop
fisubl
aas
mov
icebp
sbb
sbb
sub
mov
out
cmp
pop
rcr
push
pop
or
jns
xorl
jge
fisttpll
jge
daa
mov
jo
adc
adc
pop
push
sub
mov
fdiv
gs
inc
and
loopne
test
insb
jnp
mov
pop
lret
and
add
jns
inc
imul
imul
mov
or
xchg
fldcw
test
pop
std
insl
pop
mov
in
push
dec
scas
mov
push
enter
sub
add
imulb
insl
cmp
icebp
test
add
fisubl
stos
inc
leave
xor
mov
cmp
pusha
push
mov
jnp
loopne
mov
mov
push
cs
imull
inc
test
push
inc
push
pop
inc
or
add
ja
imulb
add
jp
loop,pt
xchg
pop
push
je
les
and
mov
lea
mov
add
mov
push
sbb
lret
arpl
lea
sub
cltd
inc
das
sbb
jg
std
cmc
xchg
mov
scas
push
add
insb
lods
fistps
mov
in
in
and
clc
enter
add
inc
inc
cmp
test
xor
sub
jne
cmp
ja
les
sub
jnp
stos
jns
popf
cmc
pop
sbb
mov
push
xlat
adc
test
dec
icebp
inc
xchg
rcll
xor
mov
movb
add
ds
scas
mov
daa
sbb
push
push
cld
jge
jo
mov
push
test
int
or
das
or
push
mov
push
mov
pushf
sbb
jnp
dec
mov
inc
lcall
leave
cmpsl
loope
or
rolb
lret
or
cmp
or
and
xchg
pop
iret
out
test
fisubrl
push
inc
mov
pop
pop
jbe
out
out
and
cmp
outsl
or
or
not
jle
jo
cmpsl
mov
in
adc
divl
and
xchg
mov
xor
push
xor
add
ja
fdivrs
push
mov
scas
lcall
adc
or
fstpt
push
inc
ja
pop
or
cltd
shl
hlt
lcall
pushf
xor
cmp
inc
inc
roll
enter
push
clc
jnp
xlat
shl
cmp
in
adc
add
fisubl
jne
sub
xor
gs
xlat
xchg
inc
dec
lea
push
fildl
push
jbe
mov
rclb
adcb
adc
mov
int3
jb
sub
or
dec
int3
scas
cld
xorb
int3
xor
inc
loope
dec
es
pop
sbb
movsb
add
pushf
xor
movsl
mov
lods
iret
or
mov
jmp
mov
sub
int3
shld
out
in
push
mov
arpl
cmp
arpl
punpckhwd
das
jno
ffreep
add
mov
scas
cmp
xlat
dec
test
pop
inc
or
cli
sbb
divb
ret
hlt
mov
rclb
mov
lret
insb
stos
mov
aad
pop
arpl
jne
stos
out
mov
cmp
ret
xor
in
jmp
in
mov
mov
ret
insl
mov
ljmp
lcall
and
mov
mov
push
lods
clc
testb
sbb
cmp
push
bound
mov
insb
dec
lret
adc
xchg
add
std
jae
or
xchg
icebp
call
dec
je
lds
in
hlt
popf
lret
popa
mov
das
add
test
push
xlat
push
jnp
jmp
in
pop
xor
test
scas
jne
pop
movsb
push
dec
sub
sub
mov
imul
out
cmc
sbb
sbb
inc
jae
add
jecxz
stos
leave
shrl
cmpsb
sub
les
fimuls
sub
xchg
mov
mov
jnp
int
int3
outsl
in
jb
negb
bound
inc
pusha
jge
sbb
jae
jnp
aad
jns
inc
push
mov
or
lds
push
add
int3
mov
fadds
stc
fcmovnu
xor
mov
cld
cli
pop
fcmovbe
pop
push
inc
dec
mov
mov
fs
out
xlat
arpl
jo
les
push
and
test
sti
and
add
cld
or
push
imul
out
lods
js
add
pusha
push
div
mov
lods
cmc
add
repnz
test
mov
popf
xchg
cwtl
mov
test
jno
jne
subl
xchg
or
and
movsl
sub
mov
sar
jp
bnd
scas
js
add
mov
xchg
xlat
mov
push
ret
cmp
pop
xchg
leave
cmp
cwtl
cmp
xor
pop
outsl
adcb
cmpb
push
sbb
sbb
mov
mov
movsb
rorl
mov
xchg
out
loop
xchg
mov
ja
icebp
loop
mov
jl
ret
incb
cmpsl
test
jp
in
imul
push
fs
xor
cld
test
sbb
arpl
add
xor
push
outsb
xchg
filds
xor
dec
out
mov
popf
sbb
movsl
sub
negb
adc
pop
jg
repz
inc
push
push
or
icebp
addr16
shlb
ja
dec
xor
cwtl
call
xor
jns
sub
xchg
cltd
sbb
sbb
or
mov
xchg
test
adc
cmc
mov
divb
xchg
cmp
aam
pop
loop
int
mov
je
adc
pop
or
xor
arpl
mov
loop
xor
push
test
rcrl
or
mov
sarb
inc
and
mov
in
fsub
test
xchg
mov
scas
pop
cld
add
or
adc
sub
sbb
gs
add
fildl
movsl
dec
dec
mov
or
stos
adc
push
sti
mov
in
hlt
stc
jmp
dec
push
stos
adc
jnp
loopne
sub
sub
jo
mov
cld
fidivs
imul
lea
fdivrs
mov
xor
cmp
push
filds
jb
xor
outsl
mov
sbb
dec
cmp
iret
xor
aaa
cltd
mov
add
or
loop
and
or
jnp
pop
insl
les
mov
sbb
dec
sbb
fwait
pusha
inc
cmp
in
lds
daa
cltd
in
sbb
sbb
bound
add
mov
cmp
inc
popf
cmp
mov
or
dec
ljmp
test
idivl
jbe
jle
jmp
jg
and
fcomps
push
add
push
jecxz
pop
aaa
ret
sub
jl
inc
xchg
mov
jns
add
aad
pop
or
mov
sti
or
cld
push
filds
into
dec
jmp
aad
add
mov
and
dec
lahf
dec
push
fiadds
push
sub
xor
sbbb
pushf
mov
lods
mov
xchg
push
dec
pop
mov
mov
inc
rcrb
lods
pusha
xor
mov
cwtl
into
or
outsl
dec
ret
ja
dec
sub
mov
mov
cmp
fnstenv
pop
js
ret
jmp
mov
sub
stos
rol
insb
stos
stos
lods
in
out
leave
adc
cwtl
dec
call
sub
stos
into
push
popf
divb
test
lods
pop
sarl
jns
cmc
and
das
inc
scas
adc
shr
ljmp
add
loopne
dec
push
mov
shll
and
cmovb
aas
lock
ljmp
scas
inc
fidivs
hlt
cmp
enter
addb
les
movsb
lcall
fbld
popa
inc
xchg
gs
mov
sbb
adc
and
cwtl
dec
test
jne
lcall
ficompl
xlat
mov
add
inc
xchg
cmc
aad
sti
inc
mov
mov
into
mov
dec
adcb
gs
lret
or
and
stos
push
sub
jle
xor
pop
lret
sbb
and
test
out
js
lcall
xlat
dec
int3
mov
jae
or
mov
mov
mov
mov
aam
sarl
and
xchg
les
mov
push
sbb
pop
fidivrs
jo
ljmp
ds
add
cmp
jg
lods
lret
cld
mov
push
xchg
mov
ret
dec
into
and
out
cmpsl
inc
add
xchg
dec
cmp
or
jge
test
loope
inc
mov
popa
imul
icebp
inc
dec
mov
rclb
pop
mov
jg
jle
insb
dec
adc
ret
dec
iret
cmp
movsl
inc
jle
push
push
cmp
cmp
addr16
or
mov
push
add
jg
loop
in
out
mov
nop
sbb
jne
lahf
mov
push
xchg
mov
mov
push
sbb
outsb
cld
and
mov
ja
scas
movsl
aas
cmc
ret
sarb
popa
out
dec
xlat
stc
arpl
cmc
jge
cmp
js
out
cs
cwtl
or
and
lods
ret
and
sbb
add
xchg
fstl
jae
lea
sbb
loop
aad
mov
andl
adc
sbb
mov
adc
adc
push
mov
mov
scas
aaa
inc
movsl
stos
cwtl
sub
cmc
gs
push
int3
subl
sarb
xor
enter
mov
addl
push
dec
sub
stos
aaa
mov
xchg
ja
mov
add
xchg
imul
add
ret
lock
shll
mov
cmpsl
jns
int
inc
leave
mov
pop
sub
into
mov
pop
mov
mov
adc
stc
push
sbb
cmp
repz
cmp
jg
cmp
sbbb
dec
ret
sar
icebp
ja
or
cs
pop
and
decb
and
or
cmp
outsb
cs
pop
jg
pop
adc
pop
pop
shl
jg
push
dec
mov
mov
mov
jns
mov
in
ss
mov
sbb
push
pop
test
jge
lret
lahf
mov
and
ss
pop
jmp
bnd
xor
adc
ret
xchg
out
lret
jmpw
jmp
addl
ss
aam
fwait
xchg
or
push
cmp
cwtl
fcompl
jmp
mov
lahf
rcrl
repz
dec
jns
int
dec
cmp
mov
push
lock
mov
in
mov
and
or
add
out
test
and
and
aas
std
insl
mov
ficoms
and
ljmp
lds
inc
rorl
xlat
lea
add
insb
movsb
test
ds
ja
mov
push
ret
out
fcoml
fbld
cmpb
in
outsb
push
xchg
lea
lods
xchg
negb
xor
or
mov
mov
dec
fstps
movsb
sbb
mov
add
push
aaa
mov
mov
push
pop
ficoms
push
arpl
ds
roll
sbb
dec
add
outsb
push
push
xor
pop
cmpsb
mov
pop
pop
ljmp
inc
pop
in
xchg
or
arpl
mov
xchg
aam
fiaddl
cs
dec
es
movsl
dec
std
xchg
and
das
inc
xor
xlat
inc
in
dec
xor
mov
in
repnz
cli
jl
mov
and
mov
mov
dec
and
push
mov
sub
sbb
dec
and
mov
aam
inc
add
dec
mov
inc
lret
ret
stc
lret
lds
mov
cmp
add
ret
add
fwait
mov
adc
mov
or
xchg
push
imul
xchg
or
mov
mov
outsl
sub
fcoms
ret
mov
in
or
push
xchg
shl
xor
mov
gs
jbe
pop
jno
mov
cwtl
popf
push
push
fistl
subl
push
sbb
adcb
test
cmova
outsb
or
cmc
jle
jmp
pop
pushf
sbb
xor
mov
in
xchg
push
jbe
pop
insl
call
jg
dec
pop
je
cmp
and
bound
mov
loope
fimuls
gs
and
add
cmovle
popf
jp
cmpsb
mov
scas
ljmp
jb
ljmp
mov
inc
ficoml
mov
in
pop
or
lock
cwtl
sti
xlat
xchg
pop
pop
adc
mov
scas
not
fsqrt
out
push
repz
pushf
fucompp
push
dec
fdiv
inc
loopne
add
mov
inc
in
icebp
mov
in
xlat
ds
movq
and
stos
ffree
mov
mov
outsb
pop
insl
jg
das
pop
pop
mov
lret
jp
mov
aas
xchg
mov
lock
stos
sbb
rolb
insb
mov
fstpl
sbb
gs
scas
add
push
adc
aad
arpl
popf
push
out
cmc
daa
xchg
clc
test
mov
adc
rcl
lods
testl
lret
jge
xor
data16
mov
and
movsl
sahf
xor
lcall
movsl
or
sub
fwait
lea
xchg
fsubr
and
pop
push
lea
sbb
fildl
adc
mov
into
mov
cltd
loope
mov
das
sahf
aad
dec
inc
sub
js
lods
jno
sub
gs
and
insb
mov
mov
mov
aas
jp
xor
xor
inc
mov
icebp
je
push
push
lret
inc
movsl
and
mov
mov
cmp
add
cmpsl
aaa
cltd
lahf
test
ljmp
rcrb
ret
lahf
add
arpl
or
popa
inc
push
xlat
xchg
call
pop
test
mull
ljmp
das
negl
aam
mov
lcall
cmp
ds
test
cmp
jl
add
mov
jbe
xchg
push
mov
dec
cmp
stc
loope
push
aam
cs
scas
jl
stos
push
cld
mov
jmp
jmp
cmpsb
push
leave
jno
dec
je
fbld
cmp
bound
sbb
or
and
jmp
bound
loopne
addr16
jmp
or
test
sbb
xchg
out
icebp
stos
or
mov
cmpsl
jno
ja
mov
xchg
dec
movsb
lret
aam
sti
jmp
push
sub
fnstcw
inc
js
pop
mov
sub
sub
jae
jo
sti
mov
xor
sub
add
push
push
leave
xor
adc
pop
push
inc
insb
dec
xchg
push
adcl
aad
dec
jge
hlt
inc
adc
clc
mov
out
jecxz
mov
sub
xor
int
shll
pop
repnz
imul
aas
icebp
inc
inc
test
aam
sar
imul
inc
cmp
mov
cwtl
mov
in
fwait
ss
inc
fiadds
push
pop
leave
sub
in
rorb
and
sub
xorb
xchg
iret
push
hlt
repnz
jnp
ret
xor
arpl
clc
sbb
ret
jnp
mov
push
cmp
dec
jne
inc
nop
testb
stc
add
sub
rolb
fcompl
lods
loope
rcll
sbb
push
mov
pop
jecxz
adc
jne
daa
xchg
mov
xchg
stos
sub
pop
push
repz
cmp
add
sbb
cltd
xchg
das
sub
test
push
jno
subb
repz
and
adc
push
roll
std
iret
rcll
lock
mov
les
cld
xchg
dec
sbb
bound
push
lock
rcll
add
mov
mov
mov
enter
cmp
cli
push
xor
fscale
scas
aad
pusha
push
cmpsb
mov
dec
cmc
stos
scas
xchg
sub
jl
add
stos
xor
inc
sbb
lcall
outsl
xor
push
pop
cmp
test
mov
je
jge
movsb
or
xor
xor
jnp
adc
fldt
mov
lea
xchg
sarb
repnz
loope
add
fildll
adc
xchg
jge
and
fcomip
pop
pusha
inc
adc
fnstsw
and
xchg
inc
incl
pusha
jnp
cmp
xor
mov
lahf
in
imulb
ret
in
or
lds
in
subb
popf
jle
aad
das
ss
sti
sub
or
push
imul
ds
pusha
push
ret
sub
push
pop
pop
outsb
pop
xchg
mov
sub
in
mov
push
inc
ds
pop
jp
imul
ret
jle
mov
outsb
leave
mov
mov
lret
or
insb
sbb
outsl
pushf
sahf
xchg
adc
jp
out
jne
push
insb
or
jne
rcrb
dec
push
fnstenv
lret
ret
rep
shlb
jbe
and
xchg
jp
loopne
push
and
or
cwtl
rclb
in
adc
stos
movsl
cmp
adc
mov
adc
dec
jbe
iret
mov
int
pop
in
mov
int
mov
xor
sarb
adc
or
outsl
sbb
mov
out
test
ficoms
xlat
mov
mov
dec
lods
push
mov
cmp
adc
jnp
cmp
outsb
sub
ret
add
popf
jl
and
inc
ljmp
enter
mov
push
shll
mov
addr16
dec
jecxz
and
sarb
mov
int3
xchg
or
pop
cmpsb
xlat
xorl
sbb
dec
dec
sarl
push
xchg
aam
jne
sbb
cmp
inc
or
adc
add
ds
xlat
leave
push
mov
mov
test
or
int
xor
cmp
fmuls
fwait
dec
jp
push
adc
insl
dec
popf
push
lock
repnz
js
push
inc
pop
arpl
xchg
mov
lods
out
xchg
lock
test
adc
hlt
bound
and
fdivrl
pushf
fcomps
cmpsl
sub
loop
clc
push
xchg
dec
aam
ss
cmp
stos
inc
xchg
jnp
fildll
xor
mov
mov
sbb
stos
loop
jecxz
xor
gs
pop
xchg
mov
sbb
iret
sbb
aaa
xchg
leave
scas
lock
mov
push
xchg
add
sbb
xor
in
push
or
fistps
inc
fstpl
or
movsb
rorb
sub
fstpl
gs
sbb
dec
mov
add
call
xor
mov
out
sbb
out
test
cmp
pop
mov
ja
mov
mov
shlb
xor
sub
jp
stos
xlat
mov
das
fimull
adc
cmp
mov
push
jo
mov
in
aad
inc
les
add
mov
enter
imul
test
and
jmp
fucomi
jg
mov
mov
ss
inc
loop
imul
ret
and
scas
jle
cs
add
pop
cmp
ss
gs
movb
in
dec
pushf
iret
pop
or
mov
or
inc
cmp
call
dec
pop
std
add
pop
jp
xorb
fstps
sub
mov
cmp
push
loopne
lret
cmp
xor
repz
insb
mov
mov
ret
rcrb
mov
mov
and
lahf
iret
out
loopne
adc
sub
inc
cmp
in
or
rcrb
mov
lret
push
loope
lea
xchg
lods
push
mov
rorl
sub
mov
xor
fadd
mov
push
scas
cmc
push
ds
fists
add
or
ja
sub
push
sahf
cmp
int
mov
pop
inc
jge
mov
xor
push
sbb
pop
test
lea
fmull
fimuls
nop
pushf
push
cmpsb
sbbb
mov
int3
pop
aad
ljmp
lea
xchg
pop
rcrl
test
rorw
mov
jle
sub
arpl
pop
inc
movsb
jo
xor
mov
shll
fnstsw
cmpsb
aaa
pop
pop
adc
push
out
mov
mov
adc
pop
push
mov
cmp
push
lds
dec
dec
mov
mov
mov
add
test
movsl
push
inc
sbb
gs
bound
pushf
loop
xchg
push
jge
or
out
sub
imul
dec
outsb
mov
xchg
call
sbb
push
cmpsl
sbb
sub
scas
dec
mov
pop
test
push
push
fs
stc
mov
cmp
mov
add
fidivrl
xor
sub
mov
insb
sub
repz
dec
pop
cmp
dec
enter
scas
jnp
mov
lret
mov
out
cmc
mov
mov
popf
out
into
ret
lea
inc
sub
mov
mov
aaa
xor
stc
cli
mov
ret
jb
jne
jno
rorl
add
adc
mov
andl
out
movsb
cmp
das
or
mov
subb
jbe
nop
mov
test
clc
cmp
insl
pop
pop
mov
adc
mov
push
cli
mov
insl
aam
push
subb
push
xor
mov
popf
out
jo
es
cmc
or
add
sbb
cltd
cmp
and
inc
xchg
in
rolb
and
call
fildl
repnz
jle
sub
ret
test
inc
inc
cli
mov
rcrl
push
mov
push
mov
or
loope
pop
cmpsb
cmp
cltd
cwtl
mov
ret
adc
jle
add
rcrl
pop
inc
cld
xor
jae
mov
out
push
outsl
mov
fs
rcrl
outsl
sbb
adc
sbb
dec
loop
dec
test
in
clc
ret
adc
jnp
cmp
mov
dec
pop
pop
inc
vpsubd
xchg
or
cmp
jle
jb
aad
push
movsb
call
fucomi
sarb
call
pushf
ds
push
xchg
shll
jnp
sub
inc
inc
test
xchg
sub
and
cmp
adc
sbb
movsb
movsl
ss
iret
and
or
sbb
fcoml
jne
daa
jp
fstps
subb
in
fdivrp
je
xchg
cli
mov
into
imul
jno
xlat
mov
lods
mov
mov
shrl
push
mov
iret
jnp
inc
or
mov
or
scas
fimuls
jmp
aam
clc
xchg
frstpm(287
pop
push
gs
cwtl
jmp
or
aad
popf
mov
push
aaa
mov
scas
iret
cltd
adc
push
mov
lret
faddl
lods
out
in
popa
sarb
mov
jge
cmp
iret
addr16
mov
into
add
lahf
adc
out
cld
sbb
inc
jno
and
fcmovbe
push
lsl
fiaddl
xlat
and
adc
inc
lock
punpckhbw
fsubrl
mov
cltd
push
fistpll
aaa
add
mov
push
push
pop
stos
data16
jnp
adc
mov
pop
mov
cwtl
or
xchg
fs
or
fs
add
adc
jbe
pop
bound
xchg
stc
mov
dec
cmp
paddq
popa
ret
out
pop
ret
cmp
inc
pop
movsb
cmp
lea
mov
jnp
decb
inc
push
je
or
cmp
push
and
das
pusha
fsubrl
pop
xor
and
sti
outsb
push
mov
pop
cmp
test
popf
and
movups
femms
call
inc
enter
and
and
enter
pop
mov
push
jg
add
xchg
push
jb
or
lods
push
shll
push
pop
mov
lea
jbe
mov
sbb
lock
sbb
aad
lock
jno
xor
dec
mov
dec
gs
not
pop
pop
insl
and
mov
mov
mov
test
in
push
test
push
xchg
inc
mov
repz
pop
cmp
outsb
pop
push
aam
arpl
or
scas
mov
inc
repz
push
mov
mov
dec
dec
test
jno
maxps
and
xor
pop
ss
hlt
pop
cld
push
dec
push
ficomps
ljmp
push
xchg
mov
push
and
in
test
cmpsl
pusha
js
push
adc
cmp
in
cmp
jmp
adc
rolb
dec
stos
shll
mov
or
xchg
jbe
je
sahf
pop
scas
sbb
mov
jae
add
mov
roll
leave
test
sbb
icebp
jmp
push
pop
inc
pop
stc
dec
test
jg
gs
addr16
aam
sahf
cltd
xchg
lcall
rorl
cmp
add
adc
cmovbe
popl
aaa
xchg
dec
sub
jo
sub
test
jmp
decb
push
or
xchg
sub
jge
sub
lods
insl
rcrl
aad
or
adc
outsb
push
pop
xchg
xchg
dec
sbb
mov
sub
popa
aaa
adc
xchg
movsb
pop
mov
mov
cmc
movsl
icebp
dec
inc
fmull
cli
insb
outsl
sbb
sbb
das
jmp
stc
mov
or
or
mov
dec
jb
mov
out
pop
cwtl
add
mov
mov
mov
push
stos
test
push
gs
dec
xchg
scas
add
fdivr
ss
movsl
inc
nop
or
and
sub
dec
push
mov
or
outsl
pop
pop
xchg
cltd
nop
push
outsb
insb
sbbl
add
sbb
jmp
addl
fstps
movsl
cwtl
nop
and
test
mov
cmpsb
adc
mov
cmpsl
mov
cmp
sub
loope
xor
add
dec
lds
xchg
pop
mov
enter
outsl
pop
adc
ds
dec
jns
add
xor
aam
pop
lcall
push
shl
push
dec
fstps
aam
add
cmp
sbb
adc
sbb
imul
setp
jo
pop
xchg
call
mov
outsb
mov
aaa
xor
xchg
ljmp
insb
icebp
xchg
divb
inc
lret
add
xchg
jae
addr16
insb
lret
sbbl
shlb
stc
add
jmp
pop
push
sbbb
xor
bound
mov
jl,pt
in
lock
fidivrs
enter
sub
jmp
ja
sti
lret
les
cmpsb
sarb
dec
popa
mov
inc
in
imul
rclb
scas
mov
or
fsts
push
dec
add
xor
dec
roll
jns
call
pop
adc
ds
test
lea
fimull
xchg
aas
mov
jno
test
add
sub
fwait
repnz
es
mov
iret
ss
je
lock
xor
mov
roll
mov
pop
int3
push
sub
sbb
mov
jb
mov
mov
dec
clc
pop
push
push
mov
mov
xchg
mov
and
dec
int
dec
adc
sqrtps
pushf
ret
dec
cmp
push
cs
mov
mov
cmp
js
cmpl
rorl
xor
sub
out
dec
inc
jp
inc
push
fmul
pop
mov
xchg
mov
aad
data16
hlt
idivb
shll
js
push
lahf
push
and
dec
test
pop
pop
movsl
lahf
mov
add
mov
mov
nop
addb
sbb
lds
adc
cwtl
aam
fildl
xlat
sbb
add
lea
push
add
jae
xchg
dec
lods
pop
mov
fucom
jo
pop
inc
dec
movsl
rorb
pop
sub
or
ret
push
mov
and
push
cmc
xchg
int
dec
or
mov
xchg
daa
pop
jnp
mov
dec
cs
xor
mov
lods
mov
cmp
adc
xorb
jge
xchg
nop
pop
aad
xchg
and
mov
in
ret
cmp
and
dec
dec
or
ja
inc
or
cmp
or
sbb
jmp
jb
dec
lds
fwait
push
jecxz
sub
out
icebp
outsl
mov
ret
les
stos
enter
aas
lahf
movsl
push
xchg
pop
jbe
repnz
push
push
cmp
insl
push
loope
dec
cmp
mov
dec
cmp
gs
adc
dec
add
stos
data16
xchg
stc
mov
inc
mov
fwait
cmp
xor
leave
rep
testl
xchg
mov
push
mov
push
rcll
nop
gs
add
pop
or
jo
mov
je
mov
xchg
xlat
lea
cmpsl
mov
sub
mov
repnz
push
push
pushf
in
ljmp
inc
mov
mov
jno
pop
in
shll
lock
inc
jbe
vshufps
and
push
jle
fdivr
std
pusha
out
repnz
mov
cmpsl
push
cli
cld
and
xchg
dec
cmp
inc
mov
scas
xchg
popa
enter
xchg
mov
pop
and
lods
leave
ret
loope
mov
dec
mov
outsb
sti
test
dec
sarb
scas
inc
ficoms
push
loop
out
xchg
loopne
add
xchg
movsb
icebp
xchg
xor
andb
ljmp
push
ss
pop
aad
aad
lret
add
sub
xchg
fistpll
pop
adc
shl
in
movsb
dec
jl
insb
mov
arpl
xor
out
pop
mov
fdivl
std
pushf
lods
xlat
repnz
jl
out
xchg
and
aaa
movsb
notb
and
movsl
enter
dec
repnz
icebp
jmp
mov
stos
ds
xor
nop
ret
dec
xchg
das
outsl
bt
sar
out
mov
fwait
in
mov
int3
xchg
xor
fsubrl
xchg
ss
xchg
mov
or
and
inc
aas
ret
xor
data16
mov
ja
das
push
ss
out
sbb
dec
std
jge
stos
adc
push
bound
sbb
cmp
arpl
mov
and
cmp
imul
mov
insl
mov
mov
cmp
push
fisubl
dec
or
or
inc
test
dec
push
jns
dec
xchg
xchg
add
sub
pop
leave
inc
orl
out
xchg
lods
insb
test
xchg
push
jmp
and
aaa
std
mov
insb
cmp
fidivs
mov
mov
and
dec
sbb
jge
pop
loopne
dec
sbb
or
clc
push
call
test
xlat
fistpl
imul
popa
lcall
scas
add
sub
movsb
dec
jb
inc
out
xchg
jg
push
sahf
movsl
loope
test
add
das
idivl
sbb
out
insl
pop
sub
sbb
push
imul
std
scas
fcompl
mov
rcrb
std
pop
mov
xor
xorl
ja
sub
stc
pop
in
loopne
adc
insl
mov
arpl
ficoms
int3
inc
mov
movsl
pop
mov
inc
ljmp
and
leave
addr16
movsb
das
call
or
enter
sbb
add
fnstenv
nop
call
inc
sbb
dec
or
shl
xchg
lods
adc
pushf
inc
stos
orb
ds
in
mov
inc
mov
es
lods
cmpsl
pusha
out
movsl
testb
pushf
pop
and
xor
popa
lds
or
sub
aam
je
inc
mov
fisubrl
ja
repnz
outsb
and
in
add
stos
mov
mov
mov
xor
icebp
push
addr16
outsl
dec
in
ds
hlt
aad
sti
mov
test
int
gs
outsb
std
arpl
cltd
ja
cmp
dec
cmp
dec
add
fsubr
repnz
adc
sbb
lcall
divl
ds
inc
or
adc
and
and
mov
sbb
ljmp
insb
mov
fwait
mov
clc
mov
push
mov
mov
or
pop
jbe
jo
imul
jne
dec
shll
mov
add
cmc
mov
pop
ret
rcll
lock
inc
xor
std
dec
jp
cmp
push
pop
or
int3
fs
mov
inc
push
sub
in
lock
stos
inc
loop
pop
or
push
stc
cs
hlt
push
xor
arpl
xchg
mov
add
adc
mov
loopne
lods
xchg
push
std
jo
ja
loopne
ret
imul
mov
mov
daa
shll
shrb
jns
cmc
shlb
jg
cltd
mov
popf
fldt
mov
lds
cmp
push
clc
dec
mov
in
adc
les
aas
aas
dec
push
xor
popf
or
sbb
xchg
inc
ss
cmp
clc
pop
jmp
xor
repnz
hlt
jg
mov
jecxz
jge
adc
leave
sub
mov
insl
xor
xchg
xchg
xor
ret
mov
mov
pop
sbb
data16
cli
or
stc
fld
popf
icebp
lea
test
mov
and
cwtl
cmp
scas
call
pop
in
fdivp
pop
je
pop
mov
cs
jge
popa
dec
je
cmp
stc
sahf
ficomps
jmp
xacquire
inc
and
and
enter
and
push
adc
mov
inc
ret
jb
loop
repz
dec
mov
pop
daa
imul
insb
mov
adc
movsl
imul
push
sub
sub
insl
mov
loop
sbb
mov
pop
decl
cmpsl
stos
cmp
mov
push
arpl
and
cltd
push
mov
jge
mov
inc
popa
xchg
mov
incl
push
cmp
adc
jno
out
iret
sbbl
push
or
test
nop
mov
or
lahf
xchg
incl
mov
fisttpl
ror
jl
mov
mov
in
int
loopne
add
mov
push
mov
sub
mov
lret
cmpsb
xchg
pop
xchg
sub
cltd
int3
inc
jmp
test
jmp
dec
and
xor
rcrb
mov
leave
inc
push
add
pop
clc
push
jl
or
fcoms
push
incl
shlb
dec
fs
test
cs
xchg
add
mov
test
xor
sbb
xchg
sti
sahf
lea
mul
outsb
int3
imul
push
es
pop
pop
mov
insb
mov
cmp
ja
shl
xlat
ljmp
out
fucomp
cwtl
sub
fnstenv
adc
push
adc
xor
add
out
mov
pop
and
pop
sub
ds
jnp
imul
cmp
test
push
je
test
sahf
into
cmpsb
aas
dec
push
or
mov
dec
jnp
mov
add
sarb
sub
xchg
imulb
xchg
sub
cmp
mov
sub
xchg
jnp
sbb
and
xor
mov
cltd
and
je
xor
cmpb
mov
in
out
ds
xor
cwtl
enter
arpl
mov
sbb
mov
js
jns
scas
dec
add
in
dec
outsl
rep
sub
sarb
dec
cld
inc
aam
add
js
icebp
xor
sbb
and
xor
and
enter
push
dec
xor
test
add
adc
add
in
inc
stc
pop
out
mov
inc
pop
xor
ljmp
push
stos
push
pop
fcomps
fmulp
mov
icebp
push
out
dec
decb
mov
test
sahf
sbb
jnp
jne
sub
mov
cld
xchg
mov
in
jo
adc
negl
dec
and
mov
pop
inc
adc
pop
outsb
les
mov
mov
aad
jnp
in
dec
xor
pop
das
or
mov
fbld
mov
mov
ficoms
mov
push
call
pop
ds
dec
and
xchg
ret
pop
or
pop
ljmp
sbb
ds
jmp
in
mov
or
xchg
out
xchg
or
lock
cld
movsl
or
cld
pop
cs
sbb
scas
mov
iret
cmp
or
dec
sti
pop
inc
or
enter
in
lds
xor
fsubs
jp
jp
jo
fbld
sub
inc
mov
xor
dec
jno
ret
sahf
cmp
push
rcr
adc
ja
sbbl
clc
shlb
dec
movsl
and
int
push
ret
test
push
xchg
mov
lods
push
sbb
out
dec
fwait
inc
mov
xchg
fbstp
pop
pop
dec
les
ljmp
int
jo
add
scas
sti
ss
push
mov
inc
sar
sub
pop
and
pusha
out
sub
lods
repnz
lahf
popa
clc
les
sub
in
cmpsb
lea
jbe
jp
add
fwait
lret
cmp
add
shll
mov
xor
cltd
rclb
into
mov
xchg
mov
mov
mov
aam
lcall
insb
push
push
push
sub
pusha
mov
xchg
popf
inc
dec
mov
or
adc
pop
add
pop
xchg
mov
mov
flds
or
enter
adc
xchg
sahf
stc
sub
inc
ret
popa
jb
mov
insl
out
shrl
imul
lods
nop
aaa
scas
mov
inc
ljmp
fwait
mov
insl
push
mov
inc
xchg
cld
pusha
jl
add
int3
js
popa
sub
and
fistpll
std
push
sub
or
jns
mov
sbb
ss
leave
mov
sar
add
in
push
push
cs
icebp
dec
add
mov
add
jne
sub
or
jno
das
inc
addb
xchg
outsl
add
sbb
jne
je
divl
movsb
das
pop
cmp
inc
mov
inc
or
out
mov
je
sbb
lret
out
lock
xchg
rep
push
out
cwtl
in
mov
add
mov
bnd
jbe
jb
out
sti
jecxz
mov
outsl
pop
jmp
lods
cmp
out
cld
or
mov
hlt
in
cmp
fwait
subl
imul
in
jle
mov
dec
das
rcr
out
scas
call
jns
pop
fmul
jle
scas
push
scas
sbb
stos
push
adc
xlat
jnp
mov
mov
lahf
mov
ret
repnz
cmp
imul
mov
jno
shlb
addr16
jmp
ja
cmc
mov
std
fucomp
mov
cmp
fldenv
lock
xchg
popf
stos
push
inc
dec
jno
xchg
hlt
and
rcrl
jno
mov
xorl
mov
pop
stos
stos
addr16
sti
pop
lea
lods
fcomps
jbe
xchg
movsl
and
cld
fstpl
xor
punpckhwd
dec
mov
movsb
mov
fldl
js
cmc
les
xlat
cmp
sub
inc
sbb
cmpsb
mov
stos
add
cmp
push
add
lret
push
cli
add
loopne
not
mov
ja
xchg
data16
add
inc
jb
cmp
test
sbb
push
mov
mov
xor
xchg
xchg
inc
gs
or
xor
test
cmp
mov
nop
inc
mov
rcrb
mov
mov
adc
sub
mov
sub
jg
movsl
or
xchg
jnp
subl
push
fadds
mov
xchg
insb
xchg
sbb
cmc
dec
in
xchg
cmpsb
pop
leave
sub
shlb
pop
out
jbe
jb
jmp
and
lods
ds
mov
push
aad
rcrl
getsec
cmpsl
fsubl
jp
mov
addr16
ficompl
div
add
add
mov
hlt
scas
jns
and
lret
ljmp
add
std
insb
push
mov
adc
mov
jecxz
test
call
jo
lock
fbstp
addb
pop
hlt
inc
jbe
inc
mov
dec
ja
out
push
inc
aam
negl
mov
arpl
ret
cmpsl
xchg
jl
add
ss
shrl
stos
xchg
cmp
mov
sahf
inc
and
test
rolb
cmc
inc
cmp
xchg
lgs
shl
insb
test
push
xor
cmpsl
cmp
add
mov
daa
and
add
addr16
jmp
cmp
pop
add
cli
test
xchg
inc
mov
mov
fwait
jns
shr
pop
sbb
cmp
cmp
mov
out
mov
lods
xchg
mov
sbb
add
cmp
aas
add
lcall
out
xchg
daa
ja
ret
lea
pop
insl
lahf
sub
jge
adc
push
lahf
testb
xchg
add
mov
in
mov
fidivrs
lock
cmp
lcall
jbe
xchg
sub
pop
adc
pop
jne
jecxz
xor
ds
subl
cmp
out
mov
or
xchg
lret
inc
in
loope
cld
mov
mov
enter
mov
ds
mov
daa
mov
subb
testl
dec
xchg
ret
dec
pop
sub
pop
and
mov
jmp
add
jmp
stos
xor
pop
imull
lods
popl
jecxz
mov
jle
xor
shll
ficoms
fcomip
mov
pop
stos
sub
cld
push
or
jl
inc
into
mov
test
push
cli
and
xchg
jl
mov
rorl
ret
sub
cmp
and
jg
or
sarl
insl
push
in
inc
repnz
push
int3
lcall
jnp
cwtl
jb
insl
xor
and
and
xchg
jecxz
rclb
cltd
mov
daa
pop
arpl
orl
cmp
sbbl
add
test
iret
sub
xchg
in
or
lret
int3
mov
jge
sti
push
adc
xchg
inc
sub
mov
add
lods
mov
movsb
into
xchg
frstor
sarb
repnz
xchg
jmp
jecxz
lock
nop
roll
pusha
int3
jmp
cld
mov
call
push
scas
iret
sub
push
in
enter
mov
add
lahf
in
or
mov
inc
push
mov
adc
add
flds
and
dec
shll
stos
or
mov
and
push
add
fstp
pcmpeqb
jnp
mov
negl
and
jae
push
or
and
loop
push
dec
stos
data16
jns
leave
jg
xlat
xchg
insb
lock
and
adcl
mov
shlb
or
ds
scas
popa
xlat
mov
stos
mov
outsb
hlt
push
xor
mov
or
call
dec
ret
scas
sbb
stc
in
imul
inc
insl
pop
insb
jo
add
mov
in
loopne
push
sbb
loop
insb
das
aam
and
or
inc
sub
inc
ds
rorb
scas
fstps
xchg
push
inc
lahf
push
cmp
das
out
mov
ffree
jmp
cmp
loope
ja
or
int
ja
dec
jmp
shll
mov
popf
lea
cmc
fcomip
mov
mov
nop
into
in
mov
xor
sbb
xorb
sub
sbb
pop
pop
add
stos
inc
cmp
inc
cmc
stos
test
nop
in
pop
mov
and
je
outsb
mov
imul
inc
cmpsl
fdivl
sbb
jae
std
adc
pop
into
jecxz
pop
data16
test
out
cmc
test
pop
sbb
jns
clc
sbb
stc
jbe
daa
js
leave
out
mov
shrl
sbb
mov
and
jge
dec
inc
stos
inc
out
xchg
imul
insb
int
pop
add
adc
mov
mov
push
add
jnp
xor
frstor
ror
lds
inc
mov
mov
in
cmpsb
xchg
fisubl
bound
sbb
add
in
adc
mov
pop
inc
lea
xor
adc
sti
inc
adc
roll
pop
jo
cmpl
stos
inc
mov
mov
arpl
rclb
xor
sub
bound
cmp
stos
jmp
sbb
insb
call
lea
push
mov
mov
push
jo
mov
pop
xor
test
and
movsl
lcall
push
out
mov
andl
leave
xchg
in
push
fsubs
mov
push
inc
dec
push
mov
hlt
les
add
pop
dec
lds
dec
daa
pop
xchg
adc
mov
test
cmp
push
iret
xchg
inc
mov
pop
lahf
fsts
cmp
jg
push
ret
sub
mov
sub
adc
jl
or
pop
and
out
fwait
and
jnp
cmc
out
cltd
cltd
cmp
pop
sub
in
leave
es
loopne
test
inc
sbb
loop
cmp
std
inc
loop
mov
sub
test
inc
stos
pop
outsl
lods
cmpsb
cmp
or
sbb
or
inc
or
jecxz
test
cmpb
shll
lock
mov
jecxz
jns
inc
push
sub
jns
movsl
lock
lcall
cs
push
cmp
ja
sbb
add
xlat
jle
lods
xchg
outsl
dec
jno
lock
or
mov
inc
lods
push
mov
or
ljmp
xchg
lret
adc
je
add
fs
pushf
mov
inc
dec
push
xlat
fstl
lods
cmp
ficompl
or
adc
int
push
mov
ret
in
sub
pop
mov
rorl
roll
or
sbb
jge,pt
mov
subw
jns
adc
mov
pop
inc
mov
xor
lea
dec
pop
les
ret
xor
mov
dec
mov
xor
push
xchg
jo
xchg
shll
jmp
dec
or
aad
pop
add
cmpsl
in
icebp
push
adc
jae
pop
xchg
mov
sbb
repnz
cmpsb
push
jns
dec
clc
cmp
ror
dec
ret
popf
iret
and
sub
stc
sbb
arpl
cmc
jo
sbb
inc
out
jmp
and
ds
or
xchg
cmp
data16
ljmp
cmp
shl
cld
mov
add
mov
arpl
out
pop
repz
and
sbb
mov
add
lret
pop
push
sub
adc
std
dec
push
lods
outsl
inc
faddl
mov
fs
sbb
mov
cltd
outsb
insb
cld
pop
mov
pop
sub
sbb
pop
movsb
pop
xor
aad
hlt
or
push
mov
and
mov
ret
jb
or
and
popa
sti
ret
or
ret
mov
jbe
int
jnp
xchg
add
sbbl
lret
push
cld
pushf
test
test
inc
add
dec
ja
dec
cld
fsub
daa
and
or
jmp
mov
mov
loope
fsubrs
dec
or
adc
aas
pop
out
push
cmpsb
dec
mov
out
sbb
or
testb
fistpll
ss
push
jnp
scas
add
dec
fstpt
mov
loope
clc
add
mov
loopne
clc
sbb
stos
xchg
into
sbb
jl
dec
xlat
and
or
and
lea
into
pop
stc
mov
push
loop
mov
pop
jle
nop
adc
sub
xchg
scas
xor
rolb
push
push
outsb
adc
call
hlt
pushf
sarl
mov
xchg
add
inc
int
push
fs
push
in
jge
ret
lret
and
jmp
xlat
stos
imul
lds
dec
pop
mov
push
dec
mov
mov
mov
dec
testl
adc
sti
lcall
hlt
incb
subb
imul
pop
ja
ret
dec
cmpsb
sbbb
std
sbb
xchg
inc
push
jnp
mov
stos
inc
sarl
mov
stc
xchg
xlat
push
sub
cmpsl
push
push
adc
les
inc
ret
push
aaa
clc
movsl
cmp
aaa
inc
iret
inc
pushf
fcoms
mov
sbb
fisubs
je
sbb
repnz
js
incl
and
push
jl
mov
aam
lret
cwtl
ja,pn
sub
shrb
fs
cld
push
mov
pop
mov
in
and
cmpsb
mov
mov
popa
push
inc
inc
jno
sbb
or
cmc
pushl
jnp
pop
jp
jns
jne
sbb
mov
cmc
loope
pop
adc
mov
xor
dec
dec
xchg
aaa
xchg
je
fnsave
pop
notl
testl
push
pop
push
dec
xchg
xchg
dec
or
cmp
rol
rolb
arpl
inc
sub
push
fsubrs
aas
frstpm(287
inc
jle
mov
xchg
push
sub
push
sub
add
loop
jne
clc
push
daa
in
frstor
test
in
mov
jnp
ja
cwtl
or
movsl
std
lret
push
add
xchg
cmp
or
lahf
ss
sub
push
enter
cwtl
scas
lahf
xlat
push
or
mov
cmp
pop
hlt
adc
mov
mov
mov
and
out
ficoml
inc
ljmp
ljmp
jmp
adc
loopne
xchg
sbb
pop
xor
flds
int
and
pop
cmp
data16
mov
testl
mov
sbb
xchg
loop
cmp
es
lods
das
dec
add
xchg
adc
test
arpl
dec
ljmp
ljmp
jle
in
insb
mov
std
mov
jb
sbb
popa
jp
out
xor
lahf
dec
rcll
cli
lods
testl
stos
and
xchg
xchg
repnz
cmp
and
sub
out
sti
xchg
stos
adc
es
popf
cmc
pop
cld
push
shlb
xchg
pop
jo
mov
cmp
cmp
loopne
mov
and
adc
roll
fs
push
sarb
xor
and
mov
lods
adc
lds
repz
xchg
testb
jp
lcall
stos
movsl
aas
shlb
mov
jne
ljmp
cmp
popa
in
push
and
inc
cs
popf
mov
pop
js
jp
cmovo
stc
xor
jmp
test
sti
in
cltd
fsts
movsb
add
cwtl
out
ljmp
lods
faddl
roll
fiaddl
jae
test
ljmp
sahf
leave
push
lahf
clc
mov
pop
sarb
in
sbb
jns
push
or
lcall
leave
sbb
push
mov
xchg
lret
jge
call
jns
adc
xor
into
and
jb
leave
lcall
sbb
add
push
clc
scas
loopne
lods
lcall
aam
sub
sti
sbb
pusha
sub
in
ja
jl
aam
loop
cmp
rclb
xchg
cmp
push
inc
insl
inc
out
addb
lock
aam
xchg
insl
pop
dec
xchg
xchg
cli
and
mov
add
js
jno
inc
call
xchg
dec
xor
fnstcw
or
adc
cmpsb
lret
lea
pop
mov
aaa
out
mov
outsl
xor
or
push
sub
into
lock
dec
xor
inc
push
sub
sahf
data16
stc
stc
movsb
insl
test
fs
testb
sub
jne
bound
insb
stc
dec
lret
inc
les
invlpg
adc
xor
aaa
andw
inc
add
jge
sbb
or
rcl
data16
ja
jle
jl
outsb
jge
pop
rol
xchg
sbb
shll
cmp
imul
jno
outsb
sub
insb
pop
aam
cmp
jae
insl
inc
aam
pop
inc
sbb
dec
and
out
add
pop
nop
mov
imulb
pop
add
je
insb
cwtl
xchg
jnp
fcmovne
or
fyl2xp1
lcall
aad
push
js
inc
xlat
push
cmp
std
inc
fmul
andb
and
push
int3
lret
inc
xor
xchg
xor
sarl
add
pop
iret
push
outsb
fwait
cmp
cs
jg
xchg
adc
lcall
lds
push
lret
icebp
sbb
jbe
jmp
mov
or
lcall
fidivl
mov
and
dec
aam
iret
fiaddl
test
and
stos
jecxz
fcmovbe
and
in
or
adc
repz
jl
lods
dec
loope
outsb
mov
add
add
fs
jp
std
mov
inc
jecxz
int
add
cwtl
sbb
inc
inc
sbb
lods
xor
cmc
inc
stos
repz
imul
scas
jae
or
push
call
push
adc
add
jns
xchg
sub
cmpsl
pop
addb
jb
mov
ss
cmp
or
cmp
jnp
and
js
pop
push
jbe
sub
jle
inc
jg
dec
mov
andb
iret
dec
add
mov
jb
je
pop
in
mov
mov
push
sar
xchg
popa
inc
in
jns
cld
rolb
xchg
push
inc
xchg
xor
dec
ret
outsb
outsb
push
sbb
adc
imul
push
addb
push
pushf
mul
and
lcall
test
loop
lods
or
jne
mov
sub
loop
test
js
test
out
push
xchg
imull
mov
cmp
push
cmc
ds
dec
inc
lods
je
mov
jge
push
mov
cmpsl
aad
pop
je
xchg
pop
jmp
adc
mov
dec
jbe
jge
mov
sub
dec
and
subb
mov
xchg
fisttpl
in
pop
jmp
hlt
pop
imul
repz
or
jbe
leave
cmp
loopne
shl
addb
sbbb
pushf
repnz
push
sub
cmp
hlt
enter
adc
test
or
data16
dec
cmp
adc
addr16
xchg
xchg
mov
out
push
jno
push
jae
sbb
cwtl
sbb
shll
jg
xchg
test
adc
icebp
add
jecxz
aad
ss
sti
inc
cmp
adc
movsb
pusha
sbb
dec
jecxz
imul
outsb
daa
fsub
adc
mov
dec
and
jns
cwtl
mov
repnz
imul
fs
pop
push
fmuls
leave
lock
sbb
popa
int
jecxz
cli
jo
das
jae
cmp
add
std
sarb
sbb
hlt
push
or
jb
sahf
aam
fs
fwait
lret
je
push
jl
pop
pop
and
or
ljmp
in
add
aaa
xchg
cmp
xchg
gs
jge
cli
pop
jns
cmp
push
push
or
inc
les
mov
dec
xlat
lods
test
aam
loopne
lret
push
loop
dec
jbe
jae
sub
adc
insb
mov
add
cmp
push
or
aam
aam
aaa
das
andb
dec
ret
inc
push
rclb
dec
mov
jmp
daa
cmc
divl
leave
clc
mov
je
mov
push
dec
in
mov
mov
mov
cmpsb
call
out
imul
add
scas
stos
dec
lods
inc
cmc
orb
arpl
in
xorl
shrb
mov
xchg
aad
and
lds
push
insl
lahf
add
nop
add
repnz
mov
xchg
cmpsl
mov
cmc
and
das
pop
mov
dec
or
push
and
arpl
in
mov
sbb
sbb
std
ret
out
lock
sub
es
pop
clc
lret
or
movsb
fdivrl
movsl
jb
fwait
pop
cmp
mov
mov
pop
jbe
loope
negl
xor
mov
test
or
popf
movsb
test
test
jmp
xor
push
in
pop
in
push
jge
adc
icebp
sbb
aas
call
mov
and
dec
add
ljmp
pop
push
mov
das
cmp
scas
pop
or
xchg
jb
push
out
inc
mov
js
adc
pop
stc
cmc
cwtl
and
test
insb
fdivl
or
pop
mov
push
mov
sbb
iret
jo
gs
fstl
xchg
es
jns
inc
adc
mov
insl
jo
out
movb
push
test
add
lea
xchg
dec
stc
imul
push
mov
and
ja
mov
push
jbe
ljmp
mov
pop
xchg
push
jmp
or
xchg
lods
fimull
dec
and
lret
push
push
xor
jecxz
dec
repz
insl
sarl
sbb
mov
xor
mov
aam
jp
xchg
mov
push
scas
dec
divl
ret
lds
mov
pusha
js
cmc
pop
ret
int3
adc
add
test
iret
push
fiadds
mov
dec
adc
sbb
adc
shll
pop
xlat
stos
insb
mov
inc
movsl
sti
push
movsb
xchg
adc
test
or
loopne
dec
sub
adc
pop
enter
js
stc
loopne
movsb
inc
dec
mov
sub
lret
repz
aas
and
or
mov
ljmp
out
hlt
adc
fcomps
sbb
cwtl
pop
xchg
mov
push
jle
mov
out
out
loopne
mov
pop
dec
mov
movsb
fidivl
mov
les
push
gs
inc
mov
aaa
out
aad
or
pop
add
push
das
sbb
mov
mov
jne
fisubrl
js
imul
jge
or
jmp
or
dec
repz
add
pop
inc
pop
cmp
test
cmp
cwtl
jnp
cmp
insb
push
xchg
fcmovnu
fstps
rcr
add
mov
and
sahf
inc
push
mov
clc
in
adc
fldenv
in
jg
and
xchg
nop
bound
rcr
stos
mov
jmp
inc
pop
mov
adc
pop
int
jo
movq
outsb
insb
xor
loopne
out
cmp
lcall
xchg
sub
jmp
outsb
push
lret
pop
sbb
and
rcrl
in
lcall
sbb
dec
or
push
xor
sub
sti
scas
mov
ret
test
jnp
xor
xchg
lahf
mov
mov
arpl
loope
mov
addr16
inc
mov
fisubs
das
dec
shl
sbb
in
sti
sub
icebp
mov
cmp
and
mov
repnz
mov
lods
aam
xor
xchg
mov
jne
inc
sub
mov
repz
pop
fcoms
dec
ret
mov
jp
sbb
mov
adc
and
shll
in
icebp
negb
jne
mov
aas
push
scas
sbb
std
mov
add
lock
icebp
sub
sbbb
mulb
push
stos
in
imul
daa
inc
cli
mov
mov
and
sub
arpl
rclb
mov
scas
jmp
inc
xor
cld
sti
das
dec
repz
push
rclb
enter
lea
mov
jp
jl
addr16
pop
test
scas
xor
lock
sbb
loopne
add
sahf
jns
call
icebp
mov
cmc
js
jg
not
and
pop
pop
xor
mov
or
cwtl
xchg
jno
cwtl
popa
adc
sub
int3
ds
mov
add
outsb
jge
push
or
pop
dec
dec
push
add
test
adc
inc
and
adc
lea
jbe
jmp
shlb
xchg
dec
out
pushf
insb
inc
ficompl
push
in
les
sbb
aad
loopne
jno
fiadds
test
dec
sbb
inc
test
data16
sub
iret
mov
rcr
xchg
sub
jnp
nop
filds
xchg
or
pop
mov
out
fs
out
xchg
loopne
shll
dec
lods
in
hlt
xchg
mov
shlb
int
and
dec
sub
add
roll
addb
cli
cmp
das
jle
das
xchg
jp
in
mov
mov
cltd
adc
mov
shrb
repz
in
push
pop
imul
dec
sbb
sbb
loopne
jge
jle
inc
mov
pop
fiadds
sbb
add
test
adc
add
mov
mov
into
jnp
je
adc
mov
jbe
fwait
sub
mov
je
xor
add
dec
pusha
fidivs
stos
or
dec
mov
loopne
pop
dec
mov
pop
jbe
mov
dec
push
adc
insl
movsb
push
ds
adc
or
pop
push
out
jns
mov
repnz
dec
cmpsb
push
xor
lret
sub
mov
mov
ret
and
adc
mov
in
jp
adc
inc
fisubs
sub
leave
das
xor
add
add
aad
adc
cmp
mov
addl
or
pop
xor
cltd
or
mov
xor
adc
cmp
xchg
inc
fmuls
mov
jecxz
push
inc
xchg
and
jp
add
loope
jo
jb
pop
andb
jne
add
pop
test
mov
mov
sahf
aam
fildl
fiaddl
and
hlt
ret
addr16
push
adc
jns
or
push
cmp
pop
jo
and
stos
imul
mov
lcall
mov
pop
call
mov
cltd
inc
cwtl
jbe
and
dec
imul
mov
int3
mov
jne
adc
decb
sbb
gs
movsl
xor
and
jns
xor
xor
test
jbe
ja
xchg
in
aas
imul
stc
xchg
sub
sub
and
testl
dec
repz
xchg
popa
cmp
lahf
mov
cmpsb
cli
push
push
adc
arpl
cmp
adc
mov
xchg
mov
dec
cltd
out
adc
call
sub
mov
testl
outsb
mov
adc
into
and
push
call
scas
push
add
prefetch
jae
insb
push
ds
mov
sbb
xor
loop
popf
pop
dec
not
and
daa
lods
push
pop
out
cs
mov
dec
xchg
jmp
leave
pop
outsb
mov
pop
or
lock
fldenv
test
fstp
mov
fldenv
and
rcrl
jbe
push
loopne
int
fstl
push
pop
les
inc
rcl
es
or
sbb
or
mov
cmp
jb
cmp
sub
add
sbb
shrw
or
sub
jb
shrl
cltd
loopne
cmpsl
cld
jns
inc
enter
jecxz
adc
dec
cmpsl
add
jp
dec
loop
xor
sahf
sti
xchg
pop
mov
xor
bswap
or
in
xor
jmp
repnz
add
fwait
addr16
push
call
adc
movsb
js
scas
cmp
lods
stos
sbb
xchg
xor
cli
das
cmp
ficompl
jbe
ret
dec
rcl
jno
cmc
jne
cmc
rol
dec
ss
dec
int3
std
cli
push
insb
jge
fs
pop
mov
xchg
andl
dec
sub
mov
lcall
std
aaa
jl
popf
int3
roll
sub
jmp
xchg
nop
inc
add
movb
mull
jo
sbb
ret
test
jns
cmp
mov
into
pop
jg
mov
xor
jae
or
mov
cmp
shll
dec
addr16
test
fsubrs
test
into
sbb
scas
sbb
jo
pusha
push
fldl
fisubl
mov
inc
or
test
jns
and
dec
fistpll
jne
mov
int3
mov
adc
adc
and
addr16
push
sbb
ret
inc
jnp
ja
rorb
push
sub
out
cltd
test
add
call
cmpsl
jmp
dec
pop
loope
fcmovb
ds
mov
push
outsb
aaa
testb
dec
bound
test
sub
mov
jl
scas
mov
les
push
in
xchg
leave
inc
fcompl
ja
jl
and
mov
and
and
or
push
add
jbe,pn
stos
inc
ss
xor
inc
sub
xchg
push
jecxz
push
add
sbb
mov
roll
xchg
sbb
imul
ja
inc
rcrl
cmc
dec
and
scas
xchg
dec
insb
pop
pop
mov
xor
loop
inc
rcll
ss
outsl
push
js
fwait
test
outsl
out
outsl
enter
mov
divl
fs
jle
adc
std
lea
cmp
leave
adc
push
aad
enter
fmulp
ret
nop
fsts
mov
or
push
adc
push
or
xor
incb
pop
js
or
pop
fucom
iret
in
fs
lret
rcrl
fsubs
jno
fisubrl
cmc
cmpsb
xor
test
pusha
aam
dec
lret
mov
dec
or
sub
icebp
fwait
out
outsb
aad
hlt
test
sub
test
ret
cmc
ds
pop
rolb
cmp
int
xlat
add
sbb
pop
addr16
xor
outsb
dec
int
ljmp
fabs
into
fs
fs
adc
fisubrl
pop
mov
in
sbb
sub
mov
push
sbb
mov
in
leave
arpl
pop
or
jb
cmpsl
aas
hlt
out
addr16
sub
aam
imul
pop
fnsave
lock
mov
popf
fildll
mov
pop
mov
enter
mov
in
pop
fisubl
cmpsb
std
outsl
insl
xchg
xchg
sti
movsb
aas
mov
xchg
adc
stos
inc
sbb
repz
mov
test
jmp
sbb
xchg
push
mov
sub
or
push
aam
ret
xor
xchg
sub
incb
push
dec
mov
inc
jno
dec
leave
aas
and
cmpsb
push
rorl
adc
int
jnp
mov
cmc
sbb
cmpsl
je
xor
adc
lret
out
ret
add
mov
jo
push
out
stos
xchg
lahf
js
cmp
inc
lea
loop
adc
jno
sbbb
lea
int3
call
pop
pop
in
push
fnstcw
sbb
leave
xchg
push
add
test
cmp
sub
int
test
xor
fwait
dec
add
pop
push
xrelease
fnstcw
aas
xchg
out
mov
push
lret
cmp
aam
dec
push
subps
push
rcrl
add
fsubl
cmpxchg
mov
add
adc
inc
or
add
pusha
mov
icebp
push
cmp
cs
outsl
sbb
fisttps
aas
sub
xor
ret
pop
mov
test
scas
mov
sub
out
mov
in
and
hlt
in
cmp
adc
lods
cmp
int3
pop
jge
xchg
sbb
es
dec
in
loope
jb
stc
loopne
dec
add
adc
jo
cs
mov
and
aam
popa
test
and
sti
cli
add
mov
arpl
jmp
dec
mov
pop
jl
cmpsl
mov
pop
mov
subl
or
cmp
sub
dec
test
sbb
mov
enter
adc
sbb
mov
movsl
int3
out
and
jno
xor
inc
test
jl
lcall
cs
xor
enter
popf
aaa
and
inc
mov
gs
inc
in
push
pop
ljmp
shll
xlat
jle
xor
jmp
cmc
jge
jbe
cli
loopne
aad
cs
insl
mov
test
inc
jmp
addr16
std
mov
sub
mov
in
dec
lcall
jl
dec
push
scas
dec
jnp
out
dec
or
pop
insl
pop
pop
add
xchg
and
push
shll
repz
aam
test
neg
test
pop
scas
adc
inc
fstp
cmp
dec
dec
push
push
cmc
ja
jmp
pop
cmp
mov
sub
test
or
sub
xlat
ret
dec
lcall
adc
adc
andb
test
mov
lahf
std
lcall
nop
loopne
dec
push
rolb
arpl
lds
mov
ja
addb
sub
adc
cmp
inc
xchg
fstpl
cmpsb
filds
insl
test
ss
mov
fcmovb
int
aam
or
cmp
dec
adc
aaa
js
aaa
xor
push
inc
or
imul
pop
in
cmpsb
or
repnz
and
mov
insl
sbb
mov
cmpsb
cmp
sbb
fsubr
inc
lea
fs
loop
xchg
sub
gs
cmp
pop
inc
sbb
lods
cltd
push
mov
jae
lcall
and
mov
add
mov
cmp
ljmp
sahf
aad
sub
in
mov
and
ja
into
cmp
cmp
jbe
cmp
add
mov
daa
mov
inc
rcr
or
sbb
and
ffree
pop
rorl
aam
push
movsb
jo
test
lcall
add
lfs
pop
mov
xor
jl
mov
pop
shll
adc
mov
push
add
sub
pop
mov
and
ja
aaa
xchg
dec
inc
xor
mov
in
or
pop
sti
adc
aad
xchg
std
mov
mov
mov
jno
in
les
jmp
cli
sub
mov
popf
xor
pop
rclb
shlb
push
xchg
cmp
js
and
adc
shrb
inc
cmp
ficoml
mov
call
and
cmp
outsl
je
mov
loope
loope
push
mov
rcll
xchg
fs
mov
fdivr
rol
mov
add
movsb
jp
mov
stos
jnp
test
push
in
repz
mov
cmp
push
mov
xchg
imul
pusha
jo
arpl
mov
xchg
xchg
mov
jmp
popf
inc
pop
inc
mov
fwait
xchg
lcall
jns
mov
clc
sbb
mov
mov
jg
adc
je
ficomps
daa
mov
mov
add
adc
mov
movsb
push
addr16
scas
jno
jmp
in
inc
jle
mov
cli
js
and
add
cs
or
xchg
out
add
mov
pop
mov
aaa
jnp
fbstp
sbb
movsl
shr
xchg
shlb
add
sahf
sbb
push
fiaddl
dec
enter
jecxz
xchg
rorl
mov
mov
test
push
sub
or
lds
es
xchg
and
jnp
and
js
imul
js
push
add
push
nop
int3
loopne
clc
or
jo
cmp
fs
loopne
xor
addr16
or
and
cmp
into
add
sbb
mov
test
outsl
add
add
jbe
add
inc
jg,pn
and
or
adc
hlt
movsl
adc
repz
loope
lods
xchg
imul
aas
out
sbb
fwait
sub
lods
gs
inc
icebp
add
push
shlb
mov
pop
lds
sub
xchg
sub
inc
jne
inc
and
pusha
mov
mov
out
xchg
mov
xchg
cmpsb
into
sti
movsl
jo
push
and
js
xlat
xor
fcompl
out
push
lock
xor
mov
lods
lods
add
mov
sub
sahf
adcb
imul
jo
and
test
sbb
mov
lret
test
imul
cmp
xor
mov
pushf
xor
adc
pop
jae
lcall
pop
mov
pop
dec
inc
ret
push
push
popf
mov
pop
dec
and
and
push
cmpsl
aam
jge
push
pop
in
pop
add
dec
outsl
loope
hlt
inc
pop
ret
jbe
xchg
mov
sarl
and
mov
jmp
cwtl
xlat
stos
cld
not
notb
push
cmp
mov
mov
cmp
xlat
xchg
fstl
and
stos
jmp
jae
jle
insb
add
scas
sbb
pop
lds
enter
jecxz
out
scas
inc
sub
pop
push
inc
gs
mov
xchg
mov
jno
stos
out
adcl
test
into
mov
pop
push
lcall
push
mov
mov
ja
mov
rorb
push
addr16
sub
cltd
stc
imul
or
cld
cmp
in
jge
mov
fdivrs
inc
loopne
xor
mov
mov
push
fwait
jbe
sbb
mov
pop
mov
mov
loopw
sbb
xlat
pop
icebp
cmpsb
push
adc
dec
jmp
stos
aam
int3
push
jge
js
and
mov
shr
sub
xor
or
je
dec
or
scas
repz
das
dec
add
out
in
adc
inc
and
push
fisttpl
sar
bound
bound
or
call
push
outsl
pop
outsl
push
push
gs
sub
pop
arpl
ret
jo
call
lds
mov
mov
mov
das
xor
add
pop
inc
xor
aam
stc
pop
pop
cli
outsl
lcall
and
cmp
cmp
mov
jae
sbb
cmpsl
dec
inc
mov
stos
daa
mov
dec
and
mov
out
pop
mov
pop
push
jge
jns
test
inc
cli
je
inc
push
mov
cmp
data16
and
jnp
insl
negb
cmp
xor
jp
xor
shl
fcomp
cmp
jnp
xor
xchg
es
dec
test
test
adc
push
push
xorl
std
push
out
and
in
mov
xor
mov
dec
or
aaa
jo
ret
ss
not
dec
pop
mov
xchg
shrb
fstps
xchg
and
sub
push
pop
push
inc
enter
out
inc
adc
xchg
repz
enter
mov
add
dec
inc
mov
jb
mov
iret
dec
fwait
inc
push
outsb
ds
insb
insl
jbe
pop
and
enter
push
aaa
insb
sbb
cli
mull
inc
popa
hlt
jno
addb
cmp
xchg
mov
icebp
xor
inc
fnsave
sub
add
jmp
outsb
bnd
mov
pop
xchg
fdiv
add
xor
icebp
rorl
ss
cli
pop
fcoml
dec
jbe
xlat
imul
shll
dec
cltd
gs
test
sbb
test
push
ss
or
mov
mov
aam
jge
ljmp
xchg
mov
into
mov
ss
mov
dec
rolb
vmovdqu
test
and
mov
pop
push
or
inc
and
rcrb
sbb
bound
inc
daa
aas
mov
sub
sub
incb
daa
pop
or
cli
mov
fdivl
sub
pop
daa
xchg
ds
inc
imull
sahf
add
jp
sbb
push
mov
cs
push
std
mov
jecxz
call
jle
icebp
pop
push
mov
hlt
push
mov
xchg
rcll
outsb
les
and
and
shlb
repz
inc
mov
test
pop
ss
pop
arpl
xor
adc
lods
in
jae
shlb
imulb
outsl
pushf
mov
xor
mov
push
add
push
sahf
vmwrite
in
movsl
aaa
scas
push
mov
mov
pop
jb
sbb
outsb
mov
mov
movsl
push
sub
xor
cmp
loopne
adc
jl
movsb
sub
sbb
add
stos
xor
imul
sti
mov
into
mov
repnz
lret
xchg
cs
mov
pop
xchg
clc
or
push
insl
and
pop
sub
jp
sti
fwait
xor
mov
jbe
test
in
jmp
add
dec
and
sbb
adc
mov
outsl
sub
and
scas
sbb
out
xchg
pop
in
std
push
mov
jae
sbb
cltd
jns
lea
repz
stos
xchg
inc
pop
les
inc
xchg
push
jp
adc
cmp
cmp
imul
icebp
loop
dec
xchg
aas
fs
inc
pop
lahf
faddl
cmp
and
xor
sarl
add
subb
xlat
pop
divl
lods
repz
clc
xchg
jle
lods
fs
xchg
inc
mov
lods
sub
lods
push
xor
in
scas
rcl
add
jbe
mov
sti
into
sub
clc
pop
mov
pop
popa
repnz
mov
inc
mov
mov
inc
jns
imul
and
mov
inc
cmp
jle
sub
test
sbb
cmp
test
mov
daa
mov
addb
mov
in
pop
mov
arpl
loop
xchg
adc
add
push
scas
mov
jo
scas
fwait
lods
pop
andb
into
inc
out
add
mov
les
mov
cld
stc
pop
lods
and
shlb
sbb
sbb
xchg
cmp
xor
std
xor
mov
daa
jg
push
lods
mov
insb
xlat
cmp
jl
jp
ret
scas
mov
shlb
imull
rolb
lds
adc
pop
ret
das
mov
lds
mov
pop
cwtl
push
jp
ret
repnz
mov
xchg
add
std
out
inc
sbbl
adc
jno
cmpsb
scas
jb
adc
adc
mov
mov
xor
or
repz
xchg
loope
jp
in
jne
and
cmp
enter
inc
in
jl
fmull
or
push
test
fistpll
pop
pop
rcl
cmp
push
inc
cld
jns
xchg
jns
and
repnz
cmpsl
xor
inc
sti
cmpsb
icebp
sarl
push
lds
push
data16
popf
mov
outsb
enter
orl
test
adc
or
xchg
or
or
inc
push
sbb
and
cwtl
sub
inc
xlat
cmp
out
cmc
cmc
notl
push
xchg
xorl
ljmp
das
add
or
sbb
add
ja
arpl
shlb
cli
pop
cmp
popf
adc
adc
cmp
sub
and
out
arpl
repz
mov
lods
mov
or
inc
fxrstor
icebp
jmp
push
adc
je
mov
and
sahf
testl
les
pop
or
adc
and
push
insl
movsb
sub
je
loopne
ret
inc
sub
in
sub
mov
sbbb
rol
test
mov
mov
sti
imul
dec
roll
push
xor
ljmp
jnp
mov
loopne
cmpl
ja
mov
add
pop
jae
jbe
pusha
out
mov
bound
in
sahf
shrl
mov
jnp
lea
loop
push
fldt
bound
or
jnp
cwtl
frstor
mov
sti
cwtl
jnp
xor
cli
xchg
adc
or
rcrl
xchg
pop
dec
cmp
stos
in
xchg
cwtl
jns
sar
pop
mov
add
sti
out
sahf
lods
cmp
jnp
cmp
sub
test
xor
dec
std
add
popa
lock
jge
fisubs
or
push
int
dec
mov
cmpsl
shlb
mov
in
jne
sub
call
sub
mov
mov
and
adc
pop
repz
out
in
imul
mov
inc
aam
mov
sub
sarl
sarb
pop
mov
rcl
inc
push
lcall
xchg
sahf
bound
ficompl
in
ds
data16
mov
mov
pop
jg
leave
mov
sbbl
enter
loopne
inc
add
or
andl
push
out
out
jno
iret
mov
jle
xchg
pushf
cli
jl
imul
ljmp
psubd
insb
mov
cs
lret
cltd
xor
aas
mov
hlt
cmc
cwtl
xor
loopne
imul
mov
inc
mov
sub
and
test
mov
pop
push
lahf
jmp
rclb
lahf
stos
adc
jnp
add
inc
add
mov
test
sub
movsl
test
push
loopne
inc
dec
xor
xor
adc
loop
fcomps
ss
sbb
cmpb
or
lcall
inc
adc
mov
adc
mov
or
push
cltd
loop
andb
fstl
test
fnsave
je
xor
or
add
shl
in
dec
stos
or
std
repnz
add
lods
int
movsl
int
fcomp
inc
mov
xor
test
test
sbb
addb
sbbb
mov
in
movl
lods
adc
ja
sarb
mov
pusha
loopne
frstor
xor
insl
icebp
insl
outsb
loopne
fnstcw
lds
inc
sub
add
js
and
ds
lods
popa
cmc
cli
jp
push
shlb
stos
mov
jle
es
jl
mov
mov
jnp
jle
stos
mov
loope
sub
or
in
sub
ret
or
mov
stos
xor
xchg
or
es
ds
insb
mov
scas
dec
in
adc
je
add
sti
call
xchg
ljmp
xor
jl
es
addb
dec
xchg
outsb
mov
iret
lds
mov
out
push
idiv
cmc
and
test
jo
jne
arpl
popa
xlat
mov
repnz
stc
cmc
mov
mov
or
popf
xor
out
dec
aad
orb
pop
sub
jb
adc
lret
jns
scas
sub
mov
mov
andl
lret
jmp
jmp
add
push
movsl
fcmovnbe
cltd
divps
pop
mov
pop
outsb
sub
pusha
mov
inc
and
adc
dec
bswap
lcall
jge
pop
es
sbbb
or
dec
loope
insl
callw
adc
push
and
and
aam
insb
imul
adc
ss
rolb
mov
pop
inc
mull
fcom
gs
clc
inc
stos
or
mov
xor
mov
cld
test
jne
pop
aaa
jnp
lods
jne
cs
push
in
dec
mov
lds
cmp
js
xchg
cmpsl
cwtl
data16
bound
ljmp
lret
das
sahf
mov
xchg
int
outsl
test
xlat
dec
and
mov
mov
pop
jb
sub
pop
inc
ret
ds
sbb
pop
movsl
aad
xor
cld
out
dec
cmpsb
clc
aam
out
inc
push
loope
adc
xchg
jnp
fwait
scas
jnp
out
popa
inc
mov
daa
pop
aad
stos
into
imul
and
dec
mov
fbld
ds
in
daa
fldl
sub
mov
ss
add
insb
out
imul
xor
mov
adc
and
and
and
inc
xchg
or
xor
dec
sub
data16
add
inc
push
movsb
in
mov
adc
jle
push
iret
lods
aaa
outsl
fwait
test
sti
out
lea
xlat
arpl
mov
sbb
xchg
repz
fnsave
out
rcrb
pop
es
mov
adc
jmp
test
jmp
pop
inc
sub
jne
push
dec
arpl
adc
repz
lahf
loop
cld
hlt
jg
nop
mov
mov
mov
das
out
stos
int3
out
cmpsl
xchg
pop
pop
lds
inc
hlt
cmp
inc
out
sub
scas
mov
repz
jns
xor
mov
je
pop
sub
rol
mov
sub
std
lods
daa
fstl
jg
sbbb
adc
rcl
sbb
daa
push
adc
mov
or
mov
cmpsl
test
leave
lret
cld
pop
fwait
pop
movsb
dec
aad
jecxz
aad
xchg
aad
jmp
pop
mov
fmuls
test
or
push
insb
in
sub
mov
pop
adc
enter
cmpsl
mov
inc
push
mov
or
pop
pop
in
mov
sub
jns
dec
and
inc
jnp
or
aad
cmc
movb
jle
jno
test
je
mov
clc
push
lods
mov
fsubl
fdivrl
imul
cmpsl
icebp
sub
jecxz
loopne
lea
addr16
imul
dec
js
xchg
lcall
ss
sbb
and
adc
push
out
loope
lock
xor
sbb
xor
adc
je
push
xchg
out
std
mov
inc
loopne
test
mov
pop
inc
pop
add
push
shl
pop
adc
mov
and
fs
dec
or
js
mov
add
not
or
in
arpl
fstpt
fdivs
fistps
jle
iret
stos
sub
js
jne
data16
icebp
enter
fisubs
adc
clc
push
xchg
scas
sahf
push
inc
xchg
mov
in
out
pusha
and
lea
nop
and
in
push
jge
adc
jle
aas
push
scas
xchg
les
outsb
out
adc
mov
push
add
mov
push
das
push
not
mov
jecxz
fs
jge
cld
xor
insl
lods
cmp
mov
scas
pop
mov
sbb
out
push
leave
call
or
cwtl
cmp
mov
push
sbb
ror
sbb
rclb
xor
inc
mov
scas
add
sbb
fidivl
ficompl
xor
jns
jp
ljmp
push
lods
mov
pop
stos
pop
jle
add
sub
loope
dec
and
fs
test
iret
sbb
in
fldt
adc
adc
and
jb
xlat
rorl
bound
xor
pop
adc
daa
test
test
jb
leave
loop
mov
mov
jae
cmp
lea
aad
pop
ds
ds
mov
stos
xchg
push
fstpt
inc
cmp
add
ja
dec
pop
fwait
mov
cmp
xor
cmpsl
sub
xor
or
jae
and
pop
mov
pusha
in
mov
test
mov
test
inc
outsb
sub
not
sbb
add
movsl
add
cmp
adc
pop
fcoml
push
push
push
ret
mov
and
faddl
xchg
mov
xor
jge
pop
pop
or
out
scas
pop
in
int3
pop
jle
out
sbb
hlt
icebp
nop
mov
pop
jg
sahf
fbld
das
mov
cmpsl
inc
out
jg
push
xchg
xor
mov
inc
out
shr
or
jno
xor
ja
gs
and
adc
out
pusha
mov
arpl
mov
call
xlat
por
mov
push
jge
les
loopne
aas
stos
mov
scas
cld
sti
imul
gs
rcrl
mov
sbb
or
scas
xchg
inc
dec
xchg
xchg
pusha
mov
popf
mov
insb
jl
cmp
adc
xor
dec
inc
ficompl
loop
and
rcrb
jg
test
jmp
nop
inc
loope
ret
loope
xor
shr
cmp
inc
popaw
push
daa
add
inc
mov
sbb
pop
xor
jnp
xchg
call
mov
aas
insl
or
sbb
call
bound
add
ror
notb
jae
mov
sbb
inc
stc
out
fucomi
inc
sbb
call
pushf
bound
daa
dec
mov
mov
sbb
js
fwait
jle
mov
repnz
stos
in
or
inc
js
xor
jmp
jmp
jmp
push
sub
push
and
syscall
mov
add
bound
in
xor
inc
les
lahf
xchg
leave
enter
jno
push
mov
inc
xchg
mov
outsl
dec
jae
xchg
sbb
pop
or
push
mov
dec
inc
mov
test
mov
adc
adc
sahf
pop
push
pop
push
push
insl
dec
dec
daa
lods
xor
mov
loopne
adc
mov
insl
xchg
stos
xchg
xchg
stos
repz
fcomip
jecxz
fimull
push
je
dec
das
mov
pop
mov
push
ss
mov
jge
xchg
xor
in
sub
arpl
hlt
into
dec
lret
xchg
dec
out
mov
xchg
and
xor
sbb
ret
mov
in
jb
and
mov
xchg
out
sub
or
add
xchg
pop
dec
jmp
add
xor
cmp
and
mov
add
cmpl
or
pushf
mov
lcall
out
sub
leave
pop
insb
mov
out
fldcw
repnz
dec
cmp
push
or
push
ss
push
xor
test
adc
bsf
das
mov
and
lock
sbb
insl
jg
rclb
dec
pop
js
push
fiaddl
aas
test
and
inc
loopne
sbb
add
sahf
push
dec
divb
clc
xor
mov
out
lahf
in
aad
add
and
es
inc
lcall
repz
dec
faddl
fimull
lcall
cmpsl
mov
xchg
pop
push
mov
loopne
add
fldl2e
std
insb
or
stos
fs
aam
andb
adc
sbb
jo
pop
cmp
sub
out
je
cmpsl
xchg
xor
fcmovnbe
ret
pop
jg
adc
sub
test
mov
aaa
data16
jb
lods
lea
dec
push
adc
movb
call
imul
mov
xchg
inc
jmp
jae
mov
or
mov
add
movb
dec
pop
xchg
push
mov
lcall
cmp
scas
jns
outsl
into
dec
push
idiv
adc
adc
enter
dec
pushf
lcall
dec
into
mov
xor
clc
cmc
fs
mov
movsl
xor
fadds
and
mov
jmp
or
movsb
cmp
push
sahf
ror
xor
repnz
add
dec
xchg
dec
jns
jp
test
int3
pop
stos
lret
xor
jnp
jl
push
pop
nop
and
pop
clc
pop
pop
pop
add
in
scas
pushf
adc
dec
jbe
add
lret
hlt
loope
xor
cmp
test
out
fs
xchg
loopne
dec
movsb
lods
mov
pop
inc
push
or
or
jb
inc
gs
scas
lock
sbb
jecxz
out
insl
rclb
and
and
sbb
loop
imul
repnz
pop
jge
adc
mov
hlt
je
pop
adc
std
pusha
mov
push
jns
bound
or
dec
add
outsb
fs
xchg
inc
add
les
dec
inc
add
rcll
fnsave
mov
jge
and
jl
and
sbb
fstp
dec
cld
sahf
dec
jnp
sub
xor
mov
mov
hlt
addr16
rcrb
int
mov
inc
xchg
pusha
shr
adc
jb
testl
mov
scas
out
dec
cltd
mov
aas
ficoms
and
ret
inc
ss
rorb
jae
ficompl
xor
lret
or
lds
pop
aam
xchg
js
mov
dec
inc
xchg
cmp
mov
daa
push
xchg
push
mov
outsb
cmp
mov
inc
jg
mov
jo
popf
push
dec
push
sbb
fidivrl
fldcw
es
dec
sub
loop
adc
push
in
dec
int
ret
or
pusha
xchg
cmp
lock
adc
aas
xor
std
out
xor
rcr
cmpb
pop
in
cld
cwtl
push
mov
jl
xchg
mov
jo
sub
push
leave
iret
add
push
scas
push
add
push
sub
mov
or
sub
lods
jno
cmp
mov
fs
sbb
jnp
es
movl
test
std
xchg
adc
push
jge
mov
fadd
cmp
inc
fistl
mov
insl
cmp
inc
add
imul
hlt
push
dec
jecxz
dec
dec
and
xor
rolb
jmp
mov
rolb
negl
daa
lret
sbb
push
jae
inc
cli
mov
inc
cli
out
sti
or
add
rclb
jns
call
out
sbb
popa
pop
xor
ljmp
cwtl
sub
adc
stc
loopne
push
sub
jb
in
jge
aaa
insb
adc
mov
call
sbbl
or
xor
outsl
repz
lock
lahf
pop
int
in
fcmovu
iret
fbstp
test
xchg
data16
add
and
negl
stos
das
sbb
mov
push
test
dec
sub
mov
and
je
je
push
sbb
aad
pop
cmp
cmpsb
out
inc
aas
testb
cmpsl
dec
push
filds
mov
jne
xor
js
enter
lahf
dec
je
mov
inc
bound
ja
pusha
mov
lods
int3
adcl
hlt
lock
add
jecxz
test
in
lret
bound
outsl
or
cmc
push
mov
sub
sub
imul
push
inc
push
or
in
clts
int3
inc
push
and
xchg
cmp
mov
mov
xchg
xor
clc
jns
mov
aam
sbb
xchg
sahf
lea
iret
add
pop
xchg
test
in
mov
movsl
ficompl
loopne
lods
je
js
and
mov
pop
xor
xchg
dec
xchg
cmpsl
dec
pop
xor
sti
add
in
ja
push
ret
mov
sbb
lahf
or
addr16
or
jecxz
mov
lahf
orb
sbb
add
push
sbbb
push
addl
jl
sub
pop
push
mov
mov
std
mov
xor
jns
subb
addr16
mov
adc
add
insb
std
fs
sbb
scas
xor
sahf
insl
inc
push
pop
mov
inc
mov
push
fldcw
adcl
imul
jae,pt
test
add
dec
outsb
cmpl
inc
cmpsl
cmp
dec
fbld
je
mov
idivl
imul
icebp
lahf
insb
cmp
bound
scas
test
int3
mov
pop
jno
stc
sbb
lods
ja
jns
xchg
dec
adc
push
int3
mov
stos
stos
loop
dec
jno
test
mov
lods
jmp
out
leave
adc
inc
inc
jg
sub
jl
inc
subl
cmp
jg
adc
mov
outsb
cmpsl
xchg
xchg
movsl
and
fucom
pushf
sub
push
add
fcmovu
lods
flds
push
std
sbb
mov
aad
pop
sub
push
and
add
sub
lahf
call
test
and
dec
jne
xlat
or
movsl
push
jo
jno
popf
sub
jp
or
imul
dec
call
rcl
push
mov
das
mov
sub
lahf
mov
rclb
mov
dec
xchg
popf
ret
and
cmp
leave
lcall
pop
push
sub
push
jp
ret
mov
lds
sbb
insl
scas
mov
cld
sbb
ret
test
xor
out
jp
mov
pop
cmp
mov
jmp
mov
and
sbb
jbe
adcl
loope
lret
popf
lock
cmpsl
ljmp
adc
bound
mov
out
dec
add
push
cmp
movsl
pop
int
mov
es
jnp
fisttpll
icebp
lods
lcall
dec
jmp
stos
ret
mov
add
pushf
push
ret
dec
cmp
sar
or
pop
adc
ss
nop
cmp
jns
scas
jmp
add
xor
adc
popa
mov
rep
xchg
sbb
sbb
loopne
xor
or
pop
dec
test
add
lret
in
mov
scas
insl
sbb
outsb
icebp
or
ret
mov
xchg
adc
test
push
add
pop
ljmp
adc
es
jge
scas
aam
xlat
loopne
dec
pop
cmc
movsl
inc
int3
daa
pop
and
in
fadds
cmc
xlat
stos
gs
add
or
stc
sbb
idivl
daa
mov
sub
pop
popf
adc
ss
push
loop
les
pusha
fcmovb
inc
dec
pop
cmpsb
mov
enter
out
mov
js
ss
sub
push
dec
out
inc
test
sub
popl
lock
ds
jbe
mov
aad
decb
xchg
mov
insb
xchg
cmpsb
int3
dec
aam
adc
andl
pusha
rclb
test
xchg
shll
jle
xchg
push
jp
adc
sbb
jle
pop
add
fidivrs
dec
jg
cmp
or
cs
ds
inc
xor
into
jmp
test
ret
or
push
test
push
and
and
add
adc
jle
out
jnp
cmp
negl
pop
mov
sub
ja
push
dec
aam
enter
mov
mov
mov
mov
mov
scas
cmpsl
mov
inc
mov
and
gs
arpl
call
rclb
mov
adcb
dec
int3
idiv
mov
out
add
inc
cwtl
loopne
mov
into
jecxz
pop
ds
aas
xor
outsl
adc
outsl
lret
fnstsw
xchg
inc
mov
sbb
pusha
mov
jns
dec
jb
push
aas
add
sub
ret
sbb
subb
lods
sub
stos
lods
adc
dec
outsl
or
clc
js
sub
dec
pop
mov
loope
jbe
xchg
push
mov
lock
push
push
int
and
push
xor
cmc
stos
xor
lds
out
jb
xchg
and
loop
call
push
imul
std
aas
shlb
out
push
imul
add
xor
sub
lea
xor
push
popf
into
cld
jmp
movsb
shrb
fnstenv
cld
imul
jge
or
inc
and
jp
sub
inc
fdivrs
bound
jecxz
mov
insb
and
lret
out
mov
add
lret
inc
push
pop
mov
adc
add
outsl
insb
inc
fidivs
ljmp
sbb
inc
sbb
gs
cli
xor
jp
mov
push
push
int
popf
push
mov
sbb
test
movsl
xchg
les
jle
push
sub
mov
cmp
not
mov
cmp
inc
aad
in
xchg
cmp
fnstsw
mov
fnstenv
inc
mov
sub
push
outsb
jecxz
ljmp
aad
lret
lods
cld
out
jbe
push
xor
push
fcmovnbe
fiaddl
cmpsl
iret
jge
xor
mov
adc
xor
ficoml
push
lret
pslld
loopne
inc
mov
or
rcrw
out
stos
repz
dec
mov
inc
subl
push
pop
pop
dec
lds
mov
or
and
mov
push
mov
fldenv
mov
fcmovnu
sbb
int3
pop
mov
adc
insl
inc
decl
add
mov
shrb
lods
adc
sarl
dec
sbb
dec
int3
imul
pop
add
mov
sbb
in
push
jae
xchg
pop
pop
rclb
iret
cmp
mov
jns
int
inc
cmpsb
mov
adc
sub
rorb
sti
add
cs
shrl
cmp
insb
lahf
fidivl
cmc
add
mov
add
cli
xchg
push
std
inc
ror
push
push
ficomps
cltd
mov
jne
mov
fmull
loopne
pop
aas
xor
cmpsl
divb
loope
or
out
pop
sahf
data16
in
sahf
mov
leave
out
nop
push
add
outsb
add
mov
mov
ds
inc
or
ja
dec
int3
and
rolb
testl
cmpl
pop
mov
mov
dec
mov
pop
arpl
or
sbb
add
repnz
xchg
jns
and
insl
ret
cmp
fs
lock
into
je
mov
xlat
mul
test
inc
mov
cld
sbb
mov
xchg
push
cli
xor
add
sub
mov
sahf
or
xor
adc
or
sti
add
dec
repz
sub
cwtl
in
xlat
sbb
mov
cld
jg
hlt
in
cs
pop
fldt
and
jb
mov
lret
push
sub
fisubrl
cmpsl
lahf
add
inc
fiaddl
or
mov
roll
inc
xchg
add
cmpsl
jno
insl
or
inc
shll
lret
ljmp
mov
in
xchg
xchg
jbe
gs
sbb
jmp
cltd
dec
orl
test
lcall
aaa
jno
dec
xchg
inc
jb
int
adc
sub
ret
lods
xchg
xchg
int3
jno
cmp
xor
mov
inc
mov
pop
fs
mov
inc
in
mov
pop
push
fmuls
subb
fdivrs
imul
sbb
rcl
inc
and
mov
mov
mov
loop
mov
jl
sub
sti
iret
ss
add
ljmp
inc
xor
setae
popf
pop
pushf
push
movsl
jmp
shll
jne
push
stc
inc
adc
push
mov
ret
ljmp
cmp
pop
push
push
xlat
adc
and
fdiv
roll
xor
dec
sbb
leave
mov
mov
xor
test
lods
pop
dec
scas
fstl
mov
pop
dec
int
mov
mov
loop
mov
xchg
mov
mov
js
fadds
add
jbe
xchg
jb
ds
or
lahf
ss
mov
std
imul
mov
cmc
loopne
sbb
add
sbb
scas
and
dec
jns
xchg
adc
mov
inc
repnz
mov
filds
push
push
loope
adc
inc
lret
cltd
cmp
les
sub
sbb
adc
push
jnp
sbb
xchg
aaa
dec
test
sub
es
sbb
mov
xchg
fcoms
mov
jae
xchg
xchg
mov
xchg
mov
adc
adc
mov
push
inc
cwtl
jns
cld
mov
dec
fldenv
icebp
and
xchg
lret
xchg
shll
pop
test
jecxz
aaa
je
cld
jmp
dec
lcall
xchg
push
jp
mov
int3
aam
dec
xchg
mov
sbb
mov
mov
lret
pushf
lods
mov
sbb
mov
stos
sbb
xchg
pop
jno
leave
ret
adc
push
cmp
out
hlt
mov
cmp
push
fcompl
or
ds
push
fbstp
push
repnz
fnsave
pop
lock
adc
pop
xchg
aaa
inc
mov
cmpsb
xchg
add
cmp
test
push
sub
ja
sbb
xchg
loopne
in
add
out
and
mov
pop
test
xchg
imul
mov
adc
pop
jg
xor
push
cmp
idivl
xor
les
cmp
sbbl
fnstsw
ja
push
mov
or
lret
mov
or
mov
out
es
out
aaa
rorb
mov
lcall
jo
or
pop
nop
loope
leave
push
push
negl
add
daa
sub
subb
call
insl
in
inc
cmp
mov
add
xchg
arpl
sub
dec
push
mov
outsl
test
mov
lret
cmpsb
jp
in
mov
xchg
push
xchg
cltd
int
iret
push
pop
mov
lcall
lds
sar
fisttps
xchg
mov
clc
cmc
sar
dec
mov
lea
shl
jno
pop
int3
in
lret
mov
cmp
mov
mov
in
fwait
nop
fsubl
lret
subb
stc
lahf
xchg
cs
push
pop
mov
movsl
pop
out
insl
imul
jbe
xchg
sub
and
xor
sub
and
cltd
lret
sub
mov
add
jno
push
pop
scas
fcoml
shlb
sbb
sub
mov
push
fldt
loopne
mov
xor
push
dec
and
add
mov
add
mov
das
push
mov
out
or
mov
inc
mov
pop
imul
imul
scas
xchg
sbb
mov
push
mov
cld
pop
dec
mov
add
sbb
dec
xchg
insb
pusha
repz
dec
shrl
cld
repz
lret
rcrb
push
mov
push
lock
mov
mov
sub
sub
movsb
popf
jmp
xor
movsl
ds
or
pop
cmpsl
in
xlat
repz
or
or
subb
imul
mov
xor
push
lea
jmp
daa
push
xor
repz
jge
mov
sub
andl
jo
rorl
popf
mov
pop
sar
add
sbb
rcrl
repnz
mov
mov
mov
xchg
pop
mov
and
push
fisubrs
push
aaa
sub
mov
pop
push
addr16
cmpsb
ret
mov
push
pop
cmp
hlt
hlt
inc
push
cwtl
ret
aaa
mov
push
xchg
or
iret
test
dec
cmp
mov
lods
cmp
sub
icebp
push
int3
dec
pop
rol
push
dec
pop
aaa
arpl
loopne
cmp
loopne
scas
inc
ror
adc
das
xchg
insl
sbb
mov
int3
jmp
pop
decl
inc
mov
pop
jno
sub
xor
mov
add
sub
jb
jecxz
outsl
inc
imul
daa
ja
insb
push
popf
outsb
loope
mov
cmp
ret
jo
cli
lret
pop
mov
mov
cmp
lds
push
and
jmp
popf
push
movsb
jl
cmc
jmp
lea
push
shl
aam
push
pop
push
les
test
and
addl
rcll
pop
ss
or
out
dec
adc
jo
lock
lock
pop
scas
push
mov
scas
add
imul
hlt
xchg
add
push
mov
in
jge
in
outsl
push
mov
or
xorl
mov
aas
mov
pop
add
shll
inc
iret
scas
rorb
xchg
push
xchg
insl
mov
outsb
lahf
add
shlb
add
out
dec
in
mov
mov
and
repnz
jp
pushl
pop
dec
jl
fwait
pop
mov
xor
mov
mov
sti
in
outsl
imul
sub
push
ror
jl
leave
xchg
loopne
arpl
pusha
pusha
out
stc
rorl
add
jne
hlt
mov
dec
inc
testl
pop
adc
adc
js
ss
cmpb
daa
adc
mov
mov
aad
pop
into
subb
std
push
push
adc
loop
lods
stc
fiaddl
popa
ljmp
lds
imul
sub
mov
inc
inc
sub
mov
movsl
inc
xor
loope
and
dec
sbb
out
scas
test
jbe
xor
adc
sub
ret
add
clc
cmpl
mull
es
push
ja
or
test
add
arpl
lahf
jno
adc
and
das
mov
jnp
dec
lret
push
dec
lock
sbb
outsb
mov
insl
hlt
sub
cmp
xor
and
or
lret
xor
pop
sbb
leave
cmp
movsl
jbe
lcall
into
stos
aam
jecxz
mov
andb
or
fcom
in
scas
imul
mov
into
stos
pop
int
loope
inc
test
rcll
inc
xor
stos
xorl
fcmovnbe
sub
push
loopne
and
test
sbb
inc
pop
clc
push
arpl
mov
xor
adc
add
mov
outsb
pushf
int
xor
inc
scas
cmp
jb
jno
adc
push
test
pop
out
push
frndint
inc
add
dec
pusha
inc
mov
sahf
enter
mov
rolb
mov
daa
xchg
ror
sbb
adc
jae
jp
mov
out
ss
dec
test
hlt
cmp
scas
mov
jae
pop
push
dec
repz
repz
outsb
mov
movsl
je
movsl
es
hlt
jmp
aam
xchg
pop
dec
fsts
lock
cmpsl
pop
loope
sub
mov
shlb
insl
xchg
mov
jnp
adc
mov
cmp
pushf
or
push
idivb
mov
mov
push
lods
push
lahf
add
dec
loop
sbb
cmp
fwait
psubb
cmpsl
mov
ljmp
cmp
push
sbb
lret
pop
mov
fistpl
mov
pop
test
pop
mov
sub
and
add
enter
fs
jae
sbb
pushfw
dec
jb
pop
insb
dec
xor
cmpsb
stos
nop
cmp
repnz
mov
cmp
push
jno
or
xor
in
xchg
sbb
call
mov
jmp
push
aaa
sbb
mov
test
jge
adc
xor
fiaddl
cli
jmp
dec
cltd
dec
fcmovb
adc
leave
call
sub
push
dec
ljmp
in
sub
int
sbb
gs
jge
jns
sub
mov
stc
fnstsw
in
fcmovb
cmpsl
out
and
cmp
flds
and
das
cmp
xor
pop
jge
enter
mov
imul
sub
out
sub
or
cmpsl
mov
bound
dec
or
mov
nop
inc
mov
test
xchg
les
in
cli
jb
es
or
inc
or
xor
inc
jnp
aas
push
xchg
inc
jns
push
movl
ja
scas
vcomisd
in
cld
aam
pop
inc
aas
mov
aam
xchg
outsb
call
sub
lods
or
mov
sbb
in
adc
call
sbb
scas
lahf
clc
sub
xchg
ljmp
fwait
push
dec
cmp
add
and
sub
out
xor
stos
pop
in
jae
gs
mov
xor
or
inc
in
jge
emms
jbe
lock
xchg
cmp
or
or
scas
or
xchg
dec
pop
or
or
and
mov
and
insb
lods
pop
pop
nop
loope
jmp
stos
mov
push
adc
dec
sub
jg
shr
adc
sbb
imul
push
xorl
repnz
movsl
push
xchg
pop
rep
in
loop
testl
jg
aam
xchg
adc
push
sub
movsl
fwait
int3
cli
xlat
fidivrs
pusha
jmp
hlt
nop
cmp
in
test
int
jo
movsb
int3
pop
sub
xchg
jo
add
sub
daa
jg
inc
mov
xor
packuswb
inc
mov
jge
ljmp
mov
mov
fwait
add
imulb
sbbl
dec
loop
std
mov
movsl
and
cmp
cwtl
add
call
je
xor
adc
ret
int3
push
sbb
push
jmp
inc
in
sub
fdiv
jp
stc
fiadds
jg
mov
xchg
xor
les
add
pusha
push
ret
xor
in
mov
push
in
mov
xchg
bound
xchg
mov
and
pop
scas
outsb
aam
mov
mov
xor
mov
mov
rcll
xor
add
sbbl
sbb
movsl
mov
xchg
cmp
mov
test
lods
ret
lds
imul
or
call
jo
or
daa
push
inc
outsb
pusha
xor
ljmp
stos
xchg
mov
jnp
test
scas
sbb
adc
out
jae
loop
into
push
fldl
mov
subb
and
mov
ja
or
cmpsl
lcall
iret
in
divb
and
add
mov
into
in
pop
mov
add
xchg
sub
in
stc
or
or
iret
call
mov
andl
es
sarl
pop
imul
aad
mov
pushf
add
pop
push
pop
lock
call
aad
scas
or
sub
sti
in
mov
and
shrl
push
jb
fcompl
or
inc
cmp
or
orb
scas
inc
push
dec
mov
lock
adc
popf
stos
imul
dec
bound
mov
cmp
push
inc
lea
frstor
push
ljmp
sahf
inc
jo
adc
scas
lock
adc
xchg
push
jb,pn
out
push
mov
mov
ficoms
shrl
adc
inc
lock
jne
insl
fcoml
in
in
xlat
adc
mov
outsb
push
jne
sub
sbb
dec
sbb
andb
mov
jo
xchg
sbb
sbb
idivl
rcrl
lret
xor
lret
mov
cmp
mov
jl
pop
pop
mov
pop
mov
out
test
notl
lods
mov
fcomi
jns
mov
pushf
xor
call
xor
popf
fdivl
add
mov
mov
stc
mov
cmp
daa
mov
cld
scas
push
sti
ret
arpl
mov
cmpsb
lret
sub
ljmp
sbb
iret
jge
ja
pop
xchg
fildll
stos
pop
or
jecxz
add
mov
push
push
xor
lods
lahf
cwtl
xor
adc
cmpl
push
enter
leave
mov
and
xor
mov
sbb
adc
and
aas
dec
popa
frstor
and
dec
push
je
insb
into
mov
mov
addb
mov
adc
lea
inc
andnps
dec
add
jp
mov
imul
decb
daa
popf
dec
sub
fildll
sbb
jno
xor
sbb
and
pusha
rcr
pop
repz
add
xor
mov
out
jecxz
dec
pop
pushf
stc
pop
cmp
sahf
pop
add
mov
dec
lahf
aas
das
ja
and
sub
femms
dec
inc
in
jle
xor
loopne
cld
xchg
inc
push
jmp
stos
loopne
sbb
test
sar
in
mov
or
jl
pop
sahf
push
mov
add
fisttpll
popf
lret
pop
sub
or
sbb
xchg
mov
and
mov
adc
lahf
bound
jno
gs
movl
out
sbb
cmp
adc
and
test
leave
aad
push
push
dec
aam
pop
push
mov
fcompl
pop
mov
test
out
push
push
pop
es
xchg
aas
mov
or
xchg
sbb
ja
push
ljmp
sbb
mov
les
jge
xchg
mov
adc
out
adc
add
xchg
sub
push
sbbl
jne
mov
lcall
xchg
fsub
or
cltd
lcall
out
mov
int3
cmp
popa
cmp
ret
dec
shl
xorl
mov
adc
dec
int3
faddl
mov
fs
pop
popa
inc
jge
jle
fcoms
cli
inc
cmp
and
imull
out
aam
sti
xor
pop
add
fimull
adc
sub
jle
mov
lds
lret
pop
pushf
jns
push
cmpsb
mov
pop
push
aas
sahf
jp
sbb
mov
push
sbb
test
loop
inc
ret
iret
jge
cmp
ficomps
or
push
outsl
xchg
fdivl
fldt
sub
push
pop
popa
mov
ficompl
jne
rcll
add
mov
inc
shr
out
mov
cmpb
scas
es
xchg
aam
iret
dec
cmp
fwait
push
mov
push
sbb
sbb
mov
int
movsl
in
xchg
mov
push
sbb
dec
add
arpl
xchg
loope
jns
sub
sub
or
fstp
push
xor
out
test
ret
hlt
bound
je
xchg
mov
lret
mov
mov
bound
jecxz
inc
dec
pop
lahf
and
fldcw
dec
jno
movsb
iret
fwait
add
lret
dec
pushf
roll
das
add
mov
xchg
sbb
sub
les
idiv
lds
hlt
jmp
jl
inc
push
loopne
aaa
mov
xchg
mov
sbb
test
test
dec
xor
addr16
xor
ret
sbb
push
jle
icebp
fdivr
push
pop
pusha
dec
jmp
or
ss
aad
push
xchg
mov
mov
push
inc
lret
sub
add
or
adc
push
xor
lcall
jae
fdivrl
repz
or
xor
jno
push
sub
mov
mov
les
inc
stos
xor
leave
test
mov
clc
dec
imul
xor
mov
ret
mov
cmpsl
mov
jle
in
stc
in
sub
movsl
mov
adc
add
jg
dec
jmp
pushf
popl
and
jg
xchg
cs
jp
in
shlb
data16
jmp
in
sbb
xchg
pushf
xchg
pushf
push
cmp
shrl
fistps
movl
or
mov
and
ljmp
sub
or
pop
mov
xor
jbe
lcall
repz
xchg
loope
add
add
sbb
insl
clc
pop
push
jge
out
pop
pushf
inc
cwtl
lds
dec
jns
ljmp
loop
pushf
jae
pop
and
push
sti
adc
addr16
pop
ror
mov
mov
rcll
mov
cmpsb
push
mov
mov
pop
scas
sbb
mov
mov
cmp
inc
hlt
je
int3
inc
adc
push
inc
mov
std
pop
test
cld
mov
test
mov
xchg
sbb
imul
add
xor
add
adc
lea
sahf
repnz
sti
fwait
xchg
hlt
cmp
push
in
fsubs
in
call
push
jnp
mov
ds
or
cmp
mov
push
push
sbb
movsb
outsb
xchg
push
inc
out
das
loop
xchg
ret
fsts
shrb
ret
lahf
add
into
jno
or
jmp
test
dec
pushf
mov
lret
call
or
call
mov
dec
icebp
enter
lret
adc
loop
ja
and
xor
mov
dec
js
sarb
jge
les
push
dec
push
pop
xchg
sbb
and
daa
imul
dec
add
mov
int
outsb
in
cmpsl
and
scas
adc
adc
shrl
mov
mov
pop
jg
jnp
fwait
pop
inc
lret
addr16
ret
xchg
lock
movsl
mov
sysret
sti
and
lret
fxch
stos
js
int
daa
jbe
jb
andb
add
xchg
stc
rolb
jo
out
pop
sub
inc
pop
mov
int
jl
jns
cwtl
sti
push
iret
add
cmp
stos
jmpw
push
xchg
jle
jge
push
fstl
imul
dec
out
scas
decl
mov
test
lods
es
mov
into
jle
or
mov
inc
push
fdivrl
mov
mov
xor
inc
fsubrl
jp
mov
lcall
int
xchg
or
les
popf
jb
cmp
inc
cmc
mov
xchg
enter
test
das
mull
aaa
mov
movsl
inc
inc
and
mov
xchg
lock
imul
and
add
aad
gs
adc
ja
adc
sahf
imul
and
add
faddp
or
out
jne
addl
inc
push
pushf
and
nop
jp
mov
and
ja
jg
leave
jmp
sbb
insb
xchg
rcll
push
icebp
aas
pop
jnp
jae
add
xchg
add
and
inc
pop
xchg
das
cmp
sti
lcall
sub
ficomps
push
push
movsb
bound
sub
scas
push
repz
into
imul
mov
sub
movb
mov
xchg
daa
sbb
push
sti
adc
mov
mov
xor
scas
xor
mov
xchg
mov
into
mov
test
div
or
insb
mov
pcmpgtw
mov
inc
jle
and
ljmp
iret
ds
mov
daa
pop
movsb
stos
daa
and
mov
dec
and
jecxz
out
stos
cmp
inc
cmp
push
xor
das
fistpll
lret
jno
pop
jb
add
stos
inc
inc
cmpsl
movsb
fnsave
mov
into
jo
xchg
fdiv
in
dec
and
mov
push
loop
or
repz
or
pop
aam
sbb
js
and
icebp
jne
cmp
enter
mov
sbb
rolb
jmp
cvtps2pi
mov
lcall
dec
pusha
fwait
outsl
sub
call
push
arpl
mov
les
mov
popa
dec
les
sbb
fsubrl
cmp
popa
lret
sbb
outsb
push
mov
les
xor
enter
sub
repnz
ret
xor
subb
bound
mov
xor
or
hlt
and
pop
ret
mov
lods
cmp
mov
fistpl
cld
stos
sbb
xchg
in
stc
and
popa
jp
dec
in
dec
pop
lods
or
fistpl
or
xor
lods
stos
lods
mov
jg
mov
push
fdiv
jns
sub
pop
and
stos
popf
jle
pop
movb
push
jo
inc
mov
xchg
dec
jbe
cmp
add
test
lea
mov
pop
inc
iret
inc
leave
push
into
pop
testb
or
and
fbld
pop
adc
mov
repz
push
std
push
movsb
xchg
xor
dec
push
mov
and
lahf
mov
cli
xchg
add
popf
jnp
ror
fcoml
pop
pop
mov
repnz
fs
scas
jo
iret
adc
sahf
iret
loop
cmc
insl
cmp
push
in
mov
jnp
stc
fcom
or
sub
aad
or
jns
sub
int
xchg
jbe
mul
ss
shlb
inc
add
and
mov
cli
pop
cs
xchg
jbe
test
push
mov
cvtdq2ps
int3
dec
cmpsb
sbbl
or
mov
idiv
test
iret
lret
aaa
lcall
cmp
jne
adc
in
addr16
sbb
fistpll
xor
xchg
cli
jnp
push
sub
mov
mov
jae
xchg
cltd
clc
and
fsqrt
add
ret
pop
jb
mov
setge
dec
aam
sbb
pop
xchg
inc
out
jg
mov
ret
insl
sahf
xor
lds
pusha
cli
filds
loopne
xchg
out
test
lcall
xor
xchg
stos
sbb
out
sti
pop
loope
push
nop
daa
das
and
xchg
cmp
cmp
js
inc
push
enter
mov
push
xor
in
jne
mov
notb
imulb
adc
movsl
lea
jmp
jle
iret
sub
push
clc
pop
fidivl
xchg
ljmp
or
mov
adc
mov
xchg
rcr
xor
xchg
xorb
push
xor
push
jne
sub
add
adcb
dec
or
andl
pop
loop
insl
xchg
jb
cmpsl
test
mov
mov
mov
clc
subb
movsl
and
xor
mov
inc
lock
loope
adc
pop
sub
jnp
leave
jge
or
pop
cld
push
and
hlt
imul
and
fldt
sbb
aas
xchg
jns
js
push
mov
mov
push
push
mov
cmc
push
xor
in
cltd
mov
nop
mov
sbb
sub
or
pop
mov
addr16
cli
xor
addl
sbb
movsb
sub
jne
icebp
iret
cmc
andl
cs
inc
sahf
jns
js
cmpsb
push
sbb
jnp
scas
rcl
nop
push
sbb
cltd
fidivrs
fwait
addl
sub
lods
pusha
jae
fwait
je
jg
cmp
or
pop
pop
mov
negb
mov
xchg
jbe
icebp
dec
fstl
js
mov
mov
ds
mov
jno
les
roll
stc
aad
and
rcrl
and
cmp
and
and
mov
loop
sahf
sbb
imul
and
insb
jecxz
xchg
lahf
jb
cli
push
outsl
gs
mov
jo
jno
popa
fwait
imul
dec
lds
cmp
scas
sbb
lds
in
dec
cmp
lods
std
rolb
aad
dec
xor
mov
rclb
int
arpl
mov
xchg
or
push
lods
mov
cmpsl
xorb
imul
push
icebp
repz
xchg
and
xor
ljmp
ljmp
popa
sbb
mov
xor
pop
mov
mov
mov
or
stc
loopne
in
icebp
or
and
lea
mov
jle
dec
xchg
push
mov
loopne
jb
push
sub
inc
mov
mov
jecxz
inc
mov
cmpsl
popl
test
mov
add
or
aam
cmpsl
pop
sbb
xchg
mov
scas
dec
mov
pop
fnstcw
and
mov
lahf
dec
xchg
es
jns
sub
mov
adc
sub
add
xchg
xchg
out
in
push
fiaddl
pop
fdivs
shrl
xchg
int3
scas
les
ficomps
movsl
add
nop
inc
pop
and
mov
xor
pop
jmp
mov
inc
loopne
push
mov
push
dec
cld
imul
jmp
mov
sbb
imul
clc
aad
ds
leave
sbb
push
mov
xor
push
jp
scas
les
add
inc
push
repz
mov
sbb
sub
jle
dec
sahf
add
out
dec
loopne
adc
sbb
adc
mov
movsb
or
lock
lock
cmp
jo
inc
mov
andb
ficomps
lea
insb
or
loope
sarl
fcmovb
push
mov
xor
les
sahf
andb
sub
fdivl
pop
mov
mov
loope
popa
jle
mov
jnp
out
cmp
jmp
gs
ljmp
les
push
sbbl
xchg
sub
in
add
rcrb
cli
ror
push
cld
dec
xor
xor
sub
mov
push
outsw
fs
mov
jb
pusha
ss
js
subl
ror
ret
jns
rcl
or
mov
jp
stos
into
xor
jo
sahf
xchg
adc
mov
pushf
pop
fsubrs
adc
lret
xor
push
js
neg
inc
fistpl
mov
jg
clc
rolb
sbb
jl
cmp
cmpb
mov
inc
mov
pop
popf
or
js
loope
call
push
pop
je
sub
inc
jns
inc
sbb
dec
into
or
push
inc
and
sarl
mov
sbb
lods
inc
cmpsl
stos
sub
scas
push
xchg
divb
or
xlat
xor
mull
push
lds
pop
sbb
sub
push
sub
sub
rcrl
ret
sahf
into
nop
mov
out
sti
cmp
mov
dec
pop
add
test
lret
repz
fldl
cmp
out
jmp
icebp
repnz
lahf
xchg
add
cmpsb
and
dec
pop
lret
dec
test
mov
mov
mov
lret
xchg
dec
rcr
lock
and
pop
shl
int3
sub
mov
sti
jbe
cmpb
dec
je
mov
fdivrl
icebp
lds
adc
insb
popl
pop
loopne,pn
jecxz
push
xchg
ret
fs
inc
mov
hlt
pop
xor
mov
popfw
xchg
sbb
aad
lods
andl
xchg
inc
xor
xor
ds
cmpsl
popa
dec
xchg
int3
sarl
pop
cmp
int3
out
std
call
adc
adc
stos
insl
xchg
jno
push
aam
dec
mov
into
imul
daa
out
or
enter
sub
push
lods
dec
jmp
ret
es
push
cld
pop
jo
mov
pop
je
or
pop
xor
push
fldt
adc
stc
and
mov
in
stc
or
icebp
jle
adc
lods
jo
lea
push
fidivl
dec
inc
mov
outsb
xor
adc
xchg
mov
inc
pusha
jl
xchg
adc
add
shl
pop
lea
push
int3
js
outsb
jge
imul
adc
es
ficomps
ljmp
push
xchg
add
mov
dec
bound
xchg
xor
mov
lods
decl
cld
ret
orl
push
mov
jne
xor
aas
jle
mov
jb
je
popl
jmp
imul
add
sbb
dec
mov
cmp
inc
sbb
shll
sub
sbb
jns
mov
jae
mov
mov
xor
pop
stos
dec
aam
loopne
jno
mov
jne
enter
fldt
cli
aam
xchg
jp
hlt
dec
push
lods
add
sti
pushf
adc
mov
jo
push
push
and
pop
sub
out
pushl
lcall
loopne
sahf
mov
mov
daa
add
sahf
sbb
pop
add
push
sti
clc
mov
mov
outsl
popl
idiv
shll
xchg
les
rcl
dec
call
iret
jp
pop
pop
cmp
sbb
jl
fadds
addr16
loop
add
mov
js
mov
mov
mov
xchg
mov
cwtl
xchg
inc
int
jp
popa
mov
and
adc
js
mov
je
jl
push
xor
jbe
scas
push
sub
aaa
dec
or
mov
cmc
enter
jg
pop
xor
jb
ret
loopne
cwtl
add
movsb
mov
gs
ret
mov
ret
xor
mov
push
fidivs
daa
push
stos
sbb
jns
sbb
fwait
clc
arpl
test
push
iret
loope
in
jo
inc
imul
out
dec
jge
call
sbb
dec
cmp
xor
cmp
pshufw
mov
mov
inc
mov
or
mov
stc
cmp
and
xchg
mov
cmp
mov
fwait
mov
mov
fs
mov
stos
mov
ret
push
pop
ds
cmp
mov
pop
jo
movsb
push
ret
jo
cmp
pushf
sbb
pop
add
lock
ja
jns
insb
std
fcmove
inc
sahf
cltd
das
shrl
cmp
adc
es
aaa
jo
lock
loope
test
mov
rcll
pop
lods
sub
cmp
fldenv
jl
mov
ds
ja
scas
xor
ds
push
in
xor
pop
cmpsl
add
push
jbe
pop
js
and
movsl
imul
xor
out
dec
sub
jl
xchg
adc
push
pop
jg
xor
mov
idivl
daa
cmpl
cmp
mov
iret
mov
testl
stos
dec
pushf
pusha
push
in
addr16
ss
mov
arpl
popf
fdivr
repnz
push
js
push
cmp
mov
pop
xchg
int3
or
stos
pop
orb
push
and
add
xor
lahf
add
mov
inc
in
and
adc
jnp
stc
jle
lea
xor
loopne
cmp
addr16
mov
sub
jl
jecxz
outsb
cmovl
cli
movsb
fnsave
cmp
je
jmp
jg
pop
addr16
ljmp
movsl
shl
or
lcall
mov
inc
stc
lcall
dec
mov
fisubs
xor
xor
mov
and
push
scas
loope,pt
inc
das
cmpsl
or
sbb
and
dec
test
cmp
into
mull
add
cwtl
push
rcl
lock
add
nop
lahf
rolb
aam
cmpsb
clc
in
dec
push
out
int
mov
lock
aam
lock
sub
dec
dec
jno
dec
or
pop
pop
xor
cltd
xchg
imul
arpl
ffreep
sub
push
mov
lcall
xchg
push
aaa
pop
inc
jne
xchg
push
mov
into
cmp
fcmovbe
pop
fstpl
and
jp
xchg
mov
in
sub
cmpsb
dec
cmp
xchg
push
movsl
xor
jp
mov
and
imul
sbb
push
push
stos
pop
push
cmpsl
push
push
movb
in
je,pn
mov
out
lods
jg
push
punpckldq
inc
cmpsb
daa
sbb
lods
test
and
ret
outsb
sub
sbb
pop
pushl
and
jno
dec
push
scas
mov
sahf
call
jl
or
imul
mov
push
pop
subb
mov
mov
inc
dec
out
roll
leave
adcb
dec
add
sbb
xorb
fistpl
shrb
sbb
xlat
add
ficoml
stos
jnp
dec
jae
inc
incl
and
dec
xchg
sahf
cmpb
pop
mov
bound
xchg
or
mov
mov
xor
mov
push
enter
popf
inc
xchg
cmpl
xor
cmp
inc
aad
add
pop
test
pop
push
loope
push
pop
mov
dec
pop
dec
movsl
in
daa
test
stos
inc
cmp
adc
movsb
lret
inc
jnp
mov
mov
out
adc
cmp
rcrb
stos
gs
push
scas
inc
lcall
in
xor
xor
insw
imul
sahf
dec
pop
cmp
add
testb
scas
loope
fisubrs
in
pop
xrelease
mov
outsb
or
sbb
popl
sbb
inc
shrb
adc
add
jmp
sbbl
pop
sbb
xor
jmp
sub
inc
xor
and
subl
fbstp
lea
inc
cmp
xor
test
lods
dec
cmp
xchg
stos
fldenv
dec
cld
xor
mov
arpl
mov
pushw
sub
add
dec
fsts
in
pshufw
dec
inc
cmpsl
loopne
dec
pop
jo
mov
cmp
push
cli
mov
push
xor
addl
loopne
stos
xchg
movsl
sub
add
cwtl
xchg
imul
add
negl
cltd
sub
sbb
xchg
cwtl
and
gs
fnstsw
aad
jp
or
and
cwtl
sbb
sbbb
or
jb
ret
fildll
cld
or
mov
and
sub
pop
inc
mov
pop
outsb
aaa
fadd
jp
loope
sub
ja
roll
sub
lcall
fadd
daa
and
je
cmpsl
inc
xchg
xchg
stos
mov
inc
sbb
ja
mov
adc
and
push
or
cmp
mov
jnp
hlt
add
sub
xchg
jmp
cmc
es
icebp
adc
cmp
insb
iret
leave
movsb
and
dec
jo
fstps
aad
xchg
shl
mov
cmp
jb
xor
lret
jns
pop
dec
shll
xor
xor
clc
stc
pushf
pop
cmpsb
imul
test
xor
add
fstl
nop
movsl
pop
inc
sti
iret
repnz
adc
loop
xchg
subl
xchg
xor
inc
sahf
out
mov
in
mov
mov
fldt
movsb
aam
xchg
xor
enter
inc
xchg
mov
jo
insl
inc
sbb
in
xlat
jl
clc
sbbl
dec
aaa
iret
add
ret
sti
dec
jb
in
jbe
cmp
insb
ficompl
push
cmpsb
imul
jno
push
lea
rclb
in
push
shrb
push
inc
push
in
imul
movsb
sbb
inc
lods
adc
mov
mov
cmp
cmpl
adc
roll
pop
rcrb
jnp
fldcw
clc
hlt
fcoml
jae
xor
push
push
daa
mov
insl
lds
xor
dec
jg
mov
pushf
jecxz
mov
xchg
lds
jb
push
mov
xchg
outsb
fcomps
cmpsl
jle
mov
je
ds
xorl
lahf
or
lahf
insl
lods
xlat
fistpl
adc
fs
fcomi
clc
inc
loopne
call
dec
sarb
fidivl
movsb
jl
pop
scas
or
sbb
in
and
xchg
lea
movsl
mov
sahf
jae
sub
lds
cmpsl
push
adc
adcb
stos
inc
bound
ret
imul
rcl
mov
aad
lahf
jno
push
push
jge
dec
inc
std
pop
sbb
sub
mov
pusha
cli
inc
jno
push
push
movsl
jge
mov
xor
fstl
or
jmp
pop
mov
mov
pop
fwait
xor
ds
ret
loopne
jecxz
repnz
aas
cli
push
les
push
pop
sbb
mov
fistps
xchg
and
mov
fwait
xchg
push
xchg
inc
mov
mov
or
out
sub
dec
jbe
and
incl
subb
xlat
xchg
and
and
cwtl
push
mov
xor
mov
mov
xchg
test
push
add
aam
dec
mov
insl
imul
cmp
inc
scas
aaa
adc
pop
sbb
push
jl
add
sahf
dec
ret
pop
es
aas
dec
sub
cmp
lret
rcl
sub
imul
add
push
lret
xchg
lds
pop
aas
into
mov
jl
cld
shrl
das
jg
lret
daa
adcl
xchg
mov
subl
div
shll
xor
test
inc
xchg
or
leave
mov
data16
je
in
pop
loopne
fcompl
les
sub
jo
mov
xor
adc
cmpsl
sbb
clc
iret
dec
sbb
cmpsl
sub
and
mov
lods
sub
mov
xchg
adc
sub
push
inc
cld
add
cmpsl
add
leave
add
sbb
cli
mov
mov
mov
dec
pop
cmp
fucom
cmpsl
fnstsw
push
xchg
in
in
imul
es
and
add
dec
fists
sbb
sarb
lcall
pop
lahf
add
inc
clc
test
sub
test
ret
or
cmp
adc
ret
mov
mov
inc
movsb
cmp
ss
lods
in
dec
jge
mov
mov
sti
add
iret
in
bound
mov
test
mov
or
jp
aas
das
jnp
or
xchg
dec
xchg
dec
sub
repz
in
jle
push
inc
inc
mov
inc
pop
inc
idivl
stos
jns
shlb
hlt
filds
mov
dec
and
inc
push
and
pusha
out
lods
loop
jb
pusha
cmp
in
xchg
push
mov
movsb
xor
mov
sub
xchg
aad
add
push
das
push
stos
xor
stos
xchg
and
das
mov
aas
jno
mov
pusha
test
adc
dec
ja
pop
jge
dec
and
and
inc
and
cmp
push
sti
pop
xchg
push
push
or
xchg
adc
inc
mov
loopne
jle
pop
insl
dec
test
mov
pop
mov
ret
daa
xchg
in
out
jl
mov
rcr
ljmp
xor
nop
mov
test
push
jne
test
push
adc
jbe
jg
shl
pop
and
addr16
xchg
lahf
int
std
or
mov
out
pop
lea
mov
cld
ljmp
adc
xor
in
adc
lcall
push
daa
jmp
cmp
inc
inc
xchg
pop
lret
repz
loope
mov
enter
iret
mov
push
mov
aad
push
push
sahf
data16
cli
pop
mov
nop
jmp
dec
scas
add
cmp
loope
mov
mov
sbb
insb
add
jle
push
sti
ja
or
and
call
push
push
dec
push
popf
mov
nop
subl
sahf
js
and
cmp
fbld
loop
in
and
in
sub
pop
lahf
jmp
clc
push
mov
pop
mov
sub
in
sub
mov
sbb
aad
xchg
daa
sbb
sbb
sub
in
mov
ja
iret
test
call
leave
sbb
ja
mov
outsb
inc
push
jge
cmp
jae
icebp
cld
dec
add
into
outsl
popf
daa
mov
push
mov
sbb
cmpsl
fs
sbb
cwtl
xchg
mov
negb
in
icebp
clc
xor
push
fldenv
cmp
jle
add
mov
dec
xlat
fcomps
js,pn
add
fdivs
jecxz
xor
movsl
leave
test
pop
pop
jp
adcl
cmp
sub
pop
aam
inc
dec
gs
stc
and
psubq
call
call
pop
cmc
adc
or
mov
push
subb
jnp
loopne
out
push
inc
sub
cmpsb
and
mov
iret
xor
cmp
into
addr16
loope
and
xor
jle
dec
les
cmp
imul
shl
cmp
fldt
and
mov
test
adc
divl
test
adc
jne
sub
xor
mov
xchg
fucomip
sbb
fmuls
xor
or
cmpsl
jae
pop
mov
cltd
popa
sarb
lcall
fucompp
inc
or
inc
xor
push
cwtl
adcb
cmp
dec
jecxz
xchg
mov
xor
mov
jg
mov
mov
and
pop
mov
sbb
adc
clc
sub
cld
lods
push
xchg
xchg
mov
in
subl
rcr
dec
sbb
insl
lds
popa
xchg
sub
fsubl
mov
pop
or
roll
rcr
fbstp
xlat
mov
xchg
xor
fcmovnb
sub
jnp
mov
or
adc
pushf
cmp
sub
add
pop
js
pushf
shlb
jl
sub
cwtl
lock
in
xchg
sub
sti
push
pop
in
jb
push
fisubl
lods
add
aaa
out
pop
sub
xor
dec
sbb
adc
jnp
xor
inc
and
adc
ja
test
pop
jmp
xor
filds
fldt
stc
or
xchg
push
pop
iret
ja
jno
push
mov
ds
in
push
xor
lods
andps
movsb
dec
xlat
fsubrs
mov
or
das
inc
icebp
lret
arpl
cmp
stos
jbe
push
push
jle
push
out
fndisi(8087
xchg
xchg
pop
and
inc
pop
xor
mov
mov
xorl
faddl
cmpsl
les
repnz
jl
sbb
sub
jp
cmp
cmpsl
popf
adc
or
mov
xor
mov
insb
jne
pop
mov
push
cltd
aam
pusha
sbb
jo
xor
rol
addl
lods
sub
out
adc
pop
stos
sbb
add
pushf
mov
aaa
mov
scas
and
outsl
divb
sbb
aam
test
cs
mov
xor
mov
call
push
dec
shll
dec
out
shrl
jns
cli
and
push
or
js
mov
lods
jno
clc
mov
aam
and
mov
adcl
popa
out
fcmovbe
cld
repz
aas
outsb
pop
lcall
dec
pushf
jmp
adc
pop
push
ret
mov
into
enter
insb
inc
std
neg
hlt
pop
dec
sub
shll
dec
mov
mov
clc
pushf
int
aas
fnstsw
stos
sub
ror
mov
xor
inc
pushf
push
lods
rcrb
sub
out
pop
adc
lahf
pop
je
scas
sbb
ret
aaa
dec
jo
cmp
aam
out
push
push
mov
xchg
mov
hlt
sbb
and
int3
mov
stc
sub
dec
pop
pop
jne
and
fwait
repnz
scas
mov
adc
test
adc
push
or
pop
adc
aam
jbe
or
jno
xchg
popf
sbb
jo
mov
je
push
or
and
daa
sbb
xor
adc
pop
fsubp
dec
mov
nop
stos
rolb
inc
insb
cld
jns
jmp
xchg
inc
mov
or
dec
cltd
xchg
gs
lcall
add
mov
push
or
lahf
sarb
pop
sub
hlt
jmp
int3
insb
sub
add
les
inc
call
pop
inc
test
cmp
iret
mov
cwtl
or
popf
pop
mov
addl
sahf
mov
jo
les
lock
jle
shrl
cmp
jmp
in
dec
jmp
lahf
into
orl
and
lock
addr16
jb
loop
pop
loop
adc
rorb
sbb
js
aad
enter
fldenv
adc
pop
push
jae
pop
movsb
sbb
or
mov
movsb
jns
sbb
sar
mulb
fisubrs
fdivs
movsl
scas
fstpt
cmp
mov
push
pop
imul
dec
aam
sub
mov
in
and
or
jmp
sub
add
inc
and
xchg
cmc
sbb
test
sub
jl
ja
fmull
add
mov
xlat
xchg
jo
pop
push
sti
xchg
mov
loope
push
xchg
cltd
roll
push
inc
jle
movsb
vandnpd
pandn
rcrb
add
shrb
jp
dec
lahf
jge
in
dec
ret
jle
dec
jb
fdivrs
mov
adc
sbb
pushf
cmp
sub
mov
push
mov
pop
jo
inc
stc
mov
xchg
or
jbe
imul
xor
mov
ja
jo
adc
fildl
push
rcrb
dec
cld
xchg
xor
out
push
xchg
sbb
cmc
popf
xor
jl
stos
test
mov
xor
aam
add
and
mov
fstl
pop
dec
loop
sbb
sbb
inc
and
gs
or
mov
imul
sbb
push
ss
mov
and
xor
xor
leave
mov
or
fistps
ja
mov
in
sbb
cmp
and
fs
lahf
sbb
pop
popa
lfs
cmp
popl
insl
pop
add
mov
stos
push
std
scas
repz
push
fildl
cmpsb
lea
mov
test
mov
fmuls
mov
bound
fucomp
jbe
cmp
jl
push
push
add
ja
ret
lahf
cs
push
lcall
out
xchg
insl
in
leave
push
jmp
mov
movsl
cmp
rorb
call
jns
cli
adc
popl
mov
and
jge
lcall
lahf
loope
mov
adc
clc
insb
add
fnstcw
push
daa
sub
andl
ret
and
cmp
sbb
or
adc
push
addr16
mov
ror
aad
das
out
or
sar
into
mov
mov
in
out
rcl
xchg
jl
imul
jg
push
loop
mov
or
mov
xchg
int
sahf
push
adc
mov
popf
xchg
push
or
sub
mov
data16
les
jmp
loopne
cmp
popl
cmp
ret
cmp
and
inc
cmpsb
aas
jb
es
jge
ret
mov
push
push
addb
leave
ficoms
and
jno
dec
cmp
pop
pop
gs
test
movsb
insb
fstpt
sbb
sbb
jecxz
inc
and
fldenv
movsl
fs
xchg
push
popf
stos
rorb
mov
ret
aad
lret
sbb
push
rol
sbb
iret
and
or
rorl
andl
pop
jle
sub
xchg
imull
sarl
push
cld
sub
cli
xchg
fdivrs
pop
imull
sub
sbb
js
push
ret
push
add
adc
cli
sahf
cmp
push
and
pop
or
fimull
lea
out
fdivl
test
add
pop
lea
cmp
fstpt
push
int3
in
lods
mov
cmpl
xchg
test
and
jns
mov
push
pop
jns
popa
and
dec
cmp
inc
pushf
mov
testb
lds
cmp
xor
sti
mov
mov
movl
xchg
xchg
pusha
test
imul
jne
adc
es
mov
jae
nop
inc
add
push
rcll
mov
and
push
repnz
pop
xchg
xchg
adcl
fldt
ret
test
in
es
nop
insl
in
sub
movsl
mov
mov
sub
rcrb
iret
jle
int
mov
and
call
outsb
and
or
aas
pushf
ja
fs
out
ret
lahf
sub
or
fcmovnu
push
adc
lock
in
push
iret
or
mov
mov
or
pop
cmp
mov
jno
bound
lcall
lods
fists
orl
movb
scas
push
adc
xor
daa
movsb
sub
stos
mov
sbb
idiv
test
stos
cltd
ret
stos
jmp
add
out
jb
inc
mov
cmc
cld
rorb
xchg
mov
mov
sub
psllq
call
inc
mov
lock
int
ja
roll
mov
dec
jno
lds
and
xorl
rolb
and
pushf
or
mov
push
push
iret
lcall
ja
adc
cltd
or
xchg
sbb
push
shl
jge
cld
push
cmp
nop
cld
mov
lods
jnp
idivb
xor
cmp
sub
lret
inc
data16
inc
jno
test
cltd
sbb
fcomi
dec
xor
insb
lcall
adc
xchg
in
inc
sarb
or
out
adc
push
mov
pop
int3
dec
jo
xchg
xor
scas
gs
and
pop
fisttps
lcall
js
jno
fcomps
push
in
sbbb
loope
cmpsl
rcrb
xchg
mov
dec
movsb
push
pop
pop
mov
inc
jbe
in
jl
xchg
push
adc
mov
test
jg
enter
mov
in
aam
lds
neg
ret
out
and
shll
fneni(8087
repz
mov
sub
ja
test
mov
cwtl
mov
mov
incl
lock
ljmp
jnp
lods
adc
nop
cmpb
aad
inc
insb
lods
mov
ret
mov
mov
mov
xor
dec
inc
repnz
xor
cmp
xchg
xor
jg
xchg
mov
das
or
jge
subl
jg
pop
lahf
mov
xor
cmpb
stos
push
loop
popa
sub
dec
fdivs
dec
mov
movsb
xchg
xlat
icebp
push
inc
xor
jne
adc
push
adc
fbld
mov
lock
adcl
mov
dec
pop
jnp
shr
decb
jecxz
pop
pop
in
out
or
adc
push
movsb
mov
pop
mov
or
std
sub
jecxz
cmpsb
pushf
push
gs
aas
outsl
mov
mull
jl
inc
sub
test
dec
rorb
adc
jne
cs
js
out
inc
adc
loope
ret
movsl
js
add
bound
popf
gs
inc
dec
dec
jg
xchg
mov
and
sbb
sub
fisubl
ret
pop
inc
aas
cld
gs
pop
in
sub
push
xchg
cmp
push
xor
mov
add
call
push
fsub
push
leave
insl
cmp
addr16
jnp
pop
ss
mov
inc
mov
mov
xchg
fidivrs
aam
shrb
push
adcl
and
mov
int3
cltd
xor
mov
rorl
and
shll
into
mov
inc
jecxz
xchg
loope
lret
mov
pop
push
pop
scas
js
ficompl
mov
jg
std
into
jecxz
incb
cmp
lds
mov
jno
sub
into
adc
std
xchg
mov
jecxz
out
push
push
jl
mov
test
mov
movhps
nop
sbb
sarl
add
sub
ret
aas
cmpsb
loop
out
jg
add
scas
xor
inc
cmc
xchg
xchg
aas
mov
push
or
mov
add
jne
push
sbb
rorl
lds
adc
jg
pop
pop
icebp
mov
cwtl
dec
inc
sbb
push
insb
std
lret
or
stos
insl
adc
cmp
mov
addb
jne
jne
fcomip
stos
or
in
sbb
mov
xchg
add
shl
pop
mov
add
fsubl
dec
lret
push
or
jns
mov
sbb
fistps
jne
mov
addr16
popl
dec
mov
cmpsb
movsb
dec
xor
mov
shrl
and
or
inc
bound
lcall
aaa
adc
sbb
out
jne
out
outsl
mov
mov
fnsave
bound
repnz
xor
aad
xchg
cmp
add
in
sub
mov
int3
popa
dec
cwtl
ficomps
call
xchg
sub
and
push
add
loop
xor
mov
inc
movsb
add
push
dec
insb
jne
sub
cli
insb
cltd
or
or
test
or
ds
repz
jmp
out
jg
dec
shl
jle
pop
mov
call
lret
inc
fadds
pop
push
dec
mov
or
aad
jecxz
jge
nop
push
jb
and
cmp
aam
pop
hlt
ret
out
and
test
add
mov
out
cmp
enter
add
gs
mov
or
in
inc
mov
mov
and
ret
movsl
push
mov
adc
es
xor
jbe
rcll
orb
mov
fcmovnbe
mov
out
cmp
and
mov
cmp
mov
aam
mov
sbb
dec
in
shlb
lret
pop
mov
idivb
gs
lahf
lods
ficompl
imul
dec
pop
push
outsl
push
pop
jmp
mov
pusha
inc
pop
cmp
push
sbb
jno
adc
repz
xchg
mov
xor
jns
jnp
pushf
faddl
sub
jmp
mov
add
push
and
xor
cmp
mov
fstl
int
pop
xor
arpl
push
and
ror
ja
movsl
iret
fcmovnu
loop
inc
jmp
gs
xor
js
test
sbb
mov
dec
ja
lahf
add
clc
inc
push
sub
lods
aas
test
test
lea
or
or
inc
es
divb
lret
lcall
hlt
out
xchg
add
mov
cwtl
ljmp
or
mov
fimull
outsb
mov
das
sub
sbb
imul
xlat
jnp
add
test
xchg
mov
add
push
mov
imul
mov
bound
test
cmp
sarb
test
xchg
test
xchg
sbb
lahf
push
xchg
iret
sub
std
lcall
mov
dec
cmp
cmc
mov
jmp
cltd
hlt
fs
insl
mov
shl
pop
sub
sub
cmpsl
test
cmpsb
jns
dec
rorl
ss
mov
popa
mov
pop
movl
mov
in
sub
mov
lods
push
xor
or
cmpsl
repz
mov
or
std
imul
adc
je
ss
insl
inc
out
or
pop
sub
cmp
jno
stos
adc
mov
test
and
mov
or
sub
sub
jbe
or
cmpsb
xor
notb
jp
mov
pop
scas
push
push
in
inc
mov
rcrb
cmp
push
arpl
push
fwait
repz
push
mov
popfw
aaa
cmp
pop
cmp
adc
pop
sub
mov
dec
cmp
lods
jecxz
pop
test
out
cmp
pushf
xchg
cmp
sbb
or
scas
push
es
mov
jl
sbbb
jmp
daa
xchg
test
pop
vpunpckhqdq
mov
jbe
pop
sbb
and
push
jne
inc
in
pushf
xlat
sahf
push
push
in
jnp
mov
adc
outsl
sub
ja
andb
lock
jmp
inc
jl
cli
adc
ja
ficoml
push
dec
ss
pop
mov
les
sub
adc
movsl
sub
pop
mov
in
fdivr
shrb
outsl
and
push
cmp
scas
mov
mov
adc
clc
in
jl
cmp
repnz
dec
sub
repnz
out
push
mov
dec
cmc
mov
stos
jbe
sar
loopne
pusha
sub
sti
sub
fsubl
mov
jg
push
mov
icebp
fsub
sbb
add
sbb
fstpt
xchg
enter
in
ljmp
mov
mov
icebp
push
xchg
sub
icebp
mov
out
pop
shlb
jp
add
fucomp
xchg
adc
cmp
inc
hlt
dec
aaa
dec
fidivs
icebp
mov
movsl
fs
xchg
xor
lcall
pop
push
mov
aam
push
sbb
sbb
mov
add
insb
fdivs
divl
cli
addr16
or
jo
repz
inc
test
fcomp
push
lret
cmp
mov
xchg
inc
inc
fidivs
fidivs
xchg
hlt
stos
aad
and
scas
vpcmpeqw
sahf
mov
mov
dec
mov
stc
shrb
lcall
push
pop
cmp
cmp
sub
jmp
mov
inc
and
jecxz
and
fcoml
dec
ds
cwtl
lea
stos
in
dec
int3
mov
sub
xchg
cmpsb
xor
sbb
add
xor
outsb
dec
jge
outsb
sub
scas
stc
fs
outsb
or
fsubrs
cmp
and
arpl
push
sahf
inc
inc
dec
mov
mov
mov
pop
mov
dec
les
dec
or
cmp
into
xchg
pop
add
test
xchg
jg
push
mov
sub
inc
outsb
xchg
out
scas
sbb
cmpsl
iret
adc
mov
shll
sub
xchg
pop
cmp
data16
call
addl
cmc
arpl
jp
sbb
cmp
jbe
mov
or
cmp
lret
sub
dec
xchg
dec
insb
mov
or
inc
jecxz
adcl
xchg
out
cmp
loopne
lods
cld
mov
push
sahf
pop
pop
cmp
lahf
pop
jmp
add
pop
sbb
pushf
mov
popl
mov
xor
movsb
ret
mov
lods
mov
mov
pop
mov
push
cmp
in
dec
jbe
fcmovu
sbb
sub
sub
movsl
push
divl
outsl
push
in
les
insl
dec
adc
sub
mov
mov
jmp
xor
jmp
inc
and
pop
sub
push
in
int
mov
out
xor
mov
dec
cltd
or
adc
pop
scas
in
xchg
cmp
xchg
or
or
xor
rcl
mov
in
insl
jae
mov
scas
xchg
je
cmp
jge
rcll
out
loop
sub
nop
loope
sbb
pop
inc
or
pop
mov
fsubs
inc
lock
icebp
sti
adc
pop
hlt
mov
fistpl
imul
ljmp
jecxz
or
push
pop
push
out
repz
rclb
adcb
inc
or
jg
sahf
ficompl
test
and
xor
pop
dec
addb
mov
lret
sbb
mov
cmpsl
lea
inc
pop
test
fdivl
cmpsl
negb
dec
push
sbb
push
lcall
push
test
movsb
aas
mov
jge
nop
sub
ret
jnp
lahf
lret
out
adc
cmp
stc
test
mov
jno
rorl
lcall
fwait
arpl
inc
adc
dec
add
jle
popf
dec
arpl
sbb
fcmovnb
js
mov
push
sbb
inc
js
mov
sbb
cmp
jbe
pop
jp
scas
sti
jp
out
sub
shll
lock
lret
push
enter
mov
mov
sbb
iret
adc
das
push
mov
add
add
fmuls
hlt
sbb
les
aas
les
ss
mov
add
ja
ret
xor
mov
mov
pop
clc
and
lea
pop
sub
lods
fcomip
hlt
adc
dec
push
rorl
cmp
adc
dec
inc
rcrl
imul
mov
and
test
cmpl
inc
inc
add
test
push
sbb
dec
pop
addr16
fdiv
mov
pop
in
cs
fidivrl
xchg
std
imul
dec
adc
rcrl
pop
lock
imul
push
xor
inc
cmp
pop
mov
ret
push
and
movsl
fldl
cmc
push
sbb
jns
mov
mov
lahf
cmpsb
outsb
mov
push
stc
and
cwtl
daa
icebp
jl
cmc
dec
test
xlat
adc
mov
adc
int3
sbb
push
ret
in
addr16
test
or
jo
dec
sbb
mov
aaa
mov
push
dec
inc
test
insb
mov
fistps
insb
bound
jb
cs
pop
mov
mov
cmpsb
xchg
leave
add
xchg
and
jl
xchg
pop
dec
push
inc
into
fs
scas
loope
gs
push
jmp
fidivl
inc
pop
insl
rclb
stc
movsb
jo
xchg
dec
adc
jne
mov
xchg
je
jbe
loop
mov
push
in
fimull
in
sub
cld
pushf
mov
ss
inc
fcmovnu
dec
inc
pop
sbb
repz
xor
cli
cmp
rorb
jp
add
dec
cli
popa
push
jns
xor
sarl
sbb
fmuls
ja
mov
and
out
sbb
dec
adc
pop
dec
js
outsl
pop
push
test
mov
cmc
inc
cmp
notl
or
in
ror
dec
cmpsb
push
adc
test
into
cmc
imul
xor
inc
mov
mov
cli
fcompl
pusha
roll
movsl
xor
push
mov
subl
scas
pop
mov
ret
icebp
pop
fcoms
and
fmul
stc
dec
pop
xchg
and
mov
imul
cmp
xorb
ret
ror
mov
sub
and
mov
orl
out
or
and
out
push
xor
inc
mov
aas
popf
xchg
sub
out
mov
test
mov
push
pop
mov
movsb
shrl
rcrl
pop
or
mov
daa
repnz
sub
push
cmpl
push
lea
arpl
xor
cwtl
fildl
lcall
or
inc
push
adc
aam
cmp
xor
mov
loop
xchg
jb
push
arpl
push
leave
inc
and
movb
xchg
dec
sbb
or
mov
imull
repnz
aad
cld
sqrtps
jne
popf
lret
sahf
notb
cmp
out
lahf
ds
jno,pt
xchg
xor
ret
lock
inc
loop
sets
arpl
dec
mov
bound
adc
outsl
scas
cli
cmp
sbb
movsl
mov
pop
and
pop
cwtl
cmp
test
jge
or
fcmovb
pop
jecxz
or
mov
test
dec
sbb
repnz
les
mov
sub
mov
cmp
ja
mov
inc
shll
cltd
bound
test
cmp
popa
bound
mov
lcall
jno
les
cwtl
or
xchg
mov
in
mov
jmp
sub
sbb
or
inc
adcl
fistpl
mov
inc
sbb
xchg
loop
mov
std
sub
scas
ret
lds
lcall
inc
fidivl
aas
jecxz
test
cmp
cli
outsb
pop
push
and
inc
adc
nop
pop
xor
or
fs
cltd
pop
aas
mov
add
pop
je
xchg
pop
jmp
pushf
inc
clc
jmp
imul
je
fs
cltd
in
fldln2
mov
mov
sbb
imull
inc
inc
cld
fwait
adc
repz
push
mov
stc
std
int3
jae
inc
push
fucomi
and
movsb
ja
imul
push
enter
iret
jge
cmpl
dec
cmp
stc
mov
repz
jecxz
out
int3
push
pusha
jno
mov
pop
push
mov
mov
xchg
xor
fsubrp
popf
adc
ficomps
iret
aaa
fcmovb
ret
mov
push
paddsw
loop
lds
popf
in
dec
sub
inc
loop
sbb
xor
push
int3
pop
jl
jmp
cmp
adc
enter
movsl
add
repnz
cwtl
arpl
or
shl
loopne
das
int
mov
adc
pushl
lods
mov
rorb
and
cmp
xor
scas
in
jno
dec
pop
cmp
xorb
xor
das
cmpsl
xor
jae
mov
xchg
ficoml
or
xchg
mov
and
mov
fs
cmpsl
data16
mov
xor
xchg
lods
ret
out
mov
icebp
jno
in
pop
enterw
add
sbb
xchg
dec
mov
inc
mov
aad
bound
dec
jle
dec
lret
aaa
and
sahf
gs
inc
push
jb
aam
jp
jmp
maskmovq
idivl
jae
mov
loop
popf
icebp
out
sahf
cmp
int
mov
call
sub
or
sub
xchg
fmulp
in
lcall
dec
push
inc
sti
pop
mov
mov
cld
mov
jg
pusha
and
dec
dec
loop
fpatan
addr16
outsl
sub
lods
std
rorb
dec
das
mulb
lock
std
push
add
outsb
in
lea
int3
push
fidivs
push
aas
loope
xchg
lcall
lret
test
sti
cwtl
popa
dec
or
xchg
les
xor
test
jp
dec
repz
test
notb
aaa
add
inc
cmp
push
add
lret
in
ja
inc
repz
jns
sbb
and
push
sub
imul
movsl
cmpsl
cmp
push
mov
add
xchg
cltd
jecxz
pop
int3
and
fwait
in
idivb
push
xchg
je
mov
pusha
push
dec
out
adc
rcrl
inc
mov
ret
sub
dec
lock
add
cmc
loopne
xchg
xlat
icebp
mov
imul
out
sub
xchg
xchg
push
inc
andl
out
cli
xchg
lea
jg
notb
cltd
add
add
cmc
cltd
enter
mov
and
ljmp
roll
bound
xor
push
jns
std
clc
pop
fsts
add
into
adc
rorl
xlat
testb
jne
lods
outsb
mov
movsb
cli
and
cmpsb
lds
shll
movsb
xor
pop
jmp
adc
orl
pop
enter
enter
push
jns
pop
lds
mov
addr16
push
out
xchg
inc
popf
mov
add
cmp
pop
int3
ret
stc
in
xchg
rcrl
loope
outsl
sbb
cltd
mov
sub
fwait
mov
sahf
out
cmp
out
imul
add
mov
mov
mov
push
mov
not
xchg
and
fidivrl
jno
scas
iret
mov
lock
aam
dec
sub
fs
arpl
daa
cmpsb
add
frstor
mov
mov
mov
sub
push
add
sub
outsl
xchg
outsb
clc
in
adc
lahf
sub
add
addl
ljmp
in
lock
adc
xchg
and
xchg
sub
int3
jge
jno
jmp
sub
xor
lcall
fimull
jp
imulb
shl
xchg
jl
lret
mov
fs
loop
add
in
adc
loopne
ss
pop
pop
sti
mov
xchg
popf
inc
pop
dec
push
shll
fsubl
lds
lea
inc
nop
jo
cmpsb
insb
scas
subl
jle
cltd
cli
ret
jns
inc
mov
arpl
sbb
pop
push
inc
and
and
scas
addb
scas
in
faddp
cwtl
enter
mov
and
push
repz
mov
mov
cs
mov
or
fisubs
pop
cmp
add
jecxz
mov
dec
mov
mov
mov
sub
mov
fnstenv
cld
pop
sbb
push
faddl
call
test
psrld
aad
dec
pop
mov
enter
test
std
data16
jmp
fucomip
fcompl
frstor
nop
ss
mov
inc
cltd
add
xchg
scas
xchg
pop
mov
jne
divl
cmp
fdivl
xchg
jns
adcb
das
xchg
sbb
add
les
dec
test
pusha
das
ficompl
stos
daa
in
aam
scas
mov
leave
and
pusha
mov
out
icebp
adc
push
in
stos
xchg
sbb
mov
xorb
lea
xor
movsl
xchg
pop
mull
pop
icebp
cwtl
push
mov
inc
hlt
fcmovbe
lods
mov
xor
inc
nop
push
inc
mov
or
and
sub
shlb
jmp
int3
mov
mov
js
push
jg
call
xor
jl
lds
es
sub
cmpl
bound
fsubp
jecxz
xchg
adc
jne
add
aam
cmp
add
mov
mov
xchg
push
jae
xchg
cmp
cmp
fs
fmuls
hlt
std
xchg
pop
adc
fbstp
shrl
in
sub
pop
jnp
inc
decb
imul
outsl
or
dec
mov
out
fs
push
lods
mov
push
cli
scas
cmp
jne
xlat
test
sahf
inc
mov
push
mov
rcrl
iret
out
cld
das
xchg
stc
aad
lret
push
adc
loope
fadd
fsubrl
bnd
roll
xchg
ja
cmp
cmc
and
xorb
jno
scas
pop
imul
cmp
movsb
push
pop
or
imul
inc
xlat
ljmp
inc
inc
jp
stos
sub
jl
dec
out
xchg
sub
adc
mov
dec
mov
repnz
jmp
jns
insl
aas
rol
push
bound
jg
int3
imul
jmp
push
mov
and
popf
and
das
lods
sbb
cs
into
sbb
sbb
add
js
pop
mov
pop
fildll
jp
call
pop
sbb
and
lret
stos
call
mov
adc
adcl
out
inc
xchg
aam
pop
aad
or
cmp
mov
and
lcall
dec
inc
roll
adc
push
lock
pop
sbb
lret
add
mov
shll
pop
jl
xchg
and
cli
xlat
loop
add
shl
inc
and
cmp
push
rclb
jo
fmul
das
insl
divb
mov
and
mov
dec
ss
xchg
inc
frstor
xor
lods
ja
push
stc
mov
pop
mov
cs
enter
cmp
mov
mov
xor
stc
cwtl
in
js
cmc
cmp
cmc
sub
loopne
rcrb
loope
xor
or
xchg
test
inc
jle
rcl
push
popf
cmp
pop
loopne
adc
aad
call
cmp
rorl
nop
aaa
sarl
xchg
cmpsl
pmaxsw
nop
add
rorl
insb
cs
jno
mov
or
cld
pop
xor
push
cmp
mov
rol
addr16
lods
lcall
inc
outsl
push
xor
daa
or
lret
inc
push
je
mov
xchg
repnz
push
xor
inc
loopne
arpl
into
mov
push
cld
cld
out
cmp
fwait
orl
add
xchg
inc
mov
test
das
bound
cmp
int3
subl
ds
scas
jmp
xchg
test
int3
mov
fildl
int
call
mov
dec
jecxz
mov
or
in
dec
add
test
cmpsb
cwtl
loope
sbb
mov
push
jl
jnp
push
pop
inc
cld
mov
push
xchg
mov
add
scas
dec
repz
inc
cmpsl
xchg
xlat
mov
or
and
xor
xor
jo
inc
jl
fnstcw
xchg
enter
dec
pop
cltd
in
pop
mov
xchg
hlt
into
xchg
or
cmpsl
xor
into
ja
fdivl
xor
jecxz
ret
adc
mov
jno
stos
xchg
es
adc
pop
and
inc
imul
jne
jle
sahf
sub
addb
out
pop
fwait
xchg
xchg
addr16
xchg
fucomip
lret
xor
ja
movsl
jo
xchg
outsl
sub
fsubs
sub
out
adc
insb
rolb
push
pop
into
ret
fistpll
pop
insb
dec
xchg
bt
push
bound
cwtl
fistps
adc
or
repnz
pavgb
int
cs
inc
jg
cmp
jns
popa
ja
sub
stos
jle
clc
ret
pop
cvtps2pi
test
rorl
shrl
decl
mov
outsb
sub
push
int3
mov
adc
mov
xchg
cmp
mov
call
rolw
inc
inc
in
push
ret
mov
inc
out
shlb
outsb
in
add
mov
mov
and
sahf
jmp
dec
mov
push
in
xor
dec
xor
dec
cmc
fimull
hlt
xchg
mov
add
scas
js
push
add
sub
push
mov
lock
push
push
and
mov
test
cmp
fsubl
push
inc
cmp
adc
inc
xor
sub
bound
stc
xor
mov
mov
orl
mov
push
cmp
pop
mov
lret
arpl
cltd
and
dec
pop
and
imul
pop
xor
mov
rorb
xchg
js
or
ror
test
and
xor
mov
sbb
adc
lods
xchg
adcb
cmpsb
xor
mov
add
cmp
mov
cmp
push
test
ficomps
pop
sbb
push
cltd
loope
adc
arpl
sub
push
cltd
xor
and
xor
and
lock
mov
push
cli
cmp
outsb
or
repz
dec
nop
shrd
stos
or
sub
int3
adc
sbb
sub
imul
shrl
xor
jb
int
bound
nop
jno
idiv
push
cmpsb
xor
in
push
cmpsl
repz
int3
ret
out
dec
cltd
lea
je
test
leave
stos
imul
mov
cwtl
push
es
jno
in
or
fsubrs
mov
addr16
adc
inc
xor
inc
ror
fwait
ljmp
mov
push
jmp
adc
sub
mov
lret
add
mov
jle
jp
dec
in
lcall
push
icebp
mov
xor
xor
fidivl
add
and
mov
stos
lock
stos
push
pusha
pushf
rolb
pop
push
mov
loop
outsl
mov
pop
fsubp
jnp
sbb
ja
inc
insl
mov
stos
addl
adc
les
hlt
and
test
int3
adcl
icebp
sub
lods
push
insb
xchg
xchg
ror
push
xor
test
rorb
insl
dec
dec
dec
data16
mov
or
sbb
lcall
out
or
push
and
add
scas
mov
jo
and
mov
imul
xchg
ret
cmp
xchg
or
sub
and
pop
out
xor
adc
push
xchg
ficoms
insl
mov
or
and
mull
sbb
or
popf
lret
arpl
cmc
mov
scas
cld
add
mov
into
nop
call
ds
sbb
and
je
int
pop
adc
xlat
subl
lds
test
ljmp
cmp
mov
and
jns
or
insb
xchg
in
inc
insb
dec
push
add
int
lcall
inc
ja
lret
sub
pop
jle
dec
mov
andb
imul
pusha
daa
mov
dec
ljmp
mov
push
enter
add
in
out
adc
xor
cli
sbbb
add
dec
mov
xor
xchg
push
scas
int3
sbb
sub
jne
push
mov
push
repnz
out
inc
into
lock
mov
push
cmp
add
mov
mov
test
pop
sbb
imul
and
adc
mov
loope
and
or
cld
test
xchg
cmp
sbb
scas
inc
push
cmp
ficoml
xor
lret
add
pop
push
mov
or
shll
push
jne
ret
cmpsb
xor
xchg
dec
daa
std
out
loop
addl
das
jl
or
adc
movsl
into
in
repz
ljmp
jne
mov
icebp
imul
imul
mov
fmuls
loope
or
into
fcomip
pop
sub
add
jmp
outsb
adc
lret
jbe
lea
lods
or
lock
pop
hlt
movsb
iret
inc
cmpb
jno
fisttpll
sti
loopne
decb
ret
push
jmp
pop
test
insb
jmp
ret
roll
mov
arpl
push
dec
mov
push
roll
dec
pop
outsl
out
cwtl
or
push
ljmp
mov
stos
xchg
repz
pop
sbb
or
inc
inc
add
xchg
mov
jg
xor
mov
daa
mov
pop
sub
ds
xor
cmp
movsb
push
fidivs
imul
mov
test
adc
dec
jae
cmp
and
les
jecxz
cmp
es
repz
and
add
les
sbbb
andl
mov
pop
repz
rcrb
sub
dec
inc
and
mov
aam
aad
or
xchg
cmpl
mov
into
push
fld
inc
int
repz
stos
pop
push
repz
negl
imul
les
xchg
xlat
movsl
clc
push
dec
jbe
adc
into
imul
cmpl
mov
lcall
sahf
push
fldlg2
mov
pop
mov
mov
gs
stos
aad
addr16
test
out
mov
test
xchg
dec
and
fisttpll
fwait
loopne
mov
lods
push
mov
sbb
lahf
inc
pop
in
in
inc
jb
dec
lcall
mov
push
mov
mov
test
stos
add
ficompl
mov
dec
xlat
es
movsl
pusha
push
mov
fneni(8087
sub
add
into
push
loop
cmp
shr
std
or
cmp
rcrl
cmp
or
lds
jmp
insb
sub
cmp
mov
jle
test
lock
push
xlat
lcall
movsl
inc
dec
pushf
and
dec
pushw
aam
inc
jge
dec
pop
aad
out
push
frstor
dec
push
mov
xchg
les
cmp
cmp
lods
xor
jns
push
into
sub
cmp
inc
subl
jge
mov
aas
jnp
and
or
mov
mov
sbbb
loop
jns
xchg
call
mov
das
imul
ror
daa
pushf
dec
xchg
in
sarb
in
dec
dec
into
jbe
and
mov
enter
or
jno
inc
lods
add
cmpsb
push
fstl
pop
dec
hlt
addr16
loope
mov
mov
ljmp
xchg
stos
and
cli
sub
lods
sahf
sbb
pop
xor
in
sub
decl
jo
fists
jno
lcall
mov
bound
and
pop
mov
je
xchg
lcall
push
jae
fstl
test
add
sbb
xor
pop
mov
xor
pmaxsw
dec
add
fldz
ret
fiadds
cwtl
push
and
inc
nop
pinsrw
push
mov
lods
xchg
jne
mov
dec
out
xchg
cmp
clc
push
lret
mov
push
outsb
pop
mov
mov
jp
xchg
insl
mov
ja
clc
pop
xor
inc
mov
mov
cltd
ret
jne
insb
jecxz
divps
sub
lock
lret
mov
push
bound
mov
cli
aas
inc
out
push
clc
pop
sbb
jne
mov
xor
sub
lcall
shll
call
aad
xor
mov
sbb
cld
subb
mov
repz
fiadds
dec
adc
sbb
pop
or
xchg
sti
pop
jns
xor
mov
inc
mov
cltd
int3
mov
xlat
icebp
xchg
mov
and
cmp
imul
and
xchg
dec
add
dec
sbb
inc
pushf
xor
and
inc
sub
xchg
iret
faddl
fdivl
xor
mov
cmp
lds
mov
dec
mov
iret
jmp
pushf
xor
in
xchg
cli
lock
iret
or
mov
or
or
out
arpl
sbb
mov
xchg
movsb
lods
fidivrl
mov
sarb
leave
jbe
pop
pop
roll
xchg
inc
aaa
loop
scas
or
das
je
xchg
jle
add
ja
aas
add
fimull
dec
xchg
sbb
mov
add
cs
dec
sbb
mov
scas
in
aaa
out
cmpsl
and
xorb
shufps
sahf
leave
loope
add
stos
inc
sub
arpl
xchg
mov
sub
or
in
insb
pop
jne
mov
fsts
mov
xor
sbb
adc
test
xlat
ss
dec
or
pop
pop
sub
les
jae
jge
in
mov
pop
mov
mov
jno
mov
shll
jae
mov
repnz
xor
adc
ljmp
xchg
xchg
jmp
sub
cmpsl
lds
adc
cli
mov
hlt
xor
push
mov
cld
lahf
into
pop
fcmovnb
inc
addl
xor
dec
jge
lret
xchg
inc
fwait
inc
std
push
aaa
xor
cmp
add
push
arpl
rcrb
xor
jne
stc
cs
enter
jae
push
cmp
cmpsb
mov
fcoms
and
ret
inc
mov
lahf
add
jnp
jmp
mov
sahf
ljmp
addb
movsl
pop
mov
push
sarl
cmpsb
mov
push
shll
ljmp
adc
pop
adc
int
icebp
mov
js
ljmp
outsb
or
cmpsl
into
cmp
inc
imul
jbe
jg
pop
les
jns
test
mov
sub
rcrl
push
sub
jmp
loopne
pop
ja
mov
push
aam
insb
leave
aam
inc
sub
dec
mov
and
cmc
in
dec
pop
vmovapd
cmc
pushf
in
fnstenv
push
das
xchg
or
ret
fsts
mov
addl
sub
push
cmpsb
push
mov
pop
inc
enter
xor
stos
dec
or
jne
loopne
xchg
nop
stos
nop
sbbb
movsl
mov
aad
dec
push
xlat
push
xor
sbb
push
mov
dec
adc
mov
add
or
lods
cmc
test
push
xchg
adc
ljmp
lods
shll
xor
mov
dec
imul
mov
mov
idiv
sahf
outsl
mov
mov
imul
and
fwait
gs
mov
shll
sbb
adc
enter
sbb
test
push
cmp
popa
sbb
out
pop
cmp
aaa
and
xor
lea
inc
in
test
leave
mov
pop
ret
int
sbb
lret
imul
cwtl
faddl
and
push
loop
mov
dec
inc
pop
xor
push
jbe
inc
jo
stos
mov
inc
pop
cmp
std
notl
or
adc
pop
mov
jmp
fisubrs
jb
jmp
adc
pushf
arpl
movsl
add
sbb
pop
hlt
cmpsb
xchg
repnz
adcl
movsb
dec
fists
rol
pop
jle
push
aam
popf
dec
loope
test
push
lods
jp
xchg
sbb
mov
fs
mov
xlat
in
insl
lods
loopne
adc
je
or
push
push
jg
incl
adc
rolb
out
mov
dec
push
leave
les
jns
dec
sub
sub
iret
std
xor
icebp
jne
sbb
jmp
xlat
rcrb
insb
lock
insb
mov
xlat
cmp
mov
subl
int3
mov
add
repz
cmp
inc
cld
mov
cmp
clc
push
gs
mov
dec
aad
jns
fsts
push
fadd
adc
test
cmp
aas
jle,pt
out
lods
pop
xchg
lds
xchg
aaa
and
cmp
xor
mov
fadds
mov
mov
fistps
fs
notb
or
icebp
testl
or
dec
loopne
mov
in
pop
xchg
push
push
lahf
push
imul
sbb
fcomps
xchg
into
dec
sub
outsb
leave
or
out
dec
or
fwait
lahf
inc
mov
lcall
adc
sbb
jg
or
outsl
mov
mov
cli
jmp
std
out
or
cmc
repz
dec
push
fbstp
inc
scas
jne
dec
dec
or
int
sbb
cmc
popf
sbb
dec
pop
stc
shlb
movsl
loopne
ret
mov
pop
sarl
push
lea
push
inc
push
fwait
daa
or
mov
cmp
pop
es
jp
lods
loopne
xor
test
pop
enter
ljmp
mov
in
testb
popa
mov
lods
cmc
mov
clc
inc
xchg
scas
adc
adc
ret
mov
push
xor
ss
dec
fdivs
insl
and
pusha
xlat
sub
outsb
vmread
jl
aaa
inc
in
movsb
pusha
xchg
mov
ret
and
scas
in
mov
rclb
addr16
out
inc
jmp
xchg
sahf
or
xchg
in
xor
shll
inc
mov
xchg
or
addr16
iret
or
jle
mov
and
mov
mov
call
or
and
mov
jne
push
push
mov
push
scas
add
mov
repnz
in
adc
push
push
mov
enter
jbe
jecxz
pop
call
jo
shl
test
dec
xchg
lret
inc
add
cld
inc
inc
xchg
fwait
cld
mov
mov
mov
adc
pop
js
fs
push
mov
push
and
xor
adc
push
jae
mov
xor
aam
out
int3
jmp
mov
push
xorb
imul
add
js
pushf
mov
int
mov
sub
cmp
xchg
jmp
xor
and
fldl
sub
push
out
es
sub
jb
scas
sbbl
add
fcoml
imul
xchg
and
test
aas
ljmp
popf
mov
arpl
mov
xchg
mov
pushf
jb
fisubrl
shrl
call
cmp
cmpb
pop
andb
dec
loope
sub
lods
jp
xchg
adc
cs
mov
xchg
mov
insb
je
repnz
rorb
mull
inc
adcb
cld
mov
mov
mov
jg
cmp
adc
add
sbb
jg
fwait
xchg
or
out
sub
cli
shrb
pushl
js
cli
popl
arpl
push
jae
jmp
cmp
xor
aam
xchg
gs
loope
mov
mov
dec
js
data16
mov
fnsave
stc
sub
xor
xlat
xor
lret
dec
ss
lret
push
cmpsb
stc
repnz
and
data16
jo
addr16
cli
idivb
in
icebp
inc
sub
pop
scas
adc
ljmp
stos
cld
lea
push
add
out
addr16
jmp
int
xchg
push
mov
mov
pop
ss
repnz
mov
into
and
testb
add
pop
cli
jmp
daa
lahf
cwtl
cmp
mov
fadds
imul
imul
jl
sbb
mov
sbb
xchg
sub
push
pop
imul
mov
repnz
pop
add
cmpsb
mov
ljmp
nop
cmpsl
ljmp
icebp
xor
rclb
jle
adcb
xchg
in
xor
xlat
outsb
xchg
out
push
lret
mov
xchg
mov
push
repnz
cmc
jne
mov
mov
or
call
enter
mov
push
adc
add
xchg
sub
mov
jg
icebp
fldcw
inc
imulb
cs
cli
ret
xchg
or
stc
mov
jle
movsb
in
cmp
mov
pop
fadd
push
imul
into
cmpsl
push
sti
pusha
roll
jl
not
mov
lock
sti
std
idiv
mov
lcall
pop
adc
pop
jmp
loope
aad
jno
lcall
sub
jp
rclb
push
hlt
dec
jns
clc
dec
in
push
push
hlt
addl
lods
enter
inc
xor
rolb
aam
out
pop
fisubrl
and
movsb
sbb
mov
movsb
mov
cmp
lcall
or
fwait
mov
test
lea
jl
xchg
sub
movsb
inc
arpl
icebp
leave
movsb
leave
pop
ss
xor
push
insl
cltd
mov
mov
add
push
dec
cmc
sub
lcall
nop
jb
outsb
xchg
out
fs
xor
mov
in
pop
push
mov
dec
push
imul
jo
mov
stc
xlat
sarl
hlt
mov
jnp
int
popa
and
cmpb
mov
dec
add
sbb
or
out
cld
or
cld
gs
adc
dec
mov
sbb
cmp
lods
or
scas
push
out
pop
out
dec
push
xchg
or
xchg
dec
mov
pop
lods
xchg
cmpsb
lds
or
push
jbe
cmc
jns
adc
rcll
rcrl
mov
cmc
push
mov
std
sbb
inc
loop
cmpsb
inc
and
popf
mov
mov
lret
out
inc
jb
sbb
mov
and
mov
jno
mov
lods
mov
js
in
loopne
mov
sub
pusha
add
inc
and
lahf
inc
pop
inc
add
jno
sub
fists
sbb
and
outsb
push
sbb
in
dec
in
cmp
fadds
pop
testb
dec
cli
ss
fldcw
push
loop
mov
push
out
mov
sub
xor
loop
sub
movsl
add
push
fcomps
cmpsb
inc
xchg
repz
mov
ja
ss
pop
lea
jbe
push
stc
mov
scas
sub
lcall
mov
mov
repz
mov
xor
cs
popa
xor
out
adc
ds
std
or
sub
ja
pop
scas
sub
ret
dec
xor
mov
jmp
into
push
rcrl
sbb
mov
ret
fisubl
inc
jb
scas
add
ret
mov
into
popa
or
mov
xchg
shl
sbbb
shlb
inc
es
lret
adc
test
inc
mov
mov
lods
je
cmp
cmp
sub
pop
aas
lds
xchg
clc
push
push
jb
int
adc
test
xchg
add
cmp
pop
xchg
clc
sbb
adc
jmp
mov
dec
pop
ja
lea
out
push
mov
mov
popl
ds
cltd
ret
mov
sahf
fsts
jo
imul
push
out
sub
imul
pusha
cmp
mov
lods
cmp
cmc
mov
adc
push
shl
dec
les
scas
insl
lea
pop
push
dec
lret
ret
mov
adc
cwtl
ret
dec
jne
add
push
aad
add
cli
xor
test
in
sub
push
mov
mov
inc
cmc
mov
movsb
stos
mov
mov
add
mov
xor
bound
and
jle
pop
sub
jmp
xor
jg
leave
ret
or
fisubrs
sub
inc
mov
cmp
cmp
mov
pop
mov
xlat
enter
jo
bound
sub
repz
inc
rorl
fdivl
ds
ljmp
out
inc
adc
or
mov
pop
push
sub
loope
cmp
sti
xchg
mov
push
insb
movb
jno
les
repz
lret
push
shll
or
addl
mov
adcb
cmpsl
out
gs
jnp
std
jecxz
fistpll
cmp
out
in
pop
inc
mov
movsb
xchg
dec
and
in
pop
mov
xchg
and
std
inc
mov
std
jno
int
dec
cltd
or
push
add
nop
rorl
add
jle
mov
movsl
es
mulb
and
add
cmp
sub
cmpsb
dec
and
pusha
mov
insb
cmpsl
aaa
pop
fwait
bound
pushf
leave
mov
push
cmp
sbb
jno
mov
mov
cmpsl
push
mov
imul
aaa
jns
fistpll
ss
div
xor
mov
divb
adc
pop
push
sub
pop
dec
pop
sarb
xchg
jg
jo
lods
mov
lds
and
inc
mull
or
test
inc
std
movsb
xor
aam
push
imul
in
mov
fists
nop
xchg
cmp
push
fxch
push
sbb
jae
clc
sub
call
leave
push
dec
clc
add
ds
pop
xor
sahf
mov
mov
inc
xor
popa
inc
test
add
xchg
mov
imul
das
sbb
fcoml
xchg
jae
and
xchg
scas
inc
int3
pop
pop
cli
loope
test
cmc
jge
arpl
dec
es
test
sub
dec
iret
lret
mov
and
cmp
add
or
in
sub
xor
addr16
xchg
add
push
jo
mov
cs
shl
mov
push
jge
rcll
sarb
daa
clc
xor
pop
es
sub
in
jge
out
sbb
aas
ja
testb
lds
sub
xchg
cmp
imul
or
mov
in
cmp
pusha
in
dec
jo
out
inc
data16
mov
jle
inc
mov
mov
int3
dec
push
aas
or
cmp
dec
outsl
mov
xchg
shl
movsb
aas
cmp
ud1
ret
pop
call
add
and
rorb
push
cmc
pop
sarl
jnp
lds
jns
call
mov
xor
clc
test
into
insb
fildl
icebp
pop
cwtl
sbb
xor
pop
mov
jg
enter
lea
fidivl
jbe
loope
push
in
inc
add
mov
pop
out
mov
xor
sbb
rclb
fs
bound
test
inc
mov
lret
inc
loope
mov
pop
repnz
cmp
and
adc
pop
push
adc
stc
in
shll
cmpsl
stc
xchg
and
cmpsb
or
cmc
aad
mov
out
out
xchg
in
inc
add
divb
rorl
jno
test
add
sub
mov
outsb
add
xchg
dec
lahf
test
mov
pop
push
in
mov
lods
push
repnz
pusha
dec
mov
data16
ss
js
sbb
mov
pop
push
lahf
jo
mov
pop
popf
test
xchg
push
adc
cmpsl
xchg
and
sahf
or
jl
int3
inc
mov
mov
jp
in
dec
fistl
fs
add
and
mov
dec
movl
stos
xor
aaa
sub
orl
cmpsb
fxch
imul
leave
lock
fldt
inc
in
repnz
mov
scas
repnz
shll
insb
xor
test
xchg
pop
std
sbb
es
push
sbb
mov
mov
xchg
cwtl
jecxz
mov
in
gs
cmpb
shrl
add
sub
popa
mov
loopne
jp
inc
mov
adc
cmp
lds
stc
pusha
fistpl
pop
and
in
mov
mov
and
or
test
pushf
push
push
ret
ret
int3
dec
add
xor
bound
sti
cld
out
fcomi
lahf
loopne
jmp
cmp
faddl
sti
insb
in
cltd
es
push
jae
in
xor
stos
fs
hlt
push
fnstcw
cmpsb
pop
mov
test
pop
inc
mov
and
mov
aad
lret
inc
xchg
leave
jle
aaa
mov
aaa
pop
cwtl
dec
jle
or
push
pushf
leave
cmp
cmp
sahf
sbbb
repnz
mov
and
dec
inc
dec
lods
fmuls
sarb
add
pop
push
lock
push
mov
push
out
inc
arpl
aaa
es
mov
dec
sub
aad
jecxz
shll
lret
shr
mov
imulb
xchg
mov
mov
addb
mov
ficomps
out
dec
sbb
cmp
jp
stos
test
pop
add
xchg
xchg
fsubs
fldcw
repnz
pop
popf
cmp
insl
sub
and
lds
and
xor
lret
es
pop
insl
js
outsb
dec
mov
shrb
lcall
movb
xchg
pop
push
imul
cmp
ljmp
adc
mov
test
adc
daa
andb
pusha
dec
push
xchg
push
xor
cld
dec
pop
push
dec
stos
lcall
bound
cld
push
jle
push
fldl2t
sub
and
jne
fs
push
stos
aam
pusha
das
sub
add
outsb
xchg
cmp
ret
pop
in
shll
popa
ja
in
rcrl
or
mov
into
pop
inc
xchg
fwait
je
or
sbb
xchg
lds
cmp
out
jns
out
sub
fs
pop
out
dec
scas
jo
xchg
nop
jno
mov
inc
orl
push
jns
iret
inc
pusha
inc
ret
push
ror
pop
insl
mov
cltd
fnstenv
cs
add
and
inc
inc
cwtl
inc
jge
cmp
movsl
mov
pop
mov
int
dec
shll
push
outsl
add
lods
adc
movsb
stos
scas
pop
pop
mov
push
movsb
pop
je
push
adc
fsubl
imull
inc
mov
mov
cwtl
adc
stos
jae
or
or
cmp
fstp
and
pop
mov
cltd
aas
notb
pop
mov
lock
fwait
hlt
mov
push
test
pop
adc
pushw
gs
jecxz
mov
loop
lock
sub
adc
sub
cmp
das
lret
mov
mov
int
gs
add
xchg
or
dec
sub
mov
pop
and
les
hlt
dec
sub
stos
xchg
and
sub
pop
push
jl
psraw
jne
andl
push
sub
sub
frstor
popf
xchg
inc
movsl
cmp
bnd
rcrl
sub
mov
cmp
xor
sub
idivb
addr16
or
mov
addl
adc
adc
or
idivl
jne
aam
inc
dec
push
icebp
repz
mov
fwait
sub
mov
fcmovnb
pop
fidivs
cmp
jl
ja
imul
sub
jne
mov
je
cwtl
or
add
mov
out
add
jmp
xchg
pop
andl
mov
outsb
xor
jge
sbb
mov
insb
mov
mov
pop
icebp
xchg
jns
imul
push
arpl
or
cmpsb
pop
insb
js
mov
dec
mov
pop
call
test
pop
loopne
aam
mov
insb
push
lea
js
sub
out
xchg
rcll
pop
dec
push
jl
cld
shll
pushf
mov
inc
sbb
mov
insl
xor
xchg
lea
jge
ja
lcall
pop
std
pop
fwait
sti
jmp
push
leave
scas
ror
cmpsl
imul
add
pop
lds
sbb
clc
adc
inc
arpl
ja
jo
in
pop
rcrb
pop
jae
cltd
xor
sub
lods
fcompl
jmp
inc
stos
pop
adc
sti
leave
repz
clc
pop
sbb
data16
mov
inc
outsl
insb
jae
pushf
outsb
push
cli
cld
int
dec
lods
faddl
cmpsb
xchg
cs
test
lret
clc
mov
testb
xor
aas
xlat
mov
lret
es
mov
inc
push
jl
and
sub
sbb
das
lock
sbb
leave
jno
mov
loopne
sti
lods
cmp
cli
jecxz
jg
pusha
push
xchg
imul
arpl
inc
clc
arpl
shl
xor
dec
idiv
and
pop
ljmp
mov
je
mov
xlat
xor
push
sub
mov
cltd
ret
sbb
or
or
int3
in
fldenv
lcall
mov
mov
mov
xchg
adc
add
adc
outsb
loope
jnp
inc
cmpsl
push
in
orl
aad
jmp
sbb
jno
dec
sbb
mov
pop
push
enter
and
mov
fld
filds
jp
cld
insb
lea
jge
jp
jl
adc
dec
adc
dec
or
mov
ja
mov
xchg
mov
cmpsb
jo
fld
sbb
pop
mov
daa
sahf
jno
mov
lods
je
fisttpll
int3
dec
rcr
cmp
xchg
sbb
mov
add
sub
jecxz
jne
mov
xor
sub
sbb
repnz
call
aam
and
int3
cmc
cmp
addr16
pop
adc
in
test
shll
test
push
mov
in
or
mov
jp
sbb
adc
cli
jno
out
jb
repz
stc
faddp
insl
notl
dec
ret
dec
popf
xor
dec
or
xchg
mov
and
inc
ds
out
cwtl
jecxz
cmp
stc
shl
lcall
imul
add
popa
in
mov
mov
aam
xor
hlt
lret
std
cmp
mov
test
push
test
stos
xchg
scas
rolb
and
xchg
andb
mov
iret
sub
push
add
ret
sub
fidivl
inc
stc
cmpsb
out
in
pop
pushl
dec
dec
xchg
test
sbb
mov
adc
icebp
scas
and
jne
fadds
adc
and
mov
test
scas
or
je
andl
inc
pop
mov
adc
sbbb
addr16
lahf
stc
push
sbb
dec
aam
dec
stc
into
add
mov
mov
inc
loope
lcall
cmp
fstl
mov
clc
or
stos
imul
in
repz
aam
inc
lods
dec
aas
mov
jae
iret
mov
xlat
cli
or
lret
aaa
lret
aam
pushf
jge
xor
inc
mov
xor
jno
loop
outsb
cmp
dec
inc
or
pop
add
push
cld
xchg
cmp
adc
test
repz
and
mov
adc
sub
xchg
cs
test
iret
pop
mov
shlb
jmp
es
add
cmpsb
scas
or
sub
call
ljmp
aas
das
xchg
xor
cmp
cmc
xchg
inc
adc
jo
int
inc
add
pop
sbb
test
jae
pop
pop
lods
jecxz
inc
leave
fcomps
in
xor
mov
mov
and
testl
subl
jbe
adc
incl
clc
mov
cli
xlat
adc
ds
int
add
data16
stc
inc
and
fwait
lea
inc
imulb
neg
jmp
fwait
negl
mov
adc
sbb
mov
cmp
dec
inc
xchg
mov
dec
xor
test
fidivs
jno
xor
imul
sub
mov
xchg
out
out
jb
mov
jbe
inc
push
xchg
loopne
inc
movsl
and
fldenv
imul
mov
inc
push
xchg
mov
sbb
icebp
cmc
dec
or
push
xchg
mov
in
cmpsl
movsl
imul
ljmp
insb
jno
push
push
test
shr
dec
xor
ror
xchg
ss
gs
ret
pop
or
js
sbb
or
ret
in
mov
fstpt
test
ljmp
and
inc
mov
shll
call
jnp
lret
ret
cmp
aaa
add
lahf
cmpsb
xchg
jno
stos
jg
cmp
cmp
movsl
push
ljmp
cmp
stc
adc
inc
lods
cmpl
nop
jae
cmp
xchg
mov
dec
inc
adc
test
mov
xor
push
xorl
dec
orb
jno
mov
add
and
into
std
fwait
push
outsl
jl
or
mov
jo
stos
mov
bound
jle
test
xchg
jno
cmp
pop
mov
jns
xchg
xchg
rcrl
popf
cmpsl
int3
imul
sbb
cs
ret
je
xor
shrl
add
xchg
or
inc
xlat
pop
add
imul
dec
xlat
inc
sahf
mov
pop
rcr
sub
xor
push
jp
jp
imull
fidivrs
cld
out
mov
jle
in
add
xchg
dec
lret
sub
scas
sub
mov
imul
jmp
or
mov
movl
mov
cmp
sbb
pushf
mov
shrb
mov
mov
and
lea
clc
pop
mov
into
adc
push
lahf
repz
xor
lods
scas
out
cwtl
jg
shll
add
iret
push
xchg
aad
es
fdivl
mov
dec
mov
js
lock
push
xchg
into
sti
decl
dec
xchg
jnp
lea
lock
sub
loopne
cli
mov
sub
xchg
push
imul
sub
jmp
scas
xchg
sahf
push
loope
rorb
mov
sub
rol
jno
sbb
or
frstor
cmp
xchg
cmp
sbb
or
hlt
lret
rcr
imul
ret
popl
lret
lods
imull
jae
or
dec
xchg
ret
cmpb
push
cli
xchg
mov
sub
inc
cltd
lods
xorps
mov
mov
adc
out
ja
in
ret
fwait
sbb
or
inc
push
jle
add
mov
aam
or
push
andl
pop
or
stos
sub
out
popa
adc
push
jmp
jae
cli
fimuls
sahf
jmp
xchg
lds
loope
and
lds
push
ja
mov
in
dec
pop
bound
ljmp
lret
cmpsb
into
inc
jp
inc
ljmp
xor
scas
inc
xlat
test
fldt
std
dec
call
out
test
std
push
mov
cmpl
fistl
outsl
into
cmp
adc
and
mov
mov
and
pop
jle
cmp
hlt
sahf
aad
and
pusha
xchg
lea
mov
loop
xor
add
fsubl
cmpsl
sub
and
arpl
out
pop
mov
adc
repz
out
add
sbb
jno
scas
jns
xor
adc
mov
inc
or
add
mov
xchg
enter
mov
xor
push
cmp
sub
fsubrl
cmp
test
nop
dec
sbb
jge
test
mov
ja
gs
popf
movsb
or
pop
adc
dec
cmpsb
mov
jno
dec
cmp
mov
and
aad
les
int
das
movsl
in
int
or
fildll
mov
ja
mov
in
jmp
subb
pusha
pop
dec
xchg
mov
out
jmp
pop
or
mov
xor
stc
lret
mov
xchg
mov
pop
pop
push
das
imul
ret
sbb
mov
fsub
je
jne
subb
mov
lds
mov
sbb
mov
pop
std
mov
addl
popa
adc
jp
sahf
sbbl
out
inc
clc
aam
push
orl
scas
dec
mov
stc
jno
mov
out
pop
pop
xchg
push
bound
inc
ror
dec
mov
ret
xor
cmpsb
mov
push
sub
ret
aad
inc
popf
repnz
sub
fistl
pop
sbb
inc
sahf
test
jo
popf
in
jnp
sub
lret
in
gs
or
faddl
pop
push
jb
adc
xchg
scas
adc
jg
sbb
or
arpl
and
adc
out
lods
lahf
js
mov
sahf
lea
scas
jp
jb
mov
and
mov
fbstp
js
dec
out
and
mov
mov
push
aad
aaa
adc
push
sub
sub
loopne
clc
rcl
ja
loop
dec
mov
sbb
mov
jno
dec
jl
cli
pop
aad
xchg
add
addr16
scas
xchg
mov
jns
lea
xor
mov
push
mov
sub
je
adc
pop
scas
or
insb
sbb
and
mov
jge
bound
movsb
and
mov
xchg
mov
pop
xchg
cmpsb
or
out
lret
pop
outsb
sub
out
xchg
loopne
inc
fadd
mov
adc
adcl
ret
js
dec
and
cmovae
insl
rdpmc
xchg
pop
xorl
shl
pop
mov
lahf
aam
loopne
jg
cmpsl
or
fnstcw
fwait
lahf
xor
sub
cmp
pop
sbb
mov
iret
sub
mov
addb
and
pop
lods
pop
dec
inc
mov
mov
shll
js
xor
xor
icebp
loope
cmc
ret
pop
pushf
mull
movsb
pushf
pop
jmp
in
jle
mov
push
inc
sub
fiaddl
js
mov
inc
xchg
into
aam
into
jb
jo
scas
lret
xchg
xlat
sbb
jnp
mov
ss
or
scas
sub
or
cmp
cmc
cmpsb
enter
rcll
filds
decb
ja
lret
inc
xchg
push
ss
cltd
lods
rorl
loope
cld
cmp
ret
notl
int
xor
xor
push
jo
and
scas
mov
add
jb
adc
pop
cmp
push
sbb
test
sbbb
push
jle
mov
loope
fistl
mov
dec
rcr
mov
aaa
cmc
push
aaa
mov
in
test
lea
pop
les
sub
leave
fidivrs
cld
jmp
jbe
insl
xor
insb
and
mov
call
bound
mov
clc
xchg
sbb
movl
and
je
cli
dec
aam
std
mov
lahf
or
sbb
mov
pop
push
fisubs
cmp
xchg
mov
adc
fidivrs
in
cmp
jne
sub
sub
test
xor
mov
cmp
jno
inc
stos
roll
dec
add
xchg
jne
les
ljmp
or
xchg
push
adc
imul
out
aad
lds
int3
out
int
pop
pop
sub
xchg
nop
loop
in
fldl
les
push
fstpt
or
mov
add
pop
dec
pop
fninit
test
inc
sub
xor
xchg
stos
xor
cmp
hlt
stc
scas
fnsave
int
xchg
aam
add
int
aam
in
fcoms
pop
in
ret
mov
hlt
sahf
scas
lret
sbb
or
mov
andb
orl
mov
push
jg
mov
add
test
rolb
adc
mov
or
dec
dec
push
enter
mov
ss
mov
mov
fldl
iret
enter
out
jae
dec
loopne
hlt
stc
bswap
inc
inc
fisttpll
cmp
push
push
inc
mov
daa
push
test
xchg
push
ljmp
imul
cmp
aas
enter
mov
cmp
mov
mov
cmp
bnd
lods
mov
sti
dec
add
scas
lret
mov
adc
mov
sbb
push
movsl
push
dec
xchg
pop
clc
movsl
aad
mov
outsb
sbb
pop
stc
add
and
and
sub
test
and
mov
push
sahf
lcall
pop
mov
sbb
push
cmp
fcoms
push
loope
or
sbb
pop
xor
adc
imul
int3
std
or
and
jo
pop
push
xchg
jb
aad
lahf
insb
pop
push
cli
sbb
xor
repnz
cmp
mov
cmc
or
jge
mov
iret
sub
and
push
in
and
and
bnd
cmp
loope
and
daa
fdivl
test
sub
in
add
sbb
mov
out
add
or
xor
push
lods
test
popl
jo
rcll
mov
scas
rorb
rcll
add
testl
cld
ss
cli
pop
pop
int3
xchg
push
push
cmp
or
lock
shlb
cmpb
shrb
dec
fldcw
fs
or
dec
or
popf
movsl
jecxz
xchg
insl
rcrb
sbb
cli
hlt
fists
loop
test
cmpb
js
and
sub
add
lret
addr16
jbe
arpl
jecxz
inc
cmp
mov
cld
dec
mov
hlt
movsb
stc
cs
subb
or
xchg
pop
pop
cld
mov
or
adc
lahf
dec
pusha
out
jle
xabort
ret
aad
fcomip
jno
cltd
rorl
jo
xchg
clc
test
loope
jecxz
pop
je
push
xchg
sub
leave
adc
push
pop
insb
sub
inc
and
ret
dec
dec
mov
dec
add
xor
lds
inc
adc
jae
pop
ficompl
fidivrs
mov
testl
test
lods
lcall
rorl
daa
mov
ficompl
movsb
and
cmc
jge
popa
adc
pop
je
pop
mov
sbb
pushf
fisttpl
iret
mov
push
fwait
pop
pop
sub
sub
pop
and
cltd
inc
add
or
jo
pop
jecxz
xchg
in
test
dec
jmp
dec
call
ficomps
jo
adc
xchg
insl
xor
sub
aad
fwait
jne
and
sti
mov
jnp
sbb
mov
cmp
mov
inc
jne
add
lods
popf
cmpsb
bound
jae
sub
sub
jl
pop
pop
or
xchg
cmc
adc
aaa
pop
jns
into
sub
sub
leave
imull
rcl
mov
xor
push
cltd
push
lds
test
sti
sub
iret
addr16
in
repnz
data16
rcr
xorl
lret
inc
fmuls
test
ficoml
fidivrl
xchg
enter
sub
subl
push
ds
lods
sub
mov
mov
xchg
add
add
hlt
push
inc
lahf
xchg
jo
in
dec
mov
dec
xlat
push
enter
movsl
call
testb
pcmpeqb
push
adc
xor
outsb
fidivs
cmp
dec
js
add
cmovo
int
dec
addl
jg
dec
mov
jbe
sbbb
aaa
and
test
jl
fildll
daa
cmpsl
cmp
pushf
jg
xor
or
pop
xchg
iret
pop
pop
imul
sub
hlt
addr16
jge
add
dec
mov
stc
jle
cmp
test
dec
adcl
lods
mov
mov
cltd
or
xor
cs
cmpsl
jmp
pushf
inc
pop
mov
daa
mov
adc
and
xchg
push
test
xchg
push
pop
xchg
lahf
das
out
les
or
stos
xchg
in
jecxz,pt
mov
jno
dec
pusha
push
fidivs
jbe
sub
xchg
pop
xchg
adc
mov
adc
divl
jp
mov
cwtl
adc
enter
xor
aas
mov
lcall
ffree
sub
cmpsl
dec
fadds
nop
jnp
dec
push
sti
dec
test
cli
mov
cmp
adc
push
add
mov
jb
mov
push
xchg
or
jo
out
imul
mov
pop
mov
mov
cmpsl
dec
kmovw
adc
jb
hlt
arpl
push
stos
cltd
cmp
or
lods
cmpsb
loopne
xchg
rorb
sub
add
out
hlt
sub
jl
xchg
jmp
dec
in
fsts
pop
xchg
in
arpl
addr16
mov
ret
push
mov
sub
xchg
add
ss
outsl
inc
adc
jo
mov
mov
mov
in
cmp
std
rcll
mov
cltd
cmp
int
fisttpl
and
pop
sub
movd
scas
jmp
jg
jg
inc
das
sbb
out
xchg
orb
cwtl
fwait
lret
notl
call
insl
adc
mov
inc
jne
rcll
cmpsb
xchg
xor
pop
out
fldl
daa
inc
xlat
shl
pusha
bound
mov
cs
or
jp
mull
jl
jnp
fbstp
push
dec
sub
xor
imul
and
iret
and
rcrb
out
mov
adc
dec
adc
loop
cltd
rcrl
and
adc
mov
scas
cwtl
std
movl
jmp
inc
mov
or
jg
push
xor
jge
push
movsl
aas
adc
push
pop
xor
or
mov
mov
mov
mov
sbb
push
cltd
out
mov
inc
das
push
lock
and
jl
jmp
or
mov
xorl
ret
mov
jg
inc
and
fcoml
outsb
or
insb
insl
roll
fiaddl
push
xchg
sub
cmp
mov
bound
sbb
xchg
inc
inc
push
outsb
out
push
lcall
push
xor
dec
mov
adc
sub
lret
pop
jbe
mov
add
and
add
sahf
fs
ljmp
adc
enter
xor
mov
arpl
ja
out
mov
mov
ret
pop
mov
mov
push
subw
and
jl
pmaxub
pop
ja
enter
call
pop
es
mov
shl
out
jle
cmp
data16
mov
sbb
imul
out
xchg
xchg
popf
lds
pop
mov
sbb
mov
push
adc
int3
and
sub
mov
jno
mov
cltd
mov
sub
add
cmc
sbb
out
xchg
flds
ret
push
leave
mov
inc
sub
inc
mov
jnp
outsl
rolb
mov
mov
mov
lea
xchg
leave
add
and
add
iret
repnz
and
arpl
jmp
shlb
ja
imul
int
push
and
shll
incl
into
sub
mov
dec
xchg
leave
jnp
aad
jmp
inc
mov
in
das
sub
lds
aad
roll
pop
mov
adc
fsts
or
data16
mov
out
ret
insl
add
add
push
dec
pop
in
adc
inc
lcall
loop
clc
ret
scas
pop
or
push
push
hlt
jne
jge
mov
es
popf
test
lcall
rorb
pop
lods
xchg
movb
dec
into
jb
xor
jp
shlb
jb
das
adc
es
imul
dec
mov
cmp
jmp
inc
mov
pusha
adc
jecxz
jbe
lcall
iret
dec
in
adc
mov
pop
pop
lcall
or
push
or
dec
in
daa
lcall
cmp
jb
loopne
push
jge
jno
mov
ljmp
sti
js
pop
fs
cmpsb
cmpsb
sbb
popf
jb
addr16
pusha
sub
sub
sbb
ja
out
lods
adc
or
jne
cwtl
fs
add
push
lods
cli
sub
or
ds
loopne
fdivs
xchg
pop
mov
push
lock
xor
pop
sti
sbb
imul
pop
fwait
push
rcrb
add
inc
daa
jp
roll
fcom
stos
xchg
fwait
mov
push
aaa
out
fsubs
mov
dec
sahf
imul
pop
psubq
ja
push
xchg
dec
sbb
sbb
inc
leave
sub
enter
enter
enter
or
loop
sbb
push
xchg
cwtl
sbb
push
ja
js
imul
xor
push
add
cmp
dec
adc
ljmp
roll
sbb
inc
fists
xchg
sbb
fldl
aas
repnz
dec
bound
mov
loopne
push
push
add
pop
das
add
fsubrs
daa
add
les
xor
adc
mov
lret
push
xor
mov
pop
mulb
cmp
sbb
mov
sbb
lock
push
lds
scas
in
sbb
idiv
sub
mov
mov
push
shlb
add
jle
push
cmp
adc
mov
js
dec
adc
mov
pop
dec
cltd
push
jb
test
ret
dec
ljmp
out
jp
test
pop
lds
jae
scas
and
sub
inc
add
mov
lock
jmp
fistps
jne
dec
mov
dec
add
pop
inc
test
icebp
into
out
sbb
jnp
mov
and
jo
aaa
loope
and
mov
movsb
loop
jno
jmp
in
add
movsl
icebp
cmc
mov
and
inc
ret
xorl
mov
lret
test
inc
xlat
pop
mov
negb
sub
test
xor
std
aad
mov
adc
fists
cltd
or
mov
mov
inc
mov
int
hlt
outsb
dec
insb
xchg
xchg
mov
sbb
mov
push
xchg
lret
pop
adc
test
arpl
inc
xor
aaa
xchg
imul
rolb
repnz
lcall
lret
xlat
cli
pop
inc
xchg
in
enter
cmpsb
mov
sbb
and
stc
arpl
lods
xchg
test
add
bound
scas
push
cltd
xor
mov
pusha
inc
fcoml
mov
mov
mov
cmp
into
out
lds
xor
add
inc
lea
test
or
popa
and
mov
dec
and
sbb
leave
incl
ss
cmovo
pop
or
stc
dec
push
push
push
popa
xor
pop
nop
xor
sbb
in
pop
cmp
ret
imul
sahf
xor
or
sbb
jge
sbb
sub
pushf
add
pop
sbb
pop
cmc
dec
lods
imul
nop
jno
sahf
out
jl
or
pop
inc
sbb
adc
cmp
sbb
inc
mov
pop
iret
aad
add
jl
adc
not
jp
push
pop
movsb
insb
mov
push
or
push
lock
cmp
sub
pop
sub
fcompl
test
bound
xchg
in
add
mov
sub
sbb
ret
icebp
sarl
xchg
aaa
push
push
icebp
pop
scas
xchg
mov
stc
rorl
jo
scas
cmp
test
adc
mov
cmp
jmp
loope
repnz
jecxz
arpl
xchg
daa
mov
xor
jno
or
inc
add
pop
dec
mov
inc
push
lea
mov
dec
fcomp
stc
jl
or
int
ret
test
or
add
add
iret
pop
mov
adc
and
pusha
lea
dec
push
lods
xchg
dec
scas
lds
cmp
sarl
andb
cltd
add
lods
fsubr
rcr
out
out
mov
dec
shll
ja
int
in
pop
jle
mov
push
lret
xchg
je
sub
aam
dec
das
pop
loopne
pop
call
stc
test
jae
jns
inc
adc
outsl
test
jmp
das
sbb
xchg
xchg
sbb
mov
orl
push
pop
mov
mov
sub
jl
fwait
mov
adc
dec
pop
jne
xchg
push
test
popa
dec
shll
jns
sbb
fnstenv
inc
sbb
out
ss
mov
test
call
mov
xchg
rep
and
imul
or
jmp
add
push
mov
into
fucomp
cmpsl
or
mov
fdivrp
push
cli
pop
dec
aam
stos
fdiv
jne
mov
rcrl
xor
add
hlt
or
lret
fcomp
adc
fcoml
mov
lods
add
inc
incb
xchg
test
adc
dec
stc
shl
xchg
pop
aas
inc
js
cld
cmp
in
mov
adc
sbbl
mov
mov
push
cwtl
push
pop
inc
xchg
cmpsb
leave
cmp
pop
push
push
mov
xor
jbe
stc
int3
jne
jg
xor
xor
dec
push
add
pushf
ret
in
dec
or
pop
sbb
mov
hlt
sbb
inc
push
int
jb
sub
adc
je
push
lret
neg
jge
pop
bound
repz
xor
and
fisubrs
pop
pushf
dec
jne
xchg
push
jnp
leave
inc
pop
inc
cli
fistpl
xor
add
pcmpgtw
dec
jmp
repnz
ja
sahf
ljmp
pop
pop
ljmp
cmp
popf
insb
push
cli
or
pop
pop
imul
subb
sbb
cmp
jne
in
cmp
sub
lds
jp
mov
lret
popa
out
imul
and
or
dec
jg
cmp
add
insb
ljmp
dec
xlat
rcrl
inc
daa
mov
cmc
mov
mov
loop
cmp
mov
ds
rolb
or
cmpsb
xor
in
fnstcw
mov
ret
jo
leave
in
and
test
lret
fs
add
in
xor
jb
cli
adc
xor
push
mov
jg
mov
cmc
xchg
mov
lock
add
inc
mov
leave
aad
leave
fdivl
adc
xor
scas
mov
mov
cmp
jns
jg
ret
sub
fistps
or
and
in
aas
sbb
cmpb
adc
pushf
es
jge
loopne
add
ficoml
sahf
cmp
js
test
jns
jae
test
cmp
xchg
jle
insl
mulb
sbb
andb
ss
addb
or
pop
mov
and
outsl
ds
push
sub
cmc
push
pop
out
cld
test
sbb
scas
nop
pop
outsb
xchg
and
ficoml
pop
dec
xchg
xchg
push
fisttpl
pop
push
mov
insb
mov
sub
or
pop
ds
add
test
or
jne
pop
sub
or
sbb
adc
inc
mov
lods
sbb
dec
cmp
cmp
adc
iret
cmp
mov
leave
mov
mov
cmpsb
pop
xchg
dec
aam
sub
or
adc
adc
mov
ljmp
je
jns
cmpsl
movsl
fidivrl
and
call
and
movsl
hlt
xchg
out
test
pop
pusha
icebp
loope
outsb
pusha
in
mov
repnz
icebp
or
fists
std
jo
cmpsl
ss
xchg
sbb
sub
mov
lret
push
orl
fucomip
xchg
fdivrl
xchg
push
adc
pusha
mov
insb
cmp
cmp
pop
ss
adc
imul
js
cmpsl
inc
push
lds
int
shr
add
jge
add
adc
jb
pop
cmp
mov
andb
call
int3
adc
popf
clc
push
sbb
jle
cli
dec
scas
push
ja
js
add
js
loope
mov
adc
mov
movsl
sbb
rorl
xor
movsl
fnsave
ret
cli
mov
jmp
mov
cmp
sbb
push
cmovno
mov
stc
adc
mov
inc
ds
in
mov
or
mov
fs
stc
inc
ret
xchg
ret
push
cmpb
andb
sbb
mov
push
in
mov
push
das
jne
push
es
fs
enter
jo
add
in
mov
mov
and
sub
xor
jno
xchg
push
pop
and
xor
repnz
jbe
addr16
in
cmp
movsl
popf
sahf
xor
scas
push
ret
stc
dec
jmp
and
jmp
cmc
mov
cmp
mov
inc
cmpl
pushf
pop
sub
jg
stos
out
rclb
lret
fadd
jp
xor
add
or
pop
in
cmp
mov
lea
daa
adc
add
mov
lcall
lret
aas
sbb
nopl
mov
jge
daa
dec
sub
test
dec
adc
inc
push
lcall
push
or
jb
daa
add
mov
rcrb
pop
or
add
add
pop
pop
out
xorl
fwait
lcall
ret
es
movsb
mov
xchg
sarb
shrl
inc
or
and
dec
dec
cmpsl
sub
mov
out
xor
xchg
jnp
fstpl
aad
jne
xor
jns
dec
xchg
cwtl
sbb
jle
jnp
fnstcw
filds
insb
sahf
test
in
sub
pop
insb
xchg
sbb
inc
push
loope
push
dec
cmp
dec
insb
mov
xchg
imul
clc
mov
test
xor
dec
sbb
idivb
insb
fists
pop
pop
leave
inc
dec
sbb
cmp
aaa
and
es
int
jne
imul
push
ret
arpl
xchg
sbb
popf
cmp
pop
lret
test
test
iret
and
inc
sbb
pop
fucomi
xchg
inc
outsl
dec
push
add
jl
cmp
insl
repnz
sahf
mov
insl
xor
or
jl
pmaxub
pop
cmp
xor
lret
and
push
ljmp
jmp
xor
push
push
xor
lcall
add
pop
sbb
mov
inc
daa
jg
sub
sub
es
sub
dec
int
sahf
dec
out
jb
test
das
nop
test
outsl
cmp
or
scas
dec
daa
cmp
in
jecxz
push
leave
mov
call
jno
push
cltd
das
stos
sahf
fdivrl
xchg
push
push
lret
jo
enter
hlt
test
mov
pop
inc
je
sub
push
mov
inc
lds
push
sbb
les
popa
push
mov
ss
test
mov
punpckldq
mov
push
xor
mov
mov
lods
mov
push
out
imul
shll
adc
mul
movsl
jbe
adc
ss
push
sbb
and
or
xor
addr16
cmp
aaa
jno
mov
push
in
cltd
aam
popa
aam
call
das
cli
out
int3
sbb
xchg
movsl
sub
pushw
ror
lods
insb
jns
ss
aaa
inc
or
sub
out
pop
mov
add
mov
movsl
imul
mov
iret
pop
cmpb
ret
incb
adc
insb
xor
dec
popf
push
adc
hlt
mov
pop
xchg
lret
ljmp
ffreep
xchg
stos
xor
popa
out
test
push
cwtl
std
loop
mov
add
xchg
stc
mov
imul
jb
xchg
xchg
mov
fcmovnu
test
push
inc
inc
mov
dec
cmp
mov
lods
dec
xor
enter
xor
loopne
test
repz
scas
pop
popa
test
je
cs
inc
test
sub
scas
cmp
sbb
movsb
sub
push
lcall
push
outsl
push
fmulp
je
inc
test
dec
jne
inc
notl
fistl
mov
mov
push
pop
xor
sub
hlt
mov
or
push
pushf
xchg
xor
xor
lret
inc
add
cmc
lcall
loope
faddl
or
dec
bound
mov
aaa
pop
mov
repnz
adc
mov
nop
fistps
loopne
jle
jmp
pop
mov
mov
push
xlat
lods
jmp
inc
fnsave
xor
clc
cltd
sub
or
cs
movsl
mov
xlat
subb
push
inc
or
fwait
push
clc
cmpl
loop
jecxz
xor
shrl
dec
negb
out
into
js
scas
or
gs
call
outsl
pop
lock
sahf
loopne
xchg
pop
imul
arpl
aam
sub
daa
jb
pop
je
adc
sbb
jmp
insb
aas
and
pop
cli
lods
jb
imul
pop
jecxz
and
sti
xchg
lds
shl
addb
dec
jmp
cld
or
mov
ss
in
adc
push
mov
jns
mov
adc
pop
sbb
sti
out
add
gs
clc
outsl
add
aaa
into
nop
test
inc
mov
xchg
gs
jmp
int
push
out
sahf
inc
cltd
xlat
or
push
loopne
rcr
add
mov
mov
iret
pop
add
mov
rcrb
mov
xor
insb
xor
lret
jae
pop
lea
into
jno
enter
les
fst
pop
adc
mov
push
mov
lret
movsb
sar
pop
adc
fwait
enter
inc
jno
xor
push
jne
adc
rcll
xchg
shl
sub
std
jae
and
push
test
add
or
cwtl
push
js
pusha
cld
in
shrl
stos
add
cli
addl
and
sbb
mov
dec
insl
enter
sub
cmp
scas
inc
out
push
lret
gs
dec
lods
fsubrl
xor
popf
jle
repnz
fs
xor
lret
mov
xor
scas
sub
pop
and
pop
test
xchg
and
loop
lcall
testl
daa
mov
leave
inc
iret
mov
loop
push
fadd
xchg
fisubrs
xchg
arpl
push
mov
dec
adc
inc
jbe
mov
repnz
lock
insl
test
std
roll
pop
jmp
push
inc
jb
jecxz
icebp
push
push
xchg
push
xchg
ljmp
cltd
mov
lock
mov
xchg
or
aam
adcb
loope
daa
jns
pop
cli
cltd
and
push
notl
mov
add
mov
out
adc
mov
sbb
adc
shll
lds
loopne
xor
repnz
pop
sub
cmp
movsl
push
icebp
jns
cmp
lcall
mov
out
sbb
mov
sti
jg
push
insl
ds
push
nop
fistps
inc
jb
mov
or
mov
imul
sbb
cmp
mov
cmp
in
cmp
js
ljmp
call
sub
stc
lea
lea
out
push
sbb
xor
xor
es
jo
int3
and
xor
jnp
ds
add
mov
xorl
mov
sbb
popf
je
mov
pop
scas
pusha
push
bound
mov
push
bound
movsl
outsb
andl
cmp
sub
repz
imul
arpl
pop
xchg
and
icebp
push
and
in
dec
outsl
repnz
or
pusha
push
test
aam
fwait
xor
sbb
cli
fiaddl
mov
jp
rcr
dec
xchg
lcall
mov
lds
in
rolw
mov
add
out
iret
pushf
push
aam
mov
inc
xor
cmpsl
mov
pop
mov
mov
fmuls
addb
scas
add
in
xchg
addr16
aad
xor
xor
cmp
rcrl
pop
cld
sub
ficoms
out
or
mov
pop
clc
daa
jge
cli
dec
sub
into
das
mov
lahf
mov
out
aam
xchg
popf
out
cmp
cmpsb
lret
add
rcrb
dec
das
jne
fxam
fdiv
and
pop
popf
mov
xor
mov
ret
add
sbb
pop
rorb
lods
repz
sti
sub
push
sub
cmpsb
and
dec
test
inc
pop
in
das
dec
imul
aad
dec
push
mov
andb
pushf
test
inc
les
aad
aaa
pusha
add
scas
lods
jnp
push
or
lret
scas
dec
pop
ror
dec
aam
or
in
mov
out
xchg
and
call
adc
push
mov
ljmp
lret
xchg
insl
popf
jbe
xor
xchg
loope
or
inc
or
dec
and
jl
cmp
jnp
shl
test
outsb
in
xchg
lods
popf
shlb
dec
adc
mov
pop
adc
mov
js
add
cli
and
push
inc
lea
jae
stos
movsb
repz
cltd
push
fldt
ret
dec
or
adc
jl
in
push
push
inc
rorb
push
ss
call
ficompl
add
scas
arpl
adc
mov
int3
test
pushf
pop
mov
lcall
jp
xchg
and
enter
sbb
sub
add
push
addr16
out
pop
mov
xor
scas
xlat
ffree
in
mov
lret
mov
and
pop
lods
loop
lods
mov
cmp
cmp
pusha
leave
loope
and
pop
aaa
stc
stc
lret
xchg
xchg
rol
jecxz
fimull
xchg
sbb
jns
clc
inc
xchg
jmp
insb
adcb
jnp
jnp
jo
out
jbe
dec
mov
ja
leave
into
loope
jg
mov
shll
jo
jle
lretw
and
stos
cld
faddl
sub
adc
je
out
je
sub
inc
xchg
sahf
xor
xchg
pop
push
in
mov
arpl
mov
cmpsb
xor
sub
mov
jb
inc
stos
push
fldt
lahf
pop
icebp
into
fcmovbe
fnstenv
xchg
push
lret
pop
jecxz
gs
sbb
imul
sub
xchg
pushf
das
clc
cmovge
xchg
in
sub
mov
xlat
cs
xor
cmpsb
mov
fcoms
cmp
sbb
je
xor
adcl
outsb
fimull
lds
rclb
lds
das
loope
movsl
popa
and
adc
jo
jbe
sub
cmp
xchg
sarl
pop
xchg
mov
jp
testl
mov
out
inc
inc
sbb
aam
push
ja
jl
mov
jle
push
mov
jo
or
fsubs
insl
out
cli
sahf
bound
mov
jge
insl
pusha
or
pop
out
ss
js
push
jmp
repz
js
int3
aad
pop
nop
fwait
gs
imull
push
lret
lea
adcl
pop
xor
loop
mov
sub
rolb
and
adc
shll
pop
mov
out
int3
cli
es
nop
in
cltd
clc
sub
jns
cmp
adc
in
sti
aas
push
in
jae
xchg
mov
pop
mov
test
shll
ror
idiv
pop
cmp
mov
or
or
fadd
or
popa
in
mov
jns
movsl
cmpsl
cltd
adc
cli
xchg
shrb
enter
outsl
push
std
lret
js
in
mov
cmp
loope
or
jp
sbb
jp
dec
loopne
adc
push
xchg
cwtl
jne
movsb
cwtl
add
sbb
mov
aam
lret
push
imul
faddp
push
leave
lahf
push
out
out
and
daa
sbb
xor
push
dec
stos
mov
lea
jno
jno
lahf
lahf
loope
and
jb
lret
inc
pop
call
dec
es
imul
push
add
push
jl
or
jl
mov
inc
jne
xor
dec
notl
scas
das
push
das
or
or
mov
stos
movsb
mov
jl
push
and
lahf
dec
mov
cmpsl
test
fidivs
inc
jge
push
loope
daa
add
jnp
test
adc
cs
xchg
in
into
mov
cld
insb
aas
outsb
jle
icebp
sub
iret
jle
cltd
inc
bndldx
mov
in
xor
adc
clc
or
add
ret
sub
add
xchg
mov
lods
stos
and
aas
xchg
xor
xorb
lods
xor
aad
xor
xlat
mov
dec
hlt
sbb
sub
in
shrb
pop
scas
sbb
mov
jae
std
cmp
pusha
sbb
lock
aas
fstps
js
mov
lret
repz
mov
inc
inc
lret
fsubr
stos
mov
mov
repz
xor
repz
mov
and
test
stos
shrb
jns
popf
jge
mov
mov
fsts
inc
xchg
cmp
lods
stos
jle
inc
sub
sbb
lods
in
mov
jbe
inc
pushl
mov
lock
adcl
pop
mov
sub
dec
subb
fidivs
pop
cmp
addr16
movb
inc
insl
dec
pop
mov
cmpsb
sub
adc
bound
push
shl
insb
or
push
incl
jle
movsl
jne
and
cmp
sbb
sub
sti
push
or
es
gs
fisttpll
cmp
lock
lahf
out
xchg
test
lea
push
sarl
rcrb
ja
nop
cld
cmpsl
mov
scas
and
mov
cmp
push
cmp
xor
mov
sbb
in
shrl
and
pop
pusha
icebp
inc
and
mov
jmp
daa
ljmp
imul
mov
lods
orb
enter
fs
int3
cmp
insl
xchg
pop
fcoml
xchg
push
jnp
into
outsl
aaa
stos
cld
mov
push
lret
jo
ret
inc
or
mov
jmp
sub
adc
sbb
push
shr
fidivrl
xor
lret
xchg
inc
push
xor
shll
faddp
mov
dec
ljmp
test
insl
or
ds
mov
adc
jmp
xchg
movsl
gs
sahf
pop
in
sub
mov
cmp
sbb
add
add
sbb
xor
sub
mov
dec
xchg
push
orb
mov
ds
mov
push
stos
jl
inc
push
mov
and
push
push
mov
aaa
das
push
movsl
push
dec
cmp
test
das
js
push
sub
std
fst
cmp
pop
push
xchg
addb
test
sti
popa
mov
pop
loope
fmull
and
mov
popf
outsl
nop
rcll
es
dec
ds
xor
mov
shll
xchg
mov
jmp
sarb
adc
cmp
pop
pop
fwait
adc
scas
out
pop
or
es
jns
imul
or
push
push
fwait
push
ret
ljmp
les
xchg
sbb
mov
in
js
xchg
loope
cmc
mov
mov
and
lret
test
cmp
mov
mov
xchg
jmp
ds
mov
add
cmc
jmp
test
mov
int
adc
cmp
inc
mov
test
les
test
and
scas
jmp
movsb
cmc
into
mov
push
fmuls
sub
inc
lea
clc
inc
cs
iret
inc
xor
adc
xchg
pop
nop
mov
movsl
mov
je
xchg
subl
rcrl
mov
icebp
imul
push
ret
out
pop
push
lahf
xchg
pop
pusha
mov
sbb
mov
mov
sbb
out
sub
adc
xchg
jno
aaa
sbb
movsl
jmp
and
cmp
add
std
rcll
xchg
sbb
sbb
mov
mov
clc
inc
testb
or
bound
int
dec
lea
insb
gs
adc
out
xchg
push
repz
mov
cmp
pxor
int3
ret
aas
lds
icebp
mov
cmp
loope
and
int3
and
cs
or
mov
mov
pusha
inc
cmp
pop
sbb
js
jns
clc
and
bound
enter
sub
adc
int
out
mov
and
cmpsb
dec
aad
lods
mov
mov
jl
mov
call
inc
popa
fisubrl
mov
loopne
xchg
dec
cs
push
popa
mov
aaa
jge
jg
lods
cmp
add
inc
sarl
push
sbb
stc
and
fnstcw
adc
mov
and
ret
lock
clc
add
movsb
ja
pop
into
cmp
stos
out
push
sbb
aam
outsl
adc
dec
jp
ja
sbb
outsb
ljmp
fimull
js
nopl
mov
inc
push
mov
inc
mov
and
jecxz
stc
sub
push
sbb
mov
enter
push
mov
lret
add
mov
mov
sub
push
mov
sbb
jbe
imul
mov
mov
cmp
push
mov
xor
lret
fmull
push
mov
mov
dec
or
or
jmp
xlat
mov
gs
sub
data16
loop
testb
iret
mov
in
mov
fcmovbe
fst
and
pop
arpl
adc
sub
pop
popa
push
dec
cmpsl
cmpsb
add
xchg
xchg
fwait
jmp
or
jns
pop
mov
pop
daa
pop
orb
mov
dec
repnz
mov
and
pop
jl
pop
cmpsl
aad
lret
push
orb
and
sbb
adc
hlt
shll
lock
loop
scas
cwtl
cmpsb
xor
popf
and
dec
mov
pop
outsb
cmc
push
inc
pop
sub
xchg
imul
ret
mov
repnz
mov
jp
jbe
mov
mov
pop
fbstp
add
cmc
cmp
scas
icebp
in
jb
push
push
mov
xor
insl
adc
insl
mov
inc
aad
push
push
mov
test
jo
pop
mov
popf
mov
repz
insb
test
sub
in
cmpsb
test
mov
inc
or
ret
or
lea
aaa
arpl
jecxz
xlat
cwtl
in
lcall
xchg
jg
addr16
add
andl
imul
not
sbb
in
adc
jae
sbb
pop
or
and
outsl
fsubrs
pextrw
ret
pop
out
outsl
dec
cs
imul
mov
mov
mov
cmp
push
add
dec
xor
mov
in
xchg
pusha
mov
jns
pop
repnz
xchg
jbe
jo
adcl
adc
jl
cmpsb
cmp
xchg
push
jl
and
cmc
dec
or
mov
aam
dec
sbb
sbb
sub
test
sub
sub
shl
aaa
iret
mov
test
cwtl
clc
test
nop
lret
pop
or
cmp
push
popa
mov
dec
cmp
push
test
ds
or
adc
andb
fistpll
fcomip
inc
pop
bound
cmpsb
mov
jg
mov
sub
cmpsb
and
mov
or
mov
fdivrs
xchg
sbb
sbb
xor
jge
mov
jno
insb
jns
mov
lcall
xchg
sbb
mov
add
enter
mov
mov
roll
lds
bound
jg
in
mov
pop
pushl
mov
jbe
xchg
xor
push
outsl
cmp
packsswb
stos
cli
out
stos
push
sbb
xchg
lods
sarb
dec
sti
inc
mov
loope
cmp
call
xlat
mov
mov
outsl
stc
pushf
lods
sub
aaa
mov
push
mov
cmp
mov
les
mov
fwait
icebp
lods
ja
or
rcrb
mov
dec
lret
stos
or
mov
mov
lds
mov
addr16
out
mov
xor
cmp
pop
das
xor
js
jle
icebp
push
test
pop
test
or
bound
jne
jge
push
sub
in
pop
jg
mov
negl
ret
test
pop
mov
jae
jl
ljmp
or
push
jbe
lock
stos
test
enter
nop
je
loopne
dec
inc
cltd
jp
sbb
leave
cmp
and
mov
mov
fisubs
add
adc
inc
mov
data16
pop
dec
push
sbb
push
out
arpl
cmpb
int3
adc
mov
loopne
pop
mov
xchg
stos
cmp
stos
rcll
fnstenv
shll
and
cli
in
enter
cmp
cs
testl
pop
pop
adc
scas
jo
push
xchg
into
sbb
push
repz
mov
adc
dec
pushf
mov
inc
sub
jae
out
lods
adc
mov
out
jle
sahf
shrb
or
lcall
fs
jns
shll
mov
cmpsb
mov
sarl
xor
sub
test
push
sub
icebp
jl
ljmp
jae
les
cmp
cmp
jnp
push
jmp
imul
dec
pushf
mov
cs
mov
scas
push
inc
and
sub
push
mov
jo
arpl
lret
sahf
pop
xor
mov
add
jae
push
mov
push
lea
clc
xor
pop
clc
sti
les
popl
or
dec
or
mov
aad
and
ds
rdtsc
loopne
outsl
add
push
stos
das
mov
ds
sub
orl
les
jae
push
lock
std
ljmp
mov
mov
ret
jecxz
xchg
in
ret
pop
sub
add
xchg
cmpsl
std
in
test
or
mov
lcall
cmp
cmpl
fmul
test
int3
xlat
mov
lret
leave
pop
jns
cmc
je
xor
jbe
jne
adc
mov
outsl
aas
sbb
add
mov
shll
sub
imul
jge
scas
mov
cmp
mov
pop
daa
lods
sub
xchg
movsb
jbe
aaa
test
add
repz
and
rclb
test
sbb
mov
dec
sub
add
sti
xor
and
hlt
outsb
sti
fisubrl
in
jge
out
mov
push
mov
pop
popf
sbb
pop
in
leave
pop
cli
cltd
mov
mov
jb
mov
adc
or
sub
popa
mov
int
add
movsb
ja
sub
sbb
mov
ficompl
add
cmp
jbe
cmp
enter
add
lods
xchg
sarb
fnstcw
dec
or
jge
fidivrs
push
mov
xchg
sub
loop
push
cmp
push
fldcw
mov
enter
rcrb
and
mov
dec
stc
adc
std
cmp
jge
mov
pop
cmp
sbb
int3
mov
xchg
fisubs
and
loopne
push
in
xlat
call
pop
pop
in
aas
leave
imul
je
xor
xor
ljmp
lock
fcomps
jp
std
cmp
jb
mov
adc
rolb
dec
rcrb
sub
jne
mov
xchg
jne
std
fadds
fildl
decb
outsl
imulb
fs
jle
aaa
rcrb
dec
mov
xor
push
scas
jne
xchg
test
sub
ror
shr
idivb
lods
loop
int3
push
push
imul
jle
push
jl
xor
pop
sarb
addl
xchg
mov
hlt
test
shrb
fsubrs
push
lahf
xor
fmull
lea
jl
mov
in
mov
cmp
mov
xchg
pop
pop
adc
and
dec
jns
loopne
addb
test
pop
jnp
data16
fidivrl
xchg
jle
subb
inc
sbb
mov
jns
sahf
or
mov
sarb
in
inc
cmp
popf
inc
popf
xlat
mov
pop
flds
mov
test
js
and
outsb
mov
mov
cmp
and
jb
push
mov
scas
xor
ds
les
mov
and
adc
xor
mov
mov
lret
sbb
aas
cmp
jb
or
mov
adc
in
mov
xchg
mov
mov
dec
push
mov
rol
arpl
test
or
andl
in
repnz
ljmp
movsl
xchg
test
ss
jmp
cwtl
pop
sbb
fldenv
je
dec
ljmp
rcrl
mov
cmp
std
adc
loop
jo
xlat
add
jbe
addr16
int3
sbbb
stc
jle
cmp
jmp
mov
pop
sub
jp
imul
sbb
shll
sub
popa
jns
sbb
mov
arpl
mov
shl
xor
lock
jmp
ljmp
jno
std
lock
pop
js
daa
lret
leave
das
xchg
outsl
in
sahf
aas
jmp
mov
push
in
sub
lcall
mov
push
mov
xchg
stos
sarb
vhsubpd
loopne
popf
xchg
add
xchg
movsb
mov
mov
dec
xchg
sti
sahf
aas
lock
es
lea
cmp
clc
in
pop
inc
fdiv
jle
jns
ss
clc
or
mov
jae
rcrl
xor
xor
test
or
stos
in
pop
push
sub
xor
add
stos
pop
dec
sbb
nop
bound
jae
adc
mov
and
sbb
add
jmp
push
fs
sbb
popa
out
out
xor
sbb
and
add
or
out
imul
dec
cmp
repz
mov
ficompl
inc
pop
lret
dec
aam
out
mov
cmp
mov
and
jle
movntq
sub
arpl
dec
es
mov
daa
sbbb
rcrb
sbb
adc
test
aas
and
leave
adc
dec
or
int3
and
jns
jno
int
gs
nop
push
int
shll
lcall
xor
cmpsb
jge
inc
andl
xchg
addb
push
jbe
ja
lock
mov
or
fwait
jmp
mov
or
adcb
imul
ja
shll
lahf
dec
cmpsb
mov
shrl
fcompl
aas
dec
ss
cli
fadds
adc
adc
fnstenv
dec
pop
sub
pop
inc
rol
pop
cmpsb
in
in
or
int3
xor
mov
gs
test
inc
push
push
dec
lret
jle
repnz
jl
mov
rolb
push
test
movsb
xor
jnp
mov
lcall
xchg
cmp
add
mov
push
shll
andl
and
pop
push
stos
pop
mov
inc
ja
and
sbb
repnz
cmpb
cmp
shl
adc
int
xchg
scas
push
ds
imul
sbb
loope
xchg
into
sbb
je
pop
dec
test
cmp
int
mov
mov
dec
insl
fistps
fwait
roll
cmpsb
xor
pop
test
ja
aas
in
nop
lret
shlb
lahf
push
loop
fwait
insb
mov
mov
pop
loope
pop
add
pop
cmpsb
dec
jge
jno
lret
add
sbb
push
adc
loope
call
in
test
lea
cld
fadd
sbb
fnstsw
mov
mov
sbb
outsb
pop
pop
mov
xchg
jmp
pop
call
mov
xor
popa
jecxz
loopne
add
popa
imul
lret
and
outsl
sbb
lds
xchg
xor
out
lmsw
cs
cwtl
mov
xchg
ss
stos
lret
adc
aam
pop
enter
fiaddl
ret
fcoml
adc
lret
mov
xchg
inc
push
xchg
and
pop
in
and
ret
push
ficoms
loope
addr16
adc
daa
repz
into
out
ret
inc
push
mov
sub
out
lret
sbb
add
scas
or
andl
mov
popa
fsts
xor
clc
add
movsb
into
or
jae
test
adc
sub
mov
mov
adc
movsb
mov
dec
cltd
pop
and
mov
mov
inc
aad
cmpsl
popf
int
sbb
push
std
push
outsl
pop
mov
cmpsl
cwtl
add
push
add
xchg
inc
iret
addb
mov
clc
mov
jno
sub
dec
jo
ljmp
and
jmp
dec
mov
out
push
js,pt
scas
or
dec
push
mov
xchg
rcrl
gs
mov
mov
test
inc
loope
mov
scas
mov
pop
xchg
shll
jno
xchg
adc
dec
cwtl
add
xor
idivb
xlat
xchg
cmp
outsl
sub
scas
mov
js
icebp
dec
mov
pop
movsb
cmp
xor
insl
pop
hlt
mov
mov
push
and
fldenv
dec
jl
fidivrl
xor
arpl
test
or
pop
xchg
es
mov
add
adc
adc
sbb
vdivps
jmp
add
pop
mov
and
mov
xchg
fisubs
iret
aam
adc
pop
movsb
sub
push
repnz
jge
out
in
mov
pusha
out
inc
gs
cmp
hlt
inc
xchg
pusha
stc
roll
test
je
into
ret
rcr
sti
push
rcll
lods
or
inc
cmp
xchg
push
push
mov
sahf
or
sbb
push
out
fidivrs
mov
repnz
xchg
cmpsb
bnd
xor
out
pop
xor
enter
icebp
dec
roll
fcompp
daa
cmp
push
push
andb
mov
and
inc
mov
es
and
or
inc
mov
xor
jne
mov
fadds
sbb
lods
les
lahf
and
push
in
call
jmp
clc
add
aam
lock
cmp
or
xor
adc
sti
jo
bound
or
sub
ja
cmp
push
sbb
dec
or
shrb
fstp
dec
ljmp
mov
or
jae
push
les
rol
in
mov
jecxz
icebp
inc
xor
pop
or
inc
xchg
out
into
or
pop
ja
cmpsb
mov
xorl
xor
ja
mov
sub
inc
loopne
aad
subl
test
dec
ljmp
bound
fstpl
adc
stc
pushf
add
xlat
add
and
mov
mov
sbb
outsb
push
sbb
or
movsb
je
sti
jbe
aam
jecxz
adc
call
jae
scas
std
sbb
jo
loop
and
popa
popf
cmp
test
js
dec
xor
sub
pop
dec
test
outsb
fisttpl
fimuls
push
int3
int3
jecxz
mov
cmp
sbb
inc
sbb
push
xchg
xchg
arpl
rolb
mov
and
rorb
das
scas
inc
cs
aad
cmp
xor
mov
addr16
cmc
pushf
xabort
loopne
mov
jnp
mov
xchg
sub
jle
adc
xor
fxch
rcr
cmp
dec
sub
fsubrp
call
mov
add
loope
mov
fldcw
icebp
xor
jns
inc
ret
and
inc
int3
shll
push
or
xchg
iret
xor
dec
std
aaa
jge
ds
mov
adc
mov
test
mov
cltd
inc
inc
fwait
arpl
add
aas
push
mov
mov
or
js
mov
ret
and
shrb
adc
jp
mov
push
sbb
xchg
sub
hlt
stos
push
adc
ss
subb
xchg
and
das
cwtl
and
cmp
popf
pop
cmp
in
cmp
add
cmp
inc
mov
jle
jle
pop
jl
inc
xor
add
pop
scas
repz
fistl
dec
mov
jg
push
popa
lods
inc
xor
cli
jl
icebp
leave
mov
aad
imul
fists
inc
mov
pop
cmp
inc
outsl
push
mov
sbb
add
jle
cmc
and
cmpsl
mov
dec
inc
or
push
repnz
test
pop
push
or
cs
roll
arpl
push
xorl
jmp
sbb
mov
cmp
lods
mov
mov
movsl
cmp
stos
mov
inc
push
call
in
mov
sti
cld
stos
sahf
je
stos
ret
in
add
aad
out
inc
dec
sub
aas
xchg
repz
clc
in
aas
push
and
cltd
jl
push
cwtl
test
dec
adc
jno
xlat
je
dec
js
cmp
imul
fsubrp
pop
xor
pushf
ds
out
pop
cmc
shrl
xchg
lcall
or
imul
add
jle
in
lret
push
add
stos
imull
mov
ret
stos
rcll
sbb
mov
mov
and
mov
call
xor
jno
insb
add
xor
pop
cwtl
mov
std
cmp
unpcklps
cmpb
ss
adc
mov
ljmp
mov
jecxz
and
jne
popf
push
icebp
push
scas
not
push
sahf
cmp
cmpl
sbb
lret
js
mov
lcall
lea
push
mov
sbb
lahf
pushf
repnz
dec
or
iret
jmp
mov
mov
aaa
testl
push
and
cmp
int3
sbb
test
mov
sbb
int
rcr
lret
and
xor
pop
outsl
xchg
ljmp
lods
bound
cmpl
loop
push
in
je
push
and
pop
sub
daa
js
out
cmpsb
fnstcw
pop
xor
and
xlat
push
setl
xor
mov
xchg
stos
ficomps
aas
imul
icebp
mov
add
add
cld
int3
mov
pop
sub
push
sub
and
jne
dec
aad
push
cmpsb
ret
lea
scas
lods
out
cmc
mov
jb
mov
iret
out
cmc
addb
jl
pop
addr16
sub
rcrb
aad
bound
push
popf
adc
mov
cwtl
aam
cmp
arpl
jno
test
stos
xchg
lods
push
mov
cmp
fwait
idiv
pop
jmp
inc
or
das
push
imul
repnz
cltd
cmc
in
pop
mov
out
dec
fdivl
or
hlt
pop
sub
ljmp
mov
add
xor
sbb
adc
arpl
mov
cmp
push
cmpsb
je
out
adc
scas
dec
sbb
loop
dec
cwtl
movsb
and
mov
sub
repz
push
ljmp
jns
push
divb
call
loopne
stc
fdivr
pop
xor
ds
outsl
lea
mov
sarb
mov
xchg
pushf
shll
clc
or
stos
pop
dec
pop
test
xchg
cs
es
outsl
stos
inc
push
sub
out
das
test
in
negb
cmp
sub
jnp
push
xchg
iret
arpl
jae
nop
xchg
lock
pop
arpl
imul
stos
push
sbb
aad
cs
cmpsb
jno
adc
jge
or
iret
loope
jg
pop
sahf
jne
cmc
and
test
das
jbe
negb
repnz
xchg
mov
cmp
nop
xlat
fdivrs
ja
call
pop
push
xchg
pop
stos
mov
mov
cmp
mov
les
sarb
je
cs
lock
dec
dec
int
shl
jnp
mov
into
cli
cmp
mov
sarl
push
xchg
pop
xchg
jl
out
popa
lret
inc
ret
push
push
in
push
pusha
es
cmp
ljmp
stos
sbb
fsubs
push
cmpsb
ret
gs
sub
or
loopne
movsl
sahf
loope
arpl
std
test
cmp
push
xchg
jp
pushf
fistpll
push
jo
mov
out
mov
add
cmp
lods
repz
jno
dec
arpl
push
subl
in
stos
cltd
sub
les
ljmp
jo
pop
add
bound
out
sub
cmp
inc
ds
cltd
loope
arpl
adcb
mov
push
mov
add
test
inc
popf
fiaddl
xchg
xchg
test
cmpsb
in
and
loope
jns
dec
ljmp
lods
fs
xor
inc
jae
mov
sbb
cmp
sub
dec
mov
push
stos
cmpsl
fs
mov
in
test
pop
xchg
mov
or
jge
dec
mov
iret
ljmp
and
jae
test
mov
test
loope
push
movsb
scas
push
push
popa
add
mov
mov
rcll
pop
popf
jecxz
cmpsb
fdivrl
push
dec
jg
das
push
popf
sub
jo
jecxz
leave
mov
sbb
sub
mov
push
data16
movsl
sbb
inc
xchg
faddl
add
add
push
mov
xor
scas
inc
xor
xor
jmp
adc
xchg
jo
iret
addr16
sbb
inc
lods
adc
shlb
add
cmpsl
stos
mov
sbb
rcl
fwait
push
mov
xor
and
mov
into
mov
in
sub
outsb
sub
or
sub
test
sbb
jae
adc
pop
add
inc
insl
sub
pop
jbe
jge
push
sti
imul
xchg
clc
cs
inc
incb
test
test
out
inc
out
sub
inc
ficomps
cmp
or
or
movsb
push
sbb
daa
lods
xor
negl
bound
add
xchg
ja
adc
inc
adc
stc
mov
sbb
in
test
xchg
pop
xchg
sbb
pusha
push
out
adc
dec
adc
das
insb
mov
fbstp
and
fiadds
mov
ljmp
ds
aaa
pop
idivb
std
jbe
imul
xor
jns
pop
sbb
lock
mov
enter
sbbb
mov
pop
mov
jb
push
nop
jb
cmc
loopne
inc
hlt
push
adc
outsl
inc
cmp
mov
rol
jp
sbb
aad
ja,pt
lea
cmp
mov
xchg
dec
push
js
push
inc
or
jl
jmp
jle
ret
decl
clc
arpl
cmp
sub
arpl
cmp
je
cmp
lods
dec
inc
jbe
aaa
xchg
sbb
das
mov
jl
mov
xchg
sbb
mov
test
mov
mov
in
xlat
pushf
stc
cmc
mov
popf
js
mov
mov
out
mov
pop
aam
pop
push
inc
mov
cmpsb
sub
popa
sub
out
inc
pop
and
stc
movsl
or
divb
int3
andl
lock
xchg
pop
cmpsb
xchg
cmp
xchg
lret
xchg
ljmp
int3
jns
mov
xor
in
xchg
push
daa
xor
pop
push
rcrl
sbb
mov
xlat
bswap
add
pop
push
dec
std
lods
pop
add
dec
xchg
aad
mov
pushf
mov
ret
mov
popf
out
xlat
iret
cs
stc
addl
add
dec
cltd
mov
imull
loop
xchg
jb
test
or
push
out
cmp
imul
mov
mov
insb
adc
js
in
mov
out
les
fmull
ficomps
xchg
inc
call
sti
inc
shrb
jp
icebp
pop
ret
test
aas
fldt
fmulp
stos
sbb
push
dec
adc
mov
push
je
or
testb
pop
dec
clc
jae
sub
push
cmp
ss
stc
inc
mov
xchg
movsl
jge
inc
and
mov
rcl
test
adc
push
pop
inc
jecxz
addr16
cmpsl
jns
push
fwait
addr16
dec
sbb
sbb
add
and
push
js
push
jae
fdivs
addl
outsb
jbe
mov
cwtl
or
push
cld
lret
jb
lcall
push
faddl
adc
imul
mov
addl
fldt
aas
pop
cld
xlat
les
repz
movsl
loope
mov
jg
mov
push
shll
cmpsb
mov
mov
or
xchg
insl
clc
xchg
jae
push
sbb
dec
adcb
xchg
adc
jb
sarb
pop
pop
or
cmp
scas
sub
movsb
xorb
pop
enter
add
lods
and
scas
sub
adc
lds
jbe
jb
push
sub
out
push
pusha
jecxz
mov
rcll
mov
mov
ds
and
das
push
ret
sar
call
movsb
mov
lea
pop
imul
vmovaps
addb
add
dec
or
mov
and
stos
xchg
repnz
dec
push
mov
mov
mov
sub
fwait
loop
outsl
movsl
aas
or
std
fcomps
fcomps
out
and
outsb
add
movsl
mov
sahf
cltd
and
imul
lods
pop
mov
mov
cmp
sbb
loop
xor
mov
or
jl
mov
je
dec
lea
cmp
aam
cli
xor
jo
xchg
add
aam
je
adc
fldcw
jge
repz
pop
dec
popa
aaa
addl
mov
mov
adc
pop
push
mov
aaa
je
add
mov
adcb
cmp
imull
mov
dec
mov
popl
mov
scas
outsb
movsl
pop
adc
loopne
adc
sbb
dec
dec
inc
pop
rcr
ljmp
loop
int3
cmp
hlt
in
outsb
in
lcall
aam
mov
cmp
adc
jp
lea
jle
xchg
bound
ljmp
out
sbb
stos
xor
outsl
roll
sub
outsb
sbb
push
cld
xor
stc
xor
out
mov
ret
sahf
mov
outsl
addr16
ret
xor
fisubs
mov
clc
cmp
pop
mov
and
mov
shll
data16
pop
inc
or
pop
jo
mov
sarl
scas
pop
inc
or
bound
xchg
inc
insl
rolb
into
shlb
cltd
rcrb
test
or
sahf
xchg
xchg
jl
rcrl
movsl
faddl
push
imul
xchg
imul
lret
mov
xchg
mov
in
adc
fstpl
fs
sbb
adc
test
push
out
mov
adc
or
cmpsl
mov
dec
subb
inc
loop
sub
mov
mov
mov
inc
outsl
push
add
dec
pop
je
loope
pushf
sbb
inc
loopne
shrb
inc
xchg
pushf
cmpsl
filds
cmpsb
lods
add
mov
loopne
gs
jg
jns
xchg
test
insb
insb
stos
std
add
fs
pop
inc
push
lret
xchg
repnz
xchg
and
cmp
fidivrl
cwtl
jp
test
mov
mov
xor
xchg
mov
cmp
ja
movsb
iret
adc
sub
inc
ss
pop
push
in
fisubrl
push
incl
stc
xor
out
mov
movsl
adc
mov
push
mov
das
mov
ljmp
jmp
icebp
pusha
jmp
leave
leave
movsb
lret
push
aas
test
std
repnz
addb
cmp
test
movsb
jmp
cmp
jnp
and
cltd
jecxz
jns
jns
sub
xchg
lods
jae
outsl
jnp
or
or
xchg
sti
lcall
test
pcmpgtb
rcrl
xlat
mov
mov
xor
push
lock
jns
mov
mov
lea
out
dec
stc
add
stc
pop
hlt
stos
notl
pop
adc
mov
jg
mov
fstpt
mov
js
or
arpl
inc
mov
shl
lea
insb
add
mov
push
imul
jbe
ds
jge
mov
cs
sbb
into
xchg
cmp
dec
icebp
add
in
or
addr16
mov
add
es
lock
pop
push
mull
push
lahf
inc
pop
xchg
stos
aaa
dec
loope
dec
cmpsl
lods
pop
clc
sbb
gs
sub
ret
jecxz
shrb
lea
sbb
cltd
shlb
pop
outsl
mov
add
or
gs
jg
jmp
notl
shll
cmp
repnz
je
stos
pop
mov
jne
pop
fst
mov
add
enter
cmp
pop
sub
jae
lcall
dec
push
push
roll
push
fdivrs
sbb
rclb
nop
jno
add
push
ret
mov
dec
pop
bound
in
sti
pop
adc
sub
jns
ds
stos
je
stc
clc
jle
mov
clc
iret
mov
loope
dec
clc
cmc
xlat
rcr
adc
ja
jecxz
rol
fsubs
lods
cmp
dec
sub
sbb
xor
adc
int
mov
cli
mulb
shlb
sbb
jmp
xchg
pop
sbb
jmp
jp
lods
lahf
push
push
pop
lock
ret
push
sub
out
jae
cmp
ljmp
inc
cmp
push
cld
test
add
outsl
shll
mov
dec
test
iret
movsl
sbb
std
push
lods
popa
xchg
cld
ficomps
inc
xchg
cmp
cmp
dec
outsb
push
pop
push
int
sti
insb
mov
and
push
xor
out
and
pop
dec
movsl
je
jge
movsl
adc
or
je
inc
es
adc
mov
cmp
push
jp
icebp
fcmovnu
in
mov
dec
and
mov
sbb
mov
cmp
add
pop
mov
pop
or
les
mov
popf
lods
out
or
andl
ret
sbb
test
add
ss
pop
fisubrs
jecxz
adc
scas
loope
fwait
test
jne
aas
mov
imul
js
mov
into
in
sbb
js
cmpsb
stos
arpl
mul
int
inc
push
push
inc
inc
pop
or
insl
sub
iret
out
push
ss
xchg
sub
jno
or
xchg
sbb
and
stos
insb
push
push
xchg
stos
sub
pop
test
cmc
aam
and
cmpsb
mull
adc
sbb
mov
sub
cld
mov
pushf
mov
mov
sti
jle
mov
and
push
push
testl
test
mov
cmpsb
xchg
pop
or
sub
subb
mov
dec
add
shll
cmpsb
arpl
mov
cltd
adc
je
inc
scas
clc
ret
daa
cld
cld
push
ds
call
stos
push
insb
push
or
les
and
stc
scas
inc
and
sti
sbb
iret
xor
cltd
aad
cmc
jecxz
pushf
jo
inc
pushw
dec
leave
das
pop
loopne
jmp
leave
jmp
jne
mov
xor
or
addb
inc
jle
out
mov
insl
sbb
sbb
sub
xchg
cmpsb
and
inc
or
fildl
and
jo
icebp
mov
popf
cli
in
dec
mov
pusha
sub
mov
xchg
pop
insl
adc
lea
ja
push
cmpsb
call
out
aad
insb
xlat
jo
sub
sbb
or
lods
rcrb
iret
cmp
jbe
and
imul
cmp
hlt
es
cwtl
addr16
or
xor
mov
xchg
adcl
sub
into
inc
cli
xchg
jg
cmc
int
adc
adc
push
mov
add
add
fdivr
mov
and
in
lahf
pusha
add
or
in
repnz
js
add
or
pop
jbe
test
adcb
rorb
sarb
inc
push
xchg
cmc
push
sbb
xchg
sub
xor
cmp
mov
rcrl
or
into
das
pop
mov
xor
inc
mov
psubw
add
int
das
jl
lret
les
stc
mov
xchg
out
out
inc
faddl
mov
movsl
sub
jl
je
insb
popa
daa
inc
or
mov
xchg
in
inc
sub
push
aam
ljmp
mov
gs
jns
arpl
jecxz
push
xchg
mov
ljmp
cmp
das
add
arpl
sbb
sbb
push
adc
push
or
cmp
xchg
movsl
xor
adc
mov
mov
push
add
mov
jmp
adc
sbbl
and
mov
pop
fwait
inc
sbb
dec
xor
pop
sbb
scas
arpl
rcll
mov
mov
hlt
adc
pop
ss
sahf
dec
bound
mulb
cmp
jmp
xlat
roll
movsl
push
fwait
add
outsl
jbe
insl
out
inc
cmp
pop
clc
add
adc
lret
iret
jl
inc
adc
aam
loopne
add
sbbl
loop
sub
fsts
mov
push
sub
inc
push
out
test
scas
mov
xchg
push
popa
mov
cmc
fsub
push
push
imul
sub
mov
dec
add
xor
lretw
add
dec
push
popf
jno
jge
sbb
add
push
inc
cmp
mov
sbb
in
or
and
cli
daa
test
dec
ret
test
add
mov
leave
mov
mov
aaa
sub
sbb
dec
sbb
xor
sbb
jmp
aaa
push
mov
mov
jg
mov
lock
bnd
mov
mov
xor
fdivl
divl
add
sub
lcall
jb
xchg
pop
insl
mov
fimuls
adc
or
sub
inc
add
mov
clc
pop
es
sub
or
pusha
adc
sub
add
mov
push
dec
movsl
cmp
into
add
mov
adc
out
jo
pop
dec
popf
outsl
push
xchg
dec
mov
push
mov
mov
xor
push
jo
xchg
sub
and
fdivrs
addl
cld
out
mov
nop
push
dec
sub
dec
add
sub
aas
pop
mov
arpl
into
xchg
jb
pop
cmp
jo
stos
testl
clc
pop
adc
and
scas
popa
mov
rcl
mov
add
lret
mov
das
pop
fistpl
ss
idivl
mov
loop
in
push
popa
scas
insl
jge
lea
jns
and
or
lahf
dec
lcall
fimull
fcomip
push
mov
xor
js
mov
jecxz
cmp
lret
mov
pushl
inc
cs
bound
aad
inc
mov
imul
mov
mov
fbstp
imul
jae
ljmp
mov
jmp
flds
mov
pop
je
sahf
leave
mov
div
jne
test
decb
adc
ja
lods
leave
lahf
xor
mov
std
dec
push
out
flds
dec
xor
aaa
push
or
jg
sbb
jmp
pop
cmpps
daa
stos
mov
aaa
pop
xchg
ds
dec
sbb
mov
pop
mov
pop
sub
clc
test
ds
pop
lret
and
mov
nop
pop
dec
ss
icebp
loope
repnz
sbb
mov
sar
xchg
sbb
mov
xchg
jmp
or
jne
sub
adc
fnstenv
sti
scas
sbb
jge
insw
ficomps
mov
mov
dec
mov
xor
sbbb
movsl
stos
pop
movsl
loopne
stos
test
pop
push
sahf
push
xchg
dec
out
movsl
or
mov
mov
cltd
jg
mov
dec
insb
xor
sub
xchg
cmp
jns
ret
dec
mov
push
cmp
ja
in
stos
ds
cmp
pushl
xchg
mov
insb
call
sbb
inc
xchg
push
popa
add
sarl
shll
push
pop
jno
mov
cmp
cmc
dec
mov
lock
and
pop
mov
pop
movl
aam
into
xor
pop
mov
into
mov
in
test
sahf
xchg
or
push
lahf
imul
or
dec
fildl
mov
and
in
rcr
xchg
fildl
xchg
mov
mov
or
adcl
fisubs
mov
aaa
lret
inc
pop
cwtl
popa
mov
fmuls
or
inc
pop
add
sbb
and
pop
mov
or
xchg
push
mov
inc
popf
pusha
test
ljmp
loopne
mov
cmp
pop
add
push
sbb
popf
cwtl
mov
cmp
lods
pop
ja
mov
jg
sbb
xchg
dec
xor
lock
xchg
es
call
pop
add
js
aas
add
xchg
jp
movsl
mov
jmp
jle
mov
cld
jp
outsl
push
movd
fwait
mov
dec
jbe
inc
xlat
pop
test
sbb
gs
inc
inc
cwtl
mov
daa
cmp
ljmp
lock
loop
mov
inc
dec
aam
in
cli
or
dec
dec
std
adc
jg
cltd
mov
jo
cmc
lcall
jp
in
fucomi
mov
cmp
and
in
mov
and
mov
mov
repz
shrl
gs
mov
test
pop
add
push
xchg
and
and
adc
int3
pop
popa
sbb
movsb
scas
or
mov
cmpsl
cld
ss
push
rcr
popf
out
mov
icebp
inc
cli
out
cltd
cmpsl
pushf
inc
mov
iret
mov
add
mulb
popf
adc
jl
iret
sub
jg
ja
in
or
in
fmull
jnp
dec
ror
jnp
push
push
fisttps
lret
add
roll
lods
test
jne
xchg
pop
mov
xchg
pop
sbb
dec
rcll
in
pop
ret
enter
jecxz
xor
mov
lds
out
int
inc
jl
xor
je
test
mov
and
mov
or
add
shrl
mov
or
dec
dec
bound
xchg
sbb
add
mov
push
fcomps
jecxz
int
pop
xor
xchg
inc
dec
push
dec
cmp
cltd
and
fldt
jp
sarb
test
inc
adc
jbe
mov
mov
lcall
push
jne
je
push
dec
pop
ficomps
push
push
or
sub
outsb
or
cwtl
or
outsl
push
xor
fnstcw
xlat
push
mov
xor
or
xchg
xchg
filds
cmp
jge
inc
js
push
mov
lds
sbb
rep
repz
xchg
fs
fnstenv
movsb
shl
mov
cs
jge
pop
xor
dec
dec
scas
fucomi
in
sub
dec
pop
cmpsl
inc
lcall
test
cmp
inc
notl
stos
cmpsl
pop
fs
jns
or
stos
and
push
cltd
mov
and
mov
fisttps
mov
outsl
sub
out
in
push
lcall
dec
lcall
adcl
lcall
push
push
adc
cld
jbe
inc
outsl
inc
sbb
leave
adc
lcall
inc
cmp
leave
inc
push
mov
inc
add
cmpsl
std
adc
daa
fs
sub
rorb
lods
outsb
in
aad
push
popa
inc
fidivl
mov
add
fadds
push
out
addr16
dec
stos
pop
push
and
hlt
add
jb
inc
js
and
insl
push
mov
add
pop
loopne
jge
mov
lea
in
or
pop
jg
insb
cwtl
insl
fidivl
or
out
aad
cmp
xchg
aad
mov
mov
imul
xchg
inc
sub
rolb
mov
xor
jb
aas
adc
adc
dec
mov
inc
or
jb
ds
test
or
popf
fstpl
sbb
add
jns
loop
and
lea
inc
xor
cld
ror
push
mov
inc
jecxz
and
mov
inc
in
aam
scas
and
mov
xor
out
add
jno
loopne
ds
and
mov
fsts
sbb
or
pop
sub
stc
sti
mov
iret
repz
ss
mov
or
lret
sbb
shll
jmp
cmp
insl
fdivr
jae
orl
repnz
das
ficoms
cli
popa
call
push
pop
loope
repz
dec
inc
mov
xchg
dec
into
shlb
mov
sbb
dec
out
pop
loop
test
dec
and
xchg
pop
and
mov
popf
lahf
dec
test
mov
popf
int
jecxz
push
or
fisttpll
inc
mov
mov
mov
lea
gs
xor
dec
cltd
fwait
mov
xor
add
or
mov
sbb
push
fildll
cmp
fnstenv
mov
out
data16
dec
fsubs
xor
mov
pop
es
lahf
adc
pop
dec
pop
stc
dec
gs
mov
lock
jno
or
cmp
movsl
push
movsb
push
dec
mov
push
mov
imul
sub
orb
dec
or
jge
test
xor
pop
les
xor
sub
or
test
lret
mov
dec
shrl
dec
push
pop
test
fwait
sbb
fldcw
scas
xor
lds
adc
push
mov
mov
and
mov
mov
push
aas
xor
jns
rorb
sub
sbb
out
mov
mov
jbe
inc
pop
add
adc
jno
pushf
jmp
or
in
clc
movsl
push
int
test
pushf
subb
les
icebp
mulb
ret
xor
sub
shlb
jmp
sbb
add
ret
push
sbb
and
ret
mov
jl
sbb
pop
mov
ss
mov
shll
pusha
daa
mov
lods
out
push
push
pusha
sbb
in
jno
jecxz
push
ja
scas
pop
stc
cmc
dec
dec
xor
ds
pop
mov
arpl
and
sub
cltd
cmp
pushf
mov
sahf
sbb
out
pop
or
dec
jo
inc
jb
fs
push
push
repz
add
adc
and
loop
and
outsl
cmp
aad
daa
imul
dec
push
jb
adc
sbb
aas
les
xlat
dec
mov
sbb
ret
out
outsl
adc
jecxz
adc
sub
push
dec
push
or
call
aad
lret
gs
jecxz
sub
addr16
rorb
inc
addr16
cmpsl
aaa
mov
fisubs
std
sbb
div
push
dec
scas
movsl
inc
xchg
and
in
ficompl
and
andl
adc
daa
std
and
loope
jbe
insl
and
sub
adc
into
stos
or
jns
mov
xchg
addr16
adc
cli
cmpl
out
aas
mov
daa
dec
sti
sub
adc
xlat
subb
inc
std
jmp
popf
aam
inc
dec
lods
inc
pop
push
rol
test
test
inc
push
xor
dec
mov
jecxz
add
jmp
decb
sub
mov
xchg
cmc
add
lods
xchg
push
mov
dec
addr16
xlat
xor
xor
cmpsb
add
fidivl
stos
inc
ljmp
stos
loop
dec
mov
scas
in
divl
cwtl
push
loope
fcoms
clc
nop
sub
dec
sahf
aad
iret
icebp
or
stos
sub
and
test
jle
push
jno
aam
leave
dec
push
in
cmp
jmp
cltd
dec
leave
xor
mov
aas
pop
mov
scas
cmp
test
adc
lods
lea
ss
jbe
dec
dec
push
xchg
mov
gs
lret
push
fst
ss
inc
dec
mov
mov
sub
divl
add
pop
jo
sbbb
jnp
add
xor
cmp
rolb
fcomps
add
ret
lret
sub
add
mov
movsb
cwtl
dec
jnp
enter
shll
inc
push
inc
mov
lret
xlat
cmpb
test
xchg
lahf
cmp
dec
push
les
stc
push
xchg
sbb
ret
mov
push
cltd
popa
and
lret
shl
mov
add
jp
movsl
sbb
daa
jmp
std
jne
les
and
pop
inc
dec
mov
add
fcoms
arpl
adcb
mov
in
ficompl
jne
add
fcompl
mov
xchg
and
lock
insb
stos
pop
das
push
xor
std
or
adc
push
xchg
pop
and
sarl
mov
dec
xor
test
inc
ja
pop
ret
cli
xor
outsl
aad
lods
mov
inc
out
adc
mov
adc
cld
loope
lods
sti
pop
fiadds
ds
mov
sar
fmul
mov
push
sub
fimull
shrl
mov
mov
xor
mov
inc
cmc
adcl
sahf
lcall
cmp
mov
cmp
sti
call
inc
cwtl
mov
pushf
push
jecxz
cmp
iret
push
sub
adc
cmp
das
adc
jp
push
ret
sub
mov
xor
inc
repnz
pushf
loope
sub
and
sbb
lock
mov
xor
mov
pusha
push
mov
lea
push
push
movsb
mov
pop
and
rol
mov
dec
or
outsb
in
mov
push
lea
or
test
sahf
jno
and
ret
mov
sbb
fldenv
inc
xchg
in
jns
sub
xchg
sahf
mov
pop
fdivr
cmp
pop
pop
or
push
xor
xor
stos
jg
js
shll
fisubrl
mov
sbb
icebp
mov
jecxz
cltd
mov
fcmovnu
out
inc
int
xchg
dec
sbb
scas
push
adc
testl
mov
loopne
sbb
xchg
subl
mov
mov
pop
movsl
push
cwtl
pop
scas
mov
adc
dec
hlt
cmp
ljmp
adc
test
clc
mov
lods
out
lcall
cmp
xor
jnp
cmc
xchg
mov
lea
sti
ljmp
add
and
mov
xor
adcb
adc
and
mov
pop
mov
shlb
fstpt
pop
mov
or
push
notb
or
or
mov
fxch
sub
pop
sbb
xchg
sub
sub
push
ja
add
push
mov
lret
pop
adcl
jb
xchg
pop
scas
adc
mov
aam
fwait
scas
push
daa
imul
cmp
test
sub
inc
wrmsr
int3
rcll
mov
nop
jecxz
fwait
or
pcmpgtw
add
cltd
repnz
andl
pop
scas
adc
push
pop
cmp
lock
inc
lret
xchg
shlb
popf
mov
push
mov
pop
dec
sub
int
popf
ficoms
jbe
or
jmp
test
jb
test
jbe
notl
sbb
mov
mov
in
lds
andl
mov
arpl
sbb
add
ds
sbb
daa
dec
enter
fsubl
inc
pushf
addr16
cmc
je
adc
ds
or
popf
popf
in
adc
sahf
ret
inc
adc
stos
pop
pushf
loopne
imul
dec
and
popf
dec
rcll
cli
jge
mov
sub
cld
add
rcll
mov
add
xor
cli
mov
dec
das
push
dec
gs
dec
sbb
jle
les
jmp
data16
into
bound
arpl
repz
lods
jnp
fistl
or
scas
mov
mov
in
pop
pop
dec
mov
fwait
sbb
mov
stos
lods
movsl
mov
xchg
int3
into
out
mov
push
mov
sbb
fldenv
iret
mov
pop
push
ja
jnp
sub
mov
int
cmpsl
cmp
loopne
adc
inc
test
popf
xor
std
inc
mov
push
fadd
push
out
xchg
int3
mov
nop
mov
xor
roll
mov
dec
jnp
sbb
add
xchg
fcoml
in
dec
xor
divl
nop
xor
sbb
push
inc
incl
movsb
cli
add
test
cmp
in
cmp
es
les
sbb
fxch
xor
jnp
jl
and
imull
jp
or
inc
push
hlt
adcl
mov
mov
test
gs
shlb
lods
mov
mov
mov
js
inc
push
mov
scas
and
add
divl
inc
inc
sbb
nop
dec
int
cli
ja
push
test
dec
repz
mov
cmovbe
dec
and
mov
outsl
pop
clc
xlat
push
ret
push
movb
mov
or
dec
dec
das
push
xor
sbb
loope
pop
repnz
mov
push
jmp
jbe
push
mov
xchg
xchg
xchg
jno
mov
cmpsl
jbe
int
inc
add
mov
inc
insb
push
xchg
popa
jl
mov
push
sub
xchg
sti
int3
jb
ret
push
push
orl
dec
xlat
movsl
addb
fwait
mov
jb
push
xor
sub
daa
bnd
adc
negl
test
roll
sub
adc
movsb
mov
das
test
mov
cld
sbb
hlt
lods
xor
arpl
gs
subl
adc
and
out
push
ret
rorw
mov
or
push
lcall
inc
dec
addl
call
repz
xchg
xor
adc
fxch
adc
cmp
or
sub
jns
icebp
adc
pop
jge
jmp
ficoms
nop
jo
ret
call
sub
sahf
or
sbb
xchg
pop
stc
xor
iret
insl
inc
nop
cmp
xchg
mov
jecxz
pop
xchg
ljmp
lods
add
mov
gs
cld
sti
add
pop
inc
sbb
out
movsb
push
insl
inc
jl
push
notl
push
mov
out
xorl
xlat
adc
sub
cmp
lods
outsl
cmpb
ljmp
gs
incl
push
popa
and
outsl
dec
jmp
sub
imul
xchg
dec
popa
fwait
scas
bsf
add
and
add
mov
add
push
adc
in
mov
push
insb
adc
aas
push
jle
cmp
fsubrl
cmp
or
mov
push
test
pop
push
mov
into
sbb
xchg
out
cltd
nop
mov
dec
xchg
adc
xor
call
cmp
lods
sbb
xchg
sub
scas
and
jne
push
sub
pop
das
sub
inc
add
lds
out
or
testb
cmp
mov
dec
daa
mov
mov
scas
nop
sub
jmp
push
in
filds
xchg
mov
lods
cmp
ret
out
xchg
mov
cmp
insb
push
outsb
leave
push
mov
push
push
std
xchg
mov
mov
hlt
lock
inc
inc
and
sbb
mov
loope
bound
mov
cmp
push
mov
leave
sub
jl
mov
or
out
push
shld
sti
sbb
push
test
add
push
in
xor
cmp
or
cltd
iret
sti
mov
ds
mov
mov
gs
mov
xchg
call
js
push
cltd
sbb
cmp
push
xor
ss
cltd
mov
addr16
mov
xchg
fwait
mov
xor
mov
cmp
int
pop
dec
or
rorl
xchg
adc
lea
repnz
xchg
pop
and
pop
or
jne
sub
adc
movsb
lcall
rorb
shl
rcl
test
aam
aam
pop
jbe
and
popa
movsl
aaa
push
mov
inc
xcrypt-ecb
cmpsl
push
test
lods
fcompp
pop
sti
movsl
or
lret
ja
inc
or
and
sbb
stos
sub
fdivrl
addl
ja
inc
shll
pop
and
in
jns
ret
add
xorb
xchg
out
test
dec
or
cli
int
mov
or
mov
pop
cmpsl
mov
pushf
outsl
jg
lock
adc
fsubrl
mov
xchg
push
mov
orl
pop
cmp
adc
pop
ds
xor
cmp
mov
push
jns
or
and
iret
popf
pop
pop
iret
adc
add
outsl
loop
mov
aad
cs
mov
xor
inc
mov
push
shrb
sub
call
and
mov
filds
repz
js
lret
jnp
dec
push
sub
popf
lods
adc
movsl
addl
and
and
fadd
pop
sbb
shr
outsl
shl
fs
lret
xchg
fs
hlt
pop
sbb
cmpsl
pop
clc
mov
lds
inc
jmp
jns
xlat
cld
add
lds
dec
lcall
sti
in
mov
sbbl
imul
pop
pusha
mov
and
test
mov
mov
fs
or
pusha
jmp
call
cmp
fs
aam
pop
fwait
or
push
cmpsl
xchg
add
xchg
out
pop
dec
rclb
gs
sbb
and
arpl
inc
int
mov
in
mov
sbb
pop
aam
aad
es
sahf
lret
mov
jmp
hlt
fmulp
in
aaa
push
orl
jns
sbb
push
mov
loop
mov
aam
aad
nop
popf
mov
hlt
enter
push
nop
jbe
rol
xor
into
jmp
jmp
fnstcw
cmc
inc
cmpsb
fst
out
movsb
jge
jb
repnz
lret
sub
mull
xor
add
and
ja
push
pop
outsl
push
adc
popa
cmp
inc
cmpsb
jle
gs
stos
and
adc
or
in
ret
mov
cwtl
out
cmpsb
push
les
lahf
sub
stc
cwtl
sbb
jns
sub
and
sub
mov
mov
xor
call
test
dec
cmpsb
or
sarb
shlb
or
mov
push
lcall
cli
xchg
sub
and
push
icebp
stc
popf
or
add
out
test
stos
mov
popa
jmp
movb
ret
fmul
shll
rcrb
mov
jecxz
test
adc
js
cltd
inc
lcall
out
or
popf
fdivrs
inc
inc
shll
sti
test
popa
adc
push
push
lods
test
insb
xor
lret
jnp
adc
sbb
sbbb
adc
movsl
aad
stc
pushf
push
mov
mov
enter
xor
pop
sbb
ret
mov
cltd
add
or
push
loop
imul
inc
inc
add
in
push
loopne
jo
xor
pop
push
mov
sub
jge
movsb
fisubs
mov
pop
lret
or
lods
fstpt
inc
outsl
insl
imul
mov
xchg
test
inc
rcll
add
dec
sbb
lret
and
movsb
xor
sub
sub
addr16
push
ja
mov
jl
push
test
xor
ret
mov
sbb
rcll
jno
add
lea
outsl
hlt
jmp
mov
push
enter
dec
pop
xchg
xchg
out
add
sbb
pushl
je
mov
mov
xor
push
cltd
push
aas
sti
add
push
insb
lcall
adc
std
shrb
sub
adc
mov
lret
pop
lret
std
lods
xchg
push
add
divb
cmp
adc
ret
adc
cli
pop
xchg
int3
loope
and
cmp
punpckhwd
insl
and
xor
and
out
jg
sbb
repz
cli
in
adc
inc
cmp
xchg
cwtl
xchg
jge
add
sub
push
mov
jae
into
aaa
inc
shlb
xchg
andl
mov
in
xchg
dec
sti
out
inc
mov
mov
or
jp
in
mov
jmp
sbb
dec
push
push
sarb
jl
inc
repz
loopne
jge
out
adc
popl
mov
mov
mov
mov
mov
cmp
arpl
stos
xchg
push
movsb
add
outsb
mov
mov
out
cmp
call
dec
pushf
fldt
pusha
cmp
sub
or
icebp
out
jl
pop
popa
xorl
fmull
sti
nop
xlat
ljmp
clc
lea
jae
aad
mov
sub
jbe
jecxz
and
call
in
scas
lds
or
mov
xor
and
sbb
aam
cs
mov
pop
xor
movsl
shll
pop
fisubrs
jne
push
dec
push
mov
int
pop
data16
out
mov
test
pop
xchg
pop
insl
push
insb
mov
fisttps
jb
or
test
test
es
push
push
and
sub
fadds
mov
sub
mov
stos
ret
push
movsl
jg
ss
pop
pop
test
pusha
ljmp
fldenv
inc
cmp
mov
mov
adc
sub
insb
xchg
cltd
js
jp
mov
mov
cmpsl
mov
insb
daa
enter
and
arpl
js
ds
jb
cmp
loopne
fcmove
adc
mov
test
test
sub
insl
mov
inc
repnz
cmpsl
dec
lds
rcl
jo
cmp
or
ret
lods
pop
notl
pop
shrl
data16
mov
pop
adcl
xchg
cmp
or
pop
mov
cmp
fs
pop
and
stos
fildll
enter
jno
loope
imulb
inc
ds
loop
or
bound
mov
dec
pushf
push
mov
pop
aaa
fisttpll
cli
inc
in
cmpsb
jne
leave
fistpl
pop
mov
add
outsl
mov
cwtl
xor
inc
lret
cmp
dec
pushf
or
movl
push
hlt
push
pop
add
mov
mov
stos
lahf
test
sub
mov
push
icebp
xchg
xor
dec
insb
sahf
bound
stos
sbb
mov
adc
jns
loope
mov
jmp
xchg
lods
pop
add
push
psubsw
pop
push
mov
repz
add
push
push
or
out
ret
cmpsb
repz
dec
mov
pop
cmc
cmp
hlt
sti
lcall
xchg
xchg
test
je
add
lret
loope
xlat
fwait
pop
jno
enter
sub
lods
inc
jno
sub
dec
xchg
aad
adc
test
jo
loopne
mov
out
aad
jl
jo
in
insb
pop
out
xor
push
fsubrs
repz
insb
dec
add
xchg
mov
nop
mov
inc
adc
cld
cmp
test
adc
cmp
sub
sbb
mull
mov
test
add
jmp
call
fstpl
sbb
jge
and
mov
pop
stos
jbe
cwtl
dec
into
push
mov
cltd
nop
inc
mov
adcl
outsl
sbb
gs
aad
mov
stc
mov
dec
jns
add
ljmp
dec
outsl
shr
fistpl
nop
mov
mov
mov
fsubs
out
mov
ret
jl
mov
mov
stos
loopne
push
cmpsb
mov
outsb
xchg
pop
inc
push
and
insw
loope
test
mov
in
pop
push
test
mov
inc
mov
lcall
test
lret
test
ja,pn
and
adc
jp
xchg
push
dec
jbe
filds
sub
es
jb
and
mov
std
int3
mov
es
lcall
shrb
enter
out
aam
push
jbe
out
mov
fs
sub
lret
push
adc
imul
sub
clc
inc
imul
lea
and
add
cltd
iret
mov
jno
arpl
mov
dec
or
call
adc
and
mov
sbb
pop
mov
arpl
inc
das
cmp
fnstcw
xor
adc
mov
sbb
leave
adc
and
repnz
adc
sub
ret
cmp
lods
xchg
lods
cmp
push
sub
sbbb
push
dec
jl
pop
xchg
pop
mov
mov
int3
or
push
loop
adcb
stos
mov
lahf
xchg
mov
adc
cmpsb
int
js
xlat
add
pop
and
shl
rolb
inc
mov
adc
xchg
mov
fiadds
push
mov
sti
loope
aas
mov
pop
sti
stos
inc
iret
pop
movsl
shll
stos
jmp
lods
sti
stos
roll
adc
pushf
push
mov
inc
jecxz
lods
sub
inc
arpl
imul
mov
fwait
xchg
test
repnz
push
cld
push
xchg
add
cmp
loope
cs
mov
pop
aad
cmp
add
mov
out
sub
cmp
call
addr16
jb
not
jl
orl
repz
hlt
mov
enter
xchg
sub
mov
sub
mov
or
add
push
adc
popa
pop
test
dec
xchg
jae
in
jg
add
mov
mov
outsb
cmpsl
mov
mov
sub
dec
adc
push
pop
fdivp
jne
xchg
jg
aas
dec
cmp
nop
mov
daa
push
mov
push
mov
pop
hlt
std
mov
mov
insb
ljmp
xchg
fcomip
loopne
popa
andl
fidivs
es
push
and
xchg
jle
imul
hlt
inc
leave
imul
aas
xchg
cmpb
test
jge
int3
popfw
push
loope
int
sub
idiv
scas
cld
mov
test
aam
push
adc
int3
dec
jge
cltd
push
mov
jbe
pop
dec
mov
mulb
insb
xor
mov
iret
sahf
out
lock
cmp
stc
and
aas
jnp
and
sub
jg
test
xchg
lcall
repz
fld
cmp
cltd
aam
pop
in
inc
pop
mov
gs
dec
out
sbb
mov
into
mov
test
outsb
or
cmpsl
and
lds
pop
ljmp
pop
sbb
mov
push
dec
mov
fwait
or
add
out
iret
ret
jae
pusha
mov
mov
push
xor
aas
fiadds
pop
mov
sbb
dec
lret
dec
and
mov
cmp
call
pop
cmpsl
cmp
outsl
dec
dec
mov
ljmp
jmp
xlat
outsl
pop
push
icebp
xchg
cwtl
xchg
aas
jns
mov
scas
cmp
add
mov
daa
loop
mov
aaa
or
cwtl
xchg
in
fmull
xchg
pop
jmp
test
pop
jns
push
xor
jmp
lods
sbb
scas
xchg
data16
fwait
jle
out
inc
xchg
cmp
jo
sbb
js
push
stos
pop
or
push
push
into
sbb
mov
jle
lods
push
mov
lods
push
jmp
fcomip
lcall
lahf
fs
test
stc
shll
ror
and
jns
out
push
mov
jge
fildl
xchg
mov
or
sarl
fisubs
sbb
bound
aas
mov
sub
scas
jns
fwait
daa
adc
jp
xchg
ret
cld
movsb
aam
pop
sarl
inc
cli
mov
sbb
jecxz
sub
inc
jo
mov
pop
xchg
pop
push
cli
sahf
mov
ret
out
or
int3
and
dec
lcall
lret
fistl
fcmovbe
xor
sub
fadds
leave
out
mov
add
or
sbbb
push
or
loope
test
jo
arpl
mov
mov
xchg
or
mov
std
rcrb
repnz
cmp
mulb
fs
sti
dec
aaa
ret
dec
inc
or
lods
jge
out
push
jecxz
lahf
adc
adc
mov
ror
imul
insl
in
fldl2t
movsl
scas
pop
mov
mov
ret
imul
repz
mov
sarl
mov
push
and
dec
or
xchg
jne
imul
xor
call
pop
dec
inc
cmp
dec
movsb
cltd
icebp
jb
mov
xchg
stos
ret
cmp
jecxz
cs
fmul
jo
js
cmp
jecxz
cmp
sub
iret
and
mov
nopl
sub
push
jae,pn
mov
mov
andb
push
inc
popl
in
cmpsb
sub
push
popa
adc
stc
popa
mull
in
aas
jae
sbb
pop
sub
fdivrs
repnz
inc
mov
lcall
test
sub
push
testb
icebp
shlb
call
and
popf
jl
shlb
adc
jmp
mov
adc
xor
adc
adc
mov
test
mov
xlat
pop
mov
rcll
cmp
sbb
inc
push
mov
push
mov
pop
xchg
xchg
pop
and
and
xlat
scas
push
mov
popl
mov
inc
popa
jns
inc
and
sbb
xchg
jne
stos
xlat
pop
mov
icebp
insl
scas
push
cmp
adc
in
fdivs
wrmsr
dec
adc
fsubr
insl
aas
mov
fcomps
push
lret
and
adc
stc
je
add
icebp
test
xor
xchg
stc
add
adc
fldenv
dec
mov
lret
inc
xchg
call
aad
aas
pop
jmp
push
popa
cmp
mov
in
outsb
jmp
adc
jmp
xchg
bound
push
push
pusha
sbb
pop
or
mov
cli
jge
xchg
and
les
xor
scas
fwait
jge
sti
jmp
adc
mov
xlat
addr16
ja
and
sahf
mov
mov
cltd
cmpl
insl
fcoms
loope
pop
mov
int3
dec
push
pop
fmull
sub
nop
insl
mov
addb
adc
pop
cmp
ret
lods
add
sbb
pop
pop
vfrczps
movsl
icebp
xchg
adc
cmp
adc
inc
rclb
xchg
lcall
and
repz
mov
cmp
sub
sub
sub
in
stos
mov
je
dec
sahf
xchg
push
push
mov
out
cltd
das
js
iret
push
cld
inc
jno
mov
bound
je
ds
mov
fdivs
inc
jbe
leave
mov
cmpsb
and
jne
cmpsl
xor
pop
popf
jecxz
pop
jnp
pop
sti
mov
push
cmp
fs
dec
or
add
pop
mov
push
push
cmc
xor
inc
xchg
jle
pop
test
mov
or
nop
lahf
fwait
jno
fs
loop
ds
ret
ja
jne
xor
pop
scas
xchg
cltd
jp
push
fmuls
add
mov
dec
sub
out
push
dec
xor
and
push
xor
xor
dec
push
ss
pop
dec
movsl
mov
loope
pop
arpl
adc
aaa
sub
orl
mov
adc
in
cmp
add
adc
sbb
xchg
mov
sti
jmp
lods
xor
or
lret
jnp
fcmovnbe
cmpsl
dec
rolb
idivl
sub
push
out
sbb
ljmp
push
jle
pop
imul
fildll
movsb
sub
lock
popf
movsb
fs
sbb
fucom
iret
movsbl
mov
cmp
gs
movsb
push
stos
push
inc
shl
sub
not
scas
pop
dec
fldl
cli
shll
outsb
cltd
mov
pop
jb
push
movl
icebp
sbb
or
scas
jge
stc
or
movsl
mov
adc
inc
add
push
sbb
lods
dec
xor
insl
rcrb
out
mov
pushf
xor
pop
xor
std
bnd
imul
pop
mov
cmpsl
mov
imul
cmp
sbb
dec
and
or
aas
test
dec
jp
xchg
ss
push
pop
mov
add
mov
sbb
xchg
ljmp
xor
lock
ret
and
push
or
out
inc
xchg
and
mov
nop
mov
xchg
je
stos
xorl
jecxz
pop
aas
sub
loopne
push
mov
inc
subl
xchg
rcrl
aas
shrb
fcomi
push
xchg
xlat
jae
push
pop
add
add
and
mov
rcrb
lcall
jbe
cld
aas
jo
outsl
js
fisttps
sub
imul
pop
insb
add
daa
sbb
pop
rcll
inc
pop
popa
sub
mov
jl
xchg
test
imul
pop
out
sbb
pop
repnz
movsb
xor
xor
inc
mov
inc
test
xchg
push
pushf
inc
cmpl
mov
das
jmp
dec
outsb
rclb
test
push
enter
in
outsl
mov
fwait
aaa
sub
test
out
rorl
int
scas
mov
mov
jl
push
adc
sbb
int3
std
cmp
ljmp
sub
cli
daa
fdivs
dec
xchg
jmp
lret
mov
mov
and
es
adc
pop
notl
xor
into
mov
xchg
push
aad
popl
loop
addl
cld
push
lds
or
lcall
arpl
ja
dec
inc
cmp
mov
cmp
roll
es
mov
icebp
std
inc
ds
lods
mov
cmpl
and
addr16
cmp
or
rcll
cmp
xchg
mov
lock
mov
lock
pushf
adc
add
sub
or
push
lea
test
jns
push
xchg
jle
jl
ja
cmpsl
dec
fldenv
shl
jge
inc
in
pop
push
shll
jle
cld
loop
int3
mov
sbb
and
inc
fldcw
and
lods
leave
mov
jge
xor
andb
add
push
imul
jno
mov
inc
je
xchg
jne
loopne
addr16
clc
mov
xchg
lcall
popf
loope
loop
cmpb
push
enter
xchg
mov
mov
insl
pop
mov
lock
mov
mov
adc
scas
orb
fmuls
rcr
sti
test
jns
jnp
pushf
jns
out
data16
jl
sbb
push
push
out
or
cmp
mov
and
xchg
movsb
push
outsl
rorl
jle
mov
push
sbb
xor
jg
add
ljmp
mov
inc
fmull
cld
xchg
cmp
xchg
fistpl
mov
fsubs
bound
jb
mov
push
and
inc
jnp
jnp
jae
fisubl
adc
popa
stc
sub
mov
cld
jge
xchg
cmp
lods
or
mov
addl
mov
cmpsl
gs
push
dec
mov
imul
ss
cmpsl
sbbb
dec
cs
stos
aam
pop
add
jns
push
test
xchg
adc
scas
xchg
sahf
fisttpl
js
outsl
push
lcall
test
push
out
jp
test
lds
sbb
loopne
mov
and
cmp
popa
ds
loopne
out
xchg
adc
jne
shlb
daa
in
in
sbb
inc
jmp
cltd
jmp
inc
mov
rcrb
cmpsb
mov
je,pt
pop
out
call
lods
pop
movsb
pop
lea
call
mov
mov
in
div
arpl
dec
lds
fildll
xchg
mov
add
enter
pushf
and
sbb
cmpsb
lods
push
out
lret
loope
test
and
xchg
inc
cmp
lds
sub
ficoml
pop
sbb
xchg
lds
adc
shl
push
mov
lock
sub
jnp
sub
rolb
mov
fcompl
outsb
ja
xchg
loopne
aaa
std
stos
sub
inc
mov
jmp
not
arpl
mov
ljmp
test
scas
jae
sub
cld
add
sbb
push
xor
fldt
cmpsb
fucomip
pop
ljmp
jae
insb
clc
adc
cltd
xor
add
dec
inc
or
in
repnz
repnz
adc
push
inc
adc
pop
dec
in
lods
loopne
shlb
leave
rep
mov
lret
push
mov
add
cmpsl
int3
jae
aas
xchg
das
mov
stc
call
add
scas
inc
shlb
daa
movsl
test
push
aad
je
rcrb
pop
mov
xor
std
popa
out
mov
imulb
clc
or
jge
dec
enter
sub
push
in
sbb
int3
add
mov
mov
and
imul
mov
icebp
jno
adc
mov
jbe
pushl
sahf
inc
test
and
jle
cwtl
into
jecxz
enter
and
adc
cmp
adc
aas
dec
test
dec
int
rcrl
clc
cmpsb
repz
or
xchg
test
push
adc
sub
dec
pop
insl
cmp
jmp
pop
rorb
and
lea
pop
push
loopne
aad
xchg
and
pop
jl
icebp
add
xchg
imul
jmp
lods
add
mov
pop
jl
pop
repnz
xor
push
outsl
jae
inc
cmpsb
daa
out
cmpsl
out
rorb
mov
or
pop
and
jo
pop
xchg
das
xor
mov
sub
push
cmp
out
jg
faddl
push
ja
pushf
das
inc
jbe
sub
jb
or
xchg
cmovnp
pop
xchg
lret
mov
xor
ja
pop
sarl
push
ficoms
mov
cmp
jnp,pt
and
js
push
daa
xor
fxch
dec
push
daa
mov
pop
xchg
pop
test
rcr
inc
fldl
lret
push
repnz
popa
lock
loope
cmpsl
mov
and
and
lea
dec
push
adc
rclb
mov
hlt
fisubrl
jl
fcmove
dec
add
in
cld
lahf
dec
cmp
fs
out
add
adc
cltd
ds
repnz
jnp
imul
and
repz
loop
das
sub
roll
ret
out
xchg
fisttpl
and
jp
mov
cmc
inc
pusha
inc
mov
lret
sbb
fdivl
fnstcw
ficomps
sarb
inc
push
fcoms
cmp
pop
and
xor
in
inc
in
outsl
addl
mov
fildl
push
jmp
inc
add
out
push
fsubrl
mov
cmp
movsl
and
adc
pop
push
mov
fwait
in
in
and
daa
stc
xor
popa
pop
push
pusha
lret
icebp
jp
lcall
cld
xor
arpl
dec
imul
insb
dec
popf
cmp
pop
mov
jb
mov
sub
xchg
out
sbb
inc
mov
das
mov
test
ss
mov
adc
mov
cmp
mov
mov
jo
inc
out
mov
inc
icebp
fwait
sbb
lods
dec
mov
cli
hlt
ret
das
sub
cmc
mov
sub
enter
push
inc
adc
clc
mov
idivb
pop
jg
mov
sarb
call
aaa
les
in
sbb
ret
sbb
inc
jae
inc
mov
adc
js
movsl
xor
stc
xchg
push
sub
dec
push
push
mov
or
mov
hlt
mov
pop
push
ss
loop
mov
std
adc
clc
movsb
and
out
add
inc
out
js
js
insl
jnp
test
cmp
push
movsl
xor
mov
aad
sub
xchg
adc
push
test
movsl
repz
pop
ljmp
in
and
mov
jmp
out
jle
inc
jecxz
xor
stos
inc
push
dec
and
sub
enter
addr16
fadd
cmp
sub
leave
dec
push
outsb
or
into
int3
sarl
xchg
cmp
and
fldenv
dec
ja
inc
mov
sbb
icebp
pop
jbe
mov
pop
mov
sub
loope
fnstsw
sbb
fiadds
out
dec
ja
mov
mov
pop
jg
jo
pop
push
mov
loop
pusha
gs
and
rolb
icebp
pop
mov
imul
mov
int
outsb
fldenv
lock
dec
cmc
sbb
repnz
pop
fimull
pop
aaa
idivb
jbe
or
jl
inc
fs
xor
popa
lods
or
push
adc
sub
lret
stc
ss
ret
movsl
imul
movsl
push
and
xor
mov
je
dec
xor
pushf
aad
jle
cmpl
add
test
js
outsb
push
into
cmp
cs
ss
add
faddl
sub
ds
mov
add
sahf
ret
scas
dec
cli
cmp
and
push
aam
daa
cltd
mov
fstpt
or
test
hlt
enter
fstpl
push
adc
mov
js
addr16
sub
int
faddl
adc
loope
adc
dec
sbb
scas
test
mov
std
jo
int3
and
dec
and
push
rolb
cmp
enter
push
dec
mov
mov
popa
hlt
jecxz
ror
adcl
aam
das
dec
movsl
or
cmp
pop
movsl
add
mov
fwait
xor
ret
outsb
and
jae
mov
in
xchg
dec
cmp
xchg
js
mov
sahf
test
arpl
popa
out
xchg
aad
xchg
cmp
jb
mov
addr16
ss
dec
mov
daa
lcall
out
cmp
imulb
adc
and
imul
xor
loop
mov
mov
mov
pop
mov
jns
leave
lods
dec
cmpsl
imul
ljmp
xchg
xor
shlb
xor
lods
ret
or
aaa
mov
repz
sub
push
jns
andb
and
idivl
icebp
mov
mov
sarb
ljmp
sbb
movsl
push
xchg
nop
mov
loope
sbb
gs
sarl
jb
mov
push
test
fisttpll
test
int
mov
sbb
xlat
and
and
jbe
sti
lds
cmp
ret
jne
add
sti
ret
mov
or
push
std
mov
lret
lahf
cmp
pop
mov
push
dec
iret
jl
adc
jno
cli
mov
mov
mov
xchg
aam
cwtl
ror
shrl
shll
sub
dec
adc
dec
mov
jno
jbe
outsl
addb
mov
and
cmp
pop
lret
xchg
lock
adc
pop
ret
test
ret
loop
jo
sbb
aaa
and
sbb
xor
mov
imul
jns
jmp
push
shll
rorl
mov
lock
int
loop
jns
sti
fwait
sarl
dec
dec
ficoml
rcll
loope
ss
or
or
lret
xchg
repnz
adc
inc
test
ret
cld
push
cmpsb
mov
daa
jno
add
xchg
sahf
fstpt
pop
jb
lods
lds
mov
scas
lret
jge
repz
stc
jecxz
pop
ljmp
aam
mov
cld
xchg
jo
and
add
je
int
xor
std
mov
das
push
or
lret
out
xchg
test
mov
xor
adc
fxch
fisttpl
sbb
mov
repz
xchg
inc
dec
mov
adc
mov
mov
and
add
push
cli
cmc
cmp
andl
insb
mov
fldt
xchg
mov
jl
jnp
inc
mov
jnp
push
mov
mov
xorl
push
lahf
std
inc
movsl
pop
aam
cs
ja
cld
jbe
sbb
mov
mov
jo
jb
nop
addr16
rclb
imul
adc
pushf
sub
rorb
shrl
jb
call
adcb
out
xchg
enter
push
or
jbe
js
jl
popa
call
mov
cmp
mov
mov
repnz
inc
or
push
inc
mov
ja
out
je
mov
roll
mov
iret
daa
es
inc
inc
mov
or
jne
jns
sbb
mov
jns
outsb
gs
gs
sbb
movsl
pop
and
das
stc
adc
sub
outsb
fimuls
fnsave
into
mov
jl
mov
pop
jne
jmp
cmp
andb
add
addr16
pop
rorl
xor
adc
int3
jb
push
add
mov
pushf
mov
mov
and
test
addr16
xlat
out
icebp
pusha
lahf
push
insl
dec
sbb
shlb
mov
sbb
mov
mov
enter
movsl
mov
mov
fs
push
mov
pop
pop
push
std
test
sub
lahf
hlt
iret
jbe
inc
mov
mov
mov
pop
cmp
jb
dec
xlat
cmp
out
int3
outsb
outsb
push
adc
inc
gs
aaa
dec
testl
es
mov
fadd
or
jmp
daa
jnp
ss
jo
mov
popf
andl
pop
ret
pop
xlat
mov
sbb
clc
add
icebp
push
lret
out
movsl
sub
ja
aam
rcr
movsl
and
imul
or
jnp
fwait
add
xor
jno
pop
adc
ljmp
lock
jb
cmc
idivb
add
aad
movsl
ss
xchg
imul
jns
cmp
fldl
fs
jbe
dec
fisubl
dec
rclb
push
or
fisubrs
mov
jge
fdivrp
or
sub
pusha
xor
sub
xor
pusha
fcmovnu
jne
pop
mov
cmc
pop
repnz
out
xor
push
ret
loopne
dec
adc
ret
cmpsb
mov
cld
popa
xorb
xchg
jle
rcrl
xor
les
je
jge
dec
and
cmp
mov
call
into
mov
and
mov
mov
nop
daa
mov
les
cmc
push
sub
daa
push
insb
mov
adc
or
jmp
jns
imul
stc
andb
inc
mov
and
call
popf
in
fwait
aaa
xlat
out
ljmp
out
push
push
cmpsl
and
xchg
nop
test
or
test
std
sbb
popf
test
cmp
ljmp
jle
ror
enter
mov
fs
fs
push
lds
fsubrl
mov
jle
daa
gs
out
inc
mov
lcall
jne
inc
push
mov
cmpsb
movsl
scas
adc
cmp
sub
xor
dec
xchg
js
in
je
sbb
jb
jb
packssdw
ja
and
push
sub
mov
and
xchg
mov
pushf
adc
bound
fbstp
lods
movsb
test
cmp
adcb
adc
arpl
mov
in
push
push
das
add
leave
xor
cmp
scas
loop
movsb
les
mov
add
dec
mov
mov
insb
mov
add
mov
les
mov
jns
jnp
popa
addl
pop
or
scas
sbb
addl
fbstp
sahf
aam
shrb
pop
pop
mov
dec
dec
xor
fsub
inc
jle
mov
lods
push
inc
mov
jo
mov
ljmp
adc
mov
dec
adc
loop
adc
xor
mov
jne
sub
lods
dec
dec
sbb
cmp
mov
cmpsb
add
insb
xchg
sahf
push
mov
mov
imul
xor
cmc
loop
loop
pop
add
dec
ret
adc
decb
xor
mov
shll
stc
aad
xchg
cmp
mov
lds
mov
lahf
or
mov
rcrl
testb
das
sbb
test
sbb
mov
popa
sub
cmc
fistps
sti
push
dec
stc
add
cwtl
add
movsl
mov
mov
popa
fs
jmp
cwtl
loopne
adc
ljmp
rorl
lods
push
out
sub
ja
adc
sbb
mov
enter
gs
add
lea
jo
call
jae
insl
stos
movsl
mov
shr
imul
cmp
std
lret
rol
jnp
mov
fidivrs
and
dec
stos
sbb
insb
movsl
faddl
lock
repz
lods
mov
out
fdivrs
icebp
insl
jle
adc
mov
pop
jl
adc
daa
push
dec
leave
adc
loope
or
mov
lahf
testb
into
in
mov
jns
test
dec
imul
loopne
inc
out
cmp
ja
out
push
or
xchg
inc
outsb
dec
clc
aaa
push
cli
inc
and
mov
out
test
pop
std
sbb
push
leave
mov
inc
mov
push
lret
adc
hlt
nop
mov
imul
mov
in
mov
jle
pushf
jmp
push
ror
cmp
std
jge
in
outsb
pop
inc
mov
pop
inc
popa
aaa
xchg
movsb
mov
ss
mov
xchg
push
dec
aaa
mov
rorb
in
sub
xor
push
mov
sti
mov
cmp
push
xor
mov
lret
movsl
mov
add
int3
inc
in
movq
xchg
pop
adc
jle
cmc
shrl
dec
sbb
inc
xor
jle
test
xor
jb
adc
mov
pop
ja
adc
imul
insl
inc
int3
jne
std
das
mov
fs
arpl
xor
pop
inc
inc
mov
jl
sub
pushf
sbb
xchg
cmpb
mov
jle
shrb
inc
repz
push
jecxz
xor
dec
lcall
cmp
add
cwtl
lret
lcall
cmp
sub
push
pop
sbb
pop
lods
adc
inc
mov
dec
fdivrs
pop
jnp
icebp
loope
lahf
mov
sarl
mov
out
push
enter
adc
jecxz
push
out
mov
xchg
lds
adc
fs
sbb
cmp
adc
pop
movsb
lds
mov
mov
add
in
add
cmpsb
jle
and
rcll
xchg
jns
push
jo
dec
inc
call
nop
jmp
inc
dec
dec
mov
and
xchg
add
push
test
jb
gs
fadds
iret
and
xchg
push
arpl
dec
fdivrl
inc
sbb
enter
cmp
sbb
imul
jb
add
lahf
cmp
or
push
fidivl
arpl
jp
jae
or
mov
xor
shrl
push
mov
data16
or
mov
add
cmpsl
xchg
dec
dec
mov
sub
jg
dec
aas
inc
iret
test
adc
int
jecxz
xchg
mov
cli
jmp
ret
test
hlt
testb
add
mov
aam
dec
push
popa
pop
mov
sbb
lds
sub
in
repnz
std
or
mov
daa
jne
jae
out
in
pop
push
lret
xor
inc
sub
pop
pop
pusha
adcb
mov
cs
pop
fistps
sbb
mov
push
std
push
sbb
clc
or
sar
int
sbb
testb
sbb
cwtl
jb
inc
jns
xchg
sbb
add
lahf
mov
mov
mov
push
mov
mov
in
or
jne
adc
xchg
dec
lret
out
sti
sub
in
ljmp
add
sbb
dec
ret
mov
add
jae
lods
xor
leave
or
jb
push
or
out
sahf
addr16
es
loopne
pop
cmp
lods
ja
mov
lahf
hlt
test
xchg
dec
dec
mov
sbb
imul
sbb
pop
pop
or
push
xchg
je
imul
cmc
adc
xcrypt-ofb
cmpsl
in
mov
rclb
cli
mov
dec
aad
mov
fmulp
stos
xchg
fbld
adc
push
insl
in
ds
add
inc
jg
pop
jle
mov
stos
dec
adc
std
pop
inc
cld
fbstp
add
sbb
adc
push
arpl
sbb
sbb
daa
ds
sti
mov
outsl
les
dec
and
sub
cmp
nop
ja
pop
nop
fidivrl
sbb
adc
xchg
iret
out
sbb
int3
cli
in
out
push
lcall
bound
fistps
add
ljmp
loope
xlat
ret
xlat
inc
outsb
inc
pop
xchg
lret
test
vxorps
adc
xchg
pop
adc
fiaddl
or
adcl
mov
xorl
cmp
add
in
push
jns
inc
jae
xor
mov
subb
test
xlat
and
lret
lods
pop
dec
mov
or
hlt
test
adc
jo
adc
fwait
inc
stos
xchg
xor
cld
mov
mov
fldl
sub
push
shlb
les
or
imul
inc
je
data16
out
mov
adc
mov
ds
adc
xchg
cli
popa
in
xchg
push
xchg
cmp
jmp
mov
mov
push
mov
insb
or
mov
sub
push
fidivs
sahf
mov
jmp
lods
lock
sub
adc
ja
fisttpl
fstps
sub
inc
arpl
push
incl
adc
or
jb
pop
imul
pop
add
cmp
inc
mov
add
mov
int3
sbb
push
cltd
add
adc
subb
or
stos
adc
scas
push
xchg
adc
cmp
mov
movsl
mov
or
push
add
cmpps
subb
cmp
push
inc
xor
mov
sbb
sbb
xchg
decl
push
mov
or
movl
mov
add
fidivrs
nop
fst
movsl
adc
dec
stc
or
loopne
xor
orl
das
call
hlt
add
test
lret
push
sub
int
and
call
fwait
jge
mov
xchg
cmpsl
cmp
addb
mov
out
mov
sub
mov
aas
pop
je
enter
cmpsl
pop
loopne
testl
mov
outsb
ja
mov
jb
test
and
and
in
jl
movsb
out
enter
fmuls
js
loopne
test
cli
mov
stos
adc
sti
rolb
mov
xor
mov
xor
and
sbb
push
adc
mov
cwtl
xchg
push
bound
das
lea
sbb
adc
stc
sbb
clc
pop
stos
fwait
adc
fnstenv
pop
xchg
jecxz
xor
lret
inc
lea
pop
lock
or
testl
xchg
jo
inc
orl
xchg
mov
pushf
mov
or
and
sub
push
jge
outsb
loope
cmp
jle
push
aad
adc
mov
movl
add
inc
lret
dec
lods
mov
movsl
popf
clc
sub
outsb
push
or
pop
mov
mov
fisubl
inc
or
lcall
loope
pop
inc
cli
or
ljmp
inc
dec
rep
stc
and
jnp
scas
cli
sbb
mov
lods
xchg
test
sub
in
xchg
notb
andb
das
cmp
push
and
rclb
and
inc
inc
ret
mov
xchg
es
push
ss
dec
xchg
mov
sub
loopne
dec
add
gs
icebp
enter
jno
hlt
mov
lret
cmp
pop
or
sbbl
in
test
push
insb
insb
push
repz
shll
stos
push
mov
repz
lahf
sub
scas
mov
push
inc
jle
add
clc
add
sub
and
mov
push
repz
clc
inc
xor
push
and
sahf
adc
data16
dec
dec
mov
pop
mov
jnp
sbb
inc
lods
test
clc
push
push
add
add
bound
xchg
ljmp
out
pop
lret
loopne
pop
testl
sub
xchg
out
fadd
inc
mov
sbb
jmp
ss
and
lock
fwait
aaa
imul
stos
xchg
dec
push
ficomps
mov
repnz
stos
adc
xor
jecxz
xchg
in
push
jns
mov
lcall
pushl
inc
stc
mov
jnp
push
shlb
mov
jmp
test
push
in
or
add
jno
cmc
dec
gs
sbb
hlt
adc
xor
push
mov
push
stos
arpl
adc
xorb
sbb
ljmp
ss
push
mov
adc
fldt
jmp
test
repnz
xchg
adc
movsl
test
cs
pop
xor
adcb
mov
mov
ljmp
or
mov
pop
addr16
into
cmp
dec
dec
mov
inc
mov
call
and
cs
push
out
bound
lret
add
sub
das
or
mov
xchg
dec
bound
lods
cmp
shr
push
leave
data16
dec
ficoms
lret
stos
stos
xlat
aam
stos
sub
mov
mov
nop
lahf
mov
ror
les
adc
call
int3
adc
jg
out
pop
sbb
aam
addr16
mov
fwait
push
idiv
cmpb
adc
sti
lret
ss
sub
adc
mov
or
rorb
into
add
pop
xchg
popa
mov
xchg
jne
fistpll
pop
mov
jmp
add
mov
adc
sbb
gs
xor
addb
jbe
lret
cmp
cmp
pop
aam
pushf
or
inc
jnp
add
inc
xorl
out
jo
cmp
or
pop
pop
lret
ret
xlat
mov
xchg
ss
xchg
hlt
push
sbb
xor
or
pop
les
sti
fdivl
pop
dec
jae
arpl
adc
fnstcw
ss
jbe
out
popf
jl
push
cli
cmpsl
push
xlat
xchg
movsb
divps
sub
xorl
mov
ror
jmp
outsl
notb
pushl
push
pop
and
mov
mov
jb
jmp
dec
inc
push
push
in
repz
ret
push
enter
mov
aam
or
ret
mov
pop
decl
jbe
adc
and
out
aas
adc
in
and
repz
and
or
mov
add
jb
sub
std
xchg
imul
xchg
mov
jmp
adc
insb
lret
ja
fidivs
adc
cmp
add
cmp
pop
inc
call
add
movsl
inc
push
ret
add
push
loopne
push
jo
ss
cli
dec
cltd
mov
pop
fcmovnb
inc
vzeroupper
mov
outsb
shll
fldenv
cmpsl
dec
cmp
addl
pusha
sarl
cwtl
in
clc
pop
fisubrs
dec
repnz
fstpl
repnz
stc
daa
lock
addr16
mov
repz
arpl
fadds
dec
into
dec
sub
xchg
sub
pop
dec
inc
push
adc
or
hlt
das
scas
pop
cmp
andb
pushf
mov
fimuls
mov
sub
mov
mov
orl
jo
cmp
loope
insw
inc
lcall
xchg
daa
aam
popf
cmp
ja
fistpll
push
push
push
divl
rclb
testb
add
pop
inc
flds
and
gs
push
imul
cs
ror
push
or
adc
jb
addr16
outsl
scas
and
enter
rclb
sahf
sbb
ja
rcrb
aaa
call
mov
jg
in
mov
aas
xlat
push
movsl
inc
and
popf
sbb
inc
mov
hlt
mov
and
push
stos
cmp
and
lea
fldt
jne
insl
std
imul
gs
test
dec
inc
in
sbbb
pop
data16
cmp
xor
push
sub
aad
jno
pop
lock
arpl
add
cwtl
fmull
cmp
inc
mov
test
sbb
dec
out
sbb
cs
xchg
ljmp
sbb
fdivl
pop
mov
mov
aas
mov
cltd
lock
xchg
das
mov
sbb
mov
push
sbb
sub
dec
cld
mov
inc
movsb
sbb
daa
mov
sbb
adc
and
jmp
jb
nop
adc
mov
pop
dec
bound
vaddpd
add
loope
dec
lods
cld
mov
out
jns
push
nop
jge
jo
fists
jge
dec
movsl
jns
out
mov
popa
popa
mov
inc
subb
pusha
aad
stos
test
icebp
fisubrs
add
ja
mov
sub
fidivrl
mov
leave
or
inc
add
int3
loopne
inc
jno
adc
adc
lods
fs
inc
add
push
push
sbb
mov
add
push
cmp
out
and
mov
jg
xor
out
nop
adcb
outsl
es
imul
xor
es
addr16
mov
sub
jg
adc
add
push
out
cmc
mov
or
lods
dec
mov
shll
std
out
cmpsb
orb
icebp
adc
test
xor
inc
xor
pop
or
les
gs
xchg
icebp
int
cli
sbb
sahf
je
mov
jl
adc
in
mov
add
ds
les
mov
cli
test
sub
lret
dec
insl
test
xchg
outsl
add
js
stc
jl
or
mov
ret
inc
xor
pop
call
or
dec
inc
dec
pop
cmc
inc
cmpsl
sbb
or
clc
push
jl
lods
push
pop
jb
dec
mov
outsl
adc
mov
movsl
mov
adc
out
rolb
stos
adc
pop
xlat
xor
dec
push
cmc
out
xorb
or
add
add
cltd
stos
iret
inc
cs
cmc
stos
and
cld
mov
xor
cmp
outsl
mov
pop
pop
cltd
cwtl
mov
xchg
adc
sub
add
jno
movsb
cwtl
xor
movsl
xchg
test
popf
leave
shl
xchg
mov
xchg
sub
test
call
lock
ficompl
mov
ret
out
add
insb
inc
gs
adc
and
sbb
or
inc
mov
cwtl
setle
mov
loope
xchg
fisttpll
xchg
rclb
add
and
xchg
call
sbb
out
std
clc
xchg
out
jecxz
cmp
fwait
adc
push
pushl
outsb
scas
xchg
lahf
pop
daa
adc
inc
cmc
and
mov
ss
sub
popa
and
pop
notl
idivb
cld
push
jb
out
icebp
jb
fistpl
stos
xchg
in
adc
dec
pop
int
xchg
cmp
or
les
cmp
in
fdivrp
daa
mov
leave
mov
cmp
lcall
clc
jae
xchg
jo
inc
fnstcw
cmp
cltd
das
jle
push
push
jne
ja
xor
test
mov
push
sub
cmpsl
les
mov
inc
sti
jnp
daa
jae
mov
es
pop
push
and
call
aaa
rorb
dec
in
in
popa
push
gs
in
movsb
mov
stos
mov
jb
leave
sub
sbb
cmp
adc
dec
xchg
in
movsb
scas
fdivrl
mov
aad
xchg
sub
mov
push
inc
mov
lcall
clc
push
and
lock
mov
stc
mov
add
int
jmp
pop
dec
inc
shrb
cld
inc
test
jecxz
lahf
or
cmpsb
in
xlat
stos
jb
add
pop
jno
jl
lods
shr
pop
or
jo
jae
jge
mov
mov
mov
add
sbb
xchg
mov
rcll
sub
ljmp
dec
sub
cmp
fidivs
xor
lret
xor
pop
adc
data16
xchg
pusha
add
loopne
lods
int3
outsl
jge
jle
add
push
mov
pop
sub
pop
pop
fstps
in
dec
sub
push
jmp
jo
mov
adc
into
sti
push
and
mov
lock
lcall
imul
addl
mov
pushf
xchg
pop
mov
xchg
add
and
mov
pop
mov
hlt
xchg
cwtl
inc
xor
jle
pop
jo
sub
sbb
adc
xor
mov
jecxz
pop
leave
jne
addr16
cmp
in
aam
push
push
cli
push
mov
movntq
out
push
lock
lods
push
mov
idivl
in
fcompl
jmp
out
repz
mov
imul
and
inc
xor
sahf
fmull
and
jne
scas
jb
rolb
sahf
stos
mov
push
adc
je
add
sub
mov
aam
fldcw
push
dec
jne
push
xchg
mov
rorl
call
jbe
sbb
dec
jg
jns
xor
mov
jge
mov
ss
jmp
scas
notb
test
test
sbb
fcomps
cmpsb
mov
add
and
push
sti
inc
loope
add
pushf
and
lea
pop
aaa
push
cmp
mov
into
fisttps
enter
adc
fs
xchg
pop
and
mov
popf
jmp
jle
fsubrl
test
jle
movsb
sub
in
scas
sub
jp
dec
adc
adc
lock
cwtl
cmp
cmp
xchg
cs
js
fdivrs
add
push
add
pop
fistps
std
ja
mov
iret
out
stc
pop
push
dec
xchg
mov
in
cwtl
pop
in
jbe
add
fistl
hlt
pushf
rorb
or
inc
std
icebp
je
sarl
push
inc
jg
cmpsb
shrb
xlat
insl
jecxz
mov
cltd
les
mov
jno
addr16
sub
xor
fistpll
jmp
neg
cmp
add
xchg
aaa
sub
out
or
mov
and
cmpsb
mov
jne
mov
cmp
push
out
push
clc
cmp
xchg
push
dec
jne
sub
rcl
int
pop
pop
mov
negb
adc
mov
lods
or
inc
dec
pop
push
neg
stos
lahf
jbe
shll
arpl
add
pop
sbb
xor
pushf
sbb
and
mov
and
cwtl
js
dec
loope
popf
loop
sti
sbb
insl
inc
or
or
and
and
mov
dec
lret
cmp
cmc
stc
or
xor
jae
or
arpl
outsl
dec
mov
cmp
adc
icebp
out
cwtl
mov
sbb
jne
lock
or
sbb
cmpsl
ret
bswap
mov
push
rorb
dec
insb
test
cmp
popa
pop
and
xchg
int
mov
sub
lods
push
dec
cmp
icebp
cwtl
mull
cmpsl
les
inc
xchg
shll
inc
ret
or
fwait
bound
imul
loop
dec
push
js
ss
jmp
aam
ret
ret
pop
sti
mov
and
mov
insb
movsl
push
mov
dec
xchg
push
and
roll
not
cmp
inc
hlt
xor
mov
xchg
movsb
add
jp
sahf
imul
popa
pop
into
out
mov
scas
pusha
sti
scas
fucomip
aaa
push
fistps
dec
dec
or
inc
sub
loop
adcb
int
sti
sbb
lahf
popf
inc
test
aaa
jnp
scas
sbb
sarl
mov
push
daa
dec
or
mov
xchg
lret
xchg
call
sub
mov
mov
outsb
aad
popf
pop
leave
or
hlt
cwtl
lods
pop
cmp
xchg
int3
push
dec
pop
mov
mov
jb
inc
mov
les
addr16
cli
icebp
jo
shrl
lahf
push
xor
lret
ret
jae
jbe
aaa
push
in
cltd
xor
mov
rcr
mov
aad
mov
or
cli
add
add
inc
or
je
test
xchg
cmpsb
and
popa
mov
add
or
into
sub
or
jb
loopne
push
xchg
and
and
outsl
movl
pusha
dec
fdivrs
inc
mov
stc
ja
ds
in
sbb
aam
je
push
nop
mov
inc
iret
repnz
xchg
jp
jmp
sbb
fsubrs
push
mov
xor
jne
and
aaa
dec
mov
enter
mov
js
push
mov
mov
dec
mov
dec
scas
push
aaa
jmp
fnstsw
adc
fstps
or
cmc
gs
lock
sub
fildl
out
iret
popf
cmp
fmull
mov
dec
adc
sbb
jo
je
ja
pop
xchg
and
sub
jno
repz
xor
popw
fstpt
movsl
rcrb
jmp
cmpsl
cld
pushf
or
lea
inc
pop
clc
and
lds
test
cmp
jo
jae
imul
jecxz
pop
pop
adc
xchg
fdivl
popf
outsb
int
mov
jb
push
jb
cwtl
out
dec
into
cmpl
pop
lods
push
sub
call
push
add
pusha
jge
or
loop
fbstp
enter
rclb
mov
pop
fstps
push
shll
test
xchg
xor
xchg
or
lock
cmp
jecxz
lods
ret
arpl
aam
inc
mov
test
inc
adc
sbbb
js
insl
orb
cmc
jnp
inc
mov
cvtpi2ps
test
pop
bound
ret
and
test
jbe
pop
push
pop
sub
mov
cmp
andb
and
xor
inc
pop
ljmp
pop
shll
cmp
fistps
scas
xor
cmp
out
test
and
adc
or
or
push
int
fsts
movsb
push
push
xchg
and
stos
push
dec
aas
push
rep
pop
sub
fists
inc
push
xor
xor
aaa
mov
mov
push
lds
xor
fdivrl
adc
faddl
sbb
test
daa
ss
subb
inc
decl
mov
mov
or
aas
das
nop
ret
xchg
sti
sub
fldt
jp
dec
out
lods
and
clc
cmp
mov
sarb
xlat
sbb
sbb
add
lea
int3
sub
mov
pop
pop
xchg
mov
rolb
sbb
aam
mov
imulb
or
loope
into
mov
jg
pop
xor
cld
pusha
mov
or
dec
jae
into
inc
fwait
xchg
mov
sbb
cmp
movsl
mov
aam
testl
pop
mov
sbb
cmp
push
adc
jmp
push
dec
insb
mov
mov
imull
sbb
push
ss
out
and
gs
dec
aam
test
fildll
fwait
xorl
adc
enter
pop
xchg
xor
mov
and
jge
push
test
add
sub
pop
mov
sbb
push
mov
push
xchg
sub
pop
aam
and
adc
data16
cld
fsubrs
out
xchg
out
in
cmp
xorb
notb
push
add
daa
xor
jge
shlb
popa
mov
jnp
cltd
sbb
mov
incl
cmp
xchg
jg
pop
jnp
in
mov
bound
out
aas
pop
adc
je
faddl
add
push
lock
repz
mov
outsb
int
fdiv
in
or
jae
xchg
fidivrl
push
or
inc
and
jbe
inc
push
daa
sbb
and
enter
pop
cli
call
adc
xchg
ret
jnp
lret
in
das
mov
clc
pop
jl
scas
sbb
xor
jge
xchg
jb
pop
loopne
mov
jl
jl
fisubrl
insb
sahf
loope
pop
ljmp
cmpsb
sbb
es
scas
mov
sti
pop
pop
ss
repz
sbb
add
lds
mov
xchg
jo
leave
mov
jge
insb
hlt
test
mov
mov
add
cld
ja
fbstp
jge
jno
adc
loop
pop
int3
xor
lcall
push
xlat
pop
mov
stos
cmp
xor
xchg
lods
loop
mov
pop
call
cld
ret
mov
mov
bound
push
push
fsubr
mov
leave
enter
dec
flds
mov
int3
dec
mov
insl
add
out
and
mov
inc
aaa
jb
lret
xchg
in
pop
sub
or
pop
stc
outsb
cmp
mov
in
dec
xrelease
mov
movsl
mov
xchg
sub
add
mov
cmpsl
sbb
adc
cmp
in
or
pop
gs
mov
pusha
inc
xor
dec
cmp
notl
cmc
push
loopne
xchg
dec
ja
xchg
js
mov
stc
in
pop
mov
pushf
push
mov
ljmp
cmp
insb
test
jnp
gs
arpl
popf
pop
lock
xchg
sub
inc
aad
cld
subl
cli
and
inc
or
push
mov
iret
fsubr
pop
nop
push
movsb
psllw
jno
out
xchg
pop
pushf
dec
mov
mov
mov
adc
mov
std
cmp
push
test
nop
cmp
mov
gs
insl
and
outsb
inc
ret
inc
sub
call
ret
mov
imul
mov
cld
stc
add
dec
and
scas
jle
dec
xchg
test
insb
jb
insl
dec
sub
rorb
sub
test
bound
mov
and
cmp
mov
dec
clc
negl
pushf
push
test
pop
lods
int
ljmp
cwtl
or
push
mulb
insl
jb
ja
imul
push
jge
out
test
push
cmp
ss
packuswb
cmpsb
insl
or
cwtl
shrb
mov
lds
adcb
into
sti
into
xor
test
and
cmp
repnz
lret
mov
jnp
xor
mov
rcr
bound
inc
test
jmp
push
fistpll
cmpb
mov
mov
mov
std
addr16
loop
fwait
dec
in
inc
and
jb
ja
int3
int
insl
push
dec
insb
mov
lcall
jle
mov
pop
sbb
js
mov
mov
xlat
inc
pop
test
repnz
xor
pop
sub
cmp
dec
pusha
mov
scas
mov
das
ljmp
push
pushf
dec
clc
xchg
and
stc
sub
xlat
or
inc
test
cwtl
xor
adc
pop
and
lods
hlt
jmp
mov
pop
jmp
adc
jle
iret
pop
ficoms
mov
cwtl
outsb
sub
mov
mov
push
out
icebp
jae
xchg
sbb
mov
dec
sbb
test
xchg
jecxz
fadd
popa
stos
scas
and
loope
xor
dec
clc
mov
pop
push
xchg
push
test
fimuls
mov
mov
and
insb
stos
popa
fildl
in
sub
addr16
shr
fs
dec
fnstcw
pop
cmp
mov
push
cmpb
loope
cmp
xlat
andb
leave
dec
lahf
dec
cmp
pop
cmp
jne
call
lock
xor
lods
fisubrs
pop
call
sbb
clc
dec
ds
xor
push
roll
sub
pop
test
sti
pop
mov
inc
push
push
imul
ds
and
lods
ds
jecxz
sbb
mov
adc
adc
fldt
xchg
jecxz
das
push
add
cmp
repnz
or
sahf
jg
xor
cs
cmova
or
mov
pop
push
fwait
lcall
mov
cltd
out
add
mov
mov
and
mov
pushf
pop
cmp
push
cmc
push
hlt
sub
sbb
jmp
inc
pop
dec
jno
mov
fnstsw
mov
sub
and
pop
adc
push
pop
lods
lock
ret
or
xchg
cmp
bound
mov
cwtl
mov
out
stos
pop
mov
jg
imul
dec
jge
xchg
mov
loopne
cmp
cwtl
pop
test
iret
adc
scas
mov
aad
ficoms
jbe
stc
cmp
in
js
icebp
leave
pop
mov
stos
lods
fcoms
shrb
test
mov
cmp
add
xchg
and
sbb
imul
rcll
call
sbb
mov
inc
inc
loopne
in
sbb
lret
sbb
pop
add
outsl
cmp
shlb
lea
test
fstpl
add
mov
push
negb
cld
sbbb
daa
daa
jo
jg
adc
add
ss
or
jecxz
popa
and
sbb
inc
mov
lock
sub
adc
cmp
test
xchg
filds
dec
push
dec
adc
xchg
out
test
lret
fdivr
add
push
pop
or
popa
and
mov
cmc
mov
je
cmpsl
mov
xchg
mov
or
jg
inc
adc
sub
add
lea
sbb
pop
lahf
mov
jmp
sub
dec
sbb
cmp
or
cli
cmc
fs
insl
mov
in
inc
xchg
jno
fidivrs
mov
push
mov
das
scas
sub
out
idivl
addl
sub
jo
lds
push
sbb
push
mov
xchg
jmp
les
mov
jno
call
orl
mov
outsw
bound
test
orl
insb
int
fstpt
out
roll
adc
sub
out
notb
mov
jp
dec
xchg
hlt
movsl
pop
out
cli
dec
jmp
xor
out
or
mov
arpl
rol
pop
inc
call
test
in
sbb
pop
pop
jns
int
push
not
adc
xor
and
repz
lods
in
xchg
push
push
in
rcr
lahf
jo
adc
jae
pop
fiadds
cmpsl
sbb
repnz
pop
push
enter
jg
and
lds
aaa
sub
jnp
cmpsb
in
mov
jmp
js
and
cmp
dec
xchg
xchg
xchg
xor
sub
dec
mov
and
lret
les
add
add
lret
xlat
xchg
out
ja
adc
mov
loop
fnstcw
int3
popf
std
push
mov
xchg
dec
aas
dec
int
jl
hlt
adc
lea
lds
nop
mov
andl
add
and
sbb
mov
pop
pop
xor
outsl
sbb
jecxz
cmp
imul
fistl
arpl
test
adc
or
mov
and
xchg
jmp
insb
fcmovb
int3
es
dec
adc
out
out
xchg
ljmp
lret
loop
pop
out
enter
bound
mov
lcall
mov
pop
lods
dec
inc
pusha
sub
or
popf
mov
out
pop
ds
imul
idivb
das
jmp
notb
adc
popa
and
push
mov
outsb
push
dec
mov
or
or
inc
je
xchg
adc
in
xchg
sbb
or
jecxz
data16
icebp
and
mov
jp
nop
fidivs
je
andl
je
dec
jecxz
pop
push
loopne
xor
fsubs
sbb
sub
mov
stc
fisttpl
lods
jne
fsubrl
or
adc
sub
xchg
mov
icebp
pop
cld
das
and
push
sub
inc
imul
scas
add
add
xchg
cmp
push
mov
cmpsl
scas
shrb
pop
imul
and
loop
jmp
dec
fcomps
in
aaa
rcr
xchg
and
lea
dec
aas
xor
or
xor
pop
pop
jns
idiv
fs
movsb
add
mov
cltd
scas
cmpsb
pop
ficoml
in
in
sbb
mov
mov
mov
cld
xlat
mov
add
jle
pop
mov
push
dec
jmp
ljmp
test
mov
sbb
scas
fisttps
mov
test
pusha
push
in
jns
push
mov
pop
movsb
ret
fidivs
addr16
xor
sbb
ljmp
and
xchg
pop
lahf
pushf
adc
pop
test
and
cmp
addr16
fs
push
arpl
dec
jp
jmp
add
dec
jne
mov
mov
sub
in
mov
mov
repz
mov
xor
outsb
aaa
stc
xor
pop
pop
notb
mov
movsl
inc
jno
mov
clc
orb
add
loope
repnz
mov
je
lea
mov
dec
sti
mov
test
xor
loop
xchg
ja
lock
cld
jmp
fidivl
push
push
adc
test
out
and
mov
repnz
cmp
daa
movd
jnp
or
add
adc
ret
mov
cld
inc
push
les
cmp
outsl
cmpsl
pusha
ret
mov
test
xor
mov
inc
lret
cmp
mov
inc
popf
xor
adc
scas
inc
sbb
sbb
aas
xchg
sbb
mov
je
inc
test
into
stc
push
inc
repz
mov
sbb
dec
and
xchg
and
xor
hlt
jno
mov
dec
cmpsl
mov
jle
jno
cmp
test
mov
lea
xlat
cwtl
xchg
aaa
xchg
xor
in
mov
jle
ja
nop
mov
lds
repz
test
stos
fidivrs
adc
out
jnp
faddp
jne
sbb
mov
cvtps2pi
jns
add
fcomps
inc
sub
into
xor
cltd
adc
roll
or
lock
enter
dec
mov
xor
jbe
xlat
inc
xor
add
clc
dec
movb
jae
stos
dec
add
mov
cld
loop
and
add
scas
push
hlt
add
into
pop
test
fstl
je
pop
into
in
cmp
aad
cwtl
repnz
mov
mov
add
dec
inc
pop
mov
and
test
push
mov
loopne
ds
cmp
jbe
fmul
aad
and
loop
dec
ja
adc
push
inc
sub
nop
filds
andb
inc
and
arpl
movsb
mov
les
sub
arpl
test
sub
mov
or
ja
sbb
sarl
fdivr
push
sti
jnp
add
cmpsb
movsb
pop
sbb
jle
stc
jae
sub
inc
sbb
mov
and
data16
push
and
sub
jecxz
adc
es
hlt
xchg
aad
out
jb
loop
loopne
push
mov
clc
call
cmp
call
xchg
inc
fcomip
inc
out
ret
pop
xchg
movsb
mov
push
inc
mov
les
ja
in
mov
inc
push
test
in
xchg
nop
pop
cmp
data16
mov
mov
popl
xor
jge
and
fisttpll
fs
std
dec
outsl
imul
jg
ljmp
enter
pmulhuw
sub
adc
enter
hlt
pushf
mov
push
aas
mov
call
xor
cmp
inc
cmp
pop
or
or
add
xchg
adc
test
add
jno
sbb
mov
or
sub
mov
mov
dec
jo
mov
out
and
in
xlat
mov
imul
outsl
dec
fst
or
aad
push
jp
loop
lods
cmp
repnz
aad
fiaddl
adc
pushf
out
divl
jb
dec
pop
mov
jmp
xchg
sti
pop
cli
test
push
sti
cmpsl
mov
cltd
mov
ja
dec
mov
scas
push
sub
lods
mov
rcll
and
into
add
xor
call
jmp
cltd
fadds
dec
push
and
mov
xchg
in
movsb
call
stc
pushf
mov
aam
cltd
inc
mov
xor
outsb
inc
addr16
or
xor
addr16
test
mov
movsb
in
fildl
cmc
sbb
cmpsb
insb
aam
cmp
push
mov
jecxz
adc
pop
push
and
arpl
sti
cmp
jbe
and
imul
fwait
inc
call
and
xchg
iret
nop
adc
lret
mov
jb
adc
xor
sbbb
les
jne
fcomi
icebp
addr16
aas
pop
hlt
or
stos
movsl
sbb
test
jmp
movsb
xor
sub
mov
xor
inc
jne
push
in
in
dec
dec
cli
bound
cmp
cwtl
addr16
stos
xor
cmpsl
bound
cmp
mov
inc
outsl
repnz
and
cmpsl
les
xchg
nop
jo
bound
cwtl
jbe
shlb
cmpsl
addr16
pop
push
push
fisttpl
stos
adc
sbbb
iret
shrl
ficoms
fucomp
jmp
push
rcrl
hlt
jmp
mov
push
or
outsb
ja
mov
cmp
mov
mov
shll
shll
in
xchg
cmp
arpl
xchg
imull
push
loopne
xchg
out
test
pop
rclb
mov
adc
xor
mov
dec
icebp
add
aad
mov
fxch
test
pop
in
inc
movsb
inc
inc
or
andb
lcall
mov
jno
sub
rolb
xchg
mov
int3
not
hlt
std
repz
cmp
lea
xchg
ret
mov
enter
lds
push
outsl
push
into
stos
cwtl
push
push
movsl
mov
pop
aam
pop
sbb
das
and
mov
out
sar
push
add
jp
xor
in
mov
test
jge
pop
cmpsb
fidivrs
mov
xchg
dec
inc
insb
mov
test
and
jne
fiaddl
notl
dec
dec
xlat
jmp
jno
and
std
loope
loopne
cmp
jns
xchg
ds
add
dec
mov
xchg
sub
int
aad
dec
xchg
mov
sub
out
popf
into
dec
stos
xor
cmpsb
je
enter
or
mov
sahf
outsl
out
mull
daa
ret
adc
mov
adc
movsb
mov
ss
fiaddl
rolb
aaa
cltd
jo
or
sub
and
pusha
push
outsl
xor
dec
adc
stos
cmpsb
leave
or
jnp
stos
mov
add
subb
sqrtps
cmpsl
cli
scas
xor
xchg
sub
inc
push
dec
dec
sub
sbb
jmp
pop
std
ss
es
cli
cltd
push
or
nop
enter
mov
jp
jns
aaa
xor
jnp
not
insb
push
inc
sbb
mov
sbb
mov
sbb
push
in
iret
js
cmp
mov
fadd
pop
jecxz
jecxz
pop
sub
aam
push
enter
shll
xor
outsb
xor
sldt
dec
test
sub
adc
fwait
cmp
xor
movsl
into
mov
xor
sub
fmull
dec
daa
mov
xor
inc
sar
sahf
push
lock
sbb
rorb
add
cwtl
inc
push
std
enter
or
les
push
addr16
dec
jne
das
xorl
xor
cwtl
js
xchg
push
mov
dec
testl
stc
test
sti
dec
jne
xor
push
test
sbb
pop
iret
sbb
push
add
cmpsl
sbb
cs
pushf
sub
ljmp
out
pop
loope
mov
push
cmp
cmp
ljmp
dec
jge
out
pop
xchg
mov
cwtl
and
mov
pop
jge
sbb
sbb
add
lock
lods
stos
xchg
add
iret
and
dec
sub
jecxz
jmp
cld
cmp
inc
out
sub
cmp
or
xor
daa
add
std
push
into
sub
push
or
ja
jl
adc
and
pop
jecxz
mov
repz
movsl
adc
push
jb
test
dec
out
xor
xchg
fwait
mov
mov
pop
mov
cltd
mov
jnp
leave
sub
xor
imul
loopne
mov
ds
nop
shr
sub
pop
jl,pt
adc
loop
adc
jmp
inc
xchg
rcll
sub
les
cmp
xchg
cmp
pcmpgtb
call
and
sub
xchg
inc
or
lods
je
jbe
into
mov
dec
mov
out
mov
pop
cmp
sbb
pop
xchg
icebp
stc
xor
dec
jle
xor
mov
test
setle
sahf
adc
not
dec
test
inc
test
cmp
xor
push
jno
xor
push
or
aaa
ds
cmp
out
idivl
jp
imul
aas
jns
sbb
lock
cltd
push
dec
das
inc
mov
movsl
insb
xor
in
jmp
mov
cmp
lods
add
ret
cmp
rorl
les
lds
ljmp
xor
adc
jae
movsl
movsl
pop
pop
or
mov
cmp
add
and
xor
sub
jnp
popf
mov
sti
aad
outsb
jecxz
lcall
mov
aad
push
mov
mov
rorb
add
cmpsb
adc
push
out
sbbb
pop
mov
stos
jae
testl
mov
cli
xchg
pushf
pop
aas
pop
cmp
push
cmpsb
fsubs
push
xchg
das
dec
jmp
rcr
sbb
add
mov
push
lods
cld
in
icebp
cmp
ds
cmp
jmp
imul
hlt
or
int
mov
sahf
divl
inc
mov
cmpsl
mov
in
bound
out
hlt
add
decb
call
pcmpeqb
mov
bound
test
lcall
sbb
jae
and
setp
clc
sbb
ss
inc
mov
add
jmp
dec
jbe
rcl
jl
jl
push
mov
adc
push
mov
cmp
push
pop
cltd
ret
mov
or
stc
rorb
mov
scas
ljmp
les
mov
loop
mov
sbb
enter
mov
mov
jno
rcrb
into
and
icebp
scas
and
popa
sub
insl
cmpsb
pop
aam
push
sbb
inc
dec
aad
dec
cmp
mov
mov
or
adc
jbe
loope
mull
mov
call
movsb
stos
test
bound
mov
fsts
xchg
jae
push
fwait
inc
sbb
push
aad
xchg
popa
mov
out
in
loope
xor
mov
or
stc
and
mov
sbb
jo
int3
test
fisubs
pusha
adc
lods
in
mov
mov
ss
scas
iret
aam
leave
and
pop
and
in
jb
out
sbb
pop
mov
leave
jno
dec
rcrb
sbb
xor
pop
pop
xchg
xchg
int3
test
outsl
fnstenv
cltd
and
push
dec
fists
push
addl
inc
stc
insb
int3
fwait
jge
cmp
into
repz
mov
cld
sub
jae
iret
cmp
icebp
out
pop
dec
sub
xor
xchg
cld
out
dec
cmp
movl
dec
jns
cs
lds
mov
fsts
outsl
dec
push
jae
cwtl
rclb
ljmp
mov
mov
out
push
mov
or
pop
imulb
nop
mov
fmuls
jnp
daa
out
out
pop
and
xchg
mov
dec
add
fs
mov
rorb
cmp
sbb
and
lret
xchg
add
and
stc
push
sarb
ljmp
outsl
cs
das
push
dec
daa
sbb
xchg
ret
call
fdivrl
fidivl
jnp
popa
pop
and
lcall
sbb
jp
jo
mov
mov
fnstenv
push
jle
xchg
push
pop
and
lret
dec
mov
mov
fwait
cmpsb
mov
mov
pop
aaa
rorb
xorl
or
in
test
mov
xchg
aaa
adc
jl
add
adc
pop
stc
inc
loop
mov
jbe
sub
sub
cli
cmp
jnp
push
xor
pop
in
lea
sbb
dec
rcrb
add
out
jmp
out
cmp
xchg
decl
fs
je
pop
xor
or
mov
in
ljmp
gs
and
mov
lret
sbb
gs
jge
dec
sub
push
push
addr16
inc
mov
xchg
dec
add
std
push
icebp
repz
add
push
push
pop
add
or
popf
into
cmp
sbb
addr16
and
adc
les
cmpsl
aaa
push
dec
jo
push
out
es
mov
outsb
sub
sarl
push
xchg
rcrl
dec
mov
sbb
or
idivb
orb
jno
repz
call
and
lea
lcall
add
mov
mov
fstl
icebp
jnp
or
fdivl
jge
ss
mov
ljmp
test
inc
push
scas
mov
and
mov
or
shl
adc
sarb
out
push
dec
nop
push
xchg
leave
push
stc
jb
mov
pop
inc
push
lea
inc
lock
push
dec
in
add
loop
fs
or
adc
sub
stc
mov
lret
pop
int3
dec
push
hlt
icebp
in
insb
or
popf
cmpsl
jp
iret
outsb
mov
cld
rcll
in
insl
mov
gs
popf
out
and
inc
lock
test
aaa
mov
cwtl
jne
jno
lcall
sti
sbb
adc
push
mov
rorb
fcoml
push
mov
xchg
or
aam
dec
ja
adc
rolb
pop
vpshufd
out
ss
jnp
mov
pop
adc
scas
push
push
sbb
insl
cmp
dec
pop
adc
jle
fwait
das
add
pop
cwtl
push
lods
xchg
and
add
inc
es
stos
insl
dec
xchg
adc
ss
icebp
cmp
test
jmp
ds
test
and
adc
cmpsl
xchg
pop
outsb
lea
dec
stos
movsb
dec
jecxz
daa
dec
mov
imull
cmpsl
xor
mov
pop
cmpl
mov
or
xchg
fdivs
or
adc
in
jecxz
dec
cwtl
int3
pop
pop
out
mov
cmpsb
mov
fidivl
aad
in
lcall
rolb
sbb
xor
rolb
ret
fldl
cli
daa
pop
sbb
pop
xchg
repnz
jecxz
fidivrs
xchg
loopne
mov
jne
jmp
repz
je
int3
imul
hlt
cmpsl
sub
pop
mov
mov
shll
mov
fs
push
inc
mov
cmp
mov
adc
icebp
lds
insb
xchg
xchg
stc
push
popf
sbb
cmp
out
addr16
sbb
jae
inc
stos
jg
stos
mov
fwait
mov
cmp
das
cmpsl
add
mov
iret
mov
es
cmpsb
sbb
lcall
jne
in
xchg
sbb
or
xor
loopne
pop
xchg
clc
lock
cmpsb
movsl
add
inc
jno
sarl
orl
push
loop
jp
popf
movsl
mov
shll
testb
or
and
out
scas
in
or
std
pop
test
dec
mov
jae
pop
mov
mov
mov
addps
daa
lods
mov
jnp
inc
pop
ds
je
add
dec
outsl
cmp
jp
mov
or
push
mov
sarl
jne
jb
rcr
push
xchg
fs
ret
mov
mov
stos
sub
lcall
das
inc
cmp
sbb
push
mov
rorb
xchg
push
idiv
js
push
cmp
pusha
ljmp
dec
mov
inc
sti
xorl
out
fwait
daa
rcll
and
insb
cmp
dec
or
mov
xchg
shll
xor
movb
fcmovu
in
xchg
adc
dec
lock
es
or
lods
ret
mov
mov
leave
pop
iret
xchg
into
shlb
dec
pushf
xorb
inc
and
mov
pop
xchg
stos
out
jmp
jp
fbstp
and
and
mov
inc
xor
or
mov
xor
insl
movsl
mov
imul
or
or
dec
push
jnp
fs
or
movsb
pop
aam
out
test
outsl
or
call
mov
jmp
ret
cmp
dec
lock
ds
add
jg
lods
test
pop
cmp
aaa
mov
sti
add
push
mov
in
mov
sbb
lods
fisubl
addr16
push
cmp
sub
push
out
and
push
ss
sbb
rorb
sub
mov
imul
repz
iret
fimuls
out
leave
scas
xchg
xlat
add
jmp
gs
clc
popf
into
and
lret
mov
stos
mov
xor
xchg
lret
add
cmp
scas
push
movsl
lea
mov
movsl
mov
in
daa
fs
push
mov
adc
adc
jne
mov
inc
lea
xchg
or
jno
jns
pop
dec
add
cld
cmpsb
popf
mov
xchg
aas
jo
andl
pop
imul
mov
rorb
lea
mov
out
dec
mov
hlt
mov
loopne
lods
sbb
xchg
pop
ss
adc
cmp
fisttpll
mov
ja
jg
adc
mov
mov
fistpll
outsl
add
add
and
mov
stc
jno
lret
xchg
push
decb
mov
leave
fwait
inc
xlat
in
and
dec
jge
or
push
add
push
flds
push
push
mov
xor
testb
jns
pop
jle
rorl
dec
cmc
jecxz
in
pop
lds
mov
inc
jmp
xchg
jl
cld
xchg
out
mov
xor
mov
jmp
push
sti
jae
scas
cmp
mov
mov
addl
add
adc
lret
or
shrb
shl
in
mov
cmp
pop
nop
xor
testl
movsl
push
in
shl
jbe
xlat
inc
insb
mov
sti
lcall
lods
ljmp
mov
jmp
pop
mov
in
adc
imul
push
mov
hlt
pop
rcl
and
xor
mov
push
jmp
sub
ljmp
or
fwait
in
loopne
mov
js
adcb
and
adc
pop
mov
and
lds
dec
push
test
frstor
and
faddl
fwait
cmc
push
sbb
fcoms
sti
aaa
ss
inc
je
or
sub
pop
daa
data16
jb
imul
cmpsb
mov
mov
in
push
xchg
out
push
bound
mov
movsb
out
hlt
popf
and
dec
pop
es
fnsave
mov
es
lcall
lahf
movsb
sub
rcrl
int3
sbb
xlat
jg
insl
push
push
add
cltd
mov
cmp
xchg
jnp
popa
cmp
sahf
push
les
mov
cmpl
push
in
pop
cli
or
in
dec
mov
int
xchg
and
lahf
pop
data16
les
jg
push
pop
dec
xchg
adc
pop
loopne
movsl
pop
inc
pop
outsb
leave
or
insl
in
in
cmpsb
icebp
push
mov
test
mov
addl
xchg
jp
jbe
dec
jns
inc
xchg
sbb
incl
mov
bswap
xchg
jmp
or
add
into
sti
shll
adc
imul
sbbl
sahf
cltd
push
jbe
cli
orb
mov
dec
jae
cmc
lods
and
mov
repz
mov
int
aam
pushf
pop
loope
xor
mov
fnstcw
or
sti
decb
jmp
jp
or
pop
or
int
mov
imul
imul
dec
mov
adc
insl
jnp
and
push
stos
xchg
pop
fidivl
and
adc
adc
jbe
mov
adc
mov
das
call
inc
dec
enter
push
or
cmp
testl
mov
addb
mov
or
test
mov
jnp
mov
jmp
mov
insb
lret
adc
dec
jne
inc
out
movsb
movsl
js
jg
call
push
insl
scas
and
inc
out
outsl
pop
test
mov
test
mov
jmp
nop
rorb
popf
enter
cs
mov
hlt
mov
nop
xor
cmp
or
xchg
sti
and
xchg
int3
out
push
out
cltd
inc
mov
bound
andb
cmpsl
mov
mov
pusha
sub
cmp
sub
loope
cmpsb
and
inc
add
mov
cmc
add
xchg
aam
inc
adc
or
add
in
inc
push
add
xchg
stos
pop
mov
negb
mov
incb
in
jae
dec
mov
pop
movsb
aam
push
fnstsw
xor
gs
pop
or
int3
div
mov
int
mov
in
jmp
sarb
or
sbb
sub
jns
push
lods
inc
jmp
fnsetpm(287
cmp
sub
mov
xor
ret
push
insb
inc
dec
lods
or
adc
loop
fbstp
test
pop
loope
pop
addl
mov
jae
dec
jae
addl
dec
mov
dec
cmp
test
push
mov
aad
dec
dec
add
test
jp
pop
cmp
bound
sbb
pop
movsl
ret
sti
ljmp
jo
fsub
mov
fldcw
cmp
push
dec
cmp
ret
xchg
es
mov
and
repz
sbb
in
push
pop
cmp
lret
mov
push
scas
cltd
mov
xchg
dec
daa
mov
mov
dec
inc
add
cmp
dec
dec
mov
rcrb
icebp
stos
adc
and
je
fsubp
adc
pop
imul
mov
dec
into
push
xchg
inc
xrelease
sbb
xchg
jmp
ja
mov
out
popa
jne
and
pop
aam
add
mov
mov
xor
add
add
cwtl
into
mov
hlt
xlat
outsb
cmp
xchg
pop
inc
leave
insb
add
adc
ja
mov
jns
fbstp
lds
lret
mov
and
lods
imul
pop
leave
xor
add
icebp
push
pop
or
fwait
test
pop
mov
aas
xchg
mov
js
jo
scas
lcall
pop
sbb
add
jge
pop
or
push
movsb
into
popf
dec
adc
fbld
gs
fwait
loope
iret
sti
or
lods
mov
nop
pop
test
cs
dec
imul
mov
movsl
xor
fistl
sub
sbb
pop
les
and
sub
xor
shrl
inc
pop
or
and
xchg
bound
jns
fbld
pop
insl
xor
dec
pop
imul
icebp
push
dec
xor
pop
stc
andl
or
lock
xchg
cmp
adc
dec
js
cmp
mov
shl
xchg
aad
push
pop
mov
mov
xlat
lret
mov
lret
leave
repz
xor
cmp
inc
xchg
test
mov
mov
sbb
pop
mov
inc
xor
shll
fbstp
dec
int
mov
testl
mov
mov
dec
mov
jbe
int
add
jecxz
mov
loope
aad
mov
call
imul
sub
dec
ret
xor
sub
sub
jecxz
outsb
push
cltd
test
jo
jnp
mov
mov
adc
inc
and
mov
xchg
jle
pop
xor
sub
daa
sbb
xchg
mov
out
and
xorl
lds
call
dec
repz
or
cmc
inc
ret
leave
pusha
out
sti
pop
scas
rcr
mov
nop
mov
sub
mov
adc
add
dec
fisttpll
insl
and
or
movsb
fnstsw
ret
sub
xchg
jmp
call
cwtl
leave
mov
fistl
inc
lcall
in
pop
test
cmc
ss
add
jb
sub
fchs
cmpsl
movsb
dec
push
mov
mov
and
pop
mov
pop
out
mov
jp
xchg
sahf
mov
cltd
insb
pop
popf
xor
and
pop
sbb
lock
outsb
mov
xor
cmp
xchg
pop
mov
push
pop
in
outsl
inc
hlt
sbb
sahf
cmpsb
out
out
xchg
xchg
and
aaa
mov
mov
cmp
mov
lahf
mov
and
test
out
dec
push
jecxz
lcall
jecxz
xchg
movsb
pop
mov
jp
outsb
call
lcall
sti
addr16
and
pop
xchg
xorb
imul
mov
jge
inc
ljmp
xlat
xchg
mov
dec
push
out
repz
test
cltd
mov
pop
popa
out
imul
push
out
loopne
fwait
cwtl
add
dec
icebp
and
push
stos
push
pop
mov
out
add
out
insb
mov
mov
fstl
push
mov
in
out
loop
or
sbb
add
push
jo
cltd
sub
jp
sub
adc
mov
jp
sti
jmp
lret
xlat
add
aad
mov
movsl
fmuls
dec
dec
mov
pop
mov
hlt
bound
ret
mov
pop
xchg
sub
je
mov
push
imul
repnz
dec
cltd
ss
sbb
les
and
mov
cmpsl
add
xor
cmp
add
cli
inc
in
mov
xchg
movsl
pop
mov
aad
xchg
jns
das
xchg
sub
daa
in
loop
movl
dec
sbb
lock
aaa
pop
dec
mov
pop
push
cmp
call
fildll
cwtl
sub
jg
fists
sbb
adc
ja
sub
sub
sbb
add
inc
pop
mov
mov
lret
mov
xor
test
jns
mov
inc
aam
stos
mov
push
and
add
jbe
les
shr
or
pop
add
and
xchg
out
push
lea
iret
or
add
fstps
inc
icebp
xchg
or
lock
xchg
clc
sub
aam
cmp
hlt
push
cwtl
lret
xchg
int
or
adc
data16
loope
mov
repz
cmpsl
jne
cmp
fsubr
pop
push
insb
jbe
js
into
push
dec
cwtl
icebp
fwait
inc
repnz
cs
arpl
dec
sub
jne
xlat
mov
stc
mov
add
dec
gs
ljmp
ss
insb
and
sbb
xchg
mov
out
insl
push
call
je
adc
repnz
cmp
or
inc
push
cmpsl
imul
sub
lahf
mov
popa
fwait
in
add
mov
jnp
sub
nop
out
std
aaa
or
sbb
icebp
dec
jnp
dec
jle
cwtl
out
test
loopne
dec
jmp
icebp
in
je
push
jp
popa
sbb
rcll
aaa
pop
jp
test
xor
das
mov
sub
xchg
test
push
dec
dec
mov
int
add
jmp
pop
fcoms
push
js
jecxz
xor
bnd
in
mov
addr16
mov
outsb
adc
cmp
inc
les
ret
cmp
add
jne
pop
inc
into
stos
std
push
jg
test
jge
cmp
jp
ret
shrb
and
xor
mov
mov
sub
push
jae
fwait
dec
aam
fstpt
xchg
xchg
sbb
pop
inc
xchg
inc
inc
lods
mov
insb
je
add
popa
sub
aam
sub
popa
in
sahf
and
dec
mov
stos
inc
mov
xor
push
mov
adc
cwtl
out
lcall
lahf
cltd
inc
lahf
ds
shrb
inc
and
jne
mov
cmp
dec
mov
cmpsl
imull
inc
jno
jns
add
out
push
adc
push
adc
popa
adc
int3
enter
fs
inc
lcall
das
daa
loopne
les
into
loope
lea
cmp
int3
idivl
mov
addr16
dec
pop
sbb
loop
testl
cmpsl
icebp
inc
pusha
cs
pusha
jbe
test
jno
push
mov
mov
xchg
push
pop
outsl
xor
mov
jae
ret
pop
or
mov
xor
mov
sub
jle
inc
aad
addl
jno
sub
dec
cmpl
sub
mov
lock
cmp
xchg
inc
add
fcoms
mov
or
test
inc
pop
mov
mov
fwait
cmp
and
jl
mov
jl
mov
adc
fisttpl
mov
mov
inc
xor
push
push
dec
mov
or
adc
fdivrs
into
out
adc
or
mov
loopne
xchg
scas
ljmp
push
je
int
mov
pop
pop
pop
and
ds
mov
gs
mov
xchg
adc
jne
aad
fisttpl
xchg
push
or
insb
xor
cmp
mov
sbb
cmp
enter
lds
pop
fmull
mov
push
ret
mov
inc
mov
xor
or
sub
pop
dec
xor
aaa
dec
xor
filds
cmp
stos
adc
in
mov
pop
sbb
test
xor
cli
xchg
std
mov
stc
test
cmp
dec
pop
push
jbe
fstpl
cmp
mov
lahf
arpl
out
xor
jae
test
dec
mov
pop
add
dec
xor
aaa
popf
std
push
mov
inc
cmpsl
loope
push
xlat
inc
into
into
lock
push
adc
mov
xchg
sub
sub
cmp
pop
jp
daa
stos
fcompl
inc
inc
push
sub
out
mov
sbb
mov
fdivrs
test
push
sbbl
mov
lds
addr16
nop
jne
xor
xchg
mov
aam
cmp
push
and
es
jmp
inc
js
loopne
lods
push
sbb
ds
hlt
mov
scas
arpl
push
lock
jae
adc
fnstsw
jne
adc
xor
outsb
loopne
fldcw
das
fwait
insb
lret
sub
and
pop
xor
stos
pop
push
ror
in
lahf
std
js
and
enter
xor
cmc
aas
xor
dec
cltd
inc
aas
xchg
cld
mov
cmp
dec
sbb
pop
ja
aaa
mov
aaa
adc
nop
shrb
sbbl
add
ja
inc
xchg
mov
mov
sbb
int3
int3
and
jne
iret
scas
adc
cli
cmp
pop
in
dec
jae
cwtl
xor
fisubl
xor
test
jecxz
shll
cmpsl
push
fwait
lock
jp
or
mov
mov
scas
std
bnd
add
pop
jnp
pushf
in
sbbl
not
push
rcll
jo
push
add
les
cmpsl
fnop
push
push
into
inc
pop
jbe
push
scas
mov
lahf
icebp
lds
pop
aad
andl
aam
stos
stos
mov
ds
cmp
sbb
mov
ret
lret
mov
fwait
outsl
push
arpl
push
cmc
pop
push
add
push
mov
mov
bound
jge
in
in
outsl
mov
imulb
pop
inc
idiv
repnz
dec
nop
push
cmp
xor
xchg
repnz
movsb
mov
outsb
cmp
jle
xor
sub
add
lods
mov
jg
push
lock
call
mov
lods
fidivrs
sbb
scas
in
or
fistpl
adc
mov
or
aad
std
cmp
clc
rcl
jns
adc
in
xchg
addb
ja
inc
mov
xchg
cli
jp
scas
sub
stc
and
rol
mov
adc
mov
add
and
fistpll
adc
jle
sbb
dec
mov
aas
jo
movsl
inc
jmp
das
push
fldt
xchg
jb
and
jmpw
int
shlb
or
and
notb
lahf
or
dec
mov
and
jns
test
xor
jmp
xchg
sub
jno
add
adc
lock
lock
daa
test
adc
scas
cltd
fiadds
les
xor
jg
lret
adc
adc
inc
xor
dec
fwait
test
mov
das
jle
je
jmp
enter
in
mov
enter
mov
xor
xchg
mov
xchg
popf
clc
je
fnstcw
ja
out
icebp
cld
scas
fisubrl
das
jns
xchg
cmpsb
fwait
lahf
jo
push
add
clc
ja
push
mov
in
mov
out
fldcw
jmp
mov
jbe
dec
imul
inc
mov
dec
mov
test
sub
inc
enter
xchg
inc
mov
mov
out
xchg
jns
dec
push
loopne
mov
mov
enter
sbb
mov
outsb
jnp
addr16
cmp
arpl
cmpl
mov
pop
push
mov
out
push
mov
jg
or
cs
test
jp
mov
push
pop
cmpl
addr16
movb
mov
ficompl
push
movb
lret
mov
shlb
jne
lea
ss
mov
dec
sub
out
cli
mov
or
xor
dec
push
add
pop
sti
mov
mov
movsl
add
fdivrs
sbb
cmc
jne
cmp
push
int
inc
mov
cli
in
cmp
gs
movsl
rol
sbb
adc
enter
addl
add
push
scas
adcl
movsl
into
aad
mov
pusha
xlat
or
xchg
lods
xchg
shlb
add
test
or
push
inc
pusha
xlat
stos
pop
int
pop
fidivrs
insl
hlt
fidivrl
mov
add
imul
add
rolb
jne
popf
or
jbe
push
dec
jae
lahf
sub
lods
daa
pop
cmp
xorb
pop
or
imulb
into
mov
mov
lods
sbb
xchg
mov
and
jge
clc
std
imul
lods
ja
out
jb
xchg
jg
cmp
out
cli
ja
ficoml
cwtl
sbb
stos
in
mov
adc
cmp
data16
sbb
or
loop
cmpsb
std
xchg
js
pop
pushf
scas
in
insl
ss
jl
pop
push
pop
mov
cmp
push
mov
push
push
mov
xchg
dec
in
fwait
mov
subl
mov
and
xchg
mov
xchg
add
sbb
dec
lods
jno
push
arpl
fisttps
lea
pusha
xchg
inc
fincstp
xlat
bound
mov
std
lds
fsubrs
xchg
cmp
inc
pop
imul
in
rcrl
mov
loopne
pop
enter
add
mov
jo
jl
iret
testl
bsr
das
jno
pop
mov
and
adc
inc
xor
push
jle
push
mov
add
mov
cwtl
adc
and
mov
mov
imul
xor
sub
mov
ljmp
cmpsl
jo
jmp
ucomiss
js
pusha
or
popa
sub
jle
fsubs
cmp
daa
cld
cmp
mov
loope
add
mov
push
hlt
scas
aam
aam
push
mov
cmpsb
add
pop
mov
in
adc
xchg
pop
mov
inc
sbb
xchg
mov
ret
inc
mov
mov
inc
sub
stc
imul
mov
lea
pop
inc
popf
cmpsl
pmulhuw
inc
inc
pusha
mov
xchg
inc
in
xchg
leave
out
jo
push
xchg
pop
incl
pop
xchg
xor
mov
pop
bound
movsb
mov
mov
into
rclb
adc
mov
subb
add
and
enter
popa
add
dec
mov
lea
or
and
mov
and
hlt
mov
jmp
pop
inc
and
hlt
add
cmp
sar
loopne
xchg
loopne
pop
xor
in
test
cmp
popf
ds
mov
fldl
mov
popa
mov
mov
jmp
mov
jnp
bound
sbb
xorl
sub
adc
out
lds
popa
test
test
mov
inc
into
inc
adc
adc
lods
pop
fistpll
int3
xchg
es
jbe
add
mov
shrb
jae
cmc
mov
sbb
xor
mov
lock
xchg
adc
sbb
test
sahf
imul
and
rcll
mov
aam
cmp
aam
adc
bound
and
popa
xor
jb
ficomps
xlat
xchg
repz
lods
dec
loop,pn
fwait
push
cmp
mov
xor
push
mov
sub
jg
add
shl
adc
sub
mov
sahf
lds
xor
xor
leave
cmp
out
sub
sub
sub
repnz
mov
js
sahf
push
mov
ficoml
push
je
and
push
sbb
or
rorb
inc
push
cwtl
data16
push
test
bnd
mov
test
ret
pop
and
add
cmp
hlt
push
dec
pop
aas
into
adc
outsl
lret
push
in
xchg
lahf
call
cli
and
lahf
aam
js
or
inc
gs
lds
test
jae
sarb
repnz
cmc
adc
movsb
mov
stos
xlat
xchg
mov
addr16
and
xor
outsb
push
adcb
jbe
adc
cld
mov
loope
lret
pinsrw
push
mov
mov
push
xor
rcrb
out
shr
ror
jno
pop
test
clc
repz
outsb
push
mov
mov
das
stos
sti
notl
nop
or
sub
shr
stc
sbb
idivb
inc
test
popl
and
sub
ds
add
clc
mov
adcl
sub
test
mov
inc
lds
or
sub
out
inc
jmp
addr16
outsl
mov
sub
cmpb
inc
das
inc
adc
das
ret
ret
pusha
and
pop
repz
or
mov
xor
ss
adc
mov
xchg
insb
aad
roll
or
sub
into
jg
adc
push
adc
sahf
pop
cwtl
sbbb
aad
stos
outsb
cmp
sbb
push
add
push
mov
rolb
xor
fidivs
sub
cltd
mov
inc
lahf
ret
in
fmull
cmp
or
sub
cmpsb
add
int
add
push
lcall
in
adc
pushf
mov
pop
pop
jecxz
dec
xorl
jl
mov
lret
jge
add
lret
inc
xorl
dec
sub
rorb
push
and
lcall
or
inc
push
pusha
cmc
imull
adc
pop
inc
xorb
or
test
loopne
out
icebp
cmp
mov
and
imul
ljmp
and
xlat
mov
scas
dec
cmpsb
ficoms
pop
stc
mov
into
std
xchg
xchg
repnz
aaa
fisubrs
les
insb
mov
mov
fmul
aaa
sub
jmp
cmp
test
shll
sti
rcr
sbbb
jl
xor
into
and
jae
sub
movsb
mov
lods
arpl
mov
fs
loopne
rcr
fwait
cwtl
add
stos
pop
mov
iret
inc
sub
ja
jp
push
sbbl
cmp
clc
outsb
push
out
mov
jle
xchg
sub
arpl
inc
les
stos
addr16
aad
enter
into
add
lds
fisubrs
inc
jmp
push
add
negb
cmc
push
jg
xorl
out
and
pop
pop
sbb
out
jecxz
mov
fsubs
mov
call
xor
out
and
xchg
jb
mov
jno
or
fwait
and
loope
cmp
ss
sub
and
arpl
fiadds
pop
lods
inc
popl
xor
outsb
fs
jae
pop
das
dec
adc
orb
rorb
xchg
pop
xchg
out
fcomi
xchg
xor
sub
jg
lods
lahf
rclb
mov
push
or
add
sbb
in
inc
pop
rcrl
or
sbb
out
test
jmp
lea
outsb
cwtl
pop
arpl
cltd
lds
push
int3
mov
loope
lahf
fisubs
shrb
iret
sbb
stos
in
ret
cmc
leave
inc
ja
adc
ficompl
inc
outsb
mov
and
mov
in
xchg
fs
push
orb
push
adc
sub
out
imul
rcrb
dec
bound
xchg
lds
ljmp
mov
xlat
sbb
pop
mov
fwait
dec
dec
and
andl
pop
jnp
addl
in
fs
mov
adc
xor
xchg
or
lahf
test
or
and
bound
fsubr
rol
stos
test
mov
pushf
push
testl
testl
hlt
inc
rorl
das
cmp
xchg
lret
inc
iret
xlat
hlt
or
stc
xor
pop
xchg
sbb
and
mov
out
push
push
mov
inc
testl
mov
cmp
dec
pop
in
leave
outsl
inc
fisubl
aad
in
pusha
enter
add
aaa
xchg
leave
jae
adc
mov
hlt
lea
xchg
dec
push
and
cmp
mov
out
test
outsb
hlt
orl
fistpl
add
call
adc
pushf
mov
mov
andb
mov
iret
xor
scas
or
mov
filds
ljmp
push
mov
and
fnstcw
mov
sub
fs
mov
hlt
jecxz
jp
hlt
test
xchg
mov
arpl
neg
cwtl
jge
xchg
bound
mov
push
out
and
mov
fsubrs
inc
mov
bound
xor
nop
or
pop
adc
push
jmp
int3
xchg
or
adc
movsb
loope
pop
dec
xchg
add
fcomp
xchg
lcall
push
test
in
outsb
cmp
mov
push
push
sbbl
mov
cmp
in
mov
adc
shlb
fisubrl
inc
rolb
js
lahf
clc
sbb
inc
mov
call
pusha
iret
mov
daa
in
lods
or
test
push
mov
push
pushl
dec
je
jg
push
sub
or
sub
jbe
push
test
mov
shlb
jmp
lcall
test
cmc
pop
cmpb
popf
clc
xchg
rcl
das
mov
sub
pop
shrb
lds
cwtl
lods
inc
out
xor
or
stos
data16
rcr
push
sub
sub
mov
lret
sub
in
cmpsb
push
xchg
sub
add
inc
sub
and
or
neg
scas
xchg
mov
cmc
rorb
push
adc
nop
popl
cld
out
cld
addr16
xadd
xor
add
xchg
ror
push
xor
sub
pop
adc
sbb
clc
xchg
fildll
in
sub
sbb
outsb
std
adc
inc
nop
xor
cmp
and
push
dec
mov
imul
sub
addr16
imull
jnp
sbb
mov
cltd
ret
stc
fwait
cmp
ja
movsl
mov
cltd
mov
sub
or
sbb
xor
insb
inc
jmp
bound
push
fmul
jns
mov
mov
pop
loope
push
cmpl
xchg
mov
fwait
loopne
cwtl
movsb
movnti
mov
bound
dec
push
push
xchg
pop
xor
int
jmp
les
scas
jae
sti
cltd
sub
xchg
movsl
mov
xor
xchg
inc
dec
and
push
fmulp
les
push
pop
gs
jecxz
push
adc
xor
sti
and
mov
jbe
icebp
test
dec
or
daa
lock
mov
sub
xchg
jmp
sub
loope
in
mov
outsl
shr
sbb
aaa
xor
push
dec
or
es
fs
ret
jns
mov
sub
xchg
sub
xchg
dec
mov
sub
mov
or
mov
fsubl
jle
inc
pop
scas
lock
fs
mov
mov
cmp
dec
rclb
mov
dec
insl
cmp
insb
cmp
fs
lods
xor
ljmp
dec
push
xchg
xchg
dec
int3
jmp
imul
out
and
mov
jle
xor
inc
cld
or
inc
shrl
cmp
sahf
es
and
push
mov
mov
xchg
rcll
ret
and
aam
pop
daa
or
rcrb
sub
sahf
sbb
and
aaa
outsb
xorl
push
addl
push
sti
roll
cs
push
iret
xor
ja
mov
push
stos
fimuls
rolb
in
popa
testl
arpl
push
scas
ja
pushfw
frstor
cmc
jmp
push
lret
push
mov
mov
js
daa
fwait
bound
and
inc
pusha
stos
adc
loop
and
dec
stos
lea
cld
fdivrl
adc
shll
gs
inc
jg
sbb
mov
es
dec
pop
out
ja
jnp
mov
addl
or
jp
mov
popf
pop
int
scas
lock
inc
pop
dec
scas
insl
mov
push
cli
lret
les
cmp
int
subb
mov
imul
adc
and
and
inc
push
pop
push
lods
push
adc
push
push
xor
mov
pop
lret
xchg
pop
movsl
sbb
clc
add
fimull
fisttpll
sub
mov
jno
jle
das
outsl
je
jmp
jge
dec
arpl
pop
push
cmp
jge
adc
xchg
ds
adc
sti
out
adc
xchg
cmp
inc
push
xchg
leave
push
xor
push
lahf
fldl
dec
push
ret
test
xchg
clc
xchg
pop
mov
mov
movl
inc
cwtl
lds
inc
cmp
mov
out
pop
mov
je
es
fucomp
xchg
lahf
cmc
bound
xor
mov
aaa
add
aad
sahf
and
aad
sub
push
add
xchg
imul
cmp
or
shll
jmp
fildl
addb
xchg
outsb
pushf
add
mov
in
pop
out
push
clc
sub
add
xchg
in
dec
aad
scas
dec
jmp
popa
sbb
popa
andl
pop
xchg
mov
cmp
add
or
sub
testl
inc
adc
inc
ficoms
fwait
fstl
push
xor
mov
fsubr
in
cld
out
fidivrl
fcomps
mov
push
add
js
push
movsb
mov
int3
inc
add
mov
lods
push
adc
cmc
sbb
mov
xchg
das
xchg
les
push
fisubrs
gs
imul
gs
into
rcrb
cmc
push
xorb
or
adc
adc
popf
pushf
imul
fmull
push
xor
mov
mov
push
mov
mov
scas
lret
xchg
xchg
mov
movsb
push
sahf
pop
sub
popa
and
mov
xor
xor
addr16
cwtl
orl
or
adc
scas
std
or
comiss
jg
dec
popa
or
and
inc
inc
push
das
lret
addr16
dec
cmpsb
jns
mov
mov
test
test
jns
cwtl
mov
or
adc
mov
in
pushf
pop
out
dec
dec
gs
mov
and
es
mov
icebp
mov
inc
mov
dec
inc
incb
or
fwait
in
lret
mov
mov
cmp
add
in
cmp
int
hlt
add
jle
out
sbb
imul
jo
repnz
inc
and
push
xor
cmpsb
inc
or
push
fs
push
pop
cmp
sbbl
pop
fwait
jecxz
mov
jns
gs
ret
shlb
insl
ret
hlt
popf
ljmp
cwtl
rcrb
cwtl
and
pop
sbb
ljmp
ds
sbb
cmp
arpl
xchg
leave
iret
dec
pop
data16
lods
pmulhw
push
jg
repz
fiadds
fwait
sbb
or
fisubrl
arpl
std
dec
adc
pop
rorl
lock
fs
fsubs
push
and
iret
hlt
sub
add
jge,pt
pop
sbb
adc
adcl
dec
fneni(8087
ret
cmp
sub
das
lret
daa
jmp
bound
leave
iret
cs
out
push
jecxz
mov
adc
pop
xchg
fisubrl
mov
fsubrs
lea
ja
imul
xchg
xchg
mov
add
inc
jo
pop
js
mov
sub
out
sub
cmp
test
pop
sbb
push
insb
adc
or
xor
and
or
jb
push
cmp
je
inc
shlb
repnz
push
scas
jbe
divl
mov
adc
loope
dec
sbbl
xor
jp
dec
dec
pop
xchg
dec
das
fisubrs
xor
es
das
inc
ja
movsl
and
pop
jnp
push
stos
sarl
push
push
jb
or
mov
mov
aaa
nop
inc
test
push
xchg
in
inc
call
gs
aam
imul
je
mov
dec
push
jo
stos
inc
jo
jecxz
ss
rclb
dec
ja
insb
cmp
fwait
jg
rolb
adc
dec
stc
aad
loope
sbb
push
cwtl
dec
xchg
mov
add
mov
bound
add
pusha
repz
out
pop
andb
pop
mov
and
jle
cld
or
lods
mov
and
xor
mov
cmpsb
and
sbb
push
mov
ja
scas
add
and
gs
cs
mov
insb
cli
lods
push
fdiv
mov
test
pusha
orb
inc
push
lcall
jecxz
mov
mov
adcl
sub
pop
mov
push
loopne
jg
ljmp
out
push
push
scas
push
mov
jnp
fldenv
cmc
popl
inc
pusha
pop
ss
aam
mov
dec
cmpsb
in
dec
xor
enter
adc
lret
push
mov
xor
loopne
fcomps
in
xchg
mov
ret
call
pusha
add
daa
stos
cmp
icebp
xchg
addr16
xor
ss
in
sub
ljmp
adc
xchg
popf
jg
outsl
nop
aad
repz
scas
jle
mov
pop
jle
rcrl
xchg
xchg
pop
xchg
hlt
test
jp
test
mov
aad
pushf
jecxz
add
jmp
push
pop
push
cld
mov
push
mov
in
jge
jno
stos
lock
push
loopne
negl
jp
mov
bound
pop
cli
arpl
fwait
push
pop
aas
js
xor
and
and
mul
js
dec
cmp
mov
rcrl
jecxz
loopne
ds
lods
rol
jbe
mov
jle
mov
lods
inc
insl
lods
stos
xor
aam
sub
call
jo
lds
xor
mov
fistpll
out
xchg
mov
lret
sahf
stc
mov
mov
jno
push
test
adc
imul
mov
test
push
mov
xor
push
shll
lret
rclb
cs
and
cltd
cmp
mov
jns
mov
push
lahf
cmp
mov
push
mov
xchg
inc
pop
add
dec
push
inc
jmp
dec
ja
lock
mov
xor
push
xor
push
or
mov
add
xor
fisttpl
repnz
push
mov
xchg
lcall
and
aaa
cltd
lods
inc
jecxz
rclb
f2xm1
mov
xchg
int
xor
jg
cmp
sub
push
pop
imul
movsb
sub
sub
sbb
and
lods
clc
sbb
inc
mov
mov
dec
ds
inc
jp
pop
mov
mov
sahf
xchg
jno
mov
test
push
jno
js
ja
add
xchg
add
or
xchg
xchg
push
stos
dec
sbb
es
mov
mov
cmpsl
lock
mov
mov
dec
out
test
xchg
cltd
mov
mov
mov
popf
xchg
sbb
mov
sub
push
ljmp
jae
pushf
jb
loope
dec
popf
adc
inc
repz
hlt
pmaddwd
mov
in
pop
lret
cs
mov
inc
mov
inc
dec
fwait
gs
in
and
lsl
adc
test
xchg
pop
and
movswl
js,pt
nop
mov
test
fwait
test
push
ss
adc
xchg
push
aad
xor
mov
stos
popf
dec
test
incb
adc
cmp
push
cmp
nop
sbb
and
mov
cmpsb
outsb
inc
push
mov
or
ret
adc
sub
rolb
mov
into
adc
cmp
nop
jge
sub
xchg
xchg
fcom
xor
xchg
testl
iret
xor
stc
jne
cmc
cmp
enter
imul
addr16
sub
repnz
not
push
outsl
push
loope
dec
and
add
sti
push
xchg
and
adc
adc
push
adc
ja
xor
outsb
adc
and
int
cmp
notb
rcll
mov
cmp
loopne
call
test
int3
test
push
mov
sub
lret
addr16
not
dec
push
lahf
lds
pop
imul
outsl
cmp
jp
jg
lahf
cmp
pop
dec
dec
lea
pop
push
sahf
lret
in
inc
or
add
mov
inc
test
mov
ds
iret
and
js
xchg
xchg
xchg
stos
js
cmpsb
sub
mov
imul
in
and
adc
dec
repnz
in
sbb
rol
mov
fucomip
into
mov
ja
adc
aam
in
and
mov
cmc
cmc
lcall
dec
adc
lea
push
sub
pop
cli
push
jnp
sub
stc
mov
in
jle
adc
jge
outsl
dec
sarl
fbstp
xchg
mov
adc
bound
push
push
fcmove
xor
sub
dec
divb
popa
adc
es
inc
mov
mov
sub
arpl
pushf
or
jmp
loopne
xchg
outsl
cmpl
movb
idivb
jp
or
rcr
dec
cmc
sbbl
mov
push
pop
pop
test
out
shlb
inc
xchg
loope
outsb
lods
xorl
push
stc
test
dec
xchg
call
jns
loop
add
mov
adc
mov
add
scas
mov
cmp
jge
inc
leave
mov
dec
inc
sub
leave
mov
add
call
push
rcrb
mov
out
or
fidivs
mov
mov
xchg
jb
inc
dec
sub
sbb
test
lahf
mov
mov
les
repnz
out
xor
cmp
jge
jmp
and
mov
pop
inc
gs
or
jmp
test
mov
aam
pop
fildl
std
mov
or
xor
mov
and
push
xor
hlt
popw
pop
inc
xor
lret
das
dec
push
jbe
push
in
ja
push
mov
sub
mov
mov
and
jl
les
mov
ljmp
mov
xchg
xor
mov
in
mov
sbb
faddl
xorb
call
mov
ja
mov
pop
dec
push
mov
stos
stos
mov
clc
leave
repnz
add
into
jno
mov
lods
enter
cli
inc
jae
sub
push
outsb
shlb
je
dec
sub
jae
jmp
mov
pop
pop
dec
cmp
xchg
in
xor
jmp
ret
js
mov
adc
cltd
scas
out
and
int
and
add
popa
jmp
jecxz,pt
sub
leave
xchg
cmpsb
hlt
pop
out
in
stc
icebp
aam
mov
call
jle
push
in
push
jb
outsb
adc
push
nop
pop
scas
les
mov
sub
push
sub
pop
test
and
cmp
jne
cltd
int
cli
psrlw
cmp
xchg
sub
push
mov
sub
xchg
cwtl
loopne
mulb
test
push
mov
ror
or
in
rorl
cmp
or
cmp
adc
jle
adc
or
neg
pop
lods
jns
xchg
mov
bound
clc
test
mov
inc
aas
add
mov
ret
mov
jg
lock
aas
lahf
lcall
loop
shrb
jp
arpl
leave
inc
push
enter
cwtl
mov
sbb
xchg
mov
lods
or
fsubrl
fs
test
shlb
jae
out
ficomps
pop
dec
sub
jmp
cwtl
gs
dec
push
cmpsl
addr16
popf
aas
mov
pop
pop
repz
or
jecxz
mov
in
push
idivb
dec
lahf
lcall
loop
fs
fisubs
int
sahf
push
push
dec
sbb
mov
pop
fs
shlb
in
iret
inc
cmp
ss
mov
loopne
inc
hlt
lret
add
push
outsb
pop
mov
mov
and
hlt
sbb
cmp
out
fstl
xchg
sub
push
cmp
adc
mov
fidivl
push
out
insb
rolb
cmp
jnp
ds
iret
inc
sub
mov
out
scas
mov
in
xchg
dec
jmp
push
int3
jae
push
or
mov
jb
and
adc
dec
lret
loope
or
xchg
mov
push
int
das
inc
push
add
aas
and
xchg
push
xchg
and
mov
jb
js
pop
jl
inc
lock
arpl
in
fs
xor
mov
mov
adc
push
or
call
and
add
xor
dec
sbb
lret
jp
mov
ss
push
xchg
xchg
out
sbb
hlt
cmpsb
imul
push
or
shrb
ficompl
lahf
sub
sbb
sub
inc
out
in
pop
jecxz
jle
cmp
add
daa
ja
into
in
xchg
and
jmp
pop
loopne
cli
and
jns
test
nop
lret
mov
sbb
cmp
out
mov
arpl
cmc
mov
mov
inc
and
xor
lret
push
enter
insl
jb
mov
sarb
sbb
jecxz
pop
mov
and
sub
cmp
test
je
popa
inc
test
popa
es
mov
lahf
ret
aad
mov
or
lahf
mov
jecxz
mov
clc
mov
out
sbb
sub
aas
mov
ret
inc
lock
sbb
shlb
das
mov
adc
stos
cmp
inc
mov
jecxz
xlat
fistpl
fwait
mov
xchg
mov
jae
cwtl
push
push
pop
mov
lret
popf
mov
jp
add
adc
and
ss
cwtl
cmp
mov
add
shl
push
enter
cmp
jo
popa
cld
in
inc
xor
xor
dec
xchg
xchg
aad
mov
mov
cmp
jecxz
daa
mov
rclb
dec
and
test
jae
enter
sbb
inc
pop
arpl
push
pop
and
xor
dec
add
out
or
sub
fists
push
int
inc
cmpsl
xor
sbb
int3
sub
push
lahf
pop
pop
inc
cmp
jecxz
mov
sbb
dec
test
add
shrb
mov
iret
movsl
adc
push
imul
mov
inc
inc
jbe
sbb
mov
sbb
rolb
mov
push
xlat
bound
xchg
nop
hlt
mov
xchg
es
jnp
push
xchg
and
daa
cmpsb
lds
lret
mov
adc
xchg
leave
and
jg
leave
dec
jo
or
sti
insb
pop
mov
dec
into
mov
shrb
push
pop
mov
in
mov
mov
jp
out
push
jg
stos
lret
ljmp
scas
mov
push
js
es
iret
stos
mov
or
sti
xor
je
ds
into
je
sub
cmpsb
mov
inc
or
jne
pop
dec
dec
loope
sbb
fsubl
inc
dec
push
jmp
jmp
pusha
push
ljmp
mov
nop
xchg
xor
clc
shrb
int
adc
pop
jns
xor
cmp
in
rcr
xchg
bound
into
add
shrl
jge
cmp
insl
in
jmp
mov
pop
test
jnp
push
test
push
popf
xchg
mov
push
mov
xlat
cld
std
subl
inc
fnstenv
mov
loop
pushf
aaa
and
lret
lds
inc
leave
je
fstpl
push
out
push
push
stos
xchg
and
in
sub
out
dec
or
sub
out
inc
mov
mov
fnsave
jle
repnz
add
js
xchg
imul
fsubl
scas
push
cmp
add
lret
pop
push
and
xchg
sbbb
pop
dec
into
and
add
adcb
jmp
repnz
rcr
sbb
shlb
cwtl
jp,pt
lret
das
mov
cmp
or
push
pop
cmp
sbb
xor
mov
dec
push
jmp
mov
mov
mov
fldl
cmp
lahf
lret
jmp
pop
lock
ja
adc
pop
sbb
mov
ljmp
ret
mov
pop
cs
xor
pop
test
sbb
sub
insb
or
repnz
xchg
sub
repnz
pop
add
roll
jmp
pop
jmp
xchg
rcll
pop
cmpsb
addb
inc
adc
and
mov
js
add
cli
inc
decb
out
add
push
aaa
popf
mov
shlb
das
cmp
or
call
out
xor
mov
leave
jns
sbb
in
ffreep
je
pop
lcall
cmp
xlat
addb
mov
jns
xchg
adc
push
fmul
xchg
xor
repz
out
cmp
jge
pushf
push
jb
addb
roll
mov
es
cwtl
sub
fisttpl
xlat
or
sbb
pop
mov
mov
adc
or
lcall
clc
lcall
stc
jg
or
repz
out
cmp
mov
jo
adcl
sub
mov
mov
adc
outsl
mov
cs
mov
fstp
cmpsb
pop
scas
rorb
add
sbb
leave
sahf
xchg
movsb
and
inc
add
loopne
mov
mov
jp
adc
jo
rcr
in
xchg
inc
sbb
ror
dec
inc
sub
cmp
inc
int
and
cltd
add
push
shl
stos
aad
outsl
sub
dec
jecxz
mov
loop
dec
mov
mov
push
icebp
xlat
xor
dec
jae
cmpsb
aam
loop
in
sbb
jb
mov
mov
cmp
out
ret
add
mov
popf
ja
adc
iret
sahf
add
ret
inc
aaa
dec
push
je
mov
jns
jno
ljmp
mov
dec
mov
cmc
mov
idivb
inc
dec
inc
sbb
fisubrl
and
jg
lret
mov
ljmp
fdivrs
rcl
popf
jmp
lds
add
inc
mov
push
les
adc
fwait
stos
xchg
jl
sub
sti
ds
fs
popa
scas
fwait
dec
scas
mov
dec
jge
ret
add
ss
popl
aam
xchg
andl
mov
mov
pop
test
dec
push
test
mov
or
xchg
push
sub
jmp
icebp
rolb
ja
push
dec
jmp
xchg
scas
cmp
xchg
lret
cmpsb
addr16
icebp
sub
add
mov
push
dec
sbb
roll
push
int3
fistl
lock
sbb
inc
daa
add
mov
xor
jg
sbb
or
fsubp
in
popa
cmc
push
mov
xor
ror
hlt
adcb
jae
sbb
xor
sbb
sub
jbe
mov
sbb
xchg
js
or
stc
cmpl
xchg
mov
fcmovnbe
popa
xor
or
xchg
mov
mov
imul
inc
and
mov
fists
ret
int3
xchg
pop
mov
lock
ret
cmpsl
jge,pn
jle
popf
imul
pop
xor
ret
add
notb
push
bnd
bound
aas
repz
jae
ret
scas
push
cli
xor
inc
hlt
or
dec
fstpl
in
in
repz
and
xor
push
sahf
enter
jl
hlt
inc
sbb
add
jp
movsl
and
mov
or
pop
ja
test
sarb
test
ss
xchg
shlb
out
sahf
push
pop
repz
pop
sub
repz
adcb
and
enter
jno
jg
int
arpl
dec
xchg
push
int
imul
jno
add
xor
repz
stos
fs
push
adc
movsb
loope
mov
insb
add
pop
dec
push
adc
xor
loop
xlat
shrl
int3
gs
into
pop
inc
mov
mov
pop
xchg
add
setne
push
in
mov
insb
and
fisubrs
dec
mov
sarb
ret
aaa
aad
push
gs
xchg
mov
mov
addr16
xchg
gs
sub
rcr
xchg
pop
into
out
jecxz
or
mulb
pop
dec
into
sub
xor
imul
leave
es
cmp
call
or
sub
lds
shll
fsubs
das
jb
or
pop
inc
outsb
mov
movsb
shll
aas
adc
xorb
mov
shrb
adc
pushf
sti
pusha
pop
pusha
jnp
cli
leave
xchg
in
inc
jecxz
pop
dec
cmp
pop
xchg
pop
insl
add
insl
push
inc
in
xorl
mov
popa
loop
and
cmp
adc
jp
and
pop
jbe
pop
sbb
sbb
rcr
nop
sbb
xchg
clc
adc
xor
je
movsb
fiaddl
xor
sbb
in
mov
push
add
push
dec
mov
push
push
call
adcb
fcomip
sub
lcall
in
popa
hlt
push
das
pop
push
jecxz
xchg
popf
cs
aad
inc
fstpt
les
lds
mov
xchg
add
push
xchg
dec
dec
movsl
mov
inc
hlt
push
pop
sti
jnp
roll
sti
jle
cwtl
mov
out
and
mov
push
es
or
pusha
aas
and
cmc
mov
mov
lcall
leave
or
rcrl
cmp
and
sub
pop
test
repz
cmp
scas
cmc
aas
mov
clc
repnz
or
cmp
xchg
test
call
leave
push
syscall
and
sar
mov
jg
in
dec
popf
hlt
push
inc
ret
arpl
jle
lock
or
add
jmp
add
adc
and
int
mov
or
mov
sbb
mov
test
imul
jmp
sbb
rcll
cwtl
mov
pop
clc
cmp
test
sbb
dec
icebp
hlt
mov
add
and
cmp
lret
das
out
adc
xor
insb
push
fdivs
movsb
mov
and
outsb
ret
test
out
xchg
shl
stos
jbe
mov
mov
cmp
out
inc
inc
inc
and
or
jb
jbe
xor
stos
lds
cmpsb
pop
xchg
lods
pushf
add
mov
jmp
insb
cmp
in
fisttps
loope
pop
movsb
add
sub
lock
dec
add
sbb
stos
xor
xor
mov
mov
and
scas
push
pop
cmp
popf
inc
pop
mov
dec
lahf
jns
repz
stos
cmpsb
mov
outsl
cmc
lods
in
sahf
movsl
push
sar
pop
out
aam
bound
xchg
or
rcr
adc
cvttps2pi
sub
cmc
sub
dec
add
loopne
sbb
leave
mov
mov
adc
test
dec
add
iret
mov
pop
sbb
xchg
mov
push
and
jge
lret
or
movsb
das
sub
push
aam
jp
xchg
mov
dec
bound
cmp
aas
jae
sub
call
mov
popa
inc
jg
cmc
mov
outsl
aad
pop
mov
insl
push
and
pop
xor
into
cs
jb
pop
sahf
js
xchg
jbe
hlt
cmpsl
int3
ds
jne
cmpsl
enter
call
mov
push
imul
mov
sbb
rolb
out
cmp
lods
loop
or
or
cmp
mov
fisubs
and
stos
mov
nop
mov
scas
pop
ja
ja
mov
xor
dec
testl
xlat
outsb
mov
mov
fldenv
ret
repnz
dec
mov
sub
pop
mov
cs
int3
push
cwtl
adc
in
pop
fmuls
stos
aad
out
test
cmp
and
into
xor
inc
jle
test
into
out
cmp
mov
fldl
fucom
loopne
cmp
push
into
mov
push
test
inc
or
push
les
or
lret
push
sti
cs
sahf
fidivrs
out
add
fdivrl
sub
repnz
mov
mov
inc
div
mov
inc
mov
and
mov
mov
in
sbb
stos
mov
pop
insb
push
adc
test
jmp
jmp
dec
shrl
fdivs
cwtl
add
mov
pop
in
shl
cmp
shrb
jne
pop
or
or
mov
jmp
or
cmc
shlb
dec
out
in
mov
mov
xchg
sti
inc
dec
jp
jns
adc
aas
jle
out
push
testb
call
je
stos
pop
insb
pop
stos
sub
xor
jle
dec
pop
mov
jns
mov
cmp
xchg
add
jb
pop
lret
cld
or
pop
mov
in
mov
dec
stos
dec
sub
and
xchg
test
cld
push
sub
das
sub
mov
jo
fistpl
xchg
in
push
jno
lea
ss
jp
scas
cmpsl
inc
push
mov
xchg
ds
dec
fdivrl
sbb
cmpsb
lea
sarb
mov
xchg
mov
shrl
fcoms
mov
jo
sbb
loope
icebp
add
jge
and
rolb
lret
imul
das
inc
test
call
jnp
or
adc
and
cmc
fdivrl
pop
mov
inc
mov
jb
aaa
mov
icebp
mov
aaa
jbe
test
sub
jno
adc
jb
mov
push
or
aam
lds
loopne
mov
mov
test
push
mov
ss
jb
xor
mov
ret
mov
sarb
fwait
mov
push
test
adc
xchg
xchg
daa
lock
jb
push
xchg
or
aas
in
push
imul
shrl
test
mov
cltd
push
and
inc
sbb
lock
add
or
je
aas
lret
dec
sbb
cld
xchg
mov
adc
adc
out
push
subl
call
mov
fisttpll
xor
std
sub
or
daa
cs
aaa
js
sbb
shlb
lcall
aaa
jge
sub
push
repz
into
mov
push
arpl
inc
cli
mov
stc
inc
dec
dec
push
xlat
scas
sub
out
std
push
mov
pop
cmpsb
in
cmp
inc
adc
out
lret
test
lods
loopne
cmp
dec
dec
imul
int
subb
push
mull
sub
fldt
sub
sarl
ljmp
add
sbb
sbb
push
dec
cwtl
ss
es
inc
lods
sti
aaa
adc
mov
jno
pop
clc
jno
subb
dec
aas
popa
out
add
nop
cmp
sub
ret
sub
je
fdiv
mov
nop
push
inc
xor
inc
gs
lret
mov
cmp
push
loop
hlt
das
hlt
pop
dec
dec
sub
adc
leave
insb
jmp
in
or
in
fistpll
sbb
push
mov
jbe
cwtl
pop
sub
xchg
imul
les
loope
push
add
cmp
or
pop
jne
sti
jbe
jo
rcll
add
std
push
insl
divb
imul
les
je
mov
lahf
xor
mov
leave
dec
cmpsb
aaa
sub
dec
gs
jmp
test
inc
jae
jbe
or
xor
repz
shrl
add
xor
movb
jg
roll
pop
repnz
pop
push
loop
mov
pop
pop
push
jmp
xlat
sbb
lock
pop
insl
xor
cmpb
jmp
mov
sbb
cmc
inc
sbb
cmpl
dec
add
addr16
outsb
lds
push
mov
cmp
and
mov
aad
sarb
stc
gs
cmp
std
enter
into
in
adc
out
dec
pop
and
lret
imul
imul
repz
xor
ja
dec
int3
repz
cltd
adc
mov
fbld
cmpsl
mov
shrl
or
inc
out
jmp
xor
sahf
add
jnp
insl
mov
cmp
cwtl
cmp
loope
stos
mov
inc
fnsave
cltd
arpl
jbe
vpshaw
out
dec
fcomip
xchg
mov
mov
cmpsb
adc
out
test
cmp
pop
lods
in
push
mov
lahf
and
mov
inc
leave
lcall
push
enter
inc
sbbl
sahf
pop
or
insb
jb
add
test
andl
shl
popf
into
aas
movsb
inc
xchg
cli
out
cld
cmp
int
out
mov
int
gs
stos
jl
mov
daa
rolb
cwtl
jae
rclb
sbb
mov
mov
push
inc
into
daa
and
cmc
mov
ficoms
xchg
fdivrl
sbb
loopne
jnp
movsb
xor
push
sbb
mov
cmp
sub
lcall
push
push
cmp
lahf
call
pop
lcall
mov
mov
psubsb
mov
mov
es
dec
fisubl
dec
xor
rorl
cmp
and
ds
adc
testb
in
fptan
gs
mov
sbb
test
outsb
adcl
out
sbb
push
inc
xchg
jns
add
mov
cmp
sub
cltd
pop
in
sbb
test
sub
pop
arpl
adc
imul
scas
sbb
fmuls
loop
cmpsb
lcall
jmp
cmp
pop
inc
cmpsb
out
add
jmp
lea
outsl
cmc
push
mov
fildl
loope
cmp
jns
rcr
cs
enter
mov
pop
pop
js
jnp
adc
xor
pop
adc
inc
pop
es
ljmp
nop
mov
nop
add
mov
test
sub
inc
je
test
and
mov
repz
iret
cmp
xchg
shlb
jno
test
stc
fistpll
and
les
mov
push
adc
imul
into
loop
xor
mov
aas
jae
mov
dec
mov
add
lret
out
out
cmp
or
rcr
and
subl
lret
movsl
xor
icebp
xchg
jb
ja
repz
sahf
cwtl
xchg
mov
aaa
cmp
and
add
scas
aaa
xor
or
or
pop
xor
push
out
out
testl
cmp
stos
mov
enter
sbb
mov
ds
movsb
sub
dec
pusha
stos
jae
xchg
inc
adc
pop
movsl
gs
adc
push
ss
mov
nop
push
fisttps
pop
loopne
in
dec
cmc
movsl
pushl
rol
jp
jmp
cs
add
mov
gs
push
dec
add
sbb
pop
mov
mov
cwtl
xchg
test
push
pop
aad
push
and
jp
pop
dec
movsb
mov
mov
sub
scas
jne
dec
int3
and
nop
out
insl
xchg
xchg
fnstsw
inc
outsb
sub
mov
mov
jmp
fwait
inc
fwait
xchg
ret
jecxz
imul
data16
shll
test
mov
mov
add
pop
mov
push
mov
hlt
imul
mov
lret
mov
mov
cmpsl
fistpll
pop
xor
in
pop
xchg
jne
cwtl
lret
rolb
jmp
icebp
lea
add
inc
popa
hlt
in
adc
out
rcrl
jae
shlb
jl
das
add
xchg
shll
pop
push
negl
jge
dec
insl
mov
icebp
xlat
xchg
fwait
jg
scas
dec
aas
lea
lret
inc
sub
inc
push
sbbl
dec
sbb
push
jg
push
fnstenv
imull
cmpsl
popf
call
sahf
cmp
dec
mov
scas
xchg
mul
and
gs
pop
xchg
out
fwait
jno
lock
pushl
popf
sub
sub
ja
xor
cmpl
das
add
jns
bound
adc
out
movsl
loop
ret
xchg
mov
cmp
enter
xchg
ja
pop
xor
mov
int3
push
cmp
out
adcb
out
xor
cmp
sub
sub
xchg
or
mov
cwtl
and
in
xchg
or
dec
pop
mov
pop
jo
adc
mov
mov
popf
or
lret
dec
jns
int
movsb
xor
pop
jmp
pop
ljmp
pop
rcrb
pushl
pushf
jb
push
sbb
pop
push
jo
clc
imul
push
xchg
es
xorb
sub
and
inc
and
enter
aad
mov
gs
and
sti
sub
mov
cs
lret
mov
dec
lcall
mov
pushf
fwait
pop
pusha
fdivl
xchg
das
xor
mov
aam
and
jecxz,pt
add
outsb
gs
mov
filds
cmp
ds
sub
pop
stc
pop
pop
xor
xor
push
or
fidivs
int3
xor
sbb
popw
dec
fs
xor
mov
sarb
nop
xchg
stos
sarb
push
xchg
stos
in
lea
daa
push
mov
rcll
stos
mov
cli
inc
lods
cltd
mov
out
insl
cmp
add
inc
ljmp
mov
or
mov
and
mov
add
sub
mov
cmpsb
mov
fisubrl
insl
popa
rorl
outsl
sbb
jns
push
cli
add
nop
call
lds
xor
xor
js
xor
sub
mov
mov
addl
int
fmull
xor
or
pop
lds
inc
out
inc
sub
pop
sbb
jecxz
sub
fnstsw
les
outsb
pop
push
jnp
lcall
mov
ror
jnp
sbb
xlat
pop
in
icebp
js
repnz
and
dec
xlat
lock
movsb
std
mov
cwtl
int
lods
cld
mov
outsb
movzwl
enter
popf
jmp
imul
addl
arpl
adc
xchg
dec
int3
dec
and
jb
mov
mov
or
clc
add
pop
xor
pop
dec
sub
jnp
stos
mov
and
mov
movsb
aas
repnz
cmc
lcall
js
sti
scas
arpl
cli
adc
xchg
out
ret
inc
or
add
loopne
daa
fimuls
mov
ja
jo
cmp
inc
je
mov
jp
jno
lods
inc
fcomps
jno
xor
sbb
xchg
popf
out
xchg
aas
adcl
sti
mov
test
mov
in
push
sbb
xchg
pop
jg
sbbb
ss
dec
lods
loop
inc
dec
or
add
and
and
lods
cmp
js
xor
push
stc
repz
or
sbb
cmp
fiadds
jg
and
jmp
jnp
leave
pop
imul
imul
test
jo
or
imul
out
loope
dec
addr16
add
mov
sbb
movsb
ret
lret
pop
sub
mov
xchg
lret
or
repnz
xor
lods
lahf
fsubrl
call
out
or
xor
pop
mov
in
push
cmc
repz
pop
cmpsl
and
rorl
bound
imul
sbb
xor
arpl
mov
mov
inc
inc
mov
dec
or
out
and
or
out
or
into
jmp
push
aam
fs
adc
testl
popa
push
ljmp
push
rclb
popa
cld
xlat
mov
mov
loop
addb
mov
xlat
hlt
es
mov
jmp
clc
addb
xchg
dec
dec
pop
cmpsb
cmc
or
dec
ja
popa
sbb
push
or
sbb
mov
dec
jp
fsts
fsubrl
cmpsb
sub
jns
imul
mov
ffree
fs
hlt
and
pop
sub
mov
push
lret
or
fwait
rcr
bound
dec
aaa
inc
jmp
cmp
add
jo
and
sbb
xchg
pop
add
adc
ret
mov
cmp
cmp
and
enter
in
ss
mov
leave
jp
pop
sub
loopne
in
mov
scas
jns
mov
xor
lret
bound
inc
inc
mov
xchg
jne
fisubl
pop
jno
mov
push
out
shl
bound
adc
aad
fld
mov
and
mov
push
in
neg
push
mov
aad
aaa
lea
scas
cmp
loopnew
sahf
lret
push
and
cmp
pop
jp
fisttpll
in
inc
outsb
cmp
xchg
subb
test
in
xchg
adc
dec
andl
or
xchg
sbb
inc
subl
loopne
cmp
pop
xchg
mov
fucom
jne
xor
enter
mov
add
dec
dec
fs
pop
stos
adc
daa
rolb
aas
pop
movsb
and
in
pop
fmuls
add
ficoms
mov
hlt
aas
sub
sarl
mov
sbbl
stos
sbb
es
mov
lcall
mov
sbb
jnp,pn
sbbb
mov
pop
pop
add
pop
adc
adc
aas
js
mov
sub
lcall
fchs
jns
sti
lods
out
push
and
cwtl
mov
loope
pop
push
pusha
jmp
cmp
fldcw
inc
je
and
pushf
jle
xchg
nop
or
cmpsl
out
dec
test
sub
out
add
aaa
jge
into
xchg
fdivr
repz
jmp
jl
inc
dec
movsb
sub
movsl
into
push
shll
ror
lods
push
int3
lock
jb
call
shlb
jbe
jl
fldl
push
mov
shll
dec
in
add
mov
sarl
lods
mov
jge
adc
jp
sub
js
aam
push
or
cmp
xchg
push
lock
cmp
femms
leave
repnz
push
imul
bound
test
sub
lret
lret
out
jae
jmp
je
icebp
repnz
lods
pop
dec
inc
dec
in
push
mov
jo
pop
jne
cmpsb
jecxz
pop
scas
mov
pop
outsl
out
cmpsl
rol
cmpsb
and
test
sub
mov
out
mov
ret
adc
dec
push
mov
or
subb
xor
cmp
adc
xlat
sbb
dec
mov
aad
out
ror
lea
and
pop
and
pop
sub
pushl
pop
ret
cld
test
gs
cmpsb
push
pop
and
cmp
iret
insl
or
ljmp
movb
push
lret
xor
inc
loop
dec
dec
test
jmp
mov
negl
adc
cmpb
lahf
xchg
inc
les
leave
movsb
cli
push
into
xrelease
mov
inc
cld
push
ss
popa
pop
arpl
inc
dec
in
sub
pop
je
xor
rcrl
ss
lods
push
adc
sbb
sub
les
jb
in
xchg
dec
add
frstor
rclb
data16
sti
push
inc
pop
lods
or
pop
sbbb
xor
mov
cmp
lds
mov
or
ret
pushl
cmp
jae
popf
push
add
fisubs
jno
or
pop
int3
adc
loopne
sub
or
mov
xor
cmp
ds
mov
push
jno
jbe
out
and
loope
frstor
pop
adcb
cmp
aas
push
bnd
lods
pop
outsl
sbb
scas
movsl
lods
in
adc
xor
or
aad
mov
cmp
ja
lods
lret
lret
popa
es
and
popl
mov
dec
xchg
mov
sbb
mov
aam
add
and
sbb
adc
mov
repnz
inc
lods
jge
push
test
enter
lods
push
mov
lcall
mov
sub
mov
mov
push
push
popf
scas
xchg
mov
sbb
es
cmp
aaa
and
mov
jo
cmp
mov
aaa
sub
clc
push
or
sbb
sar
push
adc
push
lea
mov
pop
stc
push
arpl
sub
cld
pop
test
shrb
mov
sbb
ret
xor
fadd
pop
out
mov
fnstenv
mov
or
add
fildl
pop
enter
in
test
fwait
mov
cmp
sub
jnp
push
pusha
sbb
ret
jae
stc
popa
sub
es
js
mov
xor
pushf
insl
lds
das
push
and
fisubrl
les
pop
pop
pop
push
mov
js
mov
out
lea
ret
ror
jecxz
jbe
subl
ret
lock
and
push
cltd
jns
outsl
inc
jle
jo
push
or
rcll
mov
or
cmp
loope
jne
inc
add
cli
add
or
xlat
push
dec
rclb
test
rolb
jo
xchg
or
or
xor
sbb
mov
adc
mov
push
mov
mov
out
movsl
bound
mov
std
mov
in
jbe
mov
scas
cmc
mov
addr16
fsubs
mov
dec
mov
and
ljmp
in
je
loope
sbb
add
and
lods
lds
push
ss
cs
add
mov
daa
mov
mov
xchg
mov
xchg
mov
inc
inc
in
xchg
lahf
cmp
decb
dec
aam
inc
mov
inc
outsb
insl
out
sub
or
mov
xor
fidivrl
xchg
inc
inc
fists
fwait
int
mov
lock
adc
xor
fs
or
pop
and
ficompl
stc
pop
push
mov
pop
sub
stos
xor
xorb
pusha
jae
mov
cwtl
inc
fcomi
out
fsubrl
jp
int
out
or
bound
cmp
cltd
mov
mov
repz
iret
paddb
pop
mov
or
mov
sbb
sub
test
mov
pusha
xchg
ljmp
xor
jbe
adcb
jl
adc
xorl
cmpsb
push
cmp
sub
lds
or
sub
or
lods
push
aam
push
scas
aas
sub
mov
lods
iret
fwait
or
or
popa
pop
add
or
dec
sbb
mov
stos
inc
push
rcl
jp
or
daa
or
insl
add
xchg
push
jle
sbb
fidivl
in
sub
dec
push
addr16
stos
sub
movsb
fwait
xlat
mov
push
sbb
and
cld
adc
ljmp
movsl
jae
sbb
mov
cwtl
add
pushl
in
outsl
ss
movsb
mov
jns
mov
insb
scas
pop
xor
into
jnp
add
loopne
fimuls
fldt
dec
mov
shlb
xor
push
in
or
sub
das
movsl
adc
dec
inc
call
sbb
test
dec
mov
test
cli
adc
push
ds
fs
or
jecxz
ljmp
mul
fdivs
pushf
cmp
xor
or
add
lock
xchg
jmp
sbb
icebp
and
repz
jge
dec
shrl
mov
mov
repz
jecxz
or
rcrl
cmc
sbb
jge
adc
xchg
imul
mov
push
pop
ret
shll
mov
inc
stos
je
lahf
pop
jl
xchg
subb
xor
stos
xchg
fwait
in
sbb
xchg
xchg
test
pop
cltd
push
jge
xchg
xchg
loopne
int
jle
mov
pop
popa
frstor
fbld
mov
jne
xor
jnp
bnd
jbe
push
cwtl
mov
fisubrl
mov
inc
mov
lods
mov
mov
out
add
mov
mov
cmp
push
xchg
fistl
jp
loope
cmpsb
mov
out
pop
mov
fwait
data16
mov
shl
push
xor
xchg
cli
repnz
jp
xchg
push
mov
xchg
test
iret
repnz
add
in
loope
loopne
sti
mov
jp
mov
jle
fs
js
pmullw
jne
js
push
sbb
dec
lcall
stos
xlat
sub
jle
pcmpgtd
mov
into
xor
gs
add
call
adcl
mov
mov
out
out
adc
push
in
gs
push
mov
or
in
adc
int
cmpsb
movsb
mov
jb
in
cmp
test
fs
xchg
in
in
ror
bound
xchg
mov
mov
cmp
gs
dec
mov
jns
xchg
inc
dec
xchg
jae
jae
mov
test
dec
mov
xlat
in
sbb
popa
inc
inc
push
jnp
cwtl
xlat
lret
push
pop
test
movsb
lahf
in
jmp
es
dec
push
popf
mov
sarb
inc
les
pusha
cltd
xorb
xor
jle
stos
jg
or
das
jmp
sub
cwtl
nop
sub
inc
js
pop
ss
push
pop
ja
jmp
mov
pop
cltd
sarl
jbe
int
mov
loopne
mov
cmpsb
and
jae
mov
cmp
jle
sbb
fidivl
sub
std
cmp
test
lret
mov
out
adc
out
ret
xchg
aad
cmp
aad
fchs
lret
fs
xor
mov
stos
test
in
popl
daa
loope
cld
push
mov
fwait
jge
inc
cmpsb
loop
pop
xor
cs
sarb
sub
ljmp
add
mov
movsl
das
mov
or
movsb
sub
into
aaa
test
add
repnz
mov
or
sbb
cli
push
in
inc
jne
mov
xchg
aaa
adc
pop
cmp
hlt
inc
out
pop
and
mov
or
js
xor
insl
xchg
push
pop
adc
int
or
in
mov
lcall
out
in
lret
cmp
sub
cmp
aas
lods
pushf
sbb
in
push
imul
fnsave
pop
not
mov
addr16
int
popf
cld
lock
sbb
or
test
mov
push
sub
sub
adc
jp
sbb
lods
and
std
add
addr16
loope
mov
inc
mov
imul
pop
mov
jno
jmp
adc
mov
jae
mov
xor
fs
jae
das
inc
divb
test
cs
outsl
adc
push
repz
leave
out
sub
test
dec
xorb
sbb
fcompl
xor
rclb
mov
mov
jno
cmp
dec
sub
add
fimuls
ljmp
shll
jae
or
std
lret
adc
mov
out
nop
xor
dec
rorl
std
inc
test
or
fdivr
in
jnp,pn
and
mov
into
xor
inc
sbb
dec
sub
cmp
cs
loopne
gs
jne
divl
cmp
in
mov
lahf
dec
in
pop
xor
inc
cwtl
push
dec
pop
nop
sub
or
cmpsl
pop
imul
sub
pusha
cmc
out
test
rcr
or
addr16
pop
frstor
xchg
push
dec
and
fldcw
push
jl
pop
les
stos
repnz
add
mov
das
test
xchg
stc
clc
sub
inc
mov
adc
jbe
sar
int3
add
mov
push
leave
jecxz
les
popf
cld
pop
mov
popl
adc
out
lods
std
adc
pop
movsl
cmc
popa
mov
dec
dec
lds
adc
or
xor
insb
lods
cld
das
sbb
imul
fucomp
or
xchg
lret
or
sti
adc
xor
sub
xor
sub
sbb
loopne
or
popf
cmpsb
test
sbbl
inc
and
and
jl
dec
add
pmaddwd
push
les
push
aad
in
xchg
sbb
inc
jmp
lods
or
xor
push
xlat
sub
jbe
add
cld
mov
cmp
sbb
sub
pop
lods
icebp
cmc
arpl
mov
loop
ret
pop
loop
jp
std
int
mov
jp
jmp
add
add
inc
mov
mov
pop
hlt
xor
mov
out
mov
or
aam
add
mov
subl
sbb
add
mov
push
sub
ss
daa
idivl
push
push
int
or
adc
jns
jno
lret
push
and
out
or
push
xor
cwtl
adc
push
dec
popf
bound
loop
clc
cmp
and
xchg
sub
in
push
vpsrlw
ret
popf
jg
mov
inc
aam
add
das
repnz
sbb
das
or
mov
push
lods
cld
and
loopne
mov
sub
test
aad
pushf
or
sbb
lret
ljmp
dec
imul
xor
xor
mov
jbe
aaa
in
push
mov
aam
sbb
push
mov
dec
imul
stos
scas
jo
loopne,pt
jns
dec
mov
je
mov
mov
inc
mov
cmp
movsb
rcr
inc
rolb
gs
iret
imul
movsl
in
fbld
push
pop
adc
or
loope
xchg
call
or
inc
jbe
xor
shll
and
pop
iret
dec
data16
sbb
loop
enter
leave
pop
jnp
mov
scas
dec
daa
stos
mov
fstpt
stos
sub
add
or
adc
insb
les
mov
xor
jo
inc
and
int3
mov
das
cmp
imul
pusha
xchg
dec
rcrl
lret
out
xchg
push
outsl
jmp
stos
sarb
sbb
dec
insb
inc
fldenv
aaa
fimull
push
stos
add
pop
int
out
mov
push
incb
mov
cli
fbstp
pop
or
cmp
push
sub
adc
pop
jns
pushf
adc
out
add
sbb
outsl
lock
xor
lcall
das
test
repnz
lret
dec
mov
mov
xor
clc
or
jl
cld
and
dec
adc
insl
cltd
sar
popw
rep
fmuls
add
fcomps
jo
es
or
sub
cltd
fwait
mov
pop
outsl
insb
sbb
loop
ja
sub
cli
mov
push
adc
adc
pop
adc
lods
ss
frstor
repz
mov
xchg
pusha
push
sub
sub
outsl
mov
fs
xchg
in
clc
inc
aam
iret
pushf
inc
inc
jge
aam
aas
insb
mov
lcall
sub
mov
mov
inc
addl
aad
inc
adc
mov
inc
pushf
xor
inc
ds
inc
dec
sub
pop
jle
mov
inc
lahf
out
xor
loop
dec
ret
stc
add
jae
adc
pop
push
add
pusha
scas
mov
insb
imul
ljmp
es
sub
or
mov
pop
dec
movsl
pop
sub
adc
inc
push
add
xchg
in
inc
pop
movsb
jbe
pop
cmpsb
popa
repz
ss
sbb
loope
idivl
inc
or
mov
nop
cltd
or
pop
mov
or
xchg
js
push
nop
dec
pop
sub
ljmp
sbb
or
push
sysexit
lea
leave
mov
jno
daa
rorb
idivb
lods
movsl
je
mov
sub
mov
pop
fxch
rcrl
push
ret
or
xchg
mov
jae
jl
inc
sahf
adc
cwtl
push
test
add
add
aas
call
stos
or
or
xchg
shl
in
addb
pop
mov
jmp
out
inc
mov
imul
pop
push
xor
out
int
push
scas
imul
mov
cmc
mov
mov
fs
pushf
stos
icebp
add
insb
inc
mov
ss
dec
cmpsb
xchg
pop
es
xlat
hlt
cmp
into
hlt
dec
out
ret
data16
push
addr16
xor
add
ret
adc
fs
mov
push
movsl
cmp
into
pop
adc
pop
push
fidivrs
add
fldcw
pop
loopne
pop
push
daa
or
cltd
pop
push
scas
ja
imul
aam
sahf
cmp
dec
mov
fstps
outsb
leave
mov
cmpsb
cmp
sbb
fbstp
mov
sub
mov
mov
dec
lods
hlt
int3
xor
aad
xchg
loop
sbb
xchg
xlat
pusha
and
and
add
movsb
in
jns
shrb
cmp
lcall
fisubl
stos
and
push
fs
insl
test
push
pop
or
mov
push
addr16
sbb
cmpsl
jg
pop
rcrb
cmpsl
xchg
int
inc
mov
or
lods
frstor
jmp
and
jae
mov
add
rcrl
and
cmp
push
pop
mov
push
gs
insl
or
sub
xor
add
mov
mov
cmp
mov
push
andl
push
add
out
mov
aaa
sub
ja
pop
cmp
push
jl
inc
jg
repnz
adc
aaa
insl
test
test
sub
mov
stos
sub
bound
jne
push
push
rolb
mov
mov
out
test
and
mov
mov
scas
mov
mov
sbb
dec
push
repnz
iret
cmp
lret
xor
add
push
jae
jnp
inc
andb
fwait
inc
leave
out
dec
popf
data16
mov
mull
push
out
cmp
sbb
sbb
inc
dec
and
popf
aas
pop
dec
repz
xor
xor
push
loop
imull
or
pop
movsl
icebp
jne
dec
pop
xchg
mov
cmp
adc
outsb
in
in
sub
mov
inc
hlt
push
ss
lahf
push
jmp
inc
jno
push
cmp
sahf
insl
loope
mov
repnz
cmpsb
repz
outsl
gs
in
jns
lahf
ficomps
cmp
mov
adc
sbb
sbb
sub
mov
in
cmp
sub
out
mov
xchg
mov
scas
push
incl
dec
jg
jae
fisubs
and
jne
lret
ljmp
cld
cwtl
push
lret
int
push
jl
movsl
or
inc
js
shl
pop
cltd
fwait
mov
test
pop
cmp
clc
hlt
fst
or
cmp
popa
imull
sbb
mov
loop
lods
dec
add
pop
js
icebp
es
lods
xchg
mov
dec
mov
clc
sub
push
in
ljmp
dec
sbb
adc
mov
gs
mov
jnp
xchg
fdiv
mov
dec
push
gs
movsb
add
xor
mov
jno
xchg
ss
ljmp
cwtl
lcall
insb
push
fsubs
cmpb
dec
and
popf
in
mov
js
loope
jp
adc
sarb
aad
jp
aad
sarl
movl
ds
cmp
mov
ljmp
inc
js
iret
ljmp
add
adc
test
les
out
cld
in
cld
jmp
icebp
divl
adc
inc
mov
roll
arpl
mov
add
or
loope
in
popa
add
es
mov
adc
xchg
clc
lcall
ljmp
loope
orps
rcll
push
adc
inc
push
stos
addb
test
hlt
mov
in
mov
test
cmpsl
cs
sbb
sub
popf
mov
push
inc
sbb
sti
or
sbb
je
adc
cmp
outsb
leave
filds
int
xchg
mov
pushf
inc
cmpsl
fidivrl
sbb
mov
pop
push
pop
movsl
inc
aam
pop
dec
push
mov
in
aam
scas
adc
pop
dec
mov
jns
sbbb
mov
aas
dec
jo
or
push
mov
ljmp
stos
or
aad
lock
pop
sub
int3
sub
lcall
cld
push
icebp
push
push
dec
mov
cs
adc
movb
pop
nop
push
pop
mov
arpl
mov
insb
xchg
or
subb
xchg
test
call
sbbb
sub
loop
stos
adc
orl
test
or
test
int3
and
aad
sbbb
stc
inc
dec
add
test
lahf
int
pop
dec
notl
mov
fnstsw
insb
push
mov
js
push
int3
pop
testb
xchg
jbe
add
push
int
adc
add
mov
cmp
push
shl
xchg
rcrb
jbe
jmp
mov
movsb
mov
cmp
in
xchg
push
mov
jae
xchg
into
push
adcb
xchg
filds
lret
repnz
fistpl
xchg
xor
xor
je
fsubr
and
xor
fbld
lods
adc
fucomi
insl
ficompl
mov
cmp
or
mov
adc
cld
aam
dec
scas
loopne
pop
pop
fcoml
or
aam
lret
mov
mov
insl
out
add
adc
pushl
push
addr16
lock
jl
dec
push
sub
mov
sar
xchg
mov
cmpsb
mov
popf
imul
cmp
repnz
mov
data16
sbb
sbb
in
jae
test
aam
dec
add
xchg
xchg
std
std
enter
fstl
and
mov
ret
aam
stos
ret
jo
test
sarl
icebp
callw
xchg
xor
cs
gs
pop
push
mov
push
lods
pop
xor
push
cmp
jl
pop
movsb
adc
outsb
aaa
jg
jmp
push
imul
stos
and
das
fimuls
inc
popf
jp
icebp
xchg
push
push
pop
sbb
jmp
mov
movsb
call
test
sbb
mov
or
js
fdivrl
adc
xchg
inc
mov
jo
imul
sbb
std
push
jne
dec
outsl
mov
in
push
leave
pop
test
pushf
pop
outsl
in
inc
in
ror
lods
dec
fdivrl
ja
or
or
jnp
andl
xchg
push
xchg
sub
mov
aaa
cwtl
rclb
inc
inc
in
test
xor
adcl
xor
or
add
sti
loope
jecxz
dec
or
mov
jne
adc
pop
das
pop
mov
xchg
sub
add
xchg
negl
pop
fs
mov
inc
ja
in
repnz
hlt
xorb
push
mov
sub
test
adcl
push
inc
push
xchg
dec
lret
test
adc
mov
mov
in
faddl
and
jmp
fldt
push
loope
loopne
mov
lea
lods
inc
mov
cmp
mov
dec
rorl
jb
lahf
cld
sub
jg
cmp
xor
or
rcll
imul
in
or
outsb
cmp
das
cld
cld
std
mov
sub
and
inc
shlb
xor
jne
iret
shll
out
imul
jns
icebp
fcmovnb
mov
push
mov
sub
out
inc
pusha
mov
aad
ret
xor
sub
push
mov
xchg
jbe
dec
adc
jge
test
xchg
cmc
xchg
and
xchg
cmpsl
and
jnp
lods
add
mov
icebp
shrb
aas
mov
xchg
sub
mov
std
cld
dec
insb
sbb
popa
lds
pop
xchg
sbb
xchg
or
and
inc
fidivs
sub
mov
in
mov
sub
jne
inc
mov
or
mov
fildl
sub
inc
popf
push
cmp
push
cmpsb
stos
cli
fcompl
dec
cmpsb
sti
roll
sbb
cmpsb
popw
inc
test
push
mov
jg
push
js
lds
mov
sub
cmp
cmc
stos
adc
cld
bound
pop
ret
push
jno
inc
out
pop
sub
inc
mov
mov
pop
jl,pt
pop
movsl
xor
jmp
cld
and
xor
wrmsr
xor
dec
leave
aam
xor
or
jecxz
mov
enter
iret
xor
je
in
push
xchg
dec
std
lods
mov
movsl
fnstsw
cltd
dec
inc
sub
adc
push
lcall
insb
lret
lcall
nop
inc
cmp
sti
inc
adc
fadd
mov
dec
and
mov
hlt
jae
mov
add
aad
fs
dec
fwait
adc
push
pop
push
dec
dec
mov
jo
repz
jne
xor
add
xchg
movsb
or
or
pop
add
mov
nop
push
or
xor
scas
mov
mov
jle
lahf
adc
arpl
push
test
or
out
dec
je
aas
divl
inc
jne
pop
jae
dec
hlt
pop
call
mov
repz
xchg
add
or
ljmp
outsl
daa
sbb
sbb
repz
mov
fisttps
jmp
xchg
fisttps
adc
scas
pop
xor
insl
lret
pop
popf
add
fadds
inc
sti
insb
dec
lds
jg
xchg
stos
jnp
imulb
lods
in
mov
push
std
mov
add
sub
cld
sub
or
bnd
sub
push
adc
ss
cmpsl
xchg
fucomip
cmpsl
xor
stc
scas
add
in
sbb
push
mov
push
sbb
stc
xchg
push
pop
inc
jns
add
imul
mov
lock
dec
enter
adc
sti
leave
movsb
jmp
sub
inc
addps
mov
xor
push
fcmovbe
cwtl
ss
fwait
cmp
pop
outsl
daa
repz
lret
out
push
jp
and
lret
mov
mov
stos
mov
push
cmpsb
loopne
popa
or
or
sub
shr
xchg
mov
push
adc
cmp
jge
xlat
clc
inc
push
dec
mov
popa
ret
lcall
ret
ss
push
out
stc
test
jb
scas
add
and
pop
stc
mov
or
adc
cli
or
bound
xor
jecxz
std
mov
in
pop
cmp
pusha
out
imul
int
xchg
shlb
out
out
scas
sub
push
daa
call
adc
sub
and
vmread
mov
call
jl
test
mov
faddl
mov
pop
loop
sbb
xor
ret
fsts
nop
pop
adc
fisttpll
dec
xlat
or
mov
dec
dec
jp
mov
add
cmpsl
xor
xor
fildl
movsb
clc
std
or
ret
jl
cs
pop
js
jae
popf
fmull
js
fadd
pop
add
aad
and
sbb
sbb
adc
daa
sub
in
jo
cli
shlb
jae
pop
mov
hlt
std
mov
xchg
in
xchg
sbb
adc
xor
sub
fcmovnb
rol
mov
addb
mov
loopne
pop
pop
arpl
les
jmp
packsswb
mov
or
dec
andl
xchg
in
mov
es
and
cmp
add
lcall
push
scas
pusha
addr16
inc
ljmp
std
mov
in
jae,pn
mov
int
mov
enter
inc
fmul
or
xor
dec
call
adc
lret
shll
lods
or
pop
adc
mov
and
add
mov
sub
addl
pop
lock
push
and
add
xor
out
dec
les
cmp
cld
push
rcl
xchg
orl
inc
call
lods
cltd
pop
adc
xchg
movsb
add
dec
push
mov
roll
pop
daa
xor
cmpsb
int
sbb
pop
adc
add
rcrb
inc
cs
and
add
push
xor
hlt
fstpt
jle
pusha
and
mov
aas
fnstenv
and
js
xchg
les
mov
inc
lock
adc
push
testb
adc
push
mov
pusha
mov
inc
iret
stos
mov
scas
jns
movsb
sub
lods
outsb
or
pop
ret
out
xchg
adc
push
xor
jns
out
dec
xchg
adc
push
insb
mov
mov
or
xor
je
fdivrl
pop
pop
rolb
or
add
pop
push
jno
insb
sbb
cmc
inc
iret
sbb
cmp
popa
jl
jp
push
dec
pushf
repz
pop
loope
xlat
cmpsl
outsb
push
nop
push
aaa
stos
xchg
jmp
je
sahf
loope
inc
pushf
ja
and
movsl
push
mov
jmp
mov
rclb
push
xor
lods
in
es
ja
xor
loop
icebp
jne
inc
inc
ret
leave
cmpsl
mov
fisttps
daa
js
sub
xor
iret
cmpsb
in
cmp
test
jne
mov
cs
or
cmp
mov
lret
test
loope,pn
out
lahf
stos
cmp
popa
enter
in
adc
inc
pop
ljmp
aam
mov
sbb
jmp
sub
out
out
clc
outsb
and
or
test
in
jecxz
jle
cmp
push
or
mov
ja
jge
add
cmc
cmpsb
push
sbb
push
lock
dec
pop
sub
into
xchg
and
enter
push
pop
decl
jge
inc
test
adc
sbb
mov
inc
loope
insb
mov
fidivrs
cmp
ljmp
add
jo
adc
jnp
or
dec
lds
shrl
jb
out
lea
push
xchg
push
xor
dec
seto
repnz
jnp
scas
outsb
mov
cwtl
cwtl
pop
jle
cmpsb
aaa
adc
mov
fadd
incl
mov
movsb
push
dec
lret
std
subl
popf
jecxz
mov
sbb
jge
sarb
and
jl
test
lea
shrl
add
pop
pop
mull
outsl
jge
call
enter
sub
cmpb
nop
leave
jmp
pop
fsub
movsb
dec
ficoms
inc
sub
mov
or
dec
jmp
pop
popl
or
test
xchg
sbbl
sub
int3
lea
and
rcrl
sbb
fidivl
mov
lods
inc
sahf
push
sahf
pop
rcrb
mov
aaa
addr16
xor
sub
sub
inc
jp
sbb
xchg
sub
adc
fwait
sub
push
clc
ja
pop
scas
out
dec
and
mov
lret
or
mov
push
pop
xorl
dec
loope
cld
xchg
jg
cld
adc
xchg
out
stos
or
or
push
in
xchg
sbb
mov
lds
jnp
xchg
jp
sbb
lea
sub
cmp
pushf
js
xlat
out
out
mov
stos
sub
jmp
dec
jp
add
cmp
mov
add
mov
inc
jg
mov
je
and
mov
and
inc
xor
enter
aas
fiaddl
stc
call
pop
jbe
xor
es
xchg
add
das
test
cmp
pop
std
mov
pop
add
out
mov
xchg
idivb
or
outsb
into
outsb
push
lock
mov
stc
dec
cmc
or
mov
push
mov
dec
jnp
xchg
xchg
pop
xchg
xchg
fwait
sub
out
push
inc
ret
xlat
push
mov
aam
stc
fldcw
jno
xlat
in
ja
push
mov
add
in
lcall
mov
push
test
adc
adc
std
mov
jle
xor
in
test
aaa
sbb
lock
pop
fwait
lret
jo
repz
cmp
in
cmp
inc
out
fs
insl
adc
inc
pop
ljmp
iret
pop
ret
daa
nop
jmp
ljmp
das
pop
sub
dec
aaa
pop
es
and
test
push
movsb
imul
je
xchg
xchg
shl
cld
test
fcompl
bound
mov
ret
pop
jge
xor
adc
andb
icebp
adc
imul
push
sahf
and
mov
sub
nop
in
lods
push
mov
ret
xor
decl
data16
or
int3
nop
fbstp
push
push
add
and
xchg
cmpsb
mov
stos
cwtl
or
jl
push
inc
sbb
fistl
out
mov
and
jbe
icebp
mov
bound
insl
xchg
decb
inc
and
dec
dec
shlb
mov
int
or
mov
mov
adc
adc
fstpl
sahf
jno
mov
mov
jle
mov
popf
or
stos
jle
push
cmp
repz
xchg
push
ror
jnp
adc
loopne
dec
fistl
ss
mov
jmp
mov
and
xchg
das
xor
aaa
into
jns
lcall
cmp
jae
add
faddl
arpl
pop
push
xor
pusha
cmpsl
mov
mov
jae
xchg
call
fnstsw
aas
ds
cmc
or
pop
movsl
inc
lds
sbb
js
lods
jle
mov
jno
push
test
repz
pop
push
jl
mov
jbe
xchg
mov
mov
jecxz
sbb
push
std
lret
andl
jl
gs
repnz
push
jno
pop
jg
fmul
cvtdq2ps
inc
xor
xor
xchg
mov
rcll
pop
xor
jnp
and
cmp
addr16
cmpb
movsl
iret
adc
jge
mov
pop
popa
aas
mov
pop
inc
pop
test
rcll
loop
xchg
cmpsl
push
push
repz
push
lods
cmpsl
lods
mov
add
or
push
aam
jle
aas
mov
repz
jg
negb
xor
je
xor
call
cmp
add
or
adc
cli
test
addr16
push
pop
mov
dec
out
iret
mov
test
adc
push
xchg
pop
xchg
mov
and
inc
test
push
push
jns
das
mov
sbb
in
sbb
daa
pop
in
pop
out
xchg
hlt
insb
push
mov
imul
mov
inc
movsl
addr16
inc
pop
pop
jo
gs
repz
dec
dec
test
ret
sahf
imul
arpl
cwtl
mov
aaa
js
inc
insb
mov
or
lea
nop
into
jp
stc
push
in
push
test
aad
neg
pop
imul
dec
pop
xchg
call
lock
dec
cltd
insl
pop
pop
jp
lods
or
pusha
in
mov
xor
inc
xor
lret
pop
mov
dec
cwtl
cwtl
push
sbb
xchg
or
mov
inc
jle
das
push
in
and
jbe
adc
pop
and
or
push
into
and
in
jnp
cmp
lods
fistl
cmpl
enter
adc
arpl
push
fs
stos
dec
mov
lahf
subb
pop
shr
sbb
jmp
leave
push
or
jno
jl
inc
jmp
dec
je
sub
lods
rorl
lret
lods
pop
popa
dec
cld
pop
pop
xchg
paddb
mov
call
cld
sahf
adc
in
lcall
popa
lock
or
test
pop
sbb
fcoms
lahf
sahf
mov
or
insb
sarl
cmp
jbe
and
and
or
popa
push
xor
ljmp
dec
arpl
cli
cmp
mov
cld
mov
scas
int3
int
decl
pusha
fdivrl
push
enter
push
lret
mov
mov
out
andl
aaa
mov
scas
call
cmp
inc
les
fadds
setne
into
insb
popfw
mov
aam
clc
jp
mov
and
jae
pop
cmp
xchg
mov
int3
push
mov
js
pop
push
out
lret
out
jae
leave
mov
xlat
ret
adc
das
add
jp
dec
sub
out
out
mov
jg
mov
push
stc
test
adc
jmp
cld
mov
lret
cmp
jne
xor
add
cmp
lret
and
or
dec
out
adc
mov
inc
fistpl
sub
cmp
jae
sub
lods
and
dec
es
stos
jno
adc
es
aaa
lahf
mov
pop
cmpsb
or
arpl
sbb
xlat
cmp
shll
ds
xor
inc
and
pushf
inc
adc
pop
adc
fsubrl
and
and
fiadds
cs
add
cmp
in
mov
addl
rcrb
je
mov
ds
imul
lea
popa
or
jecxz
inc
test
pop
ficoml
sbb
movsb
aaa
dec
lock
cmp
out
aas
inc
jp
sbb
hlt
frstor
xchg
push
stos
push
add
mov
cmp
mov
shrb
and
arpl
out
pop
shr
xchg
pop
stos
pop
ljmp
je
sti
jg
movsb
mov
fs
test
mov
fcomps
cwtl
mov
test
fisttps
pushw
mov
jp
pop
jmp
fwait
add
mov
jge
lods
psrlw
out
dec
cmpsl
xchg
jp
sarb
mov
lret
cwtl
and
in
repz
xchg
enter
mov
mov
dec
mov
ds
or
push
sbb
mov
rclb
pop
lock
inc
mov
mov
iret
dec
adc
popa
ss
aad
fwait
pop
push
out
fbld
lea
fmul
adc
dec
cs
dec
outsl
inc
sbb
push
cmpsl
push
pop
pushf
jmp
iret
xor
mov
sub
mov
adc
xor
cmc
push
shll
jae
imul
inc
outsb
add
fidivl
add
inc
adc
jmp
aas
addr16
push
push
sub
repz
add
cmp
out
loopw
or
mov
and
daa
daa
test
jp
sub
add
addr16
out
ja
add
lahf
mov
mov
mov
xchg
dec
bound
inc
popa
dec
or
mov
lods
in
es
push
or
inc
mov
xor
xlat
mov
inc
jns
cld
add
mov
cli
xchg
xor
pop
int3
movd
les
movsl
les
sahf
fstpl
inc
pop
xor
bound
inc
clc
dec
mov
jle
imul
adc
stc
roll
inc
notl
push
stc
test
stos
mov
mov
int3
add
and
sub
pop
loopne
call
lahf
xchg
es
jecxz
imul
out
and
inc
out
jmp
xlat
jo
pushf
loop
inc
mov
mov
mov
fsubs
lcall
pop
xchg
xchg
insb
sub
dec
xor
popf
mov
dec
or
pusha
mov
sbbb
cmp
out
xor
mov
add
sti
repnz
jl
push
jbe
sub
mov
mov
lret
test
nop
pop
lret
std
mov
pop
cmp
shlb
repz
jmp
out
pop
in
loopne
inc
push
icebp
test
jae
xchg
roll
dec
ror
mov
mov
sbb
dec
jo
stos
leave
sbb
and
in
rcr
pop
sbbl
xor
daa
xchg
orl
rolb
lods
xor
aaa
stos
scas
xlat
sub
into
push
inc
test
dec
data16
xor
xchg
jmp
ffree
push
clc
and
mov
jmp
xlat
add
mov
sbbl
in
xchg
sbb
cmp
in
or
popf
cmp
xor
in
mov
cmp
fiaddl
mov
fwait
loopne
fcomp
cmpsl
cmpsl
mov
pop
pop
xor
sahf
je
aad
mov
daa
sarb
in
loop
push
loopne
cmp
rcll
dec
jne
dec
inc
and
hlt
sbb
mov
addr16
jecxz
inc
adc
pop
and
mov
xor
sbb
cmpsl
fstpl
sub
out
fldenv
dec
icebp
es
add
or
loopne
clc
mov
mov
sub
rcrb
stc
push
push
jge
data16
lcall
mov
cs
dec
jo
or
inc
cmpsb
outsl
inc
cmp
call
mov
mov
dec
out
rorb
jbe
test
lods
add
enter
pop
cmp
jne
jge
and
mov
mov
aaa
mov
dec
and
push
mov
int3
in
jns
cmpsl
inc
jae
in
lahf
dec
dec
out
sarb
stos
lds
adc
fnstenv
aaa
fwait
pop
and
dec
push
pop
movsb
mov
outsb
cmp
sahf
lds
dec
jne
mov
rcr
xor
insl
pop
or
sti
add
daa
shll
and
mov
in
loop
jl
loop
repz
lcall
mov
add
adc
repnz
dec
pop
push
add
add
push
add
mov
lcall
push
push
jle
cmp
mov
mov
sbb
push
xor
insl
sbbl
xchg
push
fisubl
ret
shl
test
adc
mov
ja
fimuls
mov
cwtl
filds
out
xor
pop
jnp
loope
sub
fwait
mov
lcall
sbb
adc
stos
mov
adc
adc
mov
fidivl
notl
jle
xchg
clc
aas
inc
sub
cmp
push
fldcw
enter
stc
popa
lahf
push
sub
pop
sbbb
push
cwtl
aaa
pop
or
bound
xchg
clc
and
movsb
stos
loop
fnstenv
nop
xlat
inc
mov
sarb
int3
and
cmp
test
push
out
int
dec
out
psubw
jbe
lcall
ljmp
inc
and
fadds
mov
in
jg
out
pushf
loope
pop
repnz
jmp
test
pop
hlt
outsb
cs
cmc
mov
xor
xor
stc
ljmp
pop
arpl
xor
pop
jb
loopne
push
adc
mov
ja
inc
arpl
mov
xchg
lods
xchg
jmp
stc
movsl
mov
lds
aam
scas
jb
aas
sbb
addl
hlt
add
dec
outsb
jl
xchg
mov
negl
mov
in
sbb
sbb
inc
pop
xchg
orl
sub
mov
enter
cmp
sbb
sub
jg
movd
push
adc
lods
pop
orps
addr16
loopne
ja
loop
sub
adc
rorb
mov
es
mov
cmp
xor
jmp
pop
stc
das
or
cmp
sbb
or
xor
sbbl
push
sub
inc
add
shrl
xchg
and
push
pop
pop
mov
movb
mov
inc
cli
ja
stos
xchg
mov
es
xchg
int
mov
jmp
push
push
jae
or
push
mov
dec
test
xor
mov
xor
cmpsb
sub
nop
adc
fwait
jp
push
push
push
mov
sub
push
ja
stc
xchg
outsl
xchg
call
pop
insb
inc
lods
sbb
fsubp
roll
shl
cld
lods
test
or
cmpsb
or
xlat
pop
dec
adc
out
mov
mov
aam
ss
sarb
xor
pop
and
push
or
cltd
sahf
jl
pop
ds
sub
fbld
hlt
add
fsubrs
ret
sbb
pop
ret
dec
lcall
inc
sahf
scas
cld
into
add
mov
dec
mov
in
and
mov
push
rolb
aas
xor
ja
or
add
sub
fcomi
aas
movb
inc
addr16
les
lods
lahf
push
aam
jbe
ret
iret
inc
jne
cltd
out
insb
xchg
mov
jo
gs
dec
or
imul
stos
xor
popa
inc
cld
mov
pop
aam
addl
sbb
add
lea
lock
mov
jecxz
mov
mov
push
mov
inc
dec
outsb
and
sbb
adc
cmc
das
ja
rcll
or
mov
arpl
xchg
pusha
sbb
sbb
jecxz
xchg
adc
mov
mov
out
mov
or
cmpl
push
jb
xchg
xor
mov
outsl
or
cli
cld
adc
daa
sub
cmp
push
jb
jge
push
dec
std
xor
movsb
addb
pusha
push
xchg
mov
rcrl
addr16
cwtl
jle
nop
and
cmpsl
clc
test
inc
push
stc
aaa
cmp
xor
or
sub
fxch
nop
xchg
pop
mov
ljmp
and
jg
repz
into
add
and
fnstenv
repnz
push
adc
rorl
sbb
frstor
sub
xchg
jne
xor
dec
enter
lock
test
or
jecxz
sbb
lock
cmp
pop
imul
imul
cmp
mov
aaa
or
lea
sahf
inc
pop
and
aad
xchg
sbb
repz
push
sub
add
mov
mov
push
into
mov
xchg
in
out
mov
push
call
mov
add
mov
xchg
mov
dec
dec
iret
add
scas
mov
push
jg
dec
cmp
mov
push
inc
mov
fstpt
fisttpll
cmc
popa
push
insl
rcl
push
iret
rcrb
hlt
cmp
mov
imul
enter
jg
add
pop
mov
jnp
out
pop
insl
inc
jno
jg
cltd
mov
aam
aaa
mov
push
in
push
aam
rcrb
int
mov
mov
jo
fwait
add
adc
adc
or
xchg
test
pop
sbb
imul
test
inc
stos
fdiv
mov
or
enter
fildl
mov
cmp
mov
shrb
cmpsl
mov
or
adc
cltd
and
pop
xor
movsb
fidivrs
cs
xchg
cwtl
pusha
xchg
add
xchg
push
push
sub
jmp
call
jmp
sbb
push
call
dec
mov
and
push
push
sub
add
xchg
scas
cld
mov
les
out
sbb
cld
aas
fwait
dec
xchg
jns
xchg
push
mov
sbb
lcall
dec
and
jge
lods
sub
stc
cmp
lret
adc
add
adc
pop
mov
gs
xchg
add
adc
push
push
loope
push
lahf
stos
stc
xchg
loopne
adc
loopne
pusha
xchg
jbe
imul
mov
insb
adc
sub
call
push
jecxz
xchg
es
push
jne
negl
jb
jbe
adc
inc
and
shll
mov
lret
movsl
cmp
rcll
dec
pop
xor
push
pop
pop
and
test
jns
pushf
lods
push
jae
inc
cwtl
movsl
popa
fidivs
daa
or
dec
ss
add
xchg
sub
inc
mov
mov
pop
je
sub
rcr
les
repz
lret
outsb
addl
lahf
mov
adc
popa
fildl
aas
lock
adc
aaa
cmp
rolb
cmp
push
cmpsl
xor
jbe
icebp
test
in
cmpsb
fs
push
mov
cmp
jecxz
lods
in
addr16
mov
pop
std
xchg
ss
jb
ja
sbb
push
es
dec
xor
sub
stc
lock
arpl
loop
mov
outsl
loop
add
loop
add
outsb
dec
push
push
bnd
dec
and
push
mov
cmp
and
mov
jl
mov
subb
sub
mov
add
aaa
fistpl
push
dec
dec
and
dec
cltd
xor
inc
cmp
sbbl
loopne
sub
and
das
mov
xchg
fiadds
daa
aaa
push
std
in
inc
std
ljmp
sbbb
adc
mov
adc
adc
xor
cmp
lds
push
imul
jae
jno
xor
mov
add
jbe
or
clc
sub
jg
scas
sub
sarl
cs
or
imul
mov
mov
leave
out
movsb
out
push
push
shr
popf
gs
lods
xchg
insl
add
mov
shlb
mov
mov
rorl
imul
aas
lret
gs
push
fcoms
inc
adcl
sub
dec
inc
dec
dec
out
pop
sbb
scas
dec
mov
mov
faddp
call
sub
dec
jbe
jne
sbb
ss
mov
cs
insb
xchg
fxch
mov
jle
pusha
cmp
sbb
mov
xchg
rorl
pusha
push
cli
or
and
jnp
iret
jns
ja
add
jecxz
cltd
lcall
jecxz
push
in
movsb
les
xor
popa
jp
jne
lods
and
int3
mov
adc
mov
mov
pop
pop
shr
inc
dec
test
bnd
xchg
xor
sbb
push
jbe
xchg
dec
mov
lcall
addr16
jl
shl
push
vunpckhps
jg
jbe
xchg
ds
nop
push
out
nop
out
adc
mov
jns
xchg
fnsave
inc
mov
inc
je
stc
and
and
push
jnp
cmp
jne
gs
inc
mov
cmpsl
imul
ss
xchg
dec
mov
push
scas
or
stc
or
mov
test
lret
jle
jbe
mov
cmpsl
test
push
xrelease
or
into
dec
call
xor
mov
add
mov
xchg
sub
cmp
arpl
inc
lret
push
mov
xchg
push
sti
pop
xchg
jne
call
push
sahf
lcall
xor
out
or
adc
insb
jnp
scas
fnsave
mov
loop
xchg
inc
sub
call
sahf
pop
iret
fdiv
jno
jmp
lods
pop
dec
daa
aam
out
ret
mov
mov
pop
xchg
negb
iret
cmp
inc
jecxz
out
mov
push
inc
call
arpl
repnz
add
mov
or
jmp
inc
into
icebp
push
lods
ljmp
sbb
inc
lcall
inc
fildl
jne
aaa
popa
and
push
imul
pushf
xchg
rcrb
mov
adc
dec
xor
int3
cmp
iret
jle
setle
inc
shlb
jae
pop
lods
pop
aad
rcl
rcrb
lret
iret
lcall
mov
xchg
test
sbbl
lret
cmp
pop
or
xor
dec
fsubl
in
xor
ss
pop
adc
insl
push
jge
pop
xor
inc
sub
xor
dec
pop
out
cmp
push
imul
arpl
xlat
pop
sbb
push
xchg
fdivl
cli
or
mov
arpl
xchg
arpl
test
pop
es
jmp
push
push
mov
lret
sub
pop
xor
pushl
mov
xchg
inc
mov
sub
aad
pushf
pop
ja
fdivrl
ss
cli
mov
cmovg
test
sbb
bound
popf
arpl
movsl
lahf
aam
add
dec
rorb
shrb
mov
ret
std
cmp
data16
dec
ret
mov
or
xchg
pop
fists
outsb
cmp
inc
push
mov
stos
mov
clc
int
popa
ds
pop
out
cli
xor
jb
sbb
in
fsubrs
jns
leave
call
add
xchg
mov
lds
out
add
jns
inc
imul
cmp
aam
inc
mov
ja
xchg
mov
aas
push
pop
scas
fcmovu
pop
outsl
inc
push
jge
adc
leave
rcrl
nop
leave
fwait
push
and
add
sbbl
dec
jns
ret
mov
pushf
jne
shr
insb
lahf
mov
fdivrs
outsl
pop
in
inc
repz
mov
pop
sub
inc
add
dec
push
push
movsl
or
js
aam
adc
adc
pop
xchg
lock
lods
jg
popa
mov
mov
ret
add
mov
out
mov
iret
in
xchg
cmp
and
in
idivl
sti
mov
popa
mov
jbe
pop
outsb
jmp
std
sbb
pop
ds
lret
lcall
mov
les
enter
lods
fs
mulb
mov
mov
dec
dec
push
dec
mov
jne
mov
inc
sbb
cmp
mov
xchg
loopne
inc
jns,pn
sub
lret
adc
cld
outsl
or
sub
and
pop
xor
fdivl
push
in
shll
pop
lock
sub
mov
ret
xlat
fmul
in
and
sub
inc
test
into
es
insb
ret
in
enter
adc
insl
cmpsl
mov
mov
or
push
notb
pop
push
push
cli
das
lods
jp
movsb
mov
xchg
pusha
and
movsb
add
jb
or
rcrl
xchg
sbb
push
dec
add
lahf
ss
std
xchg
dec
mov
pushf
sub
int
mov
mov
inc
and
jae
cmpsl
add
sbb
sub
aad
jno
xlat
xor
adc
dec
int3
test
jl
mov
notl
add
out
add
or
pop
inc
aam
sti
out
sbb
mov
fwait
rcr
lret
jge
jne
xchg
inc
test
jae
fnsave
out
adc
pop
push
mov
pop
std
sub
mov
movsl
scas
pushf
popf
sub
adc
push
ret
and
sbb
adc
cmp
js
adc
cmp
leave
or
lock
push
xchg
push
inc
lock
adc
lock
pusha
fisttps
pop
dec
shlb
mov
mov
test
out
jge
sub
sbb
jbe
call
jo
jmp
in
mov
repnz
dec
sbb
pop
dec
fidivrs
cmp
shlb
lret
jo
int
push
test
aad
pushf
inc
push
fsubrp
sar
cli
and
add
sbb
in
fcoms
and
push
ds
mov
jmp
or
cmp
sub
mov
movsb
das
xor
and
adc
scas
arpl
pop
adcb
jb
fisubs
sub
mov
int3
pop
push
aas
jne
outsb
add
fwait
mov
into
rorb
sti
scas
arpl
add
fucomi
fmull
add
dec
mov
jb
outsb
and
stc
sti
mov
adc
jmp
dec
jns
push
ret
mov
xor
cmp
mov
mov
lcall
add
scas
fsts
sbb
cli
movsb
inc
scas
mov
and
jmp
push
loope
scas
cwtl
popa
add
les
add
in
dec
lsl
mov
push
ja
fsubl
inc
sub
or
fistpl
movsb
push
push
mov
mov
mov
and
mov
dec
inc
popa
popa
sub
cmpsl
mov
mov
jnp
call
inc
xor
popa
fidivrl
add
inc
push
or
inc
push
inc
sbb
or
daa
sub
and
sub
lahf
mov
mov
in
stos
or
arpl
inc
popa
aam
jge
cli
mov
test
sbb
pop
cld
mov
xor
mov
outsb
sarl
cwtl
jne
clc
in
sbbb
repnz
loopne
and
sarl
int3
jb
stc
cli
mov
fnsave
mov
push
jle
mov
xchg
pushf
out
add
jae
push
shll
js
dec
dec
and
insb
or
rcll
fists
cmc
ret
call
daa
ljmp
xor
ds
int3
lret
inc
sub
add
filds
sub
push
insl
sbb
leave
xchg
push
pop
jbe
test
inc
hlt
cwtl
ja
aam
sbb
in
pop
in
leave
cmp
pushf
mov
mov
outsl
sahf
mov
les
or
cmpsl
xchg
cmp
pop
mov
xlat
xchg
mov
mov
repz
icebp
pop
lea
mov
adc
stos
stos
and
xchg
push
in
push
adc
setae
xchg
sub
push
xor
cltd
and
xor
cmp
das
xchg
rclb
out
test
rcrl
pop
shll
mov
sbb
mov
outsb
dec
mov
and
call
inc
lcall
aas
mov
mov
push
inc
test
add
out
jmp
sbb
mov
or
out
mov
push
and
cmp
pop
loop
je
test
les
push
cltd
pushf
xchg
ret
xlat
lds
jno
and
jl
xor
aam
mov
lods
outsb
testb
jl
repz
das
lret
and
xchg
mov
jmp
mov
pop
jg
mov
mov
fwait
enter
sub
mov
xchg
xchg
mov
bound
add
inc
mov
pop
xorb
ljmp
jl
icebp
repz
cmp
loopne
mov
cmp
adcl
shl
scas
push
mov
or
nop
add
les
fstps
adc
cmp
call
cmp
add
sbb
push
cmp
xchg
push
jbe
outsb
jmp
std
adc
lret
shlb
pop
imul
adc
mov
ret
fcompl
jo
jbe
lcall
xor
add
lea
cmp
int
loop
mov
in
mov
addb
inc
push
fs
push
es
push
lods
xor
xchg
lret
out
rcrb
sub
cmp
pop
cmp
pusha
fdivrs
or
push
push
mov
mov
mov
xor
loope
xor
outsb
add
es
push
cltd
stos
dec
rcr
repnz
push
push
dec
jmp
dec
cvtdq2ps
sub
sbb
loop
pushf
add
push
mov
add
sbb
xchg
mov
outsb
xchg
shl
aaa
jp
fs
sub
and
and
jo
sbb
ss
xor
jae
jp
push
adc
pushf
imul
adc
aad
stos
cmpsl
in
out
std
push
insl
fsubrp
pop
pop
sub
test
cmp
daa
std
inc
sub
sub
daa
mov
clc
fdivs
mov
cmpsb
dec
fsubrs
jg
push
icebp
add
mov
mov
lret
push
mov
in
rcrb
inc
mov
xchg
test
daa
xchg
inc
mov
mov
pop
mov
xchg
and
les
lods
and
scas
insb
cmpl
pop
jae
pop
jae
fisttps
jnp
in
xchg
mov
gs
cmp
stos
inc
icebp
xor
jne
jnp
int
sbb
pop
adc
js
js
push
leave
push
dec
mov
int3
jo
ret
repz
jecxz
push
addl
jne
imul
sbb
inc
fwait
or
pushf
mov
push
popf
jl
and
dec
push
mov
pop
repz
sbb
std
out
into
es
jae
mov
sub
je
in
inc
and
jge
shll
test
dec
xor
arpl
jae
sbbb
stos
jb
icebp
mov
cld
std
stc
pop
insl
test
addr16
jg
shrl
or
push
add
fisubrl
mov
jmp
adc
cli
fists
mov
pusha
mov
pop
add
xor
mov
out
jg
lods
rcrl
leave
pop
push
mov
fs
inc
cmp
xor
mov
or
test
testl
cli
fwait
leave
aas
test
pusha
mov
pop
push
fidivs
and
sbb
pusha
inc
jmp
jl
popf
enter
cmp
sub
sbb
cld
push
aad
sub
in
repnz
frstpm(287
push
in
stos
lods
sarb
lret
mov
mov
push
movsl
ss
sub
out
lret
jl
lods
add
lcall
out
mov
add
sbb
shll
cs
xchg
sub
sbb
fcmovnb
outsb
scas
fdivl
xor
test
mov
rcrb
ja
cmp
cmpsb
sbb
rcrl
movsl
adc
jae
jp
push
dec
leave
push
out
sbb
fistps
push
mov
popf
cmp
xor
and
push
add
dec
insl
ss
xchg
fcmovne
ret
add
dec
dec
add
cmp
fadd
jmp
push
xchg
outsl
andl
and
sbb
mov
mov
call
mov
mov
sbb
in
push
cmp
idivl
sub
fwait
jb
jb
and
cld
hlt
mov
xor
pop
jae
sahf
mov
inc
xchg
jl
xchg
or
xor
adc
mov
cmp
scas
or
adc
jg
sub
scas
push
push
push
mov
mov
or
inc
add
cltd
iret
sbb
test
mov
ffree
xor
xor
mov
mov
pop
sub
aad
movsb
cmp
into
and
mov
adc
mov
scas
xor
shlb
cmovnp
addr16
cmp
loopne
lcall
pop
jnp
adc
mov
xchg
jbe
call
fidivrl
scas
pop
imul
inc
cmp
xchg
xchg
xchg
mov
mov
and
inc
or
icebp
jg
addr16
call
stc
mov
xchg
movsb
ret
movsb
mov
pop
adc
jl
movsb
aas
movsb
addl
imul
rcll
xchg
out
arpl
push
sub
out
mov
addb
repz
jns
sbb
push
xchg
mov
int
repz
sub
les
in
shll
and
adc
imul
aad
gs
lahf
xchg
dec
or
jecxz
xor
std
and
lods
inc
dec
mov
mov
xchg
lods
push
shrl
add
icebp
outsl
inc
add
out
sahf
clc
fmul
dec
sub
enter
test
aas
and
add
lods
jbe
dec
ljmp
and
xor
add
mov
push
lea
mov
sahf
fnstcw
mov
dec
sbb
arpl
mov
cmpsb
test
in
add
out
push
test
lds
mov
sub
cmp
sbb
nop
imul
sub
xchg
pop
jg
xchg
dec
inc
lock
cmpsb
cmp
mov
andb
test
dec
jae
imul
adc
or
dec
scas
pop
or
xchg
cmp
inc
push
into
lods
and
cmp
popf
sbbb
mov
lods
lock
addr16
fnstenv
enter
mov
mov
shlb
dec
jns
loopne
fcomps
lods
and
ljmp
and
xor
lds
out
pop
mov
push
lcall
fdivrl
xchg
mov
test
aad
mov
nop
inc
cmpsl
mov
pop
stos
sub
ret
mov
sbb
enter
out
in
popa
loopne
shr
in
xor
loop
jecxz
pop
jb
cmp
mov
push
push
push
xchg
add
insb
shlb
inc
fisttps
add
push
jb
mov
fbstp
andl
sbb
ljmp
ja
test
inc
and
out
test
xor
lahf
sti
cld
outsl
das
jge
stc
mov
cwtl
in
outsb
shr
cltd
inc
mov
sub
sbb
pop
xor
jno
inc
mov
in
mov
add
xlat
cwtl
fwait
lds
mov
xor
repnz
inc
fidivrl
fwait
pop
in
fsubl
jmp
dec
dec
nop
push
or
mov
out
mov
sbb
lods
push
push
jbe
lcall
xor
in
inc
cmpsb
mov
cmp
dec
das
jge
cmc
ja
incb
mov
push
adc
outsb
shl
pushf
ret
out
adc
inc
adc
or
cltd
lds
aad
adc
xor
xchg
sbb
int
imul
das
mov
sbb
outsl
int
neg
ds
pop
add
or
jno
dec
rcrb
jb
cmp
xchg
mov
inc
stos
push
xchg
or
mov
add
mov
rclb
and
scas
cwtl
mov
int3
repz
cs
leave
xor
aam
jmp
mov
cmp
sti
pop
shl
inc
adc
sti
cld
lock
call
adc
jge
cld
rcr
insl
mov
xchg
out
cmp
add
and
ja
add
ljmp
pop
mov
push
mov
les
cmovne
adc
addr16
dec
repz
les
inc
dec
push
aam
into
add
push
or
xchg
pop
in
pop
add
testl
mov
lret
mov
and
ljmp
push
es
jae
decl
scas
mov
in
xchg
jae
mov
mov
jne
sbb
retw
rolb
xchg
dec
mov
fimull
push
pop
push
dec
rclb
or
leave
and
cld
cmp
inc
and
fldt
add
cmpsb
or
push
addl
out
clc
and
jl
leave
jmp
iret
js
and
mov
popa
cmpb
outsb
jecxz
pop
je
inc
push
mov
in
xchg
mov
jl
jne
or
mov
test
mov
inc
mov
adc
test
fsub
or
out
dec
push
outsl
pop
clc
in
jmp
add
leave
hlt
push
add
mov
xchg
cmpsl
sbb
xchg
clc
sbb
mov
test
aad
ljmp
lahf
push
cltd
mov
adc
mov
lea
iret
test
cli
sub
add
push
cmp
pop
insl
mov
push
nop
jge
sbb
sbb
xchg
inc
scas
mov
stc
sbb
mov
test
mov
xlat
push
adc
inc
mov
xor
aam
push
pop
iret
mov
xchg
cltd
sbb
jne
sbb
cmpsb
ret
inc
rorb
and
lock
mov
mov
pop
movswl
idivl
mov
dec
jle
loopne
nop
xchg
es
outsb
repnz
mov
popf
sub
imul
dec
notl
pop
jbe
lods
shlb
sbb
ja
jge
sbb
xchg
outsb
mov
sub
cmp
sub
and
or
jb
mov
out
or
push
mov
mov
es
or
pop
adc
mov
push
sub
mov
mov
loopne
divl
sbb
mov
mov
sub
adc
bound
fwait
xchg
xor
mov
jmp
xchg
sbb
cmp
and
iret
jge
repnz
enter
call
mov
dec
pop
xlat
xchg
inc
sbb
les
lahf
loop
aas
xor
rcrl
nop
jle
push
jmp
leave
and
lds
add
fildl
sub
mov
sahf
movsb
dec
lock
test
outsl
popf
js
lods
dec
jecxz
divb
cmpsl
lahf
mov
hlt
inc
sbb
lcall
lret
test
cmc
push
push
xor
lret
insb
sbb
enter
lret
jnp
cmp
add
js
test
or
dec
loope
jp
xchg
cmpsl
testb
in
pop
mov
in
lods
ret
adc
jne
and
xor
or
push
jmp
xchg
jb
arpl
mov
push
daa
stos
pop
jp
xchg
cmpl
sub
sub
xchg
mov
mov
jo
dec
and
icebp
jl
cmp
or
mov
ret
in
inc
adc
push
in
cmp
inc
add
sarl
dec
sbb
mov
mov
orl
adc
mov
or
jae
dec
pop
pop
lock
mov
mov
inc
cmp
mov
mov
iret
test
pop
mov
fstl
sti
sub
je
imul
pop
sbb
rolb
fidivl
rcl
sub
pop
sahf
insl
pop
lock
xor
pop
popf
stos
inc
pop
cmp
gs
sbb
push
shl
or
xlat
icebp
cwtl
inc
mov
lea
push
jl
outsl
xor
add
div
xchg
loopne
mov
xchg
loop
cmpsb
arpl
push
pop
adc
gs
add
push
fisttps
mov
jns
test
cmc
sub
cmp
mov
lods
inc
fiaddl
ljmp
jmp
lds
int3
lcall
aas
sarl
and
mov
adc
or
jns
arpl
push
shlb
inc
jecxz
sub
xchg
xor
sub
arpl
scas
repz
jge
mov
xor
ss
inc
ficompl
addr16
cltd
insb
cmpsb
scas
dec
adc
push
shll
ss
test
mov
mov
test
sub
addl
lahf
jbe
jbe
inc
or
add
lods
push
pop
pop
aad
fisttps
stc
or
mov
pop
mov
jbe
dec
pop
add
inc
adc
test
xor
add
loope
or
cltd
test
pop
jns
test
pop
push
add
iret
sub
mov
adc
pop
pop
mov
in
stos
push
in
sub
in
out
ljmp
mov
movsb
add
pop
imulb
lods
mov
mov
adc
cmpsb
sti
mov
jnp
mov
cmp
sbbl
fidivl
and
int3
cltd
ja
ret
push
iret
testl
mov
ds
cmp
jne
mov
sub
cmp
pusha
xchg
add
imul
movsb
dec
lds
jl
cmpsl
cs
add
icebp
mov
xor
push
and
in
in
cld
mov
loopne
imul
inc
stos
cmc
add
mov
xor
xchg
push
mov
stos
pop
jno
addr16
pop
jne
andnps
enter
test
test
pop
lods
cmp
mov
or
call
movsl
mov
in
inc
fidivs
lds
sbb
and
test
fwait
in
cmpsl
xor
mov
shll
xor
icebp
icebp
mov
pop
mov
imul
cmp
mov
push
stc
aas
imul
push
stc
push
push
cli
in
pop
and
cmpsb
inc
rcr
ficomps
or
adcb
pop
mov
sbb
xchg
iret
jle
andb
js
ret
outsl
lea
sbb
push
in
bound
fldenv
lods
pop
sbb
cmpsl
or
cmpb
aas
cmp
stc
aas
jns
sbb
dec
imul
stos
lods
pop
mov
mov
or
push
adc
push
int
xor
fwait
shlb
jbe
mov
daa
lret
jle
idivl
jnp
insl
mov
mov
mov
sahf
pop
mov
jmp
push
out
mov
sbb
mov
mov
mov
je
xchg
mov
sub
or
mov
rorb
sub
mov
mov
dec
xchg
xor
mov
dec
jno
pop
call
mov
xchg
idivb
jp
or
cmpb
or
pop
xchg
pop
mov
xchg
cli
adc
sarb
sub
mov
mov
pop
lcall
jns
imul
dec
repnz
ja
pop
jmp
subb
jge
mov
inc
inc
xlat
std
sub
mov
pop
aas
pop
jle
data16
or
pop
mov
sbb
jle
aaa
or
loope
mov
sbb
ss
push
cmc
xchg
cmp
movsl
popf
out
ja
pop
push
mov
nop
imul
xchg
add
sbb
adc
insl
push
hlt
js
add
es
xchg
aam
dec
faddl
mov
xor
insb
push
repnz
lcall
mov
cmp
push
push
xchg
mov
adc
pop
or
adc
call
xor
lcall
fildll
std
mov
dec
push
or
addl
stos
cmovb
push
shlb
mov
mov
cmp
mov
dec
fsubrl
lock
out
mov
sbb
and
addb
adc
mov
inc
das
mov
or
pop
in
xchg
sbb
ss
cmpsb
mov
pop
push
add
enter
xchg
sbb
test
popf
in
xchg
mov
mov
fisttpll
repz
repnz
lock
or
roll
cmp
mov
inc
call
pushf
cld
fsubl
mov
push
lds
in
inc
es
insl
mov
pop
shrl
ljmp
xor
fnstenv
add
pop
cmp
sbb
addr16
inc
cwtl
aad
pop
and
icebp
mov
mov
adc
data16
dec
adc
xchg
and
pop
add
xchg
imul
lods
cmp
sti
mov
mov
inc
adcl
jb
xchg
xchg
xchg
loope
cmp
aad
pop
lret
and
dec
lea
mov
mov
loopne
sahf
cmp
mov
lcall
pop
cld
scas
pop
jo
mov
jp
xor
push
ret
repnz
cmp
jns
popa
dec
mov
mov
xchg
jo
cmp
or
aas
jo
xchg
repz
mov
mov
mov
repnz
push
xchg
dec
add
sbb
fiadds
xchg
mov
jge
lock
lock
xchg
mov
mov
add
jno
jmp
shlb
sub
xchg
dec
lcall
cmp
shl
rcr
je
out
aaa
jp
ss
aaa
bound
enter
das
orl
popa
test
xchg
popf
push
das
jmp
xchg
mov
outsl
mov
xchg
mov
sahf
test
les
das
mov
ljmp
xor
int
movsl
xchg
or
jb
in
mov
push
cs
aas
addr16
repnz
sub
movsb
inc
arpl
adc
pop
mov
mov
mov
aaa
jb
mov
inc
pop
sbb
cmp
xchg
add
dec
pop
cmp
js
imul
mov
mov
pop
inc
dec
lahf
and
xlat
mov
ja
add
ljmp
pop
ds
jnp
xchg
cwtl
add
dec
out
std
mov
test
add
sbb
ds
lds
mov
leave
std
sbb
mov
mov
nop
xchg
out
mov
or
rorb
popf
xchg
clc
mov
mov
out
inc
sbb
mov
jle
sbb
loope
jo
sar
mov
or
mov
movsl
sub
cmp
loop
out
mov
push
test
cwtl
mov
ffreep
xor
cmp
iret
mov
pop
pop
das
jo
in
dec
nop
jg
or
ret
sub
fs
stos
ret
lret
fistps
xchg
mov
xlat
and
mov
pop
cmpsb
idivb
loop
lods
sub
clc
pextrw
inc
testl
cld
ja
inc
out
shrb
in
mov
mov
addr16
push
in
shll
pop
push
pop
fisttpl
pop
lea
and
into
sub
fbstp
lcall
mov
clc
pop
cli
sub
adc
jp,pn
xchg
cmp
insb
mov
mov
mov
insl
lret
aas
mov
sbb
cmp
gs
mov
mov
xlat
xchg
cmpl
out
ss
xlat
sub
push
mov
jmp
cmp
lcall
adc
sub
xchg
movsl
insl
ss
push
mov
in
inc
into
pop
mov
sub
sarl
icebp
cld
mov
dec
inc
mov
es
pop
adc
popf
mov
xchg
or
clc
gs
fimull
loope
inc
xchg
ljmp
xor
cmpsb
and
ljmp
cmp
push
pop
mov
jmp
mov
xchg
sub
xlat
mov
dec
mov
out
scas
movsb
sub
add
jecxz
mov
jae
fidivl
iret
adc
cmpsb
push
repnz
aas
push
cmp
or
shl
aad
mov
push
push
cmp
xor
push
iret
lea
data16
dec
and
push
nop
test
cmp
add
inc
xchg
lret
cmp
roll
dec
adc
dec
es
ds
je
or
cld
pop
call
aad
test
add
sub
daa
dec
add
cmpsb
add
jmp
mov
push
jbe
popf
cmc
jecxz
loope
sub
or
lahf
movsl
imul
loop
incb
bound
xor
pop
sahf
pusha
fsts
dec
imul
lahf
add
mov
mov
mov
shlb
sub
xchg
ja
stos
call
jge
loopne
mov
pushf
inc
and
push
xor
outsb
xchg
xor
push
adc
push
repnz
cmp
mov
shr
xchg
jg
xor
ss
sbb
je
out
into
mov
sbb
dec
adc
and
lds
into
jle
mov
or
fsubrl
cmp
je
dec
or
push
cmp
push
lret
cmp
pop
dec
push
dec
jmp
xchg
sub
cmpsl
sbb
dec
push
test
pop
pop
scas
daa
sub
mov
out
pop
mov
inc
movsb
loopne
repz
fdivrl
mov
lret
or
pop
fucomp
sbb
pushf
lock
mov
mov
subb
pop
add
sbb
mov
lret
mov
or
jmp
iret
push
rcrl
xor
xor
icebp
lock
idivl
stos
std
dec
push
mov
jae
stc
sub
loope
adc
adc
inc
cli
xlat
arpl
sbb
pop
mov
push
xor
sti
dec
rclb
add
imul
pop
mov
xchg
frstor
cli
mov
inc
sub
jnp
sti
push
out
sbb
xchg
push
aas
hlt
pop
adcb
and
xor
jo
pop
into
mov
push
push
scas
jo
dec
out
add
mov
add
insl
into
pop
lock
sbb
mov
data16
adc
jle
jl
push
jb
add
add
jo
mulb
mov
or
adc
jecxz
or
push
jmp
jno
pop
mov
mov
inc
or
sub
hlt
pop
cmp
out
loop
mov
adc
fwait
data16
dec
subl
loop
dec
dec
and
or
or
mov
repnz
adc
outsl
iret
sahf
stos
xchg
ffreep
fisubrl
xchg
mov
inc
imul
fmuls
pop
or
outsb
push
cmp
mov
mov
sbb
or
mov
mov
lea
cmpsl
repnz
lock
xor
inc
mov
mov
cmp
dec
out
pop
pop
shrb
outsl
inc
insl
pmaxub
pop
repz
xor
lea
ljmp
ds
mov
lea
cs
inc
shlb
xchg
jmp
sub
push
lods
jp
sub
ret
out
pusha
mov
adc
xor
cmpsl
add
xor
fbstp
out
jecxz
in
test
pop
jno
jmp
mov
sahf
push
pop
div
pop
inc
add
lods
hlt
mov
jno
in
pusha
or
cmc
mov
in
sahf
dec
add
mov
jge
test
outsl
je
jmp
sub
add
orl
cmpsb
mov
jnp
pop
imul
sub
notb
pop
into
int
jp
push
shlb
mov
inc
pop
addr16
fsubs
lahf
call
jecxz
rorl
leave
sub
cwtl
stos
rcr
xor
xor
lock
repnz
sub
add
mov
jge,pn
popf
fwait
bound
inc
subb
sbb
orb
mov
mov
mov
mov
cmp
or
imul
inc
jns
and
ret
jo
mov
sbb
leave
add
dec
xchg
sbb
lods
data16
xchg
add
ret
sub
pop
andl
sahf
xor
clc
int
pop
inc
aad
sub
es
jbe
cld
insl
jb
pop
push
and
inc
adc
aad
ficomps
loope
xchg
shl
add
cli
das
lcall
push
repnz
xor
sti
fistpl
fisttpl
xor
jle
or
shl
mov
push
flds
inc
lret
sub
mov
xchg
and
inc
std
lret
rorb
enter
jno
ljmp
jmp
leave
ja
and
cmp
int3
and
insl
cli
es
and
pop
jp
mov
repz
imul
xor
pop
lds
lods
pushl
lods
mov
cld
jge
lods
lret
lock
ret
movsb
xchg
push
shlb
mov
xor
xchg
mov
pop
sar
fcoml
aad
or
adc
mov
jo
loopne
scas
and
aas
out
mov
cmpl
xchg
ret
push
test
js
mov
adc
dec
mov
call
xchg
and
sbb
std
scas
fadds
out
test
jae
sbb
mov
mov
sbb
cmp
mov
mov
call
imul
and
cld
hlt
jae
jns
adc
mov
sub
test
add
mov
shrb
lods
ficompl
or
xchg
scas
jmp
into
stos
or
lods
xor
sub
dec
lret
adc
sub
inc
hlt
jnp
mov
ja
dec
mov
cmp
hlt
ljmp
jno
push
or
mov
cltd
cmp
xor
add
sahf
testb
pop
pop
and
out
addl
fisubrl
movl
add
jo
jle
lds
push
out
andb
adc
subb
iret
ja
cmp
lret
pusha
adc
jmp
ret
scas
fmul
mov
cmp
inc
push
fsubrp
loopne
aas
push
shlb
pop
fnsave
cmp
push
pop
lock
fs
lods
loope
insb
dec
xor
or
lods
pop
push
xchg
and
sidtl
fwait
out
and
clc
loope
pop
pop
push
or
push
xchg
test
jne
movsl
inc
dec
ljmp
nop
cmp
jae
je
ja
xor
pop
xchg
dec
mov
dec
dec
or
fidivrs
faddl
push
scas
icebp
popa
add
outsb
outsb
std
inc
mov
out
lahf
movsb
repnz
scas
pusha
xor
jle
pop
dec
xchg
jbe
lret
and
or
data16
shll
fcmovnb
push
pop
aam
xchg
push
sbb
mov
popa
mov
ja
xchg
adc
into
mov
fistps
fsub
lret
and
xchg
ss
and
ret
jmp
add
push
cmp
cwtl
addl
pushf
inc
xor
jge
mov
adc
mov
sub
xchg
xchg
mov
cli
jge
repz
addb
ss
int
and
and
inc
imul
push
adc
cmp
std
cmp
sbb
outsb
mov
sbb
dec
xchg
sete
loope
jp
adc
and
push
dec
int3
push
sahf
jecxz
jb
ja
mov
imull
cmc
inc
ret
inc
cld
cmp
in
push
sub
push
dec
add
in
pop
scas
xchg
insl
jo
push
ret
movsl
xchg
sbb
repz
dec
sbb
mov
movsl
push
sub
mov
sbb
mov
jmp
push
push
int
inc
xchg
repz
cmc
mov
fwait
pop
push
popa
push
cmpsl
jl
enter
fs
jb
in
dec
enter
pop
outsl
pop
inc
xchg
fcomps
enter
shll
mov
jbe
xchg
ja
jmp
nop
mov
sub
push
cli
imul
out
sub
lods
dec
xchg
sbb
mull
xor
xor
lret
or
lock
lds
sahf
push
push
stc
sti
ret
push
xchg
lcall
test
test
test
loop
test
sahf
mov
fs
and
and
sahf
shl
rep
jle
pop
dec
jno
jnp
jnp
cld
jg
pop
data16
sbb
push
inc
xchg
pop
adc
adc
push
inc
xchg
into
sahf
cmpsb
mov
xrelease
rcl
hlt
aas
cmpb
xchg
insb
cwtl
test
lcall
push
stc
jmp
xor
dec
imul
dec
cmpsl
xor
mull
popa
dec
enter
out
in
add
popf
adc
daa
frstpm(287
or
push
icebp
mov
add
repnz
insb
lock
sub
mov
xor
push
dec
cltd
sbb
or
or
pop
ss
sub
push
icebp
rorb
jno
loope
push
jns
mov
scas
jns
fcmovbe
mov
daa
dec
ljmp
inc
cmp
mov
int
clc
fstpt
movsw
pushf
cmp
clc
adc
add
test
adc
mov
mov
sbb
sti
hlt
or
ret
cmp
xchg
pop
inc
es
cs
mov
and
mov
out
imul
lods
in
fsubs
leave
ret
push
sub
lahf
faddl
rclb
dec
mov
mov
shrb
divps
xor
orb
ja
mov
sbb
mov
scas
push
dec
push
addr16
call
push
push
into
data16
pop
flds
or
enter
hlt
lahf
add
xor
adc
pusha
add
push
nop
inc
dec
insb
xor
aas
fsubl
outsl
repz
xor
icebp
xchg
and
data16
inc
scas
push
cmp
xor
les
xchg
jecxz
fcompl
add
repnz
ret
cmpsl
dec
xor
scas
adc
xor
jae
mov
push
and
push
stos
call
cmp
mov
fsubl
and
shlb
shll
sarl
inc
insl
lods
neg
rolb
fs
dec
or
aam
pop
outsb
cmp
cmp
push
pop
xorl
mov
lods
jmp
sbb
iret
xchg
out
mov
inc
xor
fldcw
xor
xchg
cmp
and
fs
dec
pop
and
js
lret
subb
fs
pusha
stc
test
testb
xor
add
mov
xchg
ficompl
pop
testb
jle
push
mov
inc
repnz
push
pop
rcrb
adc
mov
fsts
jae
in
inc
pop
movsb
ja
mov
xor
xchg
test
jae
jo
stc
orb
call
cmp
inc
sarl
adc
jns
mov
and
push
subl
clc
subb
imul
inc
sub
jne
gs
sbb
imul
xor
sbb
jg
aaa
xor
sbb
jbe
out
pop
enter
dec
or
fisttpl
js
sbb
shlb
lods
jle
mov
xlat
ss
je
shlb
ret
jp
insb
xor
dec
mov
xchg
ds
mov
dec
les
mov
xor
insb
pop
adc
js
push
ret
pop
es
add
xor
xchg
lret
mov
in
jp
adc
sti
push
adc
test
mov
xchg
or
mov
cmpsl
cld
xor
dec
xchg
stos
add
outsb
cmp
push
cmp
fnstcw
ds
sti
scas
nop
popf
inc
stc
repnz
add
dec
xchg
push
jle
stc
scas
xchg
das
xor
push
loopne
pop
icebp
mov
std
shlb
insb
add
sub
add
xchg
in
mov
mov
lea
shll
clc
daa
inc
je
or
pop
popf
pop
and
sub
ja
dec
mov
push
xchg
cmpsb
pop
fs
in
int
repnz
arpl
sbb
movsb
fnsave
pop
popf
int
mov
mov
std
mov
ret
das
pop
shrl
in
insb
ds
jmp
adc
rcl
fwait
test
mov
std
nop
out
xchg
push
jno
imul
mov
dec
std
adc
ljmp
inc
mov
xchg
rol
out
ret
lret
les
dec
and
mov
inc
sbb
andb
adc
into
lahf
mov
mov
mov
mov
sub
insb
int
int3
int3
sahf
rorb
test
mov
jnp
sti
ret
movsl
movsb
xor
aas
push
adcb
fwait
xchg
fld
xchg
pop
aam
xchg
gs
or
pop
cmc
fs
repz
inc
and
lods
dec
cs
pop
add
dec
mov
add
jns
arpl
sub
and
fiadds
icebp
test
xchg
or
mov
adc
ljmp
cld
cld
dec
rcl
cmp
sub
addr16
xor
lock
cmp
ja
push
nop
ljmp
mov
push
sahf
xor
dec
sub
add
pusha
fdivrs
xchg
xchg
repz
jns
jmp
or
inc
inc
mov
sbb
loopne
mov
test
scas
inc
in
pop
xchg
dec
int3
pop
rcrl
fstpl
sub
sahf
push
sbb
ja
sub
insl
pop
cmp
add
test
and
shl
xchg
leave
or
cmp
sbb
and
icebp
jnp
arpl
cmp
sbb
push
notl
aam
scas
fisttps
dec
adc
pop
cmp
loopne
inc
pop
lods
std
add
xor
add
inc
pop
mov
jo
sahf
mov
lahf
sbb
pop
add
push
and
jl
int3
inc
jbe
push
test
and
xchg
pop
fistpl
cmp
ret
mov
cs
sub
inc
lea
mov
scas
mov
cmp
leave
xchg
sub
fildl
imulb
xor
test
rorl
lahf
out
or
mov
aad
add
insl
jbe
std
movsl
fnsave
test
repz
es
cmpsb
jmp
xchg
les
xchg
pop
inc
movsl
dec
stos
and
insl
jecxz
push
and
jmp
adc
inc
lods
dec
loop
jle
shl
xlat
mov
add
push
imul
nop
jl
int3
dec
loopne
ja
faddp
mov
js
add
and
imull
cmp
adc
movsb
xchg
icebp
jmp
mov
xor
sarb
pop
loop
and
mov
mov
arpl
jnp
pop
mov
inc
pop
or
in
or
pop
inc
mov
aas
lahf
xchg
out
cmp
and
xchg
mov
mov
enter
jge
or
pop
mov
mov
jp
rcll
mov
lds
sbb
or
lcall
mov
sbb
push
les
repz
add
cli
mulb
punpckhwd
dec
mov
jmp
rcrl
ds
adc
leave
mov
add
movsl
xchg
addr16
ftst
cmp
outsl
dec
mov
rclb
jle
sbb
pusha
fsts
stos
mov
push
fwait
insl
bound
sub
add
push
out
rolb
lods
pop
adc
mov
mov
lahf
andb
add
inc
mov
jmp
mov
mov
ds
sbb
dec
fcompl
jecxz
stos
mov
and
mov
pop
mov
nop
pop
inc
les
cli
and
sbb
testb
inc
movsl
add
xchg
inc
lock
shr
xchg
jno
pop
push
inc
cmp
cmc
and
dec
xchg
and
dec
jns
xor
push
push
ss
in
pop
dec
sbb
jl
pop
fs
sub
adc
popf
mov
push
jl,pt
sahf
xor
out
insb
push
and
sbb
nop
xor
rorl
mov
stos
shlb
dec
mov
and
cmpsl
jecxz
sub
jp
sub
gs
mov
sahf
pop
mov
cltd
push
sbb
lock
or
add
push
rorb
sarb
scas
xlat
das
cld
push
insl
xor
add
scas
xor
jp
mulb
insb
scas
sti
lahf
and
add
icebp
mov
ret
push
xchg
repnz
inc
xor
inc
cmpl
mov
mov
mov
mov
fidivs
adc
iret
mov
sahf
push
repz
add
sti
in
test
jno
pop
ficoms
addr16
mov
sbb
push
jle
frstor
test
inc
lock
and
cs
cmpsb
mov
mulb
movsb
dec
add
push
repz
mov
scas
mov
loop
add
imul
pop
and
fiadds
jne
test
push
icebp
mov
jno
mov
lods
cmp
and
out
dec
or
pop
mov
arpl
cmp
inc
aaa
xor
cmp
gs
cli
xchg
jl
sbb
jmp
pop
lret
in
mov
stos
or
out
xchg
add
loop
xchg
xchg
xchg
scas
int
scas
push
gs
push
cmp
sbb
jno
imul
cmc
pop
push
aaa
outsl
jg
aad
pop
pop
shrb
jmp
cmp
enter
cli
xchg
or
push
jno
mov
stos
mov
push
outsb
jbe
xchg
pop
mov
mov
cli
add
ss
adc
fdivrl
inc
jb
xchg
lahf
xchg
and
sti
lret
divb
popf
adc
and
push
and
adc
mov
mov
jno
xchg
pop
inc
fcomps
add
dec
movsl
or
or
sub
sub
cmp
inc
dec
loope
imulb
dec
mov
mov
out
mov
es
outsl
adc
bound
push
cmp
dec
not
dec
js
mov
pop
movsb
xor
aaa
push
inc
jg
dec
and
inc
inc
jae
push
out
xchg
call
sbb
cmp
xchg
push
int
and
inc
cmp
sbb
or
in
pusha
stc
and
inc
jge
popa
imul
int3
stc
cmp
cli
cmp
aam
notb
jnp
mov
cmp
gs
fisubl
jb
lahf
cwtl
out
jnp
std
sub
pushf
push
into
add
push
sub
add
sbb
push
ljmp
mov
mov
shl
cld
xor
clc
mov
dec
sbb
sbb
sub
xchg
jbe
jnp
sub
cmp
shll
inc
cmpsb
hlt
es
cltd
fcoml
and
loope
jae
negl
pop
dec
gs
mov
aaa
sub
cmc
push
lret
in
dec
popf
shlb
mov
push
push
push
sub
ss
lods
dec
andl
mov
sub
gs
outsl
inc
addr16
mov
stos
inc
and
adc
pop
popf
push
imul
sub
pusha
xorb
cmp
jl
gs
in
adc
mov
mov
jae
repnz
movsb
lods
ds
int3
xchg
adc
adc
mov
shrb
lahf
jle
sbb
movsl
sbb
sub
pop
pop
ljmp
fnstsw
mov
jl
lret
iret
fisttpll
iret
xchg
idivb
sbb
fucomi
ret
icebp
mov
jle
inc
mov
or
push
popa
mov
dec
fwait
in
xor
inc
lock
cli
push
pop
push
adc
into
mov
inc
je
and
data16
shrl
fs
sbb
and
cs
cmp
add
mov
mov
cmpsb
cmp
cmp
add
push
ljmp
pop
arpl
mov
push
pop
adc
sbb
sbb
mov
mov
call
cltd
inc
popf
js
cmp
movsl
addr16
arpl
inc
jmp
push
out
xor
push
push
mov
leave
insb
icebp
stos
in
sti
rorb
popa
xchg
pushf
jg
dec
adc
lea
xor
mov
adc
or
mov
imul
xchg
mov
sub
movsb
int3
jg
mull
clc
add
push
jnp
imul
sub
dec
shlb
or
add
scas
add
mov
iret
pushf
pop
shlb
outsl
stc
xor
pop
push
sub
inc
xor
adc
decl
fldenv
adc
or
ja
inc
test
or
insl
movl
cmp
lcall
loop
daa
xor
dec
xor
mov
add
lret
mov
sar
fcmove
call
idivl
lret
ss
jmp
fdivrl
or
pop
sub
adc
out
bound
in
leave
out
push
xchg
outsb
xchg
lret
cmc
pop
xor
xor
mov
fsubr
hlt
push
xor
pop
js
xor
test
lcall
stos
shlb
pop
xchg
fwait
pop
xchg
nop
scas
jns
mov
adc
xchg
push
rorb
lret
clc
jg
xor
js
sbb
adc
xor
jg
push
mov
push
lock
and
aaa
sahf
add
or
mov
add
xchg
rolb
jns
xor
cmp
out
fwait
jg
sbb
inc
xlat
xchg
outsl
es
xchg
icebp
jg
rorb
loop
sub
mov
jno
repnz
or
icebp
xchg
dec
xor
cmp
lret
sbb
mov
cli
les
shrl
pushf
popa
jecxz
sbb
or
imul
mov
stos
in
test
sub
xor
pop
mov
aas
dec
out
push
fdivrl
push
jle
push
push
out
add
xchg
add
data16
jl
mov
addr16
xchg
into
xorb
sbb
out
mov
and
cmp
popa
push
lret
adc
inc
mov
and
sbb
and
std
enter
push
cwtl
stos
mov
or
cli
inc
inc
pop
sbb
xchg
imul
sbb
mov
neg
std
xchg
ret
dec
mov
in
adc
ret
push
mov
jl
push
inc
scas
call
xsaves
adc
or
push
inc
sub
pop
mov
xor
mov
and
sahf
mov
das
xor
test
les
pusha
fwait
and
popf
xor
pop
sbb
or
dec
hlt
ret
sbb
ret
inc
lds
jge
or
xor
ficoml
jno
and
jb
loope
inc
mov
test
add
pop
push
in
xchg
and
sarl
pop
sbb
addr16
jne
hlt
or
push
adc
push
pop
push
popa
imul
lret
out
lea
sub
push
fcmovu
xchg
scas
rcrl
xchg
in
inc
pushf
inc
xchg
cmp
inc
sub
jge
in
fldt
mov
sbb
ja
push
pop
inc
jns
adc
push
jecxz
xchg
jne
js
sub
mov
std
loope
adc
filds
pop
xchg
mov
sahf
popa
psrlw
dec
pop
clc
mov
push
sbb
ss
repz
xor
loop
inc
dec
jo
and
outsb
sti
add
inc
fadds
out
scas
jmp
adc
loopne
or
rol
xor
aas
stos
sbb
add
jl
cltd
push
dec
out
jae
jno
mov
popf
hlt
xor
pop
jnp
sub
push
lcall
dec
orl
cmpsb
adc
pop
call
xchg
xchg
lret
sub
fwait
es
push
and
test
lods
repnz
in
mov
mov
test
fwait
pop
xchg
cmp
int
inc
js
lods
imul
mov
js
push
loope
pop
cmp
xchg
stos
inc
into
test
sbb
sub
dec
mov
fdivl
jmp
loop
jmp
push
and
add
movsb
xchg
or
mov
dec
pop
push
inc
sbb
sub
and
loop
mov
push
inc
roll
pop
pop
fists
xor
push
sub
scas
xchg
inc
xchg
shll
mov
repnz
arpl
lea
xlat
addr16
ja
enter
xchg
mov
mov
jmp
cmp
int
std
cmp
cli
or
jp
test
gs
and
hlt
dec
lds
pushl
cmc
mov
and
pop
mov
pop
xchg
jno
cli
sbbl
int
or
test
sbb
dec
mov
xor
cltd
add
jo
lods
cwtl
xlat
cmc
jae
xchg
leave
jae
adc
loope
adc
ss
cmpsl
sub
ljmp
popf
push
mov
aaa
adc
xchg
cmpsl
sbb
ret
jg
xchg
std
cmc
add
fwait
mov
addr16
sub
subl
jl
stos
inc
icebp
ret
enter
leave
icebp
in
or
xor
mov
mull
das
mov
inc
xor
stos
ss
inc
sub
aaa
pop
sbb
sbb
xor
gs
je
dec
pop
comiss
cwtl
je
sahf
pop
push
mov
push
fs
cmpsb
jmp
mov
cmpsb
push
mov
mov
mov
pop
push
or
jae
into
test
in
incl
lcall
cmpsb
fs
lcall
push
push
js
xor
inc
out
jecxz
mov
xchg
mov
ror
lahf
out
jo
lahf
mov
cmp
mov
pop
xchg
mov
cs
scas
dec
imul
xchg
cli
insb
loop
xor
cwtl
stos
lea
stc
ret
stos
fstpl
cld
cmc
sub
mov
xchg
mov
cmpl
arpl
mov
cmp
add
in
fst
dec
adc
mov
jl
lods
and
aaa
mov
addb
dec
out
cmp
sub
stc
mov
mov
xorl
push
aam
in
lret
push
out
out
push
inc
inc
dec
outsb
adc
icebp
in
push
inc
push
jbe
cmp
negb
pushf
or
pop
sbb
cmp
js
xor
stos
fdiv
loop
inc
pop
push
jb
pop
ret
push
mov
xchg
push
bound
stc
js
scas
cld
push
and
jne
vmovaps
lods
mov
fisubl
mov
or
cmpb
add
jge
cmp
mov
cmp
and
cmc
jno
lret
aad
mov
mov
ds
xlat
xlat
pop
arpl
aas
inc
xchg
lcall
sbb
add
dec
mov
sahf
cmpsb
lea
pop
sub
inc
into
pop
mov
or
stos
bnd
in
filds
fidivs
aad
fcoms
xchg
xchg
push
jge
jae
je
aas
push
jl
add
rcl
int
nop
aam
push
dec
pop
aas
inc
xor
repnz
mov
repnz
ljmp
lea
mov
xor
repz
out
and
and
mov
psadbw
jb
loope
pop
cmc
adc
test
mov
shlb
xchg
nop
dec
fisttpl
out
inc
rclb
push
push
test
aam
hlt
push
mov
dec
shlb
sbb
mov
jmpw
xchg
push
mov
push
insb
adc
aaa
popf
inc
iret
adc
jo,pt
outsb
cs
arpl
mov
inc
outsb
sub
js
xchg
addl
cmpsb
in
neg
imulb
aam
dec
cmpsb
ss
sbb
subl
add
jb
roll
andb
pop
jne
dec
mov
aas
in
cmpl
stos
test
fmull
inc
test
push
shrb
adc
aaa
mov
sbb
cmp
ss
in
arpl
dec
and
sbb
push
js
mov
xchg
jmp
popa
bnd
mov
in
rcl
mov
insl
in
stc
cmp
es
cltd
das
and
mov
fists
xorl
xor
cmpsb
repz
xor
and
stos
in
pop
sub
add
push
xchg
jne
rcll
ds
popa
test
popa
gs
nop
test
stos
mov
ds
add
sub
stos
push
fstp
mov
les
or
xor
jnp
cmp
mov
std
int
sbb
push
mov
cmpsl
outsb
cld
call
xchg
push
push
outsl
lea
push
scas
cmp
mov
addr16
out
test
lcall
mov
mov
ss
pop
adc
lcall
jecxz
sub
insb
nop
adc
cld
push
test
sub
mov
in
sbb
dec
out
mov
push
xor
jg
cmp
addr16
push
loop
cmp
rep
mov
mov
jp
xchg
stc
push
xor
cwtl
out
outsl
int3
jl
adc
mov
jecxz
sub
cmp
add
sbb
push
cmp
andb
sbb
mov
xchg
in
mov
loope
pusha
sti
xchg
and
adc
adcb
inc
repnz
fdivl
jecxz
jmp
pop
int
push
cmpsl
scas
cmovo
cmc
fsubs
jmp
push
mov
fdivl
push
add
outsb
dec
sbb
mov
push
psrlw
lods
enter
inc
fcmovu
nop
out
cmp
inc
or
mov
and
aaa
mov
mov
out
clc
push
mov
or
cmp
bnd
push
push
inc
imul
adc
fwait
xchg
lock
int
pop
xchg
xor
jp
insb
into
xlat
daa
test
mov
inc
adc
sub
pop
mov
cli
jle
cmp
movsb
cmp
lret
cmp
jno
jno
mov
ja
ficoml
pop
faddp
cmp
pop
cmp
in
out
and
aaa
imul
hlt
lock
out
dec
mov
pop
jge
mov
popf
xchg
imul
sbb
dec
xchg
pop
push
and
sbb
or
mov
loope
push
lds
loope
ja
cmp
stos
adc
mov
mov
out
scas
ror
xchg
sbb
xor
aad
mov
cmpsl
rcr
add
pop
sbb
int
lock
es
cld
imul
ret
shlb
add
in
sbb
jnp
mov
lcall
push
ror
jmp
jl
xlat
outsb
sti
mov
and
or
add
xchg
mov
arpl
jbe
sub
int
jne
mov
mov
mov
mov
jmp
jbe
shlb
or
sbb
hlt
mov
pop
aad
pushl
shlb
pop
int
leave
fistpll
add
cld
push
add
fs
out
les
lods
add
mov
rol
cmp
jge
es
icebp
addr16
lcall
mov
fstpl
push
arpl
fs
cmp
xor
jo
data16
insb
in
sub
test
lods
lret
mov
fdivrp
mov
add
push
leave
into
cmp
and
in
cmpb
adc
sub
jns
iret
xor
lcall
xchg
pop
mov
jmp
add
mov
mov
clc
aad
xor
aad
sub
lock
std
mov
popa
mov
cmp
jle
ret
popf
fneni(8087
sahf
adc
popa
js
inc
jo
sbbb
and
lock
jo
jecxz
push
std
push
mov
cld
dec
pushf
adc
call
rorl
sub
or
sahf
inc
cwtl
xchg
mov
dec
mov
fisubrs
inc
xor
std
push
xchg
call
lods
jno
sub
outsl
sti
repnz
adc
mov
shl
cli
xor
pushf
inc
jnp
outsl
idiv
push
mov
mull
jno
pusha
mov
ret
in
cmpsb
sbb
mov
data16
fs
mov
mov
push
je
nop
shlb
sarb
mov
loop
cmp
out
iret
idivl
xchg
in
ds
sub
pop
jnp
cltd
mov
addr16
iret
sbb
ss
icebp
lods
xchg
sub
mov
rorl
fs
jo
out
push
inc
xchg
out
xchg
ja
test
jo
or
ficomps
mov
push
call
es
jne
aas
fistl
loopne
cs
sub
call
insl
fsubl
mov
aam
fcmovne
rcr
pusha
cltd
js
shrl
lret
mov
fistpl
mov
lret
jnp
shlb
fwait
mov
xor
in
inc
test
ljmp
and
imull
pop
out
jp
xor
scas
xchg
inc
or
ljmp
push
and
frstor
adc
push
es
adc
imul
dec
push
or
outsb
push
mov
sbb
fwait
ja
loopne
stos
ljmp
xor
xor
or
push
pusha
mov
aaa
or
mov
and
std
outsb
mov
dec
aad
push
xchg
pop
mov
mov
adc
xchg
add
mov
sahf
cmp
inc
out
sub
mov
jnp
fidivl
jns
dec
and
in
js
mov
mov
sub
and
fwait
popf
or
call
pop
cmp
lret
xchg
dec
adc
mov
and
addl
out
adc
xlat
mov
xchg
imul
in
fsubrs
pop
sub
sub
inc
pop
adc
pop
lahf
adc
lods
jbe
lahf
xchg
add
shll
icebp
int
in
add
inc
ljmp
pop
adc
pop
test
loope
stos
in
stos
fcomps
mov
outsb
adc
cmpsb
fidivl
in
fidivrs
rclb
lcall
mov
test
sbb
sbb
pop
sub
mov
jecxz
aam
fistl
pop
stos
or
xchg
sub
ds
repz
sahf
mov
xorb
je
in
sahf
xor
pusha
lods
xor
fnstsw
xchg
rorb
mov
lea
lea
sbb
aaa
loop
imul
inc
dec
sbbb
jg
bound
xchg
sbb
dec
data16
adc
jns
ficoms
ret
xchg
out
lcall
push
sbb
mov
xchg
leave
sbb
mov
push
xorb
leave
insb
sbb
or
out
popa
sub
dec
jl
jecxz
in
mov
inc
xchg
loopne
mov
adc
xchg
stos
sbb
add
dec
mov
cmp
adc
in
inc
jmp
arpl
sub
test
cli
add
add
lds
push
and
cmp
subl
and
xor
arpl
mov
sub
lahf
repnz
rcl
xchg
pusha
sbb
inc
dec
xor
dec
int3
test
std
js
ss
imul
inc
jae
cltd
push
push
dec
mov
sub
mov
lods
jae
out
clc
xchg
ret
mov
out
jo
inc
call
dec
adc
jp
jno
push
adc
push
mov
cs
test
ljmp
and
inc
mov
clc
daa
rolb
loopne
enter
sub
xchg
pusha
xor
mov
jo
dec
mov
adc
fmull
xchg
movsl
pop
insb
or
mov
int
jno
out
outsl
scas
aas
jp
iret
adc
cwtl
inc
dec
ja
int3
movsb
push
xchg
inc
aas
les
mov
fdivp
lahf
inc
pop
mov
jecxz
xor
lods
divb
cmp
xor
rcr
int3
xchg
test
sbb
inc
mov
mov
roll
jecxz
adc
lock
rcll
hlt
test
aad
sbb
push
mov
ret
inc
arpl
xorl
or
sbb
mov
push
lcall
jnp
xchg
mov
inc
pop
mov
pusha
test
pop
mov
mov
lock
push
lret
and
xor
mov
xor
je
inc
sbb
out
push
outsl
fmull
icebp
jo
mov
sbb
sbb
imul
mov
mov
mov
sbb
add
into
sub
xor
pop
pop
inc
cmp
push
and
test
push
aas
test
pop
and
lret
movsb
push
ja
push
ror
adc
xchg
aas
scas
jo
test
mov
pop
jge
push
sbb
jb
outsl
rcll
and
pop
or
dec
mov
push
pop
adc
jb
in
fbstp
ljmp
sbb
sbb
sub
cmc
pop
add
dec
jae
in
mov
sub
sub
out
or
gs
push
imul
aad
frstor
fdivrp
jg
add
cmp
dec
dec
mov
push
mov
adc
test
xor
in
repnz
lods
arpl
jge
dec
popa
push
fs
mov
mov
add
jbe
push
sbb
into
pop
add
add
mov
mov
scas
cmp
jg
sub
ficompl
les
lds
not
hlt
cmp
inc
pop
imul
sti
jl
mov
or
ss
xchg
ss
and
lods
push
sbb
push
pusha
aam
divl
mov
out
std
mov
movsl
pusha
lds
or
js
jno
xchg
inc
sub
xchg
rcll
pop
sub
stc
bound
std
cld
pop
dec
ret
inc
pusha
dec
and
dec
adc
fildl
pushf
mov
out
cmp
popf
jo
stos
xorb
test
mov
repz
cmp
in
lcall
stc
xchg
mov
sub
mov
out
test
arpl
shrb
inc
sub
sbb
jbe
adc
hlt
push
mov
push
imull
jmp
aaa
lods
pop
scas
jbe
rol
inc
test
pop
imul
pop
inc
add
and
xchg
mov
mov
push
pop
mov
fimuls
and
mov
test
jecxz
mov
cmp
jge
in
das
mov
pop
call
or
mov
fisttps
sbb
cli
enter
cmp
fcmovnu
test
lods
out
or
pop
sar
mov
pop
xchg
xchg
cltd
xchg
lock
sti
test
jno
insb
lock
push
enter
out
push
lcall
mov
data16
mov
jns
mov
cmp
cmp
fdivl
in
adc
stos
dec
xor
dec
test
push
jbe
sbb
mov
jp
sarl
add
sbb
and
test
andl
dec
loopne
push
inc
mov
push
insb
adc
loop
jge
fstl
rorb
adc
lret
loop
jae
leave
jne
gs
push
and
sub
mov
xor
mov
int
push
adc
pop
out
mov
arpl
sbb
dec
addr16
mov
repz
repnz
xor
or
mov
add
cmp
mov
fmuls
dec
jecxz
mov
push
sbb
ljmp
fistpll
add
cs
data16
pop
bound
or
push
adc
loop
jns
mov
add
cmc
repnz
add
das
adc
and
and
and
daa
aas
bound
icebp
or
in
out
outsl
and
shlb
push
mov
jo
pop
or
jp
test
adc
cmp
or
test
xor
repnz
sahf
xor
divl
inc
js
hlt
int3
sub
ret
sub
inc
mov
lcall
cwtl
xorps
fwait
sahf
lcall
mov
inc
jae
pop
jbe
mov
fisubl
imul
sti
xchg
mov
sbb
lahf
ljmp
dec
imul
push
out
xor
jo
arpl
ret
xor
cmpsb
es
out
xor
out
jecxz
sbb
or
inc
mov
fisubrs
mov
fistps
add
dec
xchg
xchg
test
or
sbb
or
sahf
xchg
pop
xlat
sbb
fwait
fxch
ljmp
cli
in
outsl
int
sub
es
hlt
mov
push
push
adc
push
pop
adc
cmpsb
push
jle
dec
sar
and
push
xor
iret
push
xor
jbe
xchg
shrl
dec
pop
mov
mov
lds
and
fildl
dec
add
enter
movswl
add
sub
loope
insl
movl
iret
pop
sub
and
add
lahf
cmpsl
movsl
sub
psllq
je
outsl
cmp
and
and
lret
xchg
sbb
cmp
jbe
je
imul
push
push
out
pop
aas
and
sub
in
adc
or
inc
popf
inc
xchg
shlb
rol
lcall
lret
push
lcall
cmpsb
mov
xor
testl
mov
daa
fimull
mov
push
les
dec
nop
iret
push
movsb
dec
push
fmull
addb
jnp
sarb
std
lret
pop
sti
outsl
mov
mov
jb
push
dec
xchg
inc
in
dec
sub
mov
jnp
ret
push
jmp
and
mov
and
fistps
cmpb
dec
cmpsb
rcrl
ror
pop
scas
push
cmp
jmp
jns
aam
jb
ficoms
add
add
scas
fmul
mov
lock
decb
addb
sbb
cmpsl
addr16
or
arpl
loopne
jp
add
cmc
jnp
jl
sub
repnz
dec
into
mov
xor
ficoms
and
clc
imul
jno
sbb
ja
rolb
add
push
push
add
insl
xchg
pushl
shl
and
and
sbb
dec
aaa
in
inc
push
mov
sub
jne
ds
add
dec
stos
sbb
jecxz
xchg
and
adc
sub
mov
dec
and
or
sub
push
xor
punpcklwd
iret
sub
xor
outsl
push
mov
lret
mov
clc
in
or
es
sbb
mov
or
aaa
cmp
dec
xchg
cmp
subb
inc
dec
sub
xor
outsl
push
popa
pop
jnp
cmc
movsl
bound
shl
pop
pop
dec
adc
mov
push
nop
in
pushf
imul
dec
dec
test
repnz
xchg
xchg
sbb
in
insl
popl
pop
and
pop
add
mov
xor
sub
flds
divb
or
xchg
adc
mov
cmp
les
add
movsl
les
call
lahf
and
xchg
pop
cmp
jb
pop
jecxz
roll
int
push
xor
std
rol
mov
ret
loopne
pop
decb
shr
dec
fldt
fdivrp
cmpsb
or
imul
in
add
or
push
rorb
inc
adc
daa
xorl
jl
xchg
aam
inc
cmp
cmp
ret
dec
push
hlt
out
cmp
leave
ljmp
scas
int3
sbb
jmp
lock
int3
cmp
data16
addr16
test
jg
loop
out
cmpsl
pop
shrb
ja
inc
clc
bound
cmpsl
xchg
outsl
adc
jae
jns
jae
adc
cmpsb
aam
xor
mov
dec
add
jge
xor
leave
pop
shll
jo
inc
ret
xor
enter
ret
fisttpll
mov
pop
aam
imull
popa
cmp
sahf
push
mov
push
loope
mov
daa
sub
mov
aaa
es
imul
loop
adc
test
lahf
adc
push
mov
cwtl
aad
pushl
pop
aaa
lahf
or
or
std
push
test
popl
fcoms
xchg
sub
lods
roll
dec
and
fisttpll
xor
dec
inc
fiaddl
jle
imul
ret
aas
or
enter
dec
adc
xchg
mov
xor
inc
andb
lds
lcall
dec
sahf
test
mov
lahf
ss
mov
cmp
out
out
daa
jle
jmp
int
dec
aam
andl
sub
xchg
hlt
addr16
or
dec
mov
and
loope
outsl
or
sti
pop
lret
cmp
inc
scas
cmp
mov
push
ljmp
jnp
jp
or
js
in
fnstsw
fdivs
negl
cltd
call
mov
icebp
je
pop
cmc
dec
ret
js
out
xrelease
xlat
mov
mov
or
dec
mov
cmc
xlat
mov
outsb
dec
pop
in
test
ficoms
mov
fs
fistps
push
movsl
movsl
scas
mov
xchg
pop
xlat
das
fcmove
pop
in
bound
or
pop
inc
out
lea
je
xor
out
loope
or
incb
scas
pop
xchg
pop
gs
mov
std
clc
ret
lods
data16
fimull
fisttps
xor
lock
imul
push
inc
clc
cwtl
mov
hlt
test
or
or
rcl
jnp
push
xchg
je
cmpsl
cld
pop
push
mov
sub
mov
iret
adcl
pop
mov
push
icebp
and
jb
repnz
loope
jecxz
mov
sbb
addr16
inc
notb
fidivs
shll
jo
enter
movsb
outsl
mov
jge
lods
and
sub
stc
cld
jle
ret
out
inc
test
das
add
mov
jl
pusha
iret
ds
and
movb
sbb
inc
mov
mov
mov
and
lret
stos
shrl
xchg
xlat
add
jbe
or
loop
dec
mov
lock
pop
movq
jecxz
adc
inc
cwtl
enter
push
out
lahf
loopne
cmp
outsl
movsl
mov
outsl
inc
jo
scas
add
push
and
mov
adc
xor
cmp
mov
dec
mov
cwtl
cmpb
test
aaa
xor
popf
insb
pop
into
loopne
xchg
loope
jns
jle
mov
xchg
je
cmp
and
loop
xlat
sbb
mov
push
inc
jae
mov
or
mov
xchg
movsb
mov
mov
push
imul
cmpsb
or
lret
mov
and
aad
aas
lret
sbb
mov
clc
adc
dec
mov
je
adc
mov
outsb
pusha
mov
mov
lods
mov
or
mov
movsl
mul
je
fidivl
and
fs
in
aas
cltd
push
inc
clc
or
in
jae
mov
in
pop
rcrb
mov
cmp
mov
adc
out
jecxz
or
cmp
lea
push
rorl
cmp
inc
push
push
out
jb
push
mov
cmpsl
adc
movsb
mov
add
mov
push
jb
les
xchg
mov
adc
stc
jg
and
dec
sub
aas
fucomi
out
push
adc
popa
mov
popf
dec
xchg
ror
push
push
xchg
cmpsb
cld
cld
push
imul
in
mov
ja
sbb
iret
andl
xchg
cmp
movsl
lahf
mov
sbb
push
sbb
in
sbb
insl
jo
je
dec
sbb
lods
push
jo
dec
lcall
lret
and
dec
push
dec
enter
inc
lock
push
xchg
cs
pop
add
popa
dec
jle
pop
lahf
and
push
test
pop
in
filds
pop
stos
push
in
lahf
xor
inc
les
shl
mov
jge
imulb
addr16
pop
jo
daa
fldenv
iret
rolb
jecxz
stos
cmp
shrb
push
sub
leave
jl
jg
cmp
mov
or
subl
push
add
pusha
push
aas
mov
std
sub
jbe
mov
lds
xor
cmp
push
jne
xchg
add
adc
mov
and
mov
push
sbb
cmp
nop
pop
pop
cld
sti
inc
or
sub
out
pop
xchg
mov
lcall
jl
daa
or
out
xor
std
fcmovb
out
cmp
mov
ffree
es
mov
jns
cmp
add
sbb
jno
sub
mov
leave
test
pop
jp
das
inc
hlt
sub
mov
xor
movsb
repz
pusha
andb
jl
dec
add
gs
mov
lods
andb
enter
sbb
push
mov
sub
lret
xor
test
stos
aad
xchg
jecxz
sub
in
cli
imul
popa
adcl
jno
adc
popa
in
xor
jb
add
cmp
outsl
mov
rcrl
imul
negl
mov
add
scas
mov
leave
loop
lock
cld
decl
je
imul
inc
jbe
loope
xchg
ds
sub
imul
mov
inc
mov
in
mov
movsl
cmc
fidivrs
sbb
jo
aam
test
push
test
repz
rcrl
add
jl
lods
push
inc
add
call
add
outsl
in
out
das
jmp
mov
xor
xor
xchg
shrl
cmp
xchg
into
shrl
mov
jbe
out
mov
mov
and
scas
inc
ja
xor
xor
shlb
and
dec
cli
leave
mov
enter
and
mov
loop
filds
and
and
pop
mov
pusha
stos
xchg
push
and
dec
mov
lret
stc
pop
mov
jbe
rcll
pop
cmc
cmp
stc
addr16
loope
jne
push
cmp
iret
mov
xor
out
xchg
mov
jnp
inc
lock
xchg
fidivs
fwait
sub
xor
cmp
and
and
popa
scas
cltd
dec
inc
mov
pop
push
mov
stc
cmp
test
lods
fwait
xlat
sbb
fidivrl
mov
sbb
pop
lret
sti
mov
arpl
hlt
mov
mov
mov
push
jecxz
arpl
dec
jl
sbb
popf
js
loope
adcl
loopne
insl
repz
aad
insb
push
test
and
mov
lret
or
std
push
mov
les
cltd
push
sub
es
inc
add
mov
nop
arpl
call
adc
add
fnstcw
sub
jne
and
xlat
cmc
dec
mov
mov
cmp
inc
inc
shrl
push
scas
inc
repz
adc
jle
in
lea
jne
sub
jnp
dec
js
data16
jle
sbb
pop
cltd
and
sbb
lods
in
xchg
and
lods
loopne
out
cmp
ret
mov
xchg
mov
sub
insl
rcll
mov
cmp
push
or
jg
adc
sbb
push
pcmpeqw
xchg
mov
fwait
mov
add
ret
data16
cli
fcoms
ja
mov
popf
or
pop
movsl
insl
sbb
lods
mov
fcmove
popa
je
sub
cwtl
pop
xchg
xchg
call
aam
out
or
pop
sub
fistl
push
push
push
mov
fst
dec
adc
dec
cmp
push
cmp
sbb
popf
ret
shll
pop
mov
add
mov
adc
xor
aas
lea
inc
inc
add
inc
sub
popa
pop
mov
fadds
test
jne
inc
js
ficoms
ret
add
mov
repz
inc
imul
outsb
mov
jl
mov
push
mov
jle
or
outsl
xchg
sub
mov
test
imul
test
dec
mov
pop
xchg
ss
fwait
add
rolb
lahf
adc
jmp
adc
xor
fisttpl
lcall
fyl2xp1
jo
adcb
sbb
aas
mov
pop
loopne
inc
xlat
aad
cmpsl
and
mov
dec
jecxz
jp
cli
ret
je
cmp
fmuls
in
and
std
or
lds
bound
xchg
inc
pop
xchg
aas
mov
adc
sub
xor
fbld
dec
or
pop
int
into
xsha1
cmpsb
mov
inc
xor
and
ror
jmp
pop
ljmp
lahf
lret
popf
dec
clc
test
cwtl
cwtl
add
cmp
mov
pusha
scas
mov
jb
jl
outsl
mov
pop
fcmovnb
fildll
jmp
pop
inc
xchg
jmp
jo
rcrb
lds
inc
inc
sub
xor
push
adc
mov
adc
mov
or
push
push
aad
pop
addb
outsb
mov
clc
xor
mov
dec
daa
xor
sti
cwtl
fisubl
loop
incb
lret
jne
fs
pop
rolb
popa
scas
adc
sbb
mov
cmc
out
pop
stos
sub
cmc
std
jno
mov
mov
lock
and
jae
sub
jno
mov
clc
cmp
cli
cmp
mov
pop
xor
hlt
enter
out
jnp
popa
add
xchg
fs
and
pop
in
mov
stc
into
xor
inc
or
lods
cmp
mov
dec
add
sti
movsl
pop
xchg
pop
lods
jmp
dec
fcompl
push
add
add
jb
and
vsqrtpd
cmpsl
jp
into
or
inc
jno
dec
pop
out
test
jbe
jae
decb
xchg
lods
adc
fcomps
jg
dec
loope
and
pusha
or
outsb
pop
add
cld
fisttpll
dec
jae
aam
sub
in
dec
dec
sub
mov
and
addl
lods
scas
cld
pop
push
xor
sub
and
push
mov
pop
and
dec
in
ja
and
sub
cmp
movsb
fs
outsb
dec
stos
add
pop
sbb
aad
das
lahf
pop
ss
mov
lahf
pop
sub
aas
pop
jg
sbb
mov
pop
xor
in
test
cmpsb
mov
ss
pop
add
into
cmp
sub
mov
mov
mov
or
hlt
push
push
pop
cmpb
push
insl
or
mov
cmp
push
pop
or
xchg
mov
cmp
pop
jo
jae
stc
pusha
xchg
pop
dec
sub
cmp
cli
xchg
imul
jg
aaa
mov
outsl
fwait
mov
in
mov
xchg
mov
dec
push
mov
fwait
add
aad
movsl
dec
clc
mov
andb
rcll
stos
jns
xchg
xchg
sti
cmp
mov
push
lahf
loop
jo
jge
negl
mov
out
inc
mov
ljmp
mov
cmp
ret
int
mov
xchg
and
mov
dec
sub
inc
inc
adcb
mov
cli
mov
mov
xor
jb
add
std
jle
cmp
push
mov
aam
sub
jmp
mov
inc
andb
xchg
imul
test
out
test
xchg
popa
aaa
mov
imulb
pop
mov
pop
xor
stos
xchg
lret
jne
add
repz
jle
into
out
jae
in
sbb
xor
repnz
fwait
mov
fstpl
imul
dec
pop
jle
and
pop
jb
pop
movsl
sbb
andl
push
out
retw
mov
leave
int3
dec
dec
jp
sub
pushf
aas
hlt
xchg
daa
mov
push
adc
leave
push
sbb
mov
test
aad
xchg
xchg
mov
fstpl
inc
cmpl
pop
loop
or
rcrb
sarb
pop
pop
sbb
movsl
sbb
dec
cmp
cmp
sti
test
xchg
cmp
and
xor
stc
push
pop
sbb
adc
mov
cmp
gs
aaa
orl
stos
mov
mov
sub
ret
mov
stc
mov
or
and
movsb
js
loope
sub
push
jbe
cs
xor
scas
lahf
je
mov
add
jecxz
add
sub
push
add
sbbl
xor
xor
lods
push
pop
push
ret
movsb
cmp
inc
and
insl
pop
ret
or
int3
shlb
popf
mov
sub
and
stos
mov
push
inc
cmp
xchg
into
rorb
and
jns
add
mov
jnp
loope
and
leave
movsb
xchg
imul
mov
stos
fxch
push
bnd
jp
out
xor
inc
mov
cmp
jg
lret
mov
mov
xor
sbb
sbb
fs
lret
mov
mov
xchg
das
loop
sub
and
in
jbe
dec
push
and
incl
lock
fnsetpm(287
testb
sub
stos
push
inc
ja
jne
inc
out
lahf
mov
pop
or
cli
jnp
clc
dec
push
xchg
adc
jae
sbb
jg
pop
mov
js
jbe
rcrb
adc
jnp
mov
lahf
or
dec
xlat
rorl
imul
jnp
pop
in
icebp
ds
jbe
cmp
std
push
lret
sar
popa
cmp
xlat
ljmp
outsl
stc
fwait
push
xor
xchg
adc
lods
push
dec
sub
jno
mov
mov
sub
scas
cld
inc
stos
or
xor
pop
pusha
and
enter
mov
pusha
mov
idivb
xchg
mov
loope
xorl
jnp
adc
cmp
push
jge
jl
lret
ja
xchg
xchg
movhps
inc
shll
daa
jge
mov
aad
xchg
in
rcrl
std
jo
roll
mov
mov
sbb
ds
jecxz
cli
les
scas
and
imul
icebp
xor
and
inc
adc
or
or
or
mov
pop
scas
mov
mov
repz
mov
xchg
lods
subl
add
dec
adc
mov
mov
scas
cmp
test
outsl
ret
call
push
addb
daa
jnp
xorl
xchg
pop
xchg
mov
and
mov
psubq
mov
insb
popf
sbb
pushf
pop
mov
or
popf
adc
jge
sub
xor
outsb
int
adc
inc
sbb
cmpsl
ljmp
ret
out
push
pop
loopne
push
cmpsb
aam
test
fcoml
lods
leave
lcall
jb
sar
inc
and
push
inc
jmp
lea
sbb
andps
sub
xchg
cmc
mov
adc
lods
insl
xor
in
pop
and
mov
jp
or
addr16
jne
pusha
dec
aad
imul
fadds
dec
gs
xchg
lret
xor
dec
mov
shll
shr
sbb
inc
pop
ret
loop
les
cmpsb
sbb
sbb
int3
aaa
mov
pop
or
pop
mov
aam
loope
btr
dec
adcl
cmp
dec
out
stos
in
push
sbb
jle
sbb
or
scas
push
and
daa
ret
mov
pop
inc
test
jmp
mov
adcl
mov
mov
fsts
dec
sub
movsb
cs
pop
inc
leave
jecxz
rol
push
ss
out
inc
jae
and
or
int3
cwtl
rol
jge
in
lea
shlb
int
or
inc
movsl
leave
inc
ljmp
jge
aad
popf
pop
xor
xchg
adc
mov
stc
sub
push
lds
je
or
lods
leave
test
add
pop
decb
push
aas
daa
out
cltd
pop
clc
loopne
pop
cltd
xor
or
dec
and
pop
js
ja
ret
iret
ljmp
xor
int
negl
repz
cmp
push
fwait
popa
inc
jecxz
pop
xor
cld
popa
std
sbb
pop
test
ret
mov
xorl
pop
xchg
sub
jb
lahf
xchg
imul
sti
nop
jg
inc
push
sub
mov
pop
pop
cmp
jge
lea
fdivr
mov
loop
push
add
mov
lahf
xor
movsb
cmp
xor
enter
cli
xchg
fimull
xchg
mov
mov
mov
xor
cltd
notl
out
xchg
adc
adc
adc
jb
nop
mov
arpl
rcrl
test
mulb
addl
push
cs
cmc
pusha
pusha
cld
push
and
sub
dec
pop
mov
cmpsb
inc
ljmp
jno
lock
push
lahf
pop
ljmp
pop
gs
outsb
pusha
rclb
sahf
pop
jg
movsb
pop
xchg
sbb
cs
mov
cmp
mov
shlb
sbb
cmp
rep
jns
aas
mov
xlat
adc
aas
mov
cmp
cmc
push
pushf
rcrl
rorl
sti
push
in
fists
sbbl
sub
loope
xchg
ret
xchg
in
mov
cmp
inc
loopne
or
push
xchg
or
adc
xorl
cmp
mov
xchg
setle
incl
jmp
sti
and
pop
xor
inc
inc
pop
mov
adcb
aam
xchg
xor
arpl
and
xchg
sbb
adc
mov
dec
inc
push
pusha
in
clc
add
mov
jge
jge
cli
push
cli
cmc
xor
jo
cmp
lods
pop
push
push
insl
jl
xchg
jle
out
fwait
pop
fnstenv
cmp
or
sti
mov
mov
push
mov
or
dec
mov
fdivr
push
push
pop
icebp
adc
mov
clc
mov
mov
sahf
cli
mov
xor
fcmovnu
jge
repnz
call
or
mov
sub
pop
pusha
loop
leave
dec
je
xchg
lahf
loope
cmp
sub
pop
push
push
test
dec
aas
mov
lret
je
imul
int
cmp
outsl
push
cmp
stc
enter
push
cli
shr
cmp
xchg
xor
push
push
dec
mov
int
mov
mov
push
and
mov
cmp
repz
push
iret
push
pop
pop
add
outsb
cmp
fadds
mov
or
sub
test
adc
push
xor
push
in
xchg
mov
test
push
or
nop
pop
lcall
rcrl
enter
pop
mov
cmp
idivl
dec
out
ret
rcl
aaa
cmp
or
int3
inc
mov
outsb
enter
mov
push
mov
xchg
leave
push
fcomip
addl
sub
into
into
cs
push
mov
adc
test
add
addr16
push
call
call
fidivrl
popf
dec
out
xchg
insl
sub
cmp
fadds
fs
outsb
cld
addr16
cmp
xchg
test
lea
sahf
mov
push
mov
xchg
fdivs
pop
add
pusha
popa
lret
mov
addr16
out
xor
sub
loop
scas
rol
leave
push
ds
xor
cmp
push
xor
sub
in
imul
insl
jecxz
pop
push
stc
jne
push
or
xor
dec
cmp
sub
lcall
adc
pop
jle
or
cltd
std
push
jl
pop
push
adc
sub
cmpsb
repz
push
xchg
int
adc
pop
mov
enter
dec
or
or
push
lds
pop
sbb
in
sbb
push
mov
sbb
jmp
lret
scas
sub
js
fiaddl
in
xor
and
imul
aas
call
add
dec
xor
insl
clc
lods
rcll
dec
mov
jge
cli
jns
lea
lret
stos
push
xchg
fdivr
pushf
shr
push
mov
push
into
ljmp
push
and
push
mov
mulb
lods
fcompl
jo
lea
dec
pop
mov
add
imul
sbb
xchg
dec
xchg
je
mov
hlt
cmp
int3
cmpsb
leave
pusha
mov
out
lret
or
bound
and
fwait
cmpsb
mov
js
fnstcw
cmp
xchg
ficomps
jmp
push
hlt
in
mov
pop
loope
push
jo
cmp
addb
or
pop
or
into
hlt
mov
pop
aam
jnp
jns
scas
push
fists
mov
cmp
xchg
jl
mov
xchg
std
mov
lcall
daa
lds
mov
xor
arpl
mov
lahf
fsubrs
nop
jmp
mov
add
mov
xor
pop
push
dec
in
dec
popa
outsb
out
mov
pop
or
dec
xchg
lods
push
mov
sbb
sarl
mov
lea
dec
jmp
jge
lea
pusha
aam
popf
arpl
jp
push
add
mov
push
into
adc
loop
jns
jp
dec
ss
nop
xchg
in
cmpb
fmull
cmp
pop
fadds
call
bound
adc
add
jns
pop
pop
mov
jle
sar
xchg
sbb
jmp
int
ret
mov
lea
rorl
cmp
adc
or
mov
sub
shl
fldt
add
mov
and
dec
cmpsb
daa
push
lcall
sub
negl
mov
push
fnstenv
pop
mov
add
push
xor
arpl
xor
sbb
scas
incl
or
aam
pop
add
add
ret
or
jp
add
xchg
nop
pop
int
or
in
testl
lcall
aad
xchg
in
push
jno
pushf
test
pusha
add
daa
std
cltd
and
daa
fisubrs
insb
jp
mov
lods
cmp
aam
clc
mov
and
mov
popf
arpl
cmp
fs
arpl
add
fnstsw
xlat
aas
aam
pop
mov
addr16
jns
xchg
test
jle
sub
push
enter
cmpsb
testb
test
shlb
insl
sbb
push
mov
les
mov
and
push
xor
xlat
mov
data16
mov
xchg
int
aaa
or
dec
out
repz
int3
lahf
pop
pop
or
xor
pop
or
mov
sahf
ljmp
add
arpl
insl
test
gs
pop
push
push
or
sub
daa
add
dec
ljmp
in
outsl
or
fildl
movsl
jbe
jl
sbb
in
or
jl
cmp
test
add
mov
stos
pushf
dec
iret
sub
es
jae
orl
mov
clc
push
and
ss
les
xor
lret
mov
test
adc
test
fs
test
adc
push
jns
inc
insb
push
rorb
outsb
mov
leave
fdiv
testl
call
mov
add
xor
add
mov
jmp
push
add
add
mov
out
cmp
rclb
add
push
push
and
mov
cmp
lock
and
mov
lcall
sub
mov
scas
push
fsubrs
xchg
push
adc
ljmp
mov
xchg
mov
enter
das
push
inc
dec
push
bound
push
imul
adc
shll
pusha
test
dec
aam
push
mov
mov
pusha
aad
push
xor
or
mov
ror
outsb
lea
movsl
add
hlt
addr16
ja
outsl
and
adc
add
inc
mov
cwtl
dec
xorb
dec
inc
aam
push
insl
mov
and
pop
jnp
test
mov
lods
loopne
sahf
out
icebp
xor
mov
xchg
xor
mov
popa
in
cmp
sbb
inc
fwait
bound
rcrb
cs
popa
js
pushf
inc
add
mov
repnz
neg
pop
ds
jmp
push
pop
js
fldcw
xchg
mov
idivl
jne
jmp
inc
hlt
lcall
mov
xor
jge
int
loope
outsb
ret
pop
adc
bound
xchg
pop
jbe
jno
ds
lret
icebp
adc
enter
ljmp
rol
xor
cmpb
push
xor
jl
pop
imul
xchg
xor
std
jmp
xor
adc
mov
dec
cmovne
enter
sbb
and
inc
push
push
sub
and
jg
pop
outsl
add
dec
mov
inc
shrb
frstor
sets
out
inc
pusha
loop
mov
sbb
push
fstpl
push
sub
repnz
cmp
fwait
pop
and
ja
xor
dec
repnz
pushl
jecxz
mov
inc
inc
les
xchg
push
outsb
lods
mov
sahf
cld
pop
add
roll
xchg
das
outsl
cmp
icebp
or
fs
sahf
ja
aam
nop
iret
jns
sbbl
mov
pop
sbbl
mov
dec
add
push
jl
and
in
xor
sbb
or
out
sbb
les
sahf
mov
loop
lods
cmp
xor
testb
pop
add
imul
push
add
mov
add
test
cmp
jo
dec
jno
ret
gs
jo
cmpsl
jb
mov
dec
jecxz
xlat
test
and
in
xlat
jne
sbbl
test
div
nop
mov
pop
dec
pop
add
sbb
int3
and
adc
cmc
add
shrb
scas
cmp
fnstenv
xchg
andb
test
imul
jecxz
inc
sub
push
imul
jne
xor
fsubs
fcmovnu
les
cmpb
sub
push
popf
mov
cltd
push
jns
mov
sub
je
aaa
std
adc
cmpsl
dec
jo
das
popf
xor
cs
lret
cmp
xchg
xchg
mov
mov
add
fbstp
bound
dec
cmp
xor
adc
mov
test
push
sub
xor
and
les
aaa
push
or
and
xlat
aas
xlat
ja
inc
in
movsl
adc
lea
test
or
mov
lret
lret
mov
sarl
xorb
xor
mov
add
add
fs
scas
push
jl
xor
xchg
popf
xchg
adc
mov
or
call
add
xchg
fisttpl
bound
sarb
scas
push
cmpsb
adc
rclb
mov
push
imul
pop
mov
dec
fcompl
jo
push
mov
mov
frstor
pop
sbbl
sbb
cmp
fisttps
cld
mov
push
test
jmp
loop
orl
mov
pop
test
mov
or
or
and
ret
ret
push
push
mov
xor
sahf
push
and
cmpsb
dec
xchg
or
notl
pminub
lcall
cli
cs
xor
inc
test
cld
cwtl
icebp
xor
fisubs
jns
cltd
icebp
sbb
push
cmp
mov
xchg
dec
sbb
out
and
push
fildll
mov
mov
or
test
xlat
xchg
xchg
stc
out
fsts
and
pop
in
push
ret
sub
icebp
cmc
in
inc
ja
test
cmp
pop
jns
ja
stos
or
bound
push
mov
xlat
int3
or
mov
lods
sbb
lock
dec
hlt
inc
pop
ss
sbb
cvtdq2ps
adc
jae
repz
mov
mov
or
insl
mulb
es
inc
lea
cmc
ljmp
pop
ret
jo
aad
bound
mov
inc
cmp
lcall
fisubs
jb
and
mov
je
mov
stc
push
cmp
in
vmptrst
popa
inc
mov
jl
pop
xor
jmp
cmc
clc
ret
test
jmp
dec
mov
frstor
lods
repnz
jnp
iret
or
xlat
xor
add
push
into
or
push
ss
aaa
pslld
fidivs
push
lods
pop
mov
add
push
inc
pop
and
and
xchg
add
jge
or
fadd
fisubrl
stos
inc
cmp
mov
int
push
test
mov
push
cwtl
sub
mov
nop
cwtl
adc
ja
xor
push
pop
pushf
dec
mov
addr16
shrb
xchg
sub
mov
std
idivb
xchg
cmc
cmc
pop
shlb
cli
mov
mov
add
in
in
xchg
stos
mov
subb
jmp
pusha
lahf
mov
cld
lock
jo
insl
and
push
mov
cmp
sbb
in
arpl
stc
adc
lahf
push
pop
sarb
push
mov
das
xor
ljmp
fwait
mov
sub
stc
sub
xchg
imul
cmpsb
push
xchg
or
push
adcl
std
aaa
inc
unpckhps
push
ljmp
xchg
mov
cmp
sti
pop
push
rorb
notl
jg
movsb
jbe
pop
aaa
sbb
out
mov
xchg
fs
mov
shlb
mov
mov
dec
jg
into
push
pop
cld
lea
sahf
les
and
cmp
out
in
push
xor
cmpsl
test
shlb
jns
mov
adc
mov
lock
std
mov
dec
pop
pop
das
push
out
or
jno
push
ffreep
or
lods
dec
movsl
test
clc
push
les
mov
je
fs
pop
fisttpll
sub
add
iret
dec
sub
xlat
add
ret
jmp
sahf
lret
aaa
dec
cmc
push
cmc
cmpsb
in
xchg
iret
mov
xor
icebp
ljmp
push
pop
stc
fs
in
pop
into
pushf
sbb
pop
lcall
mov
es
pop
fdiv
out
sarl
adc
clc
ss
das
fsubl
fisubs
scas
into
dec
mov
cmpsb
ret
lret
xchg
or
mov
rolb
cwtl
sbb
adc
call
lds
fstpt
pcmpgtw
dec
fiaddl
xchg
mov
jbe
mov
mov
fmul
in
adc
adc
pusha
mov
jb
addr16
add
fdivrs
push
in
pop
lcall
and
mov
popa
out
imul
mov
mov
daa
pusha
negl
and
in
mov
sahf
mov
push
and
int
sahf
gs
xchg
int
dec
out
imul
cmp
sti
jnp
fldl
lods
sbb
sti
daa
push
push
mov
and
stos
adc
jns
xchg
jmp
sbb
xchg
dec
xchg
out
xchg
imul
cld
mov
inc
mov
and
aas
repnz
sbb
ss
cs
das
xlat
addb
out
shlb
es
mov
addb
imul
xchg
scas
jbe
xor
mov
or
sarl
leave
pop
gs
xchg
out
incb
or
jne
ds
xor
inc
jmp
cs
push
ljmp
sub
dec
out
scas
filds
push
xchg
ja
push
clc
cmpsl
cmp
pop
sbb
push
and
dec
fwait
stc
lods
push
clc
cmp
inc
test
xor
jl
aam
xchg
mov
and
xor
imul
test
jl
mov
adc
imul
xchg
lock
push
inc
cmp
out
pushf
dec
fpatan
out
add
inc
adc
filds
imul
jp
and
adc
imul
or
ljmp
fisubl
loop
jecxz
in
and
and
ret
sbb
lods
add
in
adcl
sbb
outsb
push
jecxz
cmpsb
outsb
push
in
shlb
stos
or
jnp
adc
and
mov
push
popf
add
xor
xor
xorb
mov
mov
jbe
mov
insl
test
lds
ret
ret
neg
xchg
jle
mov
fistpll
fwait
push
cvtps2pi
sbb
imul
pop
pop
jle
shll
pushf
std
int3
pushl
fs
fwait
mov
popf
xlat
out
add
add
inc
repz
cmp
xor
inc
and
jmp
dec
lahf
lea
movb
pusha
mov
lea
lea
fs
cs
out
cmp
cmp
hlt
frstor
mov
or
popa
sub
pop
je
outsb
testl
cmp
push
repz
pusha
scas
jge
jne
test
mov
mov
nop
pop
jnp
jo
inc
dec
push
and
cwtl
inc
mov
mov
mov
push
mov
jg
push
xchg
pop
mov
lods
adc
stos
pop
loop
rcl
adc
xchg
mov
lret
call
xchg
adc
pop
cmpsb
add
push
adc
jle
adc
push
push
jle
push
cmp
and
in
xor
stos
xlat
jb
negl
sbb
fs
add
in
xor
jecxz
adc
jns
fldcw
sub
loope
clc
dec
js
dec
xchg
fimull
add
daa
scas
jecxz
jno
repz
call
jns
xor
push
je
repnz
stos
aad
push
popf
sbb
out
push
ret
test
xor
aad
ljmp
jbe
dec
adcl
xor
rcrl
clc
xor
mov
mov
and
jno
cmp
lcall
in
sti
fwait
imul
jo
in
or
mov
fidivl
stos
xor
hlt
mov
sub
or
sbb
mov
add
push
jbe
movl
xlat
xchg
and
flds
or
popa
add
dec
xchg
lds
fdiv
sub
sbb
bnd
xorl
out
pop
lods
aaa
lret
repnz
inc
daa
in
push
push
add
divb
mov
sub
push
clc
ficompl
push
popf
xor
addb
outsb
push
pop
jo
pop
daa
int
in
sbb
std
aam
scas
and
out
test
clc
adc
out
nop
add
shr
das
nop
scas
dec
dec
adc
sub
in
les
or
mov
sub
sub
int3
lret
mov
push
das
lods
jmp
imul
xor
mov
adc
or
sti
lret
sbbb
pop
or
lret
add
jp
out
aam
mov
mov
out
movsb
ja
sarl
cmp
xchg
in
jl
sti
aam
fistps
enter
popfw
xchg
sbb
and
lea
mov
push
aas
cmp
mov
sbb
dec
jne
push
sti
sahf
sbb
add
lods
icebp
dec
mov
arpl
xchg
outsb
and
aaa
sub
xchg
mov
sbb
sti
push
jmp
std
divb
xor
inc
mov
imul
scas
or
stos
sbb
int3
mov
fldl
push
mov
int3
inc
loopne
mov
inc
mov
inc
movsl
out
mov
adc
out
adc
iret
ja
cli
jle
std
sbb
repz
movsl
mov
les
inc
adc
sbb
adc
sbb
sbb
cmpsl
dec
dec
das
pop
gs
fcompl
xchg
addr16
js
push
out
jo
imul
and
push
lahf
mov
sbb
mov
cmp
in
repz
fmull
mov
xchg
mov
inc
loopne
scas
cmp
pop
rcll
pop
mov
aad
mov
adc
adc
and
rclb
pop
daa
push
cmc
bnd
fildll
xchg
loop
stc
sub
mov
sub
pop
mulb
dec
fstps
mov
mov
psrlw
jno
push
rolb
mov
in
or
popf
enter
sbbl
or
inc
imul
or
out
repnz
and
sub
in
xchg
repz
push
or
mov
in
cli
mov
sub
jle
gs
dec
arpl
test
inc
mov
mov
xchg
iret
lods
into
repnz
lahf
das
in
rorl
sbb
shlb
ds
in
adc
mov
pushf
xchg
or
jg
in
or
scas
je
add
std
dec
jbe
push
push
pop
shl
mov
inc
in
push
mov
fnstenv
les
add
out
mov
mov
aas
push
mov
rclb
subb
sbb
dec
sbb
mov
mov
pop
adc
mov
push
jnp
fidivrs
xlat
pop
add
xchg
sahf
nop
out
mov
in
mov
popf
sub
sbbl
in
fdivs
js
or
inc
jo
out
sahf
sti
cmp
pop
fsubl
mov
adc
in
outsb
sbb
popa
jne
xchg
adc
push
mov
sarb
inc
and
and
push
cli
dec
or
jno
popf
mov
jns
xchg
mov
mov
cmp
sbb
xchg
jg
les
jg
shlb
dec
add
add
inc
fwait
xchg
retw
in
push
cmp
push
shll
inc
outsb
out
cmp
mov
push
inc
mov
push
jnp
push
sbb
pop
repnz
fs
cmp
sub
inc
stos
pop
xchg
cmp
and
inc
cmp
clc
pop
scas
and
movsb
mov
stc
leave
jge
aaa
sbb
push
les
or
fdivrl
call
xor
fwait
cmpsl
xchg
add
in
pop
imul
in
fnstenv
mov
cs
xchg
mov
movsb
hlt
fwait
mov
dec
and
test
int3
inc
add
cmpsl
sub
fdivl
int3
push
fimuls
call
sub
je
ds
fs
inc
nop
adc
pop
lret
test
xor
iret
pop
sbb
and
mov
stos
mov
xchg
lret
in
ds
into
xchg
mov
adc
pop
adc
movsl
pushf
jmp
les
pushl
cmp
inc
test
xchg
into
subl
cmp
mov
je
mov
pop
sub
les
test
movl
xchg
movsb
mov
das
xsavec
outsl
cmp
push
negl
pop
lcall
das
in
out
fstpl
cmpl
mov
mov
push
push
jmp
call
pop
das
scas
push
ret
xchg
fiadds
mov
scas
call
in
mov
icebp
mov
push
pop
sar
sbbb
iret
mov
inc
test
jns
xchg
cmp
add
out
es
and
xchg
mov
and
push
aaa
mov
mov
repz
inc
pushf
es
and
adcl
mov
mov
mov
mov
clc
and
pop
iret
xlat
insb
pop
xor
or
pushf
js
cmpsb
push
push
xchg
pop
or
sbb
sub
add
fisttpl
pop
popa
bnd
pop
cmpl
jmp
sbb
dec
and
pop
inc
movl
pop
push
xchg
inc
gs
gs
cmp
and
insl
push
mov
jecxz
mov
data16
cmpsb
out
lds
mov
popf
xor
jns
mov
cmp
fsubl
cli
cli
xlat
mov
cld
loop
out
inc
xor
hlt
jecxz
ja
addr16
adc
movsl
mov
data16
mov
repz
mov
fdivrp
fmull
xchg
xor
jle
repz
std
xor
push
arpl
add
rol
clc
rcr
mov
ja
push
pop
adcb
or
adc
cmpsb
gs
push
in
inc
push
repz
int3
push
sub
xchg
pop
cmp
adc
cmp
jbe
and
lcall
stos
testl
out
and
lods
in
out
add
test
movsl
loop
pop
bswap
outsl
dec
test
pusha
lcall
in
xchg
sub
mov
xchg
ficoms
inc
in
lahf
pop
pop
or
mov
loope
cli
shll
mov
xor
pop
pop
lods
sub
sbb
xchg
dec
or
pop
add
mov
xor
pop
dec
xchg
xchg
pop
cmp
mov
jl
rcll
int
insl
sarb
jnp
inc
sbb
add
jg
lea
fdiv
add
cmpsb
ljmp
mov
sbb
sbb
lret
seto
pusha
data16
inc
shll
jmp
in
sub
fstps
or
fmulp
in
mov
dec
fcoms
jo
leave
pop
cmp
stc
cmpsb
jbe
sbb
push
jno
sub
pop
nop
push
fnsave
inc
push
add
fwait
mov
and
mov
jp
xor
xlat
adcl
mov
andb
shl
sbb
out
das
jecxz
leave
add
or
repnz
mov
jl
mov
cli
xchg
xchg
ja
fisubrs
aaa
outsb
cmp
jge
test
iret
orl
ret
es
les
xchg
sti
xchg
or
lahf
in
test
cld
cld
movsb
std
std
adcb
sarl
pop
jbe
iret
popa
mov
adc
hlt
xor
adc
int
xor
ljmp
cltd
test
in
adc
insb
aaa
les
enter
xor
rcll
push
scas
xchg
in
pop
ret
dec
insb
cli
inc
addl
xchg
push
jbe
iret
inc
pusha
add
adc
or
stos
cbtw
mov
cli
xchg
pusha
push
fucom
test
push
int3
sub
shrb
pop
loop
fcom
iret
test
aas
mov
cld
shll
xchg
mov
jae
in
addb
out
adc
or
aam
out
outsb
les
pop
aad
mov
jae
mov
cmp
fcoms
out
ds
and
jle
ss
aad
scas
ja
mov
push
xor
mov
jecxz
xchg
xor
lret
enter
icebp
daa
aaa
push
out
jg
mov
sub
adc
xchg
ljmp
test
ss
dec
xchg
dec
jns
jne
push
out
loop
mov
sti
lds
sti
jns
jp
xchg
pop
mov
xor
in
pop
mov
popa
in
push
addr16
sbb
ret
lea
lds
cmp
subb
mov
mov
out
aaa
push
aam
fsubl
mov
loop
in
jecxz
jl
adc
lods
les
ds
aas
push
lret
lcall
pop
push
stos
sub
mov
jmp
in
cli
xchg
pop
std
imul
in
inc
sub
inc
stos
mov
aaa
jmp
and
jne
movsb
rcrl
aas
fisubrs
or
in
xchg
cmp
jns
fs
mov
cmc
fs
add
aas
mov
push
mov
cmpsb
mov
js
inc
xchg
sti
add
dec
or
xchg
cmp
and
lcall
outsl
cmpsb
outsb
sub
enter
add
xchg
sub
scas
testl
lret
lret
jg
xor
in
std
cmp
push
pop
cs
imul
xchg
lods
sub
movsl
sbb
in
jp
or
jmp
or
test
sbb
leave
iret
out
or
adc
adc
lock
jmp
jo
jb
push
scas
cmpsb
movsb
adc
les
outsl
out
mov
out
rclb
cmpsb
or
mov
jmp
inc
mov
cmpsl
mov
and
or
incl
es
shrb
jns
mov
push
inc
mov
push
into
clc
sbb
xchg
lds
sahf
dec
aas
rcrb
cmp
hlt
sbb
dec
xor
pavgb
cmc
js
fnstenv
mov
jnp
out
or
scas
movsb
imul
sub
roll
in
sbb
push
xor
cltd
dec
mov
movl
mov
cmp
inc
mov
pop
mov
add
jns
test
pop
mov
into
test
cmp
movsl
frstor
movsb
out
mov
aam
lret
mov
roll
and
jbe
loopne
push
push
data16
mov
outsl
push
scas
nop
inc
or
lea
and
add
popl
cmpsl
jo
popa
pop
roll
mov
cmpsb
or
mov
push
and
xor
cs
add
dec
out
xchg
test
dec
sbb
call
adc
mov
mov
ja
ss
dec
outsl
lret
cmp
addr16
push
lock
or
or
loope
mov
aaa
movsb
das
inc
jbe
rolb
or
xchg
imul
ficoms
aad
movsb
test
push
pop
es
notb
inc
rorl
push
xor
mov
das
mov
dec
xor
rclb
sub
mov
jo
mov
xorl
shrl
xor
add
xor
das
sarb
mov
adc
jo
sub
cltd
push
jns
fidivs
gs
fimuls
or
insl
jecxz
push
cld
mov
divl
fs
lahf
pop
ljmp
leave
iret
cli
insl
loop
mov
icebp
outsl
pop
mov
jne
das
push
or
push
mov
or
mov
mov
pop
rorb
dec
cli
sub
out
mov
push
mov
call
out
xor
mov
xchg
pop
sbb
insl
push
adc
dec
and
xor
add
push
arpl
cs
push
or
daa
mov
popf
in
fldcw
out
adc
jbe
mov
out
push
push
loope
mov
shr
add
xchg
push
add
add
je
cs
aas
inc
push
popf
in
pusha
out
inc
add
ds
xor
or
int3
mov
clc
push
es
jl
cmc
push
mov
push
stos
mov
fs
out
jnp
inc
sub
xchg
dec
jp
cmp
test
cwtl
seto
or
add
fisubs
js
jne
hlt
test
mov
popa
xor
and
sbb
push
in
insb
jb
mov
sbb
adc
cmp
push
loope
ret
dec
mov
push
or
jo
wbinvd
cli
cltd
movsl
sub
fcmovbe
mov
movsb
mov
test
test
lods
xor
mov
popa
roll
daa
jo
mov
or
dec
xorl
sbb
xchg
mov
fs
test
xor
aad
add
ss
or
xchg
push
or
cmp
adc
ljmp
mov
idivl
les
push
push
push
push
cli
mov
ljmp
jno
mov
add
sbb
push
cmp
and
jg
rol
xor
mov
stos
addr16
orb
add
scas
rcrl
inc
jno
cmp
jmp
push
mull
pop
arpl
jmp
pop
sbb
mov
in
and
add
xor
fsts
cmp
imul
enter
bound
sub
shl
xor
sub
addl
mov
cmp
ds
jbe
xor
ret
mov
sub
ljmp
jp
andb
cltd
add
fwait
js
adc
jns
es
pop
popa
sti
xchg
xorl
hlt
int3
jl
push
xorl
lock
push
mov
jg
cmp
mov
mov
rorl
arpl
fisubs
mov
ret
sub
add
push
cmpsl
sub
je
jmp
imulb
call
test
inc
and
rcl
jge
inc
gs
loop
fidivrs
sub
xchg
pop
inc
fcmovu
xor
mov
les
loope
loopne
stos
adc
leave
mov
dec
and
dec
mov
enter
add
pop
sub
xchg
hlt
hlt
push
out
dec
insl
std
leave
rorl
mov
cmp
or
jno
bound
cmpb
sti
ret
adc
mov
shrb
push
sbb
cwtl
icebp
stos
mov
jl
push
cld
fxch
jnp
or
xor
jb
jb
sbb
cmp
inc
add
test
vmovd
out
mov
clc
fldcw
in
add
and
aaa
dec
sbb
inc
dec
cmp
sbb
pop
and
jo
mov
mov
ficoml
xchg
pop
shrl
js
rorl
in
das
lret
shl
ja
sub
outsl
add
cmpsl
aad
dec
xchg
pop
les
jae
icebp
cmp
jp
stc
pop
cwtl
lretw
fildll
arpl
add
sub
add
push
hlt
insl
scas
jge
fisttps
in
ror
fsubrl
mov
mov
jnp
stos
jo
rorb
enter
ficomps
scas
inc
inc
lcall
jmp
ja
mov
jmp
adc
rep
bound
dec
cmc
cmp
pop
scas
push
nop
aam
nop
cmp
mov
xor
inc
pop
inc
adc
mov
outsb
xor
in
adc
xor
in
sarl
and
loop
sbb
dec
test
pop
pop
rorb
xchg
inc
filds
and
cld
mov
mov
cwtl
imul
js
fisubrs
cs
iret
lds
pop
or
dec
push
pop
dec
loop
xchg
int
rcrl
ret
xor
test
dec
push
cmpsb
sbb
daa
repz
pop
jns
dec
loope
notb
adc
mov
mulb
or
pop
lock
mov
or
fwait
pop
hlt
sub
jl
lahf
adc
push
shlb
add
jmp
test
or
mov
cli
mov
loop
xchg
mov
mov
mov
sbb
ss
dec
sbb
pop
popa
repnz
mov
cld
pushaw
aaa
jmp
pop
fs
pop
xor
cmpsl
lret
idivl
lock
mov
nop
adc
pop
insl
mov
or
inc
lock
aad
mov
xlat
and
mov
daa
push
jb
stc
jle
pop
push
pop
shr
fdivs
cltd
mov
cltd
inc
xchg
aam
cmp
ret
xchg
lock
mov
scas
jnp
xchg
fisttps
cmpl
adc
push
sbb
cs
out
mov
ja
mov
or
xchg
push
cmp
inc
inc
and
lods
rolb
js
stos
call
das
and
inc
fcmovbe
xchg
call
add
bsf
push
sbb
ljmp
iret
cmp
add
add
or
jb
sti
xchg
repnz
xchg
cs
lods
sbb
add
mov
xchg
jecxz
lahf
jmp
push
and
fimull
dec
push
xchg
pop
fs
fistpll
sbb
jno
enter
jp
add
sub
cmpsb
mov
test
dec
imul
inc
ret
mov
mov
inc
cmp
fldenv
testl
and
cltd
or
add
insl
add
std
push
dec
iret
mov
mov
lret
pop
push
and
pop
xchg
mov
rol
or
dec
addr16
xchg
pusha
ljmp
fbld
repnz
pop
subb
sbb
loopne
fidivrl
push
mov
rorl
loop
sbb
xchg
jl
mov
xor
clc
cmpsl
ret
fldcw
sub
xchg
es
outsb
insb
insl
push
cmp
mov
push
nop
sti
push
sbb
scas
xchg
dec
cmp
dec
cmp
cmpsb
adc
xchg
mov
xor
mov
push
stos
jmp
mov
push
and
pop
jmp
test
inc
insl
jecxz
adc
cmp
push
xor
ja
sbb
and
cmp
rorl
out
pusha
fcomps
ljmp
decb
pop
inc
aas
mov
push
repnz
xchg
add
sbb
dec
outsl
popaw
jns
shrl
sahf
cmp
pop
outsl
xchg
and
aas
push
add
pop
popa
call
cs
dec
in
mov
sub
pop
push
adc
adcb
cmc
mov
gs
cli
mov
mov
cld
ret
sub
add
andb
push
sub
les
mov
stos
out
aas
repnz
dec
pop
sbb
incl
push
push
dec
mov
push
and
je
test
nop
outsl
enter
outsb
push
dec
mov
cs
in
imul
or
aas
ret
and
loop
xlat
mov
or
xchg
lahf
js
push
in
cmp
call
std
iret
cmpsl
xchg
push
ret
movsb
rol
or
jb
fcmovnbe
fwait
aas
sbb
clc
fucom
add
jbe
mov
or
jle
mov
scas
jno
into
aaa
test
adc
mov
lea
ds
arpl
fucomip
xchg
testl
fdiv
loope
call
scas
mov
mov
pop
push
data16
pop
cltd
out
lods
pop
sub
mov
or
or
jge
adc
out
dec
sbb
mov
inc
jmp
test
movsl
lret
es
mov
fst
sahf
inc
xor
push
out
f2xm1
iret
xor
popa
xchg
icebp
in
je
add
test
daa
loopne
inc
dec
lods
push
or
push
fwait
les
sarb
lret
jge
pop
std
sub
push
stos
xchg
lds
mov
pushf
out
loopne
pusha
fnstsw
push
mov
inc
aas
addr16
popa
gs
ljmp
es
daa
or
or
pop
fstps
xchg
sbb
ljmp
sub
loop
mov
lret
adc
pop
dec
pop
in
sahf
mov
inc
iret
test
stos
dec
mov
xchg
js
hlt
push
mov
mov
mov
dec
into
adcb
ficoml
push
adc
rcrb
pop
push
jo
lock
dec
add
dec
add
call
inc
push
imul
pop
fcmovnb
pusha
fst
adc
lods
sbb
cmp
inc
outsl
mov
pop
nop
jmp
inc
sahf
and
test
data16
jbe
fadds
loope
mov
shrd
and
int3
push
jne
cmp
in
fdivl
mov
in
rolb
pusha
iret
xchg
mov
mov
inc
mov
mov
notl
in
and
mov
jecxz
cmp
mov
and
mov
mov
or
xchg
and
xchg
sbb
mov
fadds
outsl
jl
in
fcompl
test
xchg
mov
pop
lcall
jp
or
sub
adc
in
and
push
add
enter
push
xchg
mov
xor
adcb
xchg
jb
xchg
jno
jnp
lcall
and
enter
sbb
or
pushf
bound
or
cmp
hlt
cwtl
cmpsb
insl
ret
shrl
xor
push
pop
adc
dec
jge
fidivl
push
sub
andl
sbb
inc
sti
add
mov
mov
mov
aam
in
je
fildl
inc
imul
cmpsl
fisubl
xor
sub
mov
ret
sub
ret
sub
lret
dec
rorl
xor
jmp
insb
dec
pop
xchg
jo
pop
call
pop
aaa
xchg
mov
je
iret
push
and
and
inc
pop
popf
xchg
out
enter
pop
ficoml
adc
sub
push
mov
in
out
jnp
adc
out
shlb
outsb
xor
int
mov
add
aas
and
insb
cmp
imul
inc
mov
jecxz
jg
outsb
and
into
inc
imul
pop
sahf
loopne
es
pop
push
fwait
push
lcall
mov
or
push
mov
xchg
movsb
sbb
int
stc
xchg
inc
and
push
in
icebp
lahf
push
cmp
mov
aas
dec
xor
jb
ror
inc
sub
jns
arpl
push
inc
xchg
mov
xor
inc
add
add
nop
movsb
ljmp
jl
push
movsb
shlb
mov
sbb
xchg
inc
sbb
rcll
sub
pop
xor
in
xchg
iret
das
setnp
arpl
lock
jb
cmc
out
and
test
bound
inc
inc
sub
push
xchg
fistpl
loop
mov
dec
sbb
sbb
cmp
loopne
sub
cld
dec
out
xchg
negb
jb
push
push
stc
cmp
mov
daa
das
dec
mulb
push
adc
daa
ss
push
mov
cld
mov
inc
stos
xchg
mov
xchg
int
in
ss
cmpsb
cmp
test
addl
pop
xlat
dec
and
cwtl
jg
mov
inc
ret
mov
jne
xor
loop
pop
add
jmp
scas
and
mov
add
popf
rolb
addr16
or
mov
aad
inc
inc
push
popf
dec
hlt
cld
lock
movsl
mov
sbb
rclb
and
push
inc
mov
and
mov
ret
rcr
lds
push
add
mov
push
cmp
xchg
lods
in
lods
sbb
repnz
outsb
cmp
sub
xorl
sbb
xchg
jbe
cmpsb
cs
add
into
popa
imull
je
inc
push
xlat
push
dec
js
cwtl
fstpt
pop
xor
mov
pushf
jbe
iret
sarb
cmp
lahf
pusha
orl
sbb
mov
sub
sbb
pop
movsb
mov
xor
adc
push
repnz
xchg
sbb
in
lahf
hlt
push
xchg
lock
js
mov
pop
push
test
cltd
sbb
add
pushf
push
ret
std
push
cmp
adc
cmp
hlt
sbb
xchg
xchg
pop
aam
call
jo
in
xchg
jl
xchg
jp
push
pop
enter
rorb
jnp
cmp
out
pop
dec
push
gs
adc
decb
nop
xor
sub
mov
add
pop
dec
call
int
int
imull
fcoml
and
test
fdivl
sahf
div
adc
push
or
push
xlat
fisubs
cli
pop
jge
ret
jl
out
mov
sub
addr16
aas
fidivl
mov
into
dec
or
cmc
and
rol
add
push
mov
xor
xchg
add
in
mov
lods
movsl
cmp
das
and
les
lahf
es
lods
push
and
fdivrl
jbe
out
lds
jp
mov
sbb
pop
adc
cmp
fidivrs
inc
mov
ds
jns
ret
mov
fistpl
inc
jno
and
shr
xchg
aas
jae
das
mov
cmp
add
shlb
add
mov
call
jmp
outsl
push
enter
fistl
xlat
sub
xchg
out
fists
jb
xchg
ret
negb
jo
sub
xor
mov
xchg
jae
mov
and
xchg
out
cmp
push
push
fistps
mov
jecxz
bound
pop
jl
stos
clc
clc
cltd
iret
push
imul
adc
mov
push
fs
push
sbb
mov
mov
fdivrs
sub
pop
clc
fwait
fs
loopne
pop
inc
repnz
or
push
stos
pop
out
pop
jecxz
test
jbe
out
out
dec
fildl
outsl
mov
or
mov
xor
or
sub
mov
xchg
in
push
ret
xchg
cmp
push
shlb
arpl
movl
lock
xchg
or
add
mov
adc
shrd
cmp
test
negb
fistpl
sti
insl
addb
mov
fimull
mov
mov
cli
movsb
loope
fcmove
pop
ret
mov
dec
pop
fcoml
fneni(8087
int
faddl
xchg
pop
in
es
dec
lods
pop
loope
pop
sbb
dec
mov
sbb
lods
push
gs
imul
pop
mov
push
stos
push
mov
test
sub
xor
mov
adc
pop
or
cmp
xchg
loopne
xor
sub
pop
mov
mov
xchg
cltd
xor
jnp
push
jbe
xor
sub
sub
leave
fs
insb
mov
in
clc
adc
popa
mov
cli
push
dec
ret
mov
mov
cmp
insl
xor
mov
cwtl
loopne
stos
pop
scas
daa
jae
fcoml
ret
iret
mov
mov
lret
sbb
repnz
shl
loope
push
push
out
orb
aas
ja
sub
inc
add
sti
or
or
outsb
lds
sub
xor
out
sbb
repz
pop
sub
aas
pushf
xor
sbb
inc
xchg
push
aaa
xchg
lods
testb
mov
fsubrl
pop
mov
sbb
mov
cmpsb
sbb
mov
mov
xchg
and
mov
jns
es
repnz
cltd
sub
push
imul
out
push
mov
dec
daa
clts
ds
sub
mov
cltd
xchg
jp
lahf
inc
int3
adc
pop
faddl
sub
dec
shrl
jo
enter
xchg
imul
stos
in
jne
dec
in
repz
inc
pushw
mov
xor
iret
mov
inc
or
cmc
adc
jnp
push
xchg
fdivs
test
dec
xlat
mov
outsl
stos
push
ljmp
xchg
sub
push
lea
mov
cmp
cmp
out
and
fdiv
sbb
sbb
test
mov
mov
pop
in
push
push
inc
inc
push
inc
mov
mov
int3
imul
lcall
push
aad
mov
es
ret
mov
loop
add
mov
fildl
out
push
add
push
adc
xor
jg
mov
mov
nop
sub
mov
inc
cmp
or
push
mov
sub
push
jge
jg
mov
clc
or
dec
into
jmp
fisttps
fistpl
lods
stc
mov
cltd
add
addb
ja
int
lock
inc
pop
sahf
fisttpll
shl
push
cmp
fldenv
adc
subl
pop
adc
aad
mov
lret
xchg
fildll
xor
inc
dec
int
xor
int3
imul
mov
jno
out
jge
in
js
add
bound
or
push
fbstp
sub
mov
adc
test
mov
imul
mov
in
xlat
mov
jmp
ds
out
push
leave
stos
bswap
js
nop
popf
popf
dec
add
or
mov
sub
jle
jl
add
inc
mov
lock
dec
subl
popf
pop
gs
jo
loopne
dec
inc
adc
addl
inc
xor
mov
or
sahf
push
jp
mov
dec
sbb
arpl
nop
sub
and
insb
jnp
into
clc
pop
scas
jl
pop
popf
xchg
inc
cmpb
lods
js,pn
jle
sbb
xlat
or
mov
mov
scas
push
lahf
xor
addl
mulb
and
cwtl
scas
lock
mov
pop
or
pop
inc
addr16
push
shrl
lds
mov
xchg
xchg
rcll
cli
xor
inc
jp
aas
mov
rclb
pop
sahf
push
fwait
dec
inc
dec
fisttps
repz
outsl
je
jbe
xor
mov
xor
push
int3
repz
test
cmpb
fildl
inc
ret
loopne
cmp
stos
inc
mov
mov
movsb
enter
and
lahf
mov
pop
into
aad
lret
and
dec
mov
leave
cmc
cltd
pop
mov
ds
push
jns
bound
jle
sbb
add
dec
dec
es
out
cltd
dec
inc
out
mov
xor
sahf
imul
add
in
jbe
mov
ss
fimull
pop
loop
jae
jnp
pop
imul
mov
scas
push
fimuls
stos
fcoms
push
bound
push
rcl
aaa
xor
out
jecxz
jno
fsubl
fsubl
movsl
push
xor
out
jb
fwait
sub
push
and
adc
mov
push
dec
cmpsb
loope
jge
mov
popf
jnp
fdivrs
rcrl
push
mov
mov
pop
cmp
dec
ja
fldl
mov
outsb
xor
cltd
pop
xchg
data16
cmp
push
loopne
mov
sahf
or
push
mov
xchg
or
es
cmp
jmp
addr16
adc
mov
add
ds
scas
sub
icebp
ss
adc
dec
out
test
mov
out
iret
test
pop
and
sub
push
inc
xchg
cmp
and
popa
lcall
in
je
in
cmp
insl
loop
cmp
add
bnd
push
jo
dec
adc
movsb
jge
in
cmp
pop
push
pop
loopne
in
dec
or
idivb
xor
lock
jmp
out
mov
push
test
pop
mov
jns
inc
jne
mov
inc
push
cmp
leave
pop
test
and
out
ret
mov
gs
cld
mov
xchg
pushf
mov
mov
fadds
mov
cli
cmp
addr16
cltd
loopne
lret
sub
fnstenv
cltd
cmp
bound
test
cmp
mov
pop
mov
xchg
aaa
or
int3
ret
mov
cmp
lcall
push
xchg
sbbl
inc
xchg
push
mov
mov
sub
js
fnsave
inc
dec
lock
nop
js
sub
jecxz
push
iret
test
sahf
test
mov
push
dec
pop
icebp
xchg
ds
pop
adc
mov
and
fildll
mov
fisubs
push
sbb
mov
daa
inc
sti
sbb
cltd
add
add
in
or
sarl
xchg
out
lds
sub
xorl
or
sub
out
jl
mov
aam
rcl
mov
stos
mov
xchg
popa
rcrb
push
cmp
inc
or
shrl
cmc
fsubr
dec
pop
lock
jp
in
sbb
aam
lds
inc
or
sub
es
lcall
jbe
xchg
jg
mov
mov
xchg
cmp
inc
addl
push
lahf
cli
popa
pushf
pop
ret
sbb
and
xchg
dec
cmp
lcall
pop
inc
outsl
push
lock
add
cs
jno
adc
cmp
lock
mov
adc
lret
or
add
jl
aaa
cld
testl
xor
mov
xchg
mov
in
xchg
pop
std
inc
mov
mov
int
cwtl
pushf
xchg
adc
lods
cmpsb
dec
outsb
xlat
lahf
sbb
xchg
mov
inc
cmp
icebp
push
loop
je
movsl
mov
xchg
sub
sti
jl
inc
jae
cmp
cmp
sub
in
sub
dec
test
adc
addl
mov
loope
xchg
mov
movsb
or
loop
push
xor
ljmp
push
xchg
mov
add
pop
gs
pop
repnz
cld
and
push
scas
lea
mov
jg
stos
outsb
test
adcl
test
pop
pop
add
repz
mov
sub
add
leave
or
cmpsb
inc
lock
pop
sarb
shl
int3
fstl
sarb
dec
xchg
out
mov
mov
mov
repz
mov
lods
adc
jge
out
mov
mov
sub
pop
sbb
divb
lret
lcall
je
adc
inc
mov
and
cs
mov
es
or
xchg
push
rep
dec
inc
xor
and
pusha
jg
dec
orl
sahf
add
repz
jo
and
repnz
cs
ljmp
jns
xchg
jmp
jge
int
xchg
xor
in
jmp
scas
sarb
add
cmp
jb
js
push
and
cltd
enter
aam
shl
enter
and
les
fdivl
rolb
mov
cmp
sub
mov
psubw
xor
mov
sub
jb
dec
push
sub
push
aam
push
test
stc
or
push
and
jne
dec
inc
mov
push
inc
sub
and
jo
sbb
adc
xor
dec
jae
mov
repnz
mov
andb
pop
xor
psrlw
clc
std
leave
mov
fmulp
xchg
cwtl
xchg
adc
pop
mov
mov
dec
mov
mov
stos
fdivl
stos
xlat
insb
inc
pop
lods
aam
pusha
pushf
out
sub
adc
push
pop
sub
dec
rclb
out
mov
js
mov
jb
mov
fimuls
test
pop
mov
stos
pop
jno
cmp
aad
shrl
popa
add
les
mov
xor
stos
insb
xchg
gs
fsts
jnp
adc
outsb
test
push
xchg
adc
pushf
push
rorb
sbb
xchg
dec
cmp
add
popf
jmp
fisubrl
gs
jns
mov
or
in
push
xchg
push
aaa
jmp
lret
xor
daa
imul
outsl
and
imul
mov
icebp
leave
outsb
out
push
xor
popa
push
dec
or
popf
decb
nop
jnp
inc
int
lahf
clc
clc
loopne
mov
loope
xor
test
mov
testb
mov
add
dec
aaa
addr16
xchg
mov
mov
pusha
mov
dec
pop
imul
dec
or
sahf
loop
sub
cs
jmp
leave
jno
mov
stos
aas
insb
push
push
test
mov
aad
popf
sub
mov
push
lds
cmp
lods
lea
repz
sahf
pop
cmp
into
ret
clc
les
mov
dec
mov
lcall
repz
test
and
lret
mov
rol
xchg
in
loopne
inc
maxps
mov
xchg
subl
mov
sti
das
fisubl
sbb
sbb
sbb
adc
call
mov
xchg
mov
iret
ljmp
aam
pop
sbb
sbb
mov
popa
jno
mov
mov
adc
pop
dec
ret
inc
add
or
fadd
mov
ret
push
adc
jbe
data16
xor
iret
aas
int3
mov
cmp
cld
pop
mov
mov
push
out
xchg
sub
daa
sbb
sub
inc
xor
push
out
dec
pop
mov
test
lcall
jge
stos
scas
lret
sbb
cmc
xchg
mov
cmp
leave
in
push
cmp
xchg
jl
rorl
xlat
std
mov
sub
aaa
aam
clc
add
mov
cmpsb
cmp
mov
mov
pop
xor
rcll
mov
popa
hlt
iret
and
mov
or
jge
or
mov
cmpl
mov
add
stc
or
ror
mov
or
pop
test
mov
sbb
xor
and
or
inc
int3
sbbb
fnsave
adc
popf
iret
sbb
inc
xor
xchg
lock
movl
std
inc
ja
inc
dec
push
pop
mov
hlt
add
xor
jns
movsb
cmp
push
iret
jnp
cmp
clc
push
aad
test
push
inc
sar
decl
sub
jbe
loop
xchg
pop
in
or
push
cmpsl
lcall
inc
aad
outsl
mov
lods
in
dec
out
addr16
jb
inc
enter
push
mov
and
aaa
mov
mov
cmp
sbb
lods
jmp
int3
dec
sub
test
jo
mov
and
mov
out
cmp
mov
fcmove
jle
pop
repz
testb
pop
imulb
dec
mov
mov
mov
jbe
and
pop
inc
jle
push
ja
lock
jle
pop
loope
insb
pop
fcmovne
dec
add
shlb
sub
add
lock
xchg
dec
iret
mov
test
in
xor
aas
frstor
lds
fs
lret
data16
xchg
andb
mov
dec
inc
lods
pop
mov
xchg
pop
int3
jecxz
mov
hlt
inc
pop
mov
arpl
imul
xchg
jmp
sarb
add
aam
mov
push
xadd
mov
mov
jmp
sbb
je
mov
or
hlt
lock
mov
add
out
mov
or
pop
pushf
push
lret
imul
mov
push
add
je
inc
clc
mov
pop
sbb
data16
xor
mov
jns
sub
mov
xchg
adc
fs
ja
mov
mov
aas
cmp
jmp
add
push
xchg
xor
and
push
sub
xlat
decb
fdivl
test
pop
pop
outsl
or
rorb
das
xchg
lret
dec
mov
nop
and
pop
iret
add
and
sub
add
add
cmp
mov
fs
movl
sub
mov
dec
das
fstps
xor
ret
dec
push
out
xor
pop
adc
mov
mov
aad
mov
jmp
gs
or
lcall
cmp
fiaddl
stc
lock
push
sub
aam
in
imulb
pop
outsb
or
mov
aam
mov
pop
jge
jbe
and
xor
fstl
sub
pop
imul
and
mov
dec
pop
mov
mov
rolb
and
inc
ss
subl
mov
sbb
leave
hlt
stos
cltd
mov
mov
pop
inc
mov
adc
lret
mov
xor
xorl
pop
lock
lahf
cmp
push
es
jae
jecxz
popf
xchg
icebp
jae
and
add
jmp
shrb
fistl
aad
xor
adc
lods
ror
sub
jle
sbb
push
push
cmpsb
or
jbe
lea
inc
xchg
sti
push
leave
gs
out
mul
cmpsb
adc
aaa
mov
movsl
loop
int3
mov
mov
das
les
aas
mov
jbe
add
add
or
jnp
cwtl
clc
cmpsb
andb
xchg
cmp
xor
sbb
adc
cmp
xchg
or
mov
aam
mov
jne
insb
bound
clc
push
cli
push
or
cs
xchg
add
jecxz
arpl
mov
cmpsl
push
xor
mov
xchg
and
inc
xor
jae
mov
mov
mov
jle
inc
cmp
jbe
mov
imul
pop
repz
dec
xchg
repz
push
jmp
in
pop
mov
pop
dec
jo
and
nop
enter
movsl
sbb
aam
popa
adc
dec
leave
mov
filds
cmp
lea
jge
mov
pop
mov
or
pop
pop
in
popa
xchg
cld
jmp
mov
mov
decb
xor
xor
inc
sub
lret
sub
pushf
push
add
clc
testl
cwtl
add
addl
in
lcall
dec
and
adc
test
add
out
add
mov
imulb
lret
outsl
cmp
and
rcrl
sub
mov
push
mov
mov
repnz
sub
mov
and
and
ficompl
mov
fmuls
mov
mov
ds
xchg
into
nop
fxch
stos
pop
into
mov
xor
lock
mov
ss
mov
push
jge
sbb
or
lds
dec
cli
jnp
mov
cmp
push
and
push
dec
fbld
daa
xor
pop
daa
push
movsl
xor
insl
mov
int
xchg
sbb
adc
pop
add
or
rorb
add
fwait
dec
xchg
minps
push
mov
push
inc
pop
dec
inc
daa
xor
out
std
push
pushf
xor
jle
repnz
loop
xchg
lods
les
jecxz
inc
mov
sub
outsb
aaa
clc
outsb
mov
outsl
mov
push
cwtl
iret
cmpsl
jecxz
ja
shrb
jle
call
jle
movsb
cmpsl
mov
lahf
fdivl
stos
paddd
cmp
insb
cmovs
pop
xor
lods
push
pop
and
push
fisubl
mov
cmp
sbb
mov
js
les
fstps
std
push
repz
jecxz
movsl
pop
loop
imul
cmp
or
sub
mov
fdiv
fnstcw
fnstcw
jne
testl
test
pushf
sub
cmp
out
je
imul
pop
mov
or
ja
clc
push
inc
or
and
adc
mov
or
xorb
movsb
int
or
cmp
push
sbb
lods
push
cmpsl
inc
add
jno
or
mov
and
jns
pop
mov
imul
shl
dec
pusha
jb
mov
lea
ds
sbb
lret
hlt
fistpl
mov
ret
mov
mov
adc
test
in
xorb
ror
loope
inc
mov
jmp
and
cmp
mov
pushf
jg
cli
ds
cmp
js
jle
add
js
cmp
adc
outsb
cmpb
mov
jg
fisttpl
or
push
sub
jecxz
mov
data16
lret
imulb
mov
in
push
and
xor
push
stc
mov
and
push
inc
xlat
sarb
sub
cmc
fbstp
xor
push
mov
loope
mov
lret
push
das
incb
shlb
icebp
adc
fidivrs
mov
stos
test
pop
stos
repnz
gs
xor
aad
mov
sub
movsb
aaa
jg
out
jno
pusha
dec
dec
pop
mov
enter
in
inc
mov
inc
pop
inc
pop
sbb
dec
xchg
js
mov
cli
mov
cli
in
inc
and
pop
jg
fdivs
pop
jmp
sub
int3
mov
jl
xchg
outsl
adc
mov
mov
jl
sub
xchg
xchg
leave
sahf
call
aam
scas
outsb
cltd
ds
orb
cmpsl
adc
push
iret
insl
sbb
jecxz
es
xchg
ficompl
je
adc
dec
sub
mov
repnz
outsb
xchg
test
and
jne
dec
push
adc
cmp
stc
xor
mov
mov
loope
mov
jns
in
mov
int
jmp
fs
jbe
inc
aam
pop
leave
into
xchg
stos
outsb
mov
outsb
roll
or
test
mov
dec
aam
loopne
je
pushw
jge
lcall
xor
adc
ror
movsl
fcmove
inc
pop
int
aas
adc
xor
loope
adcl
xor
leave
jbe
fisttpll
mov
cmp
inc
inc
adc
adc
ret
cmp
cmp
sbb
dec
jmp
jp
jnp
pop
jb
inc
into
xor
lods
call
xor
mov
jle
mov
sarb
xor
loopne
adc
das
add
jle
mov
xchg
dec
push
das
mov
or
jne
jae
ljmp
je
xor
xchg
pminub
cmp
xchg
fwait
inc
push
or
mov
push
jae
sub
dec
mov
dec
ret
into
sbb
rcrb
out
pop
jl
dec
inc
int
jg
loopne
jb
inc
into
jge
sub
add
pop
imul
sahf
hlt
addb
mov
cmpsb
adcl
sbb
adc
xor
or
push
aaa
add
pop
xor
jl
in
test
pop
mov
push
mov
mov
xor
loopne
adc
sbb
sub
add
jmp
jae
cmp
out
int
pop
xchg
aas
inc
cli
mov
sbb
add
ljmp
push
jnp
icebp
jnp
movsb
dec
dec
add
cmp
dec
ja
xchg
rcll
cmp
or
xchg
cmp
in
ret
cmp
clc
ret
out
aas
imul
repnz
into
mov
mov
fstps
adc
cwtl
sti
dec
push
sub
mov
insb
xor
mov
es
sub
and
xchg
in
out
sub
mov
ret
ret
rorl
mov
insl
xchg
rcl
jnp
jnp
mov
push
pop
loope
jo
hlt
js
loop
mov
jae
xor
dec
ja
cmp
lcall
and
ljmp
adc
xor
scas
inc
mov
cmc
adc
ds
dec
push
imul
inc
out
cli
fdivrl
mov
out
jae
stc
int
push
sbb
xlat
scas
sub
out
mov
and
popf
dec
cwtl
loope
cld
rol
ret
cwtl
pop
add
lahf
xchg
test
lret
lods
mov
sarl
and
lds
insb
push
ja
and
mov
add
xlat
adc
pushf
lods
push
fwait
cmp
cmp
leave
out
dec
mov
cmpsb
mov
cmp
clc
mov
arpl
cwtl
popl
jl
je,pn
ds
adc
xor
dec
push
hlt
jl
cmpsl
jecxz
mov
cltd
mov
not
popf
call
jno
push
jns
cmpb
lcall
pop
mov
addr16
jmp
mov
lods
in
movsl
rcrb
lret
daa
dec
call
dec
sbb
mov
pop
nop
push
inc
or
cli
sbb
nop
pop
pop
xchg
jge
cmc
xor
mov
pop
lret
xchg
inc
fstps
daa
aaa
xor
ja
sub
ds
inc
fnsave
dec
inc
sub
insb
jb
call
mov
push
jbe
scas
mov
cmp
leave
xchg
ds
pop
test
imul
icebp
cli
into
das
push
jo
icebp
xor
mov
mov
hlt
test
pop
out
jmp
fistps
sub
call
add
and
fcomi
adc
mov
sub
cmp
jae
mov
sub
push
call
nop
xor
cmpsb
pop
inc
fldl
loope
in
dec
inc
adc
in
out
add
adc
ss
imul
js
xor
mov
pop
or
and
pop
inc
hlt
fbstp
xor
and
push
mov
adc
mov
sbb
cld
arpl
add
mov
aaa
xchg
sub
sbb
out
lods
adc
movsb
cmp
test
lods
es
repz
xor
jb
movsb
mov
subl
lock
push
push
xchg
jle
lcall
repnz
inc
xchg
lret
popf
clc
iret
or
stc
xchg
jbe
push
cs
and
push
repz
add
les
sub
xchg
add
cmp
fidivrs
nop
push
lcall
add
je
push
xor
pop
xchg
push
sbb
xchg
xchg
std
jne
xor
shrl
pop
xor
and
aad
lret
subps
inc
xchg
jge
jp
insl
adcb
mov
push
xchg
push
cwtl
adc
pop
iret
pusha
dec
inc
xor
push
mov
int3
add
inc
jmp
push
enter
mov
out
inc
ds
jecxz
xchg
sbb
push
in
je
imul
cltd
mov
inc
inc
or
stc
mov
loope
cld
sti
add
xchg
aam
shlb
mov
rcl
subb
mov
push
cmpl
push
xor
test
xchg
xchg
cmp
das
and
movsl
rol
rolb
pop
xlat
roll
mov
mov
in
into
sub
loope
insl
iret
mov
mov
loop
call
sbb
stos
push
xor
jb
pop
loopne
mov
pop
enter
sub
cltd
mov
sub
and
imul
mov
and
ror
dec
and
je
xchg
in
fdivrl
mov
lcall
scas
pusha
fs
in
push
jmp
pusha
dec
mov
sti
mov
sbb
mov
loopne
push
frstor
sub
sbb
leave
mov
loop
sub
add
pop
movsb
outsl
out
pop
rolb
jns
pop
pop
mov
out
xor
in
pusha
int
or
fdivrl
pop
dec
mov
pop
inc
dec
cmp
sbb
sub
xchg
shll
stos
mov
stos
pop
mov
nop
dec
lahf
pusha
dec
repz
repz
mov
sti
xchg
xchg
adcl
mov
xchg
mov
or
jl
adcb
mov
pop
xchg
popf
mov
cwtl
push
int
add
or
jle
jge
xor
fsubr
fwait
cmp
ss
out
insl
jne
std
or
dec
pop
pop
andb
jmp
mov
and
add
lock
and
xor
mov
sbb
mov
mov
jbe
xchg
lods
xchg
ret
aam
movsl
popl
mov
ret
pusha
aad
mov
sbbl
scas
jmp
and
lods
mov
imul
lock
jbe
or
les
repz
adcb
out
sub
test
in
data16
sbb
sub
bound
pushf
ret
std
xor
mov
insb
ljmp
sbb
xchg
mov
inc
sub
adc
in
repnz
in
mov
test
mov
inc
andl
jb
mov
push
inc
mov
ljmp
xchg
dec
ljmp
fimull
and
rcll
data16
popf
adc
sub
lds
aad
inc
das
mov
ja
divb
or
fidivl
daa
insl
sbb
xchg
stos
aaa
rorl
dec
movl
in
push
loop
insl
shlb
stc
cwtl
mov
xchg
roll
mov
sbb
pop
pushf
pusha
out
adc
lret
cmpsl
and
stos
int
adc
sti
in
sub
fisubl
and
pop
dec
test
das
xor
aam
ss
js
aam
cltd
das
addb
lods
xchg
pop
jae
hlt
ds
cmpsl
xchg
mov
pop
sbb
ficoms
insb
lds
punpckhdq
mov
out
xor
adc
insb
not
outsb
inc
fistps
bound
dec
cmp
stc
push
dec
sbb
dec
out
dec
jno
cli
outsb
outsl
test
not
fstpl
subl
daa
mov
xchg
sbbb
push
ficoml
stos
test
cmp
divb
pop
ficomps
mov
add
inc
and
in
sbb
jecxz
shrb
xor
dec
fs
sti
pushf
xorl
aaa
frstor
int3
fdivrl
mov
aad
pop
and
jge
cmp
mov
jb
cmp
xchg
inc
push
sbb
sub
sbb
lea
fildll
test
test
outsb
lock
jnp
icebp
and
mov
sbb
leave
add
push
fiadds
mov
lret
or
push
pop
rolb
leave
in
cli
pop
cmp
nop
int3
sbb
sbb
fs
repz
xchg
pop
xchg
aam
pop
inc
dec
or
insb
unpckhps
xchg
cmpsb
scas
add
std
push
lret
inc
xor
lahf
loopne
cs
sbb
in
adc
dec
fists
dec
lods
jns
repz
jecxz
rol
sbb
cmp
mov
push
pop
jae
jmp
ret
rcrb
sbb
mov
out
push
les
pushf
popf
dec
call
stos
pushf
mov
inc
cmpl
dec
push
jae
or
jne
leave
mov
jp
sub
pusha
push
adc
pop
scas
cmp
mov
in
mov
xor
pop
add
adc
test
nop
sbb
subb
iret
or
icebp
mov
and
inc
outsb
cmpsb
loopne
xor
sbbl
mov
dec
or
je
mov
inc
and
andl
push
fmulp
mov
jl
sub
aam
ja
xor
mov
shr
pop
scas
imul
push
je
test
push
iret
add
jle
add
adc
sahf
push
aas
incl
add
jne
aas
dec
inc
mov
cmp
cmp
push
inc
icebp
repz
in
aad
mov
and
xchg
fistps
mov
jecxz
lds
cmp
mov
subl
jns
out
pop
add
xchg
push
jmp
lahf
cmp
cmp
add
cmpb
incl
aad
inc
mov
mov
in
lods
imul
repnz
xchg
sub
sub
sbb
cs
sbbl
lret
mov
pop
imull
jecxz
ljmp
inc
mov
leave
mov
rcl
dec
scas
andl
jbe
imul
add
xchg
outsb
pop
jns
sbb
pop
aad
lea
je
testb
fisttpl
sub
and
jbe
test
jae
mov
lds
into
xchg
lock
inc
push
xchg
dec
mov
jecxz
aad
adc
mov
cmp
cmc
push
mov
add
pop
cltd
and
mov
add
movsl
pop
xchg
mov
mov
cmp
mov
pop
mov
sub
sbb
pop
inc
repnz
sub
subb
cli
scas
sbbl
and
aad
orb
dec
loope
jns
pop
dec
lcall
xchg
stc
jmp
push
sbb
add
or
imul
int3
insl
adc
push
dec
arpl
insb
and
sar
cmpsl
add
dec
and
lds
pop
nop
loope
ret
jb
jp
inc
add
adc
cmp
jge
imul
push
cmp
addr16
and
out
rolb
jae
and
dec
jb
arpl
inc
je
and
xor
inc
cmpsl
mov
fcompl
clc
rcrl
int3
test
mov
dec
pusha
leave
pop
test
rorl
clc
pop
jae
js
mov
and
in
mov
push
inc
push
outsl
fs
mov
in
popf
push
dec
test
jnp,pn
or
gs
in
cmp
mov
mov
test
fimull
stos
or
xor
inc
iret
mov
and
cmp
rorb
pop
es
cwtl
or
ficompl
aaa
xor
idivb
xchg
lea
cmpsl
sub
mov
push
cmpsl
rcll
sti
adc
mov
and
mov
gs
das
or
and
inc
dec
shll
loopne
andb
jae
loopne
xlat
out
xchg
mov
xchg
dec
insb
inc
push
mov
cmpsb
dec
and
and
and
orb
ss
test
mov
repz
mov
pop
insb
rcrb
repnz
mov
xor
jle
or
mov
xor
xchg
and
mov
dec
inc
nop
lret
inc
xchg
mov
mov
sahf
and
movsb
adc
shl
daa
inc
jge
cmc
loope
addr16
push
dec
lret
xor
call
movsb
inc
pop
das
push
clc
daa
out
cmp
lods
les
sbb
fprem
movsb
data16
cld
shlb
push
nop
jns
sub
sub
scas
sub
adc
cmp
pop
cmp
sti
sub
mov
lahf
jge
stos
lods
fwait
shrb
jb
sbb
loopne
dec
jg
movsb
and
jne
jno
clc
jbe
shll
xor
jb
fs
les
mov
push
jnp
xor
jbe
pop
jne
int3
ret
out
sub
ljmp
xlat
jl
push
sarl
mov
fiadds
jb
push
ja
inc
nop
stc
add
jmp
xlat
cmpsb
ficoml
xchg
add
loope
mov
dec
inc
js
sbb
test
sub
adc
sbb
movsl
jno
dec
pop
pop
add
flds
jns
mov
push
xchg
lret
mov
lea
movsb
xchg
cmp
sub
pop
sbbb
mov
lcall
test
cmp
aad
mov
pop
xchg
sbb
out
cmp
lcall
lcall
push
push
fisttpl
pop
lret
mov
xor
lds
nop
push
mov
mov
pop
stos
mov
fcomp
out
push
inc
ljmp
ret
sub
icebp
or
cmp
insb
jo
xor
fldt
je
sbb
and
idivl
pop
sbb
jae
lcall
xchg
popa
nop
sbb
or
cmc
or
mov
dec
xor
fcoml
mov
lret
rorb
test
lahf
and
dec
sti
mov
into
test
test
push
sub
outsb
sub
pop
xor
jge
mov
mov
xchg
xchg
xchg
dec
imul
ret
pop
pop
pop
xlat
sti
test
mov
ret
or
iret
int
imull
xor
lahf
push
cmp
push
dec
movsl
add
test
idiv
mov
hlt
sub
push
push
push
mov
pop
mov
push
sbb
jmp
testb
in
jo
sub
ret
push
mov
pop
push
enter
aad
mov
dec
jns
pop
fsubrs
icebp
call
push
or
add
cld
imul
mov
cmp
rcl
into
add
mov
or
aam
loopne
cltd
in
das
mov
inc
sbb
aad
andl
popf
in
mov
fisubs
sti
movsl
mov
sub
push
or
int3
enter
push
sub
pop
loop
mov
dec
arpl
inc
lds
mov
scas
cmp
das
inc
inc
pop
mov
sub
mov
mov
add
imul
jo
sub
mov
mov
bound
aaa
enter
inc
ret
inc
adc
inc
into
pusha
or
inc
rcll
sbb
pop
push
jbe
mov
mov
xor
lock
jge
cli
sub
xlat
aas
in
mov
pusha
pusha
xchg
ss
out
push
xor
decb
loope
pop
imul
inc
and
popa
mov
add
pop
movsl
pop
fsubs
sarl
dec
testl
xor
lret
push
xchg
pcmpgtd
out
leave
sbb
add
xchg
push
mov
pop
pop
add
das
sar
sub
lods
mov
dec
cli
adc
nop
hlt
ss
cmp
cmc
xchg
mov
jge
out
dec
testb
ss
dec
sub
cli
icebp
jmp
or
jg
mov
mov
pop
or
mov
mov
add
and
pop
jbe
push
inc
test
mov
adc
sbb
dec
push
scas
xorl
cltd
lods
jbe
cmp
rol
adc
pop
xor
xchg
sarb
jno
xchg
stc
or
and
jecxz
sbb
pop
daa
jl
xchg
jo
cmc
loopne
daa
cmp
jge
dec
and
repz
in
or
lret
jp
lea
jnp
add
outsb
jmp
xchg
enter
jns
or
inc
imul
jle
and
cmp
mov
aas
out
in
sub
test
psrlq
into
add
mov
add
xor
xor
bound
test
cld
dec
dec
jge
aas
dec
daa
jge
and
int3
adc
mov
or
fs
push
xor
mov
jle
and
sarl
hlt
out
add
or
gs
incl
pusha
sub
jge
xchg
faddl
ljmp
or
ds
je
out
les
dec
and
lahf
test
and
ja
notl
mov
enter
out
cmp
sbb
and
gs
pushf
push
movsl
xchg
xor
xchg
ja
cmp
xchg
and
mulb
imul
lret
mov
sbb
imul
mov
xchg
fcmove
loopne
or
es
nop
mov
mov
data16
insl
rcr
es
outsb
dec
loopne
inc
loope
jle
das
out
std
dec
adc
dec
inc
sbb
pop
cmp
inc
ljmp
push
inc
push
mov
cld
push
cmpsb
call
sbb
idiv
dec
in
pop
xchg
test
push
fimuls
push
sbb
push
push
pop
aad
add
scas
adc
dec
add
in
idivl
inc
jge
pop
cmp
add
mov
out
inc
mov
adc
lret
mov
lcall
outsl
shll
in
pop
sahf
inc
lahf
push
ret
sub
insb
jge
in
sbb
xchg
cli
jmp
hlt
enter
mov
gs
mov
out
add
pop
scas
jge
dec
dec
enter
inc
fbld
or
adc
in
cmc
adc
mov
add
mov
xor
cltd
jecxz
jg
aas
adc
das
mov
lret
cmp
mov
shr
mov
clc
hlt
pop
scas
mov
out
mull
xchg
add
push
xchg
ret
sbb
out
push
push
inc
inc
inc
pushf
mov
sbb
sahf
out
mov
pop
pop
add
test
dec
mov
lods
push
dec
stos
inc
int3
movsl
lea
loope
test
dec
movsb
jnp
ja
cmpsb
sti
mov
mov
scas
fldenv
mov
mov
cmc
inc
sub
or
pop
movsb
sub
pop
xchg
adc
sbb
xor
add
xchg
cld
mov
lret
leave
mov
ret
mov
xor
movsb
cmp
cmp
loopne
adc
ja
inc
and
mov
iret
and
cmpb
xor
mov
call
jne
stc
fbstp
ss
add
push
inc
xchg
or
mov
sarl
rorl
xchg
call
push
aas
and
loope
inc
mov
push
mov
pop
cmp
fildl
ret
pusha
inc
mov
repnz
stc
xchg
sbb
push
cmp
add
inc
jge
inc
daa
out
scas
pop
jbe
rdpmc
stos
adc
adc
jb
shll
loopne
test
in
mov
movsl
cs
int
int3
jne
std
mov
add
je
jmp
sub
leave
push
gs
xor
bound
enter
ja
mov
sti
mov
gs
repz
dec
xorb
pop
mov
cld
sub
ja
imul
addb
pop
jbe
cs
negb
ljmp
jnp
and
xor
aas
jae
sub
sub
mov
xchg
xchg
mov
mov
leave
or
testb
lcall
mov
push
lcall
fs
in
clc
add
in
mov
rorb
imul
inc
sub
das
movsb
adc
ret
aam
push
or
xor
arpl
and
sub
or
incl
shlb
outsb
js
sub
cmpsl
push
mov
xchg
mov
imulb
inc
adc
mov
mov
inc
movsl
adc
fists
jb
xor
and
sub
sbb
je
rcll
mov
rclb
inc
mov
adc
jp
cmpsb
movsl
jb
push
repz
rorb
test
std
lds
jns
loop
ds
pop
stos
mov
in
sub
mov
mov
jge
int3
addl
sti
out
lea
lret
push
push
adcb
mov
mov
adc
jne
scas
ret
cmpsl
jno
inc
pop
mov
push
jbe
insl
lods
decb
out
repnz
or
pop
jecxz
sub
in
xchg
pusha
shlb
jae
mov
cld
arpl
pop
in
out
std
push
inc
insb
cmpsw
repz
and
jg
cmp
sub
sbb
jl
clc
and
popf
ljmp
xchg
iret
ficoml
add
mov
je
xor
inc
mov
jbe
cmpsl
pushf
sub
bound
mov
notb
shl
fcompl
pop
mov
or
mov
xor
call
cmp
dec
lods
inc
add
jb
mov
aas
push
outsb
inc
push
pop
sahf
cmp
sti
gs
in
ds
ljmp
dec
scas
adc
mov
sub
adc
shll
cmp
inc
out
sahf
in
dec
mov
or
or
sub
cmp
mov
and
mov
fwait
orb
mov
outsb
mov
and
pop
ss
xor
pop
xchg
cld
scas
adc
dec
jl
cmp
and
lcall
jle
movsl
xchg
xchg
xchg
rep
lea
repnz
mov
ljmp
mov
ret
movsb
shl
mov
pop
sub
pushf
outsl
mov
dec
lahf
xchg
dec
sbb
bound
add
jns
and
add
inc
xor
jl
cmp
cmp
cmpsl
sahf
std
das
into
cmp
pusha
inc
outsl
in
stc
mov
iret
test
adc
xorl
mov
mov
fisubs
call
aad
push
loope
sbb
lds
jne
sar
negb
pusha
cmp
test
adc
lcall
sti
mov
scas
mov
dec
adc
stos
add
inc
cld
adc
xor
in
jo
leave
bound
loopne
inc
and
mov
scas
add
std
lcall
fsubrl
jge
aaa
pop
or
outsb
mov
and
cld
out
push
data16
out
dec
stos
pop
add
es
roll
jo
aad
outsb
sub
rcrl
outsb
dec
adc
nop
stc
mov
jnp
pop
je
movb
popf
cmp
dec
push
cmp
das
dec
sbb
jecxz
dec
inc
cli
mov
xchg
push
fldenv
sbb
test
movsl
sub
mov
fisubrl
xchg
cwtl
dec
nop
mov
jecxz
aas
lods
mov
pop
daa
lahf
les
cmp
add
mov
gs
mov
outsb
push
dec
fidivs
std
nop
jge
jbe
shlb
movsb
and
arpl
push
lret
add
push
sub
xor
cmpsb
mov
sub
std
and
mov
roll
dec
and
and
sub
ret
pop
pusha
stos
popa
mov
fistl
scas
jle
addl
add
xchg
stos
sub
push
add
mov
imul
xchg
imul
adc
xchg
clc
mov
je
jns
cmc
or
pop
sbb
out
in
sub
mov
outsl
jno
mov
push
add
movsb
std
lock
inc
adc
xchg
das
push
mov
or
xchg
xchg
int
scas
inc
xor
bound
push
dec
aad
sbb
in
sub
adc
pop
pop
subl
adc
xor
sbb
mov
adc
adcl
cmp
sub
lcall
or
inc
popa
popf
fisttpll
divb
mov
arpl
mov
mov
scas
xor
pop
lret
fidivrl
mov
cld
and
push
fildl
add
rcll
repnz
lret
ljmp
fiaddl
mov
aam
jbe
jb
int3
test
mov
bound
repz
fwait
inc
and
out
xchg
inc
sti
cmp
mov
or
push
mov
rolb
inc
mov
imul
push
pop
mov
inc
xor
inc
mov
cmc
scas
mov
fadd
push
xor
insl
or
and
mov
ja
cmp
and
test
mov
iret
or
imul
jnp
fs
fdivrs
pushf
cmpsl
pop
xchg
fbstp
push
inc
sbb
test
sahf
xor
sbb
call
int
xor
lret
jmp
sbb
xor
xor
jp
lods
adc
clc
shl
stos
push
in
cwtl
sub
dec
lret
dec
fidivrl
arpl
inc
scas
push
pop
ljmp
test
fadds
into
mov
xor
mov
sbb
mov
mov
sbb
adc
sbb
scas
test
xchg
negl
pusha
enter
pop
ret
out
mov
sub
in
sub
add
adc
sbb
cmpsb
gs
loop
repz
xchg
leave
dec
jne
loopne
lds
daa
and
arpl
shll
gs
xor
lcall
add
movsl
or
rcrl
jo
push
cltd
mov
pop
ror
sub
xlat
pop
dec
mov
das
into
dec
enter
dec
gs
sub
aas
movsl
inc
cmpsl
cmp
and
data16
cmp
inc
popf
cmp
lret
sti
jno
sbb
jp
or
jns
insl
popf
fsubrp
out
and
jo
cld
out
in
addl
insb
lret
cmp
push
or
aad
pop
sbb
fimull
jo
imul
push
sbb
mov
clc
pusha
test
mov
sub
mov
ja
es
js
sbb
sbb
addb
in
loope
jmp
out
mov
scas
loopne
shll
pop
shlb
mov
and
mov
std
adc
shlb
je
arpl
sub
pop
stos
xchg
push
add
mov
push
daa
cmpsl
push
or
cwtl
cmpsl
pop
scas
mov
mov
or
sub
pop
push
xor
add
and
xor
into
das
aad
sub
xchg
mov
jmp
cmp
mov
roll
inc
outsb
dec
leave
inc
mov
cmpl
repnz
sub
lahf
xlat
pop
pop
std
cmpsb
ljmp
loopne
in
lahf
and
push
aam
push
sbb
pop
stos
testb
enter
rclb
in
mov
mov
dec
shlb
cmpsl
cmp
or
in
loop
aam
popf
jns
mulb
push
rcll
mov
dec
push
jmp
adc
cmc
add
add
adc
xchg
pop
cmp
sub
addr16
icebp
xchg
into
cmp
push
cmpsl
push
sub
or
mov
shll
stos
inc
in
push
fwait
std
pop
push
and
push
test
mov
fucomp
sbb
shl
int3
int
fs
pop
adc
cmp
stos
cli
adc
inc
jge
imul
add
leave
push
push
pop
ja
les
dec
and
xor
sti
cmpsl
push
and
push
loop
aam
adc
push
xor
jnp
adc
or
lcall
lcall
in
fcomps
ret
sub
add
and
incb
dec
das
sub
jnp
jmp
jge
jg
mov
call
jmp
pop
mov
arpl
in
adc
and
and
jmp
ret
mov
jg
add
loopne
xor
addb
or
js
shlb
cld
sub
fstps
aaa
sbb
inc
push
dec
add
in
push
into
shl
sti
jge
aad
and
call
cltd
jnp
add
mov
fs
xchg
cmp
arpl
rclb
scas
movsb
adc
sti
into
pop
push
cmp
ja
sub
adc
jo
sub
cmp
push
dec
leave
mov
add
xchg
imull
shrl
fwait
push
ficoms
aaa
mov
sti
pop
xchg
or
xchg
mov
mov
pmaddwd
fmull
jae
adc
std
or
sub
andb
pop
pop
test
std
push
mov
std
loop
inc
mov
hlt
xchg
out
or
jbe
jmp
pop
arpl
pop
ret
aaa
jp
push
push
xchg
cmp
pop
pop
call
inc
pop
insl
mov
dec
inc
repnz
adc
or
imul
shll
loope
je
incb
pusha
adc
mov
add
into
cmp
test
ret
and
dec
push
lahf
jmp
lcall
dec
inc
mov
adc
and
push
jl
and
xchg
jecxz
jae
mov
fistpl
jp
push
std
sub
dec
xor
push
mov
pop
or
push
cli
mov
pop
aam
in
and
aas
mov
addr16
rclb
pop
push
in
xor
shlb
adc
jecxz
ret
dec
inc
push
sub
pusha
push
sub
xor
jbe
shlb
in
cli
pop
push
inc
sarl
notl
cmp
or
loope
lods
stos
xor
loope
adc
fldlg2
sbb
push
or
lcall
mov
outsb
push
lret
jno
fdiv
dec
push
or
jle
leave
mov
adc
andb
push
xchg
movsl
mov
loope
jb
aam
cltd
mov
in
daa
xorb
les
leave
jo
mov
jne
movsb
mov
fidivl
push
pop
js
or
in
les
jmp
test
cmpsb
mull
mov
dec
pop
ret
sahf
xorb
pop
sub
jle
cs
xchg
xchg
push
mov
dec
arpl
jo
sub
out
jmp
push
mov
push
js
sbbb
fisubrl
stos
cwtl
dec
inc
jo
stos
adc
in
mov
adcb
adc
push
clc
insb
daa
or
repnz
mov
aam
shrl
jg
das
fcmovnu
sub
in
fisttpll
sahf
sub
dec
bnd
jle
cmp
jo
imul
pushl
test
mov
rcrl
push
jl
xor
mov
inc
mov
movsl
cwtl
xor
pop
sarl
repz
pop
mov
jnp
add
orl
nop
cmpsb
pop
dec
lahf
pop
adc
mov
movb
jae
add
xchg
frstor
ret
adc
mov
mov
imul
cmpsl
mov
jp
sbb
mov
mov
mov
xor
enter
sbb
and
lods
xor
mov
xor
std
mov
cmp
xchg
dec
jg
add
mov
jmp
dec
push
jecxz
cmpb
imul
lds
mov
xchg
jl
jp
in
hlt
mov
push
inc
sub
push
xchg
fxch
je
mov
stc
cmc
adc
mov
int
hlt
pushf
and
iret
adc
ficoml
loopne
mov
in
add
xchg
icebp
cmpb
add
iret
xchg
mov
jne
push
shlw
and
cmp
and
lret
inc
xor
les
xchg
fbstp
sub
dec
shll
mov
pop
loopne
mov
add
or
cwtl
adc
and
loopne
mov
fisubl
sub
jg
mov
les
sbbl
testl
sbb
jne
or
inc
aaa
test
mov
xor
or
fildl
mov
rcll
fmull
push
repz
sbb
cwtl
cmp
imul
icebp
adc
mov
xor
fstpt
jno
sbb
sub
repnz
shlb
repnz
iret
sub
jae
popa
pop
loope
cs
mov
loop
pushf
fadd
xor
mov
sbb
dec
rorl
imul
lret
std
xor
jnp
cmpsl
adc
pop
push
inc
nop
pop
mov
outsl
cmp
sahf
push
outsb
mov
mov
fwait
lods
inc
or
imul
in
shlb
xor
pop
mov
xchg
mov
bnd
fst
mov
add
push
dec
xchg
push
adc
push
sbb
insb
insl
dec
ficomps
add
inc
jge
xor
js
or
loop
xlat
repnz
in
xor
je
scas
xor
fmul
cs
pop
jb
sub
xchg
pop
icebp
scas
xchg
out
and
xchg
fisttps
lods
pop
mov
pop
xor
mov
cmp
dec
pop
fldcw
stos
dec
loop
out
in
mov
notl
jl
idivl
mov
es
adc
push
or
cmp
inc
jno
dec
int3
mov
push
in
dec
aad
aas
pop
sbb
dec
xchg
pop
mov
add
insl
addr16
and
ret
cmp
std
cs
shlb
lds
cmp
inc
icebp
mov
jp
rorb
push
cmp
adc
mov
cmpsb
fnsave
int3
in
loop
push
or
adc
xor
sub
cmpsb
mov
out
cmp
jns
dec
mov
lret
insl
repz
mov
pop
mov
inc
loopne
cli
stos
jns
out
mov
sub
mov
dec
mov
arpl
jle,pt
dec
adc
add
int3
bound
addl
dec
cmp
cli
testl
pop
push
jmp
nop
into
mov
call
mov
and
and
loopne
mov
push
std
xchg
push
pop
lcall
cmpsb
in
arpl
mov
cmpsl
ljmp
cs
lods
add
aam
aas
jae
cmpsl
stc
addr16
xor
inc
jecxz
int
push
xchg
mov
pop
inc
sar
stos
cld
push
in
popf
mov
leave
fidivl
mov
rep
cld
test
sbb
adc
aad
cmp
test
jg
xchg
xchg
jmp
add
cmc
mov
and
jb
and
mov
jnp
cmpsb
mov
ja
pop
icebp
mov
jbe
test
pop
daa
inc
mov
je
testb
ss
or
cli
mov
out
ret
cltd
out
inc
mov
push
inc
pop
cmpsl
push
inc
dec
inc
pop
xlat
sti
shr
jnp
aas
in
mov
les
inc
dec
cmp
adc
mov
shll
and
sahf
xor
pop
lock
push
ljmp
push
push
cs
push
out
adc
pop
loope
scas
stos
sbb
and
add
aam
ret
pop
push
xor
stc
push
aad
mov
push
pop
or
mov
mov
mov
sbb
movsl
pop
sbb
lock
imul
sub
loope
mov
push
mov
rolb
andb
mov
jl
cwtl
lret
dec
mov
jae
fiaddl
iret
lds
stos
or
mov
or
or
insb
fs
and
xor
cwtl
mov
sti
iret
shll
mov
xchg
out
movb
lahf
aad
icebp
scas
add
stos
and
imul
jns
sub
sbb
sbb
test
aas
xchg
pop
in
adc
adc
adc
inc
sbb
aam
mov
mov
movsl
stos
popa
ret
lds
lock
push
scas
jbe
sar
mov
sbbb
mov
xchg
rclb
cmp
xor
dec
mov
push
add
jge
negl
popf
mov
mov
add
shrb
sub
aad
movsb
cmp
mov
ja
pop
inc
test
pushf
cmp
mov
fimuls
std
dec
push
popf
arpl
shrl
dec
mov
shl
fdivrs
mov
push
inc
xchg
mov
sbbl
dec
sbb
xchg
cmp
mov
jbe
mov
or
sbb
notb
or
and
or
inc
sahf
jmp
pushf
inc
jl
arpl
fmulp
cmp
aam
push
push
imull
xor
or
adc
sahf
jge
test
xor
fcomps
xstore-rng
cmpsl
cmp
mov
shrb
pushf
adc
mov
gs
in
sbb
es
xchg
jno
cmp
cs
xchg
adc
push
inc
and
fmuls
mov
outsb
in
pop
xor
push
lock
in
sbb
pop
rep
and
push
sahf
mov
ret
leave
out
sub
jmp
cmc
xchg
push
xchg
sbb
popf
imul
adc
inc
mov
xchg
dec
lods
fcmovnu
inc
lret
cmpsl
jno
rcrl
into
out
and
lcall
xor
mov
mov
stos
mov
ljmp
test
shrb
push
sbb
push
xor
mull
push
test
incl
sub
les
dec
xchg
fwait
mov
mov
enter
in
dec
mov
inc
mov
lds
fisttps
imul
add
or
sbb
popf
les
dec
stc
mov
and
stos
scas
jmp
in
ljmp
push
shlb
xor
scas
cltd
adc
iret
xor
and
sahf
into
mov
test
adc
adc
xchg
or
xchg
and
lcall
unpcklps
mov
pushf
rcll
push
mov
mov
pop
insl
shll
pop
and
push
jge
aam
stos
dec
shll
out
xchg
std
lret
pop
insb
pop
pop
pop
test
mov
push
movsl
gs
adc
movntps
ret
test
mov
jbe
cmp
loopne
lret
jne
call
adc
lcall
lods
or
loop
movsb
shrb
lcall
dec
jl
jns,pt
xchg
jp
ja
test
jl
inc
cli
lahf
movntq
cmp
pop
loopne
repz
jle
push
ds
mov
jmp
xchg
lahf
dec
mov
leave
fildl
lret
popa
lds
insb
out
dec
xchg
jecxz
push
sar
mov
xchg
gs
imul
out
movl
pop
xlat
sub
cltd
mov
pop
imul
add
push
inc
lock
mov
lcall
sbb
dec
jp
out
sub
and
dec
sbbl
inc
adc
inc
out
pop
cli
xor
nop
jmp
xchg
mov
push
enter
cltd
arpl
rolb
mov
jge
test
mov
mov
push
cmp
in
mov
ret
test
add
lahf
ret
cltd
push
iret
inc
push
pushf
ret
daa
rolb
or
add
popa
addl
jl
mov
inc
faddl
stos
mov
jne
mov
icebp
addr16
xchg
mov
inc
jbe,pn
adc
lret
add
aad
fstps
xor
in
out
inc
rcl
cmp
mov
xor
repz
jne
pop
cmp
mov
int
aaa
dec
imul
push
cmpsl
mov
and
xorl
mov
and
xor
dec
pop
or
mov
arpl
repz
or
and
add
mov
and
fbld
sbb
es
mov
pop
subl
scas
daa
imul
mov
xor
ja
adc
push
or
cld
out
sub
adc
jg
dec
imul
pop
mov
sub
cltd
idivl
sbb
ret
pop
test
mov
mov
jg
mov
fcmovbe
mov
xor
or
adc
dec
xchg
mov
cmp
sub
mov
sbb
sbb
sbb
orb
inc
sbb
out
xchg
lahf
add
mov
mov
ret
push
sub
push
dec
push
idivl
idivb
test
lock
in
jp
addl
dec
out
aas
inc
cmp
xchg
shl
sbbl
mov
add
shrb
imul
push
movsl
rorl
jecxz
call
iret
adc
sti
mov
mov
leave
ficompl
fidivl
sub
into
int
fwait
dec
mov
imul
icebp
jbe
or
pop
ljmp
xor
cwtl
inc
in
stc
mov
ja
lods
mov
test
lret
sub
test
int3
cmpsb
mov
push
sub
cmpsb
xchg
stos
inc
pop
popa
and
xchg
sti
inc
add
sahf
adc
xchg
sub
push
pop
iret
push
dec
cs
or
inc
test
repnz
adc
add
clc
add
push
out
dec
xchg
adc
sbb
pop
fnstsw
xchg
addr16
movsl
dec
fldenv
loop
xchg
call
popa
out
mov
inc
dec
adc
push
xchg
fldenv
dec
popa
sbb
inc
and
mov
inc
xchg
jmp
adc
sub
and
sbb
les
push
push
ds
test
mov
es
xchg
cs
pusha
movsb
test
movntps
or
bound
pop
jns
cmpsl
or
ljmp
sub
aaa
mov
pusha
ret
xor
mov
out
or
in
sbb
in
mov
sbb
jno
add
jb
cmp
add
sub
push
mov
mov
ret
dec
ss
fidivl
cmc
jne
jge
and
outsb
mov
int
test
fsubrl
dec
outsl
aad
mov
pushf
xor
sub
out
sbb
sbb
add
cwtl
daa
nop
aam
cs
mov
shll
es
xor
add
aam
addr16
sbb
pushf
xchg
push
fstps
cld
push
mov
in
cltd
sti
adc
and
cli
or
divb
cmp
cld
inc
mov
es
jp
adc
push
in
mov
arpl
pop
pop
rol
icebp
nop
sbb
sbb
hlt
arpl
pop
lea
mov
mov
sub
push
mov
mov
push
or
mov
add
sbb
fstpt
fistpl
xchg
jmp
divl
imul
and
cmpl
adc
mov
xor
xchg
imul
ja
push
daa
or
jecxz
arpl
shrb
mov
dec
ljmp
jns
icebp
ret
pop
popf
in
fwait
xchg
lods
imul
lea
je
ds
cmp
xor
stos
push
xchg
sar
sbb
out
inc
popa
je
shll
dec
adc
icebp
jo
cmp
xor
cs
pop
and
aas
popf
push
push
psllq
ret
leave
add
sahf
fnstsw
push
sbb
aam
ja
out
pop
lret
pop
out
adc
pop
mov
mov
push
mov
cmp
loopne
shrb
adc
xor
and
cmpsl
jmp
pop
cli
rorb
iret
push
daa
lods
pusha
jbe
hlt
and
mov
cmpl
divb
jmp
clc
push
test
mov
xchg
sub
pop
push
xchg
lds
es
addr16
inc
mov
rcll
mov
or
ljmp
lock
test
mov
inc
add
jle
jae
and
out
sub
test
addl
and
mov
mov
xor
fs
push
push
or
xchg
xchg
fwait
mov
cmpsl
lods
jno
inc
push
sub
lret
inc
pop
jnp
filds
icebp
into
movl
out
add
fistps
xor
xor
inc
das
inc
sub
cli
jae
das
jge
dec
jg
fdivrs
out
aas
cmpl
inc
jg
inc
inc
insb
inc
bound
pushf
and
sbb
arpl
add
int3
shl
sub
cltd
inc
mov
fsts
xor
mov
cmp
int3
pop
cwtl
mov
decl
rcrb
lea
movsl
adc
push
sbb
mov
and
pop
ja
lcall
loope
dec
iret
outsl
repnz
clc
jmp
mov
filds
mov
repz
adc
push
clc
inc
rcl
ljmp
lahf
addl
sbb
and
jp
sub
fidivl
ret
sub
mov
frstor
add
adc
jne
daa
mov
outsl
mov
out
mov
aas
mov
sbb
xchg
mov
clc
cmp
pop
out
mov
fwait
mov
test
xchg
icebp
out
jg
xchg
shrl
cltd
out
shl
xchg
push
or
mov
jge
fstl
mov
int3
pmulhuw
pop
jmp
test
mov
sbb
push
pop
and
fdivs
dec
insl
roll
scas
sub
and
inc
ficoml
fdivl
pop
pop
jle
rclb
sbb
jnp
and
out
or
testl
mov
xchg
jecxz
jle
jno
shrb
repnz
das
cmp
ret
sub
or
sub
add
dec
ja
jp
sub
mov
inc
xchg
je
add
mov
jmp
decb
mov
mov
ss
lock
bound
in
fwait
pop
pop
in
mov
loope
inc
mov
mov
add
push
mov
add
xchg
imul
iret
test
ficompl
and
fdivrs
pushf
mov
outsl
cmc
and
hlt
fwait
xchg
mov
std
ret
fldl
insb
mov
push
mov
pop
aam
xchg
bound
pop
and
jb
mov
push
addl
jecxz
mov
mov
scas
les
cmp
stc
or
test
mov
dec
decb
out
sarb
movsl
xchg
jge
mov
lretw
scas
cmpsb
fdivrl
loope
repz
clc
faddl
lret
lret
fstps
ja
ret
movsl
mov
cltd
jmp
idivb
test
test
push
mov
jo
push
mov
iret
ret
push
sub
cmovns
jb
xchg
fstpt
xchg
push
lods
jecxz
and
cmp
push
nop
jnp
sbb
mov
lds
or
in
add
scas
fdivrl
mov
test
aaa
push
dec
iret
xchg
ret
loopne
jmp
mov
addr16
jmp
stc
out
data16
sub
jae
sbb
rcrl
pusha
sbb
shrl
xor
and
xor
outsb
insb
xor
decl
ret
scas
lds
scas
in
sub
and
and
sbb
pop
hlt
xchg
dec
mov
cli
call
fiaddl
inc
addr16
inc
enter
test
sar
mov
mov
shrl
es
and
cwtl
mov
aaa
movsl
dec
add
rcl
sbb
fwait
int3
cld
adc
dec
daa
loopnew
popa
xor
mov
addl
mov
or
fdivrs
inc
sub
jb
mov
cmc
int
xor
dec
jecxz
je
stos
ja
xchg
fstpl
int
shll
fwait
daa
loop
mull
adcl
in
adc
xchg
cmc
mov
sbb
imul
cmp
in
faddl
mov
xor
addr16
push
and
jnp
insl
mov
xchg
repnz
fdivr
pop
iret
mov
nop
xchg
and
fiadds
xor
ljmp
cmp
movsl
cmp
mov
fsubs
or
das
sbb
fcoms
push
mov
les
mov
cli
mov
xchg
push
pushf
jle
add
mov
aaa
cmp
aad
lea
pop
insl
shrb
and
mov
fdivp
ret
xlat
stos
int
test
shll
add
or
push
adc
xchg
aas
lea
mov
xor
std
cmpl
jmp
dec
sbb
pop
mov
push
mov
call
outsl
jmp
xchg
ret
repnz
lock
jmp
daa
adc
xor
adc
mov
aam
scas
push
outsb
add
mov
popf
cmpsb
cmpsb
cmp
add
push
fs
movl
mov
mov
jg
push
test
in
push
jno
mov
mov
rorb
adc
add
jecxz
adc
add
test
iret
popa
push
aas
or
dec
mov
mov
dec
lds
rorb
adc
cmp
or
xor
xchg
dec
test
or
fcomps
insl
xor
jo
popa
outsb
ds
xchg
je
xor
add
cmpsb
in
xchg
xchg
cmp
sbb
loope
sub
test
sub
repz
dec
or
mov
int
xor
es
mov
dec
andb
xor
mov
pushf
adc
cmpsl
or
and
or
decb
jg
movsb
pop
cmp
es
sbbl
jno
adc
popa
adc
sbb
mov
stos
rcrl
sbb
test
loopne
lods
sbb
enter
mov
push
int3
cld
aas
decb
and
or
sti
loope
ja
mov
adcl
push
bound
xor
mov
xchg
or
mov
dec
push
xor
xor
cmp
inc
sub
sub
fcmovnu
adc
sahf
or
and
fisubs
in
add
cmp
dec
sarb
popf
sub
fcmovne
call
push
icebp
negb
xor
in
xor
das
mov
jo
dec
mov
mov
popl
fadds
mov
mov
mov
pop
repz
nop
aad
ret
push
test
cmc
imul
dec
adc
xchg
aas
nop
scas
ds
icebp
sbb
mov
loop
movsl
or
sub
cmp
mov
ret
mov
pop
xlat
testb
dec
cmpsl
out
sarl
mov
push
pop
add
push
sbb
mov
jle
push
sub
cwtl
cwtl
push
cmp
adc
and
movsb
lods
sbb
sar
xchg
cmp
cmp
sbb
and
add
lret
xor
fs
cmpb
dec
adc
xor
pop
fisubl
jno
push
pop
adc
and
movsl
mov
cwtl
mov
push
dec
add
mov
sti
adc
dec
mov
xchg
rcll
ja
pop
call
pusha
aaa
push
pop
sbb
insb
pop
rcll
xchg
in
sbb
sub
ret
push
cli
mov
pop
mov
fisubrl
aas
notb
pop
jns
arpl
jecxz
pop
mov
pop
push
mov
int
push
mov
and
cwtl
mov
hlt
mov
ds
cmp
scas
or
outsb
outsb
bound
in
js
ja
out
mov
and
ja
adc
pop
cmc
loop
push
cmp
shlb
push
fadds
fstps
cwtl
repz
cmp
inc
xchg
pushf
repz
outsb
adc
in
shufps
push
imul
sub
sbb
push
xchg
pop
adc
std
cmpsb
push
mov
add
les
pop
sub
bswap
add
mov
cmpsb
sub
mov
enter
jno
inc
cli
push
mov
pop
inc
in
inc
dec
push
imul
add
repz
sbb
outsl
scas
lods
lcall
mov
dec
adc
dec
xor
loopne
clc
iret
sbb
imul
adc
ljmp
mov
stos
adcb
pop
in
pusha
shll
xchg
add
push
sub
dec
dec
sub
jns
out
cmpsl
jo
mov
lds
adc
mov
push
jecxz
popa
aad
xchg
push
outsb
movsl
ljmp
cld
jecxz
xlat
mov
sub
int
sbb
pop
lods
or
mov
push
je
jp
mov
jbe
jmp
mov
mov
mov
push
inc
stos
stos
or
sbb
push
stos
push
mov
or
adc
adc
or
out
add
out
popa
mov
inc
xor
pop
jmp
xor
pop
and
push
add
lret
xchg
adc
out
mov
jns
fnstenv
mov
gs
cs
jb
push
xor
push
pop
add
insb
add
xchg
mov
cld
inc
aad
daa
push
cmp
lock
pop
push
test
insl
mov
inc
out
xchg
hlt
add
sbb
mov
inc
push
fstpl
js
or
mov
scas
stos
sbb
cmc
es
stos
pusha
aas
push
mov
ret
and
xor
or
jno
jp
outsl
shll
ret
lret
sti
or
cmp
push
sub
or
inc
cli
inc
stos
call
arpl
and
ret
in
call
addl
addl
mov
dec
cs
push
fs
cmpsl
cmp
inc
and
mov
cmpsb
mov
and
in
nop
cmp
and
xchg
jne
scas
jp
das
dec
add
dec
add
lcall
sub
mov
loop
push
lods
sbb
xchg
mov
jo
mov
aaa
sub
lea
mov
out
std
loopne
xchg
mov
ret
add
js
shll
movsl
or
and
mov
mov
insl
incl
loop
std
divps
mov
and
pop
xor
pop
pop
aad
dec
jns
sbb
test
sbb
inc
shlb
popa
mov
add
out
and
gs
ljmp
inc
dec
mov
lret
lahf
xor
mov
mov
sub
mov
sti
mov
adc
xlat
pop
jle
jb
mov
xor
push
mov
push
aad
ficoml
cmp
sbb
jns
jle
push
push
out
jg
and
out
dec
cmc
jle
in
inc
popa
pop
fistpl
ljmp
inc
lret
xor
push
mov
pop
test
xchg
or
pcmpgtw
xor
sbb
test
pop
fwait
jnp
mov
aad
adc
int3
cmp
push
pop
lahf
scas
jle
iret
call
push
in
aas
lret
aad
leave
mov
popf
and
jns
mov
mov
int3
jmp
cmp
lret
cmp
outsl
jbe
cli
fs
scas
inc
inc
ljmp
jbe
mov
jg
cmpsb
xchg
xchg
jns
das
cmpsb
stc
mov
inc
pop
arpl
fidivl
jb
jmp
add
ss
and
mulb
scas
movsl
sub
mov
inc
xor
pop
leave
out
jmp
jne
imul
clc
xor
scas
xor
sbb
out
fsubs
ljmp
popa
lret
jne
jo
loope
add
loop
push
push
cmc
iret
pop
dec
lahf
sbbl
outsl
sbb
outsl
cli
mov
adc
jb
push
in
stc
sbb
daa
xchg
scas
jno
cli
inc
mov
sahf
ja
jae
insl
jns
mov
enter
push
pop
push
test
inc
popa
jp
sub
and
vpmulhw
sbb
adc
cltd
pop
push
aas
roll
xchg
shrb
lcall
push
data16
cltd
and
dec
mov
js
fmull
idivb
cld
enter
add
cmp
cwtl
adc
frstor
xchg
test
fdivrs
scas
daa
dec
lds
xor
fwait
out
scas
mov
roll
popa
aaa
sahf
jge
push
and
add
fcmove
sub
and
mov
mov
ja
jecxz
cmp
mov
xor
lds
xchg
mov
mov
xchg
rcll
lock
iret
inc
xchg
mov
lds
push
jbe
pushf
test
mov
clc
adc
ss
adc
sbb
repnz
mov
outsl
adc
xor
jb
mov
call
icebp
inc
sbb
cmpl
and
fidivl
imull
sbb
ss
jl
push
mov
movsl
call
lahf
aad
jle
xor
mov
pop
std
push
mov
or
jge
push
in
inc
out
and
mov
jnp
add
cwtl
sub
or
and
inc
xchg
iret
jecxz
push
cmp
push
mov
push
cs
test
jnp
js
test
push
dec
filds
and
push
clc
add
jle
pop
mov
lods
out
jecxz
and
rclb
stos
hlt
inc
xchg
sbb
fcmovnb
inc
and
xchg
iret
psrld
xor
sbb
pop
mov
add
test
sbb
mov
cmp
xchg
test
scas
and
lret
fimuls
imul
orb
jnp
sub
call
leave
pusha
in
add
ja
mov
rorb
js
mov
test
out
outsb
stc
lods
dec
test
cmpsl
daa
add
dec
adc
lods
mov
mov
hlt
or
and
xchg
cmp
mov
jge
popa
xchg
imul
adc
mov
mov
insl
inc
out
add
lcall
or
inc
fsubr
add
lock
inc
cli
leave
jns
in
repnz
push
mov
scas
imul
mov
lahf
inc
xor
cmp
call
fisubrs
fistpl
fs
xchg
cmp
jo
in
inc
jp
int3
mov
sub
mov
inc
dec
xor
and
call
and
xor
xchg
and
rol
jle
in
mov
int3
outsl
adc
mov
lods
popf
repz
push
repz
imul
in
mov
cld
ss
lock
pop
pop
and
insb
addb
negl
mov
xor
je
cmp
jecxz
cltd
cmp
mov
stc
pop
pop
lret
idivb
mov
jae
cmp
icebp
aaa
xchg
mov
mov
clc
loopne
dec
mov
mov
jo
jp
push
cmp
lret
cmp
test
shrl
and
add
lock
clc
add
or
and
mov
xchg
pusha
mov
add
pop
nop
sbb
les
mov
lea
jp
inc
cs
xor
test
or
je
adc
xlat
pop
aam
jge
xchg
clc
shrl
mov
das
addr16
sbb
pop
inc
and
fidivrs
xchg
push
shrl
sbb
inc
mov
xchg
jge
pmulhw
repz
push
shl
push
push
clc
add
sbb
aaa
ror
push
mov
loope
ljmp
adcb
jmp
pop
jnp
inc
out
cli
mov
fwait
into
mov
ficoml
scas
sub
or
pop
push
sbb
scas
bndldx
push
pop
sahf
ljmp
repz
adc
xchg
push
adc
mov
and
add
cmp
loopne
inc
inc
and
ret
ds
mov
jg
cmp
adc
mov
xchg
fidivs
iret
push
push
push
scas
pop
xchg
test
dec
rcrb
nop
sub
add
and
sub
out
jnp
jp
daa
mov
es
mov
jnp
or
push
or
mov
cmp
aaa
mov
mov
mov
and
jg
dec
les
add
pop
call
mov
aas
addb
add
push
pop
insb
mov
mov
loope
fsubp
ficomps
sbb
adc
adc
add
sbb
dec
clc
or
mov
imul
test
pop
push
int3
sub
jns
aad
push
jge
cmp
imul
pop
adc
xor
je
adc
orb
into
orb
xor
pop
cltd
cmc
push
jmp
push
stos
hlt
jb
loopne
scas
int3
mov
push
sub
fsubrl
cmc
xchg
outsb
sbb
or
sbb
jp
or
dec
insb
stos
std
dec
imul
xchg
fs
lret
sbb
push
call
rcr
outsl
je
iret
orl
addb
jbe
xlat
dec
repnz
xchg
sahf
mov
int3
orl
xchg
lods
dec
add
into
divb
call
or
ja
enter
or
cld
sub
jle
in
mov
jno
hlt
pop
aaa
imul
jp
test
sub
sbb
into
sbb
cmp
push
out
or
test
in
mov
aad
jno
jnp
adc
cmp
mov
pop
pop
data16
pop
push
int3
gs
roll
cmp
jl
repnz
mov
xor
cmp
xor
mov
mov
sub
mov
adc
je
adc
addr16
inc
inc
cmc
out
push
cmpb
pop
jmp
scas
jp
sbb
xor
sti
out
repnz
adc
rep
jnp
dec
jo
mov
adc
psrlq
xorl
mov
cmp
and
in
test
jmp
xor
inc
ljmp
roll
cmp
add
and
mov
mov
out
mov
xchg
ror
stc
mov
xchg
jnp
jns
inc
out
ret
mov
xchg
test
cmp
mov
adc
sub
fwait
test
lock
js
iret
enter
in
sub
jne
icebp
imul
pop
data16
std
and
out
add
cltd
inc
in
cmp
sub
mov
cwtl
push
add
push
and
test
sbb
mov
add
inc
adc
mov
pushf
add
push
repnz
loopne
push
xlat
cli
pop
sarl
dec
pop
stc
gs
and
int3
call
lods
mov
dec
lret
mov
jl
call
imul
and
mov
jl
xor
xchg
das
xor
mov
pop
iret
push
lahf
xchg
adc
mov
testl
jle
es
aas
out
rcr
jge
cltd
pop
or
fcmovb
loope
xchg
dec
mov
jp
adc
shrl
cmp
int3
xchg
push
sub
pop
cmp
int3
jns
ss
aam
xor
push
xor
das
stos
push
gs
mov
pusha
mov
adc
add
cmc
repnz
out
dec
dec
mov
es
mov
jge
push
jbe
mov
icebp
cmp
in
sub
lcall
roll
sub
xor
mov
xchg
jae
cmpsb
mov
jb
gs
roll
xchg
or
adc
dec
icebp
imul
mov
pop
inc
add
shll
movsl
aas
ret
mov
adc
loope
inc
inc
push
mov
dec
test
test
jb
push
imul
mov
shlb
push
xlat
and
mov
sub
add
movsl
js
daa
sub
cmp
sbb
daa
pop
je
call
mov
jae
adc
mov
jle
mov
das
into
test
and
and
movsl
shll
push
pop
cmpsl
jg
aaa
sahf
ret
xor
shrb
mov
ss
pop
mov
jb
lods
push
xchg
jb
jecxz
jg
push
aam
mov
xchg
pop
adc
leave
stc
hlt
adc
xchg
aad
dec
dec
push
or
ret
mov
in
xor
mov
in
push
and
push
add
mov
outsl
mov
rep
fbld
adc
loope
mov
test
sbb
call
test
outsl
in
aaa
in
inc
iret
fwait
push
xchg
xor
add
fs
mov
nop
mov
xchg
xor
xchg
xor
nop
lea
addr16
inc
orb
jl
cmp
xchg
in
scas
rcll
ret
loop
cld
repnz
ret
sti
xorl
dec
out
mov
or
jg
or
mov
sub
xor
dec
mov
xchg
aad
pop
pop
sbb
jg
push
inc
jecxz
loopne
mov
xlat
pop
or
leave
push
call
outsb
jecxz
jo
insb
mov
cltd
cmp
in
fisubs
test
mov
int
inc
xor
addl
imul
adc
sbb
ljmp
scas
push
mov
rcrl
mov
sbb
sbbl
mov
in
push
jbe
mov
gs
xchg
pop
icebp
data16
pop
into
cli
movsb
xchg
or
mov
bswap
xor
xchg
shlb
mov
jle
add
iret
sub
pop
gs
push
pop
add
inc
mov
mov
mov
add
ror
in
xchg
mov
outsl
xor
push
stc
divb
mov
sub
jns
jb
fcoml
pop
mov
sti
stc
fwait
loop
pop
lret
lods
test
pop
xor
rolb
mov
insb
pop
and
outsl
clc
imul
dec
mov
aad
ds
or
push
cmp
out
mov
adcb
push
inc
mov
mov
cmp
xor
les
jo
cmp
cmp
aad
mov
sti
aaa
jmp
sbb
or
push
shrb
and
clc
and
scas
adc
test
lods
insl
sbb
out
in
cld
shlb
dec
adc
dec
adc
mov
imul
ret
and
and
ds
subb
test
dec
fcoms
insl
add
enter
xchg
pusha
rorl
fwait
pop
test
push
xchg
shl
push
out
cmp
cmp
fwait
mov
in
jl
inc
cwtl
lea
mov
test
xchg
pop
pop
sub
mov
ja
loop
jb
dec
jle
mov
and
mov
xor
sti
mov
dec
fcmovnbe
mov
out
mov
rcll
dec
repnz
ja
fcmovb
stos
gs
jns
pop
jo
mov
xchg
call
push
xchg
pop
inc
outsl
sbb
leave
pop
dec
scas
fisttps
cmp
sbb
cmpsb
xchg
push
in
ror
and
ret
or
je
lret
cwtl
sbb
shll
roll
adc
out
hlt
xchg
negb
mov
nop
add
mov
xor
inc
lret
adc
jmp
xchg
mov
jmp
pop
or
or
jg
xchg
inc
outsl
arpl
stos
sub
xchg
cmp
jmp
mov
ds
push
mov
fcompl
mov
sub
add
add
mov
mov
mov
sahf
out
add
mov
and
or
mov
mov
push
xor
iret
inc
popl
jp
add
add
jne
imul
sbb
lret
fisttps
cmp
pushf
push
and
fwait
aad
mov
fucomp
lret
hlt
mov
loope
mov
mov
jle
in
mov
out
mov
push
pop
and
or
and
mov
stos
jne
pusha
mov
add
mov
aas
xor
icebp
insl
add
or
mov
mov
ss
jo
mov
cmp
sub
test
fcoml
xchg
stos
sub
push
mov
out
inc
xchg
and
out
jb
std
and
sbb
inc
fwait
pop
sarl
or
pop
sub
lods
jg
mov
sbb
xorb
push
pop
mov
mov
pop
iret
and
dec
and
and
add
lock
scas
mov
mov
lcall
or
movb
out
sbb
popf
cmp
sbb
and
mov
divb
or
sbb
stc
mov
popa
add
sbb
adc
mov
mov
inc
shlb
cmpsb
push
fst
jbe
cmc
int3
dec
std
adc
sarb
rorl
cs
ja
loope
fildll
sbb
in
shrb
cmp
std
xlat
add
lock
pop
clc
imul
icebp
or
adc
into
jl
add
mov
jg
mov
push
xor
fidivrl
mov
jnp
rorl
xchg
shlb
mov
cld
fwait
test
out
insb
lahf
sbbb
cmpsl
ljmp
mov
jecxz
add
daa
fsin
or
jp
out
mov
lods
shll
ror
jbe
push
add
xchg
push
dec
movsl
sub
mov
add
push
test
inc
out
add
cmp
sbb
test
and
add
push
xor
push
xchg
bound
adc
nop
inc
mov
pop
push
ret
jl
stos
dec
and
push
xor
cmpsb
mov
mov
loope
clc
sbb
in
inc
inc
clc
jb
sub
das
int
xchg
and
and
dec
mov
mov
std
sub
mov
aas
aas
aaa
adc
in
in
std
rep
shll
xor
aam
aad
cmpsb
jp
fwait
mov
push
adc
sbb
out
das
jne
ret
mov
pop
push
inc
popf
pop
inc
or
call
inc
dec
xchg
outsl
in
mov
pushf
xchg
mov
xor
sbb
mov
jo
adc
mov
out
jl
outsl
inc
add
int
jecxz
inc
push
xchg
lret
adc
sbb
jge
lcall
repz
jmp
lret
jecxz
lret
iret
das
ror
jecxz
mov
das
shrb
cltd
xchg
out
jno,pn
lea
mov
fdivl
xchg
repnz
jle
mov
stos
mov
or
inc
pop
mov
shrl
xchg
idiv
daa
pop
dec
cli
cmpsb
fs
jae
in
loopne
fiaddl
inc
dec
aas
mov
xor
andb
push
popf
or
ljmp
fnsave
insl
imul
sub
xor
xchg
ja
pop
and
push
andl
popa
movl
jne
pop
cld
sbb
lock
sub
cmpsl
sub
push
fsubl
cmpsb
repnz
push
and
cmpsl
test
pop
dec
mov
gs
sub
rcll
fwait
jecxz
pop
aaa
stos
lahf
lods
cld
mov
or
sbb
mov
dec
add
mov
mov
adc
jmp
inc
xchg
add
aaa
arpl
pop
xchg
mov
loop
adc
jecxz
or
dec
sbb
cltd
jbe
popa
repnz
xchg
sub
xor
insl
xchg
xchg
popa
sarb
xchg
loope
aaa
rolb
inc
push
or
movsb
repnz
out
cld
insb
clc
negb
fwait
xchg
mov
idivb
mov
mov
movsl
mov
xchg
add
pop
add
repz
repnz
mov
cmp
mov
jp
fwait
repz
inc
je
xor
mov
xchg
sbb
sbbl
clc
shrb
xchg
repz
pop
int
out
lods
into
push
bnd
pop
mov
or
lods
adc
stos
test
jo
and
xor
cmp
jp
adc
out
iret
mov
pop
xchg
sbb
fsub
into
mov
js
out
dec
jo
mov
mov
and
dec
cld
repz
mov
daa
aad
jnp
cld
dec
mov
aas
mov
jae
int3
mov
xchg
dec
sub
jmp
dec
add
js
lcall
rcrb
mov
xor
mov
xchg
fsts
mov
ret
jmp
mov
pop
add
inc
std
mov
divb
sub
aas
adc
mov
aam
push
push
xor
xlat
jp
int3
pop
lahf
mov
pop
push
int3
in
fistpl
add
mov
cmp
or
fsubrl
mov
fisttps
iret
rorl
sahf
inc
rorb
ret
inc
xchg
jbe
fwait
push
roll
jnp,pn
mov
mov
scas
cmp
or
mov
push
ss
insl
data16
inc
orl
and
fmuls
adc
rcrl
aas
sbb
inc
jl
pop
test
jge
dec
imul
sahf
fisttps
lods
fstps
jmp
pop
lahf
loop
sub
int3
pop
mov
andl
std
dec
dec
cmpl
out
fiaddl
pop
jmp
inc
lods
mov
nop
fcomps
mov
cmpsl
and
in
test
add
insl
test
cmc
leave
pop
and
loopne
mov
enter
jg
inc
adc
dec
insl
lods
pop
dec
adc
or
data16
out
js
mov
jge
popa
int
mov
sbb
inc
jnp
adc
orl
push
sub
lahf
push
ja
jns
xlat
mov
mov
hlt
leave
flds
enter
nop
push
sub
fsub
sub
add
mov
mov
jmp
inc
fsts
adcl
sub
std
xchg
pop
ja
push
push
sub
mov
xchg
js
cmp
sti
int
push
add
aas
dec
and
pop
push
in
mov
ljmp
jmp
mov
or
cwtl
jecxz
inc
scas
ret
fstps
mov
aam
out
mov
jno
sbb
and
mov
mov
movaps
dec
mov
mov
jecxz
and
cmpsb
xchg
xor
fwait
or
pushf
gs
sbb
dec
push
mov
mov
imul
cmc
xor
cmp
iret
xor
fsubl
int
inc
ret
dec
jl
xchg
in
fstpt
in
pop
test
push
inc
cmc
in
adc
push
and
cld
sbb
fists
fildll
in
sahf
and
lods
adc
dec
and
mov
rolb
std
adc
lds
xor
mov
mov
pop
push
adc
xor
fldl
jg
add
jle
pusha
mov
pop
outsl
cmp
mov
int
or
or
lcall
cmp
hlt
xchg
lahf
fcomps
jle
push
mov
mov
push
add
ljmp
add
jae
cs
cmp
jle
aad
mov
movsl
scas
jo
out
add
call
pop
mov
fcoml
cmpb
inc
mov
test
mov
sahf
pop
cmp
sbb
cld
cmp
mov
inc
pmulhuw
fisttps
dec
insl
mov
pop
add
into
movsl
je
mov
xchg
orb
inc
sub
jge
push
jp
aad
test
into
jle
stc
add
out
mov
or
ss
push
mov
or
gs
mov
dec
sub
and
dec
test
out
cmpsb
mov
insl
aad
clc
push
adc
ret
fcoml
popf
filds
test
pusha
jb
mov
sbb
pop
xor
lahf
adc
jg
aad
fucomi
add
and
or
jle
rcll
jmp
lea
sub
in
lods
movsl
xor
pop
pop
jge
fimull
mov
bound
sub
outsl
xor
sbb
xchg
fdiv
jns
idivl
dec
out
leave
jge
gs
lea
pop
mov
lahf
ficoms
mov
push
inc
fisubrl
mov
inc
adc
sbb
or
inc
jne
xor
in
pop
jae
pop
aas
inc
pop
jo
inc
sub
pop
stc
jbe
pop
push
lods
or
jl
mov
aaa
pushf
pop
xor
pop
inc
push
push
xor
cmp
cmp
call
mov
xchg
jmp
inc
stos
cwtl
lret
lds
push
mov
addr16
out
and
inc
or
mov
insl
rolb
movsl
out
aaa
jle
fwait
dec
push
adc
pop
dec
jae
dec
cmp
push
cmpsl
addr16
cmp
fildll
or
repnz
call
xor
mov
inc
lds
jne
xor
dec
sbb
add
ret
dec
cmc
fmuls
cmc
xchg
jo
not
jp
cwtl
pop
add
daa
loop
popf
adc
fstpt
data16
mov
inc
mov
and
jne
mov
int3
pop
mov
jl
xchg
jae
stos
fcoms
jnp
rorb
divb
mov
add
inc
sub
movsb
inc
xchg
repnz
lods
fiaddl
gs
inc
sub
je
faddp
fadd
push
dec
cmp
adc
leave
stc
ds
or
mov
add
jmp
fstl
cwtl
cmp
adc
cmovle
adc
scas
xchg
cld
jne
lea
and
mov
outsl
add
out
jmp
cmpsl
sub
mov
adc
mov
pop
fcomp
cmp
mov
or
push
bound
or
dec
xor
jb
inc
and
mov
loope
movsb
or
in
mov
nop
ja
xchg
jg,pn
loop
mov
xor
loopne
enter
daa
jle
push
push
xchg
add
xor
add
in
inc
dec
pop
xchg
adc
sbb
dec
clc
out
call
xchg
jno
lret
fwait
jo
scas
mov
mov
hlt
stos
sub
xchg
fstpt
mov
add
test
fiadds
jmp
sub
pop
inc
rcrb
push
lea
adc
call
cwtl
insb
hlt
gs
inc
jae
stos
jnp
xor
mov
mov
mov
cmp
inc
outsl
test
arpl
ret
push
add
xchg
aaa
jmp
adc
xchg
jae
or
outsl
dec
or
cwtl
adc
lcall
mov
jne
das
push
dec
sub
mov
rorl
aaa
jb
push
jae
call
iret
xchg
mov
jo
stos
mov
and
mov
inc
imul
fwait
rcr
jmp
jge
add
cmp
sbb
adc
mov
sbb
add
aas
push
aas
pop
andl
push
inc
mov
inc
shrl
lods
nop
sahf
mov
mov
test
andl
fldl
testl
push
add
xor
pop
xchg
repnz
xlat
jmp
lcall
mov
pop
clc
adc
push
mov
push
push
xchg
or
call
mov
cmpsl
loop
jne
ror
pop
loop
call
in
fisubl
push
scas
ljmpw
mov
stc
inc
mov
jae
lcall
loop
insb
jno
mov
xchg
ret
mov
std
gs
outsb
cld
sub
xchg
dec
fistl
js
pop
adc
xchg
jp
daa
pop
rcl
pop
push
std
lea
sub
inc
mov
mov
xchg
inc
mov
aaa
bound
jae
xchg
addb
push
mov
movsl
pop
fistpl
pop
xchg
cmpsb
loopne
mov
rorb
loope
ja
mov
loopne
mov
repz
pushf
lret
jns
pop
lods
ret
in
and
mov
fmul
divb
lcall
push
lods
push
jne
sbb
cmc
jno
stos
ljmp
popa
std
rcrb
pop
enter
jmp
and
jl
pop
das
push
push
sub
cmp
aas
adc
fs
xchg
dec
std
adc
aad
es
inc
inc
enter
cli
pop
adc
adc
out
cltd
xchg
dec
cs
jno
xor
add
sbb
rcl
add
mov
ftst
imul
inc
sbb
das
dec
mov
push
jmp
or
push
adc
cmp
rcrl
test
idivb
aas
or
jle
inc
in
pop
cmp
imul
xchg
or
cmc
mov
pop
gs
mov
dec
adc
jecxz
pop
xorl
stos
insb
mov
inc
stos
inc
lea
push
flds
add
xchg
jle
dec
loopne
mov
and
shrb
jnp
push
fcoms
stos
cmpsb
mov
gs
lret
mov
pop
cmp
jnp
cmp
jo
dec
mov
push
and
scas
fdivl
movsl
push
push
jp
stc
add
cmp
jmp
mov
xor
adc
negb
je
jecxz
push
lods
pop
fwait
adc
mov
call
ret
add
sub
movsl
push
add
add
arpl
fmul
shlb
dec
and
fdivrs
xchg
dec
sbb
pop
dec
push
sbb
lds
adc
cld
push
jb
sbb
lock
dec
xchg
mov
scas
push
inc
inc
mov
jnp
jnp
mov
call
add
jl
loope
push
imul
jle
stos
cltd
cmpsb
xor
mov
xor
xchg
aaa
push
add
mov
fldt
pop
divl
pushf
mov
inc
sub
lret
xor
lret
pop
sub
popf
pop
mov
xchg
addr16
mov
inc
cmc
sbb
push
and
dec
push
out
fstps
repnz
outsb
imul
loope
pop
rorb
into
pop
repnz
xlat
inc
sub
out
fucomi
insb
sbb
fidivl
cmc
daa
movsb
fwait
outsl
ds
outsl
xorl
cmp
js
sub
pusha
xor
mov
xchg
sub
hlt
addl
dec
cltd
fwait
aaa
dec
mov
jo
or
push
pushf
push
out
inc
push
sbb
test
or
add
std
loope
or
pop
pop
imul
inc
xor
inc
dec
fcompp
fwait
mov
push
idivb
mov
mov
mov
sbb
xor
push
cltd
in
add
lods
push
cmc
sub
outsb
ds
mov
add
lds
shr
lods
sbb
hlt
inc
into
pop
in
adc
pop
adc
cli
mov
inc
out
mov
push
add
mov
jmp
addb
mov
cmp
or
jbe
xor
pushf
mov
icebp
negb
dec
inc
mov
pop
aas
mov
popa
aaa
sbb
cs
mov
loopne
cli
push
mov
xchg
xor
ja
jbe
scas
test
push
loope
inc
push
cmp
mov
cmpb
sti
add
mov
jecxz
fcoml
cmp
mov
negl
addr16
xor
pushf
mulb
mov
in
rorb
jl
sti
cmpb
ret
xchg
mov
out
mov
cmp
jno
mov
mov
xchg
bound
xchg
movsb
out
lock
mov
mov
ljmp
mov
pop
in
insl
mov
int3
je
mov
xchg
aad
xchg
out
and
mov
movsb
out
lret
nop
sub
dec
mov
mov
arpl
call
push
mov
push
mov
cli
dec
mov
fucom
mov
movsb
sbb
call
inc
cmp
aas
push
jp
fnstenv
loop
fwait
outsb
loope
cmp
add
inc
lods
cmp
xor
cmp
jge
jle
push
xor
out
inc
stc
push
add
out
stos
inc
xchg
cmp
imul
or
xor
add
pop
sbb
mov
out
inc
inc
jno
movsbl
addr16
xor
pop
dec
pop
inc
xchg
imulb
cmpsl
inc
jns
cmp
daa
push
xor
inc
addr16
cmpsb
xor
mov
push
xchg
call
add
mov
dec
ljmp
mov
mov
mov
ficoml
mov
and
in
inc
clc
mov
inc
pop
sub
daa
sub
sub
pop
add
ret
cmpsl
cmovb
or
test
jmp
cmpsb
mov
add
ret
jnp
add
cmp
das
sub
outsl
and
int
sub
sub
jae
outsl
lea
lods
cmp
mov
mov
pop
mov
lret
pusha
into
inc
mov
stos
jmp
in
movsl
add
ss
ret
cmp
push
lcall
inc
enter
ret
pusha
flds
adc
mov
lods
js
cmp
ss
into
jle
jbe,pn
lods
out
sbb
enter
push
loop
shlb
dec
andl
int
iret
repnz
jae
xor
aas
in
repz
fisttps
dec
out
into
lret
mov
idiv
out
jnp
or
sbb
mov
cmpsl
or
mov
lds
aas
repnz
adc
nop
or
push
pop
fisubrs
dec
stc
sbb
inc
fwait
divl
lea
mov
xchg
inc
out
mov
mov
push
xchg
jbe
cmp
push
mov
cmpsb
imul
out
xor
add
repnz
imul
mov
lcall
mov
subl
aas
push
push
add
pop
hlt
fbstp
std
inc
cmpsb
dec
mov
dec
iret
std
lods
sub
ffreep
and
aas
into
xchg
mov
dec
and
test
pushf
inc
inc
stc
fidivs
into
xchg
pop
lods
dec
jp
push
repz
movb
xchg
dec
jl
bound
push
int
or
pop
sbb
pop
fildl
cmp
rcrb
icebp
sub
push
or
jbe
fmul
cmp
arpl
ret
fadds
cs
les
les
xchg
ret
das
dec
mov
push
push
test
out
dec
insl
lcall
call
push
les
ss
mov
or
and
xor
leave
out
clc
scas
int3
add
clc
and
loopne
out
push
lods
lea
jecxz
cltd
inc
xor
int
ficoms
xor
pop
aad
xchg
fdivr
pop
push
ffree
ds
aaa
addr16
pop
popa
mov
out
add
xchg
cmpsb
dec
lret
adcb
mov
mul
pushf
cli
leave
ret
push
push
scas
fcomp
ret
pop
mov
movsl
fimuls
shll
pop
movsb
arpl
imul
shrb
leave
stos
adc
xor
orl
sbb
push
mov
and
pusha
mov
jl
clc
js
gs
cltd
lret
push
pop
push
and
xchg
mov
sbb
cmp
xlat
mov
rcrb
adc
notb
mov
xchg
call
cwtl
fsubp
xchg
xor
xor
add
adc
jb
test
jg
mov
pop
test
mov
pushf
in
inc
push
mov
in
ret
mov
ds
leave
lret
adc
loop
call
add
andb
daa
jb
pop
daa
cmpsl
cmpsl
daa
adc
add
ret
mov
shl
jb
push
into
ret
lcall
lret
and
mov
mov
xor
sbb
pop
cli
lret
mov
adc
mov
mov
shll
neg
enter
mov
xchg
cltd
inc
xchg
outsl
adc
fcoml
jmp
fs
jo
addr16
in
rolb
mov
lds
cwtl
shll
mov
add
lea
mov
xlat
fisttpl
jmp
xchg
pop
jb
cmpsb
aaa
or
fld
add
stos
test
push
jns
jecxz
loop
aam
fsub
insb
test
mov
add
lcall
inc
rorl
and
mov
xorl
test
imul
xchg
xor
mov
rorb
push
mov
xchg
cld
into
mov
fidivrl
mov
mov
scas
aaa
mov
xchg
mov
jecxz
int
popa
xor
subb
into
inc
imul
and
sbb
xor
cwtl
fnstenv
ror
sahf
cmp
movsb
call
adcl
mov
push
inc
mov
and
cmpsl
rclb
pushf
dec
pop
popf
inc
mov
test
lods
mov
jg
lods
dec
cli
scas
and
sti
adc
out
scas
out
mov
push
inc
cmc
adc
ljmp
decl
or
push
roll
and
dec
jge
mov
push
push
pop
sbb
mov
push
mov
mov
pop
or
test
in
cvtps2pi
insb
dec
xor
lods
cld
cmp
and
sbb
imul
into
and
shll
sub
jo
add
dec
out
subl
jnp
mov
or
insb
jge
inc
sbb
or
inc
xchg
movsb
sti
mov
sahf
dec
fs
jecxz
rcl
inc
adcb
sbb
or
pop
push
sti
rcll
mov
mov
insl
cmc
add
adc
sbb
mov
cmc
lret
mov
fidivs
out
movsb
xchg
loopne
inc
mov
aam
ds
int3
inc
movsl
add
jge
leave
insb
adc
insl
pop
rorl
lock
sub
push
sub
sbb
push
mov
mov
testb
popa
xor
into
adc
xor
pushf
jp
inc
inc
cmp
nop
sbb
int3
testl
fstps
in
sbb
push
sbb
mov
push
loopne
jp
daa
in
mov
scas
nop
ror
xchg
mov
bound
and
sarb
out
js
ret
aaa
or
sahf
lcall
dec
cmp
imul
xchg
jnp
scas
xchg
dec
hlt
adc
push
add
xchg
faddl
pop
cmpl
pop
fisttpll
xor
movsb
repnz
pop
sub
lcall
xchg
out
andb
fs
sub
lret
stos
adc
add
lcall
data16
or
jae
leave
shrl
out
pop
or
xor
and
xchg
push
pop
or
daa
mov
sbbb
andl
xor
mov
outsl
pop
push
data16
and
outsl
imul
cmp
ds
data16
inc
adc
pop
stos
insl
call
mov
push
mov
or
pop
push
lcall
and
int3
xchg
xchg
jo
or
es
xlat
subl
jle
push
xchg
js
in
ss
mov
add
rorb
lcall
scas
pop
push
gs
fnsaves
pop
mov
stc
or
sbb
clc
add
jae
popa
push
pop
xor
adc
adc
lret
loope
sbb
mov
mov
or
jle
pop
fcmovnb
pop
xchg
fdivs
or
movsl
out
ds
mov
adc
lret
dec
inc
lods
inc
add
xor
fsubrl
or
sub
mov
sub
jno
adc
clc
test
out
sar
sub
jnp
test
out
jb
mov
xchg
dec
rol
inc
or
out
push
ljmp
jnp
cmp
repnz
hlt
mov
xor
test
mov
popa
loop
jbe
movsl
cmp
xor
daa
dec
lret
pop
and
xor
sbb
nop
add
mov
loop
fldcw
fnstsw
js
xor
jns
or
xor
popf
sbb
jno
out
cld
and
pop
push
jmp
test
and
fbstp
xor
fs
loop
xchg
and
xchg
dec
inc
add
inc
sbb
and
arpl
cld
xchg
mov
or
sub
mov
rcrl
in
jne
cmpsb
addl
xor
psubb
push
add
mov
inc
call
ret
fcomps
loop
cmp
pop
outsb
mov
outsb
out
insb
cs
dec
sub
xor
xor
pusha
add
movsl
outsb
add
mov
fwait
xor
sbb
dec
lods
jo
je
or
pusha
sbb
pop
pop
push
inc
int3
xlat
lahf
mov
icebp
sbb
push
dec
ret
addr16
mov
fsubr
popa
fcmove
push
sub
push
cmc
rclb
movsl
int
jge
mov
movsb
test
test
pop
test
arpl
and
dec
arpl
std
inc
mov
divb
fadds
rcll
cmp
stos
clc
pop
leave
mov
orb
ror
mov
jb
lahf
push
cmp
lock
imul
adc
push
dec
popf
xor
ljmp
fnstsw
cli
divb
jo
outsb
in
xchg
in
icebp
push
cs
cmpsb
mov
adc
xchg
pop
pop
mov
in
inc
dec
jne
mov
popf
mov
sti
sbb
das
shll
xchg
or
frstor
loopne
and
mov
push
pushl
xchg
inc
jmp
cltd
lcall
jecxz
inc
mov
and
paddq
or
clc
rcrl
repz
test
insl
sbb
cmpsl
jle
jecxz
mov
hlt
jle
push
cmp
lcall
xor
push
adc
and
mov
xchg
les
and
inc
mov
sub
cmpsl
cld
jo
and
add
xor
lds
push
mov
cmp
or
adc
ret
mov
mov
js
ret
push
pop
sub
lcall
mov
xchg
clc
mov
out
out
mov
fsts
out
add
gs
test
jo
or
xor
push
adc
fwait
ss
sub
pop
push
fsubrl
or
xor
sbb
fdivs
sbb
mov
or
jge
daa
xor
add
ret
stc
xor
xor
pop
push
insl
xchg
int
fs
dec
outsl
fs
jle
in
subl
inc
jmp
adc
push
dec
pop
xlat
jl
xor
sbb
bound
scas
popa
aaa
mov
in
mov
ja
xchg
daa
pop
in
xor
mov
push
xchg
repz
hlt
push
mov
int
or
cmp
ss
repz
push
es
xchg
jmp
push
shr
xchg
push
xchg
int
adc
push
push
sbb
xchg
ret
fldl2t
cmp
mov
test
jae
mov
in
lahf
xchg
and
cltd
aas
idivb
aad
out
addr16
cmp
shl
lret
xchg
push
sub
popa
and
jae
rcrb
ffree
push
cld
orb
and
lock
add
sbb
inc
sbb
imul
sbb
adcb
mov
sub
xchg
enter
jecxz
sbb
std
decb
rcr
movl
cmp
addr16
jno
shlb
push
jle
add
subb
inc
rorb
xchg
cmp
jb
out
inc
xor
and
cmp
insb
ret
pop
jmp
mov
ljmp
mov
inc
mull
add
mov
cmp
dec
sub
xchg
jecxz
inc
mov
xchg
add
add
jl
adc
ficompl
mov
push
xchg
loope
mov
dec
cmp
jne
jmp
aas
cmpb
stc
fisttps
add
rcll
fsts
inc
xchg
fistpl
jno
add
adc
add
or
push
in
daa
sbb
xor
cmc
and
sbb
sbb
add
outsb
cbtw
das
xchg
sbb
and
cmp
rclb
mov
jo
repz
mov
xor
lock
nop
push
ja
pusha
or
jmp
adc
mov
sbb
cmp
ss
jg
xchg
leave
cmpsl
ret
enter
mov
aas
adc
dec
xchg
lahf
pushl
imul
sahf
mov
mov
pop
mov
cmp
pop
jecxz
pop
jmp
popa
ljmp
icebp
jecxz
rcll
xchg
leave
dec
jbe
outsl
sbb
and
adc
hlt
adc
je
and
xchg
cmp
adc
mov
aas
cmp
jp
sbbb
fsub
dec
repz
xlat
enter
sub
rorb
cltd
xor
dec
sbb
jmp
jbe
aas
and
aas
enter
scas
fiadds
aaa
ss
push
lahf
lahf
imul
sti
aaa
pop
push
in
shl
pop
test
mov
popa
mov
cmp
push
mov
cltd
les
shrb
scas
adc
inc
jb
and
jae
adc
push
testl
insl
pop
cld
cmpsl
addb
shl
outsl
mov
jle
mov
fimuls
push
lods
mov
adc
pop
adc
dec
dec
mov
or
jl
push
addr16
add
mov
lea
sub
mov
movsl
pop
add
mov
scas
sub
popa
sarb
dec
inc
sub
or
push
cvttps2pi
dec
jno
pop
out
repnz
mov
hlt
jg
shlb
sbb
xchg
in
aas
push
and
add
imul
lods
roll
add
aam
lcall
leave
pop
sbb
fyl2xp1
nop
push
rcr
pop
shll
dec
lods
clc
in
inc
mov
dec
mov
lods
lock
ss
data16
add
or
and
push
lret
or
push
push
push
je
popa
lock
out
xchg
iret
fisttps
data16
xchg
cmp
test
jo
cmp
loope
ret
xchg
jae
imul
or
cmp
xchg
jecxz
out
add
aad
insl
sbb
pop
out
cltd
push
inc
xchg
pushw
inc
pop
inc
jp
fnstsw
stc
ja
add
scas
jo
in
movsb
int3
adc
xor
jg
into
lods
cmp
mov
push
movsb
pop
xchg
jbe
stc
dec
sbb
sub
sbb
out
adc
mov
mov
or
stc
movsb
stos
lods
jo
in
pushl
ret
inc
in
in
lret
adc
in
mov
stos
jne
xchg
sahf
mov
std
lahf
pusha
mov
xchg
adc
jle
fildl
mov
inc
in
sti
arpl
popf
mov
lcall
xchg
int
outsb
xchg
lods
push
movsl
hlt
mov
push
out
mov
inc
aad
mov
lret
arpl
mov
sbb
dec
incb
cs
dec
addr16
ds
add
mov
cmp
fs
cmp
or
or
xor
insb
cmpsl
cs
bound
mov
pop
cs
bound
push
jmp
jmp
jb
jmp
stos
inc
fsubp
and
add
popa
outsl
addb
je
mov
shrb
sahf
and
sbb
pop
xchg
fdivrs
in
mov
add
data16
testb
push
add
in
fldl
in
enter
std
inc
mov
push
and
cmp
pop
jle
xchg
pusha
push
mov
leave
fdivs
data16
xor
sbb
jnp
cltd
out
inc
xchg
pushl
xor
insb
movsl
mov
xor
or
out
icebp
push
xchg
mov
adc
and
in
popa
xchg
fisubrl
xchg
dec
cmp
call
mov
dec
xor
mov
inc
dec
lds
lock
jmp
jnp
pusha
sahf
insb
mov
adc
push
loop
cwtl
inc
mov
sub
add
or
xchg
add
mov
les
or
adc
push
lock
scas
popa
inc
mov
jle
sahf
sbb
sti
mov
xchg
xchg
insb
mov
push
fcmovnbe
mov
repnz
pop
pop
scas
test
push
roll
popf
xor
sti
xchg
lea
out
push
leave
or
mov
jb
das
enter
dec
mov
out
call
jecxz
adc
cs
daa
dec
lcall
xor
cli
mov
dec
out
mov
ss
pop
leave
nop
push
dec
fucomip
xor
mov
js
push
repz
test
mov
and
fstpt
pop
and
cmp
ds
add
xchg
fdivrp
jmp
int
add
jns
cmp
pop
aam
mov
mov
aam
push
cmp
ss
cli
mov
jecxz
popa
xlat
xchg
mov
jle
mulb
aad
xlat
cmc
jmp
hlt
pusha
jno
popf
aaa
movsb
push
aas
xlat
push
jbe
push
push
mov
jne
jnp
dec
fwait
cmc
or
sbb
insl
inc
inc
mov
js
fcomip
test
xor
cltd
sar
mov
out
dec
sub
xchg
jge,pn
or
and
lcall
mov
gs
outsb
jb
insb
inc
mov
dec
ljmp
pushf
shlb
pop
xlat
jle
das
mov
adc
movsb
bound
mov
mov
or
mov
call
mov
push
and
popf
sahf
mov
cmp
iret
int
push
adc
flds
nop
fwait
shll
loop
test
jecxz
imul
xor
and
jb
add
and
mov
call
mov
xor
jle
sub
into
xor
jno
xor
call
lods
fstpt
lods
mov
jne
cmp
sbb
out
xchg
icebp
in
ss
pop
jb
adc
pop
cmpsl
mov
test
out
xchg
imul
xlat
popa
jl
mov
inc
in
fs
jecxz
cli
dec
sbb
shlb
in
popf
cs
adc
add
mov
mov
push
mov
mov
sbb
out
or
sub
es
call
xor
jb
mov
in
and
in
mov
out
enter
icebp
push
ret
dec
xor
pop
test
imul
fldcw
add
add
xor
subb
xchg
or
mov
mov
jle
aam
je
nop
mov
and
cmc
int
clc
xor
cmc
ret
mov
mov
mulb
jns
push
jne
mov
shlb
jl
pop
cmpsl
aam
or
add
addr16
sbb
xor
test
jnp
sahf
roll
sbb
stos
loop
fnstenv
es
or
imul
fdivl
mov
shrl
ja
pop
call
test
lahf
lahf
repnz
pop
gs
xchg
mov
xor
xchg
dec
jae
push
adc
inc
add
outsl
fadds
stos
jg
gs
negb
mov
leave
jnp
jnp
mov
incb
movsl
aas
pop
or
lret
imul
dec
mov
sub
mov
mov
les
lods
mov
xor
negl
cmc
arpl
xor
je
or
jae
arpl
sub
xchg
add
sar
cmpsb
xchg
and
sub
in
popa
fucom
in
es
sbb
lds
sbb
dec
push
add
popf
pop
cmp
mov
inc
mov
mov
and
dec
data16
call
add
xor
out
xor
mov
int
cltd
rolb
addr16
mov
lods
lcall
cwtl
and
insl
xor
and
sub
and
outsl
test
mov
pop
push
or
mov
mov
cli
outsl
xor
mov
sahf
in
mov
xchg
cmc
loopne
dec
lock
xor
sub
cmc
shrb
pop
xor
dec
enter
ds
push
sbb
sbb
lea
pop
in
cmp
jl
or
loope
lock
cmp
mov
push
ret
leave
aas
mov
push
adc
jnp
insb
lods
xlat
sub
add
lock
xchg
jae
inc
pop
movsb
arpl
xchg
push
sar
adc
rol
pop
and
sahf
jecxz
mov
dec
xchg
push
xchg
cld
sti
pop
sbb
int3
or
sub
movsb
ss
pop
xchg
bound
dec
movsl
dec
mov
sti
cmpsb
adc
push
jbe
mov
sub
mov
sub
sbb
pop
cmp
inc
test
or
test
push
jbe
xlat
lock
sub
lahf
cmpsb
nop
mov
call
popf
mov
inc
in
ret
cwtl
jp
add
daa
xchg
arpl
scas
lea
xor
mov
mov
stc
hlt
in
dec
lock
je
inc
aas
inc
dec
out
pop
rol
push
add
js
add
jmp
mov
inc
retw
adc
push
sub
push
sbb
jnp
rcrb
inc
cmp
pop
and
insb
mov
or
sub
mov
jns
mov
mov
mov
sbb
iret
cmp
imul
imulb
fcompl
sbb
data16
dec
xchg
data16
stc
mov
jbe
and
mov
in
and
mov
mov
mov
adc
mov
rol
cmp
repnz
mov
in
scas
ret
into
sub
pop
jne
mov
in
inc
int3
outsb
outsl
ret
popf
arpl
xchg
add
imul
loop
cmp
sbb
jae
fnstsw
sbb
pop
add
adc
insl
push
or
dec
dec
cmp
mov
outsl
sub
and
dec
jg
mov
mov
sub
loop
mov
mov
pop
sub
mov
daa
enter
and
push
mulb
jg
push
xor
std
jecxz
xchg
mov
adc
iret
cmc
mov
dec
fwait
scas
pop
orb
clc
repz
aaa
jb
sub
pop
lahf
push
xor
mov
push
aad
int3
ret
es
jl
cltd
sbb
gs
or
subl
inc
pop
jge
aaa
lods
adc
inc
xor
pop
shl
int
jmp
lcall
sbb
aaa
jg
pop
insb
cwtl
cmc
jne
in
stc
sub
push
mov
pop
arpl
mov
loopne
mov
cli
shll
andl
sti
fcmovne
inc
std
lea
rol
es
outsb
ret
lcall
cmpsl
add
and
adc
addr16
xchg
mov
xchg
adc
test
out
cltd
cmp
imul
data16
rorb
adc
shll
insb
sbb
sbb
call
lea
xor
sahf
add
in
aad
dec
inc
jecxz
fsubr
adc
jnp
outsb
cmpb
or
inc
inc
and
out
in
and
scas
mov
pop
sub
xchg
xor
std
add
es
leave
ds
dec
add
out
dec
outsl
cld
mov
push
or
xchg
fisttpl
aam
dec
out
dec
subl
xor
mov
dec
cli
stos
out
mov
cmp
scas
std
inc
and
dec
orl
shrl
out
je
aad
popf
mov
int3
ljmp
jge
int3
int3
lahf
arpl
lret
cs
and
push
iret
jne
stos
jmp
adc
dec
mov
lods
repnz
inc
cmp
stc
pop
or
push
xlat
or
add
std
aaa
sub
fldcw
enter
xor
xchg
xor
call
mov
cwtl
dec
push
jecxz
push
dec
push
stos
jo
or
rcl
mov
xchg
clc
mov
adc
xor
dec
ljmp
out
sub
cmp
outsb
imul
into
repz
lds
aad
pushf
adc
push
jl
loop
or
shr
inc
cmp
xor
cmp
sub
popa
movsl
mov
inc
adc
sti
mov
push
sahf
mov
xor
ret
add
popf
dec
in
out
iret
sti
fsubl
mov
jmp
stc
mov
adc
pop
push
dec
xchg
mov
out
out
mov
sbb
lret
push
in
movaps
xlat
lea
inc
pop
pop
call
cmp
lcall
idiv
test
addr16
aas
addl
inc
sub
mov
push
aaa
jle
pushf
mov
push
fistl
aad
loop
add
loop
rclb
xchg
dec
ret
and
jns
mov
and
push
xlat
cmp
cmp
dec
sub
pop
and
sbb
add
mov
mov
popa
push
out
ja
ljmp
clc
mov
jns
sub
dec
test
enter
mov
or
das
inc
outsl
push
jl
jno
sbb
je
jne
cmp
jnp
rcr
clc
sahf
and
adc
daa
adc
sbb
jge
pop
aam
push
shlb
cmp
in
outsw
push
or
outsl
push
dec
out
stos
mov
pop
mov
pushf
adc
repz
inc
inc
mov
and
mov
iret
idiv
and
mov
sub
add
jbe
and
sbb
add
add
dec
mov
mov
in
sbb
shll
xchg
mov
ja
notl
aas
out
enter
nop
mov
mul
xor
mov
cmp
es
dec
add
dec
hlt
inc
out
cmp
orb
and
in
fsubr
sahf
pop
and
loop
mov
cltd
out
aas
lods
pop
fstpt
xor
mov
movsb
and
cmp
pop
lea
imul
enter
cld
sbbb
xor
push
enter
push
fists
orl
cmp
push
imul
xor
stos
bound
xchg
rorl
or
test
sbb
stc
add
xchg
or
repnz
push
test
mov
push
mov
in
faddp
imul
inc
repnz
insb
dec
testl
push
add
mov
int
xchg
mov
cmp
and
xchg
sbbb
imul
pusha
js
push
pop
push
dec
mov
int3
push
xor
clc
sahf
lds
mov
push
daa
push
call
sti
xchg
push
dec
sub
icebp
inc
inc
and
inc
loop
ljmp
xlat
int3
data16
jae
push
push
ficoms
jg
int3
loope
lock
insl
call
nop
jmp
sbb
mov
adc
cmp
adc
shrl
movsl
jl
pushf
sub
std
mov
sbb
jno,pn
in
fcmovbe
sub
outsl
cmp
pop
adc
mov
mov
lock
pop
xor
push
mov
pop
out
gs
sbb
and
out
and
js
lahf
bound
and
loop
rorl
loop
add
ss
mov
xor
adc
popl
pop
pop
stos
mov
jns
testb
and
xor
notb
icebp
mov
pusha
inc
add
test
outsl
jg
cmp
mov
sbb
imul
enter
cmp
imul
or
scas
push
popa
xor
out
pop
notb
in
mov
imul
int3
sub
xor
sbb
sbb
push
xlat
mov
jno
jo
inc
rcrl
mov
ds
in
daa
sbb
add
mov
inc
paddusb
mov
rolb
xor
push
cs
mov
sbb
mov
push
les
ret
adc
xor
sub
mov
mov
dec
mov
sub
jmp
int
andl
jno
arpl
or
fists
inc
pop
pop
mov
sbb
bound
je
dec
adc
pop
dec
xor
das
adcb
ret
xor
mov
jle
andnps
or
out
add
in
fistl
aad
sub
rclb
push
jb
xchg
pop
push
out
mov
lret
lret
pop
pusha
andb
out
test
outsb
cmc
in
mov
fldt
push
or
aam
leave
ret
cwtl
cmp
das
frstors
loopne
jne
sbb
add
ret
add
fisubl
mov
clc
and
rcll
jno
popl
jg
cmp
into
addl
add
test
cmc
into
test
sub
add
push
pop
loop
mov
mov
outsb
add
aad
inc
cs
ficoml
fcomps
ds
out
iret
xchg
and
movsl
popa
jae
jo
mov
sub
mov
mov
push
sub
adc
push
or
xchg
or
loopnew
int3
loope
cmp
aam
jo
into
lods
pop
push
shll
mov
cmp
inc
movsb
mov
xchg
dec
sub
mov
cmp
mov
pop
jo
jecxz
out
shlb
lds
lea
inc
cmpsb
jmp
xor
adc
insl
pusha
movl
sub
dec
jnp
mov
or
hlt
call
push
add
iret
inc
xchg
sbb
insl
mov
clc
jb
inc
rorb
gs
pushf
sub
iret
adc
sbb
cmp
jp
cmp
test
inc
repz
sahf
in
int
fmull
lea
into
push
pusha
lcall
or
cmp
sbb
popa
mov
insb
xlat
push
push
fwait
cmp
or
loope
pop
or
jo
dec
sbb
inc
aaa
test
out
imul
xor
mov
xor
or
test
fldt
clc
push
pop
ss
pop
pusha
adc
xchg
mov
in
testl
fs
or
arpl
fistpl
pusha
stc
sti
adc
push
idivb
sbb
emms
fs
adc
mul
popf
ficompl
mov
js
clc
add
jle
stc
and
mov
ret
add
jp
testl
test
cmp
xchg
xchg
mov
xlat
ror
out
lret
hlt
pop
cmp
cmpsb
and
mov
cmpsl
test
push
mov
jo
mov
jg
stos
in
or
mov
pop
jg
cmp
test
fdivr
mov
bound
or
adc
cmp
or
jnp
int3
test
nop
push
fdivs
push
dec
fildll
or
shll
inc
bound
xchg
pop
push
sub
lret
int
add
es
mov
push
insl
xchg
test
add
sbb
xorl
inc
and
push
ret
mov
sub
daa
enter
or
sahf
jb
cltd
sub
jb
hlt
adc
repz
addr16
mov
dec
bound
cmp
fs
cmp
add
lods
jb
push
shl
aad
pop
addr16
and
sub
cld
sbb
mov
or
pop
cmpsb
add
add
mov
idiv
push
rorl
rcll
dec
out
enter
sbb
jl
sti
ret
lds
push
sub
mov
test
popa
dec
sub
xchg
stc
xor
mov
push
jecxz
stc
xor
and
mov
stc
int
pop
adc
mov
fsubrs
popf
jmp
mov
xchg
or
mov
lcall
daa
loopne
pop
or
ficompl
imulb
push
xchg
mov
lret
xchg
cs
jl
jbe
adc
inc
add
mov
outsl
mov
cmp
pushf
mov
push
mov
pop
mov
int
scas
incl
rcrl
cmp
mov
mov
xchg
mulb
ret
sbb
popa
adc
fcmovnu
push
fisttpl
and
out
repz
call
jecxz
inc
jns
xchg
mov
mov
and
sbb
sub
in
jne
mov
inc
inc
arpl
mov
and
lcall
andb
and
insl
pop
enter
xorl
mov
cmp
xorb
adc
push
bnd
and
imul
add
fnstenv
in
clc
pushf
jge
fdivrl
repz
cmp
xchg
pop
jle
loop
sbb
cmp
sub
mov
stos
out
adc
js
je
cmp
out
jmp
jp
adc
js
or
pop
mov
jp
ret
pop
popf
xorl
pop
outsb
or
or
cmp
xor
jg
cwtl
pop
xchg
pop
clc
outsl
pop
cmp
pop
mov
add
and
push
push
addr16
das
push
mov
or
out
mov
dec
push
int3
pop
xor
xlat
xchg
or
cmp
add
je
outsl
or
bound
sub
lods
xor
jae
jno
pop
out
cli
jmp
hlt
int3
ror
or
push
inc
xchg
mov
lods
scas
sbb
sti
add
push
out
fiadds
mov
test
add
pop
lret
repnz
jne
jmp
rcrb
popa
shll
in
mov
xchg
in
aas
in
jns
cs
mov
jp
notb
push
push
aaa
call
xchg
and
inc
leave
adc
idivb
mov
mov
pop
mov
mov
mov
das
xchg
or
dec
mov
in
scas
inc
push
fldcw
div
iret
xor
popa
clc
outsb
xchg
jge
je
test
test
fs
and
cmp
aad
sahf
push
lret
outsl
scas
pop
cbtw
addr16
sti
sub
ret
in
call
adc
pushf
movsb
fwait
add
pop
push
lcall
adc
pop
jns
sbb
push
dec
or
sbb
mov
cwtl
sub
mov
test
lea
mov
in
jge
icebp
sbb
mov
js
fcomps
jo
shl
mov
std
push
dec
movsb
inc
push
out
cmp
imul
and
inc
xor
or
iret
or
sahf
sar
mov
arpl
cmp
jl
out
or
add
fisubrl
fsub
jo
lcall
out
pop
push
scas
sbbb
jno,pn
dec
in
bound
cwtl
cmpsb
dec
in
inc
pop
push
or
repz
call
and
add
inc
xchg
mov
and
cmp
leave
cmpsl
push
pop
jne
inc
jle
or
rcll
xchg
mov
push
mov
adc
shrl
inc
jbe
cmp
shl
xorl
pcmpeqb
pop
pop
cwtl
jno
sub
cs
nop
test
pusha
stc
inc
repnz
sub
xchg
lahf
in
sub
out
lahf
and
lds
lods
dec
xchg
stos
xchg
pop
xchg
clc
sbb
aad
scas
insb
fisttpll
es
push
xchg
mov
pop
jo
dec
inc
jge
dec
popa
inc
inc
sub
ja
sub
push
ja
mov
xchg
push
pop
sub
mov
xchg
aam
mov
and
stos
add
jle
or
jbe
mov
mov
js
repz
mov
loop
rcrb
pop
sub
push
jo
fwait
test
xchg
loope
xor
dec
vpaddsw
pushf
mov
leave
imul
push
pop
xchg
inc
adc
jl
cmpsl
pop
mov
je
push
push
sub
jbe
push
dec
addr16
or
jb
inc
pushw
lods
fcompl
orb
cmpsb
lahf
lock
xor
sti
daa
insl
imul
stos
aaa
jle
dec
ja
mov
out
sub
fdivp
or
loopne
push
mov
pushf
jbe
lahf
mov
pop
jns
cmp
outsb
mov
hlt
sub
scas
js
int3
rcll
pop
jbe
lret
sbb
bnd
fneni(8087
xor
dec
test
rcr
push
cltd
lock
mov
in
or
clc
xor
and
cltd
fmul
int
and
jp
push
push
push
jns
jo
jno
xor
add
in
cltd
lcall
pop
into
lcall
adc
xchg
les
jmp
xchg
pop
gs
rorl
adc
pop
rclb
xor
inc
inc
fdivr
testl
jecxz
mov
fisubrl
push
jnp
push
in
outsb
pop
cltd
rorl
cld
aam
outsl
rolb
lea
cmpsb
stc
adc
adc
adc
lret
mov
lcall
inc
mov
mov
and
and
gs
sbb
fcomps
pop
sub
sbbb
mov
cmc
addl
in
int
icebp
inc
ret
inc
pushf
inc
pop
push
or
fs
xor
mov
sbb
mov
std
push
and
jb
pop
xor
mov
mov
das
add
mov
sbb
adc
add
shrl
jbe
mov
sarb
xor
fcomp
rcl
out
ret
push
dec
imul
std
xchg
adc
loopne
xorl
andb
push
leave
dec
mov
cwtl
mov
fwait
aam
mov
jle
hlt
pop
aad
pop
xlat
push
insl
jne
popf
sbb
or
in
in
idivb
add
repnz
and
lds
dec
pop
test
adc
out
pop
push
jns
orl
dec
pop
jge
test
xor
repnz
or
cmc
mov
lcall
xor
cmc
imul
jb
mov
jne
cltd
pushf
pop
and
das
lods
sbb
xchg
jo
mov
push
fisubrs
push
je
lea
leave
sub
bound
adc
mov
out
outsl
fcomp
out
daa
xor
xor
lret
insb
mov
mov
aam
movsl
xor
pop
xchg
loope
xlat
in
pushfw
and
lods
jge
add
dec
cmp
pop
inc
fwait
nop
fwait
xchg
fcmove
bound
xlat
or
movsb
dec
and
lea
out
popa
jnp
into
pop
dec
mov
cmp
cmp
outsb
test
inc
cld
stos
ret
and
sub
jbe
mov
inc
pop
and
incl
cli
inc
jmp
mov
movb
adc
ds
xchg
outsb
or
cmp
adcb
pop
mov
push
aam
jg
fnstcw
movsb
mov
jp
inc
cmp
and
in
cmp
mov
ljmp
mull
ficoml
inc
fcomi
fisubrs
adc
mov
iret
lods
rolb
test
fimull
cmp
mov
scas
bound
int3
jl
mov
push
dec
mov
pop
dec
mov
fcoms
jl
cmp
cmp
jnp
cmp
jl
hlt
sbb
pop
xor
lock
add
push
cmpsl
and
cmpb
iret
stos
pop
push
add
jge
mov
fdivl
and
shlb
lea
insl
mov
jnp
gs
mov
xchg
pop
push
pop
aam
xchg
pop
shrb
adc
idivb
xchg
or
inc
fistpll
scas
arpl
lret
fbld
dec
lret
and
movsl
push
lret
stc
insl
pusha
inc
add
ret
bswap
outsl
push
jg
test
std
inc
lock
xor
or
shll
movsb
in
sahf
cmp
loop
test
mov
dec
lret
inc
jg
mov
ljmp
pop
lfs
int3
ja
insl
scas
lcall
out
push
xor
xor
adc
cltd
lods
inc
sub
push
jmp
flds
add
insb
jae
jp
cmp
cmc
out
aas
les
cmp
push
ss
jmp
jae
aas
mull
mov
jnp
add
lods
adc
je
mov
das
or
push
out
or
xchg
sarb
mov
xchg
loop
xchg
lds
xchg
pop
pusha
mov
imul
xchg
xor
clc
push
mov
test
sub
jp
scas
sbb
or
aam
lods
cmpsl
repnz
ljmp
pop
aad
pop
add
pop
es
lcall
add
push
stos
push
mov
cmc
je
xor
test
ja
mov
inc
push
add
stc
repz
stos
and
inc
rcll
addr16
fisubl
jns
aad
dec
mov
xchg
dec
cmp
push
ret
test
notl
ja
or
mov
xchg
pop
or
arpl
cmp
scas
add
in
xor
into
nop
mov
push
mov
mov
nop
jmp
in
fadd
cmc
sub
ljmpw
scas
stc
mov
nop
faddl
inc
rcrb
test
insl
dec
ret
es
pushf
dec
rorb
push
mov
sub
jne
addr16
push
std
cmp
pop
inc
movsl
adc
enter
inc
rolb
xor
dec
pop
sbb
lods
xchg
sub
and
xchg
dec
fidivrl
inc
lcall
movsb
cmpl
gs
jl
popa
xchg
xor
jmp
or
push
sbb
mov
inc
pop
iret
stos
add
and
test
push
cld
cmp
in
int3
sbb
mov
lods
into
cltd
sbb
loopne
or
mov
pushf
lods
and
jg
push
pop
push
lret
test
jecxz
fidivrs
repz
lds
ja
pop
dec
inc
sbb
mov
mov
daa
rorb
xchg
cmc
fdivrs
push
outsl
jle
lea
xor
js
sbb
xchg
popa
loop
stos
or
mov
push
hlt
mov
xchg
push
and
sbb
ljmp
daa
push
sar
pop
jnp
push
sbb
lret
call
mull
push
scas
jne
add
xor
push
jl
push
imul
shlb
xlat
xor
xor
and
add
dec
jmp
mov
sarl
xchg
pop
xorl
repz
ret
jp
dec
adc
inc
cli
mull
int3
fnstenv
insl
pop
out
jmp
scas
jle
std
je
mov
in
mov
push
inc
scas
incl
addl
lock
mov
loope
sub
mov
ret
enter
mov
not
cmp
or
call
or
add
shll
pop
cmpsb
sbb
xchg
ret
cmp
push
mov
mov
add
pop
xor
adc
xchg
adc
lret
mov
dec
xor
inc
loope
xchg
int
aam
jg
adcb
pop
hlt
xor
jnp
fs
pop
sub
xor
pop
pushf
iret
mov
adc
add
stos
mov
lds
add
sub
adc
inc
mov
rcrb
iret
mov
aam
pop
add
jecxz
lea
and
mov
out
pop
jge
sbb
jb
lods
out
xchg
dec
jne
mov
sbb
push
cmc
sub
push
icebp
imull
xorl
mov
int
xor
idivb
in
dec
ja
pop
clc
adc
jns
push
int
sub
adc
add
adc
imul
xorb
ds
inc
fidivl
mov
call
xchg
je
aam
fcoml
adc
add
mov
ret
mov
add
cmp
std
and
mov
fstps
out
dec
cmp
xlat
inc
mov
dec
jo
add
test
aaa
ret
or
and
mov
jno
and
neg
xchg
repz
outsl
sbbb
xor
out
je
inc
jge
xor
push
cwtl
test
bound
adc
inc
into
push
aaa
dec
leave
jp
and
mov
add
push
movsl
mov
pusha
pop
div
mov
lret
int3
mov
mov
xor
arpl
add
icebp
push
fimuls
xchg
mov
mov
mov
jle
ror
or
out
in
xchg
inc
push
test
shl
push
cmpsl
inc
popa
test
and
mov
xchg
xchg
mov
xchg
das
jecxz
jne
xorb
dec
es
xchg
and
cmp
mov
xor
sub
xor
leave
cs
dec
cli
push
ret
xor
adc
mov
imul
push
ss
aas
loopne
inc
mov
out
jle
outsl
mov
fdiv
stc
push
add
adc
xchg
xor
pop
sub
jp
mov
xchg
insb
into
imul
cmpsb
std
jno
inc
loop
aad
sarb
push
scas
call
cmp
cmp
fstl
std
xlat
shrl
mov
out
scas
pop
mov
arpl
mov
fisubrs
xlat
pusha
sbb
roll
mov
addb
imul
jmp
cwtl
add
and
mov
add
lds
imul
aam
outsb
rclb
xchg
pop
jno
xor
mov
push
cli
fsubrs
inc
xorb
add
dec
push
sub
nop
dec
lcall
push
lcall
mov
cmp
push
es
jns
mov
cmpsl
jmp
ja
jb
in
cmp
lret
mov
lcall
adc
pop
sbb
std
sub
ret
jne
pushf
or
fcomip
mov
push
pusha
pop
pop
imul
mov
inc
stos
xor
stos
lods
xor
pop
jmp
jp
dec
cmp
loopw
iret
jbe
mov
inc
mov
add
jecxz
jo
fcoml
xchg
setnp
cmc
pop
popf
xchg
or
push
fdivrl
lcall
fwait
or
pop
jmp
ret
mov
or
imul
cmp
ljmp
dec
out
mov
push
mov
xlat
pop
fistl
pop
fstpt
fstps
xchg
adcb
mov
rcll
pop
xor
ds
into
outsl
inc
sub
enter
lods
mov
push
xor
call
jnp
fdivr
aad
pop
aaa
pop
pop
sbb
xchg
and
pop
lret
sbb
pop
cmp
inc
test
scas
nop
rcrb
cltd
ja
in
add
int
lahf
movsb
jp
shrl
inc
dec
lahf
out
jb
xchg
subb
xchg
fsubl
in
test
xchg
test
cmpl
rorl
inc
hlt
cmp
jp
push
sbb
jmp
popa
je
mov
adc
mov
into
and
pop
dec
lret
notb
xchg
cld
adc
mov
mov
cli
pop
fsubl
dec
out
addl
add
mov
mov
cld
dec
xor
loopne
in
scas
out
sub
jne
ss
push
jg
test
mov
mov
mov
xchg
roll
daa
jp
adc
test
cltd
addr16
dec
push
lret
jl
pop
push
dec
adc
push
ss
cmc
mov
cwtl
pop
cwtl
pop
or
ret
mov
iret
lods
jp
mov
pop
mov
push
cmc
bound
mul
in
pushf
push
out
mov
mov
push
jl
mov
imul
cmp
push
fldcw
or
in
aaa
xlat
and
cmp
cmc
sub
pop
or
lcall
inc
imul
lods
mov
mov
adc
mov
popf
dec
add
mov
pop
ds
mov
push
testl
js
pop
mov
iret
dec
popf
mov
stos
mov
dec
jne
mov
or
add
and
arpl
call
cmp
daa
mov
mov
jno
es
sub
lock
imul
out
cld
sbb
xor
ret
inc
fstps
repnz
sbb
add
call
mov
add
push
call
das
stc
nop
out
jae
xor
insb
cli
mov
mov
das
lock
mov
insl
or
jb
movsb
mov
lea
mov
js
push
adc
ds
std
sarl
les
jns
mov
and
xlat
shr
repnz
test
push
or
mov
lods
and
in
sbb
js
dec
stos
inc
adc
jns,pn
cmp
pop
jnp
sbb
sub
loopne
pusha
sub
sti
cmpsb
cmc
mov
sub
outsl
dec
mov
xor
lock
loop
adc
or
out
push
xorl
incb
jmp
in
outsb
lock
mov
xor
jmp
fisubrl
movsb
jmp
jb
cli
dec
inc
leave
and
push
std
dec
fsts
fsubs
ljmp
mov
in
push
in
jbe
adc
pop
sbb
add
cmp
or
cmc
stos
ret
mov
pop
das
or
in
mull
loopne
in
cmp
sub
inc
jne
scas
sbb
fsts
pop
fiaddl
fcomps
or
repz
jecxz
lret
xchg
add
cwtl
xchg
push
or
ja
adc
pop
or
lret
std
mov
hlt
add
or
call
ja
adc
lcall
and
sbb
scas
bnd
jmp
int3
cmp
cmp
dec
and
ljmp
test
sbb
cmp
and
mov
insb
popa
mov
sub
adc
bound
stos
sarb
test
cmp
mov
push
pop
xchg
mov
dec
rol
push
rorl
fidivl
push
nop
jae
sub
test
xor
add
popa
js
repz
xchg
cmp
cmp
aaa
es
fbld
sbb
or
mov
and
jle
js
inc
lds
mov
loop
xor
je
dec
lret
xor
pop
aam
adc
outsb
lea
lods
cmp
imul
jae
jge
xor
or
xchg
loope
rcll
mov
inc
call
imul
cmp
adcl
in
inc
mov
jmp
add
pusha
in
jno
inc
scas
jge
push
fcoml
adc
pop
outsb
leave
pop
adc
dec
push
jbe
popf
cmpsl
lret
push
mov
cmp
push
repnz
outsl
dec
gs
or
sbb
aam
insl
idivl
fstpt
dec
sbbl
subb
fsubl
sahf
subb
push
sbb
outsl
inc
xchg
and
push
push
fs
fbstp
pop
out
mov
js
mov
dec
dec
fdivrp
xchg
fstpt
out
mov
pop
popa
xchg
incl
dec
add
pop
and
jne
pushf
cs
shlb
popf
sarl
fwait
bound
add
imul
pop
mov
pop
jl
mov
icebp
mov
leave
cmp
add
xor
mov
imul
mov
bound
pop
call
mov
scas
mov
pop
outsl
mov
jmp
fs
out
rcll
xchg
cmp
adc
cmp
pushf
insl
xor
adc
mov
in
jb
lea
push
out
dec
adc
or
lcall
push
cmc
mov
mov
insl
jnp
outsb
push
cmc
test
xchg
sti
push
sbb
and
fisubrs
mov
dec
push
xchg
adcb
xor
inc
lods
icebp
pop
or
call
push
dec
push
sbb
jg
push
mov
push
mov
stos
xor
adc
scas
cmc
jae
lea
jecxz
jb
test
aad
mov
enter
cld
push
push
out
xor
push
aas
dec
movsl
int
sub
addr16
stos
out
pop
adc
into
cltd
pushf
into
or
jno
loopne
lret
cs
call
cmp
jae
jmp
cld
cmp
add
aam
hlt
jmp
push
in
jl
and
sub
add
jo
jmp
cmp
push
cmp
push
xor
int3
inc
push
inc
lret
fcmovbe
dec
lods
push
movsl
hlt
pop
sub
rclb
fistps
adc
out
dec
adc
scas
mov
out
or
jb
dec
lcall
cmp
incl
adc
xor
inc
push
js
mov
dec
or
idivb
mov
outsb
and
jl
dec
shrl
jo
mov
pop
inc
sub
jns
shrb
dec
mov
push
mov
jg
push
mov
cmpsl
int3
in
mov
add
aam
fdivs
cmc
cmc
clc
mov
subl
xchg
mov
cmp
mov
adc
mov
fcmovne
out
mov
pop
filds
xchg
out
cwtl
and
pop
xchg
xchg
movb
sbb
rolb
or
in
add
std
test
outsb
xor
pushw
xchg
aad
out
mov
or
cmc
in
test
sbb
pop
lds
adc
idivl
dec
cli
lret
and
jb
add
xor
or
sbb
mov
mov
test
sub
mov
jle
mov
xor
outsb
nop
test
pop
adc
loop
or
jge
lahf
inc
xor
cmp
inc
into
ret
xor
sub
shlb
std
lea
add
pop
mov
push
gs
adc
movsl
jno
out
scas
xchg
push
inc
repz
xchg
xchg
push
aas
out
mov
mov
or
bswap
js
adc
mov
jno
leave
mov
test
test
adc
aam
pushf
cmpsb
daa
cmp
or
stc
dec
les
xchg
test
inc
scas
mov
insb
mov
popf
sti
jbe
mov
cmp
dec
pop
push
clc
xor
mov
hlt
dec
dec
push
test
xchg
test
aas
les
sbbb
jno
stc
sbb
or
popa
dec
pop
mov
push
mov
inc
add
xchg
sbbl
adc
inc
xchg
popf
das
and
lahf
mov
push
ds
lahf
scas
push
mov
jae
jne
add
push
fstps
movsl
jmp
jecxz
out
push
es
addr16
mov
lea
inc
push
test
mov
filds
mov
add
xor
cmp
sub
in
mov
lret
pop
int3
mov
push
ljmp
sub
fiadds
jmp
sbb
adc
xchg
int
dec
mov
in
dec
lcall
jo
xchg
pop
data16
leave
adc
cmp
mov
rclb
int
into
mov
lock
adc
xor
xchg
and
mov
cmp
stos
in
fidivs
in
pushf
jne
mov
push
fnstcw
ljmp
add
in
addr16
sub
scas
mov
dec
sarl
or
fdiv
in
xor
cld
sub
push
sbb
jnp
cmc
fmuls
daa
push
pushf
das
pop
aam
push
fwait
or
jg
mov
mov
xchg
xor
fistpll
shl
add
inc
fwait
ret
rcl
or
add
and
jl
mov
dec
xor
jmp
jnp
pop
pop
push
xchg
lods
outsl
cs
inc
das
pop
mov
jbe
add
mov
jg
pop
inc
and
pop
adc
repnz
test
sarb
sahf
movsb
mov
jl
test
mov
repz
mov
adc
fwait
mov
add
dec
xchg
test
or
push
xchg
lret
xchg
fbstp
jb
stos
lock
pop
mov
or
mov
mov
test
sbb
cmpsb
cwtl
sub
dec
push
mov
inc
cmp
and
push
lock
push
lods
int3
xorl
pop
les
in
popf
js
frndint
movsb
enter
xchg
vpshlq
insl
outsl
adc
jne
outsb
mull
mov
lret
shlb
je
xchg
adc
lcall
mov
push
shlb
fsub
inc
pop
mov
jecxz
xchg
mov
in
pop
inc
push
add
adc
fisubrl
out
pop
sarb
jnp,pn
push
push
mov
scas
dec
and
jp
shll
dec
or
push
adc
mov
nop
dec
dec
cmpb
xchg
in
rorb
lods
das
neg
sbb
test
adc
insb
adc
sbb
clc
or
inc
xlat
jno
sbb
cld
pop
or
out
ss
test
jb
jno
cmp
inc
pop
sub
xor
xor
js
popl
out
push
dec
jecxz
ret
xor
jmp
inc
test
or
shr
cmp
sub
push
mov
cmp
subb
cli
addb
cwtl
jle
jle
lcall
mov
cmp
add
pop
jle
mov
pop
mov
es
lea
ret
out
sbb
lcall
cmpl
inc
roll
icebp
cwtl
dec
dec
xchg
pop
jmp
imul
add
int3
jecxz
push
fucomi
scas
rcrb
push
jge
sti
xchg
sti
out
aad
out
jmp
dec
movsb
negb
xor
mov
sbb
sub
pop
iret
push
dec
arpl
mov
sub
mov
int
sub
jne
gs
pop
addr16
adc
cld
sbb
inc
arpl
xchg
stos
jae
pop
adc
sahf
fistl
mov
je
aas
mov
test
outsb
imul
cmp
sub
inc
mov
mov
or
cmp
scas
sbb
pop
jmp
xchg
jmp
xor
add
fisttpl
lods
mov
inc
add
push
lcall
xlat
or
adc
call
jp,pn
fiadds
aas
push
out
in
lcall
push
movb
mov
js
dec
or
aaa
mov
outsl
pop
xchg
movsb
and
mov
rcrb
fidivrl
push
xchg
cmpsb
sub
mov
js
mov
in
sub
adc
mov
mov
scas
mov
or
scas
out
fdivl
ret
xchg
orb
push
out
ljmp
enter
jecxz
or
clc
push
push
ljmp
sub
neg
add
in
sahf
test
mov
scas
or
mov
mov
mov
outsl
stc
aad
push
outsl
aaa
shl
ret
in
dec
sahf
gs
movsb
xchg
pop
into
sbb
dec
aas
loope
mov
fcoml
mov
data16
lcall
lret
jmp
imul
mov
sub
xchg
pop
push
add
jecxz
inc
mov
out
dec
mov
out
cltd
loope
adc
ret
adc
and
cld
jecxz
insb
and
mov
xchg
cs
test
xor
push
aas
data16
loope
lock
sbb
les
test
mov
lea
jno
dec
adc
ss
stos
adc
lahf
aam
fiaddl
fadd
rcrl
jmp
fisttpll
mov
fdivr
pop
repnz
std
jmp
mov
inc
mov
outsl
lods
adc
mov
sti
and
sub
test
mov
xchg
es
cltd
ljmp
inc
aad
sarl
fsubrs
sbb
adc
sbb
loop
sub
int3
out
repz
sbb
push
xor
leave
sbb
dec
lock
mov
push
push
fmull
pop
cmpsl
nop
add
xlat
std
daa
int3
cmp
ret
push
in
pushf
movsb
arpl
pop
inc
insl
or
ss
aaa
dec
ja
mov
rolb
adc
inc
test
bound
fs
cs
pop
lcall
jno
test
xor
push
xchg
fs
outsb
xchg
inc
and
push
add
dec
adc
adc
push
and
aas
or
push
lret
inc
inc
mov
inc
lcall
sbb
andl
std
into
into
push
pop
lcall
and
push
jb
xor
in
mov
cmpl
jl
cld
out
pop
xchg
into
ja
stos
js
jl
faddl
inc
fmull
adc
mov
movsb
lahf
fisubl
popf
les
scas
in
cmp
aam
add
jg
dec
arpl
or
adc
inc
test
dec
lods
aas
sub
test
ret
mov
jnp
outsb
jg
icebp
dec
add
in
lahf
imul
or
iret
push
push
sub
je
mov
stc
push
jecxz
or
dec
lea
scas
jg
xchg
mov
clc
scas
clc
in
out
cwtl
repnz
pop
imul
mov
and
cld
mov
mov
inc
sbb
cmpsl
sbb
shl
adc
cmc
or
enter
mov
add
add
cmpsb
stos
daa
or
mov
cmp
and
jo
leave
aad
stos
into
pop
sbb
mov
mov
mov
inc
stos
pop
mov
or
jnp
xor
sahf
cmp
add
xor
xor
loope
out
lcall
mov
loop
aas
smsw
in
pushf
pop
outsl
cmp
ret
push
inc
mov
jg
mov
mov
rcll
dec
in
add
jge
push
or
fadds
cli
inc
mov
stos
subb
adc
jp
repnz
movsl
data16
fwait
icebp
fistl
into
mov
cmc
mov
arpl
sti
sbb
jl
dec
xchg
int
push
stos
xor
inc
test
xorb
cld
cmp
and
mov
mov
call
cld
dec
mov
ds
ficoml
xchg
popa
jle
call
fistpl
push
rcr
fsts
test
fdivp
rcl
and
es
mov
out
push
mov
scas
mov
pop
rcrb
jae
addr16
xchg
scas
adc
mov
cmp
xchg
jmp
lcall
loop
push
xor
fistpll
mov
inc
push
fs
jb
in
arpl
loopne
sbb
inc
mov
mov
pop
int
mov
aad
jg
sti
in
push
stos
and
mov
outsl
mov
lock
in
push
cs
insb
daa
push
fstl
je
lods
cltd
ja
adc
cli
rorb
fsubr
fwait
sbb
out
gs
mov
mov
dec
ja
sub
test
mov
dec
test
scas
sub
pusha
jp
int3
pop
jno
test
cld
xchg
jmp
insb
mov
jmp
and
aaa
dec
pop
scas
lret
adcl
stos
jno
mov
mov
call
push
dec
xchg
insl
mov
push
test
add
stos
fsubr
dec
in
in
jl
imul
fisubl
rorl
push
int3
into
jb
pop
in
or
lods
call
stc
xchg
cmpsb
ja
pop
loop
mov
shl
mov
sub
leave
and
adcl
jecxz
dec
add
pop
mov
mov
or
mov
repnz
xlat
leave
ja
fstpl
xchg
outsb
inc
sub
add
sbbb
cs
xor
inc
fstpt
ret
push
lds
add
jns
fcmove
into
test
popf
push
dec
jecxz
pop
xor
hlt
adc
push
lret
ljmp
add
mov
clc
sbb
shrb
mov
inc
scas
pop
sbb
repz
jne
mov
and
in
cmp
jp
repnz
dec
mov
out
push
or
dec
or
loope
scas
cmp
adc
addr16
imul
pusha
fdecstp
cmc
shrl
imul
hlt
push
jns
scas
xchg
mov
gs
jns
sub
ficoms
aam
lds
push
lock
mov
push
jmp
dec
scas
imul
pop
mov
insb
cmp
cmp
adc
test
ja
push
cmp
std
adc
cmovnp
add
ljmp
flds
sub
mov
sbb
sub
loope
add
repz
or
test
imul
cs
xchg
push
cld
fstpt
inc
pop
inc
clc
jbe
mov
xchg
xor
mov
out
das
mov
jg
lods
stc
in
sete
add
loopne
in
repz
rcrl
add
mov
push
and
sub
je
mov
pop
data16
pop
daa
add
lahf
fs
fnsave
and
icebp
inc
mov
jg
repnz
mov
dec
adc
incl
inc
dec
jle
call
pop
das
loop
adc
jge
leave
outsl
push
ss
mov
imul
mov
es
and
in
add
aad
cmp
or
push
jge
xlat
repz
dec
cmp
lods
jl
push
cwtl
sub
adcb
push
xchg
mov
aad
cmp
cmpsl
lods
or
xor
movlps
sub
ret
addr16
jl
cmp
adc
adc
push
aad
pop
cmp
mov
push
int
gs
jmp
sti
pop
mov
jns
push
fsubl
dec
stos
leave
push
sub
mov
fsubl
ret
dec
pop
rcrl
jl
or
and
mov
leave
data16
mov
int3
mov
mov
gs
xor
lea
or
mov
jb
xor
mov
enter
out
xor
jg
sbb
xchg
add
xor
add
cmp
xor
mov
push
bound
arpl
cmpsl
dec
mov
cmp
std
test
jecxz
push
dec
outsl
push
pop
stc
inc
or
sub
fadds
sbbl
ds
mov
or
cmp
dec
add
or
test
out
scas
sbb
aad
lea
pop
sub
add
sub
out
loopne
pop
sahf
repnz
cwtl
xor
xchg
xchg
fistps
pop
ret
test
cmp
sbb
mov
sahf
cmp
push
iret
repnz
jbe
mov
sbb
inc
adc
inc
pop
lret
in
mov
jmp
pop
insb
iret
shrb
push
ds
mov
lret
inc
stc
cmc
xor
js
pop
ja
mov
aam
into
xor
roll
and
repnz
popa
xor
dec
or
repnz
int
dec
leave
fisubs
and
jmp
mov
bound
push
stos
imul
pushf
ja
imul
xor
ljmp
test
cmpsb
in
push
ss
mov
push
ljmp
shl
dec
and
into
in
push
xchg
jo
xchg
mov
aam
fwait
dec
xor
in
repz
xchg
lods
sub
insl
jb
cli
cmp
arpl
jp
out
xchg
adc
stos
mov
jne
and
lods
push
mov
popf
imul
out
sbb
outsb
add
add
xchg
jno
pop
dec
fimuls
inc
ficompl
lods
lret
pop
lahf
stos
aas
fistpll
daa
cmpsb
sub
push
sbb
shr
cmp
push
adc
gs
dec
add
enter
mov
repz
cmp
dec
and
xchg
popf
cmp
sbb
mov
stos
inc
push
pusha
cmp
mov
lock
out
fidivrs
pop
add
cmpsl
sbb
test
addr16
mov
fistps
inc
dec
mov
pop
mov
mov
add
inc
inc
mov
repz
fidivl
pop
xchg
out
inc
add
mov
jle
or
jbe
lret
pushf
negb
or
testb
dec
test
xchg
in
mov
jle
int3
lock
inc
mov
mov
inc
sub
sbb
jne
xlat
pop
jg
sahf
mov
dec
aad
push
test
fdivs
adc
push
notl
js
inc
hlt
bound
or
pop
sub
pop
aas
aaa
rcrl
jmp
jmp
inc
mov
cltd
rorl
mov
add
jle
pop
aam
inc
test
sbb
dec
aas
xchg
repz
add
stc
xor
mov
mov
out
pop
jmp
inc
sbb
dec
mov
sahf
sub
popf
and
fldt
pop
add
dec
pop
test
pop
mov
adc
cmpsb
data16
mov
jnp
shrl
mov
testl
push
cltd
outsb
rclb
shrb
jp
xorl
cli
adc
repnz
dec
int
mov
fdivp
mov
or
push
mov
adc
fcomps
dec
push
aaa
test
decb
inc
mov
jg
dec
or
aaa
das
loope
push
imul
loopne
sub
pop
push
jge
inc
hlt
aad
rcrl
jns
pop
cmc
add
pop
push
inc
xor
aas
push
call
popa
mov
inc
fcoml
stc
mov
lock
pop
pop
cmp
add
jmp
into
test
outsb
sbb
xrelease
stc
out
in
mov
test
jns
or
and
outsl
movsl
cli
mov
aas
out
jge
cmpsb
add
push
out
jnp
sbb
bound
adc
lock
shll
jae
mov
xchg
gs
jne
push
cs
pop
push
jae
mov
mov
stc
dec
aaa
pop
stos
mov
push
add
inc
sbb
pop
jmp
xor
jae
sbb
loop
in
xor
shll
pop
xor
lods
jmp
lods
test
mov
out
dec
cmp
cmp
push
or
pop
test
pop
push
in
or
leave
mov
xor
or
adc
dec
mov
scas
add
inc
mov
js
in
dec
es
sub
jae
cli
movl
out
fwait
popf
adc
sbb
in
popf
jns
clc
icebp
aad
cmp
add
pop
sub
rcl
lds
repz
adc
wrmsr
adc
ds
push
adc
pop
mov
push
mov
pop
lea
out
and
and
mov
push
fcomps
icebp
mov
mov
cmc
push
push
js
cmpb
pop
in
shl
adc
std
inc
mov
dec
and
inc
xchg
sub
popl
mov
fwait
scas
push
push
pop
fldt
out
mov
popa
mov
test
xchg
and
mov
sbb
ljmp
fstl
mov
xchg
push
xor
ljmp
push
es
dec
jmp
inc
outsb
adc
addr16
pop
scas
lret
aas
test
stos
movsb
xchg
mov
cmp
dec
sub
push
cmpsl
negl
add
rcr
fstps
add
adc
dec
fadds
jmp
sbb
inc
cmc
cmp
lods
lcall
sub
pop
mov
pusha
cmp
cmp
push
rcrb
stos
mov
aas
idivl
fdivs
fistl
mov
nop
cmc
lret
outsb
aaa
xchg
cs
pop
mov
outsl
test
push
xor
js
ret
mov
daa
xchg
mov
dec
fs
mov
pop
fiadds
je
jl
inc
into
jp
mov
mov
les
pop
mov
pop
mov
mov
out
pop
mov
push
mov
dec
leave
lods
les
push
icebp
fwait
and
out
outsb
mov
add
bnd
dec
push
add
ds
adc
xor
loop
mov
stos
dec
ds
push
cld
add
mov
mov
xchg
xor
incb
push
dec
loop
std
shlb
jmp
xor
std
and
sub
outsl
aaa
pop
out
and
or
sub
test
insl
fxch
jae
sub
push
lods
pop
mov
push
shlb
and
mov
cld
mov
sahf
aam
sbb
inc
push
addl
mov
hlt
mov
loop
mulb
insb
cmpsl
lds
cmp
jg
pop
notb
bound
mov
pop
pop
imul
insb
rclb
xchg
aaa
sub
fiadds
sbb
dec
mov
in
cmp
mov
adc
fnsave
push
dec
or
lods
stos
and
icebp
int3
inc
and
test
sbb
sub
jge
jb
pop
jmp
fisttpll
rorl
sahf
push
jo
and
cmp
roll
cmp
or
and
and
test
ret
push
stos
push
inc
out
lock
inc
xor
inc
mov
ret
mov
and
hlt
sbb
jb
mov
pop
test
adc
roll
ret
mov
mov
sub
fmulp
into
pusha
rolb
fstl
or
xor
jno
sbb
call
testl
cmp
mov
or
mov
push
push
xor
jle
setae
push
adc
sbb
out
sbb
xor
aam
pop
add
dec
rorb
hlt
out
push
cmp
add
loope
movsb
jg
lret
and
pop
xchg
jb
mov
and
mov
test
inc
or
dec
inc
sbb
pop
mov
xor
xchg
mov
pop
inc
daa
mov
push
outsb
data16
mov
cmp
test
into
xchg
jno
jmp
jnp
repz
jp
push
sbb
test
sahf
mov
lea
or
dec
push
in
jns
fwait
out
dec
push
pop
pop
pop
loope
aaa
mov
jns
dec
pop
mov
out
mov
fists
jle
xchg
and
or
stos
xchg
addr16
scas
fs
add
rcrb
sbbb
rcrb
pop
dec
push
push
jnp
dec
sbb
jmp
jno
lds
mov
fwait
insb
rorl
and
or
int
stos
sahf
inc
mov
aad
xlat
inc
sub
in
inc
cmp
push
cmpsl
and
enter
rclb
in
ds
lahf
inc
andl
int
mov
fs
mov
decl
lods
insb
adc
arpl
dec
dec
hlt
adc
adc
fsubrl
lods
jge
mov
lcall
mov
fsts
adc
lods
mov
and
test
jb
aaa
mov
jp
pop
adc
pushf
xor
jbe
mov
sub
sarb
mov
mov
sahf
dec
mov
cmp
push
lahf
pusha
ficoms
sahf
push
ret
cmpsb
mov
adc
xchg
sub
in
push
add
fwait
in
mov
repz
cli
adc
fidivrs
shlb
adc
ret
cmp
test
pop
and
jecxz
pop
jge
xchg
enter
or
arpl
aam
mov
outsl
pavgw
jecxz
loopne
inc
ss
cmp
dec
cmp
cs
subb
mov
xchg
sub
stos
int
inc
xlat
dec
push
push
and
ret
jle
mov
add
pop
inc
jbe
popf
data16
xchg
les
add
xor
adc
adc
adcb
inc
jle
ss
sti
jecxz
inc
mov
stos
lahf
imul
imul
adc
pop
popa
sbb
mov
xlat
sti
and
push
sub
lret
adc
sti
idivl
sub
test
loop
cmp
das
ret
adc
cld
jae
cmpsb
sti
mov
out
pop
add
push
cwtl
sbb
xchg
jo
adc
xchg
sub
mov
loope
add
leave
xor
aaa
mov
sub
jle
fcmovnb
pop
adc
es
mov
nop
stc
push
add
jnp
shll
movsb
popf
repz
ja
enter
sbb
jge
call
jmp
push
and
pop
daa
add
ud0
pusha
pushf
mov
aas
pop
jle
jbe
pop
mov
gs
mov
lea
xor
sbb
inc
or
push
arpl
pop
mov
lods
mov
into
iret
fldcw
xorl
push
push
pop
add
fs
pop
add
jge
insl
xor
fcmovnu
insl
ss
or
in
xlat
sar
cmp
sub
push
cmp
cltd
cmp
mov
dec
sysenter
push
sbb
push
sbb
push
cmp
jp
in
fmul
in
xchg
test
jb
call
int3
sar
adc
fwait
add
sbb
cmpsb
pop
xchg
push
xor
sbb
sbb
in
or
jge
jae
mov
add
lods
or
js
cmp
imull
ds
out
repz
popf
xchg
add
push
fst
add
xchg
aad
sub
and
push
mov
int3
adc
pop
mov
fs
leave
xor
jno
lods
or
or
sub
sti
insb
repnz
imul
jge
add
xchg
xchg
sbb
lods
in
ja
push
rdmsr
lret
xor
ds
jno
mov
mov
rcr
inc
pop
xlat
lea
fmuls
inc
ret
and
jne
cmp
sahf
lret
fwait
or
push
cmp
sbb
jge
push
mov
mov
in
scas
sarb
hlt
add
bound
das
jle
and
push
sbb
pop
mov
out
sti
dec
sbbl
adc
data16
push
hlt
mov
xchg
leave
lods
pop
cmp
or
shll
fwait
ret
aas
mov
popa
iret
jb
push
iret
scas
movsb
call
lock
jle
es
idivl
jbe
js
stc
adc
pmaxub
mov
push
movsb
cmp
addl
in
or
mov
in
inc
sub
push
ja
adc
pop
sbb
add
sub
adc
push
leave
and
add
inc
clc
cmpsb
daa
pusha
cwtl
jp
int3
sbb
cs
cmp
popa
and
arpl
push
jmp
mov
mov
xchg
or
mov
cmp
mov
add
cmp
insb
or
ja
std
sti
fistl
pop
rcll
cli
jo
in
testl
adc
movsl
aaa
imul
stos
aam
notb
mov
mov
pop
jno
fidivrs
sbb
outsl
pop
mov
xor
lods
pop
repz
adc
and
mov
cmp
incl
and
xor
imul
loope
dec
xlat
sub
je
mov
nop
test
cmp
mov
inc
pop
or
pushf
pop
pop
mov
int
xor
mov
inc
nop
sub
cltd
inc
jecxz
mov
es
mov
jno
xor
fmull
add
daa
jnp
lret
jp
sbb
push
add
cli
or
fs
cli
lret
add
xchg
movsl
lret
rcrl
test
rclb
jp
pop
dec
mov
bound
and
xchg
mov
stos
mov
dec
adc
xchg
cmp
push
sbb
rorb
xchg
das
or
sti
int3
mov
aas
mov
insl
lret
and
mov
fidivl
cmp
or
mov
xchg
rolb
push
pushl
loopne
and
out
cltd
popf
dec
push
test
push
inc
fstps
repnz
outsb
sahf
adcb
popl
mov
fsubs
dec
sbb
div
addr16
pop
sahf
shlb
jg
sub
jp
mov
mov
dec
jbe
addb
sbb
pop
into
std
jp
cmp
xchg
push
shrb
xchg
ja
jg
pushf
std
dec
or
movl
push
hlt
push
in
push
adc
pop
jg
sub
mov
fidivrs
mov
or
add
gs
addr16
inc
push
dec
in
xchg
or
inc
in
cli
pusha
dec
lock
outsl
push
sbb
adc
pop
and
lahf
mov
xchg
cmp
aas
repnz
pusha
adc
mov
cmp
mov
lock
jp
mov
mov
jp
xchg
xchg
out
fdivrp
jno
mov
inc
out
add
or
jecxz
dec
jno
adc
imul
xchg
lods
push
js
xchg
pop
aam
push
int3
cmc
push
movsl
addb
mov
mov
cmp
icebp
cmp
pop
jae
lahf
ss
mov
addr16
test
repnz
jecxz
mov
cs
jbe
add
je
push
lea
or
das
add
fisttpl
les
and
mov
add
jnp
cmp
lahf
lahf
shl
ficoms
xchg
dec
add
jno
add
cld
ret
sbb
inc
sahf
inc
idivl
pop
hlt
mov
loop
and
hlt
pop
and
pop
jle
popf
xchg
pushf
mov
jl
arpl
adc
ss
das
adc
repnz
out
daa
lcall
dec
in
pop
push
add
push
jo
sahf
lret
mov
rclb
xchg
jb
in
inc
mov
sub
mov
xchg
sub
pop
jecxz
push
mov
sbb
cmp
xchg
sub
mov
jle
sahf
icebp
and
lods
jb
mov
sub
adc
push
fwait
inc
ds
sbb
push
or
and
icebp
int3
xchg
call
addr16
scas
mov
dec
lds
inc
mov
fldt
sbb
outsl
data16
or
push
mov
jg
lds
mov
into
lods
stos
mov
gs
es
subl
mov
inc
jle
das
adc
xchg
and
clc
cmp
adc
xchg
mov
imul
push
mov
mov
xchg
fistps
add
in
scas
popa
sahf
push
aas
sbb
or
fcomps
sub
jb
pop
sub
into
scas
call
dec
mov
es
jl
push
ja
mov
adc
sbb
fldl
in
outsb
in
dec
push
push
pop
mov
aas
xor
push
xchg
cmp
mov
inc
iret
ret
mov
sub
orl
into
loope
dec
mov
mov
jmp
bound
mov
dec
mov
or
jne
xlat
ja
xchg
adc
dec
sub
bswap
popa
xchg
jecxz
pop
and
xor
push
mov
push
jno
pop
adc
out
jnp
fisubrs
add
xor
jp
mov
jbe
mov
movsl
lahf
sbb
into
pop
repz
mov
xor
adc
pushf
loope
inc
clc
scas
jbe
cmpsl
loopne
dec
pushf
dec
sbb
jp
pop
ror
stos
out
jecxz
andl
shrl
mov
push
push
dec
movsl
adc
insb
imul
jb
and
in
popa
rol
xchg
fisubs
ss
inc
and
shrb
cmc
rcll
push
dec
faddl
lods
push
loopne
in
cld
sbb
sbb
scas
dec
lret
mov
mov
dec
mov
jns
pop
mov
int3
sbb
call
mov
fwait
clc
iret
xor
xchg
mov
fdivl
lea
fwait
cmp
and
jmp
add
push
mov
lahf
or
aas
and
les
and
test
cmpsb
sub
mov
sbb
jo
std
or
rcll
das
push
xchg
arpl
outsb
mov
lea
dec
cmp
in
jl
cmpsb
scas
push
icebp
fs
xor
add
xchg
mov
cmp
shrl
jp
dec
mov
mov
insb
push
nop
aam
mov
imulb
xchg
jl
push
sahf
flds
lret
dec
xchg
hlt
jnp
jmp
out
lds
sahf
nop
sub
loop
pop
xlat
sahf
in
push
jbe
movsb
out
mov
fimuls
data16
call
lret
cmove
sbb
add
test
in
push
xchg
loop
sub
in
aam
icebp
setnp
mov
arpl
jbe
dec
sub
sbb
ds
rorb
sbb
popa
sbb
xor
mov
es
orl
stos
sub
jbe
mov
mov
adc
stos
sbb
rorb
aas
insl
stos
sub
sub
fwait
jnp
daa
dec
cs
out
sub
decl
cmp
cmp
jb
cmc
push
frstor
push
mov
xchg
pop
test
mov
outsl
add
ja
pop
jno
adc
insb
pop
pop
jne
mov
ret
add
mov
test
rorb
rclb
repz
xor
movsl
pusha
stos
and
int3
in
fstps
xor
xchg
xchg
xchg
mov
shrl
push
sub
dec
mov
ss
push
jmp
call
cs
pop
add
movsl
es
pop
fisubs
sub
scas
stc
in
and
sub
push
scas
dec
fdivp
into
and
pop
mov
fucom
dec
and
cmp
xchg
or
sub
jnp
fistpl
xlat
fwait
inc
mov
cmpb
rcrb
mov
xchg
dec
add
inc
test
fiadds
jb
mov
es
subl
or
pusha
mov
mov
movsl
repnz
iret
test
jbe
roll
and
sti
adc
insb
xor
call
ljmp
xor
je
filds
out
mov
adc
or
inc
push
sub
lock
pushf
dec
or
mov
out
repz
ret
decl
in
mov
repz
stos
clc
imul
imul
pop
pop
pop
jns
pop
inc
gs
and
xor
das
or
sbb
in
lods
cmp
push
in
inc
push
loop
sub
in
int
and
mov
mov
imul
fxtract
cmpl
stos
sub
mov
aad
adc
fcoml
mov
xorl
lcall
dec
iret
lret
sbbl
xchg
cmp
leave
xor
sub
or
inc
rcrb
xor
mov
out
cmpsl
fimull
xchg
lret
jnp
imul
xchg
pop
jb
sub
out
js
mov
outsb
lret
test
sub
call
mov
inc
or
jp,pn
pop
nop
ret
sub
icebp
ss
xchg
mov
mov
dec
inc
and
lret
mov
shrl
mov
scas
hlt
das
and
aas
shlb
lret
inc
cltd
cmpsl
pop
repz
xor
adc
push
fisubrs
mov
and
cs
out
sbb
lds
stos
jns
pmaxsw
adc
add
xchg
sub
adc
jnp
loope
fisubrs
loopne,pt
xchg
push
cmp
add
mov
sti
cmp
imul
xchg
les
loope
add
lods
cmp
aam
xchg
cmp
loopne
mov
cmp
mov
das
jp
adc
test
xchg
jge
ja
nop
mov
xchg
insb
lea
arpl
jmp
lods
pop
xorb
add
in
xchg
mov
ja
pop
xor
mov
int3
and
pushf
adc
popf
ret
xor
push
xlat
mov
dec
mov
xchg
lcall
clc
stos
sub
sbb
icebp
testb
fildll
stc
push
lea
pmaxub
inc
pushf
xor
adc
dec
mov
jge
mov
out
in
loope
cmp
ror
in
jnp
push
test
inc
call
sahf
adcl
mulb
add
test
mov
filds
out
mov
push
je
ljmp
xor
hlt
cmp
jnp
pop
ret
int3
and
cmpb
mov
mov
out
divb
test
int
cltd
frstor
xor
and
jno
or
mov
cwtl
xor
les
out
int
icebp
jecxz
bound
cmc
add
mov
aam
fstps
pop
dec
sbb
xor
jb
push
data16
mov
lret
repz
ss
sti
mov
cmpsl
and
pop
mov
add
and
lea
shl
inc
mov
inc
and
cmpb
leave
add
sbbl
xor
xchg
dec
mov
jl
xor
cmp
je
sbb
inc
pop
pop
sti
clc
xor
mov
pop
dec
mov
getsec
cmp
daa
dec
sarb
in
mov
ret
orl
addr16
pop
push
mov
mov
or
adc
fucom
xchg
pop
std
adc
mov
bound
sbb
jmp
es
xchg
xor
cltd
rcll
fmul
push
sarl
mov
inc
adc
addb
jne
jge
mov
cs
in
out
shl
xor
mov
jnp
fsubl
jns
add
cmp
cmpsl
lret
jb
push
in
pop
sub
hlt
sub
xor
cmpsl
popl
dec
stos
pusha
cmp
nop
adc
out
faddl
test
cmp
push
cmpsl
inc
push
and
pop
mov
mov
repnz
adc
adcb
or
cmpsl
aaa
enter
fsubrs
leave
sahf
cmc
enter
mov
popa
aad
xchg
xchg
mov
xchg
leave
insl
mov
add
in
addr16
add
repz
pop
comiss
add
cmp
bound
nop
dec
jo
mov
jb
dec
mov
fisttpl
clc
sahf
or
sbbl
je
in
sub
pop
add
data16
push
sarb
adc
sub
pop
push
and
test
mov
sub
sub
cmp
lock
aaa
mov
jecxz
push
pusha
xchg
loopne
cmpsb
fldcw
test
out
scas
and
inc
and
cltd
xor
mov
jno
ss
loopne
test
aad
popf
pop
jmp
data16
pop
inc
pop
xlat
mov
sub
shrl
jp
fisubrl
jae
adc
insl
dec
push
push
out
ss
dec
push
pushl
insl
jmp
jae
mov
cmpsl
fs
xchg
lods
mov
stos
sub
dec
addr16
or
test
hlt
push
push
pop
cmp
fistpll
or
filds
and
test
pop
gs
pop
inc
pusha
lahf
enter
aad
jne
fbld
mov
jp
int
sahf
inc
xor
daa
pop
mov
hlt
fs
pop
js
nop
inc
push
mov
sti
das
sub
xchg
inc
inc
out
mov
or
jp
lods
mov
jae
push
xor
in
mov
in
pop
add
and
cmc
outsl
jmp
roll
rolb
lret
movsl
cmc
addl
pusha
sub
ret
divb
push
cli
adcl
mov
jmp
dec
add
sbb
js
loope
ljmp
push
test
jae
in
dec
xchg
repz
cs
stos
adc
push
dec
xchg
xlat
dec
mov
aam
mov
push
andl
test
aas
dec
call
lret
cmp
aaa
arpl
dec
or
sti
push
add
out
clc
aad
pusha
les
add
cmp
stos
inc
push
fwait
xchg
mov
pop
js
jb
jb
fwait
inc
in
fistpll
pop
xchg
lods
jnp
xchg
xor
lea
xor
mov
es
cmc
mov
test
cmp
xor
and
mov
jne
jl
jmp
icebp
movsb
lods
out
push
test
cmp
stos
jg
pop
stos
repnz
lcall
mov
scas
jmp
dec
dec
pushf
int
in
xchg
leave
and
push
fidivrl
mov
sar
subb
fcoml
pushf
into
mov
popa
pop
popf
add
fldt
enter
lods
sbb
leave
in
aaa
jp
push
jmp
callw
xor
dec
fidivl
das
sub
fnsave
into
cmpsl
ret
nop
sarl
jmp
dec
pushf
jnp
loope
cmpsb
add
mov
shrb
out
lods
mov
outsb
pop
cmp
mov
daa
xchg
and
pop
filds
mov
push
pop
xchg
clc
xor
mov
lods
sub
and
dec
es
jle
or
dec
dec
test
push
xor
xchg
and
lock
xlat
pushf
jae
cmpsl
dec
push
in
mov
cmp
ret
jno
sbb
push
shl
mov
jae
sub
dec
sub
sbb
stos
mov
shrl
bound
cmpsl
cmpsb
out
pop
sub
mov
in
nop
mov
arpl
movsl
bnd
xor
lock
xchg
add
mov
insl
pop
nop
lds
or
movsl
data16
cmc
xor
or
add
mov
pop
pop
cmpsb
adc
mov
into
mov
clc
js
ss
lret
stos
adc
xor
dec
cltd
jp
dec
mov
mov
je
jl
jge
or
jne
cmpsl
data16
scas
test
xchg
xor
mov
cld
pushf
lahf
repnz
call
shll
cmp
dec
mov
mov
jbe
jle
repz
lds
mov
xchg
enter
dec
push
inc
bound
mov
fstl
mov
sbb
cmp
aam
cmpb
push
insb
lea
popf
push
push
mov
mov
insl
jecxz
scas
arpl
mov
or
inc
mov
call
add
scas
nop
dec
cmp
mov
jo
push
sarb
ss
in
sub
ss
aad
fstpl
lds
or
cld
push
out
xchg
stc
and
adc
push
in
fcomps
xchg
cs
test
inc
cmc
test
cmp
mov
sub
xchg
mov
inc
daa
cmpsb
fs
inc
enter
add
push
xor
mov
xchg
jae
xchg
jns
mov
jmp
adc
out
les
ss
cmp
jbe
push
lock
ret
mov
jbe
in
addr16
mov
out
nop
add
jecxz
cmp
xlat
mov
outsb
push
add
stc
shrb
pop
repz
push
scas
out
mov
outsl
insb
cmc
mov
jmp
xchg
inc
movsl
jae
lahf
jge
stos
in
mov
xchg
jmp
mov
test
mov
sbb
imul
call
and
pushaw
test
jg
lret
jbe
sub
jg
out
add
adc
int
and
enter
movsb
scas
lret
mov
mov
adc
movb
ret
adc
lods
repz
fildl
test
bound
sbb
inc
adc
js
xor
mov
xor
sti
and
les
outsb
stos
das
inc
ja
cmp
push
push
jns
sub
push
fstl
pop
loop
mov
xlat
enter
add
jnp
lock
scas
int3
in
sysret
out
mov
aam
adc
fistl
push
lea
loopne
cltd
sbb
pusha
scas
jg
adcl
aas
ficoml
sbb
sub
dec
testl
push
ficompl
aas
mov
iret
mov
sbbl
or
and
daa
jnp
gs
std
jbe
shrl
bsr
mov
jne
test
push
idivb
repz
adc
int
xor
mov
insl
and
fldcw
sbb
pop
sub
fst
or
insl
sbb
sub
or
and
fnstcw
add
jnp
out
push
and
inc
sbb
push
or
push
lea
rclb
inc
sti
test
mov
push
lods
nop
mov
imul
inc
dec
jnp
jns
mov
push
lret
sbb
sbb
xor
je
jge
and
std
and
or
xchg
sahf
add
frstor
or
push
das
inc
ret
adc
aam
xchg
or
pop
and
imul
adc
jge
scas
push
xlat
or
pop
cltd
int3
mov
mov
clc
lcall
sub
xchg
subb
aas
ficompl
and
imul
sbb
push
adc
xchg
mov
push
mov
push
jne
cmc
int3
loopne
mov
or
call
lret
and
ljmp
pop
mov
daa
inc
dec
dec
mov
jbe
into
ljmp
add
and
inc
punpckhwd
cmp
fwait
mov
cmp
mov
push
out
pop
test
inc
pop
andl
dec
scas
inc
cmp
test
fldenv
sbb
sub
dec
int3
cmp
call
xchg
and
insb
dec
xchg
xchg
push
cmp
and
fbstp
mov
add
inc
sbb
dec
xchg
out
pop
add
call
push
jne
mov
rcrl
push
mov
test
aas
mov
mov
fwait
xchg
jnp
push
leave
jmp
sub
pop
cltd
ds
mov
out
adc
sbb
mov
movhps
cwtl
xchg
nop
js
test
adc
shll
sbb
xor
int3
in
das
jne
xor
in
adc
dec
jae
cltd
dec
mov
push
aaa
xchg
aaa
int3
mov
xchg
testb
mov
add
scas
outsl
icebp
mov
adc
xchg
std
mov
aaa
insb
insb
inc
add
mov
mov
enter
mov
adc
cli
cmp
sbbb
loopne
aad
jbe
imul
and
adc
push
sub
bound
inc
adc
xor
cli
cmp
push
mov
fs
ds
cltd
jmp
adc
xor
in
jmp
mov
sub
les
out
sbb
test
subl
pop
jae
idivb
insb
jg
jmp
pusha
test
call
xorl
push
jge
dec
int3
mov
rcrb
aad
push
push
arpl
jge
int3
loope
fdivrl
mov
into
adc
scas
cmp
xor
pop
aas
shl
inc
sub
scas
jmp
aam
fwait
push
out
js
mov
mov
gs
pop
or
iret
bound
popf
hlt
imul
or
inc
or
pop
mov
cs
jg
fcomps
mov
jp
dec
sbb
xchg
cmp
in
and
push
add
fwait
mov
or
mov
ret
mov
outsb
mov
gs
sbb
push
pop
sbb
mov
aad
mov
ljmp
jne
arpl
jnp
xchg
add
or
xor
mov
aaa
shll
sbb
push
sub
sub
sarb
dec
adc
sbb
mov
lcall
pop
add
push
decl
fbld
and
sbb
dec
notl
cmp
jl
jge
xchg
cs
cwtl
stos
inc
add
ljmp
inc
test
insb
scas
sub
and
add
ljmp
mov
lcall
mov
lods
mov
fidivrs
orb
mov
fisttps
nop
jno
int
ret
stc
mov
cmc
lret
mov
jmp
mov
arpl
sbb
mov
shlb
aad
sub
and
pop
lods
and
push
mov
inc
push
or
sahf
push
dec
mov
ja
aas
mov
xor
cmpsl
ss
shl
jle
inc
xchg
dec
lock
adc
push
push
jp
inc
popf
call
pop
mov
js
cmpl
add
xchg
dec
jg
fldt
popf
dec
mov
fsubrs
movsl
repnz
push
cmpsb
test
in
mov
repz
sarb
mov
les
push
mov
sub
repnz
push
repnz
aam
inc
mov
jo
fucomip
push
inc
arpl
out
jns
mov
xor
arpl
fisubs
imul
imul
jg
sbb
cmp
jb
pusha
int3
and
mov
pop
and
adc
add
inc
mov
imul
in
lahf
or
mov
jns
cmp
push
fstpt
ffree
add
movsl
jge
adc
and
jbe
or
adc
jecxz
lds
jecxz
mov
ja
push
js
ret
cmpsl
pop
andb
pop
jo
inc
inc
add
xchg
test
xchg
aam
loopne
cld
or
adc
xchg
jmp
stos
fdivs
push
adc
inc
cld
pop
dec
dec
mov
dec
ficomps
imul
pop
add
xor
lahf
or
xor
or
in
mov
mov
xor
and
add
inc
ficoml
enter
xor
aas
jb
sarl
testb
mov
xchg
mov
nop
sbb
sub
fnsave
mov
jns
or
fcoml
jl
movsl
movsb
sbb
mov
xchg
mov
popa
xchg
sbb
pop
ss
sub
popf
mov
xchg
std
jecxz
scas
loope
shrl
adc
sub
mov
cwtl
push
adcb
sub
mov
lods
mov
stos
pusha
add
enter
iret
xchg
dec
out
and
jge
lahf
fs
xor
sub
divl
mov
pop
gs
sub
push
loop
dec
pop
or
pushf
and
lea
pop
lds
ljmp
movsb
shr
dec
xchg
repz
push
rcrb
iret
je
imul
daa
lods
jl
adc
test
rcl
cmp
mov
call
fwait
sub
out
push
sbb
sysexit
shlb
xor
dec
jae
mov
std
push
scas
pop
mov
lods
dec
mov
push
scas
in
int
push
dec
out
fnstcw
shlb
aas
das
inc
andb
nop
jmp
rol
xchg
mov
mov
fstp
add
insl
out
loop
inc
push
adc
gs
push
inc
mov
aaa
adc
inc
jmp
mov
pop
in
sbb
hlt
scas
adc
fcmovu
jl
inc
bswap
jecxz
fwait
xchg
push
xchg
ds
mov
xchg
fstps
js
push
stos
jb
shlb
cmp
adc
cwtl
cmp
pop
cmp
mov
jmp
jnp
in
dec
outsl
cmpsl
inc
sbb
insl
cmc
xchg
cli
dec
pop
loop
jp
xor
les
jecxz
inc
in
loope
push
add
cli
daa
aam
xor
mov
mov
mov
hlt
je
sbb
in
movsl
cmp
adc
inc
push
xor
or
repnz
add
push
mov
pop
cmp
sahf
insl
push
xchg
and
dec
cld
mov
or
cltd
jecxz
and
mov
les
pop
out
xor
je
mov
lret
orl
cmpsb
jne
cmc
mov
xor
jbe
xchg
fcompl
js
std
cmp
adc
fisubl
out
pop
pop
push
pusha
pop
rcl
rclb
jmp
push
data16
dec
jle
dec
mov
add
xchg
sti
filds
or
fnstsw
imul
cmc
sbb
fistl
mov
icebp
scas
scas
out
mov
icebp
pop
pop
xchg
bound
jge
xorb
clc
jae
mov
and
insl
push
aam
stc
cmpsb
xor
addl
jo
clc
push
in
fwait
sti
movsl
leave
xor
xor
push
dec
jno
and
dec
jp
xchg
popa
push
in
jne
xchg
in
or
popa
push
daa
addl
add
add
into
movl
pop
sub
mov
in
and
std
out
popf
out
xchg
sti
mov
push
jo
mov
cmp
nop
inc
inc
mov
xchg
sbb
mov
xorb
xlat
rcll
xchg
xchg
cmpsb
in
mov
lahf
lea
fistpll
mov
lods
push
sbb
stos
sbb
out
mov
xchg
and
add
stos
jmp
sbb
xor
sarb
cmp
jns
pop
dec
cmpsb
xchg
in
mov
sub
inc
add
push
jb
mov
stos
add
push
xchg
in
repz
add
jle
push
mov
ret
or
mov
je
test
fs
hlt
cmp
mov
test
addr16
mov
sub
fimull
dec
xchg
or
inc
sbb
xor
test
pop
adc
mov
xor
mov
ret
scas
pusha
sub
scas
leave
das
fcompl
std
adc
xchg
out
lea
lahf
sahf
ret
mov
outsb
or
pushf
test
test
dec
pop
pop
lcall
xor
mov
aaa
fs
add
inc
scas
enter
mov
cmova
jnp
lcall
or
sub
fisubs
dec
pushf
mov
pop
inc
or
pop
jno
add
cmpsb
mov
pop
cmpsl
out
mov
insb
pop
addr16
or
dec
ja
es
or
call
pushf
cltd
push
or
mov
jp
mov
repz
iret
ds
ret
daa
mov
xor
cmp
jns
shlb
push
and
fists
push
pop
sarl
pop
gs
out
pop
testl
mov
in
fisttps
out
cmp
mov
bound
ret
jge
push
mov
and
jp
xor
sbb
add
in
ret
and
jbe
notl
pop
mov
jl
add
dec
loopne
mov
pusha
cltd
and
pop
add
jmp
fwait
das
sti
push
clc
ret
mov
xor
xchg
xorb
inc
fistpl
insl
jae
or
aas
rep
mov
mov
jle
push
loop
fstp
stos
imul
pop
mov
pushf
pop
and
push
pushf
xor
nop
mov
inc
int
add
lods
scas
lret
ficoms
push
adc
xor
mov
lods
movsb
dec
mov
pusha
push
mov
shlb
hlt
dec
push
mov
dec
and
sbb
std
mov
std
jecxz
fistpll
jl
outsl
repz
push
and
aaa
jl
adc
push
out
xchg
mov
mov
inc
and
loope
pop
test
mov
mov
nop
xchg
add
ret
cmp
inc
fists
mov
nop
mov
insb
shll
cltd
fcoml
push
mov
mov
xchg
stos
pusha
mov
sarl
or
inc
dec
push
rorl
cmp
sub
pop
xchg
aaa
push
inc
mov
ss
decb
or
mov
mov
pop
sahf
dec
lock
jo
add
inc
idivl
mov
and
sub
insb
push
xrelease
mov
das
jae
pop
xor
shlb
fisttpll
sub
pop
jnp
inc
movsl
sahf
add
sarb
xchg
lds
cltd
fsubl
aam
adc
dec
jl
ds
adc
fsubs
repnz
fidivrl
add
lods
or
adcb
and
clc
cmp
mov
fwait
mov
jmp
repz
pusha
adc
std
push
mov
imul
push
repz
loopne
dec
pop
shll
shrb
out
add
xor
mov
sti
mov
outsb
dec
jecxz
aam
adc
test
add
jp
jae
aad
movsb
dec
std
lahf
es
push
dec
out
test
and
jne
sub
jp
mov
rcl
cmp
xor
test
stos
movsl
lock
xor
dec
push
cmc
repz
popl
dec
add
outsl
icebp
out
out
inc
out
jnp
icebp
pop
dec
rcl
fldl
sub
dec
xor
movsl
mov
jo
stos
and
gs
adc
xchg
mov
xchg
adc
xor
xor
pop
js
daa
nop
test
sbb
lahf
sub
cs
jb
mov
incl
icebp
adc
add
jo
out
jo
lock
iret
je
pop
jo
movsl
push
jl
mov
inc
ret
lret
outsl
daa
mov
out
icebp
subl
clc
xchg
orb
pcmpgtd
mov
fidivs
jno
ss
test
jae
rclb
pop
pop
mov
shll
inc
mov
sbb
lret
jb
test
outsl
das
int3
mov
mov
push
jecxz
loop
pop
sbb
mov
jg
lods
stos
stos
jle
jmp
adc
imul
dec
mov
in
stc
ds
inc
mov
rolb
in
imul
sub
int
dec
lods
pop
stos
xchg
stc
cmp
cld
rclb
loopne
and
in
popa
cli
lret
mov
mov
or
out
outsb
jp
lea
pusha
icebp
push
pop
or
add
out
adc
pop
push
cmp
push
pusha
xor
js
dec
xchg
idivl
lahf
clc
pop
cmpsb
mov
inc
arpl
mov
push
jmp
shrb
adc
mov
or
add
les
insl
xchg
scas
adc
ret
test
jle
fsub
jl
or
push
and
cs
stc
out
test
push
pcmpgtw
jns
jbe
cs
int3
pushl
addb
popf
out
lds
mov
add
movsl
shll
inc
jb
bound
movsb
insb
xchg
mov
sbb
sarb
pop
out
pop
lds
ljmp
mov
xor
in
loope
push
into
xchg
jge
lds
pop
dec
movsl
add
shlb
mov
jle
lret
lret
repz
or
mov
mov
aaa
cmpsb
adc
sahf
xchg
xchg
push
rorl
cmpb
xchg
or
sbb
movsl
fbld
and
mov
mov
and
xchg
lahf
xlat
nop
jnp
shlb
cmpl
insb
repz
adc
xlat
mov
pop
mov
add
arpl
hlt
sub
leave
pop
mov
jae
pop
fstl
cmpsl
lods
mov
mov
fdivrp
loopne
std
inc
in
sbb
pop
lock
mov
std
popf
sti
jle
aam
sets
movsl
mov
push
push
mov
xchg
mov
mov
test
repnz
les
fidivs
pop
loope
mov
sub
sub
in
or
fwait
addr16
loop
inc
repnz
mov
cmp
lcall
push
loopne
subb
test
test
dec
cwtl
inc
mov
inc
mov
dec
mov
test
pop
xor
mov
jno
sub
xchg
insl
fstpt
jbe
jmp
jle
pop
loopne
std
sbb
pushf
add
test
hlt
cmp
jmp
test
loopne
mov
jecxz
testb
inc
movsl
jle
xchg
cmpsl
jo
push
jecxz
rclb
lret
das
mov
xlat
adc
pop
rclb
call
xor
movsl
pushf
call
gs
add
fsubr
movsl
sub
sub
data16
or
jb
dec
test
mov
test
dec
pop
in
adc
lock
lahf
add
xor
ja
mov
rcr
gs
mov
push
in
xchg
out
lahf
dec
pop
orl
and
mov
cwtl
das
inc
sarb
sub
stos
clc
test
lahf
fildl
into
movsb
fsubs
fstps
nop
fwait
mov
pop
fnstsw
imul
daa
mov
call
aam
adc
in
je
push
repz
jge
xor
lahf
jns
mov
mov
mov
cld
cmp
testb
iret
mov
subb
cmp
out
out
adc
rcrb
out
sbb
mov
mov
ljmp
mov
push
lret
pop
pop
or
dec
dec
jg
cmp
cmpsb
pop
mov
addl
imulb
push
bound
sbb
xor
popa
mov
jmp
hlt
sub
repz
add
insb
in
xchg
push
inc
sub
ljmp
or
push
stos
mov
shrl
fwait
movsl
dec
mov
icebp
data16
mov
push
xor
cmp
fsubrs
cmpsb
cmpsl
dec
mov
pushf
mov
mov
ljmp
xor
xchg
inc
test
push
mov
lods
ljmp
aad
test
int
mov
xchg
push
cli
jo
jmp
or
popf
sti
decl
std
mov
xchg
dec
push
in
jo
ja
jg
add
fcmovnbe
mov
jb
push
mov
jp
lcall
imul
jne
cmpsl
mov
xchg
push
xchg
enter
sub
repz
cmp
mov
stc
int3
or
repnz
sbb
shrb
call
mov
mov
pop
mov
jg
mov
mov
mov
pop
cmp
jge
xchg
xchg
inc
jno
lahf
ja
outsb
fwait
test
out
dec
sbb
js
add
sub
ja
sarl
dec
cmp
xor
mov
xchg
fdivp
sbb
imul
scas
push
cmp
out
dec
push
mov
xchg
xchg
cmpsb
sbb
push
push
popf
lods
ds
test
jl
les
dec
cmc
ljmp
pop
out
aam
std
xchg
pop
jbe
pop
mov
scas
mov
inc
mov
sarl
inc
mov
cld
out
mov
mov
xor
jge
aaa
inc
js
xor
mov
insl
push
cmp
mov
jb
js
shlb
in
ret
push
stos
jmp
enter
scas
dec
mov
movsb
cli
jmp
shr
ds
sbb
repnz
adc
sahf
pop
jmp
jbe
inc
jne
mov
sub
push
pop
or
pop
sub
and
pop
push
push
jns
cld
cmp
xchg
sbb
out
jge
js
jbe
ret
inc
lods
iret
ficomps
xchg
insl
jle
xor
cmc
jnp
inc
and
into
jle
test
shll
stos
jmp
mov
mov
dec
jg
daa
aas
into
mov
dec
fcomps
sbb
outsb
pop
inc
mov
lock
fimuls
or
mov
push
xor
arpl
xchg
lds
jge
adc
sub
mov
mov
or
fcompl
ja
mov
sbb
add
fdivp
pop
jp
dec
push
loope
enter
test
jp
mov
and
cmp
cli
sub
dec
xchg
bound
in
sbb
cmpsl
dec
lret
jo
dec
jb
jmp
int3
in
in
cmc
or
out
fnstsw
fcomps
push
jae
push
jb
pop
adc
in
and
jnp
push
fcomip
inc
dec
inc
push
fnstcw
jnp
dec
add
out
outsb
or
int
and
ds
loop
jg
push
push
loop
bound
dec
movsb
leave
push
lret
jge
xor
add
pushf
fiaddl
jns
shll
movb
push
popf
lods
push
cmp
cli
test
je
add
out
and
cmova
or
adc
mov
movsl
xchg
aad
dec
mov
mov
roll
inc
mov
xor
sub
nop
or
and
mov
or
push
jp
push
rclb
lea
call
jne
or
add
cmp
xchg
mov
jmp
lock
addr16
aas
jb
adc
mov
mov
xor
repnz
inc
and
adc
fsubs
fisubs
adcl
cmp
nop
adc
fcomps
lret
in
push
xlat
adc
mov
out
or
xchg
cmp
push
je
dec
pop
insl
fcmovbe
pop
inc
mov
sub
xor
jae
and
sbb
out
in
dec
orb
xchg
pop
push
mov
lods
into
pop
popa
cltd
into
cmp
xor
jmp
push
push
jb
mov
movsb
cmp
xchg
dec
jle
and
xchg
test
sub
loope
sbb
push
ljmp
dec
imul
cwtl
lods
mov
inc
outsl
js
adc
mov
or
pop
adc
jle
bound
mov
ja
ja
out
inc
push
mov
push
inc
pop
or
mov
arpl
test
fidivl
pop
lea
add
rorb
ret
arpl
enter
sarb
push
std
pop
mov
ljmp
mov
mov
dec
std
add
cmpsb
and
xor
js,pt
movsl
jecxz
imul
test
add
or
lret
push
outsl
bound
out
cmp
mov
pop
jmp
dec
xor
xchg
mov
lods
pop
mov
xlat
mov
add
lea
insb
xchg
arpl
add
and
inc
cwtl
cltd
or
pop
in
sahf
lret
leave
and
shrb
out
ss
mov
aas
ds
push
cmpsb
xchg
push
lea
mov
icebp
and
add
jb
ja
xorb
outsl
mov
cmp
cwtl
mov
or
jge
push
test
xor
mov
jecxz
in
insl
mov
sahf
test
inc
mov
cmp
mov
ja
or
loope
push
mov
lret
mov
pop
iret
sub
mov
xor
shrl
notb
not
outsb
into
sbb
adc
sahf
fdivs
inc
cltd
xchg
std
js
sub
addl
or
in
clc
cld
fdivl
jbe
push
and
call
mov
and
orb
dec
dec
int
sti
add
daa
aad
or
lods
inc
jbe
scas
mov
adc
sbb
negb
xchg
sub
inc
xchg
mov
loopne
cmp
adc
fsubrs
or
add
xor
inc
ja
cs
daa
sbb
popf
insl
push
aaa
mov
sub
stos
pushf
andb
gs
jbe
xchg
loope
and
std
inc
push
arpl
and
outsw
jmp
cmp
hlt
sub
ret
inc
int3
adc
add
outsb
mov
mov
out
dec
mov
aam
inc
mov
dec
fwait
sbb
mov
xchg
pop
mov
mov
cmovl
inc
fs
lock
push
lds
test
daa
xchg
loopne
das
push
add
dec
jmp
icebp
pusha
dec
mov
nop
pushf
inc
notb
mov
lret
imul
mov
mov
jo
xchg
jge
add
cmp
push
ret
or
mov
shl
in
ja
aam
lock
arpl
jp
aad
imul
xchg
repnz
lds
xchg
dec
add
sub
fcomps
sarb
mov
int
jno
pop
add
jns
test
mov
adc
fwait
subl
inc
inc
aam
sub
ror
loop
xchg
shrb
popa
imul
sahf
and
in
pop
adc
jnp
cmpsl
lea
jmp
fiadds
lea
fsts
xorb
mov
decb
and
push
jecxz
or
sti
in
mov
lret
push
pop
jle
mov
pop
xchg
and
shll
push
inc
adc
or
mov
pop
xor
xchg
and
sarb
mov
das
fsubs
or
lods
mov
stos
aam
dec
arpl
xor
sub
pop
lret
shl
mov
or
into
inc
das
mov
cmp
into
scas
xchg
in
or
mov
cli
hlt
or
je
fs
inc
add
pop
fsubp
jbe
mov
loope
dec
int
mov
les
clc
sub
aam
notb
cmp
mov
inc
add
lods
aad
xor
push
mov
jno
and
dec
loop
dec
cld
jp
dec
lahf
lods
xchg
lcall
cli
add
das
mov
adc
cmp
test
jmp
sbb
xor
clc
stos
test
cmc
leave
ja
sub
movsl
pusha
push
xorl
sbb
add
jae
dec
cmp
call
inc
cmp
sbb
pop
sub
call
xor
mov
mov
cli
fimull
movsb
rcrl
lea
adc
sub
repnz
jge
cmp
loope
mov
pop
xor
xor
inc
outsb
add
mov
mov
add
aam
pop
fcoml
out
xor
test
cmp
fcoms
into
icebp
arpl
mov
jae
iret
outsb
loope
inc
repz
das
mov
std
int3
sub
rcrl
incl
leave
rcrb
add
jecxz
dec
inc
sbb
ds
push
push
push
int
das
decb
cs
insb
xchg
dec
int3
movsl
and
xchg
in
loope,pt
je
xchg
fsubrs
ds
cwtl
adc
jl
dec
push
popa
fadds
add
popf
add
push
jmp
jg
rolb
mov
ja
mov
lock
ret
and
mov
loopne
lods
jno
mov
sbb
mov
cmp
jecxz
popl
cmp
iret
fisubs
rorb
shlb
or
shl
pop
xor
cli
out
dec
push
dec
mov
popa
out
in
push
sbb
xlat
xchg
insb
xchg
lahf
push
out
rcl
add
shrb
sub
popf
pop
cmc
pop
fnsave
mov
inc
les
mov
ljmp
scas
cmp
mov
cmc
outsl
incb
orb
filds
or
inc
mov
scas
std
inc
enter
cmp
fsubrs
cmpsl
ror
fdivp
push
sbb
jb
xchg
movsb
aas
pop
pop
cmp
daa
repz
out
and
pop
hlt
movsb
idivb
ja
lods
cmpsl
cmp
and
fldenv
add
lret
loop
aaa
shl
int
dec
lret
out
add
adc
xor
push
add
loopne
add
cli
call
sub
inc
adc
inc
jg
push
rorb
sbb
inc
orb
fidivl
dec
pop
pop
or
loopne
mov
stc
or
stos
xchg
or
gs
orb
loop
ret
push
xor
fsubrs
add
fldt
push
fwait
xchg
cs
xchg
cmp
sub
lods
xchg
or
cli
adc
enter
sbb
jnp
adc
xchg
xor
insl
in
and
and
call
inc
sbb
push
out
repnz
lret
movl
les
lods
or
sarb
movsb
push
orb
lret
add
in
jnp
mov
dec
xchg
fstpt
sbb
xor
xchg
fisttpll
and
test
fdivr
mov
lea
mov
cmpb
movd
jb
mov
dec
adc
sbb
mov
insl
shlb
imul
scas
gs
xchg
xor
inc
mov
mov
jge
out
and
xchg
pop
fists
js
loope
and
in
loope
xor
cli
in
jb
js
mov
sbb
aad
pop
cli
push
iret
fisttpl
dec
icebp
in
aas
call
bound
imul
adc
test
xor
cmp
lret
cld
fisubs
mov
rorb
cli
inc
rclb
scas
nop
lods
cmp
and
add
test
roll
test
fwait
mov
sahf
mov
lcall
inc
cmp
push
mov
sbb
call
pop
fcmovnbe
pop
jle
jns
push
cltd
pop
divb
dec
jmp
les
or
push
adc
jae
cwtl
cmp
ss
leave
cmp
jne
popf
jmp
cli
mov
cltd
frstor
imul
adc
imul
dec
inc
in
or
out
lcall
push
sub
stos
dec
xor
mov
inc
inc
and
int3
mov
dec
push
js
push
xchg
shr
lcall
jp
mov
mov
cmp
leave
insl
dec
dec
xor
scas
mov
sahf
inc
fidivl
cld
imul
leave
sbb
and
or
add
push
push
cmp
sbb
pushf
inc
clc
push
lret
or
js
sbb
adc
sti
mov
xchg
push
mov
sbb
movb
aad
xchg
xchg
leave
mov
and
es
sarb
dec
test
aaa
leave
xor
fs
int3
out
ja
sub
clc
outsl
imul
aam
cmc
movsl
movsb
dec
xchg
add
roll
push
pusha
cmp
popa
inc
jbe
dec
rcrb
fldt
mov
movsl
int
xchg
lcall
mov
loop
fs
inc
inc
pop
scas
mov
cmp
je
inc
iret
cmp
stc
test
js
fs
adc
leave
xchg
xchg
rol
cmp
pop
test
jecxz
stos
mov
add
rclb
ja
iret
movb
movsb
mov
push
and
lcall
movsb
popa
pop
xchg
dec
jo
jne
mov
dec
shrl
testb
or
xlat
pop
xlat
pop
mov
imul
mov
lock
sub
mov
ja
sbb
mov
sub
adc
adc
stc
nop
add
xchg
pop
stos
enter
int
mov
cmp
ljmp
adc
hlt
mov
shr
add
jo
xor
test
adc
mov
mov
push
cmp
lock
rolb
jae
and
das
lret
jo
fidivrl
sbb
out
dec
push
xor
push
push
fs
or
or
in
mov
sub
cmpsb
or
xlat
mov
inc
inc
testb
mov
inc
insb
jmp
cmc
xlat
pop
jae
xorl
lcall
int3
xchg
lret
sub
and
cli
push
xor
mov
js
xor
lds
test
cmp
jbe
jmp
outsb
ret
jg
shr
and
icebp
jae
inc
cmp
rcl
jg
aas
mov
push
add
mov
je
push
push
xchg
mov
pusha
add
push
daa
xchg
shll
and
push
sub
mov
sub
stc
movsb
jge
dec
mov
xchg
stos
inc
mov
or
mov
pop
mov
and
in
out
int
dec
cmp
sbb
xchg
lret
jbe
sti
ror
lret
mov
stos
in
adc
loope
push
adc
xchg
loope
jbe
shll
into
and
xor
mull
mov
dec
fistl
mov
fiadds
loope
fildll
or
push
jne
jecxz
jbe
arpl
stos
jo
inc
inc
test
mov
pop
sbb
xor
sbb
lahf
popf
adc
dec
add
insb
mov
xorb
and
jecxz
cmp
lcall
sbb
mov
mov
loopne
jmp
cli
mov
mov
adc
into
cli
js
ret
jle
sbb
jno
idivl
insl
ret
xlat
add
out
xchg
mov
adc
xchg
pop
mov
inc
test
out
push
insb
stc
sbb
stc
int
rcll
push
loopne
jle
mov
sbb
scas
adc
push
fcmovnb
cmp
jnp
push
mov
scas
cmp
pop
push
imul
cld
dec
jbe
dec
in
lock
addl
lods
push
jnp
jae
dec
aaa
insl
aam
dec
outsl
nop
sbb
dec
xchg
sbb
sub
enter
lahf
push
or
outsb
cwtl
xor
sbbl
pop
cmc
lret
cmp
pop
lret
movb
ljmp
mov
mov
and
or
hlt
adcl
pop
dec
out
mov
cmp
ja
lds
xchg
dec
outsl
mov
sub
dec
leave
test
ss
icebp
lock
ss
cltd
loop
imul
cmc
movsl
sbb
int3
sub
inc
dec
repnz
pop
into
test
cmp
fdivs
push
inc
rcll
addb
or
mov
sbb
icebp
sahf
imul
dec
sbb
xchg
das
mov
dec
aad
sub
xor
mov
mov
or
ja
jg
popa
mov
push
sub
cmpsb
loop
leave
sub
xor
out
sti
pop
fidivs
adc
pop
lea
inc
mov
cld
sbb
lahf
dec
in
xor
aam
inc
inc
mov
ret
add
or
insl
jge
cltd
push
push
jno
jle
sbb
subl
imul
leave
psadbw
jecxz
and
mov
fnstenv
jge
mov
stos
push
xorl
insb
fs
xchg
pop
test
minps
mov
rcl
fldl
inc
jecxz
dec
es
xor
int3
scas
leavew
inc
lock
aas
shrl
inc
das
jo
jp
push
mov
and
xor
xor
outsb
rcl
mov
adc
insb
cld
out
fsub
pop
aad
mov
orb
dec
mov
mov
xchg
or
cs
loope
pop
sbb
push
in
inc
sbb
pop
jmp
sbbl
add
pusha
icebp
cli
cmp
iret
xchg
hlt
cld
mov
push
movsl
cltd
pop
gs
aaa
sbb
cltd
or
jns
jno
subb
addr16
lods
xchg
test
push
sbb
jl
imul
jae
shrb
pop
sahf
and
push
xorl
addl
jp
outsl
movntps
iret
xor
in
jp
pop
cmp
push
ljmp
sub
sbb
cmp
xor
sub
or
repz
in
add
inc
lods
or
out
scas
loope
scas
mov
fcoml
test
mov
jge
lods
shrl
orb
xor
adc
mov
icebp
in
push
mov
mov
jecxz
push
in
into
lods
xchg
mov
mov
inc
call
mov
and
or
jns
addl
fdiv
and
jle
or
jno
call
and
sub
aas
dec
out
mov
jmp
test
jl
in
sbb
push
sub
cli
and
cmc
stos
fldlg2
xor
fisttps
insb
mov
divb
push
addr16
addr16
push
inc
sub
add
lret
por
push
and
cmp
gs
lods
pop
and
je
mov
lea
test
xchg
sub
icebp
jns
in
mov
std
nop
rcl
imulb
jmp
sbb
cwtl
cwtl
mov
scas
xchg
test
testb
or
mov
or
ret
test
int3
inc
ror
jne
insl
pop
ret
clc
lods
pushf
cmpl
jnp
lea
fisubrs
cwtl
sub
les
push
mov
cs
loope
xlat
insb
mov
cmp
fcmovnb
xchg
roll
mov
loop
adc
adc
popf
enter
lcall
mov
gs
sub
jbe
subb
and
push
sub
and
in
xchg
ljmp
inc
push
jmp
insl
or
movb
push
mov
lahf
sub
inc
adc
int
fisubrs
lcall
fxam
push
nop
fs
es
aad
push
dec
fsub
push
cltd
or
pop
std
mov
in
fiaddl
cwtl
mov
cld
scas
mov
pop
fisubrs
in
sbb
mov
mov
mov
inc
out
xchg
or
les
jge
pop
sysret
jo
dec
cmp
dec
int3
sbb
ret
movsb
fs
lods
test
scas
jb
imul
inc
sub
nop
sti
sahf
xchg
lods
lahf
loop
add
jmp
push
inc
push
repnz
mov
ret
imul
sub
inc
or
jbe
xchg
ja
test
cli
push
cmp
inc
stos
xchg
push
and
mov
push
popf
divb
xchg
sub
stc
leave
add
mov
lahf
inc
ljmp
or
shlb
xchg
lds
out
sub
mov
or
mov
xchg
mov
add
push
push
pop
jmp
outsb
xchg
mov
mov
in
in
in
test
push
sub
lahf
pop
pop
inc
shl
mov
xchg
jp
fnstcw
arpl
insl
int3
dec
addr16
mov
add
iret
pusha
or
loop
mov
push
lret
mov
nop
cmp
nop
popa
in
xchg
mov
test
sbb
lea
and
outsl
mov
js
mov
lret
aas
scas
pop
imul
xor
subb
aad
xchg
shll
sub
fldcw
in
cmp
pop
test
rorb
jp
adc
cmp
push
loop
mov
xor
pushf
stos
xor
shrb
cwtl
jns
int
pop
mov
xchg
in
dec
push
cmp
jl
dec
mov
fwait
dec
sbb
sub
leave
addr16
xor
push
lds
andb
fcomi
pop
or
push
xchg
mov
add
addb
testb
mov
xlat
test
adc
loop
sub
pop
lret
jb
mov
subl
cmpsb
adc
daa
mov
imul
sbb
enter
movsl
ds
sub
cmp
dec
xchg
mov
push
sbb
mov
lret
xchg
xor
sbbb
jno
sbb
repnz
mov
pusha
int3
mov
fwait
andnps
add
ficoml
xchg
pop
mov
sahf
movsb
les
in
or
out
inc
into
mulb
mov
jge
rcrl
lods
mov
mov
test
add
aaa
mov
mov
add
push
mov
jg
loopne
sub
stos
inc
push
and
test
push
mov
push
inc
xchg
or
inc
or
enter
lret
sbb
xchg
rolb
push
push
jae
jne
xchg
cld
sti
pop
sub
mov
sbb
jns
int
mov
xor
rcl
scas
xchg
pop
dec
push
mov
lea
lods
dec
notb
sbb
or
mov
jmp
int3
lods
imul
in
cld
in
adc
pop
xchg
lret
sbb
mov
inc
sbb
jns
fistl
mov
xchg
xor
loopne
lahf
cwtl
aas
dec
fcoms
lret
clc
ss
pop
or
xlat
xchg
negb
and
bound
inc
inc
pop
in
in
mov
mov
mov
add
imul
ret
popa
xchg
dec
in
cli
jl
ficomps
and
inc
negl
pop
push
addb
jne
outsl
xchg
or
out
into
pop
outsb
fcmovu
out
mov
subl
mov
add
enter
xor
aam
or
lret
arpl
and
mov
xor
dec
mov
cli
sbb
ret
aaa
in
dec
cmp
and
in
mov
lret
dec
fldl
jo
mov
mov
icebp
xchg
movsb
lcall
sbb
cmpsl
add
std
adc
pop
popa
loop
and
imul
loop
pop
adc
or
pop
jns
call
cmp
scas
jo
repz
lods
push
loope
cmp
std
stc
negl
repnz
mov
push
popa
mov
jmp
fsub
ret
push
insb
outsl
test
push
xor
ja
add
push
movsb
mov
xor
jne
push
stc
mov
pop
fwait
mov
adc
mov
jge
fdivrl
scas
dec
dec
dec
pop
popa
fwait
mov
lods
and
fdivrl
icebp
mov
cmc
add
clc
iret
inc
jns
fwait
pop
xchg
jl
bound
lahf
lods
cs
jbe
repnz
movsl
pop
shll
call
mov
popf
sub
mov
adc
adc
mov
xor
push
jb
pop
test
dec
jbe
mov
bound
cmpsb
pusha
cwtl
sub
xchg
dec
pusha
sar
mov
jb
pop
mov
int3
ret
in
dec
add
imul
and
cmp
cmp
rcrb
into
pop
dec
xor
stc
sahf
fisubs
push
add
and
lds
out
addb
push
mov
xchg
lock
cmp
in
jb
out
gs
cmpb
ret
dec
cmpsb
fdivl
addl
mov
int
movsb
clc
push
int
loopne
mov
xor
stos
call
sub
adcl
push
in
inc
adc
mov
dec
jg
push
mov
mov
rclb
cmp
xor
xchg
fs
lret
pop
dec
decb
arpl
jnp
dec
shll
sbb
sub
xor
jae
mov
pop
pop
bound
aad
jno
loop
and
jne
daa
jne
scas
jnp
push
xorl
add
mov
or
pop
and
push
test
test
scas
inc
lods
sub
mov
and
daa
adc
call
dec
dec
push
insb
es
scas
sahf
mov
rcll
xor
mov
lds
jecxz
sub
or
jmp
loopne
jne
out
jno
xchg
jmp
fwait
mov
mov
jmp
jge
jecxz
loope
adc
cltd
inc
and
out
lods
pop
arpl
push
sbb
data16
dec
jns
pushf
sbb
mov
jae
cmpsl
insb
ret
and
insl
push
in
daa
jle
inc
out
xor
in
fidivrs
add
aaa
pop
mov
sti
jbe
adc
std
inc
aaa
fidivl
sbb
push
mov
test
adc
call
dec
sub
je
xor
pop
cmp
mov
push
cltd
or
rcrb
inc
mov
les
sbb
cld
push
aam
adc
cmp
std
inc
sbb
push
pushf
mov
popf
clc
push
sub
enter
inc
xor
repnz
mov
mov
cmc
addr16
pushf
lods
cmp
gs
insl
cltd
pop
pop
outsl
cmpsl
ffree
mov
push
xchg
pop
inc
pop
push
cmc
loopne
mov
xchg
push
sub
dec
gs
ss
rcrb
mov
addr16
bound
or
xchg
pop
in
repnz
and
ret
lods
ret
ret
push
mov
dec
sti
pop
lret
jmp
jo
movsb
pop
jg
lcall
imul
mov
decb
mov
mov
in
test
xlat
jne
or
test
mov
adc
pop
pop
lock
pop
adc
jg
stos
fidivl
aad
mov
dec
cmp
out
rcrl
and
jns
fildll
lods
cld
cmpsb
push
popf
or
mov
outsl
dec
jg
adc
stc
test
fstl
pusha
dec
int
sub
lods
loop
stc
dec
xchg
cmp
xchg
loopne
jle
mov
add
cwtl
pushf
pop
and
add
pop
je
mov
rclb
mov
mov
mov
or
push
mov
cmp
mov
or
dec
mov
push
js
ret
lds
lods
in
ret
push
dec
imul
jp
inc
mov
pop
fcmovu
xchg
mov
cld
repnz
push
decl
lcall
lret
push
xchg
comiss
pushf
outsb
test
xor
pop
cmp
ret
mov
fiaddl
daa
sub
test
fst
xchg
or
jecxz
cmp
mov
stos
rcrb
aam
jnp
loop
lods
lret
outsb
test
hlt
sub
dec
mov
cwtl
pop
pop
sbb
rolb
cmpsb
adc
or
mov
jp
ret
dec
push
sbb
jne
inc
mov
mov
mov
dec
popf
mov
in
iret
jge
cmp
xchg
sub
inc
mov
xor
fistpll
cltd
movsl
mov
adc
mov
daa
add
xlat
out
mov
jle
mov
xor
and
xor
dec
mov
and
mov
lock
or
cmp
or
fs
lock
jb
mov
cmp
xor
fadd
aas
inc
test
xor
ss
fadds
jecxz,pt
inc
push
or
mov
xlat
mov
icebp
or
gs
imul
sarb
dec
pop
jb
out
cmp
cwtl
stos
into
add
ficomps
dec
punpckhwd
adc
push
dec
sar
aad
sbb
sbb
xor
movsb
xchg
mov
inc
mov
or
fwait
out
mov
ret
shlb
loope
add
sub
xchg
movsl
jae
sbb
pop
cmp
and
inc
pop
std
fbstp
jmp
nop
cmp
arpl
sub
dec
insb
aaa
mov
mov
inc
imul
sahf
out
xchg
jns
ds
inc
pop
mov
and
add
nop
adc
xor
inc
sbb
or
jne
loop
mov
ffree
or
jecxz
inc
dec
scas
lock
add
mov
mov
push
insb
adc
out
cmpsb
movsl
xchg
and
imul
adc
add
pop
and
mov
lods
sub
push
arpl
rol
insl
cmpsl
xchg
gs
add
jns
adc
mov
add
fstl
sbb
mov
jb
and
imul
inc
sub
dec
mov
cmpsl
enter
inc
xlat
sbb
in
ds
sbb
adc
jae
dec
mov
mov
movb
fdivr
pop
fdivrs
jb
adc
xchg
cmpsb
loop
addr16
jo
add
sub
sti
xor
andl
sub
jmp
bound
je
sahf
and
dec
in
sti
js
add
pushf
popa
push
fldt
cmp
sub
stos
sahf
lret
xchg
or
outsb
test
pushf
orl
cmp
mov
or
scas
in
mov
stos
in
adc
pushf
and
push
insb
mov
repz
adc
push
pusha
lret
sub
and
push
fcompl
sarb
decb
mov
int
icebp
push
jge
mov
insl
inc
add
test
cltd
scas
mov
cltd
mov
sub
pop
mov
xchg
cwtl
je
repnz
lret
hlt
cltd
jnp
addr16
dec
repnz
nop
int
add
mov
cli
int
rcrb
mov
adc
iret
test
in
xchg
jecxz
xor
cmp
mov
sbb
mov
decb
fmull
add
mov
dec
fistl
movlhps
scas
push
loop
xchg
xchg
xor
hlt
int3
dec
pop
push
mov
sbb
shll
scas
jae
dec
inc
add
push
mov
jb
data16
dec
cltd
mov
in
mov
lcall
sub
and
mov
jnp
test
sbb
mov
imul
add
call
inc
or
inc
mov
jp
aam
pop
cmp
jg
cmpsl
aas
add
xor
push
and
loope
bswap
sbb
sbb
sbb
int
push
xchg
mov
jo
inc
ret
gs
popa
push
cmp
mov
or
insb
or
pop
mov
flds
jmp
fs
mov
lods
cmpsl
mov
xchg
push
bound
repz
xor
pop
adc
mov
lret
inc
xchg
pushf
xor
push
shl
push
cmp
jnp
sub
mov
mov
aaa
mov
notl
outsl
inc
scas
outsl
bswap
addl
push
jnp
inc
or
mov
fdivrs
std
mov
sbbb
or
mov
push
dec
mov
addr16
push
fdivp
mov
push
gs
mov
add
stos
pop
mov
cmp
cmc
call
js
test
test
or
sti
and
xchg
insl
fmuls
out
ficomps
push
cmc
lret
imulb
sub
dec
stc
jne
lods
aad
mov
loopne
add
push
jl
sti
repz
enter
fucomp
pop
mov
mov
inc
xchg
cwtl
inc
mov
out
push
inc
xor
push
cmp
xchg
mov
push
cltd
int
pop
adc
jg
sti
popf
jmp
lea
fidivrl
xchg
dec
aam
mov
pop
pop
outsb
adc
sarl
in
in
inc
push
cmp
xor
negl
popa
sub
dec
int
fiaddl
aad
pop
aaa
xchg
test
je
int3
aad
test
stc
pop
inc
push
pop
dec
std
inc
mov
pop
push
out
out
ret
ret
fnsave
aaa
adc
xchg
repz
jb
add
sarb
push
test
and
hlt
push
lock
mov
ror
cmp
push
pop
pop
jg
adc
mov
cwtl
sar
cmp
orl
lods
xchg
xchg
add
scas
jns
xchg
jmp
jmp
jno
hlt
or
mov
in
jecxz
sub
jnp
mov
xchg
push
loope
int3
inc
ljmp
sub
mov
pusha
dec
roll
add
data16
xchg
sub
scas
sub
aaa
push
pop
test
lcall
mov
jg
push
sbb
loopne
push
js
ficoms
pop
xchg
or
out
xchg
adc
mov
repz
add
mov
jecxz
inc
add
subb
jecxz
and
mov
jge
sub
mov
sahf
cmp
xchg
adc
js,pt
sbb
sbb
jb
adc
in
pop
insl
call
push
pop
mov
push
xor
push
jle
push
adc
loope
cmp
xchg
push
jnp
pop
sbb
mov
sbb
mov
data16
xchg
cwtl
ficoml
pop
cmp
lock
hlt
push
lret
push
addl
clc
test
mov
inc
loopne
sub
lcall
cmc
and
inc
pusha
test
cmp
in
lea
popa
add
mov
cld
fisubrs
imul
aam
fnstsw
addl
pop
sub
inc
ret
inc
insl
gs
jmp
cmc
jle
lret
cmpsl
or
fnstenv
push
in
subb
jp
inc
jae
mov
add
or
orl
xchg
push
push
adc
pop
push
jne
shrb
cmpsl
dec
std
and
sarl
add
inc
mov
add
mov
adc
or
mov
xchg
xchg
aam
xor
or
cmpsb
das
lret
aas
add
push
cmc
sbb
xor
xor
les
push
inc
and
add
mov
sti
insb
movsl
sti
jbe
inc
stos
ljmp
cmp
pop
xor
out
xor
fnstsw
pop
sbb
daa
ds
mov
mov
sub
mov
xor
outsl
movsb
mov
mov
sti
lret
pop
push
cmp
sub
test
mov
outsb
pop
xor
sbb
add
adcb
int
daa
addr16
fdivr
push
das
les
mov
iret
les
or
and
xor
xchg
mov
popa
xchg
fcoml
aas
out
ret
lcall
divl
dec
and
enter
xchg
fistps
or
or
xchg
mov
ss
dec
sahf
aas
in
leave
ret
cld
je
lret
mov
lods
cmp
rep
jle
xchg
xchg
jmp
add
imul
mov
mov
and
pop
icebp
movsb
mov
xor
sbb
inc
jp
cmpsb
ljmp
pop
fistps
loop
lret
hlt
adc
pusha
rcl
and
inc
jmp
rcll
cmp
loopne
das
pop
mov
inc
insb
lds
cwtl
adc
cmp
cmp
xlat
xchg
pop
ficomps
aaa
dec
xor
xchg
nop
jae
xchg
add
sub
int
rorb
stos
adc
sub
fst
repnz
stos
xor
js
xchg
xchg
stc
dec
cmp
in
cltd
fs
inc
subl
mov
jmp
and
popf
clc
mov
push
das
cs
int
or
je
mov
inc
push
add
ficomps
cmp
sub
in
aaa
test
in
mov
jecxz
adc
subb
roll
jmp
aam
mov
shl
dec
rcrb
in
add
fcmovb
negb
loope
push
sbb
insl
sbb
push
inc
idivb
inc
cmp
std
xor
ss
and
lock
popa
dec
js
into
or
cld
mov
pop
fs
or
jns
arpl
fucom
adc
xchg
pushf
andb
div
aas
mov
lock
addl
aam
or
arpl
or
cltd
dec
pmaddwd
xlat
fistpl
sub
and
and
jno
fwait
fs
cmp
ret
dec
dec
mov
sarl
stos
push
cmp
sahf
or
pop
aas
movsb
pop
iret
inc
mov
adc
jp
cmpsl
stc
in
loopne
jae
cmp
mov
shrb
xchg
pop
and
cli
mov
orb
aad
pop
mov
add
sbb
and
jae
loop
sbb
and
mov
enter
xchg
in
xor
sbb
mov
sbb
or
sbb
repnz
cmpsb
lahf
clc
xor
xor
jg
sub
xchg
test
outsb
cmc
sub
or
mov
jl
mov
mov
xchg
pop
ret
jae
sbb
cmp
repz
mov
mov
push
shrb
lahf
das
cwtl
filds
cmovl
or
jno
scas
pop
adc
fptan
cmp
sbb
jo
adc
and
dec
fs
jae
xchg
enter
cltd
enter
mov
lret
mov
push
out
xchg
jg
xchg
fdivl
xchg
movsb
int
movsl
jge
aam
xor
add
test
cs
push
jl
adc
lcall
popf
jo
repnz
adc
test
cmpsl
cmp
jl
fstpl
jne
addr16
push
in
mov
pop
add
cmc
scas
push
cmc
nop
jbe
in
fwait
insb
arpl
push
pop
push
xor
pushf
mov
fmuls
outsl
fildl
dec
cmp
xchg
pop
call
sbb
loopne
or
sub
xchg
lahf
fcmove
test
pop
jno
movsl
jns
lock
jae
dec
mov
outsb
icebp
das
and
into
push
jo
jmp
imul
xor
fcmovu
add
out
sub
rcr
sub
lock
dec
andl
xorl
jns
mov
out
cmc
loop
scas
push
mov
push
cmp
dec
leave
fimuls
jge
call
or
mov
dec
ret
fsubs
addr16
xor
cli
mov
loopne
int3
dec
mov
mov
ja
cmp
es
push
stc
or
loope
push
xchg
cs
cwtl
adc
cmp
aaa
outsl
xor
cwtl
push
push
or
add
sbb
xor
cmp
es
mov
xorl
dec
aas
movsb
in
jbe
iret
xchg
push
aaa
mov
std
mov
je
shl
mov
sub
or
imul
cld
outsl
xchg
xor
inc
in
sub
ja
jo
xor
repz
fistpl
mov
inc
sbb
pop
sub
mov
insl
repz
sahf
sub
xor
jg
cld
xchg
cmp
push
pop
out
ret
mov
fwait
pop
enter
dec
call
lret
imul
in
cwtl
adc
insl
int3
pop
pop
inc
add
xor
mull
pop
mov
xchg
scas
mov
psrld
cld
pop
test
add
dec
cmpsb
sub
test
or
out
sbb
in
aad
into
pop
mov
pop
stos
dec
adc
mov
adc
je
cmpsb
js
xor
cmp
jl
add
cmp
mov
pop
mov
scas
stc
mov
push
mov
inc
lahf
popa
jp
inc
jge
subb
out
mov
pop
mov
ljmp
mov
stc
mov
xchg
pop
push
cld
rcll
int
lock
or
cltd
testb
ljmp
xlat
jmp
js
add
shl
fwait
arpl
jg
sub
cmp
mov
loope
nop
mov
fsub
adc
scas
jecxz
inc
cmp
clc
fldcw
adc
adc
or
subb
loopne
xorb
loope
pop
push
mov
out
mov
mov
and
cmpsb
pop
inc
push
call
stos
dec
push
and
or
rolb
sub
xor
sbb
mov
fucom
insl
jle
sub
fidivrs
es
pop
mov
dec
push
loop
insb
dec
cmp
test
jne
lods
int
push
jb
fadd
mov
gs
xor
push
mov
lods
inc
ds
xchg
shr
xor
inc
adc
inc
outsb
and
leave
stos
and
rcl
insb
mov
fwait
lahf
test
out
cli
or
leave
insl
push
loope
push
rolb
add
fmuls
and
push
adc
rolb
and
jne
xchg
or
mov
nop
orl
cmovo
fs
cs
ret
lcall
call
mov
outsb
cs
int3
sbb
rclb
cmpsb
xor
insl
shrb
arpl
insl
adc
lret
test
cmpsl
sbb
outsl
xor
call
push
enter
popf
push
xor
scas
insl
push
decb
xchg
push
cmp
jnp
aaa
call
daa
or
addr16
cmp
lret
lret
std
out
into
fsubrl
ss
fcoms
je
call
and
jno
into
mov
push
add
es
imul
cmp
ret
lock
cmp
lds
cmpsl
adc
mov
dec
mov
dec
aam
adc
out
test
fs
jge
adc
jle
in
out
loope
push
out
gs
mov
hlt
fnstcw
ret
jae
sbb
xor
cltd
jmp
push
ror
aaa
mov
and
stos
inc
mov
mov
inc
aad
adc
or
sub
stos
mov
dec
imul
mov
pop
nop
sbb
cmp
fdivrl
js
cmp
jo
dec
and
clc
pop
movsl
shl
xor
idivl
in
cmp
xlat
fcom
mov
out
subl
movsb
sub
inc
jnp
jno
jbe
arpl
mov
cmp
std
ja
xor
out
sbb
mov
xchg
inc
mov
fs
in
mov
out
push
push
pop
jns
dec
dec
jno
or
inc
int
sbb
and
or
popf
in
pusha
mov
sub
mov
loopne
push
cmpsl
fs
and
jl
sbb
scas
sub
fdivrl
cmpsb
js
lret
cmp
inc
cmp
mov
outsl
ror
shrl
mov
push
ret
cld
and
push
js
and
lock
xor
enter
lods
push
mov
cmp
jecxz
loopne
jo
nop
fsubrl
sarl
push
xor
xchg
sub
sbb
cmp
add
dec
mov
dec
icebp
jg
stc
and
ficompl
xchg
inc
push
push
inc
inc
sub
fcompl
adc
push
add
lahf
sbb
dec
jmp
xchg
outsb
outsl
pop
scas
and
add
repz
adc
sub
fldcw
cld
sbb
inc
push
fst
imul
xchg
xlat
sets
jle
mov
sbb
mov
dec
fisttpl
int3
push
hlt
adc
outsb
dec
mov
insl
cmp
popa
sbb
xor
inc
dec
out
jb
push
jp
add
cmp
stc
nopl
xchg
daa
jbe
cmpsl
cmp
dec
cmp
stc
sub
lods
clc
mov
dec
mov
sub
lods
std
sub
and
push
movsl
jg
fcmovnbe
icebp
outsl
imul
les
test
xor
div
and
int
js
ds
pop
imul
sbb
add
lret
test
aaa
andb
loope
push
sti
decb
mov
fiaddl
mulb
push
cmp
mov
xor
lea
clc
jno
xor
add
sub
adc
mov
jae
test
sub
push
inc
aad
adc
jecxz
push
jg
stc
negl
daa
mov
or
leave
cli
ljmp
jns
addr16
insl
int
cltd
dec
js
jne
pcmpeqw
int
jmp
repnz
orl
sub
inc
pop
dec
in
popa
negb
cmp
fcomip
ret
das
adc
into
pop
fnstcw
jp
jno
addr16
sub
or
sbb
cld
cli
je
xchg
cs
cli
int
out
rorb
js
js
jg
inc
addl
mov
mov
repz
aas
xchg
xchg
sahf
outsb
pop
and
push
outsb
lds
add
loope
gs
pusha
out
xchg
loope
lret
add
xchg
and
and
add
aam
clc
jne
mov
xor
rcll
out
xchg
gs
cmc
decl
lret
pop
lret
mov
call
dec
jbe
shrb
pop
lea
sti
outsl
dec
push
mov
pushl
mov
stos
inc
mov
stos
aad
jo
aad
test
loopne
in
imul
sub
popa
xlat
orl
or
leave
test
movsl
dec
lea
dec
fcmovu
and
out
js
stos
ljmp
scas
cmp
push
xor
into
add
pop
xor
pop
dec
cmp
ja
or
lods
aas
mov
mov
cli
push
test
ljmp
mov
mov
daa
jnp
cmp
mov
pop
jmp
mov
loop
ret
sub
int3
into
inc
test
lods
lcall
pop
xor
push
fsubl
push
andb
sbb
mov
out
mov
and
xchg
rol
xor
mov
out
les
in
jo
shlb
sti
ret
imul
sub
insl
ja
cmp
xor
push
adc
xchg
scas
ss
mov
test
xor
sub
shrl
ss
inc
ret
sub
jbe
aas
jbe
es
push
sbb
mov
inc
mov
jecxz
lea
pop
outsb
lea
into
mov
divl
push
and
add
pop
xor
cmc
out
xor
sub
mov
bound
jge
mov
mov
mov
and
xchg
mov
cli
test
lahf
aad
ret
ret
aas
push
sbb
arpl
jl
push
mov
cmpsl
mov
cwtl
je
lods
insl
jge
inc
push
or
popa
sahf
std
pop
nop
mov
arpl
jge
in
sub
add
inc
push
mov
sbb
loopne
jge
jl
scas
orl
flds
and
xor
push
pop
push
adc
or
out
fnsave
cmc
mov
add
add
adc
enter
shrb
xor
gs
cs
lods
push
cmpsb
dec
aad
popf
sub
mov
stc
push
inc
loopne
nop
or
lret
jnp
out
outsl
in
mov
adc
adc
ljmp
das
roll
dec
xchg
mov
and
arpl
out
mov
sahf
jae
fcomps
mov
push
hlt
jno
andl
xor
pop
pushf
xchg
cld
fidivrl
xor
test
add
cmp
add
outsb
mov
nop
jae
imul
or
in
ja
imul
repnz
aas
jle
add
adc
or
bound
scas
adcb
pop
stos
lods
bound
inc
aad
pop
dec
sub
jb
xchg
inc
icebp
fsub
test
imul
ja
in
xor
ja
add
or
daa
push
js
aas
adc
adc
push
test
xor
mov
cwtl
pop
cmp
adc
jmp
shlb
mov
adcb
icebp
jno
mov
std
or
ret
xor
mov
push
test
insb
mov
push
sub
jb
ljmp
es
fldenv
imul
xchg
add
cmp
pop
lds
sarb
dec
xor
sub
inc
outsb
fldenv
xor
dec
sbb
jp
jmp
cmp
and
dec
jns
mov
sbb
jg
mov
roll
sub
sub
ljmp
push
out
out
push
cmpb
int3
pop
rolb
ljmp
pop
push
xchg
mov
xor
push
mov
mov
xchg
fucomp
sbb
ljmp
jmp
clc
inc
cmpsl
into
loope
mov
adc
fistps
cmp
in
inc
cwtl
imul
scas
ljmp
dec
add
xor
shll
test
loop
das
push
push
or
das
cmp
push
movsl
add
jo
testl
xor
int3
jg
fwait
in
data16
shll
jge
cltd
mov
xor
push
lret
outsb
shl
and
ss
fimuls
and
mov
sbb
pop
mov
mov
adc
ja
jo
cmpsl
cmp
xchg
push
fnsave
into
add
sbb
fldenv
push
je
movsb
xor
scas
and
add
xchg
popa
outsl
cmc
push
push
flds
pop
cli
pop
stos
ret
cltd
lods
pushf
adc
lahf
sub
jno
inc
stos
add
push
inc
inc
cli
inc
test
and
mov
cmp
scas
aas
pop
inc
ljmp
sahf
psrad
cld
push
shlb
jg
cmp
xchg
add
and
mov
sbb
mov
sti
push
dec
idivl
push
inc
pusha
lcall
sub
mov
jg
jns
sub
push
cmp
mov
pop
ret
in
lret
out
mov
ret
pop
adc
mov
enter
js
sub
cmc
out
mov
mov
cmpsl
fisttps
sbb
lret
xor
outsl
lods
dec
fwait
ret
test
mul
out
aam
insl
jle
sub
cmpsl
push
out
bound
inc
cli
stc
cmp
sbb
into
inc
xor
mov
push
sahf
pusha
fdiv
cmp
xchg
std
sub
push
and
fcmovu
enter
jl
jp
loop
mov
fisubrl
xor
jnp
xor
cmpsb
movups
sbb
in
outsb
mov
push
add
push
inc
push
add
int3
push
xchg
pop
xchg
xor
loope
mov
outsb
lahf
mov
push
or
ds
test
push
add
cmovg
pop
sub
cmp
orb
xchg
ds
cli
adc
test
push
std
imul
cli
stc
mov
loope
push
popa
mov
stc
pushf
cli
and
or
std
loop
test
xchg
sbb
mov
sub
clc
pusha
jne
js
enter
mul
lcall
push
sbb
adc
sbb
jg
cld
xchg
push
icebp
jp
lds
mov
mov
rolb
add
stc
dec
mov
jg
out
adc
inc
cs
inc
mov
rcrl
aas
dec
mov
paddb
xchg
or
push
js
mov
jmp
adc
popa
xor
sub
add
lcall
call
enter
jp
jae
mov
adc
sub
insl
pop
mov
loop
and
in
in
push
add
cmp
imul
fsubp
pop
repnz
mov
mov
jae
mov
pop
mov
in
jo
dec
lods
hlt
call
push
push
mov
sar
cmp
adc
dec
sti
enter
mov
xlat
and
add
adc
fucom
jmp
pop
cmp
add
push
push
mov
mov
push
popw
or
and
xlat
ficoms
mov
insb
jno
stos
mov
pusha
test
test
xchg
ljmp
adc
aas
out
sar
pop
mov
popl
scas
adc
xchg
arpl
adc
push
dec
xchg
dec
and
scas
outsl
add
idivl
repnz
fbstp
data16
sbb
sub
bound
rorb
pop
test
aaa
xchg
jg
movsb
jae
lret
test
mov
xor
into
insb
cmpsb
or
stos
xor
sbb
mov
sbb
xchg
inc
jmp
insl
negb
push
std
or
xchg
xlat
sbb
in
adc
mov
xor
mov
push
xor
push
dec
xchg
in
stos
push
insb
scas
popa
stc
jne
xchg
mov
mov
dec
sarl
cwtl
sub
mov
push
sub
enter
repz
fwait
adc
add
enter
bound
movsb
les
int3
pop
outsb
push
fstpl
test
lds
cmp
daa
or
cmpsb
pop
and
orl
inc
mov
pop
ret
dec
inc
pusha
or
fisttps
leave
or
fidivl
sahf
mov
daa
pop
mov
sarb
adc
test
add
test
xor
dec
push
movsb
data16
mov
sbb
int3
adc
jl
cmp
imul
xchg
xchg
rcr
push
shr
push
jne
push
fldenv
pop
push
rcrb
cmp
mov
mov
imul
popf
fisubs
or
popf
pop
jbe
gs
mov
lret
jae
rorb
jo
aas
pop
inc
xchg
mov
pop
imul
les
adc
mov
outsb
sub
xchg
pushf
subl
inc
pop
aas
lret
jne
sbb
adc
enter
push
idivb
adc
fidivl
pushf
andl
pop
daa
sbb
sub
sub
dec
and
in
pop
fisttpll
or
mov
xchg
ret
and
cmp
xor
and
xchg
jg
call
cmp
pop
inc
mov
ror
test
mov
xor
mov
sahf
push
mov
bound
mov
and
fldl2e
fwait
add
mov
lcall
pop
push
mulb
cltd
xor
mov
aam
xchg
xor
into
sbb
outsl
push
xor
inc
scas
test
sbb
sub
fbld
xchg
mov
adc
in
std
cld
lret
out
pop
int
mov
rcrb
lret
pop
test
mov
rol
sub
pop
nop
cld
adcb
mov
dec
hlt
or
cli
pop
mov
arpl
into
jmp
sti
add
cmp
dec
lock
add
ss
mov
sti
je
fcoms
sar
mov
mov
and
les
add
pop
ret
mov
mov
popa
adc
fcomip
dec
mov
into
fdivs
mov
stc
xor
dec
sub
nop
mov
test
lods
jne
rclb
addb
push
cmc
mov
pop
push
sub
mov
loop
xchg
fisttpl
push
cmp
aaa
notl
lea
push
mov
mov
jp
or
test
loop
jmp
push
mov
xchg
xor
push
orb
repnz
pop
into
daa
jnp
pop
cmp
je
pop
sub
adc
repnz
hlt
xor
lods
and
aas
test
inc
fisubrs
jmp
scas
inc
xorl
and
push
out
mov
shrl
leave
jno
sub
icebp
leavew
shl
inc
push
imul
leave
jmp
cld
insb
fnsave
inc
mov
sub
inc
inc
xor
shrb
cmp
jle
sbb
and
lret
fisttps
test
sbb
cmp
xchg
sti
xchg
sbb
lods
cmpsl
pop
pop
mov
sbb
gs
js
mov
cmc
jmp
negl
lods
sub
sub
lcall
jge
loopne
sub
xchg
adc
fsubrl
jl,pn
mov
imul
insb
jmp
push
and
dec
mov
in
add
and
incl
mov
clc
mov
pushf
mov
insl
xchg
daa
mull
popa
xchg
aas
inc
ret
addb
sub
aas
dec
push
scas
fsubrl
mov
pop
rcll
jns
mov
push
sub
dec
mov
dec
test
mov
jbe
xlat
add
cmp
inc
and
iret
mov
jnp
cmp
pusha
jno
cmpsb
jo
dec
stos
inc
negb
repz
mov
or
push
pop
mov
jg
push
inc
outsb
mov
adc
aad
ret
and
sbb
add
test
leave
aad
imul
push
cmp
into
movsl
push
pop
inc
push
and
sub
pushf
push
insl
lock
push
adc
or
mov
adc
pop
pop
mov
rol
jne
mov
push
ja
xor
push
inc
sub
fidivrs
pop
adc
cmc
sbb
call
fcoml
mov
sub
inc
addl
xchg
sub
and
push
call
in
test
repnz
xchg
aas
xchg
mov
xchg
cli
into
fisubl
mov
loopne
mov
mov
or
in
mov
mov
or
out
pop
mov
popa
lods
inc
inc
pop
jns
loopne
cmpsl
sub
add
negl
mov
in
push
pushf
test
push
fs
out
jnp
int
movsl
clc
rcr
cwtl
jl
bound
xor
mov
repz
insl
lock
push
test
pop
leave
adcb
push
mov
leave
cmp
adcl
ss
jle
out
insl
stos
cmpsl
push
add
daa
fstl
dec
mov
aaa
xchg
pop
notl
sub
sbb
jne
rcl
cmc
and
push
test
mov
lcall
out
test
mov
shufps
test
ret
add
lcall
sub
xchg
sbb
xorb
aad
push
jo
fwait
call
mov
stos
test
pop
inc
pop
fsubrs
mov
cmp
mov
scas
jbe
cmp
cmc
lds
push
out
cli
ds
mov
mov
xor
fwait
dec
outsb
stos
ja
lods
je
test
adc
xchg
dec
or
push
inc
mov
push
cmp
insl
repz
int3
ss
lods
xchg
scas
dec
dec
into
inc
daa
ficompl
lods
sub
and
sub
or
bound
daa
fistpll
call
sbb
add
js
fcomi
call
pop
dec
pop
jp
cli
push
mov
mov
mov
and
xor
pop
sbb
loopne
popa
mov
jg
ljmp
insl
mov
mov
out
or
sar
cli
jle
fbstp
mov
lods
ret
icebp
loope
je
iret
sahf
bnd
call
sar
outsl
ror
fdiv
gs
push
sub
ror
jnp
in
jmp
in
decl
jg
jp
mov
lret
or
lods
sub
ficoms
test
sub
lock
inc
or
inc
push
push
mov
or
xor
mov
dec
inc
cwtl
les
and
stos
adc
fdivrs
mov
test
push
sub
loopne
mov
inc
fidivrs
out
imul
mov
cmpsb
pop
mov
lock
pop
loope,pt
cs
fs
les
jg
jp
dec
push
fst
divb
mov
clc
xchg
dec
pop
les
and
bound
adc
filds
adc
jge
push
jno
cli
in
mov
add
lock
mov
sub
aas
xlat
add
push
pushf
cmp
xor
mov
mov
jbe
add
and
gs
jp
cld
addr16
repnz
lock
push
popf
cmpsb
ficomps
dec
sbb
xor
fwait
fs
shrb
dec
into
pushf
bound
int
mov
mov
repz
dec
mov
in
fdivrs
mov
xchg
int
fstp
xor
jnp
xor
push
adc
pusha
mov
add
insb
mov
aad
xor
mov
sbb
pop
fidivs
and
dec
mov
in
mov
sbb
mov
js
scas
inc
outsl
lods
sub
movsl
adc
sti
lods
dec
or
sub
mov
dec
inc
stc
fucomip
das
icebp
jmp
js
pop
loop
mov
or
or
fwait
dec
cli
ret
push
add
jne
xor
sub
mov
adc
aas
inc
inc
push
cmp
pop
enter
sti
add
fsubrl
jnp
inc
add
fiaddl
and
int
rorl
flds
push
loop
cmpsb
cmp
fiaddl
inc
dec
sbbl
adcl
cli
add
adc
adc
jp
sbb
inc
inc
xchg
cmp
cmp
cmp
jp
addr16
cmpsl
rorl
leave
jmp
cmc
and
push
mov
jge
frstor
pop
sti
dec
aad
insb
pop
xor
xchg
fwait
adc
jae
mov
and
and
int3
and
jae
sahf
inc
xor
scas
and
imul
xchg
test
jae
xchg
push
jae
cs
mov
mov
mov
adc
lret
mov
nop
xor
add
add
mov
dec
sbb
int
lahf
xchg
push
mov
jp
adc
insl
fidivl
cmp
fsts
add
cmp
mov
add
stos
repz
push
xor
push
in
sbb
push
das
xor
lods
add
mov
adc
jno
inc
jmp
in
jae
mov
aad
pop
cmp
cmp
std
jns
and
push
lret
insb
ror
dec
push
hlt
dec
js
pushf
out
or
adc
out
jbe
push
jle
fistl
sar
dec
jg
les
xor
mov
orl
jns
shl
xor
scas
mov
ficompl
and
xchg
out
jecxz
add
mov
push
add
rorb
out
jp
mov
mov
inc
and
fmull
cmpsl
fs
or
xchg
leave
inc
add
aas
dec
push
xor
ja
jbe
xchg
xchg
out
scas
pop
cld
sbb
stos
mov
pop
and
add
sbb
push
mov
cmpsb
sti
fwait
adc
aaa
xchg
call
or
dec
shr
push
adc
shlb
fnsave
dec
and
repz
push
xchg
add
or
xchg
lahf
fwait
lcall
popf
xor
adc
out
jmp
add
clc
sbb
in
sub
fsubs
xor
in
sbb
into
and
sbb
mov
xchg
sub
pop
out
ss
fs
xchg
movb
sahf
and
push
adc
xlat
push
daa
jmp
fidivrl
xchg
in
xchg
lcall
jge
push
jg
fst
jge
xor
pop
and
test
push
jg
out
lret
xor
fldenv
sub
stc
mov
mov
js
inc
scas
and
ljmp
jmp
sbb
pop
dec
and
dec
scas
sbb
mov
notl
cli
lods
sub
inc
or
mov
cmp
push
or
das
lds
mov
negl
lds
cmpsb
xchg
fwait
cwtl
adc
jne
dec
mov
adc
xor
xor
ljmp
es
mov
dec
mov
das
aam
lds
add
daa
in
iret
mov
jg
dec
sub
or
jnp
aaa
icebp
inc
mov
pop
dec
out
fsts
mov
mov
xor
popf
rcrb
cmp
cwtl
mov
data16
lret
mov
int3
xchg
or
pop
sub
shr
push
xchg
sahf
outsb
mov
inc
sbb
cs
roll
or
fcomps
dec
stc
mov
in
pusha
sbb
adc
scas
lods
mov
mov
rorb
cmp
pop
arpl
or
dec
nop
cmpsb
adc
mov
and
fildl
fwait
xchg
test
push
cld
loope
pop
pop
inc
xchg
xlat
push
loopne
jbe
or
lahf
aaa
in
cmp
sahf
push
inc
pop
nop
mov
test
xchg
cmp
in
xchg
xchg
push
and
cmp
mov
xchg
sahf
sub
add
mov
hlt
push
xor
imul
mov
xorb
xor
js
fucom
in
pop
mov
pop
in
inc
in
jle
xchg
iret
lret
dec
rclb
lret
sub
shll
fidivrl
aad
dec
data16
lea
fldl2t
mov
sbb
jb
andb
mov
jbe
popf
into
stos
jo
sub
jns
ret
hlt
mov
loope
dec
add
out
jmp
bound
sub
mull
jns
mov
mov
dec
add
push
jnp
pop
mov
jbe
sub
orb
daa
jle
repz
mov
or
in
test
cwtl
push
and
cmpsb
jl
inc
cld
push
mov
data16
or
sti
mov
aam
xor
dec
lods
insb
pop
bound
in
ret
sbb
aaa
pop
pusha
xchg
imul
xor
inc
lret
xchg
aas
cmpsb
imul
pop
add
int3
add
nop
jle
in
lea
or
neg
stc
cmp
cltd
clc
data16
mov
push
in
ficomps
repz
push
test
fists
stc
repnz
cmp
mov
inc
and
add
mov
movsb
or
pop
jl
jp
mov
sarb
std
mov
pop
stos
dec
insb
dec
rorb
imul
lods
leave
push
pop
jp
fisubl
loop
out
push
mov
push
mov
sbb
and
inc
sbb
and
adc
jae
inc
jo
addr16
push
shl
dec
mov
sub
fwait
push
ja
cmp
cli
je
jne
xchg
pop
inc
mov
mov
ja
imul
aam
cmp
sahf
or
lea
push
or
sub
js
js
dec
andb
in
outsb
in
sbb
adc
xchg
cld
rorb
lret
jb
dec
shlb
push
cmp
sub
and
int
xchg
cs
or
scas
sbb
jno
xchg
repz
xchg
loope
sbbl
dec
cwtl
test
cmp
mov
gs
lock
pop
addr16
cli
in
cmpsl
xchg
pop
sub
mov
and
xchg
shl
inc
imulb
mov
aam
int3
scas
jmp
or
hlt
dec
pop
xchg
andb
xchg
in
punpckhdq
sbb
scas
mov
not
mov
dec
cmc
lret
sbb
jo
aaa
xchg
xchg
or
addb
scas
cs
mov
inc
dec
inc
sub
fisttpl
imul
clc
icebp
push
jle
mov
fsubs
pop
aam
fst
or
or
mov
push
shrb
cmp
icebp
idivb
inc
clc
stc
das
or
in
push
outsl
shrl
imul
or
sbb
pop
std
lret
add
add
lds
jg
aam
lcall
sub
pop
push
std
fidivrs
ret
dec
inc
aad
add
jg
pop
inc
mov
xor
cmp
mov
mov
jecxz
or
sub
and
lock
mov
arpl
jl
cmp
dec
aam
push
std
jbe
push
xchg
sbb
mov
aam
cmpsb
orb
push
fnsave
pop
xchg
daa
cli
mov
es
lock
and
mov
or
pop
dec
scas
int
ja
xchg
cmc
dec
inc
jmp
pop
push
popa
cld
xor
jno
ds
add
in
movsl
xor
js
sbb
outsb
and
enter
sbb
adc
push
add
and
and
outsb
iret
test
insl
cltd
push
jge
cmp
jp
xor
mov
pop
mov
xor
jl
ss
clc
enter
add
clc
sub
mov
jae
ljmp
inc
aaa
xorl
mov
addl
das
leave
jge
lea
orb
in
xchg
les
adc
cmp
es
test
add
mov
pop
sarl
push
and
mov
dec
inc
sbb
add
ds
cmp
icebp
add
nop
inc
test
test
xor
pushf
add
fwait
rol
xor
shl
cmp
xchg
cmc
pop
inc
mov
and
rolb
ret
lahf
xor
mov
outsl
or
movsl
mov
jecxz
jecxz
andl
enter
push
mov
inc
mov
std
pop
addr16
push
jnp
bound
movsb
lock
popa
imull
mov
xchg
or
sub
jg
cld
mov
or
mov
in
out
dec
inc
ss
int
or
xchg
add
in
pop
sub
and
mov
xchg
gs
enter
mov
filds
dec
xor
or
jae
shrb
pop
mov
sub
cmpsb
jp
mov
insl
push
push
mov
or
cs
aad
xor
or
shl
aaa
pop
sub
lahf
push
scas
jle
lea
aam
add
icebp
fistpl
mov
lahf
iret
std
mov
cmpsb
in
xor
mov
xor
xchg
mov
and
inc
pusha
dec
mov
mov
jbe
mov
xor
and
and
xchg
xor
sub
imul
sbb
inc
inc
adc
push
inc
es
xchg
add
sti
cwtl
inc
cmp
inc
icebp
inc
cmp
inc
sub
sbb
sti
sti
adc
dec
xor
push
aam
adc
aas
jns
ja
out
jo,pt
xchg
pop
int
aad
popa
xchg
xor
pop
mov
pop
push
out
xchg
jno
pop
sub
ret
loop
mov
fiadds
popl
pusha
xchg
repz
cmpsb
mov
out
push
rcrb
out
and
jbe
stc
das
adc
sbb
mov
jl
sub
sub
and
adc
fisubs
mov
fdivs
jmp
lods
imul
add
shlb
fdivl
dec
cmp
and
fildl
sub
pop
fisubl
cmp
sub
add
inc
imul
adcb
movsl
cmp
jb
jecxz
pop
push
outsl
xchg
cmp
out
shlb
adc
fistps
jecxz
ss
dec
jbe
cmp
dec
imul
std
mov
insb
cmp
cmp
ret
sbb
add
test
out
in
mov
pop
pop
jecxz
fwait
jb
mov
js
les
jo
sets
data16
push
js
sub
sbb
xchg
dec
daa
lods
dec
or
and
out
push
or
aaa
loop
jmp
lcall
inc
test
fsubl
in
mov
pop
rep
out
ret
mov
lods
mov
mov
push
pop
adc
push
test
mov
out
mull
lret
aaa
lea
and
call
mov
push
xor
int
jo
mov
adc
lret
and
jle
add
lahf
pop
cmp
cmp
scas
mov
jbe
pop
hlt
in
mov
jmp
or
jne
push
mov
sbb
aam
xchg
cmc
int
xor
push
pop
lock
mov
repnz
fistpll
jge
adc
fdiv
xchg
int
sub
sub
scas
rcl
mov
popa
xchg
push
cmova
test
imul
push
lods
adc
sub
lock
and
xchg
shlb
push
int3
sbb
add
aad
adcl
mov
jae
xor
add
call
mov
ds
or
sub
nop
xlat
add
mov
push
inc
mov
jnp
adc
mov
mov
add
mov
inc
mov
adcb
mov
cld
aaa
sub
inc
stos
push
lahf
xchg
jo
out
xchg
xor
and
in
push
mov
pusha
jmp
and
sbb
fisttpl
pop
jo
icebp
add
iret
andb
shr
cmpsb
dec
cwtl
rol
and
cmp
nop
bound
addr16
lahf
add
cltd
call
sbb
es
mov
add
sti
in
call
in
jae
xchg
popf
or
gs
push
aad
mov
add
push
ja
into
dec
mov
loopne
and
popa
cltd
jo
imul
lret
push
inc
das
inc
pop
inc
clc
xchg
pop
pop
stos
and
imull
ljmp
pusha
xchg
cli
jmp
mov
inc
insb
in
mov
xchg
lea
sbb
rorb
push
adc
sbb
sub
mov
or
aaa
pop
xor
bound
dec
pop
mov
loope
sbb
add
clc
es
sub
sub
insl
sub
pop
push
mov
test
test
and
cmp
out
and
cs
sti
xchg
aad
jno
or
jnp
push
mov
pushf
push
cld
hlt
fiaddl
jns
outsb
mov
jp
mov
shlb
lahf
adcl
jne
dec
adc
fcmovnbe
mov
mov
push
outsb
fmul
or
or
jmp
hlt
add
iret
push
lahf
out
mov
test
jb
inc
js
or
repnz
mov
push
fwait
popa
sbb
push
clc
js
xchg
test
sbb
push
push
rclb
mov
ja
xor
cmp
xor
flds
pcmpgtb
into
dec
mov
sahf
xor
popf
lds
fldt
jmp
ror
jns
fiaddl
inc
push
mov
push
xor
test
push
add
and
and
das
and
ja
repz
mov
pusha
vpsllq
mov
xchg
out
cwtl
ficoms
jl
repz
push
add
addb
int
sub
aam
scas
fldenv
stos
add
and
mov
cmp
push
and
pushl
xor
insb
push
icebp
jge
xor
lret
cltd
mov
and
daa
mov
jne
sar
and
adc
jl
repz
out
push
pushf
stos
cmp
sbb
mov
out
pop
push
test
sahf
jl
pop
enter
dec
mov
pop
inc
je
xchg
mov
xor
jl
jle
mov
jg
mov
jb
pop
or
daa
fldt
roll
int
mov
fstl
jo
popf
rcrl
jae
loop
js
sbb
int3
xor
mov
add
sub
sahf
ss
jp,pn
jle
jno
stos
xor
movsb
in
stos
gs
adc
fstpl
push
add
sbb
push
lcall
cmp
fnstcw
jne
and
or
das
ret
shrl
pop
int3
mov
or
mov
cmpsl
icebp
push
add
std
jl
mov
jae
stc
imul
jb
jns
repz
jmp
mov
clc
xlat
pop
xor
xlat
and
adc
js
adc
js
adc
repz
cmpsl
outsl
movups
repz
push
and
adc
push
notl
add
lahf
in
mov
or
fwait
or
jbe
out
iret
sbb
test
int3
mov
inc
aas
xor
gs
sbb
cltd
sbb
in
mov
mov
je
cmp
mov
or
stos
cmp
pop
cmp
mov
pop
dec
stos
adc
subl
idiv
cltd
mov
cli
push
cmp
int
fldt
loop
cmpsl
mov
out
sub
xor
scas
outsl
dec
mov
mov
inc
repz
mov
leave
ja
outsb
hlt
mov
mov
fwait
add
cmp
or
notb
jo
or
or
int3
loope
mov
xor
or
mov
sub
leave
fnsave
call
lahf
sub
das
stos
es
mov
js
pop
cmp
pop
jmp
jg
popf
jne
shrl
xchg
popa
repnz
scas
test
pop
into
add
mov
clc
cltd
pop
add
pop
rorb
jbe
add
iret
dec
xchg
mov
sahf
es
std
dec
mov
sub
xchg
and
push
xchg
xchg
mov
bound
mov
push
pushf
xorb
das
cmp
imul
and
mov
jb,pn
outsb
scas
gs
cs
pop
lahf
dec
lock
pcmpgtd
xorb
jnp
dec
xchg
pop
xchg
adc
dec
sub
xchg
bnd
adc
mov
loopne
xchg
sbb
or
push
inc
jp
cld
mov
cmp
adc
jns
call
adc
inc
inc
cwtl
sbb
inc
inc
adc
xor
divb
jno
gs
sub
sbb
outsb
ja
iret
inc
fwait
iret
lods
add
sub
ret
dec
iret
xchg
lret
and
pop
call
call
pop
dec
arpl
movsb
jo
sbb
test
rcl
and
dec
hlt
or
mov
cmp
data16
jne
jle
int
jbe
mov
or
loop
aas
ror
dec
loope
pop
add
jmp
mov
mov
mov
sbb
dec
fdivs
push
je
pop
lahf
je
jae
inc
inc
sbb
jns
movsl
hlt
in
loope
and
mov
lahf
shrl
adc
insb
insb
cmp
lods
and
iret
inc
insb
aam
pop
in
dec
pop
fs
sbb
cld
jbe
cld
rcl
addr16
and
mov
ljmp
aas
jle
bound
loope
xchg
test
jg
mov
sahf
test
shr
sub
push
test
in
jo
and
rolb
shrl
daa
sub
ja
push
xor
sbb
jle
je
and
movb
mov
dec
lret
outsl
pop
mov
in
ljmp
push
xchg
stos
jmp
ja
pop
jp
cmp
and
add
mov
dec
push
cmc
test
rcr
pop
repz
and
sub
mov
dec
xchg
and
bound
pop
cmp
insb
int3
imul
cli
test
pop
add
mov
movsl
mov
in
xor
xchg
inc
mov
ret
filds
frstor
andb
adc
mov
sub
cmp
and
push
xlat
xor
sub
sbb
stos
filds
or
sbb
daa
xlat
push
mov
mov
clc
popf
pop
nop
pop
adc
jae
xor
ficomps
clts
nop
ffree
or
jbe
and
in
or
sub
ret
xor
aaa
dec
rcrl
push
xor
jo
daa
aaa
jbe
scas
in
jns
add
push
push
or
sub
je
mov
lret
jno
in
jmp
xor
mov
mov
add
push
push
ss
lcall
mov
sub
mov
negl
jg
das
dec
mov
test
test
lods
and
in
ret
xlat
testl
pop
loopne
push
add
ret
fsubr
stc
add
sti
sub
jnp
in
jg
stos
out
test
mov
jns
ret
dec
in
in
jo
ret
push
pushf
or
xchg
stos
in
adc
dec
mov
dec
ficomps
xor
mov
mov
lret
loop
jne
sub
fs
mov
xor
mov
inc
mov
popf
mov
jp
fsubr
mov
outsb
mov
cld
xor
loopne
arpl
dec
fs
shll
imul
fadds
xchg
mov
aaa
popf
jmp
mov
int3
in
rcl
dec
adc
lock
jns
cmp
rcr
pusha
add
dec
inc
popf
mov
jg
xchg
and
push
adc
jle
bnd
add
stos
dec
inc
and
sbb
cmpsl
out
push
adc
push
sahf
imul
incl
jmp
pusha
mov
enter
mov
rep
cmp
cwtl
repz
xlat
xchg
gs
xchg
mov
adc
imul
adc
int3
sbb
add
inc
add
xor
imul
inc
push
push
out
adc
cmp
repnz
pop
xchg
gs
mov
and
out
pop
sub
sbb
addl
inc
arpl
insl
mov
scas
jle
sub
lods
or
into
jl
cmpl
dec
aaa
xor
incl
js
pop
sub
fcomi
sub
mov
ljmp
mov
mov
sbb
gs
jmp
cmp
outsl
nop
decb
lods
clc
cmp
jns
xor
mov
jmp
dec
and
cli
mov
dec
les
and
out
cmp
sub
or
pop
inc
aad
mov
mov
bswap
jmp
int3
cmpsl
dec
movsb
inc
pushf
dec
lcall
cmp
movsl
cmp
push
mov
push
lods
lret
push
fcmovnb
push
into
fisttpll
xchg
testb
imul
cmp
lods
xor
xchg
mov
icebp
and
sbb
clc
movsb
pop
lret
ja
clc
clc
out
das
jno
mov
push
mov
xchg
sub
and
push
pop
stc
sbb
ret
sub
cwtl
iret
add
scas
push
xor
mov
call
push
gs
or
in
std
outsl
cmp
push
movd
popa
ja
aaa
or
int3
movsb
xchg
push
int
lods
test
lea
xor
mov
push
xchg
pop
insb
or
rcll
mov
inc
add
cmpsl
mov
cmp
and
push
mov
repz
push
in
pop
ds
negl
sub
imul
cld
incl
xor
and
mov
and
push
jge
pop
call
xchg
ljmp
rcrl
xor
mov
pop
cmpsb
inc
pop
sub
sbb
mov
stos
jns
sbb
dec
shrb
rorl
mov
adc
lods
pop
mov
cmpsb
mov
push
pop
insl
jns
jle
inc
arpl
aaa
imul
mov
jp
or
push
push
push
xor
mov
ror
std
jnp
mov
sub
sbb
lret
pop
cmpsl
and
push
fisttpll
jnp
mov
or
sbb
punpckhdq
adc
xor
pop
fisttpll
push
js
pop
xchg
nop
sbb
mov
out
ljmp
mov
pop
jae
xchg
cld
pop
push
ss
push
mov
in
fcmovbe
pop
je
pusha
fldenv
fwait
sbbb
fnstsw
push
add
outsl
je
mov
cmp
in
adc
mov
adc
jne
jg
jge
mov
sbb
adc
in
outsb
aam
xor
dec
push
inc
or
xchg
pop
adc
mov
sbb
inc
enter
repz
mov
pop
mov
add
aad
outsl
sbb
aam
aas
outsl
pop
pop
iret
xchg
ds
lret
add
add
xchg
push
dec
scas
cmpsl
js
pop
jno
ret
repz
test
mov
inc
fisttpll
pop
gs
in
xchg
rorl
scas
rorl
mov
call
xor
outsb
jae
fisubs
fisttps
idivl
jl
push
and
and
addr16
les
aam
shr
shl
mov
push
icebp
js
test
js
xor
pusha
dec
sbb
mov
jb
icebp
add
cmp
add
cmp
pop
sbb
mov
dec
pop
xlat
in
mov
mov
jae
mov
xchg
aam
and
jmp
add
scas
cmp
stos
sbb
stc
shrl
cmp
or
pop
jno
xor
jmp
mov
adc
mov
cmp
mov
ret
lea
adc
xchg
mov
cs
aas
out
cmp
and
mov
das
fwait
pushf
jns
pop
ljmp
loopne
sbb
insl
pop
adc
fstps
cmp
outsl
adc
jle
or
repz
or
das
dec
mov
mov
mov
push
or
or
pop
clc
sub
push
test
mov
sbb
mov
push
dec
xorl
inc
pushf
lahf
pop
push
push
adc
sbb
ljmp
jecxz
lods
xchg
xchg
jecxz
sbb
dec
jge
fwait
out
rcrb
notb
fwait
sahf
mov
jp
test
mov
jae
push
shlb
dec
iret
xlat
sbb
inc
aad
out
hlt
or
ret
outsb
push
imul
fucomip
mov
mov
in
push
daa
pushf
pushw
pop
inc
lds
out
add
insl
mov
jle
das
leave
sub
bound
xchg
call
pusha
iret
cmp
mov
adc
push
and
enter
lds
sub
pop
or
ffree
fnop
mov
fsub
and
push
dec
xchg
cmp
popf
push
pop
and
sub
dec
cmpsb
movsl
sbb
or
pop
into
cld
fwait
imul
adc
or
adc
cltd
test
push
cltd
idivl
add
popf
sub
mov
loopne
and
fidivrl
mov
dec
test
inc
loopne
or
inc
ret
jl
es
cmp
pop
stc
int
sub
xchg
test
in
jnp
aaa
mov
testb
pop
push
inc
sub
pop
mov
add
mov
jns
jg
sbb
lahf
mov
pushf
test
mov
xor
adc
xchg
je
iret
iret
outsl
sbb
mov
mov
gs
aam
add
mov
fdivrp
inc
mov
rorb
js
sbb
sub
xor
adc
lret
in
push
pop
das
jmp
pop
push
leave
out
fisttps
or
jmp
mov
xchg
lretw
adc
and
hlt
pop
and
shll
xor
loop
enter
aad
inc
and
cmp
push
inc
mov
sub
inc
cltd
cmp
and
stos
or
imul
xchg
jecxz
adc
xchg
push
int3
jae
push
mov
xor
push
xor
loope
test
popf
sbb
sub
jnp
xchg
mov
and
xor
aas
jp
mov
jnp
mov
jmp
dec
xor
xchg
cmp
cvttps2pi
int
addb
dec
or
cmpsl
pusha
test
jo
pop
sarl
sub
jbe
mov
gs
int
sbb
dec
mov
jl
loope
push
cwtl
js
mov
repnz
pushf
repnz
mov
je
push
push
decl
orl
dec
dec
scas
daa
frstor
jbe
pushf
push
inc
jp
add
lock
inc
mov
and
pop
cmp
mov
push
ffree
int3
mov
sbb
ljmp
repz
jge
insb
mov
jne
dec
rcrl
pushf
sarl
rol
xor
jmp
adc
pushl
sbb
into
dec
lahf
jo
sbb
jmp
cmpsl
sbb
or
jb
aam
aaa
cmp
push
cwtl
sub
sahf
xchg
mov
xchg
inc
sar
fwait
push
repz
mov
pusha
rorb
pop
cld
jns
mov
add
xor
xchg
cmp
cld
pop
lea
ret
outsb
rorb
adc
idivb
cmp
mov
inc
adc
popf
xchg
hlt
push
ret
sub
xchg
ficoml
add
push
sarb
xlat
dec
jl
push
popa
mov
movsl
aas
mov
mov
mov
fmuls
cli
ja
and
adc
int3
cmp
adc
loopne
rcr
stc
sbbb
xor
lret
scas
mov
xor
or
jo
jno
mov
out
bound
mov
rcrl
cmp
dec
es
cmp
push
leave
push
incb
mov
xor
push
roll
pop
and
mov
lock
xor
push
inc
mov
inc
out
dec
sub
pop
mov
pop
mov
jmp
pop
pushf
stos
in
mov
pop
dec
lea
fidivl
leave
iret
lret
ja
das
shrb
rorb
push
push
mov
loop
sub
mov
iret
or
repnz
pop
js
sbb
addb
gs
mov
leave
inc
lahf
pop
lds
mov
scas
in
mov
mov
mov
stc
mov
fldt
test
scas
jns
mov
hlt
xor
push
push
iret
xor
mov
sbbb
inc
mov
sub
std
adc
hlt
out
orb
into
mov
hlt
popa
pop
cmp
cmp
sbb
in
insb
jge
or
repnz
cld
pop
into
cmp
add
rolb
sarl
and
in
push
sub
inc
fsubs
sub
pop
lods
mov
xchg
push
xchg
xchg
jl
out
xchg
dec
out
cld
cmp
out
sbbl
movsb
mov
cmp
or
out
xchg
lods
and
inc
iret
popa
sub
jae
repz
push
cmp
sahf
shll
pop
fwait
cli
pop
mov
dec
pushl
pop
daa
scas
cwtl
test
addr16
les
jmp
inc
aam
rorb
pusha
cmc
stos
cmp
ljmp
fwait
bnd
sar
int
sub
jl
mov
movsl
f2xm1
inc
movb
adc
scas
sub
sbb
ret
jg
jecxz
ror
jb
ret
adc
mov
push
aas
test
call
test
in
xchg
jne
xor
fisubrs
cmp
cmpsl
aad
outsl
mov
fs
shll
push
int
clc
insl
xchg
sbb
sub
adc
xlat
push
inc
iret
xor
xchg
pop
mov
add
mul
adc
adc
leave
insb
jae
into
enter
cld
mov
and
lods
jecxz
pop
push
lods
jns
sub
add
test
popf
xchg
shl
and
movb
xor
dec
add
xor
cmp
repnz
or
fsubrs
jno
add
mov
pop
sbb
sbb
sbb
movsb
clc
imul
add
and
incb
push
xchg
sub
pop
inc
loope
in
xchg
cmpl
lods
inc
test
mov
jbe
shl
add
pop
lods
jecxz
xorl
mov
xchg
push
ljmp
push
sbb
leave
dec
fwait
bound
inc
shll
rorb
adc
pop
lods
lret
sahf
jnp
or
dec
push
inc
sub
cmp
push
sahf
fcomi
rolb
mov
ret
jmp
jmp
mov
mov
leave
jmp
fisubrs
push
pop
sbb
and
push
cmpsb
fidivs
or
stos
bnd
jp
aad
enter
ret
add
xchg
or
and
shlb
xor
xor
xchg
iret
sahf
ss
dec
and
dec
inc
jle
xor
daa
adc
dec
cmc
pop
ds
mov
jmp
cmp
lock
fsubp
mov
pop
dec
lea
mov
fldl
outsl
xor
jg
daa
daa
xchg
lahf
aaa
imul
mov
dec
pop
test
or
repnz
stos
ja
cmp
shrb
push
dec
mov
jnp
shll
mov
ss
add
inc
inc
adcl
fdivl
ljmp
adc
outsl
daa
icebp
xor
jg
test
mov
mov
sbb
xchg
orl
inc
in
xchg
and
pop
lcall
pop
lods
add
inc
in
jnp
dec
cmc
movsl
lret
add
mov
inc
jmp
sbb
test
push
cs
dec
xchg
cmp
mov
mov
hlt
sahf
std
xor
mov
cld
sbb
fldcw
add
or
push
xchg
ds
mov
sub
xor
push
popa
cmpl
cmpsb
lods
dec
cmp
lods
push
or
dec
jo
cld
out
imul
imul
loop
gs
mov
mov
pop
adc
rolb
cmpsl
stc
js
ja
test
fnstenv
cli
sub
inc
arpl
sbb
and
arpl
enter
jbe
orb
test
jp
jbe
mov
sub
and
addr16
sbb
imul
cmp
mov
daa
pop
popa
mov
xlat
or
mov
sbb
in
ljmp
sbb
cmp
andl
xchg
mov
fadd
jnp
arpl
adcb
faddl
jne
outsb
ret
test
aas
out
in
add
mov
ret
icebp
fs
mov
inc
repnz
xor
jmp
ret
js
push
adc
repz
outsb
mov
jecxz
push
in
cwtl
sbb
ja
xor
push
ds
nop
mov
rcl
sub
mov
adc
test
mov
int3
dec
loope
adc
mov
gs
mov
sbb
jo
xchg
jb
test
cmp
nop
insl
pop
pop
mov
ret
or
push
push
aas
pop
dec
mov
lret
mov
sti
movsl
out
out
mov
shll
xchg
and
mov
movsb
sbb
rclb
xor
jb
popf
or
imul
adc
xchg
shrb
push
int3
xchg
dec
mov
sub
inc
pop
mov
mov
inc
loop
mov
test
stos
sbb
xchg
js
aam
lea
mov
xchg
add
cltd
mov
scas
inc
xchg
pop
lret
sub
mov
mov
je
bound
scas
pushf
lahf
adc
das
jge
lret
in
lock
adc
test
fwait
cmc
dec
dec
addb
pop
sub
ljmp
and
push
mov
and
ja
sarb
jnp
out
andb
in
lds
mov
int3
mov
pop
mov
sbb
ficompl
cmp
push
sbb
arpl
shrl
xchg
push
imul
xchg
jbe
jbe
sub
cld
mov
jp
addr16
imul
add
ret
push
hlt
adc
xor
mov
fsub
repnz
add
and
int3
or
lahf
sbb
jno
cmp
and
pop
jle
fisubl
dec
fldl
jbe
xchg
mov
mov
mov
add
sub
les
lea
xor
sub
cltd
xlat
xlat
push
xchg
test
sbb
insl
push
xor
cld
jl
loop
in
enter
xchg
pop
and
aas
inc
rolb
loop
imull
mov
fists
pop
dec
and
rol
cmpsl
ja
out
jbe
jno
fs
mov
imul
jo
idivb
inc
dec
gs
xchg
daa
je
ss
dec
lahf
sub
aad
fistpll
popa
outsl
cmp
out
loop
fs
cmpsb
leave
cwtl
test
test
call
in
mov
fisubs
sub
sbb
cmpsb
dec
nop
out
mov
mov
mov
pop
xor
stc
jp
dec
mov
in
and
call
dec
pop
das
pop
inc
and
sub
mov
xchg
push
fistps
aad
fisttpll
mov
insl
mov
mov
insl
fidivs
xlat
movsb
cwtl
sete
push
data16
pop
lret
frstor
aad
lds
cmpsl
jmp
jo
dec
daa
mov
add
pop
out
push
fbstp
hlt
jg
aaa
dec
xor
and
sub
mov
sbb
iret
pop
push
aas
aaa
je
mov
jne
cld
push
leave
aas
xchg
fs
inc
sahf
outsl
jg
cmp
and
jae
adc
xchg
cld
xor
jecxz
or
push
int
int3
cmpsb
mov
call
stos
dec
call
xchg
pop
xor
push
inc
push
push
ret
test
jge
and
mov
ficomps
mov
jne
cmp
loopne
xchg
sub
mov
xor
adc
aaa
out
into
mov
std
jns
test
jb
push
daa
nop
es
jp
sahf
cmp
shl
fnstsw
in
cwtl
mov
test
cmpsb
jmp
fldt
sarl
icebp
mov
pusha
cmpsb
push
pop
sbb
test
adc
ret
xchg
cmp
xor
ja
cltd
testl
push
jecxz
test
jmp
call
inc
leave
push
sbb
dec
rorb
into
ficoml
jle
sbb
xchg
push
mov
xchg
out
xor
cmp
sbb
push
mov
jmp
cli
jne
notl
leave
sbb
test
daa
lret
cmpsl
cmp
jae
xchg
add
lock
fistl
fwait
int
mov
shlb
xor
or
push
or
cmp
jbe
sbb
sbb
outsb
test
cmp
dec
mov
mov
lahf
mov
testl
std
xor
add
enter
xor
xchg
or
sub
in
and
les
push
ja
das
jae
in
pop
outsb
loopne
sarb
xchg
ret
jae
sub
test
pop
lcall
in
ljmp
fidivs
jmp
pop
mov
mov
mov
mov
pop
andl
xchg
cmp
fdiv
jae
xchg
into
xchg
pop
push
mov
ror
dec
lods
cmp
cwtl
jae
loopne
out
xchg
push
sarb
cs
or
jmp
loope
sub
repz
mov
pop
xchg
or
into
add
lds
dec
loope
add
pop
testl
cli
jae
es
add
or
lods
aam
out
popf
xchg
scas
jnp
and
cs
jbe
sub
xor
push
adc
mov
mov
shll
sbb
mov
mov
mov
xor
fsubl
lods
add
adc
loope
ds
loop
out
inc
dec
bound
jnp
ret
addr16
push
rorl
pop
pop
sub
fidivrl
pop
repnz
ss
cmp
jecxz
xchg
lock
rorl
mov
pop
in
imul
incb
movsl
popf
xor
fstl
push
xor
xchg
adc
popf
mov
addb
push
hlt
inc
push
jae
jne
sti
mov
push
cmpsl
shll
jae
xchg
movsb
sti
lods
push
repnz
jbe
xchg
fadds
and
lret
jb
inc
sub
mov
ss
out
sub
pop
stos
or
mov
ror
xchg
ljmp
sbb
sbb
mov
adc
hlt
jno
stos
aas
adc
data16
mov
sub
add
stc
cmc
sub
ficoml
mov
inc
mov
push
popf
out
out
add
xchg
xchg
cwtl
xor
jns
mov
sbb
inc
jle
enter
lret
js
or
pop
adc
aad
xchg
dec
icebp
popa
mov
pop
lods
mov
and
cmp
aaa
cmpsb
lcall
cmp
call
dec
hlt
les
les
mov
xchg
push
dec
push
decl
or
xchg
mov
orl
or
lahf
rcr
push
sahf
xor
push
sti
pop
ficoml
or
jno
lcall
in
jns
shrb
mov
push
sub
add
ret
sbb
data16
sbbl
push
add
iret
lea
push
push
mov
jbe
xor
ret
sahf
mov
add
repnz
pusha
push
adc
adc
leave
dec
test
mov
jns
test
dec
xchg
std
cmp
cmpsl
sbb
add
jle
and
stos
subb
std
and
pop
sbb
popl
mov
or
scas
jne
mov
scas
mov
cmp
pop
movsl
movsb
ja
mov
cltd
push
pop
decb
mov
jno
dec
jg
hlt
les
xchg
dec
lahf
jb
cmpsb
add
into
pop
and
aaa
xchg
pusha
pop
arpl
adc
out
gs
andl
imul
imul
loope
push
push
in
push
mov
adc
psubsb
cmp
xchg
cmp
ret
shlb
leave
and
outsl
push
out
decl
add
pop
mov
stos
or
cwtl
cwtl
gs
or
inc
push
out
stc
scas
inc
ret
dec
out
lock
test
jno
int
mov
xchg
div
adc
lret
sbb
div
push
jae
aam
inc
or
repnz
mov
sahf
int
rcrb
fstenv
les
repz
xchg
add
gs
or
mov
jo
mov
int
mov
mov
mov
mov
ss
lods
inc
imull
adc
fsubrl
cwtl
mov
mov
lcall
ja
andb
ficompl
fiaddl
add
sub
pusha
pop
push
scas
insb
mov
rorb
and
sbb
or
daa
pusha
add
mov
cmp
and
xchg
mov
push
xchg
pusha
pop
and
pop
xchg
add
pop
xor
xlat
cmp
jo
int3
add
mov
addr16
xchg
mov
shrl
imul
or
aaa
xchg
push
xor
and
xor
jne
imul
iret
sbb
test
push
adc
or
clc
push
movsl
mov
dec
outsl
jae
decl
cmc
adc
std
lret
fisttpll
fwait
push
aam
repz
sarb
ror
jmp
stos
or
fs
add
sbb
jl
lret
es
and
cmpsb
mov
push
pop
lret
jg
sti
jle
add
push
adc
sbb
icebp
jmp
lcall
cmp
insl
inc
or
pop
insb
sbb
cmp
in
pop
dec
sbb
push
insl
mov
scas
mov
jno
sub
je
cs
in
inc
inc
enter
cmp
in
shll
loope
xor
test
or
fs
rorb
frstor
fiadds
ret
jne,pt
jl
hlt
gs
mov
rcr
sti
pop
call
cmp
es
loop
cwtl
push
push
insl
stos
out
add
scas
sub
leave
in
cld
push
mov
xlat
pop
mov
jg
jb
insl
int
inc
mov
dec
pop
inc
repz
or
push
lahf
pop
fs
xchg
cmpsl
mov
xor
test
rcrb
test
and
pop
xlat
dec
enter
xor
lcall
push
enter
iret
daa
lcall
jno
mov
adc
adc
fcmovb
rorl
out
xlat
fs
mov
push
jbe
pop
mov
stos
shll
push
icebp
add
mov
faddl
lods
xor
scas
sbb
in
xchg
xchg
sti
and
mov
ds
cmovge
mov
pusha
cmp
inc
cwtl
and
lds
in
test
sub
mov
jne
cmpsb
fs
pop
in
outsl
fistps
add
adc
ret
iret
lods
inc
xor
ja
sbb
lret
fcomp
shlb
movsb
dec
xchg
pop
aas
stos
add
and
jmp
or
shlb
pop
jns
sbb
sbb
sbb
xlat
mov
movsl
mov
adc
pusha
jbe
popf
mov
mov
or
sbb
jg
pop
push
pop
jg
and
mov
mov
scas
iret
mov
inc
fisubl
popf
jge
jle
jbe
insb
sbb
xchg
int3
in
adc
adc
xchg
inc
jle
mov
mov
div
pop
xchg
repz
hlt
into
stos
push
or
lock
lcall
std
jg
popl
nop
shr
lret
stos
sbb
dec
jge
in
cmp
nop
ffreep
push
dec
imul
jp
dec
fdivrp
dec
cmp
outsb
ret
xor
cmpl
hlt
and
sbb
addl
pop
or
mov
add
mov
aam
imul
mov
dec
movsw
and
popa
xor
call
int3
rclb
dec
scas
pop
push
mov
add
push
xor
fcoms
mov
sub
xchg
imul
xchg
imul
test
scas
je
sbb
or
insb
inc
push
idivb
pop
adc
orl
pusha
adc
fbstp
std
lods
fdivp
daa
and
mov
xchg
addr16
int3
push
js
lea
loope
cmp
xchg
jl
in
sbb
movsl
cmp
lds
addr16
hlt
pop
popa
xchg
sar
inc
xchg
outsb
insl
jo
xor
cs
dec
sbb
aas
jnp
mov
xor
inc
jo
sub
mov
adc
mov
adc
mov
ss
loop
leave
push
and
popf
cmp
fildll
adc
call
cmpsl
xchg
in
pop
or
clc
iret
jecxz
inc
stc
mov
xchg
mov
clc
fidivrs
xor
cmp
mov
aad
sahf
jnp
or
push
cmpsb
cmp
mov
mov
push
sbb
out
stos
loopne
or
test
divb
add
pop
pop
fimuls
xchg
popa
in
rcr
dec
push
sbbl
sub
jl
mov
pop
aas
jecxz
daa
xor
fwait
iret
and
or
or
iret
inc
xchg
xlat
sbb
fdivrp
insl
push
xor
repnz
pop
cmpsl
jae
fsubr
out
adc
mov
rcll
test
cmpsl
insl
int
push
les
test
call
in
push
lods
pop
mov
mov
test
push
inc
mov
cmp
shlb
cltd
mov
pop
add
xor
cmpps
and
ret
stc
sbbb
mov
push
das
ds
mov
mov
push
jb
out
int3
and
lahf
fdivr
leave
outsb
gs
inc
adc
iret
pop
and
arpl
cmp
cli
lds
int3
push
mov
lods
ss
xlat
popl
or
sub
pushf
mov
lods
insl
nop
adcb
testb
decl
clc
fcmovb
cmc
cmp
or
push
xchg
out
add
inc
clc
mov
mov
mov
jae
repz
lods
lods
jno
jns
mov
pop
cld
pop
mov
jnp
lds
push
mov
sub
pop
repz
call
mov
xchg
mulb
cs
imull
cmp
sub
in
mov
repz
movsl
sbb
filds
sbb
lods
mov
pop
jle
shl
sahf
jl
sbb
mov
adc
cmpsb
cmpsb
inc
push
lock
pop
pop
ljmp
and
cmp
pop
pop
pop
ds
js
rcll
and
mov
clc
xorb
lcall
out
rorb
xchg
andl
call
sbb
adc
cmp
sbb
jae
icebp
add
xchg
push
pop
push
fisubl
or
sar
ss
outsl
sahf
flds
push
mov
mov
mov
les
adc
movsl
repnz
adc
popa
pop
in
cmp
sbb
jg
mov
call
mov
pop
jp
lret
aas
push
sbb
sbb
loope
test
roll
dec
dec
mov
hlt
xlat
or
rcll
clc
stos
int
xlat
and
out
or
loopne
sbbb
ds
inc
xor
cmpsl
cmp
inc
subb
pop
add
sub
repnz
fstpt
cld
aas
popa
out
mov
out
outsl
jp
push
test
add
xchg
int3
or
xchg
jne
out
mov
fidivrs
lods
pop
cwtl
lock
loop
add
lret
pusha
xor
arpl
xchg
test
div
iret
jl
push
fnstsw
or
fildll
flds
popa
sub
add
xlat
push
mov
in
rol
and
cmp
pop
cmp
in
push
xor
arpl
orl
data16
mov
aam
or
jns
lea
pop
or
xchg
cs
cmpsl
adc
adc
sub
fsubrl
adc
xchg
insb
pop
xlat
icebp
lcall
inc
insb
ss
jb
jb
xchg
rcr
xlat
mov
or
jecxz
pop
jb
ja
shrl
xchg
arpl
sbb
adcl
sbb
mov
pushf
sbb
xor
iret
sahf
inc
flds
into
adc
daa
insb
clc
mov
add
sbb
cmpsb
negl
mov
repz
jnp
dec
lods
mov
mov
xchg
dec
in
sbb
mov
stos
xchg
mov
add
loope
enter
pop
hlt
fimuls
ss
pop
das
pop
movsb
add
mov
lods
sub
mov
fisubrl
push
imul
shlb
xor
hlt
jge
cmpb
ret
test
nop
mov
jg
jle
inc
mov
fs
pop
lds
insl
subb
dec
or
imul
dec
cmp
jae
and
mov
jae
xor
cmp
test
sbb
sub
mov
mov
call
rorb
jl
rolb
jns,pn
clc
dec
mov
xchg
xor
test
and
xchg
ljmp
pop
xchg
int
pop
push
mov
orl
cmp
pop
adc
orl
inc
push
xchg
call
mov
mov
nop
xlat
shl
push
sub
mov
pushf
enter
inc
xor
mov
jno
xchg
xor
add
lahf
xchg
sbb
and
divb
imul
scas
xchg
mov
mov
sti
in
sahf
pop
daa
lds
rcll
jmp
push
push
iret
sub
aad
sbb
into
mov
push
dec
ljmp
aaa
dec
push
mov
pop
int3
aaa
int3
mov
cwtl
push
test
pop
daa
rcll
adc
xor
je
pop
push
xor
iret
xor
ss
int
pop
fadd
flds
add
sbb
inc
jb
or
aaa
jp
insb
pop
sbb
xchg
jns
mov
lock
xchg
arpl
mov
xchg
mov
sahf
movsb
leave
adc
xchg
ja
sub
inc
rcrb
jge
int3
je
popf
mov
xchg
out
cmp
rol
lretw
aas
push
icebp
lea
jecxz
push
sub
in
and
pop
inc
loope
pop
cmpsb
sbb
mov
scas
dec
popl
mov
jns
aas
add
add
sbb
int3
sbb
xor
sub
movsl
mov
int3
call
out
jp
push
adcb
loope
sub
loop
mov
mov
popf
jecxz
insl
jg
xor
mov
cmp
adc
jp
sub
cmp
push
xor
push
fstpl
imul
xchg
pop
xchg
lods
pop
lods
add
fimuls
xor
int3
or
sub
cmp
mov
orb
sub
aam
mov
mov
ss
xor
lret
mov
mulps
inc
lods
push
aam
cmp
call
mov
push
dec
xlat
test
hlt
mov
das
fnsave
and
or
and
scas
and
xchg
shl
cmc
xchg
xor
clc
or
mov
or
add
sarl
test
xor
jmp
lods
cli
repz
enter
aas
out
sti
add
paddq
gs
es
lahf
jecxz
push
ljmp
pop
roll
or
pop
mov
ds
add
pushf
shrb
and
inc
les
mov
jb
pop
mov
pop
loope
aas
mov
xchg
xchg
jge
std
xor
orb
aas
aad
test
jae
sbb
push
add
cs
in
adc
sub
dec
or
mov
fdivrl
mov
out
outsb
ss
pop
jno
xchg
cli
add
int
cmpsl
mov
mov
inc
adc
dec
xchg
into
imul
jne
adc
mov
or
push
cmp
das
loop
jg
jno
scas
add
in
popa
lds
mov
lahf
sarl
lds
sbb
push
push
rclb
push
mov
lods
inc
mov
sbb
sarb
lcall
xchg
sti
mov
setae
cld
int
cmp
mov
cmp
mov
and
into
je
cmp
cmp
cltd
sub
hlt
into
push
fldcw
push
cmp
mov
jb
cmc
push
ja
mov
cmpsl
gs
js
sub
push
das
out
lds
out
mov
push
xor
pop
aaa
mov
insl
frstor
ret
pop
pop
jae
rcrl
ja
push
and
inc
mov
nop
lret
lret
out
and
iret
or
add
mov
test
test
push
test
pop
popa
dec
loope
sbb
dec
pop
cmc
cmp
movsb
loop
stos
stc
mov
dec
testb
sub
fldl
pop
loope
stc
mov
xchg
ror
cmp
mov
cwtl
fdivrl
push
dec
push
popa
mov
jne
test
iret
sub
movb
xchg
addr16
pop
iret
push
pop
pop
stos
je
sub
xchg
xchg
pusha
inc
inc
jl
insl
repz
push
cmp
mov
fidivrl
dec
cmp
movsl
mov
push
mov
push
popf
test
aas
jo
push
push
add
sbb
es
mov
addr16
jge
cmp
xchg
scas
mov
sbb
and
inc
iret
test
and
adc
loope
iret
mov
sbb
dec
repnz
add
or
adc
mov
push
imul
and
testl
jmp
outsb
dec
popa
pop
movsl
mov
mov
jge
test
xchg
pop
xchg
and
bound
fnstsw
lret
adc
mov
call
pop
fwait
jno
add
mov
push
lea
xchg
xor
pop
negl
push
cmp
sub
in
sbb
cli
in
cmp
pop
mov
lock
stos
adc
pop
and
loop
inc
push
pop
shll
or
cmp
jg
movsl
cli
push
and
inc
inc
int
mov
popa
sub
pusha
lahf
cltd
and
rcrl
inc
out
mov
mov
mov
or
mov
add
cmp
out
xchg
iret
push
cmpsl
adc
xor
sub
mov
pop
or
mov
ret
fcomp
push
mov
xor
xor
mov
lock
enter
rolb
ret
push
pop
into
lods
inc
cmp
fidivl
adc
sbb
movsl
fsubl
jnp
add
aaa
pop
jbe
jge
xor
enter
lret
dec
cmp
dec
push
fdivrs
push
movsb
sbb
or
in
ljmp
rolb
push
popa
repz
xchg
jle
cld
pop
mov
pop
fmul
mov
imul
shrl
fs
mov
es
mov
push
pop
adc
xchg
xchg
mov
imul
rol
mov
fwait
jae
in
mov
mov
in
xor
imul
mov
mov
inc
push
mov
shlb
test
shll
xchg
stos
inc
jbe
idiv
test
cld
int3
loop
push
dec
das
mov
ss
sbb
and
sahf
movsb
mov
jle
addl
inc
mov
push
push
fwait
inc
scas
mov
int
mov
xlat
and
push
out
loope
dec
sbb
cmp
pushf
or
mov
aaa
cli
out
mov
mov
fcoml
inc
cmpsb
jg
dec
aas
xchg
and
xor
jnp
xchg
enterw
sub
xchg
add
add
out
adc
int3
or
adc
mov
test
gs
dec
xchg
call
cwtl
rclb
std
jmp
jge
xor
push
rclb
fldcw
mov
dec
pop
xchg
sbb
fildl
notl
xchg
add
or
fstpl
xor
stos
mov
jnp
cltd
pop
repz
jno
fistl
popa
int3
mov
sbb
push
sbb
dec
aaa
mov
jae
or
xor
push
mov
in
cld
sbb
lcall
aas
cmp
cmp
leave
sbb
das
pop
xor
jne,pt
pop
jbe
or
test
mov
clc
andl
xor
jle
sahf
pop
mov
sbb
into
daa
mov
dec
js
sub
mov
add
daa
xlat
lcall
push
popf
adc
inc
sub
sbb
adc
cwtl
xchg
lahf
cmpsl
lahf
push
lret
xchg
pop
pop
fldenv
dec
enter
pcmpgtd
sbb
nop
addr16
pop
add
or
loopne
mov
dec
adc
ljmp
or
sub
mov
filds
mov
in
cmp
inc
test
dec
inc
fmuls
xor
mov
jl
insb
xchg
ret
rep
outsl
pusha
cmpsb
fcompl
ss
xor
pop
loopne
sub
test
xor
mov
mov
jae
bound
or
or
fwait
popa
xor
int
in
sbb
mov
ljmp
into
test
jge
ja,pt
cld
movsl
cmp
daa
ljmp
sbb
pop
mov
jmp
adc
inc
dec
mov
or
sahf
clc
sub
mov
cld
dec
mov
add
call
jmp
arpl
outsl
add
imul
push
data16
pop
shrb
jns
sub
scas
jl
js
lret
nop
mov
or
cwtl
sbb
fs
sbb
or
or
cmp
jg
adc
cmpsb
pushf
mov
in
js
dec
icebp
repnz
scas
sub
cmp
dec
push
bound
and
mov
ret
dec
imul
cld
pusha
xchg
and
push
std
mov
sub
or
xor
shll
popa
imul
cmc
xchg
or
repz
cmp
not
dec
sub
sbb
stos
or
push
out
lock
fidivs
imul
ds
push
push
rolb
pusha
sub
or
adc
adc
cmp
or
xor
xchg
daa
insb
xor
test
stos
incl
jno
stos
fidivs
andl
pop
ret
inc
xor
inc
fwait
popf
mov
push
int3
clc
inc
push
out
fldcw
jle
push
pop
sbb
in
push
mov
xchg
adc
inc
pop
mov
arpl
inc
pop
dec
sbb
fsubrl
jne
test
xchg
gs
mov
sub
pop
scas
xor
xor
xor
rcrb
and
into
push
pusha
stc
cld
xchg
add
push
dec
cs
xor
mov
pushf
in
add
cmp
lods
cwtl
daa
mov
cmp
or
mov
jmp
xor
enter
jnp
xchg
push
scas
data16
bnd
xchg
pop
xor
insb
sbb
lret
lahf
xchg
sub
fidivl
mov
xchg
test
ret
ds
lcall
pop
mov
xor
mov
aad
jmp
and
inc
lret
push
jbe
push
pmaxsw
jns
fld
roll
insl
pop
or
fwait
call
outsb
or
adc
loopne
xlat
push
fldt
je
jecxz
insl
sub
shll
xchg
loope
stos
mov
fwait
and
pop
dec
clc
jg
inc
movsb
cmpsl
nop
dec
pop
shrb
jg
stos
scas
xchg
mov
pop
leave
sub
sbb
fsubr
pop
push
rcrb
cmp
mov
pop
aad
lds
fcmovu
fwait
cld
inc
mov
jl
jb
mov
hlt
imulb
imul
outsb
aas
xchg
dec
cmpsl
popf
sbb
insb
sub
das
aaa
fadds
adc
lods
push
xchg
andl
mov
repnz
ret
mov
cmpsl
lods
insl
mov
nop
mov
js
jno
daa
sarl
sti
mov
in
inc
loope
jmp
insl
pushf
shl
xor
or
jbe
mov
or
cmp
xchg
imul
imul
adc
xchg
and
rolb
mov
fimull
das
daa
pop
ja
mov
pushf
mov
std
cmp
and
pushf
xchg
cwtl
xor
mov
test
push
mov
loopne
nop
lods
push
popf
je
and
push
out
or
mov
sbb
xor
xchg
les
ja
jge
fs
adc
and
adc
repz
loopne
xchg
iret
add
cmpsl
aaa
xor
pop
sahf
adc
gs
xor
scas
jg
fstpt
dec
push
mov
jle
cmpsl
jnp
out
arpl
scas
dec
adcl
std
imul
ss
jo
outsb
popf
cmp
mov
jl
mov
dec
out
jmp
lea
cmc
pop
in
add
mov
cmp
stc
pop
mov
sub
pop
mov
or
je
sbb
imul
cmp
push
ss
mov
push
aad
dec
xchg
cmp
and
or
adc
fnstsw
decl
xchg
cmp
mov
scas
jne
dec
jl
pop
pusha
ss
mov
fs
js
pusha
inc
dec
jmp
jo
jle
ret
mov
jns
in
js
adc
test
aam
mov
push
sahf
fdivrs
jnp
or
and
popa
repnz
cmpsb
in
jns
ja
nop
jmp
fucomip
mov
aam
xchg
xor
pop
cmp
adc
dec
xchg
dec
cmpsl
push
mov
das
dec
push
adc
push
out
inc
je
aas
mov
push
xchg
xchg
sarb
in
dec
inc
adc
sti
push
and
adc
mov
stos
pop
std
fstps
or
dec
jg
jle
lea
fisubrl
cmc
pop
arpl
aad
cs
sbb
icebp
lds
outsb
jo
fisubrs
xchg
out
inc
es
push
mov
jmp
cmp
push
lahf
xchg
mov
sub
pop
sbb
add
dec
scas
aam
xchg
mov
notb
or
add
push
mov
sub
lret
outsl
sub
mov
fidivrs
and
mov
adc
out
pop
cli
inc
pop
popa
aas
mov
cmp
mov
aad
bound
mov
ret
sub
push
lahf
mov
test
js
gs
fs
pop
stc
das
cs
xor
add
movsl
fsts
mov
mov
test
fidivl
shlb
mov
in
jb
fcomi
das
mov
cmp
dec
loop
xchg
mov
or
mov
mov
scas
in
inc
fidivrs
daa
test
xor
or
mov
inc
and
dec
icebp
fmul
ret
push
shll
xor
gs
cld
cmpsl
pop
cmpsl
movsl
push
add
pop
insb
jmp
stos
fbld
and
mov
roll
or
fs
pop
dec
sub
js
jle
add
pop
loop
adc
xchg
insl
push
das
inc
arpl
mov
sbb
ret
pop
std
iret
fstl
insb
pop
pop
js
xchg
pop
push
std
or
popa
cmp
test
xchg
lods
and
cmp
dec
sarb
ret
mov
cmpsl
jb
fcomi
mov
and
xchg
loopne
add
je
and
push
ja
mov
dec
xlat
and
sbb
push
fld
mov
xor
sub
bound
jp
add
add
repnz
jg
fdivrp
xor
pop
outsb
fsubs
lret
xchg
inc
adc
loopne
es
repnz
gs
ljmp
incl
addr16
jle
inc
push
mov
leave
add
out
nop
xlat
test
or
mov
cmpsb
nop
add
xchg
test
cmp
mov
int
ret
pop
add
cmp
adc
jns
and
sub
test
mov
adc
cld
pop
ret
test
cmc
mov
stos
dec
adc
les
lret
mov
adc
int
xchg
push
sbb
outsl
fs
pop
mov
sub
hlt
jnp
mov
sbb
cmpl
xor
sub
xor
mov
push
lds
fwait
pop
jge
bound
mov
sub
hlt
xchg
fwait
outsl
sub
inc
call
mov
sarb
pop
cmp
ljmp
int
add
sub
int
xchg
insl
sbb
into
mov
jne
pop
lock
xor
cltd
movsl
test
daa
mov
aaa
or
sub
and
cmp
inc
arpl
adc
dec
popa
jle
adc
inc
mov
cmc
sub
pop
push
pop
aaa
mov
lds
shll
fimuls
mov
ss
pop
enter
inc
dec
mov
aaa
mov
sub
xor
mov
mov
add
data16
push
cs
cmpsb
push
add
mov
lea
sub
jae
mov
int3
sbb
or
jae
jg
pop
cmp
push
inc
hlt
cmpsl
and
out
daa
lcall
xor
push
xor
repz
hlt
inc
inc
test
and
gs
sahf
scas
dec
pop
push
mov
jae
add
adc
fmuls
dec
pop
out
orl
in
push
dec
daa
mov
mov
idivb
repnz
lret
lret
mov
pop
pusha
int
xchg
js
or
cltd
ret
jae
je
jg
lret
shll
sub
test
fldt
jge
call
xor
leave
repz
and
mov
xor
cmp
sti
dec
popf
das
cmp
pop
loope
rcll
fiadds
popf
outsb
mov
fstl
mov
xchg
xchg
or
push
gs
jns
cmc
outsl
mov
ret
aam
push
loope
daa
jp
xchg
dec
rcrb
data16
mov
xchg
enter
jnp
inc
push
aaa
call
mov
jmp
int
jns,pt
stos
pop
or
enter
in
fwait
jae
fstps
mov
jne
cmp
cs
scas
test
sti
xor
movb
stc
aam
sbb
add
lret
outsl
sbb
jb
jns
mulb
jbe
pop
or
push
lcall
mov
xchg
mov
pop
mov
mov
inc
inc
cmp
rorb
clc
xchg
imul
xor
aam
dec
stos
mov
cli
xor
push
test
pop
mov
in
movsb
fcomp
lret
rorl
pushf
insb
dec
push
xor
jge
cmc
test
sub
mov
mov
lret
sub
push
push
inc
pushf
or
pop
inc
scas
repz
xor
dec
xchg
mov
scas
test
adc
dec
dec
adc
dec
push
js
sub
rclb
pop
jge
push
popl
movsb
lahf
test
loop
mov
cmp
sarb
leave
or
movsb
aas
cwtl
cli
mov
fsubrl
cmp
push
pop
pop
lods
int
mov
stos
jg
iret
jae
je
shll
out
inc
outsl
cmp
adc
scas
xor
dec
push
fidivl
test
dec
aam
movsl
rolb
cmpsl
cs
frstor
pop
sti
mov
sti
divl
in
bound
dec
leave
mov
es
sub
ljmp
xchg
push
insb
bound
mov
add
leave
dec
je
mov
jp
or
mov
jnp
in
mov
or
mov
mov
sub
add
dec
push
adc
and
ds
push
mov
mov
insb
push
in
movl
dec
lret
mov
and
idiv
mov
pushw
xchg
jb
push
jae
popf
loope
mov
inc
fiadds
mov
outsl
sbb
inc
adc
inc
out
add
sub
push
aaa
xchg
imul
pop
dec
arpl
cmpsl
push
and
inc
cmp
lret
lret
mov
loopne
xchg
fs
daa
ds
cld
mov
scas
gs
add
add
inc
rorl
push
test
or
mov
fldt
mov
leave
rclb
movsl
fildl
pop
inc
and
ret
mov
pop
adc
cmp
push
sub
mov
pop
in
sbb
lock
ljmp
and
jecxz
jae
add
cld
pop
pop
dec
call
lret
and
inc
pop
mov
test
or
aas
cmpsb
test
imulb
enter
dec
aaa
aam
pop
arpl
mov
jnp
fidivrl
insl
push
sti
shlb
mov
nop
aaa
xchg
negb
stc
jg
push
out
xchg
dec
dec
xchg
mov
mov
fst
insb
cmp
aam
out
jns
sbb
mov
fs
sbb
mov
data16
mov
xchg
mov
cmpsl
mov
or
fcoml
xor
xor
mov
and
shll
mov
repz
mov
mov
mov
outsl
push
cltd
insl
pop
fcmovbe
int
daa
pushf
mov
mov
loopne
into
jle
pop
jp
mov
cmp
gs
sarb
loopne
mov
not
cltd
lock
push
jg
mov
sub
cld
jp
lds
test
loope
scas
cmp
orl
mov
dec
inc
jecxz
je
outsb
sub
or
call
les
bound
test
shlb
cmp
pop
or
mov
mov
cmc
mov
sub
idivl
loop
pop
add
fwait
or
dec
jle
and
add
ret
in
enter
sarb
pop
hlt
cmp
ja
xor
sbb
dec
rcrl
lret
jns
pop
adc
leave
and
fadds
sub
pop
xchg
adc
pop
arpl
xchg
xchg
mov
push
loopne
push
push
xchg
frstor
jp
xchg
jle
mov
int3
into
mov
test
xchg
rcrb
dec
stos
mov
leave
loopne
rcll
sbb
test
cmpb
test
sbb
stos
movsb
cmpb
jge
rorb
mov
xchg
sbb
jne
hlt
int3
icebp
imul
dec
adc
adc
test
sbb
mov
not
iret
and
ret
mov
jnp
cmpsb
sub
inc
add
fsubrl
xchg
xlat
gs
int3
hlt
jo
sti
sbb
into
jo
push
pop
loope
mov
in
gs
inc
push
cltd
scas
sub
aaa
or
lods
mov
push
insl
push
jb
fcomi
aas
stos
fisubrs
fstps
rorl
and
sbbl
cld
mov
js
stc
or
cli
xor
mov
jge
cmpsl
fcmovb
add
cmpsb
out
mov
or
push
imul
ljmp
push
loope
add
lret
and
fildll
dec
cwtl
and
enter
ret
lds
orl
ret
iret
cmpsb
jns
cmp
cmp
in
lahf
jno
xlat
pop
testb
ret
lret
push
add
jp
and
test
mov
scas
aad
pop
sbb
xchg
test
xchg
adc
add
mov
push
sbb
sub
shll
jecxz
sbb
mov
stos
rcl
push
pop
mov
mov
or
out
mov
nop
xchg
lcall
int
ds
push
aam
push
shll
inc
xchg
into
pop
movsb
adc
clc
cwtl
shlb
out
or
sub
loop
push
xchg
popl
pop
cld
jmp
push
sbb
mov
and
repz
mov
xchg
jmp
fiadds
test
daa
or
out
inc
xchg
jecxz
mov
xchg
es
jl
mov
jbe
pop
push
es
cmp
divb
in
xchg
mov
push
in
adc
or
xchg
scas
push
int
xchg
sub
fistps
sub
mov
xlat
popf
mov
dec
xor
mov
jnp
push
stos
pop
and
inc
out
mov
sub
adc
icebp
repz
adc
scas
and
push
mov
adc
and
jmp
cltd
lea
sbb
add
dec
das
or
pushf
xorl
mov
push
jge
stos
xor
xchg
lret
repz
or
movsl
xor
sub
sbb
cli
dec
and
imul
pop
or
jns
fsubrp
outsl
sub
mov
int
pusha
cmp
addr16
pop
push
xchg
fsubrl
adc
xlat
test
sti
test
adc
test
mov
lahf
imul
stc
jno
movsb
sub
dec
cltd
aam
es
pushf
xchg
scas
cmpsl
repz
shlb
out
mov
mov
cld
and
ret
jno
pop
icebp
lods
and
jo
xlat
sti
cmpsb
add
into
mov
daa
xor
add
xchg
jae
rclb
out
mov
sbbb
xchg
and
les
lret
xlat
insl
xchg
mov
jb
mov
mov
push
nop
jbe
fcom
into
jno
leave
push
mov
cmc
dec
shlb
pmaxsw
mov
pop
test
roll
mov
mov
sub
fdiv
outsb
mov
fsts
mov
fsubrl
scas
mov
dec
or
mov
lret
jl
dec
fbstp
mov
aam
call
or
fiadds
fwait
adc
push
mov
int3
cmp
adc
cmpsl
dec
and
sarl
inc
xor
dec
test
jmp
push
insb
test
push
fisttpll
jbe
and
mov
add
in
xchg
sbb
jne
in
loopne
push
lret
add
leave
xor
lea
mov
data16
inc
adc
jecxz
xor
rol
rcrb
insb
add
sub
daa
inc
push
and
int
outsb
inc
out
test
stos
push
ret
dec
repz
xor
mov
pop
pop
jnp
mov
in
cwtl
add
stos
jb
nop
pop
push
out
in
push
mov
sub
sti
loope
int3
adc
mov
jp
cmpsb
cmpsl
jge
les
in
jge
rclb
xor
xchg
lods
and
adc
pop
movsl
mov
mov
data16
mov
or
out
stos
lret
add
xchg
stos
inc
cmp
jg
and
xlat
clc
jo
test
lahf
add
rcrl
lahf
ja
or
xlat
sbb
jae
jns
inc
or
or
add
cmpsl
push
in
jp
lea
shlb
int3
enter
pop
lods
rcl
js
clc
lahf
pop
or
bound
mov
sbb
rolb
repz
sarl
xchg
sbb
ret
cmc
add
cmc
cmp
sbb
repnz
aaa
ror
cs
jae
test
sbb
sbb
and
int3
sarb
shrl
daa
insl
ds
pusha
insl
push
adc
xchg
jmp
in
and
in
mov
inc
sub
call
out
dec
dec
and
sahf
insb
dec
mov
mov
dec
shrl
out
sti
rcrl
bound
cmp
mov
cmpsb
addr16
jmp
ja
or
test
sar
push
lcall
pop
mov
loop
jl
inc
add
push
and
jp
test
es
adc
or
stc
insb
rcr
jne
push
stc
pop
scas
dec
imul
mov
xchg
sbb
fs
test
outsb
out
bound
scas
xchg
insl
je
pop
cmp
gs
dec
scas
addr16
je
fmull
mov
mov
inc
cmc
jle
int
push
jns
fcoms
mov
insb
fucomi
cmp
pusha
sbb
sbb
sbb
sub
mov
ss
mov
mov
idivl
xor
ljmp
or
mov
sub
divl
dec
dec
jo
popa
test
sbb
lcall
ljmp
ret
add
adc
adc
jg
cli
mov
mov
les
and
int3
lcall
ljmp
mov
mov
jns
test
push
inc
sarb
dec
pushf
cs
ljmp
mov
lods
in
mov
pop
cmp
shrb
and
pop
add
sub
movsb
inc
adc
cs
jne
cmp
xor
inc
sbb
in
sar
add
lahf
inc
xchg
adcl
jo
loope
cmpsb
mov
mov
je
lcall
adc
data16
mov
add
jne
jmp
imul
ucomiss
repnz
popa
arpl
push
jbe
das
or
jmp
mov
movsl
outsl
fisubrs
sub
loope
not
addr16
addb
data16
es
sub
pop
fsts
incb
popf
pushf
pushf
outsb
pop
call
insb
or
stos
ja
sub
cmp
cmp
jnp
mov
inc
jecxz
xchg
add
mov
mov
fcmovne
push
addr16
call
inc
out
stos
mov
push
movsb
pushf
daa
add
lret
jecxz
dec
fst
cmpsl
in
dec
scas
push
mov
adc
cmp
out
xchg
xor
sbbb
cmpl
or
dec
cli
cmpsl
cld
jb
push
and
dec
push
cmpsb
push
push
iret
dec
dec
mov
fidivrs
ret
mov
sti
dec
mov
sbb
js
push
mov
inc
sti
movl
int
push
and
out
scas
adc
mov
xchg
rcll
xchg
dec
jmp
inc
xor
std
sbb
hlt
xchg
and
pop
repnz
lods
aad
xor
mov
mov
jmp
das
xor
out
movsl
jl,pt
flds
scas
mov
xchg
in
popa
aas
movsb
pusha
popf
movsl
add
xor
lods
mov
xchg
mov
dec
sbb
in
in
jbe
pop
adc
fwait
sbb
rcrb
fwait
mov
loope
inc
out
jp
rcrl
icebp
mov
mov
adc
fnclex
loopne
mov
orl
sbb
ss
dec
arpl
push
shll
mov
push
jp
jmp
fstpl
jbe
or
mov
and
iret
enter
sahf
adc
jp
sbb
and
jmp
flds
inc
inc
mov
and
sub
fistpll
jnp
enter
xchg
pop
sbb
cmpb
icebp
shlb
and
dec
test
rcrl
enter
adcb
movsb
push
inc
jp
fcmovnbe
or
outsb
xchg
scas
movsb
pop
and
pop
ret
sahf
fcoms
fidivrl
ss
add
sbb
fwait
cmpsl
cmp
imul
pop
sbb
shlb
cltd
std
dec
aaa
pop
mov
jns
std
aam
out
movsb
xor
sub
push
imul
lods
fs
lock
scas
xlat
aaa
mov
mov
js
out
or
jg
adc
sub
jg
dec
dec
mov
dec
cwtl
in
push
repz
pop
in
aam
or
xor
mov
or
jb
stc
iret
sarl
sub
pop
outsb
test
jae
stos
add
inc
stos
mov
cmp
fistps
jbe
popf
lods
push
push
pop
jb
mov
ret
imul
out
loope
rcll
inc
loopne
mov
sbb
cli
shll
fiadds
cld
xchg
lds
in
in
movsb
mov
lret
icebp
cmp
or
mov
and
or
mov
mov
outsb
xor
fcompl
stos
lahf
mov
clc
and
xor
icebp
cwtl
out
mov
out
scas
notl
popf
inc
xchg
inc
jl
ljmp
xchg
push
pushf
xor
xor
js
push
mov
ret
mov
test
or
mov
xchg
jbe
lods
mov
ss
call
out
lahf
mov
lods
insb
cmc
push
xor
push
pop
sarb
xchg
inc
cmpsb
fildll
sub
add
gs
imul
out
aas
jl
dec
hlt
xchg
addl
mov
pushf
adc
sub
mov
mov
push
cltd
ret
dec
add
std
js
xchg
xchg
push
cs
sbb
fsub
cmp
pop
rorb
mov
dec
adc
inc
dec
fidivs
dec
stos
push
cmp
jne
lret
mov
sbb
mov
jecxz
xchg
mov
mov
or
mov
pop
push
or
ss
jle
add
ret
add
andb
in
add
mov
call
jg
fwait
popl
push
add
or
mov
pop
or
jb
jo
jo
leave
outsl
mov
iret
pushf
mov
mov
out
fistps
mov
push
out
movsw
xchg
clc
ja
mov
add
daa
mov
and
xor
jo
xchg
cmpb
mov
and
clc
into
and
addr16
adc
mov
sub
fisubrs
mov
sub
stos
fisubl
xchg
ror
fiadds
mov
and
imul
and
popa
ljmp
lds
cmpsb
cmp
cmp
cmc
add
push
pop
test
popf
hlt
pop
push
xchg
cmp
stc
sbb
dec
add
stos
fwait
pop
mov
add
xor
in
dec
mov
push
into
jg
jp
repz
test
cmc
icebp
outsl
add
inc
xor
push
pop
sub
pop
dec
decl
cwtl
imul
divb
jmp
lcall
inc
sub
iret
jo
push
es
push
jne
xchg
dec
out
shrb
aam
mov
push
or
cmc
cmc
inc
push
fidivs
mov
lcall
fiadds
cmpsl
test
mov
jle
inc
mov
jns
call
out
jne
xor
jmp
cmp
add
cmp
outsl
fldt
sbb
jb
sub
pop
bnd
jbe
mov
push
loopne
cmp
push
out
jo
adc
xor
jmp
pop
and
dec
scas
lret
adc
das
jle
push
ret
and
xor
push
dec
jecxz
push
hlt
aam
mov
filds
dec
arpl
mov
inc
mov
cmp
fs
test
test
or
sahf
pop
inc
cmp
mov
lret
mov
fisubrl
jecxz
xor
add
push
inc
repnz
sub
push
push
mov
outsb
pop
dec
jbe
dec
dec
mov
jp
dec
nop
jle
movb
or
and
mov
jg
shr
dec
jne
test
pop
icebp
pop
inc
jbe
pop
sti
and
rcrb
outsl
pop
jecxz
lcall
jnp
push
mov
add
flds
xchg
mov
or
dec
imul
sbb
add
popf
les
cmp
push
fidivs
lcall
int
lret
je
mov
mov
aam
and
test
xor
idiv
fcmovnb
adc
lock
stc
add
testl
fistpll
fnstcw
loopne
push
cltd
push
test
arpl
or
popa
mov
aad
cld
sti
out
pop
movsb
call
jle
pop
addr16
add
bound
jge
add
mov
mov
movsl
inc
lds
popf
and
xor
leave
pop
sarb
outsl
jecxz
push
fsubrl
fwait
push
sbbb
cmp
jnp
sbb
cmp
add
js
mov
xchg
movsb
mov
mov
push
jl
add
lds
fsin
fldenv
xor
mov
cmpsl
add
mov
cmp
pop
mov
and
movsb
loope
xor
mov
or
dec
xchg
adc
jns
inc
je
cli
loope
cmpsb
xchg
ja
add
ja
nop
cmp
fwait
adc
and
sbb
ja
fsubp
in
lcall
push
int3
lock
pop
mov
les
or
cli
test
lret
test
cwtl
sbb
jbe
jl
out
jbe
and
out
pop
loope
and
cmp
mov
test
jecxz
cmp
sahf
in
mov
mov
addr16
xor
or
mov
lcall
enter
pop
push
cltd
adc
push
fmul
loopne
loope
dec
pop
cli
or
xchg
inc
fwait
inc
lock
mov
nop
lea
fistl
sub
out
sub
jbe
ret
pop
push
push
and
out
pop
sti
or
loopne
stos
push
shr
rorb
jl
mov
sub
imul
inc
test
mov
loopne
sbb
pop
test
nop
mov
mov
add
jnp
jge
rolb
xchg
std
ror
ja
lret
push
imul
jo
inc
or
into
xor
dec
mov
mov
movsb
sahf
and
dec
pop
xor
jbe
shlb
sbb
xchg
or
dec
inc
mov
cmp
lcall
cmp
cltd
std
or
xchg
mov
popf
repz
rcl
addb
xlat
in
xor
nop
imulb
cmpl
outsb
inc
cmp
aad
ficoml
inc
dec
fcoms
rcrb
pop
pop
jmp
inc
stos
xor
cs
addr16
ret
scas
shl
pop
orb
or
dec
shrb
cli
sahf
rclb
xor
xor
ret
das
rolb
mov
div
push
mov
add
clc
mov
popa
imul
pop
xchg
push
out
sub
stos
frndint
xchg
scas
mov
adc
jge
add
xchg
ds
dec
jecxz
dec
ds
mov
push
xlat
fcomps
or
popf
leave
push
cmc
sbb
in
and
push
lahf
pop
in
jnp
adc
dec
inc
cmpsl
xchg
lret
fildll
adc
xchg
jb
ret
mov
insb
das
insl
jge
imul
dec
pop
gs
out
mov
sub
scas
roll
cld
loope
pop
dec
xor
xchg
push
sbb
sub
push
jl
inc
pop
dec
dec
pop
test
int
dec
pop
popf
xor
mov
fdivrl
push
std
and
jne
and
mov
pop
ljmp
adc
push
push
js
mov
jbe
sbb
fcomip
jae
and
outsl
ljmp
ljmp
mov
pop
jmp
sbb
lcall
push
cltd
imul
rorb
lret
aaa
stc
push
mov
insl
pop
and
sti
jbe
push
rcl
fildll
jnp
repnz
jae
int3
and
shrl
fdivrs
ror
xchg
mov
jl
jnp
sbbb
dec
lds
int
stos
rorb
ja
mov
mov
and
aad
xor
jmp
insb
add
jae
inc
mov
mov
pusha
sub
or
lods
push
mov
imul
push
iret
mov
movsb
sub
or
out
mov
sbb
lods
cmp
xlat
insb
push
aas
das
fisubrl
mov
adc
test
adc
cmp
jge
ret
fidivs
xor
sub
nop
xchg
xor
jmp
lahf
lret
aam
xor
and
add
pop
out
xor
xchg
sub
and
mov
sahf
movsl
cmpsb
ret
dec
rcrb
xchg
loope
data16
xchg
movsl
sub
push
jmp
pop
imulb
xchg
fadds
dec
jne
jecxz
push
and
mov
fnstsw
sub
in
and
test
cmc
pop
pop
mov
and
xchg
and
add
jmp
aaa
insl
lret
ds
imul
add
nop
mov
xor
lods
aam
pop
fstpt
jp
pop
fcomip
jp
fcompl
jnp
push
cli
sahf
nopl
rorb
popf
pop
ss
leave
dec
int3
sub
cmp
iret
xlat
adc
pop
shrl
sbb
jl
insb
xchg
out
and
mov
xor
cmpl
pop
jo
es
push
repz
xchg
or
jle
or
nop
jnp
mov
inc
add
outsl
shrb
cwtl
dec
ret
mov
repz
test
inc
adc
push
shlb
xor
add
in
xchg
add
jne
inc
shlb
xchg
xchg
inc
mov
xor
or
fimuls
jb
fisttps
imul
inc
jge
stos
outsb
ja
aad
ficoms
xchg
ror
test
imul
pop
sbb
sahf
in
and
or
xor
out
dec
mov
arpl
push
mov
es
push
lods
leave
mov
aas
in
fwait
popa
push
stc
cltd
push
cld
lds
jmp
inc
mov
inc
xchg
sub
add
xlat
sbb
out
sub
adc
sub
sub
adc
bound
xchg
xor
scas
adc
xchg
fwait
xchg
int
pop
ljmp
repnz
dec
cmp
dec
add
inc
aad
loopne
fimuls
xlat
pop
movsl
je
xlat
das
mov
sahf
push
test
inc
subl
mov
dec
mov
cmpsl
jae
decb
xor
mov
jne
enter
mov
pop
stos
pop
dec
sti
mov
adc
xlat
mov
mov
or
xchg
ds
movsl
ss
mov
push
cmpsl
mov
inc
and
jns
and
pop
idiv
push
fucomp
das
jno
pop
ret
aaa
cmp
xlat
in
popa
dec
nop
adc
jnp
mov
jg
pop
test
sbbl
push
ret
icebp
sub
xlat
add
jno
cli
push
mov
aaa
mov
dec
cmp
les
lock
icebp
adc
push
sbb
and
shlb
test
and
dec
lret
mov
push
pop
push
sub
and
inc
mov
mov
addb
lahf
jno
add
test
stos
in
add
pop
call
pop
adc
je
cmp
push
in
jg
icebp
std
and
cmp
mov
sbb
fstpl
cmp
jne
or
loope
es
or
jge
jbe
test
push
imul
scas
fbld
cli
add
push
inc
mull
xchg
cmpsl
outsl
push
sbb
push
orb
pop
fistl
mov
out
inc
push
jnp
and
fstpl
and
mov
fstps
aad
lods
inc
bound
sub
clc
pop
bound
jmp
pop
rcrl
and
pop
mov
sub
in
xlat
inc
rcll
pop
gs
jns
mov
push
adc
roll
je
pop
adc
xchg
and
mov
lahf
dec
cmovs
std
push
addb
call
jp
pop
push
in
mov
popa
jmp
jl
cwtl
arpl
fs
pushf
test
mov
and
icebp
xchg
mov
icebp
sub
xchg
adcl
std
cmp
addr16
loope
test
inc
adc
push
pop
add
pop
push
mov
loope
adc
push
repnz
push
data16
mov
mov
int
sbb
adc
dec
xor
aam
sbb
stos
jle
jae
cltd
sub
xlat
xchg
xchg
push
sti
or
push
aaa
mov
pop
testb
dec
or
push
and
mov
dec
or
test
push
mov
int
sbb
mov
mov
and
dec
in
push
pushf
pop
add
sbb
push
sahf
negl
jge
mov
and
xor
adc
sbb
aaa
cmp
jge
test
inc
sub
xchg
inc
daa
sub
mov
fists
gs
ljmp
nop
repz
mov
pop
je
aad
and
xchg
mov
clc
test
repz
jbe
fdivrl
mov
int
popf
and
ja
lea
in
jp
push
in
mov
push
mov
aas
out
mov
push
inc
mov
rorl
shrl
fsubr
xchg
sbb
push
xchg
stc
dec
sub
and
cmp
ficoml
lret
xor
jbe
mov
in
fs
jno
lds
cmpsl
ffree
push
xor
pop
sub
push
in
xchg
fwait
mov
sub
imul
loope
mulb
mov
xchg
lret
adc
fistpll
add
push
mov
and
lods
xchg
mov
iret
xor
jbe
sub
fistl
xchg
add
adc
jo
repnz
jecxz
add
enter
push
sub
xchg
pop
mov
sti
scas
dec
outsl
mul
rorb
sub
sub
xchg
sub
mov
ja
rclb
push
xchg
mov
pop
in
sub
adc
sbbb
test
cwtl
xchg
cmp
fisttps
sub
loop
mov
push
cmp
xor
sub
sbb
push
int3
xor
or
loop
jne
push
mov
or
mov
ret
fwait
xchg
pop
dec
xchg
pop
data16
mov
inc
leave
pop
dec
scas
xchg
lock
mov
fnsave
and
jmp
jns
mov
leave
xchg
add
jns
adc
scas
xchg
lds
push
mov
daa
loop
hlt
icebp
and
fistpl
inc
shl
int3
ss
rcr
mov
pop
xchg
decl
jl
leave
xor
dec
fmull
aad
pop
xor
mov
adc
out
cmp
sbb
fdivs
and
dec
dec
lret
std
dec
add
test
push
jp
jae
pop
jnp
jg
sti
inc
test
push
lcall
fsubl
push
leave
shlb
push
jae
loopne
rcrl
dec
dec
ret
sti
inc
dec
xchg
stc
fs
jno
jae
xor
pop
dec
xchg
sahf
and
dec
push
mov
loop
lods
jb
push
or
add
into
xor
lea
pop
and
push
jo
fisubrl
xlat
sbb
dec
add
jg
leave
fisubl
mov
pusha
xor
dec
xor
or
pop
orb
jg
mov
cwtl
cwtl
fs
ret
pop
repz
stos
scas
push
daa
push
and
ss
ss
cld
mov
lahf
mov
out
popa
mov
sti
mov
mov
mov
adc
or
aas
push
mov
outsb
fxch
sub
and
pop
std
sbb
sbb
push
and
dec
mov
jo
imul
aaa
cld
mov
jle
fcoms
sbb
xor
test
inc
cmpsb
jecxz
add
loope
cmpsb
cmp
jmp
add
imulb
xchg
xchg
xorb
dec
lock
sbb
pusha
aad
push
mov
xchg
test
mov
mov
xchg
and
fucom
xlat
push
mov
iret
mov
xchg
in
mov
xchg
shlb
aas
aas
xchg
sub
sahf
lcall
push
sti
outsb
and
cltd
jge
shlb
and
jbe
mov
pop
or
jno
mov
xor
cmp
repz
fcoms
sbb
lods
mov
push
cmpsb
pop
pushf
loope
push
push
xlat
xchg
mov
fdivrp
push
in
repnz
test
ret
popf
stos
xor
aaa
ds
imul
or
add
fcoml
push
stos
cltd
mov
adc
insl
or
aas
std
in
movsl
pop
pushf
xchg
ljmp
pop
mov
fwait
test
xchg
sub
aam
mov
cmpl
pop
test
leave
inc
rcll
ss
and
push
pop
add
or
xlat
leave
xor
add
lods
sbb
in
push
jmp
cmp
pop
leave
rol
nop
insb
push
jmp
or
mov
mov
pop
mov
cmp
add
out
sbb
mull
inc
hlt
sti
mov
ret
push
and
mov
xor
xchg
fbld
sbb
mov
or
mov
mov
mov
sub
add
add
in
daa
xor
cmp
jae
insb
test
inc
scas
push
das
jg
loop
cmp
js
jno
push
pop
fs
in
push
mov
dec
pop
mov
cwtl
push
sbb
xor
mov
hlt
cmp
loopne
push
negb
inc
test
mov
loopne
mov
cmpsl
out
and
imul
jge
data16
cmc
mov
lock
push
mov
xchg
xchg
pop
add
add
sbb
sbb
ja
adc
movsl
clc
mov
fmull
enter
addr16
cmc
out
push
sub
aam
pop
mov
jge
mov
pop
xchg
sub
mov
call
pop
jge
mov
frstor
mov
jbe
shrl
aam
adc
mov
cmp
sti
ss
xchg
dec
sti
loope
int3
inc
xorb
push
jne
rcrb
add
pop
mov
fldl2e
mov
mov
and
mov
sbb
pop
sub
pcmpeqw
ljmp
jmp
in
stc
push
lret
cmp
xchg
arpl
or
cwtl
or
movsb
ret
mov
clc
jecxz
push
jne
add
loopne
and
ficompl
jno
jns
sbb
push
inc
jno
fidivl
insb
aam
mov
div
clc
popl
mov
roll
jmp
mov
pop
jne
mov
pop
add
and
fmull
or
adc
pop
mov
xchg
loopne
fistps
mov
xlat
into
sub
xor
sahf
jmp
ja
clc
pop
imull
xor
mov
stos
or
sub
pop
mov
pop
jp
cmpsl
rcrb
stos
insl
xor
jbe
sbb
int3
xlat
push
xchg
jne
mov
cs
in
pusha
pop
lahf
das
cmp
scas
lds
pushf
mov
cmp
inc
jge
outsl
dec
xor
or
lods
push
lods
sbb
sbbl
xor
add
xor
inc
popf
mov
clc
sub
rcrb
cmpsb
imul
mov
sahf
cmp
bound
pop
stc
call
sub
add
pop
gs
push
fstl
jge
jo
inc
nop
outsl
lea
dec
or
iret
lods
fcompl
cmpsl
popa
icebp
sbb
imul
ss
mov
cmpsl
mov
sbb
and
jo
pop
xchg
cmpsb
sub
mov
repnz
shl
push
pop
fwait
aas
sub
movl
int3
arpl
cmp
xchg
mov
cmpl
xor
dec
js
cltd
bound
cmp
pop
or
call
mov
decb
add
loopne
imul
mov
cmpb
cwtl
lret
or
and
xchg
add
jns
fcomps
addl
test
or
push
pop
push
xchg
in
sahf
cmp
push
mov
dec
stos
je
cmp
jge
cmc
rorb
sub
aad
add
pop
cmpsb
cld
push
inc
xor
push
mov
sbb
pop
inc
mov
mov
fs
gs
outsb
push
mov
dec
mov
loope
cmpsb
scas
negl
cmp
inc
pop
xchg
loopne
mov
popf
push
xchg
imul
hlt
xor
mov
fs
xchg
sbb
ficomps
adc
shll
sub
and
xchg
rcrb
xlat
adcb
pushf
jg
clc
jg
xlat
mov
movups
test
mov
cmp
int
outsl
cs
rclb
add
xor
sarl
mov
pop
jecxz
repz
push
out
shl
mov
lret
push
hlt
sub
mov
inc
jle
or
or
xchg
outsl
xchg
stos
insb
and
mov
icebp
lods
mov
ficomps
mov
movsl
into
jae
xchg
cmpsb
jns
push
jg
loopne
xchg
lret
xchg
pushf
popa
or
je
lods
cwtl
push
sti
imul
inc
dec
js
ficoms
fisubl
ret
mov
fucomp
ffreep
lret
sti
clc
je
iret
sub
ret
xchg
and
fs
cmp
cmp
dec
mov
stos
popa
adc
jmp
js
xlat
mov
rcl
je
mov
sbb
mov
fsts
test
test
push
pop
sbb
enter
jnp
rcll
add
inc
inc
push
xchg
lcall
cld
push
lock
repnz
jo
leave
xchg
repnz
push
mov
pop
fldcw
mov
and
lods
dec
int
push
cmpsl
insl
cmpsb
jecxz
cmp
xchg
mov
dec
dec
imul
ret
fsubs
push
fsubp
out
push
fcompl
jb
pop
insl
outsl
jne
out
dec
repz
popf
pop
sbb
scas
icebp
bound
pop
sbb
lret
leave
pop
lcall
cs
fwait
loopne
sbb
cmp
mov
mov
lock
nop
iret
out
js
jnp
mov
jns
and
push
push
inc
mov
test
adc
mov
out
mov
xor
mov
xchg
ja
scas
xchg
mov
dec
sbb
rcr
je
enter
movsb
aad
inc
and
jb
xchg
ror
dec
or
inc
cmpl
imul
xor
movsb
or
jg
sbb
sub
stos
and
cs
sub
loop
stc
js
out
sub
pop
aaa
inc
jp
pop
scas
and
shll
ja
call
adc
pop
xor
xor
ds
adc
cmp
iret
sub
cmpsl
repz
scas
lcall
cld
inc
sub
sahf
adc
inc
scas
or
mov
jecxz
testb
mov
cltd
sub
and
dec
fs
mov
fimull
and
inc
sahf
jmp
adc
dec
js
pop
xor
dec
testb
and
jae
ffree
or
in
sbbl
inc
fs
lock
ljmp
ds
mov
mov
mov
fstpl
add
cmp
in
dec
push
jmp
push
push
mov
pop
mov
pop
cwtl
fs
jne
mov
push
pop
adc
pop
mov
cmp
and
popf
mov
cmp
int3
jb
jb
xchg
loopne
xchg
or
dec
popf
test
data16
or
lea
pop
mov
dec
adc
dec
mov
xchg
flds
dec
adc
mov
sub
ja
mov
mov
int3
push
aam
cmp
je
xchg
out
xor
sbb
mov
mov
ret
and
sti
cmp
mov
imul
clc
loope
lcall
add
shll
fsubl
mov
adc
push
dec
jmp
ljmp
into
inc
imul
aam
inc
mov
in
imul
fucomi
push
xchg
mov
xchg
leave
jne
pop
push
icebp
je
push
sub
int3
dec
inc
insb
mov
adc
jnp
inc
pop
es
cmp
in
test
mov
mov
lods
dec
push
inc
push
lahf
jno
ret
outsb
testb
push
test
sbb
mov
enter
aas
out
dec
sbb
hlt
push
pop
lock
jae
xor
pop
pop
ret
lahf
sbb
sbb
mov
int
mov
xchg
pop
pop
mov
mov
inc
jecxz
aas
dec
outsb
xorb
add
ret
pop
imul
fmull
xchg
cmp
std
test
sarb
pushf
cmp
js
mov
scas
sub
inc
fadds
mov
lock
loop
mov
test
icebp
jle
lods
pushf
testb
mov
inc
cmpsl
rclb
out
js
mov
arpl
mov
pop
push
mov
jo
mov
inc
sbb
xchg
jo
orl
adc
call
and
pop
mov
shlb
xchg
fdivrl
ja,pt
xchg
in
and
sbb
xchg
out
sbb
sahf
outsl
out
int3
xchg
popf
and
cmp
es
jnp
xorl
xlat
int
cmpsb
lock
jmp
cwtl
mov
and
xchg
outsb
push
stos
hlt
adcl
or
faddl
sbb
xchg
sbb
shrb
push
js
inc
daa
mov
or
xor
data16
in
sub
into
cwtl
das
popa
and
inc
movsb
dec
adc
and
in
fbld
push
in
cs
xor
jmp
add
dec
mov
add
push
addr16
lock
mov
call
xchg
imul
jns
test
daa
and
mov
pop
int3
or
repz
sbb
push
xchg
stc
pop
push
push
inc
out
mov
cmc
rcll
cmp
mov
insl
jo
iret
mov
mov
test
mov
mov
push
not
mov
mov
imul
data16
xchg
repz
bound
pop
fsubrl
pop
subb
push
cmpsl
insl
addr16
pop
xchg
das
adc
or
adc
rcr
mov
inc
call
movsb
test
mov
rcrb
cltd
dec
ljmp
cmpsl
outsb
or
dec
cmpb
fisubrl
pop
ret
or
mov
sbb
out
bound
jne
js
inc
stos
jge
pop
mov
cmpsl
idivl
pop
mov
sahf
push
jmp
inc
cmc
cmc
adc
xor
xchg
and
xchg
arpl
nop
jmp
clc
lea
sbb
mov
test
mov
mov
sub
jno
sbbl
xor
fmull
mov
push
push
lret
push
dec
std
jno
std
add
cmp
cld
enter
sti
js
mov
les
cmp
and
aad
dec
adc
int
or
insl
cmp
or
push
aam
sub
pop
inc
push
hlt
push
dec
or
xor
std
pop
lret
hlt
call
ret
inc
mov
icebp
xchg
shl
pop
adc
adc
loope
pop
and
out
or
mov
mov
lds
inc
mov
mov
jns
mov
stos
inc
adc
dec
adc
fistpll
xchg
dec
mov
mov
gs
lea
cwtl
mov
and
sbb
mov
or
pop
movsb
scas
faddl
repnz
sarb
xchg
arpl
sbb
jns
sti
mov
xor
pop
inc
adc
stos
jecxz
lds
push
mov
adc
xchg
jns
pop
imul
mov
mov
jg
jge
push
xchg
fisubl
jnp
add
sbb
mov
xchg
cmc
add
fs
ljmp
add
ljmp
jnp
dec
add
push
int3
pop
and
es
push
shr
mov
inc
mov
test
xchg
sbb
outsl
in
or
lcall
sbb
popf
test
lds
inc
out
adc
adc
pop
cs
imul
aam
inc
mov
xchg
pop
xlat
nop
mov
adc
rorl
push
outsb
xchg
and
movsl
out
push
mov
test
cmp
sbb
std
adc
pop
inc
and
out
and
lret
pop
je
ret
inc
dec
cld
int
add
add
xorb
addb
fildl
fadd
mov
bound
lea
inc
fwait
mov
loope
or
and
cmp
aaa
je
and
mov
xchg
mov
into
aad
ret
test
or
lock
xchg
mov
add
pop
repz
pop
and
fcmovu
xchg
notb
and
sbb
cmp
ficompl
fucom
std
mov
cmc
dec
hlt
mov
sbb
dec
mov
int3
fsubrs
call
mov
or
lock
imul
stc
sub
xchg
arpl
xchg
repz
pop
jno
in
idiv
add
faddl
je
test
mov
scas
dec
inc
sbb
lcall
int
pop
inc
push
pop
imul
insb
cmp
mov
add
clc
and
mov
aaa
pop
cmp
sub
mov
mov
pop
mov
ja
stc
sbb
sub
stos
dec
jg
sbb
pop
outsb
and
push
push
in
sub
pushf
sub
ret
sub
loope,pn
lret
sub
int3
fiaddl
mov
inc
push
loopne
dec
mov
addr16
pusha
test
in
clc
sahf
into
inc
inc
add
lea
out
jb
adc
cmpsl
mov
or
jno
push
jb
out
mov
push
nop
pushf
jge
ficomps
lods
repnz
iret
dec
add
and
sarl
aad
out
push
rclb
sbb
pop
lret
in
sbb
and
insl
xor
sub
mov
addr16
adc
fcomip
test
jbe
aam
pop
inc
testl
cli
jmp
jmp
and
popa
out
movd
xchg
out
mov
xchg
mov
call
or
mov
popa
or
sub
pop
pop
cmpsl
xor
adc
and
dec
repnz
jecxz
mov
push
adc
insl
movsl
movsb
scas
adc
and
or
bound
or
int3
je
out
iret
fists
dec
lock
icebp
in
jmp
outsl
addb
fimull
or
pusha
shlb
stc
sub
cmp
outsb
push
nop
movsl
cmp
push
pusha
nop
out
test
sti
cwtl
arpl
test
scas
and
lea
and
and
push
xor
loopne
xor
cli
ss
popf
arpl
push
mov
out
jno
iret
add
inc
xor
push
rclb
addr16
xlat
subl
daa
ja
mov
std
fidivrl
cmp
aas
fwait
in
ss
nop
arpl
pop
add
test
push
add
test
mov
imul
out
xlat
iret
sub
push
loope
sti
fiaddl
je
add
test
imul
in
test
jmp
mov
js
int3
add
xchg
inc
faddl
andb
hlt
mov
or
cmc
push
data16
jno
das
jns
dec
sbb
jnp
popa
jle
scas
xorl
inc
and
out
mov
dec
cmp
outsl
inc
or
dec
push
in
lcall
inc
mov
fldenv
sbb
mov
sub
and
jecxz
mov
mov
pusha
mov
jge
xchg
sub
xlat
test
cmp
pop
popa
push
scas
or
xor
sbb
mov
mov
movsb
jae
out
mov
dec
push
insb
cltd
pop
xlat
dec
xchg
xchg
adc
mov
iret
cmp
inc
fnsave
ja
and
jae
cwtl
xor
mov
mov
jle
pop
jo
cmp
test
mov
cs
mov
mov
add
mov
jnp
lret
es
xchg
ds
rclb
sarb
mov
sbb
ds
fwait
ret
add
sub
mov
shl
ret
jle
xchg
push
pop
mov
push
filds
mov
into
jmp
inc
and
mov
mov
mov
fcmovnu
jnp
stos
test
mov
mov
sub
push
sub
inc
stos
pop
shl
push
cmp
shr
imul
addr16
and
or
dec
push
jmp
jae,pn
mov
cmp
xchg
xchg
sub
pop
or
sbb
mov
repnz
sbb
xchg
xchg
imulb
iret
dec
test
in
test
dec
mov
ret
inc
mov
push
cmp
mov
cmpb
xchg
lcall
loop
xchg
sbb
sub
xlat
mov
call
and
imull
mov
mov
mov
loopne
jno
lds
dec
outsb
arpl
xlat
cmp
dec
imul
add
dec
cmc
or
fwait
inc
add
xchg
pop
adc
mov
mov
or
mov
jmp
iret
xchg
push
hlt
inc
cmp
mov
inc
popf
sub
imul
jae
test
outsb
ds
icebp
cmp
aam
enter
push
lcall
mov
clc
ljmp
subl
jns
inc
and
std
sbb
add
mov
xchg
cmpsb
or
lods
les
test
push
insb
xor
cltd
push
repnz
leave
bound
jnp
sbb
scas
cld
rorl
rolb
jg
adc
cmp
rorb
inc
cmp
rol
or
shl
lds
jle
das
or
dec
imul
andb
push
sar
sub
fs
add
ja
or
cmc
push
sbb
test
jb
jne
std
popa
stos
and
adc
and
push
into
push
mov
ss
ljmp
rclb
jae
jecxz
pushf
sub
ret
sub
push
mov
popf
cld
movsb
ret
push
mov
cmpsb
cmpb
jns
pop
std
pop
jg
xchg
mov
add
dec
je
pop
cmp
xchg
out
test
or
jmp
fdivrl
dec
sub
or
inc
stc
mov
dec
imul
mov
fs
jg
lods
xchg
das
insl
das
sub
inc
push
aaa
sub
xchg
mov
cmp
clc
mov
lock
out
adc
cmc
cmpsl
bound
setp
jae
jns
sti
sarb
movsl
test
nop
jp
pop
popf
scas
xor
mov
ja
fdivrl
loop
int
mov
in
mov
push
or
out
popa
in
pop
lock
xchg
dec
out
gs
and
dec
pop
sbb
mov
inc
and
bound
out
sbb
sbb
fs
test
pop
mov
cltd
xchg
sub
mov
cwtl
add
xchg
pop
mov
cmp
push
cld
xchg
add
mov
sub
shl
pop
mov
xchg
test
lcall
test
xchg
pushf
aas
ficompl
xor
adc
jo
hlt
pop
jge
popf
frndint
cs
push
mov
out
push
add
cwtl
jne
les
out
popf
mov
dec
push
jp
clc
pop
pop
add
mov
je
xchg
lock
pop
jmp
xchg
push
push
push
and
xor
out
push
lret
insb
mov
and
push
les
mull
jne
iret
cmc
int
mov
mov
xor
test
arpl
lea
out
fwait
inc
je
ret
addr16
pop
mov
push
lss
push
jge
dec
nop
std
cwtl
mov
es
cmovg
scas
jecxz
std
pop
jo
mov
int
xor
sub
jnp
sti
imulb
dec
repz
lock
jne
adc
into
jns
push
repz
repz
sbb
add
pop
test
pop
mov
add
xchg
rolb
push
sbbl
push
popf
inc
xlat
cli
ret
push
aad
divb
or
xor
cmp
dec
mov
push
pop
sbb
xchg
out
jne
push
xchg
jo
pop
pop
mov
decb
jmp
pop
sahf
dec
pusha
push
mov
mov
adc
popa
xchg
and
out
lret
dec
mov
fimull
jne
sub
cs
cmp
stos
sbb
sub
repnz
pop
or
loope
insl
pop
pop
repz
push
sarb
sbb
in
aam
call
adc
pop
addr16
jb
inc
fcompl
es
push
pop
imul
sub
push
push
data16
pop
insl
xchg
enter
cmpsb
add
pop
jle
jns
sahf
and
push
hlt
out
lock
jl
push
or
cmp
adc
scas
pop
jbe
cmpsb
jb
cmp
es
inc
shl
arpl
mov
push
and
sub
xor
ficoml
sub
addr16
les
xchg
jle
push
sarb
xchg
lock
sti
out
loopne
out
fwait
cmp
jl
jge
cmp
sub
pop
andb
dec
and
add
dec
dec
lahf
push
mov
movl
mov
push
or
mov
shll
mov
cli
mov
push
psubusb
push
cmc
or
test
subl
int
scas
cmc
mov
jno
dec
jns
sarl
mov
add
jle
lret
push
pop
dec
sub
out
add
mov
cltd
adc
pop
test
imul
lret
pop
imul
or
jne
es
data16
push
jno
repz
mov
pmullw
leave
lods
jg
jbe
jmp
mov
adcb
cli
insl
pop
into
out
jle
xlat
xchg
movsb
push
sub
inc
aas
movsb
pop
pop
xor
xlat
push
lahf
xchg
fcomp
cmp
lret
pop
push
les
mov
out
mov
push
dec
mov
leave
push
cli
xorl
lods
scas
push
cmp
into
push
add
pop
rcl
loopne
xchg
addr16
inc
dec
cmp
loop
jmp
fmul
fdivp
stos
dec
mov
in
jmp
cli
xchg
cwtl
push
pop
mov
sub
and
mov
imul
push
sbb
fdivs
mov
jge
clc
add
mov
add
mov
push
mov
shl
sbb
shlb
push
mov
add
clc
push
add
push
call
dec
jb
pop
lock
jns,pt
sahf
mov
jns
inc
ret
les
scas
shl
cmc
pop
mov
cwtl
xchg
cld
es
mov
xor
push
or
pop
cli
xchg
loope
mov
lods
mov
mov
mov
add
add
inc
inc
jle
jno
dec
and
loope
fisubrl
dec
das
mov
cmpsl
or
mov
xchg
js
pop
sti
mov
stc
repnz
push
cmp
jns
ljmp
mov
mov
add
adc
push
pushf
jnp
jne
mov
or
push
popa
fildl
cmp
lds
js
dec
loope
fdivp
clc
imul
mov
jno
xchg
mov
shlb
or
ss
lret
inc
fimull
lods
push
in
cltd
inc
insb
sti
imul
push
and
add
push
add
scas
adc
mov
dec
imul
fistl
or
fnstcw
pop
jb
xchg
sbb
ret
dec
sub
jle
push
loope
inc
jl
push
popf
or
mov
iret
push
dec
jns
pop
mov
push
lds
fwait
add
push
mov
stos
dec
scas
dec
inc
jle
mov
xor
mov
sbb
cld
xor
addl
xor
aam
in
in
inc
subl
pop
add
pushf
sub
mov
js
mov
or
add
push
icebp
dec
enter
pop
test
mov
adc
mov
jmp
dec
mov
add
in
fcompl
cli
popl
test
inc
pop
fcmovnu
sbb
sub
mov
sahf
add
lds
push
xchg
ficoml
aaa
int
stc
jbe
adc
mov
sarb
cmp
movsb
and
stos
mov
sarl
xlat
dec
int
adc
icebp
into
bound
cmpsb
pop
mov
add
pop
add
mov
js
ret
cmpsb
addr16
pop
out
inc
sub
fwait
or
iret
push
jmp
adc
push
mov
mov
ret
cmp
incl
aam
mov
pop
adc
push
outsb
out
inc
adc
imul
xchg
cmpsl
ds
popa
lock
test
pushf
sub
test
lock
lea
jbe
sbb
and
mov
mov
adc
xchg
movsb
hlt
mov
loopne
mov
fldenv
gs
sti
mov
iret
or
std
lds
xchg
xchg
iret
mov
cltd
or
cmp
iret
jbe
mov
and
stos
mov
stos
mov
test
sbb
push
and
mov
mov
mov
mov
xor
aam
out
push
xor
sbb
mov
xchg
xchg
bound
jb
xchg
or
add
cmc
cmpb
xor
pushl
push
mov
pushf
inc
dec
mov
leave
push
rcll
arpl
jg
pop
arpl
mull
push
lods
adc
sbb
xorb
sbb
getsec
fdivp
and
dec
and
inc
jmp
mov
cli
dec
test
sub
mov
sub
sbb
pop
sti
inc
ficoms
mov
cmc
in
push
sub
lret
fiaddl
sbb
sub
sub
mov
lods
pushf
push
adc
cmp
xor
add
rcl
add
into
in
jo
push
notl
push
jge
leave
movsl
loopne
pop
jg
push
push
push
add
lods
sub
xchg
mov
and
pop
fiadds
nop
ljmp
into
push
ss
mov
push
and
add
pop
ret
es
xchg
imul
xchg
pop
aad
popa
mov
adc
mov
aaa
and
sub
test
call
daa
fnstcw
mov
jbe
icebp
sbb
and
lds
or
jp
xor
push
adcl
adc
cmp
or
and
out
jae
add
cmp
imul
insb
les
pop
xchg
cmp
ljmp
sbb
mov
or
push
adc
ret
jmp
jp
pop
jnp
test
cmp
sub
ljmp
mov
fsubrp
jecxz
fidivrl
jne
sub
push
inc
or
test
pop
or
les
fs
mov
sahf
loope
push
xlat
lret
sarb
push
adc
mov
adc
mov
jp
jnp
mov
xchg
call
and
mov
cltd
xor
mov
sbb
add
adc
mov
cs
outsb
cmpsl
xchg
hlt
or
push
lods
fisubs
scas
cmp
jo
xor
int3
idivl
jl
les
inc
add
cld
and
sub
sub
jbe
hlt
mov
mov
jbe
pop
mov
iret
mov
add
add
xor
jbe
cmp
out
shrb
pop
jne
xchg
out
je
repnz
jo
and
fldcw
inc
pop
iret
getsec
rcrb
fnsetpm(287
cmc
mov
sub
outsb
fisubl
clc
or
jnp
arpl
inc
xchg
aad
lods
cs
dec
mov
adcl
nop
in
sbb
mov
jae
sub
mov
lods
sbb
dec
xor
xchg
ljmp
or
mov
ss
dec
cmp
jnp
push
push
mov
test
sarb
cmp
mov
in
outsb
enter
test
lods
cmpsl
mov
and
push
dec
insb
lret
push
xor
iret
inc
push
sub
sub
mov
ds
sub
lret
xor
stc
inc
or
leave
dec
std
inc
mov
int3
rcrb
mov
ss
or
lret
dec
je
pop
inc
in
jecxz
push
sbb
mov
lods
cld
mov
xor
mov
setns
pop
mov
push
je
or
in
and
adc
ds
insl
leave
bound
mov
ds
data16
mov
insl
jo
adc
adc
adc
adc
pop
xchg
push
dec
lds
cmp
repnz
mov
push
imul
data16
push
dec
lahf
mov
sbb
xchg
adc
call
aam
aad
cmp
cmpb
dec
int3
iret
inc
inc
xor
std
sbb
stos
test
jl
add
ds
mov
mov
mov
hlt
lcall
sbb
fmuls
dec
mov
push
shrb
xor
dec
mov
push
dec
lret
pop
in
add
movsl
cmpsl
push
push
cli
sub
shr
mov
lahf
pop
inc
imul
pop
sbb
movb
mov
mov
subb
pop
sbbb
ss
jp
int
rorb
aad
pop
inc
push
test
loope
pop
lods
or
dec
pop
push
xchg
pop
dec
sbb
jp
and
mov
mov
push
push
mov
stc
mov
faddp
cltd
push
dec
int
sahf
stc
stos
and
gs
std
cmpsb
insl
or
xor
in
push
aam
sub
sbb
push
sub
outsl
or
jno
out
push
dec
clc
testl
xlat
test
int3
addl
stc
or
add
mov
sbb
or
push
and
push
je
sarb
mov
nop
fcomps
sarl
xchg
jg
add
fsts
mov
xchg
cmp
mov
inc
mov
push
popf
fmuls
sub
and
add
std
test
cmpsb
popa
out
ret
inc
xor
cltd
jecxz
test
cwtl
pusha
ljmp
xor
scas
int
lea
lods
jecxz
ficomps
popf
mov
imul
repnz
inc
mov
test
push
mov
xchg
mov
test
jnp
movsl
add
xor
ljmp
inc
loope
pop
ja
cmp
mov
or
mov
mov
push
sub
lods
ljmp
nop
add
dec
jne
rorl
popf
sbb
int3
mov
push
fwait
sub
dec
pop
mov
pop
in
dec
mov
adc
cli
data16
and
insl
or
fiaddl
mov
jnp
mov
jno
cmpl
xor
into
xor
mov
mov
loope
jno
outsl
mov
add
and
or
aad
add
or
sub
pop
adc
cmpsl
inc
lds
lcall
adc
cwtl
sbbb
add
dec
xor
jg
xchg
xchg
out
adc
xchg
or
jge
dec
push
icebp
mov
fwait
js
dec
popf
scas
imul
xchg
ret
xor
test
stc
dec
xchg
mov
pop
loopne
xlat
es
call
imul
rcrb
popa
sbb
popf
push
ret
pop
xchg
rorb
fimuls
enter
inc
sub
aaa
cwtl
lret
pop
or
xchg
adc
pop
dec
popa
mov
mov
fidivrs
rol
cltd
sbb
pop
mov
jp
inc
dec
mov
leave
rorb
pop
shlb
cld
jbe
ret
stc
inc
mov
out
insl
dec
in
cwtl
rcrl
mov
and
jge
mov
cmpsb
int
pop
inc
or
xchg
mov
rclb
sub
mov
cwtl
pop
aas
xor
inc
jnp
lcall
test
xchg
stos
and
rcl
inc
bts
pusha
mov
popf
into
cld
and
xor
mov
jecxz
or
push
cltd
add
sbb
sbb
mov
movsb
xor
jl,pt
mov
cmp
push
insl
frstor
jmp
jl
dec
cmp
out
push
cmpsl
and
cmc
js
push
in
repnz
scas
push
adc
addr16
push
cmpsb
add
xchg
jo
es
xchg
pop
xor
pop
sahf
nop
rcrl
scas
and
sub
dec
jae
subl
gs
pop
push
jns
fildll
mov
jb
xor
dec
data16
cs
sbb
rorb
and
xchg
test
daa
inc
neg
out
fiadds
dec
lahf
pop
iret
cwtl
cmpl
daa
sbb
mov
mov
jnp
add
inc
pop
dec
sti
movsb
aam
jl
add
mov
in
jo
xor
jb
jns
in
mov
jnp
call
mov
xchg
int
mov
mov
roll
jp
pop
mov
enter
and
mov
int3
and
scas
and
loop
inc
into
xchg
xchg
pop
push
mov
std
push
mov
imul
andl
lcall
ret
push
es
stc
push
xchg
cmpsl
or
faddp
mov
call
xchg
and
out
arpl
les
aas
push
das
xchg
xor
xchg
mov
jl
jmp
sbb
push
mov
stc
dec
test
pop
scas
push
test
iret
jnp
popa
stos
popa
push
mov
dec
rcl
jnp
dec
add
push
ficoms
xchg
inc
xorb
jae
pop
scas
hlt
hlt
out
jecxz
dec
push
jecxz
in
add
in
pop
in
pusha
pop
lock
mov
lods
lcall
sub
cmp
fidivl
psraw
sub
testl
cli
cmp
xchg
out
push
inc
inc
dec
cs
xchg
das
test
das
inc
pop
lahf
imul
mov
test
sub
pop
and
add
pop
jecxz
aas
mov
testl
mov
and
sbb
jp
icebp
outsl
mov
je
insb
std
pop
pop
ret
clc
dec
aad
sub
mov
mov
inc
int3
in
add
fdivrp
popf
incl
mov
or
jp
imul
cmc
xor
pop
mov
adc
js
shll
pop
stos
outsl
mov
sbb
call
pop
insb
xor
stos
sub
or
push
push
pop
dec
ret
in
pusha
add
push
mov
test
jno
into
mov
and
cmc
ljmp
jo
pop
push
xor
in
je
fnstsw
cld
pop
cmpsl
sti
push
sbb
insb
fxch
pop
loop
fiaddl
adc
pop
cmp
cmp
inc
test
xchg
sbb
jno
push
aas
scas
pop
sbb
push
out
push
shlb
add
add
cld
movsl
sti
cmp
lea
scas
inc
sbb
mov
movsb
cmc
mov
xchg
jge
adc
gs
cmp
dec
ja
in
sub
shll
test
les
adc
pushaw
fnstcw
mov
and
dec
daa
mov
or
jl
jno
jmp
pop
aas
out
scas
mov
daa
xor
push
inc
mov
fwait
lea
jl
mov
and
push
jp
jnp
jecxz
lcall
push
inc
xchg
cld
filds
or
js
mov
mov
insl
sahf
or
arpl
jmp
and
xchg
sti
add
pop
dec
insb
cmp
sub
jbe
loope
pop
or
popf
mov
push
clc
xchg
movsb
inc
cmpsl
gs
scas
jo
mov
mov
les
or
dec
lahf
stos
dec
dec
subl
and
jg
or
sar
mov
push
inc
pop
push
aam
pop
in
pop
or
push
xchg
lahf
xchg
push
shll
decl
into
mov
in
lret
lock
je
test
push
fcomps
jo
sub
les
fsubs
out
or
es
sub
push
push
decl
mov
nop
sbb
stos
mov
test
xor
push
out
jp
mov
mov
jno
mov
outsb
aam
mov
xchg
movl
pop
loopne
loope
es
and
sbb
pop
xlat
lea
jmp
imul
push
outsl
adc
and
hlt
sbb
in
pop
mov
aas
outsl
and
push
fwait
mov
push
adc
lods
jp
ljmp
fistpll
test
jg
mov
lcall
nop
out
add
out
dec
std
sbb
inc
pop
mulb
popf
adc
shrl
lock
cmc
mov
int3
pop
inc
mov
ss
adc
in
addl
add
stos
cwtl
and
add
fnstenv
cmp
jb
data16
adc
jbe
and
lods
dec
test
imul
pop
dec
mov
jae
cmp
test
or
and
testl
xchg
mov
cmp
pushl
sar
mov
scas
scas
cmc
test
push
dec
loopne
aad
into
mov
xchg
jmp
cld
jae
pushf
pop
sub
iret
in
stc
pushf
imul
push
divb
mov
fimull
out
xchg
and
mov
int3
adcl
icebp
and
fcmovnbe
test
sti
mov
mov
xchg
push
sarb
mov
outsb
push
xchg
and
jmp
iret
pop
insb
xchg
ja
hlt
movsb
fs
popa
iret
and
mov
rol
notb
cltd
push
fmul
xchg
in
inc
or
pop
icebp
pushf
out
pushf
dec
xchg
mov
jge
mov
cs
jp
adc
mov
push
sbb
add
cmp
dec
test
data16
inc
ret
mov
int
enter
mov
add
mov
dec
push
push
hlt
jo
inc
and
dec
js
lahf
cmp
pop
pop
cs
add
out
or
in
jl
push
in
iret
fdivrl
xor
out
cmp
jb
les
lds
orl
lods
idivl
js
out
cmp
add
lods
dec
test
and
push
inc
das
les
push
lcall
shl
cmpsb
add
or
lret
addb
add
xlat
out
mov
mov
xor
pop
and
sahf
loop
dec
repz
andl
call
lahf
cmp
push
adc
stos
mov
cmpsl
ret
sub
mov
call
inc
daa
pushf
in
sub
inc
push
hlt
and
cmp
das
lods
mov
lcall
roll
cmp
bound
xchg
lods
push
and
sub
in
inc
insl
adc
or
cmp
addr16
daa
lcall
popf
hlt
shll
and
sbb
and
cli
mov
cmpsb
ja
pop
popf
shlb
dec
push
stos
jo
push
fcoml
lahf
ret
rorb
cmp
cmp
movntps
scas
sub
add
jae
push
inc
add
xchg
je
xchg
push
shl
xchg
xor
rcl
dec
subl
xlat
pusha
inc
pusha
lret
adc
cli
xlat
shr
and
pop
mov
inc
mov
icebp
dec
push
in
jbe
int
fistpl
aad
add
push
mov
subl
into
popf
add
repz
jo
cmpsb
mov
sbb
ja
inc
fiaddl
mov
mov
jg
in
imul
push
push
pop
pop
cmc
leave
xchg
inc
sub
mov
lcall
cmpsl
jmp
mov
xchg
and
in
pop
cmp
mov
mov
push
dec
sub
out
cmp
lds
addl
fadds
jno
sub
in
cmp
xor
ja
fcmovnbe
xchg
rcrb
sbb
imul
scas
cld
cmp
fcomps
mov
pop
outsb
loop
mov
lret
gs
jecxz
sbb
adc
mov
jg
stos
xor
stos
nop
mov
inc
outsb
and
mov
sub
xor
mov
inc
rcl
jo,pn
gs
mov
mov
xchg
in
jo
mulb
mov
pop
loopne
mov
test
sbb
push
imull
xchg
in
test
xor
mov
inc
repnz
in
push
inc
arpl
fistl
scas
loopne
add
or
adcl
sbb
push
loopne,pn
mov
mov
test
xchg
cmp
pop
int
or
out
or
in
pop
call
pop
fcmovu
xchg
test
sub
fst
je
loopne
ret
int
aam
jno
add
call
out
dec
or
in
xor
xchg
xor
sub
adcl
mov
sahf
sbb
stos
cs
addr16
fiaddl
and
mov
mov
push
bound
dec
pop
pop
cmp
adcb
and
mov
and
les
add
and
mov
bound
and
or
dec
fwait
std
cmpsl
jle
or
or
mov
add
dec
or
pop
cld
js
movsb
jb
outsl
in
scas
pop
sbb
sahf
outsb
orb
push
popa
cmc
mov
aas
push
jecxz
addr16
test
int3
mov
out
mov
mov
jns
mov
test
dec
and
jmp
jp
ror
icebp
xor
xor
aam
push
xchg
mov
fidivrl
scas
cltd
pop
add
sti
out
xchg
and
sub
add
push
xlat
in
mov
insb
lret
mov
je
sbb
daa
outsb
fmuls
sbb
ret
jmp
mov
arpl
mov
push
cmpsb
mov
repz
loope
jns
sbb
xor
aad
call
fimuls
jmp
mov
hlt
cmp
test
jo
mov
dec
into
cmp
add
pop
cld
xchg
jecxz
aaa
cmp
push
fdivl
mov
mov
adc
out
lods
lods
inc
in
sub
add
enter
cmp
mov
jne
std
push
push
js
aam
adc
loope
in
inc
xchg
jo
lds
cli
pushf
or
sub
add
add
mov
mov
clc
jo
pushw
cmp
mov
xor
pop
jno
add
push
shlb
xchg
cmc
loopne
rol
add
test
and
gs
or
lock
sbb
insb
mov
pop
xchg
sub
pop
push
xchg
mov
outsb
div
xchg
dec
xor
xchg
testb
inc
lods
jne
sub
imul
and
push
push
stos
xchg
or
in
loopne
js
imul
popa
cmp
out
xor
aaa
sub
cmp
pop
divb
inc
sahf
lret
mov
dec
inc
ds
cmpsl
or
fdivs
mov
aaa
mulb
xchg
jl
inc
dec
xor
xchg
pop
xor
fs
cmp
sub
mov
or
pop
dec
subb
out
xor
leave
xchg
lahf
jmp
ret
push
mov
mov
push
inc
jbe
mov
inc
inc
and
mov
or
sub
aam
or
dec
loope
dec
ja
loope
insl
mov
int3
inc
mov
mov
fnstsw
jl
addr16
sahf
data16
inc
in
je
and
xchg
xor
jae
sbb
xor
ljmp
ss
mov
cld
mov
push
add
inc
add
repnz
out
mov
mov
xor
or
into
in
sbb
fsin
fsubrl
and
lcall
mov
addr16
mov
sbb
dec
in
xchg
push
mov
cmp
inc
dec
cmpsl
lret
jae
pop
daa
das
inc
jle
shlb
popa
faddp
incb
lcall
mov
xorl
rcrb
sub
adc
mov
xchg
insl
inc
into
aas
repnz
out
cli
clc
ljmp
popa
pop
in
fiadds
pushf
rcrl
fisubrs
pop
xchg
jnp
mov
ja
nop
cmpl
add
sbb
or
stos
mov
pop
inc
cmp
jge
sub
lret
sbb
test
icebp
or
mov
icebp
push
pop
add
inc
repnz
sub
lods
movsl
lods
je
push
lahf
shll
popa
cmp
jns
sbb
aaa
adc
sbb
std
les
and
push
pop
push
push
xchg
dec
repz
adc
lds
fsubrl
pushf
imulb
cmp
movsb
es
mov
rcrb
mov
mov
push
and
adc
inc
dec
mov
int3
pop
fadds
movl
ret
mov
adc
rcrl
rol
mov
adc
xor
aad
bnd
adc
aam
cli
mov
test
add
sbbb
cltd
imul
insb
mov
or
pushf
repnz
or
cltd
mov
xchg
hlt
dec
aas
pusha
jmp
mov
call
mov
push
std
sahf
lret
pop
dec
cli
out
lahf
repz
lret
pop
adc
fcmovnu
daa
lds
cld
fdivr
or
add
frstor
mov
je
mov
jne
or
loope
icebp
mov
add
mov
or
hlt
add
test
call
and
dec
adc
jl
ss
xor
or
mov
movsb
mov
and
add
fmuls
mov
mov
sahf
fwait
pop
aam
scas
pop
jae
xor
dec
add
mov
dec
lock
fiaddl
into
mov
shll
inc
mov
popf
cmpsl
xchg
jmp
mov
mov
std
jb
adc
jg
lret
xchg
cs
hlt
mov
mov
cmpsb
adc
push
add
and
test
aas
aam
inc
rcl
and
ja
movsb
in
mov
mov
or
shrl
push
inc
in
shlb
test
sub
dec
test
sti
lret
sub
push
bound
or
fsubr
add
in
push
add
pop
xchg
loop
xchg
sub
push
sub
mov
rcrl
jns
push
sub
add
nop
pop
xor
xchg
les
addb
addl
adc
out
ss
jg
lock
sub
or
cmp
das
mov
nop
js
cmp
mov
push
cmc
pop
pop
lahf
cs
lahf
pop
pop
mov
fs
imul
fs
shl
loope
or
fstpl
jo
sub
inc
mov
push
cmpsb
stc
jp
rcll
adc
divb
andb
rorl
inc
cs
jge
les
or
push
xchg
out
mov
loopne
jl
sti
ret
aas
jne
mov
dec
mov
xchg
pop
inc
imul
subb
ljmp
ds
add
cli
imul
lcall
cmp
into
outsb
mov
pushf
jno
insl
stc
add
in
popa
inc
rclb
cmc
or
nop
dec
divb
sbb
or
cmc
pop
nop
jns
adc
mov
adc
or
negl
xchg
test
mov
dec
dec
in
add
stos
jb
mov
jbe
ret
add
movsl
fisttpll
and
cmp
adc
std
rdpmc
les
bound
sub
sbb
jp
pusha
ret
js
clc
push
pop
iret
add
push
jmp
pop
cmp
cs
sarl
adc
lret
jnp
push
lock
pop
pop
out
push
dec
adc
inc
xchg
in
rcll
xchg
rorb
jne
cmp
xchg
sub
mov
inc
and
mov
jp
ss
jb
andl
popl
or
sahf
std
ds
rcrb
ljmp
sti
add
push
xor
xor
mov
inc
lret
xor
gs
lods
xor
fildll
repz
loopne
inc
flds
cmpsl
jbe
mov
inc
mov
add
mov
test
lret
gs
or
idivb
mov
test
mov
adc
xor
sar
lret
sbb
sbb
iret
movsb
clc
int3
pop
fldcw
sbb
test
dec
mov
int3
and
mov
and
std
mov
lods
rol
out
lcall
loope
mov
cmpsl
dec
lock
pop
mov
dec
xchg
xor
in
sbb
mov
xor
jl
out
fistpll
and
push
ror
dec
xchg
adc
cmp
add
jb
dec
mov
mov
scas
hlt
loop
test
cwtl
fildll
ljmp
xchg
mov
mov
mov
push
enter
paddsw
add
adc
push
pop
mov
loop
push
iret
jb
xor
enter
jge
push
and
and
xchg
int
sahf
adc
sti
test
adc
fdivrs
addr16
push
mov
outsb
shlb
lret
ret
dec
sti
mov
mov
pop
cmpsb
and
lret
fwait
bound
in
mov
sbb
mulb
pop
xchg
mov
push
sub
mov
pop
add
cmp
cmp
lods
sbb
jge
lret
jnp
cld
xor
test
in
push
in
sbb
cmp
daa
idivl
popf
aaa
outsl
imul
mov
cmp
inc
xor
push
mov
cmp
push
or
repnz
and
lret
inc
push
pop
jae
notb
daa
jbe
cmp
xchg
xchg
mov
test
cli
push
jecxz
add
mov
xchg
sub
jecxz
mov
xchg
sub
mov
pop
insl
push
insb
cld
in
ret
lret
pop
mov
pop
xor
push
not
mov
dec
fwait
jl
jle
je
push
push
xchg
es
sub
mov
jnp
and
push
jecxz
std
jp
je
mov
xchg
sub
sbb
in
adc
ror
jno
cli
lret
dec
xchg
hlt
xchg
movsl
or
sub
adc
les
popf
dec
cmc
xor
cmp
loope
jmp
mov
data16
and
int3
push
lret
and
mov
les
in
adc
mov
fwait
into
call
in
jbe
dec
xchg
or
mov
push
xor
cmp
stos
sbb
cmp
ds
and
movsb
mov
mov
dec
mov
sbb
adc
shll
xor
pop
cwtl
call
movsl
sbb
inc
sbb
push
sarl
push
in
lock
mov
mov
mov
nop
rcll
lret
mov
xacquire
faddp
and
mov
int3
leave
adc
sbb
ss
mov
adc
imul
add
dec
and
aas
inc
movsb
xchg
cmc
xchg
add
mov
pop
stos
lret
and
xor
pushf
and
out
pop
xor
hlt
clc
xor
inc
dec
imul
cmp
dec
data16
push
stc
mov
jo
out
call
scas
cmp
mov
mov
idivl
or
dec
mov
ficomps
mov
push
or
xchg
in
cmpsl
addr16
fidivrl
xchg
cli
adc
or
cmpsb
xchg
test
mov
ret
int
xorl
es
fstpl
cwtl
sarl
pop
fdivl
mov
cmpb
jo
adc
or
gs
add
and
mov
and
fstps
pop
inc
dec
cmpsl
sub
mov
repnz
push
loope
inc
test
sti
in
fdivrs
gs
dec
cmp
push
iret
test
data16
neg
int
stos
ljmp
outsb
addb
lds
in
jle
push
sarl
cmpl
push
scas
cmpl
mov
xchg
movsl
inc
fildll
repz
push
mov
pop
rcr
jmp
cmp
rolb
jmp
or
mov
add
aam
mov
or
out
leave
inc
cltd
lahf
mov
xchg
push
stos
pusha
xchg
sub
dec
push
nop
jo
push
and
sub
shrl
pop
xchg
into
adc
imull
iret
xchg
jne
outsb
icebp
jmp
icebp
iret
out
in
inc
fldenv
dec
push
sti
dec
adc
into
xlat
adcl
call
xor
sub
mov
ja
into
imul
xchg
addl
inc
loop
lcall
jb
sbb
loopne
leave
lods
inc
lds
arpl
mov
hlt
jno
and
lock
sub
jmp
push
daa
arpl
mov
sbb
dec
mov
cmpsl
cmpsb
add
notl
adc
jo
sbb
jmp
in
sbb
out
stc
js
xchg
mov
push
into
int
sahf
cmc
fists
inc
fwait
pop
loopne
jne
xor
popa
cltd
xor
xor
fsubrl
cmp
std
fstp
push
ljmp
and
cmpsl
incl
pop
insl
jb
clc
add
add
das
inc
xor
rclb
fstps
shl
xor
sub
cmpsb
fiaddl
test
sbbb
push
mov
dec
jmp
cmp
icebp
mov
scas
fstpl
insb
pusha
sti
mov
shrl
xor
cmp
icebp
lock
les
cld
xor
popa
mov
push
xor
js
push
flds
pop
fldt
jl
mov
mov
dec
xchg
xchg
push
scas
push
xlat
out
out
leave
sahf
cltd
jno
add
lock
add
and
xchg
enter
inc
in
addr16
xor
mov
out
sub
sbb
test
and
loop
sub
xchg
adc
gs
sbb
xbegin
movsl
push
ret
leave
pop
pop
pop
and
je
lret
mov
cmp
or
xchg
cld
mov
aam
inc
mov
sbb
int
dec
lods
xor
add
and
add
ret
or
adc
mov
jns
jmp
lret
ret
mov
mov
mov
add
or
test
aam
test
int3
stos
and
push
adcl
out
pop
pop
xchg
cmp
out
xor
mov
mov
out
mov
lret
mov
cmp
js
lds
jmp
pusha
rep
cld
or
dec
test
loope
scas
push
outsl
std
and
mov
xorb
scas
ficomps
fistpll
ljmp
bswap
pop
cmpsl
les
pop
std
aad
into
dec
pop
cmp
sbb
pop
int3
cltd
nop
imul
ret
and
sti
cmp
mov
dec
dec
cmpsb
dec
jmp
jae
add
jne
push
push
in
dec
pop
sbb
jecxz
cmpb
pop
arpl
push
cmp
enter
pusha
add
cmp
sbb
mov
xor
imul
sahf
or
push
in
sti
cmc
aam
push
rclb
jnp
lods
test
fdivs
ret
outsb
movsl
rcrl
fnstenv
inc
push
dec
push
mov
jmp
mov
out
stos
jo
fsubl
cwtl
cmp
out
push
rcll
int3
fcoml
mov
stos
push
and
pop
pop
lock
mov
int
cmp
fimuls
insl
daa
fstps
sbb
enter
in
pop
mov
mov
cmpsl
and
pop
gs
adc
pop
insb
adc
inc
push
aas
test
sub
pop
xchg
inc
sbb
sbb
sbb
jne
xor
lcall
ret
mov
sbbl
aaa
push
jge
xor
aam
bound
xor
repnz
je
sbb
and
inc
sub
mov
shrb
xchg
in
cwtl
inc
adc
xchg
adc
mov
pop
sti
inc
and
xchg
add
ds
xor
fs
jecxz
inc
cmpsl
js
cmpsb
mov
jg
cltd
mov
dec
and
int3
pop
fisttpl
out
inc
mov
inc
stc
sti
xlat
into
adc
add
jns
adc
jg
pop
pop
sbb
or
mov
mov
stos
inc
xchg
lods
or
push
clc
jecxz
push
xchg
loopne
push
push
aam
push
adc
mov
pop
rcrl
outsb
ds
outsb
neg
mov
gs
jge
lret
test
or
jnp
pop
add
sbb
pusha
xchg
aad
fcompl
mov
enter
or
xchg
int
dec
xchg
push
ja
int
aam
lret
mov
adcl
andl
inc
pop
sub
imul
push
add
mov
pushf
sbbl
mov
inc
scas
adc
mov
in
call
enter
xor
push
cmp
lret
movsl
insb
addl
or
je
push
push
ret
and
rclb
cs
mov
mov
xchg
mov
sbb
fs
movsl
iret
fmull
dec
push
loop
outsl
les
and
dec
or
sbb
fmuls
dec
pop
xchg
adc
jl
inc
sahf
pop
sbb
int3
shrl
in
cli
jnp
and
xchg
jnp
test
pop
mov
fs
in
mov
mov
jo
xchg
mov
movsl
ficompl
sar
inc
aam
xchg
pop
push
pop
pop
sbb
mov
or
push
adc
push
rcll
mov
dec
dec
popa
mov
int
into
cmp
scas
mov
add
andl
sbb
dec
add
jle
sub
sub
int
mov
cs
fwait
movb
pop
fildl
cmpsl
mov
clc
mov
sbb
out
in
subb
inc
clc
movsb
popa
stc
repnz
cmp
mov
aam
jo
or
cltd
cltd
setne
push
cmp
cmpsb
mov
in
or
rcrl
int
mov
cmp
adc
dec
hlt
inc
es
or
sbb
aas
pop
call
test
add
mov
insb
mov
mov
xor
push
xchg
popf
mov
jae
sub
add
mov
mov
je
repnz
ja
lods
pop
aas
or
push
das
mov
push
and
rclb
cld
negl
lock
fsubrl
mov
sub
mov
shll
mov
mov
adc
pop
sbb
mov
dec
sbb
std
sahf
dec
push
ret
hlt
test
lcall
jno
int3
cmc
mov
adc
mov
outsb
ret
and
jo
lret
mov
call
shr
sbb
in
push
cmp
aaa
test
sbb
or
push
mov
lea
jg
push
cs
mov
out
pop
adcb
mov
js
adc
cmp
cmpsb
pop
dec
mov
xchg
lods
rclb
jge
cwtl
mov
les
in
adc
push
shll
out
sbb
mov
xchg
sub
test
movsb
mov
xor
shl
in
dec
mov
div
out
shr
mov
mov
inc
push
gs
jge
pop
inc
pusha
xchg
sub
rep
sub
icebp
push
pop
or
int
mov
lea
mov
push
xchg
inc
jnp
xchg
outsl
xchg
or
ds
jno
aaa
mov
jge
inc
addr16
cmp
push
dec
add
lret
sbb
sub
pop
adc
in
movsb
push
test
push
daa
pop
popa
jns
mov
add
mov
loopne
fmull
subl
daa
jle
jnp
clc
mov
push
mov
cmc
cmp
test
jge
xchg
test
lea
lock
lret
lahf
adc
mov
arpl
lret
aad
push
sub
cmp
or
inc
sbb
cmpsl
testb
fsts
imul
ret
add
gs
push
sub
cmp
mov
pop
dec
mov
push
popa
inc
daa
mov
mov
lcall
jbe
add
data16
and
subl
mov
cmpsl
jp
jg
fwait
negl
cmpsl
aad
mov
jmp
xchg
push
pop
xchg
dec
int
pop
add
jmp
xlat
outsl
mov
push
outsb
es
ljmp
mov
xchg
xlat
mov
outsl
pop
fcoms
jb
lret
or
adc
or
out
ret
lds
aaa
iret
fsubrl
lret
sbb
sbb
jae
cld
and
xchg
xchg
xchg
scas
adc
cmpsl
push
int3
push
lea
popa
sbb
sub
mov
push
adc
mov
clc
push
jae
or
imul
and
mov
cwtl
inc
loope
jle
shrl
jnp
sub
lods
pop
shrb
sbb
pushf
js
push
idivb
in
jne
xor
mov
adc
stos
mov
adc
cmp
push
xchg
push
out
adc
or
jecxz
xor
mov
jg
xchg
cmp
adc
sub
insl
xor
or
addb
icebp
dec
sub
das
mov
pop
in
jo
xchg
fsts
mov
inc
xchg
enter
fs
inc
in
aam
pop
ficompl
dec
stc
popf
movsl
pop
mov
dec
imul
xchg
xchg
rclb
ficompl
and
cwtl
hlt
mov
mov
sub
jmp
pop
les
into
cwtl
fstpt
xchg
gs
arpl
loopne
add
jno
adc
xor
sub
aaa
test
repz
push
xor
inc
dec
test
fldl
inc
outsl
cltd
shll
lods
sub
push
rcrl
mov
stos
inc
mov
jne
in
pop
fs
and
jne
pop
inc
test
add
xchg
neg
lret
dec
repz
je
adc
jmp
out
pop
add
fs
push
mov
jbe
out
inc
adc
pop
xchg
and
push
dec
xchg
mov
xchg
gs
cmc
adc
xchg
and
insl
mov
mov
mov
mov
int
imul
jmp
mov
loopne
cmp
inc
inc
stos
xchg
inc
ljmp
xor
jbe
mov
dec
xor
shlb
pushf
cmp
sar
inc
flds
enter
pusha
push
pusha
data16
mov
mov
jnp
jle
outsb
icebp
test
sbb
out
hlt
lods
out
insl
sub
lea
mov
and
sbbl
pop
pop
pop
mov
insl
outsl
jle
lahf
sti
add
xor
adc
stc
adc
icebp
push
push
and
jle
ret
cmp
or
mov
popf
fs
and
imull
inc
push
sahf
push
imul
mov
mov
scas
push
insb
cmpsb
fwait
sbb
jne
push
or
mov
lret
mov
push
std
fstl
in
push
jge
xchg
iret
adc
test
dec
jecxz
in
dec
xorb
mov
adc
mov
mov
mov
jno
mov
mov
inc
and
xchg
mov
lret
iret
in
ret
pop
pop
jmp
xchg
aas
pop
lgs
inc
loope
inc
stc
cli
repnz
rclb
sahf
stc
int
dec
loop
scas
scas
inc
add
dec
in
xor
push
pop
add
lret
in
nop
fs
lcall
sti
pop
out
cmc
mov
xchg
jp
pop
mov
fistpl
andl
outsb
jecxz
cmpsb
cli
call
hlt
aam
lods
mov
insl
add
xchg
outsl
bound
adc
pop
add
cmpsb
cmp
aaa
mov
sbb
ret
sub
cmp
mov
push
int
dec
lds
cli
bound
push
cmp
rol
cld
sbb
out
cld
add
push
cld
fcmovb
or
das
imul
pop
push
jecxz
stos
jl
in
dec
loop
adc
xchg
cli
pop
jg
inc
add
push
les
mov
pop
mov
mov
aad
pop
fstpl
cwtl
sub
fbstp
ljmp
movsl
iret
cltd
dec
pop
stos
frstor
bound
aad
mov
out
mov
jns
cmc
sbb
call
rcll
sub
ret
adc
dec
sub
or
fimuls
inc
data16
lcall
rcrb
lods
dec
inc
sub
jmp
pop
std
insl
dec
aas
dec
addr16
test
sbb
pop
jo
scas
add
jg
and
loopne
lds
lea
test
shlb
mov
mov
sub
jns
and
int3
push
mov
inc
int
lods
mov
ret
sbb
jmp
or
or
stos
dec
sbb
stos
pop
mov
cmp
sub
and
xor
add
fcomip
sahf
mov
push
push
push
cltd
stos
push
pop
pop
cmpl
xor
loop
leave
fisubrl
insb
cld
movsl
stos
cs
sarb
adc
push
push
lock
out
shl
cli
jo
cwtl
and
lods
sbb
mov
cmp
ljmp
lods
push
test
mov
outsl
aaa
inc
fcmove
mov
and
test
dec
popf
sbb
dec
lock
mov
lock
mov
mov
inc
xchg
fs
and
cmp
in
cmp
stc
pop
push
fisubrs
data16
xchg
imull
xlat
lods
add
jl
xlat
lea
aad
push
jp
push
xchg
cmpb
pop
leave
into
pop
movsl
cwtl
adc
sub
xor
inc
jecxz
push
jnp
xor
dec
pop
inc
std
and
daa
xor
outsl
sarb
sub
jge
fisubrl
pop
stos
dec
sahf
dec
out
push
cwtl
push
mov
out
ret
imul
lds
imul
xchg
add
dec
pop
sbb
and
insb
inc
mov
push
test
mov
sti
cltd
adc
push
adc
inc
filds
sub
addb
adc
xor
jg
std
mov
cli
inc
mov
xor
xor
xchg
arpl
dec
test
les
mov
icebp
mov
mov
nop
lret
mov
cmp
mov
test
sbb
inc
push
or
jo
xor
xor
out
leave
mov
fs
aad
jecxz
lds
jmp
loop
and
lcall
sub
orb
aam
mov
sbb
lods
out
add
lock
ror
sub
mov
aad
inc
int3
cmp
daa
arpl
push
addb
cmpsb
int
jmp
inc
jae
jbe
sbb
ja
push
push
aas
stos
push
pop
leave
lea
int
bound
mov
mov
or
rclb
add
xor
in
mov
dec
adc
ds
cmp
sub
xor
or
pop
pop
mov
lods
mov
pop
mov
or
pop
rorb
jo
cltd
pop
jb
cltd
pusha
js
dec
dec
scas
popa
push
xor
test
int3
sbb
adc
cmpsl
mov
test
and
xor
and
sub
inc
int3
inc
cmp
fstps
out
xor
enter
loope
xor
repz
jmp
lret
out
sbb
movsb
shrb
cmpsb
fbstp
lea
add
sbb
ficomps
mov
push
push
mov
xchg
outsb
mov
or
ja
jge
mov
adc
les
xchg
dec
sbb
fistl
sub
ljmp
arpl
mov
imul
push
or
loop
cmpsl
cmp
mov
add
lock
pop
outsl
leave
pop
dec
movl
dec
xchg
pop
mov
into
lret
sub
shlb
mov
pushf
add
in
pop
fstpt
mov
xor
mov
cwtl
aad
sahf
mov
mov
or
jge
pop
sbb
xchg
sahf
scas
out
xor
mov
jg
adc
push
pop
das
adc
mov
mov
mov
pop
inc
ret
cmpsl
addl
sub
inc
xor
mov
int3
pop
cmpsl
adcb
dec
sbb
movsl
inc
int3
cmp
or
mov
sub
pop
ret
je
repz
jo
sub
js,pt
xchg
push
push
sbb
ljmp
movsb
mov
cmc
push
ret
dec
jae
aam
out
fcomps
in
push
mov
cmpsl
popa
jmp
cmpsl
popa
shlw
sbb
ja
push
mov
rcll
shll
sbb
or
push
in
js,pn
insl
into
cmpsb
pop
add
mov
jl
cmp
loop
fists
pop
lods
dec
and
lret
jl
push
cmp
int3
jne
inc
and
cmp
jl
add
add
cmp
arpl
xor
ja
lds
jmp
pop
xorl
xchg
jnp
repz
cmpsl
movsl
lret
add
push
ja
pushf
nop
jno
xor
out
sbb
insb
mov
ror
mov
out
test
mov
loop
or
push
cwtl
inc
inc
sti
cmpsb
and
sbb
dec
out
push
lock
adc
or
stc
cmpsl
mov
pop
ds
add
ds
lods
dec
adc
imul
lock
shrl
sbb
pop
xorl
sahf
fldcw
rorb
push
mov
push
data16
inc
stos
out
aad
sbbl
nop
ret
sub
lods
sbb
fwait
xchg
mov
out
inc
dec
movsl
cmpsb
out
out
dec
push
enter
jno
inc
push
addr16
cmp
popa
mov
lds
add
pop
aas
or
shlb
stos
mov
enter
in
cmp
mov
or
inc
test
mov
roll
add
cmp
hlt
xchg
push
movsl
shrb
aas
sub
xchg
test
fisttps
lret
jns
popf
xchg
xchg
sbb
adc
push
xchg
adc
mov
shll
xor
jg
xor
inc
pop
aad
xchg
jno
out
es
loope
cld
loope
incb
dec
mov
imul
and
sub
or
cld
add
fnsave
xchg
lret
sub
adc
orb
decl
mov
push
sbb
xor
arpl
jo
ret
bswap
pop
mov
push
mov
scas
hlt
stos
sbb
insl
ret
xor
ror
sub
icebp
and
mov
sbb
faddl
xchg
sub
mov
dec
add
fdivrl
lds
lret
repnz
or
dec
pop
aaa
loop
adc
or
std
xchg
ja
repnz
fxam
out
jl
sarb
outsl
mov
inc
in
frstor
ret
pop
sub
pop
lock
push
popf
insb
add
dec
stos
cmp
xchg
daa
ffreep
jmp
jmp
lods
fidivrl
mov
pop
icebp
push
inc
sub
dec
addl
jbe
mov
sub
adc
fildl
out
fwait
inc
dec
aas
call
cmp
test
fisttpll
pop
pop
mov
adc
jbe
and
out
jo
stos
jle
mov
daa
xorl
jns
aas
cmp
daa
push
pop
test
imul
jg
push
ljmp
lds
dec
lock
fstl
scas
jecxz
inc
and
loop
test
and
je
jle
aad
test
fimuls
dec
jns
es
pop
mov
inc
daa
jae
and
add
or
dec
add
scas
cmp
in
adcl
pop
fdivrl
pop
or
ljmp
imul
jb
or
xor
push
jle
insb
cmp
mov
outsl
and
sbb
or
or
aas
sbb
push
pop
imul
sbb
mov
movsl
lods
incb
movl
mov
pop
adcl
cmp
cmp
mov
testl
dec
jp
das
subb
ja
enter
hlt
mov
cmp
outsl
popa
mov
mov
pusha
sbb
jnp
jbe
sbb
jmp
insl
ret
lcall
cmpsl
punpcklwd
dec
ret
sbb
pusha
mov
xor
adc
popa
or
push
xchg
mov
cmpl
xchg
cmp
mov
dec
xor
and
data16
fwait
pop
sub
sub
vcmpsd
mov
les
push
or
out
adc
jne
sub
pushl
enter
jnp
xlat
scas
loope
mov
fidivrl
cmp
bts
adc
popa
jbe
mov
mov
rcrb
mov
adc
lcall
dec
push
push
insl
scas
scas
popf
ret
cmp
ficoms
addl
icebp
add
jmp
xor
adc
xor
orb
dec
pushf
add
aad
inc
fildl
jb
int
xor
xor
dec
mov
lds
cmp
jo
insb
lea
mov
repnz
xor
fisubs
bound
mov
pop
data16
jnp
das
xchg
jge
out
inc
jae
mov
dec
test
loopne
dec
fsubr
sti
pop
movl
push
push
mov
rcll
sahf
scas
push
out
shrl
or
jmp
add
sbb
addr16
mov
lea
pop
xor
js
inc
push
push
ret
pop
jb
imul
out
stos
aaa
aad
cmpsb
mov
insb
jmp
sbb
cmp
orb
cmpb
sti
sbb
mov
movsl
daa
push
mov
repz
and
sbb
push
fnstcw
dec
xchg
aad
cmpsb
adc
fsubs
add
sbb
cmpb
xchg
xor
das
or
jecxz
mov
push
in
pop
sub
cmp
push
dec
pop
shll
scas
adc
in
iret
xchg
les
pushf
sub
std
dec
dec
sub
enter
and
ss
mov
sub
loop
leave
jmp
xor
pop
jne
fs
mov
popa
ror
pop
mov
into
enter
push
dec
inc
in
mov
mov
cli
aaa
jb
inc
xor
and
sbb
fwait
hlt
and
jl
mov
add
data16
adc
in
inc
fld
das
fs
stos
call
fdivrl
mov
fbstp
push
xchg
jae
mov
cltd
cmpsl
sti
sbb
cli
icebp
nop
es
std
stos
bound
into
and
lods
sbb
push
push
sub
into
add
mov
mov
and
push
and
or
pop
add
out
jge
xorl
sbb
cmpsl
sub
gs
sub
pop
mov
sbb
leave
xchg
xchg
loope
add
dec
push
sbb
cltd
scas
stc
in
xchg
fdiv
inc
stos
mov
aad
popa
push
adc
ss
xor
inc
inc
push
cwtl
add
movsl
in
std
or
pop
incl
outsb
lods
xchg
enter
ret
lods
cmp
lods
in
pop
pop
cli
dec
pop
imul
jmp
nop
clc
cli
sbb
add
sub
add
movsb
out
xor
lret
lods
aas
inc
dec
int3
mov
xchg
in
xlat
mov
sbb
cmp
fadds
dec
loop
movsb
lahf
fdivrl
hlt
scas
loopne
pop
xchg
hlt
jge
outsl
cmpsb
push
and
and
push
ja
and
data16
cli
out
mov
mov
push
sub
and
dec
sub
push
dec
mov
dec
and
xchg
xor
or
dec
push
lcall
or
sti
or
pop
cmp
add
ficoml
xor
bound
call
in
cmp
mov
inc
stos
xchg
mov
dec
ficompl
inc
arpl
push
sub
int
mov
mov
bound
int3
loopne
xor
into
mov
sahf
xchg
pop
mov
push
lahf
pop
dec
insl
and
loope
gs
insb
gs
mov
jmp
and
leave
inc
cmp
addr16
pop
lds
test
movsl
cltd
adc
xor
daa
ss
cmp
js
lcall
add
mov
jecxz
push
bound
xor
mov
mov
xchg
ficomps
add
arpl
ret
adc
sarb
hlt
lret
dec
cmp
pop
jmp
ljmp
jp
gs
adc
loope
popa
es
push
gs
imul
andb
insb
mov
push
mov
push
call
and
int
lahf
int3
pop
jle
sub
xor
fldcw
mov
stc
fildll
adc
push
xchg
mov
in
loope
mov
cs
mov
ror
rorb
mov
adc
loop
filds
test
sbb
fidivl
lods
pusha
lcall
ljmp
lret
push
mull
imul
fidivl
mov
popa
mov
xorb
shll
jecxz
ret
stos
xor
out
xchg
in
or
xor
mov
fstps
js
adc
ret
aad
pop
pop
fldenv
jp
pop
lea
fyl2xp1
or
addr16
clc
sbb
push
sbb
adcl
push
jmp
adc
sar
hlt
pushf
imul
mov
leave
int3
popf
inc
cmp
cmp
icebp
shlb
arpl
in
cmc
insl
dec
repz
shr
dec
dec
das
xchg
int3
add
dec
mov
lret
jmp
rclb
push
insl
lea
ljmp
ja
nop
cmp
or
pop
aad
leave
cmpb
add
xor
dec
js
or
inc
jmp
pop
sbb
mov
outsb
or
jmp
iret
jbe
mov
decb
ss
gs
stos
fldcw
inc
dec
fmull
movsb
mov
xchg
insl
push
inc
mov
mov
or
js
fidivrl
or
push
dec
cmp
mov
cmp
xor
and
push
and
and
arpl
xor
push
jecxz
test
mov
mov
roll
dec
mov
ljmp
jno
mov
sub
push
addr16
jle
call
test
sub
sti
mov
xchg
jns
out
jmp
jae
out
cmpsl
adc
stc
xchg
repnz
cmp
std
pop
leave
pushf
or
int3
add
ffreep
push
loop
xor
cli
sub
lcall
mov
mov
cltd
sub
notl
fcmove
mov
adc
inc
test
mov
push
adc
lret
cmc
je
mov
mov
loop
insl
xor
aaa
xor
dec
ljmp
add
dec
aad
icebp
inc
inc
cmp
cmc
pop
stos
js
hlt
repz
ficoml
mov
mov
test
inc
sti
lahf
adc
adc
cwtl
aad
jg
lods
pop
fisubl
or
fs
mov
add
or
or
aad
jnp
jae
hlt
lods
or
xor
imulb
stos
dec
aas
adc
mov
pop
aad
inc
adc
xchg
xlat
mov
fsts
sahf
sub
xchg
sub
push
or
xchg
mov
and
add
leave
push
out
popf
fstp
cmp
andl
addl
mov
xchg
ds
int
addr16
aad
in
lahf
sub
shl
xor
movb
clc
dec
lret
sub
ret
and
shr
scas
pop
push
sbb
cmp
push
scas
jg
jns
inc
cmp
std
sbb
cmp
divl
xor
dec
ret
xchg
add
fwait
mov
sbb
aas
adc
lods
inc
scas
lahf
jae
adc
push
mov
bnd
push
lds
pop
push
in
adc
mov
cmp
test
cs
sbb
in
adc
xor
jb
popa
mov
dec
push
push
in
add
pop
dec
sub
xor
adc
dec
push
sbb
es
mov
cmp
xor
stos
pop
mov
fucomp
mov
scas
dec
jbe
jge
mov
xor
ss
pop
sub
mov
lds
lea
mov
inc
cwtl
loop
scas
movsl
xchg
mov
cmp
fisttpl
cmp
jg
mov
and
cwtl
imul
cmp
cmp
fdivrl
jmp
inc
xlat
rclb
addl
adc
dec
fs
movsl
cld
fidivrs
inc
int3
int
mov
das
pop
cmp
pop
mov
ret
cltd
push
ret
in
clc
in
out
and
mov
scas
es
flds
fidivrl
pop
cmp
mov
pop
sub
aad
js
mov
sbb
pop
jb
pop
adc
pop
pop
xchg
data16
mov
jl
scas
pusha
movsb
dec
sbb
mov
in
test
sub
insl
cmp
mov
stos
test
leave
js
and
and
xchg
popf
cmp
cmp
fnsave
dec
cmpsl
movsl
insb
popa
call
jle
cld
mov
mov
test
mov
fimuls
dec
sub
inc
xchg
cli
add
add
adc
ja
xlat
mov
push
shll
dec
mov
push
repz
mov
xor
rcr
cmc
in
push
in
pop
icebp
and
repz
jge
sbb
xor
scas
je
mov
stc
inc
out
test
sbb
scas
je
sub
xchg
lods
xchg
nop
fsubp
pop
shl
mov
outsb
fwait
das
shll
push
ret
aaa
in
sarb
push
sub
fists
in
pop
fstpl
jle
pop
pop
or
mov
jmp
push
dec
push
mov
testb
cltd
fildll
data16
push
popa
mov
jecxz
cmpsb
mov
cli
inc
sub
mov
out
inc
popf
outsl
jno
mov
sarl
ss
outsb
sub
ret
push
es
in
cld
sub
pop
sub
mov
leave
pop
es
sarb
or
add
shr
push
hlt
ds
mov
xchg
mov
and
in
insl
push
insl
pop
xlat
xor
popa
fdivr
mov
jb
mov
cmp
pop
jae
sub
jmp
pop
pop
mov
mov
jns
adc
aam
pop
outsb
aam
or
push
std
icebp
pop
xor
inc
popf
mov
adc
add
sti
ja
stc
inc
out
xor
mov
mov
gs
or
dec
mov
ds
ljmp
inc
icebp
push
dec
scas
pop
dec
lds
js
mov
les
lds
jne
cwtl
adc
sub
xchg
mov
jns
enter
push
cld
inc
mov
push
inc
divl
xchg
dec
mov
jle
inc
dec
xor
bound
pushf
lea
pushf
or
es
inc
dec
mov
out
xchg
jae
inc
push
out
sbb
in
push
ret
div
mov
inc
cs
jnp
ud0
fistpl
inc
shlb
xchg
mov
fnstsw
jo
mov
stos
xlat
in
mov
and
xchg
aam
imull
or
xor
add
in
inc
cmc
xor
or
loope
mov
push
cmpsb
bnd
inc
jnp
outsb
dec
aam
pop
sbb
arpl
rcrl
xchg
cmp
iret
cmp
jge
sbb
stos
dec
stos
ds
mov
xchg
clc
cwtl
push
push
jmp
sub
adc
jbe
fiaddl
fs
enter
pop
jno
push
adc
jnp
add
loop
jmp
fcoml
iret
imul
test
shll
nop
and
sbb
cld
cltd
push
inc
scas
fimull
sub
xchg
cltd
shl
sbb
xchg
inc
cmpsl
fs
adc
pop
loop
xchg
add
and
cmp
xchg
mov
jae
mov
pop
or
hlt
pop
in
adc
insb
dec
stos
add
mov
popf
clc
pop
stos
fimuls
loope
mov
push
ljmp
or
mov
es
cmc
dec
mov
test
sar
fs
push
fsubs
in
mov
mov
fwait
inc
arpl
adc
outsl
cltd
pop
push
dec
je
enter
mov
ret
fcomi
imul
data16
mov
or
push
dec
ret
sbb
out
pop
or
insb
dec
jp
inc
imul
adc
loopew
xchg
push
mov
xchg
pop
aaa
rolb
fwait
hlt
mov
call
mov
fmull
mov
cwtl
std
mov
sbb
mov
jnp
jg
jbe
dec
push
jp
and
test
ds
clc
fldenv
push
xchg
and
lock
jge
les
aad
sub
pop
jmp
rcr
push
push
mov
xchg
fistpll
fistl
cld
ljmp
js
test
push
addl
xchg
add
sets
mov
sbb
mov
push
test
insb
lret
rclb
or
cmp
pop
testb
cmc
add
xor
xchg
xor
inc
cmp
adc
cwtl
push
jne
sub
fstpl
xchg
and
aam
lock
insb
dec
inc
addb
pop
sub
inc
ficoms
sahf
pop
pop
lcall
add
frstor
mov
add
push
push
jno
mov
lock
xor
inc
adc
and
mov
test
sbb
sbb
mov
hlt
lret
adc
iret
jecxz
push
adc
adc
insl
cli
sub
ficoms
adc
sti
xorl
aas
in
cmpsb
sbb
sti
clc
icebp
mov
push
mov
jmp
xor
xchg
rcrl
push
inc
pusha
les
xchg
cmovle
push
and
int
test
mov
aam
lods
mov
dec
imul
mov
rclb
jb
xchg
sub
and
xor
sbb
bound
and
test
fs
jp
dec
jl
mov
mov
sub
mov
sbbb
mov
scas
xchg
or
scas
aaa
jne
lea
mov
les
addr16
push
ds
add
xlat
jl
pop
jp
or
into
mov
push
aaa
inc
push
lret
fnsave
fcmovbe
shrl
xchg
movsl
xchg
outsb
sub
mov
insb
dec
adc
cmp
inc
xor
aaa
ss
xchg
jnp
roll
cmc
loopne
add
push
jae
jne
repz
clc
aas
push
sub
shll
add
add
mov
push
xchg
mov
or
stos
dec
ljmp
mov
fnstenv
popa
out
or
scas
imul
pop
nop
out
subb
mov
in
aaa
loope
cld
cmc
xor
fs
push
dec
call
sbb
outsb
push
xor
cmc
bound
cmp
lret
push
cmp
repnz
in
test
dec
adc
mov
movsl
test
or
sti
jle
ja
inc
pusha
insl
mov
jmp
adc
mov
std
dec
jle
jle
call
jo
call
and
push
sub
push
cltd
sub
sbb
cltd
adc
or
lahf
shr
adc
sahf
cs
stc
mov
cmp
sahf
xchg
lods
negl
xchg
popf
and
frstor
lods
xchg
mov
adc
test
mov
sub
sub
cmovs
dec
sub
xchg
rorl
pop
sbb
scas
sub
imul
aam
mov
shl
out
pushf
sub
pop
inc
add
pop
cs
xor
mov
movsb
insb
xor
sbb
fsubl
sbb
and
and
ljmp
daa
or
dec
stos
push
pop
mov
xchg
add
out
pop
push
xchg
xchg
add
mov
cmp
push
outsl
jmp
fistps
stc
je
fs
pop
shl
test
stc
cmpsb
or
pop
add
sbb
dec
fisubrl
aas
popf
pop
push
dec
fisttpl
aaa
mov
inc
add
sub
mov
mov
imull
fidivrs
jnp
adc
sbb
cld
add
or
jo
imul
inc
xor
popf
xchg
push
adc
orb
jo
xchg
dec
add
or
shrl
insb
xchg
and
mov
jno
scas
insl
dec
cmp
mov
popa
sbb
aam
fdiv
gs
adc
in
ljmp
lods
jecxz
loope
das
call
stos
stc
xor
mov
mov
xchg
nop
fidivl
cli
lods
das
subb
push
sub
and
jl
enter
sbb
or
push
movsb
sahf
iret
xor
cmpsl
sub
jl
pushf
or
xchg
add
and
push
adc
pusha
push
fisubrs
insl
loopne
in
shl
ret
pop
add
pop
mov
or
push
fisubs
push
sub
push
sbb
cmpsb
ja
mov
sahf
lahf
pusha
and
lea
push
and
dec
pop
adc
push
xlat
sbbl
jp
stos
scas
aad
sbb
inc
xchg
fidivl
cmp
test
test
push
sub
pop
xchg
push
xor
sti
sbbl
and
imulb
fadds
adc
adc
es
adc
pop
push
in
add
scas
pop
outsl
loopne
shrl
add
add
out
test
dec
hlt
pop
sub
cmp
shlb
orl
fnstcw
cmp
push
adcb
mov
and
mov
xor
cltd
pop
jle
repnz
adc
cltd
sbb
insl
and
jg
ret
jp
dec
data16
repz
ja
divb
pop
dec
les
jb
scas
push
push
push
sti
rclb
dec
lret
imul
dec
add
push
mov
add
mov
test
lods
in
enter
push
and
add
lea
pop
pop
jne
jns
cs
lock
cwtl
adc
jo
mov
pop
clc
push
mov
sbb
jo
std
aaa
aaa
jnp
scas
mov
dec
xor
xor
popa
push
decl
lret
push
popa
push
pop
inc
mov
aas
loop
test
fcompl
pop
ja
stos
stos
pop
mov
aas
adc
mov
xor
call
cmpsb
loope
cltd
stc
xor
jmp
mov
jp
push
out
das
mov
push
int3
sbb
add
xor
dec
pop
jno
loop
cld
es
insl
dec
mov
dec
roll
test
jae
pf2iw
mov
sti
pop
add
jp
sbb
or
add
push
pop
stos
jns
arpl
imul
addb
mov
xor
repnz
ss
shll
insl
push
popa
mov
fwait
sar
sbb
imul
divb
dec
scas
lods
cld
jbe
divb
jge
stc
ljmp
xor
jmp
lcall
push
push
sbb
xor
mov
add
jecxz
js
and
dec
je
mov
mov
xor
xchg
in
jmp
mov
scas
inc
jo
movsb
inc
lret
xchg
in
or
push
jecxz
jbe
sub
xor
dec
push
or
int3
frstor
dec
lock
and
icebp
mov
push
push
out
inc
xor
mov
jecxz
xchg
ret
ret
ljmp
cs
jge
mov
adc
aaa
push
jge
out
xlat
pop
inc
cmp
adc
jns
mov
in
divl
push
hlt
lock
push
xchg
test
push
xor
fildl
aam
dec
mov
dec
pop
push
xor
test
xchg
in
or
adc
xchg
gs
bound
push
bound
lods
sub
arpl
repnz
and
mov
leave
std
add
dec
mov
out
in
shlb
jge
bound
lahf
nop
jmp
adc
add
lahf
sti
xchg
sarb
stos
sahf
inc
ror
mov
dec
pushf
xchg
sbb
inc
sbb
jno
ret
push
pusha
lods
repz
notl
mov
xor
movsb
loope
inc
daa
or
and
inc
sub
cmp
pushf
daa
sub
pop
lret
or
cltd
sub
movsl
or
das
loopne
test
cmp
in
imul
jne
or
cmpsb
stc
nop
push
mov
iret
sub
pcmpgtw
ret
push
stos
mov
scas
mov
lods
push
cmpb
push
ja
add
mov
test
mov
scas
fnsave
pusha
fcompl
les
pop
shrb
cmp
inc
xor
icebp
cmp
mov
mov
fldenv
hlt
dec
lea
and
je
jns
repnz
mov
mov
mov
jns
hlt
push
ret
mov
daa
pop
ret
mov
fwait
add
lods
add
mov
imul
cmp
xor
cwtl
cmpsl
push
fidivrs
or
clc
stc
xchg
push
fs
and
rcl
scas
cmpsl
xchg
and
mov
das
ret
mov
push
subl
mov
mov
add
push
sbbb
xchg
out
xchg
dec
sub
sbb
pop
fwait
xchg
pop
xchg
xchg
or
in
lea
sbb
inc
cmp
push
stos
out
out
or
sbb
mov
jnp
inc
mov
mov
lods
and
or
es
daa
clc
xchg
nop
jb
repz
ror
jb
rcrb
xchg
adc
xor
push
arpl
or
adcl
mov
dec
jb
jle
adc
pop
movsl
add
push
clc
jmp
xor
adc
add
inc
mov
cmpsl
mov
mov
mov
sbb
mov
jle
xor
adcb
mov
dec
sub
pusha
mov
pop
pop
aad
jle
push
adc
enter
xchg
add
jo
xor
rclb
rcll
and
add
pop
ret
and
ss
mov
das
imul
or
insb
mov
add
or
xor
aas
and
sbb
movsl
xor
dec
pop
outsb
sub
or
mov
mov
push
ret
xchg
lock
inc
bts
inc
scas
leave
add
dec
sub
xchg
pop
ficompl
push
xchg
adc
xor
sti
push
push
pop
aad
fwait
sarl
mov
rolb
ret
sti
adc
mov
mov
inc
push
dec
outsb
push
and
aas
test
push
mov
pushf
inc
jbe
in
loop
imul
out
and
xor
ljmp
aas
popa
sarl
aaa
cmp
out
imul
out
sub
or
xchg
sbb
cmp
xchg
repnz
lea
xchg
ret
stos
xor
pop
xchg
sub
mov
push
in
movsl
mov
shrb
ds
xchg
inc
lock
pop
movsb
lcall
and
mov
test
out
pushf
shll
mov
fmull
inc
fbstp
cmp
cmp
pop
repz
test
ret
clc
xchg
lods
pop
and
packssdw
fisttpl
jg
lock
and
insl
mov
movsl
push
fldenv
cs
stos
cmp
mov
mov
ljmp
ret
inc
out
scas
mov
jmp
incb
jmp
fldenv
imul
and
push
or
cmp
push
jo
fdivs
leave
or
mov
cmp
xor
mov
or
dec
int
mov
leave
xor
mov
scas
sarl
cmp
xchg
negl
out
mov
adc
xchg
fcoml
ds
dec
daa
pop
cmp
sbb
push
inc
and
cltd
xchg
out
mov
mov
lods
xchg
pop
loop
push
mov
sub
pusha
jno
stos
jnp
sbb
dec
clc
inc
pusha
aas
sahf
or
pop
adc
jp
jmp
lock
xorb
loop
mov
test
enter
shll
push
in
sbb
pop
mov
mov
adc
xor
push
mov
and
adc
dec
lret
test
in
adc
jb
pop
loope
or
pop
pop
aas
and
rep
test
dec
ss
pusha
mov
dec
inc
repnz
ficoms
mov
jmp
mov
cmpsl
ds
js
sahf
js
or
movb
sarb
lods
inc
push
fmull
pop
sub
cld
add
das
push
and
sub
stc
test
pop
das
out
addr16
leave
sub
in
leave
lods
repz
lods
inc
mov
mov
mov
lods
jmp
mov
dec
mov
mov
inc
insb
ja
adc
jge
sbb
pop
xor
movsb
out
dec
pop
bound
and
xchg
xchg
jne
xchg
mov
mov
lods
jle
iret
scas
xor
andb
adc
pop
and
jmp
ja
push
mov
andb
fdivp
cmp
mov
xchg
sub
push
cltd
lahf
fsubrl
insb
aas
outsb
add
loop
and
mov
imul
in
jo
add
sahf
cltd
hlt
out
je
fiaddl
cmp
and
lcall
stos
cltd
sub
and
mov
adc
jne
xchg
ds
roll
mov
mov
popa
mov
add
inc
pop
xchg
lret
xorb
fistl
dec
fisubl
std
mov
ss
sub
dec
aam
in
mov
jo
and
aad
leave
out
inc
lcall
sti
loopne
mov
fists
mov
push
or
add
leave
inc
lods
pop
stc
add
aaa
inc
cwtl
mov
out
repz
int
gs
add
loope
sbb
outsb
aad
movb
sub
xor
mov
clc
inc
jnp
repnz
push
decl
mov
das
inc
xchg
into
xor
inc
in
cld
pop
cld
lret
mov
mov
sbb
mov
dec
or
mov
daa
cmp
mov
xor
test
adc
fwait
rcrb
push
mov
icebp
push
cli
jl
cmp
pop
shlb
xchg
dec
popa
call
jno
xor
mov
int3
cmp
mov
jg
xor
add
les
dec
mov
insl
dec
addr16
pop
aaa
cmp
lea
js
xchg
mov
fsincos
inc
je
cmp
lock
or
je
push
lods
cmp
inc
cs
fldl
adc
rcrl
adc
ja
push
inc
xor
inc
test
adc
lods
into
mov
int
ja
pushf
fsubl
fiaddl
pop
adc
bound
inc
pop
cwtl
adc
mov
push
or
xor
loope
and
test
mov
in
cs
scas
into
jbe
fcmovnb
adc
or
and
cli
clc
pop
js
nop
sbb
bnd
xchg
mov
mov
fwait
adc
jbe
stos
scas
sahf
mov
jb
popf
or
lret
arpl
bound
xlat
ret
shufps
loop
jecxz
mov
lock
sti
jb
ret
insl
aaa
bound
mov
mov
cmp
pop
sti
bound
cwtl
movsb
add
clc
inc
push
in
sub
push
daa
push
inc
ret
das
mov
jle
aas
sbb
mov
outsl
out
inc
cld
pop
mov
push
mov
sbb
je
ret
mov
push
cmc
jmp
adc
hlt
xlat
mov
and
fdivrs
or
dec
cmp
xor
stos
fidivrs
xchg
mov
shll
push
add
mov
and
sbb
cmp
fldcw
dec
fs
inc
mov
ret
jae
sbb
push
stos
add
push
popf
arpl
rclb
xchg
jg
repz
adc
cs
inc
inc
xchg
push
int
enter
sbb
into
mov
xor
sub
and
pop
out
xchg
mov
out
popf
inc
mov
adc
jae
clc
loope
out
rcrl
loop
aas
repnz
mov
mov
cmp
push
dec
add
and
cmp
es
inc
bound
push
inc
cltd
sbb
js
and
insb
adc
and
mov
xchg
test
mov
add
and
push
jle
fsub
cmp
test
fdivrs
mov
outsl
out
cmp
lret
fildll
outsl
mov
jle
js
push
insl
dec
int3
cmove
mov
out
mov
push
into
jno
outsl
xchg
mov
imul
cs
fiaddl
and
and
in
push
xchg
jne
xor
insl
mov
lret
stos
add
jmp
push
pop
mov
jb
mov
pop
sbbl
cmp
push
sbb
jl
jge
mov
cmp
adc
push
lret
es
pop
leave
fsub
mov
repz
fbld
out
scas
aaa
mov
mov
xor
add
test
scas
enter
popf
shlb
jg
imulb
push
add
inc
imul
lahf
out
xchg
add
jb
jns
jno
lcall
iret
outsl
cltd
lret
xadd
and
lret
xor
and
lods
frstor
push
mov
and
pop
test
fsubrl
dec
inc
sahf
mov
cmpsb
push
push
icebp
inc
daa
sbb
push
fcomip
lahf
outsl
repz
mov
fidivrl
mov
add
mov
or
lods
les
jns
mov
jp
inc
pop
stos
cld
insl
outsb
xor
lahf
out
movsl
sub
cltd
ds
lods
mov
sahf
push
lcall
and
mov
in
test
push
fwait
lds
jne
and
ret
jne
repz
inc
repz
mov
sbb
loopne
xchg
pop
add
cmpsb
or
sbb
push
fs
sub
sbb
pop
sbb
fdivrs
dec
xchg
gs
pushl
ds
sub
sahf
insb
pop
das
dec
or
sbb
aaa
mov
mov
cmp
push
inc
dec
adc
jb
in
xchg
stos
jle
xor
xchg
in
ljmp
nop
bound
ret
movsl
dec
xchg
lods
int3
negl
loopne
push
add
cmpsl
imul
mov
lcall
popf
jg
jmp
out
pop
stc
out
outsb
add
push
int
sub
std
mov
pop
in
sub
mov
mov
or
jmp
icebp
jecxz
sbb
imulb
inc
add
mov
add
cmp
mov
jmp
adc
xchg
or
stc
xchg
movsl
mov
sbb
sub
dec
dec
add
xor
jmp
dec
jcxz
cmp
add
xor
pop
sub
movsl
aas
xor
push
xor
into
movsb
inc
bound
push
cwtl
jl
inc
fcom
cmpsl
sbb
loopne
mov
lods
rorl
xchg
mov
lods
xchg
inc
or
add
xorb
fstpt
push
and
lret
pop
dec
insb
mov
dec
adc
mov
or
int3
cli
xor
cmp
jno
pop
cmp
clc
popa
and
mov
adc
arpl
cmc
sub
push
fimuls
loope
and
cs
push
imul
stos
mov
insb
stc
loope
popf
lods
lahf
movsl
mov
loop
outsl
push
arpl
jp
add
or
lret
and
push
cli
popa
cmp
mov
and
sbb
push
push
jno
imul
xchg
sub
jmp
push
loope
std
xchg
add
stos
xlat
cmp
icebp
jge
sbb
out
push
push
jge
mov
int
ja
imulb
movsl
jb
outsb
dec
sub
roll
es
push
mov
cmpsb
test
jl
inc
and
lods
imul
dec
inc
popf
scas
jp
imul
mov
iret
sub
cmp
pop
cmpsl
ljmp
pop
mov
sbb
jo
rorl
sbb
xchg
xchg
repz
aaa
push
xchg
xchg
sbb
sti
sub
jle
adc
or
repnz
jb
inc
dec
sub
mov
pop
push
xor
rclb
mov
mov
jbe
push
push
pop
sahf
pop
stos
aam
mov
push
outsb
or
bound
jo
mov
andb
mov
xchg
in
and
mov
cs
sbb
xchg
in
out
jns
pop
mov
mov
es
push
jb
xchg
mov
dec
cmp
push
cmp
pop
xor
jecxz
scas
fsubp
and
xchg
mov
in
int
pop
insb
inc
or
dec
js
ljmp
sub
inc
mov
add
sub
leave
sbb
pop
inc
lock
pushf
test
and
jecxz
dec
adc
pand
cwtl
push
adc
push
fcmovnb
sbb
lods
in
negl
inc
xchg
pop
mov
push
pusha
xchg
fnstenv
dec
or
jbe
sbb
aas
lods
iret
cmp
pop
sub
cmovnp
aaa
adc
pushl
fiaddl
jbe
xor
aaa
mov
xchg
loopne
and
fcomi
xchg
test
push
in
shr
mov
shll
or
cmp
mov
xlat
es
adc
sub
rcrb
mov
pop
mov
lcall
push
cmpsb
sbb
std
pop
pop
dec
ds
fildl
cmp
add
xor
mov
pop
mov
test
mov
mov
add
in
fdivl
ljmp
push
not
pop
jp,pt
pop
loop
imul
mov
or
ss
mov
call
mov
sub
aad
por
sub
jecxz
lods
add
fnstsw
shl
pop
pushf
push
pushf
mov
fisttps
cwtl
push
out
jbe
dec
mov
cmpsb
and
xchg
sub
and
dec
cmp
sbb
dec
jmp
icebp
out
mov
jae
xor
fbstp
es
es
mov
mov
jb
andl
mov
jl
call
cmp
and
cmpsl
lcall
test
push
stc
dec
push
cmpsl
aas
jno
xor
and
dec
aam
dec
leave
dec
add
mov
mov
fsubrl
subb
loopne
movsb
jns
fstpl
jg
test
adc
sbb
mov
mov
repnz
mov
daa
fisubrl
cmp
cmp
mov
xchg
das
iret
and
ror
cmc
std
aam
movsl
xchg
adc
or
clc
add
xchg
mov
adc
cmp
mov
mov
leave
fists
test
rcr
fnstenv
push
cmp
jl
ds
push
scas
mov
icebp
lret
lahf
cs
aas
push
mov
xchg
xor
xor
out
add
inc
out
pop
cmp
cmpsb
stos
dec
jle
and
aas
pop
mov
xchg
fsubrs
xchg
mov
sarl
rcr
xor
and
jnp
xchg
cwtl
and
pop
xor
mov
jno
mov
pop
insl
lods
pop
cmpsl
and
sub
in
arpl
xor
push
test
lret
jbe
mov
cltd
pushl
pusha
test
mov
sub
xchg
hlt
mov
cmp
and
enter
cmc
cmp
mov
sbb
cmp
sbb
fstps
pop
jecxz
stos
push
pop
mov
lock
jb
adcb
aad
movsb
js
repnz
outsl
xchg
divl
fadd
sahf
inc
or
call
stos
bound
inc
inc
jmp
insl
dec
dec
cmpl
sub
inc
lea
jmp
je
mov
ljmp
test
enter
jae
cmp
mov
ss
loop
push
cmc
adc
test
or
and
dec
mov
and
add
lret
pop
mov
xchg
mov
test
adc
faddl
into
jb
pop
rorl
xor
mov
xchg
xchg
daa
in
sahf
shl
xor
and
into
add
lds
xchg
pop
mov
icebp
pop
add
mov
dec
sbb
testl
jbe
mov
push
sbb
imul
lahf
bound
mov
pop
sub
cwtl
push
xchg
and
or
orb
fisubrl
std
lods
pop
xor
adc
fsubrl
mov
mov
js
xchg
test
jns
push
sub
sahf
xchg
call
mov
add
fimull
clc
mov
frstor
inc
cld
test
adc
pop
mov
push
xlat
push
push
fdivrs
push
xchg
jo
sbb
push
scas
sbb
neg
adc
fimull
and
cld
inc
arpl
lret
xchg
pop
les
lcall
sub
mov
mov
jb
inc
into
xchg
das
pop
cmpsb
jb
call
push
mov
sbb
in
and
add
cli
shl
mov
lods
pushf
and
popa
gs
icebp
jo
sbb
mov
adc
std
mov
sub
sub
cld
aaa
lahf
in
outsb
fsubrl
ret
inc
pop
test
mov
sahf
pop
sub
mov
repnz
je
rcrl
enter
inc
xchg
sbb
ljmp
cmp
insl
jae
int
pop
outsb
ret
inc
not
arpl
movsl
xchg
xor
cmpsl
dec
cli
mov
js
iret
in
lods
jl
jb
mov
ret
pop
xchg
xor
push
push
pop
mov
push
pop
aam
pop
sahf
aam
gs
sbbb
fdivrl
xchg
dec
jne
js
cmp
cmp
and
pop
pushf
mov
loop
pop
lahf
testl
pop
pop
repz
in
xor
push
nop
push
repz
lcall
out
loop
out
push
mov
cmp
in
mov
dec
rclb
jge
push
sahf
sbb
and
lds
je
mov
les
movsl
sbb
cmc
mov
dec
ljmp
repz
push
popf
cmp
rep
in
inc
incl
pushw
test
mov
mov
pop
or
add
and
adc
mov
js
ljmp
cmp
mov
rclb
ja
lea
jns
outsb
and
jbe
mov
dec
mov
cwtl
out
add
insl
jb,pt
negl
ret
jnp
incl
mov
jne
in
push
stc
iret
push
sbb
xor
xchg
mov
xchg
add
xchg
xor
xchg
imul
jns
push
or
ror
es
xor
stos
fwait
dec
mov
xchg
mov
test
insb
test
aas
call
add
adc
pop
dec
jle
std
adc
insb
repz
xchg
insb
ret
push
inc
dec
ds
sbb
mov
mov
cmc
enter
ja
ja
sti
mov
aaa
push
popa
dec
jnp
xchg
cmp
dec
lods
repz
pusha
cmp
pop
pop
or
add
or
mov
and
ja
mov
lea
or
mov
jge
fsubrs
lahf
js
imul
int3
lods
dec
add
aas
or
dec
pop
lret
xchg
mov
push
fs
mov
es
outsb
and
and
sbb
mov
imul
loopne
xlat
cmp
sahf
mov
dec
dec
les
add
rcl
int3
lret
or
cmc
data16
daa
fisubrl
push
mov
or
fld
test
pushf
pop
js
jo
xchg
lock
cmp
push
mov
push
jge
pop
xchg
mov
and
dec
xor
inc
div
inc
xchg
push
push
xchg
es
je
and
stos
xchg
call
sbb
mov
push
inc
adc
mov
loop
dec
cmp
mov
adc
imul
ret
mov
das
loop
out
cltd
adc
je
sahf
pop
mov
es
sbb
sub
push
fdiv
sti
rolb
fcmovnu
insb
or
mov
push
inc
scas
jl
filds
arpl
sub
add
mov
cmp
jnp
xchg
mov
inc
adc
hlt
jb
dec
test
mov
call
stc
or
pushf
adc
or
popf
mov
add
cmp
inc
fistl
stos
cli
adc
aas
adc
stos
push
bound
hlt
or
les
movsl
test
ret
pop
bound
loopne
xor
mov
inc
add
pop
scas
sbb
jle
stos
leave
mov
xor
mov
sbb
enter
popa
dec
stos
adc
fucomip
daa
cmovs
xor
adc
cmpsb
mov
jecxz
xor
or
jno
xor
xlat
shll
or
mov
xor
addr16
sbb
icebp
mov
pop
lahf
test
fidivrl
xor
sub
ficoml
out
push
test
gs
cld
adc
cld
push
fidivl
dec
test
imul
or
mov
pushf
cld
cmp
mov
lret
loopne
adc
or
in
cli
ja
loop
cld
ja
push
xchg
jno
jle
xor
testl
push
push
pushw
notl
popa
loopne,pt
fucomp
popa
test
pop
xchg
stc
fldl
insl
add
ja
jae
add
dec
dec
testb
or
sub
sub
xor
insl
test
aas
in
lds
out
cmpsb
mov
mov
sbb
das
or
inc
push
lahf
dec
sub
sub
aad
out
add
leave
cmpsb
lret
mov
sbb
push
in
shrl
xor
sub
mov
sahf
aad
pop
xlat
lea
enter
pop
cltd
sub
inc
xchg
mov
insl
cltd
or
sbb
sarb
xor
call
stos
mov
je
mov
fistps
subb
or
test
test
jne
aam
mov
lds
xlat
and
push
insl
les
and
lcall
std
mov
jns
ljmp
inc
xor
ret
jbe
and
orl
or
adc
les
cwtl
push
cli
sti
fwait
adc
push
sahf
cs
xor
mov
adc
arpl
cld
dec
pop
jae
dec
sbb
and
push
mov
orb
cmp
mov
dec
mov
stc
add
push
mov
filds
mov
adc
sub
orl
out
lret
or
cltd
sub
bound
add
xchg
pop
sbb
loope
cli
lock
stos
cmp
jno
mov
and
xlat
add
push
sub
xchg
sub
mov
or
popf
fdivl
aad
jb
dec
pop
jmp
out
mov
iret
dec
lods
gs
lods
cltd
and
mov
add
jl
repnz
jl
dec
push
testl
inc
mov
daa
loop
adc
push
adc
jge
insl
movl
mov
and
cld
ret
mov
call
repz
jns
xor
mov
sarb
pop
adc
cmp
cmp
jmp
fnsave
mov
xchg
test
xor
fistps
pop
movsb
sbb
loope
push
lret
icebp
dec
sahf
popl
jno
cmp
mov
cmp
mov
inc
out
popa
outsb
insl
scas
enter
xor
je
insb
pop
ror
push
mov
lods
imulb
mov
in
insb
daa
inc
aam
imul
jo
fidivl
inc
add
fists
push
movsl
mov
fisttpl
push
dec
lahf
add
es
push
sub
push
inc
loop
in
out
fcmovu
adc
dec
inc
aaa
add
mov
jecxz
or
loopne
ror
mov
xor
or
ret
or
lea
mov
push
bound
loope
mov
dec
push
iret
test
mov
pop
jbe
jge
std
push
sbb
stc
scas
xchg
fdivp
jnp
sbb
repnz
inc
icebp
orl
or
inc
roll
decl
mov
mov
jo
mov
and
push
jae
int
aad
xchg
sub
in
mov
pop
xor
cmpsl
and
jecxz,pn
adc
jno
cmp
push
add
out
fistpll
sbb
jg
pop
andl
dec
addb
int3
repnz
fistps
and
cmp
dec
jnp
imull
jmp
sysexit
fildll
dec
inc
mov
in
xchg
jp
mov
adc
ds
add
in
xor
rcr
add
andb
leave
push
leave
in
cmp
mov
jg
cltd
enter
sbb
mov
leave
popf
jge
outsb
push
mov
xchg
cltd
push
push
cmp
push
stos
mov
sub
push
mov
test
je
jne
inc
rolb
jbe
mov
xor
and
ljmp
mov
repnz
xchg
fstp
xorl
daa
mov
inc
push
xor
adc
sub
mov
cmp
mov
hlt
jno
cwtl
jl
fistpl
dec
cltd
jle
and
xor
fimuls
push
jns
jmp
cmpsb
cmp
sbb
notl
sbbb
or
sub
inc
aaa
pop
sub
testb
lock
xchg
subl
mov
adc
cs
mov
pop
das
aad
dec
xor
iret
mov
dec
pop
mov
ds
cmpsb
mov
sarl
inc
je
out
and
sbb
sub
push
jne
adcb
and
das
sub
cmp
xor
cmp
pusha
lock
ljmp
push
call
push
ret
aas
mov
jno
cli
sarl
inc
xchg
subl
fidivl
and
adc
and
mov
adc
jb
sbb
add
cmp
movsb
jbe
push
sub
xchg
sub
mov
fnstenv
xlat
mov
and
dec
mov
push
in
cs
test
mov
jo
cmp
jp
jae
cmp
inc
dec
pop
adc
mov
sbb
mov
leave
jns
fisubs
movsb
jge
mov
mov
inc
loope
les
leave
pop
dec
fs
pop
test
fiadds
imul
mov
push
mov
shrl
popl
outsl
mov
icebp
xor
insl
roll
dec
and
push
and
in
dec
pusha
aad
jle
mov
and
xor
leave
js
mov
cmp
xchg
je
add
mov
out
mov
call
inc
fs
lods
mov
inc
push
push
loopne
nop
fs
xchg
jl
outsl
fisubl
cmpsl
and
enter
mov
testb
mov
iret
nopl
fstpl
nop
lds
mov
and
ss
and
pop
adc
out
in
mov
cmpsb
aas
adc
xor
pop
or
push
push
add
rolb
push
sub
push
movsl
mov
aam
mov
pushf
js
imul
sub
iret
mov
cmpsb
and
mov
mov
cmpsl
push
iret
jae
or
test
mov
jg
call
bound
or
jmp
sbb
jnp
adc
dec
mov
add
cmp
push
mov
xor
je
xchg
adc
inc
in
roll
push
fdivrp
pop
in
pop
loope
xchg
mov
sub
aad
inc
push
jne
addl
test
and
int3
addr16
cmpl
iret
jmp
push
jae
inc
sbb
cli
push
mov
and
mov
jle
jmp
fists
push
add
xchg
ds
sub
ret
fstpt
mov
in
and
fldl
push
aas
call
sbb
loope
mov
jbe
imul
cmp
push
popa
xchg
push
cld
mov
xor
pop
pop
xchg
mov
mov
push
inc
into
mov
or
sub
inc
jnp
or
imul
std
adc
sti
sti
cs
xchg
mov
mov
test
gs
jne
fwait
and
sub
push
sub
mov
and
popf
mov
sahf
xorb
xchg
in
lret
adc
inc
iret
and
cmp
adc
pop
cmp
clc
mov
push
or
es
dec
adc
mov
out
stc
test
dec
fildll
cmp
pop
mov
in
push
repnz
push
rcl
shlb
dec
movsb
pushf
idivl
clc
xchg
mov
aad
pop
aas
movsb
sbb
sbb
pusha
nop
lea
imul
mov
stos
lret
push
ljmp
push
xor
push
add
add
test
xlat
push
inc
mov
adc
and
add
xchg
add
or
pop
in
push
loopne
add
notl
negb
jnp
adc
cli
fcoms
push
imul
cmp
enter
jp
ret
subps
xchg
rclb
pusha
ds
lret
pmulhuw
outsb
sti
loopne
push
jno
mov
sbb
xchg
sbb
bound
dec
int3
jb
movsl
inc
sub
jb
xchg
inc
dec
sub
lcall
and
lock
lret
daa
jle
into
je
sbb
and
pushl
jecxz
out
pop
inc
int3
jne
movsl
xchg
add
cli
lds
mov
inc
cmp
push
out
test
fdivl
mov
push
jbe
pop
ds
mov
mov
repz
pop
push
bound
cmp
cmp
in
fs
lcall
push
mov
add
popf
pop
icebp
push
ja
and
push
cmc
inc
roll
loopne
mov
stos
and
dec
mov
pop
ficoms
cmp
sbb
add
mov
movsl
mov
lds
lods
js
jg
mov
mov
xchg
fisttpl
adc
fdivs
int3
jb
mov
adc
int
lds
xor
or
hlt
cltd
pop
les
adc
push
jb
jg
mov
fcmovbe
or
out
pop
pop
pop
adc
cmpsw
cmc
xchg
and
mov
add
scas
mov
ljmp
dec
add
push
inc
repnz
xchg
fildl
cmp
pop
in
pop
lret
sub
ljmp
pop
pushf
in
dec
sub
das
loope
add
mov
mov
daa
ljmp
and
inc
cmp
sub
mov
jns
mov
mov
sbb
sbb
insb
jl
mov
cld
hlt
cmp
or
mov
aas
call
js
mov
jo
mov
mov
push
mov
fsubrs
push
cmp
cmpsl
inc
sub
nop
std
data16
je
lods
aam
sbb
mov
push
subb
xchg
sub
sarb
stos
cmp
loopne
pop
push
inc
cs
out
mov
mov
lret
mov
ret
inc
test
cltd
mov
dec
popf
outsl
push
outsl
mov
mov
inc
cmp
js
iret
insb
adc
adc
or
xchg
pop
scas
addr16
sahf
scas
mov
stc
stos
cmp
and
leave
inc
xchg
into
jae
cmp
push
jo
jmp
adcb
pop
lahf
adc
test
jmp
jo
cmp
sahf
in
or
adc
inc
push
fwait
pop
popaw
cld
shlb
jmp
or
jp
and
das
and
mov
testb
shrb
lods
xor
scas
adc
daa
ret
sub
inc
dec
fcoml
mov
andl
xor
adc
mov
mov
push
divb
cltd
mov
loop
faddl
aam
ficomps
mov
mov
mov
mov
xchg
jge
js
iret
cmpsb
mov
jge
test
ret
dec
xor
stos
mov
sbb
push
iret
xchg
mov
mov
xor
xchg
out
dec
sub
filds
sub
aas
mov
fwait
dec
mov
jnp
ret
xlat
decb
ret
adc
sub
in
lahf
jmp
pusha
loopne
dec
fisubrl
inc
mov
mov
mov
stos
js
sar
pushf
mov
pop
cltd
ret
loop
mov
push
push
sbb
test
jns
lods
popf
cs
clc
arpl
mov
es
pushf
sti
xchg
cmp
jo
push
mov
daa
sbb
fwait
std
jbe
std
test
mov
xor
xchg
subb
pop
leave
jecxz
cmp
pusha
insb
out
dec
arpl
or
dec
ja
lds
js
addl
or
sbb
stos
hlt
inc
sti
xor
andb
ficoml
fcmovbe
pop
lahf
cmp
xchg
xchg
mov
sbbl
repz
std
addb
mov
rorb
xchg
lret
cmp
loope
mov
pop
enter
pushf
and
mov
js
in
sub
js
scas
hlt
loopew
fs
mov
mov
repnz
sbb
int
mov
cmc
lret
ja
mov
stos
rclb
into
xchg
ret
inc
call
mov
shll
rcl
jge
or
sbb
mov
cmp
scas
mov
jecxz
dec
dec
ror
lods
add
addr16
rcr
ffreep
adc
mov
or
dec
xor
sub
sub
repz
jg
dec
mov
fldl
leave
jmp
adc
and
ret
or
arpl
mov
mov
flds
jbe
lods
addr16
stc
jp
sbb
xor
mov
sbb
xchg
aaa
ret
xchg
mov
roll
fs
addr16
push
pushf
jne
add
cmp
inc
cwtl
mov
std
sbb
pusha
push
shlb
int
sti
xchg
cmc
mov
mov
fdivrl
loopne
ss
mov
pop
dec
sbb
test
orl
fiadds
daa
sub
adc
iret
cltd
dec
fsub
xlat
mov
lods
pop
ror
or
nop
insb
mov
jl
mov
out
adc
jns
call
adcb
mov
and
ja
frstor
lahf
cwtl
and
in
inc
jl
add
js
xchg
mov
ss
push
rcrb
sbb
xor
pop
xchg
sbb
mov
fisubrl
sahf
fistpl
insb
pop
inc
dec
cltd
out
insb
mov
and
pop
jne
in
fwait
call
and
bound
jl
and
cmp
rclb
jmp
stos
push
pop
dec
xor
push
in
mov
or
mov
adc
sub
add
rcrb
jp
sbb
sbb
sub
aas
xchg
mov
popa
sar
hlt
aam
fwait
dec
icebp
lret
pop
jge
loope
inc
cld
nop
jbe
fmull
aaa
nop
sbb
mov
sbb
rolb
push
inc
xor
adcb
ljmp
mov
pop
cmp
insl
aaa
dec
in
push
or
mov
lret
push
or
icebp
cmp
pusha
inc
gs
insl
lds
pushf
mov
ret
jmp
cmp
sbb
jg
push
leave
rcr
dec
cld
jne
mov
push
jl
cmp
push
and
push
imul
push
pop
out
xor
cmp
lcall
das
mov
cmp
int3
or
push
mov
xor
scas
outsl
ret
dec
out
imul
pusha
xchg
repnz
mov
loopne
loop
lods
popa
pop
mov
jecxz
mov
push
lret
mov
cld
mov
loope
sub
push
or
and
sbb
mov
mov
push
inc
lahf
pop
lret
cld
inc
pop
int3
jb
leave
mov
cli
int3
in
in
inc
negl
mov
hlt
out
push
or
push
jno,pt
sarb
aaa
cwtl
mov
or
fs
imul
popl
lret
cmp
xor
in
into
aaa
aam
push
bound
mov
rcll
jne
popf
ja
popf
fadds
inc
xorb
shll
es
xor
inc
sbb
out
loop,pt
cwtl
cwtl
dec
inc
xor
call
leave
mov
les
lcall
ret
adc
imul
pop
mov
mov
jle
cmp
insl
sarl
sar
adc
in
xor
out
adc
cmp
mov
jg
sub
inc
lret
pushf
fsubl
sub
in
pop
mov
jmp
popf
jae
in
aam
xchg
xor
fcmove
les
lret
outsl
sbb
add
out
pop
xchg
cli
mov
push
nop
ja
dec
les
sti
sbb
or
imul
pushf
sub
push
std
push
and
pop
jp
adc
mov
xor
pop
repz
inc
cmp
fdivs
fwait
jnp
xor
and
scas
inc
dec
fdivl
popa
and
outsl
test
cli
push
js
shrb
test
xlat
hlt
mov
sub
xor
fbstp
push
sti
ret
loope
lods
cmp
inc
pop
cmp
leave
bound
out
ds
lock
inc
sbb
inc
add
in
mov
les
push
iret
pop
out
mov
lahf
js
loopne
fisubrs
adc
int3
jge
jl
sub
jl
fsubrs
fwait
push
aaa
sbb
cmpsw
mov
jo
ljmp
sub
ret
cmp
in
push
aas
leave
lock
add
inc
test
jmp
dec
insl
adc
and
cltd
ds
mov
mov
xchg
jnp
std
gs
int3
mov
and
push
add
fidivl
notl
insb
sarl
add
push
cld
fs
mov
xchg
fcom
mov
loop
arpl
inc
ffreep
in
aaa
and
mov
and
loope
cmp
pop
rcrb
subl
cmp
dec
pop
mov
fcmovne
dec
dec
setl
sbb
mov
push
dec
cmc
int3
icebp
jb
inc
push
xchg
mov
dec
call
sub
xchg
test
je
xor
es
mov
mov
mov
pop
sbb
imul
jns
lds
add
mov
repnz
fisttpl
push
jmp
dec
mov
push
aas
mov
adc
push
enter
mov
enter
scas
mov
inc
sarl
adc
add
or
xor
cld
xor
adc
fsubrp
or
pusha
repz
mov
movsl
testb
or
aam
xchg
add
add
xor
jg
jmp
sbb
stos
jnp
ret
fldcw
mov
cmc
je
fistl
cmpsb
cli
cmpsb
sti
vpmadcswd
pop
sarl
call
push
mov
push
daa
dec
mov
pop
movsb
lret
push
inc
cwtl
jmp
jne
dec
fdivrs
sub
mov
ret
add
or
js
xor
mov
sbb
xchg
or
sti
cli
and
cmpsb
or
mov
sbb
cltd
lahf
xor
ds
pop
mov
jbe
cmp
fldl
lret
add
jle
jno
cmp
mov
cli
xchg
das
outsb
ret
xchg
pop
mov
outsb
out
scas
std
xchg
in
cwtl
cmc
xchg
push
mov
mov
cmpsb
cld
mov
int3
es
fisubrs
jmp
enter
enter
aam
pop
lds
lcall
incl
insb
jae
mov
dec
sub
xlat
xchg
sub
mov
scas
add
aas
mov
out
mov
xchg
mov
add
or
jns
jbe
jle
loopne
adc
out
sbb
repnz
cltd
dec
lea
adc
push
data16
sbb
loop
and
xchg
jge
sub
in
fs
mov
addl
adc
mov
mov
add
or
push
js
insb
xor
in
and
xor
push
ret
adc
arpl
inc
and
cmp
fidivs
push
aaa
or
scas
dec
pop
leave
aam
pop
add
test
shrb
notl
dec
pop
in
sub
sahf
and
inc
jns
not
sub
out
or
xchg
push
dec
icebp
or
aaa
mov
ss
cld
sbb
jg
fldt
mov
sahf
inc
sbb
arpl
sarb
xchg
js
les
je
iret
jmp
cmpsl
pop
lret
inc
mov
xor
xchg
inc
jns
cmp
test
push
dec
outsl
cld
adcl
xor
dec
adc
arpl
in
ljmp
sti
pop
mov
dec
in
loop
mov
rorb
sub
lods
ljmp
adc
pop
jmp
jbe
roll
sbb
pushf
adc
lods
aam
push
andl
ficomps
cmp
js
push
pop
fistpl
int
mov
or
ja
or
rcrl
fldl
push
in
test
es
test
sbb
jmp
jno
and
cmpsl
bound
inc
mov
push
adc
inc
xchg
mov
add
xor
push
movsl
and
pop
sub
push
or
sub
repz
xchg
ffree
jle
pcmpeqb
gs
or
fistpl
push
dec
mov
mov
sarl
dec
ljmp
adc
push
das
and
push
push
jne
aas
stc
add
push
add
pop
aad
cmp
push
inc
push
push
fcomps
cld
dec
je,pt
jmp
xor
mov
push
jno
stc
shrb
adc
or
fidivrs
stos
push
xchg
sub
fistpl
les
pop
xor
adc
push
cmp
call
mov
cmc
mov
sbb
inc
mov
add
fmul
outsb
dec
sbb
mov
ret
jp
mov
aas
fwait
jbe
mov
popf
dec
push
testl
xlat
std
push
clc
icebp
data16
rcr
insl
add
scas
ret
mov
pop
fmul
lods
ret
inc
xchg
jns
sbb
xor
jb
pop
dec
jbe
inc
inc
les
and
data16
gs
xor
cmp
adc
insb
sbb
hlt
push
cmpb
cmpsl
jp
es
testb
in
jno
call
xorb
sahf
push
js
dec
rcll
mov
lea
or
cmp
sub
dec
push
adc
or
jge
insb
sub
push
cmp
adc
and
push
adc
repnz
and
or
cwtl
lods
pop
les
cli
adc
mov
and
inc
or
lret
les
dec
into
js
mov
out
mov
call
lcall
dec
ja
imul
out
jl
ljmp
add
outsl
and
cltd
leave
test
lock
clc
and
imul
outsl
shr
mov
popf
aas
frstor
shr
push
push
jmp
mov
xchg
lods
andl
stos
roll
out
testb
rol
aas
jbe
insl
int3
fwait
movsl
or
add
inc
inc
aam
mov
lods
cli
sbb
xor
cpuid
test
xchg
cmpsl
jecxz
pop
test
push
sti
in
sub
popf
dec
and
mov
pop
mov
bound
imul
stos
mov
int3
or
push
scas
shrl
xchg
push
dec
jo
jns
pop
push
repz
outsl
outsb
loope
icebp
aas
into
shrl
pop
jae
repnz
sbb
add
push
notl
jns
outsb
out
dec
loop
fisttps
ret
mov
test
jae
ret
stos
push
test
pop
dec
jle
mov
sbb
push
lods
mov
pslld
and
mov
in
lret
pushf
stos
mov
dec
fstl
mov
cmp
sbb
add
push
add
push
inc
push
mov
ret
cmp
lods
shll
jae
inc
add
push
add
dec
rcrl
mov
and
or
push
push
sub
lea
out
into
push
xchg
notl
or
mov
mov
adc
mov
loope
xor
jl
pop
push
or
push
ret
insb
sbb
pop
fnstenv
cmp
pop
popf
jb
aad
jno
add
push
pop
dec
fmull
popa
add
add
xlat
imul
stc
mov
xor
fimuls
cmp
and
in
std
dec
xor
mov
adc
jbe
xor
lea
mov
ja
and
sub
stos
cli
and
push
pushf
in
and
enter
dec
loop
or
daa
xchg
into
jmp
jo
std
mov
gs
test
enter
rorl
xchg
mov
mov
pop
out
sbb
cs
mov
xor
aaa
ljmp
xchg
xchg
mov
push
sub
inc
cmp
add
mov
push
imull
pop
inc
xor
cld
loope
es
in
sbb
adc
or
and
mov
icebp
lods
or
pop
out
mov
lcall
mov
push
push
iret
out
cmp
inc
leave
jmp
insb
and
dec
insb
jge
cmp
imul
pop
mov
sub
cmpsl
scas
cmp
mov
push
popf
mov
dec
add
idivb
sahf
or
push
call
or
test
outsl
repz
rolb
insl
lock
popf
imull
sbb
sbb
into
addl
lods
int
call
enter
mov
stc
bound
push
ret
cmp
stc
jne
sti
fimull
lods
pop
addl
je
pop
xchg
adc
ja
push
xor
bound
adc
cltd
fstp
jle
push
jnp
cmp
inc
iret
adc
jmp
dec
sbb
mov
lea
repnz
test
icebp
or
inc
dec
add
lahf
pop
mov
cltd
mov
pop
inc
cmc
into
lret
int3
mov
inc
jno
test
sti
or
xchg
push
push
jp
and
div
mov
inc
xchg
mov
les
or
fcoms
adc
stc
pop
sbb
cltd
cmp
js
test
xchg
inc
cmp
mov
dec
sbb
fldt
add
cwtl
das
ds
add
push
mov
and
mov
cltd
aaa
xchg
cmp
inc
adc
cmp
cld
xlat
jns
ret
push
xchg
and
lods
out
sub
pop
arpl
subb
adc
daa
adc
inc
mov
cmp
leave
cwtl
lcall
xor
sar
cwtl
push
imul
mov
or
movsb
add
xchg
xor
pop
lret
sub
lret
outsb
mov
stc
fnstcw
idivl
mov
sbb
add
int
mov
mov
lahf
addl
push
pop
jp
pop
bound
cmc
dec
add
dec
in
call
adc
inc
xor
mov
scas
and
mov
icebp
loop
cmpsb
movsl
fcompl
add
or
aam
push
outsl
das
or
popl
pushf
jo
adc
and
ja
cmp
xor
dec
pop
das
jp
in
xchg
fiaddl
mov
mov
sbb
or
cmp
or
mov
cld
imul
dec
mov
pop
jle
rclb
xchg
pop
mov
pop
and
xchg
jecxz
test
in
push
cltd
pop
or
adc
and
inc
mov
je
jne
fwait
incb
and
shrl
cmc
stos
pop
mov
adc
scas
adc
stos
pusha
shl
push
and
sub
add
sbb
xor
mov
ja
add
dec
adc
sar
aaa
jo
inc
outsl
aam
xchg
push
call
or
sbb
sub
mov
sub
fcomip
xchg
jnp
mov
xchg
lahf
sar
bound
je
cmp
mov
jmp
icebp
loope
cwtl
in
adc
test
hlt
cmp
ret
jl
sub
stc
mov
jl
testb
inc
jp
rcrl
push
icebp
in
sub
mov
out
mov
xchg
sub
testl
xchg
call
stc
push
lret
cmpsb
mov
and
inc
xor
mov
leave
sbb
repnz
add
movsb
fcomps
sub
push
inc
aas
jne
or
cld
mov
hlt
iret
mov
addl
adc
cmpsl
xchg
sub
cmp
sbb
cmp
xchg
lock
pushf
testb
or
dec
test
pusha
mov
pop
push
les
outsb
pop
jbe
iret
dec
sarb
mov
ror
sub
sub
loop
scas
aas
bound
das
test
popa
std
fidivrl
ljmp
dec
xor
int
adc
mov
sarl
inc
scas
out
pop
daa
cmpsl
fwait
cmc
sahf
pop
dec
add
cmpsl
cmp
mov
shll
dec
outsl
mov
cmp
in
mov
pop
cmpsb
call
mov
dec
add
dec
inc
pop
inc
adc
mov
push
es
imul
sbb
inc
dec
or
mov
jo
fisttps
imul
pop
jg
in
xlat
fistpll
inc
lods
pop
or
mov
cli
sub
pop
shrl
mov
orb
jnp
outsl
ffreep
inc
out
xchg
addr16
dec
idivl
sub
pushf
cltd
mov
mov
cmp
in
add
sar
jp
popf
out
icebp
xchg
rcll
mov
cmp
gs
ret
and
and
jb
leave
ret
mov
sbbl
xchg
test
out
outsb
fimull
jae
inc
xchg
sbb
in
aam
xor
scas
jg
push
xor
clc
repnz
push
out
sbb
iret
rclb
test
stos
mov
mov
fdivr
mov
stc
les
jbe
adcb
xlat
faddp
xchg
popl
fnstcw
mov
cltd
movsl
pop
aas
ret
mov
adc
xor
sbb
or
adc
addl
fnstsw
xchg
clc
inc
push
mov
rcr
daa
adc
das
sbb
stos
out
xchg
cltd
adc
mov
mov
or
pop
scas
xor
pop
cmp
and
leave
fs
iret
push
xchg
aas
sbb
xchg
ret
sub
push
lea
shll
out
xchg
xor
jae
mov
mov
int
inc
pop
fstps
add
jb
fnstsw
add
shll
lds
lret
fs
pop
push
dec
dec
lock
ljmp
aas
repnz
les
cltd
pop
inc
xor
cmc
xchg
into
mov
lahf
loop
repz
mov
pop
cmp
xor
push
mov
xchg
rorl
cmp
call
movsl
mov
popa
pop
or
jmp
pop
cmp
aas
jno
sahf
pop
and
or
inc
stc
clc
outsb
cs
lods
bound
add
jno
pop
repnz
add
movsl
pop
push
std
pop
std
out
addr16
or
ja
lods
sbb
cmp
je
in
xchg
imul
adc
out
sbb
jg
xor
sbb
xchg
stos
dec
ds
imul
push
es
andl
call
shrb
dec
add
push
ret
imul
cli
and
loop
mov
jle
mov
test
rcrb
movsb
roll
xorb
mov
sbb
push
test
xor
testb
ljmp
mul
xchg
pop
movsb
fwait
push
push
jne
xchg
es
pusha
mov
cwtl
or
adc
movl
inc
repnz
sbb
push
mov
shrb
sbb
leave
or
jb
pop
mov
jp
push
mov
fsubrs
movsl
pop
sub
andb
cmp
ja
pop
jb
negb
jg
sti
int
jnp
lret
and
jns
rcll
lds
mul
in
xor
aas
lea
icebp
loope
xchg
push
pop
test
jne
inc
addr16
and
inc
js
inc
push
daa
or
jmp
jb
into
das
xor
jge
cmp
and
mov
test
push
andb
hlt
xor
mov
and
xchg
lret
and
cmp
sahf
xor
and
adc
fcmovnb
nopl
iret
adc
popf
pusha
jns
scas
cltd
sbb
mov
icebp
push
fdivrl
cmc
and
in
cltd
imul
sbb
fcomps
jge
jae
jbe
shr
test
push
ret
add
shl
into
push
xor
adc
arpl
xchg
xchg
pop
jns
pop
pusha
xchg
shrb
test
repz
pop
shll
arpl
cmpsb
js
into
xlat
out
popf
push
sub
push
jns
mov
or
ud0
jl
xchg
int
fs
jmp
imul
idivl
and
pop
pop
dec
mov
cltd
pop
outsb
adc
and
adcb
mov
arpl
call
push
jae
imul
adc
iret
shll
dec
outsl
ret
or
cmp
mov
pop
cmp
push
rorb
sbb
inc
popa
or
daa
insl
mov
pop
in
add
dec
inc
clc
push
dec
lahf
adc
ljmp
loopne
xchg
pop
loope
outsb
in
aam
aaa
and
mov
data16
push
xor
cmp
mov
stc
mov
lods
pop
testl
daa
stos
popa
les
xchg
imul
dec
and
push
je
ja
sbb
test
push
imul
push
mov
sub
or
mov
adc
fld
test
sub
mov
jmp
jp
outsl
out
fidivl
push
jbe
bound
lahf
sbb
dec
fwait
aad
mov
sbb
sub
sub
ret
mov
hlt
jnp
fadds
test
pop
jae
stc
inc
jns,pt
push
jg
popa
dec
mov
sbb
jo
movsb
mov
mov
push
int
or
inc
test
loopne
xchg
popf
cmp
ds
cltd
call
fistpll
inc
inc
inc
movsl
jl
fstp
push
arpl
jecxz
push
int
or
lods
aaa
rcll
cmp
inc
dec
sbb
jb
sti
pushf
movsl
pop
jmp
in
iret
mov
mov
shrb
add
dec
or
gs
sub
fistpl
jne
cmp
mov
xor
lods
test
and
cld
mov
push
sbb
push
jl
addr16
daa
cli
hlt
pop
push
arpl
stos
and
push
add
mov
inc
idivl
add
push
jle
adc
mov
add
rcrl
aas
sti
lret
dec
roll
add
hlt
xchg
int
sbb
hlt
das
ljmp
push
xchg
js
test
mov
and
testb
inc
and
inc
xor
and
imulb
cmpsb
xchg
sbb
xor
adcb
not
pop
sbb
gs
out
out
jbe
cli
and
and
hlt
jnp
jnp
mov
sub
pop
push
into
int3
lret
dec
data16
lret
inc
jp
xor
cltd
aam
rol
pandn
mov
xor
jg
inc
mov
xchg
pop
inc
sahf
xchg
call
lret
fldt
in
inc
jae
xchg
and
popf
cltd
out
sbb
mov
outsb
faddl
lods
shrb
sub
lret
mov
repnz
pop
ficoms
and
and
jae
xorb
and
cmpsb
stos
iret
arpl
and
add
xchg
outsb
mov
push
lock
in
insb
cmc
bound
or
and
in
inc
mov
or
push
push
xor
cmp
xchg
cmc
sub
pusha
repnz
fs
lock
in
iret
addr16
push
mov
push
add
leave
cli
inc
cmpl
dec
pop
insl
xchg
sub
pushf
fdiv
mov
fidivrs
xchg
mov
pop
sbb
jp
aad
pushf
shll
inc
jmp
pop
pop
jo
mov
cmp
mov
push
push
push
dec
mov
inc
insb
mov
movlps
sbb
lock
jnp
cmpsb
sub
lods
mov
imul
enter
movsl
es
pushl
adc
mov
cmp
mul
mov
sti
push
xchg
pop
push
dec
jno
scas
stos
xchg
and
inc
movsb
pop
push
aad
in
push
popa
aaa
sub
popf
ja
stos
lods
push
inc
cs
push
cltd
in
test
dec
scas
imul
lret
push
lods
adcb
pop
mov
and
mov
clc
pop
xor
repz
mov
cmp
andl
rclb
push
add
xor
es
cmpsb
iret
push
jp
push
xlat
jnp
sti
mov
sbb
sub
jg
mov
ja
cmp
pop
sub
mov
idiv
mulb
jp
scas
push
sbb
das
xor
mov
and
mov
adc
pusha
dec
push
mov
xchg
xor
popl
aaa
mov
bound
cltd
cmp
gs
push
cmp
mov
negl
add
fbld
xlat
call
jns
cwtl
scas
pop
mov
mov
aam
bound
sarb
inc
daa
stc
test
push
xchg
jne
in
mov
and
sub
addb
fcoms
clc
std
movsb
les
add
jb
std
loope
add
xor
fs
in
inc
scas
lds
push
mov
add
fbld
mov
mov
cmp
dec
insl
xor
ljmp
lea
inc
jbe
jp
mov
rorb
lret
popf
sti
dec
or
xor
jg
jle
lock
sub
cmp
jge
aam
repz
jne
out
pop
mov
lahf
push
mov
xor
lock
movsb
enter
test
inc
hlt
mov
sub
lds
xor
push
mov
je
lcall
std
rol
lods
cld
les
sub
or
in
sarb
jne
rclb
xor
icebp
sti
sbb
ljmp
inc
push
sbb
subb
push
dec
call
popa
cmp
adc
imul
xchg
pop
or
and
cmp
jg
xchg
sub
mov
fsubl
imulb
push
sub
dec
add
in
repz
test
loop
fdivr
outsl
xor
mov
movsl
jge
cmpsb
sub
push
adc
test
inc
mov
add
pop
sub
jmp
inc
push
ret
mov
push
fs
sti
mov
add
adcb
pop
jg
jp
inc
stos
test
adc
xor
push
mov
les
push
add
fs
push
sub
ret
and
dec
lods
arpl
int3
xchg
dec
movl
push
sub
lret
test
adc
cmp
fbld
daa
das
inc
inc
in
sbb
and
movd
push
outsl
push
push
mov
mov
xchg
dec
sti
xlat
push
mov
mov
cmpsl
pop
test
stos
pusha
or
es
scas
cmp
fsubrs
push
imul
jne
mov
dec
push
mov
jne
jo
arpl
std
cwtl
shll
cmpsl
sub
push
add
inc
and
inc
ret
test
shrl
cmpsb
dec
cmp
sti
sbb
sbbl
pop
and
fs
dec
in
imul
xor
ror
inc
mov
je
es
jge
fwait
imull
or
sub
adc
cmpsl
std
push
loop
loop
into
mov
xor
sbb
inc
mov
mov
nop
lret
mov
push
push
push
fcomp
xlat
dec
shrl
mov
mov
call
jnp
mov
or
xchg
mov
pop
jbe
mov
ret
repnz
jns
loopne
aas
shr
nop
mov
jp
jl
xchg
mov
adc
xor
lahf
pop
daa
movsb
sbb
test
int
mov
cld
or
outsb
pop
inc
rorb
xchg
clc
pop
inc
mov
test
mov
mov
mov
addr16
imul
loopne
aad
test
xor
fnstenv
pop
cmp
jecxz
add
scas
dec
fs
jmp
dec
xchg
aas
cs
lds
or
ljmp
das
mov
addr16
xorl
push
loop
xchg
filds
or
sarl
and
xor
pop
jle
and
xor
mov
xchg
testl
fmuls
mov
jecxz
sar
stc
cmpsl
jbe
movsb
repz
mov
js
sbb
pop
sub
outsb
push
rcll
repnz
inc
jnp
mov
lods
adc
sbb
loope
in
xchg
arpl
and
push
sbb
push
lret
jmp
pop
cmp
shll
cmp
test
fnstcw
inc
ja
pop
imul
add
push
jmp
sub
jnp
test
mov
sub
xor
mov
test
hlt
sbb
aaa
idivb
shl
outsb
push
icebp
pop
jle
mov
cmp
into
fwait
mov
into
jb
orb
gs
push
xchg
mov
pop
in
ret
push
dec
add
loop
aam
lahf
xchg
loopne
push
xor
dec
sbb
inc
mov
imul
shrb
sbb
xor
dec
push
add
mov
ss
jge
fnstcw
dec
lods
iret
scas
xchg
xchg
out
push
cmpsl
xchg
adc
std
push
mov
xor
jo
xor
jge
push
in
aaa
inc
cmp
xchg
cwtl
cs
mov
cmp
int3
push
jae
incl
aaa
call
and
jae
push
arpl
pop
mov
negl
cli
es
push
mov
adc
data16
sti
fldt
iret
sbb
lds
or
mov
subb
in
mov
iret
ret
pop
js
xorl
xchg
push
inc
mov
push
into
inc
xor
mov
mov
dec
xchg
fdivs
jg
dec
jb
pop
sahf
mov
in
jno
out
ss
inc
mov
mov
push
xor
ljmp
pop
mov
loope
cltd
mov
aaa
xchg
aas
nop
mov
test
inc
int
sbb
xchg
shll
push
mov
jp
mull
adc
add
ret
xchg
stos
mov
cmp
pop
pop
mov
std
cmp
xchg
ljmp
and
imul
xchg
add
cli
lret
mov
cmp
mov
push
orb
shrb
xchg
add
sbb
lret
aas
outsl
cli
push
xchg
or
mov
pop
jg
xlat
jns
sti
fwait
push
dec
fs
test
mov
insb
and
daa
sbb
lcall
cmpsb
arpl
add
pop
sbb
fs
jg
leave
pop
popf
mov
dec
repnz
xor
sarl
and
dec
or
lahf
lds
pop
lahf
sarb
pop
jle
outsl
lahf
push
mov
pushl
push
clc
or
push
jnp
push
pop
pushl
cltd
sub
imul
sub
xchg
pop
mov
add
sub
cs
xor
and
jmp
rorl
faddl
dec
cmp
dec
or
add
mov
ficoml
stos
and
inc
mov
sar
pop
ljmp
in
mov
lods
or
bound
ss
hlt
adc
repz
xchg
cmpb
aaa
loopne
jmp
bound
dec
cmp
sbb
mov
sub
add
mov
jbe
aas
inc
testl
jno
in
push
or
outsb
dec
popa
mov
frstor
cmp
les
fimull
or
js
jne
shlb
and
sub
sti
sbb
sub
or
js
dec
dec
xor
mov
sub
mov
lahf
fstpt
sub
mov
mov
shr
test
fistps
insb
xchg
fwait
lret
sti
imul
inc
fmull
loope
jae
pop
ja
adc
fistps
cmc
or
pop
fnstsw
inc
outsb
adc
pop
leave
dec
or
fiadds
leave
pusha
ja
in
out
shll
cltd
cmpsl
outsl
js
jo
insb
rorl
lahf
mov
jbe
repz
mov
jp
dec
xor
adc
je
push
lock
and
xchg
lods
inc
cld
jae
test
jp
out
xchg
repz
nop
lcall
or
push
inc
mov
cmp
xchg
mov
in
aam
add
arpl
push
pop
sub
inc
cld
and
sub
sub
and
inc
mov
out
dec
mov
push
sti
jno
decl
lret
lock
sbb
nop
inc
sub
cli
shll
js
adc
das
cmp
inc
xchg
sub
dec
jg
jecxz
clc
and
sub
or
dec
sbb
into
lea
ljmp
mov
jge
pop
fidivl
pop
add
sti
jle
xchg
jno
jb
loopne
shll
cld
inc
cmp
mov
cmp
mov
and
shlb
repz
sbbl
and
out
scas
jmp
add
xor
mov
cld
repz
in
jb
dec
int
sub
jg
mov
loopne
out
mov
pop
push
xchg
add
sarl
pop
rorb
xchg
fnsaves
das
adc
push
xchg
and
scas
sahf
inc
int
dec
mov
adc
mov
pop
xor
xor
jo
out
les
adc
cmp
jb
int3
cmpsb
frstor
inc
sbb
jp
fdiv
xchg
movsl
sub
mov
mulb
in
jnp
loope
test
dec
mov
in
jecxz
cmp
loop
xor
jbe
jg
pusha
pushf
pusha
fnstenv
orl
in
hlt
cmp
addr16
sbb
and
cwtl
fiadds
add
stos
xlat
xchg
sti
mov
inc
xor
inc
shll
cmpxchg
in
xchg
or
shlb
mov
loopne
mov
mov
jbe
sub
aam
dec
mov
outsb
mov
cmpb
repnz
cli
pop
sahf
ja
outsb
mov
fsubp
push
repz
jb
repz
xchg
push
daa
jle
dec
push
repz
jge
cmp
andb
pusha
mov
addr16
and
popa
insb
loop
cli
add
push
mov
daa
mov
cmp
xchg
enter
fadds
dec
lea
pusha
jnp
fisttps
test
adc
mov
sbb
dec
mov
jp
cmp
cli
in
popa
inc
je
mov
fsubrl
in
jno
adc
ror
mov
sahf
xor
and
push
dec
pushf
inc
repz
add
loopne
sbb
int3
jecxz
fs
in
push
inc
cmc
mov
rcr
pop
jae
or
sub
and
mov
subb
push
sub
push
outsl
push
pop
mov
mov
out
push
xchg
iret
add
xchg
add
push
daa
iret
adc
gs
xor
pop
stos
or
mov
xchg
cmc
and
sti
mov
push
pop
cmpsb
push
dec
js
pushf
mov
xchg
lret
cmp
inc
push
or
inc
jmp
adc
add
xchg
push
mov
arpl
int
pop
outsb
fcompl
add
in
cmp
xor
test
lock
or
test
imul
jle
test
clc
pushf
add
dec
mov
inc
inc
jnp
scas
jno
push
push
lds
repz
lods
cmp
push
mov
add
in
pop
mov
out
leave
or
popf
lods
and
adc
cmp
js
dec
mov
mov
das
aaa
icebp
insl
mov
sbb
cmp
leave
add
push
mov
subl
idiv
add
int3
mov
jae
mov
inc
mov
push
scas
push
aas
out
imulb
cli
shll
pop
push
fcomp
subb
in
stc
push
je
adc
je
sbb
pop
int3
cmp
mov
divb
inc
ss
mov
je
sub
out
gs
loope
mov
mov
add
sub
or
mov
inc
sbb
push
pop
mov
inc
push
mov
gs
ljmp
inc
mov
frstor
sbb
stos
fimuls
cmp
sbb
pop
xchg
and
cmc
ljmp
lcall
roll
and
jo
out
in
rolb
mov
stos
mov
popf
mov
xlat
aas
dec
xchg
ret
in
jg
or
js,pt
xchg
xlat
mov
std
enter
test
cmpsb
vmovaps
mov
sbb
mov
js
test
xor
mov
aad
dec
mov
add
outsb
jg
sbb
scas
push
jo
in
add
sahf
xor
jle
pop
jl
mov
adc
sub
ss
fstpt
mov
jmp
push
rclb
push
adc
push
lcall
inc
decb
movsb
aas
cmpsb
push
pop
sbbb
mov
fnstcw
dec
jge
cmpsb
insb
test
inc
jg
sub
aas
sbb
std
mov
movsl
in
xor
lds
fimuls
mov
push
shrl
mov
mov
sbb
xor
push
stc
fwait
adc
addr16
fwait
push
scas
push
dec
scas
cmpsl
movsl
lahf
fcoml
sbb
pop
jbe
mov
xchg
cmp
std
xchg
orl
adc
ret
mov
es
dec
bound
testl
adc
mov
inc
scas
std
imulb
sahf
and
mov
popf
sub
imul
push
ret
mov
and
sti
repnz
test
and
cmp
paddsw
cpuid
pop
mov
xchg
push
add
ljmp
mov
lcall
or
shll
mov
lcall
mov
pop
ds
or
les
loope
mov
adcb
dec
rcrl
cmp
pop
arpl
and
inc
aaa
test
cs
sub
sub
ret
inc
test
adc
fsubrl
jo
andb
outsb
mov
in
lds
pusha
jle
adc
popf
jns
stos
mov
add
mov
icebp
xchg
cmp
xchg
lahf
xchg
sub
inc
imul
dec
xchg
xchg
pop
or
and
shlb
jne
pop
lods
xchg
inc
xchg
pop
xor
pop
into
xor
pusha
xor
dec
mov
movsl
pop
das
adc
je
test
push
and
jo
pushf
stc
stc
adc
xor
cmp
xor
cmpb
mov
ficoms
leave
lods
inc
es
in
rorb
inc
jae
mov
mov
movsl
xchg
and
mov
push
mov
ret
inc
insl
xor
popa
xchg
into
xchg
adc
lock
hlt
xorb
insb
jl
jae
push
sub
xlat
cmp
and
sub
lods
fcompl
inc
push
stc
cltd
leave
and
scas
ljmp
int
sarl
aas
inc
cmp
enter
cmp
adc
push
jbe
int3
les
test
cmpsl
adc
pop
dec
sub
mov
scas
mov
out
and
mov
test
mov
mov
cli
sbb
adc
imul
pop
xor
mov
scas
xchg
mov
mov
adc
fdivrs
pop
adc
inc
aas
fwait
sbb
adc
add
ret
adc
or
push
pusha
cmp
cmp
pop
mov
pop
aad
xlat
shrb
gs
sub
iret
outsl
mov
imul
test
adc
inc
mov
pop
pop
inc
push
fbld
jecxz
popf
lods
bound
enter
inc
sub
movsb
jmp
rorl
mov
cli
mov
roll
push
das
sbb
dec
repz
sbb
adc
cmp
dec
adcb
jnp
sbb
push
jle
adc
dec
jne
mov
mov
xchg
pusha
inc
fstpt
cmp
out
dec
mov
and
int3
imul
pushf
lods
imul
jbe
and
hlt
mov
push
mov
dec
pop
unpcklps
notb
dec
mov
shlw
sbb
jecxz
pmullw
jbe
cmpb
xchg
repz
inc
jmp
out
scas
gs
sbb
out
cwtl
call
pusha
add
mov
adc
sub
push
xchg
cmp
push
gs
popa
paddd
imul
cmp
cmp
cmp
test
mov
lcall
or
mov
mov
push
and
cmp
negb
dec
outsl
adc
jl
xchg
xchg
mov
mov
dec
out
xor
inc
nop
xchg
add
int3
aas
and
popa
lahf
xor
repnz
or
inc
mov
jne
je
addr16
pop
ds
inc
sbb
xor
pop
xor
popf
sub
in
call
jle
cmp
enter
dec
in
out
fistps
and
mov
outsb
xor
lock
push
insb
xor
pop
ret
dec
and
push
clc
pop
orb
scas
pop
jne,pn
int3
in
dec
and
mov
das
pop
call
pop
push
mov
pop
dec
sub
xor
mov
cmpsl
mov
adc
dec
mov
sti
ljmp
test
ret
inc
cmpsl
push
inc
pusha
fcmovnb
push
test
lods
repnz
push
or
cmp
les
cltd
push
xor
aaa
and
jo
fs
push
gs
test
cmp
cmpsb
xlat
adc
fnstcw
jbe
test
sbb
jl
pop
fldenv
cmp
push
fsub
xor
ret
in
mov
jp
imul
int
and
sti
dec
inc
cmpsb
mov
ret
jmp
lods
add
jle
pop
add
xchg
fmul
and
pop
pop
popf
insl
fwait
inc
sub
and
ret
jae
mov
in
push
mov
jns
cwtl
pop
pop
ret
pop
fmul
int3
ret
jmp
inc
sub
push
in
scas
sahf
outsl
xor
cwtl
xchg
sub
loop
cmpsl
lcall
pop
sub
insl
jg
notb
stc
ret
outsb
dec
or
addb
mov
jnp
shlb
dec
adc
mov
jno,pn
mov
xchg
xchg
push
add
xchg
inc
mov
push
jo
mov
mov
add
call
idiv
arpl
mov
sub
pushf
dec
lret
jno
les
rcll
inc
sub
lods
mov
insl
fisttpll
inc
gs
mov
pop
jo
adc
outsl
sarl
mov
dec
fdivrp
xor
and
and
stc
les
cmp
stos
jns
repnz
cli
pop
or
push
pop
divl
loopne
jbe
sub
xchg
mov
sti
outsb
popf
dec
popf
out
cmp
cmpl
test
mov
xchg
enter
mov
or
flds
cli
movsb
mov
add
dec
cmp
aas
in
shlb
mov
pop
sub
adc
jae
xchg
scas
dec
and
dec
push
test
inc
or
cwtl
jle
jp
mov
mov
jno
push
cmp
out
jno
sbb
or
ds
les
mov
scas
dec
std
push
andl
mov
arpl
loope
mov
mov
or
outsl
dec
dec
xchg
push
loop
mov
adc
insb
aas
daa
or
add
jbe
push
and
inc
adc
shrl
mov
jge
fisubs
imul
pushf
adc
cld
pushf
pop
push
xlat
push
lahf
movsl
mov
iret
popf
inc
xchg
jecxz
hlt
xor
cmc
mov
rorl
inc
jp
add
rcr
scas
adc
push
insb
push
inc
push
jmp
shlb
adc
jnp,pt
sub
nop
cmp
js
cwtl
jnp
fistpl
ss
jle
or
mov
lret
xchg
and
xchg
add
xchg
jg
mov
xlat
stos
xor
dec
and
pop
insl
scas
aaa
imul
fmull
movl
xchg
jae
mov
mov
fcoml
sbb
mov
mov
in
fs
pop
add
jno
dec
mov
jne
out
add
nop
insl
jns
xchg
inc
cwtl
int
mov
inc
jno
adc
movsl
xchg
pop
loop
ss
cmpsb
addl
in
add
sti
lea
adc
inc
dec
imul
mov
xchg
or
jo
inc
hlt
mov
lods
adc
dec
out
in
inc
ss
cltd
push
jecxz
push
sub
sahf
stc
mov
xlat
int3
cld
inc
std
add
fs
aaa
int
enter
sub
xor
scas
sahf
je
adc
loopne
ret
xchg
fidivl
imul
ss
out
add
mov
lods
push
push
mov
adcl
in
push
lods
js
cmp
clc
int
add
dec
or
cmp
inc
out
push
mov
mov
fidivrl
ret
cs
xchg
and
pop
std
fdivrs
popf
adc
adc
ret
fnsave
das
cmc
add
push
and
mov
imul
fwait
stos
sub
xchg
ljmp
dec
mov
adc
mov
jo
addr16
loop
nop
mov
mov
dec
les
sbb
fwait
cmp
mov
sbb
jb
ss
arpl
mov
xor
sbb
insl
pusha
push
pop
cmp
les
pop
cmp
mov
xor
fimull
out
in
lds
mov
lds
cmp
shlb
mov
es
aad
outsl
pushf
int3
out
fisubrs
pop
pop
das
pop
add
movsb
inc
xchg
inc
outsl
jecxz
mov
adc
cmc
mov
out
mov
bound
pop
jno
sahf
mov
cmpsl
fdivrl
aaa
cli
outsl
fisttpll
fsubs
pusha
fisubl
dec
enter
je
loop
push
aas
arpl
scas
out
sub
mov
dec
cmp
sub
xor
sar
out
lretw
jo
pop
test
es
mov
xchg
mov
cmp
mov
jmp
or
adc
mov
mov
inc
mov
pop
cmp
mov
outsl
mov
cli
push
frstor
xlat
cwtl
jbe
jb
sarl
cmp
pop
adc
fs
and
dec
or
push
movaps
ja
popa
inc
ljmp
pop
sub
inc
inc
out
in
xchg
lahf
cmp
add
jmp
dec
or
ljmp
xchg
push
xchg
popa
pop
sahf
mov
push
push
xorl
xor
mov
sti
jo
sbb
or
movsb
push
push
std
push
loope
xchg
push
ret
lret
lods
rcll
imul
es
add
idivb
adc
out
sub
dec
fisubrs
mov
inc
icebp
lea
cmp
test
xchg
out
mov
arpl
insl
jb
lods
into
fwait
inc
ljmp
push
nop
testb
pop
fs
adc
jge
test
sbb
std
mov
std
and
jnp
mov
jge
cmp
jge
cmp
inc
pushf
adc
sbb
pop
pop
cs
and
push
add
repz
dec
xchg
aas
inc
jmp
cmp
leave
out
lock
pop
mov
jp
test
xor
scas
push
and
adc
sub
fs
shrl
cmp
in
jb
imul
call
mov
dec
loop
pop
aas
gs
dec
mov
mov
or
cltd
push
mov
jecxz
jmp
jne
xchg
and
imul
push
add
xor
cld
jp
adc
adc
push
inc
test
dec
sbb
xchg
jo
sbb
xchg
push
in
sub
mov
sub
or
adcl
fimull
lcall
push
jnp
int
mov
mov
pop
fnsave
pop
xor
dec
dec
or
test
add
xor
fs
aas
xchg
jmp
xchg
fisubrl
fisubrs
inc
hlt
movsl
repz
dec
add
aad
fsubl
sbb
pop
and
and
sub
mov
into
jecxz
jnp
dec
xchg
cmp
gs
lods
aas
hlt
xchg
sub
ret
mov
add
add
dec
divl
out
scas
push
push
push
cltd
push
sarl
test
int
sti
sbb
cli
sub
ljmp
or
int3
push
pop
cmp
and
push
adc
mov
jge
pop
cmc
imul
xchg
in
jge
data16
jg
jbe
hlt
add
sbb
cltd
mov
mov
movsl
idiv
fs
lods
lcall
dec
adc
mov
dec
sub
jnp
or
mov
loope
icebp
fwait
repnz
xchg
xchg
and
aas
xchg
push
jb
sub
xchg
push
in
clc
loope
xchg
outsl
jo
repz
scas
or
icebp
jecxz
movsb
cmpsl
mov
loope
inc
jbe
fcoms
cmp
sub
push
jg
subb
stos
adc
call
sub
sub
sub
ja
mov
xlat
add
jbe
test
insl
js
pop
pop
inc
sub
dec
jle
push
mov
sbb
add
shrb
sbb
cmp
sahf
testb
dec
push
movsl
pushf
inc
aaa
test
jge
shll
hlt
mov
int
loop
sahf
push
daa
add
call
gs
jl
sub
cmpsl
int3
mov
lahf
adc
sbb
cs
out
call
xchg
fcom
add
nop
js
push
cwtl
or
lcall
pop
jmp
sub
sub
sub
mov
xor
mov
iret
daa
push
test
mov
add
lock
jne
cmp
cltd
leave
leave
cmp
xchg
sub
sub
orb
das
fwait
sbb
sbbb
jae
dec
xor
cmpsb
add
and
mov
ror
pop
xor
imul
lds
mov
add
adc
or
or
lock
sub
int
xchg
cmp
cld
jge
insb
sub
je
test
daa
fcoms
mov
call
mov
cltd
fidivrs
xor
daa
pushf
sbb
pop
mov
push
in
mov
imul
test
xchg
aad
or
notl
les
std
imull
ret
test
sbb
jle
lahf
in
popf
xor
insb
jns
popf
push
jbe
xor
mov
xchg
lret
add
fbstp
les
popf
mov
test
or
test
xor
jnp
jp
repnz
orb
aam
repnz
and
pop
fldt
or
cltd
mov
xor
cmpsb
push
sbb
fcmovnb
es
pop
jnp
or
int
ljmp
mov
xchg
lret
stos
addr16
leave
stc
lcall
ret
pop
das
or
jns
pop
inc
addr16
xchg
movsb
and
sbb
popf
cmp
pop
rorl
pop
add
fildll
adc
jmp
pushf
or
pop
sbb
fimuls
sti
fwait
stc
jae
xor
call
sti
jbe
lds
rorb
and
sub
push
ja
push
inc
repz
aam
out
sub
adc
test
out
mov
sbb
mov
popa
insb
ja
dec
imul
cmp
outsb
pop
xchg
mov
cmp
mov
rorl
mov
clc
out
repnz
outsl
xchg
jecxz
inc
mov
mov
shl
into
or
outsl
fdivl
insl
add
mov
sti
mov
mov
ret
sub
xchg
sbb
and
scas
adc
push
xor
imul
sar
pop
mov
movsb
out
les
mov
fsubl
mov
mov
cmc
xacquire
mov
inc
shl
cmp
cmp
es
mov
or
xchg
into
pusha
xchg
jle
nop
in
and
mov
jp
addl
sbb
call
cmpsl
push
mov
or
and
pusha
sub
mov
sahf
cwtl
shlb
dec
aas
sub
xchg
dec
leave
stos
insl
insb
jne
sub
and
sub
xchg
mov
jle
mov
pop
lock
and
inc
fstpl
push
rclb
adc
ficompl
add
popf
sbb
cmc
xchg
movsb
xchg
xchg
jo
out
int3
mov
imul
jns
enter
xchg
mov
aad
mov
push
cli
lods
repnz
mov
xor
addl
cmpsb
xchg
add
sbb
xchg
sub
and
push
add
rcrb
dec
sti
or
aaa
into
fistps
xchg
cli
aam
pop
enter
jg
jmp
xchg
mov
in
xchg
es
push
xor
ljmp
aas
out
xor
out
mov
imull
mov
fiadds
xchg
sar
and
fsubl
jp
ja
mov
xchg
dec
repnz
lds
jecxz
mov
test
sub
cmp
dec
mov
adc
pop
push
xor
mov
cmp
les
mov
loop
push
into
fwait
test
sub
ljmp
inc
das
pop
pop
push
loope
xor
aas
xchg
fwait
mov
aaa
stos
sub
in
sbb
xor
clc
inc
jle
mov
dec
out
push
jns
das
repnz
xchg
push
mov
pushf
xchg
call
loopne
xchg
mov
adc
pop
in
repz
jl
negl
ds
into
std
xor
mov
or
xlat
sbb
add
std
xchg
cmp
sub
movsb
sbb
sbb
cmpsb
push
or
or
neg
imul
in
fstp
int
sub
mov
mov
js
test
mov
add
lods
inc
mov
xchg
mov
mov
enter
int
jbe
rolb
cwtl
scas
nop
lahf
stos
add
push
out
fbld
push
add
lret
push
pop
jp
mov
enter
into
leave
jmp
adc
pop
fcompl
mov
and
adc
sbb
mov
mov
addb
or
sbb
adc
mov
loope
into
ljmp
push
cld
neg
daa
jbe
out
das
add
int
push
cmp
jg
movl
or
add
scas
mov
inc
lret
push
lcall
inc
jp
imulb
push
dec
add
or
mov
and
movsl
inc
pop
xor
inc
movsb
in
xor
gs
dec
idivb
mov
test
pop
inc
popa
pop
js
sbb
push
stos
adc
or
add
daa
repz
jge
xchg
push
cld
sti
dec
orb
cltd
test
or
je
sahf
and
outsl
jbe,pt
clc
push
sbb
sbb
add
ja
cmp
das
dec
out
fwait
mov
dec
adc
scas
arpl
jmp
bound
jbe
lds
and
push
cltd
push
call
call
in
cmpsb
xchg
jns
lea
scas
sbb
adc
mov
cmpsb
or
add
enter
inc
lods
test
cmpsl
sub
bound
xchg
into
sbb
push
je
xchg
add
adc
xor
add
xor
lods
cmpsl
in
sti
or
add
jmp
cs
aaa
inc
jg
out
loope
jle
dec
xor
daa
xor
pop
jb
xor
leave
mov
pushf
pop
stos
and
int
mov
cmp
ja
pusha
xor
notb
jle
mov
cmp
pop
mov
lcall
es
cmp
adc
pop
scas
sub
fsts
inc
xor
xor
sbb
es
inc
sub
jne
pop
andl
lds
movl
fimuls
jle
aas
movsb
fiaddl
shrb
sbb
sub
fdivl
add
call
mov
gs
imulb
jmp
xor
aas
out
pop
cmpsl
mov
pop
jl
and
or
in
mov
daa
sbb
adc
pop
push
xchg
jne
lods
scas
mov
add
and
dec
in
hlt
and
lcall
sti
cli
push
icebp
or
fildl
iret
orb
lea
call
aas
and
dec
std
jmp
fdiv
xchg
imul
xchg
hlt
bound
scas
scas
ja
push
dec
pushf
adc
dec
mov
pop
popf
sub
jg
mov
dec
stos
sbb
lods
xchg
scas
mov
inc
fcoms
daa
add
inc
push
xchg
lods
movsl
and
js
mov
lock
add
mov
cwtl
push
xchg
push
and
pop
shrl
flds
xchg
push
lock
cmp
lock
jg
and
push
shl
std
mov
cli
add
js
movsb
xchg
test
add
mov
fcmovne
insl
lods
cld
inc
dec
cwtl
out
jp
mov
test
std
mov
test
sbb
push
jmp
sub
cmp
xchg
lock
jg
nop
xor
jle
leave
pusha
stos
add
cltd
jne
mov
bound
jp
mov
test
in
into
sbb
inc
cli
adc
mov
jle
adc
sub
inc
pop
or
add
inc
jne
cmpsb
jnp
ret
cmpsb
push
or
andb
mov
loope
push
dec
and
inc
add
xchg
or
test
inc
insl
jo
lods
fnstsw
iret
pusha
add
lret
mov
mov
xchg
mov
in
pop
pop
xchg
sbb
cld
mov
lea
orl
jge
xchg
push
jb
inc
and
xor
mov
std
or
xor
cmp
call
dec
les
and
loope
sti
cmp
pop
daa
xor
jg
xor
inc
xchg
xor
mov
xor
leave
adc
out
add
push
sahf
sbb
lods
cli
jne
testb
adc
jns
xchg
enter
adc
mov
addr16
leave
test
je
xchg
or
cmpsb
andb
cmpsb
mov
js
pop
icebp
pop
xchg
or
mov
lcall
adc
shrb
outsb
sbb
and
cmp
int
hlt
stos
sub
jnp
sub
test
imul
movsb
ficompl
test
mov
push
gs
xlat
cmp
in
pop
iret
orl
cld
cwtl
mov
int3
arpl
mov
cmpsb
out
rorl
in
std
test
sbb
jns
pusha
out
sahf
and
inc
jnp
rcr
jnp
imul
sbb
or
jns
ljmp
pop
shlb
push
ret
pop
sarl
mov
idivl
push
call
outsl
jbe
push
repnz
mov
xchg
insb
gs
mov
sbb
jne
negb
jo
dec
les
xorl
in
or
add
bound
or
and
push
in
lods
sub
lahf
sbb
and
sti
jae
cmp
sub
fwait
and
movsb
fwait
add
add
pop
or
cmp
mov
fwait
mov
cmp
leave
mov
int3
sub
mov
dec
xchg
pop
imul
movsl
pusha
cmp
fwait
xlat
scas
enter
dec
xchg
mov
push
imul
mov
inc
stos
pushf
mov
in
fnstsw
call
sbb
add
push
hlt
pop
jae
fdivl
jl
aad
sarl
jne
lock
cwtl
ljmp
sub
adc
loope
pop
stos
push
or
sarb
xor
pop
ljmp
mov
mov
cmp
stos
xor
mov
jmp
subb
mov
clc
sub
jmp
inc
sti
pop
scas
shrl
push
sub
gs
or
aad
adc
push
dec
mov
in
cli
mov
adc
shrb
jae
cmp
pop
loopne
xchg
cmp
ret
jo
leave
out
lds
add
mov
lods
sbb
jnp
xor
outsb
outsb
push
push
mov
movsb
cmp
dec
mov
repz
cmovge
jo
dec
dec
out
aad
xor
je
loopne
lret
nop
and
sbbl
clc
or
hlt
or
jg
clc
push
pop
cld
adc
stos
roll
daa
pop
test
xchg
pop
mov
adc
pop
or
aaa
xor
sub
outsb
adc
xchg
push
mov
clc
adc
adc
dec
lods
mov
cmp
repz
push
pop
movsb
popf
mov
or
stos
adc
push
or
sbb
pop
aaa
sub
fcompl
mov
gs
dec
pop
lds
cli
push
lods
xor
or
cmp
addl
push
or
mov
cltd
jg
inc
adc
inc
imul
push
or
mov
test
pusha
mov
insb
or
push
cmpsb
lods
sbb
outsl
or
pop
push
leave
lods
mov
cli
sub
dec
pop
push
imul
and
pop
js
rolb
jb
sub
out
in
sub
add
sbb
imul
jnp
mov
pop
rcll
hlt
jbe
xchg
pop
fcomp
or
push
push
pop
imul
out
jne
sarl
mov
stc
fbstp
fwait
pushl
pop
lcall
das
fldcw
cmpsl
xchg
test
push
cmpsl
pop
push
subl
jg
push
add
int3
lahf
xchg
leave
icebp
dec
sbb
stc
aas
sti
cwtl
push
or
jge
sub
pop
push
adc
mov
imul
lcall
jae
add
ljmp
icebp
insl
and
xchg
add
mov
loopw
imul
xchg
imul
push
gs
pop
bound
andb
jnp
xchg
out
test
push
pop
adc
pop
sub
mov
test
cli
mov
adc
popa
add
ljmp
adc
rcll
les
pop
out
mov
cli
inc
call
add
xlat
xlat
sub
push
insl
popf
mov
cmp
mov
repnz
add
push
adc
cmpsb
mov
leave
stc
and
dec
pop
fnstcw
pop
nop
in
inc
xchg
mov
loope
iret
pop
ljmp
pop
aas
sub
sti
adc
daa
xorb
jecxz
sarb
lret
loope
sub
jo
pop
int3
test
mov
or
pop
pop
dec
popf
inc
mov
pusha
jae
adc
mov
fdivrl
jg
pusha
lds
loop
pop
xchg
sbb
int3
cltd
scas
rcrl
cmp
pop
xchg
sbb
ret
insl
pop
cmpsb
mov
or
outsb
mov
out
daa
call
iret
fisttpl
mov
mov
in
iret
adc
sbb
shrl
push
mov
fsub
in
lret
push
int3
arpl
mov
stc
xchg
in
mov
push
std
js
inc
sub
sub
in
pop
sbb
add
insb
push
dec
push
idiv
shl
adc
mov
and
dec
push
das
sub
inc
sahf
adc
clc
jl
dec
icebp
or
std
push
icebp
mov
ljmp
fidivs
jp
jnp
bound
cs
push
arpl
or
mul
dec
aad
sbb
adc
mov
inc
mov
sahf
cld
aas
popa
add
and
addr16
mov
sbb
bound
sbb
nop
fisttpll
daa
pop
inc
pop
cmpsl
dec
mov
dec
jle
ja
mov
cmp
int
or
add
pop
adc
push
jnp
arpl
mov
sbb
mov
subl
push
or
sarl
jp
test
xor
fiadds
ret
std
mov
mov
stos
pop
subl
jns
push
add
lea
mov
popa
xor
outsl
mov
xor
dec
inc
les
rclb
lret
xor
dec
ljmp
pop
test
fstl
push
inc
mov
sub
sub
fldenv
push
mov
mov
push
orl
mov
cmp
add
inc
cmp
mov
cwtl
lret
fwait
roll
jl
loop
push
shr
addl
jae
and
clc
mov
std
lods
cmc
lcall
cmp
popf
call
test
xor
lcall
xor
or
xchg
data16
mov
jmp
pop
sub
clc
jle
jo
mov
cltd
cmp
push
outsl
mov
jl
inc
out
push
jl
cmpsb
pusha
mov
dec
out
fldt
mov
xor
sub
incl
and
lods
jp
jne
test
repz
insb
adc
xlat
cmp
ret
mov
shlb
lret
pusha
and
lods
push
int
out
xchg
or
andl
pop
test
jg
jl
pop
fildl
pop
add
sub
gs
mov
inc
jbe
rcl
js
mov
pop
fimuls
jns
pop
repnz
ret
push
inc
ret
sahf
jbe
das
pop
jecxz
adc
push
mov
lds
push
shlb
inc
xor
icebp
ss
and
stos
loop
xchg
xchg
inc
and
dec
and
fmuls
add
das
orb
jecxz
or
push
sbb
inc
xchg
xchg
cwtl
lahf
and
nop
push
jmp
stos
int3
lods
dec
repnz
jp
outsb
sbb
cmp
adc
cmpsl
mov
movb
cmp
shlb
inc
lahf
ret
pop
cld
enter
push
pop
mov
das
popf
sbb
insl
and
cltd
cltd
push
inc
dec
ljmp
pop
leave
sbbb
in
mov
add
addb
xorl
in
iret
inc
not
dec
gs
into
pop
cmpsl
jecxz
cmp
jmp
push
jbe
loopne
cltd
loopne
lcall
movsl
les
lret
pop
repz
imul
fsubrl
icebp
mov
gs
jae
ds
push
test
xor
cmp
cmp
imul
in
sbb
fists
cwtl
scas
sti
int
adc
repnz
outsl
iret
xchg
into
xlat
mov
lahf
js
jno
ja
inc
loop
sbb
or
repz
inc
adc
dec
and
xchg
add
dec
xor
or
pop
sbb
add
and
adc
clc
jmp
sub
cwtl
iret
scas
daa
daa
fadd
lock
test
addr16
adc
dec
mov
jne
sub
lret
in
cmp
out
fsts
jmp
ja
mov
mov
or
mov
mov
adc
pop
and
xlat
mov
repnz
test
mov
cmp
inc
pop
mov
outsl
sub
rcrb
repz
shlb
leave
notb
vpsrad
ja
cmp
or
mov
fs
lcall
xchg
pop
xchg
xchg
or
fildll
xchg
stos
ljmp
sbb
xor
cmc
popa
cmp
test
xchg
insb
fdivr
fwait
dec
jecxz
fstps
mov
scas
cmp
push
ss
cs
and
dec
insb
lea
stos
push
test
out
lcall
mov
and
pop
in
fs
jle
and
sub
jge
mov
test
cmp
push
inc
loope
cmpsl
cli
cmp
sti
jae
jae
imul
or
les
in
popa
daa
push
and
ja
mov
dec
push
pop
stos
mov
cmpsl
ss
lea
add
shrb
nop
shl
pop
insl
in
popf
sbb
mov
cmpl
les
imul
push
xchg
mov
fs
push
mov
cmp
and
xor
test
dec
or
xchg
pop
cwtl
fs
stc
xchg
xchg
push
push
test
mov
sbb
dec
cli
pop
out
pop
mov
aad
mov
loop
movsb
cwtl
jo
imul
lods
stos
inc
jge
jecxz
mov
aaa
add
not
push
adc
movsb
or
pop
test
rcll
xchg
cli
sbb
stos
call
xchg
cltd
jnp
insb
sub
pop
fildll
aaa
sbb
push
les
les
int
xor
data16
cld
mov
sti
fdivrp
push
loop
xlat
add
cmpsl
sub
fidivs
mov
push
fcoml
mov
dec
hlt
mov
pop
sbb
xor
xor
jp
cli
frstor
mov
push
mov
nopl
adc
sbb
fistl
lahf
outsl
std
out
sbb
mov
sbb
mov
inc
adc
ja
or
mov
lea
loop
inc
lcall
add
fadd
sbb
rclb
outsb
pop
lods
sbb
mov
aas
jmp
mov
js
mov
adc
jmp
pop
mov
push
sbb
pop
cmpw
outsl
cltd
dec
sahf
mov
loop
and
jae
inc
jnp
lods
mov
stos
or
subb
push
das
test
mov
pusha
cmp
ss
mov
pop
addr16
dec
rcll
jns
out
cmp
iret
in
flds
popa
aam
mov
and
mov
roll
aaa
push
data16
sub
lock
jb
pop
stos
xor
jp
insl
push
sbb
cwtl
add
xchg
lods
lret
rorl
pop
dec
inc
in
dec
cwtl
jnp
jbe
jb
fmul
negl
je
in
or
mov
dec
sub
lea
inc
cmpb
icebp
insb
lret
inc
add
dec
and
test
call
aad
cwtl
shlb
cmp
les
inc
adc
inc
inc
addr16
sub
in
out
fsubl
sahf
andb
fistps
jae
xchg
out
xchg
lea
into
pop
dec
cmp
xchg
xchg
add
insl
pop
lret
incb
inc
les
enter
and
test
lods
pop
pushf
pusha
ljmp
stc
in
ss
xchg
ljmp
mov
outsl
cmpsb
dec
repz
lret
xchg
subb
in
cli
jo
out
push
std
scas
pop
sbb
push
push
js
sbb
or
mov
xor
sub
std
xor
xchg
inc
sub
sbb
mov
mov
loopne
pop
mov
rcl
mov
fimull
jnp
hlt
pop
pusha
mov
insl
fmull
push
pop
mov
fsubl
int3
push
hlt
cmp
inc
mov
mov
mov
inc
je
or
jle
inc
cmc
sub
js
insl
lret
cwtl
insl
rol
xor
mov
test
mov
jo
popa
out
arpl
jmp
aas
jmp
movsl
nop
sbb
insb
ja
sbb
cltd
out
dec
lret
sahf
les
inc
dec
das
adc
int3
jl
push
imul
xchg
testb
popf
mov
or
sub
imul
pop
mov
jmp
outsb
push
lods
in
call
cltd
arpl
dec
sbb
arpl
inc
scas
roll
out
mov
sti
rorl
xor
jmp
repz
pop
arpl
add
aaa
cli
imul
out
outsl
sub
sbb
lahf
inc
dec
mov
mov
jae
adc
pop
mov
sbb
sbb
repnz
jbe
inc
addr16
rol
cli
jecxz
repnz
lret
das
out
push
cli
mov
push
inc
rcll
dec
bound
ds
pop
xchg
mov
hlt
or
icebp
pop
xchg
push
clc
movsl
out
jae
cmpsl
mov
cwtl
leave
in
stc
rolb
mov
hlt
fucompp
lret
or
dec
adc
mov
cmpsl
cltd
orl
hlt
pop
mov
lock
adc
shll
imul
push
jp
inc
mov
lods
mov
adc
pop
sbb
lret
lock
jbe
inc
dec
cmp
xor
mov
stos
cs
push
push
jl,pt
cmp
enter
jmp
dec
mov
sbb
imul
out
push
jle
subb
jb
inc
adcl
inc
out
xchg
ja
je
out
mov
pop
push
mov
leave
jae
popa
repz
sahf
dec
xor
inc
mov
aam
add
push
test
push
cmp
sub
mov
cld
outsb
mov
sub
stos
scas
nop
lret
mov
lods
mov
lock
cld
mov
sbb
jnp
hlt
or
cmp
jns
push
xchg
push
pop
inc
jp
sub
xchg
cmp
jmp
push
repnz
lret
cmp
xor
icebp
test
aad
cmpsb
or
cmpsl
mov
aad
fcomps
push
in
add
cs
xchg
das
loopne
shll
and
add
sbb
sahf
popf
out
lods
pop
sbb
mov
mov
xor
sub
rcrb
out
adc
jno
loope
stos
ds
push
loop
jae
aaa
test
jecxz
rcl
loope
stc
cli
cltd
aaa
loope
and
or
xlat
cmpsl
fisttpl
cpuid
pop
lahf
data16
xchg
push
call
push
pop
xchg
andb
mov
daa
add
insl
xchg
and
pop
mov
inc
push
xchg
xchg
ret
jle
js
test
ja
xchg
or
jo
inc
jmp
cwtl
push
push
pop
pop
inc
lds
mov
cltd
adc
es
mov
jp
mov
fcomps
add
and
repz
insl
imul
push
pop
shlb
add
xchg
xchg
xor
mov
dec
cmp
shlb
sbb
sbb
or
imul
or
imulb
sahf
xlat
jg
xchg
decl
push
sbbl
mov
or
cld
call
cltd
mov
sbb
and
cltd
pop
insw
mov
leave
decl
je
nop
sti
cmpsb
jg
mov
fdivrs
mov
std
ss
jg
xchg
xor
mov
std
jle
into
push
ljmp
outsb
ljmp
dec
in
loopne
aam
fidivrs
jb
pop
jge
pop
push
into
lret
sbb
pop
fsubs
mov
out
or
leave
mov
xchg
xchg
clc
push
sub
push
cld
sbb
push
outsb
inc
mov
sti
hlt
lret
movb
scas
arpl
ja
jne
enter
loope
xchg
push
cli
xor
add
adcl
xchg
test
cmp
and
adc
mov
sub
lea
int3
add
sbb
add
imull
mov
mov
int3
lcall
bound
mov
cmp
fmull
add
sub
lock
fists
shr
imul
mov
xchg
dec
les
mov
rcl
adc
push
sub
int3
pop
or
inc
or
pop
jle
pop
sbb
out
sbb
jg
pop
es
nop
push
fstl
adc
add
sub
jb
cld
jbe
stc
and
popa
push
mov
adc
jno
and
jnp
cld
fcompl
push
fdivrl
repz
cmp
shll
and
mov
fdivrp
flds
pop
addr16
dec
xor
xor
stos
ljmp
jl
sub
fildl
mov
push
mov
cs
jb
add
dec
shll
lea
fmuls
call
out
jb
adc
repz
xchg
mov
or
gs
and
jns
popf
int
sbb
pusha
or
mov
cmp
dec
mov
pop
mov
inc
loop
pop
add
ljmp
jge
sahf
fcomi
mov
xchg
mov
cmpsl
adc
xor
xchg
pop
cmpsl
mov
jmp
mov
xor
mov
sub
mov
add
jno
cmp
inc
sbb
sbb
or
lods
das
out
fidivl
sbb
nop
sbb
addl
sbb
in
add
clc
movsb
loopne
rcrb
jb
insb
int
dec
inc
push
sbb
adc
rol
sbb
sbb
ficoml
push
leave
cmpsb
enter
adc
xchg
test
push
cwtl
out
in
xchg
rcr
movsl
push
push
out
push
repnz
daa
jmp
mov
cmp
les
add
pop
hlt
mov
add
xchg
js
cmpsl
add
cmpsb
out
add
cmp
push
ljmp
fldl2e
cmp
test
push
fdivr
ret
mov
xchg
push
add
mov
into
test
sbb
popf
inc
xchg
shl
pop
cmp
xor
loope
dec
stos
sub
cs
jl
mul
lahf
jge
lret
mov
push
and
push
ds
js
das
ds
sbb
rclb
pop
rorb
mov
lock
clc
push
idivb
xor
scas
movsb
sahf
fucomi
popf
fs
sbb
mov
push
add
cmp
cmp
testb
and
jl
jbe
repnz
stos
scas
pop
and
je
mov
xor
mov
popa
jbe
push
in
cmp
call
pop
test
ja
cltd
rcll
xchg
sub
push
xor
nop
arpl
test
mov
xor
into
fs
sub
xchg
insb
je
rorl
fs
mov
xor
ss
sbb
xor
inc
iret
push
out
imul
pop
adc
push
jg
fists
shl
dec
out
rclb
or
icebp
inc
aaa
loope
shlb
les
sbb
add
stos
push
negb
adc
mov
fisubrs
xchg
sub
call
and
pop
aaa
test
xor
adc
xchg
inc
sbb
push
cmp
jg
push
lods
fwait
or
arpl
arpl
clc
in
mov
cltd
dec
and
jne
push
add
inc
icebp
adc
jmp
aam
adc
pop
or
rolb
and
jbe
mov
dec
mov
ljmp
cs
outsb
inc
in
mov
andl
sbb
xor
hlt
je
popf
in
pop
lods
fcoms
cmc
xchg
shrl
in
roll
and
push
cwtl
adc
insl
rcrb
lods
sbb
dec
jmp
push
jnp
push
dec
mov
and
stc
pusha
xchg
ret
cmp
xchg
xchg
xchg
lcall
test
insl
ss
jbe
lahf
lret
push
in
in
inc
mov
movsb
jp
xor
or
push
or
or
sbb
notl
movsl
dec
jno
shll
rorl
inc
jmp
mov
bound
mov
mov
lods
loop
enter
popa
scas
lahf
out
mov
popf
mov
aam
jnp
push
sub
push
nop
sbb
or
cmp
or
in
jmp
mov
add
les
dec
lock
ror
js
cmpsl
jl
mov
mov
sarl
pop
insb
enter
adc
repnz
pop
outsb
inc
mov
lret
push
inc
scas
sbb
cmp
scas
test
mov
jo
push
sti
mov
lcall
xchg
sub
je
stos
add
pop
rol
push
icebp
mov
inc
sbb
aam
adc
repnz
sub
dec
inc
aaa
mov
rcrl
add
loopne
jmp
add
xchg
int
push
pop
sbb
mov
cltd
or
push
jmp
pop
out
orb
les
inc
fisubl
push
cli
aad
dec
mov
sub
in
ja
sub
cmp
dec
mov
jo
rcrb
lcall
dec
jmp
sbb
mov
movb
gs
nop
pop
push
addl
jo
pop
cltd
fnstenv
xor
sti
jle
es
loopne
mov
sbb
or
mov
js
add
gs
cmpsl
mov
push
popf
ljmp
xchg
sbbl
mov
mulb
inc
das
into
mov
in
push
popa
ss
shrb
lahf
int3
ret
ret
insb
mov
inc
xchg
lods
jg
and
call
mov
fsubr
pop
cmp
ret
icebp
loop
das
jmp
mov
mov
jl
mov
decb
pushf
out
out
mov
jl
mov
bound
inc
iret
in
pop
pop
pop
les
push
add
mov
rorb
adc
dec
inc
es
lahf
scas
cmp
shll
loop
insb
cwtl
mov
push
int
mov
dec
push
add
lea
out
mov
sbb
stos
cmp
ret
cmp
push
fisubs
xchg
dec
sbb
and
pusha
ficoms
hlt
pop
mov
or
call
movsl
enter
test
and
push
add
dec
stos
sti
ja
outsb
hlt
out
leave
dec
mov
sbb
mov
or
inc
pop
lret
and
out
push
push
in
mov
adc
mov
imulb
mov
jge
call
shrb
int
cmp
mov
pop
pusha
int3
dec
push
sarl
sbb
push
sbb
in
mov
push
shrb
and
sub
das
roll
lock
clc
adc
adc
xor
jecxz
inc
out
mov
rcrb
inc
xchg
cmc
and
stc
jge
leave
lods
push
xlat
repz
ficoml
mov
cmpsb
cmc
pop
jmp
sbb
jmp
and
xchg
pusha
rcr
inc
leave
mov
rclb
mov
mov
or
inc
jle
dec
movsb
insb
push
push
lret
not
repz
jl
aam
shrb
repz
adc
aad
and
sub
fisubrl
rorl
int
ss
popf
pop
mov
push
bound
pusha
mov
lock
cmp
hlt
pop
lret
mov
sbb
cmp
aad
ljmp
add
dec
int3
mov
pop
cmp
mov
xlat
call
pop
mov
std
xor
inc
and
in
mov
outsb
ja
bound
fwait
ja
dec
dec
jo
xadd
enter
sub
mov
jns
dec
adc
in
xchg
or
in
fisubrl
jle
push
pushf
arpl
adc
jnp
sbb
roll
pop
fstpl
lods
into
jo
in
xchg
hlt
orb
mov
push
inc
inc
mov
lea
mov
sarl
inc
out
loope
xor
mov
dec
pop
or
aas
das
lea
cmpsb
and
out
mov
inc
inc
outsl
pusha
dec
cmp
gs
lock
adc
xor
out
push
xchg
sub
call
inc
dec
test
adc
cmpsl
in
dec
int3
dec
clc
dec
xchg
inc
test
fdivrs
fdivrl
cs
pop
aad
or
mov
push
and
cmp
sti
loope
pop
cld
mov
sbb
xor
push
jne
mov
loope
out
es
dec
movsb
pop
es
std
leave
fdivrp
into
push
jecxz
add
ljmp
in
in
mov
mov
inc
mov
stc
stos
sbbl
cmp
mov
or
test
pop
lcall
push
sbb
stc
and
jno
pop
and
cmp
adc
mov
out
rcrl
jp
mov
mov
xor
fld
fwait
mov
inc
jle
jmp
xor
addr16
imull
loop
cmp
cmpsb
clc
orl
mov
mov
stos
cmp
ds
jbe
adc
dec
inc
into
push
cmpsb
and
xorb
adc
adc
stos
popa
add
xor
in
outsl
lcall
roll
stos
xor
testb
lahf
sbb
loop
xchg
and
loopne
mov
dec
imull
mov
ret
lds
add
adc
iret
cld
out
cwtl
loop
sarl
sbb
cmpb
fs
mov
mov
inc
xchg
jb
xor
sub
push
aad
mov
jmp
xchg
xor
fwait
sub
filds
in
imul
addr16
dec
mov
clc
dec
mov
sbb
push
xchg
xchg
pushf
cli
mov
jnp
stos
int3
ljmp
xchg
jne
add
add
xchg
mov
test
enter
imul
inc
dec
push
xor
ja
mov
jge
and
xor
add
in
pop
clc
sub
ja
jp
sahf
sbb
lahf
jmp
daa
bound
adc
xchg
sbb
or
jns
js
arpl
fmull
mov
dec
xchg
adc
jb
jbe
mov
pop
lahf
outsb
ficompl
rcr
adc
mov
jbe
sbb
inc
sarb
sbb
push
mov
cmp
mov
inc
xor
xchg
xchg
pop
cmc
loope
fsubrl
jns
fldcw
xor
adc
imulb
sti
cli
ja
or
lcall
imul
jle
loopne
push
sar
xor
loop
inc
in
cmp
lds
or
rol
sub
in
sub
mov
iret
movsl
xlat
sub
mov
mov
in
add
or
fists
addr16
ljmp
push
mov
add
jb
lock
dec
xor
pop
sub
loope
dec
in
xor
push
jne
lock
xchg
loope
sub
movb
incl
out
insl
mov
cld
adc
hlt
and
aam
xchg
and
daa
push
inc
or
or
mov
fwait
push
bound
dec
add
pop
int3
jmp
leave
or
xlat
cmp
fwait
mov
add
data16
sbbl
das
cld
pop
cmpsl
js
stos
jp
movb
cmp
insl
hlt
out
mov
cltd
adc
add
jmp
mov
sub
push
lock
mov
mov
popl
adc
inc
fsubs
add
and
xor
sbbl
xchg
cmpsb
aam
xor
les
sbb
mov
and
sbb
jo
jecxz
mov
call
movsb
add
jnp
cltd
fwait
loop
icebp
pop
int3
fistpl
xchg
ds
addl
insb
mov
hlt
mov
lds
ret
mov
js
lods
pusha
out
stc
adc
adc
sbb
pop
xor
mov
or
mov
js
cwtl
pop
pop
sti
ljmp
mov
mov
insl
mov
std
dec
sub
dec
enter
mov
jno
fs
adc
pusha
xchg
adc
dec
cmp
jl
ljmp
sti
je
jecxz
lret
pop
js
pop
sahf
insb
fdivrl
push
aaa
push
stos
mov
hlt
mov
mov
sbb
fbld
into
enter
iret
pusha
loope
cmpsb
insl
hlt
xor
inc
xor
cmp
clc
into
fdivs
int
sub
test
xchg
dec
dec
cmpsl
mov
iret
jno,pn
mov
imul
adc
call
sub
inc
les
mov
mov
aaa
outsb
push
push
aam
mov
mov
or
jae
cmc
add
push
fcompl
push
rcrl
pop
repnz
lods
push
xlat
sub
dec
les
or
and
jle
rcrb
pop
dec
add
inc
add
lret
and
outsb
cmpb
dec
movsl
fistpl
call
sahf
cmp
test
into
popf
shr
shrl
aaa
call
movsl
sarl
in
dec
pushf
sbb
mov
cmp
daa
xorl
xchg
mov
push
mull
inc
pop
push
jmp
fsubp
xor
mov
stc
cld
xor
imull
or
call
bound
aas
flds
sub
cmp
in
dec
iret
repz
les
mov
movsl
pop
iret
push
sub
xlat
cs
cmp
sar
lahf
inc
add
sbb
inc
out
jne
lret
or
cld
sbb
sarb
lcall
sbb
jp
push
int
test
jae
movsb
pushf
sbb
ret
and
movb
fcmove
decb
xchg
imul
hlt
push
mov
xchg
fstl
cwtl
stc
add
sar
mov
mov
cmpsb
mov
push
pop
lea
add
loopne
adc
ffreep
jmp
lahf
jbe
bound
add
loopne
add
popa
mov
adc
fdivrs
inc
push
mov
bound
xchg
add
dec
aaa
and
idivl
inc
pop
inc
in
data16
pop
loop
add
xchg
lcall
adc
mov
dec
mov
pop
vsubss
sub
pop
fnstsw
std
lds
in
or
rcll
mov
mov
adc
test
mov
sbbb
mov
and
jmp
lock
orl
mov
inc
out
jnp
push
rol
and
add
cmc
stos
cmp
pop
stos
and
mov
lcall
dec
pop
lahf
cmpsb
iret
push
addr16
sub
test
enter
into
aam
shl
wbinvd
jbe
popa
mov
xor
sbbb
test
cmp
and
cltd
jae
adc
inc
sahf
ficompl
cli
sti
jno
outsb
scas
andl
lret
push
sti
testb
xchg
cmp
shrd
fcoms
xchg
xor
mov
xchg
xor
imul
movsb
cltd
mov
fnstenv
jg
inc
dec
mov
std
popa
mov
repnz
inc
cmc
sbb
push
call
cmp
out
cmc
mov
sbb
dec
dec
cmp
push
sti
push
int
mov
jge
xchg
int
orl
movl
shll
data16
sbbb
cmp
cwtl
movsb
pusha
dec
aas
jp
stc
xchg
or
add
roll
mov
notl
push
add
xchg
sti
and
cltd
sbb
xchg
popf
inc
sarl
push
push
mov
mov
mov
sti
inc
test
repnz
neg
or
and
jl,pn
push
push
das
test
das
movsb
jo
mov
movsb
aaa
popa
jecxz
mov
outsl
jns
xor
aas
inc
cmp
jae
stos
inc
jns
xor
movsb
or
mov
and
clc
test
lea
cmpsb
adc
mov
test
mov
or
icebp
pop
dec
test
sti
data16
fidivs
mov
pop
pop
mov
xor
lahf
xchg
jle
cmp
pop
adc
pop
loope
xor
imul
and
and
sub
xchg
add
jae
dec
shlb
pop
mov
aas
mov
jo
mov
out
inc
mov
mov
std
adc
lea
loopne
test
push
push
mov
mov
sbb
xchg
mov
xchg
idivl
cld
mov
add
cmp
cmp
arpl
pop
cld
movups
lods
pop
sub
inc
xor
idivb
lret
and
shl
in
mov
fdivrp
inc
lcall
mov
sbb
jge
movsl
and
cmp
call
pop
xor
bound
insb
xchg
in
mov
jmp
pop
push
mov
mov
xor
jnp
pop
test
pop
mov
adc
sti
pusha
cmpsb
or
jmp
fnsave
movsb
cmp
and
movsb
jne
add
xor
adc
or
cmp
pushf
cmp
dec
test
enter
in
xchg
adc
mov
sbb
and
subb
insl
jp
mov
in
shll
aad
cmp
popf
inc
jp
xor
hlt
pop
cltd
inc
mov
outsb
sbb
adc
or
xor
push
sbb
cmp
add
inc
sahf
ss
cmp
in
pusha
frstor
adc
adc
inc
lret
test
lcall
repz
out
push
pop
sub
dec
cmpl
imul
add
sahf
mov
pop
xchg
sbb
dec
bound
loopne
pusha
arpl
pop
sbb
dec
out
call
popf
hlt
and
push
sysenter
mov
test
cltd
lret
cs
ret
frstor
test
in
dec
adc
int
cmp
leave
subl
mov
push
sub
sub
dec
loope
shlb
mov
loope
cmp
jg
adc
xchg
leave
inc
in
or
jle
pop
sbb
cmp
sbb
int3
mov
fcoml
mov
fmull
fistpl
adc
rcrb
sub
dec
pop
push
outsb
adc
xor
ret
fmul
sbb
lods
or
push
loopne
ficoml
mov
push
cmp
jl
popf
and
adc
imul
subl
push
out
jg
repz
sub
call
pushf
les
ds
xchg
mov
outsl
int
jbe
cmp
fstpt
xor
jp
and
in
push
test
outsl
mov
or
outsl
lock
sti
jecxz
cs
cmp
fwait
dec
lret
test
aad
ja
std
jecxz
mov
add
cmp
pop
jne
test
push
adc
push
sbb
xlat
adc
mov
push
inc
or
ret
mov
std
mov
mov
jmp
xor
dec
dec
rcl
in
fisttpll
push
jp
mov
push
sbb
call
mov
xchg
or
stc
pop
outsl
mov
ljmp
add
fwait
mov
push
jmp
shll
pop
dec
pushf
cld
out
mov
lahf
inc
or
xchg
push
movsl
mov
cmc
lea
je
xlat
ret
rep
mov
jb
pop
push
cmp
xchg
aam
and
push
sbb
xchg
ret
mov
fsts
cld
sbb
adc
insl
pop
popf
xchg
mov
out
hlt
cmp
fnstsw
add
mov
push
test
int3
xor
mov
pushf
push
ret
inc
adc
imull
in
incl
jmp
xchg
xchg
push
adc
jne
push
cs
inc
sbb
inc
add
xchg
push
xchg
enter
xlat
dec
outsl
fwait
repz
adc
push
push
sarl
inc
inc
and
or
stc
dec
jb
xor
jg
dec
shlb
adc
cmp
aas
inc
cmpsl
pop
or
dec
xchg
cmpsl
add
loop
jl
ds
test
out
fists
shrl
enter
icebp
repz
mov
fwait
and
bound
sbb
xchg
jns
adc
pop
aas
mov
ffree
ret
mov
pop
fcmovnb
clc
add
cmp
stos
mov
mov
push
push
add
or
js
out
popa
inc
sbb
inc
ret
cs
outsl
ss
mov
notb
or
xchg
dec
lcall
sbb
jecxz
rcl
out
inc
and
xor
push
add
xor
in
adc
push
dec
insb
adc
mov
pop
jmp
clc
mov
pop
mov
or
fisubs
dec
mov
mov
les
pop
push
cmp
pop
inc
test
push
mov
cmp
jo
fwait
or
mov
je
out
sti
xor
and
or
jge
dec
push
hlt
cmp
push
mov
js
mov
cld
bound
nop
nop
cmc
int
nop
mov
and
enter
in
add
sub
xchg
inc
into
enter
into
add
mov
into
lods
fcompl
cltd
pop
jno
fs
sub
test
pop
push
sbb
lods
jae
pop
fnstcw
ljmp
addl
movsl
les
push
mov
push
adc
ja
cmp
xor
in
mov
xor
mov
rcrb
loop
jecxz
jp
ret
mov
jae
ret
sbb
jg
add
pusha
mov
sbb
test
or
mov
ret
fidivs
fnsave
and
lds
xchg
xchg
scas
mov
sub
sub
gs
jge
xchg
xor
dec
lock
xor
popa
dec
cmc
sarb
pop
inc
or
test
iret
dec
fisubrs
push
cmp
ret
fbstp
testl
mov
mov
mov
xor
pop
orl
xor
and
test
call
data16
jmp
addr16
movsl
and
xor
mov
jle
fs
add
imul
dec
mov
pop
mov
cs
arpl
loop
aas
push
cmpsb
mov
fcmovbe
inc
fsts
stc
aas
aas
lahf
lahf
mov
lcall
dec
dec
cmc
popl
sti
xchg
push
inc
sub
in
push
xlat
idivb
iret
dec
hlt
inc
repz
out
mov
add
inc
mov
mov
pop
add
subl
cmpsb
pop
insb
scas
sub
pop
rsqrtps
jno
add
test
mov
push
lods
lea
faddp
jecxz
mov
and
jmp
fidivrl
adc
jge
xchg
sarl
lret
push
test
cmpsb
or
mov
dec
xor
stos
or
pop
ja
and
sbb
pop
in
sub
aas
push
dec
jmp
std
imul
mov
dec
or
add
adc
test
loope
jb
rcl
dec
gs
lods
add
fbstp
adc
mov
cli
roll
adc
cmp
mov
inc
push
xchg
aaa
sbb
lods
jnp
jbe
adc
les
lea
mov
out
xlat
sub
push
mov
mov
xor
adc
imulb
div
cli
hlt
jl
loopne
or
cwtl
sub
int
test
xchg
adc
jne
mov
out
sub
ljmp
insb
scas
push
sar
pop
and
or
fnstenvs
lods
iret
push
jb
jg
call
mov
dec
ret
mov
add
dec
inc
out
or
scas
scas
mov
enter
sub
rcl
sbb
ret
rol
cld
les
stos
cmp
jne
cmp
lods
scas
jge
dec
stos
mov
sub
pop
iret
fstpt
les
in
sbb
imul
lods
mov
push
sbb
jmp
adc
loop
scas
add
sar
jmp
mov
pop
inc
push
and
mov
push
loope
mov
outsl
ss
movsb
cmpsl
out
mov
test
scas
push
sub
rol
xchg
lods
xor
insl
sub
dec
cmpb
inc
sbb
jp
xor
and
inc
insb
loopne
aaa
cmp
data16
xor
mov
pushf
inc
mov
xchg
ds
mov
mov
pop
mov
and
lcall
dec
mov
jmp
xchg
xchg
lahf
push
hlt
or
mov
lret
or
jecxz
xor
sbb
cmpsb
fs
loop
mov
stos
pop
negl
into
push
inc
stc
cmpl
xchg
cltd
frstor
mov
xchg
mov
lret
ljmp
ds
pop
mov
test
jb
je
cmpsb
and
lods
out
xchg
mov
jmp
mov
loop
sub
jle
in
xor
cld
xor
into
sbb
or
addr16
cmp
dec
jmp
shll
and
inc
leave
fwait
pop
iret
dec
mov
sbb
adc
cmp
pop
mov
arpl
pushf
icebp
mov
cwtl
scas
inc
imul
mov
push
adc
inc
adc
pop
mov
leave
movsl
ja
mov
iret
dec
sbb
lret
xchg
mov
clc
fstpt
sub
arpl
cmp
inc
mov
adc
push
test
out
sub
push
lret
dec
mov
in
mov
jb
mov
add
mov
clc
rorb
xor
jmp
mov
data16
rcl
dec
mov
andps
icebp
je
push
xor
repz
lea
pop
mov
push
sbb
xor
cmp
imul
notb
push
decl
out
mov
movsl
fistpll
inc
adc
test
mov
hlt
inc
inc
and
js
dec
push
xor
stos
repz
xor
mov
pusha
sti
mov
add
dec
and
adc
add
mov
pop
sub
iret
jge
out
jb
cmp
and
add
mov
hlt
pop
adc
int
push
faddp
adc
jb
xor
inc
push
outsl
sbbl
imul
sbb
sub
jmp
stos
cltd
sbb
aaa
fcompl
lods
js
out
or
fldl
cmp
mov
xchg
or
inc
cmpsb
mov
add
jae
daa
add
mov
cmp
fcom
ret
orl
rcrl
ss
into
jg
xchg
xchg
loopne
jns
sub
bound
pop
mov
push
xor
stc
xchg
out
xor
fnsave
mov
add
aam
testl
pop
or
and
notl
mov
xchg
aam
xor
enter
adcl
jbe
outsl
fcoms
call
les
das
mov
mov
mov
aam
xor
fidivs
or
lret
lar
pop
push
cmp
stc
ja
mov
cltd
mov
cmp
cmovl
push
pop
imul
popf
sti
das
jl
movsb
push
imul
stc
popa
sbb
scas
fldcw
mov
lea
xchg
bound
sbb
pop
inc
push
fstps
or
lcall
jbe
mov
push
into
mov
stc
loopne
scas
jb
pop
sti
or
and
cmc
lret
pop
jbe
repz
sti
ret
in
lret
clc
pop
adc
cmp
mov
and
mov
mov
out
xchg
daa
xchg
cmpsl
sub
mov
test
and
dec
testb
cmp
inc
gs
enter
jmp
jns
push
xorl
test
xchg
dec
leave
aam
pop
cmp
sbb
add
rol
xchg
jae
lcall
inc
xchg
mov
and
sbbb
push
daa
sbb
andb
mov
das
outsl
xchg
cmpsb
loopne
imul
fsts
test
dec
mov
adc
lahf
and
adc
jns
adc
pop
jle
dec
or
jmp
dec
repz
and
cmp
movb
mov
enter
or
into
xor
xor
in
jne
jo
inc
cwtl
gs
mov
pop
inc
pop
sti
sbb
les
arpl
gs
jno
pop
or
dec
mov
xor
and
aas
adc
test
pop
sub
mov
pop
inc
movsl
pop
fwait
inc
cld
les
cmpsl
mov
mov
stc
mov
mov
les
adc
push
jo
test
sbb
xchg
mov
sub
jo
sbb
xchg
sub
push
lods
sbb
outsl
movb
cmpsb
jbe
add
hlt
daa
cmc
mov
int3
push
mov
pushf
mov
sbb
push
fdivs
mov
aas
or
rorb
sbb
call
jp
sbb
and
inc
das
imul
shrl
inc
pop
imul
mov
sub
lcall
mov
out
jg
lea
adc
gs
push
sub
mov
xor
mov
sub
mov
inc
cmp
mov
test
mov
lock
stos
ss
test
mov
mov
adc
inc
push
jg
xor
faddl
or
arpl
stc
and
lret
push
int
int3
add
shrb
outsl
cmp
xchg
adc
and
jp
push
jg
loope
push
jg
mov
mov
sub
pop
cmc
or
je
loope
mov
jle
add
movsl
scas
fisttps
bound
push
iret
pop
movsl
popf
daa
test
pushf
idivb
ret
iret
pop
fnstcw
mov
sti
lea
push
xchg
mov
rcrl
xchg
mov
mov
std
dec
mov
enter
push
dec
xchg
shrl
fdivrs
fldcw
aas
fnstcw
imul
dec
jle
into
pop
dec
stc
xor
pushf
in
xor
roll
cs
xchg
dec
in
inc
aad
push
shll
stc
sbb
xchg
cmp
ss
or
add
lods
push
addr16
mov
cs
into
and
pusha
mov
push
call
xor
jns
shlb
insl
jmp
sub
bound
stc
push
or
lret
sbb
test
nop
ret
ja
inc
xchg
push
loop
cli
jp
test
cli
movsl
mov
rorl
sbb
pop
sub
jns
mov
push
lock
insb
push
add
add
mov
xchg
lcall
jb
shrl
mov
fnsave
adc
jne
pusha
enter
ret
xor
stc
and
js
xor
jmp
js
push
or
cmpsb
imul
decb
stos
sbb
std
rcrb
cmp
sub
ret
sub
inc
jb
sbb
shlb
jle
aas
sarb
dec
adcl
dec
addb
arpl
stc
xchg
test
gs
adc
and
mov
cmp
sbb
and
sub
inc
pop
dec
dec
jns
arpl
mov
ds
push
movups
inc
cmp
xor
jp
dec
dec
fildl
push
daa
mov
jmp
popf
jb
mov
lds
in
mov
outsb
popa
scas
lea
push
mov
test
loopne
jno
repz
add
dec
mov
scas
adc
out
inc
dec
push
or
pop
mov
sti
jns
or
xchg
jmp
fnsave
out
mov
dec
packsswb
or
bnd
sahf
aam
jns
cmp
dec
gs
lock
popfw
mov
add
xor
pop
aad
int3
adc
lahf
sbb
add
scas
mov
mov
iret
jl
pop
mov
add
loope
and
int3
into
fs
inc
mov
cmpsb
fldt
add
and
dec
or
out
repnz
pop
mov
sbb
pop
in
int3
cwtl
jne
ret
jb
stc
or
sahf
sahf
xor
xchg
pop
push
cwtl
pop
iret
testl
out
push
xchg
and
sbb
xchg
mov
dec
mull
ss
add
pusha
xor
mov
adc
pushf
data16
push
push
push
fldcw
inc
add
mov
in
push
pop
es
lea
cmc
or
pslld
out
aam
call
rolb
ret
xchg
push
cmp
stos
push
aad
out
lcall
inc
out
inc
inc
mov
lahf
rorb
insb
and
int3
dec
jo
push
mov
xchg
insl
out
cld
test
adc
adc
mov
jecxz
or
sbb
aam
stos
mov
pop
mov
xor
push
mov
out
jecxz
aas
stos
push
rolb
sbb
ret
pop
mov
jg
push
or
push
xor
lret
jmp
les
pop
xor
jns
and
call
dec
addr16
lds
insb
repnz
add
pushf
push
sub
ret
leave
shlb
lret
mov
pushf
cs
in
shrl
mov
and
mov
lods
pop
fs
adc
push
lds
dec
and
ja
addr16
mov
lahf
mov
mov
jbe
in
xor
cmp
jne
cmpsb
sub
out
icebp
mov
inc
inc
sub
xlat
jmp
movb
sbb
push
inc
repnz
adc
data16
or
stos
push
inc
inc
inc
fsub
popa
shlb
jb
jae
lahf
add
out
lods
imul
fcmovne
mov
jge
lods
xor
inc
jns
inc
dec
imul
cmp
sarl
adc
sbb
mov
and
mov
test
repz
lock
jae
in
xor
mov
jns
jne
clc
repnz
cmp
daa
outsb
lret
pop
push
arpl
push
in
dec
adcb
add
jno
repnz
pop
in
gs
fucomp
mov
adc
mov
out
insb
push
jmp
repnz
xor
or
ja
jge
sbb
imul
js
pop
jns
gs
pop
int3
insb
js
adc
mov
mov
sbb
aad
mov
gs
dec
inc
mov
jnp
lea
sbb
adc
push
sub
in
nop
cmpsb
lahf
pop
inc
repnz
dec
test
push
ds
mov
add
mov
add
add
jbe
lds
pusha
ss
aad
xor
cmp
movhps
pusha
cwtl
adc
xor
imul
test
jae
jecxz
mov
lds
out
stc
sbb
js
cmp
fsqrt
jg,pn
lret
push
and
ljmp
inc
stc
movb
std
aam
imul
popf
sbb
pushf
aas
rclb
sbb
fldt
sub
xchg
xchg
add
sbb
push
cld
insb
dec
data16
mov
mov
shll
cmp
rorl
or
cwtl
fwait
js
pop
sahf
enter
loopne
cltd
mov
push
cmp
lcall
sbbb
pop
sahf
mov
loopne
ret
mov
mov
lock
fwait
xor
or
addr16
mov
mov
test
push
adc
push
ljmp
xchg
push
mov
stc
adc
or
xchg
out
popf
sub
mov
lods
out
dec
push
adc
loopne
test
dec
xor
cli
loop
outsb
dec
movsl
in
mov
mov
xorb
arpl
jge
dec
push
popf
movsb
xchg
mov
loope
xchg
mov
pop
inc
cmp
gs
shrl
mov
sti
lods
bound
xchg
push
dec
push
imul
fmull
movsb
aas
inc
in
mov
or
pop
test
dec
mov
mov
mov
in
sub
rorl
inc
fisttps
lret
add
dec
fucomp
and
mov
cmp
jge
or
push
mov
cmp
and
psubq
mov
sarl
mov
aas
ret
lcall
pop
jge
pop
jnp
xor
jecxz
jmp
dec
sbb
int3
dec
js
and
push
in
jno
mov
inc
dec
ljmp
mov
lret
sbb
cmpsb
inc
lods
dec
lds
xor
in
shr
mov
int3
pop
aad
lcall
mov
shrl
add
std
adc
arpl
in
pusha
adc
fsubl
pop
in
pop
mov
mov
dec
adc
add
lods
push
insb
jl
dec
adc
insb
lds
faddl
mov
je
cmp
iret
lret
movsb
es
inc
cmp
xor
and
cmp
aas
pop
jecxz
cwtl
adc
pop
add
sub
fsub
insb
test
and
bound
jnp
das
icebp
adc
in
sbb
cmp
pop
shlb
jae
dec
add
pop
fwait
or
xchg
les
cltd
or
sub
loope
add
ja,pt
jae
pop
sub
jecxz
lods
xchg
and
adc
in
out
mov
icebp
addr16
pop
jbe
out
mov
adc
sub
mov
add
add
scas
cmpsb
movsl
push
or
cmp
lock
aaa
add
scas
shrl
xchg
cmp
mov
imul
lock
pop
das
ret
aaa
mov
call
int3
jmp
push
cwtl
daa
push
push
and
lds
popa
mov
push
iret
ja
out
inc
mov
dec
jmp
pop
iret
mov
jp
lret
rcrl
xor
gs
cmp
repz
inc
ret
jecxz
out
imul
push
add
es
cmp
mov
inc
clc
loop
aad
test
cld
add
ret
aam
pusha
xor
sti
int3
pop
mov
mov
inc
pop
pop
cld
mov
sub
xor
insl
add
sub
scas
mov
or
imul
call
xchg
cmp
lods
xchg
push
dec
stos
mov
dec
dec
xor
fistpl
jae
pusha
std
aaa
add
sbb
and
pop
sub
sub
jo
sahf
pop
cmp
shrb
adc
lods
cs
fcompl
mov
mov
lret
call
imulb
mov
push
lret
insb
mov
mov
scas
leave
inc
xlat
mov
push
jb
xor
add
rcr
insb
cmp
lcall
fstpl
jne
lret
adc
mov
pushf
inc
stos
adc
jns
pop
lock
add
ficomps
rorb
jae
sub
hlt
xor
push
inc
sbb
notl
cwtl
divl
lea
adc
adc
insl
lret
push
adc
dec
sbb
sahf
test
lods
hlt
or
pushf
in
jne
out
xchg
ja
sub
sub
adc
shrb
scas
mov
dec
aaa
push
xor
arpl
sub
ret
dec
xor
es
imul
iret
mov
cmpsl
addr16
push
ja
jno
orb
lahf
inc
orl
xchg
adc
flds
jp
jae
cli
adc
xor
mov
bound
add
jmp
icebp
ja
jnp
and
and
dec
sub
push
lods
cmp
out
sbb
dec
pusha
je
push
test
mov
fbstp
into
lcall
sar
push
mul
dec
test
into
mov
pusha
sbb
jnp
lea
ss
repz
orb
push
add
bound
pop
enter
pop
lods
out
mov
lret
nop
shlb
jl
pop
mov
add
and
add
js
mov
fcmovb
fsubl
test
xor
fsubs
ret
lods
cmp
mov
in
mov
ret
test
daa
sti
in
aas
add
lretw
push
and
pop
or
hlt
adc
pusha
xlat
divl
sarl
pushf
testb
push
fst
add
scas
mov
or
addb
or
jnp
fwait
mov
inc
out
xor
iret
jae
jb
fwait
dec
aaa
mov
push
jns
mov
clc
mov
jl
push
push
jo
inc
sarl
pop
mov
push
pop
into
add
mov
ret
test
icebp
add
cld
outsl
mov
jno
inc
enter
and
inc
cmpsb
sbb
pop
out
fmulp
push
jo
cmp
mov
and
push
jl
and
in
test
cmpsl
ja
in
int
hlt
sbb
movsb
add
cmc
dec
mov
or
inc
pop
shrb
mov
nop
mov
pushf
mov
aaa
mov
add
add
inc
repz
imul
setnp
cmpsb
shlb
sbb
icebp
fdivrl
fwait
xchg
xchg
call
orb
leave
cltd
dec
aaa
pop
pop
ret
fadds
or
add
pop
dec
inc
fnstcw
lcall
mov
repz
stc
cmp
aas
movsl
jp
inc
sub
pop
jnp
imul
cmp
mov
arpl
leave
pop
fldl
loop
in
xchg
pop
das
cmp
mov
dec
inc
adc
and
je
rclb
sub
pop
sbb
xchg
adc
inc
pop
mov
adc
dec
dec
insb
xor
adc
icebp
xorb
sub
sti
in
dec
insl
outsl
dec
add
fsubrs
fsubl
pop
out
xor
lods
lret
jmp
stos
or
xor
sti
sarl
sbb
adc
jecxz
push
leave
js
sbb
popf
icebp
dec
sbb
mov
cmpsb
adc
fstpt
mov
inc
stc
ds
mov
out
iret
repz
mov
call
and
add
call
mov
xchg
push
repz
fldt
adc
int3
mov
in
mov
adc
flds
imul
movsl
jecxz
jecxz
adc
jb
mov
push
pop
fistpl
scas
jmp
in
dec
mov
movsl
cmp
xor
dec
ss
decb
popf
inc
dec
testb
insb
test
jge
sbb
xchg
pusha
inc
push
in
xchg
in
or
mov
pop
insl
inc
adc
adc
mov
fdivrl
dec
into
popa
or
jge
fs
pop
jae
daa
push
mov
xchg
mov
jp
test
mov
xlat
arpl
ret
push
and
lahf
jnp
xchg
or
inc
mov
fcompl
int3
arpl
dec
clc
fs
aam
adc
std
pop
sub
inc
xor
fdivrl
sub
pop
mov
push
sub
lds
mov
icebp
xchg
aas
bound
push
repnz
testl
fwait
sub
push
cmp
jae
lea
pop
addb
sbb
mov
jge
mov
stos
ds
push
in
xlat
inc
cmp
mov
jmp
ret
and
test
and
aaa
ret
lods
dec
ljmp
test
clc
lcall
in
out
ret
int3
pop
push
mov
nop
fisubs
lods
insl
sbbb
jne,pt
nop
jecxz
mov
push
xor
xchg
xor
adc
cwtl
subb
mov
mov
fcoms
jmp
insl
int
loop
lahf
xor
jbe
inc
mov
js
daa
mov
test
cld
xchg
sbbl
cs
mov
mov
sub
sub
out
cltd
fiadds
into
xchg
fldenv
push
xor
divl
xorl
inc
mov
xchg
dec
mov
cmpsl
jmp
push
add
call
cmp
iret
stc
mov
cmp
sub
inc
imul
xlat
ror
shl
shll
popf
or
hlt
leave
hlt
repz
int3
hlt
fildll
push
cmp
cld
jno
fcoml
rorl
xor
xor
xor
pop
mov
in
aaa
fs
std
jo
sub
nop
jle
mov
movsl
lcall
rolb
pop
inc
adcl
push
push
inc
or
scas
pushf
sti
lret
insl
aaa
sbb
outsb
cmpsb
insb
xchg
inc
push
push
mov
jg
and
cmp
mov
ds
movsb
adc
ds
dec
pop
dec
stos
loope
into
push
add
sub
outsl
lods
dec
sub
cmpl
call
inc
cld
jo
aad
pop
lock
daa
xlat
sub
popa
mov
pop
push
out
rclb
loopne
pop
mov
push
pop
movsl
push
pop
adc
ficoml
jmp
lods
sarl
aas
roll
inc
rorb
adc
sarl
adc
lods
jle
aad
and
xchg
push
push
pop
mov
sbb
push
loop
cmp
mov
scas
push
xchg
lds
imul
cwtl
mov
inc
adc
push
jle
or
das
mov
mov
loope
add
add
push
gs
mov
jno
and
pop
aas
inc
add
push
or
xor
jmp
or
mov
xchg
dec
sub
ret
mov
jecxz
lds
mov
push
sarl
les
mov
dec
dec
jno
adcb
test
jne
jecxz
insl
in
or
mov
mov
push
push
cld
cmp
les
sahf
cmp
clc
stos
jns
xor
loopne
mov
mov
xchg
push
jae
mov
sahf
cli
or
stos
xor
fwait
jo
sbb
push
adc
testb
bnd
sbb
enter
cmp
sub
pop
inc
data16
inc
shlb
push
or
int
inc
dec
push
addb
xchg
sub
in
xor
xor
das
outsb
pushf
negb
incl
cmp
add
imul
jge
int
jb
cmp
ffreep
hlt
outsl
add
sbb
adcl
xor
push
xor
adc
adc
or
mov
cmpsl
pavgw
stc
int
sar
pop
mov
jne
add
testl
xchg
jge
cmpsb
dec
or
fstl
pop
pop
dec
testl
or
mov
repz
fwait
aaa
int
mov
sbb
lret
add
insl
lcall
lds
cmp
lret
and
jmp
dec
adc
stc
ret
data16
movsb
stc
pop
cld
adc
bound
mov
pushf
scas
or
inc
sti
sbb
pop
and
in
fs
stc
mov
inc
pop
dec
hlt
adc
mov
imul
test
and
push
aad
cmpsb
xor
dec
sub
test
push
loop
movb
test
lcall
mov
loopne
sti
pop
jno
inc
loopne
repz
mov
xor
ret
in
cli
jae
xor
aaa
cld
adc
push
fmull
pop
mov
leave
daa
sub
testl
sti
mov
pop
lods
cmp
into
pop
xchg
pop
mov
adc
jmp
int
and
mov
jg
lds
and
movsb
or
jmp
inc
je
js
jb
stos
push
shr
push
mov
mov
and
sub
insl
pusha
jp
and
in
sub
mov
inc
inc
mov
outsl
arpl
xchg
cs
lea
pop
insb
ds
mov
adc
xor
add
mov
test
jge
scas
rolb
fcmovbe
push
popf
pop
loope
inc
mov
sbb
push
lret
lcall
or
rolb
xor
xor
jb
jg
nop
dec
lret
xchg
mov
inc
xor
push
push
and
lods
and
mov
rolb
inc
or
xchg
sahf
sbb
rorl
mov
xor
push
and
add
xchg
push
shlb
js
jno
sub
leave
inc
in
daa
adc
push
fadds
jecxz
gs
sbb
and
jp
sbb
mov
sub
and
mov
mov
adc
dec
outsb
jge
cmc
jge
loopne
pop
lods
incb
jge
xor
push
or
mov
pushf
scas
adc
push
in
inc
sahf
aam
loopne
inc
movsb
in
insb
push
mov
xchg
jne
or
jno
add
or
inc
cmpsb
pop
xchg
cmp
mov
mov
cltd
lret
mov
jae
inc
cmpsl
sbb
mov
cli
popf
push
jno
dec
jno
ret
bound
cmpps
jae
cld
sub
mov
and
int
cltd
pop
push
push
jp
test
cmpsl
rcr
jo
jnp
or
inc
jp
xor
cmovo
lods
dec
xor
insb
pop
inc
mov
cmpsl
sbb
in
insb
xor
popa
fs
and
stc
mov
or
andb
mov
mov
pop
mov
add
mov
pop
xor
xchg
jb
pusha
fnstenv
push
jb
filds
ss
fstps
movsb
stc
mov
into
mov
dec
push
out
xor
pop
scas
arpl
mov
xchg
fistpll
int
sub
daa
xchg
or
cmp
sbb
lahf
in
inc
dec
mov
fwait
mov
pop
inc
inc
dec
jl
pushl
cmp
push
sub
ret
jno
dec
ret
push
pop
in
xor
xchg
push
jno
mov
mov
add
cmp
dec
push
lea
inc
push
xor
cmpsl
cmpsl
xor
mov
sub
xor
stos
cs
jne
inc
leave
test
ret
lods
sub
ja
xchg
push
daa
sub
testb
cmpsb
push
cs
add
call
test
je
mov
xchg
add
and
pop
mov
adc
movsl
cbtw
idiv
or
dec
rclb
jb
mov
incl
xchg
mov
test
in
ss
sbb
cld
loopne
arpl
inc
bound
insl
cli
lds
adc
insl
mov
jg
or
sbb
ljmp
push
push
mov
test
stos
sub
iret
mov
lods
lret
inc
or
push
rorl
add
adc
dec
mov
out
rcll
dec
js
push
shl
fucom
xchg
xorl
and
arpl
mov
arpl
adc
dec
inc
test
and
stc
imul
mov
sti
cmpsb
mov
enter
mov
adc
add
in
xor
dec
or
xlat
rcrb
inc
jp
in
movsl
out
jecxz
adc
out
mov
test
scas
js
sbb
mov
jmp
aas
and
bound
stc
test
and
cmp
cmc
iret
sub
or
add
insl
sub
sti
adc
cmp
jo
mov
mov
movsl
test
inc
lods
or
divb
cli
xchg
stos
adc
sub
repz
loopne
fs
or
orl
fnstsw
fmul
jmp
mov
pop
fnstcw
xor
xchg
sbb
jmp
std
cmp
lret
adc
out
pushf
xchg
pop
mov
cmp
bound
jmp
push
mov
in
lods
jno
in
frstpm(287
std
popf
mov
test
mov
and
mov
push
and
sarl
testl
or
out
xor
loope
iret
cmp
dec
inc
push
flds
notl
push
jbe
sbb
inc
dec
inc
pop
mov
sub
push
pop
xchg
adc
imul
les
imul
lcall
popa
xor
test
mov
dec
in
pusha
movsl
cmp
mov
psrlq
adc
add
push
icebp
jnp
push
and
jmp
out
ja
adc
dec
dec
mov
mov
testl
dec
push
test
inc
adc
adc
fwait
or
stos
push
shrl
leave
jns
cmc
loope
push
es
out
mov
mov
mov
daa
fistpl
mov
push
iret
xchg
stos
mov
cwtl
pop
int3
inc
outsb
lock
adc
mov
hlt
fiaddl
push
std
pop
jno
mov
inc
into
cmc
call
mov
repz
orb
sbb
repz
push
jae
jge
je
add
lret
jne
push
or
lahf
das
dec
scas
mov
repz
pop
cmpl
arpl
xor
push
cmp
in
mov
inc
mov
adc
fimuls
sub
jle
or
scas
inc
fcmovu
xchg
scas
mov
xor
mov
xor
insl
push
push
rorb
add
scas
pop
mov
mov
inc
out
xchg
push
lret
sub
cwtl
leave
xchg
cmp
or
push
sbb
arpl
inc
jg
push
pop
test
pop
sti
or
dec
push
test
out
sub
add
jns
push
aam
xchg
movsb
jl
xchg
mov
rcll
mov
cltd
out
mov
xchg
xchg
aad
sub
daa
xor
jl
in
movsl
mov
rclb
mov
imul
adc
lds
mov
ss
cmp
cmpl
add
pop
into
inc
sti
pop
push
decb
jb
mov
inc
movsb
mov
mov
pop
xchg
pop
mov
sbb
and
jg
and
and
movsb
sbb
mov
mov
push
fadds
jmp
jno
jo
inc
dec
jae
rcrl
sub
push
jp
cs
and
xchg
bound
mov
arpl
cli
movsl
mov
xchg
out
pusha
rcrl
mov
xor
and
and
movl
lcall
xchg
mov
push
sub
lods
lods
ja
xor
mov
ds
pop
dec
das
add
lret
push
mov
aam
jne
or
shrb
inc
lods
testb
push
call
aas
cmc
adc
arpl
jns
mov
and
test
ds
xchg
insb
jo
cmpsl
fs
test
dec
sbb
sti
xorb
add
xor
mov
dec
aam
push
aam
fs
xor
xor
mov
mov
xchg
aad
popl
aas
loope
mov
mov
test
outsl
push
popf
and
sub
jl
ret
scas
ja
dec
loope
xchg
push
push
in
xor
ja
xor
loope
cmpsb
jne
cmpsb
lret
imul
sbb
icebp
test
dec
pop
jle
or
int3
xchg
fsts
add
repnz
push
mov
dec
xor
jne,pn
neg
mov
push
mov
pop
jb
and
sub
dec
fyl2x
fidivs
push
leave
inc
lcall
filds
mov
and
cmp
sbb
xchg
imul
mov
mov
mov
in
push
mov
add
fsubrs
cld
dec
xor
dec
inc
jecxz
sbb
cs
lds
dec
cmp
int3
jbe
and
cmp
push
movsb
push
or
inc
sti
stc
inc
or
mov
shll
leave
or
and
sub
popa
xor
mov
ret
add
ret
pop
or
or
aas
ljmp
repz
fnsave
jle
sbbl
repz
gs
cli
sahf
mov
js
inc
sub
push
pushf
inc
cltd
pop
jnp
inc
add
xor
inc
push
cwtl
mov
mov
dec
sarl
repz
shr
cld
subb
xchg
xor
rorl
fs
push
out
dec
push
inc
icebp
cs
mov
imul
stos
sub
je
cmp
sbb
inc
int3
dec
inc
cmp
jmp
pop
stos
repnz
add
mov
lcall
inc
push
mov
stc
cmp
cmpsb
or
aam
pop
xor
shlb
jne
dec
lcall
mov
repz
mov
nop
scas
mov
js
ficompl
movsl
and
or
adc
adc
es
cmp
xchg
dec
pop
cmp
cmp
or
out
stc
mov
in
aas
dec
push
loope
cld
data16
test
or
xchg
or
dec
push
out
sbb
les
lahf
int
pop
mov
cmp
xchg
imulb
sub
cld
iret
sub
es
push
and
imul
xchg
test
leave
xor
scas
popa
xchg
movsl
xchg
lock
les
movsl
stos
inc
adc
sahf
rcrl
jge
or
jo
aas
push
lcall
loopne
hlt
sub
xchg
inc
in
xor
jae
rorb
push
dec
sti
outsb
inc
sub
jnp
mov
mov
pop
lcall
inc
dec
push
adc
push
inc
enter
sbb
mov
push
cs
dec
test
stos
pop
mov
cltd
dec
dec
mov
sbb
jae
mov
adc
out
push
loopne
je
mov
lea
jp
ret
mov
sbb
arpl
jmp
lods
hlt
lret
js
xlat
div
xchg
ror
or
test
loope
sbb
push
xchg
jnp
fsubr
jmp
aas
add
pop
lret
jg
pop
pop
mov
cwtl
xchg
fidivrl
stos
or
movsl
jecxz
scas
mov
fs
test
inc
insb
fidivl
or
movsb
icebp
adc
mov
pop
lcall
pop
inc
outsb
aam
daa
push
push
jns
test
idivl
loope
fdivrs
or
das
xchg
movsl
cmpsb
insb
je
sbb
stos
push
jecxz
in
sub
test
or
xlat
fmuls
sti
cmp
pop
frstor
cmp
lret
popf
cltd
in
or
jnp
mov
outsb
mov
or
add
lret
or
scas
mov
inc
cmp
pop
sbb
jnp
lret
mov
lret
mov
inc
loopne
adcl
jmp
mov
gs
and
aad
jne
out
sbb
xor
test
or
mov
lcall
dec
xchg
inc
jnp
adc
fsub
xchg
dec
mov
lock
pop
cmpsb
and
mov
push
mov
or
dec
inc
adc
seta
mov
pop
jns
inc
into
loopne
mov
jecxz
lds
mov
icebp
xlat
lcall
aas
sub
sbb
ret
xor
pop
addr16
push
xchg
mov
jns
xor
xchg
pop
repnz
movsb
push
mul
pop
cltd
xchg
decl
mull
sub
into
push
xchg
out
inc
shlb
int3
mov
inc
pop
sbb
inc
or
jo
jge
cmp
mov
test
adc
rcr
aaa
adcb
jno
push
clc
xor
pusha
inc
xchg
aam
pop
or
add
xor
out
rcl
mov
mov
add
leave
ljmp
or
stc
mov
xchg
inc
rorl
sbb
aaa
sub
mov
mov
jge
cld
fisubrs
pop
sahf
out
inc
push
shrl
arpl
mov
or
mov
cs
xorb
sbb
insb
lods
jle
sub
add
subl
push
outsb
popa
or
add
scas
dec
jne
push
stos
mov
push
and
repnz
jo
loopne
adc
push
jnp
ja
cmp
fnsave
mov
into
pop
sbb
fsubr
subb
outsb
sub
int
or
or
and
movl
test
push
push
neg
aad
in
push
daa
sub
cmpsb
mov
xchg
sub
subl
mov
bswap
or
or
sub
mov
add
in
rcr
into
mov
enter
repnz
xor
mov
inc
mov
dec
sbb
bound
icebp
clc
pop
mov
addr16
mov
and
add
imul
and
int
adc
sbb
adc
jne
int3
fcom
mov
fbld
jnp
mov
inc
popa
or
adc
fiadds
cmpl
scas
ret
repnz
jo
inc
or
pop
mov
popf
mov
cmp
popa
daa
add
pushf
xor
xor
xchg
mov
test
data16
idiv
jg
subb
or
xor
xor
aaa
dec
mov
or
sahf
lods
in
fwait
push
cmc
pop
stos
jmp
dec
jl
xchg
sbb
data16
stos
ljmp
push
popa
jns
hlt
sbb
mov
call
popf
lea
pop
mov
frstor
in
imul
pop
mov
cmp
jae
ja
out
ud2
cmpsb
jo
test
sbb
andl
scas
push
jmp
mov
test
js
or
insb
dec
add
pop
not
mov
out
mov
pop
mov
add
pop
push
dec
jg
jo
fildll
pop
or
inc
hlt
dec
jne
sti
or
adc
dec
mov
sbb
sahf
xlat
push
lret
sbb
mov
jmp
sub
push
sbb
stos
pop
push
inc
add
mov
sbb
xor
aad
cld
adc
dec
xchg
xor
sub
lcall
and
inc
jne
push
dec
mov
xor
incb
mov
xchg
dec
test
test
iret
xchg
addr16
in
out
nop
inc
movsl
imul
sti
dec
jge
jg
mov
mov
adc
add
lock
pop
or
test
xor
in
ja
lods
cmp
inc
adc
or
ret
xor
ficomps
mov
cmpl
inc
sub
call
mov
js
adc
sbb
iret
adc
pop
cmp
add
subb
mov
lret
js
fmuls
fildl
or
mov
pop
nop
dec
xchg
xor
outsl
call
sub
test
test
ret
push
cmp
mov
cmpsb
mov
mov
les
mov
sub
lock
mov
testb
lock
stos
and
cli
lret
idiv
xchg
sub
adc
jg
pop
mov
adc
test
jb
sub
add
push
jl
xchg
mov
dec
cwtl
cmp
dec
ret
add
mov
lock
push
fs
out
mov
adc
cmp
movb
jnp
sti
ret
jmp
cmp
push
mov
cltd
push
xchg
cli
or
push
in
xchg
xor
mov
je
movsl
mov
int
xchg
or
add
sub
data16
xor
and
leave
add
push
lods
sub
add
dec
fwait
sahf
lret
es
xchg
jnp
add
out
pop
cltd
jmp
jae
test
push
nop
mov
in
lods
dec
into
pop
in
jle
xor
into
fsubrs
cld
xorb
or
cmp
sub
xchg
pop
outsb
imul
popf
xchg
fstpl
dec
adc
orl
cltd
sub
iret
cmp
dec
stc
sarl
inc
fidivl
outsl
in
dec
inc
nop
cmp
ljmp
jno
dec
ret
pop
mov
sub
test
mov
adc
jnp
jle
loope
or
scas
test
pop
ret
pop
jmp
in
daa
jo
imulb
dec
xor
jns
mov
add
cmpsb
sub
in
mov
add
mov
nop
cld
sbb
xchg
sbb
and
jns
fmuls
mov
sub
sub
lret
sbb
add
push
mov
push
cmp
pop
les
adc
mov
dec
es
xchg
push
mov
jl
mov
in
add
pop
notb
mov
and
ret
int
scas
int3
in
add
push
jo
rolb
pop
mov
dec
pop
subl
aad
js
fistps
lret
bound
fldt
sbb
and
pop
and
repz
fcmovne
stos
stos
dec
loope
dec
add
ss
push
inc
pop
shll
fstp
roll
adc
and
arpl
jb
push
dec
cmp
and
addr16
lds
lock
mov
xor
xchg
sbb
imul
test
in
pop
mov
sbb
adc
out
jmp
loop
jle
fisttpll
arpl
std
daa
lret
jge
push
sti
push
fwait
pop
or
cmp
adc
cmpsl
lods
test
mov
sub
pop
sbb
push
out
and
cmp
daa
sbb
pop
scas
gs
inc
sti
lahf
arpl
mov
mov
sbb
mov
jae
notb
ficoms
mov
mul
fistpll
inc
insl
jl
fstl
push
mov
mov
inc
fidivrs
jmp
pushl
add
imul
mov
mov
in
movsb
out
adc
insb
jns
rcrl
push
mov
test
cmp
ja
es
sahf
std
push
mov
fimuls
add
cld
insb
clc
xor
jae
push
loop
cld
mov
fsub
ja
imul
hlt
adc
mov
out
decb
mov
xor
jbe
add
fwait
lcall
dec
test
cwtl
adc
adc
pop
rcrl
loopne
lock
xchg
orb
pop
dec
xchg
sub
jp
dec
bndldx
push
out
sbbb
test
lea
int3
inc
mul
test
ret
jl
cmpsl
mov
aad
or
cmpsb
inc
arpl
fsubl
loop
stos
test
and
outsb
es
sbb
inc
mov
inc
call
in
sub
mov
mov
popf
outsb
pop
aam
mov
xor
push
mov
fnstcw
setns
jp
cmpsb
shlb
out
dec
mov
aam
xor
in
add
not
or
mov
or
adc
ret
fmull
sub
xor
push
mov
jmp
dec
ret
adc
in
and
fcoms
daa
icebp
xchg
adc
cmp
subb
das
sub
sahf
sbb
or
mov
in
push
std
test
xchg
aas
adc
ds
popf
outsb
addr16
lcall
push
jb
mov
addr16
mov
pop
ret
xchg
lret
lcall
lock
pop
mov
inc
pop
add
sub
mov
xor
mov
mov
fildl
mov
push
clc
out
jle
or
sbb
sahf
pop
xor
mov
into
adc
outsl
das
cltd
mov
mov
rcrl
mov
leave
ret
clc
mov
popf
xchg
pusha
call
add
jge
sub
sbbb
pop
xlat
stos
or
adc
inc
out
sti
js
int3
sub
repz
das
pop
icebp
inc
ret
popf
and
testl
mov
movsl
or
or
push
and
adc
add
mov
dec
rol
lds
call
data16
push
mov
adc
ljmp
hlt
mov
ljmp
push
nop
test
xchg
mov
fdivr
nop
adc
dec
pusha
adc
sbb
icebp
fwait
in
ret
xchg
shrb
push
push
and
sbb
ficoml
fs
adc
mov
sub
and
dec
into
add
sarl
xchg
mov
lret
int3
mov
mov
aaa
xchg
fcomps
inc
cld
adc
jmp
push
ljmp
lds
cmp
jge
dec
cmpsl
push
pusha
lods
stos
push
in
cmp
test
in
pop
sbb
or
pop
add
imul
inc
mov
cmp
xchg
push
inc
outsb
jl
pushf
jno
xchg
daa
xchg
mov
lret
mov
lods
out
or
push
adc
clc
lret
inc
cmp
clc
adc
add
les
leave
push
sub
jmp
rcrl
pop
insb
jmp
mov
adc
hlt
mull
lret
cli
lods
xchg
test
inc
mov
mov
clc
mov
jae
jae
daa
mov
data16
sbb
xor
xchg
xchg
mov
mov
or
xchg
adc
iret
setl
mov
test
cmpsb
jl
int3
mov
aaa
pop
int
addsubpd
imul
daa
ret
jo
je
lods
ret
aad
lods
loop
loop
fsubl
lds
push
or
out
lods
jae
cmpsl
addr16
cli
add
pop
mov
xor
add
jo
mov
inc
jno
sar
pushaw
call
xor
cld
and
enter
pushf
sbb
testl
loop
jnp
and
xor
stc
arpl
push
pop
les
fwait
aas
dec
sarl
mov
gs
test
std
js
rcll
push
lods
lods
cmp
icebp
fwait
lahf
pop
lea
movsb
iret
pop
sarl
les
daa
and
dec
stos
add
pop
xor
insl
inc
ja
test
lcall
out
out
sti
test
xchg
gs
or
mov
movsl
outsl
jmp
push
jg
addl
cmp
mov
xchg
sbb
aam
mov
mov
mov
push
cmpsl
add
add
add
cmpb
pop
jp
scas
sub
xor
shll
leave
or
insb
inc
or
xchg
pop
test
out
sbb
dec
mov
popa
sub
mov
sub
and
jae
push
lods
inc
or
out
mov
movsb
test
xchg
jecxz
push
loop
xchg
lds
add
xor
adc
dec
xlat
leave
cmp
xor
pop
adc
and
xor
loope
cmp
cwtl
fwait
lret
pushf
mov
mov
inc
sbb
pop
jle
imul
push
inc
int
sbb
push
mov
stos
imul
mov
mov
in
stc
or
fisttpll
xor
out
inc
mov
fldt
rorb
mov
sbb
pushf
fs
fcomps
sub
and
xor
cmpsb
mov
out
cmp
mov
mov
push
cmp
dec
cld
dec
dec
add
out
sub
out
lods
push
cmp
rorl
ds
iret
das
cmpl
popf
cli
pop
add
inc
and
js
mov
mov
mov
add
jg
out
cltd
gs
mov
pop
inc
mov
push
sub
mov
jge
enter
push
hlt
pop
out
call
je
xor
test
dec
mov
and
push
leave
repz
stos
int
popf
mov
imul
mov
lds
sarl
pusha
adc
cmp
cmpsl
mov
mov
loop
push
lret
inc
jo
inc
or
out
into
sbb
xor
popf
sub
loope
arpl
or
xchg
lahf
add
sbb
test
mov
mov
int
loopne
lcall
add
outsb
cmp
aam
adcl
clc
cwtl
out
add
jecxz
negl
cmp
es
dec
cmc
pop
bound
repnz
clc
pop
add
pop
lods
inc
jmp
loop
icebp
repz
cmp
and
mov
dec
and
sbb
fwait
sbb
push
xor
jl
stos
outsb
mov
cwtl
xchg
lret
pop
xchg
sub
inc
test
push
or
xchg
into
inc
and
inc
sbb
pusha
pop
sbb
xchg
lcall
mull
out
adc
fimull
cmp
or
cmp
fwait
outsb
lcall
fwait
cmp
xor
mov
push
jo
and
es
je
test
repz
out
out
jmp
push
and
notb
outsl
xor
dec
add
nop
sbb
int
mov
add
enter
repz
daa
and
or
fsubs
mov
dec
into
jo
inc
addl
pop
mov
stos
jbe
mov
lahf
rcrl
push
in
mulb
mov
pop
mov
imul
mov
push
repz
pop
sbb
insl
int3
mov
ljmp
pop
and
and
bound
int3
xchg
fidivrs
xor
pop
sarl
inc
push
push
push
mov
stos
fbstp
rcl
mov
inc
scas
outsl
les
int
cmp
mov
aam
adc
add
clc
repnz
mov
sbb
dec
loopne
jg
aam
mov
and
sbb
dec
xorl
mov
dec
and
pop
or
loope
pop
fidivs
push
push
push
aam
sbb
loopne
and
pop
or
cld
dec
sahf
shll
inc
cmpsb
mov
and
mov
xchg
sbb
fcomip
imul
and
xor
leave
fs
std
cs
mov
mov
add
nop
fisttpll
scas
xchg
mov
pop
clc
adc
jmp
mov
dec
sti
xor
xchg
test
scas
notb
je
mov
lods
dec
ret
adc
inc
xor
scas
jmp
jecxz
mov
inc
shll
inc
dec
dec
ss
push
xchg
push
ljmp
xor
jnp
mov
inc
scas
lds
mov
into
lcall
imulb
xor
mov
jl
inc
add
daa
in
mov
push
mov
pusha
cmp
fdivp
mov
scas
lds
push
dec
cs
cmpsl
scas
rcl
mov
add
mov
into
or
daa
in
gs
scas
lods
js
fistl
and
lea
cmpl
cmpsb
nop
rcr
and
sub
pop
insb
fadds
push
loop
and
in
sub
add
mov
subb
sub
pushw
fwait
mov
xchg
out
push
stos
xchg
or
insb
stos
dec
cld
mov
test
adc
cmpsb
mov
mov
loop
xchg
jne
loop
or
repnz
pop
mov
in
arpl
in
add
leave
out
leave
jnp
lock
lds
test
iret
data16
cmpsl
or
mov
pop
jns
cs
out
pop
das
mov
ja
repz
sub
es
push
mov
rorb
add
dec
ja
in
xchg
frstor
jp
xchg
insl
jb
jno
mov
gs
cs
mov
iret
out
sbb
and
pop
ja
cmc
cmpl
xchg
jg
daa
test
inc
aaa
repz
inc
out
mov
fsubp
mov
add
adc
pop
sbb
sbb
jae
push
aam
out
cmp
xchg
mov
push
sbb
mov
cmp
or
lock
adc
stc
sub
sbb
out
imul
repz
sbb
ficoms
mov
jne
sbb
mov
and
addr16
sub
shrl
adc
das
sbb
mov
fwait
cmpsb
clc
pop
ss
fdiv
out
cmp
add
cwtl
sub
pop
xchg
jb
jne
jns
cli
dec
cmpsl
sbb
fcoml
aad
and
mov
popf
cmp
arpl
xor
int3
jb
incb
mov
add
jle
xchg
cli
or
aaa
fsubrl
pop
xor
pop
adc
sbb
mov
dec
aam
push
loopne
jne
xor
ret
push
repnz
ret
daa
test
xchg
out
xorl
sbb
jae
fdivrs
push
call
pushf
in
in
ds
lcall
xchg
out
pop
out
dec
mov
mov
dec
cmp
in
cmc
stos
xchg
inc
sub
cld
shlb
cli
or
push
nop
fdivl
out
rorb
fdivs
pop
add
int3
xchg
adc
add
pop
enter
adc
data16
cli
out
xchg
pop
and
sub
cmp
add
push
fmuls
dec
bound
mov
push
loopne
in
inc
lds
adc
push
out
mov
mov
andl
cmc
ret
roll
repz
aad
mov
aam
iret
movb
and
ret
shrb
jl
nop
lock
cmpsl
sbb
jg
arpl
jle
inc
mov
pop
mov
push
popf
subl
loopne
popf
mov
cli
ficoml
mov
stos
or
out
or
jb
push
sarb
loopne
nop
mov
push
adc
mov
sti
rclb
push
lcall
sub
inc
pop
int3
imul
adc
icebp
sub
loope
add
add
jb
cli
ljmp
cmpsb
jb
xchg
and
shrb
mov
mov
in
clc
mov
das
push
aaa
and
stos
imul
sbb
lods
sub
add
int3
stos
add
scas
and
adcb
clc
sbb
leave
xor
mov
je
sbb
cltd
push
sahf
fstl
imul
aam
add
push
ljmp
jle
jecxz
inc
aas
add
pop
pop
nop
cmpsb
jecxz
ds
mov
ret
inc
fmull
js
inc
xor
imul
cmp
xchg
mov
push
dec
adc
es
push
cmp
dec
sub
out
adc
and
jae
fdiv
and
jb
stos
jno
hlt
fsubl
xlat
pop
int3
mov
dec
lods
dec
cld
adc
lret
dec
lods
and
lret
pop
sbb
adc
popl
cmp
cmp
jne
jp
mov
add
xor
sub
scas
into
sub
cltd
imul
mov
pop
xchg
and
add
jae
aaa
push
cmp
lods
push
out
pop
jle
xchg
add
aas
pop
fstpt
lds
lret
dec
ljmp
sbb
std
fidivs
jp
jp
ja
inc
mov
xchg
popf
imul
aam
daa
shrl
scas
xor
cmp
mov
xor
lods
mov
sub
or
fisubl
or
in
cmp
popa
and
sbb
push
cmp
mov
add
dec
dec
sti
dec
inc
or
fmuls
orb
jbe
mov
cmp
test
inc
mov
mov
lds
push
xlat
cmp
outsb
sub
leave
test
mov
push
cmp
mov
jb
xor
leave
push
test
outsl
adc
bound
je
dec
daa
fisubl
push
movsb
lea
mov
push
mov
lods
adc
inc
inc
cwtl
and
repz
jo
imul
push
sahf
pop
pop
pop
out
jne
sub
jecxz
jae
fisubrl
in
mov
lods
mov
idivl
add
lret
shll
out
xor
int
test
pop
in
cmp
or
adc
dec
xor
mov
push
out
or
jbe
xor
je
aaa
mov
aam
les
xorl
jmp
aas
imul
xchg
sbb
mov
lcall
pop
test
into
xor
mov
adc
mov
sbb
hlt
ret
ret
std
testl
movsb
fbld
int3
xchg
repz
and
mov
cld
adc
insb
ret
les
pop
cwtl
popa
mov
sub
push
icebp
int
andb
push
negb
mov
cs
jb
jbe
cltd
xor
jb
sub
mov
negb
jnp
xchg
enter
loope
dec
mov
fiaddl
fucom
xor
ljmp
repz
inc
loope
sbb
push
cmp
jo,pn
xor
je
add
mov
inc
jecxz
das
inc
fwait
cwtl
adc
in
push
mov
and
in
pop
jno
in
mov
or
das
lret
ss
jmp
cmp
test
push
inc
sbb
leave
jmp
jnp
jo
and
mov
fsubrp
ret
inc
movsl
jp
aaa
fisttpll
push
movsb
inc
jae
mov
push
cmc
movsb
cmp
hlt
and
adc
aaa
mov
sbb
push
jecxz
pusha
jecxz
aad
push
scas
rorl
movsl
pusha
xchg
jb
repz
mov
adc
jne
lock
les
xor
add
cld
lock
xor
in
fistl
jp
jbe
push
movsb
cmp
push
repnz
int
pop
roll
mov
mov
adc
cmp
imul
jp
sbb
test
push
add
nop
addr16
insl
jb
dec
daa
test
mov
mov
sub
pop
sbb
and
cmp
outsl
iret
outsl
call
into
push
aam
aas
lret
popf
in
pop
pop
inc
fadds
mov
lret
movsl
add
cli
negl
popa
aam
shrb
or
or
adc
int3
lock
movd
addr16
push
jecxz
sbb
push
in
lea
and
add
call
and
loopne
mov
imul
cwtl
stos
pop
fcoml
add
nop
push
mov
push
fidivrl
mov
fstpl
insb
setp
mov
ss
js
dec
push
cmp
sbb
rolb
xor
xchg
lret
out
hlt
mov
shll
js
mov
negl
sbb
mov
in
rclb
and
gs
test
popa
lret
sbb
fstpl
pusha
fmull
inc
mov
cld
jmp
mov
and
or
and
and
cmp
jmp
arpl
loopne
das
ficompl
sti
fstpl
fwait
data16
enter
pop
pop
fdivs
lock
dec
aaa
adc
ds
sub
adc
add
mov
rclb
hlt
adc
outsl
mov
rolb
pop
dec
pop
lret
imul
cmp
fbld
adc
inc
dec
cltd
mov
insb
sub
xlat
movsb
loope
sub
sbb
sbb
sahf
movsl
mov
cld
push
push
xchg
daa
aad
insb
xorl
sbb
inc
xchg
clc
ljmp
push
or
outsl
rcrl
movsl
outsb
xchg
xchg
xchg
mov
mov
mov
lds
mov
fcom
inc
jg
and
push
adc
sub
mov
push
outsb
mov
sub
push
xlat
sbb
orl
or
orb
and
pushl
xor
fmuls
inc
into
or
dec
cmp
pop
add
sub
and
mov
inc
push
stos
xchg
lret
ret
jg
imul
lds
dec
push
shlb
push
xor
cmp
dec
clc
jae
daa
movsl
iret
cmp
fwait
bound
sbb
push
enter
xor
mov
mov
ret
or
bound
cmp
sbb
int
dec
mull
sbb
dec
jnp
and
sti
inc
ret
xor
je
mov
loope
inc
jge
or
xchg
ja
loope
push
pop
icebp
sbb
mov
lret
push
push
and
xor
je
ffree
cmp
repnz
mov
pop
pop
and
pop
js
rcrl
sarl
cmp
sub
adc
xchg
in
sbb
in
shll
ja
test
or
jno
pop
pop
inc
mov
cmp
pop
int
pop
lods
sbb
sub
lcall
jle
sub
dec
pushf
lods
neg
pop
add
mov
jmp
imul
orl
fsubrl
or
mov
xor
cmpsl
and
dec
cli
in
insl
inc
call
mov
dec
xor
pop
ret
push
xchg
jmp
sbb
adc
cs
or
mov
inc
testl
and
sbbl
pop
roll
shrb
jo
imul
pop
sub
test
sbb
hlt
xchg
lret
arpl
add
dec
jae
cld
xchg
add
inc
mov
pop
mov
push
pop
adc
aad
lds
lds
jb
movsb
mov
pushf
fstpt
push
scas
hlt
jnp
push
jae
fimull
movsl
decl
xchg
fldl
xor
bound
inc
mov
loopne
divl
pusha
sub
outsl
incl
loop
mov
mov
xchg
dec
xchg
jge
rolb
loop
inc
loopne
mov
push
sub
pop
es
ficoms
inc
xor
dec
out
sahf
mov
pop
jmp
data16
rorb
ds
das
adc
rol
andl
cmp
and
xchg
je
int
xor
popa
ja
mov
cli
pop
pop
into
add
cmp
cwtl
jmp
lea
dec
cltd
dec
sbb
jg
ret
lods
add
in
sahf
dec
cli
ds
adc
sbb
mov
call
cmp
orl
sarl
fneni(8087
add
jne
dec
out
add
inc
iret
cmpsb
scas
mov
ficoml
cmp
mov
jl
push
adc
mov
cmp
in
cmp
sbb
jb
adc
bound
inc
or
xor
iret
xlat
es
sub
in
mov
data16
xor
push
xchg
and
jnp
pop
fwait
mov
jle
xchg
dec
push
subb
enter
inc
fwait
xchg
mov
dec
sbb
lea
fwait
adc
pop
hlt
scas
pop
es
jne
dec
push
mov
cltd
xor
loope
iret
mov
inc
mov
push
inc
adc
xchg
sub
xor
mov
fcoms
mov
in
scas
fldt
stos
or
shll
fs
mov
outsb
xor
out
rclb
mov
pop
fimuls
mov
mov
ret
movsl
les
popa
pop
or
jp
aaa
aas
sbb
sub
fistpl
cltd
ljmp
mulb
lea
idiv
sub
rcrb
xchg
inc
stos
xor
xchg
push
pusha
in
lea
mov
mov
sub
lahf
pop
shll
mulb
aam
pop
and
gs
sub
and
lret
adc
jbe
jmp
pop
mov
sarb
adc
out
jne
jecxz
ret
cmp
mov
lock
adc
orl
pop
mov
sub
push
and
push
imul
test
sahf
addr16
fisubl
cmpsl
push
push
ljmp
push
mulb
xchg
rolb
adc
or
inc
in
pop
pop
push
mov
pop
sahf
mov
mov
pop
stos
pushf
movsl
inc
and
fistl
int
mov
popf
dec
xchg
pop
fnop
ret
sbb
scas
iret
mov
push
ja
push
adc
mov
xlat
mov
pop
pop
bound
insl
pop
or
adc
jle
adc
mov
push
mov
mov
std
sub
mov
adc
xchg
sbb
aaa
jge
jmp
out
test
jecxz
aaa
push
xchg
mov
xchg
nop
repnz
jl
inc
dec
xor
mov
add
stos
pop
test
jbe
int
or
add
xchg
mov
test
mov
leave
test
aas
fld
in
call
mov
cmp
imull
fldl
cs
or
pop
lds
push
outsb
mov
cmp
sub
movsb
push
mov
xchg
pusha
nop
mov
jge
add
or
popf
fnstsw
stos
ss
add
mov
ret
cmp
test
jp
add
mov
out
enter
mov
inc
jg
mov
out
jb
fs
shrl
movsl
leave
ret
xchg
inc
xchg
xor
nop
mov
fs
jecxz
sub
cmc
xchg
nop
mov
adc
lea
mov
xor
inc
fdivs
dec
adcb
lock
lret
int
xchg
and
dec
repz
cmp
jae
aaa
jle
movsl
orb
jmp
cmc
int3
push
pop
lcall
cli
ss
lea
rcrb
pop
cwtl
mov
fs
cmp
clc
push
lcall
sub
push
mov
shrl
inc
mov
outsb
adc
xlat
in
sbb
test
aas
add
cmp
repz
shll
movsb
sbb
add
fstpl
shrb
call
jb
and
sahf
pusha
into
addl
out
jne
adc
icebp
in
xchg
xchg
mov
cli
scas
jg
aad
cmc
or
push
add
mov
into
pushf
imul
testb
into
xchg
inc
sub
adc
scas
cmp
fnstcw
or
outsl
repnz
or
jno
sub
xor
mov
cmpsb
sbb
add
sub
out
xor
ffreep
jb
leave
enter
push
movl
jo
les
scas
add
mov
iret
mov
sbb
pop
dec
stos
addl
inc
test
mov
idivb
jmp
inc
cltd
mov
leave
mov
mull
jmp
sub
jp
sub
mov
das
loop
call
push
mov
inc
mov
jnp
lret
and
enter
in
sub
xchg
test
aaa
int
ljmp
xor
into
cmp
xlat
mov
neg
sbb
movsb
push
fdivl
jmp
jp
inc
push
xchg
in
mov
fdivrp
sahf
iret
sbb
xorl
xchg
adc
dec
xor
sbb
push
add
add
inc
lds
xchg
arpl
sub
out
pushf
into
push
pop
xlat
cmp
mov
lret
push
jp
lret
test
repz
dec
add
pop
push
adc
cmp
dec
lods
jp
and
cld
pandn
mov
ljmp
or
xor
rcll
clc
jns
xchg
cs
push
or
mov
in
imul
adc
mov
xchg
fmuls
enter
outsl
lds
test
stos
je,pn
push
ja
mov
xchg
mov
lret
jmp
adc
pop
gs
adc
jl,pn
sbb
mov
js
or
fs
pop
iret
insb
repz
ret
sbb
mov
lret
or
aad
test
or
and
cs
ficoms
les
fcomip
mov
mov
idiv
movsb
mov
rclb
stc
xchg
sub
pop
add
icebp
scas
js
or
xchg
scas
jg
mov
xor
mov
and
iret
popf
jb
jle
out
inc
ss
and
sahf
inc
shl
mov
imul
sbb
cmc
dec
popa
cld
daa
mov
scas
mov
lds
pop
cs
dec
cmp
cmpsb
push
pusha
dec
inc
cmp
dec
dec
cmp
xchg
jg
cmp
in
pop
subb
mov
sbb
jo
sub
xor
nop
lret
or
mov
sbb
lret
or
mull
ss
popa
push
in
jno
jb
cmpsb
mov
inc
jle
inc
fsubp
test
cmpsb
lock
cmp
pop
arpl
rorb
out
sub
in
add
lahf
mov
mov
push
push
push
bnd
dec
jae
pop
mov
pop
in
testb
adc
pop
mov
xchg
sub
fwait
loop
pusha
push
sbb
inc
fs
int3
ret
fs
in
cmp
aad
sub
mov
pop
out
or
shlb
mov
jo
stc
popa
int3
push
xchg
js
jecxz
jae
imul
push
test
lcall
cwtl
mov
cmp
or
sbb
stos
int3
in
int3
scas
add
cmpsb
les
mov
add
fimuls
imul
je
stos
in
lahf
loopne
bswap
dec
mov
dec
inc
out
fbstp
popf
out
cli
cld
sub
add
fildl
cmp
cmpsb
pop
sub
and
sar
xor
incb
or
rclb
mov
insb
xchg
pop
pop
popa
fimull
jl
sbb
enter
aaa
sti
outsb
mov
dec
test
mov
jo
sbb
sahf
and
pushf
addr16
in
add
cs
mov
xchg
leave
jno
push
sbb
sahf
popf
adc
jo
out
sub
sub
mov
loopne
test
mov
push
or
jae
cmc
mov
es
jne
sub
or
movsb
ret
mov
out
imul
stos
jae
and
mov
pop
pop
fadds
mov
sahf
test
aaa
test
jp
xchg
ds
push
lods
pop
fcomps
mov
in
out
lcall
mov
in
in
mov
sbb
ja
fwait
xchg
sbb
cmp
in
xchg
ds
std
hlt
or
and
test
mov
into
sbb
xchg
cmpsb
cmp
outsb
jae
dec
lds
sar
mov
cmp
fstpl
es
mov
bswap
mov
movsl
enter
loop
cmp
fdivr
sti
jns
jo
inc
in
dec
js
gs
invd
mov
loope
sub
movsb
jo
sbbb
mov
xor
and
out
fistl
das
or
xchg
mov
mov
jp
imul
cmp
cld
xor
addr16
dec
enter
and
and
lods
sar
inc
push
mov
aad
cmpsb
imul
sbb
gs
xor
test
push
out
mov
pushf
call
xor
inc
xchg
les
call
mov
imul
test
ljmp
mov
sub
mov
popa
add
pop
push
stos
ja
jle
mov
sahf
popf
ljmp
dec
stc
mov
mov
mull
in
frstor
lcall
test
imul
les
fwait
data16
sbb
pop
mov
mov
fcmovu
dec
jb
test
sbb
jae
push
xchg
in
jle
jo
aam
sbb
aad
or
add
adc
lods
xchg
sbb
loopne
xchg
push
mov
jo
cmp
stc
xchg
sbb
push
pop
push
sub
xlat
loopne
mov
in
xchg
std
cmpsl
dec
or
pop
rcr
das
cmpsl
add
sub
lock
fucomp
cmpsl
and
hlt
cwtl
fsubrp
imul
les
adc
push
push
outsl
ljmp
xchg
push
imul
xlat
pop
or
mov
cmp
mov
mov
jp
xchg
xor
das
arpl
sub
xchg
lret
outsl
inc
push
scas
dec
imul
dec
cli
incl
jle
outsl
mov
leave
dec
xorl
mov
stos
nop
stc
stos
push
flds
and
int3
pop
mov
pop
dec
cmpsb
jp
jmp
insb
gs
es
fnstenv
lahf
push
mov
incb
stos
cmp
icebp
sbb
test
inc
jg
into
out
dec
xor
jbe
into
lock
or
shrb
sbb
xchg
lret
loope
sbb
jmp
jnp
mov
adc
shll
sub
test
repz
mov
cltd
jecxz
sub
or
mul
push
xor
mov
xchg
mov
xchg
popf
mov
inc
add
cmp
rclb
and
jo
mov
ss
das
xor
test
je
mov
inc
fistl
mov
scas
aas
sub
ror
popf
add
data16
sub
stc
push
xchg
jnp
popa
je
ret
incl
pop
mov
mov
lcall
mov
ds
ds
fwait
sarl
or
dec
xorb
arpl
jg
in
fwait
and
mov
inc
inc
roll
imul
ss
mov
push
test
std
jge
out
cli
fwait
cmp
imul
aas
mov
adc
or
push
and
sbb
stos
test
ficomps
jno
aam
jae
fs
sbb
cs
inc
xor
pusha
pop
inc
mov
adc
movsl
adc
xchg
insl
mov
loop
push
mov
leave
push
pop
enter
sub
xor
or
repz
dec
add
pop
xchg
mov
lcall
jecxz
push
push
or
shlb
dec
cmp
pop
sub
or
and
in
mov
clc
inc
cmc
sbb
or
scas
inc
into
test
pop
fstps
pushf
fs
lods
stos
cmc
pop
pop
mov
imul
movb
imul
ja
push
mov
in
mov
pop
daa
xchg
xor
jb
jae
sub
and
inc
aaa
inc
test
hlt
dec
push
push
mov
jmp
lea
mov
in
stos
inc
cs
dec
adc
dec
xor
adc
dec
jne
dec
sbb
push
or
movl
mov
pop
jne
pop
clc
xor
xchg
pop
stos
scas
ret
in
and
mov
jo
mov
stos
cmp
lahf
jmp
icebp
adc
mov
lret
clc
mov
pop
out
jne
testb
jmp
pop
add
or
push
fldt
xchg
int
ret
in
loop
sbbl
push
pop
xchg
ljmp
mov
icebp
lahf
push
pop
jge
icebp
push
in
popa
or
sub
dec
pop
pushf
mov
mov
out
push
adc
mov
pop
loope
fdivr
xor
dec
cmp
add
loopne
shrb
xchg
dec
fxch
mov
mov
pop
push
test
or
lea
cmpb
dec
pop
loop
bnd
sahf
out
mov
out
xchg
xor
pop
nop
imul
mov
mov
lock
mov
arpl
pop
lock
jne
in
push
jnp
xchg
push
jnp
loop
lret
mov
dec
jle
adc
inc
enter
mov
rol
or
cmp
cs
jne
pop
mov
dec
cmp
daa
repz
jae
sbb
fbld
or
sub
sarb
lret
cs
fadds
daa
imul
lret
xor
aas
mov
sub
dec
push
mov
mov
cltd
inc
jne
sbb
sbb
in
cmp
fwait
ljmp
jne
je
push
sub
xor
jp
arpl
movl
out
ret
int3
sahf
xor
jge
push
pop
loop
je
imul
sahf
dec
cli
pop
lahf
iret
ja
in
xchg
push
sub
mov
mov
mov
frstor
fsubrs
roll
lahf
pop
aas
mov
push
mov
mov
cmp
mov
xchg
das
faddl
leave
mov
xchg
mov
lock
mov
sar
push
imul
iret
and
mov
mov
jl
mov
lods
mov
fildl
in
add
movsb
outsl
lods
in
out
fprem1
xor
dec
dec
mov
movsb
pop
xor
adc
dec
mov
fnsave
mov
jecxz
inc
cmp
in
xchg
das
xchg
lds
rclb
in
scas
jmp
int3
dec
xlat
stos
jmp
and
sti
andl
mov
lds
mov
cmp
fsubl
xor
add
jl
adc
shlb
add
pop
fcmovb
stc
daa
lahf
out
cmp
pop
dec
mov
xlat
les
idiv
ret
mov
inc
jl
out
sbb
push
lds
movsl
jae
out
popa
cmp
adc
in
cwtl
adc
pushf
mov
jb
mov
jae
popf
bound
jno
xchg
icebp
in
les
push
mov
dec
loope
in
fisubrl
push
inc
lods
fnstsw
aaa
mov
jne
dec
push
sahf
std
inc
pop
or
mov
repnz
hlt
sub
js
sti
cmp
cmp
add
jo
mov
je
xor
lods
jmp
jl
shl
and
xchg
inc
inc
mov
lods
sub
and
scas
repnz
je
jg
fldenv
popa
and
jge
std
dec
fisttpll
test
pop
hlt
pop
fs
ja
push
inc
lds
xchg
pop
filds
add
xchg
and
and
stos
xor
xchg
popf
push
push
repz
stos
inc
gs
jge
stos
cwtl
inc
insl
or
test
mov
or
mov
ret
cld
rcrl
push
outsl
mov
cmpsb
inc
fucom
int
jae
adc
call
dec
xchg
inc
enter
add
ffreep
mov
insl
or
inc
add
mov
lahf
pop
mov
insl
cmp
shl
pop
sbb
adc
insb
mov
ror
imull
push
adc
loope
add
test
sarb
or
std
mov
jbe
addr16
es
rcrl
call
fstpt
jnp
loope
xchg
sahf
aas
inc
int
test
pop
test
loopne
addb
ss
loope
cmpsl
sub
fsubl
dec
add
insl
mov
bound
mov
cmp
and
pusha
out
mov
pop
sub
movsb
cmp
inc
jno
and
sbb
lea
rolb
xchg
sub
pop
shll
stc
loope
es
or
fcompl
sahf
jns
shlb
add
jae
sbb
adc
mov
jo
sbb
fs
js
jle
mov
arpl
divb
push
aad
pushf
push
dec
mov
cmpsl
push
add
loopne
fs
xorl
sbbl
xchg
lea
subb
cmp
xchg
lods
ror
loope
movsl
jbe
test
lea
lock
push
in
rclb
sbb
pop
aam
fcmovnbe
and
mov
je
pop
lea
mov
jbe
mov
mov
mov
fcmovnu
sub
xchg
mov
cmp
icebp
pop
push
call
pop
in
xor
movl
repnz
popf
repz
push
sub
test
sbb
jmp
mov
xchg
or
and
lretw
popa
sub
lods
xor
popa
lcall
in
lds
jae
cmp
lcall
lods
roll
adc
mov
or
int
insl
sti
jo
fdivrl
push
mov
push
cmc
adc
ss
adc
movsl
pop
xchg
lcall
push
arpl
cmp
ljmp
out
cmp
mov
loopne
adcb
xchg
and
pop
mov
test
jl
push
xlat
lea
and
pop
sbb
jno
leave
add
add
xor
and
sbb
scas
aam
inc
mov
sub
xchg
stos
pop
pop
sub
fnstsw
xor
loope
pop
and
test
out
sub
call
push
dec
pop
icebp
mov
fnstsw
mov
cmp
repz
test
into
popf
fsts
fwait
rorb
push
cli
dec
cmp
push
pop
dec
gs
cmpsb
mov
cltd
pushl
adc
dec
insl
loop
add
dec
in
mov
pop
out
inc
jmp
pop
addb
andb
cmp
jno
cmp
icebp
js
or
aas
sub
pop
xchg
es
sahf
mov
in
mov
pmaxsw
stos
sub
dec
mov
xor
ret
dec
les
es
outsb
adc
xchg
cwtl
inc
pop
mov
idivb
jns
mov
pop
sbb
pop
xor
dec
jmp
inc
dec
movsb
popa
mov
leave
test
or
loope
cmp
out
out
inc
lds
xor
lret
sbb
dec
movsb
dec
fisubrs
inc
fildll
jnp
jb
sub
popa
and
iret
mov
inc
mov
shlb
stc
stos
icebp
sbb
mov
inc
std
cmpsl
ds
cmpsl
hlt
stc
scas
shll
mov
aas
sti
outsl
cld
mov
cmc
dec
insb
inc
cmp
dec
loop
std
mov
in
inc
sub
enter
pop
push
data16
cmpsl
mov
filds
mov
cmp
into
mov
imul
hlt
rcrl
jg
jnp
xor
push
sti
mov
push
loope
jl
dec
inc
add
mov
repz
lret
and
mov
insl
loop
push
sbb
mov
push
pop
push
cli
inc
xorl
ss
sub
mov
ja
sbb
mov
pushf
fbstp
outsl
jmp
and
pop
aam
test
pushf
hlt
arpl
dec
in
mov
ds
ret
xchg
push
into
andl
sbb
jae
cs
shr
mov
jo
int3
pop
mov
lds
rorb
push
lea
gs
xchg
std
ret
or
xlat
test
xor
push
sbb
mov
shlb
insw
in
xchg
jno
in
jmp
insl
test
and
pop
test
adc
sub
arpl
jb
nop
sti
into
mov
dec
daa
aam
pop
and
mov
xor
scas
and
mov
pop
xor
sub
mov
jmp
fildl
scas
jl
mov
icebp
pop
stos
xchg
and
scas
push
lret
add
inc
sub
and
push
cmpsb
cwtl
cs
or
test
xchg
push
dec
mov
into
cmp
ljmp
sub
arpl
inc
inc
dec
xorb
js
push
add
out
es
out
loop
lock
cli
adc
pop
and
lahf
jle
addr16
stos
ja
mov
push
not
pop
ss
cld
push
or
stc
js
arpl
mov
push
adc
aaa
adc
and
mov
mov
push
xlat
out
mov
shl
lock
imul
aaa
outsb
stos
dec
inc
dec
jmp
push
shrl
or
lret
adc
lret
pop
repz
test
test
cld
mov
pushf
adc
xchg
clc
mov
fimull
push
add
add
push
mov
aaa
add
sahf
fistps
dec
dec
test
push
cmpsb
dec
lods
cltd
negb
add
xchg
mov
jmp
xchg
mov
pop
xchg
xlat
aas
dec
xchg
test
movsb
test
add
das
out
sub
lods
xor
das
mov
scas
cmp
ja
and
je
or
jo
jns
lds
adc
scas
jns
jne
pop
cmpsl
or
ret
dec
jae
neg
movsb
sbb
and
jns
call
mov
mov
lods
adc
xlat
daa
inc
xor
pop
adc
mov
adcb
xchg
loope
nop
icebp
movsb
cltd
nop
sbb
mov
cmc
vfrczsd
cmc
clc
xchg
and
and
adc
mov
sbb
les
and
out
enter
jnp
inc
mov
jno
mov
push
imul
adc
jae
ljmp
insb
inc
fldt
call
cs
mov
daa
pop
push
mov
insl
xchg
sub
cmpsl
sti
or
dec
nop
leave
and
mulb
inc
sti
add
je
inc
dec
cmp
and
das
cwtl
sbb
xor
pop
inc
hlt
in
dec
push
fldcw
mov
jle
sbb
loop
dec
pop
shll
pop
rorb
pop
jb
aad
sbb
test
dec
adc
xor
movsb
mov
sub
jns
cmpl
dec
scas
sbb
test
push
inc
stos
out
je
pop
push
jp
out
xchg
out
into
mov
sbb
mov
mov
loope
and
and
mov
orl
jge
fbstp
mov
fstps
in
xchg
sub
testb
xchg
daa
or
inc
mov
ret
mov
inc
or
lock
addr16
addr16
outsl
adc
adc
cmpsl
xchg
lods
pop
mov
mov
inc
xchg
cmp
sub
lahf
gs
int
mov
inc
pop
jecxz
pop
sbb
push
inc
add
lock
nop
lret
clc
scas
push
sbb
cs
int3
xchg
push
popl
cld
lahf
sbb
movsb
pop
lcall
icebp
test
rcrl
push
call
popf
out
inc
mov
inc
jns
mov
hlt
aad
jns
nop
inc
rorb
enter
or
push
mov
imul
ja
sbb
mov
fsubs
lea
out
adc
pop
push
pop
xchg
jne
aas
cltd
stc
inc
add
add
test
xlat
sbb
outsb
lret
pusha
xrelease
jecxz
test
and
pusha
insl
test
pushf
mov
and
mov
loope
pop
inc
xor
or
xor
lods
fs
outsl
hlt
idivb
cmp
jmp
lods
xchg
add
pop
rcrl
sbb
fidivrs
mov
inc
wrmsr
out
imul
lods
std
outsl
daa
add
nop
add
pop
mov
mov
and
xor
push
inc
xor
mov
add
mulb
and
std
pop
arpl
clc
fadds
ret
mov
fisubrl
ja
popa
into
loope
xor
mov
jecxz
sbb
and
outsb
push
lahf
cmp
cmp
mov
ljmp
clc
movsl
xor
lds
rolb
int
loopne
sub
jmp
out
mov
dec
dec
inc
in
push
and
popf
cmp
push
rclb
fwait
popa
icebp
jg
add
out
mov
out
ds
dec
popf
js
dec
jne,pt
cmpl
subl
pushl
inc
xor
scas
mov
push
pop
add
jns
rorb
xchg
mull
cmp
mov
lahf
gs
sub
or
pop
add
xor
dec
inc
mov
mov
movsl
jno
andb
loopne
mov
jmp
imul
stos
ss
adc
out
mov
sbb
sbb
mov
push
cmp
addr16
jle
add
sbb
push
lock
or
push
and
pop
sbbb
jecxz
leave
mov
aad
mov
xchg
cwtl
mov
fstl
mov
stos
cltd
inc
pushf
stc
int
inc
cmc
nop
fldt
and
pop
cmp
test
stc
cs
imul
dec
test
jecxz
adc
jl
je
je
pop
fnsave
lea
incl
out
mov
sarb
jns
rorl
lahf
lods
pop
sub
xlat
jl
xor
leave
push
mov
mov
notb
ljmp
stc
scas
fisttps
sahf
lret
mulb
je
xchg
fsubl
cmp
mov
mov
jmp
mov
nop
inc
loope
ret
rcll
insb
xor
out
and
sahf
rorl
inc
xor
mov
in
cwtl
out
lret
fs
push
xchg
aam
cmp
mov
jae
push
inc
or
mov
int
fnsave
dec
sub
mov
into
notl
mov
cmp
rcr
inc
and
sbb
push
pop
iret
dec
cld
dec
xchg
sbb
hlt
cld
lea
mov
sub
lcall
out
push
popa
dec
xor
sub
subb
pop
sub
test
pop
in
movsl
nop
rcl
mov
in
dec
ljmp
cmpb
or
test
or
ja
rorb
aaa
int
inc
dec
jecxz
shrl
jge
out
sti
dec
sarb
cld
push
movsl
lcall
dec
inc
aad
dec
rcll
sub
popa
inc
stos
jecxz
movsl
add
test
test
add
sbb
xchg
sub
rcrb
inc
loop
rcr
repz
pusha
mov
pop
lods
outsb
add
jl
in
enter
mov
daa
and
mov
xor
cld
adc
xchg
mov
test
les
repz
jno
mov
and
mov
lcall
ljmp
jp,pn
lret
divb
cwtl
outsb
addr16
daa
mov
jmp
mov
push
adc
into
pop
inc
pushf
add
sub
mov
bound
add
jg
mov
lods
lret
std
mov
popf
add
mov
sar
addr16
xor
andb
outsb
lcall
or
jecxz
lret
dec
jo
mov
in
xor
jns
and
push
pop
xchg
xor
fsubrs
pop
cmp
push
adc
movb
add
outsl
cltd
or
ljmp
add
sbbb
mov
inc
push
ret
repz
bound
dec
stos
xor
inc
jp
mov
jnp
ret
jns
cmp
incl
dec
aad
sarl
pcmpeqb
popa
mov
leave
imul
push
addr16
ror
mov
insb
in
aad
mov
mov
pop
clc
adc
mov
movsb
lcall
inc
lcall
insl
sub
xchg
sbb
pop
imul
arpl
shl
mov
cld
pop
mov
orl
into
xchg
push
or
lods
mov
aaa
popf
fcomip
cmp
pusha
cmpsb
inc
jae
dec
inc
jae
or
sbb
mov
loopne
inc
lahf
inc
cmpsl
xchg
and
aas
sbb
daa
mov
ss
stos
imull
pop
int
loopne
xchg
jno
jle
pop
adc
outsl
jl
dec
or
cmp
rolb
outsb
or
lods
aas
jnp
or
dec
push
mov
cmpsb
lock
xlat
push
repnz
mov
add
bound
or
push
dec
cwtl
add
jp
mov
jge
loopne
mov
mov
mov
int
in
cltd
loopne
pop
loopne
xor
cmp
and
cmp
es
push
repz
or
in
insb
or
xchg
add
xor
cmp
in
push
adc
push
ja
mov
stos
push
pusha
popf
dec
neg
mov
imul
xchg
imul
das
mov
cmp
mov
sbb
jbe
fisubrs
int3
xchg
call
lret
out
sbb
nop
cmp
repnz
sbb
cltd
stc
lret
cmp
das
xor
mov
or
insw
sbb
lret
cmp
mov
hlt
in
into
arpl
and
inc
and
sbb
dec
cmp
cld
das
cltd
stc
cld
cmpsl
decl
jbe
cmp
mov
cmp
stos
mov
cmp
ret
loopne
lock
stc
push
mov
mov
inc
test
sti
lock
stos
ret
aas
ljmp
push
inc
pop
in
ret
push
or
cmpsb
xor
es
cmc
lahf
daa
inc
cmp
inc
push
sbb
shlb
push
std
insl
or
inc
mov
adc
leave
fsubrs
rolb
fcmovbe
fistl
and
into
nop
and
dec
sbb
mov
insb
push
inc
xchg
arpl
xchg
fdivs
push
outsb
cmp
idiv
inc
adc
sahf
adc
imulb
fcoms
inc
push
lret
add
xchg
cmp
fcomps
jl
mov
sbb
pop
fldln2
xor
sub
dec
xchg
sbb
imul
sub
mov
and
call
lock
testb
adc
xchg
cwtl
jge
orb
movsb
cmpsb
cltd
addr16
mov
mov
or
cmp
imull
jnp
into
les
push
mov
jb
outsb
and
cs
xchg
dec
push
jp
das
lods
arpl
push
out
insl
mov
lods
cmp
xchg
jle
mov
cmp
sbb
lret
incb
enter
cwtl
repz
add
cmpsl
cmc
jp
xchg
packsswb
push
sahf
outsb
add
jecxz
push
js
adc
sbbb
mov
push
add
cmpb
pop
ja
mov
or
lods
addr16
dec
aad
stos
adc
sbb
test
aad
int3
sub
data16
cmpsb
fsubl
or
cmpsl
out
bound
cld
mov
aaa
mov
push
lds
xchg
aam
inc
jl
ljmp
in
iret
sbb
sub
mov
adc
or
aam
mov
sbb
test
aaa
mov
mov
inc
dec
nop
ja
int3
push
sti
das
dec
lret
lahf
jge
shll
push
mov
shll
ds
loop
lods
jg
dec
jb
aam
push
imul
jmp
pop
mov
add
add
pushf
shl
fcompl
sub
xchg
loopne
dec
jne
push
cld
movsb
lods
sti
push
sub
aam
and
cmp
inc
pop
test
in
sbb
cld
idivl
leave
popa
fcmovnb
jno
mov
js
jg
xor
loopne
add
ficoml
mov
test
sub
mov
rdmsr
dec
add
lahf
push
push
sbbl
ja
hlt
fmuls
dec
daa
push
push
xlat
outsb
jno
cmp
cld
in
mov
out
sti
jbe
jg
bound
in
mov
mov
lahf
dec
jns
lret
adcb
and
imul
xchg
push
mov
pop
je
clc
stc
test
adc
hlt
push
pop
push
sub
cmp
aam
dec
jno
loope
jb
mov
xchg
dec
fldt
add
into
sbb
push
les
add
pop
ret
int
add
pop
fistl
and
aam
cmpsl
lods
xchg
sub
pop
inc
insl
and
hlt
fiaddl
movsl
sbb
xlat
jb
lods
mov
xchg
in
inc
cmp
int3
push
sub
or
pop
jge
mov
cmp
pop
jb
push
xor
ljmp
jb
mov
push
cmp
inc
js
adc
sbb
popf
push
xchg
push
fimuls
cli
cmp
test
clc
fstpt
cs
mov
mov
xlat
cmpsl
xchg
mov
hlt
inc
int3
sub
pop
push
inc
push
pop
adc
js
mov
cld
sbb
addr16
mov
pop
cmp
pushf
and
and
push
or
add
enter
insb
push
adc
mov
sahf
or
and
cltd
stos
xlat
cmpsl
stos
inc
mov
cmp
jecxz
call
ficoml
mov
icebp
push
idivl
std
cmp
cmp
xlat
popa
mov
movsb
popf
fidivrs
fidivs
sub
and
movsl
xchg
jge
cwtl
outsb
xchg
ret
ljmp
sbb
in
mov
xor
and
mov
mov
cmc
add
adc
out
leave
jo
dec
mov
cmc
mov
fisubl
mov
std
call
repnz
insb
xor
lret
lods
popf
repnz
xchg
cld
lret
inc
and
and
aad
ret
jmp
lds
int3
pop
xchg
xchg
jae
mov
pop
std
out
mov
pop
sub
shlb
js
xor
mov
or
out
mov
adc
dec
cmpsl
jmp
push
nop
imul
into
pop
fcoml
push
testl
or
add
cli
or
scas
xchg
push
inc
cmpsb
mov
sub
into
lahf
sbb
fiadds
mov
scas
inc
mov
mov
xlat
aad
jns
int3
lret
cwtl
lahf
mov
int
jmp
inc
shl
stos
fnstcw
std
ficoms
aaa
xor
mov
lods
js
lea
stos
out
jmp
imul
inc
push
test
popa
stc
mov
and
test
cmpsb
jle
dec
outsb
or
lret
mov
xchg
xor
orb
int3
cmp
popa
adc
in
push
in
lds
push
dec
rcrl
sbb
repz
jo
ss
pusha
mov
xchg
or
push
jmp
adc
xchg
sbb
xchg
dec
inc
inc
cmp
sub
cs
inc
cmpsb
jno
inc
sub
into
lahf
push
xchg
sbb
jnp
mov
int3
daa
cmp
daa
sbbl
stos
mov
dec
or
jne
arpl
or
aam
push
or
or
add
aad
cli
dec
or
xchg
gs
mov
sbb
xor
shll
mov
lods
mov
jle
jp
sub
mov
frstor
cmp
orb
loope,pn
push
cs
lcall
cmp
inc
xorl
lock
in
and
mov
cmp
dec
movsb
mov
and
pop
mov
xchg
xor
lods
hlt
hlt
sbb
cs
lahf
dec
pop
jge
pop
rorb
sahf
and
inc
lret
sub
int3
dec
fs
aas
mov
jg
lcall
adc
leave
gs
mov
inc
jle
adc
rolb
push
aam
nop
sub
aad
dec
cmp
cmp
add
push
ds
imulb
xchg
jecxz
fimull
pop
sub
pop
xchg
addr16
dec
jno
incb
push
je
and
test
movsl
jne
cs
xchg
stc
inc
pop
aad
sub
adc
shrb
or
push
pop
ret
xor
sarb
andl
test
fs
and
jbe
push
and
pop
fisttpll
push
cmpl
pop
bound
push
and
or
mov
mov
jo
or
mov
jl
das
pop
xchg
pop
jl
mov
cli
bound
sbb
sbb
stos
dec
ds
mov
add
out
fldcw
insl
mov
pop
inc
and
cmp
ljmp
cmpl
sti
xchg
lret
popf
shlb
movsl
iret
or
pop
lds
js
dec
push
outsb
stos
jns
xchg
lock
adc
stc
pusha
sbb
cmc
nop
pop
cwtl
je
fwait
push
xchg
outsl
jno
jne
mov
mov
inc
inc
daa
cmp
jne
cs
repnz
aad
mov
mov
out
and
inc
sub
mov
cmpsb
aad
fsubrl
fiaddl
mov
gs
or
jnp
clc
pop
xorl
outsb
mov
and
xor
mov
jns
push
mov
es
int
and
aad
out
hlt
xchg
or
push
jae
adc
jle
out
pop
test
mov
fs
push
aad
or
movsl
fadds
fwait
je
sub
xor
data16
in
scas
cmpb
test
sbb
cmp
imul
mov
call
mov
adcb
ljmp
add
cmp
pop
mov
ss
pop
push
shrb
sbb
mov
adc
inc
repnz
sbb
andb
or
fisubrl
sarl
test
pop
xchg
push
pop
cmp
jp
mov
xchg
push
lods
imul
adc
decb
mov
mov
in
insl
pop
scas
ficoms
int
popa
test
scas
hlt
lods
stos
rcrb
lea
adc
lret
mov
xchg
idivl
dec
mov
aaa
nop
adc
or
stos
adc
push
outsl
loopne
and
imul
jno
mov
out
in
rorl
jl
clc
and
sbb
fdivs
rclb
xor
daa
xor
loop
in
or
adc
and
ljmp
jbe
sbb
jae
dec
pop
pop
inc
sub
lds
cmp
in
adc
nop
lahf
xchg
stc
mov
ret
fsts
jmp
sahf
mov
cmp
jb
and
cltd
push
in
mov
jno
stos
mov
inc
sbbl
dec
aaa
jecxz
inc
mov
pop
inc
and
fbld
aas
inc
xor
or
hlt
xor
int
mov
imul
stos
bound
mov
add
jmp
pop
mov
stos
repnz
adc
lret
xchg
mov
div
xor
and
sbb
push
lahf
cltd
xor
lods
sbb
jbe,pn
lea
xor
fsubrl
inc
popa
mov
data16
jno
dec
add
int3
inc
pop
mov
fisttpl
xchg
movsl
dec
ja
loop
push
fs
out
mov
cmp
or
shlb
pop
and
adc
push
lds
lret
pushf
mov
ds
sub
mov
dec
push
div
fdivl
iret
aas
addr16
mov
push
xlat
mov
cmp
inc
mov
in
arpl
add
pop
std
inc
mov
out
xchg
jp
mov
push
pop
cmp
shrl
xor
stc
das
call
inc
imul
jl
or
pop
imul
scas
add
mov
test
sbb
xchg
aam
in
jno
xor
jmp
lock
pop
or
or
mov
rep
xchg
inc
jg
cmp
jne
mov
ja
scas
mov
lahf
mov
cltd
push
inc
gs
inc
add
or
xor
ret
sub
test
insb
fisubl
aaa
and
in
dec
loop
mov
adc
mov
je
rcl
stos
xchg
loope
ret
and
push
cwtl
sub
in
cmp
sub
add
mov
push
mov
les
iret
out
cmpsb
leave
xchg
arpl
fadds
outsl
or
hlt
pop
fs
inc
adc
dec
scas
mov
imul
cmp
pop
xor
ret
push
xchg
inc
movsb
jne
adc
aas
push
mov
hlt
fistl
adc
push
scas
lea
call
mov
dec
out
bound
lods
push
imul
dec
cs
mov
sbb
xchg
mov
pop
sbb
mov
inc
and
mov
pop
sahf
js
sub
shl
cld
or
cmpsl
shll
mov
mov
xchg
sti
mov
mov
insb
scas
test
movsb
fiaddl
or
xchg
pusha
out
xorb
sub
lods
push
xor
mov
cwtl
out
mov
mov
out
jg
adc
and
add
imul
test
sub
icebp
xlat
push
mov
cltd
fidivl
ffree
enter
inc
outsb
dec
subl
sbb
negb
test
xor
ljmp
repnz
pop
mov
imul
insb
add
push
xorl
std
mov
lods
sbb
imul
and
lds
sub
mov
jb
addb
loope
lahf
test
cmp
push
out
or
shll
scas
nop
call
js
pop
mov
push
inc
int
pushf
cmp
cmovnp
lods
and
lret
cld
push
ret
sbb
js
hlt
add
dec
push
dec
xor
inc
pushaw
aaa
dec
adc
dec
insl
lcall
mov
jle
dec
mov
cmp
jecxz
add
sbb
pop
pop
mov
push
xchg
cli
push
cld
xor
mov
std
mov
jp
jae
dec
xchg
mov
mov
jae
shll
es
add
fsubrs
sti
mov
mov
mov
xchg
stos
subl
gs
cmp
out
push
pushf
aas
or
mov
lds
jb
adc
into
ds
loopne
je
lds
jle
mov
mov
sti
xchg
aaa
jns
mov
jae
aas
sbb
xlat
imul
imul
add
pop
sub
mov
sbb
mov
lret
adc
cmpsl
lret
xor
stos
jecxz
lret
stos
das
mov
lea
jl
aam
fildl
pop
add
mov
and
mov
inc
or
cmp
xchg
xchg
rcrl
mov
sbb
push
out
cwtl
int3
sub
mov
mov
sbb
xlat
xorb
mov
push
stc
bound
aaa
jno
mov
jmp
mov
mov
dec
stc
mov
dec
addb
push
fwait
iret
push
sub
jno
add
push
testb
jne
in
xchg
dec
mov
int
add
stos
add
mov
fucomip
push
cmp
inc
movsb
jl
pop
push
cs
repz
mov
std
xorb
jo
inc
push
or
dec
cmpsb
lahf
lahf
iret
or
and
pop
repz
mov
stc
cmp
mov
and
mov
pop
les
push
mov
repz
loopne
jnp
aam
dec
movsb
or
in
ficoms
xor
sti
sub
lret
lcall
mov
ret
cmp
pop
fxam
out
aaa
xor
push
mov
mov
cmp
fsubl
inc
xchg
pushl
pop
sub
dec
cs
xchg
add
sub
inc
cmp
push
stc
sub
loopne
jl
adc
sbb
aas
rcll
ret
out
lods
and
ds
push
xlat
xchg
mov
enter
or
fbstp
adc
push
mov
into
fnstsw
loop,pn
inc
pop
cmc
sbb
sarl
jmp
sbb
jnp
jmp
mov
dec
inc
jecxz
sub
int3
es
adc
inc
add
aaa
sbb
jl
or
cmp
mov
inc
xor
or
sub
outsb
sbb
cmpsb
xchg
add
daa
mov
outsl
ret
mov
add
inc
std
loope
push
ret
sub
push
xchg
push
mov
pop
mov
pop
pop
lock
loopne
mov
loope
outsl
sub
pop
push
xchg
aaa
sbb
push
ljmp
test
pop
cmpsb
cmp
in
aas
in
ret
push
sub
js
std
clc
dec
pop
leave
jnp
jmp
push
jnp
dec
adc
adc
dec
jge
fsubl
adc
jns
inc
jg
outsb
fiaddl
sets
les
push
jle
incw
scas
add
xlat
aaa
xchg
adcl
les
adc
mov
push
repnz
es
das
jmp
mov
outsl
sub
jle
mov
xor
inc
mov
bound
stos
sub
rcll
es
lods
pop
out
daa
loopne
out
idivb
pusha
inc
cmpsl
dec
dec
clc
adc
test
fsubrl
sbb
popa
cld
repz
xchg
ret
and
ja
push
push
mov
clc
jno
js
xlat
sbb
iret
shlb
call
inc
ja
out
pushf
xchg
addr16
ret
push
jmp
lods
inc
mov
sbb
mov
sarl
ret
jle
aam
jg
inc
das
cwtl
enter
aam
or
gs
ljmp
jb
popf
test
adc
jg
dec
or
sbb
cmpsb
dec
aam
or
addb
xchg
cmp
mov
mov
in
inc
imul
dec
or
pop
or
sub
adc
lret
mov
pop
jnp
push
out
nop
imul
mov
sub
add
negb
xor
push
flds
pop
push
and
lds
adc
sbb
xchg
xchg
loop
inc
inc
push
cmp
test
xor
mov
test
xchg
ljmp
in
leave
shrl
cmp
add
addr16
sub
inc
daa
sub
popa
push
mov
lea
rcll
out
cmpsl
imulb
loope
sti
push
stos
lret
sahf
sbb
xchg
test
out
push
lods
pop
data16
les
shll
adc
inc
in
aam
dec
lea
adc
dec
aad
repnz
sti
sbb
adc
fbstp
mov
or
int3
mov
ja
push
mov
and
insl
xlat
mov
xchg
sbb
pusha
ljmp
mov
mov
fstpt
lahf
jp
daa
push
mov
adc
jmp
test
dec
mov
imul
fldcw
adc
scas
mov
jecxz
add
sbb
inc
dec
sbb
inc
dec
sbb
pop
jne
mov
add
push
jo
stc
clc
jmp
jge
insl
fnstenv
divb
mov
push
outsl
push
pop
mov
clc
and
in
xchg
adc
sti
jbe
call
jno
hlt
inc
cli
add
rcrl
fcoml
adc
aas
xchg
cmp
add
data16
mov
nop
stos
xor
push
fwait
loope
mov
imul
mov
arpl
js
push
pop
aad
xchg
scas
mov
cld
xchg
mov
jb
std
sub
std
jecxz
stos
mov
pop
movsl
in
pop
fmul
mov
xor
loop
test
xchg
lock
gs
cmp
sbb
sub
aam
imul
inc
xchg
testb
xor
adc
push
push
jecxz
dec
cmpsb
sbb
push
xorb
adcl
movsb
ss
test
ret
mov
fisubrl
or
xchg
das
xchg
and
and
push
rclb
jnp
out
mov
and
xchg
fdivrl
daa
push
mov
xchg
inc
int3
and
pop
xchg
dec
subb
aaa
dec
pop
adc
add
mov
cmp
mov
mov
mov
sub
leave
adc
pop
mov
lods
cmc
xchg
inc
iret
cmp
addb
jb
mov
jge
adc
and
mov
stc
push
out
mov
shll
and
mov
shll
mov
jnp
fwait
mov
push
insb
cmp
add
fisubrl
notl
out
faddl
loop
outsl
shr
xchg
shll
nop
adc
rorb
cmc
sub
push
adc
sbb
sub
movsl
xchg
mov
cmp
mov
mov
or
in
sbb
jb
jmp
mov
adc
mov
xchg
adc
icebp
lret
jg
xor
pop
mov
inc
and
mov
cmp
jbe
push
cmpsl
mov
xchg
subl
ss
mov
xor
outsb
daa
sbb
les
push
adc
pushf
sbb
dec
shr
sub
sbbb
and
xchg
fistl
add
loop
inc
xlat
jl
cld
push
xchg
cmpsb
ret
mov
rorb
bound
add
dec
push
cmp
nop
cmp
or
cmp
dec
pop
jle
add
rcll
sub
mov
pop
inc
insl
pop
sub
std
andl
add
and
jge
stos
fdivs
aas
sub
mov
in
jne
test
jge
add
imul
push
int3
xchg
call
sbb
fdivp
jnp
sub
push
lds
sub
mov
in
and
or
or
sbb
iret
cmpsb
leave
xchg
xchg
lea
stc
mov
sub
mov
push
sti
add
jns
das
dec
add
or
subb
imul
mov
pop
mov
cmp
mov
imul
adc
movsb
jp
out
insl
push
ja
pop
sub
add
mov
xor
ds
test
lods
xchg
test
jg
xor
sub
push
xchg
inc
sbb
mov
aam
in
cmp
fldenv
push
movsl
pop
sbb
sub
jg
test
movsb
gs
adc
cli
movsl
mov
enter
pop
popa
mov
sbb
pushf
mov
push
int
mov
mov
push
adc
test
dec
test
mov
mov
mov
adc
lea
ljmp
push
add
into
mov
jmp
rorb
mov
mov
rclb
fs
add
mov
pop
leave
rol
cmp
enter
rolb
xchg
fwait
cmp
ret
inc
pop
dec
and
fnstcw
mulb
dec
dec
ret
and
add
test
sbb
cmpsl
cmpsb
cli
lret
pop
or
aaa
mov
fwait
or
push
gs
out
imul
pop
inc
jnp
mov
sbb
fists
sub
xor
fdivrs
je
or
dec
inc
mov
and
data16
lods
addr16
cmp
dec
mov
dec
push
mov
push
pop
add
push
shl
in
out
add
mov
pop
fisubl
sbb
pop
popf
int
dec
dec
add
out
mov
mov
jns
jnp
mov
push
sbb
jmp
mov
je
push
test
das
loope
adc
dec
call
sub
hlt
mov
mov
repnz
ljmp
enter
fsubs
je
adc
mov
or
stos
js
jnp
ja
repnz
pop
jle
ljmp
xor
and
inc
dec
inc
cltd
add
inc
in
stos
cmp
xor
stc
scas
icebp
jns
add
pop
sbbb
dec
sub
adc
lret
cld
sub
cltd
push
pop
outsl
orb
pop
mov
pop
push
mov
mov
xor
cmpsl
jl
push
scas
add
sbb
cld
and
int
push
xlat
hlt
adc
and
cmp
jp
int3
ret
lock
mov
shll
movsb
inc
xchg
lret
jne
mov
xchg
inc
lret
les
es
je
inc
push
pop
adc
out
ds
pusha
leave
addb
lea
adc
xor
adc
push
xor
ret
mov
inc
xchg
out
out
aad
scas
xchg
xchg
daa
xor
frstpm(287
fsubrl
popa
fbstp
dec
cli
pusha
add
pop
sbb
push
cmc
hlt
mov
push
cmpsb
jno
pop
divb
call
cld
das
lods
jle
mov
lods
add
inc
push
cld
jbe
jae
shl
pop
push
stos
in
jne
loop
faddl
dec
pop
sub
fnsave
test
cmovg
adc
adc
lahf
std
in
cmp
sub
cmp
xor
data16
lret
imul
movsl
ret
gs
xor
and
lea
imul
xor
push
mov
xor
inc
push
push
stc
or
leave
stc
in
jg
aad
cltd
aam
cmp
xchg
popf
mov
mov
cli
xchg
xor
xor
fdivrs
jg
scas
adc
pop
int3
int
jae
add
sbb
fs
mov
mov
cmpsb
mov
inc
cwtl
scas
cwtl
int
xchg
cmp
sbb
jg
int3
sub
mov
test
xor
lods
ret
test
aam
rorl
incb
imul
test
push
push
mov
fbld
mov
imul
mov
mov
mov
sub
mov
jae
or
ds
cmp
mov
repnz
movsb
rcl
or
cltd
lds
popf
testl
mov
add
movsl
dec
cs
ret
cld
push
mov
popf
cmp
daa
hlt
cmc
dec
stos
sub
jp
lods
mov
mov
xchg
push
outsb
mov
jns
inc
idivb
rcll
xor
outsl
ret
jge
jnp
jb
cmp
icebp
cmpb
lock
aad
jp
in
dec
stos
ljmp
lcall
into
cmpb
cmp
popf
int
cmpsl
imul
xorb
inc
jb
loopne
or
lods
cmc
sbb
mov
mov
movsb
nop
call
arpl
inc
lds
out
enter
cmp
fsubrs
add
push
in
popf
stc
xchg
bound
imul
xchg
and
mov
pop
rolb
pushf
in
lock
imull
mov
lods
mov
push
lret
repnz
cmp
xchg
movsl
mov
lea
lahf
jb
cmp
test
add
stc
adc
push
shrb
pushf
icebp
dec
or
daa
ret
lahf
mov
fsubl
jle
filds
int
pop
out
fdivrs
es
dec
mov
sbb
daa
out
enter
aam
out
xor
inc
sub
pusha
cltd
loopne
sub
dec
dec
add
push
push
fldcw
jns
or
push
jecxz
push
dec
gs
lret
js
push
push
jg
mov
sub
out
inc
jp
dec
fwait
xor
fidivrl
xor
add
pop
sub
clc
lods
nop
push
pushf
pop
sub
mov
fists
test
aam
mov
push
xchg
test
push
and
cli
inc
xchg
js
movsb
jl
and
cli
dec
mov
mov
loope
lcall
or
stc
ds
push
leave
daa
pop
push
or
or
adc
adc
movsl
movhps
add
inc
mov
hlt
and
add
pushf
imul
test
fwait
cltd
jge
jno
xor
sbb
mov
test
mov
xchg
dec
push
jge
sarb
push
mov
cmp
test
divb
cmc
cltd
or
mov
stc
out
dec
or
push
mov
xchg
mov
sahf
inc
add
imul
add
pop
push
push
mov
in
adc
sahf
lods
jmp
mov
data16
cmp
dec
jnp
pop
sbb
mov
test
into
push
xor
xchg
pop
pop
jp
aaa
out
adc
fcoml
push
jge
mov
movsl
xchg
imul
jge
pop
enter
xorl
push
push
mov
cs
ret
dec
cmp
pop
ja
ljmp
aad
lea
fsubs
adc
dec
test
in
test
les
enter
push
dec
cwtl
adc
and
flds
cvtdq2ps
jmp
pop
cmp
int3
inc
pop
inc
cmp
pop
sahf
addr16
aam
das
out
jecxz
pop
sub
sbb
cmp
into
jecxz
push
test
rorl
jp
add
sub
pop
movsl
xchg
xchg
incl
mov
mov
mov
jns
cwtl
icebp
out
adc
jo
gs
insl
outsb
pop
loop
fidivs
sub
mov
loopne
or
add
es
sub
mov
les
divb
adc
push
test
jns
xchg
out
sbb
xor
push
mov
ja
jb
sbb
stos
add
clc
scas
push
mov
test
jno,pn
mov
xchg
in
ss
sub
popa
mov
push
outsb
sbb
inc
sbb
je
xchg
loope
jge
mov
cwtl
jnp
push
xchg
loop
adc
jae
add
aam
add
call
popa
lods
loope
xorl
sub
xchg
pop
lret
movsb
shrb
mov
mov
mov
jg
mov
loop
dec
xor
test
xor
xor
div
int
mov
call
cmp
xor
push
push
cmp
mov
lahf
cmp
sub
sbb
and
adc
mov
ss
push
ljmp
icebp
add
cs
stos
jb
cltd
push
sbb
xchg
sub
pusha
jl
cli
cmp
inc
cld
stos
mov
in
mov
cwtl
jle
inc
outsb
movntps
cli
xchg
push
push
je
and
lock
jno
xchg
mov
fcomps
jno
inc
cwtl
xchg
xor
sbb
sub
xchg
into
pop
push
mov
inc
push
inc
in
push
imul
ret
fidivl
adc
test
add
pop
clc
outsb
cs
fwait
mov
mov
cmp
mov
test
xchg
xchg
mov
jl
pop
mov
jae
clc
ficoml
adc
sub
cmp
xor
sbb
popf
icebp
sbb
lcall
pop
xchg
xor
lds
cmp
adcb
sub
sti
mov
aam
adc
negl
mov
je
jbe
adc
in
sbb
nop
xlat
mov
inc
fdivrs
and
push
roll
insl
and
fnstcw
pop
cmp
sbb
dec
pop
and
adc
or
test
loopne
and
aaa
jmp
jg
sbb
aad
mov
inc
sar
pop
scas
insl
jg
jl
stos
add
dec
jnp
sbb
mov
rorb
fdiv
mov
or
dec
inc
scas
fdivrp
mov
xor
mov
lds
das
mov
ja
enter
test
pop
pop
dec
aas
mov
xchg
inc
push
loop
cltd
je
in
mov
rcr
inc
aad
shrl
fdivr
hlt
and
mov
or
setge
inc
bound
clc
in
jnp,pt
push
imul
xchg
add
xor
inc
daa
and
testl
lcall
cmpsl
sub
outsb
data16
adc
jg
dec
dec
inc
insb
sub
in
arpl
scas
ror
mull
ror
mov
fistpll
push
sbb
or
adc
sbb
call
sbb
push
jl
sbb
das
mov
pop
push
adc
dec
data16
ss
js
pop
inc
cmp
xchg
pop
pop
push
aad
mov
add
dec
inc
jmp
dec
loope
xlat
jecxz
mov
jo
jg
lds
and
sub
test
sub
sbb
add
mov
lds
and
outsb
mov
mov
cmp
xchg
push
xchg
cld
pop
orb
fistpll
stos
repnz
sbb
sbb
outsb
cwtl
inc
ljmp
into
out
enter
popa
into
ss
lock
add
mov
pop
push
nop
adc
jmp
imul
xchg
lods
aad
lret
lods
lcall
fisubrl
sub
and
jns
push
cmp
insl
mov
sti
push
mov
jno
addr16
adc
push
pop
xchg
sahf
mov
cmpsb
test
imul
jle
push
sub
in
dec
imul
pop
cwtl
inc
repz
push
dec
cmp
mov
dec
fsubrs
lea
xlat
sti
clc
jno
jae
iret
and
das
push
arpl
push
cmp
bound
xchg
es
in
sti
popa
push
leave
and
mov
pop
call
movsl
dec
cli
sar
in
mov
adc
jo
xchg
insb
arpl
std
outsb
mov
and
mov
mov
jmp
fwait
add
fcomps
ret
push
ljmp
and
pop
sarl
and
pop
lock
pop
pop
sub
jp
repz
adc
cli
hlt
call
dec
push
es
sub
cwtl
or
jecxz
jle
ret
repnz
push
lods
adc
jmp
jae
into
push
nop
dec
xor
mulb
adc
pop
js
sbb
repz
mov
aas
sub
fnstsw
clc
rcrl
cmp
aad
inc
popa
andb
pop
imul
cmpsb
ds
pop
fnstsw
test
ss
mov
push
and
adc
rcr
or
fisttps
add
in
sahf
lret
jnp
push
pop
rclb
jecxz
or
inc
outsb
xchg
sub
add
dec
pop
iret
icebp
or
pop
sbb
jmp
out
inc
or
imul
sbb
push
jb
nop
or
sar
hlt
jecxz
sbb
add
fdiv
ljmp
repz
loopne
pop
jp
pop
mov
cmp
or
and
xor
mov
dec
inc
arpl
clc
outsl
scas
shlb
mov
pop
cli
jns
sub
mov
add
mov
push
xchg
mov
push
mov
roll
dec
mov
mov
lods
mov
or
and
rcrl
out
push
loope
push
out
mov
subl
stos
fcompl
or
js
jb
mov
add
add
mov
popl
cltd
mov
ret
pusha
pop
sahf
stos
xchg
cmpsl
rclb
push
mov
arpl
lret
sbb
mov
lahf
push
fldl
push
jmp
xor
add
sbb
mov
aaa
out
dec
popf
andb
scas
shrl
sbb
push
out
add
jmp
jle
cmp
cmp
jp
aam
and
push
xchg
pushf
nop
insb
roll
je
rorb
rcll
cmpsl
pop
shr
dec
frstor
movsb
aaa
iret
hlt
push
or
cltd
je
pop
xor
and
sub
lea
and
sub
jmp
cwtl
jo
repnz
incb
outsb
mov
inc
inc
pop
jge
adc
into
call
rol
mov
fldenv
outsl
imul
ds
push
pop
loop
xchg
push
jo
sbb
out
scas
cmp
and
addl
ficoms
hlt
or
in
and
mov
push
xor
insb
mov
es
mov
inc
scas
rcrl
rclb
add
movsb
adc
gs
adc
mov
dec
mov
ja
add
lea
popa
addr16
mov
pop
loopne
cmp
sub
ja
les
fidivrs
mov
jb
mov
rcr
hlt
aas
cld
sbbl
xlat
xchg
mov
fsubs
sbb
push
xchg
rolb
test
xchg
and
test
sbbl
data16
std
std
xchg
aad
and
fwait
sahf
or
push
mov
and
mov
jl
sbb
cmpsb
adc
out
or
push
fcomp
call
push
push
mov
adc
jnp
test
push
xchg
sub
inc
pop
mov
sbb
fnsave
dec
mov
jle
ret
mov
cmp
xchg
add
xor
aaa
mov
jl
fs
fimull
or
cli
idiv
out
dec
in
jge
xor
xchg
push
in
xlat
pop
mov
loope
sub
jbe
daa
or
jmp
jae
inc
push
sbb
fadds
cwtl
xor
jns
rclb
xchg
sbb
gs
lods
aam
pop
pand
mov
bnd
dec
cmp
imul
testl
jne
push
add
mov
in
or
jb
sarb
dec
pop
repz
int
fistl
std
push
cli
das
mov
fdivl
out
adc
or
push
push
or
push
mul
xchg
cmc
cli
sbb
push
push
fnstcw
shrl
scas
adcl
les
enter
shlb
sahf
fmuls
sti
jo
push
cmp
cmp
je
and
xchg
cmc
popf
push
shll
stos
stos
popa
hlt
adc
popl
movsb
and
xchg
mov
scas
dec
dec
cmp
lock
xor
fnstenv
push
push
ret
cmp
mov
dec
mov
xchg
jne
fistpll
dec
sti
jge
jg
lret
incb
pop
mov
decl
xor
ljmp
add
cs
lock
out
mov
movsb
xorl
lock
add
push
jnp
cmp
sbb
aam
jb
cli
jl
dec
adc
xchg
and
push
dec
or
add
enter
xchg
push
loopne
sbb
or
movsl
jmp
sahf
dec
ds
ljmp
testb
test
call
jbe
xchg
sub
lds
test
xchg
xchg
jae
pop
jle
xchg
cltd
fnstcw
or
mov
add
xchg
and
stos
pop
dec
xlat
pop
pusha
nop
dec
xor
and
mov
pop
adc
fsubl
scas
jmp
xor
mov
cmp
cmc
icebp
cld
nop
pop
mov
and
xor
negl
pop
mov
lret
shlb
ret
cwtl
mov
pop
fucomip
jno
sbb
rcr
fdivr
push
fcompl
insl
sti
fstpt
aas
dec
repz
mov
inc
sti
and
push
xor
imul
rcrb
mov
jb
neg
and
cwtl
push
ret
jbe
clc
dec
push
xchg
mov
jp
push
popf
jmp
adc
and
cmpsb
cld
xchg
popf
lret
cmp
sahf
sub
dec
jl
push
loopne
xor
daa
rcll
sar
adc
rorb
cmpsl
xor
add
fdivrs
and
lret
test
add
cmp
inc
mov
insl
cltd
push
jne
jne
inc
pop
cmp
mov
pushf
cmp
call
jno
icebp
cld
insb
adc
pop
call
jo
popf
dec
mov
adc
push
icebp
shll
out
ror
ret
ror
adc
pop
rcrl
fnsave
pushf
loope
cmpsl
xor
xor
ret
or
dec
mov
dec
int
xchg
data16
iret
cmpsb
mov
cmp
loopne
adc
cld
xchg
add
stc
sahf
mov
aad
das
repnz
mov
xchg
cld
and
arpl
and
jmp
ja
popa
nop
test
pusha
jecxz
xchg
loopne
push
xchg
insb
fists
sub
lret
sub
mov
sbb
and
pop
sti
sub
fcoml
pop
aad
and
push
ja
pop
mov
loopne
inc
cmpsb
xchg
sbb
scas
movsl
jecxz
adcb
pop
stos
enter
cmp
jecxz
fwait
lret
aam
add
pushf
pop
sbb
push
out
mov
or
push
adc
or
imul
jb
cmpsb
nop
mov
setno
insb
sbb
adc
test
xchg
sbb
inc
lret
or
lahf
xchg
sti
jae
jecxz
cmc
and
stos
nop
call
pop
dec
inc
arpl
std
popl
lea
jnp
pop
iret
pop
pop
mov
rolb
push
xchg
xor
pop
mov
std
jecxz
mov
ficompl
mov
dec
bound
loope
pop
and
addr16
roll
jl
in
jmp
testl
pop
and
sar
outsl
mov
jg
and
ljmp
ret
xchg
shrb
imul
std
popa
push
add
fisttps
repz
or
cltd
xchg
out
fstps
sub
fwait
cld
adc
lret
insb
pop
cmp
jno
push
and
dec
jb
cmp
icebp
jl
xor
sahf
clc
jl
aaa
mov
es
imul
sub
push
lret
dec
inc
mov
loopne
mov
jecxz
xchg
test
icebp
int
cmp
cmp
icebp
pop
pop
ret
pusha
fldl
dec
jne
cwtl
mov
ds
push
pop
jmp
pop
push
imul
mov
or
pop
mov
mov
lret
adc
ss
sbb
inc
cmp
fiadds
pop
or
mov
pop
mov
test
loope
sti
add
fcmovne
fwait
jle
mov
xchg
aas
in
and
mov
pop
imul
inc
fildl
add
inc
loop
addr16
aas
or
fimuls
int
sbb
jl
xchg
sbb
or
or
aaa
push
call
push
adc
cmp
negb
mov
mov
xchg
mov
out
xor
lret
sbb
std
cld
ret
push
xchg
dec
in
adc
pop
stos
push
mov
pop
mov
dec
iret
mov
dec
mov
ss
fildl
pop
mov
xor
mov
push
pusha
sub
adc
sub
shrb
daa
pop
adc
mov
push
testl
in
xrelease
ret
enter
xor
outsb
inc
xchg
push
loop
daa
in
push
test
lsl
add
mov
subb
lods
loope
enter
mov
clc
pop
or
jnp,pn
movsb
xchg
sbb
sarb
push
dec
mov
sub
aam
pop
int3
shrb
jo
inc
iret
in
pushf
sub
cwtl
fldl
ss
inc
lods
jo
fyl2xp1
sbb
fidivrs
mov
cld
inc
or
sub
or
xchg
or
pushf
stos
scas
push
sub
xor
lahf
pop
roll
dec
mov
xchg
bound
or
add
fwait
loopne
jmp
rolb
jno
mov
rcll
and
mov
xor
bound
sub
shrl
and
sbb
subb
lods
jle
in
dec
movb
jno
jge
push
sub
and
test
pop
rorb
shll
lds
dec
cmpsl
das
inc
loope
jecxz
or
mov
push
add
out
jge
push
dec
pop
jb
cld
jno
inc
or
sbb
addr16
mov
ret
push
adc
mov
xchg
jecxz
test
into
bound
sti
jp
pop
jae
lret
mov
rcrb
jge
popa
rcr
js
dec
push
pop
pop
cmp
in
xor
inc
shll
pop
push
jg
xchg
call
cli
jne
and
mov
stos
ja
xor
std
inc
aaa
sbb
mov
xchg
sbb
sbbb
rorb
add
cmp
dec
push
les
cmp
fistl
mov
push
pop
lahf
cmp
xor
and
cli
int
and
stos
mov
mov
jecxz
sbb
lods
pop
out
sti
cmp
aas
fadd
push
pop
push
insl
outsb
xchg
sahf
jl
sub
fdivrl
dec
add
pop
ds
mov
andb
mov
or
scas
push
and
idivl
sar
hlt
jns
adc
push
sub
xchg
mov
pushf
pop
icebp
das
xchg
test
jbe
lea
cmpsl
jb
pop
xchg
push
sbb
or
mov
enter
dec
mov
push
mov
sbb
cmpb
mov
dec
in
and
aad
or
dec
scas
xchg
inc
push
add
and
fsubrs
ljmp
mov
jg
test
pop
pop
cmc
aas
in
push
stos
jno
and
ret
idivb
cltd
fisubrl
xchg
pop
mov
cmpsb
aad
rolb
dec
lea
pop
pop
rcrb
xchg
jmp
push
sbb
dec
xchg
je
xlat
test
xchg
add
mov
inc
leave
std
push
test
jae
fcoms
mov
adc
sarl
gs
cmc
cmpsb
inc
push
pop
pop
jle
or
inc
pop
lods
adc
loop
mov
mov
dec
push
and
mov
std
push
push
lods
mov
or
aaa
sbb
pop
xchg
out
jnp
sti
push
pcmpeqb
pop
mov
shlb
add
lcall
sub
outsl
inc
bound
inc
mov
sbb
jp
adc
subl
lcall
or
cmpsl
sbb
xlat
jb
xchg
cwtl
lock
xchg
rcrl
lods
cmp
xor
into
jg
sbb
mov
sti
rcll
add
mov
pushf
inc
fcompl
mov
out
pushf
lret
jae
cmc
or
data16
ficoms
fildl
or
or
mov
and
ja
sub
pop
mov
mov
mov
pop
cltd
push
or
cmc
addr16
sub
inc
dec
addl
lds
rcr
loope
or
stc
test
xchg
ret
mov
rol
cmpsl
stos
sub
rol
adc
imul
roll
std
mov
mov
xlat
pop
lret
jmp
sti
loope
je
test
iretw
inc
loope
popa
add
push
mov
aas
sbb
dec
insb
dec
stos
push
jle
adc
lcall
fnstsw
push
mov
fs
lret
sbb
mov
out
dec
sub
pushf
iret
dec
aaa
xchg
fldl
cmp
sbb
jo
mov
jmp
add
addr16
add
pop
data16
xchg
dec
imul
cmpsb
pop
xor
mov
ret
imul
rcr
jno
mov
jge
push
test
inc
ret
push
mov
cmp
adc
movsb
ret
add
xchg
xor
test
frstor
push
daa
int
shrl
mov
rorb
adc
lea
jnp
lahf
inc
notb
js
test
out
mov
or
or
adc
dec
sub
subl
dec
rol
push
fs
mov
dec
test
pop
xchg
dec
mov
rclb
push
and
sub
popa
pushl
repnz
stos
rol
adc
add
or
jmp
mov
jp
add
shrb
fiaddl
push
popf
out
push
es
popf
jg
sbb
pop
int
sub
mov
push
mov
stc
xchg
pop
inc
dec
pop
jmp
mov
in
and
push
imul
flds
ss
int3
mov
mov
cmp
pop
mov
jbe
cs
fmull
lods
cld
stos
test
dec
jge
or
mov
or
fnstcw
cmpsl
lods
jg
mov
mov
jne
lds
out
scas
stc
lret
sbb
faddl
cli
push
mov
cmpsl
outsl
iret
cmp
xchg
xchg
mov
pop
add
insb
out
test
popa
mov
xor
jo
mov
mov
mov
mov
loope
es
cli
xor
push
or
mov
imul
scas
fisubl
gs
sarl
xor
orl
bnd
mov
mov
loope
mov
cmc
mov
stc
subb
fisttps
movsb
std
aas
frstor
cmp
and
mov
pop
les
xorl
outsl
jbe
or
loop
push
mov
mov
sub
notb
test
xchg
and
stos
jnp
sbb
xchg
or
jbe
mov
lret
mov
movsb
jle
adc
mov
push
seta
cmp
ret
pop
sub
and
stos
lods
shll
int
mov
sbb
sub
mov
cs
mov
stos
cmp
ds
mov
push
add
jno
mov
xchg
mov
in
and
jp
cmp
mov
push
lea
xchg
shll
test
or
lods
xchg
push
imul
mov
and
cmp
or
shrb
push
das
jmp
pop
arpl
lds
popa
jg
jae
aam
ds
stos
shll
adc
adc
and
sbb
pop
or
pop
cmp
or
mov
cli
in
outsb
add
mov
ja
pop
mov
cmp
xor
pushf
popl
push
out
jle
xchg
ret
loope
jae
add
cmp
mov
std
lret
mov
scas
push
cwtl
arpl
fcomps
dec
dec
scas
testb
mov
insl
dec
inc
inc
jnp
enter
adc
xor
sbb
mov
popl
in
add
sti
xor
and
xor
dec
inc
adc
sbb
fcoms
lea
pop
add
jmp
mov
mov
mov
cs
or
cwtl
in
inc
fiaddl
insl
sbb
push
in
andl
and
xchg
stc
add
or
mov
rcl
jl
inc
jbe
mov
test
fcmovu
push
pop
ljmp
iret
shll
aaa
cmovnp
xchg
out
int
dec
sti
in
xor
sbb
rcll
and
jnp
dec
fsubp
jne
mov
ror
adc
sbb
inc
mov
clc
mov
fnstcw
or
mov
popa
push
mov
xchg
xchg
inc
sub
adc
jge
jmp
pop
cmp
rolb
stc
lods
xchg
jne
inc
push
out
clc
dec
stos
nop
push
sbb
or
fidivrl
pop
add
lret
cltd
movsb
xchg
dec
je
mov
outsl
daa
mov
addb
xchg
mov
jns
idiv
rcrl
jbe
push
popf
pop
mov
mov
aam
xor
xchg
xor
cltd
andb
test
into
pop
cld
dec
lret
lods
filds
ffree
mov
nop
xchg
cmpb
push
push
loopne
sub
push
inc
adc
ja
pop
sub
pusha
xor
sar
lcall
ja
out
dec
xor
mov
lret
mov
fwait
sub
into
xchg
adc
jne
mov
or
push
xor
arpl
enter
stc
popf
repnz
rcll
mov
sub
pusha
sbbl
cs
sbb
lds
outsl
in
and
loope
jle
push
addr16
xor
js
loope
stos
pop
aas
fcomp
mov
pop
in
insb
cltd
repz
and
fistpll
dec
outsl
in
pusha
mov
push
enter
inc
push
mov
sbb
xchg
inc
jo
mov
jnp
and
les
lcall
adc
aad
cmp
adc
mov
dec
test
stos
xchg
cmp
adc
test
std
push
out
jl
mov
fbstp
push
push
outsb
adc
call
addr16
adc
cmp
push
pop
in
mov
push
cmp
sub
xor
fstl
in
pop
packsswb
rorl
xchg
sub
and
aam
shrb
adc
sub
xchg
inc
adc
lods
rcl
inc
push
fstl
mull
fwait
dec
jmp
shr
mov
sbb
mov
xchg
sub
std
cmp
in
jae
insl
pop
vandps
pop
in
in
dec
out
adc
pop
fdivrl
and
pop
mov
xor
cmp
sub
xchg
pop
cmpl
xor
imul
in
out
enter
pop
and
mov
mov
push
dec
lds
in
mov
data16
inc
xchg
adc
cmp
mov
dec
mov
ds
or
aam
xchg
sti
jle
out
lea
add
cmp
out
daa
inc
pop
into
sahf
leave
xor
aad
pop
add
fisttpll
int3
lcall
mov
jns
or
stc
inc
outsl
pusha
lcall
xor
cli
inc
outsl
lock
imul
mov
add
fwait
push
cltd
dec
adcl
iret
cmc
scas
xchg
mov
add
jbe
andb
fcompl
arpl
imulb
mov
or
push
add
bnd
mov
fiaddl
pushf
shl
cmpsb
imul
jns
mov
cmpl
jle
ret
shrl
or
in
push
dec
inc
cmp
int
pop
mov
enter
scas
cli
cltd
data16
pop
movsl
ds
and
pop
sbb
pop
mov
aaa
sbb
mov
jmp
into
addr16
addr16
dec
out
sub
push
ret
out
int3
xchg
ja
subb
insl
fdiv
mov
icebp
xchg
in
push
icebp
nop
push
clc
pop
push
cmp
jbe
or
mov
lret
enter
cwtl
rorb
fldl
adc
adc
fbld
subl
cmpb
sbb
mov
out
insl
clc
mov
xchg
das
fmul
pop
xor
pushf
jmp
mov
shrb
mov
sahf
mov
or
xor
and
mov
jle
inc
mov
xor
cmp
cmp
shlb
add
dec
dec
mov
jle
add
inc
in
fistpll
rcrb
repnz
movsl
popa
push
mov
lret
stos
cltd
shl
aam
xchg
mov
mov
subl
fidivrs
fidivrl
shl
jns
les
ja
sub
cltd
cmp
das
jns
adc
pop
iret
stos
mov
add
lock
leave
xor
xor
out
inc
lahf
cltd
fstpl
aam
push
cmp
fcmovb
mov
cli
or
inc
ja
nop
mov
popl
dec
mov
leave
ds
cmp
into
jl
adc
push
lcall
cs
xor
out
pusha
scas
shrb
clc
pusha
mov
in
or
mov
jle
pushf
cs
aam
cmp
fistpl
iret
rorl
sbb
aam
jnp
jg
dec
cmc
insl
in
lcall
ret
mov
je
inc
xchg
mov
add
stos
or
rorl
mov
mov
imull
xor
jb
pop
in
mov
sbb
xor
mov
and
mov
push
inc
repz
or
mul
data16
mov
test
aam
adc
daa
sbb
test
jg
mov
cmpsb
jecxz
xor
or
add
mov
movsb
add
pop
addl
xchg
das
cmp
cmp
jp
cmp
aad
push
ficoml
movsl
pop
dec
nop
lret
test
mov
rol
mov
and
arpl
mov
popa
arpl
push
xchg
out
mov
jg
xchg
inc
pop
mov
pop
inc
icebp
filds
sbb
cs
popa
xor
inc
xchg
rcrb
lods
or
or
fistpl
addb
mov
adc
dec
aas
adc
iret
daa
push
adc
outsb
popa
sub
bound
nop
ret
imul
js
xlat
mov
stos
and
cmp
scas
add
push
aas
in
bound
cmp
test
fildll
inc
jl
mov
mov
loopne
fidivrs
mov
std
out
nop
jl
ds
xchg
cmp
or
popa
and
fst
sarl
jbe
push
clc
add
sbb
mov
movsb
iret
mov
std
aaa
xor
mov
lret
inc
jo
pushf
and
data16
add
enter
movsl
push
es
mov
sbb
push
pop
cmp
cmp
cwtl
or
cmp
fs
rclb
dec
add
fsubrl
arpl
icebp
ds
mov
jae
aas
mov
loop
cmpsb
enter
rorb
movl
into
sub
mov
add
arpl
sahf
dec
adc
push
mov
jg
ret
mov
cltd
mov
jl
sub
out
dec
jl
mov
ret
cmp
add
into
jecxz
adc
popf
dec
cmpsb
lcall
mov
push
insl
ret
push
inc
test
or
xchg
ret
jne
lea
lret
mov
in
pop
fcmovnbe
mov
jo
lea
add
bound
add
lret
push
rclb
add
lret
push
mov
jmp
pop
mov
adc
daa
mov
cld
shr
sbb
jae
pop
mov
mov
loope
and
add
xchg
out
movsl
cmpsl
lods
xchg
push
iret
loop
cmpsb
or
xchg
jmp
xchg
mov
gs
cmp
aam
adc
in
cmpl
xor
stos
jp
lahf
pop
iret
push
xor
xchg
sub
sahf
inc
lret
inc
loopne
mov
and
mov
rorb
insl
pop
lret
scas
mov
dec
mov
inc
xchg
and
repnz
lock
jb
in
xchg
ret
push
pusha
stos
sbb
push
add
loopne
push
xor
mov
popa
sti
pop
jns
insb
jbe
test
clc
arpl
mov
into
jo
or
and
jg
sbb
sbb
adc
inc
jne
out
pop
js
adc
mov
push
push
cmpsb
push
shr
mov
mov
mov
xor
in
mov
int3
rol
mov
fwait
stos
mov
loope
stc
je
jle
imul
inc
mov
fstl
cltd
fsubrl
mov
aaa
inc
mov
fs
icebp
mov
mov
jnp
cmp
push
les
rolb
rcrb
iret
and
mov
cwtl
testb
mov
jge
scas
mov
mov
add
rcrl
addr16
jp
out
lret
cmpsl
mov
or
lea
std
insl
stos
pop
push
xor
scas
lcall
es
iret
jne
jae
jnp
or
dec
mov
ja
add
sbb
outsl
and
leave
jnp
sub
sarb
adc
add
shll
scas
rclb
cltd
and
inc
repz
aas
jb
sub
and
sbb
ds
sub
das
inc
sub
std
loopne
add
xchg
xchg
scas
add
inc
shlb
or
pushf
pushl
pushl
mov
and
fucomip
ret
and
push
sbb
adcb
jg,pt
rcll
push
xorb
mov
xchg
pop
mov
mov
shll
stc
inc
or
push
aas
les
cmp
sahf
push
xlat
lods
sub
nop
aaa
sbb
repnz
pop
jns
cmp
sbb
sbb
inc
clc
add
aas
rcrb
rcr
or
inc
xor
adc
cmp
and
or
data16
into
fadds
and
mov
cld
sbb
cli
xor
test
xorb
in
mov
nop
add
loop
cmp
fdivl
or
lods
mov
mov
or
fldcw
sbb
dec
push
ss
and
out
stos
and
adc
adc
push
std
xor
jae
out
cli
sbb
xchg
adc
xor
mov
test
sbb
cwtl
xchg
movsl
out
cmp
mov
nop
sti
dec
pusha
rcr
sbb
and
mov
xor
adc
xor
push
jns
and
and
loopne
jge
xor
aam
lock
sub
push
fbld
test
sub
xchg
aas
shlb
mov
enter
inc
out
test
or
cmpb
stc
movsl
fisttpl
dec
adc
ljmp
mov
jbe
je
mov
jb
lods
stos
sbb
mov
hlt
mov
stos
mov
repz
or
mov
mov
pop
fcompl
or
sbb
in
iret
mov
in
vpminsw
aas
aam
int3
inc
mov
xor
push
xchg
pop
bound
pop
test
inc
hlt
and
and
shl
shll
mov
push
mov
xor
mov
xor
add
rcl
jp
ficompl
sub
roll
adc
imul
inc
gs
push
jl
data16
lods
or
push
cmp
lods
cmpb
push
push
ds
pop
pop
pop
mov
in
lahf
shll
pop
cmpsb
out
or
xlat
lock
adc
xor
loopne
enter
sbb
into
pop
inc
ja
or
cmc
xor
insb
aad
adc
daa
pop
fmul
lods
movsb
test
mov
or
mov
fs
mov
in
xor
mov
sbb
frstor
insb
mov
cmpsl
or
mov
adc
and
mov
js
add
pop
jg
cmp
inc
adc
movsl
das
inc
cwtl
and
dec
xor
push
movsb
lea
ret
sbb
lret
aaa
sbbl
das
dec
jne
in
cmp
push
rorb
mov
push
fcmovnu
into
dec
and
adc
xchg
mov
lea
pop
movsb
cmp
jno
shrl
cld
fcompl
cmp
xchg
pop
scas
movsl
dec
and
pop
add
adc
xor
daa
and
incb
popf
roll
sub
test
xchg
fisttpl
rol
xchg
test
inc
xchg
insl
xlat
mov
cmc
leave
pop
insl
mov
fcomip
mov
mov
gs
incb
sbb
cmc
fidivs
cmp
add
mov
add
sbb
pushf
mov
das
js
add
cmp
in
imul
jmp
or
adc
in
pop
push
mov
or
push
adc
pushf
pushf
scas
pop
ffree
add
push
mov
icebp
push
pop
js
movsl
push
aas
leave
loope
mov
je
das
das
cmpsb
test
inc
mov
leave
mov
subl
pop
call
jg
dec
cld
fsubrs
mov
mov
or
in
lods
shlb
jb
fs
in
and
jnp
or
stos
int3
push
sbb
lock
pushl
jnp
sti
aas
mov
lds
in
pop
scas
jl
aad
sub
fstpl
pop
dec
sub
pusha
daa
dec
aaa
icebp
mov
dec
jne
adc
movsb
dec
mov
idiv
xor
mov
sbb
pushf
test
icebp
adc
and
addr16
int
cmpsb
sub
stos
xchg
or
scas
lods
adc
pop
out
outsl
in
jno
sti
outsl
cmp
xchg
mov
cmp
xchg
mov
add
cmpb
push
arpl
cmpsb
dec
adc
cmp
jb
nop
idiv
and
dec
in
outsb
sub
loope
out
adc
fdivrl
mov
mov
inc
xchg
loopne
or
xchg
dec
lret
and
pop
mov
or
out
and
cmpsb
pop
sti
in
mov
fdivrs
mov
adc
fimuls
and
and
add
stos
xor
mov
int3
gs
repz
lock
or
fsub
mov
or
push
mov
lods
pop
pop
pusha
mov
ret
hlt
mov
scas
into
adc
jg
add
xor
adc
jae
or
pop
test
test
in
or
mov
in
pushf
data16
push
in
adc
enter
xchg
cmp
mov
sbb
aaa
pop
pusha
shll
cmp
dec
js
add
lahf
pushf
outsb
jns
lock
cmpsl
popf
daa
mov
and
push
ss
test
cmp
aad
lret
pusha
inc
ljmp
insl
cmp
mov
scas
add
inc
sbb
lcall
loopne
cmp
aam
push
enter
push
data16
jo
rcrb
outsb
cmp
dec
lahf
cmpsl
std
xor
arpl
mov
arpl
inc
sub
scas
inc
push
iret
push
push
test
adc
cmp
js
mov
sbb
jge
xchg
or
sub
mov
lds
mov
hlt
push
adc
repnz
iret
scas
dec
ficompl
pop
xchg
cmp
call
insl
xor
fmull
ret
incb
lret
jecxz
add
daa
mov
xchg
lods
sub
shufps
lcall
sbb
mov
lret
cmp
and
sbb
jecxz
push
mov
jmp
loope
add
and
xchg
push
fisubrs
xchg
or
or
stc
ret
add
hlt
es
cmpsl
pop
stos
fdivrl
jl
call
cmp
stos
sub
pop
rclb
mov
movsl
push
mov
jle
test
inc
das
mov
ret
mov
inc
aaa
cmp
bound
push
stc
rorb
inc
repnz
enter
pop
lret
test
repz
in
push
mov
mov
xor
xchg
cld
lock
fimuls
inc
add
pop
lds
inc
rcrb
jae
jb
push
leave
out
sub
test
or
mov
out
push
jbe
aad
aad
movsl
inc
fdivrs
scas
cmp
or
shrl
ja
adc
cwtl
fcomps
sub
bound
movsb
icebp
xlat
push
or
and
pop
shlb
add
subb
sbb
push
jns
int
rclb
std
inc
pop
mov
repnz
out
outsl
push
sbb
push
jge
mov
aam
insb
hlt
cmp
pop
push
ds
dec
lods
pushf
xor
add
je
fimuls
sbb
fldenv
push
push
cmp
or
loop
mov
sahf
sbb
ret
xlat
cwtl
xchg
push
in
pop
push
subb
cmp
ja
aaa
dec
mov
out
xor
mov
lock
sbb
mov
cmp
fnstsw
fimuls
repnz
xor
add
loopne
sub
or
add
jo
notb
les
arpl
pop
leave
adc
jae
int3
or
data16
inc
addr16
mov
test
insl
dec
and
leave
popf
mov
rcll
decl
pop
stc
push
scas
push
xorb
mov
cmpsl
sbb
icebp
jns
sub
fidivrs
ds
repz
mov
xchg
or
xchg
push
pop
dec
lret
xchg
pop
ss
inc
cli
test
cmp
mov
lahf
mov
and
pop
pop
sbb
stos
or
or
pop
and
out
ret
lret
dec
mov
ss
pop
mov
or
rclb
adc
test
jae
lods
adc
or
sbb
pop
loopne
add
push
nop
sub
pop
mov
js
rcrb
mov
incl
roll
insl
dec
and
add
je
cli
ret
nop
leave
int
cs
jae
scas
or
mov
adc
in
stc
xchg
push
jmp
jg
cld
cmpsb
adcb
hlt
out
in
pop
enter
jbe
loope
adc
push
or
adc
dec
ds
in
cwtl
fisubrs
mov
enter
xchg
jb
mul
cs
popa
shlb
daa
jo
push
xor
fdivrs
lods
or
or
pop
icebp
mov
xchg
mov
fidivl
mov
sub
jbe
jmp
std
mov
shl
push
lock
xchg
fisubrs
arpl
scas
jp
jbe
cltd
mov
xchg
cltd
xchg
sbb
clc
fdivrs
imul
sub
jno
push
stc
adcb
scas
mov
push
orl
les
xchg
mov
mov
ret
pushf
nop
lahf
mov
subl
sbb
repnz
fisttpll
fsub
cmp
nop
adc
jle
sub
sub
loope
dec
loope
xchg
push
xchg
fs
cmp
xchg
sbb
push
pop
test
aas
mov
inc
xchg
cmpsl
ret
mov
into
add
xchg
and
add
inc
fbstp
push
test
stc
or
aas
inc
loope
dec
bound
les
pop
cmp
xchg
sbb
icebp
inc
adc
enter
in
lcall
xor
sahf
mov
sar
add
push
dec
repnz
or
movsl
mov
mov
fnsave
mov
stc
dec
adc
pop
aaa
bound
movb
pop
cs
insl
add
xor
jge
mov
dec
and
mov
fwait
pop
push
insl
xchg
out
popa
xchg
jmp
xchg
in
lds
adc
cmpsb
xchg
movl
es
int
daa
mov
inc
or
fmuls
adc
repz
adc
mov
cmp
fmuls
dec
jae
rcrl
adc
inc
pop
mov
jecxz
rolb
cltd
movsb
adc
in
mov
xchg
out
push
fcmovu
dec
add
movsb
in
xchg
outsl
cltd
loopne
add
icebp
xor
movsb
ficomps
enter
lds
sbb
cli
sub
xor
jo
shrb
cmp
mov
dec
mov
call
inc
daa
rep
push
push
out
pop
stc
jmp
xor
xor
fisubl
add
mov
cmc
mov
pusha
xor
in
jmp
pusha
test
mov
test
mov
jmp
test
pop
xorl
icebp
or
mov
cmp
and
jmp
pop
cmc
pop
ja
popa
sub
sti
enter
pop
cmp
and
push
mov
jb
movsl
push
call
arpl
mov
insl
repz
imul
xchg
pop
cmc
xor
data16
cmpsb
sbbb
cwtl
pop
outsb
xchg
jnp
hlt
mov
sbb
fisttpll
xchg
sub
mov
xor
aam
jg
call
repz
xchg
mov
add
loop
mov
lcall
push
in
jnp
js
jge
in
aad
int3
outsl
mov
cmp
lea
inc
push
add
and
adc
stos
inc
movsb
sbb
shr
nop
insl
daa
sub
inc
jle
mov
lret
cli
ljmp
popf
jns
mov
loopne
jg
sar
dec
xchg
mov
lods
xor
pop
leave
pop
out
lock
mov
dec
cmp
cs
xchg
push
lcall
push
iret
sub
pushl
jnp
fsts
inc
aam
push
jns
ds
data16
fstp
sub
lahf
cmp
imul
mov
mov
push
dec
add
add
sbb
stc
push
and
out
push
ficoml
and
sbb
push
mov
inc
cmpsl
sub
xchg
dec
ret
xor
inc
adc
dec
push
insl
push
test
sbb
xchg
ret
xchg
mov
out
mov
mov
pop
aad
xchg
loop
xor
test
or
cmp
xchg
dec
cmp
aam
fwait
and
hlt
bnd
aam
sar
aad
cmc
mov
clc
xor
sti
or
addr16
xor
xchg
mov
fisubrs
push
dec
dec
stos
cmp
xchg
bound
movsl
cwtl
mov
add
clc
shlb
ljmp
push
pavgw
idivb
rcrb
sbb
das
mov
xchg
adc
testb
push
sub
cmp
pop
test
mov
pop
jo
cwtl
sbb
mov
lahf
sbb
stos
test
xor
iret
cmc
insl
adc
orl
js
pop
jmp
fdivl
adc
add
add
andb
lock
add
shrl
out
fsubrs
xchg
mov
jbe
fdivrs
sar
adc
mov
lcall
mov
cmpsl
xchg
movsl
mov
inc
jl
test
cmpsl
lret
inc
inc
xchg
out
sbb
add
mov
sbb
adc
jbe
jno
xor
inc
in
pusha
add
cmp
fadds
xchg
in
sti
les
fldt
push
decl
mulb
pop
cli
bound
and
pusha
fidivl
ficomps
sbb
pop
lods
movsb
loop
lret
pop
movsb
or
aaa
mov
iret
fisttps
jle
pop
sub
sub
dec
pop
push
mov
jg
pushl
icebp
fcmovnb
mov
sbb
shl
aad
call
call
mov
jg
inc
pop
or
clc
pop
dec
cmpsl
aaa
ret
adc
scas
push
test
inc
das
pop
cmp
mov
xor
outsb
and
mov
adc
cmp
cli
and
imul
mov
lds
mov
lods
inc
and
clc
dec
mov
popa
test
sub
xor
xchg
arpl
adc
jbe
xchg
mov
lcall
sub
test
xor
jmp
call
mov
fs
fistpl
aaa
jno
inc
cli
lock
adc
shll
and
leave
jge
jne
cmp
mov
xor
aad
test
call
outsl
pop
ficoml
jne
or
jae
jo
hlt
push
pop
in
testl
mov
mov
lock
sbb
mov
inc
sbb
loope
iret
arpl
xchg
je
push
jp
pop
or
out
mov
lahf
lea
cmp
js
out
sbb
loopne
push
cmp
sbb
adc
fisttpl
push
loopne
xchg
xor
in
imul
push
js
or
cmp
aas
or
leave
add
imul
lock
outsl
stos
xchg
in
mov
push
cwtl
xlat
jae
sub
ret
mov
pop
rcl
push
in
cmp
loope
dec
pop
jmp
push
jns
pushf
mov
je
mov
push
fildl
xchg
inc
enter
sbb
gs
and
das
imul
ds
enter
or
les
clc
jns
push
addb
std
lret
sahf
xlat
and
mov
imul
xchg
pop
push
mov
iret
xor
mov
out
adc
pop
test
fdivs
xchg
daa
cmp
xor
adc
daa
pop
jg
daa
inc
in
lret
lea
jmp
xchg
pop
mov
cmp
stos
inc
aad
mov
pop
xchg
and
mov
sbbb
xchg
in
jg
popa
jp
out
scas
insb
lfence
add
dec
test
inc
mov
mov
sbb
stos
sbb
add
test
pop
inc
lock
data16
in
jge
das
mov
mov
movsb
stos
mov
out
jb
lret
test
cmp
icebp
xchg
int3
lret
out
leave
fs
mov
mov
cmp
shlb
inc
in
jo
or
or
push
and
rcl
in
dec
int
jl
fstps
mov
xor
inc
loop
cmp
out
sub
or
stos
fldl
sub
cwtl
hlt
mov
test
outsl
push
inc
cmp
push
cmp
out
and
xor
scas
les
sub
repnz
fs
jns
mov
mov
stc
xchg
popa
mov
xchg
lds
sbb
mov
pop
std
pop
push
mov
pop
loop
shll
add
add
clc
lahf
xchg
inc
mov
popf
stos
scas
dec
jl
pop
jmp
nop
addr16
enter
insl
fstpt
loop
mov
lods
push
insb
repz
fs
outsb
inc
adc
push
lret
and
xchg
inc
fmulp
scas
inc
mov
jg
cmc
pop
les
xchg
jg
mov
adc
xchg
or
inc
push
pop
test
sub
xor
sbb
fsts
imul
xchg
mov
rcl
mov
mov
movb
out
rorl
lcall
lret
add
jb
movsb
sbb
outsb
push
lods
jbe
push
sub
mov
inc
xor
add
out
add
orl
stos
cmp
cmpsb
xchg
or
lahf
mov
rorl
in
xor
lcall
push
xor
stos
pop
jge
in
movsb
mov
jle
jecxz
or
test
cmp
sub
sbb
push
cmp
leave
jb
pop
dec
aas
xor
pop
or
cmpsb
pmulhuw
xchg
pop
push
cwtl
add
push
mov
or
pop
faddl
push
stc
fsqrt
roll
popa
mov
ds
jb
xchg
add
leave
jg
cmp
cld
int
fimull
adc
bound
push
xchg
and
ja
dec
push
into
push
ljmp
push
ret
and
and
jl
mov
mov
xor
ret
mov
enter
and
inc
in
mov
outsl
cmp
sbb
sahf
fcmovne
stc
scas
das
sbb
dec
push
dec
test
or
xor
leave
cmpsb
and
push
dec
xlat
lldt
lods
scas
push
ss
repnz
push
and
rcrl
pop
jle
push
sub
out
imul
mov
das
push
pop
gs
movsl
mov
cltd
pop
imul
popf
cmp
adc
test
cmp
adc
jp
jecxz
jns
lods
test
test
adc
es
cmpl
nop
out
lcall
fnstsw
mov
in
je
sub
rorl
les
cltd
inc
cmpsb
data16
fs
loope
test
mov
jge
mov
mov
lret
jne
cmp
mov
aam
cltd
xor
sub
cmp
and
push
fimull
int3
pop
and
xchg
sbb
jns
xchg
xchg
mov
xor
bound
cmpl
orb
mov
mov
push
fistps
dec
imulb
cltd
xlat
xchg
inc
xor
sbb
hlt
mov
mov
insl
mov
push
push
lahf
out
jae
jmp
addl
jle
roll
stos
jnp
ficoms
sti
push
inc
cltd
xchg
cmp
aaa
lret
xchg
lods
hlt
sbb
ja
push
jo
jg
fcomi
imul
in
fcmovbe
stc
sub
cmp
cmpsl
orl
inc
inc
into
mov
jge
dec
mov
dec
pusha
mov
loope
cld
ljmp
fwait
adc
xchg
arpl
mov
jmp
inc
xor
push
sub
pop
std
sbb
enter
add
int3
mov
cmp
dec
sub
mov
push
pushl
mov
int3
es
arpl
jp
push
sub
mov
add
jne
pop
adc
into
out
insl
lret
fcompl
jno
je
push
shl
repnz
xchg
popf
out
es
stos
out
mov
pop
push
xchg
mov
movsb
sub
testb
incb
dec
lock
adc
cs
popf
push
xor
pop
push
add
or
or
shlb
insb
mov
or
cmpsl
arpl
leave
fisttps
aaa
mov
xchg
icebp
xor
push
lods
adc
jb
out
sbb
dec
xchg
insl
arpl
int
lock
loopne
lret
jmp
aam
xor
mov
mov
sbb
test
pop
xor
jp
sbbb
bound
jl
outsl
cs
mov
lret
mov
movsb
cmp
cmpsl
loopne
jmp
xchg
popf
leave
cmp
aad
out
rclb
fnstenv
inc
push
popa
or
cwtl
mov
lret
jns
in
lahf
mov
out
daa
lock
js
mov
and
pop
mov
adc
inc
jne
push
adc
cld
jle
jns
aas
mov
mov
out
push
jne
sub
dec
push
ja
pop
fmull
nop
fisubrl
xchg
jl
jge
dec
add
out
xor
jbe
mov
aad
imul
sbb
jp
into
lahf
movsb
ret
out
fcmovbe
inc
pop
push
adc
inc
inc
adc
xor
hlt
nop
jae
dec
stc
cs
shl
push
fwait
inc
imul
inc
pusha
dec
ss
lret
in
cmp
fs
clc
mov
pushf
into
adc
in
pop
jne
jmp
dec
das
sub
imul
sbb
cmp
add
sub
inc
and
hlt
mov
xor
dec
mov
mov
mov
mov
mov
jle
in
loope
pop
mov
dec
inc
or
and
fs
adc
push
stc
les
pop
cs
test
sub
gs
pop
testb
cmpsb
aam
dec
mov
call
lods
in
cmp
test
inc
das
add
adc
shlb
jnp
mov
mov
jmp
or
mov
sub
rclb
mov
stos
aam
mov
mov
and
in
addl
dec
adc
dec
xor
bound
int
addl
mov
jne
outsl
mov
mov
cmp
xchg
sbb
aam
sbb
stc
nop
mov
roll
cmp
lods
clc
push
rep
fdivr
xchg
ficomps
enter
pop
ljmp
das
jmp
cld
dec
dec
ds
jg
stos
adc
cmp
jno
lret
lods
dec
mov
sub
repnz
or
mov
push
lret
rsm
mov
jae
or
fmuls
test
sbb
mov
movsb
leave
inc
push
idivl
data16
jno
jecxz
dec
push
sub
call
mov
inc
test
jp
sub
outsl
outsl
mov
and
arpl
sub
jmp
jae
imul
bound
push
jno
pop
aaa
inc
cltd
mov
jnp
push
mov
add
cmp
and
cmpsb
int
fs
insl
fisttpl
cmp
pop
push
inc
bound
aad
sbb
shl
jp
jbe
xchg
mov
pop
xchg
std
sub
xor
push
jmp
pop
sbb
fwait
or
jb
and
fcoml
pop
xor
dec
js
lret
ljmp
jp
aam
cmpsl
sbb
cwtl
test
cmpsl
rol
jne
lret
jo
mov
vmread
push
ss
repnz
xor
imul
and
xchg
xor
push
js
sub
jo
fwait
cmpsb
clc
pop
mov
or
xlat
jp
cmpsb
jp
and
sub
movsl
cld
xor
int3
addr16
ret
test
sub
and
cmc
call
lcall
add
jmp
icebp
jg
jne
inc
movsb
push
push
fistpl
outsb
jno
jno
xchg
scas
das
minps
sub
cmpsl
dec
jbe
jae
les
push
fstpl
adcb
push
call
sub
ret
jmp
sahf
sbb
sbb
cmpsl
jmp
dec
push
and
xor
sbb
popa
ljmp
dec
call
mov
mov
pop
jge
sbb
fsubrs
sbb
repz
cltd
mov
xchg
aam
cmp
mov
nop
add
pusha
cmp
and
sbbb
jne
adc
pop
movsb
xor
and
and
int
jns
test
je
jle
jg
jno
fistpl
pop
in
cmp
in
inc
fldcw
xor
pop
and
jecxz
imul
adc
jge
std
pop
cld
dec
int3
dec
jno
add
inc
inc
cli
fsubrl
lret
sbb
int3
fcompl
fdivs
adc
mov
cmp
fisubrl
popa
jb
stos
aad
test
out
mov
cmp
es
stos
out
movsl
lahf
inc
sub
inc
stos
jl
and
jmp
fwait
xchg
pop
test
dec
insl
cltd
mov
in
stc
scas
or
inc
cmp
push
test
std
mov
adc
jmp
add
lahf
cs
pop
xor
arpl
int3
addr16
addl
mov
lret
aad
leave
dec
xchg
out
mov
xor
aas
mov
mov
cmp
jo
cli
rcrl
mov
sbb
loope
mov
lret
hlt
mov
repz
xchg
int3
lods
enter
frstor
out
jmp
inc
test
or
pop
lods
pop
jmp
xchg
cmp
loopne
xchg
cmc
data16
mov
and
mov
sti
arpl
xchg
in
push
jge
test
imul
aad
mov
ljmp
push
push
add
stos
mov
clc
add
xchg
test
ljmp
stc
and
pop
xchg
in
in
hlt
mov
into
repz
popf
fcompl
mov
add
and
xchg
add
add
bound
xor
adc
xchg
shl
enter
aas
xorl
mov
push
and
fdivr
in
xor
jo
testb
pop
or
pop
cmp
stos
push
jb
xchg
inc
or
pop
xlat
jbe
mov
data16
repnz
inc
nop
mov
into
inc
gs
or
and
xchg
outsb
pop
adc
jae
xorb
sbb
enter
push
jmp
sahf
test
roll
in
lea
sub
lds
scas
div
mov
jne
dec
inc
mov
decl
je
jns
lods
pop
fs
out
dec
xor
loopne
imul
push
hlt
aas
test
out
lahf
mov
jecxz
mov
xchg
dec
sbb
jae
or
inc
pop
int
es
cmpsl
aaa
lods
cwtl
pop
adc
mov
shlb
scas
arpl
mov
rorl
sahf
cmp
sbb
int
push
popf
outsl
loope
jb
mov
ja
stos
cmpl
jns
fcoml
sbbb
sub
sbb
shrl
aam
xor
es
cld
adc
aam
sbb
sbb
sbb
ficoml
and
cli
stc
xchg
jle
push
mov
mov
add
lret
dec
idiv
adc
cwtl
repz
incb
loop
push
sub
sub
mov
flds
cmpsl
push
push
xchg
mov
das
out
push
sahf
inc
dec
jo
dec
ffreep
xchg
xor
add
rorl
jae
xor
mov
mov
dec
test
test
lcall
mov
lods
xor
cltd
shlb
js
movsl
cltd
sub
push
xor
stc
mov
mov
cmpb
lret
fiaddl
rcrb
and
decl
pop
sub
jle
int3
sub
xor
shrl
popf
gs
mov
andl
jbe
aaa
dec
dec
push
inc
out
loope
push
ss
or
rcrw
jl
arpl
or
xchg
or
adc
cmp
mov
mov
push
xchg
jns
push
aad
loope
dec
popa
lock
out
jg
into
mov
add
in
jg
lds
push
out
call
pop
iret
icebp
push
enter
jmp
test
arpl
negl
push
pop
dec
scas
call
arpl
loop
rep
sbb
stos
orb
add
enter
shrl
xchg
std
jne
xchg
or
insb
lods
mov
mov
fs
sti
mov
subb
sbb
sub
sahf
aaa
push
sahf
or
mov
and
in
inc
imul
cmpl
or
sbb
xorl
sti
pop
popa
mov
out
fildll
adc
loopne
add
ljmp
jns
mov
jns
sub
int3
gs
popf
adc
adc
add
in
test
cmp
ljmp
stos
repz
lea
adc
jno
mov
out
dec
in
arpl
aaa
fwait
aad
mov
out
sub
sbb
pop
hlt
jno
int3
test
pop
dec
xchg
pop
inc
pushf
sub
pop
xchg
arpl
mov
pop
mov
cmp
dec
in
insl
test
into
sbbl
lret
outsb
lea
sub
ljmp
push
sub
push
add
push
or
push
and
add
pop
ds
push
jno
into
fs
and
xor
int
mov
out
outsb
sbb
or
mov
out
adc
insl
pop
cmp
and
clc
bound
aam
adc
xor
outsb
adc
xchg
inc
pop
dec
jle
adc
sbb
in
pushf
icebp
pop
adcl
push
outsl
cltd
les
push
adc
pop
aad
or
mov
pushf
leave
sbbl
das
xor
jns
xchg
and
push
js
pop
rorb
hlt
dec
imul
pop
pushf
cmpsb
loope
xchg
gs
cmp
sub
fsubl
leave
in
mov
pop
sub
imul
loope
loopne
cmc
sbb
mov
mov
lock
in
enter
cmp
cli
lea
inc
xorb
xorb
test
mov
dec
xchg
add
fucomp
inc
and
cmp
push
leave
pop
inc
dec
push
fldl
jecxz
inc
sub
jmp
leave
mov
out
nop
lods
or
push
sbb
imul
xchg
daa
ret
inc
dec
add
lea
and
test
out
adc
sub
sbb
divb
insb
sbb
mov
xchg
daa
inc
popf
mov
stos
mov
outsb
aaa
pop
lahf
pop
mov
add
pop
or
jl
idiv
mull
popl
pop
nop
stos
sbb
jecxz
fsts
stos
mov
xchg
dec
lret
les
fs
aaa
cwtl
jl
inc
fs
sub
push
mov
data16
adc
xor
movsb
mov
shrl
mov
lret
cmp
or
shl
lds
sub
cmp
mov
int3
inc
jecxz
jo
stc
and
das
ljmp
loope
hlt
inc
dec
xchg
xchg
mov
adc
sahf
aaa
xchg
test
rolb
xchg
add
test
into
rol
lret
js
das
cmp
addb
xor
dec
sbb
sbb
hlt
xlat
jae
or
ret
jo
mov
gs
lea
imul
adc
rorb
in
clc
mov
test
pop
rorl
leave
push
adc
add
pop
js
and
xchg
imul
mov
cmp
das
add
gs
xor
fsts
jp
into
push
mov
les
and
push
inc
stos
xor
jge
stc
rorb
mov
repz
loopne
icebp
jne
lret
inc
scas
cmp
aas
clc
loope
repz
dec
add
sub
test
ja
dec
arpl
bound
sbb
xor
sbb
inc
inc
or
in
xorl
push
push
jb
mov
stos
gs
xchg
mov
xchg
and
pushf
sbb
adc
add
and
sbb
jbe
push
daa
mov
jno
mov
push
lods
test
add
stos
sub
mov
cmp
loopne
mov
nop
dec
imul
fwait
imul
ret
rorb
adc
pusha
movsl
int3
mov
int3
aaa
and
ss
push
shrb
outsl
mov
cmp
es
rcr
shlb
cmc
jmp
jbe
cmp
add
cmp
or
cmp
divl
dec
loopne
xchg
jl
fwait
push
dec
arpl
sub
inc
xchg
insb
js
mov
and
mov
mov
fstpl
mov
pop
sbb
fbstp
mov
jp
or
dec
pop
xor
ja
adc
sahf
mov
dec
add
int
test
cli
push
std
adc
jae
shr
std
fwait
mov
and
pop
ss
pushf
je
out
push
cmp
jmp
jp
adc
inc
mov
mov
push
sarb
push
jne
sub
push
loope
popa
addr16
xor
jbe
pop
jnp
pop
ret
mov
jle
ds
mov
shr
aad
lock
xchg
enter
sbb
jge
lods
dec
negb
addl
fsubrl
pop
push
add
xchg
movsl
cmc
test
xor
dec
scas
pop
jmp
fsubrl
cmp
mov
mov
xor
nop
push
sbb
jg
aam
fistl
mov
fstl
sub
ss
lcall
enter
add
mov
xor
imulb
lods
icebp
imul
push
cmc
push
shrl
rcll
scas
cli
dec
jg
lea
jmp
push
mov
jne
iret
andl
mov
dec
clc
inc
addr16
das
fwait
std
xchg
pop
xchg
outsl
push
dec
fidivrl
sub
dec
int3
pop
jle
cmp
loopne
and
push
in
mov
out
stc
sub
xor
inc
cltd
inc
shll
outsl
fdiv
adc
push
fldl
pop
pop
xor
mov
insl
das
into
fsubr
mov
cmpsb
aas
repnz
xchg
ret
hlt
dec
ds
pop
push
push
in
mov
jmp
add
pop
fnstcw
cmp
mov
addr16
ret
sub
xor
xchg
inc
in
adc
push
pop
and
imul
jge
or
inc
popa
call
rolb
adcl
mov
mov
daa
es
enter
stc
jmp
ljmp
out
movsl
mov
jmp
ficoml
fistpl
bound
jmp
pusha
adc
icebp
push
adc
int3
push
sbb
mov
pop
rcrb
data16
loope
outsb
pop
push
or
int3
sub
pusha
mov
cltd
mov
inc
cwtl
test
pop
les
mov
push
aas
out
jecxz
xor
insb
push
mov
rolb
and
push
test
popf
mov
and
ret
sbb
jl
add
mov
mov
jnp
inc
xchg
cmpsb
test
orb
addl
movsl
sahf
addr16
aaa
sub
loop
cwtl
inc
jg
cs
mov
mov
sbb
sbb
add
sbb
sarl
aas
or
jge
push
ljmp
mov
int
or
inc
xchg
and
sub
push
pop
fwait
idivb
fnstenv
pusha
test
lret
and
sub
ljmp
or
psubw
jmp
sub
es
fs
xchg
scas
inc
loope
jmp
pop
add
ljmp
in
pop
add
ja
loope
pop
inc
out
and
leave
xchg
adc
das
hlt
mov
push
push
adc
cmpl
dec
sub
mov
xor
xchg
lcall
adc
adc
sbb
mov
xchg
xor
or
test
jns
cwtl
scas
popa
test
inc
cli
fistps
fwait
dec
cmp
pop
lcall
roll
js
inc
movsb
call
jb
xchg
cmp
lock
aas
lods
out
out
mov
loopne
movsb
sub
es
enter
daa
aam
mov
jl
xchg
jnp
ror
jp
movl
mov
movsb
das
rorb
xchg
or
mov
xchg
dec
ret
sbb
aas
push
js
data16
jns
mov
sub
mov
lea
js
leave
push
imul
fwait
sti
mov
mov
sbb
and
xor
mov
mov
fs
jp
jnp
and
inc
mov
adc
and
dec
and
test
mov
je
aam
out
cmpsl
bnd
shrl
adc
or
jbe
adc
ficomps
fdivs
xor
dec
and
out
jo
xor
icebp
fistl
into
dec
insl
fcmovnu
xor
inc
in
sbb
xor
sbb
dec
decl
xor
jg
push
add
push
adc
scas
dec
sub
sahf
pop
stos
rorl
int3
in
push
push
dec
repnz
repnz
mov
subb
sub
arpl
sbb
mov
pop
addr16
inc
adc
add
cmp
mov
stos
push
aam
dec
pusha
cmp
inc
and
shrl
cmpsb
cld
xor
mov
dec
xchg
jno
xor
sbb
and
pop
test
dec
mov
stc
loopne
addr16
rorb
cld
xlat
fdivs
push
mov
mov
sbb
fchs
ret
mov
add
ds
cmpsl
dec
std
xchg
mov
adc
gs
lods
xor
add
int3
add
sub
nop
clc
aaa
ja
imul
or
imul
shll
mov
bnd
pushf
jmp
pop
mov
dec
and
arpl
adc
jo
sbb
xlat
cmpsl
dec
mov
push
add
aaa
cmpsb
mov
and
stos
mov
jno
pop
push
ret
out
mov
mov
gs
les
sti
add
shll
sbb
pop
add
mov
loope
pushf
jp
inc
roll
push
push
test
je
adc
xchg
fsubl
adc
bound
jno
out
pop
cltd
mov
cmp
stos
pop
cmpsb
filds
or
popa
scas
xor
lcall
add
inc
cmp
add
cmp
dec
lret
hlt
test
int
xchg
arpl
or
pop
fmull
add
sbb
and
jno
aas
addr16
cmp
dec
outsl
push
inc
je
test
xchg
out
data16
daa
or
mov
test
jbe
fdivl
subb
aas
jg
movsb
clc
cld
push
push
fnsave
pushf
jl
test
mov
push
inc
out
sub
mov
dec
dec
adc
ret
xlat
adc
fsubp
testl
int3
lods
pop
loopne
in
cmovnp
lret
push
mov
jne
mov
into
enter
les
pop
fwait
enter
cs
shl
add
push
fldl
vmaxpd
notb
mov
push
fmul
lahf
mov
lcall
rorl
lds
jns
sti
inc
mov
aam
sbb
sbb
inc
inc
push
add
pop
mov
xchg
pop
movsb
xor
hlt
and
outsl
xor
pusha
inc
icebp
mov
pushf
mov
fwait
sub
out
andb
push
mov
sbb
dec
cmp
in
mov
adc
sub
sub
adc
add
stos
xlat
push
js
jge
mull
js
inc
xor
jb
out
mov
mov
mov
sbb
push
mov
addl
dec
sarl
jmp
stos
imul
arpl
out
cmp
push
pop
add
aad
cmp
repnz
sbb
jle
dec
mov
scas
hlt
test
xchg
popf
inc
mov
mov
lea
inc
outsb
or
in
jns
pop
adc
test
dec
add
mov
das
xchg
mov
das
fnstcw
xchg
stos
fisubrs
ds
pop
mov
mov
lret
mov
movsb
or
aad
adcb
out
imul
dec
cmp
cmpsl
lcall
jno
negl
xchg
repz
adc
out
mov
ja
sub
push
ja
js
rol
ret
or
cmpsl
push
push
and
push
jo
inc
into
outsb
xor
ds
dec
sbb
and
ljmp
cmc
sbb
inc
mov
mov
add
sbb
ror
sub
ja
mov
mov
pop
outsl
stos
pop
es
pop
movsl
mov
xor
and
xchg
stc
rcr
sbbb
inc
aam
test
mov
adc
aad
in
decl
jnp
add
mov
cmp
mov
mov
fldt
adc
insl
or
cmp
lret
mov
and
mov
dec
jg
adc
push
adc
inc
xor
xor
jl
jns
jl
repnz
mov
mov
jl
ret
lret
dec
sbb
or
jno
dec
mov
push
xorl
mov
arpl
pop
arpl
or
ror
mov
lcall
stos
and
inc
loop
push
ljmp
mov
loopne
adc
daa
test
sahf
adc
adc
pop
je
sbb
pop
cmp
repnz
sub
call
inc
clc
mov
sbb
movl
mov
popa
mov
sbb
fcmovne
addr16
les
mov
cli
lods
jnp
push
jns
xchg
into
add
mov
inc
mov
add
add
push
sbb
leave
fisttpll
roll
mov
scas
in
pop
out
fcompl
pop
add
or
imul
dec
mov
mov
mov
inc
sub
push
inc
pop
loop
xchg
cmpsl
inc
lret
adc
nop
sub
int3
jo
or
pop
mov
aam
push
or
ret
scas
pop
insl
shll
push
popf
popa
ret
outsl
cmp
cmp
repnz
dec
sarb
or
pop
inc
xchg
cmpsl
xchg
mov
cmpsl
sub
sub
add
fwait
mov
ja
mov
je
and
orl
jge
subb
leave
pop
out
pop
cmpsb
mov
mov
lock
mov
mov
jmp
cmovnp
jl
mov
pop
popa
aaa
jnp
ss
or
and
imul
test
ja
andl
rorb
aas
pop
sbb
xor
jnp
cmp
xor
sti
pop
in
pop
fldcw
test
xchg
adc
sbb
and
sbb
fwait
in
mov
shlb
cmpsl
jne
stos
inc
mov
mov
mulb
fwait
js
and
or
and
fmull
loope
jge
jns
xlat
pop
enter
pop
jmp
push
xchg
pop
jmp
sbb
and
push
enter
shll
mov
aad
xchg
jne
cltd
fsubrp
inc
bound
lea
test
enter
mov
xchg
jmp
lcall
sbb
cs
mov
fisubs
push
mov
jecxz
dec
into
jno
cli
popf
das
dec
push
cwtl
inc
jl
mov
xchg
mov
int
mov
ds
mov
xor
js
fisubs
mov
inc
pop
or
cmp
insl
into
mov
push
inc
lahf
int3
nopl
cmc
out
cmpsl
cltd
popf
push
iret
pop
lret
adc
jmp
cmp
dec
jae
lahf
std
push
popa
cltd
fs
je
into
jbe
dec
inc
mov
cmp
pusha
fcoml
popa
sub
test
jmp
iret
adc
xchg
cmp
fidivs
jo
ret
mov
mov
aad
stos
push
jns
xchg
pop
mov
cmp
jne
ja
inc
mov
and
xchg
dec
jo
sub
push
inc
sbb
push
xchg
scas
xlat
mov
js
insl
pop
lea
popa
in
ja
jg
jb
inc
sbbl
or
adc
sahf
mov
pop
or
add
sbb
fcomi
sub
imul
lcall
loope
aas
jp
add
aam
pop
cmp
mov
push
pop
pop
rol
mov
popf
sub
aad
mov
mov
push
test
add
dec
scas
ja
mulb
mov
ds
scas
or
test
and
xor
adcl
and
add
pop
xchg
iret
andb
lahf
test
rcrb
mov
inc
hlt
push
sub
idivl
cli
xchg
cmp
mov
enter
xchg
adc
sbb
cmp
push
push
jp
leave
dec
jl
insl
fnstenv
adc
adc
push
xchg
ret
pop
js
push
sbb
jmp
sahf
xchg
jno
mov
das
xchg
rclb
xlat
pop
les
add
mov
jb
stc
out
fsubrs
add
loopne
inc
dec
shll
mov
fldcw
mov
mov
inc
roll
addr16
mov
dec
mov
cmove
dec
aad
ss
push
lods
fisubrl
inc
prefetchw
or
inc
jle
mov
and
adc
mov
bound
mov
mov
and
das
fiaddl
jg
mov
sbb
dec
clc
mov
fisubrl
cmp
jle
fnstenv
sub
or
push
and
mov
jno
test
dec
mov
aas
add
jns
cmc
shlb
fs
in
lods
xor
subb
sbb
cli
pop
lahf
out
roll
es
ret
inc
inc
push
aad
mov
mov
loop
pop
push
jbe
or
aaa
mov
fimuls
inc
aas
xor
sbb
rolb
inc
out
jge
jl
out
jae
mov
pop
cmpsl
ds
ja
mov
js
lods
mov
or
jne
test
scas
shl
push
nop
mov
pop
ja
mov
shl
lcall
lret
jmp
adc
pop
sub
mov
jnp
jge
pop
loopne
inc
shl
add
cmpl
xchg
filds
test
int
dec
sbb
xlat
add
xchg
popf
jl
mov
sbb
icebp
jns
out
pop
cltd
imull
and
xchg
in
lcall
xabort
nop
cltd
add
dec
lret
shll
dec
pop
jns
loop
cmp
nop
cli
mov
xor
outsl
adc
addr16
ljmp
mov
or
pop
stc
test
mov
or
xchg
mov
idiv
je
in
pop
adc
mov
fcoms
lahf
inc
ds
cmp
repz
shll
pop
add
out
dec
push
adc
fists
std
std
pop
dec
clc
push
out
andl
mov
xchg
xor
jg
mov
and
sub
movsl
out
dec
ljmp
mov
mov
and
lock
xchg
and
xor
mov
out
pusha
jnp
xchg
mov
fwait
test
gs
sbb
fcoms
jns
ds
outsb
inc
das
cmpsb
insl
and
dec
jle
addr16
pop
mov
mov
xor
mov
mov
lret
cmp
xchg
lds
leave
jg
into
dec
jnp
xchg
in
shll
nop
cli
pop
mov
in
cmp
sbb
and
idiv
ljmp
add
imul
add
mov
das
das
jge
in
cmp
mov
daa
mov
nop
push
jge
pusha
push
pop
xchg
arpl
push
jns
aam
or
lcall
sub
popf
lock
imul
mov
mov
mov
sub
jle
ss
pushf
rclb
aad
jl
addr16
mov
lods
cmp
and
jb
xor
ret
sbb
adc
pop
jo
pop
mov
enter
mov
mov
mov
inc
mov
out
imul
inc
dec
lock
pop
dec
cmp
sbb
mov
sbb
jbe
popl
sbb
sarb
or
jb
popa
or
cwtl
leave
in
mov
dec
cmp
fimuls
rcll
push
xor
test
xor
jg
sti
test
or
out
fisttps
lock
jl
xor
pop
adc
mov
and
pop
xchg
in
mov
aad
and
cmpb
xor
or
scas
imul
add
testb
mov
lea
push
test
cmp
push
mov
sub
or
mov
scas
aam
push
insb
cmpsb
inc
or
mov
cwtl
imul
rorl
push
jae
xchg
mov
pusha
sbb
xchg
push
push
in
scas
outsb
and
cld
data16
push
sub
sub
add
dec
test
out
xchg
and
jg
mov
cmp
push
sahf
add
pop
ds
insb
test
sub
jnp
das
fs
dec
push
mov
dec
or
sbb
jmp
inc
or
ljmp
hlt
sub
aam
shlb
mov
scas
mov
and
cmc
dec
xchg
cmpsb
add
mov
xchg
outsl
and
dec
int3
mov
push
bound
mov
adc
cmp
aas
sahf
sbb
cmp
or
push
subl
leave
and
adc
mov
jl
sar
int3
sbb
or
pop
sub
push
sbb
popf
xchg
in
mulb
jns
stc
test
xor
jae
rorb
mov
push
mov
adc
lret
in
adc
pop
lahf
push
jmp
inc
pop
in
dec
sub
xor
and
adc
jnp
out
in
iret
je
jmp
xchg
sub
jp
xchg
push
jo
pop
xchg
push
out
jp
mov
in
les
inc
jbe
pop
cmp
push
push
sahf
imul
push
push
jno
aam
dec
cwtl
in
loopne
push
ss
push
and
dec
pop
jg
xchg
jno
sbb
imul
outsl
popa
mov
in
nop
out
and
sub
loop
or
outsl
cmp
mov
das
lock
ret
add
mov
mov
pop
xchg
jo
cld
dec
cmp
xor
mov
and
test
loope
lahf
jle
xchg
lods
jbe
sbb
cmp
stos
iret
pop
mov
mov
push
addr16
mov
pop
jns
sbb
sbbb
loope
outsb
sub
int
xor
mov
mov
scas
inc
xchg
sarl
mov
add
sbb
outsb
pop
adc
aad
out
packssdw
jne
dec
loope
xchg
ss
fwait
push
push
push
dec
sbb
sbb
or
loope
testl
add
into
jge
cmc
and
mov
mov
xchg
imul
subb
jnp
pop
inc
aaa
mov
out
inc
mov
int
addr16
mov
inc
mov
inc
push
sub
cwtl
push
aam
std
xchg
sub
xchg
rorb
test
mov
fnsave
dec
jle
fbld
mov
push
sbb
or
dec
push
rorl
int3
sbb
dec
in
test
lret
mov
bswap
cs
js
xchg
adc
xor
or
pop
push
aas
cmc
enter
pop
ds
lret
mov
divb
pop
xor
xchg
push
inc
xchg
sub
mov
adc
subl
mov
push
mov
dec
leave
pushf
cltd
das
nop
mov
and
outsb
cld
lahf
sbb
orl
js
add
cmp
sub
add
jno
icebp
and
cs
pop
in
lock
mov
leave
sbb
mov
les
in
ds
sub
ljmp
mov
or
pop
adc
xor
pop
cmp
mov
dec
dec
pop
sub
in
imul
or
push
add
enter
outsl
into
mov
jns
xchg
mov
xor
ja
dec
lret
fdivs
pop
out
insl
je
test
in
orl
mov
lahf
pop
pop
xchg
lahf
lds
mov
sahf
lcall
cwtl
mov
and
outsl
pop
and
aad
aad
loop
xor
sbb
lret
lret
cmc
test
cltd
les
jl
xchg
outsb
dec
sysenter
movsb
mov
arpl
lret
pop
mov
or
subl
clc
scas
setb
aaa
in
rorl
std
out
and
lock
mov
lahf
addr16
and
scas
inc
adc
leave
mov
aam
pop
sti
cmp
inc
loope
into
jmp
pop
jb
aaa
pop
push
out
ja
push
adc
and
cmpsb
movsl
psubw
sbb
mov
shrb
dec
out
jecxz
cs
addr16
ret
inc
add
sti
mov
mov
ret
adc
mov
jbe
lcall
cmp
lret
pop
loop
out
lcall
data16
pop
cmp
pop
jae
std
hlt
scas
pop
adc
push
mov
and
test
insl
lret
loope
enter
aad
push
sub
jge
imul
xor
pop
rolb
iret
arpl
jmp
push
sub
jno
pop
movsb
je
xor
mov
jp
rclb
lods
fimull
hlt
addl
es
out
call
sarl
mov
push
jae
repnz
add
shr
xchg
sysenter
inc
mov
push
push
mov
or
scas
cwtl
jecxz
mov
inc
push
add
or
jne
out
std
js
das
jecxz
lcall
cmp
jnp
rorl
andl
mov
pop
test
adc
cmpsb
or
and
sbb
push
lods
and
dec
lret
outsb
cwtl
adc
lds
out
adc
inc
xorb
jae
fsub
dec
loopne
sbb
cmp
mov
push
pop
push
cld
test
orb
sub
int3
idivb
outsb
cmp
add
ss
scas
mov
add
xor
jns
subl
dec
inc
mov
or
cmp
ljmp
sbb
adc
sbb
xchg
loope
ja
enter
aam
mov
lock
fwait
ljmp
push
outsb
jl
ds
cmp
popa
sbb
push
push
in
add
xchg
cmpsb
in
xchg
stos
repz
aad
add
imul
or
push
sub
push
sub
pop
xchg
adc
push
fwait
dec
mov
dec
xorl
in
lret
into
cmpl
xchg
aaa
or
or
add
adc
pop
mov
sbb
bound
sub
push
jae
scas
imul
decb
and
or
sbb
sbb
out
add
aad
outsl
lock
sbbb
hlt
sbb
stos
sbb
pop
lock
xor
push
inc
in
lret
pop
cmp
or
push
or
jl
jl
clc
jae
jno
fsubl
fcomip
xchg
jp
imul
scas
push
scas
in
icebp
xor
cmp
inc
adc
inc
add
or
idiv
adc
movsb
outsl
mov
es
push
stos
mov
je
aas
addr16
dec
cmp
dec
mov
mov
push
xchg
mov
sbb
push
pop
popa
or
inc
adcb
insb
jg
cwtl
movsb
fists
mov
int3
xor
xchg
pop
stc
xchg
cwtl
add
xor
fwait
mov
stc
addr16
incl
in
shr
cmpsl
loopne
lods
insl
dec
in
dec
jl
xorb
xchg
rorl
jbe
and
sti
dec
add
out
sarl
enter
jge
mov
add
mov
fisubl
mov
add
sbb
push
or
push
cld
lcall
in
mov
cmp
pop
jnp
and
and
push
mov
fwait
fs
dec
jle
xchg
push
rorb
out
in
push
jle
jl
ss
mov
adc
pop
fcmovu
outsl
push
shrb
dec
dec
push
mov
ret
add
push
cmp
sub
popa
mov
pop
pop
add
loopne
push
sbb
loopne
mov
jbe
mov
jl
cltd
mov
sarl
outsb
pop
cwtl
mov
push
xor
or
jb
out
mov
push
pop
lret
or
sahf
pop
push
mov
jne
cld
fisttpll
mov
mov
gs
inc
xchg
add
in
xchg
jmp
add
push
arpl
mov
mov
sti
jbe
mov
push
push
scas
pop
cmpb
push
int3
dec
jmp
jmp
push
lahf
or
push
ss
js
aaa
addl
test
add
icebp
xor
xor
loope
cltd
inc
and
stos
shrl
std
lods
xchg
subl
shlw
jns
xchg
shlb
loope
sbb
pop
stos
adc
sub
jae
jp
movsl
mov
mov
sub
addr16
inc
jns
cmpsw
out
mov
std
cs
out
mov
and
fdivrs
ret
pusha
das
addr16
gs
leave
imul
inc
inc
xchg
es
js
ret
pop
push
xor
sub
pop
fwait
and
gs
cmp
xchg
andl
cmp
push
int
subl
mov
fisubs
lock
mov
movq
mov
stos
loop
out
fldenv
mov
pop
pop
in
sub
lods
lock
std
scas
bound
addb
movsb
notl
dec
xchg
jne
push
pop
cmc
call
sbb
mov
push
xchg
ret
shrb
jl
clc
or
jle
dec
test
adc
cld
xor
and
adc
test
pop
jle
arpl
jae
dec
loop
push
lretw
out
lret
cli
daa
incb
jmp
pop
inc
mov
jg
sbb
aaa
clc
cltd
mov
testl
xchg
fcmovu
popf
or
mov
add
add
mov
fwait
jns
addb
arpl
mov
nop
lret
sbb
inc
jge
sbb
xlat
shrb
and
bound
or
mov
test
fnsave
mov
je
fsubr
jno
cs
sbb
mov
jle
cmp
sbb
or
push
je
mov
xor
mov
push
cmp
arpl
enter
adc
add
out
ss
cmpsb
hlt
push
bound
cmp
cmp
xchg
icebp
test
xor
aaa
push
mov
xlat
popl
addr16
jle
inc
sbbl
sar
outsb
adc
rorb
inc
call
dec
aam
divb
sbb
imulb
push
dec
jns
pop
mov
sub
cmp
clc
fcomps
mov
in
xor
cli
ret
iret
pop
mov
aam
lods
add
je
or
xor
pop
cmpsl
dec
fdivrp
jmp
test
inc
push
movsb
enter
mov
psubusb
mov
stos
out
jp
lds
or
test
aas
test
adc
fisubs
jmp
push
mov
adc
pop
sti
xor
fdivrp
mov
jl
stos
test
nop
dec
jecxz
xor
xchg
sahf
lock
mov
movb
jp
pop
int
not
call
dec
inc
xchg
outsb
mov
xorb
adc
mov
pop
dec
aas
outsl
push
xor
mov
and
and
testb
push
dec
lahf
aam
in
sbb
mov
lods
mov
in
int
ja
cmpsb
inc
xchg
add
call
sub
daa
std
cmpsl
lret
cmpsb
and
bswap
lcall
js
jno
jae
xchg
jbe
ret
dec
fsubrs
fstpl
inc
pop
cmpsl
sbb
fcmove
fnstsw
jl
push
mov
rcrl
loope
xor
xchg
mov
inc
adc
and
aas
xchg
push
dec
mov
loopne
es
das
cmpsb
mov
and
cltd
fldcw
fldcw
mov
imul
arpl
lods
or
xchg
test
and
dec
inc
rolb
dec
dec
daa
mov
cltd
test
leave
and
mov
xlat
push
mov
outsl
daa
sti
std
subl
mov
cwtl
lods
inc
pop
sbb
nop
mov
adc
push
fiadds
jl
int
jae
xor
add
pop
popa
in
cmpsl
shll
add
jns
inc
adc
mov
xor
or
hlt
ds
cmp
enter
hlt
faddl
ds
mov
and
loope
cmp
es
cmpsb
mov
jno
and
and
mov
xchg
xor
outsl
xchg
cld
fs
sbb
shlb
adc
cld
loop
sbb
movsb
lds
sub
or
sbb
roll
stos
mov
popf
push
mov
jb
push
sub
adc
mov
cmpsb
push
ret
jl
stos
push
jg
xor
xor
xor
inc
dec
and
and
xor
mov
ss
shl
sub
mov
cmpsl
inc
ljmp
jns
cld
and
ja
jae
lret
push
jmp
mov
push
mov
das
jecxz
add
pop
cmp
inc
dec
stos
out
je
adc
pop
cwtl
pushf
enter
insl
jb
aaa
and
inc
lcall
and
xchg
jne
add
mov
stc
pusha
and
arpl
sbb
mov
sub
and
mov
arpl
rcl
mulps
iret
fs
repnz
fstpt
sahf
cli
mov
cmpsl
fdivp
test
mov
shrl
sbbl
addr16
cmpsb
in
subl
jne
and
add
and
mov
outsb
arpl
pop
mov
mov
pop
loop
gs
sub
inc
add
scas
pop
test
loope
es
cltd
xor
push
jno
and
or
jle
icebp
mov
add
test
mov
push
pop
jns
push
repnz
icebp
fsubl
rorb
sti
jge
cmpsl
fcmovnbe
loop
repz
or
jae
push
xchg
cmp
scas
jg
inc
sub
mov
fdivr
insl
into
mov
mov
dec
in
dec
dec
sub
jo
fisttpl
pop
flds
pop
cmc
push
cmp
push
add
lcall
jl
pop
mov
mov
ss
xor
pop
and
or
ret
lock
es
xor
mov
ret
mov
mov
fldcw
jb
jb
dec
pop
repz
movb
dec
pusha
stos
movsb
mov
sub
inc
ljmp
pushf
or
mov
rol
jo
jle
lcall
sarb
push
loop
aaa
mov
or
loope
outsb
add
cmp
inc
arpl
pop
arpl
lret
push
pushf
push
cmp
mov
pop
test
mov
pop
int
lods
push
jle
pop
fs
sbb
pop
js
push
cmpsb
test
lock
jnp
test
mov
jg
and
cs
hlt
push
or
add
cmpsb
out
ljmp
xchg
psrlq
xchg
add
pushf
or
cmp
dec
fcomps
stc
cmpsl
dec
subps
fcoml
fucomi
add
xor
mov
daa
repz
add
aad
movsl
pop
fs
or
push
mov
add
rcr
lods
into
aas
fnstenv
shll
and
xchg
sub
movsl
in
inc
orb
mov
and
dec
arpl
ret
repnz
jo
es
push
inc
inc
pop
ret
or
add
sub
call
int
les
pop
mov
lods
mov
pusha
jb
jbe
lds
or
mov
jmp
sbb
add
xchg
add
cmc
enter
insl
xor
adcb
std
jbe
mov
cmp
std
xchg
incl
sbb
lret
repz
cmpsl
push
sbb
lret
mov
jg
repz
faddl
inc
ret
in
add
stc
pusha
jne
lahf
xchg
addb
enter
inc
ja
cmp
xlat
movsb
cwtl
pop
mov
and
negb
imul
lods
icebp
mov
rorl
jo
stc
xor
test
insl
dec
jno
sub
fmul
inc
push
jl
loopne
mov
xchg
jecxz
lcall
pop
test
lret
add
sbb
repz
pop
pop
inc
mov
es
sub
xor
pop
lcall
enter
inc
add
jnp
aas
cmp
jmp
hlt
and
mov
cmpsl
popf
cmp
ret
test
stos
mov
dec
and
std
enter
mov
idivb
mov
sbb
xlat
inc
mov
lods
pop
lock
pushf
int3
in
sbb
dec
xchg
jbe
push
addb
outsb
mov
in
sub
xor
xor
sahf
push
mov
dec
pop
add
cmp
cmp
lret
aam
dec
leave
int
int3
jbe
sbb
jge
push
rcrl
mov
adc
aaa
jl
cwtl
inc
xlat
or
jmp
popa
scas
hlt
mov
pop
dec
sahf
or
xchg
sub
cld
xor
int
sub
mov
inc
inc
jne
mov
mov
sub
loop
sbb
ja
pop
ljmp
sbb
mov
mov
pop
and
and
aaa
in
sti
mov
loopne
lea
xchg
pop
xchg
mov
sbb
xor
insl
rorb
or
adc
sbb
lods
xor
cli
rcll
and
lahf
sub
pop
mov
rcr
out
rolb
mov
shl
jecxz
jl
jp
fcmovnb
js
out
add
mov
dec
push
out
in
mov
enter
adc
xorb
jmp
in
out
sbb
jge
addr16
into
jb
stc
in
das
and
outsl
in
or
xor
sbb
sub
pusha
cwtl
add
pop
lret
mov
pop
add
jno
pop
mov
mov
sub
jbe
adc
sbb
inc
and
pop
popa
mov
and
stos
in
jmp
adc
divl
icebp
les
bound
mov
in
cmp
mov
clc
mov
data16
mov
lods
lods
aam
fwait
dec
cmp
cmp
push
call
dec
cmpsb
fs
and
insb
movsb
repnz
cli
outsl
iret
mov
jmp
pushf
add
ljmp
cs
push
inc
or
jge
data16
dec
mov
out
add
push
cwtl
inc
adc
fs
popf
into
and
rcrl
or
push
mov
cli
cld
fcomp
out
nop
aas
jbe
insb
stos
push
lahf
out
dec
stos
lcall
in
int3
in
mov
xchg
add
ja
aaa
pop
push
mov
mov
adc
aaa
dec
sbb
push
xor
aad
pop
test
sbb
sub
out
mov
aad
or
jmp
lret
cmp
aas
sbb
pushf
fwait
inc
mov
ljmp
inc
cs
jno
jge
sub
loopne
adc
les
inc
pop
pop
aad
or
out
jno
or
outsl
scas
mov
dec
out
stos
jge
xchg
jae
pop
outsb
xchg
jp
dec
cmp
lret
mov
sub
jle
cli
test
push
arpl
rcrb
push
push
jl
cwtl
lock
das
jae
loope
fisubrl
or
push
mov
lods
adc
xor
cli
mov
xor
scas
pushf
stos
and
adc
insl
push
nop
jno
les
out
push
stc
in
xchg
cmp
call
jecxz
nop
scas
add
pop
loope
lock
pop
insl
imul
aas
outsb
dec
dec
dec
pop
ljmp
pop
push
sbb
xor
jmp
mov
jnp
xor
sbbb
push
jl
repz
push
iret
in
jmp
or
cmp
pop
je
das
iret
or
mov
aaa
mov
xor
lahf
loopne
xor
inc
sub
sbb
inc
add
mov
insl
stos
les
inc
jbe
jb
push
adc
cwtl
fldt
jge
sbbb
jae
stc
ret
fwait
push
lods
add
adc
and
ret
adcb
xchg
outsl
jecxz
sbb
push
hlt
int3
lds
xchg
sbb
mov
and
push
ret
es
and
insb
push
mov
adc
cli
cmc
and
cmp
jge
xchg
mov
push
cmp
push
push
daa
cmp
fs
jb
sub
filds
and
je
jo
fs
mov
lea
insb
sub
mov
mov
jecxz
stos
repz
aas
sbb
movups
mov
mov
dec
xchg
mov
ljmp
cmp
movsl
fcmove
push
lds
mov
imul
sbb
adc
movsb
sbb
jae
jl
pop
cmp
adc
pop
or
loop
mov
mov
xchg
xchg
add
push
jae
push
movsl
push
push
fcoml
jno
and
shld
mov
mov
pop
sbb
in
xor
rolb
xlat
idiv
jl
inc
int3
inc
pop
in
out
jg
mov
shl
or
rorb
clc
push
orb
pop
adc
add
push
loope
push
jl
shrl
call
imul
hlt
sub
push
into
cld
lea
cwtl
fldt
mulb
shrl
jmp
pop
shlb
xor
cli
xor
mov
jle
fimull
sbbl
aas
fidivrs
jl
dec
cmp
mov
dec
test
push
cli
mov
imul
and
sub
mov
cmp
clc
mov
push
lods
popa
sub
push
dec
mov
pusha
fucomip
or
pusha
pop
fsubrl
subl
stos
clc
clc
xchg
cmp
lret
jb
cmp
and
notl
sbbb
pop
cmpl
movsl
sbb
mov
jp
adc
or
jmp
out
rcll
xchg
sbb
add
shll
push
sbb
in
and
fdivrl
mov
mov
iret
aad
test
cmpsl
add
xchg
fwait
lods
movsl
fwait
sbbl
fsts
and
push
cmp
ror
lcall
aam
xchg
push
mov
int
inc
pusha
inc
lea
mov
adcl
enter
jl
dec
daa
movsb
shlb
je
jnp
in
mov
jmp
mov
cmp
outsb
fnsave
mov
lods
pop
and
and
mov
leave
inc
mov
sub
pop
into
daa
movsb
lret
mul
mov
add
jns
js
shlb
xor
insl
cmp
and
out
or
pusha
out
mov
jno,pt
int
ficomps
xchg
xchg
icebp
into
xchg
lret
cwtl
fst
out
int
dec
mov
popf
add
jno
cmp
or
lods
xlat
sub
sbb
and
inc
and
sub
push
daa
or
test
add
ds
xchg
test
mov
test
adc
pop
int
dec
psadbw
aaa
clc
outsb
add
inc
sbb
cld
inc
jnp,pn
nop
jbe
das
das
cltd
ds
sahf
incl
lahf
push
in
aam
xor
ds
hlt
mov
mov
lret
cmpsl
pusha
mov
in
push
bound
iret
mov
pop
shll
add
pop
aas
pop
inc
in
dec
mov
in
mov
sar
cmpsl
jp
aaa
enter
js
cltd
sub
or
imul
iret
push
cwtl
sahf
mov
jnp
xlat
cmp
ja
bound
testb
enter
xlat
dec
or
aaa
sti
js
mov
out
stos
aas
xor
insb
rcll
mov
sbb
adc
sub
xor
addr16
jne
retw
data16
mov
ret
and
cmp
or
add
pop
shrl
icebp
out
add
dec
mov
repz
push
push
add
sub
repz
xlat
dec
out
ja
push
xor
aas
popa
or
dec
shll
sarb
nop
fsubrs
sub
cltd
sbb
and
enter
aam
shlb
rcrl
mov
push
mov
mov
cmp
xlat
mov
sbb
mov
or
inc
push
cmpsl
jb
jge
jae
scas
stc
adc
leave
ss
popf
test
pop
ja
inc
pop
push
sub
in
pop
mov
push
adc
add
and
jb
outsl
mov
dec
sbb
bound
dec
mov
xchg
stos
push
push
or
jp
rolb
mov
movsl
in
clc
add
pop
push
in
adc
aam
dec
xchg
add
pop
jne
mov
aas
xchg
fnstenv
mov
jbe
inc
push
and
mull
sti
in
sub
mov
xor
cmc
mov
aas
cmp
cltd
mov
loope
sti
in
popf
add
mov
test
push
or
push
cmp
mov
jae
mov
jmp
les
jmp
cmp
out
scas
xchg
push
push
add
push
sahf
dec
stos
std
mov
jmp
and
xchg
cwtl
cmp
or
fwait
dec
hlt
fwait
movsb
mov
loop
or
sub
out
add
cld
lods
in
scas
inc
aaa
inc
push
scas
and
xchg
lcall
pop
aad
outsb
add
cmp
les
dec
loope
jl
mov
jecxz
enter
shlb
in
mov
push
sbb
mov
das
mov
lahf
cmc
loopne
mov
daa
data16
in
shlb
push
xchg
cmp
xor
ljmp
sub
add
movsb
movsb
sar
ret
push
negb
fcom
out
add
mov
je
jmp
std
mov
mov
call
lods
sbb
outsb
mov
xor
xchg
repz
je
popa
adc
lds
pop
sbb
into
and
xor
je
cmp
mov
or
pop
lock
jno
fsubl
mov
imul
faddl
sar
and
fcomps
movsb
and
xchg
and
cmpsl
mov
rcll
mov
inc
fiaddl
imul
scas
repnz
sti
int
mov
ljmp
mov
fsubrp
cld
lds
pop
ljmp
inc
stc
pop
or
push
inc
jecxz
imul
jbe
jecxz
flds
scas
loop
scas
dec
sbb
arpl
lea
rcl
xor
lret
out
pop
pop
iret
cmp
lcall
and
sub
fwait
test
or
cmp
rolb
lock
or
les
popf
dec
cs
pop
pop
jle
pop
test
sbb
pop
stc
xor
xchg
add
push
ds
inc
sbb
fmull
fimull
int
enter
movsl
pop
xchg
inc
push
mov
cmp
in
mov
jno
sarl
mov
std
in
lcall
push
bound
xor
pop
outsb
fisubl
std
in
xchg
xchg
sbb
ja
dec
push
insl
shl
pushf
mov
push
imul
sub
dec
and
scas
in
les
cld
ljmp
mov
pop
int3
mov
pop
pop
sahf
push
adc
mov
daa
mov
int
aas
and
jp
mov
pop
enter
hlt
pop
sbb
aas
and
sarl
pop
add
pop
rorl
mov
dec
and
mov
sbb
sbb
pop
into
cs
xchg
stos
scas
iret
mov
loop
sti
pusha
arpl
aaa
mov
jae
jns
adc
push
push
outsl
aam
jns
fildll
mov
cmp
xor
fnsave
mov
xchg
xchg
push
jg
out
add
pusha
cmpsl
sbbl
push
repnz
or
pop
pop
lea
jg
pop
ss
xchg
sub
js
pop
es
flds
ret
loop
push
mov
push
adc
cwtl
pop
sahf
popa
jl
pop
cmc
push
push
or
jge
mov
loope
adc
enter
pop
loope
adc
arpl
add
push
adc
mov
add
inc
ds
cmc
idivb
imul
and
lea
push
adc
mov
pop
repnz
cs
jne
dec
jnp
aaa
xor
push
rol
movsl
xor
insl
add
rcrl
shll
and
dec
xchg
lods
jbe
ret
stc
cmc
dec
lods
movsb
inc
jne
add
inc
or
addr16
das
cld
mov
loope
in
cmp
pop
cmp
cmpsl
add
into
cmp
sbb
stc
arpl
daa
push
rcrb
or
loop
cltd
jmp
jg
mov
sahf
mov
push
jle
mov
loope
dec
scas
pop
out
dec
outsb
jle
lods
cs
lcall
xor
mov
pop
mov
cmp
xchg
repz
ret
mov
pop
daa
mov
shrl
loope
dec
incb
mov
mov
fs
aas
mov
dec
sbb
mov
test
lcall
je
pop
sbbl
and
out
addr16
push
out
mov
lods
jg
lock
mov
shl
inc
call
dec
js
fldt
or
cmpsb
es
ja
mov
mov
cmc
lods
pop
jo
xor
and
mov
std
sbb
lret
adc
add
or
cld
adc
mov
add
dec
outsl
jp
sub
test
mov
push
fcoms
shlb
mov
sub
dec
cmpl
stc
jmp
dec
lahf
dec
mov
stos
jbe
loope
loop
mov
sub
inc
jg
cli
dec
sbb
mov
mov
aaa
sub
adc
sub
push
les
add
fs
insl
mov
in
and
stc
inc
jg
daa
adcl
mov
in
es
pop
or
cmpsl
add
inc
imul
cld
pop
xchg
sbb
mov
dec
daa
add
mov
sbb
push
dec
aam
jno
ficoml
sub
adcl
out
xor
mov
stos
or
inc
leave
or
sti
lock
rcl
stos
push
xchg
inc
mov
dec
mov
das
sbb
icebp
int
dec
sahf
push
cld
mov
stos
lar
pop
mov
ja
test
popf
jge
jo
ljmp
jp
and
test
mov
fldl
sub
cmp
add
xor
into
push
xchg
cmp
int3
jbe
in
test
add
jbe
jecxz
mov
fistl
inc
xor
mov
pop
jmp
pop
cmp
inc
pop
sub
stos
jg
ds
les
bound
lods
jge
cmp
cltd
push
mov
inc
idivl
and
xor
add
ret
mov
push
push
xor
push
clc
xor
pop
aaa
sbb
adc
or
mov
jl
or
jne
in
inc
inc
push
ds
pop
fstps
add
jne
jbe
ret
out
inc
add
insl
or
sub
pop
jle
add
cld
mov
neg
es
and
dec
cwtl
clc
out
cmp
or
pop
push
adc
arpl
test
ds
leave
jp
adc
mov
daa
lock
jo
call
xlat
fisubrs
das
and
js
repz
icebp
add
lds
mov
bound
cli
lahf
stc
and
xchg
je
cwtl
mov
sub
fwait
cmp
popa
push
enter
pop
mov
mov
cmp
mov
imull
loope
andl
push
pop
and
sbb
pop
int
shrb
add
push
add
dec
add
xlat
mov
movsb
shll
in
jo
int
shll
call
gs
cmp
mov
sbbl
sbb
scas
aaa
int
mov
ret
pop
jl
inc
imul
push
inc
dec
cld
ror
repnz
xchg
test
incb
mov
gs
pop
or
sub
fstl
jb
subb
pop
inc
popf
pop
aaa
cmp
sub
je
push
and
cmpsb
dec
cmp
dec
fisubrs
lcall
cmpsl
jge
rcrb
dec
xor
clc
stos
lods
sar
push
cmc
pop
cmp
cmovg
out
pop
aam
mov
loop
xlat
in
les
jo
loop
sbb
cld
mov
outsl
scas
dec
push
mov
aad
daa
push
push
cmpsl
icebp
ja
add
sbb
push
and
pop
adc
and
jg
push
pop
inc
loopne
jb
scas
xor
js
data16
cmp
in
in
mov
jbe
push
scas
outsl
jno
push
int3
xor
iret
pop
sbb
testl
fmull
fs
imul
rolb
adc
mov
mov
jns
xchg
clc
push
std
into
ret
jmp
sbb
pop
std
outsb
mov
in
jecxz
jle
and
jno
shll
inc
dec
sahf
xor
ss
loopne
or
sub
shll
or
popa
lahf
mov
and
faddl
sbb
pop
push
jne
adc
daa
dec
or
leave
jecxz
in
je
inc
jae
mov
insb
lahf
xchg
jae
xor
test
xorl
dec
dec
test
dec
test
add
mov
lret
xlat
lock
mov
aaa
xor
adc
dec
insl
sub
jb
int
lahf
inc
pop
test
pop
push
leave
cltd
fcmovu
inc
xchg
test
jg
je
ss
xchg
sub
mov
xchg
nop
je
scas
movsl
adc
scas
inc
push
insl
jne
and
xor
xor
jge
and
lea
mov
loop
xlat
into
les
sub
xchg
jnp
cmp
imul
cltd
pop
sbb
push
cmp
icebp
in
and
mov
js
std
aaa
mov
int3
rclb
xor
push
sar
bound
cwtl
push
mov
sbb
out
stc
jle
mov
ss
fbstp
xor
mov
add
or
mov
aas
dec
and
mov
stos
mov
sub
adc
stos
sbb
aaa
cmp
dec
lret
pop
jl
ljmp
ficomps
adc
and
or
cld
xchg
cmp
jp
pop
mov
inc
jp
into
push
and
enter
mov
aad
es
xor
mov
in
push
push
movsb
jmp
add
sbb
mov
mov
std
inc
loopne
in
ljmp
out
adc
jge
jae
roll
repz
adc
fs
pop
loop
sbb
leave
stc
lret
cli
jno
fs
lods
mov
outsl
clc
ja
daa
xchg
dec
dec
mov
pop
ja
or
push
sub
jcxz
popf
dec
xchg
or
inc
fwait
aad
loope
aas
dec
pushf
mov
and
daa
fcomi
sti
lahf
mov
or
mov
imul
lock
std
into
push
sbb
loopne
out
mov
aad
cwtl
pop
ret
popa
ss
pop
sbbb
arpl
adc
push
sbb
push
add
add
js
xchg
lock
add
xor
out
outsb
xchg
cmp
cmp
test
jle
dec
jb
daa
cmp
push
mov
data16
dec
mov
data16
pop
xlat
pop
push
cmp
mov
sub
cmpsb
loopne
cmpsb
xchg
int
adc
pop
rorb
jbe
aad
sub
idivl
in
and
idivl
cs
push
mov
fstl
add
mov
insb
popa
frstor
idivb
pusha
add
mov
fildll
test
cmp
cmc
ja
adc
mov
cmpsl
movsb
xchg
cli
ret
out
int3
sti
hlt
mov
jl
es
or
sub
mov
jno
pop
mov
ret
cmp
scas
xlat
lahf
imul
inc
inc
fimuls
jae
loope
add
cs
inc
add
jl
in
push
into
stos
out
int3
add
mov
popa
and
jecxz
fldl
xchg
jle
xor
lods
xor
loope
loopne
ficompl
adc
sub
dec
and
call
xchg
in
out
call
mov
imul
sub
lock
dec
sbb
pop
xor
fwait
xchg
pop
xchg
jne
loop
mov
movsl
aas
and
mov
jbe
or
mov
or
dec
xor
sbb
adc
ret
xor
mov
dec
inc
sbb
in
cmp
jne
stos
ret
fcomip
ds
sbb
mov
mov
inc
and
insb
stos
and
fldt
push
cld
adc
mov
or
shll
ret
mov
adc
repnz
adc
mov
ret
xor
ljmp
stos
aad
push
inc
das
jl
in
adc
sti
jmp
and
add
es
push
push
dec
aaa
xor
push
addr16
cltd
sahf
test
out
xchg
pop
sub
mov
enter
mov
insb
and
test
jo
cmc
lahf
xor
sub
mov
test
jle
inc
mov
mov
cmp
testl
cli
xchg
mov
push
mov
dec
jle
mov
jle
fwait
lea
push
pusha
xchg
push
ret
dec
push
jnp
jno
mov
lock
fs
je
add
pop
outsl
insl
imul
gs
ja
mov
roll
or
lahf
stos
inc
jecxz
xor
jns
jns
or
or
xchg
or
ja
sbbl
xchg
jge
stos
adc
add
push
fcompl
mov
std
adc
pop
cmp
addl
push
mov
movsb
sbb
jne
iret
xchg
pop
pop
and
mov
outsb
pop
and
mov
or
out
or
es
repz
xchg
push
push
imul
jmp
jle
fldl
lahf
dec
pop
cltd
pop
sbb
dec
pop
cmp
inc
mov
cmp
jp
or
pop
sub
rorb
fstps
xchg
push
push
data16
add
add
popf
ss
dec
arpl
cwtl
adc
idivl
fwait
and
addr16
cmpsl
mov
xchg
pop
enter
test
cmp
pop
mov
dec
mov
jle
xchg
cmpsl
pop
cmp
or
popa
mov
out
stos
sub
dec
jns
sbb
movsb
add
cmp
adc
stc
mov
pop
das
imul
sub
iretw
sbb
add
lods
cmp
outsb
and
mov
test
xchg
sub
push
fidivl
mov
fwait
xchg
add
xchg
adc
ret
lret
les
or
hlt
xlat
cltd
pop
test
ficoml
pop
mov
ds
jp
xor
lea
mov
roll
push
sbb
xchg
jg
pop
pop
sarl
adc
jno
cmp
push
cld
outsl
sub
add
mov
mov
dec
aas
adc
sbb
data16
lahf
jmp
leave
xor
xlat
loope
lcall
mov
cltd
pop
dec
sti
ja
stos
xor
inc
iret
scas
daa
sub
loop
inc
test
or
je
jb
xchg
jecxz
mov
cmp
pop
test
mov
add
inc
mov
jecxz
push
mov
adc
mov
mov
add
cwtl
or
call
dec
adc
lock
adc
subl
lea
sub
lret
xor
testl
cltd
dec
stc
mov
mov
out
push
scas
ss
pop
add
pop
divl
inc
pusha
add
xchg
testl
xchg
sub
shll
ja
pushf
sbb
ret
or
jmp
cmp
jo
loop
adc
out
xchg
movsb
add
addr16
out
cwtl
push
mov
in
scas
sub
xchg
adc
lds
mov
subb
or
push
dec
rcr
loopne
aas
jmp
push
arpl
mov
aad
or
leave
pop
and
outsl
fld
pop
fs
mov
dec
mov
dec
fsubrp
jnp
js
int3
mov
movsb
sub
js
cltd
cld
xchg
sub
mov
jns
pop
clc
xchg
push
inc
js
xchg
test
cmp
mov
int
icebp
dec
and
in
bound
mov
leave
inc
popf
iret
sub
aam
mov
or
hlt
sub
mov
dec
data16
and
xchg
mov
pushf
mov
mov
int
push
pop
pop
ljmp
dec
mov
jle
fs
arpl
in
out
cmp
stos
rcr
or
mov
daa
into
sti
or
cmc
stc
and
test
pushf
add
cmp
xchg
adc
push
add
scas
jge
add
sahf
les
or
imul
or
mov
push
test
pop
xor
xlat
mov
mov
xor
leave
fisubrl
fwait
cmp
mull
cmp
cli
sub
outsl
int3
adc
mov
pop
sbbb
mov
xchg
loopne
das
ficompl
cmpb
lret
sub
aam
pop
mov
mov
call
cld
jno
mov
bound
enter
ret
int3
jno
and
xlat
out
test
inc
repz
es
dec
test
mov
xor
imul
insb
mov
mov
std
adc
mov
mov
jp
dec
push
sbb
fbstp
push
jae
aaa
int3
les
mov
fs
in
dec
adc
adcl
cmp
jo
shlb
loop
insb
clc
loope
xchg
mov
pusha
outsl
lods
and
sbb
push
dec
or
imul
mov
dec
pop
iret
xor
jnp
jae
push
pop
ss
jl
mov
or
push
push
outsb
lds
popf
mov
xchg
dec
cmpsl
icebp
icebp
cmp
mov
sub
cmp
movl
loopne
lods
outsb
xchg
bound
dec
mov
imul
cltd
adc
add
jno
dec
or
mov
sbb
sbb
dec
rolb
pop
mov
out
in
addr16
jns
test
pop
push
cmp
popa
ja
push
bound
loope
cmp
mov
shll
push
dec
xchg
cmp
pushf
bound
sub
fbld
stos
ja,pn
mov
sub
jb
inc
imul
or
mov
xor
call
mov
popa
das
xlat
dec
sahf
and
int3
jne
addr16
and
inc
loopne
pop
mov
pop
jo
push
xor
mov
pop
xor
push
sbb
mov
lcall
stc
or
and
sarb
jo
pop
pop
mov
test
adcl
lock
cmp
xor
sbb
andl
inc
jns
insl
mov
sbb
ficoml
fsubl
cmc
mov
test
adcl
sub
adc
cltd
and
test
fiaddl
aaa
add
bsr
jnp
push
push
adc
jp
loopne
stos
cltd
or
pop
or
clc
in
dec
cltd
dec
inc
xchg
lahf
hlt
sub
dec
and
stc
sarb
push
dec
gs
lret
nop
dec
xor
and
pusha
les
fwait
push
inc
pusha
adc
ret
or
push
sub
or
data16
mov
fcomip
decl
mov
dec
es
jb
mov
mov
and
lods
ja
sti
adc
insb
lcall
xchg
lods
or
mov
dec
adc
push
fldt
xlat
lret
test
inc
sub
or
inc
int
cmc
movb
cmpsl
dec
push
xchg
jl
int3
sti
enter
pop
cmpsl
xlat
lock
mov
in
jmp
add
mull
shrb
xlat
mov
cmp
inc
fdivrs
out
stos
push
and
jb
ficomps
inc
imul
or
ret
jne
jne
out
xor
shr
jmp
cs
gs
int
lret
pushf
mov
xchg
fildll
pusha
mov
movsb
pop
lahf
mov
cmp
jmp
lahf
loop
cmp
jbe
decb
iretw
xorb
sbb
xchg
mov
addb
nop
popf
mov
fsubs
fwait
int3
out
roll
shlb
loopne
lock
xchg
push
mov
dec
and
rcrb
test
or
inc
sti
sbb
imul
jp
mov
and
lcall
inc
das
jne
push
insb
in
sbbb
inc
xlat
stc
mov
test
mov
bound
shr
pop
xchg
out
mov
in
xchg
cltd
mov
rcrl
push
shl
into
push
jp
imul
add
iret
xchg
mov
or
adc
ja
jg
mov
aam
jno
ret
rcr
les
arpl
aam
imul
dec
mov
sbb
jns
in
sahf
mov
lods
push
xor
xor
add
lahf
sbb
xor
mov
movsl
mov
sub
mov
into
popf
imul
adc
scas
sbb
loop
sti
inc
cwtl
icebp
aad
and
subb
test
pop
cmc
add
mov
sbb
sahf
inc
mov
pop
mov
and
sbb
icebp
push
add
jbe
loope
int
sbb
in
mov
ljmp
adc
daa
in
mov
adc
rcll
jb
mov
pusha
add
out
cmp
nop
add
bound
push
movsl
mov
jnp
repnz
cli
mov
stc
jno
mov
adc
or
inc
fisttpl
adc
mov
jbe
sbb
xchg
pop
sub
and
call
mov
inc
repz
ja
int3
fwait
push
jbe
mov
or
fnsave
mov
xchg
cld
gs
das
or
mov
jecxz
imul
lods
into
fs
cmp
mov
bound
lods
fsubrl
iret
aaa
xor
pop
out
out
adc
sbb
push
jns
test
xor
pushf
imul
push
enter
testl
fldt
pop
push
cmp
xchg
lea
xchg
adc
aam
cld
fisubrs
js
mov
cmp
cmp
mov
sub
jg
shlb
and
pop
push
out
push
out
insl
cmp
mov
mov
les
xor
xchg
mov
mov
mov
dec
fadds
push
cmp
push
test
mov
mov
pop
daa
fwait
xchg
jne
cld
dec
sarl
iret
jmpw
mov
xor
cmp
push
mov
jae
fwait
inc
in
enter
jp
mov
sbb
jecxz
imul
push
js
inc
sahf
popa
daa
or
scas
mov
jo,pn
std
popf
ficompl
aas
addr16
imul
pop
movl
daa
and
jae
fs
pushf
enter
ss
ret
je
stos
jg
cwtl
rorl
pop
js
movsb
into
sub
xor
mov
fwait
cltd
call
mov
cmc
xchg
gs
ds
mov
sub
test
repnz
jnp
adc
xchg
adc
inc
adc
in
sub
push
sahf
sti
add
pop
pop
or
mov
stos
mov
in
fucomi
std
dec
aas
sub
inc
xlat
pop
xor
or
test
rorb
cmp
cmc
dec
movsl
neg
cmpsl
xor
imul
dec
inc
jns
cmc
outsl
lea
outsb
sub
pop
rcll
pop
mov
cs
jo
jns
dec
sahf
in
sub
add
sbb
dec
shlb
inc
sbb
test
pop
mov
or
imul
stos
cmp
ret
popa
div
rol
jns
mov
stos
fwait
out
pop
popf
xchg
ljmp
iret
push
cld
loop
orb
popf
mov
out
gs
mov
ret
out
mov
and
pop
pushf
in
mov
test
push
mov
rcrl
sub
add
sbbb
push
mov
icebp
mov
mov
pop
cli
lcall
push
js
pop
movsl
and
cmc
pop
out
fidivrl
insl
xchg
out
addr16
cmpsb
push
or
cmp
cltd
mov
or
push
ret
stos
sahf
fcoml
ss
js
jns
ljmp
cmp
rcrl
rcll
test
dec
jg
or
pop
ljmp
in
out
sbb
cwtl
clc
fldcw
push
cli
push
jns
outsl
insl
imul
outsl
xchg
pusha
add
add
jg
sub
rcrl
push
popf
mov
jb
push
push
inc
jmp
mov
lret
aam
scas
mov
and
mov
mov
cmp
cmp
cltd
ficoms
sbb
xchg
jne
xchg
inc
cmp
mov
dec
icebp
cltd
cmp
cmp
lcall
inc
testb
push
mov
jno
das
jl
jle
loope
or
and
pop
test
mov
add
stos
sbb
xor
das
push
jo
int3
pop
fisubs
not
flds
mulb
mov
pop
or
clc
test
mov
rcrl
mov
aad
pop
pusha
dec
lret
ds
push
pop
icebp
mov
adcl
lcall
lea
jp
in
pop
add
xor
inc
sub
xor
push
inc
push
adc
jne
push
add
clc
mul
jmp
in
pop
loop
lods
push
xor
inc
movsl
pushl
jmp
pop
les
enter
fwait
aaa
jle
cs
lds
adc
lods
push
dec
sub
pop
cmpsb
ret
arpl
mov
loop
lcall
shrl
pushl
or
das
cmpsb
xchg
lods
pop
sub
dec
mov
sbb
gs
scas
popf
lock
cmp
ss
mov
int3
loopne
in
call
jne
aad
cmpsb
test
jp
sbb
inc
sub
ss
inc
mov
sbb
mov
or
xchg
rcr
cltd
mov
adc
movsb
pop
divb
mov
cli
leave
or
lss
pop
push
mov
inc
mov
and
addr16
adc
dec
adcb
pop
jle
call
xor
sub
repz
jg
xchg
fsubl
adc
sbb
add
inc
pop
jmp
jbe
sarl
fisubrs
mov
sbb
ja
lcall
xchg
psraw
test
sub
sahf
adc
cltd
es
xor
add
dec
jne
add
lret
pushf
fldenv
pop
pusha
push
mov
shl
sahf
pop
es
mov
pop
dec
ja
jo
clc
faddl
outsb
pop
adc
imul
sarb
mov
inc
mov
mov
out
test
xor
hlt
fstps
cmpsb
pop
cltd
add
push
hlt
lret
adc
addr16
mov
test
xchg
je
shlb
adc
or
pop
xchg
cmp
jbe
pop
jae
pop
jnp
mov
orl
ja,pn
push
js
lahf
push
imul
inc
scas
jo
inc
mov
daa
sbbl
fmull
xlat
leave
fnstcw
lret
shrb
inc
lods
je
pop
dec
pop
addr16
or
sbb
push
or
or
xlat
add
mov
clc
call
jmp
xchg
sarb
mov
xchg
add
push
iret
xchg
arpl
repz
mov
lods
adc
repnz
fisttpl
mov
outsb
add
sti
add
xor
test
enter
enter
xchg
inc
inc
and
jecxz
mov
sbb
mov
mov
xor
xchg
lea
xor
cmc
xor
adc
lea
inc
and
aas
loopne
add
iret
inc
out
mov
in
jmp
inc
lret
push
shrl
fldl
rcll
sub
sti
add
pop
mov
out
xchg
pop
xchg
mov
std
loop
jp
and
fstpt
lcall
imul
test
push
adcb
in
pop
clc
push
cli
lcall
adc
iret
jnp
into
call
mov
cmc
cli
or
jg
add
ror
lock
das
xor
jae
mov
cltd
pop
out
sahf
xchg
incb
int
pop
or
int3
stos
fmulp
stc
lahf
cmp
imul
xor
fisttps
xchg
push
cmp
mov
loop
lods
rolb
repz
sbb
test
mov
sbb
jns
lods
test
inc
fstl
test
dec
filds
mov
sarl
or
imul
cmp
notb
clc
repz
push
mov
aaa
mov
das
std
adc
outsb
mov
add
divb
aad
pop
xor
es
mov
ss
and
fwait
imul
push
xchg
int
sub
mov
lds
cwtl
leave
insb
push
in
and
sbbl
or
jecxz
cli
data16
stos
cmp
clc
sbb
rorw
lds
adc
push
pop
mov
arpl
push
inc
cs
callw
mov
arpl
and
sub
mov
test
mov
and
mov
adc
pushf
negb
push
add
mov
jno
sub
add
cs
test
jmp
lahf
pop
xchg
adc
and
jmp
and
popf
jp
cltd
into
lods
mov
cmpsb
xor
sbb
daa
dec
in
push
iret
push
lods
inc
inc
rcl
mov
out
fidivs
inc
cld
dec
enter
js
cwtl
mov
inc
add
cmp
pop
shlb
mov
in
adc
sub
dec
xor
loope
adc
sub
xorb
rcr
mov
stc
je
adc
xlat
inc
mov
pop
insl
aaa
test
xchg
imul
imul
dec
lcall
mov
ret
mov
rcrb
fwait
cld
cli
sub
pop
jns
mov
les
jb
js
insl
or
mov
cltd
subl
outsl
icebp
cld
call
stc
cltd
jne
mov
cmp
pop
test
in
iret
aaa
arpl
sahf
xchg
sbb
sbb
dec
cmpsl
xchg
insl
pop
pcmpgtd
div
cmpsl
stos
je
rorl
aas
in
sbb
or
pushf
mov
icebp
cmp
das
jl
jmp
pop
out
imul
jbe
mov
outsl
out
mov
cmpsb
or
pop
fsubrl
inc
jnp
shll
adc
test
xor
sub
cmpsb
test
bound
ret
or
jno
imul
scas
adc
rcl
jmp
sbb
mov
mov
es
mov
popf
dec
call
faddl
sub
das
inc
ds
sbb
jmp
xchg
dec
loope
scas
stos
inc
int
mov
mov
pushf
mov
leave
pop
leave
adc
mov
xchg
xchg
or
nop
or
fnstcw
xchg
pop
pop
push
cmp
stos
popf
jo
xor
imul
pop
repz
xchg
mov
addb
imul
test
testl
sbb
es
js
dec
movq
pop
mov
pop
xor
sub
hlt
rcl
gs
cld
add
inc
sbb
fldcw
xor
cmc
inc
and
rcrb
in
nop
or
icebp
mov
sahf
mov
movsl
out
hlt
pop
jbe
out
pop
jb
fimull
push
cmpsb
push
dec
cmp
loop
fsubrs
das
or
shr
ja
outsb
int3
pop
movsl
mov
ds
push
sub
lods
int
ret
cmc
clc
and
mov
imul
add
rcr
fidivrl
jmp
ret
adc
std
xor
pop
dec
popa
stos
aad
pushf
push
out
movsb
pop
mov
les
hlt
xlat
xor
adc
jb
iret
orl
mov
fildll
enter
push
bound
dec
push
cmpsl
xor
daa
cmp
dec
ja
rorl
inc
cltd
lods
pusha
fldt
fiadds
popf
sahf
in
xacquire
xorl
adc
out
xchg
push
cmp
shl
xchg
out
sub
push
xor
sahf
pusha
into
imul
stos
data16
sub
or
dec
mov
mov
and
push
loopne
jge
push
mov
jo
les
cmp
fstps
xor
test
nop
mov
mov
jg
outsb
adc
jmp
mov
sub
mov
sub
pop
mov
sbb
mov
cmp
leave
push
or
push
aam
cmpsb
xchg
sbb
int3
imul
push
aas
xchg
aam
mov
loope
adc
shrl
dec
jp
icebp
idivb
jge
jno
add
aad
cli
adc
in
sbb
or
lea
and
fdivl
leave
jecxz
test
shr
sbb
repz
and
xor
sti
jg
mov
xlat
pop
sub
shlb
mov
cs
arpl
mov
mov
test
stos
mov
ror
mov
out
ljmp
movsb
enter
push
out
stc
sub
ds
enter
ret
out
adc
lods
scas
cmp
add
inc
sbb
test
cmp
xor
mov
mov
jl
stos
jne
dec
cmp
pusha
cmp
jecxz
sub
dec
jmp
mov
imul
and
inc
add
pop
pop
and
jne
mov
lcall
jecxz
cli
cli
in
sub
inc
jmp
mov
outsb
js
cmp
aad
mov
cmp
or
popa
es
rorb
stos
pop
ret
neg
xor
sub
dec
shlb
pushl
mov
inc
mov
mov
incb
lds
xchg
mov
mov
or
dec
mov
inc
in
or
in
outsb
decl
pop
lock
jo
popf
mov
push
insl
dec
jno
pop
nop
cmp
sbb
and
rclb
movsl
hlt
nop
imul
or
mov
lcall
imul
lock
setbe
inc
fcompl
jge
push
jns
test
adc
dec
push
sahf
push
jmp
jge
int
mov
cmpsb
rcrl
dec
inc
daa
push
pop
or
daa
sti
xchg
mov
mov
lods
push
aas
sbb
push
scas
xor
das
mov
cwtl
inc
cmp
xchg
xchg
jl
outsb
icebp
push
mov
ret
xchg
sbb
aaa
push
in
adcb
dec
stc
popf
or
mov
in
test
arpl
lret
test
pop
repz
and
pop
sbb
fwait
mov
push
arpl
or
int3
pop
jl
repz
ret
outsl
mov
or
xor
mov
cltd
loop
xchg
dec
xor
lds
xor
pusha
push
or
and
push
jae
xchg
jmp
out
jmp
mov
add
push
maxps
loope
jge
orps
add
mov
xorl
inc
jecxz
les
in
imul
out
push
inc
stos
pop
sub
stos
fsubs
mov
pusha
rol
dec
cmp
int
out
orl
push
loope
jne
mov
repnz
jmp
or
cmpb
enter
movsl
push
ror
xor
pop
cmp
divb
sbb
sub
xor
mov
add
push
addl
or
pusha
shll
pop
shll
and
dec
or
call
adc
lds
inc
aas
shll
mov
sub
mov
push
sbb
data16
push
cmpsl
pusha
cmpsl
fsub
jae
mov
repz
mov
adc
add
enter
mov
dec
jo
and
jne
aam
inc
mov
pop
mov
pop
inc
sub
sti
lods
jle
clc
dec
fs
rclb
divl
mov
pop
mov
ja
das
bound
adc
divw
xor
mov
push
xor
lods
dec
iret
movsb
push
and
aaa
or
and
sbb
mov
xlat
adc
andb
es
cli
xchg
mov
push
push
out
nop
adc
jns
mov
lahf
xor
xor
cmp
ret
in
xchg
dec
dec
push
push
frstor
jae
xchg
sbb
mov
iret
xor
mov
clc
sub
jns
push
and
aaa
rcl
mov
add
icebp
xchg
in
mov
dec
ss
add
cli
dec
out
hlt
std
jle
add
je
or
pop
adc
pop
fbld
xchg
jae
push
mov
pop
les
sub
inc
dec
fdivrs
rclb
xchg
imul
sub
dec
sbb
cmpsb
repnz
inc
inc
jne
and
scas
cmpsl
push
pop
mov
lcall
sahf
add
enter
xchg
out
or
xlat
ja
movsl
add
jo
and
adc
jp
outsl
sub
pusha
inc
inc
aas
cltd
fsubl
les
mov
in
repz
sub
push
mov
dec
in
cmpsb
jo
aad
jo
movb
adc
fadds
lret
inc
mov
pop
or
dec
pushf
lea
loopne
pop
aad
cmpsb
dec
cmpsb
sbb
inc
pop
lret
insb
subb
les
ds
data16
pop
pop
loopne
jl
pop
aad
mov
test
ret
ljmp
xchg
xchg
loop
adc
arpl
test
mov
out
in
std
hlt
sahf
xchg
adcl
or
int3
sti
mov
mov
mov
test
push
vxorpd
sar
sti
xchg
pop
dec
pop
movsb
push
fisttpll
push
je
sub
adc
dec
mov
xor
fsubrs
adc
adc
enter
push
popa
mov
mov
cmp
es
push
icebp
and
mov
inc
shrl
mov
push
roll
loop
adc
inc
push
mov
imul
adc
mov
mov
ja
inc
jge,pt
xchg
lahf
cld
jle
mov
daa
pop
push
mov
data16
jo
jno
adc
mov
shll
rcll
mov
aam
mov
mov
lcall
inc
cwtl
inc
mov
cwtl
fs
cmp
add
add
daa
dec
mov
outsb
daa
xchg
lret
imul
in
shrb
call
stc
jns
fstpt
aaa
xchg
popl
loop
cmp
lods
ds
push
jmp
adc
sub
imul
xchg
js
mov
mov
dec
inc
push
icebp
fisubs
lret
sbb
xchg
aaa
xchg
mov
icebp
in
sub
mov
mov
pop
test
sub
mov
out
dec
lcall
sbb
pop
adc
iret
loope
lods
push
cld
subb
pop
pop
pop
js
jg
jne
xlat
gs
adc
jae
stos
xor
loopne
es
dec
enter
or
push
pop
out
sarl
lods
dec
push
test
ja
aam
and
jae
mov
xchg
in
mov
movsl
dec
loopne
xchg
mov
mov
fisubrl
int3
mov
setle
adc
sbb
pop
push
sub
mov
imull
in
sub
cli
incb
mov
sub
js
mov
rcl
lcall
and
xchg
popf
mov
jne
push
jns
cmpsl
shll
mov
sub
xor
push
lods
or
jbe
daa
jnp
inc
loope
sub
icebp
fldcw
sub
add
fnstcw
inc
jecxz
xlat
sbb
mov
mov
sarl
dec
lds
push
jno
cmpsl
repz
inc
enter
lret
shlb
lcall
add
loope
cmc
mov
ret
test
xchg
lret
add
xchg
xchg
sub
gs
add
clc
rcrb
push
out
sub
xchg
addb
enter
sbb
and
cltd
jbe
data16
pop
mov
xchg
ds
jecxz
mov
jnp,pn
pop
mov
and
push
nop
and
in
add
cs
and
push
mov
push
je
push
and
adc
push
push
dec
cmp
add
mov
adc
stc
sahf
les
dec
xchg
mov
add
cmp
scas
xchg
gs
inc
jle
mov
popf
sub
xchg
or
fimuls
les
add
mov
pop
cli
or
add
mov
push
stos
mov
mov
ss
inc
sbb
cmpsl
out
imul
push
inc
icebp
mov
arpl
or
mov
cli
hlt
jecxz
mov
js
call
xor
insb
fimuls
shlb
xor
sbb
xchg
sub
out
cmp
call
inc
lret
lretw
push
push
mov
mov
outsl
sbb
sahf
xor
push
xchg
sub
mov
push
mov
xchg
mov
out
or
sub
adc
inc
shrl
cs
clc
adc
sbb
test
cmpsb
imull
repz
mov
sahf
neg
lea
jmp
das
andb
push
sub
jle
xchg
or
loopne
call
xlat
jno
or
inc
and
je
inc
ret
nop
jo
add
insb
sti
out
shll
ret
out
mov
enter
jmp
cmp
repz
push
in
outsl
cltd
mov
xor
or
int3
repz
nop
push
adc
dec
loop
dec
dec
stc
mov
xchg
push
das
sahf
mov
mov
push
clc
repz
fisubl
push
cmc
mov
repz
jnp
mov
out
nop
and
ja
mov
mov
mov
lods
out
adc
cmpsl
mov
mov
or
and
fidivs
dec
mov
pushf
fsts
jo
call
add
push
mov
jmp
push
lea
ds
mulb
jmp
xor
push
lods
or
xor
mov
ficompl
or
loop
gs
rcl
fnstenv
addr16
les
dec
test
dec
inc
jl
mov
lock
scas
in
add
fmull
test
adc
std
js,pt
loopne
das
xlat
mov
dec
incl
lcall
mov
mov
test
and
sub
push
cld
inc
popa
enter
fists
xor
adc
pop
push
rolb
adc
lret
outsb
fs
insl
stos
dec
or
in
fistpll
lcall
jecxz
jbe
test
and
leave
in
or
push
out
jg
pop
test
clc
les
insl
pop
cmp
lret
arpl
xlat
test
adc
sarb
jbe
sub
pop
sbb
aad
dec
leave
mov
push
cmp
mov
dec
aas
mov
mov
mov
push
or
movsb
pop
cld
sahf
scas
cmp
xchg
push
adc
jae
pushf
adc
orb
sub
cmpsb
pop
sub
pop
ljmp
in
mov
mov
aaa
inc
imul
inc
add
sbb
cmp
sub
sub
inc
hlt
loop
sarb
or
sbb
jne
push
in
jle
ss
addr16
rorl
mov
dec
pushf
imul
xor
ret
adc
xor
push
pop
xor
push
nop
idiv
mov
ss
lret
mov
loope
push
stos
cmp
rorb
in
scas
imul
notb
xor
shll
inc
clc
shlb
stos
mov
fdivr
inc
pop
cs
pop
cmp
xchg
jb
push
and
mov
xor
das
xlat
lods
cld
clc
xlat
test
bound
aas
cmp
jl
mov
out
dec
lret
and
repz
ds
adc
fdivl
lret
adc
push
ret
push
push
and
lea
loopne
add
add
pushf
mov
out
in
inc
sub
xchg
and
dec
push
rolb
cmp
or
push
push
jmp
jmp
mov
mov
dec
xchg
addr16
dec
jecxz
sbb
jbe
mov
int
sub
adc
out
bound
add
repnz
jae
inc
pop
xchg
dec
inc
pop
imul
cld
xor
andl
dec
ffree
cmp
cld
fildll
and
les
sarl
cli
mov
cs
xor
jle
daa
jne
cmp
imul
jmp
icebp
addr16
pop
sub
popa
push
lcall
push
mov
jbe
sbb
pop
xor
lea
push
push
xlat
int
scas
push
jns
pop
not
mov
mov
xor
imull
cmp
pop
fists
sbb
test
dec
mov
or
rol
ret
inc
cmp
add
scas
sbb
push
mov
sbb
and
and
mov
and
add
test
sbb
movsb
mov
test
lcall
sub
imul
cwtl
loope
dec
sub
scas
stos
jge
xchg
adc
add
imul
add
xor
pusha
mov
jle
sub
jl
psrlq
sahf
pushf
and
or
scas
insl
mov
popf
push
in
imul
arpl
inc
cwtl
and
or
out
xchg
sbb
or
aad
out
scas
loop
test
xchg
sbb
ret
sub
mov
add
enter
rorl
dec
jmp
cmc
sbb
xlat
sahf
jg
inc
bound
loopne
jmp
inc
call
dec
es
fs
fs
stos
int3
cli
pop
xor
push
pusha
mov
and
in
jecxz
addl
sbb
jl
pop
add
adc
bound
inc
mov
js
lods
mov
movsl
add
mov
lea
mov
mov
dec
inc
lds
int3
std
jns
shlb
push
fcomp
fninit
cli
lock
sbb
jns,pn
cmp
jbe
push
bound
out
sub
pop
out
loopne
mov
jae
mov
insl
in
outsb
mov
cmp
pop
cs
out
xor
int
in
je
mov
mov
jmp
mov
xchg
dec
sti
test
subl
cs
mov
mov
mov
test
mov
lock
cld
in
xor
or
push
cmp
xor
pop
xchg
in
sti
and
clc
test
jg
mov
stos
fnstsw
or
cmpl
lahf
pop
loopne
fdivs
leave
lods
inc
pop
stc
cmp
aad
jbe
pushf
mov
ret
xchg
cltd
mov
stos
les
loop
loop
jns
lods
sub
test
jp
ficompl
pop
data16
icebp
jnp
mov
aam
inc
mov
sbb
bound
loopne
jecxz
repz
ds
pop
jo
jno
fisubrs
jge
and
adc
xor
and
mov
lret
sbb
cltd
sbbl
fwait
pop
mov
ret
mov
clc
push
jle
in
cmp
dec
out
dec
cmp
sbb
std
test
jbe
sbb
xchg
pop
out
imul
mov
clc
adc
mov
xor
test
mov
or
jmp
add
std
ret
jmp
aam
jne
push
sub
repnz
mov
dec
sub
setne
addr16
push
push
or
aam
and
int3
inc
pop
fists
sti
testb
jbe
mov
fs
cli
or
imulb
nop
inc
adc
or
cs
pop
lea
and
mov
add
test
outsl
mov
fisubrl
aam
mov
mov
idivl
addb
or
dec
popf
sub
dec
ja
mov
sbb
sub
pop
pushf
or
add
scas
call
cmp
mov
ds
push
out
or
and
cwtl
fidivs
xor
comiss
lock
sti
mov
dec
inc
hlt
stos
push
sahf
fcoms
push
jno
rcr
sarl
lret
loop
inc
sbb
jno
sub
xchg
cld
jo
jge
call
std
je
add
push
leave
enter
rcrl
mov
gs
and
iret
inc
loope
mov
hlt
sbb
test
mov
mov
cmpsb
cltd
cmc
xchg
jae
js
or
mov
outsb
mov
lcall
xchg
or
imul
sub
xchg
or
sub
or
and
xchg
cwtl
scas
test
adc
jl
call
adc
lods
jle
lea
xor
jg
jle
daa
pop
mov
mov
lret
imul
loopne
scas
or
xor
sbb
lods
jbe
cmpsl
jne
lea
or
loopne
jecxz
popf
mov
lds
jnp
cmp
arpl
cmp
and
sbb
call
adc
inc
pop
scas
xchg
cmpsl
call
xor
out
ds
jmp
cmp
cmc
jle
fwait
sub
pop
stc
jbe
mov
adc
mov
out
fmull
add
subl
adc
out
adc
mov
mov
push
hlt
mov
int3
cmpsl
sahf
jmp
push
dec
orl
ja
sub
mov
cmp
rorl
jmp
dec
push
xorb
push
js
in
add
push
std
inc
mov
jbe
mull
std
test
jb
ret
push
fsubs
sbb
sub
mov
ds
mov
icebp
mov
pop
ljmp
repnz
cmp
imulb
adc
arpl
das
es
out
cmp
enter
pop
and
sbb
in
aam
push
pop
inc
cmp
std
or
subl
xor
jmp
dec
mov
sbb
sub
dec
ljmp
mov
fsubr
inc
dec
or
jbe
push
leave
int
pop
js
mov
cmc
add
imul
xchg
int
popa
filds
inc
jmp
pusha
xchg
inc
push
stos
xor
std
popa
jecxz
lcall
push
hlt
cwtl
out
hlt
je
xor
lock
mov
jg
je
lcall
cmp
in
lahf
add
xor
test
inc
add
loop
adc
push
xchg
outsl
jmp
addr16
movntps
ljmp
jl
roll
insb
add
sbb
mov
pushf
pop
mov
mov
xchg
fst
xchg
xor
stos
xor
mov
scas
popf
add
pushf
fimull
adc
jb
mov
sub
xchg
pop
mov
and
or
in
ds
scas
clc
xor
cmp
shlb
pusha
add
mov
es
dec
sbb
frstor
popa
fmul
imul
push
jo
lret
outsb
insb
cmpb
push
mov
mov
test
insl
pop
loop
nop
shl
cmp
fiadds
add
test
adc
mov
loop
daa
mov
aam
ja
testl
jnp
mov
sub
dec
xchg
cmp
lods
jmp
or
sti
jg
mov
cmp
mov
sbb
data16
jnp
stc
gs
xor
cli
scas
add
test
and
jg
imul
jae
nop
inc
jp
hlt
rcrl
pusha
push
cmp
push
and
mov
sbb
and
aad
hlt
xor
cmpsb
dec
arpl
rcr
es
scas
lcall
and
popf
mov
pop
xor
leave
in
sub
loopne
push
shr
rcl
sbb
cmp
or
in
movsl
cmp
cmpsb
std
xchg
fdivrs
rcrl
rcrb
and
out
push
repnz
mov
not
les
mov
bound
data16
mov
jmp
mov
and
test
pushf
imul
and
push
or
pop
mov
fidivrs
dec
mov
or
aad
inc
imul
ss
pop
popf
adc
dec
jbe
je
ljmp
stos
sbb
or
ret
push
sti
cmpsb
adc
xor
add
outsl
nop
mov
out
loope
idivb
lds
out
jno
push
sbb
stc
cmpsl
shll
mov
jle
mov
lahf
iret
imul
push
and
mov
mov
dec
aaa
inc
mov
sbb
xchg
xor
sub
aad
mov
pushf
pop
push
cltd
aas
sub
push
inc
out
testl
add
mov
xchg
push
mov
arpl
out
repnz
das
and
lock
loopne
add
rorb
loop
cld
mov
in
mov
jns
jbe
mov
lock
jmp
dec
pop
hlt
loope
mov
leave
dec
lret
fiadds
push
or
fnstenv
cmp
int
mov
push
jae
mov
push
lahf
dec
mov
mov
rcll
sar
push
sbb
sbb
das
pop
inc
int
out
jne
mov
inc
mov
das
jo
lcall
imulb
outsl
int3
bound
pop
mov
mov
iret
lcall
shlb
cmp
lock
iret
cli
bound
loop
daa
fnsave
out
insb
xorl
arpl
push
js
xchg
cmp
dec
jge
fdivrs
cmp
outsl
addr16
inc
jp
inc
push
ljmp
shll
add
mov
repnz
out
adc
adc
les
mov
loop
js
push
mov
xchg
iret
cmp
cmp
scas
scas
mov
cmp
mov
inc
enter
mov
lcall
pushf
pop
mov
mov
xor
test
mov
add
aam
xor
mov
js
xchg
pop
or
cli
sub
out
dec
add
bound
loopne
sbb
popa
and
ljmp
mov
mov
xchg
mov
stos
pop
arpl
popa
jge
mov
addr16
sub
lret
adc
jne
mov
cmp
loope
mov
jecxz
or
popa
mov
js
notl
and
ds
cmp
das
cmp
or
in
jnp
xor
dec
dec
clc
mov
add
mov
int
pop
testl
scas
shr
jbe
inc
arpl
lahf
jno,pn
mov
jecxz
mov
lods
mov
clc
sub
leave
mov
sbb
pop
outsl
ss
gs
sbb
inc
clc
dec
arpl
inc
js
mov
inc
ja
inc
out
rclb
shrl
adc
andb
or
mov
xchg
cltd
sbb
into
cld
jecxz
xor
xor
repnz
lcall
mov
ror
jle
cli
xchg
pop
push
sub
les
fidivs
imul
nop
jmp
in
mov
cmp
add
sbb
in
stos
pop
or
cmc
add
or
pop
cmp
pop
jl
jg
mov
sbb
xchg
dec
lock
xchg
insl
clc
cmpsl
jns
lea
sbb
mov
inc
xorb
cmp
push
mov
ret
arpl
jnp
pop
fwait
mov
xor
fcomps
pop
push
or
adc
sbb
test
outsb
push
pop
mov
add
mov
out
clc
sbb
test
mov
stc
aas
mov
pop
pop
inc
xchg
imul
and
jg
out
test
mov
mov
adc
cmp
fdiv
ficomps
xchg
pushf
pushf
jns
pushf
jp
mov
inc
push
fsubrl
mov
test
jle
out
mov
pop
or
fs
js
repz
lock
dec
push
dec
adc
push
out
cli
jle
movsl
sub
ja
into
sub
and
or
adc
cwtl
cmp
push
cmp
cs
sbb
repz
test
jmp
sbb
arpl
or
and
inc
sti
enter
mov
lea
sbb
es
add
jecxz
int
popf
sbb
ja
into
sarb
push
xchg
fxch
movsl
ja
pusha
notb
shll
pop
rcll
fsubrl
fcompl
les
clc
in
daa
jg
inc
pushf
movsl
fwait
pop
add
fwait
and
add
xor
iret
lret
sub
push
test
movsl
inc
iret
lahf
cld
pop
pop
inc
mov
inc
push
sbb
test
pop
sarb
push
scas
mov
insl
pop
sbb
addr16
xor
jg
addr16
cmpsl
inc
cmp
cmp
xchg
inc
cmp
aaa
ret
inc
loop
fldenv
inc
mov
sbb
scas
sub
mulb
out
xchg
and
mov
push
adc
xchg
ja
jmp
cmpsb
adc
popf
popa
aas
push
mov
mov
sbb
scas
mov
push
scas
jne
dec
stc
xchg
mov
dec
out
clc
cmp
ja
push
lock
mov
jb
leave
or
sbb
aad
jae
loope
sub
cmc
push
push
sbb
inc
in
sbb
mov
in
mov
pusha
movsb
mov
adc
lret
pop
pusha
fs
mov
xchg
add
inc
push
icebp
mov
sbb
mov
dec
jno
lock
aam
push
xor
sbb
jle
mov
icebp
inc
xchg
cmp
xchg
fistpll
mov
daa
data16
mov
dec
inc
pop
adc
push
cltd
sbb
es
outsb
loopne
xchg
out
sub
adc
cmp
cmp
rolb
enter
out
rcl
xchg
mov
push
add
jg
xchg
push
lods
mov
jmp
lcall
mov
stos
es
jae
dec
sub
jg
mov
outsl
sub
push
cmp
cmp
pop
inc
inc
cmpsl
and
pop
adc
rcrl
push
outsb
jno
repz
cmp
in
and
inc
loopne
push
ret
xchg
hlt
push
pop
ss
dec
scas
dec
sti
sbb
mov
aaa
xor
repnz
mov
scas
in
xchg
xchg
test
andl
push
add
xor
and
nop
or
fcmovbe
mov
xchg
hlt
das
dec
mov
das
inc
pop
mov
aam
sbb
push
pop
sbb
out
dec
daa
movsl
mov
aam
adc
pop
push
jb
mov
mov
fldl
aas
inc
xchg
mov
cwtl
aaa
loop
jg
fnstsw
mov
rcrl
aad
out
push
push
test
xchg
out
cmc
repnz
mov
sbb
dec
fcoms
and
inc
imul
insl
fcompl
sub
sbb
push
popa
cmp
mov
mov
inc
pop
fs
fs
ja
pop
test
imul
jmp
adc
ja
jmp
in
cmc
mov
stos
mov
mov
inc
cmp
jmp
outsb
fdivs
imul
fdivl
or
popa
adc
fmuls
dec
test
mov
sahf
cmp
dec
icebp
mov
or
inc
orb
test
push
orb
pop
sbb
dec
loopne
pop
aaa
test
std
and
addr16
mov
and
mov
popf
sar
sub
add
in
cmp
push
or
ds
xchg
daa
mov
leave
aam
cmp
shll
repz
sbbb
sahf
adc
sbb
hlt
push
sub
mov
jl
ds
mov
fsubp
xchg
in
xor
cmp
mov
mov
adc
iret
push
xchg
dec
or
sahf
in
xchg
fcmovnb
outsl
int
mov
mov
aas
das
mov
mov
or
jge
sbb
test
fcompl
into
in
js
mov
loope
cmc
in
jo
inc
pop
jmp
xor
orl
call
mov
fcoms
mov
shll
jne
add
test
mov
xor
cli
push
fimuls
cmp
adc
mov
sbb
es
pop
sti
mov
inc
or
mov
and
add
cmpsb
jg
mov
mov
pop
lods
int3
pop
daa
enter
fistpl
dec
jecxz
xor
iret
or
xchg
out
xor
sub
xor
dec
push
push
jnp
dec
mov
push
out
shrb
mov
aad
push
pop
leave
ret
and
sbb
pop
and
js
leave
in
out
mov
fistps
dec
sbb
icebp
dec
inc
xchg
and
push
gs
rep
lds
mov
imull
push
loopne
repz
push
icebp
inc
xchg
xchg
push
jge
sub
sub
dec
fimull
out
rcrl
add
pop
fmull
cmp
jecxz
inc
aad
mov
add
inc
mov
cmp
pop
std
ret
rorb
repz
mov
cltd
enter
fbstp
xchg
mov
xchg
inc
icebp
popa
idivb
mov
push
add
cmp
inc
les
nop
daa
and
xor
pop
or
sbb
mov
jle
stos
sahf
or
out
and
mov
sahf
lret
mov
ljmp
mov
push
dec
fimuls
inc
insl
cmp
das
out
ret
sub
lock
push
fldcw
nop
and
fstp
pop
sbb
inc
sub
sub
shlb
xor
xor
xchg
aaa
add
mov
add
mov
ficoml
repnz
push
push
insl
ja
inc
push
hlt
scas
push
sub
loop
movsl
loop
nop
jg
pop
xor
push
cmp
int
pop
orb
ja
cmp
pop
mov
pop
aad
iret
push
push
mov
cmp
pusha
in
and
test
adc
xchg
rcll
mov
add
stc
mov
divl
sub
cwtl
xchg
xchg
adc
insb
inc
orb
aad
clc
in
push
ljmp
pushf
movsb
shrl
push
sbb
data16
iret
insl
mov
flds
fwait
test
add
mov
xchg
and
into
add
fwait
add
jb
xchg
sbb
adc
mov
dec
mov
xchg
scas
repnz
nop
dec
inc
adc
mov
cs
aas
xchg
push
sub
cmpsl
mov
pop
test
fmull
or
adc
push
out
dec
jae
sub
addr16
scas
mov
sbb
dec
sbb
mov
es
pop
out
jg
repz
xor
nop
jle
test
loopne
shr
xchg
jle
lahf
addr16
jp
mov
popf
mov
inc
rcr
xchg
push
xchg
test
mov
mov
sbb
and
or
add
jle
ffree
mov
or
dec
jnp
mov
pop
jg
scas
cmc
cs
shlb
repnz
cltd
adc
jno
pusha
lods
adc
mov
aas
mov
aam
imul
test
push
mov
cmp
lods
mov
push
jl
push
int3
hlt
clc
cwtl
push
mov
lds
mov
mov
loope
push
mov
xchg
adc
mov
fsubrp
mov
aaa
out
sub
push
std
in
js
mov
lods
rorl
jae
aam
jns
sub
cmp
sub
inc
xchg
jl
push
enter
sbb
dec
aam
pop
jl
jo
lds
iret
ret
mov
sub
dec
adc
xchg
mov
jmp
jle
stos
jo
sbb
in
mov
mov
jb
push
sub
pop
cmp
addr16
cltd
dec
sub
sub
jge
pop
cs
fiaddl
enter
push
mov
push
inc
mov
cld
negl
add
sub
adc
xchg
loopne
loope
push
cwtl
jno
cmpsl
das
cltd
mov
and
jmp
or
inc
xor
mov
xchg
cmc
into
cmpl
int3
xor
cli
pop
lret
pop
test
jp
adc
clc
cmp
jno
inc
pop
cmpsb
cmp
jl
fcmovnbe
adc
xchg
mov
mov
adcb
mov
rclb
orl
or
pushf
sti
es
dec
push
or
push
dec
push
xchg
test
xchg
xor
jge
pop
fidivrs
dec
push
in
cmp
loop
mov
add
bound
jae
sbb
sbb
xor
mov
fldl2t
and
pop
xor
mov
fwait
lds
fbld
inc
repnz
ljmp
or
movsb
push
cmc
cmpl
in
cltd
xor
and
movl
ret
subb
mov
adc
cmpsb
dec
jmp
xchg
dec
jle
jno
mov
xchg
mov
dec
inc
ja
xchg
popf
addr16
mov
sub
xchg
shl
and
mov
stos
jge
dec
sbb
push
dec
or
mov
test
sub
ds
dec
fwait
mov
or
and
cmp
popf
sub
mov
fisubl
mov
xor
imul
pop
repnz
or
xchg
pop
gs
sbb
ret
adc
repnz
scas
js
and
or
pop
and
jg
push
jmp
mov
aam
rcl
mov
pop
push
mov
cmc
das
push
jle
pop
aam
in
iret
in
addps
dec
push
stos
lcall
into
lcall
jnp
or
adc
daa
fwait
mov
dec
sub
out
mov
icebp
divb
jae
dec
ljmp
int3
adc
flds
mov
push
loope
push
pop
enter
pusha
push
rcrb
dec
push
xchg
test
inc
mov
sbb
mov
mov
inc
mov
repnz
movsl
ljmp
movsl
sub
push
pop
je
sbb
xor
cmpl
scas
fwait
jno
add
or
fstpt
push
cmp
test
shll
or
aaa
aas
push
rolb
int3
jno
clc
or
bound
inc
xor
jmp
mov
cmp
adc
mov
or
or
push
iret
cwtl
adc
out
dec
pop
add
inc
and
and
jo
repz
or
fisttps
jle
pop
push
dec
nop
int
jg
test
inc
xchg
mov
sub
cmp
jg
insb
adc
addr16
push
cmp
icebp
test
popa
ret
push
pop
inc
jno
xcrypt-ctr
cmpsl
pop
pop
pop
std
mov
jae
clc
inc
sub
xchg
aam
int
or
inc
int
rcll
inc
es
rep
pop
pop
fstps
ljmp
push
jnp
pop
mov
xchg
sub
aam
aam
ljmp
hlt
shlb
jbe
adc
push
sub
in
xchg
cmp
cmp
fildll
lret
loopne
sbb
sub
movsl
data16
vcvttsd2si
fcmovnbe
addl
shl
xor
jne
add
mov
add
or
imul
lods
push
cmp
inc
adc
xchg
mov
hlt
push
lret
xchg
bound
mov
orb
test
and
and
movsb
imul
dec
and
sbb
and
adc
pop
rolb
mov
cmp
hlt
jae
gs
jb
cmp
dec
mov
fsts
mov
mov
pop
mov
out
pop
test
jmp
xchg
das
bndldx
mov
or
sbb
ja
mov
push
out
or
push
js
inc
xchg
mov
and
repnz
inc
xchg
sub
or
add
push
roll
addr16
dec
sub
sahf
dec
or
outsb
mov
cmpsl
mov
push
and
call
fwait
add
in
sbb
js
dec
stos
movsb
mov
lret
cld
xchg
inc
push
out
mov
cmp
mov
cwtl
inc
sub
aad
mov
jns
push
sub
mov
adc
push
cmp
ljmp
mov
sub
out
lcall
aad
mov
or
push
out
inc
lock
cmp
cmp
loop
into
push
imul
fldcw
aam
ret
loop
cmc
test
pop
fidivrs
stos
xor
mov
add
leave
push
lahf
cmc
arpl
inc
xor
in
fld
xchg
jl
popa
outsb
stc
push
out
fcom
das
jecxz
sbb
or
mov
sub
shrl
fnstcw
movsl
xchg
in
mov
sbb
pop
arpl
leave
push
sbb
test
xchg
jbe
adc
adc
imul
fstps
mov
test
test
adc
pop
int3
pop
lock
lods
and
xor
mov
out
enter
fwait
sub
cmp
leave
push
mov
xchg
shr
in
ret
decb
mov
cmp
sub
sbb
icebp
int3
mov
mov
arpl
adc
sbbb
repz
mov
adc
imul
sub
popf
ret
cmpsb
mov
pop
push
pop
ret
jge
repz
xor
test
push
adc
into
pop
fcmove
sahf
push
xor
rorl
jae
cwtl
rcl
xor
jb
add
adcb
je
push
lods
sahf
mov
outsl
add
cwtl
dec
push
cmp
test
mov
hlt
pushf
ljmp
sbb
dec
push
add
lcall
sub
lret
cmpsb
push
sub
jge
test
sub
movsl
jbe
or
mov
iret
mov
rcll
push
dec
xor
xlat
jb
cmpsl
xor
sub
cmc
inc
gs
jnp
cmc
cmp
call
add
enter
cmpsl
mov
ret
out
pop
sub
addr16
push
cmp
add
dec
add
adc
push
jmp
mov
decb
test
push
push
out
push
lods
add
and
pop
pop
aas
jmp
mov
movsb
mov
mov
in
cmp
lcall
inc
mov
stos
popa
inc
inc
movsl
insl
push
cmpsb
js
jo
sbb
mov
mov
or
pop
jb
mov
aam
movsb
sbb
or
xchg
les
test
push
xor
imul
jmp
jne
mov
test
rcr
stos
xor
jecxz
jne
stc
inc
and
ss
xchg
movsl
test
ja
cmp
shrl
popf
cmp
cli
or
lahf
or
outsl
inc
lock
push
test
adc
inc
out
data16
dec
mov
sbb
sbb
insb
mov
fs
cmp
mov
loope
flds
mov
in
jl
fxch
fcmove
sub
mov
ss
push
mov
in
push
mov
sbb
push
imul
inc
xchg
mov
inc
or
pop
imul
jne
cwtl
vmovaps
pushf
sbb
mov
filds
lea
mov
loop
add
ret
das
out
push
inc
jg
mov
ljmp
xor
xchg
sbb
loope
lds
imul
or
push
ret
lcall
push
imul
repz
fistps
pop
test
push
lods
adc
call
fmul
inc
loop
test
mov
mov
dec
les
shlb
mov
jbe
ja
addr16
mov
mov
push
fisubrs
pop
mov
add
mov
push
mov
out
ret
popf
cld
xchg
mov
aas
insb
pop
adc
jle
pop
out
pop
inc
and
sub
mov
push
mov
sbb
cmp
rol
mov
pop
arpl
loope
jbe
jnp
jmp
fcomp
inc
xor
push
repz
das
push
test
mov
insl
insb
test
outsl
add
hlt
out
cmpsl
mov
pop
sbb
ljmp
jo
mov
push
icebp
dec
dec
ja
mov
xchg
dec
and
dec
test
nop
inc
lea
aaa
pop
cld
addl
dec
sub
loopne
lock
xchg
inc
aaa
mov
rol
shlb
sbb
ret
loop
push
and
jae
iret
xchg
ja
mov
push
lods
mov
call
adc
xor
aad
inc
dec
cs
aad
cmp
xor
jo
xchg
repnz
inc
out
lret
daa
and
xor
adc
and
push
mov
stos
mov
pop
loop
dec
shrl
and
test
mov
popl
int
out
xor
pop
mov
paddd
mov
sub
negl
icebp
data16
inc
xchg
pop
mov
mov
and
pop
and
cmpsb
icebp
cmp
xchg
inc
push
into
jge
arpl
push
outsb
cltd
adc
loope
test
or
pop
sbb
xchg
iret
clc
pop
cmc
insl
adc
imul
pop
aas
jg
imul
push
je
adcb
into
push
std
xlat
jmp
mov
jno
fwait
out
in
jmp
inc
cmp
push
dec
jecxz
aam
dec
inc
dec
add
mov
dec
mov
insb
cltd
int3
mov
gs
add
pop
ficoms
mov
out
xchg
xchg
cmpsb
mov
cmp
push
push
andb
xor
or
aam
loopne
xchg
rcrb
cmpsb
popa
shll
scas
cltd
push
push
xor
xor
sub
xchg
testb
push
mov
and
xchg
rorl
lahf
dec
cmp
lods
loopne
int
jns
cld
pop
pushf
and
dec
lea
loope
ret
int3
out
mov
out
inc
sti
sub
jb
mov
adc
jmp
cmpsl
movsl
stc
xor
shrb
cld
mov
out
sub
orl
mov
setbe
sbb
aad
popa
sbb
shll
add
lods
jnp
add
push
or
ljmp
add
js
inc
cltd
cmp
mov
push
hlt
dec
mov
outsb
je
dec
popa
into
lahf
ja
ja
lcall
int
cmp
xor
in
lods
inc
push
movsb
xor
push
into
dec
xchg
push
pop
pop
inc
lret
cs
scas
rorb
jbe
loope
mov
addl
lcall
cs
lods
dec
insl
jge
das
lret
int
sbb
cmp
mov
movl
into
sbb
hlt
inc
pop
in
jp
rcll
cld
clc
sbb
or
jmp
stc
xor
lea
push
popa
add
xchg
dec
out
lret
movq
xor
repz
vmovapd
insl
inc
negb
icebp
test
jp
sub
pushf
xlat
cmp
imul
data16
adc
adc
or
shrb
cmp
popf
lds
mov
mov
cmp
hlt
fidivl
add
outsl
xchg
and
popa
push
sahf
ret
cmc
sti
jmp
fwait
push
jo
jmp
sbb
inc
out
pop
and
mov
push
push
rolb
aaa
aas
sbb
jbe
push
int
push
iret
pop
inc
pop
cwtl
fcomps
push
test
daa
xlat
dec
js
push
loopne
push
dec
mov
mov
imul
fwait
xchg
push
dec
and
nop
sbb
scas
adc
adc
loop
xchg
adc
imul
ja
ret
push
cmp
dec
push
ljmp
addr16
stos
fwait
mov
push
movsb
mov
jl
movsl
jne
adc
lahf
lret
int3
cmc
nop
cltd
inc
cmp
dec
insl
clc
sbb
adc
lods
out
bound
int3
pop
ret
dec
movb
jo
jb
dec
pop
test
addr16
jle
xchg
adc
pop
shrl
adc
das
jl
nop
or
cmp
adcl
les
mov
cmp
mov
inc
xor
pop
xchg
mov
xor
xchg
cmpsl
xchg
mov
aaa
and
or
sub
arpl
clc
loopne
add
cmpsl
xchg
adc
push
stc
xor
fdivr
pushf
pop
rcll
sbb
rolb
dec
or
shl
imul
adc
sub
out
in
je
sbbb
xlat
scas
jbe
sub
push
out
inc
faddl
or
sub
fstpl
mov
sub
dec
fs
mov
bnd
adc
popf
das
pop
or
cmp
sub
jl
jb,pn
movsl
xor
imull
icebp
fsubr
sbb
sub
lret
xor
mov
ss
mov
jbe
xlat
inc
sub
or
jecxz
push
out
fidivrs
sahf
loopne
aam
fwait
imul
inc
adc
hlt
pushf
inc
cld
call
cmpsb
shll
rol
sbb
jle
xor
jg
add
fisubs
push
imul
xchg
mov
lds
push
pop
add
mov
cltd
les
dec
mov
inc
xchg
adc
int3
aaa
xor
sti
nop
inc
fstps
xor
pop
add
push
xchg
cmp
mov
shrl
fisubs
mov
xchg
adc
or
mov
insb
xor
xlat
and
inc
imul
sbb
xor
sub
inc
int
subb
sub
push
ja
sub
hlt
push
addr16
idiv
cli
mov
sub
out
test
adc
xor
sbb
repnz
adc
imul
jmp
bound
cltd
adc
mov
arpl
scas
cmp
loopne
cld
sar
ljmp
lret
xor
fcmovu
push
call
adc
inc
loopne,pt
rolb
inc
push
jns
mulps
jg
gs
ret
int3
cld
sbb
mov
fs
je
push
xchg
int
and
fwait
or
stc
ret
fcompl
dec
mov
mov
repnz
notl
stc
sub
test
mov
add
int3
scas
movsb
js
xor
stos
imull
xor
into
dec
sbb
inc
dec
lea
fucom
or
leave
sbb
call
dec
mov
add
rorl
popa
sahf
sahf
outsl
popf
xlat
popf
fwait
rcrl
jl
notl
and
sbb
jnp
insl
or
mov
icebp
fadds
arpl
insb
mov
in
xor
adc
mov
cmc
dec
fbstp
ficompl
fstpl
cmp
arpl
bound
sti
ljmp
mov
dec
iret
in
pop
add
sbb
sub
push
jecxz
ffreep
cmp
imul
negl
mov
pop
cmp
adc
ret
mov
or
test
pop
jmp
cmpsb
ss
and
ljmp
into
dec
dec
lret
sub
nop
inc
push
jo
mov
push
adc
mov
dec
enter
push
mov
test
clc
adc
mov
add
jnp
inc
adc
cmp
push
insl
in
or
add
pusha
mov
add
mov
out
mov
ss
adc
jbe
in
out
in
and
cmp
jecxz
and
pop
scas
les
mov
push
mov
sbb
adc
repnz
ja
rcr
sahf
repz
sbb
fmul
mov
xchg
or
cmp
cltd
mov
sub
xor
hlt
int3
aaa
pop
andb
cmp
pop
inc
mov
and
pop
enter
xchg
sub
ja
sbb
mov
mov
pop
repz
in
icebp
xor
mov
lods
cltd
js
add
insb
cltd
sub
inc
les
rol
aaa
lret
push
jle
bound
scas
fcmovbe
test
inc
ss
rorl
cld
cmc
inc
outsl
inc
jnp
addr16
orb
cld
xchg
and
dec
lahf
jge
pop
cwtl
cs
xchg
push
jl
mov
xorb
cli
mov
repnz
outsl
or
sub
or
sub
jne
mov
and
int
inc
fmull
loopne
sbb
or
imul
jo
dec
pop
sub
jecxz
mov
lea
ficomps
int
push
sbb
orl
aad
jne
jno
or
jmp
cld
mov
pop
cli
pusha
push
push
lds
data16
aam
scas
sarb
in
mov
jl
int3
scas
mov
pop
push
mov
loope
mov
cli
push
pop
push
test
aad
adc
mov
test
scas
aas
in
sub
rorl
lahf
mov
loop
stos
test
dec
adc
mov
cmp
loope
lret
and
sub
fcmovbe
lcall
push
mov
test
andb
cwtl
sub
test
sub
or
insb
stos
pop
adc
xchg
rcll
mov
mov
inc
sbb
xchg
or
pop
repz
dec
or
mov
or
cmp
sahf
mov
inc
mov
std
mov
adc
xchg
out
bound
xchg
or
je
pop
mov
scas
mov
inc
sarl
sbb
sbb
test
mov
jb
cmpl
xor
xchg
call
mov
jne
mov
cmp
fiadds
sub
shll
jl
and
filds
lods
pop
push
shr
xor
add
popf
or
mov
dec
mov
les
lods
outsb
xlat
xor
lock
mov
outsl
lock
addr16
ds
push
dec
lock
hlt
cmp
xchg
or
pop
mov
and
daa
xchg
and
mov
cmp
jmp
ss
inc
mov
aad
scas
or
sbb
dec
xor
aam
adc
dec
out
adc
ficomps
jns
out
adc
fsubrl
in
add
jl
or
mov
mov
imull
mov
push
push
std
push
fwait
cmpsl
lcall
cwtl
add
lock
mov
xor
push
cmovle
mov
sbb
sysenter
scas
adc
out
xor
pop
repz
cltd
out
mov
sbb
outsl
dec
adc
in
and
das
sub
xchg
movsb
adc
cmp
int
and
rol
xor
jne
sub
push
ss
mov
pop
jmp
push
je
in
inc
xor
mov
xchg
test
or
add
mov
insb
imul
push
mov
repnz
f2xm1
cli
aaa
push
sub
int
adc
push
mov
gs
mov
testl
leave
rcrb
leave
fildll
fdiv
lret
cli
xor
jbe
mov
xor
lds
xlat
xorb
fidivl
pop
pop
jb
rolb
push
push
call
arpl
or
sti
repz
mov
clc
in
stc
movb
mov
cmp
ja
pop
enter
lret
scas
mov
mov
sub
test
lock
lds
inc
adc
inc
int
pop
adcl
xlat
xchg
sbb
mov
dec
xor
in
cmp
insl
in
imull
and
divl
and
push
sub
add
mov
mov
xchg
mov
sahf
hlt
xchg
mov
cmp
clc
das
sub
or
out
pop
xchg
xchg
add
dec
das
xor
out
jbe
daa
ret
xchg
cli
sbb
mov
loopne
jnp
aad
xchg
dec
inc
adc
loope
rclb
fnsave
mov
adc
pop
xchg
fcomps
xlat
out
push
xchg
shll
add
pop
inc
add
stos
roll
shl
inc
push
ret
jge
je
adc
mov
sub
mov
jge
pop
sub
jnp
cltd
ss
das
jnp
testl
xchg
js
mov
bound
adc
mov
stos
sub
cmp
xchg
xchg
hlt
aaa
pushf
out
js
xor
mov
fucomi
push
adc
sbb
push
inc
sub
mov
inc
lahf
mov
ret
xor
mov
clc
aas
dec
cmp
lods
repz
jecxz
fsubl
dec
jp
xchg
or
ja
jge
outsl
push
clc
xchg
into
fwait
mov
repz
xchg
xor
mov
scas
cltd
fistl
pushf
mov
lcall
leave
push
lods
and
jnp
sub
jns
fdivrs
daa
aaa
rclb
mov
jb
and
cli
movsb
jne
dec
sti
fiaddl
add
daa
std
pop
xchg
daa
pop
les
pop
fnstenv
mov
loopne
mov
fldcw
arpl
mov
data16
mov
pop
hlt
sti
jne
out
rcll
or
mov
sbb
push
jecxz
popf
add
push
test
insl
xchg
scas
mov
pop
mov
mov
mov
xor
pushf
aad
test
aas
idivb
loop
cmpsl
pop
out
or
inc
push
lahf
test
out
arpl
fxam
push
scas
dec
add
arpl
pop
mov
lea
xor
xor
xchg
push
mov
std
push
gs
push
shrl
push
xchg
repnz
dec
cltd
add
inc
xchg
jmp
mov
imul
jne
lcall
ja
loope
popf
popa
and
fnstenv
rcrl
xchg
les
mov
lcall
fbstp
mov
loop
notb
enter
push
cmp
cmp
fsubrs
sbb
pop
cwtl
add
aaa
sahf
xchg
push
sub
mov
testb
sbb
xchg
push
dec
sub
inc
dec
call
push
je
mov
mov
sar
push
mov
stos
push
rcr
sbb
loop
ret
adc
jg
mov
aas
hlt
shrb
sti
jmp
xorl
mov
push
shrl
int
outsb
xchg
call
cmp
pop
jmp
sbb
incl
xor
cltd
mov
adc
sub
out
adc
hlt
and
movsb
loopne
pusha
data16
outsb
mov
mov
ss
sub
int
dec
lods
mov
insb
bound
push
hlt
adc
push
push
mov
cli
fwait
popf
lcall
inc
mov
or
dec
scas
scas
ja
test
push
mov
and
adc
sub
sahf
mov
jmp
out
push
fs
pop
into
ja
pop
ljmp
rcl
ja
movsl
iret
int3
mov
int3
rep
xor
enter
push
scas
lds
mov
movsb
pushf
cmp
mov
mov
movsl
dec
imull
nop
mov
mov
or
sbb
or
mov
cld
xchg
mov
mov
and
cmp
xchg
push
sub
pushf
cmpsl
and
xor
dec
inc
outsb
push
xchg
xchg
dec
mov
mov
addr16
jnp
sarl
xor
ret
cltd
imul
scas
xchg
inc
inc
push
or
dec
cmpsl
jae
add
std
xchg
shlb
sub
mov
js
pop
cmp
rcr
lods
lcall
pop
inc
test
cli
cmp
shlb
pop
mov
rol
aad
add
and
or
loope
aam
or
imul
ficompl
in
ds
loopne
sub
mov
pop
mov
in
pop
out
insl
movsl
out
push
sbb
sbb
hlt
scas
pop
insb
ja
fisttpl
jne
cmp
cld
inc
pop
mov
mov
pop
loope
xor
subl
cmp
pop
insb
je
jl
jae
insb
pop
hlt
pop
testb
popa
mov
nop
int
rcl
js
subb
mov
mov
inc
pop
mov
es
shrl
dec
orl
adc
jns
rcll
push
pop
les
arpl
inc
es
test
jl
or
lret
dec
rorl
imul
pop
push
adc
xlat
pop
xlat
inc
cwtl
int3
in
data16
enter
xchg
int3
dec
addr16
or
jb
ret
idiv
in
push
imul
pushw
xor
xorb
mov
loopne
sbb
add
push
sbb
daa
cmpsl
push
fsubrs
hlt
dec
aas
or
jo
mov
mov
aad
mov
ja
mov
mov
and
aas
int3
mov
aas
add
into
mov
pop
pop
push
dec
mov
test
jo
jnp
pop
sahf
adc
dec
aaa
xchg
mov
or
add
xchg
test
loop
xorl
jl
xlat
decl
imul
xorb
push
dec
lret
jge
lods
xchg
cmc
outsl
or
pop
icebp
push
xchg
std
call
outsb
mov
pop
popa
pop
inc
mov
mov
sub
fistpl
and
mov
les
jg
sub
mov
nop
add
sbb
xor
sbb
cmpsb
mov
icebp
mov
test
std
xchg
or
mov
mov
add
xor
cwtl
test
dec
outsl
arpl
daa
and
stos
push
imul
out
out
and
stos
jmp
aaa
jl
xchg
jp
add
jge
int
mov
mov
imul
xchg
sahf
mov
mov
pop
fnstenv
ret
lock
shlb
lea
in
xchg
xchg
mov
notl
mov
fadds
movsl
push
adc
sbb
push
dec
clc
call
shrl
inc
jne
push
and
aam
xlat
adc
ror
loopne
jns
mov
fnstenv
or
in
bound
or
clc
push
cmp
sbb
cmp
movsb
movsl
jno
lds
sbb
lock
bextr
sbb
cmpsl
or
pushf
fs
push
lahf
ret
cmp
add
aad
mov
cmp
test
movsb
testl
and
imul
insb
adc
jnp
int
adc
cmp
jmp
push
subb
int
lret
xorb
repnz
arpl
insb
repnz
addr16
ja
es
mov
cmp
cmpsl
repz
or
xchg
jge
mov
mov
sbb
leave
xchg
cmp
push
or
ss
scas
popa
dec
pop
add
pop
xchg
aaa
stos
in
cmp
push
lcall
popa
aaa
push
pop
mov
cmp
ljmp
and
clc
mov
sbbb
addr16
push
loopne
or
jl
repnz
movsl
loope
lock
lret
push
loopne
cmpsl
xchg
xchg
inc
sub
adc
pop
mov
arpl
cmp
mov
lods
xchg
rcrb
xor
test
outsl
pushf
mov
dec
pushf
mov
cmp
mov
faddp
aaa
fdiv
adc
js
ret
cs
add
or
jle
xor
or
mov
mov
das
rclb
and
add
leave
mov
pop
lret
jne
in
mov
dec
outsl
and
sub
jne
cmp
outsb
jle
push
in
xchg
fbstp
bound
sahf
rorb
or
aam
jmp
dec
jle
popa
cmpsb
lea
ljmp
arpl
cmp
clc
fadds
sbb
imul
inc
popa
dec
jecxz
add
lods
or
jle
pop
rcl
dec
sub
in
hlt
cld
ja
mov
fwait
std
les
shll
mov
jecxz
adcl
xchg
shll
scas
sub
stos
aaa
aaa
mov
orb
mov
cmpsl
jb
aaa
out
lods
inc
lahf
jp
sbb
nop
shll
addr16
into
call
jp
cli
cmp
mov
jmp
cmpsb
test
xchg
fucomp
add
add
mov
cmp
dec
js
fistpl
pop
and
arpl
sbb
rolb
ficoml
insl
push
faddl
push
cmp
hlt
jns
hlt
push
xchg
mov
rclb
jnp
mov
movsb
inc
mov
stc
sub
adc
xor
pop
movsl
add
pop
mul
sahf
push
das
cmpsb
call
iret
jecxz
arpl
mov
cs
and
repnz
jecxz
jae
xchg
imulb
sub
sti
ret
cltd
or
in
mov
xchg
scas
jne
push
mov
mov
lods
xchg
shrl
sub
mov
mov
lret
xlat
xlat
jo
push
pop
and
pop
mov
sub
push
imul
or
mov
xor
mov
aas
aad
sbb
flds
xorb
mov
mov
cmpsb
mov
inc
pushf
push
in
lock
mov
push
xchg
fcomps
adc
pop
dec
fwait
and
or
cwtl
rcrb
addr16
out
push
xor
cwtl
mov
ret
movsb
sbb
loope
rorl
pop
lods
out
sbb
pusha
mov
and
mov
aas
mov
data16
ljmp
sub
lods
pop
orb
sub
les
insb
mov
rcrl
ret
cmp
flds
divl
aad
leave
adc
jmp
mov
mov
cltd
or
fwait
add
iret
mov
in
inc
nop
into
push
ds
mov
pop
xor
jmp
or
cmp
jbe
lahf
sbb
mov
andb
out
icebp
rol
dec
mov
fxsave
mov
mov
test
add
add
arpl
pop
fwait
inc
imul
daa
repz
mov
mov
mov
arpl
mov
cmpl
mov
dec
pop
out
out
add
jo
inc
test
lcall
stos
pop
jnp
and
xchg
sti
jnp
xor
xchg
mov
lock
mov
inc
lcall
stos
test
inc
jns
fs
mov
mov
add
xor
add
sub
lahf
xor
mov
aam
es
cmp
push
and
cmpsl
jp
cs
inc
hlt
push
mov
add
das
mov
stos
das
push
jl
cwtl
and
inc
inc
mov
int3
test
rol
inc
outsl
sub
cmp
dec
idiv
push
xor
inc
mov
and
pop
cmp
stos
outsl
jno
cmpsl
dec
and
std
add
dec
cmp
loopne
inc
or
xchg
arpl
xchg
shl
ret
push
pop
rcr
icebp
test
mov
sahf
lahf
cmp
jae
aad
int
sti
cmp
jo
inc
pushf
outsb
cli
rclb
mov
mov
es
fists
xchg
leave
sub
push
pop
mov
iret
pop
push
mov
test
sub
push
xchg
sbb
shl
into
cmp
sbb
xchg
test
pop
xor
outsl
enter
jb
jne
or
jbe
cmc
xor
lret
cmp
xor
aam
or
in
dec
mov
adcl
dec
imul
or
cmc
ret
mov
mov
fimuls
jge
and
sub
mov
cmp
sub
adc
push
lock
pop
xchg
outsb
in
inc
repz
stos
jae
and
inc
push
bnd
and
push
adc
xchg
daa
arpl
pcmpgtw
stos
loopne
add
out
cwtl
mov
push
jnp
or
mov
stos
mov
mov
pop
mov
lret
cs
jbe
pop
pushf
mov
and
jg
cmpsb
sub
dec
xor
sub
stos
cld
js
push
aad
orb
push
mov
aad
push
sbb
add
mov
loope
insb
mov
std
es
sarb
vfrczsd
dec
icebp
sbb
xorl
dec
decb
insb
out
rcl
add
std
pop
gs
mov
cmc
aas
sub
outsb
les
in
call
cmp
movsl
insl
jle
ljmp
sbb
lret
test
push
dec
pop
adc
mov
int
xchg
sbb
lods
ret
shlb
ds
mov
cld
xchg
ret
pop
jno
mov
mov
and
leave
xchg
lahf
insl
fimuls
mov
pop
jle
sub
mov
or
xor
cmc
in
push
jb
rcrl
idivl
fcmovbe
mov
inc
dec
std
push
push
std
jl
inc
xor
push
sbb
inc
jge
cmp
jnp
fstpl
jge
inc
call
aaa
cmpsl
xor
or
dec
and
add
xchg
cmc
jns
cld
shl
xchg
adc
add
adc
add
cmp
icebp
mov
pop
mov
insb
lcall
ljmp
mov
adc
sub
mov
sub
sub
sub
jge
test
jp
or
cs
cmp
adc
in
dec
ds
mov
xchg
fcoms
add
sub
xor
pusha
sti
repnz
xlat
filds
das
mov
repnz
fdiv
dec
lea
sub
outsl
inc
rorl
adc
scas
ss
add
cmp
lea
lahf
pushf
inc
enter
cld
inc
repz
xor
dec
jge
lea
lea
fstps
and
in
popf
test
loop
push
or
sarb
jnp
aad
sar
std
loopne
sub
ljmp
mov
mov
insl
cmp
icebp
ja
pop
mov
jns
inc
cmc
fdiv
sbbb
rcr
sub
cmp
or
or
int3
mov
pop
aam
ss
dec
push
inc
and
pushf
xor
aam
sbb
jae
lcall
jbe
lea
pusha
int
mov
xor
test
push
std
leave
xchg
push
mov
ja
jno
mov
fstl
inc
es
in
in
test
jge
cmc
adc
ljmp
push
inc
pop
jns
jecxz
pop
cmpsl
cmp
shlb
test
mov
lcall
test
imul
mov
std
mov
pop
and
adc
lock
arpl
sub
int3
add
testl
shrl
pop
or
jmp
out
pusha
xor
cmp
jno
mov
out
cld
mov
loope
sub
pop
or
sub
cltd
lea
fchs
push
in
imul
movsb
xchg
scas
sbb
es
adc
fisttpll
lret
jp
call
jne,pn
and
mov
data16
insb
dec
int
loop
scas
adc
js
ret
outsb
xchg
imul
or
jne
scas
shlb
pop
push
jp
add
mov
call
push
add
insb
je
enter
inc
mov
stc
call
test
and
mov
cmp
cmp
std
mov
shrl
mov
cmp
push
mov
jge
sbb
lods
cmc
lret
lds
out
xor
inc
jecxz
pop
lods
shrb
pusha
cwtl
xorl
inc
mov
call
movsb
mov
push
nop
jne
sub
mov
and
push
ss
imul
cmp
add
mov
add
mov
add
pusha
and
inc
scas
xor
jnp
sbb
jge
xchg
pop
mov
xchg
adc
leave
pop
int
xor
rcrl
xchg
jbe
lods
jno
pop
jb
inc
add
push
hlt
sub
xor
testb
sbb
adc
lret
test
xor
cs
ja
btr
flds
ss
out
fistpl
jp
fidivrl
dec
out
fisubrl
cltd
aas
adc
out
repnz
jl
sbb
mov
test
les
test
cmp
mov
outsl
lret
ret
stos
jbe
sbb
shrb
cli
sub
push
mov
inc
jp
sti
cmpl
xchg
jle
gs
sti
mov
mov
fnsave
daa
lahf
sbb
icebp
cmp
mov
sub
xchg
jge
arpl
in
rcrb
or
test
ret
rcll
stc
lret
pop
sub
jecxz
mov
and
rcrb
mov
cmp
jb
repnz
fsubrl
xchg
lods
inc
stc
push
insb
ret
out
clc
nop
or
mov
cmp
rorl
adc
xor
bound
jns
inc
adc
push
das
push
jae
xor
lods
rcrl
or
cwtl
xor
jecxz
cmp
mov
push
inc
das
and
adc
mov
icebp
punpcklwd
insb
mov
sub
movsb
sbb
mov
lods
or
mov
sarl
daa
fimull
sbb
xor
xchg
xchg
sbb
cmc
mov
cmpsb
stos
imul
int3
lret
jb
aas
add
push
jmp
imul
dec
add
mov
decb
rolb
ret
rcrb
pop
xor
sub
sub
push
inc
sbb
or
out
arpl
ret
jnp
imul
call
cs
pop
mov
lods
imul
cs
fisubs
imul
int
insl
mov
dec
je
xor
stos
pop
push
jb
mov
sbb
and
fsubs
push
lods
sbb
clc
sub
shrl
pop
add
mov
mov
adc
je
int
xlat
or
cmp
xor
rcr
ljmp
dec
mov
or
xchg
in
jecxz
movsl
adc
scas
cmp
cmpsl
es
lea
outsl
into
mov
dec
gs
ja
cmc
in
mov
add
or
push
mov
sbb
push
repnz
icebp
int3
shll
stos
sbb
adc
fstps
pop
in
movb
jg
arpl
int3
in
and
mov
xor
je
packssdw
sbb
lahf
pusha
mov
mov
clc
fsubr
sub
lea
test
inc
cmp
enter
rorl
mov
mov
call
xchg
lock
mov
in
inc
pop
inc
loop
xchg
mov
xlat
popf
iret
pop
je
xchg
cld
mov
pop
push
lock
fisubs
out
add
jmp
fidivl
xor
pop
leave
push
push
jecxz
fs
push
mov
lahf
sub
aam
push
push
mov
hlt
sbb
xor
shrw
jmp
daa
push
mov
xlat
dec
push
jae
loopne
adc
sbb
adc
adc
loop
lea
lods
scas
mov
lock
jecxz
push
lcall
loop
mov
pop
mov
fstpl
mov
cmpsl
in
ret
movsb
fneni(8087
mov
push
and
arpl
aas
nop
sti
cmc
mov
xchg
xor
mov
xor
cmp
push
add
repz
daa
nop
test
jg
jecxz
in
sub
sbb
test
push
pop
add
rolb
xor
mov
stc
and
aad
inc
inc
sti
xchg
mov
repnz
call
pop
aas
pop
scas
jg
nop
and
push
add
fdivrs
popa
movsl
push
jne
negb
lahf
pop
adc
int3
lret
dec
mov
sub
loop
les
and
out
adc
lods
xlat
xor
nop
mov
pop
or
std
insl
aam
inc
addb
add
pop
pop
out
jbe
ror
lds
push
add
bound
pop
movsl
jp
xor
mov
out
push
nop
mov
cli
in
cmp
icebp
out
mov
sti
mov
stc
jmp
ret
aad
jno
adc
ja
stc
jno
je
insb
fs
jns
mov
sbb
movsb
roll
gs
mov
dec
sub
lahf
dec
sahf
cmp
adc
inc
int
fucomi
dec
stos
jecxz
bound
cmpsb
nop
xchg
push
sbb
xchg
shl
stc
xor
xchg
cmc
dec
xchg
inc
fildll
sahf
jo
mov
xor
pop
ret
in
sub
mov
loopne
and
or
out
xor
add
lret
cmp
pop
out
cmp
adc
call
dec
dec
or
mov
mov
or
in
push
cmp
sub
jge
in
push
fbld
std
push
das
dec
and
cmp
ror
xchg
cmp
dec
jl
frstor
pop
and
outsb
outsb
jmp
lds
rcl
nop
cmp
mov
std
adc
dec
pop
fadds
mov
sub
shlb
fisubrl
orl
enter
xchg
inc
iret
xchg
adc
mov
rorb
and
xlat
outsl
fistps
add
mov
cmp
push
mov
xchg
cli
or
mulb
add
pushf
xor
ret
sbb
and
cmp
sahf
xchg
popf
pop
loope
cmc
xchg
sbb
mov
cs
pop
ja
sbb
in
insl
dec
mov
aaa
ljmp
jno
ret
pop
into
mov
fiaddl
ds
mov
or
cmc
mov
push
ret
std
mov
mov
lock
push
xor
inc
loopne
fsubrl
rorl
sbb
sbb
test
sbb
add
mov
jb
xorb
out
cmpsl
out
jnp
mov
fldl
xor
jl
mov
push
fldt
out
imul
xor
xchg
mov
mov
pop
xlat
lods
xor
and
sub
xchg
lahf
movsb
repnz
mov
stos
mov
mov
inc
clc
lds
cmp
mov
push
fdivrs
in
ds
fninit
xor
scas
sbb
test
popf
je
mov
xchg
es
push
inc
mov
inc
mov
idivl
dec
scas
cmp
sarl
mov
lods
xchg
adc
sub
nop
ja
test
jnp
jne
shll
ss
fdivp
cmp
daa
mov
aas
jo
adc
adc
mov
les
ffree
notb
jge
cmp
pop
or
call
in
in
jno
insb
inc
or
outsl
push
pop
pushf
pop
shll
arpl
fcom
sahf
lret
pop
dec
fcoml
push
sbb
aaa
mov
inc
popf
inc
mov
cs
dec
lret
sahf
mov
pop
pushl
std
in
add
pop
test
jp
cmpsb
ljmp
lods
sbb
stc
adc
dec
in
into
jg
repnz
xorb
cmp
fstl
xchg
mov
dec
mov
add
shlb
jae
pop
aaa
insl
lahf
test
inc
jae
and
mov
mov
dec
sti
push
jmp
bound
sub
sbb
lods
xchg
cmp
cmp
sbb
jne
fcomp
xor
popa
jge
les
fnstcw
xor
aas
popa
outsl
nop
and
sbbl
sarb
int3
loope
fistpll
in
pop
xchg
pop
pop
mov
xchg
jge
push
shlb
mov
jg
mov
cld
dec
je
jae
sti
add
inc
fistpl
mov
pop
xor
lea
push
xchg
insl
js
push
jecxz
mov
pop
adc
dec
fdivl
jle
adc
dec
in
test
out
dec
pop
out
fists
out
xor
mov
gs
cld
aam
into
mov
test
xor
add
sub
lcall
pmullw
inc
mov
or
inc
fucomi
and
lcall
push
adc
sub
jle
mov
cmc
sti
xchg
jb
jmp
cmp
stos
mov
idivb
mov
mov
xor
or
mov
pop
inc
rcrb
incl
jmp
jle
push
lock
aam
inc
mov
push
and
inc
adc
loopne
push
ja
insl
xchg
fwait
mov
call
sbb
pop
sub
push
out
push
ljmp
test
pop
in
sub
push
pop
repnz
lcall
push
xor
insl
and
xor
push
insb
mov
mov
les
push
push
mov
fldt
cltd
es
cs
pop
insb
adc
test
or
loopne
loop
pop
mov
shl
std
mov
or
ret
cmpsl
pop
cmp
lahf
ss
add
cld
jo
dec
push
mov
pop
repz
imul
movsb
nop
push
cmp
aas
imul
mov
mov
lods
imul
xchg
cltd
pop
dec
dec
stos
mov
rcrl
shlb
jle
cmp
sub
jb
cmp
insl
into
pop
push
es
or
lock
movsb
dec
rcrl
jns
lret
aam
sbb
mov
mov
mul
out
mov
popa
push
lret
ja
xor
mov
mov
mov
call
sbb
or
pop
stc
stos
lahf
and
lock
shrb
les
rcrb
and
or
xor
push
or
in
jno
mov
scas
add
shlb
pop
mov
push
fstpl
stos
sub
dec
fld
mov
or
push
testb
mov
leave
cmc
xor
ss
adc
sbb
clc
call
pop
rolb
jmp
or
sarl
out
in
insl
repz
xor
call
jp
mov
push
dec
movsl
cmpsl
xchg
sbb
lds
bound
jne
dec
push
pop
adcl
pop
cmp
adc
test
pop
mov
nop
adc
inc
mov
jmp
cmc
pop
or
sbb
mov
cmp
mov
mov
xchg
mov
mov
cmpsw
mov
inc
nop
aam
xlat
push
dec
test
adc
pusha
add
incb
outsb
fidivl
loop
push
ret
dec
sbb
ja
outsb
in
enter
repz
js
dec
testb
xchg
hlt
jmp
add
xchg
push
divl
fidivrl
push
lds
xor
int3
dec
pop
sub
xor
jns
cmp
adc
ret
mov
and
lods
iret
adc
fnsave
lcall
cmp
and
mov
je
jns
add
mov
adc
push
xchg
sti
dec
lret
jnp
movsb
mov
mov
mov
data16
cli
mov
ja
xlat
lcall
and
vmwrite
insb
adc
insb
cmc
cmp
fdivp
ror
addl
cltd
push
inc
shlb
pop
adc
jge
push
pop
sbb
repnz
std
aad
test
add
fistpl
shll
adc
xor
out
ret
shll
pushf
push
daa
xor
mov
stos
mov
daa
cli
cli
loopne
xchg
adc
and
and
rolb
push
dec
mov
pop
inc
test
lret
dec
pop
sbb
sbb
and
or
nop
push
test
xchg
sti
push
mov
and
dec
push
popf
repnz
cmp
sbb
cmp
lahf
in
jne
bndldx
dec
push
lcall
and
pop
nop
int
daa
call
adc
je
jl
inc
or
insb
mov
das
mov
mov
jae
enter
sbb
mov
pop
loope
xchg
jns
adcb
negl
in
xchg
dec
adc
pop
mov
test
leave
sub
loopne
fists
or
rorl
and
mov
negl
int
mov
lock
dec
jl
cmpsl
jno
push
lock
fwait
shrl
inc
rorl
jmp
fsubrs
sbb
xchg
sahf
mov
push
ret
xchg
mov
test
jo
mov
pop
adc
push
push
push
leave
mov
mov
xor
cli
pmullw
dec
and
jp
mov
xor
mov
inc
push
fiaddl
sbb
or
cmpsl
cmp
jecxz
div
add
push
adc
out
incl
and
sbb
adc
push
xor
adc
test
int
mov
inc
shrb
sarl
imul
hlt
out
daa
adc
sahf
jns
dec
mov
gs
std
pop
out
orb
jns
push
cwtl
mov
dec
test
into
fisubrs
adc
lret
fdivl
je
xor
loopne
pop
push
adc
lds
mov
stos
push
push
scas
mov
es
xchg
adc
enter
jg
xchg
xchg
xor
cmpsb
stc
in
pop
xlat
or
dec
notb
mov
cmp
fsub
dec
cli
pop
dec
in
jae
mov
mov
lds
mov
dec
cwtl
outsl
push
std
dec
or
cmpsb
and
or
dec
push
sti
xchg
jno
lret
mov
cmp
das
or
dec
xchg
pop
out
mov
or
fcoml
lcall
mov
sarl
addr16
clc
pop
mov
or
pop
fsubp
dec
add
xlat
sti
shr
mov
gs
mov
fmuls
mov
sub
jecxz
int3
fbstp
lcall
shll
jge
xchg
incb
cli
cmp
fwait
bound
rcll
inc
enter
push
les
push
add
dec
ret
xlat
andb
or
mov
inc
daa
aam
xor
es
sbb
rcrl
mov
sub
sarl
cmp
mov
mov
fbstp
iret
mov
out
mov
clc
pop
hlt
mov
jo
test
jnp
xor
fxch
bound
cltd
loop
add
adc
jmp
subl
clc
and
sub
fcom
jg
sub
in
movsl
xchg
mov
in
mov
sbb
or
push
sub
leave
jbe
or
jle
mov
or
mov
pop
aas
xor
mov
lods
mov
xchg
out
mov
pop
jmp
out
in
mov
sbb
popa
out
popf
lea
test
in
push
outsl
push
mov
jle
mov
and
mov
sub
cs
cmpsl
and
dec
int3
cld
in
push
aad
and
add
ret
fcoml
lcall
ret
add
push
lods
ljmp
sub
jge
lea
mov
std
mov
mov
icebp
add
jmp
cmp
xor
cltd
psadbw
shr
into
sbb
fsubl
in
mov
test
clc
xchg
shlb
je
imul
and
lcall
lret
aad
pop
sub
aam
out
pop
push
loope
xor
dec
dec
decb
shll
push
mov
lret
or
rolb
cwtl
mov
xchg
add
mov
mov
jp
xchg
iret
xchg
push
cltd
cmp
mov
lret
ja
sti
jnp
pop
jg
sub
out
jae
or
jl
cmp
lret
add
push
jecxz
pop
add
push
push
inc
cmpsb
int
push
pop
or
inc
jle
repz
mov
sub
cmp
divb
aaa
or
loopne
lock
outsl
loope
mov
jg
mov
xchg
ret
cltd
and
mov
mov
flds
add
jns
lahf
or
inc
and
es
es
cmp
cmp
mov
mov
mov
sbb
sub
dec
dec
push
ljmp
lock
hlt
in
adc
leave
mov
or
inc
push
mov
adc
insl
int
in
mov
ret
out
int
jo
into
fiadds
jns
cmc
mov
pop
movsb
sbb
out
fidivs
sbb
dec
sub
xor
testb
sub
cmp
cs
mov
mov
pop
out
push
aad
jb
mov
lods
adc
xchg
cwtl
inc
and
mov
mov
aas
mov
insl
aam
stos
outsl
popf
sbb
add
push
cmc
xor
xchg
rorb
popf
ffreep
pop
push
push
sbb
shl
cmp
push
not
in
mov
test
repz
pop
sbbl
movsl
les
popf
aaa
dec
sbb
cltd
pop
pop
out
sarl
sbb
xchg
mov
sbb
ja
adc
inc
fstpt
xor
xor
sub
andb
jmp
mov
repz
clc
jle
jmp
or
xor
fdivl
mov
cmp
test
inc
clc
lret
mov
xchg
dec
outsl
movl
scas
sub
mov
pop
push
cmp
insl
cs
test
mov
xchg
dec
and
cli
lea
push
mov
fisttpl
mov
scas
nop
fnsave
add
call
push
pop
in
cwtl
jnp,pt
adc
int
cmp
mov
ret
xchg
sub
dec
fidivs
fnstsw
shll
fisttps
into
push
push
repnz
add
jne
jl
in
flds
movsl
decl
idiv
cmp
in
cwtl
mov
dec
push
or
fsts
nop
push
lcall
cmp
repz
or
divl
pusha
jnp
xor
jp
mov
jb
jae
ds
pop
loop
test
cltd
push
or
sub
rclb
into
aam
test
xchg
add
sub
cmc
sahf
mov
adc
idiv
cmpsb
cmpl
mov
sub
mov
pop
inc
add
mov
xchg
pop
and
out
cld
ret
push
test
mov
fstpl
mov
pushf
mov
mov
mov
dec
dec
in
and
push
inc
cmc
and
push
orb
sahf
scas
xchg
sub
xchg
jl
pop
and
testb
cmp
nop
jno
or
cli
in
jg
fimuls
mov
repnz
push
mov
and
das
push
xchg
adc
nop
sbb
pop
sub
ret
mov
stos
adc
mov
loop
lods
or
jmp
shlb
mov
out
mov
aas
jmp
jge
hlt
mov
fcoms
out
inc
add
and
add
outsl
or
mov
cmp
cmc
sahf
iret
ja
in
sub
clc
arpl
mov
mov
push
je
cwtl
xchg
in
mov
test
cltd
push
sbb
repz
nop
lret
out
fcoml
stos
test
jo
and
pop
mov
xchg
push
push
pop
xor
adc
add
dec
aas
mov
pop
mov
ret
adc
fcomip
loope
shll
pop
outsb
xor
pop
in
popf
sub
or
testb
cltd
out
pop
shrl
dec
jbe
int
out
rcr
mov
xchg
insl
pop
inc
lret
dec
ret
insl
pushf
cmpsb
mov
xor
xlat
aas
or
xchg
test
push
pop
and
mov
popf
mov
fisubs
insl
add
hlt
inc
inc
jb
stc
mov
inc
xchg
ret
push
fcompl
call
sub
push
sarl
daa
ds
hlt
push
push
ja
adc
icebp
adc
cvtps2pi
pop
gs
pusha
mov
nop
lock
xchg
mov
popf
cmpsl
fwait
jns
lods
and
mov
mov
mov
jne
gs
cwtl
cmpb
fbstp
and
cmp
cmp
sahf
out
bound
xchg
cld
mov
loope
lahf
cltd
inc
or
pop
in
cmpsb
loope
mov
adc
aam
inc
xor
fldcw
lods
mov
adc
or
and
in
adc
sbb
loop
das
add
lods
dec
cs
or
iret
adc
mov
mov
daa
cli
and
xor
sub
lods
push
mov
pop
adc
xchg
inc
adc
xchg
das
or
inc
jl
ljmp
cmp
jge
fwait
pop
mov
push
movsl
aad
pop
jg
dec
mov
cs
xchg
addr16
cmp
jl
jae
or
push
add
add
test
repnz
mov
dec
mov
jae
scas
lret
mov
push
inc
or
jb
sbb
adcl
sahf
rorl
in
imul
dec
std
mov
cld
lahf
add
stos
push
fwait
cmp
adc
sub
jns
mov
ljmp
mov
bound
stos
dec
sub
dec
push
aad
mul
out
mov
stos
cmpsb
sti
in
es
sbb
adc
mov
out
sbb
mov
addr16
pop
addr16
or
jbe
mov
pop
inc
xchg
js
aas
cmp
xchg
ret
imul
movsb
and
iret
mov
enter
inc
add
mov
mov
xor
pop
arpl
aam
jo
repz
mov
into
add
ja
dec
scas
jno
jnp
xchg
ds
dec
loope
push
fs
pop
dec
lds
mov
call
adc
mov
add
out
dec
ljmp
int
jo
test
push
scas
dec
fidivrl
rorb
lret
imul
pop
sahf
xchg
fisttpl
mov
imul
push
clc
shll
into
je
xor
mov
dec
inc
jne
xchg
dec
pop
mov
xlat
xchg
imul
sti
jg
popa
int3
and
aaa
cmp
xchg
ds
mov
mov
cltd
pop
pop
or
lahf
xor
mov
int3
inc
jb
fcmovnu
insl
fistpl
ret
or
inc
or
xchg
lods
in
jge
mov
mov
pushf
lcall
inc
popl
int3
pop
sbb
clc
and
inc
xchg
mov
ds
mov
push
fsubp
sbb
or
push
xor
arpl
add
or
add
outsb
pop
push
outsl
xchg
pop
shlb
or
js
into
xor
out
insb
xor
mov
jbe
inc
leave
stos
das
stc
shll
sub
popa
sbb
int
adc
hlt
outsl
jmp
push
sti
inc
and
pop
in
inc
pusha
pop
adc
jle
loop
rclb
jmp
sbb
arpl
push
pop
xor
test
out
addb
out
inc
xor
sbbl
lret
mov
dec
xchg
outsl
mov
lock
das
pop
cmp
cmp
cmp
lods
cs
mov
xor
fs
leave
dec
xchg
sub
jno
loope
mov
add
bound
xchg
ja
push
pop
in
aaa
or
mov
push
mov
je
lds
cmpsl
int3
aad
aaa
ret
test
popf
bound
or
les
pop
sub
push
dec
xchg
sub
pop
and
jbe
jp
mov
adc
adc
sbb
scas
xchg
and
jl
imull
pop
push
sbb
inc
aaa
rolb
cmp
cltd
arpl
mov
cmpsb
sbb
cmp
dec
and
xchg
sti
pop
cmp
push
sti
dec
push
push
dec
std
aas
pop
adc
movb
adc
jb
test
jae
fisttps
push
sbb
mov
mov
mov
divb
jns
out
mov
adcl
int3
in
arpl
shrl
pop
sub
xor
push
icebp
sbb
add
inc
pop
jmp
sbb
sub
pop
js
dec
in
cmp
cmpb
push
imul
dec
adc
mov
lret
iret
dec
aaa
ret
stc
inc
lret
jmp
xor
jecxz
mov
ljmp
ss
roll
lret
mov
das
adc
xchg
ret
jp
mov
mov
rol
mov
mov
xor
push
push
test
xlat
loope
inc
les
add
roll
inc
lods
arpl
jbe
cmpsl
aam
call
mov
sbb
sar
hlt
push
push
insl
mov
fstl
scas
push
scas
xchg
cmp
movhps
dec
arpl
call
xlat
and
jl
pop
cwtd
cli
test
push
mov
or
lods
hlt
add
jnp
out
lea
repz
or
pusha
andl
mov
inc
psubsb
stc
push
adc
js
add
orl
sbb
outsl
nop
sbb
jno
into
ds
insl
mov
divb
lahf
cmc
mov
repz
jg
mov
std
push
es
mov
sub
add
in
outsl
cmp
test
pop
mov
inc
inc
cmp
xchg
fstpt
pop
pop
lea
jno
insb
ret
shr
add
jne
jge
and
je
out
movsl
pushf
adc
daa
mov
testb
push
jb
xor
sbb
push
out
test
add
mov
insl
push
mov
push
and
es
out
loopne
pop
aam
push
pop
jns
js
jle
out
jae
xchg
popf
lock
lock
push
outsl
push
add
push
push
es
enter
adc
ret
and
dec
sub
sub
inc
mov
call
jl
xchg
rclb
decb
repz
orps
lods
subb
sbb
out
ja
xchg
into
fs
shll
pop
jg
je
pushf
or
cmp
cli
push
in
adc
fwait
mov
mov
sahf
xchg
or
lds
lds
filds
cmc
pop
sbb
cmp
mov
loope
enter
shlb
fcmovnu
hlt
je
mov
mov
or
ljmp
ja
fnsave
xor
aad
ja
xor
movsl
stc
insl
fistps
xor
imul
lahf
inc
loopne
sub
fcoms
icebp
pop
fisttpll
into
sbb
add
int3
aaa
out
sub
inc
lcall
inc
lcall
stc
cld
mov
sub
fiadds
out
dec
pop
xchg
mov
enter
sbb
incl
xor
in
xor
into
cmpsb
out
pop
push
std
test
adc
mov
inc
dec
sarl
pop
lahf
or
jno
add
into
aas
push
je
cli
mov
sbb
aaa
mov
nop
xchg
adc
lahf
ljmp
dec
xor
mov
lds
adc
cmc
inc
sub
push
fcmove
jg
inc
or
ljmp
outsl
loopne
adc
xor
and
out
imul
cltd
aaa
inc
pop
leave
lcall
pop
sbb
mov
xor
sahf
subl
hlt
pushf
or
lret
fdivr
cld
push
aam
mov
int
inc
lahf
sbbl
negl
insb
arpl
jnp
jecxz
mov
int3
je
iret
pop
lret
adc
loope
stc
into
ficoms
clc
cmpl
adc
fstpt
add
push
add
popa
repz
or
fadds
jp
ja
icebp
jnp
sbb
fidivl
rcl
aam
mov
inc
pop
das
jno
xchg
sbb
jnp
cmp
lods
popf
fwait
push
clc
popf
lret
sbb
mov
jo
test
imul
dec
lret
jb
jmp
push
loop
adc
jl
or
cmp
jb
cltd
add
das
sti
rcrl
stos
repz
aas
cli
data16
mov
fwait
cmp
icebp
sub
xor
lods
mov
aas
popa
inc
jecxz
or
push
stos
test
lret
push
in
xor
cmp
movsl
or
leave
push
cmc
aas
inc
mov
or
sti
outsb
xor
mov
or
adc
adc
ljmp
fidivl
fcompl
cli
cwtl
ljmp
xor
sub
mov
dec
xor
pop
pop
and
cmpsb
and
add
or
daa
fidivrs
fistps
test
mov
jmp
loope
xlat
test
jge
jnp
cwtl
mov
and
pop
cmp
stos
inc
jb
dec
ret
xchg
test
mov
sti
test
lcall
ljmp
jp
push
cmp
es
fwait
cmp
mov
sbbb
aas
lret
jnp
nop
pop
lds
push
mov
mov
push
call
pushf
add
fisttps
pop
out
add
sti
in
pop
pop
shll
ret
inc
repnz
fdivs
jl
lods
frstor
xor
or
and
insl
sahf
cmpsl
sbb
imul
in
push
dec
popa
mov
sarb
mov
ret
rorl
or
enter
cmp
mov
shrb
int3
jb
insl
xlat
xor
or
aas
lahf
xchg
pop
cmp
push
adc
xor
movsb
into
push
adc
sub
mov
loop
rorl
fistps
ret
xor
rcrb
xlat
movsb
lea
movb
add
add
inc
aam
push
out
xor
fs
add
xor
mov
sahf
jne
cmp
sub
cmc
popf
or
notl
mov
add
cltd
lcall
js
loop
mov
jnp
bound
add
sbb
dec
sbb
jo
jl
pushf
or
xor
aam
add
jbe
pushf
leave
ret
mov
xor
frstor
pop
mov
in
cs
fwait
push
xor
test
mov
scas
jnp
xchg
lea
add
into
pop
lret
mov
std
in
in
dec
icebp
mov
cmpsb
nop
adcl
lods
into
cmc
mov
mov
bswap
sbb
ret
stos
sub
loop
jg
out
adc
lea
pop
leave
in
pop
inc
jl
pop
lcall
loop
mov
cmp
dec
push
mov
sbb
fstl
or
ja
test
mov
xchg
or
roll
ret
in
fldcw
shlb
adc
iret
and
jp
xchg
add
sahf
jb
dec
cmp
mov
add
adc
mov
lods
xchg
and
mov
jp
sahf
sub
call
test
out
shll
xchg
or
mov
inc
push
pop
std
scas
push
cmpsl
cmp
insl
jo
mov
out
out
or
lods
adc
pop
rcrb
out
cld
fists
test
arpl
xchg
ljmp
or
jecxz
lahf
xor
rorl
dec
mov
mov
mov
fistl
cs
rorl
mov
inc
and
xchg
in
adc
push
fstpl
mov
cmp
pop
mov
xor
rcl
inc
mov
popf
lahf
and
aad
pop
lods
in
pop
mov
fisttpl
repz
adc
dec
inc
movsl
pop
popa
xchg
xorl
shll
ret
lds
cmpsb
sub
das
pop
fwait
pop
inc
adc
out
fucom
mov
sub
imul
xor
jne
jecxz
mov
pop
jle
fwait
xlat
lahf
es
xchg
mov
scas
or
hlt
mov
in
inc
stos
repz
fstpl
xchg
loope
jl
mov
mov
mov
das
mov
xchg
sub
test
push
sti
idiv
cwtl
mov
mov
sbb
mov
mov
adc
jo
adc
and
or
stos
cmpsl
scas
jns
pop
xchg
pop
mov
sbb
repnz
in
xor
adc
addr16
fmulp
push
xor
inc
fsts
bound
adc
sbb
sub
xor
or
jno
shlb
fisubs
adc
sarl
test
xor
xor
in
jg
sbb
or
cs
add
shll
xchg
jmp
imul
in
cmp
faddp
fildll
jnp
and
sbb
mov
mov
adc
lock
mov
test
xor
andl
jnp
aad
push
sarl
clc
mov
sahf
xchg
push
or
xor
outsb
sub
push
shll
subl
test
cmpsl
insb
jne
and
adc
roll
stos
dec
and
out
xor
mov
push
mov
rolb
lahf
frndint
mov
jns
std
push
int
es
mov
lcall
push
dec
mov
cmpb
mov
add
mov
pushf
aas
pop
dec
shl
mov
insb
lods
out
jle
imul
pop
leave
arpl
mov
out
test
sahf
xor
popf
sbb
mov
jbe
jecxz
or
das
pop
push
jne
push
iret
cli
jae
data16
sbb
je
and
lods
mov
mov
or
popf
mov
pop
dec
push
in
push
and
cmp
movsl
xor
xchg
es
mov
out
stos
fs
mov
sahf
mov
mov
das
call
mov
add
mov
cmp
jns
lcall
cmp
adc
xlat
sub
loope
jmp
sti
sub
mov
inc
mov
mov
daa
inc
cmpsb
or
push
or
adc
dec
sub
push
lret
aas
js
add
jl
js
sub
mov
imul
clc
push
and
iret
test
pop
icebp
imul
aaa
pop
sbb
fs
sbb
and
lahf
pusha
rcr
jge
mov
xorl
and
or
xchg
out
je
sbb
dec
data16
fdivrs
jo
in
sub
adc
xchg
popa
and
and
fidivs
test
adc
jno
push
arpl
jnp
xchg
dec
popf
lock
lahf
push
ret
mov
scas
in
sbb
aam
test
push
shrb
cltd
push
cmp
jecxz
mov
push
push
push
pop
cmp
mov
xor
jno
popa
iret
movsb
cmpsl
imul
pushf
insb
popa
repz
pop
shrb
inc
xor
mov
les
lea
je
lret
or
pop
fstpt
loop
or
outsl
aam
push
lock
dec
add
push
mov
add
jae
filds
pusha
mov
mov
addl
or
scas
or
movsb
add
cmp
stos
jecxz
push
mov
xor
lock
push
mov
movsl
pusha
push
mov
mov
lret
jae
js
or
int
stos
test
and
dec
pop
shrl
xchg
pop
je
push
pop
xor
add
sbb
mov
lret
and
into
dec
orb
sub
jge
and
push
pop
sbb
jbe
fisttps
imul
icebp
sub
cmp
sub
dec
push
cmp
aas
leave
or
push
or
xchg
inc
xchg
into
inc
pop
adc
fs
and
dec
imul
hlt
xor
sub
std
dec
jmp
mov
pop
inc
ja
outsb
adc
mov
lcall
into
add
ret
jg
fsubl
push
stc
pop
stos
lret
and
mov
std
pop
pop
jo
fisubrs
push
fimuls
sub
stc
flds
xchg
lahf
xchg
repnz
cmp
ret
cmpsb
es
aad
sbb
push
mov
cmpsb
adc
add
ja
movsl
jo
add
and
mov
push
test
gs
outsb
push
std
mov
ss
in
adc
jae
ljmp
sub
and
movsl
std
adc
loope
mov
xor
test
imul
mov
je
jae
mov
divl
test
jmp
xchg
ret
add
mov
fcomps
inc
mov
fidivs
xor
jge
jnp
cli
mov
cmpsb
lds
sbbb
cli
fldt
pop
out
loop
mov
ljmp
test
ret
aam
xlat
lcall
mov
push
adc
sbb
sub
test
sub
fsub
cmpsb
mov
xchg
mov
das
xchg
cmp
jns
imul
pop
or
aaa
and
cmp
xchg
jne
push
adc
ss
sbb
ds
push
repz
mov
fbstp
add
xchg
adc
int3
jle
sbbb
cmp
imul
es
inc
sub
je
fsubrp
mov
movsb
and
push
sbb
je
xchg
push
mov
scas
push
mov
cmp
stc
test
test
adc
call
mov
dec
div
xor
loopne
push
jecxz
pop
xor
pop
pop
js
test
cltd
sbb
sbb
lods
fcomp
xor
mov
xchg
sub
jecxz
mov
mov
into
cltd
inc
inc
imul
add
xchg
adc
out
cmp
xchg
adc
xchg
fcom
sub
inc
lock
pop
mov
adc
and
cmp
inc
imul
sbb
mov
fs
cld
cwtl
xor
dec
dec
lea
jbe
jae
test
popf
lret
in
aad
dec
jecxz
dec
imul
fstp
xchg
xchg
int
push
and
fildll
leave
sub
outsb
mov
lods
mov
das
daa
cmp
push
lods
pusha
in
mov
cwtl
xor
xor
lret
push
outsl
aas
fisubl
cwtl
outsb
test
sub
lods
add
lret
aaa
jo
dec
or
add
mov
sub
aas
push
fsubs
aad
sbb
out
shrb
dec
xor
and
bound
gs
into
mov
dec
adc
addb
add
testb
dec
fwait
outsl
xchg
sbb
das
cmpsl
xchg
xchg
aas
js
sub
lds
xor
in
xchg
or
fildll
fnsave
mov
call
cmpsb
lret
fidivl
je
insl
xchg
inc
jecxz
lods
pop
mov
pinsrw
pop
test
xlat
adc
inc
inc
xchg
subb
pop
int3
repnz
cmp
adc
push
mulb
push
pop
fs
inc
mov
sbb
std
roll
dec
or
mov
test
adc
cmp
pop
or
idivl
sbb
cmp
scas
stos
mov
rolb
sub
or
popa
sbbl
shl
xchg
testb
xchg
cld
xchg
jns
incb
push
cmp
adc
call
popf
mov
and
mov
sbb
lret
xor
add
sub
repnz
push
jns
push
mov
push
shrl
push
subb
or
xlat
push
inc
xor
mov
fisubs
test
sub
lret
out
push
aam
fsubrs
in
sbb
pop
mov
add
test
negl
mov
ret
xor
xchg
adc
xchg
add
je
xchg
out
jnp
push
or
fnstcw
rolb
xchg
int3
mov
dec
cltd
jo
out
fidivl
idivl
push
push
in
cmp
mov
xchg
daa
inc
xchg
jl
mov
mov
in
ja
cs
faddp
xchg
cltd
adc
push
int
sbb
xchg
add
pop
pushf
jmp
push
and
sahf
dec
subb
aaa
in
popf
les
or
fwait
sub
orb
push
push
imul
outsl
jecxz
push
adc
adc
bound
mov
add
mov
test
das
pop
and
mov
cmpsb
sahf
movsl
arpl
push
fbstp
adc
mov
adc
lods
push
fwait
sti
xor
imul
out
les
mov
mov
data16
int3
inc
dec
add
lock
ljmp
xchg
popa
push
fld
xchg
mov
push
mov
jl
mov
sbb
jbe
arpl
cld
pop
pop
int
mov
xchg
daa
movsb
push
or
mov
jnp
sbb
sahf
dec
test
cld
sub
sbb
std
movl
and
xchg
fs
xorb
int3
lock
iret
push
jo
adc
cmp
cmp
push
mov
push
scas
pop
sti
cmp
adcb
data16
pop
cmp
sub
mov
push
stos
mov
jo
loop
rolb
repnz
pop
and
jge
cmp
stc
lock
mov
push
pop
inc
jbe
scas
in
xchg
pusha
andl
inc
pop
xor
xchg
or
sbb
dec
xor
pop
jecxz
cmc
mov
aas
add
imul
icebp
mov
dec
das
mov
jae
out
jge
push
cmpsb
dec
jo
arpl
iret
jmp
pop
sub
dec
cs
xchg
jecxz
in
add
cmpb
enter
inc
push
scas
int3
repnz
imul
dec
aaa
addr16
sbb
ficomps
and
sub
sub
mov
xor
xchg
pop
mov
out
iret
jp
nop
bound
xor
lcall
fisubs
inc
or
negl
je
mov
push
addl
push
cld
cmp
pusha
mov
ss
inc
mov
pop
lret
inc
mov
and
mov
daa
fistps
dec
add
gs
jae
lcall
push
outsl
push
fsubrp
sub
mov
gs
movsb
rcl
aad
push
and
cmpb
cmp
mov
imul
pop
movb
dec
cmp
je
push
mov
sub
repz
shr
cs
nop
jbe
jle
loope
mov
add
test
dec
test
fistpll
push
imul
clc
repnz
jo
out
out
jmp
subb
in
adc
xchg
mov
stos
popf
pushf
cmp
iret
pop
iret
sbb
dec
push
aam
pop
push
or
xor
cs
sbb
xor
mov
mov
mov
cs
push
mov
push
cmp
out
insl
mov
xor
and
lods
scas
dec
dec
aas
mov
test
push
inc
dec
popl
mov
pop
inc
in
xchg
out
inc
mov
mov
adc
mov
mov
mov
xor
repnz
cmp
repz
jae
adc
jp
push
test
mov
or
or
addl
mov
sub
dec
cmp
mov
or
scas
push
mov
inc
pop
xchg
dec
xchg
jnp
push
jg
sbb
cs
adc
inc
out
inc
shr
mov
jecxz
mov
sar
leave
loop
ret
repnz
pop
loop
push
adc
cmp
mov
jnp
inc
xor
sahf
sub
jb
pop
out
and
inc
sbb
outsb
sub
ret
pop
and
in
sti
push
mov
push
popf
mov
shr
mov
stc
mov
arpl
popf
jne
xchg
cmp
sub
cmc
and
sub
repz
inc
es
stos
aaa
ss
pop
inc
xchg
xor
xor
aas
scas
push
lea
add
scas
jne,pt
mov
inc
mov
int3
and
dec
fs
adc
mov
pop
or
jge
inc
test
ljmp
psraw
in
shll
fcmovnbe
mov
test
popf
inc
jo
xchg
stos
int
pop
ljmp
xor
mov
add
dec
jmp
fadd
mov
ret
popf
test
inc
cmp
test
sbb
shrl
push
call
adc
cltd
add
xorl
pop
adc
adc
fisubl
les
insb
jo
loopne
sub
or
dec
cmpsb
dec
in
nop
pop
fstps
adcl
adc
mov
xor
mov
xchg
mov
and
test
mov
jge
cs
or
cltd
rorl
push
jp
cmp
and
dec
out
or
jmp
fdivl
pop
sub
mov
dec
dec
push
int3
or
bound
test
inc
out
add
hlt
cmc
inc
imul
push
loope
inc
pop
pop
lcall
ds
cli
sub
cli
xorl
xchg
loope
xor
bound
inc
jbe
in
or
insl
jmp
add
loop
mov
sbb
xchg
ja
rolb
popf
loopne
mov
and
pop
cmp
test
cmp
lcall
and
mov
cmpsb
pop
mulb
fldenv
loop
xchg
sarb
xor
ret
outsb
and
stc
or
mov
js
mov
pop
sub
cltd
jne
in
jne
frstor
mov
inc
push
cmc
or
xchg
out
mov
mov
mov
mov
in
dec
xchg
fisubrs
mov
pop
cmp
jno
jns
mov
test
les
sbb
cltd
dec
jg
outsb
cmp
push
and
mov
imul
addr16
add
xchg
sarb
insb
subb
mov
popa
mov
out
fimull
xchg
jp
jae
and
add
inc
lcall
leavew
push
lds
fucompp
adc
cmp
push
ret
in
lretw
movsl
sarl
test
loopne
pop
mov
inc
or
adc
xchg
movsl
pop
xlat
pusha
lcall
inc
test
fucomip
xor
lahf
cmpsb
xor
mov
loop
sub
mov
cmpsl
pusha
jnp
fnstcw
test
cmp
leave
divb
pop
jg
aam
jno
fisttpll
xor
xor
xchg
outsl
push
dec
addl
insb
sbb
enter
cmp
sub
xorl
pop
mov
repnz
mov
in
movsl
enter
pusha
ja
push
or
or
out
inc
cmp
push
out
je,pt
sahf
sbbl
or
pop
test
ror
stos
sbb
mov
out
push
movsl
mov
fs
dec
gs
mov
insl
cld
mov
add
lock
gs
lods
mov
xlat
sarb
push
mov
cmpsb
fnstsw
sbb
cmp
lds
cmc
jg
xor
push
insb
mov
int3
fcom
mov
insl
mov
fdivl
nop
inc
cmpsl
xor
xchg
outsl
jno
add
push
add
ja
and
add
xor
lahf
inc
jbe
jmp
call
cmp
dec
push
mov
inc
fwait
stos
out
add
jp
mov
mov
jp
stos
cmp
add
mov
mov
test
jae
ja
push
mov
jae
clc
push
mov
das
adc
cs
fdivp
adc
mov
bound
lods
adc
fst
dec
mov
push
rorb
out
pop
jo
mov
out
stos
adc
outsl
mov
or
outsb
pop
jae
add
lock
xchg
enter
icebp
sub
xchg
sub
xchg
inc
xchg
inc
call
icebp
cmp
into
lods
into
lods
mov
mov
and
mov
xchg
push
loop
out
arpl
dec
adc
loopne
dec
jne
pushf
test
cmp
sahf
sub
movsb
out
lcall
jnp
jl
push
hlt
mov
std
bound
mov
and
addr16
bnd
xchg
push
mov
sbb
cmp
mov
pushw
push
jmp
pop
arpl
lods
xchg
cmp
mov
loopne
insl
lcall
inc
orl
xor
loop
cmp
out
push
mov
out
fs
jmp
daa
fbld
repnz
jbe
popa
mov
arpl
xor
das
ret
jmp
mov
sub
dec
int
lcall
push
fwait
str
xchg
inc
and
xchg
mov
add
iret
lods
inc
loope
ret
mov
mov
pop
dec
add
push
xor
jmp
mov
das
aas
and
jecxz
jmp
shr
mov
pmaddwd
inc
gs
int3
movsl
jge
mov
or
and
xor
pop
aaa
popa
test
mov
pop
push
mov
jns
lret
test
outsb
scas
aad
enter
mov
iret
xchg
ret
inc
ret
test
arpl
imul
test
jno
and
loope
out
jmp
fsubrs
lahf
mov
mov
scas
fildll
jo,pt
icebp
iret
mov
push
push
sahf
xlat
in
mov
sbb
jb
adc
xorl
cmc
fldt
xor
jb
in
xchg
add
movsb
aad
fsubrs
push
and
add
and
dec
fwait
shll
push
add
ret
gs
xlat
adc
xor
cltd
fmul
and
dec
fs
es
mov
and
inc
xchg
sarb
add
push
nop
mov
jns
mov
das
pop
cmc
lahf
dec
frstor
jmp
movsl
or
lret
imul
inc
out
lcall
roll
shll
sub
popf
ret
hlt
jb
mov
aaa
adc
mov
mov
sbb
push
or
imulb
pop
mov
pop
xchg
pop
movsl
pop
into
xlat
pop
mov
push
lock
fistl
lods
flds
sub
rsqrtps
push
test
dec
pop
pop
mov
out
popa
xchg
lret
ficoms
shlb
push
xchg
jae
faddp
aad
adc
mov
std
loope
das
cmp
ret
cmp
xchg
xor
shr
hlt
push
lcall
dec
addr16
xor
mov
jae
leave
inc
xor
not
xchg
aaa
lods
xchg
xchg
cwtl
pop
stos
fidivl
enter
push
cmpb
jecxz
push
sub
push
subl
mov
lock
sbb
mov
dec
out
jl
xlat
push
cmp
aaa
mov
xor
lods
pop
xor
imul
test
sub
jg
push
loop
inc
jnp
pushf
sarl
inc
xchg
push
mov
dec
fnstenv
jecxz
add
push
cmc
inc
adc
inc
pop
xchg
scas
imul
inc
orb
mov
and
sahf
dec
xchg
std
in
outsb
std
sub
sbb
lea
sbb
or
inc
push
lea
add
jb
dec
xchg
out
or
cmpsb
mov
adc
mov
gs
icebp
jle
sbb
xchg
pop
adc
sbb
xchg
ss
pop
inc
jmp
lahf
push
imul
mov
cltd
icebp
fdivrs
fucomip
stos
push
push
xchg
sbb
adc
test
jmp
xchg
sbb
mov
loop
in
lahf
pop
sar
add
lret
fildll
outsl
mov
sbb
daa
cli
mov
nop
aas
sbb
dec
sbb
cmp
mov
and
push
mov
ret
pop
fildll
ret
frstor
push
pop
add
xor
inc
jmp
sbb
std
ljmp
mov
xor
pop
mov
jg
cwtl
pop
jle
mov
decb
mov
nop
dec
addr16
xor
push
add
sub
xlat
ret
and
xchg
int
inc
xor
loop
int3
mov
sub
xchg
popf
dec
jp
imul
mov
sbb
mov
xlat
and
inc
aaa
jbe
adc
pop
inc
adc
push
push
add
inc
and
xchg
lock
shll
outsb
xchg
fdivrl
pushf
inc
mov
mov
fs
mov
loop
adc
pop
lock
in
into
sub
xlat
cs
mov
dec
or
and
push
sbb
sbb
lds
insl
jb
lods
sub
cmp
or
shlb
inc
push
lea
jg
xchg
andl
fcmovb
cs
les
in
les
add
xchg
ret
mov
xchg
inc
mov
adc
into
out
and
outsb
imul
mov
mov
outsb
xchg
mov
adc
test
outsl
adc
aad
push
or
or
fwait
sbb
mov
arpl
mov
scas
lret
leave
out
shr
fwait
cmp
stos
jle
xlat
rclb
jnp
mov
inc
stc
or
movsb
je
sbb
rorl
loope
sahf
lahf
mov
inc
loop
push
and
push
jb
adc
pop
jbe
add
inc
mov
push
mov
jl
jbe
jnp
xchg
gs
cmpsl
mov
movsb
lret
fsubrl
mov
sub
sbb
ja
out
jo
xchg
ljmp
in
mov
rcrl
sbb
stos
popa
mov
cmp
cmc
mov
add
ljmp
cmp
cld
and
adc
adc
mov
ss
std
je
sbb
jle
jge
push
divl
outsb
popf
scas
jno
dec
mov
nop
push
cltd
test
rcl
sub
jmp
or
add
cwtl
add
jmp
jg
inc
jae
std
int3
push
cmp
scas
outsb
mov
xor
and
inc
cmp
sbbb
clc
xor
mov
and
jmp
daa
fwait
mov
in
loop
cmp
jnp
in
jp
mov
movl
push
xchg
pushf
xor
mov
cmp
add
incb
and
fnstcw
leave
imul
pop
mov
lahf
add
xchg
mov
bound
mov
aad
add
mov
shrl
jmp
and
pop
or
add
dec
inc
push
pop
arpl
mov
push
add
mulb
xor
test
int3
xchg
jp
ds
mov
nop
mov
pop
inc
mov
insb
call
js
or
int3
int
shll
and
enter
punpckhwd
cmp
nop
inc
fiaddl
push
das
sub
adc
mov
arpl
xchg
mov
fsubp
cs
cmp
inc
test
sti
xor
add
mov
jg
pop
jbe
sub
dec
or
jecxz
push
xchg
cs
cmp
icebp
stos
pop
dec
fmull
adcb
xor
push
in
push
pop
jle
dec
sti
xchg
jg
fsubrs
inc
mov
inc
adc
cmc
mov
enter
sbbl
stos
das
cmp
dec
iret
ret
jl
shlb
xchg
xchg
push
adc
xchg
stos
sub
int3
mov
test
jmp
pop
push
push
std
mov
jnp
fsub
enter
sti
push
in
cmc
or
sub
out
mov
mov
dec
mov
mov
jbe
inc
jns
push
xor
shll
and
lea
adc
int3
popf
push
int
adc
loope
call
push
mov
sbb
hlt
iret
imul
dec
adc
rolb
sbb
mov
popa
mov
and
pop
sbb
je
sahf
scas
adc
mov
xor
push
imul
call
jne
sbb
les
aaa
mov
pop
mov
aam
push
lods
mov
xor
inc
call
bound
in
mov
aad
push
cmc
push
mov
imul
notb
inc
negb
mov
loop
mov
lods
bound
or
adc
xor
insb
jb
int3
mov
dec
insb
les
sub
pop
in
inc
outsb
fwait
jecxz
mov
ret
imul
mov
enter
push
out
sbbb
xchg
fucom
mov
or
sti
in
sbb
aad
enter
mov
lods
or
add
cmpsb
jecxz
lcall
scas
dec
xor
loope
dec
push
roll
jae
inc
lods
test
mov
decl
jle
out
fs
adc
jae
push
hlt
aad
fcoml
inc
mov
and
sub
lock
faddl
js
push
and
xchg
idiv
outsl
add
shr
insb
adc
sbb
add
mov
fsubrs
pop
adc
out
push
xor
xchg
ret
sbb
inc
jo
push
nop
dec
cmp
cmp
mov
leave
aas
xchg
cwtl
lret
js
pop
mov
and
jne
sbb
int
mov
xchg
fstpt
or
ftst
pop
cmp
sahf
xchg
mov
mov
ljmp
out
in
sub
push
sbb
out
imul
test
insb
mov
cld
dec
clc
ficompl
add
repnz
movsl
push
xor
push
jl
adc
mov
daa
mov
fists
jmp
addr16
repnz
dec
fisttpl
ljmp
js
xlat
hlt
int
in
dec
cmpsb
mov
fstl
imul
repz
leave
popf
xorb
sahf
mov
pop
movsl
clc
in
int
and
jle
imul
ficompl
mov
jo
push
roll
ja
sub
shll
mov
xchg
pop
ljmp
mov
jb
sub
loop
cmp
pop
mov
shll
xchg
push
test
ja
ret
out
lret
cmp
pop
fcmovnb
xor
xor
je
cmp
gs
lcall
jne
repnz
add
and
incl
inc
js
les
xchg
pop
push
cmc
sahf
ds
dec
jge
adc
inc
sbb
pop
clc
mov
xchg
push
mov
inc
jmp
pop
xor
adc
or
ficomps
sub
inc
test
push
das
push
xor
dec
ficoms
lods
inc
inc
add
lds
sub
stc
and
gs
movsb
pop
sysexit
test
add
adc
dec
push
ret
sbb
mov
fstps
lret
and
out
les
mov
cwtl
add
movsb
and
sbb
xchg
or
jg
outsb
xchg
dec
fnsave
and
popa
out
mov
addr16
xchg
jp
lahf
repnz
dec
fdivrl
cmpsl
xchg
popa
scas
xor
fstl
sub
movsl
std
loop
cmp
xchg
and
insb
pop
aam
pop
cmpsb
ds
jmp
jp
pop
mov
movsl
dec
adc
das
add
adc
cltd
push
scas
mov
lret
jmp
pop
and
jne
push
push
jmp
inc
test
jo
jb
jl
or
icebp
pushl
jnp
sbb
shrl
mov
ret
lds
cmp
pop
inc
jb
and
sbb
outsl
sbb
loope
xor
pop
mov
dec
dec
ret
stos
andb
nop
testb
inc
sub
cmp
mov
or
cmp
xchg
pop
insb
clc
shl
xchg
test
sbb
fs
enter
push
xor
jo
sahf
xor
or
enter
push
cmp
aam
hlt
scas
and
notl
stos
mov
xchg
cld
pop
xchg
mov
add
stos
xor
xchg
cwtl
xchg
sahf
in
loopne
dec
push
sub
add
xchg
xlat
decb
pop
sbb
sub
jne
xor
dec
xchg
hlt
repz
popa
stos
fistl
xlat
and
lahf
and
test
cmp
mov
pop
cmpsb
adc
or
insb
sti
outsl
lods
and
mov
or
lea
lahf
jae
xor
cmpsl
jae
xor
ss
out
fisubs
mov
fdivs
and
sbb
add
scas
dec
icebp
adc
int3
sub
lds
fbstp
pop
lcall
int3
xlat
adc
clc
in
call
loope
push
inc
scas
imul
xchg
mov
cs
int
daa
in
pop
xchg
xorb
xchg
dec
xor
iret
bound
mov
sbb
data16
fs
cmp
test
xchg
push
sti
fldl
addr16
jg
dec
das
xchg
add
xchg
cmpsl
mov
cwtl
pop
mulb
mov
mov
mov
pop
scas
jmp
call
into
lods
cmp
push
mov
or
cmp
mov
sub
test
mov
jg
mov
and
test
mov
mov
pushf
scas
das
cli
test
and
pop
jp
or
add
push
mov
test
cmpsl
push
shll
xchg
popa
xor
jne
clc
add
cld
inc
mov
mov
adc
sub
fdivs
rcrl
repnz
jg
mov
mov
lret
push
inc
sub
cwtl
int3
es
cltd
sbbl
cs
xor
sarl
pop
out
xchg
gs
xor
loope
inc
mov
mov
xchg
in
pop
fadds
pop
mov
mov
dec
insb
add
insb
xor
in
cltd
cltd
mov
xor
dec
pop
ficompl
ret
mov
jmp
out
sbb
jae,pt
ret
push
sti
jnp
sub
in
lds
mov
outsb
or
cld
mov
inc
pop
ds
aad
movsb
cmpsl
mov
mov
scas
repnz
fsubrs
jbe
aas
xchg
jno
testb
mov
xor
dec
mov
xor
lods
ljmp
test
bound
in
mov
popa
jnp
lea
jns
lock
push
stos
rol
fcmovu
mov
andl
daa
cwtl
pop
roll
mov
mov
int3
nop
inc
lds
out
push
ret
fwait
data16
cmp
xchg
pop
out
xchg
push
in
sub
adc
std
rorl
sarl
leave
fldl
int3
dec
cmc
cwtl
dec
dec
jle
push
push
sub
es
lret
mov
aas
pop
sub
jbe
mov
xchg
jg
xchg
loope
cmpsb
test
hlt
jne
testb
icebp
mov
push
jns
out
std
pop
mov
push
and
shl
adc
jg
outsb
jmp
mov
lds
pop
sbb
push
leave
pop
mov
loope
nop
pushf
ja
xchg
jle
mov
pop
jecxz
testb
aam
sbb
mov
jge
mov
mov
dec
xchg
add
cmp
test
push
push
xor
fdivrs
push
out
jle
popl
and
imul
jns
xor
sbb
mov
pushf
inc
mov
ds
test
pop
xchg
dec
push
fidivrs
lods
movsb
call
jmp
int3
push
in
cmpl
rcrb
mov
add
adc
cltd
mov
push
cmp
test
inc
fs
sub
mov
sbb
xlat
xor
adc
out
adc
inc
and
test
pop
mov
sbb
pop
cmp
loope
popf
add
cmp
sbb
sbb
int
xchg
sahf
mov
dec
mov
dec
jbe
pop
dec
jp
sub
mov
mull
sbb
in
out
mov
in
nop
js
dec
cwtl
aaa
jno
jg
add
inc
push
insl
pop
pop
and
add
pop
mov
call
push
mov
cmpsb
nop
in
repnz
xchg
xor
lock
jmp
lcall
inc
movsb
sti
xor
xorl
add
test
jae
cld
ja
movsl
sbb
dec
adc
add
mov
and
mov
sbb
in
aaa
std
dec
mov
add
mov
pmullw
into
sub
push
cltd
ds
adc
mov
mov
mov
cmp
jae
int
jge
xchg
daa
sub
insl
aad
aam
pusha
lahf
sbb
and
das
sti
dec
inc
sar
adc
int
adc
jns
add
xchg
jb
mov
fwait
dec
cmpsb
add
add
mov
lods
sub
lods
sbb
pop
cmp
subl
mov
sbb
or
nop
imull
sbb
test
inc
or
dec
mov
negb
fstps
stos
shl
jp
ficoms
mov
xchg
std
je
mov
add
in
pop
mov
sti
jae
out
xor
sub
lahf
jns
int3
hlt
gs
fmuls
daa
push
dec
bound
js
mov
js
cwtl
cmpsl
add
mov
stos
fistpll
je
and
mulb
out
lcall
and
jmp
xchg
aaa
mov
fmull
int3
insl
aaa
push
leave
dec
cmpb
push
or
lahf
repnz
jge
data16
xor
sub
clc
dec
int
fistl
jp
loopne
cli
xor
lahf
jbe
loop
popa
ds
sbb
cmp
mov
cmp
insb
sbb
shrl
into
in
negl
or
fiaddl
xor
mov
push
repz
pop
push
fnsave
xchg
mov
push
and
push
fwait
in
andb
notl
xchg
les
lret
iret
out
inc
or
cltd
mov
xor
cld
inc
gs
cli
cmp
inc
jo
cmp
dec
xor
rorl
jle
push
sub
mov
mov
xchg
lcall
mov
sub
jle
mov
cmpl
fsubr
aas
cmp
fs
sub
fbstp
call
fcoms
inc
xor
rcr
xchg
sahf
test
pop
mov
in
in
xlat
jmp
pop
or
out
test
call
jno
repnz
pop
mov
adc
mov
scas
and
dec
mov
stc
push
pop
js
andl
es
test
cld
jns
icebp
shrb
mov
xor
sbb
js
push
and
and
fbld
or
into
cld
mov
in
push
ret
pop
cmp
push
xchg
mov
mov
inc
out
movsb
nop
jo
and
mov
xlat
fcoms
jp
pushl
mov
lods
or
incl
xlat
add
push
mov
fs
sti
fstpl
sar
js
ja
mov
testl
lds
pop
inc
pop
jp
inc
cmp
ret
es
ja
bound
sbb
and
mov
inc
push
adc
aad
mov
mov
mov
sbb
dec
cltd
subb
push
negl
sbb
movsl
dec
mov
sub
xor
adc
xor
and
out
add
xchg
subb
icebp
sbb
mov
shrb
in
das
insl
pop
inc
jle
push
mov
mov
push
out
dec
das
lods
rorl
add
das
mov
je
mov
jle
sbb
mov
adc
test
mov
xor
mov
imul
clc
leave
popa
and
repz
test
adc
ds
push
out
cmp
jge
fidivrl
inc
push
lock
popf
mov
leave
and
fisttpll
xor
add
out
jne
outsl
and
divl
pop
jns
adc
xchg
push
in
push
sub
jbe
mov
and
shl
xchg
insb
dec
idivl
xchg
int3
jns
inc
stos
rclb
scas
int3
movsb
jo
in
xor
scas
or
aaa
xor
and
inc
dec
jmp
or
inc
adc
loop
jp
push
dec
push
mov
and
in
std
fildl
xor
sub
or
inc
pop
test
aas
ds
inc
repz
and
jae,pt
stc
mov
mov
imull
push
dec
xor
cli
push
aaa
pop
les
push
add
pop
not
cmp
out
mov
or
adc
cltd
push
std
bound
mov
pop
inc
ret
dec
jne
gs
dec
insb
add
push
and
mov
push
xchg
inc
loopne
pop
shlb
sub
shll
jg
mov
add
outsl
mov
imul
inc
push
sub
stos
sub
and
outsl
out
sbb
adc
adc
and
sbb
cmpsb
xchg
xchg
or
int
dec
push
shl
scas
inc
addr16
mov
cmp
arpl
stos
sbb
xchg
aam
push
dec
push
pop
aad
jnp
cwtl
jmp
push
xchg
xor
push
rcrl
popf
jecxz
es
mov
jo
sub
aad
insb
rol
ljmp
mov
cmpsb
in
in
out
jnp
ret
aas
push
test
mov
iret
in
leave
stos
loop
dec
addb
neg
mov
test
jns
pop
imul
cmp
mov
mov
xchg
cli
jo
cmp
add
cli
xchg
xchg
pushf
jmp
xchg
xchg
jl
movsb
push
sub
xchg
testb
jle
loop
push
lods
and
lahf
pop
cmp
ret
mov
and
outsl
dec
outsl
pop
sbb
mov
sahf
xchg
cld
fxtract
lret
fsts
sti
lea
adc
test
lods
lds
inc
sub
push
jbe
sbb
add
jmp
test
iret
sub
enter
sub
mov
mov
stos
mov
jle
sbb
dec
cltd
adc
loope
mov
clc
dec
mov
leave
pop
cmp
or
movsb
push
pushf
int3
or
add
push
call
icebp
fistps
mov
lret
insb
add
xchg
loop
push
adc
dec
or
mov
add
adc
xchg
xchg
pop
dec
jb
pop
fadds
cli
and
sbb
fmull
xor
bnd
mov
add
push
sarl
add
cmpsb
or
incl
fimull
jg
mov
fisttpll
dec
mov
imul
filds
mov
ficoms
jb
push
aam
cmpsb
push
ret
push
pop
cli
stos
push
ja
fldcw
std
mov
aas
dec
inc
pushf
inc
loopne
sbb
sarl
outsl
sbb
je
mov
stos
leave
sub
aaa
cmp
fcoml
in
jge
cld
push
push
push
adcb
push
push
popf
nop
pushf
inc
mov
adc
adc
shr
js
popl
jg
cltd
push
sbb
hlt
out
pop
jmp
sti
les
jno
jecxz
mov
dec
insb
add
push
add
or
shrb
scas
sub
adc
pop
imul
cli
xor
in
sbb
or
mov
dec
or
pop
ljmp
cmp
call
add
mov
int3
outsl
pop
clc
and
and
pop
out
and
in
movsl
dec
ss
pop
stc
cmp
cmp
popa
mov
fbld
and
push
mov
mov
add
mov
das
in
loope
inc
adc
mov
and
test
mov
cwtl
cmp
jnp
imul
addr16
push
cs
xchg
aaa
lcall
popf
out
je
mov
cmc
divb
das
addb
imull
xchg
or
pop
mov
jno
popa
xor
lret
mov
add
or
xchg
les
cmpsl
stc
test
out
lret
jecxz
int3
adc
std
or
pusha
rcrl
cmp
mov
std
addb
jne
out
adc
iret
mov
aaa
xchg
add
or
push
aaa
ret
add
jmp
std
decl
mov
ss
arpl
sarb
adc
fwait
iret
enter
daa
in
push
adcb
out
ficompl
insl
mov
out
movsl
movsl
or
jl
xor
ret
in
push
daa
in
jnp
sbb
sub
push
in
xor
fstpt
push
cmpsb
sub
lahf
xchg
push
add
frstor
push
xchg
xchg
ficoml
ret
cmpsb
imul
mov
pop
jp
mov
dec
lret
out
push
outsb
fsubs
mov
xchg
jnp
dec
mov
in
add
fsubrs
sarl
stos
aad
xor
jge
push
sbb
sbb
xlat
jbe
jb
nop
arpl
dec
mov
pop
jg
imul
cmpsb
xchg
dec
or
mov
inc
inc
jl
test
dec
das
dec
bound
repnz
imul
aad
push
outsb
outsl
push
mov
sbb
xor
lret
lea
xchg
or
sbb
xchg
adc
and
add
int
pop
xlat
out
fldl
xchg
dec
shrb
out
pop
xchg
mov
mov
popa
fcoms
pushf
loop
jecxz
pop
add
or
pop
outsl
pushaw
mul
dec
ss
cmpb
inc
adc
or
mov
push
lock
js
cmpb
cmc
daa
push
and
inc
push
mov
jne
dec
test
xchg
lea
add
loope
aad
add
mov
enter
test
shl
or
lcall
les
daa
adc
push
mov
sahf
jne
popa
pop
and
test
lret
mov
lods
vmovntps
dec
pop
push
add
mov
sahf
iret
sarb
jge
pusha
sub
jp
std
xchg
std
jecxz
mov
je
out
dec
mov
repnz
adc
aad
jecxz
outsl
cmp
mov
les
adc
adc
xchg
das
lcall
orb
dec
xchg
mov
mov
mov
cmp
lods
in
jp
clc
imul
lret
add
aas
xchg
or
and
push
cmpsl
jno
cld
mov
sahf
cmp
lret
mov
in
jge
clc
pushf
test
xchg
cmpb
sbb
mov
sbb
and
mov
cli
stos
xchg
arpl
in
sbb
or
scas
lods
dec
add
out
sbb
sbb
push
scas
mov
out
xor
sar
mov
inc
jbe
push
jno
int
xor
punpckhdq
sahf
lret
loope
cmc
popf
jne
or
sub
jmp
test
mov
and
loopne
mov
popa
cwtl
lahf
shlb
pop
jns
daa
cwtl
repz
sbb
sbb
fs
pop
xchg
xor
loopne
sub
mov
inc
cwtl
pop
out
xchg
dec
test
lods
xchg
mov
insl
lret
sti
fisttpl
xchg
test
fdivs
imul
leave
push
lods
cmp
adc
push
testb
pop
mov
testl
jle
rolb
sub
mov
xchg
lcall
insl
addr16
push
pop
imul
js
mov
dec
push
addr16
ja
mov
outsl
int3
xor
lea
mov
icebp
jnp
loopne
mov
mov
pusha
sub
mov
push
repnz
adc
add
nop
pushf
rcr
jmp
xchg
mov
sub
dec
pop
sbbb
popf
or
sbb
and
pop
nop
add
hlt
pop
sub
lahf
push
bnd
dec
or
inc
pop
insl
adc
dec
pop
mov
nop
aad
cmp
cwtl
dec
push
mov
or
dec
sbbl
inc
out
scas
push
push
mov
cmp
lods
movsb
in
clc
lcall
xchg
in
jns
push
add
sbb
jg
loop
ja
aam
push
nop
push
in
xchg
sbb
xchg
icebp
mov
ljmp
jns
into
push
adc
push
stos
or
mov
xor
dec
jp
jg
dec
das
lahf
push
sub
lods
test
pop
mov
add
mov
sub
jge
mov
mov
xchg
xchg
cltd
lret
lret
inc
call
sti
cmp
pop
adc
sub
push
add
mull
std
mov
mov
jecxz
and
adc
mov
jae
inc
or
sbb
rorb
lea
test
xorb
jge
mov
sbb
lock
xchg
mov
adc
or
dec
in
ja
sbb
add
test
jns,pt
mov
and
cmp
hlt
gs
inc
addr16
loopne
xchg
pop
mov
mov
daa
sti
push
push
sub
or
mov
push
push
lret
mov
adc
mov
jge
out
out
mov
inc
mulb
xor
sub
push
call
dec
sahf
lea
lcall
outsl
xchg
rcll
test
jnp
pop
mov
inc
xlat
in
add
and
mov
add
mov
and
ss
push
pop
cltd
pop
jb
loope
maxps
sbb
out
push
loopne
nop
xor
pop
add
outsb
mov
inc
push
cmp
cmp
push
mov
dec
add
pushf
repz
xlat
sahf
cmpl
outsl
imul
mov
test
lret
pop
sti
sbb
pop
and
nop
push
enter
testl
icebp
arpl
pop
push
int
in
xchg
xor
cmp
pop
mov
push
insb
add
sub
mov
or
in
shrl
movsb
pushf
daa
stos
jmp
es
mov
xorl
subl
in
xor
icebp
mov
push
cld
test
movlps
in
std
pushf
jae
sub
int
cltd
ss
mov
cltd
jns
imul
jnp
cltd
fidivrs
das
test
pop
pop
imul
fmull
jle
mov
ss
cmp
inc
out
lock
lea
clc
and
adc
sbb
mov
jmp
fldl
hlt
rcrb
divl
sub
mov
fcmovne
xchg
xchg
dec
add
push
iret
std
sbb
xchg
jae
sub
xchg
ja
cltd
outsb
xchg
jg
or
ja
xchg
je
stos
rcll
push
jmp
pop
pop
mov
ljmp
add
stc
ret
pop
fists
lahf
sti
test
push
mov
lahf
mov
or
pop
cmpsb
jbe
loop
inc
jl
pop
jge
nop
pushf
cltd
cmp
sbb
aam
test
and
aaa
das
push
repz
adc
xchg
push
imul
or
xchg
fcmove
jle
lds
pop
jb
mov
and
mov
add
lea
inc
adc
popa
jge
pop
and
push
sub
add
adc
stos
lret
das
inc
icebp
add
in
sahf
mov
sub
pop
clc
ja
mov
sub
ss
or
or
or
mov
insl
push
testb
push
jg
pop
rcr
popf
inc
out
mov
mov
aad
jnp
dec
mov
dec
push
jne
imul
lods
or
sarl
mov
mov
adc
aam
shll
out
insb
js,pn
push
add
push
mov
inc
jo
dec
mov
repz
inc
pushf
or
test
adc
subb
inc
push
pop
test
aad
imul
dec
cmp
sbb
dec
pop
iret
xlat
add
mov
stc
jne
jp
jne
stos
and
jb
popa
leave
mov
jmp
rcll
add
sahf
out
loope
aaa
es
fcoml
shrb
out
sbb
loopne
out
pusha
dec
outsl
pushf
push
mov
xchg
inc
push
imul
negb
xchg
lcall
insl
xchg
lods
sbb
inc
stc
js
lock
push
xchg
loope
ss
xchg
sbb
fstpt
xchg
gs
xchg
jae
pop
cmpl
fwait
mov
rorl
repz
add
cld
xor
mov
clc
push
out
lcall
add
andb
jp
adc
xchg
or
jmp
or
cmp
loope
es
out
dec
xchg
add
in
mov
pop
jne
negl
push
hlt
inc
cmp
inc
xchg
and
inc
dec
rcll
cmp
int
mov
mov
xchg
xchg
pop
std
xchg
pop
addb
repnz
mov
subb
jb
jecxz
mov
mov
xchg
test
jno
pop
sub
inc
clc
mov
and
out
jno
cmp
ja
andb
out
je
add
stos
or
ret
fnop
dec
ss
mov
inc
out
jmp
add
cwtl
mov
add
add
loope
shll
fld
mov
sbb
fwait
loopne
jne
mov
shl
ffree
cmp
jns
push
jecxz
mov
lea
in
sub
and
lds
xlat
push
idivb
scas
add
sub
lahf
notb
push
imul
add
inc
xchg
dec
arpl
dec
pop
imul
data16
mov
jecxz
xchg
mov
xchg
mov
mov
mov
imul
inc
pop
scas
insb
cmp
jnp
dec
inc
mov
idiv
sti
movsb
in
ja
dec
xor
pop
nop
dec
cld
xor
xchg
push
xorb
insl
and
push
and
pop
pop
dec
call
pop
repz
jle
jl
xor
mov
orb
xchg
jns
jns
lcall
cmpsl
je
mov
push
int
ja
and
cmp
cmp
pushf
push
jmp
int3
cmpb
in
loope
popf
scas
or
pop
mov
fisubs
pop
push
xor
mov
scas
sarl
xchg
mov
push
xchg
into
loope
and
or
push
shll
adc
adc
enter
mov
sarl
stos
cld
adc
out
pop
push
pushf
sarb
dec
cmpsb
mov
mov
jle
out
pop
sbb
mov
out
and
adc
xor
cmc
sbb
or
sub
sbb
sub
insl
sub
fsubrl
ljmp
ljmp
out
dec
sbb
es
lret
cmp
fisubs
xlat
pop
mov
repz
lock
popa
in
adc
sub
roll
or
inc
lret
cmpl
jl
aad
lods
test
lods
out
dec
std
test
adc
sub
dec
xchg
xor
xor
add
or
dec
and
and
inc
sub
sub
push
lcall
xchg
jmp
enter
aam
test
in
or
push
lcall
scas
mov
xor
out
mov
ret
outsl
cmpsl
je
enter
cmpsb
clc
sahf
mov
sub
ror
test
fmull
push
jb
repz
outsb
cmpsb
loope
mov
test
fldt
std
sub
jmp
push
push
sub
in
inc
iret
adc
jbe
roll
mov
leave
mov
mov
scas
fdivs
imull
adc
adc
mov
mov
lcall
popa
cmp
ds
push
pushf
out
and
test
and
cmp
dec
jne
dec
aam
loop
cmp
std
lods
lcall
insb
cmp
mov
inc
jmp
add
dec
add
ja
jp
mov
cmp
cltd
dec
test
test
add
jl
inc
lds
jbe
mov
mov
inc
out
xor
iret
add
mov
add
leave
cli
ret
mov
dec
pop
push
fwait
icebp
addr16
fidivrl
cli
lods
and
xor
setle
or
lret
imul
cmpsb
push
mov
fdivrs
scas
out
in
xor
dec
pop
out
cmc
ret
inc
adc
roll
sub
and
movb
dec
and
roll
xchg
add
sub
lods
shrb
dec
jns
jbe
mov
shrb
cmp
lods
stos
out
sub
cmp
fwait
push
dec
outsb
jg
cmp
push
jnp
or
lcall
mov
cmp
dec
sbb
add
dec
std
jns
popf
adcl
aam
xor
in
lret
ja
or
sub
push
movsb
sahf
sbb
out
sub
pop
mov
inc
push
test
xchg
in
or
nop
mov
outsb
aad
xor
xchg
or
pusha
push
dec
dec
push
sub
inc
test
jne
fnstcw
pop
xchg
inc
popf
rcrb
mov
sub
xchg
lret
adc
rorb
jne
inc
add
and
sbb
and
jge
push
pop
xor
jl
rorb
cld
pusha
fdivr
lahf
push
mov
aad
dec
dec
sbb
xchg
xchg
js
ficoml
pushl
mov
int3
lret
add
daa
push
ss
or
mov
push
cmp
in
fwait
aam
add
cld
sub
fwait
push
pop
or
fwait
and
pop
test
fwait
cmp
outsl
jecxz
dec
ljmp
or
pop
ret
jle
push
cmpsb
mov
fs
pusha
lret
jbe
adc
mov
or
shl
jl
cmp
addl
pop
mov
ja
pop
add
mov
pop
xchg
mov
mov
outsb
jge
data16
test
sarl
es
es
jecxz
push
sub
xchg
mov
inc
xchg
insl
mov
inc
in
cs
jnp
in
pop
xor
pop
pop
outsl
ficoms
fldl
stos
jne
push
pop
inc
mov
test
push
or
fwait
jge
dec
out
loopne
jno
xchg
shlb
call
dec
icebp
mov
iret
jns
xor
mov
subl
rcll
mov
push
mov
call
inc
loope
mov
sub
sbb
sahf
sbb
ljmp
adc
xchg
ds
fcompl
or
push
out
and
mov
flds
add
fsubl
push
mov
inc
les
xchg
ja
pusha
aam
xchg
aas
add
jl
les
mov
mov
popf
cmp
or
and
aas
mov
add
mov
sbb
jae
ret
and
mov
push
sub
out
or
xchg
ja
ss
scas
add
cwtl
adc
js
cmp
push
pop
dec
call
lea
scas
pushf
xchg
mov
clc
sub
sbb
shlb
xor
sbb
inc
pop
test
pop
pop
push
lock
add
jge
mov
loop
cmp
lret
push
adc
push
mov
inc
fldenv
addr16
rcrl
and
mov
mov
jp
xor
rorl
shll
popa
in
inc
gs
mov
and
push
cmpsl
push
popa
sbb
loope
mov
xchg
inc
cmpsl
daa
lock
push
dec
out
inc
call
addl
xchg
and
jg
jge
sbb
sbb
mov
fsts
jle,pn
mov
dec
sub
call
cmp
cs
rcr
int
dec
dec
popf
shlb
dec
test
push
je
out
inc
pop
jg
jge
arpl
mov
inc
packuswb
popa
iret
outsb
push
out
fisubrs
clc
add
jge
mov
xor
mov
call
lret
dec
std
mov
dec
cld
and
ljmp
std
dec
addr16
ficomps
lock
mov
or
dec
ds
cld
ret
mov
adc
sub
test
cmp
pop
mov
ds
cwtl
fldt
fnsave
mov
xchg
inc
cmp
inc
mov
out
cmp
pop
lahf
movsb
or
jp
xlat
inc
out
into
ss
movsb
adc
mov
loope
push
push
xor
outsl
bound
cld
ret
mov
fcomi
sub
and
xlat
mov
fiadds
push
xchg
push
jge
lods
movsl
icebp
jg
rorb
movl
adc
and
aas
or
leave
mov
ret
fmul
pop
test
mov
adc
decb
loop
sbb
lock
dec
xchg
sarl
mov
popa
push
dec
cmp
inc
sub
cmpsb
test
ftst
pop
rcrl
fwait
xlat
push
inc
jae
outsb
idivb
lahf
cmc
add
ljmp
es
mov
in
rorl
in
loopne
ret
nop
jae
jg
pop
mov
add
adc
outsl
cs
inc
dec
hlt
dec
testl
cmp
fs
inc
test
test
jmp
cmp
mov
cmp
cmpsl
dec
adc
stos
aaa
cmp
pop
out
scas
xchg
in
repz
les
or
mov
mov
sbb
dec
ror
inc
insb
push
xchg
pop
jecxz
aad
leave
add
sahf
xor
mov
and
mov
shl
outsl
stos
sub
adc
lea
mov
enter
jmp
das
daa
push
xchg
repnz
push
xchg
aad
cmp
in
or
popf
iret
mov
inc
sub
test
push
inc
sub
xchg
shll
push
or
fiadds
ljmp
jbe
sbb
lcall
pop
mov
dec
loope
cmpsl
fidivrl
sahf
xor
and
mov
xchg
cmp
mov
popf
fisubrl
icebp
int3
adcb
pop
fdivrs
sub
xchg
popa
ficomps
push
mov
inc
xor
dec
mov
out
sbb
push
stc
pop
ret
push
insb
and
sbb
in
push
and
cld
inc
xor
inc
push
and
shrb
subb
push
and
dec
inc
xchg
mov
gs
js
pop
in
add
or
sbb
mov
call
std
test
push
sub
inc
data16
jbe
les
leave
stos
mov
lods
stos
loope
mov
mov
movsl
out
cmpsb
inc
dec
xchg
imul
cmp
ss
pop
jge
xchg
push
loopne
filds
xchg
roll
jno
sbb
out
lea
test
add
stc
pop
lret
jbe
cmpb
mov
jo
stos
push
test
clc
sub
jl
mov
pop
outsb
gs
mov
jle
cmc
mov
push
stos
dec
in
out
jmp
push
outsb
xchg
push
or
shl
js
jp
loope
cld
mov
hlt
inc
rol
loope
shlb
add
popf
movb
lods
icebp
andl
cmpsl
movsb
daa
lods
cli
enter
lock
pop
repnz
add
rorl
repz
test
dec
dec
sarl
call
mov
data16
data16
adc
imul
test
fsubp
cli
bound
cmpsl
jmp
mov
andb
nop
repz
adc
xor
fcoml
std
call
insb
and
xchg
dec
push
mov
gs
xchg
in
popf
adc
cli
sbb
repz
ja
stos
popa
jp
jne
xchg
std
aaa
sub
andl
in
xchg
and
test
sub
imul
mov
scas
push
mov
pop
jns
inc
xchg
push
cmp
sub
jnp
inc
std
dec
jne
mov
xor
je
loop
addr16
pop
ss
hlt
notb
les
enter
inc
inc
cmpsl
jb
pop
push
dec
jl
divl
out
shrb
test
mov
mov
pcmpeqb
insb
xchg
mov
lods
xor
and
inc
js
inc
fldt
in
xor
jne
loop
testl
cmp
popf
icebp
addr16
mov
ljmp
xor
in
in
cmp
hlt
xor
cmp
mov
jp
int
jo
pop
dec
test
cmp
ret
lret
push
xchg
out
mov
mov
in
sbb
outsb
inc
dec
push
orl
mov
cld
mov
mov
std
idivl
aam
inc
xor
push
dec
negb
repz
imul
lods
lret
shll
loopne
test
ret
xlat
jo
xchg
testl
out
mov
mov
sbb
sarl
pop
jns
int3
dec
mov
pop
out
mov
xchg
ljmp
sahf
mov
inc
cmpsl
int3
dec
lahf
sub
sbb
or
mov
sbb
test
adc
lcall
hlt
xor
out
pusha
js
mov
lds
add
nop
ljmp
call
loop
inc
mov
imul
and
aas
cwtl
roll
sti
insb
fisttps
out
lcall
jb
pop
call
push
pop
xchg
arpl
jno
cld
cmc
xor
sbb
and
mov
fs
sbb
xor
or
xor
sub
xlat
inc
xor
add
cmp
rcl
push
shl
jp
sbb
rcrl
outsb
scas
cmp
lods
ret
test
mov
xchg
xchg
lods
jge
ss
dec
testb
lods
add
cld
bswap
fs
push
orl
loop
mov
inc
inc
in
lds
cmpl
out
lcall
mov
xor
cmc
fucomi
loopne
push
jg
jecxz
pushf
push
mov
in
mov
jmp
push
je
popf
jg
clc
fdivrs
test
and
push
inc
sub
mov
and
add
adc
fs
add
movsl
sarb
mov
sbb
pop
mov
adc
push
xor
mov
cld
ja
push
iret
mov
loopne
lea
pop
mov
lock
dec
xchg
stos
push
mov
bound
sub
shr
mov
les
jge
mov
gs
data16
call
dec
imul
movsl
jecxz
mov
adc
in
adc
test
and
aaa
mov
lret
aad
mov
mov
jg
in
xor
lds
ss
xchg
mov
add
int
pop
xchg
cmp
stos
or
into
lock
cmc
inc
or
fstps
pop
loop
push
sbbl
cs
bound
jecxz
dec
cli
stos
xchg
dec
and
es
jecxz
pop
xor
addr16
outsb
and
adc
shr
mov
dec
push
xchg
pop
popf
pop
mov
cmp
inc
push
push
jecxz
sub
cmp
scas
mov
jge
in
pop
mov
push
pop
loope
or
mov
mov
and
aas
cmpl
mov
fcompl
sbb
sbb
add
aam
push
xchg
popf
add
push
pop
sbb
push
out
push
mov
lcall
repz
jge
add
pop
int
int3
pop
mov
and
and
out
and
scas
cs
test
and
cmp
mov
sar
add
cmpb
pop
jmp
add
jbe
mov
cmc
adc
xchg
mov
call
inc
int3
cmp
repnz
mov
xlat
iret
xor
dec
xor
popf
clc
jns
push
sti
or
add
mov
movsb
mov
test
popf
test
in
out
roll
mov
mov
inc
pop
scas
cmp
mov
in
rcrb
cmpsl
int
ljmp
into
cmpsb
push
insb
je
dec
jne
cmp
div
jl
push
icebp
mov
and
pop
mov
jle
ja
enter
mov
jp
int
mov
or
loopne
cmpb
call
pop
jns
push
cld
xorb
je,pt
or
fildl
sub
push
and
fwait
jp
popl
xchg
cwtl
ds
iret
cmpl
mov
pop
xor
cwtl
xorb
inc
jecxz
lea
imul
inc
or
mov
shlb
pop
sub
fs
in
fldenv
out
cli
scas
sbb
fs
lods
fcoml
cmpsl
arpl
test
pop
push
adc
jo
iret
dec
inc
out
pop
sub
orb
mov
pop
shl
cwtl
pop
rolb
mov
push
mov
cmpsl
es
jns
mov
repz
adc
movsl
push
xchg
stc
jbe
dec
mov
sarl
jno
push
scas
fwait
or
inc
sub
rclb
outsl
add
inc
xor
cmpsb
dec
jmp
fiadds
repnz
pop
sbb
jno
jo
jae
or
test
mov
fsts
cmp
mov
popa
rcrb
pusha
and
fwait
mov
jo
imul
push
adc
jl
inc
out
pop
dec
rorb
jns
xchg
and
pushf
je
pop
xor
push
sub
add
call
push
repnz
les
icebp
mov
repnz
lret
stos
arpl
ror
lods
movsl
pop
cld
iret
test
mov
xor
sub
jmp
ffreep
xor
jbe
icebp
jmp
sahf
pop
xor
shrb
xchg
push
rol
jbe
sbb
lods
ss
lods
sub
int3
pop
xchg
jns
and
clc
inc
scas
shr
dec
jp
loope
fidivrl
cli
shr
inc
cmpsl
es
frstor
insl
call
fmuls
xchg
hlt
scas
lret
sub
inc
int3
xor
and
jno
sbb
lret
orl
xchg
cli
dec
clc
xchg
push
les
xchg
and
push
test
mov
shrb
cmp
test
mov
lcall
es
cmpsl
xchg
mov
btr
jnp
cmc
mov
divl
int
ja
lret
je
push
add
cmp
pop
mov
sub
ret
test
loope
add
xor
cmp
into
inc
loope
mov
fsts
sub
test
adc
imul
dec
mov
cli
sar
mov
stos
sbb
cmp
xor
insl
inc
gs
fldl
popf
in
cli
mov
dec
and
pushf
sbb
cmp
fidivs
rolb
mov
out
daa
jae
and
lock
clc
test
push
les
pop
jge
daa
mov
cmp
inc
aam
pop
lea
add
mov
cmp
xor
lea
push
adc
out
test
push
dec
scas
jns
xchg
jmp
and
jmp
jb
out
sar
cmp
xchg
push
xchg
mov
popf
mov
lret
sub
shll
adc
adc
mov
movsl
sbb
cmp
sub
out
pop
clc
mov
aam
mov
ficoms
dec
mov
into
jle
in
test
in
cmp
imul
dec
push
aas
jne
push
pop
xor
xlat
push
and
out
adc
mov
sbb
fdivrs
jmp
fdivrs
or
hlt
je
outsb
jmp
jge
jl
icebp
jp
jne
pusha
hlt
sbb
pop
mov
jp
push
adc
nop
ret
cmp
pop
movsl
hlt
or
enter
loope
popf
ret
lret
out
sti
insb
test
push
out
sub
out
fisttpl
push
and
pop
test
jo
loope
aad
lods
xchg
pop
adc
movsb
out
pop
loopne
out
xlat
mov
mov
mov
xor
mov
pop
and
dec
daa
sub
or
inc
pop
jmp
out
cmpsb
and
mulb
mov
sub
jnp
add
fstl
push
pushf
add
outsw
push
movsl
jl
test
mov
out
cltd
cli
mov
cmp
xchg
icebp
mov
hlt
fstpl
mov
xchg
movsb
sahf
aad
push
movsl
and
js
push
ret
or
mov
xchg
pushf
cmpsl
js
std
or
add
insl
xchg
mov
test
xchg
shl
test
arpl
adc
jo
xchg
imul
push
push
adc
jns
jg
mov
in
enter
lcall
or
addr16
pop
push
cmp
cld
add
mov
stos
mov
sbb
lods
fstpl
test
xor
jmp
addr16
or
cmp
in
lcall
add
lods
adc
mov
shlb
lret
negl
xchg
jl
xor
adc
or
scas
inc
arpl
mov
mov
out
cmpb
mov
jle
adc
scas
push
popa
or
pop
push
inc
inc
std
pop
sub
repz
mov
push
sbb
loope
mov
inc
imul
repnz
and
ret
pop
inc
es
push
xor
mov
ret
cld
cmc
ja
pop
mov
test
out
icebp
test
or
imul
leave
sahf
sbb
jo
xor
ret
xor
dec
cmpsl
xchg
xchg
sahf
sub
lds
inc
iret
xor
xor
add
sub
mov
les
jbe
mov
dec
insl
mov
leave
cmp
add
imul
repz
repnz
pushf
add
cli
or
cmpsl
arpl
dec
push
les
stc
out
cli
sub
inc
mov
out
fwait
push
rclb
pop
push
mov
cmp
jp
xorb
sbb
jae
add
je
es
jbe
lods
popa
jge
xor
scas
aas
jge
pop
pop
ljmp
jecxz
mov
hlt
mov
pop
das
xor
fiadds
lods
les
push
add
dec
mov
dec
pop
dec
mov
std
jmp
pop
xchg
shll
sub
in
cli
fstps
lahf
push
push
jl
jle
mov
lods
popf
jmp
outsl
cmp
sbb
mov
sub
jg
push
pushf
popa
and
and
jp
inc
gs
mov
mov
pop
cld
pop
xchg
lds
mov
cmp
jnp
jp
out
add
sub
aas
or
jg
mov
scas
lahf
pop
fstpl
repnz
inc
into
inc
dec
cmpsl
arpl
daa
cmp
out
mov
pop
flds
inc
inc
mov
add
cmp
loop
inc
ror
sub
mov
addr16
push
insb
mov
mov
aaa
out
test
nop
fs
int
and
dec
add
cli
jmp
rorb
bound
cmc
rol
inc
mov
fsts
mov
daa
inc
mov
inc
jl
fisubs
inc
sub
mov
jmp
or
mov
js
loope
or
cmp
imul
pusha
and
push
sub
scas
jno
call
inc
xor
mov
mov
dec
and
mov
inc
lea
int
adc
and
pushf
shl
pop
in
inc
adcl
fcoml
pop
dec
cmp
add
pusha
pop
push
enter
add
cmc
ds
mov
push
pop
inc
add
aam
mov
xchg
sub
mov
adc
push
cmp
cmpsl
pop
add
xchg
cld
icebp
jno
out
jg
mov
int3
sbb
test
sbb
or
pushf
adc
dec
movsl
lahf
jb
adc
icebp
xor
mov
test
push
cmc
das
sub
or
daa
mov
pop
push
mov
imul
test
loop
test
mov
shrl
inc
jae
pop
insb
in
pop
pop
mov
lcall
addr16
push
inc
out
sbb
pop
dec
mov
xchg
aas
mov
xor
jne
inc
popa
lods
pop
clc
decl
pop
inc
repz
mov
outsb
adc
push
xchg
sbb
in
fs
cmpl
push
cmp
push
push
in
mov
and
ret
jp
mov
hlt
jle
mov
pop
add
pop
pop
out
les
aas
fldl
sti
insl
xchg
popa
inc
inc
rorb
int
in
pusha
cmp
cwtl
cwtl
push
scas
rcrl
and
icebp
and
mov
bound
sbb
mov
xor
pop
inc
push
mov
push
andb
cmp
in
and
mov
jbe
add
nopl
xchg
push
out
fsubr
pop
mov
mov
filds
lcall
inc
daa
cmovnp
mov
div
std
inc
dec
sbb
adc
lods
fucomip
xchg
test
rcrl
cmp
sbb
pop
nop
test
jmp
clc
test
push
std
adc
call
ljmp
and
push
lea
test
in
sub
mov
push
push
push
lea
xor
inc
xor
adc
xchg
jbe
in
lret
sbb
mov
mov
push
jp
out
adc
dec
sub
pop
mov
stos
mov
add
push
test
ljmp
in
es
add
scas
pop
inc
push
mov
insb
jb
jbe
sahf
jle
sti
imul
adc
inc
popf
sbb
and
in
cmp
lret
jo
outsl
mov
xor
add
pushf
xor
inc
sbb
push
xor
cmpsl
ret
lret
aas
js
lcall
xor
fisttps
pop
or
dec
sbb
xchg
and
mov
scas
lcall
arpl
jne
mov
ffree
ret
jmp
in
lcall
leave
push
jecxz
jnp
xor
mov
xchg
aas
sbb
jns,pt
jecxz
test
mov
pop
aam
and
adc
je
sbb
lret
xchg
fdivrl
jle
cmc
mov
sbbl
daa
xchg
sarb
addl
push
add
adc
mov
push
stc
lret
in
lea
dec
inc
scas
ficoml
jp
mov
orl
sub
rol
jns
mov
push
dec
mov
ljmp
std
mov
xchg
loop
dec
inc
pop
push
ljmp
pop
mov
inc
test
in
jecxz
cmpsl
jbe
dec
or
push
sub
scas
outsb
call
in
in
imul
lods
push
lret
test
mov
sub
add
inc
dec
push
push
arpl
lea
pop
shll
aas
sti
jg
dec
mov
addr16
add
mov
adc
cmp
rcr
sub
push
mov
out
int3
insb
or
out
pop
adc
orb
or
ja
fsub
push
scas
or
mov
or
fldt
mov
cmovns
cld
add
movsl
stos
inc
in
jb
fwait
or
xchg
xchg
sub
jp
mov
mov
add
into
lea
sub
divb
mov
cmc
testb
push
cwtl
jp
scas
sub
adc
mov
loopne
lret
rorl
cmp
mov
xor
pusha
pop
aas
mov
hlt
test
add
inc
push
cwtl
dec
cltd
mov
popa
pop
jle
mov
adc
sahf
or
rcr
pop
loope
xor
adc
fisubrl
in
dec
das
stos
sub
inc
rolb
mov
push
les
repz
stc
xor
stc
divl
and
sub
and
jae
inc
jl
shrd
xor
mov
dec
lods
icebp
cmp
imul
aaa
sub
dec
jge
dec
push
dec
insl
mov
lods
xchg
jmp
aam
xchg
jg
cmp
test
add
mov
insb
pop
leave
leave
jecxz
std
movb
inc
shrl
mov
mov
add
mov
push
out
das
jge
add
ja
xchg
fwait
jne
mov
mov
ret
xchg
cmc
xchg
fld
sbb
jecxz
aad
rcr
out
iret
mov
sarl
cmp
aam
sbb
inc
out
inc
insb
or
rclb
cmp
aaa
leave
inc
addl
and
lods
aas
sub
aam
outsb
out
test
mov
add
pop
cs
shrl
nop
mov
pop
lock
jb
ret
imul
lock
fmul
out
pop
and
lods
inc
fdivl
xor
roll
loopne
jmp
adcl
inc
decb
jp
xchg
mov
pop
jl
pop
ret
inc
mov
pop
cmp
inc
sub
xchg
das
fstpt
movsl
cwtl
frstor
pop
jp
repz
pushf
clc
and
lods
lods
push
push
mov
pop
pop
dec
lret
nop
xchg
xchg
mov
push
loopne
scas
adc
xchg
cltd
test
fwait
mov
push
sti
enter
mov
out
hlt
aam
sub
repz
dec
fisubrs
insb
mov
jb
arpl
inc
lahf
lret
push
xchg
mov
sub
or
xchg
out
je
fsts
ret
dec
aad
test
pushf
out
scas
out
daa
xor
and
fistps
insl
loope
lods
or
ret
into
xchg
jl
push
xor
push
out
imul
loope
loopne
mov
pop
ret
scas
aaa
push
jl
pop
mov
xchg
xchg
gs
cwtl
je
pop
bnd
pop
mov
dec
iret
jns
mov
sub
jno
mov
mov
jle
gs
cmp
cmp
add
sarl
sub
push
xchg
out
mov
push
lcall
arpl
aad
mov
mov
cmp
push
cmpsb
mov
pusha
and
xor
jp
mov
jecxz
push
sbb
add
mov
adc
int3
mov
fcomi
jp
push
loop
mov
cwtl
aas
add
jge
cli
cmp
lcall
mov
clc
adc
sub
call
fisubrs
leave
pop
fs
stc
and
and
loop
in
aas
aam
ds
icebp
in
fstp
cmp
xor
mov
mov
xor
sahf
es
push
xchg
ds
lods
and
rolb
shrl
cld
lret
gs
push
cmp
aam
push
mov
and
mov
pop
add
push
in
mov
cmpsl
mov
push
pop
stos
pop
dec
fistl
and
xlat
and
mov
aad
mov
push
cli
or
mov
cmp
addl
push
ror
push
lretw
out
mov
xchg
sbb
sti
stc
cmp
in
inc
scas
or
pop
mov
in
cmp
adc
or
push
xchg
mov
xchg
sar
call
into
and
sahf
xchg
push
push
or
in
mov
or
scas
push
dec
divl
mov
jecxz
cmp
lods
xchg
push
sbb
mov
pop
xor
or
push
mov
and
sbb
mov
sub
mov
and
adc
and
jno
out
inc
out
mov
sahf
cld
xchg
add
cli
jo
cmp
xchg
test
mov
mov
sti
loope
lahf
dec
fldcw
repnz
jnp
sub
out
pop
pop
cmpsb
les
lock
mov
cmpsl
jae
stos
shr
and
fldlg2
cmp
xor
sub
pop
mov
or
enter
dec
adc
jl
iret
call
xor
mov
pop
inc
mov
ss
xchg
mov
fildll
adc
ss
rorl
sahf
dec
out
xor
fwait
lods
sub
arpl
and
stos
bnd
setg
loop
mov
mov
cs
adc
xor
jo
sarb
movsl
negl
aaa
outsl
push
and
dec
insl
in
xchg
inc
push
or
jg
fnstsw
repz
lods
push
mov
insl
pop
mov
xchg
icebp
loope
sub
jbe
add
push
aaa
testb
test
fnsave
or
dec
add
ret
add
add
mov
mov
jnp
mov
addr16
popf
jge
dec
mov
test
out
push
mov
xor
imul
push
mov
stc
mov
es
imul
push
pop
pop
sbb
je
sbb
outsl
aas
addr16
xchg
ljmp
jle
das
into
sahf
push
sub
jmp
sub
scas
data16
ljmp
insl
mov
cmpsl
sub
xor
dec
lret
add
cwtl
in
es
stos
je
mov
jmp
daa
iret
jbe
imulb
or
push
aaa
icebp
pop
insb
sahf
sub
cli
rcll
in
pop
jno
pushf
call
std
inc
rolb
ja
lcall
xor
iret
fs
jns
ret
mov
mov
loop
pop
or
and
mov
cwtl
in
scas
adc
cmc
rcrl
push
xor
jl
jnp
add
dec
xor
sub
cmpl
cld
and
in
mov
mov
sbb
lret
dec
shr
rcr
xlat
pop
shlb
mov
gs
jmp
ret
fiadds
mov
js
into
outsl
sbb
insb
shrl
lret
in
jp
lock
or
or
call
jne,pn
add
out
fs
pop
int
aam
pop
hlt
iret
pop
lods
inc
fiadds
xorb
adc
shrb
mov
dec
or
cmpsb
cmpsl
dec
adc
mov
in
ja
mov
roll
test
mov
imul
movl
in
je
jbe
mov
aam
mov
dec
jge
jp
addr16
icebp
push
jb
cltd
ds
xor
lea
xchg
cmpsb
jb
lahf
fidivs
inc
dec
ret
les
push
mov
ret
outsl
sbb
jb
outsb
out
leave
fadds
ljmp
bound
in
fmull
pop
hlt
pushf
call
cmp
lcall
lock
movsb
xchg
dec
sbb
push
pop
cwtl
loopne
subb
lea
test
mov
mov
shl
outsl
dec
test
pop
hlt
pop
jp
xlat
add
xchg
and
aaa
leave
inc
sub
xchg
out
sbb
push
inc
sbb
and
sub
jns
add
pop
shlb
cwtl
dec
mov
sbb
and
xchg
adcl
lods
popf
sub
mov
fld
mov
js
cmp
jg
pop
outsl
notb
mov
or
adcl
dec
clc
lods
sbb
jno
add
push
hlt
imul
faddl
mov
int
mov
cmp
cmp
test
mov
add
ret
bound
inc
jo
sbb
and
sbb
cmp
sarl
sub
sti
pushf
push
hlt
lods
mov
stc
or
cmp
clc
jb
inc
add
iret
addl
imul
and
mov
ret
or
fiaddl
sbb
sbb
push
les
pop
mov
xchg
cmpsb
ja
push
cli
xchg
pushf
adc
dec
xchg
dec
xchg
and
pop
ret
xor
dec
test
decl
call
sub
inc
out
pop
arpl
cmp
loop
mov
or
repnz
push
dec
or
and
into
clc
cmpsb
mov
inc
mov
addr16
cmpb
daa
rclb
fistpll
movsb
add
testl
lods
leave
jae
or
and
in
inc
mov
or
xor
movsb
sub
enter
xchg
imul
es
xor
add
cmp
xor
mov
dec
dec
xchg
fidivs
sti
cmp
lock
fcoms
inc
cmc
push
lret
fdiv
or
int
add
mov
sub
ja
cwtl
outsb
add
xchg
fcoml
xlat
aam
loope
push
jno
push
mov
outsl
xchg
enter
sbb
lahf
jns
or
mov
mov
dec
inc
loope
lcall
int3
sub
xchg
pop
imul
xchg
int
or
jp
dec
dec
add
inc
cmp
mov
das
leave
push
mov
outsl
jne
xchg
aas
cmp
fisubrl
pop
shll
inc
xor
adc
loop
fwait
pushf
and
cld
data16
mul
shl
mov
dec
xor
insl
icebp
mov
lahf
icebp
stos
dec
jnp
jno
dec
dec
mov
sbb
xchg
xchg
mov
sbb
sub
lds
xchg
or
push
xchg
std
or
out
clc
cmp
in
jecxz
jle
pusha
popa
cmp
add
fdiv
mov
stos
outsl
ljmp
addr16
inc
push
in
mov
mov
and
sub
cltd
icebp
icebp
cmp
into
pop
sarb
mov
inc
and
lahf
push
push
aas
je
adc
outsb
push
push
xchg
out
xchg
mov
fs
pushf
lds
xchg
ret
sbb
js
or
aad
incb
mov
mov
cmp
adc
data16
mov
mov
in
inc
jae
ret
ret
xchg
inc
mov
lods
orb
jg
cmp
xchg
ret
mov
and
push
aas
xchg
out
xchg
movsb
pop
jns
ljmp
mov
add
dec
push
rolb
aad
mov
ret
pop
cmpsb
or
pop
ret
or
es
lret
out
sub
mull
xor
enter
into
enter
dec
sub
xlat
pop
sub
xchg
mov
vmovaps
jmp
jg
outsl
sub
or
or
test
push
inc
push
jl
iret
mov
subb
or
mov
mov
jbe
fdivrl
mov
out
or
out
jb
addl
leave
or
add
sub
xchg
dec
imul
lret
int3
test
pushf
jg
adc
test
jne
jne
or
or
jae
pushf
sbb
leave
sti
push
and
xchg
sub
insb
xchg
clc
pushl
jl
cmp
push
pop
cwtl
sub
roll
in
jl
mov
xchg
jne
mov
sub
in
insb
push
in
cwtl
push
loop
aas
xchg
fwait
das
cli
arpl
lahf
in
jo
pop
jno
push
mov
movb
push
jns
insb
lock
outsb
push
or
jecxz
mov
das
sbb
stos
divb
sarb
xor
push
jne
rol
repnz
faddl
sub
pop
xchg
es
ret
push
out
mov
out
mov
aas
fisttpl
rolb
fisttpll
adc
mov
pop
cwtl
push
push
stos
mov
add
mov
adc
sbb
jp
xor
xor
jl
out
sti
shl
mov
aas
xchg
loope
fidivs
pop
sahf
fisubrs
mov
decb
in
or
lods
cli
sbbb
lods
inc
push
mov
lahf
lahf
mov
fnstenv
outsb
ret
pop
xlat
dec
sub
jae
dec
jb
or
mov
dec
stos
jl
jp
test
and
adc
dec
push
jp
iret
fisubl
or
push
je
arpl
dec
jle
jmp
jbe
mov
push
sub
cmpsl
ret
cmpsl
mov
cmp
pop
adc
pop
lahf
je
mov
imul
das
jno
enter
jo
jno
dec
xchg
outsb
in
mov
push
push
pop
pop
sar
jmp
jmp
jns
or
jl
scas
xor
popf
xchg
sbb
xchg
pop
jecxz
js
js
pop
adcl
jle
stos
jecxz
xor
gs
ret
stos
mov
jmp
xchg
repz
jg
subl
cwtl
xchg
outsb
inc
stos
hlt
or
clc
mov
dec
jg
test
mov
std
add
sub
adc
jae
gs
jns
jecxz
sbb
jle
cmpsl
mov
or
push
and
negl
inc
sub
push
or
test
insl
ljmp
mov
cwtl
and
mov
and
roll
xchg
lods
lahf
cwtl
fstps
outsl
imul
pop
int
xchg
pop
sub
stos
pusha
jle
jecxz
movsl
js
xor
lahf
stc
scas
push
mov
jg
xchg
sbb
jle
push
mov
push
fildl
xchg
pop
cmp
xor
add
and
jmp
sub
repnz
sub
push
xor
xchg
popa
cli
and
mov
xchg
js
cmp
fxam
adc
jae
xchg
lea
out
sarl
add
int3
mov
aas
pop
int
jmp
dec
xchg
or
test
xchg
out
inc
lock
clc
mov
popa
push
loop
lret
cwtl
pop
addr16
out
mov
and
mov
xor
out
mov
dec
inc
dec
mov
jmp
mov
jle
pop
mov
jge
or
faddl
jmp
sub
loope
dec
punpcklbw
jle
stos
daa
xor
adc
loopne
leave
insl
sbb
push
dec
pop
test
popf
pop
aam
mov
pop
loopne
shrl
push
fwait
jae
scas
fiaddl
out
fadds
pop
pop
mov
insl
mov
push
push
adc
sub
pop
ja
addr16
xor
fistpl
inc
loope
es
ja
mov
fnsave
adc
in
loop
sub
clc
test
lret
lahf
jp
jo
push
outsl
ror
sahf
inc
xor
and
xorps
mov
push
xchg
repz
mov
addl
sbb
mov
dec
cld
cmpsl
lds
push
inc
sub
insl
xchg
ss
popa
push
jae
dec
test
mov
or
movl
loopne
and
add
and
in
mov
out
mov
sub
jne
adc
add
push
sub
add
std
mov
ljmp
test
lret
xchg
sub
cld
mov
dec
jle
lock
adc
bound
imul
lret
rol
cmp
enter
xchg
mov
mov
sub
int3
push
mov
xor
test
ret
cltd
imul
mov
and
scas
in
repz
fmull
mov
ljmp
andb
or
xor
mov
das
addr16
sub
inc
cli
fstl
cmp
push
out
xchg
mov
lods
stos
jl
mov
scas
ret
stc
pop
in
stc
and
es
test
insb
fstl
push
dec
out
sahf
pop
call
cmp
fwait
in
pop
pop
negb
cmp
out
xor
and
cltd
andl
inc
xor
popf
cmp
stos
lret
fistps
add
pop
fists
mov
divl
iret
subl
test
push
addr16
lahf
gs
aas
gs
dec
lret
xchg
shll
cmp
adc
cmp
push
dec
adc
xchg
pop
mov
ljmp
lret
addr16
divb
or
orb
mov
ret
cmp
push
cmp
mov
mov
cld
push
xchg
or
mov
jge
and
rorl
les
cmpsb
pushf
lret
in
lock
inc
xchg
mov
mov
jns
dec
mov
push
mov
jge
ja
xchg
imul
adc
in
sbb
push
repz
mov
insb
mov
roll
xor
xor
bound
loopne
cld
sub
pop
adc
stc
push
jl
mov
dec
sahf
cmp
mov
scas
jmp
in
mov
dec
test
mov
cs
fisubrs
xchg
jnp
aam
rclb
stos
inc
cmp
out
cmp
cld
mov
leave
adc
cmp
test
arpl
arpl
push
clts
lahf
fwait
in
jmp
push
popa
pushf
aaa
ds
repnz
xor
add
bound
mov
test
aaa
cmp
fwait
sbb
aad
push
lock
cwtl
and
mov
addr16
lock
push
cs
add
mulb
inc
insb
push
lcall
shlb
lahf
and
cmpsl
cld
xchg
xor
outsb
xor
ret
pop
mov
lods
cmc
addr16
cltd
inc
mov
dec
xchg
add
adc
hlt
aam
jns
stos
push
dec
insb
aaa
or
jae
adc
jo
fstp
test
cmp
rcll
mov
sub
or
aam
cmp
out
inc
and
inc
cmp
add
dec
out
xchg
jmp
adc
lret
les
push
loope
sub
cli
es
push
xchg
sbb
leave
pop
adc
pusha
insb
imul
imul
pop
lock
pushf
aas
jae
ja
fcmovnb
jl
pop
jae
sahf
cmc
test
xchg
mov
or
pop
inc
sbbb
sub
push
mov
in
push
outsb
inc
mov
cltd
ja
sbb
fcmovne
lds
arpl
popl
pushf
fucomip
fwait
sub
sbb
sub
push
push
orl
cmpsl
hlt
cmc
outsl
andl
fcompl
pop
int
popa
dec
cltd
je
add
lret
ret
in
push
popa
shrb
inc
add
xchg
and
mov
pop
push
stos
pop
xchg
lds
movsb
inc
movsl
aas
addr16
or
in
adc
popf
fwait
xlat
mov
xchg
add
int3
test
out
add
es
xchg
sbb
ret
pushf
push
pushf
outsl
cmp
add
pop
mov
jb
jnp
jnp
in
add
cmp
loop
or
fisttpl
shll
in
daa
xor
add
icebp
add
jl
fwait
in
push
out
sub
inc
inc
or
ja
enter
adc
sahf
pop
mov
mov
pop
mov
adc
adc
ljmp
mov
sbb
out
popf
addr16
scas
stos
jno
mov
scas
repnz
sub
xchg
jmp
mov
inc
jmp
dec
push
inc
cmpsl
xchg
lahf
imul
ljmp
dec
repz
insl
test
adc
push
movsb
jns
data16
mov
fcoms
adc
loope
push
mov
sbb
mov
jmp
or
insb
mov
mov
sub
push
jbe
push
lds
cmp
aaa
mov
xchg
in
mov
sarl
fisubl
mov
divb
insl
sub
xchg
ja
std
stos
insl
movsb
mov
mov
sti
cmp
push
rep
into
aam
and
adc
lock
adc
rorb
xor
pop
mov
loop
sub
jae
in
cltd
xor
bound
mov
pop
rcl
outsb
dec
mov
loope
nop
dec
ja
sbb
sbb
dec
adc
movsl
scas
push
aas
mov
orl
insl
add
mov
and
es
outsb
jno
sub
idivl
lahf
ja
je
int3
push
fisubs
test
insb
mov
ss
push
xchg
xchg
xor
sub
sbbl
and
jg
ja
dec
mov
lcall
rorb
push
lock
adc
mov
inc
mov
mov
mov
loop
stc
test
or
pop
sbb
shl
lods
xchg
js
pop
int3
das
test
pushf
mov
aad
lock
mov
cwtl
cmp
divl
fwait
pop
adc
daa
mov
jmp
mov
dec
les
loop
popa
icebp
loopne
jnp
loopne
icebp
push
adc
dec
sbb
and
mov
int
je
or
push
fldcw
adc
shr
cmp
mov
out
fidivrs
and
mov
cmp
mov
mov
insb
mov
jns
fiadds
ffree
mov
loopne
out
mov
or
inc
adc
fldcw
sub
int
mov
out
sti
pusha
test
sbb
or
ss
push
pop
cmc
fwait
jb
jno
inc
insl
ret
hlt
cmp
pop
imul
and
adc
jge
push
xlat
mov
cmc
xchg
lcall
fucom
xor
mov
sbb
and
imul
fsubrs
out
jae
je
and
sbb
mov
fs
outsb
inc
and
arpl
xchg
xor
xor
jb
xor
nop
dec
adc
pop
pop
push
dec
xor
fsubs
popf
stc
imul
mov
add
into
mov
sbb
sbb
lea
icebp
lahf
dec
xchg
sti
and
push
add
mov
ljmp
rcr
loop
out
call
add
into
cld
cs
mov
imul
lods
jmp
sbb
mov
sub
test
xor
sti
xor
cmp
ss
ljmp
add
inc
adc
pop
inc
mov
lret
mov
dec
jne
stos
push
das
mov
out
xor
xor
xchg
jns
and
out
mov
ljmp
mov
pop
pop
daa
dec
imul
rolb
jge
subb
adc
xchg
sub
enter
cli
fwait
mov
arpl
outsb
aas
cmp
mov
push
adc
bound
movsl
fwait
dec
inc
pop
cmp
inc
into
sub
jle
nop
dec
in
add
fidivrl
add
lcall
lods
in
pushf
sub
push
int
jno
notl
add
icebp
inc
dec
je
adc
mov
mov
mulb
adc
and
mov
test
or
push
push
insl
inc
mov
lcall
mov
inc
cltd
pop
push
ljmp
or
dec
cmpsb
xor
xor
repz
xchg
xor
and
push
ret
xchg
push
inc
fnstcw
jae
xor
add
mov
push
xor
out
lret
test
loop
ljmp
or
rorb
or
mov
idivb
call
insb
pop
in
jl
cmpl
daa
inc
out
repz
fsubl
add
adc
mov
xlat
xor
mov
minps
sarb
fdivs
and
xlat
fdivp
cmp
xchg
cmp
rclb
jno
daa
les
inc
dec
ss
test
xor
movsl
or
push
dec
mull
jg
leave
into
sub
cmc
test
mov
push
pop
sahf
call
jmp
mov
mov
fld
adc
sub
repz
ficomps
into
adc
cmpl
daa
in
sub
mov
sahf
mov
nop
lret
test
push
fnstcw
jge
and
cmp
repz
int
mov
adc
inc
aaa
enter
mov
fmul
lret
shl
add
pop
js
xchg
mulb
xchg
mov
mov
inc
daa
adc
sti
fs
mov
jo
adc
int
jbe
mov
jle
ret
push
inc
xchg
add
in
cmpsb
pop
mov
cmp
mov
xor
js
cmp
adc
inc
mov
fisubrl
stos
xchg
push
add
arpl
popa
mov
mov
fcom
nop
xor
adc
js
roll
cmp
or
inc
lods
jns
xchg
or
fnsave
adc
repz
dec
pop
mov
xchg
daa
lea
fistpl
test
pop
pop
xor
lods
cmpsl
pop
repz
lcall
jno
or
insb
mov
mov
mov
into
mov
push
sub
xor
cmpsb
mov
mov
out
cmp
mov
mov
push
dec
sarb
and
adc
sbb
xor
mov
lret
pop
cwtl
lods
jns
aad
and
jg
js
push
jmp
bound
pop
xorl
or
jne
out
iret
mov
insl
push
arpl
jecxz
xlat
in
dec
imul
dec
or
xchg
fdivs
fmull
lret
movsb
mov
xor
sbb
hlt
lock
rcrl
ds
repnz
loop
fcmovnu
add
pop
aam
shl
dec
sbbb
pop
cltd
cli
or
xchg
aad
sbb
sahf
fs
ret
popf
out
and
xlat
sub
lahf
inc
jo
mov
and
pop
arpl
out
xor
dec
imul
push
iret
pop
lret
add
shll
inc
or
xchg
mov
jne
pop
aam
mov
dec
mov
jae
jnp
ror
enter
dec
inc
sahf
push
xor
lahf
jl
icebp
push
lahf
and
pop
or
inc
cmpsl
in
adc
rolb
or
sub
and
lahf
add
mov
mov
sbb
xchg
push
or
xchg
iret
pop
test
andl
sahf
rorb
pop
adc
hlt
int3
pop
stos
icebp
inc
pop
cltd
mov
ds
rorb
clc
mov
lds
mov
imul
pop
imul
hlt
sbb
popa
inc
and
sub
rol
or
sbb
aaa
arpl
jae
inc
pop
and
fsubp
pusha
cli
inc
test
cltd
inc
push
or
loop
mov
inc
aas
hlt
adc
dec
pop
es
sbb
rcrl
mov
push
js,pt
sub
fdivp
push
or
add
xor
inc
dec
test
lods
clc
xchg
add
push
arpl
and
shlb
adc
mov
mov
cmpsb
mov
mov
lods
cwtl
iret
jb
xor
stos
push
mov
int3
sub
jne
shrb
nop
mov
and
pop
ss
sub
cmpsb
repnz
out
sbb
lods
cld
pop
dec
ffree
inc
incb
pop
push
pop
mov
cltd
ffreep
adc
sbbb
jno
push
nop
add
arpl
fisubl
inc
jmp
jno
and
icebp
cmpsb
mov
bound
loopne
data16
nop
scas
in
ja
fmull
cwtl
jae
cmp
ficomps
xor
cmc
ljmp
es
xchg
lret
xchg
dec
adc
insb
jbe
lahf
xchg
inc
or
xchg
cld
loope
mov
in
mov
sub
adc
or
jbe
jp
jecxz
push
jl
push
jle
and
out
in
jnp
dec
xchg
pop
rclb
sub
cmc
out
mov
ret
jg
pop
mov
cmpb
add
mov
mov
popf
test
cltd
jge
mov
jo
or
lret
cltd
inc
add
negb
inc
or
adc
xchg
sbb
push
mov
ss
dec
dec
in
or
and
pop
mov
inc
std
mov
sub
std
jmp
mov
sbb
inc
loopne
inc
adc
bnd
sbb
fldt
outsb
mov
inc
test
sahf
dec
test
xchg
in
sub
sub
cwtl
std
inc
dec
fmuls
aas
xchg
inc
dec
add
ss
dec
jbe
cmp
sbbl
cmpsl
loope
sti
adc
sbbb
outsb
mov
scas
scas
sti
xchg
dec
mov
mov
xchg
lret
mov
dec
das
movsb
push
daa
cmp
mov
out
dec
int3
push
jmp
mov
in
fs
pusha
jns
in
mov
xchg
push
xor
int
mov
loope
mov
push
xor
push
add
mov
mov
repnz
push
mov
and
sub
and
mov
cltd
in
dec
dec
jne
idivl
lods
outsb
mov
cmp
adc
and
mov
xor
mov
mov
outsb
pop
or
mov
test
mov
or
mov
insl
push
pop
jnp
fisttpl
sbb
inc
or
pop
push
scas
mov
shlb
ds
jne
arpl
fs
mov
stc
scas
mov
lods
incl
das
stos
cmp
cs
mov
daa
add
pop
mov
push
out
sub
lock
dec
mov
repz
sub
in
push
fdivl
sbb
push
fidivl
pop
dec
or
aas
clc
into
gs
jbe
dec
aad
inc
xchg
push
or
push
aam
cmpsl
and
out
fiadds
add
push
sbb
push
repz
mov
xor
lea
mov
and
mov
mov
or
sahf
or
adc
repnz
push
pushf
add
scas
ret
test
in
mov
fmuls
add
or
ds
lret
cmp
aas
xor
scas
es
test
sub
dec
jo
test
jmp
pop
pop
int
icebp
daa
xlat
xchg
int3
stc
pop
rorb
pop
mov
fwait
inc
clc
cmp
hlt
imul
lea
xchg
in
jmp
jle
repz
push
movsb
out
out
inc
sub
out
lods
mov
xchg
cmpsl
or
xor
pushf
arpl
int
sub
xor
jg
mov
push
pop
test
xor
idivl
movlps
pusha
mov
out
cmp
mov
fs
js
xchg
in
in
or
add
pushf
jo
stos
pop
repz
sbb
cmp
add
sahf
aad
and
add
mov
hlt
add
inc
sub
or
outsb
xchg
xor
sbb
xchg
push
addr16
and
jmp
adc
lods
adc
loopne
test
int3
fld
scas
and
shlb
mov
test
pop
xchg
ljmp
inc
sbb
pop
mov
xor
xchg
xor
insb
cmp
push
rcl
push
mov
lds
imul
sbb
inc
lods
lahf
sbb
push
cli
push
in
sti
sahf
add
cmpsl
mov
mov
sti
mov
ret
mov
xor
fwait
stc
adc
xchg
cld
pop
cmp
cmpsb
mov
stos
mov
inc
or
dec
add
fdiv
sbb
lcall
stos
ds
mov
add
adc
test
lods
jp
sti
fcoms
cmpsl
leave
std
into
cwtl
outsl
das
mov
out
out
lret
lea
lods
fcoms
mov
push
into
inc
fnsave
push
ds
mov
sub
jle
fwait
push
or
iret
fisttpll
xchg
insb
in
clc
push
ficomps
add
sub
or
xchg
adc
icebp
mov
cli
rolb
sub
mov
pop
lret
cmp
outsl
movsb
mov
pop
out
xchg
inc
adcb
subl
dec
add
pop
jl
sub
cmc
or
cmpb
arpl
das
dec
pop
sbb
or
pop
jmp
xor
mov
cmc
jne
or
ret
dec
cmp
push
mov
push
call
ljmp
sub
pop
fidivrl
test
pop
enter
or
sbb
mov
dec
add
dec
push
fmuls
movsb
in
push
mov
adc
ficoms
sbb
xchg
loope
xorb
sahf
jne
es
dec
push
xchg
outsl
mov
pop
push
das
cmp
shlb
in
repz
rclb
pushl
pusha
lret
insb
les
dec
pushf
leave
stos
imul
imul
xchg
fsubrp
sbb
int3
cmc
pop
pushf
ret
or
sti
rolb
mov
pop
add
int
sub
in
xchg
mov
aam
push
mov
popl
xchg
fs
xor
cs
mov
inc
sbb
dec
fcoml
cmc
loop,pt
js
xchg
icebp
out
mov
xchg
ret
jmp
and
clc
test
outsl
lods
mov
sbb
out
mov
pop
mov
cmc
rcr
fisubl
inc
mov
incl
or
pop
mov
pop
xlat
dec
pop
mov
es
add
and
mov
ret
icebp
sbb
mov
mov
adc
stos
pop
stos
mov
icebp
push
dec
test
pusha
popa
sub
add
jl
cmpsl
xor
fdivrl
push
add
xchg
popa
fdivs
mov
shr
leave
xchg
jl
test
push
icebp
std
xchg
fists
movsl
push
and
ret
cmc
or
int
inc
cmpsl
push
rcrl
cwtl
clc
adc
mov
fiaddl
sub
sub
imul
outsl
inc
mov
popa
notl
test
and
sbb
jl
push
incl
push
add
push
cmpl
or
ljmp
mov
icebp
daa
pop
sarl
xchg
mov
push
cs
out
fstl
push
push
aaa
jg
fnstsw
xlat
xorb
mov
int3
mov
jmp
sub
pop
pop
les
fwait
mov
mov
adcb
rclb
cmp
cmp
std
cmp
push
jecxz
mov
xor
repnz
push
cmp
jecxz,pn
inc
dec
popa
jnp
and
push
out
insl
test
push
sarl
sahf
loop
das
xor
xor
xor
arpl
mov
fcomps
sub
and
push
pop
icebp
icebp
mov
test
dec
insl
lret
scas
xchg
fadds
rcll
dec
xchg
cmp
add
add
jo
aaa
inc
addr16
cmp
inc
rcrl
inc
dec
rolb
aam
sub
jmp
pop
int3
outsl
mov
fisubrs
jne
and
inc
rcl
add
sbb
nop
mov
dec
stos
imul
push
mov
aad
dec
fimull
mov
mov
mov
fsubr
out
push
mov
add
int3
mov
and
inc
mov
cmp
in
rolb
xchg
mov
pop
sbb
out
hlt
rcrl
add
mov
xchg
iret
bnd
pop
in
jge
mov
imul
inc
inc
lds
fcmovu
jmp
repnz
dec
test
loope
xor
pop
dec
scas
sbb
ljmp
xlat
xchg
sub
jae
pushl
sub
jle
push
add
mov
mov
xchg
add
int3
insb
xchg
arpl
stc
sbb
test
inc
mov
jp
or
mov
int3
sbb
std
lock
push
ja
and
fwait
jnp
cmp
std
push
adc
mov
test
fcompl
notb
mov
jmp
mov
popa
lds
lret
inc
push
stos
aam
insb
xchg
imul
xchg
jno
call
mov
bound
test
gs
mov
jno
call
jne
inc
cmpsl
sub
fwait
scas
xlat
loopne
enter
cwtl
jl
aam
out
pop
insb
out
xor
push
bound
cli
mov
sbb
jmp
call
bound
fincstp
in
xlat
test
pusha
xchg
mov
int3
cmp
jae
pop
xchg
jg
cwtl
add
inc
or
adc
jge
cmc
and
lcall
out
sahf
jl
inc
imul
call
mov
pop
sahf
ss
add
ret
fs
loope
imul
jp
pop
or
ret
lea
cltd
loope
popa
push
sahf
ljmp
mov
dec
rorb
mov
dec
mov
cmpsb
dec
stos
mov
and
imul
fwait
imul
pop
aas
pop
int3
fstpt
jnp
push
pushf
repnz
stc
cld
rorl
lret
shll
push
or
out
aaa
lret
xchg
aad
cld
fcoms
pop
add
mov
dec
imul
xor
sub
aas
enter
repz
pusha
mov
jns
add
bound
xchg
repz
pop
lret
rcrl
ret
mov
dec
pop
mov
sub
ficoms
jno
mov
sub
dec
idivl
sub
data16
xchg
mov
sbb
lock
jg
jmp
cmc
or
cmp
sbb
sub
or
mov
cmp
outsb
sub
repnz
mov
push
stos
mov
adc
bound
je
loop
bnd
push
cmpsl
mov
sbb
pushf
pop
jo
jle
stc
push
push
mov
popa
pop
aam
pop
aaa
addr16
outsb
cwtl
xchg
cmpsb
xchg
lods
aaa
leave
loope
aad
push
push
imul
mov
out
push
mov
cmp
les
sbb
inc
gs
fistpl
pop
cli
push
mov
leave
lock
divl
fistps
push
jnp
cld
inc
push
fidivrl
mov
mov
sub
nop
mov
xchg
xchg
adc
dec
hlt
sub
xchg
cmpsl
rcrb
xor
hlt
cmp
pop
imul
lods
fwait
sahf
cmp
in
mov
pop
daa
lahf
insb
pop
jo
in
adc
sahf
outsl
mov
aam
sub
inc
nop
push
cs
in
sub
inc
lahf
js
jmp
add
imul
js
rclb
mov
stos
jns
pop
adc
cmpsl
sbb
mov
cmp
decb
popf
sbb
sbb
ljmp
mov
xor
lds
mov
jmp
fnsave
lret
xchg
push
add
push
or
jp
and
das
outsb
std
sub
xchg
adcb
push
mov
dec
fcompl
mov
xlat
test
ljmp
jp
cmc
mov
sbb
or
lret
in
rcrl
dec
jl
inc
mov
push
push
jecxz
inc
xor
sti
fs
ret
mov
scas
push
xor
cmp
jns
jecxz
push
leave
dec
subl
mulps
mov
sbb
mov
addb
fwait
repz
repnz
dec
mov
sbb
mov
test
sub
xchg
cld
cmp
cli
and
pop
aas
aam
mov
xor
and
push
jnp
xchg
fidivl
movsl
or
adc
mov
fiaddl
fidivl
jbe
lds
jne
movsb
pushf
bnd
aam
jnp,pn
or
bound
lret
xchg
mov
out
leave
mov
xchg
ja
flds
jno
mov
cmpsb
fsub
js
jecxz
repz
xor
cmp
cmpsb
or
or
les
sub
sub
shrl
movl
loop
clc
jmp
push
sahf
jmp
push
hlt
stos
jge
daa
mov
push
mov
push
test
or
adc
js
cmp
fwait
lods
mov
sbb
in
hlt
lods
data16
cli
pop
popf
aam
lods
sbb
cld
or
mov
xor
fidivrl
mov
rcll
outsb
or
or
popa
mov
pop
adc
sbb
shl
sub
fs
mov
mov
cwtl
or
mov
xchg
sub
test
dec
cld
sbb
test
jge
mov
pop
cmc
je
xchg
and
sbb
aad
out
push
pop
xor
hlt
je
incl
mov
or
loop
sub
push
test
add
sub
aas
xchg
xchg
push
adc
sub
fistps
insb
push
scas
test
sbb
into
fisubrs
sbb
jmp
dec
xor
into
stc
push
mov
decb
cmp
mov
int
lret
xor
and
es
movsb
xor
mov
outsb
movsb
shlb
sub
test
in
out
mov
shlb
mov
lret
test
lds
mov
mov
sahf
sbbl
shl
pop
stos
iret
fildll
xchg
push
out
fists
nop
or
xchg
cmpb
sbb
ret
fisubl
jle
addr16
and
cwtl
jbe
sbb
xchg
pop
das
xor
stos
pop
inc
pop
jl
ja
or
or
xchg
mov
mov
inc
fwait
xchg
sbb
jl
push
scas
daa
daa
icebp
and
test
jle
jp
dec
pop
fsub
cli
or
std
and
jmp
inc
cmc
scas
mov
lcall
sub
cli
mov
fcmovnb
arpl
pop
negl
jecxz
or
add
sub
pop
xor
or
insb
sbb
ljmp
stos
push
sub
push
add
sarl
and
mov
inc
test
push
inc
sbb
mov
int
pop
orb
or
dec
addb
insb
inc
fwait
icebp
jmp
mov
xor
fsubr
xchg
cs
jle
lods
test
mov
xchg
cmc
sbb
sti
arpl
inc
adc
xchg
or
scas
hlt
jns
sbb
fs
orb
adcb
mov
hlt
mov
xchg
xacquire
dec
dec
fldenv
cmp
dec
scas
xor
cmpsl
push
jecxz
push
inc
fs
jle
jl
decl
and
push
and
jg
stos
hlt
test
mov
and
mov
cmpsl
adc
sub
cmc
jno
fnstenv
pop
jecxz
cmpsl
lock
xlat
mov
cltd
repnz
fsts
aad
stos
push
jle
xchg
cwtl
mov
sub
push
enter
inc
cmp
pop
stc
cmpsl
les
push
aam
lret
adc
test
sub
loop
scas
cmc
ja
add
and
mov
mov
andl
subl
pop
adc
mov
push
cmpl
xchg
sub
pop
push
push
push
std
les
loop
add
jns
cmp
and
aam
xchg
fwait
cltd
cmp
jp
push
push
fcomi
adc
jp
jns
lock
loope
gs
andl
mov
xchg
mov
adc
mov
push
jns
shlb
sub
jne
lock
inc
inc
mov
adc
ficompl
dec
inc
mov
repnz
dec
out
inc
push
or
xchg
xor
loop
adc
pop
or
jo
inc
jle
mov
cmp
scas
ret
insb
jge
lods
push
and
iret
jle
mov
sub
cmp
push
cli
in
int3
bound
in
mov
mov
xchg
pop
push
pop
int
jae
xor
adc
xchg
push
lret
jbe
loopne
lcall
insb
jbe
dec
sarl
addr16
jo
pop
adc
xor
jl
sbb
ljmp
fbstp
mov
jno
push
mov
or
sub
mov
sarb
xchg
pop
inc
add
or
jg
fmuls
insl
xor
inc
jle
push
dec
jb
pop
fnstcw
cmp
sub
sbb
imul
bound
push
pushf
stos
stos
in
and
scas
sbb
mov
xchg
ficomps
jo
and
xor
clc
pusha
sbb
mov
mov
inc
mov
adc
repnz
pop
ret
xor
subl
cmp
jge
mov
out
adc
addr16
ja
cmp
aaa
out
int
fidivl
pop
call
xchg
fbld
push
jno
shlb
cmp
fstpl
push
lcall
mov
mov
cmp
test
imul
iret
testb
mov
xor
fst
jb
jmp
adc
addr16
xor
dec
or
popf
mov
pushf
push
sbb
ss
mov
nop
cltd
mov
jl
mov
cmc
mov
xor
mov
xchg
lea
xor
xchg
or
shrb
xchg
mov
mov
dec
jns
cmc
aas
dec
orb
flds
stc
insb
jle
jle
mov
inc
sahf
and
sbb
add
subb
jb
clc
jl
dec
dec
sub
out
push
test
stos
idivl
mov
lcall
add
cwtl
push
xor
movsb
dec
aaa
inc
mul
xchg
fidivrl
pop
jns
mov
mov
pop
roll
push
fabs
push
sub
fstps
and
cmc
fstpt
outsl
xchg
or
imul
push
pushl
aad
mov
push
popa
stc
jmp
sbb
loopne
add
fwait
inc
mov
stc
aam
sub
sub
lahf
scas
xchg
cmpb
repz
lret
js
cs
xchg
lock
sar
cmp
fst
mov
mov
data16
test
jmp
mov
dec
stos
aad
stos
jmp
push
fsubl
add
cld
and
cmp
hlt
or
cmpsl
mov
and
lret
xchg
mov
mov
fildll
and
repnz
cmpsl
cmp
std
mov
sub
xor
or
test
mov
clc
sub
mov
cmp
das
jmp
jecxz
sbb
test
mov
fwait
pop
and
mov
sub
mov
jmp
inc
xor
cmp
xor
shll
jae
sub
ljmp
push
popa
dec
xor
rorl
inc
mov
pop
jg
jbe
and
adc
jg
nop
xlat
repz
loopne
cmp
xchg
clc
jge
clc
pop
mov
leave
into
add
adc
test
mov
and
jbe
arpl
movsl
into
add
ss
lods
sbb
unpckhps
pop
pop
leave
mov
imul
pop
adc
jp
leave
jge
call
test
xchg
sub
mov
bnd
out
nop
xchg
add
lret
cwtl
ficoms
dec
inc
std
repnz
ficoml
repz
xchg
xorb
lret
insl
test
mov
ss
hlt
shll
or
and
xchg
mov
and
test
lcall
sub
int
jae
dec
clc
fs
rcrl
mov
inc
rol
add
push
cmc
mov
repz
pop
mov
sbb
shlb
push
neg
out
inc
mov
adc
mov
adc
mov
popf
xchg
fmull
pop
push
jl
lock
and
mov
or
in
xchg
pop
shl
nop
loop
ds
fistps
or
cs
add
push
mov
push
flds
js
fisubrl
push
mov
mov
xor
mov
pop
jo
inc
mov
and
xor
cmpsl
or
inc
mov
imul
pop
mov
lods
mov
and
inc
pop
cmpsb
lea
insb
mov
out
cmovb
mov
leave
inc
jmp
mov
pop
xor
icebp
gs
cmpsl
xor
es
roll
push
add
jp
cmpsb
out
cmp
push
ret
mov
test
fdivrp
inc
adc
movsl
xor
std
dec
or
dec
in
sub
pusha
adc
in
sbb
mov
inc
mov
sub
cltd
or
int
jge
cmp
loope
test
stc
mov
out
in
or
sbb
sahf
cmp
xor
pop
pop
call
xchg
fidivl
xor
jmp
outsl
jle
dec
xchg
xchg
push
mov
mov
mov
lds
and
xchg
out
rorb
adc
arpl
out
pop
xchg
clc
ja
xchg
push
sub
out
outsl
cltd
stc
pusha
enterw
add
sub
push
jnp
cmp
outsl
xor
inc
cmc
out
or
mov
movsb
pop
mov
xor
xchg
leave
lock
push
xchg
stos
mov
dec
jmp
sbb
lret
inc
test
push
lcall
jbe
pop
jge
xor
mov
sar
pushf
out
stos
fs
sub
out
xchg
mov
pusha
mov
cmp
lahf
pop
aaa
mov
mov
pop
fmulp
pop
fldl
outsl
jl
fisubl
fimuls
add
cmpsb
pop
lcall
stos
insb
stos
cmp
sbb
stos
stos
sbb
mov
xchg
loop
jecxz
hlt
lods
pusha
cltd
sbb
loopne
imul
xchg
stos
daa
dec
dec
addr16
je
int3
es
mov
test
imul
stc
xor
xchg
inc
decl
pop
mov
xchg
lds
inc
insl
inc
lock
mov
pop
pop
ret
loopne
popf
or
sub
das
sbbb
xchg
xor
movsb
sti
mov
sbb
adc
clc
rolb
loopne
jmp
lret
pop
cmp
bnd
xchg
sti
repnz
repnz
nop
jmp
lahf
in
cltd
sub
das
cmp
cvtpi2ps
sbb
in
sarl
dec
sbb
imulb
cs
and
push
sub
mov
je
das
out
pop
and
lds
ret
daa
inc
jne
movsb
xchg
add
fucomp
mov
push
imul
jl
test
sub
adc
pushf
int
movsb
int
call
testb
sbb
and
add
roll
cmp
xor
shl
add
push
fimull
push
or
into
sbb
filds
push
mov
rep
cmp
cli
inc
scas
push
mov
dec
int3
jb
cmp
test
lods
sub
fisubs
sbbb
movsb
xchg
cmc
mov
aam
pop
outsl
mov
lods
fxam
lahf
data16
repz
mov
xchg
data16
pminub
shlb
xor
lcall
mov
push
call
push
int3
inc
sahf
dec
gs
sub
cmp
lret
ret
repnz
arpl
stos
pop
pop
xchg
adc
inc
fcompl
inc
inc
sbb
dec
sub
gs
imul
cmp
scas
ja
or
cmpsl
sub
cmc
fsubrp
or
mov
mov
test
and
cmp
enter
sbb
leave
sbb
adcb
xor
or
pop
scas
mov
stc
gs
add
in
imul
xchg
adc
jg
andl
fisttpl
lret
negl
inc
arpl
fcoms
cmp
subl
movsb
stos
sbb
push
out
leave
push
fsubrs
aas
or
addr16
bound
in
mov
loopne
jno
push
inc
cmpsb
pop
mov
ljmp
ret
loopne
mov
jne
int3
jns
stc
and
inc
fnsave
xor
xchg
jnp
sub
jns
repz
add
lock
fnstcw
aaa
fxch
clc
int
les
pop
cld
sbb
arpl
adcl
daa
into
push
xchg
cwtl
push
mov
aam
lods
pusha
or
call
rclb
cmp
fldt
data16
push
loope
push
aas
or
in
fstpl
cltd
movsb
orl
pop
cwtl
xchg
cmc
pop
dec
xchg
addr16
xchg
push
pop
mov
movsl
mov
aam
inc
adc
and
xchg
in
je
movsl
sbb
sub
lahf
mov
mov
imul
cmp
lcall
loope
adc
out
xor
out
mov
mov
jecxz
mov
clc
pushf
xchg
pop
mov
mov
inc
into
sbb
imul
xchg
mov
cmp
adc
ljmp
add
je
dec
fstp
push
or
mov
cmp
mov
shl
inc
lcall
stc
jp
push
addr16
cmp
sub
jmp
and
push
jbe
pop
mov
loop
aam
leave
xor
mov
inc
xchg
xor
test
cmpsl
sub
lods
ss
and
sahf
dec
cmp
jp
imul
sub
or
xchg
or
mov
mov
xor
movsl
or
iret
jae
fs
adc
leave
iret
ds
pop
icebp
sbb
popa
clc
sbb
bound
add
data16
int
jg,pn
xchg
ret
adc
stc
out
and
xchg
sub
sub
xor
and
shlb
mov
and
jnp
sti
adc
aaa
dec
icebp
mov
mov
add
inc
mov
scas
jle
mov
sahf
mov
clc
jmp
movsl
or
mov
mov
push
test
cmp
or
pop
sbb
fsubr
scas
add
loopne
adc
test
int3
cmp
ds
jg
or
mov
hlt
mov
dec
mov
fldenv
mov
cmp
int3
cmovbe
ret
lea
or
es
jp
out
mov
mov
mov
into
int
xor
insb
push
gs
pop
or
pop
jle
fidivrs
in
xchg
mov
incb
repnz
aas
ljmp
sbb
inc
inc
cmpsl
inc
jp
fisttps
loop
xor
xchg
inc
xor
dec
xchg
mov
sbb
adc
push
repnz
mov
inc
rorb
inc
test
insb
xlat
jb
ja
sarb
xlat
stc
aas
stos
call
push
popf
sahf
pop
push
adc
xchg
nop
div
loopne
stos
mov
push
pusha
out
jne
pmaddwd
imul
dec
cmpsl
dec
or
faddl
adc
jp
outsl
mov
adc
add
mov
push
cmpsl
pop
adc
push
xchg
inc
faddl
mov
or
cli
movsl
adc
int3
xor
cs
loop
pusha
mov
xchg
imul
lea
loope
negl
lods
pop
repnz
gs
sub
aaa
jne
mov
insb
xor
std
jl
cmp
push
jbe
pop
mov
mov
cmp
aam
loopne
add
loopne
iret
stos
sbb
rcll
inc
pop
mov
rclb
testl
dec
inc
ficompl
mov
mov
add
roll
inc
stos
jl
mov
inc
sahf
aas
adc
test
mov
cld
out
cmp
mov
add
aas
aam
mov
mov
nop
lea
cmp
inc
inc
scas
rolb
int
ja
lds
ss
jns
sub
pop
push
sbb
jnp
adc
mov
xchg
daa
dec
xor
mov
jmp
popa
or
push
mov
adc
mov
aaa
ficompl
call
ds
cmp
cmc
mov
hlt
fcom
lret
pop
push
bound
dec
jns
cmp
movsl
and
mov
in
pop
sub
push
cmc
jp
cmp
push
in
mov
repz
mov
inc
in
leave
insl
cli
mov
fsubr
loopne
cmp
xor
adc
hlt
xor
sbb
dec
sbb
imull
jae
in
lods
call
je
rol
mov
ja
ljmp
xor
out
push
xchg
push
sbb
xchg
mov
stos
adc
test
push
mov
inc
and
jbe
cli
rcr
xor
iret
mov
cmp
pop
mov
imul
cmp
test
mov
iret
movsb
mov
sub
push
pop
sarl
inc
fidivs
bound
insl
cli
and
shll
cmpsl
es
jmp
sub
xchg
andb
shr
mov
popf
cmpsl
mull
sti
jge
gs
clc
gs
arpl
jge
out
std
xchg
mov
xor
push
push
hlt
es
jle
add
test
xor
jmp
mov
sbb
fwait
push
mov
mov
pop
xchg
andb
stos
add
addb
xor
mov
push
sti
xor
out
push
movsb
int
sahf
imul
ret
mov
shll
std
and
ljmp
sbb
icebp
fisubrl
scas
enter
faddl
mov
mov
cmp
xor
stc
xchg
int
pop
dec
test
dec
lret
sub
lret
ret
data16
aas
or
lret
adc
cmpsl
js
stos
or
mov
sub
iret
xor
mov
jg
call
or
cmp
imul
sub
and
rorb
mov
insb
clc
mov
test
adc
inc
ja
mov
xlat
fsts
fwait
ret
jbe
jecxz
outsb
dec
divb
dec
add
xchg
lahf
mov
pop
repz
pop
sbb
or
dec
mov
jns
push
push
lods
inc
pushf
enter
dec
popf
xchg
and
adc
shll
add
pusha
fwait
push
xchg
mov
bound
pop
popf
data16
sub
inc
mov
movb
stc
sbb
test
pop
stos
sub
les
xchg
dec
inc
xchg
fstl
inc
adc
mov
push
jge
sahf
mov
enter
dec
int3
jae
lods
out
inc
cs
out
pop
mov
in
sarb
adc
and
frstor
iret
ret
pop
scas
call
mov
mov
push
cmpsb
cmpsb
addr16
sahf
aaa
sbb
les
fisubrl
repnz
sub
push
pusha
mov
cmp
cmp
sbbb
out
cs
adc
fs
xchg
xchg
ja
cmp
mov
xchg
insb
push
std
loop
mov
xor
mov
pop
push
cld
lods
mov
dec
lahf
sahf
pop
rorb
sub
out
jg
ret
and
into
in
and
mov
xchg
sub
hlt
repz
fsubl
dec
and
frstor
xchg
fwait
shll
mov
jg
ret
sub
push
inc
adc
jle
test
loop
mov
or
ret
xor
mov
mov
mov
clc
loop
jmp
addr16
ds
aad
cmp
aam
cmp
mov
jp
or
dec
mov
xlat
jnp
adc
xor
test
push
rcrb
fistl
popf
dec
cmpsb
lds
arpl
and
es
clc
popf
cmp
incb
sbb
hlt
dec
jns
leave
and
push
fisubrs
xchg
jnp
push
mov
mov
inc
pop
ret
popa
lds
xchg
std
adc
rcrl
add
dec
ja
push
ret
cmp
sub
inc
cmpsl
xchg
add
cmc
pop
adc
xor
ss
outsb
fsubrs
cmp
dec
and
mov
sub
test
movsl
stc
inc
inc
jno
ret
loop
dec
xlat
mov
mov
lret
add
dec
add
inc
sub
fwait
popa
mov
test
mov
test
xor
dec
cmp
xor
rol
daa
loope
jmp
inc
and
in
shll
jge
mov
scas
sbb
pop
jmp
pop
daa
mov
inc
pop
adc
out
jns
push
fstps
fldcw
insl
and
inc
sub
ffree
rcr
or
les
int
add
sub
popa
test
lcall
xchg
add
xor
xchg
jmp
sahf
imul
sbb
movsb
xchg
jmp
divb
popa
add
dec
int3
test
or
int3
push
out
int3
push
call
sub
xor
lahf
bound
outsb
inc
repnz
and
jle
sub
adc
jle
mov
cmp
out
in
ret
lahf
test
jp
rcr
test
push
loopne
lock
daa
or
cmp
loop
mov
adc
mov
test
cmp
push
xor
mov
sub
fcoml
ds
pushf
adc
fsubrs
xchg
lea
sbb
ljmp
adc
mov
xor
jns
sub
mov
fwait
push
dec
sbb
movsl
arpl
jecxz
add
inc
mov
add
movsb
hlt
hlt
insl
sbb
scas
in
adc
dec
imul
push
in
sbb
mov
cmp
mov
add
sahf
in
andb
enter
dec
or
dec
scas
jns
mov
call
or
in
adc
dec
push
ja
das
inc
pop
mov
sbb
int
or
pop
imul
cmp
add
dec
sub
je
pusha
jmp
mov
adc
xchg
push
cmp
mov
pop
pop
adcb
insb
cmpsl
xor
call
daa
cmpl
xchg
jecxz
mov
dec
jae
orb
dec
xlat
in
stos
adc
rclb
or
lret
repnz
cmp
ds
rol
mov
jecxz
hlt
lret
sti
stos
cmp
insb
inc
xchg
fprem
js
xchg
mov
shll
sub
lcall
test
aam
mov
mov
aam
arpl
je
cmp
hlt
pop
call
inc
loope
sub
mov
divl
inc
inc
mov
out
inc
es
imull
jae
sub
jge
mov
inc
xchg
cmp
sub
test
out
mov
test
scas
jnp
stos
jmp
cwtl
sub
mov
ret
in
push
cltd
jns
out
iret
lea
imul
push
fistl
pop
outsb
cmp
sbb
or
jnp
cmc
jmp
pop
in
in
int
jbe
scas
out
andb
popf
xchg
dec
lret
out
mov
pop
pop
and
and
in
mov
inc
jns
sub
pop
imul
sbb
inc
cmc
ret
ds
xorb
pop
insb
push
int3
mov
jbe
popa
insb
orl
test
fisttpl
push
dec
pop
inc
clc
mov
test
andnps
rcl
add
mov
adc
out
mov
dec
out
or
sbb
std
xlat
inc
fidivrl
mov
in
add
out
pushf
jg
rcll
pop
ss
or
test
push
push
mov
sbb
rol
sub
stc
and
adc
mov
pop
jmp
mov
movsb
jo
cmc
or
dec
pusha
into
mov
adc
xlat
xlat
or
orb
cmp
mov
in
xor
ret
cmp
test
rorl
or
or
push
pop
mov
jmp
test
mov
mov
mov
push
cmpsb
sbb
loop
loop
lret
rcrb
mov
push
es
fwait
jo
scas
pop
push
mov
push
pop
scas
movsb
out
cs
cmpsl
pop
xor
lock
mov
sbb
pop
fldenv
xchg
push
xor
jnp
fistpl
clc
mov
std
loopne
out
pop
pushf
push
jbe
adc
stos
dec
xchg
jbe
mov
sbbl
ret
mov
ljmp
or
shll
pop
mov
push
sti
jb
in
pop
js
add
pop
mov
in
icebp
mov
cmp
pop
pop
int
cmp
sub
ss
inc
xor
cltd
adc
push
cmp
xor
lods
pushf
adc
jg
enter
sarl
pop
add
int3
daa
popa
in
scas
int
push
loop
gs
xchg
mov
jnp
out
and
and
xchg
or
loope
lret
movsb
ss
outsl
pop
inc
and
sbb
inc
pop
adc
adc
push
sahf
rclb
js
sti
in
pusha
xchg
in
bound
daa
dec
in
aaa
jnp
lock
sbb
inc
mov
inc
or
fldt
or
imul
inc
push
sub
das
pushf
lock
push
and
call
movsb
ret
rorl
fiaddl
imul
push
push
pop
push
or
mov
pop
mov
repnz
jbe
lods
rcll
sti
aas
sar
mov
fisubrs
push
inc
ss
xorl
sbb
lahf
mov
out
inc
in
mov
std
test
or
jmp
mov
mov
or
pop
pop
cmp
push
les
pushf
outsl
scas
aas
xchg
mov
hlt
into
mov
mov
sahf
cld
xor
lahf
xor
xchg
mov
nop
jge
in
push
cmp
das
jno
and
cmpsb
lods
adc
push
fidivs
testb
mov
popf
cmp
testb
xchg
or
repnz
inc
push
add
shll
push
sbb
lahf
fmull
and
aaa
addr16
mov
mov
je
mov
jno
push
pop
pop
fwait
jo
shll
mov
or
ficoml
sarl
cmp
mov
mov
add
inc
add
outsl
popf
pop
hlt
pop
jle
outsb
lds
repz
dec
and
sbb
mov
pop
add
jge
lahf
mov
loop
out
rcrb
arpl
fdivrl
andb
mov
xor
mov
adc
gs
fldl
inc
fwait
shrb
mov
jnp
rcl
jmp
fsubrs
ljmp
insb
mov
or
out
jae
push
adc
mov
lcall
inc
inc
or
fbstp
xchg
push
pop
imul
fdivp
jns
add
xchg
cld
lock
test
mov
dec
cmp
and
daa
xor
xchg
repz
xor
dec
adc
jp
int3
add
push
testl
fcompl
jmp
dec
icebp
mov
scas
dec
pop
sub
xor
push
xor
push
out
cmp
data16
and
sbb
mov
push
sbb
add
out
inc
inc
xchg
loop
xor
and
xor
stos
and
inc
xlat
pop
push
mov
adc
lret
xor
sarb
jae
nop
testl
inc
adc
iret
dec
pop
les
inc
shll
jnp
lock
shlb
movb
cmp
pop
push
cmp
xchg
lcall
clc
push
pop
inc
shll
xchg
dec
mov
shlb
ds
insb
mov
jns
jns
push
mov
shll
cmpsb
push
add
addr16
pop
push
les
sbb
cmp
in
imul
mov
cld
mov
sti
add
lret
fbstp
leave
bound
jecxz
or
pop
sarl
lock
push
jecxz
insl
jo
xor
sbb
dec
adc
pop
jnp
push
jb
push
mov
enter
pop
push
adc
sbb
in
clc
jecxz
dec
popl
in
mov
aas
push
stc
insb
mov
int3
test
cmp
adc
in
notl
imul
push
addb
cmpsl
adc
fidivrl
xchg
test
les
mov
push
sbb
and
push
imul
test
adc
xorl
js
fxch
loopne
lahf
shr
jge
or
cmp
daa
cmp
mov
mov
repz
pop
cmp
aad
lods
inc
mov
cmp
mov
int
cmp
pop
jle
xchg
mov
pop
loop
pop
push
push
cs
into
push
adc
scas
bswap
jle
cmpsb
cmp
xchg
or
imul
push
jmp
cmc
in
pop
mov
xchg
sbb
xor
imul
jne
mov
outsb
dec
int
mov
xchg
cmpsb
cmp
fwait
stc
mov
scas
nop
test
jo
aam
xor
pop
andb
xchg
mov
jne
jmp
fcompl
stc
jae
and
in
icebp
out
adc
mov
push
pusha
lea
inc
push
adc
jp
jae
mov
leave
cmp
mov
dec
xorl
addr16
in
shll
outsb
pop
icebp
filds
dec
je
aad
loopne
add
clc
lcall
lret
lock
out
insl
jp
sbb
and
sub
adc
mov
mov
in
xor
add
outsl
sub
les
and
cmp
pop
ss
sub
cmp
repz
dec
mov
jmp
jp
and
xchg
and
pop
jmp
imul
push
jae
scas
push
or
scas
xor
push
jle
movl
mov
outsl
mov
ja
add
lods
rcrb
lret
dec
xchg
and
gs
xor
arpl
sbb
or
dec
imul
push
lods
adc
push
fxch
cwtl
and
xor
lea
sub
fsts
ljmp
je
inc
test
and
das
in
ja
or
add
mov
jo
inc
fwait
dec
out
enter
push
cwtl
call
cmpsb
pushf
lods
mov
xchg
cltd
js
andps
push
sbb
lods
in
clc
hlt
lea
sub
inc
push
inc
mov
inc
sahf
pop
mov
sbb
lret
lods
outsl
and
sbb
jns
mov
incl
mov
and
div
shrb
dec
xchg
ror
enter
es
mov
loopne
push
sub
js
je
mov
xchg
inc
or
cmp
fwait
lret
mov
movsb
lret
stc
jbe
xorb
stos
sub
push
dec
fdivr
cmpsb
xchg
xchg
xor
and
xlat
into
in
sbbb
sub
sub
jbe
add
or
cmp
lcall
js
cltd
inc
popa
mov
add
push
inc
sub
dec
cmpsb
and
cmp
inc
nop
lcall
sbb
mov
clc
std
bnd
cmp
mov
pop
das
or
fstps
les
mov
jne
dec
add
adc
pop
mov
or
sbb
adc
dec
in
lods
out
and
les
aaa
push
pusha
stos
arpl
xchg
imul
xor
call
stc
addl
pop
movsb
add
push
in
out
cli
add
jnp
int
jno
mov
mov
jae
outsb
lock
je
add
dec
mov
pop
stos
push
pop
pop
push
jns
das
ss
or
out
stc
sbb
cwtl
jae
ret
or
daa
lock
scas
sub
test
enter
and
push
dec
cmp
jno
sti
lret
mov
sbb
aam
add
bound
xor
jns
outsb
popa
sbb
insl
mov
rorb
enter
mov
ljmp
orb
imul
sub
or
xor
andl
loope
sbb
add
mov
popf
popa
mov
ds
fwait
test
and
in
sub
js
stc
shlb
rcl
outsl
mov
imul
ja
push
jle
negb
lcall
divl
xchg
dec
fsubs
sbb
cmp
xchg
xchg
lods
scas
loope
mov
inc
xor
aad
aad
lcall
adc
dec
jne
adc
test
addl
jbe
jg
push
xor
and
adc
aad
mov
xor
fwait
sti
shrb
int
mulb
pop
mov
lods
call
xchg
push
xchg
mov
test
or
popa
lea
and
pop
lea
and
iret
xor
insb
cmp
cmp
scas
xor
mov
icebp
or
jne
dec
jl
rcrb
jl
negb
mov
add
rep
fwait
out
jnp
cmp
push
jge
dec
and
cmpsb
lret
xchg
jb
mov
jp
push
sbb
lcall
cmp
fistpll
clc
aam
ss
daa
rolb
push
shrb
lea
xchg
add
sahf
mov
push
aaa
repz
xchg
mov
inc
dec
pop
fwait
in
inc
stos
push
dec
in
cltd
lea
je
sub
add
popf
jl
repnz
adc
rcll
data16
test
fimuls
stc
mull
sbb
cwtl
out
pop
out
lahf
jecxz
addb
inc
xchg
mov
adcb
sbb
stos
mov
mov
inc
adc
pop
enterw
cmp
pusha
pusha
jl
xchg
dec
and
pop
xor
fcmovbe
popa
mov
xor
jbe
and
jb
movsb
push
dec
daa
outsl
mov
xchg
frstor
int3
sbb
hlt
mov
mov
popf
mov
dec
xlat
je
sub
jmp
inc
fwait
and
std
dec
cli
insl
popa
xor
dec
and
roll
andl
add
enter
jo,pt
xor
pop
sbb
movsb
int
clc
stos
ror
lcall
xchg
in
jmp
out
test
rol
xchg
es
shr
xchg
sbb
mov
rcrb
iret
mov
dec
repz
stc
mov
pop
dec
loope
imul
fisubrs
mov
cmpsb
pop
call
les
cmp
xor
sub
pop
sub
adc
std
cmp
jmp
pop
mov
dec
mov
fcmovne
repz
sbb
cltd
push
xchg
push
fidivl
pop
shll
incl
sub
cli
test
das
lods
lods
or
iret
mov
mov
mov
xchg
pop
cmpsl
fwait
push
xlat
jb
lcall
scas
outsb
shr
jp
inc
mov
push
adc
mov
ss
jecxz
and
scas
lea
jge
or
ljmp
or
testb
insl
pand
ja
popf
adcl
hlt
inc
inc
in
xchg
ret
lods
dec
test
jmp
dec
fnstenv
sub
rorl
add
add
dec
sbb
inc
push
pusha
cltd
mov
pop
es
rclb
ss
shl
mov
pop
mov
push
shlb
cmp
out
and
mov
push
add
push
mov
inc
xchg
bound
or
imul
mov
dec
add
call
std
pusha
das
mov
jnp
jb
jp
ficoms
sbb
inc
sar
rorl
ret
subb
or
daa
mov
xchg
sarl
and
pop
loop,pn
and
shl
out
adc
pop
mov
or
jg
in
add
dec
add
mov
stos
sar
sbb
mov
push
iret
xchg
xchg
pop
scas
inc
aam
mulb
cmp
dec
sub
pop
shl
gs
mov
pop
loope
pop
dec
add
roll
push
jno
pop
popf
out
inc
dec
xchg
cmp
jnp
xchg
mov
shll
sub
add
out
out
push
cmpsb
test
jp
out
jnp
or
push
mov
fwait
lods
cmp
mov
sub
add
aaa
jae
mov
out
repnz
popf
filds
mov
mov
push
int3
aad
sbb
push
icebp
repnz
ret
sarb
clc
sti
cltd
mov
xor
clc
hlt
jmp
gs
imul
lahf
pop
jg
adc
and
dec
js
jnp
aas
test
xor
icebp
mov
pop
jnp
fwait
jne
mov
cmp
pop
dec
cmp
and
roll
jo
rcrb
imul
adc
insb
sbb
fbld
rorb
inc
cmp
adc
les
pop
push
mov
inc
lahf
cmp
in
inc
lds
mov
rcr
and
nop
movsl
sbbb
lahf
add
pushl
outsl
push
jnp
add
inc
or
jns
add
inc
daa
rcll
push
in
add
xchg
dec
scas
movsb
mov
push
pop
pop
test
xor
ret
cltd
jb
test
mov
jmp
enter
hlt
jnp
gs
push
pop
mov
pop
int3
stos
pop
fnstsw
aaa
and
add
xchg
das
jns
push
dec
inc
inc
rorb
adc
das
psrlw
rcrb
push
mov
test
subl
and
lock
and
inc
xchg
inc
lcall
jge
cmpsl
add
in
rolb
mov
and
loope
pusha
xchg
mov
leave
xchg
fadd
std
outsb
push
sbb
push
popf
scas
fidivrs
mov
add
outsl
adc
lds
xlat
mov
push
jle
insb
cmp
ljmp
fcomp
nop
insb
push
cmc
adc
mov
push
lret
sub
add
jge
daa
and
mov
push
test
filds
loop
clc
cmpsl
clc
dec
xchg
jbe
popf
pop
scas
aas
or
jl
rcrb
fdivp
sbb
xor
fldl
add
dec
stos
xchg
stc
ret
nop
inc
mov
js
out
je
mov
inc
lret
sbb
xchg
ja
icebp
or
jo
cmp
sbb
or
pop
jl
mov
mov
shrl
sbb
jl
loopne
pop
xchg
inc
leave
pusha
sbb
jne
test
gs
aaa
popa
or
add
dec
add
pusha
xor
cmp
ret
fsubs
pusha
and
sub
mov
aam
and
out
xchg
bound
xlat
insb
imulb
fs
pop
sarl
add
lahf
pusha
cmp
and
shl
xchg
xchg
rorl
cltd
ffree
xor
mov
hlt
jp
imul
hlt
push
loope
and
dec
mov
adc
push
cmp
or
not
es
cmp
mov
add
pop
lret
out
dec
dec
fistl
sub
lods
sub
lds
aam
aaa
inc
insl
inc
jno
mov
test
clc
fnstenv
scas
aad
repnz
popf
insl
test
lds
leave
pop
jnp
inc
in
adc
imul
das
or
mov
enter
sbb
push
mov
xchg
test
and
ror
lds
cmp
or
inc
or
int
popf
pop
cwtl
loopne
ljmp
push
packuswb
adc
inc
push
or
imul
scas
jb
int
mov
pop
pusha
mov
cmp
mov
mov
cs
ss
enter
mov
les
xchg
add
inc
sub
sbb
xchg
adc
popf
jl
sub
mov
mov
outsl
cmc
cmp
int
push
sahf
stos
nop
sub
mov
add
mov
cmp
xchg
cmp
push
mov
mov
aaa
adc
sbb
mov
inc
jp
in
push
out
sahf
push
xchg
cmp
nop
int3
out
dec
fcmovb
popf
sub
mov
rclb
jno
xchg
or
inc
cld
shl
insb
cmp
maxps
ds
mov
push
nop
or
sbb
lret
mov
push
stos
bound
push
adc
push
push
test
sub
jl
mull
mov
lods
push
mov
xor
mov
or
mov
mov
mov
int3
stos
cmc
dec
mov
adc
cld
jle
cltd
push
push
inc
in
and
test
inc
cltd
mov
push
or
sub
or
dec
mov
add
and
dec
out
and
into
jno
xchg
iret
sub
loope
mulb
mov
pop
mov
sbb
out
stos
std
ja
push
xorb
stos
lcall
push
sub
bound
daa
dec
mov
xor
pop
jge
inc
mov
xchg
ja
jg
fwait
or
xlat
jle
push
notb
mov
lret
mov
cmp
push
xchg
xor
dec
cmp
jno
push
lret
jns
scas
outsl
out
add
idivb
pop
rcrb
add
mov
cmpsl
dec
mov
repz
jbe
inc
call
jg
lret
mov
dec
ljmp
popf
sti
push
iret
insb
and
decl
stc
fldt
jbe
push
scas
test
push
push
dec
mov
sub
xchg
xchg
shlb
push
lret
push
xchg
push
dec
outsb
push
and
icebp
ja
xor
inc
scas
mov
add
fst
pop
ljmp
je
loopne
ja
inc
push
jae
push
mov
and
fdiv
xor
jg
mov
aad
sub
scas
push
aaa
sub
xchg
push
mov
ss
jae
pop
cmpsb
jno
mov
pop
aam
bnd
fildll
and
or
icebp
dec
jb
sbb
mov
int
loopne
mov
lret
stos
int3
ljmp
adc
stc
push
fsubr
push
or
dec
and
mov
add
jno
xchg
xchg
dec
xchg
ror
push
jo
jl
mov
data16
shl
pop
hlt
adc
dec
cltd
mov
mov
popl
sub
jecxz
insb
rcl
push
mov
mov
xlat
ret
inc
cmp
adc
dec
sbb
fxch
loop
imul
negl
ljmp
push
sbb
dec
inc
es
dec
mov
int
popf
lret
and
and
test
fimull
prefetchw
jp
imul
adc
cmpsb
cmpsl
pushf
pop
call
mov
repnz
fimuls
fldcw
fwait
xchg
or
mov
daa
ret
mov
mov
add
test
gs
subps
nop
cmpsl
outsb
and
in
aaa
lahf
out
sbb
sbb
in
sbb
inc
cs
lret
js
lret
mov
mov
cwtl
aam
mov
daa
sahf
push
in
imul
push
sbb
sbb
xor
mov
push
xor
push
mov
in
mov
push
adc
push
stos
xor
imul
shr
int
mov
ds
mov
push
sub
sub
fstps
fcomps
inc
xchg
cmp
inc
mov
nop
in
lcall
jns
loop
bound
in
addr16
sub
pusha
dec
push
dec
mov
mov
ss
sbb
in
sbb
aad
std
and
repz
rcl
jo
mov
xchg
xor
lods
add
int
or
addr16
js
iret
cwtl
out
imul
cmpsb
and
push
ficompl
imul
jmp
loop
out
movsb
shlb
sub
ret
aad
push
arpl
lret
inc
jecxz
or
and
into
jecxz
mov
daa
dec
push
and
add
inc
inc
pushw
jne
inc
push
add
adc
jl
push
sbb
mov
shlb
adc
mov
rclb
and
addb
ret
inc
adc
mov
adc
stos
inc
addl
decb
das
fisubl
push
out
mov
data16
sbb
loopne
or
popa
fadd
xor
xchg
xor
xor
inc
cmpsb
in
in
adc
push
jmp
sub
mov
or
test
or
mov
cmp
lahf
ljmp
std
ret
push
add
sbb
enter
jbe
test
adc
js
loopne
mov
xchg
dec
shrl
xchg
sub
mov
lods
pop
push
cmpsl
test
pop
adc
mov
jnp
or
loop
sar
lods
xlat
int3
xlat
arpl
cmpb
xor
xor
and
mov
mov
xor
call
lds
mov
subl
sub
xor
negl
pop
push
jb
mov
jl
adc
lea
mov
pusha
stc
test
std
int3
mov
test
cmpsl
jl
mov
lcall
sub
mov
stc
addr16
aaa
mov
data16
lret
dec
or
push
popa
dec
mov
xchg
ja
dec
lret
fadds
aas
in
fisubl
dec
inc
in
or
insl
and
mov
push
daa
mov
daa
fnstsw
mov
negl
or
sahf
cmp
lock
mov
mov
fnstcw
and
push
xchg
idivl
test
jp
outsb
or
in
adc
push
sub
repnz
mov
cmp
movsb
repnz
clc
mov
xor
lods
inc
imul
dec
jge
push
jmp
mov
push
insl
inc
int
test
std
mov
stos
lahf
jp
xchg
inc
push
in
mov
sbb
xchg
dec
mov
lods
or
cltd
ja
jo
or
sub
lock
sbb
ljmp
test
jnp
gs
jl
pop
jecxz
push
dec
mov
mov
xchg
mov
mov
popf
xor
push
jecxz
lahf
andps
sti
mov
les
sbb
adc
mov
aad
loope
jecxz
and
push
adc
push
or
std
push
clc
add
push
clc
mov
push
into
nop
xchg
adc
push
fisubrl
mov
jp
mov
mov
sarb
cmp
std
or
inc
dec
mov
scas
ret
in
mov
xchg
notl
shll
outsl
sti
fcoms
jo
xlat
xchg
and
stc
js
cmp
test
icebp
testb
test
xchg
inc
cmpb
xchg
arpl
pushf
test
lods
outsb
xchg
push
sbbb
nop
popl
orb
in
into
inc
sub
pop
mov
test
fimull
into
scas
ds
bound
imul
pop
andl
push
adc
pop
inc
pop
mov
out
ret
pop
mov
ja
insb
jnp
mov
pop
push
push
xchg
repnz
arpl
push
or
imul
push
xchg
sbbl
add
cwtl
in
dec
pusha
punpcklwd
pop
lret
stos
imul
inc
jb
fbld
dec
add
sub
divl
push
pop
and
dec
dec
rcl
into
jbe
fisubrs
stos
lea
inc
adc
lea
cwtl
or
push
or
in
dec
fdiv
orl
mov
mov
xor
or
sub
mov
mov
pop
and
in
inc
ljmp
mov
aad
adc
jmp
lret
outsb
mov
or
push
fsubrp
pop
cmpsl
int3
int3
out
mov
out
jp
jo
adc
mov
xor
hlt
mov
jp
mov
pop
jbe
add
mov
dec
sbb
mov
fcomi
xchg
sub
enter
pop
and
aam
add
loopne
add
mov
test
movsl
outsb
imul
xchg
xor
test
pop
push
ljmp
dec
iret
aad
pop
xchg
jo
fidivl
xlat
push
push
sbb
les
mov
imul
add
mov
movsb
imul
push
js
sub
cmp
rcll
xor
dec
bound
mov
addr16
test
cmp
sub
pusha
mov
sbb
pop
sbb
jo
dec
lds
or
jo
fwait
bound
mov
imul
cmpsl
mov
decl
notb
mov
adc
das
in
mov
and
bound
int
popf
jp
xlat
add
loopne
je
inc
inc
sbb
and
mov
lcall
cmp
pop
das
icebp
inc
jp
shl
sub
adc
rclb
gs
cmpsl
dec
std
adc
xor
sbbl
js
daa
and
jo
pusha
jle
or
rol
mov
orl
leave
out
pop
cli
inc
stos
int
mov
outsl
mov
insl
push
pop
lahf
mov
xchg
rorb
pop
mov
push
xor
lea
lods
mov
lods
fcoml
jo
pop
into
lods
das
daa
ss
and
repnz
mov
and
mov
pop
mov
adc
or
mov
xor
dec
or
push
addr16
mov
cmc
add
ret
out
jb
dec
and
sub
pop
mov
test
iret
jl
out
fstpt
adc
imul
push
insl
jg
cmp
mov
adc
xchg
mov
scas
mov
ds
pop
xchg
das
sbb
sti
mov
or
mov
imulb
xor
cmpsb
cmp
mov
inc
jmp
xlat
lahf
sbb
ret
dec
aam
sub
mov
mov
dec
lahf
inc
std
mov
xchg
inc
iret
xor
xor
enterw
stos
outsl
pmaxsw
ret
jecxz
dec
xor
insl
lret
neg
sbb
fisttpl
lods
cmc
scas
shlb
scas
xorb
mov
orps
mov
loope
jl
jbe
sbb
xor
jl
rcrb
inc
enter
xchg
adc
xor
pop
xor
sbb
mov
mov
pop
cmp
cmp
sbb
xor
pusha
jp
mov
adc
inc
sub
fmul
cmpsl
mov
scas
mov
ret
mov
mov
jne
into
movb
pop
jle
mov
sar
ret
bound
xchg
jle
mov
and
sub
scas
jne
mov
rcrb
aad
jbe
test
sti
sbb
sub
leave
xor
jne
mov
and
lods
in
adc
adc
data16
iret
adc
in
popf
jnp
ficoms
mov
mov
out
or
or
popa
xor
icebp
adc
fwait
mov
mov
and
aam
mov
jne
add
dec
jle
hlt
jnp
scas
pop
cwtl
add
iret
sbb
testb
lret
daa
leave
ss
pop
xchg
mul
dec
movsb
leave
leave
or
mov
mov
aas
iret
call
clc
in
push
adc
xchg
add
mov
in
jge
iret
imul
add
jbe
fbld
mov
mov
mov
xchg
cmpsb
loop
aas
imul
call
ret
insb
push
jge
or
or
jbe
jmp
push
or
lret
jp
out
loope
stos
mov
sub
xor
pop
in
push
outsl
aam
mov
sub
das
mov
shll
lds
int3
mov
cmp
push
and
xor
das
cmp
xchg
inc
loop
jle
push
dec
or
and
inc
sbb
shr
fs
pop
pop
mov
push
sub
or
ret
repz
cwtl
dec
mov
mov
and
call
cli
dec
mov
sub
sbb
mov
stos
stos
jbe
sti
ficoms
popa
mov
enter
pop
popf
lods
or
rolb
mov
cmp
inc
xchg
shrb
out
push
es
inc
std
lcall
dec
push
jne
aas
pop
push
inc
nop
repz
sbb
andb
aaa
fadds
loopne
cmp
lock
xor
test
mov
lods
cmc
mov
or
cltd
push
inc
sbb
movsl
pop
insl
inc
aad
xor
jge
das
out
std
xor
and
xchg
mov
movsl
jmp
jmp
pop
mov
lea
dec
test
jne
or
data16
push
add
pop
sbb
push
movsl
inc
mov
cmp
jae
jmp
aam
test
add
mov
jle
xchg
out
repnz
mov
push
inc
mov
or
in
lds
subb
cmp
ret
push
js
add
cmpsb
outsl
ret
push
shrl
je
jb
xor
gs
popf
push
mov
jns
ret
cli
scas
xor
xor
mov
sub
sbb
fnstsw
and
add
pop
add
dec
mov
jecxz
pushf
inc
ja
mov
lret
mov
fs
jmp
out
pop
loope
add
add
ja
hlt
aaa
cmc
pushf
or
mov
lea
xor
hlt
inc
or
or
xor
aas
add
dec
push
fistps
add
mov
iret
int3
add
jns
or
sti
pusha
inc
addb
lcall
ret
fadds
scas
arpl
pop
cmp
adc
out
imul
push
packsswb
rorl
push
push
push
or
jge
das
sbb
mov
mov
pop
stos
jno
stc
dec
movl
cld
fucomp
xor
lds
mov
xchg
inc
mov
and
mov
scas
pop
scas
int3
lods
pop
scas
push
inc
dec
dec
add
xchg
push
fwait
lds
lock
test
shrl
out
arpl
and
xchg
add
and
popf
gs
loope
and
idivb
dec
aaa
mov
sub
add
mov
xchg
sub
sbb
cwtl
xchg
push
xor
add
push
pop
sbb
or
and
add
repnz
sbb
sbb
aam
or
icebp
int
fidivl
mov
mov
mov
mov
dec
push
hlt
add
push
or
xor
ror
out
xchg
adc
pop
mov
mov
pushf
js
test
sbb
push
and
xor
imul
add
aas
or
xor
push
mov
lret
cmp
ss
inc
and
in
cmpsb
ljmp
pop
or
jno
xchg
mov
fisubrl
mov
in
das
in
shll
adc
mov
fisubrs
lahf
add
lea
inc
fnstenv
mov
mov
pusha
xchg
jnp
inc
fimull
bnd
int3
jb
imul
mov
xchg
push
jge
das
sbb
in
dec
scas
xchg
push
and
repz
xchg
in
xchg
and
add
shl
lcall
mov
icebp
iret
and
addl
pop
jge
cli
xchg
roll
mov
test
das
dec
fcoms
add
xor
outsl
int
sbb
iret
lods
mov
clc
dec
inc
mov
sbb
mov
push
xchg
fsubrl
outsb
cmpsb
sbb
or
pop
adcb
test
or
ret
mov
scas
mov
repz
mov
inc
xor
jmp
jmp
mov
xchg
adc
bound
pop
les
cmpsb
repz
xor
imul
fistpl
xchg
or
or
cmp
rcrl
cmp
and
push
adc
lods
sbb
dec
fisubrs
pop
lret
xor
adc
cmp
shlb
popf
or
pusha
test
pop
jbe
push
dec
push
data16
mov
add
sub
outsl
push
shll
dec
push
repz
dec
mov
fs
jp
out
sbb
or
cmp
mov
loop
iret
scas
jnp
out
and
arpl
je
fsubl
or
mov
into
out
dec
pusha
adc
pop
and
sbb
push
xlat
outsl
popf
imul
popa
repz
fs
xor
into
pop
pop
subl
xchg
test
outsb
or
sahf
xchg
push
outsb
xchg
cmpsl
pop
dec
ret
xlat
enter
push
mov
mov
pop
dec
jno
sbb
cmc
cmpb
ljmp
sub
inc
mov
outsb
xor
mov
mov
loopne
inc
sub
jnp
lods
arpl
test
loop
sarl
in
and
psubd
fmuls
add
mov
pushf
xor
imul
xor
sbb
or
lret
jno
ficoms
aam
xor
ljmp
xchg
push
mov
jb
dec
push
lahf
lock
popa
sub
call
xchg
shr
xor
push
or
sub
pushf
cmp
shrl
xchg
lahf
fists
out
out
in
xchg
lahf
ss
cli
fs
pop
cld
cli
fdiv
add
cmp
and
in
sbb
popa
out
loope
aaa
iret
mov
mov
mov
stos
mov
int
dec
add
aad
int3
sbb
aam
mov
xor
fcomps
inc
in
mov
lock
cmpsb
mov
or
insb
add
adc
pushf
inc
icebp
lods
inc
idivb
or
adc
xchg
sbb
leave
xor
or
inc
mov
addr16
ja
jbe
mov
inc
jge
inc
je
call
xor
mov
out
popl
test
insb
out
xchg
out
cld
cmp
push
jne
bound
mov
icebp
int3
test
sti
push
icebp
cmp
mov
jmp
lcall
push
jecxz
test
mov
sub
pop
sub
movsb
mov
scas
xor
cmp
push
and
mov
push
jbe
mov
shrb
and
lcall
daa
clc
push
mov
push
xor
cwtl
and
inc
push
sub
jns
push
or
inc
and
adc
inc
mov
and
cwtl
pop
pusha
or
outsb
xor
outsl
enter
imulb
xchg
ss
cmc
or
fisubrs
mov
int3
cmp
aad
dec
or
divb
dec
adc
add
fiaddl
nop
dec
aaa
iret
pop
popa
push
inc
ljmp
mov
mov
mov
push
iret
xchg
mov
or
jbe
fs
mov
push
add
push
jle
aam
fcoms
xlat
aad
push
cmpsl
movsb
das
loop
jnp
or
out
cld
mov
jle
movsb
cmp
mov
aad
aad
arpl
insb
xor
pushf
xor
mov
sahf
nop
adc
xchg
jns
cmp
cwtl
push
push
sub
in
and
push
mov
mov
jmp
insb
cwtl
adc
daa
push
inc
in
sub
and
adc
stos
jle
fnsave
or
sbb
push
push
jbe
xor
push
insl
push
or
or
xchg
mov
cli
push
jmp
arpl
movsl
lods
les
cmpl
or
pop
xchg
push
pop
cmp
adc
leave
mov
cmp
cmp
in
mov
hlt
fbstp
push
imul
inc
stc
add
mov
cmp
out
push
imul
out
hlt
adc
jns
dec
lcall
imul
jnp
imul
movsb
psubq
cmpsl
sub
scas
lahf
imul
mov
shll
rcl
scas
pop
fdivs
mov
movsb
xchg
inc
fildl
pop
in
jle
imul
test
out
outsl
scas
fs
xchg
pusha
xor
cmp
mov
ljmp
sub
sarb
scas
bound
mov
jg
push
xchg
mov
dec
outsl
pop
cmpsb
mov
fisttpl
xchg
outsb
add
pop
fistpll
push
add
loope
test
scas
in
ljmp
xorl
dec
cmp
inc
cmc
xchg
dec
jle
cmp
shrb
js
popa
adc
shl
jecxz
scas
cmp
jno
sub
mov
push
test
xchg
jbe
out
xchg
push
test
inc
and
or
or
stos
ret
test
shll
mov
cmp
sub
cmp
ss
add
pop
sbb
fmuls
loope
or
xor
js
cmp
sub
add
cld
cmpsb
shr
cmpsb
cmp
cs
clc
mov
dec
sub
mov
pusha
ret
cmp
pop
jno
call
adc
xor
test
cltd
rcrb
cli
stos
and
mov
jne
sub
xor
mov
cmp
and
inc
ljmp
fnstcw
jmp
xor
clc
stc
rclb
jo
in
push
out
int3
pusha
sbbl
xor
sarl
mov
jmp
or
insb
xchg
jl
xor
test
inc
cmp
js
jp
test
sbb
div
inc
out
je
sbb
or
push
mov
movsl
push
leave
jns
jge
gs
inc
cmpsb
push
jno
cmp
jnp
xor
xor
cmp
pop
xchg
popf
pop
adc
mov
dec
sbb
iret
jnp
sbb
shlb
sbbl
mov
mov
cwtl
ret
mov
push
ljmp
sbb
sub
je
push
xchg
mov
sti
inc
int3
pop
mov
les
cmpsb
cmp
subl
xchg
gs
mov
dec
inc
lahf
aas
mov
pop
hlt
mov
idivb
lcall
pop
fadds
mov
clc
jbe
out
inc
decl
jecxz
fldl
mov
popa
sbb
mov
jns
jae
cmp
jno
jne
cmp
fimuls
mov
xchg
jg
xchg
sti
int
or
mov
les
sbb
imul
in
hlt
mov
cmpl
jp
and
push
dec
sarb
stos
and
je
jge
pop
dec
and
aam
mov
aad
jb
aas
nop
loop
inc
xor
mov
repz
xor
cmp
mov
push
mov
ja
mov
jle
les
adc
imul
inc
dec
clc
sbb
mov
fsubl
inc
rcrl
fwait
or
rcrb
xor
ja
in
test
fnstcw
fnsave
lret
mov
out
add
fstpl
int3
out
sbb
and
xor
rol
xor
xchg
mov
mov
rcrl
rorl
je
call
sti
and
jle
jno
loope
sbb
sub
je
push
sub
sub
addr16
pop
je
pop
pop
and
mov
jle
sub
das
mov
std
jb
pop
test
repz
dec
dec
sbb
mov
mov
loop
add
insl
imul
out
push
or
push
pop
lahf
mov
sub
inc
ds
into
xor
pusha
mov
cmpb
pop
shll
adc
leave
aaa
xor
movsl
pushf
pop
movsb
call
or
shll
dec
cmovbe
fs
push
add
adc
loop
movsl
fldcw
add
not
push
cld
enter
rorb
out
adc
ljmp
nop
mov
jbe
lock
cli
loope
int3
add
stos
fs
adc
jg
scas
stos
xchg
push
mov
jp
or
push
cli
insb
outsb
fs
fs
iret
adc
jns
mov
mov
cmp
pushl
cli
adc
rcr
pop
ljmp
lods
test
call
jno
lds
mov
add
int3
loope
mov
pop
mov
inc
pusha
lods
pop
jmp
hlt
mov
dec
mov
xchg
repnz
cs
xor
pop
stos
push
addr16
decb
testl
and
cmpsb
nop
jnp
mov
loope
cs
in
pop
stos
mov
cmp
pop
cmp
inc
fiadds
jecxz
rol
scas
fbld
sbb
aas
inc
sbb
daa
adc
push
cmp
mov
or
jg
shufps
outsb
cmp
jb
clc
idivb
xchg
lds
out
cmp
mov
xchg
push
jns
sub
call
stc
mov
jmp
jl
clc
lret
sub
add
stos
cmp
cmp
stc
mov
sahf
cs
or
and
and
jge
mov
jns
sub
fcomps
mov
pushf
cmp
es
or
test
inc
xchg
mov
shrl
sbb
ss
sub
pop
push
nop
aam
enter
push
lahf
int
ss
hlt
sahf
sbb
test
cs
iret
lods
lea
or
fsubp
sarb
mov
pop
stos
sahf
ds
cld
test
or
leave
pushw
push
inc
scas
sub
test
mov
inc
repz
mov
int3
in
in
cmpl
test
jne
push
inc
or
add
push
bound
xchg
jns
xor
enter
add
sbb
ljmp
aaa
pop
das
nop
enter
jne
push
sti
ficoml
xlat
ficoms
xor
jne
push
or
dec
pop
test
jmp
xor
pop
pop
cmpsb
or
enter
or
iret
sbb
xchg
push
mov
mov
cmp
xor
fs
sbb
subb
adc
push
push
lds
jb
sahf
adc
push
jg
ret
ja
pop
or
dec
test
mov
pop
and
jb
inc
push
mov
popa
push
imul
adc
xchg
adc
cmpsb
xor
mov
and
cmp
subl
pop
add
mov
lea
loop
bound
inc
popa
xchg
push
inc
out
iret
in
push
stos
or
sahf
lods
pusha
and
loop
dec
cltd
mov
xlat
xchg
pop
sahf
or
shlb
xchg
aam
push
mov
enter
movsl
adc
test
lods
xchg
cmp
fistpl
cmpsb
insl
sbb
ss
adc
pop
leave
ficompl
mov
xlat
jo
in
xchg
lcall
push
jl
sub
mov
loopne
sbb
push
fstpt
pop
pop
sarl
fldcw
push
sub
sub
inc
movsb
mov
fmuls
pushf
fimull
mov
adc
stc
aad
pusha
cmp
pop
jmp
sbbb
fdivrl
repnz
push
pop
inc
nop
test
push
data16
lcall
jbe
cmc
and
dec
das
je
push
and
ret
sbb
push
scas
inc
stc
and
pop
arpl
push
inc
xchg
fs
mov
sub
sbb
leave
test
pushl
outsl
push
push
or
lret
mov
or
push
xchg
jecxz
andl
lock
fstps
xor
adc
adc
mov
es
fcoms
lcall
sub
or
push
aas
pop
jnp
adc
in
push
xor
pop
pop
les
pop
pop
pop
es
mov
add
out
adc
pop
jle
jg
ds
mov
popa
int3
xor
fisubrl
xchg
push
and
mov
pusha
rolb
js
cld
mov
mov
mov
into
in
push
daa
lds
test
cmp
ljmp
xor
sbb
sahf
cs
push
movsbl
or
mov
push
loop
push
lods
inc
push
jne
pop
cld
xchg
dec
imul
inc
mov
xor
sub
out
xor
jl
sti
jmp
sbb
aas
std
mov
ljmp
jle
fxch
lods
xor
mov
push
and
shl
add
addl
cli
cltd
in
xchg
imul
lds
adc
sbb
cli
xor
sti
aaa
shrl
pop
das
dec
outsl
push
mov
out
inc
jp
outsb
inc
gs
int
inc
mov
into
addl
test
loope
add
imul
aaa
mov
out
sub
sbb
adc
mov
pop
in
out
mov
pusha
cmc
xchg
std
lahf
push
into
loop
enter
pop
cmc
mov
icebp
clc
sarb
mov
cmc
mov
push
mov
outsb
leave
iret
or
jecxz
adc
stc
dec
lods
movups
enter
daa
dec
int3
sub
mov
leave
test
mov
sbb
xchg
adc
lods
popf
push
jae
add
sub
adc
and
push
testb
jecxz
add
sarl
in
sbb
mov
call
scas
mov
insl
push
stos
int3
mov
pop
jg
inc
inc
pop
and
int3
cmp
das
es
lret
sub
add
or
rcrb
xor
add
fmull
pop
loop
leave
hlt
rcll
lret
or
loopne
ds
and
inc
add
mov
mov
mov
xchg
xchg
xchg
rclb
lock
or
int3
sub
mov
call
out
push
lods
pusha
mov
pop
xchg
das
cld
shr
mov
rorl
jmp
iret
inc
mov
adc
stc
jmp
iret
xor
iret
or
fwait
ret
popw
inc
fmulp
cmp
cld
popa
jg
cli
jnp
mov
pusha
hlt
fs
mov
add
mov
and
jnp
lret
lret
or
mov
test
dec
addb
test
aaa
pushf
push
and
scas
mov
cmp
jg
ret
out
dec
je
jb
push
iret
cwtl
inc
dec
call
cmc
pop
inc
mov
aam
pop
pop
movsl
andl
push
insl
or
push
leave
add
sub
xchg
inc
test
nop
pop
repz
dec
mov
jbe
hlt
popl
push
mov
js
subb
mov
lret
inc
xor
dec
jg
fimull
das
xchg
call
mov
push
popa
jnp
or
mov
lea
mov
or
andl
call
xchg
cmp
sarl
or
sbb
aad
xorl
fsubrl
push
and
loope
lods
cmp
ja
jns
push
push
loope
xchg
lret
lods
stos
cwtl
out
xchg
mov
or
mov
loope
sbb
inc
lret
mov
hlt
imul
xchg
pop
and
fcmovbe
jmp
scas
scas
mov
pop
mov
mov
out
mov
jle
dec
mov
mov
popf
xchg
dec
xor
sub
jae
mov
ficoms
cs
cmpsl
cli
cmp
sahf
dec
fnstenv
xchg
test
lret
loopne
mov
push
sbb
imul
test
sbb
pop
add
push
sti
add
mov
jg
fisttpl
test
in
rolb
lea
mov
insb
mov
jecxz
movsl
add
rcrl
or
sbb
sbb
xchg
repz
sbb
or
popa
adc
mov
mov
push
dec
lret
add
sbb
xchg
lahf
add
xchg
dec
adc
mov
out
inc
leave
add
testb
addl
mov
stc
mov
loopne
outsb
pusha
test
fstpl
cld
mov
push
mov
fstl
jno
lock
adc
mov
mov
out
sbb
dec
bound
sarb
sbb
lcall
ret
mov
xchg
push
push
lock
inc
sbb
outsl
adc
add
insb
cmp
arpl
pop
imul
mov
movsl
cwtl
shr
ja
repnz
pop
rcrb
add
leave
sbb
lahf
lret
fisubl
notb
xchg
and
sbb
leave
andb
hlt
lods
xchg
pop
fs
adc
ja
gs
jle
sub
dec
mov
sbb
enter
cmp
cltd
insb
inc
mov
orl
mov
mov
add
or
ljmp
add
mov
in
rcl
jecxz
mov
pop
insl
mov
or
mov
add
enter
and
rcr
lea
bswap
out
pop
sahf
dec
pop
xchg
jmp
adc
rorb
sub
and
inc
jae
sti
ja
in
mov
xor
scas
insb
iret
and
sub
movsb
mov
fbstp
pushf
test
mov
jns
clc
enter
mov
je
mov
mov
lret
sbb
cmpsb
sbb
push
scas
xchg
push
out
je
scas
das
ljmp
hlt
lock
sbb
adc
jmp
mov
mov
mov
int
xlat
jge
dec
cltd
pop
lds
push
pop
int3
lods
arpl
repz
cld
lret
cmp
mov
inc
pop
or
adc
mov
jbe
ljmp
loopne
sub
and
mov
dec
dec
jne
addb
mov
mov
cmp
imul
jg
rolb
lcall
fdivs
push
nop
icebp
lock
roll
into
cmc
xor
in
imul
aas
mov
cmp
cmp
and
xor
movsl
mov
inc
mov
fs
mov
test
nop
test
jmp
xchg
xor
xchg
and
cmp
push
sahf
test
fsub
cld
gs
bound
clc
dec
aas
inc
mov
or
sub
add
mov
gs
in
mov
and
rcrl
rorb
xchg
jecxz
in
cmp
dec
push
push
xchg
out
int
hlt
mov
inc
in
and
incb
pop
cmpsl
jno
cmpsl
andl
lret
fs
push
push
mov
ljmp
test
sbb
push
mov
mov
shll
icebp
mov
pop
insb
mov
test
xchg
mov
push
lods
mov
lahf
mov
int3
or
out
xor
sub
rcll
mov
mov
cmpl
inc
add
dec
addl
ss
fbld
imul
sahf
test
or
jmp
xchg
inc
out
and
sbb
in
pop
inc
jecxz
ret
andl
jmp
cmp
scas
mov
inc
mov
xor
movsb
and
or
add
and
pop
clc
aad
lock
jmp
mov
sbb
sbb
mov
jle
aam
and
adc
in
das
push
xor
mov
push
cwtl
pusha
jecxz
hlt
pop
scas
lret
dec
dec
fsts
arpl
int3
push
sbb
mov
xchg
xchg
call
jns
popa
push
das
pop
mov
jp
orl
dec
fs
add
sub
addr16
or
mov
sbb
inc
repnz
inc
mov
fistpl
xchg
pop
cs
iret
rcll
add
in
xchg
add
fs
cmpsb
mov
jo
add
push
and
mov
daa
pop
or
xor
iret
adc
push
pop
push
xor
lock
jne
insb
daa
xchg
mov
iret
dec
mov
mov
lods
lcall
and
loope
stos
adc
push
lea
pop
mov
and
dec
mov
pop
loopne
mov
jne,pt
dec
cmp
adc
sbb
outsb
mov
sbb
add
cmp
sahf
testb
jne
xor
push
fadd
ja
test
nop
mov
stos
call
jp
repnz
sbb
rcll
in
test
inc
sub
mov
adcl
ja
mov
adc
leave
mov
repnz
test
and
or
pop
cld
es
dec
adc
cmp
dec
xchg
loopne
push
jo
cmp
jno
dec
sbb
sbb
jmp
cmpsl
cmc
mov
adc
int3
pop
mov
enter
mov
nop
repnz
pop
cmp
aas
cmc
scas
sbb
cmp
scas
mov
xlat
les
insl
stos
scas
lods
mov
ljmp
sub
xor
popf
mov
sbb
aam
jmp
test
imul
sbb
xchg
out
mov
pushf
out
loopne
scas
divl
aaa
fsubl
adc
xor
out
jno
xchg
roll
outsb
xchg
and
push
test
ss
and
mov
nop
in
or
lcall
imul
mov
bound
xlat
dec
jmp
ljmp
out
bnd
hlt
ret
iret
push
mov
jecxz
pop
cmp
test
xor
scas
add
jo
add
mov
stos
and
repnz
repnz
sar
jecxz
sub
mov
sahf
adc
fisttpl
test
scas
scas
lds
add
cmp
xchg
lret
push
sbb
imul
pop
dec
inc
je
sub
mov
dec
inc
xor
in
js
pop
mov
add
movsb
mov
and
insl
add
rcrl
push
xor
sbb
cwtl
xor
lret
xor
aam
icebp
ret
jp
mov
arpl
sahf
xor
enter
popa
call
mov
pop
data16
dec
xchg
cmpsl
mov
mov
sub
insl
pop
test
mul
int3
xchg
sbb
and
adc
push
leave
data16
das
add
pop
add
imul
mov
pop
fildll
mov
ss
fsubrl
notb
inc
arpl
fisubl
ds
push
and
push
out
cmp
or
push
mov
jbe
sbb
pop
dec
or
in
hlt
popa
sub
push
sbb
test
mov
jne
ja
dec
scas
cmpb
in
iret
and
sub
cld
mov
lds
imul
xor
sbb
mov
lahf
mov
loop
xchg
jno
in
jno
mov
fnstcw
lea
sbb
pop
adc
fdivl
sbb
data16
lret
rcl
adc
stos
addr16
pop
xchg
push
andb
inc
scas
or
push
sbb
mov
push
les
jb
mov
popa
push
lds
popf
popf
mov
inc
call
out
and
mov
xchg
sarb
pushf
repnz
data16
nop
pop
fwait
and
lds
test
insl
mov
add
inc
insb
or
int3
pop
mov
jae
mov
mov
sub
mov
push
push
lret
pusha
sub
fcompl
sti
mov
out
push
ljmp
cld
adc
jle
jg
sar
movups
and
loopne
in
jg
cmp
loope
fstp
xorb
mov
fnsave
sub
push
jb
das
push
mov
inc
js
popl
push
push
mov
and
or
lods
out
or
dec
aas
pop
and
rcrb
inc
push
das
sub
jb
pop
mov
xchg
xchg
notb
out
mov
mov
mulb
cmp
dec
mov
movsb
xchg
pop
and
cmp
rcrl
cwtl
outsw
cmp
cmp
mov
cli
andb
icebp
pop
dec
jmp
jmp
roll
test
jb
pop
and
push
int3
adc
inc
jb
shlb
inc
sub
mov
jp
add
xchg
push
dec
and
repz
lds
cmp
sub
sub
add
push
popf
ret
popa
je
push
push
cwtl
loopne
jle
dec
cmp
or
mov
lock
mov
mov
add
or
in
in
ficompl
add
in
inc
scas
pop
ret
jp
stos
and
outsl
jo
shrl
jecxz
pushf
pop
pop
dec
inc
cmp
mov
adc
add
insl
aas
hlt
or
push
mov
dec
std
xlat
push
lret
call
or
push
leave
mov
shl
and
dec
mov
jge
sbb
jmp
sub
push
repz
inc
mov
sbb
aas
daa
in
sbb
bound
lahf
jb
dec
pusha
sbb
aam
addr16
fwait
pop
ss
icebp
lea
std
xchg
add
xor
inc
inc
es
or
gs
push
in
sbb
rolb
cld
enter
xchg
jg
call
jmp
insl
mov
loopne
sarl
pop
cli
test
movsl
pusha
rorl
cwtl
movsl
lods
daa
sbb
insb
xor
out
lret
push
std
jb
shr
push
pop
movsl
jae
in
push
sub
sbb
push
popf
out
stos
sub
xchg
jae
adc
cld
jmp
aad
lret
aam
sarl
movsb
aaa
gs
push
rcrb
unpcklps
leave
int
adc
cmpsl
std
loope
jle
xor
ljmp
and
mov
mov
xchg
subb
pop
stos
mov
xchg
imul
cmp
jnp
adc
aas
arpl
iret
ss
mov
shrb
in
inc
in
and
inc
push
push
sub
push
hlt
insb
or
jno
jmp
clc
jno
clc
lds
add
repz
dec
nop
repz
iret
dec
popf
movsl
lret
mov
cmpsl
inc
lea
adc
loope
pop
std
movsl
and
jp
jle
loopne
mov
pop
stos
cmp
mov
cld
lret
and
mov
bound
xchg
negb
add
leave
subl
shll
mov
test
fwait
push
movsb
add
dec
sub
or
jge
shrl
cld
mov
iret
std
push
pop
dec
sub
mov
cmc
popa
aaa
push
mov
into
fsts
pop
jnp
jg
cmp
xor
jno
or
clc
jmp
or
cmp
xor
shrb
push
loopne
std
ja
es
or
mov
push
mov
test
push
out
call
dec
adc
jmp
sub
cmp
dec
xchg
or
xlat
cmpsl
paddusw
in
lock
hlt
jmp
jno
mov
addb
fbstp
mov
xchg
stos
jbe
pop
xchg
fmull
mov
sti
rclb
in
sti
mov
mov
les
xchg
xor
daa
jnp
int
mov
out
lret
fs
js
jecxz
inc
jl
mov
inc
ficompl
iret
daa
cs
jmp
cmpsl
mov
lcall
fptan
xchg
xchg
gs
xchg
fdivrl
adc
rcl
sbb
scas
pushf
sahf
sar
cltd
dec
jmp
sub
aaa
scas
add
es
mov
push
dec
push
adc
out
repnz
jg
ret
aaa
out
push
and
pop
jne
inc
sub
loope
pop
adc
mov
test
adc
mov
pop
cmp
cmp
scas
xor
mov
xchg
pop
and
ficoms
sub
lahf
imul
stc
sub
ret
jecxz
mov
ss
cmp
imul
inc
mov
pop
ret
cmp
cmpsb
pop
inc
mov
add
movl
pusha
xchg
sbb
dec
sub
mov
pop
aaa
mov
je
negb
lods
and
adc
decl
cmp
mov
jmp
mov
push
shll
idiv
xor
stos
mov
or
out
add
jns
adc
shl
and
shll
and
or
sbb
push
inc
jl
and
scas
gs
xor
jns
fs
sahf
mov
xchg
mov
mov
ljmp
out
jo
xor
cmpb
test
dec
sbb
push
js
arpl
out
mov
repz
imul
xchg
in
mov
adc
jmp
clc
orb
push
sbb
insl
in
push
or
lret
mov
xlat
add
fsubrl
dec
cmp
or
int
inc
dec
stc
stc
xlat
pop
and
jmp
ficomps
pop
fadd
test
jmp
pop
sbb
xchg
mov
rclb
scas
and
andb
xchg
adc
lods
sub
daa
xchg
imul
pop
divl
sbb
mov
cmp
stos
inc
sub
sbb
and
adc
and
or
sbb
xor
fisttpl
stos
inc
mov
lcall
stos
mov
push
mov
mov
stc
scas
sub
and
sub
faddl
cmp
sarb
ja
inc
pop
test
lods
in
pop
fldcw
pop
push
and
and
dec
das
jbe
and
ds
shl
imul
cmpsb
aad
orb
and
lods
inc
addl
push
sbb
iret
jp
test
call
test
das
hlt
cmp
xor
lods
sbb
lods
adc
adc
nop
rolb
roll
add
or
mov
or
fcmovb
pop
movsl
ret
stos
mov
or
jmp
dec
dec
les
lods
idivl
fcompl
xlat
xor
and
and
xlat
aam
data16
outsb
inc
cmp
inc
mov
addr16
jmp
test
gs
repnz
daa
adc
mov
inc
arpl
sti
aad
adc
flds
mov
dec
cmpsb
xor
fwait
mov
jae
ret
xor
and
enter
iret
sbb
in
mov
jne
xchg
push
repnz
xchg
nop
mov
xchg
push
shll
shl
and
pop
ret
scas
mov
pop
add
js
sub
jbe
cmpsb
adc
cmpsl
outsl
jno
jb
bound
int3
push
mov
inc
adc
int3
pop
xor
inc
lds
push
push
cmp
ds
jae
cmpsl
rorl
jbe
inc
out
jl
in
inc
or
jge
xchg
adc
adc
repz
pop
mov
xchg
jae
out
inc
push
cltd
dec
negb
xchg
jecxz
jg
cmpsl
fiadds
jbe
movsb
push
cs
push
call
repnz
rcrb
cs
insb
mov
jbe
mov
jp
movsl
mov
sahf
pop
aad
sub
xlat
xchg
mov
jmp
out
and
imul
aaa
cmp
jge
and
jno
xchg
fs
imull
test
std
add
fcompl
or
add
add
cmp
pop
int
push
mov
add
cmpsl
xchg
or
insb
aas
pop
mov
fcomps
dec
ss
sti
fcmovbe
lret
xor
ja
dec
pop
out
stos
or
xor
push
mov
cmpsl
popa
clc
xchg
lds
ror
pop
jecxz
add
xchg
xchg
shll
or
imul
cltd
mov
scas
aad
ja
xor
sti
add
arpl
rcr
popa
jecxz
mov
xchg
or
bnd
test
cmp
inc
inc
negb
std
push
cmpsb
aas
cmp
cld
fiadds
sbb
xchg
fidivrs
mov
adcl
test
inc
jl
iret
adc
jo
jmp
pop
popf
test
xor
in
cmp
les
aas
pop
in
add
mov
xchg
mov
pop
cmp
scas
xor
pushf
daa
orl
pop
iret
fsubrs
push
das
or
cmp
push
pop
push
or
push
rclb
fwait
loop
xor
inc
adc
adc
and
scas
inc
push
lods
mov
lods
jmp
inc
cmp
call
mov
das
jne
out
mov
cmp
xor
test
shlb
jecxz
test
sbb
subl
adc
stc
push
test
mov
sub
mov
mov
ret
dec
pop
pop
arpl
mov
aad
stc
xchg
sub
adc
sahf
xorb
stos
fcmovnu
ss
sbb
mov
jge
cltd
mov
xlat
push
stos
scas
or
fistpl
mov
mov
mov
sbb
xchg
jp
mov
fnclex
pop
xor
pop
adc
les
push
adc
add
mov
mov
dec
lock
and
inc
push
mov
push
mov
xor
jecxz
xor
adc
jg
adc
dec
leave
fildl
lods
loopne
hlt
push
jb
fwait
or
scas
dec
scas
ljmp
pop
inc
mov
int3
push
inc
pusha
fimuls
dec
loopne
and
aam
mov
leave
cld
cmp
insb
mov
icebp
ja
out
xor
add
das
mov
negl
int
mov
lea
xchg
sub
insl
dec
je
popl
xchg
sbb
addr16
out
xchg
push
jb
pop
inc
adc
or
xchg
mov
shrl
inc
mov
pop
xchg
in
aaa
mov
lret
int3
sar
add
jp
push
in
and
or
pop
mov
or
std
cltd
dec
neg
enter
push
pusha
dec
mov
adc
into
mov
out
adc
inc
cmpsb
fwait
movsb
imulb
in
sub
or
or
shl
jno
cmp
mov
mov
inc
push
jno
int3
cmc
push
movsb
push
cmp
ret
mov
and
add
ss
adc
or
dec
push
mov
clc
out
sbbl
test
out
xchg
jl
pop
inc
pusha
sbb
imul
mov
repz
js
xor
fistpl
cmp
loopne
inc
enter
pop
sbb
xchg
xchg
pushf
loope
pop
jb
popf
das
cmp
sarl
mov
pop
test
lret
push
add
and
cmpsb
mov
rcrl
jne
push
mov
jns
ljmp
adc
push
dec
xchg
repz
cmp
repnz
fdivrs
push
jae
imul
mov
je
xor
and
daa
ljmp
adc
mov
dec
int
cmp
hlt
mov
xchg
push
cmp
mov
rcr
lret
int
or
rolb
or
jnp
cmp
lods
arpl
mov
sub
insl
loopne
jns
repz
in
jnp
movsb
mov
aam
stos
shlb
out
cmp
push
jae
cli
inc
xlat
dec
fidivrl
xchg
and
pop
xor
add
cmc
push
ds
ja
ljmp
add
or
dec
cmpsb
incb
pop
cmp
in
mov
in
out
mov
sahf
pop
cmp
inc
xchg
cs
int
xchg
pop
adc
mov
mov
fwait
scas
mov
xor
frndint
mov
or
addr16
movsl
lret
ljmp
and
xor
mov
push
das
inc
jbe
sbb
cmpsb
daa
mov
push
nop
cmp
loopne
lea
pop
pop
xor
or
jl
pop
enter
or
xor
fcmovne
mov
cmp
adc
loopne
dec
cmp
dec
mov
iret
push
ret
add
mov
add
add
push
call
xchg
fcomps
in
lcall
push
fstpl
inc
pop
sub
cltd
push
inc
or
cmc
call
jg
dec
mov
ja
xor
cmpsl
inc
lret
std
aad
fdivs
arpl
repnz
cmp
or
cltd
jge
mov
mov
sbb
cs
push
cmp
pushf
mov
push
adc
adc
sbb
pop
dec
xor
or
mov
popa
sbbb
sub
dec
pop
pop
sti
repz
mov
push
push
insl
cmpsl
xor
cmp
jb
add
adc
sub
pop
lret
mov
sbb
ja
imul
inc
dec
inc
inc
repz
mov
cltd
mov
ficoms
iret
cmp
push
loop
xchg
inc
add
mov
mov
fs
test
mov
jno
adc
push
pusha
inc
or
xor
lea
sub
lret
dec
xchg
in
mov
into
jno
adc
fwait
lret
mov
push
pop
jo
mov
sub
xor
clc
adc
aad
pop
nop
pop
inc
test
out
jb
ret
pop
or
sub
adc
jne
test
cs
aas
and
addl
cli
push
ret
jmp
xchg
negb
aam
add
jnp
xchg
pop
repnz
test
insb
iret
das
mov
and
adc
mov
in
sbb
jecxz
scas
pop
filds
in
stos
push
and
and
inc
xor
stos
mov
scas
imul
insl
mov
mov
cmpsb
stc
jbe
leave
cmp
dec
jbe
int3
repnz
in
rcl
cmpsb
mov
adc
lret
aas
pop
loop
xchg
jae
leave
movsl
fidivrl
test
cmp
mov
lods
push
aas
jb
pop
cwtl
sbb
mov
mov
leave
xchg
aaa
mov
mov
insb
xorl
dec
scas
sti
js
sub
push
ljmp
pop
dec
flds
push
mov
mov
xchg
push
xchg
mov
add
aaa
mov
out
fstps
jno
push
xor
sub
pop
fsubl
cmp
push
fdivs
push
mov
fcmovbe
addr16
enter
xchg
ret
push
mov
inc
in
call
jno
xchg
sahf
repz
mov
pmaxsw
repnz
cli
add
mov
push
fnsave
sbb
sub
jne
cmp
pop
pushf
ret
out
in
push
xor
jo
mov
imul
and
clc
int3
and
movsb
in
stc
popa
ret
aam
xchg
enter
ret
mov
xlat
pop
sbb
sbb
test
xchg
mov
push
adc
xor
shr
mov
test
fwait
clc
imul
test
dec
fdivs
jge
adc
cmp
outsl
adcl
add
out
jp
scas
ljmp
fidivrl
jne
sbb
jmp
test
es
jmp
dec
mov
dec
stos
or
jae
dec
xor
mov
cld
pop
or
lret
aam
xor
lods
faddl
jno
pop
fdivs
sub
xor
or
mov
icebp
les
cmp
dec
test
xchg
dec
dec
rcr
arpl
jp
aaa
out
mov
mov
cmpsl
push
push
jp
fisubrl
cmp
sbb
stos
push
jnp
push
or
push
and
cmp
in
add
xor
rclb
add
repz
sbb
cld
setp
ficomps
fcom
inc
outsl
jg
idiv
xor
mov
enter
jge
cltd
cld
scas
aaa
or
gs
int
rcr
cmp
sbb
loop
cmp
jo
mov
xor
fwait
mov
xchg
shrl
test
sbb
movsl
cmc
dec
imul
sbb
outsl
and
or
sbb
jp
jnp
jno
in
lods
pop
imull
rolb
push
inc
into
leave
adc
inc
rorb
jno
jb
and
adc
out
enter
pop
push
mov
in
fdiv
xor
lock
cmpb
jbe
add
push
aam
inc
movsb
lds
xor
lds
pop
orl
aas
outsl
shll
mov
or
mov
idivb
push
ret
je
dec
mov
pop
push
repz
mov
dec
adc
jnp
push
les
addl
sbb
fstpt
jmp
jns
lret
xchg
in
mov
ficoml
jno
loope
jg
lods
leave
sbb
push
mov
xchg
sahf
and
out
imul
sub
pushf
loope
sub
cwtl
inc
iret
js
xlat
xchg
pop
push
out
ret
loopne
jecxz
xchg
je
inc
movsb
xchg
dec
ljmp
mov
jl
jne
test
push
arpl
or
mov
fcoml
pop
test
lcall
repnz
mov
repz
sbb
and
test
call
fldt
in
mov
sbbl
pusha
add
stc
nop
push
in
lcall
sub
and
cmp
outsl
mov
mov
ljmp
pop
gs
sbb
ret
cmpsl
pop
sub
loopne
out
xchg
les
cld
mov
out
bound
ja
lds
xor
sar
jb
cmovle
sarb
test
pop
and
pushf
fs
and
es
loopne
ss
jo
frstor
mov
pop
sbb
jmp
int
std
lods
aas
jno
lods
mov
pop
pop
and
pop
loop
lea
mov
mov
inc
pop
jae
sub
jge
cmpsl
inc
lahf
and
mov
in
test
or
sub
fldcw
sub
test
mul
repnz
jge
jns
subb
push
inc
pushf
mov
adc
ljmp
ja
jno
arpl
repz
cmp
cmc
push
fcom
repz
sub
rcrb
pop
push
xor
xor
lahf
imul
cmp
pop
loope
cmp
aam
fnstsw
sub
inc
cld
push
mov
push
pop
outsl
nop
jno
sub
insl
or
or
push
pop
pop
xadd
aaa
and
sbbl
or
jns
sbb
shlb
xchg
fs
pop
pop
enter
nop
outsl
adc
mov
xchg
cmc
push
ret
or
dec
push
jnp
addr16
loop
das
dec
cmp
call
push
mov
dec
add
adc
sbb
pusha
popa
xchg
je
in
popf
loope
adc
fldenv
adc
in
lret
icebp
pop
sti
aaa
jle
and
in
mov
cmpsb
ja
xor
push
and
push
lret
cli
sbbb
fnsave
push
stos
imul
mov
out
into
jnp
fistpll
and
add
rcrl
iret
int
dec
add
das
int3
mov
push
mov
decl
leave
shl
popa
mov
and
xor
mov
cld
das
in
push
test
xor
in
cld
and
mov
gs
jne
cltd
inc
int
and
ljmp
popf
sbbb
imul
das
pop
popl
inc
test
cmp
inc
dec
mov
cli
cli
or
in
adc
xchg
rol
lea
stos
push
push
cmpsb
fsubs
and
mov
sub
jl
push
push
jge
in
stos
call
xchg
add
pop
mov
cmp
aas
std
mov
sub
lods
cmp
orb
inc
jge
clc
int
xor
mov
ret
sub
add
push
mov
adc
fisttpll
test
leave
pop
xchg
jg
repnz
add
fldcw
jmp
lods
mov
notl
mov
sbb
pop
inc
add
popa
adc
inc
push
jnp
sahf
dec
int
and
cmp
add
lock
jae
std
pusha
jmp
pop
ret
or
jmp
bnd
test
sub
std
cmp
fbstp
mov
dec
lret
push
in
into
or
mov
fists
mov
pop
ret
push
xor
xchg
jne
test
xchg
xor
stos
addr16
subb
mov
xchg
mov
shll
or
loop
cmp
pop
push
sub
aas
or
push
repnz
ss
sbb
mov
shlb
cli
add
ja
sbb
push
pop
and
stos
mov
xchg
ds
aam
das
js
push
dec
es
mov
jl
pop
int3
or
orl
sbb
xchg
lahf
loop
add
pop
cmpl
and
inc
popl
push
shrb
pop
xor
loope
dec
jo
mov
add
sbb
ret
icebp
or
outsl
insb
dec
and
dec
mov
mov
jmp
pop
std
pop
xlat
dec
shll
jns
mov
adc
inc
adc
cmp
vrsqrtss
mov
popf
jno
outsb
fadds
fsubrs
cmp
xor
jns
mov
sbb
xor
and
add
inc
add
or
pushf
dec
and
gs
out
aaa
inc
aam
out
and
dec
js
stos
mov
pop
incl
daa
xchg
jo
or
or
test
sahf
in
xchg
mov
into
rclb
aam
test
fs
dec
aas
in
mov
xor
and
ss
lods
cld
cltd
xchg
popf
aaa
dec
sbb
sbb
jg
div
push
pop
mov
shlb
test
push
xchg
into
mov
and
fs
shl
pop
push
jae
shl
mov
sti
or
sbb
xor
scas
pop
sub
xchg
fs
sbb
jns
xor
inc
xor
lret
aad
adc
mov
inc
imul
aad
cmpsl
lcall
sbb
rolb
mov
lods
adc
sarb
pop
mul
add
cmp
lods
add
aas
jmp
mov
mov
xchg
xchg
mov
lods
nop
inc
subb
inc
jb
pop
lods
stos
outsb
sub
in
stos
lahf
mov
out
lret
hlt
sti
repnz
lds
dec
sbb
cmp
pop
xor
mov
or
aad
push
stos
fcomp
jne
sub
mov
sbb
loope
xchg
add
and
cmpsl
push
lret
dec
in
mov
leave
xchg
pop
and
sub
cmp
jo
fucomi
cld
mov
mov
xlat
movl
dec
stc
push
xchg
fsubr
jmp
in
mov
out
push
mov
cltd
je
add
fstl
pop
cmp
jg
xchg
shlb
adc
sbb
dec
sbb
mov
in
jbe
sub
inc
pop
jmp
in
or
ss
pop
arpl
sub
test
mov
adc
pop
mov
push
nop
fs
shlb
popa
iret
sbb
js
or
out
adc
cld
ret
adc
cmp
cli
dec
inc
roll
subl
in
sub
mov
les
ja
cmp
notb
mov
push
mov
xchg
xchg
cmp
dec
push
xor
push
mov
jne
fsubr
adc
lods
add
jl
mov
clc
lods
pusha
or
mov
pop
adc
test
into
mov
pusha
xchg
adc
ss
rorb
cmpsb
mov
jge
jl
movsb
pop
call
mov
dec
das
cmp
cmp
and
mov
lock
xchg
push
leave
ja
sub
mov
mov
xor
lahf
or
fsubs
cmp
idivl
dec
sbbb
jl
and
pushf
sbb
enter
lock
gs
mov
test
cltd
jp
inc
dec
divl
fisubl
jle
out
aaa
mov
fistl
cli
xor
cld
xor
push
mov
adc
bound
cmp
mov
dec
cmp
adc
cmp
mov
or
sbb
jne
jecxz
push
mov
cmpsb
fadds
push
push
push
and
lods
loop
push
daa
inc
pusha
movsb
fmull
into
jecxz
lret
pop
sahf
mov
ss
jae
dec
clc
lahf
jnp
push
ds
ficoml
add
cwtl
adc
and
sahf
mov
cwtl
movsl
cld
aad
sbb
loop
xchg
fistpl
pop
push
pop
inc
adc
iret
push
adc
and
add
lds
imul
sbb
push
jmp
mov
loope
mov
sbb
shlb
add
xlat
lds
andb
adc
jb
rcl
cmc
repnz
xchg
push
lods
lahf
loope
rorb
into
sbb
icebp
mov
or
adc
sbb
or
cltd
sub
jg
jmp
jb
xchg
xchg
push
ja
jno
jbe
sub
lret
mov
jns
scas
sbb
test
jb
addr16
mov
mov
lods
mov
push
leave
jge
adc
data16
jg
mov
jp
shr
or
push
jno
hlt
aad
mov
sub
cltd
pop
mov
and
imul
jno
cmc
test
jnp
mov
popf
negl
fdivs
sub
js
aas
sub
movl
pop
or
aas
icebp
jecxz
sub
dec
pop
rclb
rcrb
rorb
outsl
lcall
ljmp
push
pop
lock
in
hlt
sbb
enter
push
and
in
push
cwtl
jp
cld
sahf
jg
dec
or
out
nop
shr
mov
fldenv
jne
jmp
xor
jns
mov
aam
inc
sbbl
jle
xor
fwait
inc
lock
or
mov
jns
cmp
adcl
sub
imul
or
sahf
jb
hlt
adc
lcall
ret
dec
mov
sub
inc
fstl
fwait
and
stos
outsb
xchg
add
lods
cmpl
leave
rorl
int3
inc
fidivrl
repnz
das
aam
int
pop
sbb
imul
push
ss
xlat
clc
test
nop
jae
mov
adc
mov
lods
sub
out
push
mov
push
rclb
bound
pop
cmp
jge
cmp
dec
test
lahf
shlb
loopne
jnp
mov
loop
flds
ret
add
pmaxub
pop
mov
pop
andb
mov
mov
outsl
lret
xchg
inc
loop
sbb
es
jno
cli
stos
jb
in
mov
push
pop
fs
in
mov
out
cmp
jnp
push
xchg
xor
sub
or
cmp
roll
rcrl
in
adc
stc
movsl
xor
and
mov
sbb
repnz
imul
rcll
pop
cmc
ja
push
faddl
mov
and
cmp
mov
cmpsl
mov
pop
and
repz
out
lods
mov
sar
dec
enter
test
les
lcall
and
push
push
push
add
xlat
dec
dec
push
mov
jno
pop
test
cmp
cmp
xor
inc
lahf
sahf
fsubs
mov
pop
dec
inc
and
adc
xor
into
cmp
fcomps
movsl
stos
pop
mov
sahf
xchg
mov
push
mov
mov
mov
gs
dec
std
dec
inc
test
popf
and
add
mov
sub
inc
pop
scas
dec
push
fildl
push
xor
mov
arpl
call
bound
cmp
and
aas
sarb
adc
test
or
xor
mov
and
out
das
xor
sub
and
sub
pop
ljmp
fdivs
test
jp
cmpsb
stos
push
aaa
test
fadd
and
int3
negl
mov
repz
ficoms
jle
insb
sub
popf
inc
adc
test
sbb
xchg
sbb
aaa
aam
int
jmp
xchg
fisttps
bound
outsl
lods
sub
pop
dec
add
push
insl
mov
xor
test
lret
nop
pop
add
rorl
cld
adc
dec
loopne
mov
pandn
sub
and
lret
push
adc
popa
clc
pop
fs
or
sbb
popf
rclb
lret
mov
adc
mov
cmp
push
out
jae
adc
jl
jo
aam
add
inc
adc
out
adc
pop
cmp
into
dec
outsb
repnz
xchg
fwait
xchg
sub
scas
jecxz
loopne
dec
into
mov
jno
add
mov
xor
mov
pop
push
and
pop
sub
ret
in
lret
cmp
dec
add
sbb
sti
pop
popa
sub
repz
je
mov
out
jmp
aaa
call
add
popa
pop
mov
push
mov
arpl
xchg
adc
lret
lods
lcall
jb
into
xchg
xor
and
jg
lea
loope
dec
fmuls
or
repz
ja
out
mov
mov
lds
xchg
cmpsl
fcmovu
scas
mov
ret
pop
outsl
cli
adc
aam
movb
dec
jmp
xchg
mov
push
aaa
cmp
xor
mov
test
pop
sub
xchg
pop
sbb
jp
js
push
pop
and
inc
in
fistps
lret
mov
inc
pop
iret
jmp
shl
dec
fsubrs
mov
dec
cmp
mov
divb
adc
imul
adcb
loopne
movsl
jmp
jp
cld
orb
xor
or
rcll
stos
ljmp
mov
int
mov
test
shr
cmp
dec
or
aaa
mov
scas
or
or
adc
faddl
pop
pushf
jb
cmc
ret
repnz
adc
dec
sbb
lea
push
fstpt
xchg
mov
or
jae
repz
and
jl
in
dec
adc
jge
int3
jl
js
jnp
fstpt
inc
in
jp
pop
xorb
aaa
iret
mov
xchg
iret
mov
cmc
pop
push
push
mov
test
fdivrl
cwtl
mov
movsl
xchg
nop
sbb
fwait
mov
lds
rcrl
in
fisttpl
xor
jbe
mov
nop
imul
rcr
sub
jne
je
nop
sbb
scas
add
jno
push
inc
movsl
ds
mov
stos
cs
xchg
lea
sub
push
mov
stos
arpl
pushf
lods
scas
mov
and
test
jno
add
xchg
sbb
jo
xorl
xchg
mov
js
or
dec
cmp
dec
jb
std
ja
jb
mov
jl
out
imul
hlt
lods
dec
mov
jae
aas
jg
shlb
add
cmp
cs
int3
stos
xor
inc
cli
mov
xor
adc
pop
test
dec
pop
repnz
call
lods
popl
inc
and
push
stos
jne
shl
out
cmp
fcmovnb
xchg
push
jbe
fld
cmc
imulb
and
cmp
jmp
cmp
push
fnsave
jl
sahf
mov
pop
aad
cwtl
je
and
sub
mov
lock
push
fstl
std
sub
xor
out
cs
js
and
loope
fbld
mov
xor
fiadds
clc
mov
xchg
sti
ret
shll
push
aas
int
imul
negl
mov
rcrb
fs
shll
push
xchg
addr16
pop
sahf
sbb
xor
sub
imul
add
cmpsl
aaa
rorl
push
cli
loopne
out
jmp
lahf
jne
sub
cmp
test
addb
lods
push
sub
pop
sbb
mov
daa
mov
mov
and
jbe
lds
lahf
jb
inc
pushf
sbbb
and
out
xchg
cltd
sbb
lods
orb
pop
cwtl
adc
cmp
pop
adcl
push
sub
cmp
cs
ret
mov
repnz
or
dec
mov
sahf
adc
in
adc
rorl
xor
dec
inc
in
or
stos
pusha
rcl
or
aaa
cmp
adc
ss
xchg
fsts
test
mov
out
out
push
mov
in
adc
fwait
sub
test
shl
xchg
je
loopne
scas
stc
dec
sub
insl
dec
jo
stos
out
ret
or
ljmp
adc
data16
ret
les
incb
or
fbstp
std
push
aas
cmp
mov
rorb
pop
cmc
pop
movsl
dec
loopne
push
add
pusha
repz
outsl
fcmovnb
daa
ljmp
mov
xor
dec
sub
mov
test
fsubs
cmpb
dec
in
mov
outsb
fwait
adc
dec
sbb
inc
cmpsl
sbb
ret
add
lcall
or
mov
sahf
adc
sub
push
add
adc
inc
dec
xor
repnz
jecxz
aas
enter
jmp
lods
pusha
and
out
jp
or
shrl
rclb
add
push
shlb
sbb
mov
mov
dec
in
adc
or
mov
jbe
mov
mov
sar
inc
ret
mov
mov
ja
jp
les
je
jae
enter
aaa
out
xchg
cmc
sub
jecxz
ljmp
cld
insb
push
or
pusha
xchg
pop
mov
inc
leave
dec
mov
cli
and
mov
lods
data16
loop
inc
dec
int
sbb
xor
or
pop
jno
dec
or
lock
xor
add
inc
stc
sub
shlb
mov
je
push
pop
mov
cltd
inc
pop
mov
sub
sub
push
or
daa
cmp
jno
es
push
addr16
xor
sahf
in
xor
loop
adc
push
fdecstp
sarl
mov
adc
mov
mov
repnz
ret
sbb
popa
push
pop
mov
and
mov
arpl
xchg
icebp
hlt
xchg
aas
pushf
scas
jo
adc
mov
xchg
dec
xchg
js
scas
inc
ficoms
cmp
xor
mov
cmc
das
pop
nop
pop
xchg
mov
mov
adc
dec
push
and
pop
daa
push
jg
dec
cmp
or
xlat
cmp
std
dec
cmp
js
sbb
add
in
xor
dec
lret
mov
inc
sub
add
lds
cmc
movsl
push
enter
leave
inc
push
and
lock
fcmovnbe
pusha
data16
ljmp
or
out
sbb
xchg
cltd
pop
lahf
loop
xor
sub
fnsave
or
jb
pop
cmp
pop
lret
frstor
sub
xor
je
mov
dec
rclb
cmp
arpl
roll
mov
cmp
sub
push
aaa
movsl
aad
enter
mov
sub
icebp
loope
nop
test
aam
pop
jecxz
add
xchg
push
aaa
xor
and
pop
jne
pop
sbb
mov
mov
lods
in
fadd
jmp
pusha
lret
call
and
xor
inc
js
out
loope
mov
push
cmp
lds
sti
mov
adc
cmc
test
daa
leave
js
stos
pop
jno
mov
push
sub
push
xchg
mov
in
jmp
aam
inc
lods
inc
jmp
cmp
fidivrl
in
mov
push
in
sbb
and
les
push
sbb
jmp
idivb
push
stos
insl
jmp
jecxz
mov
fs
stc
aam
nop
lock
cltd
shr
arpl
and
loopne
int3
sub
sbb
enter
xchg
arpl
int
outsb
jg
pop
arpl
mov
or
sub
out
loopne
adc
scas
mov
outsl
outsl
push
ds
dec
xchg
data16
xor
fsts
dec
rcrb
int
mov
arpl
dec
stos
mov
xchg
cmp
push
shl
pop
jg
inc
loopne
or
lds
jmp
pop
jecxz
pop
inc
scas
push
shlb
lret
aaa
test
dec
rolb
jge
scas
out
clc
mov
leave
std
ds
and
inc
mov
mov
jecxz
jbe
push
fildl
test
xchg
and
cld
inc
lock
adc
imul
sar
mov
call
icebp
ret
and
into
xchg
mov
lods
les
popa
push
pop
jbe
inc
in
mov
and
and
fs
test
imul
push
xor
shlb
ds
mov
cmp
subb
outsb
or
add
xor
orl
aam
ficompl
push
loop
xchg
add
jmp
adcl
fldl2t
mov
cltd
add
out
out
sti
ljmp
mov
rcll
iret
out
ffree
aam
in
test
lods
mov
lcall
ja
dec
cmp
fidivrl
insb
jb
add
test
cmp
xor
js
aaa
inc
mov
inc
ret
xchg
pop
mov
mov
mov
repz
mov
mov
js
and
outsb
push
xchg
inc
mov
or
repz
mov
pop
and
jge
notb
mov
mov
fildll
lret
push
adc
lods
xchg
stos
jae
movb
shrb
mov
movl
pop
pop
mov
iret
lock
lock
adc
pusha
or
lret
inc
arpl
xlat
popf
outsb
test
lret
xor
cmp
jle
out
and
rclb
jl
ja
and
insb
scas
jmp
sub
mov
push
sub
lods
pop
pop
rcrb
les
xchg
mov
pop
mov
in
je
push
jnp
pop
lret
insl
icebp
mov
push
js
inc
push
xchg
test
test
clc
mov
xor
xchg
mov
into
shr
movsb
fiaddl
fists
mov
jno
mov
nop
xchg
inc
push
inc
push
loope
and
test
dec
lahf
lret
hlt
sub
inc
mov
xchg
jecxz
push
gs
cli
lods
mov
bound
xor
jbe
ret
mov
push
lahf
add
and
or
or
jg
mov
dec
sub
inc
mov
loope
or
dec
ds
int
lret
and
outsl
call
push
push
xchg
push
pop
movsb
pop
sahf
mov
sbb
dec
mov
outsl
shr
or
shll
mov
or
fistl
ljmp
sbb
in
mov
scas
out
push
adc
cs
insb
cmpsl
add
gs
stos
loopne
fisubrl
cmp
test
xlat
or
and
loope
fstl
shrb
insb
arpl
lods
dec
repnz
xchg
das
push
aas
cmp
xlat
jmp
mov
and
push
sar
fisubrs
hlt
xchg
rol
xchg
mov
add
movl
lcall
call
vsubsd
push
mov
mov
push
in
pop
xchg
and
in
add
jnp
mov
inc
mov
fadds
bound
adc
push
push
lea
daa
pop
jmp
pop
mov
aam
xchg
pushf
xchg
xchg
ljmp
jecxz
les
dec
xor
push
fmull
ljmpw
mov
and
rcrl
xchg
es
push
out
add
mov
add
lock
add
adc
jmp
pop
aad
das
add
call
into
sarl
lea
outsl
scas
inc
ret
je
lea
test
std
mov
jmp
and
push
sbb
push
mov
and
dec
mov
xor
mov
mov
mov
and
ret
cmp
lea
jp
jo
jae
ja
rclb
inc
in
and
mov
nop
test
mov
rclb
lret
icebp
lcall
lcall
pop
insb
orl
shlb
mov
xchg
fdivrs
xchg
push
bound
movsl
sub
mov
fs
push
lods
adc
inc
adc
pop
enter
imull
lea
mov
mov
es
xor
inc
bound
cmp
cmpsl
jecxz
pop
iret
loope
mov
and
mulb
fisttps
and
aad
and
xor
sub
adc
adc
arpl
adc
popa
sbbl
cmc
out
int
adc
cmp
mov
xchg
and
mov
xchg
outsl
movsl
dec
mov
adc
push
stc
test
imul
rorb
movsl
bound
mov
fidivs
inc
mov
and
test
pop
sbb
mov
xchg
or
xor
sub
inc
jl
sbb
shrl
mov
xorb
stos
outsb
aam
sbb
insb
xchg
out
movsb
add
or
mov
inc
mov
adc
fsubp
movsl
jnp
jp
sub
pop
add
inc
sub
adc
cmp
shrb
mov
push
les
aas
xor
adc
lahf
insb
cltd
stos
jl
xchg
lahf
fwait
jmp
xchg
mov
insb
dec
push
fmull
push
and
jmp
fidivrl
ja
in
mov
fidivl
push
cmp
dec
inc
lahf
jns
push
test
jle
scas
or
mov
push
sub
push
repnz
mov
lods
jbe
fdivrl
adc
or
loop
in
adc
outsl
push
lods
push
mov
fistpll
lahf
jbe
sbb
fadd
out
push
mov
out
push
adc
push
jl
loop
popa
ffree
xor
pop
jg
dec
cmp
mov
data16
xchg
fbld
arpl
pop
inc
in
sub
je
and
stc
and
lret
xchg
dec
in
in
or
loope
insl
stos
mov
inc
aas
flds
mov
sub
insb
mov
aaa
and
out
subb
hlt
xchg
mov
mov
inc
cs
movsb
adc
lcall
sbb
jno
faddl
clc
or
inc
cmovge
into
mov
stos
pop
mulb
sbb
mov
sbb
cmpl
into
xor
lea
xchg
cmc
fcmovnbe
sbb
jae
int
rcll
aas
aas
aad
jg
ds
sub
xor
jno
push
push
adc
movsl
pop
adcl
sub
cltd
sbb
std
pop
xor
mov
repnz
test
fstpl
mov
xchg
scas
xchg
xchg
push
lods
into
rsm
jns
xor
push
es
and
push
jge
in
inc
xor
repz
loop
xlat
cld
sub
lods
xchg
out
dec
nop
jne
xchg
pop
in
cmc
add
loop
rol
dec
cmpb
push
dec
pop
jecxz
push
xor
ror
pop
or
pop
outsb
jle
dec
mov
cmp
fisttps
jo
push
xor
mov
jae
outsb
scas
jb
jle
in
or
add
aad
repz
mov
xchg
and
inc
es
push
out
xor
cmp
mov
lods
or
sbb
pop
mov
mov
and
clc
push
cmp
cmc
sbb
push
cmpl
jne
jl
in
lods
test
aaa
sbb
xchg
jle
mov
ljmp
daa
xor
sub
dec
sbb
pop
mov
in
dec
xchg
pusha
in
imul
xchg
shrl
cld
or
addb
pop
mov
adc
dec
in
sbb
push
fistl
sub
mov
popf
xlat
inc
cmc
imul
ret
jle
loopne
jb
cmp
jmp
ljmp
out
std
add
enter
ds
sub
test
test
jmp
jnp
cld
mov
jno
sub
icebp
loopne
add
fcoms
jno
das
into
insb
flds
or
aaa
cltd
shl
cmp
add
inc
push
les
cmp
jmp
fisubs
lret
cmp
int
imul
mov
fisttpl
adc
add
hlt
fdivp
xchg
adc
mov
push
jb
mov
roll
jo
or
fwait
das
dec
dec
sbb
lcall
or
popf
repz
add
or
push
hlt
leave
into
mov
repz
leave
dec
dec
jns
mov
xchg
outsb
sub
mov
cltd
mov
mov
scas
push
scas
ficomps
mov
test
ret
sbb
inc
out
sub
adc
loopne
jmp
xchg
jle
dec
or
sti
sub
mov
icebp
cli
rcrb
pusha
xor
fnstsw
cmpl
jle
cs
cwtl
cmpsl
xor
lock
inc
and
jg
xchg
pop
cltd
lock
sub
test
sub
adc
and
jae
xchg
out
orl
cmc
repnz
xchg
cli
subb
sub
js
movsl
out
bound
sahf
leave
pop
insb
js
or
pusha
ficompl
shll
iret
lahf
inc
xchg
ljmp
mov
icebp
jge
loop
inc
inc
aas
out
sub
int3
nop
push
jg
cmc
setnp
inc
stc
fadds
lds
or
clc
pop
cmpsl
test
pop
shl
fnstsw
jg
cmp
in
or
sub
into
leave
repz
dec
inc
or
arpl
mov
repz
adcb
ja
jnp
enter
xchg
vphaddbw
xchg
xchg
pop
insl
addb
bnd
sub
mov
pushf
mov
adc
and
subl
cs
jle
aaa
fsts
lods
add
push
mov
cmp
lock
push
cmc
jmp
inc
mov
daa
pushf
js
xor
and
scas
add
iret
xchg
clc
jg
dec
sub
mov
aaa
sub
jmp
jb,pt
mov
mov
add
dec
les
inc
test
add
jmp
mov
dec
mov
mov
mov
prefetch
repz
nop
repz
adc
mov
js
pop
out
mov
mov
mov
inc
mov
push
test
pop
pop
or
cmp
insl
and
filds
push
lods
lret
mov
push
icebp
add
add
shr
or
push
stos
pop
addr16
cwtl
cmpsb
jo
xchg
jmp
jnp
dec
cmp
fwait
inc
in
loop
inc
pushl
movsb
mov
out
les
out
jecxz
sarb
test
loop
push
outsl
inc
cmp
sub
lock
mov
cwtl
es
icebp
ret
aas
lcall
pushf
fbstp
cwtl
mov
outsb
dec
and
test
sar
pop
xor
push
push
ret
cmp
aas
cmc
fisubrl
pop
jmp
xchg
push
pop
fimull
mov
pop
out
lea
iret
push
iret
rcl
pop
xor
pop
lds
outsb
add
loope
outsl
push
xchg
ljmp
test
sub
push
inc
push
movb
std
lcall
xchg
mov
in
mov
push
call
in
lret
mov
arpl
mov
inc
call
fidivrs
or
test
xchg
and
clc
cmp
scas
xchg
sbb
cmpl
dec
xor
jge
insl
fsubp
mov
into
loop
jecxz
rclb
mov
lahf
mov
repz
mov
pop
mov
ret
pushf
rcrl
pop
sub
cli
bound
or
mov
cmp
adc
xchg
shr
xor
ljmp
nop
jg
sar
cld
movsl
movsb
out
cmp
cmp
push
pop
cmp
pop
outsl
or
addb
hlt
cli
mov
adc
pop
cltd
pop
addb
or
adc
mov
push
pop
fwait
sub
dec
divb
xchg
and
arpl
sarb
pushf
ja
pop
mov
pusha
or
cmp
dec
data16
pop
insl
adc
cmp
sbb
fidivl
repnz
or
fisubrl
mov
xor
call
pusha
sub
ret
mov
sub
inc
mov
bound
bound
xlat
test
adc
enter
push
pop
fs
arpl
filds
stc
xchg
pop
leave
adc
pushf
or
adc
inc
xor
pop
jle
push
sbb
cmpsb
and
jae
sbb
stc
jl
roll
pop
imul
jl
xor
fidivrs
hlt
fisubl
je
jno
mov
insl
lahf
jnp
lea
insb
jmp
scas
or
mov
nop
shlb
cld
push
rcrl
sbbb
sbb
lds
jne
pop
or
jg
add
outsb
and
fists
popa
mov
xor
call
les
mov
xor
cmpsb
push
add
sub
adc
out
jne
icebp
addl
or
push
mov
dec
aam
sar
movsl
iret
cmpsb
stos
push
and
test
push
add
inc
xchg
pop
or
lock
inc
js
jne
movsb
mov
add
stc
sbb
in
popa
jmp
or
loope
in
or
dec
mov
inc
call
mov
rcrb
ds
bound
pop
gs
das
pop
and
adcl
xor
lret
cmpsb
scas
das
sbb
out
fildll
mov
clc
pop
outsb
adc
in
cs
or
and
divl
xor
jge
daa
ror
pop
shll
scas
mov
iret
or
xchg
mov
out
hlt
ss
pop
test
call
mov
arpl
pop
push
dec
mov
mov
roll
sarb
mov
xchg
hlt
repnz
or
cwtl
push
xor
ljmp
jo
dec
fnstenv
cli
lea
popf
sub
add
mov
ret
repnz
xchg
mov
mov
push
adc
call
xor
in
les
filds
push
mov
pop
mov
loop
sti
pushf
push
mov
xchg
push
cmpl
jne
mov
mov
pop
fstps
and
enter
sarb
fsubl
std
dec
push
push
out
addr16
push
dec
xor
movsl
sbb
sbb
adc
out
mov
repz
adc
push
push
clc
jge
mov
dec
popa
shll
adc
ja
es
sub
mov
lods
movsl
xor
and
add
bound
mov
loop
xchg
adc
loopne
idivl
enter
out
add
ljmp
mov
lcall
jmp
pop
dec
sbb
cli
jo
and
lcall
inc
push
dec
incb
push
push
mov
test
rclb
sub
jne
and
cmpsl
jg
push
fwait
push
mov
inc
pusha
outsb
jb
xchg
imul
xor
jle
mov
sbbl
cmp
xor
sub
jmp
cwtl
nop
ret
dec
xchg
jne
shl
sub
xor
int
pop
mov
add
mov
mov
xlat
add
lods
out
pop
adc
test
adc
add
movsl
cmpsb
ret
inc
popf
scas
cmc
popl
cmc
popa
ret
fcoml
mov
or
out
mov
int3
pusha
inc
fldcw
gs
std
ficompl
hlt
mov
rcrb
sbb
add
dec
sbb
mov
push
dec
aaa
and
xchg
xor
jne
cltd
fwait
xchg
out
mov
in
and
cmp
ljmp
or
test
mov
inc
dec
mov
mov
std
sub
pop
cmp
adc
ja
mov
cmpsb
pop
aaa
cmc
xlat
push
cmp
cmc
fwait
add
or
pushf
movsl
dec
aad
adc
bound
inc
mov
es
stc
scas
inc
rcrb
call
mov
xchg
sub
hlt
jg
repz
jle
jno
pop
xor
cmp
hlt
pop
pop
addr16
insb
stos
push
imul
jmp
sahf
or
ficoml
aad
sub
mov
leave
call
mov
or
sub
jge
test
arpl
xchg
jp
xchg
mov
mov
dec
dec
and
mov
movsb
pusha
cld
lods
xchg
sub
fldenv
push
fsts
add
call
push
fiaddl
test
mov
and
push
mov
pusha
mov
outsl
mov
rorl
rolb
addr16
jl
test
or
outsl
adc
or
sub
cltd
cmp
inc
out
mov
sub
adc
sbb
xor
inc
pop
and
aad
repz
leave
inc
pop
mov
shrb
enter
jg
dec
adcb
mov
adc
jge
ljmp
and
add
sbb
push
divl
push
enter
cmp
inc
loop
out
in
xchg
xor
lea
pop
into
neg
into
or
xchg
andl
js
daa
jo
adc
repnz
dec
enter
xor
mov
outsb
mov
cltd
loope
das
mov
mov
xor
popa
pusha
mov
mov
add
push
xchg
rcr
sub
dec
scas
jmp
lods
sub
lcall
aaa
pop
mov
cmp
or
fcoms
movsl
das
xlat
fistps
or
test
or
jmp
test
mov
push
lret
lds
push
mov
clc
sar
xorb
loop
std
mov
cmp
aaa
addb
aas
pop
imul
sbb
pushf
ljmp
inc
lods
dec
add
pop
mov
pop
hlt
test
jecxz
jbe
rorl
jbe
pop
dec
push
mov
lret
jp
adc
jp
jp
pop
int3
int
or
push
loopne
mov
fisubrs
je
int3
lock
leave
jle
or
mov
fistpll
loop
mov
inc
xlat
xchg
jb
dec
sub
inc
mov
inc
notl
inc
xchg
cltd
pop
addr16
in
xchg
add
test
inc
or
xor
out
pop
and
sbb
clc
int
aad
test
in
and
pop
jno
and
mov
rcrb
leave
pop
inc
int
pop
test
movb
scas
in
pop
ss
and
xor
or
mov
lods
jae
lods
in
xchg
aad
pop
or
divb
adc
dec
dec
faddl
icebp
mov
push
fbstp
int
cmp
ret
ljmp
jae
and
mov
adc
out
jo
pop
lret
jecxz
aaa
ret
popa
testl
fldl
pop
movsb
popf
lret
jle
pop
pop
shrl
jmp
pop
rolb
dec
ss
inc
movsb
je
jg
inc
mov
outsb
sti
sti
aad
sbb
test
into
xor
adc
adc
repz
xchg
mov
jmp
pop
stos
mov
into
call
mov
in
mov
iret
lret
sahf
cli
icebp
push
jl
sub
push
cmpsb
lcall
fucomi
push
mov
icebp
xor
and
stos
mov
xchg
jmp
iret
push
call
mov
cltd
and
out
adc
sub
mov
jle
mov
ret
imul
es
inc
mov
jp
sub
jne
ja
push
jmp
xor
adc
clc
test
cmp
or
or
cmpsb
push
insl
setp
mov
mov
sub
loop
cmp
xor
sbb
dec
stc
stc
cli
xchg
shrb
adc
dec
call
dec
add
inc
imul
call
fsubl
push
je
push
lods
out
add
in
loope
fmull
push
jno
inc
mov
push
xor
adc
mov
xor
jns
mov
dec
jne
test
dec
aam
imul
mov
fldt
mov
sub
out
jbe
and
xchg
insl
inc
lods
xchg
push
pop
lea
adc
jbe
and
stc
sub
lods
hlt
mov
cmp
inc
out
push
xchg
add
popf
cli
mov
imul
stos
inc
sbb
out
jo
xchg
std
xchg
and
lahf
xchg
sahf
push
adc
or
pushf
fnstcw
dec
daa
add
mov
add
mov
ss
jmp
mov
push
pop
mov
cwtl
leave
mov
sub
add
mov
dec
orb
test
popw
xchg
icebp
xor
imul
divb
scas
pop
lock
push
pop
sub
neg
cmpb
sbb
orb
test
sbb
stos
mov
push
adc
lret
inc
movsb
mov
divb
pop
pop
jb
pop
or
inc
aam
sub
in
xchg
movl
xchg
rcrb
out
sahf
sub
push
fwait
aam
jg
subl
adc
jbe
mov
sbb
cmc
push
cmpsb
shll
aaa
and
sbb
cmp
or
pop
xchg
lahf
xlat
in
cmpl
xor
dec
outsl
shl
aad
xchg
adc
add
add
dec
push
add
adc
movsb
movsl
pop
mov
test
push
mov
or
pop
into
lds
push
mov
clc
xchg
jle
lods
adcl
inc
add
clc
or
jle
dec
fisttpll
mov
jl
jp
push
pop
cmp
ljmp
movsb
or
xor
adc
cltd
xor
addl
ret
jl
dec
out
xchg
sub
imul
sub
outsl
xor
sbb
xor
cmpsb
addr16
scas
in
pop
pop
add
sub
fwait
es
xor
inc
sahf
outsb
testb
arpl
daa
scas
and
add
xor
push
or
xchg
add
adc
xor
test
test
dec
fnstcw
jae
add
aad
out
adc
fadds
je
mov
add
inc
gs
call
jbe
dec
lret
into
loopne
mov
int
repz
cmp
test
out
push
sub
pop
clc
bound
sub
repz
mov
ret
and
shlb
sahf
int
jo
mov
aaa
testb
in
and
leave
add
jnp
or
scas
lret
addb
fcomp
inc
fimuls
jb
xchg
xchg
or
sbb
mov
xchg
in
aas
xchg
lods
and
cmp
xor
push
push
push
adc
add
ret
sbbb
pop
je
fdivr
xchg
jg
into
push
sub
adc
fidivs
or
add
rol
ror
test
jl
xor
popf
lahf
ret
into
lock
sub
scas
adc
mov
aad
repnz
loope
repz
nop
push
enter
movl
jns
xor
out
imul
adc
cltd
jb
or
imul
icebp
imul
lods
jb
rolb
mov
daa
fldcw
jb
stc
cmp
out
fs
pop
dec
mov
dec
stos
sub
dec
mov
sbbl
in
and
cwtl
insl
into
inc
mov
dec
pop
dec
mov
iret
movsl
scas
dec
movsb
xor
add
add
mov
jl
loope
sbbl
or
clc
adc
sbb
sarl
push
adc
or
stos
adcl
cmp
popf
clc
inc
xlat
mov
xor
nop
int3
clc
xor
mov
jg
add
aam
xchg
jb
jbe
jne,pn
fcmovnbe
cmp
pcmpgtd
ja
cmpsl
shlb
insl
addr16
fstps
adc
lea
sahf
repnz
or
or
test
pop
jb
add
or
ret
and
movsb
jle
xchg
dec
fs
sub
ficoml
push
inc
fwait
nop
sti
xchg
or
hlt
cli
cmpsb
cli
push
sbb
rorl
loope
push
rolb
scas
ds
ss
jb
and
das
orb
scas
andl
push
push
xchg
scas
xor
imul
adc
out
cmp
pop
pop
adc
nop
inc
imul
sbb
dec
sti
sbb
dec
add
cmpsb
cmp
xchg
sbb
pop
sub
pop
call
lock
sbb
push
cltd
sbb
outsl
stos
mov
rorl
fmulp
roll
icebp
add
dec
insb
aad
xor
dec
shrl
cmp
cli
inc
dec
cmp
jbe
in
out
or
push
xor
shld
in
lea
subl
iret
repnz
sub
mov
push
icebp
lods
addr16
push
cmc
fwait
ret
les
xor
popf
in
jae
jb
jp
pusha
cmp
jo
adc
xchg
in
adc
ds
je
clc
daa
leave
jns
inc
mov
adc
or
add
das
and
cmp
pop
aam
pop
addl
lahf
inc
cwtl
inc
sbb
cmp
pop
dec
call
in
sahf
push
dec
ret
mov
push
sti
out
aaa
ja
jbe
decb
sarl
std
xorl
add
pop
add
nop
ds
xchg
jno
add
mov
stc
add
std
jb
int
xorl
mov
test
pop
lcall
in
aaa
sahf
push
jbe
pushf
mov
or
add
adc
js
mov
insl
mov
push
dec
stos
out
push
mov
popf
std
lds
or
test
push
sbb
jns
fucomip
stos
sbb
rcrb
or
bound
sub
roll
cs
mov
xchg
xor
xchg
add
pop
sub
xchg
dec
and
dec
xchg
sbb
jb
bound
int
cmc
dec
mov
fsubl
arpl
mov
mov
outsl
mov
xor
fcom
ret
pushf
and
jb
pop
jecxz
push
sbb
arpl
test
pop
das
in
std
in
leave
lahf
fcomip
cmp
or
pushf
jo
out
cli
outsl
int3
loopne
xchg
nop
in
testl
cmp
pop
pop
js
pop
jne
xlat
xchg
js
fisubrs
mov
pushf
daa
sbb
enter
inc
jge
cltd
push
push
inc
stos
imul
add
out
test
jae
jno
push
test
nop
jmp
pop
mov
lcall
jg
xchg
pushf
inc
or
mov
jnp
movsl
adc
adc
pop
jne
jo
push
imul
hlt
push
adc
push
loop
mov
mov
pushf
jno
mov
sub
jmp
jmp
or
std
cli
xchg
inc
insl
cmp
arpl
xchg
xchg
mov
mov
or
mov
and
mov
inc
xor
movsl
ret
flds
xchg
outsl
lds
fst
shll
dec
cli
ss
or
mov
lea
test
test
and
adc
or
incb
aas
xor
popa
push
xchg
sub
jne
or
jmp
xchg
mov
popf
ret
mov
sbb
andl
jecxz
ror
jle
add
or
je
test
mov
xor
xchg
adc
hlt
shrd
cmc
enter
xchg
sbb
mov
push
cmp
lds
pop
mov
push
push
das
inc
flds
pop
cvtps2pi
cmpsl
dec
dec
lcall
xchg
xchg
mov
mov
inc
addb
and
jno
mov
dec
ret
xchg
shlb
popa
and
repnz
scas
out
shr
mov
xrelease
cmpl
cmpsl
push
ja
loop
pushf
stos
cli
data16
and
ficompl
cwtl
pop
push
mov
enter
ret
push
repz
repz
xor
mov
sub
andl
lea
mov
jns
push
imul
enter
scas
fmull
inc
scas
ret
add
or
inc
movsb
sub
dec
mov
mov
pushf
mov
or
inc
imul
sarl
mov
loopne
adc
pushf
scas
or
ficomps
lods
push
and
add
mov
push
sti
test
mov
ss
popa
pop
dec
xchg
outsl
test
pop
cmp
jle
lcall
dec
and
out
into
xor
jmp
mov
inc
out
enter
sbb
popa
mov
cli
or
mov
popa
cmc
mov
popa
shll
xchg
xor
ror
scas
data16
push
lods
sub
lods
and
adc
jae
dec
inc
cmp
push
add
iret
jecxz
shlb
in
jecxz
mov
sub
sti
sub
test
add
push
cmpsb
mov
fstp
cmp
outsb
add
mov
cmc
in
insl
mov
pop
sub
js
jge
cwtl
xchg
push
cmpsl
push
insl
test
out
popf
and
adc
xchg
je
or
aaa
fcom
cltd
or
mov
pop
into
jb
test
push
loop
xchg
dec
dec
insl
and
xor
lods
lret
jle
imul
jl
xchg
cmp
mov
cld
das
jle
in
sub
jns
scas
mov
in
or
mov
hlt
bound
mov
sub
fcomip
dec
cmpsl
addr16
daa
pop
ret
pusha
mov
addl
cmp
pop
lret
popf
inc
nop
adc
mov
mov
dec
pop
mov
sti
mul
xchg
push
out
out
xor
pop
clc
shrb
outsl
in
sbb
or
pop
outsb
pop
dec
dec
std
add
cmp
inc
enter
loope
gs
outsb
addr16
push
cmpsb
popf
je
daa
pop
mov
aam
fcompl
jg
push
mov
xor
clc
test
adc
xor
push
add
int3
xchg
push
fiadds
push
push
insl
cld
sbb
jne
mov
lea
dec
stos
xchg
outsb
rolb
lcall
inc
aaa
sbb
outsb
inc
mov
inc
inc
sbb
mov
jne
in
stos
pop
mov
add
aam
sub
testl
or
mov
mov
jmp
mov
cli
ss
cmp
inc
inc
subl
dec
xchg
push
push
xor
pop
jle
movsb
xchg
out
push
shl
add
xchg
sub
jg
xor
and
xor
rolb
sub
dec
or
add
lahf
cmp
push
les
mov
cmp
jbe
rcrl
or
and
push
test
xchg
inc
sar
test
mov
mov
fcoml
addr16
enter
sbb
xor
daa
push
mov
leave
and
inc
out
out
fisttps
lret
cltd
xor
ret
loopne
in
jb
subl
dec
or
sub
pop
mov
cli
pop
dec
dec
scas
aad
xor
mov
pop
push
lret
int
fistl
mov
jae
cbtw
ljmp
sub
fnstcw
mov
cmpsb
push
popa
xor
or
pushf
aaa
jnp
ja
inc
cmpsl
lock
mov
lahf
test
xchg
add
hlt
push
xchg
int3
xor
stc
mov
and
pop
push
daa
addl
ljmp
and
or
pop
test
frstor
mov
or
inc
push
mov
into
inc
loop
fisubs
pop
cmc
lds
adc
cld
jbe
mov
push
push
loopne
mov
xchg
sub
into
into
sbb
dec
call
xchg
xor
xchg
loopne
pop
loope
sub
pusha
mov
mov
dec
call
inc
sbb
xor
mov
into
pop
dec
adc
ljmp
lahf
pop
call
outsl
jbe
xchg
rorb
jbe
push
jne
push
lea
cs
or
lods
sub
lods
cmp
shl
jecxz
mov
movsb
or
out
push
inc
jbe
pushf
mov
popa
pop
push
sbb
sti
out
cmp
sub
das
ret
jle
cmp
cmp
sbb
xor
jp
fadd
dec
sar
jns
jbe
lahf
cmc
add
dec
or
je
movsb
and
push
lahf
out
rol
mov
add
cli
out
sbb
push
test
xchg
adc
shll
mov
loopne
sbb
adc
das
test
lret
cmp
fimuls
aad
and
push
jg
xchg
cli
int
jne
dec
cmp
inc
lret
aaa
push
aaa
shrl
adc
dec
jae
dec
add
inc
pushf
in
jne
into
fmulp
mov
out
pop
push
dec
fdivrl
adc
lahf
les
gs
push
pop
jg
inc
out
xor
clc
lahf
das
add
cmp
jge
xchg
loop
jp
dec
mov
fs
mov
jl
or
inc
sbb
cmp
push
test
or
movsl
push
ror
fsubp
sbb
ds
xchg
jae
ss
cli
fisttpll
bound
stc
nop
inc
insl
dec
inc
lcall
mov
pop
dec
pop
nop
fsts
xchg
out
inc
std
push
mov
mov
mov
xchg
pop
sub
addr16
pushf
jbe
or
and
ljmp
dec
mov
cltd
sbb
and
dec
das
jl
rcl
rcll
push
stos
icebp
mov
ja
loopne
or
popf
pop
insl
in
fadds
std
je
bound
lcall
imul
mov
xchg
pop
test
dec
loop
jg
dec
sbb
or
test
jmp
call
pusha
in
cmp
pop
inc
fdiv
push
es
or
es
lahf
int3
cli
lds
out
or
xor
mov
or
xlat
xchg
into
mov
js
popf
push
cli
mov
fcmovnu
adc
stos
push
mov
movsb
mov
arpl
sub
adc
sub
cltd
sbb
mov
out
stos
sbb
xchg
dec
cwtl
icebp
notb
aam
jo
dec
lret
pop
sbb
sbb
mov
ror
clc
sub
jb
test
pop
iret
and
loopne
jae
mov
sbb
insl
faddp
scas
ficoml
or
mov
xor
xchg
xchg
aam
lock
xchg
scas
cs
pusha
mov
fldt
jecxz
push
pushf
push
dec
dec
sub
jo
shrb
xchg
dec
aas
mov
mov
cmp
xchg
lods
aas
sar
repz
pop
or
incb
sbb
and
push
inc
out
repnz
jecxz
lods
insb
mov
xor
mov
es
sti
or
pop
dec
xor
adc
movb
push
lds
or
fwait
sbbl
test
push
pop
push
out
sub
mov
mov
jmp
in
dec
enter
int3
js
xchg
insb
push
dec
mov
push
adc
pop
mov
pop
pop
pop
stos
test
mov
inc
mov
dec
pop
sbb
incl
sbb
xchg
aad
leave
mov
xor
mov
inc
sub
ss
pop
jmp
lea
sti
aad
in
mov
fwait
pop
cltd
addr16
or
fs
xchg
pop
lea
fs
jmp
test
push
fwait
pop
push
cmpsl
xchg
add
xchg
mov
aam
in
mov
mov
das
ljmp
popf
jg
pop
outsl
mov
or
jbe
fbstp
dec
icebp
dec
jmp
neg
into
dec
add
loope
push
lret
ljmp
pop
mov
sbb
jns
add
xor
or
or
shl
jmp
andb
sub
sbb
jnp
mov
xchg
mov
mov
pop
inc
ret
aad
pop
pop
mov
push
jnp
aam
jmp
mov
pop
xchg
xchg
dec
movsb
daa
fwait
pop
cmc
push
fsts
xchg
pop
add
sbb
and
push
mov
leave
push
push
mov
in
call
lret
roll
xor
insl
pushf
bound
lds
scas
cltd
jns
mov
inc
stc
in
popf
repz
pop
add
dec
mov
ret
cmp
pop
rcrl
adc
adc
insl
or
mov
mov
push
insb
pop
in
pop
mov
dec
mov
ljmp
rcrl
aam
mov
clc
lock
mov
int3
mov
aas
dec
pop
popa
inc
ljmp
mov
addr16
add
dec
dec
xor
pop
das
imulb
mov
imul
push
dec
push
movsl
lcall
jle
adc
pushf
aas
cmp
xchg
loopne
adc
movsl
push
iret
xchg
jp
adc
jbe
into
dec
in
imul
out
push
sahf
cmc
loop
es
add
in
mov
stos
icebp
jmp
int
addr16
add
sbb
lret
xorl
mov
mov
addl
pop
xor
imulb
xor
xor
out
pop
or
stos
jb
nop
or
xor
imul
push
inc
popa
cmp
xchg
lret
into
mov
pop
mov
xor
movsl
lea
mov
lods
cmpl
sub
test
push
mov
xchg
push
fidivrl
movsl
mov
xor
fiadds
outsb
jl
cli
sti
xchg
test
sub
fisubrs
out
jp
push
insl
dec
push
shrb
mov
mov
ret
lcall
in
add
sub
shlb
faddl
or
add
dec
popa
fists
adc
stos
test
cld
arpl
loop
roll
jbe
add
lret
cmpsb
inc
insl
or
out
push
or
mov
push
cmpsb
add
mov
mov
fs
adc
inc
pop
push
es
add
ret
mov
push
cld
jmp
pop
int
cmp
fnstenv
adcb
sahf
push
stos
cltd
out
mov
add
cmpsb
mov
jb
lahf
out
xchg
xor
sub
or
ds
daa
pop
outsb
push
inc
cmp
sahf
loopne
add
nop
aad
popf
ret
and
mov
mov
push
fwait
jnp
cmp
inc
clc
xchg
jne
sub
fwait
mov
test
fwait
mov
sarl
movsl
push
jnp
int3
fwait
sbb
aaa
xchg
js
xchg
int
inc
jae
dec
int3
imul
inc
push
mov
std
jl
nop
aam
mov
or
aas
add
mov
jg
fwait
cltd
loope
pop
out
lcall
out
loope
das
inc
mov
sbb
dec
aam
adc
jmp
add
data16
mov
pop
bound
mov
and
push
int
sub
test
in
push
mov
addr16
in
mov
mov
arpl
pusha
push
ret
scas
pop
sbb
jmp
cmp
mov
sub
scas
shlb
mov
push
push
push
xchg
cmp
pop
cmp
xchg
std
jmp
jae
xor
and
popf
jecxz
fcomps
and
nop
jecxz
dec
push
adcl
dec
leave
mov
jae
inc
xchg
cwtl
je
in
pop
in
rorb
sbb
xlat
push
into
mov
push
cmpsl
jl
push
ret
std
lret
jo
adc
mov
jae
inc
outsl
testl
xor
or
lcall
out
mov
add
cmpb
clc
xor
fidivrs
adc
rcrb
and
lock
imul
push
sbb
out
xor
jne
mov
scas
adc
leave
js
push
xchg
mov
in
xor
cmpsl
lods
stc
mov
fsubl
xorl
mov
js
shll
aam
xor
jbe
cmp
lds
mov
lret
incl
test
dec
and
xchg
jae
js
hlt
lret
sbb
and
test
repz
adc
out
jb
mov
or
movsb
jns
outsl
ds
dec
data16
xor
addl
cmp
adc
and
movsb
clc
and
xchg
push
aad
mov
fsub
jl
rcrl
inc
mov
fnstenv
rcr
xchg
pushf
bound
stos
jp
inc
mov
jno
cmpsb
add
sub
or
negb
fdivl
ljmp
mov
incl
mov
rorl
sub
fsubp
mov
or
cmp
pop
andb
and
cmpsb
jns
pop
rcrb
mov
jns
loope
xchg
mov
repz
push
jb
ret
std
push
xor
jg
int3
mov
outsl
mov
sbb
mov
sbb
lahf
pop
jg
popa
jae
adc
jl
fnstcw
mov
mov
test
mov
inc
or
ds
mov
leave
pop
inc
cltd
pushf
sub
in
lahf
cmp
push
ret
outsb
sbb
inc
and
dec
cltd
stos
and
sqrtps
call
std
mov
pop
sub
cmp
mov
inc
cmpb
in
ficompl
aam
lret
cmp
fbstp
sub
sbb
or
sbb
mov
in
pop
mov
or
out
inc
push
push
mov
cltd
push
ds
in
dec
jb
sub
loop
push
fstpl
xchg
sbb
mov
and
iret
xchg
or
cmp
aaa
inc
les
scas
movsl
xchg
ljmp
stc
das
sub
cwtl
inc
xchg
aas
cmp
leave
aas
maskmovq
divl
fs
icebp
ja
pop
adc
lret
dec
inc
mov
mov
and
sub
push
int
out
arpl
sbb
mov
or
push
jmp
pop
sbb
movsb
icebp
dec
scas
cmp
sbb
add
fimull
fisttps
ret
dec
addb
xor
mov
xor
adc
mov
push
aas
mov
movsb
out
add
jp
jmp
das
inc
mov
sbb
adc
jl
leave
sbbb
pop
enter
sbb
push
mov
mov
push
push
inc
idivb
jge
sub
jnp
mov
sbb
xchg
xchg
fdivl
pop
jnp
movsl
jne
inc
fwait
leave
not
cmp
addr16
movsl
mov
out
into
push
cs
cs
pop
out
mov
leave
mov
xor
enter
call
adc
push
mov
jl
xchg
sar
or
popa
jbe
ss
mov
sbb
mov
popf
mov
sahf
leave
test
and
mov
loopne
xchg
cmpsb
sbb
popa
addr16
divl
ss
push
nop
and
subb
push
addr16
aad
test
std
push
mov
outsl
mov
outsl
aad
jne
in
add
jp
adc
fwait
ret
lahf
dec
cld
jae
leave
or
mov
dec
pop
push
and
mov
in
cmp
jnp
mov
fmull
add
pop
push
imul
push
out
stc
jnp
rol
cmpsb
clc
xlat
sub
dec
xchg
mov
and
cmp
icebp
push
adc
jge
movsl
sbb
mov
sub
adc
mov
inc
out
jmp
pushf
add
sbb
push
inc
fnsave
jbe
cmp
int3
jb
pop
jns
icebp
adc
lods
mov
cltd
test
or
lret
pop
add
lods
cli
xor
enter
movsl
movsb
insb
leave
adc
jo
lret
imul
cs
cli
pop
lahf
ja
leave
mov
sbb
xorl
lods
cmp
rcl
adc
cs
mov
jb
pop
test
int3
hlt
mov
or
daa
xchg
in
add
xchg
sbb
sub
xor
jl
repz
and
or
loopne
leave
cmp
push
pusha
ljmp
int
adcb
lahf
out
out
fidivrl
xchg
mov
pop
add
push
mov
aam
fcmovnu
inc
comiss
inc
pop
xor
pop
mov
sbb
inc
in
inc
xor
divl
mov
fbld
add
arpl
pop
shrl
fwait
pop
testb
fnstenv
divb
int3
test
arpl
jbe
je
fmul
xchg
xor
mov
dec
sbb
inc
mov
and
dec
icebp
dec
cmp
aad
sti
pop
adc
xor
mov
cmp
dec
jmp
bound
pop
adc
insb
and
inc
xchg
and
jge
sub
test
pop
std
loop
lods
fsubrl
and
mov
or
repz
repz
xor
das
fsubp
cmpsb
pop
add
jbe
jmp
iret
pop
mov
cltd
cmpl
add
lods
mov
mov
lret
stos
lods
out
pop
sub
fwait
aam
pop
inc
xchg
test
add
mov
les
push
push
in
pop
inc
cmovns
xchg
aas
mov
or
daa
cld
pop
loop
jmp
sub
aad
adc
out
jb
in
adc
dec
jb
adc
sub
jl
daa
bts
dec
xor
jae
out
mulb
cs
int
movsb
je
jns
jecxz
xor
sbb
lahf
std
popf
adc
xor
call
out
addb
sbb
mov
cld
lret
cld
sbb
mov
jmp
pop
aaa
fdivs
mov
push
fstpl
mov
int3
das
push
mov
fsubl
sahf
stos
popf
rclb
inc
test
pop
shl
pusha
xorb
inc
jp
mov
leave
pop
xor
push
pop
cmp
movsl
inc
inc
dec
fldz
pop
aaa
cmc
mov
shrb
mov
push
jns
icebp
rclb
or
and
test
clc
inc
push
mov
out
dec
jnp
xlat
lock
jb
cs
fcompl
adc
jle
stos
in
enter
pop
mov
loope
out
addb
in
push
orl
vmptrst
icebp
pop
sti
jge
arpl
xchg
push
test
or
into
and
out
pop
mov
sbb
adc
add
loopne
lcall
push
es
and
insb
pop
jecxz
inc
imul
stos
dec
xchg
push
pop
insl
jns
dec
out
inc
imul
adc
out
movsb
jns
scas
enter
test
dec
jmp
dec
sbb
and
sub
mov
dec
add
popf
push
cmpsl
mov
mov
or
push
jle
dec
dec
popa
orb
mov
outsl
or
fsubl
ret
inc
sbb
push
insl
xor
cli
push
pop
xor
jmp
jle
mov
shlb
fisttps
loopne
cld
scas
push
fs
test
or
add
lock
mov
add
sbbl
int
adc
loop
mov
push
insb
outsb
push
push
jecxz
mov
icebp
mov
dec
repz
es
ja
lcall
sub
mov
and
lret
mov
imul
repz
ror
fxch
dec
mov
and
add
mov
mov
stmxcsr
aas
jb
lcall
aaa
mov
xor
das
fwait
sbb
std
pop
out
int
push
mov
out
sub
mov
hlt
lret
add
and
mov
mov
dec
das
mov
in
or
push
rcrb
rcll
jne
outsb
movsb
mov
push
out
pop
sub
adc
jecxz
xor
cltd
daa
fldenv
push
jns
ds
add
idiv
mov
jmp
mov
cmc
jb
cmpb
dec
ja
add
mov
jnp
out
push
dec
ss
xor
test
jp
ret
add
push
push
dec
dec
pop
or
lods
push
cmpsl
lods
int3
addr16
scas
cli
push
sbb
fldl
rcr
scas
pop
jae
cmp
leave
and
mov
push
sbb
stos
pop
and
and
fnstsw
dec
insb
or
lock
pop
jg
fsubp
subl
or
sbb
ds
push
push
sbb
cwtl
adc
int3
clflush
repnz
call
mov
push
fdivl
shl
push
insl
mov
pop
pusha
loope
rorl
pop
xor
adc
into
xor
pushw
lds
scas
imul
fisttpl
add
jnp
mov
mov
push
popa
inc
lock
push
mov
in
scas
pop
add
push
jmp
xchg
in
in
je
jo
push
pop
ret
push
push
addb
lock
in
or
add
sti
xor
fwait
mov
push
jmp
fildll
addr16
in
push
fstl
sarl
or
dec
ss
das
out
iret
or
sub
lods
lret
lea
xchg
dec
aas
jbe
push
xchg
cs
dec
es
jecxz
fisubl
add
dec
loop
or
inc
or
xchg
push
je
adc
and
scas
jae,pn
iret
std
outsb
and
sub
and
les
pop
popa
sub
jnp
jns
ja
fldl
sahf
loopne
lret
sub
aaa
mov
mov
sub
pop
les
dec
push
lea
cmp
inc
int3
mov
or
pop
sbb
mov
in
xchg
jnp
lret
add
add
lret
inc
adc
sahf
jmp
jle
daa
mov
test
mov
push
cmp
add
jle
sub
in
mov
mov
or
jnp
pop
ja
sbb
xchg
push
movsb
sub
ret
pop
addr16
mov
mov
fwait
xchg
mov
dec
aam
icebp
icebp
dec
fisubl
hlt
rorl
aas
adc
sbb
shll
and
mov
and
xchg
xchg
pushf
ret
int3
test
les
fidivl
data16
or
xlat
std
xlat
pop
scas
pop
shrl
cld
push
mov
push
xchg
mov
into
dec
orb
in
xchg
insb
inc
xor
pusha
test
pop
repnz
add
cli
dec
mov
add
pop
sub
and
and
leave
std
sbb
test
lock
popf
js
xchg
and
out
lret
dec
lcall
or
sbb
cmp
out
sbb
inc
in
adc
stc
sub
cmp
in
pop
int3
sar
pop
hlt
adc
mov
pop
xor
andb
lcall
push
ret
jmp
aaa
sub
adc
ja
sub
mov
or
or
pushf
in
cltd
mov
xchg
xchg
inc
mov
int
adc
adc
adc
push
dec
jno
adc
dec
jns
shll
pop
or
push
movsb
pop
std
test
bound
imul
cltd
and
rcrb
jle
sbbl
xchg
sub
test
xchg
pusha
inc
pop
mov
test
js
mov
mov
dec
xor
dec
cwtl
fisttpll
dec
push
sahf
in
pop
sti
cmp
inc
mov
or
daa
xchg
arpl
add
inc
cmp
das
test
mov
sbb
fsubrl
js
jb
jp
mov
and
ret
outsl
das
nop
fucom
pushf
mov
add
mov
mov
mov
sub
lods
insl
ja
mov
dec
jecxz
daa
mov
inc
into
loopne
jl
sub
pop
mov
mov
cs
ljmp
sbb
mov
test
pop
sbb
stos
mov
popf
push
test
lock
or
std
sbb
add
jmp
add
lock
add
dec
insl
mov
push
and
jg
mov
pushf
xchg
dec
daa
mov
cmp
cld
push
sub
jnp
leave
sbb
arpl
icebp
mov
inc
in
jbe
divl
pop
and
fists
in
lods
xchg
push
cmp
jne
mov
dec
jecxz
rorl
ret
or
outsb
scas
mov
data16
inc
mov
negl
shr
mov
lahf
push
cmp
out
fdivrs
fstpl
into
pushf
lea
rcll
xor
push
dec
lcall
pcmpgtb
clc
and
xor
sbb
mov
jmp
lock
popa
fiadds
mov
push
lock
inc
popa
mov
jle
xchg
adc
imul
push
add
in
and
fadds
inc
pop
push
dec
sbb
mov
in
xchg
outsb
test
scas
imul
cmpb
out
or
inc
sbb
push
mov
add
add
jl
sbb
lret
addb
xchg
jmp
scas
adc
mov
test
fadds
lock
or
push
sub
in
jg
sub
adc
adc
cmc
cmp
mov
xchg
movsl
test
in
mov
lock
and
mov
adc
stos
xor
ret
dec
dec
int
jno
xchg
loopne
push
fcoms
mul
xchg
cs
push
outsl
lea
mov
andl
pop
leave
data16
neg
push
xchg
xchg
data16
mov
mul
push
lds
xlat
mov
mov
call
sti
adc
sahf
stc
mov
bound
inc
xchg
cmp
push
jge
adc
pop
in
fsubrl
test
ret
cli
xchg
mov
mul
dec
pop
inc
or
fildl
fcomps
pop
pusha
xor
push
pushl
pop
pop
shrb
jb
push
mov
daa
pop
in
dec
fwait
sub
lea
sbb
ret
push
clc
push
outsl
add
cmp
outsb
fsubl
enter
mov
push
mov
jne
cld
dec
dec
sub
cmc
outsl
or
xchg
add
pushf
xchg
test
aam
insb
lcall
dec
mov
pop
xchg
ljmp
mov
inc
xlat
dec
mov
inc
gs
mov
cmpsl
imul
aaa
fisubl
jne
push
dec
repz
jecxz
lahf
jle
je
xor
cli
cmpsb
xchg
int
push
scas
jecxz
mov
pop
pop
arpl
mov
outsb
jne
addps
fcoms
test
xor
push
pop
mov
add
cmp
shlb
jmp
pop
andl
fisttpl
and
add
or
test
idivl
fs
imul
in
stos
imul
je
mov
lcall
sbb
jmp
scas
xchg
dec
jns
lahf
adc
ds
mov
xor
push
cmp
mov
dec
loop
pop
fsubrl
sub
cmp
xchg
mov
in
jb
loopne
sbbb
and
fwait
out
sbb
shl
addr16
xchg
out
mov
fidivl
xchg
ret
add
outsl
mov
out
xchg
or
insl
stos
movsb
inc
add
mov
lcall
lret
inc
dec
pop
popa
popa
push
xor
push
xor
mov
push
in
in
add
mov
or
pop
xchg
mov
mov
dec
sbb
jae
cmp
xor
pusha
js
aam
mov
fimull
add
jae
jecxz
and
mov
push
rorl
ret
push
cmpsl
es
ret
nop
push
sub
insl
mov
imul
sbb
push
das
fisttpll
outsl
add
int3
fildll
jge
xchg
push
arpl
ret
call
cmp
pusha
cmp
inc
inc
adc
jmp
pop
or
outsb
adc
xchg
neg
std
ret
pop
int
dec
or
mov
ret
sub
and
push
repnz
mov
adc
fs
mov
adc
dec
sbbb
or
shll
push
test
dec
imul
or
xor
adc
fwait
or
mov
jmp
rol
insl
sbb
roll
aas
outsl
mov
jg
inc
arpl
push
loop
mov
sbb
cs
xchg
or
in
movsl
fsubp
daa
mov
dec
scas
mov
repz
cli
pop
das
inc
int3
daa
test
and
jg
or
add
flds
push
fisubs
out
xchg
or
daa
into
incb
fs
in
adcb
sbbb
mov
sbb
sbb
cmp
imul
pop
outsl
bnd
push
pusha
outsl
add
enter
push
imul
stos
fsqrt
out
ss
cmp
into
mov
mov
out
cmpsb
popf
popa
cmp
sub
nop
or
mov
sahf
add
out
sub
das
icebp
nop
test
adc
movsb
andb
mov
fidivrs
into
adc
outsl
xchg
and
sub
daa
sub
xor
test
stos
test
rcrl
mov
cmpsb
jp
mov
mov
xchg
nop
dec
or
fsubrp
shl
aam
xorb
push
dec
pusha
daa
push
mov
in
imul
lret
adc
push
mov
jl
bswap
negl
cmp
and
ficompl
cli
mov
xchg
inc
push
mov
leave
mov
jecxz
lcall
jecxz
sysexit
addr16
xchg
scas
xor
out
adcb
sub
lret
lods
inc
fcoms
loop
xchg
das
xchg
xchg
pop
loop,pt
cmpsl
out
andb
nop
xchg
aas
and
adc
and
fisubrs
jb
inc
fimull
push
xchg
jnp
mov
iret
push
sbb
adc
jnp
outsl
mov
cmp
xor
mov
sbbl
jno
ljmp
out
pop
fimull
push
ja
test
mov
loop
jp
inc
scas
pop
and
inc
pushf
and
and
sbb
cwtl
loope
dec
mov
push
mov
movsl
xchg
xchg
mov
fildl
mov
xor
or
cmc
inc
cmp
jmp
js
fstpt
aam
jo
add
push
jg
mov
xchg
pop
jo
imul
call
fisubl
clc
pop
mov
std
dec
mov
test
adc
jmp
dec
repz
lds
in
ljmp
sbb
rcl
out
bound
incl
mov
rorb
cmp
cld
xchg
scas
and
ss
fs
test
decb
and
leave
xor
or
out
inc
pop
cmpb
sub
in
xor
lods
dec
inc
xor
addr16
adcl
mov
addr16
pop
mov
and
or
cltd
loop
hlt
sub
or
mov
sbb
ret
outsb
into
out
call
mov
adc
lock
lret
rclb
mov
movsl
enter
cmpl
cmp
loop
mov
out
pusha
or
cmp
push
enter
insl
jno
mov
mulb
shll
cli
jge
push
and
daa
xchg
sub
or
mov
jp
dec
outsb
cmpsb
xor
pop
xchg
data16
out
sbb
xor
adc
outsl
cli
sub
jnp
into
rorb
lcall
hlt
cli
lahf
jl
mov
push
or
lds
cmp
mov
or
cmpsl
lahf
add
mov
pusha
add
lcall
test
test
push
push
push
dec
rcrb
sub
pop
push
push
and
sbb
push
aaa
ja
mov
iret
xor
add
int
and
inc
inc
sub
or
arpl
loop
in
std
mov
mov
add
sub
cmpsb
xchg
inc
ret
jns
cmpsb
sbb
dec
out
inc
jmp
jnp
or
mov
xchg
jb
mov
jo
jg
std
adc
xor
les
or
enter
icebp
xchg
jp
inc
mov
fbld
and
dec
lock
leave
fildll
fisttpl
in
adc
gs
sub
roll
dec
inc
mov
pop
jo
lahf
cwtl
mov
imul
lods
fwait
jmp
cmc
add
inc
push
mov
mov
negb
adc
mov
sar
mov
rcll
jae
arpl
xchg
add
ret
rorb
in
fcoml
loop
sbb
jmp
cmp
ds
sub
fidivrs
cmpsb
iret
mov
call
xchg
into
jo
lea
in
mov
jg
out
pop
repnz
xlat
lds
jbe
lods
mov
pop
lcall
and
call
in
xchg
inc
pop
push
lea
sub
push
cmp
je
es
dec
sbb
addb
xchg
mov
add
pushf
lret
hlt
mov
cwtl
fmulp
mov
cmovno
lahf
push
out
push
sub
sub
test
sbb
fwait
neg
jecxz
or
insl
pushf
pop
or
fwait
ret
and
or
sbbl
mov
outsl
ja
lds
inc
es
ret
mov
dec
dec
dec
push
jnp
mov
mov
and
push
stos
rol
cmp
test
test
pushf
xchg
call
lock
int
ss
push
cmp
or
dec
in
pop
add
jbe
jge
dec
fimull
push
pop
stc
cwtl
and
iret
and
jne
das
sbb
arpl
mov
adc
or
clc
shrb
mov
mov
call
lsl
repnz
popa
and
mov
pop
and
imul
outsb
inc
add
mov
rclb
rorl
cltd
out
das
mov
cmpsb
fcmovu
and
idivb
inc
cmp
xlat
test
pop
in
in
out
out
nop
jmp
xor
cmp
xchg
lods
push
cmp
repnz
push
rorl
adc
inc
ljmp
addr16
stos
addr16
mov
sbb
inc
push
fwait
mov
push
ljmp
std
xlat
daa
fs
jge
xchg
pop
fnstenv
push
sub
push
mov
andl
movsb
pop
lret
int
cmovne
test
cmpsl
shrl
movsb
out
loope
inc
and
jmp
pop
dec
insl
jecxz
lds
push
jne
aad
adc
jle
pop
and
jle
addr16
mov
rcrl
sub
mov
jno
aas
push
push
xor
gs
add
int
sahf
xchg
xchg
or
push
and
repz
aaa
jge
nop
and
daa
lods
mov
in
lcall
loopne
sahf
adc
testl
ret
inc
xchg
push
add
sbb
add
pop
leave
fdivs
adc
lcall
cmp
cmp
hlt
mov
xchg
mov
clc
fmul
jnp
ljmp
and
test
jns
lock
bound
cli
fwait
push
and
fwait
fwait
jmp
push
stc
fbld
push
jo
pop
adc
dec
mov
xchg
rcrl
lcall
stos
mov
rcrl
adc
sub
sbb
dec
repnz
mov
out
sahf
lret
std
push
xor
push
clc
loopne
inc
pop
or
or
int3
cmpl
lods
adc
add
imul
cmp
sbb
push
push
mov
sub
outsb
dec
dec
push
stc
push
jg
sub
pushf
insl
je
cmpb
add
addl
cmpsl
lods
outsl
mov
mov
cmpsb
shrl
mov
and
jecxz
lahf
xchg
and
shrl
adc
cmc
int3
cwtl
cwtl
or
pusha
je
loop
push
testl
mov
push
test
mov
mov
cltd
adc
mov
xchg
xor
push
mov
aam
sar
shll
negl
leave
add
mov
fistpll
addr16
fnsave
ljmp
daa
shrb
mov
inc
mov
mov
or
and
cmp
mov
xor
or
mov
push
push
iret
popf
add
push
icebp
lcall
subl
dec
sbb
popa
dec
cld
inc
push
fidivl
test
inc
cmp
hlt
mov
pop
fsubl
cwtl
mov
mov
stos
add
and
jp
add
es
push
jmp
pop
xchg
cmpsb
test
pop
jbe
push
das
mov
lcall
stos
xlat
test
rolb
sbb
out
repnz
dec
cmp
and
jle
scas
sub
push
pop
inc
out
mov
loope,pt
xlat
mov
mov
sbb
adc
shl
lcall
std
ret
xor
repnz
pop
and
pop
push
adc
negl
push
cmp
in
push
sbb
xchg
fs
jg
jnp
notb
out
inc
ret
push
sbb
jg
adcl
pop
stos
pop
push
js
popf
adc
fiaddl
dec
shrl
sub
das
sub
negb
addr16
or
loope
mov
cli
fsubrl
push
outsl
push
pop
hlt
ds
jl
push
cmp
loopne
push
rolb
jge
mov
jg
xchg
lret
test
dec
dec
stc
and
pop
sbb
or
sbb
jb
xor
shll
imul
inc
sub
xor
lahf
pop
out
xchg
jmp
mov
and
sbb
int
sbb
xor
push
frstor
xor
jl
xor
pop
scas
fdiv
jp
mov
mov
or
into
js
cwtl
mov
enter
push
cltd
mov
pop
jg
fcoms
cld
mov
addb
sub
aad
fistpll
xor
bound
push
leave
flds
pop
mov
xor
lret
and
fdivs
cmpsb
sbb
jle
xor
jae
mov
cli
lock
fcmovnb
lds
ds
xchg
or
mov
mov
leave
mov
push
sub
and
mull
xchg
ds
mov
repz
loopne
inc
push
rcrb
xchg
jecxz
dec
imul
push
aam
fildl
inc
xlat
push
jle
insb
rorb
dec
loopne
jae
les
imul
in
pop
jbe
xchg
mov
lcall
iret
adcl
or
pop
add
mov
push
movsl
mov
movsl
daa
je
xchg
sbb
adc
sub
xchg
mov
iret
in
mov
nop
adc
arpl
or
and
jae
adc
dec
pop
sbb
aam
jp
dec
das
ja
xor
xchg
in
lds
jecxz
cmp
push
mov
out
xchg
mov
shll
xlat
addr16
shll
jg
cmpsb
sbb
jo
inc
push
adc
and
cltd
sbb
cmc
pop
pop
pop
out
xor
lods
inc
mov
push
in
push
repz
jb
add
pop
mov
rolb
rclb
in
cld
fxch
popf
cmp
int3
mov
inc
sbb
adc
outsb
jb
int
inc
xor
push
jmp
repnz
outsw
inc
adc
push
sbb
jg
jb
popa
pop
sbb
pcmpeqw
dec
jecxz
sbb
add
mov
fcoms
adc
mov
jge
rcll
gs
push
add
and
jb
xor
push
sbb
lcall
test
shl
jge
adc
mov
cs
clc
and
adc
adc
pop
xor
dec
popa
xor
push
dec
pop
push
push
fstpl
sti
push
mov
push
mov
ljmp
test
out
test
sub
es
test
mov
push
mov
cld
aaa
je
je
mov
addr16
lret
fs
in
xor
rcl
movsb
je
cmp
add
inc
fdivs
pop
dec
jno
push
dec
xchg
repz
mov
aas
mov
std
add
mov
and
test
cli
outsb
jle
das
pop
adc
cmp
inc
xchg
ret
mov
pop
sbb
and
in
jl
jmp
pushf
out
mov
or
pop
xchg
out
aad
jecxz
int3
push
dec
jg
ja
sub
jne
cmpsb
cmp
mov
or
negl
shll
push
cmp
out
subl
pop
xchg
sub
out
jae
mov
sub
test
push
dec
or
mov
push
das
xor
jp
add
pusha
and
pushf
mov
daa
repz
add
das
and
insb
je
subl
cmpsb
mov
popf
pop
daa
inc
imull
fld
addr16
mov
jle
cltd
rcrb
lods
and
lahf
jb
xor
cmp
inc
cli
sbb
mov
xlat
add
push
pop
sub
adc
cmpb
dec
jmp
and
sbb
mov
mov
aas
sub
sahf
cmp
mov
add
push
push
mov
adc
test
add
call
sub
push
add
cmpsb
rorl
divl
out
jae
iret
scas
cltd
sub
pop
inc
loopne
pop
and
fcom
jno
ja
mov
cmp
arpl
ljmp
fbstp
imul
lcall
fisubrs
push
dec
sub
inc
and
iret
lret
out
js
insb
adcb
sbb
mov
cltd
popa
xchg
xor
xlat
pop
std
pop
pushf
xor
sub
mov
xchg
fistpll
adc
mov
enter
nop
or
jne
fisttpl
in
popa
mov
sbb
inc
in
sbb
mov
rorl
jno
or
outsb
xchg
pop
sub
dec
mov
jmp
sub
xchg
in
mov
out
push
cmp
scas
jne
and
stos
jmp
cltd
dec
stc
push
leave
ljmp
pop
or
mov
mov
je
xchg
movl
scas
mov
shrb
out
cmp
pop
ss
adc
cmp
adc
int3
xor
jg
pop
shl
sub
jne
push
inc
push
xchg
xchg
adc
inc
cmp
mov
jg
fmul
sahf
clc
jecxz
out
inc
and
inc
mov
repnz
test
inc
mov
xor
stos
inc
lock
jno
inc
sub
dec
and
cltd
ljmp
push
fnstcw
mov
cmc
rolb
sahf
xor
in
push
or
add
jmp
mov
clc
lret
sbb
mov
sarl
imull
out
push
inc
nop
dec
in
out
out
or
cmp
xchg
pop
repnz
ror
nop
inc
dec
fsubl
push
cli
rolb
rcr
push
ds
xor
loope
sub
lock
aam
jle
mov
adc
rcll
shl
insb
pop
sub
lcall
add
mov
lods
sarl
shll
or
jnp
mov
cmpsl
pop
test
data16
push
xor
rcll
or
sbb
sarb
ret
pop
rol
or
pop
cmp
iret
loop
adc
pop
inc
fwait
jl
push
inc
push
jnp
or
out
push
sbb
aam
jo
sub
stc
dec
les
xor
lahf
fisttpll
mov
jbe
aaa
and
int3
hlt
push
maxps
ja
or
dec
fistpll
mov
daa
iret
ret
ljmp
test
iret
push
insb
cmc
adc
sti
xorb
pop
dec
adc
inc
xorb
xchg
xchg
jbe
and
stos
lds
iret
sbb
movsl
cmpl
pop
ss
das
outsl
imul
mov
loop
inc
stc
out
pop
or
inc
dec
jae
cmpsl
test
ljmp
xor
jns
mov
and
repnz
fistpll
or
push
and
cs
mov
aaa
adc
dec
xchg
lods
sub
dec
cld
mov
mov
jne
movsb
xchg
push
out
sti
repz
dec
cmp
das
xchg
fstpt
xchg
in
pop
cmp
xor
add
inc
xor
lea
inc
mov
sub
mov
addr16
sbb
out
jecxz
sbb
mov
into
and
xor
lea
xchg
scas
test
repnz
cltd
pusha
popa
fwait
add
mov
mov
dec
dec
push
push
les
das
hlt
sbb
sub
out
sbb
mov
ds
ret
pushf
pop
mov
ljmp
inc
test
pop
or
and
test
lret
jbe
sti
xchg
dec
xchg
jae
push
mov
adc
pushf
pop
adc
stos
cs
pop
xor
sbb
ss
hlt
ret
inc
and
xor
loopne
mulb
fistps
fbld
pop
lds
adc
sar
pop
or
pop
xchg
pop
dec
xor
cmp
aas
aas
pop
ret
mov
push
jbe
push
push
mov
adc
mov
cli
jge
test
cmc
cli
call
xchg
add
sbb
inc
push
ljmp
cmp
andl
push
mov
rorb
mov
mov
scas
imul
jle
sub
jge
cmp
data16
lock
popf
jns
shll
mov
inc
cmpsl
jno
mov
daa
xchg
lock
mov
test
add
insl
fistpl
negl
mov
sub
mov
dec
or
fstpl
lods
inc
push
xchg
ljmp
xchg
pop
cmpsb
push
imul
rcll
mov
ror
mov
and
and
scas
mov
adc
loop
mov
adc
int
dec
xor
cli
pushf
outsb
xor
cltd
out
pop
cltd
inc
push
movsb
xchg
xor
outsl
add
fdivs
jne
stos
pop
clc
sub
shll
imul
and
xchg
int
fwait
push
sub
addr16
not
mov
neg
aaa
outsb
das
mov
mov
jo
jecxz
push
dec
jae
scas
js
fistpl
cmp
xchg
jecxz
lock
sub
pop
xchg
movsb
movntps
loop
arpl
bound
ja
pop
cmp
sbb
fdivs
fsubl
push
sub
shlb
mov
ljmp
mov
sbb
lods
pop
fcoml
push
in
lods
push
aam
inc
in
jbe
and
sarl
int
inc
imul
sahf
mov
sbb
or
cmp
popf
mov
xchg
pop
lods
notl
mov
add
outsb
cmp
cmp
rclb
daa
jo
dec
dec
jmp
addr16
push
jp
js
iret
call
das
jne
cmc
ja
cmp
or
popa
fcoms
test
int
xchg
mov
fdivs
das
mov
mov
pop
leave
ljmp
sub
mov
dec
sbb
push
ret
mov
mov
jo
lea
cmp
aas
test
xchg
sbb
mov
xchg
sbb
dec
mov
lods
xlat
xor
jnp
xchg
and
mov
add
sub
sub
aas
xor
pop
std
pop
leave
lcall
add
jne
jmp
and
cmp
not
push
repnz
sub
out
in
mov
mov
fnsave
bnd
out
lret
iret
mov
and
mov
scas
test
jecxz
mov
pushf
adc
aaa
nop
push
fdivrs
rcll
in
shr
repz
pop
cmp
cmp
subb
test
icebp
xchg
sbb
pop
dec
leave
sti
jbe
std
fldt
arpl
std
aas
cwtl
ret
dec
mov
out
and
dec
xchg
xchg
xchg
sahf
mov
xchg
lahf
push
mov
in
insl
xor
arpl
or
add
jno
icebp
loope
cmp
cmc
outsb
mov
or
daa
lods
aas
sub
mov
add
jno
stos
push
jbe
pop
clc
stc
popf
loope
sti
add
inc
pop
jne
jo
mov
js
inc
push
in
lea
insb
les
mov
sub
xor
and
pop
cmc
aaa
or
imul
test
fyl2xp1
xchg
lea
adc
and
mov
or
jnp
fisttpll
inc
xlat
in
or
xchg
jb
aam
xchg
out
and
sbb
inc
push
xorb
ret
adc
xor
jp
ds
xor
lea
addr16
in
test
adc
mov
repnz
cltd
insl
adc
fst
and
inc
outsl
mov
mov
arpl
add
pop
cmp
inc
dec
jnp
xchg
loope
jl
fmull
das
xor
add
adc
pop
leave
fwait
in
inc
push
fldt
rorb
cwtl
add
loope
cmpsb
or
rcr
lahf
push
sti
xor
gs
dec
cli
push
push
sarb
sbb
mov
xor
popf
decl
mov
pop
icebp
and
mov
cwtl
cmp
mov
int3
addr16
call
pop
mov
mov
gs
int
jno
ficoml
cs
and
and
or
dec
test
nop
xchg
gs
roll
jmp
out
sub
stos
in
adc
adc
inc
cmp
aad
inc
sub
or
pushf
mov
shr
jmp
and
and
and
movsl
out
lea
pop
pop
jle
mov
mov
fisubrl
ret
cmp
icebp
xor
push
sbb
pop
mov
rcl
shlb
out
mov
pop
inc
loope
jno
inc
mov
or
sub
cld
loop
orb
test
dec
cld
adc
out
mov
mov
sbb
sti
into
lahf
repz
inc
lret
mov
fisubs
mov
sub
or
mov
cmpsl
mov
dec
cmp
movsb
icebp
in
add
mov
inc
loop
mov
lret
lahf
bound
sub
loope
clc
cwtl
data16
cmpsb
out
jo
popa
jp
psubd
xchg
pushf
jge
in
sbb
sti
in
mov
pusha
jmp
mov
aad
movsb
ljmp
jp
ret
xchg
cltd
stc
mov
cs
mov
push
mov
push
push
sti
add
sub
add
xor
xor
jmp
jb
mov
sti
insb
cmpxchg
jns
adc
jge
in
std
lcall
mov
punpckldq
js
outsb
cmp
int
jns
or
xlat
adc
xchg
push
out
xchg
mov
xor
lods
addr16
xchg
sbb
mov
inc
cmp
jns
cltd
push
xor
je
fldcw
scas
in
in
xchg
out
scas
adc
push
jle
jle
mov
int3
cmp
xor
decb
fdivp
sub
imul
push
jp
jo
lods
jno
push
jle
lods
dec
and
push
test
pop
cltd
adc
mov
fsts
xor
int
jge
xchg
fs
sub
jno
xchg
cwtl
add
mov
jb
xor
inc
inc
aaa
xchg
je
jae
adc
rcrl
pop
pop
inc
pop
movsb
mov
cwtl
or
das
out
jnp
imul
push
cmp
xor
jge
dec
insl
dec
jb
sub
mov
out
aam
jae
mov
or
adc
bound
xor
bound
cmp
xchg
cmp
mov
inc
cmp
push
sub
movsl
test
in
loope
and
int
out
lret
pusha
int
in
sub
xchg
sub
outsl
shrl
or
mov
outsb
insl
loop
pop
lret
vmovq
lds
jg
inc
xchg
es
movsb
push
cmp
xchg
push
xchg
inc
adc
iret
lods
adc
loop
lock
movsb
test
mov
data16
adc
ss
mov
add
lret
pop
mov
cmp
mov
mov
ror
sub
jecxz
fldl
xor
scas
mov
mov
inc
rorb
mov
mulb
pop
dec
lds
push
add
and
adc
sbb
idivb
mov
popl
mov
cltd
pop
or
mov
fsubp
pop
inc
push
fisubrs
jne
ja
jecxz
out
cmp
inc
andb
xchg
xor
push
pop
out
dec
mov
repz
aaa
dec
pop
mov
sub
ret
or
shlb
or
mov
xor
movl
inc
jno
inc
or
shl
jns
sbb
adc
fs
push
pop
iret
cli
push
ret
fwait
or
sbb
mov
in
fists
sub
lret
adc
push
aad
test
mov
mov
daa
adc
pusha
fidivs
dec
cmpl
out
pop
lds
sub
cmp
js
add
pop
pop
pushf
push
and
pop
enter
jg
jbe
sbb
mov
xchg
jecxz
imul
lret
push
ds
pop
push
fnsave
lods
mov
mov
jbe
lds
in
push
xor
mov
mov
mov
pop
pop
fnop
or
pushf
xchg
ret
inc
shl
call
cmpsl
adc
mov
rorl
pushf
or
sbb
out
pusha
mov
mov
inc
pop
call
cmp
cwtl
dec
pop
push
add
mov
xchg
pusha
std
ds
repnz
push
sarb
js
push
cmp
inc
imul
movsb
dec
pop
notb
repz
sub
and
xchg
sarl
dec
rcl
mov
sub
xchg
inc
mov
pop
mov
push
fistpl
test
push
rdpmc
adc
subb
fs
jp
lret
cmpsl
push
pop
cmp
lret
cmpsl
std
sbb
test
add
pop
pop
incl
adc
jno
cmp
cmc
fcoms
push
jnp
icebp
mov
xor
mov
sub
std
ficoml
dec
jno
sbb
int3
mov
push
addr16
fs
pusha
sub
aad
loop
mov
es
int
adc
push
fwait
loope
cld
rcpps
xchg
jg
out
movsb
dec
mov
out
mov
cld
pop
sti
sub
lret
push
add
push
push
add
dec
inc
idivl
inc
and
dec
mov
mov
jb
sbb
xchg
xor
mov
loop
jmp
dec
and
cmp
aas
sbb
inc
icebp
xor
dec
cvtps2pd
dec
in
jl
test
std
int3
pop
pop
test
mov
sbb
jg
insl
push
mov
cmp
mov
lcall
push
mov
inc
add
in
imul
add
imul
test
mov
cld
pop
ficomps
sbb
sbb
negb
jecxz
dec
test
aaa
insl
push
pop
xor
hlt
jb
cmp
cmpsl
sbb
shll
mov
cmp
pop
xchg
push
mov
mov
scas
cs
or
push
inc
push
push
mov
pop
ret
add
pop
lcall
imul
popf
iret
pop
pop
fsub
es
mov
pusha
sbb
or
ret
jo
outsb
pop
cmp
inc
xchg
or
push
jmp
pop
dec
daa
mov
mov
xor
push
dec
in
lret
xlat
cwtl
mov
dec
pop
out
roll
je
xlat
enter
pop
je
and
fsubrl
xorl
adc
adc
xor
inc
push
mov
sub
jno
or
adc
adc
jne
xchg
dec
fstpt
sbbl
addr16
clc
in
mov
sbb
movlpd
pop
rorb
aam
xchg
in
cs
jmp
cwtl
pop
fadds
lods
call
aam
mov
push
add
or
sahf
xor
cli
dec
cmpl
xchg
cltd
iret
fisubl
dec
lods
sub
test
loopne
and
pop
out
outsl
xor
mov
in
sub
mov
test
iret
cmc
jo
icebp
shl
fdivl
mov
pop
fstpt
imul
jno
xor
loope
dec
mov
jno
inc
sti
sahf
dec
xchg
pop
push
in
int
lods
lret
mov
int
repnz
les
xchg
cmp
inc
cmp
fldt
cmpsb
xchg
mov
jl
and
repnz
push
inc
jno
push
pop
pop
divl
enter
xor
xchg
rclb
mov
cld
popf
cmp
add
imul
stos
ret
fstps
sahf
hlt
loope
rcrb
mov
mov
dec
cld
aad
jg
sub
jl
inc
int
lret
fistps
cmp
dec
stc
push
add
mov
xor
lods
or
inc
push
pusha
jecxz,pn
mov
clc
idivb
mov
out
dec
aam
inc
gs
mov
pop
jle
ljmp
nop
jno
add
shlb
popa
mov
pushf
dec
mov
sbb
ds
fadd
pop
pop
divb
fidivrs
xor
push
int
adc
ds
add
xor
or
xor
cmp
xchg
fbld
xchg
pushf
xor
adc
dec
and
push
popf
push
mov
ret
fs
loopne
mov
xor
and
aas
leave
rclb
pop
movsl
mov
outsb
adc
sbb
movsb
mov
les
push
dec
cmpsl
fstp
stc
cs
mov
push
xor
ds
rorb
sbb
in
cmp
mov
out
cs
push
lea
xor
lret
xorb
lds
mov
add
cmp
sbb
scas
test
pop
mov
or
jb
stos
push
push
arpl
cwtl
xchg
push
adc
loopne
mov
stos
fsubrl
cmp
cmp
sbb
mov
push
bound
fisttpl
popf
sahf
stc
mov
push
out
xchg
push
mov
xchg
add
loopne
sub
je
test
and
pop
cmp
dec
and
je
js
add
fsubs
xchg
mov
xchg
pmulhw
xchg
xchg
mov
notb
pop
or
jmp
outsl
lods
mov
xchg
or
xchg
sub
mov
addr16
add
nop
mov
and
inc
pusha
push
sarb
pop
add
scas
or
popa
lret
sbb
ss
in
mov
adcl
roll
or
pop
jbe
je
cmp
pop
dec
aaa
sub
les
jb
cmp
xor
or
stos
jnp
lcall
ljmp
int
loope
cmp
popf
inc
dec
mov
dec
xchg
je
icebp
jl
lret
addr16
pop
pop
add
aam
dec
sbb
inc
xchg
mov
mov
jo
cmp
and
call
ret
cli
dec
sub
cmpb
push
shll
pop
lahf
mov
mov
popa
lods
xor
or
or
pop
jno
lock
jb
fwait
push
fildl
mov
aaa
nop
mov
scas
jge
fwait
adc
adc
fsubrs
dec
repz
and
pop
sahf
into
dec
cmp
xor
das
adc
xchg
mov
adc
fisubrl
mov
add
adc
outsb
sbb
repnz
mov
push
sub
stos
mov
pop
es
fidivrl
nop
inc
cmc
lods
or
mov
in
sbb
repnz
pop
fiadds
stc
and
outsl
in
jbe
mov
and
jnp
aam
pop
lds
rcrb
dec
push
arpl
cmc
push
inc
xchg
stos
sti
ret
and
xchg
sbb
jmp
mov
rorb
fwait
xchg
stos
lock
jl
fwait
mov
adc
pop
clc
pop
pop
sub
pop
testb
test
es
mov
shlb
fwait
adc
test
mov
mov
insl
mov
mov
es
fisubs
nop
sar
std
adc
jmp
cmp
test
or
test
dec
movsb
inc
mov
inc
push
loop
mov
push
xchg
loope
xchg
add
adc
rorb
testl
sahf
sbb
pushf
xchg
and
mov
adc
mulb
fcoms
addb
enter
push
dec
hlt
pop
lods
add
movsl
push
aam
test
repz
adc
xchg
test
repz
cmp
stos
int
pop
jp
dec
test
popa
js
add
push
divl
add
iret
lret
mov
dec
pop
push
adc
out
jecxz
xor
jle
insb
and
cld
pop
andb
imul
jnp
xchg
pop
iret
xor
push
scas
sbb
mov
cmp
xor
enter
aad
cmp
imul
cmp
js
popf
sbb
lock
jno
and
cmc
sbb
mov
int3
jmp
sahf
mov
push
mov
push
mov
aam
in
inc
mov
lret
or
shlb
lock
mov
push
jl
vcvttss2si
divb
dec
push
ret
cmp
adc
sub
test
inc
fcompl
jecxz
xchg
jmp
aam
lret
dec
push
adc
dec
push
add
adc
sub
mov
inc
push
test
test
push
lea
cmpsl
dec
test
fcoml
sub
pop
inc
sbb
xor
bound
rol
sbb
dec
out
add
sbb
aas
jno
je
jb
pop
sub
add
xor
in
sub
test
es
rcl
aaa
fisubs
add
push
mov
mov
out
lcall
mov
ja
dec
ret
stos
sbb
adc
pop
loop
test
mov
mov
clc
arpl
pushf
push
je
and
or
push
out
mov
lret
xchg
mov
cld
pop
cwtl
sbb
lahf
mov
push
iret
lret
shlb
fisubs
lcall
pop
mov
lock
push
lds
lock
xor
xchg
push
out
shrd
sub
iret
outsl
rorb
cltd
bound
add
mov
in
add
and
pop
push
shl
loopne
adc
cwtl
mov
mov
jo
and
idivb
push
stc
mov
lahf
push
mov
movsb
ret
add
pop
stos
test
insb
xor
fsts
xchg
sbb
xchg
and
loope
mov
or
fldenv
pop
push
mov
cli
fstpt
mov
mov
incl
loop
mov
xor
ds
aam
inc
mov
aam
pop
xchg
and
negb
cld
lds
xor
imul
inc
aad
lods
mov
sti
inc
dec
mov
aas
in
push
push
fwait
sub
pop
aas
in
xchg
mov
sub
fnsave
test
mov
loopne
lret
pop
sarb
nop
xor
mov
pop
std
cld
lahf
mov
pushf
aad
cs
cmpsb
hlt
out
cwtl
mov
sahf
jns
or
inc
lock
jl
int3
add
fisubrl
push
xor
call
add
mov
mov
imul
loope
xchg
insb
dec
mov
lret
fidivrl
push
push
int3
imul
fmull
jg
ljmp
dec
inc
mov
mov
ret
jb
dec
ret
lea
mov
sbb
xchg
js
in
sti
stc
and
dec
mov
data16
iret
test
mov
rcrb
mov
jb
stc
int
push
push
fsubrs
sbb
cwtl
sbb
inc
cmpsb
mov
data16
ret
and
les
dec
inc
dec
dec
mov
int
sbb
loope
mov
push
lahf
das
in
das
les
loop
jmp
or
ret
inc
movsl
outsl
adc
jecxz
movsl
dec
aaa
inc
icebp
dec
and
cmp
aam
aad
jg
dec
jns
daa
lret
jecxz
sub
mov
push
jne
out
lock
jl
sub
push
arpl
outsl
dec
scas
jne
bound
les
mov
fdivl
sarl
xchg
xchg
dec
push
mov
push
dec
out
jno
lret
xor
dec
iret
loopne
xor
adc
inc
pushf
mov
out
inc
cmp
xor
loop
arpl
sahf
mov
fs
push
ja
test
or
hlt
xor
push
cwtl
insl
add
insb
pop
jno
adc
lods
and
out
inc
outsl
cwtl
sbb
xchg
inc
add
adc
imul
pop
mov
cmc
jmp
aad
mov
cld
add
jo
sub
cmpsl
push
cmp
push
pop
das
sarb
dec
stc
or
jne
je
int3
je
lret
jecxz
pop
std
xchg
out
test
clc
popf
mov
jg
cmp
xchg
push
bound
test
std
dec
cmp
xchg
mov
into
sahf
push
push
or
sahf
lcall
inc
icebp
incb
sub
jne
lcall
jp
mov
pop
pusha
stos
idivb
cli
pop
push
cmpsb
pop
sbb
mov
push
movsl
sbb
data16
mov
adc
mov
push
mov
outsl
xor
push
fiadds
shrb
and
jne
xlat
not
jmp
push
sub
aam
test
push
mov
cmp
xor
sub
cmp
lock
in
sub
out
in
pusha
stc
clc
lock
fsubr
push
or
adc
in
fisubl
ret
push
pop
or
nop
mov
sbb
stos
mov
ret
sbb
mov
adc
mov
stos
add
add
out
imul
adc
fidivrs
fst
cwtl
xorb
bound
mov
lock
mov
pop
out
ss
arpl
imul
std
mov
into
enter
and
stc
pop
call
iret
out
xor
stos
leave
pop
repnz
addb
sahf
sub
daa
mov
fstl
clc
mov
add
inc
pushf
lret
lods
mov
rorb
inc
xor
popa
jl
add
adc
out
cmpsl
pop
movsb
mov
mov
pop
mov
ds
scas
pop
xor
outsl
fxch
test
and
adc
sahf
lahf
clc
jnp
idivb
stos
mov
adc
clc
adcb
jle
add
xchg
mov
stos
call
pusha
mov
popf
rcll
roll
mov
imul
cli
mov
jmp
add
call
aaa
adc
cs
rol
or
jne
cli
ret
dec
adc
daa
adc
xor
xchg
mov
cmp
jo
pop
mov
mov
cmpsl
adc
mul
test
jo
pop
xor
pushf
inc
ds
xchg
mov
sub
mov
jge
loope
in
lcall
outsl
jge
inc
cltd
arpl
mov
xor
sahf
inc
cld
fwait
and
popf
xchg
push
rcr
ljmp
scas
jnp
inc
imul
out
adc
mov
ret
sarb
xorb
push
mov
inc
jne
and
mov
xor
jmp
or
stos
lcall
adc
fidivl
dec
cmpsb
outsl
fs
dec
fistps
sub
xchg
sub
repnz
jecxz
imul
cltd
icebp
movsb
ljmp
cmpsl
hlt
arpl
or
scas
repz
sub
gs
dec
jnp
cmp
int
test
adc
push
mov
mov
lret
adc
loop
xor
and
out
int
cmp
pop
dec
outsb
pop
xor
and
rcr
xor
jbe
loop
stc
popa
jg
fdiv
ja
xchg
and
shrb
in
or
jmp
pusha
cmpb
adc
push
dec
fsubrl
daa
inc
fucom
pushl
xor
outsb
jl
cmp
mov
call
sbb
mov
shlb
ret
lret
xchg
jbe
popf
out
inc
fnstcw
sahf
sbb
xor
push
ficompl
fwait
popa
aas
mov
mov
mov
cmp
and
mov
loopne
jne
xchg
sbb
dec
add
mov
add
aaa
push
xchg
int
sbb
outsb
push
push
cmp
dec
jno
and
sub
rclb
push
mov
mov
mov
mov
cmpsl
add
in
inc
jb
and
push
push
sbb
negl
fildll
pop
insb
aaa
jge
lea
push
cmpsb
cmpsb
cmp
sub
das
pop
ret
mov
jne
jbe
adc
fs
xchg
xchg
sti
inc
lock
pop
fmulp
xchg
or
dec
bound
mulb
leave
lret
addb
sti
repnz
sbb
fs
nop
and
sahf
aas
add
lret
jle
dec
jo
repnz
pop
mov
mov
push
or
out
ja
mov
ss
xlat
cmc
or
movsl
mov
mov
jp
cmp
stos
mov
movsl
stc
es
mov
scas
mov
jg
jle
mov
adc
hlt
or
sbb
test
js
punpcklbw
test
adc
or
loopne
pop
fldt
mov
or
dec
xchg
mov
sub
pop
pop
ret
notl
mov
sbb
maskmovq
dec
fwait
mov
fxch
inc
rcrb
xchg
std
gs
mov
enter
jno
sub
jo
cli
mov
lods
sbb
cmc
pop
mov
pop
xchg
xchg
xchg
and
xchg
mov
in
sbb
setae
push
fs
aam
add
daa
stos
leave
jae
or
dec
xchg
scas
add
lret
dec
clc
loopne
sub
add
inc
mov
adc
addl
data16
ret
jp
int
in
jns
pushf
xchg
jge
dec
pop
inc
mov
cwtl
inc
cmp
dec
adc
push
sbb
xor
aaa
cmpsl
test
bound
sbb
adc
in
arpl
jmp
or
xchg
inc
xchg
adc
push
mov
loopne
pop
pop
push
pusha
and
push
pop
or
mov
rol
mov
jbe
fs
inc
pop
fsubr
mov
out
mov
decl
sbb
dec
mov
setp
jl
sub
pusha
movsl
and
mov
and
popf
ror
fdivr
sub
in
lcall
jl
inc
lret
sub
cmpsb
and
lods
adc
out
adc
adc
int3
int3
movsb
leave
nop
roll
les
mov
outsb
and
inc
fwait
enter
ret
movsb
insl
cmc
fistpl
mov
out
cmp
sub
pushf
sub
xchg
das
add
js
js
outsl
rcrl
popa
xchg
out
loope
outsb
push
jbe
or
popa
daa
dec
mov
les
push
test
mov
xor
xor
dec
add
dec
adcb
inc
mov
idivl
movsb
xchg
mov
mov
pop
nop
push
mov
leave
pop
repz
addr16
stc
fmuls
enter
jnp
fdivrs
jle
mov
mov
adc
divl
push
loop
in
lds
in
ret
movsl
ss
icebp
add
enter
lret
cmp
mov
jbe
mov
mov
fiaddl
mov
sbb
and
repnz
inc
pop
cmp
divb
add
add
xor
inc
testb
mov
loope
dec
mov
in
loope
data16
pop
cmp
fldcw
dec
mov
jno
dec
inc
enter
mov
dec
cmp
int
sti
fidivrs
sbb
cmpb
sub
pop
loop
push
pop
popa
xchg
add
decb
mov
rclb
enter
inc
jnp
inc
movsb
mov
jmp
adc
je
cmp
pusha
push
daa
xor
jp
jo
push
pop
mov
mov
push
inc
out
adc
ja
xchg
mov
pop
mov
xchg
add
jnp
xchg
and
xor
jo
rcr
adc
cld
xor
int
sub
adc
sub
imul
enter
in
stos
add
daa
add
cmp
xchg
fimull
insl
sub
lahf
add
fldcw
loopew
addb
les
pop
jb
test
mov
pushf
mov
jnp,pt
pop
mov
mov
dec
jl
push
push
mov
pop
scas
mov
add
insl
mov
push
cmovg
inc
cwtl
ret
ret
ja
mov
sub
stos
icebp
pop
clc
adc
addr16
ret
jl
es
inc
jno
cmp
loope
arpl
aas
stos
cmp
xchg
sbb
in
sbb
test
mov
mov
lahf
or
push
and
cmpsl
lret
cmp
jne
pop
mov
in
sbb
xchg
pusha
adc
out
stos
pop
lret
xchg
jns
dec
lds
xchg
ret
push
or
in
adc
add
inc
outsb
sub
into
xchg
icebp
lahf
push
sub
js
jl
pop
push
dec
inc
push
jo
shrb
jbe
cmp
fidivrs
or
mov
les
out
popf
adc
mov
fists
cld
out
ret
mov
shll
pop
nop
adc
xchg
cmc
push
out
adc
push
cmpsl
mov
fnstenv
cmp
dec
test
xchg
and
test
int3
mov
or
popf
sbb
add
xchg
lods
popf
jg
in
mov
jl
ljmp
cwtl
or
push
dec
lods
lea
stc
sarl
push
sti
push
in
lcall
xchg
pop
and
adcl
add
int
jae
daa
or
mov
in
clc
and
aam
mov
adc
stc
or
jp
in
imul
mov
mov
lret
pop
sbb
pop
les
or
mov
jbe
cmpsb
fstl
fidivrl
rcrl
leave
js
or
xor
pop
pop
icebp
loopne
sbb
xor
inc
jae
shll
xor
in
jb
dec
movsl
dec
pop
mov
in
lods
inc
jo
inc
mov
out
dec
mov
cmpsl
out
add
stc
data16
lds
push
or
jl
rolb
jnp
mov
fbld
test
clc
in
cs
mov
cmp
inc
pop
fcoml
adc
cmpsb
sbb
jno
add
fsubrp
testb
adc
pop
mov
movsb
dec
xchg
push
pop
ss
or
loopew
pop
mov
add
mov
sub
add
push
bswap
shrl
push
push
dec
push
pop
ror
je
mov
dec
cld
sbbb
testb
not
push
sbb
jbe
loop
push
loope
dec
outsl
lods
roll
and
in
push
ja
lods
mov
movq
in
dec
inc
dec
enter
loop
loopne
ja
shr
push
pop
push
pop
inc
cmp
faddp
xchg
push
in
inc
add
fsubl
cmc
in
mov
test
or
icebp
mov
push
and
pop
pop
imul
aam
stos
popf
inc
jns
jbe
xor
jp
cmp
cmp
cmp
enter
cld
push
jp
lret
sub
imul
mov
pop
or
mov
jae
dec
in
outsl
out
push
pop
enter
push
adc
dec
ss
js
loopne
jle
dec
lds
cmp
pop
std
out
jo
xlat
inc
pop
je
jp
push
jmp
sbb
cmp
mov
inc
stos
push
cmp
jbe
inc
orb
loope
loop
xchg
mov
inc
mov
inc
jae
pusha
mov
pop
stos
in
push
scas
fiaddl
mov
lods
popf
dec
ret
lret
jp
push
jp
cmp
push
sub
fprem1
dec
push
aam
fwait
popf
mov
js
shr
inc
mov
adc
adc
cmpsb
das
sbbb
loop
push
jae
loope
fwait
mov
and
dec
aaa
mov
outsl
dec
outsb
mov
cmp
xchg
hlt
adc
jg
out
mov
scas
jp
xlat
aad
dec
stos
sub
inc
ds
pop
out
mov
add
scas
rcr
movsl
shl
mov
push
test
push
mov
das
dec
pop
push
setns
bound
cmp
stos
push
xchg
mov
iret
rcrb
xlat
jp
ror
sbb
adcl
cwtl
mov
in
in
sbb
inc
mov
push
mov
pusha
push
test
mov
aaa
outsb
and
pop
lock
das
mov
dec
pop
mov
cmc
inc
sbb
and
xchg
pop
mov
sbb
add
test
in
or
test
test
mov
ljmp
fcomps
and
add
fsubs
jae
out
mov
gs
jmp
or
xchg
pop
iret
fs
push
rcll
bound
sti
xor
stos
scas
daa
ficoml
addr16
add
push
iret
pusha
xor
add
lahf
jns
test
insl
mov
lds
idivb
xor
and
mov
int
xchg
int
mov
das
dec
fidivl
test
jmp
outsb
int
and
push
push
leave
dec
mov
shll
ljmp
dec
out
inc
dec
js
jp
pop
mov
int
and
clc
mov
pop
sbb
repnz
inc
jb
xor
push
mov
test
pushl
pop
inc
sub
push
sbb
xchg
repnz
jmp
fcomps
loope
daa
fcoml
jecxz
cwtl
rcrb
sahf
mov
mov
scas
in
arpl
mov
repnz
mov
out
orb
aas
and
and
xchg
push
mov
sub
fwait
jmp
sti
xor
lds
jne
aam
lcall
mov
pusha
imulb
loopne
xchg
pop
sbb
addr16
pop
push
sbb
push
inc
test
je
fs
xor
cld
inc
push
lcall
dec
imulb
dec
push
in
xchg
pop
fiaddl
das
dec
loope
test
insb
push
insl
imul
addr16
pop
insl
mov
ret
inc
jo
mov
push
in
scas
mov
pop
incb
psrld
clc
test
mov
mov
ret
iret
cmp
jge
rolb
adc
jle
push
push
jmp
inc
fs
pop
xor
les
push
daa
mov
sub
push
outsb
aam
sub
pop
dec
loopne
cmp
and
fcmovu
mov
mov
out
jbe
dec
xchg
xchg
pushf
mov
loop
inc
jp
testb
sbb
cwtl
and
repnz
lea
cmp
test
popa
in
xchg
loopne
sbb
inc
or
test
cli
insb
and
inc
cs
dec
mov
das
or
addl
jmp
push
sub
fists
inc
push
sub
dec
ljmp
push
aaa
ret
push
dec
loope
lods
rorb
pop
xchg
push
pop
lcall
test
push
push
lds
sbb
pop
add
sbb
mov
leave
cmc
js
insl
xor
cwtl
or
lods
hlt
jg
lcall
sti
shrl
fisubl
sub
data16
lahf
add
out
cmp
mov
add
cs
dec
mov
out
adc
lock
push
loop
shlb
mov
sub
mov
rorl
andl
pop
loopne
stos
andl
imul
and
mov
out
xchg
add
std
jl
sub
push
je
insb
mov
and
xchg
pop
test
repz
rolb
dec
sbb
inc
dec
mov
lds
xchg
xchg
out
movsl
shll
push
push
scas
adc
test
add
je
daa
sub
pop
sbb
aaa
or
jno
test
rcl
pushf
sbb
xor
test
in
es
out
xor
pop
stos
in
pop
pop
or
add
mov
pop
sub
mov
mov
push
lods
adc
in
pusha
loop
inc
stc
orb
les
jne
xor
nop
cs
inc
jno
mov
pop
aas
lahf
into
in
add
in
add
cmp
mov
aad
jns
cmp
aad
std
and
fcmovnb
jmp
movsl
loop
out
ss
and
aad
test
sbb
xor
lcall
out
fistpll
cmc
xchg
adc
pushl
lods
pop
int3
xchg
cs
iret
and
in
cs
sub
dec
sbb
xlat
pop
fsubp
cmp
pop
dec
data16
iret
mov
push
stos
shlb
push
fsubl
hlt
fwait
test
push
ret
or
cmpsl
rorl
ljmp
daa
sti
out
lods
adc
sbbl
or
inc
daa
dec
adc
in
jg
mov
cmp
dec
push
inc
mov
pop
or
sub
iret
sbb
fcoms
lock
and
cmp
mov
mov
divb
movsb
jl
xchg
shlb
cmp
xlat
ss
mov
pop
aas
addr16
jmp
xor
fimull
lret
lock
sub
add
push
xor
xchg
rolb
fwait
test
clc
push
adc
ffreep
les
jmp
dec
in
lods
mov
mov
gs
xor
lcall
sbb
enter
mov
and
test
mov
hlt
pop
jg
cmc
fimuls
pop
xchg
addr16
sub
sub
xor
mov
leave
pop
inc
add
adc
mov
dec
xchg
pop
push
outsl
fstpt
lcall
push
aas
aaa
dec
xlat
dec
stos
movsl
xchg
sub
sbb
adc
in
jmp
jne
or
push
mov
xor
andl
out
jnp
int3
pushf
andb
nop
ja
push
xor
js
mov
push
or
jbe
test
fimuls
adc
imull
cs
imul
jecxz
cmc
imul
loopne
xor
adc
stos
pop
push
test
jae
jne
ds
xchg
jecxz
loope
pusha
xor
call
inc
in
fstps
mov
mov
pop
pop
dec
xchg
xor
push
mov
push
aam
cmpsb
popf
sbb
sub
or
stos
lea
adc
mov
loope
jle
pop
int3
mov
lds
ret
ret
cmp
scas
push
xchg
pop
jl
dec
mov
fnstcw
dec
stos
in
fcoms
dec
pop
cli
gs
sar
fwait
js
jg
rep
xchg
imul
cmp
or
gs
fiadds
inc
mov
les
pusha
aas
gs
mov
sub
pop
loopne
xlat
sub
push
jmp
and
lock
iret
xchg
dec
adc
jo
stos
jle
repnz
aad
mov
push
xchg
bound
jge
decb
imul
push
push
cwtl
ficoms
xchg
xor
sub
shrl
jns
test
push
lret
or
sbb
jmp
or
adc
cli
icebp
mov
add
repnz
dec
cs
adcl
outsl
or
decl
in
jecxz
adc
cld
and
sti
jmp
lock
mov
inc
pop
pop
gs
lcall
es
push
call
xlat
fidivrs
sub
cvtps2pd
add
ja
and
adc
dec
mov
rcll
lret
ljmp
leave
jecxz
in
ficoml
mov
and
int3
adc
sub
mov
pop
inc
push
push
jl
cmpsb
addr16
cmp
fadds
pop
mov
pushf
les
sub
push
test
nop
cwtl
stos
cld
clc
out
test
or
shrb
pop
mov
push
fstpl
sarl
cmp
cs
dec
sub
xchg
sbb
mov
xchg
incl
outsb
gs
push
mov
sbb
jae
adc
push
lcall
xor
aaa
movsb
dec
adc
pop
pop
out
fs
dec
hlt
cmp
mov
lcall
inc
push
jp
add
orb
push
cwtl
sbb
jle
fimull
add
cltd
jp
or
pop
xchg
push
push
or
aad
cmp
mov
push
jg
mov
pop
aad
cmp
in
xchg
and
aas
stos
out
sub
loopne
adc
dec
sbb
sub
cmp
push
shll
insb
mov
pop
xor
fisttpl
jb
loopne
dec
xchg
imul
xchg
push
test
mov
test
fists
mov
pop
jbe
jp
and
icebp
out
pushf
lods
push
add
xor
xchg
xor
sti
stos
xor
jle
call
mov
in
jne
iret
jle
jnp
mov
js
fcomp
jnp
dec
out
rclb
les
cmp
mov
jl
lods
nop
jb
data16
xor
fisubrl
cli
push
push
inc
mov
movsb
mov
mov
dec
divb
repz
sbb
fbld
jge
xor
or
inc
pop
mov
pusha
out
addr16
mov
xor
adc
and
mov
sbb
aas
add
ret
jle
aas
in
jp
test
jbe
ja
scas
dec
fsubrl
hlt
fldcw
repz
inc
mov
ljmp
shl
les
and
xchg
scas
and
cmpsl
inc
hlt
rclb
xchg
data16
js
stos
xor
mov
inc
sub
std
loopne
pushf
sbb
ljmp
push
cmp
add
orb
mov
js
xor
stos
das
xor
xchg
sub
mov
sbb
loopne
xchg
mov
cmpsb
loopne
movl
pusha
je
mov
imul
mov
push
out
ja
mov
ljmp
or
je
mov
xor
mov
push
scas
pop
lret
push
jmp
imul
push
insl
cmp
jo
sbb
mov
pop
xlat
aas
enter
cmp
mov
add
xchg
sbb
jmp
mov
nop
xchg
push
adcl
ret
xor
push
or
lar
fdivrp
fnsave
stos
repz
test
shlb
jle
push
sti
rcrl
or
adc
subl
cmpsl
push
mov
popf
sub
dec
aad
cwtl
andb
popf
imul
dec
or
cmp
outsl
sti
push
mov
rcrb
xor
outsl
sarl
cmp
cmp
xchg
insb
mov
ffree
insl
pushf
dec
std
movsl
out
outsb
push
lock
push
inc
repnz
mov
dec
mov
adcb
fs
xor
push
out
push
push
push
sbb
sub
add
stos
fidivrl
fstpt
push
mov
push
pop
shlb
jns
pop
and
data16
mov
sbb
repnz
mov
inc
adc
cld
pop
aad
mov
mov
xchg
je
lret
xlat
mov
dec
push
xor
xchg
std
sbb
pop
imul
jge
arpl
test
jle
cmpsl
mov
or
repnz
adc
pushf
jp
jg
mov
jb
decl
push
psadbw
mov
jno
fdivrs
inc
inc
rol
jnp
scas
loopne
out
pop
pop
xchg
mov
test
int3
add
cmp
jle
push
mov
xor
adc
mov
nop
cwtl
mov
sbb
mov
pop
test
je
inc
les
push
xchg
std
fnstenv
xor
outsb
icebp
pop
xor
lcall
adc
pop
cld
xor
push
push
test
pop
sub
mov
inc
dec
pop
push
push
repnz
sub
xchg
and
ret
jns
cmpsb
add
iret
or
into
outsl
xor
xchg
stc
jge
cmp
jns
jns
loope
rorb
mov
jbe
fucomi
dec
test
cmc
mov
push
ficomps
fnclex
xor
jb
les
daa
mov
int
test
sub
orl
adc
lds
mov
mov
repnz
mov
hlt
cmc
popa
ja
jns
shr
add
sbb
iret
push
arpl
lods
mov
cmp
pop
jl
fwait
push
std
xchg
cwtl
js
jb
push
ret
inc
packssdw
mov
fimull
lods
xchg
mov
or
jle
stc
in
jge
push
test
push
sub
ljmp
add
push
push
mov
xchg
scas
mov
jne
jle
jno
call
pop
mov
xor
sbb
adc
jbe
jae
add
repz
mov
insl
sbb
decb
cli
les
outsb
jb
mov
test
loopne
mov
mov
push
cmp
pusha
hlt
stos
roll
ret
and
mov
sbb
jg
sub
inc
int3
jo
mov
jbe
lret
adc
in
stos
cli
pop
outsl
pop
std
std
loopne
mov
movd
mov
loope
das
notb
push
invlpg
mov
cltd
mov
gs
push
fildl
in
add
lret
test
jg
push
fidivs
jmp
and
mov
lock
pop
mov
push
pop
ret
push
cmp
out
test
scas
xchg
sbb
add
dec
mov
or
enter
pop
test
mov
dec
jmp
pop
xchg
inc
movl
stos
in
arpl
lods
test
pop
cmp
sbb
jns
inc
adc
sahf
out
and
fstpl
stos
das
inc
pop
inc
jo
xchg
rol
dec
cmp
shrb
aam
lods
mov
cli
and
mov
pop
push
mov
lahf
arpl
push
fwait
lahf
xor
jb
fadd
mov
aas
add
and
mov
or
xchg
pop
sub
and
lock
or
inc
pop
add
mov
pop
dec
inc
jns
hlt
scas
add
into
mull
jg
rorb
int
cmpl
fidivs
lods
adc
mov
mov
pop
xor
pop
sbb
cli
imul
adc
loop
jmp
lret
lahf
imul
or
mov
adcb
cwtl
out
cld
xchg
xchg
add
scas
lret
lods
out
pop
fists
xor
gs
jmp
mov
pusha
pushf
add
lods
jmp
cwtl
mov
pop
fwait
out
inc
aas
ds
cmp
or
insb
mov
adc
or
movsb
stc
dec
ds
test
sub
and
adc
test
test
mov
fstpl
icebp
jmp
add
mov
mov
ljmp
es
daa
stos
scas
jg
out
and
pop
sbb
add
sub
dec
fsubp
sub
adc
outsl
fimull
popf
outsl
outsl
in
inc
pop
push
vmread
hlt
out
popa
dec
add
in
adc
xor
lds
adc
loope
inc
dec
rolb
jge
daa
insb
int3
out
pushf
iret
dec
sub
pusha
push
mov
pop
aam
les
pushf
daa
outsb
and
lret
test
jnp
pop
int
inc
mov
daa
push
xchg
mov
inc
cwtl
ja
stc
push
inc
mov
outsb
push
ror
xchg
pop
dec
daa
repnz
cmp
test
loopne
jb
enter
repnz
int3
push
mov
push
adc
inc
mov
mov
and
sub
arpl
fmuls
repz
dec
ret
repnz
jb
in
mov
xchg
mov
cltd
jbe
mov
cmpsl
mov
mov
into
pusha
or
xor
je
pusha
xor
mov
lods
push
mov
xor
cltd
in
dec
xchg
mov
pop
cmpsb
and
sub
lret
movsb
outsb
dec
aaa
mov
pop
xor
pop
clc
inc
xor
dec
insl
dec
and
pop
outsb
scas
jg
outsb
fdivl
dec
mov
mov
hlt
push
mov
jp
mov
fwait
add
inc
and
movsb
push
stos
std
out
mov
xchg
out
pushf
mov
testb
je
push
jp
fwait
push
es
clc
hlt
movsb
faddp
mov
push
aaa
inc
mov
mov
pop
adc
sub
push
popa
push
js
mov
out
clc
xorl
dec
cs
aaa
scas
in
sbb
mov
add
xlat
and
jmp
out
rcrb
and
scas
testl
xor
loop
xor
lret
insb
repz
cltd
jae
and
das
cltd
mov
test
lock
inc
mov
int
aaa
insb
push
push
pop
inc
rorl
insb
xchg
dec
cmp
jecxz
and
jl
pusha
mov
repnz
push
repnz
gs
jno
push
cmp
pop
xchg
jae
sub
push
addl
out
les
imul
lahf
sub
inc
xlat
icebp
shll
pop
dec
and
cld
or
xchg
or
pop
int3
mov
roll
daa
xchg
aam
pop
out
xor
mov
adc
fimuls
and
ss
ja
cs
loope
insl
cmp
test
and
cmp
stos
xchg
adc
add
inc
test
inc
out
sub
lahf
movsb
test
pop
add
in
lods
shrl
cmp
out
push
mov
mov
out
jnp
dec
sub
fnsave
cmpsl
scas
jle
into
jp
stos
cld
outsb
loop
pop
xchg
jl
rolb
or
mov
jecxz
add
mov
add
cmp
pop
jae
lods
push
out
xchg
rclb
jno
cwtl
jle
in
adc
sub
push
jb
fnstcw
fdivrl
cmp
mov
adc
add
cmc
mov
movsb
sbb
ret
dec
or
loop
loopne
pop
jno
mov
jne
inc
in
xlat
mov
ja
mov
pop
xchg
stos
add
cmpsb
lret
pop
mov
mov
dec
pusha
rorb
sbb
insb
sub
rclb
add
sub
mov
pop
lock
or
loopne
rcrb
pop
lahf
jle
xchg
jp
popf
out
cmp
mov
out
addr16
and
or
sahf
shlb
lea
mov
testb
sahf
mov
and
addr16
mov
pushf
ds
scas
mov
fcmovne
lahf
xchg
repz
fs
adc
xchg
lods
fcoms
mov
xor
icebp
add
shll
outsb
std
xchg
in
xor
in
sahf
mov
or
push
and
imul
fwait
and
adc
cld
xor
std
jae
mov
ja
mov
mov
sbb
shrb
inc
xchg
mov
cmpsb
les
insb
jl
xchg
dec
sbb
push
jns
pop
cmp
xchg
insb
sub
mov
mov
movb
cmp
fcoms
jmp
ret
lods
pop
push
xchg
lea
push
mov
out
xor
nop
sbb
ret
std
enter
push
xchg
adcb
mov
lods
psubw
popf
movsl
and
adc
call
fists
cltd
in
adc
daa
adc
lea
movsl
sbb
xor
push
mov
sti
dec
pop
scas
cmp
pand
lock
out
push
dec
in
scas
inc
mov
sarb
pop
ss
cmp
insl
cmp
adc
or
repz
in
sbb
xor
lods
jo
xchg
movsb
scas
stos
cmp
push
cmp
dec
inc
cmp
mov
xchg
sbb
call
pop
push
arpl
fs
cwtl
mov
pop
adc
call
outsl
or
ja
dec
jle
mov
das
add
and
dec
or
sub
dec
rep
xchg
jo
call
leave
outsl
and
je
jbe
mov
pop
push
push
arpl
sbb
mov
inc
mov
cmp
xchg
lock
cmp
hlt
xlat
sub
movsb
test
mov
or
jmp
or
xchg
icebp
sysexit
in
fwait
sub
inc
das
dec
das
add
pop
insb
pusha
subb
xchg
adc
or
sbb
movsb
out
jmp
popf
xchg
adc
call
xor
push
das
lret
push
jns
xor
lret
shll
adc
xor
test
jge
fidivs
xchg
mov
mov
mov
push
mov
pop
jae
push
mov
repz
mov
mov
stos
lret
sbb
daa
sbb
or
outsl
or
jns
pop
iret
mov
and
or
bnd
lret
out
xchg
fistpl
hlt
fcomps
mov
or
ss
add
mov
push
xchg
jg
scas
xchg
cwtl
dec
cmp
inc
out
sub
push
sbb
xchg
mov
mov
dec
data16
push
in
sub
mov
mov
push
jg
jg
push
lock
mov
das
dec
or
xor
notb
pop
sahf
and
inc
cmp
call
in
adc
out
es
mov
jno
stos
sbb
and
push
or
fwait
daa
push
rcrl
inc
and
call
adc
lret
movb
mov
adc
push
and
xor
push
adc
xor
pop
test
mov
xor
adc
cmp
xchg
lods
sbb
in
and
rcll
add
pushl
dec
orb
jg
cmp
cmp
into
jae
cld
pop
xorb
xor
mov
cmp
lret
pop
mov
std
cltd
sub
add
aas
xchg
mov
les
lcall
xlat
scas
dec
cmp
shrl
hlt
es
ljmp
jae
fcmovne
pop
mov
cmp
or
lret
pop
push
movsb
add
xor
pop
cmp
or
adc
das
xor
xchg
aas
mov
mov
mov
out
sub
cmp
ret
pop
lock
rclb
mov
xor
insb
bound
add
fs
std
push
mov
jge
enter
das
jno
test
pop
mov
movsb
scas
sahf
sub
dec
jno
dec
ds
xchg
scas
pop
jecxz
and
stos
lahf
cmc
adc
aas
shrb
jg
or
xor
jnp
xchg
add
mov
cmc
pushf
dec
pop
sub
mov
sub
sarb
sbb
fwait
test
scas
movsb
fisttpll
imul
cmp
sub
fstp
enter
and
shlb
add
aam
or
stos
mov
lcall
lods
xor
sbb
mov
push
in
xchg
push
ljmp
aaa
mov
inc
lods
sbb
pop
stc
or
mov
or
movsl
or
push
jge
mov
popa
stos
scas
push
int3
jae
adc
xchg
roll
cltd
nop
icebp
inc
pushf
jle
sub
icebp
or
push
xor
fisubrs
cmp
loopne
mov
loop
mov
paddusw
lea
lcall
fidivl
jb
and
pop
pop
js
jle
or
cmp
pop
addb
mov
xor
out
idivb
mov
out
imul
or
mov
std
aas
sbb
xchg
and
aaa
seto
cmp
mov
cmp
fcom
adc
addr16
sub
add
fists
mov
mov
lret
mov
mul
aas
invlpga
adc
fcmovbe
inc
lock
outsl
fs
in
cmp
push
jae
js
loope
and
mov
and
or
cltd
dec
mov
test
pop
push
adc
or
xchg
ds
outsb
aam
and
movsb
dec
mov
mov
outsl
insb
je
push
mov
or
scas
or
loop
jnp
dec
push
cmpl
xchg
mov
loopne
js
inc
push
push
mov
dec
flds
jl
jbe
sub
bound
aam
dec
jnp
xchg
mov
xchg
or
inc
push
push
leave
pop
sub
pop
inc
stos
cmpsb
stc
mov
clc
sub
cmp
mov
lahf
fwait
movsl
mov
pop
adc
cmpsl
xor
data16
jns
loopne
mov
rorb
ret
cmp
mov
lahf
and
ja
out
xor
int
mov
pop
loop
dec
fcompl
mov
in
aad
lret
inc
mov
push
jecxz
out
jbe
xchg
mov
dec
inc
cli
rol
test
sbb
jno
fidivl
sbb
jp
push
mov
addr16
lcall
push
sbb
lret
push
insl
pop
pop
cmpsl
lret
jno
jle
repz
xor
cwtl
mov
lds
lods
mov
inc
push
movsl
imul
and
xor
jl
leave
jg
inc
ja
mov
sub
rcrl
lret
mov
ret
xchg
call
add
cli
cwtl
inc
nop
sub
dec
outsl
arpl
and
mov
stc
cli
cmp
rolb
jecxz
dec
cmp
push
mov
mov
ss
clc
sbb
dec
into
mov
mov
mov
jae
popa
call
push
mov
cwtl
jmp
test
cld
sbb
inc
and
pusha
jg
lea
xchg
idiv
push
scas
addr16
gs
or
stos
add
loopne
bound
pop
js
fidivrl
fnstsw
push
imul
sti
cmc
sbb
std
outsl
lret
cmp
ss
rorb
xchg
lahf
dec
out
inc
aaa
mov
push
lods
or
pop
mov
fildl
pop
insl
ljmp
mov
bound
enter
enter
mov
sahf
lods
xchg
stos
test
sti
pop
popa
movsb
adc
ds
mov
ljmp
mov
cmp
push
cmpsl
lcall
mov
jge
push
inc
cld
pop
aam
mov
pop
jecxz
fadds
outsb
cwtl
inc
mov
imul
call
sarb
int3
cmp
aad
test
and
or
mov
fstps
jnp
pushl
sbb
jne
cld
rcrb
inc
push
inc
mov
repnz
iret
or
pop
in
cmp
loope
loopne
pop
add
aad
test
jmp
jne
adcb
sbb
inc
push
dec
cmp
or
cmp
mov
stc
inc
dec
cltd
inc
stos
jge
pop
sahf
inc
xchg
pop
jae
insb
int3
or
aaa
and
aas
mov
cli
mov
xchg
in
ret
notl
xor
or
and
jne
and
push
mov
jnp
jecxz
xchg
daa
or
jno
int
jg
lret
scas
mov
lret
adc
cmp
mov
xchg
cmp
loope
xchg
jmp
pop
cmp
mov
inc
in
pop
and
add
mov
mov
cmovae
nop
cwtl
and
xlat
pop
jo
cmp
jo
xor
shlb
daa
mov
mov
xor
bound
pop
xchg
sub
push
inc
mov
int
shll
out
js
lret
movsl
out
jecxz
jae
sub
cwtl
loopne
outsb
mov
jb
or
enter
cmc
or
sbb
subl
sbb
decb
xchg
mov
cmp
cmp
addr16
popa
or
lret
std
hlt
xchg
mov
add
out
jecxz
cmp
rolb
aas
push
aad
arpl
sub
sub
jl
xchg
jbe
and
dec
jne
mov
xor
test
insl
mov
aas
lods
mov
rclb
sbb
stos
push
cli
pop
popa
outsl
cmc
ss
sbb
pop
lods
int
call
call
inc
loopne
insl
call
mov
inc
test
push
sbb
adc
mov
jg
loope
sahf
data16
cwtl
mov
mov
dec
les
scas
outsb
ds
insl
aas
ffreep
repz
dec
in
and
ficoms
mov
xchg
aam
stos
xchg
orl
sbb
jg
repnz
adc
xchg
cmp
call
add
mov
mov
out
test
repnz
lahf
mov
cmpsl
add
jae
insb
inc
push
mov
sub
hlt
incl
xchg
arpl
sub
outsl
arpl
adc
imul
inc
fs
orl
or
test
cmp
add
sbb
and
xchg
push
xchg
incl
movsb
sarl
ss
cmp
cmp
push
cmp
iret
lods
pusha
arpl
or
je
aam
getsec
pop
jbe
xor
cmpsl
hlt
out
sbb
jl
jmp
inc
and
jmp
mov
cmp
and
out
add
fwait
pop
test
data16
xlat
lret
mov
inc
inc
bound
xchg
addb
nop
or
inc
inc
jnp
adc
push
xlat
pop
notb
ret
test
inc
xor
jp
gs
jno
push
jbe
push
fcomps
pop
xlat
mulb
sbb
mov
cmp
mov
aad
rolb
les
and
and
lahf
pop
iret
add
pop
imul
subl
pusha
push
push
cmpsb
push
jmp
fists
pusha
and
mul
cmp
push
insb
pushf
scas
jbe
arpl
push
cmp
sub
ss
mov
fistpl
aaa
mov
pop
lock
rorb
mov
inc
icebp
push
adc
or
out
cmp
movsb
insb
pop
push
addl
sti
pop
loop
inc
insb
into
stos
mov
jmp
ss
mov
mov
xor
test
test
dec
in
inc
sub
outsl
aam
pop
cmp
jnp
test
das
out
jbe
push
enter
inc
xchg
lahf
ljmp
mov
shl
xor
lods
push
test
xor
std
pop
insl
repz
inc
pushf
push
mov
mov
or
dec
xor
lcall
push
mov
xchg
out
rclb
scas
stc
test
pop
cltd
mov
popa
push
mov
int
add
xor
je
sbb
mov
orl
movsl
out
imul
mov
add
lcall
loope
push
bound
xlat
xchg
inc
xor
dec
jp
testl
push
mov
scas
shll
and
outsl
and
and
scas
outsl
inc
dec
test
lods
jo
push
or
clc
fisttpl
dec
pop
sbb
pop
jmp
dec
push
sbb
sub
stos
push
arpl
fistpl
imul
and
in
inc
sub
icebp
fwait
ss
or
push
outsl
fbld
mov
insl
push
xchg
mov
sbb
pusha
dec
push
push
cmp
loope
stc
fnstsw
popa
jge
mov
shlb
aad
mov
scas
or
hlt
cmp
insl
les
call
mov
jle
jle
mov
and
xchg
popa
ret
pushf
pop
xchg
stos
cmp
sbb
mov
shlb
fptan
mov
repz
adc
pushf
xor
lret
add
sbb
push
ds
repz
adc
dec
stos
cmp
push
loopne
ret
fisttpl
and
lret
or
popf
repnz
and
jne
pop
mov
addr16
and
mov
addl
dec
stos
cmc
les
pop
adc
loop
push
int
lcall
and
aaa
dec
xchg
hlt
js,pt
pop
out
pop
pop
mov
xchg
loopne
mov
mov
push
fs
fcoml
mov
outsl
dec
xchg
lahf
jns
mov
or
push
jle
push
fs
andb
add
add
nop
bound
iret
adc
test
movsb
push
push
gs
call
addr16
sar
gs
adc
pusha
mov
inc
leave
test
mov
icebp
push
push
adc
push
xchg
addr16
into
and
es
insl
test
jne
addr16
adc
test
mov
fcomp
lret
or
lods
dec
adc
popa
sub
mov
mov
jbe
js
cld
xchg
dec
fwait
stos
insb
cmp
outsl
test
xor
dec
stc
or
sub
cli
leave
lods
fcompl
inc
cld
stos
push
movsb
mov
movsl
and
lods
loop
xor
jns
lock
pop
clc
cwtl
lock
out
push
mov
cmc
jo
mov
in
aaa
pop
mov
loop
insb
aam
imul
mov
aas
scas
jbe
mov
sub
iret
enter
lods
cmp
mov
jmp
jae
or
outsl
bound
lret
stos
and
push
mov
cmp
ja
addr16
lcall
inc
in
scas
sub
pop
pusha
xor
add
add
cmp
sub
int3
mov
test
mov
pop
pop
pop
addr16
cmp
icebp
add
mov
and
call
lods
nop
mov
pop
shrb
negl
sbb
push
pusha
xchg
or
mov
add
nop
andb
mov
push
sub
out
out
arpl
inc
push
and
not
and
pop
cltd
lahf
mov
lds
orl
mov
pusha
iret
pop
test
xchg
in
inc
inc
cmp
xchg
std
mov
inc
jl
pop
scas
mov
std
cmc
addr16
mov
cmp
mov
je
scas
mov
mov
add
and
mov
xor
add
adc
int3
int
pop
xor
js
inc
js
sub
movsl
mov
imul
or
lea
adc
pop
lods
push
inc
test
in
lea
add
adc
sahf
push
push
inc
pushf
bound
xchg
jecxz
movsl
push
std
stos
cmp
imul
loopne
mov
test
rcll
inc
int3
inc
sub
sahf
dec
cwtl
movsl
pushf
fwait
insl
push
mov
imul
sti
pop
stos
mov
xchg
nop
jmp
mov
iret
pop
fldcw
fadds
mov
jnp
rolb
cwtl
lods
div
outsb
inc
and
daa
pop
push
xor
push
jp
mov
mov
movb
jb
ja
inc
mov
push
mov
bound
mov
fcom
lods
pop
jp
lret
pop
ret
sbb
dec
push
fucom
cmpsb
add
jno
fildll
vmovups
dec
adc
cmc
inc
mov
add
es
pop
cmp
jecxz
pop
popa
daa
sahf
sbb
outsb
aas
std
sbb
mov
lods
and
stos
xor
call
sub
mov
inc
mov
xchg
sbb
push
inc
xor
jo
jp
cwtl
loope
int3
fldenv
xlat
push
daa
clc
mov
inc
adc
fstps
inc
in
rcrl
inc
enter
xchg
jecxz
bound
push
ljmp
leave
std
imul
xor
popf
push
cmpsl
ret
pop
test
out
cmp
iret
push
test
mov
mov
repz
mov
xchg
inc
or
xchg
jne
inc
std
or
ret
fcompl
sub
shlb
xor
insb
jb
sub
fcoms
outsb
imul
jno,pn
jmp
ljmp
shll
ds
test
inc
mov
outsl
fnstenv
loopne
lods
imul
sub
call
or
lods
iret
das
std
or
sbb
int
and
and
push
mov
inc
jp
cld
push
pop
lds
jl
xor
pop
outsl
inc
jge
xchg
cmp
sub
popa
daa
or
pop
loop
sub
push
popf
adc
js
lahf
fstps
orb
push
or
and
sub
out
imul
jae
jmp
fnstsw
dec
daa
push
data16
ljmp
jbe
rep
dec
cwtl
mov
lds
push
aam
jge
pop
and
stos
push
stos
xor
pusha
cmp
cmp
testl
mov
pop
das
mov
dec
jns
divb
hlt
mov
insl
xor
jnp
gs
push
sbb
xlat
push
ja
int
jge
xchg
jnp
lock
push
ja
push
shrl
xlat
pop
pop
sahf
das
push
xchg
xchg
sub
in
push
hlt
jb
push
stos
lea
das
pop
cmp
pusha
xor
cli
mov
adc
lcall
fimull
dec
hlt
mov
jle
adc
lods
push
sbb
xchg
in
repz
fmuls
out
mov
dec
ja
sbb
pop
aam
je
pop
das
mov
push
lcall
adc
add
lock
aam
leave
imul
rcl
loopne
jo
sbb
fs
cmp
xor
adc
mov
mov
in
sub
mov
jne
es
or
push
pop
std
mov
sbb
hlt
out
int3
push
dec
adc
mov
dec
imul
adc
and
sahf
pushf
or
mov
cltd
dec
int3
std
adc
push
test
cwtl
mov
or
cli
into
ja
or
mov
jp
mov
xor
lock
das
arpl
fbld
stc
aas
jp
je
mov
cmp
sti
cmp
sub
mov
jge
xorl
jle
and
in
lds
xchg
mov
cli
imul
dec
or
cmp
xor
sbb
popf
xor
dec
cmp
roll
out
or
sub
in
into
les
in
and
cwtl
out
add
rolb
jle
in
add
aad
jne
leave
aas
nop
cwtl
and
fwait
push
movsb
mov
repz
sub
mov
outsb
dec
xor
jmp
dec
aaa
into
push
or
shr
sub
pop
sbb
and
imul
stos
add
ja
sub
mov
sbb
in
fs
xchg
push
sub
push
add
inc
cli
push
mov
and
jb
sbb
xchg
inc
insb
int
mov
addr16
inc
pushf
inc
test
pop
sahf
ficoms
lea
test
sbb
enter
sbb
cwtl
inc
inc
pop
dec
push
cld
sti
loope
ja
mov
je
gs
xchg
loop
push
addr16
stos
outsl
mov
dec
push
mov
xchg
mov
push
int3
xchg
jmp
ret
rorb
cmpsl
xchg
fidivrs
add
push
mov
mov
mov
mov
aas
outsl
negl
scas
and
aam
ss
stc
pusha
aam
jnp
lods
and
cld
adc
or
ljmp
dec
xor
dec
popa
pop
sub
xlat
lds
jno
jge
mov
mov
mov
add
mov
cli
loop
loope
mov
insl
cld
adc
add
fidivrl
push
test
loopne
aaa
jle
mov
mov
mov
in
sbb
jge
xchg
push
test
and
inc
jbe
addl
cmp
adc
aam
and
lahf
inc
pop
imul
xchg
push
enter
roll
pusha
ja
addb
test
pop
sub
lock
sbb
jp
mov
sarb
int
dec
xchg
sub
movsl
sarl
std
push
je
jge
mov
jns
into
adc
xchg
and
sub
aad
jmp
loope
incb
test
mov
and
les
jnp
int
orl
mov
enter
adc
add
insl
outsb
mov
xchg
shlb
outsl
xchg
push
xchg
test
ja
or
mov
mov
mov
pop
out
test
imul
fcmove
bound
aam
sbb
loop
inc
mov
jl
lret
push
pop
addl
outsb
insb
add
aas
cltd
sbb
imul
aas
mov
cmpsb
mov
sbb
pop
fld
mov
adc
test
mov
jo
outsb
lods
inc
gs
leave
mov
xchg
pop
dec
lcall
inc
ret
sbb
mov
cwtl
pop
hlt
mov
sti
adc
add
testb
test
cmp
inc
js
push
popa
xchg
pushf
outsb
loope
stos
in
adc
and
mov
aam
inc
push
call
mov
xchg
test
or
xor
test
dec
hlt
shl
nop
mov
repz
xchg
or
mov
subb
repnz
pop
repnz
or
test
aam
xchg
icebp
lahf
sbbb
mul
pusha
lahf
insb
test
jp
jmp
and
inc
mov
mov
aam
inc
and
dec
xor
and
mov
loop
test
cmp
repnz
leave
fsubs
or
mov
xchg
cltd
dec
test
ss
rolb
xorb
sub
cmp
sarl
dec
insl
outsb
mov
outsb
shrb
int
inc
mov
dec
aam
idivb
dec
pop
push
xor
jne
test
pop
mov
adc
sub
test
adc
jl
jg
mov
inc
mov
in
xchg
xchg
jns
flds
xor
popf
xchg
idivb
rolb
or
outsb
sub
push
fiadds
cs
adc
mov
mov
sub
mov
sub
pop
xchg
add
and
dec
lds
test
sbb
fsubp
stos
mov
pop
fdivl
stc
inc
dec
dec
mov
frstor
and
div
or
push
sbb
xchg
jmp
xchg
mov
cltd
cmc
imul
mov
pop
push
mov
sahf
ds
fucomip
sub
fyl2x
pushf
jno
cmp
mov
mov
mov
push
pop
pusha
push
daa
insb
jb
out
je
cmpsb
mov
cmp
mov
cltd
or
xchg
pop
fisubs
sbb
add
mov
pop
push
mov
les
lods
cmp
mov
xchg
gs
inc
imul
push
jle
mov
hlt
fcompp
mulb
pop
push
adc
push
mov
pop
outsb
and
mov
lea
fisubrl
orb
push
mov
pop
out
and
ret
imul
cmp
sbb
xor
dec
mov
scas
pop
rclb
icebp
xchg
xor
in
sbb
dec
adc
xchg
cmp
cmp
pushf
sbb
xchg
add
mov
adc
mov
inc
sub
lods
fsubp
sub
in
clc
fidivl
les
jl
insl
add
cmp
subl
out
cmp
jl
jl
repnz
mov
jno
or
jmp
ja
xchg
aam
mov
sub
lret
in
add
xorl
jmp
inc
rcll
dec
inc
popa
xor
xlat
lods
pop
negl
xor
loop
lret
add
push
jb
fldenv
ss
in
hlt
rcl
aaa
fcmovb
icebp
push
lret
pop
push
clc
adc
cld
mov
jl
cmp
and
inc
negl
xchg
jnp
sub
and
adc
clc
mov
xor
jp
sbb
aas
push
jbe
jb
mov
jge
lahf
mov
scas
cmpsl
rcll
fsubs
popf
push
xlat
movsl
jno
jecxz
in
mov
pop
pop
das
out
stos
inc
ret
push
or
mov
dec
mov
paddw
icebp
and
xor
xor
in
push
xor
xchg
or
push
hlt
sbbl
call
aaa
xchg
lds
dec
mull
adc
inc
sbb
sub
stos
sbb
imul
iret
int
push
sahf
mov
cmp
ficoms
imul
xorl
aas
sbbb
rolb
mov
loopne
adc
je
sbb
mov
outsb
mov
pop
cmpsb
cmp
adc
fsubrs
mov
dec
jg
and
and
aas
test
fcoms
or
inc
test
mov
mov
ds
cs
lret
sub
cmp
push
pop
fdivp
and
enter
xor
sub
aad
mov
push
sub
xchg
jecxz,pt
out
xchg
mov
adc
loop
add
mov
fwait
icebp
cs
xor
mov
cmp
mov
and
outsb
inc
int3
jb
cltd
roll
xor
scas
mov
jne
addl
in
ficoml
xchg
or
fldcw
in
push
daa
iret
and
xchg
imul
pop
test
cmc
jecxz
lods
imul
mov
rcl
dec
gs
cmp
adc
jae
lea
sub
or
sbb
pop
mov
movsb
imul
cmpsb
dec
ljmp
movsl
ret
je
outsb
lea
cmp
mov
sub
lcall
inc
jecxz
ret
sbbl
jns
cmp
lods
sub
cmp
mov
sbb
mov
mov
test
xchg
aad
push
add
mov
jbe
sbb
std
adc
or
xor
sub
push
aaa
jbe
sub
mov
iret
jg
in
repnz
cmp
add
jb
scas
stc
jb
dec
fistpl
lods
mov
shlb
mov
nop
test
imul
xor
cmp
push
adc
or
test
sbb
in
adc
adc
arpl
aad
sub
call
mov
out
and
sbb
pop
icebp
in
xchg
loop
call
in
bound
cmp
push
mov
mov
sti
or
sbb
and
outsb
incl
sbb
leave
adc
and
xor
test
bound
insb
and
xor
dec
cmp
rcll
testl
test
sub
jo
enter
fs
jmp
pop
js
std
sub
rclb
jb
push
fs
insb
cmpsl
adc
cmp
mov
inc
aad
cmp
jns
push
test
ror
subl
les
or
jle
daa
add
sarl
enter
mov
sti
addb
adc
test
cmpsl
ret
sub
jnp
jns
out
mov
mov
xor
or
ss
xor
and
dec
dec
pushf
or
mov
pop
mov
clc
lcall
stc
sub
bound
ret
ret
jg
shr
subb
pop
test
addr16
adc
rep
mov
adc
cmc
aas
push
inc
jecxz
or
scas
inc
cmpsb
aas
imul
cmp
aad
js
push
mov
push
mov
mul
mov
lea
bound
xor
pop
sbb
xlat
pop
mov
rclb
inc
aad
jg
mov
jns
shll
mov
cltd
xchg
mov
test
and
lea
mov
aad
dec
enter
clc
mov
dec
out
pop
les
mov
loope
rorl
inc
fdiv
subl
loop
iret
cmp
xchg
push
xchg
xchg
leave
outsb
aaa
mov
pop
mov
sbb
xchg
dec
adc
and
test
lahf
jo
jecxz
rorl
ret
outsb
xor
inc
addl
orl
or
adc
movsb
aas
fs
gs
jecxz
mov
cmc
movsb
push
orl
mov
clc
cwtl
pushf
inc
rorb
mov
or
out
insb
sarl
jne
mov
dec
or
inc
iret
dec
ret
mov
xchg
dec
dec
jne
popf
pop
mov
scas
sub
cmp
inc
xchg
sub
inc
fisttps
pop
je
sti
mov
mov
repz
mov
mov
lcall
add
sbb
and
jne
jnp
sub
mov
pop
es
fstp
and
pop
push
mov
mov
dec
or
hlt
int3
sub
pop
cmp
jbe
arpl
xchg
push
jecxz
pop
push
pop
pusha
movsb
nop
pop
daa
cmp
mov
sti
push
cmpsl
xchg
mov
je
or
addr16
mov
fsubrs
neg
shlb
fisubrl
jno
mov
sub
enter
cmp
sti
and
in
adc
stos
sub
inc
adc
lods
rcrb
mov
push
fistl
loopne
lret
test
out
int
adcl
and
addr16
movsb
mov
test
adcb
cmc
ljmp
popf
lock
sbb
imul
sub
cmp
jb,pn
inc
stc
pushf
mov
loope
mov
mov
push
dec
or
cltd
stos
jae
mov
dec
shl
and
mov
divb
insl
sbb
mov
fidivl
cmp
mov
shrb
sahf
xchg
xlat
aam
lcall
xchg
das
xchg
jg
xchg
aas
std
mov
clc
andb
int3
pop
mov
xchg
popa
pop
xchg
leave
or
add
mov
pop
push
cwtl
sti
adc
or
sbb
push
roll
shll
lret
jp
insb
jl
mov
mov
negl
mov
lds
movsb
mov
daa
jmp
into
inc
adc
lcall
xor
in
lea
xor
sbb
fldl
push
mov
sbb
mov
pop
push
lods
es
inc
in
pop
cwtl
pop
dec
sub
dec
repnz
daa
sbb
into
nop
or
cltd
in
xor
cli
divps
int3
pop
ja
push
jne
daa
inc
sub
into
imul
bound
mov
jo
push
adc
inc
xchg
loopne
outsb
negl
adc
sbb
outsl
jb
adc
stos
clc
inc
ds
inc
mov
loopne
and
jnp
cmpl
orl
xchg
dec
js
fistpll
push
push
jb
lds
fwait
dec
pop
inc
sti
shld
add
cmpsl
pop
add
xchg
or
push
inc
add
push
add
insb
out
jmp
mov
pop
push
jnp
dec
cltd
mov
sub
sub
loop
out
lahf
dec
sub
rcll
cli
cmp
stc
pop
fildll
cmp
add
add
call
and
pusha
and
dec
aas
lds
clc
mov
jmp
inc
fimuls
mov
sti
mov
mov
fisttpll
faddl
and
clc
jmp
scas
insl
jp
aas
sub
popf
push
test
jb
and
push
or
addr16
push
mov
pop
xlat
cmp
mov
mov
in
sarb
xchg
das
movb
add
mov
dec
push
mov
cmc
sbb
push
push
mov
pushf
mov
push
push
adc
outsb
xchg
in
xor
cmp
sub
adc
push
push
jo
std
rcll
int3
or
mov
aam
lret
movsb
inc
xchg
pop
shlb
pop
xchg
inc
imul
xchg
fwait
test
outsb
std
bound
dec
xor
jmp
inc
xor
subl
pop
xor
pop
fsubrs
jae
popf
sub
jl
scas
test
jb
in
ret
das
adcb
scas
mov
inc
jge
jbe
insl
mov
xchg
subb
adc
ja
out
test
jp
push
leave
jnp
sub
fs
repnz
std
ds
stos
mov
push
mov
jl
in
cs
dec
repnz
cmpsl
fldt
mov
pop
adc
or
sub
xchg
sub
cld
rcrl
into
stos
jo
cmpsl
pop
or
dec
icebp
pop
mov
xlat
in
fsubrs
out
in
adc
pop
sbb
fistl
cmpsb
loop
sti
xchg
xchg
xchg
rcl
adc
lret
pop
dec
and
lods
clc
mov
or
jp
sub
pop
and
sahf
int3
incl
das
stc
imul
jno
push
imul
mov
mov
test
xor
ljmp
jg
mov
sbb
or
jle
push
push
ja
testb
sti
mov
filds
fwait
mov
add
scas
in
cmpsl
imul
outsl
mov
insl
lcall
add
mov
sbb
popf
jecxz
pop
sbb
push
jnp
jo
out
mov
sbb
je
shl
insb
push
pop
adc
push
out
xlat
sbb
xchg
lods
into
xchg
and
mov
add
adcl
dec
je
push
insl
push
pop
cmpsb
hlt
pop
pop
xor
scas
addr16
xchg
movsl
xor
dec
std
sarl
inc
mov
mov
push
test
pop
pushf
inc
sbbl
lods
aas
xor
sbb
cltd
push
cli
mov
sbb
xchg
sbbl
out
rep
push
ljmp
pop
and
sub
pop
mov
add
ja
xchg
iret
jp
nop
sub
and
loopne
and
push
mov
xchg
loop
pop
xorl
xchg
lods
dec
and
aas
or
sub
mov
loopne
out
lcall
adc
sbb
mov
jns
push
pop
mov
sub
inc
ret
mov
imul
or
test
fcom
mov
scas
cmc
mov
adc
jns
inc
ffree
shr
mov
jo
and
adc
ljmp
jmp
and
xor
sbb
pop
jmp
and
sti
ja
scas
lret
mov
dec
mov
dec
fistps
xor
mulb
xor
inc
inc
xor
add
mov
jg
sub
icebp
rcll
aas
sub
push
xchg
cmpsb
jbe
and
icebp
dec
sbb
icebp
mov
mov
mov
iret
cwtl
and
pop
and
or
or
add
dec
cli
inc
scas
out
aaa
shrb
jg
push
inc
xchg
and
roll
leave
add
cmp
rorl
pushf
and
ret
fdiv
xor
aas
lahf
sub
jns
mov
mov
popf
sbb
bswap
subl
je
call
test
inc
ret
iret
cmp
jne
fwait
icebp
sti
push
add
stos
outsl
push
mov
mov
sbb
hlt
dec
call
and
xor
mov
xchg
cmp
xchg
aas
or
imul
dec
push
jge
stc
mov
jo
fsubrl
shl
orl
int3
adc
push
idivl
fsubr
mov
push
jo
and
imul
mov
clc
lods
pop
dec
jnp
loop
sahf
sti
mov
sub
inc
inc
out
fcompl
sub
loop
scas
stc
inc
cli
insl
inc
and
sbbl
inc
jbe
fstpl
mov
arpl
jecxz
mov
push
pop
ret
and
cmpsl
mov
nop
sbb
add
fnsave
call
js
test
and
cld
push
add
add
lds
filds
sahf
sbb
lock
pop
dec
sub
aam
pusha
or
je
mov
jbe
dec
decb
int3
or
sti
inc
lcall
ja
les
xchg
stc
imul
addr16
fldcw
pop
xor
testl
push
cwtl
arpl
out
cmpsb
leave
xor
sbb
lahf
add
adc
inc
stc
inc
xchg
xchg
insl
sub
pop
stos
sub
add
add
fdivrs
mov
cmc
insl
sub
jmp
sbb
pushf
dec
enter
bound
movsl
sub
insb
out
cmp
xlat
adc
popf
xchg
idivl
test
mov
fildl
inc
jbe
nop
mov
lock
leave
cmpsb
xchg
jle
into
shl
mov
adc
lcall
call
je
or
repz
movsb
arpl
fcompl
rcpps
filds
xlat
inc
mov
jno
fisubrl
repz
adc
js
sbb
xor
sub
adc
gs
hlt
push
sbb
out
or
or
cmp
mov
inc
xchg
mov
xor
das
adc
cmp
jns
enter
push
adc
test
fwait
incl
arpl
iret
cmp
sbb
dec
test
or
or
adc
sbb
push
fucomip
or
dec
add
sbb
dec
xchg
jnp
and
push
bound
insl
pop
jns
lret
pop
jmp
icebp
xor
test
push
mov
add
sahf
repz
jns
jmp
nop
dec
ret
inc
dec
aas
pop
iret
mov
into
and
push
mov
sarb
mov
push
jae
mov
lea
and
xchg
jne
adc
push
in
int3
xchg
xchg
jo
xchg
xor
dec
jg
outsl
js
xchg
add
or
test
mov
fidivrl
test
pop
les
arpl
in
pop
sti
jb
imul
xchg
cld
gs
lcall
ds
mov
xor
pusha
je
mov
cmp
sub
leave
xor
std
imul
roll
rcrb
mull
push
sti
sbb
push
jo
jecxz
and
adcb
out
ret
fcmovbe
xchg
cmpsl
js
and
xchg
lods
dec
fldcw
jne
data16
mov
xor
pop
daa
and
jle
aaa
orl
fwait
xchg
adc
mov
mov
sub
sub
xchg
les
fisubl
iret
cmc
push
inc
popf
sbb
mov
push
ret
inc
dec
cmp
mov
imul
lcall
pop
push
insl
daa
push
outsl
cmp
test
push
mov
push
and
xchg
mov
test
jg
cmp
push
cltd
adc
std
cmp
jl
sbb
imul
lret
cmpl
cltd
xchg
iret
nop
test
add
insl
sub
dec
ljmp
adc
cmpl
adc
test
arpl
sbb
das
loop
mov
cmp
movsl
cmp
push
or
lret
into
mov
xor
push
lock
bound
cwtl
jl
xchg
mov
sbb
add
dec
fildll
testl
sub
mov
fsubs
pop
xor
sbbl
jb
sbb
cld
call
push
les
mov
and
imul
aam
js
es
ds
inc
xor
mov
das
mov
fcomi
pop
xchg
sbb
lds
lods
inc
push
loope
xor
int3
mov
inc
data16
add
or
or
ljmp
sub
rorl
insb
jo
js
and
ljmp
add
mov
in
lods
sbb
inc
stos
jae
jmp
xchg
xchg
cmpsl
test
push
mov
lods
ljmp
je
outsl
xor
lods
push
popf
xlat
loopne
outsb
pop
arpl
cmp
les
lea
cltd
mov
js
xor
rorb
gs
popf
fsts
aad
inc
sub
scas
fisttpl
pop
sub
int
pop
and
push
xchg
fcomi
hlt
fcmovne
push
xchg
test
ss
out
push
repz
das
jle
push
and
xchg
test
cbtw
into
mov
scas
push
int
push
lcall
stos
and
sub
test
imul
mov
adc
jns
int
movd
sbb
clc
stc
shll
adc
addr16
sub
and
sbbb
mov
pop
in
cld
add
je
dec
cwtl
popa
jo
out
xor
mov
jmp
cmpsb
xchg
addb
bnd
mov
andl
pop
lods
pop
pop
pop
push
mov
popa
imulb
mov
cmp
cmp
sbb
jbe
por
adc
test
cltd
test
call
lret
std
pop
cwtl
pop
cmp
push
jns
mov
pop
incb
jg
cmpsl
add
add
cmc
adc
xchg
sahf
mov
popa
jno
fcmovne
int3
fcmovbe
shlb
pop
scas
pop
insb
mov
push
jg
scas
insl
pop
push
lret
std
sub
into
mov
pusha
dec
xor
sbb
xchg
mov
das
or
push
and
out
push
jle
int3
or
and
add
and
xchg
xor
inc
add
cwtl
xchg
xor
out
incb
mov
mov
popf
gs
push
sub
mov
scas
gs
icebp
pop
mov
test
dec
pop
gs
mov
pop
scas
dec
pop
mov
dec
sub
mov
loop
mov
jo
cli
mov
mov
out
inc
std
mov
adcl
out
ds
inc
in
and
into
mov
cmpsl
pop
stc
cmp
cli
adc
jae
lods
mov
cwtl
and
push
pop
pop
mov
push
mov
jmp
adc
sbb
jp
sub
pushf
shll
and
popa
inc
mov
inc
pop
dec
dec
test
mov
dec
dec
sbb
ja
cmp
inc
loope
lods
in
or
mov
outsb
enter
js
mov
cltd
pop
decb
mov
in
mov
jmp
add
scas
dec
push
inc
sbb
popa
xor
jge
cmc
xlat
dec
out
pop
stos
push
cmp
cli
in
xor
or
adc
daa
std
fcomi
lret
cltd
sub
ds
adc
dec
insl
fwait
in
cmp
push
adc
ds
in
pushf
ret
das
popa
pop
sbb
dec
flds
outsl
cmc
lret
push
and
popa
inc
cmp
mov
sub
cmp
pop
out
adc
mov
leave
jns
jg
cld
test
cmc
add
fcompl
adc
xchg
dec
les
ja
or
icebp
mov
call
or
add
fs
in
les
sub
sub
lds
mov
cmp
and
ja
mov
xor
test
mov
mov
es
in
andl
lock
in
mov
mov
push
mov
dec
pop
adc
movsl
push
or
gs
popf
pushf
add
insb
data16
inc
aas
shlb
in
mov
xchg
out
popf
lock
mov
into
test
cmc
inc
cs
and
cmp
das
sbb
xlat
cmpsl
dec
fwait
cs
shl
adc
jmp
jmp
sbb
pop
test
or
loope
jl
xchg
insb
mov
nop
scas
push
aas
push
push
arpl
int
adc
inc
insl
shrl
lret
and
clc
jl
or
sahf
mov
xor
and
std
rcr
xlat
adc
je
out
pop
lea
pop
mov
sbb
jnp
cmp
imul
fimuls
jg
out
adc
test
xor
jge
xchg
outsl
or
scas
or
loop
xlat
or
ret
bound
pop
adc
jne
mov
xchg
or
add
lods
in
in
mov
mov
cmp
xchg
push
mov
pusha
mov
inc
inc
jg
scas
jl
push
js
inc
jge
jmp
jno
add
xchg
jl
sahf
rorl
adc
push
sub
or
sub
negl
lret
inc
pop
xchg
cmp
cmp
add
push
mov
and
push
cmp
cmp
xor
push
icebp
sar
sbb
push
add
cld
jl
sbb
es
inc
pop
ja
aaa
mov
imul
mov
cmc
pushf
js
movsb
pop
pop
mov
adc
bound
aaa
inc
inc
add
xor
xchg
mov
sahf
xchg
imul
and
lcall
dec
ja
sbb
pop
and
out
push
test
or
in
sub
push
lock
scas
loop
cld
xor
aam
daa
mov
fs
sub
sub
lock
sub
adc
lcall
sahf
test
test
xor
sti
leave
out
ja
jbe
test
adc
mov
pop
nop
lret
cld
fildll
pop
pop
sub
and
inc
pop
lret
outsb
inc
jb
shr
push
jno
gs
push
push
cmp
idivb
cmpsl
notb
sbb
and
cmpsb
mov
mov
pop
pop
ret
orb
xchg
lock
mov
bound
cmpsb
jmp
inc
dec
or
loop
pushl
call
xchg
mov
push
gs
push
mov
aaa
movsl
rclb
mov
out
out
test
add
daa
test
fidivs
nop
xchg
inc
outsl
testl
push
mov
dec
adc
mov
in
pop
adc
std
push
mov
xlat
imul
mov
mov
shrl
push
int3
stos
sbb
xchg
fistl
movsl
and
xchg
jmp
ljmp
inc
sbb
cwtl
pop
pop
fsubrl
mov
int3
std
jl
enter
shlb
test
stos
sbb
jns
dec
pop
enter
jae
pop
xor
rcl
mov
xabort
sbb
or
out
out
lods
leave
push
ss
mov
add
mov
ds
inc
xchg
mov
add
push
inc
sbb
inc
jo
negb
mov
xchg
push
add
jnp
in
jp
movsl
lahf
dec
mov
mov
sahf
xor
push
inc
push
jecxz
ljmp
test
jl
push
xor
int3
test
pop
xchg
push
fidivs
bound
push
push
lds
icebp
dec
adc
xchg
inc
ja
mov
mov
or
out
mov
btr
fidivl
cltd
ds
adc
cli
dec
inc
pop
or
andb
not
xchg
push
xchg
jno
dec
sbb
mov
or
sub
stc
xchg
fsincos
jp
in
push
adc
xor
and
push
insl
out
outsl
rorb
jmp
jmp
or
sti
das
and
aam
mov
pop
outsl
mov
aas
push
loopne
inc
cmp
fsubr
pop
jmp
cmp
lret
push
sbb
dec
mov
cmp
lret
test
pop
lods
xchg
mov
sub
xchg
sub
jnp
and
add
jnp
scas
dec
mov
push
pop
lcall
scas
mov
and
outsl
inc
mov
mov
and
fadds
sub
dec
bound
dec
mov
push
fcoml
jg
shlb
inc
jae
test
cmp
nop
js
in
pop
cmp
jo
rclb
mov
jne
out
leave
add
cmpsb
loop
push
mov
sub
lcall
cmc
mov
jbe
adc
adc
data16
pop
jle
push
mov
stos
movsl
inc
daa
push
push
stc
sbb
sbb
insl
sbb
xor
lea
rolb
lock
adc
xor
mov
es
mov
and
fwait
and
movsl
jne
stc
pop
lods
adc
test
cwtl
mov
push
push
out
mov
jg
loop
rorl
lcall
push
adc
and
adc
unpcklps
xchg
jg
shl
sbb
std
xor
fsubl
add
or
add
xchg
dec
in
ret
fdivrl
fcoml
nop
lea
sbb
sahf
std
jnp
sub
sub
push
pop
fcomi
xor
pop
add
ret
xchg
and
jo
jecxz
gs
leave
or
dec
addr16
sti
fisttpll
pop
int3
or
xor
pop
push
dec
cltd
cmp
sub
stos
cmp
andl
sub
loopne
stc
outsl
out
ja
stc
adc
ret
shl
xlat
aas
or
dec
mov
cmp
or
fadds
movsb
cmc
pop
cmc
fsubr
or
inc
shlb
nop
sbb
repz
sub
jl
dec
fwait
aam
push
mov
cmc
fidivs
xchg
mov
scas
xor
adc
cld
sub
mov
adc
popa
mov
sbb
test
inc
xor
cwtl
hlt
sbb
mov
repnz
ret
outsb
iret
jb
mov
jle
sub
jbe
sub
ret
xor
aaa
and
lret
cmpsl
and
mov
out
divb
stos
movb
imul
idiv
mov
fstps
lcall
mov
bound
cmpsl
test
mov
xchg
enter
aam
dec
stos
jnp
mov
mov
and
clc
inc
xor
ror
mov
pop
pop
mov
lcall
jne
push
ja
int3
push
xchg
jl
in
mov
pop
je
mov
xchg
jno
jg
movsb
cmp
loope
std
enter
mov
dec
sti
sahf
push
xchg
test
sub
shrb
test
sub
xor
addl
xor
inc
mov
pop
push
pop
cmc
mov
test
pop
nop
lretw
mov
mov
mov
dec
mov
outsb
push
subb
les
mov
mov
loop
aad
iret
sbb
leave
xor
fwait
mov
adc
push
scas
sub
sub
jge
lahf
nop
mov
jge
push
sbb
cli
pop
aam
mov
pop
outsl
xchg
sarb
pop
incb
mov
push
bndldx
jl
loop
testl
mov
cmp
imul
jmp
pop
mov
inc
xor
push
test
and
fs
jp
gs
ljmp
mov
stos
ret
jns
push
and
or
sbb
dec
out
inc
lea
lret
psubusw
aaa
mov
inc
mov
loop
sbb
ficoms
sub
cmp
jne
dec
cmp
in
or
sbb
mov
mov
pop
pushf
je
cmpb
adc
icebp
dec
jp
adcl
or
push
imul
fcoms
pop
cmp
xchg
fnstsw
or
ja
xchg
xchg
and
xor
rorb
nop
cs
sbb
xlat
cltd
sbb
mov
lods
xchg
std
lods
iret
xchg
xor
add
imul
add
cmp
push
sub
mov
lahf
repz
inc
sbb
pop
cmc
loopne
out
sub
jp
mov
fs
test
out
fiadds
jnp
mov
add
lods
andl
imul
std
daa
das
aas
les
xchg
xchg
aam
cmpl
push
or
test
jg
ret
sbb
pop
push
dec
mov
js
pop
movsb
testb
rcr
xor
ret
adc
xor
add
xor
jbe
ret
jg
xor
jmp
dec
test
adc
jmp
adc
imul
xchg
call
push
pop
add
aas
xchg
shll
cld
inc
xor
cmpsb
lret
aaa
jb
dec
jbe
mov
inc
in
pop
cltd
push
dec
loop
mov
lea
stos
insl
xchg
xchg
rolb
push
test
test
shl
das
mov
jbe
cs
push
insb
ss
fsubp
or
ret
inc
and
jnp
adc
xor
aam
sar
stc
mov
xor
cmpsl
loopne
scas
push
push
jg
into
add
pop
outsb
adc
inc
out
and
leave
aas
dec
xorl
sub
repnz
in
inc
imul
nop
push
pop
cmpb
scas
inc
mov
inc
mov
in
fistl
ja
push
ja
sub
into
mov
roll
std
push
cmp
pop
xor
out
push
mov
loop
shrl
mov
cmpl
dec
mov
inc
push
or
push
mov
mov
in
mov
mov
rcr
cmc
or
mov
jl
mov
enter
fwait
scas
movsb
add
movsl
dec
int3
lds
cld
jge
and
pop
or
sub
adc
pop
xchg
cmc
hlt
jg
cmpsb
aas
inc
cmp
lret
mov
sbb
ret
fistpl
enter
insl
nop
and
mov
not
outsl
in
pop
fldl
sbb
fcompl
das
ret
adc
sahf
jg
adcb
iret
hlt
xchg
dec
push
out
pop
cmp
sbb
sar
sub
jmp
push
cwtl
and
sub
mov
adc
add
mov
je
and
ds
ret
aad
sub
jnp
xor
mov
fsubl
sti
fcos
and
enter
aad
and
lret
adc
inc
insb
cmp
xor
mov
fldl
push
out
loop
mov
cmp
xchg
pop
lock
aad
fs
lods
xchg
jmp
push
or
xor
repnz
mov
cmp
ret
ret
xchg
rcll
dec
dec
ret
vpsllw
sahf
cs
int
dec
test
je
add
mov
push
data16
jne
call
jne
mov
mov
icebp
int3
adc
inc
push
mov
test
jge
aaa
stos
test
inc
adcb
movsl
adc
and
xchg
pop
enter
dec
jecxz
inc
inc
outsb
aam
mov
das
mulb
dec
idivb
add
xchg
xchg
mov
scas
andl
mov
mov
data16
rorl
enter
xor
xchg
mov
fmulp
ret
sub
mov
xchg
movsl
arpl
or
hlt
inc
mov
hlt
sbbb
mov
cmc
aaa
fisttpl
mov
lahf
dec
hlt
insb
arpl
movsb
jnp
cli
int
addl
jbe
mov
cmp
outsb
das
mov
pusha
mov
insb
mov
ret
rorl
add
or
js
inc
and
mov
sub
rorb
cmp
jne
add
mov
mov
mov
mov
test
enter
add
mov
push
mov
xchg
adc
or
mov
cwtl
adc
and
test
loop
rorb
mov
into
jl
cli
sub
mov
jae
lcall
xorl
test
daa
push
dec
fnstcw
cmpsb
sub
sahf
mov
stos
imul
sbb
mov
xchg
pushf
clc
shl
outsl
imul
mov
mov
cmp
outsb
repnz
cli
push
outsl
shl
inc
pop
jnp
adc
nop
mov
inc
gs
add
pop
gs
test
jecxz
mov
int
adc
dec
jae
in
std
lret
cmp
pop
outsl
je
out
cmc
fldcw
adc
je
bound
aam
test
dec
mov
or
inc
sbb
loopne
add
shlb
xchg
stos
pop
xchg
jg
adc
mov
xor
and
or
les
es
sub
shll
mov
cmpsl
and
outsb
fisubs
adc
lret
sar
fdivrp
adc
mov
in
nop
pop
mov
loope
shl
clc
mov
adc
scas
cmp
jmp
cmpl
mov
ljmp
pop
mov
cmp
testl
andb
outsb
mov
cli
mov
loop
push
iret
adc
cmpsl
sub
sbb
icebp
sbb
mov
call
js
mov
mov
loope
int3
clc
clc
lds
push
loope
or
sbb
ficoml
fildll
lods
lahf
xor
in
lret
out
mov
and
inc
lret
sahf
mov
cli
rcrb
in
push
lret
repnz
pop
pop
mov
dec
in
fs
adc
fidivl
sahf
aam
dec
and
adc
movsb
imul
mov
pop
jno
cmp
mul
cld
lds
jbe
inc
add
push
xor
in
add
push
xor
sub
iret
and
sub
push
mov
outsl
mov
push
insb
fdivs
mov
sbb
cmp
test
xor
cmp
pop
rcrl
scas
mov
xor
aaa
xlat
out
pop
xchg
adc
push
add
daa
outsl
fs
inc
add
int3
lock
out
xchg
inc
stos
mov
out
and
or
lods
mov
loopne
test
cmc
pusha
mov
je
push
or
and
dec
sub
rorl
inc
add
jno
fs
mov
orb
lods
or
mov
in
mov
into
lret
nop
out
lahf
stos
lds
cmp
sub
repz
sub
jge
shll
fwait
sti
imull
or
mov
add
int
cld
or
enter
sbb
sub
jmp
inc
adc
lods
push
loop
xor
jne
setge
aam
or
xchg
mov
lock
cmp
jge
out
arpl
mov
mov
pop
adc
cmc
cmc
repz
push
subps
xchg
jl
lds
and
mov
jg
xchg
sub
dec
adc
dec
in
loope
mov
push
pushf
cmp
jnp
sub
ss
adc
jecxz
les
movsl
outsb
sbb
mov
dec
pop
jle
dec
das
dec
gs
xor
test
or
pop
subl
sbbb
gs
push
sti
dec
jmp
enter
lods
push
andb
jecxz
mov
loop
out
popf
jge
inc
push
test
or
inc
xchg
mov
rclb
in
push
ret
mov
popa
sti
cli
inc
pop
xor
pushf
xchg
rol
out
imul
test
lods
push
out
sbb
leave
mov
arpl
cmpsl
lds
fimull
popf
jns
mov
mov
mov
cmpsb
jnp
int
sbb
inc
mov
test
mov
test
loopne
mov
push
jmp
iret
sti
jmp
mov
inc
outsb
mov
jg
lea
cmp
sub
in
sbbb
js
sub
mov
lcall
shll
add
cmp
nop
rorb
movsl
fs
loope
xchg
call
addr16
cmp
cmp
lea
dec
and
cmpsl
js
pop
mov
movsl
or
iret
jb
in
cmp
dec
lret
jmp
les
xor
repz
rcrl
and
int
adc
pushf
add
stc
jne
fs
lret
cli
movsb
jne
outsl
cmpsl
mov
frstor
push
mov
mov
mov
addr16
int3
mov
adc
imul
lock
movsb
in
testb
add
sbb
rorl
fcoms
out
ror
jns
cmp
mov
and
push
divw
cmp
cwtl
pop
mov
rorl
ficoms
scas
scas
cmp
repz
pushf
mov
pop
inc
adc
jno
andl
int
mov
push
xchg
dec
ss
subl
mov
fldcw
or
repz
pop
xor
mov
sahf
push
mov
xor
loopne
sti
sub
repnz
je
mov
hlt
pop
lea
lret
sbb
les
cli
mov
int3
frstor
sti
push
loope
mov
xor
mov
fst
jge
jo
pop
pop
or
dec
jecxz
mov
icebp
scas
mov
inc
add
cmp
out
pusha
dec
shlb
call
call
sahf
jmp
mov
jb
subl
mov
lahf
dec
adc
jmp
sti
fadds
cmpsl
sbb
int3
xlat
or
jb
mov
imul
scas
int3
push
addr16
lea
cmc
mov
popf
pop
lret
cmp
js
ds
jmp
jne
or
scas
xlat
adc
pop
fcomip
iret
push
std
mov
dec
out
int3
and
test
push
adc
sbb
aam
insl
pop
xor
or
into
ss
outsl
insl
pop
inc
xchg
mov
and
ljmp
sbb
stos
mov
sub
lcall
das
lret
test
data16
dec
adc
movsb
jno
mov
shll
fsubl
in
cmp
in
lock
mov
pop
pusha
ljmp
ret
inc
push
jg
adcl
sarb
scas
test
push
cmpsl
or
std
scas
iret
dec
ret
nop
out
xchg
jg
imul
sbb
mov
jne
xchg
das
imul
movb
bnd
jbe
pand
jo
cmp
cltd
xor
pushf
fcoms
aad
cmp
xlat
lods
jne
cmp
ja
jb
inc
inc
popf
mov
pusha
aad
pop
jno
nop
pop
jae
jne
ss
scas
popa
cmp
out
nop
push
mov
lock
arpl
insl
dec
jae
popa
lcall
add
push
fadds
push
xchg
rcll
test
ss
inc
gs
dec
add
in
mov
repnz
cwtl
and
stc
xchg
pop
mov
in
add
push
inc
or
jle
xor
push
mov
xchg
mov
jg
adc
sti
test
les
insl
aaa
fstpl
nop
sbb
xchg
test
mov
lock
fcompl
ds
sbb
cmp
add
or
or
fsub
dec
scas
jmp
xchg
shrl
jbe
inc
sbb
sbbl
ficoml
push
xor
std
outsb
into
movsb
scas
push
cmp
popf
in
mul
sbb
rol
mov
mov
icebp
jmp
inc
call
cmp
jnp
xchg
dec
popf
sub
pop
mov
ss
push
adc
cmc
fs
rclb
lds
enter
movsl
inc
rcr
es
cmp
loope
enter
out
nop
dec
stos
adc
data16
pop
adc
mov
ret
sub
dec
das
repnz
xchg
mov
js
inc
push
push
jecxz
divl
fcomps
sub
dec
stos
cmp
lods
mov
adc
ds
or
out
jo
sbb
or
xchg
inc
mov
mov
jnp
fwait
mov
adc
ret
sahf
mov
mov
shrl
or
mov
xchg
jbe
pop
sbb
fucomip
sbbl
je
or
ljmp
call
inc
jecxz
imul
insl
fcoml
fadd
xchg
loope
and
ret
movsb
cmp
ret
jmp
stc
test
pop
xor
pushf
and
push
mov
cmp
cs
out
adc
sti
pop
inc
fidivl
fcoms
push
imul
test
add
je
push
sub
ja
imul
popf
in
cmp
aam
push
insb
clc
in
cmc
mov
scas
mov
jnp
mov
fcompl
pusha
xchg
inc
xchg
adc
fisubs
push
mov
jl
aas
sbbb
dec
jnp
jo
push
jge
fsubl
fcomps
adc
out
gs
pop
mov
sub
dec
push
mov
inc
mov
fld1
xor
and
jno
cmp
jo
and
adc
leave
lds
mov
jo
sbb
jp
movsb
xchg
and
mov
insl
call
pop
add
push
ret
lret
popa
inc
sub
stos
nop
cmc
mov
sbb
mov
imul
cwtl
mov
sahf
daa
and
nop
cli
xor
pusha
dec
fwait
lret
push
jns
pop
xchg
das
xchg
push
popa
dec
mov
sti
jnp
andl
jmp
cmp
mov
sarb
mov
mov
repz
pop
add
xor
enter
dec
and
lahf
push
push
jne
or
aaa
shrb
dec
mov
sbb
push
xchg
add
out
jno
sarb
mov
jne
imul
fs
xchg
adc
inc
imul
sub
repnz
xor
xchg
cmp
lods
cs
push
lds
bound
pop
mov
lret
pusha
pop
sbbb
sbb
xor
outsb
mov
push
rcr
mov
fcomip
out
mov
aad
jmp
cmc
popf
and
cmp
xchg
mov
ds
xchg
pop
inc
jl
fwait
insl
add
adc
xor
sub
in
stc
jge
ja
push
xchg
lret
add
dec
xchg
outsb
cs
fbstp
cmp
das
in
mov
fbld
subb
adc
jmp
push
test
frstor
addl
loope
outsl
and
es
jo
sbb
in
mov
and
dec
push
std
scas
sarb
or
stc
inc
xchg
jmp
xchg
loope
dec
aaa
insb
mov
std
sbb
push
out
mov
sbb
daa
stc
adc
xchg
ficompl
xor
out
das
lret
mov
lods
cmp
mov
cmp
repnz
mov
int3
push
dec
jmp
loop
mov
loope
jmp
mov
mov
xchg
loopne
dec
andl
into
and
repz
pop
aaa
mov
lret
dec
mov
out
mov
pop
cs
sbb
inc
pop
or
xchg
mov
mov
mov
lcall
notl
mov
out
jle
sbb
xchg
push
in
mov
call
inc
mov
mov
mov
push
lret
jecxz
stos
xchg
aaa
xor
aam
lret
xor
into
sbb
mov
sbb
mov
popl
push
xchg
mov
sbbl
xor
fmull
iret
int
cli
movsb
cwtl
stos
pop
test
adc
into
cmc
pusha
ret
cltd
movsl
popa
xchg
sbb
aaa
sarb
xlat
pushw
dec
inc
int3
call
ljmp
movsl
push
push
in
xchg
idivl
jae
int3
cmp
call
in
dec
and
jae
cmp
test
outsb
jle
int
mov
sub
cmp
cmpb
arpl
mov
jnp
das
in
xor
push
and
xchg
sbb
add
mov
mov
movsl
fdivrp
ja
test
inc
xor
jb
imul
mov
mov
xor
jmp
loopne
lds
push
cmpsl
jb
inc
mov
inc
je
out
cmp
inc
inc
inc
subb
mov
and
inc
mov
push
imul
cmp
arpl
adc
lcall
pop
enter
xchg
aas
fwait
stos
sub
adc
jb
mov
xorb
lea
cmp
cwtl
mov
fdivrl
cli
js
cmp
or
imul
cwtl
ss
dec
push
and
in
ret
pop
sti
mov
xchg
jnp
cli
lret
lea
sbb
imul
rep
mov
xchg
loope
enter
xor
push
sbb
jb
rclb
xor
sbb
inc
lock
mov
xchg
and
movsb
push
pushf
mov
out
adc
or
call
loope
scas
push
add
fs
mov
jmp
icebp
enter
outsb
or
out
pushf
push
cs
or
pop
scas
adc
movsl
pop
inc
mov
aas
adc
adc
lea
sbb
xor
cmc
pop
mov
cmp
push
cmp
adc
stos
mov
bound
cmp
sub
inc
scas
loope
js
subb
fimuls
bound
jmp
test
push
push
xchg
sub
addl
sub
fxch
xchg
xchg
push
dec
scas
jecxz
sub
loop
lock
rol
pop
or
xlat
sub
hlt
ss
mov
xor
int3
mov
sbb
ret
or
mov
mov
inc
sbb
movsl
daa
scas
push
mov
sub
dec
popf
icebp
fdivl
iret
push
jg
pop
cli
pop
outsb
pop
enter
mov
mov
cmp
mov
shr
stos
or
inc
ds
enter
mov
data16
mov
adc
mov
mov
in
clc
mov
fisubl
add
dec
push
dec
and
mov
adc
pop
xor
xor
daa
push
sarl
and
scas
add
sbb
push
push
mov
sahf
jg
rcrl
cli
xchg
xor
xchg
popl
psubusb
cmp
sbb
jbe
sub
dec
mov
sub
sub
into
dec
pop
addb
pusha
daa
insb
push
push
shlb
ret
xchg
push
sub
shl
fbld
scas
mov
js
cmp
daa
cmpsb
stc
push
in
add
adc
cmp
xorl
dec
shl
pushf
je
aaa
in
and
addr16
pushl
idivl
ret
cwtl
int3
or
xchg
mov
xchg
sbb
lcall
inc
movsl
jb
outsb
insb
and
mov
loop
lret
addr16
mov
inc
mov
stos
clc
loopne
xor
clc
or
sbb
roll
loop
cmpsl
lods
lock
mov
add
add
jo
push
mov
scas
inc
stos
into
and
mov
aad
ljmp
ds
sar
dec
cltd
scas
call
or
mov
xchg
jge
in
outsb
cmp
dec
or
incl
jno
jmp
adc
mov
pop
in
pop
add
cmp
dec
jae
cmp
mov
into
or
fs
adc
add
add
and
jb
ss
or
pop
ss
popf
sbb
mov
shrl
aas
aad
cs
in
repnz
push
jns
andl
aas
sbb
xlat
fcomps
sbb
sub
cli
cmp
mov
nop
push
fistpll
hlt
or
sbb
fwait
sbbl
test
dec
ror
insl
push
sub
aad
aaa
jecxz
dec
dec
inc
sbb
insb
inc
pop
mov
inc
flds
adc
mov
mov
shrl
lret
mov
adc
gs
xor
sti
bnd
jae
sarb
xor
cltd
xchg
jecxz
pop
push
cwtl
rcll
es
cmp
inc
fbstp
sub
insl
cs
inc
aaa
mov
sahf
daa
or
mov
into
cmpsl
out
shl
daa
pop
ljmp
and
push
or
cmc
jae
jno
pushf
xchg
int
in
xchg
mov
mov
inc
rorb
cli
cli
filds
ds
dec
test
jbe
stos
cmp
xor
mov
cmp
sub
jae
cmp
xchg
es
mov
bound
dec
aas
cmp
daa
enter
cmpsb
mov
roll
push
decb
xchg
popf
jge
stos
mov
fisubl
movsl
mov
add
mov
mov
dec
cmp
push
stos
inc
add
sub
dec
pushf
jo
lods
push
mov
jno
fadds
in
or
stc
and
push
jnp
sarl
je
dec
lret
adc
ror
xchg
push
cmp
push
mov
pop
push
add
push
xchg
orl
out
fcoms
inc
loopne
xlat
add
sub
adc
and
and
insb
pop
mov
jns
push
shlb
insb
call
cld
cli
adc
pop
adc
adc
xor
mov
and
aas
mov
scas
test
push
loope
inc
mov
xchg
push
mov
xchg
or
xor
enter
xor
mov
sub
sbb
cmpsl
cwtl
mov
subb
lcall
mov
push
xor
fwait
pop
dec
or
mov
cli
mulb
xchg
add
push
pusha
push
flds
jbe
adc
mov
sub
mov
sbb
lea
cmp
jmp
mov
int3
mov
mov
dec
and
mov
pop
pop
das
cmp
pop
int
adc
popf
ljmp
jns
xor
xor
enter
and
fiaddl
fwait
push
test
jo
xchg
scas
mov
cmp
mov
sub
std
test
mov
or
sbb
push
lahf
jbe
in
or
hlt
sahf
test
sbbl
inc
xlat
fsubs
iret
inc
ficompl
inc
pushf
adc
push
pop
popf
push
adc
outsl
test
pop
mov
aad
dec
imul
popa
sbb
out
dec
stc
sub
mov
mul
sbb
in
in
fisttpl
cmp
loope
in
je
int
pop
pop
push
xchg
jmp
add
mov
xchg
dec
out
lock
inc
outsl
out
scas
sub
in
inc
sub
xor
insl
pop
or
inc
fiadds
and
xchg
sbb
sub
repnz
and
or
xor
mov
jnp
dec
mov
jg
bndstx
ljmp
xor
pop
subl
cmc
cwtl
dec
jp
dec
cmp
daa
in
ds
nop
andl
loope
push
mov
jecxz
cld
fscale
pusha
xor
xchg
lods
outsb
dec
lcall
dec
cmc
out
mov
jl
push
mov
adc
adc
shrl
cmpsl
in
inc
fldt
jecxz
ret
mov
dec
dec
sub
sbb
dec
pop
xor
outsb
mov
xlat
lock
std
push
aam
enter
jecxz
clc
jge
aas
nop
mov
je
inc
jle
mov
jmp
in
mov
pop
cs
push
roll
lods
mov
pop
jl
add
cs
jle
xchg
mov
push
packuswb
ds
jmp
push
lret
mov
add
pusha
scas
fldenv
shll
dec
insl
push
out
mov
movsl
test
push
out
je
dec
out
fcmovnu
sti
sbb
xlat
mov
jmp
mov
mov
mov
fbld
ds
and
fsubrl
repz
push
out
in
sub
mov
and
sbb
ja
xor
sbb
movsb
jb
shl
inc
nop
insl
insl
jg
lods
xchg
mov
ss
dec
ljmp
dec
lret
push
test
sub
jae
pop
cmp
xchg
cmpb
std
inc
loope
mov
push
inc
ret
push
mov
pop
out
adc
pop
cmp
add
test
fmul
mov
cwtl
mov
jmp
popa
into
jae
xchg
cmp
sub
cmc
jo
push
sahf
sbb
push
imul
shr
jmp
addr16
or
adc
int3
push
sbb
dec
cmpsl
mov
inc
movsl
and
dec
insb
data16
movsb
push
dec
cmp
es
lods
out
test
or
add
xchg
mov
jnp
jo
push
fwait
js
or
jo
mov
decl
mov
icebp
leave
jae
inc
aam
jns
inc
out
in
gs
cmp
jno
loopne
lahf
jmp
rorb
loop
lret
lahf
or
dec
ret
jne
pop
jg
negb
or
add
dec
jge
repnz
and
inc
mov
push
pop
push
push
xor
push
lds
mov
xor
jecxz
outsb
sub
daa
add
aaa
stos
xchg
jmp
aas
mov
mov
pushf
push
test
and
rcrl
or
and
or
stos
fsubl
gs
xlat
jnp
popa
sbbb
push
loopne
mov
clc
jbe
pushf
das
jmp
cmp
cmp
xor
inc
ja
push
sarl
adc
icebp
jne
imul
out
lcall
out
out
pop
out
mov
dec
xor
loopne
or
test
faddp
xchg
or
test
xor
cmp
push
stc
sub
gs
sti
mov
xchg
push
sbb
ficompl
mov
cli
or
fwait
inc
test
aam
mov
mov
jb
add
xchg
fldt
fnstsw
jb,pt
jnp
out
mov
mov
xchg
push
je
jne
outsl
sub
fnstsw
fcmovne
mov
icebp
push
xlat
test
rcl
mov
mov
mov
xlat
pop
sarl
inc
call
in
pop
mov
cmc
sti
push
ljmp
xor
or
stc
xor
add
and
shlb
notl
jmp
lahf
into
mov
arpl
cmpsl
xor
sub
iret
sbb
mov
popf
je
add
xchg
stc
xor
adc
mov
in
int
cmp
push
hlt
and
cmp
and
je
lret
neg
fnstenv
and
xchg
mov
stc
mov
mov
sub
stos
lcall
test
pop
shrl
push
lock
xor
and
dec
jmp
imul
mov
iret
scas
sub
aam
adc
and
lods
cmc
scas
pop
fwait
sahf
loop
cld
and
imul
mov
cmp
or
dec
push
push
dec
in
fnstenv
mov
inc
mov
xlat
test
inc
push
mov
add
mov
movsb
lods
pop
rcrb
push
cmpsb
icebp
femms
push
pop
test
dec
jo
sub
pop
int3
jmp
cmp
addb
jne
int
imul
cli
jns
cwtl
loopew
cmpsl
dec
lods
mov
out
jo
data16
aaa
faddp
xchg
lock
lahf
es
in
out
bound
xchg
add
or
mov
dec
xor
xchg
pop
shlb
dec
inc
push
dec
daa
adc
adc
mov
sub
xlat
add
aaa
rorl
mov
fistl
and
dec
mov
out
xchg
mov
xchg
add
inc
push
movsl
jp
xchg
jo
les
lock
test
xchg
dec
popf
add
or
outsb
xchg
dec
mov
inc
test
repz
stc
imul
xchg
cmp
iret
pop
dec
in
lock
insb
push
dec
sbb
popf
test
lret
notl
push
repz
sbb
jmp
loop
pushf
jbe
inc
dec
jle
faddl
je
ret
fwait
ss
or
dec
sbb
jle
movsl
mov
popa
pushf
fwait
mov
fisubl
rcl
lret
inc
mov
dec
aaa
jmp
mov
adcl
xchg
bound
int3
mov
pop
int3
adc
inc
stc
cmpsl
cmp
jno
xchg
cs
inc
xor
and
mov
test
or
pop
fidivl
imul
icebp
or
lret
mov
pop
mov
xor
orb
fwait
mov
frstor
std
stc
inc
out
ljmp
mov
mov
jmp
push
lods
mov
jmp
xchg
into
mov
xchg
xchg
insl
arpl
jno
jmp
out
xor
test
xor
test
fiadds
fimull
cmp
les
js
nop
jecxz
mov
lds
cmp
call
movsb
pop
lcall
xor
and
pop
mov
lret
jge
loope
sub
lret
cmpsb
mov
leave
ret
adc
sub
cmp
or
setp
subps
je
sahf
es
mov
mov
adcb
push
cmc
lds
dec
arpl
mov
and
jnp
stos
adc
xor
fnstcw
shr
xor
adc
mov
daa
jg
fs
cmp
dec
lds
iret
mov
cmp
adcb
in
adcl
inc
gs
popa
dec
mov
sbb
popl
pushf
inc
fsubrl
sub
pop
adc
mov
sbb
cmpsb
out
das
xor
push
imul
pop
add
rolb
rolb
aam
sub
test
mov
lcall
mov
mov
xchg
ss
dec
insb
jnp
ja
inc
mov
mov
lcall
jae
das
les
roll
insb
add
lods
rolb
mov
int3
imul
push
sbb
ljmp
xchg
pop
rclb
push
sahf
stc
inc
scas
push
sbb
mov
dec
ret
and
and
mov
and
xchg
fidivrl
cwtl
push
push
idivl
loope
jno
push
fisubrs
lret
test
sub
jno
inc
cmp
fldenv
jmp
ficoml
jne
popa
push
add
mov
cmpsl
xchg
jmp
mov
outsl
and
cld
mov
add
cwtl
out
imul
and
imul
sarb
mov
sti
push
shrb
or
std
adc
xchg
mov
inc
push
jl
sbb
inc
std
lret
mov
cmpsb
xor
pop
fstl
lret
sub
nop
mov
fidivs
add
ja
dec
inc
sub
xor
sbb
shr
add
sub
jecxz
in
jp
pop
js
sub
pop
imul
mov
rolb
mov
mov
enter
pop
lds
cs
sub
push
ret
xchg
dec
rcl
addr16
xlat
pop
dec
out
ljmp
insb
test
roll
repnz
or
std
mov
loop
cmpsl
sbb
test
stos
add
push
repz
popa
bound
mov
add
pcmpgtw
cmpsl
jecxz
jns
stos
ja
add
stos
xor
jo
lea
lds
aam
addr16
or
cmp
mov
xchg
push
movsl
lret
sbb
iretw
add
mov
push
jle
int
push
out
dec
cmp
outsl
jmp
cmp
and
repz
jbe
mov
and
insb
pop
ljmp
push
cmpl
loopne
pop
aaa
pop
jae
inc
sub
sub
pop
adc
mov
xlat
jmp
pop
ljmp
movsb
in
mov
add
shl
cmpsl
sti
pop
testl
je,pt
cmp
inc
int
pop
sbb
xor
test
cmpsb
jae
fwait
xchg
das
stc
movsb
imul
rcrb
lds
outsb
inc
movsb
ret
push
xchg
cmp
adc
jb
xchg
push
fwait
popa
out
pop
push
push
xchg
pop
and
inc
pop
jl
rcll
push
fldt
xchg
popa
enter
loop
mov
popf
mov
mov
sbb
stos
mov
int
jle
xchg
cmp
jg
fnstenv
and
movsl
cltd
mov
pusha
stos
push
shlb
lahf
mulb
sub
stos
or
shrb
pop
pop
imul
add
sbb
and
pop
or
aaa
add
pop
sbb
jns
push
out
add
mov
fnstenv
inc
shrb
scas
lcall
dec
movb
fdivrs
xor
mov
out
mov
ds
adc
push
jnp
xchg
cmpsb
cmp
je
in
add
jne
lahf
inc
repnz
inc
popf
cmp
fdivrp
fs
and
or
mov
mov
nop
out
pop
mov
std
cltd
xchg
xchg
ljmp
jnp
mov
sbb
repz
xchg
jp
xor
icebp
xchg
std
imul
in
fimull
xor
add
xor
mov
mov
pop
push
push
xchg
jns
movsl
sbbl
ror
mov
xchg
pop
pop
mov
mov
cs
outsl
gs
push
loop
lea
ror
aaa
push
es
cwtl
rorb
test
div
xor
pushf
cmp
mov
jp
out
mov
pop
adc
sub
fdivp
lods
and
dec
test
dec
xchg
int3
stos
add
enter
in
lea
add
dec
mov
adc
push
mov
aad
dec
insb
dec
mov
les
in
dec
sbb
mov
and
cmp
or
lock
sahf
lods
jbe
mov
jns
push
inc
push
xchg
lahf
xchg
add
xchg
aaa
xchg
popa
movsl
std
pusha
popf
ja
dec
cmp
inc
mov
ss
xchg
mov
adc
mov
int
cwtl
and
pushf
adc
jge
hlt
aaa
mov
jbe
jge
mov
sub
cmpsl
sahf
jmp
cvttps2pi
insb
xchg
aaa
stc
xchg
roll
sub
push
push
loope
xor
cs
repnz
fldenv
mov
inc
inc
fcoml
mov
cmp
div
mov
call
jbe
iret
xchg
out
jbe
dec
iret
lret
movsl
es
inc
push
jb
in
adc
add
jmp
adc
jbe
aad
push
or
cmpsl
js
mov
imul
ljmp
pop
lahf
ljmp
int3
and
lods
inc
notl
push
mov
popf
lcall
and
cltd
sub
adc
adc
jl
xchg
and
shl
pop
pop
out
cmp
fdivs
dec
xchg
adc
insb
lea
repnz
fcmovbe
sbb
out
push
jns
cmp
loope
mov
std
adc
les
iret
pop
fsub
jle
xchg
shll
pop
daa
ja
pushf
cmpsl
loopne
inc
cmp
mov
lea
cli
ja
xchg
xorb
shll
sub
sub
jg
pop
push
xchg
lea
xchg
cmp
push
stos
push
stos
ds
dec
push
nop
jp
add
rclb
filds
dec
clc
add
xchg
nop
fdivrp
imul
or
mov
dec
out
gs
add
sbb
inc
add
aaa
dec
repz
mov
pop
sbbb
adc
loop
test
and
mov
fnsave
cltd
dec
jae
mov
mov
cltd
xchg
inc
ret
popf
add
push
andb
cli
add
add
int
aas
dec
mov
cmc
fcomps
int3
rolb
sarl
push
es
je
push
sub
mov
push
pop
ja
jns
test
dec
sbb
or
popa
push
fnsave
movb
push
ljmp
mov
test
sbb
add
mov
mov
dec
dec
mov
push
push
cwtl
push
pushf
jb
pop
ljmp
xor
xchg
lock
cmp
sub
das
jge
cwtl
test
xchg
push
fistl
lds
cmp
fcmovb
or
icebp
ds
jmp
clc
das
cmp
or
fwait
gs
mov
fmuls
dec
jns
xchg
sbb
fs
mov
mov
sbb
adc
out
pop
adc
into
mov
mov
cmp
push
cmp
divb
rorb
arpl
pop
lea
dec
mov
in
fcom
int
ret
pop
cld
dec
popf
and
test
cld
inc
push
mov
push
cmp
pop
mov
sub
int
xchg
shlb
cmp
dec
inc
mov
mov
xchg
loope
add
scas
divb
mov
lret
pop
fmull
jecxz
test
add
out
mov
sub
iret
fst
testl
sarb
into
sbb
pop
and
insb
outsb
ret
push
out
inc
adc
mov
loopne
mov
inc
je
test
sbb
jle
ds
mov
inc
xchg
and
pop
out
scas
jmp
std
inc
mov
and
inc
or
cmp
pushl
out
cmp
ja
and
test
jbe
lret
divb
lea
ljmp
hlt
pop
push
arpl
xor
rolb
add
and
andl
inc
loope
or
dec
inc
mov
int
mov
data16
test
inc
xchg
popa
xchg
add
push
jl
lahf
sub
push
jnp
xchg
push
std
movl
jnp
mov
sbb
inc
std
push
xor
lahf
or
cli
sbb
pop
jecxz
pop
dec
aas
fidivrs
fwait
cwtl
cmp
dec
mov
fsts
cmp
sti
dec
out
movl
out
sub
xor
push
fimuls
stos
addr16
and
movntq
out
sbb
push
setl
cmpsb
jbe
dec
gs
pop
or
and
inc
jb
mov
out
adc
enter
add
es
loop
cli
hlt
xchg
mov
mov
cmp
mov
fstpt
xor
daa
imul
inc
and
cmp
addr16
mov
cld
lock
sub
or
dec
test
jl
mov
ret
lock
aaa
in
fistl
xchg
inc
jns
pop
popf
push
roll
mov
cmp
or
push
in
das
ret
aam
std
dec
mov
add
mov
leave
ret
ret
jp
fwait
out
jecxz
and
cmp
aaa
movsb
mov
mov
and
mov
inc
std
pushf
adc
ja
loop
push
sub
es
add
xor
pop
jecxz
imull
aas
cmp
sti
sub
ljmp
xor
mov
rep
leave
iret
mov
roll
dec
cli
mov
push
mov
xchg
sub
inc
jns
cmp
insb
xchg
jecxz
pop
jo
xor
mov
lods
mov
dec
push
clc
inc
adc
fisubrs
pop
data16
sub
cmpsb
adc
jb
fildll
jmp
scas
ljmp
les
jns
cmp
pop
xlat
cwtl
cmp
out
out
xor
inc
shlb
out
push
xchg
cmp
xor
sbb
in
test
cltd
add
subl
sub
xchg
sti
or
pop
mov
dec
xor
pop
mov
mov
jp
rorb
and
notb
std
xor
les
pop
add
mov
div
mov
dec
js
sub
sbb
orb
mov
mov
cltd
cmp
cltd
iret
jbe
mov
dec
sbb
mov
nop
xchg
into
mov
sub
es
pop
cld
ss
add
les
sti
ficoms
cmp
pushf
add
add
or
xchg
outsb
push
cmp
daa
cmp
fmuls
or
test
jns
ret
mov
add
out
dec
sub
nop
mov
sub
fsubp
out
out
jnp
adc
outsb
js
push
test
jg
and
int3
pop
clc
dec
out
add
movl
or
sbb
xorb
scas
mov
shl
mov
loope
stos
cmpsb
jmp
sub
add
dec
dec
pop
add
xchg
inc
inc
dec
push
cmpl
shlb
xorl
pusha
lock
and
pop
jp
jle
mov
xchg
add
sub
out
sub
addb
lods
mov
sub
jecxz
mov
lahf
pop
mov
loope
adc
test
mov
popa
xchg
or
or
pop
sbb
mov
mov
fidivrs
push
sbb
clc
pop
push
pop
aam
add
cmp
push
out
pushf
jno
rorl
mov
test
enter
gs
jo
fidivs
enter
sub
fimuls
testb
jle
jecxz
fdivrl
or
in
imul
inc
mov
cmpsl
cwtl
loope
mov
ret
daa
fwait
mov
roll
xchg
ss
or
rcl
pop
stos
lcall
frstor
push
xor
sub
out
fwait
dec
out
push
or
mov
dec
mov
pushf
gs
sbb
imul
cwtl
ss
cli
mov
jmp
sti
mov
aam
aad
push
inc
pop
in
sbb
stos
in
lahf
je
pop
cmp
pop
lahf
fisubl
jns
add
adc
jecxz
pop
xchg
popa
mov
mov
pop
lret
insl
sbbb
push
enter
imul
in
pop
lahf
inc
in
cmpsb
repz
stos
inc
push
adc
jg
jne
mov
xchg
pop
js
sbb
cmp
pop
adc
imul
clc
adc
sbb
or
mov
jge
data16
lds
pop
mov
test
flds
jbe
xchg
leave
arpl
dec
cld
sub
cmc
jns
lods
sbb
and
lods
pop
cli
push
dec
cmp
mov
xchg
ds
leave
mov
cli
sbb
lods
inc
popf
fld
sbb
adc
idivl
fwait
scas
mov
pop
add
mov
jge
stos
movsb
sbbl
jg
sub
xlat
jb,pn
sbb
jle
jge
dec
outsb
xchg
sub
or
xor
ficoml
mov
rorb
inc
and
sbb
pop
scas
sbb
cmp
and
and
xor
stos
and
push
dec
imul
mov
arpl
cs
add
add
xor
pop
out
mov
sbb
cld
mov
jbe
test
inc
in
jae
andb
adc
adc
scas
mov
loop
or
rclb
shl
sbb
xor
inc
aam
out
in
rcll
orb
adc
roll
xchg
pop
movsb
mov
imul
inc
cwtl
mov
lock
cmpsb
fcoms
mov
iret
out
mov
sahf
loop
xor
and
add
pop
aas
fsubrl
les
mov
outsb
cmp
inc
sub
mulb
stos
dec
jno
cmpsb
enter
popf
in
outsb
sahf
sub
insl
das
and
and
xchg
sahf
jge
movsl
xor
mov
push
pop
call
lods
inc
adc
scas
cmp
pop
iret
cltd
jae
add
add
aas
sub
cmp
or
xchg
mov
sub
jae
push
mov
loope
pop
xlat
lcall
inc
adc
or
ret
movsl
adc
clc
scas
mulb
and
sbb
fists
cwtl
in
fldenv
arpl
out
popf
jne
in
jle
pushf
jb
xor
sub
sub
ds
push
add
adc
movsb
in
mov
negb
bound
jns
inc
cmc
adcl
add
test
repz
jmp
or
les
jae
rorb
in
sub
pop
push
loop
pushl
inc
into
lahf
or
sbb
lret
inc
cmp
in
mov
xor
js
pop
lcall
aam
xchg
xor
inc
pop
ret
dec
test
in
lret
jecxz
and
mov
mov
adc
lds
fwait
mov
ja
or
or
inc
cmpsl
or
xchg
or
insl
rorb
nop
cs
gs
push
adc
stos
push
es
mov
xor
xor
pushf
repnz
cltd
mov
scas
cmp
inc
fnstcw
movsl
pop
jle
jbe
adc
sbb
repz
out
out
lods
das
iret
xchg
xlat
dec
jp
mov
mov
mov
adc
jb
dec
aas
mov
fwait
ljmp
mov
mov
sbb
xor
inc
das
sbb
in
rcr
xchg
mov
xchg
adc
je
xor
adcb
mov
stos
out
dec
xor
xlat
decl
fiadds
test
inc
pop
sub
out
out
inc
jge
dec
ud2
lods
pushf
rorb
push
negb
pop
in
push
mov
xor
mov
mov
rcrb
popa
aad
bound
cmp
push
in
push
in
pop
and
mov
push
jae
jle
ss
fildl
adc
adc
add
ficoms
pop
cli
stc
xchg
hlt
mov
inc
push
cmpsl
loope
adc
jne
popl
push
adc
or
cs
outsb
out
shrb
xchg
dec
xchg
adc
dec
gs
sbb
test
lret
rclb
bound
insb
repnz
fisubrs
sar
mov
mov
add
outsb
push
ja
loop
jp
test
add
movsb
lcall
xchg
or
xor
cmpb
inc
adcb
push
lock
pop
mov
stos
inc
jnp
out
scas
jno
push
cld
push
xor
ret
push
ljmp
mov
dec
clc
movsb
cmp
mov
addr16
enter
jnp
icebp
adc
fstpt
out
mov
jmp
jle
inc
adc
lea
movsl
cld
leave
sbb
inc
jb
and
sub
cltd
xchg
daa
mov
and
imul
mov
incl
and
push
mov
mov
push
sbb
pop
pop
jae
in
test
daa
adc
jge,pn
mov
into
sub
or
pushf
mov
pop
mov
inc
pop
test
in
lock
sbb
mov
mov
mov
push
jle
or
xchg
jne
xchg
outsl
mov
outsb
repz
or
out
sbb
pop
add
loopne
push
cli
movsl
mov
add
xor
push
pop
or
lds
adc
aaa
fucomip
jbe
mov
push
jge
lds
icebp
ljmp
sub
xor
sub
cmp
pusha
lds
add
push
test
test
mov
xor
sbb
pop
or
adc
jno
pop
pusha
andl
dec
mov
push
mov
mov
scas
and
rol
pop
mov
jnp
cmp
mov
sarl
mov
pop
mov
mov
movd
popa
pushf
pop
and
insl
inc
jge
mov
inc
icebp
repz
dec
sub
in
lret
cmp
mov
or
jno
test
sbb
idivb
outsb
cmp
test
xchg
and
out
or
sub
jnp
sbb
test
imul
jno
or
or
jae
leave
test
push
cld
and
rclb
or
xchg
and
outsl
insb
jno
jecxz
push
testl
inc
dec
adc
dec
inc
sbb
sub
pushf
dec
cmp
addr16
repnz
shlb
xchg
cmp
jmp
ds
and
push
rcl
shll
dec
or
ljmp
das
add
fdivrs
jecxz
mov
mov
xchg
js
inc
push
pop
imul
fbstp
jno
lock
test
pop
pop
xchg
push
pop
ud0
inc
cmp
mov
pop
and
into
ljmp
and
sub
imul
addb
stc
ja
inc
dec
ljmp
aam
push
or
sub
jmp
jno
ljmp
mov
imull
les
js
xchg
sbb
jbe
sub
dec
sahf
push
lcall
fdivp
sub
loopne
fistpl
jp
or
dec
mov
or
pop
adc
adc
mov
cmp
pop
mov
mov
inc
inc
mov
xchg
rcrb
dec
lods
cld
pushf
stos
outsb
cs
cs
push
in
cwtl
out
bound
push
sbbb
sub
jp
int3
enter
lea
sub
and
adc
cli
loope
xchg
addr16
lds
int3
movsl
push
mov
dec
xor
inc
adc
and
insb
cmpsb
push
push
sar
in
sbb
mov
cs
or
lahf
mov
push
out
mov
rcrb
add
mov
or
scas
jno
aas
repz
xor
adc
jae
mov
scas
add
mov
movsl
mov
pop
mov
fwait
cmp
daa
lcall
xchg
cwtl
mov
jbe
aaa
jle
mov
jle
cli
inc
inc
das
in
jecxz
bound
icebp
shlb
mov
pop
mov
stc
cs
int
aaa
imul
add
xor
js
sbb
cmp
lods
ret
les
idivb
sbb
stos
aad
cltd
movsl
das
hlt
test
std
and
test
jne
dec
xchg
hlt
lcall
ret
dec
mov
xor
xchg
push
dec
movd
sbb
mov
sub
shll
loope
aad
lret
and
mov
lock
inc
fstps
adc
sub
or
fstpl
push
sti
jge
pop
pop
mov
dec
ret
in
pusha
inc
xor
mov
or
or
xchg
ds
test
sub
dec
test
sub
cli
sarl
jp
out
popf
push
rorl
push
repz
sarb
sar
test
sub
rol
push
int3
into
sub
add
xlat
sub
pop
repz
jne
aam
imul
xchg
push
cmp
in
lret
add
and
or
lods
into
loope
xchg
cmp
dec
inc
xor
lock
mov
mov
adc
outsl
dec
pop
adc
inc
insl
push
cwtl
out
sub
les
xorl
push
pop
jmp
inc
cltd
push
inc
mov
addr16
pop
or
sbb
mov
sub
cwtl
test
int
in
push
mov
or
sbb
popa
insl
movsl
test
fstps
pop
loop
push
push
jbe
sub
xchg
orl
xchg
aaa
in
clc
repz
adc
lock
dec
mov
sbb
out
lret
sbb
int
imul
jge
mov
mov
lock
aas
mov
pop
loope
inc
and
gs
js
mov
nop
into
fcompl
loopne
cmp
jle
frstor
ss
push
sub
jbe
jbe
pop
loop
out
movsb
jns
out
ret
stos
sub
data16
cmp
lock
shrl
or
jbe
sub
out
mov
xchg
addb
fwait
out
in
and
push
notl
adc
mov
or
stc
and
mov
repnz
pop
xor
mov
mov
fs
cmp
push
ss
xor
cmpsl
nop
popa
leave
lret
push
sbb
jmp
inc
push
call
pop
in
and
and
popa
xor
jnp
push
pop
das
xor
fs
xor
lret
cmc
xchg
push
adc
cmp
ss
sub
leave
jo
or
xchg
fisttpll
jb
lods
pushf
cmpb
mov
mov
cwtl
mov
sbb
pop
mov
dec
xchg
jge
sbb
cmp
push
fs
and
cmp
cmp
xchg
fcmovbe
in
setne
lahf
dec
xlat
jbe
rorl
push
sbb
sub
dec
andl
sub
or
pop
or
pop
cli
int
sub
ljmp
lcall
sub
popf
mov
std
out
and
cld
mov
arpl
push
push
sub
dec
out
pop
adc
fs
pop
f2xm1
cmp
movsb
sub
xor
cmc
lahf
and
sbb
cmp
insb
cmc
push
jb
and
dec
cmpsb
jg
pop
out
dec
and
sbb
adc
cmp
loop
hlt
movsb
and
adc
fwait
push
jecxz
dec
xchg
adc
cmp
in
loope
cmpsb
nop
inc
loop
ret
mov
xor
jno
aaa
arpl
loop
mov
outsb
insl
insb
push
insb
mov
bnd
subl
inc
out
xchg
push
es
in
ret
sar
and
sarb
add
push
rolb
mov
popa
push
pop
int3
mov
cmp
pop
fldt
cmpsb
xlat
js
mov
aaa
dec
outsl
jle
pop
rolb
mov
into
fdivs
sahf
les
repnz
rcl
pop
pop
or
sbb
in
xor
insb
sbb
xchg
mov
fscale
sub
sub
mov
cltd
pop
icebp
and
adc
cs
int3
jp
push
mov
pusha
adc
or
repnz
inc
mov
inc
push
and
fisubrl
in
fldt
test
outsl
pop
fmull
add
cltd
inc
cmp
fistps
sbb
add
pusha
lret
xchg
inc
mov
repnz
aam
cmc
mov
ficompl
movsb
pop
cmp
sbb
aas
lahf
jmp
mov
orb
add
add
scas
cwtl
push
out
mov
lods
imul
push
adc
movsl
jg
shl
jno
mov
mov
inc
int3
jmp
dec
lods
lds
xchg
sub
cltd
shrb
mov
xor
lret
sbb
inc
in
jecxz
lods
out
adcl
xor
jbe
sub
pop
add
and
or
fwait
je
rclb
or
cmp
jp
out
push
lods
add
push
mov
and
jne
push
pop
popa
andb
mov
add
out
mov
scas
dec
sub
inc
pop
sub
or
data16
and
cwtl
movsb
mov
jbe
hlt
pop
xlat
inc
icebp
mov
pop
mov
cmc
mov
mov
add
xchg
pusha
dec
mov
sarb
push
je
popf
out
sbb
rorb
ret
pusha
into
popa
cmp
cmp
pop
sarb
into
add
outsl
inc
lds
je
mov
mov
jl
das
and
ret
nop
mov
push
dec
xor
adc
adc
imul
nop
stos
jmp
popa
xchg
jae
jbe
loop
mov
jno
mov
cmp
nop
clc
dec
sbb
insl
sbb
mov
cmp
rclb
lds
out
pop
sub
or
xor
orl
cmp
inc
mov
imul
ret
and
dec
cmpsl
jecxz
mov
pop
sar
and
adc
mov
sub
sbb
xor
dec
icebp
outsl
push
popa
mov
rol
sub
inc
pushf
jp
scas
mov
scas
sub
push
jno
cmp
lods
and
xor
jae
dec
dec
sti
cmc
fwait
nop
xor
sub
imul
jle
arpl
jl
movsb
fnstsw
or
insb
subb
and
mov
or
mov
pop
xchg
or
repnz
std
push
mov
mov
push
cmc
test
enter
mov
cmp
push
mov
shlb
jecxz
xchg
cli
mov
jb
jmp
ror
push
mov
movsl
nop
pusha
clc
stc
sbb
cmc
into
shrb
test
mov
test
incl
adc
sub
push
and
rcr
movntq
mov
fidivrl
call
movsb
fs
jmp
adc
test
xlat
adc
push
sub
inc
mov
sbb
cmpsl
sub
push
or
pop
pushf
jno
clc
filds
scas
ljmp
lea
or
out
pop
inc
add
mov
pusha
mov
jae
push
mov
sahf
xor
int
lock
xor
xor
lahf
in
push
movsb
gs
das
jge
loope
jecxz
minps
sub
dec
mov
xor
dec
mulb
insl
pop
jmp
sarb
sub
movsl
dec
out
mov
xchg
mov
sbb
mov
fstl
mov
fwait
fwait
outsl
and
call
xor
in
pushf
mov
scas
mov
cmp
loop
dec
sub
lahf
scas
xchg
pop
adc
fcomps
or
adc
xchg
inc
add
rcr
xor
std
imul
fiadds
popa
in
test
stos
lods
idiv
das
adc
int
jb
xor
sub
pop
bound
push
mov
stos
sbb
add
mov
or
xchg
pop
push
add
jne
out
adc
sbb
dec
mov
les
fisttpll
mov
adc
xorb
push
mov
outsl
cs
xchg
and
filds
jb
pop
add
shrb
xchg
mov
cmp
mov
pop
mov
dec
sbb
lret
xchg
cltd
dec
jb
popf
dec
sub
mov
mov
sti
mov
fmull
cmp
jecxz
cmp
pop
jns
push
lret
xor
aad
ret
cltd
das
ret
push
and
fisttpll
jno
out
lahf
xlat
or
test
pop
outsb
adc
pop
adc
jne
push
popa
mov
cli
mov
cmpsb
pop
jae
mov
movsl
jae
pop
and
push
aam
adc
sbb
sub
test
pop
xor
outsb
mov
dec
mov
dec
bound
xor
loop
in
scas
push
into
and
movl
pop
pop
lret
fsubrl
jno
pop
call
mov
lock
sti
into
sub
leave
sbb
cwtl
or
out
mov
cmp
in
sub
aam
lret
shl
aas
and
adc
pop
lock
adc
adcb
out
ljmp
mov
xchg
test
in
lea
out
rcll
xor
jmp
jne
mov
add
inc
sub
pushf
outsl
inc
mov
loop
mov
xor
js
out
test
add
push
js
cwtl
or
add
mov
dec
inc
leave
pop
or
cmp
ret
mov
mov
pop
imul
insb
mov
outsl
or
sbb
adc
sub
jnp
sub
inc
and
stos
jbe
stos
fidivl
adc
adc
gs
inc
pop
test
cmp
dec
ret
xor
and
mov
push
aam
push
sahf
lahf
jp
cmp
cmpsb
dec
stc
test
jmp
cmc
push
or
or
xor
dec
mov
test
rcrl
sti
and
jbe
pushf
mov
orl
movsb
xor
pop
or
push
mov
nop
sbb
faddl
bound
iret
xor
fldcw
xchg
in
adc
test
jle
inc
movsl
out
push
jle
xor
ds
ret
jp
push
inc
lea
pop
xor
icebp
dec
and
add
negl
adc
push
mov
fstpl
jmp
mov
dec
iret
repz
or
xchg
add
cmp
int3
std
shl
push
push
cwtl
adc
xlat
push
xchg
das
cmp
sbb
xchg
mov
or
arpl
inc
pop
adc
rclb
lret
outsb
addr16
mov
aam
pop
rorl
daa
jmp
cli
shrb
and
add
mov
mov
dec
leave
pop
shrb
cmpsb
sub
lock
xchg
leave
mov
ss
sti
push
les
add
mov
dec
test
jp
push
add
add
or
std
lea
stc
adc
lods
sbb
cmp
mov
push
cmp
adc
rcr
nop
aam
mov
loop
jmp
gs
sub
pop
outsb
jg
xor
repnz
mov
ret
push
xchg
sub
imul
cwtl
fcmove
pushf
cmc
adc
das
loope
fiaddl
enter
cmp
mov
sub
xor
mov
ficompl
sti
pop
or
jp
das
cmp
lods
in
sbb
or
jl
add
cwtl
rcll
sbb
xchg
lcall
cwtl
jne
cmp
xchg
rep
xchg
sub
sub
jnp
cmp
in
cmpsl
movsl
jnp
loop
cld
adc
sub
cltd
adc
cmp
mov
fnstenv
dec
lods
in
and
xchg
inc
mov
sbb
in
mov
mov
stos
sub
push
cmp
psraw
jmp
sub
pop
push
xor
dec
push
pop
pop
sub
cmp
pavgb
in
mov
pop
pop
xchg
sub
mov
mov
cwtl
add
fidivrl
add
pushf
jecxz
cmp
inc
sahf
scas
movsl
subb
repz
cli
mov
incb
mov
push
daa
imul
inc
rorl
adc
ja
out
fwait
adc
popa
ljmp
sub
fs
xchg
dec
mov
call
jg
inc
push
pop
mov
xchg
loopne
outsl
shll
mov
xor
pop
lods
ret
jne
or
outsb
in
cs
cs
jg
mov
xchg
jge
mov
icebp
and
iret
sbb
out
outsl
push
imul
adc
gs
les
jl
imul
mov
out
outsl
inc
mov
pop
sbb
or
stc
pop
into
ja
fisubs
dec
js
push
jnp
gs
lcall
mov
addr16
xchg
das
rcrb
mov
and
dec
addl
or
sbb
add
pop
shll
sub
sbb
frstor
test
sbb
fidivl
push
test
out
pop
cmp
cmp
mov
test
test
and
lock
mov
and
fiadds
mov
push
xchg
cmp
aad
decb
add
jmp
out
sub
add
inc
int
out
test
cli
in
sarl
xchg
mov
push
pop
sahf
in
jno
adc
adc
mov
sbb
inc
lods
call
push
dec
and
hlt
and
fistpl
scas
rorb
or
loope
xor
imul
cwtl
out
xor
push
dec
sbb
pop
fcmovbe
pop
les
bound
push
jp
testb
in
shrb
mov
jp
sub
push
mov
dec
push
jp
aad
int
sbb
shlb
ja
pop
jl
sbb
jo
adc
cmc
test
cmp
hlt
push
bnd
pop
cmpsb
pop
sub
push
jns
cmc
cs
mov
enter
repz
pop
sbbl
xor
stc
push
dec
enter
in
mov
jb
hlt
cs
movsl
jne
outsb
pop
leave
addr16
jle
stc
rorl
jo
aad
sub
fildll
sbb
aad
adc
jl
lcall
daa
pop
addb
add
and
fdivrl
inc
sub
dec
jne
sub
pushf
lahf
clc
test
insl
decl
cmp
subb
icebp
add
aaa
xlat
inc
cmpsb
xchg
lahf
xchg
dec
adc
fdivl
int3
adc
shlb
hlt
dec
or
cmp
add
repnz
fcomps
cltd
mov
push
out
in
xchg
or
adc
insb
and
mov
xchg
loopne
mov
sbb
andl
mov
inc
jmp
sbb
or
in
push
out
js
insl
fwait
stos
in
inc
inc
leave
nop
sbbb
jno
insb
ss
ljmp
push
jns
and
push
popf
fwait
bound
cmc
sub
jge
lret
xchg
mov
mov
roll
int
popf
xchg
push
sub
lcall
and
outsb
jbe
testl
mov
push
push
enter
repz
adc
fwait
cmpsl
fisubrs
xor
dec
loope
cmp
jl
lahf
mov
jbe
mov
ja
out
idivb
scas
adc
add
lret
cmpsl
adc
cwtl
lcall
out
jg
icebp
iret
je
mov
mov
hlt
or
call
insb
jns
dec
repnz
out
into
mov
and
and
outsl
arpl
mov
jno
addr16
sahf
inc
cmpsl
nop
and
cmc
sub
mov
aaa
push
sbb
flds
rorl
movsb
dec
inc
push
repz
filds
pop
lock
mov
push
ds
add
cmp
popa
out
ret
or
enter
inc
xor
fstpl
pop
sub
sahf
sbb
stos
hlt
push
add
adc
mov
loopne
mov
cs
mov
xchg
pop
popa
sub
pop
xor
xchg
inc
repnz
loopne
mov
repnz
ljmp
push
jg
inc
push
fmul
out
cs
push
mov
cmp
mov
lret
sub
mov
test
popl
or
dec
cltd
or
or
pop
aam
jo
xor
xlat
int3
out
loopne
mov
jbe
mov
push
or
orb
jae
addr16
faddl
cs
adc
mov
mov
mov
lods
fists
xchg
cmp
test
dec
dec
out
sub
push
mov
mov
out
lods
loop
jmp
scas
inc
push
add
or
fnop
leave
sbb
adc
xor
cmp
mov
jmp
out
cltd
mov
test
jmp
int3
lock
int3
sub
loop
jbe
lods
je
stc
outsl
shll
ret
lret
pop
std
mov
stos
adc
dec
mov
and
push
leave
rcrb
in
lret
outsb
push
fldt
jns
pop
xor
adc
fcmovu
cmp
test
xchg
lret
push
sub
mov
ret
ja
adc
mov
add
fstps
aaa
mov
in
and
and
pop
test
sub
xor
pop
and
add
rcrl
lea
imull
mov
push
jmp
mov
js
cmp
imulb
jmp
xor
gs
insl
sahf
sub
mov
popf
inc
mov
or
push
add
pop
add
pop
or
cmpsb
xchg
les
sbb
int3
pop
sub
js
andl
pop
add
sbb
mov
in
inc
out
movsl
cmp
leave
jmp
jne
bound
or
jp
jecxz
inc
cmp
or
les
pop
mov
idivb
fwait
mov
push
out
sub
inc
dec
movsb
leave
jecxz
scas
push
cmpsl
pusha
imul
inc
pop
push
cmp
rcll
jns
movsb
dec
add
or
cmp
ret
imul
mov
pop
xchg
xchg
rcll
shrl
fsubs
cmp
insl
sub
add
cmpsb
add
jl
xchg
movsl
icebp
mov
xor
mov
jecxz
xor
mov
ja
xchg
adc
mov
mov
stos
loop
ss
or
cmp
cmp
scas
dec
movsl
and
cmpsb
test
jno
jb
xchg
xchg
addr16
insl
pop
into
into
sbb
pop
lret
dec
outsl
cmp
fnstcw
xlat
dec
jp
jns
test
mov
fsubrl
stos
push
loopne
cmpsb
fmulp
ret
jno
pop
or
fsts
sub
xor
sub
sarl
das
aaa
jns
insb
nop
push
jne
aaa
scas
pop
push
inc
xchg
sbb
jbe
ret
adc
aam
sub
pop
jmp
lods
dec
pop
mov
mov
ljmp
mov
mov
inc
mov
ja
ljmp
ja
ljmp
xchg
mov
fldcw
sbb
hlt
push
sub
out
push
lds
inc
shll
mov
push
sub
repz
ljmp
mov
push
push
mov
cmp
mov
hlt
imul
shll
mov
jnp
add
mov
sub
push
lcall
arpl
push
and
loop
lods
mov
rol
jge
inc
dec
dec
in
aaa
mov
mov
add
sarl
jns
or
ds
in
ucomiss
movsb
out
inc
mov
or
and
popf
and
fwait
cmp
lods
sub
out
out
cltd
cmp
xchg
pop
or
pop
mov
push
sbb
cmpsl
out
cld
in
mov
call
test
leave
or
fdivl
xor
jp
je
jecxz
jae
out
and
inc
dec
movsb
ljmp
push
in
test
gs
jmp
js
mov
aas
leave
inc
ret
into
mov
cmp
fnstsw
push
cld
icebp
inc
cmpsb
inc
mov
cli
notl
das
sub
pop
ds
cmp
in
jmp
jge
insb
lods
jecxz
cwtl
dec
add
mov
addr16
scas
roll
nop
mov
cmp
cwtl
sbb
adc
mov
outsb
in
push
push
mov
jg
aad
popa
and
movl
xor
dec
jnp
rorb
in
mov
add
arpl
daa
add
sbbb
cs
cs
jl
cmpb
stos
jnp
push
mov
movsl
lret
pop
lds
cmp
sub
ljmp
imul
jmp
cmpl
jl
xchg
inc
xchg
dec
sbb
pushf
int
xor
fists
jne
mov
inc
shl
xchg
pop
xlat
clc
push
icebp
push
sub
inc
sub
subb
cmp
jle
in
std
cmpsl
cmpsb
cmp
popf
and
dec
mov
hlt
mov
stos
cmp
dec
loopne
mov
and
cmp
jns
les
mov
insb
in
repz
mov
bound
lea
rolb
enter
mov
aaa
iret
loope
loope
xor
stos
adc
test
or
clc
jo
bound
adc
outsl
jg
pop
cmovb
push
das
mov
andb
mov
pop
xchg
pop
sbb
mov
aaa
adc
sbb
sub
rcl
add
ljmp
cli
jae
xor
pop
inc
flds
js
or
or
cli
lds
rorl
sahf
dec
lods
inc
mov
jp
push
jns
test
mov
cmp
loopne
stos
pop
jmp
roll
and
mov
and
xchg
not
enter
fidivs
mov
dec
dec
mov
mov
or
into
jl
scas
dec
mov
jmp
enter
dec
xchg
jae
jecxz
jnp
mull
in
ljmp
cmp
inc
mov
or
mov
in
dec
mov
incl
xlat
pop
mov
pop
lcall
enter
adcl
ja
roll
ja
jne
inc
mov
bswap
aaa
mov
cli
scas
mov
jb
loope
imul
in
stos
sahf
ficomps
lods
das
inc
mov
mov
cltd
or
xlat
push
hlt
mov
movsl
mov
pop
inc
or
xor
cmpsb
rcll
pop
test
js
cmpl
icebp
hlt
fbld
test
sahf
call
cmp
fstps
push
pop
and
adc
test
pop
fdivr
cli
cmc
out
decb
xor
imul
inc
xchg
mov
push
cwtl
sub
out
nop
repnz
scas
sahf
or
cmp
sub
pusha
pop
in
sbb
push
lods
lea
jbe
mov
jg
flds
lock
push
adc
push
cmp
dec
or
cmp
ds
sbb
sarb
mov
inc
gs
add
mov
sti
out
out
mov
sbb
add
sahf
sub
shrl
shll
sbb
mov
int3
mov
push
shl
out
pusha
xor
jp
push
jecxz
add
cmp
sbb
inc
pop
pop
sub
movsb
enter
movsl
or
sbb
dec
inc
cmpsl
jb
pop
lea
icebp
push
pop
aad
repnz
mov
xchg
lret
daa
and
lahf
out
xchg
aad
pop
dec
out
rcrb
pop
jno
imul
jle
mov
mov
pop
jnp
dec
cmp
jle
mov
je
cmp
ljmp
cmpsb
out
pop
mov
mov
push
inc
pop
insb
jle
fstpl
vpsrad
pop
push
out
dec
mov
repz
push
lahf
jge
jmp
shrb
xlat
lcall
out
add
or
pop
mov
inc
loopne
lds
mov
stc
js
lods
mov
cmp
stos
sub
mov
inc
loope
xor
jnp
pop
fcmovu
shll
push
xor
movsl
fstl
push
mov
popf
jb
loop
aas
sub
lock
sbb
loope
dec
sbb
repnz
pop
cmp
rolb
jnp
pop
insl
sbb
pop
clc
rclb
roll
daa
test
fxam
ljmp
mov
and
imul
xor
push
loope
shrb
std
fnsave
gs
push
fdivl
out
mov
pop
test
or
aaa
leave
lods
jns
mov
test
sti
shrb
mov
lea
lahf
xchg
mov
shl
fcomip
ljmp
adc
cld
loop
roll
cmpsb
jge
push
int
and
std
test
subb
or
fcompl
xor
jno
cmpsb
push
jge
rorl
mov
faddl
adc
sub
mov
jo
movl
sub
sti
sbb
outsl
aam
cld
call
dec
lcall
mov
call
arpl
dec
jae
ds
mov
push
mov
fwait
xorb
xchg
enter
and
cmp
popa
mov
imul
out
out
adc
aas
pop
ret
fstl
je
push
insl
outsb
stc
cmp
xchg
inc
cmp
insl
aaa
leave
xchg
sbb
jge
jp
jns
dec
mov
and
mov
orb
lock
xor
imul
sub
outsb
lea
clc
adc
insl
mov
popf
insl
sbb
cmp
aad
mov
ret
dec
scas
ret
jecxz
jo
das
out
mov
and
mov
jae
fmulp
add
dec
lret
pop
movsl
xchg
mov
ja
movsl
shlb
dec
sti
loopne
lahf
in
pusha
cmpsl
cld
sbb
jb
mov
pop
in
adcb
mull
xlat
jge
jle
das
mov
dec
enter
ret
out
daa
mov
test
xchg
data16
pop
sbb
xchg
adc
push
loopne
out
sbb
jb
les
jae
scas
sub
std
jb
mov
lret
pop
xchg
mov
insl
mov
xor
out
cmp
push
pop
test
lods
loopne
inc
out
call
loop
pop
inc
lret
orl
fiadds
ficoms
test
mov
pop
pop
fcom
int3
in
stc
int
call
inc
xor
mov
pop
inc
das
and
dec
xor
lock
rcl
xorl
mov
lret
stc
mov
pop
stc
inc
dec
mov
inc
lret
mov
movsb
test
scas
adc
or
scas
jnp
ds
push
daa
xchg
mov
lahf
xor
in
inc
xlat
adc
lret
or
xlat
mov
and
imul
lahf
mov
pop
nop
in
cli
add
pop
aaa
repnz
or
in
pop
lcall
jnp
mov
mov
xchg
pusha
aaa
pushf
out
adc
dec
jb
xlat
fs
cmp
dec
loope
out
fs
hlt
hlt
dec
aad
imul
pop
jns
mov
cmc
js
pushf
jbe,pt
pop
dec
inc
push
das
fadd
cwtl
add
clc
loop
xlat
and
pushf
shrb
pop
out
xrelease
mov
shlb
push
insb
jae
pop
repz
push
or
cmc
pop
add
or
adc
mov
fmuls
stos
jne
cmpsb
and
mov
testl
test
mov
or
imul
insl
mov
mov
dec
testb
jno
je
ss
push
loopne
xchg
shrb
stos
xchg
int3
mov
pop
jns
inc
sahf
es
negl
push
push
fadd
xor
jno
fcoml
inc
push
mov
jne
and
loop
in
outsb
in
pop
insb
leave
push
mov
mov
xchg
mov
sbb
fwait
jmp
mov
leave
in
cmpsb
add
pop
xchg
imul
xchg
mov
stos
mulb
ds
stos
dec
adc
lret
sub
adc
xchg
ss
imul
mov
mov
divb
and
test
pop
movsl
mov
les
xchg
xor
mov
mov
inc
lock
cli
in
xor
shll
and
ret
bound
in
mov
mov
repnz
jne
xor
xchg
test
jne
mov
mov
dec
test
sti
cltd
stos
stos
jge
ja
jb
in
icebp
dec
loope
fidivs
aam
imul
inc
sub
sbb
adc
fdivrl
xchg
jb
mov
idivl
aam
and
sub
dec
js
or
fwait
fs
pushf
adc
mov
insl
sub
out
sub
ss
sti
fidivrl
ss
lret
imul
push
xchg
push
pop
sub
nop
sub
mov
frstor
mov
xor
ljmp
fcompl
mov
lcall
dec
outsl
sbb
dec
lret
std
dec
xlat
jmp
movsb
call
mov
and
dec
or
loope
mov
push
insb
mov
sahf
lods
fildl
adc
mov
dec
xor
add
jmp
mov
fmull
xchg
jmp
lret
nop
int
add
lahf
xchg
mov
lea
lock
lret
push
fisubrs
mov
fildll
push
cmpsb
cmpsl
inc
push
insb
popa
mov
push
xchg
imul
sub
pop
push
push
frndint
or
push
sarl
xor
fistps
mov
add
and
adc
sbb
sub
mov
sbb
or
out
xchg
cld
push
jnp
jns
stc
mov
jg
mov
jge
loopne
js
and
test
cmpsl
stos
lret
fwait
out
sub
daa
stc
popf
and
cmp
ljmp
mov
and
fmul
ja
stos
sbb
and
mov
inc
jmp
loope
and
popf
jg
fwait
cwtl
mulb
mov
adc
je
ret
mov
sti
ss
cmpsl
jecxz
addr16
or
pop
pop
mov
adc
aaa
jl
mov
lea
jle
xor
and
lods
mov
aad
mov
xchg
mov
lret
add
mov
mov
mov
sbb
push
ficoms
jecxz
cmpsb
notl
div
sub
mov
rorl
xchg
pop
divb
enter
sbb
cmp
dec
cmp
push
jb
out
push
rcrl
fs
and
test
inc
incl
lea
mov
inc
inc
or
jp
mov
rorb
aaa
mov
or
aam
pop
mov
gs
cmp
cmpl
imul
fidivs
dec
fildll
es
lods
xchg
popa
cld
or
daa
cltd
aas
sbb
add
or
mov
sti
arpl
mov
mov
in
jle
popa
scas
nop
cltd
int3
add
xchg
and
jge
pop
push
mov
mov
push
jnp
jl
inc
sbb
inc
dec
andl
ret
imul
or
lret
sahf
lret
push
dec
add
mov
std
cld
mov
mov
popf
mov
movsl
jmp
cmp
or
stos
pop
mov
cmpsl
adc
nop
roll
in
repz
sti
movsb
push
out
cmp
dec
fldl
faddp
stos
xor
cs
icebp
mov
sub
ljmp
fldcw
push
sbb
scas
dec
cld
add
fisubs
xor
hlt
push
ljmp
mov
ljmp
insl
add
mov
repz
cli
and
aam
leave
xchg
xor
or
icebp
aaa
pop
mov
jo
paddsw
js
adc
addr16
xor
test
mov
mov
xchg
xor
push
int3
jle
xor
xchg
mov
outsl
push
jne
movsl
icebp
sarb
decb
lds
in
mov
gs
in
aaa
mov
cmp
jne,pn
ret
ljmp
mov
push
outsl
sbb
mov
test
mov
lods
pop
insb
loope
xchg
loope
jb
or
push
mov
push
dec
mov
cmc
push
inc
lret
aaa
dec
pop
mov
cs
push
sarb
sbb
dec
les
fsub
xchg
xchg
push
push
stos
pop
and
xor
cltd
add
push
inc
pop
bound
ss
arpl
loope
rolb
xchg
mov
in
push
push
lock
push
je
cmpsl
mov
push
cs
inc
inc
or
rclb
and
fwait
stos
push
pop
and
shrb
cmp
mov
incb
cmp
push
and
icebp
sub
cmp
xchg
xchg
in
adc
xor
adc
stos
xlat
sbb
add
mov
jo
in
leave
test
xor
cmc
stos
arpl
xor
jl
int3
roll
push
mov
sbb
sub
cmp
cltd
add
or
and
pop
cwtl
add
loopne
outsb
mov
cmp
or
cs
loope
or
popa
jb
scas
xor
dec
xor
xchg
loope
mov
cmp
cli
out
test
mov
mov
sbb
or
dec
popa
jns
not
add
mov
sbb
jne
jl
sub
and
aas
push
std
jg
inc
test
adc
ret
sar
mov
cmp
mov
sub
into
sbb
ljmp
and
xor
pop
sub
or
inc
fxch
and
scas
adc
push
or
sbb
clc
jmp
xlat
ficomps
popf
cmp
aas
xchg
jmp
dec
mov
push
popf
push
sub
jns
cmc
loop
dec
dec
pop
push
pop
cmp
add
xor
mov
or
pusha
inc
add
xlat
in
adc
jp
sub
sbb
test
sahf
ja
cmpsl
inc
dec
xchg
jmp
psubw
pop
cmp
in
xor
lret
adc
sub
mov
dec
push
aas
es
fidivl
popa
mov
insb
das
cmp
dec
scas
mov
inc
xchg
lock
push
mov
sahf
mov
outsl
xchg
ds
inc
int3
fiaddl
popa
mov
mov
and
lods
xor
sbb
fsubp
add
and
fsubrs
add
push
movsb
in
mov
enter
imul
scas
test
pop
imul
dec
sub
jecxz
cmp
insl
and
pop
mov
in
cwtl
mov
pop
lea
xchg
hlt
mov
lahf
roll
mov
and
lret
sub
sbb
jnp
movsb
xor
arpl
jmp
cmc
insl
lcall
mov
adc
xor
sub
out
dec
sub
roll
and
push
in
fistps
insb
decl
mov
dec
ss
cltd
mov
push
hlt
lret
lock
jp
repnz
xchg
cmp
test
aas
stos
mov
fwait
mov
pop
mov
fcomp
xor
jmp
test
lret
push
or
inc
mov
adc
ds
sub
cmp
insl
mov
loop
sub
mov
ret
mov
pushf
test
das
popf
xchg
mov
pop
loopne
xchg
pop
clc
or
sub
and
xor
mov
bound
xchg
ret
add
mov
dec
or
enter
ja
pop
pop
or
xlat
jne
arpl
sbb
in
jo
test
push
sbb
sub
loopne
fwait
sub
jg
into
out
mov
imul
cld
jl
sahf
pop
cwtl
insl
mov
inc
add
sub
sbb
mov
shlb
into
dec
mov
scas
and
cmp
mov
movsl
adc
in
ficoml
sub
mov
mov
jmp
xchg
sti
leave
push
mov
pusha
pop
ljmp
jb
mov
lods
clc
adc
mov
mov
adc
cmp
dec
cmp
jbe
adc
add
xchg
lahf
xor
cltd
aad
sti
pusha
dec
cli
mov
mov
mov
or
call
xor
shr
dec
push
and
sbb
mov
mov
jg
mov
out
xchg
ljmp
jb
push
mov
push
in
mov
inc
pminsw
enter
sub
jg
in
cs
jnp
push
ja
test
es
push
xchg
adc
ja
jno
xor
add
lcall
icebp
lods
icebp
fdivrs
fiadds
dec
jns
xor
repnz
inc
cmp
mov
add
xor
sbb
push
clc
inc
aad
inc
adc
xchg
sbb
push
xchg
add
sahf
fcmove
mov
call
mov
add
sti
lcall
sbb
iret
out
mov
mov
mov
lock
push
add
xchg
pop
test
lret
addr16
or
stos
adc
into
sub
dec
xchg
sub
sbb
jecxz
enter
lcall
or
mov
xor
mov
call
jnp
out
int3
scas
outsb
fsts
mov
push
lret
pop
ja
fadds
xrelease
repz
sub
sbbb
notl
sub
pop
fsubrl
push
push
out
jns
xchg
pop
add
mov
cmp
loopne
rorl
xor
ficomps
mov
cmp
test
insb
xchg
popa
dec
push
out
push
repnz
sbb
test
add
or
out
mov
add
loopne
lods
insl
pop
jecxz
and
inc
mov
dec
outsl
xor
push
enter
aad
ret
movsb
lea
jae
inc
roll
mov
jnp
loope
inc
out
mov
filds
movsl
cld
dec
push
adc
test
add
mov
clc
pop
mov
hlt
jnp
dec
add
ret
out
lahf
cmp
jnp
inc
xchg
imul
cmp
sub
add
addr16
xchg
in
lds
clc
and
outsb
inc
jno
sub
push
xchg
pop
nop
out
push
out
adc
inc
sub
cmp
mov
data16
int
fs
sub
and
sbb
repnz
add
xchg
lds
stc
xchg
js
jnp
testb
jle
and
pop
rcll
ja
imul
xor
stos
daa
lahf
in
mov
pop
scas
shlb
les
fnsave
ds
scas
fwait
add
push
mov
and
scas
inc
dec
add
mov
test
fs
and
call
lcall
jmp
push
subl
xchg
and
dec
cltd
sbb
cmpsb
in
cmp
or
pop
cltd
leave
cmpsb
lods
jle
dec
cwtl
xor
mov
pop
dec
mov
inc
loope
push
xor
stos
xchg
inc
or
into
jae
adc
dec
mov
xlat
xchg
adc
call
ljmp
std
cs
clc
xchg
das
xchg
lcall
mov
mov
jle
push
mov
inc
std
sub
mov
ljmp
xor
lods
std
push
xchg
xchg
sbb
mov
repnz
in
das
xchg
xchg
and
mov
mov
rorl
pop
sbb
mov
loop
repz
dec
sub
in
adc
or
test
mov
or
cmc
xor
insb
jmp
mov
push
mov
mov
inc
stc
outsb
jl
and
push
xchg
cmc
test
leave
repz
call
mov
cmp
clc
dec
mov
dec
aas
mov
cmp
pop
xchg
xor
lret
jmp
sub
sbb
lret
loope
cmp
repz
push
xor
std
sbb
clc
lds
xchg
pop
iret
test
sbb
sti
das
lods
dec
out
or
in
mov
ljmp
xchg
inc
ret
movsb
sbb
mov
pop
inc
mov
and
nop
scas
dec
cmpsb
es
ret
add
pop
and
xor
out
daa
in
jl
data16
mov
sbb
in
daa
mov
shrb
ds
and
xchg
insb
sub
pop
daa
and
sub
shlb
mov
js
adc
mov
and
inc
mov
mov
mov
scas
orl
fwait
sub
dec
add
mov
add
sbb
push
inc
arpl
pop
mov
rcr
or
mov
mov
jg
mov
inc
test
imul
and
cltd
test
sbb
xchg
jnp
ja
enter
push
or
outsl
adc
out
loope
mov
in
enter
popf
hlt
je
jl
leave
jle
inc
and
inc
stos
mov
cmp
stc
mov
lock
imull
addr16
mov
or
nop
jns
std
stos
push
lcall
in
fs
stos
arpl
incl
xor
jb
cmp
enter
mov
push
das
jno
sahf
daa
fs
lods
test
inc
je
cld
data16
sahf
inc
xor
pop
fcmove
sbb
out
pop
lods
sub
out
outsl
stos
pop
xchg
icebp
aam
fsubr
xor
es
jmp
sub
xchg
popf
outsl
and
stc
es
sbb
dec
cmpsl
cmp
mov
and
and
mov
mov
das
daa
jns
out
test
bound
push
sbbl
movsl
int3
and
cmp
int
and
daa
loop
xchg
pop
sbbl
lea
jge
in
stos
sub
push
cli
sub
movsl
fistpl
std
xchg
dec
xchg
imul
push
arpl
je
movsl
arpl
mov
aad
sbb
mov
jae
mov
dec
pop
and
cli
and
dec
and
sub
addr16
xchg
adc
jmp
mov
fwait
adc
popf
lcall
in
pop
js
cltd
aaa
cld
jecxz
adc
jl
pusha
mov
movl
sub
scas
xchg
imul
add
cs
push
les
sbb
mov
iretw
and
stc
inc
dec
adc
xor
pop
sti
leave
fimull
lods
xor
lcall
or
or
xor
ljmp
lret
push
rorl
scas
xor
jnp
lret
or
xor
shrb
inc
xor
int
jno
cmp
push
out
mov
mov
out
push
push
jl
mov
imul
sub
xchg
or
repz
popa
cmp
clc
aaa
out
mov
push
das
dec
loop
movsb
add
lock
xchg
sbbl
push
pop
shrb
hlt
in
fs
mov
xor
xchg
stos
and
mov
fs
sub
pushf
stc
hlt
loop
jbe
mov
stos
and
movb
xor
out
cs
js
jp
mov
mov
fistl
ja
shll
pop
adc
and
sbb
in
or
inc
inc
lods
mov
ja
leave
divl
push
mov
pop
jno
scas
cmc
dec
mov
mov
jnp
push
adc
mov
cltd
add
mov
mov
je
add
dec
daa
xchg
repz
in
and
daa
or
cs
cmpsl
mov
push
or
sbb
mov
xor
jbe
arpl
in
sbb
psubd
mov
push
dec
xchg
ror
fldenv
popa
pop
inc
cltd
sub
ficompl
mov
mov
adc
fimull
aam
inc
mov
inc
inc
xor
jne
pop
je
mov
push
sbb
jmp
fistpll
xor
inc
or
or
and
incb
int
data16
out
out
jne
data16
sub
dec
jmp
in
flds
xchg
push
mov
ljmp
xor
stos
inc
bound
push
pop
pop
sbb
and
pop
xchg
popf
insl
add
rorl
mov
mov
cwtl
nop
pop
dec
mov
pop
div
imul
std
add
rcll
daa
fsubr
inc
pop
sbb
repnz
ja
jbe
mov
mov
add
inc
or
or
test
xchg
aaa
out
or
ret
pop
adc
inc
js
dec
movsl
jne
out
imul
xchg
dec
cmp
scas
addr16
and
adcb
imul
push
xchg
imul
xor
shrl
aaa
in
sbb
jl
xor
inc
sbb
loop
movsb
adc
lret
test
roll
cltd
add
into
jmp
sbb
xchg
mov
xor
push
push
jmp
fiadds
mov
daa
in
repz
push
and
movsl
jb
push
xor
jb
pop
push
aam
xor
push
jo
arpl
jg
xchg
cmp
leave
xor
jle
or
push
rcll
in
sti
sub
jns
push
push
mov
xchg
mov
jp
mov
cmp
testb
scas
jg
lods
dec
ja
pop
pop
cmp
enter
push
sar
push
cmpb
mov
or
pop
pop
jl
bound
pop
shlb
push
mov
adc
jae
jmp
cmp
fstp
sbb
addr16
or
xchg
ret
out
xor
adc
inc
les
sbb
sub
aas
cltd
icebp
inc
jo
mov
jle
sti
mov
jp
sub
add
cmp
cli
es
fucomip
push
shlb
aas
stos
addr16
ljmp
and
out
cmp
out
mov
sub
shlb
std
dec
sub
inc
mov
mov
into
fstpt
push
in
jb
pop
rol
insl
outsl
shl
sbb
inc
daa
arpl
movsb
lods
sub
inc
cmpsl
jmp
orb
pop
into
sub
int
push
dec
dec
aad
dec
mov
pop
bound
stc
aad
mov
out
sub
std
pop
scas
jno
fs
int3
mov
xchg
aam
jl
hlt
mov
fildll
push
mov
lods
inc
dec
pop
xor
adc
pop
test
lods
lret
sarb
sub
fwait
dec
test
lock
fildll
outsb
jo
loopne
xchg
mov
or
dec
outsb
nop
and
addr16
lret
nop
jle
jne
mov
jne
xchg
jo
xchg
mov
loope
dec
ss
inc
dec
repnz
sbb
loop
daa
pop
add
sub
add
in
int3
push
popa
pop
pop
jns
adc
mov
lret
and
stc
pusha
fisttpll
roll
into
out
rclb
aad
outsl
sub
lods
add
push
insb
cmp
jg
mov
stc
les
or
outsl
jmp
xchg
xchg
sbbl
insl
pop
inc
xor
arpl
gs
ficomps
addl
loopne
sub
or
cmc
mov
add
aam
pop
sub
and
xor
cmp
jne
lret
xchg
ja
pop
pusha
bound
lock
inc
aaa
or
test
mov
xchg
cli
cmp
test
or
xchg
or
rcrb
ss
test
lds
inc
test
lahf
ret
out
clc
pusha
mov
push
inc
iret
ss
daa
out
jo
inc
lods
insb
push
test
cmp
fdivrs
jnp
jb
inc
test
sub
notb
dec
push
or
and
inc
in
inc
outsl
loopne
test
or
ret
mov
push
rcll
movsl
sub
lock
mov
fistps
icebp
and
lock
xchg
and
lock
xchg
in
call
pop
fisubrs
dec
cwtl
add
popf
push
stos
lret
cwtl
sub
jbe
aad
out
movsb
adc
push
fnstsw
mov
in
sub
pop
scas
xor
inc
xchg
pushfw
jne
pushf
mov
push
adc
xchg
push
push
push
xchg
mov
sahf
sub
push
insb
cld
mov
jbe
or
sbb
stos
addb
lahf
mov
imul
adc
inc
and
sub
mov
aas
fists
lcall
xor
sub
lret
cltd
insl
xlat
inc
mov
daa
cwtl
push
pop
icebp
and
mov
mov
or
cmpsl
mov
or
jno
fiaddl
dec
pushf
mov
loopne
int
mov
jne
lret
push
sbb
lods
push
sbbl
imulb
sbb
mov
mov
mov
cwtl
mov
cmp
or
sub
push
testb
pusha
xlat
or
jp
xlat
cmp
xlat
sbb
cld
aam
jnp
inc
pusha
sub
and
cs
leave
nop
jp
mov
cmp
sbb
out
icebp
cli
fsubrl
jmp
push
addr16
daa
insb
adc
aas
mov
dec
jp
and
xorb
push
divl
in
jecxz
jnp
cmp
mov
sti
xchg
ja
push
inc
pop
les
and
mov
jbe
gs
out
mov
pop
and
sbb
mov
dec
ja
lahf
and
jge
pop
fisttpll
mov
lods
adc
mov
adc
cli
push
imul
loopne
out
push
mov
dec
mov
fsubs
lahf
jp
dec
fidivs
add
cli
in
lods
sbb
sub
mov
adc
mov
enter
testb
aas
data16
inc
fs
jle
pop
mov
sbb
and
or
icebp
gs
iret
sub
sti
sub
dec
mov
push
pop
popf
faddl
addl
xchg
xchg
xor
movsl
mov
jmp
lods
mov
lock
in
jns
mov
xor
aaa
mov
out
aad
and
jge
mov
lds
jg
add
fmul
shll
and
pop
dec
lret
mov
jo
adc
popa
icebp
iret
inc
push
mov
jno
aam
xchg
mov
or
xchg
test
dec
ds
insb
out
cmc
add
xor
mov
jo
and
loopne
fimuls
push
push
sbbb
mov
xor
je
cmp
push
jmp
fistpll
fildl
adc
pop
sbb
inc
sub
ffree
lea
cmc
push
or
sbb
sbb
inc
xchg
mov
stos
scas
pop
add
loop
mov
inc
inc
xchg
sub
jns
aaa
pop
je
or
xor
popa
push
outsl
cmp
jle
lret
scas
mov
jle
dec
dec
ficompl
pop
mov
mov
pop
ja,pt
mov
movsl
sbbl
in
insb
and
shr
movsb
call
mov
in
mov
sbb
rcrl
and
insb
les
lcall
push
test
stos
aam
lcall
in
xor
imul
pcmpeqb
cmc
lcall
mov
cmpsb
je
arpl
cmp
adc
test
push
adc
sub
call
aaa
shll
cld
and
stos
sub
aad
mov
xchg
push
jne
jle
xor
jmp
add
in
popf
inc
lret
push
sbbl
add
xor
mov
or
andb
lds
pop
fidivs
ja
lahf
mov
lret
jl
rorl
sbb
mov
in
sub
fs
pop
dec
and
or
push
in
popa
fcompl
push
cltd
sar
xor
test
call
sbb
lret
inc
adc
sahf
sbb
or
cmc
push
mov
push
xchg
ja
mov
sub
call
movsl
add
xchg
in
subb
lcall
popa
incb
jno
push
loopne
mov
push
mov
cmp
or
aam
stos
mov
mov
mov
lock
inc
ljmp
cwtl
jo
test
out
ret
ds
int3
movb
lea
push
xlat
lock
adc
dec
add
mov
in
in
jo
dec
rcrl
fsubrl
mov
mov
sbb
dec
test
push
stos
insl
xlat
jg
das
mov
fnsave
clc
or
mov
xlat
inc
sarl
fidivrs
mov
outsl
push
cmpsl
cmpsb
jnp
int3
mov
or
jns
rcll
add
xor
push
xor
bswap
push
orl
aaa
sub
sbb
push
fidivrs
sahf
pop
add
xchg
jbe
mov
pushf
sub
mov
or
cmp
push
mov
inc
pop
adc
loopne
cmp
sub
jmp
jbe
rcrl
xchg
adc
ret
push
je
xor
pop
rep
movsb
int
idivl
push
bound
and
add
std
and
cmp
mov
sub
popa
sbb
aam
add
lahf
xchg
cli
xchg
sub
or
sub
stos
xor
push
inc
mov
stos
lcall
jle
or
inc
xchg
das
movsb
les
rclb
adc
and
nop
fwait
push
les
dec
std
cmpsb
repz
loopne
add
bound
mov
rclb
xlat
call
inc
cmp
mov
adc
pop
mov
push
mov
lock
cmp
pop
sub
pop
jmp
adc
xor
xchg
adc
lret
lock
outsl
dec
dec
out
negb
mov
xchg
pop
outsl
stos
bound
in
aas
xorl
and
pop
jno
dec
leave
or
inc
int3
adc
and
in
stc
cs
mov
adc
cmp
arpl
mov
in
pop
sub
nop
sti
test
or
js
fcom
dec
fwait
rcr
pop
in
test
pushf
imul
dec
add
jne
push
dec
jae
in
mov
mov
jle
rolb
or
into
push
rcrl
sub
imul
and
adc
adc
stos
outsl
jbe
dec
bound
pop
xor
sti
loope
lcall
test
sarl
dec
add
and
mov
add
cmp
mov
aam
aam
aad
sbb
cmp
pop
jae
call
bound
push
inc
add
mov
jmp
mov
subb
cmp
and
or
ret
push
imul
sub
mov
mov
sbb
test
xor
dec
mov
sbb
xor
adc
ror
xlat
or
push
leave
out
cmp
or
dec
imul
imul
in
add
pop
mov
aad
iret
push
movsb
cmp
dec
xchg
jge
inc
xorl
cmpsl
fcmove
and
push
cmp
or
push
xorl
ljmp
sbb
lods
mov
push
ficompl
mov
ja
fstpl
adc
iret
mov
scas
pop
or
xchg
iret
arpl
std
mov
mov
add
cmp
mulb
inc
pop
adcb
jns
mov
fs
fcmovnbe
cmp
hlt
xor
inc
sub
and
jnp
pop
mov
sub
insl
pop
mov
sarl
pop
daa
push
adc
lcall
pop
enter
adc
sbb
push
mov
jns
mov
mov
jns
xchg
out
outsl
jmp
stos
jmp
xchg
pop
int
inc
dec
pop
xchg
scas
mov
and
ljmp
push
sub
fldenv
jmp
outsl
sbb
mov
rorb
fdivl
fsubrp
sub
jg
push
int
mov
cltd
popa
aam
movsb
mov
jge
adc
lret
aad
dec
ljmp
ljmp
ja
or
subb
hlt
leave
pop
pop
xor
push
dec
mov
aad
or
stos
and
mov
int3
push
insb
leave
xchg
fwait
es
out
fisubs
jge
push
xchg
std
jne
jbe
pop
jb
mov
popa
inc
mov
out
fstl
iret
mov
aaa
xchg
mov
test
inc
lods
lods
xchg
out
dec
cmp
xor
push
xchg
test
in
outsb
loop
dec
jmp
pop
inc
rcl
push
dec
sbb
pop
out
xor
and
jne
ret
cli
sub
out
pushf
shlb
mov
mov
mov
pop
push
data16
scas
inc
fnstenv
iret
push
cs
jnp
sub
clc
shlb
jp
ficomps
std
sbb
gs
push
dec
pop
xor
ret
iret
or
in
dec
mov
xchg
ljmp
dec
inc
insb
jg
cli
pop
out
pop
pop
out
hlt
sbb
mov
adc
cmova
push
dec
and
cmp
imul
or
jnp
fiadds
mov
je
push
or
ljmp
cmpl
hlt
mov
insb
cli
out
mov
leave
sahf
leave
push
sbb
movsl
cmp
imul
pop
sub
push
and
dec
test
loopne
inc
inc
ret
jne
pop
into
jae
sbb
in
into
sbb
lea
pusha
and
add
imul
leave
call
into
cmp
pop
ret
jge
loopne
adc
sahf
insl
addr16
mov
cs
stos
lahf
or
mov
cs
ds
lods
out
jg
xchg
clc
test
inc
test
mov
jg
dec
adc
loope
push
cmp
push
add
ljmp
dec
fs
jecxz
mov
gs
imul
mov
decb
daa
cld
sbb
push
orb
fidivl
fnstenv
int3
sbb
cmp
neg
in
push
xchg
xchg
and
and
aam
xor
or
mov
loope
mov
sub
xchg
mov
or
jg
outsl
bound
jb
int
xchg
mov
push
mov
add
lret
xor
lods
clc
xor
rcll
iret
mov
jge
xorb
popf
cmpsl
cltd
fnstenv
mov
and
clc
mov
jb
movsl
rcl
xor
or
int
push
rolb
pusha
xorl
loope
mov
or
pop
xor
and
or
mov
mov
enter
test
loopne
mov
xor
je
push
js
pop
iret
dec
pop
adc
icebp
cltd
loope
mov
pop
arpl
jae
sub
mov
dec
jne
das
jne
cmp
ret
cld
dec
cmp
shrl
xchg
jnp
cmc
loopne
aaa
or
in
and
mov
repnz
xor
in
xor
xchg
sbb
mov
mov
mov
sub
rolb
sbb
pop
cli
data16
outsb
in
push
insb
pushf
and
les
fucomip
add
jb
adc
and
out
cmpsl
cmpsb
cmp
mov
adc
mov
jle
popa
cltd
mov
daa
mov
cs
jnp
and
adc
pop
cs
xchg
push
aad
sahf
cltd
repz
hlt
xor
fwait
push
rclb
sti
xchg
jecxz
out
and
xchg
cmp
sub
loop
js
mov
cmp
sarl
lea
out
cmpsb
xlat
sbb
stc
mov
push
mov
xlat
ss
fwait
mov
xor
add
je
arpl
jbe
and
or
mov
cld
add
xchg
sub
mov
mov
fsubrs
cwtl
insb
in
dec
pusha
lret
hlt
fsubl
iret
xlat
and
pop
pop
and
stos
add
in
scas
and
inc
imul
sti
repz
jmp
xchg
mov
jg
inc
iret
mov
hlt
fstpt
mov
pop
pushf
mov
adc
push
sub
movb
popf
xlat
outsb
pop
or
inc
mov
add
sub
and
lret
repz
push
push
idivb
pop
mov
xchg
loope
nop
arpl
testb
mov
mov
or
push
jae
add
mov
adc
mov
dec
in
out
push
xor
mov
rcrb
imul
cbtw
lock
pop
xchg
mulb
in
jno
mov
or
push
mov
mov
adc
mov
push
sub
mov
repz
enter
push
jb
jnp
pop
inc
bsf
cmp
mov
and
fisttps
sbb
mov
dec
inc
jmp
scas
roll
mov
ljmp
and
sub
lds
mov
inc
jnp
push
pop
cltd
jg
jae
rclb
fnstcw
movl
push
xchg
lahf
insb
int3
leave
sti
jne
pop
cmc
xlat
iret
cmp
std
add
add
dec
aaa
movsb
dec
xchg
ljmp
xor
inc
sbb
push
pop
sete
ja
fmulp
add
jg
sti
cwtl
rorb
ljmp
cmp
xor
mov
lods
jne
out
and
cld
adc
leave
je
adc
arpl
imul
sub
clc
fsts
and
adc
rol
gs
in
leave
and
pushf
negl
call
lods
mov
adc
xchg
aad
pusha
faddl
or
xor
test
fwait
aam
jne
pop
cmp
mov
pop
adc
push
lock
out
inc
shr
sbb
fstl
pop
loopne
inc
inc
mov
jl
iret
pop
or
mov
fcmove
pop
dec
dec
loopne
mov
sub
cmp
in
ds
dec
xchg
push
jbe
lods
ret
lds
jecxz
push
add
dec
imul
repz
test
cmpsb
movsb
jmp
cmpsb
jge
add
xor
add
sbb
jae
push
jbe
rcl
jg
dec
or
push
lea
shll
mov
mov
push
and
sarb
mov
in
call
or
add
sub
mov
cmc
inc
data16
mov
xchg
enter
cmovno
cmc
jae
xor
shlb
pusha
sub
nop
aas
inc
xchg
xchg
cmp
pop
mov
xchg
dec
dec
pop
movsb
mov
add
lods
notb
dec
ja
insb
test
sub
test
push
sti
lret
imul
mov
mov
sbb
add
or
sub
add
jae
cs
add
dec
ret
xorl
divb
daa
xlat
imul
scas
push
rcll
sbb
and
adc
and
and
cmp
and
das
cmp
sub
cmp
mov
iret
or
imulb
icebp
stc
imul
mov
sahf
or
popl
ret
dec
cmpsb
mov
pushf
mov
ds
cmpsl
xor
shrb
mov
cmp
fbstp
iret
lods
imul
pop
sub
fidivrs
pop
pop
pop
jmp
mov
mov
jmp
testb
aam
dec
sub
dec
dec
into
daa
mov
std
and
pop
lock
sub
push
arpl
out
mov
xchg
test
daa
fidivrs
adc
out
or
pusha
call
cld
loopne
loopne
lds
ror
ja
add
insl
and
pop
test
jge
xor
scas
aaa
movsb
jbe
pop
mov
rcrb
mov
out
push
repnz
jbe
adc
inc
push
adc
mov
mov
pop
push
jg
inc
or
lret
mov
stos
inc
mov
mov
pusha
push
jnp
mov
es
mov
loopne
xor
nop
jnp
in
pop
testb
inc
sub
xchg
push
cwtl
lods
in
pop
lods
pop
insb
push
mov
cwtl
out
loope
inc
push
fwait
andl
and
xchg
fsts
nop
sbb
cmp
scas
movsl
push
mov
xchg
das
cmpsl
pop
insl
movl
test
pop
pop
mov
fstl
mov
fistps
add
or
aad
imul
lcall
mov
outsb
jmp
xchg
lret
mov
fsubrs
cmpsl
xchg
inc
add
xchg
negl
test
enter
add
lcall
cmpsb
adc
and
mov
lahf
les
sbb
int3
jl
clc
sub
icebp
pusha
sbb
jle
movsl
push
jo
aad
xor
cmpsb
imul
push
les
rolb
or
icebp
fdivs
sbb
movsb
mov
sub
clc
addr16
inc
jbe
shrl
push
es
insl
test
jg
pop
mov
test
stos
nop
sbb
mov
cmpsb
cltd
inc
push
repnz
and
sbb
mov
fsts
aas
jle
call
cmp
pop
pop
add
aad
push
push
out
mov
push
mov
pmaxsw
test
ret
test
xor
mov
xor
cmp
xchg
adc
push
rclb
sub
ret
pop
stos
lock
out
push
lcall
lea
std
inc
pop
push
popa
iret
add
inc
clc
pop
loop
popf
gs
push
sbb
cmp
xchg
lahf
jle
adc
xchg
xor
addr16
lret
or
mov
popa
movl
rorl
movsl
mov
orl
out
addr16
ret
lods
push
aam
ja
hlt
outsl
popf
popa
sub
inc
ss
adc
mov
or
imul
test
push
push
test
loopne
add
fidivl
aaa
lods
push
pop
push
mov
rcll
add
xor
lods
push
enter
xor
push
lahf
inc
and
push
ljmp
test
xor
pop
test
iret
pop
xchg
mov
ljmp
push
imul
in
divl
mov
push
sahf
scas
mov
mov
mov
adc
loope
pusha
cmp
mov
push
mov
loopne
in
sbb
inc
js
aad
inc
xchg
jl
rcll
ficomps
negl
xchg
test
jge
or
push
out
jl
mov
pop
dec
xorb
popl
add
xlat
pop
hlt
es
in
mov
enter
xlat
add
loopne
dec
push
mov
and
mov
mov
cs
test
daa
push
and
imul
jne
pop
mov
insb
stos
loope
dec
les
mov
cmp
mul
mov
stc
pop
call
fists
pushf
je
add
test
jge
stc
in
or
es
out
es
into
push
sbb
sbb
test
mov
push
ljmp
or
out
xor
pop
dec
hlt
dec
jae
cmp
mov
popf
xor
test
and
or
loop
in
and
aas
jge
mov
or
in
jne
cs
sub
adc
xchg
call
cmp
xor
imul
daa
mov
fxch
and
mov
scas
dec
mov
add
jge
pop
lahf
aas
add
cld
mov
cmpsl
ret
iret
push
pop
and
push
jmp
cld
add
sbb
add
pop
mov
das
cmp
popf
daa
jnp
adc
mov
lahf
pop
addr16
out
jmp
mov
in
mov
cmp
stos
fs
js
sti
icebp
int3
in
add
pop
cltd
icebp
lret
js
je
popa
pop
push
out
xlat
lods
jecxz
mov
mov
test
insl
in
leave
or
push
aam
sub
adc
dec
xor
add
pop
and
or
pop
stos
xor
add
ja
sub
sbb
hlt
data16
cmpsl
push
cmp
xchg
push
into
xchg
mov
cld
cmp
bound
inc
pop
enter
sbb
xchg
std
inc
pop
or
mov
mov
jnp
rcr
int
cmp
lcall
fnstsw
inc
iret
inc
mov
in
ret
fisttps
loop
subl
cmp
stos
bound
fsubrp
jbe
cmp
inc
loop
jmp
mov
stos
sbb
push
pop
add
dec
sarl
sbb
pop
mov
and
fwait
packssdw
sub
pop
lods
pop
cmp
stos
inc
cs
jp
repnz
in
les
loopne
rcrl
xchg
je
sub
mov
fsubl
popl
jg
das
jmp
push
divb
iret
add
fnstcw
push
out
loopne
add
and
test
rcl
iret
stos
jmp
xchg
dec
jecxz
lcall
mov
xorb
subb
adc
xchg
xor
jae
or
leave
xchg
cmc
test
aas
jmp
cmp
add
nop
cmp
fistl
inc
sbb
dec
adc
std
lock
out
adc
sub
xlat
inc
cmpsb
xchg
leave
pusha
ficoml
outsl
jnp
xchg
sub
ret
sub
fstpl
adc
pop
push
push
ror
push
loope
mov
xchg
mov
outsb
incb
push
add
fiadds
mov
or
xor
xchg
jecxz
outsl
dec
mov
and
cmp
inc
sbb
pop
push
mov
mov
or
loopnew
test
xchg
out
push
dec
lea
pusha
out
mov
test
lret
sub
xor
sbb
inc
ret
sub
jp
hlt
sbb
cwtl
and
pop
frstor
push
lret
mov
or
repnz
fildll
fs
roll
fsubl
das
js
mov
andb
xchg
add
adc
and
cmpsb
jp
or
shl
mov
adc
sbb
pop
imul
int
hlt
fmuls
addr16
jns
add
mov
xchg
cmpl
mov
enter
push
test
push
aas
jb
aaa
cmp
lea
call
xchg
stos
and
push
sub
dec
dec
cmp
fs
cld
and
mov
repz
bound
mov
out
jmp
pop
xchg
iret
pushf
inc
jne
mov
cmc
in
ja
popa
cs
scas
or
xchg
sar
pusha
adc
sub
pop
mov
push
pop
mov
cmp
push
cmp
not
inc
lcall
inc
jge
clc
xor
push
fadd
gs
daa
lret
mov
xor
jnp
scas
pop
pop
add
push
cmc
jns
test
sbbb
sahf
add
call
mov
repnz
fildll
mov
rol
out
mov
fistpl
repnz
fs
jl
sbb
leave
repz
cmp
pop
push
sub
pop
imul
lret
lds
jmp
lcall
dec
jo
fwait
push
pushf
lahf
enter
js
lret
js
inc
push
xor
arpl
lock
dec
mov
fwait
lahf
xchg
pop
sub
daa
je
push
je
ret
adc
dec
popa
dec
addr16
inc
mov
inc
icebp
imul
testb
outsb
pop
clc
adc
push
xchg
aad
and
pushf
dec
mov
neg
dec
xchg
cmp
int3
xchg
out
popf
std
adc
xchg
enter
mov
in
pop
sub
into
lahf
mov
sub
and
sbb
arpl
icebp
xchg
and
enter
lods
negl
jae
dec
xor
mov
cmp
cmp
out
mov
out
or
mov
aam
dec
add
dec
push
ss
xchg
pop
xchg
lret
lds
stos
and
ret
lahf
cmc
data16
outsb
jp
cwtl
mov
test
add
cmpsl
ds
sbb
xor
gs
test
fisubrl
aad
test
das
aas
or
cld
jo
imul
cmc
fs
xor
gs
mov
int3
push
test
push
sub
sub
push
scas
stc
addb
insb
ja
imul
pop
je
add
push
aaa
push
scas
mov
js
test
imul
xor
arpl
pop
addb
divb
mov
add
adc
les
lock
std
dec
xor
test
xchg
add
cmc
aas
jmp
shr
inc
imulb
add
mov
pop
jmp
sub
je
lahf
mov
jle
xchg
jns
fwait
ljmp
jmp
shrb
pop
sbb
sbb
sub
aad
push
add
xlat
cmc
mov
xor
pop
push
mov
movsl
dec
out
jno
dec
jle
cltd
mov
pop
dec
cmp
je
pop
and
outsb
and
push
nop
pop
push
add
mov
xlat
mov
fisubl
pop
ficoms
xlat
push
jmp
call
cmp
jp
pop
xchg
cmp
test
cmp
xchg
fcoms
aam
addr16
outsb
orl
dec
lock
call
cld
test
cmp
adc
adc
xor
outsb
adc
sarl
or
xor
inc
aas
stos
mov
fisubrs
loopne
shlb
or
xor
loopne
call
ja
in
clc
add
incl
and
mov
inc
xchg
jae
xor
ret
into
inc
or
sahf
cld
dec
adc
out
fildll
iret
mov
jp
jp
or
mov
jmp
pusha
and
loope
mov
pop
outsb
fmulp
shlb
fld
dec
scas
cmp
pop
cmp
mov
jne
fisttpll
icebp
cmp
jae
pop
sub
dec
dec
dec
popf
cltd
aam
pop
hlt
ljmp
push
fcomip
xor
dec
into
dec
pusha
insl
jmp
push
xchg
mov
mov
movsb
in
ljmp
les
xchg
cmpsb
rolb
mov
pusha
outsl
shr
xor
dec
scas
mov
cmp
adc
lret
pop
out
or
enter
out
xor
and
mov
sahf
testb
add
in
inc
fdivrs
mov
lret
mov
notl
jp
lea
cmp
cli
jo
clc
in
out
leave
push
jae
and
sub
dec
or
imul
je
iret
xor
mov
or
adc
mov
lods
movsb
data16
sbb
mov
and
stos
nop
jnp
mov
mov
cmp
rsqrtps
and
push
xor
addl
adc
inc
xchg
dec
lret
jecxz
pop
cmp
add
je
push
rol
insl
mov
icebp
add
dec
adc
sahf
jmp
frstor
arpl
movb
jl
test
or
lods
clc
add
out
xor
and
int3
dec
lahf
pop
lret
xchg
sbb
xchg
jp
push
cltd
ljmp
stos
insb
les
cld
push
rorb
sub
call
inc
xchg
pop
push
and
push
inc
mov
jmp
fwait
jg
push
daa
dec
imul
dec
push
xchg
outsb
cs
push
lods
xchg
add
sub
dec
lea
pop
ja
or
xchg
lcall
push
lahf
pop
repz
or
cmp
bound
pop
pushf
insl
xor
and
adc
fs
roll
lds
lods
ret
xor
in
imul
loop
add
test
cmp
dec
fisubrs
dec
mov
mov
add
unpcklps
adc
xlat
daa
or
fmull
repz
aad
cmp
xchg
into
movsl
orb
dec
insl
sbbb
loopne
add
es
adc
in
inc
or
push
and
mov
mov
rcrl
test
insb
xchg
aam
les
mov
cld
out
jb
pusha
int
cli
lods
outsb
push
jecxz
xchg
push
add
sub
pop
stc
hlt
andb
or
xor
dec
idivl
addr16
push
bound
fcompl
dec
enter
xlat
cmp
mov
sahf
and
xor
test
xor
xchg
gs
xchg
or
and
adc
ja
add
sti
inc
mov
movsl
push
and
add
lret
sub
sub
push
xor
mov
fmull
add
insb
scas
in
jnp
mov
xor
pop
jae
std
out
lahf
xor
in
jge
xor
inc
ljmp
sbb
cmc
test
xchg
xchg
ret
rcr
imul
push
clc
add
frstor
cltd
sub
cmp
loop
sbb
daa
pushf
movsl
jl
js
jo
dec
mov
shlb
dec
aam
enter
and
adc
mov
pop
adc
clc
mov
add
mov
mov
ljmp
jp
mov
sahf
sahf
xchg
repz
xor
or
icebp
in
test
rcll
xchg
lcall
or
int3
xor
sub
test
and
data16
incl
add
test
dec
out
sbb
enter
das
and
dec
mov
mov
jb
xor
or
cmp
jge
mov
lods
and
push
inc
and
inc
xchg
sbb
popl
movsl
sub
pop
and
mov
xchg
dec
test
xchg
mov
push
ficompl
fcoms
leave
out
or
and
rcrb
fcoms
dec
add
mov
mov
dec
lahf
adc
lret
stc
arpl
mov
pop
pop
movsb
xchg
fldt
or
and
mov
adc
rorl
pop
dec
mov
sub
fdivp
mov
ja
mov
pushf
or
cmp
outsl
movb
lods
mov
stc
sbb
jae
sub
mov
ret
sub
push
cli
movsb
mov
xchg
fs
cmpb
int
xchg
dec
mov
jb
andb
add
mov
adcb
add
pop
fadd
pop
das
outsl
push
jmp
pop
pop
leave
xor
shll
gs
movsbl
lods
dec
cmp
cmp
jecxz
addb
push
xor
enter
dec
mov
pop
test
ljmp
int3
lods
sub
push
les
out
sti
mov
cmpsb
mov
ds
jbe
mov
lret
mov
loopne
icebp
mov
out
and
sbb
mov
xchg
adc
jbe
jb
test
mov
pop
scas
and
pop
mov
fidivrl
inc
loope
or
jb
insl
mov
movsl
inc
je
mov
ret
shl
dec
xchg
adcb
adc
imul
mov
cmp
repnz
add
nop
mov
sub
mov
or
add
jmp
jmp
xor
fcmovnu
push
mov
aam
lock
das
dec
dec
lahf
jbe
lea
ss
outsb
cmp
sbb
aad
fdivrl
stc
rorb
jp
sbb
pop
xor
xor
adc
daa
lret
mov
scas
stc
pop
shl
cmpb
ficoml
mov
iret
xor
xchg
mov
adc
orb
or
orl
scas
sub
push
loop
aam
dec
arpl
jbe
push
fs
fcmovbe
inc
pop
dec
aam
dec
dec
insl
xlat
push
mov
jbe
sbb
test
in
scas
pop
imul
fadd
lcall
int3
jno
or
lods
inc
jl
mov
mov
push
lea
or
mov
rcrb
or
mov
pop
popf
shll
mov
rolb
test
dec
jle
inc
xchg
xchg
movsl
jecxz
lcall
cltd
fs
and
lcall
js
and
scas
xor
daa
cmp
divps
xor
test
out
ds
push
lods
xlat
leave
add
mov
or
or
ja
int
movl
ss
lock
add
fnstsw
jno
and
jge
pushf
xor
in
mov
test
add
rcl
iret
add
inc
dec
xchg
into
xchg
lret
sbb
or
lea
outsb
repnz
cmpsb
inc
push
cwtl
add
testl
dec
push
lods
jnp
cwtl
mov
gs
imul
std
xchg
pop
and
ljmp
fwait
xchg
xchg
arpl
jo
adc
mov
adc
enter
loope
nop
cmp
cmpsb
jb
out
mov
mov
insb
mov
cmp
cld
push
adc
addr16
pop
sbb
fucomip
outsl
xchg
pop
inc
aaa
in
ror
in
in
pop
pop
sbb
sbb
cmp
sti
loope
pop
xor
mov
jno
imul
push
push
js
cmp
jb
incb
sub
push
mov
fadds
inc
test
lods
stos
cmp
inc
pop
cwtl
mov
movsl
cmpsl
enter
pcmpgtb
test
sub
inc
cmp
pop
dec
icebp
fcmovne
and
sti
adc
xchg
repz
mov
mov
cmc
cmp
add
jg
lods
jge
cmpb
sub
les
cmpsl
and
xchg
pop
and
icebp
jg
es
jle
add
sti
mov
mov
sarl
adc
fildll
inc
adc
or
hlt
xchg
idiv
sub
mov
add
test
jg
dec
mov
fadds
push
leave
in
mov
mov
adc
add
es
cld
fdivs
shl
cmc
cwtl
push
rorl
out
and
mov
pop
jns
lods
imul
sub
enter
xchg
xor
adc
cmp
into
aad
imul
test
cmp
fneni(8087
mov
dec
bnd
cltd
stos
stc
add
or
and
mov
mov
inc
pop
gs
jno
dec
jg
aaa
mov
mov
xchg
push
movsl
inc
mov
loopne
rcrl
jb
ss
mov
cld
pusha
or
ret
push
cmp
dec
lock
pop
jge
hlt
sti
sub
insl
xor
enter
dec
cltd
mov
xchg
iret
scas
pop
lret
or
pop
stc
enter
pusha
push
and
rcrb
ret
ret
dec
cltd
lea
repnz
sub
movsl
pop
inc
bound
pusha
cmpsb
adc
jne
adc
les
xlat
cwtl
imul
sbb
movsb
jle
inc
stos
cmp
lds
lock
push
lods
mov
insb
sub
or
fcomps
cmpsb
xor
add
xor
mov
xor
adc
aad
int
xchg
out
jp
aaa
divl
jge
push
adc
inc
inc
inc
mov
push
shll
pop
cli
std
aad
out
lret
in
lret
mov
insb
sub
test
std
cmp
dec
add
xlat
and
es
adc
mov
lods
jns
aam
int3
lret
add
fstpl
insl
nop
pop
jne
cmp
xor
cmp
or
sarb
sub
lahf
inc
lahf
outsl
jbe
jne
pop
xor
xchg
mov
loopne
mov
and
jecxz
sahf
mov
pusha
pop
mov
pushf
pusha
cwtl
jle
add
push
pop
adc
lcall
jne
mov
dec
add
popa
mov
or
fdiv
fcomps
pusha
xchg
push
mov
loop
sub
in
and
jle
loope
jg
aam
jp
arpl
aaa
pop
sbb
mov
adc
popa
outsb
divl
pop
movsl
movsl
inc
shl
or
out
and
sub
stos
pop
xchg
or
dec
jno
shr
xchg
or
inc
sbb
aam
inc
stc
clc
dec
test
xchg
pushl
into
sub
ret
outsb
inc
add
fdivrl
in
inc
and
add
outsb
adc
push
add
outsl
mov
jne
ret
sahf
out
shlb
push
xchg
sub
push
aam
adc
outsb
fisubrs
push
or
xchg
decb
dec
lcall
arpl
movsl
add
adc
inc
aas
int3
test
stc
mov
jb
pop
test
scas
mov
xor
lods
insb
cmp
jge
cmp
jl
sub
jecxz
cmpsb
xchg
loope
insb
lods
call
ret
push
dec
pop
mov
cmp
ljmp
push
fisttpl
ret
pushf
dec
sub
sub
sbb
push
mov
mov
fdivp
movsl
push
mov
fs
icebp
je
pop
cmp
popf
pop
mov
dec
les
or
leave
cs
push
std
xchg
shll
js
add
jp
cmp
lcall
sub
ss
popf
push
dec
dec
jg
mov
or
jo
mov
push
ljmp
sub
sub
mov
out
loope
pop
sub
daa
call
jl
and
adc
mov
gs
mov
roll
xchg
add
push
imul
inc
add
test
les
fs
mov
mov
push
aad
into
mov
inc
mov
pop
cs
pop
pop
push
sbb
push
leave
movsl
lea
cltd
jp
push
xchg
mulb
sub
mov
xchg
std
test
xchg
jnp
popl
sub
mov
dec
cs
jg
jle
jecxz
pusha
adc
mov
movsl
adc
mov
adc
popf
cmp
call
inc
sbb
mov
jl
aam
pop
fwait
es
ret
adc
inc
mov
mov
stc
jns
lcall
pusha
cld
xlat
inc
dec
xor
ror
rorl
test
nop
shrl
push
or
push
add
leave
popa
xchg
icebp
sbb
outsb
pop
pop
pop
inc
std
jmp
cmpsb
and
call
daa
mov
xchg
inc
xorb
aas
jo,pn
fs
add
mov
int
push
xchg
rorl
lret
pop
pop
push
test
mov
sahf
ret
or
movsl
sub
dec
stos
das
aaa
rolb
imul
arpl
mov
sbb
and
movd
int3
cltd
outsb
push
pop
les
jge
hlt
lret
push
negb
push
xorl
subb
test
jns
aaa
mov
aad
std
jmp
filds
scas
or
out
je
xor
xchg
fwait
xchg
aad
xchg
addr16
repnz
jmp
andl
lcall
push
cmc
mov
in
imulb
inc
jp
je
hlt
cmp
dec
adc
decl
xor
loopne
mov
mov
hlt
push
adc
mov
cmc
mov
adc
fnstsw
sub
push
mov
mov
ljmp
mov
fcoml
jne
jmp
int
iret
call
jne
dec
xlat
cmp
call
nop
or
or
sahf
push
push
pop
pop
cltd
push
dec
fsub
or
mov
sub
shrb
test
decl
and
lods
inc
push
jmp
pusha
aas
cwtl
pusha
ret
jne
jnp
sbb
test
adc
pop
popf
jp
movzwl
adc
notl
jno
dec
ja
inc
xor
outsl
push
movsb
pop
push
or
lds
push
sub
stc
mov
lods
inc
loope
rcrl
pop
into
lcall
mov
pushf
andb
mov
sti
inc
jnp
aas
nop
in
les
xchg
xor
push
dec
lahf
sbb
cmp
add
cmp
inc
mov
adc
mov
iret
cld
jmp
fildll
mov
lea
outsl
cs
mov
adc
mov
mov
fwait
or
lock
xlat
dec
fwait
call
adc
add
int3
dec
je
repnz
xor
mov
xchg
add
test
movsb
bound
loop
mov
add
push
jb
outsl
imul
inc
add
lods
adc
and
enter
sub
pop
test
adc
rcll
stos
aas
and
mov
icebp
sub
xor
ds
xor
inc
mov
daa
or
mov
ret
sarl
fistpll
pop
or
cmpsl
inc
iret
mov
arpl
dec
fdivrp
sbb
cmp
das
stos
cmp
or
int3
aaa
jno
inc
shr
push
sbb
or
mov
inc
inc
inc
repz
pop
aam
sub
xor
mov
leave
xrelease
push
test
sbb
stos
jns
enter
lahf
dec
inc
jns
lods
fisubrl
stos
je
aas
iret
aam
xor
lock
adc
inc
jnp
sbb
fstps
or
daa
ret
cmp
add
into
sahf
pop
inc
mov
lods
in
mov
or
leave
test
stc
imul
jl
cmpsb
out
aaa
mov
sub
xchg
adc
push
mov
adc
cmc
xchg
mov
call
enter
adc
jo
jecxz
mov
cli
jne
mov
addb
xchg
cmp
sub
shlb
fsubs
mov
addr16
ljmp
andl
add
clc
ret
in
push
jnp
or
mov
in
pop
and
ljmp
cs
repz
idiv
adc
sbb
add
jbe
cmp
dec
cmpsl
dec
sub
lods
jg
cmp
andl
add
cmpl
mov
push
jmp
mov
dec
ret
mov
test
xchg
pop
lods
loopne
adc
push
sub
inc
loope
xor
pop
or
pop
popa
adc
repz
int3
inc
test
inc
xrelease
lret
stos
orl
push
pusha
scas
js
jmp
int3
mov
lock
xchg
fldcw
adc
imull
xchg
mov
sub
cld
scas
mov
inc
sub
pop
out
inc
xchg
push
repnz
fwait
es
les
dec
add
out
aas
jns
jl
sbb
mov
sub
cmp
jmp
hlt
sub
pop
ja
std
sbb
popf
pop
int
daa
xchg
sbb
lea
int3
xchg
ja
lret
rol
out
mov
std
mov
pop
sub
or
sub
mov
dec
out
add
xor
daa
idivb
sbbb
popf
imul
jno
xchg
cwtl
adc
push
push
bound
xchg
gs
daa
mov
fcomps
pop
add
mov
jp
and
add
mov
roll
mov
sbb
jne
jge
mov
mov
test
sar
inc
sub
in
lods
in
inc
popf
jnp
mov
push
jecxz
sbb
ficoms
mov
addr16
into
lea
push
jmp
jecxz
mov
jbe
cmp
mov
jns
sbbl
shlb
xchg
ret
test
mov
xor
ss
dec
push
xchg
ss
and
dec
mov
stos
test
sarl
xchg
sub
sbb
nop
mov
xor
mov
insb
loope
xor
setl
loopne
mov
mov
and
inc
adc
jns
imul
jmp
inc
outsl
lcall
cld
jo
adc
jmp
callw
dec
f2xm1
and
jle
push
sbb
pop
mov
xlat
adc
or
jmp
rcr
dec
enter
mov
out
sub
xchg
sbb
enter
push
sbb
insb
lahf
es
push
and
xchg
sti
lods
pop
arpl
cmpsl
mov
xchg
mov
enter
pop
or
nop
cmp
xorl
stos
xchg
test
mov
cwtl
idivb
dec
and
sti
push
sbb
push
jge
jg
je
adc
mov
push
mov
aam
fisubs
xchg
sbb
jbe
push
call
sbb
xor
or
cmp
inc
in
push
or
cmpsl
jne
mov
pop
dec
out
outsb
outsb
xchg
lds
call
mov
xchg
jns
loop
test
into
fs
test
hlt
cmp
movsb
add
pop
hlt
mov
outsb
mov
add
xchg
in
mov
jnp
enter
pop
idivl
lret
push
sub
xor
push
popa
cmpsb
jecxz
sti
and
or
or
and
ljmp
int3
insb
mov
fsubl
rcll
mov
adc
inc
pushf
dec
arpl
call
add
popa
xchg
jbe
cmp
mov
imul
imul
pop
xchg
adc
fs
xchg
cmp
push
pop
adc
sbb
addr16
sub
add
hlt
daa
je
adc
imul
jecxz
xchg
popa
cltd
mov
imul
daa
pop
sbb
push
push
stos
out
jp
ljmp
push
add
aas
mov
jmp
cmp
or
popf
jae
pop
jecxz
dec
sbb
and
js
rolb
push
sub
mov
fucomi
xor
or
cwtl
mov
or
or
in
stos
jmp
ss
push
pop
loopne
mov
push
jae
pop
std
sub
inc
xchg
ja
test
call
in
je
xor
mov
jl
cld
mov
int
xchg
and
push
aad
sbb
mov
fildll
sub
mov
inc
inc
xor
dec
sub
stos
mov
enter
idivl
inc
and
mov
js
xorl
icebp
call
xchg
mov
jge
mov
sbb
inc
mov
xchg
loopne
ret
icebp
push
mov
push
stc
leave
push
mov
daa
lods
mov
or
hlt
icebp
stos
stos
adc
sub
fmul
xor
or
pop
fdivrl
pop
ss
xchg
jge
sub
push
dec
jne
mov
and
mov
mov
xchg
push
or
cmp
xlat
adcl
and
dec
mov
divl
iret
popa
xor
test
xchg
gs
out
test
inc
daa
pop
fcmovnbe
mov
fadd
sbb
xor
lods
negl
or
addr16
xchg
repz
lret
sub
jmp
xchg
dec
lods
fnstsw
adc
test
lods
ds
rolb
maskmovq
testl
xchg
jae
ret
sbb
mov
push
icebp
stc
aad
mov
cmp
sarb
mov
cwtl
mulb
stos
push
out
mov
dec
out
pusha
sti
sbb
pop
push
mov
movsb
dec
jmp
int
cltd
push
in
bound
pop
pop
mov
rol
in
mov
add
xchg
shrl
fildll
mul
adc
or
cs
jl
xchg
incl
movsl
daa
push
leave
adc
inc
push
scas
cmp
fneni(8087
adc
push
js
jbe
outsl
mov
scas
in
sbb
pop
enter
scas
ljmp
lods
cmp
out
into
bound
fdivrl
je
call
movsb
pushf
adc
cmp
jle
push
mov
int3
rorb
out
mov
mov
or
or
mov
iret
in
fistpl
xor
mov
xor
stos
test
int3
out
dec
mov
scas
sub
cmpsl
push
xor
mov
adc
push
lcall
scas
jmp
fldenv
in
sbb
fsts
das
nop
mov
jbe
nop
adc
pop
ficoms
fnstenv
shr
mov
xor
jo
lds
into
sar
cmp
push
mov
insb
notb
push
dec
sbb
jmp
push
idivl
cwtl
adc
sbb
lret
repnz
pop
push
add
sbb
push
stos
xor
pop
push
test
jg
xchg
pop
cmp
dec
adc
mov
in
fsubrs
inc
scas
subl
inc
stos
out
fnstenv
mov
sub
lds
mov
sbb
mov
xchg
out
mov
insb
xchg
out
push
out
sub
ds
sub
inc
add
shl
mov
xchg
shlb
stos
les
mov
inc
jb
icebp
xor
pop
sti
int
sbb
sbb
out
mov
pop
cmpsb
das
cmp
daa
xchg
mov
call
sbb
shrb
lods
xchg
push
mov
sbb
sub
sub
in
or
xchg
cli
popf
push
mov
dec
cmpsb
test
cmp
adc
in
jecxz
in
and
cmp
adc
outsb
in
lret
mov
jne
sbb
push
adc
ret
imul
aad
jns
push
add
out
dec
fldl
push
push
imul
jmp
cmp
push
shll
xor
mov
out
imul
pop
pusha
inc
hlt
push
fstpl
les
mov
or
jae
mov
cmpsb
inc
inc
stos
or
mov
es
jno
inc
lods
mov
shlb
loop
pop
push
sbb
inc
dec
push
mov
cmp
ss
outsl
pop
or
xor
icebp
sub
pop
mov
fnstsw
xor
ret
pop
rorl
inc
add
xor
cli
sbb
push
movsl
adc
lock
mov
rcrb
or
pusha
or
xor
dec
mov
mov
cltd
mov
xor
fcomps
cmc
out
lret
add
dec
fistpll
push
and
mov
pushf
je
rorl
dec
arpl
sti
inc
pop
loope
pop
lock
xor
sbb
inc
jp
mov
ja
add
push
enter
lock
std
inc
ss
les
cmp
sub
xchg
call
popa
cmp
fistps
fs
fmul
xor
inc
leave
ja
mov
movsb
sub
call
stos
lret
pop
lret
mov
dec
add
cmp
jmp
clc
pop
add
pusha
out
imul
syscall
mov
roll
mov
lcall
sub
ja
mov
scas
jle
loop
into
jmp
dec
ljmp
sbb
stc
repnz
adc
pop
push
pop
and
int
int3
mov
in
sahf
xchg
xor
mov
scas
dec
test
lcall
adc
mov
arpl
in
aad
xor
in
sub
sbb
insl
aam
es
mov
scas
sub
aam
cmc
and
mov
lods
lcall
and
sti
and
inc
cmp
mov
sahf
add
out
or
cld
sub
std
cmp
sub
lods
dec
adc
xchg
xchg
jnp
test
adc
not
movsb
aad
cmpsl
mov
shrl
es
clc
push
mov
ljmp
insb
shlb
mov
mov
pop
movsb
icebp
gs
xor
and
push
adc
add
mov
inc
lods
push
jg
aad
addb
mov
arpl
add
scas
dec
xor
or
dec
mov
dec
out
xchg
pop
xchg
lock
inc
cld
xor
add
mov
jno
mov
mov
jne
add
and
enter
xor
scas
mov
mov
push
addb
or
sbb
mov
sub
aas
push
lock
icebp
push
or
test
aas
mov
stos
div
mov
pusha
insb
push
jnp
sbb
mov
and
mov
add
ja
test
loope
aam
mov
inc
ss
stos
cld
or
mov
ds
in
jmp
pop
inc
sbb
sub
jno
pop
and
das
mov
adc
push
xchg
hlt
arpl
mov
mov
int
or
imul
outsb
adc
sbb
fstpt
jb
xchg
mov
add
dec
ret
jp
jmp
ret
and
xchg
loopne
loopne
pop
mov
int3
xchg
push
rcrb
rcr
mov
ja
rcrl
add
fdivs
jae
fsts
mov
xchg
xor
mov
cmpsl
inc
and
pop
xor
and
add
decb
into
out
mov
mov
pushf
pusha
cwtl
iret
sbb
fisttps
out
jns
scas
adc
std
adcl
fmuls
inc
pop
mov
mov
imul
fistpll
pusha
scas
out
jge
cmp
sbb
add
call
xor
jae
cmp
test
ss
and
mov
in
sbb
and
xchg
or
sub
xchg
inc
js
lods
jg
push
mov
sbb
or
xchg
aas
test
jmp
mov
mov
mov
xor
mov
inc
adc
xchg
fwait
aaa
cld
int
mov
ficoms
cmp
lds
push
inc
jb
add
push
std
push
das
test
fimull
es
sub
out
cmpsl
popf
pop
int3
aaa
mov
cltd
fs
xchg
fs
mov
cld
jecxz
or
push
pop
ja
push
fidivl
cmp
int
cmc
mov
mov
addr16
fisubrs
dec
dec
cmpsb
lds
ds
mov
pop
jb
cmpsl
jecxz
jecxz
push
adc
mov
push
mov
cmc
clc
mov
dec
or
cwtl
test
pop
dec
sbb
aam
in
movsb
or
sbbb
sahf
andl
mov
lock
add
and
jb
arpl
inc
out
jbe
and
jmp
loope
or
shlb
mov
js
cs
es
cwtl
pop
imul
push
inc
pushf
cmpsb
cltd
mov
or
repnz
adc
aaa
inc
sbb
mov
and
stos
stos
push
in
pop
or
sbb
inc
ljmp
dec
lret
sub
pop
fdivrl
test
sbb
mov
push
push
dec
dec
inc
pop
arpl
in
iret
in
jnp
mov
xchg
cmp
and
push
add
cmp
pop
push
cwtl
mov
dec
cmpsb
mov
imul
pusha
cmp
mov
rcr
movsb
xchg
sbb
outsb
stos
jno
dec
dec
cwtl
jae
pop
repz
sar
pushf
add
and
mov
xchg
aas
fcmovb
xchg
pop
adc
jg
pop
add
cwtl
sub
ret
sub
mov
dec
mov
lock
adc
adcl
mov
dec
repnz
lock
jg
xlat
cmp
jl
push
sub
lahf
test
jg
xor
jbe
insb
pop
add
movsb
push
loopne
xor
lahf
dec
or
sbb
push
or
xor
mov
xchg
and
ljmp
les
test
popa
cwtl
enter
fiaddl
push
dec
sub
add
lcall
xor
enter
rclb
lcall
mov
mov
sub
xchg
rcrb
mov
sti
pop
mov
lret
sbb
push
mov
inc
test
shl
sub
push
xor
jle
mov
mov
imul
into
and
add
mov
jae
shl
fcomi
ret
das
mov
pop
mov
testb
enter
push
inc
sbb
std
pop
int
ljmp
imul
or
sub
push
xchg
in
divb
vmovshdup
sub
and
aam
movsl
xor
ljmp
add
add
imul
lds
in
shrb
ss
and
push
push
imulb
enter
ja
push
push
xchg
sti
aad
adc
orl
repnz
in
pop
push
mov
xor
repz
xchg
scas
pop
in
sub
or
imul
sub
mov
imul
shlb
das
xor
jbe
pushf
scas
dec
fbstp
xor
fildl
fnstenv
std
and
xchg
xchg
shlb
push
or
jne
mov
shlb
ds
imul
cltd
shll
xlat
jns
inc
adc
mov
aad
insb
pop
jb
sub
into
mov
lret
hlt
loop
xchg
lock
cmc
mov
mov
filds
push
sarb
in
push
add
roll
dec
into
cmp
mov
mov
movsb
stos
and
idiv
mov
mov
fimull
pop
rcll
or
push
loope
push
xchg
mov
cli
jno
arpl
and
sub
adc
and
movsb
filds
dec
mov
xchg
and
movsl
fstpt
test
test
enter
mov
aas
sbb
dec
shlb
test
test
call
insb
jo
or
aad
or
xor
subl
call
inc
call
scas
lock
or
adc
mov
pop
lret
push
pop
pop
in
pop
cs
dec
jno
insb
fdiv
inc
sahf
xchg
test
inc
pop
test
lahf
jae
push
cmpsb
test
addb
imul
out
sub
sub
stos
aad
into
pop
mov
pop
rorb
inc
pushf
mov
jmp
aam
inc
into
xchg
sub
xchg
aaa
das
inc
xchg
cmp
mov
in
jg
cmpsl
out
andl
pop
fs
mulb
push
jl
in
aam
pop
out
adc
mov
mov
fidivs
out
lods
adc
jb
mov
mov
xlat
cs
stos
sub
sub
lock
push
sbb
xor
cs
jno
jmp
aaa
dec
jl
adc
out
inc
in
fxch
lods
popl
test
lods
inc
or
cld
shl
inc
in
dec
xchg
loop
sub
aaa
add
test
in
popf
sti
xchg
xor
lahf
add
mov
xchg
xchg
or
sbb
jg
es
cmp
sub
jns
jnp
cmp
mov
jp
leave
insl
jns
imul
or
sub
repz
outsl
mov
faddl
inc
ret
mov
insl
movsb
cmp
mov
popa
mov
push
push
pop
cmp
xchg
lea
dec
mov
js
daa
dec
xchg
and
outsb
add
inc
or
xlat
mov
jno
inc
out
cli
and
pop
or
push
loopne
sub
lcall
and
cmp
push
xchg
cmpl
das
add
outsl
inc
cmpb
mov
and
xor
mov
mov
sub
lret
pushf
or
mov
data16
pop
sub
adc
mov
dec
jns
pop
aad
push
inc
sbb
test
ret
cmp
sub
movsb
sub
sahf
jbe
mov
xchg
popf
ret
push
lods
insl
icebp
lahf
cmp
ja,pn
xor
sub
cmpsl
dec
push
sahf
mov
adc
xchg
test
outsb
sub
lds
jp
out
lea
push
pop
push
xor
xor
push
loopne
mov
mov
dec
adc
jae
xor
inc
sub
jl
push
pop
and
sbb
jo
and
cmp
push
aaa
add
adc
or
xchg
xchg
dec
dec
decb
fs
and
daa
test
inc
orb
cmp
aam
xchg
arpl
inc
imul
mov
or
inc
test
ljmp
mov
pop
push
repz
scas
out
rcrb
test
outsb
mov
stc
jo
dec
xor
dec
dec
push
popa
out
dec
addb
mov
xor
aad
or
movsb
sahf
push
push
icebp
xchg
scas
pop
mov
in
repnz
iret
sbb
mov
cwtl
pushf
inc
mov
mov
cli
les
or
push
cmc
inc
sub
push
sub
mov
lahf
push
bound
sub
jae
sub
dec
add
addr16
clc
aam
push
movl
jne
scas
icebp
stc
pop
hlt
cmp
xchg
pop
jbe
pop
adc
lcall
ret
xchg
rcrl
ljmp
jmp
sti
repnz
ret
call
or
cwtl
mov
fbld
xchg
fxch
sbb
rorb
lahf
not
cmpsb
shrl
rclb
data16
pop
int3
arpl
pop
inc
fldl
jp
sbb
cmp
movsl
into
mov
sbb
add
xor
jl
mov
fsubs
jl
loopne
fstpl
test
sbb
rcl
xchg
xchg
int3
mov
mov
xchg
jns
jae
lea
push
dec
jmp
jne
fldenv
sbb
aas
pop
mov
aaa
inc
daa
and
test
scas
jae
mov
sti
or
xor
fwait
sar
jns
or
test
sar
prefetch
cwtl
in
test
jmp
inc
mov
pop
ss
dec
jmp
lea
adc
stos
aam
jle
pop
jecxz
movsb
daa
lock
pop
or
add
jo
push
pop
enter
sub
fisubl
push
xchg
mov
out
inc
aaa
into
inc
roll
push
cwtl
push
int3
cmp
dec
stos
lea
and
adc
es
in
sub
xor
xchg
mov
lret
sub
imul
sub
es
xor
pop
daa
std
test
push
and
inc
xchg
movsl
dec
mov
movsb
pop
dec
bound
stos
imul
add
enter
sbb
sti
clc
cmpsl
incb
insl
call
or
jnp
mov
or
fstps
fstps
jbe
mov
pop
mov
pop
lret
mov
mov
xchg
sbb
test
mov
and
clc
movb
mov
shlb
jecxz
ds
jp
inc
cmpsb
lcall
lods
push
mov
into
xor
lret
in
ss
mov
fisttps
jmp
aam
notl
mov
idiv
mov
rol
pushf
jmp
daa
rclb
adcl
jb
outsl
add
js
lods
ss
les
cmp
mov
addr16
cmc
and
sar
das
in
scas
xchg
aas
int3
jecxz
jb,pn
and
push
push
test
jecxz
in
mov
mull
nop
movsb
push
push
and
xor
sub
lods
leave
jle
xchg
mov
cmp
in
shrl
mov
or
pop
cmp
sub
stc
adc
cld
add
ss
inc
aam
fcmove
test
pusha
adc
cmp
call
stc
mov
pop
jmp
mov
mov
jle
addl
push
stc
out
mov
mov
cmpsb
mov
test
adc
jecxz
mov
sysret
hlt
insb
out
add
ret
jmp
loope
movsl
fwait
jnp
push
dec
enter
inc
int3
fistpl
sbb
pop
cli
je
mov
mov
mov
mov
testl
inc
mov
clc
iret
adcb
mov
ds
repnz
xchg
sbb
dec
add
scas
adc
adc
mov
dec
jne
jge
fistpl
scas
fcmovnu
daa
ficoml
rorl
dec
xlat
lds
divl
aad
std
cmpl
jmp
call
stc
xor
pop
in
ja
ja
inc
leave
out
add
int3
insl
sbb
cmpsb
mov
jp
test
pop
aad
outsl
int
pop
fdivp
aam
or
pop
push
clc
xor
xchg
xor
mov
mov
in
cmp
mov
push
cmp
cmc
std
mov
gs
out
mov
sbb
ret
add
test
es
mov
pop
mov
into
mov
cwtl
outsl
and
cld
sub
adc
in
cmp
sub
movsb
xchg
cmpsb
hlt
sbb
adc
out
push
mov
mov
xor
jo
js
add
add
sbb
dec
xchg
mov
add
mov
stc
jae
sbb
leave
imull
mov
imul
pop
mov
arpl
loop
in
imul
addb
cmpsl
pop
movsl
fwait
push
iret
cld
imul
xor
xlat
pushl
sarl
xor
add
scas
sarb
rclb
mov
aam
dec
dec
or
mov
sub
aad
lahf
sub
xchg
sub
push
pop
loope
stos
scas
pop
incb
sbb
aaa
bound
mov
out
xchg
test
pop
aas
popf
xchg
lret
xor
xchg
mov
xchg
mov
push
inc
pop
pop
in
add
mov
sub
mov
enter
dec
push
adc
call
dec
dec
sti
jae
rcrb
xlat
loope
dec
test
xchg
imul
xor
mov
adc
pop
leave
pop
fsubr
icebp
mov
fidivrl
mov
adc
dec
xor
jb
add
cs
popa
pusha
stos
outsl
jno
mov
cmp
mov
sub
imul
inc
mov
mov
push
rcrl
jg
clc
mov
std
sbb
mov
pop
movsb
stos
xchg
mov
in
shrl
sub
push
out
cmp
jecxz
stos
xchg
jmp
mov
movsl
es
mov
pop
and
dec
in
mov
mov
mov
mov
in
ficoms
pop
pop
jl
loop
roll
mov
loop
mov
sub
mov
lds
sahf
dec
mov
cmpsb
cmp
out
mulb
cs
adc
dec
cmpb
mov
inc
test
xor
dec
mov
or
pusha
push
mov
pop
jbe
push
cmp
out
mov
mov
xchg
push
repz
and
adc
imul
mov
loop
fs
fisttpl
add
xchg
notb
out
outsl
jecxz
outsb
adc
cmp
xor
jno
sub
sub
mov
push
std
lock
mov
or
bound
pop
add
or
sub
rorb
inc
shlb
add
ret
rcl
dec
push
lret
cs
lret
fidivrl
add
fs
push
add
rcl
scas
int
sbb
lret
fsubrl
xor
cmp
inc
les
js
pop
pop
lret
mov
lods
pop
rcll
inc
inc
in
data16
sbb
sub
push
dec
and
and
ror
ds
mov
jo
sar
jo
aas
dec
ss
mov
cmp
data16
mov
dec
stc
add
hlt
stos
pop
mov
iret
push
inc
scas
sbb
sub
icebp
push
or
xor
dec
ljmp
dec
pop
inc
jecxz
xlat
dec
dec
pop
mov
pop
or
xor
mov
mov
cmp
scas
add
mov
pop
cmpsb
pop
adc
roll
mov
mov
add
stc
push
dec
insb
push
pushf
and
loope
imul
mov
pop
popa
xor
push
jbe
dec
lret
fildl
divb
mov
popa
pop
ss
pop
pop
les
xchg
leave
mov
xor
cmp
in
sbb
stos
das
fdivr
rorl
in
pop
test
or
nop
push
leave
test
jbe
sbb
push
lds
xlat
aad
out
pop
in
gs
int
cmp
pop
add
inc
outsl
xor
push
and
mov
ret
sbb
aam
iret
loope
aam
jns
jno
leave
sbb
pop
fdiv
mov
xchg
cmpsb
imul
shl
jae
scas
jbe
pop
inc
outsl
mov
lret
fbstp
pop
mov
mov
jb
sub
out
xor
adc
push
pop
bound
out
sub
push
xchg
add
aas
pop
out
cmp
movsb
stos
jp
push
jne
shlb
cltd
cmp
or
cltd
fildll
sbb
or
in
or
mov
lock
mov
pop
mov
sub
aas
movsb
test
repz
xor
sarl
dec
push
push
sarb
testl
lods
xor
xchg
ja
jecxz
push
ja
adc
sbb
mov
fwait
sbb
push
stc
shll
popf
lcall
outsl
pop
mov
mov
jb
mov
aam
aaa
sbb
mov
lea
aam
push
xchg
sbb
push
cs
cmp
dec
clc
inc
cltd
stos
sbb
out
sbb
aad
jns
aaa
xchg
push
divb
call
out
xchg
popa
dec
in
sub
inc
sbb
pop
dec
nop
and
out
in
and
jl
inc
mov
inc
subl
mov
aaa
cltd
mov
inc
xchg
cmp
aam
mov
rcrl
repz
cmp
push
lret
cmpl
in
push
cmp
push
popf
out
xor
fstps
jg
ljmp
sub
pop
push
ret
xchg
leave
lahf
clc
in
push
push
js
xchg
dec
xor
pushw
jae
icebp
cli
xchg
shll
cli
stc
addr16
fs
out
and
cwtl
pop
inc
std
or
outsl
out
rorl
push
js
mov
sbb
cmp
les
sarl
daa
mov
and
xor
test
add
addr16
outsl
into
mov
push
jb
cmc
push
push
mov
mov
and
enter
fcmovb
btr
cmpsb
inc
pop
subb
rcll
stos
xor
mov
adc
mov
pop
xchg
add
jne
test
into
shlb
cmp
arpl
xor
dec
push
data16
sbb
fidivs
sub
andb
clc
or
mov
and
push
fadd
cmp
jo
mov
dec
sbbb
loope
xchg
xchg
sub
adc
test
jb
call
cmp
cmp
sbb
int3
inc
xchg
mov
inc
adc
xlat
lods
push
jp
test
push
clc
lods
sbb
jns
lcall
lea
shlb
jmp
sbb
outsl
push
inc
fldl
mov
or
push
pop
gs
jecxz
das
inc
rorl
jne
push
hlt
xchg
xchg
ret
gs
ja
fldl
cmp
add
andb
and
arpl
adc
mov
lds
or
daa
inc
stos
xor
xchg
lret
or
jno
push
cmp
jmp
mov
outsb
dec
aad
test
ret
pusha
mov
mov
pop
stc
mov
test
int3
xor
bound
pusha
push
mov
xlat
mov
hlt
aas
inc
test
lds
inc
fstps
ss
sbb
bound
gs
cmpsb
or
ljmp
cltd
and
shlb
testb
cmpsb
in
push
out
int3
mov
scas
fsubrs
in
jge
aas
xor
mov
shrb
in
push
fidivl
add
adc
sbb
hlt
orl
push
mov
imul
mov
adc
ficoml
insb
test
scas
je
lret
sbb
mov
inc
sarl
add
jb
loope
lcall
push
fadd
pop
stos
mov
push
mov
rol
scas
dec
fisttpl
sbb
or
mov
outsl
stos
mov
xchg
mov
mulb
jmp
adc
or
mov
test
daa
pop
ret
and
add
das
mov
mov
adc
or
sub
dec
insl
popa
gs
jo
mov
les
in
sahf
push
test
cmp
xchg
mov
lods
test
cmp
repz
idivl
fmuls
jo
push
hlt
in
mov
sbbl
xorb
sbbb
gs
addl
adc
or
pop
call
bound
jge
das
dec
fdivl
xchg
mov
movsl
ljmp
loope
popf
int
cwtl
insl
out
push
adc
mov
mov
addl
xchg
les
adc
movsl
and
xorl
inc
xor
shlb
pop
out
pand
jmp
and
add
icebp
jp
loope
jnp
rclb
push
insb
mov
jge
push
push
mov
or
mov
das
and
jl
mov
mov
mov
pop
mov
ljmp
frstor
js
aad
imul
sahf
jecxz
xchg
sbb
loope
cmp
shlb
and
insl
push
mov
out
and
push
stos
xchg
orb
cld
dec
outsb
hlt
pushf
or
mov
scas
stos
push
dec
addl
adc
add
mov
jl
push
jne
adc
mov
rolb
add
iret
fs
sub
xor
xor
dec
inc
xlat
cmp
std
dec
sbb
roll
iret
cmpsl
ljmp
or
push
pop
sub
movsl
jnp
popf
xor
push
and
cmp
jle
fmul
dec
mull
pop
gs
sbb
dec
andl
mov
jo
xor
out
mov
mov
cmp
lods
arpl
icebp
add
out
stos
or
dec
sbb
fst
jecxz
xchg
sbb
cmp
or
or
and
push
dec
pop
fbstp
loop
rorb
into
clc
lret
loopne
pusha
adc
mov
loope
cmp
cli
jb
xchg
push
or
jne
push
insb
mov
xchg
jle
ja
sahf
inc
call
cmpsl
aad
cld
add
add
and
add
adc
dec
pushf
xlat
jge
imul
sbb
push
and
pop
rcrb
nop
push
loopne
in
insl
add
movq
mov
in
insb
pusha
mov
data16
xor
test
lret
xchg
mov
or
sarl
ja
pop
js
leave
cmovno
jle
xor
or
cli
shrl
mov
mov
or
xor
xchg
jmp
adc
sub
jne
mov
push
fwait
dec
mov
test
popa
pop
pop
loop
inc
xor
loop
xchg
mov
inc
mov
sbb
mov
mov
sub
add
pop
int3
cmc
idivb
pop
pusha
int
and
insl
aaa
aam
mov
inc
ficomps
pop
scas
xor
or
daa
ret
test
mov
pusha
cmp
flds
push
lds
fdiv
popa
add
incb
inc
ss
push
fcmovnbe
sub
popa
pusha
or
es
xor
mov
add
add
adc
fsubr
in
push
es
xchg
fiadds
push
loopne
cwtl
adc
and
sbb
in
sar
scas
xchg
out
arpl
push
imul
jg
sub
xchg
mov
insb
xchg
and
mov
insb
aam
xchg
lahf
std
mov
mov
push
push
js
outsb
repz
scas
gs
shlb
jno
xchg
xchg
fucomi
xorb
daa
insb
or
fisttpll
cmpsb
daa
jo
pop
sar
push
fnstenv
iret
out
and
pop
cmp
lods
push
test
inc
popa
fists
test
pop
popa
mov
push
stc
and
jle
sub
xor
std
pop
xchg
das
xchg
add
data16
dec
enter
xchg
add
mov
rcrl
adc
fistpll
push
ss
mov
pop
dec
imul
movsl
jb
xor
push
dec
mov
jmp
imul
mov
movsl
test
jecxz
mov
jge
sbb
jnp
mov
dec
mov
xchg
cmp
hlt
subb
loopne
push
xchg
cmp
pop
push
sbb
shlb
lcall
cmp
inc
test
out
fldl
ljmp
call
xor
xor
xchg
gs
movsl
sti
pushf
xor
dec
jle
pop
push
jae
add
cmp
mov
loop
mov
dec
push
mov
shll
adc
mov
mov
test
xor
rcl
leave
jae
adc
mov
adc
fs
xlat
aas
inc
test
mov
and
sbb
rorb
outsl
lods
xchg
in
into
into
xor
pop
inc
add
std
xchg
push
mov
push
leave
fsubrl
and
movsb
inc
mov
insl
addb
mov
data16
icebp
lahf
jmp
and
movsb
jp
dec
add
stc
xchg
or
outsb
jl
mov
mov
push
pop
xchg
push
fbld
in
stos
repnz
cmc
xchg
or
jp
das
xor
fnclex
out
jns
dec
jg
sahf
outsl
push
jl
cmc
out
adc
popa
mov
fildll
movsl
out
pop
xor
insb
cmp
repz
pusha
or
pop
fwait
adc
push
xchg
daa
cmovs
dec
pop
idiv
cmc
movsb
out
adc
jbe
jmp
pop
pop
mov
ret
pop
cmpsb
and
lret
scas
mov
jno
inc
adc
cmpb
lcall
jne
in
mov
xor
movd
push
bound
mov
inc
data16
fwait
aam
lods
or
cmp
aaa
add
jnp
adc
xor
cmp
andl
outsl
jbe
fdivr
test
mov
pop
xor
mov
test
imul
push
mov
fdivrl
fists
loope
mov
fsub
dec
jne
mov
mulb
adc
call
xchg
in
sub
sub
push
addr16
mov
mov
hlt
cmp
mov
std
mov
add
dec
notl
jo
dec
or
push
fstl
push
lret
push
pop
xchg
cld
or
lcall
jmp
or
enter
pushf
clc
cmp
xchg
popa
or
movsl
sahf
out
or
adc
mov
pop
push
add
movsb
push
add
mov
sub
or
in
in
mov
sbb
inc
out
push
cmp
iret
pop
jp
or
nop
or
stos
clc
cmp
andl
xchg
xor
and
adc
xchg
adc
popf
sbb
fadds
in
in
mov
cmp
mov
push
mov
push
sbb
lock
or
fcmovnb
pushf
pop
xchg
inc
push
cmpsb
movsl
push
mov
dec
or
fsubrp
inc
push
push
std
jb
inc
in
dec
popa
insl
mov
das
data16
fcmovnu
iret
mov
sub
jno
sbb
cmp
divb
inc
mov
ja
shr
mov
dec
pop
dec
jnp
and
test
sbb
jne
fistpl
dec
push
leave
int3
inc
cmpsl
aad
dec
push
das
test
cmc
xchg
ds
pop
popf
ss
pop
in
mov
int3
push
clc
mov
fs
sub
mov
out
cwtl
subb
adc
inc
repz
mov
pushf
das
pop
loopne
imul
dec
sub
bound
mov
ss
push
arpl
sti
pop
push
pusha
mov
aaa
into
sub
xchg
loopne
push
popf
adc
push
arpl
inc
jb
mov
movl
outsb
xorb
push
push
cmc
cmp
popa
clc
inc
xchg
pop
mov
cmp
cli
aaa
into
sub
jp
or
sar
sbb
xchg
sbbl
popf
scas
cmp
add
das
add
dec
mov
test
sub
pushf
xchg
sbb
and
dec
popf
nop
ret
jno
pop
aaa
mov
pop
in
stos
sub
cmp
sub
and
fbstp
jns
aam
sbb
in
pop
daa
comiss
cmp
push
adc
jmp
out
idivb
iret
inc
xchg
xchg
mov
xchg
adc
fs
pop
das
jp
adcb
pop
daa
sub
into
lock
pop
cs
ficompl
cltd
vandnps
sub
mov
sub
lahf
fwait
cmpsl
lds
in
pop
push
and
adc
sub
cld
dec
or
or
sub
pop
mov
fwait
xor
insl
mov
mov
mov
negb
adc
cmp
push
jmp
cmp
sbb
insl
or
add
fcomps
pop
fwait
jne
dec
push
xchg
push
add
in
xchg
add
sbb
push
cmpl
aas
sub
push
inc
imull
aad
pop
push
or
or
xlat
gs
das
jb
xchg
xorl
jecxz
data16
add
pop
jle
dec
jmp
xchg
clc
lret
pop
sub
sbb
mov
jl
in
add
xor
and
adc
mov
add
fcmovnb
and
lea
push
loope
dec
test
inc
lea
mov
inc
outsl
pop
fstps
rolb
and
jno
outsb
jns
pop
and
jecxz
fcomps
dec
nop
lock
jp
in
call
test
inc
adc
pushf
mov
sub
pop
push
es
pop
leave
lss
sbb
in
pop
into
adc
cld
dec
lods
outsl
out
sbb
shrl
sarb
in
lcall
je
mov
imul
enter
xor
pop
mov
inc
sbbl
dec
dec
and
cltd
sub
cmp
adc
pop
push
pop
jae
mov
push
push
aam
imul
mov
fwait
add
jle
sub
je
cmp
and
xchg
sbb
jns
rorb
mov
mov
xor
cltd
mov
addb
rcl
push
or
rolb
es
jecxz
repnz
lock
je
or
inc
xchg
inc
in
aaa
adc
in
cmp
inc
es
cmovb
sub
sub
cltd
out
or
ret
and
cmp
dec
mov
fwait
repnz
lahf
dec
outsl
sti
pop
inc
inc
aad
dec
cwtl
xlat
sbb
fsts
xchg
xor
pushf
mov
mov
clc
cwtl
inc
jb
push
adc
push
ja
inc
pop
mov
pop
sbb
inc
sub
mov
add
ds
mov
arpl
jge
inc
mov
push
es
xchg
addr16
pop
leave
sbb
pop
sub
in
cmp
je
test
mov
mov
repz
mov
push
into
xchg
clc
mov
adc
push
inc
cld
xchg
rorl
mov
out
jno
xor
mov
test
mov
inc
xor
data16
mov
or
stos
mov
dec
rolb
push
mov
add
xchg
push
pop
mov
mov
push
cs
xchg
and
or
scas
add
insl
fadd
and
push
mov
jo
inc
rcr
mov
cmpsl
cmp
dec
sub
dec
cltd
pop
add
out
aas
call
std
or
or
cmp
ljmp
sahf
add
popf
movsl
pop
cmp
stos
fdivrl
add
sbb
cmp
adc
xchg
pop
mov
in
out
fstpt
bound
cwtl
add
xorb
mov
push
ss
cli
fists
push
enter
sub
and
mov
aam
xor
shrl
and
scas
data16
iret
scas
or
test
and
and
addr16
mov
add
push
out
stc
mov
test
aas
icebp
xchg
stc
mov
dec
mov
xor
std
aas
loop
mov
fistpll
repnz
les
mov
jecxz
call
out
fildl
add
repnz
xchg
xchg
dec
add
loope
rclb
jo
cli
test
xchg
pop
fidivs
lock
fwait
stos
dec
cwtl
cmc
gs
cmp
pop
mov
xor
mov
add
add
shlb
inc
inc
lds
iret
mov
nop
outsb
jnp
mov
push
stos
and
push
cmp
add
jmp
cmpsb
pushf
loope
mov
push
add
xorb
push
ret
and
cld
dec
inc
pop
sub
and
insl
call
leave
daa
je
sub
imul
cmp
ljmp
jp
adc
ja
cwtl
fldl
movsb
div
adc
mov
iret
add
fisttpl
add
sub
xor
sbb
mov
ret
sbbb
mull
cmc
out
xchg
dec
or
outsl
inc
jle
sti
popf
pop
insb
arpl
fcom
mov
mov
ljmp
movsl
adc
lret
lret
mov
iret
outsl
sub
xor
ret
jo
cld
mov
lcall
push
xchg
xor
or
subb
nop
adc
loopne
pop
adcb
jmp
mov
sub
roll
and
xchg
mov
push
test
lahf
jecxz
imul
gs
sbb
enter
jnp
sarl
gs
shll
dec
jl
enter
fwait
repz
frndint
imul
pop
cmp
aas
sbb
div
push
push
dec
ret
lds
lock
jo
es
js
cmp
push
clc
or
sub
jmp
pop
movsb
push
cld
dec
outsb
dec
sbb
cmc
filds
jge
mov
add
xlat
loop
and
pop
fs
iret
jge
roll
iret
sbb
xor
js
inc
adc
mov
mov
insl
shrl
paddq
jne
mov
pop
push
lahf
cmp
mov
jmp
or
push
jl
dec
push
pop
xchg
sub
stc
mov
mov
inc
jno
dec
inc
mov
jb
jp
je
adc
cs
sub
xchg
push
mov
mov
loopne
xchg
jg
cmp
pop
imull
xchg
push
jo
movsl
fadds
lcall
push
mov
xchg
test
mov
fiaddl
mov
cmpsb
inc
cmpsl
pop
scas
and
fidivs
pop
call
cmp
call
outsb
pop
mov
adc
stc
push
sarl
or
jmp
xlat
sbb
mov
mov
jg
shl
movsb
lds
push
pushf
test
bound
daa
pop
lods
cmp
jo
sub
hlt
push
mov
mov
xchg
flds
in
mov
cmc
jae
ret
xchg
lret
sbb
mov
jge
add
mov
fiaddl
fwait
jp
clc
push
test
pop
adc
inc
int
xor
insl
out
push
ljmp
and
lcall
dec
xchg
nop
fistps
cs
movsb
aad
adc
xchg
lret
lea
xchg
mov
pop
sbb
dec
sbb
jns
fmul
icebp
mulb
es
jmp
or
fstpt
movsb
jnp
add
or
imul
mov
cmp
pop
adc
jae
test
dec
sti
int
xchg
xlat
xchg
enter
push
xor
scas
pop
es
out
shl
and
and
lods
ret
negb
call
sbbb
addl
inc
gs
stc
imul
movsb
sahf
cmc
cmpsb
jmp
mov
add
cs
icebp
inc
and
jp
push
idiv
hlt
loopne
dec
insl
dec
cld
ds
adc
mov
lcall
and
mov
inc
dec
ds
fs
push
mov
xor
iret
xor
mov
dec
out
aad
repnz
lods
pushf
jp
mov
sub
pop
ret
mov
add
fcmove
fisubl
push
cmp
adc
jne
dec
fmul
inc
aad
ret
xchg
insl
sahf
add
pusha
aas
setns
or
imul
jmp
daa
adc
jo
or
movsb
pop
das
fwait
mov
ss
inc
mov
faddl
pop
lret
inc
in
stos
dec
adc
xchg
and
ret
mov
es
testb
or
call
sub
inc
adc
mov
jmp
xor
popf
cld
je
arpl
lahf
mov
mov
out
or
jo
mov
jmp
adc
hlt
es
arpl
out
cmp
mov
fwait
addr16
popa
popl
dec
jl
clc
push
loop
rcrb
rorb
sbb
pop
stc
arpl
js
mov
test
cmc
adc
or
fdivrl
scas
jp
subb
sub
outsl
or
jae
dec
mov
jmp
mov
mov
in
arpl
mov
push
stos
xchg
xchg
add
les
pop
out
adc
xchg
xor
jns
mov
ss
lods
mov
in
xchg
xor
lods
jae
sbb
jne
roll
cltd
jbe
in
push
xchg
sbb
jo
popa
cli
jp
xchg
lods
mov
and
outsl
pop
cmp
or
stos
dec
push
add
not
push
cmp
subl
ljmp
dec
mov
cld
jne
lcall
je
sti
fsts
dec
adc
adc
adc
ret
shrb
push
movsb
cmp
gs
in
dec
jecxz
jno
adc
mov
rcr
addb
mov
mov
pop
pop
fcomps
sbb
mov
lds
aas
addr16
mov
add
cmpsl
mov
bound
sbb
daa
outsb
dec
sbb
scas
into
dec
nop
xor
pop
aad
orb
hlt
scas
pop
popa
inc
and
adc
jne
iret
sbb
out
ljmp
mov
pop
std
and
pop
xlat
popa
xchg
addl
or
dec
lahf
mov
or
push
divl
nop
out
popa
xchg
sahf
adc
dec
test
cmp
adc
repnz
sbb
push
lea
dec
rcrb
push
cmp
lds
dec
sbb
lds
xchg
mov
dec
out
xchg
sbbb
jo
jle
int
pop
xchg
push
adc
inc
call
std
push
jns
push
loope
xchg
cld
lcall
xchg
test
movsl
int
push
add
xchg
push
cmp
stos
jns
adc
int3
inc
jge
add
lods
or
push
inc
inc
cwtl
outsl
adcb
xchg
stc
rcrb
es
and
fidivrl
inc
addb
dec
sub
pop
stos
into
int
sub
movsb
mov
test
lock
mov
sbb
insl
iret
data16
xor
hlt
in
rcrl
or
mov
pop
inc
xor
stos
add
lcall
jnp
sub
and
lret
xor
sti
andb
int3
addr16
ret
push
and
cmpsl
je
sub
insl
xchg
idivl
push
mov
into
gs
xor
pop
inc
xchg
mov
pop
out
pop
popa
test
fisttps
cli
cwtl
adc
aas
fmul
lock
lret
in
xor
aas
jbe
inc
stos
cmp
adc
ret
and
mov
cmp
das
xorb
icebp
out
repz
movsl
es
cltd
xchg
pushf
pop
outsb
pop
add
aas
lock
cmc
out
into
adc
mov
and
jmp
dec
push
push
xor
in
insl
pop
popf
and
add
gs
int
dec
jecxz
cld
sbb
icebp
out
mov
push
mov
cmpsl
inc
fs
xchg
jmp
shl
dec
sbb
jecxz
push
andl
xchg
mov
and
adcb
cmpsb
cmp
int
pop
lock
cli
xlat
lret
in
adc
ss
fiaddl
cmp
pop
push
mov
and
jmp
and
lcall
cld
inc
mov
popf
loop
mov
add
test
out
xlat
dec
add
cli
dec
shll
cmc
stos
xchg
ret
adc
mov
and
jbe
adc
mov
lods
mov
mov
mov
jmp
cmp
adc
in
sub
cltd
dec
cmpl
pop
push
adc
xor
fiaddl
pop
xchg
lahf
inc
fisttps
add
adc
outsb
lods
dec
add
out
cwtl
rorb
aad
cmpsb
aad
dec
or
mov
jle
jle
cmp
movsb
pop
fisttpl
cmpsl
mov
sahf
sbb
mov
adc
mov
sbb
mov
shlb
aam
mov
fcmovb
test
pop
add
jns
sub
sub
xor
dec
adc
sti
push
jl
in
xor
hlt
pop
bnd
out
pusha
bnd
repz
mov
mov
lcall
xor
es
lcall
xor
push
xchg
loope
xchg
cmc
fdivrl
xchg
mov
jns
jno
mov
cmpsl
stos
add
pushf
cmp
lret
dec
sub
jno
jle
inc
sbb
or
es
rcr
in
sbb
pop
test
daa
js
add
xor
fdiv
pop
xlat
sbb
mov
mov
cmovle
loope
xchg
addr16
mov
fwait
adc
repz
mov
scas
push
ret
aad
inc
les
sub
sub
rclb
or
xlat
xchg
inc
pushw
dec
inc
fs
push
inc
pop
bound
xor
push
fidivrl
lcall
nop
clc
cltd
scas
pop
push
mov
adc
ret
into
xlat
push
mov
xchg
or
mov
xor
fisubl
adc
into
ss
mov
push
push
rol
dec
clc
jle
testb
stos
imul
ja
out
dec
mov
cmp
arpl
adc
adc
fsubr
push
scas
push
pop
mov
outsb
aas
fbstp
dec
hlt
imul
insb
adc
inc
xor
pop
inc
shrb
fidivl
xchg
dec
popa
mov
imul
add
andps
adc
in
movsl
inc
pop
stos
mov
inc
mulb
divb
mov
push
lock
out
push
loop
xchg
adc
jmp
jo
dec
inc
jl
pop
movsb
xchg
test
loopne
in
add
jb
xchg
cmp
daa
scas
jle
dec
cmp
push
arpl
jle,pt
pop
push
std
sahf
sub
lret
dec
movsb
jle
pop
jb
sar
icebp
xlat
jle
pop
xchg
add
arpl
sbb
pop
push
add
int
ret
dec
je
xlat
pop
data16
pop
js
jecxz
cmpsb
addr16
stos
out
ss
lahf
xchg
loope
cmpsb
enter
int3
inc
fcomip
dec
xchg
pop
insb
xor
or
add
jb
movsl
aam
test
sub
cwtl
mov
outsb
sub
and
mov
outsb
xor
ljmp
dec
dec
jmp
into
push
outsl
pop
inc
mov
xchg
jns
mov
or
ficoms
aad
sub
fcmovu
xor
mov
hlt
stc
sti
push
test
ds
jne
push
sub
mov
push
aam
push
jp
faddl
sub
mov
dec
sbb
aaa
inc
xchg
add
mov
xchg
xor
lea
out
loop
test
mov
filds
xor
fmull
fimull
imul
adc
jecxz,pn
xor
sbb
xchg
aam
aaa
push
mov
sbb
inc
mov
mov
jp
inc
mov
pop
cmp
fxtract
xchg
fwait
je
push
lds
sub
adc
mov
or
shr
popa
in
mov
dec
push
and
ljmp
or
repz
xchg
mov
pop
jge
jecxz
mov
pop
sub
or
mov
mov
fwait
push
push
movsb
cli
add
push
push
es
pop
sbbb
mov
dec
outsl
orl
pop
add
in
mov
ss
pop
hlt
test
pop
mov
xchg
jnp
xlat
or
orl
sub
dec
dec
ret
and
xchg
lcall
iret
cltd
jo
inc
mov
adcb
mov
mov
das
push
or
lret
mov
cmc
xchg
das
sbb
mov
loope
sbb
cld
mov
fprem1
ja
popa
sub
test
push
adc
outsl
ret
cmp
xor
daa
jns
lret
ss
out
out
mov
iret
roll
cmp
addr16
ss
lcall
mov
push
cwtl
fwait
and
adc
mov
xchg
add
je
out
dec
add
xchg
xchg
sbb
ds
cld
mov
jge
xor
out
mov
inc
fs
popa
mov
iret
call
pop
clc
xchg
adc
cli
xchg
es
and
push
lret
jmp
cmp
dec
orl
xor
out
rcrb
or
pop
es
inc
mov
fwait
fwait
mov
jecxz
add
mov
jmp
mov
repz
add
rcll
dec
or
lcall
fldt
dec
arpl
xchg
jl
incb
mov
loop
add
clc
iret
cmc
fld
pusha
or
push
popa
lret
mov
subb
pushf
dec
testb
movb
mov
or
sbb
loopne
jmp
cmp
stos
push
popa
inc
lea
adc
add
cmp
push
fcompl
pusha
fdivs
sarb
add
sub
sbb
sub
jnp
push
jb
call
imul
movsb
cmc
mov
jae
inc
jnp
sarl
in
stos
fldenv
enter
push
addl
xchg
sub
add
fildl
test
xchg
jp
mov
push
lock
push
loope
inc
test
xor
push
ja
cwtl
jge
mov
jne
push
or
adc
hlt
dec
push
ljmp
les
cmc
add
test
lods
test
cmp
lcall
dec
add
std
in
cmp
out
pop
sbb
push
push
sub
jo
xlat
mov
imull
js
std
shll
adc
fsubrl
xchg
fdivs
insl
inc
xchg
mov
shll
mov
in
fidivrl
push
dec
jno
push
jno
sub
jno
popf
outsl
rcr
mov
cmp
dec
sbb
or
sbb
imul
xor
push
mov
sbb
jb
add
call
mov
xlat
inc
cwtl
aas
pop
mov
sti
sbb
xchg
arpl
dec
into
pop
pop
inc
fstl
out
loop
das
loop
and
rolb
inc
push
sbb
dec
mov
push
lock
push
mov
das
dec
ljmp
jns
xor
sub
sbb
mov
xor
pusha
jbe
mov
adc
ja
js
out
inc
sti
pop
shll
cmpsl
jbe
cmp
adc
mov
dec
sub
inc
mov
hlt
sarl
shrb
insl
jbe
mov
inc
xlat
mov
jb
pop
push
xchg
cmpb
lods
push
jl
sub
jno
ret
lea
add
cmp
loopne
cs
in
push
addb
xor
dec
jne
lcall
xor
sub
int
push
js
sbb
out
loope
jecxz
test
jp
pushf
jnp
mov
in
mov
xchg
iret
and
adc
imulb
cwtl
pop
sbb
push
test
std
stos
out
inc
mov
test
and
call
outsb
xchg
in
pusha
fisubrs
ds
idivl
push
out
push
in
mov
loope
push
sbb
jno
pop
inc
es
lea
loop
cmp
addl
adc
lahf
sub
inc
lret
mov
fists
pop
lds
out
icebp
fcomps
call
adc
lret
aad
ret
call
or
or
in
add
int3
xchg
add
jb
jno
sahf
pusha
shll
addb
mov
cmp
sbb
jecxz
fisttpl
adc
jb
repnz
sbb
test
add
aaa
inc
into
inc
sbb
adc
xchg
test
lds
xchg
or
push
mov
pop
dec
and
cld
lods
pop
mov
add
loope
fildl
stc
fcmovnu
add
push
pop
jo
cmp
mov
cmpsl
cwtl
jle
cmp
mov
xchg
scas
pop
ret
sar
jl
mov
pop
mov
out
add
jle
xchg
scas
shrb
push
inc
pop
inc
mov
xor
cli
mov
xchg
lret
mov
mov
fsts
adc
popf
inc
faddl
xor
or
jno
xchg
mov
fsubrl
jne
out
inc
sub
push
cmp
insb
sti
ret
mov
sub
insb
inc
addl
cmp
sar
mov
in
in
sti
fwait
sub
movsb
cmpsb
lods
das
gs
int3
mov
sti
mov
inc
arpl
pop
leave
sub
mov
test
add
adc
sub
xor
mov
add
and
mov
or
orb
adc
sbb
mov
jns
mov
aas
xchg
mov
mov
mov
test
out
mov
pop
inc
lods
pop
fwait
push
out
inc
in
cmp
mov
xlat
iret
outsl
fisubs
cmpsb
pusha
jp,pn
gs
cwtl
movl
xchg
rclb
jns
push
andb
push
push
mov
jg
pop
mov
push
push
subb
cltd
insb
and
decb
stc
inc
xchg
leave
or
and
sbb
cmc
jae
leave
lcall
add
push
notb
addr16
icebp
rorl
fstpt
jle
mov
aad
pop
in
clc
stos
in
clc
xor
shlb
cmp
test
in
jnp
xor
std
cmp
adc
test
xor
push
sti
dec
mov
pop
fcmove
lods
adc
pop
sub
cmp
movsl
mov
mov
out
repz
jb
fldl
jmp
xor
loop
bound
fildl
lods
inc
cli
cmc
adc
mov
std
test
xchg
aaa
aaa
dec
ja
inc
jl
xchg
jg
mov
rorl
es
out
arpl
sub
lcall
pushf
gs
add
cmp
pushf
sahf
push
mov
outsb
int
add
ret
pop
dec
xor
dec
xchg
fstl
mulb
xchg
ss
dec
and
or
jb
xchg
pop
lods
jnp
xchg
test
in
call
pop
pushf
and
inc
push
les
inc
lds
or
xor
dec
repnz
or
jo
dec
inc
loop
out
push
neg
imul
mov
loop
adc
mov
adc
or
cmp
xchg
push
add
mov
jmp
xor
out
loop
aaa
add
stos
cmp
mov
imul
push
notl
inc
enter
xchg
xchg
push
cmpsb
pop
test
das
loop
cmpsl
inc
inc
pop
fists
stos
cmp
cmp
dec
and
xchg
daa
or
jmp
mov
out
mov
loopne
sub
mov
inc
push
jae
shlb
inc
shrb
sub
fists
out
shll
imul
jne
iret
xchg
inc
inc
xchg
push
add
fcmovnbe
ret
stc
aam
dec
scas
ss
push
je
fildll
sub
aas
push
lea
dec
pushf
inc
xor
add
push
pop
ss
mov
sbb
push
enter
pop
cmpb
pop
add
rcll
insl
push
adc
and
lret
cmc
push
xchg
and
jnp
xor
test
mov
mov
jb
les
mov
sbb
clc
cmp
ret
lcall
lahf
testl
sti
mov
mov
push
test
das
cmp
cltd
jns
inc
pop
mov
repnz
cmp
pop
mov
inc
lods
mov
dec
pop
mov
push
or
push
push
hlt
cmp
movsb
cs
sub
jae
rcll
stos
mov
dec
mov
xchg
rcl
mov
repz
popf
movnti
sbb
mov
repnz
das
lock
stc
hlt
roll
iret
mov
cwtl
out
jne
fistps
lods
repnz
insb
push
xlat
pop
xor
cmp
sub
inc
lcall
imul
clc
movsb
jae
out
pop
test
cvtps2pd
mov
rolb
jmp
cwtl
loope
mov
stc
mov
sub
dec
or
mov
dec
test
sbbl
into
fwait
scas
mov
adc
cmp
sub
mov
push
ja
arpl
or
ljmp
popf
inc
xor
add
pop
nop
test
mov
andb
inc
out
inc
mov
cmp
imul
mov
mov
inc
iret
jae
inc
jno
ficomps
movsb
out
jne
cmp
in
shll
dec
mov
outsb
fwait
test
xchg
cmp
lock
and
cmpsb
jle
jl
andl
add
cvtpi2ps
into
rcl
jb
inc
push
pcmpeqb
mov
in
adc
jns
and
cwtl
rcr
sub
loope
dec
push
mov
shl
jmp
cld
jae
cmpsl
and
sti
movsl
outsb
mov
inc
jge
fadds
inc
lods
cld
je
in
enter
daa
loope
fimull
inc
pop
cs
ret
inc
aaa
inc
xchg
inc
and
filds
in
insl
push
inc
cmc
inc
call
stc
mov
mov
mov
into
ret
call
js
xchg
movsl
xchg
std
mov
loopne
jae
ja
arpl
jbe
ljmp
push
inc
push
dec
cwtl
xchg
inc
push
in
dec
sbb
mov
xchg
out
out
cmp
push
rol
insl
xchg
imul
mov
xchg
dec
add
lock
xlat
xchg
addr16
mov
add
jge
loop
pop
cs
pop
cmp
push
cltd
and
push
in
pushf
hlt
inc
rep
cli
mov
sbb
pop
clc
sbb
fnstsw
bound
mov
filds
push
and
mov
das
xchg
loope
sub
out
cmp
int
andl
pop
pop
pop
lret
push
fsubrl
jl
jnp
enter
xchg
mov
pop
add
lock
xchg
mov
je
incl
jb
mov
inc
xchg
jne
fisubrl
pop
sub
fs
inc
cmp
or
inc
orl
lds
call
mov
mul
repnz
call
xor
loope
mov
lea
mov
and
lea
hlt
pop
stos
xchg
sti
mov
andb
xchg
pushf
hlt
pop
xor
mov
adc
aaa
add
push
inc
sub
stos
fs
incb
inc
imul
pop
dec
rcrl
je
nop
aaa
and
mov
dec
sti
cmp
lock
lahf
push
push
ss
test
fdivs
xchg
pushf
push
outsb
fldcw
scas
sbb
popa
jne
cwtl
iret
loop
and
cmpsb
adc
sbb
popf
test
dec
mov
pop
and
push
inc
in
push
pop
popa
cltd
int3
loope
stos
and
or
or
test
addr16
cs
push
jo
lret
idivb
mov
test
icebp
outsl
cmp
lds
xor
xchg
xor
and
xchg
sub
psubsw
les
xor
jbe
mov
sub
jns
dec
xlat
add
add
aam
cld
int3
fscale
pop
or
mulb
enter
repz
sti
or
xor
cld
lock
ljmp
cmp
sub
daa
jle
sub
mov
andl
push
or
mov
andb
aam
inc
lods
lds
gs
idivl
or
dec
cmp
int
or
aam
ja
shlb
std
movsl
cmpsl
insb
enter
push
orb
push
xchg
sbb
in
cli
push
inc
push
lcall
hlt
mov
mul
lcall
sub
dec
cmp
js
insb
jne
push
mov
ljmp
push
mov
ljmp
dec
cli
orl
inc
push
mov
jbe
imul
push
or
mov
js
inc
cltd
shlb
cmpl
pusha
fldcw
popf
cmp
xchg
lods
xor
mov
and
inc
add
int3
cmc
xor
mov
xchg
xor
daa
fldenv
mov
cmpsb
addr16
add
and
cmpsb
divb
jnp
adc
out
fists
xor
test
mov
fiadds
dec
xor
repz
das
lock
add
ret
jecxz
pop
mov
pop
std
push
enter
es
jle
aad
or
scas
std
push
add
push
sbb
sub
push
jnp
add
repz
mov
ficompl
inc
mov
repz
out
xchg
xor
jp
sahf
xchg
adc
xor
jb
cs
decl
jmp
xchg
and
push
test
xchg
inc
pop
aam
mov
out
pop
fs
push
push
aam
mov
mov
out
mov
mov
cli
dec
cmp
pop
stos
jl
fdivrs
mov
loope
int
or
aad
mov
cmp
and
sbb
push
add
frstpm(287
lds
fdivs
cltd
sti
das
daa
enter
add
inc
iret
jle
repnz
xchg
cltd
push
cmp
lret
out
jle
fistpl
int
test
repz
mov
das
call
popf
or
testl
or
inc
mov
adc
decl
sarl
nop
je
pop
lods
inc
cli
xor
and
insb
daa
daa
sahf
sarb
mov
push
cmpsl
or
xchg
inc
in
push
mov
xor
mov
mov
loop
out
outsl
clc
mov
add
ss
push
shrb
cmp
imul
jne
and
add
sbb
aam
iret
push
xchg
mov
mov
pushf
pop
jo
insb
fwait
test
andb
popf
ret
mov
push
mov
push
movsb
loop
and
mov
dec
dec
arpl
hlt
inc
loope
inc
in
add
movsl
fdivl
das
lods
inc
xor
inc
leave
mov
rcl
sub
push
out
je
popa
xchg
mov
sub
cli
addl
push
popa
dec
mov
inc
repnz
jns
jae
xchg
xor
cmpsb
cli
push
dec
mov
lret
je
test
lods
sbb
mov
pop
push
popf
mov
jnp
xchg
mov
mov
push
jl
xchg
dec
adc
cmp
stos
push
imul
dec
push
xor
call
shrl
pop
ja
mov
mov
fs
sub
lahf
adcl
cmp
inc
sarb
sub
mov
iret
add
push
in
lock
xchg
jo
or
push
push
dec
mov
das
add
or
lea
repz
daa
jo
add
add
lods
cmc
adc
jo
testl
fildl
jbe
or
mov
xchg
popa
pop
jge
adc
cld
sbb
jmp
movsl
push
int
roll
or
sub
addr16
push
ud1
push
out
push
or
leave
jecxz
mov
jle
mov
cmpsb
iret
inc
fisttpll
jge
push
pop
add
xchg
or
cmpsb
or
adc
lret
stos
add
outsb
and
gs
push
mov
inc
fstpl
mov
push
or
sub
jl
xor
mov
popf
cwtl
inc
and
movsl
or
adc
add
repz
cs
mov
add
ss
pushl
adc
aaa
inc
inc
jl
cmp
mov
add
data16
pop
int
inc
or
cmpsl
int3
stos
push
sub
cli
push
leave
cmpsb
dec
out
pop
insb
mov
jp
out
shll
lret
sbb
xchg
sti
inc
aad
adc
push
in
or
push
in
mov
int
movsl
test
icebp
mov
scas
pop
ds
cltd
sbb
jle
sbb
roll
and
cmp
pop
jp
xor
out
cmc
push
pop
lods
stc
mov
add
jnp
loopne
outsb
int
pop
dec
movsb
and
call
cs
popa
outsl
mov
push
cmp
dec
cmp
add
jb
adc
aam
js
mov
push
ret
xchg
and
push
sub
into
mov
fsts
not
sub
cmc
sub
pop
lret
lods
popf
fs
push
mov
inc
mov
sub
outsl
leave
xchg
lock
jae
inc
cs
mov
test
bound
mov
addb
in
inc
add
inc
andb
adc
ret
dec
mov
cmc
les
inc
add
daa
xchg
inc
or
in
dec
es
mov
xchg
out
test
in
dec
lret
pop
or
adc
cltd
sbb
mov
or
ret
sbb
pop
inc
and
mov
lea
dec
movl
mov
push
cmp
mov
dec
lods
and
xchg
or
movsb
inc
fwait
push
das
daa
pop
push
cmp
sub
sbb
xor
fidivrs
test
sub
mov
mov
imul
or
push
lds
ja
mov
pop
dec
aam
popa
or
mov
mov
xchg
scas
mov
mov
xor
push
dec
imul
rolb
call
xor
dec
nop
fcompl
mov
push
push
fmull
push
scas
movsl
enter
mov
push
inc
les
sbb
xor
mov
mov
out
and
pop
lcall
dec
aad
shlb
jecxz
and
pop
iret
in
jbe
pop
aam
ret
and
pop
mov
sbb
mov
mov
ret
stc
lret
out
aas
ror
pop
xchg
shll
mov
jp
sbb
jle
push
add
lret
scas
xchg
cmp
test
sub
push
js
sti
adc
scas
out
or
sub
xorl
sbb
fldenv
fimuls
mov
sbb
aad
daa
cmp
adcb
mov
cmp
dec
mov
fldl2t
fistpll
call
movl
test
in
jno
pop
sbb
mov
sbb
pop
addr16
mov
repz
ret
jne
cs
aam
adc
mov
jecxz
std
mov
jnp
imul
mov
xchg
ret
add
dec
or
nop
scas
lds
xchg
sub
mov
es
adc
shll
popa
xchg
xlat
in
leave
and
fnstcw
push
push
in
sub
mov
pop
push
loop
or
aam
mov
ret
cs
loope
mov
fmuls
ficompl
fcomi
test
adc
push
sbb
lret
and
test
leave
add
inc
ljmp
sbbl
xchg
pop
mov
mov
and
lcall
mov
or
ds
xchg
gs
lock
cld
enter
sub
ficompl
negl
lret
jmp
mov
inc
or
xchg
mov
in
push
xchg
std
rorl
push
cwtl
out
cmpsl
enter
xchg
hlt
hlt
ja
clc
ljmp
dec
shll
dec
jae
add
scas
dec
js
mov
out
and
add
mov
les
xorl
cmpsb
lock
int3
repz
adc
jmp
mov
outsl
xchg
sub
std
adc
xor
test
adc
jns
scas
aas
dec
scas
mov
or
rep
insb
mov
fisttps
rcl
jns
incl
sub
adc
mov
cltd
mov
clc
dec
addr16
add
aad
loope
pop
push
xchg
cmp
mov
lock
sub
add
dec
in
fincstp
enter
adc
imul
jb
mov
pop
fxrstor
adc
mov
loop
sub
cmp
push
lret
stc
ja
rclb
jno
insl
push
mov
adc
rcl
adc
push
xor
mov
icebp
aas
cmc
in
mov
and
and
xor
adc
pop
lea
mov
adc
cld
lret
adc
sti
into
adc
das
xor
inc
mov
mov
std
aam
inc
xchg
sbb
mov
ds
ror
push
fdivrp
outsb
scas
inc
fsubrs
add
aam
popa
jno
add
xchg
xor
push
loopne
rorl
cmp
stc
movsl
jge
int3
dec
loope
cmp
fistpl
add
cmpsb
cmp
outsl
cmpsb
std
mov
popf
lcall
mov
dec
in
sbbl
out
in
repnz
ja
sbb
pop
ljmp
cmc
mov
jo
cmp
std
fdivrs
pop
adc
ss
adc
lahf
leave
fstpl
pushf
stos
jnp
jle
adc
js
subb
fmuls
xchg
push
insl
sarl
test
pop
icebp
push
imul
out
and
cld
in
pop
lahf
lcall
sub
rcl
dec
jecxz
fisubs
adc
int
pop
sub
jmp
scas
fstpt
push
mov
push
movsb
loope
aad
int
mov
mov
or
xchg
inc
repz
outsl
inc
jne
stc
nop
loop
cmp
decb
jecxz
pop
dec
fldl
movswl
cmp
pop
js
lods
test
pop
mov
leave
in
nop
add
les
in
cmp
std
xor
testl
lds
adc
popf
xor
lea
mov
pushf
cli
jg
pop
fiadds
mov
xchg
test
xor
ljmp
mov
jecxz
popf
sbb
lret
xlat
lcall
stos
daa
movb
aam
sbb
mov
sub
mov
addr16
sbb
mov
and
add
push
and
xchg
xchg
orb
push
add
mov
sarl
test
ja
out
dec
xchg
bnd
push
jecxz
pop
sub
fadds
shrb
sub
mov
mov
fistl
adc
fistps
ja
sbb
mov
inc
add
inc
push
pop
pop
dec
adc
lcall
lods
jb
imul
fiaddl
mov
lods
xorb
mov
nop
das
mov
nop
stc
mov
mov
stos
bound
lret
fucom
lods
int3
pop
ret
inc
jle
cld
pop
push
jb
js
dec
dec
and
arpl
pop
loopne
mov
inc
mov
mov
or
nop
and
jecxz
sbb
push
inc
xchg
inc
jle,pt
add
rorb
jbe
inc
push
mov
mov
jl
jb
push
fisubrs
rcrl
mov
popf
imul
test
xor
mov
push
inc
sbb
cmp
dec
daa
imulb
fadd
push
in
rorl
push
xchg
pop
mov
mov
and
sub
inc
roll
lcall
insb
aas
xor
mov
sbb
xchg
scas
mov
or
sbb
dec
shlb
mov
cwtl
insb
int
xor
add
aas
dec
cmp
mov
or
lret
cmp
jno
mov
push
test
or
jnp
stc
cmp
or
and
add
inc
stos
inc
pop
jge
jg
mov
sar
pop
js
lods
push
ds
loopne
or
loopne
inc
btc
inc
dec
lock
fsts
negl
xor
inc
in
mov
dec
pop
dec
aaa
out
out
lcallw
sbb
call
lret
dec
nop
jl
cmp
int
into
sub
sti
sub
push
notb
push
insl
les
jge
pop
das
cmp
xchg
sahf
js
mov
in
xchg
test
cmp
and
push
neg
cs
sbb
adc
insl
pop
in
into
pop
in
out
es
jg
sub
mov
aaa
xor
ss
lods
fs
pop
xor
mov
pop
sar
ficoms
test
jae
xchg
dec
mov
sbb
imul
dec
shlb
push
pop
add
bound
mov
and
loopne
outsb
mul
int
xchg
mov
sub
xor
int
insl
dec
test
jg
stos
test
inc
adc
add
and
ficomps
stc
dec
adc
hlt
pusha
push
cltd
divl
cmc
rorb
xor
je
dec
cld
jp
cmp
test
mov
adc
inc
xchg
insl
xlat
jno
dec
lret
xchg
inc
outsl
in
nop
enter
dec
out
push
mov
adc
ljmp
sbb
xor
cmp
popa
dec
int3
sbb
jns
mov
loop
push
adc
lea
push
inc
vmread
cli
inc
adc
aad
fsubl
js
xchg
lret
popl
enter
and
repnz
gs
in
sub
xchg
sarb
adc
push
cltd
add
repz
mov
orb
test
and
test
popa
in
ret
ljmp
js
jg
inc
mov
sbb
push
loop
pop
fbld
fs
add
mov
shrl
das
and
jno
je
push
cltd
aad
add
out
push
and
add
push
and
pop
mov
sbb
and
rolb
arpl
int3
subl
xor
loopne
in
hlt
pop
inc
mov
xor
dec
jle
sbb
sti
jns
out
xorb
mov
jns
movsb
pop
mov
fdivp
ss
xchg
loope
xchg
sahf
test
push
xchg
inc
aaa
out
dec
out
jnp
ljmp
pop
mov
dec
jmp
test
ret
mov
pushl
stc
xlat
popa
aad
cmp
fsubrl
or
lods
xor
xor
iret
mov
jp
je
mov
adc
mov
xor
and
rcl
push
ja
add
in
stos
mov
mov
or
xchg
out
ss
adc
pop
xchg
fwait
not
out
ss
pusha
imul
pop
hlt
ja
jl
icebp
das
and
shr
clc
fs
pusha
test
scas
add
imul
mov
mov
and
xlat
push
incb
inc
icebp
movsb
in
push
mov
inc
ljmp
mov
popf
and
adc
mov
stc
xor
add
mov
popa
pop
pop
xor
mov
sbb
lret
cmp
mov
cwtl
xchg
or
gs
std
sub
nop
ljmp
jbe
inc
in
decb
xchg
lahf
push
mov
sbb
pop
lea
imul
fstps
mov
pop
dec
or
jmp
scas
adc
adc
out
js
push
out
dec
inc
dec
sub
int
popf
or
adc
pop
inc
pop
mov
icebp
enter
push
lahf
push
xchg
stc
cmp
mov
jb
mov
mov
inc
or
lods
lock
add
sbb
shlb
lahf
xlat
cmp
pushf
dec
pop
xchg
loopne,pn
movsb
mov
inc
sub
out
fwait
lcall
xor
dec
jl
pop
add
jl
and
call
pop
mov
jns
fstpt
adc
mov
and
mov
sbb
push
sub
js
mov
fbld
out
divl
mov
and
cmp
inc
ficompl
call
adc
jecxz
adc
jns
loope
in
pop
xchg
cltd
pop
fsubl
mov
arpl
clc
mul
push
mov
jne
subl
jno
aaa
dec
push
andl
and
les
cwtl
pop
mov
add
and
sub
lret
xchg
stos
faddl
jge
xor
leave
mov
push
adc
jg
sub
mov
xor
cmp
add
call
mov
push
mov
insb
jl
xchg
aas
into
cmpsb
rorl
rolb
ss
xchg
jl
scas
add
test
mov
push
mov
jg
or
cmpsl
aam
imul
sqrtps
rorb
imul
jmp
in
addr16
mov
cmp
add
inc
sbb
es
mov
push
cmp
mov
jnp
adcl
rclb
loopne
sub
xor
sub
xchg
push
cmpsb
mov
dec
jge
sub
leave
mov
lcall
lods
push
out
pextrw
test
fisttps
fwait
mov
sub
fstps
aam
xchg
inc
dec
mov
xchg
and
rolb
adc
adc
lock
cmc
xlat
js
sbb
push
push
push
dec
jbe
mov
test
or
sub
mov
add
mov
fsts
mov
fsubr
inc
dec
adc
enter
inc
dec
push
pop
cmp
popa
or
pushf
mov
or
imul
fwait
mov
int3
aad
lea
push
nop
and
fwait
mov
jge
int3
hlt
scas
loopne
fwait
or
pop
and
and
and
mov
js
subl
aaa
je
movsb
cmp
aaa
arpl
stos
jl
sub
mov
xchg
in
adc
mov
mov
and
aas
fsubr
outsl
jle
sub
out
fldcw
lds
pop
dec
addb
insb
lret
and
cli
jno
xor
sbb
nop
dec
lods
cwtl
sahf
fwait
scas
arpl
ds
fidivs
adc
pop
mov
sub
aas
lahf
mov
les
pop
ss
hlt
push
sbb
aad
cmp
je
push
pusha
mov
sbb
subl
push
mov
dec
fldcw
out
imul
mov
imul
inc
push
cs
add
dec
sub
testb
xchg
movsl
into
adc
shlb
fs
sbb
dec
add
mov
xchg
dec
dec
adc
pushf
aam
sbb
pusha
ljmp
mov
sbb
sti
dec
cwtl
and
sub
inc
pop
ljmp
lock
pop
into
les
sub
sub
ret
push
out
xor
test
jb
push
adc
and
adc
add
jl
add
cmc
push
mov
lret
or
push
xor
xchg
ds
pop
or
mov
jbe
add
lahf
mov
sbb
daa
jge
xor
sub
ljmp
or
xor
daa
ror
push
adc
fwait
shll
or
jg
cli
push
sbb
and
mov
inc
push
in
or
mov
outsl
jbe
neg
out
lahf
out
xchg
jnp
in
aaa
das
out
outsl
icebp
imul
push
ja
popf
push
push
xchg
push
adcb
decb
add
unpckhps
mov
rcr
gs
pop
adcl
ja
add
mov
leave
insl
and
push
mov
jl
out
mov
push
test
mul
xor
push
enter
mov
les
sub
xchg
aad
pushf
icebp
sbb
mov
mov
sarb
inc
xchg
loope
mov
mov
cmp
and
rol
xor
rcrl
cmp
mov
mov
push
pop
inc
shll
sti
out
das
enter
pslld
inc
push
mov
mov
pop
test
jl
addb
out
pop
jb
lods
xchg
jne
int
xor
inc
jmp
popa
xchg
jbe
jae
ljmp
fwait
mov
shlb
jge
adc
ret
arpl
push
inc
pop
lods
das
out
test
lock
xchg
enter
not
in
pop
inc
or
cmp
jns
push
sub
icebp
repnz
mulb
and
pop
gs
push
add
jp
les
push
scas
fnstcw
imul
mov
mov
ss
cmc
in
xor
sub
call
xchg
mov
add
lahf
pusha
sbb
xchg
mov
jmp
and
mov
ret
xchg
sahf
jmp
sub
and
sub
pop
ds
pop
cmc
mov
xor
in
lcall
mov
push
sbb
ja
sti
cmp
mov
add
je
push
lea
jns
jae
xchg
mov
push
cli
rclb
insb
dec
outsb
nop
in
andb
lret
jae
pop
fucomp
in
pop
lret
nop
jecxz
call
clc
std
xchg
pop
or
sbb
ja
jo
outsl
outsb
pushf
cltd
icebp
das
mov
shlb
sub
fildll
out
lret
adc
sbb
cmpsb
fisttps
repz
pop
imul
and
sub
mov
mov
add
or
ja
jmp
mov
shll
or
negb
insb
inc
dec
adc
icebp
jmp
or
or
pushf
shlb
adc
scas
fwait
ret
jae
aaa
mov
dec
mov
mov
push
sbb
stc
push
sub
cltd
ficoml
mov
mov
pop
jno
fisttpl
adc
mov
inc
out
mov
mov
outsb
sbb
mov
sbb
pop
lods
sahf
xchg
in
stc
neg
jb
jl
mov
cmp
scas
mov
leave
inc
adc
cld
nop
jg
mov
xor
and
jbe
dec
aam
aas
in
in
sbb
pop
cmp
add
shlb
incl
ja
cld
cmp
rcl
jg
inc
imul
push
mov
dec
jle
dec
bound
mov
shr
dec
insl
cs
int3
call
andl
add
ljmp
jl
int
mov
gs
lahf
xchg
dec
push
push
pop
in
scas
push
jbe
add
fsubrs
jb
mov
pop
ret
cmp
adc
scas
and
inc
mov
cmpb
pushf
mov
lds
sbb
in
lds
push
mov
sbb
add
mov
pop
rcll
xchg
mov
in
push
and
xor
cwtl
jmp
out
dec
lods
mov
ret
dec
or
adc
aaa
pop
sarb
add
add
clc
sti
lret
fstps
and
sbb
in
into
cs
repz
or
pusha
mov
mov
ffree
in
test
test
ret
fst
or
mov
adc
or
cmp
adc
test
add
mov
mov
push
and
iret
pop
shrb
outsb
popf
test
xor
fwait
sbb
icebp
cmc
enter
mov
stos
cld
or
dec
loope
mov
movsb
sub
cmp
movsb
inc
shlb
fimuls
jo
shlb
push
aad
pushf
mov
in
popa
inc
mul
push
xor
push
mov
cmp
sbb
push
ret
mov
and
adc
inc
pop
sbb
ss
loop
xchg
dec
lret
mov
adc
sub
mov
mov
push
ss
lahf
dec
sahf
int
or
pop
out
ljmp
add
jl
xor
aas
xchg
insb
pop
ret
dec
push
dec
or
jne
les
cmpsl
mov
sarl
or
cmc
lods
cmp
je
faddl
into
and
jnp
in
fsubrl
dec
push
adc
loopne
push
nop
std
pop
push
jns
shrl
fyl2xp1
add
rcll
aaa
dec
mov
dec
push
cmp
or
mov
lods
jp
dec
pop
add
dec
ja
fstpt
dec
push
data16
jg
xchg
xchg
dec
jne
stos
mov
in
or
mov
lret
faddl
hlt
movsb
js
sahf
inc
mov
outsb
movsb
nop
mov
push
or
bound
das
pop
int
in
fldt
outsl
rorb
jle
orb
gs
xor
shrb
out
test
mov
fstl
inc
test
outsl
iret
imul
fisubrl
orb
leave
and
and
lods
jbe
xlat
sub
ret
mov
mov
mov
cmp
xchg
pop
fmuls
enter
pop
mov
inc
ficoml
jl
fisttpll
xchg
jb
mov
lods
push
mov
cmpsl
sbb
inc
sbb
addl
mov
mov
add
dec
mov
mov
jb
jnp
mov
sbb
or
dec
xor
lret
pop
xchg
add
adc
shrb
pop
insb
cld
adc
push
pop
test
filds
or
xor
jmp
fsubr
pop
pop
add
mov
scas
dec
popf
pop
pop
jecxz
mov
andl
div
fcompl
xor
stos
or
sar
testb
and
add
leave
sahf
push
addl
jns
aaa
xlat
std
xor
pop
cwtl
mov
or
jl
jg
sarl
cmp
push
stos
in
cmp
addl
inc
mov
fdivr
inc
cwtl
adc
xor
fadds
xchg
stc
xchg
fsubrs
xlat
xor
inc
iret
loope
mov
xacquire
faddl
outsb
push
adc
ret
inc
dec
movsl
jb
and
imul
xor
mov
dec
add
fiadds
pop
adc
mov
repz
cmpsb
sub
cmp
sarl
cmc
aaa
sbb
pop
into
daa
rcrl
inc
adc
fwait
lods
shll
mov
pusha
out
and
popa
fnsave
leave
push
xchg
cs
push
cmp
jbe
arpl
insb
in
push
fcompl
aam
mov
mov
and
jo
icebp
push
add
jno
out
addr16
and
adc
mov
cmc
jle
repnz
xor
out
into
push
sahf
fwait
mov
aaa
lret
xor
pop
sbb
fwait
add
sbb
outsl
sbbl
xchg
insl
push
insb
mov
test
out
jl
add
xlat
mov
sbb
jns
xchg
ret
popf
repz
mov
cmp
xchg
lods
adc
das
jmp
or
ret
das
movsl
ss
cmp
mov
jne
or
sub
scas
ss
cwtl
mov
mov
or
mov
loopne
inc
sahf
adc
inc
mov
lock
jns
sub
neg
pop
jbe
pop
xchg
rcr
sub
mov
sub
int3
insl
xlat
jecxz
dec
in
out
jmp
sub
xor
imul
and
clc
bound
inc
imul
lahf
pop
jecxz
aaa
mov
js
mov
lahf
pop
repz
mov
pushf
cmp
and
out
ret
fisubrs
aam
iret
fabs
ja
add
mov
sub
mov
mov
in
call
push
lret
mov
jbe
fbstp
aam
iret
push
mov
or
mov
add
cmp
fnsave
in
jle
mov
mov
addr16
nop
sbb
push
out
lods
stc
jo
fcomp
sbb
or
xchg
sub
jne
outsb
mov
sbb
add
dec
pop
out
fwait
mov
xchg
xchg
test
sub
lods
sbb
lods
and
push
outsl
sub
test
jns
dec
fidivrl
pop
inc
jmpw
pop
pop
mov
cmp
cmp
mov
mov
push
pop
mov
pusha
adc
fdecstp
adc
xor
mov
hlt
or
dec
pop
sub
sub
testb
mov
adc
lea
pop
test
out
fistl
int
mov
cmc
sahf
jmp
test
inc
xchg
cltd
ss
dec
ret
xor
dec
inc
ret
sub
out
sbb
pop
out
add
loope
les
add
mov
nop
mov
test
jns
das
movsl
outsl
idivb
mov
xchg
cld
ja
imul
fisubl
push
loopne
mov
jmp
es
mov
mov
aaa
cld
bound
pop
aas
and
les
xchg
scas
inc
inc
xor
out
int3
std
or
lahf
in
in
inc
outsl
pushf
jp
je
repnz
ja
outsl
mull
mov
xor
mov
xchg
stc
cmp
pop
subl
in
je
fs
lret
lea
inc
push
dec
fdivrs
jecxz
hlt
lahf
jle
sub
dec
dec
xchg
cmp
out
jmp
push
loopnew
aaa
xchg
mov
cmp
imul
out
shlb
call
std
adc
mov
mov
jnp
pop
sub
loope
xor
and
pop
xchg
pop
sbb
mov
stc
mov
and
sub
pusha
dec
cld
jnp
push
out
mov
dec
daa
arpl
inc
cmp
mov
fistl
or
fs
sub
daa
aad
fcoms
add
mov
aas
inc
inc
push
mov
out
rcrb
sbb
mov
dec
repz
add
pop
jbe
xchg
leave
xchg
test
pop
and
cmp
std
sub
jle
inc
lret
lcall
jle
xlat
int3
sub
inc
push
gs
fiadds
push
mov
pop
mov
pop
movups
jecxz
in
cmp
insb
and
sarb
sub
test
rsm
outsb
dec
jle
push
sbb
fcoml
ret
inc
mov
addr16
dec
stc
mov
add
clc
sub
adc
loop
data16
stc
mov
dec
and
clc
push
arpl
hlt
mov
rorb
mov
clc
out
repnz
lods
jmp
lahf
jge
jae
roll
les
mov
xor
sub
ss
mov
out
fimuls
ja
mov
mov
sbb
push
inc
pop
test
sbbl
aad
inc
push
or
and
jg
fwait
push
or
jae
dec
scas
andl
sti
inc
sti
or
dec
pop
add
add
xor
adcl
xor
add
sub
sti
into
mov
push
das
inc
inc
movsb
inc
into
dec
push
push
dec
sub
dec
ret
sti
adc
sahf
push
mov
fildl
mov
push
jmp
fdivl
nop
jmp
fistps
sub
movsb
xor
clc
inc
xchg
rcrl
ss
inc
push
fcoml
and
sahf
xchg
or
loopne
lret
mov
fdiv
shufps
out
in
fstp
sub
and
std
push
xchg
push
mov
sub
pop
jp
dec
in
or
int3
pop
add
pop
shlb
mov
sbb
inc
popa
test
mov
scas
inc
rcl
ja
aad
cltd
mov
jno
dec
daa
xchg
outsb
inc
jbe
test
and
add
cli
dec
mov
add
cmp
aam
inc
data16
push
nop
out
ret
sub
in
stos
mov
and
dec
roll
xchg
mov
hlt
cwtl
fidivs
or
add
cmp
inc
mov
mov
je
fcoml
lods
jle
or
jae
mov
out
movsb
cmp
data16
out
xorl
cs
mov
dec
mov
mov
hlt
jne
push
arpl
fnstsw
sti
aam
xor
cld
fstpt
or
pop
push
add
call
jge
mov
mov
ja
loopne
mov
mov
loope
xbegin
mov
insb
icebp
aaa
cltd
sbb
adcl
data16
bound
sbb
push
pusha
into
xor
in
mov
jl
mov
int
mov
loop
mov
pop
test
sbb
je
dec
mov
and
pusha
arpl
xchg
push
repnz
scas
pop
adc
ja
enter
insl
gs
cmp
push
daa
or
jo
push
or
adc
cmpsl
test
push
test
mov
inc
out
push
and
fwait
cmp
or
ret
pop
inc
js
xlat
lahf
fxch
xor
xchg
int
daa
inc
mov
lock
add
push
pop
push
dec
xchg
mov
call
push
shll
inc
jnp
adc
fbstp
test
loope
xor
mov
sti
das
xor
inc
adc
fcoms
xor
sahf
outsl
add
mov
pop
xlat
movsb
bnd
add
es
por
xor
or
dec
xor
mov
in
push
idivb
cltd
pushf
movsl
mov
inc
fbstp
das
mov
icebp
lds
fcoms
and
pop
adc
ror
cmp
and
mov
lcall
xchg
dec
mov
int
add
mov
rcrl
mov
mov
push
mov
mov
sti
jae
fildll
scas
pop
fidivs
dec
add
aam
imul
subl
fidivrl
adc
sti
lock
and
add
jne
stos
test
int3
scas
jb
push
ss
add
push
leave
push
push
lock
jmp
into
rcrb
testb
fmull
test
mov
sub
sbb
dec
adc
sbb
pusha
xor
lcall
mov
jo
xor
push
or
aam
fnsave
addl
or
in
and
cld
and
jecxz
decl
xor
add
add
push
aaa
mov
push
fsts
enter
xchg
pop
sti
cmpsb
xchg
xchg
decb
jmp
pop
add
scas
add
and
lahf
shlb
movsb
and
lods
int3
enter
jns
repz
shr
loopne
sub
lock
es
cmpsb
test
movl
mov
testb
pop
push
xchg
or
addr16
mov
adc
push
fbstp
popf
orl
mov
adc
adc
or
xor
add
mov
out
faddl
pop
ret
xor
addr16
mov
les
stc
daa
dec
xchg
push
dec
mov
nop
cmp
and
adc
int
cld
xor
push
xlat
adc
mov
fnstsw
jmp
rcrl
test
mov
cmp
cmp
sbb
cmp
and
push
in
in
stc
movsb
icebp
in
out
popf
jbe
aas
into
lret
xor
cmp
jmp
sarb
cmp
in
movsb
adc
push
xor
enter
jnp
fistps
inc
xchg
xor
enter
inc
cli
fmuls
cmp
xchg
addl
or
xchg
hlt
stc
mov
mov
daa
aad
push
dec
popf
iret
mov
fcoms
sarb
popa
daa
cmp
xchg
cltd
sub
push
stos
cwtl
js
pop
and
sub
sti
inc
iret
das
test
mov
xor
testb
push
test
sahf
jl
in
daa
push
pop
adc
inc
fistpl
ror
pop
fildl
xor
iret
ds
cld
mov
mov
scas
dec
insb
in
ljmp
cmp
cmp
sbb
daa
mov
add
loopne
in
das
stc
cmp
sbb
xor
push
pop
sub
into
sti
stos
leave
clc
lcall
jns
cli
lds
xor
mov
in
ljmp
push
loop
fwait
js
cmp
and
lods
pop
mov
xchg
push
sbb
mov
fiadds
push
pop
stos
lret
xor
push
jp
dec
dec
and
mov
je
je
aas
adc
cmc
fcoml
fisubrs
jle
pop
outsl
sahf
mov
or
aad
outsb
scas
xchg
sti
pop
test
pop
sub
sti
xchg
jns
psubusb
test
lea
pop
es
sbb
push
mov
and
xchg
jecxz
mov
inc
ss
pop
fnstenv
out
jle
sarb
insb
or
push
jl
sub
xor
mov
inc
pop
mov
lods
out
inc
jecxz
push
cmp
lods
orb
or
and
push
dec
mov
int
dec
pop
sbb
nop
dec
push
iret
lods
mov
mov
insb
push
and
cld
ljmp
or
or
add
insl
into
int
test
push
fstl
mov
shll
xor
fs
inc
hlt
pop
push
std
ficoms
bound
mov
sub
xchg
sub
je
fmulp
daa
inc
mov
in
inc
inc
sbb
jno
cmp
cmp
repnz
jmp
cmpsb
cmp
ss
mov
cmp
mov
cmpsl
lea
cwtl
sub
xchg
add
lods
cwtl
push
cmpsb
sti
movsb
push
pop
flds
inc
sub
mov
lahf
stos
fcmovnbe
mov
xor
jae
fnstenv
adc
push
stos
inc
addr16
sub
push
std
pop
ficompl
pop
adc
and
cmp
jmp
ret
cwtl
test
ljmp
pop
mov
mov
jne
xor
in
pusha
shlb
ret
xor
and
sub
add
sbb
ljmp
scas
add
pop
data16
iret
sbb
mov
cmpb
insb
sub
scas
or
ljmp
das
out
fisubrs
call
cmp
repz
jmp
pop
cmp
mov
lea
cltd
rcll
scas
and
repnz
adc
and
les
lods
jae
and
mov
adc
mov
test
in
and
add
cmpsl
sahf
in
adc
xor
mov
test
jne
pop
cltd
repnz
shlb
mov
dec
push
xchg
cltd
testl
sbb
and
dec
dec
fldl
in
jbe
cmpsl
push
das
aam
or
lahf
mov
jecxz
stc
cltd
aam
adc
add
lcallw
pop
lods
loopne
clc
test
jl
imul
sub
sarb
les
xlat
jmp
inc
clc
dec
mov
add
adc
cltd
adc
ret
mov
and
scas
enter
repz
sub
xchg
jae
and
pop
rorl
jae
outsb
adc
jb
add
or
adc
mov
dec
push
cmp
xchg
test
pop
enter
addb
fnstsw
pop
fldl
pop
add
subb
adc
cltd
adcl
push
sbb
pop
ja
int3
ss
fidivs
adcb
dec
outsb
mov
mov
into
ljmp
fwait
push
jecxz
inc
loop
outsl
add
jmp
adc
jp
or
cld
push
imul
mov
adc
roll
rolb
rcll
pop
dec
fs
fwait
mov
xor
stos
mov
sub
pop
cltd
nop
cmp
jnp
shl
pushf
fwait
dec
aaa
bound
cmpsb
ret
popf
scas
mov
ret
jmp
dec
int
stos
insl
mov
push
mov
loopne
mov
dec
xchg
fidivrl
into
popa
add
inc
add
int3
sbb
stos
jo
jb
mov
sbb
pop
dec
stos
dec
rcrl
fimull
inc
lock
cltd
mov
roll
or
rorl
push
push
icebp
xchg
cs
leave
test
mov
not
dec
push
es
test
int
lods
push
sub
jno
pop
mov
jle
push
fstps
out
inc
aas
scas
sub
mov
jnp
jno
in
mov
sahf
scas
jno
xchg
std
in
push
dec
xor
dec
xchg
arpl
imul
stos
fsubs
push
sbb
push
fs
cmp
xchg
shlb
cmp
in
icebp
mul
xchg
scas
xchg
jo
das
cwtl
mov
or
sub
fwait
jne
stc
lret
inc
stos
loopne
mov
mov
cmc
lahf
sbb
adc
outsb
jmp
xchg
mov
outsl
out
testb
jmp
cmp
in
scas
add
nop
pop
test
pop
cmp
les
mov
adc
push
jecxz
aad
sub
out
dec
mov
call
lods
adc
inc
out
xchg
xor
and
jl
std
jae
pop
int3
in
xchg
push
fistpl
mov
cltd
adc
push
lahf
aas
pop
xchg
xchg
sub
in
adc
push
add
aad
mov
shrb
mov
in
stos
lret
sbb
inc
xor
pop
test
jne
loope
test
and
xlat
or
sti
or
xor
ds
dec
and
mov
jo
out
xchg
adc
sbb
imul
add
jns
cwtl
leave
mov
dec
fsubrs
push
fiaddl
cmp
adc
leave
sub
rcrl
sbb
mov
bound
mov
test
and
into
cmp
inc
cmp
pmulhuw
shl
nop
ljmp
and
cmpsl
rcl
mov
inc
jno
fidivs
xor
sbb
xor
cmpsl
mov
data16
fstl
jbe
push
sbb
jecxz
jle
sti
mov
das
add
dec
mov
push
lock
out
pop
mov
sbb
stos
or
pop
or
push
mul
inc
lods
repz
or
jb
js
mov
add
jge
fisubl
std
aam
movsb
fs
inc
pop
movsb
arpl
nop
adc
dec
in
add
add
inc
push
loop
lds
je
shl
jne
out
mov
pop
adc
loope
sub
xor
or
xchg
stos
add
sar
and
aas
or
test
call
jne
cld
outsb
lock
cli
js
xor
test
notl
mov
lea
push
push
and
sbb
outsl
mov
pop
lret
out
in
test
mov
testb
jno
dec
jae
cmp
rcrb
dec
pop
mov
mov
adc
clc
sub
fiaddl
pop
jnp
jecxz
mov
mov
xchg
push
mov
imul
rol
inc
idivb
subb
sbb
xchg
idivb
test
rolb
mov
in
mov
mov
push
dec
cmp
push
divps
ljmp
daa
xchg
fdiv
sub
cmp
xor
mov
xor
leave
push
leave
int
mov
scas
push
push
mov
push
mov
loope
and
cmp
xlat
add
pop
sar
and
xchg
pop
sbb
pop
out
lcall
ror
dec
js
popa
imul
pop
pushf
mov
rol
data16
or
bound
push
jo
xchg
shrb
add
js
adc
xchg
pop
add
jmp
xor
enter
shr
jg
in
mov
dec
mov
jae
ds
test
xchg
sub
dec
sub
push
push
xchg
adc
add
inc
shlb
and
out
sub
push
add
imul
fmul
inc
mov
sbb
sbb
outsb
fld
cmp
in
xlat
inc
in
faddp
mov
inc
imul
dec
outsb
dec
mov
jle
leave
fldcw
pop
popf
sub
cmp
cltd
aam
mov
out
xor
sub
scas
lea
push
cmp
mov
mov
sub
inc
mov
push
lea
fmul
out
add
rcll
mov
xlat
push
cmp
sti
jp
mov
pop
mov
jnp
mov
xor
sahf
xchg
pusha
repz
or
call
fsts
ljmp
xchg
sbb
dec
mov
leave
push
cli
mov
pop
xchg
mov
inc
jmp
jno
ss
ror
or
xor
sub
loop
xchg
loope
or
mov
out
cmp
jne
call
mov
shll
fsubs
jb
adc
pop
std
pop
xchg
mov
push
or
mov
jno
sbb
out
jbe
clc
or
lahf
mov
cmp
int
loope
enter
sub
sahf
add
pop
xchg
push
xor
jecxz
and
aam
fstpt
sbb
sub
pop
adc
insl
xchg
adc
mov
icebp
std
bnd
and
push
xor
aam
rorl
and
mov
scas
xchg
mov
and
imul
inc
pop
in
pop
sbb
push
fcomps
or
stos
arpl
es
pop
push
inc
shll
adc
sub
mov
addr16
mov
gs
pop
in
fdivr
popl
jne
fsubrp
rol
repnz
jb
push
enter
mov
leave
fwait
adc
ret
addr16
addl
and
dec
loopne
addr16
insb
mov
cmp
sahf
test
mov
push
ror
add
push
xor
imul
sbb
mov
test
cld
cli
xor
xor
adc
dec
mull
pop
and
sbb
mov
xchg
imul
sbb
movsl
inc
das
jo
loope
orb
inc
mov
rcr
dec
add
movsl
js
out
idivl
cmpsl
inc
adcb
xlat
in
xor
dec
mov
add
dec
add
movsl
jbe
xor
and
loope
subb
push
sub
xlat
pop
dec
xorl
int3
jle
jnp
mov
xor
xchg
xchg
out
in
test
sarl
addr16
push
cmp
adc
fincstp
movsb
mov
bound
pop
xchg
mov
lret
lds
adc
lock
dec
add
mov
sbb
jmp
cmpsb
fildll
in
xchg
pop
xlat
loop
jmp
xor
cli
sub
leave
pop
out
sbb
cs
push
dec
imul
mov
add
inc
or
xchg
cmp
xchg
adc
dec
mov
add
in
cmpsl
pop
xor
push
ror
mov
test
inc
add
out
push
or
mov
pop
arpl
fists
dec
icebp
leave
cwtl
mov
cwtl
pop
fsubrs
call
xchg
push
addb
hlt
mov
lret
xchg
adc
cmpsb
xor
data16
lock
dec
ror
push
ljmp
and
rcll
out
cmpsb
shrb
icebp
aad
sahf
aaa
int3
sub
jle
scas
fstpl
popf
and
cmpsb
jnp
movsb
mov
fiaddl
in
cmp
outsb
and
mov
loopne
mov
pop
mov
daa
ss
cmp
xchg
cmp
push
insl
xchg
ret
leave
sub
xor
enter
jno
mov
push
fwait
test
cmp
sub
pop
sub
xchg
in
fidivrl
add
icebp
mov
sbb
add
pop
dec
pop
lret
lcall
test
jp
out
ret
push
mov
xchg
ds
out
in
cmpsb
pop
jecxz
lock
dec
jae
cmp
imulb
jns
divb
ret
and
js
iret
sti
inc
push
push
aad
mov
jge
lods
push
sbb
jg
xchg
and
add
shrb
jo
inc
add
xchg
int
in
dec
les
pop
andl
je
sbbl
cs
fidivs
mov
scas
push
jne
bound
ljmp
jnp
lock
aas
scas
jmp
pop
pop
or
data16
xor
inc
xchg
add
enter
outsl
or
lods
es
fcompl
or
and
or
inc
test
imul
or
dec
fs
xlat
push
jmp
lods
jnp
pusha
xchg
mov
mov
and
mov
pop
or
or
fcom
cmp
test
stos
lods
push
cltd
cmp
or
cwtl
std
xor
call
lahf
clc
call
xor
cmp
cmp
push
popa
mov
ss
fcompl
sbb
mov
jg
cmpsb
negl
out
pusha
push
js
xchg
xor
xchg
mov
call
dec
xchg
push
xor
and
outsl
pop
test
andl
mov
cmp
hlt
mov
xor
or
push
and
adc
sbb
pop
mov
jne
ljmp
push
in
and
inc
popa
in
into
dec
mov
jp
push
cmovae
stos
imul
mov
cli
and
xchg
repz
stos
lock
mov
movsl
aaa
sti
repz
push
xchg
cs
mov
mov
sub
idivl
shr
mov
ret
xor
mov
inc
push
pop
int
js
es
repnz
mov
in
sti
add
fildll
lret
fldt
movsb
outsb
negb
cs
mov
mov
enter
inc
cmpsb
daa
push
sub
xchg
dec
xchg
mov
jge
dec
scas
clc
push
mov
push
mov
jle
inc
mov
test
dec
test
jg
mov
dec
repz
sub
into
ss
lcall
sti
outsb
jne
sbb
fisttpl
shrl
add
xchg
sub
popf
call
push
sub
in
lahf
ja
test
add
inc
scas
mov
je
cmp
mov
and
scas
or
inc
fdivp
dec
mov
cld
and
lea
or
mov
orb
sub
js
fcmovnbe
mov
outsl
or
sbb
cmp
imul
dec
hlt
dec
and
or
mov
gs
stos
outsl
in
fwait
mov
xchg
xchg
repz
mov
scas
push
dec
cmc
and
or
test
mov
jle
and
pushf
cmp
fidivs
sti
insb
in
stc
enter
pop
cltd
arpl
subl
rcrl
mov
rclb
daa
push
in
mov
lods
jl
fdivr
dec
mov
jmp
jle
jp
mov
fists
cltd
sbb
push
ret
mov
add
repnz
inc
and
pop
jnp
fisttpl
fnstenv
pop
ss
into
insb
xor
rclb
xchg
arpl
jecxz
mov
mov
sub
push
ficomps
in
inc
test
mov
gs
rcll
arpl
dec
pop
into
js
sub
jge
iret
fdivl
fisttps
xchg
cmpsb
inc
addr16
xor
xor
cltd
mov
sub
jns
test
test
adcl
js
dec
and
dec
dec
adc
les
xchg
push
add
cmp
pop
and
jl
cmp
lods
mov
gs
in
jmp
inc
or
in
cmpsb
dec
xor
jb
gs
loop
insb
fdivl
and
dec
nop
or
pusha
xchg
mov
jae
rorl
push
xchg
push
push
or
xor
jae
js
adc
es
mov
mov
mov
movl
in
cwtl
inc
lahf
and
or
sahf
adc
xchg
push
cmp
sahf
sbb
outsl
jbe
stc
icebp
dec
lret
pop
out
xor
push
lods
mov
lods
js
in
pusha
add
push
and
daa
jno
sarl
mov
sbb
or
not
addb
sti
rcll
sbb
fucom
ja
cs
lock
data16
xchg
loop
add
mov
fidivl
les
idivl
test
dec
xor
pop
add
jle
sbb
bound
repnz
add
sbb
mov
dec
inc
push
dec
in
popf
mov
adc
fisttps
pop
sahf
addr16
out
pop
fisttps
add
repnz
and
pop
out
push
jle
enter
aam
mov
add
dec
ds
decl
or
outsl
call
movsl
jnp
pushf
bound
lahf
je
inc
shlb
fsubr
jp
cmp
adc
in
lcall
enter
cmp
mov
rcl
negl
jnp
add
dec
inc
mov
sub
push
mov
jl
mov
dec
xchg
add
mov
out
cwtl
int3
jl
and
and
or
ljmp
loop
insb
xlat
adc
ja
or
and
cli
xchg
loope
mov
cmpsb
jbe
insb
cltd
cs
imul
out
ljmp
dec
into
xchg
cs
fnstsw
faddl
sub
shrb
stos
mov
adc
stos
add
xchg
push
pop
push
sahf
cmc
outsl
scas
in
cmp
test
sti
xchg
adc
out
mov
add
xor
das
leave
fwait
push
push
jno
fldl
mov
mov
jge
idivb
xor
xor
xchg
imul
jnp
inc
std
dec
xorb
sub
xor
xlat
pop
enter
add
retw
int3
popf
cwtl
sub
dec
and
sbb
pop
in
outsb
jmp
ja
mul
stos
push
and
cmpb
int
mov
aad
adc
add
adc
sbb
cwtl
dec
ja
icebp
xchg
and
lock
jmp
sub
sbb
je
jns
das
iret
out
mov
xchg
ds
mov
or
cmp
xchg
daa
in
inc
js
pusha
sahf
adc
dec
dec
loopne
test
jmp
jl
es
pop
cs
addr16
loopne
inc
aam
cmp
lcall
and
sub
pop
sub
bound
les
pop
mov
test
cmpsb
inc
jne
aaa
or
out
pop
pop
fld
je
mov
cltd
stos
jo
lods
add
dec
movsl
mov
mov
inc
imul
dec
pusha
and
mov
cmp
rol
icebp
in
inc
sub
sub
jge
insl
repnz
jno
sahf
cmp
dec
rol
inc
insl
cmp
mov
pop
shlb
push
les
insl
mov
mov
xor
xorl
loope
ret
vpunpcklqdq
sbb
adc
test
lret
mov
pusha
pop
mov
inc
scas
pop
loope
gs
add
movsl
xchg
dec
push
sub
mov
les
gs
mov
pop
push
xor
jg
pushf
jb
out
jg
fucomip
add
adc
xor
fildll
js
mov
cmp
idiv
cwtl
in
addb
stos
adc
lods
inc
loop
cmp
dec
jg
enter
mov
mov
enter
bound
lock
test
addb
insb
fidivrl
aam
aas
fldenv
push
xor
inc
cmp
adc
add
fcmovb
cmp
les
int
stos
lds
dec
mov
sahf
lcall
cmp
xor
fnstsw
nop
jno
inc
xor
int3
pusha
sub
xchg
lods
ficoms
inc
sub
cmp
dec
pop
inc
push
sahf
ja
push
ss
pushf
sti
xchg
fidivl
inc
xchg
outsl
stc
push
jge
push
pop
fdivrs
xor
sbb
das
fs
imul
sub
xchg
jl
mov
push
or
divl
add
cltd
dec
mov
cmp
test
test
sbb
andl
jecxz
and
ja
mov
cmp
xor
jno
or
push
pop
dec
inc
mov
inc
jbe
lds
mov
call
and
xor
movsl
arpl
nop
dec
in
add
inc
call
jne
cmp
xor
mov
mov
inc
adc
add
mov
inc
dec
test
sub
ficoml
pusha
mov
ja
inc
test
jae
loopne
movsl
cmc
stos
or
sti
or
mov
ljmp
adc
mov
cmpsb
jnp
sub
ret
mull
push
test
push
out
jl
lahf
js
sub
mov
sub
int
mov
lahf
jns
jae
sub
aas
in
ret
inc
adc
nop
push
mov
pop
cmp
add
in
mov
sub
sub
loopne
pop
add
jns
jne
xor
mov
jecxz
sbb
mov
gs
dec
fucomi
daa
hlt
pop
test
mov
loop
push
andb
and
aaa
mov
mov
xchg
adc
movsl
and
aam
into
fimuls
xlat
jecxz
hlt
pop
mov
cltd
adc
popf
lods
roll
mov
mov
call
test
std
repz
int3
int3
pop
push
mov
hlt
gs
inc
stos
push
in
mov
dec
push
repz
mov
daa
adc
and
dec
ds
popa
mov
out
leave
mov
inc
daa
test
in
test
jle
lods
insb
pop
shlb
mov
out
imul
das
jmp
test
pop
mov
hlt
ret
mov
xor
fsubs
or
or
mov
cmp
adc
add
fmuls
test
sbb
push
daa
pop
sbbl
out
cmp
sbb
fcoms
and
movsb
mov
dec
xchg
inc
pop
mov
inc
mov
insl
adc
popa
mov
pop
xor
mov
sbb
mov
mov
or
xor
mov
outsl
pop
cld
sub
lret
clc
test
mov
mov
mov
mov
in
mov
fucomi
dec
scas
lods
sub
aas
sbb
aad
and
cld
pop
xor
loopne
dec
mov
jno
mov
ds
jecxz
add
scas
adc
pop
mov
adc
mov
xor
in
jg
fxch
loop
pop
adc
pop
lds
movsl
test
mov
lds
mov
fldl
out
mov
jnp
movsl
xor
inc
push
scas
lahf
jge
shll
mov
push
xchg
pop
es
jbe
cmp
mov
xchg
add
xchg
mov
outsb
mov
test
mov
pop
xchg
ret
cmp
xchg
pop
movl
xor
mov
sbb
sbb
jmp
pop
push
shll
mov
xor
mov
mov
js
call
add
xor
push
stos
mov
sti
mov
mov
inc
jl
push
lret
dec
out
pop
loop
pop
leave
and
fbstp
cld
stos
sub
movsb
xchg
xor
jno
xlat
mov
jle
scas
mov
mov
push
dec
in
mov
stc
outsl
pop
inc
in
into
imul
lret
mov
fwait
add
mov
neg
jge
dec
pop
ficompl
jnp
sub
sbb
lret
push
xchg
or
cmp
das
clc
or
adc
adc
in
fsubr
loope
shrb
outsl
movsb
out
add
mov
dec
xchg
shrl
pop
and
in
orb
sahf
xchg
mov
xor
loopne
sahf
std
sbb
mov
xor
xchg
sub
insl
adc
dec
insb
outsl
sahf
loopne
mov
ds
cld
lds
cmp
or
push
testl
adc
mov
mov
sbb
imul
movsl
addr16
pop
xor
fdivrs
mov
mov
orb
sbb
and
jl
dec
cwtl
outsb
pop
xchg
xchg
mov
int
ret
push
mov
mov
mov
dec
ljmp
and
add
in
nop
or
xorb
jge
mov
cmpsl
mov
dec
mov
in
les
scas
pop
outsw
nop/reserved
mov
push
pop
stc
popa
push
dec
dec
add
fnstcw
cmpsl
push
fcompl
xchg
cwtl
int
or
push
or
lock
mulb
lods
xchg
imul
es
fdivl
mov
scas
mov
arpl
push
imul
ja
mov
dec
pop
in
daa
movsb
add
mov
stos
xchg
rorb
dec
and
mov
jle
add
push
mov
or
jp
inc
cld
pop
fstl
add
pushf
daa
push
fcomp
cmc
arpl
mov
mov
xchg
stc
test
out
xchg
fs
decb
fadds
jo
fcomp
leave
or
rol
gs
dec
movsl
add
rcrb
sbb
xor
lret
mov
lods
pop
aam
imul
cmc
xor
pop
enter
jp
int
outsl
or
ds
push
cld
push
cmp
aad
aad
sbb
and
sahf
xor
leave
mov
imul
gs
scas
ds
mov
das
inc
outsl
or
ss
jo
pop
sbb
enter
xchg
mov
lds
shlb
stc
lock
aaa
sub
lahf
sub
cltd
push
and
cli
negl
inc
cmc
pop
fstpt
pop
cmp
xor
xor
cwtl
in
cli
and
cmp
or
or
pop
incl
lods
jp
jb
jmp
pop
shll
out
sti
jne
jb
out
jg
dec
popf
push
mov
repnz
xchg
das
push
sahf
clc
insl
cmpsb
jae
test
push
mov
inc
incl
and
lock
pushf
sar
dec
push
int3
movsb
ss
pop
sbb
lret
mov
add
or
cmp
mov
out
adc
mov
mov
pop
mov
adcb
mov
cmp
mov
jle
sub
push
cmc
add
push
lea
aad
xchg
push
addr16
pop
mov
movsb
dec
mov
inc
testl
push
adc
mov
pop
aas
clc
mov
adc
insb
cmp
mov
lods
repnz
dec
xchg
push
pusha
push
int3
mov
bound
test
popf
inc
cltd
push
call
fldt
xchg
fcom
sub
lods
andl
pop
mov
loopne
jmp
jnp
mov
push
jp
shlb
push
mulb
fidivl
jo
xchg
lret
jecxz
adc
sub
xor
lds
mov
and
jle
push
and
pusha
sub
cmc
jb
inc
xor
ss
fldcw
stos
lret
scas
sti
jo
cmp
jns
nop
dec
jno
xchg
push
insl
jg
std
adc
lcall
in
iret
outsl
inc
aaa
jns
jnp
rep
cmc
xchg
loope
rclb
cwtl
sbb
pop
fisttpl
mov
je
cmpsb
sub
or
aaa
notl
mov
xchg
dec
jge
and
pop
xchg
inc
mov
je
mov
aam
fwait
mov
inc
scas
ja
sbb
cltd
in
out
test
xchg
dec
mov
xchg
sti
mov
pop
dec
push
shrb
jnp
rolb
pop
mov
cmp
cmpsl
ficompl
mov
ret
push
fwait
sbb
call
test
dec
je
pop
mov
pushf
das
jae
push
inc
movsl
ljmp
sbb
loope
mov
cmc
jno
pop
xchg
aam
outsb
add
std
add
dec
cmp
pop
jmp
das
lods
add
enter
cld
aam
sub
cld
call
aas
jmp
cmpl
ficoml
mov
xchg
insb
mov
jno
call
inc
ret
sub
and
jnp
pop
test
cli
cwtl
pop
push
int3
fdivrl
xchg
out
fs
push
sbb
cmp
dec
or
push
call
orb
mov
xor
lods
out
out
sub
imul
add
xchg
and
insl
loope
outsl
xchg
mov
aas
pop
fnstsw
lds
or
adc
mov
add
xlat
or
outsl
fidivrl
es
fs
popa
loope
jbe
mov
call
pop
sarl
sbb
int
add
cmc
pop
fidivl
cmp
cs
inc
xorl
adc
mov
mov
pushl
shld
add
dec
addr16
scas
add
jae
pop
mov
xor
xchg
arpl
add
neg
scas
je
in
adc
sub
in
icebp
hlt
inc
stos
mov
ret
jge
lods
out
mov
incb
push
lcall
ja
and
cld
adc
xchg
jns
jecxz
aas
xor
dec
pop
lret
sub
sbb
loopne
push
int
push
pop
pop
push
ljmp
ss
clc
repnz
scas
fcomps
jnp
in
pusha
out
aas
test
lcall
sub
or
cmc
addr16
cs
cltd
ror
in
pop
sarl
xor
or
testb
jbe
movsb
cmpsl
shlb
imul
push
test
sub
adcb
mov
pushf
xor
jmp
xchg
sbb
repz
addb
addr16
ret
push
push
xor
xchg
xor
dec
test
outsb
xchg
mov
out
fisttpll
lcall
adc
mov
xor
mov
inc
shl
jp
rorb
mov
repz
inc
cmp
out
aas
jge
nop
ja
push
adc
mov
add
xchg
push
jbe
scas
mov
cmpsl
fsub
lret
cmp
loopne
test
inc
out
lods
push
movsb
xor
jmp
imul
and
pop
dec
ds
ljmp
push
imul
add
inc
sub
sahf
dec
cmpsl
dec
ret
mov
xor
adcl
and
jle
push
mov
lahf
mov
inc
flds
pop
es
xor
cmp
jecxz
mov
out
lods
inc
cmp
push
mov
mov
icebp
out
xchg
mov
push
mov
lods
mov
jmp
pop
lcall
inc
push
insb
jbe
xchg
sbb
adc
lods
lret
into
lock
dec
in
sbb
js
lret
jnp
push
and
idivl
or
cmpsb
les
jle
mov
pop
aas
cmpb
mov
aad
clc
add
inc
daa
lret
or
int
push
dec
sbb
fidivs
hlt
xor
sub
and
xchg
fsubrs
pop
enter
cli
cmp
jl
loopne
cld
icebp
bound
cwtl
sbb
sbb
mov
dec
call
push
mov
loope
cmpsl
in
push
stc
pop
mov
fcomps
sbb
mov
into
jl
sti
push
mov
scas
and
mov
jecxz,pn
out
mov
mov
in
and
ret
gs
cmp
add
push
cmp
jb
pop
loope
mov
mov
cmpsl
xchg
xchg
repz
or
or
dec
andb
sar
sti
sub
xor
dec
pusha
enter
pop
leave
push
jne
iret
cmc
popf
icebp
shll
sub
sahf
or
cld
movsl
xor
push
jno
fldl
add
add
scas
bound
bound
push
repz
ljmp
and
pop
pushf
stc
dec
jno
dec
push
rcr
imul
cmp
leave
scas
ret
dec
xlat
stos
out
insl
aad
xchg
push
jge
iret
xchg
data16
cmpsl
or
pop
jbe
fs
and
call
push
or
imul
stos
cmp
cmpxchg
xchg
mov
push
dec
dec
xchg
cmp
js
outsl
mov
aam
popl
push
mov
sbb
fwait
test
mov
push
loop
xor
loopne
fadd
decb
mov
jp
ret
in
push
inc
jg
pop
pop
rorl
stos
xchg
push
xchg
push
orl
aaa
push
dec
cmpsl
lret
ret
mov
sti
test
ret
mov
dec
mov
daa
dec
repnz
clc
negl
add
icebp
push
push
std
mov
out
xchg
lret
mov
dec
push
xchg
or
std
pop
std
pop
mov
in
fcoml
cmpsb
sub
push
add
or
pop
push
pop
inc
add
cmp
push
gs
mov
out
addr16
fimuls
jae
repnz
aam
fbld
clc
sbb
inc
push
and
jge
jae
shrb
loopne
xchg
nop
mov
dec
out
fnstcw
into
arpl
icebp
inc
sbbl
xor
dec
lret
sub
dec
sub
dec
les
les
adc
mov
and
mov
scas
mov
rorl
cmpsl
stc
fdivp
dec
and
lock
inc
jnp
in
rclb
dec
jl
sahf
lods
mov
xchg
push
mov
out
inc
jbe
jae
xchg
xchg
shlb
sahf
add
mov
jmp
add
xlat
data16
xchg
cli
arpl
pusha
ds
push
jnp
mulb
xchg
aad
cmp
test
pop
pushf
mov
bound
inc
sbb
rcrl
cmpsl
mov
xchg
mov
cltd
pop
pop
cltd
mov
add
mov
pop
lods
mov
and
aam
sub
push
mov
mov
xchg
sar
and
sub
shlb
mov
sbb
mov
jno
xchg
inc
es
sti
add
jp
cmp
push
out
jb
cmpsl
cli
lahf
stc
sbb
imul
add
mov
andl
aas
loop
xchg
mov
lds
jmp
sub
mov
dec
shlb
mov
sbb
push
ret
mov
lods
dec
sub
or
in
stos
in
xchg
leave
mov
inc
sbbl
jb
jle
arpl
movsl
mov
push
xchg
jne
mov
fs
mov
mov
daa
push
mov
push
mov
pop
loop
add
popf
icebp
cmc
add
shl
jo
jbe
dec
lcallw
add
rcl
xor
mov
mov
inc
push
push
push
ds
sub
imul
fdivs
cmp
sar
pop
push
jne
adc
push
movsl
sti
bound
mov
inc
jp
rcll
daa
pusha
sbb
jmp
rcll
fmuls
mov
addr16
mov
push
pop
shll
mov
cli
je
xchg
adc
scas
jg
cmp
repnz
mov
adc
loop
bound
mov
xorb
aaa
insb
xor
adc
lods
mov
nop
xor
out
jge
fs
stos
or
dec
xor
pop
insb
push
fcmovne
adc
push
out
jmp
mov
iret
mov
mov
lods
dec
xchg
mov
pop
sbb
rorl
cs
je
lahf
xchg
adc
sbb
push
js
mov
lods
add
xor
mov
outsl
test
mov
xor
stos
addb
mov
movsb
into
jmp
jge
pop
dec
ss
out
jg
scas
cmp
pop
cmp
adc
fs
xchg
lea
insb
cmp
inc
lods
scas
inc
bound
fistpl
stos
jno
ret
dec
ja
or
sahf
cmp
fdivrs
pop
push
mov
lcall
pop
pop
leave
cmp
mov
test
sbb
adc
dec
mov
fsubrs
and
aam
fs
or
mov
test
cmp
mov
mov
cmc
cmp
shl
add
aaa
push
ljmp
xchg
xor
fwait
inc
orl
ret
pop
addr16
xchg
in
cmp
or
push
pushf
arpl
mov
xchg
mov
in
fstpt
mov
stc
sub
imul
imul
sub
push
fidivrl
dec
bound
andb
inc
adc
rcrb
out
mov
andb
cltd
adc
and
fwait
push
push
arpl
dec
push
adc
inc
inc
js
jbe
xor
scas
cmp
idiv
mov
cmp
sbb
test
aas
and
lock
movsl
mov
aaa
push
lahf
xor
pop
add
mov
adc
add
dec
xor
mov
xor
cs
mov
mov
out
lods
icebp
outsl
mov
or
ret
mov
icebp
std
jo
fs
ret
pop
inc
test
xchg
dec
sar
leave
push
dec
pop
xchg
xor
xchg
or
sub
or
xchg
dec
loopne
push
pop
test
xchg
dec
mov
mov
ficoml
adcb
push
pop
mov
adc
stos
sub
and
mov
inc
sar
fwait
jmp
ret
push
popf
popa
push
cwtl
mov
jnp
or
adc
cmp
scas
mov
fmuls
push
push
and
cwtl
decb
pushf
nop
dec
jno
in
xor
pop
imul
ret
pusha
pushf
shl
mov
push
aad
pusha
cs
pop
lds
push
sbb
jae
out
add
jns
aam
out
jno
shlb
js
sbb
in
aas
es
enter
lcall
cld
cmp
push
jne
rol
lret
mov
ds
push
test
push
aad
test
xchg
outsb
out
aam
js
jnp
push
add
test
or
outsb
xchg
xor
cs
lods
xor
xchg
sti
pop
inc
daa
in
shl
dec
repnz
stc
iret
loopne
leave
sahf
fidivl
pop
xorl
ja
flds
dec
fcompl
jecxz
mov
jae
int3
jg
fsubs
out
ficomps
mov
dec
mul
push
push
sub
es
sbb
test
jo
divb
mov
mov
pop
push
pop
out
jl
xchg
or
cmpsb
and
jbe
dec
rolb
pop
dec
jne
js
cld
inc
shll
and
adc
cmpsb
xchg
outsl
ss
jl
cmp
neg
sbb
push
ss
dec
push
push
xlat
inc
in
int
cs
aad
jmp
pop
pop
sub
sti
mov
jns
in
jne
dec
dec
xor
fisttps
pop
cmpl
jbe
popf
mov
dec
sbb
mov
ret
add
faddp
inc
fisttpl
imul
mov
mov
mov
lcall
call
jle
mov
mov
add
pop
addr16
arpl
xor
es
std
push
adc
pop
adc
mov
push
movsb
lods
fiaddl
sbb
push
stos
repnz
arpl
jecxz
notb
fistpll
or
test
aas
adc
shrl
dec
icebp
aaa
sti
inc
or
pop
int
insl
test
dec
mov
pop
adc
ljmp
and
pushf
and
jne
idivl
jmp
in
sub
lret
jne
lret
ds
leave
lcall
mov
test
jb
add
or
jl
or
inc
mov
in
fdivrl
xor
jnp
ficoms
sbb
mov
int3
and
jno
in
inc
outsl
pop
mov
xchg
sub
and
sbb
cmc
mov
sbb
rorb
xchg
inc
mov
sub
add
rcll
int
out
xchg
testl
call
mov
pop
fmull
pop
mov
sub
mov
nop
loop
pop
mov
movsb
mov
insb
shl
lcall
or
inc
xchg
sbb
pop
jae
int3
jo
hlt
push
fiadds
flds
xchg
fmul
xlat
popf
push
subl
fsubrp
adc
sub
mull
shr
dec
notl
out
mov
imul
icebp
mov
js
mov
xchg
test
mov
dec
dec
lea
bound
xchg
cwtl
lea
xchg
adc
add
cmp
aaa
xchg
fnstsw
or
mov
add
pusha
sbb
repz
mov
inc
out
std
sahf
pop
xor
int
lock
shlb
fwait
outsb
repnz
pop
lret
iret
push
xor
in
push
mov
mov
add
jnp
add
adc
cltd
lods
arpl
aam
mov
pushf
loopne
adc
stc
push
jecxz
sahf
pop
loope
mov
repz
dec
je
cld
or
or
test
fiaddl
xchg
mov
mov
push
pop
sub
jnp
sbb
and
mov
inc
mov
xchg
pop
mov
js
sti
xchg
arpl
pop
fldt
and
movd
int3
sub
inc
adc
xchg
out
orl
fcmovu
jl
xor
xchg
out
inc
scas
in
pop
xor
sbb
mov
dec
int
add
sbb
cmp
lods
pop
jge
mov
ljmp
imul
mov
mov
fsin
sbb
cld
or
fstpt
sbb
inc
mov
lea
mov
mov
fmull
and
test
stos
fistpll
mov
cmpsl
out
pusha
xor
popa
xchg
arpl
in
lret
adc
and
adc
scas
call
dec
in
mov
cmp
mov
clc
dec
sbb
sahf
jmp
ss
mov
addr16
mov
aas
mov
xchg
cmp
popa
cmp
aas
clc
sub
mov
lods
xor
pop
xor
push
je
mov
sbbl
xor
insb
sub
sti
push
movsb
jmp
aas
out
icebp
insb
push
push
mov
xor
push
mov
mov
mov
fsts
inc
lods
adcb
test
mov
jg
inc
and
dec
mov
js
lods
and
mov
or
stc
jle
sbb
mov
pop
adcl
out
or
mov
js
fwait
ljmp
lea
push
pop
xchg
fdivrl
xor
js
stos
xchg
in
xchg
sub
les
inc
ret
sbb
jne
mov
aam
inc
push
movsl
jns
ror
jmp
loopne
push
inc
shll
cmp
mov
in
fistl
dec
sub
adc
dec
or
jg
pop
loope
mov
add
icebp
mov
sbb
ret
bound
xchg
shlb
in
push
das
xor
add
cmp
mov
cmpsl
push
pop
je
add
ret
pandn
rol
ja
xchg
xchg
bound
inc
dec
clc
pop
cmp
lods
mov
addr16
add
sarb
sub
outsl
pop
xchg
jle
push
popa
hlt
adc
xor
outsb
hlt
push
stos
mov
stos
fsubs
mov
cmc
pop
test
adc
and
mov
xchg
xor
ret
xchg
outsb
in
and
fldl
ja
cmp
jbe
jae
xor
dec
stos
andl
iret
int3
pushf
out
mov
push
cli
mov
or
test
inc
inc
sub
or
or
clc
hlt
rclb
rorb
loop
push
negl
xchg
push
movsb
jns
or
cltd
add
cmp
es
fidivrs
in
jmp
sbb
inc
rcrb
insb
and
xor
adc
les
insl
xlat
and
xor
clc
jne
imul
lods
inc
pusha
lret
xchg
ficoms
and
and
inc
cmp
out
xor
fld
adc
fsubrl
int3
mov
inc
jo
add
imul
pop
dec
push
push
stos
xchg
repnz
aam
iret
dec
je
cmpsb
mov
or
imul
repnz
inc
jmp
mov
imul
or
in
lea
addr16
es
mov
stos
rclb
das
push
mov
mov
jg
ds
sub
xchg
jnp
lods
inc
fldl
in
cli
jecxz
ret
pusha
in
daa
push
cmp
jae
fs
repz
xchg
or
outsb
imul
je
bound
aas
mov
xchg
cmp
or
movsl
jae
cmp
adc
arpl
sahf
and
xlat
mov
out
push
xchg
pop
scas
subb
jmp
int3
and
cmpsb
lods
in
and
movl
sub
popf
ret
xchg
jae
and
fsubrp
les
sbb
mov
in
pushl
dec
lds
cmp
xorl
insb
imulb
or
sti
ja
mov
xor
xor
mov
int3
xchg
adc
pop
movsb
test
test
and
test
xchg
jbe
in
das
push
jp
repnz
xchg
sbb
pop
fs
mov
sub
jmp
mov
mov
xor
fldt
cmp
push
or
sub
or
jnp
cmp
ljmp
sub
jns
jl
push
sub
xor
clc
mov
mov
sbb
push
out
int
push
adc
les
bound
stc
add
or
xchg
and
repnz
cmpsl
mov
dec
push
add
das
mov
push
dec
xor
jge
aas
outsb
sbb
pop
jnp
lods
pop
xchg
xor
stos
les
lods
mov
adc
lahf
jne
rcrb
pop
mov
jo
js
sub
inc
adc
cld
pop
leave
or
mov
lods
mov
outsl
scas
lods
mov
jp
sarl
insb
mov
repnz
push
addr16
or
mov
xlat
movsl
dec
cmpsl
sbbl
les
pop
popa
sub
pop
fsqrt
dec
arpl
lret
aas
lock
into
adc
or
imul
add
xchg
xchg
icebp
xor
xchg
in
push
mov
jb
mov
pop
test
mov
into
xor
inc
cld
mov
es
lods
sahf
sub
shlb
jne
in
push
or
je
js
inc
mov
loope
repnz
dec
mov
subb
lea
cld
push
or
inc
mov
int
pop
jmp
mov
sbb
into
fldt
shrb
popf
jo
cs
hlt
jne
dec
push
xlat
pop
insl
insb
loopne
jmp
xchg
mov
push
xchg
xchg
and
cmc
ja
cmp
jmp
mov
in
xor
sub
sahf
rcrb
cmpb
push
pop
out
mov
cli
shll
dec
mov
rcl
dec
mov
mov
push
in
mov
cmp
xor
outsl
inc
push
mov
sbb
mov
adcb
stos
hlt
jo
enter
cmpsb
inc
sarb
inc
pop
lock
mov
mov
add
mov
push
xor
push
mov
stos
mov
mov
push
in
sub
mov
loopne
push
xor
push
out
cltd
daa
jno
mov
pop
je
xor
fdiv
xchg
xor
mov
and
dec
cmp
stos
cmpsb
hlt
repnz
ss
adcl
std
data16
inc
lret
mov
sbb
cli
stc
add
aas
pop
or
cwtl
and
lods
cld
sbb
xor
shlb
out
or
repnz
jmp
les
mov
mov
pop
pop
push
sub
insb
out
and
call
xlat
dec
inc
xor
add
dec
cltd
rcrb
mov
outsl
sub
adc
xor
mov
dec
idivl
stc
ret
jno
data16
or
xchg
js
insl
sbb
fcmovbe
ss
xchg
jne
iret
cmc
mov
cmpsl
insb
jle
sbb
cli
jb
sub
std
sub
icebp
psrld
sub
cld
push
pop
cld
mov
xchg
fstl
stos
sub
les
and
je
cli
or
outsl
xchg
push
sahf
and
adc
ss
clc
xor
pop
push
push
or
xor
mov
insl
inc
mov
add
or
and
xor
and
cmp
hlt
jle
scas
in
int
pop
lock
inc
jbe
lea
test
pusha
out
jbe
dec
ret
icebp
inc
sahf
imul
mov
lea
sbb
sub
andl
and
jns
jnp
xchg
lret
push
cs
pop
out
bswap
in
into
sbb
jge
fldcw
mov
outsl
xor
mov
outsl
and
into
xchg
bound
enter
adc
push
rcrb
lret
push
ret
pusha
stos
movsl
jae
mov
jmp
mov
jbe
clc
pop
test
clc
movsl
scas
bound
aas
or
sub
cmpsb
sub
movsb
sub
xor
dec
dec
test
adc
stc
push
sub
je
jmp
inc
ficoms
mov
push
out
mov
push
mov
xchg
icebp
xor
xlat
jns
fcos
sti
lcall
bound
lcall
pushf
sbb
lret
movsb
shrb
cld
aam
insb
xorb
and
dec
lret
mov
call
call
push
cmp
or
scas
push
pop
daa
adc
push
xchg
jecxz
int
cmp
notb
push
pop
sbb
icebp
sub
mov
out
and
cli
push
xchg
cmp
testb
loop
outsl
push
mov
test
mov
ja
fcomp
outsl
jle
orl
imul
push
mov
insl
adc
inc
jbe
xor
add
test
inc
out
add
push
jmp
pop
jle
push
cmp
add
jbe
mov
xchg
xor
or
jae
sbb
daa
push
xor
jno
add
xchg
ljmp
test
into
or
xchg
fwait
cld
ficomps
movsl
cwtl
std
sub
clc
sub
jno
pop
repz
push
lcall
push
and
dec
sub
stos
sub
inc
aad
lock
imul
and
ffree
ret
inc
int3
push
jo
jl
out
in
and
or
xchg
in
or
aas
popf
sti
adc
push
cmp
out
insb
shll
mov
out
mov
fcmovb
push
add
enter
cld
in
fdiv
push
mov
int3
insb
insb
pushf
out
sbb
and
fnstsw
mov
xor
ret
push
enter
inc
lds
ja
jbe
sbb
sub
addr16
jns
insb
and
fldt
pop
cmc
sbb
fwait
mov
push
sub
pop
mov
std
ds
or
iret
cmc
cwtl
pop
daa
stos
push
mov
cltd
mov
daa
cmp
outsb
ja
cli
aas
andl
add
and
lahf
scas
fldt
sub
mov
add
data16
leave
in
lods
fsubrs
jno
mov
scas
imul
pushf
sarb
insl
mov
jg
jmp
mov
sub
pop
cmc
idiv
inc
mul
inc
add
loope,pn
dec
aad
shll
sarl
adc
movsb
fs
jg
gs
mov
int3
fistpl
cmp
jle
fwait
pop
or
dec
loopne
repnz
cld
shlb
inc
mov
in
mov
mov
fdivrl
mov
pusha
xchg
add
mov
pcmpgtw
mov
fidivrs
aas
retw
push
fmuls
cmpsl
sub
jne
cmp
jmp
stc
sti
inc
test
test
pop
int
mov
jge
pop
ret
xor
loopne
popf
fwait
bound
push
push
jecxz
or
adc
test
mov
adc
aad
xor
inc
sbb
cmp
dec
mov
sbb
mov
fdivrp
imul
add
mov
pop
jge
shrb
movntps
push
mov
into
or
and
xchg
pop
jp
movsb
add
incl
lahf
jae
mov
test
mov
outsl
lea
cmc
xlat
xor
hlt
push
dec
jle
or
mov
bound
mov
fcompl
fsubrl
jmp
scas
jo
mov
in
dec
rclb
xchg
jp
popa
sub
bnd
stos
int
repnz
lcall
mov
mov
mov
test
leave
mov
xchg
dec
fisubl
scas
stc
out
test
pop
xchg
sbb
mov
ljmp
jae
inc
mov
adc
fs
xor
std
mov
inc
push
and
ja
add
call
and
outsb
mov
mov
jo
lods
iret
ret
test
js
adc
mov
ljmp
add
dec
dec
jle
pop
mov
sub
cmp
cmp
fbstp
pop
jo
insl
mov
jmp
jbe
xor
aad
out
jmp
xchg
cmp
mov
ret
mov
test
or
ret
push
pop
sahf
and
jbe
push
repnz
mov
and
xchg
loope
ss
xor
push
cli
cmp
adc
int3
jl
xchg
jge
push
adc
aad
xchg
divb
stos
sahf
int
rorb
cmpsl
fisttpll
sbb
mov
jno
push
scas
xor
inc
push
or
out
sarb
repnz
dec
add
xor
out
mov
mov
jns
mov
test
xorl
xchg
in
inc
cmp
xor
fstl
popa
mov
push
xorb
mov
add
fs
sbb
xor
in
fildll
std
pop
lcall
aad
jmp
sbb
pmuludq
sbb
jb
push
push
cmpsb
xor
out
addr16
mov
push
and
lahf
jl
dec
pop
cmp
sub
mov
dec
jb
mov
xlat
loop
push
dec
lock
dec
cltd
pop
imul
aaa
rclb
leave
mov
lret
xchg
movsb
fmuls
insl
pop
mov
push
cld
adc
lahf
adc
cmp
jb
sub
pop
jle
sbb
xor
mov
sub
inc
fidivrs
popa
fstpl
mov
cmp
mov
shl
dec
outsl
xor
mov
fiadds
jp
sbb
in
mov
cmp
jmp
repnz
fiadds
das
sbb
dec
xchg
aad
out
ja
test
adc
out
movb
das
or
pop
add
iret
rsqrtps
mov
sub
mov
mov
aad
inc
or
lods
repz
jb
sbb
outsb
adc
dec
cmpsb
int
sub
xlat
xchg
lea
lea
xchg
jp
aad
and
sbb
insb
cmpsb
push
leave
mov
inc
cmp
inc
repnz
cmc
xchg
bound
dec
pushf
shrl
or
xchg
fmulp
syscall
pop
inc
cmpsl
pop
mov
xor
and
ss
jge
add
push
add
push
mov
xchg
add
shl
insb
inc
les
jmp
pop
enter
inc
lods
loop
jmp
mov
cld
pop
xchg
in
mov
sub
mov
sub
shlb
cmpsb
dec
das
mov
pop
loop
jb
into
sbb
lahf
inc
jbe
mov
lds
ret
ja
mov
mov
scas
movsl
mov
push
sub
shlb
stos
loopne
stos
xor
or
mov
sub
aad
out
sbb
add
shl
aad
cli
cmp
push
jle
inc
jno
adc
in
dec
xchg
les
dec
jle
jae
jo
aad
dec
daa
cmp
pusha
or
je
ljmp
push
inc
call
jne
cmp
adc
push
dec
xchg
sarl
jbe
cmc
ss
mov
addr16
jo
mov
hlt
add
mov
xor
lds
rorb
mov
jb
dec
sahf
imull
mov
push
push
int
aam
cli
xor
inc
dec
stos
or
xchg
iret
xchg
ss
es
ret
outsb
jle
xor
aas
xchg
mov
xor
test
lods
mov
imul
out
cltd
mov
cld
xchg
arpl
mov
into
sbb
inc
cltd
arpl
mov
imul
push
ss
cmpsb
imul
loopne
int3
fstps
inc
mov
and
add
jmp
jl,pt
insb
mov
cmp
mov
stc
mov
jns
cmp
cli
lods
push
adc
dec
lret
mov
lea
call
pop
sub
aam
jp
jmp
inc
aas
scas
ja
shll
push
fwait
inc
rorl
dec
xchg
ds
sbb
call
jge
cmp
sbb
pop
js
rolb
inc
insl
divb
jns
cvtps2pd
xchg
mov
push
mov
xor
mov
push
cli
jne
sub
xor
int3
cmp
or
int
fiaddl
fwait
dec
mov
mov
push
clc
and
outsb
cmp
fcompl
inc
stos
das
push
stos
jl
cli
scas
cmpsb
cmp
popa
or
testb
pop
inc
cmc
cmp
jo
js
popf
xchg
pop
imul
or
sub
subl
pop
enter
mov
out
dec
xor
out
pop
cwtl
pushf
ret
hlt
movsl
xorb
into
push
pop
and
pmaddwd
daa
fcomp
mov
popf
int3
jmp
leave
je
in
pushl
cmp
popa
push
xchg
jae
pop
xchg
cltd
jns
int
pop
xchg
iret
hlt
or
mov
test
pop
out
lea
test
mov
pop
inc
inc
jp
arpl
jmp
mov
ljmp
int
add
int3
in
nop
adc
ret
mov
cmp
jbe
pop
mov
int
clc
dec
adc
mov
cld
xchg
xchg
jae
jle
cmp
mov
mov
jmp
push
and
lea
jns
fld
mul
shll
xchg
or
pop
sahf
lahf
or
fcoms
repz
je
mov
dec
cmp
addb
dec
mov
dec
mov
popf
sub
add
jle
xchg
stos
adc
das
sbb
sti
in
ljmp
xchg
out
inc
cmp
daa
and
aaa
fs
subl
lock
out
push
mov
adc
cmp
into
mov
jns
mov
push
push
es
xor
push
gs
add
jmp
xchg
jle
movsl
fildl
icebp
sub
mov
push
xor
sbb
pop
pop
mov
pop
mov
mov
in
jge
das
arpl
mov
sub
xchg
sub
jg
cmp
jb
das
pushf
mov
lds
or
xchg
outsb
pop
cld
cmp
pop
dec
loopne
adc
xchg
inc
test
repnz
push
out
adc
les
in
lds
negb
push
xchg
sahf
out
loope
gs
arpl
jle
lahf
aad
pop
mov
xchg
add
push
sub
out
aas
xor
mov
popa
sarl
jbe
fwait
mov
aam
cltd
sbb
sarl
shlb
out
or
adc
mov
scas
or
mov
xchg
movsl
pop
jb
mov
outsl
pop
mov
mov
scas
sbb
pop
push
pop
arpl
es
fisttpl
pop
mov
lods
sarb
test
popl
xchg
bound
fwait
dec
jg
out
incl
xor
lcall
xchg
scas
std
dec
or
dec
jge
aaa
adcb
loop
mov
orl
pushf
cmpl
xchg
insl
enter
pop
enter
dec
or
sub
loopne
jp
in
rol
int
jp
clc
test
sbb
gs
stos
mov
ret
popf
ret
push
adc
push
xlat
push
and
xlat
jne
mov
xor
dec
loop
cmpsb
lods
mov
cmp
push
jnp
iret
rcrl
insl
lds
out
les
repz
inc
lahf
adc
hlt
adc
mov
dec
js
daa
pop
push
movsb
push
test
jp
jge
je
les
rclb
js
xchg
and
adc
into
cwtl
std
xchg
fadds
xchg
bound
cltd
push
sbb
dec
popf
dec
mov
int
test
sbb
mov
jmp
aaa
in
cmpb
cwtl
sub
mov
dec
xor
call
dec
clc
divl
xlat
adc
popf
push
mov
mov
mov
jae
mov
out
mov
adc
mov
xorl
pop
or
ds
out
outsl
mov
std
scas
push
jecxz
inc
lret
push
lret
and
out
fs
mov
or
sbb
mov
mov
or
movb
jo
xchg
aam
aam
push
cmc
sbb
nop
repnz
jbe
pop
and
jmp
loope
xor
in
leave
cmp
je
outsl
rclb
cpuid
ret
cmp
xchg
mov
cmc
dec
test
mov
or
push
mov
out
push
jae
mov
daa
jecxz
das
mov
imul
mov
dec
add
pop
sbb
int
xchg
xchg
sbb
cmc
mov
idiv
jmp
and
fisttpl
xchg
imul
int3
scas
loope
adc
out
outsb
das
mov
inc
cmc
mov
add
and
add
mov
mov
fs
das
sub
or
lock
lcall
jg
jo
sbb
int3
mov
xor
imul
shll
xor
xor
cwtl
inc
mov
mov
adc
std
cwtl
adc
fs
mov
pop
mov
mov
pop
adc
jae
cmp
shr
mov
push
leave
add
cmc
adc
imul
lret
and
test
mov
lcall
sbbl
pop
icebp
jo
pop
or
lret
das
outsb
icebp
fcompl
mov
pop
fprem
adc
add
lret
lahf
mov
popa
lret
cmc
cmp
arpl
rolb
push
mov
mov
js
inc
shrl
lods
ljmp
dec
jg
pushf
insl
mov
or
mov
ret
mov
stos
call
ret
push
roll
jl
fcmovnu
jb
lock
xor
stos
pop
push
mov
das
insl
arpl
jo
daa
imul
xorl
dec
push
add
imul
xchg
fildl
outsb
cmpsb
js
dec
loopne
mov
call
ljmp
outsb
aaa
pushf
push
std
pushf
insb
decl
out
sbb
adc
sbb
jno
mov
sbb
cmc
jb
mov
jl
inc
jne
sbb
leave
arpl
cmp
inc
sbb
dec
cmc
cmp
cli
xchg
xor
icebp
mov
xchg
mov
out
add
loopne
mov
movsl
sbb
dec
mov
mov
xchg
cmp
ds
testl
gs
mov
repz
inc
jbe
mov
push
outsb
subb
out
shrb
push
xchg
int3
and
jae
je
dec
jge
out
movsl
daa
jge
fadds
cwtl
hlt
repnz
cld
sbb
mov
lcall
and
inc
fsubrp
ss
push
lods
xchg
inc
xor
loop
add
lds
ret
popf
push
aaa
repz
in
mov
clc
int3
cmp
roll
mov
or
dec
hlt
shrb
jnp
aad
out
imul
lahf
push
jl
pop
push
adc
sbb
or
out
mov
imul
pop
sbb
rol
std
jne
mov
xor
sbb
xchg
xor
testl
cltd
cs
add
fdivrp
xchg
fwait
push
adc
pop
in
xchg
push
xchg
aam
lds
adc
test
xchg
inc
inc
sub
cs
xor
xchg
clc
cld
movsb
pop
daa
inc
adc
sbb
jo
popf
leave
divb
sbb
int
cmp
sbb
mov
sub
int3
inc
and
mov
fcmovnu
movaps
sbb
bound
mov
out
pop
add
add
add
mov
lods
pop
xchg
dec
jle
xor
mov
mov
sbb
sbb
sub
ret
jg
xchg
pop
mov
js
jg
test
test
adc
pop
out
loopne
enter
mov
fmuls
data16
jl
lahf
cs
stos
sub
dec
xor
jae
sbb
mov
clc
cs
mov
outsb
cmp
flds
or
and
scas
sahf
push
xlat
adc
add
sub
sub
add
cmpl
rorb
icebp
add
in
jb
das
push
popa
pop
fisubl
lds
shll
movsl
inc
in
mov
ja
cmpsl
movsb
mov
xor
cmc
loope
jge
dec
out
arpl
aaa
cs
enter
out
and
sbb
lahf
cmp
sbb
test
pop
jge
add
clc
xchg
xchg
cmp
and
mov
pop
and
xchg
out
pop
popa
int3
aad
sub
int3
movsb
inc
cwtl
movsb
push
inc
cs
repz
dec
loop
push
mov
xchg
jns
cltd
dec
xchg
pop
ljmp
into
push
jecxz
int3
push
cmp
call
popf
push
loope
jg
ljmp
imul
and
lock
test
shrb
xchg
aam
inc
test
fs
add
adc
push
movsw
ret
xor
cmp
mov
mov
rolb
rcl
push
arpl
scas
outsl
mov
bt
inc
xor
push
or
xchg
into
aad
push
mov
mov
pop
ljmp
movsl
js
lods
idivb
imul
push
sub
add
mov
inc
push
inc
inc
and
mov
mov
rcrl
push
negb
testb
adc
mov
testb
dec
jmp
pop
aam
xchg
fldenv
cmp
fcmovnu
jb
sbb
sub
pop
sub
add
mov
pop
aad
cmp
xchg
xor
dec
xor
loopne
push
mov
cmpb
xor
jb
in
pop
es
std
mov
jp
lret
mov
jns
xchg
les
mov
push
popa
mov
imul
mov
push
lret
adc
lea
ret
jne
loopne
bnd
push
out
lods
scas
jmp
movsl
mov
cmpsb
adc
mov
add
xchg
xor
push
push
insl
jp
push
inc
jp
push
sub
ret
enter
cmp
rcl
fcoms
hlt
mov
mov
or
jne
jns
fdivl
mov
sarb
xchg
lret
xor
jecxz
or
xchg
insb
cld
xlat
fwait
or
shll
lea
sub
popf
adc
push
or
xchg
xchg
xchg
dec
xchg
pusha
faddl
add
mov
xlat
and
add
ss
mov
mov
mov
out
in
sbb
pop
and
push
lds
loope
mov
pop
mov
or
dec
flds
sub
arpl
adc
pusha
jl
out
hlt
outsb
xor
mov
hlt
ficoml
aaa
cs
test
andl
cmp
shrb
jecxz
mov
sub
pop
je
out
inc
icebp
mov
add
cmp
sbb
rcll
out
mov
dec
cmpsb
aad
jo
pop
xchg
adc
jnp
pop
dec
jmp
or
pop
loop
or
stos
sbb
hlt
imul
mov
cmp
cltd
and
ret
sub
lock
dec
repnz
inc
xchg
pop
sbb
fwait
dec
sbb
sti
xchg
jl
cs
repnz
xor
jmp
insb
jp
aaa
inc
data16
in
or
cmpsl
jne
pop
iret
jo
cmpsb
test
inc
shrb
outsl
inc
insl
decb
outsl
data16
or
stos
dec
xchg
in
addl
push
fsub
ficoml
lret
mov
repnz
sub
cmp
loopne
sbb
adc
adc
insb
mov
mov
sarl
into
sarb
cld
ja
nop
js
in
mov
push
mov
pop
ret
jae
and
pop
insl
xchg
dec
push
lock
sub
scas
arpl
mov
outsb
pop
push
xchg
pop
pop
imul
mov
mov
push
mov
imul
xchg
dec
arpl
sbb
lahf
jne
xor
mov
mov
bound
rcl
iret
mov
or
ljmp
push
nop
sub
movb
insl
test
shr
sbb
lods
pop
push
xchg
pushf
mov
pop
adc
inc
xchg
das
mov
out
add
in
mov
sti
jnp
popf
sub
test
and
xor
cmp
nop
les
divb
or
mov
push
into
jno
sahf
adc
hlt
dec
in
icebp
hlt
lds
stc
movsb
sbb
jb
pusha
pop
add
push
clc
xchg
fidivrs
ror
dec
mov
lods
gs
mov
popa
sub
dec
lods
inc
pop
sti
cwtl
and
jmp
hlt
xor
cli
push
mov
jnp
mov
into
les
outsl
xor
fsubl
cmc
mov
divl
fs
add
mov
loopne
mov
push
dec
pop
xlat
insl
push
jno
jle
decb
rorl
leave
adc
test
das
and
xor
insb
pop
dec
movsb
scas
pusha
insl
lock
inc
bound
xor
inc
pop
push
mov
cmp
nop
jbe
sub
ds
jb
sahf
add
and
inc
and
or
xchg
shl
ret
or
test
mov
dec
addr16
or
cmp
mov
inc
es
stc
xchg
cmp
js
ja
or
mov
inc
and
fcmovb
xchg
or
call
shl
shll
aaa
sahf
icebp
fistpll
and
xchg
loop
bound
or
iret
sbb
imul
push
cltd
cld
jg
xchg
cmp
dec
cmp
lcall
cs
push
shlb
adc
ds
xor
aam
loopne
les
xchg
jns
lods
jno
sbb
dec
fucomp
mov
lret
sub
sub
push
ret
fs
inc
lds
or
xor
iret
leave
jbe
jns
dec
xchg
das
mov
dec
cmp
cmp
lahf
mov
cld
pop
sbb
repnz
test
fstl
es
outsl
jbe
mov
mov
imul
cmp
inc
adc
pop
mov
xchg
in
shrl
add
push
stos
pop
cmp
in
or
outsl
out
xor
enter
jg
add
mov
in
xchg
lcall
adc
popf
mov
adc
sarl
jns
sub
xchg
xor
sub
inc
fimull
push
cmpsb
es
mov
add
dec
push
scas
cmc
sub
dec
dec
cmp
pop
fwait
scas
mov
adc
sti
imul
fistpll
xchg
repz
adc
pusha
ljmp
xchg
std
out
inc
xor
mov
outsb
mov
adcb
pop
shrb
sbb
rolb
jp
mov
cmp
ljmp
and
jnp
and
addr16
orb
mov
push
stos
inc
jl
stc
xchg
insl
sbb
cmpsb
jbe
out
jmp
add
fidivs
hlt
inc
negb
fnstenv
xchg
fsubr
sub
adc
push
scas
adc
nop
push
inc
ret
in
pop
idivb
jbe
fwait
or
iret
push
mov
mov
mov
and
pop
adc
sub
sub
movsl
lret
push
pusha
jecxz,pt
shrb
jg
sub
xor
clc
scas
daa
enter
icebp
mov
jno
lds
push
push
fadds
jle
sti
adc
mov
in
pushl
ficoml
add
popf
and
push
aad
popa
xchg
or
sti
cmp
out
imul
adc
pop
mov
adc
dec
ja
test
cmpsb
jbe
or
adc
lret
adc
ret
and
lods
and
jns
mov
cmp
mov
jp
sub
jbe
inc
loopne
pop
aas
xor
lock
add
or
das
jnp
jnp
or
fwait
pop
and
shll
lea
in
in
and
mov
push
inc
jmp
jl
cmpsl
gs
adc
shl
sub
test
inc
or
jmp
push
std
les
mov
xor
sub
cmp
cmp
jmp
pop
nop
mov
outsb
xchg
outsb
xor
ret
dec
xchg
push
add
mov
add
test
add
les
ret
xchg
test
xor
adc
lods
arpl
data16
cli
jnp
fisubl
or
cmp
pop
add
test
ret
dec
cmp
mov
push
mov
or
pop
inc
dec
mov
stos
mov
mov
ds
jl
cmp
jg
shlb
movsb
mov
and
fsts
loope
inc
pop
jge
mov
fucomp
inc
and
sub
fisubrl
xchg
popf
xchg
enter
dec
inc
pop
lahf
jmp
xor
inc
shrl
cmpsl
in
out
xchg
repnz
sub
fidivrs
cmp
insb
cmp
mov
xchg
jo
aaa
gs
std
pop
mov
or
adc
mov
pusha
mov
repnz
int3
and
add
pop
inc
roll
test
jle
mov
scas
mov
ffreep
lahf
lds
fbstp
gs
xor
fcomps
cmp
inc
or
mov
xchg
push
jne
and
bound
push
and
dec
jle
inc
pop
sub
out
shrb
jge
sub
pop
jge
xchg
and
pop
clc
arpl
or
fcoml
adc
repz
repnz
xchg
add
fsubr
enter
inc
lret
xor
ret
addr16
push
xchg
pop
imul
push
leave
mov
rolb
es
mov
clc
dec
pop
add
bound
sub
call
fmull
pushl
and
sub
lret
repz
pop
popf
push
out
xchg
or
pop
movsb
fistpll
mov
jns
test
cmp
mov
inc
movaps
orl
mov
xor
and
jb
xchg
add
jle
pop
out
jne
push
xor
push
sbb
in
xchg
jecxz
pop
sarl
test
mov
into
loopne
inc
sbb
jo
push
iret
test
les
add
arpl
mov
jge
xchg
pushf
mov
and
je
jno
jnp
pop
lahf
dec
inc
stos
repnz
xor
sub
jne
push
lahf
in
call
dec
add
xchg
adc
and
movsl
in
cli
fcmovnbe
adcl
out
mov
dec
jle
xchg
hlt
movsl
out
jg
punpckldq
mov
icebp
andl
mov
pushf
pushl
es
adc
call
push
fs
adc
xor
pop
sbb
xorl
add
xchg
iret
jae
scas
inc
dec
aaa
pop
in
xchg
cli
sub
mov
jmp
cs
cmp
subl
push
cmc
mov
aas
stos
jl
or
ds
ds
stos
mov
pop
je
test
bound
sbb
imul
mov
and
mov
xchg
adc
sub
in
pop
mov
daa
xchg
imul
push
lahf
or
lcall
adc
pop
mov
scas
adc
xor
ja
mov
lods
inc
lods
je
movsb
and
fldcw
adc
push
je
inc
sub
sub
sub
fs
xlat
jp
fs
xchg
loope
sbb
jg
cmp
pop
adc
hlt
out
insb
jl
addl
mov
mov
add
repz
add
lret
mov
mov
lods
sbbb
test
aam
mov
jno
fadd
test
into
cmp
insl
sub
jnp
cmc
test
jp
or
mov
add
pop
inc
and
outsb
push
jae
dec
inc
cld
sub
pop
adc
push
pop
jbe
sbb
mov
lea
xor
cwtl
es
jb
out
dec
sbb
cmp
or
xlat
xor
xorl
iret
add
push
out
add
rcl
jmp
adc
or
pushf
std
out
push
mov
inc
cmp
push
adc
sub
push
cmc
or
or
addb
sbb
pop
jg
mov
xchg
push
clc
test
mov
add
ss
sbb
inc
lds
and
inc
movsl
add
in
xchg
aam
out
and
sbbb
mov
cmp
cli
aaa
shrl
pop
mov
test
outsl
ss
lods
xlat
jo
jle
fimull
sub
or
or
movsb
pushf
xor
out
push
outsb
jg
and
adc
sbb
int3
sbb
stc
cmp
call
mov
jnp
sub
aad
incb
push
fldcw
inc
out
imul
test
insb
adc
aam
mov
xlat
test
out
pop
inc
popa
movsl
adc
test
sbb
pop
push
push
icebp
inc
int3
out
jle
jnp
ljmp
scas
xchg
and
mov
mov
jp
mov
jg
outsb
imul
outsl
loopne
mov
xlat
test
jp
and
xorl
hlt
loopne
jl
add
jnp
mov
jnp
fnstenv
and
xor
cmpsl
pop
das
in
imul
fwait
das
aad
push
ja
cmc
cmp
push
mov
mov
fistps
movsl
into
out
mov
push
addr16
mov
daa
sub
std
mov
test
sbb
cmp
mov
xchg
les
dec
stos
hlt
jg
stos
js
jmp
negb
ret
pusha
cwtl
mov
adc
in
cmp
dec
es
jno
cli
cli
sub
ret
push
xchg
and
mov
push
lahf
xchg
mov
ret
in
add
mov
sub
pop
mov
fsubl
mov
addr16
stos
lahf
je
lock
ret
push
cmpl
cmp
and
sub
jae
sahf
lods
cmc
and
pop
fmull
ficompl
daa
pop
outsb
xchg
xor
jnp
push
mov
push
add
or
stc
hlt
sahf
pusha
mov
inc
mov
into
das
ds
enter
cli
repz
mov
and
mov
or
mov
sub
sbb
call
int3
mov
push
mov
outsl
lahf
cmp
mov
jle
pop
dec
ret
pop
lcall
jge
push
mov
insl
pop
sti
dec
adc
sbb
mov
pop
fistpl
je
lea
sti
add
sub
stc
int3
rorb
or
nop
mov
or
cmp
je
pop
arpl
int3
xchg
shll
aas
popa
xchg
sub
daa
pop
les
xor
in
fbld
cmpsb
mov
fmull
cmp
jl
pushf
stc
inc
pop
adc
pop
imul
stos
je
ja
add
stc
jmp
lea
xchg
xchg
aam
inc
lret
pop
push
cld
inc
pop
sbb
sub
insl
mov
xor
add
jg
fidivs
sub
pop
xor
sbb
cmp
cmp
pop
pop
sub
inc
and
jns
jecxz
jbe
inc
adcb
sbb
jbe
testl
sti
push
movsl
ret
xchg
jle
outsl
xor
jne
cmpsl
lds
pop
les
jno
sub
push
je
sub
test
cld
xchg
push
push
cmc
arpl
addr16
add
ljmp
xchg
loopne
loopne
push
sbb
test
jae
mov
and
ror
stos
jecxz
mov
push
popa
push
and
arpl
popa
push
pop
or
and
lea
and
outsb
sbb
jecxz
decl
fimuls
js
pop
mov
pushl
dec
mov
int3
sub
insl
mov
cmp
inc
movsb
das
cmp
xor
or
jno
dec
mov
sti
ja
addr16
mov
fcomp
pop
sbb
pop
stc
popa
push
pop
add
mov
cmp
sti
sti
mov
outsb
les
and
nop
idivb
xchg
jne
test
mov
jecxz
lret
push
mov
call
pop
add
xlat
in
movsb
jbe
adc
rorl
add
inc
push
jb
outsb
dec
clc
movsl
push
test
jp
sahf
fmuls
lahf
push
test
push
add
nop
and
lcall
sub
andb
pop
and
les
xchg
testb
sahf
je
das
test
add
and
dec
jge
fidivrs
sbb
xchg
inc
js
mov
add
scas
sbb
add
adc
std
mov
ss
test
pusha
mov
sub
ja
pop
out
xchg
pop
in
sbb
push
ja
cmpsl
ds
cmc
xor
pop
int
push
add
adc
stos
outsb
lret
mov
push
sahf
ret
mov
loopne
lds
mov
daa
xor
stc
in
cmp
mov
into
push
outsb
jnp
jge
dec
aaa
xchg
in
and
xchg
out
and
xchg
jno
mov
ja
aam
inc
loope
leave
mov
dec
push
ret
cmpsl
aam
jmp
push
xchg
iret
aam
dec
adc
sbb
loop
push
ds
or
or
negl
mov
push
sbb
pop
les
add
icebp
push
jae
mov
sbb
push
mov
or
cmp
bnd
les
add
push
jge
dec
dec
sub
stos
mov
clc
mov
stos
into
and
lret
mov
add
mov
and
pop
add
xchg
repnz
les
push
arpl
fsts
pop
rclb
shlb
aad
or
stc
callw
mov
int3
or
cli
and
lds
sarl
xlat
or
sub
jb
daa
xchg
or
popf
push
aas
int3
out
mov
incl
cwtl
lea
loope
js
pusha
push
jnp
aad
cmc
sahf
pop
sub
clc
xchg
and
div
nop
jl
shrb
xchg
or
jnp
jmp
pusha
pop
imul
mov
and
je
jg
sub
out
je
lret
cmp
push
icebp
adc
sub
cltd
je
mov
sbb
push
sbb
mov
movsb
inc
mov
mov
inc
loop
and
xor
mov
lret
test
push
add
push
aaa
cmc
and
outsb
add
pop
daa
sbb
rol
movsb
mov
cmp
mov
push
imul
xor
cmp
out
mov
fstl
movsl
sbb
inc
xchg
addr16
jno
mov
je
out
std
lret
addr16
pusha
out
sahf
or
into
push
popf
lret
imul
pop
js
stos
sub
sbb
xor
dec
adc
push
jl
jge
pop
inc
and
shll
mov
jno
iret
hlt
or
mov
cmpsl
data16
movb
push
out
dec
ret
sbb
and
out
inc
dec
push
pop
mov
inc
arpl
dec
mov
and
test
jno
repnz
vpunpckhqdq
scas
fdivr
mov
leave
imul
aaa
dec
test
inc
stc
xchg
daa
push
lahf
and
sar
push
mov
inc
mov
jae
inc
pop
out
lret
stos
lret
jl
sub
mov
pop
flds
pavgw
test
jg
loope
mov
xorl
leave
xchg
ds
pop
dec
cmpsb
stc
push
inc
mov
dec
dec
je
mov
xor
scas
push
push
mov
dec
jle
arpl
mov
loope
inc
inc
ret
cmpsb
out
ret
scas
xchg
sarl
mov
push
scas
loop
addl
jecxz
orb
adc
inc
push
js
or
into
xor
xor
mov
imul
ret
xor
shrb
and
mov
xor
sti
aam
stc
arpl
inc
lret
adc
iret
cmp
jne
pusha
push
push
and
xchg
jne
push
inc
f2xm1
clc
clc
push
repnz
adc
lock
jbe
xor
dec
mov
xlat
rorl
addr16
popf
or
jle
loopne
in
pop
clc
pushf
cmp
jmp
push
pop
in
jl
adc
cmp
or
jns
xor
shrl
mov
add
or
inc
or
int3
xchg
fldt
jno
dec
lret
outsb
add
and
insb
lret
fsubs
roll
rep
std
jne
mov
dec
call
jae
push
into
mov
add
push
fcmovnu
jmp
xchg
cli
and
loope
cmc
ljmp
add
cmp
mov
sub
sbbl
movsb
mov
mov
into
push
push
xchg
push
fs
repnz
xchg
test
adc
push
call
xlat
push
mov
pushf
add
push
pop
jge
mov
jecxz
dec
adc
ret
insb
jmp
mov
rcrl
bound
lahf
inc
sub
push
sub
lcall
in
frstor
mov
dec
mov
call
adc
pusha
mov
pop
insl
aaa
lea
das
pop
in
lods
sub
pushl
push
enter
loope
fcmovbe
mov
je
xchg
dec
aad
jnp
rcr
mov
gs
mov
mov
sbb
jg
xor
pop
or
and
outsl
loopne
xlat
dec
bound
push
mov
inc
dec
fidivl
fisttpll
jg
psubsw
hlt
lods
in
dec
out
or
fdivrl
dec
add
cmp
jl
pop
aaa
jge
mov
xchg
je
and
andb
lcall
lret
fistpl
repz
and
add
push
mov
xchg
jecxz
repnz
pop
xorb
jle
shrb
adc
jecxz
push
jne
dec
mov
jbe
push
xor
or
pop
sbb
repz
jmp
stos
xor
mov
mov
jg
xor
pop
enter
int3
es
mov
push
inc
cmpsl
mov
push
adc
cld
ss
mov
push
inc
xor
out
cmp
push
subl
mov
leave
popf
cmp
decl
incb
mov
push
fldl
mov
les
fdivrl
adc
test
loope
out
cmpsl
sub
jno
orl
cmp
adc
or
mov
jne
cltd
push
mov
stc
inc
xchg
pop
sbb
notb
jmp
ljmp
stos
push
inc
cli
xchg
push
cpuid
cld
push
and
dec
divb
push
in
add
jbe
bound
shrd
sbb
bound
xlat
call
adc
addl
sbb
xchg
adc
and
push
and
or
xchg
icebp
stc
mov
and
xchg
sub
mov
push
lods
and
mov
iret
pop
adc
sti
xchg
pop
and
mov
pop
cmp
dec
inc
jb
loope
dec
clc
jae
rep
sbb
loope
xor
pop
idivb
inc
test
and
dec
mov
insb
and
scas
push
and
dec
shrb
sbb
sbb
jno
mov
sub
mov
leave
sbb
sub
sbb
cwtl
xor
js
and
shll
lcall
test
and
out
popf
cmp
shll
ret
cmc
sub
ret
push
pop
lock
iret
jno
insl
push
jmp
sub
push
outsb
aaa
fldl
pop
pop
push
das
sti
mov
dec
call
jb
repnz
sub
mov
es
pop
mov
mov
insb
arpl
movsb
push
mov
inc
adc
mov
mov
or
or
js
aad
clc
shlb
mov
hlt
or
xor
bound
mov
xchg
add
pusha
std
xchg
and
xchg
xchg
stc
rol
fs
inc
sbb
or
or
push
push
aaa
shll
pop
inc
loop
adc
mov
push
and
inc
xlat
xor
push
mov
inc
lcall
inc
mulb
aam
sbb
sub
iret
mov
ss
frstor
adc
dec
add
in
test
jmp
sar
out
pusha
inc
mov
rorl
not
repz
pop
add
jbe
ret
jae
and
loop
popf
mov
mov
push
mov
jne
js
or
jp
add
sbb
sbb
ja
mov
lcall
inc
les
aad
in
lock
pop
or
vphsubwd
jno
mov
mov
push
jg
test
pop
pop
and
xor
adc
roll
lods
pop
dec
test
push
adc
or
jp
sbb
dec
adc
jp
xchg
fsubrl
pop
pop
sbb
shr
mov
andb
lock
adc
jb
aas
test
ss
cmc
and
adc
xor
ds
ljmp
pop
loop
add
mov
push
test
mov
inc
lret
push
filds
cmp
or
mov
push
aas
stc
sub
testb
add
mov
sbb
inc
cli
js
xchg
mov
mov
scas
stos
mov
sub
aam
and
leave
sbb
enter
xchg
xchg
fcompl
bnd
shlb
cwtl
adc
and
std
lds
inc
sub
cmp
inc
addr16
jle
push
hlt
mov
xor
das
inc
and
add
lods
shlb
loopne
cltd
leave
xor
lds
loope
mov
jo
add
xor
sbb
ds
testl
mov
lret
lock
orl
cmp
dec
int
xchg
iret
cmp
jno
inc
pop
out
jge
shl
mov
cmp
jle
mov
rcll
scas
push
dec
and
js
stos
mov
ljmp
ja
lea
sahf
les
jo
push
mov
push
lret
lahf
jl
push
add
mov
add
cmp
push
fdivrl
adc
mov
sbb
inc
cltd
stos
roll
push
add
call
insb
sub
idivl
xor
inc
mov
loop
cli
xor
outsb
loopne
dec
sub
pushf
dec
mov
jp
xchg
dec
repz
lahf
inc
jae
add
mov
pop
test
bound
daa
sbb
test
sub
or
inc
lahf
test
lods
sub
das
jns
stos
mov
mov
or
cmp
call
imul
adc
scas
jo
dec
push
call
scas
je
insb
pop
ds
dec
pop
dec
call
test
sub
dec
mov
dec
sbb
push
lea
xchg
sub
jl,pt
mov
sbb
and
xor
das
xor
popa
mov
jbe
repz
sti
movsl
insb
mov
mov
add
add
sub
adc
dec
dec
fmulp
sub
pop
dec
push
mov
cli
movsl
ja
mov
pusha
cli
push
dec
xor
popf
cmp
mov
xchg
imul
jmp
xchg
lods
pop
ret
incl
call
stos
movsl
ret
sub
mov
inc
jmp
clc
jno
pop
fwait
shlb
and
inc
dec
push
mov
inc
or
sub
push
jb
mov
jecxz
pushf
cltd
sub
mov
out
cmp
jp
add
pop
in
daa
lss
dec
mov
and
add
ss
jecxz
mov
mov
leave
and
inc
add
mov
dec
jns
ja
push
or
in
test
mov
mov
lods
cwtl
cli
addr16
lcall
or
pop
and
xor
pop
lahf
mov
jns
adc
frstor
outsb
sub
cmp
shrb
arpl
movsl
int
dec
add
imulb
out
sub
jecxz
mov
xor
cmp
mov
mov
sbb
sarb
dec
add
es
push
xor
daa
rorb
jg
cmp
mov
push
aas
divb
std
mov
jo
outsl
cmp
inc
mov
xchg
mov
mov
rol
jp
jne
cwtl
or
adc
inc
jns
jo
adc
data16
fcomip
fwait
pop
xchg
cmpsl
int
mov
fs
sbb
lods
js
loop
js
cltd
mov
pop
add
jle
jge
inc
jg
sub
or
mov
roll
mov
jno
pop
push
js
jle
fcomp
inc
enter
push
pop
sahf
testl
cmp
and
adc
sbb
and
adc
daa
clc
ljmp
dec
and
cmpsl
rcrb
fdivl
daa
xchg
int
fs
xchg
or
out
test
inc
movl
sbb
push
jb
mov
xor
mov
add
ss
fmuls
jo
add
es
out
sub
pop
aas
mov
dec
test
pusha
sub
add
fcos
mov
push
repz
fwait
daa
loop
mov
xor
int3
add
std
daa
test
sgdtl
addl
or
sub
jp
lret
mov
inc
stos
dec
sahf
sbbb
insl
lock
push
scas
xor
xor
dec
imul
idivl
int3
adc
inc
int
outsl
mov
imul
push
jmp
mov
and
add
mov
jle
je
pop
cmp
push
pop
sub
push
adc
pushf
in
outsb
inc
fcompl
int
and
dec
and
or
dec
sub
cld
out
pusha
push
aam
dec
and
jne
lahf
inc
dec
xor
mov
cmpsl
xor
add
jg
lcall
and
enter
add
dec
push
sub
jbe
loopne
jnp
push
out
cmp
xchg
inc
cmp
or
je
jp
cmp
cmpsl
push
jle
inc
loopne
mov
and
shll
inc
jmp
movsl
mov
sahf
inc
dec
cltd
insb
sahf
xor
mov
aam
je
sbb
fstpt
stos
push
aam
and
or
pop
loop
xlat
sbb
arpl
xlat
sbb
push
sbb
push
aad
stos
rcrb
xchg
dec
pop
jl
mov
out
xchg
ret
in
push
fisttpll
cmp
mov
aaa
subb
add
push
lahf
test
pop
adc
lods
cli
jns
out
xor
and
leave
push
out
iretw
sarl
mov
push
jle
daa
inc
mov
or
das
xor
call
out
cmp
gs
int3
sbb
movsb
outsb
dec
les
or
insb
jo
mov
outsb
xchg
stos
movsb
xchg
addr16
lcall
cltd
sbb
xchg
movsb
xchg
jb
fwait
xor
aam
std
dec
lds
mov
repnz
inc
insl
cmp
xchg
adc
inc
and
idivl
cltd
mov
clc
shll
push
leave
nop
lret
movsl
imul
rolb
mov
mov
and
push
inc
lahf
test
jecxz
jae
dec
repz
sbb
loop
ljmp
std
jno
icebp
imul
mov
mov
cwtl
hlt
shrb
jb
jns
mov
cmp
push
sbb
lret
jmp
and
loopne
jp
call
repz
adc
xchg
pop
inc
fmull
inc
mov
jnp
mov
aam
data16
in
sarl
in
jle
push
loop
adc
add
sbb
insb
faddl
cmc
mov
repnz
js
xchg
push
mov
insl
insl
and
adc
mov
dec
sbb
cmp
idiv
and
jecxz
and
inc
push
imul
into
lcall
les
testl
cs
fdiv
cmc
inc
int3
or
xchg
into
in
dec
or
andb
and
fstl
enter
mov
add
lret
mov
daa
and
cmc
sbb
xor
cld
mov
std
and
stos
ret
lret
ret
xor
fnstenv
mov
sahf
call
andb
stc
shll
ljmp
jecxz
inc
into
in
gs
cmp
jmp
fldl
mov
jecxz
mov
jns
adc
and
add
shll
lcall
std
cltd
rcll
dec
pop
imul
enter
dec
mov
jmp
push
mov
in
pop
fstps
adc
add
xor
ss
pop
xor
jp
mull
xor
dec
add
enter
adc
dec
sub
cltd
insl
pop
enter
jp
lret
cmp
std
jo
or
inc
jmp
add
sbb
push
out
int3
sbb
cs
sub
cmp
and
push
xchg
push
or
das
cs
shll
mov
xchg
push
xchg
pop
rcrb
cmpsb
mov
enter
faddl
or
stc
or
mov
pop
insl
jo
sti
pop
shlb
dec
inc
xchg
cmp
and
cmpsb
push
xor
pop
je
gs
movb
mov
popa
notb
sar
shlb
loope
dec
push
out
mov
and
cli
xchg
imul
push
jle
pop
cmp
leave
stos
or
mov
pop
inc
push
out
jecxz
inc
nopl
push
cltd
iret
mov
mov
or
add
clc
fmull
mov
dec
dec
stos
cmp
add
stos
cmpsl
pop
jo
out
add
xchg
mov
fwait
xchg
mov
sbb
divl
loope
sti
mov
pop
sbb
rcrb
cmpsb
push
dec
sub
jns
hlt
shll
lods
lret
jo
dec
bound
fcom
xchg
cmp
in
fisubrs
int
addr16
into
scas
xchg
jl
xor
scas
pop
cwtl
adc
jl
arpl
mov
add
xchg
jmp
divb
arpl
nop
or
cmp
adc
or
bound
icebp
xchg
fidivl
test
add
movsb
inc
jo
xchg
jp
dec
in
mov
dec
xor
jns
inc
aas
push
fs
cmp
sub
dec
punpckldq
scas
cmpb
xor
cwtl
cmpsl
jno
mov
xchg
push
xchg
dec
outsl
pop
lahf
inc
or
jmp
sub
mov
hlt
mov
insl
mov
mov
xor
sub
push
pop
pop
jno
lods
ret
mov
xor
push
insb
sub
and
xor
popf
fsubr
lcall
mov
push
add
imul
jle
jecxz
stos
into
rolb
cmp
mov
or
push
loop
mov
inc
aaa
cld
inc
into
and
mov
insl
mov
mov
test
xor
cld
lcall
mov
sub
gs
sbb
inc
rcl
cli
inc
jp
lds
gs
jmp
daa
ss
ja
cmp
jo
daa
dec
lret
cli
adc
cli
daa
add
fdivrs
xor
cltd
ja
sub
neg
enter
pop
sub
mov
jne
adc
mov
sbb
and
stos
add
pop
icebp
call
cmp
loop
xchg
jns
sbb
sub
fsubrs
std
inc
jns
lret
insl
popa
dec
pop
test
imul
add
xor
adc
cmp
int3
fs
or
mov
mov
inc
dec
leave
xor
imul
xlat
inc
adc
mov
mov
cltd
test
mov
arpl
pop
push
mov
adc
mov
lret
push
mov
pop
or
dec
mov
loope
xchg
sbb
add
lods
lahf
inc
adc
adc
push
xor
jno
popf
int3
sbb
clc
cs
pop
cli
stc
cld
leave
add
scas
fisttpll
jecxz
pop
sub
push
ror
fs
popf
out
dec
lret
mov
add
popa
ror
xchg
pop
sub
lock
mov
mov
xchg
xchg
fdivl
movsb
pop
push
ret
jbe
jno
xchg
cmp
cmp
call
sub
cmp
mov
rorb
mov
add
jae
ss
fdivs
shlb
and
cmp
or
sbb
cmp
fs
pop
sub
enter
sub
and
sbbb
inc
je
iret
mov
bound
mov
push
inc
imul
jmp
stc
and
je
add
xor
mov
notl
add
dec
add
mov
ret
xchg
xchg
adc
ljmp
mull
gs
into
shl
inc
inc
stos
sub
mov
jne
filds
outsb
xchg
mov
adc
push
and
iret
sbb
call
pop
in
push
cld
mov
sbb
jmp
lods
sbb
xchg
push
test
sahf
fwait
jge
dec
rclb
adc
cmp
es
mov
xor
mov
lods
sub
sbb
add
cmpsl
stos
pushf
mov
movsb
cltd
and
jp
pop
xlat
sarb
mov
lea
sahf
les
nop
xor
fistpll
out
fldln2
or
mov
fsubrl
mov
loopne
dec
daa
push
mov
jecxz
test
dec
icebp
repz
je
or
push
lods
je
imul
jo
bound
add
inc
xor
dec
push
ret
test
cld
jb
xor
mov
jns
push
test
or
fs
xchg
mov
or
jl
les
jbe
push
je
std
pop
out
ret
jo
sbb
adc
mov
idivb
inc
je
orb
mov
jl
pop
mov
call
lods
ds
sbb
push
mov
inc
add
push
dec
adc
xchg
int
xchg
adc
arpl
adc
mull
aaa
push
add
hlt
adc
test
push
movsb
sbb
aaa
pslld
cld
inc
sbb
xchg
cmp
iret
inc
mov
xchg
lds
xor
dec
sbb
fcmovb
xor
movsb
out
jmp
sbb
pop
and
mov
xor
xor
das
push
rcl
or
adc
mov
sahf
mov
jbe
adc
or
int3
mov
cwtl
push
jecxz
and
stos
outsl
xchg
mov
imul
dec
mov
movsl
mov
jmp
pop
test
jl
jle
pusha
lret
mov
jns
sub
pop
or
cwtl
cmp
or
fs
pop
inc
aad
sbb
mov
daa
dec
inc
repz
xor
jge
add
xchg
xor
lret
sub
xchg
aas
cmp
xor
jge
popa
loopne
or
mov
imul
sti
dec
subb
das
testl
jg
and
jle
mov
lret
pop
jb
adc
xor
inc
int3
xchg
fidivl
mov
cli
jle
xchg
push
sub
sbb
pop
hlt
xchg
mov
mov
dec
mov
mov
mov
mov
mov
xor
ret
pop
lock
sub
inc
cmp
movsb
aad
and
add
push
adc
inc
lds
lret
mov
inc
sub
xchg
xor
ret
setae
cltd
out
dec
xchg
fstps
popf
andnps
jg
mov
xor
cmp
fs
idivl
fimull
iret
push
test
adc
jns
aas
xor
scas
jge
push
sub
outsb
cmp
jnp
call
fcoms
ja
push
enter
cmp
pop
faddl
outsb
add
stos
test
lret
fadd
mov
mov
mov
xchg
mov
mov
mov
js
push
jmp
sbb
movsb
icebp
fs
aam
pushfw
in
daa
jg
mov
xchg
mov
ds
pop
adc
leave
out
inc
dec
cli
adc
pop
in
dec
sub
pusha
idivb
cmp
xchg
mov
cmp
cmp
and
repnz
subl
jge
fildl
mov
in
sub
sub
repz
xchg
xor
inc
cmpsl
adc
jmp
lock
jb
or
sti
push
loop
shrl
add
movsl
jl
pop
dec
insl
imul
ffree
cli
push
fwait
jno
pop
lahf
dec
lret
and
bound
arpl
pop
mov
lret
imul
xchg
push
iret
mov
push
cmp
sbb
cltd
loope
pop
add
mov
jle
pop
popf
mov
ds
inc
xor
mov
lods
inc
jno
orb
sahf
ftst
cmp
add
jle
dec
dec
es
shll
push
adc
xor
xor
or
pop
xor
add
nop
int
sub
arpl
sub
sahf
adc
in
pop
jnp
push
dec
and
mov
data16
cwtl
xor
es
pop
push
pop
inc
cld
xor
pop
jl
iret
addb
jg
cmpl
mov
ds
pushf
ljmp
in
sbb
lret
into
fcmovnu
daa
aas
ret
push
adc
or
xor
adc
xor
or
std
dec
leave
std
mov
add
and
aam
imul
push
dec
popa
sbb
ja
pop
imul
push
and
nop
push
mov
mov
repnz
roll
pop
repz
mov
dec
imul
dec
jne
shrl
pop
pop
test
lods
adc
out
pop
outsl
push
pop
push
rcrl
popf
lods
sbb
mov
cmp
jecxz
inc
mov
ficomps
es
mov
or
cmp
pop
stos
pop
xchg
jge
or
shll
rcr
or
xor
sti
popf
scas
iret
cmp
xor
lock
fistps
add
lds
xor
movb
and
xor
xor
shlb
je
sub
mov
cmp
fwait
sarl
mov
xchg
stos
push
in
outsb
lret
je
mov
ret
lret
cmp
lcall
popf
shl
or
jp
adc
inc
pop
jae
lea
jno
mov
fadds
adc
dec
movsb
or
je
jb
cmp
imul
rclb
ljmp
xchg
jg
int3
sahf
xor
xor
xlat
jp
sbbb
jecxz
nop
icebp
and
mov
std
out
mov
or
movsb
dec
jecxz
xchg
out
cmc
imul
mov
jl
adc
push
js
sub
push
nop
mov
outsb
sub
gs
push
dec
mov
cli
rcrb
pop
push
inc
shll
fwait
sub
dec
cwtl
cs
jb
je
cmpsb
fiaddl
repz
jle
lods
mov
outsl
adc
inc
outsl
add
ret
int3
data16
push
add
cmp
fstl
pusha
jle
movsb
sub
pop
arpl
aas
mov
sub
sbb
cli
std
inc
inc
dec
enter
mov
fidivl
adc
fmul
and
sbb
ret
into
dec
int3
in
dec
loope
out
in
xchg
mov
sub
inc
jbe
xchg
in
out
fsubrp
lods
nop
das
and
ljmp
mov
jmp
out
insb
jle
mov
and
jnp
jnp
sub
mov
clc
push
cmp
inc
fwait
mov
push
and
add
fildll
flds
inc
jbe
push
addr16
in
cmpsb
mov
fistpll
addr16
lods
mov
lods
jb
pop
imul
cmp
aam
stc
sbb
cltd
or
fxch
shl
inc
bound
scas
xlat
dec
cmp
and
cmp
push
arpl
in
ja
mov
hlt
or
test
fisubrl
roll
rorb
push
adc
lea
test
push
sbb
mov
cmc
lcall
sub
pop
dec
mov
arpl
add
iret
stos
jp
in
pop
mov
pusha
or
std
jne
cmp
cmp
mov
sbb
jbe
ret
cmc
pop
mov
shll
jecxz
in
in
xor
fsubrp
mov
test
inc
adc
inc
addr16
push
jno
cmp
push
xor
mov
lret
jg
sub
xlat
mov
ret
mov
sbb
sarb
adc
in
jns
jge
aam
mov
add
xchg
outsl
aad
test
stos
and
dec
mov
jnp
sbb
pop
fidivrl
push
or
rcrl
repnz
xorb
dec
inc
sub
popf
leave
shl
push
aad
or
cmp
jl
jne
sbbl
outsl
jb
icebp
and
jno
xor
push
jecxz
add
popa
loope
xchg
xor
lds
adc
loopne
fistpll
sbb
lds
fists
lods
in
jno
mov
sub
ficomps
lret
jno
das
pop
inc
or
xlat
push
insl
or
test
aam
loopne
hlt
lret
popf
outsl
pop
fwait
push
xchg
push
or
gs
outsb
push
popf
test
in
push
punpckldq
fwait
cmc
mov
leave
rclb
lahf
dec
loope
sub
test
push
mov
cli
int3
jecxz
leave
cmpb
inc
sti
loop
sub
xchg
sub
jmp
sub
dec
clc
movsb
leave
or
in
fcmovbe
lret
and
call
mov
adc
leave
or
add
dec
sbb
mov
or
adc
cwtl
mov
test
lcall
xor
pop
fcompl
aam
stos
sbb
and
push
fsubrs
and
ja
cli
in
mov
pop
lcall
pusha
aam
js
cmpsl
pop
mov
into
pop
fldcw
or
jge
scas
pop
adc
lods
pop
jmp
mov
ljmp
mov
jl
sbb
aad
xchg
pop
daa
lods
jecxz
aad
pop
sub
push
inc
sbb
shll
or
shr
imul
daa
stos
push
push
xor
sbb
jnp
les
and
jns
sbb
lret
push
sub
cmp
adc
dec
mov
dec
iret
xor
pop
lret
icebp
lods
cmpsb
push
mov
sub
shll
adc
mov
mov
add
stos
push
pushf
sbb
std
mov
mov
mov
insb
dec
pusha
mov
stc
jnp
or
cmpb
and
scas
sbb
and
mov
movsl
mov
into
hlt
daa
dec
push
add
scas
fstpl
mov
mov
mov
ja
imul
sbb
mov
sti
sbb
mov
repz
push
out
jecxz
add
jbe
mov
xor
push
int3
mov
mov
mov
jo
push
ljmp
mov
jnp
push
dec
cmp
inc
leave
add
inc
push
inc
test
call
mov
mov
add
xchg
cmp
push
adc
sub
jg
outsl
add
in
or
sbb
neg
movsb
sub
into
rcrb
mov
xor
pop
push
push
scas
ds
pause
pop
inc
cwtl
jl
in
add
sbb
stos
leave
push
test
fwait
jb
fs
imul
adc
mov
mov
negb
mov
dec
cmp
dec
in
push
push
aaa
rclb
ret
mov
mov
cwtl
out
jo
in
mov
mov
mov
dec
push
in
fcmovu
mov
and
std
fwait
pop
jae
mov
push
adc
pop
lock
xor
xchg
xor
dec
nop
cmp
sbb
aam
sbb
mov
sbb
add
rorl
or
jle
mov
pop
cmpb
adc
mov
sbb
popa
ret
push
jno
lds
stc
xlat
test
ds
lcall
cmp
mov
mov
add
jg
add
test
sub
jns
loop
lret
inc
imul
xchg
popf
aaa
fmull
insb
mov
mov
test
mov
cmp
pop
ret
decl
out
inc
in
mov
mov
int
xchg
incl
mov
push
int3
lods
shll
popf
frstor
and
cli
ja
aad
dec
sbb
inc
jno
and
cmovae
fists
cmp
push
sti
mov
aas
pop
push
xchg
mov
mov
pop
xchg
in
cmp
sarb
lock
ss
push
mov
sbb
push
das
pop
scas
dec
aam
xchg
dec
subb
sub
lock
loopne
cmp
push
xor
bound
dec
cmp
out
sub
xchg
pop
xchg
aaa
jnp
dec
clc
xchg
rorl
sub
sbb
ret
iret
inc
cld
cmp
xchg
sarb
inc
adc
lock
in
lret
adc
xchg
int3
fs
or
aas
inc
lret
ret
mov
out
ss
mov
push
sahf
or
dec
add
sahf
ja
mov
cmpsl
js
out
xor
dec
scas
jl
push
orb
mov
push
push
cmc
sub
sbb
ss
jl
lahf
enter
es
ss
out
cwtl
xchg
adc
testb
cmp
int
sbb
lret
jns
cmp
jl
iret
lcall
jns
adc
rcrl
and
test
cmp
outsl
mov
mov
cli
imul
dec
push
pushf
mov
das
mov
repnz
inc
arpl
lods
adc
pop
fwait
loop
dec
sub
mov
xor
cld
mov
popa
inc
sbb
mov
jp
cmp
aam
ss
les
push
push
cmove
outsl
add
inc
pop
pusha
movsl
int
and
or
cmp
sub
adc
aad
das
inc
cwtl
fimull
mov
test
cmp
push
cmp
out
sub
rcrb
inc
cmp
dec
mov
xchg
dec
xlat
sti
popa
jg
push
pusha
mov
jmp
jmp
push
iret
push
addr16
dec
mov
mov
sub
testl
sbb
inc
jl
mov
xchg
inc
xor
adc
push
pop
faddl
outsl
cmp
in
cmpsb
outsl
pop
mov
stos
lret
sbb
xchg
push
mov
mov
mov
inc
sub
inc
in
rolb
mov
adc
dec
push
cs
mov
push
repz
fstp
mov
push
xchg
xchg
jl
jbe
mov
popa
movb
popf
rolb
cli
orb
test
xor
pop
popl
popf
call
in
inc
lods
loope
and
cld
or
ror
hlt
mov
jge
test
lcall
js
cmp
push
or
add
movsb
mov
xor
popa
xor
jp
cmp
xor
insb
and
pop
inc
jo
add
sub
and
test
ret
aam
clc
mov
jne
popa
insb
mov
cmp
repz
fistps
shr
imul
sub
out
pop
jns
xchg
ret
and
add
cltd
pop
sarl
movsl
stos
clc
not
imul
mov
mov
mov
pop
cli
aas
dec
or
lret
orb
lcall
ret
pop
sub
pop
xchg
in
test
pop
sub
xchg
sub
into
enter
pop
stc
and
mov
pop
ffree
xchg
cmp
xchg
in
sahf
mov
in
xchg
and
scas
add
fdivs
stos
jg
pop
pop
sub
dec
sbb
pop
int3
or
mov
sbb
or
mov
ret
pusha
sbb
xchg
in
in
xor
sbb
scas
out
dec
jp
icebp
aam
pop
aaa
adc
je
psubb
outsb
and
out
push
add
xchg
or
xchg
push
jecxz
pop
arpl
push
int3
push
fidivl
add
jle
outsb
stos
daa
jmp
icebp
mov
repnz
imull
dec
sbb
cmp
rcrb
lret
test
mov
xchg
dec
sub
insb
aam
push
inc
nop
pop
incb
cltd
xchg
loopne
js
pop
out
push
roll
mov
dec
mov
jno
sub
fsubs
pop
and
loop
pop
pop
mov
sub
aaa
jge
insb
cwtl
popf
push
mov
lahf
rcr
dec
lcall
lahf
jl
movsb
scas
adc
and
aaa
mov
dec
xor
dec
lret
jp
call
push
lret
or
jge
stos
push
jnp
jo
lret
jmp
in
xor
pushf
mov
inc
pop
imul
cmp
lock
push
adc
mov
pop
push
adc
push
in
jo
test
mov
arpl
mov
pushl
ja
mov
mov
popa
loop
xchg
cmc
add
out
fwait
push
lods
sti
sbb
icebp
fcompl
inc
ss
aam
inc
mov
es
adc
mov
pop
mov
test
ljmp
es
icebp
stos
shl
or
sub
jle
cmp
pop
mov
hlt
xor
aaa
push
imul
and
test
jmp
xor
dec
jne
inc
popf
jg
and
cmp
sub
sub
mov
pop
and
aam
enter
pop
pop
inc
cmp
xor
mov
mov
hlt
daa
mov
or
xchg
push
mov
add
adc
jmp
mov
dec
in
xchg
rorl
dec
nop
mov
sub
call
in
and
add
xor
es
rcr
sub
and
scas
loopne
fistps
jo
scas
ret
cmp
push
dec
inc
inc
stos
adc
nop
clc
xchg
mov
fistps
outsl
orl
sub
dec
sti
adc
nop
xor
cmpsb
mov
xchg
sub
adc
in
test
outsb
out
mov
dec
mov
movsb
iret
jns
dec
inc
daa
fwait
je
sbb
outsl
cmpsb
in
jno
jae
add
cld
sahf
fisubrl
cmp
jns
pop
mov
js
jl
pop
sub
pop
fcompl
mov
pop
lret
sub
ficompl
aad
roll
pop
push
cmc
or
and
movsl
insl
add
sub
pop
data16
aas
out
in
ljmp
dec
sub
pop
nop
test
mov
ficompl
pushf
pop
cmp
mov
fstps
mul
cmpsb
sbb
add
les
sbb
aas
cmp
dec
and
rcrb
in
xlat
push
sbb
rolb
aaa
in
inc
rclb
mov
push
cmp
sbb
xchg
repz
sbb
mov
sbb
jp
pop
xchg
mov
lret
addl
sbb
mov
push
popf
vorps
sbb
ret
jmp
lcall
fmul
jns
inc
fadds
cmp
sub
leave
imul
lcall
add
pop
imul
and
sub
pop
adc
sub
es
xor
mov
call
xlat
mov
pushf
js
mov
icebp
cmp
fisttpll
dec
and
in
mov
dec
fs
cmp
hlt
jecxz
sbb
hlt
add
inc
dec
jp
mulb
mov
cmp
fsubrs
xchg
out
clc
into
lea
sub
push
mov
xchg
cmpsb
or
push
enter
add
pusha
in
sub
das
iret
fstpl
cmc
in
cld
rcll
push
mov
push
loope
dec
sbbb
jne
push
enter
fistpll
in
leave
xchg
inc
or
jmp
movsb
mov
or
mov
and
push
mov
cmc
cmpsl
popa
adc
push
xor
dec
ret
rclb
sub
insb
addr16
ret
jge
mov
pusha
adc
jnp
sahf
test
mov
adc
xchg
or
mov
pop
xchg
sbb
xchg
mov
xchg
pop
sbb
mov
sbbl
pop
mov
mov
lods
xchg
stos
mov
mov
lods
jecxz
adc
out
pushf
push
cs
pop
rcrl
fadd
outsl
movsl
jp
and
nop
cmp
ret
popf
pusha
testl
or
imul
mov
sbb
insl
inc
leave
cmc
outsb
pop
pop
mov
mov
in
push
testb
jp
mov
mov
push
mov
pop
xchg
cwtl
icebp
das
and
movsl
aad
stc
inc
lods
jae
push
test
stc
mov
test
sub
sti
int3
jae
dec
mov
cli
test
mov
mov
mov
push
xchg
shrb
and
mov
in
popl
xchg
stos
or
or
stc
inc
sub
test
out
jecxz
lret
mov
scas
adc
cmp
push
aas
xchg
outsl
in
xchg
sub
xlat
mov
divb
or
movsb
xor
mov
push
inc
arpl
pop
pusha
inc
aaa
test
or
lret
nop
testl
cmp
addr16
call
cld
and
add
insl
das
andl
mov
inc
jg
scas
mov
push
imul
mov
movsb
std
test
pop
mov
out
fdivs
gs
jb
sbb
popl
arpl
out
push
inc
sbb
sbb
xor
dec
test
jbe
iret
adc
mov
adcb
mov
mov
or
stc
rcrb
imul
dec
dec
jmp
fists
jne
inc
jb
pop
insl
cmpsl
add
insb
mov
mov
jns
arpl
cmpsl
insl
xchg
inc
xchg
xlat
ss
pop
es
out
add
mov
jg
mov
sarl
stos
jp
stos
mov
mov
cmp
jne
xchg
add
loopne
gs
cmovo
xchg
inc
push
data16
mov
addr16
adc
lcall
mov
mov
ss
cwtl
lret
or
cltd
add
out
xor
sti
mov
xorl
mov
inc
inc
or
or
ret
cltd
test
mov
lret
cld
fdivrs
dec
cmp
test
loope
xor
roll
xchg
cmp
sub
mov
or
add
mov
jns
or
sbb
lods
aad
dec
inc
icebp
and
sti
xchg
dec
or
mov
jne
es
jbe
ror
sub
loop
add
pop
xchg
and
xchg
xor
outsb
sub
gs
dec
insb
mov
mov
fsubl
movsl
push
iret
mov
dec
dec
pop
push
rcrb
jo
or
nop
jl
mov
inc
cmp
leave
add
xor
or
repz
cmp
mov
xchg
push
mov
lahf
inc
aas
movsl
clc
gs
xchg
sahf
in
mov
stc
dec
push
movsb
out
insl
aam
mov
scas
addb
or
xchg
lret
je
push
cwtl
cmp
cmp
pop
jnp
mov
inc
mov
or
push
insb
mov
or
out
lods
xchg
lea
jnp
cmp
mov
adc
aas
mov
cmp
jns
std
mov
je
ja
jnp
xor
push
xchg
sub
mov
inc
jbe
in
inc
test
cmp
pop
in
xchg
dec
in
test
aad
sub
inc
sub
push
inc
xchg
nop
pop
mov
popf
enter
int
pop
sub
inc
rol
lock
imul
rol
push
push
cltd
stos
int3
sbb
xor
inc
sbb
int3
push
push
imul
lahf
lret
sarl
ss
mov
imul
and
movlps
cmc
imul
vpaddusw
mov
cltd
jo
in
idiv
xchg
xchg
adc
pop
into
loope,pt
arpl
loope
mov
jnp
mov
in
xor
jns
pop
andl
cmpsl
mov
aad
sub
scas
mov
jnp
fidivs
aas
loope
lret
xchg
pop
or
fidivrs
mov
addr16
adc
jns
xchg
push
mov
jl
loop
addr16
aad
xchg
and
int3
push
xor
cmpsb
ja
std
sti
pop
out
push
pop
lahf
pop
aas
cmp
mov
cwtl
xor
out
popf
dec
or
outsl
test
cmp
cmp
pushl
mov
jo
nop
and
sbb
data16
negl
sub
adc
insl
xchg
ds
imul
stos
sub
mov
mov
dec
adc
and
push
sbb
popa
jge
sbb
xor
jnp
fistpll
std
mov
mulb
lahf
cmp
xchg
inc
or
sub
add
mov
enter
mov
push
pop
fucomp
dec
adc
mov
or
xor
push
repz
ds
mov
ret
adc
push
into
mull
into
dec
enter
dec
or
xor
aam
movsl
xchg
xchg
mov
pause
daa
imul
sub
pop
mov
fchs
mov
pop
in
inc
roll
mov
lahf
jl
push
leave
mov
xor
cmp
sahf
jb
inc
dec
pusha
inc
stos
leave
insb
inc
push
call
stc
sbb
inc
fcomps
call
sbb
or
mov
ret
jmp
push
push
cld
lea
sbb
adc
sub
sbb
xchg
lods
subl
andb
rcrl
mov
or
repz
mov
xor
cmp
leave
insl
rcl
js
push
ret
insb
mov
test
data16
cmp
hlt
rorb
cmpsb
outsb
xor
popa
inc
mov
stos
mov
xchg
dec
into
rcll
out
jae
cmp
sbb
cld
or
sub
sub
in
mov
adc
idiv
push
add
xchg
inc
imulb
test
pop
cmp
aaa
hlt
cmpsb
lods
jg
or
pop
scas
push
push
xchg
push
pop
sbb
add
cwtl
dec
inc
clc
sbb
pop
sahf
in
lcall
jbe
cmpsl
mov
lods
xchg
gs
mov
sub
push
sbb
inc
cld
or
xchg
movb
test
enter
sbb
or
subb
shlb
sub
test
add
xor
or
lahf
fistl
sbb
push
and
xchg
lcall
sarl
push
test
outsl
iret
arpl
and
jmp
cs
aas
or
or
lahf
xlat
add
fistps
fildll
pop
jle
cmp
xchg
xchg
cmpsb
cmp
das
cmp
xchg
ret
sbb
pusha
insl
mov
xor
lods
inc
jno
push
cmp
add
cmp
ret
jo
jo
sub
inc
sub
lock
loopne
jns
in
lods
stc
jge
inc
es
adc
dec
pop
gs
ret
lret
cmp
clc
cs
add
add
dec
outsb
in
push
out
mov
pushf
insl
mov
fisttpl
int
pop
dec
rcrb
mov
dec
or
testl
mov
scas
sar
sbb
int
pop
mov
popf
cwtl
repnz
pusha
stos
mov
inc
pop
add
leave
or
sar
mov
cmp
and
lcall
aaa
inc
sbb
or
les
sbb
mov
les
xor
aas
fxch
add
push
arpl
dec
dec
cmpsl
fadd
divps
out
pop
mov
fmuls
inc
flds
mov
addl
fdiv
jge
xlat
or
adc
push
bnd
movsl
cltd
or
mov
icebp
cmp
jae
inc
popa
out
inc
cmp
push
nop
xor
or
test
push
test
mov
ret
lea
xor
or
sub
imul
dec
aaa
mov
push
xor
pop
jns
repz
or
jbe
sub
xchg
insl
punpckhdq
xchg
dec
mov
outsl
scas
lret
jg
push
lret
jbe
sbb
aam
movaps
xor
sub
dec
cmpsl
cmc
mov
lods
mov
iret
lcall
dec
sub
sub
aas
pop
dec
mov
mov
pop
lock
mov
jae
push
add
mov
lcall
or
jl
pop
xchg
adc
pop
dec
jle
and
push
test
push
orl
loop
stos
jecxz
or
inc
in
aaa
ret
test
dec
call
outsl
pop
lret
lods
addr16
dec
sbb
mov
and
lcall
mov
jbe
push
fnstsw
and
mov
js
js
sub
push
pusha
outsl
mov
mov
sub
jnp,pt
mov
mov
mov
outsb
cwtl
xchg
les
adc
mov
ja
pop
sar
ret
fwait
push
aaa
movsb
add
nop
xlat
out
ret
nop
popa
lods
movsl
mov
push
jb
dec
pop
inc
push
xchg
add
mov
lods
xor
lret
and
daa
jns
pusha
stc
pushf
ss
adc
das
mov
pop
das
aaa
clc
ds
mov
imul
clc
mov
sahf
or
mov
jle
or
call
fcmovnbe
fcoml
cmp
hlt
movsb
sbb
lret
vpand
cmpl
test
sub
mov
push
jl
negl
inc
fwait
dec
or
cmpsb
add
scas
shrb
int
test
jo
mov
mov
or
les
popw
add
out
adc
push
sbb
lcall
pop
insl
int3
movl
add
jp
movsl
into
xlat
into
sbb
or
adc
push
or
fwait
mov
ds
jmp
sbb
adc
dec
lea
insb
arpl
dec
test
inc
sub
mov
pop
add
push
aas
adc
rorb
in
mov
dec
fimull
inc
cltd
pop
mov
mov
pushf
sub
in
fsub
dec
ds
je
jno
in
nop
or
or
and
bound
xchg
nop
sahf
repnz
aad
bnd
insl
xor
fisubrl
jg
mov
das
cmp
adcb
jge
cmpb
xchg
sub
add
es
lods
dec
iret
into
jne
cmp
fistpl
inc
or
clc
jge
orl
shlb
pop
push
inc
jne
popf
enter
rolb
jle
adc
ds
je
xchg
mov
xor
cmp
sbb
mov
mov
aad
mov
lret
xchg
or
nop
add
xchg
push
xchg
lods
in
ss
cltd
dec
cld
mov
cmc
es
mov
out
ds
and
mov
push
or
xchg
sub
or
or
mov
lods
sbb
dec
cmp
xor
int3
dec
movsl
xchg
lock
adc
shlb
fs
das
pop
and
outsb
sahf
out
xchg
test
sbb
lds
xadd
dec
jo
add
ret
adc
lret
jmp
int
or
leave
mov
cmpb
adc
dec
in
lcall
icebp
push
pop
pop
mov
sbb
inc
sbb
dec
lahf
and
fs
sub
dec
push
and
cli
inc
fstl
push
setne
sub
xchg
mov
cwtl
and
ret
mov
cmp
mov
movsl
lock
movsl
dec
ja
fdivl
pop
out
std
inc
and
pop
mov
ret
fmulp
mov
pop
sub
push
lcall
sub
arpl
out
sub
xchg
xor
das
sti
jecxz
mov
mov
add
and
push
js
xorl
lcall
jp
nop
or
add
mov
dec
cli
lcall
push
lcall
xchg
call
and
pop
mov
xchg
and
sbb
daa
lods
aas
in
xlat
stos
pusha
mov
jno
repz
stos
repz
jno
pop
mov
cmp
sub
and
push
mov
cmp
mov
xchg
cltd
pushf
adc
push
dec
test
inc
or
js
inc
cltd
fstp
mov
cmp
mov
js
das
cmp
mov
add
and
dec
pop
add
add
movsb
int
ret
xchg
stc
adc
shl
fcompl
movsl
imul
mov
leave
pop
out
das
mov
scas
popl
hlt
sbb
inc
xchg
mov
mov
mov
pavgw
inc
cmc
xchg
cmp
sti
std
pushf
lahf
xor
push
xchg
mov
push
fldt
clc
call
lret
stos
sbb
adc
lfs
int
scas
dec
pop
iret
mov
inc
dec
xlat
add
pop
aas
xor
cs
nop
ss
push
js
fadd
mov
sbb
aas
push
stos
outsl
subl
sbb
out
inc
cmp
sbb
mov
mov
in
je
xor
or
repnz
loopne
out
mov
sbb
cmp
xchg
pusha
pop
sub
scas
mov
ficompl
dec
fnstsw
pop
test
ret
cltd
fcomp
les
xchg
xchg
shrd
pusha
inc
imulb
mov
enter
outsl
cmp
mov
cli
ret
adc
push
ljmp
cmpb
xorb
jp
repz
cltd
xor
incl
push
or
fdivs
xor
fmul
xchg
jb
sub
xchg
jmp
leave
and
dec
xor
mov
mov
or
jecxz
enter
gs
jo
and
clc
leave
or
out
gs
orl
jne
xorl
fidivl
andl
and
xor
ss
cmc
sub
fprem
loop
add
fcomps
mov
pop
out
imul
lock
test
in
std
pop
push
outsl
jle
pop
sub
orb
xor
adc
mov
data16
push
sub
imull
popa
call
push
insb
outsb
lea
add
in
call
insb
jne
outsb
cmp
or
add
ljmp
lds
repnz
fcoms
fnstsw
pop
into
repz
jnp
imull
mov
adc
mov
mov
mov
and
shrl
enter
test
push
inc
mov
fcompl
xchg
push
ds
inc
dec
push
mov
test
sbb
leave
or
sbb
add
fsubrs
mov
mov
cs
ss
and
or
adc
sbb
sbb
mov
cld
adc
dec
jae
sbb
xchg
or
mov
jmp
fs
int
cmp
mov
push
daa
mov
jmp
leave
fists
pop
or
mov
aas
push
gs
nop
and
aaa
pop
xor
adc
aaa
clc
sahf
mov
push
mov
jb
sbb
les
cmp
dec
mov
and
add
dec
out
or
pushf
add
jmp
in
popl
dec
cs
mov
dec
test
inc
jg
dec
and
and
bound
loope
xor
es
add
test
outsl
or
inc
add
jge
dec
sbb
push
inc
cmc
insl
and
cltd
mull
dec
or
daa
ja
sub
dec
pushl
addr16
jne
mov
adc
ret
add
test
gs
inc
ja
sub
stos
ljmp
inc
ds
mov
sahf
sub
mov
loopne
mov
jbe
jmp
jno
fldl
xor
mov
hlt
cld
mov
cmp
or
lahf
cmpsl
jecxz
xchg
lret
or
mov
jbe
aam
fidivrl
loope
or
mov
roll
inc
xchg
inc
mov
cmp
sbb
idivl
int
stos
jno
sbb
shll
mov
fs
call
out
mov
movb
scas
push
mov
mov
arpl
xor
mov
adcb
repz
xchg
pop
nop
std
dec
std
mov
xlat
cwtl
jecxz
cmp
mov
in
mov
dec
dec
lcall
outsl
pop
rcll
pushf
aam
xchg
sbb
inc
pop
xor
xchg
into
aaa
push
xchg
mov
xchg
cmp
out
in
xchg
aas
inc
xorl
adcb
dec
int
add
mov
rclb
cld
and
adc
mov
dec
ljmp
xor
addr16
adc
mov
inc
jge
insl
sub
lods
pop
add
push
into
jne
mov
loopne
jl
decl
dec
sar
addb
xchg
ss
ds
jae
adc
imul
lods
ret
xor
movsl
fmull
js
popa
mov
es
aad
push
jle
dec
or
es
add
push
add
cmc
mov
daa
lahf
pusha
sub
jl
or
inc
cmp
xor
mov
pop
mov
mov
daa
ss
jne
loope
cmp
movsb
cld
cmp
inc
add
fsubrl
aaa
sarl
out
aas
lods
sbb
ret
imul
loope
hlt
sti
jne
out
xchg
loop
xor
pop
push
ret
mov
and
cmp
fcomi
sub
scas
mov
daa
push
dec
xlat
lahf
mov
cli
xor
mov
lds
jae
rcrb
mov
fstps
or
icebp
xlat
notb
mov
out
fdivs
scas
test
iret
shlb
das
enter
jne
dec
call
popf
jae
mov
fdivrp
arpl
sbb
aas
pop
rolb
push
outsl
push
idivl
ror
out
inc
lds
add
sub
call
dec
push
outsl
add
sub
xchg
push
mov
lahf
mov
adc
jge
cmp
pop
dec
sub
loopne
cmp
sub
loop
pop
jbe
addr16
pop
decl
inc
dec
jg
sahf
mov
inc
mov
jge
rorb
lea
popf
or
xchg
repnz
sub
sbb
loopne
jne
adc
push
lds
out
push
inc
xchg
and
out
push
mov
mov
pop
ja
stc
test
add
add
sub
mov
xor
aam
dec
lods
fdivl
ja
cmp
fistpl
in
aas
repnz
enter
aaa
mov
sub
mov
xor
lahf
out
xor
mov
pop
rclb
mov
popa
mov
sbb
repnz
aas
in
pop
arpl
inc
dec
es
repnz
daa
push
jb
leave
add
push
hlt
fstps
lea
int
addr16
dec
dec
ds
add
pop
imul
mov
pop
dec
clc
pop
adc
sbbl
and
scas
jecxz
jp
movsb
fdivrl
cmc
insb
and
imulb
gs
mov
mov
mov
xchg
js
rclb
jge
push
das
mov
pushl
loope
stos
aaa
add
nop
fdivp
js
sub
and
loope
shlb
push
and
jecxz
lret
dec
push
xor
test
daa
cwtl
push
push
sbb
or
xlat
jecxz
cmp
mov
lods
mov
xor
sbb
mov
lret
sub
ret
pop
xchg
push
sahf
rcrb
imul
rclb
mov
loop
es
pop
nop
jge
jge
rclb
adc
stc
orl
push
xlat
inc
test
add
jmp
xchg
ret
in
push
roll
pop
lods
cltd
mov
hlt
adc
hlt
mov
es
cmp
insb
mov
in
push
pop
pop
outsb
pop
sbb
mov
push
cmc
scas
sub
iret
ret
out
jo
adc
cmp
xchg
enter
das
sahf
jg
push
push
push
mov
insb
lret
mov
daa
mov
or
or
or
mov
mov
xchg
out
xchg
xchg
mov
ljmp
cmpsb
lcall
dec
aas
push
dec
repnz
inc
shl
add
jae
add
fldpi
ret
jg
jb
nop
xchg
mov
mov
dec
add
inc
sbb
dec
pop
inc
sub
popf
cmp
lahf
push
jb
cs
flds
inc
outsb
cmp
mov
jmp
ljmp
add
add
mov
adcb
scas
add
jp
stos
inc
into
punpcklwd
add
ret
rcrb
sbb
lods
mov
cwtl
and
insb
push
mov
dec
lahf
bound
mov
movl
add
fwait
xor
pop
ds
add
mov
dec
cmp
pop
sub
or
mov
std
mov
insl
or
nopl
cmp
mov
fs
adc
and
mov
pop
iret
das
xor
pop
mov
sub
out
jmp
xor
xchg
adc
loop
adc
fsub
mov
je
jp
ror
inc
jns
dec
inc
jg
dec
test
loopne
mov
pop
fdivl
rcl
push
repz
rorb
notl
jbe
stc
xchg
pop
rorb
xchg
in
in
test
xchg
cmp
mov
ss
lds
xchg
pop
scas
mov
daa
sbb
mov
pop
inc
inc
cmp
in
dec
and
push
leave
inc
in
insb
orl
lods
lods
and
inc
add
and
mov
and
pushf
pop
dec
test
sub
mov
push
test
dec
pop
push
ljmp
iret
cmp
std
xor
insl
inc
cltd
jb
jecxz
mov
pop
fcom
push
enter
test
out
dec
add
sbb
inc
xor
imull
xchg
mov
subb
in
mov
push
andl
shll
daa
jge
mov
pop
or
out
ret
das
sbb
mov
imul
mov
aaa
or
dec
bound
and
push
cltd
das
mov
xor
les
push
sub
imul
sub
insl
mov
jp
push
adcl
inc
sbb
and
mov
and
cltd
enter
popf
sarb
mov
dec
push
stos
adc
pop
mov
pop
andb
mov
ficomps
xchg
fimuls
clc
xor
push
test
mov
test
shlb
data16
aad
mov
inc
mov
cwtl
stos
fidivl
mov
sbb
sub
lcall
repnz
outsb
jle
xchg
movb
sti
out
and
outsb
fsts
pop
movaps
pop
sbb
test
stc
ss
repnz
ret
test
mov
fld1
fucomi
std
jmp
into
adc
lea
mov
test
sahf
cmpsb
enter
ds
mov
out
pop
add
aad
outsl
cmp
lea
jmp
adc
push
int3
cmpsl
mov
daa
or
ret
jecxz
in
xchg
xor
mov
les
fdivl
cmp
repnz
ss
push
mov
es
call
insl
fs
int
rcr
adc
cs
lods
outsb
mov
and
jb
lds
cmpps
fadds
dec
imulb
arpl
rorb
mov
dec
ret
or
aad
dec
inc
lock
in
add
gs
or
inc
aam
fwait
js
or
adc
mov
movsb
insl
adc
fistpl
stc
mov
sti
adc
or
hlt
cmp
push
cmp
xchg
lods
fisubs
nop
movsl
pop
and
fiadds
cmp
cltd
imul
jns
inc
xchg
and
sub
mov
arpl
sub
movsl
enter
cmc
loopne
in
sbb
inc
mov
cmpsl
movsl
mov
or
push
test
xchg
hlt
xorl
std
mov
rcrb
icebp
nop
stos
aaa
sub
or
out
add
push
cs
stos
pop
jp
orl
iret
push
mov
xchg
pop
icebp
fsubs
cs
sub
push
test
xchg
movsb
in
and
pop
hlt
test
sbb
lret
xor
mov
cmp
enter
in
out
mov
fmuls
and
lods
pop
addr16
in
pop
sub
fsubs
cmp
jbe
push
mov
outsl
data16
lock
mov
mov
cs
ficoms
mov
inc
lret
fistl
and
lahf
jmp
das
rcr
cmp
fs
add
test
imul
fsubs
popa
pop
out
mov
outsl
call
pop
or
xor
inc
push
mov
por
test
mov
or
dec
shr
lcall
pop
adc
into
mov
sub
mov
mov
adc
and
xlat
mov
imul
leave
repnz
pop
sbb
or
insb
les
push
mov
int
out
mov
sub
stos
adc
orb
pop
shll
add
dec
out
jl
push
sub
fists
cmc
cmp
mov
daa
add
jbe
jb
testl
dec
outsl
push
and
mov
xor
pop
sbb
sbb
and
push
xor
push
or
mov
mov
jnp
lods
push
pop
adc
push
mov
xchg
dec
ret
inc
jg
movsb
lock
stos
pop
sbb
jmp
loopne
int3
sub
jae
icebp
sbb
arpl
xchg
sbb
inc
aaa
lds
push
lret
xchg
fisubrl
in
push
mov
repnz
addr16
pop
testl
xchg
push
notl
pop
add
jno
or
insb
das
imul
pop
imul
lcall
xchg
xchg
and
es
into
loop
je
mov
xor
sbb
vfrczsd
mov
mov
fxch
dec
mov
jg
imul
add
neg
addl
dec
dec
imul
rolb
addb
shlb
inc
sub
fiadds
jp
and
xor
ds
mov
icebp
xchg
jle
inc
cltd
mov
dec
cmp
inc
cmp
ljmp
dec
icebp
push
and
imul
mov
cltd
jb
adc
jecxz
xor
ficoml
cli
aam
or
add
jnp
mov
testb
loopne
xor
dec
lret
mov
repz
add
loopne
enter
loopne
and
xor
hlt
stc
jg
std
aaa
pop
add
push
pop
push
cmp
and
out
push
sti
dec
inc
lret
mov
mov
jmp
das
xor
pushf
add
pop
jl
cmp
pop
and
mov
test
lcallw
xor
hlt
int3
mov
or
jmp
or
cs
pushf
imull
jecxz
sub
or
outsb
mov
dec
je
mov
in
popa
aaa
mov
jle
sub
jne
xor
popa
aad
cmp
std
push
mov
test
inc
arpl
out
jp
jle
add
lock
mov
mov
fldt
jo
xchg
dec
mov
scas
push
std
xor
lock
or
orb
jmp
add
add
cmp
cli
aaa
xchg
psllw
xlat
xchg
leave
insb
adc
cs
loopne
loop
or
pop
xor
scas
sbb
out
and
pusha
imul
adc
xor
fld
lds
pop
loope
mov
inc
or
adc
inc
cmpsl
clc
sbb
pop
hlt
movsl
pop
roll
lea
inc
adc
dec
mov
stc
xor
frstor
pusha
xchg
orb
or
xchg
push
and
fmul
adc
cmp
pop
inc
scas
mov
or
sarb
add
mov
cmc
call
aam
sub
fs
sub
inc
cs
xchg
push
pop
test
aam
sbb
idivb
pop
loop
jle
popl
or
repnz
mov
imul
cld
and
mov
cmova
dec
aam
rorb
push
sahf
jne
inc
dec
sbb
outsb
flds
xor
loope
divb
sub
cmp
inc
lahf
aas
mov
ljmp
push
insl
popa
mov
xor
lds
pop
cld
cmpsl
lock
mov
shrl
sbb
aad
icebp
enter
cmp
and
adc
push
call
adc
push
ss
ret
cltd
aam
insl
xchg
aad
and
aas
xchg
mov
push
pop
adc
in
mov
dec
or
rorb
sub
add
add
stos
pop
pop
mov
lea
es
cwtl
and
mov
roll
rol
mov
adc
cmp
inc
sbb
les
aaa
out
aam
lea
adc
out
fildl
subps
lods
pop
in
inc
jnp
adcl
fnstsw
fwait
test
adc
cli
add
in
xlat
pop
ret
jns
dec
cltd
push
mov
insl
cmpsb
ffree
sbb
mov
mov
sbb
push
mov
imul
adc
push
jno
jmp
shll
jae
push
out
jo
repz
xor
out
add
inc
ficompl
and
std
adc
popf
je
dec
out
sub
ja
loopne
ror
xchg
sti
cmpl
push
dec
xchg
push
mov
jno
cltd
sub
cli
into
inc
push
leave
imull
adc
adc
and
or
xchg
push
sti
adc
das
pushf
xchg
sub
sub
ret
jnp
adc
in
das
mov
xchg
push
adc
inc
movsb
dec
add
cmp
test
cmp
inc
jo
inc
cmp
dec
pop
xchg
add
and
sub
sub
fwait
out
cs
data16
lods
sub
ljmp
in
add
rorb
out
dec
and
add
jle
call
movsb
xor
xor
notb
out
gs
sbb
push
xchg
push
adc
adc
xchg
inc
jns
cmp
out
int
cmp
inc
sub
loop
jae
movsl
adc
push
xchg
shl
mov
jle
bound
adc
cmp
aam
mov
lods
ljmp
cmp
ja
fdivrl
inc
pop
cmpsl
mov
testl
mov
popf
cmpsl
scas
mov
mov
lret
mov
rcll
test
sub
push
cmc
pop
inc
lea
xor
lea
clc
pop
xchg
hlt
add
pop
rclb
and
lahf
pop
fs
mov
sti
push
mov
arpl
inc
push
jbe
aam
outsb
mov
mov
cmpsl
xchg
insb
movsl
push
add
mov
in
repnz
xchg
test
das
sbb
xchg
mov
and
mov
adc
andl
xchg
pop
cwtl
fistpl
adc
xchg
inc
sub
push
inc
in
outsb
cmp
aaa
aad
sti
pop
inc
stos
pushf
dec
scas
and
into
jb
xor
aaa
inc
push
mov
stos
fsts
inc
test
out
hlt
jns
sub
in
sahf
pop
mov
sbb
rolb
mov
inc
jle
mov
aad
pop
mov
xchg
xchg
les
xchg
mov
in
and
popa
sub
jae
xchg
fwait
enter
sbb
cmp
mov
and
test
pop
dec
in
cwtl
test
icebp
mov
add
jge
mov
add
call
loopne
cmpl
and
sub
imulb
and
mov
xlat
push
pop
dec
negb
jmp
outsl
inc
jp
leave
test
cmc
fidivrl
push
add
cmpb
repnz
inc
insl
sbb
and
mov
add
lods
mov
aaa
mov
or
adc
and
jbe
iret
cmc
or
icebp
sbb
pop
xchg
pop
xor
xchg
or
push
out
xchg
stos
sbb
fmuls
lret
jnp
jge
out
mov
add
or
mov
xor
dec
fwait
push
adc
mov
bound
out
sub
hlt
loop
inc
push
ja
ret
adc
sub
jmp
pop
inc
lock
mov
xlat
xor
ret
push
xchg
scas
daa
aad
jg
and
jno
sbb
aam
sbb
push
mov
ret
inc
jecxz
ljmp
mov
pop
jae
push
call
or
sub
repz
and
ljmp
jmp
jns
lds
add
lock
pop
fucomp
xchg
imul
xchg
dec
ret
lds
dec
and
and
stc
jmp
jg
or
xchg
pushf
cli
dec
jno
push
mov
jb
inc
rorl
mov
sarl
push
pusha
cwtl
mov
lods
pushf
repz
sub
ret
out
cmpsb
xor
pop
test
xchg
xchg
jnp
pusha
xor
push
xor
xchg
xchg
inc
in
pushf
daa
jp
cli
jnp
push
push
or
sub
cmpsb
xor
leave
and
xchg
arpl
dec
xchg
pop
imul
xor
sarb
xor
pop
scas
shll
loopne
and
lcall
jne
stos
mov
or
lock
mov
into
imul
int3
hlt
stos
mov
mov
pop
jnp
test
daa
adc
dec
popa
jae
nop
mov
rclb
roll
jmp
add
push
add
test
andb
inc
in
mov
data16
xlat
mov
xchg
sti
mov
test
ret
add
mov
insl
cltd
stos
mov
lods
test
imul
roll
lret
inc
nop
mov
pop
sub
push
mulb
adc
xchg
add
test
and
inc
or
push
or
mov
adc
out
dec
fs
add
cmp
mov
push
jl
lahf
add
cmc
dec
cmp
pushf
jmp
mov
in
sbb
mov
fldz
ret
xorl
lods
xchg
es
sub
or
and
fidivl
stos
enter
mov
mov
xlat
and
inc
stos
insl
aaa
sub
push
jmp
bound
mov
fsts
imul
rorb
in
add
lahf
fildl
rol
push
lock
mov
xchg
fs
pusha
xchg
and
or
mov
xchg
repz
dec
pop
xchg
xchg
pop
loopne
lret
pop
lock
insb
dec
fimuls
dec
and
pusha
fldcw
nop
cmp
lods
xlat
sbb
mov
adc
lock
lcall
inc
and
add
ss
das
in
adc
cmpsb
push
clc
push
fucompp
sahf
fwait
inc
jg
pop
mov
mov
into
stc
pusha
out
icebp
lea
lds
pop
push
sarb
cmp
cmpsl
stc
and
push
rol
push
icebp
adc
adc
jl
pop
es
ljmp
sti
cltd
je
icebp
popa
aad
mov
jae
test
add
mov
xorb
jne
fimuls
mull
cmc
aaa
sti
push
adc
es
jne
mov
or
push
outsb
mov
arpl
inc
or
cmp
xchg
mov
sbb
movsb
mov
jne
inc
cmpl
and
or
adc
inc
sub
test
inc
enter
push
push
loop
test
push
rcrl
stc
pop
mov
inc
jnp
inc
sbb
cmp
mov
push
mov
call
adc
pop
pop
jns
lods
jb
push
inc
add
push
jnp
fisttpll
mov
pop
and
push
lock
shlb
pop
sub
add
ret
push
scas
xchg
mov
sub
fs
pop
jecxz
push
push
rcrl
and
sbb
psubw
and
lret
add
pop
xchg
icebp
daa
and
mov
dec
fbld
adc
iret
sbb
xor
and
pop
sarb
push
mov
sbb
jl
or
add
mov
lret
and
xor
xchg
aaa
mov
push
xchg
andl
push
insb
xlat
addr16
call
imul
pop
jle
dec
jecxz
push
bound
dec
sub
sub
sub
lds
xchg
pusha
sbb
mov
gs
xchg
sub
into
xchg
sbb
fsubrs
push
push
sbb
jecxz
pop
dec
ret
loopne
outsb
cmp
xchg
ret
pop
and
stc
ljmp
sub
mov
in
mov
push
fld
xchg
adc
ret
mov
cmp
into
xor
xchg
scas
repnz
fwait
xor
dec
push
pop
loop
push
lds
out
cmp
sbb
outsl
inc
jnp
lock
faddl
stos
sarl
jns
ds
mov
or
pop
mov
test
cwtl
xchg
addr16
add
rcl
push
mov
mov
inc
add
aam
sbb
in
or
push
cwtl
fstpt
fmull
pop
in
adc
aas
sub
loopne
nop
sub
jle
ror
xchg
mov
mov
mov
xor
mov
jo
int3
jo
test
mov
xor
loopne
nop
iret
data16
imul
cmp
nop
jns
jae
dec
testb
shlb
ja
mov
pop
mov
gs
jecxz
mov
mov
inc
movsl
or
inc
mov
jmp
adc
and
jns
dec
mov
sahf
and
ja
sub
iret
cld
or
sbb
call
xchg
cmc
lret
pop
mov
mov
adc
xchg
push
loope
dec
lahf
adcb
and
lret
dec
fadds
stc
cmp
pop
sti
jno
ds
jle
add
cmpsb
int
push
bound
fs
stc
and
pushf
mov
lret
stc
lods
cltd
jno
jb
inc
sti
pop
jo
ret
cmp
fbstp
aam
adc
pop
stos
cltd
jecxz
addb
shrl
add
push
ret
and
arpl
outsb
aad
out
ds
cmp
fcmovnu
adc
pop
cs
faddl
jl
pop
movlps
cmc
push
jo
cmp
or
sub
ds
mov
je
imul
arpl
out
fcoms
push
jl
mov
cs
cmp
jecxz
cmpl
outsl
movsl
or
push
jbe
cs
or
adc
jo
mov
push
xor
jbe
mov
xchg
and
addr16
mov
lods
aam
adc
cli
jne
out
dec
mov
sub
cltd
outsl
xchg
jo
clc
insl
dec
pop
mov
adc
xor
fucomi
mov
scas
push
es
arpl
fucom
enter
icebp
outsb
aaa
bound
mov
ret
pop
andb
push
xor
sub
idivb
mov
xor
mov
jo
out
addb
mov
mov
movsb
sbb
aad
inc
push
xor
mov
idiv
std
das
inc
xchg
movl
jns
ret
pop
shll
and
xchg
and
jmp
repnz
lock
push
imulb
and
bound
repnz
jmp
jne
xchg
adc
int3
adc
loopne
sub
sub
xlat
xchg
out
xchg
mov
push
aas
insb
or
mov
addr16
mov
mov
stos
and
adc
ds
jno
fisubs
rcrl
testl
test
mov
inc
mov
roll
inc
pop
lods
call
mov
mov
xchg
xor
sbb
jno
paddusw
lock
ljmp
mov
adc
or
cld
sbb
icebp
ret
or
mov
cmp
fildll
sbb
jb
push
negb
xchg
fwait
loope
cmp
jecxz
pop
fcomip
add
lret
or
testl
fcomps
jno
cmc
cmc
push
jecxz
cmp
adc
or
loopne
jecxz
pop
mov
cs
or
add
test
outsl
dec
mov
fwait
in
lahf
adc
aam
aas
jle
ret
test
mov
cmp
mov
ljmp
mov
std
mov
xorb
jb
jmp
loopne
movsb
movsb
aaa
mov
xchg
xchg
mov
cmpsb
jp
xchg
into
fs
les
or
push
or
cmp
mov
rcl
push
test
mov
or
lds
popf
xorb
jne
inc
repnz
call
inc
out
enter
loop
pop
jg
or
cmp
scas
jae
fcompl
xor
dec
sub
adc
mov
push
ja
mov
add
jne
cmp
mov
dec
inc
cmp
cld
pop
inc
ret
aas
iret
fsub
inc
cmp
rolb
jmp
lock
adc
sub
mull
fsqrt
mov
jb
mov
and
or
xchg
shll
sbb
mov
shll
adc
jg
clc
mov
pusha
xchg
and
dec
out
pop
cmc
mov
lcall
std
jno
leave
mov
inc
pop
lods
mov
dec
xor
push
jp
push
daa
enter
cmp
movsb
pop
jbe
push
or
and
lahf
cli
mov
mov
rolb
add
loope
in
cmpb
insl
xchg
add
imul
adc
mov
sbb
arpl
iret
jae
xchg
push
xor
sbb
dec
nop
stos
mov
lret
pushf
movl
jge
dec
sub
and
incl
jae
rorb
sahf
inc
dec
pop
mov
adc
loopne
inc
aaa
push
clc
cmp
imul
cld
sub
into
ljmp
shl
jb
jl
dec
aad
xchg
inc
test
testb
sbb
cmpsb
xorl
in
pop
sub
and
or
aas
add
rcll
or
push
scas
stos
mov
test
popf
outsl
mov
lcall
inc
mov
or
push
adc
repnz
xor
inc
enter
std
nop
cltd
or
enter
mov
sti
pop
or
sbb
insl
aaa
arpl
jbe
inc
push
rcr
imull
mov
ja
cmp
pusha
shl
xchg
or
data16
out
push
outsb
nop
test
dec
lods
pop
in
loope
lcall
push
ja
cwtl
or
insb
inc
xchg
aam
sub
dec
and
icebp
lock
jge
jne
mov
fbld
cmp
mov
pop
shlb
std
push
in
imul
jae
enter
lret
mov
stos
jns
sbb
icebp
jmp
adc
clc
mov
outsl
es
and
cmp
inc
andb
clc
cmp
test
xor
lock
or
data16
and
cmpsb
adc
lds
xchg
mov
mov
inc
pop
xor
pop
mov
mov
pop
loop
mov
daa
push
loop
in
and
cld
gs
shr
into
cli
gs
jbe
sbb
mov
adc
stc
jmp
mov
sbb
jl
sbb
aam
and
push
clc
call
xchg
fdivrs
push
jne
ds
lcall
xor
pop
repnz
mov
and
adc
xlat
lahf
xchg
leave
pop
sub
insb
jbe
pushf
roll
cmp
push
cmp
and
repnz
or
in
adc
nop
out
xor
dec
test
loopne
insb
jns
aas
jnp
stc
adc
jmp
adc
pop
adc
rcll
mov
pop
movsb
cmp
sahf
sarl
imul
mov
loopne
add
daa
inc
addl
in
cmp
mov
mov
inc
sahf
inc
popf
sub
adc
add
or
int
cmp
mov
mov
xor
mov
sarb
fistpll
gs
ror
insb
xlat
xchg
into
cmp
add
ljmp
dec
ja
or
sti
pop
andl
adc
leave
ds
std
aad
nop
mov
fcoml
mov
hlt
iret
lock
mov
inc
and
pop
lahf
mov
jg
icebp
inc
push
stc
xor
sbb
pop
test
mov
jle
es
push
imul
repnz
push
testb
inc
adc
inc
loope
scas
jns
push
or
lret
sub
cmp
aam
clc
stos
dec
sarb
sbb
push
mov
push
setnp
mov
jno
cmp
inc
mov
das
lret
or
push
out
xchg
pusha
sub
iret
mov
mov
xor
push
movsb
and
xchg
es
mov
sub
xor
cmp
mov
repnz
arpl
out
pop
cli
and
ret
jns
or
sbb
in
stos
mov
dec
mov
in
fisttpl
outsb
cwtl
addr16
adc
cmp
pop
ds
mov
xchg
inc
jg
adc
data16
scas
into
call
mov
fidivrs
sub
dec
out
lods
dec
decb
push
inc
xor
rep
imul
fistps
lock
adc
pusha
popa
push
add
jge
rcl
or
mov
dec
cmp
ds
inc
bound
xchg
cmp
cs
or
roll
out
inc
int3
lcall
arpl
sarb
inc
gs
mov
cwtl
push
int3
fs
add
xchg
lods
or
mov
popf
cmp
jo
decl
sarl
adc
shlb
mov
jo
push
dec
add
sbb
add
push
hlt
mov
xor
push
xchg
pushaw
xor
rol
mov
subl
repnz
inc
dec
xor
sbb
cmc
outsl
dec
fneni(8087
pushf
xlat
pushf
jge
in
push
popf
or
jp
into
pushl
push
imul
gs
jle
dec
sahf
int
std
xor
mov
dec
adc
arpl
cmpsl
mov
sbb
push
fimull
jb
push
mov
jle
les
add
push
lea
fidivrl
mov
mov
popa
mov
jmp
sub
pop
and
jae
jo
aam
push
lahf
fwait
and
sbb
jns
xchg
adc
jmp
aad
insl
push
fmuls
cli
bound
jno
xor
cmp
mov
and
leave
cmp
sarb
lret
push
mov
scas
cmp
xor
cmpsb
pop
mov
mov
jmp
inc
and
repnz
rorb
jp
adc
xchg
push
inc
cmp
lea
sti
mov
dec
stos
pusha
adc
orb
sarb
xor
jg
xor
pop
and
aad
lret
inc
cs
lock
cmp
loope
arpl
lret
addr16
pop
and
insb
hlt
pushf
bound
rorl
ret
xor
xchg
imul
not
mov
lcall
repz
cmc
mov
mov
push
popa
inc
les
sub
mov
decl
jle
mov
fistps
or
lahf
jp
in
fcoml
fsubrp
repz
inc
addr16
or
out
inc
jmp
pop
adc
stos
movsl
xchg
adc
sbb
add
sub
rclb
pop
xor
cwtl
sub
mov
adc
int
inc
stos
xchg
sub
jae
push
pop
clc
fimull
fldl
cwtl
push
shlb
or
icebp
cmc
push
cmpsb
enter
dec
add
leave
aad
sarb
or
dec
fcomps
js
sbb
pop
in
aam
dec
xchg
add
cmpl
popf
mov
pop
pusha
jno
jmp
pop
push
add
das
xor
cmp
mov
pop
mov
push
rclb
cmpl
jp
push
pop
stc
and
mov
fwait
xlat
movsl
pusha
out
inc
fldcw
lret
push
xchg
jnp
mov
push
and
and
pop
xor
scas
mov
jne
mov
setge
incl
in
push
mov
test
mulb
inc
test
inc
sbb
jb
test
call
ret
stos
scas
imul
into
js
mov
dec
insb
popa
out
gs
adc
pop
adc
je
xchg
cli
stos
leave
popf
cmp
test
in
mov
cmp
sub
adc
mov
mov
iret
jae
pop
popf
push
rolb
xchg
inc
sub
fmul
cmpsb
cmp
stos
dec
pusha
fbld
fldt
scas
cltd
jl
mov
pop
jo
outsl
in
jbe
jae
bound
push
inc
adc
push
subl
pop
xor
push
and
push
xchg
jns
test
jl
jp
jmp
sti
repnz
adc
lods
cli
scas
jmp
out
pop
or
xor
pop
pop
pop
push
xchg
cmp
test
fsubs
mov
mov
insb
jnp
call
pop
icebp
int
repz
test
sbb
roll
ret
loop
xor
insl
sbb
xor
jne
jle
sub
jae
adc
cwtl
mov
setne
lret
adcl
add
add
push
jmp
out
fistps
xor
and
and
jge
out
mov
mov
imulb
pop
mov
lock
push
or
xlat
popa
lret
sbb
sbb
mov
cmp
dec
and
insl
test
mov
pop
or
cwtl
clc
mov
test
sub
mov
js
adc
lret
ds
xchg
pop
stos
fdivl
fildl
xor
test
insb
in
insl
add
dec
or
pop
int3
scas
inc
stos
push
ret
cmp
add
dec
lahf
mov
pop
popa
mov
js
jno
lahf
sahf
out
dec
les
xchg
push
inc
push
xor
insb
sub
jmp
add
repz
xor
cmp
mov
push
scas
push
pop
jns
sbbb
sbb
shrl
jno
lds
dec
jns
xchg
adc
das
xchg
sub
sub
adc
out
and
in
icebp
leave
fwait
jae
ret
add
mov
cmpsb
sub
or
cwtl
int
outsl
xchg
push
sub
loope
fidivrl
mov
jl
inc
shlb
adc
jle
cs
and
rcl
sbb
orb
xor
push
notl
inc
fistl
jns
add
mov
ficoms
in
inc
adc
cmp
ficomps
add
inc
push
divl
xchg
fbstp
imul
das
out
lret
sbb
xor
adc
xlat
push
sub
into
cmp
mov
outsl
sbb
cmpsl
mov
js
adc
cmc
pop
jl
lret
pop
test
popa
sub
aaa
and
fldcw
enter
cmc
jecxz
cmp
and
repnz
cmp
imul
push
mov
adc
mov
out
mov
ffreep
cli
nop
movsl
cli
dec
gs
xchg
insb
and
mov
sbb
jo
int3
lods
push
cmp
mov
js
mov
lret
rep
clc
jbe
mov
dec
push
sbb
stos
lcall
cli
call
aam
xchg
popf
imul
ret
xchg
jg
in
repnz
pop
dec
in
test
xchg
adc
mov
or
push
scas
push
xor
xlat
mov
xor
mov
stc
test
fwait
dec
mov
add
cmp
pop
std
mov
push
xchg
jecxz
popa
xchg
push
lret
mov
jecxz
xlat
shlb
sbb
fildl
mov
aas
xor
mov
cmp
pop
sub
jbe
adc
push
cmpsb
aaa
cmp
jecxz
cltd
adc
mov
subl
push
rcl
xchg
mov
cltd
ja
mov
sbb
pop
bound
xor
sbb
rcrl
push
insl
cmp
push
rorl
test
pop
pop
loop
sub
and
lret
xchg
cmp
cmp
dec
mov
inc
jg
pop
xor
add
cmp
jae
mov
out
adc
fucomp
mov
xchg
sbb
scas
popf
cs
mov
decl
hlt
cmc
xor
or
jno
mov
adc
sbb
adc
stos
js
cmp
pop
cmp
ret
or
or
fidivrs
cmp
dec
and
add
lods
jno
push
loopne
test
les
sub
sahf
push
ret
pop
xchg
cmp
popa
sub
mov
jl
popa
rol
lahf
mov
xchg
add
sub
aas
mov
push
sub
gs
icebp
adc
mov
fiaddl
mov
lea
fwait
dec
sub
fnstsw
jmp
mov
es
dec
push
or
fsubs
int
lahf
cmp
cmp
pop
xor
sbb
iret
jns
mov
add
stc
pusha
in
pop
cmp
lods
inc
sub
lcall
inc
mov
shrb
lret
stos
in
sbb
lret
jg
dec
push
jb
or
faddl
add
loopne
and
test
les
std
jb
xchg
mov
in
inc
or
push
enter
xor
xchg
adc
ja
repz
rcrb
and
stos
cld
and
jp
add
andb
nop
inc
cmp
push
push
or
call
cmp
loope
out
and
mov
inc
push
movsb
inc
subps
scas
cltd
loopne
mov
mov
xor
xorl
leave
es
jns,pn
scas
add
or
out
xchg
test
pop
inc
mov
loopne
call
fisubrl
in
packuswb
mov
mov
add
sbb
dec
add
inc
or
ja
imul
mov
push
cmc
pop
mov
and
rolb
push
inc
mov
mov
nop
gs
addr16
push
jns
clc
inc
ds
and
mov
daa
cwtl
push
fildl
pop
or
mov
inc
mov
push
movsl
cli
lods
in
mov
daa
arpl
adc
or
sub
cwtl
mov
dec
push
push
add
mov
mov
test
clc
push
dec
ljmp
das
jmp
or
ljmp
mov
mov
push
imul
into
fstp
push
xchg
lea
xor
je
lcall
roll
xchg
inc
lds
jp
ljmp
cmp
jns
in
fwait
dec
pop
sub
je
or
popf
ret
out
cmp
xchg
aas
cmp
mov
repz
movb
cmpsl
mov
dec
call
dec
pop
cltd
xchg
loop
cmpsb
mov
ljmp
xchg
mov
shll
cmp
cmp
xchg
pop
leave
frstor
cmc
arpl
bound
cmp
dec
aad
and
shlb
lods
sti
adc
and
jno
sub
push
idivl
dec
dec
int
cltd
sbb
mov
mov
mov
mov
lock
les
and
adc
cwtl
jg
inc
jne
mov
xor
push
sub
sub
dec
aam
int
push
bound
lcall
sbb
xchg
sub
pushf
pop
fnsave
mov
add
xor
mov
scas
dec
mov
sbb
daa
mov
and
dec
push
adc
test
cld
in
push
ds
pop
dec
imul
jecxz
xor
add
dec
les
push
pop
dec
aam
imul
sub
xchg
cmp
jb
add
mov
or
dec
xchg
pop
ret
enter
or
cmp
in
repz
lahf
mov
jmp
lret
outsl
jecxz
stos
push
out
sub
adc
and
ljmp
adc
lcall
xor
mov
int3
and
add
mov
mov
or
jae
push
cmp
lock
pop
lea
daa
sub
js
jno
cmpsb
mov
fimull
dec
inc
repz
jecxz
xchg
xlat
movsb
clc
es
and
pop
inc
je
cmp
cmp
pusha
scas
mov
push
mov
call
jo
sub
rorl
push
bound
ret
push
push
imul
or
add
sbb
and
lods
int
cs
pop
or
sti
addr16
inc
or
pop
jle
mov
xor
pop
stos
push
outsl
inc
popf
rorb
dec
fs
dec
pop
incl
fsubr
push
cmpsl
xchg
xchg
outsl
xchg
xor
scas
or
fstpl
pop
sub
or
xlat
out
mov
aad
and
lds
in
sbb
stos
in
scas
leave
fstl
sbb
out
in
pop
adc
jns
inc
lds
out
cmp
xlat
jge
aad
jbe
mov
sub
cmp
jb
mov
cmp
mov
test
mov
cmp
pop
sar
pushf
lcall
or
imul
adc
fisttpl
ret
fwait
mov
xor
adc
and
or
lret
push
int
push
sti
xor
mov
cmc
mov
xchg
movsb
push
std
jecxz
cmp
xor
lds
int3
mov
inc
mov
sahf
jp
sub
daa
jl
push
fldl
xchg
xorl
sbb
push
arpl
iret
stc
inc
jne
je
les
aaa
or
jb
fisubs
pop
pop
in
imul
imul
cmpsl
insb
sub
lahf
orl
pop
dec
sub
movsl
mov
data16
fwait
icebp
push
imul
sbb
jnp
inc
in
mov
aad
or
push
xor
pop
leave
pop
imul
add
cltd
sub
jge
jle
test
jmp
pushf
aas
inc
mov
movb
add
in
test
lea
into
fwait
mov
call
push
popf
lcall
repnz
repnz
imul
in
add
cmp
test
incb
jns,pn
ret
in
inc
imul
push
mov
mov
cmpsb
lds
rcrb
clc
out
sub
sub
pop
fcomi
push
mov
pop
pop
aam
dec
mov
out
in
mov
inc
inc
cmp
jp
dec
shr
dec
stc
adc
sbb
insb
movsl
push
stos
inc
push
cltd
jle
fwait
pop
push
movl
sti
movsl
std
jbe
cli
notl
bound
ljmp
cmp
aas
jmp
xor
es
lahf
inc
icebp
jl
dec
aam
mov
sbb
int
mov
inc
or
cltd
pop
and
popf
cmp
das
sbb
mov
xchg
leave
mov
insb
jl
mov
mov
loopne
jae,pt
mov
lock
cld
bound
clc
sahf
stos
pop
dec
insb
sub
stos
sbb
mov
inc
mov
nop
out
cmp
stos
lsl
add
xor
adc
daa
cmp
pop
mov
pop
sbb
call
pop
cmp
cmp
push
or
popa
mov
pop
outsb
jge
xchg
pop
jae
mov
loope
mov
jno
lds
out
push
int3
insb
or
jle
push
lret
ficoms
jne
sub
mov
lahf
mov
loope
xor
inc
push
js
pop
jg
fsubrp
pop
push
xchg
je
movsb
pop
movb
dec
push
xorb
xchg
repnz
mov
push
jl
insb
cs
adc
clc
ret
movsb
sbb
out
ljmp
jge
adc
lods
aas
rorb
and
pop
outsb
sub
push
stos
push
xor
add
mov
iret
jge
mov
clc
arpl
ss
adc
dec
or
xchg
ds
sub
sbb
lcall
xor
sarb
les
lds
pop
sbb
mov
sti
loopne
add
lock
inc
pop
or
cmp
orl
fmull
insl
das
pop
xor
iret
dec
pusha
add
inc
int3
int
jmp
popa
sub
mov
push
loope
push
sahf
push
out
js
push
mov
adc
or
pop
pop
xlat
mov
add
xchg
push
outsl
call
add
stos
lcall
leave
das
popa
es
sub
ret
in
filds
jb
or
mov
xchg
pop
sti
ret
lret
xor
xor
push
pop
jecxz
adc
xchg
sub
mov
repz
test
je
test
sub
leave
je
in
fnstsw
das
cmp
xchg
js
mov
dec
push
out
pop
sti
mov
sbb
popf
dec
insl
add
dec
push
out
jns
pop
ss
shr
pushf
and
scas
icebp
inc
pop
pop
push
stos
fisttpl
push
lahf
jg
fnsave
mov
jno
mov
mov
cmp
cld
es
popa
or
add
orb
int3
inc
mov
out
jae
xchg
sub
sbb
pop
adcb
jb
jno
xchg
fst
add
xor
out
lock
mov
lea
stos
and
test
pop
les
mov
in
sub
loop
xchg
pop
dec
fdivs
rorb
mov
movsb
insb
daa
and
in
enter
inc
add
scas
sar
sbb
inc
jns
and
and
dec
rcrl
mov
imul
fistps
idivb
inc
outsl
repnz
inc
xchg
inc
cmp
inc
es
or
cmp
inc
shlb
mov
lahf
aam
fs
es
mov
scas
sub
shrb
xor
inc
in
std
sub
ficoml
xor
inc
repnz
fdivrl
and
push
cmp
xor
es
bound
sub
and
out
xor
xchg
mov
sub
mov
in
int
xchg
in
stos
dec
stc
ljmp
mov
rorb
aad
adc
ja
mov
stos
insb
jecxz
cltd
xchg
or
pop
inc
pop
jmp
push
cmp
jg
cmpsb
push
mov
add
in
cmp
ficoms
flds
xchg
out
outsl
jns
mov
aas
divl
mov
mov
fidivrs
sbb
call
jne
out
test
test
test
xor
adc
sub
or
inc
cld
rcrl
scas
push
fidivrl
mov
mov
xor
mov
xor
inc
clc
es
iret
setne
mov
xchg
dec
cmp
mov
mov
jmp
mov
xor
ret
fsub
push
cli
xor
divb
jp
out
les
mov
inc
popf
mov
mov
mov
js
mov
jnp
inc
lods
sub
out
fs
push
shl
out
adc
test
lea
pop
std
fucomi
dec
out
lahf
ljmp
mov
jbe
je
or
pusha
imul
sbb
and
or
jge
pop
add
mov
cmp
adc
sbb
in
andl
adc
mov
mov
cmp
pop
ljmpw
adc
sahf
mov
cld
shll
sub
xor
test
inc
sbb
xchg
clc
lods
incb
test
shrb
sarb
xor
push
js
adc
movsb
cmp
les
or
das
sahf
stc
ficoml
sub
rol
push
ret
sti
stos
sub
stc
xchg
out
cltd
sbb
sub
in
xchg
mov
mov
mov
sub
fucom
rorb
loopne
inc
sbbb
test
addb
cmp
or
cmp
in
push
push
out
lods
repnz
mov
xor
call
test
in
jnp
imul
dec
jmp
mov
lcall
vdivsd
pop
cld
out
jnp
jge
sbb
mov
xor
loop
lahf
sub
fildl
push
cmc
sbb
xlat
adc
rcrb
rclb
insb
imul
mov
sbb
lock
in
js
and
adc
fistps
into
leave
faddl
fiaddl
inc
xor
mov
iret
into
and
push
int3
imul
faddl
jmp
jno
jmp
dec
iret
push
subps
mov
cmp
pop
outsb
scas
xchg
rolb
mov
data16
xorb
pop
movsb
inc
mov
imul
jae
in
xchg
nop
bndldx
and
mov
aad
dec
mov
xor
repnz
mov
frstor
fistl
xor
jg
sbb
mov
sbb
enter
test
jmp
test
addr16
sub
nop
sahf
push
nop
lods
rol
lods
xchg
jg
mov
inc
pop
in
pusha
mov
ljmp
adcl
pop
xor
out
test
dec
cmp
fadd
push
je
sbb
jg
aad
push
out
negl
sti
jbe
hlt
movsb
inc
into
in
cmpl
repnz
test
rcll
or
ljmp
push
jp
adc
cwtl
jbe
xchg
fdivrs
stos
pop
push
into
hlt
daa
dec
sbb
movsl
ja
lea
cmpsb
dec
push
mov
adc
push
mov
test
inc
pop
cmp
not
or
add
out
mov
xlat
test
inc
inc
adc
ret
inc
repnz
jl
lahf
mov
jmp
add
mov
das
sub
dec
sbb
lahf
push
pop
dec
int3
aaa
push
mov
cwtl
scas
ds
pusha
mov
push
fwait
xchg
add
push
adcb
lock
push
inc
pop
xchg
cmpsl
dec
mov
cli
fdivp
mov
push
test
or
lret
xchg
sahf
sbb
xchg
test
xchg
shl
leave
sbb
loop
stc
add
je
push
sti
loop
xlat
inc
sub
lods
insl
mov
mov
shlb
jmp
push
cld
bound
leave
add
jo
xchg
cli
arpl
xchg
inc
jge
and
scas
out
adc
xor
fwait
or
cmp
push
sub
mov
daa
adcb
cmp
cmc
imul
xorl
push
sub
mov
sub
shll
and
ss
adc
test
cwtl
out
jp
add
or
mov
scas
and
lret
push
cmpsb
pop
fld
sub
nop
xor
nop
outsl
mov
or
in
gs
sbb
pop
lret
imul
xchg
cmpsb
gs
addb
cwtl
xlat
nop
cltd
xor
dec
pop
outsl
jmp
sbb
pop
mov
sbb
pop
push
out
add
cmp
fsts
jbe
fdivrl
mov
xor
inc
sbb
fmul
pop
jle
push
xlat
cmp
adc
fwait
pop
in
cmp
xor
ds
dec
push
mov
out
mov
mov
iret
add
int3
lock
ret
jl
addr16
mov
and
popf
mov
cmp
out
icebp
jge
std
clc
jge
adc
xlat
fcomp
pop
rolb
cld
add
sahf
push
push
cmp
dec
popf
sub
push
in
xchg
daa
hlt
pop
push
fcomi
ficompl
mov
mov
push
call
fwait
out
ficomps
xchg
push
test
outsl
stos
sbb
mov
xchg
ljmp
je
aas
cmp
jne
sarb
hlt
fimull
enter
enter
mov
cmp
sbb
push
mov
je
incb
test
and
cs
stos
stos
mov
mov
loope
lcall
add
add
daa
push
mov
outsb
sbb
insb
rcrl
in
dec
int
out
pushf
pusha
mov
aas
js
js
shlb
out
fsubrs
and
and
sbb
add
fisubrl
mov
fbstp
mov
aaa
data16
adc
xchg
mov
push
std
inc
push
adc
mov
aaa
fsub
popf
cld
sbbb
xchg
mov
popa
repz
subl
add
xchg
in
push
push
inc
jg
inc
mov
stos
negb
out
stos
push
ss
add
jns
lea
scas
es
mov
movsb
inc
ret
es
mov
stos
jge
lds
in
adc
sub
pop
or
mov
cmovg
xchg
les
pop
push
pop
or
cmp
fldz
not
fcoml
mov
sbb
loope
sub
stc
lds
fstpl
div
jecxz
dec
lea
fiaddl
xor
push
and
test
push
inc
fs
mov
mov
pop
mov
mov
xor
daa
fstl
out
insb
aas
int
push
jmp
xchg
xchg
mov
sarl
dec
cmp
outsl
hlt
xor
jp
mov
fdivs
inc
dec
mov
adc
adc
jecxz
pop
imul
inc
add
or
mov
ja
sub
scas
dec
jmp
fwait
push
mov
mov
arpl
test
jnp
les
loopne
decb
mov
sarl
xor
cli
xor
mov
in
jmp
sahf
and
cltd
inc
push
insl
add
imul
push
mov
shl
and
cmp
push
lock
mov
mov
movsb
movsb
inc
cmp
pop
or
ret
lret
mov
inc
mov
fisubrl
pop
inc
cmpsl
out
inc
mov
lahf
or
es
idivl
push
cltd
xchg
sub
into
sahf
lods
or
mov
pusha
shll
mov
add
cld
sahf
inc
mov
xor
pop
jo
sbb
pop
adc
adc
mov
mov
mov
mov
imul
cwtl
loope
mull
lcall
roll
int
inc
dec
hlt
fucom
jno
lea
das
pop
mov
pusha
dec
and
scas
and
jnp
lahf
aam
int
and
push
sub
cwtl
and
jmp
shl
pop
mov
push
mov
jnp
dec
int3
inc
xchg
inc
divl
sub
clc
cmpsl
addr16
in
xor
shlb
inc
adc
inc
inc
fwait
sbb
xchg
inc
dec
lods
add
dec
enter
and
out
cmp
add
icebp
or
inc
leave
frstor
addb
jle
dec
xor
dec
sti
or
xchg
mov
div
int
dec
jle
sbb
gs
push
sub
and
add
lret
sarb
sti
mov
aaa
pop
pop
pop
out
or
test
std
push
or
mov
dec
inc
ss
movsb
mov
inc
in
jne
mov
inc
adc
xchg
cmovbe
mov
fnstenv
xchg
sahf
test
mov
dec
jae
jecxz
cltd
jne
cmp
aas
sub
in
arpl
sub
sub
xchg
in
push
inc
mov
cmc
jl
lret
int
jg
inc
in
pop
js
mov
scas
or
shlb
push
or
or
jp
out
pusha
jns
into
outsb
mov
cmc
jge
or
sbb
out
fs
mov
pop
mov
dec
mov
jo
in
ret
mov
cwtl
nop
dec
out
push
jmp
inc
or
fwait
ljmp
adc
loopne
loop
jnp
aaa
adc
jb
add
jns
inc
sbb
push
sahf
jmp
sbb
sub
jo
sub
les
mov
insl
push
jl
lods
mov
cmp
inc
xor
in
sub
xchg
lret
mov
insb
jle
adc
or
sub
popf
sub
lds
adc
and
movsb
mov
jge
icebp
filds
test
and
xor
pop
mov
mov
or
fdivrs
push
sbb
cmove
adcb
enter
cmovbe
mov
pop
insl
inc
popf
inc
or
jns
stc
and
jg
ret
cmpl
cs
icebp
mov
mov
or
push
test
aad
stos
mov
and
mov
shrl
sub
push
inc
inc
daa
popa
enter
add
movsb
imulb
push
adc
mov
repnz
inc
xor
les
sub
xchg
arpl
fcoms
div
pop
out
js
insb
sbb
sar
std
test
iret
pop
pop
inc
fucomi
adc
enter
jb
pop
adc
push
add
jl
movsb
sbbl
lret
adc
test
adc
lret
xor
rorl
and
pop
shlb
dec
and
mov
hlt
jb
leave
and
mov
imul
pop
xchg
lods
sbb
inc
or
cmp
dec
mov
lods
pop
stc
cmp
sarb
cmpsb
adc
and
les
aad
out
jp
lods
cmpsb
pop
and
lcall
std
push
in
dec
mov
push
xor
jns
stc
mov
pop
orb
fdivrl
inc
mov
sub
into
pop
push
imul
fstl
aas
dec
shll
mov
fisubrl
maxps
inc
inc
int
mov
pop
in
xor
sbb
pop
cs
push
adc
sbb
adc
dec
sub
add
jo
push
test
lahf
imul
and
or
addr16
out
push
cmpsb
lds
hlt
sub
ficompl
inc
fidivs
outsl
je
inc
lcall
dec
fmull
mov
xor
pop
test
sarb
jns
loop
scas
lret
into
jge
add
pop
loop
in
dec
mov
push
push
jmp
call
popf
outsb
inc
outsb
jp
adc
nop
shlb
outsb
inc
lea
or
cmp
jns
call
inc
push
add
ret
xor
sub
fwait
push
nop
data16
push
sbb
fbstp
popa
ja
mov
pop
jp
imul
jne
aad
xchg
les
or
inc
or
fiaddl
xchg
mov
movsl
pop
and
aaa
sbb
pop
test
lods
mov
in
inc
imul
gs
fldl
js
mov
test
and
leave
int3
mov
or
insl
outsl
mov
jbe
mov
cmp
cld
sub
ss
lods
jno
push
fisubs
sbb
scas
mov
lods
adc
push
push
inc
pushf
repz
push
ss
test
ljmp
clc
mov
or
push
fdivrs
pusha
in
faddp
out
loope
fsts
adc
sar
add
pop
in
push
mov
mov
cmp
testl
in
pop
mov
loop
movsl
cmpsb
orl
sub
imul
xor
hlt
adc
mov
cmp
or
lods
cmpsb
jle
testl
xor
adc
rcrl
push
sub
cld
sbb
adc
xor
sbbb
rorl
leave
rol
jecxz
push
cmp
or
out
out
stos
leave
fdivp
mov
pop
leave
divl
arpl
outsb
xor
jge
mov
movsl
adc
cmp
call
cmp
inc
mov
fwait
mov
push
rcl
popf
jge
aam
push
sbb
cmp
jo
repz
xlat
push
jl
sahf
pushf
xor
jno
cmp
or
jle
rcll
jg
fldt
out
test
sub
mov
inc
out
js
loopne
cmp
or
repz
pop
push
sub
ja
inc
pop
dec
ja
jnp
lods
jae
popf
rcrb
dec
jbe
flds
mov
clc
mov
out
addr16
cs
push
add
gs
cli
cld
add
sbb
sub
in
mov
arpl
inc
mov
dec
cld
jmp
inc
and
ss
xchg
subl
push
add
int3
nop
mov
and
clc
mov
movsb
rcll
dec
pop
push
out
movsb
mov
test
or
mov
in
enter
adc
xchg
or
dec
sub
add
stc
clc
jne
adc
mov
ficoms
pop
pop
xchg
cmpsl
mov
icebp
inc
add
adc
jne
inc
std
sahf
aad
pushl
test
shl
and
sub
sub
mov
push
scas
and
mov
sub
pop
mov
push
outsb
stos
lcall
sub
dec
sub
shrl
call
sub
mov
pop
cli
sbb
jle
imul
pop
into
mov
mov
adc
addb
xchg
lock
sbb
test
outsb
aam
xchg
push
decb
fs
in
mov
mov
add
mull
in
daa
and
das
divb
enter
dec
push
xor
inc
mov
xchg
xchg
call
jle
dec
add
out
scas
outsb
mov
push
add
cmp
mov
adc
fisttpll
add
sub
push
pop
mov
or
lea
mov
icebp
inc
xlat
fsub
shl
mov
inc
out
xchg
movsl
and
sbb
push
mov
divb
das
xchg
jo
or
arpl
add
popw
xlat
cmp
add
mov
mov
cwtl
stos
jle
sarl
les
mov
imulb
push
adc
cmp
cwtl
pop
je
testb
shr
and
mov
cmp
stos
sahf
out
dec
pop
xchg
push
xchg
mov
leave
cwtl
cmp
or
inc
ljmp
add
icebp
add
jno
lcall
mov
adc
xlat
cmp
sahf
aaa
mov
or
xor
cmp
movsl
sbb
lret
fs
adc
xlat
xchg
es
in
in
mov
andl
push
pop
lret
mov
push
mov
dec
lret
cmp
xchg
insb
sub
jne
jge
dec
outsl
inc
add
cmp
inc
arpl
mov
ficompl
push
fwait
mov
daa
bound
loop
lods
out
test
dec
xlat
neg
inc
jne
andl
gs
loopne
ret
mov
loopne
out
adcb
mov
mov
pop
push
cmp
jbe
outsl
scas
mov
orb
in
rcr
stos
jg
mov
ja
jne
jge
mov
call
in
or
fbld
add
or
cmp
bound
cs
add
into
imul
movb
repnz
cmp
bound
or
mov
dec
les
cltd
mov
data16
loopne
sahf
add
dec
and
subb
jg
mov
mov
sahf
and
repz
lods
jne
gs
shll
pop
mov
faddl
mov
aad
insb
mov
aad
lods
xchg
fs
fucom
mov
test
rcrb
inc
loop
jno
cli
sub
pop
sub
clc
sub
test
int
pop
and
or
mov
jecxz
hlt
sub
call
push
add
jns
aaa
inc
mov
xor
sbb
xchg
push
fisubl
fisttpl
jl
pop
ss
test
xlat
dec
test
mov
and
pusha
aad
jp
dec
xchg
in
push
cmpl
outsl
mov
test
out
rorb
insl
sub
in
sbb
das
ja
pop
xor
stos
mov
cli
or
sbb
mov
push
jg
loope
mov
adc
jg
outsb
in
or
sbb
addr16
xlat
push
and
test
lahf
daa
jg
jb
cli
roll
dec
cmp
fbld
dec
lret
add
or
movsl
int
inc
push
scas
ss
and
add
call
out
stos
mov
inc
shlb
dec
ret
daa
push
and
and
dec
adc
dec
push
push
dec
sub
lahf
lea
lcall
sbb
aam
lcall
out
int3
insb
xchg
daa
out
mov
inc
xor
xor
dec
mov
in
testb
imul
pop
les
mov
mov
sub
mov
xchg
add
das
xchg
push
ror
inc
add
mov
stc
iret
out
clc
aad
out
jne
and
call
mov
arpl
or
xchg
mov
das
cs
ljmp
adc
das
push
shl
mov
dec
data16
rolb
lret
adc
push
adc
addr16
addr16
jbe
adc
jge
imul
rcl
outsl
cmp
jg
dec
dec
sub
cmp
xor
lret
inc
sub
add
out
jg
loopne
out
push
aad
lds
fs
add
into
in
mov
les
in
lods
and
jmp
push
cmp
addb
cmpl
movsl
sub
dec
and
outsl
call
in
cmp
cmp
inc
je
add
aam
loope
sub
adc
lret
adc
pop
sub
and
add
cmp
data16
sbbl
jl
pop
pop
in
fbstp
lods
jp
pop
sbb
mov
gs
pop
call
enter
xchg
xor
int
movsb
in
ja
loop
push
leave
je
fwait
test
add
cmc
imul
sahf
sbb
add
fldt
add
and
das
xchg
push
or
mov
dec
mov
lahf
sbb
push
cmp
push
push
in
xor
xor
push
scas
sub
stos
xchg
mov
out
jp
pop
xor
mov
lock
movsb
ret
mov
stos
or
xchg
sbb
sbb
mov
dec
push
es
in
add
stos
shr
xor
cmp
mov
mov
push
mov
ret
stc
dec
or
fisubrl
dec
jecxz
or
mov
ljmp
fcoms
jns
mov
fistpl
mov
mov
and
sbb
jnp
sub
rcr
adc
pop
xchg
mov
mov
imul
adc
xchg
dec
adc
insl
scas
loop
sub
or
hlt
mov
js
dec
aaa
int
mov
mov
loopne
test
ja
int3
iret
cmp
dec
out
mov
xchg
jnp
jge
fxch
mov
jb
movsb
adc
data16
sub
rol
xor
call
out
in
mov
jnp
sbb
mov
xchg
ret
movsl
inc
add
xor
xchg
fimull
xlat
push
mov
mov
test
jecxz
push
movsb
fcmovne
or
push
lds
in
mull
xor
out
daa
lea
out
lahf
xor
sub
sub
out
and
jmp
push
dec
ffreep
das
xor
mov
popf
sub
and
push
ret
xor
loop
dec
push
incl
js
enter
popf
sbb
dec
pop
cmp
mov
daa
les
fldcw
mov
push
inc
sbb
or
cmp
sub
and
mov
mov
and
mov
pop
cli
inc
popf
push
adc
scas
out
fldcw
cmp
mov
stos
ljmp
nop
dec
inc
fsubs
cld
push
jo
cmp
push
pop
cmp
jle
gs
das
int
out
dec
lret
xor
js
shlb
inc
mov
mov
scas
dec
lock
push
adc
or
jl
pop
or
pop
jo
and
insb
out
push
and
sub
mov
lahf
addl
rorl
lds
mov
cmovs
xor
arpl
lret
sub
push
loop
ret
mov
fs
ja
lods
push
mov
jle
mov
and
hlt
cmpl
daa
inc
jo
sub
lea
arpl
cwtl
adc
xor
mov
xor
les
jl
int3
jg
add
cmp
mov
push
mov
push
in
sti
popf
in
outsl
pop
push
mov
mov
cwtl
mov
pop
das
sub
pop
mov
scas
outsb
xchg
xchg
xorb
popa
int3
aam
mov
push
dec
jmp
sarl
push
in
das
push
loop
inc
ja
rcrl
sub
add
add
xchg
xchg
adc
push
or
add
test
idivl
test
cld
and
pop
jl
rcll
or
jb
fisubl
loope
outsl
lret
or
out
lret
cmp
loop
orb
fwait
cmp
xchg
inc
dec
in
add
aaa
rclb
addr16
bts
pusha
xor
mov
std
mov
add
insb
jns
arpl
enter
inc
mov
mov
xorl
lret
cmc
or
int3
push
ljmp
mov
dec
pop
mov
jb
sub
inc
pop
inc
cmp
pop
mov
mov
ss
xlat
iret
dec
mov
cmp
xor
jmp
sti
test
pop
shlb
jb
mov
sbb
add
aaa
loop
sbb
sbb
mov
int3
xchg
ret
gs
push
mov
imul
aad
lds
cltd
aam
in
stc
mov
dec
je
sub
xor
sub
or
out
cmp
les
or
rcrb
sarl
or
je
push
es
dec
not
sub
jle
cmp
sub
cs
test
out
ja
push
dec
nop
jne
insl
stos
lahf
add
les
xchg
pushf
xchg
xorl
sahf
fnstenv
adc
dec
jbe
jecxz
movsb
jmp
in
and
gs
repnz
mov
jl
jno
lds
std
mov
subb
adc
mov
daa
fildll
push
or
fs
adc
shlb
sahf
push
popf
in
sub
pushf
sahf
loop
push
rcll
cmp
sub
fs
sti
xor
faddp
mov
or
mov
and
cmc
xor
mov
inc
dec
icebp
nop
loopne
xchg
xchg
cmp
test
fisubs
sub
hlt
bnd
or
jg
push
out
int3
add
push
dec
inc
pop
sbb
mov
xchg
adc
imul
mov
and
inc
cs
pop
sbb
fldenv
sub
dec
cltd
out
sti
sbb
jg
outsb
idivl
xlat
or
jno
mov
popa
outsb
les
inc
ljmp
and
jb
cmp
jmp
shr
mov
sub
test
jle
xchg
mov
mov
inc
int
cld
pop
lahf
iret
loope
cmp
por
dec
sbb
jp
fstpl
xchg
push
mov
xor
push
mov
xlat
mov
ja
stc
popf
movsl
dec
dec
lahf
call
sub
xor
inc
divb
or
mov
dec
stos
popa
mov
jle
aas
sbb
xchg
ret
scas
inc
sar
xchg
xchg
lret
or
ljmp
imul
push
sub
xchg
nop
push
out
xchg
imul
testb
sub
pop
push
dec
es
mov
ret
sar
lock
inc
dec
idivl
rol
cmovo
pop
outsl
pusha
aas
mov
scas
lcall
adc
xchg
adc
leave
cmp
rorb
xchg
fbstp
push
out
adc
pop
in
push
push
and
pop
aam
push
inc
stc
add
and
das
stos
cmp
adc
neg
xchg
push
sbb
xor
mov
xor
fstps
dec
mov
and
mov
pushf
pop
mov
ss
lahf
mov
pop
adc
lcall
mov
inc
lea
jo
fistl
adc
arpl
fcomps
mov
iret
jl
jnp
mov
stos
mov
movsb
dec
dec
jecxz
cmp
hlt
inc
rcll
int3
jae
add
pop
inc
pop
sub
cmpsl
lods
inc
mov
xchg
aaa
pop
inc
loope
movsl
sub
leave
mov
jmp
enter
iret
or
sahf
outsl
std
fcmovb
fldcw
mov
decb
dec
jmp
imul
adc
std
inc
fwait
mov
int3
pop
mov
lock
jp
add
cli
mov
push
jb
mov
pusha
dec
jle
fucom
stc
pusha
pop
hlt
pop
mov
mov
push
inc
sbbl
iret
xor
push
lret
pop
test
ja
xor
shll
dec
movsl
imul
lret
imul
test
mov
mov
fldenv
xlat
mov
or
add
arpl
add
jne
adc
xlat
test
in
pop
lock
jne
das
dec
jno
push
fwait
mov
or
test
aam
lret
pop
and
shlb
lods
adc
push
leave
lahf
pop
iret
js
pop
and
adc
mov
nop
sbb
ficompl
outsb
pusha
jmp
jl
xchg
mov
ljmp
les
xor
xchg
mov
mov
popa
xchg
test
lret
inc
daa
or
add
jl
xchg
sbb
mov
jl
fimuls
lds
dec
sub
mov
push
sub
jno
adcb
mov
mov
sbb
jg
xor
shr
pop
cmc
and
arpl
dec
lea
ror
cmp
pop
daa
xchg
enter
std
xchg
mov
push
sbb
addl
loop
adc
jbe
mov
int3
gs
je
jae
pop
cmp
pop
and
sbbl
pop
hlt
dec
mov
mov
inc
adc
jno
mov
call
imul
or
movsb
in
fucomp
negl
ds
pop
mov
jmp
cmp
add
xor
mov
mov
xor
data16
cmc
insl
jns
fs
gs
shlb
xchg
xor
and
inc
cld
adc
data16
es
sbb
loop
sub
push
jbe
lret
push
outsb
pop
mov
adc
addr16
push
mov
push
cli
in
rolb
push
sbb
lea
lret
jnp
ffreep
daa
lret
dec
call
xchg
sbb
ja
add
push
loop
pop
cmc
mov
sbb
testl
repnz
adc
xchg
pusha
cmp
lods
fidivrl
jns
mov
je
out
in
push
clc
fistpl
push
xor
jne
jb
sub
jp
ljmp
cmp
push
int
sarb
fdivrp
push
push
imul
inc
stos
push
push
lods
fs
and
inc
popf
pop
stos
sub
sub
sub
das
adc
je
es
sbb
mov
scas
ja
xorl
insl
jmp
in
mov
addr16
adc
cmp
sub
cmp
stc
or
inc
loope
adc
andb
subl
call
iret
cwtl
push
dec
test
mov
je
mov
push
repnz
fadd
push
or
call
inc
lods
popa
mov
fistps
xor
dec
pop
mov
outsb
fisttpll
out
cmp
mov
dec
notb
and
in
arpl
notb
filds
sbb
lret
stc
and
mov
loope
mov
push
arpl
in
and
es
cmp
inc
out
pop
dec
in
sbb
in
in
inc
pop
push
adc
mov
cmpb
dec
popa
or
add
sbb
sbb
out
pusha
xchg
out
mov
sub
lcall
cld
cmp
push
addb
inc
adc
xchg
push
repz
mov
xchg
or
dec
lret
xor
subb
sti
pop
movsl
and
inc
push
fldcw
jg
xchg
ss
stos
fidivs
jp
inc
enter
lock
iret
jp
mov
dec
adc
ljmp
jnp
cmp
or
and
mov
sbb
xor
fwait
jo
pop
in
sbb
stos
inc
cmp
cli
imul
shrb
lods
push
out
addl
and
cli
jl
adc
outsb
cmp
ja
les
popa
push
inc
mov
shrb
sbb
ss
pop
mov
xchg
adc
nop
ret
mov
push
jmp
lods
pop
mov
mov
mov
repz
pop
movsb
into
leave
jbe
pop
lcallw
movsl
fidivl
in
fdivrs
int3
mov
pop
test
imulb
mov
jne
inc
pop
scas
and
xchg
or
pop
push
in
bound
insl
dec
sbb
cmp
push
mov
fnstenv
mov
push
popf
or
stc
bound
or
movsl
movsl
loope
jecxz
jg
add
aad
nop
jmp
mov
mov
js
lock
lods
xorl
cmp
mov
sub
imulb
sub
or
pop
mov
push
cmp
push
mov
xor
cmpl
sti
in
and
cs
in
xor
lret
in
add
mov
lret
jnp
adc
movsb
addr16
lds
adc
mov
add
jle
in
incb
adc
xchg
fdivrl
out
lret
mov
call
xorb
sahf
loop
and
fnstenv
roll
cmpsl
insl
xchg
add
insl
les
xchg
addr16
inc
or
aam
or
inc
popf
jp
dec
pop
mov
aad
xchg
jbe
clc
cmp
mov
mov
and
and
xchg
mov
add
xor
sbb
movsb
xchg
pop
sub
inc
inc
lcall
xor
stos
jnp
popa
inc
les
enter
shl
js
or
xchg
mov
movsl
cmp
hlt
ret
push
shll
mov
dec
sbb
mov
xor
pop
xchg
mov
cmp
add
test
push
loopne
mov
mov
data16
aam
les
incb
add
adc
inc
pop
inc
mov
jge
dec
push
and
cmp
repnz
std
fsubrs
aam
pop
iret
mov
aas
pushf
cmc
push
cmpsb
cld
mov
jne
jno
loopne
push
decl
neg
cmp
inc
je
xchg
pop
call
lods
dec
or
insl
xor
or
insl
inc
push
adc
xchg
ja
hlt
mov
sbb
mov
xchg
cmp
and
fucomip
and
lret
and
push
dec
mov
ss
and
in
imul
icebp
rcll
pop
jne
out
adc
inc
mov
and
jnp
sarb
outsb
loope
aaa
sub
mov
add
mov
aas
ret
ret
fcmovne
into
xchg
cmp
jl
lds
push
lock
lsl
mov
arpl
inc
call
cmpsl
xor
mov
jo
xor
inc
adc
cmovl
dec
sbb
xorl
add
insl
inc
ljmp
cmp
insb
aam
imul
test
mov
push
cmc
mov
and
nop
pusha
shl
leave
test
je
icebp
bound
cltd
pop
nop
adc
sub
push
xchg
out
mov
fwait
popa
int
push
cmpsl
push
shrl
mov
hlt
jns
push
cmp
push
in
insl
shlb
mov
or
mov
mov
jl
test
dec
or
pop
xchg
xchg
cmp
xor
lcall
nop
stos
pop
fsubp
jmp
pop
test
lcall
das
lds
ljmp
jmp
jle
lock
jl
popf
ds
sub
sub
in
aas
pop
xchg
pop
add
fcmovnb
fstps
pushf
mov
mov
fiaddl
addl
push
shlb
xchg
aaa
dec
fwait
cs
adc
out
cld
adc
sub
sbb
mov
pop
js
sub
cmp
pop
daa
adc
out
mov
lods
shr
into
push
ret
dec
mov
push
icebp
arpl
inc
adc
xor
mov
test
xchg
ds
in
jb
pop
cmp
push
and
je
cmpsl
cmpsl
mov
ja
pop
pop
cld
xor
push
popa
test
mov
in
mov
dec
push
add
clc
sub
iret
ret
and
cmp
cmpsb
inc
cmpsb
insb
mov
sub
out
jbe
stc
addr16
pop
addr16
sbb
gs
push
les
fbstp
insb
adc
ret
xchg
aam
mov
mov
dec
cmp
int
or
mov
dec
ja
lds
inc
xchg
inc
dec
loope
xorb
push
rolb
pop
ret
rclb
pusha
or
pop
mov
or
shrl
pop
js
mov
push
mov
pop
xchg
adc
mov
xchg
jae
cwtl
fsubl
popa
sar
int3
test
sbb
pusha
orl
movl
in
ja
paddusw
cmp
cmp
lods
push
in
lahf
jmp
and
inc
mov
cmp
mov
mov
inc
dec
mov
loopne
sbb
pop
lods
jle
pop
out
and
dec
ds
or
push
fdivl
dec
xor
mov
mov
and
xchg
xor
repz
xor
fs
sbb
xchg
sbb
add
and
loop
movb
nop
cmp
cmpsl
pop
shll
xchg
das
xor
jle
dec
mov
call
jl
adc
sbbb
inc
cmp
inc
out
add
mov
cwtl
sbb
add
mov
dec
out
rclb
out
out
out
push
jne
sub
xlat
mov
mov
mov
dec
cwtl
jns
adc
lret
xchg
mov
jmp
push
push
mov
fcoml
out
lods
stos
cmp
mov
call
jg
dec
out
inc
add
adc
mov
mov
pop
dec
mov
data16
jl
jno
loop
fwait
jge
xchg
cmp
pop
dec
nop
xchg
and
nop
mov
jae
rorl
inc
lock
insb
add
cmc
xlat
pop
jbe
add
aad
push
push
cmp
xchg
roll
scas
or
outsb
sbbb
sbb
iret
xlat
mov
mov
incl
jmp
adc
xor
enter
loope
stc
jmp
jmp
sbb
mov
jg
mov
mov
dec
xor
sbb
xchg
lods
popa
and
pop
sar
jg
test
mov
mov
rorb
in
stos
xchg
out
icebp
in
cmp
sub
cwtl
cmp
leave
inc
xchg
pop
inc
lock
push
push
dec
push
insl
jnp
pusha
daa
sub
clc
mov
loop
inc
adc
mov
hlt
orl
push
xchg
cmp
fdivr
arpl
test
sbbb
iret
pop
pushf
call
test
sahf
int3
and
sbb
iret
icebp
std
das
add
dec
scas
pushw
xchg
je
push
mov
pop
fsts
int
mov
mul
imul
jbe
xchg
xor
lock
dec
jp
out
jecxz
mov
mov
in
sti
add
jle
xchg
fdivrl
aad
mov
lods
lea
nop
mov
repz
sbb
lods
jo
push
out
xchg
pusha
imul
mov
popf
and
lcall
scas
mov
xchg
lcall
mov
inc
fucomip
jmp
mov
push
sub
push
es
call
pop
orb
xor
notl
add
popa
sub
out
cmp
xchg
mov
push
pusha
add
aad
xchg
mov
int
mov
dec
fsubrs
inc
jp
push
pusha
push
int
std
loopne
adc
lcall
adc
int
push
insl
mov
cmp
sub
add
repz
mov
push
pop
mov
mov
lret
or
sarb
push
dec
mov
stc
dec
dec
cli
mov
xor
int
dec
xlat
shlb
iret
and
shrb
lret
sub
pop
dec
rol
insl
lods
xchg
iret
push
pusha
roll
addb
iret
scas
xchg
ret
cwtl
ror
jmp
mov
jle
xchg
fcomp
jno
dec
test
mov
xchg
addr16
mov
push
dec
jno
aas
adc
xchg
insl
cmp
sub
data16
out
icebp
xchg
or
mov
mov
add
cmp
aam
or
insl
ljmp
sub
push
sbb
push
testl
gs
or
movsl
mov
aas
imul
mov
or
dec
push
ret
cli
cmp
sub
jns
add
fs
loopew
xchg
std
xchg
jecxz
jmp
gs
or
jge
xor
lock
sub
stc
mov
dec
cmp
sbb
ss
adc
in
mov
push
sub
adc
or
sahf
out
pushf
inc
mov
call
sbbb
xchg
jle
ds
adc
andl
mov
push
or
jne
inc
in
add
push
pop
in
ret
adc
push
ficomps
outsl
cltd
mov
sbb
notl
pop
cmpl
mov
pop
xchg
mov
dec
jne
jne
sahf
in
outsl
sbb
scas
lock
push
scas
push
test
xor
pushf
and
cltd
mov
xor
cmpsl
mov
pusha
test
xchg
mov
hlt
loope
mov
outsb
add
bound
dec
movsb
mov
orb
mov
xor
aam
out
mov
cmp
cmc
out
cmc
or
cmp
pusha
lock
sbb
xor
sbb
and
bndldx
in
fwait
mov
push
fwait
hlt
mov
hlt
mov
adc
fisttps
movsl
pop
ljmp
gs
movsb
sub
rol
mov
stc
fwait
xlat
xchg
sbb
leave
mov
aaa
pop
add
test
test
add
outsl
call
inc
je
xor
in
outsl
mov
adc
xor
sbb
fcomp
mov
cwtl
shll
xchg
add
pusha
mov
xor
push
call
cmp
movsb
jmp
cmc
jmp
adc
jl
inc
inc
inc
fdivrs
sbb
sbb
stc
inc
movsb
in
stos
push
cmpsb
add
enter
stos
lahf
adc
push
shrl
es
inc
and
iret
imul
or
cmp
addr16
xor
sbb
jg
addl
aam
jb
sbb
mov
movsl
ror
lahf
rolb
mov
leave
lock
ss
inc
xchg
xchg
scas
sub
dec
fwait
andl
fs
pusha
push
push
das
enter
popf
js
lock
lods
mov
testl
dec
out
lret
jo
inc
sub
xchg
adc
rcll
aaa
pop
stos
outsb
sub
and
sahf
mov
jne
pop
xorb
cwtl
pop
rcl
adc
mov
push
xchg
cs
mov
faddl
sahf
push
cmovns
xchg
mov
sbb
xlat
mov
xor
pop
or
insl
aas
fisubs
jae
xchg
jne
add
cli
dec
push
mov
cmp
out
xchg
jl
imul
out
adc
idivl
into
and
xchg
mov
push
shl
mov
aaa
sbb
jp
test
and
frstor
nop
les
es
testb
out
aam
js
repz
inc
aas
mov
mov
adc
sarl
push
lahf
adc
shlb
sbb
mov
iret
stos
fidivl
arpl
add
lahf
mov
push
adc
add
cmp
dec
mov
cmp
repz
fisttpl
incb
pop
insb
or
in
mov
jno
pop
xchg
aam
test
mov
shld
stos
in
adc
das
outsl
ss
sarb
inc
mov
fs
sub
out
push
and
mov
in
test
in
and
loop
dec
push
adcl
imul
int3
insl
or
mov
dec
xor
stos
xlat
gs
clc
or
and
pop
mov
mov
ljmp
pop
cmpsl
lea
loope
mov
loop
dec
subl
fwait
aam
cmp
dec
scas
mov
jns
cwtl
fcmovne
and
pop
fs
jae
pavgb
fimull
testb
out
es
iret
es
mov
into
icebp
and
jmp
loope
cmp
mov
push
mov
sbb
or
int
iret
hlt
loopne
sbb
ss
push
daa
jl
out
push
jp
lods
xor
lcall
sub
imul
sub
pop
xchg
adc
nop
ja
mov
fimuls
and
filds
in
nop
js
test
lods
psllq
jae
mov
dec
xchg
lods
inc
pop
xchg
mov
pushf
outsb
mov
add
mov
sub
add
and
hlt
add
xchg
aaa
jmp
cmc
fidivl
mov
fst
jo
mov
dec
cwtl
stos
mov
mov
mul
adcl
mov
jns
add
push
cmpl
movsl
cmpsl
daa
cs
cmp
lret
sbb
jae
out
iret
stos
out
lods
retw
dec
jbe
enter
mov
mov
jno
repnz
int3
ss
or
aaa
inc
js
inc
adc
pop
mov
mov
rcr
jno
xor
rclb
aas
vmovss
adc
fisubrs
mov
fadd
pop
cmp
mov
jmp
ljmp
xchg
sbbb
daa
aad
adc
cmpsl
arpl
std
lods
xor
xchg
push
jmp
mov
jnp
dec
fimull
jp
dec
push
je
jg
jb
dec
leave
or
xor
scas
lahf
fdivrs
xor
and
jno
mov
xchg
jo
xchg
sub
negl
and
sbbb
pop
aam
mov
cld
data16
mul
mov
add
and
cmp
and
mov
xor
fwait
addr16
in
jae
pop
sub
loope
mov
and
cmp
fdivrl
in
adc
push
mov
inc
mov
dec
sarb
or
and
mov
cwtl
adc
push
test
xorl
and
mov
sbb
sub
xor
and
icebp
fildll
scas
pop
movsb
icebp
mov
sbb
mov
xor
sbb
out
pushf
push
adc
or
dec
inc
or
je
cli
dec
divl
or
jns
les
pop
ja
mov
or
push
mov
imul
jmp
fstpl
add
pop
push
add
mov
ret
add
dec
add
imul
leave
sub
rcll
pop
adc
dec
xchg
sbbl
test
fidivrs
mov
sbb
xor
xchg
mov
or
pop
cli
stc
xor
and
js
push
or
rcrb
jmp
sub
stc
pop
aad
rol
fsubrs
in
inc
sahf
adc
dec
test
gs
loopne
prefetch
or
push
and
xlat
fs
daa
jge
xlat
or
mov
dec
sbb
sub
mov
outsl
adc
into
pop
gs
aas
push
into
shlb
lahf
ret
fsubrs
jge
iret
arpl
clc
dec
push
adc
jp
mov
xchg
mov
dec
or
or
mov
jnp
out
jg
and
fists
and
addr16
dec
int
scas
mov
push
loope
mov
push
rcrb
in
inc
icebp
cli
dec
lahf
inc
push
pop
inc
repz
or
add
xchg
int3
add
mov
pushf
mov
adc
fsts
dec
xor
and
jae
push
dec
or
cmp
dec
sub
aad
lea
xchg
or
cs
adc
mov
push
pop
xor
and
in
inc
mov
imul
pop
pop
stos
les
adc
ljmp
test
fisubrl
push
jne
jo
in
movsl
nop
into
push
cltd
push
dec
ficoms
jnp
xor
pushf
loopne
insl
xchg
leave
push
rcrl
push
jb
shlb
sub
add
push
shrl
pop
sbbl
inc
lret
ljmp
shlb
lret
mov
cmp
adc
mov
adc
sbb
test
jae
in
sub
iret
ds
adc
pop
aas
stos
in
xchg
jnp
hlt
jg
push
loope
mov
mov
add
adc
xchg
fisubl
add
loope
pop
push
push
repnz
pusha
gs
jecxz
lret
mov
loope
add
cltd
push
push
cwtl
aad
loope
gs
pop
mov
xor
in
push
filds
rcrb
sbb
lahf
loopne
xchg
ds
pop
jno
in
fs
dec
leave
pushf
sarb
inc
cmpsb
scas
mov
push
mov
adc
lds
lods
test
adc
push
pusha
xor
cmp
jbe
ss
jbe
jbe
mov
out
mov
into
fs
dec
cmp
mov
and
subl
shrl
cmp
fdivl
push
jae
fistl
sub
dec
mov
in
and
lret
jae
push
hlt
popf
jmp
jg
enter
jns
and
xor
inc
inc
scas
and
negl
mov
cld
pop
cmp
push
jle
or
inc
xor
jno
add
ds
clc
ljmp
bound
xor
aam
xchg
push
pop
pop
sbb
inc
mov
or
ja
movsb
repnz
mov
fxch
cmovo
xchg
call
push
push
outsl
fsts
push
jg
test
inc
mov
push
out
add
inc
jne
loopne
cmp
inc
xchg
push
lret
cmpsl
repz
ret
jecxz
mov
cmp
lock
filds
sbb
push
aam
add
pop
das
aam
jo
lret
pop
or
pop
fsub
test
pop
stos
mov
testl
mov
add
xchg
ds
xchg
in
mov
je
lahf
add
pop
and
sbb
aaa
enter
dec
orb
push
jns
xor
lods
push
jp
pop
adc
ss
mov
test
cmc
enter
sti
pop
push
incb
arpl
notb
xchg
out
cmp
or
or
loope
pop
sbb
xchg
push
test
mov
mov
mov
fwait
movsb
and
pusha
jmp
lea
jp
fnstcw
loope
movb
repz
lcall
cwtl
mov
ss
imul
cmp
inc
mov
ret
or
leave
ret
dec
inc
imul
cmpsl
aas
je
inc
and
dec
or
pop
inc
ja
sub
inc
jp
jge
mov
mov
dec
add
or
jo
sti
adc
mov
xor
lods
int3
xor
jns
push
or
decl
xor
jge
cli
sbb
gs
push
xor
dec
mov
xorb
idivl
cmp
shll
pop
test
testl
push
pop
test
pushf
imul
and
jnp
sbb
loop
in
cmpsl
cmp
or
pusha
or
cmpsb
shr
xor
jne
mov
jge
imul
movsl
or
fwait
daa
mov
fisubs
pusha
dec
pop
jg
sub
icebp
sbb
movsb
sbb
push
in
mov
push
orb
es
test
pop
mov
xor
push
lea
lret
jo
pop
insl
pop
lcall
lods
jae
pop
test
into
test
in
sbb
lret
fistps
xor
cmp
std
int
lret
lock
xor
dec
cltd
adc
cmp
pop
shrl
adc
pop
adc
push
jl
jmp
lods
jl
mov
clc
les
ljmp
push
jbe
push
mov
jle
dec
addr16
xchg
push
dec
sbb
add
sbb
xchg
add
int3
or
mov
pop
mov
cmp
lock
jl
adc
int
clc
negb
fwait
es
pop
das
fs
jae
cs
cmc
gs
jbe
stos
or
and
xchg
sbb
loopne
fstps
and
mov
sbb
hlt
push
jo
pop
add
jbe
xor
in
pop
mov
stos
mov
cltd
je
cmp
cmp
int
add
dec
inc
aad
lahf
mov
movsl
add
fwait
repnz
fldt
mov
addl
jp
xor
or
bound
aaa
inc
dec
dec
mov
aas
adc
jecxz
dec
int
jno
xor
pop
pop
arpl
inc
iret
inc
and
mov
repz
add
arpl
sahf
or
aam
sbb
call
adc
jge
and
loope
pop
push
scas
xchg
xor
pop
or
daa
mov
or
add
std
sbb
std
mov
xlat
jb
ljmp
enter
ret
seta
jne
lea
out
hlt
ss
int
mov
sub
hlt
stos
add
lods
and
int3
xorb
xchg
mov
fidivrs
imul
pop
enter
jns
push
in
cwtl
out
subl
jns
pop
or
cmp
inc
inc
movsb
loope
inc
mov
test
ficoms
into
fmuls
pop
and
xor
mov
cmp
xchg
cs
in
xor
add
jno
fwait
jl
fisubs
jp
push
cmpsb
xchg
ss
out
xlat
jle
add
cmp
call
jb
ss
sti
cmpl
mov
pop
cwtl
or
and
int
loope
xor
enter
cltd
xchg
js
pop
lahf
into
sbb
cmpsb
in
cmc
lahf
test
mov
push
adc
jo
jecxz
pop
mov
clc
mov
sub
shll
dec
test
inc
mov
nop
xor
cli
rorb
cmp
sub
mov
xor
in
adc
inc
in
add
aam
inc
cmc
xor
sbb
movsb
jo
stos
sub
pop
and
dec
jmp
xchg
stc
adc
clc
test
shlb
js
in
push
add
jns
std
dec
jge
add
xorl
mov
cmc
outsb
pushl
les
adc
jae
in
xchg
push
movsl
movsl
and
xor
in
sbb
jecxz
mov
fistl
test
mov
mov
inc
sti
imul
out
scas
mov
xchg
jae
mov
mov
lock
clc
sahf
pusha
outsl
xchg
add
lds
lods
xor
or
or
jo
mov
fsubrl
xchg
hlt
iret
fwait
out
sub
les
imul
cmc
imul
jbe
loop
sbb
adc
jle
or
sbb
push
insb
adc
inc
bound
dec
popa
bound
daa
or
imul
cmp
push
xchg
aam
pop
jmp
ss
or
cmpsb
icebp
adc
jle
fisttpl
jb
pop
in
or
pop
lcall
and
aad
push
adc
sbb
test
pushl
mov
cli
sub
mov
mov
add
mov
std
sbb
add
sub
cmp
jno
mov
jb
mov
pop
rorl
mov
mov
jmp
pop
sbb
pop
or
jecxz
jg
xchg
fs
sub
push
inc
xor
test
adc
out
bound
out
mov
jmp
push
xor
fcompl
cmc
xor
inc
sub
inc
cmp
pop
notl
pop
ds
or
pop
xchg
cmp
scas
pop
mov
jbe
and
in
subl
cmpsl
lahf
mov
cs
fbstp
adc
mov
int3
movsl
xorl
stos
je
xor
push
push
out
mov
mov
addr16
cmpsl
les
sarb
test
lret
xchg
pop
aas
insl
inc
sub
aas
inc
cli
scas
lods
adc
mov
mov
lea
mov
outsb
lea
shrb
paddb
in
add
incl
xchg
imul
or
stos
xor
cmp
xchg
fsubrl
adc
and
scas
stos
insl
aad
adc
rcl
push
cmp
daa
cmp
adc
xlat
push
and
xorb
adc
pop
repz
jmp
sub
mov
nop
or
stos
dec
add
jmp
dec
push
mov
and
addb
int3
sub
jmp
sub
loop
test
or
rcrb
stos
jecxz
xchg
inc
ja
mov
das
mov
inc
iret
hlt
orl
xor
xor
mulb
add
cs
dec
fcomps
mov
lahf
idivb
fs
sbb
jg
ret
lret
mov
in
mov
xchg
mov
jne
mov
mov
mov
mov
lret
push
adc
push
int3
cmpsb
adcl
or
js
lret
mov
jp
sbb
cmp
cli
mov
shl
test
dec
mov
out
movsl
push
inc
cli
vmread
rsm
push
cld
fwait
dec
cmp
fisttpl
mov
xor
inc
push
cmp
mov
loope
nop
sub
rcll
hlt
pop
outsb
outsb
mov
scas
mov
bound
rcrb
adc
movsb
push
sub
lock
sub
inc
mov
outsb
cs
je
cmpsb
jp
orl
lock
fs
sub
mov
push
push
push
cltd
mov
push
icebp
pop
push
mov
outsb
andb
in
push
decl
sbbb
wrmsr
repnz
arpl
xchg
loope
pop
pop
sub
pushf
dec
pop
mov
cltd
ja
faddl
mov
jmp
fsubrs
test
and
mov
xchg
outsl
loopne
rclb
jmp
xchg
and
fiadds
fisubl
mov
cli
dec
lds
lret
push
push
movsl
sub
mov
bound
push
cmp
cmp
into
xor
aas
fadds
xchg
repnz
jl
shlb
push
inc
subl
jne
mov
sub
daa
je
mov
fdecstp
jecxz
dec
push
outsl
arpl
push
dec
sub
sbb
je
or
push
jbe
push
sbb
push
sub
jns
dec
mov
nop
gs
ffree
lahf
sbb
scas
pop
pushf
pop
adc
pop
jb
push
call
orb
mov
fwait
sub
mov
movsl
dec
cmp
mov
xchg
dec
mov
sbbb
jae
xchg
sbb
mov
pop
jae
repnz
sbb
sub
mov
push
xor
sub
clc
push
pusha
xlat
repz
sub
dec
jno
into
ret
dec
dec
data16
and
pop
test
cmp
psraw
mov
test
xchg
out
dec
arpl
mov
push
sub
cs
sbb
subps
sbb
and
icebp
cmp
shlb
test
push
movsb
push
lods
punpckhwd
mov
aaa
pop
cmp
mov
dec
loope
push
mov
push
pop
sub
pop
cmp
sarb
or
jns
lea
enter
mov
jg
fiadds
movl
nop
and
fsts
jb
dec
mov
ja
call
or
mov
xchg
hlt
js
std
frstor
cmp
jle
mov
xor
leave
push
nop
aam
cwtl
sub
push
fcmovu
adc
dec
iret
loop
in
pop
adc
xlat
push
mov
adc
lret
lret
or
stc
xchg
sub
daa
ss
hlt
mov
jg
adc
sbbb
and
dec
mov
jle
cmp
pop
out
sahf
mov
adc
sub
js
mov
inc
jb
jae
movsb
mov
add
push
fcompl
mov
xor
inc
es
xor
adc
jns
icebp
push
sbb
dec
pusha
imul
inc
ret
icebp
in
icebp
jb
lcall
or
mov
rolb
jne
xor
xchg
cmp
add
in
popa
mov
pusha
or
out
adc
test
fnstcw
jecxz
lcall
mov
aam
cltd
mov
or
cmp
adc
int
ror
fists
sub
jl
je
cmp
mov
inc
mov
mov
aad
and
in
fwait
and
lret
js
add
rcl
loope
jne
movsl
or
push
shl
inc
push
pop
mov
xchg
inc
jno
jo
inc
xchg
pop
sbb
and
fwait
mov
push
popf
pop
sbb
int
ficoms
xlat
mov
clc
pop
jmp
add
je
test
cmpsl
cmpl
adc
xchg
lods
pop
mov
bswap
xlat
xlat
out
sub
in
cmp
and
outsl
filds
pop
push
pop
cmc
xor
insb
and
inc
adc
ljmp
inc
es
push
xchg
mov
adc
icebp
stos
scas
mov
mov
testl
or
dec
push
xchg
pop
xchg
popf
mov
mov
mov
scas
xchg
mull
sbb
pusha
fs
stos
pop
mov
popf
mov
orl
rcll
ss
dec
inc
fidivl
pop
and
andb
iret
insl
fnsave
inc
js
xchg
or
pop
jmp
push
in
mov
mov
pop
pushf
or
lahf
and
xor
movsl
movsl
mov
xlat
int3
and
pop
push
sbb
cmp
loop
testl
push
les
adc
in
mov
ds
dec
pop
sbb
pop
pop
mov
out
fsubl
jl
insl
or
lahf
movsb
or
mov
adc
clc
fldenv
and
cmpsl
andl
dec
cmp
cmc
jnp
or
repnz
icebp
adc
outsl
xchg
push
movsb
dec
in
es
pop
sub
les
mov
ljmp
pop
and
xchg
je
mov
in
rorl
mov
add
or
mov
dec
popa
lahf
jg
in
push
sub
mov
scas
int
movsl
mov
sbb
push
int
popa
or
cmpl
cmp
fisubs
xchg
icebp
or
mov
leave
aaa
mov
jge
mov
cmc
xchg
stos
sbb
mov
pop
daa
icebp
insl
sub
inc
inc
int
pop
cmc
mov
jae
sub
xor
ds
lret
xor
dec
addr16
inc
cld
add
aam
sbbl
imul
jge
out
or
popa
dec
mov
in
orl
leave
cmp
in
jg
out
out
dec
adc
sub
push
xchg
cmpsl
scas
pushf
lods
lret
push
fs
inc
xor
jmp
push
or
push
cwtl
shrd
push
lcall
shlb
shl
bound
cmp
pop
push
cld
add
gs
xchg
lds
mov
mov
xor
loop
cmp
jmp
mov
pop
mov
jae
adc
cmpb
imul
mov
push
test
push
push
push
and
mov
cmc
mov
jecxz
jns
shrl
lret
and
loop
loope
out
push
push
popf
iret
bound
xor
scas
inc
sub
sub
mul
cli
and
jo
nop
mov
jl
test
pushf
aad
daa
jne
sub
jle
jbe
push
setbe
mov
fs
mov
or
xor
pusha
xor
pop
dec
mov
mov
or
out
popa
mov
xor
pop
cmp
in
pop
sarb
jne
and
sub
inc
dec
dec
loop
jge
push
xor
int3
xchg
xor
add
int
cmpsl
scas
lret
pop
repz
adc
icebp
adc
seto
scas
mov
mov
in
cs
cltd
sbb
sbbb
pop
xchg
jb
stos
fisubrl
mov
push
cli
cmpb
jbe
movsb
dec
lods
sub
sub
xchg
add
jp
in
dec
sub
jmp
pop
inc
decb
jns
sub
push
adcb
loopne
lods
mov
shrb
fsubl
and
arpl
mov
pusha
lock
fwait
mov
fsubrl
jge
jmp
jns
dec
pusha
cmp
stos
into
int3
xchg
dec
cwtl
mov
dec
and
popf
int
stos
mov
cli
mov
or
add
push
pop
je
jb
out
repz
inc
mov
or
inc
loope
loope
mov
fdivs
dec
repz
cmpsb
xchg
xor
dec
mov
add
daa
sbb
push
in
sub
scas
ja
inc
push
mov
aaa
bound
and
in
addr16
mov
sub
inc
jg
cmpsl
cmp
cwtl
adc
loop
sbb
or
out
pop
test
in
fadd
jns
or
jns
xchg
fs
push
incl
cld
fmuls
dec
iret
xorb
std
mov
sahf
inc
insl
int
inc
mov
mov
dec
clc
jae
push
popf
ljmp
dec
mov
jle
sub
repz
sti
ficomps
push
cmp
mov
insb
inc
mov
jo
mov
mov
repnz
int3
lock
cli
add
ret
jne
lret
js
pusha
sti
stos
popf
cmp
gs
in
pop
insb
xchg
pop
in
pop
add
jns
jmp
pop
jge
sahf
inc
push
icebp
xchg
mov
pushf
mov
dec
insb
sub
movl
fbstp
scas
repnz
mov
mov
dec
stos
cld
ret
bound
pop
test
sub
jo
gs
in
icebp
push
dec
mov
incb
sbbl
cltd
push
mov
jns
out
ror
add
test
push
loopne
add
mov
stos
test
frstor
jae
and
pushf
imul
push
movhps
push
lods
lods
aam
xor
mov
icebp
xchg
in
movsb
pop
inc
loop
mov
jbe
sbb
insb
mov
fsts
jns
xorb
addb
jbe
or
sub
test
pop
leave
lret
je
fdivrl
adc
or
mov
mov
data16
add
aaa
jbe
sub
mov
mov
aam
ja
and
inc
xor
push
lcall
push
xlat
insb
fwait
pop
xchg
lods
das
subl
push
hlt
stc
in
ds
xchg
jo
lock
hlt
cmp
loope
mov
xor
jnp
pop
repnz
and
stos
addr16
ja
xor
pop
popf
lret
jns
mov
cmp
fdivrl
data16
in
shlb
xor
xchg
add
pop
int3
aam
call
xor
mov
test
fnstcw
ja
mov
fwait
ss
mov
stos
icebp
loopne
fdivrs
mov
xchg
cli
addr16
fdivl
xchg
xor
mov
int3
maxps
jnp
mov
and
and
in
pop
int3
insb
pop
mov
sub
xchg
pop
add
mov
in
ret
orl
push
nop
inc
jno
inc
cli
sahf
xchg
or
add
mov
mov
bnd
loop
mov
ret
push
scas
mov
sbb
in
and
pushf
jmp
inc
cli
es
imul
or
push
adcl
int
xchg
push
loope
arpl
mov
xchg
dec
adcb
mov
mul
std
jbe
and
mov
dec
sti
pop
in
push
popf
jb
and
pop
cmc
or
js
or
or
stos
dec
and
and
sbbb
and
popf
lahf
dec
out
cmp
add
shll
inc
sbb
aas
jns
nop
sbb
push
lret
pop
add
std
fistpll
test
or
mov
adc
pop
cmp
rcrl
xchg
adc
xor
dec
fs
nop
jp
out
mov
push
lcall
jmp
and
bound
fistpl
and
bound
shll
loopne
xchg
stos
push
xchg
jge
sarb
push
xchg
mov
dec
sub
dec
popa
decb
mov
inc
aaa
cmp
dec
cmp
jno
add
push
push
sbb
or
push
js
arpl
add
pop
iret
push
cld
push
xor
ss
push
xchg
sar
push
inc
jno
das
cmpsl
hlt
xchg
in
stc
mov
sahf
inc
mov
adc
into
ss
aam
in
leave
pop
and
cs
cmp
pusha
lahf
adc
in
add
adc
push
jnp
inc
aam
push
and
xchg
pop
adc
sub
mov
addr16
ja
mov
mov
jecxz
movsb
ss
mov
pop
push
sbb
sahf
fwait
mov
int
inc
js
add
jno
scas
mov
cwtl
fisubl
movsb
and
test
int3
or
mov
dec
mov
or
fisttpll
mov
sbb
inc
test
mov
shr
inc
hlt
inc
cmpsb
xlat
push
mov
nop
dec
clc
inc
and
mov
rol
and
lcall
jl
adc
adc
ja
fists
dec
adc
in
xlat
xor
imul
movsl
or
jl
insb
test
mov
adc
incl
aam
adc
scas
and
shl
sub
js
icebp
mov
mov
loopne
test
cmp
fstps
cmp
cmpsl
das
out
pop
inc
inc
sub
cmp
mov
shll
es
call
jno
mov
mov
push
jmp
cltd
pop
jecxz
pushf
sar
rclb
imul
cwtl
mov
leave
cmc
or
ljmp
xor
fistpll
dec
push
lods
hlt
xchg
mov
aam
ja
addr16
bound
ss
stos
outsb
push
or
test
sub
sub
sub
mov
cltd
push
rorb
js
mov
cmp
inc
cmpsl
ret
jl
dec
pop
or
sub
push
cltd
cmpb
lcall
inc
in
push
repnz
mov
xchg
dec
popa
test
adc
popl
xchg
jge
sbb
pop
pop
inc
mov
jae
or
imull
cmc
jno
dec
fbld
mov
add
sub
mov
mov
cltd
int
les
in
sarb
fs
imul
xchg
scas
das
dec
enter
inc
cmpl
xor
mov
push
popa
push
lret
xor
aam
mov
cmp
imul
xor
insl
add
mov
fstpt
and
push
xchg
das
stc
or
out
loop
lods
and
push
test
inc
cmpl
push
mov
daa
imul
movsb
sub
int
enter
dec
inc
mov
stos
jge
pop
xchg
das
jl
fiadds
ret
sub
and
call
xchg
adc
in
xchg
pop
jne
and
xlat
out
shl
or
adc
jge
sub
lock
aas
push
jp
fiaddl
nop
jl,pt
fcomps
out
outsl
lods
fisubrs
push
cmp
ret
mov
popa
or
jecxz
mov
ljmp
jb
lcall
add
adc
sbb
in
dec
add
cmpsl
push
das
inc
inc
adc
out
lds
fisubrl
int3
adc
pop
and
xor
xor
adc
jns
out
mov
orl
add
orb
data16
cmp
dec
mov
mov
les
adc
adc
gs
cmc
mov
xchg
push
shll
pop
inc
mov
sub
jge
rcl
pusha
dec
mov
mov
popf
mov
cmp
mov
inc
jb
dec
sub
jno
sub
add
scas
cmpsb
stos
push
popa
dec
mov
jbe
sbb
mov
mov
add
daa
or
pop
cmpl
inc
repnz
mov
movsl
testb
sub
sbb
out
jl
out
out
scas
push
popl
xchg
stos
or
ret
xchg
pop
mov
popf
sbb
or
inc
mov
mov
jns
ret
sbb
ljmp
xor
xor
mov
stos
dec
dec
pop
pop
in
mov
or
push
cltd
xchg
push
arpl
and
add
aad
fmuls
mov
lret
stos
insb
mov
xchg
dec
cmp
mov
stos
enter
stos
fiaddl
or
movsl
scas
push
mov
lret
lret
cwtl
popf
cmp
mov
loope
clc
in
sbb
movb
mov
mov
dec
lea
hlt
arpl
test
or
inc
les
stos
mov
lock
mov
lcall
sbb
shlb
jp
ret
and
test
add
jle
incl
es
jge
ja
xor
push
xchg
clc
pop
dec
sti
in
movsb
cmp
xchg
push
rorl
out
xor
and
je
jmp
fcom
mov
stos
xchg
mov
xchg
sbb
and
cmp
mov
pop
iret
scas
ja
nop
mov
jo
mov
jns
dec
sbb
cs
xchg
adc
loop
jmp
out
cltd
jno
pop
imul
mov
aaa
xchg
xor
enter
pop
mov
jo
cmp
sub
shll
knotw
insb
mov
fstpt
orb
addr16
sub
dec
pop
jp
mov
add
stos
inc
insl
icebp
cld
rol
adc
mov
jbe
sub
mov
pop
stos
in
push
mov
mov
jns
rcll
out
cld
aaa
stc
xor
pop
mov
jne
jmp
xchg
rcl
fisubrl
cmp
xchg
pop
push
inc
loopne
and
mov
popa
jae
es
movsl
into
xor
dec
cmpsb
mov
enter
push
dec
adc
leave
jg
sub
test
fimull
scas
das
test
loope
jecxz
push
xchg
jge
stos
insb
rorb
jnp
push
scas
rcrl
dec
fimuls
std
adc
xor
cmp
add
lahf
add
mov
addr16
loopne
repz
push
push
sub
jnp
push
fiadds
gs
sub
xchg
sub
imul
cmpsb
dec
in
loopne
sarb
dec
andl
xor
jp
xchg
xor
repnz
leave
jge
xlat
inc
call
call
dec
lret
loopne
or
ds
sub
adc
or
jno
cmpsl
test
scas
adc
adc
dec
sub
cwtl
mov
sub
mov
inc
fidivl
cs
cld
pop
dec
lods
xlat
push
jo
inc
frstor
add
and
in
mov
mov
repnz
addr16
jmp
xchg
mov
clc
adc
jbe
sub
jbe
jns
mov
lret
jns
inc
cmp
sub
stos
push
jge
cmp
dec
jmp
inc
shr
mov
or
lcall
xchg
test
rcrb
rolb
ljmp
mov
in
pop
or
mov
mov
push
data16
cmp
lea
cmc
int3
popa
repz
xchg
cmp
cli
imul
fdivl
sub
and
movsb
ret
aam
add
sar
movsl
pop
sub
loope
xchg
cmp
inc
loop
stos
mov
inc
flds
and
inc
jno
std
out
or
mov
shll
in
nop
negl
pop
fnsave
cmp
divl
push
outsb
out
push
mov
and
add
push
jno
loope
jnp
pop
sarl
pop
cmp
dec
lretw
sub
adc
cmpsl
push
lods
adcl
sub
mov
repz
das
fs
stos
dec
mov
insb
movsb
mov
scas
cmp
push
sbb
test
addl
adc
test
cld
adcl
fbld
cmpsl
jo
pop
mov
push
jmp
iret
jge,pt
mov
insb
xchg
out
call
in
xlat
and
mov
test
cltd
ljmp
popf
call
fildll
rcrb
jns
push
mov
mov
adc
jle
jge
lods
cmp
jno
nop
cli
outsl
fucomp
inc
movsb
jbe
into
cmp
imul
es
mov
mov
mov
sti
mov
cmpsl
xchg
sbb
sahf
std
inc
sub
jle
ffreep
sbb
shrb
cmpsb
sahf
mov
jl
pop
jnp
sbb
insl
mov
cli
fdivrs
inc
iret
jns
jbe
jl
mov
xor
jmp
push
jmp
dec
lock
cmp
cmp
push
decl
xchg
pop
mov
push
push
cltd
mov
je
mov
div
dec
psadbw
testl
sbb
in
movsl
jbe
xchg
adc
popf
sbb
dec
adc
insl
imul
aaa
jno
sub
aam
add
jge
push
inc
dec
lcall
enter
stos
push
push
sbb
mov
popa
call
test
add
mov
xlat
dec
test
nop
xchg
out
jb
stos
pop
mov
mov
mov
ret
dec
lahf
adc
out
pop
das
out
icebp
sbbl
popf
jno
sbb
lods
faddl
sahf
repz
and
cmp
in
fistl
call
sub
ljmp
inc
pusha
pusha
xorb
pop
aaa
aas
xor
data16
pop
aaa
and
pop
mov
mov
xchg
jno
pop
into
sub
cmc
mov
jge
fwait
adc
pop
lea
jle
sub
mov
js
lret
push
shlb
loopne
xchg
xchg
or
inc
addr16
lret
cmp
shrl
call
stc
cmp
cmp
push
insl
fnstenv
idivb
lcall
fdivrl
aaa
fucompp
ja
in
push
sbb
ss
mov
sti
add
mov
cwtl
and
lret
les
adc
cmp
jmp
sbb
jp
andb
out
out
aas
inc
sti
mov
jmp
dec
sub
in
int
xchg
mov
jle
fsubrp
out
mov
xor
aaa
sahf
aad
mov
mov
jno
pushf
adc
sbb
repz
roll
cmc
flds
mov
je
lret
pop
sahf
mov
mov
mov
int
rcl
jmp
pop
adc
sbb
int
or
adc
pop
cli
and
daa
mov
xor
addr16
repnz
or
test
lods
int3
mov
mov
testl
or
push
pop
out
ljmp
psubw
cmc
adc
push
cs
in
adc
add
enter
orb
aam
mov
jg
xchg
cwtl
cmpsb
js
or
xchg
inc
jne
lahf
or
in
subb
mov
mov
lret
adc
testb
mov
pop
in
insb
sbb
or
push
add
subb
outsl
ficoml
mov
cs
sbb
inc
jno
push
jne
rorb
int
xchg
pop
ja
push
insl
sbb
and
lcall
pop
je
sbb
loope
movsl
mov
dec
inc
enter
and
dec
xor
clc
push
mov
add
pop
das
cmp
sub
pavgb
lcall
mov
out
mov
xorb
sub
push
sbb
jecxz
stc
jb
and
das
jns
jecxz
adcl
jne
xor
or
lret
xchg
into
in
cmp
mov
mov
mov
xlat
sub
pop
push
ljmp
mov
inc
pop
cmc
addr16
sbb
push
jecxz
or
xor
scas
jnp
push
pop
cmp
pop
repz
repnz
push
insb
outsl
in
out
repz
dec
cs
fistpl
dec
pop
call
mov
mov
jno
lds
mov
movsb
mov
jnp
mov
jmp
stos
in
fmuls
das
addr16
repnz
stc
sub
jb
mov
xchg
mov
lcall
cmp
or
push
sbb
insl
push
mov
enter
iret
sbb
cs
movsb
cmp
cmp
cld
hlt
aas
jg
jmp
jp
test
adc
sbb
mov
xor
outsl
mov
dec
orl
cs
insb
push
push
adc
xor
out
shrb
cwtl
fisubrl
rol
pop
inc
lret
push
in
out
mov
ret
imul
lods
cli
cmp
repz
cld
mov
sub
xchg
cwtl
mov
push
pop
sbb
sub
add
insb
rclb
js
xor
mov
pop
dec
cli
mov
mov
adc
jo
or
nop
fdivl
inc
ret
fildl
addr16
dec
aas
faddl
push
mov
jbe
hlt
leave
lcall
repz
xlat
andnps
mov
cli
jnp
out
sub
in
pop
inc
in
sbb
into
aam
sub
hlt
xor
cmpb
cmp
pop
adc
and
inc
ds
or
fwait
les
aam
scas
scas
daa
int3
fdivr
icebp
aas
lcall
inc
orb
inc
inc
mov
jnp
arpl
push
dec
mov
iret
inc
pop
cmc
cli
pop
fdivl
push
test
ja
movsb
add
inc
add
push
xlat
add
cmp
imul
add
push
sbb
push
mov
xchg
scas
retw
loop
ret
sub
movsl
fs
cmp
push
pop
call
cli
xor
fnstenv
sub
das
jle
arpl
xchg
std
xchg
sbb
sub
add
lret
jae
pop
fwait
stos
pop
stc
xor
fidivrs
push
out
jl
add
sbb
inc
xor
sbb
leave
scas
cmp
cmp
xchg
stc
xchg
test
outsb
pop
push
icebp
add
dec
xchg
loop
jle
jno,pt
es
dec
push
xchg
mov
into
fistpl
push
inc
mov
aas
pop
mov
lods
xor
sbb
ficoml
mov
xor
out
mov
mov
pop
std
mov
ds
sbb
and
out
fidivs
int3
out
jl
insb
dec
shlb
das
aas
cltd
rcll
sbb
mov
pop
sub
pop
mov
ret
jp
xchg
fs
inc
sbb
rclb
into
or
pop
insb
pop
inc
push
std
or
pop
push
mov
lret
xor
nop
add
addb
sub
mov
fucomi
pop
cmp
push
inc
inc
mov
xor
sahf
aad
add
clc
aaa
lret
mov
in
pop
fs
pop
pop
fsubs
cmp
or
pop
into
mov
imul
xor
inc
aaa
lahf
sub
repnz
or
aas
inc
pusha
mov
mov
cmpb
pop
icebp
pushf
mov
cmp
shr
jb
push
sub
les
loop
out
pushf
mov
jae
mov
cmp
add
sub
out
adc
mov
pop
repz
mov
movsb
fwait
inc
jecxz
out
adc
in
xchg
cmp
outsb
stc
cmp
bound
inc
sub
push
rclb
xchg
dec
add
jge
cmpsb
or
fsubl
cmp
jl
out
call
incb
dec
in
mov
ret
lods
pop
lods
nop
out
push
sbb
sub
ret
pop
div
push
dec
sbb
addr16
xor
sahf
xor
in
mov
lcall
mov
test
inc
xchg
lods
insl
mov
pushf
cmp
mov
xlat
adc
pop
inc
jecxz
mov
adc
xchg
mulb
push
repz
popf
or
repnz
push
mov
mov
jge
sbb
adc
iret
and
rcrb
popf
scas
cmp
cmp
xor
inc
je
inc
jo
mov
jnp
jle
jb
jbe
sbb
aaa
mul
movsl
out
or
test
xor
mov
mov
push
sub
push
push
lea
ret
push
outsl
iret
add
pop
out
movsl
jo
es
movsb
in
sbb
mov
movsl
dec
or
test
mov
aas
jae
xchg
adc
dec
sbb
in
js
xchg
loop
jge
push
xchg
add
in
sub
cmpsb
dec
mov
cld
sub
jp
aam
gs
dec
mov
cmpsl
pop
inc
test
xlat
jle
mov
and
loope
loopne
lahf
sbb
pop
lds
in
int3
sti
jo
pop
in
xor
cmpsb
outsb
arpl
cmp
cmpb
fbld
inc
push
pop
or
jno
add
cld
fisttps
ss
arpl
mov
movsb
add
pop
sub
movsl
addr16
pop
xchg
ret
mov
cmp
cmp
mov
mov
sbb
sbb
aam
sbb
fcomps
dec
pop
js
test
jo
cmp
sar
jb
daa
cmp
add
mov
xchg
data16
dec
xchg
fs
or
mov
dec
cmc
out
cmpsl
insl
out
push
adc
dec
sbb
bound
mov
lods
xchg
inc
ficoml
stos
dec
inc
ljmp
imul
mov
mov
inc
push
orb
xchg
dec
jnp
push
loop
mov
or
ja
mov
jne
inc
and
mov
jns
popf
cld
mov
push
pop
pop
es
jb
pop
xor
in
mov
jmp
jl
mov
lcall
push
add
dec
dec
test
aad
cs
pop
push
fwait
xchg
and
cltd
xlat
lret
mov
stos
jo
dec
push
sbb
adc
es
into
test
es
fstpl
aam
adc
in
fucomip
pop
jecxz
lods
adc
jge
enter
iret
cs
and
mov
xchg
cmp
xchg
mov
subl
mov
cld
test
btc
push
add
je
mov
mov
jmp
ja
aam
push
fidivrs
pop
out
call
push
pop
push
rol
js
popa
mov
imul
sub
sub
notb
into
js
cmp
nop
pop
into
mov
cmp
push
add
sub
ja
mov
clc
vmovaps
int3
xchg
mov
rorb
mov
and
push
dec
sarl
adcl
xlat
daa
cmpsl
lea
scas
mov
popf
stc
shll
add
and
cmpsl
add
rol
popf
push
into
pop
in
sbb
aaa
and
out
push
or
dec
push
pop
ds
mov
xchg
in
outsl
xor
sub
dec
pop
fsubl
jae
adc
mov
jp
mov
inc
divl
je
jg
in
cmpsl
xor
and
pop
inc
aam
insl
stc
aad
mov
pushf
imul
movsl
dec
mov
dec
or
mov
mov
repz
sub
mov
shl
lods
pop
inc
add
hlt
xchg
or
jge
inc
stc
es
stos
cltd
mov
fidivrs
pop
ds
nop
sarl
jno
loope
xor
sbb
adc
fs
stos
rclb
push
lods
in
push
call
xchg
scas
insl
test
mov
jl
lock
xchg
jmp
sbb
clc
clc
sti
pop
call
inc
aas
cmp
shrl
ljmp
lea
push
lods
dec
dec
jbe
call
call
mov
add
jbe
arpl
sbb
cmp
mov
dec
shll
outsb
cltd
icebp
mov
test
push
fsubs
mov
imul
push
mov
add
dec
cmp
mov
inc
fstps
lds
rcll
and
and
scas
adc
mov
and
std
jecxz
mov
insb
sub
cltd
stos
xchg
daa
shrb
mov
cmp
sub
sarb
in
jnp
rcll
inc
sbb
ret
mov
pop
dec
dec
rclb
push
push
cld
mov
add
mov
in
std
sahf
sti
mov
mov
js
scas
and
or
pcmpeqw
adc
cmp
jmp
and
inc
jo
mov
push
fs
or
push
mov
int
jg
push
push
mov
leave
adc
or
pop
adc
mov
xor
scas
sbb
add
adc
jnp
aad
cmp
pop
test
mov
scas
or
ss
dec
jp
lahf
into
test
mov
pop
mov
push
xchg
or
decb
scas
xchg
xchg
lods
sub
add
push
loop
or
xchg
leave
pop
adc
xor
jnp
inc
aad
dec
pop
lods
outsl
icebp
dec
sti
ret
inc
mov
pop
sti
mov
data16
fdivrs
mov
pop
data16
fstp
sub
lods
add
outsb
inc
mov
mov
bound
mov
imul
xchg
pop
popa
adc
out
and
insb
xchg
imul
add
cld
imul
mov
mov
les
xchg
clc
int
cmp
ret
bnd
int
or
jae
pop
in
push
aaa
gs
adc
cmp
xchg
in
dec
sbb
int3
arpl
push
sbb
jg
sub
xor
enter
xor
push
repnz
push
mov
rol
mov
movsb
icebp
adc
arpl
loopne
xor
push
push
adc
or
loop
lcall
dec
jmp
mov
jp
repz
test
jge
pop
inc
sbb
mov
jg
or
mov
scas
fcmovb
xor
pop
dec
repnz
cmc
insw
popf
sahf
int
add
pop
xor
or
decb
arpl
test
sahf
adc
xorl
mov
adc
in
fsubs
xchg
and
fmuls
push
stos
and
dec
js
push
test
sub
mov
dec
rcrl
xchg
ja
or
pushf
enter
pop
shll
lds
jp
mov
fistps
adc
jne
jge
or
sub
into
ljmp
imul
ljmp
push
xchg
arpl
cmp
js
sub
jns
cmpsl
sub
pop
cld
insb
mov
push
or
ret
test
jl
cmp
repnz
leave
cmp
mov
fucomi
jb
mov
rclb
daa
std
dec
mov
sub
fcoml
into
adc
dec
in
adc
and
dec
push
addr16
jg
cld
pop
rcrl
icebp
out
jge
sub
call
xorb
aad
add
test
dec
jle
xchg
mov
sub
cmp
jg
cltd
adc
and
jnp
iret
aad
mov
arpl
dec
xchg
mov
inc
fsts
dec
dec
out
push
fnsave
insb
mov
orl
jg
scas
mov
aad
ljmp
leave
mov
mov
xchg
daa
and
push
test
dec
push
sar
cmp
sbb
pop
xor
jae
xor
lea
xchg
cmpsb
push
imul
pop
test
jns
jae
and
and
mov
loope
test
cmp
aaa
jg
decb
adcb
fistpll
rcr
mov
sub
in
ljmp
jbe
pop
add
cwtl
js
add
jp
std
sub
push
sub
mov
ror
mov
jo
cld
shl
inc
add
pop
jp
idivb
push
pop
dec
sbb
mov
cmpsl
loope
xchg
lds
add
jbe
rcl
aam
sbb
jmp
add
adc
js
fiadds
xchg
sub
or
jg
xchg
and
outsb
push
int3
int
clc
test
into
xchg
jl
lock
mov
jmp
jecxz
pop
jne
xchg
jns
add
leave
aad
push
gs
push
xchg
sub
rol
aam
xlat
and
adc
sub
mov
jo
notb
push
mov
popf
movsl
in
test
sti
fstps
sub
mov
sbb
xchg
es
pop
fisttps
lock
shr
jb
mov
cmp
mov
icebp
cli
arpl
push
fnstenv
pop
jl
or
sti
sub
cmc
insb
inc
mov
in
inc
imul
cmp
dec
outsb
imulb
mov
je
ss
mov
sub
mov
fistl
clc
or
loopne
pop
xchg
cmp
cli
call
in
xlat
push
mov
lods
fnsave
mov
notb
inc
adc
sbb
sub
xchg
xchg
in
cmpsl
sub
pop
adc
imul
lods
in
stos
adc
shll
js
fistpl
jne
xchg
pop
pop
shlb
pop
push
or
stc
dec
imul
je
mov
scas
sub
jns
call
lcall
ljmp
cmp
add
pushf
inc
lods
mov
jle
popf
mov
push
sbb
mov
insl
xor
lea
mov
adc
insl
adc
dec
pop
inc
dec
ds
arpl
notb
jle
or
and
or
or
and
xchg
dec
ss
dec
mov
cld
loopne
std
sbb
push
push
shl
jmp
mov
rcrb
ss
pop
outsb
jmp
pushf
mov
in
jnp
in
or
out
push
testl
iret
testl
xchg
leave
cld
and
add
addr16
add
mov
inc
mov
lock
fsubrl
cmp
mov
popa
insl
movsl
jecxz
or
test
cmpsb
mov
call
enter
mov
cmp
inc
mov
sbb
add
cmp
aam
mov
icebp
push
fsubl
jmp
pop
gs
push
flds
sarb
sahf
mov
gs
subb
mov
jmp
int
push
push
jns
xor
mov
jle
sub
in
lods
pop
test
ffree
addb
dec
sahf
pop
or
xchg
jge
std
and
jmp
and
fldcw
and
xorl
mov
mov
fbld
sbb
imul
push
sbb
jnp
arpl
ds
and
mov
adc
ret
sahf
ds
pushf
xor
mov
cmp
sub
jae
cmp
mov
cmpsl
jl
pushf
lock
mov
sub
hlt
mov
xor
sbb
sub
jg
jne
fsub
adc
xchg
shrb
sub
scas
orl
and
shl
sbb
dec
data16
in
pushf
leave
push
and
push
and
lahf
pop
cs
and
cmc
test
movsb
mov
lods
pop
pop
sar
inc
inc
in
xlat
fpatan
lcall
add
and
leave
pop
add
sbb
mov
jmp
repz
xor
adc
push
sarl
repz
sub
icebp
cmp
aam
dec
insb
adc
addr16
mov
xor
sub
pop
pop
jge
dec
sbb
in
gs
dec
cmp
lea
rcll
push
and
out
test
and
xchg
add
jge
push
mov
or
add
iret
sbb
jne
lods
xchg
icebp
cmpsl
push
les
push
stc
push
lock
test
inc
dec
add
jns
xchg
pop
sub
sbb
mov
push
rorl
mov
rolb
aaa
lods
or
adc
xchg
lea
aad
and
adc
jne
inc
imul
or
fmuls
cmpsl
adc
pop
mov
push
outsb
ss
movsb
rclb
enter
and
and
ss
scas
pop
aad
push
inc
adc
sbb
and
xchg
in
test
sahf
adc
push
jp
dec
out
shl
je
call
and
push
daa
sti
push
je
nop
jo
aaa
xchg
cmpsl
add
or
mov
adc
push
xchg
jbe
shl
jns
jg
and
and
add
mov
adc
inc
jp,pn
out
push
mov
cmp
mov
jne
xchg
push
insl
loopne
clc
push
lds
jmp
add
mov
xchg
xor
cmpsl
push
add
sub
sub
mulb
in
mov
add
add
sbb
mov
outsb
sub
push
sub
sub
add
imul
jne
or
ret
or
xor
cmp
nop
loop
loop
gs
or
pop
add
push
sbb
icebp
repz
mov
mov
push
xchg
inc
test
in
out
jns
aaa
jo
inc
lods
jnp
scas
cmc
add
cmpsl
imul
sub
pop
shlb
leave
jge,pt
sarb
fbld
dec
dec
and
or
dec
in
jp
nop
lahf
jle
cmc
cmpl
ret
sub
add
idivb
xchg
or
mov
inc
sti
adc
pop
int3
xchg
lds
add
lds
mov
jnp
and
mov
mov
fcomps
lcall
scas
push
add
stos
data16
out
push
xchg
hlt
adc
cld
cmpb
cld
ljmp
movsb
daa
shl
xrelease
daa
cmp
fs
aad
add
gs
cwtl
movsb
out
jno
jge
jmp
in
inc
fcompl
mov
rolb
xchg
pop
xlat
outsl
int3
pusha
lock
sub
fs
out
fwait
adc
mov
cmpb
repz
sbb
xchg
dec
dec
or
shrb
dec
or
mov
lcall
test
mov
or
push
loop
movsb
mov
lret
ja
out
mov
clc
xor
and
xchg
or
cmp
jne
mov
xchg
rcll
jp
out
cmp
cmc
cli
aaa
fisttps
pop
inc
xchg
sarb
push
pop
ja
push
divb
ret
xchg
jbe
aam
inc
pop
xchg
ret
arpl
mov
dec
add
js
mov
inc
inc
lock
xor
mov
rcrb
mov
test
jp
mov
mov
cli
pop
jecxz
mov
xor
clc
rcll
popf
xchg
into
cli
shrb
cwtl
sbb
mov
or
dec
ret
and
or
aam
mov
sbb
jecxz
sbb
cmpsl
sub
fiaddl
pop
cmp
push
push
and
push
dec
dec
mov
enter
cmp
shrb
movsl
addr16
mov
ja
sti
addr16
mov
inc
and
mov
fwait
test
rcrl
dec
mov
stos
adc
sbb
movsb
stc
adc
pop
mov
imul
dec
add
mov
sub
mov
mov
int3
out
movsb
das
xor
mov
cwtl
js
test
movsb
rcr
fcomps
mov
pop
insb
outsb
mov
xchg
out
ja
jge
xchg
jmp
sbb
gs
and
jno
push
movsb
pop
cld
jge
xchg
mov
sbb
ret
mov
cmpsl
test
daa
std
stos
pop
test
in
movsl
js
dec
pop
dec
aad
mov
cmp
cmp
daa
sbb
cli
icebp
xchg
jmp
mov
loopne
movb
inc
not
popf
icebp
into
push
mov
mov
pop
cmp
inc
push
mov
fucom
add
inc
dec
mov
lea
imul
inc
xor
sub
mov
stos
clc
jp
nop
int3
inc
jp
mov
xor
or
jge
cltd
adc
ljmp
jb
jmp
mov
xchg
xlat
scas
js
test
sbb
jbe
xor
imul
add
fs
xchg
lcall
push
gs
xor
cmp
mov
addr16
cmp
push
lods
adc
mov
movsb
push
or
mov
lods
ficoml
cmp
pusha
push
in
daa
out
adc
pop
shll
call
xchg
jge
jl
jp
push
mov
imul
cld
rcll
outsl
cmp
dec
call
cli
lcall
cmp
sbb
sbb
bound
js
jecxz
ret
lret
outsl
fs
lea
xchg
call
decb
inc
xchg
cmp
push
testb
mov
pushf
jne
sbb
imul
mov
fstps
jb
in
dec
sahf
es
mov
and
pop
movsb
xlat
out
adc
sbb
aaa
cmp
fidivrs
testl
bound
pop
push
lret
mov
push
mov
pop
mov
ds
test
push
cmp
mov
fldcw
aas
inc
andl
fwait
xchg
pop
rolb
fdivl
and
mov
mov
push
sbb
test
add
or
xorb
addl
mov
push
pop
insl
or
jae
sbb
inc
rcrl
sbb
and
push
mov
xchg
push
ja
add
out
fcomi
insb
dec
scas
mov
cmp
ret
stos
sbb
fidivl
cmpsb
imulb
jns
jnp
ja
xchg
sub
add
ret
jno
idivl
mov
xchg
ds
cmp
stc
sarl
pop
xor
es
ret
xchg
filds
in
push
inc
cmpsb
jle
inc
test
shlb
rcll
cmpsb
and
nop
aad
das
clc
mov
cmp
pop
test
mov
add
lret
lret
in
test
fldcw
movsb
bound
into
test
mov
inc
xor
mov
ss
and
icebp
test
add
hlt
and
inc
push
lock
in
mov
cmovae
cmpsl
add
xor
bnd
mov
cmc
popf
add
ljmp
rcrl
xor
and
push
inc
data16
dec
lahf
xor
mov
add
aas
addl
xchg
enter
adc
mov
shlb
sbb
jns
jle
addl
pop
jmp
inc
push
mov
stos
xchg
xchg
test
push
cmpsb
mov
outsl
xchg
pop
fimull
test
mov
dec
loope
sbbb
lock
int
pop
adc
stos
movsl
clc
sub
sbb
push
cld
out
int3
xchg
movsl
aad
jmp
xor
lcall
gs
sub
orl
les
rsm
leave
insl
inc
int
ffree
jg
xchg
ja
leave
idiv
into
jo
pusha
push
in
enter
mov
fidivrs
dec
rolb
gs
mov
cli
adc
iret
fprem
fcoml
sahf
sbb
push
xor
or
stc
cmp
xor
pop
ret
dec
push
lods
dec
dec
cli
mov
add
push
dec
nop
xor
dec
sti
out
dec
inc
pop
aas
and
inc
inc
aam
fsubl
scas
int
mov
and
sub
xchg
cmp
inc
cmp
jnp
testb
pop
sub
mov
mov
sti
or
push
js
mov
inc
aas
xchg
lock
flds
jbe
jmp
in
sub
sbb
xchg
fnstenv
jbe
mov
gs
cmp
sbb
repz
test
mov
cmp
mov
adc
add
add
movsb
stc
xor
push
fldcw
cmp
mov
pop
xor
jbe
les
js
stos
dec
push
inc
idiv
inc
push
stos
cmp
popf
insb
clc
jne
clc
push
jno
scas
nop
leave
div
cmp
xor
xchg
sub
repz
pop
mov
fistpll
sbb
arpl
test
cli
stos
mov
lret
inc
fdivs
fists
loopne
jmp
mov
mov
cmc
or
inc
inc
mov
fcoml
push
popa
lea
ds
sub
fs
cmp
scas
cmpsl
cmpsl
sbb
cmp
add
cmpsb
aaa
ljmp
out
repnz
pop
push
push
push
jge
lock
xchg
stos
icebp
repnz
fiaddl
pop
lahf
xor
dec
add
xor
pop
dec
add
mov
cli
repnz
insb
sub
loope
lahf
loopne
fbld
cli
pop
enter
inc
adc
cmp
sti
addr16
pop
mov
pop
xor
imul
dec
fdivr
es
add
sbb
mov
ja
fidivrs
mov
fs
icebp
dec
subl
das
test
mov
pop
dec
hlt
sub
lahf
adc
stos
mov
dec
nop
jne
cmpsb
pop
jl
lea
xchg
push
arpl
sub
arpl
insb
sub
sti
jmp
mov
mov
or
or
inc
mov
jb
push
add
jns
sbb
ds
dec
adc
dec
insl
fistpl
cmp
hlt
in
subl
and
cwtl
jmp
lods
push
mov
sub
pop
sahf
sub
xchg
add
mov
cld
mov
xor
std
aad
loopne
loopne
cmp
jbe
pusha
push
in
jns
cmp
dec
push
in
mov
stos
push
jle
dec
pop
cli
pop
jg
insl
jl
out
or
lcall
movsb
mov
sub
dec
cmc
shl
and
sbb
dec
stc
sbb
mov
movsl
popa
outsl
mov
or
xor
or
sub
cs
inc
xorb
outsl
push
mov
js,pn
rorb
popl
sbb
aas
addr16
hlt
jp
out
ret
pop
push
add
ret
fldenv
jae
sbb
aad
dec
and
pop
pusha
adc
push
jnp
test
ret
es
mov
inc
popf
fimull
das
sbbl
or
xor
xchg
out
sbb
loope
push
dec
inc
xor
dec
sbb
mov
insb
mov
fldenv
and
out
inc
jnp
pop
movl
loope
dec
add
stos
mov
test
popa
fldl
inc
cmp
jecxz
adc
xlat
repz
cs
loop
xchg
mov
mov
sbb
mov
outsl
mov
into
ss
ret
ret
lea
xchg
mov
pop
cld
test
insb
in
unpckhps
ljmp
sub
repnz
fimuls
or
and
int
and
pushf
mov
jl
andl
xchg
xchg
mov
xor
inc
sbb
xor
in
repz
lahf
mov
dec
fldcw
addr16
mov
ljmp
data16
push
jo
pop
aam
out
cmp
adc
sti
xchg
xor
adc
jmp
jl
pop
fisttpl
mov
loope
cltd
mov
test
xor
in
cmc
sbb
cmc
data16
mov
add
arpl
pushf
call
stos
jo
sbb
or
data16
inc
adc
daa
add
fadds
xlat
aad
push
stos
enter
insl
and
lods
sub
mov
loope
imul
fildll
push
cld
jecxz
xchg
adc
sbb
push
xor
leave
or
lea
lcall
bound
pop
in
pusha
sbb
mov
cmp
jns
stc
fs
movsb
mov
and
add
xchg
add
cs
xchg
pushf
fldl
jo
and
lret
pop
lret
inc
mov
hlt
sbb
mov
cmp
fmul
movsl
lods
stos
and
iret
lock
cmp
into
ljmp
ret
lcall
fstl
xor
shlb
pop
mov
aas
add
in
xchg
mov
push
fiaddl
cli
and
sahf
js
cmp
jo
int
fisubrs
dec
cmp
mov
popf
arpl
scas
js
fsubs
sub
dec
jnp
or
cmp
push
stos
xacquire
mov
sbb
lods
scas
adc
sbb
mov
pop
in
inc
shl
mov
insl
imul
push
aam
push
out
sbb
push
jno
push
sbb
push
mov
cs
sub
les
test
pop
lock
or
rcrl
test
pop
insb
mov
push
shl
ret
in
movsb
push
mov
sub
test
sbb
test
mov
or
jmp
rcr
sbb
lock
add
jae
lock
aad
sub
push
int3
aad
mov
mov
stos
or
or
shrl
push
pop
stos
mov
push
inc
jp
xor
mov
xchg
pop
cmp
cs
xor
popa
in
sarl
insb
cltd
pop
sub
push
jne
push
pusha
jnp
in
add
stos
icebp
shll
fsubrs
call
xor
popf
adc
popa
notl
sub
mov
pop
xadd
insl
mov
mov
into
jl
jge
xchg
in
push
xor
orl
mov
ljmp
bound
pop
sub
pop
push
or
mov
sbb
and
loopne
ret
sbb
or
xor
jns
lods
inc
pop
int3
or
cmp
sarl
stc
into
stos
sub
fwait
repz
dec
in
in
pcmpeqw
sbb
roll
rcrl
test
orb
add
mov
push
push
cmp
shll
gs
outsl
xchg
fmull
jbe
aam
jecxz
or
push
cmp
fmull
jns
or
xor
and
icebp
adc
movsb
sub
mov
xchg
add
sub
adc
pop
and
movsl
outsl
inc
add
out
mov
data16
add
xor
fdivrp
lret
xlat
inc
push
packuswb
or
mov
mov
mov
out
push
xchg
jg
fisttps
and
pop
arpl
pop
jns
shrl
pusha
enter
xchg
cmpsl
push
sub
or
mov
movsb
scas
mov
mov
lock
aaa
push
std
adc
cs
jp
dec
push
mov
or
movsl
pushf
xchg
dec
sti
notb
sub
inc
pushf
cmp
ds
lcall
xchg
jge
mov
lods
sbb
mov
jne
adc
hlt
cmp
mov
pop
pop
popf
les
jb
mov
ds
ret
cmp
das
push
sbb
mov
test
mov
push
iret
inc
add
lahf
iret
lods
out
jno
cmpsb
dec
pop
push
jae
ljmp
ror
ljmp
imul
mov
movsl
add
inc
sbb
dec
cli
push
cwtl
add
aaa
push
dec
sbb
and
clc
sub
shrl
push
add
push
dec
data16
or
fs
pop
xor
call
sti
movsl
mov
pop
xchg
movsb
mov
aaa
adc
addb
cmc
push
add
cmp
lcall
fs
sbb
imulb
popa
orb
arpl
out
mov
cmp
ja
pushf
cwtl
inc
sub
inc
cmp
push
outsb
scas
test
pop
mov
push
negl
cmp
push
adc
jbe
pop
sahf
dec
insb
pop
ss
ljmp
popf
ficoml
insl
mov
test
push
and
or
sbb
sbb
sbb
outsb
int3
orb
cmp
xor
fisubrs
adc
pop
shlb
lock
adc
dec
cmpsl
sbb
aas
nop
aas
dec
pusha
test
lahf
fstpt
sahf
aas
dec
scas
lahf
mov
shlb
aaa
mov
push
clc
lock
add
adc
inc
xchg
xor
mov
dec
dec
int3
bound
adc
mov
push
pop
xchg
jnp
adc
bound
pop
addr16
pushf
test
xor
sub
lods
dec
test
inc
fsts
pop
js
rorb
jno
or
sahf
mov
divb
subb
mov
jnp
mov
jnp
popf
dec
test
jnp
add
or
and
jne
mov
hlt
sti
fwait
and
pop
iret
pop
int
push
subb
ficompl
jge
movsl
lods
mov
jmp
int
pop
into
aam
rolb
cmp
std
es
lcall
push
in
and
xor
mov
test
bound
pushw
or
mov
hlt
fisttpl
fidivs
in
cmp
adc
repz
sub
das
fistl
mov
lods
jge
lods
stos
xchg
or
aam
adc
sbb
push
in
mov
pop
negb
ja
stos
adc
pop
inc
sbb
call
xor
xor
rol
addr16
xchg
lock
sbb
dec
scas
jg
push
dec
mov
mov
mov
push
inc
dec
movsl
sub
xchg
xchg
lds
sbb
xor
mov
adc
dec
sub
mov
mov
sti
shlb
mov
mov
dec
dec
imul
loopne
adc
repz
xlat
jmp
int3
mov
lods
add
or
sbb
dec
adc
add
nop
inc
mov
mov
xor
push
jecxz
lret
pusha
nop
pop
sahf
fwait
jne
inc
sbb
mov
xor
adc
imul
aaa
sbb
jb
test
out
push
sti
jge
fs
add
cmp
aaa
into
jle
lock
ja
push
lock
adc
inc
push
fucomp
rcrl
js
fdivl
rolb
adc
or
push
iret
mov
stos
lahf
mov
enter
lock
pop
and
push
and
mov
mov
pop
loop
mov
fdivs
lahf
scas
jmp
test
jo
sbb
mov
xor
cs
dec
outsl
add
push
data16
addr16
cmp
pop
stos
in
mov
sub
cmp
push
and
mov
lret
mov
lds
and
and
fisttpl
out
push
pop
test
repz
stos
fndisi(8087
xor
roll
fsubl
mov
push
int3
push
pop
scas
stc
or
cmp
xor
xchg
cmpsl
int3
and
in
nop
mov
nop
popf
or
stc
test
xlat
imul
xchg
addl
out
xorb
cld
xor
imul
or
mov
jle
push
sti
enter
sub
sbb
pop
and
mov
mov
int
icebp
lcall
rcr
mov
xor
or
test
scas
pop
cmpsl
adc
mov
idivb
fwait
rcl
push
out
sbb
movsl
icebp
cmp
jo
adc
shlb
mov
xchg
mov
adc
ds
xor
sub
repnz
mull
cmpsl
push
sub
sub
lcall
xchg
push
pop
stos
nop
dec
arpl
loopne
jge
out
adc
repz
mov
mov
dec
subb
in
jecxz
xchg
xlat
nop
clc
cltd
dec
dec
lock
shlb
stos
inc
imul
inc
sbb
repz
xchg
inc
ret
mov
cmp
xorb
test
cmpl
data16
adc
fcom
pop
cmpsb
xor
jnp
je
in
getsec
add
and
scas
add
adcb
dec
xchg
frstor
push
sub
les
mov
shlb
jne
mov
rol
fcmovnb
xchg
rorl
hlt
add
imul
stos
dec
outsl
or
add
jnp
adc
into
lock
js
mov
mov
shrb
ss
jp
popf
sbb
and
cmp
mov
fstl
das
adc
jmp
adc
decb
jo
inc
clc
or
mov
icebp
inc
push
pop
cmp
jecxz
aaa
sbb
sbb
loope
lods
sub
and
out
cmp
nop
xchg
and
ljmp
ret
fwait
insb
push
mov
clc
int
sub
movsl
lods
jg
leave
cmp
and
mov
out
jmp
inc
dec
push
sbb
shll
hlt
cmp
int
pusha
stos
push
loop
jg
fdivp
sti
sub
andl
cld
push
add
xchg
xor
fldcw
cmpsl
xchg
mov
mov
arpl
repz
cmp
mov
push
dec
or
and
cmpsl
nop
hlt
jbe
mov
movswl
sub
cmp
js
jns
fcmovnbe
adc
enter
push
mov
scas
push
dec
cld
push
adc
stc
xchg
adcl
mov
xchg
sbb
iret
sub
adc
pushf
jne
loopne
fimull
jns
adc
test
pop
jle
and
sbb
inc
xor
add
dec
fdivrp
lods
jbe
jge
pop
leave
mov
sarb
incb
enter
inc
mov
xor
mov
sarb
hlt
and
cmpsb
lock
mov
mov
xlat
arpl
std
fstpl
gs
out
divl
nop
jo
std
cmp
or
cmpl
push
loopne
inc
das
xor
daa
mov
sub
sub
daa
call
mov
and
mov
jo
adc
divl
sarl
push
mov
es
mov
rcrl
out
jmp
mov
movsb
hlt
daa
daa
inc
out
dec
ret
pop
clc
jae
mov
sub
inc
xchg
sub
test
lret
cmp
pop
xchg
jo
mov
mov
xchg
clc
pop
jae
out
dec
sti
stos
lds
jbe
mov
inc
or
cld
aam
pop
inc
movsl
fdivrp
sbb
push
out
rcl
mov
sbb
loopne
mov
xchg
stos
pop
insl
cltd
ja
ss
fiaddl
das
sbb
fdivp
cmp
push
fidivrl
out
movsb
mov
rolb
sub
sahf
hlt
mov
repz
push
mov
imul
fstpl
push
sub
xor
adc
fisttpll
xchg
int3
xchg
arpl
mov
adc
hlt
push
fxch
cmp
xor
aad
inc
pop
ljmp
inc
clc
jge
ss
sub
addr16
aam
hlt
movsl
pop
loopne
push
pop
dec
mov
mov
lea
insb
or
roll
pop
fwait
add
push
jecxz
stc
mov
and
mov
add
incl
rolb
leave
fmulp
mov
jg
mov
push
and
push
inc
std
and
adc
enter
jns,pn
insb
mov
or
hlt
popf
mov
cmp
fadd
adc
pop
lret
dec
outsl
pop
fstpt
les
loopne
jl
jmp
push
mov
pop
sahf
push
xchg
sti
mov
add
pop
in
je
popl
sbb
sbb
repnz
out
in
stos
call
ret
shl
in
pop
add
dec
in
fdivs
ret
movsb
jns
mov
adc
fisubrs
stc
or
xchg
stos
xor
inc
enter
xlat
fiaddl
and
mov
gs
fdivl
pusha
pop
outsl
mov
sub
adc
mov
jae
mov
xchg
jae
mov
stos
nop
mov
dec
cmpsl
jb
je
adc
mov
inc
or
das
mov
ficompl
aam
clc
sub
aad
or
adc
push
popa
cwtl
push
jge
jne
sahf
pop
cmpsb
mov
inc
lcall
pop
push
sub
sub
lods
loopne
ds
fimull
dec
jae
fildl
das
sub
lea
sbb
adc
push
jo
push
and
and
out
jbe
mov
sbb
popa
push
cmpsb
dec
sub
inc
fwait
bnd
cmp
add
sahf
xor
push
mov
sbb
lret
je
jno
in
int
mov
sub
mov
sbb
ds
xorl
scas
into
sub
pop
std
xor
jl
sub
or
sub
movsl
pop
fadds
fcoml
movsb
jl
mov
in
add
push
minps
push
push
push
pusha
aaa
dec
mov
adc
pusha
testl
jl
shl
mov
into
xchg
xchg
push
xchg
push
dec
ss
dec
mov
sbb
jae
jae
je
xchg
xchg
in
lcall
push
xchg
and
sub
inc
inc
pop
cmpl
jp
xchg
inc
xchg
xor
lret
xor
mov
lock
or
cld
jmp
mov
and
add
pop
enter
push
inc
psllq
int
mov
std
push
xlat
cli
cmpsb
pop
or
inc
pop
and
fwait
inc
enter
loopne
xlat
mov
outsb
xchg
dec
ret
sahf
cmp
clc
popf
xchg
idiv
push
xchg
call
enter
ss
pop
inc
dec
cli
inc
pop
ja
sti
pop
add
sub
aam
mov
ficomps
jo
test
insl
loope
mov
sub
or
xor
push
xor
int3
addr16
pop
sub
and
mov
dec
jbe
jne
scas
add
nop
stc
cmpsb
mov
push
out
arpl
add
leave
adc
popf
outsb
cwtl
fcmovnbe
adc
dec
lret
stc
cmp
push
push
mov
inc
inc
ds
jne
inc
add
mov
inc
jg
xchg
or
push
add
or
adc
mov
dec
fbstp
mov
scas
in
adc
push
aas
push
jae
inc
inc
push
xchg
inc
push
ja
xor
pop
jmp
rcr
jo
jbe
outsl
mov
push
inc
cmp
push
stos
jne
xchg
jo
mov
xor
int3
mov
leave
jle
clc
add
push
xchg
pusha
lcall
cmp
jmp
loop
adc
mov
lcall
mov
test
bound
ds
ret
idivl
lea
jle
fildll
sub
ds
mov
popa
std
mov
adc
insb
cld
std
dec
leave
fcompl
aad
data16
dec
dec
cmp
jo
dec
leave
and
and
sub
fdivrp
lods
cmp
mov
sbb
fdivrl
pop
add
or
int
push
into
test
in
mov
std
scas
ja
cltd
add
jg
mov
sbb
push
mov
orl
pop
pop
movsb
sbb
jl
ud0
fdiv
sub
scas
mov
mov
dec
xchg
cmp
sbb
in
push
pop
out
int3
adcb
jge
iret
in
imul
xor
fs
movsb
imul
rol
jmp
out
xchg
scas
push
inc
or
out
push
fwait
xor
push
lods
add
xlat
sahf
push
enter
sbb
jae
inc
adc
push
jge,pn
dec
mov
nop
int3
mov
imulb
fdivrp
mov
cmp
into
jno
jbe
pop
inc
adc
dec
adc
xor
fidivs
jns
in
mov
mov
repz
xchg
pop
sbb
cmc
push
imul
and
push
aam
in
adc
aaa
aam
jle
xor
cltd
lret
sub
xor
mov
repz
popa
int3
dec
sbb
or
mov
fimuls
mov
pop
jmp
mov
jb
fbstp
cli
out
je
xchg
jbe
rorb
adc
fstps
mov
jmp
sarb
xchg
and
xlat
and
popa
fldl
sub
xchg
std
subl
out
sbb
lods
pushf
daa
rcr
push
cmp
jo
enter
or
adc
insb
movsb
scas
push
mov
adc
and
and
lret
mov
jl
int3
mov
pop
xlat
mov
sbb
adc
in
sbb
cmp
mov
sub
sbb
push
add
loopne
sub
pushf
popf
pop
aaa
fwait
movb
and
and
test
xchg
push
pop
je
adc
cli
add
pop
add
mov
or
repz
pop
loope
xchg
xchg
int
or
mov
out
sti
mov
jnp
rcll
das
mov
arpl
test
lahf
xchg
inc
ret
mov
fldenv
cmp
and
ja
hlt
bound
xor
mov
stos
adc
scas
fbstp
adc
sbb
mov
or
std
test
out
pusha
aad
mov
loopne
add
pop
adc
notl
push
pop
push
cmp
aas
and
sarb
dec
push
popa
lods
inc
sub
out
jle
scas
fnstsw
sbb
iret
dec
lcall
pop
fwait
mov
inc
je
cltd
lahf
mov
xchg
mov
mov
scas
shll
dec
cmc
or
es
daa
inc
insb
inc
cmp
rolb
inc
adc
cmpsb
ret
mov
jnp
adc
fcoml
xchg
mov
leave
or
mull
mov
pop
sub
call
jge
cmp
sub
jnp
xchg
das
mov
stos
mov
addr16
test
mov
scas
fstps
cmpsl
dec
aaa
cwtl
dec
sbb
inc
jns
pop
roll
mov
insb
or
pop
dec
jno
inc
sub
aas
and
fisubrs
push
sbb
ljmp
jmp
push
lcall
pop
xor
mov
test
sbb
inc
pop
fisubrs
cli
mov
loopne
rorb
mov
fistpl
xor
inc
js
cmpsl
mov
loopne
dec
dec
push
sbb
popa
in
cmpsb
mov
dec
cs
pop
or
scas
and
push
add
sahf
pop
gs
aad
xchg
divl
in
out
loopne
push
movsb
shl
add
jle
jnp
cmpsl
in
repnz
cmpsl
pushl
dec
mov
pop
or
aaa
ljmp
cld
mov
rol
lock
xor
test
fisubl
rolb
call
adc
inc
or
mov
mov
add
adc
inc
sub
mov
dec
nop
jo
sub
sub
and
hlt
mov
cmpsl
mov
roll
icebp
add
or
push
cmc
mov
adc
fwait
push
push
les
pop
out
mov
mov
insl
std
pop
adc
insb
loop
lahf
dec
mov
or
dec
dec
ljmp
out
jecxz
cmp
xlat
xchg
scas
in
sbb
pop
jne
sbb
cltd
adc
out
lcall
or
daa
outsb
mov
sub
in
stos
mov
jbe
or
pop
xor
or
loopne
out
pushl
mov
lret
aaa
add
das
and
scas
jg
xchg
sub
inc
fnstenv
push
incl
loope
add
mov
scas
into
fs
sahf
xchg
mov
cmp
or
xchg
mov
pop
gs
adc
imul
push
pop
jnp
outsb
shlb
clc
mov
das
in
lcall
xor
xlat
xchg
adc
sbb
or
sbb
jp
lahf
shlb
or
mov
xor
mov
aam
lods
bound
out
in
mov
mov
cltd
icebp
sbb
fiaddl
push
sbb
mov
insb
xor
push
mov
fistpll
pop
loope
jmp
dec
lock
ds
push
lds
jae
mov
arpl
xor
testb
mov
out
rcll
inc
es
mov
cmp
aad
jbe
sub
addr16
cmp
add
pop
or
sub
leave
test
cmp
pop
fcoml
push
pop
mov
loop
push
push
lock
mov
push
fwait
inc
inc
dec
mov
lds
pop
pop
mov
int3
adc
aam
inc
pop
into
pop
push
add
insl
push
enter
pop
out
sub
shr
mov
pop
sti
push
aaa
adc
int3
insb
inc
scas
repz
dec
inc
outsl
fnstcw
jno
sbb
pusha
push
fidivs
cmp
jae
jo
sbb
faddl
dec
push
sbb
fsts
or
ss
add
sub
cld
jle
mov
leave
repz
je
in
mov
inc
outsb
nop
sbbl
mov
popf
push
rcrl
mov
and
int3
jb
shrb
in
fwait
enter
std
jg
addr16
cmp
mov
xor
pop
cmp
mov
cltd
movl
lcall
cmp
out
or
pop
add
shlb
dec
dec
push
insl
mov
jae
sbb
movsl
xor
dec
sbbl
scas
mov
sbb
sbb
pop
ja
adc
sub
adc
into
cmp
ja
repz
inc
lahf
in
jle
pop
jg
hlt
arpl
mov
xchg
xchg
mov
or
outsl
xchg
lds
push
adc
xor
cmp
pop
dec
lsl
lret
xchg
dec
mov
clc
xchg
push
lret
adc
rol
ficompl
rorb
sbb
cld
lea
xor
push
emms
push
or
sahf
adc
cmpsl
pop
fldcw
ficompl
mov
ret
xchg
mov
jno
sub
pop
xchg
mov
mov
pop
shll
pusha
repnz
jle
inc
jg
rorl
shl
out
push
mov
aaa
in
adc
cli
dec
xchg
aam
inc
mov
outsl
in
xor
fldlg2
xor
into
adc
daa
xchg
bound
dec
lahf
xchg
xchg
adc
movsb
das
dec
int3
adc
jle
out
add
je
stos
les
out
shlb
and
xchg
lcall
cmpsb
mov
daa
iret
roll
mov
jl
add
out
cmp
stos
mov
push
add
fisubrs
leave
ss
pop
test
out
insl
enter
pop
in
outsb
inc
cmp
xchg
outsb
xchg
jb
out
dec
cmp
sbb
or
stos
sub
shlb
add
aam
fisubl
lods
sub
fwait
daa
sub
in
xor
lock
xor
scas
jne
pop
push
aas
xchg
fisttps
lods
pop
and
out
lods
sub
or
xchg
rol
mov
push
ret
dec
xor
cltd
test
sub
add
loopne
mov
cmc
roll
lret
mov
push
push
lret
popl
jmp
ficompl
scas
stc
sbb
push
addl
js
sbb
jo
add
xchg
insb
jmp
mov
scas
mov
mov
movsl
clc
and
cld
cmp
orl
add
mov
je
add
cmp
mov
mov
dec
fs
daa
dec
fdivrs
cmp
ss
sarl
adcl
xor
push
mov
das
mov
lret
cs
ja
aas
pop
int3
je
sub
loope
imul
xor
pop
loope
addr16
pop
xchg
lods
push
jle
xlat
lea
add
rorl
lret
pop
ficoml
testb
int3
or
mov
fwait
or
fstpt
cld
jp
data16
add
and
push
push
movsl
jmp
add
mov
sbb
das
pop
adc
sub
xor
movsb
or
add
in
ss
sub
out
mov
mov
pop
mov
push
in
lret
adc
jne
lret
adc
cmp
or
aam
fcoml
xor
xchg
sub
mov
jle
int3
jnp
inc
daa
sub
adc
mov
out
daa
icebp
ret
rclb
int
add
repz
inc
pop
mov
lock
aad
mov
and
loop
dec
dec
add
out
daa
xchg
sub
pop
sub
adc
jns
push
shll
scas
xlat
stc
mov
roll
inc
ficoms
decl
rcll
pop
into
sbb
push
repnz
movsb
int3
cmp
cmp
clc
mov
push
cwtl
aad
and
js
fcoms
inc
fidivrl
out
jb
insl
jle
xchg
and
arpl
xchg
int3
sbb
xor
ficomps
cmp
cltd
push
out
mov
jle
aam
fists
push
pop
sti
and
mov
int
mov
fdivs
push
mov
adc
fwait
pop
adc
out
clc
rcrb
dec
rcrl
xchg
sbb
sbb
aam
sub
mov
adc
pop
or
clc
push
push
imul
pop
sbbb
xorl
stos
cs
push
leave
push
xor
sarb
xor
inc
mov
sbb
add
out
dec
addr16
scas
fdivr
fisubrl
cld
fwait
lret
xchg
mov
roll
mov
or
aas
mov
ds
add
addb
xlat
jp
mov
or
imul
xor
fmull
xor
mov
xchg
jne
adcb
dec
mov
call
xchg
pop
out
cmp
out
int
xor
xor
scas
cmp
xor
dec
in
mov
sti
pusha
or
adcl
fs
jae
mov
in
mov
mov
ljmp
sbb
pusha
cmp
lcall
cmp
ljmp
or
xor
or
push
out
loope
std
push
jmp
adc
lcall
imul
lea
iret
je
mov
mov
jnp
sarl
js
add
imul
xor
mov
jo
jge
inc
and
inc
pop
push
adc
test
ja
cmp
mov
in
push
sbb
out
and
repnz
fsubs
xchg
and
xchg
fs
push
aas
xchg
jp
into
ljmp
mov
scas
pop
and
mull
sbb
jnp
jb
cmp
cmp
arpl
fwait
sbb
dec
sbb
sbb
inc
mov
inc
cmp
add
insb
cmovge
jne
or
inc
iret
repnz
pop
push
pop
inc
inc
mov
aaa
lds
insb
add
add
adc
insl
add
adc
insb
popa
inc
inc
xor
mov
fsubp
adc
push
scas
aad
cmpsb
fwait
ljmp
cmp
jl
adc
jo
mov
paddw
push
fs
enter
sbb
shll
outsl
pusha
fisubs
add
jne
enter
push
xor
or
test
xchg
xchg
test
rcll
outsl
inc
xor
addr16
ds
dec
mov
xchg
add
lcall
push
xchg
loope
sub
pop
xchg
inc
testb
push
mov
and
lds
repz
notb
push
push
popa
aad
sarb
mov
mov
add
fs
mov
and
ss
mov
ds
fcompl
jno
lock
andb
aad
mov
jg
mov
popa
pop
or
adc
ja
push
mov
cmp
pop
xchg
fsubl
pop
ret
push
dec
lock
test
add
lea
aad
dec
pop
mov
ja
xor
nop
push
and
hlt
jo
and
fmull
je
or
sub
mov
jne
adc
repnz
in
stos
push
push
lret
push
lret
xlat
mov
cs
aaa
or
inc
pop
dec
pop
daa
inc
dec
mov
fwait
mov
cli
cmc
push
dec
dec
push
mov
mov
fs
and
mov
loopne
lret
imull
in
add
cmp
sahf
cmpb
fisttpll
sub
loopne
icebp
repz
les
xchg
mulb
jne
add
aaa
cmp
lahf
mov
add
rorl
arpl
nop
ja
cmp
aam
jl
out
lret
mov
or
jecxz
adc
mov
fs
mov
mov
test
mov
cmpsb
mov
mov
fs
add
adc
mov
faddp
xchg
test
xlat
mov
push
enter
dec
push
call
fdivl
mov
hlt
lea
call
hlt
ja
mov
xor
sub
neg
imul
mov
add
stc
inc
dec
iret
sbbl
adc
adc
push
add
cmc
push
int3
cmp
ja
lsl
mov
xchg
mov
pop
dec
rcll
iret
scas
gs
mov
xchg
mov
pushf
repnz
cs
mov
and
int
dec
jmp
pop
gs
xchg
movsb
dec
das
aas
fs
and
xor
insb
dec
cmp
aad
das
sbb
xchg
adc
sti
dec
lcall
cli
pop
sub
mov
test
pushf
nop
test
shrl
out
imul
mov
outsb
jne
mov
ss
ljmp
dec
jl
imul
mov
mov
bound
dec
in
push
inc
fldl
jecxz
mov
imul
stos
mov
jmp
test
push
dec
cltd
test
fisttps
enter
or
sarb
sbb
pop
mov
jo
xchg
pop
sub
decb
jecxz
sub
and
or
push
or
adc
rcrb
pop
push
sarl
push
dec
repnz
jmp
ret
mov
or
addr16
lcall
enter
js
or
jno
cld
icebp
sbb
das
insl
out
insb
or
nop
and
sbb
in
loopne
xor
adc
scas
repz
sub
push
xchg
pop
dec
sbb
pusha
test
cmp
fbld
jbe
adc
dec
loop
clc
xlat
inc
movsl
mov
ljmp
jg
or
ss
outsl
add
jecxz
push
les
mov
xchg
sarb
sbb
add
je
sub
repz
addr16
jecxz
pop
shrl
dec
mov
je
in
std
fists
mov
sbb
neg
gs
in
ret
mov
insb
jle
lds
and
jp
pusha
inc
mov
mov
in
add
xor
sbb
jecxz
stc
ds
cmp
cmp
mov
cmpsb
xchg
sarl
jmp
jecxz
stc
or
bound
inc
cwtl
adc
push
dec
sbb
jno
xor
pop
imul
movsb
loop
jge
add
scas
int3
fisttpl
push
pop
jle
insb
jmp
adc
nop
aas
cmp
shrl
jno
aad
fnstcw
inc
adc
sti
push
cmp
push
out
cmp
mov
and
and
inc
fdivl
sbb
or
jp
cmpsb
mov
addr16
andb
cmpl
jle
jmp
and
test
mov
mov
jl
movsb
int
das
xchg
fiadds
outsl
shrb
mov
adc
insl
jb
lahf
outsl
out
js
cmpsb
cld
shrl
lret
pop
adc
jmp
mov
mov
xchg
insb
jle
ret
sub
dec
cmp
adc
mov
stos
jo
mov
mov
mov
rol
sub
sahf
mov
test
out
scas
mov
pop
fistl
dec
es
cld
and
pop
ret
push
push
popf
and
jbe
lea
loopne
test
rcr
testb
popa
lds
stos
or
test
popf
mov
xchg
shlb
inc
xor
pop
dec
sub
xlat
stos
in
fwait
enter
push
push
push
test
inc
movsb
mov
mov
fisubrs
xor
add
pop
sub
push
mov
or
xor
inc
sbb
push
push
mov
jbe
mov
push
sbb
jle
call
ja
test
or
push
pop
jo
stos
inc
pop
mov
fisttpll
sbb
lds
and
xchg
jb
xchg
cmp
cmpsb
push
cmpsl
std
adc
inc
imul
fildl
or
cwtl
inc
outsb
in
push
push
lds
jbe
jecxz
rcl
push
test
cmp
in
icebp
mov
sub
dec
cli
push
push
iret
pop
push
jne
sbb
inc
add
mov
test
into
rorb
mov
jne
fisttpl
ret
cltd
aad
push
and
cmp
dec
mov
aam
inc
sbb
cmpsl
jnp
pop
test
xchg
push
mov
int3
push
negl
jnp
push
xchg
int
pop
vpand
dec
ret
pop
inc
iret
cmc
shll
fld
cmp
xlat
stc
pop
inc
leave
xlat
dec
add
lcall
push
cmp
outsl
cmc
aad
sub
xor
int3
out
xchg
lret
mov
cmp
xor
shll
jge
aas
or
pop
pop
mov
mov
popa
and
fdivs
int
rclb
push
test
push
mov
lret
push
or
jnp
aas
mov
pop
adc
mov
cltd
add
fwait
in
cmpl
sbb
ja
xorps
cmp
mov
jge
fcmovnu
jge
sub
mov
xchg
push
lcall
int
inc
lock
loop
mov
and
inc
pop
jb
push
and
xor
scas
mov
lods
jae
out
scas
pop
mov
jae
push
add
aam
mov
andl
dec
or
xlat
push
jge
xchg
fidivs
test
jnp
js
dec
insl
push
pop
lds
sbb
daa
out
mov
add
mov
mov
mov
and
pop
mov
inc
mov
ja
lcall
push
push
out
mov
test
push
cmp
cwtl
or
cmp
lret
mul
outsl
jb
push
fsts
popf
xchg
aam
js
jle
xchg
out
push
xchg
pop
add
nop
rclb
push
adc
andb
xchg
xorb
call
call
gs
adc
push
mov
in
loope
loopne
repnz
cmpsb
mov
mov
xchg
mov
mov
outsb
repnz
jno
das
test
mov
adc
into
in
popl
jl
inc
add
into
out
or
xor
mov
stos
xchg
sub
mov
mov
inc
sbb
fldenv
in
loopne
mov
and
sarb
nop
test
in
add
adc
pop
add
ja
pop
mov
mov
inc
cmp
and
sbb
push
fldl
rcr
mov
ss
out
mov
scas
xchg
dec
jl
fisttps
scas
hlt
push
push
lds
ret
bound
repnz
sub
ss
in
push
ret
cmpsb
bound
fwait
loope
cld
mov
xlat
aas
adc
adc
xchg
jno
cmp
sti
xchg
add
mov
les
roll
push
fisttpl
pop
test
inc
push
in
test
dec
ret
cmc
xor
cmpsl
adc
cmp
jns
dec
inc
mov
aam
xchg
mov
cli
pop
add
lods
push
outsb
and
jnp
sbb
pop
cmp
push
daa
std
mov
jb
adc
scas
xchg
ja
mov
clc
pop
mov
iret
inc
mov
push
sarb
mov
out
pop
mov
jbe
enter
into
fcmovnb
jp
lods
jge
sti
stos
das
sbb
jo
addr16
loop
pop
or
xchg
pop
mov
rorl
je
insb
add
lods
mov
subl
call
and
inc
mov
and
xchg
loope
dec
hlt
cmp
inc
jge
call
mov
push
cltd
fdivrp
dec
mov
das
sahf
scas
push
divb
leave
stc
push
mov
mov
ja
pop
xchg
jl
mov
jb
cmpsl
sbb
cmp
imul
mov
dec
repnz
jp
or
xlat
call
dec
and
lea
pop
in
mov
or
inc
mov
ja
pushf
sti
xchg
sysret
adc
xor
arpl
cmp
ss
jecxz
jl
inc
andl
xchg
mov
xor
ret
add
jne
stos
loope
nop
js
pop
jl
popa
aas
addr16
fsts
add
into
mov
cmp
les
pop
pop
pop
in
fldl
daa
ljmp
mov
shrl
push
mov
jp
push
and
ds
add
aam
jns
adc
add
and
mov
das
inc
and
sbb
sbb
xor
push
xchg
xchg
push
jp
popf
movsb
pop
push
push
pop
cli
add
push
cltd
lret
dec
xchg
inc
cmp
dec
pop
ds
call
popf
cmp
int
xor
sbb
jae
push
adc
push
sub
mov
adc
inc
cltd
lods
adc
push
ret
xchg
lods
jb
lahf
mov
loope
add
mov
pushf
das
xchg
in
pop
ret
ljmp
mov
inc
sbb
out
and
xor
call
mov
and
mov
outsb
test
ret
sbb
adc
dec
int3
scas
xchg
mov
xchg
push
dec
cmp
rorb
adc
idiv
leave
cmp
stos
xor
out
mov
rcl
mov
shlb
in
mov
inc
iret
push
out
xor
sub
jne
inc
mov
cmp
test
gs
ljmp
push
jmp
xchg
incl
pop
inc
imul
out
hlt
lahf
lods
aad
sbb
fiaddl
pop
jl
icebp
insb
jp
rorl
lock
js
stc
ror
cs
cmpsl
rcll
mov
js
cmpsl
xor
adc
cmp
mov
mov
test
push
pop
sarb
jg
shlb
inc
cmp
lods
xchg
and
xor
inc
push
xorl
jg
outsl
daa
loop
nop
insl
lret
add
addr16
push
xorb
jmp
or
into
push
cmp
push
push
mov
test
fwait
dec
xchg
mov
jo
fisubrs
mov
lock
icebp
jge
pop
cmp
sbb
jp
out
mov
ja
mov
jns
adc
stos
test
dec
faddl
in
ja
xor
or
data16
fcompl
pop
roll
mov
or
jl
ret
cli
cmp
mov
jl
sub
jo
xor
mov
mov
mov
mov
sub
push
push
js
xchg
pushf
dec
repz
adc
adc
cmp
and
les
mov
fsubrs
arpl
cmp
xchg
dec
or
rolb
outsb
sub
sub
outsl
movsl
mov
pop
mov
mov
push
xor
lock
jp
xchg
push
mov
test
mov
insb
pop
sub
inc
jecxz
mov
and
mov
or
dec
shr
xchg
lock
xlat
pop
dec
enter
jmp
imul
lcall
or
iret
mov
xor
mov
out
mov
jg
lret
mov
scas
jl
or
cwtl
xor
push
pop
cli
addl
jns
add
push
xor
cmpsl
pop
adc
stc
mov
ds
lock
and
into
les
call
jmp
loope
inc
call
loopne
mov
inc
xchg
mov
or
aad
inc
inc
xor
add
and
inc
repz
std
mov
popf
fcmove
jp
jl
cmp
cmp
cmp
in
add
notb
push
ss
sahf
or
addr16
sbb
xchg
mov
daa
test
mov
loope
xlat
repz
aaa
xor
push
xchg
and
sub
mov
int
adc
into
mov
pop
mov
mov
or
cmpsb
outsb
mov
sub
rcrb
dec
loop
sarl
call
aaa
outsl
stos
xchg
mov
jno
jb
gs
sub
std
jge
cmp
xchg
mov
push
add
test
ret
push
sbb
sbb
push
dec
fidivs
jg
fisttps
add
mov
pusha
adc
jecxz
xor
jmp
ss
cld
mov
sbb
jmp
loopne
call
out
push
jg
fs
leave
xchg
xor
aam
cmp
and
out
outsb
and
push
push
icebp
mov
jb
xchg
pop
sbb
test
sub
rcl
int3
out
pusha
xchg
fdivl
out
js
dec
in
adc
push
inc
test
out
mov
inc
out
dec
daa
rorb
sahf
mov
xor
call
and
in
hlt
mov
xor
and
jg
roll
iret
mov
or
cmc
xor
mov
iret
or
jmp
pusha
dec
xchg
das
aad
or
dec
loope
mov
mov
aaa
jge
repnz
hlt
push
jl
out
sub
push
pop
in
out
mov
jae
dec
inc
cmpsb
mov
pop
add
std
enter
lahf
jae
in
lahf
xor
lret
lock
sub
xchg
insl
test
cltd
xor
jo
shrb
xchg
adc
mov
lods
dec
xchg
mov
or
es
mov
test
jb
push
fs
sub
scas
loope
lret
jb
cmp
pop
out
leave
mov
aaa
je
fsubrs
xchg
lods
xchg
insb
jl
cmp
in
mov
outsb
outsb
dec
or
mov
jl
fmull
push
push
jg
and
mov
push
cmp
outsl
lret
in
jp
add
out
add
sub
mov
push
aad
xchg
scas
pop
inc
xchg
inc
pop
mov
in
addr16
dec
scas
xor
pop
pop
bound
and
lods
cltd
repz
cmp
shlb
xchg
add
mov
nop
mov
and
dec
sub
imul
lods
mov
mov
dec
dec
push
les
arpl
je
mov
cltd
popa
inc
ljmp
pop
enter
lds
out
testb
fcompl
sub
xor
sub
xor
push
lods
pop
lds
xchg
insl
js
popf
mov
pop
add
scas
daa
fisubs
rcl
mov
imul
xorl
in
push
cmp
addl
cli
decl
lds
jge
dec
pusha
xchg
lock
lods
push
jle
jge
dec
es
xchg
daa
mov
xchg
mov
inc
mov
sbb
xor
and
popf
pop
imul
and
shlb
pop
mov
mov
aam
arpl
mov
dec
mov
and
popa
iret
mov
leave
mov
push
shr
insb
or
push
arpl
jbe
cmc
ljmp
test
lock
scas
mov
cli
mov
add
mov
adc
in
jecxz
push
cmp
jb
inc
out
adc
sbb
cmpsb
cld
movsl
fbld
je
pop
push
inc
in
inc
mov
push
sbb
sbb
pop
pop
jl
cmp
sbb
mov
mov
push
mov
xlat
xchg
stos
mov
in
or
push
jb
pop
mov
and
fistps
sub
loope
sti
loope
xor
xchg
leave
pop
loopne
lret
fucom
or
loop
andb
xchg
and
xor
enter
int
stos
mov
orl
bound
fdivrl
mov
push
rcrb
push
addr16
push
sarl
jae
jmp
sub
pop
shl
dec
fidivrl
mov
fstpt
xchg
js
mov
or
cmpl
dec
int3
out
jg
dec
xchg
rcrb
sub
lods
mov
out
outsb
into
jns
iret
mov
gs
dec
push
xchg
cs
ja
loop
xchg
or
and
sub
push
in
sbb
jle
dec
push
inc
fwait
jb
mov
lret
mov
or
loop
jp
push
mov
fs
mov
mov
call
sub
xchg
aam
push
cld
or
sub
add
outsb
pushf
sbb
inc
jp
cs
loope
repnz
push
push
cmpl
adc
rcll
lret
mov
cmpsl
lahf
js
or
sub
adc
enter
mov
and
icebp
lret
push
jb
ss
sbb
pause
sub
dec
daa
and
dec
adc
push
cmp
imul
cmp
out
xchg
adc
imul
and
fstl
add
push
fiadds
mov
in
pop
cmp
push
xchg
sbb
cmp
aam
mov
jb
andb
inc
push
inc
ja
je
fildl
sbb
inc
push
jns
insb
fsubl
out
popa
jbe
lahf
loop
xor
call
jne
or
adc
imul
ret
sub
adc
jno
aad
jmp
and
push
mov
mov
insl
xchg
push
aaa
add
test
or
jecxz
icebp
mov
mov
arpl
cmc
inc
imul
add
outsl
sub
jae
int3
mov
fnstenv
loop
push
pop
jb
jno
test
ja
das
pop
adc
out
aas
sbb
push
xor
push
fldt
sbb
xchg
insl
lods
leave
out
cmp
jno
enter
adc
imul
repz
cmp
nop
or
push
and
inc
sub
xchg
xor
test
inc
xorl
fiaddl
mov
stos
dec
fs
in
mov
add
je
clc
adc
ds
arpl
mov
imul
and
xchg
call
or
lds
push
inc
jnp
jge
push
mov
out
mov
xchg
mov
outsl
mov
mov
in
jno
xor
cmc
pop
nop
jns
mov
push
iret
cs
dec
add
cmp
add
cmp
jns
mov
dec
adc
jg
pop
cmp
or
ljmp
mov
movsl
adc
aaa
pop
movsb
and
sub
add
jae
xchg
decl
pop
sub
lcall
cmpsb
or
pop
frstor
mov
lcall
xchg
ds
adc
enter
adc
add
push
mov
jp
mov
in
mov
addr16
pop
xchg
or
rorb
jne
lds
and
and
sub
cmp
frstor
mov
and
mov
jp
dec
push
cmpb
jecxz
xchg
pop
push
icebp
cmpl
cwtl
push
mov
xchg
mov
movsl
mov
cltd
jmp
jnp
test
dec
fstpt
and
lds
mov
pop
cmp
cwtl
sub
fs
xor
pop
adc
icebp
xchg
push
adc
pop
pop
xor
or
fadds
movsl
std
cli
xchg
or
add
mov
sub
popa
popf
mov
dec
mov
test
test
adc
inc
xor
and
inc
inc
jl
loopne
pop
cmp
or
repz
popa
cs
xchg
fsub
rcr
pop
mov
stc
add
mov
addr16
clc
sub
inc
mov
std
cmp
adc
inc
mov
push
adc
fadd
sub
add
fucom
and
mov
cld
bnd
xchg
icebp
in
and
push
lock
xchg
test
out
sub
enter
cli
gs
mov
mov
xor
aad
test
sbb
add
cs
lahf
test
add
push
xor
sbb
mov
ret
popf
or
pop
sub
add
and
inc
or
push
rclb
pcmpeqb
fmuls
scas
rorl
and
lock
stos
stc
ja
icebp
xchg
mov
fidivs
pop
dec
fidivrl
or
mov
pop
jbe
xchg
notb
sub
or
inc
daa
jne
cltd
xchg
test
jp
shrb
dec
sub
std
push
sub
adc
rclb
fcmovnu
cmc
inc
sub
cmp
add
int3
mov
adc
sub
mov
add
mov
js
sub
pop
fidivrs
push
xor
or
popf
adc
fwait
lods
repz
cmp
push
mov
addr16
inc
test
and
inc
test
mov
enter
jl
mov
fldt
adc
push
push
xor
mov
pop
test
xchg
les
pop
out
or
lret
hlt
stos
jge
repz
add
js
fcmovnu
test
or
stos
scas
in
out
dec
roll
pop
icebp
jg
add
pop
sahf
inc
test
in
mov
int3
fcomip
test
and
repnz
cli
push
int3
outsl
mov
test
or
ds
jnp
mov
jb
mov
mov
test
push
popf
mov
push
lods
in
add
mov
jno
fwait
out
int
stc
mov
push
lahf
jae
inc
pop
sahf
ljmp
cmc
xor
pop
cmp
and
call
add
xchg
cli
fbld
jae
roll
dec
repz
jno
stos
sarl
xor
adc
push
push
andb
mov
movsb
hlt
dec
stc
mov
or
sbb
jno
fsts
lods
ljmp
cmpb
loope
loope
inc
out
rorl
fstps
dec
sarl
xor
out
jae
mov
mov
mov
movb
inc
cltd
pop
fucomp
cmpsl
js
loope
pop
jg
arpl
out
adc
test
popf
inc
cmp
out
rorb
dec
iret
cmp
ds
jb
adc
sbb
enter
sbb
xor
sbb
in
jno
mov
cli
pop
pop
mov
pop
repz
sbb
out
xchg
sarb
xor
jl
rol
adc
cmp
sbb
inc
mov
repz
ret
jae
dec
mov
adc
jecxz
jge
mov
and
jmp
enter
cmp
dec
es
xchg
repz
loop
mov
repz
mov
jns
loope
jg
jmp
jl
cmp
dec
call
or
sahf
xchg
outsl
arpl
arpl
fwait
aad
add
pop
lods
sbb
inc
popa
movq
lret
mov
push
inc
mov
xor
push
push
add
jl
fsub
xor
or
in
popa
arpl
icebp
aam
mov
or
lods
ljmp
aas
xlat
imul
pop
add
fldenv
inc
or
dec
or
jmp
push
sub
sbb
stc
popf
outsb
pop
nop
enter
cmpsl
sbb
ds
add
fwait
mov
stc
jg
and
sub
or
mov
and
push
push
outsb
sbb
movl
bnd
push
mov
pop
insl
repnz
push
and
add
dec
adc
mov
sub
repnz
sub
in
jno
jbe
jae
lods
sub
pop
test
hlt
inc
ficoms
ljmp
xchg
lret
das
push
imul
clc
or
sub
add
cs
stc
xchg
push
in
stc
test
or
push
out
dec
lea
and
mov
inc
xchg
mov
mov
pop
scas
sub
stos
xchg
xacquire
pop
mov
pop
scas
sbb
pop
test
mov
mov
aaa
lea
inc
jmp
and
cwtl
push
nop
mov
int3
decl
push
popa
add
or
mov
in
fidivrl
add
fidivl
push
fldt
lods
mov
fbstp
bnd
jno
out
mov
push
dec
ret
pop
stos
das
cltd
mov
sbb
pop
cmc
pop
or
lret
loop
xchg
lret
pushf
mov
or
push
dec
push
test
pop
nop
pop
jmp
fdivr
xorb
inc
adc
and
inc
cmpsl
mov
out
xorl
pop
cmp
mov
jl
jp
mov
pop
add
push
in
xchg
mov
in
repnz
out
adc
sbb
adc
stos
test
cld
scas
sub
mov
jge
adc
adc
cmpl
xchg
xor
popa
cmpsb
pushf
add
fadds
mov
pushl
jmp
pop
mov
mov
clc
out
push
shl
imul
cs
lds
jnp
push
sti
in
mov
jnp
pop
push
jmp
dec
xor
adc
and
cli
add
ret
fiadds
and
popf
inc
add
pminsw
dec
fsubl
push
gs
push
inc
lea
ret
test
inc
data16
out
mov
scas
mov
jbe
mov
and
mov
add
outsl
das
sub
scas
add
out
shr
push
add
daa
push
push
mov
cld
in
sbb
jge
cmp
repnz
sub
sbb
shll
cmp
push
sahf
jbe
mov
push
or
sbb
and
mov
movsl
and
push
pop
shlb
sbb
test
pushf
inc
sti
jo
pop
movl
loop
cli
cwtl
jo
fcoms
stos
jbe
cwtl
adc
cwtl
inc
mulb
in
jmp
fnstsw
test
mov
mov
popf
fistpl
add
cmp
mov
mov
xor
int
jo
sbb
mov
movntps
mov
movsb
subb
shr
ret
sti
dec
out
jae
mov
fistps
mov
mov
flds
cmp
cli
movl
rorl
pop
sbb
dec
cmpsl
inc
pushf
mov
mov
out
insb
movsb
pusha
les
ljmp
in
adc
mov
add
scas
repz
sbb
add
fdivl
or
inc
cmp
cmp
pusha
sub
xor
fadds
cwtl
sub
les
pushf
push
pop
in
dec
xlat
test
push
jns
bound
push
mov
out
xchg
hlt
xchg
sbb
or
lahf
jp
pop
inc
out
and
sbb
ret
movsb
sub
mov
call
clc
mov
jge
fwait
pop
cmp
jle
add
adc
inc
jmp
add
mov
adc
xlat
lret
xchg
mov
cmp
pop
daa
mov
mov
loop
or
inc
fsts
inc
subb
adc
sbb
sub
jp
rorb
fnstsw
cs
pop
push
sbb
scas
cltd
pop
loope
jo,pt
mov
mov
or
and
jnp
rolb
dec
cmpsb
in
pop
sbb
sbb
cmp
push
mov
mov
test
fs
push
jbe
hlt
mov
jno
jl
mov
xchg
sub
dec
ljmp
inc
add
and
dec
in
jno
lds
sbb
dec
dec
insb
add
leave
idivb
aad
nop
pop
addr16
in
mov
add
xchg
lahf
jge
sbb
sti
lods
push
es
fidivs
adc
xchg
or
js
jmp
jmp
jl
jo
iret
mov
jmp
sub
add
add
bound
push
and
mov
movsl
scas
repnz
mov
decb
sbb
push
sbb
rcll
push
pop
xor
xchg
pop
push
cli
fdivrl
add
mov
sub
or
xor
fstpl
jb
pop
xchg
push
jle
stos
jno
push
frstor
scas
add
mov
out
lods
out
mov
mov
pop
imul
cmc
in
addl
mov
xor
ljmp
insl
cld
hlt
pusha
adc
in
push
sahf
or
mov
iret
cld
fnsave
adc
mov
dec
fld
xchg
mov
stc
jae
jnp
pusha
arpl
cmp
sub
pop
jo
xor
aad
inc
mov
push
add
mov
and
mov
testb
cmpsb
popf
mov
adc
insl
in
inc
jno
setno
xchg
jne
mov
loope
xchg
cltd
push
aam
test
inc
rol
into
jmp
or
jb
cld
stos
mov
lds
cmpb
dec
sarb
jb
jb
dec
xor
rorb
ds
pop
flds
out
jmp
loope
ret
jge
aad
and
idivl
insl
lds
sbb
adc
adc
cs
in
and
mov
cmc
sbb
jb
mov
sub
lds
negb
pop
mov
adc
mov
cltd
xchg
and
nop
sbb
mov
ljmp
arpl
add
cmp
lock
mov
pushf
sbb
in
mov
call
dec
xor
push
or
insb
cmp
sbb
test
xchg
mov
ss
call
fcmove
not
mov
popf
rcrl
cli
and
fs
mov
add
jecxz
out
xchg
cmpl
je
clc
jns
sbb
leave
imul
or
sbb
dec
in
xor
cmpsb
xchg
out
decl
mov
sbb
inc
mov
out
pop
jae
xchg
sub
fdivs
cmpsl
adc
std
out
pop
cmpsl
cli
xchg
jl
ret
and
mov
or
xchg
clc
pop
mov
pusha
cmp
sbb
or
sbb
out
xor
xchg
fiaddl
fstps
iret
xchg
xchg
cmp
sub
push
data16
rorl
repz
call
movb
fcomps
lock
cmp
scas
mov
icebp
rcrl
adc
fsubr
jg
in
xchg
data16
jnp
inc
push
movsb
mov
push
lret
lret
movsl
mov
xor
sahf
push
pop
das
sub
lock
cmp
sbb
aaa
and
push
int3
xor
pop
pop
dec
sbb
adc
bound
call
dec
jae
add
adc
mov
shl
jl
or
cmpsl
stc
sbb
add
push
dec
aas
mov
in
aas
movsl
gs
scas
aaa
roll
sbb
adc
or
clc
cmp
add
stc
xlat
jb
dec
icebp
cmp
lea
rcll
addr16
fnstcw
aas
xchg
sub
adc
test
insb
sbb
and
sbb
pop
or
push
mov
cs
fsub
sub
jl
dec
pop
movsl
mov
inc
xlat
jmp
sub
inc
and
xor
loopne
aad
mulps
out
scas
outsb
mov
aam
int
push
shll
js
cmp
cli
adc
push
sbb
add
je
inc
aad
add
lock
cmp
push
jp
lret
scas
dec
push
or
paddw
rcr
pop
clc
rclb
cmp
or
sub
sbb
xchg
jl
mov
and
xsha256
cmpsb
adc
rolb
cmp
add
push
mov
pushf
xor
mov
loopne
mov
jb
fdivr
cmc
mov
out
rcl
push
mov
lds
cmp
sub
jl
mov
jns
mov
mov
andb
xchg
xorl
xor
sub
cli
inc
ss
xchg
jp
adc
mov
adc
ja
pop
roll
cmp
inc
jne
ss
push
ficompl
sub
mov
adc
ss
mov
mov
jo
stos
jb
lahf
pusha
and
daa
aas
mov
mov
jno
push
jno
aas
push
lods
cmp
aad
adc
xlat
stos
lods
fiadds
ret
sub
roll
pop
xor
les
pop
sbb
in
sub
mov
icebp
mov
fnsave
jbe
gs
xor
loopne
and
mov
xor
into
ret
ds
frstor
inc
sbb
add
xchg
sub
cmp
clc
cmp
jnp
xchg
mov
mov
and
xor
or
les
stos
stos
add
mov
mov
jns
mov
sub
aaa
ds
in
loope
add
fstpl
movsl
push
pop
push
ss
dec
xchg
inc
movsb
hlt
jecxz
cmp
test
mov
push
jmp
mov
fcomp
sbb
sti
movsl
cltd
fidivrl
insb
jmp
or
add
andb
push
xor
fstl
es
add
imul
mov
cltd
mov
push
dec
jg
repz
sub
ds
dec
sbb
enter
arpl
adc
pop
test
cmp
movd
es
pop
jmp
sub
mov
into
push
cli
inc
