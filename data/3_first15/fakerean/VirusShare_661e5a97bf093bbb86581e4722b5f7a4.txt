sub
sub
and
or
or
mov
add
sbb
mov
and
andb
inc
inc
and
inc
dec
and
mov
adc
dec
fmuls
mov
adc
and
mov
mov
mov
iret
jnp
scas
jns
mov
pop
lret
in
jmp
stos
mov
into
repnz
jnp
jmp
insb
mov
scas
stc
jl
repz
out
aas
jl
iret
fistpll
add
pop
clc
paddw
add
pop
mov
or
orb
add
inc
adc
sbb
pop
add
std
pusha
cli
or
rcl
ljmp
jg
imull
dec
std
push
xchg
add
loopne
jle
mov
inc
std
mov
sub
xchg
pop
fsubs
std
sbb
decl
mov
nop
jg
out
sub
pop
dec
xchg
push
jg
inc
mov
out
sbb
ljmp
mov
add
rclb
sbb
ret
test
push
aaa
stc
jle,pn
mov
mov
andl
xchg
push
xchg
pop
rclb
mov
xor
out
idiv
cmpsb
jmp
add
sti
pop
add
add
pop
sti
or
mov
nop
mov
lahf
cld
cmp
xor
push
outsl
xor
xchg
push
aaa
xchg
ss
addr16
xor
or
ja
sub
sbb
jo
jns
cmpsl
push
negb
push
lcall
adc
dec
push
in
fists
cmp
fwait
xchg
inc
lock
and
dec
dec
dec
mull
mov
fiaddl
loope
cmp
or
loop
mov
sub
dec
pop
adc
call
scas
out
cmp
add
mov
iret
sarl
xchg
add
pushf
sbb
jae
mov
xor
and
rolb
into
mov
fcompl
stos
aam
lcall
aaa
or
adc
mov
or
xchg
enter
jnp
imul
add
shll
cmp
jp
mov
xor
mov
addl
shll
iret
aas
add
sub
dec
sub
sub
xchg
cmpsb
push
nop
or
in
jb
and
mov
add
cmpsl
lahf
mov
mov
jb
movsb
loope
jno
mov
cld
fs
mov
cmp
int3
mov
xchg
push
xchg
pop
push
aad
sbb
add
xlat
sbb
push
scas
les
jp
lods
clc
dec
je
mov
fdivrs
inc
jo
imul
scas
mov
push
xchg
ficomps
iret
cmpsb
mov
out
ss
dec
or
daa
sub
cli
loop
pusha
sti
jg
dec
es
adcb
mov
dec
out
and
rclb
scas
sbb
ret
jns
aam
pop
aas
test
cli
dec
ds
out
test
dec
lods
addr16
icebp
jmp
repnz
pop
jg
xor
pop
test
adc
pop
mov
sub
pushf
or
mov
loope
pop
sub
jle
test
roll
push
sahf
popa
sub
add
jl
or
cmp
push
jg
mov
cmpsb
sub
enter
jle
cmp
inc
pop
lret
xchg
jg
xlat
test
in
sbb
add
clc
dec
hlt
adc
repnz
es
popf
mov
sbb
cmp
pusha
xor
pop
in
andb
mov
jle
lcall
mov
and
imulb
cmpsb
and
sub
fildl
add
mov
push
andb
aam
divl
mov
adc
cmpsb
aas
add
cmpsl
push
adc
inc
inc
push
je
xchg
cmpsb
movsl
inc
dec
fwait
push
mov
pusha
call
add
sbb
out
aam
cmpsl
adc
add
nop
adc
cwtl
in
fldl
push
jnp
cmc
mov
shrl
jb
outsl
cli
sub
xor
push
and
fwait
mov
je
fwait
mov
xchg
and
imulb
fwait
test
mov
jg
mov
roll
xlat
sbb
mov
insl
pop
xor
dec
fldenv
jno
cmp
jb
xchg
jecxz
mov
mov
jnp
dec
pop
fst
sahf
ds
sub
testb
dec
mov
iret
jno
pop
cs
mov
hlt
aad
mov
in
pop
mov
mov
jp
hlt
or
lods
cs
pop
scas
xor
and
jne
imulb
xchg
pop
out
lds
ljmp
cld
xchg
dec
pop
fwait
or
sbb
dec
fcompl
std
stos
sbb
push
in
cmp
notl
mov
iret
dec
dec
aam
jns
out
jge
in
jo
std
test
aas
push
in
arpl
movsl
mov
cld
lods
lods
adc
arpl
jns
lock
cmpsl
add
cltd
jae
pop
xchg
fucomi
jbe
cld
xlat
mov
lea
out
div
pusha
inc
iret
mov
jg
popf
testb
out
mov
out
repnz
inc
and
mov
xchg
cltd
xor
cwtl
addl
push
and
jnp
jmp
je
das
jge
cmpsl
add
jnp
mov
fnstsw
push
test
push
sub
dec
rorb
hlt
jo
mov
lea
add
inc
fisubrs
jb
inc
jmp
push
insb
stc
fs
stc
xchg
sbb
push
lds
sbb
xor
repnz
popa
dec
rcrl
mov
repz
jb
loop
insl
outsl
sbb
adc
mov
fidivs
mov
mov
fisubrl
leave
mov
imulb
mov
mov
scas
sbb
xchg
cli
clc
cmp
pop
rcll
cmp
sub
mov
push
sahf
and
cmpb
or
loop
cmpsl
mov
and
sub
dec
sub
fmuls
mov
adc
in
mov
cmc
jne
pushf
mov
iret
add
xchg
push
or
fldl
pop
imul
push
push
rclb
fs
std
pop
shl
lret
cmp
gs
sbb
xor
jae
aad
mov
xchg
int
aas
mov
mov
cs
or
mov
add
push
cmp
cmpsl
jae
ret
test
gs
adc
sarb
aam
push
mov
xor
sbb
gs
pusha
les
jecxz
jo
push
ss
test
data16
popf
cmpsl
test
es
mov
and
cmp
lods
dec
das
push
push
js
push
fistps
hlt
rorl
iret
es
fldenv
js
jne
in
push
jne
xor
dec
rcrb
xor
sbb
mov
scas
mov
movsl
mov
add
call
test
icebp
mov
ret
add
xor
stc
push
fwait
cwtl
movsb
in
push
test
push
test
cmp
addl
pop
shll
out
push
xlat
xchg
arpl
cmp
mov
and
scas
mov
push
je
mov
mov
dec
test
in
xlat
xchg
lret
push
call
push
push
ror
cltd
sbb
int3
in
ja
and
movsl
push
mov
daa
push
pop
pop
xchg
cmp
insl
out
pop
xor
lds
xlat
push
sub
lahf
mov
aam
jecxz
mov
jge
mov
icebp
insl
cs
loope
daa
aad
rcrl
mov
jne
push
sbb
push
adc
pushf
lea
stos
add
movl
icebp
mov
add
jo
adc
sar
sbb
ss
mov
adc
inc
movsb
cmp
jge
and
in
push
int
ljmp
rcrl
jae
cwtl
idivl
sub
les
or
imul
xlat
popf
mov
mov
mov
adc
fwait
adc
mov
out
test
outsl
or
das
xlat
ret
loope
jae
in
fidivrs
pop
xchg
pop
popa
dec
xchg
mov
jg
shl
or
inc
aad
adc
sub
mov
cld
in
jmp
mov
loop
jge
loopne
out
pop
push
cli
ja
sbb
mov
stos
mov
arpl
mov
ja
push
jmp
out
mov
outsl
cmpsl
adc
pop
pushf
lods
out
hlt
daa
mov
pop
sbb
xchg
sbb
call
pop
cli
xchg
pop
xor
adc
fcoms
jbe
mov
or
das
ret
adc
shr
das
xor
je
and
out
cmpsl
cmp
scas
jecxz
mov
sub
jge
mov
scas
inc
jns
pop
mov
inc
orl
and
and
pop
adc
into
sti
mov
cltd
mov
aaa
test
sub
call
mov
xchg
lret
inc
test
test
and
dec
fldcw
mov
cmp
outsb
push
xchg
cmp
rcrb
test
test
push
add
dec
int
ss
or
test
mov
out
dec
icebp
sbb
loopne
lcall
and
lods
rorb
clc
sub
test
jbe
mov
add
jmp
int
popf
xchg
dec
fwait
mov
mov
loope
dec
or
add
xchg
dec
cmp
test
sub
jmp
arpl
je
inc
pop
xlat
cmp
push
adc
pop
pop
sbb
cmpsl
cmpsb
mov
or
adc
pop
in
xor
test
add
lret
xchg
cmpsb
loope
mov
repz
mov
loopne
rorl
fcompl
test
loopne
repz
fsubp
movsl
add
cmp
mov
inc
dec
xchg
sub
test
jmp
jbe
aaa
mov
pop
cwtl
lea
mov
insb
jmp
dec
push
push
xor
sbb
in
dec
mov
add
xor
test
lds
lcall
or
pop
pop
adc
jae
movsb
mov
mov
jp
sub
mov
repnz
jge
lea
dec
in
xchg
add
out
mov
lods
pop
push
in
xor
insb
or
cmp
std
insb
add
jmp
enter
testb
outsb
iret
cmpl
hlt
push
and
jae
pop
je
lret
or
cmpb
inc
pop
cwtl
xchg
cltd
adc
push
cmp
ret
repz
cmp
adc
lahf
or
xchg
push
fsubs
jno
jmp
cmc
push
into
push
push
in
cltd
jl
cmp
pop
rcll
fimull
gs
xor
pop
sub
adc
in
pusha
pop
mov
shlb
cli
xor
add
insl
fidivl
enter
push
adc
sub
add
xor
das
cltd
divl
add
dec
mov
cwtl
jnp
loope
cli
jecxz
pushf
fcmove
push
dec
cwtd
lret
xor
pop
push
add
shrl
and
push
jle
adc
xchg
cmp
iret
dec
test
mov
pop
mov
adc
xchg
lods
ljmp
lods
pop
jbe
fwait
pop
and
xlat
mov
cmp
ss
aaa
sti
sbb
mov
mov
cmp
in
jge
adc
add
pop
lret
mov
and
bound
in
int
xor
das
sti
dec
cmpb
mov
or
pop
mov
pop
cs
pop
dec
out
in
lods
fwait
ja
jmp
popf
fidivs
popf
int
jb
adc
or
add
mov
test
mov
inc
xor
pop
adc
sbb
andl
notl
add
insb
jge
stc
or
inc
das
mov
pop
fidivs
pop
sbb
inc
pop
subb
xchg
adc
test
jp
push
dec
es
adc
lds
xor
push
imul
pop
ret
shlb
or
xchg
sbb
push
imul
repnz
mov
xlat
dec
ret
jle
out
adc
xchg
pop
push
mov
push
std
cli
adc
xchg
clc
pop
push
js
fstpt
and
push
in
or
and
mov
fprem
add
fists
aaa
cmovns
pushf
movsl
ja
pop
enter
xchg
xor
leave
int3
rorl
mov
adc
mov
push
popl
fstps
mov
clc
add
aam
imul
sub
fistps
dec
shlb
stos
pop
loope
movsl
pop
popa
xor
xor
mov
sbb
xchg
int
rclb
push
and
cmp
pop
and
jecxz
jbe
mov
push
jecxz
je
pop
xor
out
stos
add
or
enter
add
clc
insl
sbb
mov
xchg
dec
xlat
dec
push
test
or
mov
or
mov
xchg
lea
xor
push
cmpsl
inc
call
int3
push
insl
cs
push
xor
rcrb
xchg
lock
dec
fisubrs
push
xor
loop
ret
mov
repnz
push
mov
incb
jl
push
push
in
adc
xor
loope
fcoml
push
xchg
insl
daa
insb
faddp
dec
lea
out
mov
fcoml
mov
mov
aaa
in
adc
pop
cmp
sub
sahf
jg
cmp
loopne
in
dec
scas
rorl
cmp
mov
and
ret
and
nop
cwtl
add
jmp
push
cwtl
addb
outsl
test
push
xchg
adc
rclb
cmp
lds
sub
jg
jbe
inc
cmp
lods
or
or
aad
aas
add
loope
gs
xchg
repz
adc
gs
pop
loopne
ret
cmp
adc
rorw
sub
mov
inc
inc
inc
add
leave
lcall
mov
sti
cmp
popa
std
jge
cmp
push
and
sbb
loop
cmp
in
repnz
push
jmp
repz
lds
fs
xor
scas
pop
cmpsl
bound
adc
adc
push
sbb
arpl
xor
cmp
into
xor
loop
stc
stos
pop
and
cmp
and
and
stc
mov
popa
push
cmp
inc
cmc
imul
jge
std
jo
mov
mov
pop
ljmp
inc
ja
push
pop
mov
clc
sub
xor
bound
sub
cmp
pop
mov
push
fiaddl
xlat
sbb
outsl
dec
fdivr
cmp
cmp
std
sbb
dec
jg
incb
inc
shlb
add
xor
push
aad
call
clc
dec
sub
je
mov
pop
mov
mov
mov
jmp
xor
push
mov
sbb
js
sti
dec
push
push
dec
mov
mov
cs
lock
add
adc
jmp
cmp
inc
and
cmp
mov
push
cmp
mov
ljmp
mov
push
iret
fs
sub
jne
fildll
cltd
dec
insb
cld
inc
das
mov
test
out
add
or
cltd
adc
test
rcrb
pop
jp
add
clc
mov
dec
rcrl
cmp
insb
aas
pop
or
test
mov
enter
nop
str
in
xor
mov
mov
repz
pop
xchg
int
jecxz
and
shrb
mov
aaa
push
rcr
xchg
jae
lea
push
aam
rclb
jl
pop
jl
xor
lret
sbb
leave
pop
jno
fstpl
call
dec
jb
xor
xchg
push
loop
jp
pop
out
push
push
sarl
push
mov
cmpsb
js
cltd
rcrl
and
mov
jbe
shrb
pop
loope
sub
xchg
rol
and
xor
sbb
fstps
or
sbb
mov
cmpsb
test
stos
dec
cld
dec
cmp
sbb
leave
mov
mov
out
or
sub
out
fimull
mov
mov
insl
sbb
pop
pop
or
mov
jnp
xchg
push
test
cli
jns
adc
in
mov
in
dec
jno
es
dec
cmp
jno
lds
pop
shl
add
cltd
lret
test
push
dec
test
inc
movsl
or
inc
or
push
mov
js
push
push
jo
ret
repz
rorb
dec
cmpsb
das
inc
dec
pop
add
jle
and
ss
mov
scas
hlt
xor
ja
pop
shlb
or
sbb
and
icebp
or
sub
sub
sbb
mov
or
movsl
cmp
mov
jb
fs
daa
addr16
test
push
inc
pusha
pop
lcall
jecxz
mov
push
xor
jl
dec
test
sbb
and
mov
pop
and
push
mov
or
stos
cmc
mov
fs
fcompl
dec
dec
popf
push
xchg
loopne
dec
mov
lret
gs
push
dec
adc
sub
inc
out
icebp
pop
dec
cltd
and
stc
leave
sbb
fldenv
push
cmpsb
mov
add
sub
test
int3
lods
daa
mov
les
das
cwtl
ja
lods
push
sbb
test
idiv
xchg
sub
aad
jl
xor
lock
sbb
push
cmp
mov
out
cltd
repz
ja
dec
cmp
fsubrs
pop
jb
rol
ficoml
push
cs
arpl
in
mov
movsb
jl
push
ret
lds
cmp
fs
cmp
cld
out
movsl
mov
sub
cwtl
popa
cmp
out
sbb
dec
in
test
lret
sbb
pop
cwtl
jmp
adc
call
jae
fsubrs
fcmovnu
cmp
mov
or
mov
sahf
xor
mov
je
repnz
inc
outsb
fisttpll
xchg
pusha
icebp
rcl
insb
jle
stos
cli
mov
aad
outsb
push
icebp
adc
loopne
jo
sub
mov
or
adc
push
adc
add
sarl
fistpl
test
pop
and
inc
test
xchg
pushf
inc
mov
rolb
fiadds
cmovno
das
xor
out
ret
push
xchg
ret
fwait
in
push
leave
outsb
mov
push
aaa
inc
push
in
rcrb
out
rol
dec
mov
mov
pop
ds
hlt
cltd
mov
fucomip
mov
das
fs
mov
cld
dec
jo
cs
popa
mov
mov
cmc
mov
sbb
add
mov
sbb
sbb
and
push
out
into
aas
les
fldcw
lock
pop
mov
pop
mov
inc
repnz
movsl
mov
or
mov
push
sbb
mov
or
push
dec
imul
and
adcl
in
pop
xchg
xor
add
shll
pop
push
lea
cmp
push
push
sub
sbb
cld
mov
jnp
or
fnsave
cmc
mov
imull
scas
cmp
rolb
or
addr16
sub
int
mov
bound
push
jno
stos
andb
push
xor
dec
push
push
jne
xchg
mov
cmp
lea
mov
mov
xor
ret
je
addl
inc
and
je
or
and
aaa
scas
mov
lret
cmp
mov
xor
jae
and
lahf
cmp
cmp
and
sahf
into
nop
cmp
or
inc
es
pusha
fs
mov
sbb
dec
inc
imul
lea
dec
ljmp
lods
lret
test
sub
fldenv
xchg
mov
imul
mov
arpl
addr16
xor
mov
inc
std
orl
sbb
adcb
add
movd
push
cs
jmp
xlat
push
scas
sub
adc
add
mov
and
in
add
sbb
push
sub
les
movsb
cmp
push
adc
es
xor
ficoms
ret
or
imul
mov
lods
lret
clc
das
mov
mov
mov
mov
jmp
popa
stos
aaa
aaa
insl
sbb
xchg
mov
adc
cs
mov
or
jl
ret
pop
adc
xchg
push
in
cwtl
loop
ret
or
pop
movsl
push
pop
adc
jae
jl
add
adc
xchg
sbb
stc
out
data16
cltd
mov
xor
inc
arpl
adc
inc
scas
out
rorb
stos
rolb
into
sbb
repnz
add
daa
movsl
xchg
mov
popa
cmp
cmc
add
sbb
mov
test
jnp
pop
mov
sub
inc
addr16
stos
gs
or
adc
ja
mov
jns
popa
push
icebp
xor
daa
mov
xchg
inc
cmp
mov
out
addb
das
arpl
data16
lcall
mov
push
lods
stos
dec
out
in
push
dec
stc
push
das
mov
les
xchg
mov
int3
pop
xchg
mov
push
xchg
idivl
mov
xor
fdivs
adc
lcall
aad
ljmp
jecxz
andb
jne
xor
jl
popa
mov
inc
pop
nop
popa
and
repnz
test
adc
sbb
ljmp
adc
adc
xor
xchg
mov
pop
jns
xlat
or
pop
cmp
ret
adc
sbb
or
insb
inc
xchg
mov
decl
mov
ja
push
fstpl
scas
addr16
mov
pop
or
adc
jb
outsb
inc
pop
inc
ljmp
xchg
in
test
xor
adc
mov
dec
adcl
mov
inc
imul
dec
fcmovnu
or
lods
loope
cmp
lret
jle
test
mov
inc
push
cmp
or
sbb
pop
aam
jg
mov
push
imulb
pop
add
mov
mov
pop
stos
dec
or
add
jmp
cmp
repnz
or
push
cmp
jmp
mov
fadds
sbb
pop
mov
mov
pop
and
and
pop
int
mov
rcrl
arpl
jl
jae
icebp
test
cltd
repz
dec
dec
mov
mov
enter
push
inc
mov
inc
cmp
inc
fs
lock
rcll
jo
xchg
and
rorl
push
test
or
in
jmp
xor
adc
dec
dec
sahf
out
test
sbb
and
std
shrb
ja
mov
and
ficompl
pop
xchg
mov
fisubrl
pop
dec
outsb
jb
test
shll
test
mov
into
fwait
and
inc
fstl
and
dec
sub
push
sbb
scas
fdiv
and
mov
mov
xchg
cld
cmp
aas
inc
xchg
mov
xchg
lcall
inc
xchg
test
push
sbb
movsl
mov
xchg
cmp
mov
lret
lret
je
xchg
push
js
inc
fdivr
sub
mov
mov
mov
movsl
mov
dec
pushf
clc
sub
sub
or
inc
dec
adc
cltd
jns
sub
push
pop
jno
dec
push
movsb
inc
xchg
cmp
notb
shll
es
jae
pop
cmpsl
iret
fiaddl
ja
or
cmp
in
out
and
insl
test
cmc
jbe
push
pop
sub
pushf
pop
jmp
and
lods
repnz
jge
cmp
adc
mov
push
pop
jne
push
jmp
mov
xorb
das
loopne
fwait
movsb
scas
ja
push
rorb
inc
xor
cmp
cmp
jno
loop
pop
ja
ljmp
lods
xor
push
lea
pop
inc
iret
popf
or
lcall
mov
xchg
in
iret
adc
aaa
jmp
adc
ss
mov
add
lea
js
call
lds
inc
dec
ljmp
xor
jae
aad
test
sti
mov
xor
movsl
and
pop
out
jno
cwtl
xchg
iret
and
mov
mov
and
inc
push
test
stos
xor
setbe
adc
lahf
sbb
cwtl
sahf
adc
les
aad
push
je
insl
sbb
jno
mov
mov
fldenv
push
aas
ljmp
sbb
push
cmp
and
xor
pop
jmp
leave
es
jbe
sbb
test
fcoms
sub
adc
mov
pop
ret
pop
int3
popf
push
jno
mov
in
cwtl
pop
repnz
push
pop
repz
stos
ljmp
lock
je
int
xchg
cmp
cltd
or
xchg
loopne
inc
mov
fisttps
andb
cmp
leave
enter
jnp
mov
stos
in
leave
insb
lods
jo
and
add
sahf
inc
mov
sub
and
inc
sub
fcomps
pop
mov
pop
sbb
pop
push
addb
outsb
mov
rol
je
lcall
inc
mov
test
push
pusha
imul
cmp
scas
cld
push
iret
xor
or
shlb
lods
int
out
fists
jae
iret
test
push
das
aad
outsl
push
mov
popa
sub
aas
and
push
jne,pn
and
xchg
inc
add
js
mov
cmovo
mov
lock
pop
or
add
and
fsts
pop
subb
popa
mov
in
pop
mov
xor
mov
scas
inc
inc
popf
inc
imul
pusha
sbb
cs
pop
cmp
dec
mov
in
xchg
shlb
loope
adc
out
sti
test
subl
imul
add
aad
outsb
sub
das
add
sahf
hlt
loope
dec
adc
dec
mov
es
or
xchg
ds
int
sbb
loope
addr16
lret
pop
mov
add
sbb
lea
push
push
movsb
mov
push
jl
lea
shr
lret
aad
loop
out
sarb
loopne
mov
mov
out
cld
xor
je
mov
lahf
testb
sub
div
lds
push
fs
jb
inc
je
adc
lret
sub
ror
adc
sbb
mov
add
xchg
bound
inc
ljmp
mov
not
mov
into
sbb
lock
inc
jl
cltd
xchg
pop
jnp
outsl
adc
and
fstp
ficoms
jae
daa
and
mov
hlt
outsl
test
inc
sub
xor
out
mov
ds
and
lret
sub
add
movsb
add
fidivl
cmp
xchg
loop
inc
push
sub
mov
shlb
rcl
push
aas
es
xchg
dec
mov
inc
call
ret
pop
sbb
insb
mull
fs
ret
sub
adc
lcall
clc
jae
push
aad
fs
mov
cmp
adc
aad
fdiv
mov
pop
lret
inc
push
pop
sub
add
sbb
xchg
fistpll
mov
into
lods
xor
hlt
or
in
cli
mov
aad
scas
cmp
fisubrs
out
mov
jmp
mov
bound
inc
mov
int
inc
sbb
dec
ss
mov
sub
scas
pop
xchg
mov
mov
orl
aaa
jle
push
dec
jg
mov
sbb
pop
jge
sti
cmp
mov
nop
ficompl
and
ret
pop
repz
cld
jg
fisubrs
mov
dec
mov
and
cmp
mov
outsl
cmp
sbb
mov
out
inc
mov
fmull
sbb
jae
mov
cmp
mov
in
insb
add
adc
sub
mov
and
dec
enter
repnz
xchg
and
js
data16
lea
mov
jbe
xor
xor
addr16
addr16
insb
mov
mov
nop
jns
bound
push
rcrl
xchg
leave
das
sub
push
js
xchg
jns
js
orl
pop
scas
mov
adcl
jmp
push
addr16
or
sub
or
loop
mov
mov
movsb
inc
sbb
push
inc
cmp
jno
mov
sub
inc
add
mov
mov
and
jae
sbb
mov
pop
mov
sahf
push
scas
sub
xor
dec
pop
pop
loop
ss
fs
dec
call
pop
sub
adc
xchg
into
out
icebp
icebp
jp
incl
inc
mov
outsb
pop
aad
mov
jns
dec
inc
fld
add
push
js
add
test
add
sub
test
mov
xchg
nop
popa
push
and
gs
adc
xchg
add
inc
inc
adc
sti
mulb
inc
pop
imul
xchg
pop
repz
imul
mov
xlat
jle
jg
int
repz
iret
mov
mov
aaa
push
jo
jbe
popw
imul
xchg
inc
es
adc
insl
add
jns
xor
xchg
js
pop
cmp
in
or
xchg
inc
jmp
in
das
add
xchg
jmp
sbb
ret
ret
adc
testb
shrb
std
fidivrs
les
adc
and
mov
xor
mov
mov
pop
push
cmp
mov
dec
je
iret
sbbl
repnz
sub
cmpsl
int
out
pop
jp
pop
data16
mov
fsubrl
aas
outsl
or
cmp
clc
mov
pop
fs
dec
shll
rcll
pop
jo
in
int3
test
fistpll
or
dec
aad
jbe
call
sub
in
sbb
pop
pop
hlt
sahf
bound
fimull
outsl
fistps
jnp
hlt
jbe
mov
cmpsb
push
imul
fsubrl
pop
repnz
jl
mov
clc
inc
outsb
popf
mov
cmpsl
xor
mov
or
pop
cltd
je
bound
sar
ds
loop
movb
arpl
cli
push
pop
stos
or
xchg
mov
jmp
sbb
iret
push
fcomi
or
push
cmp
mov
adc
bound
jecxz
outsb
xorb
mov
loopne
fwait
push
dec
adc
xchg
rolb
cmpsl
mov
in
fadds
dec
in
sub
push
lock
push
cld
roll
sub
and
mov
test
mov
int3
dec
pop
daa
mov
mov
dec
les
ffreep
jnp
add
xor
nop
add
and
incl
cs
sahf
nop
loope
lret
push
pop
add
aas
or
rorb
out
leave
adc
push
sahf
aam
in
pusha
jmp
call
sarl
pusha
add
inc
sub
jmp
xor
sahf
sar
or
fadd
mov
stos
push
and
mov
push
mov
jl
in
out
lds
add
add
out
int3
stos
in
pop
popa
hlt
movsb
movsl
sub
stos
add
or
cs
mov
sub
mov
mov
scas
loopne
jl
dec
and
mov
jp
fcoml
cmpsb
icebp
pop
push
ret
inc
mov
in
mov
push
mov
je
les
add
push
mov
shlb
in
mov
jp
fidivrs
fdivl
ret
pmullw
ds
aas
or
dec
sahf
cmp
adc
dec
mov
movsl
movsb
sub
pop
cmp
jecxz
mov
pop
fcoms
pop
push
pop
pushf
clc
push
outsl
lahf
push
sbb
xor
adc
aad
out
fwait
xor
mov
scas
xchg
test
iret
es
daa
leave
cs
cltd
inc
jl
movsb
pop
stos
ljmp
or
add
outsb
push
fnstenv
mov
cmp
sub
pushf
mov
sbb
push
sbb
loope
je
enter
lahf
or
xchg
dec
cmp
lods
rcrl
xor
lcall
scas
adc
jecxz
dec
push
xorb
in
xlat
imul
subb
inc
fstl
mov
in
push
out
scas
pusha
jmp
scas
xor
push
mov
xor
rclb
mov
roll
sbb
adc
jl
pop
cmp
xor
jnp
les
mov
dec
mov
ljmp
sub
xor
mov
icebp
mov
fcoms
xchg
push
movsb
push
outsl
push
push
ret
mov
mov
pushl
je
cltd
repz
fcomps
dec
outsb
frstor
mov
out
add
mov
loope
int3
cmpsl
std
push
cli
fwait
jg
jmp
xor
ljmp
mov
inc
clc
mov
pop
inc
dec
repz
das
fs
inc
mov
push
movsl
push
sub
adc
jne
jns
pop
push
xchg
into
jp
punpckhdq
and
popa
and
rcl
mov
lret
inc
pop
inc
or
movsl
mov
shlb
add
adc
iret
nop
sbb
aas
sub
daa
mov
sarl
jbe
outsb
out
sbb
xor
xor
sbb
jb
push
jle
mov
cld
fidivrs
mov
test
push
outsb
scas
mov
xorl
stos
mov
or
clc
inc
mov
sahf
sub
ret
mov
ss
lcall
sar
cmp
stos
hlt
jmp
ja
fnstsw
sbb
cs
pop
fidivrl
rorb
lods
iret
outsb
push
pcmpeqb
cmp
cmp
iret
dec
fimull
les
jmp
pop
sbb
shlb
mov
dec
pop
mov
mov
jle
sbbl
fisttpll
mov
push
mov
mov
shrb
sahf
cmp
add
ret
jno
hlt
push
inc
lods
jl
cmp
pop
lock
cmpsl
adc
int3
mov
scas
ss
xchg
mov
jnp
jb
pushf
dec
cmp
xlat
adc
jp
popa
es
fdivl
es
rcr
shl
in
inc
or
dec
hlt
scas
adc
sub
mov
xchg
xchg
mov
jge
in
add
insl
arpl
repz
mov
inc
mov
movb
subb
inc
into
pop
rcll
in
adc
sub
inc
insb
fsub
dec
jae
arpl
inc
mov
pop
pop
scas
inc
mov
hlt
xchg
cmpl
js
sbb
mov
push
test
daa
sarl
xchg
xchg
inc
dec
mov
mov
sub
mul
inc
repnz
int3
aad
cltd
mov
push
jno
xchg
and
sbb
xchg
xlat
and
pop
es
and
dec
jmp
push
push
mov
adc
inc
pusha
scas
add
insb
or
fnstenv
push
jne
xchg
xchg
in
popf
insb
cmc
daa
cli
ja,pn
pop
mov
fs
and
lret
lods
cwtl
int
fnstenv
inc
enter
dec
add
in
nop
sub
mov
gs
mov
mov
test
lds
sub
sub
push
xchg
cmp
push
pop
or
mov
sbb
pop
mov
in
cmp
and
cmp
jne
mov
andl
fmull
cmp
sub
push
fs
mov
jmp
int
test
dec
aaa
outsb
loopne
into
cmp
popf
sahf
inc
pop
insb
push
rcll
jnp
gs
inc
nop
and
mov
sbb
mov
jnp
lea
and
adc
mov
fidivrs
mov
inc
sub
push
xchg
fwait
call
lahf
js
pop
jg
add
mov
adc
lret
sub
sbb
and
push
insb
movsb
jge
mov
ja
jg
add
mull
loop
imul
aaa
dec
sub
pop
cli
leave
sub
add
mov
jnp
fimuls
std
adc
push
add
or
cmp
or
in
nop
sub
std
call
dec
inc
in
push
jl
add
ret
fsubr
int
repz
jecxz
xchg
mov
jbe
js
test
adc
pop
inc
and
cmc
push
mov
mov
and
stc
out
mov
adc
pusha
jmp
lds
xchg
shll
shrl
fdivrp
pop
add
push
ret
xchg
sub
mov
sub
test
decb
or
scas
lret
add
push
outsl
mov
std
xchg
jbe
mov
and
mov
jp
sbb
movb
arpl
push
xor
in
sub
pop
push
xchg
test
add
xchg
ss
into
in
sbb
lea
outsl
add
cmp
mov
test
xor
adc
sbb
int
iret
mov
sub
js
mov
inc
pop
loopne
loope
sub
pop
gs
mov
mov
repz
inc
cmp
fcomps
rcll
mov
fmulp
mov
call
add
cmp
movsl
sub
fidivrs
test
popa
xor
iret
sub
mov
lret
outsl
stos
imul
cwtl
sbb
fmull
mov
movsl
gs
cmp
push
ljmp
cmpsl
imul
int3
shll
lcall
jp
lcall
cs
ja
and
iret
sbb
and
test
jp
inc
mov
rorl
pusha
push
adc
and
js
adc
xchg
iret
push
add
jns,pn
push
fsubrl
mov
lds
sub
insl
xchg
mov
cmpsl
push
ret
cmp
sbb
pop
mov
test
cmpsb
ljmp
in
sub
cwtl
xchg
pop
push
flds
leave
out
fwait
shlb
xchg
mov
mov
pop
mov
and
adc
call
mov
popl
adcb
imul
lcall
mov
adc
mov
add
adc
lret
faddp
add
add
adc
fcmovnb
jl
inc
cmp
ror
inc
divb
xchg
adc
mov
mov
sysenter
mov
dec
cmp
cmpsl
or
leave
popa
xor
in
add
fcompl
mov
addr16
nop
jnp
inc
sti
rclb
clc
xor
xor
std
or
push
dec
test
jecxz
daa
xchg
popa
adc
mov
pop
je
lods
icebp
pop
push
jo
push
jns
in
jge
movsb
ret
ja
roll
xor
flds
or
sub
xchg
mov
mov
xchg
push
pop
push
or
pop
adc
add
nop
mov
mov
lcall
push
xor
mov
int3
xor
add
and
mov
test
lea
cmp
and
adc
ret
aam
inc
mov
sahf
or
and
nop
pop
cli
push
pop
insb
xor
sbb
inc
mov
sbb
cmp
jle
mov
lret
xor
shr
pop
call
dec
std
rorl
push
nop
enter
sub
inc
dec
mov
dec
movsb
sbb
test
or
lea
pushf
loopne
push
jle
rcll
loop
inc
add
sbb
dec
sub
out
mov
push
data16
mov
adc
adc
push
je
push
sub
cltd
mov
std
mov
sub
add
popa
jecxz
mov
push
dec
in
pushf
dec
ficompl
sub
shl
inc
sahf
shlb
add
adc
xor
adc
ds
inc
insb
mov
and
pop
sbb
mov
dec
xchg
or
xor
mov
in
pop
bound
leave
pop
shlb
int
rorb
mov
std
inc
ljmp
add
sbb
mov
xchg
dec
add
dec
sbb
orl
out
adc
in
xchg
sbb
sub
aad
sub
mov
jecxz
adc
sub
popa
push
stos
xor
jo
xor
jge
subb
pop
dec
bound
fmul
jno
xchg
and
cld
and
imull
sbb
adc
out
hlt
loopne
repz
inc
sar
loop
lods
and
cmp
pusha
mov
inc
mov
xor
aas
fucom
movsb
add
or
cmp
sti
mov
aas
popl
cmpsl
xchg
add
jmp
scas
jg
mov
les
ret
cli
dec
pop
dec
jae
push
sbb
sbb
or
xchg
shld
out
mov
xchg
rcrb
xchg
pop
cld
dec
or
in
pop
ret
push
mov
and
jo
adc
add
fisubrs
jne
cwtl
cltd
jno
scas
cvtps2pi
aas
dec
ds
addr16
jmp
jle
sub
aaa
out
aad
jb
shlb
jne
mov
popa
in
out
mov
jg
rorl
rorl
push
jge
sub
cmpl
jo
add
pusha
imul
sub
stos
addr16
push
dec
mov
xchg
jge
xor
pop
lea
cmp
xchg
adc
mov
test
repnz
mov
mov
lret
test
inc
in
loop
xchg
iret
aaa
sbb
sub
test
pop
mov
or
mov
loope
mov
stc
mov
ffreep
fwait
dec
stc
or
mov
lcall
jecxz
mov
push
test
and
mov
loopne
out
dec
xchg
sub
hlt
lods
imul
xchg
add
add
aad
xchg
out
jmp
jb
mov
and
mov
jae
xchg
mov
push
sub
repnz
mov
and
dec
into
sub
push
dec
dec
cmc
inc
sub
and
loope
push
xor
pop
inc
stos
xchg
mov
lods
or
add
stc
and
int
jb
fldcw
rorb
jnp
xor
dec
jno
add
push
sarb
and
push
inc
sbb
jmp
lea
sbb
aam
and
adc
or
dec
jecxz
add
fs
jae
addr16
ljmp
test
jo
insb
aas
sbb
ljmp
je
xchg
xchg
jbe
jg
sbb
lea
pop
out
iret
subb
sbb
stos
imul
push
and
jns
insl
nop
and
and
rcrl
jge
testb
fwait
and
pop
cmpsl
mov
out
xor
pusha
stos
xor
inc
in
mov
repnz
xor
inc
iret
xor
lret
pop
inc
fstl
mov
imul
loopne
pop
stc
dec
inc
ret
and
xor
fsincos
xchg
or
lahf
push
addr16
sub
sub
sub
sbb
imul
fdivs
or
subl
popa
or
addl
mov
lret
insb
dec
mov
mov
sub
outsl
pop
pop
pop
in
enter
ss
mov
push
enter
adc
pop
jmp
test
loope
jge
movb
in
xchg
sub
in
jnp
in
ss
loopne
sbb
sbb
inc
mov
arpl
aaa
loop
sti
adc
lret
sub
rclb
aaa
push
sbb
sub
imul
push
and
sub
ljmp
gs
hlt
pop
mov
clc
mov
ret
fld
iret
icebp
dec
bound
jle
xchg
cmp
sbb
add
add
addr16
insb
out
leave
repnz
inc
fists
xchg
inc
cwtl
popf
mov
ss
ja
fnstcw
pop
xor
scas
movsl
adcb
cld
and
add
idivl
aam
fs
int
dec
bswap
sbb
mov
out
fwait
pop
mov
mov
insl
xchg
call
or
nop
pop
cmp
xchg
roll
cmpsl
in
adc
lods
insb
push
cmp
arpl
test
clc
pop
sub
inc
jo
sub
je
lret
mov
nop
insl
dec
and
fwait
sbb
cmpsb
adc
ds
popf
xor
dec
shrb
xor
add
aam
jg
xchg
outsl
cmpsl
mov
sbb
dec
cwtl
inc
aaa
adc
stos
sub
int
rcl
xchg
out
mov
lahf
popa
test
cmpsl
adc
icebp
push
mov
cwtl
adc
inc
call
cld
mov
fstps
ss
lahf
mov
sbb
cmc
cmc
push
or
test
push
jb
cmpsb
lods
or
xor
pop
inc
and
fxch
aad
ret
jnp
sarb
lahf
pop
or
fstpt
xor
sbb
mov
sub
cltd
mov
jns
mov
sub
test
repz
or
cmp
or
mov
add
mov
pop
sbb
lods
in
or
dec
rcrl
lret
jnp
out
outsb
jbe
or
sbb
andl
icebp
fidivrl
aad
lahf
jo
jge
fstpl
and
lret
mov
fmul
and
in
aaa
sti
out
sub
mov
aaa
in
gs
jnp
cmp
call
test
hlt
orb
jecxz
or
push
pusha
addb
sub
fsub
jno
or
add
rcr
es
fcmovnbe
sahf
aam
inc
pop
pop
test
aas
rcrb
or
push
mov
repz
jge
fisttpl
pushl
inc
adc
je
arpl
mov
and
xor
push
fdivl
call
sbb
sbb
arpl
push
ds
lods
dec
out
das
push
je
imul
jae
fldl
or
cmpsl
add
xchg
lret
sub
ljmp
cwtl
jno
je
xor
mov
pushf
lret
pop
xor
mov
sub
sub
jb
inc
sbb
mov
nop
fwait
or
adc
push
je
rclb
enter
jg
insb
jecxz
imul
test
cmp
push
cli
sub
add
shll
dec
dec
mov
sub
sarl
movb
pop
mov
imul
das
inc
movsb
and
pop
jmp
pop
xor
arpl
sbb
inc
ficoml
outsl
fmul
stos
push
out
pop
sbb
aam
add
dec
imul
mov
movsl
repz
movsb
fstpl
xchg
pop
shlb
adc
ret
and
adc
stos
add
mov
push
cmc
mov
mov
mov
cmp
stos
insl
mov
mov
sbb
adc
insb
mov
jle
push
jo
lds
mov
cmpsb
fisubrl
mov
or
mov
aam
push
popf
pop
loopne
dec
sub
sbb
mov
sahf
cmc
cltd
iret
jno
cmc
jnp
imull
xchg
ljmp
out
clc
dec
mov
test
jle
adc
aaa
mov
lret
daa
outsl
int
dec
xchg
jo
mov
mov
pushf
fwait
mov
lock
fnsave
cmp
sahf
call
mov
and
into
test
add
out
loope
or
mov
stc
dec
ja
mov
and
sbb
fisttpll
pop
ljmp
inc
pop
mov
shld
aas
repz
xor
adc
repnz
arpl
punpckldq
jns
aad
push
daa
fdivs
out
inc
xor
addb
xchg
mov
ja
pop
lret
sbb
or
lcall
mov
insl
shr
negb
jmp
mov
sub
lods
shll
bound
add
push
push
add
lock
mov
aad
js
ret
fisubs
mov
subb
cmc
mov
or
int3
xchg
mov
xor
test
cld
pop
out
stc
stos
aad
pop
xchg
xorb
sub
jno
sub
jge
and
ret
cmp
push
sbb
and
stos
imul
and
dec
rclb
sbb
jne
jo
pop
push
fsubr
mov
xchg
movsl
mov
fcomip
lods
jmp
test
or
gs
aaa
icebp
inc
mov
call
inc
test
pop
add
push
scas
dec
jo
mov
std
aas
jno
lret
lahf
mov
scas
inc
lds
add
mov
push
out
pop
lret
jns
data16
aad
xchg
mov
pusha
and
mov
jno
imul
dec
dec
adc
or
sbb
xchg
das
jmp
into
sbb
mov
and
fdivl
incl
sub
and
cmp
push
into
mov
loope
lahf
and
pop
or
pop
in
or
mov
add
fsts
inc
out
into
ret
adc
mov
arpl
add
pop
pop
fcmovbe
call
mov
inc
pop
mov
mov
data16
jecxz
insb
divl
xchg
lods
rorl
mov
dec
fnstcw
cs
ljmp
out
out
mov
stos
inc
push
cwtl
xlat
cmp
stc
dec
lcall
xor
test
pop
fsubs
jmp
roll
xor
ss
ljmpw
dec
sti
xlat
pop
jo
into
cmp
pop
cld
pushl
out
sbb
rorb
dec
stos
mov
rorb
push
mov
test
jnp
es
mov
jns
jecxz
je
stc
cwtl
cmpsb
testb
adc
adc
ss
inc
push
mov
ljmp
and
xor
das
mov
jbe
icebp
nop
sbb
sub
or
faddl
jbe
cmp
xchg
data16
mov
lahf
or
ja
ljmp
or
iret
jne
fmull
xchg
insb
cmp
ljmp
fs
cld
rcl
inc
cltd
cmc
fstpt
sti
call
mov
push
sub
lret
fwait
inc
movsl
scas
jne
cli
cmp
cli
dec
cmp
js
push
adc
mov
es
out
fistps
test
push
jg
imul
scas
cmp
inc
push
stos
cli
stos
xchg
mov
jmp
inc
or
sbb
mov
xor
aam
pop
inc
loop
mov
mov
dec
inc
push
inc
mov
mov
jle
adc
pop
fiadds
or
aam
xlat
xor
mov
mov
addr16
insl
shlb
sub
loope
dec
jnp
xor
cmp
mov
sahf
rcl
mov
sbb
movsl
pop
iret
aam
adc
lea
loopne
fistl
inc
lcall
pop
xchg
popf
cmp
xor
push
xchg
call
push
mov
push
lea
jle
lcall
xor
sub
fistpl
insl
push
and
in
ljmp
mov
mov
jb
inc
xchg
lea
and
mov
ret
sub
nop
add
test
sbb
adc
js
mov
icebp
addr16
cmp
outsb
jl
push
pop
stos
jne
mov
sub
mov
lahf
mov
xor
cmp
inc
ret
sub
cwtl
cmp
xchg
inc
stos
imul
sbb
dec
fdivrl
jge
dec
mov
push
mov
frstor
cmp
loopne
pop
cli
mov
ljmp
push
sub
fstps
push
es
jbe
and
arpl
inc
fnstsw
xchg
out
mov
mov
icebp
jl
xorl
mov
mov
inc
not
adc
push
repnz
sbb
push
add
sbb
cmpsb
inc
cmp
jne
rcr
cli
jb
cmp
cwtl
ds
enter
call
xchg
lods
sbb
nop
int3
enter
mov
sahf
out
outsb
in
fisttpl
aas
stc
xchg
pop
jp
repnz
add
rcrb
jecxz
mov
jle
ljmp
inc
jb
add
mov
mov
in
cwtl
jno
cmp
jp
xor
movsl
mov
mov
push
sbb
dec
out
inc
jp
cmp
stos
aas
insl
fildl
mov
pop
test
and
stos
cmp
aad
roll
std
push
xor
push
pop
and
imul
and
insl
sbb
add
xor
jne
push
scas
dec
stos
testl
das
fwait
jbe
dec
sub
add
adc
jbe
inc
pusha
fwait
jmp
loop
outsb
int
jnp
cmp
lret
and
addl
cmc
adc
leave
arpl
dec
jmp
fwait
sarb
sub
cmp
fisttps
enter
enter
in
adc
pusha
jne
in
fwait
mov
lahf
sbb
push
push
push
sbb
stos
daa
ljmp
fcmove
mov
ss
push
cmp
cmp
dec
sahf
and
xchg
mov
lret
xlat
leave
push
xor
into
mov
or
xor
stos
mov
outsl
mov
inc
test
sbb
adc
and
lea
jecxz
mov
es
and
pop
inc
lret
out
data16
cmc
ficoms
cs
fsubrp
sbb
lods
push
nop
scas
js
lcall
xor
cli
lea
pop
in
inc
push
and
xor
mov
test
adc
push
movsl
inc
sbb
imul
in
test
js
std
push
cmpsl
shl
dec
add
inc
mov
push
out
shll
push
fcomps
popa
lret
xlat
popf
sbb
mov
pop
mov
mov
cli
sbb
push
js
push
fisubrs
ja
mov
sbb
fstps
shll
push
mov
inc
add
jne
cwtl
das
je
jnp
push
test
xchg
ficompl
cli
mov
xchg
xchg
ds
popa
mov
add
mov
lahf
push
inc
sbb
sub
mov
cmpsl
mov
xchg
cmp
shrl
lret
jne
push
mov
add
jl
sub
jmp
movsl
add
sbb
lahf
push
xor
sub
inc
in
sbb
adc
jns
and
jge
adc
and
icebp
in
sar
aam
xor
je
das
push
adc
sbb
xchg
mov
out
and
mov
rcll
push
jecxz
mov
sarl
mov
fisttpll
inc
imul
xchg
mov
frstor
jae
jo
icebp
je
pop
adc
lret
fimuls
sahf
scas
mov
adc
inc
fs
add
imulb
lods
repnz
repnz
dec
mov
inc
pop
xor
out
mov
add
jecxz
and
movsl
pop
fists
cli
xchg
nop
fistps
xchg
adcl
sbb
call
stos
sbb
je
add
cmp
pop
lods
inc
push
imul
aam
mov
sbb
scas
mov
mov
inc
sub
xchg
mov
add
icebp
mov
mov
hlt
data16
ds
lahf
movl
adc
into
ret
mov
jl
pop
mov
iret
outsl
cmc
sub
sti
cmp
mov
stc
outsl
outsb
adcl
sub
loop
mov
loop
icebp
shll
push
dec
or
loopne
aam
cmp
xor
ljmp
mov
jnp
push
sbb
leave
addr16
or
sbb
cmp
xor
clc
cmp
int3
or
jbe
sbb
repnz
adc
jl
test
iret
popa
movsb
daa
mov
xor
xor
popa
cmc
push
fcomip
mov
mov
push
and
imul
ret
xor
sbb
and
aad
fmulp
cli
xchg
cmp
fimuls
adc
mov
cmp
shld
adc
in
adc
test
mov
lock
jo
mov
add
negl
or
stos
sub
inc
aad
cmp
into
shll
sti
insl
aas
mov
lods
adc
testb
pop
and
pop
es
dec
xor
call
xlat
mov
enter
arpl
mov
inc
shrb
sbb
xor
sarl
or
aas
pop
pop
adc
inc
mov
enter
js
lcall
adc
hlt
push
push
lret
cltd
andl
pop
mov
dec
inc
daa
dec
xor
daa
fsts
test
add
adc
mov
xchg
je
cli
divb
imull
push
popf
mul
in
sbb
pop
aaa
mov
or
or
push
add
xor
and
fmulp
xor
xchg
data16
and
xchg
ja
leave
push
xor
jne
out
sbb
mov
bound
cmp
xchg
push
mov
jb
xchg
stc
mov
inc
mov
dec
ds
mov
push
add
inc
pop
mov
lret
dec
xor
pop
iret
fsubs
cmc
jmp
in
mov
int3
mov
je
les
push
jmp
push
sub
fimull
mov
roll
mov
stos
sarl
lods
or
add
add
rolb
jbe,pn
inc
inc
dec
dec
fistpl
adcb
and
movsl
add
add
out
in
xor
cmp
fiadds
aaa
dec
stc
rcrl
rcrl
pushl
std
pop
fstpl
movsl
sbb
outsb
mov
push
jmp
add
xor
sarb
inc
ljmp
filds
sub
fistl
stc
xor
subl
pushf
jge
mov
jecxz
data16
outsl
mov
dec
out
add
rcll
mov
mov
ss
pop
aas
and
adc
pop
je
xchg
cld
lods
aas
jmp
repz
mov
jbe
test
repz
mov
ret
ljmp
iret
cmp
ret
rcll
nop
inc
push
jecxz
push
push
cmp
in
cltd
jbe
or
pusha
push
dec
jmp
mov
cmc
sbb
sub
xor
push
jnp
movb
inc
ds
or
pop
incb
xor
jg
pop
test
or
or
std
mov
fmull
sub
push
push
lahf
scas
loop
inc
xchg
xor
popf
nop
mov
in
test
ja
pop
sbb
mov
lcall
sbb
jmp
icebp
push
and
push
test
leave
fisttpl
push
push
adc
xchg
sbb
sti
push
ror
insb
vprotq
push
xlat
adc
icebp
push
pop
xor
out
jp
ds
mov
in
fnstenv
add
imul
loop
dec
popa
adc
jae
sub
ljmp
dec
jecxz
add
push
shll
scas
sbb
mov
sub
mov
pop
imul
adc
pusha
mov
div
sbb
into
sbbb
adcl
mov
in
adc
cmc
pop
bound
insl
test
out
inc
adc
mov
insb
rclb
test
lods
jne
cmp
iret
or
test
mov
scas
icebp
cmc
sbb
push
aad
mov
xor
jmp
mov
fcoms
adc
icebp
jae
imull
dec
sub
cmp
mov
xor
mov
movsl
and
lret
dec
orb
adc
jae
loopne
add
or
jecxz
mov
clc
rcrb
sub
xchg
in
xchg
outsb
or
adc
cmp
insb
mov
scas
outsb
lds
xchg
pop
sbb
mov
loopne
into
loope
jg
out
cmc
mov
xchg
jge
fisubrl
inc
jo
mov
sub
jb
mov
ja
xor
stos
test
dec
js
jp
push
repz
rorl
in
repz
push
rcrb
mov
mov
arpl
inc
movb
sbb
loop
sub
mov
xchg
mov
sub
fmulp
cs
push
fs
push
fcoms
push
push
aas
dec
jno
add
inc
jecxz
cmp
ljmp
aam
mov
testl
scas
rcrl
sub
push
xor
push
repnz
lods
stc
or
pop
jg
sbb
cmp
cmpsb
fnsave
scas
das
jne
std
sub
mov
mov
cs
shrb
mov
pushf
repz
imul
call
sarb
sbb
ret
and
ja
nop
sub
jp
pop
repnz
adc
xor
xor
inc
inc
and
jmp
cmpb
sbb
mov
icebp
and
sar
xchg
nop
fidivrs
gs
clc
adc
pop
out
jecxz
pop
call
xor
push
adc
or
fistpl
or
mov
push
ljmp
mov
cwtl
sub
adc
jmp
scas
and
cmp
or
jbe
mov
and
std
add
ja
xchg
pop
les
add
jg
rcl
cmp
and
lea
popf
add
ds
sti
sub
ljmp
lods
jbe
movsb
sub
xor
or
out
pop
push
jmp
int
pop
jne
jae
bound
iret
loopne
mov
loopne
xorl
pusha
test
test
mov
jne
cmp
mov
loopne
ja
ds
mov
pop
test
jne
aas
xchg
fcomps
sarb
lret
fsubr
pop
outsb
sbb
inc
jg
outsl
mov
jns
cmp
jno
imul
dec
cmp
jnp
mov
dec
push
ficoms
sub
je
insl
arpl
cmp
rcrl
lods
loop
test
popf
and
subl
ds
scas
cmp
in
cmpsb
xor
push
jge
popa
mov
pop
mov
pop
stc
arpl
push
mov
sub
mov
leave
xor
dec
jmp
mov
dec
stos
sbb
mov
sbb
cli
fwait
es
in
adc
ficoml
xor
xchg
stos
push
jle
mov
mov
pop
mov
jbe
push
scas
or
jae
jmp
cmc
push
xchg
insl
popa
mov
cmp
xorb
call
ret
lea
xlat
push
mov
fdivs
cwtl
cltd
cmc
sub
insb
mov
pop
pop
jae
xor
sub
jge
orb
jmp
pushl
jge
scas
and
cmp
push
add
outsl
push
push
testb
addr16
xchg
mov
aam
pop
in
int3
fcmovnu
and
jae
pop
push
adc
sahf
enter
dec
mov
xor
dec
mov
repnz
add
lods
inc
sarb
repz
movswl
rol
jecxz
inc
jb
dec
add
rorl
enter
jns,pn
shr
mov
out
and
dec
call
rcl
ljmp
push
fistps
dec
add
in
push
iret
and
jge
inc
out
jmp
fildl
int
shlb
mov
mov
dec
mov
out
sbb
mov
aad
jno
iret
scas
inc
jb
cmp
test
mov
arpl
out
sahf
pop
jne
adcl
in
arpl
jno
adc
aaa
ds
pushf
shlb
scas
aaa
xchg
xchg
push
movsb
dec
jae
popa
lahf
clc
pop
dec
es
into
mov
insl
sti
mov
add
adc
inc
sbb
in
or
repz
sahf
mov
scas
in
lcall
mov
adc
xor
out
mov
movsl
and
mov
pusha
dec
test
jo
dec
bound
sub
inc
dec
loope
into
push
rcr
push
add
mov
aam
dec
xchg
inc
jnp
dec
ja
sub
jge
push
jne
in
jle
repnz
aad
jge
cmc
aam
and
ret
loop
jg
stos
mov
add
inc
sti
mov
shlb
aam
addr16
inc
add
cli
add
sbb
aam
xor
arpl
bound
fdivrl
cmpb
jle
aas
mov
imul
shlb
imul
js
pop
stos
negl
xchg
lahf
mov
idivl
cmp
adc
cmp
cmpsb
sbb
add
xchg
aaa
lea
js
mov
jmp
mov
out
mov
add
add
iret
xchg
aas
mov
mov
arpl
sbb
push
add
clc
imul
mov
jnp
in
clc
inc
es
enter
dec
jns
rclb
mov
insl
push
push
cmp
add
or
push
xchg
sub
mov
sbb
js
fs
xor
mul
jecxz
inc
mov
popf
lea
jbe
inc
cmpsb
xor
out
mov
movsl
xor
je
leave
rclb
mov
lock
xchg
mov
pop
mov
ljmp
lret
cmpb
pop
dec
lods
xchg
mov
mov
scas
orl
or
ja
clc
xor
inc
sub
inc
je
jb
inc
jno
lret
cmp
mov
mov
xor
pop
es
insb
add
push
test
pop
jae
mov
cli
out
mov
not
mov
rcll
hlt
adc
or
mov
mov
sbb
sub
xlat
add
cld
push
inc
ret
push
xchg
sbbb
add
je
pop
mov
ljmp
xchg
pop
jmp
cwtl
push
in
lods
jge
mov
das
lcall
mov
hlt
jae
jl
mov
test
stos
sub
call
inc
int3
cwtl
and
pop
movsl
js
stc
fdiv
adc
in
sbb
push
js
mov
push
dec
xor
jge
xchg
mov
or
cld
and
adc
pop
js
pushf
dec
stc
cwtl
mov
push
adc
test
inc
mov
mov
mov
pop
pop
into
lcall
sub
push
fistl
stc
test
pop
add
and
xor
adc
nop
mov
sub
push
add
out
mov
leave
and
pop
cmp
outsb
cmp
xchg
add
inc
mov
pop
shll
push
dec
call
jmp
mov
or
mov
xor
inc
lahf
jge
cmp
andb
sub
inc
sub
movsl
pop
nop
or
pop
cmpsb
dec
daa
test
dec
call
mov
jnp
mov
adc
fsubrp
lock
shlb
push
les
sbb
xchg
mov
push
andl
sub
sahf
mov
in
sahf
cmpb
xorl
mov
lahf
sahf
adc
adc
xor
in
mov
push
ss
rcl
sbb
sub
pop
jp
adc
mov
lcall
je
hlt
sbb
adc
mov
enter
imul
insb
flds
cmpsl
fistpl
and
call
sbb
pop
pop
jle
clc
hlt
pop
jg
aaa
cmp
mov
cmpsl
push
cmpsb
push
mov
mov
hlt
loop
dec
movsb
cwtl
shlb
cmp
add
scas
shrb
xchg
and
pop
jl
je
sub
push
testl
add
in
aam
mov
fst
jp
mov
stos
jmp
or
xchg
xor
cmp
cvttps2pi
mov
insb
lods
aad
dec
repz
loop
scas
jno
out
pop
sarb
dec
ret
scas
addr16
bound
adc
cmc
ja
addl
push
jp
cmp
roll
sarl
inc
loop
sub
in
xchg
aas
push
arpl
popf
ss
adc
sub
dec
sbb
fstpt
imul
sbb
lret
jbe
dec
js
and
push
fdivs
int3
pop
jae
adc
fists
lock
mov
pop
pop
loope
jecxz
lods
cmp
inc
jecxz
mov
pop
sbb
repz
jne
xchg
mov
bound
and
lret
mov
pop
fsts
push
and
aam
xor
ss
mov
xchg
scas
mov
pop
or
movb
daa
addr16
xchg
iret
pop
fmuls
pop
fcom
mov
xor
pusha
movsl
jmp
scas
push
outsl
test
jno
or
aam
lret
sub
pop
mov
jae
pop
leave
adc
or
xor
and
in
es
push
loopne
lret
and
iret
sbb
cmpb
cmp
dec
pop
enter
jns
std
shrl
jecxz
mov
push
mov
jne
rcrb
pop
lret
cmp
daa
dec
mov
ds
lock
push
lods
mov
popf
push
sti
loopne
inc
fwait
add
mov
adc
orl
sub
mov
cmc
clc
lock
sti
mov
mov
sbbb
inc
jp
jmp
jg
cld
loope
fwait
test
shr
movsb
xlat
test
xchg
insb
jmp
mov
fs
mov
pop
jae
bnd
sbbb
daa
cs
ret
cli
pop
paddd
negb
test
push
jne
test
mov
sub
shl
data16
lods
ds
scas
sbb
add
leave
dec
test
ret
push
pusha
repnz
adc
lock
stos
dec
incb
inc
or
jb
and
loopne
cld
push
jbe
pop
xchg
bound
icebp
jns
cmc
test
fs
lcall
mov
add
addr16
inc
sbb
and
out
test
ljmp
fimull
ljmp
sub
jno
imul
jns
imul
out
mov
das
arpl
mov
jae
arpl
daa
loope
xor
shll
sbb
ss
jnp
and
lcall
enter
jecxz
fdivs
sub
mov
push
je
cltd
push
aad
pop
mov
aaa
adc
test
out
movb
pusha
aaa
enter
jmp
inc
dec
ljmp
outsl
outsb
jnp
push
dec
mov
mov
mov
and
int
jns,pn
xor
pop
iret
shll
bound
pop
pop
add
push
jp
stos
cli
shl
pop
jge
push
inc
sub
outsl
clc
sbb
rcll
int3
or
pop
sti
cmpsb
and
push
xchg
div
in
icebp
fwait
push
test
roll
test
movsb
or
push
iret
xchg
cmp
in
cmp
ror
sbb
cmp
loopne
ja
cmpsb
cmpsb
pop
test
stos
push
mov
mov
push
cli
out
mov
ja
shrb
jae
lret
test
call
jns
sub
jge
int
mov
outsb
inc
imul
adc
aas
out
jnp
cwtl
sub
jae
sub
add
enter
mov
rcll
loope
es
push
in
mov
lcall
adc
aaa
cmp
sub
js
dec
sub
mov
fxch
arpl
adc
nop
adc
xor
lcall
ss
daa
fsts
fs
shl
and
outsb
mov
mov
test
cmp
or
and
test
fdivrp
sub
test
push
cmpsb
imul
into
iret
aas
push
cli
imul
std
lahf
xor
mov
jae
cmc
mov
jae
lret
repnz
cmpsl
jg
add
mov
mov
jns
xor
fadd
push
enter
inc
xor
pop
jo
ljmp
iret
ds
mov
pop
push
push
out
adc
inc
in
push
inc
cmp
jge
xchg
sbb
ljmp
jge
sub
push
jbe
push
mov
pop
movsl
xchg
and
stc
sub
xor
mov
adc
push
notl
stos
mov
jb
or
loopne
inc
orl
mov
sti
and
push
push
testl
psubsb
leave
jne
mov
fwait
add
aas
mov
xor
push
jl
jnp
inc
int3
lock
outsl
fwait
shrb
mov
sub
cmp
das
push
push
notb
hlt
cmp
sbb
push
dec
push
inc
inc
fs
add
aad
jmp
push
cltd
mov
mov
jbe
cltd
out
and
add
outsb
iret
jecxz
add
jp
lods
hlt
repz
mov
mov
xchg
and
pop
fnstsw
add
mov
xchg
dec
pushf
cmp
or
into
mov
push
jmp
xchg
jp
pop
scas
pop
mov
push
xchg
or
add
ljmp
lods
sub
popf
stos
ja
jns
out
lcall
jne
push
subl
loop
xchg
cltd
jne
push
jecxz
mov
sbb
jg
or
pop
mov
mov
test
jbe
fildl
mov
sbb
sub
cmp
out
sarb
push
xlat
ljmp
push
cmp
scas
test
adc
cmp
out
xchg
fwait
ljmp
or
xchg
adc
aaa
ficoml
inc
ret
pop
cs
dec
xor
andl
hlt
fsub
pop
jle
icebp
mov
mov
sti
add
sub
mov
pop
jne
fdivr
cmc
xorl
xlat
push
sbb
leave
mov
stos
cmp
jbe
fsts
push
cld
pop
xor
sbb
fdivr
repz
fbld
inc
push
cmp
movl
pop
mov
lcall
aam
xchg
sahf
cld
roll
ljmp
add
ljmp
mov
dec
imul
ret
outsb
outsl
xor
pop
inc
adc
add
mov
mov
decl
inc
movsb
loope
mov
xor
adc
adc
mov
ds
add
pop
xchg
mov
jnp
icebp
cmp
sarl
dec
inc
or
mov
dec
enter
test
jo
pop
xor
in
aaa
repz
xchg
mov
pop
imul
in
mov
mov
and
fwait
lret
outsb
lret
cmpsb
mov
out
xlat
cmp
mov
testl
jne
stos
or
xchg
inc
pop
aad
fcoml
jmp
nop
stos
popa
repz
jbe
mov
cs
adc
mov
xor
sbb
aaa
mov
aaa
jnp
bound
dec
mov
push
aas
jl
mov
fsubrl
mov
adc
push
cmp
mov
cmp
mov
imul
pop
push
xor
cmc
xchg
pop
aad
cltd
sub
mov
push
das
fstl
mov
fwait
cld
aas
lret
sbb
aad
jb
adc
mov
shrb
xor
fiaddl
int3
sbb
push
stc
in
cmc
or
push
iret
fistl
push
sub
pop
xchg
es
mov
xchg
inc
cld
cmp
icebp
push
sbb
dec
xor
fimull
jecxz
arpl
cmpl
mov
push
sub
cltd
pop
decl
call
lret
repnz
mov
sub
sarb
mov
and
mov
push
xor
es
je
sbb
push
fdivrs
pop
xlat
add
or
std
mov
shlb
mov
aas
insl
int
iret
test
es
sti
daa
jns
out
sarb
popf
into
fstpt
jge
or
xor
aas
sbb
jmp
adc
or
ljmp
push
pop
jmp
push
stos
rcl
cmc
rorl
sub
xor
mov
inc
dec
xor
jbe
test
adc
mov
repnz
xchg
jne
pop
bound
xchg
jl
test
push
cwtl
call
pop
scas
insl
cmp
or
cmp
std
lea
aad
push
push
mov
loopne
push
movsl
aad
xchg
xor
addr16
mov
insb
sar
and
mov
repnz
mov
cmp
imul
sub
jp
icebp
outsl
daa
lock
jnp
mov
jo
inc
xor
insl
fdivrl
stc
fldcw
adc
push
xor
jl
lahf
hlt
mov
idivb
and
xchg
das
popa
stos
jge
sbb
lcall
outsb
mov
jns
cmp
or
ja,pn
fisttps
sub
repnz
hlt
inc
stc
gs
jo
mov
xchg
mov
xchg
cmp
xor
stos
inc
mov
enter
sahf
xor
ja
test
cmp
popf
in
jg
pop
and
faddp
xchg
push
cmp
daa
shl
addr16
lea
xrelease
neg
xchg
pop
notl
pop
data16
xchg
add
mov
lcall
jmp
sbb
stos
xor
mov
cmp
fimuls
cmp
fs
mov
jmp
push
daa
push
xor
sbb
js
mov
dec
mov
fidivs
outsl
scas
add
mov
mov
mov
inc
aas
pop
loop
adc
mov
mov
jge
imul
mov
lds
fdecstp
xor
arpl
cli
xor
stc
into
les
aaa
sahf
inc
adc
push
in
ret
jns
fwait
lods
rol
sbb
add
add
or
subb
inc
pop
or
cs
jecxz
adcl
mov
jecxz
xchg
sub
icebp
sbb
and
pusha
push
xchg
lret
xor
pop
bound
dec
mov
jb
ficoms
sbb
mov
and
sub
std
dec
fimull
push
cld
push
insl
mov
xor
ljmp
sbb
jge
testl
repz
cmpsb
jge
mov
ljmp
sbb
les
data16
xchg
dec
cld
movl
lock
das
popa
mov
je
pusha
pop
clc
push
or
mov
adc
and
inc
sub
jl
jae
popf
fnstsw
pop
movsb
sub
mov
inc
mov
mov
xchg
adc
outsl
inc
sbb
stos
mov
mov
pop
mov
inc
aas
rclb
fnstenv
and
bswap
pop
sub
daa
ss
pop
pop
in
dec
sbb
les
dec
cmp
or
lret
decb
sub
or
cmp
mov
pusha
pusha
push
mov
out
ljmp
jnp
ljmp
aaa
and
movups
daa
lret
cmpsl
xorl
lock
jle
cmp
add
mov
dec
inc
inc
or
test
inc
sbb
mov
sar
mov
pushf
pop
sbb
lods
pop
or
pop
test
add
bound
jb
enter
dec
mov
push
incl
fscale
out
push
ffree
das
fistps
cmc
pop
cmp
cmc
int
inc
jp
adc
xorb
lcall
pushf
out
pop
sbb
push
lcall
jecxz
fsubr
sbb
and
xor
outsl
into
stos
notl
mov
sbb
das
aad
xchg
test
pusha
in
adc
push
fnstcw
inc
adc
dec
test
imul
and
inc
push
cmp
scas
xchg
xchg
lcall
jns
mov
faddp
inc
addr16
xchg
xor
push
je
add
outsb
inc
pop
dec
subb
jne
adcl
xlat
fdivrl
test
leave
push
rorl
mov
dec
add
js
pop
jmp
jb
dec
popf
enter
dec
mov
inc
xor
and
in
pop
sbb
xchg
pop
or
dec
repz
lods
mov
sbb
lods
xchg
or
adc
xchg
or
sub
jge
mov
jle
cmpsl
push
push
push
or
les
insb
and
mov
inc
les
lret
add
cmpsl
dec
cmp
jmp
inc
inc
mov
pop
insb
into
mov
mov
sub
inc
les
mov
rcl
sub
loopne
mov
mov
lods
sub
lock
test
xchg
aam
mov
int3
push
and
inc
mov
mov
enter
mov
clc
pop
inc
lods
addb
ret
test
jecxz
jo
mov
rclb
adc
data16
enter
xor
not
out
es
and
imul
cmp
push
mov
inc
ds
jne
mov
pop
or
jns
dec
sbb
mov
testb
or
sub
daa
inc
pop
rcrl
xchg
or
sub
mov
jnp
dec
xor
xor
int3
lahf
pop
test
fsubrl
std
mov
out
stos
jns
pop
test
jne
incb
xchg
ja
ret
inc
in
lds
enter
and
lret
pop
ss
cmp
sbb
jle
and
js
jo
iret
clc
pop
jnp
xor
mov
loop
add
jle
xor
repz
out
mov
rclb
fmull
ret
jle
rol
cli
jno
xchg
push
test
das
ret
test
mov
mov
push
and
cli
push
and
scas
in
jecxz
mov
mov
pop
fsubr
jns
aam
fisubs
sub
imul
sub
mov
decb
dec
call
test
xchg
push
xchg
or
cmp
lret
dec
nop
ljmp
out
jnp
dec
cli
sub
and
outsl
push
out
dec
push
sti
or
and
in
scas
or
and
fs
movsb
decb
out
sahf
fcmovu
mov
mov
sub
add
std
in
mov
nop
aad
push
pop
push
xlat
push
dec
mov
mov
mov
push
adc
shlb
mov
fcoms
jbe
int3
fs
test
out
and
lods
push
rcrb
fwait
pop
fwait
loope
push
dec
and
cmp
and
clc
adc
add
mulb
popl
cmpsl
sbb
inc
out
fmuls
stc
fildll
mov
imull
out
insl
sub
sub
jnp
rcl
and
das
or
pop
sub
vcmpss
idivl
faddl
loopne
sub
clc
sahf
cwtl
cmp
outsb
out
je
fdivl
jl
sbb
sub
and
adc
pop
add
jnp
xchg
push
loop
fs
add
dec
pop
in
outsb
das
out
popa
jg
mov
cld
fildl
nop
push
cltd
pushf
outsl
ret
cwtl
lods
jecxz
xchg
jle
mov
jp
mov
shlb
inc
push
test
loopne
mov
ds
or
call
jge
and
add
int
into
out
ds
xchg
mov
lcall
mov
fdivl
xorl
fincstp
mov
in
sbb
iret
mov
jge
std
add
mov
lods
and
sahf
inc
sahf
sub
mov
sbb
xorl
pop
fnstenv
es
and
lret
sub
test
jl
xchg
cmp
jmp
arpl
fistps
cmp
add
mov
push
push
xchg
scas
lea
mov
dec
test
cmpsb
cmpsl
out
xchg
sahf
push
inc
in
jno
or
lret
xor
cmpb
ja
xchg
mov
mov
movhps
iret
or
scas
inc
or
movsb
iret
stos
inc
test
add
push
pop
jg
icebp
leave
ret
out
add
xor
sbb
push
cwtl
lcall
pop
sbb
mov
push
mov
xchg
ljmp
imul
lahf
stc
nop
fcomip
dec
mov
faddp
fcoms
cmp
adc
loop
adc
lods
rcll
push
ss
push
test
add
jl
xchg
push
aad
jo
cld
adc
in
out
xchg
out
mov
in
call
dec
sub
inc
sti
cmpsl
xor
das
push
inc
dec
sub
mov
stos
cmc
daa
sahf
jne
mov
push
sub
add
insl
adc
mov
mov
mov
enter
push
push
jo
imul
fidivrs
flds
inc
shll
aas
push
mov
pushf
sbb
pop
jns
cltd
xchg
sub
inc
jecxz
pushf
inc
insl
adc
mov
repz
jge
mov
arpl
and
xor
xor
imul
fnsave
sub
mov
lock
int3
lret
push
jno
xor
mov
jl
into
inc
or
jae
les
and
jmp
jnp
inc
pop
decl
in
mov
sub
orb
or
jns
ss
sti
push
outsb
popa
inc
int3
test
loop
cmp
inc
push
inc
jb,pt
lahf
mov
mov
repz
sbb
aas
jmp
and
add
in
clc
icebp
leave
insl
mov
das
test
repnz
daa
sbb
les
or
cmpsb
add
test
insl
lahf
pop
cs
mov
add
stos
cmp
inc
lret
jbe
shrb
mov
pop
or
sub
lcall
push
add
push
out
andb
add
pop
dec
inc
rclb
jg
loope
sbb
sbb
add
add
fstp
loopne
out
pop
push
pop
pop
cmp
xchg
sbb
dec
loopne
or
mov
or
test
ret
lret
ret
add
sbb
or
jae
mov
push
sbb
sbb
push
xor
mov
add
ss
out
pushf
cwtl
cmp
call
xchg
push
insb
out
ret
cmc
aaa
lds
dec
cltd
mov
dec
or
adc
adc
loopne
sub
insb
lds
nop
sub
aas
and
cmpsl
push
icebp
test
mov
mov
push
into
push
loope
loope
sahf
xor
xchg
push
add
in
mull
cmp
mov
sbb
mov
es
int3
nop
xlat
lret
cmp
inc
mov
and
cmc
cmp
cmp
mov
mov
fsubs
fcoml
inc
jl
adc
cmp
outsb
out
adc
scas
testb
cmp
mov
pop
xchg
pop
pop
rcr
mov
mov
or
dec
inc
mov
cltd
push
ds
imul
repnz
ret
jecxz
jo
push
and
cwtl
adc
test
mov
inc
mov
xchg
push
mov
adc
cmpsb
into
gs
out
es
pop
and
lcall
cli
cmp
mov
aam
lods
daa
inc
and
mov
xlat
or
mov
mov
lcall
dec
aas
or
aaa
xor
sbb
aaa
shrb
pusha
bound
lods
xchg
outsl
loopne
pop
adcl
and
inc
cmp
mov
cmpl
mov
jbe
lahf
adc
xchg
dec
cld
pop
imul
add
xor
and
inc
dec
dec
scas
faddp
and
push
imul
push
mov
hlt
movsb
jge
mov
insl
add
int
ret
loope
aad
sbb
arpl
pop
or
daa
fwait
subb
sahf
outsl
repnz
push
test
sbb
cld
sbb
and
sbb
xchg
into
rcr
sbbb
call
in
hlt
stc
loope
adc
std
loope
adc
cltd
inc
inc
cmc
cmp
fwait
mov
add
jo
pop
push
sbb
cmp
dec
ja
fmulp
mov
and
loope
stos
gs
mov
in
test
incl
or
mov
stos
adc
popf
cmp
xor
jl
jp
pcmpeqw
cmp
sbb
add
push
lock
sbb
jge
or
test
pop
xchg
dec
mov
out
jbe
popa
mov
movsl
das
sub
mov
leave
stos
mov
or
inc
out
out
inc
mov
pushf
push
orb
jmp
mov
ds
mov
in
es
inc
push
xor
mov
mov
jno
mov
xlat
mov
lret
aad
stc
xchg
std
xchg
lods
push
adc
push
arpl
outsb
dec
movl
ret
mov
mov
push
inc
mov
je
cmp
insl
mov
xchg
pop
xchg
sub
pop
aam
out
pushf
std
sub
sbb
inc
pop
inc
paddusw
kxnorb
mov
into
sahf
or
adc
sbb
push
cmpb
sbb
insb
sbb
ljmp
mov
outsb
cmp
cwtl
pop
xor
das
std
aam
loopne
outsl
aaa
dec
inc
loopne
test
loope
dec
xchg
repnz
xchg
pop
xchg
fwait
mov
ja
push
outsl
les
sahf
push
ds
outsb
mov
lods
jnp
in
iret
adc
mov
sti
sub
aas
jnp
mov
adc
jg
xchg
insb
imul
or
lcall
mov
sub
shlb
mov
lahf
shlb
inc
ds
fwait
push
jnp
enter
mov
xchg
cmp
xlat
pop
pop
mov
shll
out
int3
sub
lret
dec
ret
or
imul
stos
inc
xchg
mov
test
sub
gs
imul
cli
jno
sub
mov
mov
sub
out
mov
js
jne
xchg
les
aam
popf
sub
insb
lods
shrl
outsl
mov
outsb
loopne
test
adc
jge
adc
dec
stos
int3
dec
dec
dec
arpl
inc
pop
in
movsl
or
ret
imull
outsl
xor
loope
jg
test
outsl
jbe
mov
std
xlat
imul
fsubrl
aam
lret
into
pop
push
dec
mov
jne
jns
adc
pop
imul
cmp
fwait
enter
mov
sahf
jl
inc
mov
mov
pop
cmp
xchg
cltd
aas
jmp
push
dec
fidivs
mov
cmp
lret
cli
mov
pop
mov
xor
jae
and
nop
jg
scas
popf
dec
jnp
mov
sub
mov
cld
inc
add
mov
or
lea
repz
cli
jo
sbb
jl
pop
jno
and
xchg
add
fcoms
shll
adc
in
mov
push
jmp
es
mov
test
adc
push
inc
sbb
fcompl
xlat
adc
push
fwait
ret
div
and
mov
push
incl
jmp
add
ret
ret
cli
sub
test
iret
fidivs
lods
lds
jp
cmc
lds
adc
jp
dec
adc
lock
mov
lock
aad
push
xor
rolb
lret
pop
and
shrb
sbb
aad
cmp
mov
pop
icebp
arpl
mov
or
cmp
xorb
scas
jmp
push
jb
aas
jp
jge
cmp
enter
or
cmp
cmp
mov
rorl
ret
lahf
push
dec
fcmovnb
mov
inc
out
pop
jae
shlb
or
mov
adc
sub
inc
daa
mov
scas
lock
daa
dec
xor
stc
push
jge
inc
xor
mov
sbb
loop
dec
ds
cmpsl
jge
out
sbb
sbb
mov
dec
ja
cmp
inc
jg
mov
push
scas
pop
lret
rcr
jl
add
and
xchg
dec
push
jo
jne
or
outsl
inc
movsl
jo
outsb
and
scas
xchg
mov
outsl
mov
mov
loopne
rcrl
scas
rcrl
mov
push
jecxz
mov
xlat
jo
sub
mov
cltd
mov
movb
clc
lods
mov
out
icebp
xor
mov
xchg
or
jg
or
sbb
mov
xlat
lret
mov
in
sbb
out
inc
cld
gs
std
lea
jp
fsubrs
gs
jmp
jmp
jno
sbb
pop
and
stos
push
dec
pushw
bound
iret
cmp
push
fadds
pop
xor
es
adc
sahf
enter
in
sbb
out
xchg
jno
sbb
les
pushf
jg
out
xor
pop
pop
mov
cli
jecxz
loope
sbb
aam
mov
addr16
loopne
movb
cld
test
fwait
mov
mov
adc
dec
jg
xchg
icebp
pop
add
into
sbb
dec
testb
xor
jno
pop
or
popa
or
push
ljmp
divl
in
adc
fistl
into
or
iret
in
decb
int3
fiadds
xchg
adc
cmp
sbb
inc
inc
fidivrs
js
inc
rcr
adc
sbb
dec
adc
je
nop
imul
mov
or
dec
lahf
test
mov
cmp
sahf
jnp
or
out
dec
push
lods
cs
xchg
pushf
fcmovnbe
cs
and
sbb
lods
xor
sbb
nop
mov
mov
subb
out
dec
cld
rcrb
popa
mov
mov
addr16
imul
mov
mov
enter
add
outsb
and
sbb
fildll
negl
add
push
je
sbb
inc
mov
pop
sbb
lods
ret
test
icebp
xor
inc
adc
push
clc
add
lock
sub
out
sbb
mov
pop
xchg
push
mov
lea
pop
push
movsb
push
mov
jns
lcall
outsl
dec
imul
cmpb
or
int3
xchg
jge
push
rclb
in
jno
jbe
gs
pop
pop
xchg
sti
into
and
outsb
xchg
cmpsb
jae
adc
push
xchg
insl
mov
cs
mov
iret
cltd
xor
std
push
mov
and
rcr
mov
movsb
jbe
push
movsl
ss
cwtl
or
lea
mov
xchg
insb
leave
cmp
pop
mov
xor
stos
pushl
or
mov
jbe
pop
xchg
shll
ror
inc
out
stos
out
pop
jmp
mov
cmp
cmp
xor
lret
cmc
xor
mov
test
pop
out
lea
push
fsubp
int3
imul
jg
sarl
xchg
jl
mull
or
xorl
adc
call
fiaddl
fwait
int
shl
pop
aas
cmpsl
pop
dec
sbb
fidivrl
mov
add
incl
push
js
fldenv
mov
gs
insb
push
jp
cmp
enter
dec
fcomps
aas
push
or
pop
jno
in
jl
and
repz
or
es
xor
packssdw
ds
hlt
test
sahf
fs
mov
pop
cmp
fdivp
js
xlat
pop
int3
mov
out
cltd
adc
fistpl
aad
push
fwait
lods
sbb
inc
fwait
jo
lcall
enter
adc
aad
push
jg
jmp
pop
push
es
inc
mov
adc
or
mov
push
js,pt
dec
mov
in
in
inc
imul
fldcw
sub
push
fwait
mov
jge
ret
inc
adc
jne
xlat
cmpsb
mov
xor
stos
mov
push
push
inc
stc
add
sbb
clc
xchg
and
ljmp
mov
addr16
int
mov
das
in
push
push
js
adc
sub
into
add
mov
mov
push
lds
xchg
cli
es
fs
fstpt
frstor
fcoml
repz
push
add
ljmp
sub
imul
add
jg
mov
popa
lea
popf
mov
push
sbb
xchg
hlt
movsb
and
vaddpd
das
leave
scas
sti
icebp
jnp
in
jnp
mov
or
aaa
xchg
das
pop
xor
imul
or
push
arpl
mov
sub
add
sarl
xchg
int
or
sbb
mov
push
mov
xor
pop
jle
xchg
out
xchg
inc
js
mov
jle
jno
jge
fs
xchg
inc
aam
mov
jp
insb
xchg
sub
stc
repnz
xor
mov
cmp
lea
dec
jmp
out
sbb
ja
fists
dec
jp
outsb
add
mov
fnstsw
inc
push
loopne
loop
xchg
mov
cmpsb
inc
ja
and
rcrb
imul
jo
into
lret
push
js
sbb
push
mov
dec
pushf
fistpl
mov
xchg
cli
dec
sbb
mov
rcrb
mov
ds
in
repnz
add
mov
push
subb
mov
repnz
icebp
leave
push
push
mov
adc
jmp
mov
fisubl
sahf
and
push
fldt
inc
adc
push
popf
adc
mov
push
xor
out
in
jge
cmp
sub
inc
pop
push
fildl
js
out
push
aad
sbb
ffreep
pushf
push
pop
aas
jb
enter
push
sbb
jge
push
repz
pop
enter
gs
add
sub
sbb
push
mov
insb
inc
fnstsw
sub
jns
ss
ffreep
pop
shlb
jne
repz
and
cmpsb
dec
stos
dec
shrl
cld
mov
push
xchg
sbb
fistl
fldt
mov
int
popa
dec
negb
inc
pushl
pop
adc
mov
subl
mov
inc
dec
jae
sub
test
inc
imul
push
test
lea
lock
pusha
outsl
jg
movsb
pop
leave
jns
or
add
xchg
cmp
push
mov
dec
sbbb
jnp
mov
aas
je
out
push
mov
push
or
mov
lock
lock
mov
leave
adc
mov
xor
mov
mov
aam
movsb
push
addr16
or
je
sub
lcall
dec
in
aaa
pusha
sbb
es
push
cmp
lcall
notl
push
sti
popa
clc
mov
sub
imul
sub
lret
icebp
iret
ss
jg
push
dec
adc
xchg
or
mov
loope
sbb
pusha
cmpsb
or
sub
loop
inc
sub
lahf
fldl2e
jae
mov
lds
pushf
lahf
xchg
add
daa
popf
subl
push
mov
lret
std
adc
rol
add
adc
sbb
cmpsb
iret
outsl
jmp
mov
ret
les
sub
inc
pop
call
insb
inc
add
xchg
xchg
call
inc
and
mov
loope
adc
adc
add
mov
sbb
dec
push
in
leave
sub
dec
inc
iret
pushf
lods
dec
out
aad
mov
cltd
sbb
fcomi
int3
xor
fisttpll
mov
lods
negl
cmp
mov
mov
ret
inc
mov
iret
jno
or
push
hlt
push
fldl
dec
push
je
push
flds
cs
adc
fdivrl
adc
fbstp
sarl
ret
and
repnz
adc
bound
adc
xchg
add
push
inc
mov
sub
imul
mov
inc
sub
addl
in
orl
mov
pop
popa
xor
xchg
sub
pop
jecxz
or
lods
dec
out
iret
test
push
sbb
push
les
add
jne
fsubs
add
ss
loope
mov
dec
or
xchg
fnstsw
loope
rclb
push
fisubs
adc
std
and
test
call
pop
mov
or
fs
outsl
push
xor
mov
sbb
jnp
and
xchg
pop
loop
lahf
inc
jno
movsb
fidivl
call
cmp
or
mov
push
push
mov
mov
push
iret
stos
xchg
rcrl
push
in
adc
ljmp
enter
daa
dec
or
inc
mov
mov
or
in
ret
insb
lock
fwait
or
push
nop
dec
movsl
lods
arpl
push
or
mov
addr16
mov
xor
dec
divl
fisttpll
or
mov
stos
std
xchg
ja
mov
sub
ret
jle
cld
add
scas
sbb
or
push
ss
sbb
out
imul
sbb
xor
mov
push
cmpsl
or
arpl
gs
mov
jae
subb
pop
repz
test
std
mov
jp
xchg
into
mov
mov
pop
je
std
push
data16
inc
jno
adc
xchg
jns
imul
dec
jmp
push
stc
push
mov
mov
push
sbb
lret
test
pushf
xchg
xlat
mov
xchg
aad
ljmp
sbb
jae
lret
push
sub
outsl
mov
push
movsb
mov
add
mov
iret
repnz
jmp
add
pop
mov
jae
xor
push
lcall
mov
add
fnstsw
xorl
lods
hlt
aam
lods
and
cmp
cmpsl
mov
addr16
fs
test
jle
in
pop
lods
fcmovu
loop
sbb
mov
mov
stc
cld
xchg
popf
inc
jle
pusha
push
dec
adc
loope
or
dec
adc
inc
sarb
les
inc
adc
adc
xchg
pop
hlt
inc
xor
sarb
sbb
loope
cmp
scas
add
xor
mov
imul
shrb
out
cmp
mov
scas
fs
enter
loopne
add
push
pop
aaa
nop
lods
cmpsb
inc
lock
xchg
sahf
rcl
xchg
shlb
outsl
pop
call
lods
mov
aad
aam
and
fs
xchg
fs
lret
pop
inc
lods
mov
sbbb
pop
and
mov
negb
mov
mov
dec
mov
inc
and
fidivl
je
das
xchg
daa
in
push
stc
test
mov
sahf
faddp
ror
andb
pop
jl
jp
jne
xchg
dec
pop
test
scas
jnp
mov
addr16
test
lds
xchg
lcall
sub
jg
jnp
cmpsb
lock
filds
sti
lret
hlt
ss
cltd
sbb
and
pusha
nop
cmp
icebp
sbb
cmp
mov
std
push
inc
pop
ljmp
bound
incl
out
push
xor
dec
in
lret
gs
mov
sub
push
cmpsl
dec
mov
and
cwtl
push
jmp
xlat
jns
add
rorl
mov
mov
inc
pop
in
out
mov
push
add
mov
pop
ret
pop
jl
enter
push
add
pop
cmp
cmpsb
add
out
cld
push
jns
adc
push
fcomi
add
sti
push
enter
pop
and
shrb
mov
cmp
or
int
aas
cmp
mov
jge
pop
dec
pushf
hlt
mov
hlt
push
cmpsb
cwtl
push
and
std
xchg
insl
les
je
pop
dec
adcl
fmull
fidivs
sbb
pop
push
cmp
repz
cmpsl
in
mov
cmp
add
push
orps
mov
scas
mov
push
stc
push
scas
loopne
sub
inc
adc
cli
sub
pop
inc
cld
cltd
mov
and
aas
and
dec
cmp
jae
sbb
sbb
and
jno
push
movsb
add
inc
push
cld
cltd
sbb
insl
cmp
xchg
out
dec
jae
outsl
in
pop
lret
shlb
and
insb
inc
push
sarl
sbb
repnz
add
cmp
push
dec
jno
ljmp
jmp
cmp
addr16
push
adc
std
aas
iret
je
cmpb
adc
outsb
out
adcl
mov
cmc
dec
popf
iret
inc
push
jecxz
in
fcomps
movsl
mov
in
loop
sti
fbld
sti
jne
pop
cmp
cmp
sub
push
sub
adc
fwait
dec
cmp
cmp
or
subb
inc
dec
pop
repz
loope
mov
mov
out
sahf
dec
jmp
and
mov
lret
imul
add
notl
push
mov
outsb
xchg
lods
nop
in
imull
sbb
repz
jl
dec
decl
mov
mov
mov
sub
pushw
je
jle
push
push
and
movsb
dec
or
jns
mov
flds
ret
jno
movsl
ficomps
mov
ret
and
xor
std
or
sbb
cmp
imul
das
fbstp
out
mov
mov
imul
and
jbe
mov
xchg
xor
mov
sbb
xor
cmp
or
xchg
mov
jns
test
add
xor
sbb
mov
leave
cmp
inc
repnz
test
shll
xor
inc
in
adc
inc
ljmp
fcmove
aad
ror
mov
mov
insl
in
in
andl
scas
mov
pop
std
add
mov
pusha
mov
mov
push
xchg
ljmp
cmpsl
fisubs
jno
push
pop
sbb
jg
mov
dec
push
stos
or
add
sub
test
or
aad
sub
sub
push
push
mov
sub
js
xor
inc
stos
mov
es
xchg
sub
call
jmp
fwait
mov
and
fmull
jle
idivl
dec
ss
insl
inc
fs
push
cld
pushf
and
mov
add
dec
or
add
repz
iret
fisubrl
jno
push
sub
fsubrl
mov
sbb
and
out
dec
cmc
jb
shll
popf
pop
repnz
jmp
cmp
outsb
in
loop
mov
andl
cmpsb
xor
inc
pop
test
xor
add
fldt
mov
aas
jo
push
ret
xorb
xchg
push
add
push
sahf
aaa
dec
push
sub
mov
push
adc
outsl
dec
inc
adc
pop
in
icebp
or
push
hlt
add
xor
sub
dec
pop
dec
or
xor
adc
cmp
movsl
dec
push
cmpsl
lret
mov
dec
inc
rcr
inc
pop
mov
aaa
or
mov
push
fld
call
imulb
and
xchg
inc
push
enter
subb
je
bound
dec
frstor
stc
lock
pop
and
pop
add
popf
pushf
xor
lcall
push
ror
loop
mov
fbld
push
ficoml
lea
lret
lret
cmc
and
pop
cld
cmp
push
mov
rcll
push
lahf
inc
call
adc
mov
sbb
mov
js
adc
push
push
sub
in
fcomip
gs
mov
push
xchg
and
push
and
jp
in
ret
enter
mov
fnstenv
xchg
leave
outsb
clc
popa
adc
xor
int3
pop
cld
push
inc
repz
jae
pop
inc
cltd
unpcklps
xor
in
push
insl
mov
or
mov
stos
mov
mov
int
inc
in
push
cmp
inc
aas
shll
adc
aaa
push
bound
insb
test
movsl
imul
dec
enter
sub
outsl
scas
aas
mov
sbb
es
lret
pop
pop
not
leave
add
out
inc
fwait
xor
sahf
iret
orb
mov
xor
outsb
xchg
aas
aam
out
call
test
push
xor
jle
lods
leave
add
cmpsb
cltd
dec
insl
sahf
mov
addb
ret
xor
add
xchg
es
xchg
pop
pop
add
mov
idivl
enter
aam
xchg
xchg
mov
cmpsb
push
popa
cmc
es
push
pop
jae
push
hlt
sub
imul
and
mov
movsl
stos
push
xadd
lret
sub
movsl
dec
adc
mov
ljmp
mov
inc
xlat
xorl
jle
test
jp
imul
xor
cld
aam
adc
test
jl
xor
xchg
lcall
and
mov
cmpsb
sub
rcrl
pop
fdivs
xchg
xchg
stos
or
imul
cmpsl
cs
orl
ja
test
inc
pop
repz
xor
xor
mov
xchg
faddl
in
subl
push
add
mov
push
xchg
and
nop
into
fsts
pop
aaa
gs
push
cmp
ret
sbb
mov
add
push
cmc
inc
test
inc
daa
pop
fwait
out
clc
bound
mov
and
loope
bound
dec
adc
jle
xchg
rorl
add
in
mov
pop
mov
mov
test
or
inc
sbb
pop
daa
xchg
xchg
mov
add
mov
lea
stc
test
test
repnz
mov
mov
es
pushf
jb
out
jnp
icebp
or
movsb
gs
mov
adc
lea
mov
pop
xor
inc
mov
loop
shlb
push
fiaddl
das
gs
pop
sub
jns
push
movsl
repnz
cmpsl
rorb
ja
imul
jbe
movsl
adc
adc
sub
or
sarl
cltd
push
push
lret
hlt
in
mov
and
mov
inc
sub
mov
mov
fmul
pop
in
adc
mov
mov
lods
xorb
and
sbb
cld
test
aam
or
jnp
fildll
dec
dec
pushf
inc
leave
push
push
xchg
daa
jo
test
add
lds
stos
jge
addr16
cs
cmpsl
outsl
cs
leave
push
sbb
cwtl
push
outsl
adc
call
mov
and
call
mov
iret
push
cmp
or
mov
sub
lds
sbb
int3
repz
dec
pop
cmp
jp
xchg
stos
inc
push
daa
lods
mov
movsl
pop
push
xchg
lret
pusha
xchg
push
xlat
cwtl
push
clc
mov
dec
incl
pushf
push
jp
out
xchg
je
mov
mov
lahf
adc
popa
sub
mov
andb
ljmp
and
xor
push
mov
loop
cmp
push
xchg
dec
dec
adc
stos
ljmp
push
mov
lock
mov
sbb
shl
mov
pusha
ljmp
adc
xchg
shrb
mov
cmp
ror
dec
addr16
inc
cltd
jmp
popa
test
mov
cmp
fimuls
and
dec
lret
movsl
push
jb
and
ret
mov
or
je
cld
fwait
jmp
scas
bound
mov
push
outsl
pushf
push
ljmp
lods
xchg
arpl
call
stos
lret
fwait
ret
fucomp
lds
dec
test
pop
and
xchg
mov
pop
push
pop
mov
adc
addr16
mov
fisubrl
pusha
gs
and
out
mov
fsubrl
cmp
iret
or
push
inc
das
leave
lock
cli
jp
and
adc
aam
or
stos
es
ss
insb
es
es
dec
jne
jns
in
js
test
mov
add
lcall
clc
xor
xchg
lret
sbb
jne
in
pop
pop
pop
jmp
bound
int3
jo
es
mov
out
stc
xchg
jns
cld
insl
es
je
adc
idivl
outsb
push
clc
insb
jno
mov
aad
shlb
xor
dec
lods
mov
add
xchg
pop
xchg
lahf
mov
call
movsb
testl
pop
ja
inc
inc
mov
std
or
pop
clc
push
push
jmp
cs
xchg
stos
dec
aaa
andl
pop
push
push
xor
cltd
pop
jge
adcb
jo
mov
fimuls
xchg
push
arpl
mov
stos
movsb
cld
or
dec
loopnew
or
mov
cld
repnz
mov
nop
cmpsb
pop
dec
and
or
xlat
fcomps
aaa
sbb
mov
pop
psrad
jns
adc
fdivrs
clc
mov
daa
mov
andl
sbb
push
iret
lock
lock
pop
add
xchg
pop
fld
aam
jae
dec
in
rclb
popf
stos
pop
add
out
jl
cmp
xchg
stos
lods
jmp
cmp
subb
lods
out
sbb
pop
outsl
out
das
popa
testb
enter
cmp
adc
cwtl
add
inc
inc
mov
icebp
dec
stos
or
insb
int
inc
or
in
fwait
jg
xchg
mov
sub
sbb
divl
mov
lahf
cmp
mov
jbe
mov
adc
inc
into
or
xchg
jp
rcrl
stc
sti
popf
push
dec
rcl
cwtl
dec
or
cli
fs
mov
cs
xor
mov
xor
cmp
lock
adc
pop
xor
xor
aas
aad
adc
sarb
sub
xchg
dec
fisttps
fists
imul
or
cld
sbb
jns
mov
or
pop
jne
imul
mov
fwait
push
jg
add
and
lret
mov
mov
repnz
gs
fsubrs
loop
pop
fsts
cwtl
insb
mov
sub
in
js
in
fstpl
iret
incl
jnp
movsb
punpcklwd
iret
test
jl
out
xchg
cmp
xor
movsl
dec
push
pop
dec
jb
sbb
enter
roll
mov
xchg
das
shrl
and
push
xchg
inc
or
cmp
stos
add
aaa
hlt
aam
adc
push
jae
std
jne
pop
xor
jne
mov
seto
and
jle
mov
xchg
add
mov
xchg
seto
xchg
add
inc
pop
bound
mov
xchg
out
movsb
lea
push
fs
lret
sbb
cmp
push
aas
sti
mov
movsb
mov
inc
xchg
iret
call
imul
sub
aas
pop
jb
mov
in
mov
pop
jl
dec
adc
ljmp
push
push
jecxz
aad
inc
sbb
cmp
mov
hlt
cltd
push
aam
test
mov
xor
test
lahf
push
dec
pop
push
clc
cmc
bound
cwtl
das
fwait
mov
push
out
jle
mov
stos
fdivl
orb
jecxz
xor
out
fdivrl
add
pop
pop
jbe
or
dec
out
flds
dec
dec
pop
fwait
inc
mov
jns
icebp
sti
roll
cmp
adc
dec
pop
insl
icebp
insb
mov
dec
mov
push
mov
push
add
pop
cwtl
call
jp
pop
mov
dec
ljmp
pop
xchg
fstl
mov
pop
and
dec
and
dec
pop
test
jb
iret
stc
add
sti
push
and
add
push
jmp
decl
xor
sti
test
cwtl
minps
std
add
fsubrl
test
adc
cmp
cmc
hlt
and
push
icebp
adc
outsb
rorl
add
shll
repz
pop
add
jecxz
loopne
sub
lds
dec
fbstp
adc
jmp
shl
lods
repz
mov
xchg
ficoml
pushf
rorb
inc
mov
jmp
jns
cli
xor
cmpsb
xchg
lds
fistps
jns
mov
divb
fisubrl
add
adc
cwtl
pushf
lret
fcmovne
rclb
xlat
lret
lock
loop
mov
sub
mov
pusha
xchg
pop
pop
lods
rclb
popf
in
outsb
lret
jl
testb
inc
fwait
mov
repz
rcl
xor
fcoml
jp
push
push
out
push
in
mov
xchg
push
subb
cmp
mov
sbb
adc
rcll
jge
cmp
negb
cs
popf
mov
imul
mov
mov
adc
rep
adc
xchg
xchg
ljmp
insb
insb
mov
pop
adc
push
and
mov
cmpsl
jmp
dec
push
cld
add
sub
push
dec
push
jle
mov
pop
push
add
add
stos
cmc
insl
dec
inc
fildll
mov
in
inc
shl
punpckhwd
jae
sbb
test
mov
jb
mov
hlt
push
or
sysenter
sbb
cmpsl
ja
add
clc
into
outsl
or
gs
dec
xlat
in
mov
pusha
sahf
cmpsl
jle
dec
and
std
mov
in
rcrl
pop
jg
push
dec
jmp
sbb
rol
add
lods
or
and
mov
sbbl
enter
xchg
mov
dec
inc
cmpsb
cmp
xor
cmpsl
jns
cmpsl
xor
sbb
sub
jno
push
cmp
pop
clc
push
test
push
and
out
and
loop
push
push
outsb
xor
stos
adc
stos
cmpsl
and
pop
jecxz
dec
test
das
jmp
daa
cmp
pop
add
fnstenv
mov
or
push
dec
push
cld
mov
mov
xor
negb
dec
orb
push
popf
in
fcomi
and
sti
fldl
sbb
out
stc
testl
mov
sub
cmpsb
icebp
imulb
test
js
bound
mov
test
lock
push
in
fnstenv
mov
pop
fcos
mov
xchg
jne
neg
and
insb
cwtl
mov
movsl
and
mov
dec
dec
repz
jecxz
mov
pop
sbb
pushl
outsb
jnp
mov
xchg
mov
repz
dec
mov
or
in
insb
lods
dec
out
cs
or
cbtw
pop
pop
stos
ficomps
mov
inc
stos
xor
out
adc
movb
inc
xchg
ljmp
dec
add
pop
jp
gs
pop
cmp
or
mov
lcall
jb
inc
popa
mov
inc
xor
lea
in
jg
mov
adc
cmp
fwait
ret
fdivr
xchg
stos
mov
adc
jo
cmp
fwait
xchg
mov
movsb
inc
push
mov
jb
daa
xchg
cmpsl
push
lock
pop
pusha
in
in
add
and
and
lcall
popa
adc
mov
pop
cmp
mov
loope,pt
push
sbb
dec
hlt
std
sub
jecxz
fwait
shr
hlt
lea
mov
negl
xchg
leave
pusha
pop
adc
push
xchg
jae
sbb
cmpsb
lret
dec
rcll
jae
pop
js
into
mov
jno
cmp
cmp
cltd
fildl
fwait
lea
sbb
dec
imul
xor
shlb
lds
and
call
pop
or
mov
pop
scas
sar
xchg
rorl
jbe
inc
ficoms
push
imul
call
in
sbb
out
movsl
fiaddl
pop
xor
sbb
cmpsl
adc
fimuls
sub
ja
je
popf
adc
or
jae
pop
sub
add
lahf
xchg
aad
and
push
fists
and
dec
and
pop
nop
adc
sahf
shrl
pop
push
add
adc
fdivrp
mov
push
cmp
add
lods
ss
xor
or
mov
dec
popf
fdivrl
push
stos
and
outsb
push
pop
or
jl
pusha
mov
push
sbb
and
and
pop
xchg
loop
mov
sbb
xorb
lods
push
sbb
loopne
or
lret
jle
push
lahf
and
jb
mov
loopne
inc
pusha
lcall
jmp
addb
mov
or
and
inc
repz
and
push
and
inc
push
sbb
addr16
stos
out
fimuls
repnz
pop
fdivrs
mov
fnstenv
aam
fisttpl
das
jne
add
fcmove
pop
fistps
xchg
nop
sti
aas
movb
pushf
and
icebp
or
movsb
jo
mov
mov
out
or
lahf
jp
jo
enter
sahf
outsl
or
xchg
pusha
inc
call
or
sbb
shl
iret
clc
pop
jl
call
cmp
push
pop
push
cld
in
xchg
xlat
cltd
push
in
lcall
lahf
xchg
push
sub
mov
idivb
push
mov
pop
xchg
or
iret
or
sub
ljmp
push
pop
leave
jmp
pop
jecxz
loopne
push
add
add
cld
repz
test
in
les
pop
cmp
pop
ss
dec
sub
cld
mov
inc
mov
lock
sbb
sub
sub
das
mov
jl
aad
mov
mov
jbe
and
pop
scas
xchg
cltd
pop
je
fsub
inc
sub
or
push
inc
sub
fdivs
jns
fstl
inc
cmp
js
add
cwtl
cmpsb
lods
out
adc
filds
addr16
mov
cwtl
stos
mov
cmc
hlt
mov
mov
fdivrp
aas
jl
call
sub
cmp
jno
pop
cltd
cltd
das
and
ret
in
mov
mov
push
lods
stos
jmp
insl
cmp
xor
or
xorl
jmp
xor
or
xor
fbld
cmp
inc
adc
jmp
jg
ret
sahf
mov
fadd
ljmp
adc
test
or
test
bound
sub
inc
xchg
stos
and
fldl
cli
into
pop
sbb
ljmp
scas
and
ret
pop
inc
xor
cmp
add
bound
lahf
adc
cmp
ret
nop
std
mov
cmpsl
hlt
and
lds
or
dec
jb
push
cmp
pop
outsb
pop
bound
hlt
out
cmpsl
test
fwait
pop
icebp
push
loop
daa
shll
cmpsl
call
mov
jns
clc
mov
pop
add
into
push
inc
jecxz
xchg
or
out
adc
outsl
and
aas
dec
pop
jbe
xor
mov
ret
mov
xor
dec
inc
xchg
jnp
mov
mov
fiadds
cwtl
sub
fwait
or
push
inc
es
inc
int3
xor
jo
or
and
ss
sbb
push
popl
mov
test
cltd
pusha
scas
jp
movsl
pop
mov
lret
mov
fwait
roll
xchg
push
scas
negb
pop
out
es
mov
and
xor
test
sub
hlt
imul
lret
add
and
sub
cmc
or
lods
repz
arpl
mov
mov
in
test
mov
dec
dec
int
daa
sahf
outsb
mov
or
sbb
pop
into
mov
loope
repnz
jbe
mov
mov
mov
loop
aam
movsl
insl
mov
loopne
or
jg
clc
pop
push
sub
push
dec
lret
adc
cs
in
sub
jl
sbb
pop
mov
jne
fsts
call
sbb
sub
dec
push
in
jmp
mov
into
loop
fmuls
icebp
jbe
sbb
pop
ss
add
add
pop
repnz
push
sbb
and
jns
inc
orb
fistpll
xchg
jne
jno
stos
mov
insb
mov
mov
dec
jno
jecxz
sarb
mov
cli
pop
cmp
push
fcoms
dec
xor
xchg
js
lcall
mov
enter
into
ds
into
ds
jmp
cmc
mov
test
mov
jnp
popa
cmc
sbb
outsb
in
adc
idivb
pcmpgtb
mov
jl
loope
fstpt
and
repz
test
jnp
es
leave
push
add
dec
dec
cmp
fnstcw
xchg
test
stos
lcall
jbe
int3
lahf
xchg
dec
aad
push
jno
xchg
pushf
xor
push
mov
cmp
movsl
clc
mov
xlat
dec
ds
repnz
sub
adc
and
mov
pushf
xor
mov
sub
or
pop
xchg
jae
mov
loop
mov
jge
cmp
lods
out
sub
es
add
jne
push
lcall
and
cwtl
sbb
jl
inc
in
inc
sbb
out
sbb
outsl
xchg
loop
xor
xor
add
test
cmp
int3
mov
es
xchg
add
add
dec
inc
gs
add
testl
jecxz
mov
dec
push
pusha
scas
decb
xchg
insb
xor
cmp
adc
xor
xchg
lcall
inc
push
pop
je
xor
xchg
je
mov
fdivs
adc
bound
aas
push
sbb
adc
sub
inc
in
cmp
lahf
add
aam
sub
clc
aam
ret
mov
push
cltd
and
sbb
mov
mov
ret
add
adc
loope
faddl
push
ret
lods
negl
out
jnp
sbb
clc
dec
es
xchg
pavgw
pop
jge
push
xchg
shl
addb
fsubl
or
jp
or
shll
sbb
mov
int
repnz
xchg
nop
xchg
sub
lahf
cwtl
adc
mov
pop
mov
mov
pop
movsb
inc
in
out
push
mov
push
lea
imul
mov
adc
leave
iret
cld
pop
or
jnp
adc
loope
imul
ds
pop
icebp
ror
scas
xchg
xchg
dec
inc
int
adc
pop
add
dec
xor
xchg
loope
adc
test
or
loope
add
sub
sahf
mov
nop
mov
pop
pushf
orb
cmp
mov
and
cmp
loopne
in
push
daa
xchg
scas
fwait
xor
or
pop
pusha
test
mull
jp
cmpsl
mov
fwait
cwtl
aaa
in
jg
pop
inc
std
jns
push
or
or
pop
sahf
pushf
dec
pushf
ja
xchg
mov
gs
out
mov
mov
sbbl
xchg
mov
xor
jae
ret
sbb
cmp
test
cmpsb
loop
ss
dec
xor
ljmp
jnp
cmc
test
pusha
shlb
adc
push
sahf
rol
repnz
lahf
jbe
inc
push
fwait
push
mov
insb
jo
out
pop
or
ret
mov
ja
adc
lahf
aad
out
das
inc
push
loopne
adc
sbb
pop
mov
dec
add
mov
sbb
fcmovbe
dec
bound
xchg
mov
dec
into
test
adc
repnz
movsl
ret
sbb
test
icebp
jge
inc
or
enter
sti
hlt
lret
mov
shll
decb
popf
adc
mov
mov
loope
int
cmpsl
dec
or
add
mov
jle
bound
shlb
jecxz,pn
lcall
test
or
fsubl
mov
xorl
mov
faddp
dec
popa
inc
jne
out
adc
in
push
lds
loope
xor
int
xchg
xchg
fnstsw
inc
inc
sarl
sub
ljmp
dec
out
int
push
cmp
rcll
cs
push
jge
jns
mov
mov
jbe
cmp
push
ja
jbe
push
xor
es
jl
rcll
xchg
test
xchg
into
jg
inc
add
jnp
or
lret
stos
dec
xchg
mov
jmp
jge
fisubl
lret
pop
jp
cmc
push
shll
pop
mov
sbbl
inc
xchg
mov
andb
orl
lds
lods
arpl
lcall
test
rorb
bound
inc
test
pop
pop
sbb
mov
adc
lods
cmp
leave
shlb
push
mov
je
incl
and
in
fldl
mov
sub
lds
push
push
mov
cld
out
fnstenv
lock
mov
inc
js
fbld
lock
in
fwait
lret
add
test
mov
ret
aaa
arpl
nop
lods
sub
pop
sub
push
aaa
aam
jecxz
push
xor
mov
enter
daa
bnd
out
pop
mov
comiss
rep
movsb
inc
fmul
int3
adc
std
fsubrl
lea
mov
outsb
add
add
in
shrb
or
ret
bnd
inc
mov
pop
xchg
sbb
sbb
mov
dec
insl
mov
or
mov
lret
add
ret
fdivs
dec
outsl
test
in
leave
adc
jo
jmpw
mov
mov
xor
xor
mov
add
mov
xchg
pusha
pop
loope
mov
ds
cli
sahf
fcoml
mov
xor
pusha
and
xor
sub
outsb
movsl
push
pop
inc
mov
push
push
or
in
jg
mov
pop
fadd
jmp
and
sbbb
ret
dec
stos
push
repnz
sub
aas
mov
data16
out
in
and
push
lahf
add
sub
dec
mov
scas
rorb
dec
push
aas
inc
and
mull
loop
in
ja
xlat
loope
dec
mov
sub
adc
mov
fists
stos
stc
add
sub
add
jns
aam
push
inc
es
repnz
fs
out
mov
pushf
inc
xchg
stc
jge
mov
pop
pusha
mov
xor
fs
lahf
lea
lahf
jg
out
push
outsb
sub
or
sbb
mov
cmc
mov
or
fwait
mov
mov
adc
sbb
aaa
xor
pop
jmp
setge
cmp
fwait
xor
sbb
call
out
mov
push
and
push
pandn
jp
in
es
mov
xor
test
lret
dec
jae
inc
xor
movsb
dec
and
dec
std
lcall
cltd
cwtl
jns
ljmp
mov
stc
das
add
pop
sbb
cmp
push
cmp
dec
enter
shll
sub
rol
jnp
divl
loopne
cmpsl
mov
mov
or
dec
xchg
das
out
xchg
jns
fimuls
icebp
inc
and
push
sub
je
push
pop
gs
dec
push
popa
push
mov
adcl
insl
push
stos
dec
rcrl
mov
cmp
in
or
sub
mov
xor
sbbb
and
notb
xchg
mov
xchg
xchg
fwait
sti
outsb
and
pusha
pop
adc
test
or
add
ja
movsb
xchg
div
sbb
and
cmp
xor
inc
add
pop
punpcklbw
in
adc
xchg
rclb
lcall
shll
mov
pop
xchg
rolb
negb
cld
mov
xchg
pop
aas
scas
push
sahf
dec
sar
mov
push
mov
xchg
sbb
outsb
jge
inc
fstl
loope
ljmp
sbbb
mov
adc
or
mov
or
mov
or
rclb
cmpl
add
clc
and
pop
jnp
hlt
cmp
dec
cmp
sub
mov
jmp
dec
pusha
popf
stc
mov
jnp
cmpb
push
jno
lods
cmp
adc
aam
lahf
lods
gs
dec
clc
mov
inc
xchg
pushf
mov
dec
dec
enter
jl
fnstsw
jae
out
xor
in
pushl
das
sbb
xchg
icebp
add
mov
aad
in
sub
mov
addr16
push
jnp
cmp
inc
jne
xor
push
mov
add
dec
mov
out
sub
adc
out
notb
fcmove
pop
daa
test
or
or
or
shrl
or
sti
xchg
adc
lahf
std
sti
bound
inc
cmpsl
inc
xchg
mov
inc
jle,pt
lods
and
fcmovnbe
call
test
sti
jle
jle
rcll
add
loopne
dec
je
mov
push
stc
movsl
pop
jb
imull
rol
cmp
add
shrb
xor
les
ret
insl
mov
mov
fists
fbstp
mov
mov
push
sahf
or
scas
mov
movsb
pop
add
imul
ret
sub
ljmp
xor
mov
cmp
mov
mov
xchg
add
push
jno
out
mov
or
or
cwtl
jb
fwait
xor
mov
pushf
int
scas
mov
pop
add
push
dec
lcall
sub
dec
sub
add
clc
loope
sub
mov
xor
pop
out
push
pushf
cmp
cmpb
xchg
sbb
imul
dec
test
lock
mov
mov
int
push
pop
test
pop
mov
imul
mov
js
push
dec
push
jae
sbb
push
mov
jo
jle
les
addr16
loop
sub
cwtl
clc
or
mov
shlb
adc
jecxz
xchg
ds
add
test
xchg
mov
int3
ret
mov
push
test
out
mov
aam
cmpsb
mov
aas
das
sahf
adc
cmp
jmp
loope
pop
divl
xchg
fisttpl
adc
inc
testl
xchg
loop
fbstp
push
jmp
pop
stos
jmp
fs
stos
sarl
adc
cmp
mov
into
mov
adc
das
lock
adc
mov
fldt
mov
movsb
add
push
jmp
inc
loope
and
mov
mov
scas
dec
popl
xchg
out
rcl
out
out
ljmp
xor
dec
xchg
mov
testb
insb
push
pop
mov
ds
mov
es
sub
out
mov
rolb
in
cmp
std
imul
push
mov
jns
ds
outsl
jg
xchg
cmp
push
rcrb
lock
mov
incl
mov
and
shlb
imul
mov
mov
shlb
movsb
push
es
mov
outsl
imul
fmulp
lret
push
iret
mov
mov
push
sti
cli
push
mov
test
imul
out
shlb
ret
fs
adc
push
gs
jmp
mov
leave
inc
mov
loope
jbe
adc
pop
xchg
aaa
pop
insl
xor
rcl
push
jo
push
pushl
lret
in
xor
fcoml
mov
push
outsl
outsb
nop
xor
inc
stos
fidivs
mov
out
jmp
cmp
ficoml
jnp
gs
mov
sub
mov
jge
push
ds
test
es
add
mov
mov
jb
cmp
adc
mov
pop
scas
xchg
loope
cpuid
push
sub
mov
in
scas
sub
add
jbe
fnsave
iret
ret
cmc
and
push
xchg
repz
mov
sub
lcall
mov
subl
jge
xor
jge
jmp
jmp
lods
xchg
sbb
cmp
adc
in
dec
dec
mov
cmp
sbb
test
cmpsb
mov
fs
in
cltd
aas
fstpt
nop
test
ja
pop
sbb
idivb
ss
enter
je
mov
and
jns
sti
lret
in
pop
cmp
and
xor
call
das
sub
dec
cmp
scas
push
inc
cli
dec
or
adc
jle
idivb
lahf
bnd
lods
out
mov
ret
in
push
js
ss
push
cmpsb
push
imul
out
and
std
mov
pop
mov
sti
and
mov
mov
lcall
jo
in
cs
lock
mov
ret
out
mov
mov
in
scas
repnz
push
test
pop
shl
add
test
shrb
fwait
xchg
xchg
daa
repnz
out
inc
xchg
sub
das
clc
sub
sbb
pop
and
inc
int
cmp
sub
inc
xchg
lock
fiadds
loope
fmull
sar
movsb
fiadds
mov
repnz
and
fincstp
xchg
adc
enter
inc
push
cli
add
jns
push
mov
jl
adcb
xor
inc
pop
xlat
stos
xchg
jmp
movsb
and
test
cmpsb
xchg
sbb
dec
stos
push
adc
jb
push
subb
outsl
xor
jnp
sar
clc
mov
jle
dec
cmpsl
mov
mov
lea
jo
push
ds
cmc
testl
and
inc
fldl
mov
fwait
lret
or
jne
ja
dec
push
js
fwait
mov
stos
subb
dec
dec
adc
and
inc
inc
push
leave
cltd
nop
xchg
cmc
test
xchg
xlat
sub
jns
xchg
pop
jne
sub
ds
lock
ja
push
add
jle
sbb
lret
into
test
and
mov
push
mov
je
pushf
and
or
je
stc
out
inc
cmp
pop
adc
les
cmpsl
jbe
inc
aas
push
jecxz
adc
cmp
sarl
jp
sahf
or
mov
mov
adc
or
addl
jns
mov
int3
xor
mov
inc
push
pop
dec
jne
dec
fnstcw
jne
movzbl
fisttps
jg
icebp
aas
jmp
sub
lods
fmuls
push
lock
cmp
nop
fisttpl
aas
test
mov
pop
jl
cmp
sub
xor
add
mov
push
sub
es
adc
adc
cmpsb
sti
les
in
lock
cli
mov
dec
fsubrs
imul
ss
pop
mov
mov
xor
dec
int3
xchg
adcl
xchg
xchg
ficoml
in
popl
adc
mov
enter
aad
mov
adc
aad
lret
and
movsb
pop
jmp
cmp
gs
add
xchg
pop
shl
shrl
in
iret
xchg
mov
jae
xor
jne
mov
sub
jae
cmp
xorl
dec
dec
xchg
xlat
insb
fs
imul
jne
pop
rcrb
jle
xor
adc
sub
lods
dec
es
cmp
pusha
and
sub
lods
icebp
sub
ror
shrl
aas
into
and
fisubrs
cmpsl
in
outsl
sbb
insl
aas
sbb
sub
mov
push
xchg
test
jp
clc
jl
adcb
and
xor
push
stos
mov
stos
or
andl
sbb
stos
cmp
mov
cmp
add
loope
jle
pop
inc
loope
imul
lds
mov
xchg
push
fstps
dec
add
sub
cld
push
sbb
call
fisttps
or
mov
sbb
dec
andps
jbe
dec
lcall
pop
pop
sbb
or
mov
scas
push
shlb
mov
or
ret
add
jae
cmp
inc
pop
add
xchg
add
mov
cs
cmpsl
xor
pushf
inc
xorl
mov
in
xrelease
call
adc
out
or
cli
mov
sbb
jne
push
lods
push
xchg
xor
or
sbb
jmp
or
out
fnstsw
xchg
cmpsl
or
jmp
and
xor
fists
push
faddl
sub
xlat
or
mov
adc
iret
inc
enter
gs
push
xchg
mov
dec
out
mov
jns
add
push
stos
sub
cmp
jmp
xor
enter
lret
mov
roll
cmpl
dec
jg
rcll
push
test
cmp
xlat
int3
out
mov
jmp
test
lret
push
xchg
rclb
rorb
lods
icebp
or
adc
sbb
movb
dec
data16
dec
pop
and
scas
aad
cmp
ficoms
jae
mov
loope
test
sbb
push
sbb
js
mov
cmp
pop
les
or
adc
adc
sub
movl
cmpl
insb
xor
aas
adc
inc
add
cmpsb
or
add
outsl
push
dec
pop
xchg
jp
cwtl
das
dec
ret
sbb
dec
xchg
cmp
jp
lea
std
pop
cmpsl
pushf
dec
out
or
dec
and
or
jg
inc
lock
inc
stos
cmpsl
das
ja
cmp
sbb
out
nop
and
mov
scas
js
and
and
adc
xchg
enter
ret
stos
movsl
jp
in
dec
pop
add
xchg
jb
add
out
dec
adc
adc
js
in
dec
mov
cmp
push
mov
ljmp
aas
mov
mov
cmc
mov
xchg
scas
mov
imul
mov
mov
jp
cmp
scas
inc
mov
pop
dec
cli
inc
sbb
lds
inc
adc
pop
mov
jecxz
sub
mov
shlb
popf
xor
sub
sbb
test
xchg
aaa
pop
pop
leave
scas
adc
fdivs
add
lods
pop
incb
adc
pop
lahf
insl
cmc
insl
adc
cs
fcoms
aaa
or
fnstcw
and
cli
jb
lds
sti
push
call
mov
leave
sti
fs
cli
push
and
mov
jg
xchg
cmp
in
in
inc
cmp
mov
xchg
aaa
mov
and
icebp
xchg
xor
int3
les
idivb
loop
add
add
stos
or
mov
xor
shll
jnp
and
xchg
mov
adc
pop
ret
popa
dec
pop
adc
and
adc
and
push
stc
pop
and
insb
out
in
int
adc
fstps
mov
cld
add
gs
mov
cmpsb
mov
adc
cld
push
insl
push
push
sub
loopne
push
sbb
nop
scas
orb
sbb
movsb
mov
dec
lods
pop
jge
sub
dec
inc
outsl
jge
lods
ds
sub
aas
loop
and
sub
dec
and
test
mov
nop
in
imul
mov
mov
fimuls
xlat
push
push
inc
mov
push
popa
shll
in
pop
mov
xchg
mov
arpl
or
push
mov
mov
stc
ss
jne
xchg
sti
cmp
jmp
les
ret
lret
add
sbb
lret
enter
mov
aas
pop
push
mov
int
mov
xor
mov
pop
rcl
inc
jge
and
addl
dec
je
scas
inc
push
jecxz
inc
jno
jns
push
dec
ret
lcall
pop
test
adcl
or
je
xorb
mov
push
lods
aas
push
aam
hlt
cld
cmpsl
ret
jl
jno
pop
js
push
ret
data16
cmpsl
fiaddl
cltd
adc
movl
sbb
outsb
data16
xor
pop
loope
sub
inc
test
mov
push
jne
ficomps
sbb
jle
call
arpl
jnp
mov
mov
add
ficoms
cmpsb
insb
inc
fucomi
shrl
adc
or
xor
cmpsb
jle
hlt
mov
pop
jmp
popa
aas
adc
shlb
mov
mov
sub
xor
es
loope
fidivrs
lock
repnz
mov
and
mov
mov
js
sbb
mov
das
cmovnp
out
enter
fmul
mov
imul
imul
push
lds
repnz
add
pop
cmp
xchg
dec
mov
pop
lods
pop
int
pusha
shll
dec
iret
fdivr
outsb
dec
sub
push
cmp
xchg
fwait
add
jl
lock
aam
push
aad
iret
imul
cmp
push
add
adc
leave
popf
add
mov
in
call
data16
outsb
jmp
mov
ds
sub
pop
sbb
push
fmulp
sar
sbb
xor
gs
xor
push
cmpsl
fisubrs
add
aas
js
in
ljmp
inc
pop
fnstsw
cwtl
out
add
ret
pop
xor
fistpll
scas
fists
mov
push
xor
jno
mov
cmp
dec
clc
push
inc
and
lds
pop
loop
cmpsb
mov
push
xor
stc
mov
lahf
sbb
je
repz
jno
into
sti
pop
sbbl
inc
pushf
iret
mov
cmpsl
pop
add
call
adc
push
mov
repnz
mov
mov
jl
or
imul
iret
adc
fsubrl
icebp
mov
in
insl
ljmp
sub
test
cmp
push
dec
sbb
inc
push
out
mov
push
das
push
jne
cmp
scas
stos
add
filds
mov
test
rolb
loope
int
add
out
divl
cmp
mov
add
negl
rcll
movsb
cmpsb
xchg
add
lcall
pop
call
add
mov
push
or
es
jmp
sub
std
xchg
loope
jmp
and
push
cmpsl
gs
ja
push
cmp
push
and
xchg
add
sbb
mov
movsl
inc
shrl
mov
xchg
mov
mov
add
out
pusha
sub
mov
sub
das
xchg
push
inc
sub
push
test
js
push
mov
mov
lea
sbb
push
adc
xchg
inc
mov
rorb
sub
add
jne
stos
mov
test
dec
dec
sub
push
and
ret
ja
mov
test
sti
cltd
test
fidivrs
push
out
lret
in
mov
xchg
sahf
std
fimuls
nop
cmp
or
mov
das
movsb
scas
fiaddl
inc
ja
daa
and
fsubs
roll
ret
ljmp
sub
pop
imul
in
pmuludq
jb
repz
ret
push
dec
pop
inc
cmpb
jmp
sahf
das
in
shl
adc
es
test
stos
cld
xor
xchg
xor
loope
les
cmp
movsl
mov
or
and
aaa
add
repnz
std
test
lock
les
in
mov
nop
aad
jno
cmp
std
jle
inc
sub
and
mov
push
push
inc
fdivl
mov
adc
mov
js
lcall
pusha
rcl
sbb
cmc
cmp
lea
js
lret
push
mov
les
mov
jecxz
cmp
dec
xor
pop
dec
icebp
cmpsl
aad
add
fcmovnb
test
cmpsb
out
arpl
jae
addr16
mov
fwait
mov
and
xchg
decl
dec
flds
cmpsb
pop
adc
test
add
sbb
jmp
sbb
sbb
or
and
cld
into
fists
fwait
jmp
mov
sub
movsl
mov
inc
push
pop
mov
and
mov
or
adc
or
inc
xchg
xchg
dec
int
je
mov
outsb
loop
ret
cmpb
inc
dec
fstps
dec
adc
sub
inc
cmp
jge
push
mov
loop
ret
mov
dec
lret
jp
add
cmpsl
mov
ret
imul
jge
mov
adc
or
cmpsb
jge
sbb
sti
sbb
or
xchg
mov
int3
mov
mov
ljmp
push
and
std
xorl
std
fisttpll
jmp
test
mov
xor
rorb
gs
mov
cmpsl
loope
push
mov
mov
es
int3
rcrl
data16
sbb
stos
repnz
mov
ss
nop
sub
cmp
cmp
push
addr16
jnp
xchg
inc
add
push
int3
mov
cmp
or
adc
xor
ss
xor
int
hlt
repz
in
push
xor
nop
adc
icebp
jp
sub
mov
xor
push
or
fs
dec
push
sub
pop
fucomp
popa
inc
xor
sbb
arpl
fwait
insl
jg
shrl
and
sbb
push
or
mov
mov
jle
jmp
sub
in
test
add
inc
mov
adc
test
lcall
cmpsb
cmp
sahf
and
sbbl
xchg
std
and
stos
iret
inc
xchg
jns
add
sub
pop
cld
mov
sbb
pop
mov
ss
jb
xor
mov
ss
inc
adc
aam
jbe
sbb
push
pop
mov
jb
mov
imul
add
pop
les
cmpsl
pop
dec
outsb
not
into
inc
cmpsl
repnz
inc
cmp
enter
and
mov
call
xor
jne
loopne
jecxz
in
ja
jnp
and
in
cmp
dec
jle
fsubp
xor
push
ret
insl
pop
arpl
mov
adc
adc
fistps
jae
scas
addl
je
lds
scas
jae
xchg
pushf
lds
imul
daa
fistps
push
xor
pushf
stos
push
sub
ror
mov
xchg
push
repnz
dec
scas
inc
jle
jle
xor
pop
xor
scas
sbb
xchg
sbb
rol
out
or
mov
std
mov
cmp
push
jae
xor
dec
or
mov
fstl
dec
clc
sbb
cmp
test
fdivrl
sbb
std
xchg
xchg
push
adc
xchg
xchg
pop
xchg
pop
subb
sub
mov
jle
and
mov
add
push
insb
es
xor
cs
les
popa
lods
cmp
lret
jp
test
pop
lcall
mov
fs
sub
xchg
daa
ret
lea
lea
outsl
jnp
sahf
mov
inc
jbe
jg
ljmp
adc
aas
ror
mov
in
or
sti
xor
xor
jle
pop
mov
mov
clc
das
lcall
push
cmp
fcoms
xor
pushf
xchg
icebp
mov
or
xchg
in
push
popa
xchg
ficoml
add
push
cltd
js
sbb
inc
out
outsb
mov
mov
push
icebp
sar
insb
push
or
insl
mov
les
or
iret
pop
into
and
mov
dec
fbstp
mov
les
cmp
ljmp
mov
repnz
xor
xor
sbb
test
or
push
xchg
push
mov
pop
pop
sbb
jb
in
sub
pop
roll
fisttps
enter
inc
xor
adc
lods
daa
movsb
inc
mov
add
mov
mov
dec
dec
mov
dec
sahf
push
dec
inc
dec
fwait
sbb
scas
push
loop
adc
dec
gs
test
adc
sbb
lock
inc
inc
push
rorb
inc
and
les
lods
fnstenv
adc
pop
inc
fcomps
dec
push
dec
or
push
jae
mov
mov
aam
add
xchg
std
mov
or
inc
js
ljmp
adcl
jns
test
push
test
cmp
sbb
xor
test
push
and
xchg
pop
loopne
sbbl
mov
rorb
icebp
lock
movsb
mov
push
cli
cmp
mov
or
lods
inc
nop
inc
imul
ss
je
test
add
cmp
ljmp
hlt
inc
pop
mov
pop
jle
mov
sbb
mov
jb
in
sarb
jbe
xchg
lret
cmp
mov
ret
fmuls
loop
ljmp
mov
ret
mov
jle
loop
mov
ds
xchg
mov
add
mov
in
xor
mov
rcl
xchg
jmp
mov
xlat
movsb
push
mov
and
mov
std
or
pop
dec
jne
mov
insb
ljmp
out
pop
xor
pop
or
adc
in
push
mov
js
pop
jmp
dec
cmpl
ret
push
pop
sub
iret
and
fistl
xor
cld
aad
mov
ds
mov
scas
push
xchg
aaa
mov
sbbl
jae
in
loop
jg
out
outsl
pop
outsl
xchg
aaa
cld
jno
shll
test
int
iret
cmc
push
aam
jbe
mov
and
lods
mov
mov
or
mov
je
stc
in
jecxz
aas
bound
cmpsl
sbb
cli
mov
loope
push
mov
popa
popaw
add
mov
iret
aas
out
out
lahf
test
sub
cmp
or
insl
jle
pop
jns
mov
outsl
cmp
pop
inc
fisubl
mov
push
aam
aas
add
scas
call
stos
sbb
adc
mov
cmc
call
inc
in
mov
pop
aam
cmc
xor
mov
dec
and
xchg
adc
imul
xchg
repz
sub
andl
ret
dec
bnd
iret
aad
gs
add
or
cli
in
jl
mov
in
xorl
loopne
dec
test
ret
or
ficompl
lret
mov
out
jno
bound
jle
push
add
fisubrs
mov
and
test
lea
lret
push
push
and
cmpsb
add
int
stc
sbb
ja
lods
mov
mov
sbb
leave
add
test
jb
fimuls
jg
xchg
xor
ret
ja
jae
repz
pop
loopne
jl
fldt
push
mov
fstpl
je
jle
dec
fndisi(8087
lcall
adc
les
inc
xor
xlat
dec
and
inc
push
pushf
pop
inc
add
test
cmp
insl
cltd
mov
sub
lods
sub
jg
adc
loopw
mov
test
ret
or
push
xchg
je
xor
jecxz
ds
mov
mov
push
sbb
jge
enter
shlb
fsubs
mov
std
rorb
lea
movl
sub
mov
jo
rcll
xlat
out
mov
shrb
dec
outsl
inc
mov
adc
outsl
lret
leave
fs
push
sub
pop
xchg
xor
movb
insl
mov
sub
popf
and
ror
or
mov
enter
test
ja
inc
and
push
xor
jbe
adc
dec
sti
jbe
int3
pop
or
add
rolb
xor
mov
scas
lods
aam
daa
lret
sbb
xlat
mov
add
and
or
shll
jbe
dec
scas
gs
push
gs
sti
pusha
rolb
dec
loope
subl
adc
mov
xlat
xchg
add
in
test
out
pop
inc
in
mov
outsb
sbb
lods
sub
pusha
cmp
sbb
inc
mov
dec
jne
sub
insb
lods
dec
sbb
addl
ret
jnp
push
jmp
push
cmp
adc
sbb
stc
push
mov
cmp
adc
cld
jp
popf
mov
enter
lods
sbb
cmp
xor
jae
bound
pusha
idivl
jno
das
gs
jecxz
add
ret
dec
xchg
cli
fstl
aad
mov
push
xchg
fwait
lods
daa
pop
rol
xor
xor
out
sub
xlat
jnp
sahf
and
fidivs
in
sub
lahf
ficoms
ret
sahf
shrb
xor
jbe
ret
sub
es
aas
cmc
pop
test
shll
sub
cmp
movsl
iret
mov
or
pop
iret
sbb
cmpsb
pusha
mov
dec
clc
sub
ror
jp
lret
inc
in
sti
push
lds
call
test
mov
scas
imul
mov
mov
cltd
sbb
fwait
int
shlb
gs
idivl
pop
jecxz
iret
cmp
cmp
pop
fmull
xchg
inc
sbb
xor
or
jbe
cmp
sbb
xor
std
xchg
ret
scas
out
mov
in
xchg
jg
in
jmp
xchg
mov
daa
mov
mov
or
rcr
push
scas
scas
jg
cmc
sbb
sub
add
cmpsl
add
pop
shll
inc
dec
xchg
out
cmpsl
arpl
dec
sbb
testb
xchg
iret
dec
shll
xor
mov
das
scas
adc
ret
cmp
lods
xchg
mov
mov
mov
dec
fucom
push
dec
xor
fists
cwtl
int
add
das
orl
xchg
lods
inc
sub
cwtl
js
mov
les
and
and
or
dec
jecxz
shlb
pop
jge
sub
sub
dec
mov
dec
sub
stos
xchg
daa
lahf
or
mov
std
xor
inc
mov
pushf
mov
jecxz
sarb
sub
rcll
out
mov
push
divl
jae
pusha
mov
xchg
cmpsb
mov
jp
pusha
sub
push
aam
adc
jmp
pop
inc
popf
in
test
xchg
pop
or
cltd
mov
mov
fisttpl
pop
in
subb
or
mov
out
cmc
sbb
clc
bound
mov
cmc
cmpsl
dec
mov
stc
outsb
lock
mov
jnp
mov
outsl
andl
in
sbb
dec
and
movsl
xchg
mov
iret
in
mov
pop
jg
repz
sbb
inc
idiv
xlat
add
and
cld
jo
dec
test
shrl
clc
sub
leave
notl
jae
daa
xchg
mov
mov
mov
fstpl
aas
lret
gs
test
icebp
xchg
xchg
jno
push
fstpt
scas
shll
pushf
push
mov
or
or
pop
daa
int
nop
jg
dec
jl
je
push
xor
std
or
int
addr16
mov
scas
sarb
in
xchg
scas
pushf
div
sbb
pushf
jle
iret
js
jns
jg
fdivrl
in
jo
xor
xchg
daa
xchg
rol
cmp
or
sahf
imul
fadds
sbb
push
dec
push
pop
dec
cmp
pop
ret
pop
and
dec
mov
jne
ret
gs
aam
xchg
xchg
in
int
addr16
fwait
decb
xchg
fs
pop
lret
jno
jae
or
inc
mov
mov
stc
mov
cmpsl
ds
jecxz
inc
jnp
rolb
dec
push
dec
mov
fisubrl
mov
and
loopne
test
fxch
sbb
sti
loop
inc
adc
cmpsb
pop
loop
xchg
nop
xchg
ret
ficoms
icebp
xchg
or
mov
mov
lret
out
scas
in
adc
dec
mov
jb
scas
sbb
mov
in
xchg
xchg
inc
push
lcall
jge
jecxz
add
into
dec
jo
test
mov
scas
cs
sbb
not
mov
xlat
or
fsubrp
mov
mov
stos
out
repnz
pop
mov
icebp
inc
pop
leave
jae
in
lret
fbld
daa
jge
jl
sbb
in
mov
out
mov
xor
ficoms
test
aad
mov
enter
fs
lcall
sub
lea
mov
fidivrl
shll
andl
add
or
xor
cmp
pop
addr16
in
test
jp
xor
mov
xor
fs
or
mov
xchg
sub
aam
sbb
aam
push
mov
test
mov
and
das
mov
aam
push
imul
inc
pop
shll
push
push
push
hlt
and
and
sub
sarl
xlat
sbb
and
cli
inc
pop
std
popa
sub
lds
and
std
dec
jp
inc
push
dec
std
xchg
fsubr
fistl
js
rcrb
les
ja
repz
test
aas
int3
out
push
sub
das
and
aaa
or
inc
fsubrl
data16
mov
jmp
cmp
push
mov
insb
pop
mov
push
rcll
outsl
add
std
cmp
shl
push
adc
push
outsb
mov
lods
inc
xor
dec
cltd
sti
imul
pushf
pop
sub
mov
arpl
imull
pop
imul
sbb
ljmp
insb
aas
mov
pop
inc
jno
mov
cmp
add
push
xor
or
inc
mov
jle
pop
out
jg
jbe
push
mov
imul
scas
add
jb
mov
int
inc
mov
sbb
push
sbb
test
mov
dec
pop
pop
inc
add
hlt
cmc
inc
or
and
xlat
inc
loopne
stc
and
mov
int3
das
sbb
leave
les
std
jecxz
xlat
je
repz
je
bound
cli
inc
jmp
daa
scas
out
fwait
dec
or
rcrb
sub
leave
mov
cltd
mov
dec
push
fmul
jge
into
fmul
mov
outsb
sbb
adc
insl
inc
insl
icebp
cmovle
pop
sbb
and
jae
into
rcrb
mov
add
push
pop
dec
call
push
enter
mov
in
and
test
sub
mov
inc
inc
je
mov
mov
mov
out
and
xor
mov
mov
test
mov
test
cmp
mov
outsb
dec
ljmp
lods
cmp
loopne
xor
jmp
jb
sbbb
ljmp
ljmp
std
xlat
test
mov
dec
mov
and
cld
xchg
movsl
je
hlt
mov
test
fbld
adc
fisttpll
nop
test
test
faddl
in
mov
rcrl
lea
aam
icebp
je
push
aam
pop
add
dec
cs
mov
out
clc
mov
jmp
jle
mov
and
adc
dec
lock
push
adc
xchg
out
jg
pop
mov
add
popf
and
push
or
mov
xchg
push
jle
mov
add
js
mov
mov
sbb
sti
and
lock
test
pushf
cmpl
lods
dec
outsl
jae
pop
xor
jp
sbb
sbb
push
xchg
push
ljmp
jge
out
add
inc
jo
xchg
pop
cmp
fistps
fadds
dec
cli
fnsave
sbb
pop
and
sub
fadds
dec
inc
les
sbb
pop
les
mov
jmp
mov
in
pusha
lods
jecxz
xorb
pop
sbb
mov
mov
xor
mov
pop
std
adc
add
push
add
imul
jmp
and
mov
jl
add
pop
push
push
cs
es
fucomp
adc
and
jl
or
dec
adc
pop
mov
cwtl
out
add
jmp
inc
int
jne
imul
mov
clc
popl
stos
xchg
fcmovbe
cmp
adc
jg
or
xchg
loopne
adc
cwtl
sbb
adc
jmp
cmp
jle
aad
jge
lret
rcll
mov
lcall
daa
or
jo
or
cltd
xchg
sub
lcall
adc
mov
outsb
iret
jecxz
cmpsb
gs
data16
mov
call
popa
mov
add
jmp
mov
add
and
xor
icebp
sub
jg
xor
div
jp
lcall
scas
pop
jae
xchg
xchg
add
xchg
xlat
jmp
adc
pandn
and
push
xchg
out
pop
mov
cmpsb
sub
mov
scas
inc
pop
nop
inc
nop
mov
and
insb
dec
jecxz
ja
jmp
add
mov
dec
inc
xchg
xor
xlat
cmpsb
icebp
std
ret
aaa
xor
dec
into
push
lods
sub
mov
adc
insb
mov
or
cwtl
out
inc
inc
add
cmc
mov
sbb
add
insb
inc
mov
clc
dec
lret
out
gs
mov
or
lahf
loope
out
jb
xchg
sbb
aaa
add
lcall
jmp
and
pusha
or
push
dec
repnz
push
mov
cld
jnp
mov
sti
mov
ja
out
push
jecxz
stos
cmp
inc
popf
stos
xor
aam
or
insb
pop
por
pop
jnp
pop
pop
or
pop
mov
cmp
jl
xor
sub
ja
or
sbb
lcall
imul
adc
in
imul
movsl
mov
mov
lock
sti
scas
mov
cld
aad
sbb
dec
jl
mov
pop
stc
sbb
jne
xchg
test
jmp
mov
cmc
loope
sub
mov
ret
fldt
arpl
fwait
into
dec
ljmp
sub
cs
aam
pushf
pusha
inc
xchg
ss
lcall
or
popf
les
mov
push
lea
repz
stos
xor
lret
sbb
lcall
in
cmpb
imull
or
movsb
add
into
push
xor
stos
or
das
push
dec
sbb
in
out
xchg
dec
popf
incb
sub
cld
sub
add
jle
dec
andb
pop
in
pop
ret
stc
adc
dec
jbe
orb
mov
stos
mov
int
shll
push
and
jno
xchg
mov
cmpsb
pop
adc
fbstp
or
loopne
cltd
jmp
rcrb
inc
lret
dec
mov
jo
mov
xchg
hlt
jb
or
sbb
xchg
pop
notl
fiadds
pusha
mov
aad
push
leave
pop
mov
dec
sbb
or
dec
cmp
and
rolb
xorb
ja
xor
pop
jo
push
shrl
dec
out
fsub
pushf
nop
dec
cwtl
push
ljmp
xchg
dec
sbbb
fdivp
push
cmp
xor
adc
dec
inc
cli
xchg
aad
and
int3
inc
mov
inc
add
negl
insb
cmpsl
xchg
mov
and
dec
lds
xchg
xchg
loope
mov
push
rcrb
lahf
sub
add
out
inc
aas
jnp
insl
add
sbb
xor
outsl
sub
imul
and
repz
cmp
cmpsl
es
inc
mov
scas
fcomi
sbb
cs
bound
js
cmp
push
cmp
jg
ja
in
or
stc
xchg
cmc
ds
movl
dec
mov
out
pop
dec
int3
lods
jbe
ljmp
jecxz
pusha
out
into
jmp
sub
mov
pop
xchg
mov
idivl
adc
dec
mov
mov
leave
sbb
out
testl
mov
mov
scas
outsb
les
dec
outsb
addl
pop
mov
xor
dec
mov
je
xor
push
insl
adc
mov
and
mov
inc
enter
leave
lock
rorl
mov
push
cwtl
dec
das
sti
inc
test
daa
shld
adc
jbe
jle
push
movsl
inc
xchg
test
jo
cmp
xchg
cmpsl
jmp
dec
test
push
movsl
or
insb
ss
stc
push
add
xchg
xor
mov
lret
imul
or
inc
push
fisubl
int
out
mov
enter
and
sarl
add
outsl
cmp
pop
adc
xchg
mov
xor
lock
stc
jo
cmp
dec
jecxz
inc
dec
pop
je
hlt
pushf
xchg
sbbb
iret
lods
and
repz
gs
ja
fwait
xchg
lcall
movsl
dec
pop
inc
mov
and
daa
sub
xchg
sbb
lock
mov
mov
xchg
add
xchg
test
xor
inc
mov
ss
fdivr
sbb
iret
repz
pusha
fisubl
fcomp
jp
out
js
mov
mov
mov
into
lock
inc
loope
inc
cmpsl
xchg
aad
ret
mov
fstps
movsb
rclb
inc
and
pop
into
fdivl
out
insl
outsl
push
adc
mov
xlat
sbb
mov
adc
leave
mov
mov
out
jmp
mov
or
cmp
aam
or
in
mov
imul
pushl
ljmp
dec
mov
cmp
push
push
jno,pn
mov
add
mov
mov
testb
fcomps
imul
test
mov
adc
imul
jne
sbb
cmpl
dec
daa
ss
cld
movsb
inc
mov
add
cmp
push
cmp
mov
lods
push
ret
inc
jp
out
mov
and
rclb
mov
adc
aas
out
mov
dec
jne
pop
popf
push
lods
xor
mov
mov
pop
xchg
sbb
lahf
pushf
sub
cmp
dec
or
add
dec
xchg
dec
bound
cmp
mov
jns
mov
out
flds
aas
adcl
pop
inc
idivb
xor
jge
push
mov
inc
mov
push
sbb
ja
lahf
mov
push
out
call
push
pop
mov
pop
jle
add
insl
adc
out
push
push
lahf
stc
pusha
or
add
cmp
inc
sub
pop
jns
movsb
cmpl
push
cmp
repnz
in
and
stos
jecxz
add
mov
jge
mov
xor
stc
dec
sbb
cmp
lahf
push
jg
push
xchg
jle
pop
mov
mov
sbb
sub
cmp
test
sbb
pop
ss
sbb
dec
cli
pushl
cmp
fisubs
in
and
xchg
or
outsl
dec
pop
cmp
sbbl
mov
and
insl
dec
jcxz
lahf
test
xchg
shrl
mov
loope
and
das
hlt
inc
ficoml
repz
xor
inc
out
xchg
push
pop
andl
into
test
pop
cld
dec
add
add
add
aad
sbb
push
add
mov
mov
int3
outsl
jb
test
insl
pop
loop
inc
sbb
xchg
fldl
fstl
adc
push
aad
cli
das
fstpl
in
pushf
lock
sbb
pop
stos
mov
cmp
popa
ret
xchg
call
adc
icebp
lods
sbb
stos
cmp
cmp
fbstp
xchg
sbb
lret
arpl
pop
mov
repnz
stos
cwtl
loope
xchg
pop
push
sub
jecxz
mov
roll
pop
mov
jbe
cli
xor
rolb
gs
divb
lock
mov
xchg
outsb
es
std
out
insl
out
mov
rorl
sbb
test
xor
scas
mov
shl
pop
jl
mov
xchg
push
mov
jbe
jl
adc
movsb
adc
cmp
mov
pop
call
in
adc
sub
mov
in
mov
push
mov
dec
loope
repz
jns
cmp
andl
or
roll
add
dec
in
cmpsl
in
jo
push
inc
aas
cmpb
cmpsl
dec
sbb
stos
or
xchg
and
mov
and
jne
or
and
sahf
es
stos
loopne
push
shlb
push
lahf
shr
and
test
sbb
lret
lds
movsl
dec
jae,pt
sub
lcall
fcmovu
jno
sub
push
lods
in
cs
xor
fdivs
mov
xchg
dec
or
inc
inc
dec
cli
outsl
mov
fstpt
pop
mov
call
adc
jle
sbb
dec
xchg
adc
ficoms
jae
jg
cmp
mov
out
xor
mov
xchg
repz
xchg
loop
inc
in
stos
out
js
js
cltd
mov
sahf
in
sbb
popa
jmp
shr
fcomp
ret
cmpsl
pop
adc
ja
imul
xor
mov
xchg
mov
jns
or
sbb
imulb
push
frstor
aad
jae
jle
push
cwtl
mov
sub
loopne
test
cmp
ss
jo
cld
aad
jl
and
and
loopne
adc
sbb
sub
clc
sbb
idiv
xchg
into
sbb
and
push
mov
jg
hlt
mov
jno
mov
incl
mov
sbb
sbb
fs
cmp
sarb
bound
movsb
ret
scas
out
jecxz
cmp
jne
xor
sub
sbb
dec
push
out
call
sbb
jle
leave
mov
xlat
adc
jl
adc
fistl
cld
inc
mov
lds
xlat
inc
jns
int
jle
inc
adc
dec
and
inc
sti
mov
sti
cmp
cli
pop
jbe
out
es
out
xor
sbb
xchg
int
jecxz
in
jae
mov
xor
lock
mov
sbb
loopne
fidivrs
xor
das
mov
in
clc
mov
rolb
test
sub
fistpl
js
inc
dec
or
fsubrs
stc
mov
mov
mov
scas
push
mov
xchg
imul
sub
or
mov
in
fs
and
rcr
pop
jp
xchg
loopne
pop
inc
pop
nop
xlat
xchg
xchg
or
ret
rorb
test
xchg
insb
stc
xor
shl
imul
sub
xor
pop
push
or
sub
mov
repnz
or
mov
sbb
bound
aaa
mov
push
dec
xor
sub
inc
jno
push
mov
aad
push
shr
sbb
sub
popa
xchg
notl
inc
mov
push
push
dec
int
stos
into
add
mov
cs
xchg
jmp
push
outsl
cmp
dec
cmpsl
mov
xchg
or
lahf
xor
popa
xor
push
jo
cmp
sar
stos
inc
rcr
cld
bound
push
adc
fwait
inc
add
hlt
sub
and
adc
sahf
arpl
cmpsl
lcall
pop
push
cwtl
incb
push
jo
inc
mov
mov
xor
jo
or
ljmp
and
popf
push
lock
dec
xchg
mov
sbb
or
lea
pop
and
mov
and
in
inc
cltd
lahf
ljmp
inc
sbbl
arpl
aam
sbb
dec
push
aas
mov
std
rol
lods
mov
adc
cmp
sub
dec
xchg
push
add
scas
push
imul
cmc
addr16
xchg
add
iret
cmc
aaa
ljmp
outsb
cmp
stos
std
mov
rcrl
into
mul
arpl
rcr
xchg
jb
je
into
sbb
sub
cmc
push
adc
pop
decb
iret
fmull
lds
lock
xchg
adc
cmp
mov
fxch
jns
pop
xchg
add
sub
pop
pushf
jns
or
dec
mov
cmc
es
xchg
ret
orb
or
ljmp
pop
mov
sub
jecxz
push
lods
imul
cmc
cmp
mov
jle
sahf
push
addr16
or
mov
testb
decl
sub
repz
cmp
popl
test
testl
push
jo
push
mov
jle
pop
mov
sbb
mov
ret
std
cwtl
popf
lea
push
jmp
clc
hlt
cmp
test
jmp
or
jo
or
mov
and
xchg
mov
dec
fwait
es
mov
inc
out
ljmp
adc
shrb
in
jp
sahf
stos
movsl
mov
jae
pop
mov
cwtl
xor
icebp
notw
ljmp
xor
jg
adc
add
out
jg
sub
pop
cmp
xchg
cmp
push
jae
push
cmp
xchg
mov
cmpsl
repnz
test
test
push
or
xchg
test
mov
int
or
sub
push
mov
mov
mov
mov
das
lret
int3
mov
push
cmp
mov
xchg
sbb
lcall
sbb
aas
dec
fmull
push
nop
ss
inc
xlat
mov
mulb
mov
sub
insb
sub
das
mov
out
inc
ret
dec
outsb
dec
std
xor
pusha
push
add
pusha
leave
jmp
jle
sbb
jecxz
pop
outsl
inc
cmp
mov
dec
mov
jg
nop
jo
pop
xorb
loop
outsl
movsb
or
arpl
pop
dec
fs
xlat
mov
push
sub
mov
addb
test
inc
lret
leave
jb
fsub
add
rcr
jge
pop
dec
inc
xor
stos
outsb
int3
aad
pop
jecxz
mov
or
push
push
mov
std
test
daa
mov
aas
inc
xor
inc
add
and
mov
arpl
fisubrl
sbb
dec
int
jns
aaa
orb
aaa
ret
out
add
loope
leave
nop
rcl
xchg
xchg
adc
pushf
mov
mov
xor
pop
push
sbb
jbe
jbe
sub
out
into
inc
or
xchg
and
out
xchg
mulb
lods
add
scas
in
mull
xor
jno
cli
bound
subl
out
les
inc
scas
add
mull
test
out
cltd
mov
getsec
hlt
push
arpl
mov
fnstcw
incb
mov
sti
int3
inc
xchg
stc
icebp
push
mov
jns
ret
and
fbstp
dec
iret
mov
push
arpl
xor
and
aaa
xor
mov
ror
xor
xchg
inc
sub
adc
jne
xor
cmp
mov
es
or
pop
pop
sub
in
mov
das
mov
das
cmpb
xor
sahf
pop
or
mov
xor
push
ficomps
shll
mov
arpl
jg
sarl
pusha
xor
test
popa
cmpsb
push
cli
or
mov
fs
shl
add
push
in
in
or
add
xorl
out
ja
push
jne
arpl
push
enter
fidivrl
rorl
in
mov
out
inc
pmaxsw
mov
xchg
imul
xchg
pop
popf
stos
sub
push
inc
in
pop
or
push
test
cmp
movsl
mov
inc
addr16
icebp
dec
xor
jmp
sub
xor
mov
outsl
xor
cmc
fst
pop
xchg
ret
jl
xchg
lahf
loopne
mov
popa
push
mov
xor
insl
sub
mov
lods
xor
test
adc
and
insb
ljmp
push
xor
movsl
xor
into
fisttpl
in
nop
fmuls
mov
pop
test
jno
lods
out
sub
jmp
jne
ljmp
add
push
ficoml
dec
adc
cwtl
repnz
aaa
repnz
inc
adc
int3
pop
into
aaa
cmp
add
loope
arpl
in
xchg
popa
cltd
imul
mov
inc
ret
out
mov
loop
mov
inc
gs
ljmp
test
leave
cmp
popf
mov
push
mov
push
sub
push
xor
adc
shll
jp
pop
ficompl
xchg
movsb
out
scas
inc
xchg
sub
dec
xchg
mov
insb
push
sbb
pusha
cmp
pop
xchg
jbe
lcall
pop
mov
addr16
fidivrs
sbb
test
dec
jmp
cmp
fld
pop
aam
pop
fstps
push
jne
jo
fsubp
jne
test
neg
push
call
cmpsb
rorb
fmull
lret
out
sbb
pop
loop
cmp
adc
dec
pop
pop
testb
insl
imul
cmp
dec
xchg
addb
icebp
nop
mov
test
outsb
pop
add
int
push
outsb
adc
lea
xor
xor
cmpsb
xor
outsl
lret
std
clc
xchg
add
pop
push
cmp
cmpsl
mov
mov
xchg
add
pop
shll
sti
push
arpl
mov
pop
mov
adc
inc
push
pop
xchg
and
mov
clc
adc
xchg
add
sbb
mov
lds
xchg
into
sub
inc
xchg
test
mov
cltd
jle
pop
mov
mov
sbb
mov
insl
pop
jp
lds
and
out
out
dec
mov
push
sub
ret
fbld
xor
mov
mov
sbb
cmp
pop
inc
and
insb
pop
xchg
mov
fsubs
cmp
clc
lods
movsl
sub
adc
sub
stos
inc
lds
insl
adc
jg
push
insl
sbb
xor
ror
pop
push
pusha
push
add
rclb
cli
xchg
jmp
sub
movsb
test
jmp
ja
jns
sahf
dec
pop
add
cs
mov
xorb
mov
lret
iret
mov
add
mov
lea
xor
cmp
outsl
iret
mov
shl
outsb
les
addb
orb
fidivs
sbb
gs
addr16
fsubr
dec
add
ficomps
mov
loopne
lods
gs
mov
testl
push
xchg
pop
daa
add
loope
xor
pop
popf
adc
jb
sbb
cmp
push
jns
out
lods
testl
xchg
mov
inc
sub
push
add
sub
dec
ljmp
and
jge
lods
adc
or
pop
ljmp
in
and
xor
aas
or
xchg
stos
sub
xor
stc
push
xchg
adc
xchg
call
xor
mov
in
adc
mov
push
jns
jne
cmpsl
das
mov
repnz
cmpsl
xor
ss
or
call
push
hlt
lcall
xchg
push
ds
stos
cmc
nop
in
mov
cwtl
or
idivb
jge
pop
scas
mov
mov
subb
out
mov
imul
push
movl
dec
add
rolb
jg
into
mov
dec
mov
outsb
out
cmp
xor
adc
les
in
xchg
or
lahf
or
dec
in
inc
movl
sbb
push
insl
ds
fcmovb
add
in
mov
adc
mov
jbe
pop
adc
cmp
mov
sub
fisubrl
adc
aam
cmp
inc
dec
mov
leave
insb
jns
mov
push
insl
jmp
mov
loop
jbe
push
gs
insb
cld
aas
or
and
lret
inc
fcoml
arpl
sub
mov
jp
xor
mov
mov
push
jg
andl
xor
inc
pop
insb
sbb
loope
repz
sbb
pop
mov
and
adc
repz
ds
test
and
aad
sar
test
shlb
scas
cltd
clc
jnp
add
in
jnp
outsl
inc
xor
or
cmpsb
out
or
fnstcw
mov
popa
cli
pop
pushf
jnp
lods
fdivrs
shlb
fildl
je
xchg
dec
and
dec
mov
sbb
addr16
js
fisubs
pop
es
jno
jne
lea
nop
xlat
mov
int
cmpsb
mov
xor
movsl
test
pushf
mov
mov
mov
decl
mov
lcall
call
out
std
dec
mov
mov
lds
dec
push
mov
lcall
sbb
pop
adc
sub
fisttps
pop
pop
cli
jge
in
add
pop
dec
cli
pop
xor
jecxz
sbb
pop
jg
jp
add
ds
je
dec
lahf
mov
xchg
jne
xchg
dec
call
das
jns
sbb
rcll
stos
movsb
cld
adc
pop
pop
push
mov
lcall
sub
daa
mov
fmuls
aas
cmp
dec
mov
out
repz
pop
scas
cmpsl
jp
adcl
xchg
outsb
xchg
push
lret
daa
or
call
fcomi
or
inc
mov
mov
and
push
test
clc
dec
pop
cmp
sbb
loope
fucomp
icebp
aaa
scas
aad
daa
xlat
loope
dec
dec
int3
ss
pop
pop
rorb
xchg
mov
jmp
add
dec
pop
lahf
cmp
add
das
stc
add
lcall
mov
jl
in
cmp
xchg
stc
cli
call
push
dec
es
pop
outsb
push
fidivrs
ret
cld
test
xor
cli
and
lods
std
inc
jl
test
sbb
gs
imull
dec
dec
sbb
rorb
pop
lret
jo
sub
push
in
in
mov
pop
in
xchg
dec
inc
cld
adc
fimull
adc
xchg
pop
subl
or
adc
iret
test
xchg
xor
test
cli
imul
xor
repz
cli
cs
pusha
lcall
cmc
inc
inc
cmp
xchg
push
dec
rcrb
aaa
mov
sub
roll
mov
int
xchg
add
sti
insl
fsubrl
loop
lea
in
mov
mov
jo
mov
push
fisttpl
add
das
popf
lods
jp
cs
mov
add
mov
lea
sarb
lds
ja
pop
gs
popa
sbb
scas
adc
ja
add
mov
fsubl
cld
jb
and
imul
ret
sub
sti
mov
repz
and
push
mov
inc
mov
adc
sub
pop
mov
das
popa
leave
fidivs
sahf
adc
fwait
arpl
pop
in
fcomi
pop
test
out
stos
sub
xchg
adc
jp
imul
xchg
mov
sub
pop
aad
cld
jb
lods
jno
call
mov
pop
hlt
jl
fistps
frstor
push
sub
pop
out
xor
jns
pusha
mov
sub
jnp
out
adc
lret
insb
fldl
jbe
mov
mov
cmp
dec
sbbb
cli
mov
repz
test
and
aaa
std
pop
cmp
push
adc
fwait
insl
out
xor
outsb
pop
repnz
push
fiaddl
pop
ljmp
cld
pop
mov
ret
test
enter
xor
cmp
leave
mov
ljmp
subl
das
push
inc
mov
flds
or
pop
adc
mul
mov
or
inc
bound
xchg
pop
push
pushf
iret
call
nop
mov
orb
adc
dec
xchg
mov
out
imul
or
ss
test
js
jg,pt
jns
sub
int
arpl
fs
or
push
xchg
bound
mov
adc
out
xchg
and
cmp
lret
cld
push
dec
fldenv
jmp
into
stos
pop
pushl
loop
mov
mov
mov
insl
lock
fucomip
mov
jecxz
lods
sbb
jge
repz
cli
lods
enter
lahf
mov
shlb
xchg
sti
arpl
stos
stos
jg
lahf
adcb
fsts
cmp
push
in
cmc
cmp
jp
add
inc
sbb
mov
push
mov
rcrb
int3
or
addr16
jle
mov
cli
cmp
adc
mov
nop
lret
jnp
mov
push
dec
insl
icebp
lcall
cld
jmp
out
add
cwtl
pop
icebp
repz
cmpsb
sub
adc
or
repz
or
test
mov
fcmovnb
adc
cli
mov
scas
sub
ret
jge
mov
dec
imull
lods
cmp
or
lds
mov
mov
int
repz
out
inc
cmp
inc
xchg
leave
mul
cmp
pop
cltd
adc
jmp
cmpb
sub
mov
jge
popa
jnp
mov
es
xlat
pop
xor
lock
ret
movsb
insl
xchg
adc
and
jne
pop
or
mov
ljmp
jmp
stc
insl
sub
je
fadds
inc
or
adc
daa
sub
scas
mov
or
data16
in
wrmsr
dec
orb
aad
mov
mov
mov
xor
pop
dec
jnp
dec
jno
fisubs
mov
dec
sub
fistpll
inc
les
mov
pop
lea
and
mov
ret
lret
lods
xchg
cmpsl
scas
push
hlt
in
pop
test
xor
push
cwtl
push
in
lods
fistpll
dec
xor
jne
cld
into
aad
xchg
add
and
push
xor
xchg
jne
leave
leave
or
pop
roll
pushf
push
fisubrl
loop
lcall
jne
lods
pop
bnd
dec
dec
lahf
mov
mov
sarl
arpl
gs
and
jl
jb
xchg
cmp
out
out
jg
pop
rol
dec
rorl
cmp
je
mov
mov
inc
lret
dec
cmpsb
push
xor
test
inc
sub
jns
out
mov
js
or
mov
fisubl
stos
scas
loope
mov
inc
imul
jl
pop
mov
mov
inc
fcmovnu
das
pop
dec
sbb
sub
cmp
cmp
mov
loope
les
jmp
jno
mov
fs
jbe
pop
dec
stos
xchg
repz
stc
ja
mov
loopne
int3
movsb
mov
sbb
lods
xchg
push
or
xchg
in
mov
adc
or
rolb
jne
packuswb
push
mov
xchg
lret
arpl
testl
xor
pop
dec
jae
arpl
lahf
out
lods
mov
in
mov
mov
add
pop
int3
jl
push
mov
daa
xor
jl
mov
aas
ds
mov
or
in
mov
inc
ljmp
cmc
pop
pop
mov
enter
jmp
pop
enter
jl
mov
sub
mov
jp
add
cmp
hlt
cltd
cli
push
clc
loope
mov
in
jmp
and
adc
push
and
aad
pop
jecxz
lret
mov
cmp
fildll
lea
sbb
adc
push
fcoml
jo
lahf
inc
mov
mov
sbb
sbb
ud1
inc
inc
cli
jb
ret
pusha
repz
sub
loop
loop
test
outsl
lcall
xchg
and
repnz
xchg
mov
or
stos
jle
jp
xchg
subb
scas
cs
pop
xchg
out
adc
lock
and
clc
mov
pop
in
shrl
mov
nop
mov
pop
mov
mull
cmc
mov
xchg
xor
push
adc
jg
cli
push
sbb
lret
or
fiadds
xchg
mov
imul
mov
push
adc
xchg
cmpsb
pushf
jmp
rolb
cmp
repnz
outsl
cli
sbb
cli
add
jo
mov
cmp
adc
mov
mov
jge
mov
dec
cmpsb
in
mov
rorl
test
ja
pop
pop
adc
enter
xchg
dec
sub
out
movsb
popa
or
push
stos
sbb
imul
cmp
out
fidivs
cld
add
pop
aas
dec
test
and
lea
sbb
stos
ret
cwtl
and
and
fisttpll
into
pop
mov
adc
pop
lock
add
shll
lahf
loope
outsb
scas
pop
cmp
jae
fs
dec
cmp
pop
dec
push
adc
iret
fstl
sbb
mull
fwait
repnz
xor
popf
daa
push
mov
addr16
xchg
cmc
addr16
in
sub
jne
jge
add
dec
pop
in
xor
jge
cmp
stos
daa
xlat
sbb
lea
inc
add
jb
xchg
mov
jbe
xchg
loope
fdivl
ret
test
cld
cmpsl
jns
xchg
and
xor
mov
pop
rcpps
push
lret
mov
mov
insl
lods
push
xor
xchg
unpckhps
dec
xor
les
call
in
lret
es
int
lds
xor
ljmp
adc
jb
mov
shl
xorb
subl
test
das
xor
pop
or
icebp
popf
cmp
js
mov
movsl
leave
imul
mov
xchg
cmp
ror
mov
in
rcr
lock
insb
popa
jp
sarl
jns
insl
sbb
xchg
popf
movsl
pusha
sub
mov
das
mov
leave
mov
pop
xlat
sti
dec
inc
lds
xlat
jp
jmp
mov
unpckhps
and
pop
and
sbb
inc
mov
jp
iret
ret
dec
mov
and
je
pop
xorl
sub
cmpsl
into
enter
std
popf
aad
or
scas
push
mov
mov
enter
loopne
test
flds
test
pop
fs
pop
add
movsl
push
mov
outsl
and
lock
sbb
pop
cld
adc
addr16
xor
test
popw
aas
adc
push
lret
mov
dec
xor
shll
xor
pop
lds
sbb
sahf
inc
ret
stos
and
dec
adc
mov
jno
jne
dec
sbb
icebp
sarl
adc
dec
fwait
pop
test
jmp
pop
cmp
scas
pop
xor
sti
scas
mov
adc
arpl
or
lods
cli
dec
enter
hlt
leave
sub
orb
lods
outsl
sub
mov
xchg
and
cmpsb
lret
fcmovb
int
outsl
int3
lods
leave
push
inc
aas
aaa
jae
xor
cltd
or
sub
mov
jmp
mov
mov
mov
lcall
dec
fistps
mov
inc
inc
mov
dec
cltd
lds
ret
fmuls
sub
cltd
testb
pop
mov
push
pop
call
mov
test
pushf
pop
inc
inc
xlat
pop
or
and
mov
jbe
cmp
fwait
xor
push
cmp
jns
stos
sub
ss
unpcklps
outsb
popf
mov
pop
xor
inc
sbb
mov
pop
lock
cltd
adc
xchg
cli
pusha
fcoml
dec
mov
arpl
imul
enter
les
cwtl
outsb
xor
pusha
daa
pop
pop
mov
pop
lods
addr16
out
jns
lock
push
xchg
stos
mov
es
fmulp
mov
lea
call
mov
cmp
or
lds
sbb
inc
addr16
mov
jecxz
sub
lahf
mov
scas
lret
stos
mov
pop
cmp
dec
add
loopne
sbb
add
outsl
repz
sarl
mov
and
xor
bound
imul
cmpsl
shrb
mov
mov
adc
scas
adcb
push
push
in
sub
push
daa
in
mov
xor
mov
inc
shll
pop
mov
adc
je
into
ds
or
lret
xchg
test
adc
cmp
mov
mov
lahf
mov
fistpll
mov
ror
sub
push
test
sub
and
push
enter
fstpt
mov
add
mov
incb
cs
and
fiaddl
sub
jbe
add
mov
jmp
inc
icebp
aas
jnp
cmp
jg
push
cld
dec
test
lods
dec
xor
insl
cmp
call
inc
or
aaa
movsb
mov
add
mov
mov
dec
lahf
movsb
mov
jge
mov
lods
xchg
pop
xchg
aad
ret
jb
xor
adc
sbb
fstps
sbb
lcall
adc
mov
mov
pop
cld
mov
mov
iret
ja
lock
push
xchg
inc
stos
sbb
scas
in
or
fidivrs
dec
mov
adc
ljmp
adc
add
cwtl
jae
loopne
push
or
push
out
in
adc
xor
adc
jg
mov
lret
jne
push
loop
das
ret
nop
adc
sbb
js
dec
dec
inc
xchg
call
mov
dec
ja
push
lods
sub
xor
sbbl
mov
cltd
ja
sti
mov
cld
adc
and
mov
mulb
xchg
jmp
pmulhw
popa
mov
or
or
xor
dec
jb
ss
adc
pop
push
dec
pop
lret
jnp
bound
mov
outsb
sbb
sub
cmp
addr16
loope
push
hlt
out
and
shr
sub
cs
enter
insl
outsb
inc
mov
icebp
mov
ret
std
out
fld
ret
nop
and
movsl
js
dec
mov
out
adcb
sarb
gs
adc
in
movsb
xor
ja
cmpsb
mov
lcall
cli
loop
or
sbb
lret
les
cwtl
xor
stos
in
sti
mov
test
fstpt
test
ds
adc
out
loope
rorb
loopne
adc
xchg
aas
xchg
lea
outsl
imul
mov
jo
xor
or
dec
fld
mov
cmp
addr16
jmp
lds
cltd
rcll
and
jne
adc
mov
mov
cwtl
xor
sti
sub
sbb
xchg
sub
fwait
insl
sub
shr
ss
popa
call
repz
jp
iret
popf
pop
mov
adc
rclb
cmp
outsl
sub
aad
add
inc
pop
negl
ficoms
jne
ds
or
adc
or
mov
je
sub
sti
fs
or
lds
mov
dec
cs
rcll
fisubs
cmc
sub
rorb
ja
jecxz
arpl
or
or
dec
rcr
clc
hlt
or
fs
test
or
pop
stc
mov
shrl
dec
adc
mov
inc
xchg
xchg
subb
lret
cltd
test
outsl
add
sub
lods
frstor
in
and
sbb
movsl
pop
adc
jb
out
int
test
shlb
pushl
push
jne
inc
push
pusha
and
bound
andb
loop
add
jnp
loop
mov
sub
call
lods
pop
test
xchg
mov
inc
jae
cmp
sarl
inc
cmp
mov
test
data16
inc
sbb
leave
cmp
cwtl
nop
xor
movsl
push
insb
push
out
xchg
stc
sub
sub
out
out
enter
clc
pusha
int3
pop
fsubrl
jp
mov
jno
fs
fistps
adc
inc
shrb
or
inc
xor
push
add
pusha
loopne
std
add
scas
stos
mov
and
xor
jo
push
rolb
and
js
and
mov
and
loopne
daa
sarb
mov
test
mov
mov
clc
out
roll
nop
scas
mov
scas
sbb
cli
sub
fwait
cmpsb
cs
dec
out
adc
xor
or
out
xchg
cmp
fs
pop
mov
sbb
aaa
jle
sbb
push
pusha
out
jns
ficomps
pop
mov
lret
imul
inc
movsl
cmp
pusha
stc
popf
in
cwtl
stos
ds
sub
push
rclb
lahf
andb
push
lahf
in
into
das
out
or
mov
mov
ja
push
adc
sbb
addb
outsl
repz
add
aam
pushf
mov
xchg
test
mov
xchg
jmp
and
notb
pop
jae
sbb
arpl
push
jge
testl
fwait
inc
jle
jns
or
push
lahf
pop
add
xchg
test
pop
fimuls
adc
jae
push
es
hlt
push
jne
and
mov
mov
and
mov
shlb
das
dec
hlt
inc
or
jo
pop
add
and
xchg
mov
jnp
mov
outsl
dec
mov
mov
fsts
mov
jmp
add
aas
adc
add
and
jge
inc
cmc
repz
outsb
xor
push
div
lea
pop
mov
sub
movsb
adc
add
incl
adc
test
dec
jge
mov
icebp
mov
sbb
add
cmpsb
mov
outsl
mov
fistps
test
in
aad
iret
push
jno
mov
les
add
ret
stc
pop
repz
enter
or
jcxz
mov
data16
sbb
inc
sbb
adc
pop
sbb
in
cmp
mov
dec
jecxz
mov
sub
xchg
sbb
inc
ret
xor
xchg
mov
mov
loope
push
sub
cld
insb
out
cmc
sub
rep
pop
xchg
push
mov
lret
dec
arpl
mov
jns
shll
dec
int3
xor
sbb
rol
cltd
lahf
mov
test
loopne
and
xchg
adc
test
sarl
pop
das
mov
adc
das
mov
and
ret
inc
mov
loop
pop
jl
jb
jne
adc
xchg
push
push
push
cmpsb
stos
sub
stc
fcmovnu
dec
repnz
pop
test
xor
xor
test
enter
loopne
stc
jns
enter
cmp
orl
xor
adc
clc
mov
sbb
push
stos
mov
sbb
inc
dec
xor
mov
outsl
fsubrl
dec
mov
femms
dec
fadds
in
scas
or
jns
mov
lahf
or
cmc
dec
cs
stc
adc
mov
pop
push
pop
out
sbb
out
aaa
les
or
fadd
scas
mov
adc
test
addr16
cwtl
rcrb
fwait
mov
and
mov
mov
xchg
lods
int
jmp
cmp
jne
repz
cld
adc
sbb
mov
jl
test
cmp
adc
imulb
andb
jne
pop
ror
lahf
dec
lods
add
adc
mov
insl
aam
shl
pusha
jle
mov
js
std
stos
fidivrs
pusha
test
pop
pop
push
sbb
and
mov
and
mov
sarl
xor
mov
xor
mov
xchg
negb
mov
inc
out
popa
xchg
bound
out
pop
mov
xchg
xchg
mov
lock
in
sti
or
ret
ds
dec
lods
arpl
sbb
sarl
sahf
dec
add
repz
xchg
repnz
xchg
lcall
sub
pop
pop
out
jbe
mov
sub
sub
and
sbb
or
add
in
std
pop
add
leave
insl
leave
inc
add
add
cltd
lods
js
ja
adc
or
scas
mov
mov
add
pop
add
push
call
mov
sbb
jecxz
iret
sbb
xor
lret
mov
lock
inc
sub
inc
inc
lret
pop
in
adc
mov
sub
sbb
loop
xor
repz
lods
cld
ss
inc
fwait
sbb
cltd
sbb
dec
call
push
pop
test
mov
add
adc
arpl
pop
dec
loope
insl
cmp
movsb
sbb
cmpb
dec
in
imul
push
dec
daa
lret
cmp
mov
jge
xor
sbb
jmp
sub
ret
xchg
jno
sbb
jo
movsl
or
call
popa
in
sub
outsb
inc
mov
arpl
insb
or
dec
mov
push
inc
add
in
pop
in
xor
jne
jns
in
in
imul
imul
rorl
in
dec
incl
les
mov
test
jbe
xchg
hlt
add
and
and
loopne
push
xchg
loope
pop
int3
push
in
or
dec
jmp
pop
adc
ss
test
mov
cmpsl
jl
or
iret
sbb
jmp
push
cmp
shr
xchg
andb
fcmovne
es
and
mov
popf
repnz
cltd
dec
subb
in
lcall
cli
loopne
sub
mov
test
aam
cmp
ret
leave
loop
pop
mov
cmp
pusha
jmp
addl
add
inc
pop
inc
stos
in
xchg
lcall
cmc
ret
popf
xchg
into
jge
or
mov
ds
pusha
fnstsw
loop
cmpsb
xchg
xor
popf
pop
mov
mov
cwtl
fdivrs
xchg
adc
pop
lods
ret
rcll
inc
mov
cmp
imul
ss
jo
scas
and
sbb
insb
hlt
cmp
xchg
pop
fmul
lods
xchg
jp
mov
mov
ret
inc
sub
loop
rorl
imul
rclb
jae
mov
mov
sub
push
and
sahf
jle
sbb
outsl
repz
jmp
push
das
cli
aam
int
fxch
insl
repnz
or
jno
sbb
cmp
pop
jp
in
cmp
xchg
xlat
cmpsl
mov
je
and
adc
mov
std
add
pop
aas
pop
shr
out
mov
push
sub
pop
fs
sub
xchg
repz
inc
sub
movsb
aad
js
sti
rolb
dec
clc
xchg
xlat
cmp
cmpsb
dec
lods
xchg
icebp
shrb
push
cld
mov
aaa
cmp
and
sub
push
int
mov
test
movb
dec
sbb
lcall
into
cli
mov
adc
arpl
add
jp
push
inc
xchg
lahf
mov
push
andb
popa
sub
or
mov
icebp
mov
scas
push
lret
mov
xchg
je
pop
xlat
add
insl
loope
xchg
out
shrl
cwtl
xchg
push
jnp
sbb
push
sarb
xchg
test
fdivrs
test
cli
stos
ficoms
fwait
mov
mov
sbb
xor
lods
jg
xchg
scas
dec
cmpsb
movsb
push
cmp
sahf
jo
adc
jne
loopne
mov
ficomps
insl
in
inc
fiaddl
adc
cmp
push
adc
aas
fistpl
push
jecxz
cld
pushf
std
xor
sbb
adc
pop
adc
mov
mov
mov
add
inc
or
fadds
xchg
xchg
bound
push
aam
cli
js
fs
lods
iret
lods
aaa
std
nop
jb
sbb
jbe
insb
and
xchg
inc
std
mov
add
jae
sti
xchg
aaa
xchg
xchg
in
and
xor
lock
or
in
dec
mov
test
mov
mov
movsl
icebp
int
pop
add
jo
sbb
cmp
loopne
out
ds
imul
sub
addb
out
decb
fcompl
jnp
in
push
fnstcw
push
jbe
daa
xchg
stos
call
sub
inc
cmp
xchg
xor
mov
shrl
pushf
jae
outsb
es
mov
outsb
push
or
iret
mov
fsub
in
mov
ja
adc
mov
lock
push
xor
inc
inc
ja
mov
jno
pop
jnp
jp
shl
dec
cld
movsb
aas
push
test
mov
adc
lds
dec
jns
mov
inc
outsw
pop
jns
dec
std
in
pop
int3
dec
jmp
jno
inc
popf
int
imull
inc
fcomps
rcl
insl
sahf
mov
out
xchg
sub
inc
aam
decb
sarl
add
inc
and
pop
jg
loop
or
pop
popf
into
pop
hlt
out
add
xor
je
cli
test
dec
outsb
adc
int3
sub
inc
loopne
int3
stc
ret
sbbb
mov
ds
das
mov
cld
push
push
sbb
add
push
sub
push
pop
aad
and
jmp
inc
and
mov
outsb
cmc
push
shlb
jge
insb
mov
dec
inc
inc
mov
int3
test
into
mov
in
sbb
inc
idiv
sub
cwtl
jg
dec
stos
sub
sbb
mov
jge
or
je,pt
adc
popf
dec
in
sbb
out
dec
push
push
test
aaa
outsl
xor
pop
out
pop
into
sub
jmp
repz
fsubp
jge
sahf
scas
pop
mov
inc
arpl
inc
movsb
cmp
out
or
lock
into
and
call
push
mov
push
pop
adc
xorl
mov
std
mov
dec
push
inc
data16
lds
dec
std
andb
in
inc
mov
dec
out
jno
in
jnp
push
stos
gs
fstpl
fsubrl
jge
repz
sub
cwtl
test
mov
sti
addl
inc
clc
mov
push
ljmp
pusha
push
cltd
cmpsb
and
mov
push
negb
shlb
pushf
aas
mov
or
sahf
xor
fidivs
rsqrtps
int
mov
aam
push
inc
mov
dec
out
mov
pop
in
mov
mov
dec
push
gs
push
sub
int
sub
adc
add
out
sbb
jnp
out
adc
push
xor
fcomps
push
mov
jg
aam
lea
cmp
mov
sub
lock
cmp
mov
es
mov
or
test
pop
dec
dec
lods
sbb
insb
lcall
popf
mov
sti
repz
dec
or
and
out
pop
je
push
add
push
mov
adc
adc
aas
mov
mov
xchg
lods
mov
inc
addl
call
scas
inc
inc
repz
jnp
xchg
jecxz
mov
mov
hlt
mov
sub
pop
inc
test
dec
xor
in
xchg
add
push
inc
xchg
and
cmpsl
mull
lret
adc
or
push
inc
cmp
mov
cmp
stos
jb
test
adc
cs
sub
xor
adc
pusha
pop
mov
and
pop
leave
out
cmpsl
mov
pushf
pop
dec
rorb
adc
insb
in
shlb
add
mov
sub
iret
stos
data16
cwtl
xchg
not
aas
loop
sbb
mov
inc
inc
movsb
mov
mov
aam
ror
sti
int
cltd
lret
out
sub
jle
sbb
push
aam
gs
sbb
fcoms
test
push
insb
adc
leave
mov
cmc
int3
lods
sbb
jg
shlb
jp
cmpsb
xchg
mov
ds
add
adc
pop
mov
hlt
fstl
addb
movsl
push
pop
mov
xchg
cwtl
movsl
cmp
push
mov
loopne
xchg
jmp
nop
or
ljmp
xchg
mov
inc
repnz
test
pop
fmuls
shll
icebp
cmp
or
add
mov
int
sbb
shr
mov
mov
adc
or
aas
and
mov
cmpsl
pop
add
notl
pop
sbb
jbe
in
adc
in
repnz
fistpl
add
xor
and
mov
pop
push
and
add
cmp
pop
adc
xchg
test
sub
pushf
add
mov
pop
mov
xor
inc
xor
push
nop
ljmp
and
inc
mov
dec
mov
pop
pop
add
ja
clc
mov
push
or
jns
mov
add
xor
mov
aam
test
mov
sbbb
jl
and
dec
arpl
repnz
xbegin
add
push
push
cwtl
lahf
xor
pop
pop
fdivrl
adc
fldl
addr16
outsl
xchg
fcompl
xchg
cmp
arpl
dec
mov
les
ljmp
cmpsb
lods
je
fisubrs
mov
pop
ficompl
insb
xor
and
mov
into
and
cmpsb
lea
out
or
enter
stos
divl
inc
mov
daa
test
cmp
inc
in
add
xor
lock
dec
push
pop
sbb
jne
mov
pop
imul
inc
sahf
lds
push
popa
loop
mov
andl
or
ret
jge
mov
dec
or
insl
sarl
addr16
aaa
push
jp
shlb
cmp
push
xlat
add
ret
ficomps
adc
daa
pop
lea
roll
pop
pop
iret
rep
xor
out
push
out
call
xchg
test
out
jns
ss
imul
or
xchg
into
in
mov
push
add
ljmp
adc
int3
jge
jns
jmp
lds
mov
xor
scas
aad
push
dec
add
xchg
jbe
adc
xor
push
xchg
push
outsl
or
sahf
ds
std
mov
sti
aas
loopne
pop
inc
push
jge
fadds
cmp
lods
aaa
mov
and
loopne
ja
cld
xchg
jg
xchg
jb
imul
ret
xchg
cmp
mov
idiv
and
sti
mov
frstor
or
adc
dec
subb
lock
shll
test
ja
pushf
mov
sub
fld1
addl
cmpsb
push
inc
rcr
or
cmp
fwait
adc
das
dec
xacquire
mov
mov
sbb
pop
mov
jle
popf
nop
rcl
leave
xor
and
std
push
pop
dec
into
insb
xchg
aam
sbb
inc
gs
jb
mov
or
mov
xchg
clc
inc
xor
xor
adc
popf
scas
ds
push
mov
pop
test
popa
sub
jmp
shlb
xchg
repz
aam
and
shr
adc
dec
add
jmp
in
pop
xchg
cmp
pop
sarl
dec
pop
dec
sub
out
mov
mov
loopne
dec
jnp
pop
rorl
jge
cwtl
movsl
lahf
shr
push
sbb
cmp
xor
in
cmpsb
sbb
jbe
enter
ret
fs
and
adc
jno
cld
cpuid
test
push
push
sbb
xchg
mov
push
or
stos
cmpsb
shll
int3
xchg
jns
sbb
and
sub
pop
and
push
sahf
test
mov
lret
dec
pop
andb
jmp
push
xchg
jle
loopne
mov
mov
arpl
and
sbb
je
out
cmpl
push
sbb
inc
test
test
sbb
sub
adc
cmp
es
sub
pushf
pop
das
shrl
jp
outsb
ret
sbb
lcall
add
pop
mov
push
xchg
lahf
gs
push
icebp
iret
or
inc
adc
outsl
scas
pop
push
out
int
add
fistps
mov
sbb
mov
and
cmpsl
call
jg
cmp
xchg
addr16
jbe
and
jo
scas
jle
stc
ficomps
inc
outsb
ljmp
pop
cld
adc
pop
clc
or
jns
add
movsb
jecxz
fdivrs
adc
idivb
jmp
xchg
push
push
sub
add
cltd
fdivrl
cmpsl
jne
mov
jg
push
fidivs
repnz
test
push
and
mov
icebp
roll
clc
push
and
fxch
adc
loopne
xchg
pushf
pop
jmp
ja
sti
div
adcl
jno
outsl
call
clc
inc
ss
std
fidivl
nop
arpl
push
and
and
pop
scas
popa
xor
xor
pop
test
sbb
xor
fadd
push
mov
and
rcrl
out
call
scas
dec
test
imul
xchg
outsb
push
fcomps
pop
xchg
sarb
cmp
imul
aad
imul
mov
into
mov
cmpsl
sbb
mov
pop
pop
jg
pop
dec
fnstcw
outsl
adc
andl
lret
adc
lcall
sub
sbb
mov
mov
mov
mov
inc
cwtl
dec
mov
ljmp
std
arpl
in
test
leave
arpl
cwtl
subl
mov
pop
les
shrb
sbb
leave
cmp
jmp
cltd
mov
or
sub
loope
or
stc
jp
add
mov
stc
test
dec
popf
xchg
sub
repnz
fcompl
test
fsubrs
and
ret
inc
pop
add
int
scas
into
xchg
jmp
out
addr16
mov
idivl
repz
adc
xchg
mov
sbb
push
sti
xlat
repnz
imul
xor
push
xchg
sub
clc
cmc
lods
stos
dec
jns
daa
adcb
repnz
dec
pop
adc
stc
mov
mov
sahf
loope
and
std
arpl
ret
or
add
daa
pop
sahf
dec
scas
push
dec
inc
add
mov
ljmp
mov
pop
insl
insl
fimuls
ret
add
xorb
insb
clc
cmpsb
xchg
cmpsl
idivb
xorl
jg
xchg
add
in
hlt
add
and
fistpl
xor
inc
mov
andl
cs
je
mov
aad
test
test
rcrl
scas
jecxz
in
push
gs
aaa
sub
loop
pushf
push
adc
insb
sub
xor
jg
jg
adc
mov
popf
std
insb
jmp
push
cmp
in
inc
test
mov
jne
dec
dec
clc
xchg
mov
mov
sahf
daa
ss
jg
outsb
adc
xchg
adc
push
or
and
mov
sbb
fldcw
inc
dec
inc
in
pop
inc
add
xor
push
jo
mov
aaa
dec
dec
mov
std
sbb
sti
popf
sbb
jg
cli
mull
and
adc
nop
push
mov
mov
scas
mov
sahf
int3
mov
mov
fcomp
rolb
pmuludq
dec
fildll
sbb
dec
xchg
test
out
add
or
sub
in
fwait
shrl
icebp
fisubs
mov
pop
out
xchg
clc
shll
ret
test
add
stos
dec
scas
mov
jmp
mov
loopne
lods
add
lock
mov
pop
or
cmp
sub
std
xchg
andl
ljmp
xchg
push
xchg
lret
mov
mov
push
popa
sbb
pusha
inc
fisubrs
idiv
sub
mov
pop
mov
in
xchg
lret
push
inc
dec
ds
jecxz
daa
dec
fwait
sub
test
aaa
fistpll
test
jmp
mov
cltd
loopne
cmpsb
lods
insl
cmp
test
inc
aas
mov
adc
sti
mov
test
out
add
dec
ljmp
fsub
or
in
add
not
adc
lret
dec
test
scas
outsl
sbb
and
lock
mov
mov
dec
push
or
pop
inc
sub
repnz
add
mov
mov
dec
inc
pop
mov
xor
pop
loopne
or
and
or
push
pusha
adc
cmc
sub
cmp
movnti
jb
or
jp
ss
or
lcall
inc
push
aam
jno
fimull
sarl
outsb
inc
stos
xor
mov
sub
es
add
stos
ds
push
in
sbb
repnz
cmc
enter
pop
scas
dec
jne
daa
push
popa
jne
repnz
int
mov
inc
mov
xor
addl
adc
clc
xlat
in
jmp
dec
mov
pusha
xlat
push
fmuls
jae
adc
cmp
outsl
sub
or
mov
add
jnp
cmp
daa
jne
inc
incb
cmp
ficomps
iret
aad
mov
sti
push
lock
pop
testb
es
jns
vmrun
push
cld
mov
pop
or
xchg
es
jp
imul
jg
leave
fistpl
mov
xor
xor
cmp
repz
sbb
call
gs
cmc
jae
inc
cmp
pop
cmpsb
ss
leave
and
fsts
mov
lods
jno
loop
add
mov
mov
sub
sbb
push
or
mov
xchg
inc
push
mov
in
fcoml
fmul
and
mov
adc
je
jl
out
int3
sbb
or
or
mov
aad
stos
sarl
mov
sbb
aaa
sub
adc
in
loopne
xchg
in
das
jmp
pusha
repz
cli
iret
jge
ret
loope
and
mulps
sbb
popa
movsl
fsubs
and
xchg
ljmp
mov
mov
inc
add
xor
sbb
sbb
mov
inc
and
cs
sub
sub
push
call
dec
out
in
push
out
daa
push
insb
sbb
cs
mov
mov
ret
pop
mov
rorb
repnz
adc
popa
push
push
mov
add
into
mov
push
adc
inc
cmp
sub
mov
in
jb
scas
arpl
ret
mov
cmp
mov
xchg
shlb
pop
out
xchg
sbb
inc
je
lea
fldl
push
scas
and
mov
bound
loopne
sbb
xchg
inc
dec
dec
or
bound
jge
mov
push
out
xchg
inc
sbb
sub
push
into
mov
out
in
cmp
dec
arpl
movsb
and
add
and
imul
xchg
shl
das
test
cmpsl
jb
mov
ljmp
out
mov
dec
cli
or
add
call
loop
adc
adc
nop
stc
imul
adc
stc
imul
lock
cmp
stos
mov
verw
cmp
push
xchg
stos
mov
adc
xor
test
adc
test
scas
neg
fwait
sbb
jo
ror
xchg
aam
mov
pop
ret
enter
lds
dec
jns
sti
adc
hlt
xchg
pop
fisttps
xor
inc
incl
lret
xor
cli
mov
or
cld
leave
cwtl
jns
movsl
mov
scas
std
loope
idiv
loop
and
mov
test
pushf
ss
mov
cmpsl
jbe
in
cmpsl
rcrb
jns
mov
cmp
stos
ss
or
pop
lret
push
mov
dec
in
pop
sbb
and
jo
insb
jnp
mov
jne
sub
stc
loopne
mov
xchg
push
and
mov
in
sbb
mov
or
pop
cmc
inc
add
inc
ret
mov
pop
std
jecxz
pop
jbe
adc
add
mov
loop
call
es
test
xchg
dec
sub
sbb
aad
incb
xor
test
push
std
mov
sub
adc
adc
mov
jb
and
fisttpll
daa
fwait
sub
sub
test
cmp
out
test
inc
aaa
adc
stc
pop
mov
and
add
fs
mov
add
cmpsb
test
mov
rcrb
mov
rorb
pop
loop
outsl
sahf
in
iret
cmp
mov
mov
ret
push
add
mov
cli
adc
les
outsb
repz
imul
test
test
lods
pop
lret
xor
in
cwtl
adc
ret
push
cmc
outsl
xor
arpl
mov
je
xchg
add
lods
dec
sbb
mov
cmp
aam
and
dec
cmpw
mov
jg
xorl
jb
addl
mov
incb
mov
in
mov
in
fdivr
nop
clc
mov
mov
mov
jb
dec
push
pop
mov
daa
sbb
push
test
addr16
mov
test
xchg
inc
mov
out
mov
nop
adc
scas
xor
repnz
loopne
jno
fwait
ja
arpl
dec
insl
push
mov
addr16
sbb
cmpb
lock
shrl
pop
daa
pop
xor
jmp
cmp
jle
pop
adc
mov
push
fcoml
cmp
movsb
loop
inc
dec
pop
cmp
pop
sub
xchg
mov
scas
jae
rclb
mov
lret
dec
into
fdivrs
adc
inc
sbb
bnd
into
lods
push
push
jne
push
mov
mov
adc
in
clc
lea
mov
push
xchg
or
aam
or
xchg
mov
mov
test
mov
incb
aad
ja
out
addr16
leave
jmp
stc
pop
xor
inc
xchg
data16
enter
sahf
test
or
push
into
xchg
imul
aad
lret
cmp
in
xor
xchg
mov
cmpsl
jb
int3
mov
fcmovnbe
ja
mov
inc
xlat
pop
jno
cld
popa
out
mov
mov
add
cmp
push
int3
inc
xor
xchg
jae
pop
mov
invd
in
rcll
inc
fistps
aas
push
push
aas
add
imul
out
cld
insb
test
outsb
sub
add
or
iret
out
inc
lods
lods
push
push
sti
push
imul
into
push
aam
jb
enter
hlt
repz
mov
out
push
jnp
cmc
mov
inc
ss
mov
iret
popf
mov
inc
les
xchg
cmp
sub
out
lds
cld
pop
sbb
out
fucomip
mov
or
pushl
test
rcll
daa
mov
movsb
sub
jmp
cmc
sbb
xchg
and
jno
rcl
mov
cld
cmp
adc
nop
insb
mov
cmp
pop
cmpsl
jge
clc
mov
push
xchg
and
adc
mov
add
mov
cld
addr16
loop
add
shrl
inc
pop
dec
les
pop
in
cmp
jne
xor
fidivrs
mov
adc
gs
aad
pop
push
xchg
ret
movsb
and
jnp
daa
xlat
mov
out
shrb
jns
or
test
mov
lahf
imul
mov
insb
test
repz
mov
call
jmp
lahf
mov
out
lcall
adc
adc
jnp
pop
xchg
call
jb
mov
or
push
outsb
lret
pop
or
pand
sahf
add
aad
call
jecxz
addl
add
movsl
push
sbb
mov
test
out
add
mov
out
add
test
sub
mov
mov
inc
add
mov
inc
fcomps
inc
xor
mov
mov
and
jp
mov
dec
subb
pop
mov
sbb
cmp
inc
and
cltd
mov
dec
addr16
and
cltd
mov
arpl
mov
xchg
arpl
int3
fnstenv
jle
ss
stc
int3
cmp
push
add
add
imul
and
jl
jmp
adc
push
pop
pop
rcrl
shll
pop
lret
inc
inc
call
nop
repnz
lock
mov
ffreep
repnz
enter
stos
sub
test
lahf
addb
push
loop
jmp
jg
jb
sub
add
jns
imul
mov
out
inc
cli
xchg
dec
into
rclw
cmp
cltd
xor
jg
mov
ljmp
inc
aaa
scas
ds
inc
cmp
adc
ljmp
jge
test
adc
into
nop
in
fs
jg
cs
addr16
lahf
push
adc
rcll
insl
not
out
int3
dec
insl
push
inc
cltd
xchg
enter
xor
decb
faddl
and
xor
inc
and
and
sub
pop
sbb
add
shlb
aas
pop
in
out
and
cmp
sbb
sbb
ds
sti
adc
and
mov
push
cmp
arpl
dec
cmpl
push
stos
loopne
push
push
jb
sub
mov
sub
test
cmp
cmp
out
adc
aam
popf
das
aaa
push
lcall
jl
lret
aam
fdivp
mov
lods
idivl
sub
std
mov
test
mov
adc
inc
cmpsb
mov
sub
cmpb
icebp
mov
jmp
adc
and
xor
xchg
sub
jle
in
mov
and
dec
push
fimull
jnp
sbb
mov
cmp
mov
inc
pop
shr
and
inc
fdivs
clc
xor
add
aas
mov
jno
and
cwtl
adc
clc
movb
push
inc
mov
pop
sub
cltd
sahf
mov
xor
ret
loope
mov
lds
pusha
sub
adc
je
cmp
inc
shll
out
push
push
lods
jge
int3
pop
aad
lods
xchg
pop
fsubp
cltd
out
mov
pop
es
fs
ds
loopne
out
jb
pushf
mov
jne
fstps
fdivrs
inc
pushf
es
pusha
and
inc
lock
cmp
jnp
and
inc
dec
sbb
jns
and
or
pop
call
leave
int3
popf
aaa
je
and
inc
insl
pop
xchg
iret
es
pop
ljmp
cmp
jp
and
sub
push
rorl
cld
fsubp
jmp
push
cmp
sbb
xor
and
je
fwait
and
jb
inc
popa
frstor
cmp
arpl
pop
inc
xor
imul
or
lcall
lock
adc
lcall
mov
sbb
push
mov
xor
out
repnz
jp
sub
adc
lret
into
arpl
cmp
dec
pushl
mov
mov
mov
or
cltd
mov
adc
xchg
push
call
push
xor
int
out
lahf
mov
adc
dec
xorl
or
adc
sbb
imul
popa
xor
les
cmp
jae
mov
ret
push
mov
hlt
xlat
fbld
add
push
pop
mov
add
xor
das
and
xor
fstpt
mov
sbb
pop
fidivrs
shl
test
xor
cmp
icebp
bound
or
int3
mov
loop
in
sbb
add
fcmovu
in
inc
insb
outsl
shr
ucomiss
push
jge
and
cs
subb
mov
ret
xchg
out
adc
out
xor
pop
pushf
push
outsl
icebp
xlat
jno
int3
mov
cmp
push
clc
and
shll
pop
mov
mov
imul
or
jl
fbstp
ficompl
inc
push
out
sbb
roll
jg
sbb
or
cmp
xchg
push
jle
stc
mov
adc
lock
push
push
pop
bound
pop
out
in
mov
lea
jb
mov
cld
or
fsubl
lcall
push
aam
loop
movsb
pop
cmpsl
adc
adc
and
push
sub
jne
mov
adc
movsl
mov
out
xchg
out
jge
mov
sbb
jae
sub
imul
outsl
lahf
add
dec
repz
out
cmp
int
in
xor
loope
dec
sahf
jmp
notb
inc
aad
and
sbb
cmp
cwtl
movl
cmp
sahf
mov
inc
mov
imul
push
je
adc
pop
fildll
pop
cmp
rclb
in
pop
ficompl
add
insl
pusha
pusha
inc
arpl
dec
xchg
xor
xchg
inc
or
push
fmull
loop
cmpsb
adc
in
dec
sub
and
popa
jne
jno
stos
dec
lahf
addr16
mov
sbbl
movsb
addr16
mov
scas
mov
jmp
mov
pop
jecxz
sub
jbe
sbb
ret
xchg
out
rcr
aas
dec
pop
push
sub
lods
imull
ljmp
inc
out
ret
mov
int3
cld
out
adc
rorb
xor
xor
cmp
or
sbb
in
mov
jns
jecxz
push
in
adc
pop
int
or
loopne
rol
mov
xchg
cld
jnp
xlat
jp,pt
xor
adc
shll
mov
or
insl
mov
adc
jbe
repz
sbb
enter
scas
push
in
fsubs
inc
xor
cmp
std
or
push
out
sub
mov
das
inc
mov
push
hlt
xchg
xor
cmp
dec
fldt
adc
pushf
faddl
out
divb
lret
mov
sarl
inc
std
pushf
daa
push
aam
call
mov
outsl
mov
jp
insl
movsl
negl
and
cmpsb
mov
dec
push
out
dec
dec
jg
add
mov
lret
jg
push
sub
xchg
stos
sub
jmp
mov
idivb
out
mov
inc
push
or
cmp
test
jl
cmc
jae
sub
adc
out
adc
mov
sbb
adc
enter
incl
pop
xchg
nop
and
push
push
and
xchg
mov
or
pushf
das
jno
sub
pop
out
idivb
loope
lret
cmp
push
repz
mov
sbb
or
lods
jmp
inc
imul
std
pop
mov
inc
cld
xchg
outsl
mov
js
mov
movsl
imul
in
icebp
popf
mov
stc
call
lods
xor
stc
setb
mov
fwait
xchg
iret
fwait
cmp
mov
mov
mov
mov
mov
add
jo
repnz
movsl
cmpsl
mov
and
lret
shrl
pop
movsl
rcl
fnsave
adc
pop
out
cmp
outsl
jb
pop
lods
push
xchg
ja
sbb
sub
and
je
es
cmc
ljmp
sti
xchg
in
rcrb
cld
or
ja
add
scas
adc
mov
mov
pop
push
jg
aad
adc
dec
sub
fidivs
arpl
mov
imul
dec
mov
sahf
cmpsb
push
imul
mov
into
ret
add
dec
sahf
push
cltd
ret
push
xor
inc
mov
cmp
ja
ljmp
in
mov
adc
xchg
sbb
movntps
fstpt
xor
jmp
mov
sub
sub
imull
out
aam
jmp
jg
sbb
add
sti
testb
cltd
idivl
cmpb
fdivl
gs
mov
mov
add
comiss
push
filds
cmpsl
testb
push
into
loop
in
xor
cs
mov
pop
cli
cmc
pusha
adc
and
cwtl
jnp
sub
xchg
xchg
sub
test
mov
out
arpl
mov
jae
movsl
mov
cltd
subl
and
daa
xor
arpl
cwtl
or
mov
rolb
inc
mov
cs
insb
xchg
pop
xor
cmp
fildl
cltd
xlat
in
scas
and
sbbb
mov
mov
mov
mov
inc
mov
rol
inc
faddl
xor
add
push
pop
loop
adc
addr16
xchg
mov
add
pop
sub
cmpsl
adcl
mov
and
sub
scas
xchg
pop
out
aam
in
inc
and
loopne
xor
js
xor
adc
out
pop
lahf
xchg
push
sub
popf
lcall
cmp
sbb
sub
scas
imul
jno
out
outsl
push
hlt
cltd
loopne
xchg
lock
imull
adc
loop
andb
sahf
mov
insb
cwtl
enter
sahf
fcom
mov
outsl
lret
add
ficoms
in
jg
shrb
pop
cwtl
mov
cli
aas
leave
cmpl
call
dec
pop
lock
sbb
or
hlt
mov
push
sahf
mov
stos
push
sbb
jge
sbb
std
test
cltd
add
insb
andb
jne
idiv
mov
imul
addr16
rclb
into
out
xchg
lock
adc
dec
lods
pop
sub
xor
xlat
dec
adc
xlat
cmp
shlb
xchg
in
adc
int
movsl
mov
adc
arpl
jmp
push
dec
push
inc
pop
sbb
cmp
ljmp
pop
orl
es
mov
xor
mov
jmp
addr16
lock
gs
test
or
jae
jbe
loop
aad
jnp
pop
sbb
xor
or
aaa
adc
and
cmpsl
cmp
ret
iret
out
out
inc
mov
in
popf
cmp
adc
test
sti
sub
stc
sbb
lahf
jmp
iret
dec
fcmovne
xor
push
out
sub
mov
xchg
out
loopne
mov
enter
js
dec
push
cmp
mov
les
gs
js
mov
pop
xchg
lods
push
mov
add
into
cmpl
test
ret
test
push
mov
imul
adc
jmp
nop
int
sti
sbb
shr
insb
fisttpll
rcrl
icebp
jb
jne
insb
adc
out
insl
iret
frstor
cmp
mov
clc
lock
subl
and
sub
xor
aad
repnz
mov
adc
add
xor
lret
in
test
xchg
leave
mov
cwtl
sar
lods
loop
adc
inc
jecxz
add
ret
sahf
hlt
xchg
xor
xchg
xchg
aam
je
aad
xor
cmp
pop
cmp
les
mov
cmp
cwtl
xor
iret
mov
mov
lea
cmp
hlt
outsb
mov
mov
xor
repnz
pop
jmp
cld
aas
jb
out
dec
popa
pop
rorl
pop
es
mov
and
lret
push
xlat
add
mov
fistl
fcmove
fdivr
lock
mov
and
out
dec
dec
call
sbb
out
fnsave
jmp
mov
shll
loopne
call
push
mov
fwait
insl
or
or
int3
shl
iret
jne
icebp
sahf
and
bound
into
ret
ret
lds
add
in
xchg
xchg
icebp
jl
inc
push
addb
or
fbld
iret
lahf
std
mov
ret
xor
sub
out
adc
outsl
jmp
dec
aaa
pusha
imul
adc
outsl
outsl
test
pop
dec
ds
shl
cmpsl
pop
and
popa
jne
je
ret
outsb
xor
xchg
icebp
std
rcl
push
jo
or
loop
add
inc
mov
mov
dec
jbe
pop
daa
test
adc
into
cmc
andl
sbbl
pop
cli
mov
sbb
xor
rorb
sub
jno
loopne
push
sahf
xchg
adc
int3
outsl
lea
cmp
mov
fwait
aam
xlat
scas
jmp
fists
iret
addl
btcl
daa
mov
xchg
push
xchg
push
imul
mov
push
and
test
sbb
fimull
jl
std
fucom
decb
je
je
rcrl
lods
es
pop
shl
lea
mov
xchg
cmovg
sti
cmp
add
xor
psrlq
pop
xlat
sti
sub
xor
jp
mov
and
test
inc
jmp
sahf
mov
mov
test
xor
mov
in
rcrl
cmp
mov
add
push
sub
push
pushf
imul
dec
insb
out
test
mov
lea
sbb
adc
cmp
mov
rcrl
xchg
daa
repz
jae
lahf
stos
sbb
sub
ja
js
push
into
sti
test
mov
and
dec
mov
loop
arpl
adc
mov
repz
fucomp
pop
or
sarb
mov
notl
inc
jle
inc
das
xchg
lret
loop
cmc
push
bound
imulb
rorl
mov
inc
in
pop
xchg
xorb
mov
lea
mov
adc
jmp
sbb
test
push
cmpsl
fcomi
clc
mov
mov
xor
or
jo
jb
mov
xor
inc
dec
cmp
push
aam
enter
adc
clc
push
xchg
mov
mov
into
cwtl
aad
adc
lea
je
out
sbb
scas
jbe
add
ret
fisubrl
push
daa
fwait
inc
push
lock
cwtl
push
popf
sbb
loopne
inc
sub
adc
rcrb
mov
sub
ljmp
pop
adc
jno
inc
stos
call
mov
and
sar
mov
mov
and
jns
jae
and
fwait
xchg
test
stos
lcall
bnd
jge
jl
push
adc
push
out
sarb
popf
mov
cmp
push
out
cmp
xchg
and
or
or
mov
inc
inc
sub
add
jnp
cmp
xor
push
push
sbb
scas
and
sub
lahf
inc
js
dec
int3
int
outsb
sub
ds
cmp
ds
mov
fnstcw
fcompl
jl
insl
jge
cltd
jp
inc
xchg
xor
sbbl
in
cmpsb
call
cmc
lods
and
out
stos
jle
dec
shlb
mov
inc
rolb
in
sti
outsb
in
and
dec
mov
mov
and
mov
dec
repz
inc
fs
dec
insb
xchg
sub
dec
scas
inc
ja
dec
mov
sub
mov
lea
idivl
andl
cltd
sbb
test
inc
ja
icebp
mov
insb
dec
jecxz
cli
das
add
adc
cmp
pop
lcall
int
add
sub
pop
jmp
cwtl
cmp
xor
negl
pop
dec
rcll
jecxz
popl
add
jae
xchg
push
xchg
pop
mov
mov
ret
cld
xchg
jo
jns
int3
or
push
xor
cmp
push
fadd
daa
fidivl
mov
arpl
icebp
pop
into
add
lahf
or
das
sahf
push
inc
or
mov
xchg
mov
cmp
dec
cmp
pop
mov
mov
lahf
in
xlat
push
jo
mov
hlt
push
xchg
popf
fwait
repz
int3
fs
sub
pop
rcll
mov
ret
sbb
repz
mov
scas
test
mov
sbbb
shl
push
inc
sti
pop
push
ficomps
sbb
repnz
inc
sub
sbb
scas
outsl
cmp
fnstenv
add
lods
decb
lods
stos
out
rcrl
sbb
in
add
xchg
or
outsb
cwtl
xchg
add
mov
push
ljmp
nop
shlb
ss
cmpsl
popa
adc
std
xor
xor
test
jbe
loope
pusha
xchg
pop
add
push
aaa
jno
stos
pop
sub
push
xchg
sbb
jb
xor
loopne
and
mov
jo
sbb
out
ljmp
ret
cs
mov
mov
xor
bound
out
and
call
mov
into
divb
xor
test
jnp
out
push
push
imulb
adc
inc
xchg
jo
fildl
notl
xchg
or
jmp
or
dec
into
mov
adc
mov
lea
xor
xor
sbb
sarl
mov
fwait
lret
clc
es
and
mov
popa
cmpl
mov
mov
pop
loope
adc
call
jmp
push
nop
mov
aas
dec
loopne
popl
jp
loop
mov
ds
lods
jmp
fs
es
add
hlt
push
push
lcall
gs
pusha
dec
std
mov
inc
idiv
cmc
jge
aam
pop
dec
jl
mov
sbb
fwait
arpl
push
int3
in
hlt
push
sbb
clc
jo
mov
sub
bound
adc
sbb
out
sbb
pop
mov
jae
sbbb
lods
or
add
lds
jnp
push
lcall
cmp
cmp
imul
nop
outsl
or
roll
and
popf
fistl
add
dec
aaa
aad
xchg
rcrb
sbbb
xchg
scas
dec
ljmp
sub
ret
fdivs
or
out
fisubs
xchg
jp
icebp
mov
mov
mov
repz
stc
addr16
mov
lds
push
and
mov
ret
imul
jo
jbe
pop
gs
pop
mov
adc
lock
add
or
scas
push
aad
into
fs
mov
push
les
imul
clc
dec
dec
mov
outsb
hlt
xor
in
mov
xor
push
fs
int3
rclw
xchg
inc
sbb
cmp
and
leave
jmp
sub
shl
pop
ficompl
or
inc
stos
xor
out
cltd
sub
popa
xor
lret
shlb
mov
cwtl
pop
push
mov
dec
push
int
xchg
pop
push
test
rorb
add
adcl
ficoms
pop
inc
lds
push
mov
pop
xchg
xchg
adc
xor
push
cmp
mov
adc
call
pop
test
push
repz
lods
push
add
add
push
roll
ja
sbb
enter
mov
lock
xchg
das
daa
mov
adc
push
add
data16
hlt
rcr
call
scas
cmp
add
mov
mov
test
fs
pop
jns
pop
sub
repnz
push
xchg
scas
fnstenv
lcall
adc
ljmp
insb
lods
add
es
cltd
pop
pop
cmp
and
mov
mov
fisubrs
mov
es
scas
jbe
push
add
mov
mov
and
mov
sbb
pop
and
push
lds
call
les
sub
incl
sub
rcr
subl
inc
test
jecxz
out
sbb
fsubs
adc
aaa
jmp
dec
mov
adc
jmp
pop
enter
xchg
and
ljmp
out
adc
ret
sbb
in
add
mov
sub
xchg
sti
mov
daa
adc
mov
xor
jne
xor
mov
jge
jno
shl
mov
jg
sub
jg
push
mov
xchg
pop
int
lods
jae
pop
mov
sub
js
cltd
leave
cmp
jmp
mov
xchg
sbb
mov
in
inc
scas
stos
add
xchg
testl
push
add
mov
leave
cmp
cmp
xchg
mov
out
les
jbe
cmpsb
jo
jb
mov
int3
int3
or
and
jecxz
sub
push
aas
sub
jecxz
dec
mov
insb
lods
les
clc
std
inc
jg
mov
sar
cmc
xor
lock
cmp
adc
lods
inc
sub
nop
fstps
ljmp
push
or
xchg
push
mov
or
push
nop
lahf
jae
xor
lret
jge
frstor
xchg
cmpl
sub
cmpsl
sub
jmp
mov
jns
add
inc
inc
fstl
cmp
cmpsl
mov
test
out
pop
out
scas
push
pusha
sbb
bound
push
lods
jp
jnp
push
adc
es
xchg
stc
aam
scas
jg
fildl
pop
adc
xchg
jg
dec
xchg
dec
add
mov
scas
out
gs
orb
test
jmp
iret
repz
cli
add
leave
jl
jecxz
shll
pop
outsl
std
imul
je
test
mov
xchg
xor
scas
lahf
lds
push
jg
xlat
out
xor
rcl
addb
jle
inc
sbb
jle
push
sbb
addr16
mov
outsl
jl
pop
xlat
sbb
push
sub
flds
ret
dec
lret
shlb
jle
mov
add
xchg
mov
ds
mov
jmp
xchg
in
push
ret
xchg
xchg
inc
pushl
jmp
mov
fstps
mov
out
ret
nop
xchg
or
mov
mov
or
mov
cmp
les
xchg
mov
lcall
mov
nop
push
dec
pop
test
dec
xchg
jo
pop
in
movsb
dec
not
mov
or
shr
clc
shrb
cmc
notb
cmp
fwait
gs
jnp
mov
dec
ja
xor
pop
cli
add
cmp
lcall
pop
jo
sti
cltd
add
cmp
cmp
outsb
jae
inc
push
push
cmp
adc
icebp
enter
or
jp
adc
stos
pop
dec
inc
mov
sub
jo
das
pop
jb
jbe
cmp
leave
xchg
adc
sub
adc
dec
add
xchg
out
xchg
push
les
enter
xchg
push
pusha
jbe
lods
xor
jb
rcrl
call
fstps
mov
dec
fldenv
xchg
push
mov
add
push
cmp
add
out
daa
mov
cld
and
jne
repz
sbb
ds
pop
gs
fisttpl
aaa
into
stos
out
mov
lcall
popf
cmp
ret
out
imul
dec
jl
jae
push
test
sahf
test
fwait
cmp
cs
pusha
arpl
xchg
adc
cltd
lret
add
push
movsb
imul
sub
stos
xchg
imul
arpl
cmp
sbb
and
mov
loopne
lods
pop
or
dec
stos
out
or
into
cmpsl
in
add
std
popa
jb
icebp
jmp
cld
incb
pop
popf
inc
push
jo
mov
xchg
mov
das
lcall
cmc
xchg
adc
int
and
stc
fidivl
in
hlt
dec
mov
adc
ret
pushf
jecxz
mov
cli
push
dec
and
adc
faddl
pop
movsb
test
leave
mov
adc
and
sahf
push
mov
adc
cs
sub
cmpb
xchg
mov
jo
nop
cli
pop
or
adc
jno
inc
outsb
les
jb
and
faddl
add
jg
or
scas
pop
and
jo
xchg
adc
add
adc
mov
jns
in
mov
sub
inc
xor
enter
push
add
add
mov
pop
or
mov
push
push
out
call
jnp
dec
dec
mov
fsubrl
pop
inc
inc
or
pop
mov
add
call
loopne
int
in
push
dec
or
std
fwait
add
cs
test
js
pop
pop
add
dec
inc
mov
out
push
sbb
mov
inc
negb
decl
mull
mov
adc
cmp
setb
lret
inc
lea
js
imul
push
mov
ret
call
fdivr
and
cmp
daa
loopne
adcb
push
xlat
adc
dec
cwtl
cmp
and
push
in
pop
add
add
mov
lea
fs
daa
shrb
in
ljmp
clc
jbe
das
js
imul
lock
or
cltd
test
mov
mov
je
sbbb
cmpsl
loopne
xor
imul
idivl
push
sub
insl
pop
div
sbbb
mov
dec
cltd
fs
add
mov
push
test
imul
inc
xchg
xor
and
jae
std
out
pop
pop
imull
pop
add
jle
mov
xor
fs
lret
orb
cs
xor
lock
hlt
loopne
mov
mov
call
cld
lret
rclb
nop
popf
ret
xor
nop
cmp
jb
sub
scas
ret
shrb
enter
je
jo
insl
cmpsl
fstps
mov
pop
mov
xchg
testl
add
and
sbb
xor
dec
vpsrld
insb
fcomp
mov
jg
nop
cmpsl
jg
cmpsl
lods
in
nop
popf
sub
cmp
ret
leave
sbb
stc
mov
sub
lea
xchg
jno
xchg
dec
inc
lods
adc
xchg
ss
cmp
loope
stc
inc
inc
je
adc
test
inc
rolb
mov
cmpsl
pop
mov
jecxz
pop
adc
mov
xchg
fcmovne
lds
xor
mov
pushf
inc
arpl
hlt
mov
adc
in
adc
fsubrl
es
push
fwait
or
cld
sbb
leave
or
pushf
scas
dec
inc
ror
inc
push
mov
int
pop
xchg
sbb
sub
rcrl
scas
iret
into
or
pop
inc
inc
in
dec
sbb
aad
sbb
mov
pop
dec
cmp
shrb
mov
shl
jns
or
push
dec
shlb
mov
pop
sub
jp
xlat
int
inc
sbb
mov
fstl
mov
sbb
iret
or
and
xor
mov
and
es
xor
pop
jge
push
notl
add
sbb
dec
nop
imul
movsb
pop
arpl
push
dec
jmp
cmp
test
pop
aad
out
jge
sbb
mov
sbbb
call
aam
cmpsb
aaa
rolb
icebp
repz
add
lods
cmpsb
cmpl
xor
sbb
cmc
mov
inc
sbb
inc
mov
nop
lods
stc
in
mov
mov
mov
movsb
dec
scas
in
dec
adc
xchg
movsb
xor
and
lahf
sbb
lea
mov
dec
jle
call
jno
and
pop
dec
sub
ljmp
stc
mov
ret
pop
push
repnz
call
lods
int
js
in
lds
xor
pop
pop
or
mov
ficoms
rorl
mov
inc
cmp
fdivp
sti
aaa
adc
movsl
ds
movsl
inc
lea
loope
xchg
and
xor
mov
imul
push
push
sub
xor
int
ja
mov
mov
fsubrs
adc
pop
addr16
mov
cmp
imul
sahf
cmpsl
daa
cwtl
cmp
clc
xchg
jae
movsb
or
les
lods
leave
iret
arpl
orb
mov
repnz
popf
jae
mov
enter
outsl
fldenv
mov
call
xchg
mov
mov
xor
cltd
jb
test
mov
popf
push
mov
cmp
and
fucom
fdiv
inc
sbb
bound
inc
dec
dec
push
movsl
int3
popf
lock
mov
dec
or
lock
lds
adc
fistps
insb
cmc
repz
adc
mov
pop
dec
ds
in
arpl
xchg
and
fisttpl
mov
bound
pop
cmp
push
sahf
lea
std
lcall
push
push
ss
fwait
pop
adc
sbb
mov
das
mov
aam
lea
loope
mov
jns
or
in
pushf
stc
and
or
pop
xchg
xor
orl
mov
lcall
ss
xor
cmp
pusha
or
ret
rcl
popa
mov
das
and
sbb
mov
int
dec
push
sub
or
cmova
mov
daa
cmp
dec
add
add
sbb
or
push
aaa
mov
mov
adc
fisubrl
loopne
ss
in
sbb
inc
ret
sbb
add
sbb
sbb
xchg
cmpb
mov
std
inc
jo
and
cmp
sub
es
add
fcom
fists
test
inc
mov
loop
adc
lock
std
adc
add
cwtl
addr16
and
sbbb
shl
hlt
fcompl
in
scas
repnz
xchg
sbbb
ss
cmpsl
in
ret
sub
add
out
jo
sub
repnz
repnz
lcall
repnz
or
mov
insl
imul
repz
in
push
mov
jns
add
loope
mov
sub
add
mov
fiaddl
push
pop
push
dec
test
pop
mov
inc
add
inc
mov
fcomps
or
addr16
sarl
pop
cmp
popf
cs
faddp
sbb
iret
push
popa
arpl
pushf
cmp
push
mov
iret
jle
fxch
scas
push
ja
adc
cmp
cli
cmp
sbb
sbb
push
sar
gs
fidivs
pop
add
mov
rcl
cmp
mov
push
pop
arpl
mov
add
rcrb
add
sbb
mov
adc
cmpsl
xchg
fwait
and
mov
adc
dec
inc
cld
mov
and
cmp
add
fisubrl
xchg
xchg
fisubrl
mov
cs
loop
add
xchg
mov
cmpsl
dec
jmp
pushl
aam
push
call
push
addr16
scas
xor
inc
jecxz
dec
imul
inc
jae
loope
xchg
xchg
xchg
mov
dec
fsubrl
and
js
arpl
sbb
mov
inc
push
popa
cmp
xchg
jae
pushl
mov
cmp
arpl
ljmp
out
roll
jae
mov
xchg
fwait
add
pusha
mov
mov
nop
xor
mov
mov
mov
les
adc
dec
cmc
fprem1
jle
jp
rcll
sbb
ret
jne
sub
add
arpl
js
inc
or
fs
mov
pop
ret
pushf
in
dec
bound
lahf
mov
ror
xor
rorl
popa
jl
and
ljmp
add
pop
xchg
dec
scas
lods
sub
in
push
shlb
jp
adc
fstpt
sub
cmp
pop
cmp
push
pop
inc
sti
fcompl
in
dec
and
loope
addr16
out
push
lcall
and
mov
scas
jo
lock
pop
outsl
aaa
lods
cmp
rcr
cmp
push
or
mov
xor
fistpll
pop
lock
imulb
stos
push
decl
sub
mov
outsl
mov
insb
push
popf
xchg
inc
mov
dec
ljmp
in
and
jo
mov
scas
sar
sahf
faddl
and
lods
icebp
pusha
imull
cmpsb
loop
nop
sar
hlt
push
out
imul
push
xchg
mov
popl
xchg
adc
lret
cmp
pop
testl
inc
dec
movl
lahf
addl
movsb
and
inc
mov
out
ret
addb
aam
ror
inc
out
xchg
cmp
pop
jns
push
and
xor
mov
or
cmp
fdivrl
pop
incb
jne
ja
sub
pop
inc
int3
jmp
pop
inc
dec
and
push
mov
and
pop
out
into
or
test
mov
adc
mov
fsubl
adc
insl
addb
mov
mov
jbe
divb
cmpb
cmp
lods
pop
mov
mov
pop
lret
into
mov
inc
pop
mov
or
es
data16
sarb
or
jb,pt
jg
xchg
mov
cmp
filds
loop
iret
sbb
sbb
imul
orb
pop
cmp
shr
loopne
and
shrb
sbb
pusha
ficomps
push
cmpsb
fists
sub
dec
jmp
lock
inc
inc
inc
mov
xchg
fcmovne
mov
push
xor
enter
mov
sbb
add
shll
scas
repnz
call
cltd
xchg
cltd
sbb
jle
lret
pop
icebp
sbb
push
jno
inc
sarb
das
fnsave
or
and
orb
pop
fwait
jge
paddd
push
popa
mov
pop
cmc
push
jmp
je
aas
stc
push
inc
mov
and
rcrl
pop
jmp
add
daa
or
cmp
cmc
cltd
scas
addr16
pop
xor
cmp
in
testl
in
mov
ds
cmpsb
and
loopne
and
add
jle
cmp
fdivrp
and
lahf
ds
dec
out
dec
jb
mov
mov
push
inc
popf
imul
std
push
data16
pop
mov
aaa
adc
xor
ret
mov
xor
rcrb
jge
pusha
ror
mov
jne
jg
pusha
js
hlt
call
jl
xchg
out
mov
shll
xchg
insb
jae
arpl
popl
or
test
and
jge
push
push
lock
jg
loope
mov
mov
in
mov
push
loope
inc
pop
sbb
fnstsw
inc
loop
pusha
icebp
and
out
outsb
cli
cmp
pop
fimuls
mov
mov
jmp
pop
or
pop
jmp
mov
xor
push
imul
arpl
xor
leave
aam
out
dec
mov
call
and
push
jno
and
fisubl
les
in
les
xlat
popf
pop
ja
cld
jnp
xchg
xchg
bound
cmp
pop
jge
push
jmp
mov
inc
push
icebp
mov
sahf
cmp
pop
dec
loopne
or
aaa
sbb
test
pop
insb
iret
adc
xorl
pop
jge
jnp
lret
dec
xchg
pop
mov
xchg
pop
jmp
popa
cs
loopne
lret
inc
stos
mov
sub
dec
sbb
stc
sbb
jae
cmpsb
js
clc
dec
push
aas
ja
mov
stos
movsl
mov
xchg
cmp
jmp
outsb
pop
lret
push
into
push
scas
add
outsb
or
jae
test
pop
lods
insl
cmp
insb
dec
xor
sahf
in
mov
loopne
lea
mov
mov
aam
shl
dec
xor
shl
xchg
adc
int
fdiv
mov
inc
mov
mov
jno
xlat
cwtl
aas
xchg
inc
cltd
mov
mov
push
outsb
mov
jne
xorl
lret
stos
test
outsb
das
imul
fmul
in
mov
inc
test
in
inc
fdivp
inc
pop
xor
movsl
adc
mov
xor
adc
loop
repnz
ljmp
ret
mov
dec
mov
jg
cmp
jae
xchg
push
daa
mov
out
dec
out
rolb
inc
int3
pop
aas
xlat
iret
jns
rol
mov
das
into
insl
cmp
push
pop
cmp
fwait
pop
std
jmp
dec
push
add
pushl
mov
popf
icebp
jg
std
adc
dec
mov
jge
gs
jne
mov
clc
xchg
sub
and
ds
push
xchg
out
pop
pop
daa
out
sub
push
mov
ret
or
fs
fadds
cmpsl
pop
jb
test
fcomi
into
jmp
fistps
cmp
mov
gs
jl
je
and
sbb
push
push
xor
stos
stos
jp
je
mov
mov
mov
fwait
mov
adc
fs
sbb
jne
fcom
rcll
sub
jo
mov
in
test
sub
ja
enter
jnp
sbb
arpl
fcompl
into
mov
outsl
outsl
pop
jmp
leave
sub
shr
dec
jne
push
push
mov
jno
push
mov
sub
push
addl
pop
inc
or
xchg
cmp
dec
cmpsl
mov
jo
out
jo
imul
xlat
and
jecxz
cmp
push
sbb
mov
shrl
outsl
mov
scas
aas
inc
repnz
outsb
sub
sti
lcall
rorb
push
mov
ljmp
jns
aam
lea
xor
inc
mov
sbb
add
clc
dec
aaa
sub
jne
push
ret
loop
sbb
xor
out
jne
push
sahf
insl
add
cmp
or
xchg
inc
orl
insl
xchg
addr16
or
xor
add
pop
xchg
inc
adcl
xor
xor
out
fadds
mov
aaa
jmp
inc
xchg
xchg
jne
aad
add
mov
out
btcl
stc
lret
fidivl
fdivl
push
mov
jb
dec
scas
mov
subb
popf
push
pop
pop
xor
dec
and
pop
pop
sub
decb
mov
xchg
add
add
and
and
jae
pop
sbbl
fcoml
sahf
out
dec
cmp
out
out
cmpb
ret
mov
mov
ss
add
je
insl
mov
inc
dec
mov
mov
cmp
add
add
nop
mov
gs
pop
enter
lret
pop
mov
or
test
mov
pop
pop
or
pop
cmc
mul
sub
xor
jp
popf
sbb
cmc
sti
bound
xchg
repnz
stos
ljmp
outsl
hlt
repz
jnp
das
std
scas
cmp
sub
js
mov
sbb
fnstenv
xchg
loopne
sub
repz
scas
mov
mov
push
loop
xchg
push
bound
jo
add
inc
mov
push
fcompl
stos
mov
es
ror
outsl
sub
loopne
andl
ds
lock
cmpsb
fists
imul
sub
out
sub
shl
pop
movsb
fchs
push
add
lcallw
fmull
inc
repz
cmp
push
mov
aam
lahf
cmp
cltd
inc
insb
dec
cli
push
mov
lcall
ret
jge
jns
dec
pop
gs
and
inc
out
ljmp
repnz
sub
jnp
int3
and
movl
stc
dec
mov
sbb
mov
mov
pop
and
leave
cwtl
loop
inc
dec
bound
mov
imul
lds
lock
or
insb
ficomps
mov
xchg
in
shl
push
xor
push
aas
lods
mov
fdivr
pop
or
or
in
pop
das
cs
repnz
addr16
fnstsw
mov
jecxz
lds
les
fs
push
aas
insl
fildll
cmp
sahf
or
dec
out
les
call
jmp
test
jle
and
xchg
dec
mov
mov
jb
inc
adc
jmp
outsb
push
mov
xor
mov
mov
mov
sbb
arpl
mov
mov
testl
xor
sti
xchg
sbb
sub
jnp
and
fs
xchg
leave
push
inc
pop
out
mov
inc
jbe
out
aam
pop
pop
adc
dec
fcmovu
outsb
lock
dec
stc
push
daa
fs
insb
mov
sub
dec
mov
mov
cs
jg
pushf
mov
mov
add
fnstenv
out
mov
sarb
sub
ss
xor
sti
xor
xor
lcall
inc
in
out
sbb
stc
jno
aad
cmp
fs
stos
inc
add
cmp
mov
cmc
imul
bound
flds
stc
mov
mov
cmp
pop
in
dec
cmp
inc
mov
inc
imul
mov
push
push
xchg
sub
pop
mov
add
sub
stc
inc
mov
jb
cld
data16
inc
cli
ss
je
push
jbe
push
das
mov
sti
push
enter
stc
test
jmp
inc
mov
add
xchg
iret
lret
int
movsl
pop
xchg
outsb
add
mov
jnp
popf
stc
mov
or
mov
fistpll
cwtl
mov
mov
sub
sub
jp
iret
imul
rcrl
mov
in
cmp
mov
jp
cmp
stos
repnz
stos
stos
push
paddd
inc
fwait
jge
xchg
repnz
pop
xchg
dec
lret
and
sbbl
insb
xchg
inc
imull
push
push
pop
push
test
pop
dec
adc
into
outsl
in
and
or
or
fsub
fidivl
jmp
xchg
out
adc
or
loop
sbb
decl
mov
add
test
mov
addr16
mov
add
xchg
pop
mov
das
ss
dec
cmp
mov
inc
or
notb
lock
stos
xchg
andl
mov
ja
loope
inc
push
push
stc
dec
fisttps
in
push
sbb
jmp
xor
inc
pusha
test
jle
dec
mov
loopne
repnz
inc
js
push
movsl
push
adc
dec
cmp
xor
inc
push
lret
out
ficomps
and
pop
pop
add
repz
mov
mov
jnp
pop
insl
pop
repnz
sbb
fcomp
mov
cmpps
pop
add
xchg
xor
sbb
in
sub
jbe
mov
dec
in
in
sti
mov
dec
mov
aas
popl
out
lods
cmpl
mov
mov
shlb
add
xchg
ficomps
gs
push
mov
jl
or
idivb
imul
pop
iret
loopne
cltd
lea
nop
add
mov
sub
inc
out
fxtract
dec
sbb
or
leave
popf
jge
add
scas
xor
jb
inc
outsb
cmpsl
outsl
lret
mov
fsub
mov
add
push
fiadds
inc
lea
dec
fwait
or
mov
stos
leave
mov
inc
leave
jp
mov
mov
add
loope
or
xor
pop
test
fdivl
pop
cmp
dec
mov
jg
popa
sbb
iret
out
sahf
popa
vandps
xor
ljmp
cwtl
xor
mov
xchg
mov
nop
inc
daa
cmc
xchg
add
and
dec
subl
out
adc
daa
xor
jae
addr16
cwtl
add
test
ja
arpl
xor
fucomi
pop
and
jb
loop
ds
add
inc
fwait
aam
mov
fucom
gs
int
sub
lret
push
dec
mov
mov
aam
int3
sbb
pop
sbb
out
sarl
pop
notl
fildll
fsts
sbb
dec
ret
jle
and
cli
add
or
mov
mov
loope
testb
dec
mov
shll
dec
sbb
shr
fiaddl
repnz
adc
lods
cli
mov
pop
pop
ss
into
mov
inc
bound
xchg
pop
lahf
popa
js
push
int3
push
sbb
pop
cmp
add
mov
fdivl
movsb
push
xchg
or
in
push
inc
out
xchg
xchg
int3
inc
pop
loopne
pop
idivb
test
fwait
add
jbe
pop
adc
xlat
pop
add
mov
lods
pop
jmp
loope
xor
adc
into
lods
and
mov
sbb
rolb
dec
pop
inc
mov
popa
jg
inc
arpl
ret
jo
mov
cmp
add
adc
outsb
into
call
dec
fstpl
sbb
jb
mov
outsl
inc
stos
dec
das
dec
insl
add
or
shlb
jl
add
sbb
lock
jg
iret
and
add
cmpsl
ja
je
jne
lret
mov
icebp
xor
xor
jns
sbb
xorl
loope
bound
sti
je
fcomps
dec
iret
jle
pop
push
mov
pop
mov
inc
mov
in
adc
lea
inc
aaa
pop
imul
mov
lret
stos
jg
repz
cltd
lahf
mov
sti
stos
xor
cmp
fldt
fadd
adc
andb
mov
les
pushf
add
jl
push
dec
mov
dec
stos
loope
and
jge
mov
cmpsl
dec
lods
movl
popa
sbb
outsb
mov
sub
cmpsb
mov
repz
push
mov
out
ret
rorb
std
jbe
cwtl
add
imul
and
sub
popf
sbb
inc
mov
mov
out
dec
cmc
adcb
xchg
mov
pop
nop
sbbb
jnp
test
mov
in
repnz
out
mov
push
ss
jae
sub
xchg
or
sbb
jne
and
cld
fmuls
movsb
adc
push
shrb
lds
add
add
popa
test
jle
xchg
movsl
pop
cld
in
or
fstpl
popl
fcmove
push
pop
in
cmpsb
pop
pop
sub
aaa
inc
pop
pop
inc
ss
lds
cmp
stc
cmpsb
movb
data16
adc
push
rorw
xchg
push
sbb
in
add
nop
cmp
adc
aas
push
cmp
inc
push
cltd
xchg
adc
inc
icebp
cld
int
fucomi
add
les
mov
ss
movsb
mov
inc
into
daa
call
mov
pop
adc
cmp
cmp
scas
pop
xchg
xorb
imul
sub
jge
dec
jo
cmp
clc
push
mov
mov
mov
xchg
xlat
pusha
cltd
cmpsl
shrl
in
jmp
push
add
stos
inc
mov
mov
mov
hlt
jno
mov
outsb
or
fmulp
or
and
push
sbb
xor
or
mov
dec
cmp
popa
inc
insl
femms
mov
xor
sbb
sub
or
push
sbb
mov
add
rorl
test
add
adc
pop
inc
xchg
out
flds
push
aam
je
mov
fst
pop
mov
mov
xchg
shll
fwait
adc
xchg
xchg
jmp
pop
fidivrl
inc
ret
std
shr
dec
cmpsb
std
pusha
xchg
dec
cwtl
stos
sbb
dec
mov
test
pushf
mov
ds
sti
sub
fldl2e
js
imul
mov
pop
cmp
push
adc
ret
pop
loop
mov
push
iret
sti
lea
sar
mov
inc
or
and
or
sbb
jecxz
pushf
lcall
and
aad
mov
into
lds
xchg
shlb
cmp
push
xor
aaa
adc
lods
movsl
mov
cvtdq2ps
xchg
dec
stos
imul
jnp
push
or
xorb
jmp
fbstp
mov
fcoml
cld
and
movsl
rcr
movsb
mov
in
xchg
jnp
aaa
popf
or
mov
pop
pop
sti
aad
adc
roll
leave
stos
mov
push
inc
and
icebp
adc
add
pop
outsl
les
xchg
jp
andb
adc
cmp
call
cli
nop
pop
dec
sub
and
mov
and
nop
fdivl
push
xor
jle
fisubs
incb
xor
cmp
sub
sti
xor
roll
add
fcoml
dec
or
or
lahf
push
push
stos
mov
sub
iret
fs
fbstp
cmpsb
mov
and
push
fwait
and
cmpsb
and
fs
jae
inc
mov
jb
test
push
pop
jno
xlat
xchg
jle
mov
or
in
rorl
xchg
add
or
jge
ljmp
cs
and
xlat
sbb
xchg
movsl
arpl
xchg
fistpl
aad
mov
pop
mov
popa
pop
jo
js
jb
pop
mov
xor
cmpsb
data16
xor
cmp
das
mov
int
enter
lock
and
daa
mov
iret
insl
dec
mov
out
xchg
inc
adc
add
out
jge
xchg
aas
hlt
movsl
insl
mov
jb
test
stos
sbb
imul
fbld
inc
sbb
pop
mov
int
cltd
xchg
mov
mov
xchg
fldl
add
cmp
jmp
test
scas
sbbb
int
push
lea
clc
cmp
int3
je
push
inc
push
mov
ret
mov
mov
in
mov
frstor
cwtl
pop
sbb
leave
ret
push
mov
lock
mov
pop
or
and
mov
sbb
add
jge
lds
out
lret
loopne
call
pop
mov
subl
loopne
xor
ret
mov
stos
pusha
mov
repnz
jg
test
ret
shll
scas
lock
lock
lahf
sbb
push
test
mov
insl
cltd
int3
lea
cmp
outsb
jns
rclb
dec
pop
sub
xor
xchg
pop
sub
cmc
xchg
sub
and
inc
jne
shrb
jo
outsl
or
fstl
sbbl
xor
adc
cmp
sbb
sub
fabs
lahf
inc
mov
daa
scas
out
leave
ja
aad
jge
jmp
xchg
mov
xor
jb
mov
js
test
and
pop
add
mov
pop
push
mov
loope
and
les
sbb
mov
pop
je
mov
jne
mov
add
pop
sbb
std
jns
xchg
lret
sbb
jp
shlb
push
pop
das
xor
dec
or
sbb
rcl
popa
jno
addr16
mov
lcall
mov
fisubl
dec
push
jmp
out
out
fimull
mov
pop
lret
xor
in
fcmovne
int3
lahf
jle
loope
pusha
pop
out
lcall
sbb
stc
and
nop
into
mov
cmp
orb
xor
jp
mov
imul
and
icebp
xchg
aam
xchg
pushf
lret
pop
sbb
lods
imul
and
fldl
pop
cs
pop
outsl
aad
add
in
insb
mov
das
in
cmpsl
push
xor
lods
and
icebp
in
rcrl
add
or
int3
jnp
xchg
inc
mov
imul
shll
js
or
inc
and
xor
std
into
rorb
jge
cli
sbb
push
pop
loop
out
daa
pop
or
fisttpll
out
lret
jle
pop
faddl
pop
into
daa
jmp
aaa
inc
xor
and
dec
lcall
push
test
push
cld
jns
mov
outsl
aam
lds
int
insb
popf
sahf
push
push
testl
cmc
cs
add
stc
lods
mov
addl
mov
dec
mov
cli
mov
inc
jle
ja
in
xor
mov
les
inc
cld
sbb
cmpsb
lock
fildl
jb
lods
fmuls
mov
xchg
lahf
bound
mov
hlt
in
in
mov
adc
push
out
ficoml
mov
pop
out
add
push
shll
mov
mov
xbegin
mov
sbb
test
divl
jbe
jle
and
jne
mov
ret
push
loope
sub
mov
mov
and
jno
add
mov
adc
cli
lds
fstps
test
arpl
adc
sub
ja
js
psraw
push
outsl
mov
imul
loopne
mov
push
sub
mov
cmpl
push
mov
mov
gs
int3
lods
xlat
sub
and
dec
ljmp
cmp
jecxz
lret
lds
adc
mov
sti
insl
sbb
dec
inc
sbb
xchg
mov
in
jle
sbb
pop
stc
sbb
jge
cmp
pop
push
testl
lret
out
push
and
jge
inc
and
int3
xchg
lret
in
arpl
inc
jmp
sti
dec
sbb
pop
das
sbb
rolb
repz
mov
jl
dec
inc
and
repnz
sub
shrl
lret
add
mov
or
cld
dec
jno
loop
sub
mov
nop
cltd
inc
fsubr
fcoml
aam
sti
xchg
scas
push
dec
das
pop
iret
inc
ret
xchg
sub
add
movsl
nop
push
lock
clc
push
ds
daa
in
xor
mov
pusha
push
push
push
push
and
fs
xchg
dec
xchg
lods
pop
aaa
test
mov
xchg
dec
js
mov
jns
dec
push
sbbb
adc
stos
xchg
cmp
push
fdivr
push
mov
icebp
mov
daa
mov
xor
dec
addb
cmp
jno
dec
dec
pop
sub
xchg
sarl
lcall
test
mov
jo
jg
sub
xchg
xor
sti
leave
aaa
mov
repz
pop
pop
icebp
push
loop
flds
std
inc
adc
jae
jns
push
loopne
pop
daa
pop
jae
push
mov
repz
mov
push
leave
pop
pop
xchg
sbb
ss
push
xchg
mov
cmp
notl
dec
and
adc
sbb
lahf
pop
loop
mov
sti
rorl
push
jo
pop
pop
icebp
cmpsb
dec
arpl
sti
mov
jne
insl
pop
imul
addb
shrb
fiaddl
add
dec
int
mov
inc
dec
dec
mov
and
push
js
call
cmp
cmpsl
xchg
sbb
testb
mov
xor
loop
in
dec
adc
sbb
xor
iret
pop
push
sbb
mov
xor
push
and
lahf
mov
ss
loopne
ss
stos
jae
xor
ljmp
enter
dec
sbb
popf
test
test
inc
out
imul
sti
shrl
loop
loope
jbe
lea
sbb
mov
cmpsl
sbb
adc
pop
movsb
rorl
xor
sub
add
cltd
push
push
and
idivb
movsb
jp
push
cmp
js
insl
lods
or
arpl
sbb
push
cs
loope
aad
mov
sub
xor
stos
mov
push
ljmp
jo,pn
mov
and
sbb
mov
ja
scas
out
inc
adc
mov
xchg
test
mov
ljmp
rolb
aas
fsubrl
or
sbb
popa
bound
test
or
adc
cld
push
decl
inc
jp
jg
dec
xchg
or
movsb
push
mov
in
repz
call
xor
loop
pop
outsl
mov
fs
je
mov
ret
pop
sub
lcall
daa
shrl
push
packsswb
mov
aam
jge
cli
xchg
iret
hlt
enter
out
xchg
sub
test
cmp
mulb
push
leave
dec
inc
sar
cmp
leave
cmp
cltd
lea
xchg
aaa
fcoms
add
fiadds
fdivrl
adc
repz
out
lock
outsl
push
fmul
pop
inc
movsb
and
in
mul
xor
clc
xor
mov
dec
sub
out
jmp
jo
pop
lcall
enter
pop
inc
iret
pop
aam
cmp
jmp
jmp
xchg
lds
lods
mov
sub
push
pop
and
std
mov
inc
cmp
out
mov
movsb
pop
push
cs
xchg
jmp
scas
inc
dec
xchg
dec
ret
mov
sbb
push
and
mov
cmpsl
cbtw
into
mov
mov
add
cli
sarb
or
in
mov
xchg
std
repz
or
cmp
fucomip
jp
sbb
xor
filds
pop
cmpsl
sbb
sub
cmp
cltd
fildll
push
jge
cmp
push
in
in
in
push
leave
or
icebp
xchg
cmp
mov
pop
cli
outsb
inc
xchg
mov
call
jo
add
jbe
add
mov
xchg
adc
lea
and
leave
adcb
imul
cmc
sbb
enter
test
adc
jp
hlt
repz
jg
imul
aas
hlt
popf
sbb
dec
fnstsw
hlt
sti
out
lcall
mov
fimull
sub
xor
lods
pop
push
in
sbb
sub
dec
sbb
icebp
sub
jecxz
sub
lods
rcll
subb
jmp
stos
in
jmp
sub
sbb
mov
popf
inc
lds
cld
mov
sub
lods
loope
insl
xchg
cli
sti
sbb
mov
xlat
ja
jp
mov
cmp
jmp
push
sub
fwait
xor
das
mov
inc
test
mov
xchg
sub
stos
inc
sarl
xchg
jno
pop
outsl
add
outsb
cmp
mov
imul
rcl
add
jp
shrl
leave
stos
dec
xchg
push
pop
mov
mov
lds
xlat
lahf
dec
loope
sbb
sub
or
out
and
ret
aas
dec
mov
pop
xorb
mov
inc
mov
cld
xchg
test
adc
dec
and
and
add
scas
daa
push
jb
inc
or
or
in
dec
fisttpll
push
add
call
or
lahf
mov
jp
xchg
shll
pop
xor
xor
and
sbb
xor
sahf
xor
movsl
sbb
movsb
adc
sub
ficoms
out
add
fs
cs
sbb
cmc
xor
loop
add
cld
xor
and
cmp
push
testb
push
jp
cmp
test
and
jecxz
clc
cmp
aas
adc
jbe
xchg
arpl
dec
addr16
ss
movsb
sbb
out
fs
insb
mov
xchg
jno
lcall
inc
adc
xchg
add
dec
jge
repz
mov
dec
lret
shr
xchg
add
ds
popf
shrl
jo
and
ret
dec
rcr
mov
add
xor
cmp
les
mov
mov
sbb
nop
xor
outsl
mov
fidivrs
testl
cmp
fnstenv
xchg
lods
push
add
xchg
jg
aad
ret
lock
jnp
push
fldcw
push
das
push
ja
jo
cwtl
jbe
mov
scas
popf
pop
data16
jge
scas
cmpsl
mov
xchg
jbe
je
cmp
cmc
test
or
or
inc
push
pop
push
scas
test
out
das
stos
mov
mov
aaa
dec
jg
xchg
cmc
inc
pop
sbb
arpl
mulb
popa
jae
fildll
jo
cwtl
lods
mov
divb
or
pop
stc
int
mov
gs
jp
cli
shll
std
jns
stos
sub
add
push
cmp
mov
cli
scas
adc
cmpsl
mov
fs
loop
sub
pop
fdiv
mov
mov
pop
fwait
in
icebp
cmp
imul
push
and
pop
and
and
and
jg
inc
xlat
mov
mov
enter
mov
mov
mov
add
fs
xchg
jnp
in
jl
repnz
test
lret
addr16
or
cld
sub
mov
mov
out
mov
sahf
mov
jecxz
lahf
pop
push
ret
stc
xor
into
dec
xor
imul
pop
sarb
lods
call
fnop
sbbb
pop
mov
jmp
outsl
and
fwait
ljmp
inc
test
dec
mov
insb
push
sbb
lock
pop
lahf
mov
mov
mov
mov
notl
pop
scas
mov
stc
fnsave
adc
mov
mov
add
jbe
in
test
cmpsl
je
push
pushf
mov
imul
inc
imul
inc
mov
mov
pop
je
ret
test
mov
add
push
es
xchg
push
mov
mov
iret
pushaw
int
mov
or
sbb
test
loopne
cmp
pop
and
add
adc
dec
rorb
mov
mov
std
je
gs
or
mov
lret
add
xor
sti
mov
mov
addl
sub
xor
mov
hlt
pop
negb
mov
shlb
mov
ljmp
xor
rcll
mov
mov
in
mov
sarb
std
or
pop
pop
sub
fwait
andb
add
pop
bound
or
mov
pop
iret
out
adc
cmp
jnp
ja
add
push
inc
or
ljmp
pop
mov
call
push
hlt
decb
movb
push
jae
inc
xchg
and
aad
daa
popa
shl
xlat
test
negl
icebp
mov
inc
aaa
out
out
cli
rclb
mov
ficoms
mov
loop
lret
mov
or
je
test
pop
xor
sub
movsl
push
xor
jbe
xlat
sub
sub
movsl
push
xchg
xor
popf
pop
loop
jmp
ljmp
int3
sti
mov
and
jne
fdivs
or
xlat
out
pop
mov
jge
data16
outsl
adc
ljmp
push
into
out
and
in
addr16
cltd
pop
scas
loope
lahf
std
fsubp
mov
in
mov
call
ds
cmp
mov
push
jle
pop
xor
adc
jno
mov
push
popa
mov
jmp
push
add
mov
fldcw
cmp
rcll
ds
je
std
repnz
xor
or
fcoms
xor
insl
inc
push
js
pop
subb
pop
pop
icebp
cmp
mov
dec
dec
sbb
jno
fistl
inc
mov
add
cmp
aam
push
pop
notl
xor
lcall
jp
mov
dec
mov
hlt
inc
mov
mov
jno
pslld
jle
fs
dec
inc
shr
int
push
jl
pop
int
push
push
cmp
mov
pop
cwtl
xchg
xchg
xor
scas
push
aad
ds
inc
loop
xchg
fisttpll
rcrl
lret
sbb
add
fs
mov
faddp
fldl
xlat
sbb
cmp
mov
movsl
pop
scas
jle
xor
adc
xlat
push
popf
cmp
xor
push
pop
ljmp
stos
mov
rol
out
lret
xlat
cltd
iret
loope
ja
cmp
adc
xor
outsl
dec
icebp
into
adc
ja
dec
inc
std
pop
xchg
aas
fwait
in
arpl
popf
mov
xor
jnp
movsb
mov
decl
mov
outsl
and
lods
xchg
cs
cmp
and
jns
cmp
test
jle
push
mov
push
ljmp
pop
sub
aad
int
lock
xor
jge
test
lahf
pusha
iretw
push
mov
pop
scas
sbb
int
sahf
aad
call
rcll
sub
movsb
pop
fistl
pop
ss
inc
enter
jmp
xchg
insb
xchg
pop
repz
shl
pop
inc
mov
mov
in
shlb
aad
cmp
mov
push
mov
add
mov
pop
inc
sbb
sbb
loope
pushf
ljmp
out
push
lods
dec
xor
ds
testl
daa
int3
lds
push
test
adc
insl
lret
sbb
push
pop
mov
or
daa
mov
inc
imul
xor
cmp
sub
aas
aad
sbb
pop
xchg
inc
inc
fwait
and
lret
push
mov
das
lea
out
adc
jbe
clc
or
jb
mov
call
fiaddl
call
les
sbb
fistpll
std
into
xor
test
and
call
mov
jno
data16
into
push
add
xchg
das
push
push
sub
dec
push
sub
popf
fisubrl
push
movsl
iret
mov
lds
cmpl
xor
movsl
inc
fimull
adc
dec
dec
cld
btc
lods
rolb
push
lret
mov
add
sub
pop
push
push
jo
std
xchg
sbb
mov
jmp
das
pop
shll
into
outsb
adcb
call
ja
mov
push
cld
ds
imul
mov
pop
jge
popl
or
sbb
add
mov
imul
xchg
sar
stos
inc
jmp
sub
sub
lods
insb
cmp
mov
sub
pop
inc
jl
pop
out
xlat
jno
xchg
xchg
fs
lock
mov
ljmp
shll
out
mov
cmpb
add
popa
aad
js
push
fistps
or
test
pushf
xor
ljmp
popf
add
jge
pop
pop
and
test
call
into
sbb
cmc
in
pop
inc
dec
ds
mov
inc
loopne
sub
ret
dec
fisttpl
push
ret
mov
in
xor
inc
adcb
adc
pop
push
in
pop
loopne
jno
fsts
and
cmp
and
aas
and
test
int3
or
xchg
jg
sti
mov
popf
xchg
shll
and
adc
sti
and
push
jno
in
lahf
xor
rcrl
lock
and
mov
loop
lods
cmp
mov
ljmp
or
cld
arpl
and
int
lahf
or
sub
xchg
sbb
hlt
lea
inc
out
rcll
adc
popa
popa
add
cmc
mov
clc
dec
mov
sti
pusha
cmpb
icebp
fucomi
aam
mov
fldt
movsl
jge
sub
push
jp
insb
pop
mov
and
dec
xchg
scas
aas
hlt
sub
imul
pop
stos
das
mov
insl
int3
test
lds
rclb
mov
inc
gs
dec
stos
cmp
int
cmp
ret
fs
lcall
cmp
arpl
pushf
cmp
push
inc
mov
mov
loop
pop
test
cmpsb
push
shlb
jge
aam
xchg
js
into
jmp
negl
filds
lods
out
push
and
test
xlat
jnp
mov
xchg
out
int
flds
mov
xchg
shrl
icebp
mov
mov
cli
aad
push
cli
fsubrs
fmull
aam
les
xor
decl
pop
sub
mov
push
rcl
and
insb
fmull
pop
xchg
mov
jae
mov
les
or
adc
add
add
push
jb
cmp
lcall
ret
gs
arpl
and
sbb
xor
jae
xlat
mov
adc
out
test
ljmp
pop
stos
iret
ljmp
xchg
or
and
lret
enter
shll
sub
stos
ja
out
xchg
arpl
cmp
mov
mov
aas
or
mov
inc
loop
mov
aas
xor
xchg
inc
roll
flds
xchg
push
aam
sbb
loopne
mov
mov
xor
movsl
sahf
stos
movsl
jns
sub
mov
and
mov
cmp
sub
pop
sbb
cmpsl
fildll
push
mov
call
dec
push
sub
and
or
cli
xchg
aaa
in
cmc
pop
jle
mov
cmp
mov
negb
popa
cli
or
adc
fmuls
fs
stc
cmp
ret
xchg
fisubrl
int
sti
pop
pop
icebp
jmp
and
xor
jb
fsubrl
int3
mov
pop
pop
jno
loop
jae
loope
xlat
mov
mov
ss
xor
jne
rcl
cmp
add
ljmp
jmp
adc
std
stos
mov
in
lret
mov
ret
dec
xor
xlat
push
sub
mov
outsl
mov
scas
add
dec
imul
pop
pushf
repnz
loope
mov
push
mov
push
xchg
push
push
cmp
adc
mov
and
push
pop
out
jmp
sbb
lds
arpl
mov
jle
cmp
push
jp
add
cltd
lock
cmp
jns
xchg
dec
enter
and
sub
call
testb
pop
or
xlat
dec
xor
jg
bound
jl
int
mov
adc
push
mov
jmp
pop
gs
cmp
insb
mov
cmp
cmc
push
push
mov
mov
cmpsl
fdiv
jae
ficomps
inc
jle
stos
and
mov
adcl
push
fstpl
cmc
sbb
fdivr
push
mov
pop
pop
mov
dec
lret
sub
adc
jbe
mov
arpl
mov
sbb
inc
or
sub
inc
mov
dec
adc
leave
cmp
lds
dec
repz
aad
jae
push
std
fisubl
test
xlat
shl
es
pop
mov
inc
xlat
cmp
lahf
adc
or
and
dec
dec
jbe
pminsw
jle
cmp
out
cmpsb
or
jp
xor
mov
out
sbb
mov
aam
pop
cmpsb
ja
lock
cmp
popa
int3
xor
and
insl
xor
call
dec
xlat
and
rcr
lcall
fiadds
std
data16
rcl
shrb
inc
sarb
lret
stc
into
cmp
pop
jge
xchg
push
das
and
and
orb
sbb
out
iret
fstpt
pop
aad
push
mov
in
ljmp
pop
push
inc
pop
mov
and
pop
mov
dec
xchg
push
hlt
mov
inc
insb
mov
daa
popa
and
int3
pop
and
rclb
out
xchg
pop
mov
rcll
jecxz
ret
and
jbe
mov
scas
mov
lahf
dec
jno
xchg
movsl
inc
ss
dec
fiadds
roll
in
dec
pop
pop
loop
inc
sahf
ficoml
cmp
fisubl
adc
jno
jg
repz
movsb
lahf
xor
cli
mov
or
mov
or
js
lds
and
jmp
in
add
inc
jmp
dec
jge
std
xchg
fwait
loope
bound
sub
es
loop
bnd
cld
jle
adc
or
int3
sbb
dec
xchg
xor
jbe
sbb
mov
fistpll
jae
negb
fbld
mov
jae
mov
and
sub
mov
mov
adc
push
push
dec
push
xor
hlt
neg
or
or
dec
dec
mov
mov
sahf
sub
dec
adc
test
imul
call
rcr
andl
dec
jbe
arpl
cmp
jle
pop
xchg
push
scas
cmpsb
test
mov
scas
sub
push
fwait
stos
stos
or
adc
adc
in
idivl
imul
inc
scas
das
mov
fbstp
xchg
mov
add
in
out
imul
push
scas
pop
xor
sbb
adc
repz
sbb
mov
data16
xor
mov
jmp
cld
push
mov
mov
hlt
or
es
mov
ja
int
mov
das
je
cmpsb
cmp
addr16
push
out
jecxz
roll
aad
inc
lcall
ret
hlt
or
pop
mov
sub
lods
mov
out
cmpsl
sbb
lret
movsb
sahf
scas
fwait
mov
cli
lds
lahf
mov
ljmp
imul
test
push
mov
and
sub
jg
xor
xlat
xchg
sub
pop
fwait
mov
stos
xor
out
cltd
iret
jb
jns
dec
rolb
adc
out
inc
lods
cmpsb
push
jne
cmpsl
dec
insl
sub
mov
in
stos
inc
std
push
aad
push
mov
cs
mov
adc
cmp
dec
scas
inc
aaa
sbb
cmpsl
aam
jns
pop
or
mov
mov
jbe
fstpl
xchg
and
jecxz
adc
pop
test
sbb
jg
jns
mov
adc
pop
fsub
out
sahf
out
mov
cmpsb
pop
xchg
sbb
xor
xor
and
rolb
xor
mov
insl
loopne
lret
and
das
enter
xor
lods
ljmp
lock
sbb
mov
test
aad
mov
push
mov
fs
inc
sbb
std
cmp
push
mov
cmp
inc
and
sti
idiv
sub
mov
mov
xorb
fwait
mov
push
or
mov
loopne
call
int3
icebp
shll
gs
adc
inc
cmp
cli
pop
mov
sahf
lods
popf
fdivrl
es
jae
inc
sahf
or
push
and
fs
sahf
mov
insl
mov
mov
cs
je
xchg
mov
mov
mov
pop
and
repz
mov
fnstcw
jecxz
jbe
arpl
mov
xchg
mov
lahf
sub
mov
in
inc
stos
lcall
nop
fnstcw
nop
xchg
sub
sarb
xchg
call
sarl
pop
pop
add
cs
mov
adc
lods
fidivl
nop
sub
push
cwtl
in
stos
jo
mov
out
jne
pop
imul
imul
out
imul
loope
clc
sub
push
xor
sbb
xchg
leave
adc
hlt
mov
js
ss
stos
and
in
std
xor
cs
iret
stc
dec
mov
hlt
rcl
push
in
xlat
push
outsb
jp
pop
shlb
adc
int
mov
das
in
gs
ds
or
sbb
or
mov
lcall
xor
aad
push
repz
cmp
push
and
hlt
rorb
mul
and
jne,pn
xchg
xchg
adc
push
ficoml
push
gs
inc
jbe
rcrl
mov
jmp
inc
mov
movsb
or
shl
inc
mov
icebp
orb
xor
adc
mov
fwait
cmpsl
add
and
inc
out
dec
xor
idivb
pusha
xor
push
push
cwtl
insl
enter
lret
xor
loop
push
mov
mov
cwtl
adc
xlat
mov
xor
iret
cltd
es
cmp
xor
pushf
push
or
gs
shrb
pushf
adc
bound
fwait
inc
cmp
pop
xchg
jno
ljmp
dec
loopne
dec
pop
push
push
and
rcll
lret
test
leave
xchg
and
xchg
rorb
test
rcl
jb
and
and
jne
dec
cmp
ja
xchg
jns
sbb
sub
rolb
movsb
mov
xchg
xchg
adc
pop
mov
fwait
pop
dec
or
pop
std
dec
pop
mov
adcl
sbb
mov
test
inc
sub
or
dec
cs
xchg
pop
xchg
xchg
push
mov
pop
sub
sbb
mov
lods
pop
lea
jo
cmp
adc
xchg
jge
adc
outsl
fisttpl
in
scas
loope
pop
push
sbb
cmp
push
xor
test
shrb
enter
lret
aad
rorl
inc
sti
inc
cltd
ret
xor
sub
int
mov
jge
out
mov
sbb
or
cs
sahf
mov
cmp
push
pop
rcrl
fisubrs
xchg
adc
subb
out
jmp
mov
jl
pushl
popf
pop
into
in
adc
test
movsl
rclb
adcb
movsl
call
in
adc
pop
loopne
xor
shrb
fisubs
jp
out
sbb
mov
fwait
dec
mov
mov
push
insb
mov
jne
popa
scas
int3
xchg
and
imulb
int
fs
jne
roll
lods
jecxz
mov
arpl
inc
cltd
pop
cmc
stos
jne
adc
imul
sbb
dec
sbb
mov
ror
inc
fldcw
int3
jns
pop
sbb
out
in
mov
pushf
cltd
jae
lcall
outsb
cs
loopne
dec
xor
hlt
xchg
std
outsb
into
cmp
imul
lods
sti
mov
int3
jne
cwtl
outsl
cmp
fmull
pushf
ret
add
jge
lahf
out
jmp
sub
pop
sub
push
cli
add
push
inc
mull
sbb
ja
outsl
xor
cmpsl
xor
pop
imulb
xchg
mov
sub
push
adc
push
jno
xchg
movsl
inc
or
xchg
cmp
pop
dec
xor
iret
in
ret
push
mov
mov
outsb
or
scas
sub
mov
and
inc
fbstp
sbb
divb
or
and
loope
pushf
sbb
rorb
fisubl
popa
and
pop
mov
clc
cmp
stc
and
bound
and
sub
outsl
cmp
sub
adc
mov
ss
xchg
adc
or
pusha
cli
mov
push
call
lock
pcmpeqb
and
sub
cld
enter
cmp
lods
popf
dec
pushf
xor
inc
rolb
repz
jae
or
jno
push
push
lahf
fcompl
and
js
gs
xorb
dec
mov
or
jmp
jge
xor
adc
and
jnp
ja
inc
test
popf
mov
jne
insl
push
nop
subl
xor
repnz
mov
psubw
dec
add
mov
es
stos
jmp
push
aam
mov
xor
imul
and
inc
mov
xchg
pusha
push
lret
out
arpl
inc
jmp
adc
sbb
fmull
shll
icebp
mov
and
fisubrl
add
mov
andl
dec
or
sbb
jne
mov
dec
out
das
push
divb
loope
fsincos
insb
jne
popa
or
lods
jl
jmp
enter
sbb
push
xor
lods
movsl
test
sbb
jge
rolb
xlat
bound
mov
insl
sub
add
push
jbe
pop
cmpsb
pop
cmpsl
xchg
push
out
dec
sahf
hlt
jo
jns
xchg
lock
sbb
xor
adc
push
xchg
mull
leave
dec
and
and
xor
stos
xchg
into
out
jmp
mov
in
dec
lds
in
mov
adcl
and
data16
mov
adc
in
mov
fidivl
jne
push
inc
sbb
repnz
loopne
xchg
leave
incl
cltd
mov
out
jne
cmpsl
popf
pop
push
push
ret
dec
test
shrl
addr16
mov
xor
add
sahf
cwtl
jns
fmuls
aaa
mov
in
popf
lock
jne
std
cs
and
into
xchg
ljmp
icebp
lret
cli
mov
jnp
push
fidivrs
jb
ret
jl
mov
test
fdivrs
clc
push
ret
sbb
mov
pop
std
ret
pop
cmp
lret
leave
xor
xchg
sbb
leave
scas
add
jmp
in
adc
fwait
into
sbb
ret
and
mov
jne
xlat
daa
pop
xchg
sbb
jmp
dec
shl
out
test
dec
pop
pop
dec
mov
or
lock
pop
lock
mov
clc
shl
dec
cmp
mov
xchg
inc
mov
in
ljmp
orb
xchg
repnz
shlb
cld
sbb
mov
mov
sbb
int
jns
mov
sbb
into
fstps
int3
mov
jl
push
xchg
xchg
dec
std
popa
les
xor
mov
orl
jl
fcoml
sub
xchg
xor
int
and
adc
fimull
fs
add
mov
push
scas
cmp
cmp
call
subb
mov
jg
inc
push
rcrb
inc
pop
cmp
cmp
jle
fcomps
arpl
repnz
sahf
or
or
jno
push
ds
mov
jne
loopne
xor
sbb
sbb
dec
jecxz
push
hlt
pop
scas
test
cmp
mov
mov
dec
shr
mov
sbb
mov
or
sub
cmp
les
dec
xchg
sub
mov
loope
mov
push
jl
out
cmpsl
cmp
in
iret
pop
sub
aad
xor
mov
mov
aas
mov
dec
cmp
inc
sarl
xor
xchg
test
imul
pop
mov
popa
bound
mov
aam
test
sbb
xor
cmc
cs
test
xor
mov
pop
test
xchg
xchg
pop
dec
and
or
inc
decb
mov
aas
pop
aaa
lods
hlt
fidivrs
pop
loope
sbb
lahf
inc
jmp
push
rorb
xor
roll
cmp
dec
push
out
mov
sbb
into
jl
mov
sub
xchg
and
sub
mov
or
push
movsl
xchg
dec
xchg
stc
cltd
and
push
dec
push
inc
inc
inc
mov
xor
insb
mov
sub
mov
add
add
mov
inc
xlat
inc
fmull
repz
test
aas
xor
fisubrl
mov
out
mov
pop
lahf
rcrb
lret
call
sub
xchg
push
pop
inc
sahf
xchg
hlt
imul
jle
mov
hlt
dec
test
in
sub
mov
movsb
dec
sar
les
shl
mov
mov
testb
loop
add
hlt
cmp
adc
je
sarl
in
mov
jo
ljmp
movsb
aam
arpl
dec
dec
popa
push
loopne
popf
ja
cmp
adc
in
sbb
dec
inc
cwtl
add
push
inc
mov
inc
sub
enter
or
inc
lret
mov
mov
add
jl
mov
lods
icebp
add
aam
mov
sti
sub
out
hlt
mov
insb
jb
in
test
pushf
pop
add
adc
sbb
fldl
scas
or
jo
push
cmp
in
aam
loope
sub
adc
pop
test
mov
mov
cwtd
add
jnp
sub
sub
scas
test
cmpl
jecxz
push
unpcklps
fidivrs
jl
loope
push
iret
xor
mov
lods
jbe
leave
cmp
cmpsl
rol
push
jb
sbbb
mov
rol
push
mov
cmp
insl
mull
adc
mov
roll
push
or
mov
mov
movsl
push
aaa
pop
mov
or
pop
lea
inc
push
sub
mov
xchg
inc
or
push
pop
addl
mov
push
jae
sbb
lahf
jge
fsts
ret
repnz
mov
adcl
je
mov
lcall
fstl
dec
out
fs
jl
arpl
sub
mov
lods
mov
push
cmp
out
fistps
jecxz
inc
pop
jmp
jge
icebp
stos
popa
mov
test
inc
adc
push
ffreep
ficoml
mov
mov
xchg
lock
movsl
mov
add
add
jecxz
inc
pop
jge
ja
jae
jae
sbb
popa
push
movl
mov
test
fnop
lock
pop
pop
jne
jp
mov
dec
jno
add
popa
test
mov
loope
or
stos
mov
or
movb
mov
add
mov
pusha
into
pop
loope
scas
rcll
test
sarl
loope
movsl
add
fists
push
jns
mov
mov
leave
xor
mov
mov
xchg
jns
or
nop
mov
hlt
nop
fcompl
cmpb
mov
lods
scas
push
mov
cwtl
mov
mov
dec
xorl
lock
lock
ljmp
and
xchg
in
jecxz
jge
sub
pop
inc
mov
jge
sub
jmp
xor
ja
sti
adc
imul
pushf
sub
in
push
loope
mov
mov
dec
add
xor
lods
or
or
jl
call
nop
xchg
outsl
lahf
jmp
rolb
and
sub
adc
or
and
push
inc
dec
sbb
push
adc
cmp
push
add
loopne
add
push
add
addb
add
and
sub
add
push
maskmovq
notl
and
xchg
aaa
out
jns
dec
mov
aaa
dec
das
jb
mov
lret
cltd
xchg
mov
testl
test
push
je
fdivrl
xchg
mov
cmpsb
data16
int3
mov
fucom
out
sti
cmpsb
std
or
sti
jmp
cld
std
stos
cli
pop
out
test
int
sub
cvttps2pi
lods
cltd
mov
and
into
pop
xor
cltd
lock
lret
out
mov
jge
sbb
fsts
and
ret
push
pop
adc
cmp
pushf
std
mov
stos
mov
iret
adc
pushf
clc
fwait
push
and
jne
pop
test
mov
mov
push
je
call
pop
fdivl
dec
stc
add
sub
dec
jle
mov
mov
popa
ja
xchg
arpl
in
sub
push
repnz
or
inc
dec
push
shrl
test
cld
mov
xor
ds
and
iret
jmp
mov
test
jne
inc
out
mov
xor
dec
mov
push
xchg
inc
js
test
push
fildll
push
xlat
jo
jmp
fcmove
dec
add
add
insb
or
neg
arpl
je
jns
rorb
pop
fdivrs
leave
pop
ret
cmpsl
lea
ret
inc
in
sub
fwait
xchg
mov
push
dec
ror
ss
popf
sbb
outsb
adc
lds
mov
test
shl
dec
pop
xchg
dec
mov
xlat
inc
in
gs
cmp
mov
imull
loop
add
je
and
addr16
cmp
shll
dec
test
mov
ret
retw
xor
loope
pusha
rcrb
xor
pop
cmp
adc
xor
shlb
push
call
push
push
fwait
into
fbstp
test
movsb
setl
xchg
xchg
adc
lret
inc
jle
inc
mov
fisubl
outsl
sbbb
and
out
push
mov
and
push
push
out
fdivp
sbb
inc
fcomp
dec
xchg
out
fs
push
push
js
lret
pop
leave
js
mov
xchg
adc
mov
xchg
outsl
stos
or
lock
call
sub
push
push
stos
push
vpcmpeqb
push
or
xor
sarb
jge
inc
cmp
inc
mov
js
and
std
xchg
sbb
or
xlat
xor
xchg
mov
shl
add
lret
mov
sub
mov
pop
int3
addr16
adc
lahf
xor
ret
pop
fsubl
xchg
mov
and
and
adc
push
cltd
and
pop
or
adc
mov
dec
pop
js
scas
rorl
fcmovu
jno
fisubs
xor
and
call
nop
mov
mov
push
mov
cltd
int3
fidivrs
lods
or
popa
jp
mov
push
clc
outsb
mov
jl
cmpb
mov
sbb
xchg
jmp
loop
test
ja
sbb
vmptrst
mov
sbb
scas
or
mov
dec
ds
pusha
push
jp
arpl
pop
outsl
enter
sbb
xchg
xchg
idivb
or
mov
cmpsl
cmpsb
cwtl
aam
in
mov
xorl
shr
call
push
aaa
imul
add
pop
mov
int3
pushw
fdivl
shlb
cltd
cmpsl
cltd
adc
and
test
scas
pop
cwtl
lcall
jbe
push
sub
adc
roll
dec
mov
scas
sbb
test
jbe
mov
cmpsl
add
lods
xlat
xor
insb
psubq
cmp
fmull
fst
repnz
into
sbb
and
out
cmpsl
adc
lcall
mov
adc
pop
fsubp
xor
cs
mov
mov
or
jne
sub
ljmp
insb
or
sbb
pop
imul
pop
imul
bnd
pop
sbb
in
outsb
loope
mov
sub
xor
mov
sbb
adc
bound
xchg
sbb
mov
movl
out
pop
popa
movsl
xor
xor
or
das
sub
mov
test
je
mov
and
dec
cmp
orb
mov
stc
ss
sub
xchg
mov
das
dec
push
lcall
test
ss
stos
pop
cmpb
adc
pusha
enter
roll
and
cmp
les
mov
sub
adc
inc
push
xchg
xchg
outsb
xor
sbb
jmp
in
outsb
movsb
sub
jns
mov
imul
mov
fnstsw
inc
and
dec
mov
xor
dec
adc
mov
xchg
imul
push
inc
sarl
push
inc
jns
jno
inc
dec
adc
in
xorl
rcrb
jge
scas
xor
mov
dec
push
jl
loopne
stos
xor
xor
arpl
imul
sti
outsw
nop
inc
lret
iret
xchg
ss
aad
push
scas
cmp
js
push
data16
xchg
jno
outsb
bound
push
dec
add
sti
jl
std
movsb
cmp
xor
scas
test
jns
aaa
into
enter
outsb
daa
in
js
lcall
popf
xchg
push
add
mov
shll
mov
lds
pop
jnp
inc
mov
push
sahf
dec
adc
daa
pusha
das
jbe
roll
mov
inc
push
pop
inc
les
les
cmc
pop
fists
test
lods
xor
idivb
sar
xlat
push
rcrb
ja
xchg
sarb
and
fisttps
gs
scas
loope
pop
sbb
adc
mov
or
pop
mov
stos
imul
push
popf
insb
cltd
jb
and
jbe
and
mov
js
adc
or
pop
lea
pop
pop
int
rclb
scas
xlat
movsl
sarl
mov
dec
mov
ljmp
sbb
adc
cwtl
add
icebp
xor
dec
dec
cmp
scas
lock
pop
push
aaa
inc
xchg
aas
xor
cmp
ud1
or
mov
jne
outsb
sub
fimuls
fisubrs
push
xchg
xor
adc
sub
in
adc
fimull
push
sti
insl
lret
mov
pop
sbb
mov
ss
jge
in
or
or
pop
std
dec
mov
push
sti
in
shlb
or
or
push
nop
int3
ret
andb
bound
imul
rorb
mov
stos
sbb
fcmovnb
shlb
jae
stc
xchg
pop
push
xchg
xchg
insl
ds
insb
cmp
clc
mov
pop
push
push
add
imul
fs
jmp
mov
movsl
sahf
push
push
xchg
sbb
fidivs
jbe
mov
jbe
int3
push
ret
bound
mov
in
xor
mov
fs
lret
lods
jb
repnz
in
mov
imul
mov
jne
ja
hlt
cli
mov
jns
test
push
fwait
adc
xorl
es
lret
fwait
jge
push
xor
dec
push
sbb
movsl
cwtl
or
cmp
sbb
in
popa
sahf
daa
aam
sbb
xchg
stos
jmp
mov
ror
insb
sti
or
xchg
adc
test
adc
test
mov
jmp
and
dec
or
xlat
adcb
and
out
mov
or
xor
notl
jle
movsb
ret
setp
fsubrs
adc
test
jo
inc
insb
adc
cmp
push
movsl
stos
mov
mov
mov
xor
and
inc
or
outsw
xor
xchg
dec
xchg
jbe
jmp
cli
push
fsubrl
mov
xor
lret
sub
pop
push
insb
lods
lods
popa
movsb
mov
xor
stos
jmp
data16
mov
jbe
mov
lea
enter
jnp
ror
in
adc
fdivl
repnz
std
stos
sbb
or
add
cmc
addr16
insb
lcall
sbb
mov
insl
in
xchg
movsl
jl
imul
sub
mov
test
test
cmp
test
roll
dec
mov
test
pop
mov
xor
jl
addr16
fwait
jae
fnstenv
testl
icebp
js
mov
mov
pop
mov
fs
jae
imul
jne
add
mov
lock
fwait
mov
loope
push
lea
addr16
int3
fldcw
rolb
push
stc
fiadds
popa
xor
mov
and
jae
mov
adc
cwtl
enter
out
push
lods
sub
fwait
xor
aam
mov
sub
hlt
neg
nop
and
loope
xchg
ljmp
mov
scas
fs
or
stc
add
ss
dec
jae
out
cmp
mov
ss
xchg
fidivrl
dec
aad
es
insl
popa
insb
lods
and
dec
sahf
mov
or
hlt
dec
fldt
xchg
xlat
loope
sub
pop
imul
mov
icebp
mov
repz
jg
add
or
lcall
sbb
je
mov
imul
out
jae
fbstp
cmp
mov
xor
push
lods
add
mov
scas
sub
dec
pop
inc
test
dec
sub
in
mov
ss
pop
shll
ljmp
sbb
ja
loopne
nop
popf
sbb
enter
es
adc
movsb
push
jne
stc
mov
in
ja
stos
lcall
inc
adcl
in
pusha
hlt
add
fs
cwtl
movsl
sub
cmp
xchg
inc
add
dec
xchg
ja
movsb
sti
inc
cmpsl
fsts
push
dec
adc
adc
push
mov
cs
cmp
rclb
jmp
cmc
dec
mov
mov
lods
clc
pop
cmp
adc
mov
add
sti
lahf
aas
scas
cmpsb
loope
je
mov
jge
mov
ja
xchg
xor
xor
rcrl
cld
pop
pop
mov
ret
cmp
push
mov
pop
imul
dec
cmpsb
cs
adc
out
out
jmp
ret
sbb
in
push
xor
xchg
sbb
ds
inc
sbb
orl
lods
ljmp
lock
xor
jb
pop
mov
push
jnp
loope
ss
lods
xchg
inc
adcb
stos
cltd
clc
mov
lea
loope
data16
push
dec
pusha
pop
out
scas
jb
cli
mov
cmp
cmpb
shlb
jmp
insb
insl
push
and
adc
or
adc
out
cmp
lret
push
sbb
bound
fucomip
push
sbb
push
cmp
pusha
push
lcall
dec
data16
imul
mov
sbb
mov
imul
inc
inc
mov
insl
movsl
mov
jne
mov
lret
mov
add
sub
xor
pop
xchg
cwtl
pop
movsl
mov
or
int3
lock
and
je
and
xchg
ret
out
cs
mov
ljmp
and
scas
xor
nop
in
mov
dec
or
shll
aad
int
push
mov
cmp
pop
and
jnp
mov
lret
jecxz
into
ss
and
xchg
test
sub
cmp
lret
jbe
mov
add
push
addr16
or
gs
mov
subb
iret
mov
or
or
cmpb
jnp
cmp
pop
or
cmp
stc
mov
jbe
fidivrs
ja
sar
repnz
test
es
test
insl
sub
push
add
xor
cmp
fbld
and
js
pop
adc
mov
push
dec
int
sbb
jns
push
mov
mov
xchg
inc
iret
loopne
mov
push
mov
aad
adc
movsl
aaa
sbb
movsb
repnz
push
mov
aam
jp
sbb
push
push
popf
mov
sbb
test
int
adc
adc
shll
addr16
inc
insb
mov
in
lock
test
xchg
adc
dec
push
inc
stos
lret
pop
cs
add
fdivrl
mov
cmp
push
sarl
push
fadd
mov
add
fidivrl
test
inc
js
xorl
negb
ret
inc
cmp
xor
adc
xchg
dec
pop
mov
sub
mov
dec
shrl
adc
fwait
in
xor
inc
inc
imul
iret
mov
ret
rclb
push
xor
and
and
test
sbb
lods
sbb
xchg
sarb
imul
aaa
ret
mov
sub
push
jbe
dec
inc
adc
cmc
add
mov
sbb
jle
imul
pushf
fidivs
outsb
mov
ljmp
xor
cs
or
sbb
jmp
pslld
pop
jno
lret
lods
pop
mov
iret
jns
fnstenv
xchg
notb
orl
cltd
xchg
test
and
loope
int3
mov
xchg
fdivrp
nop
pop
cli
jp
xchg
loope
xor
cmp
ds
ret
jae
push
jnp
inc
mov
dec
cmp
and
jl
pusha
jbe
leave
cltd
and
push
jb
clc
out
jns
sub
loope
or
sarb
cmpsl
adc
repnz
sub
mov
sbb
cwtl
das
mov
pop
or
and
test
rcl
cmp
inc
pop
add
cmpl
inc
int3
adcb
nop
daa
andb
jno
mov
xor
pop
xor
xchg
add
sub
add
std
mov
out
sub
lret
push
mov
sub
add
sbb
cs
call
mov
addr16
sub
dec
jecxz
xorb
clc
xor
and
ds
cmp
arpl
dec
orb
inc
sarb
movsl
and
rcll
fwait
popf
mov
cmp
lahf
loop
jns
js
loopne
test
stos
jb
xchg
cmp
or
pop
xor
mov
repnz
mov
popa
push
push
dec
or
test
test
imul
mov
xchg
push
mov
dec
add
mov
or
mov
push
cmp
inc
out
movsb
and
sub
inc
sbb
and
jo
sahf
xor
mov
js
scas
cli
pusha
inc
pop
pop
adc
mov
mov
inc
subl
in
jmp
cmp
je
cmp
xchg
adc
clc
lahf
dec
lret
jl
das
stos
cs
sub
scas
mov
pop
push
pop
dec
adc
push
add
pop
mov
imul
mov
jb
mov
push
xchg
add
dec
mov
mov
mov
push
mov
dec
insl
popa
ja
cli
xchg
mov
loope
mov
pop
push
pusha
and
adc
aam
mov
push
movsb
lds
in
mov
loop
or
es
add
xchg
cmp
scas
xor
add
aad
arpl
pop
fists
loop
scas
jg
and
push
inc
std
inc
cmpsb
jnp
or
and
lahf
loope
inc
bound
aad
push
xor
mov
inc
in
movsl
mov
shlb
sbb
lds
lods
jge
jge
stos
and
mov
loop
mov
cmpsl
or
mov
push
push
pop
in
cmpl
lcall
lock
mov
loop
ss
mov
ret
jle
cs
lcall
or
in
icebp
cmp
and
ljmp
mov
das
push
adc
push
and
ljmp
push
repnz
ret
push
cld
out
cmp
push
mov
add
xchg
cli
outsl
das
mulb
pop
mov
jecxz
mov
sub
insb
fmull
inc
cwtl
adc
xchg
add
mov
pushl
clc
pop
lods
mov
mov
push
xchg
dec
xor
adc
sbb
lret
ret
xchg
or
or
aam
and
lret
je
push
cli
push
cli
cwtl
or
xchg
hlt
jne
or
dec
or
cmp
stc
pop
repz
xchg
movsl
sub
pop
jg
aas
sbb
cli
shlb
in
xchg
xchg
daa
stc
lcall
mov
inc
das
inc
or
mov
imul
jo
fistps
xor
mov
and
ljmp
cmp
mov
lret
xlat
mov
xchg
iret
lcall
leave
sbb
xchg
push
pop
cmc
add
xchg
pushl
pop
mov
jae
popf
je
or
sbb
sbb
into
cs
mov
je
adc
inc
adc
hlt
adc
jg
in
mov
and
pop
fistps
test
test
pop
outsb
cltd
jg
xchg
test
mov
ret
dec
sub
sub
mov
pop
idivb
iret
incb
pop
cld
sub
jns
pop
dec
rcll
shll
out
or
mov
push
in
dec
push
adc
mov
adc
and
xor
cmc
imul
pushf
mov
imul
xor
mov
and
movsb
jo
or
mov
fisttps
mov
sarl
pushl
cltd
sbb
sbb
adc
sub
inc
xchg
popf
repz
fiaddl
push
adc
and
fs
inc
mov
push
mov
sbb
xor
xchg
xor
iret
inc
pop
or
mov
sbb
repz
insb
and
dec
xchg
adc
and
sarl
rcrl
test
fildll
sub
cmp
aaa
loopne
in
and
jns
sbb
jo
inc
jo
adc
inc
out
jge
and
dec
add
adc
mov
mov
ret
popa
or
loopne
adc
jge
mov
adc
sub
fwait
test
or
cmp
push
add
adc
mov
or
inc
fbstp
xchg
add
fs
jmp
lock
add
insb
fildl
out
jne
adc
dec
mov
enter
inc
xlat
out
add
imul
aas
sub
in
xchg
dec
arpl
outsl
xchg
cltd
arpl
out
sbb
mov
mov
dec
gs
add
arpl
jecxz
inc
lret
xchg
in
out
scas
sbb
xor
add
mov
into
cmp
push
cld
jnp
xor
out
xchg
push
sbb
cmp
in
mov
pop
push
push
push
adc
push
mov
out
iret
enter
loop
loopne
sub
test
sub
adc
cmp
sbb
lods
lret
add
pop
adc
sub
xchg
fs
jmp
mov
xchg
xor
addb
ss
cmpsb
push
push
not
loop
loop
mov
xlat
mov
xor
mov
nop
add
loop
mulb
jns
pop
faddp
loope
push
push
test
pop
jo
cmp
jecxz
mov
and
ljmp
pop
jbe
fwait
cmp
xchg
xor
sbb
pop
lret
adc
xchg
jno,pn
test
adc
orl
pop
pushf
ds
xor
mov
ja
mov
or
dec
jo
push
push
js
xchg
add
inc
enter
ret
pop
mov
or
pop
roll
dec
cmpsb
movsl
mov
sbb
repz
inc
fstpt
fsubl
xlat
pop
mov
movsl
andw
out
cld
xor
lahf
push
xor
dec
mov
test
pop
lahf
testb
push
push
dec
js
test
shrb
sarb
es
hlt
inc
mov
adc
mov
lret
add
jmp
adc
insb
xor
daa
and
test
add
and
sbb
mov
xchg
pop
cmp
icebp
icebp
call
mov
dec
stos
cmc
xchg
mov
stos
sarl
and
sbb
jg
aad
pop
add
mov
inc
inc
je
jge
xchg
jl
shrl
add
bound
loopne
cmp
sbb
dec
jb
xor
push
sub
popf
push
incb
push
pop
sub
push
mov
aam
cmp
pop
add
mov
xor
out
xor
sbb
jl
test
insl
cmp
cmpsb
sub
fs
call
and
ficoml
or
inc
out
icebp
mov
lcall
jbe
and
sbb
mov
adc
and
jne
nop
ja
and
in
mov
sti
gs
inc
fmull
in
or
shl
inc
push
jg
sahf
int3
ss
nop
jecxz
cmpb
fidivrl
lahf
mov
shll
popf
mov
mulb
pusha
cmpsb
sub
xchg
sqrtps
ljmp
call
lahf
adc
jecxz
push
pushf
dec
or
aam
sub
or
sbb
sti
xor
sub
mov
in
mov
push
jno,pn
adc
es
popa
mov
sub
sysret
xor
push
mov
dec
lcall
cmc
pop
aam
sbb
inc
adcb
popa
mov
mov
ror
pop
mov
cmp
sub
dec
repnz
inc
fstl
jmp
inc
jns
repz
icebp
inc
cmp
imul
js
shll
lea
inc
push
or
inc
aad
mov
pop
dec
call
orl
pop
das
fdivr
jb
inc
dec
push
or
ret
es
mov
dec
rcrl
add
shr
mov
movsl
cmp
jns
test
cmp
inc
imul
push
xchg
add
push
data16
pop
inc
and
bnd
jle
cmp
add
loop
mov
add
scas
pop
mov
xor
scas
mov
dec
ljmp
pop
or
addr16
add
cmp
rcr
jo
mov
psrlq
mov
adcb
mov
paddsw
inc
dec
jb
mov
dec
inc
jg
mov
into
aaa
int
or
ror
mov
mov
aaa
ror
jns
ljmp
lahf
mov
daa
add
js
out
scas
jb
inc
test
jae
data16
adcb
dec
fdivrl
aaa
sbb
hlt
cli
fbld
add
shl
ret
movsb
mov
shll
iret
push
pushf
addr16
rcrb
dec
mov
mov
aaa
jnp
idivb
ret
call
std
testl
fdivl
fidivl
sbb
repnz
insb
je
mov
add
rcrl
and
hlt
pop
filds
cs
add
xchg
mov
pop
repz
loop
js
lahf
inc
fistps
xlat
pop
dec
xlat
fstpt
js
repz
xchg
ret
xchg
pusha
ljmp
popf
sbb
jmp
repnz
daa
dec
cmc
mov
icebp
dec
add
or
inc
int3
push
dec
xorb
add
push
jle
out
data16
popf
jbe,pt
cld
loop
movb
pop
sub
fst
dec
and
jo
and
and
mov
in
sub
push
mov
hlt
adcb
push
push
mov
shll
aas
test
and
in
cmp
fsubr
inc
bnd
gs
test
and
aam
xchg
xchg
jnp
push
loop
jnp
aas
imul
rcpps
sbb
mov
rorl
jo,pt
es
fs
mov
das
pop
push
addr16
push
sti
cmpsl
sbb
lahf
jg
push
push
cmc
test
aam
lret
lret
inc
cli
or
pop
scas
dec
fidivrs
icebp
daa
xor
fisttpll
fnstcw
jae
imul
je
mov
daa
jecxz
pushl
scas
repnz
inc
fimull
and
or
add
sub
fs
adc
cmp
push
dec
mov
dec
xchg
repz
in
mov
mov
fs
xchg
xorb
cs
loope
jge
fcmovu
nop
rorb
pop
dec
ja
aam
movsb
mov
or
lea
mov
js
mov
out
fistpl
xor
adc
pop
in
push
ds
jnp
hlt
ret
push
out
outsb
dec
mov
dec
jp
fildll
test
cld
lock
ret
push
iret
or
test
cmc
movsb
insl
out
aas
or
mov
arpl
fnstsw
out
out
pop
lds
loopne
push
aaa
sbb
int3
cmp
or
iret
mov
rolb
es
dec
jb
outsb
into
cli
push
icebp
jae
and
lcall
in
jns
movsb
ss
lret
stos
das
inc
sub
insl
cmpsl
sbb
lret
cmpsl
test
jcxz
jge
sbb
in
sahf
pop
sti
xor
push
add
xchg
bound
or
jmp
jmp
out
call
or
cmovns
aaa
mov
subl
idivb
ja
loope
pop
ret
xor
mov
out
into
out
fmull
out
mov
imul
mov
jbe
add
lahf
push
ret
jecxz
push
sub
lcall
xor
xor
pop
xor
pop
rep
hlt
xchg
xchg
sbb
jnp
lret
dec
es
repz
jle
xchg
in
ret
cmp
cmp
and
jg
mov
clc
inc
scas
mov
ss
enter
add
push
aam
fstpt
rorl
xchg
in
shrb
fs
push
clc
pop
sbb
int
jge
fldcw
dec
pop
in
loopne
inc
call
jmp
jle
loopne
xor
std
add
int3
out
and
cli
or
shrb
mov
fcomp
in
aam
and
push
or
sub
cwtl
in
in
adc
int3
inc
ret
and
fadds
push
pop
sahf
rclb
inc
jo
lock
call
push
xchg
mov
fidivs
mov
stos
mov
int
mov
inc
sub
mov
imul
clc
outsb
or
cmp
push
xchg
sbb
jne
mov
adcl
ficomps
add
ficomps
and
push
sbb
jne
cwtl
enter
adc
adc
jp
xchg
dec
std
push
sti
push
or
popa
int3
jno
and
js
mov
cld
in
cltd
mov
mov
xor
mov
adc
daa
lret
sub
mov
adc
fsubs
push
lret
jnp
mov
mov
pop
adc
lret
mov
and
pop
repnz
faddp
dec
push
lea
mov
cmc
in
test
adc
stc
add
and
lock
sub
mov
xor
imul
test
mov
jl
gs
push
inc
out
ja
andl
lds
bndldx
lods
loope
pushf
pop
cmp
scas
cmc
test
mov
cld
dec
adc
inc
iret
mov
repz
outsl
negl
mov
mov
outsl
pop
pop
nop
negb
int
test
incb
clc
and
in
jg
scas
mov
test
idiv
loop
add
cmp
test
mov
and
dec
jmp
push
xchg
stos
sarb
int3
aas
dec
xchg
dec
mull
sbb
inc
fimull
pop
jno
lcall
stc
stos
fnstcw
fst
add
in
jmp
push
xlat
hlt
adcl
iret
das
test
rcrl
leave
push
jnp
nop
push
stc
xchg
jecxz
push
daa
mov
ljmp
das
loope
out
dec
idivb
sub
xor
push
stc
popf
sbb
pop
int
and
in
iret
test
xchg
mov
mov
mov
adc
jg
mov
stos
cmp
inc
or
sub
cmp
jge
or
adc
xchg
negb
push
fldl2t
loopne
cmp
pop
jns
mov
out
push
dec
daa
aaa
lretw
inc
fstpt
lea
std
inc
mov
mov
in
cmp
inc
mov
and
out
push
cs
and
sbb
fimuls
mov
xchg
cmc
mov
cmp
out
mov
repnz
fsubl
hlt
repz
inc
mov
ljmp
adc
scas
notb
lock
std
fimull
es
mov
push
stos
out
sub
mov
jle
xchg
outsb
sbb
inc
das
sahf
push
xchg
push
xchg
je
outsb
lret
mov
pop
sahf
mov
aas
movsb
ljmp
jp
dec
sub
mov
jns
lds
addr16
pop
mov
mov
sub
adc
outsl
subb
mov
out
mov
mov
stos
mov
inc
sahf
in
pop
xchg
scas
jo
test
xor
sbb
sub
pop
jp
fsts
cmp
movsb
dec
xor
decl
repz
xor
test
pop
int3
stc
stos
aaa
mov
into
or
mov
out
xchg
mov
std
imul
daa
xor
es
sti
int
xchg
sti
xor
dec
dec
xor
mulb
sti
sarb
gs
movsl
aas
movsl
sub
jnp
jb
push
lds
es
mov
sbb
push
xor
pop
xor
into
in
ret
sub
dec
out
or
fstpl
sbb
xor
push
leave
sbb
adc
mov
mov
stos
adc
mov
notw
sbb
les
and
je
jp
cmc
dec
xor
dec
and
aam
inc
mov
push
pop
mov
mov
mov
inc
loopne
jb
and
lock
lret
stos
mov
jae
add
fs
ds
in
cmc
xchg
push
out
mov
adc
bound
std
icebp
daa
jnp
sbb
out
fcmovu
ret
adc
mov
lret
out
add
push
in
in
test
mov
out
cmp
dec
divl
mov
jle
lds
mov
dec
or
addr16
call
sbb
hlt
jmp
sti
dec
xchg
and
cmp
mov
ljmp
dec
arpl
push
sub
dec
dec
fsubrs
fs
icebp
shl
or
fstps
cmp
sub
pop
fadds
hlt
lods
pop
sti
mov
pop
cld
daa
ljmp
mov
call
jno
jo
in
dec
mov
call
xchg
movsl
jge
xchg
xor
shll
add
loopne
cmp
mov
sti
lods
iret
sbb
cmp
push
push
pop
xchg
mov
ret
addr16
cmc
inc
xchg
ljmp
mov
popf
pop
cmc
xor
scas
scas
push
mov
imul
scas
fildl
inc
jecxz
mov
lea
cmp
sub
add
pop
nop
sub
jb
scas
imul
scas
jb
enter
and
mov
fisubl
cmp
mov
cs
decb
pop
outsl
xchg
jg
or
popa
aad
mov
jp
iret
das
incl
fsubs
into
cld
ljmp
je
mov
xor
mov
sti
ljmp
xchg
mov
mov
or
mov
mov
loop
fisttps
mov
jle
xor
push
idiv
jg
xchg
int
mov
and
pop
scas
pusha
js
xor
mov
or
mov
adc
xlat
fbstp
jg
adc
inc
outsl
cmc
mov
xchg
loop
movsl
and
mov
fistpl
dec
rolb
pop
jno
popa
hlt
popf
or
pop
xchg
je
shll
lods
fisubrl
xchg
jnp
sbb
rcr
cs
mov
not
jg
sub
sarl
mov
scas
test
pushf
jns
scas
in
insb
push
lock
cmp
mov
jl
jge
leave
ss
aas
gs
and
cs
fucomp
and
shrl
cli
add
push
popa
fisttpll
inc
int
xor
jmp
cmp
not
hlt
shll
clc
xor
add
adc
cltd
or
adcb
push
xchg
adc
test
mov
mov
dec
push
pop
xlat
fs
in
dec
adc
add
sbb
add
stos
mov
or
pop
xor
add
cs
pop
sti
push
mov
cmp
nop
mov
mov
and
pusha
dec
sub
cmc
mov
mov
incl
daa
jmp
cs
pop
xchg
out
shr
out
dec
pop
repz
sahf
pushf
jno
cld
not
jae
cmp
add
mov
lahf
jg
stc
mov
lahf
or
sbbl
aam
pop
adc
pop
xor
xor
mov
ret
daa
in
push
sti
sbb
xchg
adc
enter
pop
push
jne
sahf
xorl
into
adc
xchg
xchg
imul
and
cmp
pop
push
ret
xchg
roll
adc
mov
mov
and
mov
fisubs
adc
cmp
push
pusha
insl
imulb
scas
jmp
in
and
and
fcmovnb
mov
xlat
and
inc
mov
adc
imul
or
cmpsl
xabort
jns
mov
test
loope
rclb
scas
and
clc
mov
jge
aam
fmull
adc
xchg
add
enter
push
cmc
stc
jns
adc
and
lcall
stc
mov
push
pop
negb
mov
dec
mov
push
addr16
call
add
cmpsl
iret
je
jle
shr
mov
and
filds
cmp
push
fninit
ret
outsb
les
test
inc
aam
or
fistpl
bnd
mov
aas
roll
adc
cltd
in
in
add
pop
and
and
xor
push
xchg
out
push
cltd
or
mov
xchg
adc
sbb
loop
add
imul
add
jo
xchg
mov
xchg
stc
add
cld
and
mov
shrb
dec
mov
sub
pop
aaa
sub
jmp
mov
pop
xlat
push
sub
cld
jp
mov
or
or
jne
aam
pop
negl
enter
and
mov
pushf
jns
mov
jno
xchg
iret
cmp
mov
movsl
sub
mov
dec
mov
pop
push
dec
pop
pusha
sahf
mov
jle
in
pop
adc
shl
and
jne
ss
push
icebp
ret
mov
add
jbe
sub
cmp
adc
ret
xor
das
out
cltd
inc
fisubs
fsts
loopne
arpl
je
cmp
mov
push
jbe
cli
adc
and
push
cmc
sub
add
xor
arpl
and
je
int3
add
sbb
test
cwtl
and
daa
mov
js
insl
popf
andl
lea
sahf
daa
mov
push
inc
aad
addr16
movsb
mov
test
sti
xlat
sbb
dec
lods
dec
les
mov
inc
stc
xor
pop
shrb
andb
cmp
xlat
cmp
pop
inc
mov
ljmp
fbld
or
xor
xchg
loopne
js
push
lret
xor
xorb
jno
loopne
and
jb
mov
mov
sbb
cmpb
push
fs
sbbl
add
bound
jmp
adc
push
cmpsl
mov
inc
pop
push
inc
push
xchg
aas
ret
shrl
pop
popf
aaa
ljmp
scas
inc
dec
roll
dec
push
mov
xchg
mov
fistpl
push
jo
dec
lret
fwait
adc
jno
xchg
int
outsl
lahf
pushf
sbb
jg
fstl
addr16
inc
je
fiadds
mov
jno
repz
sbb
repz
adc
mov
sub
xchg
stos
out
ljmp
imul
xor
inc
out
rclb
lods
add
loop
stos
sahf
jp
inc
scas
arpl
cwtl
idivb
mov
push
jmp
dec
dec
cmp
test
xor
cmc
push
fstl
gs
ret
mov
xor
js
xorl
movsb
icebp
push
or
scas
rorb
addr16
in
popa
hlt
iret
pop
adc
lcall
xchg
lret
popa
jbe
xor
xchg
jmp
ljmp
iret
cmpsb
mov
test
xchg
rol
jbe
mov
out
repnz
fst
aas
cmpl
mov
and
test
cmp
inc
lods
add
loopne
or
ds
pop
shll
push
sub
jae
mov
sub
mov
fisttpl
xlat
mov
fisubl
cmc
jmp
call
inc
push
gs
mov
cmp
sahf
jg
cltd
adc
push
sub
xor
inc
loope
mov
outsb
mov
cmp
call
cs
xchg
adc
push
mov
ss
test
or
xor
pop
daa
mov
add
clc
int3
leave
jne
adc
adc
jl
and
dec
lcall
lods
xchg
xor
movsb
dec
add
dec
out
add
adc
andb
cmpb
cld
aaa
cld
dec
in
and
mov
cmpsl
mov
mov
les
lea
imul
cli
icebp
cmp
xchg
sbb
aam
cli
sub
sti
shlb
mov
xor
jae
pushw
jo
movsb
test
inc
lret
mov
sar
mov
pop
dec
pop
xchg
in
roll
mov
sub
mov
adc
in
jmp
int3
aam
popa
mov
push
xchg
jmp
inc
cmp
cli
loopne
pop
jo
mov
mov
pop
movsb
mov
push
lahf
mov
xchg
mov
int3
roll
pop
mov
sub
xorl
loopne
and
cli
out
sbb
jge
lods
inc
inc
repz
ljmp
and
or
clc
stos
pop
std
movsl
lods
jne
mov
dec
adc
imul
mov
xor
xchg
mov
loope
cld
pusha
push
jge
sub
sti
repnz
cmp
add
dec
aaa
in
or
frndint
inc
inc
sub
or
push
fstpt
dec
unpckhps
push
sbb
fiadds
mov
xchg
fnstenv
cmp
cmc
add
inc
mov
push
and
mov
mov
rorl
ds
mov
jno
imul
xchg
in
jl
push
inc
cltd
pop
dec
add
addr16
jp
xchg
sub
cmpsb
sbb
inc
popa
mov
mov
stos
fisubl
dec
jle
mov
dec
cmp
pop
aas
fnstenv
icebp
dec
or
xchg
inc
ss
sbb
pop
loopne
xchg
shufps
ja
or
dec
dec
add
dec
aad
leave
mov
das
dec
xchg
mov
add
inc
clc
cli
mov
dec
xchg
xor
insb
and
in
sbb
xor
cmp
or
xchg
or
js
neg
sarb
movsl
ja
vmwrite
movsb
in
sub
jo
insb
cld
stc
mov
lahf
inc
jbe
fsubrl
iret
or
in
in
mov
test
clc
xchg
addr16
leave
xchg
lcall
mov
pushf
mov
pop
push
rorb
lahf
stos
or
test
outsl
add
mov
inc
cmpsl
cli
sbb
lock
pop
pop
cmp
test
or
adc
add
jp
fisubrs
std
or
mov
hlt
push
in
xchg
leave
push
mov
pusha
fsubs
fadds
int
and
and
jne
pop
movb
fildl
adc
mov
cmc
sarb
out
jnp
int3
loopne
outsb
insl
sub
push
test
addr16
cmp
aas
pop
jg
mov
inc
xchg
xor
int
addr16
jo
clc
inc
inc
and
dec
and
xchg
lret
hlt
inc
xchg
add
xchg
adc
mov
mov
adc
enter
cmp
cmp
aam
in
mov
xchg
mov
insb
pushf
lods
xchg
dec
in
push
jge
pop
sbb
cmp
inc
and
xlat
iret
cwtl
jbe
and
push
hlt
push
pop
sbb
cmp
pop
cmp
out
test
sarl
insb
lods
daa
mov
and
das
add
lods
cmpsl
push
inc
sbb
and
and
shrl
fmul
jge
popa
mov
das
add
pop
ja
int
std
jmp
test
outsb
ffree
adc
cwtl
inc
hlt
or
ret
ljmp
test
shrl
mov
cs
adc
push
popf
xor
loope
pushf
test
cmp
incl
mov
adc
por
mov
test
stos
call
mov
mov
sbb
loope
mov
xchg
add
inc
dec
out
adc
mov
addr16
rolb
xor
add
ljmp
inc
push
mov
jl
fsubs
add
insb
hlt
bound
jo
sub
movsb
inc
add
dec
lcall
fistpll
int3
cmp
minps
push
sti
fistpll
sub
adc
mov
mov
rcll
and
outsb
aad
stc
mov
and
testl
shll
shll
jmp
cld
loop
mov
insl
and
push
mov
cmc
jns
add
jno
bound
xor
adc
call
mov
test
leave
clc
in
cmp
lret
repnz
cmc
cwtl
loop
xchg
mov
pop
movsl
and
idivl
jnp
daa
mov
mov
adc
repnz
xchg
mov
movsl
incl
cmp
stc
sbb
sbb
pop
push
cmpl
sub
loop,pn
xor
xchg
mov
inc
dec
mov
gs
or
fnstcw
in
and
call
test
test
mov
cmp
inc
mov
push
or
dec
int
xchg
fwait
adc
lret
pop
dec
mov
lods
jno
mov
int
lea
dec
mov
pop
or
mov
dec
icebp
subl
jmp
popf
jge
decb
xor
cmp
cmpl
xchg
inc
add
insl
insb
xor
sub
insl
xchg
push
mov
in
negb
repz
sub
popf
add
inc
mov
add
pinsrw
mov
push
jl
sti
sbb
test
push
stos
insl
sub
dec
dec
jns
int
xchg
fldt
mov
sbb
cs
in
sti
aad
pop
fcmovne
clc
xorb
xor
sbb
xchg
addr16
popf
adc
sbb
repnz
daa
pop
inc
iret
cmc
or
cltd
dec
mov
cmp
pushf
aad
ljmp
mov
jns
jnp
ficompl
fmulp
xor
fisttpll
mov
push
mov
pop
mov
or
out
lret
adc
subb
repz
push
mov
mov
adc
dec
push
out
call
and
adc
push
push
sub
jb
aas
imull
popa
inc
movsl
sbb
jl
sub
push
gs
sbb
sbb
jge,pt
dec
push
jmp
mov
fsin
cmc
icebp
jmp
pushf
cmp
popf
cmp
fsts
mov
je
sub
fnstcw
icebp
pop
shl
pop
bnd
inc
lfs
xchg
les
mov
pop
std
add
sbb
fimuls
ret
sahf
imul
int
adc
int
imull
test
jg
xor
in
sti
iret
mov
fwait
aad
and
jne
xchg
jne
pusha
jo
jle
iret
aas
imul
out
sub
mov
and
icebp
inc
ljmp
and
dec
dec
mov
hlt
fcomps
lods
mov
sbb
xor
jg
fdivl
mov
cmpsl
clc
out
jmp
rclb
cmp
dec
and
fmull
jns
cmp
push
add
mov
test
sbb
adc
or
sub
aad
mov
dec
mov
mov
scas
aas
cmc
push
sarl
sbb
repz
call
ss
jo
mov
call
push
jecxz
adc
jb
mov
pushl
rorb
lcall
jne
ljmp
nop
pop
adc
movsl
nop
mov
mov
pop
mov
gs
add
dec
enter
cmp
inc
lret
jecxz
fs
sti
or
incl
and
leave
mov
push
frstor
ss
loope
jl
cli
adc
insl
mov
out
movsl
push
jns
cmp
push
sub
int
dec
mov
pop
dec
push
xchg
sub
cmp
out
hlt
mov
inc
jbe
cmp
mov
in
sub
repz
mov
test
xor
inc
jmp
lds
mov
imul
inc
and
sbb
ljmp
add
push
add
ja
xlat
arpl
in
jb
add
sub
fstl
stos
out
das
mov
mov
mov
stos
pop
hlt
jmp
and
call
xor
xor
jns
shrb
push
jae
jb
sub
pushf
imul
in
std
call
dec
push
leave
ss
loope
loop
pop
fdivrl
test
push
stos
cltd
lds
imul
mov
sbb
cmp
sahf
jmp
ds
xorb
xchg
test
jmp
repz
jne
out
sarb
scas
int
ds
mov
push
jae
lock
mov
inc
cmc
idivl
push
js
arpl
cli
or
jno
and
adcl
enter
js
insl
pop
sbb
lea
pop
push
das
inc
jp
lret
cmp
mov
lcall
xor
mov
inc
dec
dec
pop
sub
dec
dec
testl
mov
xchg
adc
testb
adc
std
pop
jmp
test
fildl
pop
cmp
ret
mov
gs
xlat
mov
jmp
inc
in
frstor
xchg
xchg
push
out
sbb
inc
repz
mov
pusha
push
popa
mov
mov
mov
dec
int3
cmpsl
pop
fadds
aad
stos
xchg
xor
insb
jp
mov
mov
jno
stc
idivl
sahf
out
xchg
mov
std
jg
mov
and
inc
subl
adc
enter
push
lcall
in
xchg
adc
dec
adc
add
or
test
rcl
cmp
ret
cmp
stos
enter
fsubl
test
mov
enter
into
xor
je
fadds
dec
popa
push
pop
dec
xchg
mov
dec
test
cmpsl
aas
and
push
cmpsl
scas
xor
mov
push
jns
jmp
pop
mov
bound
inc
shr
xchg
int3
jo
or
das
fldln2
pusha
jbe
cmp
pop
dec
int3
test
lods
sbb
lahf
aas
or
sub
push
stos
sbb
mov
inc
fwait
sub
lahf
or
sub
inc
mov
sbbl
mov
push
stos
pop
adcl
imul
push
pushf
mov
jno
jne
xchg
cli
gs
push
cmp
jae
jmp
iret
pop
mov
xor
sub
rcrl
jecxz
sbb
addr16
shll
inc
or
xor
adc
push
enter
jnp
out
fstpt
int3
dec
shr
mov
decb
pop
lods
sbb
and
out
sub
mov
cmpsb
adcl
push
bound
jo
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
mov
or
je
mov
xchg
mov
lea
cmpl
je
push
push
push
push
call
mov
mov
add
je
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
cmp
jne
incb
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
mov
add
push
push
push
push
push
pushl
push
call
pushl
push
movzwl
movzwl
lea
lea
lods
test
je
add
cmp
loopne
jne
inc
push
push
push
testb
je
shll
testb
je
shll
testb
je
shll
pushl
add
push
call
pop
lods
lods
mov
loop
call
pop
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
add
inc
add
adc
add
mov
add
add
pusha
add
add
repnz
incl
add
mov
add
push
add
inc
add
rorb
add
add
add
add
in
push
add
add
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
or
add
aad
adc
out
adc
stc
aas
adc
add
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
aas
adc
mov
add
add
adc
lahf
inc
adc
roll
add
inc
adc
mov
adc
jecxz
adc
roll
jmp
adc
jne
gs
xor
fs
insb
add
jbe
jb
cs
insb
add
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
imul
insb
add
inc
adc
add
add
add
add
add
add
add
add
add
add
inc
adc
add
add
add
push
push
outsb
outsl
ja
add
pop
jbe
outsb
jo
imul
inc
outsl
push
popa
jae
dec
gs
inc
jb
add
add
addr16
jb
popa
je
dec
gs
js
add
add
insb
arpl
push
arpl
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
and
cmp
jae
gs
bound
fs
je
je
and
or
gs
xor
and
and
and
insl
gs
jo
imul
popa
je
outsl
outsb
and
and
and
jb
imul
xor
xor
xor
and
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
cmp
gs
outsb
fs
arpl
and
and
cmp
gs
outsb
fs
je
jae
gs
bound
and
and
and
cmp
jae
gs
bound
fs
je
je
and
and
and
and
je
jo
cmp
xor
and
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
and
and
and
jbe
jb
imul
xor
xor
xor
and
and
and
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
and
and
and
insb
popa
outsb
addr16
addr16
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
cmp
fs
outsb
fs
je
jae
gs
bound
and
cmp
fs
outsb
fs
arpl
cmp
popa
jae
gs
bound
add
add
add
add
add
add
add
add
and
inc
add
add
add
and
add
add
add
add
add
add
and
add
addb
add
add
addb
mov
pop
or
add
add
add
and
pop
sub
add
add
adc
adc
add
or
adc
add
add
add
and
add
addb
sub
add
and
add
or
and
add
add
and
add
or
add
inc
add
add
add
add
or
inc
sub
addb
add
add
add
add
and
add
add
nop
add
add
add
adc
add
add
les
and
add
add
and
inc
inc
add
addb
adc
addb
or
add
add
add
add
adc
add
push
add
rolb
add
inc
add
add
adc
and
add
add
add
or
test
add
adc
mov
add
add
adc
add
inc
add
add
mov
