sbb
add
cltd
in
scas
push
sub
inc
fs
lock
dec
call
outsb
test
xchg
xor
ljmp
fdivrs
xlat
mov
and
rcrb
loope
jge
lock
cmpsl
push
in
push
pop
dec
fwait
push
jg
ss
cmp
sbb
xor
and
test
jne
cmp
lock
sub
push
adc
adc
stos
or
outsb
das
loopne
repnz
cltd
fwait
jle
cmc
loope
mov
mov
xchg
fwait
pushl
mov
pop
dec
jns
cltd
push
jmp
jmp
lcall
movsl
out
inc
enter
cmpb
adc
cmovb
mov
push
cmp
sbb
mov
out
cs
ljmp
iret
mov
rorl
negl
divb
mov
cld
mov
in
popf
ret
mov
mov
add
leave
cmp
addb
aas
pop
leave
loope
push
xchg
pop
int3
jmp
pop
mov
out
cmp
cmpsb
push
add
fbld
mov
int
pop
lret
in
push
xchg
fidivl
jnp
fidivs
or
popl
leave
dec
mov
jecxz
dec
insl
jnp
fsubs
cmc
insl
icebp
push
out
jl
lret
push
out
cld
xor
movsl
push
jae
mov
sub
cli
aas
sbb
mov
ja
jne
add
scas
stos
adc
dec
adc
dec
pop
pop
dec
or
iret
aad
add
orl
test
and
mov
jo
mov
rol
jge
pop
dec
mov
cmpsb
xchg
test
out
xchg
stc
daa
mov
pop
xchg
mov
or
cmp
out
jo
out
scas
mov
jns
and
xchg
sti
test
or
push
add
mov
cltd
xor
test
jecxz
out
mov
shll
xchg
jne
or
pop
xchg
dec
xor
dec
test
mov
ja
stos
ret
inc
push
in
sti
imull
mull
in
and
lea
call
sahf
jmp
add
popf
dec
sarl
iret
in
jno
xor
aaa
jbe
shl
sub
ljmp
adc
stos
inc
mov
push
adc
in
enter
push
scas
xor
fldl
jae
imul
rorl
aam
aaa
mov
mov
dec
push
inc
clc
sti
in
and
sbb
ljmp
fcmovbe
sbbl
fs
dec
addr16
dec
jl
push
insb
dec
mov
shlb
jmp
stos
das
jno
insl
mov
push
pop
cmp
lahf
xchg
bound
push
mov
mov
adc
outsb
sub
das
push
daa
mov
push
lods
jl
and
and
lret
ds
insl
mov
insl
test
sahf
jns
push
fsubr
add
adc
int3
or
mov
add
xor
cmp
lret
mov
mov
std
lret
pop
jmp
lret
cmpsl
int3
adc
dec
loop
jmp
push
mov
test
pushl
fwait
push
out
jg,pn
lea
arpl
push
negb
imul
insb
adc
mov
inc
scas
popa
sbb
sbb
or
xlat
incl
addb
jno
pop
or
adc
lock
inc
cli
aas
or
jbe
jbe
lcall
cmp
cs
pop
push
mov
mov
sub
lret
fisubl
bound
mov
je
xor
fnstenv
xchg
ss
imul
or
xchg
fildll
sbb
xor
pop
inc
leave
push
rorl
xchg
mov
push
push
and
shl
inc
push
mov
sarl
aam
mov
dec
push
xchg
int3
mov
mov
adcl
adc
xor
addl
inc
xchg
imul
subb
aam
retw
js
pop
push
push
fcmovne
jns,pn
push
into
push
out
popf
dec
inc
sub
mov
push
sbb
pop
popl
pop
push
jmp
ss
push
sub
dec
lods
jle
movsb
mov
lret
stc
sbb
mov
lret
lea
mov
cltd
dec
stc
push
fs
shlb
js
cmp
or
repnz
and
cmp
xor
movsb
rclb
add
sbb
inc
dec
mov
push
sbb
andb
jle
or
sti
push
mov
sbb
xor
mov
pop
push
pop
call
in
pcmpgtd
popf
aaa
lahf
pop
fmull
rcr
into
jmp
fwait
mov
sub
pop
add
sti
dec
and
mov
lcall
iret
out
cli
cld
imul
jns
xchg
push
pop
insl
pop
xchg
dec
adc
addr16
sti
mov
dec
adc
mov
in
xchg
cld
stc
and
lret
in
jae
or
arpl
test
stc
mov
push
add
adc
cli
dec
and
out
sti
hlt
fidivrs
test
jns
fdivs
push
sub
mov
lahf
mov
out
test
mov
xlat
fs
push
jp
mov
stos
inc
and
loop
sub
mov
fiaddl
or
sub
bound
lret
lods
jmp
push
loopne
dec
outsb
insl
aam
xor
xabort
mov
fcomps
dec
jnp
stos
push
mov
lock
and
push
leave
sbb
sahf
xchg
cwtl
lods
leave
sub
and
jge
je
sbb
int
int3
jp
enter
aam
lock
push
xchg
jb
addr16
pop
arpl
data16
or
ljmp
or
scas
fsubs
cmpl
jmp
stos
insb
fadd
sbb
pop
roll
jle
mov
test
test
adc
adc
xor
aam
lret
or
popf
mov
insb
xor
jg
cmp
mov
test
xor
sbb
cltd
adc
sarl
cmpsl
push
mov
sbb
data16
or
out
out
les
sbb
fucomip
push
sub
or
inc
or
lds
test
fs
push
and
aas
inc
mov
cmp
shrl
inc
push
leave
loope
mov
std
mov
sahf
into
movsl
mov
dec
or
inc
data16
loope
rol
test
adc
es
mov
sbbb
fistl
icebp
icebp
sub
sub
mov
cld
push
xlat
stc
jge
popf
loop
shrl
pop
ds
idivb
cmp
lret
int
sub
or
imull
and
pop
mov
add
rcl
test
or
in
push
shll
sub
and
dec
xchg
xchg
jnp
dec
or
and
or
test
pop
mov
adc
scas
adc
jnp
push
pop
sub
ds
repnz
dec
into
jbe
push
sbb
jno
pop
pop
cmp
and
adc
inc
sahf
jo
insl
sti
sbb
imul
pop
lods
aas
jl
inc
mov
xor
mov
mov
xor
adc
adc
xor
je
inc
inc
push
stos
jmp
lods
jmp
aas
push
fisttpl
arpl
aam
fisttpll
or
in
inc
pushf
adc
push
les
pop
jno
stos
push
cmp
or
movsb
in
nop
repz
jae
inc
lret
cmp
mov
fistl
xor
sub
pop
in
jp
lods
in
cmp
mov
sti
pusha
pop
jo
xlat
add
push
cmp
push
in
test
mov
out
jb
test
mov
adc
mov
mov
les
sbb
cmpsl
push
mov
mov
push
xchg
roll
icebp
outsl
xchg
and
outsl
test
mov
mov
ret
xchg
int3
flds
sbbb
push
mov
and
pop
fwait
imul
in
xor
jo,pt
xchg
sub
out
movsb
or
in
push
pop
cmp
stos
jnp
xor
test
mov
or
push
jmp
xchg
pop
es
add
dec
je
mov
inc
sub
adc
adc
lret
stc
lods
xlat
movsl
add
mov
inc
xchg
frstor
push
lahf
fwait
insb
outsl
sbb
push
test
push
xlat
add
sbb
mov
je
iret
hlt
add
jg
shr
in
test
mov
popf
push
aad
mov
mov
cmp
mov
sbb
sti
xlat
xchg
lcall
mov
negl
inc
int
xchg
bound
dec
or
mov
inc
nop
stos
les
mov
jnp
mov
lahf
test
dec
mov
ror
mov
push
stos
mov
mov
inc
mov
mov
arpl
xlat
push
loopne
clc
pop
push
adc
xor
push
push
mov
ret
inc
add
outsb
fdivrl
inc
bound
ss
xor
jg
xchg
movsl
push
inc
pop
jecxz
lret
out
lds
daa
pop
cmp
lret
pop
in
out
mov
imul
cmp
ficoml
jnp
mov
push
ret
mov
ss
add
adc
outsl
mov
mov
cmp
dec
ds
clc
xor
mov
mov
xchg
ficompl
pop
push
gs
xchg
cld
mov
adc
mov
outsl
aaa
pop
jno
mov
and
imul
pop
test
jbe
mov
imul
adcb
out
incb
xor
inc
dec
enter
fcomps
add
inc
mov
lret
pop
mov
mov
jl
adc
or
ficomps
mov
jl
insl
scas
or
loopne
ret
push
cld
shlb
dec
daa
push
stos
ret
push
js
out
push
rolb
jo
dec
pop
adc
inc
jo
ret
data16
xor
jae
ja
sbb
mov
inc
xchg
mov
dec
ljmp
aas
sub
mov
add
lahf
push
jp
push
mov
dec
mov
jbe
add
sbb
insb
xlat
je
repz
int
test
lods
das
sbb
or
sub
push
sub
cltd
in
lcall
xchg
dec
ljmp
icebp
inc
outsl
imul
test
xchg
push
cltd
mov
int3
cli
in
add
sarb
mov
xchg
inc
adcl
sub
jle
int
push
test
idiv
ret
scas
sbb
inc
ret
dec
test
lcall
jle
loop
mov
add
hlt
arpl
push
mov
and
fmulp
lahf
add
sbb
js
cmpsl
iret
inc
jg
aam
imul
xor
repz
imul
std
add
ljmp
sbb
xor
enter
push
sbb
popa
mov
xchg
push
pop
call
cltd
inc
jno
stc
fwait
rcrb
movsl
fcoml
push
xor
stc
xlat
xor
cmpsb
mov
shll
imul
xor
jno
and
in
sbb
push
dec
sub
sub
mov
inc
lahf
mov
sbb
sahf
mov
xor
into
pop
fs
add
push
mov
mov
sbb
mov
bound
sarb
fs
hlt
fucomi
xchg
dec
sub
mov
mov
aam
dec
pop
sub
jmp
fidivl
mov
and
fisttpl
out
icebp
rclb
cmp
push
popl
cltd
pushw
sti
pop
push
or
int
push
cltd
mov
subb
mov
adc
and
push
dec
gs
lods
test
sbb
or
ja
popa
loope
mov
ret
xchg
or
and
cmp
cli
sbbb
mov
xor
das
cmp
loope
scas
fdiv
outsl
mov
mov
gs
fisttps
xor
inc
incb
or
sbb
test
jle
fs
andb
lods
lea
inc
jp
lret
inc
insb
bound
and
outsl
push
in
mov
mov
push
sub
lcall
inc
xlat
fisttpll
mov
inc
addl
loope
lea
hlt
fstpl
outsb
sub
sbb
cmp
mov
cwtl
test
bt
ficompl
inc
add
dec
jns
mov
ss
cld
sub
sbb
int3
mov
push
aas
jp
int
int
lahf
mov
hlt
add
push
jns
cmp
je
adc
leave
mov
pusha
xlat
mov
and
add
mov
or
push
lds
cmc
pusha
stc
test
adc
cmc
sub
in
adc
loop
mov
xor
repz
daa
add
xchg
jmp
imul
loopne
shll
insl
mov
mov
and
mov
gs
aas
js
inc
push
aad
je
push
jbe
iret
outsl
inc
xor
loop
or
mov
jmp
lock
loopne
xor
jecxz
pop
jmp
xor
mov
sbb
repnz
or
sbb
les
xor
mov
mov
xchg
and
in
cli
mov
ss
imul
sbb
add
mov
jnp
int
das
jno
fisubrl
mov
nop
xchg
cld
mov
sbb
pop
movb
in
push
cmpsl
fwait
popf
jmp
cmp
pop
decb
mov
xchg
gs
scas
push
pop
inc
mov
cmp
pop
add
fisttps
push
lahf
int
mov
movsl
pushf
pop
and
cmpsl
adc
mov
lock
insb
mov
jecxz
cmpsl
inc
lret
lahf
jp
cmp
aam
shrb
or
push
jo
stc
add
adc
mov
pop
cwtl
rcrb
cmc
pop
xor
loop
inc
jne
sub
pop
ret
out
in
lret
lds
insb
sbb
cld
push
push
repnz
mov
gs
dec
pusha
out
addl
icebp
cmp
add
fcompl
jne
dec
cltd
lea
jge
ficoms
adcb
mov
and
push
or
mov
test
jo
xor
mov
xor
mov
mov
xor
popa
psubq
inc
push
xchg
into
sub
gs
jno
out
js
jl
or
cs
xchg
adcb
fmuls
sti
add
cwtl
pop
push
jne
and
jns
or
stos
cld
mov
add
test
jge
lcall
loopne
push
adc
jnp
cli
roll
stos
lea
pop
mov
cmpsl
push
pushf
lods
insl
inc
dec
insl
jno
sub
lcall
mov
dec
dec
mov
xor
dec
out
aaa
adc
and
daa
fcomps
xchg
test
movsl
sbb
loopne
ljmp
int3
xchg
shll
mov
cltd
push
movsb
mov
jbe
popa
lahf
dec
loope
rcl
icebp
arpl
pop
jge
xchg
inc
nop
flds
dec
dec
testb
or
pop
mov
repnz
insl
popf
xorb
cmp
into
test
pop
test
pop
adc
aam
jge
sub
xor
aas
inc
mov
mov
lock
or
js
cld
mov
adc
stos
rcl
test
push
std
pop
addl
cmp
in
out
pop
mov
ficoms
call
sbb
mov
addr16
adc
fldenv
ficoml
or
bnd
icebp
xchg
cmova
fistps
in
and
cmpl
mov
jmp
cmp
clc
dec
jmp
nop
ret
mov
jp
rcr
ret
dec
imul
cs
mov
or
sarl
sub
sbb
xor
movsl
push
inc
push
mov
scas
or
ss
leave
xchg
pop
xchg
aas
pushf
pop
push
fsubr
xchg
mov
xchg
nop
pop
mov
mov
mov
enter
xor
and
mov
inc
cmc
pop
shlb
mov
jmp
cli
mov
or
inc
lahf
dec
mov
fidivrl
jnp
jle
xchg
mov
rcl
inc
incl
mov
cmp
fcmovu
pushw
int
cmp
mov
adc
mov
cmc
gs
add
cltd
mov
shlb
adc
stc
add
push
idiv
xchg
lods
and
jmp
rcrl
jb
jle
fsubrs
xor
lock
lret
lcall
xor
mov
push
out
push
rcll
in
xor
cli
imulb
dec
ja
mov
scas
sub
ja
mov
loopne
dec
sub
out
fstl
cld
mov
inc
cmpsl
mov
xor
jae
add
shrl
repnz
loop
loope
arpl
mov
stos
clc
hlt
out
cmp
lds
sub
xor
rcll
fsubl
shll
nop
xor
cltd
popa
jecxz
and
leave
loop
jp
repz
push
cmc
lock
movsb
test
lods
je
in
aam
bound
mov
xor
mov
lahf
jmp
dec
inc
push
sub
ljmp
cmp
int3
popl
mov
mov
xor
test
loope
mov
lods
pop
fdivrl
stos
adc
arpl
push
xchg
mov
int3
or
mov
inc
push
int
pusha
loopne
or
xor
xlat
fistpll
ds
mov
and
sub
js
imul
scas
push
pop
or
lock
push
push
push
sbb
pop
pop
and
push
cmpsl
test
into
push
pop
lcall
mov
xlat
pop
fs
pop
inc
mov
sbb
sbb
xchg
jp
sub
adc
je
andb
sbb
jmp
mov
insl
clc
xchg
mov
adc
out
pop
test
jmp
insb
repnz
pushf
cmp
inc
stos
les
mov
add
out
pop
iret
cmc
jl
mov
shlb
lret
mov
sbb
sub
ja
fwait
and
xor
mov
and
in
or
scas
insl
pop
outsb
scas
push
adc
or
adc
push
les
repnz
mov
jg
rorl
frstor
dec
xchg
outsl
hlt
mov
add
popa
fs
mov
xchg
mov
arpl
cld
es
fbld
adc
lea
stc
rcl
mov
push
scas
adc
or
mov
pop
jge
push
ret
orb
cmpb
data16
pop
inc
popf
pop
test
jmp
adc
fucom
addb
lods
cmp
mov
jle
mov
or
sbb
xor
pop
push
out
xchg
ljmp
lret
cmp
dec
push
scas
cltd
inc
push
adc
cmpsb
sahf
mov
pop
adc
fidivl
lret
xchg
inc
jp
xchg
pop
xchg
push
cld
bound
sub
mov
mov
or
mov
dec
or
adc
push
push
xchg
sarl
mov
jle
sbb
jl
jo
stos
xor
sbb
call
sbb
xchg
mov
cs
and
lods
add
xchg
idivl
push
pushl
daa
xchg
dec
in
mov
add
xchg
cmp
aam
enter
inc
pushf
push
fsubrl
out
and
cmp
or
push
enter
mov
pop
sbb
and
lret
sub
push
sbb
inc
fimull
dec
repnz
lods
scas
inc
or
ds
cwtl
adc
cmp
dec
mov
and
popa
jnp
ss
daa
cmp
in
bnd
pop
insb
fs
jl
jle
in
jns
sub
jo
out
mov
push
push
add
in
xor
and
je
adc
mov
in
cmp
icebp
and
xchg
ja
pop
fiaddl
xchg
in
testb
cmp
ljmp
jno
mov
fcomp
pushf
xor
pop
rcl
adc
addl
stos
shrl
inc
xchg
xor
scas
dec
cwtl
dec
imul
adc
mov
scas
int
test
ds
sub
xor
lds
mov
fstl
mov
bound
or
test
jge
and
ds
mov
idivl
sbbl
pop
jecxz
es
int
xchg
lahf
negb
adc
jb
xchg
rclb
int
pop
repnz
fidivrs
sub
inc
or
jns
cmp
outsl
ret
jne
mov
add
pop
mov
leave
xchg
movsl
enter
lock
xor
or
and
dec
nop
jnp
mov
push
sbb
pop
and
sbb
sub
and
mov
jle
out
rolb
jge
xchg
jne
dec
or
xchg
jecxz
roll
fucomi
gs
sbb
lods
adc
cmp
mov
sahf
fists
stos
xorl
sbb
pop
xor
add
lahf
es
push
add
adc
in
dec
into
or
and
pop
and
add
sbb
xchg
fwait
shl
jecxz
sti
cld
fidivl
sahf
pop
lea
lea
lahf
jmp
icebp
cld
int3
dec
repnz
push
fldcw
test
lock
mov
push
icebp
fbstp
pop
xor
or
test
cmp
mov
loope
loop
cwtl
mov
xor
mov
mov
mov
and
mov
adc
mov
dec
ds
jbe
dec
pop
jne
in
jb
int3
push
hlt
mov
jl
jno
lret
or
aad
jmp
push
icebp
xor
fisubrs
sub
arpl
or
pop
sti
dec
mov
frstors
into
jns
add
popa
jb
jno
mov
push
pop
cmp
jbe
and
xor
xchg
jne
push
or
cmpl
int
sarl
adc
mov
testl
add
addb
push
sub
cmp
cmp
test
repz
imul
test
scas
dec
push
lcall
add
out
lods
movsb
bound
rolb
mov
mov
inc
push
sti
scas
push
mov
pop
das
movsb
sbb
fisubs
insb
call
sti
or
int3
jg
pop
incl
orb
pushf
ret
or
xchg
cmp
pop
and
repnz
cli
lea
std
dec
imulb
sub
mov
xchg
jg
mov
push
cmp
jl
dec
lahf
loope
mov
nop
cwtl
push
adc
insl
sbb
aaa
pop
push
cs
cmp
shrl
ficoml
sub
push
fstps
shr
jge
or
pop
cmc
push
imul
mov
or
arpl
jno
xor
fs
lahf
or
in
xchg
mov
pop
lea
and
shll
xchg
and
mov
xor
std
or
inc
dec
fwait
jl
aaa
ja
decl
xor
jns
into
fwait
jecxz
pop
push
hlt
faddl
inc
pop
cmp
repz
lock
imul
dec
and
jmp
xchg
add
scas
inc
adc
mov
jle
cld
out
xlat
fstpt
cmpsb
xchg
and
mov
rcll
adc
mov
mov
cmpsl
or
xchg
mov
push
xor
in
jecxz
dec
cld
mov
sahf
leave
xchg
push
data16
mov
adc
mov
test
push
fsubrl
push
les
xchg
roll
scas
xchg
test
cld
or
xlat
repz
jecxz
out
adc
cmp
or
sbb
xor
or
out
ret
xchg
xchg
icebp
daa
mov
mov
cmp
mov
mov
mov
mov
mov
addb
xor
dec
leave
data16
popf
ja
notb
adc
in
adc
adc
xchg
dec
mov
adc
pop
jno
mov
cmp
jne
test
fcomps
lods
addr16
pop
and
jb
xor
in
call
stc
outsb
std
lods
mov
les
push
add
jae
jnp
jo
mov
out
test
sub
ficompl
or
jge
cmp
sbb
dec
dec
adc
adc
xchg
adc
hlt
stos
inc
sub
mov
jmp
testb
push
mov
push
and
lods
das
push
add
clc
sarb
js
stc
aad
mov
push
mov
add
xchg
jns
inc
push
mov
sub
xchg
popf
pusha
movsl
jmp
int
dec
pop
cmp
mov
lds
in
inc
cli
loopne
add
mov
scas
fstl
out
jmp
pop
aam
pusha
xchg
sti
sbb
int3
and
inc
aam
mov
push
cmp
mov
xchg
sbb
push
dec
jno
push
mov
dec
movsl
mov
hlt
mov
mov
mov
ret
fs
leave
mov
enter
test
scas
push
or
out
cmp
push
je
pop
inc
sbb
mov
push
scas
out
aaa
out
in
lret
push
pop
dec
xchg
push
loope
ja
pop
xor
xchg
xor
push
shlb
sub
out
sub
mov
adcb
sub
pop
jge
mov
push
mov
pushf
nop
or
scas
push
cmp
adc
outsl
test
mov
insl
mov
movsl
sbb
push
js
mov
popf
cwtl
mov
cmpsb
push
sahf
les
sbb
lds
adc
push
rolb
out
push
sbb
mov
insl
inc
mov
das
fidivs
add
cmpsb
es
or
and
mov
aaa
xchg
lock
pushf
pop
xor
jo
mov
data16
popl
mov
fwait
mov
sbb
test
ljmp
in
roll
imul
into
lcall
aas
cmp
cmc
repnz
cmp
jo
or
lcall
mov
movsb
fcmovu
out
popa
xchg
mov
inc
push
cli
rclb
add
and
ficomps
mov
push
inc
dec
xchg
sbb
adc
mov
lods
movsb
xlat
das
jnp
out
les
in
dec
sbb
cmp
and
imul
inc
sbb
dec
gs
xchg
xchg
gs
pop
bnd
das
popa
and
xor
shrl
cmp
in
gs
loope
sahf
cmp
ljmp
xlat
jg
lret
jnp
pop
xlat
cmp
jbe
cmpb
or
and
outsl
int3
mov
jb
cwtl
jnp
jmp
stos
sub
jmp
push
jl
test
mov
xor
push
iret
sbb
aam
gs
and
sbb
xchg
push
dec
inc
xor
jmp
call
lods
pop
add
mov
out
aaa
gs
add
and
repz
shl
push
push
scas
jae
inc
cmp
dec
inc
in
test
mov
bound
shrb
imul
dec
fs
pushf
jg
sub
je
add
jmp
sbbb
js
daa
xor
mov
ljmp
lods
fcompl
fcoml
std
out
push
push
gs
cmp
mov
xchg
adc
mov
mov
subl
bound
dec
ret
call
xor
out
mov
mov
jnp
out
subl
adc
shrl
xchg
js
lahf
insl
cmpsl
pop
jns
push
lahf
addl
push
imul
adc
aas
loope
mov
es
jno
cltd
cmp
and
loope
adc
inc
and
add
bound
mov
sbb
lret
lcall
pop
xor
stc
and
sbb
mov
jge
mov
adc
jnp
add
lods
inc
inc
sub
sahf
inc
fildll
insb
mov
mov
push
jo
and
jb
ja
mov
xchg
inc
cmc
jns
test
data16
fnsave
stos
cmp
fadds
dec
or
cs
jbe
mov
add
dec
inc
icebp
jg
jle
lret
loope
aas
add
lea
ljmp
inc
push
pushf
mov
jo
std
xchg
mov
leave
ljmp
test
sti
cmp
mov
mov
or
data16
repz
arpl
popa
repz
push
sbbl
jp
sub
xchg
repnz
outsb
lret
xchg
lock
mov
stos
hlt
mov
push
jg
xor
negl
bound
adc
adc
fwait
mov
mov
dec
testl
inc
lcall
outsl
pop
pop
jg
aam
aaa
pushl
lcall
loop
lret
jns
and
repnz
sub
and
dec
jnp
test
hlt
in
push
mov
nop
sub
pop
shrl
push
jg
sub
leave
out
push
cmp
adc
and
sbb
inc
add
lret
sbb
and
pop
jae
push
xchg
loop
add
cli
inc
jbe
fistl
in
adc
arpl
repz
jecxz
fidivl
xor
inc
adc
gs
and
pop
and
xor
icebp
shlb
mov
dec
push
pop
je
out
xor
sti
jbe
jno
xor
fnstenv
out
mov
dec
jecxz
add
loopne
loopne
in
pop
mov
push
dec
pop
xor
test
or
lock
add
mov
insb
icebp
xchg
jne
add
lret
sub
inc
sbb
cld
dec
in
mov
mov
mov
jae
sbb
cmp
addr16
icebp
xchg
inc
xchg
shl
int
ljmp
sbb
push
fstpl
sbb
out
decb
dec
and
rclb
inc
pop
rolb
icebp
fs
cmp
dec
sub
sar
pop
and
and
sbb
xor
jnp
roll
pop
mov
cli
adc
sbbb
shlb
mov
imul
fistpll
outsb
push
sub
sbb
add
icebp
lea
and
insl
xor
jo
pop
sarl
add
call
cmp
jg
call
pop
xchg
xchg
xchg
pop
or
pop
adc
inc
push
dec
aam
divl
mov
sbb
std
in
fmulp
xlat
imul
sbb
scas
pop
add
inc
aad
mov
jl
inc
and
bound
adc
or
push
mov
mov
stc
mov
fdivrl
cs
xchg
leave
mov
mov
mov
lret
sbb
clc
add
mov
inc
mov
mov
push
nop
mov
stos
faddl
subl
jnp
and
push
adc
outsb
dec
fsubr
pop
sarb
imul
dec
sbb
cwtl
add
add
std
mov
or
mov
pop
push
rolb
xchg
je
pop
test
sarl
imul
pop
not
insl
sub
and
test
cmp
cli
xchg
flds
daa
popf
jne
push
jp
mov
mov
mov
xor
repz
sub
jge
adc
push
mov
add
into
out
cmp
pop
loopne
out
into
clc
inc
cmp
adc
push
push
lret
pop
int3
mov
in
cmpsl
les
push
int
imul
std
outsb
sbb
adc
outsl
xchg
imul
or
in
push
rcrb
pop
pop
int3
bound
pop
pop
imul
push
stos
lret
xlat
sbbl
push
push
aas
push
je
mov
xchg
mov
push
repz
sbb
pusha
push
mov
cmp
lahf
fwait
push
push
add
xchg
cwtl
add
jno
mov
sti
inc
pop
lods
idiv
and
rcrl
and
stos
add
dec
loop
sbb
and
sub
push
pop
or
lods
insb
sub
dec
jbe
call
add
sub
mov
mov
add
insl
pop
mov
xchg
bound
addb
jle
push
clc
cmp
movsl
inc
adcb
sub
or
cmp
sub
xchg
arpl
pusha
fldenv
pop
repnz
aaa
adc
dec
push
popf
pop
and
push
sub
shr
into
pop
ret
push
lods
and
cmpl
and
dec
loop
xor
int3
mov
or
xchg
andb
cmp
dec
adc
std
shrb
xchg
mov
mov
xchg
or
adcb
cmp
adc
and
enter
mov
mov
jmp
sub
sub
cmpsb
dec
mov
sbb
stos
lcall
push
roll
imul
pop
push
push
pop
movaps
lods
jns
or
orl
ja
xchg
js
jle
clc
or
add
movsl
xlat
jbe
or
gs
rolb
cmc
dec
or
hlt
jmp
lahf
movsl
xchg
mul
inc
mov
shlb
je
stos
adc
mov
cmp
add
cmp
xchg
mov
dec
xchg
inc
push
cmp
cmp
rcll
xor
fwait
cmpsl
cmp
and
into
mov
adc
div
and
popa
data16
lods
jg
fldenv
popa
ud2
div
in
popa
pop
adc
pushf
mov
sti
cmc
jg
int3
sbb
push
jne
push
shrb
jg
sbb
movsb
iretw
ss
and
pushf
shr
or
adc
subb
aaa
jl
cmp
scas
xor
ret
jbe
daa
pop
mov
test
fucomip
inc
add
xchg
pop
xlat
jbe
mov
jp
sbb
sbb
lcall
loop
out
leave
xchg
popa
pop
ds
in
fisttps
sbb
mov
mov
fisttpll
cmpsl
ds
or
in
aas
jno
fmuls
outsb
pop
mov
lret
adc
iret
jl
stos
mov
stos
xchg
adc
pop
add
cltd
add
test
outsl
cli
loope
adc
outsl
addb
mov
adc
js
add
in
cld
es
vmovaps
out
inc
in
das
fwait
test
loope
pop
popf
outsl
pop
rclb
sub
sti
jle
aas
or
push
scas
or
jo
mov
or
and
ss
fucomp
cmpl
ret
pop
outsb
mov
shl
cwtl
cmc
outsl
ficoml
pop
mov
cwtl
repz
scas
add
filds
inc
jae
push
andl
add
sbb
pop
fs
aaa
outsb
fdiv
dec
fs
mov
pusha
movsl
xchg
push
cmp
dec
pop
ret
fadd
inc
add
xor
mov
fisubrs
sub
push
jle
test
jmp
push
fisubrl
dec
or
stc
xadd
xor
xchg
je
std
daa
xchg
or
in
mov
mov
add
imul
fcoml
jmp
cli
mov
cmp
repz
mov
sbb
cmp
push
mov
mov
inc
sbb
cmp
insb
xor
iret
out
adc
lods
add
lcall
lcall
xchg
ror
repz
int
pop
pop
jp
inc
fcoml
fisubrl
loopne
mov
cmp
das
pop
pop
inc
mov
pop
sbb
aas
subl
inc
leave
sub
xchg
lock
fadds
sbb
xor
add
inc
inc
mov
callw
leave
sarl
and
inc
insl
mov
xor
sub
ss
fsubrs
mov
pop
add
xor
call
mov
add
faddl
out
dec
jg
es
and
cmp
adc
cmp
fiaddl
aad
sbb
data16
icebp
mov
dec
scas
xor
push
mov
fisttps
mov
xchg
fwait
into
into
adc
movsl
inc
sub
sbb
jo
adc
or
add
xchg
jg
lock
mov
mov
arpl
mov
daa
test
outsb
xchg
cld
jle
sbb
and
shrl
pop
aam
mov
loope
inc
push
mov
scas
lret
cmpsl
insb
gs
adc
xchg
fisttps
mov
loop
mov
mov
out
call
jbe
ret
push
fmuls
vmovd
leave
mov
dec
int3
jecxz
les
and
stc
mov
enter
push
mov
into
inc
std
lds
in
and
fmuls
sti
xchg
daa
cmpsl
inc
sbb
ss
call
hlt
jle
daa
and
push
into
or
and
cmpsb
xor
sti
push
imul
adc
and
push
jbe
leave
inc
mov
xchg
enter
shrb
mov
jno
je
cmpsb
dec
adc
aaa
orb
sbb
out
sahf
sub
scas
pop
cld
icebp
gs
sub
adc
add
fwait
xchg
pushf
sti
adc
pop
je
outsl
fxch
dec
out
lea
jo
xor
xchg
sub
cmp
sbb
xor
xchg
push
jae
mov
pop
hlt
rcrb
vorps
gs
faddl
push
lea
imul
out
cwtl
cmp
sbb
lahf
test
inc
out
dec
and
iret
xor
mov
orl
jno
jmp
adc
add
inc
shld
sub
mov
js
test
sbb
jnp
push
incb
ret
ret
cmpl
dec
mov
orb
jnp
dec
std
push
jb
xchg
mov
or
mov
stos
pop
daa
not
int3
inc
cmp
lcall
sbb
adc
fs
mov
sub
lret
mov
mov
leave
jb
fists
push
jle
push
jbe
clc
mov
gs
xor
mov
imull
out
mov
popf
imul
xor
add
mov
fmuls
pop
ret
mov
sar
or
sarl
shr
rcrb
in
pop
or
mov
mov
nop
sub
aad
jo
stc
dec
add
sub
lods
pop
jb
and
mov
aam
test
lret
cmp
hlt
or
in
in
push
addb
cmpsl
cmp
shl
mov
push
ds
dec
int3
ret
negb
cmpsb
orl
les
lds
pop
daa
xor
stos
or
add
pcmpeqw
enter
sbb
and
fldl
dec
faddl
repnz
cmpsl
xchg
push
fs
add
dec
pop
dec
jne
inc
xchg
jae
ja
test
movsl
cmpsl
stos
mov
les
jno
xchg
dec
push
int
je
jbe
mov
out
sub
sbb
and
jp
cwtl
js
pop
jp
mov
or
pop
jns
jo
sub
dec
xchg
add
lock
or
jb
aas
xchg
inc
sbb
dec
sbb
js
outsb
test
push
dec
xchg
in
cs
xlat
xor
mov
adc
xor
pushf
out
dec
xchg
aad
gs
stc
int3
imul
popa
mov
shl
lea
sub
fisttpl
mov
push
fnstsw
xchg
xchg
insl
add
adc
mov
stc
js
out
adc
and
add
arpl
outsb
stos
lret
gs
out
add
push
in
imul
mov
int3
mov
iret
aam
xor
arpl
nop
fwait
aas
push
fst
push
icebp
lret
out
push
div
xchg
data16
in
adc
pop
cmp
in
push
shl
mov
clc
push
stc
lret
repnz
pop
shlb
mov
mov
lret
int3
or
jbe
subb
cmp
testb
aam
dec
rcll
adc
jle,pn
js
cwtl
loope
fidivl
negb
insb
repz
insb
add
enter
gs
sbb
cmp
lahf
pop
insl
int
cwtl
mov
xchg
jne
or
movsl
sub
lret
rcr
rclb
cmpsl
push
xor
pop
aad
add
shll
cmp
std
adc
inc
imul
cmp
inc
cltd
sub
jns
push
xchg
xchg
orb
bnd
xchg
insb
je
addr16
mov
scas
sar
subl
repz
mov
xchg
mov
dec
bound
pop
pop
fimull
sbb
xor
es
std
and
mov
xor
xor
repnz
mov
imull
or
cmpsl
and
int3
cmpsl
push
fldl
mov
ljmp
les
xchg
sarl
pusha
fs
ror
add
rorl
or
add
mov
xchg
push
and
divl
inc
repz
mov
pushf
pop
inc
mov
pop
or
xchg
and
lcall
aas
movsb
jo
lret
sub
mov
inc
subb
rcll
inc
dec
inc
mov
cltd
leave
mov
or
in
xchg
arpl
mov
pop
test
js
jle
jo
es
fsubr
shll
add
bt
mov
xchg
add
mov
push
adc
add
inc
sbb
xlat
leave
cmp
ds
push
adc
jmp
je
inc
or
jmp
and
loope
push
and
add
ljmp
shlb
xor
mov
das
push
pop
mov
mov
push
aad
in
loope
sub
jle
pushf
adc
clc
xchg
lds
jns
or
pmuludq
jp
aas
push
lcall
enter
xor
push
pop
or
aas
divl
aaa
ret
hlt
push
mov
test
push
enter
mov
mov
dec
out
and
inc
cwtl
aad
or
int3
inc
jp
sub
shl
push
jo
jle
push
repnz
and
or
push
fadds
pop
xor
push
push
gs
or
aaa
imul
sub
mov
adc
mov
rcrb
cmp
not
ja
emms
fstl
ficoml
pop
aad
pop
xchg
inc
dec
pop
inc
sub
or
cmp
add
adc
mov
add
or
sub
adcb
stos
pop
loop
xchg
insl
aas
and
push
lods
jmp
fstpl
adc
or
pop
ja
xlat
xchg
dec
js
pop
push
or
fsubs
xchg
int3
test
shl
hlt
jle
xor
adc
loope
popa
xchg
cli
gs
in
mov
xorl
cmpsb
sub
mov
push
lea
movsl
cld
cwtl
cmpsl
mov
and
popl
ss
xchg
scas
lds
movsb
xchg
bound
loopne
xor
inc
imul
sub
dec
lds
xlat
ret
pop
fcomps
jne
lcall
nop
mov
in
pusha
in
out
push
test
out
int
inc
movsb
jmp
jo
popf
fsin
js
add
jo
in
test
adc
jbe
pop
xor
out
cmp
outsb
popf
enter
fsts
cli
es
jne
test
jbe
mov
dec
out
push
fistl
xor
pop
int
cwtl
outsb
iret
mov
xlat
push
inc
mov
test
xchg
movb
mov
pop
mov
movsb
out
mov
and
bnd
out
loope
mov
mov
outsl
dec
xchg
imul
fldt
add
fisttpl
or
pop
ja
jle
pop
cld
xchg
xchg
subb
cmpsl
mov
stc
or
lock
jae
test
mov
call
push
add
sbb
push
fstp
push
pop
cli
fld
xor
xchg
inc
mov
out
std
xchg
mov
into
xchg
lds
movb
jp
aad
adc
dec
sub
adc
test
das
xor
sbb
push
insl
stos
xchg
cmp
fists
cmc
and
testl
sbb
sbb
orb
outsl
inc
mov
cmc
mov
arpl
inc
mov
pop
inc
lock
fisubrs
dec
in
test
and
pop
jb
xchg
dec
pop
and
adc
fdivr
neg
or
xor
insb
xchg
xchg
scas
je
add
das
data16
adc
clc
sub
lret
ja
push
pop
mov
sub
call
xchg
pop
xchg
xor
sub
or
popa
in
cs
dec
mov
sub
dec
rolb
ret
fldt
or
mov
xor
adc
and
dec
testb
push
lods
inc
push
mov
decb
inc
mov
aad
ret
mov
out
fucomi
aaa
jo
mov
sub
shl
mov
and
mov
mov
in
les
mov
mov
xchg
xchg
xchg
mov
adc
popa
fsubrs
imul
sub
jne
rol
outsb
inc
pop
xchg
arpl
mov
andb
fisubl
xchg
frstor
xor
scas
cli
sub
jg
test
cmp
inc
xlat
out
add
inc
push
test
aas
fdivr
rorl
loope
ljmp
int
sbb
ja
out
pop
xchg
sti
andl
jae
xor
dec
jmp
pop
enter
das
fidivl
cld
push
out
inc
test
call
mov
ss
push
xor
add
shll
mov
adc
lret
mov
dec
cld
test
cmp
sub
imul
add
aas
adc
loope
adc
cli
sub
mov
fnstsw
or
sarb
mov
push
popa
inc
faddl
cwtl
mov
mov
jecxz
mov
and
adc
stos
jg
cmpsb
or
bound
popa
repnz
ss
push
xor
aas
and
int
shrb
pop
xor
repz
and
rcrb
cmc
es
xor
mov
sbb
pop
sub
xchg
push
xor
es
mov
jg
arpl
pop
clc
insl
or
int
cld
and
jne
lret
adc
pushf
dec
push
add
add
cld
mov
addb
mov
mov
sbb
int3
push
mov
add
aas
pop
jbe
sbb
dec
jb
notb
push
fbld
mov
ja
mov
mov
dec
or
sarb
jmp
jnp
loope
mov
mov
setp
jmp
mov
and
cld
dec
lods
dec
int3
cmp
dec
cmp
mov
scas
ds
lret
ja
movl
jb
mov
pop
mov
loop
ja
pop
sub
js
cs
popa
pop
push
dec
imull
shr
xor
je
or
push
repz
mov
cltd
pop
mov
movb
pop
cmp
inc
aas
add
insl
mov
mov
push
movsb
sub
enter
aad
jecxz
pop
mov
enter
mov
sbb
int3
jns
loope
cmp
push
fisubrs
xor
push
and
aaa
iret
sbb
pop
scas
outsb
xchg
call
clc
ja
xchg
mov
xor
shlb
mov
push
mov
cmp
xor
dec
sub
or
inc
fistl
fistps
mov
sbb
mov
gs
sub
jg
ret
in
jns
je
xor
lahf
frstor
subl
sbb
idivb
hlt
orl
adc
mov
lea
push
add
add
loope
mov
addr16
insb
jmp
push
xor
adc
pushf
mov
call
dec
mov
mov
and
repnz
or
lods
sarb
je
cld
enter
daa
dec
lret
push
add
insb
lea
xchg
loopne
shl
inc
or
inc
mov
ret
inc
inc
sub
fcompl
adc
shrl
data16
push
mov
shrl
push
test
sub
pop
lods
inc
gs
insb
dec
push
int
insb
insb
and
fcmovb
in
or
xchg
test
ret
push
lcall
and
call
or
cmp
mov
xchg
and
mov
dec
lds
pushl
xorl
push
aas
mov
push
stos
add
hlt
data16
cmp
dec
and
fdivl
repz
ret
and
mov
and
cwtl
enter
xlat
fldenv
or
dec
ss
stc
outsl
cwtl
pusha
sbb
or
push
icebp
push
push
pop
jge
jecxz
xor
out
lods
inc
adc
sub
lcall
dec
add
lret
pushf
sbb
and
pop
sbb
add
pop
dec
sbb
and
jl
adc
mov
pop
or
sbb
inc
test
popa
pop
test
repz
les
insl
jne
xlat
int
aas
jp
outsl
js
or
xlat
mov
loopne,pt
cs
pop
stc
lds
dec
out
add
mov
mov
adc
sti
pop
push
pop
lds
movsl
pop
pop
dec
std
sub
jp
fstl
dec
fiaddl
sahf
aad
outsl
shll
or
inc
mov
lret
or
test
pop
sbb
sti
and
cli
loopne
pop
sub
adc
jo
mov
adc
cmp
test
in
je
sbb
arpl
pusha
sti
imul
mov
movsl
in
cmpsb
pop
cmp
mov
scas
addb
pop
outsb
push
adc
int3
or
cmc
push
mov
jb
fsts
push
test
adc
adc
and
shll
inc
jno
mov
gs
fldt
fistpll
fists
sbb
adc
dec
cmc
fxtract
add
hlt
inc
sbb
fbstp
pop
pop
push
cmp
daa
bound
outsb
and
fidivs
and
out
push
movsb
and
xor
pop
sub
fmull
lods
or
jg
outsb
jb
mov
subb
add
mov
lods
shll
int
fdivp
inc
xchg
movsl
testb
mov
mov
or
ror
xchg
cmp
cmpsl
push
mov
rcl
in
or
outsl
inc
pushf
mov
aad
shll
fisubrl
cmpsb
sub
nop
test
sbb
mov
cmp
add
lret
je
ficompl
maxps
and
jl
das
and
push
pop
das
or
scas
inc
aam
test
in
pop
mov
mov
test
pop
rol
cmp
add
xchg
xor
cmpsb
sub
mov
cmpsb
movsl
insb
pop
dec
aam
xchg
jle
sti
mov
add
fsubp
mov
push
stos
lret
pop
push
mov
jae
mov
cwtl
sbb
in
lea
fwait
mov
daa
outsl
mov
cmp
sub
pop
push
jo
out
outsb
push
xchg
mov
cmp
sbb
bound
ds
add
fcomp
or
ljmp
sub
sub
mov
dec
sbb
mov
push
pop
cltd
lods
mov
imul
inc
add
mov
cltd
mov
rorb
bound
js
jae
lock
dec
pop
rorl
jecxz
or
les
pop
add
jo
cli
daa
dec
aas
dec
add
cwtl
mov
push
add
push
lcall
inc
mov
lret
xor
push
xor
mov
and
and
popf
gs
dec
testb
dec
ret
aam
mov
aam
xor
data16
jbe
lea
hlt
mov
sbb
jl
in
xor
lock
idivb
cmp
push
into
stc
sub
jnp
pushf
sbb
jecxz
inc
cmp
dec
jnp
sub
out
add
lds
sbb
mov
orl
sub
aam
clc
fs
pop
add
push
das
lea
das
mov
mov
shrl
xchg
pop
inc
inc
sbb
dec
pop
cmpsl
call
rcrb
adcl
sbb
inc
movsl
adc
adc
mov
std
inc
mov
pop
aam
js
adc
inc
ds
cmp
xchg
mov
jne
xchg
mov
popw
inc
pop
test
subl
push
and
mov
add
inc
les
fadd
rcll
cltd
xchg
fcompl
pop
xchg
sub
inc
push
inc
or
push
sbb
dec
div
repnz
xor
or
jle
push
fst
push
enter
xchg
or
or
mov
push
out
mov
movsl
daa
add
jle
pop
and
ret
mov
push
cmp
xchg
popf
sub
movsb
rorb
mov
je
xchg
push
add
mov
lds
dec
sub
mov
int
pop
sub
cmp
jmp
pop
fmuls
daa
pop
dec
pop
add
or
orl
lea
sub
test
jnp
pop
mov
mov
daa
or
mov
adc
and
enter
xchg
cwtl
push
ret
testl
adc
mov
leave
les
sub
or
fstl
mov
arpl
hlt
or
testl
cmc
inc
arpl
shr
pop
inc
push
mov
out
rcrb
mov
arpl
add
shlb
popf
xchg
mov
jo
add
push
fs
or
lock
or
cmpsb
mov
test
shll
fsubrl
xchg
and
xchg
sub
bound
xchg
mov
in
mov
mov
sub
add
mov
inc
mov
test
das
sbb
or
in
adcb
lea
adc
sub
popf
test
sub
cmp
xorl
pop
adc
cmpsb
pop
jle
pop
pop
enter
stos
dec
pop
dec
aaa
jl
push
in
cli
jl
inc
jge
xor
pushf
lods
aaa
clc
fdivl
fdivs
mov
mov
lock
scas
ja
mov
xchg
addr16
pop
cmp
scas
lcall
sub
jg
cltd
nop
cmp
out
jl
std
push
sub
loope
push
sbb
loop
push
cli
int3
pop
outsb
mov
aas
adc
pushf
jb
add
rol
int
mov
adc
mov
ret
fstps
pop
or
xchg
arpl
fwait
sub
dec
push
pop
insb
dec
add
add
std
cmp
dec
add
inc
repz
divl
arpl
pushf
jae
push
inc
sbb
outsb
and
test
imul
and
adc
icebp
ds
les
je
loop
xor
xor
scas
aam
mov
cmp
ror
pop
xor
ljmp
cmp
push
sbb
xor
mov
xchg
shll
and
cs
sub
popf
leave
mov
loope
iret
jmp
xchg
inc
sbb
inc
addr16
es
lods
mov
test
ds
mov
fwait
xor
and
in
cmp
aad
dec
or
lea
sub
inc
loopne
push
and
adc
sbb
sahf
pop
pop
mov
insb
mov
loop
jae
mov
lret
outsb
sarl
test
cwtl
and
fdivrp
jmp
cwtl
xchg
faddl
mov
loop
test
pop
repnz
push
nop
mov
mov
sbb
xchg
dec
pop
mov
mov
dec
mov
test
mov
pop
outsl
shll
or
add
aam
mov
fistpl
testb
inc
clc
fsts
repnz
lret
sbb
cmc
fsts
mov
mov
ja
fcoms
inc
xorl
mov
lret
mov
fprem1
aas
jae
inc
out
sbb
inc
xor
int3
inc
into
test
jmp
mov
cli
out
xlat
cmp
gs
pop
pop
push
ljmp
push
clc
mov
or
inc
push
les
inc
dec
out
cmpsb
mov
jae
inc
adc
sbb
push
mov
mulb
lea
test
jnp
sbb
clc
sub
lods
inc
or
or
lods
aam
aad
lcall
pop
inc
pop
loope
popf
fbld
int3
push
adc
fs
cmp
stc
scas
push
mov
lret
clc
inc
and
cmpsl
sbb
jg
add
and
push
dec
iret
sbb
jb
push
sub
repnz
int3
push
or
loope
sbb
mov
scas
cmc
into
cwtl
add
adc
call
xor
cmp
aam
sbb
loope
dec
jl
clc
in
repz
adc
fisubrl
or
mov
movsl
int
roll
jo
or
mov
lret
sarl
loop
xlat
mov
mov
fwait
ss
cmp
cmp
sbb
and
arpl
push
sbb
or
xor
mov
fcmovnb
fistpl
and
jmp
sub
mov
or
stc
inc
lock
adc
loopne
mov
icebp
mov
in
pop
into
cs
fstl
imul
inc
ret
mov
fmul
stos
add
lds
cld
mov
jae
jbe
sarb
mov
in
pusha
xor
sub
decb
or
arpl
int
push
adc
sub
lock
stc
sbbb
movl
mov
xchg
mov
and
loopne
sub
into
shr
dec
push
mov
ret
insb
cmp
and
add
stos
mov
cli
sub
cld
xchg
jmp
outsb
divb
lods
mov
adc
ret
aam
iret
add
out
das
xchg
imul
and
test
xchg
sub
loop
push
add
mov
cld
dec
out
xchg
mov
notl
jae
fisubl
and
pop
sbbl
jg
inc
push
inc
arpl
adc
push
outsb
and
mov
cmc
in
clc
and
pop
fwait
scas
and
cmp
test
imul
cmp
scas
inc
into
adc
push
imul
hlt
inc
jnp
lea
cwtl
lea
negl
cs
pop
ficoml
iret
and
call
in
push
lahf
push
loope
xchg
inc
iret
pop
fnsave
imul
stc
jle
cltd
clc
lret
test
sub
loope
or
mov
inc
fcompl
jl
xchg
insb
decl
jb
xchg
int3
mov
dec
loop
jae
add
loop
or
stc
mov
mov
int3
inc
out
xor
dec
fidivrs
mov
xchg
mov
insl
shl
ja
iret
sti
adc
test
jle
and
pop
mov
adc
or
mov
inc
ret
pusha
int
mov
dec
xchg
shll
sub
decl
dec
fiaddl
sti
cmp
sbb
cli
or
hlt
add
and
enter
cmpsl
lds
sbb
push
cwtl
xor
arpl
fcom
pop
cmp
andb
fcomps
out
pop
test
cmp
pop
inc
pop
add
xchg
fwait
and
cmp
push
xchg
int
fildll
imul
movsl
insb
stc
add
dec
addl
test
xchg
sahf
jno
mov
std
test
dec
in
xchg
out
outsl
cmp
jns
xchg
fildll
cmp
cmp
cmpb
or
sub
sbbb
aas
daa
cs
scas
jl
mov
sbb
xor
je
or
pop
jp
xor
adc
ss
add
mov
daa
jae
pusha
clc
add
sub
es
add
pop
sbb
loop
popf
popf
mov
pop
pop
jbe
scas
adc
js
inc
shll
mov
push
ss
shlb
imul
cmp
lahf
cmovg
bound
sub
aam
outsl
push
lret
outsb
lahf
mov
pop
jno
adc
sub
mov
into
hlt
repnz
or
push
inc
lea
int
push
xchg
and
leave
ljmp
sbb
xchg
jae
inc
mov
xchg
push
enter
fstl
sub
add
jmp
loop
jp,pt
stc
arpl
scas
dec
fdivrs
add
shr
mov
inc
jbe
and
mov
and
enter
pop
ljmp
insl
lahf
mov
fldcw
jnp
add
lods
push
hlt
push
subl
push
dec
xor
rclb
and
arpl
jb
sbb
pop
jp
push
int
xchg
imul
fcomp
dec
adc
call
add
mov
imul
fstpt
sub
push
pop
mov
mov
push
es
mov
scas
and
insl
std
push
mov
inc
fistps
arpl
loop
xor
es
insb
sti
out
push
icebp
or
out
loopne
cmp
add
push
xor
mov
cmpsb
pop
jns
out
push
shrl
cmp
sbb
orl
aam
dec
rcrl
and
loope
pop
or
call
mov
daa
aad
movsb
test
call
and
loopne
push
rcll
pop
test
insb
mov
fldcw
inc
inc
mov
daa
and
aam
sub
push
sub
add
sub
jb
mov
sbb
sarl
cmp
repz
push
stos
subb
dec
mov
or
sub
cmpsl
je
cwtl
and
out
cmp
les
mov
xor
scas
xchg
cmp
jg
out
pop
dec
jno
cli
add
lcall
divl
pop
or
adc
js
adc
iret
movsb
sub
xor
js
das
add
and
dec
sbb
adc
or
sub
sbb
jb,pt
and
mov
mov
fcomps
jae
out
sbb
pop
push
loope
repz
out
jge
pop
lds
les
adc
lods
cmc
sub
cmc
push
jno
cmpb
icebp
and
inc
mov
mov
xor
dec
mov
xchg
jne
push
push
mov
int
popa
and
lret
fistl
xor
add
test
xor
and
jae
sub
inc
jecxz
jnp
push
jo
mov
les
insb
xor
test
outsb
aas
sbb
mov
divb
or
xchg
pop
scas
sub
push
pop
ljmp
ret
inc
or
sub
addr16
rcr
clc
adc
jb
cmp
test
jne
jns
test
and
sbb
icebp
lret
dec
sub
dec
sub
cmp
fdivl
xchg
or
sbb
pop
sbb
mov
adc
pusha
inc
inc
sbb
fmull
negb
inc
fs
xchg
repnz
and
rcr
push
repz
cmpsl
cwtl
jb
inc
enter
cli
mov
lret
push
cmp
xchg
loopne
mov
mov
inc
lea
push
and
sub
adc
repnz
in
mov
aad
sbb
daa
dec
icebp
stos
push
cvtpi2ps
mov
test
and
add
lds
fidivrl
xchg
das
cmp
int
mov
popa
pop
mov
mov
cmp
mov
jne
fwait
ret
cmp
repnz
sbb
cmpsb
sahf
aaa
mov
or
int
inc
stos
outsl
jle
mov
outsl
xchg
ret
sbb
cli
nop
pop
shld
scas
arpl
jno
sbb
jp
pop
adc
xorb
lret
mov
sub
bound
sahf
push
add
push
push
cltd
lcall
lea
inc
jmp
repz
push
mov
movsl
xchg
sbb
aam
mov
add
mov
in
ja
cmpsb
inc
push
outsl
repz
insl
cmpsb
icebp
sub
mov
out
mov
outsl
xchg
mov
movsl
pop
repz
arpl
sbb
rol
insb
faddl
roll
lret
push
pop
popa
psllq
add
pop
cmpsb
mov
iret
inc
mov
or
or
sti
ss
cmp
rcll
or
mov
add
add
lcall
stc
pushf
or
mov
sub
mov
push
hlt
enter
jns
arpl
mov
push
xchg
jno
xchg
dec
outsl
mov
mov
lret
cmp
cmp
rolb
cmp
cmp
pop
leave
shll
xchg
in
in
add
aam
pusha
mov
inc
ret
retw
and
xchg
sub
jo
push
in
lods
popa
scas
push
dec
loop
sbb
jb
loope
stos
push
dec
sbb
fimull
arpl
jb
lahf
dec
dec
sub
orb
pop
sbb
sbb
jl
shlb
and
rcrl
pop
adc
xchg
in
bound
xchg
add
out
push
mov
add
cmpsb
inc
enter
xor
out
jae
adc
cltd
leave
mov
cmp
jae
nop
hlt
add
orl
movsl
pop
cmc
push
xor
mov
cmpsb
or
in
out
push
xlat
fs
in
fs
and
cmp
or
mov
test
lods
nop
ja
jg
imull
frstor
add
mov
inc
inc
mov
dec
mov
mov
mov
push
mov
ljmp
xor
aas
sub
xchg
mov
pusha
enter
sub
add
nop
jbe
push
push
mov
xchg
sbb
mov
and
sbb
inc
ret
fsubs
es
arpl
xlat
or
ja
aaa
inc
call
xor
jle
jl
cmpsl
adc
adc
add
cmp
aam
xchg
cmp
ljmp
loope
sti
jmp
dec
negb
and
pop
enter
and
or
push
xchg
xor
and
xchg
jg
lahf
cmp
das
lock
add
fdivs
sub
adc
sbb
cmp
fcomps
sbb
lods
xor
popa
les
dec
pop
sub
mov
pop
bound
pop
xchg
inc
scas
mov
pop
push
fmulp
xchg
rclb
rcrl
sti
jge
sbb
repz
out
out
aad
xchg
xor
dec
rcr
ret
and
mov
fsubs
push
cmp
enter
jle
pop
aam
lods
shl
ret
adc
insl
lret
inc
lret
inc
stos
add
cmc
xchg
pop
outsb
cmp
les
in
mov
mov
hlt
lock
outsl
fldt
push
sbb
mov
loopne
mov
or
jae
sarb
or
sub
push
dec
lahf
mov
cmp
or
mov
js
js
fsub
jmp
popf
pop
xor
stos
or
ret
xor
fsubl
movb
xor
mov
or
popf
fstps
imul
sub
jbe
aad
lock
repz
xchg
cmpb
clc
shlb
mov
cmp
mov
push
outsb
dec
cmp
jecxz
dec
stc
inc
imul
push
mov
mov
cwtl
mov
fisttpl
cmpsl
stc
aad
dec
mov
popa
and
cli
sbb
ljmp
ficoms
das
xlat
imul
sub
mov
loopne
fsubrl
add
mov
out
jne
idivb
arpl
inc
push
xor
sub
pusha
dec
outsl
jnp
idivl
loopne
lea
add
nop
dec
cmp
sbb
test
lret
test
mov
jns
popa
adc
pop
add
fdivrs
and
setnp
add
out
dec
in
and
adc
ljmp
and
push
xchg
lods
mov
loopne
movsl
add
add
mov
gs
in
int3
adcl
mov
push
adc
mov
dec
mov
cli
lds
mov
aaa
repnz
mov
xor
loopne
sbb
rcll
xchg
dec
add
xor
sub
add
pop
adc
xor
mov
xlat
push
jae
or
lret
rolb
dec
adc
jle,pn
jo
scas
sub
and
add
ds
or
xchg
mov
arpl
lds
xchg
mov
outsl
pop
xor
xchg
test
imul
imul
cmpsb
movsl
jl
icebp
fists
idiv
sub
mov
aam
ret
popa
les
fwait
bound
stos
stos
mov
sbb
orl
mov
fldt
mov
out
push
cmp
push
cmp
adc
or
int3
push
adc
or
jge
mov
and
shlb
repz
ljmp
dec
pop
xchg
dec
dec
sub
jo
sarl
xor
push
shlb
add
xor
jbe
push
icebp
mov
popa
add
cmp
negb
outsl
mov
outsl
mov
jl
add
add
in
jno
mov
xchg
mov
lcall
bound
and
pop
pop
andl
cwtl
jle
mov
rolb
cmp
push
ljmp
roll
sub
vpmulhw
mov
mov
jl
aam
and
sbb
mov
aas
repnz
adc
mov
call
mov
lea
hlt
lock
xlat
pop
xor
jle
sbb
jle
sub
push
lahf
fldenv
or
not
cld
pop
test
and
sti
jae
xchg
fldenv
jecxz
jle
mov
push
mov
hlt
mov
loope
out
jb
or
add
mov
sbb
mov
lea
or
popa
test
mov
push
data16
test
fs
data16
dec
push
cmpsl
dec
xor
in
sbb
jmp
adc
mov
mov
adcl
idivb
insb
push
hlt
pusha
sti
pop
mov
int
repnz
xlat
movsb
mov
ss
or
shlb
add
aaa
addr16
push
test
int
mov
mov
lods
mov
stc
mov
mov
jl
dec
push
mov
dec
mov
jo
or
jmp
ficoml
jl
es
iret
popa
hlt
jp
sub
sti
pop
leave
inc
pushf
aam
add
jg
ljmp
insb
aad
push
jle
int3
mov
repz
inc
ljmp
push
jo
loope
call
xor
in
in
or
xor
dec
jg
mov
jns
test
mov
das
stc
repz
out
xor
inc
jp
out
mov
jne
insl
sbb
js
push
pop
movsb
add
push
or
add
clc
pop
lahf
bound
rcrl
hlt
xorl
or
scas
movsl
fisubrs
mov
rcrl
lret
xor
lcall
adc
dec
jno
inc
adc
sbb
ret
mov
stos
dec
xor
jge
loopne
stos
xchg
das
out
inc
hlt
mov
jns
ljmp
jb
push
dec
mov
ss
cld
cmp
aam
and
mov
mov
in
sub
cmpsl
push
adc
dec
inc
mov
add
xchg
inc
movsb
dec
aaa
orl
push
adc
imul
xchg
icebp
fdivp
push
imul
fdivrl
mov
stc
loopne
jbe
sbb
inc
nop
mov
adc
lock
in
mov
mov
xchg
cli
stos
pop
fwait
dec
pop
mov
es
lods
testb
mov
jno
inc
add
push
cmp
lds
xchg
add
cmp
pop
movsl
dec
xor
mov
cmpsl
sub
mov
cltd
mov
mov
push
adc
mov
push
add
pop
jle
jo
pop
pop
loopne
jnp
pushf
scas
push
xor
movsb
into
or
mov
adc
inc
mov
js
fistps
jecxz
test
mov
aas
cmp
jmp
jnp
imul
icebp
mov
cmp
sub
scas
cmp
add
mov
pushf
test
sbb
push
scas
rcrl
mov
jb
lds
cmp
sbb
mov
cwtl
xchg
rclb
pop
cltd
mov
aam
cmp
cmpsb
mov
loop
scas
xchg
sub
dec
pop
sbb
pop
mov
xor
dec
xor
add
mov
inc
pop
dec
loope
sbb
add
lret
adc
lahf
int
push
outsb
icebp
pushf
mov
pusha
add
movb
repz
adc
dec
xchg
mov
mov
dec
sub
mov
sbb
rolb
les
cwtl
fsubr
xor
push
xchg
lea
cltd
add
out
pop
adc
add
jb
fcoml
movsl
push
and
xchg
mov
bound
call
mov
sbb
lods
push
mov
sub
test
and
sahf
inc
test
sub
adc
mov
es
popa
xchg
lock
gs
out
pop
cmp
jns
push
cmpsb
rolb
test
icebp
bound
xchg
into
xor
shll
test
jae
outsb
pop
xchg
mov
testl
clc
adc
jg
push
sub
add
dec
sub
out
jbe
outsl
dec
inc
bound
push
loop
jae
adc
push
icebp
mov
push
mov
aam
std
mov
les
add
inc
das
mov
jge
out
pop
sub
dec
jmp
mov
xor
sub
dec
enter
xor
xor
add
add
ljmp
rorb
lea
mov
loopne
pop
fisubs
aad
pop
fsubrl
das
ja
adc
jnp
sub
xor
lods
or
movsl
pusha
mov
ds
jo
movsl
gs
xchg
sbb
sub
jp
loope
aam
mov
mov
xchg
lret
and
xchg
lock
daa
rep
sbb
sbb
add
cmp
or
mov
fcmovu
mov
pop
push
lods
sub
ret
cmpsl
jle
ljmp
test
sbb
cli
xor
sub
cli
loope
gs
cli
mov
mov
xlat
roll
rep
outsl
push
fsts
push
popf
push
dec
pop
lods
ja
aas
cmp
rcpps
mov
shrl
pop
push
and
mov
add
mov
in
dec
dec
into
inc
push
mov
push
and
in
int
test
fidivs
stc
mov
call
out
sub
ljmp
pop
inc
enter
fistps
jl
xchg
sbb
push
jecxz
cld
pop
popa
lods
mov
push
sub
or
and
icebp
dec
jbe
cmc
pop
aad
xor
ret
pop
pop
test
push
andl
jg
sbb
add
sti
jb
lret
xor
fimuls
sbb
aam
push
test
xor
xor
les
shr
cmpsl
das
iret
test
icebp
xchg
shrl
add
mov
rorb
in
lahf
movsl
sbb
shl
mov
fstpl
flds
mov
xchg
mov
sub
pusha
int3
pop
lea
ror
xor
jne
mov
mov
dec
sbb
int3
sti
xorl
sbb
insb
ret
in
sub
pusha
adc
rclb
enter
pmaxsw
cmp
shlb
movsb
ret
loope
cmovp
sub
pop
jns
inc
cmpsb
js
daa
jae
cmp
pop
add
dec
xchg
aam
jae
adc
imul
pop
sbbl
mov
test
inc
cmp
dec
stos
pop
add
in
and
and
stos
xchg
inc
roll
adcb
test
in
out
test
in
pop
jle
push
rcrl
xor
sub
jae
mov
mov
sub
call
shl
lret
movsb
repnz
sbb
popa
push
insl
dec
jmp
jne
mov
add
inc
xor
sub
shr
sarl
pop
imul
adc
sarb
test
insl
in
add
mov
test
test
mov
daa
arpl
xchg
mov
pop
outsb
xchg
sbb
outsl
hlt
sar
inc
fs
idivl
lret
out
dec
jmp
add
jmp
mov
push
jp
pop
add
scas
mov
xor
adc
dec
xor
rorl
mov
fs
sbb
popf
add
imul
int3
repz
jb
mov
mov
jae
test
add
scas
ficompl
push
inc
das
mov
sti
aam
scas
mov
jno
stos
cmc
rorl
jb
push
fsts
rol
cmp
push
lcall
and
pop
es
lahf
add
lret
movsb
cmp
inc
sub
loope
in
add
mov
sbb
fwait
mov
clc
in
or
sbb
adc
fisubrs
inc
fwait
push
xchg
daa
mov
mov
xor
xor
jle
sbb
adc
sbb
inc
and
xchg
sti
or
mov
inc
jae
mov
stos
lods
dec
pop
add
or
outsb
fnstenv
inc
jae
inc
ja
xchg
xorl
jno
mov
out
mov
xor
mov
jge
pop
into
mov
mov
data16
shr
xor
push
cld
test
aad
loope
xchg
mov
xor
inc
testb
pop
out
adc
dec
test
inc
sub
jle
rcll
push
dec
and
mov
jge
xchg
icebp
out
and
jmp
mov
lret
pop
stc
sahf
or
jmp
pop
fsub
adc
xor
test
cmc
lods
ljmp
movsb
hlt
add
mov
inc
and
jmp
push
sarl
dec
or
stc
ret
mov
jae
movsl
in
pushl
stos
sub
mov
shlb
test
std
fisttpl
xor
sahf
jae
mov
dec
loop
jb
sub
push
xchg
cld
or
ja
lret
je
lds
cltd
jmp
jle
insb
in
push
mov
add
js
add
fisubrl
rolb
and
mov
scas
sbb
push
push
adc
and
int3
addr16
hlt
sbb
dec
pushf
lcall
mov
cmp
loopne
push
and
imul
sti
pop
mov
icebp
mov
rolb
mov
in
test
adc
mov
push
call
imul
insb
sub
jne
gs
mov
mov
xchg
aam
std
xor
hlt
or
sti
into
push
std
ret
in
inc
popf
push
cltd
cltd
rorb
fnstsw
xor
jo
xor
lret
dec
mov
fnstcw
jmp
pop
testb
sbb
lock
test
ds
push
cli
enter
jo
sbb
mov
jo
repnz
addr16
pop
cmp
xchg
cld
pop
popf
ficoms
es
inc
fisubl
repnz
das
pop
xchg
in
mov
mov
stos
sti
scas
push
pop
mov
sbb
lods
test
fnsave
inc
pusha
add
gs
shl
outsl
cmc
je
mov
jne
lret
pop
cwtl
addb
scas
mov
stos
add
and
mov
fisttpll
sbb
xor
adc
xor
andl
jecxz
mov
xchg
push
dec
outsb
and
push
mov
insl
outsl
and
rcrb
sahf
cmpsb
or
pushf
stc
rcrb
int3
inc
jg
dec
jg
inc
sbb
pushf
pushl
jle
fimuls
push
adc
lret
push
imull
lds
inc
jmp
cmp
lcall
lcall
rclb
lds
sbb
cmp
es
repnz
and
jge
insl
cmp
loopne
enter
les
ja
mov
jae
das
in
xor
ja
mov
popa
jecxz
pop
pusha
mov
adc
sub
and
jmp
das
cltd
pop
dec
add
out
int
jle
ds
push
and
mov
call
cmpsl
xchg
repz
fcomps
pop
ljmp
inc
adc
mov
jne
cmpb
test
pop
stc
testb
shrl
add
or
mov
xchg
cmp
loop
dec
out
inc
test
js
stos
ja
inc
std
sub
xchg
xor
sbb
inc
daa
pop
cli
cli
push
loope
fs
or
mov
pop
sub
jge
and
jle
lods
inc
lcall
mov
in
ljmp
adc
ss
incl
xor
cmp
and
rcrb
sbb
pop
pop
or
in
push
ss
icebp
mov
jno
sbb
mov
and
jp
movsb
notb
and
dec
popf
das
sti
dec
inc
mov
lock
loop
or
into
pop
sbb
popf
xchg
movsb
sub
jg
imul
sbb
sbb
popf
jmp
fildll
inc
sub
addb
jle
aam
xlat
and
mov
sub
mov
cltd
inc
aad
jge
fcoml
xor
or
lcall
adc
cltd
push
rcr
cmp
cmp
push
imul
pop
xchg
inc
dec
add
sbb
fucomi
out
sbb
mov
mov
shrl
in
push
mov
push
mov
or
xor
push
test
sub
mov
or
flds
mov
dec
shrd
cmpl
xchg
popa
insb
fdivr
cmc
stc
ljmp
neg
sub
dec
mov
and
jo
sbb
lret
xchg
icebp
pusha
fs
push
mov
push
mov
ficoms
adc
add
mov
jg
std
shr
push
out
js
mov
popa
sub
scas
push
shrl
sbb
ljmp
dec
push
mov
push
xor
jmp
mov
popa
lret
add
and
jp
inc
dec
pop
pop
aas
int3
int3
insb
test
sub
shll
lods
fisubrl
mov
pop
sub
push
mov
jne
sbbb
hlt
mov
jns
into
imul
je,pn
push
lock
push
and
fdivl
roll
adc
lahf
cmc
cmp
fs
stc
nop
repnz
and
pop
or
mov
jbe
shlb
add
decl
sbb
fcmovne
jns,pn
mov
bound
divb
sub
adc
std
adc
hlt
loopne
mov
aaa
dec
cli
fdivrp
mov
push
mov
push
or
xor
jne
imul
xchg
xchg
lock
and
jne
or
pop
rcl
and
test
mov
inc
xchg
inc
dec
jae
xchg
shrb
push
movsl
mov
fcompl
insb
jae
outsb
test
xchg
popa
jle
mov
pop
sbbl
dec
and
push
lcall
adc
pop
lods
adc
push
jns
popf
daa
data16
and
je
fwait
psubusb
fbstp
mov
in
sbb
rcl
adc
push
xchg
loope
xchg
inc
sub
cmp
insl
in
cmp
pushf
fimuls
inc
fsubs
mov
mov
les
test
jecxz
mov
dec
xor
or
aad
int
jae
into
jg
fildl
sbb
inc
add
js
mov
jno
mov
sti
insl
xor
scas
stos
mov
cs
add
fnstcw
mov
in
decb
inc
ret
bound
mov
adc
add
icebp
jle
mov
fisttps
ficoms
cmpsl
mov
jne
lods
xchg
dec
sub
and
out
leave
int3
test
ja
leave
iret
std
and
xchg
and
push
ret
jno
cmp
and
in
lea
pop
push
inc
scas
push
cld
jo
inc
push
stc
fcmovu
sub
or
les
pop
pop
popf
clc
insl
aaa
iret
in
push
xchg
add
out
iret
repnz
dec
aaa
inc
hlt
cltd
out
xchg
insl
imul
pop
lret
jb
lcall
jmp
cmp
push
jmp
fldl
test
outsl
pop
fsts
pcmpgtd
lods
daa
xchg
jl
movsb
clc
inc
jge
je
std
jne
xchg
das
out
sbb
test
push
nop
cmp
in
mov
jl
outsb
cmp
inc
call
es
mov
xchg
rcl
mov
int3
cmpsl
pop
sti
fwait
xor
pop
mov
add
lret
or
bound
lahf
jmp
xor
loope
sbb
mov
mov
cmp
imul
and
iret
pop
mov
jbe
dec
fnstsw
cwtl
xchg
je
lea
cmp
dec
jp
add
mov
mov
pushf
cli
in
jo
mov
pop
and
jae
js
and
shlb
ficomps
enter
ret
jbe
push
cmp
fsubr
in
dec
pusha
in
mov
xor
mov
cmpl
and
sub
sarb
xor
nop
daa
xchg
test
ret
add
sub
mov
xor
out
dec
pop
xchg
add
or
cwtl
cmc
fstpt
out
jp
fwait
hlt
xchg
xor
xchg
leave
fs
mov
gs
or
adc
pmaddwd
test
or
pop
filds
pop
outsl
mov
pop
loop
dec
pushf
in
rolb
cmp
cmp
sbb
jbe
lret
mov
jl
sbb
or
jmp
push
mov
mov
mov
push
pushf
xor
mov
mov
fcomps
outsb
in
adc
cwtl
daa
mov
adc
lcall
dec
and
inc
jns
xchg
test
or
cmpsb
xchg
pop
add
lret
push
stos
fsubr
test
lret
mov
jo
sub
add
sub
adc
cmpsl
adc
pushf
adc
jl
jp
xor
iret
jecxz
aaa
inc
les
mov
andb
dec
aaa
repnz
imul
xor
aam
adc
adc
dec
in
lds
std
xor
xchg
cwtl
out
ljmp
out
psrlq
xlat
pop
xchg
and
mov
mov
in
xchg
stc
dec
hlt
or
por
pop
pop
push
xlat
loope
xor
and
and
push
fistpl
aaa
es
daa
push
pop
push
xor
movsl
mov
ret
cmp
sahf
fldl
into
divl
dec
sub
imul
and
cld
shr
push
jo
aaa
aam
in
mov
jnp
mov
jmp
mov
repnz
jecxz
push
cltd
jmp
mull
scas
loop
jae
push
jle
jmp
clc
hlt
push
inc
int3
ds
cmp
push
cmp
jbe
stos
pop
addb
cli
int
mov
ss
jo
mov
xchg
push
mov
lret
les
in
fisubs
push
mov
xchg
daa
dec
addr16
lea
outsl
pop
pop
inc
and
int
dec
cmpl
dec
lret
mov
dec
jne
adc
pop
jmp
push
out
shlb
pop
clc
jne
mov
add
dec
pusha
xchg
xor
xor
lret
loopne
stc
cltd
xor
add
jne
pop
ja
inc
cs
inc
les
mov
cmp
repz
popa
insb
fidivs
ss
loope
out
ss
sub
data16
or
faddl
xchg
or
mov
ret
mov
ja
ja
sub
sbb
ljmp
popf
jg
mov
lods
in
and
mov
lods
pop
mov
pop
xchg
aaa
pop
dec
and
dec
mov
mov
int3
or
mov
push
jae
sti
sbb
adc
jp
sarb
jg
mov
and
xor
and
and
xchg
clc
aas
mov
rolb
loope
sahf
push
and
bound
mov
aaa
sti
push
pop
jo
in
fstps
and
lods
and
push
aas
aas
ljmp
stos
mov
xor
push
inc
mov
add
shl
inc
sbb
stos
mov
pop
jge
lock
mov
jg
bnd
dec
aad
stos
cmp
xlat
lret
subl
sbb
je
or
test
cltd
cs
aaa
das
popa
shrb
negb
lea
not
cmp
ss
xchg
in
jne
sbb
shlb
lret
sti
out
and
add
hlt
mov
ja
dec
mov
or
insb
pop
jge
sbbl
das
inc
mov
out
lahf
xchg
call
popa
in
xchg
jp
in
jl
stos
das
fstpl
fidivl
xchg
shl
mov
subl
add
sar
imul
pushl
insl
push
lret
cli
push
aaa
xor
pusha
add
popa
test
sub
sti
imul
test
outsb
popf
jmp
in
or
and
adc
flds
xchg
mov
int3
out
jb
fs
cmc
cltd
xchg
pop
loop
cmpsl
sub
outsl
cld
ret
push
adc
dec
aas
test
imul
xchg
int
sub
jnp
ss
rcll
inc
in
sub
and
icebp
sbb
in
es
adc
dec
mov
xor
stc
es
and
push
xor
ss
mov
add
movsl
in
verw
push
mov
cli
stos
ret
mov
jecxz
push
cmpsl
dec
test
and
dec
scas
dec
ja
shrb
fsts
pop
jmp
jmp
fbstp
cmpsb
mov
mov
dec
pop
xchg
stos
push
hlt
insb
popa
cmp
cmpsl
mov
xor
mov
nop
pusha
push
mov
pop
out
dec
push
imul
sahf
and
add
std
cli
or
cltd
push
push
or
cli
jle
arpl
jl,pt
pop
lods
push
fisubrs
push
xchg
xchg
loopne
xor
or
hlt
cli
jns
cs
inc
mov
fwait
repnz
jl
inc
test
mov
lds
sbb
test
pop
add
ficompl
out
int
mov
push
ja
and
xchg
hlt
mov
push
sbb
stc
inc
lcall
xchg
enter
cwtl
adc
subb
xchg
adc
ja
cmp
adc
scas
jecxz
push
loopne
or
xchg
mov
loop
mov
aad
cwtl
int3
es
push
test
test
out
jo
jno
xchg
and
adc
jle
push
aad
push
mov
pushf
cs
adc
sbb
jb
fldl
movsl
xchg
out
je
fisttps
sub
mov
ficompl
add
pushl
inc
sub
out
stos
xchg
test
xchg
adc
xchg
adc
sarb
ret
inc
cli
insl
pop
mov
pop
stc
stos
pop
sub
push
aad
pusha
or
push
fistps
es
jmp
outsb
sbb
in
scas
jnp
mov
inc
dec
dec
mov
and
dec
fs
cmp
xchg
fistl
cmp
mov
xor
pop
push
mov
xor
mov
aad
fadds
roll
mov
mov
into
sbb
cmpsl
bnd
leave
lea
mov
or
test
gs
in
and
xchg
inc
cmp
lret
xor
mov
mov
adcl
or
pop
stos
xor
sub
sub
stos
push
adc
cmpsl
adc
and
mov
adc
in
rcll
add
cld
push
jo
jbe
je
test
add
les
fistps
rcl
xchg
push
sbb
in
jb
shl
inc
and
lds
std
mov
adc
jb
jge
ljmp
or
loope
lea
or
je
jle
out
clc
mov
inc
cmp
sahf
mov
mov
mov
mov
ljmp
mov
pop
xor
jne
sarl
jne
sahf
inc
pop
cmp
xor
incb
nop
sbb
lret
call
sub
fsubrs
inc
add
test
in
std
arpl
sbb
out
int3
push
mov
insl
sub
scas
ror
stos
and
lahf
imul
and
xchg
movsb
scas
ljmp
icebp
shr
test
pop
jmp
out
mov
stos
mov
pop
pop
andb
cmc
jl
cmp
mov
mov
ret
pusha
mov
and
aad
and
mov
jecxz
lock
push
mov
cwtl
fdiv
testb
lds
sub
mov
loope
xor
out
sub
cltd
int
mov
cmpsb
clc
mov
mov
jae
loopne
fdiv
or
mov
pop
adc
int3
insl
or
jb
mov
xchg
fnstsw
inc
insl
jno
mov
xor
ficompl
jo
out
xor
push
cmp
mov
mov
test
popf
lods
adc
ret
test
scas
push
aad
adc
negl
xor
shlb
cmp
fsubrs
sti
ds
and
repnz
adc
lds
lds
sbb
insb
xchg
lods
adc
xchg
lret
pop
add
or
enter
insl
sub
test
sbb
in
pushl
add
mov
pushf
cmp
movsl
sbb
repnz
xchg
and
sarb
mov
roll
sbb
mov
push
cmpl
aam
insb
xchg
mov
call
out
or
jl
push
bound
or
andl
dec
divl
or
insl
scas
xchg
insb
test
mov
inc
pusha
nop
mov
cmc
xchg
dec
jo
les
out
mov
fidivl
stos
imul
nop
pop
rcrl
push
in
pop
dec
push
imulb
repz
jecxz
jb
or
mov
mov
inc
stc
dec
sub
test
and
cwtl
insb
cmp
and
dec
out
mov
push
jae
sbb
push
inc
dec
and
test
notb
aas
popa
or
mov
add
or
inc
and
inc
push
shlb
sbb
lods
or
mov
cmpsb
icebp
dec
xchg
stos
xchg
or
leave
xchg
fdivrs
rcrl
fisubl
jle
adc
inc
popa
push
and
mov
clc
inc
inc
mov
ds
mov
jmp
dec
fucomi
aaa
sbb
push
add
sub
ret
dec
pop
xchg
fiadds
out
mov
jnp
lods
jl
pop
xor
mov
mov
notl
mov
movsb
dec
mov
rorb
cmpsl
insl
adc
mov
test
ficoms
pusha
js
outsl
data16
dec
inc
sarb
push
mov
or
mov
insl
ja
jp
sbb
inc
out
jae
dec
sbb
cld
sbb
test
hlt
mov
lret
mov
push
pop
in
cld
xor
out
xlat
sbb
push
addr16
insl
pop
dec
or
movsl
mov
jle
movsl
xchg
mov
int
cmp
call
jno
dec
fnsetpm(287
push
ja
xchg
cmp
pushf
jnp
aam
xlat
pop
aad
jp
das
scas
into
mov
mov
ljmp
mov
mov
inc
in
pop
movsl
mov
mov
push
mov
rcr
or
mov
jecxz
pop
sub
or
addb
mov
daa
inc
rcrl
or
pushf
inc
mov
ljmp
popf
mov
lea
loopne
rcll
add
popf
rcll
push
mov
sbb
mov
movb
xchg
pop
fwait
sti
dec
and
aad
scas
pop
stos
rcll
xchg
es
out
cmpsb
jle
jns
shrb
xlat
jge
pop
rclb
xor
add
lret
inc
call
sbb
pop
in
pop
or
push
loope
leave
mov
inc
int
lret
aad
mov
mov
out
inc
shrl
pop
mov
jecxz
fmull
jp
xor
add
add
scas
ret
ret
pop
jns
aas
int3
decl
jle
jno
pop
loop
sub
mov
dec
sahf
pop
rcl
push
pop
outsb
mov
jo
add
inc
out
outsl
cmp
outsb
inc
push
test
inc
and
loopne
mov
shrb
push
in
pop
dec
in
test
mov
or
mov
ja
and
jl
add
jae
aaa
gs
inc
dec
aam
jl
scas
andl
shl
cld
push
repnz
out
add
stc
push
negb
sub
adc
mov
xor
int3
pop
fildll
shlb
mov
dec
movsl
sub
sbb
dec
mov
inc
cmp
data16
sarl
cltd
popa
pushf
lret
inc
push
inc
pop
sarb
test
xchg
mov
scas
add
jle
xor
pop
aaa
xlat
repz
stos
test
pop
std
inc
lahf
mov
lahf
insl
pop
pop
sti
mov
lods
lea
movb
movsl
sub
cmp
lods
outsl
filds
pop
sbb
aad
fisubl
jne
lods
xchg
mov
mov
lds
dec
mov
dec
jge
pop
add
stos
or
adc
movb
imul
enter
bound
imul
mov
push
mov
loop
ficomps
mov
int3
dec
and
add
in
cltd
fwait
rcll
mov
and
jp
pop
cmp
mov
dec
xor
mov
rorb
xchg
in
and
xchg
int
pop
jnp
push
xchg
jl
mov
xchg
sbb
lret
dec
add
xchg
dec
mov
mov
xlat
adc
sub
xor
rolb
mull
sbb
xor
push
mov
aad
ss
lcall
pop
je
dec
not
fs
sbb
or
jle
dec
xchg
imul
xor
roll
mov
mov
pushf
aas
xchg
fmul
cmpsb
nop
daa
dec
jp
pop
dec
mov
inc
and
insb
or
jbe
lahf
push
cltd
jg
mov
out
popl
lock
mov
sbb
mov
and
cwtl
in
sub
jb
test
shll
movl
icebp
or
mov
xchg
pop
daa
lea
add
jno
dec
out
test
lods
jl
sbb
sub
xchg
bnd
cmp
pushf
enter
inc
loop
xchg
inc
nop
sub
xchg
clc
adc
rdmsr
filds
pop
dec
dec
or
and
add
mov
fcompl
inc
xlat
fwait
jbe
mov
inc
and
aad
sti
push
push
je
push
mov
imul
push
std
push
mov
jnp
sbb
ljmp
and
cmp
gs
or
stos
inc
add
mov
out
inc
dec
loop
test
cmpsl
ja
xchg
mov
jbe
aas
adc
mov
insb
inc
jl
test
in
repnz
daa
push
push
in
sbb
pop
ds
test
mov
insl
sarl
out
cmp
std
jns
mov
and
ds
pop
aas
divl
add
pop
aam
dec
dec
pop
adc
int3
fs
or
or
sub
and
test
push
arpl
jb
movsb
pop
and
insb
movsl
dec
ljmp
dec
adc
inc
fadds
test
frstor
xor
frstor
ljmp
das
jns
xchg
ja
sbb
das
push
push
pop
inc
in
inc
icebp
adc
mov
fimuls
nop
cmp
ja
insl
inc
push
adc
pop
cmpsb
dec
add
jo
xlat
pop
xor
mov
stc
stos
lods
ss
jge
in
mov
inc
push
mov
or
pushf
mov
mov
ljmp
mov
cld
push
scas
pop
sbb
pop
mov
adcl
aad
xor
iret
ds
xchg
push
sub
sub
mov
sub
lret
cmp
xor
jb
inc
cmp
ror
test
add
jge
loope
ret
add
fst
aam
or
mov
ja
mov
mov
cmpsl
out
jecxz
testb
repz
xor
or
lods
movsb
inc
adc
or
pushf
or
jmp
arpl
mov
lret
iret
mov
mov
ljmp
push
xor
cld
adc
xor
addr16
test
xchg
xor
lahf
repz
or
aad
add
add
out
test
dec
add
dec
xor
lock
cmc
push
scas
lods
lods
ret
mov
outsl
je
insl
push
out
pop
lods
xchg
ja
xor
dec
or
ljmp
xchg
adc
movsl
pop
pop
jo
push
xor
mov
push
lea
lret
cs
jge
shll
inc
cwtl
mov
mov
jb
out
pop
cmp
pop
lods
in
sbb
lock
cmp
out
lds
mov
stos
dec
jo
cmp
hlt
in
add
aaa
sub
xchg
in
outsb
call
jecxz
jno
fdivl
ret
loop
popa
xor
data16
call
aam
and
pop
pushl
mov
pop
mov
add
cltd
int
movsl
push
imul
dec
mov
rcll
jne
inc
fwait
dec
dec
adc
jns
mov
dec
outsb
add
repnz
mov
icebp
mov
xor
and
xchg
xor
lods
push
movsl
mov
pop
jo
in
rclb
sti
jmp
lds
lods
mov
jno
xor
inc
push
cmc
jmp
stc
das
fiaddl
aaa
les
cmp
in
les
jle
scas
push
inc
in
xchg
cwtl
dec
push
cld
int
cli
idivb
cli
jnp
cmp
test
test
mov
and
inc
std
cmpsb
push
imul
fstl
jmp
std
sbb
sbb
sbb
xchg
or
out
jns
add
lds
ljmp
dec
mov
rorb
cld
ljmp
or
dec
std
push
sub
out
inc
shlb
jnp
subl
cs
mov
sarb
mov
scas
adc
jae
ss
pop
fistpll
mov
sbb
pusha
add
mov
push
test
jl
or
mov
movsl
orb
mov
aaa
fcompl
pusha
cs
dec
dec
jo
xchg
mov
jmp
scas
inc
xlat
jl
push
insl
fists
mov
inc
push
xlat
adc
xor
push
lahf
push
mov
pop
imul
xlat
mov
pop
in
aad
adc
and
cmp
mov
xchg
mov
mov
cli
mov
inc
dec
orb
hlt
das
pop
inc
fldl
shl
int3
push
inc
jae
jmp
xchg
sbb
outsb
jbe
addl
adc
add
pop
xor
insb
das
add
jb,pn
add
xchg
cld
mov
stos
das
in
lret
ljmp
shl
sub
jnp
outsb
mov
sub
jne
ret
aam
inc
xlat
jle
rcl
dec
cli
mov
fisubrs
sbb
or
push
out
adc
cltd
adc
inc
cwtl
xchg
shl
popa
call
jge
mov
icebp
call
mov
and
xchg
test
test
mulb
fdivl
dec
push
lds
dec
sub
or
sub
jns
stos
fisubs
adc
out
xchg
inc
jo
divb
mov
test
add
push
into
jae
fmul
in
into
negb
mov
xor
and
xor
push
and
mov
mov
mov
inc
mov
lods
jno
jp
test
mov
sub
mov
aas
cmp
orb
out
movb
ret
out
xchg
xor
mov
sbb
loopne
ja
xor
cmc
cld
dec
mov
jns
lret
xor
in
ss
daa
orb
or
xchg
das
mov
jg
push
aas
pop
cwtl
add
inc
ja
xchg
in
cmp
cmp
sub
roll
lods
xlat
stc
mov
loope
pop
or
add
inc
imul
movsl
inc
inc
lock
and
int
lds
mov
cmp
imul
sar
push
sub
mov
jbe
push
idivl
rcl
push
xchg
push
and
out
rol
adc
scas
icebp
aad
push
call
push
hlt
out
incl
stos
sbb
flds
repz
std
mov
xor
cmp
xor
jge
jp
out
in
push
sub
or
lret
inc
add
jns
cmp
sub
pushf
out
test
idivl
or
push
adc
jp
inc
mov
add
push
cmp
es
inc
outsl
fsub
dec
mov
mov
sub
mov
cmp
sub
mov
and
ret
pop
pop
mov
mov
lahf
sub
mov
pop
aas
mov
fcoms
adc
mov
xchg
imul
jp
or
cld
jnp
xlat
jmp
mov
ljmp
add
push
xchg
adc
xor
in
and
xchg
inc
or
xchg
into
call
cs
jns
pushf
mov
mov
imul
insl
xor
or
fdivrs
out
mov
sbbb
outsl
stos
sbb
repnz
adc
inc
xchg
mov
mov
ror
cld
je
fwait
cltd
das
dec
xchg
cmpsb
sbb
stc
loop
stos
or
dec
nop
xor
push
pop
fmuls
push
in
out
jge
movsb
pcmpeqd
test
les
adc
mov
ror
popf
adc
mov
aam
add
mov
int3
pop
aam
fldenv
xor
xor
pop
out
dec
xchg
jns
sbb
xlat
xor
add
jge
aas
pushf
popf
sbb
mov
dec
rclb
cmp
xlat
xchg
dec
lret
out
mov
jle
int
mov
cmpsb
jo
cmc
push
scas
cmp
scas
xor
jecxz
add
push
imulb
and
xchg
pop
pop
mov
insl
xchg
mov
adc
out
inc
and
stos
cs
filds
psrad
add
dec
pop
and
push
inc
add
cmp
test
scas
hlt
sbb
cmpsl
mov
jo
add
scas
push
fistpll
cli
movsl
rcrb
shlb
arpl
sub
mull
and
push
out
sub
notl
pusha
ja
mov
lock
daa
dec
inc
pushf
pop
fincstp
jne
dec
push
pop
add
dec
cwtl
jp
or
xchg
or
or
cmpsl
loop
popa
pop
loop
add
dec
mov
jl
adc
sti
nop
sarl
xor
mov
or
fcomi
cltd
rcll
mov
cmp
fsubrs
jmp
dec
add
scas
fsts
mov
sbb
adc
lock
shl
scas
sub
dec
addr16
fwait
imul
push
mov
mov
jae
aam
fistps
add
out
sti
das
cmp
outsb
scas
push
scas
imul
pop
mov
push
xchg
jae
lahf
cltd
je
and
push
aaa
iret
cmc
mov
push
test
ret
lahf
push
popa
pop
xchg
insb
cmp
or
imul
adc
in
adc
mov
pop
mov
mov
or
jl
mov
int3
arpl
mov
clc
jns
push
out
add
push
mov
mov
mov
push
loop
xchg
jno
lods
add
and
mov
rcrb
fisubl
cmp
mov
test
xchg
shlb
popf
out
shlb
call
test
and
push
pop
add
push
ds
test
sahf
pop
mov
push
enter
or
out
fwait
clc
push
mov
in
into
pop
inc
jbe
scas
inc
mov
jle
or
push
cwtl
sbb
inc
data16
jbe
nop
addr16
mov
call
cmp
sbb
mov
mov
out
fdivrp
push
xor
jecxz
and
lret
cld
pop
scas
xchg
int3
inc
lods
mov
fldcw
adc
push
cmpsl
neg
ljmp
dec
insb
int
hlt
fs
idivl
push
sub
out
repnz
xor
xadd
sbb
fimull
movsb
int3
filds
cmp
repz
adc
add
xchg
cmp
popa
push
enter
adc
out
or
sti
ret
jle
or
in
adc
nop
into
ja
add
mov
ret
loope
imul
push
inc
xor
dec
xor
and
inc
andl
mov
push
test
push
std
mov
insl
push
mov
ljmp
push
loopne
fsubrl
add
movsl
insl
adc
mov
inc
outsb
sbb
add
std
ret
push
inc
sbbb
cmp
inc
in
js
fimull
xor
sahf
dec
pop
and
test
test
test
rorl
cltd
test
pop
imul
or
cld
sbb
push
loop
cmp
lock
sub
jge
or
mov
mov
jl
lret
lods
dec
arpl
jns
arpl
fimuls
pop
mov
sbb
push
mov
in
cwtl
jns
dec
dec
lods
inc
and
xor
fistps
sbb
scas
adc
in
cli
pop
and
xchg
pop
fisttpl
lahf
push
add
rcrl
fisubs
loop
scas
imul
cmpsl
pop
push
dec
and
cmp
imul
sbb
jle
add
or
lret
xchg
fdivrl
inc
test
xchg
pop
adc
lahf
and
mov
movl
sub
mov
jo
sub
ljmp
cwtl
enter
es
pop
push
push
push
dec
mov
loop
psrlq
int3
dec
jnp
scas
push
adc
jle,pt
mov
inc
lods
mov
mov
rclb
je
sub
mov
pop
insb
push
jle
out
push
pop
pop
in
addr16
stos
mov
bound
sbb
dec
sub
mov
cmp
sub
add
shlb
nop
inc
xchg
push
pop
int
stc
and
mov
cs
cmp
jl
or
icebp
repz
mov
jnp
cld
mov
xchg
rcl
sarl
sub
stos
in
dec
cs
daa
repnz
rcrb
aam
bound
jno
mov
repnz
shll
mov
lods
xchg
pop
add
sub
fadds
mov
out
dec
in
mov
mov
jns
nop
jb
push
pop
pop
cmpsl
pop
mov
add
inc
mov
mov
cld
sbb
cld
mov
fisubs
cltd
push
mov
rcll
mov
leave
loope
add
testl
jge
xor
fldt
add
push
or
cmpl
je
jmp
inc
adc
les
mov
inc
xchg
sahf
mov
add
sti
cld
out
xchg
outsl
sti
call
dec
xor
lahf
jg
hlt
out
js
sub
xor
cmpl
ficomps
fdivp
fdivr
ret
cmp
loope
cltd
sbb
and
ja
es
inc
stos
xchg
out
jp
and
adc
scas
jb
ret
dec
repz
cmp
xchg
movsl
inc
push
inc
dec
jge
lea
xlat
sub
xchg
int
adc
jb
scas
divl
popf
mov
jns
mov
pop
and
icebp
push
inc
pop
dec
aam
adc
in
push
testb
fdivp
dec
cmp
xor
pop
adc
fwait
xchg
insb
mov
in
push
sbb
data16
out
mov
or
out
or
pop
imul
clc
mov
rolb
adc
arpl
cltd
inc
lock
push
jp
pop
mov
icebp
enter
xlat
sbb
xor
jg
mov
fdivrs
insb
jmp
dec
inc
clc
pop
adc
cmp
lds
xor
stos
popa
and
xchg
mov
stos
shl
mov
xor
test
addr16
ret
cmp
dec
cmpsb
je
add
and
hlt
inc
cld
push
sarb
push
fs
pop
xor
mov
lret
jle
loop
mov
sub
push
cmp
cli
fcomp
mov
mov
stos
jo
pushf
and
lea
xor
push
sti
adc
inc
loope
adc
scas
sbb
pop
push
mov
jp
jbe
stos
xchg
scas
mov
mov
test
inc
popa
aad
xor
sub
mov
ficompl
xchg
sbb
lret
test
ds
push
adc
dec
inc
sub
aam
mov
fisubrs
adc
jl
call
xchg
mov
sbbl
mov
sub
sbbb
lcall
subb
ficomps
xchg
sub
test
pop
adc
scas
lcall
bound
popf
xchg
mov
enter
adc
mov
add
loop
cwtl
movsl
dec
xor
dec
mov
inc
add
sti
cld
mov
add
jmp
pop
lods
xorl
mov
adc
les
or
mov
les
dec
adc
jg
push
cli
iret
pop
xchg
mov
xchg
sahf
xor
aam
cmp
xor
fiadds
xorl
movsb
or
inc
hlt
push
pop
rorl
push
rcrl
sbb
xchg
popa
lods
mov
xchg
cmpsb
jbe
es
add
mov
xchg
das
imul
test
xchg
mov
js
sbb
into
sub
jae
mov
aam
jge
sub
or
and
jae
into
test
ret
xor
mov
lahf
out
add
mov
imul
push
adc
std
mov
dec
pop
int
add
cmpsl
sbb
mov
shrl
aaa
mov
orl
in
inc
pusha
js
dec
and
push
fsubrs
xchg
inc
in
dec
ret
jmp
scas
push
fistpll
cs
out
iret
pop
test
pop
xor
mov
sbb
mov
mov
fs
xor
jns
cmp
imul
sub
mov
aam
outsl
dec
sub
lods
cs
lahf
mov
clc
cltd
xor
inc
sbb
std
add
daa
hlt
movsb
popf
lods
adc
jbe
cmp
jne
imul
mov
adc
sbb
vxorps
adc
movsb
mov
test
mov
stc
cmpsl
test
add
imul
pop
sbb
pushf
sub
xor
mov
outsb
fwait
add
adc
jge
mov
aas
pop
jg
mov
mov
adc
adc
fwait
pop
lods
lcall
add
cmp
gs
jge
mov
hlt
add
jecxz
je
pop
push
push
and
frstor
cld
jl
jl
aas
fsubs
shll
shrl
xchg
dec
push
sbb
xor
mov
and
or
test
sbb
sub
dec
repnz
push
jg
in
cmp
pop
pushf
ror
xchg
mov
add
je
jae
call
push
andb
loopne
mov
adc
cmpb
inc
inc
arpl
mov
xor
push
xchg
cmpsl
ja
or
loop
scas
bound
in
mov
jle
je
mov
mov
pop
loop
and
shr
popf
sub
jnp
in
jnp
bt
negl
leave
push
loop
cld
push
inc
movsl
repnz
movsl
and
mov
mov
dec
stc
xchg
aam
fdivrp
jbe
faddl
addr16
mov
push
sbb
mov
imul
sbb
cmpsb
int
or
imul
jbe
xchg
ljmp
jl
push
or
and
jno
mov
cmc
mov
jns
pop
cmp
adc
and
add
push
stos
les
mov
xchg
cmp
sub
shlb
push
mov
xchg
xlat
xchg
sub
enter
jle
addr16
xor
dec
cmc
add
test
rclb
out
pop
mov
cmpb
fstl
sbb
insb
mov
mov
pop
into
push
es
leave
popa
js
test
lret
lods
out
out
outsb
sbb
lahf
jle
jo
int
cmc
fwait
int3
icebp
sub
add
pop
inc
js
fst
push
adc
sub
data16
mov
push
or
mov
pop
mov
sbb
lods
xor
jne
fs
fisubl
mov
repnz
push
lods
sub
adc
pop
lods
mov
sbb
jno
sbb
push
lods
lahf
popa
insl
mov
test
add
fldenv
sub
or
out
sub
cmp
pop
lods
lods
mov
nop
nop
cmc
cmp
xchg
das
xchg
dec
int
jle
je
push
or
and
cmp
jl
push
icebp
cli
test
iret
aas
outsb
xchg
sub
cmp
and
aas
enter
divb
sub
pop
in
xchg
pop
sbb
push
or
cmp
shlb
lahf
cmpl
mov
and
mov
jp
and
addr16
push
inc
std
inc
mov
add
xchg
test
jp
mov
test
or
lock
xchg
inc
push
test
stc
xor
cwtl
imul
and
iret
push
fs
nop
or
packssdw
sbb
or
mov
push
and
cmp
or
mov
faddl
xchg
movsb
jp
aas
mov
aaa
in
rorl
out
dec
adc
lret
cmove
daa
ds
or
mov
cld
pop
mov
cmpsl
push
push
jnp
fsub
mov
in
loop
jge
mov
xchg
stos
sbb
dec
stos
add
rol
add
les
or
js
push
addr16
jl
and
adc
cld
orb
or
xor
mov
mov
jg
nop
sbb
jns
jmp
frstor
add
pop
pop
mov
data16
js
outsl
scas
dec
ror
shrb
push
cmp
xor
pop
outsl
shr
xchg
jae
mov
mov
imul
xor
sti
or
insl
aaa
sbb
xchg
xor
push
dec
cmpsl
mov
cmp
jle
ljmp
aas
jecxz
inc
pop
xor
lods
enter
add
ds
leave
scas
xchg
movsb
and
mov
and
test
xchg
movsl
and
add
pop
orb
jg
mov
or
sub
jbe
imul
pushf
mov
or
jmp
gs
or
xchg
pop
dec
and
pop
lret
mov
xor
or
movsb
push
inc
sbb
pop
mov
xor
or
cwtl
out
and
subl
rorl
lret
dec
lock
mov
in
notl
push
scas
dec
add
fwait
movsl
pushf
add
sub
icebp
out
sbb
fmul
shr
lods
fmuls
sbb
repnz
ss
mov
lret
dec
mov
dec
cs
push
cs
addr16
xor
pusha
pop
and
in
mov
mov
int
mov
mov
and
clc
jmp
test
out
pop
addr16
cmp
inc
push
sbb
leave
sbb
jl
test
mov
ja
mov
push
ficoms
out
and
mov
neg
mov
je
movsl
imul
daa
int
mov
imul
jle
xor
roll
push
xlat
and
xchg
addr16
bound
and
pusha
stc
xchg
or
push
add
jne
sbb
out
scas
or
mov
adc
or
sbb
push
pop
xchg
es
lock
mov
jb
jo
add
cltd
mov
cmc
mov
jl
pop
pop
out
shlb
orl
xor
je
xorl
add
mov
mov
push
push
or
dec
shll
jno
jne
dec
mov
xchg
pushf
pop
cmp
pop
jo
pop
pop
pushf
jecxz
into
rclb
in
es
hlt
fcomps
mov
xor
adc
or
pop
push
xchg
clc
jge
jo
lret
xchg
shr
ss
stos
xchg
mov
filds
lret
insl
push
mov
rorl
xchg
adc
iret
mov
jg
daa
out
ret
jnp
xchg
pop
jmp
pop
js
xor
pop
pop
adc
lds
push
das
arpl
clc
insb
stos
loopne
or
sbb
dec
mov
test
aam
jb
and
sbb
lret
adc
xchg
push
popf
popa
int3
jl
insb
xor
dec
ret
cmc
cmpsl
arpl
lds
sub
lret
shlb
outsl
xchg
sub
mov
xor
adc
cltd
shrl
inc
clc
push
pop
mov
cmp
js
sti
fwait
adc
push
loop
iret
or
cmpsl
mov
ds
jl
call
mov
cmp
lcall
pop
div
int
add
dec
das
pop
mov
or
repz
shlb
bound
retw
dec
mov
fidivl
and
ja
stc
cmp
adc
mov
xchg
loopne
mov
mov
cmpsb
adc
iret
ja
sub
movsb
push
jae
or
jo
testl
lods
inc
mov
jno
and
dec
xor
or
mov
cmc
or
pop
cmpsl
sar
sti
adcl
xlat
push
cli
xchg
insb
mov
add
sub
icebp
je
mov
jbe
lret
aas
testl
and
jecxz
xor
loopne
xor
sub
add
sub
add
inc
shr
push
lods
imull
lock
mov
mov
mov
mov
aad
outsl
fmull
push
mov
or
mov
jnp
or
or
push
sar
dec
sbb
clc
push
sbb
xor
lods
jecxz
inc
stc
add
bound
out
nop
sbb
dec
inc
inc
ret
fmuls
cli
mov
loopne
mov
loopne
sub
xorb
insb
fwait
sahf
jbe
icebp
in
or
and
push
stos
nop
cltd
imul
push
out
sar
pop
test
imull
aas
push
fadd
and
pop
add
test
and
nop
out
fidivrl
lea
jle
cmp
nop
mov
inc
out
or
mov
adc
mov
cmp
rorb
inc
fnstcw
push
popa
data16
das
mov
mov
jle
stos
xlat
sbbl
cltd
push
xor
nop
cmp
add
notl
dec
xchg
and
aas
add
subl
inc
mov
xchg
and
add
sbb
xor
les
or
xlat
push
mov
xor
rorb
cwtl
adc
cmp
push
push
test
mov
xchg
loopne
inc
push
les
test
mov
mov
in
ficoml
jecxz
stos
icebp
stc
sub
adc
sbb
stos
mov
push
sub
mov
dec
mov
sub
idivb
leave
add
pop
mov
mov
into
mov
xchg
dec
call
mov
adc
xchg
dec
add
add
lods
jnp
out
cld
xchg
xor
mov
hlt
or
inc
movsl
std
mov
xchg
shll
mov
jno
shl
cli
mov
cmc
mov
pop
imull
xor
shrl
cmpsb
mov
or
call
loopne
enter
popf
mov
das
sbb
mov
movsl
jno
roll
mov
pop
cmp
mov
loopne
mov
bound
inc
xlat
pop
xor
pop
rcrb
stc
dec
mov
in
cmpsb
cmc
cmpsb
push
popa
stc
xor
ret
ds
jp
call
mov
mov
mov
popa
xor
rcrl
dec
sbb
ljmp
push
xchg
ret
sbb
mov
aad
cltd
insl
insl
data16
mov
jne
add
or
jnp
jle
lret
lcall
push
push
repz
sub
xchg
daa
push
or
pop
mov
dec
dec
repnz
fcoml
repz
scas
jns
pop
sub
js
shlb
lret
inc
cmpsl
push
test
ja
cmp
push
cli
mov
mov
data16
jno
rcll
dec
fwait
int3
cmp
or
comiss
xchg
and
into
jne
ljmp
repnz
and
out
sbb
adc
and
jbe
pop
in
inc
mov
lea
movsl
pop
sub
mov
mov
lret
jmp
insb
or
sub
sub
dec
fildll
mov
cmpsb
ljmp
push
sbb
lock
out
repz
insb
adc
fnsave
cmp
shrl
cmpl
sub
stos
sbb
je
jecxz
push
or
lods
sarb
jp
inc
iret
adc
scas
xchg
push
pop
mov
pop
adc
sub
jl
mov
add
inc
shrb
jle
mov
rcr
jb
mov
fdiv
xchg
sbb
mov
stos
push
xor
push
adc
sbb
sti
stc
sbb
loope
mov
jns
jmp
fsubl
movsb
lods
les
dec
jae
nop
leave
movsb
jg
dec
clc
mov
cmc
fisttpl
jno
nop
daa
dec
mov
aaa
push
clc
mov
lock
xor
rorb
lods
cmp
lods
sbb
jns
jmp
pop
fs
push
movsl
add
sub
mov
cmp
in
cwtl
mov
push
es
mov
ds
inc
mov
lea
shll
out
dec
push
sbb
jnp
xorb
out
cmpsb
fs
shl
mov
adc
sub
inc
cmpb
sbbl
push
scas
cmp
movsl
cmp
pop
adc
cli
mov
test
mov
jne
sbb
pop
jle
dec
pop
xor
mov
stos
sahf
xchg
xchg
jnp
shrb
jae
cmpsl
jne
sbb
loopne
xor
mov
mov
movl
dec
int3
rcrl
in
cmp
lods
iret
mov
idivb
test
sbb
jp
xchg
xchg
inc
aam
ficompl
rorl
jae
and
je
and
aaa
shlb
aas
imul
push
sahf
clc
ljmp
xor
inc
push
out
cmpsb
xchg
sbb
fldl
inc
xchg
fwait
inc
leave
out
call
mov
cmp
mov
test
lock
lods
lods
das
inc
inc
xor
inc
lahf
xchg
push
shlb
pop
mov
sahf
dec
mov
sbb
jbe
outsl
push
inc
and
or
xchg
dec
xchg
xchg
popa
testl
movsb
xchg
jne
lcall
lahf
jae
bswap
ja
xor
dec
xlat
push
mov
stos
imul
test
pop
cmpsb
cmp
or
dec
loope
data16
cli
sarl
fisubs
inc
or
addr16
jmp
cwtl
push
jb
jnp
sbb
addr16
push
lds
inc
mov
shl
xchg
cmp
xchg
icebp
pop
sbb
dec
jns
push
mov
inc
and
push
pop
aaa
jae
mov
sti
mov
ret
or
stos
sbb
cmp
aaa
loope
clc
das
push
and
push
inc
add
jmp
in
sub
rcrb
stos
mov
mov
pop
mov
cmp
jecxz
int3
dec
sub
mov
mov
mov
xor
pop
outsb
or
mov
push
inc
int
dec
and
xchg
outsl
jnp
cmp
std
std
fnstcw
dec
imul
push
or
arpl
in
into
cmpsb
jno
inc
fisttpll
daa
popf
decb
lods
and
mov
sub
mov
mov
dec
subb
dec
pop
pop
shlb
mov
gs
mov
push
lods
imul
nop
lcall
cmpsb
sbb
push
push
sub
loop
aam
mov
movsb
sub
jle
cmpsb
enter
jns
in
sub
dec
shll
push
outsb
dec
and
pusha
dec
hlt
cmp
sbb
mov
test
mov
sub
fwait
decb
push
mov
sub
sti
loopne
notb
mov
insl
mov
mov
es
in
mov
sub
popa
loopne
out
fucompp
cmp
and
les
fmull
call
mov
popf
or
cmp
mov
mov
js
popa
and
pop
pop
jg
push
sub
dec
imul
adc
mov
pop
sub
push
mov
cmp
inc
adc
pop
imul
cli
shll
inc
pop
pop
dec
sbb
or
aad
or
inc
inc
jbe
lods
xor
lea
fdiv
xchg
cmc
xchg
in
addr16
push
jl
stc
pop
mov
jmp
popf
push
xchg
scas
lock
les
out
popf
xorb
sbb
cmp
into
js
rcrb
xchg
jo
sub
sub
mov
sub
mov
test
xchg
mov
test
and
adc
andl
jae
int
cmp
mov
add
orl
repnz
call
into
ja
aad
pop
cmc
xchg
int3
insl
insb
out
xor
inc
loope
lods
mov
dec
xchg
orl
xchg
mov
in
loopne
push
adc
pop
repz
inc
shrl
loope
and
jno
andl
pop
cs
jg
enter
arpl
and
sub
outsb
ljmp
pop
xchg
aad
adc
in
stos
inc
adc
int
add
xchg
shll
lods
insl
sub
lret
xchg
mov
mov
inc
pop
into
ret
add
sar
cmp
adc
movsl
cmpsb
cwtl
das
jb
mov
jns
mov
jecxz
cmp
mov
lret
push
test
add
daa
inc
negb
xchg
mov
ljmp
bound
call
lret
cld
nop
out
out
add
lret
inc
loope
cmp
sahf
sti
push
inc
xchg
or
pop
adcb
stos
jae
mov
ja
sbb
and
push
xor
or
add
sahf
cmc
dec
ficoms
imul
mov
enter
mov
xchg
repnz
or
jbe
or
in
or
push
push
xor
pop
cmpsb
and
cs
sbb
test
mov
fistps
dec
mov
mov
das
pop
xor
insl
mov
mov
pop
inc
push
pop
inc
flds
jne
xchg
fcmovnu
popa
sbb
sub
dec
jns
xor
jecxz
sbb
push
test
aad
mov
pop
or
pop
xor
adcb
inc
push
inc
ficompl
jg
fdiv
rolb
mov
bound
sahf
dec
aaa
pop
subl
scas
rclb
pop
push
lods
ja
pop
or
icebp
faddl
jo
sub
dec
and
les
mov
sbb
xor
pop
negl
pop
jge
mov
dec
mov
dec
dec
pop
mov
jge
fwait
jno
add
aaa
add
dec
test
out
mov
lds
nop
or
out
fmull
loop
out
pop
out
out
in
pop
cmpsb
ja
xchg
imul
in
adc
lret
pop
scas
loop
adc
fisubl
or
lcall
adc
fyl2xp1
push
movl
cwtl
xor
hlt
xchg
cmp
push
fcomip
popf
mov
cwtl
je
add
mov
pop
aad
jge
test
cmp
insl
int
addr16
bound
push
mov
inc
jnp
data16
jle
mov
fcoms
dec
ret
sbb
in
adc
jb
cwtl
mov
in
leave
mov
cs
xchg
aad
mov
cs
dec
test
mov
movsb
dec
popf
sbb
dec
pop
inc
stc
push
sbb
xchg
lea
add
jb
fnstcw
or
ss
push
cld
lods
fnstenv
add
cltd
mov
xlat
adc
push
sub
mov
pushf
insl
jl
fdivrl
rcl
lcall
or
sbb
bound
xor
push
jb
enter
fmull
std
and
imul
loopne
out
jbe
aam
repnz
dec
lds
lcall
xchg
shlb
sub
aad
and
stos
insl
loopne
jno
xlat
xor
inc
cmp
imul
mov
popa
insb
sbb
add
insb
sub
loopne
pop
stc
mov
push
push
adc
cmp
jmp
lcall
aaa
sub
std
and
imul
lods
xchg
push
add
push
inc
adcl
cltd
negb
adc
popa
test
imul
xor
push
adc
fistpl
lods
jb
xchg
lahf
cmpsl
mov
test
cld
hlt
movsl
dec
pop
aam
es
rcrl
repnz
add
es
xchg
das
xchg
aas
jl
je,pt
push
aam
decl
mov
pop
out
cmp
jno
pop
iret
pop
outsb
ficompl
mov
fadd
inc
mov
mov
aaa
addr16
and
sarb
shll
push
js
std
sarl
aas
sub
ret
scas
aas
xchg
ret
sub
lock
cmpsb
jo
mov
mov
mov
repz
sub
add
in
ret
jae
in
lcall
xchg
add
sub
stos
aas
mov
dec
xor
arpl
jno
lcall
mov
and
pop
pusha
xor
ds
jo
mov
add
shl
push
cmp
dec
js
push
mov
pop
jae
or
in
xchg
loope
adc
add
push
test
dec
push
adc
jle
add
out
out
ja
lods
roll
leave
cmp
push
loopne
push
cwtl
fstps
lea
in
sti
add
popf
inc
dec
jo
bound
sbb
mov
repz
lods
pop
arpl
adc
adc
push
push
lods
pop
adc
push
mov
hlt
hlt
adc
aad
iret
aas
addr16
mov
cld
jno
lret
insl
mov
xor
push
pop
repnz
sbb
sahf
sbb
jo
test
mov
roll
cmpsb
insb
les
mov
jmp
roll
aam
pushf
cs
pusha
lea
add
and
pop
cmpsl
or
hlt
adc
xchg
or
jnp
mov
gs
sti
jmp
jle
js
cmp
xor
rolb
decl
mov
sbb
scas
je
jbe
shll
test
xchg
in
jle
sbb
pop
rol
in
adc
leave
cmp
mov
les
in
cmp
sti
fwait
subl
stos
inc
dec
inc
lret
test
xchg
loop
lret
aam
sbb
xor
jo
call
stos
repz
inc
xchg
cmpsb
mov
cmp
push
and
lahf
sbb
inc
push
popf
fnstsw
push
hlt
inc
outsb
cmp
sub
imul
ja
cmc
xor
mov
std
stos
xor
stos
adc
xchg
mov
adc
adc
push
sub
mov
rorb
dec
jno
push
push
call
dec
and
push
sub
mov
push
jg
jne
mov
push
and
daa
lds
sbb
sbb
fdivs
shlb
sub
jo
fcomps
xor
cmp
mov
cmp
nop
imul
imul
pop
mov
dec
push
aam
adc
imul
nop
sbb
mov
mov
pop
fwait
and
adc
or
mov
inc
xchg
adc
and
out
jmp
jbe
add
punpckhdq
fisttpl
imul
insb
pop
cli
jl
xor
jbe
loop
jg
sahf
mov
ret
bound
cli
jg
xor
mov
test
cwtl
sub
out
pusha
sbb
test
pop
mov
mov
mov
add
dec
adc
aaa
lods
cmpsb
xchg
add
mov
adc
xor
xchg
mov
cmp
dec
mov
xchg
leave
sub
cmp
adc
mov
test
pop
inc
sti
mov
fsts
push
push
pushf
sub
into
xchg
and
jecxz
lock
mov
or
daa
int3
and
or
push
js
mov
dec
mov
iret
repz
decb
sub
or
mov
xchg
insb
xchg
test
xchg
ficoms
jecxz
adc
cli
inc
fisubs
loopne
add
stos
xlat
int
and
or
fwait
adc
push
in
fwait
pop
movsl
xchg
xor
je
in
mov
dec
mov
mov
pop
imul
dec
das
inc
js
out
jno
int
mov
sti
xchg
inc
lods
mov
rcl
add
in
jno
mov
and
movsb
mov
mov
xchg
call
stc
push
xor
ljmp
mov
mov
sub
jne
sbb
repz
sub
jg
shll
scas
loopne
test
jp
aad
xor
dec
cmc
out
jmp
sub
pop
or
add
jnp
lcall
push
inc
repnz
sahf
jle
fwait
icebp
loop
ljmp
lcall
je
jg
mov
or
es
inc
sbb
push
ds
cmpl
ja
inc
lods
and
xor
add
pop
ffree
pop
ds
jb
fnsave
pop
cmc
cs
inc
jns
mov
popf
mov
and
stc
adc
push
adc
push
cmp
movsb
es
sahf
daa
sub
fs
arpl
pop
mov
mov
or
xor
sahf
add
mov
test
inc
sub
add
mov
je
jl
into
jmp
nop
gs
mov
xchg
in
mov
scas
sub
adc
inc
popf
xchg
sti
dec
arpl
loope
ret
and
je
sub
xchg
adc
mov
mov
ret
add
pop
mov
pop
dec
out
loope
sub
and
out
and
push
mov
mov
fldt
sub
bound
test
xor
dec
lods
mov
pop
sbb
imul
ret
sub
inc
into
push
mov
mov
rcl
pop
testb
imul
clc
push
test
aaa
or
ss
add
mov
mov
shrl
pop
in
cwtl
pop
out
in
into
and
and
cmpsb
fwait
mov
mov
or
dec
mov
mov
add
ljmp
mov
adc
stc
roll
sbb
adc
lods
xchg
dec
adc
and
mov
jae
loop
pand
mov
dec
mov
mov
fs
in
jle
push
ja
and
call
jae
xchg
dec
scas
pop
inc
xor
fsubrp
leave
ja
mov
test
fdivrs
and
inc
js
stc
test
mov
inc
jbe
mov
xchg
or
loop
push
repnz
xchg
push
in
les
sub
imull
addb
mov
sub
lock
aas
sbb
arpl
mov
imul
jb
aaa
push
lret
out
pop
sub
cmp
lret
mov
lahf
xor
jmp
sti
or
insl
mov
adc
jg
je
sbb
int3
xchg
mov
push
sbb
push
xor
mov
jecxz
jne
or
sbb
jecxz
mov
xchg
sub
in
sahf
xor
and
lods
mov
lds
rcrb
pop
jno
mov
cmp
xchg
push
cmp
sub
add
outsl
xlat
ret
clc
enter
pusha
xchg
sahf
cltd
in
std
insl
outsb
sub
ljmp
pop
push
xchg
shll
out
push
xchg
lret
fwait
xlat
dec
imul
popl
test
pushf
sbb
fst
gs
into
das
cmpsb
dec
insb
xor
xor
or
jnp
sbb
inc
jb
push
shll
and
sub
jmp
cltd
sbb
vxorps
xchg
sbb
insb
xor
repnz
into
adc
sub
loop
sub
jne
movsl
sarl
push
sti
sti
out
adc
mov
insb
pop
into
fcomps
push
stos
pop
or
push
inc
cld
cli
adc
test
jmp
cmc
jbe
mov
nop
loop
cmp
and
arpl
adc
and
cmp
cs
ljmp
mov
push
pop
add
push
mov
movsb
mov
popf
aad
sbb
outsb
lds
sub
push
inc
daa
in
scas
outsb
cld
sarl
xchg
xlat
jne
inc
and
jge
nop
push
rcrl
lods
pop
in
fsubs
inc
jne
mov
jmp
pop
pushf
ficomps
jno
into
fadd
dec
add
xchg
jle
idivl
xchg
arpl
and
test
cltd
sbb
xchg
stos
and
cwtl
stos
push
dec
adc
ljmp
sbb
xor
push
cmc
stos
fscale
outsl
inc
lods
fstpt
push
add
out
mov
push
pop
and
pop
adc
in
mov
idivb
pop
jmp
leave
ror
adc
pop
adc
cmp
lds
inc
out
add
inc
mov
cltd
dec
call
mov
in
les
imul
stos
out
mov
xor
mov
add
lgdtl
jns
mov
dec
dec
repz
andb
hlt
pop
mov
dec
pushf
aad
cmp
push
xor
mov
iret
mov
sbb
sbb
psraw
dec
mov
testl
loop
fcoms
and
icebp
push
les
mov
sbb
sub
pusha
pop
sub
push
pop
aam
insl
inc
mov
cmp
add
jle
lock
dec
jo
jb
clc
xor
mov
push
sahf
fmull
jecxz
push
sub
ficompl
test
xchg
outsl
or
out
cmp
pop
push
repz
xor
loopne
cli
lcall
lock
xchg
shll
pop
mov
les
addl
mov
adc
dec
dec
add
mov
sub
es
dec
and
in
inc
push
in
mov
lret
fcomi
mov
js
pop
mov
xor
sbb
mov
ret
test
scas
dec
out
push
adc
dec
mov
scas
mov
dec
daa
idivb
xchg
aad
inc
dec
pop
mov
pusha
ret
mov
dec
mov
mov
icebp
outsb
loope
inc
push
es
pushf
pushf
sub
xchg
dec
roll
clc
lahf
mov
lods
pop
inc
pop
iret
push
adc
pushl
sbb
pop
xor
mov
and
add
cmpsb
int3
add
loop
sbb
sub
xchg
lds
pop
and
xchg
add
je
mov
inc
push
xchg
test
popl
aad
mov
and
inc
repnz
pop
ror
leave
imul
lods
rcl
jecxz
int
aam
pushf
stc
pop
aas
in
xor
loopne
rorb
mov
faddl
pushf
mov
mov
jmp
pusha
sbb
cmp
and
cltd
mov
addr16
push
sar
insb
jle
jg
pop
inc
jb
inc
add
or
fsubr
add
cs
aam
mov
sub
cmp
sub
adc
enter
push
cld
mov
inc
cmp
scas
or
jbe
add
test
or
jg
shrl
fsubrp
movsl
aam
xchg
add
je
push
push
adc
jb
cs
adc
lds
jle
inc
int
xor
jp
add
add
mov
inc
jecxz
jno
dec
aam
mov
adc
inc
push
lock
adc
mov
pop
sub
push
cld
scas
and
loope
mov
xchg
xor
rcll
gs
arpl
cmc
repz
jne
pop
mov
mov
hlt
jno
mov
inc
push
pusha
iret
popf
inc
mov
mov
mov
scas
cmp
dec
fisubs
mov
movsb
cmp
or
jle
sub
mov
lahf
fwait
ja
inc
adc
adc
xchg
dec
jle
xchg
test
lds
into
stos
cmp
sar
ja
loop
and
sbb
cmpsl
cmp
shll
mov
arpl
leave
xchg
xchg
ss
dec
mov
orl
andb
mov
hlt
int
push
aas
xor
je
xchg
lea
fnsave
mov
addl
and
fwait
inc
mov
push
sbb
add
loope
sbb
in
push
mov
jmp
dec
push
sub
cmp
in
mov
daa
jb
sti
mov
repz
xchg
sbb
shr
sti
mov
cmp
xchg
dec
push
jl
gs
das
out
sub
cmp
xor
leave
pop
stos
sub
push
sub
lahf
sbb
jle
and
out
jbe
mov
sti
nop
jp
sbb
xor
std
imul
dec
loop
fbld
and
adc
dec
int3
mov
enter
jmp
mov
es
ret
push
mov
pusha
sub
add
lret
lea
jmp
pop
pop
outsl
dec
or
bound
mov
loopne
or
mov
sbb
int3
xchg
mov
dec
mov
jns
test
cmpsb
dec
or
jmp
pop
call
outsl
cld
and
in
fmul
xchg
movsb
sahf
mov
and
xchg
mov
and
jmp
sbb
sbb
ret
je
adcl
or
xor
and
mov
sahf
dec
xchg
add
dec
loopne
dec
and
setne
sub
jp
hlt
lahf
cmp
aas
lock
fs
das
ljmp
fildl
loopne
xor
sarl
mov
fists
inc
adc
cmp
out
xchg
gs
mov
push
jle
push
int3
cmp
and
mov
xchg
jae
pop
gs
mov
mov
jl
mov
psubq
add
sbb
call
push
lock
insl
push
mov
gs
add
scas
mov
pop
lret
subb
mov
xchg
mov
mov
xchg
loopne
shlb
in
mov
add
popf
xor
mov
jl
ja
push
xchg
cmp
and
push
imul
imul
vmovaps
gs
ljmp
push
lret
lds
mov
rorb
pop
jp
dec
imul
mov
jl
in
xchg
jmp
in
jg
pop
movsb
xchg
lret
jge
popa
lods
in
imul
xor
stos
cmc
mov
out
sbb
sbbl
xor
xchg
test
ficompl
ja
cmc
jecxz
js
cmp
push
repz
adc
sub
and
adc
ja
leave
out
jb
movsl
outsb
push
sub
out
out
fcoms
sub
xchg
sbb
ljmp
jg
int
ja
in
in
push
pop
not
jmp
and
scas
push
push
ja
pop
dec
mov
jbe
adc
and
arpl
mov
pop
lahf
rolb
outsb
and
pusha
sbb
inc
jbe
and
xchg
scas
mov
add
inc
loop
jns
push
out
sub
cwtl
arpl
push
jbe
pushf
sbb
and
jecxz
int
dec
xor
push
push
and
cmp
jg
out
pop
jbe
test
sbb
icebp
imull
jecxz
scas
mov
mov
in
cmp
mov
push
push
sbb
adc
push
jl
or
push
mov
bound
pop
push
jle
cmp
xorb
test
stos
xchg
or
sub
int3
mov
mov
cmpl
scas
mov
dec
mov
enter
out
loop
pusha
mov
clc
sbb
dec
test
xor
add
sub
add
cmp
jge
jl
inc
outsb
push
loopne
enter
daa
jle
cld
push
or
iret
xor
ret
jbe
subb
push
fistl
sti
cmp
clc
inc
jo
add
js
jns
mov
bound
iret
pusha
addr16
faddl
jbe
into
mov
enter
add
sahf
mov
andl
push
movsb
ficompl
std
mov
cmpsl
ljmp
and
add
mov
and
es
loopne
call
call
rol
or
sti
mov
mov
mov
xor
pop
cs
pop
inc
xchg
dec
outsb
outsb
imull
loop
dec
adc
mov
or
stos
movsl
xchg
fiadds
data16
push
hlt
sbb
add
push
inc
add
adc
pusha
add
stos
add
sbb
aam
pop
andb
mov
sbb
xacquire
pshufw
adc
mov
sbb
add
adc
aad
pusha
jne
fimuls
or
in
xchg
dec
nop
popa
add
bnd
mov
cltd
pop
mov
rcrl
add
xchg
mov
ret
in
cmpsb
sbb
add
adc
mov
mov
add
outsl
mov
add
ljmp
call
std
inc
pop
int
and
mov
cmp
imul
fildl
mov
insl
shlb
roll
fistps
jb
mov
sbb
addr16
and
sar
jae
or
push
cli
scas
aad
shlb
xor
rolb
shrb
bound
in
out
inc
aas
mov
repnz
jns
mov
xlat
adc
xor
jmp
arpl
shl
cli
pop
sahf
fcmovnbe
sbb
dec
mov
hlt
daa
fildll
push
sub
mov
mov
mov
push
inc
sub
pop
fistpl
sar
inc
hlt
int3
or
mov
cmpsl
cmp
push
push
addr16
sbb
stc
sbb
xchg
decb
in
shll
pusha
and
inc
xor
jae
inc
test
andl
mov
lea
pusha
mov
add
rcrb
ret
dec
stos
push
out
xchg
test
addr16
sub
adc
xchg
or
and
bound
lds
jge
xchg
fcom
aaa
leave
xor
jmp
aad
aaa
jl
adc
mov
dec
mov
or
pop
ss
rorb
std
jge
shrb
lret
lods
aaa
mov
xchg
lods
xor
sbb
sti
inc
inc
hlt
jo
push
or
loop
push
xchg
push
push
loop
out
aam
inc
repnz
mov
mov
add
nop
jmp
lret
mov
cmp
push
pushf
mov
test
sub
xor
mov
inc
mov
cli
je
int3
pop
aad
gs
or
test
jno
xchg
adc
cmp
les
push
ret
daa
cmpsb
add
inc
or
mov
jp
jle
mov
mov
add
pop
pop
and
jg
stos
stos
sub
das
mov
inc
sbb
fsubrl
enter
or
stos
pop
add
mov
xchg
pop
or
fwait
fstl
cmpsb
dec
add
dec
dec
push
pop
mov
mov
scas
lret
fwait
repz
add
fisubl
jae
ss
inc
sub
daa
test
mov
mov
xor
adc
pop
repnz
repnz
or
insl
add
mov
pusha
cltd
sbb
sbb
mov
xchg
jno
mov
mov
lods
inc
mov
sbb
mov
xchg
dec
mov
mov
addb
mov
mov
ret
or
mov
pop
repz
data16
pop
or
inc
mov
dec
call
mov
loope
test
adc
xor
mov
push
mov
insl
sub
daa
loope
movsl
or
out
adc
xchg
push
or
in
mov
subb
push
push
dec
jo
and
mov
push
or
sub
cmc
jmp
rcl
data16
inc
aas
stos
mov
lods
out
aaa
cmpsl
lds
dec
or
push
movsb
mov
out
sub
push
movsl
xchg
decb
test
cmp
cli
sbb
repnz
cwtl
popa
push
stc
les
or
dec
pop
jg
rolb
enter
mov
adc
cmc
push
and
or
xchg
stos
jecxz
mov
daa
sbb
dec
adc
sub
and
outsb
movl
mov
scas
and
mov
and
and
testl
stos
data16
fcmovne
push
je
clc
push
or
dec
ljmp
push
test
fcompl
loop
andb
lea
clc
sub
aad
std
loop
sub
jno
int3
jge
imul
inc
mov
cmp
push
scas
xor
or
enter
xchg
sbb
fcoml
gs
push
aaa
jae
incb
add
xchg
push
lret
inc
insb
out
or
arpl
movl
repnz
sbb
mov
in
stos
push
inc
xor
orl
repnz
or
lahf
loope
aas
jne
push
inc
or
out
mov
dec
scas
insl
imul
lock
clc
lock
or
mov
push
fs
rcll
sbb
fildl
scas
pop
std
fs
nop
mov
adc
mov
inc
lahf
sub
cmp
xor
insl
sahf
shrb
xor
movsb
popa
mov
mov
inc
jle
xchg
or
inc
xchg
lods
nop
sub
sahf
fwait
mov
cwtl
movsl
inc
ret
rcrb
cmpl
cmp
xchg
jb
mov
ret
xchg
mov
xchg
xor
roll
mov
test
xlat
lods
jae
insb
xor
fidivrl
test
mov
icebp
cmpsl
push
pop
divb
pop
mov
ds
push
into
bound
js
jo
and
and
push
paddq
addr16
fdivl
or
movsl
xor
in
xlat
je
dec
fidivl
in
sub
imul
mov
jb,pt
pusha
xor
jl
mov
and
fdiv
out
jmp
push
jmp
dec
dec
cmp
mov
xchg
or
lods
xchg
sub
sbb
test
inc
sbb
loope
lcall
les
mov
imulb
pop
leave
push
jbe
in
hlt
outsl
fstpl
insb
cmpsb
repnz
mov
sub
adc
cmp
bound
into
mov
add
xor
jo
adc
leave
pop
mov
jbe
push
add
or
pop
call
in
jge
lcall
dec
pop
or
sbb
mov
xchg
ss
jns
cs
cltd
out
mov
cmp
cli
fcoml
pusha
push
push
das
sub
es
in
bnd
fwait
jno
ret
sub
add
rcr
icebp
push
addr16
test
pop
adc
int
xlat
shr
push
cmc
add
xchg
and
cmc
pop
inc
dec
inc
lcall
pusha
jmp
pop
mov
fcmovnbe
push
and
and
xchg
cmp
mov
add
scas
pop
push
lds
repnz
orb
sbb
mov
pop
iret
addr16
into
call
and
ss
test
and
sbb
add
testl
sahf
rorb
test
or
cmp
sub
jb
scas
mov
or
sbb
mov
dec
pop
pop
mov
aaa
jp
out
aad
mov
xor
fucom
jmp
cmp
in
dec
lahf
push
iret
jo
movsb
pop
loop
xor
test
aaa
aaa
dec
cmp
pop
and
dec
xchg
mov
add
sub
in
stos
jne
cmpsb
mov
sarb
shl
xchg
pop
xor
adc
xchg
jmp
push
orb
mov
dec
sub
loope
sub
mov
jg
mov
lock
and
mov
cmp
push
mov
xchg
es
xchg
popl
sub
negl
dec
mov
jmp
jo
dec
rolb
imul
repnz
mov
jl
call
mov
je
inc
mov
sahf
jo
je
mov
fst
xchg
pop
imul
add
and
imul
movsb
add
xchg
or
or
pop
jno
add
mov
and
pop
and
and
rcll
bound
insb
ret
repz
inc
arpl
les
outsl
jae
jge
pop
hlt
inc
mov
call
add
les
out
inc
push
dec
sub
mov
sbb
test
sbb
mov
or
mov
pushf
aad
mov
loopne
pop
popa
sub
shl
scas
stc
pop
lcall
lods
cmpsb
hlt
sub
pusha
dec
jnp
into
loope
jg
xorb
mov
cld
mov
rolb
aaa
les
repz
test
iret
and
inc
mov
inc
data16
sub
les
fwait
pop
pop
stos
push
xor
and
pop
jmp
xor
imul
ja
jmp
mov
dec
fmulp
dec
shlb
icebp
nop
sub
int
jp
mov
das
pop
add
add
xchg
mov
jb
push
pop
ss
pop
pop
mov
dec
ds
out
pop
std
adc
movsb
shlb
insl
rcr
out
lcall
inc
jecxz
xchg
int3
mov
jecxz
jb
inc
jo
or
mov
sbb
xor
sbbb
sti
cli
pshufw
insb
stos
stc
push
xor
lcall
gs
push
pop
fmul
testb
xor
les
and
adc
ret
fbstp
fstpl
jecxz
mov
push
in
jne
push
xchg
out
and
mov
cmp
mov
aaa
jae
jecxz
test
xchg
call
pop
or
call
movsl
fnstcw
imulb
xchg
pusha
leave
loop
icebp
pop
adc
das
xlat
loope
sbb
sub
stos
mov
lret
mov
andl
adc
pop
out
cld
mov
icebp
cmc
push
adc
xor
fcmovu
adc
xchg
nop
outsl
push
jecxz
mov
xchg
pop
imul
sbb
dec
sti
ja
inc
shll
dec
rcrl
jecxz
sub
add
cmp
insb
xlat
xchg
out
inc
iret
movsl
pop
cmp
xchg
lock
fisubrl
push
call
mov
jp
sub
mov
xchg
and
mov
or
incl
cltd
mov
adc
hlt
add
fmull
jb
sbb
rorb
inc
push
scas
adc
testl
pushf
sbb
fmul
jle
mov
lret
jnp
sub
jo
dec
cltd
cmpsb
jo
pop
push
mov
daa
dec
push
mov
call
ret
mov
push
xchg
jae
xchg
dec
in
dec
jno
dec
jle
mov
lock
push
aad
fwait
add
mov
and
xor
mov
push
dec
mov
movsb
mov
mov
or
icebp
or
into
cltd
mov
outsl
add
jno
in
push
sub
lods
sbb
mov
sbbl
es
jbe
imul
push
and
xor
cmp
add
xor
mov
sbb
and
mov
movsl
out
xchg
or
in
insb
mov
cmp
clc
or
fisubrl
not
jne
pusha
and
stos
ret
xor
aad
inc
sbb
push
push
lods
xchg
dec
aaa
iret
xor
data16
mov
mov
xchg
shlb
cmp
mov
sub
push
jnp
mov
sbb
push
jbe
and
xor
cmp
xorb
xchg
clc
cltd
xor
mov
cmp
hlt
outsb
cmp
clc
lcall
xor
lahf
push
inc
add
adc
cld
fwait
cmp
test
push
xchg
push
jl
mov
inc
lcall
push
adc
mov
in
repz
add
test
cs
jecxz
cmpsb
adc
xor
jb
xor
into
les
mov
add
fbld
dec
or
sbb
insb
scas
xchg
xchg
lcall
es
in
cmp
jne
cmp
push
xchg
out
cmpsb
in
or
add
cmc
sbb
mov
or
sub
outsb
mov
pop
push
ja
ds
aaa
inc
les
or
sub
inc
call
aad
mov
xchg
mov
in
mov
fcmovnu
shrb
lret
decb
fcoml
xchg
addr16
adc
data16
xor
jmp
jp
fcomip
sbb
dec
fwait
ljmp
xor
sahf
add
add
push
ret
dec
movsl
inc
or
mov
xor
repnz
cmp
fsubl
sbb
mov
push
add
mov
and
mov
dec
fdivrs
ja
test
jbe
push
in
pop
out
outsl
push
fistpll
inc
push
jl
mov
ret
adc
jno
movsb
dec
xchg
sbb
add
mov
ficompl
mov
psubb
ret
dec
ret
adc
push
enter
mov
push
inc
incb
inc
dec
pushl
into
icebp
fdivrp
push
xchg
add
ja
pop
push
pop
or
xor
cs
mov
push
iret
cmp
into
xor
in
xor
pushf
scas
scas
push
xchg
push
or
inc
mov
aam
sub
pop
mov
in
filds
popl
cmp
fwait
and
mov
mov
sbb
jne
jmp
lahf
jg
mov
sub
incl
scas
cmp
jb
ds
mov
sbb
repz
scas
in
inc
es
clc
cmp
dec
mov
iret
in
jae
sbb
lahf
aam
leave
lods
xchg
adc
push
pop
lods
mov
addr16
dec
frstor
adc
add
ficompl
sbb
xlat
and
fimull
lods
cmpsl
in
jo
gs
jg
mov
lret
repz
sub
out
dec
cwtl
cli
add
mov
out
jae
lods
mov
adc
pop
push
or
sub
pushf
js
cmp
sbb
jo
test
mov
jo
push
jmp
cmp
in
adcl
xor
hlt
mov
mov
or
add
sub
mov
loopne
mov
lret
sub
std
ret
jle
movsl
out
mov
dec
loop
sub
daa
loope
push
dec
dec
cmp
pop
mov
scas
cli
mov
icebp
jg
push
fmull
adc
xchg
sbb
and
lock
fs
lea
outsb
in
scas
or
adc
loop
pop
xor
adc
cmpsl
mov
ficoml
sbb
add
lret
jge
mov
mov
or
popa
nop
dec
stc
pusha
dec
aam
in
cli
adc
push
mov
insb
aam
pop
cmpsb
push
in
mov
push
mov
setno
mov
xor
push
and
popf
inc
and
rclb
enter
xor
mov
sbbl
xchg
adc
mov
testl
sbb
jnp
jnp
jae
xchg
lcall
je
xchg
or
cmp
jns
fdivrs
shll
idivl
incl
sarb
xchg
in
inc
push
addb
mov
xor
roll
mov
mov
dec
jmp
cld
fsts
dec
adc
and
jmp
shrb
int
pshufw
inc
imul
mov
ss
mov
enter
and
sub
test
jg
or
inc
inc
jp
cmc
arpl
push
adcl
jge
cmp
mov
imulb
xor
negb
data16
cmpsb
lods
sti
xchg
push
mov
inc
popf
lods
xor
cmp
stc
ficompl
dec
add
mov
scas
adc
cmp
xor
cmp
and
pop
ss
pop
into
in
ds
out
jno
mov
loop
xchg
daa
cmp
xchg
shrb
ret
sub
mov
sbb
orb
jne
retw
in
push
insb
fmuls
push
leave
or
add
andl
xor
add
int3
or
out
pop
into
icebp
lock
pusha
loop
xchg
pop
mov
or
fstpt
or
push
adc
add
push
es
jbe
dec
inc
sbb
pusha
xlat
leave
arpl
jecxz
sub
lret
xlat
and
add
mov
lret
mov
in
cmp
insl
sub
out
les
aad
jg
jmp
testl
and
push
pop
outsl
pop
or
stos
jbe
ficomps
jl
cld
sti
jno
nop
out
arpl
loope
lcall
mov
jbe
out
cmpsl
or
push
or
insb
mov
sbb
das
pop
aaa
push
fdiv
xchg
sub
out
add
mov
dec
sub
dec
inc
ljmp
sub
sbb
mov
sti
cwtl
lcall
fs
bound
mov
outsl
push
stos
int
shll
fs
jo
sbb
cmp
cmpsb
imul
pop
mov
jno
adc
lahf
mov
rclb
fxch
cmc
negl
sub
out
pushf
xchg
mov
inc
jns
out
lds
pop
cmp
enter
ja
mov
mov
fs
gs
loopne
push
dec
lahf
loopne
adc
xchg
outsb
pop
movsb
dec
and
packssdw
insb
dec
lods
lds
sub
mov
cs
daa
stos
nop
or
xchg
idivb
test
dec
mov
ljmpw
ljmp
push
lods
cwtl
sbb
cltd
out
dec
lret
add
mov
cmp
inc
mov
ret
subb
mov
xor
imul
mov
fxam
add
stos
loope
inc
rcl
jp
and
jg
dec
adc
sbb
daa
push
push
mov
jmp
pop
lcall
sub
inc
inc
rolb
cld
mov
movsb
sbb
xor
mov
and
icebp
sahf
jnp
jbe
out
adc
pop
js
sarl
in
jl
stos
rcrl
negl
scas
push
bound
shll
xchg
cmp
cwtl
xchg
dec
sbb
outsl
add
cmpsl
ja
jnp
popa
dec
fs
jg
push
ljmp
sbb
addr16
mov
xor
data16
out
mov
xchg
fs
mov
test
idivl
pop
fcmovnbe
sahf
rcrb
sub
jmp
add
bound
lods
out
mov
loop
sub
and
push
adcb
inc
adc
jmp
nop
pop
pop
daa
xchg
mov
loop
sub
xor
sub
out
sbb
lock
dec
les
movsb
push
iret
xor
pop
adc
sub
lods
xor
and
inc
fisubs
xchg
sbb
sub
jae
mov
push
xchg
aad
push
sbb
loop
sbb
pop
inc
imul
sti
xchg
pop
cmp
ret
loop
jg
fsubl
mov
fcoml
mov
andl
outsl
cwtl
push
xlat
pop
movl
jbe
inc
lahf
lock
popa
lcall
xchg
lock
and
enter
add
call
dec
fadd
enter
in
rorb
cmp
paddb
repnz
xor
and
mov
xchg
mov
mov
cs
fdivr
ljmp
adcb
sbb
stos
xor
pop
jp
push
stos
xor
adc
push
clc
or
mov
js
push
mov
jnp
cmp
and
mov
and
ja
dec
lahf
xor
adc
inc
stc
lock
std
pop
dec
insb
dec
mov
fsubs
sbb
fwait
lea
xor
mov
mov
and
pop
xchg
mov
roll
daa
test
mov
shlb
pop
ja
xor
pusha
xchg
jno
sub
lahf
sbb
push
pop
aaa
jno
sbb
pop
cmpsb
and
movsb
lcall
repz
cmp
mov
inc
lods
pusha
pop
and
dec
mov
ja
dec
mov
adc
pop
scas
imul
push
or
jp
push
xor
gs
mov
js
mov
test
stos
adc
mov
adcl
xchg
out
mov
push
mull
push
mov
jbe
mov
cmp
fldt
mov
test
xchg
and
pop
into
les
jmp
lret
les
sbb
inc
lods
push
pop
int3
lahf
lcall
nop
lret
movsb
dec
ror
jmp
jne
inc
push
mov
push
adc
xorb
fnsave
sbbl
xchg
lret
push
sub
pop
cmpsl
and
add
arpl
ret
dec
dec
sar
cmpsl
in
adc
jle
jae
mov
nop
test
mov
push
cmp
push
lcall
in
add
js
dec
inc
out
xor
xchg
xchg
adcb
dec
fsub
cwtl
cmc
inc
test
jae
jg
dec
xor
dec
test
and
cmp
stos
aad
or
aas
sbb
xchg
dec
jns
add
jecxz
or
and
mov
mov
push
fcmovbe
sub
sarb
xor
push
stc
movsl
xor
daa
imul
push
cmpsl
dec
shlb
jo
push
mov
lock
sub
xchg
xor
xchg
in
inc
cld
lea
xchg
inc
push
movsb
jge
aam
jb
mov
add
jne
outsl
loope
push
cmp
mov
mov
dec
fcmovnbe
mov
sub
push
dec
inc
stos
add
cmpb
scas
sub
fmul
adc
les
pushf
jnp
sahf
push
aad
cld
hlt
sub
std
stc
test
in
mov
adc
push
movsb
mov
je
add
aad
push
push
add
scas
testl
in
push
icebp
dec
filds
sbb
addr16
dec
lods
jmp
sub
jns
test
inc
call
ror
clc
jne
mov
mov
pop
test
cmp
aas
inc
dec
xchg
push
or
je
adcb
xchg
test
mov
rorb
lcall
je
cld
roll
in
aad
paddusw
xor
xor
mov
in
pop
cmp
shlb
adc
pop
jl
popf
stc
ret
mov
xchg
int
jge
ss
sti
sbb
inc
mov
js
cs
sub
sbb
scas
pop
ret
ret
add
out
pop
add
push
inc
mov
test
pop
js
pusha
outsb
mov
pop
cmp
xchg
pop
loop
stc
cli
enter
xchg
jns
mov
sbb
repnz
mov
push
test
sub
enter
cli
jecxz
and
cmpsb
insb
dec
stos
lea
flds
cli
mov
jle
pop
lds
cmp
fwait
scas
sti
fdivs
pop
sbb
sti
mov
inc
sbb
adc
jnp
pop
cli
sbb
scas
pusha
test
fdivrl
es
lret
fdivl
rcll
into
lahf
xchg
mov
aas
jbe
fnstcw
in
in
daa
sub
cmp
xor
xchg
xor
movsl
jmp
scas
sti
dec
add
fadd
ret
in
jno
imul
aad
std
pop
push
ja
lret
or
cmp
repnz
into
stos
push
stos
fwait
dec
popf
mov
int
dec
sub
xor
mov
pop
pop
jb
cmc
inc
or
inc
inc
outsb
dec
jbe
jge
pop
notl
scas
shlb
sbb
pop
mov
movb
movsb
int3
jle
jg
or
cmpl
dec
push
add
cmp
xchg
mov
xchg
pop
add
jmp
mov
daa
ret
add
std
aam
fwait
sarb
sub
cli
out
pop
mov
cmp
cmp
dec
fs
mov
fsts
inc
xchg
sub
sub
sub
dec
lds
and
adc
in
outsb
gs
xlat
or
fwait
in
xchg
mov
mov
pop
jnp
repz
shlb
jno
push
dec
mul
int
cmpsl
clc
xchg
adc
sub
inc
dec
xor
xor
je
int
mov
pop
xchg
mov
test
outsb
cmc
sub
sbb
mov
cmp
cmc
jl
jnp
lcall
pop
insl
xchg
xor
sbb
outsl
adc
stc
push
cmp
test
mov
pusha
mov
xchg
sbb
sbb
sub
xchg
mov
in
cli
fcoml
mov
sub
movsl
pop
and
xchg
scas
loop
fwait
adc
ret
xor
imul
cmp
cli
cmc
gs
cs
sbb
cmp
adc
repz
jp
rolb
stos
xor
scas
pusha
sub
pop
cmp
into
jae
mul
fstl
fimuls
adc
insl
into
or
xor
mov
mov
mov
push
push
daa
jg
jae
pop
shll
push
stos
mov
sbb
outsb
mov
js
dec
cmc
xchg
jecxz
pop
aad
int
or
mov
add
mov
in
insb
xlat
shrb
int
roll
cwtl
popa
dec
fimuls
in
push
ds
mov
and
sbb
nop
push
adc
ds
push
xor
inc
cltd
add
cmp
xor
and
mov
push
mov
aaa
jmp
pop
out
pop
mov
rorb
dec
fcoml
dec
sub
xor
outsb
ljmp
adc
jae
jmp
and
lret
icebp
dec
not
lcall
sti
and
loopne
lock
sub
lahf
jns
jp
fs
push
test
xchg
dec
mov
or
negb
inc
push
mov
in
inc
sbb
jecxz
sbb
mov
out
jns
and
js
shlb
jp
pop
xchg
add
test
or
xchg
repnz
imull
push
xchg
ror
mov
or
int
nopl
mov
loop
insl
ror
nop
jmp
pop
add
sarb
aas
mov
sti
push
xor
and
mov
das
mov
test
xchg
cmp
std
xlat
add
xor
push
xor
lods
pop
arpl
jecxz
aaa
cmp
cmp
or
data16
add
test
or
fimuls
xor
jns
sub
shl
xor
negl
ja
int
call
stos
sbb
iret
xor
mov
cmp
cmpb
lods
and
xor
mov
inc
dec
add
xor
cltd
inc
mov
mov
or
dec
rorb
adc
mov
mov
pop
xchg
fidivrl
cmp
bound
push
jge
mov
adc
adc
loopne
xor
mov
and
repz
out
ds
mov
jge
jmp
sub
iret
lds
jge
lret
sub
and
imul
std
mov
xchg
call
mov
dec
lcall
rorl
push
fnsave
sub
les
mov
int
insb
lret
mov
xchg
addr16
add
movsl
call
call
flds
test
dec
mov
lods
into
mov
mov
out
mov
scas
data16
and
inc
fisubrs
lret
push
push
mov
mov
sub
fwait
jbe
push
dec
popf
add
and
ficoml
adc
mov
sbb
adc
lods
popa
loop
sbb
and
jmp
push
adc
pop
daa
xor
sub
jg
stc
insl
pop
mov
sub
pop
inc
adc
xchg
jno
inc
mov
call
push
aam
sbb
stc
daa
dec
movsl
out
aas
and
push
add
into
mov
cmp
pop
fucomi
push
fistpll
and
push
sbb
xchg
jns
stc
sbbl
rcll
mov
mov
and
ja
sub
out
push
negb
arpl
adc
insb
mov
push
mov
popf
stos
dec
ljmp
or
rcrl
rcll
je
ss
add
dec
out
rcll
push
and
fstl
subl
pop
push
mov
push
fldenvs
inc
inc
cmp
fisubs
cmp
sub
in
inc
mov
mov
cmp
xchg
insl
imul
push
aam
shl
jne
cmp
mov
lret
int3
xor
mov
mov
test
pop
mov
daa
cmp
sbb
pcmpgtw
sub
inc
icebp
and
stos
aaa
jbe
and
xchg
loop
es
mov
pop
pusha
sub
in
jo
xchg
inc
sti
test
adc
inc
jbe
mov
mov
decl
xchg
jge
lods
push
imul
mov
adc
decl
jne
in
sbb
jns
les
dec
jg
push
andl
push
xchg
inc
jo
das
push
cmp
into
lds
pop
repnz
stos
popf
lahf
adc
aas
push
mov
xlat
es
fists
je
stc
pop
and
inc
pop
push
cmp
test
adc
push
fs
sahf
xchg
lcall
jle
mov
or
cmp
int
dec
out
push
xor
mov
std
fld
ja
dec
test
mov
add
inc
xchg
push
push
push
lret
sub
cs
lods
into
mov
fstps
sahf
fst
gs
mov
sub
fdivrp
stc
or
inc
movsl
cmp
cmp
mov
add
stc
cmp
mov
push
fiaddl
pop
dec
lock
cmp
mov
cmc
sbb
sarb
push
sahf
mov
pop
cmp
push
mov
adc
xor
mov
rclb
into
jmp
lock
div
push
repz
pop
pop
fbstp
rcr
sub
xor
fcmovne
xor
lret
push
cs
pop
inc
in
jge
mov
adc
movsb
pop
mov
rorl
in
xorb
push
stos
and
repnz
dec
and
jbe
sbb
pop
or
mov
mov
and
cmp
and
sub
lcall
jae
add
popa
dec
cs
mov
and
in
fbstp
adc
dec
cli
leave
pop
outsb
cltd
mov
xor
stos
test
cmp
fs
ret
clc
test
push
xchg
leave
arpl
dec
mov
mov
stc
xchg
test
dec
mov
loope
cmp
dec
cmpsl
dec
push
jle
lds
fmulp
sub
mov
aad
pop
aad
cmp
push
pushf
add
fidivrl
insb
and
xchg
ficoml
andb
lret
loope
push
fldt
dec
mov
sub
lcall
scas
call
lea
jo
adc
dec
add
in
fldcw
mov
and
jmp
mov
and
aad
mov
lea
dec
adc
sub
jl
xchg
mov
test
repnz
pop
inc
das
mov
mov
adc
and
and
mov
or
repnz
sbb
mov
stos
sbb
cs
pop
dec
out
add
test
and
pushf
xchg
jge
lahf
adc
loope
lea
push
fldl
add
xchg
cmp
into
rol
mov
bound
push
push
and
cld
fisubs
fwait
jae
shll
mov
iret
cmpsl
jecxz
movsl
lcall
lret
gs
cmpsl
bnd
add
idivb
xchg
jo
ljmp
jns
adc
arpl
stos
mov
mov
roll
and
xor
aas
ret
pop
pushf
stos
lock
sub
cwtl
sahf
sub
lcall
mov
pop
xor
sbb
push
std
xchg
inc
mov
mov
cmp
insb
shl
add
mov
push
xor
or
or
push
outsl
mov
es
xchg
es
mov
mov
jo
cmp
das
ds
dec
mov
xchg
mov
test
or
shlw
jnp
xor
push
xor
sarl
lea
jae
ret
hlt
sti
mov
cmp
add
js
xor
mov
push
adc
cmp
out
push
mov
dec
ds
inc
cli
sbb
or
scas
mov
out
jb
mov
ret
mov
in
lret
nop
data16
jbe
popl
in
es
xchg
jecxz
call
jbe
mov
jl
add
inc
movsb
push
sbb
xchg
mov
mov
inc
lock
out
pop
out
xchg
and
shrb
testl
add
add
cmp
push
aam
popa
inc
fmull
lea
xor
inc
sbb
jne
repz
sub
xor
lahf
push
int
in
lea
jno
leave
jnp
dec
push
mov
xchg
pop
mov
in
ja
sub
sbb
pop
dec
data16
pusha
xor
add
pop
add
ja
in
pop
popw
mov
enter
adc
lret
push
mov
pop
pop
xchg
mov
into
rcll
sub
icebp
in
rcll
popa
xchg
adc
enter
adc
in
cltd
pushf
push
insb
jg
lds
pop
jnp
imul
fucomi
out
and
pop
lods
mov
mov
out
or
mov
or
addb
das
daa
jne
scas
outsb
hlt
ds
pop
inc
inc
push
cmp
jnp
lds
fs
cwtl
push
add
ja
inc
out
test
push
push
and
mov
mov
sbbb
insl
stos
mov
xor
int
addr16
les
icebp
mov
sahf
in
std
xchg
iret
in
mov
imul
lret
jle
jecxz
arpl
lret
mov
mov
pop
pop
or
jp
imul
aas
mov
jae
imul
push
push
pusha
sarb
or
stos
enter
cmpsl
daa
leave
jbe
fsubrs
cmpb
cmp
test
push
gs
cmp
mov
dec
mov
sub
adc
bound
cmp
faddl
mov
dec
or
negb
lret
movsl
jbe
jecxz
cmp
sub
push
aad
movsb
and
dec
mov
rcrb
es
mov
pusha
rorb
int
xor
das
int3
jle
cs
jp
pop
mov
xchg
mov
in
test
xchg
jnp
scas
jb
dec
push
push
or
ja
cmp
mov
outsb
xchg
lock
test
push
dec
inc
lahf
lods
adc
iret
ret
seta
mov
mov
inc
call
push
sti
and
mov
mov
cmp
enter
mov
push
movsl
je
mov
cmp
imul
loope
lods
outsl
lret
aad
clc
jb
lret
lds
aaa
mov
xor
outsl
aaa
cs
xor
mov
sbb
fs
xor
inc
xlat
les
xlat
fildll
incb
push
sbb
shl
xor
xchg
repz
sub
stc
mov
fs
cmp
push
inc
mov
bound
mov
jns
movsb
repz
or
shrb
enter
xchg
shlb
popf
ljmp
ss
pushf
xchg
repnz
adc
mov
cld
xchg
inc
insl
lret
push
testb
xor
fcmovnb
push
int3
push
pusha
add
pop
jne
inc
popf
int
stos
xor
gs
mov
ja
or
popa
mov
mov
fnstsw
inc
push
jmp
xchg
inc
inc
push
mov
mov
cwtl
cltd
in
xorb
xchg
jns
sarb
mov
test
jmp
mov
pop
cld
aaa
add
iret
push
mov
andb
cmp
mov
outsl
inc
dec
cwtl
push
push
jmp
adc
lret
outsb
ss
inc
out
cli
loop
adc
lea
popa
loopne
sti
inc
inc
mov
in
xlat
xchg
stos
test
ja
test
mov
aam
ret
idiv
lcall
cmp
inc
pop
int
xchg
dec
pop
mov
fsubl
mov
mov
or
out
ffree
inc
cmp
cmpb
and
sti
cmp
insb
lcall
mov
push
out
mov
hlt
sbb
lcall
adc
imul
scas
dec
push
mov
xor
push
inc
ja
sub
pop
pushf
pusha
mov
add
fisttpl
out
mov
sahf
orb
lds
loop
pop
shlb
in
movsl
scas
inc
cs
loope
mov
inc
adc
or
sbb
jno
shl
and
push
aad
packuswb
sbb
cs
call
xor
and
mov
sub
lock
add
pop
leave
mov
push
mov
loopew
in
jg
shrb
shll
mov
bound
lahf
lahf
xchg
scas
jae
in
lcall
pop
push
xchg
nop
pop
pop
add
mov
mov
xchg
rcrl
scas
sarl
mov
ss
fcmovnb
dec
out
hlt
stos
xchg
xchg
or
add
frstor
repnz
pop
push
jae
daa
jo
clc
mov
xor
xchg
mov
or
pop
sbb
xchg
or
dec
ret
add
or
push
fisubl
pop
mov
aad
adc
adc
hlt
fistpl
daa
call
mov
add
cmc
fwait
stc
mov
lret
sbb
or
in
dec
dec
jmp
lock
mov
ds
jnp
and
sarb
sbb
scas
sub
shl
jmp
jae
aas
xchg
add
aam
popf
and
inc
pop
data16
inc
mov
xor
cli
rcrb
insl
mov
in
or
daa
mov
std
xor
add
je
mov
sub
push
and
or
loope
inc
imul
addr16
rcll
cmp
mov
mov
adc
cmp
or
dec
and
push
and
cmp
adc
mov
arpl
mov
sbb
out
cmp
adc
inc
jg
adcb
mov
mov
add
popf
or
jnp
dec
cmp
pop
es
fwait
mov
jb
aas
push
addr16
cs
lahf
out
arpl
cmpl
sub
push
add
andb
addr16
adc
sbb
sbb
pop
not
inc
pop
jecxz
mov
add
incl
lahf
sub
in
and
and
pusha
call
or
add
pop
lret
xlat
jno
sub
push
cld
mov
dec
popa
ret
pop
notb
nop
mov
lret
mov
test
pop
in
xchg
pop
dec
or
jnp
pusha
cmp
mov
addl
xor
sub
and
xor
push
push
aas
outsl
jg
or
stc
dec
clc
add
lock
sub
mov
sub
inc
or
mov
jmp
xor
call
mov
shrl
xor
mov
and
cmpsl
pusha
mov
daa
mov
sbb
fwait
in
push
lea
push
mov
and
adc
mov
test
loop
mov
cmpsb
xchg
movsl
inc
pop
sub
dec
pop
lock
add
add
dec
jb
lret
sbb
ja
loope
lods
xor
xchg
inc
and
ds
repz
fistps
jg
repnz
clc
adc
or
aas
into
and
sarb
or
push
pop
jne
mov
mov
nop
jge
cli
popa
arpl
sub
mov
sbb
push
test
xor
sarb
push
jae
dec
mov
aaa
dec
shlb
mov
push
mov
sub
pop
xchg
cmpxchg
aaa
dec
cmp
int
test
pop
mov
xchg
int
jno
mov
and
cmp
dec
push
insb
push
sub
pop
rorb
loop
ss
xchg
mov
icebp
gs
inc
mov
cmp
cmp
adc
cltd
scas
push
ret
into
rcll
in
in
cmp
mov
cmp
ja
cmp
cs
push
into
aam
adc
jmp
sub
pop
adc
inc
je
cli
sarl
mov
cwtl
adcl
pop
jl
scas
into
pop
fidivrl
mov
jae
or
mov
out
jg
mov
dec
les
hlt
pop
jecxz
arpl
clc
iret
rcrb
dec
repnz
test
iret
enter
cli
cmp
and
loope
fmul
test
push
mov
les
jo
push
xchg
loopne
loope
cs
out
xchg
lods
std
out
pop
xchg
loopne
lea
sarb
fistpll
dec
mov
sub
cmc
xchg
cmp
flds
fwait
sbb
sub
ficompl
aaa
lahf
out
mov
subl
iret
jecxz
xchg
insb
sbb
add
pop
cmpsl
test
push
outsl
fdivr
xchg
filds
push
cltd
xchg
les
in
jge
decb
add
in
pop
andl
lods
inc
aad
add
adc
jle
sbb
dec
rcl
xor
jg
jnp
mov
xor
xor
pop
xchg
repz
cwtl
push
xchg
mov
jg
loope
push
sar
add
repnz
dec
out
test
in
inc
fnsave
aas
push
fsts
in
pusha
fucomi
dec
leave
cld
xchg
lods
fucomi
mov
test
xorl
push
push
shrl
jmp
out
adc
jmp
cmp
cmp
push
bound
lret
dec
out
in
call
shrl
inc
adc
cld
cmpsl
push
mov
pop
scas
int
jno
and
sbb
sbb
or
fldl
scas
enter
imul
adc
cmp
int3
dec
pop
and
mov
andl
jg
sub
notb
cmp
push
clc
fld
ror
mov
push
dec
popa
jo
cmp
lcall
push
scas
iret
mov
arpl
int3
sbb
cmpsb
jo
push
push
push
xor
fwait
gs
mov
pop
xchg
inc
push
test
and
push
loope
in
dec
mov
adc
addr16
jp
cmp
dec
inc
jno
pop
addr16
dec
movb
bound
shll
xchg
clc
pop
lret
lret
cmc
mov
cmp
shrl
call
cmp
popa
outsb
jnp
xchg
in
xchg
mov
in
mov
cmpl
push
jb
pop
idivl
add
xor
pushf
cld
repz
dec
mov
push
sub
out
jp
sbbb
xchg
mov
adc
fimuls
mov
and
push
popf
mov
or
ja
fdivs
jns
mov
stc
push
aaa
sbb
or
popa
cmp
std
jmp
in
cs
les
or
jge
pop
movsb
bound
mov
jo
cmpsl
daa
push
gs
push
scas
addl
push
nop
add
out
hlt
mov
out
jb
stc
js
shlb
jo
xchg
sub
imulb
pop
out
push
in
mov
inc
test
push
push
pop
call
xchg
xchg
push
jns
fwait
test
fidivl
sbb
loope
add
or
mov
cmpsb
sti
mov
aad
mov
sbb
scas
ficoml
pusha
xor
cmp
int
jg
enter
adc
mov
sbb
add
cld
sbb
stos
rcrl
sbb
or
out
in
jnp
incl
push
test
fimuls
das
int
or
or
mov
mov
jae
inc
xor
push
jbe
ja
aam
in
jg
insw
push
shrl
jl
push
push
jecxz
mov
jge
js
arpl
daa
popa
and
pushf
inc
xlat
jmp
dec
adc
mov
clc
jl
mov
pop
mov
sbb
pop
and
popa
jmp
xchg
xchg
mov
movsl
aad
fcoms
adc
test
sbb
cmp
aam
in
stos
pop
mov
call
cmp
pop
cmp
adc
inc
lods
add
dec
mov
fdivl
push
cmp
sub
out
arpl
dec
sar
jb
arpl
push
and
adc
aad
xor
cli
mov
mov
lock
inc
jnp
cmp
inc
in
xchg
test
insl
daa
pop
jae
mov
mov
divl
jmp
jle
ja
inc
mov
jmp
add
subl
jmp
outsb
js
add
jge
push
and
cmp
push
mov
jnp
mov
call
mov
repz
xchg
insl
xor
dec
pop
lcall
mov
test
or
or
imul
pop
clc
jge
push
sbbl
pop
mov
ret
iret
dec
cmp
push
sarl
xor
xchg
jge
jae
inc
push
dec
adc
cmp
xor
inc
mov
pop
dec
push
jle
or
mov
push
mov
lea
andb
mov
cs
xchg
scas
andl
fucomip
pusha
int3
mov
adc
push
jo
jmp
sub
pop
cmp
popf
or
loopne
in
cs
xor
xchg
cltd
xchg
mov
xor
das
mov
dec
xchg
dec
ljmp
add
addr16
jo
pop
pop
movsb
stos
xchg
movsl
pop
lds
mulps
das
arpl
inc
push
and
fs
jno
test
jp
push
mov
xchg
sub
pop
inc
or
cmp
mov
mov
cld
push
xchg
aaa
out
xorb
or
xor
jnp
pop
outsl
repnz
rolb
loopne
push
notl
repnz
jns
add
into
out
div
dec
pop
lods
mov
outsb
pop
fbstp
fs
imul
popa
push
mov
push
test
out
aas
popa
neg
incl
push
fldenv
call
scas
and
and
inc
xchg
mov
cmpsb
stc
leave
bound
mov
or
aam
push
pop
add
inc
jb
sti
lret
sub
fucomp
push
lods
xchg
and
call
out
dec
orb
mov
pop
ror
cmc
inc
je
jbe
jo
fnstenv
in
shlb
cs
cld
and
sub
mov
sti
add
pusha
jge,pt
push
popf
mov
lods
in
int3
test
rolb
jecxz
dec
cmp
mov
adc
repnz
mov
xchg
ss
rol
aaa
xor
and
jo,pt
popa
adc
sub
pop
and
stos
in
shr
xchg
mov
pop
lods
cmp
xchg
or
je
sub
inc
jae
push
stos
lret
rolb
adc
inc
inc
mov
fidivs
xchg
arpl
jl
addr16
jmp
jno
push
pop
push
insb
lret
js
xchg
cmp
add
in
insl
fnstenv
or
mov
cmp
add
aaa
inc
mov
xchg
jp
dec
shrb
mov
or
push
inc
cmpsb
pop
aaa
ss
jge
mov
lahf
inc
call
jle
pop
arpl
mov
fdivrs
mov
lcall
imul
js
mov
movsl
and
in
xor
outsb
push
lock
jo
ds
cli
mov
inc
insl
scas
imul
aad
pop
pop
ds
pop
sub
je,pn
stos
stos
imul
fidivs
jb
adc
sbb
sub
jne
inc
ret
push
arpl
push
pop
mov
mulb
push
popa
arpl
push
in
call
popf
xor
sub
cmp
pop
aad
rcrb
jge
dec
test
pop
sbb
pop
imul
adc
mov
out
call
scas
call
push
cwtl
jo
addr16
and
jecxz
xchg
in
test
sub
dec
push
fcmovne
pop
lods
mov
push
popa
pop
stos
xor
int
add
das
ret
dec
pop
lret
pop
outsl
mov
dec
ds
in
pushf
ss
mov
xchg
aaa
iret
mov
xchg
movb
scas
push
rol
sub
dec
inc
push
scas
xor
lret
fs
cwtl
lods
mov
or
movsl
jp
dec
mov
leave
pop
test
mov
in
cltd
test
inc
jmp
popf
push
out
ja
xor
js
daa
xchg
cmpsl
mov
fisubs
inc
mov
out
lods
rolb
lahf
out
cmp
jne
idiv
into
iret
imul
test
movsb
xchg
sbb
fisubs
adcb
fcoms
push
loope
stc
push
push
cltd
or
ret
sbb
sbb
stc
popa
insl
les
xchg
adc
xchg
lcall
scas
int3
insl
sub
pop
pop
and
lea
jg
push
jmp
hlt
mov
jno
test
dec
out
icebp
sbb
inc
mov
xor
fdivrl
sub
jge
lahf
leave
ja
imul
fs
xchg
js
imul
insb
jo
in
flds
mov
add
mov
mov
test
mov
xchg
dec
or
xchg
popf
dec
fidivs
or
ds
mov
mov
insb
rclb
inc
lcall
pop
rorl
rcl
dec
adc
or
push
mov
sarb
call
sub
fsubrl
stc
xchg
mov
sub
add
test
push
stos
jb
adc
push
aad
dec
jno
pop
adc
mov
js
adc
mov
xor
ss
sarb
cld
and
or
mov
adc
cmp
in
jno
outsb
push
insl
and
call
dec
push
ja
test
push
dec
addr16
ljmp
xchg
mov
xor
xchg
push
lret
add
cmp
fistpl
add
dec
fldt
and
mov
into
dec
sub
xchg
cmp
pop
jae
les
insb
inc
push
push
aad
push
cmp
mov
cli
aas
xor
test
jbe
sbb
test
jle
adc
xor
cmpsb
adc
add
ret
dec
sbb
xor
xchg
mov
dec
mov
int
pop
and
scas
gs
lods
std
mov
test
mov
pushf
push
icebp
cmp
sbb
or
xchg
add
push
adc
mov
or
pop
aaa
xchg
inc
fmull
outsl
adc
stos
xchg
in
fs
movsl
dec
add
sub
jb
add
outsb
pop
mov
adc
adc
imul
or
dec
lds
sub
pop
popa
cmp
push
out
xor
int3
pop
aad
mov
sti
loope
xchg
add
xor
fcoms
pop
mov
mov
sbb
out
lret
jbe
adc
loope
xorl
jns
ficompl
addr16
sbb
mov
add
pop
imul
push
inc
push
mov
pop
and
insb
dec
mov
mov
dec
fisubrs
add
pop
xchg
mov
divb
xchg
call
bound
and
cmpsl
mov
je
test
push
loope
or
jae
mov
filds
out
fildll
das
aad
outsl
inc
or
in
test
pop
push
fsubp
xor
lret
mov
ficoml
add
ret
or
cmp
xor
mov
icebp
sub
out
sbb
movsl
pusha
clc
shl
push
es
cmp
repz
sti
pop
cmpl
fidivrs
mov
iret
fstp
push
inc
inc
inc
cwtl
and
imul
mov
xorb
adc
jnp
aas
mov
fs
fiadds
jo
sbb
fistl
pop
sbb
fadds
sbb
fldl
dec
enter
sbb
sbb
lea
cmp
add
jns
jecxz
movl
es
mov
lods
fisttpl
data16
loope
adc
mov
mov
sub
sub
mov
jne
cmpsb
lock
js
imul
and
cwtl
push
test
mov
sub
push
dec
sbb
out
xchg
or
inc
dec
jbe
fildll
push
shrb
shll
aad
dec
bound
data16
scas
mov
pusha
jg
call
lds
pop
cmp
cmp
inc
fidivrs
mov
or
cmpsb
sbbb
in
pushf
bound
or
xor
pop
push
ret
sbb
lahf
and
pop
sti
fwait
pop
or
cld
nop
jo
cmp
inc
pop
mov
iret
ror
pop
mov
or
roll
in
inc
shll
pop
js
loopne
subl
ret
push
jns
push
cltd
jmp
out
xchg
jnp
cmc
pop
pop
aam
xchg
mov
je
fdivs
mov
cld
inc
mov
jb
and
xchg
mov
sub
fidivrs
ficoms
filds
cmp
rcrl
ljmp
mov
sub
add
sub
shrb
adc
psrld
mov
and
pusha
xorl
push
sbb
fisubs
lods
sbb
ret
dec
movsl
xchg
and
mov
out
mov
fwait
xor
lock
jb
and
xorl
lods
test
mov
mov
stc
je
xchg
pop
cmp
mov
shrl
bound
lea
lock
scas
xor
jo
addl
out
xor
jle
loopne
add
sbb
mov
inc
adc
pop
dec
scas
shl
ljmp
pop
inc
mov
in
movsl
sbb
sbb
xor
push
gs
push
divb
push
lret
stos
int
sbbl
insl
dec
or
pop
mov
into
scas
inc
push
mov
ss
xchg
mov
mov
addr16
daa
pop
loop
cmp
andl
xchg
cmpsb
and
cs
int
mov
subl
sahf
xor
movsb
jns
popa
mov
push
inc
dec
scas
jg
dec
int
jo
mov
pop
push
mov
push
push
jmp
inc
movsb
fsubl
in
pop
dec
loop
jae
jnp
loop
testl
sbb
fwait
pusha
pop
or
mov
lods
lret
neg
cmpsb
andb
mov
data16
sbb
mov
mov
mov
mov
lock
cmp
xchg
xchg
ljmp
bound
iret
cmp
inc
lock
fsub
mov
xchg
test
fcoms
jg
aad
adc
imul
push
xchg
ret
mov
mov
jecxz
add
es
imul
fnstcw
int3
call
xchg
sbb
xlat
lods
xchg
lcall
mov
inc
pushl
ret
xor
test
fcmove
or
mov
addr16
mov
cmp
insb
aam
and
js
add
mov
fldcw
sti
std
add
lret
jecxz
dec
fsubrl
inc
popf
rorb
lock
push
adc
ds
jecxz
lret
mov
adc
sub
dec
pop
push
jle
mov
push
les
lret
jp
mov
insl
mov
sbb
jmp
sbb
test
xor
je
lods
mov
mov
mov
xlat
bound
jle
sub
idiv
mov
xor
shll
add
sti
dec
js
ja
cmp
and
pop
les
xchg
dec
xor
fistps
sub
sub
adc
clc
movsl
in
pusha
aam
push
cmc
xchg
adc
xchg
sbb
mov
adc
mov
fdivl
jl
leave
lret
test
sub
jg
xchg
jmp
mov
xchg
stos
outsl
fisttpl
mov
push
dec
scas
dec
dec
dec
mov
xchg
pop
or
fdivr
or
sti
mov
rcll
cmp
jb
cmp
mov
push
scas
mov
jp
jae,pn
test
xor
push
movsb
mov
adc
xchg
push
xor
xchg
fisubl
push
mov
lods
insb
out
ret
scas
cmp
push
push
stos
in
sti
pop
mov
and
dec
xchg
and
pop
or
shr
lods
mul
add
cmpsl
movsl
xchg
xor
xor
idivl
sbb
je
push
mov
pop
fisubrl
ss
movsb
cmp
sub
and
inc
cs
clc
add
cmp
mov
add
cmp
push
jecxz
fwait
cmc
lds
add
pop
mov
push
in
cmpsb
popa
jmp
lods
fistps
aaa
aam
cld
aaa
stos
dec
aas
mov
add
dec
sub
add
xlat
dec
inc
aas
mov
loopne
sahf
ret
pushl
xor
jg
repz
xor
popf
sub
hlt
inc
mov
dec
call
mov
jg
dec
les
leave
nop
mov
movsb
rcrb
aam
jns
inc
cmpsb
mov
sub
sbb
dec
push
aas
lds
mov
adc
mov
jb
mov
popf
addr16
sub
xchg
repz
jb
es
push
data16
fdivr
icebp
pusha
xchg
clc
cmp
lret
scas
fistps
inc
xchg
mov
stos
hlt
dec
test
add
jg
cmpsl
jmp
cmpsb
test
dec
aam
mov
and
test
jle
mov
jmp
xor
mov
inc
out
rclb
loopne
adc
fldcw
mov
xchg
cmp
fsubl
xchg
rcl
test
mov
pop
sub
fcoms
ret
pop
mov
icebp
dec
jecxz
push
or
mov
mov
pop
adc
cmpsb
pop
dec
je
jno
xor
add
xor
dec
or
xchg
add
lock
push
mov
imul
in
and
sub
cmp
shll
cs
andb
push
jnp
in
pop
shll
jo
aas
xor
adc
ds
and
mov
gs
jge
xor
pop
xchg
pop
pop
and
into
and
hlt
daa
les
and
mov
rclb
push
mov
popa
inc
scas
gs
cli
xchg
xor
stc
stos
fdivl
pushf
dec
mov
into
push
add
sbb
mov
flds
sbb
lods
call
ja
add
leave
jl
and
fstl
dec
add
xchg
dec
and
repz
xor
xor
jae
repnz
lds
test
jno
jb
jne
mov
add
and
lds
adc
adc
fsub
imul
dec
aaa
push
mov
xchg
cld
xlat
sahf
add
push
jne
add
shlb
jo
pop
iret
adc
icebp
push
fsub
add
xchg
sbb
pusha
push
push
lods
loop
or
xlat
repz
dec
stc
out
sub
popf
sub
stos
movsl
ret
call
cwtl
outsl
mov
aaa
xchg
xchg
out
in
lods
xchg
and
loope
mov
mov
jge
or
sub
push
mov
popa
xor
lahf
add
mov
pop
rorl
jnp
mov
lods
aaa
scas
sub
sub
cld
aam
pop
mov
adc
jnp
clc
mov
jo
mov
inc
sbb
ss
mov
loop
pop
popf
push
mov
and
movsl
push
mov
in
imul
les
test
nop
lret
xchg
mov
insl
jle
mov
mov
jns
cltd
js
ret
inc
jns
popf
fisttpl
movsl
daa
call
mov
xchg
xchg
daa
inc
aas
add
dec
mulb
pop
cmp
sbb
push
jnp
iret
ret
mov
aad
add
cmp
jp
xchg
pop
jmp
in
gs
aas
mov
arpl
adc
cli
and
mov
push
sub
push
mov
cmpsb
fcmove
mov
das
push
and
xchg
cld
popf
adc
pop
fmuls
rol
inc
push
inc
mov
mov
mov
push
stos
ret
notl
fiaddl
imul
mov
mov
nop
hlt
inc
inc
inc
stc
out
fldt
pop
or
rolb
xchg
imul
ficomps
add
rcrl
xchg
push
fs
cmp
push
enter
imul
push
mull
ja
repz
mov
mov
insb
xchg
jb
aam
icebp
sti
xchg
scas
xchg
loop
call
int
out
stos
mov
dec
mov
mov
pop
out
inc
in
mov
movsb
or
arpl
push
out
hlt
in
subb
arpl
imul
dec
push
rcrb
cli
repz
xchg
hlt
lds
sarb
pop
cmpsl
mov
rcrl
mov
enter
bound
jne
jae
xor
out
sub
adc
mov
aad
sarb
inc
push
jecxz
pop
int
jp
cmp
dec
fsubrl
mov
xchg
push
jecxz
iret
dec
shlb
rcll
push
mov
add
mov
lods
jmp
sub
ds
pop
jle
std
and
cmp
mov
mov
rclb
add
lods
stos
adc
out
lcall
out
rcrl
pusha
jae
jae
or
inc
outsl
inc
xor
cld
jae
hlt
imull
mov
sbb
and
add
xchg
ret
out
test
int
insb
push
pop
mov
cmpsb
sub
lods
addr16
aaa
or
mov
jmp
or
sub
xchg
add
ficoml
cmpsb
add
lahf
adc
cmp
xchg
mov
outsl
es
jmp
lock
sbb
sbb
sbb
or
add
jne
mov
pusha
lea
popf
lret
lret
and
adc
and
js
leave
add
fldt
lcall
jge
cmp
mov
orl
cmpsb
lcall
pop
filds
scas
inc
outsl
pop
test
adc
push
mov
adc
lret
sbb
adc
pop
mov
mov
out
mov
pop
orl
jge
adc
ja
lcall
xchg
xchg
cmp
in
ret
pop
mov
adc
iret
jns
lcall
hlt
mov
repnz
cltd
push
popf
in
jno
fs
loopne
aad
push
rcrl
cmp
pop
push
adc
icebp
and
adc
in
mov
in
aaa
adc
clc
add
and
ret
outsl
pop
lods
rorb
mov
daa
pop
pop
xchg
jecxz
and
inc
inc
xchg
xor
sbb
enter
ret
jb
inc
repnz
and
adc
cld
sbb
push
xor
inc
cld
subb
jle
cmpsb
xor
xchg
xlat
repz
jmp
mov
sbb
or
sub
or
mov
sti
fisttps
test
repnz
inc
push
stos
adc
ja
adc
and
call
adc
mov
jge
sbb
mov
xor
cmp
je
sub
pop
sbb
and
inc
add
in
cmpsl
mov
dec
xlat
cmp
push
adc
xor
ss
mov
rcrl
or
jmp
daa
pop
jg
push
sub
mov
into
adc
cwtl
cld
lods
lahf
std
add
rclb
xlat
pop
mov
xchg
repz
dec
dec
add
cwtl
push
jnp
cwtl
aaa
pop
iret
sbb
ds
pop
pushw
mov
mov
adc
in
fdiv
xchg
in
lret
addr16
pusha
mov
aas
fsub
inc
addr16
addb
test
js
xchg
arpl
in
popf
dec
cld
pop
jno
jecxz
pop
mov
ljmp
sbbl
dec
imul
cmpsb
pop
out
jl
rolb
test
lahf
cld
or
xchg
popa
pop
lahf
aad
in
xchg
in
cld
mov
mull
out
in
jmp
jbe
lea
insl
adcl
outsl
fldcw
adc
push
jbe
mov
xor
inc
dec
cmp
iret
jle
lods
das
out
call
int3
cltd
push
pop
roll
mov
jne
push
aas
dec
into
testl
es
test
in
xlat
xlat
sti
mov
jbe
jns
imul
inc
or
icebp
sub
aam
mov
mov
inc
sahf
ficompl
mov
mov
dec
jmp
push
rcrl
jge
shrb
xlat
pop
popa
inc
pop
std
inc
ljmp
mov
imul
out
xor
icebp
rolb
jno
xor
xchg
adc
rclb
scas
mov
sub
imul
cmp
testb
inc
int3
mov
lods
sub
mov
ljmp
cmp
in
add
push
ds
xor
add
pushf
in
lock
xlat
inc
mov
dec
fldenv
cwtl
xchg
or
mov
sarb
repnz
dec
cmp
leave
stos
or
fdivs
mov
pop
mov
xlat
subl
inc
xor
inc
mov
mov
data16
insb
shl
push
in
push
cmc
adc
mov
movsl
fcmovnu
in
jne
push
test
gs
cs
pop
fcompl
imul
sti
jmp
sar
popa
jle
sub
push
hlt
xchg
loop
inc
ss
popa
jae
mov
in
push
sub
dec
dec
jne
cmpb
in
mov
insb
mov
mov
lock
xor
push
sbb
outsl
pop
aas
push
imulb
test
xchg
roll
in
int
xor
mov
add
xchg
out
test
xchg
and
inc
rclb
mov
jl
bound
int3
or
jb
in
ja
loopne
pop
push
mov
sub
movb
daa
push
das
lock
rcll
xchg
inc
push
push
mov
push
int3
mov
xor
mov
scas
sub
gs
ret
push
dec
pop
loopne
popf
outsb
cltd
js
mov
sti
addr16
pop
sbb
out
ret
ljmp
jecxz
mov
dec
stc
adc
popa
jbe
ds
xchg
sbb
jle
rolb
xor
addr16
inc
mov
xor
sbb
out
sbb
aas
sbb
div
stos
xchg
push
inc
add
push
sbbl
dec
mov
addb
xchg
je
roll
out
dec
dec
cli
sahf
insb
insb
sbb
xchg
cmpsl
mov
std
mov
sub
out
iret
arpl
sarb
add
adc
push
lahf
je
mov
popa
jg
fs
jns
adc
jg,pn
lock
mov
and
jo
inc
in
inc
fnstsw
dec
daa
std
xchg
das
cmc
ss
inc
or
sub
jmp
push
pop
add
add
cmp
outsl
std
add
add
push
stos
sbb
aas
cmp
mov
push
inc
movsb
pop
xor
popf
cmp
fldl
mov
adc
pop
mov
jecxz
andb
and
add
negl
test
cld
mov
pop
mov
mov
xchg
aas
sbb
into
mov
jnp
out
sub
push
pop
rep
cltd
jg
ljmp
mov
lods
adc
ljmp
inc
xlat
ljmp
cmpsb
add
es
pop
inc
lcall
in
push
add
gs
stos
adc
leave
xchg
or
jbe
cmpsb
test
dec
ss
insb
mov
clc
sbb
xchg
jmp
fucomp
test
popf
cmp
dec
and
cwtl
int
pop
mov
outsl
mov
dec
pop
subl
xchg
icebp
sbb
scas
push
dec
shll
xor
in
fwait
in
addr16
add
push
sub
orl
adcb
push
dec
push
and
mov
add
adc
sbbl
pop
lock
fmuls
nop
sbb
repnz
mov
divb
test
mov
test
cmp
imul
cwtl
mov
xor
sbbb
fadds
sub
test
mov
test
psrld
lahf
fwait
cmp
mov
jecxz
cmp
shll
mov
sbb
jl
add
lcall
imul
test
cmp
mov
add
cmp
imul
cli
pusha
and
int
sub
or
inc
push
cmc
test
and
aad
cmp
inc
and
mov
pushf
sbb
pop
cmp
gs
inc
push
inc
and
leave
lahf
or
loopne
lret
rcrl
insl
adc
lret
mov
xor
and
call
push
cmpl
int
pop
sbb
fwait
jmp
lods
aaa
jb
inc
cmc
fsubrl
inc
mov
dec
repnz
add
dec
push
jo
xor
pushf
into
ljmp
jecxz
xchg
mov
push
add
data16
cmp
das
call
pushf
out
sbb
sti
dec
jp
idivb
sbb
daa
movsb
cmp
imul
inc
jb
mov
jge
adc
insb
in
mov
jno
je
test
repnz
bnd
sbb
sbb
arpl
fadds
in
ss
push
xchg
mov
jecxz
adc
pop
lea
mov
mov
sbb
ds
popa
cmp
mov
es
jno
mov
nop
hlt
add
or
add
inc
cli
pop
addr16
push
pop
and
dec
adc
mov
xchg
out
pusha
fildl
fcmovne
inc
pop
fs
fadd
insl
cwtl
adc
xchg
hlt
pop
shrl
jecxz
clc
je
or
xor
sbb
and
aad
gs
loopne
outsl
jg
jge
sub
sub
cmp
dec
inc
pop
mov
fwait
adc
mov
dec
scas
ds
jle
cmpb
jo
adc
sub
sbb
shrb
jg
mov
or
in
sahf
in
mov
and
cmp
out
adc
jbe
insl
loop
popf
xchg
daa
add
sub
daa
sbb
pop
jmp
sub
mov
jmp
sarl
fstl
aam
sub
lret
into
sub
pop
mov
dec
repnz
mov
leave
adc
push
push
in
add
enter
and
or
inc
sub
mov
fiadds
add
xlat
les
cmp
mov
stos
movntq
out
aad
mov
push
mov
push
xchg
dec
and
mov
add
shrb
lcall
dec
pushf
cs
mov
data16
lock
mov
mov
or
rcrb
xchg
adc
xlat
jmp
inc
xor
dec
jmp
lret
pop
sbb
sub
sub
jg
push
xchg
jnp
testb
pop
icebp
sub
ss
or
jb
incb
hlt
pop
bound
lret
aaa
push
loopne
or
cli
xchg
jge
inc
sbb
imul
and
pop
add
outsb
cli
ret
test
add
test
xchg
cmp
push
xlat
movsb
cwtl
add
imul
cmp
push
xchg
add
dec
int3
cs
cmp
gs
push
sbb
std
mov
inc
icebp
cmc
idivb
call
data16
fs
sarl
nop
das
mov
sbb
clc
jo
leave
sar
pop
adc
mov
jge
lahf
inc
ja
stc
pusha
mov
mov
mov
or
pop
js
adcb
add
test
das
lret
loopne
loope
sarb
in
fstl
mov
push
mov
test
cmovl
mov
in
or
stos
mov
rolb
sahf
inc
dec
jp
push
cmp
cwtl
das
xchg
and
outsl
lret
jle
cmp
pusha
sti
mov
lds
xchg
test
cmp
xlat
mov
cld
mov
jp
negl
dec
mull
pop
jl
das
push
inc
add
test
dec
adc
dec
lret
clc
aam
lea
mov
xchg
and
dec
adc
sub
cmp
mov
jp
push
push
aam
jae
jns
pop
lods
xor
adc
mov
cwtl
popa
lea
aaa
mov
inc
shrl
js
sarl
addl
xchg
adc
jle
in
call
loopne
test
add
out
push
dec
dec
adc
cmpl
insb
stos
push
fildll
in
adcb
xchg
xchg
addl
and
mov
out
scas
mov
add
ja
jp
int
cs
outsl
enter
add
push
iret
insb
imul
imul
push
popa
loope
js
jb
or
popf
out
ret
clc
mov
inc
jp
shlb
mov
popf
dec
dec
mov
pop
xor
test
movb
cmc
addr16
pop
loopne
fdivrs
push
out
add
push
cmp
popf
mov
neg
into
test
in
add
les
mov
test
mov
cmp
mov
icebp
cmpsl
sbb
aas
fbstp
iret
sub
test
test
test
ljmp
fistps
jg
pushf
mov
jne
stos
insl
je
sbb
loope
cmpsb
pop
xor
dec
xchg
pop
inc
fistpl
rcrl
dec
lods
or
ffree
cmp
andb
lcall
mov
inc
push
pop
das
inc
imul
xor
cmp
ljmp
imul
lahf
cmp
repnz
shll
xchg
jbe
mull
dec
dec
sbb
xor
pop
push
fldcw
cltd
fnstsw
testl
cmp
mov
jne
outsl
xchg
addr16
mov
xor
add
shrl
out
pop
pusha
mov
mov
inc
xchg
mov
cmc
lcall
inc
scas
rorb
cmp
insl
jnp
in
xor
sub
mov
stos
push
cwtl
pop
cmpsl
sub
loope
sbb
into
pop
jnp
cmp
repz
adc
jno
lret
sbb
lcall
repnz
cmpsb
dec
adc
add
pop
sub
add
mov
sub
push
pushf
rclb
cvtps2pd
jne
dec
lahf
cmp
inc
std
mov
out
xor
or
push
add
sub
mov
cmp
dec
or
mov
test
leave
ds
jae
dec
clc
mov
nop
pop
aam
int
mov
out
div
add
jecxz
out
inc
fdivs
xor
mov
aaa
ljmp
cmp
call
shll
mov
and
jle
push
lahf
das
add
xor
jno
sub
dec
add
mov
inc
cmp
in
fcompl
lcall
or
nop
das
stos
popa
out
icebp
dec
push
stos
inc
jecxz
cmpsl
imul
ret
enter
dec
adc
fisttpl
cli
subl
std
cli
jns
ja
shll
adcl
jmp
pop
and
cmp
cmp
cmp
or
pusha
popa
ret
lock
jecxz
cmpsl
adc
mov
add
aaa
cld
shl
push
mov
popf
clc
xor
in
dec
mov
jae
jmp
int
mov
aas
cwtl
pop
push
test
lods
scas
pushf
ret
push
cmpsb
dec
std
xor
cmp
push
add
jo
inc
repnz
xlat
mov
pop
sub
push
pop
test
ds
out
mov
jo
jmp
mov
dec
test
insb
call
loop
scas
sbb
or
int3
test
fwait
xor
scas
test
cmpsb
out
or
xchg
adc
into
sub
dec
push
and
xchg
in
loop
push
mov
enter
xor
cmp
pop
adc
lock
jb
push
fs
loope
fnstsw
es
mov
push
push
add
inc
fcompl
out
cmp
dec
loope
xchg
clc
mov
std
push
popf
iret
push
adc
mov
out
sbb
fcom
adc
inc
dec
mov
jle
daa
and
mov
cli
mov
imul
cld
aam
xchg
imul
dec
addr16
pop
sub
xchg
imul
push
dec
xor
mov
push
cmp
ret
pop
jnp
mov
std
out
xor
rclb
mov
pop
mov
add
movsl
jge
mov
pop
push
xor
cltd
imul
test
add
ret
outsb
aad
cmpsb
cli
add
mov
cmpsb
jnp
test
daa
xor
inc
test
mov
adc
mov
iret
cltd
pushf
nop
addr16
enter
sti
mov
pop
aam
jle
out
imul
pop
mov
xor
inc
dec
mov
popf
cmp
cmpsl
push
fs
pop
ret
addb
mov
pusha
adc
sub
xchg
xor
lock
mov
pop
push
mov
aaa
repnz
divl
mov
mov
leave
stos
shl
push
dec
pop
fadds
mov
addr16
push
and
mov
and
subl
addb
mov
adc
push
cld
or
push
hlt
rcrl
movl
gs
xchg
sub
jbe
dec
xchg
ficoml
arpl
fisttps
push
pop
or
mov
dec
aaa
xchg
pop
dec
pop
push
pop
aad
adc
je
lods
insl
mov
enter
mov
or
bound
xlat
aaa
cli
add
and
sahf
push
push
lds
lret
push
notb
xchg
jb
sbb
pextrw
or
mov
push
mov
out
out
cmp
sub
adc
mov
cmpsb
sti
test
rorb
rclb
jge
push
nop
js
fnstcw
push
xorps
test
push
sbb
jp
fistl
lea
xor
jae
subb
xchg
cmp
pushf
lods
or
sub
das
or
aaa
and
enter
pop
fcoms
in
xchg
sub
sub
in
rcr
in
pusha
cld
dec
iret
xchg
or
xor
rclb
and
cwtl
mov
cmpsl
ret
jg
cmp
int
mov
fisttpl
cmc
cmc
jecxz
cmc
cmp
je
mov
pop
push
push
xchg
dec
mov
sub
mov
xor
adc
sbb
or
popf
bound
gs
mov
xlat
lds
pop
push
dec
daa
filds
imul
in
sti
cmp
mov
and
mov
ret
lahf
push
xor
xchg
ljmp
sti
inc
push
adc
sbb
out
out
subps
jb
into
pop
mov
dec
fists
or
and
jg
in
jns
pop
jecxz
aaa
and
movsl
xor
jo
inc
lahf
lret
outsb
jmp
xor
and
inc
cmp
stos
gs
pop
cmp
mov
fnstcw
ret
add
sub
or
in
les
sub
shlb
pop
test
popa
mov
sub
add
ja
lcall
sub
notb
mov
imul
imul
data16
adc
pop
sub
stos
stos
mov
mov
add
jns
and
test
ljmp
mov
clc
dec
js
es
lcall
fldcw
arpl
popf
xchg
pop
push
aaa
outsl
adc
dec
aaa
dec
enter
sti
xchg
cltd
sbb
cmp
ss
sub
push
rclb
dec
mov
shr
popf
adc
mov
in
call
jae
movsb
aam
mov
das
jne
add
mov
push
jge
leave
inc
scas
or
cmc
pop
rcrb
in
leave
sub
pushf
jmp
stc
enter
sbb
mov
fs
cmp
xor
out
xor
cli
pop
les
loop
sub
into
loope
js
stos
mov
pop
pop
repz
add
inc
mov
mov
push
jae
and
cmp
sub
xchg
orl
cmpsl
jp
jl
scas
push
fcmovnb
mulb
cmp
aam
fmuls
std
ss
xchg
out
dec
pop
aas
push
sbb
fildll
adc
scas
xchg
dec
cmp
push
cltd
clc
inc
push
sbb
frstor
xchg
movsb
out
or
movsb
inc
js
dec
push
sbb
fildll
cmp
mov
adc
push
mov
out
push
cld
jge
jbe
jns
cmp
das
scas
or
clc
stos
pop
sub
mov
cwtl
sbb
and
gs
dec
lods
inc
pop
sbb
imulb
fcoms
jmp
icebp
pop
mov
xchg
sti
ret
mov
push
enter
fmuls
xchg
iret
idivl
pop
mov
ret
push
pop
shlb
rep
lcall
mov
mov
xchg
ljmp
hlt
loope
out
enter
std
out
pop
or
das
inc
mov
ss
cmpsb
dec
repz
mov
sarb
fucomp
add
mov
or
ds
xor
bound
cmp
sub
incb
mov
arpl
adc
mov
enter
xchg
inc
add
cld
jns
cmp
pop
xor
jmp
call
movsb
or
sti
xchg
xor
lods
hlt
mov
push
inc
lods
clc
aam
enter
test
pop
jns
enter
lds
jnp
mov
cmp
inc
xchg
out
enter
mov
and
xchg
and
in
dec
push
mov
sub
cmc
mov
data16
or
jne
rcrb
insb
movsb
ret
mov
sbb
call
out
mov
call
ljmp
cmp
xor
pop
mov
sbb
nop
add
sahf
ljmp
adc
pop
mov
adc
dec
add
xchg
addr16
sbb
js
jae
cmpsl
in
jecxz
push
jno
inc
pop
mov
jge
sti
mov
sbb
rep
cld
add
jl
mov
inc
pop
stc
dec
push
jns
ret
add
xor
cmpsb
stos
xchg
sub
push
leave
and
mov
add
xlat
sub
shl
icebp
ljmp
pop
cs
dec
dec
jp
push
pop
mov
fisttps
sub
mov
orl
mov
jo
xchg
push
outsl
outsb
pop
cmpsb
rcl
lock
in
leave
mov
xlat
dec
add
pop
inc
adc
clc
xor
and
aad
push
inc
movsb
mov
adc
dec
mov
push
scas
push
leave
mov
mov
mov
pop
or
in
pop
jne
and
xlat
in
adc
loop
insb
cld
out
cmc
lahf
mull
xchg
data16
mov
insb
rcrb
or
cs
adc
jae
aam
jle
ljmp
mov
sarl
sbb
lcall
stc
sub
cltd
cmp
sub
int3
jne
cmc
movsl
jbe
setnp
loop
pop
fwait
cs
lock
xlat
jo
jb
jle
mov
or
cltd
mov
out
dec
lahf
and
lcall
jecxz
and
jb
decb
outsb
dec
arpl
out
pop
sbb
jge
push
std
push
sbb
pusha
cs
mov
mov
mov
fwait
or
adc
out
push
pop
push
dec
mov
mov
add
inc
or
lcall
popf
xchg
pop
push
pop
adc
out
add
das
sbb
xchg
out
pop
mov
insb
cltd
lretw
push
repnz
sbb
xchg
lret
sub
or
flds
loope
pop
push
mov
xor
stos
add
cmp
fdivrs
arpl
fisttpl
sub
mov
rorb
fcoms
cmp
sbb
xchg
and
out
es
mov
mov
repz
adc
lods
out
in
hlt
push
lock
shlb
mov
les
mov
xchg
inc
in
sbb
ss
add
movb
movsb
push
pop
mov
shlb
in
testl
test
loope
sub
mov
fcoms
insl
add
insl
mul
add
mov
data16
sar
xchg
and
mov
nop
js
inc
and
jb
into
es
es
es
mov
jo
imul
mov
shlb
push
imul
cmp
mov
sub
mov
jns
sar
pop
push
mov
adc
push
pop
jp
cwtl
pusha
dec
sub
sub
mov
xchg
sti
xchg
push
add
jb
adcb
xor
je
sbb
jecxz
jns
push
fimuls
arpl
inc
into
cmp
dec
dec
ljmp
mov
ret
dec
xchg
dec
sbb
rolb
shll
sahf
orb
stc
adc
mul
mov
sbb
push
xor
push
adc
test
lret
push
jp
pop
dec
loopne
fidivl
mov
cwtl
dec
mov
add
test
ss
cs
aad
fistps
xor
add
test
or
inc
or
inc
call
adc
testb
ja
mov
inc
jle
mov
add
roll
in
mov
xor
pushf
adc
xchg
loop
push
ds
test
or
sbb
cld
and
jle
inc
sahf
inc
push
xor
mov
sbb
sub
push
or
out
mov
daa
rolb
xchg
mov
lret
aas
pop
xor
ljmp
cmp
stc
lldt
add
fadd
sub
push
scas
xchg
cmpsl
jae
loop
add
xor
jne
xor
aas
jle
mov
pop
clc
repz
rorb
pop
pusha
pop
sahf
push
push
sub
pushf
ljmp
cmpsb
xor
mov
lds
mov
stc
push
cmpsl
sbbl
push
inc
jmp
outsl
or
push
or
lds
popf
mov
test
rol
aam
mov
or
add
cmpsl
aas
and
push
adc
fcmovbe
and
repnz
and
cmp
ja
sahf
and
jp
test
mov
dec
mov
jmp
pop
sub
adc
mov
adc
popf
lods
add
or
cs
push
pop
lcall
cmp
and
fsubs
pop
xchg
scas
lcall
adc
push
mov
decl
push
jne
xor
cmc
pusha
sbb
mov
mov
pop
cmp
mov
dec
xchg
cld
loop
jo
jae
mov
mov
sbb
je
push
lods
dec
lret
loop
dec
dec
mov
adcl
iret
stc
in
jmp
jmp
sub
cmp
aas
outsl
gs
loop
cmc
mov
cmp
clc
pop
les
mov
xchg
rorb
es
jbe
loopne
jl
in
pop
jnp
xor
cmp
inc
lods
mov
mov
lcall
lods
mov
gs
inc
loop
mov
icebp
callw
loope
popa
mov
xchg
sahf
dec
xor
jne
fwait
data16
push
inc
mov
adc
cs
addb
adc
push
in
push
ret
fcompl
fmull
test
inc
push
cs
mov
dec
inc
test
mov
repz
mov
adc
stos
cld
cli
xrstor
add
inc
sbb
and
jle
mov
aam
hlt
adc
out
movsl
loopne
testl
add
ret
pop
cld
add
lods
das
or
push
mov
pop
cmpsb
inc
sub
push
lds
test
hlt
xor
imul
push
shrl
push
addr16
fwait
jnp
pop
jle
les
lds
inc
mov
and
push
fisttpll
xor
mov
add
xchg
aas
lea
cli
adc
setg
out
adc
rorl
mov
mov
test
push
insb
cmp
hlt
daa
or
dec
sbb
lock
pop
adc
shl
xor
ret
fs
xchg
lcall
sub
ret
cmp
and
dec
mov
add
mov
fwait
aam
sub
dec
fsubs
lret
stos
inc
ss
sahf
and
mov
push
leave
add
mov
cmpsb
fisttps
jbe
aad
leave
fisttpll
lcall
test
lcall
sbb
xchg
hlt
daa
clc
jae
sbb
mov
ja
or
xlat
outsb
push
stos
pop
fdivs
cld
adc
push
mov
lock
push
add
into
sub
adc
add
xchg
sarl
xchg
aas
pop
mov
adc
jge
iret
lods
ret
push
push
sahf
or
jg
add
ja
mov
cmpsl
outsb
or
lods
es
ja
cwtl
xor
adc
ss
insl
sbb
fs
dec
lahf
bound
or
push
xchg
cmpsb
jl
or
push
mov
stos
call
loope
cmp
shlb
and
loop
push
imul
or
jae
mov
popa
push
add
mov
mov
xchg
lds
push
sarl
or
mov
mov
imul
popf
mov
push
int3
bound
insl
sbb
pop
test
fidivrs
loop
mov
mov
fnstenv
xchg
dec
iret
shrl
sbbl
pop
ret
pop
adc
loop
imul
cltd
mov
test
scas
sarb
sub
cltd
in
cli
jg
add
faddl
popa
pop
and
sbb
add
popf
fidivs
and
daa
and
in
pusha
mov
lock
jmp
sbb
push
xchg
and
popf
sub
sbb
xchg
push
lret
inc
push
dec
xor
addr16
cmpsb
scas
test
outsb
pusha
ss
out
stos
pop
test
sti
and
inc
inc
in
aas
xor
adc
dec
dec
cmp
mov
and
pop
or
and
mov
dec
and
rcl
add
xchg
push
scas
shlb
dec
push
bnd
ret
jbe
cmpsb
rol
insb
mov
jb
cli
loop
cs
es
popa
xchg
adc
cmp
movsb
push
lods
and
test
cmp
fsubs
jecxz
mov
loope
adc
movsl
or
clc
mov
xor
loopne
jb
xchg
pop
fsubr
mov
stos
test
push
and
cld
xor
pusha
adc
inc
inc
imul
push
leave
fldcw
jno
mov
test
sti
icebp
mov
push
hlt
imul
mov
jge
test
out
paddsw
sub
xchg
ds
pop
mov
xchg
lret
cli
sbb
inc
push
mov
mov
scas
rcr
pop
mov
jne
test
jns
xchg
clc
mulb
sub
mov
inc
aaa
pop
dec
fwait
mov
adc
inc
and
xor
iret
jp
leave
in
and
dec
push
sbb
add
add
das
addr16
jl
ror
icebp
nop
pop
xor
xchg
cs
xor
aam
adc
test
sarb
jge
cmp
dec
addb
and
push
dec
pushf
fcoml
out
cmpsb
or
loopne
popa
or
mov
andl
and
push
pop
sbb
pushf
into
pop
lret
lods
jne
push
int
dec
cltd
adc
scas
adc
mov
inc
mov
fstpt
pop
enter
inc
xorl
test
leave
xchg
aas
sub
mov
shld
pop
push
rorl
jle
leave
adc
xchg
pop
ss
aam
outsl
sti
sahf
es
mov
push
xchg
out
sub
js
mov
lods
dec
loopne
cmpsb
stc
pop
gs
xlat
cltd
pop
cld
cmc
sti
ja
jne
and
jp
pop
sub
mov
push
pop
and
mov
stos
inc
popf
out
sub
je
cmc
cli
xlat
and
iret
xchg
cwtl
mov
idiv
and
scas
and
mov
hlt
adc
jns
stos
sbb
ffreep
dec
pop
jb
push
pop
repz
popa
push
mov
pushf
pop
add
sbb
andl
lahf
insl
or
pop
mov
push
adc
fldlg2
stos
sub
mov
popf
int3
decl
lcall
notl
insb
roll
jb
rcl
scas
mov
popf
data16
sbb
jne
and
inc
and
mov
es
push
rorl
movsl
lret
fsubl
stos
ret
xor
ret
fstl
mov
mov
stos
out
pop
mov
addr16
and
and
shrb
adc
inc
mov
lock
inc
shll
mov
scas
mov
test
ss
lods
mov
imul
addr16
jl
testb
cmpsl
add
out
lock
mov
rorl
popa
les
pop
sti
out
int3
mov
es
shll
add
dec
mov
dec
cmc
inc
rclb
xchg
std
jo
ret
in
or
pop
pop
sahf
mov
ret
dec
pop
sub
icebp
jb
insl
stos
inc
hlt
ljmp
adc
lods
dec
in
jle
icebp
or
hlt
inc
sti
mov
insb
add
lahf
adc
mov
stc
lea
roll
jbe
in
pop
cmc
xor
outsb
cmp
pop
mov
js
scas
adc
or
jnp
xor
cmpsl
sbb
add
clc
xor
or
adc
ds
xchg
xchg
aaa
mov
add
push
icebp
pop
cmp
adc
inc
jmp
daa
testb
testl
pusha
pop
push
lock
arpl
lret
in
push
jecxz
jcxz
mov
mov
sub
aaa
jbe
cs
int3
sti
fldcw
dec
and
stc
push
sub
xor
call
xchg
sbb
inc
or
pop
aas
and
call
lret
mov
pop
aas
out
inc
stc
or
sar
lcall
test
sbb
js
addb
call
mov
popf
and
fimuls
xchg
testb
mov
mov
sbb
jno
and
js
cli
xor
pop
sbb
adc
adcl
addr16
jle
daa
lahf
cmp
lahf
popa
fsubrs
jecxz
sub
out
std
push
das
xchg
push
and
mov
scas
imul
cmp
dec
push
enter
jns
sub
loop
clc
std
pop
pop
movsl
mov
and
cmpsb
fimull
mov
lahf
ror
lds
pop
cmp
xorl
sbb
push
mov
sub
jmp
adc
fimuls
pop
lods
mov
sub
mov
scas
rorb
mov
push
into
mov
pop
push
fidivl
aaa
dec
add
lahf
std
xor
push
jle
mov
insb
pushf
mov
or
test
add
mov
push
sbb
and
sar
xchg
repnz
sbb
in
push
clc
mov
in
xchg
jbe
es
xchg
mov
das
inc
xchg
sti
add
sub
test
imul
fsubrs
stc
imul
push
jecxz
xchg
cmp
cld
or
data16
mov
je
filds
sahf
or
cmp
cmovp
push
hlt
sub
add
add
push
lcall
popa
pop
mov
pop
add
in
je
push
cli
imul
call
mov
loopne
add
inc
inc
adc
cmp
js
pcmpeqw
xor
in
mov
fistps
imul
cld
mov
cs
pushf
pop
inc
call
lcall
in
mov
jnp
lock
mov
cld
imul
clc
enter
or
movsl
xchg
adc
xchg
in
movsb
pop
cmp
ret
nop
add
xchg
adc
xor
push
jb
pop
push
dec
mov
popf
xchg
cmpsb
aam
lods
stc
cmp
dec
inc
lahf
vpavgb
mov
add
cmpl
mov
lods
daa
dec
dec
call
fwait
xor
mov
or
mov
imul
mov
imul
cmpsb
and
decb
pop
cwtl
jae
out
and
fdivrs
sub
pop
aad
cli
out
jo
sahf
pop
mov
jbe
add
sub
or
and
push
sbb
orb
lods
push
cmp
mov
orl
xor
sub
cli
shll
push
and
movl
push
fadds
imul
pusha
xchg
jae
aam
movsb
mov
loopne
pop
adc
aad
movsl
inc
enter
mov
mov
push
pop
mov
push
cwtd
negl
nop
outsl
shrb
fxch
mov
add
in
fcompl
xchg
xchg
sti
flds
push
dec
pcmpeqw
sahf
cmpl
gs
cmp
rcl
cmp
inc
notb
cmpsl
stc
shrl
mov
mov
mov
sbb
add
jecxz
jbe
mov
cmpsb
mov
lret
xchg
movsl
jecxz
aad
imul
gs
xchg
pushf
sbb
mov
std
sbb
cmp
and
lahf
jecxz
mov
xchg
push
pop
xor
loopne
fmull
adc
sahf
and
imul
ret
sbb
fstl
pop
popl
outsl
pop
mov
cmp
decl
mov
push
in
xor
xchg
imul
jecxz
xchg
add
iret
scas
pop
adc
test
mov
xchg
roll
jge
mov
dec
xchg
fs
test
inc
notl
pop
dec
xor
jl
jb
fstpl
loop
push
cmc
mov
pop
call
jle
in
popl
mov
and
push
jae
fldcw
into
xchg
jns
dec
mov
push
mov
repz
sbb
stos
sub
xor
popa
aam
cmp
push
mov
repz
das
and
or
or
push
add
enter
add
lea
or
outsb
xchg
sahf
or
sub
cmp
dec
push
fisubs
jae
inc
aad
ja
push
in
add
xor
pop
and
dec
sub
dec
push
dec
lods
popf
xor
lahf
jge
dec
loopne
inc
and
ret
addr16
pop
push
nop
sbb
push
outsb
adc
xchg
xchg
push
inc
mov
cld
test
cmp
subb
lret
xor
stos
inc
xorb
cmp
push
pop
test
call
lret
jmp
dec
testb
repnz
cmc
push
lds
fisubs
inc
pop
sub
cmpsl
lea
inc
cmp
imul
xor
sub
xchg
nop
sbb
or
xchg
mov
cltd
addb
jge
xor
dec
mov
add
xchg
popf
nop
mov
xchg
push
aaa
xlat
jl
jecxz
out
clc
in
cli
icebp
jb,pn
dec
and
push
mov
xor
in
cmp
mov
call
imul
subl
pop
rcrl
ffree
xchg
inc
insl
aaa
pop
pusha
mov
jnp
push
push
rcll
mov
sub
or
fmul
loop
and
cltd
xor
cmp
mov
mov
or
fcompl
inc
lock
aam
mov
js
js
cmp
fisttpll
mov
pushl
enter
dec
lret
insb
mov
jecxz
pop
insl
in
xor
jecxz
sbb
imul
lahf
xor
sbb
add
sub
jle
int
stos
or
je
loop
lds
lea
jne
pop
cmp
jbe
cltd
cmpsb
in
cmp
lods
dec
fld
pop
cmp
mov
sahf
cmp
roll
cmp
ss
mov
xchg
adc
sahf
fistpll
bound
cld
test
je
sub
loope
mov
cmpsb
xchg
xor
mov
push
and
stos
add
dec
dec
movsl
mov
sti
pushf
jae
push
xchg
sbbl
cltd
mov
or
movq
out
aad
std
mov
imul
sub
ror
mov
insl
out
or
mov
mov
rol
inc
ret
add
addr16
lods
mov
jl
and
fwait
movsb
adc
pop
push
jecxz
hlt
clc
outsl
adc
or
jo
std
and
jne
mov
mov
xor
mov
fwait
pushf
fidivs
gs
mov
faddl
mov
movsl
mov
call
loop
shlb
lea
cmpl
pop
jge
insl
rorb
neg
jno
shrb
jmp
stos
sub
jmp
dec
sub
es
mov
rclb
mov
add
out
cwtl
sbb
fldcw
mov
xchg
ljmp
std
sub
mov
mov
fstps
push
jae
xlat
push
shrl
lahf
fcomp
lahf
and
aas
pop
sub
daa
stos
cs
mov
cwtl
movsb
mov
call
cld
jbe
pop
dec
or
sti
cmp
popf
movsb
lret
jge
pop
mov
sub
xchg
lds
cmpsb
mov
mov
sub
insl
in
sbb
mov
xchg
rorb
mov
mov
repnz
push
push
adc
arpl
popa
mov
shlb
orl
popa
and
insb
scas
and
cmp
dec
push
adc
hlt
addr16
lds
sub
lods
push
and
lea
inc
or
dec
mov
push
rcrb
daa
inc
ds
mov
sbb
inc
inc
movsb
fcmove
jnp
add
push
out
andl
jbe
fimuls
cmp
dec
bound
or
push
bound
adc
bound
jmp
or
pop
xor
push
xchg
adc
xlat
lods
or
pop
mov
xor
jp
scas
sub
dec
push
dec
xchg
addl
les
lea
std
lea
into
mov
jmp
std
daa
pop
and
test
loope
out
pop
hlt
mov
push
ja
pushf
xor
outsl
je
mov
ljmp
push
popa
in
roll
pop
scas
push
pop
xor
pop
repz
sti
cmpsb
sahf
lods
aam
arpl
data16
je
push
addb
add
int
aad
test
repnz
jo
addl
or
push
mov
aad
jo
cld
sub
inc
js
dec
or
sub
mov
shlb
sbb
jne
sti
push
add
sarl
push
int
fistps
cltd
daa
xchg
data16
jbe
add
pushf
push
xchg
push
roll
in
jmp
das
incl
jno
pushf
or
push
cmp
lods
push
lock
out
and
nop
clc
pop
or
fucom
mov
aas
les
int3
jbe
popaw
scas
enter
lea
fwait
adc
xlat
mov
imul
push
add
data16
std
mov
shl
mov
repnz
mov
aam
push
jns
sbb
pop
xor
and
std
mov
jl
jns
pushf
pop
fldenv
int
out
int
outsl
adc
imul
hlt
sbb
xchg
fsubrs
les
mov
aas
inc
mov
xor
jl
insl
dec
mov
icebp
sahf
stos
ja
int
sbb
insl
jns
push
fidivrs
xor
shrb
scas
sub
and
cmp
stc
fstps
push
mov
popf
mov
daa
jne
and
rcll
push
dec
ret
add
adc
push
xor
or
cmc
out
pop
cld
jo
mov
cmp
xor
ja
adc
test
push
cmp
mov
mov
push
fnstenv
cmp
pop
cli
and
sub
adcl
out
adc
cld
and
dec
inc
push
dec
inc
ffreep
mov
lods
gs
data16
push
jno
mov
imul
jmp
sub
or
push
push
std
outsb
or
sub
mov
jecxz
jp
push
es
clc
lcall
sbb
mov
arpl
push
sub
repz
sarb
sti
js
xchg
push
ja
insb
test
aas
test
pop
loope
mov
fwait
lret
mov
popa
mov
fnsave
stos
ss
cmpsl
jae
lcall
insb
iret
xchg
mov
jne
mov
sub
and
adc
mov
rcll
bound
in
cli
mov
mov
iret
add
add
mov
outsb
cmp
lock
sub
test
adc
sub
mov
pop
stos
les
xchg
xchg
xchg
cmp
fwait
cmp
xchg
inc
andb
leave
stc
mov
push
ret
xchg
jl
outsl
xchg
pop
movsb
cmp
pushf
sbb
dec
mov
or
andl
cmp
pusha
lret
add
cmp
dec
fiadds
push
repz
add
push
lea
mov
int
jae
xlat
add
dec
icebp
or
dec
iret
mov
xchg
or
mov
mov
scas
jb
push
push
test
add
loopne
cwtl
pushl
pop
fiadds
push
xchg
das
inc
decb
inc
add
xor
adc
inc
clc
cmp
out
fs
mov
jb
jge
xchg
repnz
jg
outsb
outsl
lock
lahf
cmp
loopne
cmpsl
xchg
mov
dec
xchg
push
xorl
push
loop
push
out
dec
punpcklwd
mov
push
arpl
xor
mov
test
xchg
in
mov
mov
sub
push
aam
push
popf
jle
xchg
jmp
sbb
and
mov
mov
movsl
test
mov
push
pop
push
icebp
idivb
test
fcoml
mov
scas
jge
jp
push
dec
loopne
cmpsl
push
push
sub
xchg
out
pop
adc
fistpl
lock
clc
mov
repz
test
hlt
sti
flds
push
xchg
add
in
ljmp
sbb
mov
or
xlat
mov
cmpl
sbb
inc
lcall
sub
jnp
cmp
out
ss
lret
or
ljmp
mov
pop
cmpsl
mov
inc
push
les
cmc
xchg
lods
cmc
out
sbb
inc
bound
push
lods
aaa
pop
adc
arpl
stos
sbb
jmp
add
sub
movsb
stos
pop
aas
mov
push
xchg
push
adc
push
icebp
xor
cmp
mov
lods
les
lahf
push
pop
cmpsl
lahf
add
fldenv
inc
test
sbb
outsb
sbb
mov
sbb
dec
push
enter
lcall
jne,pn
mov
sub
hlt
loopne
cmp
xlat
fmull
gs
adc
test
cmp
andl
arpl
lods
jne
push
movsl
pop
mov
movsb
xchg
xor
sbb
fstpl
adc
cwtl
mov
icebp
mov
inc
fstps
push
jbe
or
jle
fildl
mov
mov
lds
jo
push
push
adc
xlat
fs
and
arpl
mov
dec
add
inc
add
add
or
movl
pop
push
push
or
dec
int3
idivl
jb
shll
xor
xchg
mov
or
sub
out
mov
sbb
xchg
jmp
test
stos
xor
cmp
and
mov
or
lcall
jp
jmp
push
xchg
iret
pop
sbbb
popf
mov
arpl
mov
hlt
das
xorl
adc
shl
fisubrl
imul
xor
jecxz
xchg
nop
out
pop
or
filds
in
ret
xchg
pushf
adc
inc
aam
xchg
enter
sbb
dec
pop
out
fildl
sti
clc
stos
repz
add
mov
loope
xchg
fsubs
push
pushf
sub
pop
rcr
dec
dec
pusha
mov
add
jb
repnz
pop
pop
fisttpl
or
lods
stos
cmp
xor
test
cmc
mov
fisttps
stc
lahf
jge
sbb
dec
std
mov
ss
and
inc
loopne
popf
lret
loope
jl
ljmp
dec
inc
les
jo
ficoms
mov
repnz
hlt
cmp
fsubrl
fcmovnbe
daa
pop
loope
lods
lret
jno
clc
jbe
xchg
leave
idiv
mov
xor
ret
xchg
ficoml
add
mov
sti
push
xor
aas
mov
mov
std
xchg
push
jmp
and
mov
or
inc
sarb
fstpt
cwtl
dec
int
dec
mov
in
lods
mov
cmp
dec
insl
sti
cmp
ret
pop
xor
test
cmp
movsb
lcall
lcall
dec
pop
inc
scas
xor
mov
adc
jl
sbb
xchg
or
sti
or
jo,pt
jns
push
pop
inc
test
sub
mov
pop
inc
sub
jmp
das
jne
pop
or
push
push
sbb
dec
cmp
jno
das
push
dec
aam
out
mov
and
push
mov
jo
les
jbe
jle
mov
rorb
pop
movsb
mov
ljmp
push
pop
ret
adc
inc
pop
test
clc
xchg
mov
xchg
mov
sub
and
or
mov
rcl
or
inc
mov
sbb
sub
sub
mov
iret
das
stc
cli
add
push
mov
mov
push
lea
xchg
jg
fdivrl
mov
jb
mov
jge
sub
bound
mov
sub
pusha
mov
push
mov
sbb
daa
movb
and
xchg
aaa
sbbl
jle
sbb
ret
popa
adc
rcl
xchg
std
add
adc
mov
popa
xchg
loope
inc
push
push
xlat
xchg
arpl
mov
sarb
jg
sbb
fstpt
imul
mov
add
pop
add
and
data16
imul
xchg
xor
and
hlt
enter
rclb
pop
xchg
addr16
addr16
es
mov
ds
movsb
mov
inc
jo
or
mov
pop
insb
mov
loopne
clc
inc
scas
idivb
mov
loop
inc
fwait
mov
push
or
cltd
fsts
lret
inc
je
shll
fwait
or
jg
gs
in
lahf
sub
push
jp
shl
cmp
or
jns
mov
mov
scas
pop
pop
sbb
popf
daa
xchg
mov
mov
cmp
push
mov
jae
cmp
call
mov
mov
adc
in
jnp
in
call
xchg
cmpsb
scas
push
inc
add
sub
outsb
push
fstps
add
mov
push
jno
sbb
sbb
push
and
cmp
push
loopne
inc
pushf
andb
push
mov
loope
mov
add
ja
into
add
lods
sub
mov
es
add
xchg
ljmp
leave
pop
jmp
mov
mov
mov
fcoms
testl
push
and
mov
xchg
fs
push
insb
fstp
mov
cmc
mov
daa
add
jl
push
push
into
rcrb
mov
lock
jp
imul
push
out
mov
div
lods
rcll
xor
xor
sbb
movl
cmp
sbb
adc
pop
push
arpl
push
or
cmp
cltd
mov
imul
push
movsb
sub
inc
imull
dec
adcb
lahf
outsl
pop
pushf
and
fmul
fisubrs
dec
test
xor
fildll
jae
mov
and
addr16
fwait
cs
fcomps
sub
dec
jb
sub
jno
out
pop
in
jl
fwait
imul
adc
jp
ljmp
imul
fcomps
mov
jbe
das
push
push
lods
scas
fistps
imul
jb
sub
sti
mov
rcll
cmp
cmp
lock
push
pop
nop
ss
shrl
aam
add
pop
jne
add
in
push
jo
adc
nop
mov
scas
aaa
in
sbb
insl
jmp
mov
xchg
push
push
push
aam
mov
aad
mov
push
fwait
cmpsl
mov
adc
inc
push
ficomps
push
loope
cwtl
lret
xor
or
or
mov
pushf
gs
jmp
mov
pop
andl
mov
mov
clc
fcomi
cmc
fimull
repz
insl
cmp
xchg
insl
ljmp
xor
push
jne
out
sub
mov
push
outsl
cmp
xor
add
fadds
or
icebp
sub
scas
xor
push
fildll
das
and
dec
xchg
fs
or
mov
push
mov
sub
push
test
jae
cmpsl
scas
pop
aad
mov
out
or
cmp
inc
repz
or
leave
out
dec
addr16
dec
push
mov
ja
mov
mov
call
xchg
pusha
fs
mov
jne
lahf
mov
xor
pop
stos
jno
stos
xor
std
je
push
outsl
rcll
mov
cmp
pop
loop
insl
add
dec
cwtl
aas
call
popa
jle
sub
adc
pop
test
or
or
mov
div
dec
mov
orb
jle
test
push
ja
fdivrs
leave
fcmove
push
cmovae
mov
mov
cld
loop
mov
inc
ffree
ja
xchg
sbb
cmp
loopne
nop
movsl
push
popf
mov
or
adc
cwtl
jg
rorl
push
in
leave
jns
gs
fs
lret
test
aam
jle
test
xchg
push
les
xor
sub
and
scas
imulb
rclb
adcb
jno
sarl
inc
shl
push
cmpb
cmp
mov
rorb
mov
or
cli
cmpsb
cld
cmp
sarl
cmp
xlat
enter
xchg
bound
mov
mov
enter
fpatan
test
sahf
dec
mov
sarl
popa
xchg
outsl
cltd
sub
xor
xchg
mov
jo
push
jg
push
xchg
adc
loopne
cmp
xor
mov
sub
jecxz
aas
rclb
test
popf
mov
aas
mov
mov
bound
getsec
gs
push
outsb
das
mov
push
push
xorl
nop
aas
mov
or
xor
xchg
push
insb
gs
sbb
adc
rcr
xor
insb
jns
mov
and
popf
pop
push
leave
or
hlt
sarb
adc
jne
or
jle
daa
and
mov
iret
and
sahf
int3
push
cli
push
ds
jnp
dec
xchg
sub
mov
sub
push
pop
jle
cmc
sti
repz
sbb
mov
inc
aaa
ja
pop
dec
aam
roll
xchg
mov
movsb
bound
shlb
sub
pop
push
mov
cltd
test
jp
dec
push
xor
lret
testl
jnp
les
push
leave
in
dec
mov
imul
das
arpl
les
jb
xchg
mov
xor
outsb
pop
sbb
mov
stc
fldt
mov
push
push
mul
add
cmp
out
mov
mov
sahf
sbb
cmp
push
repnz
orl
test
scas
adc
add
inc
test
cmp
cmpsl
lods
pop
mov
test
iret
shl
inc
dec
sub
addr16
xchg
movsl
or
jne
pop
jp
xchg
xor
mov
ret
push
push
test
sub
in
into
pop
pushf
xchg
cltd
push
lret
inc
rorl
and
loope
std
xchg
loope
cmp
mov
add
fs
cmp
mov
sbb
negb
add
lods
lahf
mov
es
call
lret
aaa
in
mov
adc
adc
mov
pop
aam
xor
pop
repnz
xor
xorb
js
and
mov
push
pop
mov
pop
add
das
data16
inc
lock
cmpb
adc
enter
sub
clc
call
dec
add
sub
cltd
aaa
jecxz
je
cli
stos
leave
je
push
inc
out
popl
xor
fs
fcmovnbe
xchg
inc
xlat
test
xchg
pop
pushf
add
mov
cmp
rolb
lods
pop
pop
aas
in
divb
inc
inc
ds
cltd
shrl
xchg
addr16
out
outsb
dec
lea
mov
out
jg
add
mov
xor
jns
adc
daa
sahf
mov
sti
out
jb
js
pop
lahf
adc
or
mov
testb
jo
dec
add
fsts
rorl
or
and
test
add
and
add
jb
push
mov
ret
pop
xor
push
or
in
dec
inc
mov
rorb
jbe
pop
sub
out
mov
inc
lret
jge
out
adc
sbb
inc
mov
cs
inc
fdivr
xchg
pop
mov
dec
das
orl
pop
in
inc
pop
mov
movsl
ss
xchg
dec
add
mov
jmp
lcall
xor
xor
jbe
mov
sbb
jo
mov
or
dec
cld
and
xchg
dec
es
pop
ret
inc
dec
inc
pop
enter
mov
xlat
pop
sbb
lret
pop
ret
sub
fmull
jnp
bound
adc
inc
and
movl
lds
ror
add
ret
mov
mov
pop
call
aam
lods
cmp
cwtl
and
pop
test
pop
xchg
push
cmp
subps
or
sarl
xchg
and
fisubrs
bswap
ficoml
xor
cmpsl
je
pop
fiadds
out
mov
outsb
jl
lcall
dec
lahf
push
jp
cmp
cmp
add
stc
mov
jnp
js
repnz
pop
inc
imul
sbb
sub
stos
pop
gs
jno
int3
jae
movsl
cmp
dec
mov
enter
add
mov
sbb
and
mov
dec
mov
ss
fs
insl
sbb
sub
fstpt
mov
insb
in
cli
and
push
in
add
lahf
inc
and
cmc
mov
jmp
mov
xchg
call
mov
adc
inc
pop
adc
lea
cmpsl
fmull
inc
xorb
mov
test
jecxz
imul
cwtl
adc
mov
mov
movsl
push
lret
jno
imul
pop
test
insl
cmp
jmp
jo
push
add
fcmovbe
mov
out
add
dec
sub
rolb
in
sahf
cmpsb
jle
push
repnz
inc
dec
mov
lahf
imul
ja
sub
pop
insl
xor
fs
int3
inc
inc
enter
cmp
and
lahf
lds
fwait
pop
sbb
mov
xor
in
out
ja
mov
adc
out
flds
jle
lods
adc
inc
mov
dec
arpl
ret
mov
add
gs
adc
loope
pop
out
pop
in
testl
pmaxub
bound
mulb
ds
fwait
call
daa
cmpsl
std
popa
or
mov
jmp
fimull
push
imul
xor
jg
icebp
push
mov
int3
ss
jge
cmc
dec
mov
xor
jo
das
std
les
inc
mov
enter
or
cld
cmpsb
mov
xchg
es
mov
cmp
mov
xchg
cli
vpminsw
sbb
push
sbb
les
xchg
cmp
inc
filds
mov
sbb
jbe
insl
lahf
mov
pop
xorl
cmp
fnstsw
or
xor
cmp
ds
mov
leave
jno
pushf
cwtl
jbe
dec
cmpsb
fiadds
add
lahf
mov
push
loope
test
pop
bound
xchg
pop
fdivp
fdivrl
sarb
decl
pusha
icebp
sahf
rorb
xchg
int3
sbbl
sti
and
xchg
ficomps
mov
adc
mov
aaa
push
jns
or
in
push
jmp
test
clc
fldt
xchg
push
xorb
xchg
sti
cmp
push
cmpsb
xchg
sub
xlat
stos
push
idivb
std
aaa
outsl
cli
jmp
push
fidivs
mov
bound
shll
push
out
and
adcl
jmp
mov
xchg
push
sbb
inc
out
add
mov
ret
cmpsl
push
ja
jmp
sub
sarb
cwtl
pop
ret
mov
bnd
mov
fdivp
test
xchg
inc
in
mov
dec
fdivrl
into
pop
pushf
cmp
out
push
adc
iret
sub
andb
cltd
push
int3
inc
mov
inc
xor
cmpsl
inc
push
push
or
repz
xor
leave
in
mov
dec
push
xor
mov
fadd
cmc
addr16
lret
and
push
jae
scas
sub
out
clc
adc
sahf
mov
lret
adc
cmpsb
movsl
lods
cmovs
in
divl
push
mov
mov
pushf
cmp
pop
and
adc
leave
pop
leave
sub
jge
mov
inc
xor
push
out
cmp
test
dec
scas
pop
or
out
mov
add
lods
xchg
in
cs
into
cli
xor
xchg
stos
test
lret
cmp
insb
movsb
mov
negb
adc
xchg
or
mov
and
in
imull
das
outsl
mov
jmp
loopne
stc
pop
cmc
mov
outsb
and
repnz
int
aas
lret
sbb
add
mov
inc
mov
adc
outsb
div
inc
pop
pop
es
add
mov
sub
dec
xor
in
jne
sarl
fists
dec
add
bound
imul
pop
inc
lahf
xor
fst
iret
iret
mov
pop
das
fs
mov
movsl
mov
add
mov
pop
int
dec
push
and
cmp
aad
mov
cmp
arpl
add
jle
jo
or
mov
push
mov
mov
pop
push
and
int3
mov
xchg
mov
sub
repnz
pushf
mov
pop
xchg
cmp
mov
sbbl
pusha
ja
ret
pushf
insl
or
fnsave
xchg
ljmp
das
flds
sbb
xor
call
dec
cs
std
sahf
cmc
loope
scas
dec
push
leave
add
inc
dec
xor
in
adc
push
inc
fstl
gs
xor
adc
scas
shl
inc
push
incb
mov
sbb
lret
jl
fs
inc
mov
dec
insl
jae
push
insb
dec
std
adc
jp
shrl
andl
mov
das
jbe
ja
cs
ja
ljmp
pop
nop
sbb
ret
outsb
xchg
inc
inc
xor
cmp
fisttpl
fsts
inc
inc
lock
loop
mov
popa
mov
mov
adc
xor
sbb
subl
push
and
ja
pop
fnstsw
movsb
push
adc
xor
dec
cmp
xor
ds
xor
mov
in
dec
int
mov
cmpsb
mov
adc
nop
or
cmc
test
push
mov
es
sahf
lds
xchg
or
data16
xor
cmpsb
ret
popl
lret
js
push
bound
fstpt
inc
clc
xor
in
cmp
into
insl
inc
nop
int3
fildl
inc
mov
mov
fmul
test
or
jle
js
mov
ljmp
push
scas
xchg
ret
in
bound
shrl
pop
pusha
cmp
mov
mov
sahf
xchg
inc
jge
dec
lret
loop
pushl
xor
xchg
and
scas
dec
stc
ss
test
scas
ds
xchg
fwait
into
jbe
mov
adc
adc
mov
mov
je
xchg
aas
sub
push
loopne
pop
or
ficompl
dec
dec
cltd
icebp
shll
or
push
scas
adc
and
shlb
jmp
mov
xchg
fsubrs
stc
ljmp
stos
cmp
psrlq
frstor
scas
js
aaa
xchg
pop
lahf
stos
pop
sbb
jmp
pop
xchg
fsts
scas
dec
push
jl
ss
adc
xchg
dec
stos
test
pop
movsb
jmp
es
cmp
pop
fmull
or
jne
sub
push
add
stc
jo
fwait
jmp
adc
cwtl
les
mov
sti
adc
loope
cld
iret
daa
dec
loop
sti
shr
inc
loop
mov
pop
xlat
xchg
mov
pop
arpl
mov
out
xchg
or
xchg
test
ds
or
push
scas
test
insb
sbb
mov
mov
imul
and
or
bound
sbb
inc
xchg
das
insb
aam
popa
sbb
mov
sbb
xchg
xchg
gs
nop
push
lock
push
push
lods
insb
rorl
or
rcrl
sub
out
cmpl
leave
rcrl
dec
out
fistl
fbld
stos
jmp
lcall
movl
imul
mov
js
inc
fs
and
dec
les
rcll
les
dec
sbb
push
arpl
les
lahf
dec
les
insb
mov
xchg
ficompl
mov
or
inc
inc
xchg
sbb
enter
lods
jno
loop
cmpsb
mov
jns
push
mov
cltd
dec
and
shrb
je
or
dec
push
lds
insl
adc
outsb
fistps
dec
inc
mov
sub
out
cmpsb
lret
into
or
popf
xchg
jl
lahf
rolb
not
shlb
stos
inc
nop
lock
aam
jg
jge
mov
hlt
and
mov
fwait
cltd
in
jo,pn
cmp
inc
cmpl
lods
in
repnz
mov
movsb
stc
ds
lret
cli
gs
rcrb
insl
push
es
into
mov
mov
adc
mov
ds
mov
inc
lea
subb
int3
xchg
sbb
push
or
dec
rcl
repz
cmpb
dec
aaa
adc
mov
mov
jo
vpshld
push
shlb
jb
fwait
pop
mov
sub
popa
ds
arpl
mov
push
or
fwait
jle
dec
shlb
dec
inc
std
pop
mov
mov
fildll
clc
inc
dec
outsb
mov
lea
and
pushf
pop
inc
pop
lods
add
repnz
adc
adcl
push
pop
and
or
jl
repz
repz
mov
jmp
nop
mov
lret
xor
in
xchg
in
pop
fistpl
sbb
pop
faddl
lcall
mov
mov
xchg
mov
mov
cmp
push
jmp
ret
fwait
dec
sub
dec
aas
inc
es
push
push
rcl
sub
movsb
in
mov
pusha
xchg
addb
lds
lahf
test
cmp
push
mov
adc
out
lock
loopne
mov
and
rolb
fsubrs
jg
mov
pop
test
push
inc
leave
int3
sub
int
jecxz
pop
hlt
mov
loop
out
hlt
add
mov
jl
xchg
jns
xor
ja
divl
push
sub
jle
rorl
js
rcrl
jecxz
repnz
imul
inc
fdivrl
pop
into
xchg
cmp
fldenv
and
dec
scas
xchg
mov
xor
lahf
or
mov
push
jae
pusha
cmpsl
test
push
or
inc
xchg
scas
jp
push
pop
jb
js
and
daa
rcrb
rolb
jb
bound
add
je
jle
mov
pop
lods
iret
sub
push
or
mov
lock
sbb
ljmp
data16
stos
mov
insb
out
mov
js
sub
sbb
cs
push
jecxz
sbb
sbb
jmp
push
popl
pop
mov
push
mov
pop
imul
fists
es
enter
lret
gs
notl
fisubl
xchg
xor
push
dec
cmp
dec
jmp
int3
inc
or
imul
and
xor
adc
mov
mov
pop
in
movl
xchg
cmpsb
das
lods
or
popa
lods
loope
xor
test
enter
fldl
dec
adc
xlat
cli
je
out
xor
or
stos
mov
xor
or
jo
mov
xor
shl
xor
es
out
mov
je
mov
push
mov
lret
push
mov
jg
xchg
mov
out
pop
aam
inc
mov
dec
loope
ret
lds
jle
in
or
pop
imul
inc
arpl
popa
mov
push
push
pop
cmp
sub
adc
jno
adc
push
jnp
mov
mov
adc
fcoms
stos
filds
insl
xchg
ja
jecxz,pt
lds
mov
fwait
lods
cmp
fwait
cltd
frstor
scas
and
inc
in
xchg
jcxz
jmp
mov
int3
inc
ret
scas
cmp
push
loopne
push
jo
push
fcomps
xchg
jns
cmp
int
std
pusha
push
or
stos
mov
jns
add
test
pop
dec
or
mov
in
add
ret
and
movl
ljmp
ret
jp
mov
dec
mov
push
push
mov
jne
sbb
push
movsl
or
sbb
sub
push
pop
into
subl
cs
and
mov
test
jmp
cmp
in
inc
and
or
jbe
jle
aas
mov
idiv
or
adc
dec
xchg
jb
push
sbb
lock
fidivrl
ja
mov
mov
popf
sbb
push
roll
xor
mov
mov
stc
ret
pop
mov
mov
sub
idivb
dec
mov
inc
sub
ret
stos
fstps
add
in
or
mov
pop
adc
out
adc
iret
aad
xchg
push
test
es
lods
xor
loopne
fdivr
pop
shrb
add
jnp
jmp
lock
mov
test
popf
repnz
sbb
add
inc
inc
adc
mov
lret
loope
dec
les
lock
and
xchg
sbb
in
sbb
sbb
mov
mov
enter
or
pusha
pop
ss
decb
xchg
push
lock
jb
sub
addl
popf
arpl
mov
ret
cld
push
mov
psrad
sub
rolb
sti
sub
pop
movsb
addr16
hlt
dec
cmp
xchg
and
pop
nop
jge
lret
ss
xchg
add
inc
lea
or
shr
rcrl
in
adc
fisttpl
sti
xadd
cmp
jmp
adc
mov
dec
sub
cs
lret
push
xchg
stc
std
test
ret
adc
mov
pop
mov
les
aaa
or
clc
lds
out
lds
mov
sub
add
adc
sbb
mov
fs
sti
sbb
aad
pop
xor
in
call
mov
xor
jb
pop
inc
aas
cld
jno
mov
js
mov
xchg
dec
add
daa
cmp
sbb
cmove
mov
stos
loope
sbb
aad
add
leave
sub
ret
aam
sub
mov
and
repz
jbe
push
add
sub
in
test
push
test
jae
hlt
aam
jb
loope
mov
dec
cli
jg
fsubl
in
jne
pushf
js
push
sbb
lahf
mov
ret
inc
pop
leave
in
aas
inc
dec
std
or
adc
sub
pop
lahf
sub
cmpsl
mov
mov
loop
insl
shl
jge
leave
ror
loop
xchg
pop
jge
out
xchg
adc
mov
push
sub
mov
scas
cli
movsl
jp
test
xchg
cmp
in
push
out
icebp
lods
addl
jmp
lds
cmp
in
jnp
xchg
ret
sbb
pop
mov
add
ret
xor
push
mov
shlb
cld
aad
inc
cld
mov
stc
cmp
stos
cmp
inc
sbb
sahf
fcompl
fimull
jp,pt
jg
aaa
sub
aas
mov
mulb
cltd
fmull
rcl
mov
xchg
mov
and
sbb
push
cmpb
xchg
ds
jb
xchg
insb
leave
clc
xchg
jp
outsb
and
xor
adc
lods
mov
ljmp
add
mov
mov
xor
mov
sub
bound
rcrl
xchg
rolb
repnz
and
out
jbe
fdivs
mov
add
jl
and
cmp
cli
out
cmpsb
pop
push
push
je
xor
sub
push
and
adc
cmpb
mov
aad
cmp
je
cmp
inc
adc
pop
cmp
jae
outsl
es
cli
push
shrl
dec
jnp
fadds
int3
jnp
dec
mov
mov
daa
mov
xchg
sbb
pop
fsincos
add
sbb
adc
lods
cmp
or
or
aaa
mov
push
mov
sub
scas
sbb
mov
jge
sarl
ja
add
cmp
fsubl
push
daa
fidivl
jmp
mov
dec
mov
push
jne
je
rcrb
mov
dec
xchg
fstpt
cwtl
pop
leave
nop
popf
jle
sahf
lea
inc
nop
sub
xchg
pop
cld
arpl
or
hlt
and
aas
jne
and
or
pop
lea
xlat
mov
xchg
cmc
test
cwtl
rcr
dec
jnp
mov
jnp
add
xor
into
loop
mov
add
xchg
bound
dec
imul
into
jmp
jo
rcll
lret
inc
cmc
adc
adc
sub
iret
cld
and
jbe
loopne
xchg
aas
jbe
push
or
sub
fcompl
js
jl
hlt
and
les
mov
adc
and
add
xlat
sub
xchg
push
sbb
std
les
xor
test
fwait
lahf
sbb
out
sarl
jns
add
leave
in
test
inc
mov
imul
int3
shl
and
push
ficoml
jg
or
push
inc
cmp
adc
es
out
fnstcw
cmpsb
xchg
dec
push
call
push
dec
test
faddp
push
push
or
test
mov
lods
xor
fsubrs
or
das
into
ja
mov
xchg
xchg
jmp
pop
mov
cmp
jno
xchg
and
cmp
jg
xchg
imul
popf
mov
add
mov
shll
mov
fsubl
std
stc
leave
sbb
enter
clc
sbbl
xor
ja
and
sub
orps
popf
pop
ljmp
cmpsl
rcll
and
shlb
popf
xlat
je
stc
inc
es
mov
mov
loopne
scas
daa
mov
call
nop
aad
lcall
es
aaa
icebp
pushf
orps
push
pop
jno
test
outsl
lds
ret
mov
adcb
xchg
cmp
jmp
or
aas
fdivr
mov
and
fstp
adc
xchg
adc
test
addr16
push
stos
pop
repnz
xor
push
inc
fsubl
jns
push
xor
je
cmp
jae
adc
push
mov
sub
mov
call
in
mov
sbb
out
push
cs
int
inc
iret
push
jge
mov
rclb
add
data16
cmp
mov
mov
xor
dec
push
xchg
xchg
scas
xor
and
movsl
lret
aas
pop
lods
inc
push
cmp
neg
pop
mov
pop
ret
pop
dec
ret
popa
int
cwtl
add
out
and
pop
sti
sbb
out
pop
out
push
in
jg
xchg
add
push
rcrl
movsl
in
loopne
sbb
aas
sub
call
out
outsb
dec
icebp
popa
int3
and
mov
rolb
leave
in
cmp
sbb
ljmp
hlt
orl
or
or
mov
push
aam
mov
inc
jbe
sbb
dec
cmp
bound
les
popl
sarb
xchg
fiaddl
ljmp
aam
and
inc
jle
cld
repnz
jmp
call
and
pop
xchg
mov
or
push
dec
push
cmp
fs
push
sbb
aaa
mov
cmpsb
adc
xlat
cltd
ror
and
sbb
sarl
add
and
out
notb
int3
cmp
pop
jne
cwtl
xor
cld
stc
aam
or
and
movsl
insl
dec
jae
into
mov
lret
mov
inc
xor
fdivs
repnz
add
mov
push
dec
andb
pushf
push
cmp
or
lds
sti
push
xchg
pop
rcrl
pop
cltd
addr16
mov
mov
pmulhw
or
shl
iret
cld
adc
dec
cwtl
xor
mov
mov
test
pop
icebp
stos
cmc
into
test
std
test
lcall
jecxz
fdivl
mov
cmp
inc
arpl
leave
dec
jecxz
pop
mov
add
sub
aam
or
fcoms
fistl
icebp
adc
push
std
jns
stc
mov
pop
or
jle
sub
push
jb
push
cmpb
icebp
pop
sub
or
jl
or
mov
jae
iret
es
sub
pop
xchg
mov
dec
xchg
repz
or
jg
and
xchg
out
push
and
imul
in
mov
sbb
inc
adc
in
jecxz
adc
fistpll
testb
mov
and
shrl
fmull
cwtl
mov
xchg
push
sub
xor
arpl
pusha
call
or
lret
mov
jns
cmp
sbb
fbstp
fld
push
lods
ljmp
stos
jmp
mov
mov
or
mov
xor
dec
lea
and
or
or
cli
nop
ss
mov
sbb
add
ja
fidivrl
mov
pop
mov
adc
adc
xor
sub
lds
fcom
adc
mov
popf
mov
sbb
lret
adc
jle
cmp
mov
dec
mov
je
mov
stos
daa
add
out
divb
pop
pop
gs
adc
mov
test
lods
xor
imul
dec
sti
scas
lcall
in
mov
sbb
rorb
adc
int
mov
jecxz
es
int3
inc
jne
pop
ret
jns
sub
push
repnz
sti
ret
sub
jecxz
pop
lods
jecxz
dec
push
and
cmp
lret
xchg
jp
jno
test
sub
pop
pop
cli
rorl
out
push
or
jge
mov
sti
ficompl
stos
and
dec
push
lea
cs
dec
mov
xor
xor
add
lahf
dec
jmp
notl
mov
mov
jae
xor
cmp
dec
adc
leave
insb
cmp
xlat
or
sbb
dec
jmp
cmc
cmp
push
int3
testb
aaa
pop
pop
jnp
push
aam
jo
fisubrl
sub
xchg
jecxz
in
fadd
jl
sbb
mov
lahf
or
xor
ret
lock
aad
xchg
hlt
loopne
cs
mov
xor
jg
mov
inc
inc
xchg
mov
imul
lds
mov
pushf
std
jnp
inc
and
jg
cmp
and
shll
fs
leave
jecxz
ret
mov
mov
mov
pop
xor
stos
sbb
movb
cmp
in
lods
fcompl
iret
stos
jnp
xlat
mov
or
aas
loope
je
in
mov
mov
xchg
jns
mov
mov
lock
mov
xor
sti
imul
xor
sub
stos
jmp
dec
or
movsl
mov
and
dec
dec
cmp
insl
push
cs
les
lock
sbb
mov
dec
outsb
into
cmpsb
push
cmp
xor
mov
inc
mov
mov
popa
test
ljmp
cmpsl
jne
loopne
in
inc
lcall
xor
jae
outsl
shld
jmp
shlb
loopne
adc
stc
lds
cmp
fwait
mov
mov
cmc
icebp
sti
push
outsl
xlat
mov
dec
fiadds
jo
cmc
popf
inc
lods
cmp
sbb
dec
xor
mov
dec
icebp
xor
push
imul
incb
cmp
stos
je
jnp
add
std
lea
add
jle
adc
fwait
adc
sub
js
jmp
js
lret
jmp
xor
std
shl
dec
pop
aam
push
orb
rcrl
roll
scas
mov
sub
cmp
jo
or
add
push
shlb
xor
dec
clc
jne
xchg
cmp
add
lods
insl
js
pop
sbb
xor
jne
inc
sbb
popf
stc
test
pop
fldl
xor
cmp
push
fidivs
mov
aam
ret
and
or
orl
mov
fldl
mov
adc
dec
rorl
cs
rolb
xchg
xchg
mov
xchg
pop
jge
jnp
jmp
decl
aas
push
lahf
cs
in
bound
xor
push
or
nop
sub
les
mov
mov
add
dec
subl
test
iret
repnz
fbld
filds
gs
mov
jp
leave
pop
scas
mov
decb
jecxz
mov
mov
outsb
mov
xlat
inc
mov
or
adc
add
jg
jns
ret
add
mov
arpl
call
xchg
iret
mov
ljmp
jg
inc
cltd
lods
pop
pushf
cld
sub
sbb
push
bswap
sub
jg
pop
mov
int3
sbb
or
dec
das
or
sbb
add
mov
mov
sub
mov
and
cltd
jle
push
dec
nop
dec
mov
jne
cmpsb
mov
lock
jle
jne
add
sahf
xor
pop
xchg
jo
mov
daa
outsl
pop
push
xor
xor
test
push
movsl
xchg
and
adc
xchg
inc
mov
call
cltd
or
dec
sarl
pop
xor
or
inc
outsl
adc
sub
mov
popf
or
packuswb
in
push
or
and
inc
push
aas
dec
mov
gs
cmp
dec
mull
sbb
mov
popf
subb
fnsave
leave
inc
xlat
stos
pop
pop
pop
xor
mov
inc
in
cmc
not
pop
fxch
mov
xor
int3
cltd
mov
enter
scas
nop
in
popa
sbb
sbb
movsl
sti
cmp
cmpsl
dec
outsl
leave
std
shrl
pop
enter
nop
popf
xor
adc
pushf
pop
shr
in
sahf
mov
lods
movsb
rorl
movsb
jns
jb
jbe
mov
push
out
nop
sbb
into
test
insb
sub
sbb
hlt
push
and
push
mov
mov
push
jl
dec
jmp
es
mov
mov
xor
pop
pop
fwait
sub
adc
add
loopne
stos
arpl
mov
sbb
sub
inc
inc
jge
mov
mov
pop
push
leave
mov
jno
push
lahf
push
cmc
decb
hlt
outsl
xchg
iret
sbb
rcl
push
pop
outsb
idivb
mov
pop
jmp
leave
inc
arpl
pop
or
fwait
and
dec
aad
pop
xchg
ds
and
mov
or
inc
out
repz
lods
movsb
xchg
adc
and
adc
decb
mov
inc
es
jg
shl
adc
cld
test
jnp
push
ss
jns
test
cs
jae
shlb
ret
mov
lods
push
stos
call
clc
adc
xor
xor
std
cmpl
cmp
leave
mull
sub
dec
nop
ret
rorb
stos
xchg
push
push
jno
mov
sbb
int
xor
push
aaa
xor
xchg
push
sbb
mov
rcl
dec
inc
xor
enter
jns
jno
pop
out
clc
mov
ja
mov
or
movsl
mov
xor
mov
dec
push
je
je
mov
mov
push
push
aam
ja
addl
push
xchg
sahf
xor
mov
inc
push
mov
and
mov
add
jns
ss
fidivrl
sti
iret
cltd
and
xchg
cld
or
xchg
and
inc
in
ja
ss
daa
mov
fmull
mov
icebp
scas
pop
dec
pop
sub
and
les
or
push
pop
pop
and
push
add
sbb
lods
aad
bound
xor
sbbb
mov
cltd
cld
cwtl
pop
push
mov
jl
push
cmp
sbb
imulb
rcl
stos
add
inc
fwait
mov
jle
or
push
xchg
jmp
mov
pop
jmp
xor
push
push
std
sub
jp
sbb
jle
out
and
iret
sbb
ret
in
add
shlb
out
in
fiaddl
xor
cs
in
hlt
dec
mov
iret
cmpsb
pop
jle
sahf
adc
stos
jecxz
sbb
out
jge
cmp
ja
or
mov
in
jno
rcrb
loope
test
jg
sbb
addr16
push
ds
jne
fldenv
sub
mov
out
leave
sub
adc
dec
xor
push
and
shlb
sub
in
xchg
push
push
lea
cwtl
add
stc
pop
outsb
xor
add
lock
andl
cs
sub
shlb
filds
hlt
mov
push
jns
sbb
adc
enter
cmp
lods
insb
mov
cmpsb
pop
out
idivb
push
shr
or
and
jae
adc
fs
sbb
pop
sbb
cmp
int
dec
xchg
nop
xchg
outsl
mov
loopne
pop
test
inc
repnz
mov
bound
decl
ljmp
stc
ret
lret
lods
sbb
sub
pop
mov
cli
fcoms
or
mov
scas
adc
push
xchg
jo
jns
das
fildll
inc
ret
cmc
pop
dec
hlt
iret
dec
insb
fnstcw
lock
js
jbe
and
lcall
jae
insb
imul
xchg
jno
subl
add
and
cld
or
mov
les
pop
add
roll
inc
xor
inc
and
inc
cltd
bound
sbb
daa
in
push
in
outsb
cli
or
dec
insl
add
xlat
mov
add
fiaddl
cli
mov
iret
jl
sbb
cmp
inc
in
icebp
xor
pop
mov
test
sarb
stos
lret
pop
xchg
out
mov
inc
popf
repz
shlb
pop
jecxz
pushl
daa
lds
orl
pop
leave
mov
fdiv
cmp
and
pop
mov
sbb
jle
push
aad
push
imul
aam
mov
push
jnp
in
cli
add
lret
xor
mov
popa
test
push
jecxz
cwtl
shr
aam
or
stc
hlt
xchg
stos
scas
push
pop
xchg
fs
sub
test
push
pop
rcl
loop
and
and
dec
pop
ja
clc
xchg
cmc
or
aaa
jg
dec
ss
sahf
inc
sbbl
pop
fs
jns
popf
dec
xchg
ret
or
in
mov
fucomp
les
in
sub
lcall
cmp
sbb
lods
dec
outsl
lret
pop
scas
aaa
jnp
stc
cmp
add
push
cmc
push
pop
mov
push
in
popa
jmp
or
inc
push
sarl
mov
icebp
jecxz
shlb
mov
lods
pop
push
sub
lock
mov
loopne
and
fcoms
aad
or
popf
bound
jae
adc
push
lock
cmp
stos
std
mov
ret
push
iret
enter
enter
inc
cmp
sub
pop
hlt
mov
test
jbe
lahf
xchg
dec
mov
divb
xchg
jns
repnz
dec
mov
scas
sahf
sbb
mov
les
or
lds
sub
in
jo
into
pop
mov
insl
sbb
out
cli
push
jbe
in
jno
cmp
inc
jge
testl
pushf
add
popa
subl
jmp
insl
out
ss
into
testl
dec
repnz
fnsave
inc
stc
daa
mov
xchg
and
mov
sbb
dec
push
cli
xchg
les
lock
fdivrs
or
mov
add
clc
sbbb
cmp
fisubs
sbb
mov
repnz
xchg
cmp
int3
xchg
repz
lock
stc
in
lds
cmpsl
mov
jecxz
aam
xchg
jne
pop
je
in
jmp
sbb
add
orb
pop
xchg
sahf
incb
testl
dec
sbb
xchg
out
out
arpl
lret
push
aad
shrl
sub
jl
out
call
dec
mov
fs
add
hlt
mov
mov
and
das
xor
push
cmc
inc
jle
fcompl
dec
fistpl
movsb
insl
stc
mov
jb
ja
imulb
mov
stc
fistps
adc
je
add
sbb
sbb
adc
jle
cmpsl
and
mov
add
leave
adc
pop
inc
cmp
jno
int
mov
scas
pop
stos
arpl
push
stos
mov
pop
mov
aad
jecxz
aaa
jp
imul
jb
stos
xchg
push
pop
adc
fidivrl
xlat
in
xchg
jmp
and
sti
or
xchg
outsb
addr16
xor
dec
jmp
pop
push
and
cld
lods
jae
es
xchg
mov
fstps
shlb
mov
sub
rcrb
aas
out
fdivrs
mov
cmp
inc
or
mov
lods
lods
lds
repz
pop
inc
mov
out
inc
call
xorb
jge
dec
jb
lock
jno
in
jge
sbb
ljmp
and
lret
in
shll
sarb
out
fisttpll
pushf
mov
std
iret
jb
mov
pop
aas
test
jg
pushf
and
adc
jle
sbb
cs
into
ljmp
xor
or
push
rcl
pop
mov
mov
insl
xor
imul
mov
push
xchg
cmp
jne
lods
mov
aad
jle
lea
test
dec
sub
addr16
cli
xchg
sub
fcompp
ljmp
xlat
sbb
jae,pn
xor
adc
fbld
ret
lret
sub
mov
leave
test
mov
push
ret
or
std
xor
push
mov
and
iret
or
and
mov
pop
es
out
fimull
or
cmp
or
cwtl
popf
mov
div
dec
jp
push
testb
or
jl
lds
bound
es
cmp
adc
das
movsb
je
in
pop
pop
test
popl
fs
add
orb
sub
sahf
mov
cmpsl
addr16
cmp
push
iret
add
imul
push
jecxz
cmpsl
and
test
pop
push
fwait
mov
arpl
push
pop
test
es
cs
sub
lret
adc
xchg
addr16
sti
lea
mov
ret
sarl
cmc
sub
lods
in
iret
mov
sub
bound
enter
add
and
dec
bound
jae
dec
xchg
addr16
popa
jp
mov
loop
lahf
inc
shll
sbb
inc
cltd
mov
jge
jge
mov
add
cmpsl
pop
loopne
cmp
into
xor
je
mov
mov
fwait
repnz
push
jp
xlat
scas
add
add
add
push
rcl
js
jmp
xchg
or
stc
pop
lahf
es
jp
push
ds
mov
add
adc
jo
adc
aaa
xchg
xchg
decb
and
xor
hlt
in
out
jp
xchg
ficompl
out
ljmp
jns
or
jno
mov
cld
dec
sub
xlat
scas
xor
sub
push
jne
aas
gs
jns
sbb
jge
lods
mov
sbb
xor
pop
mov
mov
mov
lret
stos
push
push
inc
out
and
sbb
stos
mov
sub
movsb
jae
stc
lock
cmpsl
xor
cwtl
call
xor
sbb
xchg
mov
aad
mov
lret
ret
gs
arpl
test
fstpl
stos
sub
pushf
mov
xor
shlb
jg
jns
jno
movsl
or
push
xchg
ds
mov
in
sub
xor
shll
xchg
inc
dec
cmp
bnd
lods
test
adc
arpl
lcall
jge
scas
out
fisttps
push
cmp
jo
sarb
push
adc
mov
xor
add
jp
inc
loop
jp
jno
js
or
mov
push
data16
rorl
adc
xchg
popa
das
fldcw
mov
test
jne
gs
jle
push
andb
jmp
sub
inc
fistps
jno
mov
stos
shlb
inc
push
pop
shl
mov
mov
mov
cmc
sbb
mov
stos
lcall
sub
movsl
push
or
je
lahf
out
xor
adcb
not
mov
sub
sub
call
movsb
cmc
xor
out
jge
stos
test
repz
push
push
movsl
fcomps
out
jnp
das
outsl
iret
jbe
xor
cmpsb
cmp
leave
outsl
and
psubd
pop
xor
inc
gs
ja
adc
sbb
loope
insl
lods
sub
push
mov
jae
fidivrs
dec
fisubs
xor
add
dec
popa
adc
clc
loopne
add
stos
fsubrl
xchg
fldt
icebp
dec
adc
pushf
push
add
pop
nop
jno
mov
push
cmpsb
inc
fs
aam
shl
adc
sub
and
jmp
ret
dec
pop
pop
xor
repnz
cs
addr16
out
push
jg
es
js
ss
icebp
adc
push
fwait
in
xchg
hlt
rcl
push
push
cmp
test
cmc
pop
stos
or
cli
sahf
bnd
dec
movsl
sarb
hlt
jge
fidivs
ljmp
fld
cli
stc
test
test
ret
push
lods
daa
add
test
push
xor
xchg
mov
pop
jns
ja
ret
xchg
test
ja
sub
imul
mov
pop
jg
mov
mov
xchg
or
and
jmp
adc
adc
in
push
ds
repnz
push
dec
subb
andl
jg
xchg
mov
in
gs
dec
inc
pop
inc
imul
mov
scas
rcrb
cmpsl
xchg
test
push
lret
or
aam
lahf
movsb
mov
sub
roll
ss
adc
dec
scas
stos
out
and
sbb
sbb
sbb
jne
sbb
xor
mov
bnd
dec
jp
decb
sbb
xor
and
and
inc
add
xor
popf
int
in
sbb
jno
sub
mov
cmp
inc
or
inc
in
imulb
addr16
cmp
mov
sub
and
into
mov
mov
imull
lods
pop
sti
cmp
xor
leave
inc
xchg
jno
stos
xor
cli
xchg
adc
fldl
jecxz
xchg
mov
mov
inc
imul
jmp
mov
sbb
test
aad
cli
dec
xchg
ja
lods
jns
xor
imul
mov
xchg
movsl
adc
dec
inc
jno
cmp
sbb
mov
dec
add
cmp
jbe
mov
or
fiadds
push
jmp
jge
cmp
ret
or
jae
push
jo,pn
jo
or
and
jne
add
cmc
call
mov
loopne
ljmp
sbb
addl
mov
lods
mov
inc
notl
mov
jge
js
jne
xchg
push
mov
fs
aad
or
sbb
push
insb
gs
push
sbb
cmpsl
in
frstor
adc
xchg
jg
cmp
pop
sbb
adc
lret
push
mov
mov
mov
mov
nop
test
imulb
fldenv
jle
push
loopne
add
mov
push
pop
dec
dec
mov
jg
cmp
decl
jp
icebp
jg
in
pop
push
jns
ljmp
test
pop
xchg
movsl
cs
fcmovne
lods
lods
jns
sbb
clc
mov
sarl
jns
cmpb
das
stc
movsl
cmp
inc
popa
adc
das
and
jae
in
insb
loopne
je
out
in
push
push
cld
icebp
repz
cmpl
inc
and
jnp
sbb
orl
fbld
ret
aad
insb
aam
sub
adc
cltd
ljmp
push
inc
xlat
inc
fucomi
cmp
and
push
movsb
xchg
mov
jg
imul
subl
push
jae
mov
dec
and
neg
popf
and
sub
inc
add
lock
sub
sti
in
lahf
xor
ds
lret
stos
es
sub
rolb
and
outsb
mov
and
jge
aad
xlat
pop
mov
sbbb
notl
jmp
add
cmp
mov
mov
shlb
divb
add
dec
and
xchg
aam
decl
xchg
and
pmaxsw
jmp
adcb
push
pop
dec
jg
cld
orl
std
adc
jecxz
int3
inc
out
push
or
adc
pop
js
in
and
pop
ret
jno
arpl
push
pop
adc
cmp
es
and
sub
cmp
in
repz
jp
pop
xor
shl
and
dec
fcomip
push
xlat
out
inc
lea
cmp
mov
sub
pop
and
cmp
mov
rorb
mov
dec
xchg
les
xor
in
js
pusha
or
dec
lret
xchg
fs
inc
sbb
adc
or
xchg
cld
ja
or
js
pusha
ja
or
mov
fmul
shlb
xchg
lret
mov
mov
in
and
iret
sub
adc
mov
xor
push
xor
sbb
sarb
cmc
outsl
dec
push
aas
cmp
int3
cmpsl
ja
or
lcall
and
and
fbld
mov
fisubl
xchg
jb
cmp
popa
dec
leave
jmp
jbe
cmp
rcll
push
jo
aaa
sbb
int3
pop
fwait
jmp
imul
enter
scas
ljmp
mov
xchg
jns
dec
cmpl
sbb
pop
mov
lods
add
sub
cmc
lds
in
mov
xchg
pop
fisttps
xchg
xchg
stos
rep
outsb
xor
int3
xchg
xor
fmul
loopne
mov
rcrl
daa
addr16
outsb
pop
or
leave
aaa
outsl
decb
and
mov
or
sbb
in
shlb
sbb
adc
insl
adc
bound
loopne
movsl
scas
js
pop
stc
in
cmp
pop
iret
mov
inc
lds
cmp
std
out
push
scas
adc
xchg
adc
in
dec
ds
mov
gs
pushf
loop
add
sbb
test
inc
fcoml
mov
jge
xchg
adc
out
mov
sub
adcb
inc
push
loopne
jb
xor
xchg
or
cmp
mov
clc
es
xchg
pop
sub
adc
sarb
cmpl
jl
and
repnz
mov
mov
pop
push
into
pop
sbb
fs
sarb
fstpt
imull
sbb
jae
fs
imul
dec
pop
xor
out
gs
pop
mov
inc
gs
out
mov
movsb
cmc
sahf
push
movsl
mov
arpl
mov
ret
add
xchg
data16
sahf
sti
int
jo
jmp
mov
icebp
movb
leave
inc
pop
dec
pop
mov
das
movsb
mov
out
loop
adc
bound
lods
sbb
outsl
lcall
jne
push
subl
in
fildl
xchg
incl
pop
sbb
mov
or
mov
fldenv
jae
movsb
adc
xchg
cwtl
fisttpl
xor
add
and
loope
and
std
jge
sbb
push
rcll
dec
loop
pop
xor
fsts
in
in
sbb
push
loope
mov
jl
xchg
or
fiadds
arpl
sbb
mov
xchg
fistl
mov
push
cltd
aam
jnp
pop
into
inc
test
ret
sub
inc
sbb
mov
clc
mov
jmp
fcoml
test
mov
nop
push
outsl
xchg
icebp
sub
and
cmp
fcmovnbe
lds
push
jg
fsubs
jg
jne
in
jp
out
and
dec
push
push
push
ret
pop
lahf
scas
inc
mov
int
int3
push
sti
ja
mov
cmp
jge
xor
cmpsl
fwait
inc
jle
repnz
arpl
push
pop
insl
scas
or
xchg
cmp
and
movsb
int
jmp
inc
aad
cmpsl
stc
adc
sbb
push
jns
xchg
stos
popl
sub
push
adc
enter
fnstenv
pop
jle
or
pop
xor
xor
jno
test
ss
test
adc
add
xor
sub
js
and
inc
mov
es
mov
mov
xchg
aam
ljmp
cmp
test
mov
ret
lret
pop
cmc
movsl
lods
push
fiadds
js
and
scas
es
fbld
and
and
pop
aam
xor
pop
push
push
addr16
adc
bound
mov
gs
lock
and
movsb
cmp
add
sahf
dec
mov
fnsave
stos
lret
call
gs
sub
repz
cmpsl
xor
adc
sbb
pop
sub
adc
inc
push
in
in
lcall
push
ja
pop
in
lret
dec
fdivs
jno
xchg
arpl
fmuls
pop
fcmovu
ja
xchg
cmp
dec
or
mov
sub
mov
mov
aas
jns
pop
fdivr
out
cmc
sub
pop
dec
add
das
mov
fcoms
inc
push
inc
fisubl
pop
cmpsb
outsl
cmp
in
cmp
sar
movsl
test
cs
test
mov
inc
jns
push
sbb
xchg
aam
and
fists
movsl
outsb
call
divl
xchg
add
in
or
and
xor
scas
hlt
out
pop
mov
sub
pop
xchg
xchg
stos
jmp
jl
mov
fisttps
cld
rol
rcrb
fs
les
popf
mov
xchg
or
out
or
jle
ss
cmc
sub
ror
sub
mov
pop
xchg
cmpsb
jl
pop
jns
and
mov
cmpsl
add
and
inc
cwtl
fldcw
cmpl
dec
je
and
cmc
xor
inc
popa
jae
fcoml
dec
jo
outsb
pusha
roll
cmpsl
cltd
daa
adc
ss
fiaddl
cwtl
mov
mov
dec
insb
lret
and
in
xor
pusha
mov
leave
leave
fldenv
pop
pop
cmp
or
jb
sbb
sub
repz
jl
sub
add
cmp
add
loop
xchg
stc
mov
mov
sub
push
scas
pop
or
shlb
dec
jo
testl
icebp
lea
xchg
cwtl
and
dec
jb
in
gs
fsubrl
push
aam
je
bound
pop
sbb
xor
pop
cmp
stc
in
lret
xchg
jnp
inc
lret
fadds
das
and
pop
cmp
jbe
rorb
inc
cs
xlat
repnz
fcompl
mov
mov
arpl
sub
mov
ss
mov
mov
mov
in
dec
jmp
out
es
xchg
jae
jge
inc
sbb
movsb
jmp
icebp
hlt
mov
ret
lret
out
sub
idivl
ds
xchg
fdivs
push
xor
sub
jge
imulb
outsl
mov
add
or
pop
movsb
cmp
sahf
push
jl
mov
inc
cmpsb
out
nop
adc
cs
sbbb
adc
sahf
xchg
scas
adc
inc
jp
shlb
mov
and
repnz
push
mov
and
scas
xor
stos
stc
mov
push
cltd
into
mov
test
push
setge
gs
push
cvtpi2ps
cld
cmp
cmp
fs
mov
and
ds
push
inc
add
inc
dec
ds
and
test
dec
inc
pop
aad
int
or
inc
fildl
or
andl
push
popf
xor
jns
fadds
jle
and
jecxz
sbb
ret
cmpsb
or
mov
sbb
push
fsub
fisttpl
xchg
pop
movsb
inc
pop
sbb
roll
fisubs
mov
pushf
inc
fcoms
in
inc
sub
mov
stos
xlat
xor
test
mov
sbb
and
xchg
test
push
add
mov
xlat
sub
nop
push
fcmovb
sub
pop
pop
imul
xor
into
jne
pushf
shlb
inc
jo
push
in
mov
lods
mov
inc
insl
stc
mov
inc
aam
out
fcoml
adc
insb
pop
test
add
neg
pop
jge
pop
xchg
ret
mov
push
mov
lahf
sub
or
jo
repz
inc
testl
ret
inc
lods
push
dec
xor
icebp
jbe
shl
sbb
int
jecxz
inc
test
test
mov
sub
xor
push
pop
ret
mov
xchg
fsts
jae
xor
sti
rorb
stos
jmp
push
inc
push
or
dec
cmp
imul
dec
add
or
loop
cs
inc
aaa
je
shrb
or
cmc
mov
add
mov
sahf
push
into
and
mov
lock
sub
mov
mov
push
xlat
lods
cli
in
mov
fmull
scas
xchg
pop
sbb
cli
shl
add
mov
ds
in
icebp
test
das
addl
stos
mov
loopne
sub
dec
adc
push
pop
int3
and
mov
out
xchg
dec
das
inc
outsl
sub
pusha
push
mov
rorb
aas
mov
test
insb
inc
negl
jmp
rcrb
leave
bound
cmp
lock
sub
sub
mov
js
mov
test
and
sbb
xor
jne
cmc
add
pop
lcall
xor
pop
testl
popa
pop
arpl
dec
sub
xor
jmp
leave
push
in
shll
mov
ret
pusha
push
or
call
rolb
inc
push
shll
sti
out
lret
xchg
ficoml
stos
xchg
mov
add
in
sub
jg
jle
push
hlt
pusha
ss
aam
je
ljmp
push
sbb
sub
xchg
cwtl
in
div
or
js
pushf
addr16
leave
jge
inc
test
xchg
scas
in
sub
jmp
iret
imul
or
push
jns
in
les
movsl
fucomip
push
inc
mov
aas
inc
xor
mov
inc
sbb
and
aaa
dec
dec
gs
shlb
pop
mov
dec
xchg
imul
adc
repnz
dec
jle
adc
mov
cmp
jl
adc
jne
cmp
jg
cmp
repz
jecxz
push
dec
push
fcmovnb
sbb
xlat
out
jl
fcmovnbe
sub
aam
js
stc
and
adc
pop
dec
sbb
jnp
jb
std
adc
iret
mov
insb
neg
or
dec
xlat
jle
sub
xchg
fs
inc
test
mov
pop
bound
fisttpl
push
sbb
or
mov
adc
xor
lahf
scas
mov
fsubl
cmpsl
dec
jo
push
pop
aam
sti
lret
ficoml
mov
data16
int
out
pusha
idivb
sub
and
sub
fcomi
cmp
push
inc
frstor
mov
movsb
pop
push
stc
push
pop
fadd
loop
lods
sbb
xor
aad
jbe
cmp
mov
rcr
mov
add
add
stos
mov
adc
xchg
shlb
fcmovnu
in
or
inc
and
repnz
and
addr16
imulb
and
repnz
ljmp
jbe
xor
or
insl
es
int3
lahf
dec
inc
inc
inc
cmpsb
mov
inc
shr
cmc
adc
in
xchg
daa
insb
call
sub
sub
mov
pop
push
push
pushf
ds
mov
popw
add
xor
cwtl
inc
xchg
mov
pop
jl
push
ljmp
shll
test
fstps
push
test
cli
aad
push
jg
pop
sub
xor
push
fildl
aad
inc
push
xor
pop
jle
pop
pop
sbb
ja
jl
mov
add
inc
mov
mov
sbb
cmp
ja
push
sti
cwtl
lds
adc
dec
xor
cmpsl
xor
mov
mov
push
test
add
std
xchg
bound
or
jo
xor
sbb
test
loop
test
mov
push
pop
ret
mov
inc
dec
test
lret
jnp
cmp
out
mov
dec
xchg
test
popa
movsl
mov
adc
aam
scas
sarl
dec
pushf
ljmp
jns
jno
pop
push
in
cmp
insl
outsl
mov
test
addl
sub
pop
xchg
nop
dec
mov
nop
or
jo
je
hlt
rcl
in
ja
ror
push
lea
in
ds
pushf
stos
xor
imul
push
jl
dec
or
es
imul
call
adc
shr
negl
fisubl
and
mov
mov
ret
cmp
outsl
mov
jg
sub
faddl
add
pop
hlt
xchg
outsl
scas
cli
icebp
mov
mov
or
sub
mov
jnp
xlat
stos
cs
xchg
mov
push
mov
or
sub
insl
inc
in
jle
call
dec
jbe
icebp
fisubs
mov
pop
and
sarb
dec
push
add
scas
xchg
in
pop
jno
push
add
aam
sub
int
adc
inc
jae
jns
cmpsl
cmpsb
aas
call
imul
xor
jp
and
cmp
or
adc
adc
push
mov
cmc
in
ljmpw
pop
xor
jle
xor
sahf
inc
call
pop
out
lret
fsubrp
leave
push
jns
rcr
ficomps
fadds
adc
cmc
push
subl
daa
shl
jge
nop
sub
imul
lods
sbb
jmp
adc
sti
xlat
cmp
insb
xchg
rorl
sbb
pushf
dec
rcr
adc
push
shl
pop
test
pop
cltd
ficoms
add
add
jecxz
adc
pop
fidivrs
push
jbe
testl
xor
dec
pop
pop
in
pop
cmp
mov
cwtl
pop
xor
arpl
enter
mov
or
dec
bound
inc
pop
addr16
cmpsb
add
pop
lret
in
jae
bnd
pop
sub
aad
test
loope
aas
push
mov
jb
rolb
lret
mov
jno
cmp
inc
jle
xchg
lahf
fimuls
loopne
js
pop
mov
or
dec
or
aam
inc
jbe
ja
call
pop
ja
test
rcll
pop
cwtl
mov
sbb
add
sti
mull
imul
inc
dec
and
mov
fcompl
sbb
stos
jl
push
xchg
movsl
loope
adc
sbb
mov
mov
jae
in
popf
out
repnz
mov
pop
int3
cmc
mov
mov
adc
inc
stos
loop
test
cmc
icebp
jb
aam
pushf
xchg
fwait
push
cmp
je
xchg
outsb
mov
jmp
std
mulb
out
out
and
mov
test
jle
test
ret
pop
xchg
test
sahf
mov
mov
xor
jl
sbb
pop
inc
mov
push
cmp
mov
mov
ret
ja
mov
loope
fistps
call
push
or
mov
ret
jns
js
pusha
dec
mov
push
push
fisubrl
lods
xlat
and
or
lahf
inc
insl
inc
mov
aam
fidivrs
or
xchg
into
cmpsb
mov
pop
sbbb
xchg
leave
xchg
sub
add
call
cmp
movsb
fptan
or
mov
stos
dec
je
lret
cmp
test
jg
jmp
cmp
out
and
mov
dec
ds
push
mov
aam
mov
or
push
jecxz
or
rcr
xchg
loop
jae
sbb
mov
lds
xchg
xchg
sub
xor
mov
pop
rclb
add
fisubl
push
cmp
outsl
shll
addr16
add
sub
cmp
xor
in
test
test
inc
aas
xchg
mov
ret
or
ret
inc
rorl
call
cmp
cltd
xor
dec
dec
aas
out
push
xor
repnz
int3
jo
insb
push
jnp
shl
dec
jl
das
inc
mov
push
stos
xor
dec
ljmp
cs
sub
jmp
push
sub
jp
mov
test
adc
ss
lcall
lds
addl
je
into
add
rcrb
xchg
arpl
adc
lcall
loop
out
inc
in
add
scas
push
hlt
testb
xchg
xchg
push
data16
mov
cmp
call
cli
cmpsb
xchg
loope
jnp
rorl
mov
shr
xchg
xchg
cmpxchg
cmp
pop
dec
leave
movsl
push
xchg
cmp
js
adc
or
fistpl
push
movsl
and
adc
stos
outsb
stos
rcl
inc
pop
xor
cmpsl
lea
decb
loop
pop
lret
int
xlat
icebp
pop
push
lock
or
loopne
sbb
cmp
lretw
out
add
xlat
inc
push
fdivrs
push
mov
jne
xor
mov
leave
es
aad
mov
ja
popa
jge
mov
in
insl
dec
lret
push
jp
adc
jmp
adc
inc
jo
mov
stc
adc
mov
ja
xor
sub
mov
adc
fldenv
push
movsl
mov
or
cmpsl
inc
mov
xor
and
rol
dec
sahf
and
mov
mov
int
adc
sbb
push
sub
push
pop
mov
xchg
cmpb
push
insl
sbb
lods
dec
mov
es
sub
mov
sub
mov
lods
and
cmp
loop
addr16
lret
xor
out
addr16
jns
inc
or
xchg
push
mov
pop
inc
pop
test
addr16
lea
clc
jae
out
mov
pop
ds
fildl
pop
push
sub
inc
xchg
jnp
aas
fwait
cmp
lods
ss
sahf
pushf
dec
dec
mov
insl
cmp
pop
scas
mov
mov
aam
dec
push
and
mov
sbb
jp
lahf
add
fwait
shrb
pop
xchg
mov
add
sub
lock
rorb
mov
xchg
jne
mov
mov
adc
adc
mov
mov
dec
sub
dec
jbe
push
mov
fcompl
inc
rorl
into
push
imul
push
add
pushl
lods
add
mov
mov
add
ficomps
shrb
dec
cmp
loopne
jns
in
inc
xlat
in
xor
or
shrb
repz
push
lods
cwtl
xchg
ret
dec
mov
push
fs
cmp
punpcklbw
dec
and
std
cmp
rorl
lret
ds
mov
cwtl
insb
lea
and
xor
add
leave
sub
mov
xchg
dec
jae
adc
adc
fcom
xchg
aad
hlt
stos
addb
sbb
addb
jle
loopne
dec
imul
ss
xor
outsb
add
push
mov
mov
xchg
add
movsl
sbb
loop
xchg
inc
mov
dec
lods
mov
lcall
mov
fwait
out
sub
xchg
dec
xchg
mov
subl
fucomip
push
rol
lea
xchg
loopne
cmp
imul
fstsw
add
out
or
test
sbb
inc
pushf
pop
xlat
lret
loopne
cs
pop
aad
mov
and
enter
bound
movsl
loop
adc
frstor
push
je
loop
imul
push
movsl
bound
rcrb
xchg
sbb
adc
pop
das
ret
pop
pop
imul
dec
dec
ret
aaa
jmp
jp
fidivrs
push
fidivl
or
and
das
out
jno
enter
xor
cmpsb
mov
bound
pop
ret
mov
adc
and
dec
jns
mov
iret
hlt
popf
add
push
push
stos
cmpb
dec
xor
stos
aad
sub
lea
pop
pushf
pop
fs
xchg
adcb
mov
xor
cmp
xchg
or
and
inc
pop
outsb
cmp
lods
adc
add
sub
push
mov
cmpsl
mov
push
lock
jmp
cmp
cmp
js
xor
sbb
mov
push
insl
dec
lea
pushf
sub
mov
sbb
nop
and
adc
jle
sub
jb
add
and
inc
adc
sub
subb
add
xchg
int3
or
ds
loopne
ror
jo
loopne
push
adc
jg
aaa
sub
fwait
xchg
mov
fxam
jle
sbb
incb
aam
xchg
jl
clc
insb
sahf
jnp
cmc
ss
out
test
pop
in
jl
arpl
mov
push
inc
ret
sbb
movsb
mov
add
clc
int3
test
movsl
gs
cmpsb
pushf
outsl
add
ret
gs
loop
push
push
test
dec
adc
scas
jecxz
push
arpl
sub
fisubs
mov
sbb
inc
pushf
pop
out
cwtl
mov
out
test
lcall
lods
mov
mov
test
fsubrp
sbb
inc
shrl
pop
rorb
adc
mov
dec
ror
xor
xchg
or
cmc
mov
inc
pushf
mov
movsl
stc
test
lea
cmp
dec
mov
add
mov
xor
push
mov
mov
inc
das
add
orb
out
movsb
jmp
popa
mov
int3
jle
dec
push
clc
enter
jne
lods
sbb
dec
popa
sbb
fcompl
and
push
xchg
inc
inc
shlb
sbb
xchg
repz
jg
das
push
push
mov
mov
dec
into
sub
in
mov
jne
mov
fildl
cld
inc
lds
std
xchg
mov
xchg
and
mov
mov
xchg
push
mov
out
xor
sbb
aaa
fiaddl
lods
jbe
pop
mov
pop
dec
rcrl
into
dec
push
ret
adc
enter
mov
or
aaa
xlat
jmp
imul
sub
stos
fldl
addr16
pop
call
add
fstl
add
xor
sub
pop
rorb
lret
inc
push
or
xchg
dec
xchg
pop
and
cmp
jle
add
inc
scas
push
xor
add
decl
rcrl
aaa
mov
jo
jp
ret
jb
dec
scas
pop
fisttpl
cmp
insl
xchg
loope
out
fisubs
imull
jl
inc
xor
sub
sub
test
call
pushf
pusha
ss
aam
les
adc
lea
std
lods
test
push
test
jo
and
subb
repnz
jne
sarl
jo
jle
outsl
pop
or
mov
lock
xor
fcomps
repz
cli
xchg
mov
imul
dec
sbb
sbb
lcall
xchg
lock
mov
in
xchg
mov
lahf
sub
add
xlat
adcb
insb
cld
xor
movsl
inc
xor
inc
aas
stos
test
mov
cmp
movl
dec
rorl
loop
push
cwtl
or
fmull
mov
mov
cmpsb
or
push
jno
mov
stos
and
xor
popf
mov
inc
mov
adc
xchg
mov
xchg
push
pop
daa
lret
ss
sbb
stos
xchg
add
enter
pop
call
push
xchg
cwtl
shlb
ss
test
insl
cli
scas
xchg
sar
sbb
push
inc
imull
sub
dec
sub
lret
jbe
das
int3
lock
mov
outsb
lahf
je
mov
sbb
shll
sub
and
in
inc
roll
cwtl
and
push
arpl
in
cmpsb
mov
es
push
mov
aam
sbb
test
dec
lods
pop
jp
pop
pop
fcoms
xchg
shr
inc
stc
stos
cmovs
rcll
xchg
outsl
out
lcall
sbb
push
jmp
data16
fnstsw
popa
xchg
pop
sub
adc
and
shrl
sub
xchg
sahf
xlat
icebp
push
fbld
mov
inc
call
pop
mov
sub
xor
push
or
loopne
gs
inc
notb
sti
jmp
push
pop
sub
pop
jo
add
xchg
push
bound
xor
pop
lods
sub
mov
sub
in
mov
std
les
push
fcompl
shlb
mov
lret
shlb
add
xchg
jb
inc
lods
aaa
mov
mov
addr16
lret
cmpsl
mov
jae
clc
orl
pop
jecxz
pushf
jae
cmp
cmpsl
adc
mov
inc
sbbb
ret
jnp
mov
imul
insb
rclb
lret
lret
sbb
xor
inc
aam
dec
and
jecxz
sarb
mov
jbe
test
mov
fdivrl
and
movsl
punpcklwd
fisttpl
sbbb
movsb
rcr
or
scas
and
xor
fisubl
xchg
and
mov
pop
scas
adc
into
loope
lahf
push
in
or
jnp
int3
divb
int3
shl
mov
cmpsl
sarl
out
mov
cld
mov
cmp
add
mov
jb
jnp
out
lret
xor
shll
add
add
jbe
mov
imul
sbb
xor
out
mov
adcb
shll
and
cmp
sbb
lods
mov
dec
mov
sbb
push
mov
ret
lods
cli
mov
lcall
push
inc
cmc
xchg
dec
loopne
push
js
or
push
adc
jbe
mov
movsl
dec
test
inc
jnp
les
or
add
xorl
push
andb
and
adc
xor
mov
iret
ljmp
dec
pop
pop
pusha
dec
repnz
add
mov
mov
into
imul
in
insb
inc
cmp
xor
dec
jo
ds
ljmp
loope
aad
inc
pop
push
pop
scas
pop
xor
fimuls
push
jns
pause
jb
scas
out
inc
push
or
fnstenv
mov
ret
lds
sub
imul
jge
cmp
divl
pusha
fwait
push
pop
pop
nop
rorb
adc
pop
or
cmp
mov
ret
lods
jg
pop
sahf
imul
add
lods
in
push
or
mov
negl
out
loope
xchg
inc
aad
cmp
enter
movsb
xchg
xchg
popf
popa
incb
xchg
mov
imul
hlt
jge
ret
out
xchg
jl
jne
jecxz
leave
xor
fwait
hlt
add
and
adcb
push
push
cmc
test
ja
mul
xchg
adc
and
pusha
test
xor
sub
data16
inc
push
lret
xor
pop
ss
test
cs
movsb
xlat
call
sbb
jle
je
xlat
ljmp
daa
outsb
push
in
push
inc
pop
push
add
or
sub
stos
or
lods
mov
into
shrl
jle
and
mov
in
dec
rclb
pop
xor
add
xor
lods
jge
ror
cmp
rcl
inc
inc
dec
cli
mov
cmp
adc
lods
push
mov
push
cmp
jmp
bound
roll
in
jnp
leave
subb
xchg
fcmovne
jns
push
out
xchg
popf
sub
xor
sbb
repnz
mov
clc
popa
push
lret
bound
testb
xchg
cmpsl
ss
aad
rolb
mov
addb
cmp
ret
mov
add
scas
nop
push
xchg
add
insl
pop
decl
scas
mov
or
and
mov
inc
mov
dec
pop
ret
out
cwtl
scas
inc
and
sbb
fldl
push
jne
mov
cltd
test
sub
add
test
push
sub
dec
inc
enter
popa
cmpsl
repnz
int
out
pop
mov
hlt
mov
mov
push
fwait
push
push
sub
add
aam
xchg
mov
sbb
je
pop
jnp
dec
adc
in
fmuls
mov
cmpsl
out
cli
add
aas
lret
xor
jb
stos
cmc
mov
lds
sbb
xor
adc
sbb
mov
sub
jne
into
pop
jle
in
jne
out
pop
or
loop
jo
dec
pop
mov
jecxz
add
push
fsubrl
jg
mov
and
test
xchg
cwtl
push
and
or
and
clc
push
push
mov
and
cmp
mov
ss
fmull
cmpsb
stos
push
lcall
jae
mov
or
cmp
push
shrl
pusha
lcall
xchg
in
mov
cld
and
add
jmp
std
movl
dec
dec
push
jne
test
orb
js
mov
rcl
leave
xor
mov
sti
test
mov
adc
cli
sbb
sbb
or
ret
icebp
xchg
fcmovu
sti
add
ror
popa
call
adc
push
aaa
pop
bound
jmp
insb
enter
or
divl
sbb
cmpsl
cmp
pop
dec
test
and
add
mov
rcr
in
je
pop
scas
dec
ds
iret
test
ljmp
repz
fidivl
mov
jae
mov
rcr
xchg
out
add
out
mov
nop
cmp
sub
mov
cld
insb
lea
jo
or
rclb
test
ss
mov
xchg
mov
roll
imul
in
and
xor
out
inc
mov
cmp
or
out
sbb
data16
push
ret
lock
shlb
lods
call
jno
mov
jp
int
jecxz
add
add
dec
pop
or
call
in
out
jbe
aaa
call
jbe
pop
jno
dec
shlb
inc
ret
cmp
and
add
or
out
mov
mov
fsubl
push
inc
testb
add
inc
aas
jle
les
icebp
test
jb
orl
adc
stos
ds
inc
sub
inc
mov
outsb
pushf
mov
out
or
mov
adc
jecxz
scas
push
or
mov
mov
cs
add
sbb
and
and
mov
jmp
adc
pop
inc
cmp
xchg
ds
xor
fisubrs
inc
in
jle
lcall
push
es
mov
ja
sbb
cmp
in
icebp
push
pop
xor
hlt
mov
xor
loopne
cmp
push
daa
pop
pop
arpl
adcb
push
sbb
cli
mov
add
daa
inc
pusha
mov
pop
cld
pop
jo
and
xor
mov
dec
jae
pop
and
in
test
mov
jno
push
ret
push
clc
fsts
push
testb
shl
mov
stos
sub
sub
cmpsb
and
pop
imul
push
pop
sub
cmp
rcll
clc
data16
repz
test
add
cmpl
je
bound
pop
xor
mov
adc
and
imul
sub
int3
xchg
mov
enter
adc
mov
cmp
xchg
mov
rorb
xchg
stos
icebp
rorb
xlat
xchg
sbb
and
popf
adc
ds
jnp
mov
pop
lret
xor
sub
cld
icebp
mov
dec
mov
push
dec
sti
mov
ret
adc
add
push
outsl
leave
in
mov
mov
in
xchg
pop
out
es
ret
je
push
femms
aad
mov
std
pop
xor
out
jno
jp
negb
sub
add
call
xchg
mov
lahf
add
fisubrs
push
mov
icebp
add
lods
push
jmp
mov
xor
ljmp
jne
and
xor
dec
gs
lock
leave
add
pusha
and
sbb
lea
cmc
test
rorl
stos
and
loop
pusha
adc
adc
jecxz
xchg
mov
sbb
lods
adc
xchg
adc
bound
or
std
neg
ljmp
outsb
adcb
xor
fidivs
or
adc
lret
adc
sub
mov
push
add
mov
pop
test
sbb
addb
lods
gs
in
pop
fiadds
push
or
mov
add
cmp
nop
push
ret
loopne
into
jne
bound
mov
mov
push
push
sahf
adc
aad
popa
mov
movsl
add
inc
inc
loope
test
mov
rol
dec
mov
inc
lcall
dec
or
push
mov
scas
sub
arpl
xchg
push
movsb
xor
dec
cmp
push
iret
pusha
jecxz
xchg
jne
and
shll
sub
mov
dec
out
jge
test
and
xchg
jne
adc
mov
xchg
xor
mov
or
mov
pop
pop
test
ljmp
and
mov
inc
xchg
add
mov
ja
loopne
fcomip
cmp
inc
call
fwait
aaa
cmc
add
or
in
xor
fsubrl
rcrb
xor
insl
aam
sub
mov
cmc
xchg
lahf
clc
sti
add
movsl
xchg
push
jb
xchg
and
cmp
xor
loop
icebp
stc
xor
mov
movsb
stos
or
adc
jns
inc
xchg
push
dec
aam
cltd
sub
out
and
addb
arpl
push
sub
inc
pop
or
jae
push
dec
or
clc
in
mov
mov
leave
in
scas
loop
push
scas
mov
and
push
dec
sar
jecxz
pop
aaa
aaa
sbb
ret
inc
jg
fwait
add
pop
add
dec
xchg
das
lret
adc
lods
inc
inc
fwait
sahf
imul
test
dec
es
push
mov
jae
pop
leave
ret
cmpsb
fs
pusha
push
pop
fdivrl
fdivs
and
lcall
push
dec
adc
fstp
rolb
jle
sub
fcomip
jne
and
fsubrl
ret
xor
lea
lahf
sub
in
test
and
popl
push
aad
pop
sbb
cs
pop
das
adc
in
push
daa
in
orb
dec
cld
repz
sahf
xchg
pushf
add
enter
outsl
cmp
movsl
lods
faddl
mov
jb
movsb
jecxz
js
add
xchg
pop
or
dec
mov
pop
dec
push
inc
imul
inc
mov
xchg
pop
mov
insl
dec
call
xchg
mov
mov
mov
call
cmp
mov
fldcw
gs
popf
dec
div
stos
xchg
out
cld
shrl
stos
shrb
push
mov
stos
sub
push
push
or
or
int
and
push
push
xchg
pop
out
mov
cltd
mov
scas
int3
mov
mov
mov
rorl
cli
ja
jb
aas
cmp
cmpsb
iret
call
push
cmp
jecxz
aam
aam
cmp
nop
xchg
insb
sub
mul
ja
jmp
movl
and
xchg
insb
into
pop
outsl
fs
dec
push
pop
lret
mov
cmp
cmpb
dec
inc
fs
gs
cwtl
sbb
imul
sub
adc
add
xchg
ds
mov
sub
or
pop
xor
jo
ffree
stos
cmp
test
repz
mov
rolb
ret
fwait
gs
sbb
int
js
xchg
test
mov
out
jp
cmp
addr16
or
fisubrl
in
mov
hlt
inc
or
xchg
sbb
sbb
xor
decb
and
lcall
in
mov
fs
push
mov
out
mov
dec
xor
inc
ja
flds
stos
mov
clc
call
dec
push
aam
enter
clc
sbb
imul
and
mov
dec
andl
in
icebp
push
filds
adc
lea
scas
cmp
iret
add
or
repz
sbb
test
aam
mov
lahf
test
pop
or
ficompl
sbb
cltd
jle
ds
inc
test
inc
outsb
add
call
les
and
xor
incb
lods
pop
scas
rcll
jae
out
pusha
lods
mov
aaa
inc
lahf
cld
popf
cmp
mov
lret
add
xchg
in
test
sbb
test
or
xchg
cmp
sti
mov
mov
add
fwait
ja
lret
ficomps
xor
or
std
insl
cmpsl
xchg
cmpsb
movsb
ds
les
add
xchg
or
call
icebp
cmp
cmp
jl
xchg
inc
mov
add
hlt
leave
add
sahf
xchg
inc
daa
pop
inc
gs
rclb
shl
aad
sbb
mov
inc
imul
pop
sub
outsb
aad
mov
mov
lahf
loope
and
jbe
loope
dec
into
add
inc
out
arpl
push
sub
push
inc
adc
jecxz
mov
dec
sub
pop
cmpsl
inc
or
enter
jl
and
or
fs
scas
or
ficoms
push
sbb
push
dec
fisubl
repnz
mov
ljmp
enter
mov
movsb
mov
das
in
pop
dec
loop
sub
inc
and
imul
cltd
push
mov
call
fcomip
fimuls
mov
fisubrs
pusha
aaa
cld
adcl
sbb
orl
sbb
mov
int
out
jg
pop
ds
or
pop
and
and
mov
lret
int
add
rorb
fs
ja
jp
mov
jge
push
les
add
nop
mov
arpl
dec
jecxz
rolb
pop
cltd
mov
dec
jo
pushl
pusha
sub
adc
aam
and
test
popf
in
fsts
sub
jo
sub
leave
icebp
or
pop
test
cltd
dec
xchg
movsb
mov
pushf
cmp
dec
sub
xchg
daa
or
scas
add
push
pop
loop
daa
dec
enter
xchg
insb
cwtl
jbe
mov
jle
ret
loope
sub
xorb
lods
in
orb
xor
add
dec
fildl
and
and
xchg
jae
jno
movsl
xchg
add
adc
fstpl
mov
mov
in
jge
outsl
lret
lahf
lods
jo
std
sub
and
fsubl
cmc
push
loope
xor
cmp
dec
mov
mov
insl
fcmove
in
incb
sarl
outsb
xor
mov
stos
and
push
push
cmp
sar
sbb
add
adc
push
vaddsubpd
js
cmp
leave
aad
add
or
or
sub
stc
inc
outsb
fldt
xor
xor
xchg
xor
cmpb
xor
out
jnp
dec
xchg
lret
cwtl
inc
movsb
outsb
rorb
out
xor
lods
pop
pop
mov
out
and
cltd
adc
add
jne
inc
jle
test
sub
sub
lret
test
dec
repz
xchg
lock
stos
inc
mov
ds
xor
jl
mov
movl
mov
imul
inc
aaa
xchg
int
addb
xchg
xchg
or
xchg
arpl
aad
xchg
out
fstps
add
jmp
dec
sub
mov
pop
pop
xor
imul
sub
jge
sbb
sub
xchg
insb
pop
dec
xchg
repz
insb
out
or
sbb
addr16
cmp
pop
ds
mov
clc
pop
dec
in
add
insb
stos
call
jecxz
inc
pop
mov
cmp
or
xchg
dec
dec
cmpl
scas
push
dec
mov
jbe
cmp
jns
shlb
dec
dec
fwait
cwtl
or
sub
je
dec
jnp
aas
cmc
cmovge
dec
sbb
hlt
stos
fsts
sarb
jo
popa
sbb
sbb
lahf
out
out
mov
dec
cmpl
xor
loope
jmp
cmp
jbe
enter
jnp
mov
sarb
outsl
jne
gs
push
jbe
push
mov
lret
repnz
and
and
divb
jg
xor
sbb
in
inc
jle
shll
push
lahf
inc
lock
dec
add
jo
fs
push
cmp
hlt
shrl
xor
jg
push
adc
cmpsl
and
insb
in
or
inc
jo
jb
mov
inc
popa
cmpb
mov
aam
ljmp
ja
cmp
or
repnz
pushf
xchg
sbb
jno
bound
mov
sbb
jo
imul
add
push
jmp
stos
and
jno
dec
push
lahf
jnp
outsl
aad
scas
adc
mov
aam
and
xor
adc
stos
insb
mov
cmpsl
xchg
aad
icebp
jbe
dec
ret
les
jp
ret
lock
pop
and
cmp
xor
std
jp
aam
shll
rcrb
mov
addr16
mov
sub
jle
inc
xchg
push
not
sub
and
mov
loopne
mov
loop
push
divl
jno
push
pop
test
iret
pop
out
push
test
or
pop
pop
jo
lret
sub
add
pop
outsb
sub
ret
inc
cmp
sbb
shrb
cmpsb
mov
sti
rcrb
pusha
pop
add
mov
pop
pushf
out
rcrl
mov
mov
mov
cmp
jg
push
mov
pushf
ret
push
inc
pop
ret
jg
rclb
cmp
sub
xor
hlt
dec
mulb
ret
dec
pop
cmpsb
adc
insl
sti
popa
fstps
mov
sbb
sbb
sub
dec
cmp
mov
scas
xor
inc
pop
mov
mov
jo
ja
and
out
loop
jp
sbb
mov
dec
inc
jno
sbb
arpl
out
cmp
cmp
sbb
dec
rcl
cmp
bound
xchg
xor
lahf
inc
cld
push
pop
es
adc
addr16
push
mov
or
movsl
pop
and
stos
lret
setg
or
lcall
add
rolb
data16
sub
and
xor
add
cmp
xlat
jmp
lahf
jbe
sbb
pop
ret
ja
push
les
mov
sub
mov
test
mov
icebp
lds
in
fmul
mov
jo
outsb
ret
jnp
out
rclb
fadd
cltd
sbbl
jb
mov
pop
shl
mov
sti
mov
repnz
imull
cmp
and
sbbb
popa
cmp
sub
mov
fisubrl
fwait
pop
aas
sti
inc
loop
push
outsl
xchg
pushf
mov
lea
js
call
pop
jae
push
inc
lcall
dec
daa
pop
pop
fdivr
xchg
pop
cmpsb
mov
aam
popf
dec
loopne
jae
imul
pop
xchg
int3
fistps
insb
add
call
js
pop
sbb
leave
scas
sbb
scas
hlt
adc
ficoml
jg
inc
mov
loop
jecxz
sbb
or
pop
clc
arpl
jbe
push
idivl
scas
pop
jl
shlb
sbb
cmp
into
test
ljmp
clc
adc
ljmp
das
xor
fwait
dec
shrb
lock
sbb
mov
pop
stos
push
ds
push
int
cmpsb
sbb
xor
nop
fs
cmp
in
xor
add
jnp
lahf
loope
fsubl
jbe
mov
ss
xor
std
pop
pop
outsb
sub
adc
nop
cmc
pop
add
xor
sbb
adc
lahf
fsub
xchg
popf
xor
lret
rorb
mov
dec
lcall
loope
add
adc
mov
mov
pop
jnp
xchg
sub
rorb
jmp
rcl
sarl
mov
mov
push
loopne
push
mov
pop
fisubl
mov
jno
stos
mov
stc
pop
clc
outsb
lret
ret
mov
das
lcall
mov
fs
fiaddl
push
int3
insl
adc
outsl
adc
out
sub
ljmp
pop
or
mov
gs
jnp
ds
xchg
mov
icebp
test
cmp
mov
cmp
into
pop
les
mul
sbb
out
push
mov
mov
pop
jp
pop
sbb
insl
int
push
jnp
ja
dec
jge
jb
popa
mov
fildl
inc
sbb
icebp
mov
fsubr
pop
or
xchg
pop
cmp
int3
mov
mov
push
out
je
insl
cmp
pop
jno
mov
out
out
out
or
lret
pop
jno
and
sbb
lea
mov
jb
icebp
xchg
shl
inc
pop
sbb
sbb
push
sahf
fmuls
shlb
add
outsl
mov
xor
jnp
mov
test
xchg
cwtl
inc
stos
cltd
arpl
nop
mov
mov
sub
sub
xchg
icebp
inc
div
daa
test
pop
and
pop
and
sub
xchg
sbb
repz
ds
cs
clc
cltd
out
add
scas
repnz
leave
out
ficoms
test
jb
cld
adc
jbe
mov
leave
rorb
ljmp
cmp
cmpsb
cmp
insl
add
sbb
inc
scas
xchg
xchg
inc
mov
fucomip
mov
mul
push
mov
push
inc
cwtl
sub
mov
aam
xorb
pop
into
sbb
mov
xor
lock
or
sub
cmpb
inc
int3
ret
xor
aas
or
imul
xor
lods
xor
push
pop
rep
iret
aam
sbbb
add
push
nopl
cs
jmp
arpl
in
push
mov
test
lahf
and
dec
arpl
jg
aas
aas
sbb
imul
mov
ja
or
xorl
cmp
pop
lea
scas
mov
mov
mov
push
pop
or
cmc
mov
lcall
push
mov
and
mov
int
mov
sbb
stos
cwtl
add
mov
pop
scas
jbe
test
pusha
cli
arpl
mov
mov
inc
push
movsl
loop
xchg
sbb
xchg
push
loop
inc
mov
adc
and
pusha
sbb
sbb
loop
fwait
pushf
lods
iret
lret
push
jnp
push
sti
or
and
add
aaa
test
pop
mov
push
outsl
fs
clc
pop
mov
rcl
lahf
dec
fcmovnu
in
cltd
dec
jge
mov
push
loop
mov
xor
xor
fs
lret
xchg
push
push
dec
sub
shll
pop
and
mulb
adc
fs
cmp
mov
jo
std
shll
lds
or
dec
push
or
int
sub
jo
inc
cltd
das
push
add
nop
ljmp
mov
fsub
sub
pop
mov
addr16
call
dec
push
jbe
mov
sub
sbb
cmpsl
cmp
and
js
popf
mov
mov
pop
dec
mov
pop
pusha
cli
push
mov
xchg
fisubs
jg
fistps
cmp
cmp
cld
addb
arpl
test
xor
sahf
mov
xchg
mov
pop
inc
shll
sub
sub
data16
jb
push
imul
mov
pop
fwait
gs
push
inc
insb
lahf
insb
push
mov
mov
sub
scas
movsb
ljmp
scas
or
mov
sbb
lods
rcll
mov
out
imul
or
inc
pop
jbe
jno
addl
cwtl
pusha
mov
xlat
iret
inc
and
jae
loop
negl
fcompl
cmp
pop
mov
xchg
push
ror
push
and
stc
std
adc
adc
mov
lds
les
push
aas
xchg
and
cmc
lcall
aas
repnz
pop
sbb
stos
enter
rorl
popf
add
push
fstl
cmp
fsts
xchg
imul
scas
jecxz
ds
mov
mov
xchg
mov
sbb
push
gs
lahf
lcall
lods
pop
fistps
cwtl
outsb
stos
jno
movsb
pusha
out
mov
jmp
push
sbb
cs
mov
fmuls
lahf
jne
ljmp
pop
mov
xor
insb
pop
cli
jg
ret
filds
xchg
xor
ss
roll
lret
pop
cld
idivl
xchg
add
scas
fildll
jb
imul
or
cwtl
and
insb
mov
lcall
lds
ret
shrl
pop
xor
in
out
jae
xchg
andl
loope
lret
lret
jne
xchg
pop
jns
cmp
jecxz
aas
fildl
mov
sti
les
mov
icebp
xchg
pop
xchg
xchg
lods
outsb
pop
bound
mov
pop
mov
popa
mov
int
hlt
push
std
ss
imul
mov
test
sub
jnp
iret
lea
aas
fstps
mov
movsl
cmpsb
rcrb
and
xor
rol
push
mov
jecxz
ljmp
in
mov
lods
arpl
sbb
lea
shrl
xchg
hlt
loopne
dec
divl
aas
cltd
shlb
xchg
cmpsb
shll
fsubs
xchg
scas
cltd
scas
out
in
adc
adc
mov
push
xchg
mov
shlb
lods
fisubrs
push
arpl
pop
in
pop
idivl
lods
test
cs
xchg
sbb
mulb
xor
fcomi
mov
jmp
or
ret
scas
mov
add
imul
xor
cmp
shrb
push
stos
aad
lock
mov
call
ja
sbb
outsl
mov
loope
mov
mov
or
lcall
push
cmp
out
js
cmc
pop
ret
cmp
add
sbb
lods
leave
cmc
pop
add
out
das
dec
es
push
pop
cmp
sbb
in
scas
lea
das
sub
dec
lock
into
xor
or
nop
cmp
stc
mov
push
jmp
lds
lods
cs
xor
sbb
xor
or
data16
mov
arpl
or
mov
ds
mov
stos
lcall
enter
add
sbbl
dec
test
jb
push
xchg
es
inc
jp
push
mov
mov
dec
inc
adc
inc
mov
scas
sub
sub
jnp
int3
mov
rorb
movsl
mov
fdivs
test
jge
subl
shl
or
int
xor
mov
jb
imul
mov
bound
mov
aaa
cltd
mov
iret
ja
dec
push
stos
pop
stos
sub
movsl
fucomp
pop
stos
xchg
dec
pop
movntq
mov
xchg
sbb
inc
int3
into
jno
ss
mov
xchg
push
into
imul
popf
in
push
mov
test
xor
push
push
loop
add
cmpsl
mov
lea
out
es
insl
addl
xchg
arpl
jmp
in
adc
dec
sub
jae
mov
sub
fisubl
call
fldcw
bound
and
mov
bound
test
imul
dec
test
dec
outsl
fistpl
xchg
sbb
sti
jnp
sbbb
jmp
add
push
loopne
xchg
mov
dec
ficomps
inc
sub
ficomps
arpl
dec
xlat
jp
add
inc
cmp
or
mov
movsb
cltd
ret
pop
popa
in
ret
outsb
inc
push
stos
mov
repnz
push
jmp
jp
sub
adc
push
push
lock
add
and
leave
movsl
pop
iret
or
aas
arpl
in
aas
or
sbb
adc
push
or
push
outsl
sbb
pop
je
lods
push
inc
fsubrp
and
nop
arpl
in
mov
xor
or
dec
xlat
dec
mull
push
imul
inc
push
push
add
inc
popf
inc
sub
lods
dec
lcallw
adc
sbb
cli
cltd
scas
lcall
test
sub
out
jp
cmc
stos
test
lcall
lds
push
inc
sub
ja
xchg
fcoml
inc
lret
stos
mov
repz
push
mov
cld
or
cmp
adc
fsubrs
fwait
lahf
xchg
je
cmp
fsubp
fwait
jg
mov
std
jnp
pop
cmc
out
test
js
mull
inc
movsb
xchg
js
or
dec
push
push
paddq
add
pop
mov
in
push
mov
and
in
or
inc
mov
push
popf
or
cmp
add
or
rcrb
or
ror
daa
cmp
movsb
jb
jle
mov
mov
ret
std
in
loop
push
jmp
cmpsl
int3
ljmp
jbe
pop
arpl
cs
daa
pop
nop
loope
xchg
jae
jae
dec
fwait
outsl
jae
jp
inc
outsl
fnsave
ja
pop
and
cli
push
xlat
rclb
mov
add
les
das
ret
push
ret
add
xor
xchg
push
ret
lcall
xor
cmc
cmpsb
mov
add
aam
aad
fs
mov
jl
pop
xchg
std
mov
xchg
loopne
add
pusha
outsl
adc
xchg
add
push
and
lret
out
sti
mov
sbb
stos
and
lahf
das
and
pop
xlat
and
xchg
outsl
es
push
push
xor
push
movsb
inc
popa
cltd
jmp
aam
and
aaa
out
cmc
mov
xor
std
sub
cmp
mov
mov
pop
sbb
mov
push
mov
clc
mov
mov
mov
sub
or
addr16
xchg
popa
mov
shll
clc
sub
push
mov
scas
mov
jne
inc
cmpsb
andl
pushf
lret
ret
add
pop
bound
pop
decb
xchg
sbb
push
in
adc
stos
sub
stc
rclb
xor
and
lret
sbb
and
mov
into
aad
jnp
add
les
cli
jecxz
push
adc
pop
jo
subb
pop
rcrl
add
add
mov
lods
and
ret
pop
dec
push
and
and
push
and
mov
xchg
sub
push
loope
mov
xchg
mov
adc
movsl
push
xchg
cmp
bound
std
or
movsl
dec
mov
cmp
xchg
add
icebp
loope
shll
shlb
js
dec
or
mov
pop
inc
cwtl
test
in
mov
clc
cmc
pop
flds
test
mov
loop
push
xor
lods
cmpsb
pop
fldenv
rcll
adc
push
lret
mov
adc
aad
mov
dec
gs
xchg
notb
jbe
cmp
daa
xor
sbb
xchg
mov
adc
daa
dec
fbld
mov
sub
aaa
mov
or
and
lea
push
test
lcall
insb
test
mov
push
pop
cmp
fsubl
inc
mov
push
insl
iret
xchg
or
jecxz
in
mov
sbb
orb
mov
cmp
jb
sahf
xor
out
pop
mov
xchg
xchg
mov
xchg
sub
xchg
imul
test
mov
push
aaa
dec
call
add
icebp
lret
adc
xor
sub
testl
mov
aad
jmp
ss
inc
jge
lea
jge
cmp
popf
dec
call
cmp
sbbl
addr16
cmp
addb
cli
movsb
pop
pop
mov
cmp
push
push
addr16
adc
jno,pn
pop
scas
ja
xchg
mov
xchg
andb
aaa
sbb
sti
andl
add
mov
outsl
out
fistpll
repnz
cmp
jb
xor
pop
mov
jge
stos
cmp
jecxz
test
xchg
aas
and
fwait
lds
jae
dec
icebp
inc
fs
lods
lcall
outsl
mov
xor
and
fmuls
pop
mov
xor
pushf
mov
mov
xor
mov
or
sbb
bound
pop
fnstsw
jge
dec
cltd
jp
lcall
arpl
adc
fs
inc
mov
nop
mov
xor
mov
pop
es
adc
int
into
xchg
fiadds
repnz
xor
loopne
imul
testl
loope
daa
push
jne
pop
sahf
sbb
lret
data16
inc
push
unpckhps
scas
rcrl
cmpsl
pop
push
mov
shr
dec
iret
insl
and
out
cmp
mov
mov
scas
jbe
pop
xlat
sub
mov
jle
rcrl
fsubr
lods
movsl
lret
mov
inc
push
inc
push
mov
sbb
out
imul
mov
sub
mov
mov
insb
or
xor
cli
test
pop
pop
or
jmp
and
pop
lcall
call
and
fidivl
inc
bswap
mov
sarl
js
movl
sbb
gs
imul
lds
decl
fistpll
sbb
pop
fstl
mov
inc
cmp
dec
mov
ror
aad
mov
sbb
ljmp
js
incb
out
mov
mov
lock
or
inc
cmpb
xchg
and
mov
mov
push
sub
jmp
in
loopne
out
mov
pop
cli
sarb
xor
pop
add
sti
test
mov
cmpsl
pop
lods
pop
gs
inc
popf
pop
lahf
test
rolb
les
push
push
popa
or
lret
cmp
cmp
fisubl
nop
in
daa
pop
push
dec
sub
jo
inc
in
mov
sbb
mov
pop
insl
fs
rorb
jg
js
adc
mov
pop
jbe
jns
ja
loopne
push
hlt
mov
pop
repnz
idivb
imul
fucomi
repnz
fs
dec
dec
mov
jno
stc
shlb
mov
inc
cmp
dec
stos
test
fs
adc
and
test
adc
pop
xchg
jbe
push
cmp
fsubrp
loopne
mov
stos
jae
dec
cmpsb
mov
ds
mov
push
out
ret
cmp
and
jg
dec
jge
je
icebp
pop
mov
lods
and
jbe
fsubr
je
stos
fcmovbe
push
pop
and
jns
int3
rorl
mov
sbb
sbb
sbb
out
adc
mov
fstps
sbbb
xchg
mov
xchg
int3
jnp
add
in
xchg
cltd
in
jns
or
sub
push
jecxz
repnz
xor
inc
sbb
cs
add
shrl
or
out
mov
cmp
mov
test
inc
push
adc
pop
out
stc
cmp
loopne
mov
int3
pushf
decb
sub
mov
jl
in
call
data16
or
cmp
cmp
les
jo
mov
fadd
scas
sub
push
fildl
lea
xchg
and
jecxz
xor
lea
sbb
sbb
xchg
dec
fs
pop
mov
call
lods
lret
ret
je
mov
das
mov
and
stc
mov
lods
sbb
ja
outsl
or
add
inc
jl
push
in
lret
fcoms
inc
xchg
adc
xor
mov
jno
sbb
xchg
sbb
jp
inc
mov
pop
adc
stos
jo
and
push
jecxz
aam
out
test
jecxz
push
pop
dec
inc
mov
repz
pushf
sbb
adc
push
leave
xchg
fs
dec
add
notl
push
jmp
aas
nop
mov
xchg
rolb
and
jmp
cmovp
in
xor
in
add
jmp
fistps
data16
scas
jbe
push
cld
testl
xor
in
mov
mov
test
mov
daa
mov
dec
nop
fs
push
filds
dec
lock
cmp
lds
fdivr
and
and
ds
sahf
cmpl
cmc
adc
mov
pop
pop
sub
xchg
mov
in
lcall
sbb
push
into
dec
outsl
push
mov
stos
ret
std
lret
cmp
fsubrp
fisubs
inc
jns
mov
or
movsb
int
icebp
int
call
mov
in
mov
int3
stos
xor
imul
jo
aam
rolb
jo
aad
std
mov
arpl
dec
mov
fs
sub
xchg
inc
insl
int3
push
xchg
dec
insb
aad
test
jmp
fcoms
fisubs
out
sbb
mov
outsl
fistl
cmp
and
mov
shrl
out
sbb
mov
push
aaa
sbb
aad
mov
cmp
sbb
imulb
rorb
stc
fstp
xor
xor
dec
jae
pop
stc
ljmp
add
cmc
movsb
sub
mov
dec
mov
fcoml
leave
ja
fldl
mov
lea
shl
iret
iret
xchg
loopne
add
andl
and
jle
scas
out
nop
out
mov
popa
pop
and
bound
sti
inc
or
pop
fiaddl
inc
push
icebp
pop
repz
cmp
movsb
push
dec
and
mov
xchg
aad
lods
jg
adc
mov
inc
jbe
faddl
cli
mov
rol
or
fwait
xor
jle
adc
iret
sub
out
arpl
pop
mov
sbbb
je
add
add
lcall
mov
outsl
lahf
inc
mov
shrb
dec
fs
add
pop
add
lret
push
loop
arpl
insb
pusha
inc
out
cmc
adc
sbb
dec
in
jge
dec
fstpt
xchg
mov
xor
sbb
das
mov
int3
dec
xchg
xchg
push
mov
cwtl
jae
enter
mov
loopne
dec
clc
jae
pop
faddl
adc
xor
cmpl
arpl
mov
inc
adc
add
xchg
xchg
sbb
vpsubb
movsb
sub
mov
repnz
cld
repz
in
outsb
push
call
loope
dec
mul
and
repz
scas
add
jo
mov
lea
inc
dec
mov
icebp
clc
into
sub
inc
out
xor
inc
push
jae
sbb
js
push
pop
jb
xor
jg
in
outsb
pop
mov
andb
aam
and
lahf
sti
mov
lret
xchg
addb
inc
push
imul
call
daa
pop
xlat
lretw
add
leave
mov
insl
jecxz
scas
ret
inc
cmc
jge
adc
mov
jp
cmp
lea
mov
loope
test
test
mov
xor
pusha
push
inc
loope
test
push
loopne
les
in
sub
or
scas
fimull
jle
push
insb
jo
and
nop
jns
data16
into
push
adc
test
adc
rorl
mov
insl
mov
rolb
das
dec
push
sub
mov
mov
daa
xchg
in
dec
cmpsl
push
mov
adcb
stos
movsb
rcrl
aas
cwtl
mov
fwait
imul
adc
xchg
inc
out
pop
inc
out
ljmp
adc
pop
jnp
pop
lret
ljmp
sub
pop
add
inc
nop
cmp
fsub
or
addr16
pop
data16
rorl
shll
shrl
adc
dec
iret
cltd
jno
dec
jg
adc
cmp
xchg
fcmovne
lret
jnp
dec
sahf
sbb
mov
addl
xchg
imul
inc
out
pop
cmpsl
inc
data16
jne
mov
mov
push
lea
lret
iret
rcrb
sti
scas
inc
cmp
mov
insl
hlt
inc
lret
jns
ficompl
jnp
data16
mov
jns
aad
in
lock
mov
movsb
and
mov
xchg
mov
mov
sti
xor
sahf
es
lret
mov
leave
sbb
clc
aas
pusha
mov
iret
int
inc
xchg
xor
sbb
mov
pop
pop
dec
data16
mov
mov
mul
pushf
cmc
dec
cwtl
dec
and
push
mov
outsb
xchg
aad
cmpl
jle
and
dec
iret
xor
leave
notl
jno
mov
or
mov
in
cmpsb
adcl
lret
icebp
das
inc
push
adc
ds
imul
std
jae
push
test
shr
mov
pusha
push
les
cmc
ljmp
xor
fstps
xchg
or
or
out
mov
push
dec
push
test
sub
jnp
jno
sti
shl
and
jb
xor
repz
dec
cmp
inc
bound
dec
mov
push
out
pop
clc
les
mov
or
mov
pusha
in
subb
xor
test
xor
sahf
mov
add
xchg
sub
aas
dec
out
and
insb
je
jl
in
int3
adcl
testl
and
sbb
push
sub
inc
mov
lcall
je
cwtl
js
and
data16
xlat
sbb
mov
sub
inc
xchg
push
fstps
lods
test
out
jbe
in
daa
pop
test
clc
mov
mov
mov
cmp
jmp
popf
in
pop
sub
stos
xchg
xor
inc
in
mov
cmc
add
mov
inc
sbb
pop
sbb
sarb
arpl
cwtl
inc
mov
je
or
cmp
inc
or
stos
or
aam
rcl
iret
jp
inc
movsb
inc
out
push
mov
xor
adc
mov
xlat
movl
jb
sti
das
push
jbe
aas
ret
je
leave
mov
mov
imul
mull
sbb
enter
jp
iret
pop
sysenter
shl
mov
jne
mov
sahf
adc
sbb
or
jl
ljmp
adc
or
outsl
fwait
or
pop
sub
shl
pushf
mov
lcall
xchg
ret
sbb
jl
bound
xor
dec
fs
loopne
test
or
test
insl
xchg
aaa
in
inc
lods
mov
mov
push
sbb
cmp
rcrb
call
dec
inc
and
jno
mov
inc
add
push
addb
mov
insl
pop
in
sti
or
or
mov
pop
push
sbb
mov
add
or
adc
outsl
rcll
dec
xchg
aam
mov
out
and
add
inc
sub
into
push
jle
push
ds
mov
lods
push
das
cmc
clc
fcompl
lds
fdivrl
mov
cmp
or
ds
sub
sbb
xor
mov
sbb
rorl
jo
add
mov
lret
dec
xchg
pop
ds
xchg
mov
mov
scas
mov
test
mov
out
lods
dec
adc
repnz
jb
in
push
mov
jl
call
push
xor
popa
popf
lods
sbb
cmp
insl
stos
test
outsb
add
mov
mov
les
xor
lret
push
cmp
pop
sbb
jo
dec
mov
fsub
xor
cmp
and
fcoml
fadds
mov
mov
dec
pop
sub
movsb
lea
and
aad
sahf
xlat
xchg
repnz
sub
and
mov
fs
mov
sub
push
xchg
insl
or
mov
push
out
cmp
arpl
dec
mov
push
rcl
sub
sub
ret
xor
jnp
testl
jg
jb
dec
xlat
mov
mov
or
add
or
cltd
idivl
lahf
in
lods
das
arpl
daa
push
jmp
mov
cmp
push
push
dec
stos
adc
popf
das
xchg
add
movb
dec
sub
sub
lock
mov
mov
dec
mov
fldl
cmc
fwait
sbb
xchg
dec
push
enter
daa
mov
dec
add
sub
sbb
xchg
call
dec
lret
push
orb
arpl
mov
jge,pn
adc
sub
orl
es
or
inc
or
repnz
sarb
inc
xchg
dec
jne
sarl
pop
cmpsl
sbb
cwtl
cld
roll
sbb
jg
sahf
push
outsl
outsl
call
dec
xchg
jno
xchg
inc
jo
xor
lret
mov
sbb
pop
fs
loopne
push
lods
pop
and
je
fcomps
cmp
xchg
mov
xchg
sahf
iret
mov
movsl
push
fimuls
aas
add
hlt
aas
daa
lods
mov
sbb
mov
rcrl
jl
or
unpcklps
aad
int3
jmp
xor
mov
sub
xor
dec
jmp
repnz
jmp
jmp
lds
stc
and
mov
cmp
repnz
mov
dec
test
rcrb
or
and
xor
jp
into
test
dec
enter
jp
repnz
pushf
sbb
call
add
xchg
xor
push
mov
aam
test
xchg
enter
and
jno
js
mov
push
pop
call
sub
sub
cltd
pop
lea
inc
outsb
mov
or
addr16
mov
lcall
inc
push
lods
mov
int
xchg
aaa
adc
xor
sbb
aad
jle
out
adc
mov
cltd
orb
add
push
lock
xor
xchg
js
pusha
cmp
fucom
mov
push
pop
adc
push
sahf
adc
jle
cs
scas
push
cld
aad
push
lds
mov
mov
xchg
aaa
movsl
push
in
or
or
test
sbb
rcrl
pop
fwait
imul
js
and
lods
or
add
add
adc
fldcw
jp
fcmovnu
shlb
and
push
aam
mov
icebp
pop
sbb
repnz
fbld
insl
push
mov
or
mov
test
hlt
fdivr
nop
jmp
sbb
stc
mov
cwtl
mov
das
mov
xor
in
shr
lcall
ret
mov
pop
inc
mov
cwtl
test
je
pop
mov
daa
insb
gs
mov
inc
inc
sub
int
hlt
sub
mov
lret
xlat
ja
mov
push
xchg
out
push
lahf
pop
adc
push
in
mov
cmpsl
out
test
and
repnz
push
adc
adc
shll
fcmovbe
mov
cmpsl
inc
cs
test
push
imulb
mov
ljmp
add
aas
mov
pusha
mov
sub
dec
ret
popf
cmpsl
mov
ret
xchg
std
push
pop
pop
push
clc
sbb
insl
rorl
mov
test
andl
cmpsl
mulb
dec
sti
adc
xor
fstps
lcall
or
sub
sub
mov
mov
mov
in
loop
int3
mov
mov
leave
ss
test
xchg
or
out
mov
nop
std
das
fcomi
ja
xchg
mov
jmp
adc
sub
sbb
xchg
mov
ja
pop
sahf
pop
jae
std
sub
inc
test
out
or
popf
jbe
shll
xchg
push
loope
mov
cli
pushf
lret
xlat
pop
fs
jle
aaa
call
fsubrl
jmp
cmc
fdiv
push
pop
aad
sbb
fidivs
dec
mov
or
popf
shl
dec
cmp
in
aaa
std
lahf
cmp
mov
movsl
test
xor
xor
pop
jp
adc
push
xchg
mov
lea
pop
and
fimull
push
jns
je
fsubrp
aam
fisubrl
pop
xchg
push
cmpsl
pop
ljmp
outsl
cwtl
push
insb
dec
pop
inc
aas
in
dec
movsl
push
push
in
push
inc
xchg
and
or
mov
rclb
add
das
inc
int3
push
leave
add
adc
mov
es
jge
or
outsl
shl
mov
lcall
icebp
and
fmull
outsl
jno
ss
out
mov
sub
and
dec
mov
repz
test
jg
pop
mov
mov
xchg
sub
pushf
jae
mov
jae
enter
pop
pop
or
bound
call
or
mov
pop
fadds
cmpsl
pop
loopne
add
mov
sbb
pop
sbb
insl
cmp
movsb
inc
xor
mov
popf
andl
cmp
leave
out
ljmp
mov
lods
inc
mov
mov
aaa
or
fwait
subl
mov
mov
les
adc
les
popa
pop
cmp
mov
xchg
les
push
mov
jmp
sub
mov
jmp
icebp
imul
dec
jo
mov
cmpsl
adc
cmp
lods
push
gs
testb
mov
sub
movsb
testl
mov
jp
fldl
jo
push
xlat
xor
xchg
aam
add
ret
test
rolb
pop
xor
outsb
or
fs
sbb
int3
int3
cli
decb
mov
push
mov
ret
inc
cld
jge
scas
fisttpll
mov
into
cmp
xchg
pop
mov
sub
sbb
insb
aas
stc
pop
sti
stos
ret
and
and
mov
or
xchg
aaa
push
mov
shlb
mov
sbb
fcmovu
push
pop
mov
xlat
adc
sbb
push
imul
xor
mov
xor
xchg
dec
jg
lret
loopne
jg
mov
mov
loop
xor
mov
aad
fildl
leave
cs
leave
mull
dec
lds
into
xchg
inc
jp
dec
movl
xchg
pop
iret
jns
loop
jp
mov
lcall
pop
rol
cmc
fwait
cmp
xchg
push
lds
push
push
jecxz
lds
stos
testl
cmc
mov
loope
adc
add
and
lds
aaa
in
mov
cmpl
add
sahf
push
push
dec
sbb
fsubs
adc
dec
dec
nop
ret
inc
in
sub
out
lea
mov
mov
mov
add
js
pop
into
cwtl
stos
jl
mov
push
jle
mov
xor
stc
jecxz
add
in
imul
push
ds
mov
mov
dec
push
rcll
dec
in
mov
clc
pop
adc
mov
adc
dec
sarl
int
loope
xchg
jo
sbb
mov
ja
movsl
jno
pop
pushf
frndint
jge
pop
pop
adc
mov
stc
or
stc
sbb
sbb
jmp
xchg
cmp
loope
daa
sub
dec
dec
int3
sbb
mov
push
sub
addr16
popf
popa
jecxz
fcompl
adc
cmpsb
emms
push
adc
test
es
adc
testb
iret
aaa
sub
mov
je
lret
popa
test
std
sbb
in
sub
shrb
sahf
lods
or
cmp
xchg
stos
mov
ficoml
pushw
push
xor
and
jne
pusha
inc
mov
fisttpl
ficomps
mov
or
cmpsb
je
or
pop
test
std
scas
or
int
ficomps
mov
add
jmp
add
sub
push
mov
aas
lret
xchg
repz
xor
es
xor
sbb
push
cmc
mov
sub
in
cmp
hlt
pop
rclb
movsb
jecxz
mov
stos
inc
test
push
pop
test
hlt
adc
dec
les
aam
inc
sub
loop
xchg
lret
pop
xchg
mov
mov
push
pop
sbb
sub
xlat
push
inc
fsubrs
cmp
dec
repnz
xor
adc
push
xor
testl
es
or
adc
mov
and
lds
imul
inc
xchg
push
pop
mov
mov
pop
imul
jl
leave
pop
mov
fisttps
repnz
sbb
lea
mov
pop
std
loop
add
mov
mov
pop
jg
sub
test
jl
mov
lea
test
xchg
ffreep
test
push
mov
fxch
lahf
mov
aad
adc
mov
outsb
cmp
and
ds
jbe
data16
insl
sarl
and
xor
jge
sbb
insl
or
lcall
cmp
or
sbb
dec
inc
aas
sbb
test
lcall
cmpsl
out
add
sub
lahf
jo
or
lret
fsubs
dec
pop
dec
jle
add
ds
hlt
rcr
sbb
or
and
inc
iret
mov
inc
aas
fisttpll
add
loope
sbb
xchg
repnz
dec
sbb
or
adc
lds
mov
lods
gs
lahf
mov
roll
push
cmpsl
flds
cmp
sub
mov
dec
shr
mov
xchg
push
inc
mov
mov
dec
jge
mov
jae
xchg
mov
cli
push
and
aas
dec
shlb
aad
les
xor
push
test
mov
fidivs
mov
lock
aam
nop
xchg
jmp
orl
mov
xor
test
mov
mov
lock
aas
adc
addl
subl
mov
mov
movsb
cld
pop
aad
fiaddl
mov
sahf
cmp
add
xchg
mov
es
loope
sbb
in
cmpl
add
xchg
movsl
in
cmp
negl
std
sbb
dec
cmp
fwait
or
mov
int3
pop
inc
loope
imulb
or
ret
je
arpl
outsb
repnz
sub
popa
xor
cmpsl
inc
push
lock
pop
das
push
xlat
mov
fildll
cs
xchg
xchg
mov
mov
push
cli
dec
imul
loopne
sub
rcrl
sbb
adc
pusha
cld
add
out
xor
nop
rclb
das
loope
xchg
fwait
shlb
cwtl
jge
or
and
idiv
sbb
mov
or
adc
mov
push
popf
mov
adc
cmp
scas
cltd
in
ds
sbb
adc
dec
or
daa
adc
jl
mov
enter
stos
stos
pop
movl
mov
popa
in
pmullw
pusha
mov
cmc
inc
mov
inc
gs
test
cmc
add
mov
lahf
dec
xor
in
inc
ss
dec
jmp
out
mov
cmp
lds
fdivrs
inc
aas
jle
out
push
sbb
sti
sbb
scas
cmpsb
push
clc
sub
and
mov
jp
icebp
inc
inc
aad
iret
and
inc
or
test
pop
push
and
jl
popa
xchg
ds
cld
cmc
test
xlat
out
es
mov
shrb
popf
dec
jp
or
dec
jecxz
pop
dec
pop
pop
int
push
mov
mov
mov
lods
ret
bound
pop
sbb
lret
pushf
sbb
lods
jne
call
incl
lods
test
inc
jmp
fisubs
push
clc
movsl
pop
sbbb
xlat
mov
jle
pop
mov
js
sahf
enter
mov
or
or
jno
sub
jge
mov
sub
ljmp
push
mov
or
jae
pop
mov
repz
add
pushf
cld
imul
mov
pop
cmp
jbe
mov
xor
test
fwait
icebp
mov
pop
orl
xlat
mov
push
pop
xchg
adc
incb
add
ja
jp
jns
int3
retw
popa
dec
rorl
cmp
decl
jns
push
fwait
cmp
ret
add
pushf
jns
sub
add
push
orl
nop
xor
push
inc
jmp
or
sbb
mov
inc
shrb
pop
enter
xor
xchg
jo
les
imul
mov
arpl
fadds
aaa
bound
outsl
add
dec
fwait
pop
cmp
in
ret
dec
js
mov
clc
jb
mov
sarl
cmp
mov
icebp
pop
cmpl
adc
cmp
ret
testl
lahf
fcoms
push
rolb
adcl
notl
xchg
roll
mov
fmul
lret
mov
or
fimuls
scas
mov
add
push
orl
adc
xor
fyl2xp1
inc
pop
dec
inc
push
and
sub
stc
sub
pusha
subb
pop
or
add
mov
enter
popf
stos
or
rcrb
cmp
es
repz
mov
jbe
sbb
push
push
xlat
repz
push
add
pop
mov
arpl
testl
mov
inc
xor
push
test
rclb
repnz
ret
cmp
mov
sub
pusha
ret
cmp
leave
ret
adc
iret
loop
push
mov
stos
lods
mov
rcrl
enter
loop
pop
test
pop
les
in
mov
ficompl
shrl
shr
repz
sub
mov
out
jne,pt
shlb
cmp
and
fwait
adc
popf
xor
les
fdivs
cmpsl
pop
out
dec
add
push
movsb
cmpl
or
dec
cld
sbbb
aas
adc
pop
xchg
js
xor
push
push
pop
adc
loop
test
push
sub
pop
lea
arpl
cld
js
push
mov
fs
leave
pusha
cmp
and
xchg
pop
inc
jo
add
sbb
xor
add
mov
xor
lods
mov
adc
jl
push
mov
je
mov
repnz
aad
jmp
ret
push
pusha
or
mov
mov
push
mov
xor
loope
jno
shll
stc
add
inc
cmp
mov
or
bound
lock
movsl
hlt
lret
imul
or
add
jns
inc
fwait
or
pop
inc
sub
adc
js
mov
or
pop
sti
cs
push
xchg
fwait
mov
add
leave
dec
bound
repnz
pusha
pop
pop
ljmp
lods
movsb
fisttpll
jne
jnp
ret
sbbb
in
mov
inc
bound
add
into
insl
inc
icebp
icebp
repz
push
mov
add
mov
cmpsl
dec
addr16
mov
test
faddl
scas
adc
sub
push
push
mov
sbb
in
les
and
out
push
inc
mov
je
xchg
jg
shll
cmp
mov
sbb
mov
sbb
lods
in
daa
cmp
inc
jp
add
mov
sub
xchg
inc
mov
pop
push
pop
push
pusha
pop
jno
inc
lods
pushf
js
mov
bts
je
sbb
pop
sbb
add
jmp
jne
ja
push
std
leave
pop
cmp
xor
int3
jae
inc
por
and
mov
popf
jecxz
mov
int
stos
ja
mov
mov
push
mov
in
xchg
gs
add
cli
cwtl
sbb
inc
mov
sbb
push
dec
pop
dec
mov
jecxz
mov
loop
loopne
in
cmp
into
sahf
xchg
jl
jo
dec
out
sub
call
aad
test
inc
loop
lods
pop
add
addb
sbb
rorb
mov
mov
sub
push
mov
mov
xor
mov
std
cmp
mov
mov
fsubrs
lods
jno
or
pop
pop
shrb
rolb
and
popf
sub
mov
in
daa
xchg
cmp
aam
cmp
outsl
int3
outsb
jge
ret
shrb
js
pop
mov
test
jae
dec
outsl
shlb
push
imul
inc
cmpsl
mov
mov
inc
mov
popf
arpl
mov
push
stos
cmp
mov
cmp
es
daa
cltd
push
jo
aaa
leave
pop
or
cmovb
insl
loopne
xchg
push
pop
mov
iret
lods
or
mov
push
dec
jae
addl
jmp
jno
aad
pop
and
sub
xchg
ret
dec
jns
sub
xor
dec
pop
push
movsb
data16
ds
mov
pop
test
cwtl
fistl
sub
jg
jecxz
ss
and
push
add
pop
jbe
pushf
lock
cmp
mov
adc
push
push
int3
or
inc
repnz
push
shrl
test
popa
and
adc
js
test
iret
dec
inc
subb
dec
aam
cmpsl
and
lods
aas
leave
subb
jl
movsb
and
insl
je
xchg
xchg
pop
mov
jl
loope
mov
mov
and
ret
or
dec
push
lret
sbb
jb
jl
push
pop
pop
sahf
fnstcw
test
push
cmp
push
push
lcall
sbb
xor
mov
out
or
scas
ja
frstor
add
mov
bound
pop
ljmp
xchg
clc
adc
in
and
imul
lea
push
shr
loopne
addr16
cmpsl
inc
ret
out
mov
div
fidivrs
xchg
stos
sub
xor
xor
sar
int3
dec
jp
mov
popf
sub
jb
add
or
pop
mov
xchg
add
inc
mov
sbb
and
pop
addr16
lock
push
xlat
xchg
sub
cld
or
inc
mov
mov
or
push
sub
hlt
ror
pop
aas
jnp
shll
dec
sub
jno
mov
lea
add
sbb
cwtl
mov
gs
pushf
dec
dec
mov
hlt
dec
imull
fdivp
sbb
and
adc
jmp
push
cmpsl
fcomi
aas
jmpw
or
inc
out
movsb
mov
sti
int3
add
movsl
sub
in
sub
lods
icebp
add
pop
xor
push
pop
cmp
pop
rol
out
js
jns
test
movsl
repnz
xor
popf
addr16
testb
jle
sub
test
es
ljmp
jmp
out
mov
lahf
aas
xlat
inc
sbb
cmc
add
es
mov
sti
adc
mov
mov
push
cmp
loop
xchg
push
jmp
iret
ss
in
mov
outsl
out
xlat
push
xor
mov
and
mov
in
bound
fidivs
test
mov
ret
push
pop
cli
mov
rolb
out
inc
aam
das
aas
stc
jl
aad
std
jl
ds
orb
cli
inc
addr16
ja
jno
xorl
and
repz
fnsave
mov
clc
adc
sbb
adcb
aaa
enter
and
int3
add
pop
push
call
fiadds
dec
mov
popa
adcb
push
adc
jl
popa
xchg
pop
jle
xlat
test
xchg
cmpsl
ds
xchg
lret
leave
das
mov
add
das
sti
fs
popf
repz
sub
scas
bound
les
and
sahf
push
push
lahf
xchg
incl
mov
dec
gs
icebp
lock
idiv
xchg
add
mov
cmp
inc
mov
pop
xchg
mov
cmc
movsl
iret
jmp
xchg
cmpsb
movl
jle
add
out
xor
sbb
add
pop
dec
push
ja
cmp
ret
pusha
sti
gs
mov
mov
pushl
jnp
dec
subb
adc
push
fisubrl
xchg
std
insl
sub
fistpll
lds
arpl
into
push
add
jae
adc
cmpsl
test
push
pop
mov
insl
or
imul
jno
imul
mov
push
mov
lret
ficoml
cmp
pop
inc
jno
ljmp
inc
push
js
jno
test
pop
xchg
mov
xor
sbb
mov
test
inc
jl
inc
push
pop
dec
push
add
mov
movsb
mov
loop
and
mov
pop
andl
lahf
ret
pop
aas
mov
pop
push
mov
stos
lret
mov
push
push
jmp
aas
in
std
in
inc
mov
pop
sbb
aaa
cmpsb
mov
cld
push
repnz
inc
test
setl
xlat
dec
sub
stc
jno
sahf
icebp
sbb
int3
add
sbbb
mov
js
push
test
shr
cli
push
push
loopne
dec
out
cltd
ss
in
lret
or
mov
push
xor
mov
cmc
shll
mov
out
dec
imul
mov
mov
lds
mov
pushf
je
mov
data16
rorl
out
xchg
ret
mull
mov
fwait
and
andl
mov
shl
push
das
test
iret
les
fdivrs
push
les
out
mov
add
shrl
sub
cmp
add
adc
and
jo
mov
lcall
pop
xlat
movsl
sbb
mov
cli
scas
shll
add
mov
mov
adc
xlat
repz
push
pushw
gs
test
and
sub
sub
pop
sub
mov
addl
jp
xor
js
fnsave
mov
cmp
sbb
xchg
mov
orb
rcl
ds
int
mov
cld
or
mov
mov
adc
jge
adc
clc
loopne
xlat
shll
mov
dec
scas
pop
mov
aad
jbe
test
test
jbe
mov
aaa
sbb
jae
xchg
decb
cmp
jbe
scas
je
ds
dec
test
shrb
addr16
mov
add
idivl
adc
or
dec
test
in
jne
mov
shll
ds
lret
ds
int
mov
xchg
pop
adc
cmpsl
or
or
sub
mov
movsb
out
mov
mov
add
push
adc
jnp
inc
movsb
daa
lock
cmp
jl
std
in
and
mov
stos
scas
push
repnz
or
je
subb
push
scas
add
daa
push
mov
jnp
cltd
dec
sbb
push
mov
cmp
ret
iret
jbe
test
sub
adc
aas
out
cltd
dec
mov
iret
test
mov
bound
loopne
mov
pop
push
je
roll
ja
aad
push
shrb
enter
cmc
jns
adc
xor
or
dec
lret
or
aad
mov
xchg
xchg
jle
mov
mov
xor
jnp
xor
mov
xchg
cmp
shll
arpl
aam
inc
aaa
pop
lcall
mov
popa
jge
imul
loopne
lea
jmp
mov
aam
push
mov
enter
cmp
sbb
lcall
daa
xor
addl
jo
repz
push
nop
mov
dec
fisubl
lahf
pop
cmp
and
jp
gs
jo
xchg
sbb
outsl
loop
sbb
jno
icebp
cli
rcr
add
xchg
sbb
jl
test
mov
out
out
filds
mov
add
jno
or
jnp
scas
or
mov
test
push
aad
cmp
push
mov
xchg
sub
inc
fwait
cld
sarb
lea
dec
aas
out
andb
insb
xor
in
loop
jge
scas
jbe
sub
sahf
hlt
push
sbb
fcompl
stc
mov
sbb
push
ja
jp
addr16
jne
pmuludq
mov
sub
mov
call
clc
mov
adc
pop
sbb
cwtl
mov
cli
scas
pop
add
dec
mov
pop
out
test
hlt
outsl
outsb
xor
dec
gs
inc
dec
bswap
jb
movsb
mov
cwtl
add
test
mov
dec
dec
dec
sub
sub
mov
push
jbe
push
test
aas
mov
push
test
xlat
mov
int3
div
mov
xor
mov
mov
xchg
shlb
xchg
outsb
mov
ret
aad
mov
lock
fidivs
jns
sahf
popw
cwtl
cmp
adc
fidivs
xor
xor
cmc
cmp
push
add
stos
stos
dec
stos
ljmp
jne
xchg
cld
movq
rcrl
jge
adc
mov
test
push
cmp
jg
dec
sbb
xchg
lcall
mov
sub
dec
push
ja
aas
or
add
jle
sub
je
bound
inc
out
les
mov
pop
mov
outsb
outsl
jmp
mov
lret
mov
or
pop
sub
push
push
loope
out
jmp
sahf
lret
xor
dec
int3
and
into
sub
mov
sar
inc
cmp
arpl
mov
xor
orb
insb
cmp
add
nop
pusha
cwtl
add
sarb
cltd
jbe
push
fsubr
test
dec
daa
repz
sub
push
insb
pushf
hlt
mov
mov
out
xchg
pop
jp
xchg
in
data16
pusha
xlat
sub
into
stos
xor
imul
xor
mov
call
jmp
and
jno
xchg
clc
sub
sar
pop
inc
nop
add
cmc
inc
jmp
std
mov
jg
lods
sub
ret
fdivs
int3
xor
rorl
shr
imul
mov
mov
or
xor
fimuls
cmp
adc
popa
not
dec
fsts
fs
or
out
int3
sbb
pop
xor
fadds
cmp
stos
xorb
mov
mov
fcomps
xchg
push
fstpl
mov
fildl
and
movsb
xchg
lods
jecxz
arpl
push
add
cmp
int
dec
sub
sbbb
nop
scas
adc
aas
jmp
nop
je
pop
je
xlat
out
mov
push
pop
in
xchg
pop
pop
jle
mov
push
mov
jmp
shll
out
inc
movl
mov
iret
loopne
mov
jbe
cmpsb
imul
fmull
inc
inc
aam
pop
pop
in
pop
dec
push
stos
mov
push
aad
xchg
inc
sbb
popa
push
repz
imul
cmp
dec
xor
ret
cmova
aam
out
mov
sub
jno
mov
cmpsb
xchg
ljmp
loope
xchg
cmp
fisubl
mov
xchg
adc
js
imul
pop
mov
in
fs
fcmovb
mov
lock
pop
jae
daa
outsb
testl
xor
mov
jae
xchg
jb
or
out
js
and
xchg
inc
ds
mov
stos
imul
cmpsb
sbb
mov
in
push
leave
imul
fidivrs
mov
pushf
xchg
cld
cmc
mul
sbb
arpl
lods
jp
dec
mov
cmp
call
jmp
and
daa
aaa
test
addr16
fdiv
pop
push
mov
sti
lahf
les
push
daa
mov
lahf
push
shl
comiss
in
inc
ficoms
mov
arpl
mov
mov
or
pop
sub
push
fcomi
popa
adc
subl
sbb
stc
jmp
daa
cwtl
arpl
repz
inc
jb
jbe
inc
jle
clc
pop
pop
xchg
jne
in
push
add
and
cmp
xlat
jmp
loop
push
sbb
sub
sbb
and
dec
pushf
cmp
adc
xchg
daa
push
and
fsubp
sbb
xchg
and
sbb
in
sbb
shl
loopne
xchg
inc
in
add
scas
cltd
call
jo
mov
mov
cmpsl
push
pop
mov
ret
in
push
insl
adc
std
sbb
adc
div
cmp
xchg
es
jo
int3
cmpsl
cwtl
pop
push
aaa
sarl
mov
scas
cmp
loopne
fstps
lahf
shl
imul
and
add
or
jle
cltd
jmp
sub
sub
cmpsl
push
xlat
fisttps
notb
cltd
daa
sahf
icebp
jge
repnz
jp
xor
or
xorb
inc
xchg
rcll
fnsave
push
pop
dec
push
jl
out
popf
out
clc
push
and
mov
movsl
cmp
add
push
sub
fstps
test
fsubrs
ja
add
jno
bound
cmp
jbe
ret
lcall
cwtl
cmp
sbb
cmpsb
adc
inc
pop
cmpsb
jl
repnz
insb
mov
cmp
mov
test
mov
sbb
xchg
in
imul
sar
movsl
out
xor
mov
stos
push
dec
int3
aaa
cmc
dec
mov
dec
icebp
ss
push
jbe
mov
rcl
add
test
push
pop
in
sbb
mov
xor
insb
jo
sbb
xchg
test
shrb
adc
mov
pop
ja
repz
outsb
xchg
decl
or
in
jmp
fsubs
inc
out
hlt
in
stc
dec
mov
cmp
mov
fst
je
inc
mov
cmp
xchg
adc
add
mov
xchg
pop
mov
mov
add
push
bnd
pop
out
mov
adcb
fwait
mov
push
push
addr16
das
jle
xor
mov
fdivrp
int
sub
scas
test
pop
mov
fsubs
pop
ficomps
mov
xor
outsb
js
fsub
xchg
loopne
adc
mov
xor
repnz
pop
pop
imulb
lcall
mov
add
inc
xchg
sbb
pop
lret
filds
hlt
scas
out
fldcw
movsb
xor
xchg
xor
sub
pop
mov
cmp
leave
mov
add
push
dec
push
and
push
cltd
mulb
test
dec
gs
leave
mov
sbbb
out
sbb
stc
inc
jae
int3
cmp
sub
xor
lods
jns
loope
int
pushf
outsl
and
push
xchg
add
push
xchg
cwtl
sahf
add
adc
cmp
js
stc
mov
sub
fists
xlat
outsb
xor
testb
xchg
ss
sbb
cmp
push
sub
xor
inc
sbb
inc
cmp
jo
mov
dec
mov
jns
or
adc
mov
test
jno
sbb
push
mov
xchg
daa
into
sahf
pop
jns
and
fs
jns
rcrl
sub
sbb
jbe
idivb
jmp
jno
outsb
sbb
adc
lds
and
sub
popf
les
xor
xor
xlat
mov
bswap
pop
jl
insl
or
js
cwtl
add
mov
je
in
xchg
push
mov
dec
mov
pop
inc
push
inc
addr16
sti
xor
roll
in
fildll
dec
mov
pop
mov
cwtl
movsb
mov
xchg
mov
xchg
mov
pop
jbe
repnz
xchg
add
js
rclb
pop
dec
inc
call
inc
add
rorb
jle
xor
sti
je
rorl
xor
jg
mov
popa
and
add
out
dec
push
stos
inc
xchg
and
lea
push
push
pop
rcr
add
pop
insl
fwait
adc
pop
mov
hlt
push
cmpsb
stos
jno
stos
vphadddq
test
dec
imul
jge
push
enter
mov
hlt
cmp
jns
cltd
mov
push
jle
adc
mov
aam
push
and
xor
cmp
ret
fldcw
js
adc
push
dec
out
ljmp
mov
mov
lds
jge
push
mov
in
rcrl
cmp
jno
out
div
popf
inc
out
les
dec
xor
dec
mov
test
mov
jo
mov
daa
lahf
cmp
cmpsl
int3
mov
jg
sbb
ret
gs
push
jmp
mov
adc
addps
aaa
imul
insl
mov
adcl
add
mov
stc
nop
fistpll
push
xlat
ficomps
adc
cmp
sti
faddl
fstpt
scas
loopne
int3
jnp
leave
stc
sahf
xchg
jnp
jp
xchg
xchg
imul
add
gs
dec
adc
adc
mov
jl
sbb
xchg
or
mov
cmp
push
add
inc
or
xchg
inc
push
aas
mov
outsb
pop
faddp
cmp
cmp
jnp
iret
mov
jle
sbb
sub
std
into
sub
adc
iret
pop
jle
pushf
test
testb
pop
sbb
das
adc
xchg
movsb
je
adc
xchg
call
sbb
and
cld
xor
push
xorb
and
sbb
inc
divb
jg
cli
rolb
arpl
pop
pop
add
xchg
bound
icebp
inc
cmp
cwtl
aad
aam
xor
in
jmp
cmp
add
aas
lcall
bnd
daa
adc
aam
xchg
arpl
movsl
cmp
in
scas
mov
jns
sbb
fistps
sbb
xor
lahf
adc
in
inc
lea
dec
movsb
ret
leave
jnp
push
jo
dec
xchg
sub
dec
sti
mov
lods
jo
mov
pop
push
fildll
mov
xchg
enter
loope
push
pop
add
jp
rcl
fadds
aam
mov
or
sub
addr16
add
icebp
fsubrs
ja
call
jmp
pop
sub
rep
cmp
lods
mov
cmpsb
out
cmp
into
adc
mov
xchg
adc
rep
popa
xor
and
adc
add
imull
rorb
loopne
pop
int
rcl
pop
mov
dec
jp
mov
shr
call
mov
stos
test
and
cmp
mov
cmc
sub
adc
mull
in
inc
sub
fdivp
stos
or
or
popa
or
push
push
outsl
mov
sti
add
inc
dec
sarb
cmp
insb
pop
test
iret
ret
lcall
out
jl
cmpsb
jnp
test
sub
jno
sub
pause
out
lret
sbb
fcompl
addl
add
xchg
insl
xlat
push
mov
add
aad
mov
aam
or
jns
xor
pusha
aad
aas
xchg
ficompl
add
mov
push
enter
pop
iret
jmp
xor
cmc
jbe
pushf
dec
es
daa
stc
dec
shl
cmp
jecxz
roll
outsb
das
mov
negl
call
sahf
xor
mov
xchg
push
dec
adc
jle
mov
jg
std
es
jne
ja
lods
out
jle
mov
out
orb
pop
iret
xchg
test
inc
jno
sbb
loope
test
sub
mov
xor
orb
loop
pop
divb
cltd
loop
lahf
popw
add
push
cld
pop
gs
sbb
out
rorb
js
xchg
xchg
insl
push
cld
cmp
arpl
mov
mov
mov
dec
sahf
jne
push
bound
out
add
movsl
add
cmp
dec
dec
adc
stos
aam
xchg
adc
sbb
push
xchg
out
in
push
dec
dec
mov
std
out
loop
lahf
test
pusha
in
mov
and
icebp
push
lret
jg
mov
in
add
cmpsb
mov
fwait
jbe
pop
dec
stos
pop
jno
xchg
cmp
jb
dec
pop
mov
jno
pop
inc
movzbl
test
add
xchg
shll
pop
push
cld
stc
or
cltd
fimull
roll
scas
mov
inc
xor
dec
cwtl
aad
pop
or
shrb
xor
add
sub
dec
mov
mov
cmp
movsl
pop
dec
stos
or
rcrb
iret
sbb
rcrl
stos
js
ret
loop
into
jns
pop
das
lret
push
rcr
mov
pop
fsubrl
mov
cld
aad
lea
lahf
bound
lds
es
repnz
dec
jg
xor
sbb
cli
mov
cmp
movsl
data16
jb
test
jo
dec
sub
jno
icebp
pop
pop
ffreep
ret
xor
sub
cs
das
sub
fwait
jno
pusha
fwait
mov
mov
xchg
and
inc
sub
fs
and
mov
and
xchg
mov
test
adc
leave
adc
pop
lahf
mov
hlt
xchg
inc
dec
out
fdivrs
dec
popf
scas
int
popa
adc
gs
hlt
cmc
testb
jae
lret
push
mov
dec
mov
mov
xchg
adc
je
lds
fsubs
adc
xchg
mov
testl
lret
addr16
push
adc
sub
mov
cs
add
push
push
xchg
jns
sarl
in
push
lea
fimuls
ljmp
or
mov
daa
mov
push
sahf
lods
sbb
js
dec
pop
xor
or
lret
lret
rclb
mov
nop
mov
or
repz
fiadds
repz
dec
mov
push
sbb
lds
cli
aaa
sahf
jno
sub
push
xchg
int3
in
pop
rcll
test
adcb
xchg
push
mov
jg
inc
addb
fbstp
les
pusha
push
ret
jp
std
push
cmp
pop
and
jns
push
inc
xor
sbb
mov
addr16
ss
jl
xchg
daa
sub
xor
xor
pop
adc
push
loope
mov
and
fdivrl
fwait
data16
imul
dec
fiadds
imul
aaa
mov
jmp
jecxz
mov
cmpsb
mov
pushf
testb
xor
xchg
fimuls
loop
ret
lret
mov
xchg
cmc
mov
dec
aad
cmp
jecxz
jo
movsl
fs
push
aas
inc
cmp
adc
imul
mov
dec
mov
pop
xchg
imul
mov
xor
push
xchg
pop
mov
in
sub
push
lcall
jbe
cmc
sub
pop
jnp
mov
rorb
pop
mov
sbb
inc
pushf
in
xchg
dec
cli
pushf
xchg
pop
push
pop
scas
js
cmp
and
dec
push
cltd
not
mov
dec
lahf
sub
push
ret
adc
imul
mov
push
mov
in
mov
rcl
push
mov
xor
xchg
or
into
jo
mul
mov
push
pop
xor
jb
shr
popf
repz
out
aas
scas
xor
ja
or
test
insl
inc
pusha
in
push
lahf
push
ss
inc
aas
fidivl
mov
add
movsb
fcompl
cmp
adc
push
repnz
jo
outsb
sti
je
rcrb
xor
mov
add
add
sub
js
pop
into
arpl
sbb
loope
jo
bswap
inc
stc
push
mov
push
ss
js
adc
mov
inc
enter
mov
mov
nop
popf
out
mov
das
popf
sahf
fsub
xor
mulb
lahf
mov
push
sbb
sub
enter
lea
dec
mov
sub
cltd
int
lea
inc
push
xchg
cmp
or
aam
ljmp
mov
sahf
jne
or
sbb
jg
adc
cmp
loopne
shr
ja
xchg
dec
adc
pop
imulb
mulb
insw
add
mov
loope
hlt
jnp
push
outsb
jne
mov
cmp
pop
int3
sbb
mov
in
mov
daa
fimuls
insb
scas
out
xor
cmp
xor
testb
les
sbb
xor
cmp
ja
clc
stos
gs
adc
pop
arpl
xchg
cld
pop
mov
shll
repz
xor
aam
cltd
pusha
sbb
loope
sub
in
pop
and
notl
lret
inc
popa
mov
dec
sbb
inc
cmpsb
adc
xor
xor
xchg
inc
imul
and
sbb
lea
sub
cs
in
mov
fucomip
jo
jne
hlt
inc
mov
push
push
sub
push
ficomps
or
push
rcll
or
das
imul
dec
pop
aad
sbb
jmp
add
mov
xchg
fmuls
es
sti
or
stos
adc
ror
andl
sub
mov
lods
fildll
and
pop
push
mov
cs
inc
popa
es
lods
pop
dec
imul
ja
inc
imul
addl
loop
imul
fsubs
inc
inc
mov
and
out
cltd
mov
dec
insl
pushl
inc
push
int3
push
loop
mov
fcmovnu
jo
push
jle
movsl
addr16
sbb
xchg
cmpsl
pop
push
sub
daa
cld
popf
mov
mov
jp
mov
pop
mov
dec
popa
dec
add
xchg
xchg
mov
add
xchg
aas
scas
cmp
or
xchg
or
ficomps
add
out
push
rcl
sbb
inc
cmp
rorl
cmp
jo
xchg
cmp
dec
inc
stos
jle
pop
mov
mov
and
jmp
ffreep
jle
mov
outsl
cmp
scas
push
notl
mov
mov
pop
cwtl
or
mov
test
loop
and
xchg
add
pop
loop
stos
push
iret
dec
sub
data16
cld
xchg
inc
or
push
jle
add
or
sbb
xchg
clc
pop
mov
ds
movsb
mov
popf
int
push
and
pushf
bound
push
mov
stc
stc
push
sub
xor
jns
sbb
xchg
les
stc
sub
std
push
inc
push
xchg
cmpsb
pop
xor
movsb
enter
popa
lock
loope
jbe
adc
loope
stc
push
mov
movsl
clc
push
lock
mov
and
test
imul
xor
push
add
jo
imul
mov
imul
cmpsb
cmp
jb
sub
xchg
xchg
negl
out
insl
popf
fsubrs
ficoml
int
gs
call
mov
daa
leave
sub
mov
fdivs
xor
and
jp
cmp
pop
aad
inc
adc
adc
js
push
adc
dec
ficoms
lds
adc
mov
xor
icebp
push
int3
xchg
mov
and
push
popa
divl
outsb
movsb
js
cmpsb
xchg
sahf
outsb
sub
imull
inc
loopne
js
jle
dec
push
inc
adc
xchg
in
repz
jmp
jmp
inc
int3
fdivs
sub
lret
outsl
jge
fcmovne
movb
mov
es
bound
sbbl
inc
sbb
sahf
push
mov
mov
lret
pop
mov
mov
xor
addr16
sahf
or
fnstsw
aaa
mov
stos
imul
sbbb
mov
xor
adc
adc
dec
icebp
aas
aas
add
icebp
fcomps
gs
and
inc
jle
cmc
push
cli
mov
adc
shll
jmp
and
xchg
dec
mov
cmp
les
mov
test
lock
fs
lahf
jl
xchg
lds
fmuls
dec
ja
cwtl
push
pusha
pop
pop
sbb
sbb
lods
sbb
mov
data16
iret
fisubs
mov
pop
mov
addb
cli
push
and
adc
lds
inc
int3
pop
pop
mov
out
cli
lcall
add
pusha
push
roll
fstl
sarb
mov
icebp
pop
ret
orb
loop
outsl
fscale
mov
mov
sub
aaa
testb
fwait
jns
stos
xlat
imul
jo
int
xor
es
jb
xor
shr
nop
or
pop
jecxz
mov
xorb
int
add
mov
imul
ss
cmpl
hlt
sbb
cli
test
ds
push
jo
fst
orl
incl
dec
sbb
or
sbb
mov
xlat
gs
jp
sub
pop
inc
sbb
mov
lods
test
xchg
pop
aam
dec
inc
cltd
adc
into
mov
fsts
xchg
jge
fsubp
js
mov
vorpd
jne
rorl
xorb
mov
pop
adc
mov
sbb
outsb
jmp
xlat
and
lods
mov
and
push
mov
xor
xlat
mov
xlat
adc
mov
jl
fstps
bound
ffree
mov
inc
ret
sub
jg
gs
fistpll
cwtl
in
mov
imul
roll
sahf
scas
jne
call
dec
mov
dec
bound
mov
xor
mov
and
push
inc
scas
aad
or
jb
push
pop
add
and
leave
sahf
jg
arpl
lds
mov
popa
aas
xchg
xchg
pusha
xor
sbb
inc
loopne
call
fsubrs
pusha
and
dec
and
xchg
mov
push
in
and
push
xor
dec
dec
cmp
bound
xor
cld
popf
sti
pop
and
jns
or
mov
rclb
aas
or
repnz
loop
adc
das
push
adc
jecxz
mov
movsl
outsb
daa
xchg
mov
fidivrs
push
nop
xor
fcoml
ret
fldl
testb
cmc
ret
sbb
sti
inc
or
xor
mov
push
sbb
xor
mov
fldenv
stos
sbb
jge
mov
cmpsb
pop
cmp
dec
cltd
adc
ror
inc
xchg
and
lcall
jae
lcall
push
fwait
add
add
push
dec
lods
ret
cmp
sub
adc
pushl
int3
shrl
lret
insb
aam
inc
pusha
lods
ds
xchg
std
adc
fdivrs
in
jne
mov
cmpsb
mov
inc
jmp
out
xor
les
xlat
or
leave
add
cmp
movsb
and
cwtl
mov
repnz
jg
pop
imul
adc
mov
mov
mov
cld
jns
mov
sbb
mov
lahf
adc
outsb
insl
call
jbe
popf
cmp
push
push
sbb
mov
test
rorb
rolb
cmp
es
mull
mov
xor
mov
scas
aad
mov
lods
repz
cmp
push
adcb
mov
jo
xchg
les
xor
icebp
push
pop
movsb
push
insl
push
in
popf
rcrb
insl
mov
and
mov
aas
int3
sti
xor
repnz
cmovge
nop
lea
fidivl
leave
ja
push
int3
add
or
jb
mov
xchg
in
mov
in
cltd
mov
and
mov
cli
cmp
cmp
cwtl
cltd
mov
test
callw
inc
pop
dec
jns
stc
rclb
sub
push
mov
jnp
inc
fcomps
daa
stos
push
xor
sbb
lods
mov
adc
sub
imul
fistl
push
mov
xor
jb
mov
and
mov
into
mov
and
addl
jae
cmp
aas
sarl
aas
loopne
fsts
testb
cmc
push
mov
fsubrs
lcall
push
push
mov
not
sbb
cs
adc
mov
lea
mov
add
cli
dec
pusha
jge
xlat
push
or
jge
push
push
sbb
in
add
dec
and
push
mov
arpl
daa
shrl
jns
ja
je
movsl
mov
mov
lcall
xchg
mov
dec
scas
shll
sbb
mov
outsl
loopne
dec
mov
pusha
xor
xor
and
sbbl
mov
inc
and
loope
and
sahf
push
test
sub
arpl
shlb
into
in
sbb
jno
mov
jbe
jmp
cmp
daa
mov
or
mov
lcall
scas
inc
push
xor
mov
incb
jg
mov
cwtl
jge
test
pop
mov
pop
lds
jge
jns
mov
pop
stos
mov
mov
add
sub
or
pop
aam
pop
mov
test
lock
sbbl
mov
adc
movsl
xchg
sub
repz
in
pop
mov
or
icebp
or
adc
cltd
pop
daa
fs
sbb
pushw
inc
loop
lret
jo,pn
cmp
into
imul
sub
xorb
pop
cli
icebp
hlt
cmpsl
adcl
leave
fidivs
sub
sub
mov
dec
adc
aas
and
lock
es
iret
insb
push
xorl
pop
and
or
clc
inc
cmp
mov
sub
repnz
xchg
adc
lret
sub
jle
cmc
and
push
aaa
inc
lcall
xchg
push
cwtl
ljmp
std
into
add
addr16
pop
push
jo
out
test
mov
sbb
loopne
sbb
and
jae
jae
test
and
jge
js
pop
rcll
in
jne
xchg
addr16
xlat
scas
js
xchg
xchg
adc
stos
jns
dec
movsl
stc
inc
xchg
imul
dec
bound
adc
test
outsl
mov
lahf
lds
push
scas
cmp
jge
fidivrs
jnp
pop
mov
fadds
pop
addl
mov
push
and
pop
bound
inc
inc
xor
fucomip
dec
fcmove
adc
les
sar
jbe
rolb
aam
jg
orb
insl
fdivrs
mul
lret
push
in
aaa
loope
mov
dec
out
je
dec
jle
into
fincstp
movsb
xor
mov
es
lret
stc
movb
jbe
aas
pop
cmp
scas
adc
testl
xor
std
mov
mov
pop
mov
cmc
jp
hlt
mov
ret
insl
in
or
in
xchg
adc
jae
mov
xchg
pop
cmpsb
inc
std
rcll
dec
push
adc
int
stos
cmc
or
imul
pop
aad
addl
aad
scas
in
inc
loope
sub
scas
inc
fstpt
lock
xchg
out
mov
into
les
sbb
sbb
xor
mov
nop
jle
inc
push
or
push
sbb
gs
loop
das
push
sub
sbb
xchg
mov
mov
cwtl
jle
xor
sub
mov
lret
lods
or
cmp
jo
and
push
loop
imul
mov
pop
mov
cmp
daa
loop
int
aam
pusha
dec
subb
inc
mov
mov
aam
or
imul
pusha
iret
sahf
jmp
or
scas
push
cld
xor
imull
daa
lretw
cltd
fwait
mov
or
adc
pushf
sbb
push
add
stos
enter
add
or
xor
or
outsl
jecxz
push
sub
add
in
push
xor
jge
dec
das
pushf
sub
pop
movsl
sub
idivb
dec
jecxz
push
adc
push
int3
lcall
movsb
mov
or
jnp
ss
cmp
enter
out
jnp
dec
jb
cwtl
jmp
aad
gs
xor
pop
cld
xor
add
mov
jb
daa
movsb
xor
lods
lcall
ss
and
aam
ljmp
cltd
xchg
dec
push
pusha
shr
lret
pop
push
stos
jl
test
imul
test
pop
rcrl
sti
les
gs
push
hlt
fcmove
lock
rorl
add
mov
pushf
mov
fsub
into
mov
sarb
test
adc
stos
pop
cwtl
mov
pop
sub
idivl
adc
in
and
xor
sub
jae
sbb
cmc
jle
and
sub
imull
mov
push
pop
lret
fldenv
jns
adc
test
call
adc
jb
pop
test
cmc
dec
pop
inc
ss
and
sti
outsl
sbb
push
imul
dec
push
cli
imull
jbe
adc
aad
jno
psllq
outsb
repnz
or
insb
shrl
pushf
scas
fwait
xor
xor
arpl
mov
stos
and
faddl
scas
les
shl
xlat
sarb
or
mov
lahf
mov
jbe
cltd
cld
mov
insl
xor
inc
cli
add
jo
mov
jbe
push
adc
jg
or
addl
call
add
les
aam
call
push
mov
dec
pop
mov
aaa
pop
flds
mov
stc
push
arpl
sub
gs
test
imul
cmp
outsl
xor
lods
leave
lods
push
scas
out
loop
dec
fucomi
ss
cmp
sub
popf
xchg
dec
sub
inc
add
je
xchg
popa
mov
sbb
test
cli
adc
mov
lcall
adc
mov
je
jae
add
ret
xor
lea
sub
pop
test
xchg
jo
loopne
call
ret
movsb
insl
push
sub
jp
fimuls
mov
sahf
data16
fnstenv
sbb
lods
inc
xor
adc
and
pop
dec
sub
loope
jno
shrb
jo
lret
adc
dec
das
aam
push
jge
fsubs
dec
addr16
insb
and
push
adc
roll
and
xchg
push
xor
push
inc
out
add
dec
lcall
es
cmp
inc
test
sub
push
adc
fwait
pop
popa
loope
dec
aad
aas
adc
xor
mov
je
sahf
fs
or
sbb
jmp
mov
rorl
jno,pt
movsl
int3
lea
call
xlat
mov
lahf
inc
inc
loope
fwait
or
push
add
push
dec
add
adc
inc
adc
clts
sub
lahf
cmp
pop
dec
sub
dec
cmp
mov
les
loopne
lret
iret
sbb
rorb
sub
shrb
or
dec
leave
mov
jp
shll
pop
and
std
das
and
outsl
cld
or
and
in
mov
push
or
repz
movsb
jmp
or
lret
jge
in
inc
dec
in
insl
pop
lock
dec
in
xchg
or
sub
push
iret
ljmp
daa
pop
xchg
mov
jo
pop
ds
sbb
call
pop
pop
arpl
jle
mov
test
sub
inc
xchg
mulb
scas
push
jmp
add
je
mov
jle,pt
jnp
adc
enter
xchg
cmp
test
push
cmp
cld
mov
jg
js
test
test
push
pop
subl
xchg
push
out
mov
fwait
insl
in
cwtl
lock
jmp
add
or
call
inc
negb
das
xchg
test
push
jno
cmpsl
sarb
in
xchg
add
aas
mov
dec
mov
repnz
inc
test
fisubrs
test
sahf
xor
cld
add
test
cli
outsl
out
jb
aaa
push
rolb
cmp
xchg
xchg
jmp
or
loopne
mov
push
shrl
or
push
lcall
pop
jns
xchg
pop
test
mov
out
add
pop
test
inc
sub
push
xchg
xchg
loope
jbe
data16
lea
jne
shll
and
imul
movsl
outsl
scas
roll
cs
fisttpl
fs
in
repz
ja
xchg
push
mov
ja
mov
pop
or
cmp
add
std
enter
fsub
dec
inc
mov
subl
cwtl
aam
je
mov
loope
mov
or
pop
loop
fcomps
int
mull
mov
jnp
call
rcr
mov
adc
jecxz
xchg
pop
stc
jnp
and
aad
mov
lods
xlat
xchg
inc
mov
andb
cmp
jno
pop
jae
fmuls
xorl
adc
das
cmp
cs
and
cmp
push
xchg
outsl
cltd
das
es
fstl
mov
mov
cmp
shll
inc
pop
icebp
mov
and
clc
aam
cmp
arpl
jecxz
push
fwait
pop
aad
pop
mov
mov
scas
repz
es
pop
mov
stos
icebp
shlb
mov
xor
fadds
push
roll
add
cmp
mov
repz
notl
scas
cmpsl
inc
sahf
mov
and
sarl
es
outsb
lods
jmp
push
push
scas
adcb
push
loop
add
iret
js
push
pop
in
dec
fsubs
ret
inc
sbb
data16
popf
jnp
lret
xor
sbb
testl
add
push
adcb
xchg
mov
or
push
sub
enter
test
jecxz
pop
in
repnz
lahf
adc
jp
xchg
js
add
sbb
jne
mov
loopne
pop
fimull
out
jb
adc
push
dec
adc
insl
ret
sbb
fidivl
cmpsb
cmpsl
jo
movsb
dec
pop
add
rcr
push
aam
movsb
xchg
inc
popf
mov
fs
push
pop
inc
mov
mov
lret
or
ret
fisttps
adc
dec
or
pop
cmp
xchg
pop
or
ret
xor
sti
jg
movsl
dec
adc
popf
and
jle
sbb
mul
sbb
iret
out
icebp
in
in
mov
outsb
inc
cmp
mov
jb
xchg
pop
loop
shrl
aaa
pop
pusha
jns
nop
push
and
enter
into
sub
adc
movsl
fisttpll
jb
filds
ret
jb
cmp
ds
mov
fwait
in
ficoml
pop
out
and
popf
ret
roll
mov
test
mov
sub
ds
add
lea
daa
imul
jbe
dec
jnp
mov
stos
sub
sbb
inc
push
js
jecxz
add
push
add
mov
cmpsl
inc
fwait
sub
test
fisubrs
add
lret
test
mov
or
shl
or
lahf
cltd
das
orb
push
xlat
xor
inc
lcall
sub
adc
and
adc
les
jmp
aam
mov
lods
andl
pop
mov
pusha
scas
loop
cmpsb
rcll
fcmovu
lahf
sub
xor
sbb
pushf
ror
roll
push
outsb
add
adc
fiaddl
mov
cmp
dec
jbe
xor
dec
and
adc
cmp
xchg
daa
xchg
cmc
mov
dec
push
cmc
or
sbb
in
mov
mov
jmp
into
ficompl
mov
xchg
test
mov
lret
jg
das
je
or
xor
pop
hlt
push
mov
sbb
and
push
lods
add
xor
outsl
std
sbb
rcll
mov
cmc
repnz
rorb
data16
jl
xchg
sbb
cmp
xchg
fcom
lock
jbe
jmp
xchg
out
lcall
mov
mov
lods
cwtl
push
adc
mov
rorb
sbb
test
push
dec
das
sti
add
adc
std
and
jno
mulps
inc
cmp
mov
scas
mov
aam
lods
inc
pop
jae
lahf
es
fwait
and
xchg
sti
xor
pop
sub
jae
xchg
add
pop
pminub
jmp
sbb
jg
mov
scas
push
std
add
mov
ss
jmp
mov
or
lods
sub
xlat
push
xor
lods
pusha
imul
fwait
inc
pop
mov
cmp
adc
call
sbb
inc
daa
test
mov
jne
sbb
orb
add
nop
push
cmpsb
xor
test
mov
cltd
or
jnp
and
mov
je
andl
cmpsb
call
subb
add
mov
push
loopne
call
dec
fnstenv
scas
rcrb
mov
add
iret
mov
mov
xchg
lods
or
mov
jle
mov
js
or
adc
xchg
inc
sub
aam
stc
movb
imul
in
scas
jne
popf
xchg
movsb
loop
aad
data16
mov
inc
jo
aas
fnstsw
scas
xchg
xorb
xlat
sbb
in
sub
mov
push
sti
push
mov
xor
iret
test
cmpl
xchg
inc
out
int3
push
pop
fwait
pop
cmpl
test
daa
xor
mov
cmp
ss
and
int
inc
and
or
jge
or
and
test
inc
stos
lahf
sbb
insb
int
sahf
xor
cmp
popa
mov
add
and
shl
sub
fisttps
pop
inc
add
shlb
shll
out
sti
je
stos
loope
push
jnp
jnp,pn
lahf
ljmp
push
je
insb
lcall
mov
push
cmp
xchg
add
mov
divb
cmp
sub
sahf
shl
dec
jae
bound
fistps
inc
inc
cmp
mov
clc
out
daa
jnp
rcrb
andl
push
jl
lret
cmp
popl
mov
dec
push
cmc
repz
fadds
aam
xor
xor
adc
outsl
lahf
mov
xchg
loopne
xor
or
outsb
xor
jecxz
js
mov
fldenv
repz
mov
mov
jne
insl
aad
js
bound
xchg
jecxz
loopne
or
addl
sub
push
cmpsb
gs
cmp
out
fists
gs
out
out
cmpsb
aaa
mov
fidivl
or
sub
jl
int
push
push
push
mov
or
xlat
rcr
inc
stos
xchg
mov
add
ret
sub
loop
sub
test
inc
or
sub
pop
adc
pop
out
ja
mov
xor
ffree
push
lcall
pushf
repz
sbb
stos
dec
jnp
movsb
sti
xorb
gs
mov
das
in
adc
push
into
sbb
jmp
pusha
pop
ds
xlat
lods
stc
sahf
in
push
dec
das
loope
jecxz
mov
and
rolb
jmp
or
cld
add
add
cmpsl
scas
pop
xchg
cli
stos
int
je
dec
rcll
or
adc
ret
xchg
pop
adc
or
fidivl
aas
push
dec
ror
arpl
xchg
gs
ret
pop
jno
vmaxps
cmp
jno
mov
add
sahf
jnp
fildll
repz
cmpsl
aaa
faddl
popf
leave
add
aas
inc
xchg
dec
pop
cmp
adc
jne
jmp
xchg
cmp
add
pop
lahf
in
push
lret
mov
stos
add
ja
push
mov
add
jl
xor
imul
push
mov
xor
adc
enter
dec
stc
rorb
mov
or
cmc
aas
cmpsb
sub
xlat
rorl
mov
int3
cli
inc
ss
cmp
jmp
cli
out
popa
hlt
sub
sbb
test
jne
cld
fwait
mov
dec
out
out
jbe
dec
add
xor
aas
dec
lods
add
cmp
into
inc
dec
add
or
mov
out
call
cwtl
sti
cld
push
inc
bound
cltd
jecxz
mov
cmc
mov
xor
neg
or
rcrl
aam
gs
pop
and
pushf
jns
mov
insl
sub
les
imul
loope
jns
mov
pop
loopne
insl
xor
hlt
mov
imul
mov
test
test
sbb
mov
push
mov
mov
jb
push
mov
and
push
or
push
insb
xor
mov
iret
lcall
mov
jmp
ljmp
mov
stc
and
je
or
cs
dec
stc
fs
jge
stos
idivb
jb
pushf
mov
or
and
add
pop
andb
sbb
rclb
or
pop
bound
sub
loopne
adc
jnp
fstps
push
int
push
mov
mov
lods
jno
cli
enter
xchg
hlt
stos
sbb
ljmp
sub
dec
repnz
dec
insb
pop
cltd
and
mov
mov
out
out
xchg
es
and
push
mov
or
outsb
das
mov
lds
insb
mov
in
fwait
push
div
push
test
rclb
cmpsb
cli
mov
insb
insl
and
frstor
adc
inc
mov
inc
pop
cmp
pop
mov
rorb
rorl
loopne
push
cltd
xlat
jns
fimull
adc
mov
loope
incb
jle
xchg
aam
outsb
cmp
sarl
pop
xchg
cmp
shr
sbb
cld
and
or
je
bound
xor
shr
mov
mov
inc
and
addb
inc
sub
and
push
xchg
popl
inc
jae
cmp
jmp
js
mov
adcb
push
add
inc
jns
xchg
mov
clc
sti
js
inc
loop
ja
lret
out
pop
xor
int
mov
lea
fisttps
add
insl
pop
jno
imul
leave
push
nop
and
stos
dec
and
pop
push
fisubrs
sahf
icebp
mov
cmpsb
push
push
cli
jg
out
xchg
inc
bnd
or
mov
outsl
mov
leave
mov
out
mov
sti
pushf
cmp
in
add
insl
push
mov
sub
call
xor
inc
and
jle
pusha
pop
xchg
sarl
mov
cmc
cli
dec
or
jno
lret
outsl
add
orl
es
stc
in
clc
insl
push
adc
and
out
in
adc
jp
push
popf
inc
ret
shlb
or
lahf
imul
scas
test
cmpsl
sub
test
mov
jg
ret
test
ljmp
loop
mov
xor
int
outsb
popa
das
out
arpl
js
mov
cli
pusha
and
xor
aad
int3
jmp
mov
pop
or
add
out
xlat
inc
addl
xchg
xlat
jp
lea
fcoms
mov
push
pop
shrl
cmp
ss
xor
outsl
sub
aaa
push
inc
mov
rcl
jnp
xchg
mov
dec
mov
ja
ret
dec
lret
mov
push
das
sbb
fstpt
mov
push
idiv
add
cmc
aaa
sub
pop
mov
push
std
dec
int
aad
mov
dec
fnstenv
ja
stos
ljmp
jne
rcll
add
push
jae
mull
ja
imul
js
inc
mov
adcl
add
sub
adc
sbb
push
test
nop
xchg
mov
dec
orb
lcall
pusha
dec
cmp
clc
cmp
mov
xor
lods
fbld
push
iret
repz
mov
mov
mov
mov
sbb
sahf
sbb
or
sbb
fnstenv
arpl
dec
jge
inc
insl
lods
xchg
xchg
add
mov
fildll
mov
add
mov
aaa
xor
popf
mov
mov
cld
jns
mov
rcll
or
stc
ja
mov
mov
mov
jo
movsl
and
pop
adc
jnp
aam
jae
into
fwait
sbb
movaps
fcom
test
pop
ljmp
mov
insl
sbb
or
mov
out
call
sub
mov
mov
daa
cmpsb
mov
lcall
std
add
dec
pop
cmp
gs
stc
mov
mov
loop
clc
out
mov
loopne
dec
shll
xchg
fisubl
mov
fimull
cmc
mov
push
out
dec
jge
loope
std
fiaddl
lret
mov
jnp
icebp
and
mov
pop
mov
ret
mov
stc
pop
or
mov
sbb
mov
adcl
stos
push
sahf
imulb
cmpsb
fstpt
cmc
movsl
jge
pop
xchg
mov
mov
mov
test
cld
push
into
les
scas
das
dec
pop
and
push
stos
and
and
icebp
xchg
sub
lcall
push
dec
int3
jae
mov
cmpsl
imul
inc
xchg
gs
add
idivl
pop
cwtl
jmp
nop
jnp
pusha
add
aaa
xchg
cmpsl
or
test
pop
add
xor
fld
loope
adc
dec
cwtl
repz
add
ljmp
pushf
mov
and
cwtl
and
xchg
rcr
out
or
mov
inc
fs
jle
jle
mov
mov
mov
xor
or
fistpll
dec
jp
out
aas
out
in
in
mov
dec
mov
inc
push
sbb
aad
testb
lret
xchg
and
xor
sub
push
mov
xor
or
in
sub
subl
stc
jmp
loope
daa
test
or
push
push
in
xor
jae
lods
jne
jno
pop
add
shrb
or
push
mov
xchg
xchg
sub
add
gs
test
mov
xorb
mov
push
cli
jo
mov
test
adc
lret
ss
outsb
jnp
and
outsl
xchg
cli
lea
fbstp
cltd
lock
pusha
mov
sub
xchg
mov
pusha
mov
and
int3
xor
push
arpl
gs
add
dec
or
ret
push
mull
sub
jno
jo
sbb
mov
or
in
into
stos
lds
out
call
adc
out
dec
adc
and
lods
inc
shr
pushf
jecxz
mov
xlat
mov
ret
mov
sbb
push
cmp
je
xchg
sahf
test
in
xchg
add
movsb
imul
fwait
cmpsl
fsin
sbb
dec
push
jge
lret
push
mov
push
add
stos
cmp
cmp
insl
scas
and
cs
pop
dec
loope
je
in
nop
xchg
sbb
pop
movsb
loopne
push
xchg
aam
ret
add
cld
arpl
or
push
les
cs
lret
in
call
lods
inc
int3
jge
push
sbb
nop
clc
and
iret
mov
les
lods
mov
dec
add
xchg
pop
cltd
int
and
movsb
mov
xor
xor
xor
movsb
adc
gs
inc
and
mov
lret
lock
xor
std
jecxz
push
inc
adc
loop
iret
mov
je
mov
out
arpl
mov
jecxz
dec
subb
bound
dec
out
test
fstpt
push
mov
dec
jno
hlt
xchg
sub
enter
or
jecxz,pn
cltd
pop
pop
mov
or
je
into
mov
or
jnp
cld
push
xchg
jl
rorl
pop
and
jle
fwait
cltd
sahf
mov
sar
mov
in
mov
mov
cmp
fldenv
insl
add
push
enter
aad
cltd
movsl
loope
decb
jle
pusha
xchg
sub
andb
push
lahf
lcall
fdivrl
scas
sti
adc
pop
push
pop
xor
mov
std
fcoml
aam
adc
fwait
imul
in
sti
shlb
lods
mov
mov
xchg
lds
jne
add
jle
fstl
or
pop
popa
lret
mov
jo
test
lret
das
iret
leave
sbb
push
lods
cmp
push
repz
ss
and
mov
xlat
out
add
test
mov
dec
and
in
fcompl
cmc
fildll
js
push
xor
das
sbb
jp
daa
mov
and
push
dec
negl
dec
or
or
adc
out
ret
nop
push
and
lret
add
dec
arpl
aam
loop
loop
xor
fisubl
repz
mov
adc
outsl
xor
test
fcom
jp
or
ret
sub
rolb
daa
xchg
mov
inc
mov
and
adc
fiadds
pop
push
dec
lds
movb
pop
lds
iret
and
mov
imul
mov
push
int
cmpsl
xor
jp
in
pop
fidivrs
imul
out
call
sarl
cltd
inc
addl
stos
aad
cld
pop
dec
sbb
ja
push
xchg
test
jae
cmp
clc
lret
popa
inc
into
les
xchg
fnsave
sub
mov
inc
cltd
mov
sub
fcomi
and
mov
pop
ss
cmpsl
inc
jmp
adc
adc
xchg
je
pop
inc
inc
mov
push
jl
in
bound
mov
add
mov
jmp
cmp
data16
jns
push
cwtl
pushf
cltd
and
arpl
push
mov
jp
lods
cmp
stos
stc
repz
mov
pop
testl
push
pop
bound
mov
inc
cld
sub
jbe
jecxz
push
jne
inc
test
inc
pop
mov
inc
adc
push
cmp
cwtl
movsb
jns
xchg
add
add
mov
push
inc
xor
shrb
mov
fwait
jge
cmpsl
sbb
mov
test
jae
in
add
sbb
ljmp
int3
mov
xchg
mov
out
adc
sbb
or
cld
imul
fcomp
push
popa
pushf
adc
in
in
mov
adc
fadds
lcall
push
std
lahf
aad
out
dec
cltd
adc
arpl
out
push
cld
in
mov
sub
out
scas
pop
cmp
fsubrs
push
mov
mov
ss
sahf
ja
pusha
push
outsl
test
mov
out
mov
test
cmpsb
dec
stos
xorl
cli
jmp
fs
inc
mov
lcall
call
inc
cmpsl
add
lods
lret
fistl
xlat
sbb
xchg
mov
bound
movb
and
xchg
sbb
cld
inc
jb
xchg
and
xchg
js
mov
mov
notb
inc
xchg
daa
pop
ss
inc
into
mov
cwtl
jecxz
ljmp
iret
xchg
rcll
push
out
hlt
mov
lods
push
loopne
xor
dec
xchg
add
push
pop
push
das
cmp
push
xchg
cmpsb
roll
lea
cmp
adc
fwait
mov
cmp
idiv
push
ret
and
xor
int
mov
jp
inc
out
xor
xchg
add
lods
out
mov
dec
adc
fcoml
das
xchg
jbe
ds
mov
daa
mov
dec
sub
std
push
jno
daa
xadd
mov
xchg
lret
div
lock
ret
and
sub
and
rorb
jno
mov
fildl
cmp
pop
jno
mov
bnd
or
fsubrp
insl
iret
push
pop
loop
scas
mov
xor
jnp
enter
andl
adc
outsb
cmc
shrl
push
mov
arpl
pusha
mov
jecxz
sub
xor
lahf
xchg
xor
aaa
jb
jbe
xor
mov
inc
repnz
push
cmp
jmp
adc
dec
adc
sti
jnp
ds
push
inc
jl
sbb
cltd
mov
cmpsb
outsb
ljmp
or
cwtl
and
jmp
mov
gs
ret
and
push
rclb
mov
pop
jle
ficoml
inc
idivb
out
fidivrs
or
test
pop
mov
jns
nop
out
pop
sbb
iret
jmp
mov
pop
adc
jb
or
test
test
jns
add
pop
fcos
subl
push
in
jns
inc
stos
xchg
sbb
cwtl
std
xor
jne
pushf
inc
mov
lcall
push
aas
lds
popf
xor
sarl
imul
push
insl
ret
mov
lea
push
push
movsb
repnz
push
cmp
fdiv
les
jo
jo
mov
or
fdivrl
lcall
out
scas
in
ljmp
push
dec
imul
jae
xor
push
popf
out
push
in
imul
pop
sbb
lcall
shlb
mov
jb
dec
je
pop
rclb
cltd
movsl
xor
fs
call
arpl
mov
adc
ja
mov
adc
push
loope
cwtl
or
mov
scas
call
or
out
fst
cmpsb
and
insl
adc
mov
decb
outsb
mov
in
fnstenv
repnz
pop
adc
dec
and
mov
mov
dec
pmulhw
mov
into
or
push
loope
hlt
popa
sub
rolb
add
xchg
lods
push
mov
and
inc
addr16
cmp
adc
push
adc
hlt
dec
lods
add
outsb
cmpl
imul
cmpsb
lret
adc
fsubrl
adcb
rorb
fs
sub
imul
dec
lcall
cmp
into
cmpsl
sub
xchg
stc
subb
dec
xchg
and
movsb
test
sub
mov
in
sti
push
jmp
repz
ret
aas
mov
ja
push
add
stc
loop
fwait
repz
ss
xchg
nop
dec
sbb
xchg
add
int3
loopne
aam
das
pop
iret
out
lds
pop
xchg
mov
cmp
jmp
pop
cmp
mov
mov
icebp
subb
pop
mov
rcll
pop
fsubs
add
mov
inc
mov
or
inc
mov
and
or
lods
jno
mov
jo
movsl
into
add
jne
cltd
lds
mov
out
xchg
ret
lcall
stos
shlb
sub
inc
or
or
repz
fwait
cltd
xor
insb
add
add
cmc
int3
jbe
inc
mov
ficompl
pop
shlb
outsl
das
xlat
lds
and
mov
mov
xchg
sub
loop
ret
pusha
sbb
popf
notl
enter
std
sar
cmp
fs
addb
sbb
or
and
xlat
test
pop
inc
mov
push
sbb
mov
mov
dec
leave
mov
mov
push
cli
cltd
ret
rolb
push
in
xchg
shl
rolb
jp
jae
xor
push
sub
pop
push
lods
sti
mov
pop
mov
shlb
sarb
outsb
adc
cmp
jle
adc
fwait
mov
xor
rcrb
loope
jb
lods
dec
mov
push
cmp
pop
dec
xorb
aaa
cmp
or
pop
int3
insl
inc
xchg
jl
dec
and
xor
imul
roll
test
xor
das
loopne
hlt
movb
dec
pop
mov
sub
jbe
adc
and
test
inc
and
inc
sub
js
push
mov
xor
jae
jge
scas
add
outsb
push
ss
pop
xchg
cmp
add
mov
jp
jge
fbstp
repz
std
aas
push
mov
mov
xor
push
scas
mov
jne
test
decl
mov
push
jns
xchg
mov
add
cmp
or
in
jle
fmulp
mov
cmp
xor
mov
mov
push
test
and
sbb
clc
sbb
outsl
mov
cmp
mov
cmpsb
insl
nop
addr16
dec
pop
sbb
and
arpl
in
jge
jp
mov
ljmp
xchg
add
scas
push
xchg
xor
rolb
and
sbb
outsl
inc
and
xor
idivl
stos
leave
lahf
das
cwtl
out
cmp
mull
iret
mov
roll
mov
pop
push
cmp
mov
push
pop
pop
inc
inc
lea
fst
mov
mov
pop
jp
fidivl
xchg
add
flds
dec
hlt
sub
pusha
adc
xlat
add
clc
push
adc
fildll
lods
sbb
arpl
cmp
rclb
fnstcw
daa
scas
jb
or
mov
aad
xor
xchg
movb
xchg
jnp
ret
push
and
sub
fildll
or
jb
popa
xchg
xchg
cmp
in
lret
std
or
loopne
int3
sub
jp
lods
push
mov
and
imul
loop
sub
jecxz
sbb
xlat
pop
fimuls
loope
out
lcall
pop
pop
cmp
cwtl
imul
adc
push
push
js
pushf
lea
add
movsb
mov
mov
pop
push
scas
fdiv
xor
int
mov
in
mov
lret
cwtl
mov
xchg
xchg
cli
popf
gs
cmc
mov
sub
xchg
call
fstpt
add
add
mov
add
cmp
cld
mov
cmp
lock
pusha
stc
push
loopne
or
push
jmp
cmp
mov
mov
and
in
jo
add
shlb
loop,pt
je
enter
aad
cmp
scas
xor
or
sub
pop
mov
push
lahf
scas
cmp
add
adc
mov
subb
mov
add
xor
divl
aam
rol
push
cli
jb
fidivrs
pop
push
or
jb
popa
ret
lret
jp
push
mov
inc
shll
push
je
sub
fldt
inc
mov
push
iret
repz
jle
push
sti
or
out
sub
enter
jno
jl
fwait
ja
push
mov
dec
mov
sub
pop
sbb
cmpsb
lret
ljmp
mov
subb
sbb
ret
add
jb
insl
scas
mov
pop
mov
push
fwait
fs
clc
test
daa
push
ja
cmpb
nop
sbb
movsl
mov
out
sti
mov
jg
insl
push
movsl
sbb
imul
xchg
mov
adc
cmp
stos
cwtl
aas
or
test
push
dec
fidivrl
stos
xchg
and
addb
adc
adc
jnp
dec
scas
movsb
push
jle
add
cltd
adc
and
xchg
mov
call
jge
lds
rcll
pop
pusha
jno
xchg
add
push
xor
xor
aas
aad
or
dec
les
fisttps
sub
adc
movsb
out
cmp
seto
fdivrs
je
icebp
es
ljmp
stc
jbe
lea
fdivl
inc
fstpl
add
mov
and
or
adc
aad
cmp
test
test
push
insb
sbb
jle
pop
pop
or
in
mov
push
vpacksswb
in
imul
cld
pop
fwait
xchg
pop
icebp
aad
mov
fcomp
dec
into
nop
dec
mov
aad
stos
fimuls
pop
in
in
ja
aam
jp
mov
dec
pop
jns
test
xor
cmp
pop
enter
cmpsl
pop
rcrb
inc
iret
cmpsb
cltd
mov
sub
mov
mov
js
lods
bound
lea
pop
jle
mov
sbb
in
fdivrs
repz
int
ret
loope
bound
scas
leave
movsl
jmp
mov
popa
xchg
imul
cmp
lahf
out
push
es
mov
shl
sbb
outsl
sub
out
dec
mov
nop
xlat
fsubl
jp
mov
aam
sbb
jns
dec
mov
xchg
out
shlb
inc
in
les
mov
mov
insb
jns
mov
into
pop
scas
loop
mov
mov
fucom
xchg
push
push
test
xchg
pop
mov
xorb
daa
xchg
cld
lret
mov
mov
cmc
shlb
sbb
lds
push
mov
sti
aaa
movsl
movsb
sub
sbb
dec
sbb
pop
dec
pop
cmp
xchg
lea
xchg
xchg
push
je
mov
jle
xor
in
scas
cmp
cmp
imul
inc
dec
hlt
xchg
jae
in
and
xchg
test
cmp
jle
pop
je
hlt
push
fwait
lahf
xchg
push
and
into
xchg
or
ret
inc
testl
es
cmp
mov
xchg
jecxz
mov
mov
sub
jo
pop
mov
addb
jecxz
inc
push
jle
cmpsb
adc
push
jns
lret
fisttps
neg
inc
inc
cmpsl
xchg
and
and
adc
fisttpl
dec
add
jge
adc
sub
dec
adc
or
sub
std
adc
int
es
lahf
pop
fldenv
mov
subl
pop
stos
mov
sub
jne
js
fidivs
popf
xlat
clc
stos
pop
mov
pop
lods
test
dec
cmp
cmpb
and
lret
fwait
xor
push
jb
dec
add
aas
mov
xchg
mov
stos
push
and
in
pop
inc
jns
out
imul
xchg
cmpl
stc
sti
adc
sti
popf
sub
pop
loop
mov
ljmp
jmp
adc
push
sub
stos
push
fs
or
idivb
mov
fidivrs
cmpsl
lds
into
add
pop
cltd
lds
xlat
cmp
jae
mov
stc
sub
std
push
and
in
push
sar
insl
loope
mov
mov
out
ss
inc
xchg
inc
fidivl
jle
cmpsl
pop
mov
add
cwtl
and
jae
sbb
stos
scas
cmp
xchg
xchg
out
jns
psrld
cmp
popf
xchg
fwait
mov
fwait
jg
sub
testb
jle
cmpb
loop
xor
rcl
inc
xchg
sub
cmc
fcoml
in
aam
adc
mov
lock
movlps
lods
daa
or
cli
aad
inc
jbe
or
xchg
pop
mov
sti
pop
mov
leave
loope
test
das
cmp
jbe
int3
sbb
adc
fmull
cmc
xchg
cmp
cs
pop
add
loop
jns
jne
aaa
pop
xor
sbb
loop
add
cli
popf
xchg
push
adc
adc
test
loopne
jne
loope
mov
mov
inc
std
jge
mov
jl
jge
movsb
push
enter
das
cmpl
in
icebp
std
push
pop
dec
jmp
dec
in
sti
daa
push
testb
push
sub
cmp
sbbl
incb
xor
pop
fstpl
mov
shrb
adc
test
xor
mov
pop
mov
mov
bound
cltd
dec
jne
jmp
mov
pushf
sub
out
or
mov
jle
mov
add
pop
test
xchg
inc
aam
dec
lods
cmp
ljmp
ret
out
or
jns
enter
cmc
add
pop
ss
cld
mov
dec
test
lods
out
mov
lods
pop
out
mov
js
addr16
aam
cmpsl
cmp
xchg
pop
mov
sbb
ret
cwtd
in
jecxz
push
cmp
rorl
out
gs
cmp
push
aad
lea
orb
fiaddl
jecxz
inc
push
add
mov
sbb
nop
push
pop
pop
popa
mov
fadd
jbe
popa
and
push
notb
dec
sub
adc
subl
jp
leave
jbe
cld
shlb
or
adc
outsl
mov
es
pop
push
xor
cwtl
outsl
fs
xchg
jl
pop
adc
mov
jne
xchg
ret
imul
xchg
fmuls
push
enter
xchg
push
xor
mov
ds
cmp
push
loop
in
lret
lret
pop
mov
repnz
jae
xor
or
cmp
inc
mov
insl
scas
fs
sahf
fstpt
dec
jne
js
jp
jb
pop
sbb
repz
imul
mov
adc
xorb
sbb
inc
xchg
jle
push
rorb
cmpsb
or
idiv
inc
movsl
xor
pusha
dec
jae
cmp
test
arpl
int
mov
ss
lock
frstor
leave
jae
sbb
push
xlat
cmp
mov
mov
and
lahf
jecxz
mov
xchg
popa
jle
rcll
sti
cwtl
mov
dec
outsl
cmp
or
pop
test
cmpsl
shl
mov
stos
jmp
xor
adc
movsb
xchg
cmp
cmc
lahf
addl
inc
shlb
jo
or
inc
in
adc
rclb
mov
cld
mov
push
loop
fwait
jcxz
cmp
jb
xchg
adc
sbb
push
cmp
das
xchg
leave
jno
add
idivl
sbb
scas
mov
subb
test
adc
cmc
stc
out
dec
adc
les
nop
jbe
fs
dec
or
jge
sub
dec
mov
cli
sahf
pop
ret
xchg
std
repz
dec
mov
xchg
iret
je
jo
push
inc
testl
xchg
ljmp
mov
enter
and
lret
nop
cmp
mov
xor
or
mov
and
out
sub
sbb
dec
mov
testl
add
js
xorl
inc
sub
pop
and
mov
out
mov
inc
popf
xchg
hlt
adc
lahf
pop
push
fwait
xchg
lret
js
imul
push
movsl
xchg
xchg
or
sub
or
cs
daa
insb
jno
in
mov
mov
test
cld
loop
insl
jecxz
mov
mov
lcall
sbb
push
mov
dec
jmp
rcl
xor
mov
pop
mov
inc
js
and
xchg
shll
int
add
jo
rorl
mov
outsb
jecxz
sub
out
push
sbbb
mov
or
lds
sbb
push
ror
xor
push
divl
sub
arpl
sahf
scas
rcrl
cmp
dec
cmp
xchg
xor
xchg
ss
xor
mov
sub
mov
and
pop
pop
fwait
out
dec
sub
rorl
mov
rcll
inc
dec
sbb
mov
fnstcw
gs
rcrl
mov
pop
rcr
mov
jne
and
lret
scas
mov
jle
mov
pop
xchg
sbb
addr16
clc
jns
and
push
shll
xor
cmpb
xchg
sbb
es
dec
sub
inc
inc
dec
dec
dec
addr16
push
gs
imul
int3
es
sub
test
or
jb
sbb
adc
lahf
into
arpl
adc
leave
inc
sbb
pop
jbe
push
xchg
push
mov
xchg
dec
add
push
and
xchg
scas
add
pop
cwtl
xor
adc
and
test
ss
mov
jb
xor
xor
in
inc
xchg
adc
push
sbb
pop
in
js
aas
adc
inc
push
psrad
dec
cli
xchg
rcrl
sahf
xor
xchg
in
inc
add
outsb
fnsave
mov
mov
addl
pop
push
out
lahf
jb
pop
sub
xchg
mov
cmpsl
ljmp
jg
inc
hlt
sti
push
insb
test
inc
aad
and
jae
inc
cltd
sub
dec
hlt
add
pop
jno
push
lcall
mov
sbb
dec
int
xlat
mov
rcl
or
adc
div
into
sub
ret
dec
pop
push
mov
mov
arpl
jno
insl
jl
rol
mov
mov
xor
lahf
jne
xchg
int
mov
xchg
out
push
orb
add
lea
cmc
inc
xor
repnz
ret
int
jmp
ss
jns
mov
sarb
cli
pop
add
into
out
xor
cld
lock
jb
or
lret
addr16
sahf
mov
inc
scas
cmp
or
hlt
jmp
popf
add
jge
pop
mov
test
loope
dec
cmpb
and
xor
loopne
into
and
jl
push
lcall
add
cli
push
cli
rcl
in
mov
aaa
jl
xor
inc
cmc
hlt
sbb
mov
sbb
inc
orb
lcall
cmpsl
inc
cmp
pop
sbb
nop
jne
insl
cmpsl
dec
pop
xor
jecxz
and
aas
inc
xchg
mov
xlat
dec
jp
add
xlat
out
jecxz
orb
cmc
call
scas
sahf
arpl
dec
xchg
movsb
pop
sub
and
sbb
insb
mov
test
divb
add
pop
jp
sbb
mov
daa
movsb
popl
and
cwtl
jp
jge
jns
sbb
sbb
stc
in
and
cmp
xchg
mov
das
xchg
xchg
inc
xor
int
xchg
mov
or
adc
jae
push
jge
add
subb
sub
jecxz
aam
in
mov
out
xchg
pushf
mov
dec
int
js
ficomps
lret
out
ds
ss
xchg
xchg
sbb
stos
outsb
test
cmpsl
andb
fistpl
mov
mov
cmc
mov
pop
pushf
inc
imul
repz
xor
es
dec
lods
pushf
pushf
sahf
fdiv
outsb
push
in
idiv
scas
inc
out
int
pop
sti
or
int
or
sarl
stc
ljmp
ret
inc
lods
or
into
jbe
inc
sbb
fldenv
mov
add
mov
xor
inc
gs
fucomi
into
jbe
mov
push
add
fnsave
aaa
mov
xchg
mov
adcl
mov
pop
mov
pop
test
nop
imul
xor
rclb
icebp
mov
popa
scas
popf
icebp
ret
inc
out
dec
mov
incl
or
mov
jns
sub
and
mov
mov
mov
dec
add
ret
cwtl
inc
jecxz
movl
mov
mov
imul
pop
rclb
rcll
ret
push
jmp
jnp
ss
push
imull
jae
inc
into
push
mov
dec
movsb
push
out
jbe
xchg
cmp
sbb
es
mov
jecxz
xor
out
adc
into
cs
lea
cmpsb
adc
cmp
repz
push
mov
add
outsb
cmp
pop
addl
inc
jle
test
int
add
movsb
test
mov
pop
mov
mov
xor
and
adc
shrl
xchg
push
dec
sbb
sahf
sbb
je
or
addr16
mov
sbb
cli
in
fidivrs
xchg
add
cmp
clc
mov
out
inc
addr16
rorb
cmp
fldl
loopne
or
pop
lds
xchg
sub
fs
mov
xor
jmp
jecxz
pop
rcrl
inc
add
imul
and
xchg
outsb
test
lods
and
and
pop
mov
aad
lods
movsl
ljmp
mov
inc
jo
into
and
xchg
mov
mov
fcompl
pop
dec
lcall
add
cmp
sbb
push
mov
pop
mov
pop
mov
mov
fwait
push
fsubr
lea
xchg
pop
shlb
stc
pushf
and
or
fldcw
lcall
aaa
push
xchg
jae
jo
add
ret
dec
ljmp
jge
ljmp
cmp
orb
sarl
jnp
push
pop
aad
xchg
xor
mov
cmpsl
imul
jns
pop
jnp
fucom
jecxz
mov
hlt
add
push
inc
sub
pop
imul
inc
call
es
and
add
imul
test
js
ljmp
sahf
cwtl
or
imul
sub
je
stos
loopne
jnp
and
in
arpl
lahf
adc
fidivrl
stos
mov
pop
fisttpl
fwait
idivl
int
dec
xor
loope
jae
aas
and
pop
mov
pop
xor
call
and
jmp
cmp
test
dec
sub
rol
lahf
ljmp
mov
stc
jp
or
and
lods
sbb
adc
xor
add
mov
push
push
repnz
outsl
or
xor
and
aas
sbb
and
and
push
push
outsb
mov
sub
nop
hlt
mov
pop
hlt
mov
mov
jns
std
ljmp
in
imul
sarl
sbb
mov
scas
mov
aaa
inc
fdiv
adc
mov
in
imul
outsb
mov
nop
push
and
xchg
sahf
jle
sub
div
xchg
loope
push
sbb
push
imul
add
leave
dec
xor
testl
nop
mov
xchg
sti
xor
and
clc
xor
mov
xchg
repnz
and
insl
mov
cld
lock
mov
pop
pop
mov
jb
movsb
cmp
data16
jae
ficomps
jo
mov
or
fidivl
icebp
inc
sub
cmp
loopne
cmpl
test
jns
push
sub
mov
sti
int3
addr16
notl
imul
mov
aad
scas
mov
aad
data16
es
in
int3
or
jle
pop
rcrl
and
dec
cmp
add
inc
or
cmp
scas
out
push
cld
xor
xchg
ss
mov
push
adc
test
or
aam
cmp
mov
popf
or
stos
push
mov
jns
mov
jge
lret
pop
mov
cwtl
aad
xchg
xor
ljmp
cmp
lock
fdivrl
cwtl
mov
mov
and
outsb
roll
icebp
invlpg
or
test
jo
jb
add
cmp
xchg
pop
or
mov
push
jbe
cltd
push
push
stos
lcall
mov
lcall
lods
mov
stos
imul
mov
fsubl
hlt
or
std
dec
jge
sub
sahf
cmpsb
lock
push
adc
jle
daa
rclb
push
enter
add
aam
lods
dec
lods
in
cld
fdivrp
dec
loopne
inc
gs
in
add
sub
das
sub
jns
dec
das
addr16
jmp
cmp
dec
sbb
sbb
push
inc
jno
xor
jp
push
repnz
dec
push
or
cmpl
push
clc
or
push
iret
pop
adc
push
jg
pusha
imul
ja
mov
stos
lods
lea
xchg
dec
pop
add
fstl
inc
mov
mov
ret
movsl
js
adc
aad
popf
ja
add
movsl
dec
xor
in
sbb
in
cmp
sarb
push
mov
cmpsl
and
xor
test
insl
ret
dec
sbb
sbb
lret
aas
aad
xor
dec
mov
pop
icebp
ja
sbb
inc
lcall
or
xor
aaa
pop
pop
jecxz
jno
push
push
ja
lea
xor
dec
xchg
add
jb
pop
sub
sti
pop
jns
mov
lahf
add
repnz
add
sub
add
mov
mov
and
fildl
loope
test
xchg
fimuls
outsb
adc
add
mov
mov
pop
xor
push
mov
bound
jmp
pop
scas
xor
inc
push
dec
movsl
push
pop
adc
mov
jecxz
test
lods
sti
test
push
repz
push
gs
xlat
mov
dec
repz
dec
and
cmpsb
pushl
adc
lods
out
and
shrb
push
mov
dec
mov
xor
pop
or
stos
lods
psubsw
aam
je
call
iret
inc
shr
imul
out
xchg
ror
sub
dec
push
cmp
movsb
jge
push
ret
or
into
fsubrp
xchg
out
fsubrp
sbb
pop
mov
cwtl
movsb
leave
jp
dec
pop
sub
cmpl
lcall
fstps
add
addr16
ja
and
out
pop
icebp
test
jbe
lds
push
inc
fcoms
add
and
push
mov
mov
mov
jbe
mov
cld
or
or
es
cmp
test
ja
sub
xchg
sub
push
cli
cld
insb
cmc
mov
push
je
mov
dec
sbb
and
dec
nop
jl
sbb
lods
stos
or
sbb
shll
out
jmp
js
jmp
push
add
ds
add
push
jae
test
sbb
cmp
add
nop
adc
or
inc
std
in
in
xlat
inc
incb
lret
lcall
push
dec
shlb
add
nop
shlb
cld
mov
add
dec
xlat
iret
ds
mov
lock
push
loop
ds
mov
add
je
cli
pop
mov
ja
shrl
push
and
jo
jmp
xor
cmp
ss
pop
shrb
push
dec
cmp
pop
push
sub
out
leave
xor
mov
push
jge
jno
inc
adc
cltd
lahf
sub
adc
adc
mov
call
add
jns
ret
xlat
adc
sbb
js
dec
gs
xchg
jb
data16
sbb
cmp
cbtw
lahf
or
push
lods
mov
inc
push
inc
divb
inc
ljmp
out
into
xchg
pop
lret
inc
int3
jmp
mov
xor
mov
lods
and
adc
cmp
mov
mov
xchg
cmp
add
push
mov
gs
fwait
test
fiaddl
ja
insb
sbb
ss
in
test
test
loope
jg
lahf
pop
ljmp
iret
rcrb
std
jae
movsb
jl
pop
in
out
mov
cmpsl
jne
std
je
xlat
jle
add
or
mov
sub
aas
or
sub
fimull
and
shll
ja
aas
push
adc
jns
pop
jbe
movsb
and
cmp
scas
add
sar
les
adc
and
stos
sub
and
xchg
add
jl
and
mov
fsts
add
mov
xlat
jle
aaa
and
add
adc
push
loopne
cmp
lret
sub
dec
mov
je
xor
push
repz
add
xor
cwtl
pop
mov
mov
lret
test
out
mov
test
arpl
cmp
cmc
addb
dec
xor
mov
inc
clc
jno
lods
lret
cmp
shl
lret
push
push
inc
push
imul
inc
push
rorl
std
pushf
ds
inc
out
add
push
mov
fbld
lcall
clc
cmp
mov
shlb
sub
mov
sub
cmp
sub
inc
arpl
in
ljmp
stc
es
in
fistl
sbb
ret
aaa
aam
jno
inc
aas
lret
cmpsb
inc
dec
popf
ljmp
jg
jae
sbb
xchg
dec
into
iret
in
fdivl
adc
std
mov
xchg
insb
xchg
cmp
repz
cmpl
jl
sbb
clc
inc
imul
pop
xor
jl
into
pop
lret
jp
mov
mov
icebp
mov
test
jae
lds
xlat
leave
test
xchg
jp
push
adc
push
lcall
mov
aaa
sti
test
push
enter
cmc
adc
clc
add
sbb
ja
cmp
stos
xchg
loope
enter
adc
mov
jne
push
push
inc
xchg
je
ds
pop
mov
mov
gs
mov
jno
imul
and
lcall
scas
xor
mov
shrb
leave
loopne
or
mov
fucomip
xor
adc
gs
pop
aaa
mov
pop
fwait
cmpsl
jno
popa
xorb
xrelease
xchg
push
pop
repz
shlb
in
adc
pop
out
pop
cltd
out
mov
or
out
lods
add
inc
cmp
lcall
pusha
ret
and
inc
sbb
lret
push
out
mov
sahf
pop
add
fisubs
notb
sti
mov
mov
and
sub
jno
jp
mov
jne
mov
mov
in
cmp
xor
mov
push
cli
sbb
adc
jp
cmp
lahf
jecxz
add
xor
inc
je
cmp
subb
test
push
pusha
gs
mov
fisubl
sti
cmp
pushf
and
xchg
stc
push
call
add
cmp
mov
lcall
scas
loope
push
sti
pop
aam
add
cld
cli
out
ljmp
mov
pushf
shrl
xchg
mov
sbb
and
je
mov
or
pextrw
mov
mov
cmp
pop
sahf
repnz
and
enter
sbb
xor
xor
aad
xor
ret
leave
mov
cli
sbb
jmp
cmpb
or
xchg
lods
adc
xchg
cmp
mov
lret
lock
bound
ja
hlt
out
xchg
mov
push
inc
out
mov
insl
mov
mov
xchg
int3
sbb
jnp
rcrl
sbb
cmp
jnp
sub
call
pop
imul
inc
idivb
je
xchg
jp
test
js
int
push
xor
xchg
clc
pop
mov
jno
out
push
punpckhdq
lock
ss
jge
shr
into
push
es
movsl
aas
lret
bound
cmp
and
lret
jae
iret
adc
xchg
jg
dec
outsl
les
jle
xchg
jg
add
jb
xchg
out
add
dec
in
mov
pop
lds
ret
xchg
mov
cli
inc
xor
loope
xor
jmp
and
movsb
push
aam
aad
je
mov
rorb
insb
add
fsubrl
and
push
movb
lret
sub
inc
repz
jmp
push
and
das
sub
or
aaa
jl
jbe
mull
out
adc
jb
ds
cmp
lods
mov
iret
leave
loope
shll
pop
out
outsb
fdivrl
sarl
repnz
inc
out
xchg
push
popf
nop
xor
mov
mov
xchg
jecxz
xor
mov
arpl
outsl
cmc
mov
gs
test
in
dec
jge
mov
repnz
mov
xchg
dec
jb
jge
adc
push
outsl
into
cmp
jns
sub
xlat
stc
test
pop
sbb
sbb
lock
jno
in
lea
pushf
cmp
pop
add
or
xchg
or
dec
inc
mov
and
mov
std
int
shll
add
sbb
or
mov
push
xor
xlat
xor
lahf
cmpsl
and
pop
stc
pop
fnstsw
loopne
std
or
push
and
mov
aam
push
ljmp
call
cmp
in
or
add
mov
into
sbb
aam
shlb
pop
adc
stos
movsb
jp
pop
or
mov
or
adc
pop
lods
in
lret
loope
fimull
xor
cmp
pop
xorb
int
lcall
leave
aad
mull
scas
inc
aam
fadds
mov
sbb
out
lea
or
mov
stos
cmp
out
cmpsb
or
cmp
rcrl
addr16
mov
cld
nop
outsl
push
mov
nop
fdivrs
dec
jo
std
pop
mov
inc
pop
bound
fildl
popf
cld
daa
dec
add
aaa
out
add
push
mov
pop
sbb
test
dec
lds
pop
in
push
inc
push
addr16
xor
and
call
jns
pop
fdivrs
or
sub
add
lock
push
mov
xor
stos
dec
push
pusha
nop
lock
pop
jnp
es
stos
sub
xor
adc
fildl
mov
jno
pop
aam
and
xchg
jae
jns
push
add
std
pusha
aad
std
stos
popf
mov
int
jns
pop
ds
aaa
lcall
xor
push
cmp
push
adcl
inc
adc
adc
lock
jl
notl
in
pop
or
jmp
add
push
xor
sbb
rcr
sti
ficomps
xor
adc
mov
fisubrl
mov
or
andb
inc
scas
cmp
push
sub
or
das
rcll
fistps
add
mov
dec
cmpsl
outsl
push
mov
aaa
outsb
or
cld
or
repnz
mov
sbb
stc
imul
fdivl
call
es
push
cmp
mov
aam
lds
adc
sti
sbb
mov
cmp
mov
in
movsb
mov
gs
fcmove
sub
icebp
inc
jne
or
and
sub
dec
jno
mov
push
shrb
jle
outsl
xchg
sub
loope,pn
adc
dec
int3
loopne
ds
fwait
cld
inc
dec
je
and
or
add
mov
and
out
fmulp
xor
aas
push
mov
push
bound
pusha
enter
adc
outsb
int
lea
pop
cmpsl
fwait
test
push
adc
aam
pushf
inc
mov
mov
sahf
addr16
push
dec
ds
jecxz
xor
sti
jae
push
xchg
jmp
xchg
sub
xor
inc
int3
shlb
fwait
cli
pop
or
cmp
in
ds
cmpsl
mov
cmc
add
scas
mov
mov
lret
in
fs
cli
test
and
jmp
fcmovnu
aaa
fsin
into
or
sbb
stc
and
pop
repnz
dec
dec
inc
inc
xchg
hlt
arpl
push
and
ret
xchg
mov
mov
or
les
adc
into
out
cld
inc
inc
jmp
into
fbstp
xlat
fists
adc
clc
adcb
mov
or
mov
hlt
cmpsl
add
outsb
xor
mov
ret
pop
ficompl
aad
mov
push
pop
shll
and
mov
dec
and
xor
xor
cmpsb
sbb
sbb
fwait
lock
fdivs
ror
shll
iret
or
or
push
xchg
xor
push
add
inc
stos
inc
jecxz
cmp
mov
test
int3
lods
push
add
pop
data16
mov
stos
fcompl
sahf
cmc
enter
lcall
mov
fnstsw
mov
bound
adc
test
loopne
mov
test
js
cltd
mov
movb
stos
jne
sub
lgs
add
popf
jno
pop
mov
push
mov
xchg
test
rcll
out
pusha
push
cmpb
mov
jne
scas
inc
leave
in
or
scas
cmp
pop
addl
arpl
decl
fninit
ljmp
test
cld
push
cmp
out
lds
jmp
stos
add
lret
fisubs
out
mov
cmpsl
jno
mov
mov
subl
cmp
call
in
cli
rolb
test
push
or
xor
jge
shl
negl
scas
call
xor
and
int
mov
movsl
enter
fidivs
xor
mov
icebp
mov
and
leave
sti
xchg
and
pop
push
dec
lcall
out
fwait
ror
dec
push
jno
fcmovu
jg
aam
mov
push
dec
int3
add
and
cmpsl
xchg
ret
cmp
push
out
push
loopne
jmp
add
xorl
pop
xor
iret
xlat
mov
test
je
jno
sbb
lock
andl
xchg
into
ja
arpl
xor
lret
iret
cmp
mov
and
pop
inc
ss
pop
movsb
pop
xchg
lahf
mov
or
jbe
lock
xchg
cmp
jae
icebp
jl
imul
push
mov
cmp
or
cmpsl
jno
cli
loope
aaa
inc
jmp
push
jge
pop
mov
in
cmp
inc
sub
push
in
push
cmc
je
pop
pusha
aam
movsl
mov
data16
sti
cs
dec
push
adc
test
push
mov
das
jnp
mov
rcrl
xor
pop
pop
pop
push
pop
mov
mov
mov
sbb
sub
aaa
xchg
or
lret
inc
xchg
inc
mov
push
ja
shrl
ficoml
int
or
into
addr16
mov
popa
outsb
sti
jo
mov
sbb
dec
adc
cmp
sbb
out
pop
ss
hlt
dec
mov
sub
push
andb
pop
int
lret
jno
dec
xchg
mov
pushf
push
gs
rcll
icebp
inc
movl
jecxz
or
fisubrs
jno
lcall
cs
dec
mov
mov
pusha
cld
fcmovnb
cli
inc
xor
sbb
pop
cmp
shll
subb
scas
jmp
add
xchg
call
loope
inc
sbb
test
push
fidivrs
repnz
pop
and
inc
insb
mov
xor
leave
add
xchg
dec
ret
cli
add
rorl
mov
pop
mov
add
mov
stos
hlt
in
loope
or
dec
jb
dec
mov
insb
das
mov
dec
adc
mov
adc
icebp
push
sub
inc
rcl
sub
mov
ja
jbe
scas
mov
into
jae
mov
sbb
cmp
pop
xchg
aas
cmp
mov
jg
mov
jb
push
mov
or
push
in
sbb
jge
mov
aad
adc
and
cli
adc
cmp
mov
cmpsl
iret
xor
dec
out
sub
push
clc
or
hlt
cmp
insb
pop
insl
rorl
into
out
popa
pop
pop
loopne
sar
dec
lahf
insl
add
int3
inc
daa
sub
push
int3
movb
pop
mov
sub
adc
push
int3
mov
lahf
adc
push
cmp
bound
jge
pop
add
mull
mov
xchg
sbb
ficomps
push
imul
xchg
imul
insl
sub
outsl
jg
cmp
push
mov
addb
inc
fwait
sub
mov
ja
andb
xchg
movsb
lcall
mov
arpl
pop
jmp
ret
jbe
ds
adc
fildll
fwait
leave
mov
mov
es
movsl
je
mov
adc
mov
arpl
mov
jnp
dec
icebp
sbb
stos
cmp
xor
mov
lcall
cmp
cmp
mov
mov
xlat
fs
inc
shll
sub
add
icebp
sbb
sub
inc
and
mov
repz
daa
int
nop
dec
sbb
push
push
pop
data16
into
pop
aas
mov
out
pop
test
xchg
jl
icebp
aas
pop
cltd
lds
sbb
fistpll
adc
stc
pop
andl
jmp
xchg
push
gs
sti
push
and
mov
push
lret
cmc
test
daa
or
repnz
lcall
lahf
std
js
fcmovnu
jmp
jae
mov
xlat
pop
add
jns
test
idivl
push
fstpl
outsb
mov
ficomps
xchg
in
push
mov
std
sbb
mov
insl
leave
xor
push
cmp
movsb
jno
repz
lods
xor
xor
int3
adc
mov
push
int
push
or
call
js
dec
test
cmpsl
in
in
outsl
inc
mov
repnz
rorl
les
shrb
ja
sarl
xchg
push
in
or
pop
fwait
clc
mov
scas
movsb
mov
test
pop
hlt
jp
sub
sub
or
aad
nop
mov
mov
sti
dec
or
xchg
jle
xchg
sbb
jl
sbb
adc
mov
imul
mov
push
dec
js
cmp
movsb
jp
int3
jnp
fdivl
mov
mov
ds
and
movsl
mov
lahf
test
dec
cmpsl
lcall
xchg
in
xchg
or
imul
stc
scas
daa
lock
rcll
xchg
xchg
leave
movsb
and
mov
rol
popf
mov
lcall
push
xchg
insl
push
imul
jge
sub
push
insl
ss
cld
adc
push
out
add
dec
out
daa
aad
mov
push
sub
xchg
aas
popf
lcall
ret
fimull
inc
mov
sub
jp
cmp
das
les
push
push
add
ror
cmp
add
pop
scas
aad
jmp
sub
fsubl
sti
mov
dec
out
xor
out
lcall
ss
popf
sti
outsl
mov
bnd
push
or
push
sahf
rol
imul
andb
fnstenv
cld
push
lock
push
xchg
clc
or
js
sbb
add
fistpl
mov
xchg
outsl
fidivs
sti
mov
push
xchg
add
insb
out
xlat
xor
xchg
push
jg
aad
mov
leave
mov
nop
jecxz
mov
lds
aam
in
jbe
fsubr
jmp
sub
lods
fdivp
data16
dec
cmp
les
dec
loopne
gs
cmp
push
push
jge
into
jle
pop
jmp
adc
adc
fiaddl
add
repz
out
outsb
cld
js
pop
shr
enter
push
notl
stos
cmp
clc
mov
sbb
jne
lea
xor
and
add
xor
push
addr16
fldt
ror
lods
movhps
mov
mov
test
xchg
jmp
pop
sbbl
ret
rcr
sbb
ja
sub
cmp
xchg
push
scas
out
call
sbb
jl
add
outsl
xor
and
sahf
and
in
or
mov
stos
dec
push
jecxz
cltd
cs
cmp
pop
jne
call
std
jmp
out
push
sti
inc
mov
out
add
in
ret
addr16
testl
adc
push
xlat
xor
cmp
stos
mov
aad
add
push
data16
add
xchg
xchg
dec
loope
testl
clc
inc
push
push
inc
arpl
nop
fdivs
or
pop
js
pop
and
int3
or
enter
mov
bound
dec
outsb
pop
fmull
stc
cmp
bound
adc
sbb
sbb
cli
rcrb
inc
out
ret
jg
push
fxch
inc
cwtl
cmp
jne
add
jns
das
out
pushf
repnz
ret
aam
mov
repnz
cmpsl
jno
stos
inc
out
jecxz
loopne
aaa
and
stc
idiv
mov
inc
and
pop
cmp
pop
in
lret
add
stos
adc
stc
fwait
push
call
pop
idiv
ret
add
out
add
jg
push
push
push
jo
push
fs
das
mov
ret
and
fucom
fisubl
movl
ret
loopne
add
dec
fwait
dec
cltd
aam
leave
push
inc
sarl
mov
xchg
cmp
pop
fidivl
cli
inc
pop
mov
xchg
std
test
repnz
sbb
push
push
and
loopne
in
bound
testl
ds
pop
mov
sbb
xchg
sub
daa
ret
dec
lret
cmpsb
mov
addb
mov
mov
inc
in
or
or
jl
cmp
mov
cmp
mov
popf
xchg
cmp
xor
jge
jecxz
lods
mov
lcall
xchg
mov
sbb
inc
mov
insl
das
dec
movsb
mov
sub
cmp
inc
mov
adc
dec
and
and
xorb
dec
mov
jb
and
lea
arpl
cmp
and
lahf
daa
mov
nop
mov
xor
mov
cmpb
filds
leave
xchg
jo
aam
push
inc
lock
fmuls
cwtl
or
notl
fwait
inc
stc
fwait
jge
inc
jae
in
into
outsb
nop
fstpt
mov
mov
push
push
leave
adc
mov
sarl
jle
testb
xchg
mov
mov
dec
jo
lret
xchg
mov
sbbl
xorl
jae
add
out
cmp
not
mov
mov
adc
scas
fdivs
addl
and
add
mov
call
ret
lds
repnz
mov
test
jg
sbb
pop
ret
add
addr16
lods
sub
scas
out
mov
adc
add
xchg
jae
jnp
sub
inc
fldl
repz
sar
and
mov
or
hlt
inc
loope
movsl
xor
or
pop
outsb
jg
inc
add
ret
jo
mov
add
lea
jne
cmc
js
in
aad
add
mov
ret
lcall
aas
lcall
testl
stos
mov
lret
outsb
add
lahf
jge
fwait
add
sbb
jmp
jmp
int3
mov
jno
inc
mov
stc
lea
jecxz
aam
fdivrl
cwtl
or
pop
mov
push
out
mov
out
fstpl
cli
lret
xchg
cmpsb
jne
and
pop
jns
dec
rol
push
jge
dec
add
sbbb
clc
mov
or
and
add
mov
cmpsl
pop
dec
jmp
inc
or
sub
clc
jmp
cmp
scas
cmp
mov
jle
sarb
pop
add
sub
mov
pop
stos
push
orl
daa
dec
loopne
inc
cmp
cltd
cs
loopne
test
das
lea
pop
or
and
hlt
jg
xchg
mov
nop
test
scas
insl
pop
sub
jno
inc
fcompl
mov
dec
xorb
lds
in
xabort
or
lahf
shrb
mov
stos
pop
pop
dec
sbb
fildll
call
int3
dec
mov
and
aaa
mov
or
mov
push
mov
pop
cli
pushf
sbb
adc
jne
inc
test
add
rcrb
adc
shll
mov
iret
and
test
push
lock
mov
jg
inc
mov
jge
fsubrs
lds
lds
shl
push
push
dec
scas
mov
jle
ja
mov
shll
and
push
ds
xor
outsl
filds
adc
stos
adc
jae
or
or
inc
pop
sub
mov
roll
into
lret
dec
cmpsb
inc
jle
cmp
mov
pop
aas
sbb
add
out
push
cmpsl
into
fst
inc
sbb
shlb
sub
cltd
dec
jnp
or
add
mov
push
call
leave
test
xor
fidivl
mov
lahf
cmp
daa
mov
mov
lcall
push
push
sbb
sbb
repnz
push
outsb
sbb
ret
outsb
movl
jns
gs
bound
push
lahf
mov
fisubl
out
nop
or
int3
cmp
dec
xchg
pop
inc
fisubs
fs
xor
lret
nop
pop
ret
pop
sbb
out
push
loope
pop
mov
into
push
lds
xor
sub
sahf
mov
mov
pop
mov
addr16
mov
andl
mov
push
arpl
and
mov
cmp
popf
les
cmp
add
popa
lahf
roll
cwtl
mov
jl
popf
insb
add
decl
push
or
lock
adc
dec
mov
xchg
xchg
sbb
adc
imul
push
adc
js
repnz
jmp
lahf
fisttpll
mov
ja
frndint
pop
lahf
in
jae
mov
popl
cltd
loop
ja
lock
mov
cwtl
mov
rorb
inc
pop
inc
jge
sbb
mov
lret
add
in
jne
push
sbb
cld
into
fnsave
jb
stc
dec
es
movl
pop
xorb
adc
test
icebp
andb
xor
push
je
mov
push
xchg
pushf
jge
adc
mov
nop
or
mov
push
leave
cmp
and
pop
push
lret
xor
int
jl
xchg
sub
lret
push
xlat
jnp
pop
into
sbb
dec
jle
pop
and
xchg
or
rcrl
and
aad
xchg
cmpsb
outsb
pop
xchg
jecxz
rolb
inc
fisttpll
aam
and
pop
mov
adc
inc
adc
rcl
add
mov
inc
dec
xor
iret
mov
repnz
lret
lret
jl
adc
xor
cmp
fadds
pop
mov
fisubrl
xor
adc
inc
scas
xlat
movsl
ljmp
cmp
cmpsl
dec
sbb
mov
insb
ja
sub
out
pop
dec
push
rcl
or
add
pop
leave
mov
mov
push
mov
mov
in
adc
outsb
icebp
ss
loope
jnp
and
push
cltd
fcmove
outsl
sub
mov
stc
push
xlat
mov
add
sub
sbb
les
dec
push
std
sub
fimull
jne
popf
in
out
mov
insl
fsubr
cmp
xor
jmp
jmp
add
inc
push
and
adc
cld
inc
inc
stos
mov
lahf
lds
imull
sbb
mov
imul
mov
sbb
adc
ja,pt
lods
mov
aaa
adc
popf
fstl
xchg
in
sub
pop
mov
mov
add
loopne
push
push
lret
sub
fs
cmpsb
mov
and
scas
mov
jnp
mov
sub
inc
xor
or
adc
imul
mov
inc
leave
push
iret
into
mov
es
and
jno
test
pop
push
jle
out
jl
sbb
data16
jae
sub
movsb
nop
sub
xchg
jne
and
xchg
pop
adc
out
and
aaa
sub
jle
sbb
mov
popf
fwait
jb
pop
push
or
push
lods
sub
sub
or
mov
mull
adc
jb
negb
sbb
lea
push
jns
cmp
sbb
push
ja
jle
test
pop
pop
and
jae
jmp
ss
das
pop
aaa
sbb
fisubs
or
subb
mov
pop
add
std
fisttpll
sbb
cmp
adc
fcompl
or
stc
rcrl
enter
ds
popa
xor
add
mov
mov
aam
arpl
jnp
push
fsubp
mov
jnp
mov
add
shrb
xchg
xchg
sub
dec
adc
xchg
clc
popf
movsl
jnp
cmpsl
xlat
insl
iret
lods
mov
xchg
pop
loope
mov
out
push
push
mov
vandnpd
cmp
gs
xchg
xor
enter
in
popa
idiv
lcall
mov
rcll
dec
mov
mov
sub
dec
sbb
ret
xchg
std
mov
fdivrs
jnp
inc
cmpsb
jmp
mov
lods
sub
sbbb
lods
add
leave
in
shl
and
mov
cmp
mov
out
insb
mov
in
stos
outsl
pusha
sahf
call
cmpsl
jno
and
xchg
jle
movsb
push
sub
aaa
mov
and
sbb
mov
aaa
leave
or
es
push
adc
and
pop
and
or
ret
jge
je
push
pop
xor
loop
xchg
test
push
lret
aam
cltd
or
xchg
out
es
sbb
cmp
arpl
insl
add
pop
push
mov
mov
sbbb
pop
dec
cmp
lcall
faddl
sbb
jnp
jns
add
push
stc
mov
cmp
add
stos
jl
jne
jmp
stos
or
and
mov
test
or
mov
icebp
sub
fists
dec
out
insb
push
lret
xlat
jecxz
inc
aam
add
mov
and
scas
and
addr16
mov
repnz
mov
pop
sbb
cmp
mov
sbb
cwtl
and
fildl
out
and
sub
inc
dec
pop
jmp
addr16
jecxz
dec
enter
pop
ss
aas
dec
stos
popf
call
pop
cwtl
sbb
xchg
inc
popa
and
iret
aas
jbe
cli
dec
std
movsb
stos
push
cmp
sahf
andb
mov
jmp
mov
push
sbb
mov
sub
aaa
lcall
cltd
and
movw
mov
mov
fistpl
out
sahf
repz
pusha
out
xchg
push
mov
pop
sub
push
and
jmp
clc
sub
push
fdivp
and
xor
movsb
loope
sub
insb
push
add
add
fcmovbe
sahf
cs
fpatan
inc
or
fidivs
sbb
ret
xor
sbb
iret
pop
sub
dec
push
das
shrl
jmp
pop
sbb
roll
xchg
push
shr
add
cmc
push
cmp
pop
push
jne
adc
push
stc
aam
dec
mov
rsm
clc
cmp
and
lret
scas
inc
cmp
test
in
fisttpll
lods
push
int3
push
ljmp
sub
movsl
add
xchg
fdivs
adc
orb
or
inc
adc
out
fiadds
push
pop
sub
sbb
std
mov
clc
clc
jnp
mov
sbb
mov
inc
dec
mov
fwait
cld
cmpsb
movsb
mov
rcr
cmp
mov
sub
jb
cmp
lahf
arpl
xchg
xor
and
outsl
aaa
call
cmpsb
xor
mov
test
cmp
mov
out
push
in
into
or
and
std
sub
and
push
pop
scas
mov
sbb
imul
push
popa
cmp
xchg
or
xchg
ds
and
enter
jge
push
xchg
cmp
inc
popa
lret
push
stos
rolb
iret
scas
mov
mov
insl
and
add
lods
fstl
jg
sbb
push
xchg
lret
xchg
add
test
add
repz
xchg
cmp
xchg
mov
cmp
lods
addr16
mov
shll
pop
data16
add
ror
lock
mov
sahf
std
or
fmuls
testl
dec
pop
mov
sbb
std
mov
jmp
cmp
cwtl
or
loopne
enterw
cmp
sbb
mov
lods
bswap
mov
pop
andl
clc
stc
inc
pop
jnp
sub
das
das
jp
sub
xchg
iret
scas
movsl
mov
incl
xchg
outsb
fs
jnp
pop
adc
and
repnz
sub
push
xchg
mov
enter
cli
cmpsl
loop
stos
inc
lcall
psrlw
mov
popf
mov
push
xorl
push
popf
pop
xlat
push
in
pop
inc
mov
mov
pop
add
rorl
xchg
fildl
xchg
mov
dec
sub
mov
movsb
lds
cmc
push
pop
push
dec
cmp
jae
push
cmpb
movl
clc
fiadds
push
in
mulb
mov
ljmp
push
or
adc
aad
add
jmp
jl
mov
inc
aam
mov
cmp
xchg
xor
pushf
int3
sahf
imul
dec
jno
or
and
sub
das
xchg
popf
out
lea
ret
aaa
call
inc
jecxz
iret
jb
jp
fucomip
shrb
mov
addr16
push
and
out
in
mov
out
int3
imul
stc
addr16
inc
in
xchg
xchg
mov
or
mov
sbb
ljmp
pop
out
stos
nop
inc
stc
std
adc
cmpsb
mov
je
xchg
or
and
inc
or
inc
lret
js
xor
sbb
lret
mov
push
test
jle
mov
dec
inc
lret
dec
mov
pop
xchg
jl
fisubrs
test
roll
xor
aam
jmp
std
or
inc
les
inc
es
rolb
inc
gs
nopl
fnstcw
gs
sti
push
pop
xchg
dec
pop
iret
stc
sub
mov
leave
push
fisubrs
ljmp
xchg
sahf
int3
inc
pop
pop
nop
nop
pop
popa
mov
imul
sbb
iret
cmpsb
bound
mov
dec
outsb
cmpsl
adc
clc
pusha
jo
pop
inc
lahf
jns
pop
dec
sbb
xor
dec
add
adc
das
pop
scas
je
push
addr16
push
cmp
inc
repnz
push
scas
repnz
leave
into
fs
cmpsb
jnp
lds
dec
clc
push
addr16
or
dec
aam
pop
repz
leave
mov
lock
data16
add
movsl
cld
icebp
outsl
mov
mov
dec
push
repz
loopne
jecxz
mov
cs
xchg
lea
out
pop
and
inc
inc
aam
or
xlat
sbb
repz
cli
clc
stc
movd
jo
xchg
jecxz
and
sub
aaa
or
sahf
addr16
out
cmpsb
add
cmp
add
cmpsl
pop
loopne
pop
mov
jnp
shl
lock
and
or
dec
shrl
pop
mov
shlb
or
mov
fldt
stc
jle
dec
out
setno
movsb
in
add
pop
pop
xchg
scas
hlt
gs
aam
cmp
push
xchg
lock
jecxz
mov
xchg
mov
fists
add
in
in
rcll
cltd
sub
data16
inc
into
cmp
push
icebp
and
out
jle
shlb
jge
mov
sbb
bound
fcomps
jbe
shlb
push
xchg
lret
stos
fsubrl
and
or
mov
fimuls
test
fucomp
in
aam
jns
jne
into
push
or
iret
loop
dec
jmp
mov
movsb
mov
dec
ss
adc
insb
jmp
jne
mov
aas
out
test
fstpl
pop
adc
fs
sub
andl
push
aas
popa
mov
ss
or
rcl
stos
icebp
jne
pop
mov
pop
cwtl
in
sbb
repz
pop
inc
cltd
mov
lcall
push
xchg
cmpsl
mov
mov
movsl
stos
sbb
movsl
xor
xor
stos
pop
insl
iret
cltd
and
pop
fs
dec
jg
fnstenv
scas
mov
imul
fnstenv
cmp
xchg
loop
inc
cmp
jns
mov
mov
lahf
rorl
es
xor
mov
movsb
fs
ja
rorl
test
daa
and
dec
in
push
xchg
aaa
jecxz
lods
in
imul
mov
test
lret
ret
adc
cwtl
mov
js
sbbl
and
dec
jne
jge
cmp
cmp
sti
loopne
vmovd
xchg
mov
sysret
daa
jns
dec
sub
adc
popa
cmpsl
fwait
bound
shrl
sbb
cmpsl
fildll
add
je
out
mov
adc
xchg
xor
pop
inc
ret
fxtract
xor
aad
shl
ja
push
out
nop
xchg
sbb
or
jp
mov
sti
fdivs
and
leave
scas
scas
pop
dec
in
gs
mov
std
stc
ljmp
mov
rorl
pop
shrb
pop
or
and
xor
xor
sub
test
das
lret
movsb
sbb
aas
sub
pop
imul
xor
push
daa
dec
inc
fidivs
pop
xor
add
sub
add
push
adc
test
push
push
imul
sbb
sbb
cmp
rolb
mov
add
fidivl
mov
xor
cmpsl
icebp
inc
call
mov
lret
inc
xor
ss
in
sbb
cmc
int3
push
sbbb
jb
out
mov
and
movsl
mov
mov
hlt
cli
add
stc
enter
xchg
sbb
adc
sub
mov
negl
stc
jo
bound
xor
pop
dec
cmpsb
inc
jne
xchg
and
dec
sbb
lahf
cli
adc
jge
aaa
and
and
cmp
dec
filds
aas
leave
jmp
mov
mov
fidivrs
popf
andb
or
fcompl
fisttpll
rolb
mov
ljmp
push
addr16
xchg
stos
jnp
cmpsb
lea
lds
mov
pop
hlt
mov
fildll
loop
cmp
icebp
cld
pop
les
mov
xor
cmpb
iret
sub
repnz
sarl
jne
ds
cltd
or
pop
mov
dec
fdivrs
push
loopne
loop
and
popa
in
and
loope
pop
mov
pop
mov
or
out
loopne
xlat
xor
pop
stc
mov
cmp
add
and
push
mov
or
pop
out
daa
lcall
movsb
ja
icebp
cmp
xchg
push
dec
repz
xchg
in
ljmp
cwtl
push
cs
mov
xchg
addr16
addb
ds
loopne
rclb
shl
sbb
in
shll
outsl
pop
push
loopne
lahf
fiaddl
repz
mov
and
push
and
mov
inc
in
sahf
sub
xor
test
repnz
jno
mov
adcl
or
out
insb
adc
mov
nop
sbb
adcb
jle
out
daa
imul
out
mov
orl
stos
mov
sti
stos
cmpsb
mov
shll
xlat
push
jno
jmp
inc
arpl
into
xchg
inc
mov
pop
or
and
cmp
mov
fsubs
popf
push
sub
mov
fld
sbb
jno
aad
in
xchg
insl
fstl
test
in
and
pop
inc
sti
mov
pop
pop
cli
stos
xor
pop
das
mov
cmp
mov
orb
xchg
out
and
pop
stc
ret
pop
fmuls
sbb
in
mov
les
mov
inc
andl
dec
mov
cmp
jo
mov
dec
add
or
mov
dec
pushf
add
push
adc
outsl
jns
inc
pop
xchg
jge
cmpb
std
push
or
jnp
inc
xchg
mov
adc
add
inc
mov
add
or
xchg
in
dec
adc
out
aad
inc
aaa
and
cmc
je
outsb
mov
aam
ror
test
fnsave
pop
mov
movl
and
cmp
jne
xchg
in
jmp
call
mov
das
cld
sar
jg
xchg
outsb
dec
dec
pop
hlt
cmp
sbb
stos
shl
dec
push
push
pop
jge
pop
push
xor
lcall
test
mov
mov
inc
or
test
mov
popf
mov
sbbb
pop
lret
pop
xorl
xor
xor
fwait
inc
mov
sbb
outsb
cli
call
imul
cs
mov
andl
rcr
mov
mov
pop
inc
dec
xchg
cmp
jno
ficompl
ficompl
or
cmpb
icebp
sbb
and
cmpsb
rolb
mov
push
rolb
push
loopne
lahf
pop
cmp
ret
lea
or
pusha
out
movb
xorps
xchg
xchg
jle
in
mov
sbb
jecxz
popa
xchg
stos
push
push
roll
cmc
pop
sub
and
je
js
sbbl
xor
sub
ret
ficomps
sub
inc
je
mov
outsb
test
push
mov
mov
insb
lods
jb
sarl
push
pop
stos
jne
xchg
and
xchg
cmpl
cmp
sbb
cmp
mov
xchg
nop
mov
mov
xchg
icebp
ss
insl
mov
xor
outsl
int
xchg
or
xchg
repnz
ljmp
cmp
push
mov
sti
daa
repnz
xchg
sub
lea
outsl
scas
push
ret
push
push
pushf
mov
push
xchg
xor
xor
xchg
insl
jb
into
and
out
fucomp
dec
test
sti
pop
popa
xor
mov
ja
popf
aam
in
mov
loop
ficoml
xor
add
mov
or
pop
adc
loop
xchg
loop
cmp
jle
popf
push
enter
cltd
xor
mov
ja
pop
in
mov
xor
sahf
mov
inc
xchg
or
loope
out
dec
mov
push
stos
test
dec
push
scas
and
decb
lcall
aaa
dec
loopne
adc
jge
and
rcl
faddl
sbb
xchg
ficoml
mov
xor
ficoms
mov
clc
std
add
enter
mov
and
jp
mov
mov
sub
je
cld
fidivl
pushf
push
std
push
outsb
xchg
fdivl
push
dec
fwait
sub
dec
scas
testb
lea
lea
dec
pop
les
mov
cltd
xor
in
cmp
sbb
rcll
jnp
arpl
xor
jp
orl
sbb
add
add
addr16
push
adc
aaa
or
and
mov
fadd
dec
pop
or
mov
outsb
lds
das
xchg
and
movsb
andb
loope
jne
jo
inc
sti
inc
xor
aam
and
clc
movsl
pop
int
jg
sub
in
or
fistps
mov
sarl
lods
popa
sub
jne
ficoml
jb,pt
lods
pop
mov
jp
mov
jmp
mov
jae
cs
repz
leave
mov
js
lds
inc
ret
inc
scas
movsb
testb
mov
pop
jns
int
lock
cltd
add
xchg
in
pop
jbe
adc
push
int3
xorb
dec
scas
and
stos
addr16
repz
pop
sub
push
pop
mov
dec
push
mov
subb
jmp
out
jns
lret
in
ret
lods
pop
pop
xor
lods
aam
aaa
sbb
aas
adc
dec
rorb
outsl
add
sub
mov
push
das
mov
xor
push
test
pop
or
jmp
xor
dec
hlt
dec
pop
lahf
or
or
std
movsb
pop
jle,pn
cmp
dec
pop
fists
into
add
clc
hlt
dec
push
push
sbb
jge
or
lret
sub
xor
push
adc
in
mov
and
lock
mov
ss
mov
jb
fdivrl
inc
inc
mov
sbb
mov
xchg
mov
sub
cli
xchg
jmp
jmp
fldenv
iret
cs
xchg
or
in
mov
pop
sbbb
sub
popf
or
jbe
and
sbb
cmpsb
cmp
cmpsl
xlat
push
inc
jge
xchg
cmp
xchg
cwtl
xchg
or
mov
mov
in
mov
adc
xor
into
cld
mov
scas
mov
push
insb
xlat
stos
mov
ficompl
mov
pop
adc
sub
adc
or
xlat
sbb
mov
cmp
push
sbb
pusha
inc
fwait
and
xchg
jmp
cmp
in
sub
xchg
dec
int
cld
sbb
rol
adc
push
fidivl
mov
dec
popf
mov
inc
inc
xor
fists
inc
pop
ret
push
pop
ret
and
cltd
dec
xlat
enter
sbb
sbb
call
mov
pop
and
or
jne
fimull
fiadds
mov
mov
out
mull
popa
mov
mov
mov
loopne
pushf
lods
mov
push
fs
fisttps
mov
jle
aas
pop
adc
les
xor
push
out
inc
sbb
mov
jg
jge,pt
mov
rol
cltd
mov
pop
rcll
mov
data16
add
repz
xor
xchg
mov
cmpsb
jg
nop
fsubrl
mov
mov
testb
pop
imul
cli
sbb
sahf
test
in
cltd
pusha
sar
jno
mov
xchg
aam
in
add
pop
xchg
addr16
inc
fildll
ffreep
pop
stos
cmpsl
dec
xor
inc
jb
mov
mov
xor
pop
xor
lret
push
outsl
jmp
sbb
negb
jne
jnp
jo
lret
addr16
cmpsb
dec
xor
cmpb
fimull
mov
jae
inc
stos
shl
out
lahf
add
repnz
js
dec
and
mov
mov
jae
aam
adc
fmul
shll
cwtl
or
xchg
sub
fwait
sub
add
push
sti
ljmp
loope
mov
dec
xor
jp
or
test
mov
cmc
pop
cmpsl
xor
xor
pushf
mov
hlt
xchg
pop
xchg
jmp
adc
ss
xor
jg
aam
sbb
out
aam
imul
xchg
into
repnz
dec
in
out
aad
adc
or
lahf
jl
push
std
fmull
or
popf
mov
std
inc
sbb
inc
jbe
sarl
pop
adc
xlat
add
loopne
mov
test
xchg
jge
xor
pop
lahf
icebp
cmp
pop
lds
pop
inc
add
fsubr
imul
mov
mov
test
or
add
lret
jno
sub
sub
mov
xor
dec
sub
gs
push
stos
cmpsl
cmp
popf
mov
es
shrl
cwtl
sarl
push
aaa
shlb
shll
add
xor
fadds
mov
sub
test
push
std
ja
add
mov
out
test
std
inc
jnp
cltd
test
push
sahf
or
test
std
jnp
push
inc
pop
stc
andl
mov
cmp
xchg
jb
je
pop
fs
leave
push
jne
enter
es
test
cld
enter
xchg
inc
and
ffreep
lds
aas
imul
dec
mov
sbb
packuswb
cmp
push
mov
mov
out
mov
mov
dec
je
mov
stos
jp
mov
sbb
jbe
dec
mov
cmp
fiadds
sbb
dec
dec
fs
pop
xor
sub
aaa
dec
sbb
fsts
std
xor
jae
cmp
mov
rolb
and
xor
adc
cli
loop
stc
push
push
add
outsl
aaa
fidivs
jo
jo
inc
pushf
dec
lahf
jmp
sbb
or
cmp
cmpb
mov
gs
pop
xchg
arpl
and
mov
fs
cli
mov
adc
fbld
push
sub
ds
outsl
or
mov
xchg
pop
out
xor
int
jg
icebp
fnsave
jnp
das
push
pop
sbb
insb
dec
neg
fdivl
xchg
dec
push
vmovsldup
dec
jnp
push
imul
jo
popa
movb
mov
jecxz
movntq
push
popf
and
shll
fdivl
dec
xlat
and
push
jns
push
pop
mov
data16
mov
add
xadd
mov
pop
cli
mov
sbb
adc
insl
fsts
add
mov
leave
jne
test
sub
sahf
sub
pop
adc
insb
es
ss
pop
xor
icebp
in
pop
sbb
clc
adc
xor
push
ljmp
popa
add
xchg
cmpsl
xchg
cmp
or
xchg
xor
or
add
and
stos
pop
or
aas
mov
cmp
out
inc
inc
cmp
push
mov
xor
roll
js
sar
out
inc
mov
cltd
std
sbb
push
ss
hlt
jns
mov
or
pop
insl
xor
ror
add
gs
xor
push
inc
dec
and
stc
mov
pop
inc
jmp
or
mov
push
test
pop
sub
adc
push
stc
push
push
test
fdivrl
cmpsl
js
add
stos
pop
clc
cli
icebp
push
js
inc
jb
xchg
fadds
cmc
push
stos
cmp
aam
adc
div
cmp
fs
int3
sub
push
stc
dec
push
les
sub
push
cmp
ret
push
pop
mov
test
ret
fcomps
and
shll
in
nop
sbb
push
stos
mov
push
mov
mov
sub
and
lcall
xchg
ljmp
mov
insl
pop
push
mov
pop
fsub
mov
push
push
adc
loop
in
push
jbe
inc
int3
mov
sub
pop
ret
pop
stos
jbe
fstp
adc
jle
in
cmp
mov
xchg
pop
loop
dec
clc
testl
ror
mov
mov
or
or
cmp
xlat
mov
xchg
dec
dec
pop
add
sbbl
stos
cmc
cmp
repz
scas
sub
sub
neg
inc
push
mov
jne
push
pusha
inc
dec
add
loop
lea
add
xorb
icebp
sbb
call
push
push
xlat
and
dec
sbb
xchg
jbe
xor
sti
fcomp
es
push
cmp
mov
fsts
push
jnp
xchg
inc
out
aas
mov
inc
insl
xchg
inc
lds
and
fs
in
or
rcll
fwait
dec
fwait
repz
fcom
in
mov
arpl
pop
xor
and
push
in
dec
add
adc
pushf
mov
jns
adc
cmp
into
jo
lret
cs
cmp
out
je
xchg
fidivrs
ret
or
inc
dec
and
add
and
popf
and
jb
jge
or
xor
loopne
xchg
jle
or
mov
clc
add
shrl
rolb
das
mov
mov
cmc
add
dec
je
jecxz
jno
call
ljmp
push
loope
cmp
fbld
mov
jo
out
mov
mov
adc
fs
arpl
inc
lret
fistpl
cld
rcll
push
mov
or
dec
mov
icebp
sahf
push
xor
sub
in
or
xchg
and
lea
mov
push
shr
into
insl
bound
mov
enter
cmpsl
lret
inc
dec
cs
das
cli
icebp
push
mov
cli
pop
cs
es
inc
mov
sub
and
pop
in
push
test
in
cmp
ljmp
rcrl
mov
sub
adc
inc
pop
or
mov
mov
sbb
nop
dec
lret
xor
lret
pusha
dec
insl
lds
test
xchg
xor
jb
out
cmp
lahf
imul
and
cmpsl
sarl
mov
in
push
push
loop
aad
xchg
adc
sbb
and
out
cmc
jae
mov
rol
cmp
jbe
aad
mov
sub
pop
xchg
jne
ret
sub
cmc
jbe
in
out
mov
imul
jae
jmp
cli
hlt
int3
popf
add
shrb
and
adc
out
push
sub
sbb
xchg
aam
mov
repz
pop
sub
es
sub
or
call
int
loopne
jp
jl
adc
mov
cmp
xchg
cmpsl
mov
inc
out
movsl
mov
outsb
popf
push
adc
ret
mov
dec
mov
jp
mov
repz
push
cmp
fadds
cmpsb
push
lods
test
test
in
mull
xchg
cmovl
into
or
lret
loopne
pop
dec
jl
inc
pop
aas
rcll
jne
dec
inc
out
std
cmc
fucomp
xchg
pop
jmp
xchg
aam
loopne
int3
xlat
int3
inc
xchg
jns
push
mov
popa
popa
fnsave
cs
sahf
pop
inc
pop
ss
lret
sub
imul
xchg
sub
pop
loopne
or
roll
stos
subl
subl
call
test
dec
loope
jmp
push
lahf
int
push
mov
sbb
or
test
pop
fists
ss
push
out
mov
mov
rcrb
inc
lock
mov
pop
push
inc
jl
jg
xor
test
dec
dec
aad
dec
inc
sahf
in
int3
push
sbb
insl
xor
pusha
adc
lock
jnp
pop
mov
mov
or
sub
out
dec
mov
aaa
cmp
lahf
and
mov
je
aad
outsb
push
mov
enter
add
pop
mov
adc
stc
fnstsw
xor
out
cmp
dec
push
imul
sub
into
cmp
out
sti
pusha
into
push
scas
cmpsl
lret
pop
out
pop
adc
aam
sahf
test
inc
inc
mov
rcrb
mov
sub
pushf
push
xor
and
mov
mov
es
jecxz
jecxz
fwait
sub
jg
and
or
fildl
dec
dec
loope
pop
xchg
add
arpl
adc
bswap
push
mov
lahf
lret
cltd
negb
push
mov
fmul
loop
mov
stc
test
add
movsb
shrb
mov
mov
iret
iret
sub
sbb
ret
xor
adc
or
mov
push
mov
ja
xchg
pop
mov
and
dec
mov
outsl
jmp
subl
dec
xchg
fdivrl
and
fisubrs
out
cmpsl
jecxz
jno
jmp
aas
lret
mov
fimull
addr16
mulb
pop
or
in
adc
lcall
arpl
lret
scas
xchg
pop
adc
sub
in
push
scas
enter
clc
or
mov
mov
fsubrs
push
jle
mov
pop
adc
aam
and
add
inc
xor
or
mov
cld
inc
jo
in
fcmove
pushf
pop
sub
dec
sbb
push
pusha
cs
test
icebp
dec
xor
jl
arpl
ss
inc
bound
daa
add
les
leave
in
fbstp
sbb
jmp
test
jecxz
cmp
pop
sub
jmp
shlb
cmp
push
cltd
mov
mov
pop
sub
hlt
stc
sub
sub
test
js
adc
pop
movsb
push
jns
ss
adc
cs
jnp
insb
xchg
scas
mov
mov
andl
addr16
fcoml
outsb
loop
mov
filds
adc
push
xor
andl
xchg
pop
or
xlat
xchg
sbb
je
clc
jo
pop
int
or
push
xor
outsl
out
enter
sbb
sub
pushf
leave
fisttpll
jns
mov
enter
ds
mov
sub
lahf
xchg
enter
sbb
adc
inc
and
inc
inc
xchg
dec
test
jnp
sahf
cmc
inc
xor
mov
pop
push
dec
cld
xchg
cs
stos
fidivrl
jp
push
inc
les
daa
lock
push
or
add
sub
and
jnp
and
mov
rcll
mov
add
cs
sbb
je
sahf
lods
aad
sub
add
mov
pop
test
push
repnz
xor
jbe
push
mov
or
fucomp
lret
test
jl
mov
and
test
subb
or
push
cmpl
adc
nop
cmp
out
mov
arpl
je
lds
imul
loop
push
in
cmp
or
stc
les
jo
movsl
inc
into
sbb
sub
aas
repnz
xor
out
and
sub
push
insb
je
jns
inc
mov
outsb
jne
push
test
jae
insb
and
cmp
insb
and
pop
add
leave
ficompl
test
cmp
clc
push
aaa
inc
movsl
test
fimull
pop
adc
cs
loop
push
pop
es
gs
stos
lret
mov
or
ud2
jmp
adc
rclb
cmc
and
shll
ret
sub
in
imul
bound
fistps
mov
add
adcb
xchg
push
lret
insb
mov
and
lods
shll
and
fistps
push
loopne
cmp
jo
sbb
rol
ret
pop
mov
cmc
adc
and
inc
sbb
leave
inc
cwtl
adc
mov
add
sbb
add
out
mov
push
call
or
in
dec
jbe
or
xchg
or
jp
stc
and
jne
cltd
inc
jmp
jmp
jns
stos
cmp
cwtl
gs
adc
jg
stc
and
xchg
movsb
aad
movsb
xorl
mov
fstps
ret
mov
mov
sbb
cmp
jae
push
and
mov
je
mov
popa
inc
pop
pusha
js
insb
jle
adc
adc
test
push
sub
sarl
dec
jo
xchg
jl
push
add
bnd
pop
push
std
iret
ja
mov
and
pop
pop
decl
jl
sub
inc
inc
push
jecxz
xchg
insb
add
and
and
mov
imul
pusha
push
imull
push
inc
andl
aas
sub
cmp
repz
fsubl
cmc
imul
sub
jl
pop
sarb
testl
sbb
sub
ret
push
in
mov
or
fisubrs
mov
adc
shr
inc
jmp
jmp
iret
insl
lret
xchg
sub
jmp
mov
out
lcall
scas
mov
jmp
xor
cmp
pop
push
add
adcl
scas
ret
or
out
int3
adc
jmp
jp
xchg
rcll
xchg
aaa
push
call
mov
inc
fwait
dec
mov
jno
jne
mov
jno
inc
add
out
fmull
clc
das
vmread
push
test
and
dec
popa
in
ds
mov
fadds
xchg
sarl
mov
clc
out
jecxz
xchg
inc
les
xchg
test
cmp
sbb
aaa
and
xchg
iret
jecxz
xor
rorl
pop
ja
mov
push
sub
ljmp
lock
adc
mov
xchg
iret
mov
out
aas
pop
ds
mov
or
add
xor
mov
and
ljmp
sub
ret
cmp
aaa
sahf
jle
jl
insl
inc
adc
mov
addr16
dec
xor
imul
sbb
sub
imul
dec
pushf
push
stos
xor
jp
mov
xor
popa
out
and
cmp
xchg
cld
pop
jnp
fidivl
rcr
pusha
popa
insl
adc
and
xor
jl
dec
in
movsl
lcall
pop
ss
fucom
pop
repnz
mov
add
divl
inc
pop
jmp
lret
xchg
push
test
sbb
shl
inc
push
xor
pusha
pushl
mov
mov
push
sbb
loopne
push
leave
or
lds
xchg
jmp
repz
dec
clc
mov
mov
jecxz
cwtl
mov
pop
push
pop
cmpsl
sub
movsb
jns
and
rol
fldenv
mov
and
scas
mov
iret
xchg
mov
sti
mov
pusha
aad
repz
or
sub
mov
clc
in
sbb
xchg
mov
cmp
add
rolb
add
lea
inc
js
loope
sbb
cmp
notl
aad
daa
and
cmp
mov
inc
fwait
mov
imul
sub
pop
dec
mov
clc
cmp
xor
scas
addr16
pop
or
push
jnp
mov
dec
and
in
jb
cltd
jg
sbb
fnsave
sub
and
sbb
dec
cld
lods
cmpsb
mov
or
push
cmp
xor
aam
int3
cwtl
pop
inc
inc
sbb
or
xor
scas
or
pusha
cmp
leave
inc
loop
cmpl
fistpl
aad
shrb
push
sbb
jl
daa
inc
jae
repz
sub
loopne
pop
out
das
xor
xlat
hlt
iret
xchg
mov
insb
or
into
jl
mov
dec
cmp
lret
dec
gs
cmp
lahf
scas
cmp
neg
mov
jle
pop
lret
sar
popf
insl
sub
mov
adc
fwait
orb
inc
rclb
sub
cmpsl
xchg
imul
jl
sarb
mov
out
xor
lea
dec
cmp
in
xchg
lret
jg
dec
xchg
mov
lret
lods
fs
enter
mov
jg
mov
xchg
popf
xchg
popf
and
aam
pop
popa
lcall
mov
sbb
movsb
out
add
cmp
movsb
and
lahf
andb
push
data16
cmp
js
xor
inc
jno
int3
pop
push
push
sub
addr16
add
popw
xor
inc
cvtpi2ps
mov
rcrl
je
movsb
inc
cmpsb
and
rcll
cmpsb
sub
test
cltd
sub
mov
pop
stc
mov
insl
xor
imul
pop
outsl
pop
fdivs
mov
xlat
cmpsl
inc
adc
lahf
movb
cmp
out
push
sub
ret
js
sbbb
push
ds
jmp
dec
js
mov
iret
nop
pop
mov
fwait
idivl
pop
cs
jno
or
and
adcl
test
fnstcw
cli
imul
push
or
cmp
out
jno
gs
adc
or
sbb
push
pop
aaa
int
scas
adc
sub
clc
lods
loop
js
loop
adc
ret
aam
inc
push
cmp
repnz
into
sub
cmp
pushf
dec
sbb
dec
sbb
sbb
dec
gs
pop
inc
cli
nop
xchg
imul
inc
or
pop
sbb
cmpsb
push
data16
in
addr16
dec
inc
pop
push
xor
mull
test
jb
gs
int3
mov
mov
inc
mov
sub
insl
xchg
jne
lret
inc
jnp
scas
cmp
xchg
lahf
loop
in
addr16
daa
mov
xchg
pop
outsb
dec
add
sbb
leave
aam
mov
mov
fisubl
inc
inc
fistpll
sarb
and
and
dec
push
aas
fisubl
mov
pop
cwtl
iret
lret
adc
or
push
mov
fcoml
pop
fst
xor
mov
mov
push
call
aaa
iret
or
adcl
jmp
jb
and
out
lret
in
mov
jl
movsl
lea
lret
fucomp
sbb
add
dec
iret
js,pn
add
push
add
lfs
sub
pop
insl
add
hlt
cltd
ret
test
xchg
push
xor
ret
jmp
xchg
pop
int
sbb
icebp
cmp
mov
pop
push
xlat
push
ja
ret
inc
add
sbb
dec
hlt
adc
mov
movsl
adc
cld
es
lret
pop
inc
ds
inc
notl
and
sbb
je
mov
je
adc
mov
stc
sbb
pop
inc
jmp
jp
movsb
xchg
adc
idivb
xchg
hlt
push
dec
in
xchg
sub
rorb
inc
jnp
shl
jo
lret
scas
inc
fildll
xor
and
ja
sbb
adc
gs
popf
push
pop
lods
xor
push
popa
jb
push
add
lods
pop
sti
int3
inc
cli
jno
arpl
mov
jge
sbb
xchg
push
mov
adc
lcall
mov
insb
pop
mov
popf
mov
loop
fsubr
xorl
mov
das
movsb
mov
lcall
fs
es
xor
mov
and
sub
mov
cmc
jne
xchg
mov
jle
mov
xchg
sub
enter
aam
clc
lods
mov
hlt
cmp
xor
mov
mov
cmp
mov
push
daa
mov
je
aad
jg
insb
xchg
sbb
ljmp
inc
int3
in
xor
cld
jmp
in
test
sti
adc
aaa
xchg
mov
jb
adc
in
and
dec
mov
adc
fsubs
jmp
insb
ja
cltd
xor
jecxz
or
ja
inc
pop
push
out
mov
pushf
test
scas
sbb
call
ss
add
in
clc
xchg
jnp
xor
jo,pt
mov
xchg
je
jne
lea
stc
ret
popf
pop
fsubrs
push
pop
movsb
ja
push
shll
push
lods
cli
cltd
mov
inc
or
xchg
add
push
test
add
push
jmp
cmp
out
or
mov
mov
aad
mov
out
int3
push
cmp
fstl
push
xchg
fucomip
push
loop
xor
nop
daa
data16
adc
jg
ljmp
in
pop
add
ja
push
and
sub
jge
push
inc
lods
cmp
ja
mov
imul
cmpsl
pop
mov
xchg
mov
dec
jnp
or
scas
std
fiaddl
bound
ja
js
test
hlt
mov
jl
lahf
movsl
iret
nop
and
inc
adc
cltd
in
loopne
outsb
push
and
mov
cltd
mov
lods
sbb
cltd
sub
rcr
push
and
cmp
xchg
clc
add
cli
jle
hlt
mov
sub
mov
daa
mov
je
enter
mov
push
aas
outsb
jp
mov
sbb
mov
dec
cld
mov
inc
out
and
jmp
dec
scas
cmp
fimuls
xchg
pop
cltd
cli
cmc
adc
adc
adc
out
push
gs
cld
pushf
into
dec
fs
xchg
jge
repnz
mov
data16
cmp
sbb
push
sbb
jae
das
sbb
and
fs
loop
push
xor
or
repnz
jecxz
jo
cmpsl
das
dec
xchg
insb
hlt
test
xor
lret
or
stos
jmp
iret
addb
into
loop
sbb
mov
fldenv
mov
aaa
loopne
pop
loopne
test
add
enter
leave
push
popa
push
xor
icebp
dec
insb
bound
packssdw
jge
mov
ficoms
out
jmp
outsl
sub
arpl
mov
dec
out
sbb
cld
and
jle
iret
enter
decb
ror
xor
hlt
pop
out
or
cld
mul
stos
sbb
dec
mov
into
fwait
js
subb
lods
mov
fcomp
cmpsl
pop
ret
mov
test
sub
add
inc
xor
movsl
pop
pop
cmpsb
fcoms
xchg
mov
in
jo
adc
mov
lods
stos
jmp
pop
cmpsl
xchg
dec
ja
inc
rcrb
sbb
xor
frstor
mov
ja
xchg
inc
jbe
sbb
cli
xchg
pop
aaa
inc
jno
hlt
xchg
rorl
cwtl
jecxz
bound
subl
subl
jmpw
ja
in
or
scas
xchg
mov
gs
pop
cmp
mov
dec
add
cmp
xor
inc
int3
test
out
cmp
mov
movzbl
sbb
mov
test
jae
ds
mov
and
pop
sbb
and
in
push
xchg
inc
mov
xchg
inc
bound
clc
pop
cmp
sub
fistpll
sub
test
int3
leave
xor
bound
incl
imul
ret
xchg
arpl
xchg
sub
push
pop
mov
mov
pop
sahf
push
out
loope
in
lock
inc
mov
loope
es
les
fiaddl
addr16
mov
movsb
dec
insl
sbb
xchg
sub
mov
sahf
jp
mov
js
mov
and
scas
pop
test
xor
addr16
fisttpll
mul
int
xchg
xor
jns
sahf
std
mov
in
hlt
lcall
fwait
cmp
and
xchg
fildll
scas
icebp
mov
test
pop
adc
pop
imul
test
inc
imul
pop
das
add
or
xchg
icebp
and
push
popa
daa
and
cmpsb
insl
push
jb
or
imul
jmp
or
icebp
clc
sub
pop
push
push
cmpsl
push
xor
test
fistpl
push
xor
sahf
sbb
and
popa
jle
aas
repz
or
inc
nop
shr
mov
test
mov
dec
lods
push
pop
jmp
jno
into
test
mov
pop
xchg
fwait
push
xchg
sbb
arpl
lret
icebp
xchg
push
stc
lds
pop
adc
cld
arpl
jnp
inc
fwait
inc
sbb
mov
cmp
outsb
shll
xchg
leave
outsl
icebp
pop
jae
push
push
or
fs
call
fstl
mov
add
repz
stos
mov
inc
leave
cmp
faddl
fsubr
daa
xchg
subl
leave
mov
cli
add
stc
vmovups
shr
stc
outsl
dec
ja
or
mov
xor
pop
mov
sub
repz
enter
push
pop
xchg
and
fs
adc
add
aad
sbb
ljmp
enter
jp
hlt
sbb
fisubrl
fs
mov
shll
pusha
loop
lret
aas
cmp
icebp
pop
outsb
outsl
pop
daa
call
enter
dec
mov
pop
in
dec
orl
push
cmpsl
nop
jb
jne
ss
dec
pop
mov
inc
adc
cmp
mov
jg
jns
lahf
jns
adc
cld
out
hlt
xor
add
xchg
sbb
cld
dec
or
and
out
popf
adc
xchg
bound
nop
pop
push
xchg
cmp
arpl
insl
repz
enter
je
and
out
repnz
sbb
or
sub
sbb
stos
in
test
cmpsb
roll
dec
jge
inc
push
in
jg
mov
daa
push
shll
lea
or
dec
lock
sbb
rcll
and
addb
shl
add
sbb
test
xor
push
icebp
jmp
rcrl
imul
fdivl
arpl
movsl
loope
loop
in
in
jbe
test
out
add
les
mov
push
scas
mov
pop
ret
xchg
inc
add
xorb
lea
adcl
gs
mov
std
dec
lock
out
xchg
faddl
dec
loop
pop
out
sub
cmp
jl
into
dec
imul
xchg
adc
jae
loope
jo
push
andb
out
cli
sub
xchg
push
rolb
popa
fst
ret
mul
inc
movsl
aas
or
jp
inc
push
insl
mov
mov
inc
lds
out
hlt
cmp
and
popa
dec
aaa
or
mov
mov
jg
xchg
mov
jo
cmc
pop
int
jp
iret
or
mov
test
mov
adc
cld
jo
js
xchg
clc
icebp
xorb
loope
mov
sub
js
mov
sub
adc
xor
ffreep
divl
mov
fdivrs
int
xchg
or
cmp
es
mov
lods
push
push
adc
xchg
inc
pop
iret
cmc
sbb
push
outsl
mul
je
sbb
add
mov
mov
daa
daa
loop
inc
stc
mov
pop
insb
adc
dec
cltd
and
ret
xchg
pop
nop
jns
sbb
ss
fimuls
jge
jmp
stc
inc
pop
jo
paddw
clc
sbb
leave
push
xor
push
mov
cmp
xchg
mov
inc
mov
push
negl
inc
movsb
lahf
imul
loopne
xchg
sbb
fmuls
imul
or
mov
or
and
test
xchg
cmp
pop
test
sysexit
jo
and
pop
pop
es
adc
sub
inc
dec
cmp
adc
enter
mov
mov
psrlw
or
jecxz
or
test
mov
das
push
je
mov
xchg
add
lock
adc
push
sar
dec
mov
in
iret
mov
cmp
xchg
jl
fnstsw
xor
mov
inc
mov
ret
gs
mov
nop
sub
pushf
mov
js
push
sub
ret
fisubl
lahf
mov
pop
sub
xor
adc
or
dec
mov
test
inc
pushf
inc
xchg
jmp
mov
fnstcw
sbb
inc
ds
ret
sbb
jno
jecxz
sarl
jae
xor
add
jae
into
xchg
popa
pop
outsl
lret
outsl
pop
mov
popa
add
pop
rclb
mov
stos
addb
ljmp
fistps
and
adc
dec
sub
cmc
pop
sbbb
iret
sbb
js
sub
xchg
in
jmp
mov
or
mov
insl
lds
test
sti
mov
jge
inc
xor
adc
adcl
rclb
add
dec
push
pop
jmp
sub
ds
jo
dec
mov
mov
and
mulb
mov
mov
ja
repz
ret
fsubl
pushl
out
push
cmc
dec
fisttps
jo
lret
cmovs
and
les
add
mov
jbe
es
vandnps
mov
inc
lock
adc
jne
lds
sub
in
jne
pop
inc
lcall
xorb
or
push
in
pushf
pop
push
cmp
mov
mov
mov
push
fnsave
mov
push
lret
into
add
loopne
addr16
mov
int3
mov
enter
xchg
push
lods
add
leave
or
xor
mov
mov
cmpsb
mov
mov
outsb
xor
out
test
and
xor
inc
fidivrl
les
fidivs
xor
mov
cmpsl
mov
cmp
ja
cmp
popa
mov
jae
repz
xchg
roll
cmpsb
mov
xor
inc
push
sahf
push
cmc
popf
fcompl
dec
in
nop
push
shlb
xchg
dec
mov
mov
push
jle
pop
or
ret
clc
lahf
or
scas
cmpsl
mov
xchg
adc
cs
addr16
push
idivb
outsb
or
mov
cmp
and
fwait
iret
cs
das
iret
mov
pop
frstor
iret
into
dec
or
mov
and
stos
dec
subl
movsb
and
or
dec
cltd
cmc
jae
out
sahf
lret
bswap
arpl
je
sub
out
mov
out
adc
jmp
aaa
mov
jbe
movsl
mov
mov
mov
adc
mov
push
pop
or
pmulhuw
add
cs
xor
xor
sub
mov
gs
movsb
int
testb
mov
adc
fwait
rolb
das
push
mov
shrl
or
outsl
sub
mov
sahf
push
or
addr16
enter
jns
inc
mov
push
mov
lods
jg
pushf
movsb
mov
add
add
push
pop
dec
js
loopne
loop
sub
les
mov
jo
sbb
imul
cmp
jb
movsl
lods
or
cmp
in
mov
xchg
add
mov
mov
pop
jne
into
push
int
and
sbb
push
mov
aas
adc
repnz
inc
dec
outsb
dec
cmpsb
or
jbe
loop
mov
mov
cmp
mov
xchg
loopne
xor
xchg
rcll
nop
clc
mulb
dec
pop
mov
push
pusha
or
cmpsb
ljmp
inc
shl
es
or
inc
mov
repnz
mov
shrl
loope
pusha
in
std
dec
icebp
dec
fldenv
inc
inc
and
add
in
add
out
movsl
xor
add
or
cmpsl
sbb
pop
dec
push
sbb
leave
cmp
fdivrs
add
clc
mov
cmpsb
or
pop
push
push
add
mov
incl
cmpsl
fsts
data16
mov
and
test
mov
mov
int
pop
imul
inc
xorl
lods
movl
and
mov
leave
enter
sbb
dec
aas
push
clc
xorb
test
push
push
sbb
sbb
adc
cld
xchg
jp
faddl
xlat
inc
mov
cmpsl
aam
and
cld
mov
cmp
andl
cli
popf
sahf
ds
lods
movsl
cmpb
insb
add
cmp
sbb
aam
mov
mov
cmp
or
pushf
and
fwait
decb
sahf
not
sbb
andl
pop
sbb
pop
mov
out
dec
jecxz
mov
bound
aad
sbb
incl
xlat
popa
daa
pop
xchg
sbb
cmp
pusha
sti
getsec
pop
aad
aad
adc
dec
sbb
in
push
into
push
dec
and
aas
stc
or
mov
pushf
fstpl
repnz
cmpsl
sahf
or
sbb
push
push
or
insb
gs
inc
mov
xchg
sbb
outsb
xor
sub
xor
sbb
inc
push
push
mov
pop
addr16
xchg
ret
inc
cmp
pusha
jge
mov
pop
jnp
jnp
mov
fwait
jns
adc
pop
std
cmp
fs
add
insb
jne
dec
in
imul
enter
iret
xor
addb
insb
insb
out
xor
dec
out
push
movsb
jbe
inc
or
test
push
fwait
cmpsb
lret
in
lcall
pop
add
shll
js
adc
fs
rclb
pop
add
sahf
inc
movb
je
jb
in
je
push
lea
imul
mov
push
xchg
inc
adc
dec
shll
incl
jge
aad
mov
xlat
movsb
add
cmp
lds
leave
mov
jecxz
mov
mov
ret
add
stos
push
xchg
popf
mov
lods
jo
mov
jmp
ds
dec
sbb
add
mov
xor
cmp
xor
mov
rolb
push
sbb
cwtl
add
xor
pop
in
add
mov
mov
jb
daa
dec
rorb
pop
ss
scas
call
push
sbb
cld
out
xchg
test
inc
lcall
xor
pop
mov
loopne
fcoml
mov
jmp
jns
adc
iret
mov
xchg
jns
loop
push
into
xchg
push
adc
sub
xor
cli
cmpsb
add
mov
rorl
aas
jae
xchg
sbb
add
pop
cs
dec
mov
xchg
cvtpi2ps
inc
sub
pushf
mov
in
mov
out
sub
push
cmc
sbb
fimuls
outsl
dec
jns
repz
sub
push
test
in
mov
push
jnp,pn
or
xchg
movb
icebp
sub
sub
add
ds
xchg
cmp
sahf
adc
cwtl
pop
mov
mov
es
pop
gs
aam
and
or
or
push
xor
xchg
push
dec
jns
push
mov
insb
adc
test
repnz
xor
push
xchg
dec
xor
jl
out
jecxz
sti
dec
je
sarl
hlt
cmp
adc
cmp
pop
movsl
mov
jb
mov
adc
xchg
in
bnd
sub
jno
fwait
or
adc
das
ja
es
jne
minps
and
jnp
iret
mov
mov
aad
mov
lods
mov
pushl
cld
xchg
fs
out
test
loopne
cli
adc
clc
inc
cltd
mov
or
jb
rclb
imul
adc
push
cli
stos
outsl
dec
cmpsb
scas
push
sub
enter
inc
adc
push
or
add
test
shll
arpl
push
out
push
sahf
adc
sbbb
mov
test
pop
mov
mov
dec
add
ss
pusha
inc
scas
push
and
jmp
lods
das
mov
mov
push
dec
fistps
pop
push
xorb
daa
and
fsubl
icebp
lds
or
mov
dec
mov
lcall
je
mov
fcmovnbe
cmp
pop
jae
ret
add
inc
jne
loopne
push
pop
pop
call
jbe
into
call
popa
movsl
popf
enter
jae
xchg
sbb
mov
cmpsl
adc
insl
jmp
lea
lods
je
ljmp
fldl
mov
jmp
and
xchg
andb
bound
addr16
js
adc
js
push
sub
xor
insb
lret
nop
rclb
ret
xor
dec
sbbl
in
pushf
rclb
stos
arpl
out
movsb
xor
pusha
in
cmp
cmp
sub
sbb
mov
cmpsl
push
mov
or
dec
test
nop
adc
xlat
fnstsw
fists
rclb
jecxz
xchg
cmpsl
mov
pop
mov
pushw
vcvtpd2ps
or
mov
mov
data16
insb
push
sub
ror
xchg
sahf
jb
sti
jmp
out
insb
sub
mov
out
cs
and
imul
insl
jg
jecxz
mov
sub
mov
insb
xor
fsubrs
repnz
test
mov
in
push
sbb
cmp
loopne
xor
or
pusha
stos
and
dec
mov
repz
sub
dec
jp
fwait
dec
xchg
jle
sub
dec
add
jne
xchg
das
sbb
mov
lock
adc
rclb
call
adc
push
adc
repz
sbb
iret
push
ds
call
jmp
mov
and
outsl
xor
lock
shrl
push
xchg
xchg
mov
dec
xchg
shr
sbb
pop
push
fildll
lret
fcoml
cli
mov
cmp
sub
jns
inc
jle
adc
and
adc
sarb
jge
loope
sub
dec
adc
stos
push
data16
xor
in
xchg
mov
das
scas
jmp
push
loope
sub
ja
aaa
push
clc
jl
lock
stc
mov
jl
sub
cmp
sbb
push
sub
pop
pop
jb
fildll
clc
inc
mov
mov
in
hlt
and
mov
test
sbb
cmp
ret
adc
hlt
pop
dec
cmp
js
dec
inc
mov
out
xor
and
cmp
and
repnz
mov
sub
sbb
fwait
shlb
push
shlb
inc
hlt
out
push
mov
leave
add
cs
mov
loopne
add
push
xchg
cli
outsb
loop
test
addr16
jecxz
jnp
daa
xchg
inc
mov
addr16
cwtl
mov
push
popf
imul
and
insb
gs
inc
test
test
shr
jbe
push
dec
imul
mov
mov
push
mov
aas
and
insb
push
andb
sbbl
push
fwait
arpl
fs
cmp
in
shr
cwtl
jle
lea
xorb
insl
mov
jecxz
aam
xchg
and
leave
inc
movsb
and
call
addr16
and
jg
push
push
sbb
rorb
mov
fcompl
cwtd
out
loopne
ror
test
orb
jg
lahf
pop
call
push
pop
clc
imulb
or
xor
inc
sub
in
sti
outsb
mov
arpl
inc
pop
mov
xor
add
inc
stc
pusha
inc
sub
andb
aaa
jne
fnstcw
pop
ret
dec
jne
aad
in
push
iret
pusha
jne
and
jecxz
mov
dec
dec
mov
cltd
pop
mov
mov
mov
mov
xchg
sub
mov
out
int
lock
in
stos
push
sub
and
or
lock
aaa
into
pop
imul
cmp
push
xchg
aad
dec
insl
push
cmpsb
and
mov
shr
inc
cltd
push
cmp
into
lahf
fidivrl
mov
pop
mov
pop
xchg
add
leave
loop
stos
cmp
ret
je
int
flds
aad
jb
cld
sbb
fsubrl
es
ret
lea
mov
mov
sub
push
push
pop
lock
imul
pop
dec
call
and
mov
insl
hlt
jno
ds
push
mov
push
adc
out
adc
or
outsl
subb
cmp
and
dec
scas
jne
lret
pop
out
pop
sbb
out
sbb
cmc
xchg
mov
pop
js
jmp
or
cmp
adc
loop
mov
mov
sbb
mov
dec
daa
mov
cmpsl
mov
jl
std
and
fldcw
dec
dec
push
jnp
test
jge
fwait
repz
in
or
fldenv
es
icebp
popf
xchg
lods
or
xchg
call
jne
fdivs
push
mov
outsb
jecxz
ss
sti
mov
mov
ficoml
push
lock
pushf
dec
lahf
mov
xchg
insb
and
cmp
fs
insb
xchg
inc
lcall
push
fisubl
lahf
cmp
dec
mov
xchg
pop
cwtl
jge
xchg
fcoms
jg
or
dec
mov
aam
dec
push
clc
lcall
sub
inc
and
insb
push
xchg
adc
fnstsw
fs
inc
repz
sahf
stos
fwait
cmp
jp,pn
xor
subb
add
mov
mov
in
mov
push
xchg
cmp
dec
aaa
std
jne
pop
or
inc
rorl
in
push
xor
adc
fsubrp
xor
xchg
cld
lahf
imul
add
adc
clc
xchg
shl
add
loope
jnp
push
in
pushf
xchg
jb
movsl
dec
les
push
mov
outsl
xchg
or
out
lret
sub
je
cmp
shl
cld
loope
pop
cmp
mov
jns
adcl
xlat
mov
xlat
shlb
add
mov
in
lods
sbb
jmp
jnp
mov
cli
xchg
call
dec
and
push
lds
lcall
add
or
fldl
pop
clc
inc
idivl
mov
xchg
push
inc
in
sub
mov
pop
sub
xor
ja
adc
mov
pop
mov
pop
push
cli
jae
popa
add
mov
repnz
iret
movsl
fldcw
and
in
push
mov
popa
loopne
xlat
dec
xchg
enter
outsb
lret
sbb
add
sub
mov
mov
loopne
outsl
sbb
jnp
jl
addr16
mov
imul
pop
inc
popa
adc
lcall
std
sti
pop
cli
cmp
mov
xlat
mov
ss
add
or
push
repnz
movb
and
ss
or
push
lods
sti
push
or
add
ret
cmp
fwait
into
arpl
cmp
fcmovu
jbe
pop
or
jnp
repz
jge
push
ljmp
sbb
push
mov
jg
movsl
mov
sub
arpl
mov
sub
or
gs
enter
lods
sub
fucomip
jne
ss
inc
xor
movsl
and
xlat
pop
lods
lods
adc
lret
jb
mov
push
inc
add
jb
test
clc
ret
sub
pop
inc
mov
pop
xchg
push
pop
xchg
dec
je
test
dec
sbb
mov
lea
push
leave
bound
lods
pop
hlt
sbb
inc
adc
mov
ja
pop
icebp
gs
roll
pop
mov
lock
cli
fmuls
popf
test
dec
pusha
inc
dec
scas
mov
int3
cmp
push
xor
mov
mov
xchg
daa
and
sahf
sbb
fdivp
sbb
insl
loope
lods
xchg
cmp
dec
lret
js
clc
mov
jg
mov
fyl2xp1
adc
add
stc
je
aam
cmpb
adc
jecxz
ljmp
inc
add
jl
mov
pop
push
les
int3
ficoms
adc
pop
test
sub
xor
call
rorb
mov
xchg
jb
xchg
lea
sbb
out
hlt
add
fldl
sbb
int
test
mov
pop
mov
mov
xor
push
scas
or
fldt
jno
pop
insb
mov
imul
xchg
sub
push
mov
fisubrs
sub
cmp
rorl
xor
lock
xor
lods
out
sbb
adc
test
mov
push
sti
outsb
sbb
bound
addr16
shll
popf
rorb
outsl
es
adc
scas
cltd
repnz
or
sub
loop
mov
pop
movl
mov
push
mov
imull
inc
out
iret
adc
sbb
outsb
sbbb
add
adc
lahf
pop
stos
mov
add
dec
sub
adc
pop
push
mov
inc
popf
push
enter
js
cmp
jo
outsb
mov
int
jnp
outsb
mov
and
inc
subl
popa
add
pop
mov
sarb
ss
popf
jmp
jb
mov
xor
fwait
jg
mov
ss
or
out
enter
out
enter
fs
stos
mov
inc
fdivrs
mov
lcall
xchg
and
mov
fisubs
sbb
xorl
jg
sarl
jle
ja
xor
push
frstor
inc
iret
cmpsb
jo
fstpt
insb
jp
pop
mov
aaa
add
int3
ds
mov
test
in
xchg
addl
dec
gs
into
pop
push
adc
test
mov
inc
cmp
sbb
mov
mov
jb
jns
aas
mov
mov
lret
push
xchg
xchg
lock
adc
je
jo
cmpsl
in
lods
add
dec
push
xchg
lahf
pop
xchg
mov
or
cmpsb
loope
pop
loopne
incl
sahf
xchg
sbb
arpl
inc
xchg
ret
iret
js
xor
sbb
mov
aad
and
xchg
rorb
popa
dec
pop
push
xor
cmp
ret
cmpw
aaa
jg
ret
push
repz
push
in
dec
jg
mov
push
pop
movsb
lahf
xlat
outsl
mov
aam
sub
push
in
orb
and
dec
lods
adc
xchg
into
xchg
adc
mov
cmp
nop
sbb
mov
iret
xchg
je
mov
or
mov
mov
cmp
pop
add
int3
mov
stc
repnz
sbb
ja
ficomps
in
sbb
jnp
in
and
shrb
sbb
mov
sub
lock
mov
nop
dec
sbb
mov
sbb
test
cmpsb
divb
rcl
out
lods
sbb
nop
sti
mov
or
xor
sub
sbb
xor
adc
dec
push
in
fucom
jmp
divb
bound
dec
fwait
jnp
add
repz
movsb
pop
je
mov
sti
sarb
mov
or
fnsave
push
bnd
lret
lahf
inc
ror
mov
inc
lcall
cmp
xor
or
mov
xchg
fsubrs
xchg
sub
and
pushf
int3
cmp
in
adc
test
sbb
les
dec
frstor
shl
jnp
sbb
mov
ss
dec
or
inc
scas
or
cmp
jno
bound
mov
jo
sbb
mov
push
mov
inc
dec
push
mov
xor
shr
inc
cmc
xchg
shll
mov
hlt
mov
xchg
sub
xchg
cwtl
or
loope
push
or
lds
or
ja
cmpb
cwtl
jmp
push
ljmp
mov
lea
scas
sbb
push
dec
cmp
fmulp
xchg
adc
lods
lea
cmc
push
int
icebp
jge
sti
and
push
push
stos
mov
in
aam
mov
aas
mov
popf
enter
aas
cli
inc
xchg
in
dec
mov
mov
cmp
fidivrs
cmpsb
inc
mov
cmpsl
add
sbb
test
jne
push
lea
and
inc
inc
inc
dec
cld
cmp
jle
xlat
aas
add
pop
out
cmp
mov
rorb
nop
out
adc
sti
add
pop
inc
jg
push
scas
je
add
mov
in
ss
mov
andb
jle
lret
jge
enter
add
shlb
xorl
outsl
mov
ret
mov
push
scas
mov
aad
hlt
ret
xchg
mov
add
enter
rcrl
mov
nop
lret
cli
frstor
push
push
aas
movsb
pop
jno
jb
cmp
push
pop
push
push
stc
xchg
pop
jmp
imul
loop
adc
mov
pop
mov
dec
mov
mov
cmpsl
gs
push
notb
jae
out
pop
xor
pop
adc
xchg
aad
mov
inc
cli
mov
add
sub
push
data16
insb
push
pusha
jmp
mov
jmp
mov
dec
hlt
arpl
pop
loope
sbb
mov
add
jno
sub
in
cmpsb
cmpsl
inc
xchg
xchg
dec
mov
jle
jl
adc
mov
fbstp
jns
xchg
dec
lahf
sub
sub
out
inc
movsl
sbb
sahf
lods
test
adcb
test
sub
shrl
xchg
stos
ret
pop
fxch
cli
jge
pop
out
loop
je
loope
daa
dec
sub
scas
fwait
mov
incb
pop
pop
add
push
outsb
imul
insl
lods
rorb
xchg
repnz
inc
inc
loope
imull
lock
adc
xchg
scas
pop
push
fucomi
enter
jnp
inc
inc
stos
pop
out
mov
mov
pusha
loopne
pop
out
je
jns
push
adc
xor
mov
mov
mov
ds
es
popf
mov
pop
dec
jg
jae
xchg
ja
lods
xor
loopne
xorl
test
mov
jmp
popf
fdivrl
sti
enter
adc
rclb
popf
mov
pushf
push
sub
incl
push
sub
pop
pop
inc
add
cltd
adc
ret
mov
inc
stos
dec
mov
jmp
lods
push
outsb
jo
xor
cmp
mov
cmpsb
fsubrp
hlt
mov
cmp
into
ljmp
dec
inc
push
inc
xchg
dec
xchg
inc
or
cmp
push
pop
xchg
dec
sub
cld
idivl
outsl
jmp
or
sbb
or
cmp
imul
aad
aam
add
cmp
adc
out
inc
imul
sti
fidivrl
mov
mov
inc
aad
jp
fisttpl
lea
or
push
sub
push
cmpsb
mov
ret
jnp
das
dec
xor
cmp
lret
sub
aaa
repnz
and
xor
jecxz
rcll
shrl
jle
leave
in
inc
cmp
inc
rdpmc
mov
loop
or
cmp
cmp
xchg
cmp
mov
sub
push
push
push
outsl
es
hlt
pop
lds
inc
fstps
adc
jnp
imul
nop
sub
scas
pushw
xor
mov
jnp
cmp
jecxz
lods
incb
pop
cld
sbb
je
inc
dec
shl
push
and
jno
cmp
jno
push
and
mov
fsubs
movsb
mov
jb
jmp
in
outsb
and
and
mov
mov
inc
insb
jl
mov
loopne
sub
lock
ja
mov
ret
sti
sbb
xchg
add
les
nop
testb
fwait
jne
dec
pusha
insl
mov
xchg
bound
lahf
fmull
lahf
pop
mov
sahf
dec
es
add
or
idivl
loop
xchg
jbe
mov
mov
repnz
shlb
mov
lea
lea
jle
gs
inc
xchg
pop
fs
fs
push
std
xor
add
mov
cwtl
mov
sti
clc
sti
jecxz
hlt
push
jo
fisubs
mov
fsubr
add
push
test
cmpsl
xor
test
hlt
cltd
cmp
xchg
xor
push
aad
add
cmpsl
inc
adc
mov
iret
daa
in
sbb
inc
cmp
das
xor
push
push
push
imul
scas
cmp
fidivrs
dec
les
cwtl
cld
popa
clc
jecxz
in
and
push
scas
jne
stos
jne
je,pt
lcall
das
lods
pop
jb
xorl
hlt
xchg
mov
inc
jge
in
icebp
icebp
mov
inc
mov
xor
inc
notl
ret
jo
lds
stos
xchg
dec
pusha
rclb
rcl
jge
mov
mov
pop
sub
mov
fwait
mov
jne
or
adc
push
lods
loopne
pop
xchg
fcomi
lods
or
pop
pop
out
xchg
clc
lahf
aaa
fldl
push
test
test
fisubrs
in
stos
xchg
and
pop
push
insb
sahf
jle
mov
popf
out
sti
leave
repnz
mov
xchg
int
decb
mov
push
aas
jmp
jae
xchg
mov
lahf
enter
push
jno
mov
adc
test
adc
fst
in
push
adc
sahf
out
hlt
xlat
shll
xor
xchg
incl
nop
fnsave
aad
xor
or
xorl
adc
repz
call
add
mov
xor
out
jae
sti
xchg
or
into
or
out
mov
and
stc
jo
lds
xor
adc
int3
std
mov
pop
hlt
push
push
add
add
xchg
fmull
mov
data16
jnp
sub
sbb
sub
mov
enter
mov
dec
mov
jo
sbb
push
dec
ffreep
push
stc
jg
push
jg
mov
push
pusha
cmpsl
into
mov
aaa
cmp
sbbb
leave
in
add
mov
jae
dec
pop
cwtl
pop
mov
pop
dec
cld
jp
test
pop
jg
fstpt
pop
sub
jecxz
insb
push
cmp
std
lret
cmp
scas
add
inc
sahf
pop
sbb
jo
xor
mov
push
repnz
test
push
push
lahf
jne
les
add
lock
data16
leave
mov
ds
mov
sarl
push
shrl
or
cmp
scas
add
mov
and
insl
in
jae
dec
pop
mov
push
sbb
inc
pop
xor
push
xor
and
pop
cmp
push
xlat
popf
in
fildl
jmp
mov
push
dec
dec
mov
adc
xchg
and
mov
in
jp
sbb
stos
out
mov
leave
xor
xchg
jmp
push
pop
fcmovb
mov
cltd
out
push
inc
cs
inc
xchg
sub
inc
push
fimuls
or
cmp
bound
in
lock
pop
xor
xor
or
hlt
in
stos
icebp
cwtl
xchg
sub
data16
xchg
pop
fstp
divb
insl
sub
cmc
and
outsl
test
mov
xchg
adc
ja
or
xchg
in
mov
scas
add
inc
fcomp
fldcw
jne
gs
es
xor
xchg
lods
je
mov
push
rclb
sti
es
and
mov
std
jae
jg
or
outsb
unpcklps
jbe
sarb
cmp
mov
int3
ljmp
mov
pushf
insl
push
push
mov
pop
xorl
mov
stos
fwait
roll
xor
shl
dec
insl
aas
out
pop
xor
ljmp
push
sub
mov
in
popf
add
out
cmp
sub
lcall
sub
stos
adcl
test
push
jnp
adc
jge
jg
rcr
fcoms
fidivrs
or
push
pop
enter
dec
icebp
movsb
fisubl
syscall
push
inc
adc
or
aas
add
cmp
push
pop
xchg
fcomp
int
sahf
push
test
mov
js
in
pop
mov
popf
sub
dec
xor
pop
xchg
roll
pop
test
imul
cmp
shr
in
cmp
aad
dec
mov
xchg
push
je
aad
add
xchg
mov
pop
out
shrl
fcmovu
mov
dec
aas
ljmp
inc
pmaddwd
test
sub
jmp
or
nop
repnz
jo
pop
push
or
mov
mov
outsl
adc
enter
cmp
lods
lcall
lret
inc
dec
in
lds
or
imul
cmp
mov
push
dec
cld
sub
lock
pop
adc
xor
sarl
fbld
mov
notb
iret
loope
sub
test
jbe
or
sbb
gs
popf
inc
add
loop
and
movsb
in
sti
push
in
mov
cmp
out
dec
pop
dec
and
push
jno
pusha
and
pop
and
icebp
xchg
jmp
or
sbb
jnp
sub
lcall
imul
fwait
mov
loope
lret
fcmovb
nop
fsub
add
jnp
insl
stos
xchg
mov
cld
leave
data16
mov
addr16
or
sub
pop
or
enter
mov
jmp
or
or
pop
xchg
xchg
lcall
sahf
popa
cmpsl
loope
or
and
mov
adc
pop
push
fdivrl
int
lcall
mov
scas
insl
xchg
stc
push
cwtl
repnz
loopne
rcll
popf
jb
xchg
test
icebp
sti
jno
js
loopne
scas
inc
dec
adc
cld
test
inc
mov
data16
adc
cli
ds
adc
and
cmp
pusha
mov
stc
loope
insb
jo
movsb
pop
pusha
mov
cs
icebp
lds
sub
mov
cmpsb
pop
jecxz
adc
push
popa
arpl
outsl
into
aas
or
pop
pushl
dec
push
push
adcb
test
aad
mov
and
mov
aaa
xchg
sbb
sub
xchg
addr16
jp
pop
aas
xchg
pop
outsb
or
add
ficoml
adc
cmp
fiadds
cwtl
popf
adcl
push
pop
xchg
mov
roll
shrl
or
jmp
dec
push
mov
and
cmpsl
call
mov
in
dec
insl
int3
lret
sbb
decb
test
adcb
add
fmull
sub
leave
sub
inc
sub
fisubs
nop
xor
and
push
daa
sbb
and
in
data16
sub
and
cmp
adc
mov
pushf
inc
pop
ror
adc
xchg
arpl
or
mov
xchg
daa
aad
in
fmull
divb
outsb
fs
stos
sub
outsb
popa
std
mov
xchg
inc
xor
jnp
jg
pop
jo
and
push
fs
stos
ret
mov
push
ds
or
jp
mov
out
cmp
dec
adc
inc
push
into
mov
std
cli
dec
and
pop
cmp
stos
push
out
je
sub
outsb
sbb
in
aad
imul
mov
and
stos
mov
scas
test
pop
jb
dec
lock
xchg
jne
jp
inc
xchg
lahf
dec
mov
ja
sahf
aad
aas
sub
inc
mov
adc
xchg
cmp
fstpt
jne
mov
leave
inc
jno
dec
repz
testb
xchg
testb
or
sub
outsb
pop
push
mov
fistl
xor
outsl
inc
push
mov
add
in
xlat
shlb
cmpsb
sti
push
cmc
sub
and
jno
mov
add
int3
mov
dec
es
and
and
repz
nop
clc
movsl
ret
xchg
dec
xchg
repz
stos
jecxz
mov
testl
sub
mov
mov
arpl
cmp
sbb
jnp
aam
fsubl
adc
clc
loop
add
addr16
in
xchg
push
adc
dec
fnstenv
sbb
daa
push
add
lret
pusha
cli
hlt
mov
xchg
jns
pop
jle
sub
or
decb
dec
mov
jbe
in
pop
jno
xchg
jns
aas
mov
imul
push
mov
into
cmp
enter
add
lea
adc
xlat
cmp
xor
div
add
imul
inc
bound
scas
mov
lret
sbb
sbb
push
mov
pop
imul
sbb
lock
lahf
faddl
aaa
xchg
shll
adc
fldcw
cmp
mov
dec
std
xor
add
xchg
push
push
jg
push
push
dec
cmp
fnsave
jmp
push
imull
sbb
mov
cli
sub
jno,pt
pop
nop
mov
dec
shrb
jo
mov
imul
mulb
sub
or
mov
sbb
xchg
pop
and
xchg
arpl
sbb
and
repnz
hlt
sub
adc
andb
in
pushl
dec
inc
loop
sbb
xchg
pop
xchg
out
pushl
sub
bnd
rolb
repz
lock
adc
ret
push
mov
test
dec
imul
push
and
dec
push
repz
or
xor
fistps
dec
pusha
xchg
sbb
shl
pusha
cmp
mov
pop
loope
jmp
mov
sahf
pop
pushf
ret
xor
adc
cmp
jmp
mov
pop
mov
nop
inc
xchg
mov
push
xor
add
jae
mov
mov
enter
jb
in
jg
jnp
push
test
xor
ljmp
push
shl
gs
xchg
data16
push
push
pop
movsl
push
dec
repz
cmpsl
jno
test
and
push
dec
adc
dec
out
pop
stos
cltd
add
ss
hlt
lds
and
int3
movsb
or
inc
popf
in
popf
mov
adc
inc
inc
ficomps
test
cmpb
add
and
cmp
mov
inc
mov
jb
pop
movsb
dec
cld
cmpl
test
lcall
jo
add
sub
push
insl
or
mov
xor
push
xchg
push
mov
ud0
pusha
cld
pop
cltd
push
jmp
call
les
xlat
jle
stos
into
dec
insl
test
lahf
pop
stc
inc
div
rorb
dec
shrl
popf
mov
mov
jae
mov
mov
pop
aaa
ds
out
mov
jae
pop
movsb
stos
pop
and
sti
pop
lods
push
pop
adc
xor
test
mov
jns
leave
ret
jl
lods
jne
adc
cmp
mov
data16
sbb
data16
or
cmp
cli
movsb
scas
test
jns
dec
stos
inc
and
pop
int3
sub
icebp
push
imul
repz
sub
dec
pop
fildl
dec
ja
dec
pop
gs
incb
ficoml
mov
jae
push
insb
push
repnz
cmp
mov
vzeroall
lahf
imul
inc
hlt
inc
and
in
sub
andl
mov
push
lds
push
iret
clc
out
in
xor
mov
lret
cwtl
cmp
push
ret
clc
or
ds
or
jae
hlt
in
push
jo
addr16
ds
sbb
outsl
mov
stos
testb
arpl
or
sbb
aam
push
xchg
lahf
xor
data16
mov
shr
nop
cmpsl
fiaddl
jg
insl
sbb
xchg
jns
fs
dec
cmpsl
cmc
pushf
fsubrp
sbb
rcr
and
test
mov
push
or
and
stos
or
cmpl
fnstsw
jle
pop
dec
daa
ss
jmp
ljmp
push
xlat
je
push
jbe
outsb
addr16
pop
lret
xorb
push
dec
and
ds
sbb
xlat
sub
inc
pop
xlat
shrl
sbb
negb
xchg
cmp
mov
loope
adc
out
inc
mov
in
pop
pop
test
jnp
imul
loope
pushf
dec
adc
addr16
aas
pusha
or
and
stc
and
mov
in
ds
out
cmp
imull
and
shr
popa
addl
lcall
enter
xorb
fildll
jg
js
xor
mov
ret
add
push
mov
lret
add
jbe
jecxz
cwtl
shrb
sub
movsb
call
or
pop
je
or
and
aas
lcall
fstp
or
xchg
push
aas
add
rclb
adc
popa
adc
int3
enter
arpl
call
and
stc
lcall
inc
mov
cld
test
xchg
add
xchg
mov
loopne
hlt
dec
hlt
sbb
jnp
jne
mov
pop
cltd
pusha
lock
lods
adc
jle
add
push
cltd
cmpsb
push
sub
add
int
lcall
pop
scas
xor
shlb
data16
dec
fs
jo
sbb
rcrl
test
jmp
mov
iret
sbb
aam
in
movb
xchg
iret
or
inc
sub
dec
add
sub
pusha
fidivl
push
mov
xor
add
movsb
cmpsb
lcall
push
out
repnz
push
jmp
pop
mov
mov
pushf
imul
cmp
xchg
lret
push
scas
test
and
push
bound
movsb
icebp
sub
push
test
clc
int3
test
sub
pop
sbb
movhlps
movsb
push
cmp
movsl
push
int
sbb
inc
bound
in
and
filds
insb
popf
or
or
pop
dec
loope
mov
test
mov
js
xor
push
insl
fs
imul
mov
sbb
arpl
push
adc
sbb
pop
jmp
jns
mov
lahf
xchg
and
sbb
les
fwait
dec
xchg
sbb
xlat
mov
cwtl
jl
jae
or
sub
cwtl
jl
clc
jmp
push
push
xchg
in
lods
les
mov
xor
jp
adc
incb
cs
add
xchg
inc
pop
fmull
cmp
dec
mov
sub
out
cli
aad
xchg
and
or
and
outsl
and
test
jge
inc
les
shrb
sarl
mov
sub
stos
je
movhps
cmp
jb
std
sbb
out
adc
dec
mov
add
insl
push
dec
push
lcall
mov
and
bound
mov
popf
out
std
dec
cmp
shlb
pop
pop
negl
pushf
std
icebp
mov
test
adc
int
mov
cld
sbb
call
aas
adc
mov
leave
shll
clc
leave
xor
adc
aad
cmpb
push
imul
xchg
dec
push
out
testl
insb
scas
push
xor
jae
fnsave
jns
fwait
inc
fistl
mov
into
adc
mov
mov
sahf
test
rcrl
in
mov
lret
pop
aam
pop
push
inc
das
push
in
lret
inc
int3
or
jl
ja
lret
ljmp
dec
ss
xchg
fwait
lods
xchg
shrb
and
leave
shll
pop
gs
aad
mov
pop
mov
push
mov
dec
bnd
fldenv
xchg
test
clc
jg
ss
add
dec
mov
inc
push
addr16
mov
mov
jb
in
lds
dec
je
push
or
xor
test
ss
push
dec
repz
das
adc
mov
dec
lea
jno
negb
add
mov
lds
stos
xor
popl
das
idivb
shr
cmp
lds
add
test
xchg
lcall
and
inc
pop
jl
add
mov
dec
sbbl
cs
jns
cltd
aam
and
fildl
lahf
cmp
push
pop
cmp
outsb
fucompp
mov
les
xor
or
sbb
lret
shll
sub
loope
sbb
outsl
sahf
adc
xchg
arpl
adcb
rorl
pop
fs
jg
int3
movsl
push
pop
mov
call
ret
icebp
jecxz
adc
lret
jns
scas
push
scas
in
sub
fcom
ljmp
sysenter
out
pop
add
stos
pop
sbbb
in
and
xchg
jle
jle
lcall
out
push
stos
cmp
push
lcall
into
lds
lret
outsl
sar
imul
adc
addl
cmp
sbb
call
fmull
xchg
mov
fisttpl
test
mov
xor
or
fs
or
scas
stc
faddl
jge
mov
cld
rcr
arpl
lock
lods
adc
cld
xchg
fcmovbe
mov
call
mov
jnp
sbb
pop
jle
sbb
mov
jo
add
divb
ret
xchg
loop
mov
gs
data16
xchg
pop
xchg
jae
incb
push
enter
adc
and
not
clc
sahf
mov
sbb
sub
pop
shrl
movsb
adc
gs
out
jo
mov
aad
adc
cwtl
inc
mov
jg
adc
inc
dec
push
fcmovne
pop
add
and
ret
mov
addr16
cmp
push
adc
or
xor
dec
data16
inc
inc
mov
xchg
push
popf
roll
sub
mov
or
push
gs
adc
mov
lret
shll
mov
ss
xchg
test
adcb
jle
int
out
daa
cmpl
jmp
jnp
dec
popl
test
xchg
inc
xchg
mov
mov
fmull
cmp
sahf
arpl
add
repz
cltd
mov
jp
pop
mov
lock
inc
imul
and
lods
mov
xchg
jge
clc
cmp
inc
call
pop
inc
in
test
jg
adc
stc
mov
repnz
pop
jb
push
cmp
mov
cmc
incl
aaa
cmp
sub
fildl
dec
fucomip
call
into
mov
cmp
xor
lock
and
scas
cmpsl
dec
xor
stos
xor
test
mov
push
incb
pusha
repnz
add
sti
lcall
xchg
imul
jg
push
cmc
or
lea
add
in
push
sub
dec
sub
ss
jb
icebp
aad
fwait
inc
icebp
jne
iret
inc
dec
inc
or
cli
iret
cmp
jne
jg
pop
shr
popf
sub
test
sub
scas
push
int3
and
mov
or
push
shlb
and
ds
push
mov
adc
lret
fxch
xchg
dec
push
arpl
push
ss
sbb
mov
int3
int3
and
repz
add
mov
gs
cltd
and
rolb
xchg
cmp
cmp
push
loop
mov
xor
cmp
and
in
pop
sub
out
outsl
xchg
mov
mov
outsw
adc
mov
inc
idivl
or
loope
cwtl
and
fdivs
pop
js
adc
jbe
and
cmp
push
xchg
aas
fxtract
push
gs
jno
ror
mov
pop
mov
jae
int
inc
push
test
sub
push
jno
xor
cmpsl
jb
cld
mov
jne
mov
movsl
jg
push
xchg
loop
iret
sub
fnsave
cmp
pusha
std
into
stc
pop
test
fsubs
fldenv
add
add
aas
std
cmp
cltd
lret
xchg
rclb
cmp
adcl
push
lods
clc
int
fdivp
adc
cwtl
movq
inc
sub
test
movb
pop
or
mov
or
test
inc
test
stc
es
mov
and
stc
rol
sahf
sarb
push
enter
dec
stos
pop
daa
pop
pop
xchg
loop
push
and
loop
cltd
ljmp
jl
mov
cmp
mov
out
mov
cwtl
mov
cltd
push
pop
lods
jns
sub
js
ficompl
mov
jnp
fsubrl
sub
frstor
dec
push
jmp
sub
cmp
inc
mov
in
mov
adc
ss
lahf
and
jl
das
icebp
leave
jp
into
leave
xchg
dec
sbb
add
jns,pt
stos
sbb
push
cmpsb
scas
push
maskmovq
mull
adc
mov
mov
clc
jle
add
mov
fsubrl
mov
xchg
bound
or
pop
iret
jo
jo
or
mov
dec
std
in
mov
xor
in
sahf
push
adc
adc
fdivl
fs
lret
push
int
sub
ss
in
xor
mov
push
divb
mov
daa
mov
push
lcall
dec
stos
stos
jle
jb
cmpl
and
push
dec
cmpl
add
xchg
aam
adc
stos
in
ss
repnz
sahf
iret
xchg
sahf
cli
xchg
sbb
mov
jnp
mov
xor
xchg
inc
adc
add
sbb
mov
repnz
or
in
jl
test
imul
xchg
ret
test
subl
dec
in
test
fistl
rol
and
push
sbb
nop
lret
xchg
inc
fwait
jno
and
dec
or
lahf
or
std
lcall
rcrb
mov
sub
jge
dec
jnp
psrlq
jb
and
loope
cld
daa
pop
shll
in
inc
inc
jle
mov
cmp
lods
inc
xor
cld
aas
imul
mov
jmp
jg
les
cli
cmpsb
pop
add
xchg
enter
inc
lea
pop
cmp
or
ret
ret
sub
inc
addr16
pusha
pop
and
ss
xor
loope
adc
and
scas
pop
add
mov
mov
outsb
jo
xchg
xlat
jge
dec
pop
jbe
test
push
jno
xchg
aad
pop
sub
pop
cmp
dec
bound
pushf
movsb
xlat
and
or
push
and
mov
push
out
bound
sub
and
mov
mov
loop
inc
xor
loope
iret
mov
mov
aas
call
das
cli
fmull
push
sbb
sub
mov
inc
push
mov
push
sti
pop
iret
movsb
sub
cli
or
xchg
mov
xor
aas
pop
test
cmp
cmp
pop
std
ret
pop
aaa
lret
pop
xor
mov
aaa
into
mov
out
scas
pop
psrad
lock
mov
movsb
in
push
jp
test
sbb
xor
mov
xchg
jno
jae
cmp
add
sarb
leave
out
aas
or
inc
jne
stc
add
push
sti
lds
out
add
mov
gs
sub
mov
insb
and
sarb
cmp
lds
aam
dec
pop
enter
jge
xor
iret
sub
add
cmp
hlt
inc
inc
sbb
xchg
mov
push
ja
push
cli
prefetch
mov
pop
outsl
aaa
rorb
pushf
aad
xlat
sub
mov
dec
xchg
pop
outsl
lret
popa
popl
out
pushf
insl
mov
and
sub
and
repnz
mov
lods
lock
repz
lods
xchg
nop
popf
mov
mov
xor
adc
xor
icebp
xchg
icebp
fs
sub
pop
inc
bound
mov
mov
mov
stos
rcll
dec
jb
test
insb
das
mov
fsubrl
sub
inc
jnp
mov
push
push
cmp
cs
movsl
pusha
lret
mov
rcll
jmp
lret
jecxz
call
pusha
adc
js
in
pusha
shll
push
inc
fldcw
dec
adc
xchg
push
rolb
jmp
div
push
jo
add
imul
cmp
imull
mov
jmp
sbb
dec
or
dec
sbb
movl
scas
rcl
out
inc
push
aam
dec
pushl
jb
ret
rcr
jmp
lcall
ds
sbb
mov
sub
sbb
and
inc
mov
aad
js
fsubs
mov
pop
lods
add
fidivl
mov
cmp
xlat
hlt
movsl
jne
aad
ficompl
out
jle
sub
inc
pop
mov
or
and
jno
or
test
adc
add
inc
fs
sub
out
jmp
test
xor
icebp
push
dec
pop
mov
mov
pop
popf
cli
pushf
mov
fistpl
lcall
out
jmp
jae
sbb
add
jnp
lods
mov
adc
aas
fwait
scas
out
hlt
cld
iret
push
fsubrl
cmpsb
pop
inc
mov
mov
mov
aaa
and
sub
es
cmp
mov
andl
inc
pop
cmp
mov
sub
in
jmp
xor
mov
insl
adc
push
imul
or
mov
pop
add
decb
cmpsb
xchg
scas
scas
daa
mov
pop
jg
pop
pushf
xchg
and
or
mov
sbb
lret
andb
adc
int
fcomp
aas
aas
ret
fidivrs
pop
imul
cwtl
int3
lret
mov
add
fimuls
sbb
jns
int3
leave
xor
out
and
movsl
mov
les
data16
push
inc
push
xchg
jns
dec
je
dec
lds
sbb
lods
jno
int
sti
xor
cmp
adc
imul
pop
xchg
fdecstp
lret
and
je
ret
pop
and
es
lods
ljmp
sub
xor
add
lods
add
popf
push
ret
mov
cmpsb
cmp
dec
loope
adc
mov
scas
or
mov
bound
and
iret
mov
lea
cmp
mov
xchg
test
cmpsb
or
mov
cld
scas
std
or
subl
or
lock
sbb
mov
es
pusha
aam
jae
fwait
imul
cmpsb
insl
cltd
pcmpgtd
dec
mov
int3
push
in
fistps
and
aas
push
sub
cmp
mov
sbb
jp
fists
push
sbb
dec
pusha
sbb
push
daa
inc
jae
enter
testl
hlt
xchg
sub
sbb
mov
imul
icebp
incl
and
bound
addr16
popa
imul
fcmove
icebp
cld
fs
cli
or
jle
push
xor
fstpt
add
adc
cwtl
retw
daa
xchg
jmp
loopne
stos
dec
nop
add
sub
in
mov
aaa
pop
xor
stos
out
xor
out
pop
push
jne
insl
add
mov
ficoml
shll
jp
lahf
sub
push
test
sbb
fdivl
adc
orl
jl
push
negb
inc
mov
test
inc
mov
enter
cmp
outsb
lods
mov
fs
and
cltd
mov
xchg
jns
inc
xchg
adc
fdivs
sub
inc
mov
jne
xor
push
gs
out
jecxz
out
jecxz
addr16
cs
leave
mov
xchg
mov
addl
lds
popf
push
sbb
js
mov
jb
xchg
fisubrs
adc
gs
push
test
test
es
push
out
push
mov
addl
push
inc
gs
sub
outsl
sysret
test
ror
std
inc
jmp
push
popl
lret
test
add
adc
sbb
hlt
jecxz
mov
shll
pop
lcall
pop
mov
sub
mov
bound
mov
jbe
mov
xor
in
and
lret
mov
jbe
test
push
outsl
and
int3
cld
lret
imul
cld
mov
adc
xchg
push
mov
lods
pop
jp
jecxz
mov
outsl
std
fwait
xchg
scas
ss
push
les
aad
and
push
sub
aas
xchg
xor
mov
cmp
repz
bound
mov
or
sahf
sbb
dec
gs
pop
mov
pop
add
xor
xlat
out
mov
addps
lahf
cmp
sti
adc
shrb
mov
inc
mov
lds
pop
push
pop
aaa
lds
add
xor
in
push
arpl
mov
sub
cld
data16
cltd
aam
cmpl
call
mov
xor
dec
mov
pop
jbe
push
shrb
stc
outsl
jl
insl
mov
sbb
fistpl
inc
inc
mov
inc
mulb
inc
dec
scas
adc
inc
shrl
adcl
dec
mov
or
xor
xchg
xor
les
cmpsl
cli
or
pop
inc
and
into
out
pop
inc
push
test
adc
mov
xlat
jne
push
jnp
xchg
test
push
xchg
cmp
mov
sub
mov
dec
cs
mov
and
push
les
imul
test
gs
dec
pop
mov
lea
cld
into
pop
lret
mov
popa
mov
insl
outsb
into
dec
ljmp
mov
pop
cmpl
adc
inc
mov
sbb
in
push
fisubs
pop
fiaddl
cmpsl
leave
iret
fisubl
push
push
adc
pop
adc
ja
jbe
push
les
and
xor
push
or
test
inc
mov
push
mov
aad
bound
lods
cmpsb
xchg
mov
inc
xor
inc
mov
std
cwtl
insb
pop
sub
sub
or
das
testl
shlb
mov
stc
xor
xchg
mov
stos
inc
aad
mov
ret
rcl
jns
rclb
in
or
pop
or
cmc
nop
mov
pop
add
scas
adc
cmp
stos
xchg
mov
jne
orb
or
cmp
jnp
repz
inc
fnstsw
push
add
mov
add
xor
xchg
hlt
inc
push
icebp
sbb
adc
movsb
mov
mov
aad
bound
cmp
xchg
inc
dec
hlt
pop
xlat
mov
decl
push
call
pop
mov
mov
rol
push
enter
into
pop
mov
cmp
leave
xchg
ja
xor
or
dec
pop
addb
incb
test
cmp
cmpsb
sub
xchg
xchg
pop
mov
loop
js
sub
mov
adc
and
int
imul
mov
lret
dec
ss
pushf
into
lcall
in
inc
mov
ret
xchg
adc
rcrb
push
add
cmp
cmc
and
dec
xlat
fnstsw
and
adc
jae
fdivr
sarb
out
ret
sahf
scas
cmp
sti
mov
stos
xor
and
inc
nop
xchg
add
jae
add
xchg
sti
xor
mov
lcall
jp
sub
enter
xchg
push
test
mov
push
test
mov
arpl
xchg
push
jae
arpl
lret
jge
pop
adc
inc
pop
fisttpll
adc
andb
rolb
cld
lret
adc
rcrb
cltd
jo
int
out
in
aas
int
gs
mov
cli
in
fldenv
scas
cli
add
cltd
into
or
jno
fwait
lods
jmp
pop
mov
sbb
cmpb
in
out
jmp
adc
ljmp
or
daa
lahf
dec
sub
out
jnp
sub
jge
mov
mov
and
sbb
cmp
mov
push
mov
call
cmpb
cwtl
loope
cltd
push
fwait
or
sti
cmp
ret
or
cmpsl
call
or
cltd
push
cmpsb
cmpsl
cmp
add
or
adc
xchg
call
cltd
inc
arpl
mov
popf
dec
inc
bnd
mov
and
push
test
dec
mov
jle
jg
ret
xor
add
xor
movhps
dec
sub
dec
mov
or
cmp
in
adc
add
ja
xchg
mov
cmpsl
push
lods
and
inc
repnz
sub
add
nop
push
push
sbb
lret
outsb
popf
into
jecxz
jo
push
inc
dec
in
sbb
dec
push
mov
push
sub
adc
pop
outsb
or
in
xchg
or
cmpl
dec
enter
rclb
in
jb
inc
iret
add
out
ja
fldl
or
or
cs
cmp
and
jmp
sbbb
pop
push
addl
xchg
dec
xor
mov
pop
mov
mov
ds
sbb
jg
frstor
or
shl
std
loopne
outsb
xor
adc
cmpl
rcll
mov
xor
jo
lods
sub
cmp
scas
pop
ja
orl
mov
add
mov
cwtl
add
mov
gs
daa
jp
lea
push
and
mov
jbe
mov
dec
adc
sbb
test
mov
bound
inc
je
aas
inc
dec
inc
xor
das
push
push
sbb
roll
pushf
cmc
add
mov
pop
mov
dec
lods
lea
fbld
idivb
aaa
xor
das
pop
test
add
pop
push
mov
hlt
push
jl
and
es
out
addr16
and
mov
xchg
hlt
inc
jmp
aas
add
fsubr
xchg
mov
dec
sbb
and
in
bound
jbe,pn
shlb
fnstcw
mov
or
mov
loop
pop
sahf
pop
and
xchg
lret
pushf
mov
into
jns
hlt
inc
shll
insb
repnz
jb
jmp
sbb
inc
addr16
fdivrl
repnz
leave
cmp
dec
sarb
fisttpl
sbb
out
mov
test
jmp
lahf
xchg
mov
shlb
jae
mov
clc
repz
js
adc
sbb
mov
jno
mov
or
mov
jns
pop
fs
ss
xchg
pop
mov
out
imul
sbb
mov
cmp
cs
cmp
iret
pop
sbb
pop
icebp
and
fnstcw
inc
imul
movsb
enter
adc
dec
scas
ret
gs
lahf
jmp
mov
pop
movups
mov
cmp
stos
mov
pop
mov
fstpl
pop
in
shlb
repnz
push
andb
xchg
adc
lods
xorl
scas
mov
pop
sub
insb
stos
shll
dec
lcall
adc
test
andb
mov
inc
push
pop
mov
outsl
repz
jnp
loope
sub
or
add
pusha
scas
jg
aad
jmp
sub
push
add
mov
lret
cmpsb
mov
cwtl
xor
aaa
out
hlt
adc
mov
adc
and
js
loopne
outsb
dec
in
mov
xor
pop
call
repnz
and
adc
mov
shrl
xchg
inc
aam
mov
xor
xlat
mov
clc
loop
ficompl
cmc
mov
sbb
popf
push
daa
pop
outsb
pop
movsl
sub
cmpsl
in
xchg
and
lahf
in
lods
dec
mov
pop
add
lahf
push
sbb
xchg
aas
sub
xchg
adc
std
pushf
pop
sahf
pop
or
aas
xchg
scas
xchg
repz
cmp
mov
data16
ljmp
or
stc
lea
pop
imul
fs
stos
das
mov
mov
jae
insb
aas
int
dec
adc
ret
lea
cmc
sbb
fildll
nop
dec
push
cmpsl
test
sbb
pop
xchg
addl
jmp
jecxz
push
js
fdivl
sub
sbb
pop
mov
stos
fs
lock
xor
int3
repz
pop
mov
test
cmpsb
mov
das
inc
clc
fld
push
cmp
mov
sub
xchg
mov
lret
lahf
aas
pop
stc
je
sub
mov
xchg
notb
movsb
out
movsl
addr16
push
std
leave
int
popa
jne
mov
cmp
test
repnz
das
stc
add
dec
inc
gs
aad
fs
rcll
scas
mov
xor
pop
jg
pusha
dec
cmp
repz
mov
in
loop
daa
xchg
bound
xor
orl
pop
movsb
pop
push
out
movsb
pushf
inc
and
mov
push
and
in
mov
aas
fimuls
cmc
cmp
leave
inc
movsl
shl
sti
pop
dec
mov
bound
jle
xchg
pop
jg
sub
aam
xchg
test
xchg
dec
push
cltd
push
fldcw
inc
xchg
std
inc
imul
ja
xchg
lahf
mov
mov
fdivp
daa
dec
movsb
sub
icebp
aad
pushf
adc
ficomps
jg
sbb
js
or
mov
jge
push
int
add
stos
insl
add
in
stc
mov
and
pop
std
push
nop
pop
clc
push
lods
and
bound
dec
sar
cmp
xchg
lret
xchg
imul
mov
push
rcl
ss
mov
mov
jns
mov
aad
cmp
mov
sub
pusha
mov
imul
lds
adc
pop
sub
push
adc
dec
test
test
test
sbb
xor
push
loopne
inc
stos
subps
sbb
adc
mov
xchg
push
fcmovu
jo
scas
mov
mov
test
cmpsl
sub
ds
iret
pop
test
popf
push
adc
into
cltd
push
push
popf
fcmove
and
rol
sub
scas
mov
fwait
int3
dec
inc
out
mov
mov
icebp
cwtl
in
pop
push
pop
ja
mov
xchg
subb
lret
xor
nop
sbb
mov
loopne
mov
rolb
push
int3
int3
mov
sbb
ds
aas
imul
or
loope
sbb
sarl
adc
in
or
jp
adc
add
sbb
arpl
mov
pop
or
mov
mov
fsubrl
lods
aas
and
inc
jp
mov
mov
inc
inc
outsb
pop
add
mov
xorl
lret
cmpsl
addr16
adc
movntps
int
fistpl
xor
jo
dec
mov
call
dec
push
sbb
add
adc
push
mov
fcomps
fcmovb
cmp
imul
rol
dec
fnstsw
popa
pop
js
mov
sbb
in
in
jns
pop
xchg
out
or
sbb
fwait
out
pushf
int3
xchg
rcrb
sti
add
iret
mov
or
adc
jl
sub
or
pop
pop
push
jge
jl
xor
inc
les
cmp
lds
pop
xchg
xchg
ret
xor
js
adc
cld
jmp
mov
mov
ja
frstor
mov
fistl
es
scas
mov
fwait
call
push
cmp
cmp
in
pop
in
and
lods
jge
inc
js
jl
mov
push
jo
rcl
lock
out
or
push
lds
outsb
aad
mov
hlt
jp
int
sti
repnz
pop
mov
sub
dec
ss
mov
movsb
negl
fbstp
sbb
jno
cli
lods
jg
push
push
push
sbb
mov
and
jae
int
outsl
and
sahf
push
fistpll
sbb
xchg
and
and
and
les
scas
es
sbb
inc
xchg
jp
or
push
mov
pop
dec
sub
enter
cli
mov
pop
sub
pop
flds
movb
mov
xorl
insb
mov
negb
leave
jg
push
out
hlt
sarb
xchg
out
fs
inc
stos
mov
pop
push
mov
and
fs
cmp
or
pop
push
push
or
xchg
mov
xor
jl
div
xor
test
sbb
xor
push
int
or
jae
loop
pushf
repz
loop,pn
jge
das
xchg
cmp
pop
sbb
xchg
sub
dec
push
mov
mov
push
mov
pop
scas
dec
and
push
mov
sti
or
movb
jp
js
or
or
xchg
in
std
je
sahf
cmpsb
lret
fnstenv
and
mov
out
js
ret
mov
jge
sahf
cmp
fcoms
rorb
xor
fwait
pushw
rcrl
mov
gs
inc
pop
xchg
js
fcompl
ss
imul
push
lea
mov
pop
fcoms
test
cwtl
pop
push
out
ss
ror
loopne
add
imul
sbb
call
push
dec
mov
mov
pop
adc
mov
into
mov
push
mov
push
sbb
sub
sub
pop
mov
or
dec
sub
shll
sub
ja
mov
or
dec
sub
jg
std
push
cli
and
xor
push
cmp
movsl
jg
cmp
sbb
fmuls
and
cmovnp
fsubl
pusha
aas
and
mov
cmp
cmp
jae
adc
idivl
mov
xlat
scas
push
loopne
stos
cld
push
xlat
sub
pop
push
adc
sbb
xchg
pop
cli
mov
lock
stos
xchg
sub
mov
inc
popf
fiaddl
cld
idivl
xor
sbbl
or
decb
subb
xor
add
add
or
sub
sbb
pop
inc
mov
pop
jmp
scas
fnstenv
dec
jmp
push
lods
mov
fiadds
mov
xchg
adc
inc
cmp
movsl
test
into
jbe
stos
lcall
pop
jecxz
cmp
mov
adc
mov
movb
xor
inc
inc
gs
ret
popl
sub
xchg
xchg
jge
xchg
icebp
and
mov
push
test
push
outsb
insl
popf
cwtl
pop
cmp
movsl
rcrl
jb
stc
repz
xor
pushf
mov
push
dec
lret
std
filds
shll
and
cmp
out
add
bound
xor
shrl
jns
stos
mov
xchg
xor
ss
jnp
les
cmp
mov
test
push
hlt
addl
mov
jns
test
pop
jae
nop
fnstsw
dec
lods
test
cmp
fnstcw
adc
jle
push
mov
clc
sub
xor
ss
fnsave
je
xor
push
sub
pop
jae
push
int3
and
repz
inc
pushf
and
leave
mov
aaa
ret
xchg
in
pop
xor
and
icebp
ja
cs
mov
test
test
sub
dec
int
mov
xchg
in
aas
ja
sarl
cmp
lahf
pop
push
push
or
jl
loop
push
movsl
xor
inc
mov
mov
pop
jne
and
xchg
sub
cmp
mov
sbb
xchg
fidivl
mov
out
xlat
outsl
mov
mov
cltd
cli
xor
mov
push
icebp
inc
xor
addr16
cwtl
shr
add
mov
sahf
ret
scas
inc
pop
fistpll
fimuls
insl
repz
push
enter
loope
xlat
cmp
stos
shl
push
lock
jl
or
mov
movsb
cmpsb
adc
xor
mov
lret
out
and
sbbb
inc
mov
mov
in
sbb
pop
jno
rcll
pop
out
rcl
je
idivb
push
pushf
lock
idiv
cli
mov
inc
xchg
cmp
dec
adc
fwait
inc
adc
subl
es
cmpl
cmp
pop
stc
and
push
lods
mov
lahf
sbb
aam
jns
xor
xor
add
out
lods
adc
xchg
pusha
loopne
add
or
sub
call
shll
fldl
out
cwtl
fstps
inc
jno
ret
add
push
push
mov
xchg
dec
or
dec
les
jp
sbb
and
mov
push
jbe,pt
sbb
fisttpll
sub
inc
testl
jecxz
add
pop
repnz
out
mov
jecxz
fs
push
mov
cmp
dec
fs
jnp
inc
nop
sbb
imul
int
ja
and
in
das
jb
or
mov
xor
rcr
add
and
add
flds
xchg
mov
rorl
jno
sbbb
add
mov
push
jg
enter
adc
adc
mov
or
jge
fimuls
xor
add
aam
aas
jns
mov
cltd
pop
ja
das
js
inc
movl
mov
sub
mov
jge
pop
sti
sti
out
xorl
xchg
mov
ljmp
xchg
dec
std
cmp
sub
jo
inc
clc
xor
inc
repnz
gs
and
enter
ss
dec
add
mov
cld
inc
ret
push
lret
cmp
ret
push
push
cmc
xchg
jno,pn
push
inc
arpl
sbb
mov
cmp
xchg
repz
cmp
fwait
sti
inc
fcomip
shll
sub
cmp
dec
scas
cwtl
or
lock
and
sbbl
mov
imul
loopne
aas
add
mov
bound
xchg
iret
scas
fmulp
dec
repz
into
scas
xor
daa
or
and
ret
sahf
jp
enter
inc
dec
and
andb
push
pop
sbb
shll
xchg
adc
mov
gs
jno
or
out
push
lret
cld
sub
das
lods
cli
pop
adc
or
out
push
mov
sbb
cmp
pop
lea
mov
push
inc
popl
lock
fs
loope
aam
into
sub
mov
ds
push
push
cmp
call
mov
inc
or
rorl
inc
mov
mov
mov
jb
icebp
cs
pop
push
sahf
sti
lret
popf
lret
mov
inc
jmp
sarl
and
aas
mov
fdivrs
xor
icebp
cmp
xchg
cltd
and
cmp
or
int
pusha
outsw
cmp
into
cmp
aas
push
popa
test
push
scas
lahf
cmp
or
out
call
in
mov
dec
add
inc
xlat
loope
sbb
loopne
push
outsb
ds
mov
and
or
sbb
cwtl
mov
adc
inc
pop
push
xor
dec
lret
fs
in
ret
sbb
dec
mov
das
sti
mov
out
inc
add
lds
fldl2e
adc
lcall
test
test
mov
cld
xchg
mov
lahf
and
pop
mov
jne
jns
test
mov
push
lret
mov
test
test
sahf
lret
cmp
inc
xchg
scas
sub
xor
inc
or
and
pop
fldl
add
mov
jns
xor
in
mov
mov
push
ret
mov
jae
jo
ja
fisttpll
sbb
push
in
loop
repz
lahf
cmp
jo
daa
push
insb
jne
nop
cwtl
test
or
mov
add
adc
xbegin
rcll
orl
adc
xchg
dec
jbe
add
sti
cmpsl
shr
lock
nop
subb
cmp
mov
sbb
add
inc
inc
insl
inc
push
test
gs
mov
inc
vcvttss2si
mov
inc
cld
and
adc
movsb
mov
inc
testb
cmp
sub
popa
xor
inc
dec
or
xchg
std
sbb
and
nop
adc
push
sub
cwtl
mov
out
call
rorb
in
rcll
xchg
les
lret
out
mov
xchg
push
cmp
std
lods
je
jo
and
ffreep
adcb
add
pusha
mov
rcll
jecxz
sbbl
test
cmp
cmc
pop
and
rorl
mov
in
dec
repnz
les
loope
adc
cmp
mov
inc
lds
aas
xor
mov
and
jle
loopne
insb
jnp
cltd
in
fs
mov
test
movsb
sbb
pop
je
add
mov
sub
add
mov
insb
dec
add
roll
in
cmp
sub
cmp
ror
fisubl
cmp
xchg
jbe
data16
adc
fbstp
jns
insl
fsubrs
cmpsl
and
cwtl
imul
rcl
pop
sti
insb
cmpsb
arpl
cmc
xor
cmpsb
lods
out
pusha
jo
or
call
mov
cmp
js
xchg
adcl
mov
adc
push
jmp
inc
mov
and
inc
push
xor
or
lock
ficoms
push
mov
mov
push
xlat
cmp
into
popf
mov
insl
jmp
xor
cltd
out
imul
mov
adc
add
add
mov
mov
pusha
and
movsl
jmp
push
insl
xchg
hlt
fwait
pop
lahf
setb
cwtl
cs
stc
mov
movsb
imul
add
cmc
sub
mov
push
call
push
xor
and
in
dec
dec
fcomps
mov
mov
sbb
pop
mov
aam
adc
stos
pop
mov
dec
adc
js
out
jns
iret
push
pop
int
popa
adc
lds
jbe
outsl
mul
scas
jp
xor
cmpb
push
pop
cmp
xchg
int3
lcall
or
rorb
in
addb
mov
sub
or
mov
jle
dec
mov
cmovp
lcall
test
pop
xchg
jecxz
adc
je
rolb
ja
cmpsl
std
fwait
imul
out
pushf
push
lds
cmc
jp
dec
scas
xor
xchg
inc
pop
insb
add
cmp
dec
dec
fidivrs
fldenvs
dec
testb
fildll
xorl
push
enter
jnp
aas
mov
jle
scas
hlt
adc
sahf
add
push
xor
js
bound
loopne
cmpsb
cld
mov
iret
jg
hlt
int
add
lods
lock
add
aas
sti
mov
bound
arpl
stc
clc
jbe
push
sbb
pop
dec
inc
xor
shrl
inc
mov
popa
sahf
sub
test
mov
mov
or
pop
dec
lea
xor
mov
push
sbb
dec
or
lret
push
sbb
mov
scas
and
mov
mov
mov
mov
out
cs
enter
scas
lods
jp
out
add
pop
stc
inc
and
es
dec
and
mov
cs
iret
mov
or
stos
sbb
add
pop
mov
inc
mov
mov
or
and
pop
loopne
rclb
jno
push
andb
push
movb
xor
adc
xor
xchg
lcall
xchg
push
rcl
mov
imul
outsb
and
cmp
xorl
mov
sahf
xor
cld
mov
sbb
cmp
jns
pop
loope
sbb
push
push
mov
shlb
and
inc
dec
cmp
adc
lea
lods
pop
fs
loopne
add
cs
or
jmp
pop
jae
in
push
add
xchg
sbb
addl
jmp
mov
push
mov
scas
cmpb
das
mov
xor
lahf
cmp
push
jecxz
ljmp
xchg
jmp
xchg
mov
adc
mov
fdivrl
fsts
mov
adc
dec
movsl
and
xchg
cmp
repnz
xchg
test
sbb
mov
sbb
pop
lock
jecxz
push
sub
lret
cmc
adc
ret
into
xlat
stos
out
loope
mov
mov
bound
xchg
push
psadbw
lods
mov
mov
fnstsw
scas
inc
adc
jge
imul
or
pop
fidivl
mov
cmp
inc
sbb
lods
loope
jo
adc
pop
jle
enter
dec
mov
mov
pop
sub
clc
sbb
xchg
leave
jge
fwait
or
pop
adc
add
mov
arpl
aad
jle
xchg
das
cwtl
popa
dec
leave
sub
sub
lcall
and
mov
push
adc
cli
and
mov
enter
jo
add
mov
mov
enter
sahf
orb
out
jno
xchg
and
daa
push
les
xchg
insl
icebp
sbb
jge
mov
and
sbb
arpl
out
divl
rcrl
xor
pusha
adc
dec
mov
pushf
lock
xor
dec
sbb
add
dec
adc
or
sbb
adc
in
jmp
popf
jno
cs
sub
outsl
daa
rsqrtps
xchg
dec
sub
and
repnz
dec
pop
pop
hlt
add
stos
leave
cli
loopne
jmp
jno
ljmp
adc
inc
es
data16
stos
in
in
add
sub
xchg
jo
push
jno
or
lret
push
mov
jb
aas
fisttps
hlt
loop
xor
jns
popf
es
mov
sbbb
imul
decl
mov
jl
repz
cmp
add
shll
push
push
stos
inc
mov
addr16
cmc
xor
test
sub
cwtl
inc
fmuls
mov
cmp
cwtl
clc
stc
fists
aad
gs
repnz
loop
dec
nop
lods
in
rcll
dec
mov
mov
pop
nop
push
das
cmp
dec
nop
out
std
gs
mov
testb
sub
cmpsb
and
adc
xor
dec
in
rcr
leave
sbb
pop
jl
xchg
mull
xor
mov
inc
rolb
inc
rcrl
mov
lret
add
cs
scas
cmp
inc
xchg
nop
mov
jbe
adcl
dec
imul
xor
cmp
cld
aam
cmpsb
in
mov
rcrl
mov
in
das
lret
jmp
cmp
lea
mov
shlb
loop
imul
push
cli
repz
sbb
fwait
cmp
fsubr
cmp
movsb
aas
cmp
or
adc
dec
jmp
shl
cmc
pop
dec
fsts
mov
xor
push
cli
pop
outsl
into
dec
push
xchg
out
outsb
jmp
xchg
sbb
inc
cwtl
cmp
jns
iret
in
jne
lret
mov
adcb
lods
in
notb
jbe
xchg
ss
jle
pop
push
add
inc
movsb
add
lcallw
scas
aam
xor
xor
inc
rolb
jnp
jge
lret
push
and
fcom
imul
mov
xor
mov
in
filds
lods
shll
popa
in
mov
sbb
xchg
adc
cld
imul
fnstsw
cmpsl
jno
outsb
push
call
insl
test
pop
jno,pn
insl
int
mov
rcll
mov
pusha
repnz
jo
cmp
dec
test
icebp
add
lods
test
jmp
out
imul
repnz
push
aas
ds
fimuls
adcl
stc
or
das
mov
mov
push
stc
dec
imul
pop
or
cmp
lods
pop
int3
xchg
in
and
out
das
add
inc
cmp
lock
inc
stc
cmc
jle
and
jnp
dec
mov
test
stos
push
mov
test
fildl
rcl
and
scas
imul
js
scas
adc
loope
lahf
fisttpll
js
pop
jl
add
and
mov
loop
mov
add
lret
pop
fstps
mov
mov
xchg
test
sahf
and
mov
xchg
inc
cmp
jnp
jne
and
push
lcall
xor
lret
add
xor
sub
test
push
rcrl
enter
imul
leave
outsb
and
jg
test
mov
sbb
jae
jbe
int
sbb
jns
push
cmp
loope
jnp
pop
enter
cmc
sbb
je
mov
cwtl
lahf
dec
out
rolb
mov
jl
adc
push
add
mov
or
je
movsl
push
or
jmp
adc
mov
in
jno
dec
int3
push
push
jnp
xor
jmp
gs
aas
imul
push
int3
sbb
adc
call
fscale
clc
lock
test
xchg
icebp
xor
push
out
outsb
ficoml
xlat
xchg
in
mov
imul
xor
data16
push
jbe
ja
into
mov
pop
mov
movsb
mov
xchg
sti
or
inc
mov
cmpsb
outsb
insl
inc
xor
push
jae
mov
insb
adc
mov
pushf
adc
and
push
cmp
out
push
ss
jp
lret
rorb
mov
hlt
cmp
mov
mov
sub
push
mov
add
enter
pop
add
sarb
xor
ja
mov
xchg
mov
mov
cmp
xor
cmp
mov
dec
aam
rcr
push
repnz
dec
gs
ficompl
js
lcall
pop
test
push
push
pop
aaa
pushf
lea
jge
jae
fs
sub
ret
bound
mov
mov
jg
push
aad
pop
roll
pusha
je
add
aaa
pop
aas
insl
out
mov
inc
mov
cmp
scas
out
and
xor
jecxz
pusha
cmp
fisubs
xchg
push
out
in
lcall
imul
movsl
out
dec
orl
and
mov
ret
dec
clc
stc
xor
cli
add
adc
add
in
inc
orb
mov
cmp
outsl
lock
pop
outsb
add
xchg
mov
mov
pop
pop
into
xchg
sub
push
adc
and
data16
loopne
ret
xchg
adc
lea
inc
mov
jl
or
pop
ficoml
loop
shr
bound
incb
out
add
icebp
icebp
or
pop
mov
sbb
or
jp
es
iret
cmp
std
in
and
dec
mov
repnz
movsb
push
dec
in
imul
or
test
es
imul
jbe
fcoms
sbb
jo
and
clc
movsb
mov
cld
movsl
jmp
or
fs
scas
rcll
dec
xchg
popa
pop
fwait
sub
fiadds
addr16
aam
dec
xchg
js
iret
call
xchg
jnp
ret
push
add
xchg
jno
xchg
scas
pusha
pop
cmp
movsl
rcrb
pop
jns
sbb
push
ljmp
inc
aas
lea
sbb
ret
fcmovne
inc
adc
icebp
jb
out
pop
lods
nop
xor
test
pop
push
xchg
jns
rolb
cmpsb
test
adc
mov
ja
mov
sbb
hlt
adc
adc
pop
das
jecxz
mov
cmp
jmp
fnstcw
sbb
and
lret
mov
jo
xchg
mov
test
cmp
pop
xor
jmp
inc
aam
dec
sbb
sub
int3
loope
add
stc
test
jp
dec
lds
mov
cmp
arpl
and
movsb
lods
fmull
mov
sbb
and
mov
xor
jp
iret
adc
test
pop
les
mov
ja
pop
inc
inc
add
fmull
xor
or
mov
add
daa
sbb
adc
movsb
stos
mov
ljmp
add
iret
inc
jo
lret
aaa
ss
adc
lea
mov
test
arpl
cli
stc
fwait
daa
xchg
call
cmp
pop
inc
and
mov
fyl2x
ljmp
push
jo
rorb
push
jl
sahf
shl
in
repnz
ret
adc
test
subb
lds
out
pop
or
add
jae
xor
push
loope
cmpb
scas
pop
ret
sub
lea
incl
inc
xor
fstps
add
push
sub
push
lock
aad
inc
jle
sbb
mov
push
xchg
rol
cmp
pop
mov
xchg
and
jae
push
jg
and
or
jae
mov
ss
testb
sahf
enter
out
and
jmp
dec
imulb
jne
aad
xchg
push
imul
add
xchg
stos
xor
sbb
daa
lcall
lods
cs
loopne
push
sub
aas
out
cmp
nop
xor
imul
in
pop
lret
sarb
ljmp
jp
jbe
and
sbb
xchg
enter
jmp
inc
int3
arpl
or
shll
add
mov
xchg
es
mov
mov
xor
outsb
cmpsl
rcrl
xchg
ljmp
pop
cmpsl
xchg
xor
mov
lcall
call
add
lock
jbe
lret
and
scas
scas
adc
and
sahf
jbe
and
lret
mov
stos
testl
aad
xor
push
jo
xor
mov
pop
cs
imul
fcmovu
test
icebp
add
stc
sub
fnstsw
popa
test
fcmovne
test
and
mov
pop
shlb
cmpsl
xchg
jmp
arpl
mov
xchg
push
xchg
pusha
push
inc
int
mov
mov
mov
repz
rol
xchg
outsl
and
mov
lret
lret
mov
sti
lds
mov
aam
xchg
jp
leave
enter
int3
inc
mov
aad
push
in
popf
addb
cmp
jge
push
xchg
jns
push
sbb
ss
loop
jo
test
and
mov
icebp
popa
icebp
call
pop
outsl
jge
dec
xor
insb
in
lods
or
jmp
xor
aas
sahf
aad
fs
dec
imul
enter
mov
adc
cmp
push
cmp
push
mov
sub
jge
add
jg
xchg
sbb
lea
aad
cmp
xlat
pop
cmc
repnz
aaa
mov
push
pop
mov
sub
test
imulb
call
add
cmp
mov
sub
xor
lea
mov
pop
pop
sub
nop
scas
std
bnd
jb
idivl
test
mulb
pop
cmpsl
xor
and
xor
dec
push
jl
cmc
mov
push
movl
sbb
dec
mov
dec
dec
or
mov
and
imul
test
xchg
fistpll
nop
and
dec
mov
popf
idivb
roll
xor
inc
out
dec
sbb
xor
test
lret
pop
cmp
adc
inc
cmp
inc
adc
push
pusha
mov
dec
cmp
mov
shl
incl
fldenv
std
and
idivl
fsubr
dec
xor
ret
push
or
ror
pop
push
jge
into
jge
cmp
push
jb
mov
push
pusha
mov
mov
cmp
mov
jo
jge
stc
test
and
test
fidivrs
call
hlt
mov
out
aam
cli
xchg
cmp
and
xor
mov
pop
xor
lods
push
cld
mov
imul
mov
sbb
sub
bnd
popa
scas
lcall
lcall
cltd
clc
push
fldt
pop
push
add
subb
adc
clc
adc
div
pop
scas
push
inc
adc
dec
sti
test
mov
or
rorl
sbb
jmp
xchg
mov
sub
and
sub
add
push
out
fwait
aas
mov
fadd
add
push
pusha
add
adc
sub
adc
xor
xchg
push
cmpsb
cmc
or
mov
fadd
add
inc
shll
add
sub
cli
sub
imull
shl
jl
and
pop
xchg
int3
ret
jnp
lods
daa
pop
pusha
fwait
add
adc
pop
out
push
jmp
xor
cs
adc
sbb
pop
push
or
imul
jae
push
cld
pop
ret
xor
movb
addr16
sub
cmpsl
popl
mov
in
sbb
mov
jecxz
cmpsb
inc
out
ret
outsl
pusha
push
jl
jmp
sbb
enter
or
in
popa
jno
dec
jl
push
push
jmp
scas
mov
mov
sbb
sub
adc
cmpsl
inc
jns
stos
xchg
mov
cmc
cmp
scas
cmpsb
jge
push
mov
push
incl
insb
pop
clc
nop
adc
jo
xor
mov
or
mov
push
inc
clc
mov
shrl
sub
jae
dec
insl
int3
mov
jp,pt
mov
fistl
or
jb
push
repz
daa
jp
int
int3
jl
push
out
sbb
testl
idivl
insl
gs
mov
stc
push
cmp
aas
pop
sbbb
in
mov
sbb
aam
cmpl
mov
dec
dec
jg
xchg
jae
sti
dec
dec
cltd
xchg
cmp
jne
cmp
pop
cmp
mov
int3
sub
enter
add
lods
mov
repnz
pushf
das
call
orb
sbb
push
sbb
fdivs
mov
xchg
inc
sbb
pop
jnp
jo
xor
inc
les
push
and
cmp
ret
add
dec
mov
add
outsb
sub
movsl
cmpsl
pusha
stos
sbb
dec
push
stos
andb
inc
lods
push
mov
cs
pop
add
popf
dec
pop
push
cmp
in
stos
fs
imull
stos
pop
mov
xor
jno
test
sub
cltd
cwtl
xor
xchg
sbbb
mov
out
mov
in
sub
fidivs
in
jbe
or
icebp
or
leave
int3
idivb
cwtl
pop
xchg
mov
cs
rcrl
mov
js
push
inc
sti
pop
mov
push
cmp
xor
lock
adc
es
fs
jmp
xor
insl
pop
or
enter
and
sbbl
aad
rcrl
lds
mov
dec
push
mov
loop
jo
jl
ret
insb
push
test
mov
lahf
cs
imul
pop
or
sbb
sbb
out
inc
subl
or
or
pop
dec
and
jp
or
or
jmp
mov
inc
adc
outsl
add
cmpsb
lcall
test
sbb
mov
inc
js
fs
outsl
pop
push
mov
sbb
fisttpll
mov
fucomip
xchg
pop
fld
mov
mov
aaa
js
sub
xor
mov
shlb
lret
ret
push
icebp
push
js
scas
insb
sub
and
fisttpl
mov
fidivrs
imul
cld
mov
mov
test
or
es
cltd
stc
dec
xchg
les
add
pusha
and
add
adc
daa
cli
test
stos
xchg
popf
mov
and
fs
ss
in
xchg
inc
xlat
fisttpll
push
stos
filds
dec
int
jecxz
stc
movl
push
sar
out
faddl
aaa
jb
sahf
jae
xor
adc
or
push
sbb
sbb
jg
in
iret
pushf
push
lock
imul
xor
xchg
cld
rolb
jp
icebp
leave
cltd
fucom
fiaddl
scas
jns
jo
jmp
inc
cltd
xchg
aas
inc
dec
fidivrs
xchg
loope
fnstcw
xor
shlb
mov
jnp
shrb
call
ret
loop
jmp
sub
and
dec
pop
outsb
dec
gs
test
fwait
add
cmpsb
xchg
jmp
inc
push
xchg
in
fsub
jmp
pop
push
lods
sahf
dec
and
xor
pushf
aaa
and
jo
ret
pop
or
lock
test
push
mov
daa
pop
test
dec
or
dec
int3
xchg
out
lret
pusha
sub
inc
dec
fcoml
sub
cmp
sbb
ja
add
test
nop
pusha
adc
jbe
fdivs
pop
push
mov
movsb
test
fucomip
test
clc
or
fs
sub
pop
ret
data16
or
call
push
xchg
insb
xor
shlb
enter
and
scas
and
and
int3
adc
jecxz
test
lea
inc
mov
outsl
mov
into
test
scas
sub
inc
cmpsb
adcb
mov
xchg
mov
pop
int
jmp
ror
ds
dec
inc
adc
inc
jo
mov
rcrb
cli
cwtl
jb
mov
cmc
lea
push
mov
jno
mov
dec
mov
shrl
push
mov
pushf
jp
stc
lds
or
pop
push
mov
inc
cs
pop
sbb
jg
mov
dec
pop
pop
and
mov
push
mov
inc
scas
addr16
or
in
lock
mov
test
pop
add
dec
fcmovnb
stos
cmp
scas
cli
out
popf
and
in
xor
test
adc
repnz
mov
cmp
jae
test
aaa
aam
rclb
push
in
cltd
je
cmpsb
push
and
or
jp
cmp
aaa
xchg
fwait
push
repnz
mov
call
lcall
cmp
lcall
jmp
js
mov
mov
cltd
out
rcrb
push
in
mov
fcmovnbe
sub
sbb
mov
dec
das
add
jne
xor
sub
cltd
mov
mov
mov
clc
adc
xchg
cmpsl
and
inc
adc
dec
inc
mov
aam
outsl
mov
push
data16
outsb
ret
xchg
ret
xor
xor
pop
loop
aas
inc
xchg
or
imul
lea
push
lea
jne
mov
movsb
pop
push
sbb
dec
jnp
and
sbb
fcomps
cmpsl
fisubl
fwait
movsl
pusha
dec
fwait
jae
lods
or
mov
xor
daa
sti
add
lea
daa
mov
into
addr16
jge
test
popa
inc
pop
sbb
xor
inc
adc
call
sbbl
pop
sub
pop
into
mov
dec
inc
xchg
repnz
repz
cmp
xchg
mov
push
xchg
mov
cmp
gs
mov
stos
xor
movsl
sbb
test
test
icebp
mov
cmp
lret
into
cmp
push
stos
push
clc
pop
mov
pushf
or
jno
xor
std
push
xchg
popf
aam
inc
mov
testl
xchg
mov
negl
mov
ret
mov
push
and
iret
mov
or
sbb
pop
test
lret
lahf
mov
and
jbe
xchg
jg
xchg
mov
inc
lock
int3
mov
ljmp
pop
adc
or
adc
sub
sub
cmp
movsb
fsubl
pop
mov
int
or
movsb
and
jae
adc
or
out
dec
mov
mov
roll
aad
js
out
insl
orl
sub
add
inc
sahf
or
cltd
ret
xor
test
fnstenv
push
fistpl
popf
outsl
inc
mov
mov
movsb
pop
test
adc
jmp
hlt
cwtl
sbb
stos
shll
cmpsl
pop
mov
push
xor
pop
xchg
sub
adcl
lea
dec
xlat
push
mov
pop
xchg
lods
mov
std
mov
cmp
out
push
stc
sub
and
or
aas
jne
into
mov
jge
cltd
subb
jmp
inc
xchg
in
dec
decb
push
pop
push
dec
jnp
test
outsb
sub
leave
dec
lea
sub
xor
or
inc
inc
sbb
je
lods
lret
repz
adc
jle
cwtl
add
cmpl
mov
adc
cli
push
adc
call
movsl
ret
rorl
leave
push
cmpsb
hlt
lods
cltd
sub
popa
scas
mov
push
sbb
adc
jb
decl
fchs
mov
inc
jae
loop
adc
mov
in
aam
inc
pop
imul
cmovbe
out
or
cmpsl
ljmp
data16
dec
pop
sbb
sub
xchg
subb
fbstp
mov
push
pusha
and
hlt
shrb
xor
sub
add
xchg
repz
daa
clc
cmp
filds
sub
mov
ds
pop
mov
jns
lret
test
add
sub
cwtl
dec
cmp
add
out
mov
xlat
dec
in
sahf
loopne
lret
xlat
mov
pop
jmp
imul
dec
xchg
mov
sarb
push
sbb
xchg
ja
outsb
sub
popa
add
lret
jmp
and
hlt
xor
gs
inc
xor
out
mov
push
jle
in
add
testl
sbb
adc
int
mov
outsl
jge
sub
pop
addr16
loop
adc
pop
aam
dec
mul
adc
pop
dec
xor
adc
mov
in
push
and
test
divl
add
mov
lcall
repnz
ds
fmul
js
cmp
call
add
mov
fcmovnbe
cmc
leave
jg
jo
push
xor
pushf
pop
fs
push
xor
jbe
inc
shl
fsubs
aad
xchg
push
lock
rcrb
cmpsb
mov
test
add
aas
rclb
mov
inc
or
out
xchg
daa
shlb
and
shl
sub
add
pusha
xor
lahf
repz
xor
mov
push
into
sub
lcall
cmpl
mov
mov
pop
add
cwtl
cmp
leave
xor
push
or
dec
loop
mov
xor
fwait
ljmp
mov
mov
clc
jo
call
shrb
testb
mov
cmpsb
jnp
mov
sub
rol
negb
or
mov
add
ficoms
movsb
rcl
daa
sub
out
mov
mov
jno
fwait
push
jle
pavgw
or
iret
call
sbb
inc
jb
fcomps
outsb
fcoml
xor
or
pop
add
fs
pop
sub
mov
mov
mov
sbb
adcl
mov
shll
and
dec
les
and
push
lods
ds
fnstcw
jl
or
fidivl
sar
fcmovnu
movsb
ja
push
adc
js
lret
out
sti
ffreep
pop
and
addl
xchg
adc
mov
imul
rolb
xor
xchg
loope
in
arpl
mov
test
rcrl
sub
repz
js
sti
mov
jmp
add
push
jmp
adc
push
cld
adc
inc
dec
sbb
sub
jg
xchg
movsb
jle
movsl
fmulp
mov
nop
pop
dec
rcr
icebp
push
cwtl
add
inc
push
inc
rclb
pop
out
xchg
jo
inc
cmp
mov
adc
repnz
not
jns
out
mov
inc
lods
repz
ret
cmp
pop
orl
ret
mov
js
xchg
fldcw
scas
mov
loope
ficoml
lret
rorb
lcall
jp
dec
sbb
sbb
dec
cmpsb
cmp
xchg
mov
leave
jo
dec
xchg
fwait
lods
push
sub
adc
mov
shr
inc
or
andl
jmp
outsl
roll
cmp
cmpsl
imul
mov
outsl
in
lret
out
cmp
cmp
sti
es
cmp
sbb
lcall
test
aas
mov
testl
mov
pmuludq
aaa
cltd
jbe
mov
push
stos
popf
loop
push
inc
rcrl
sbb
inc
loop
jmp
and
jnp
mov
testb
mov
push
inc
out
push
jnp
fwait
mov
adc
imull
mov
test
jl
gs
adc
xor
shll
cs
faddl
jmp
and
dec
cli
es
cli
mov
shrl
popf
mov
or
in
mov
dec
in
ret
sub
add
jp
ja
xchg
mov
outsl
inc
or
loopne
addb
imul
pop
adc
mov
aam
rcrl
sti
add
xchg
add
ret
test
cmc
cmp
sti
test
sbb
enter
aam
out
push
dec
fcmovne
pop
icebp
cmp
jmp
lds
in
scas
cmpb
mov
mov
jecxz
cmp
mov
cli
mov
jno
jb
or
sbb
mov
push
mov
pop
fstl
ficoms
xchg
fisttpl
or
xchg
mov
jecxz
lret
shl
pusha
adc
mov
jo
shrd
dec
jp
pop
push
push
pop
bound
cmp
xchg
inc
xorb
sub
jns
loopne
add
inc
aas
push
out
xor
pop
notl
xor
cmp
incl
clc
jl
addr16
out
inc
int3
je
jmp
adc
push
and
sub
outsl
xor
orl
add
adc
jge
sub
and
xlat
je
icebp
mov
lock
pop
cmp
sti
imulb
add
and
gs
rorb
inc
cmp
and
xchg
pusha
dec
das
test
push
mov
mov
pop
dec
and
cli
or
aad
data16
sub
enter
inc
inc
stos
out
incb
xor
mov
sbb
cmc
jbe
push
xchg
adc
pushf
in
pop
dec
mov
pop
mov
xor
out
xor
lods
repnz
in
sbb
mov
mov
mov
enter
sbbb
fwait
lahf
nop
adc
es
mov
das
test
pop
pop
and
insl
jno
inc
pop
xchg
loope
mov
test
xlat
pop
jb
jl
lds
jo
inc
mov
xor
jmp
mov
sbb
pop
clc
sub
mov
xor
fiadds
loop
fidivrl
movsl
dec
push
jb
repz
sub
imul
hlt
xchg
pop
mov
rorb
iret
iret
adc
pop
cltd
cmp
dec
outsb
jl
push
cld
scas
sbb
cmp
test
mov
jle
add
std
sub
sbb
lods
cmp
cmp
xchg
sarb
pop
ljmp
push
xor
push
lret
add
aad
fcomip
sub
mov
jecxz
sti
mov
loope
stc
enter
in
push
inc
push
clc
xchg
daa
pop
inc
dec
fs
idivl
cs
cltd
lods
add
fsubr
xor
mov
mov
out
jl
or
call
movsl
inc
add
adc
pop
mov
icebp
pop
fs
daa
aas
aaa
xchg
fistl
xchg
adc
cli
or
popf
test
push
add
and
fcmovnb
and
adc
in
jle
in
iret
lods
and
push
out
jnp
mov
pop
scas
xor
out
cmc
sub
dec
iret
cmp
jecxz
shll
sar
inc
fdivs
std
je
jno
dec
xor
pop
inc
push
das
cld
out
cmp
cmpsb
loope
lahf
fwait
jne
xchg
rcll
inc
jmp
int
dec
mov
leavew
pop
or
cmp
mov
out
je
push
fiaddl
pop
inc
insb
lahf
mov
mov
mov
fs
cmp
jno
les
mov
xchg
and
repz
stos
pusha
cmp
call
mov
aam
das
or
sbb
hlt
jmp
cmp
jae
int
push
insb
jl
iret
xor
icebp
repz
sub
push
lea
aas
add
movsb
xchg
sahf
mov
std
adc
or
add
aaa
push
pushf
es
mov
ds
or
stos
xchg
scas
rcr
inc
scas
inc
mov
or
lods
leave
dec
stc
or
xchg
ja
dec
mov
push
and
pop
mov
cmpsl
loopne
aaa
dec
mov
mov
adc
or
pop
call
dec
adc
hlt
js
es
mov
scas
sbb
hlt
insb
cltd
arpl
sbb
movsb
test
and
pusha
jb
hlt
jmp
push
popa
sub
imul
xor
sub
and
into
addl
pop
mov
adc
imul
gs
cld
ljmp
dec
std
mov
movsl
gs
add
scas
sub
sbb
sbb
imull
adc
pop
and
mov
sub
iret
mov
js
movsb
cmpxchg
sub
mov
sarl
or
icebp
inc
inc
xor
pushf
dec
stos
aad
xor
or
and
hlt
jp
or
ffreep
push
pop
out
pop
xlat
xchg
cmp
pop
mov
mov
jne
sti
loope
hlt
call
fildll
mov
cmp
mov
nop
wrmsr
mov
mov
lahf
and
incb
cmp
xchg
lahf
pop
push
mov
mov
pop
inc
lock
inc
jne
cmpsl
shll
test
punpckhwd
xchg
rcrl
repz
mov
mov
adc
cmp
push
mov
pop
repnz
std
test
mov
sbb
sbb
xchg
jp
dec
push
das
in
pop
inc
jp
push
bound
repnz
dec
push
sbb
popf
xor
scas
xlat
les
and
xor
movsb
pop
ljmp
repz
and
pop
pop
mov
mov
jmp
adc
aam
sub
das
stc
jp
fidivl
cmp
sub
gs
loopne
sbb
js
je
stc
xchg
dec
imul
cs
fdivrl
xor
or
and
push
and
or
pop
shl
aas
shll
xchg
xor
addl
sahf
mov
xchg
cmc
lea
in
mov
test
shl
stos
scas
xchg
pusha
xchg
ror
add
adc
loop
test
aaa
adc
arpl
mov
jmp
jecxz
mov
out
icebp
aam
std
lds
fistl
pop
rolb
out
dec
cltd
add
adc
push
push
xchg
cmp
and
push
jge
add
and
push
xchg
inc
pop
ja
in
and
or
dec
es
js
mov
jb
gs
jns
sbbb
test
loope
ljmp
repz
jb
movsb
ficompl
inc
jge
mov
dec
adc
mull
fmul
inc
add
lret
push
xor
insl
inc
jbe
leave
fcomps
push
orl
mov
inc
pop
cmpsl
lret
mov
jbe
pop
movsl
notb
int
mov
dec
adc
mov
jnp
and
push
xchg
jbe
cmp
mov
mov
rolb
adc
icebp
aas
inc
jg
inc
inc
rclb
cmp
mov
imulb
add
outsl
push
fwait
sub
xchg
mov
aaa
cmp
sar
push
xchg
cmp
jle
mov
push
push
js
pushf
out
sub
inc
mov
pop
fldl
rcll
adc
nop
addr16
loopne
mov
push
and
insl
pop
push
movsb
add
int
sub
jnp
sbb
add
pop
adc
inc
pop
or
jecxz
movsb
test
outsl
dec
lea
fdivrp
loopne
xchg
imul
mov
stc
mov
pusha
stc
xor
dec
push
xor
mov
lds
cmpsl
enter
mov
adc
push
cld
sub
push
cmpxchg
std
hlt
negb
xchg
pop
dec
adc
and
in
loope
xchg
mov
leave
jl
jb
fsubrl
dec
sti
shrb
aas
stos
hlt
je
xchg
jb
ror
sub
lds
and
pop
popf
jecxz
push
pop
sub
sti
cmpsl
out
adc
adc
fdivrs
leave
jae
adc
mov
push
and
in
pop
adc
movsl
mov
adc
jo
pop
push
push
and
inc
mov
inc
and
pop
jp
push
fisubl
sub
add
sbb
xchg
loope
mov
adc
stos
sti
push
xchg
leave
dec
push
dec
pop
cmp
test
jmp
mov
in
mov
push
idivb
scas
mov
imul
pushf
sbb
xor
pop
push
enter
mov
movsb
lcall
push
mov
sbb
loop
and
push
jmp
pop
xor
shrb
pop
mov
fstps
pop
dec
hlt
cltd
ja
inc
fisubrs
cmovge
fwait
sti
je
lahf
jns
cs
out
sbb
mov
adc
sub
xchg
repnz
out
xrelease
aam
adc
fwait
sbb
and
lods
loop
insb
sbb
xchg
into
mov
imul
adc
pusha
fs
inc
xchg
push
push
jle
cmc
adc
sub
or
and
cmp
in
sti
dec
or
pop
dec
push
xor
xchg
sub
mov
das
mov
das
mov
pop
or
shrb
add
call
ret
cmpl
xor
movb
cmp
push
xchg
imull
xor
lock
in
pop
cmpsb
mov
cmp
addr16
add
lds
mov
mov
jne
sahf
xchg
mov
insl
add
mov
cmpsl
repnz
jae
xor
loope
repnz
jns
test
movsl
push
bound
lcall
adcl
jne
xchg
rclb
cmp
dec
lahf
icebp
or
add
das
mov
jmp
mov
xor
cmp
or
popf
push
mov
mov
inc
add
lds
mov
push
mov
adc
das
xchg
and
into
addr16
aaa
out
pop
popf
mov
pop
je
xchg
icebp
jnp
xchg
imull
adcb
mov
inc
shlb
or
outsb
xor
les
lock
repz
sub
dec
pushf
clc
jle
std
ljmp
jnp
pop
sub
pop
sub
vpunpckhqdq
dec
addb
fwait
dec
insl
mov
pop
inc
popa
outsb
jecxz
cmp
cmp
movsl
jg
jo
xchg
loope
hlt
push
test
inc
scas
cmp
imul
je
mov
insb
mov
xchg
push
outsb
es
ja
popa
cmp
shlb
and
inc
jbe
push
cwtl
fcmovnu
mulb
adc
inc
clc
lahf
push
jmp
aam
sbb
sbb
test
inc
je
mov
int
popf
jae
sbb
lods
cmc
push
fcmovnbe
sti
loop
push
mov
movsb
add
inc
aad
aaa
je
dec
ds
pop
jle
aam
addl
in
into
dec
js
fnstsw
xor
push
ret
xchg
in
xor
jmp
mov
add
push
jl
add
mov
dec
fcompl
frstor
js
ds
aaa
fnstsw
lret
sti
in
jp
and
andl
imul
xor
xchg
inc
aas
jmp
jnp
popa
dec
sub
dec
add
xor
cmp
push
jmp
out
test
fdiv
sub
ja
push
push
int
jg
out
pop
test
roll
fdiv
fstpl
jb
fdivl
push
inc
mov
out
mov
das
shrl
movsb
pusha
inc
pop
clc
cli
fbstp
rcrl
adc
pop
mov
sbb
jnp
push
mov
mov
xchg
mov
jge
push
outsl
cmp
or
sbb
xlat
push
test
lea
mov
xchg
push
fsubp
test
adc
enter
push
dec
pushf
sub
xor
stos
cmc
stos
sub
jmp
add
ret
or
sub
int
pop
lret
adc
divl
dec
scas
cltd
jns
jmp
lcall
out
mov
rcr
cli
out
mov
jbe
lock
int
inc
jae
shrl
ret
lcall
mov
cmp
xor
adc
inc
sub
test
mov
dec
push
and
gs
shl
dec
or
in
aad
mov
insl
icebp
das
mov
sbbl
cmp
ja
jae
clc
arpl
shll
sbb
or
dec
dec
push
call
add
in
adc
add
aad
jbe
into
in
pop
sbb
xor
push
jecxz
inc
push
nop
sbbb
fistpll
repnz
pushf
mov
out
in
adc
fmuls
cmp
arpl
xchg
or
xchg
ficoml
decl
ja
inc
dec
iret
hlt
jns
pop
push
fcomps
push
xor
sub
xchg
testl
xchg
icebp
rcl
jge
sbb
sbb
sub
or
imul
xchg
js
jg
lcall
ret
or
mov
in
sbb
or
insb
sarb
xor
cmpsb
js
or
sub
fwait
sub
adc
iret
mul
add
cs
push
jnp
xchg
test
mov
dec
mov
das
imul
fildl
movsl
shr
je
push
mov
mov
repnz
cs
mov
jae
mov
imul
adc
or
cmp
xchg
mov
sub
adc
jle
outsb
push
roll
test
push
cltd
pop
adc
shrl
mov
and
in
mov
mov
jl
jmp
push
pusha
mov
pop
imul
cmp
xchg
mov
cmp
sbb
jmp
std
mov
cltd
pop
mov
jnp
sbb
sub
lds
jbe
cmp
lret
jns
adc
pop
fxch
lds
out
jge
fwait
mov
shlb
jb
xor
inc
xor
sbb
mov
pop
push
adc
cmpsl
mov
imul
pop
lret
sub
cmp
pop
lods
mov
and
mov
cmpsl
stos
jae
or
insb
stc
pushf
movsb
subb
xor
or
mov
sub
stc
and
out
enter
aas
imul
xchg
xor
and
xlat
adc
in
rcrl
jbe
cmp
pop
dec
push
pop
adc
sbb
sbb
outsb
aaa
sbbl
fwait
mov
mov
pushf
and
ljmp
scas
pop
cmp
push
add
jecxz
jne
or
nop
jo
das
pop
out
inc
xacquire
fs
jbe
cmpsl
xchg
fs
adc
shll
or
mov
aas
fistps
in
out
inc
pop
inc
xchg
mov
loopne
or
jge
or
mov
lods
stos
out
inc
lcall
fstpl
adc
cmpsl
xor
in
movsb
je
ss
add
loopne
xchg
push
cmpsl
out
cmp
stos
mov
sub
mov
inc
cmp
icebp
mov
out
insb
sbb
shll
shl
adcl
das
jle
fldcw
roll
pop
iret
ds
or
xor
or
pop
mov
cmpsl
pop
out
jae
jecxz
xchg
or
in
iret
sub
scas
mov
adc
loopne
and
shufps
mov
and
dec
and
or
or
jno
cmp
insl
lock
xor
pop
daa
mov
in
cltd
fisubl
outsl
pushl
mov
jmp
call
adc
mov
inc
inc
or
cmp
out
inc
pusha
mov
xchg
cwtl
insl
sbb
imul
add
xorb
push
sub
daa
or
pop
xlat
stos
mov
out
and
xchg
push
xchg
pop
cltd
jns
xchg
sub
enter
mov
shll
add
js
mov
jle
fisubrl
xor
movsb
in
fcmovnu
fsubl
mov
cmpl
mov
inc
and
pop
mov
loop
jecxz
mov
ja
leave
cmpsl
mov
push
fsubrs
jmp
ss
sbb
icebp
call
daa
pop
sbb
or
gs
call
push
sbb
cmp
ltr
je
and
rcrl
std
jmp
into
mov
pop
imul
aad
sbb
subb
sti
pop
stos
inc
out
sbb
dec
daa
in
sbbb
repnz
cmc
movsl
rolb
fistpll
add
jno
or
hlt
mov
and
lcall
cmpsb
inc
arpl
rcrl
cwtl
rclb
cmp
std
and
mov
inc
pop
xchg
stos
mov
and
outsb
out
into
and
rol
mov
mov
movsb
mov
cmpsb
sub
js
and
cmp
pop
cld
scas
pusha
adc
inc
ret
jge
cmc
push
sub
mov
dec
popa
in
jae
lea
out
mov
addr16
rorb
vorps
push
js
jbe
scas
lock
cmp
imul
das
pop
inc
repnz
mov
jp
pop
pop
mov
cbtw
sbbb
adc
test
out
sub
out
xchg
testl
cld
int
ret
xor
scas
mov
ficoms
aas
cli
ljmp
jae
bnd
insl
pop
loopne
shll
mov
sahf
cmp
xchg
bound
mov
dec
flds
cli
je
cli
loop
jno
fdivs
xor
ja
add
adc
fwait
idivl
inc
mov
push
shlb
xchg
mov
xchg
pop
test
in
xchg
out
stos
pop
fstl
mov
pop
or
out
pushf
or
inc
jle
in
xor
aad
adc
or
cwtl
mov
rorl
fldt
lahf
pushf
or
jo
sar
icebp
mov
dec
dec
jl
jge
mov
lds
add
clc
fsubl
fsubrl
push
lds
mov
xor
fisttpl
xchg
pop
xorb
jp
pop
sbb
jl
addb
mov
mov
outsb
daa
sub
ja
and
arpl
sbb
or
xchg
mov
jb
idivl
stos
xchg
addl
add
repz
popf
jmp
pop
imul
dec
daa
mov
into
push
adc
andl
sarb
sbb
in
lock
lahf
sarl
movsl
rolb
cmp
sbb
and
sub
mov
xor
inc
mov
lcall
push
fdivp
pop
call
mov
inc
lea
adc
sub
in
fisttpl
jmp
loopne
mov
push
fiadds
lret
outsb
xchg
lret
in
lret
cmp
test
adc
mov
addr16
pop
push
aas
or
icebp
lret
lret
add
stc
hlt
popa
push
mov
or
adc
push
push
sub
pop
push
imul
pusha
stos
mov
adc
test
mov
enter
dec
leave
aas
lahf
lds
adc
aad
cmp
sti
in
adc
sbb
fistl
sbb
xchg
repz
push
popf
fildll
mov
sbb
mov
or
mov
in
add
mov
dec
subb
mov
data16
jecxz
movsl
and
aam
xchg
in
dec
out
mov
xchg
mov
out
imul
sbb
inc
popa
aam
jb
popf
push
add
dec
xor
add
xor
shl
movsl
ljmp
enter
data16
mov
pop
mov
and
out
stos
mov
xchg
orl
inc
lds
or
clc
jno
das
sbb
fcoms
jne
jg
push
in
call
test
stos
push
arpl
cs
add
mov
xor
je
mov
gs
aad
std
pop
sbb
pop
pop
or
or
insl
push
sbb
jmp
inc
cltd
dec
stc
add
jg
daa
fwait
sbb
aam
xor
dec
fs
mov
jnp
ljmp
mov
rcll
nop
pop
in
repz
xchg
data16
call
pop
pusha
push
lahf
popf
xchg
dec
cmpsb
adc
pop
pusha
inc
mov
sahf
and
inc
outsl
test
push
pop
in
out
jbe
jecxz
pop
push
cmp
jae
add
jne
cmp
sahf
add
add
int3
mov
pop
push
bound
loopne
jge
cmc
ja
stc
sub
sbb
in
fldl
and
clc
adc
cmp
sub
pop
xor
mov
mov
fdivs
adc
int3
pop
cwtl
xorl
mov
in
repz
push
push
flds
lds
mov
sahf
notl
js
and
dec
lahf
popa
gs
cmp
lea
lahf
fldl
sub
js
mov
mov
and
outsl
jg,pn
clc
fisubs
dec
push
mov
mov
mov
dec
sub
movsl
ret
fidivrs
inc
stos
ljmp
aaa
movsl
mov
inc
enter
iret
jl
inc
ret
lods
push
xlat
dec
cmp
lods
jbe
sbb
push
cmp
mov
cmp
daa
mov
loopne
sbb
mov
cwtl
pop
jo
pop
addr16
cs
cs
orb
add
out
dec
jge
mov
popa
mov
mov
or
sbb
sahf
push
loopne
cmp
mov
jl
mov
iret
stos
addr16
jno
adc
adc
push
mov
mull
imul
stc
or
xchg
xor
dec
les
shll
mov
outsl
add
mov
fidivrs
sbb
xor
or
addr16
adc
xor
push
clc
mov
cmpsb
std
jbe
lahf
pusha
mov
rclb
negb
xchg
outsb
xchg
add
sbb
out
sub
out
lea
adc
adc
cwtl
push
push
mov
pop
mov
adc
mov
adc
sbb
adc
or
add
fsub
clc
sbb
sub
test
sbb
insb
daa
mov
inc
ss
adc
adc
lds
stos
shr
scas
mov
ss
les
cmp
insb
pop
inc
stc
stos
or
pop
push
jecxz
jns
jb
sbb
sahf
gs
mov
aas
jmp
push
jbe
enterw
sub
dec
dec
daa
cli
push
ret
sbb
or
in
mov
jle
xchg
out
add
jnp
lret
lods
mov
shll
inc
mov
xor
scas
xchg
ret
sub
int3
mov
inc
or
das
push
popa
push
das
add
xor
subl
dec
in
jp
repnz
pusha
jle
mov
jne
push
push
shll
lcall
dec
dec
cmp
push
das
scas
mov
add
or
or
inc
pop
push
xchg
jne
mov
gs
je
ds
and
clc
fadds
push
cld
daa
push
out
push
fwait
insl
mov
pop
aad
arpl
stc
filds
lods
or
rcr
lods
fstps
jg
shlb
push
insb
aad
cmpb
inc
fimuls
sbb
stos
pop
xor
in
gs
push
into
jae
ror
mov
test
inc
popa
out
in
xchg
lahf
arpl
add
pop
inc
push
push
xor
cmp
das
cmp
mov
pop
int3
sbb
jae
pop
dec
xorl
mov
ror
sti
sbb
insl
mov
mov
rclb
sbb
dec
enter
jns
pop
cmp
outsb
loope
shrl
movsb
pop
xchg
test
lods
ret
and
repnz
es
lret
push
cwtl
cli
aam
jg
xor
pop
jge
jne
pop
out
mov
fs
outsb
rcll
in
fs
mov
xchg
out
mov
iret
mov
pop
push
imul
sub
push
or
jb
fwait
loop
jmp
mov
sbb
jecxz
cld
sub
mov
les
out
mov
enter
xchg
sarl
out
adc
dec
mov
clc
and
testl
cmp
lds
jo
pop
adcb
sarb
pop
ja
xor
mov
xor
roll
cmp
sbb
fsts
lods
and
faddl
add
cs
mov
sub
out
push
shll
scas
lahf
jno
mov
xchg
adc
xor
or
mov
xchg
xor
mov
iret
sub
xor
xchg
xchg
sahf
imul
inc
mov
ret
sub
scas
and
in
aas
adc
cmp
adc
test
cmovae
scas
fstl
std
xchg
cmp
stos
ljmp
scas
out
rcll
add
jmp
mov
ret
xchg
rcrb
ljmp
fwait
jle
stc
js
mov
out
test
cltd
movsb
sbb
jmp
cmc
xchg
adc
mov
movsl
cmpsb
out
cmp
and
push
mov
mov
inc
into
popl
mov
cmpsb
dec
jae
add
push
pop
xchg
mov
sbb
addr16
fidivrs
sbb
mov
jl
pop
popa
dec
rorl
jecxz
mov
out
inc
adc
movsb
out
mov
inc
repnz
iret
lock
cmp
cld
add
icebp
ja
popf
rorb
mov
dec
je
add
fidivs
not
loop
std
scas
jno
insl
icebp
push
seto
fbld
idivb
sbb
inc
or
or
insl
and
out
mov
inc
jns
dec
lods
movaps
cltd
shl
imul
add
xchg
mov
jae
inc
pusha
push
std
push
int3
je
loope
sahf
pop
and
sub
sub
xor
sahf
and
push
negb
movsl
dec
jbe
imul
sbb
mov
outsb
inc
xchg
xchg
jmp
nop
xchg
sbb
xor
xchg
mov
mov
pop
fwait
adc
pop
jb
outsb
jg
lods
mov
mov
fs
rorb
fcomip
aad
mov
mov
outsl
cmp
and
jae
lahf
xchg
xchg
or
fisubrl
loopne
mov
ja
jno
pushf
ficompl
stos
orb
insl
cmp
push
loope
call
xchg
or
add
jge
cwtl
pop
cmp
aam
jge
nop
ljmp
push
test
or
cmp
sub
sbb
or
xor
jne
push
pmulhuw
sub
add
sub
aaa
push
lahf
cmpsb
and
fcmovnu
jo
or
in
out
ljmp
cltd
adc
fisttps
sub
pop
or
pop
mov
cli
adc
pop
cmp
inc
adc
ja
inc
lahf
je
xchg
mov
mov
jp
int
movsb
xlat
ret
jp
in
clc
pop
shlb
std
xacquire
ds
scas
xor
orl
jo
adc
dec
cli
loope
xor
add
bound
mov
and
pusha
and
cli
lods
cwtl
mov
std
adc
std
cmp
add
outsl
xchg
test
fdivs
cmp
fwait
cmp
mov
test
push
push
jnp
and
imul
xchg
pop
stos
outsl
mov
movb
dec
adc
xlat
ret
pop
dec
mov
lcall
mov
fisubl
jle
jb
push
test
cld
fdivrp
xor
jmp
xchg
adc
out
jecxz
fadds
mov
jl
test
sbb
xchg
dec
or
pop
jmp
push
ret
ret
leave
loopne
mov
aas
adc
or
lods
aam
mov
mov
and
imul
mov
mov
cmpsb
cmp
jl
sub
or
cmp
add
fnstsw
dec
ss
pop
add
shrb
lods
repz
lahf
fwait
pop
scas
push
cmp
ret
mov
jecxz
xor
push
or
inc
cli
daa
mov
aad
or
dec
insl
xchg
push
xor
lods
pop
sbb
out
fs
push
shlb
jo
ret
sub
stc
rorl
and
jb
inc
es
in
out
lods
es
lds
mov
gs
or
inc
aas
repnz
pop
sub
pop
loopne
sbb
clc
mov
int
mov
gs
aad
push
push
pop
insb
sbb
dec
dec
fs
xchg
add
inc
adc
jo
addl
adc
inc
push
push
jle
rcr
popf
fs
xchg
clc
test
push
and
mov
imul
scas
pop
xor
sbb
in
sub
jmp
iret
mov
jb
sbb
ret
cmp
dec
testb
add
mov
add
mov
mov
bnd
sub
pop
addr16
push
push
xor
or
roll
aam
nop
insl
es
cld
test
pusha
andb
cwtl
es
sbb
ret
xchg
jle
mov
xchg
lret
divl
sub
push
fldl
and
jecxz
dec
notl
sahf
shll
lcall
xchg
sbb
and
add
aam
js
mov
push
lock
fildl
daa
sub
stos
dec
adc
mov
bnd
sub
add
imul
jnp
sub
insb
in
mov
xlat
mov
lods
xor
pop
roll
scas
mov
jae
inc
mov
sub
jae
rcrb
rcrb
imul
push
or
nop
into
push
jne
mov
xor
push
repz
adc
dec
or
les
xor
xchg
cmp
in
and
xor
mov
dec
push
insl
dec
sbb
fisttps
mov
dec
add
push
inc
test
add
or
test
xor
xor
ret
or
lcall
or
daa
add
adc
xor
bound
mov
fs
and
dec
repnz
add
stos
rclb
fdivl
js
scas
sbb
mov
push
mov
je
cmp
outsl
or
push
inc
jns
lods
add
and
stos
pop
enter
xor
cmc
lods
arpl
movsl
enter
fistl
enter
jecxz
pop
jp
lret
and
mov
sti
shrb
fdivrl
js
pop
cmp
neg
subl
aas
scas
mov
pop
leave
js
xor
repz
int
add
push
stc
mov
xchg
cmp
fiadds
insl
mov
pop
jne
xchg
inc
out
or
insl
aam
sub
dec
xchg
std
add
sysenter
cmp
aad
mov
in
cli
adc
dec
pop
xor
jns
in
xchg
dec
jle
hlt
cmpsl
push
jl
mov
cmpsb
add
imul
leave
sbb
cmp
mov
insb
hlt
mov
popf
out
js
sub
mov
cmp
xlat
cmpb
xorl
int3
sub
push
stos
inc
pop
xchg
insb
jno
jb
mov
test
xlat
sbb
push
lock
and
jne
mov
fxch
roll
adc
test
sbb
idiv
and
xchg
shrl
push
rep
dec
jle
stos
shrl
sbb
fidivs
sti
xor
add
cmp
into
adcb
rolb
hlt
enter
jo
push
xor
add
fucomi
pop
xchg
push
fldt
leave
push
push
mov
repnz
ret
aaa
xorb
es
sbbb
sub
push
daa
cs
cmc
mov
test
or
fcoms
icebp
mov
scas
xchg
gs
and
adc
fwait
pushf
and
and
sub
mov
outsl
js
mov
fnstcw
and
fimull
sub
out
sti
sbb
lds
jbe
push
imul
repnz
fisubrs
mov
stos
mov
insl
lds
inc
mov
lret
add
sti
mov
popa
add
inc
and
data16
sbb
mov
mov
enter
xchg
push
int
fwait
scas
xlat
sub
std
or
dec
pop
pop
dec
xor
add
sub
mov
fs
xchg
mov
cmp
xchg
hlt
iret
cli
scas
orps
arpl
and
jb
fistps
inc
insb
imul
push
testb
mov
push
cmp
add
sub
fmulp
sahf
or
iret
inc
ljmp
lcall
sub
stos
lock
adc
dec
clts
jae
inc
movsb
js
pop
xlat
mov
jno
iret
repnz
add
sahf
pop
mov
ret
sti
jecxz
sub
cmc
mov
popf
pextrw
dec
fiaddl
sti
pop
push
mov
popf
pop
test
xchg
sbb
dec
push
test
sbb
adc
cmp
cltd
cs
jge
fidivs
mov
repz
or
rorb
xchg
ljmp
add
mov
xchg
repz
lods
mov
repz
enter
call
jbe
jmp
mov
push
cmp
dec
imul
add
add
jmp
clc
pop
pop
push
pop
hlt
or
sub
gs
xor
sbb
fisubrs
xchg
inc
mov
cmpsb
xor
jge
shll
sbb
mov
lea
jno
mov
les
mov
xor
mov
xchg
enter
test
sub
xchg
jmp
out
icebp
adc
call
cmp
in
clc
xchg
into
cmc
movsl
ficomps
enter
sbb
je
rcrb
push
or
jmp
and
testl
jo
fwait
dec
cmpb
cmpsb
mov
les
shrb
xchg
data16
cmpsb
in
jle
test
xchg
inc
mov
int
cmpsb
add
das
pop
add
fsub
cmp
sub
repnz
cmp
shrl
test
lret
sub
jmp
fdivs
cmpsb
test
loope
les
fldt
dec
ret
cmova
jmp
iret
adc
or
loop
daa
or
mov
adc
inc
mov
jle
bound
sub
les
outsl
pop
push
daa
jp
pop
nop
lods
sti
pop
clc
in
idivl
cmp
popf
fprem
shr
xlat
xor
in
mov
rcrl
pushf
lods
das
push
daa
mov
and
adc
lcall
sub
inc
xlat
sbb
mov
cmpl
or
push
in
sub
inc
push
push
jl
sbb
jnp
loopne
movsl
jnp
loope
stos
ret
fisubrl
lret
sbb
popa
in
out
mov
mov
loope
adc
subl
inc
in
xchg
sahf
fldl
sub
dec
cmp
jbe
es
stos
mov
neg
js
xor
ss
aam
fnsave
call
cmc
cmp
popa
jl
or
mov
inc
stc
cmp
inc
mov
mov
and
fs
push
xchg
je
xchg
addb
xchg
cltd
insb
ja
dec
xor
and
xchg
imul
push
imul
mov
lods
push
pop
gs
sub
jecxz
mov
mov
xchg
mov
xor
add
xchg
jb
movsl
loop
jnp
repnz
iret
xorb
ret
push
ljmp
dec
push
es
lea
pop
mov
cmpsb
jne
int
jne
push
jmp
xchg
and
in
add
push
ss
scas
jmp
push
shll
jne
inc
adc
call
jecxz
cmp
pop
add
movaps
mov
sbb
inc
insb
xchg
sub
and
test
or
outsl
dec
xchg
sti
sti
les
out
shlb
repz
mov
cmp
in
cmp
push
adc
test
push
sbb
pop
das
add
jnp
ss
out
mov
or
mov
lea
out
das
lahf
or
jbe
out
inc
mov
mov
jecxz
pop
mov
cs
fadd
mov
pop
gs
fdivp
or
sub
sbb
ds
and
jle
js
or
fwait
or
sbb
jnp
cld
loopne
int3
sbb
mov
jns
mov
insl
mov
mov
dec
in
inc
addr16
mov
imul
dec
mov
mov
aad
call
push
lret
dec
mov
jnp
sbb
repnz
mov
insl
mov
mov
test
shr
insb
adc
pop
pop
lea
scas
clc
sub
out
pusha
xchg
xchg
pop
jl
js
add
icebp
cltd
cli
mov
mov
mov
push
cmp
mov
and
hlt
sar
and
imul
jo
sahf
inc
dec
add
lds
ret
fs
push
xchg
aaa
push
fsts
adc
fcomi
je
mov
test
dec
fiadds
sbb
fisubl
mull
dec
ja
mov
mov
loop
xchg
cmp
xchg
dec
xor
pandn
dec
and
add
xchg
cmc
adc
cmp
push
and
dec
das
mov
js
ss
cwtl
xchg
pop
leave
or
jmp
jnp
dec
sbb
je
dec
int
test
int
adc
cmp
fistpll
into
test
lods
in
jmp
in
lret
sahf
enter
jne
mov
test
scas
lods
mov
xchg
shlb
sbb
jae
mov
stos
sbb
xchg
sbb
inc
data16
cmp
inc
loop,pt
test
arpl
hlt
or
imul
pusha
out
arpl
sbb
mov
or
inc
aas
push
fistpll
lds
xor
pop
lock
sti
pusha
inc
div
xchg
cwtl
inc
je
sarb
mull
cmpb
scas
jecxz
lcall
push
and
dec
lods
nop
mov
cmp
mov
mov
dec
ficoml
test
cmp
int
or
ljmp
addr16
xchg
adc
sub
or
ror
gs
lahf
push
mov
div
sbb
jg
fistpl
push
jge
stc
push
test
les
mov
adc
lods
ljmp
cmp
mov
or
jno
sahf
cs
aad
mov
insb
leave
mov
sub
icebp
mov
nop
in
fcoms
push
jle
out
aas
jmp
loopne
test
out
out
jp
sbb
lret
in
stc
imul
push
stos
lods
add
in
stos
mov
mov
xchg
mov
pop
cmp
icebp
adc
stos
subb
decl
mull
dec
xor
pusha
add
andb
pop
clc
xchg
je
and
in
aaa
sbb
es
mov
jno
xchg
xchg
test
sbb
and
test
dec
pushf
mov
mov
mov
mov
sbb
mov
mov
das
or
mov
lret
fiadds
insb
sti
mov
add
xorb
sar
dec
dec
aad
rclb
xor
mov
cltd
sub
push
jne
add
out
ret
daa
push
cs
int3
pop
jp
push
arpl
dec
jg
push
and
cmp
pop
cmc
jno
or
insl
push
sub
pop
pop
orb
or
lcall
pop
fwait
aam
xorl
push
inc
fwait
cld
jge
dec
imul
test
push
sbb
nop
mov
dec
mov
xor
daa
test
es
out
sub
push
js
sahf
cmp
pop
pop
loope
test
testb
xchg
outsb
or
ds
fiaddl
out
xchg
adc
xchg
push
cwtl
ret
loop
push
xchg
xchg
out
inc
insb
jne
mov
mov
or
mov
inc
lcall
leave
scas
jge
stos
lret
inc
pushl
pop
and
aad
pusha
div
cli
push
scas
pusha
fs
cwtl
rcrb
adc
mov
xchg
jnp
push
cmp
adc
popf
mov
mov
mov
push
pop
and
mov
mov
push
lahf
ss
das
lock
push
int
add
outsl
cmpsb
mov
mov
scas
lock
adc
jb
cmp
icebp
pop
inc
sub
cmp
nop
or
mull
pop
jno
sub
shlb
sub
ficoms
jecxz
stos
and
icebp
cli
sbb
cmp
mov
mov
add
fcomps
mov
adcb
popa
push
icebp
mov
lret
fdivrs
push
mov
cs
xchg
xchg
and
sub
push
rolb
std
jae
out
push
xchg
lds
dec
lret
xlat
dec
fstl
jae
sbb
mov
push
cld
es
pop
ror
movb
icebp
cmp
addl
aad
in
pop
popf
inc
dec
dec
or
push
ds
push
mov
in
xor
mov
mov
insl
and
test
cs
adc
mov
pop
push
rol
push
inc
std
and
xlat
mov
mov
inc
pop
adc
adc
lcall
pop
or
mov
out
inc
mov
sti
or
aaa
jb
inc
dec
inc
xchg
sbb
aas
inc
mov
out
pop
fistpl
mov
andb
dec
push
shll
xchg
out
ljmp
fcomps
insl
data16
dec
mov
mov
test
cmp
push
dec
dec
adc
dec
mov
scas
nop
mov
pusha
rclb
mov
subb
xchg
ret
ja
shll
mov
mov
xchg
out
cmpsb
daa
mov
lods
movsb
pushf
adc
popa
push
jle
sub
adc
pop
xchg
sub
xchg
jmp
and
push
in
jmp
xor
cmpsb
clc
test
add
daa
fldl
sub
xor
sub
jle
fidivl
fwait
add
jnp
out
cmp
add
mov
add
aad
adc
aas
lea
cs
or
fisubrl
push
popa
shrl
jmp
cli
push
out
lcall
push
outsb
out
je
pop
mov
jno
psubsb
cltd
dec
insb
loope
sbb
call
jne
insb
cmp
mov
mov
mov
push
mov
xor
arpl
jecxz
add
dec
fstps
dec
xchg
fcoms
jp
mov
cmpsb
cmpsb
push
sbb
and
sub
cmp
imulb
test
cli
pop
pop
cmp
scas
mov
jns
ljmp
push
enter
jge
dec
push
test
jmp
aaa
cmpsl
or
mov
or
shlb
xchg
andl
cmpsb
push
gs
cli
daa
test
pop
lds
out
outsb
inc
stos
inc
or
loope
pushf
repnz
mov
dec
xor
orl
lds
pop
mov
sbb
scas
adc
std
andl
pusha
enter
sbb
dec
int
jae
mov
sbbb
shr
push
pop
jo
in
cmc
pop
pop
jns
lock
hlt
mov
shrb
fadd
int
clc
rclb
aaa
and
pop
jmp
fiadds
pop
pop
add
or
mov
push
or
test
or
test
js
adc
daa
add
xchg
out
daa
stc
lcall
sub
loop
sti
pop
or
cmpsb
push
loopne
add
lock
bound
xchg
clc
ficompl
jmp
pop
aaa
pop
pop
jb,pn
fwait
and
xchg
call
dec
mov
adc
sbb
adc
adc
scas
sbb
lock
insb
outsl
scas
push
push
test
push
es
test
push
fdivl
cld
mov
xchg
out
gs
aaa
addr16
xchg
cmp
xor
andl
mov
stos
mov
push
mov
pop
xchg
rcr
sahf
pushf
mov
and
add
jg
and
loope
or
pusha
jo
sub
pushf
jnp
and
mov
leave
jg
cli
fcomip
addr16
jns
ret
jge
mov
sub
bound
fdecstp
shrl
test
out
jns
nop
fiadds
push
inc
cmpsl
and
mov
xchg
xlat
int3
ja
leave
cs
in
dec
inc
repz
ljmp
jns
push
cwtl
dec
jmp
xchg
fsubs
jmp
ja
mov
mov
and
mov
mov
mov
in
test
pop
test
adc
shll
repz
jl
push
and
call
xor
push
mov
sbb
popl
popf
lahf
cmp
stos
movsb
push
push
movb
cmp
and
das
ret
ss
cmp
pop
shl
or
push
popa
dec
dec
or
addr16
pop
inc
jecxz
mov
cli
jmp
add
vsqrtsd
out
ds
das
dec
sub
repz
rcrl
sub
xchg
aam
es
scas
sbb
out
sub
lcall
data16
inc
jecxz
push
imul
dec
push
xor
pop
out
or
xchg
mov
hlt
and
sbb
stos
dec
orb
jbe
sub
rorb
cmp
adc
push
adc
fcomi
mov
push
sub
pop
adc
into
push
and
movsb
adc
add
dec
and
hlt
jl
jnp
jge
dec
sub
loope
sub
ljmp
inc
mov
inc
imul
mov
pushf
pop
pop
inc
fdivrl
aas
cmp
sub
sahf
xchg
and
sbb
push
jmp
ror
fwait
or
mov
mov
mov
data16
add
mov
jp
out
imul
lcall
mov
mov
pop
xlat
xor
or
popf
xchg
sbb
pop
addr16
loope
je
and
jno
jle
mov
jns
lock
mov
int
iret
ljmp
stc
cs
inc
les
push
stos
lahf
fsubr
mov
pusha
or
jb
xor
and
inc
add
push
es
mov
mov
cmp
or
out
fnsave
inc
adc
and
inc
mov
idivl
sbb
fists
lea
jo
ja
aas
sbb
add
fidivl
test
fwait
out
or
xor
adc
mov
fdivrl
and
push
ljmp
data16
jnp
subl
adc
push
mov
aas
out
sarl
cmp
lret
mov
lret
cld
mov
jns
xor
pop
pop
dec
pop
jge
out
lods
stos
mov
sub
sahf
dec
mov
mov
data16
cmpb
mov
imul
lea
rcrb
xchg
or
push
aam
sbb
dec
aaa
pop
scas
popa
mov
push
sbb
fldt
sub
jge
imul
push
xlat
lret
push
adcl
mov
mov
xchg
in
das
sbb
jno
int
xor
xor
inc
pop
push
cwtl
cmp
ljmp
xchg
cmp
icebp
repz
insb
xchg
popl
test
rclb
shr
lcall
lock
inc
ror
jbe
mov
test
ss
add
lahf
gs
jge
aaa
jecxz
in
andb
xor
add
adc
ds
xor
mov
fldenv
inc
mov
adc
ljmp
enter
test
cmpsb
jbe
aam
mov
sarb
in
inc
sar
loop
mov
sbb
or
or
adc
cmc
push
and
out
add
arpl
gs
mov
add
push
stos
mov
or
mov
ret
mov
int3
cmp
mov
lret
aad
jp
test
push
lahf
cli
imul
mov
sahf
adcl
icebp
jmp
imul
mov
dec
popf
movsb
cmpsl
dec
call
push
gs
jmp
push
jg
dec
std
shrb
adc
inc
xorl
mov
imul
ret
sub
nop
int3
and
lods
test
push
ja
push
nop
not
pop
pop
xchg
and
jge
dec
cli
ja
or
xchg
int3
lcall
sub
in
push
shll
dec
lods
lret
pop
mov
xorl
pop
lock
fsubr
and
ja
mov
sbb
fmuls
dec
in
scas
pop
push
mov
xlat
je
sub
xchg
negb
shrb
loop
add
mov
pop
les
pop
xchg
negl
int
mov
sbb
das
popa
sti
xchg
inc
test
sbb
in
mov
pop
lahf
jo
ljmp
ljmp
gs
pop
push
cli
sub
outsb
mov
adc
shrl
lret
cmpb
pusha
sarl
out
es
fildll
or
fnsave
dec
leave
push
mov
mov
or
lea
lods
shll
inc
sbb
mov
call
in
jecxz
js
xlat
mov
add
xchg
jb
sbb
mov
ret
pushf
or
or
sbb
inc
inc
sbb
xchg
push
sub
adc
mov
xor
adc
adc
ret
jge
arpl
mov
aam
bound
dec
out
scas
lret
sub
push
add
mov
imul
ja
lret
cmp
cmp
inc
inc
into
fbld
test
mov
xor
fs
pushf
sub
sbb
jne
push
mov
xor
lahf
sub
les
inc
mov
jmp
je
cmp
ja
lea
pop
or
les
jge
vorps
or
fimuls
or
mov
fcomp
mov
lods
addr16
in
ss
lret
mov
jb
pop
xchg
push
sub
dec
jp
pop
aad
mov
xchg
lods
mov
popa
movsl
xchg
cmp
xchg
loopne
ret
jp
daa
loopne
or
dec
sbb
mov
cmpsb
mov
xchg
adc
lret
out
dec
arpl
test
pop
lds
loope
sub
sbb
jnp
or
ret
push
pusha
mov
lahf
sub
pusha
pop
shll
loope
mov
testl
sub
pusha
jbe
out
xor
and
push
xchg
in
out
scas
scas
daa
leave
ljmp
scas
sbb
cmp
arpl
int
mov
lea
inc
or
fdivrs
fsubrl
lahf
fwait
push
or
cld
or
jg
insl
dec
xchg
outsb
lock
xchg
sbb
cmp
stos
push
adcb
sub
mov
mov
imul
pop
mov
cmc
arpl
clc
aas
ljmp
ds
loopne
jnp
rcrl
bound
ss
cmpsl
shll
outsb
and
out
xchg
and
xor
push
lcall
and
xchg
sub
js
fdivl
jae
sti
xchg
cli
enterw
ss
movups
or
ret
out
xor
in
jns
insl
out
jecxz
fcmovbe
adc
pop
cmp
clc
insl
xlat
aas
add
xorl
outsb
clc
push
mov
imul
dec
jbe
lods
movl
lret
pop
lds
sub
je
shl
cmpb
pop
sarb
sub
inc
and
push
mov
aam
stos
ds
xor
adc
mov
std
sti
sti
stos
bound
in
sub
xchg
pop
xchg
sbb
shll
rcrl
xchg
and
xchg
jg
call
push
and
popa
and
ret
sub
cmpsb
std
sub
rclb
mov
sub
clc
bound
xchg
in
adc
popa
jbe
xor
sbb
outsl
or
out
jge
lret
add
jge
sbb
push
arpl
push
push
add
sbb
aas
add
mov
xchg
xor
mov
stos
pop
mov
ret
jl
sarl
shl
and
push
jo
mov
jle
insl
test
enter
hlt
out
fisttps
sar
push
and
push
push
sarb
aad
adc
cmp
jo
imulb
lahf
push
hlt
test
push
in
roll
push
mov
jno
xchg
int
dec
adc
jnp
sti
fdivrs
mov
mov
sbb
and
sub
cmpsb
cmp
mov
inc
div
push
jle
push
sbb
xor
push
daa
aam
out
push
push
out
xor
push
gs
or
mov
mov
xor
sub
xor
dec
ja
sub
dec
pop
jns
lds
subb
xor
cld
xchg
jp
adc
icebp
cmp
push
jl
push
cmpsl
cli
ds
inc
out
loope
add
xchg
push
jg
icebp
out
gs
adc
shlb
call
aaa
add
inc
pop
scas
aad
out
pushf
imul
mov
lahf
pop
and
pushf
pusha
sub
mov
sar
bound
mov
mov
popf
mov
sbb
mov
outsl
repnz
xchg
test
in
adc
call
jecxz
dec
fstpl
xor
mov
stos
test
xor
stos
mov
and
xor
or
push
jmp
fstpl
outsl
cli
fistl
or
test
push
mov
mov
fwait
es
sub
mov
mov
testb
fcomps
mov
add
or
dec
js
imul
addb
maxps
fst
add
sbb
pop
adc
push
repnz
lret
xor
cmpl
add
adc
jecxz
cmp
push
int
lea
and
dec
jle
fistpll
sub
and
cmpsl
xchg
fsubrl
add
iret
mov
fldl
push
dec
insl
inc
or
sub
mov
out
enter
push
fsts
insb
mov
inc
adc
adc
sbb
xor
jns
mov
loope
jg
test
xor
daa
in
jl
xchg
notb
test
push
dec
xorl
pop
lock
lds
fs
and
mov
mov
aad
push
add
add
lds
cmp
std
pop
in
inc
add
sub
shrb
mov
xchg
cmp
xchg
jmp
sahf
cltd
jp
aaa
xor
mov
test
inc
and
flds
aad
and
les
cmp
mov
and
pop
clc
dec
repnz
in
sub
or
into
lods
out
inc
cmpl
sbb
dec
and
addr16
mov
cs
mov
xlat
jns
mulb
scas
ljmp
fadds
mov
popf
mov
imul
add
gs
sbb
push
inc
sbb
or
inc
aaa
testl
dec
mov
cmp
adc
mov
hlt
dec
cmp
roll
inc
js
shr
mov
pavgb
imul
add
popf
sar
call
sbb
call
and
pop
movsb
cmp
dec
and
rcl
jnp
incl
jns
pushf
inc
push
cmc
lcall
cmp
jg
cmp
inc
mov
test
pop
mov
pop
loopne
ja
mov
jp
cmp
out
fmul
mull
mov
sbb
jmp
sbb
pop
push
test
sahf
jno
popf
lret
nop
pusha
dec
pushf
jno
ja
push
fistps
dec
lds
pmulhuw
jg
pop
dec
pop
ja
ficomps
movsl
mov
sti
pop
shll
loop
ds
sub
xchg
mov
fisttpll
test
add
shll
and
out
inc
push
mov
ja
push
cld
fcoms
lret
xchg
shrb
addr16
cs
sbb
jge
or
mov
or
adc
or
pop
in
pop
stos
lcall
jmp
pushf
stc
outsl
push
iret
stos
call
stos
repz
loope
dec
aaa
movsl
aad
fldl
xor
sti
movsb
stos
or
jns
push
leave
fstps
ljmp
dec
stos
mov
lcall
loope
repz
stos
leave
xchg
mov
loop
jbe
push
popaw
cltd
inc
xor
cmp
mov
add
cmp
ss
inc
ffree
push
call
inc
icebp
loope
cltd
and
and
icebp
shll
test
cmc
fucomp
sbb
sub
push
ret
gs
lahf
gs
xlat
dec
mov
xchg
ljmp
out
and
sbbl
in
pusha
cmp
xor
das
inc
jge
aam
mov
cltd
divl
xor
scas
mov
hlt
sarb
mov
xchg
xchg
mov
fdivl
or
xchg
dec
cltd
out
fmull
add
xlat
fisubrs
push
jge
enter
push
stc
mov
cmpsl
outsl
and
pop
push
sbb
lret
mov
dec
cmp
mov
ret
mov
loop
jae
add
mov
xchg
jmp
sbb
stc
and
pop
dec
fisubrl
adc
jne
popf
rcrl
mov
cmpl
sub
pop
stos
push
pop
daa
insb
fcompl
jmp
mov
adc
sbb
cmp
dec
mov
ljmp
ljmp
pop
popa
inc
or
mov
dec
xchg
popf
mov
in
jle
adc
aam
test
pusha
fs
divb
xchg
aam
pop
sub
lret
and
add
xchg
fdivr
scas
push
sub
pop
jnp
push
cld
ja
jns
movsl
stc
sahf
jno
cli
add
rcll
inc
je
dec
fnstenv
sbb
lahf
inc
testb
add
clc
mov
cmp
and
adc
fdivl
xor
addr16
sub
cmp
enter
xor
mov
sarb
mov
mov
sub
mov
andb
das
insl
jecxz
dec
shrl
pop
into
mov
or
andps
and
dec
dec
pusha
fldpi
test
mov
sub
mov
loop
xor
xor
sarb
cs
xchg
arpl
inc
or
ljmp
pminub
sub
jg
adc
add
in
push
mov
and
mov
inc
or
mov
test
addb
aad
adc
cmc
jecxz
lds
ja
leave
xchg
add
mov
inc
cli
ficompl
stos
incl
out
iret
mov
and
and
shr
loop
adc
cmp
jb
clc
dec
imul
leave
xchg
xor
insl
scas
pop
sbb
cmp
sbb
daa
xchg
pop
les
dec
addl
es
fsubl
jnp
jnp
sbb
std
jge
outsb
adc
fsubp
notb
lret
jl
xchg
rol
mov
pop
jg
das
xchg
jl
add
pop
pop
pusha
pop
sbb
mov
popa
and
add
call
xchg
xchg
es
add
pop
jnp
int3
and
fdivrs
sbb
mov
ss
out
xor
mov
push
sbb
push
mov
xor
hlt
sub
lea
sahf
or
mov
mov
call
jle
or
pop
cld
cmpl
fnstsw
lods
ret
inc
movsb
lcall
addb
cltd
roll
xchg
sbb
jecxz
mov
cltd
fcmovnu
add
iret
addr16
stc
aad
jecxz
shll
loopne
mulb
ror
mov
mov
nop
sbbl
sub
mov
jle
mov
ret
pop
pop
dec
jl
and
std
and
push
in
cmp
cli
add
or
lock
pop
cs
sahf
loop
int
out
push
cltd
pushf
les
stc
mov
and
sbb
pop
idiv
dec
repnz
lock
jmp
pop
sti
fildll
jb
inc
adc
push
push
add
cs
jb
out
sub
repnz
or
clc
jno
sbb
add
jp
xchg
leave
loop
xor
mov
mov
and
decb
dec
insb
mov
orl
aas
aad
adcl
or
insb
xor
ds
pop
inc
xchg
imul
sbb
sub
inc
jo
movsl
insb
lret
movsl
jno
js
xor
push
sti
out
push
jecxz
ljmp
rorb
lods
xor
mov
or
int
mov
dec
cmpsb
adcb
loope
mov
out
adc
addr16
inc
pop
outsl
sbb
sti
cwtl
out
sti
jnp
or
sahf
push
rcrb
arpl
cmp
add
pusha
mov
sub
icebp
fwait
enter
pusha
jmp
mov
sahf
daa
sub
add
mov
mov
adc
jbe
xchg
or
jbe
in
sub
mov
pop
inc
jge
gs
cltd
jl
xchg
orb
outsl
popf
jp
into
jbe
mov
sarb
cmp
cwtl
hlt
add
loopne
js
mov
stc
pop
xchg
cmpsl
adc
iret
and
jns
push
xchg
sti
fwait
mov
mov
push
xchg
add
psubsw
fwait
test
xchg
adc
mov
cmp
in
cmp
adc
mov
xchg
push
stos
ret
aaa
push
jne
bound
inc
jmp
mov
scas
lods
hlt
leave
sub
or
scas
aaa
imul
js
mov
sbb
adc
adc
mov
loop
jmp
fisubl
lods
and
mov
repnz
xchg
sub
cmp
jae
xor
inc
or
les
repz
or
xor
and
add
dec
jl
mov
xor
dec
imul
and
mulb
mov
pop
out
pop
xor
pop
sub
clc
mull
pop
sbb
cmp
jne
loope
test
rclb
pop
gs
mov
mov
pop
push
xchg
mov
aad
fdiv
ret
mov
mov
mov
pop
lods
push
xor
leave
test
sahf
test
sar
lcall
cmp
dec
test
fdivp
test
push
sub
adcl
dec
test
int
imul
mov
stc
mov
fnstenv
pop
inc
lock
js
jnp
iret
jp
cmp
repnz
pusha
xlat
adcl
int3
jp
cmp
inc
sti
and
das
shr
aam
subb
popa
inc
ror
imul
sbb
sub
in
aas
pop
nop
test
pop
inc
add
bound
pop
mov
inc
pop
scas
push
jmp
mov
cmp
icebp
shlb
cmpsb
lea
clc
jns
mov
scas
inc
ret
jb
and
mov
mov
adc
clc
repz
sub
sub
mov
scas
inc
les
std
xor
int
push
pop
clc
cmc
push
adc
jg
push
sbbb
mov
jl
xchg
adc
cmp
adc
mov
mov
mov
in
fisubrs
xlat
push
xor
inc
fnstsw
or
adc
add
push
test
push
xor
loop
mov
lret
and
mov
lahf
js
jno
sbb
mov
push
sub
aaa
and
xor
adc
clc
dec
pop
andl
cli
dec
loopne
jecxz
fcomps
enter
orl
or
cmp
mov
popa
lret
xchg
add
jne
enter
xor
xor
mov
hlt
mov
cmp
sub
loope
jne
insb
xchg
mov
add
aam
loope
aad
pop
push
or
sbb
xchg
pop
fwait
cwtl
mov
lret
mov
mov
addl
mov
xor
push
mov
sti
shrl
mov
cmp
imulb
dec
aaa
xchg
test
push
pop
mov
pop
mov
and
xor
adc
cmp
fisubl
jne
xlat
dec
test
aas
js
pop
mov
ficoml
ret
pop
adc
mov
js
mov
sarb
sbb
popf
arpl
rorb
pusha
sub
fcoml
loop
flds
outsl
daa
dec
pop
push
loope
shl
and
in
mov
or
lret
mov
mov
sub
mov
add
add
pop
xchg
or
imul
push
out
jnp
icebp
jp
xchg
push
enter
mov
in
xor
sub
shrl
out
sub
dec
cwtl
ss
popa
testb
imul
pusha
sbb
sbb
xor
js
or
jo
jge
pop
or
adc
sbb
jnp
add
cmpsl
rcrl
es
jo
aaa
inc
inc
jl
aam
or
fwait
mov
cmp
cmp
add
in
mov
rorb
adc
xorb
xor
mov
and
push
xchg
inc
sub
pop
lods
xchg
or
cmc
sahf
cmp
fisttpl
pop
fsubrs
pop
mov
mov
push
pop
jmp
shl
in
out
orb
fnsave
in
cmp
push
jns
push
aas
cmp
sarl
adc
imul
cwtl
stos
pop
mov
mov
std
test
icebp
jno
jne
out
fidivl
or
ss
loopne
jns
sar
jns
sar
sarb
and
fistpll
fcompl
int
mov
xor
leave
jmp
xchg
into
leave
bound
xor
xor
mov
jmp
ret
jle
jbe
jmp
call
bound
jnp
imul
fdivl
icebp
and
or
xrelease
mov
fisttpll
lods
add
push
imul
adc
lcallw
cmp
inc
out
imul
mov
mov
xor
gs
cltd
xor
mov
adc
pusha
mov
jg
ja
inc
clc
das
push
pushf
cmpsl
aas
cltd
sub
or
loop
push
popf
dec
cmp
dec
jecxz
stos
sti
xchg
int3
add
jmp
xchg
cmp
xchg
jbe
shlb
repz
lods
test
rcrb
shl
insb
cmp
adc
ja
mov
push
cs
pop
popa
cmp
mov
mov
mov
jp
adc
sub
inc
ficomps
mov
fadd
mov
test
and
out
or
scas
iret
cld
bound
mov
mov
xor
enter
cmp
loopne
scas
mov
shlb
jecxz
clc
inc
shrb
lock
das
inc
and
rclb
and
out
jmp
pop
sbb
xchg
pop
clc
mov
test
or
push
xorb
nop
imul
adc
mov
xor
imul
mov
and
or
sub
push
or
and
test
test
cmp
lock
inc
std
inc
test
stos
pop
lret
xor
xchg
leave
out
jae
je
data16
add
popa
repz
sbb
pop
jne
bound
xchg
adc
dec
cmp
mov
repz
mov
imul
push
cs
sub
mov
aaa
daa
cmp
arpl
loop
push
aaa
popa
sub
loop
arpl
scas
iret
push
jl
and
adc
jge
push
jmp
sbb
inc
test
xchg
mov
lods
jbe
fsubl
lahf
ja
xchg
mov
inc
loope
sbb
test
and
mov
sub
push
add
lahf
test
jl
mov
mov
cli
add
test
xchg
cmp
movl
xchg
scas
and
lods
pop
add
lret
sbb
shlb
push
jne
stos
mov
or
push
orb
aad
pop
push
sub
xchg
dec
lahf
clc
push
mov
push
cmc
mov
sub
andb
xchg
hlt
sbb
call
aas
fcompl
test
inc
shrl
sub
ja
loop
push
ss
mov
dec
mov
mov
sub
adc
outsl
shrb
in
xorl
int3
lret
div
ljmp
leave
cmp
popf
jns
or
and
aaa
xchg
arpl
or
shll
nop
sarl
pop
aaa
lcall
ret
ljmp
pop
sti
iret
ds
loope
stc
sub
outsl
xor
lahf
adc
jmp
std
add
inc
mov
xor
sti
hlt
adcl
loop
push
std
dec
adc
push
bound
insb
clc
mov
sub
mov
and
pop
mov
test
call
dec
lret
mov
jecxz
xor
pushf
pop
out
aaa
leave
push
aaa
mov
loopne
into
dec
es
lock
cmc
mov
ss
xchg
mov
push
insb
jl
inc
stos
jno
mov
dec
stos
jo
lea
or
mov
jne
sti
cmpsl
cltd
fwait
xchg
pusha
out
mov
lahf
adc
test
adc
or
sub
ja
cmp
jne
das
jecxz
jp
jp
repz
push
mov
mov
ror
negb
mov
inc
out
jae
xchg
insl
mov
lock
scas
dec
ret
add
pop
push
jge
dec
fldcw
bound
push
jmp
pop
mov
pop
out
das
imul
jbe
mov
xchg
sbb
mov
movsb
adc
xchg
mov
xor
xor
mov
loop
gs
fstpl
les
ret
pop
pop
jp
mov
or
iret
cmpsb
daa
fcmovnbe
mov
push
jl
lret
sarb
ss
ss
inc
in
dec
adc
cld
fldcw
xor
lahf
sub
mov
inc
test
js
jbe
sbb
sub
pop
sub
ficompl
xor
mov
sbb
push
xchg
push
std
jl
std
jge
ds
sbb
test
clc
mov
mov
mov
out
jp
fimuls
aad
in
cmp
call
fcomi
imul
lret
pop
jno
cmp
daa
xchg
sub
insl
ds
sub
lahf
outsb
inc
pop
xchg
inc
mov
hlt
cld
dec
inc
scas
imul
sbb
call
iret
repz
sub
test
mov
aam
insl
aas
insl
cld
push
add
inc
in
mov
dec
cmpsl
fs
adc
jmp
and
pusha
jp
out
pusha
inc
and
adc
cmc
je
jbe
and
lods
into
lret
ficoml
sbb
gs
sahf
pushf
xchg
add
inc
add
pop
outsl
lret
repz
rcll
mov
mov
mov
int3
loop
ret
scas
mov
cmp
push
lods
dec
in
arpl
adc
nop
jp
inc
dec
sar
add
repz
pop
xor
mov
xchg
mov
out
xor
mov
xchg
pop
je
mov
fists
xchg
or
ja
or
clc
loopne
or
std
adc
repnz
xchg
or
mov
sub
push
aas
aam
mov
mov
xchg
cmpsl
sub
or
into
ret
dec
pop
cmp
nop
mov
push
sub
sarb
cmp
imul
fsubs
mov
fisttpll
nop
adc
dec
sub
add
popa
fwait
sub
mov
int3
jae
mov
or
xor
in
test
xor
inc
mov
pop
cmp
leave
or
andl
mov
mov
cmc
call
or
and
scas
loopne
pop
out
shl
lahf
push
insl
and
in
sahf
mov
fcompl
out
xor
sahf
arpl
xchg
xor
pop
les
lea
lret
jbe
jnp
and
add
out
ja
out
adc
shrl
jb
inc
add
jbe
test
pop
fldt
ret
push
inc
sbbl
in
mov
pop
fsts
rcl
pushf
sbb
jg
dec
lcall
sub
imul
mov
pop
shrl
inc
xchg
stc
and
pop
jo
mov
aam
mov
int3
outsl
xrelease
sbb
cmpsb
jmp
mov
inc
cmp
movsl
fwait
adc
sbb
or
push
loop
into
imull
lret
dec
or
test
cli
popa
hlt
ficoms
hlt
addr16
xchg
dec
or
jp
inc
dec
shlb
pop
sbb
xchg
stos
jl
adc
push
fsubr
or
lret
xchg
fs
sbb
lods
adc
leave
loope
pop
xchg
movsl
push
xor
filds
lock
ret
mov
mov
iret
lods
icebp
cwtl
jno
inc
js
inc
rolb
sub
xchg
jg
pop
or
cmpsl
js
mov
mov
outsb
add
dec
cmpsl
mov
inc
add
and
jmp
rorl
aaa
and
push
and
xchg
mov
xchg
inc
mov
shrb
xchg
cmp
das
loope
loope
iret
dec
fists
mov
ficoml
je
stc
dec
ficompl
adc
dec
cltd
fcmovnb
imul
lods
jge
sub
call
inc
clc
push
sbb
arpl
bound
ja
bound
sbb
mov
scas
hlt
jmp
jmp
js
hlt
sarl
lret
sbb
jle
push
cmc
pushf
cmp
inc
clc
cmp
pop
lods
xchg
pop
dec
mov
jp
xchg
mov
int
xor
lea
nop
sbb
les
loopne
fdivl
popf
add
jmp
mov
jmp
fcompp
jbe
and
pop
dec
fmull
js
les
aas
shlb
xchg
add
addb
mov
mov
push
insb
sub
cmp
mov
pop
aam
popa
iret
scas
mov
movsb
aas
mov
and
outsl
adc
stos
sti
adc
shrb
mov
sti
push
mov
cltd
push
sub
cld
mov
jge
stos
and
add
cmc
gs
in
adc
mov
mov
cmpsb
into
or
jbe
adc
mov
push
jmp
dec
cmp
cltd
xchg
js
js
ror
push
pop
leave
outsl
lret
mov
mov
imul
sbb
push
cmp
lock
stc
push
push
ret
rol
pop
and
out
leave
xchg
mov
push
pop
sub
sbb
mov
mov
sub
jns,pn
sbb
fcomps
inc
pusha
add
icebp
mov
push
sub
jb
insb
mov
mov
mov
jne
and
dec
sbb
add
lods
mov
stos
inc
push
pop
mov
jp
inc
pop
pushf
pushf
xorl
repz
aaa
push
mov
xchg
or
outsb
xlat
push
push
push
repz
pop
and
mov
inc
pop
hlt
rclb
xor
faddl
in
sbb
or
fwait
out
mov
iret
push
mov
inc
enter
je
aad
lret
test
jl
not
mov
mov
in
push
rcll
aad
cmpsl
aam
je
mov
mov
flds
into
jne
mov
sbb
add
cmc
jno
divl
push
sub
pop
jnp
push
push
mov
xchg
xchg
mov
adc
xchg
sub
push
and
addr16
sbb
fucomip
push
popf
fldl
pop
dec
add
sbb
jbe
xchg
sub
add
xor
inc
cmp
sub
adc
xor
test
push
xor
push
pop
into
cmp
data16
mov
je
jo
xor
push
push
neg
jle
sub
aam
and
cmp
repz
sub
ss
push
mov
xchg
popf
push
enter
adc
dec
cmp
jns
lods
cmp
shll
stos
xchg
lret
arpl
repnz
xor
push
pop
mov
test
arpl
int3
mov
mov
pop
daa
loope
jmp
xchg
or
outsb
push
sbb
jp
mov
f2xm1
jns
inc
lea
and
cwtl
xor
mov
adc
mov
pop
xor
leave
negb
cwtl
dec
add
mov
push
pop
pop
jbe
imul
sbb
test
stc
and
mov
outsl
inc
cs
mov
dec
fnclex
out
pop
clc
jg
test
sbb
xchg
xor
notb
adc
dec
inc
push
lods
fsubrl
data16
sarb
fdivrl
mov
divl
xchg
cmpsb
jle
inc
ficoml
push
test
jmp
stc
sbb
mov
xor
imul
les
imul
xchg
xlat
push
adc
ror
jg
xchg
mov
and
fcmovb
inc
xor
nop
int3
pop
fwait
mov
push
div
mov
or
push
push
fdecstp
imul
outsb
push
xchg
mov
insb
ret
cmpsl
in
lcall
sahf
rorl
rcl
inc
jb
mov
push
mov
test
cli
xchg
xchg
shll
es
in
stos
jae
xor
aaa
not
dec
jae
jns
scas
out
adc
test
shll
dec
in
stos
cmp
sti
xchg
leave
outsb
insb
mov
out
jb
pop
cmp
sub
bound
in
incl
in
lcall
test
sub
mov
mov
adc
mov
and
test
js
testb
add
pop
add
int3
loopne
push
nop
dec
pop
sub
jge
dec
jno
sub
stos
loopne
sub
mov
inc
push
shlb
test
hlt
jb
push
test
aaa
inc
leave
dec
jl
outsl
pop
or
mov
push
leave
in
dec
jns
lret
mov
inc
aam
xchg
dec
push
fnstsw
je
xchg
sbb
pusha
lods
inc
ljmp
scas
lret
clc
pushf
xchg
clc
fsubrl
jmp
std
ret
push
repnz
inc
cmp
scas
std
jns
sbb
lcall
inc
test
in
leave
decb
pop
push
loope
push
popf
fdivp
cmpsl
imul
jo
aad
negl
xlat
lahf
jnp
dec
add
dec
rclb
adc
sbb
xchg
outsl
push
fwait
cmp
xor
ret
pusha
push
mov
pop
jmp
out
or
repnz
sbb
into
dec
sub
out
xor
aas
js
in
outsl
dec
clc
cmp
test
ret
sbb
outsb
nop
lcall
pop
mov
mov
xorl
int3
es
mov
mov
mov
lahf
push
mov
ljmp
pop
repnz
icebp
popa
pop
scas
addr16
fnstcw
mov
insl
pop
cwtl
jnp
sbb
andl
add
push
jg
jne
movsl
ret
flds
pop
xlat
sub
adc
cltd
sahf
mov
test
inc
cmc
inc
push
out
pop
xchg
mov
mov
fidivrs
insb
mov
xor
mov
jl
adc
push
or
ljmp
adc
outsl
out
dec
rol
aas
xor
lods
pop
or
dec
daa
ficompl
nop
icebp
dec
mov
lock
mov
push
std
adc
fildl
ffreep
cli
mov
mov
add
out
loopne
sti
xchg
mov
xchg
stos
scas
sub
loope
insl
hlt
pushf
xchg
push
sbb
nop
stc
dec
mov
xor
out
scas
mov
adc
popf
repnz
je
sub
lock
js
mov
movl
lods
sub
daa
jns
in
ss
pushf
fcomps
stc
ret
lea
adcl
arpl
icebp
cld
mov
mov
xor
inc
shr
push
and
out
xor
pop
inc
sub
inc
inc
lea
adc
cltd
aam
aad
and
lret
sbb
in
mov
sub
push
fidivs
sti
repz
cmpsb
imul
jp
repnz
xchg
push
dec
int
mov
mov
xchg
aad
into
std
push
lret
fwait
cmp
xchg
or
mov
sbb
test
push
mov
and
ljmp
pop
fnstsw
adc
les
push
daa
jns
jb
inc
shll
stc
bound
sbb
push
adc
jae
and
ret
inc
xchg
ret
push
fwait
and
scas
std
not
bt
cmp
ds
pushf
jmp
adc
mov
xchg
or
mov
imul
mov
cli
add
divl
test
in
hlt
insb
decb
cs
cmpsb
inc
xchg
cltd
inc
icebp
inc
jge
icebp
cmp
sbb
mov
scas
shrl
mov
inc
mov
clc
and
cmpsb
push
inc
addb
push
sub
xchg
inc
xor
and
sbb
sub
mov
fwait
outsb
mov
sar
dec
cmc
or
push
lock
xor
jp
lcall
in
dec
sarb
fildl
xchg
pop
mov
lock
push
outsl
mov
push
shrb
dec
inc
aaa
dec
cmp
cmp
testl
jl
scas
loopne
scas
bound
and
pop
mov
pminsw
cmpsb
xchg
ss
pop
icebp
in
loop
add
xchg
jb
inc
mov
sbb
fwait
jle
aaa
lahf
andl
mov
dec
aaa
cmp
fsub
dec
jae
into
test
sbb
cli
xchg
xor
mov
test
push
iret
int
jg
gs
sub
nop
or
ljmp
ja
push
enter
xchg
imul
mov
lock
ljmp
shrb
push
shlb
or
cmp
sbb
fdivrs
push
pop
push
out
pushf
cmc
sbbb
ds
ds
sub
sahf
mov
idivl
cltd
je
xchg
mov
stos
in
push
lcall
and
sub
sub
push
bound
in
cld
int
or
clc
fadds
and
inc
add
into
push
stos
xchg
arpl
or
dec
inc
sbb
add
adc
adc
adc
sahf
xchg
dec
inc
out
mov
mov
dec
out
repz
pop
push
imul
test
add
add
rcll
xor
mov
dec
in
mov
into
into
aaa
adc
pushf
fcoml
sbb
and
dec
push
xchg
adc
add
inc
sub
cmp
adc
faddl
aam
inc
xchg
lds
inc
jle
rol
mov
xor
jno
mov
pop
stos
xchg
sar
inc
dec
mov
dec
cli
fcoml
jb
push
inc
rorl
jmp
cmp
cs
sbb
fisttps
rcrb
out
shrb
cwtl
lcallw
std
sbb
aas
push
mov
daa
fs
sub
outsb
add
push
xchg
adc
cmp
stc
mov
aam
call
xlat
push
lods
rcrl
addr16
in
ret
or
mov
hlt
iret
into
push
std
test
or
scas
push
sbb
mov
in
pop
pop
ret
pop
ds
les
pop
dec
in
sarl
icebp
jnp
lcall
adc
mul
ljmp
call
mov
cmp
js
inc
in
fs
or
outsb
aam
or
outsb
jbe
scas
sbb
push
push
jns
insb
jae
xbegin
lods
sbb
or
xchg
enter
mov
movl
pop
lret
in
push
xchg
cwtl
leave
lds
mov
pop
inc
xchg
sub
jno
sti
mov
sub
clc
sbb
addr16
cli
xchg
icebp
rcll
mov
adc
xchg
aad
fsubrl
pop
insb
cmp
cmc
pop
shll
aam
push
mov
hlt
aad
std
movl
inc
adc
xor
aaa
std
jl
enter
cwtl
pop
aam
xchg
dec
outsb
lcall
sub
inc
pushf
push
or
cmpxchg
push
push
adc
cmp
inc
ljmp
mov
in
lds
ja
jp
cmpl
push
out
dec
ss
and
mov
outsb
adc
rcrb
mov
in
xor
mov
aam
and
push
loope
push
jmp
mov
hlt
push
pop
aam
xchg
xor
negl
inc
test
fwait
sub
mov
add
test
inc
pop
ret
adc
xchg
scas
inc
div
mov
push
aas
pop
sbb
xlat
push
fs
dec
mov
out
lret
pop
jmp
add
sub
test
rolb
pop
cs
xchg
dec
enter
loope
mov
mov
out
jge
cld
out
inc
adc
pop
int3
pushl
in
mov
lret
out
nop
mov
lcall
in
stos
inc
or
sub
test
mov
dec
mov
jp
cltd
es
inc
xchg
jae
mov
xchg
jo
push
outsb
insl
fdivs
push
imul
out
cmp
jno
sbb
hlt
fisubrl
inc
mov
rorl
and
inc
sbb
aam
insl
sub
in
jge
dec
std
push
outsl
iret
inc
popa
dec
dec
shll
jmp
iret
clc
pushf
dec
push
push
xchg
mov
add
in
xchg
cli
mov
mov
movb
mov
pop
icebp
xchg
sbbl
nop
mov
arpl
xor
add
mov
xor
push
insb
loopne
push
stos
xchg
xchg
xchg
fwait
dec
sbb
xor
mov
hlt
push
push
pop
insb
mov
adc
sub
rorl
das
cmp
in
jns
dec
push
shll
fsubl
mov
or
pop
pop
mov
jg
cmpl
or
adc
cmp
mov
in
test
das
jge
inc
shrb
lret
ret
xor
mov
xchg
cmp
fisubl
jg
lret
mov
out
out
push
jecxz
sbb
lret
xor
or
out
xchg
and
or
fwait
jmp
push
into
mov
aas
lret
popf
pop
sbb
sbb
push
mov
xor
inc
lods
lahf
dec
jg
xor
mov
inc
roll
shlb
jae
sarb
clc
rcr
lds
pop
and
mov
add
xchg
mov
adc
sbb
pop
jecxz
xor
scas
mov
dec
movsl
bound
mov
sub
xlat
loope
xor
cs
cltd
mov
add
jl
adc
push
stc
cmpsl
or
adc
lods
and
mov
jo
movsl
xor
adc
stos
sbb
pop
inc
cli
movsl
add
xor
push
and
cmp
cltd
sbb
shll
hlt
add
lock
xor
and
lea
jns
rcll
pop
es
mov
rol
andb
xor
pop
push
lea
js
mov
push
lock
add
and
out
dec
mov
pushf
aad
lahf
lock
jge
fbld
mov
add
xor
dec
jge
ret
push
repnz
cmpsl
or
loope
push
bound
push
mul
add
inc
xchg
cmpl
pop
sub
ret
push
cld
xchg
ror
cmp
sbb
test
cwtl
subl
sub
mov
scas
repz
push
fbstp
mov
inc
lods
push
fildl
mov
orb
xchg
mov
sbb
sbb
mov
add
mov
mov
arpl
or
jp
mov
mov
test
pop
lcall
cmp
insl
movsl
cld
mov
nop
cmp
adc
jmp
lcall
dec
jecxz
pop
push
lcall
out
adc
mov
cmpsb
pop
xor
push
mov
lret
xor
imul
push
xor
cmpsb
repz
cmp
roll
cmp
negb
mov
mov
mov
pusha
mov
add
dec
add
bound
push
mov
xchg
mov
lret
int3
dec
ret
out
push
push
xchg
jp
sbb
idivb
add
or
fcoml
or
mov
fucomp
cmp
mov
dec
and
push
xchg
sub
push
inc
aad
add
xorl
mov
adc
mov
xor
adc
mov
jg
cmc
pop
xchg
imul
lds
fstl
lds
adcb
enter
xor
lret
in
flds
or
mov
movsl
bound
fidivs
dec
leave
push
mov
ss
mov
inc
mov
sbb
xor
xchg
out
sub
out
xchg
movsl
mov
and
inc
jae
xchg
scas
and
fcomp
lret
loopne
fcomps
cmp
roll
mov
movsl
add
lret
xchg
sub
imul
mov
xchg
ja
into
sub
mov
test
and
in
sub
push
cmpsb
add
or
stc
push
mov
ljmp
adc
roll
and
sti
push
dec
mov
mov
je
dec
push
in
cmp
fwait
or
mov
stos
xchg
ds
cwtl
aas
dec
jecxz
dec
mov
xor
push
mov
loop
idiv
sub
or
cmc
test
scas
les
mov
mov
xor
pop
push
call
movl
pushl
nop
xchg
adc
xchg
adc
imul
adc
mov
sahf
cmp
ds
aas
jns
test
nop
push
or
pop
xlat
repz
and
push
out
xchg
in
sub
cmp
lahf
shl
adc
mov
pushl
jecxz
push
addr16
mov
ret
aaa
inc
out
xor
neg
or
fwait
cwtl
fcompl
dec
and
loopne
outsb
inc
mov
pop
cmpsl
jmp
mov
dec
pop
cmp
sub
movsl
stos
mov
inc
xchg
mov
stos
dec
inc
insl
js
dec
repnz
jmp
lret
mov
movsb
jg
lret
mov
cmp
enter
test
stos
aas
sti
leave
and
lds
movsl
shll
int3
xor
pop
xchg
mov
sub
xor
dec
push
jl
imul
xor
sub
icebp
ret
ljmp
pop
rcrb
ja
pusha
out
aaa
shr
insb
mov
push
imul
adc
mov
add
mov
out
jno
mov
out
pusha
jbe
push
cmc
arpl
shlb
mov
jl
push
btc
inc
push
lods
in
lret
leave
movl
cmp
push
scas
sbb
pop
xor
mov
pop
in
cmpsl
mov
hlt
sti
add
sbb
movsb
cmp
loope
pop
cmpsl
ret
pop
mov
mov
pop
mov
test
in
cmpsb
adc
jle
or
das
fdivrs
shl
fsubs
push
ja
mov
fs
mov
scas
shl
or
popa
idivb
dec
jmp
sub
inc
rolb
xor
xchg
mov
cmp
adc
push
pop
mov
scas
xchg
push
mov
nop
sbbb
xor
add
outsb
in
jae
mov
int
pushf
xor
inc
mov
ret
insl
scas
out
out
xchg
cmpl
shr
into
inc
pop
mov
mov
cmp
or
repnz
bound
mov
imul
sahf
stos
xlat
ss
cmpl
mov
addr16
in
cmp
add
pop
pop
and
mov
xor
jmp
cli
rcrb
dec
xchg
les
jmp
add
jns,pn
aam
inc
mov
xchg
inc
pop
push
push
fwait
jno
arpl
inc
mov
unpckhps
insl
lods
sbbb
pop
xor
xchg
hlt
out
or
pop
dec
movsb
pop
jns
in
inc
jmp
mov
jp
in
sbb
pushf
aaa
dec
jge
mov
adc
add
movsl
insb
repz
imul
andb
push
inc
dec
and
mov
inc
ja
pop
loop
pusha
lds
cmpsb
mov
sub
sti
shlb
fadds
inc
sbb
push
jo
mov
dec
faddl
mov
andb
imul
cmp
lea
cmp
imul
push
jg
roll
fisubs
cmp
cmc
daa
fisubrs
xchg
incb
stos
and
mov
enter
fisttpll
pop
ds
leave
sbb
and
pop
xchg
das
or
sub
pushf
int3
test
push
sbb
mov
popa
js
lahf
add
fcmovnbe
cld
sar
mov
lcall
inc
or
out
mov
icebp
xor
xchg
test
sub
add
dec
adc
lret
mov
ds
sahf
jge
in
dec
inc
cmp
roll
cmp
push
dec
cwtl
cmpsl
pop
imul
or
rcrl
cltd
add
ljmp
xor
cs
scas
pop
call
pusha
jmp
cli
push
sahf
popl
stc
fcompl
test
pop
inc
mov
movups
iret
rorl
fdivs
notl
outsl
add
inc
mov
xor
mov
int3
mov
lcall
stc
xchg
test
lods
sahf
pop
jp
jmp
aaa
and
push
insl
mov
mov
sbb
push
lret
inc
adc
fsubl
mov
scas
insl
inc
fs
fildll
ds
leave
mov
aam
or
test
repnz
add
and
pop
leave
stos
add
sbb
xrelease
outsl
in
mov
cld
xchg
xchg
mov
sbb
or
sbb
sub
jb
fdivrs
cmovne
enter
and
mov
push
push
push
and
or
cmp
jmp
sub
scas
pop
dec
dec
jno
orb
scas
xor
push
into
pop
das
fidivrl
in
push
notl
test
inc
rol
iret
cmpsl
sarb
jl
fbstp
in
mov
lods
mov
es
frstor
cmp
dec
xchg
movsl
sbb
stos
ja
enter
stos
xchg
xchg
fs
xor
cmp
inc
mov
rcrl
mov
sub
daa
cli
and
jp
aad
push
fdivrl
sbb
dec
sbb
pop
xchg
sar
test
pop
pop
pop
mov
fmuls
xchg
jge
mov
or
call
inc
jb
cmpl
aaa
outsl
shlb
xor
andl
mov
in
lock
in
add
sbb
jno
icebp
fwait
xor
leave
mov
jbe
lahf
call
pop
lods
mov
push
into
cmp
dec
jno
mov
adc
scas
mov
jnp
mov
inc
mov
adc
sbb
jb
and
cmp
mov
jp
test
jbe
fst
mov
and
shlb
dec
int3
fldenv
mov
outsb
mov
arpl
pop
mov
pop
sarb
or
cwtl
sahf
int
adc
mov
add
jmp
push
xchg
loop
arpl
leave
in
mov
inc
xor
jns
push
dec
ja
fildll
pop
inc
loope
pop
pop
rorb
clc
add
and
fs
push
mov
sarb
xorl
sbb
jo
sub
std
ljmp
cmp
fisubs
dec
or
inc
mov
out
imul
inc
sbb
mov
int
mov
push
lcall
and
repz
xchg
lods
push
push
jb
lea
pop
loope
outsb
jae
xchg
push
shll
or
xor
cld
add
icebp
mov
lods
lds
stc
add
pop
xchg
mov
jg
xor
mov
mov
negb
mov
jnp
cmp
stos
sbb
dec
test
jle
sti
or
or
push
out
dec
pop
outsl
in
imul
inc
gs
mov
inc
xchg
xchg
or
add
cmp
inc
jo
push
add
test
cmp
inc
cmp
fs
mov
or
mov
das
gs
dec
adc
out
out
ret
popf
dec
fiaddl
xchg
test
push
inc
sub
test
jecxz
pushf
stc
jo
lds
mov
jmp
ret
leave
sub
nop
push
sub
add
cmp
jp
cmp
iret
aad
or
movsl
mov
push
mov
push
add
push
leave
repz
mov
push
lods
out
jne
xchg
mov
push
imul
pop
xchg
scas
icebp
shr
pop
call
pop
cmpsl
aad
imul
add
add
scas
add
cli
test
jge
jmp
call
daa
xor
iret
imul
pop
and
cmp
and
or
popf
cmpsb
cltd
repnz
xor
mov
jo
cmpsl
push
mov
adc
dec
insl
loop
mov
iret
sbb
push
test
push
sti
int
mov
pop
popa
fwait
in
loope
scas
fs
mov
imul
mov
mov
adc
gs
lock
ja
xchg
inc
mov
mov
adc
outsb
sbb
xchg
dec
imul
cmpsl
in
and
divl
xchg
fimuls
add
mov
sahf
bound
inc
repz
jg
xor
mov
inc
jno
rcll
stos
arpl
arpl
dec
ja
cs
mov
out
mov
cmpb
das
adc
clc
add
mov
ds
repz
in
sbb
dec
cmpsl
ljmp
ret
sbb
push
add
mov
add
jae
roll
dec
jle
mov
cmpsl
jl
lods
cmp
stc
subl
mov
and
cld
xchg
xchg
pop
and
mov
fistl
dec
ja
lock
cmpsb
sahf
pop
mov
jp
jg
adc
jne
pop
add
in
add
inc
ja
adc
cmc
sbb
ret
ret
jmp
mov
pop
scas
cmp
lods
jno
sahf
push
sbb
ds
incl
fcompl
jae
jns
inc
sub
adc
repnz
sub
add
cld
sbb
cwtl
loopne
push
call
shrb
push
ss
sub
mov
std
and
sti
out
xchg
outsl
dec
scas
outsb
pop
loope
fs
xchg
dec
decb
das
cmp
inc
jp
sub
rcl
mov
lret
in
sbbb
inc
inc
in
lahf
rcll
pop
mov
xor
repnz
out
sbb
les
cmp
repnz
add
hlt
pusha
sti
adc
popf
sti
insb
add
sub
mov
jo
and
ret
mov
aas
jne
xchg
push
int
and
es
das
and
cmpsl
lret
leave
dec
and
lahf
xchg
test
sti
sbb
call
push
adc
push
ja
aam
inc
cmp
dec
pop
lret
outsl
test
lods
mov
and
jg
repz
and
out
cmp
pop
pop
sbb
setl
mov
mov
mov
out
fldl
jae
jbe
mov
outsb
inc
cwtl
pusha
xchg
in
jl
enter
add
xor
pop
jmp
lret
out
inc
mov
add
jecxz
aas
jmp
sarl
xor
add
xlat
dec
xchg
push
loopne,pn
add
sti
inc
push
fsubr
ret
and
dec
outsl
mov
push
cmc
out
mov
jp
mov
aaa
adc
insl
std
inc
push
fdivs
mov
sbb
xchg
aaa
sahf
in
jp
mov
jnp
fwait
in
out
or
xchg
jmp
sub
bound
mov
xchg
sbb
cmpb
pop
subb
popf
loopne
out
mov
in
std
or
jge
lahf
push
jne
outsl
out
xchg
pusha
fwait
jle
jge
lahf
dec
cmpl
mov
cmp
push
dec
cwtl
jle
jno,pn
insb
lods
cld
imul
loop
dec
fistl
mov
adc
xor
aas
xlat
pop
jecxz
or
mov
mov
aam
lods
pop
fadd
adc
fisttps
sub
mov
rcrb
notb
sub
pop
xor
ja
test
shrl
pop
xlat
stc
test
test
mov
jo
ja
and
cli
cmp
or
ret
and
dec
push
mov
cli
ret
rolb
cltd
push
pop
xor
stc
and
jb
les
ljmp
mov
mov
mov
and
jle
add
sbb
mov
jae
jo
cmp
dec
jne
fwait
inc
je
js
mov
call
les
aas
lret
mov
leave
and
fsts
sahf
rol
xor
push
push
in
ret
fcmovne
ds
xor
test
cmp
fsubrs
imul
call
movsb
sbb
push
mov
push
bound
push
mov
sub
xchg
mov
push
iret
jge
pop
pop
dec
xchg
mov
ret
call
pusha
shrl
push
enter
cs
cmpsl
cmc
fwait
mov
inc
add
fldt
in
cmp
sub
aaa
push
repnz
movsb
leave
xchg
push
and
or
pop
enter
repnz
or
xchg
cmp
add
es
xorl
cli
pop
sub
sbb
jecxz
xor
mov
and
int3
jl
outsl
mov
cmc
mul
push
pop
adc
and
ret
pop
imul
push
int3
es
aas
push
mov
rcll
xchg
mov
daa
in
mov
js
loopne
jns
sbb
mov
jmp
into
cmp
popa
pop
lea
inc
repnz
xlat
mov
or
fstpl
lret
adc
cmp
pop
and
push
mov
push
inc
outsl
xchg
adc
xor
sbb
inc
lret
push
sub
pushf
push
loopne
pop
ret
inc
nop
leave
dec
and
pop
fstps
xor
ljmp
outsl
icebp
fidivrs
mov
rorl
mov
ljmp
add
xor
fidivrl
lret
fsubl
and
outsb
adc
insb
mov
ror
std
aam
insb
test
lmsw
popf
mov
fsub
insl
jbe
pop
xchg
cmp
mov
xchg
cmp
dec
push
pusha
insl
stos
das
pop
sbb
jnp
lds
dec
pusha
or
mov
and
cmp
xlat
test
shlb
pop
pop
mov
and
inc
int
sub
push
repnz
mov
adc
push
jb
jge
std
lds
ret
cmpsb
mov
mov
int3
push
je
sbb
enter
mov
aas
and
jle
cmpsb
mov
push
mov
bound
xchg
sti
and
cwtl
ja
jge
cmp
lea
lods
icebp
dec
outsl
ljmp
iret
adc
stc
fwait
xor
int3
movsb
cmpsb
jns
fidivs
lret
pusha
mov
sbb
and
push
pop
movsb
xchg
sbb
aaa
mov
xlat
sub
push
dec
int3
xor
sbb
repz
pop
and
out
pushf
jmp
and
sbb
sbb
inc
stos
test
jge
cmp
fstl
mov
sbb
in
ret
mov
mov
cmp
cmp
jge
mov
fsubr
pop
pop
jo
cli
mov
pop
cmp
dec
fsubrp
inc
xor
mov
inc
mov
dec
loop
xor
pop
cmp
push
fsubrs
fs
loopne
sub
sub
and
fisttps
out
vmovlpd
test
xlat
mov
leave
lods
mov
push
inc
inc
fs
fistl
xor
jbe
cmpl
lcall
movzwl
cwtl
js
jge
movsl
lcall
add
repz
sub
sbb
loopne
ret
pop
int
mov
adc
shlb
adc
daa
jmp
mov
xchg
pushf
xor
repnz
mov
pop
jns
dec
stos
test
negb
push
lea
leave
mov
lods
addr16
leave
inc
orl
lods
inc
dec
mov
shll
leave
hlt
jl
push
ds
adc
mov
lea
cmp
push
add
mov
daa
xchg
loop
or
ljmp
inc
sub
jnp
jae
and
or
ss
inc
cmp
pushf
adc
and
sbb
loope
jmp
nop
cmpsb
cmp
cmp
xchg
inc
testl
aas
jge
fwait
aas
jg
cmc
sbb
sub
rclw
insl
dec
lea
test
lea
stc
jmp
xchg
je
subb
repnz
rcrb
pop
cwtl
sbbl
adc
addr16
push
outsl
jecxz
adc
loopne
orl
adc
xchg
xor
pop
mov
std
inc
pop
mov
ja
cli
shlb
lcall
scas
sbb
ds
cmp
cld
pushf
xchg
bound
jmp
push
dec
shll
adc
dec
rolb
nop
incb
sbb
xchg
cld
add
or
xchg
mov
stos
les
je
fnstenv
xlat
dec
gs
or
sub
lcall
arpl
mov
adc
ret
test
inc
xchg
push
mov
pop
mov
pandn
xor
xchg
sbb
jne
jno
mov
xorl
sbb
mov
enter
pop
jp
div
in
or
mov
in
dec
imull
push
add
dec
and
loope
dec
mov
stos
push
pushf
pop
sbb
pop
push
mov
jp
lahf
imul
idivb
cmc
dec
ljmp
inc
test
push
and
pop
into
ficomps
aam
rolb
mov
out
and
daa
incb
cmp
jle
movzwl
mov
fcmovnb
mov
cs
or
xlat
stos
and
pop
jae
fs
mov
mov
repz
xchg
sub
mov
cmp
icebp
adc
shll
fnsave
sbbl
repz
and
push
mov
cmp
jle
jp
mov
jl
push
xorb
subb
rclb
jg
out
and
lahf
adc
jmp
adc
xchg
or
sbb
sub
add
ljmp
int
xchg
mov
mov
add
xor
in
pop
pop
stc
dec
orl
in
push
mov
scas
loop
mov
lock
inc
movb
jge
lods
jp
sub
mov
mov
sarb
jae
push
frstor
sub
pop
jb
push
mov
int
jne
sub
leave
iret
xor
loop,pt
mov
popa
xor
fsubl
inc
cwtl
mov
jmp
stos
push
mov
cmc
cmp
jae
les
jl
out
push
mov
ss
xorl
dec
inc
jb
xchg
sahf
pusha
outsb
data16
shrl
fisttpl
add
pop
insb
fcoms
sub
jo
inc
daa
mov
aad
jbe
cltd
mov
sti
ficoml
flds
mov
xchg
std
mov
or
mov
sti
fistl
lea
adc
mov
shr
xor
mov
enter
jo
les
or
hlt
mov
lods
mov
addb
pop
lods
cmp
pop
sub
dec
int
pop
mov
std
mov
mov
lods
or
mov
stos
jmp
std
aas
push
adc
push
xor
lea
aam
dec
push
jnp
jo
shl
pop
icebp
in
jl
or
fdiv
push
cld
fnstcw
lret
cltd
jge
xchg
pop
mov
pop
mov
pop
addr16
popf
lret
outsl
xor
or
jge
dec
or
nop
inc
inc
push
cmp
ret
jae
xchg
push
add
arpl
mov
push
pushf
shrl
jg
push
cltd
stc
push
movsb
push
aaa
out
jns
loope
mov
mov
mov
mov
or
inc
mov
push
adc
andl
addr16
aas
lahf
and
loopne
mov
std
inc
mov
push
rclb
mov
daa
aaa
loop
adc
xchg
sti
sub
popf
inc
scas
sbb
int3
jns
js
shlb
fwait
mov
aam
or
loopne
in
pop
aam
ficoml
cwtl
dec
mov
mov
xchg
mov
push
push
lahf
outsl
jb
dec
or
jnp
jmp
sbb
punpckhwd
in
sbb
jb
test
jmp
mov
fwait
adc
push
lahf
fldcw
xchg
lret
ret
loopne
pop
scas
hlt
loope
cmp
mov
adc
xchg
inc
jge
inc
mov
push
int3
and
lret
daa
scas
loope
jmp
js
hlt
inc
in
pop
sub
lret
pop
in
lods
adcb
fnstcw
out
cmpsb
mov
cmpsl
jl
push
add
out
into
stc
xchg
push
push
es
cmp
je
cmp
insb
orb
fstl
mov
out
movsb
cltd
dec
inc
das
sti
ret
fbstp
push
ljmp
add
or
xor
push
jae
test
push
imul
or
femms
fistps
sub
adc
and
icebp
sub
xchg
inc
ret
int
jmp
inc
cmpl
xchg
clc
sahf
push
or
das
push
repnz
add
int
lds
xor
out
pusha
inc
inc
dec
lea
dec
repnz
rcrb
outsl
cmp
sbb
sub
inc
push
and
clc
scas
add
int
xchg
or
jl
pusha
jae
icebp
inc
std
pop
mov
xor
xchg
inc
les
out
shlb
mov
shl
jp
xor
sub
dec
loop
out
popf
hlt
push
cmp
lock
imul
inc
lret
int
in
xchg
lods
xchg
popf
ljmp
sti
and
jne
out
es
lcall
imul
das
aas
pop
jbe
mov
outsb
pop
imul
pop
xlat
mov
mov
sbb
jg
ss
dec
fldl
out
fisubrl
pop
lds
out
pusha
add
dec
pop
les
fsubrs
cld
nop
and
dec
dec
daa
loopne
mov
adcb
jecxz
mov
cs
or
sbb
jecxz
les
fsubrp
jp
leave
out
and
mov
cmc
cmovg
lods
jge
sar
dec
pop
mov
push
fidivrl
dec
ja
xchg
mov
pop
xchg
arpl
mov
decb
sbb
push
adc
sub
mov
lea
fwait
sub
pop
jge
cli
or
rcrl
push
jmp
call
cmc
push
lods
mov
stos
sub
jg
mov
jo
sub
faddl
das
insb
cmc
dec
out
pop
repnz
mov
mov
ficompl
or
lods
rcrl
mov
ret
and
lods
repz
push
push
cmpsl
negl
roll
scas
push
inc
jg
cmpsl
xchg
icebp
dec
or
in
mov
lahf
pushf
clc
pushl
mov
pop
pop
pop
mov
sbb
sbb
fistps
icebp
jmp
fmuls
dec
or
adc
mov
push
xor
jnp
or
into
push
pop
pusha
fs
pop
dec
rolb
iret
lods
icebp
je
jge
jbe
sti
mov
out
dec
add
enter
in
jmp
dec
inc
pop
sahf
cmp
jl
test
lds
jns
jno
cmpsb
and
mov
das
outsb
mov
rcrl
mov
nop
or
sub
xchg
ja
dec
mov
pop
cmp
popa
push
popf
mov
mov
cmpsl
bound
jno
push
mov
scas
lods
push
cmp
mov
out
and
and
adc
adc
les
adc
jp
pop
in
stc
shlb
sbb
adc
cltd
iret
cmpsb
xor
mov
jo
sub
and
std
push
xor
popf
in
ficoml
add
ret
inc
inc
std
mov
pop
add
mov
push
jl
iret
mov
lahf
jne
repz
sub
mov
add
fimull
cmp
adc
and
aaa
add
int
rorl
inc
or
loope
into
incb
aas
imul
subb
mov
adc
mov
dec
jmp
add
and
hlt
push
xchg
cmpsb
in
inc
mov
dec
mov
inc
inc
mov
pushf
je
adc
test
outsl
adc
mov
push
jae
xchg
mov
and
sbb
scas
sahf
add
push
sub
mov
mov
dec
bound
add
jb
sbb
xchg
cmpsb
mov
pop
pop
sbb
and
push
scas
pop
mov
mov
push
pop
loopne
psadbw
repz
xor
lods
test
pushf
leave
stos
push
loop
scas
xchg
mov
out
xchg
test
inc
fsts
cmp
pop
adc
adc
push
mov
frstor
xlat
imul
shlw
bnd
test
sbb
test
adcl
fisubs
push
lock
cmpl
aad
cltd
outsb
test
jp
mov
inc
mov
pop
addr16
xor
dec
xchg
xchg
nop
add
jns
push
xchg
popa
popa
ffreep
fisttps
popf
xchg
xor
stos
mov
add
jmp
lret
xchg
push
fnsave
lock
mov
jae
fists
xchg
dec
scas
add
int3
je
xor
es
push
outsl
xchg
mov
add
loop
mov
push
add
push
das
shrl
test
jle
out
sbb
stos
cs
jb
jmp
pushl
add
sahf
test
and
xor
movsl
xchg
ret
dec
add
jmp
inc
xor
fildll
push
hlt
lea
mov
inc
or
cld
aas
je
xchg
cmp
dec
out
mov
aaa
and
push
adc
out
sti
repnz
flds
fdivs
xchg
js
shrb
call
fdivrs
pusha
or
pop
dec
inc
cmp
arpl
push
push
xor
std
jg
dec
mov
inc
ret
push
loopne
pop
jg
mov
pop
inc
mov
jmp
push
pusha
sbb
popa
push
int3
loopne
xor
mov
int
adc
sbb
jno
das
test
xchg
push
ret
fcoms
popf
adc
int3
dec
mov
ret
cmp
mov
ficompl
inc
push
pop
jle
orl
mov
filds
into
leave
rorl
shrb
cmp
sub
aas
push
mov
out
int3
or
das
int3
leave
repz
mov
push
call
dec
adc
push
movsb
mov
loop
mov
repz
jnp
inc
nop
mov
dec
pop
push
lods
push
jecxz
mov
xor
test
daa
stos
xlat
mov
cld
popa
leave
fsub
addr16
movsb
or
popf
pop
lahf
sub
scas
cltd
dec
jno
xchg
adc
adc
mov
lcall
sti
loope
jle
rcrl
lea
fnsave
xchg
pop
sbb
or
or
inc
mov
pushf
push
mov
add
aas
mov
movl
cmpl
nop
mov
pusha
cmp
sub
sbb
adc
or
outsl
or
dec
jbe
xlat
loop
and
jp
pop
shl
lds
call
mov
jle
jl
out
ret
and
in
ja
aad
cmc
outsl
ljmp
cmp
jmp
stc
scas
in
ljmp
or
and
xchg
mov
xchg
loope
mov
xor
dec
pusha
mulb
aam
lret
push
and
pop
test
ja
ret
push
mov
test
faddp
pushf
adc
pop
push
and
rcr
out
insl
xchg
lret
stc
aas
mov
sahf
dec
pop
pop
shrl
je
cmp
scas
lret
and
adc
cmp
fst
sbb
jne
cli
ja
mov
adc
add
xchg
or
xor
int
fnstenv
mov
out
xchg
fdivl
leave
mov
xlat
mov
int3
push
ljmp
cmp
and
repz
icebp
xchg
pop
dec
and
mov
xchg
imul
or
jp
imul
xor
jne
cltd
fldcw
test
mov
popf
data16
insb
testb
mov
enter
and
push
cmp
cmp
inc
add
xor
ljmp
xor
mov
filds
push
leave
jae
cmp
notb
jl
mov
popa
xchg
xchg
mov
or
sbbl
add
imul
mov
mov
fldenv
cmpsb
mov
divl
pusha
ret
jo
and
xor
fisubl
lahf
xchg
adc
pushf
shll
outsl
scas
inc
fbld
jno
dec
cmp
and
pop
bound
insl
div
lret
cmpsb
mov
je
js
push
push
mov
loope
dec
loope
or
mov
dec
and
and
dec
pop
mov
pop
dec
loope
rorl
test
aaa
sub
inc
add
mov
div
push
sbb
stos
in
dec
lahf
imul
jecxz
push
mov
repnz
cltd
jmp
in
out
leave
cld
adc
daa
mov
add
scas
scas
repnz
lcall
sbb
lahf
addr16
cmp
notb
mov
andl
aad
add
fmuls
int
movsb
xor
add
mov
fnstenv
xchg
sarl
shrl
or
xchg
enter
stos
icebp
std
push
xchg
pop
jecxz
mov
pop
orb
lret
pushf
int3
repz
push
pop
js
xor
jge
add
test
loope
mov
insl
inc
mov
add
mov
insb
xchg
and
cmp
mov
cmpsl
and
in
adc
and
mov
mov
push
add
ds
push
cs
shlb
xorb
xchg
push
iret
gs
add
xchg
push
es
cmc
es
pop
jne
sbb
mov
xor
sbb
mov
pop
outsb
push
pop
mov
cli
stos
rol
pop
rol
adc
or
add
add
fwait
testb
add
out
movb
test
into
in
shll
test
xor
iret
or
or
inc
lcall
adc
call
ret
mov
mov
mov
js
push
xlat
jge
cld
xor
fsubrl
in
insb
lcall
int3
xchg
pop
movsb
dec
mov
mov
pop
dec
fistl
inc
jecxz
and
xor
int
mov
call
mov
int
adc
in
sti
shlb
dec
js
push
loop
mov
dec
out
sub
cmpsb
mov
adc
ja
inc
clc
dec
jne
push
call
pop
cmp
xor
daa
push
test
cli
enter
cmp
int
ss
add
psubb
cmp
ficompl
icebp
cld
pop
pop
addr16
shlb
outsb
cwtl
pop
mov
jl
mov
jns
mov
cmpl
in
lahf
out
dec
xchg
insl
pop
add
and
lcall
jmpw
or
add
inc
sub
cmp
push
ds
fldenv
mov
pop
adc
hlt
pop
lret
addr16
or
mov
rcrb
xor
lret
mov
mov
fs
dec
xorl
add
test
adc
int
iret
mov
adc
loope
stos
or
test
decb
clc
fcoms
or
into
sti
cmp
cmp
fwait
mov
in
nop
pop
shll
jo
mov
insl
jp
dec
out
rcl
notb
sbb
dec
pop
and
jg
xchg
ror
ror
out
pop
xor
pushf
push
or
or
add
pop
cmpsb
xchg
inc
xorb
push
sbb
adc
rolb
cmpsb
fadd
add
mov
das
arpl
xor
mov
mov
sbb
ret
mov
sti
dec
pop
cmp
in
or
cli
mov
inc
or
enter
mov
mov
shlb
leave
sub
jbe
mov
jmp
cmp
push
adc
sub
dec
push
mov
jge
mov
jge
movsl
mov
add
xlat
in
ret
rorl
je
mov
fsubrl
push
adcl
dec
imul
lock
xor
cwtl
ljmp
leave
pop
fists
clc
or
push
mov
movsl
cld
cmp
cwtl
stc
je
mov
push
stc
popa
mov
inc
fcmovnu
mov
xchg
dec
flds
les
daa
cmp
cmp
es
addr16
mov
mov
xchg
out
imul
xor
loope
in
push
and
jbe
mov
dec
js
test
adc
cli
xchg
pop
lods
mov
pusha
jle
fdivrl
add
and
pop
mov
ss
das
sub
fdivrs
cwtl
cmc
idivl
dec
xor
push
add
test
ljmp
jecxz
adc
dec
mov
data16
repz
add
cmp
ret
shlb
xor
inc
mov
xchg
mov
pop
adc
xor
daa
sbb
clc
and
or
hlt
pop
shll
mov
dec
mov
sbb
xor
mov
mov
cmc
push
icebp
jmp
xchg
pusha
mov
mov
dec
rol
xchg
adc
rcll
jg
xchg
pusha
push
sub
xorl
int3
inc
mov
jle
push
cmp
nop
xchg
lcall
pop
xchg
jmp
add
or
test
cmp
dec
pusha
push
or
mov
mov
mov
xchg
sbbl
sbbb
aam
dec
push
rolb
or
xor
cli
repz
hlt
rcr
nop
mov
push
imul
dec
sbb
jns
stc
push
int3
cli
lret
and
in
aaa
inc
or
sti
sub
ds
jo
test
xchg
sub
adc
xchg
push
push
xor
aam
cmpsl
iret
repnz
xor
test
lods
test
dec
scas
repz
nop
out
fneni(8087
repz
data16
in
sti
sti
mov
push
mov
xchg
shrb
sub
adc
hlt
and
mov
lcall
or
aaa
jl
sub
cmp
cs
repz
ret
pop
pop
cmp
sahf
js
and
mov
cmp
mulb
jno
inc
in
repz
jg
mov
and
enter
out
int
jg
sub
bound
xchg
pop
jl
mov
loopne
xchg
dec
lret
iret
es
addl
inc
xor
pop
repnz
sbb
jmp
or
into
sbb
jge
add
mov
rclb
sti
adc
mov
enter
add
mov
mov
mov
pop
dec
adc
push
xchg
mov
inc
lret
loope
call
pop
stc
push
adc
aas
insl
jp
dec
cs
adc
xchg
imul
pop
pop
xlat
enter
push
mov
mov
dec
pop
in
daa
sub
insl
push
aaa
mov
inc
jbe
xor
das
mov
lock
jg
std
or
adc
bound
mov
push
adcb
cltd
int
sbb
dec
and
mov
and
pop
pop
imul
jne
cmpsb
mov
xor
and
dec
mov
pushf
test
pop
insb
fldl
xor
mov
fnstcw
adc
in
cmp
sbb
fcmove
je
ret
mov
mov
mov
jnp
lret
dec
cli
jmp
popa
scas
out
pop
pop
movsb
jns
iret
sbb
cmpsb
pop
mov
inc
jmp
test
jns
dec
sbb
pop
fmull
cmc
adc
enter
outsl
sbb
cmp
push
push
cltd
mov
xchg
and
cmp
add
repnz
scas
mov
ficompl
cmpsb
jnp
add
pop
cwtl
outsb
mov
dec
mov
iret
cwtl
lock
inc
ss
and
in
pop
xchg
pushf
dec
iret
clc
stos
and
sbb
mov
cmp
adc
sub
mov
adc
imul
stc
aad
sub
das
into
lock
push
pop
int3
xchg
and
je
cmp
or
sub
mov
cmp
ss
dec
cmp
jmp
xchg
insb
xchg
rolb
push
test
push
or
mov
ss
pop
jg
sub
mov
fsts
stos
adc
gs
xchg
inc
jbe
add
xchg
cmpsb
insl
push
pop
lcall
pushf
pushf
rcrl
push
gs
jns
sub
in
lahf
pop
mov
loop
or
sub
jmp
sub
in
pop
xorl
test
xor
jl
dec
cmp
lret
sbb
inc
lahf
jge
stc
outsb
dec
pop
addr16
sbb
into
cltd
call
shll
shrl
int
sub
pushw
imul
aaa
xchg
stos
daa
in
je
adc
adc
fldt
in
push
push
adc
stos
mov
adc
mov
jns
das
mov
adc
test
ds
push
mov
inc
adc
mov
adc
shlb
ficoms
jns
mov
add
sbb
add
movsb
pushf
lret
mov
pop
cli
movsl
push
cmp
ficoml
addr16
lahf
pop
cmp
daa
dec
je
add
jl
js
inc
mov
dec
out
jo
jge
ljmp
pop
rcr
test
addr16
fistps
push
aas
pop
push
cmp
imul
dec
inc
sbb
jb
fs
and
sbb
mov
pop
les
mov
jmp
pusha
fwait
mov
mov
inc
mov
testb
adc
fisttps
dec
xchg
jae
pusha
sub
divl
dec
jae
jno
mov
mov
lret
inc
mov
ss
ds
bound
std
dec
sbb
mov
mov
inc
dec
fldt
dec
arpl
cmovae
scas
stos
mov
imul
popf
js
imul
subl
mov
mov
pop
repz
mov
mov
sti
xor
xor
fs
cmp
jns
push
mov
and
jno
in
jmp
rcrb
jbe
jae
je
jno
jne
mov
cmp
mov
mov
sahf
mov
les
inc
incl
jp
jl
popa
cmp
push
in
push
xor
in
shlb
mov
push
movsl
dec
aaa
ret
pop
mov
ds
out
jecxz
mov
jo
mov
and
mov
into
scas
addb
in
cwtl
rep
xchg
jne
xchg
push
mov
addr16
dec
stos
xor
std
inc
shll
sahf
or
sbb
fucom
dec
jne
or
lods
jle
push
push
mov
push
stos
into
fxam
cmp
dec
rolb
add
daa
mov
rclb
jb
jbe
lret
xor
insb
pop
sbb
mov
movsb
mov
mov
pop
adc
mov
icebp
cmpsb
je
fcoms
pop
je
rorb
sbbl
cmpsl
lds
fstpt
outsl
xchg
imul
sub
push
push
mov
ret
dec
mov
adc
push
lret
inc
jns
xor
lcall
test
jb
scas
inc
push
es
or
add
je
es
cld
mov
pop
sahf
dec
adc
inc
jg
add
or
inc
iret
add
bswap
adc
inc
mov
pushf
mov
or
imul
insb
dec
dec
pop
fwait
pop
sub
mov
stc
pop
jnp
mov
popa
xor
loop
xchg
inc
sub
dec
cwtl
pop
sub
movsb
cmpsb
xor
pop
es
mov
flds
mov
cmpsb
push
sbb
dec
push
aas
sub
clc
fsub
rcl
repz
pop
cs
fisubrl
cmc
ss
scas
arpl
test
cmpsl
in
mov
adc
imul
sbb
aam
rorb
add
sbb
and
jbe
and
jnp
push
cmp
in
adc
add
loop
stos
inc
pushf
loope
fisubs
aas
and
lea
pop
rorb
lods
add
lret
loopne
mov
roll
xchg
rol
mov
dec
mov
iret
popf
jo
cs
and
sbb
je
flds
sub
add
adc
mov
imul
enter
sub
xor
insb
shr
cmp
test
or
xchg
push
daa
adc
sbbb
mov
dec
mov
or
xchg
pop
movsl
ret
insl
push
cmp
inc
add
hlt
xchg
iret
push
fildll
push
negb
push
pop
movsl
inc
in
test
adc
xor
mov
iret
js
je
dec
scas
lret
add
jne
std
sub
imul
cmp
popa
popf
xor
jecxz
lock
mov
jmp
jp
xchg
xchg
loope
cs
pop
shrb
lret
rclb
enter
lcall
or
cmp
fwait
cmc
sub
add
and
out
mov
fiadds
pop
test
pusha
in
push
xchg
jns
inc
repnz
dec
sbb
sub
push
scas
cli
jnp
push
jmp
ret
iret
aas
fcomp
rcr
cmp
dec
ss
dec
lea
add
cmp
fdivrp
in
jle
cld
sbb
fisubs
mov
add
mov
sub
lahf
sarb
dec
cli
mov
loopne
and
inc
xor
sub
lahf
pop
insl
and
imul
lods
xchg
insl
cmp
aam
das
divl
cmp
adc
or
mov
dec
push
rcrl
les
aad
addr16
mov
dec
mov
xor
jmp
pop
pop
push
inc
sub
nop
jne
or
fistpl
jg
test
sbb
in
call
out
cmp
cmp
push
pusha
or
lods
mov
mov
in
xor
leave
loopne
mov
xchg
aas
mov
push
scas
mov
adc
inc
adc
jecxz
cmp
pop
xor
lock
sbb
jno
test
jne
daa
adc
movsb
add
std
xor
imul
xchg
xor
popf
and
and
aad
dec
test
push
rcl
sbbl
mov
jle
insb
or
scas
cwtl
xchg
mov
mov
mov
xchg
bound
push
cli
lret
js
dec
xchg
lds
test
lcall
dec
inc
fisubl
pop
data16
and
int
adc
aas
aad
cmp
dec
icebp
cli
xor
pop
sbb
pop
das
pop
out
int
punpckldq
add
pop
fnstenv
mov
mov
jmp
enter
mov
test
loopne
test
pop
clc
into
inc
lahf
mov
in
call
push
inc
ja
int
sub
mov
into
mul
xchg
cmp
scas
insl
das
fisttpl
sbb
jnp
cli
mov
stc
xor
mov
test
xor
ljmp
and
add
fidivrl
es
and
call
fsubl
sub
call
sarb
jmp
movsl
je
je
or
rclb
jbe
sub
sub
leave
jle
rcrb
mov
push
and
dec
mov
in
rolb
pop
sahf
clc
or
repz
inc
xor
pop
mov
out
xchg
out
pop
jne
fiaddl
adc
ds
ds
mov
mov
add
cmp
or
stos
lcall
outsb
and
xchg
lods
push
iret
push
in
sub
xchg
fildll
mov
test
pushf
and
push
cld
pop
and
test
pop
dec
pop
or
test
push
sub
pop
std
cwtl
adcl
aas
clc
imul
aam
adc
into
jge
xor
test
mov
test
leave
movsl
das
xor
cli
pushf
repz
rol
in
cmp
outsb
aaa
enter
cmp
push
xchg
sahf
inc
std
lret
icebp
cmp
dec
or
sub
in
mov
int
inc
push
mov
xchg
adc
out
push
js
push
lods
sbb
mov
roll
icebp
popa
outsl
sub
jbe
arpl
test
cwtl
and
js
in
out
iret
mov
add
xlat
das
jne
aam
in
adc
xchg
push
stos
xchg
out
fwait
xchg
repz
lods
inc
jg
fsubr
sub
data16
add
pop
imul
inc
mov
js
jl
xor
inc
hlt
gs
subl
xor
loope
pusha
pop
adc
insb
cld
aad
cmpsl
cmpsl
sti
cltd
in
sbbl
gs
pusha
add
in
cmp
iret
int
cmp
jge
out
sbb
jmp
lcall
flds
or
sbb
jno
fldl
add
pop
popa
arpl
xchg
or
inc
pop
es
mov
mov
popf
push
push
or
pop
addr16
sbb
mov
sub
cltd
fmulp
out
lea
movsb
sub
cmpsl
js
xor
cld
pop
sbb
xchg
add
inc
rorl
xor
lea
and
shlb
int3
mov
sarb
jno
jl
sub
jp
popa
mov
jbe
out
jmp
out
lret
test
mov
inc
test
inc
and
dec
out
in
test
lods
test
adc
push
xor
pop
mov
xor
fs
mov
cltd
xor
cmc
push
sub
jg
jae
push
inc
lret
pusha
and
lahf
les
inc
add
popa
push
ljmp
inc
enter
xchg
imul
pop
push
xchg
iret
sbb
cmp
cs
jne
and
repz
push
daa
jg
jb
loop
outsl
xor
addr16
in
mov
sahf
ljmp
add
pop
nop
movsb
push
dec
popa
dec
mov
jmp
mov
into
rcrb
sbb
test
fdivrs
cmp
ds
and
imul
sub
cmp
bound
xor
jmp
inc
pop
lods
hlt
fstpt
popf
xor
sbb
mov
out
nop
ret
xchg
sbb
adc
inc
pusha
insl
punpcklwd
jne
out
inc
int3
jle
and
and
das
lock
xor
pop
imul
pop
jp
repz
push
and
cmp
gs
cld
shrl
mov
andb
decb
cltd
dec
adc
mov
in
loope
push
xchg
es
pop
mov
mov
or
setae
xchg
cmp
inc
mov
insb
pop
adcb
xchg
mov
xchg
or
mov
lcall
add
jne
fs
inc
sub
rorb
push
and
adc
dec
mov
fdivrs
addr16
imul
mov
xchg
jno
cmp
sbb
xchg
sahf
xchg
mov
mov
xorb
fs
dec
out
outsb
push
repnz
cmp
inc
out
insb
push
andl
jnp
dec
pusha
pop
jns
aam
cmpsb
cmc
or
adc
lret
test
ret
addl
adc
push
in
jne
mov
xor
fwait
stos
mov
adc
in
push
xor
fdivrl
mov
adc
mov
pop
out
lea
out
lret
mov
test
mov
js
xchg
mov
fistl
inc
hlt
mov
scas
out
push
pmaxub
pop
cmp
movsl
orb
dec
pop
jnp
int3
adc
push
xchg
sbb
out
js
in
push
cwtl
xchg
jecxz
xchg
daa
mov
loopne
shll
lret
lahf
cmp
shll
jbe
sahf
subb
push
and
adc
leave
out
mov
mov
pushf
mov
xor
lahf
xor
lds
xor
push
pop
xchg
fs
rolb
cs
mov
je
cmp
mov
xchg
and
push
mov
outsl
inc
dec
addr16
push
cmpsb
outsl
xchg
enter
addr16
jbe
pop
cli
repz
jle
inc
fadds
das
mov
xchg
jle
into
jp
jb
fildll
lods
or
hlt
push
jmp
repz
pop
mov
lahf
loop
in
cs
jb
mov
xor
mov
test
lahf
mov
fadd
lods
mov
imul
sti
cmpsl
jno
and
enter
and
jnp
and
pop
inc
and
or
xor
stos
test
lock
mov
cmpb
sub
sbb
mov
sub
push
dec
int3
adc
add
inc
xchg
inc
push
in
mov
and
cmpsb
dec
xor
jle
cs
adc
icebp
xor
mov
icebp
or
test
push
add
sbb
lea
in
dec
cld
aas
xchg
outsb
aam
out
pop
jl
xchg
rcll
push
jmp
xchg
cmp
push
lret
adc
sbb
mov
bound
nop
mov
push
movsl
fucomip
or
leave
stos
or
lret
out
sti
mov
sarl
std
jp
cs
fdivs
shrl
push
dec
inc
cmpsl
psubsb
bound
loope
arpl
fcoml
cmp
iret
jae
shll
shll
call
add
movl
in
xor
stc
mov
push
aam
xchg
mov
pop
out
fidivs
out
sbb
ret
repz
es
fldl
das
cmpsl
lret
adc
push
rorb
in
lds
icebp
leave
xor
es
push
mov
dec
adc
imul
clc
xchg
mov
fwait
repnz
push
fcomps
jg
je
ss
jle
out
pop
sub
cmp
lds
mov
inc
sbb
inc
push
imulb
sbb
loopne
imul
fwait
das
dec
adc
mov
xchg
and
xchg
inc
mov
fisttps
cld
dec
mov
cmp
sub
xchg
xchg
fnstcw
adc
push
push
js
jle
inc
test
pop
sub
es
sub
stos
inc
mov
adc
lods
mov
dec
dec
fstps
or
inc
in
xchg
addr16
inc
js
jmp
push
loop
jno
sbbl
xchg
inc
stc
inc
dec
das
mov
loope
sub
jmp
fwait
adc
push
mov
dec
adc
scas
in
movsb
xchg
addr16
std
and
xchg
push
jbe
fistpll
or
aam
test
lea
stc
stos
shl
pop
or
negb
iret
mov
pop
fwait
jg
adc
push
jmp
pop
scas
and
fisubl
mov
pop
inc
add
push
jle
or
out
xchg
loopne
sbb
mov
repnz
push
fistl
out
cld
push
lcall
fstpl
test
push
inc
push
inc
stc
jp
xchg
push
mov
jecxz
es
jbe
cltd
mov
lds
std
fidivrs
movsl
in
jo
mov
add
jb
leave
hlt
mov
orb
dec
push
scas
mov
rcl
movsl
mov
inc
stos
out
jmp
fnstenv
cmp
rep
push
dec
std
pusha
clc
cltd
mov
inc
test
dec
pop
dec
leave
jnp
mov
icebp
scas
xor
and
mov
fcompl
ret
cmc
ror
or
xchg
pop
cmc
outsb
loop
and
adc
mov
dec
inc
add
pushf
arpl
jmp
dec
dec
pusha
pop
mov
bnd
dec
nop
test
sub
dec
or
dec
mov
in
pop
in
jne
aad
lahf
test
fsubr
gs
lret
push
mov
fwait
xchg
imul
add
inc
or
pop
loope
xor
mov
loope
mov
mov
push
sti
aad
or
shr
sbb
rcrb
or
mov
aaa
adc
adc
mov
and
insl
les
inc
push
mov
std
ret
cs
into
or
rclb
xor
std
pop
cmp
mov
add
jp
inc
rolb
ret
push
movsl
ds
add
lcall
rcrl
jge
orl
mov
ret
push
sub
pop
rorl
ja
divb
mov
addr16
test
jg
sbb
xor
imul
subl
or
aas
inc
mov
and
dec
inc
in
fwait
and
std
jp
mov
push
dec
je
jb
mov
subb
or
adc
repnz
add
add
dec
mov
mov
and
fidivl
jb
fadd
dec
cltd
jl
fdivs
inc
dec
add
ja
data16
pop
aam
adc
bound
mov
test
arpl
pop
ja
imul
xor
dec
in
mov
movsb
loop
out
xchg
jmp
xchg
cmpsb
inc
and
dec
fildll
stos
rorl
or
xlat
mov
lock
xchg
scas
sbb
mov
shll
adc
arpl
in
aam
sbb
rcrl
xchg
int
add
fsubrs
std
or
mov
and
nop
arpl
mov
lcall
jno
xchg
rcll
xlat
inc
sbb
out
push
or
notl
inc
or
pop
adc
cltd
stc
mov
adc
or
cmp
daa
gs
repnz
push
stc
mulb
mov
shll
sbb
test
sbb
and
hlt
adc
xchg
jecxz
outsl
fisubs
orb
xor
aam
mov
pop
cmc
lds
mov
icebp
push
ds
in
dec
in
enter
mov
inc
xor
in
mov
in
popf
filds
or
mov
gs
mov
leave
repz
sbb
dec
fidivl
out
sbb
call
test
sbb
sbb
and
loop
xchg
je
pop
test
sub
lret
test
je
sbb
push
adc
lods
cmp
mov
dec
imul
mov
mov
popf
idivl
mov
jb
xor
pushf
gs
lcall
cmpl
repz
mov
ret
and
add
jp
fisttpl
dec
xchg
mov
cmp
pop
rorb
movsb
or
daa
mov
cmpsl
cmpb
xchg
mov
xorb
leave
sub
and
xor
cltd
push
aaa
ja
aaa
pop
push
mov
pop
aad
inc
and
cmpsl
pop
push
cmp
inc
dec
xorb
mov
xlat
ljmp
mov
movl
popa
xor
xchg
cltd
or
cmpsb
fucom
shlb
aam
gs
pop
push
cmp
mov
ret
lods
loopne
cmpsb
mov
repz
sbb
and
inc
add
les
movsl
jae
mov
lods
ja
bound
sbb
and
aam
shrb
fcoms
aaa
jg
push
daa
clc
mov
sbb
popa
scas
cwtl
or
sub
jno
bound
in
sbb
pop
mov
cwtl
add
xchg
cmp
mov
data16
push
repnz
push
mov
mov
lods
jmp
addl
cmc
data16
insb
roll
cmc
pop
fisttpl
call
cmp
or
xchg
push
pop
sub
push
xchg
mov
sub
mov
notb
negb
nop
test
aad
int3
push
lods
sbb
dec
add
mov
int3
lea
xor
fnstcw
cltd
fyl2x
nop
push
or
add
outsb
mov
fbld
fs
imul
xchg
cmp
adc
sub
jbe
push
jno
lods
stos
adc
sti
imul
mov
or
ficoms
dec
sti
insl
pop
inc
xchg
cwtl
sub
or
or
test
xor
daa
mov
jmp
lahf
shll
repz
rcll
push
out
mov
jbe
push
add
imul
sub
lret
add
sub
add
aad
loope
xchg
fmuls
movsl
push
daa
add
hlt
std
rolb
subl
jnp
mov
xor
jp
in
cmp
in
xchg
pop
xor
sub
sbb
push
dec
test
mov
sbb
movsl
fdiv
lds
pop
xchg
aam
movsb
cmp
dec
addr16
lds
mov
sub
pop
or
adc
je
and
sbb
jo
sti
push
inc
push
push
subl
jb
mov
sbb
ja
add
sub
arpl
popf
xchg
cld
push
and
clc
sub
cmp
jb
dec
loopne
xchg
subb
sbb
add
mov
sti
adc
cwtl
movsl
movsl
sti
mov
in
ja
andb
outsl
pop
push
dec
call
scas
pop
or
lret
out
or
orl
pop
lcall
mov
cmp
sub
movzbl
cmpsb
mov
adc
push
mov
sbb
decb
adc
pusha
sbb
arpl
stos
rorb
mov
or
push
hlt
cmpsl
mov
dec
imul
push
stc
dec
cli
arpl
iret
mov
outsl
inc
bound
adc
repz
repz
scas
mov
les
clc
jne
push
xchg
mov
sub
hlt
call
xor
scas
clc
ja
test
mov
cmp
dec
dec
push
push
pop
dec
cld
fcompl
aas
mull
lahf
sbb
pusha
mov
movsl
xchg
rolb
mov
cltd
jne
outsb
mov
scas
pop
and
and
loop
repz
insb
orl
cmc
push
add
movsb
pushf
stc
std
sbb
xor
repnz
popf
mov
in
jg
repnz
push
sub
sub
ds
js
mov
lea
xchg
std
repz
dec
adc
fisubrl
push
bound
xchg
je
mov
out
push
push
pop
xchg
icebp
sbb
mov
mov
std
adc
sub
loop
insl
lahf
lret
cltd
aad
mov
adc
sahf
pop
sub
pop
cs
sahf
and
ret
fsubrl
sbb
adc
lds
repnz
inc
jno
pop
xchg
in
dec
jg
sahf
xchg
pushf
jge
push
sbb
ficoml
shlb
pop
xlat
mov
fidivrs
in
jg
xor
bound
int3
icebp
cmc
add
mov
dec
lret
int
imul
movb
repnz
xchg
lods
aad
popa
shrd
stos
rsm
or
pushf
sar
out
dec
xor
scas
insl
imull
push
mov
ss
pop
mov
inc
mov
pop
adc
cmpsb
repz
mov
decb
fistl
mov
paddsb
push
cwtl
popf
push
jbe
sbb
jo
test
adc
jecxz
sub
xor
mov
jl
mov
mov
sub
mov
test
ljmp
or
aam
sbb
test
in
pushf
es
sub
shrl
into
into
mov
or
sbb
js
loop
imul
add
dec
mov
cmp
xlat
loop
js
pop
adc
adc
xlat
mov
repnz
aaa
idivb
xor
testb
enter
fbld
mov
das
xor
test
jnp
mov
push
push
lods
add
stos
pop
test
sbbb
gs
imul
pop
fs
push
push
sbb
cmp
or
mov
jo
pop
cli
jge
data16
or
inc
outsl
loop
sbb
lods
jbe
xlat
pop
or
inc
testb
aaa
js
out
mov
inc
pop
cmpsl
clc
push
cld
jg
ds
jmp
jmp
mov
xchg
shll
jp
push
cmp
cmp
adc
pop
and
into
aad
jo
jnp
test
jb
stos
popf
push
xchg
imul
cmp
es
xchg
sub
lods
xor
and
fwait
mov
mov
das
add
cmp
dec
mov
pop
fistpl
jbe
ficoms
or
into
cltd
sahf
insl
ja
xor
hlt
inc
fiadds
mov
push
int
aad
sbb
jecxz
mov
inc
cmc
insb
pop
cltd
pop
add
inc
mov
scas
xchg
or
repz
lret
xchg
shlb
jnp
pop
test
pop
add
mov
mov
xchg
xor
push
scas
mov
jnp
mov
sti
fcmovnu
jne
xor
cmc
jne
insl
pop
movsb
pusha
sub
rclb
popf
jg
lds
les
push
jb
sahf
add
loop
cmp
xor
mov
mov
loopne
xor
loop
jecxz
cmp
xor
mov
sbb
or
cmp
mov
arpl
cmp
inc
popa
mov
aad
adc
cmp
out
daa
and
test
loope
nop
adc
add
pop
movsl
pushf
push
sti
shl
jge
idivl
sbb
ficoms
push
mov
pusha
mov
and
cmp
add
dec
lahf
add
movsl
inc
rcrl
popf
mov
and
push
and
pop
dec
sbb
adc
inc
shrl
nop
jo
lds
rcl
add
sbb
add
cld
adc
cs
add
mov
insl
xchg
lock
int3
dec
rclb
push
lods
or
and
push
mov
add
in
iret
pop
cmpsb
mov
or
es
add
pop
pop
cmpsb
imul
shll
jae,pn
xchg
flds
pop
mov
jae
gs
mov
xor
jg
loope
inc
fwait
mov
push
mov
sbb
insl
push
arpl
iret
push
mov
cmc
mov
mov
scas
subl
inc
popa
xor
ret
leave
je
jl
test
inc
shll
test
jmp
mov
sbb
jmp
mov
and
es
popf
sbb
push
int
ljmp
mov
aaa
xchg
stos
popa
addr16
mov
dec
cmpsl
ja
fiaddl
lods
lcall
mov
cmp
roll
cmc
xchg
xchg
xchg
jmp
icebp
shll
ds
jb
xchg
in
sub
pop
icebp
pop
stc
mov
adc
push
adc
xchg
imul
xorb
and
loop
or
cwtl
xchg
nop
push
mov
movsl
nop
iret
xor
js
and
cmp
push
dec
mov
in
pcmpeqd
xchg
mov
mov
push
cmp
out
fldcw
push
leave
mov
rcl
inc
push
ret
and
cmpb
cmp
loopne
and
mov
arpl
imul
pop
pop
rorb
std
nop
xlat
icebp
jp
shr
mov
inc
ret
in
stos
cmp
mov
mov
mov
jmp
lretw
lods
add
jmp
sbb
int
jns
jae
popl
and
add
add
les
add
cmc
jle
lock
push
mov
movsb
pop
dec
dec
xor
xor
cmp
int
and
ss
sarl
sub
pushf
xorb
add
ljmp
inc
jl
int3
xchg
cmp
cvtps2pi
xchg
in
jl
jmp
fldt
jg
bound
cmpsb
movb
sub
insb
jmp
ljmp
sbb
xor
and
cli
add
mov
xlat
push
jo
cltd
xchg
sub
outsb
mov
pop
xor
jne
pop
xor
test
sbb
sti
in
das
ja
jp
movsb
and
mov
jno
aaa
icebp
iret
stos
lret
movsb
dec
mov
outsl
scas
xor
pop
and
add
jge
sahf
outsb
or
cmp
dec
stos
jo
lcall
mov
adc
into
lods
sti
sbbl
sarb
or
jecxz
pop
data16
lods
dec
jg
jl
dec
cmp
pop
pushf
xchg
pop
stos
fld
xchg
cmp
add
xor
orl
bound
xor
lret
sbb
jecxz
ret
xorb
testb
fcomp
popa
imul
inc
fstpl
fimull
push
addr16
and
imul
fsts
roll
push
sahf
loopne
lds
cmp
iret
inc
and
aad
sbb
or
dec
cmc
pop
pop
outsl
cmp
stos
repz
test
ret
and
sub
push
lods
or
popa
mov
jb
and
stos
lahf
push
gs
pop
push
pop
sar
cli
xor
imul
sub
mov
imul
jnp
es
in
aas
mov
out
scas
inc
mov
imul
in
loop
adc
xchg
pop
outsb
cmp
filds
loop
bound
adc
add
jb
in
jl
xor
jno
fistpll
fcmovnu
in
pop
mov
cld
mov
int
pop
in
lret
jne
outsb
mov
or
xlat
mov
cmpsb
imul
sub
repnz
mov
mov
int
repz
xor
cwtl
jno
imul
cmpsb
scas
insl
add
test
ds
add
xlat
neg
jns
or
outsb
filds
jbe
mov
lds
call
les
jl
sarb
mov
int
out
repnz
push
sub
mulb
int3
in
jae
jg
lds
add
lods
dec
loope
stc
pop
or
cmp
fwait
cltd
imul
or
xchg
into
in
add
jb
lds
pop
lcall
pop
xor
outsb
ljmp
mov
mov
mov
movsl
xor
roll
sbb
pusha
std
dec
aad
dec
mov
pop
inc
xchg
xchg
jns
shll
mov
adc
adc
mov
mov
repnz
stos
jg
mov
jbe
xchg
in
sti
movsl
jbe
movsb
insb
sub
sub
jnp
insb
mov
push
int3
not
xchg
inc
xor
push
je
out
pusha
pop
add
mov
push
in
mov
inc
lods
faddl
inc
lcall
push
add
mov
call
jb
rcll
sub
inc
inc
cmc
adc
enter
mov
lds
dec
daa
movsb
fbstp
and
dec
mov
arpl
stos
ljmp
loopne
int
in
inc
jne
daa
std
shr
loope
push
and
and
xchg
jae
add
sub
mov
and
mov
js
cld
dec
mov
mov
dec
push
scas
ja
pop
xor
mov
gs
sub
and
pop
mov
cmp
mov
or
mov
out
xor
repnz
push
test
js
and
ficompl
repnz
dec
loopne
movsb
outsl
shll
adc
mov
and
stc
mov
scas
ficomps
adc
hlt
jmp
mov
mov
ja
pusha
mov
and
test
or
add
jmp
ds
popf
jge
and
sub
pop
jle
mov
push
arpl
sbb
cmp
scas
adc
mov
jo
test
roll
loope
sub
pop
and
cmpsl
xchg
adc
add
inc
insl
xchg
jo
push
addr16
xchg
xchg
push
sbb
xor
xchg
add
add
xchg
xchg
js
stos
outsl
outsb
movsb
fbstp
mov
stc
enter
aad
sbb
leave
lods
push
mov
cmp
fmul
in
add
dec
stos
and
out
adc
mull
testl
mov
cmp
pushf
arpl
dec
in
mov
jo
hlt
gs
xor
aas
and
roll
cmp
cld
jno
xchg
push
repnz
adc
data16
aam
sub
jb
xchg
add
sub
ficomps
jo
stc
push
lahf
leave
int3
test
or
inc
cld
adcl
js
lcall
clc
stos
xor
rclb
jl
push
fcompl
fwait
loope
rcll
loop
sahf
pop
and
jp
lods
ss
mov
push
jge
mov
jae
and
dec
in
xchg
pop
pusha
fldcw
add
push
flds
pop
shrl
negb
cmp
mov
das
lret
push
mul
mov
push
dec
dec
movsb
dec
dec
daa
jno
push
and
and
sbb
in
xchg
scas
push
mov
or
cmpsb
adc
popf
js
xor
lret
mov
sub
mov
mov
ret
adc
pop
pop
cmp
mov
test
jae
xor
iret
stc
xor
or
add
lahf
pop
insb
and
mov
xor
adc
dec
add
xchg
sub
aad
xlat
pop
sbb
push
jb
andl
sbb
push
shrb
jb
ret
xor
push
jge
sub
xchg
sub
and
in
out
ret
loopne
add
ljmp
movsl
push
jg
sbb
xchg
jmp
ficoms
insb
fnstcw
ds
orl
inc
mul
fs
insl
out
sti
and
sub
push
and
mov
addr16
xchg
cmp
clc
jmp
adc
inc
dec
addl
xor
in
test
xchg
mov
xchg
adc
mov
mov
fisttps
xlat
out
std
mov
xlat
and
push
sbb
xchg
jg
pop
sub
rcll
ja,pt
sub
adc
aaa
out
or
stos
js
jg
cmpsb
movsb
aaa
test
in
into
nop
adc
jbe
cltd
mov
imul
clc
mov
mov
and
insl
pop
push
xchg
negl
xchg
fwait
mov
mov
cmpsb
jo
and
push
cmp
shl
xchg
and
mov
ret
std
dec
pop
push
cli
out
add
mov
xchg
or
mov
mov
jp
lds
xchg
cltd
xor
add
ret
int
out
adc
repnz
hlt
inc
jge
repnz
outsb
inc
xlat
pop
sbb
and
xor
xor
inc
pop
lret
or
mov
push
test
fisubl
bound
mov
xor
add
lods
sbb
or
add
in
jnp
adc
stos
mov
les
lock
mov
and
xchg
mov
stc
jbe
call
xchg
inc
push
iret
and
daa
sarl
ja
lea
mov
and
hlt
nop
daa
push
jo
add
rcr
add
mov
pop
inc
aaa
bnd
cmpsb
pushl
xchg
jle
cld
rcrl
popf
aam
fisubrs
or
jl
int3
movsb
daa
jbe
popa
jg
dec
imul
popa
push
lock
loopne
lret
dec
out
ret
test
mov
adc
and
lahf
jmp
or
jmp
jg
dec
jne
in
mov
cmp
and
sub
pop
lds
rcrb
cwtl
movsl
je
pop
fbstp
fisttpll
movsl
xchg
fidivrl
and
xor
mov
jp
or
inc
mov
repnz
push
push
ret
rcl
enter
jmp
in
fisubrl
daa
or
call
push
stos
pop
xor
or
and
cwtl
pop
push
daa
push
inc
inc
aaa
pop
mov
aaa
push
divl
clc
lock
shll
xchg
xor
fstpl
orb
orb
nop
jnp
gs
imul
lock
add
movsl
test
adc
imul
xorl
jp
xor
mov
bound
push
incb
rorb
push
jnp
mov
dec
jp
aad
cmpsb
subb
les
xchg
sub
jg
pop
and
xor
mov
fisttpll
in
arpl
in
mov
add
push
cmp
push
es
scas
iret
pop
jb
dec
dec
pop
test
insb
aas
enter
push
mov
data16
scas
push
imul
fsubrp
inc
xchg
pop
aaa
pop
xchg
aam
xor
push
pop
xchg
lret
or
int
or
loope
stos
dec
sub
adc
pop
outsl
xor
jge
jmp
ljmp
fstl
popf
cwtl
xorb
stc
popa
xchg
or
sbb
jmp
leave
cmp
stos
lods
mov
jmp
fistps
jbe
mov
shll
xor
xchg
pop
sub
lret
push
mov
inc
xchg
inc
out
sbb
cli
add
xchg
outsb
stos
xorl
incb
in
out
int3
jb
or
ret
sub
sbb
cmpb
fs
xchg
filds
mov
pop
or
pop
pusha
push
adc
xor
dec
and
into
or
addb
stos
jmp
adcl
add
dec
lds
sbb
cwtl
mov
add
fmuls
mov
mov
push
sbb
push
cmp
aam
mov
aad
and
js
fisubrl
jmp
xchg
stos
mov
js
ret
adc
mov
mov
jbe
dec
shlb
bound
xchg
adc
iret
cmc
into
test
mov
adc
lret
xadd
sbb
push
fistps
mov
pop
lret
cwtl
cmpb
adcb
dec
pop
jp
inc
dec
push
jmp
iret
adc
out
repnz
mov
aaa
mov
push
mov
inc
sub
mov
jge
and
push
pop
xor
adc
es
sub
add
jp
xchg
nop
sarl
test
iret
movaps
jno
ljmp
pop
stos
inc
dec
fistl
xchg
leave
lods
mov
lea
xor
scas
ljmp
push
jle
sar
mov
loopne
sub
jmp
insl
or
xor
jne
adc
movsl
jae
mov
inc
es
mov
xor
push
out
cmpsl
push
incb
mov
call
in
mull
adc
jns
sub
mov
jae
pop
cmp
push
cmc
lods
mov
in
mov
add
xchg
and
adcb
pop
sbb
cmp
xor
adc
pop
mov
push
cmp
movsb
mov
mov
and
std
and
pusha
out
adc
adc
xor
xchg
aam
xchg
push
xchg
loopne
mov
scas
xchg
inc
fisttps
daa
mov
cltd
dec
test
test
jecxz
and
dec
xor
cmp
lahf
into
cmp
or
xchg
mov
mov
and
sub
sub
lods
inc
fbstp
popa
out
or
cltd
psubb
shrb
nop
in
xchg
shll
mov
jg
adc
fs
fwait
xor
xor
clc
imul
aam
xor
pop
adc
dec
xlat
mov
push
add
adc
addr16
popa
call
test
les
ret
sarl
scas
jle
mov
mov
in
fbld
cmpb
lods
push
pop
xchg
sbb
mov
push
shll
jne
mov
inc
jno
or
or
xlat
mov
sub
xor
xlat
or
xor
dec
xchg
fisttps
fadds
shll
xor
add
adc
push
cmp
sbb
not
gs
inc
ss
jmp
xor
pushl
nop
xchg
sub
arpl
call
cmp
pop
sbb
fldcw
mov
jnp
xlat
pop
mov
cmp
jmp
mov
jbe
and
sbb
ret
jbe
sbb
xor
popa
mov
mov
xor
cwtl
mov
lock
jns
nop
jae
pop
insb
rclb
mov
stc
sbb
mov
test
add
hlt
in
xor
push
fists
pop
rcrb
add
dec
add
test
in
xor
loop
jne
xchg
fmul
add
loopne
lods
adc
mov
adc
psrld
sbb
mov
loopne
ds
lret
adc
mov
dec
test
out
sub
sub
or
pop
lret
jecxz
and
pop
rcll
pop
or
jge
pop
xor
cltd
push
xchg
lcall
jp
lods
jl
sbb
sbb
test
fldcw
out
test
lahf
jnp
sub
jmp
aad
stc
jp
pop
loope
mov
xchg
pop
or
sbb
leave
dec
push
pop
mov
popa
andb
or
add
mov
xchg
lock
daa
sbb
pop
xor
add
adc
mov
dec
test
push
aaa
jmp
mov
push
sub
sbb
mov
test
stc
in
rorl
mov
mov
inc
or
fsubp
mov
sub
ret
add
pop
roll
cmp
insl
pop
cmpsl
leave
in
sub
hlt
out
movsl
add
mov
add
pop
jne
jp
xchg
add
movsb
jp
mov
cmp
dec
mov
dec
jnp
dec
mov
dec
push
cmp
dec
pop
or
pop
inc
cmp
outsl
adc
in
or
outsl
xor
sub
mov
push
lahf
adc
push
outsl
adc
cwtl
jp
loope
sub
add
dec
aad
add
scas
sbb
or
outsb
cld
pop
nop
cli
jo
sbb
fisubs
jo
mov
xchg
xchg
aaa
imul
pop
js
scas
jne
pop
mov
xchg
jne
pushf
out
aam
les
into
pusha
push
loope
cmp
loope
into
fldcw
rcl
jg
addr16
test
mov
cwtl
ds
test
mov
or
mov
mov
mov
in
cltd
sub
mov
push
lret
out
out
or
adc
xor
mov
sub
sahf
push
xor
mov
xor
push
jg
fadds
dec
cmp
jecxz
stos
cmp
shlb
pop
xchg
inc
stos
nop
mov
nop
jmp
add
pop
or
dec
test
insb
aas
mov
data16
rcr
stos
mov
mov
ljmp
in
je
push
push
mov
jo
dec
js
outsb
es
inc
mov
cmp
jmp
fstl
add
pop
cli
sbb
mov
insl
mov
pop
inc
inc
sarl
mov
lock
sahf
mov
lret
xchg
xor
sahf
mov
int3
std
lahf
inc
es
mov
test
lret
nop
fnsave
imul
leave
inc
push
sbb
sub
xor
add
xchg
lea
dec
xchg
xchg
mov
push
xchg
lcall
rclb
dec
inc
mov
stos
testb
mov
mov
xor
pop
jmp
xor
fstl
adc
jle
push
mov
ljmp
xor
dec
and
lock
mov
je
xchg
scas
inc
lock
fstpl
gs
cwtl
push
jmp
aas
xchg
mov
addl
addr16
popa
aaa
inc
mov
pop
movsb
inc
jge
popa
loopne
into
and
sub
andb
pop
pop
xor
push
dec
cwtl
stos
lret
or
fldcw
pop
cli
stos
fwait
add
push
sub
inc
fsub
sbb
aam
icebp
sbb
sbb
nop
mov
std
inc
mov
xchg
pop
mov
pop
cmp
add
pop
inc
movsl
mov
lock
xchg
or
xor
cwtl
inc
stos
mov
xchg
scas
rol
adc
roll
ljmp
test
loope
mov
fldt
mov
or
cmp
or
mov
adc
js
adc
cmp
stc
push
sahf
and
or
adc
jp
fcmovu
push
adc
fstpt
test
ret
ljmp
jmp
push
lret
ss
xor
adcl
mov
cs
ja
jnp
sub
jmp
nop
push
mov
and
push
pop
jle
int
inc
jp
aam
insl
lret
mov
push
xor
insl
fists
xchg
jns
call
push
loope
subl
jmp
int
mov
cltd
mov
stos
sti
dec
pop
out
in
mov
jg
dec
daa
xchg
int
repz
inc
cltd
push
icebp
mov
orl
push
arpl
mov
dec
ja
cltd
lahf
and
lds
push
or
push
in
jge
and
and
cmp
xor
mov
shlb
mov
cmp
sbb
loopne
jns
popa
sub
mov
out
int3
iret
push
and
jecxz
or
lods
mov
mov
mov
xlat
and
cmp
xchg
jmp
inc
aaa
mov
mov
mov
js
lahf
mov
xchg
cmp
add
cmp
add
mov
mov
outsb
loop
dec
scas
xlat
sti
or
rcrb
cld
movsl
xchg
pop
pop
enter
adc
stos
test
push
test
imul
and
mov
pminub
pop
sub
sub
jg
mov
js
sub
cmpsb
mov
cltd
mov
stos
icebp
imull
je
je
mov
cmp
pop
cmpsl
rcrb
or
fwait
ret
es
pop
cmp
add
push
xor
ljmp
in
xchg
mov
sbb
or
inc
fsubrp
ficomps
cmpsl
inc
add
mov
jmp
dec
inc
scas
fidivrs
hlt
push
adc
pop
dec
cs
fwait
stc
cmc
jecxz
pusha
xor
sub
sub
jg
pop
mov
mov
jo
frstor
or
std
out
add
data16
cmp
lods
cmp
dec
sub
cli
and
in
mov
mov
out
push
imul
jo
mov
sbb
pop
fstpl
clc
inc
frstor
jp
and
pop
cli
arpl
mov
repnz
mov
mov
push
insl
jp
push
lock
add
out
lahf
jae
fsts
or
sub
add
arpl
or
loop
test
sbb
mov
sub
int3
or
arpl
leave
mov
cmpsl
cltd
sahf
jmp
sarl
jg
inc
pop
jge
lds
cmp
add
mov
fldt
sti
sbb
test
pop
jle
jb
xchg
js
pop
xchg
push
lds
xor
int3
jmp
inc
sahf
pusha
out
mov
mov
mov
jge
push
lret
adc
dec
inc
std
sbb
jecxz
dec
out
imul
dec
pop
dec
scas
pop
loopne
xchg
ret
add
daa
aaa
leave
xchg
lock
repz
leave
pushf
movsl
pop
push
jge
xchg
mov
out
orl
pop
inc
mov
movsl
mov
inc
arpl
inc
sarl
jmp
xlat
ja
leave
mov
jmp
lock
mov
loope
leave
pop
mov
sub
mov
aad
jnp
aad
roll
lahf
xor
lods
aaa
xchg
ljmp
cli
xor
stc
pop
jge
aad
xchg
lahf
into
sbb
mov
jns
sub
sub
pusha
out
sbb
mov
push
je
cmp
test
repz
lods
adc
inc
push
das
jecxz
adc
xor
push
lods
imul
pop
test
add
sub
sub
faddp
ffree
mov
push
jne
and
test
scas
cli
outsl
jecxz
imul
lahf
lret
loop
loopne
outsl
js
dec
leave
sbb
shll
movsb
xchg
jmp
and
cli
cmp
pop
jg
push
jns
ret
leave
movsb
inc
insl
and
ss
in
lret
ja
cli
mov
sub
cli
int
es
mov
es
push
fdivrl
jnp
fadds
mov
push
sub
cmpsl
lock
jp
lret
mov
and
testl
stos
adc
pushf
adc
andl
pop
add
push
push
mov
mov
imul
popa
daa
fcmovnbe
add
or
imul
xchg
inc
outsl
sarl
adc
mov
push
cmp
pop
cli
add
cmpsl
adc
adc
test
iret
aad
mov
cmc
xor
int3
add
iret
pop
xchg
testb
mov
add
xchg
test
loopne
add
scas
decb
adc
shll
imul
call
repz
cmc
pushf
sbb
sub
pop
in
or
mov
xchg
gs
lret
in
xchg
push
xor
push
push
xor
sub
inc
and
push
mov
and
pusha
pop
dec
xchg
mov
cmp
test
out
test
push
cmc
cld
mov
pop
pop
dec
mov
mov
popf
std
ljmp
sarb
insb
add
or
inc
adc
jno
mov
jnp,pt
sub
add
push
jmp
aas
iret
mov
adc
sti
dec
push
in
dec
je
test
insl
and
int
idivb
push
mov
push
xchg
inc
pop
cmpsb
pop
pop
pop
and
outsb
adc
iret
mov
push
lcall
cmc
mov
mov
xchg
and
xor
shll
mov
mov
mov
mov
jle
sbb
ljmp
dec
pop
adc
in
imul
push
shlb
jo
inc
in
shlb
mov
sub
fldcw
add
aas
or
clc
jnp
rorl
insb
mov
xor
loop
mov
xlat
push
or
xlat
lock
fdiv
adc
push
shlb
cmpxchg
fcmove
adc
sub
push
xchg
dec
mov
dec
mov
int
dec
enter
and
and
xor
ja
cmp
daa
inc
xchg
or
jb
jp
pop
pop
jge
repz
aam
mov
mov
fisubrl
hlt
mov
mov
or
add
push
imul
std
and
loopne
xchg
sub
ss
mov
xadd
and
add
adc
xchg
lahf
inc
add
cli
sub
push
xor
je
subb
sti
jg
cmpsl
pushf
xorb
scas
pop
pushl
nop
pop
inc
sub
dec
popa
push
jae
insb
jge
and
in
and
mov
lahf
fwait
or
fwait
sub
jmp
shr
push
mov
mov
ja
imul
out
mov
mov
pop
stos
loope
xchg
daa
mov
cld
cmpsb
mov
jo
cmpsl
in
jne
int3
dec
sub
sti
aad
jo
sub
movsl
pop
out
mov
push
adc
xor
jle
stc
mov
add
jb
and
cmp
mov
mov
sbbl
leave
cmp
adc
ret
mov
bound
cmpsb
or
jp
js
mov
mov
adc
out
mov
and
pop
push
outsb
lret
les
xor
pop
je
jg
shll
lret
sub
or
adcb
mov
or
or
rcl
push
ss
cltd
ss
out
inc
inc
xor
loopne
mov
pop
aaa
in
and
mov
cmp
cmp
or
ret
inc
push
fdivr
xor
jo
int
mov
or
sub
cmp
xchg
jecxz
and
inc
mov
sbb
mov
mov
xchg
and
popf
or
ja
mov
mov
imul
fsubrl
fst
popa
out
pop
out
mov
sub
push
fwait
out
jmp
jl
adc
push
pop
adc
dec
popa
mov
int3
push
push
adc
pop
inc
out
pushf
inc
adc
jecxz
cld
hlt
pop
and
xlat
mov
and
jg
popa
or
jg
mov
xlat
rorb
insb
outsl
sbb
popa
jnp
pop
sbb
fsubrs
jne
enter
nop
je
imulb
fwait
inc
pop
xor
call
popf
pop
mov
pop
sbb
mov
in
insl
mov
out
sbb
dec
orl
or
jge
adc
xadd
xchg
dec
int
scas
jo
jb
add
test
cmp
sub
jg
div
mov
fs
jne
addr16
icebp
repz
xor
sbb
sarl
mov
out
mov
es
lcall
xor
mov
and
adc
insl
push
jno
fistpll
in
push
inc
adc
ja
and
mov
mov
cmp
mov
data16
mov
cmp
sbb
jnp
loope
inc
nop
add
sub
aam
ljmp
fildl
adc
enter
cld
adc
adcb
add
hlt
outsb
stc
insl
mov
cli
scas
hlt
pushf
fimuls
sub
xchg
pop
int3
test
sbb
sbb
mov
push
sub
in
ljmp
shll
xchg
lret
out
push
dec
pop
jo
fisttpl
xor
xchg
in
adc
fistps
mov
je
adc
xchg
push
out
inc
push
aam
jns
jb
pop
dec
push
jne
out
mov
lret
xchg
cli
inc
inc
aas
dec
rcrl
pop
loop
push
aam
xor
ss
sbb
test
pop
jbe
mov
imul
mov
jae
in
in
dec
push
fsubrs
jg
or
imul
pushf
xchg
adc
xor
testb
push
in
pop
sub
pop
nop
adc
loope
negl
push
cwtl
mov
cs
mov
repz
dec
ljmp
movsb
mov
cmp
aaa
mov
lods
js
add
addr16
adc
loope
icebp
test
test
lds
lcall
cmp
xchg
jge
ds
cmp
loope
test
addr16
stc
mov
or
sub
and
in
jnp
cltd
fcos
mov
and
lret
mov
arpl
add
mov
inc
or
test
cmpsb
mov
das
push
jo
sbbl
sti
jnp
jb
sub
pop
dec
pop
popf
popa
imul
int
xchg
out
mov
insb
mov
add
add
push
pop
jno
lods
mov
jge
dec
stc
mov
jns
stos
and
fs
insl
and
mov
jp
push
inc
fadds
pop
pop
dec
loope
xchg
pop
push
add
mov
mov
mov
mov
mov
out
scas
pop
pop
pop
cmp
shlb
xlat
xchg
jnp
ret
mov
rorb
arpl
insl
mull
je
xchg
into
or
sub
xchg
shll
inc
and
mov
test
aad
into
jae
cmp
inc
ljmp
pop
mov
jmp
shll
popa
pop
test
lahf
xchg
xchg
push
lret
cwtl
mov
push
stc
insb
cmp
mov
mov
pop
push
xlat
jnp
scas
aas
movsl
popl
sub
pop
inc
dec
sbb
es
mov
dec
or
or
jb
cwtl
sar
rcll
cmp
and
mov
xor
xor
mov
incl
dec
fcoml
sub
and
inc
shll
rcl
mov
mov
or
and
pop
cld
pop
and
fldl
mov
pop
sub
jl
ss
jns
cwtl
jae
sti
enter
lahf
mov
add
push
cmp
push
push
add
cld
mov
mov
repz
orb
xchg
or
push
addr16
fisubrl
jecxz
aaa
adc
ds
outsl
push
out
sub
lock
xchg
sub
icebp
xor
mov
adc
push
jecxz
fistps
pop
sbb
test
xor
push
cmp
movsl
call
jb
push
add
dec
cmp
adc
mov
into
gs
xchg
mov
add
fistpll
mov
xchg
add
call
js
shll
mov
xor
jne
enter
pop
inc
data16
lret
adc
cli
push
jno
bnd
loop
sbb
js
push
push
jmp
je
mov
pushf
mov
shl
mov
dec
ret
test
cmp
push
fadds
cmp
or
sub
jle
push
jmp
mov
iret
mov
push
jmp
dec
es
push
mov
xor
sub
hlt
jle
pop
push
dec
or
pop
push
mov
mov
jno
jmp
xchg
arpl
sbb
dec
clc
cmc
sti
ret
xchg
insl
rorb
cmp
cmc
sbb
aas
xor
xor
int
mov
push
adc
pop
aad
sbb
xchg
lahf
scas
andb
insl
les
push
mov
enter
xchg
push
cmp
sbb
lock
sti
jns
and
sub
loop
xor
cltd
sub
hlt
xor
jg
adc
pop
push
pushf
popa
shlb
jl
push
shl
in
divb
rclb
scas
imul
mov
aaa
in
das
fstl
ss
into
add
loope
subb
sub
packsswb
pusha
shrb
dec
insb
cld
ss
cmpsl
sbb
adc
fisubs
cli
stos
mov
data16
mov
mov
ror
mov
adc
nop
mov
mov
push
sbb
cld
loope
int3
mov
jle
and
adc
xor
mov
lret
insb
popa
mov
fcomi
jl
lahf
jns
push
xor
lea
pop
pop
lret
mov
mov
adc
and
adc
sub
mov
pop
add
xor
pop
xchg
repz
into
pop
mov
out
test
lcall
pusha
lret
lea
mov
push
add
jle
shrb
and
sbb
xchg
dec
jecxz
jecxz
sbb
psubw
sbb
popf
repz
xor
test
jecxz
xor
xchg
sti
jmp
jne
cmovle
nop
repnz
aad
jle
scas
jno
dec
ljmp
pop
lahf
cld
out
pop
stos
xchg
bound
leave
out
mov
scas
ret
sbb
dec
out
test
mov
inc
adc
mov
inc
or
out
rolb
mov
mov
pop
cmp
sbb
lods
mov
lahf
dec
or
xchg
push
lret
loop
mov
cwtl
sahf
mov
fstpl
repnz
push
aaa
loopne
lds
insl
push
sbb
xor
imul
adc
push
sub
test
xlat
out
and
jg
mov
or
loop
inc
xchg
shl
pop
in
insb
fdiv
stc
xlat
mov
xor
out
and
cmp
in
jecxz
mov
scas
inc
sysenter
xor
pop
pop
cmp
mov
loope
dec
repnz
out
fwait
inc
xchg
and
daa
in
sub
movsb
es
dec
test
fbstp
int
jnp
bound
test
cmp
inc
cmp
push
fnstsw
nop
sub
sub
or
mov
push
inc
fwait
push
fisttpl
jnp
das
add
hlt
push
push
pop
pop
inc
gs
adc
add
sbb
adc
scas
cmpb
imul
sbb
cmp
mov
sbb
mov
cmpsl
into
xor
lahf
arpl
dec
push
push
pop
mov
mov
cmp
jg
inc
mov
xchg
push
fwait
adc
or
adc
mov
sbb
ret
mov
into
incl
add
lret
and
js
mov
xchg
xchg
pop
cmp
inc
cmpsb
in
cmpsl
ret
mov
insb
ss
pop
fwait
mov
stc
lret
sbb
bound
int3
push
js
mov
mov
data16
xchg
mov
push
mul
mov
cmp
pop
jnp
sbb
out
icebp
push
xchg
sub
adc
mov
imul
loopne
cltd
xor
loope
sub
push
mov
cmp
addl
push
jns
inc
xor
push
cmpsb
mov
add
jge
mov
adc
xchg
lret
sub
cmp
sahf
andb
sbb
mov
stos
sarb
fidivl
jb
movlhps
mov
xchg
fldenv
aas
mov
push
mov
mov
mov
jmp
ret
lcall
je
pop
xor
mov
jbe
xlat
adc
pop
das
jl
lods
fldt
add
out
mov
and
aaa
jo
movsb
jb
xchg
jno
add
dec
pop
call
sti
pop
jp
mov
push
test
testl
adc
pop
aam
add
mov
and
inc
je
sbb
add
scas
adc
fdivrs
mov
aas
and
cmpsb
jno
lods
aad
in
pop
add
in
dec
fimull
push
daa
dec
lahf
out
add
faddl
sub
mov
in
enter
outsl
pop
and
push
mov
sbb
mov
fildll
adc
xchg
mov
int
dec
sub
or
xchg
lcall
pop
dec
test
mov
inc
outsb
movsb
dec
out
pushf
push
cli
adc
cld
je
jl
stos
mov
sbb
ret
ljmp
inc
pop
jmp
jmp
xor
sub
rol
push
arpl
loop
out
daa
or
les
sbb
outsl
xchg
ds
bound
cld
mov
push
int3
dec
outsb
cwtl
xor
jl
movsl
aaa
in
xchg
pop
orl
std
sbb
push
pop
repnz
sub
cwtl
loope
mov
loop
xchg
pop
inc
movsb
adcl
xchg
sub
and
cwtl
push
test
mov
jnp
push
mov
mov
in
adc
xor
into
push
xor
dec
jbe
xor
sbbl
lods
xor
cwtl
cmc
dec
clc
push
sti
roll
je
stos
or
mov
jp
mov
lea
xchg
aas
sti
scas
push
repz
das
jnp
movsl
add
fwait
adc
cmp
aam
cmp
and
dec
push
cmpsb
lea
jge
adc
jno
and
stc
cmp
leave
add
loopne
dec
cmpsl
xor
fistps
jle
es
shll
mov
dec
adc
jne
and
xchg
xchg
mov
ret
pushf
shll
scas
js
xor
mov
lret
and
inc
movb
sub
das
and
mov
jb
xor
push
mov
outsw
sbbl
push
test
test
call
pop
popa
out
and
mov
imul
mov
ret
fwait
sahf
in
call
dec
and
test
cltd
sub
inc
mov
jmp
adc
sub
std
aaa
cld
xor
inc
stos
add
sub
sbb
mov
test
push
sar
inc
add
dec
iret
sbb
mov
pop
push
mov
inc
movsb
cmp
sahf
inc
aam
out
movsl
mov
pusha
lods
sarb
cmp
mov
mov
cltd
cmp
pop
cmp
jmp
inc
add
jbe
lcall
fsubrp
bound
cwtl
stc
inc
dec
adc
sbb
push
shll
jae
fisubrl
pop
es
mov
ljmp
test
dec
loop
sub
leave
jae
mov
push
fwait
addr16
add
inc
dec
clc
add
jae
xlat
nop
xor
lea
sbb
vpsubb
jg
xchg
push
mov
inc
inc
mov
xor
mov
push
xor
jecxz
js
pop
push
lods
fstps
xchg
popa
dec
xchg
pusha
inc
test
int
jo
cmpb
rcll
into
aam
dec
aaa
and
fidivl
xlat
inc
int3
jmp
daa
lock
out
loope
push
xchg
add
les
push
push
das
stc
push
stos
or
pop
cmp
out
add
mov
in
jge
adc
push
dec
aaa
lods
and
cltd
xchg
dec
bound
inc
xchg
adc
in
lods
mov
adc
adc
test
insl
icebp
lcall
adc
lret
hlt
sbb
pop
add
clc
loop
mov
test
and
jo
xor
clc
xor
xchg
ljmp
sbb
mov
mov
jge
pop
sbb
movsl
mov
adc
inc
sbb
mov
push
ret
rorb
inc
cmp
ret
out
imul
or
std
push
pop
inc
push
push
pop
fwait
dec
cmp
pop
push
lahf
or
lcall
mov
loopne
xor
int3
jbe
jns
ja
pop
fsubr
jne
fstl
repz
int
ret
fs
cli
mov
out
add
xor
sbb
xchg
nop
and
dec
pop
ds
sub
pop
jg
insl
inc
iret
inc
xchg
push
sbb
mov
push
push
push
ds
clc
push
inc
mov
lock
cmp
mov
in
sysret
push
or
xchg
push
out
jge
call
insb
mov
adc
daa
cmp
stos
adc
mov
call
out
jp
fwait
lea
lea
loop
pop
int
jb
mov
imul
and
shrl
rolb
dec
add
xlat
mov
xor
lods
sub
and
inc
xor
cmp
dec
outsb
xchg
pop
add
add
sbb
mov
mov
outsb
nop
push
jl
sahf
sub
xor
cwtl
ds
cmp
movsl
aas
mov
andb
pushf
fcomps
sub
xor
je
dec
cld
dec
jo
pushf
push
or
push
sub
xchg
inc
jnp
lock
aad
pop
loope
mov
and
add
out
push
adc
mov
and
fistpl
jne
push
cmp
out
xchg
das
adc
jne
icebp
insl
into
inc
jnp
pushf
sub
push
xor
lds
test
arpl
rcr
popf
dec
push
stos
clc
loopne
jne
in
mov
lea
clc
cmpsl
adc
inc
addb
pop
push
add
mov
push
add
mov
sbb
mov
icebp
test
dec
adc
xor
in
cltd
mov
sub
xor
int3
jnp
rol
mov
jp
cmpsb
xchg
mov
pop
pushf
pop
stos
nop
jns
add
mov
xor
vshufps
push
xchg
sub
mov
jmp
sub
inc
jp
loop
fisubrl
or
and
add
imul
insb
int
cmpsl
jns
dec
adc
jmp
push
or
paddsb
pushf
sub
enter
std
lods
xchg
xor
mov
aas
dec
mov
jo
sub
loope
in
push
xorb
mov
mov
and
testl
orb
scas
mov
mov
loope
push
push
xchg
cli
inc
push
push
shrl
sub
fs
inc
xchg
fsts
jmp
outsb
jne
or
pop
mov
adc
and
addr16
mov
cld
dec
mov
loopne
push
mov
leave
mov
fstpt
cli
icebp
mov
dec
dec
repz
cmp
loopne
or
adc
or
je
jae
out
mov
movsb
jb
pop
cmpsl
das
sub
mov
jmp
jns
pop
push
daa
enter
cmp
xlat
dec
push
mov
xchg
inc
mov
dec
lret
or
adc
loop
pop
mov
mov
cmc
aam
sub
or
outsb
add
into
adc
mov
popa
adc
mov
notl
andb
xor
pop
adc
les
rcll
pop
lods
push
enter
jle
and
or
roll
daa
mov
dec
mov
dec
ds
mov
stos
ffree
cmp
xchg
decl
cmp
sub
sub
inc
push
mov
lret
jae
xorl
jge
out
jmp
xchg
mov
dec
stos
push
outsb
jnp
shl
outsb
jecxz
fists
popf
fdivrl
mov
adc
mov
outsl
or
ds
add
dec
mov
or
adc
test
mov
aaa
daa
call
insl
clc
and
push
jmp
shrl
dec
aaa
xor
es
daa
sbb
and
ret
mov
pop
adc
es
inc
inc
pop
daa
sbb
ficoml
ds
in
int
inc
adc
lcall
push
ss
enter
or
xor
ret
add
cmp
in
pop
scas
adc
sbb
iret
inc
lahf
xchg
xchg
lock
xchg
mov
ljmp
mov
mov
mov
push
ret
in
notb
push
test
xchg
xor
push
stos
mov
sti
mov
fsubr
cmp
out
push
outsb
jge
rolb
cld
jo
or
negb
sbb
mov
xor
adc
cld
sbb
mov
fiadds
mov
neg
arpl
aaa
mov
cmp
pusha
imul
dec
mov
xchg
repnz
int
imul
imul
mov
xchg
mov
push
add
cmpsl
mov
xchg
mov
repnz
add
push
inc
ret
sub
gs
repnz
mov
dec
push
scas
loopne
into
sbb
imul
out
mov
push
jne
cmp
les
dec
lret
scas
and
push
xor
push
lret
xchg
add
sub
int3
call
or
add
cmp
pop
jnp
mulb
insb
daa
mov
dec
flds
test
lcall
cmp
sub
mov
jle
das
lock
pop
jmp
fistpl
dec
adc
xor
push
jmp
inc
xchg
xlat
sbb
pop
xchg
jl
out
fcompl
rcll
mov
push
jmp
dec
mov
scas
or
adc
mov
push
ret
dec
push
push
xor
fs
dec
sahf
adc
push
mov
pop
incl
xchg
aas
sbb
out
lds
cmc
jecxz
mov
std
fdivl
inc
imul
pop
inc
rclb
fidivrs
mov
pusha
ds
jmp
and
daa
sbb
repz
loope
int3
pop
cmp
jae
js
xor
xor
shl
or
inc
xchg
repz
aas
cmpsl
pop
jecxz
jae
mov
push
les
dec
addb
jb
movsl
or
add
push
inc
pop
div
fucom
outsb
lahf
xchg
pop
in
jle
pop
fiaddl
jns
js
adc
ss
pop
loope
ss
ror
aas
push
fwait
js
movsb
push
dec
in
add
cs
push
repz
inc
jns
dec
jle
dec
adc
xchg
popf
sbb
outsb
call
iret
adc
fadd
push
pop
pop
adc
adc
mov
lcall
insb
sub
dec
std
push
imulb
mov
jns
fstl
mov
mov
push
movl
xor
test
mov
xlat
ret
pushf
cmpsb
xlat
xchg
inc
sub
adc
and
test
jo
mov
inc
cmpb
jnp
inc
ret
xor
add
push
out
jg
push
push
cs
int3
movsl
xor
or
call
daa
xchg
push
pop
loope
outsl
lret
lods
mov
xor
outsb
addl
lods
fs
inc
adc
scas
adc
fsubl
popf
les
push
cmp
mov
dec
mov
sti
pop
pop
cmp
addl
jo
hlt
nop
addr16
cmpsl
sub
ljmp
je
push
subl
lods
pop
into
test
pop
mov
sbb
adc
dec
dec
push
dec
jp
in
mov
rcll
stc
movsl
aam
push
inc
push
jb
aaa
jp
nop
dec
call
xor
jmp
mov
and
xchg
and
je
jb
xor
dec
or
aaa
aam
or
sbb
cli
add
ret
movsb
mov
cmpsl
outsb
jbe
arpl
cmp
adc
bnd
sub
sub
das
mov
xor
adc
aam
fs
data16
clc
mov
cwtl
jmp
adc
mov
add
pop
cmp
enter
adc
fcomps
shrd
stos
cld
add
xor
andb
xor
jbe
xor
mov
leave
stos
xchg
adc
push
add
mov
push
add
hlt
push
sti
jmp
js
jns
popl
inc
movb
sub
incb
add
arpl
and
pusha
clc
insl
cmp
lret
xchg
dec
std
test
lock
fdivrl
aaa
rcll
xchg
jns
xchg
jbe
iret
dec
roll
imul
cmp
jle
fidivrl
mov
or
stos
dec
add
test
xchg
ds
icebp
fisttpl
rcrb
loope
pop
fistpl
inc
sub
push
sub
daa
insl
pop
xchg
inc
ss
pop
test
sub
in
and
pop
mov
lahf
stc
push
arpl
jnp
jo
fwait
adc
movsl
fmul
decl
fwait
push
lret
inc
or
push
fiadds
mov
insl
sub
stos
bound
push
add
push
cmp
pushf
orb
inc
xor
add
add
xor
in
loopne
inc
out
fldcw
or
xor
adc
push
fnstsw
scas
cs
adcl
jbe
cli
pop
aam
jns
popfw
cmpsb
iret
gs
sahf
in
clc
sub
shrl
fdivs
cmpsb
sub
push
or
cs
xchg
pusha
dec
jg
cmp
out
adc
cs
mov
fs
push
clts
std
dec
lret
jmp
aas
mov
fiaddl
loopne
mov
and
sti
mov
idivb
push
pop
cmp
xlat
and
lahf
in
fisttpl
or
ss
inc
sbb
arpl
xor
adc
push
and
inc
mov
cmp
jecxz
push
les
mov
or
lods
jl
adc
mov
fs
cmp
jo
faddl
out
lods
fldt
mov
test
call
clc
xchg
adc
mov
mov
push
cmp
mov
jne
imul
sub
adc
out
dec
mov
jge
inc
ret
mov
leave
pop
sbb
xlat
mov
gs
cwtl
adc
sub
in
sub
cmp
pusha
pushf
lods
xor
mov
stos
mov
pop
enter
stos
cmp
cmc
nop
insl
mov
call
gs
inc
and
or
mov
push
jmp
in
rolb
hlt
ljmp
insb
xchg
mov
rorl
iret
fiaddl
or
scas
add
pop
mov
jecxz
mov
inc
loopne
push
test
gs
daa
adc
inc
in
xchg
popf
add
push
imul
aaa
sub
mov
cmp
adc
cli
mov
fmul
or
sub
cwtl
mov
dec
fwait
sbb
mov
push
or
cmp
mov
repnz
test
in
dec
push
jmp
adc
mov
scas
inc
scas
scas
inc
out
cld
and
sahf
add
jae
mov
dec
push
mov
popa
jmp
inc
adc
les
push
popa
adc
mov
jo
ds
je
mov
in
ds
pusha
add
mov
repz
mov
xor
int
arpl
sarl
test
ret
call
cs
nop
clc
cmpl
roll
mov
cwtl
or
rorl
leave
mov
jo
dec
hlt
jecxz
sub
xchg
cwtl
outsb
ja
xchg
xchg
push
jnp
push
dec
rcll
ja
das
mov
mov
push
jp
pushf
add
mov
xchg
jb
mov
pusha
sbb
adc
and
push
push
cmp
inc
aam
andl
sub
xchg
out
dec
or
stos
icebp
and
and
push
insl
mov
rcrb
jg
jp
popf
loop
mov
push
lcall
inc
daa
decb
lock
out
dec
add
das
jbe
jecxz
out
mov
mov
pusha
and
fldenv
inc
sub
mov
mov
cmp
sbb
sub
in
xchg
sbb
push
push
pop
xorb
cmp
xor
jge
mov
jo
mov
jl
test
dec
es
push
xor
sub
mov
clc
inc
mov
pushf
xlat
jle
cmp
ja
jge
push
xor
push
popf
jle
js
fcmovbe
shll
das
sub
push
push
sub
cmpsl
popf
push
or
sub
lret
popf
fcomps
or
insb
out
jno
test
sbb
loop
jnp
cmc
ret
sub
hlt
arpl
pop
pusha
jb
aam
xorb
dec
shlb
in
lods
sbb
mov
inc
mov
jno
cmp
dec
add
adc
data16
loopne
les
jmp
sar
int
mov
push
push
aaa
les
sahf
pop
inc
fninit
and
inc
jae
rcr
cs
aas
dec
cli
mov
outsl
xchg
in
xchg
and
adc
sub
cltd
aam
out
mov
sbb
jns
inc
imul
or
aaa
cltd
insb
and
sub
data16
and
push
mov
pusha
outsb
enter
in
inc
push
push
idivb
and
and
mov
xor
pop
addl
aas
sub
jo
mov
push
and
das
in
dec
adc
or
cmc
outsb
cmp
mov
jp
dec
mov
imul
pushl
cld
aam
mov
fcomip
rorl
lea
ficoml
mov
mov
sahf
or
sub
inc
mov
loope
fstpl
repnz
test
or
pop
or
psubsb
dec
jmp
sub
lea
in
das
sahf
insl
push
fwait
notb
loop
cwtl
jle
rcll
mov
les
add
dec
jne
es
pop
xchg
mov
fyl2x
aad
cmc
or
stc
mov
mov
fsts
sti
add
push
cmpsb
test
loope
or
dec
movsl
push
add
dec
sbb
push
sti
rorb
data16
jge
dec
push
das
xor
leave
xchg
add
add
or
call
jmp
adc
mov
inc
pop
and
add
daa
and
pop
jnp
cmp
xor
std
mov
int3
js
push
in
out
jae
pop
imul
mov
test
lret
outsl
lea
jle
movsl
dec
pop
jge
mov
inc
loop
inc
mov
sub
pop
and
int
pusha
mov
lods
add
mov
cmpsb
xchg
js
imul
stos
idivb
adc
cld
or
test
push
shrb
push
xorl
sub
fidivrs
outsl
sub
cmc
popa
sub
pop
sbb
pop
mov
sahf
cmp
jnp
subb
add
and
cli
or
mov
xor
cli
sub
outsl
push
les
lret
aam
mov
sub
negb
sarb
scas
dec
pop
or
inc
push
dec
or
arpl
iret
pop
cmp
nop
mov
stos
cmp
xchg
cmpb
adc
xor
push
addr16
test
clc
jo
xchg
aam
mov
hlt
adc
sahf
add
in
jne
mov
gs
pop
or
lret
inc
push
lret
adc
jae
test
and
xchg
out
lods
cmp
jmp
push
pop
addl
xchg
add
cmpb
mov
push
xchg
bound
divb
pop
inc
outsl
fmuls
out
cmpsb
sub
add
dec
add
fs
iret
push
movsl
inc
push
xchg
xor
pop
sub
insb
scas
jecxz
sbb
adc
fisubs
mov
dec
not
ja
mov
push
sar
xor
adc
push
fwait
aam
inc
xchg
jg
jmp
cmp
lock
lret
lods
pop
enter
or
scas
aas
mov
mov
imul
push
fstps
xchg
lea
add
jg
cmc
dec
rolb
dec
dec
and
mov
call
out
out
jle
inc
shrb
test
jl
pop
and
fstl
fnstcw
insb
test
xor
jo
mov
ja
push
xor
test
nop
push
jmp
cmp
movsl
jl
jbe
call
pop
ljmp
mov
test
xlat
xor
in
sbb
sahf
xor
in
or
hlt
pop
hlt
xlat
cld
scas
nop
aas
daa
fdiv
or
dec
popa
sbb
push
mov
sub
adc
cli
stos
outsb
mov
rorb
push
push
mov
enter
xchg
in
xchg
enter
dec
ja
cmc
cmp
lds
push
subb
loop
faddl
and
fwait
cmp
jno
ret
adc
inc
mov
add
loop
shlb
smsw
inc
jg
out
xchg
mov
insb
xchg
in
out
in
sub
dec
add
xor
ret
fucomp
push
pop
mov
loopne
xor
pop
movsl
pop
mov
aaa
xor
lahf
fimull
aaa
sarb
xchg
or
clc
add
int3
filds
jb
je
sub
sahf
pop
mov
jo
jnp
jg
sbbb
je
fidivrl
jne
es
jb
sbb
in
mov
sbb
lods
pop
lret
loop,pn
mov
xchg
add
incb
sbb
jnp
loopne
xchg
jb
ret
stc
rolb
push
lea
iret
push
jp
sbb
popa
pop
adc
mov
stos
xor
lahf
dec
and
and
xchg
shll
out
pop
mov
xor
cmp
cwtl
and
lea
mov
in
mov
jg
mov
dec
in
cvtps2pd
sub
cmc
ret
push
add
cmp
std
lea
nop
cs
jp
or
push
es
in
cmp
xchg
sbb
or
xor
ret
xor
push
data16
cmp
shll
fmuls
leave
add
sbb
mov
ret
shrl
mov
fstpt
cs
sbb
pop
bound
nop
push
mov
mov
repz
idiv
movl
push
out
or
stos
int
scas
push
xor
xchg
les
rorb
xchg
int3
ss
test
loopne
mov
mov
lds
inc
and
sbb
xchg
mov
mov
rolb
push
and
dec
adc
pushl
and
je
xchg
push
xchg
mov
daa
pop
push
insl
sar
test
inc
mov
push
xor
and
jmp
dec
adc
inc
pusha
test
fistpl
dec
dec
push
bound
cmpsl
or
jno
xor
pop
cld
repnz
in
add
stc
inc
aam
ja
shll
stos
es
jnp
push
jg
and
in
add
es
out
add
cs
push
leave
jae
push
mov
mov
mov
fisttpl
aad
jns
bound
stos
dec
lods
cmp
inc
push
das
je
fcomps
lret
push
or
mov
lahf
pop
fs
call
jae
jb
or
adc
adc
fiadds
cmp
cmp
mov
mov
pop
in
mov
pushf
addr16
ss
cmc
out
imul
mov
sbb
addl
mov
test
sar
rclb
jnp
adc
mov
outsb
jnp
push
jns
aam
arpl
jge
cwtl
outsb
jnp
or
mov
mov
add
push
or
cs
and
test
jl
xchg
pop
xchg
xor
pop
pop
jno
lds
cmpsl
adc
iret
cmc
pop
mov
mov
outsl
in
fsub
cmpl
cmp
lods
into
add
xlat
jmp
mov
popa
lock
mov
loop
mov
arpl
es
inc
dec
adc
test
mov
jmp
push
aad
jp
push
dec
imul
mov
enter
push
add
and
fnstenv
fwait
maxps
popa
adc
fsubs
add
push
jno
shll
dec
lods
sub
outsb
clc
stc
push
fdivrl
sub
pusha
mov
mov
std
mov
arpl
gs
dec
sub
mov
fsts
cmp
cli
push
jb
cmp
enter
call
push
lahf
dec
push
lcall
movsb
mov
cmpl
jo
mov
sbb
ja
pushf
cltd
inc
mov
stos
daa
add
pop
sarw
out
in
xchg
mov
mov
arpl
sub
shlb
adc
pop
lods
leave
inc
sahf
adc
mov
sahf
ret
pop
bound
jns
push
or
rcrl
push
stc
hlt
hlt
in
inc
xlat
into
lods
dec
pop
inc
push
shll
or
push
jmp
mov
jecxz
jbe,pn
inc
test
sbb
pop
jbe
cmp
scas
jl
test
xchg
es
test
cmc
sub
subb
add
sti
outsl
cs
push
ret
xchg
aad
inc
mov
pop
mov
rolb
in
sbb
push
or
aaa
cmpsb
jne
mov
pop
xchg
insl
insb
sbbb
outsl
pop
js
arpl
mov
or
jp
stos
adc
mov
and
and
dec
push
sub
or
outsl
cmp
xor
mov
loopne
or
and
inc
add
cmpsb
int3
lock
mov
out
fadd
clc
imul
xor
in
sarl
nop
into
std
mov
sub
sbb
push
jl
popf
insb
and
push
jb
xchg
setl
popf
push
icebp
pusha
mov
or
jg
in
js
xor
mov
adc
mov
pusha
je
jge
xchg
or
test
sbb
mov
out
cwtl
pop
in
xchg
imul
and
fsubrl
jno
in
fnstsw
jnp
enter
lret
loope
data16
pushf
daa
push
sarb
xchg
add
inc
mov
push
add
movsb
jbe
insb
mov
push
xchg
and
ja
in
orl
push
mov
xor
mov
mov
ficompl
cmpl
xchg
fs
aaa
bound
sub
out
scas
cmc
test
jno
aas
arpl
movsl
movsb
inc
push
sarb
or
in
popf
or
xor
xor
mov
mov
pushf
shll
jnp,pt
test
rorb
pop
mov
bound
rolb
xor
inc
sub
aas
ljmp
sbbl
jle
leave
add
out
lret
test
dec
sbb
jbe
xor
fsubs
pop
stc
out
dec
loop
cld
ss
push
add
lret
and
dec
gs
ret
adc
jge
out
imul
pushf
mov
insl
mov
insl
or
mov
adc
shr
ja
mov
xchg
stos
ja
in
shl
push
aaa
push
pop
xchg
pop
ljmp
lret
aas
test
int
out
shrb
testb
stos
jl
mov
add
fisttpll
loop
test
add
adc
imul
xor
push
pop
bound
into
and
loopne
push
aam
inc
xchg
test
testl
dec
lea
lds
std
xorl
xchg
xor
or
stc
lock
xchg
lret
cmpb
jns
adc
das
jg
mov
fs
xchg
pusha
test
mov
data16
adcl
xor
cli
leave
push
mov
xor
leave
pop
and
out
dec
lcall
std
ja
cmp
pop
dec
mov
out
or
adc
xor
icebp
lcall
xchg
add
cmpb
popa
xchg
in
xor
movsb
mov
shrl
lods
pop
sbb
aam
xor
push
fdivl
push
fs
ds
sub
lcall
jle
stos
jns
xor
inc
sbb
je
lcall
sub
sti
repz
dec
shll
xchg
loope
div
jae
test
xchg
sub
hlt
imul
daa
mov
aaa
xchg
sub
cli
ror
adc
jmp
adc
xor
fildll
rorb
pusha
test
or
cmp
sub
mov
pushf
push
punpckhdq
leave
mov
inc
push
inc
fsubl
jecxz
fs
aad
mov
iret
xor
imul
pop
push
movsb
mov
fwait
dec
test
popa
test
shrl
or
cwtl
int
cmc
enter
ss
lods
repnz
add
mov
push
repnz
xlat
pop
leave
pushf
aad
popa
mov
ret
inc
les
dec
js
push
mov
cld
jg
fs
loope
mov
mov
and
mov
lods
xchg
add
jno
aaa
pop
out
push
or
add
jbe
xor
movsb
je
in
push
adc
das
sub
or
in
addr16
push
jae
mov
mov
xor
and
loope
fisubs
psubsw
jecxz
push
outsb
js
mov
mov
loop
cmp
testb
add
xchg
sbb
jae
fstps
mov
aas
mov
test
lret
scas
dec
push
inc
xor
xchg
pop
movsl
ljmp
test
dec
daa
pop
mov
adc
mov
call
xor
cmp
mov
sub
mov
add
xchg
dec
lds
or
fnstcw
inc
fwait
andl
jo
pop
ds
pop
xchg
xchg
inc
rsm
mov
or
push
xchg
sub
pop
lods
lahf
mov
dec
jg
data16
insb
aaa
popf
inc
sub
aas
lret
rorb
cmp
cwtl
je
mov
mov
or
sub
stc
ret
pusha
shlb
fdivs
out
xchg
push
movsb
loop
mov
int3
lret
mov
arpl
in
pop
sub
pop
test
xor
sahf
sarb
jne
je
in
loop
mov
cmp
decb
cmp
ret
stos
fiaddl
cmp
fbstp
scas
xchg
bound
pop
adcb
fs
popa
jmp
lds
sub
div
jns
push
mov
xchg
fwait
test
out
lods
push
and
shlb
insl
test
add
fsubl
mov
add
pop
bound
inc
cmp
cmp
ret
pop
int
push
rclb
adc
xchg
enter
in
dec
mov
mov
std
aam
imul
push
inc
jae
adc
stc
ror
das
in
idivl
call
inc
jbe
cmp
cmc
add
je
pusha
mov
xor
bound
mov
pop
stos
push
movsb
mov
out
mov
push
cmp
cmc
sub
repz
fisubl
movsl
mov
mov
scas
cmpsl
xchg
scas
adc
js
lahf
xor
adc
jmp
scas
mov
add
cltd
pop
into
lods
in
sub
popf
fistpl
rep
imul
xlat
aam
xor
and
mov
sub
add
loopne
insl
mov
orl
repz
cmpsl
pop
xor
out
in
lods
push
sub
inc
pop
inc
jg
das
movsb
sub
fiadds
adc
idiv
iret
inc
push
pop
in
xorb
or
mov
push
and
inc
push
out
fbstp
push
std
aaa
pop
nop
xlat
xchg
and
fists
inc
dec
aas
mov
inc
call
lea
lods
movl
fisubrs
fwait
mov
push
cmp
inc
jb
lods
call
jmp
mov
jmp
lret
test
pusha
jb
int
aas
iret
daa
mov
push
jle
fisubrs
rcrb
cmpsb
push
je
lret
pop
ljmp
cmp
xchg
in
jmp
movsb
and
xchg
sbb
adc
jl
sub
xchg
scas
xor
or
pop
xor
sbb
sahf
repnz
rcll
cmp
pop
aaa
inc
sbb
out
xchg
jl
out
gs
bound
mov
mov
mov
cvttps2pi
add
inc
add
jmp
sarb
repnz
ret
jg
scas
inc
or
fstl
mov
cmpsl
in
testl
sbb
pop
push
insb
mov
mov
aam
fstpt
rcr
and
cmp
add
rcll
lret
aas
ret
stc
lds
xor
test
and
adc
xchg
inc
movsl
lods
lcall
and
fbstp
add
pop
mov
aam
insb
inc
int3
mov
pop
and
jmp
fldt
inc
cli
dec
xchg
pop
push
mov
or
jnp
cmp
sbb
ror
out
bound
repz
les
and
mov
dec
add
dec
pop
inc
sti
ljmp
push
push
mov
push
sbb
adc
mov
imul
int3
sub
inc
sti
mov
mov
or
push
pop
bound
pop
mov
fadd
adc
mov
jle
sti
insb
sahf
or
mov
mov
mov
inc
and
mov
xor
ss
pop
xlat
in
dec
pop
shl
stos
int3
outsb
dec
sbb
cmp
loope
insl
pusha
adc
ljmp
mov
dec
adc
out
enter
stos
and
or
nop
std
in
sub
cmpsl
jg
notb
xlat
ja
orps
xlat
cmpsl
dec
ds
xchg
sub
inc
outsb
outsb
ret
leave
cmp
cwtl
inc
and
lret
mov
pop
dec
inc
loopne
add
xor
pop
lret
mov
addr16
stc
dec
push
and
rcll
ja
push
add
mov
inc
push
ret
adc
je
and
inc
or
test
pop
arpl
call
or
xor
sub
push
jecxz
cmpsl
mov
stc
xlat
mov
cmp
jno
outsb
adc
sahf
jne
xchg
js
mov
outsb
mov
sbb
push
xchg
and
add
outsb
ret
rorb
and
sub
mov
call
jle
push
xor
lea
or
cmc
sub
cmc
scas
enter
jle
nop
add
pop
adc
je
call
aas
ja
push
xlat
add
ficoms
sbb
mov
sbb
sub
mov
push
push
sbb
fisttps
testl
jp
add
push
cli
mov
dec
fiaddl
dec
popa
or
ffree
addr16
add
leave
pop
jo
xor
sti
stc
xorb
xor
push
lahf
dec
test
es
adc
jbe
das
into
stos
test
je,pt
ljmp
jmp
dec
icebp
jae
xor
cmc
rcrl
inc
pop
std
int3
xor
sub
jbe
push
data16
imulb
push
pop
lcall
jns
sti
pop
movsl
sub
or
xor
pop
outsl
cmp
xor
sbb
or
jmp
or
clc
jg
inc
xchg
lea
fiadds
rorl
xchg
adc
pop
push
adcb
mov
loope
dec
test
pop
add
and
cmp
and
inc
jne
push
mov
adc
cmp
sub
sub
ja
sbb
rolb
xchg
cmpsb
ret
jns
je
mov
sub
lahf
mov
inc
test
dec
push
or
and
sahf
mov
dec
push
add
popa
inc
jno,pt
ror
push
xor
xchg
adc
adc
xor
mov
jge
fidivrl
lea
shll
lock
out
daa
xlat
sarl
inc
insb
bound
mov
xlat
adc
xchg
mov
fnstenv
dec
mov
cld
test
push
outsb
icebp
scas
or
inc
call
andl
fistpll
sahf
ret
jb
outsb
or
mov
insl
jge
maxps
stos
jns
pop
lea
cmp
iret
push
repnz
ret
mov
aas
imul
add
mov
push
sbb
aaa
fiaddl
sbb
ret
pop
push
mov
xorb
mov
imul
and
lahf
jb
fstp
lahf
sub
insl
mov
jne
in
fdivs
lds
pop
rclb
stc
cmp
add
jge
jbe
popf
pop
bound
je
fwait
push
pop
pop
push
adc
int3
ret
fs
les
iret
out
cmp
loop
cmc
or
popf
xchg
pop
fsubl
cltd
outsb
sub
insb
push
cmp
out
enter
shlb
xlat
xor
loope
in
sub
jecxz
fldcw
repnz
lods
loop
int
repz
xlat
flds
stos
pop
xchg
jns
xlat
gs
lret
cmp
xor
mov
add
inc
sti
jecxz
ja
loope
popa
inc
sbb
add
add
gs
jo
sbb
arpl
nop
into
and
push
cli
fdivs
sti
stos
jb
lods
movsl
ja
cmp
mov
outsb
in
add
shrl
xchg
scas
xchg
enter
mov
test
push
inc
inc
mov
and
or
jae
jge
mov
enter
xchg
cmp
jno
sub
gs
xor
inc
pop
push
jb,pt
ret
xor
rolb
lock
dec
leave
jne
es
add
loope
and
adc
mov
inc
int3
jmp
ret
aam
xchg
jbe
ja
nop
lret
jno
lods
pop
pop
insl
xchg
movsb
mov
inc
fidivl
idivl
out
pop
nop
add
fsubl
ja,pn
xor
jp
jmp
out
add
push
fcomi
mov
pop
out
pop
mov
sub
xor
mov
loope
lock
aad
pop
fdivrs
mull
or
or
adc
fwait
xor
aaa
and
ljmp
leave
cld
xor
sahf
and
sbb
sarb
fwait
xor
nop
sti
fildl
loopne
and
mov
add
data16
sbb
data16
adc
aas
test
inc
outsb
cmpsb
mov
leave
fsubl
add
addr16
push
test
subl
fidivrl
jnp
xor
push
push
test
ds
test
and
push
add
lcall
pop
mov
insl
out
shrl
fsubrl
cmp
mov
push
cmp
inc
pop
pop
loop
clc
je
test
and
outsl
loop
sti
push
imul
xchg
pop
push
jns
cli
and
fwait
sahf
jmp
mov
in
sub
fisttpll
mov
arpl
fwait
or
mov
mov
cmpsl
push
and
adc
add
xor
jno
xchg
xchg
lods
cmp
test
inc
xchg
xchg
adc
dec
btr
jb
pop
and
cmp
cmp
scas
mov
or
pushf
mov
lret
push
lock
mov
test
push
xor
sbb
cmp
jp
inc
subb
clc
pop
fs
fcomps
hlt
or
mov
fcmovne
cltd
push
lock
cmc
nop
fwait
xlat
sar
nop
jl
enter
sbb
push
cmpsb
inc
in
lahf
push
xor
push
adc
jno
mov
adc
divb
dec
aas
xor
and
andb
insb
push
mov
or
mov
inc
rcl
dec
and
movsb
push
push
inc
out
adc
in
jg
das
pop
jne
sub
jmp
ss
test
xor
imul
test
aaa
push
decb
loopne
imul
or
ja
mov
add
dec
je
cmp
push
add
or
clc
pop
pop
push
xor
iret
mov
add
or
repz
imul
jge
dec
clc
cld
addr16
imul
or
negl
xchg
sub
add
mov
xchg
xor
inc
push
jle
sbb
pushf
dec
testb
out
or
data16
jo
stos
mov
cmp
inc
mov
mov
jbe
pop
cmp
add
push
rclb
or
or
cwtl
orb
push
push
and
rep
push
mov
add
fwait
stc
dec
outsb
mov
pushf
outsb
sbbb
aam
outsb
dec
push
out
cmpsb
add
pushl
jmp
sbb
std
and
push
pop
pop
xor
mov
adcb
mov
xchg
scas
into
sub
adc
mov
lods
pop
call
push
arpl
jg
inc
add
out
xlat
push
dec
mov
pop
sub
xchg
cmpsl
stos
adcb
arpl
test
out
hlt
or
pop
mov
xor
lods
mov
pop
cmpsl
je
aas
push
in
dec
jbe
add
push
lahf
add
pusha
cmc
adc
jl
addr16
add
cmp
sbb
enter
out
aaa
shlb
mov
push
push
ficomps
jne
dec
inc
xor
mov
seta
lods
in
pop
push
insb
fstpt
inc
push
stc
adc
scas
out
out
xchg
mov
dec
pop
lcall
inc
mov
ljmp
popa
fldl
xor
add
setl
leave
adcl
jne
cmp
jo
or
jle
pop
es
jns
mov
adc
mov
ljmp
repnz
lret
pusha
test
mov
pushf
or
push
push
loope
cvtdq2ps
and
movsb
outsb
ja
sub
mov
cmp
shr
xor
shrb
movsb
xor
out
adc
xchg
stos
popa
dec
stos
jno
pop
adc
inc
xchg
inc
std
icebp
lods
fidivs
aaa
sub
pop
dec
xchg
fbld
dec
mov
push
jns
repz
mov
sti
rclb
pop
xor
mov
fidivrl
xchg
mull
test
test
test
sub
jecxz
aas
in
pop
mov
mov
loop
int3
push
sub
push
test
dec
nop
cmp
aam
imul
dec
dec
xor
xchg
and
cwtl
ss
pop
mov
fwait
and
sub
ret
and
jp
pop
xchg
repnz
js
pop
dec
icebp
adc
in
cltd
sahf
push
cmp
mov
dec
imul
cmp
xor
fwait
jb
mov
ds
pop
sub
xor
lret
mov
aas
jns
cmpsl
mov
rcrl
test
pop
aas
mov
movsl
ja
ss
mov
out
dec
addb
mov
dec
cli
stos
lods
mov
test
daa
into
xor
stos
cmp
popa
inc
lea
loope
scas
cltd
sti
lods
pop
enter
push
push
xchg
lret
jo
dec
cmpsl
cld
in
sub
inc
sub
aas
loope
pushf
das
aaa
and
fldl2e
mov
sub
pop
rcr
pop
sbb
movsl
xchg
sbbl
loope
inc
mov
int
mov
out
jnp
or
inc
pop
inc
add
mov
push
mov
mov
jns
iret
sbb
push
jno
and
lret
leave
push
decl
xchg
jae
push
inc
cmpsl
mov
xchg
xchg
xor
test
imul
cmp
hlt
adc
lods
flds
cwtl
cs
je
js
or
sub
inc
hlt
mov
subb
loope
call
out
inc
xor
shr
ret
enter
das
sbb
adc
sub
pop
mov
shll
js,pn
sub
sahf
inc
ljmp
mov
push
ja
lret
or
pusha
sahf
or
test
push
mov
jnp
lcall
mov
shll
stc
incb
incb
mov
xor
out
mov
icebp
mov
decl
mov
test
add
push
cmpsb
js
mov
leave
scas
pop
fwait
cmp
test
jbe
inc
in
imul
push
filds
pop
xchg
xor
mov
jnp
xchg
mov
and
icebp
popa
and
mov
xchg
xchg
pop
mov
jne
or
pop
lret
andl
dec
xchg
iret
sub
sub
jge
jmp
xchg
dec
lea
cmpsl
sbb
pop
xchg
add
push
pop
leave
sbb
in
dec
mov
stc
pop
test
jl
cmp
and
and
sub
fdivr
mov
jl
push
pop
in
mov
pop
fcompl
mov
jnp
loope
testl
sub
xor
sahf
pushf
insl
je
test
cmp
mov
xchg
sbb
dec
dec
mov
sbb
mov
jecxz
mov
jbe
adc
or
fdivp
aaa
cmp
dec
scas
popf
xor
pop
mov
adc
xchg
cs
adc
adc
push
cmp
jns
adc
popf
jnp
jecxz
into
adc
stos
xchg
mov
test
mov
dec
stc
xor
mov
and
ss
jbe
mov
hlt
xor
pushf
iret
mov
push
iret
adc
and
movb
aas
xchg
bound
xchg
jne
cmovbe
jno
pushf
and
jo
test
pop
fisubl
mov
push
loope
dec
aaa
pop
call
add
out
add
jmp
js
pop
xor
pop
jb
sub
jb
lea
sub
sub
addr16
movsb
mov
lds
mov
aam
in
mov
push
icebp
outsb
icebp
push
push
and
pop
dec
push
insl
sbb
pop
dec
out
xor
out
add
daa
mov
sbb
add
cmp
mov
ljmp
sub
xchg
mov
je
mov
push
dec
jns
pusha
mov
mov
xchg
sbb
cld
jp
mov
rcrb
or
and
fnstenvs
cli
cmp
fimull
xchg
aas
sub
cli
inc
push
int3
je
sbb
int
fisubs
xchg
xchg
push
je
cmp
inc
imul
into
inc
push
hlt
jle
dec
ret
push
cmp
enter
dec
mul
lods
ljmp
aad
mov
aad
stos
std
push
cmp
mov
mov
adc
cmp
mov
lods
bound
sbb
lea
bound
push
inc
adc
add
inc
shl
lret
dec
push
cmc
or
stos
inc
arpl
or
inc
rcll
push
inc
xchg
and
jp
in
sbb
out
cmp
xchg
jge
dec
dec
adc
xlat
inc
jo
jl
jp
sub
xor
or
jmp
push
sar
add
cmp
jp
adc
lea
rcll
fs
outsb
xchg
mov
add
int
xchg
push
sti
hlt
adcb
std
nop
scas
xchg
mov
popf
dec
sbb
repz
mov
or
clc
roll
push
add
push
ja
pop
in
jno
jp
loop
inc
or
clc
data16
pop
fs
adc
insl
pop
lock
adc
jmp
rorl
movsb
outsl
scas
inc
pop
jbe
cmovl
repz
dec
mov
leave
push
xor
inc
outsb
xchg
xchg
arpl
movsb
test
shrb
or
mov
idivl
mov
lret
insb
hlt
popf
xchg
stos
imul
mov
xchg
mov
insb
push
xchg
lock
pusha
sahf
inc
mov
xorb
or
les
cld
insb
andb
cmpsb
jge
mov
lock
inc
movsl
xchg
aad
pop
xchg
and
dec
dec
jl
loop
jno
dec
dec
call
mov
fsubrs
aas
and
int
scas
popf
es
sbb
mov
and
fisttpll
adc
stos
xor
pop
xorb
or
and
xchg
icebp
sbb
xchg
not
push
and
inc
or
pop
lcall
or
pop
pop
jle
les
aam
adc
mov
push
hlt
mov
mov
dec
ljmp
adc
dec
pusha
dec
adcl
lock
leave
nop/reserved
add
shlb
std
stos
jns
and
or
push
sbb
adc
notb
adc
xchg
push
cmpsl
mov
xchg
xchg
adc
xchg
enter
das
roll
push
popa
sbbl
lret
lock
adc
or
pop
sbb
repz
sub
pop
sub
test
insb
rcrb
fadds
cmp
jg
inc
inc
in
popa
xchg
mov
scas
mov
int3
out
mov
mov
jl
sahf
jp
mov
jb
cli
push
ud0
inc
test
jp
cmp
popa
inc
fcmovnu
lret
adc
es
in
gs
sub
aad
push
test
dec
add
inc
js
fmuls
iret
xchg
sbb
xor
call
popa
inc
mov
add
imul
outsl
out
and
idivl
sbb
jl
xor
stos
add
sbb
push
add
push
xor
int3
dec
or
faddl
or
cmp
adc
pusha
inc
sub
test
or
ret
or
and
popa
clc
inc
repz
cmp
pop
add
jge
pop
mov
in
lret
jecxz
fldl
xchg
aam
test
adc
roll
xchg
cmc
and
push
mov
dec
frstor
popa
and
inc
cmp
cmp
jge
arpl
xchg
into
loope
add
test
push
xchg
cmove
sub
or
mov
aam
fldenv
push
loope
pop
lock
nop
push
fstps
or
orb
mull
cmp
push
lcall
or
loopne
or
pushf
adc
insb
xchg
ds
outsl
push
push
xchg
scas
xchg
loop
rcrl
cli
mov
pop
lods
sti
insl
popf
dec
xor
les
icebp
mov
rorl
xchg
mov
cmc
lds
cli
ret
bswap
adc
ret
jmp
mov
pop
xor
lret
aas
mov
stos
icebp
xchg
pop
das
js
sbb
adc
pop
dec
hlt
test
mov
sbb
fsubl
inc
mov
lods
pop
pusha
scas
fwait
xor
stos
cmpl
fisubrs
lods
leave
and
xor
xor
or
xchg
mov
sarl
and
loopne
add
cmp
fwait
push
bound
push
mov
dec
cmpsl
movsl
in
mov
dec
lods
fimuls
push
or
jb
xor
sbb
pop
sti
mov
roll
pop
xchg
jae
and
decl
imulb
mov
and
xchg
dec
int3
in
jno
into
aas
sub
inc
or
or
lods
inc
ret
dec
mov
push
andb
push
fdivs
test
sbb
fstpl
fwait
bound
add
push
push
add
std
xor
imul
loop
cmp
mov
mov
movsb
pushf
jae
xchg
in
pop
test
sbb
add
cli
add
test
push
in
aaa
xor
and
and
jl
push
fcomps
pop
lods
jmp
rorb
aam
dec
es
lcall
dec
add
dec
cmp
xchg
cmp
add
inc
int
pop
mov
push
pop
xor
cwtl
outsb
jg
jb
mov
xor
mov
mov
xchg
into
jp
addr16
cwtl
mov
test
pop
cmpsl
dec
add
inc
dec
imul
adc
into
jecxz
popa
inc
cmp
or
jmp
scas
push
push
inc
loope
fstpt
lea
mov
int3
dec
inc
and
sub
cmpsb
jne
cmp
stos
icebp
mov
mov
and
mov
cmp
pusha
fidivl
jno
cmp
adc
bound
push
lcall
jnp
arpl
sbb
js
add
mov
xor
popf
xor
push
and
mov
lock
add
sub
sahf
je
clc
jbe
addr16
pop
mov
test
jmp
rorb
outsl
sub
out
cmp
movsb
outsb
inc
sahf
sahf
orb
fs
jge
add
out
std
or
std
dec
cmp
scas
mov
fs
xchg
mov
cltd
jae
loopne
pop
jg
imul
lds
pop
stc
pushf
or
add
mov
push
in
pop
scas
js
in
sub
icebp
mov
out
and
jle
nop
jb
out
push
clc
lret
dec
xor
mov
fs
fistpl
push
fldcw
and
cmp
std
mov
inc
es
cmp
ja
fwait
stos
mov
add
cltd
pop
shl
sub
dec
and
inc
push
mov
adc
inc
inc
repz
fidivrl
push
inc
push
add
das
sub
add
jl
clc
mov
pop
mov
fidivrl
jae
loop
bound
movsb
loope
cmp
cmp
arpl
adc
sub
ret
outsl
mov
inc
adc
fwait
or
lret
mov
or
nop
pop
cli
lcall
add
jno
sbb
fwait
sub
xchg
push
ljmp
fidivrl
and
pop
shlb
outsb
test
xor
mov
mov
pop
loopne
dec
ja
xor
push
outsl
lret
mov
rcrl
sbb
adc
cwtl
mov
aam
mov
xchg
or
je
fwait
pop
ret
loop
pop
fnstenv
sbb
jl
cmp
gs
inc
data16
insb
cmp
inc
jno
pop
test
jl
mov
popa
mov
or
xchg
cltd
sbb
pop
sbb
addr16
scas
jecxz
and
test
js
cmp
and
cmp
and
arpl
push
pop
jno
fsubrs
outsl
inc
mov
int3
and
mov
es
mov
movsl
adc
xor
scas
sar
imul
xor
dec
fnsave
jp
dec
ds
inc
pop
popa
cmp
sti
ret
clc
fistl
lock
push
cmp
jnp
xor
jl
sub
sbb
xchg
xchg
xor
dec
jae
jge
mov
shr
fsubrp
push
cmp
leave
lret
mov
mov
mov
addl
ret
arpl
int3
aam
insl
cli
dec
jno
sub
mov
aaa
push
inc
pop
mov
mov
jge
jo
and
jno
lret
lret
push
inc
jno
cmp
sub
inc
mov
sbb
xchg
andl
lock
sub
ljmp
add
std
push
shlb
xchg
sub
jmp
jg
orb
push
pop
nop
and
adc
jge
aaa
and
sbb
xchg
clc
fcomp
dec
lret
jmp
jns
mov
mov
lahf
pop
es
inc
inc
jno
mov
cmp
inc
test
mov
sbb
pop
pusha
or
jmp
arpl
out
fldt
mov
xchg
aaa
scas
jae
ja
cmp
test
pushf
jle
cmp
iret
mov
insb
shlb
jae
loop
add
push
pop
mov
jno
ds
lods
loope
xchg
jne
or
inc
xor
out
sub
xchg
mov
ja
imul
sbb
sbb
cmp
mov
sub
cli
mov
ds
mov
call
int3
jmp
push
mov
jmp
and
xor
shl
push
test
insb
repnz
lods
xchg
sub
and
and
fnstcw
bound
push
jg
stc
inc
pop
push
fiadds
dec
dec
push
mov
movsb
jo
inc
and
mov
mov
or
test
ljmp
inc
jmp
loope
enter
dec
iret
push
aas
repnz
sbb
dec
pop
add
outsl
xlat
jo
sbb
sbb
add
in
push
add
out
add
add
fidivl
push
jns
sub
xor
push
jo
push
icebp
jg
xor
out
cmp
test
pushf
push
jle
mov
loope
stos
mov
jae
mov
into
mov
and
adc
es
mov
insl
in
mov
inc
sbb
and
fsubrl
jbe
mov
push
xor
loop
daa
out
mov
dec
xchg
push
vmovhlps
and
xchg
sbb
fwait
add
insl
and
mov
aad
inc
call
jns
xchg
pusha
dec
rorl
mov
out
test
sub
stos
jg
xchg
mov
shl
push
or
inc
out
mov
lods
push
rcrb
jno
sbb
arpl
xor
sbb
cmp
jnp
lods
push
mov
fldt
fmul
jno
and
mov
add
mov
mov
pop
lods
negl
clc
mov
jle
pushf
mov
imul
leave
xchg
nop
nop
cmpsb
mov
lea
mov
mov
push
inc
add
mov
lret
roll
add
repz
add
mov
std
add
sub
lret
out
push
inc
fcomps
std
xor
stos
mov
repnz
and
mov
xchg
xor
daa
dec
stos
adc
mov
cmpsl
jge
test
dec
pop
int3
stos
mov
rorl
pop
pop
ds
int
xchg
xchg
lahf
fwait
leave
fcomp
scas
cmp
jmp
sub
mov
mov
daa
mov
insl
sete
add
cld
sub
sbb
cmp
loope
xchg
sbb
inc
xor
lea
sub
mov
in
lahf
cld
cmpsb
xchg
mov
insb
adc
outsl
sarl
pop
sahf
cwtl
push
mov
push
xor
xchg
lods
dec
pop
clc
jae
fmuls
and
into
sahf
jmp
sub
push
dec
mov
scas
and
push
mov
dec
pop
jecxz
jecxz
push
dec
jo
inc
dec
bound
sbb
imul
jbe
sbb
or
je
inc
fmuls
les
and
mov
or
push
push
sbb
std
lods
jg
inc
pop
scas
mov
test
fdivrl
negb
lods
std
cwtl
cmp
aaa
push
ds
aam
incb
push
loopne
fwait
jb
ret
leave
les
mov
cmp
pcmpgtd
cmpsb
push
call
imul
push
ja
jb
insl
mull
mov
mov
cmp
sbb
orl
sub
and
pop
inc
xor
ss
and
mov
stos
insl
mov
and
push
call
jl
cmp
in
push
xchg
loop
fwait
cmp
inc
cmp
add
das
mov
into
sti
dec
test
mov
cli
inc
and
out
pop
inc
or
nop
cmp
in
inc
call
repz
lret
cmp
sbbl
xlat
lahf
inc
or
mulw
xlat
das
fdivl
and
je
mov
push
stos
xor
mov
imul
mov
jge
xchg
pop
pop
in
push
sub
mov
lock
clc
fldcw
test
cld
or
in
stos
in
rcll
adc
jp
jnp
xor
fstps
outsl
movsb
jle
dec
push
push
xlat
xchg
dec
pop
and
pop
add
jne
rorl
jg
rcrl
movsb
or
xchg
cwtl
cltd
sbb
xchg
addb
push
stos
sbb
je
add
adc
sbb
xchg
jmp
push
in
jb
cs
push
push
fwait
subb
fimull
adc
xor
arpl
test
fsubl
pop
movsb
sbbl
dec
fnstcw
imul
les
and
push
ret
lahf
sub
cmpsb
sti
mov
dec
popf
mov
das
movsl
cmp
mov
xchg
bound
mov
in
mov
mov
or
pop
sbb
test
pop
inc
js
pop
and
ds
aam
stos
aam
orl
lods
jl
jno
std
and
mov
and
xor
cmpsl
insb
mov
cmp
sbb
fistl
xor
xchg
icebp
mov
sbb
xor
and
inc
std
inc
mov
andb
in
mov
and
mov
add
mov
pop
or
movsb
test
jp
fucom
dec
comiss
mov
jmp
shll
jecxz
lds
ja
out
dec
push
mov
dec
add
outsb
jg
dec
clc
mov
cs
cmp
jbe
int3
and
pop
xchg
rorb
mov
jl
repnz
test
test
rcrl
packsswb
std
sub
es
fnsave
call
and
cli
xor
sti
out
inc
in
aas
bound
push
push
push
adc
jmp
sbb
cmp
loopne
pop
outsl
jnp
pop
ss
repnz
sbb
dec
mov
and
or
xor
push
jne
mov
and
aam
sub
push
dec
xor
aaa
push
inc
add
in
sahf
cmp
cmp
loope
fdivrl
adc
xlat
ljmp
lahf
ret
test
push
lret
addr16
scas
gs
fwait
adc
adc
popf
fnsave
xchg
lds
sti
dec
stos
cmpl
mov
jg
pop
ret
adc
ret
loopne
jbe
call
xchg
adc
jae
sub
and
mov
adc
dec
or
leave
fisubl
test
dec
jb
out
xchg
mov
xchg
rcr
jns
adc
imul
in
repnz
mov
mov
pop
movsb
xor
pusha
push
xor
ret
das
imul
dec
aam
int3
cmpsl
jmp
fmull
adc
sub
cmp
ss
mov
movsl
lahf
cld
jecxz
mov
cmp
imul
jge
xor
jo
jmp
sbb
cltd
pop
push
mov
mov
pop
scas
jne
imul
mov
imul
fcoms
sbb
or
xor
cmpsb
ret
pop
pushf
inc
push
orl
loop
xchg
lea
sbb
int3
add
fs
mov
pop
inc
sbb
enter
xchg
mov
sbb
xchg
mov
mov
jecxz
ret
stos
shlb
bound
jnp
xchg
dec
addr16
and
cld
sbb
cmc
rcrl
jno
lret
sub
fbld
mov
bound
jge
addr16
push
cld
arpl
aas
mov
addb
adc
pushw
sub
or
shl
ret
mov
sub
stc
sahf
fucomi
mov
imul
xchg
sbb
repz
dec
std
xchg
fxch
mov
shlb
add
xorl
jl
data16
mov
mov
cmp
ret
lds
sub
push
ficompl
in
push
push
pop
out
inc
push
add
inc
dec
pop
out
sbb
xor
push
and
xor
pop
dec
pop
fwait
add
cmp
jmp
sbb
in
push
cmc
jne
xor
or
push
push
inc
mov
inc
pusha
sbb
fisubrs
push
imul
decl
sub
movsb
movsb
in
pop
repnz
inc
xor
sbb
popa
call
sub
cmp
aam
leave
movsl
shrd
pop
push
mov
pop
es
pop
xorb
jnp
xchg
stc
js
ja
sbb
pusha
rcrb
mov
adc
or
mov
and
xchg
addr16
cmc
jecxz
sub
push
movsl
ret
filds
call
push
or
add
in
push
add
or
mov
shll
pop
pop
cmp
insl
fxtract
inc
adc
cmp
sub
aas
xorl
inc
dec
lds
jp
orl
sub
neg
test
cs
mov
jnp
xchg
jno
hlt
aam
push
gs
dec
cmpsl
aad
or
popa
iret
aaa
jle
mov
push
pop
aad
data16
les
das
adc
push
fsubs
cs
mov
gs
pop
sbb
add
and
es
mov
adc
cmp
pop
lds
fstpl
push
rcr
add
out
fnstcw
cmp
sub
mov
in
xchg
xor
shl
push
rorb
cmp
push
rcll
cmp
sub
aam
clc
push
mov
lds
dec
push
inc
int3
jo
add
mov
ficomps
call
cmpsl
cmp
cld
push
test
xchg
jg
cmpsb
sbbl
fsubrs
xor
insl
mov
enter
pushf
cmp
or
xor
cmp
xor
sub
cmpsb
xchg
adc
mov
xchg
pop
cmp
xchg
mov
add
pusha
and
jmp
push
nop
scas
hlt
mov
mov
stc
sbbl
and
insb
insl
pop
ret
nop
sbb
iret
stos
cmp
mov
iret
xchg
cmpsl
movsb
int
gs
pop
add
out
sub
mov
jecxz
xchg
scas
inc
addr16
in
push
imul
push
jecxz
lds
jae
shrl
mov
data16
lahf
cmp
jmp
and
aaa
dec
pop
fcom
dec
push
or
scas
lds
sbb
dec
mov
xchg
add
push
xor
xchg
pop
push
push
out
inc
repnz
sahf
xchg
push
lret
je
mov
test
sbb
or
gs
imul
inc
sub
mov
aaa
imul
or
xor
adc
inc
dec
lock
jl
out
dec
aaa
in
push
mov
fdivl
xor
ret
aaa
mov
cmp
int
xlat
clc
dec
pop
mov
push
and
sarl
daa
cmp
xchg
cwtl
shrl
and
dec
ror
sub
stos
lahf
dec
movl
mov
pushf
fsin
and
jecxz
mov
jne,pt
xchg
jb
mov
cs
add
data16
sbb
or
jae
mov
xor
mov
mov
pop
rorl
jae
mov
dec
les
aas
test
xor
rorb
nop
push
sbb
movl
mov
dec
inc
pop
cwtl
mov
sbb
hlt
cli
call
inc
out
inc
jp
aaa
pop
repz
jbe
push
je
imul
mov
repnz
nop
scas
mov
push
movsb
jmp
add
xor
pop
ja
pop
in
shlb
xorl
or
mov
cli
pusha
cmpsl
pop
cmpsb
enter
mov
pop
or
rcpps
test
pop
repnz
sbb
in
xchg
out
mov
dec
xchg
push
jb
pushl
in
andb
fimuls
xchg
xor
dec
mov
jg
fbld
cmp
add
jb
push
loopne
clc
ss
out
xchg
lcall
mov
and
inc
push
mov
and
mov
fst
push
cmp
or
xor
xchg
dec
mov
sub
test
ss
shlb
cmp
insl
and
jno
adc
cmpl
inc
adc
xor
mov
icebp
adcb
fst
xorl
in
enter
mov
insl
sub
les
popa
les
dec
xor
notl
mov
xchg
and
test
fdivrs
faddl
roll
pushf
filds
repnz
lcall
sti
sub
push
pushf
fidivrs
fdivs
sbb
or
pop
adc
mov
dec
dec
mov
out
pop
push
fwait
pop
es
mov
dec
mov
pop
lret
adc
adc
push
addr16
sub
pushf
scas
fcoms
cmc
icebp
outsl
dec
test
or
and
fimuls
adc
pushf
jp
out
int
and
pop
lcall
nop
cwtl
mov
xor
out
add
aad
sarb
out
loopne
cmp
dec
lahf
out
mov
push
xlat
je
es
gs
arpl
lods
scas
fwait
push
cmc
mov
int
mov
mov
fdivl
testb
imulb
popa
cmp
inc
mov
jne
mov
pminub
fnstenv
push
dec
xchg
push
dec
sbb
addr16
xchg
or
pop
dec
andb
adc
jecxz
insb
and
dec
loope
out
stc
inc
in
pop
mov
fcoms
add
sarb
push
mov
sub
iret
pop
lock
jns
movsb
pop
mov
sub
xchg
pop
xchg
fld
js
std
cmp
int
andb
jbe
enter
xacquire
xor
aam
sbb
pop
adc
xchg
loopne
sahf
test
std
test
sub
pop
stos
imul
or
inc
xchg
divl
sbb
cmpsl
push
mov
fs
movsl
js
movsb
pushf
push
or
mov
pop
inc
insb
mov
fs
popf
mov
cmp
mov
popa
in
lret
lret
mov
sahf
mov
xchg
imulb
js
mov
adc
jmp
mov
enter
fstl
test
xchg
out
or
xor
fs
dec
out
fwait
pop
dec
bound
out
sahf
xchg
add
push
push
pop
cs
xchg
iret
in
scas
mov
xchg
or
jle
rcll
jns
jge
cmp
sbb
inc
outsl
mov
and
add
cmp
pop
int3
xor
aam
js
leave
aad
push
lds
sbb
mov
jp
js
aas
jno
jmp
and
clc
mov
rorb
jecxz
push
lds
xchg
dec
mov
sub
xchg
cmpsb
daa
jmp
and
inc
mov
jl
mov
lea
add
xlat
dec
xchg
or
dec
ret
les
push
lods
mov
imul
jmp
pop
mov
fistpl
daa
notb
sub
pusha
or
or
in
lcall
test
xor
hlt
pop
mov
dec
movsb
sub
add
mov
cli
jno
fdivl
cmp
lret
adc
das
adc
cmp
movsl
ljmp
sbb
mov
mov
mov
mov
sub
in
ucomiss
push
popa
int3
push
mov
repnz
leave
cmpsl
inc
pop
cmp
insb
lret
xchg
mov
aad
jo
out
test
lret
xor
sub
push
rcrb
jno
or
xchg
imul
mov
jle
xchg
add
mov
imul
lret
aam
fsubrp
jg
in
add
mov
pop
out
rorl
aam
mov
push
jae
xchg
pop
mov
cltd
push
fnstcw
xchg
cmp
jns
iret
adc
lcall
mov
push
jg
fiaddl
shlb
cmp
loop
pushl
fs
mov
pop
hlt
dec
adc
fmull
mov
fldcw
jbe
mov
lea
ljmp
pop
cmc
negb
pop
cmp
add
test
mov
or
adc
push
mov
pop
clc
div
out
cmp
dec
dec
rcrl
mov
icebp
cs
adc
shlb
jle
pop
pushf
push
adc
add
daa
jae
mov
push
mov
inc
pop
outsl
pusha
pop
dec
xchg
sub
inc
sbb
movsb
pushf
sahf
jnp
sub
in
push
jno
push
xor
pushf
mov
or
jmp
mov
push
add
add
push
enter
adc
push
add
xchg
jne
xor
xchg
enter
das
add
push
pop
aad
in
fstps
sub
push
pushf
add
push
testl
jae
sbb
mull
pop
xchg
push
cmp
test
test
pop
outsb
xchg
push
mov
gs
mov
xchg
sbb
jecxz
add
jp
sbb
add
aad
mov
mov
clc
jg
test
daa
xchg
std
lret
dec
pop
shr
add
pop
inc
sub
add
xchg
fcompl
movsb
rcrl
dec
arpl
adc
xchg
sahf
push
js
dec
movb
pop
fcomps
sub
movsb
dec
ja
inc
das
stos
bound
test
call
mov
inc
std
mov
inc
movsl
ret
inc
js
dec
dec
ja
pop
out
pop
pop
popf
icebp
pop
pop
push
outsb
filds
movsl
pop
arpl
cmp
or
jno
cltd
cmp
xor
push
cmp
inc
js
in
pop
ret
mov
andl
jecxz
daa
pop
pop
xchg
jg
push
ret
push
or
or
popa
add
movb
imul
jmp
iret
shrb
cmp
or
popf
rorl
lods
cmp
and
test
ljmp
mov
mov
xchg
movsl
mov
popa
and
jnp
cmp
xchg
xchg
sub
iret
movsb
lds
inc
out
xlat
mov
cli
out
mov
jo
aaa
adc
popa
dec
jns
insb
xchg
inc
popa
test
add
sbb
int
dec
sub
push
lods
inc
push
add
andb
dec
push
cmp
outsl
push
stos
fwait
dec
and
ret
lret
hlt
je
pop
loop
sub
push
rorb
mov
mov
jmp
cs
dec
push
cmp
xchg
daa
push
mov
cmp
fcmovbe
xchg
mov
jno
add
push
cwtl
push
inc
mov
mov
cli
jne
push
aaa
pop
aaa
inc
dec
in
sbb
jecxz
or
adc
sar
ret
mov
pop
push
ja
pop
movsb
es
test
fld
xchg
adc
movsb
mov
mov
andl
scas
stos
and
in
es
or
push
std
cs
sub
and
mov
fwait
cmpsb
jecxz
repz
inc
or
cmpsl
in
jg
sub
lea
sbb
pop
nop
lods
dec
mov
test
fstp
push
xchg
fnsave
call
inc
mov
sbbl
xchg
cs
lret
dec
xor
inc
and
mov
push
cmp
ret
dec
mov
bound
adc
lea
repz
daa
adc
cld
cltd
sub
fstpt
daa
stos
sub
fwait
adc
sti
out
sub
test
mov
inc
out
fiaddl
movsb
aas
imul
push
lcall
repnz
int3
rcll
cmpsb
sub
pop
sub
mov
lock
inc
jmp
orb
cmc
jge
movsl
test
call
push
xor
mov
insl
icebp
test
mov
aaa
mov
dec
pop
das
mov
pop
mov
mov
mov
xchg
mov
and
mov
pusha
cmpsb
enter
stos
lock
fldcw
ja
in
les
inc
dec
into
int
xchg
loope
xchg
shr
clc
mov
pusha
lods
xlat
repz
lea
sbb
lcall
adc
jmp
cmp
push
stos
pop
lret
mov
loopne
dec
pop
mov
lea
or
shrb
dec
jne
sti
popa
mov
stc
mov
adc
in
dec
lds
call
dec
call
std
daa
pop
and
movl
xchg
sub
sbb
sbb
jmp
fmull
mov
xlat
neg
push
sbb
mov
or
or
leave
rorl
test
adc
dec
push
hlt
fisubrs
inc
add
scas
sbb
inc
aaa
shrb
outsl
jp
clc
mov
ja
pop
sti
jl
ss
mov
sbb
iret
loope
cmp
jno
aad
xorl
xchg
lods
xor
shlb
int3
or
subb
std
mov
mov
sub
imul
cmp
adc
inc
pop
clc
sub
addb
aaa
mov
out
test
ret
dec
js
stos
stos
mov
mov
cs
inc
add
testb
jb
fdivrs
or
daa
addr16
add
lods
jae
xchg
stos
mov
idivl
cmc
add
and
jl
cld
test
lea
mov
test
out
fs
push
loopne
push
xchg
pop
leave
jp
outsl
insl
lock
jl
add
fucomip
popf
fldt
mov
push
xor
aam
or
es
dec
jmp
iretw
mov
mov
cmpb
sub
sbb
pop
scas
push
insb
iret
mov
xchg
push
lcall
mov
dec
shll
andnps
aas
sti
cmc
jmp
sbb
test
or
xchg
mov
xchg
xchg
leave
xchg
aaa
xchg
jmp
add
pop
and
popf
jne
mov
and
mov
ljmp
cwtl
push
sub
inc
mov
sub
stc
mov
cltd
jnp
inc
ror
loope
scas
mov
xchg
imul
sub
lahf
lods
dec
mov
shr
sub
imul
movb
andl
sub
lret
or
mov
jae
push
adc
cmp
clc
sub
mov
adc
jecxz
icebp
imul
negl
outsb
jmp
cmpsl
test
inc
or
or
jecxz
aam
adc
stos
mov
xor
movsb
mov
mov
xor
pop
dec
and
mov
sub
push
jl
inc
lods
dec
sub
test
insl
lcall
jae
push
add
bound
movsl
ljmp
xchg
mov
xor
mov
sti
idivb
arpl
push
lret
inc
sub
dec
test
lods
xor
xchg
mov
and
test
mov
push
fldl
loope
pop
xchg
lock
dec
jbe
jnp
lods
xchg
popf
rorb
cmp
pop
cld
lds
dec
and
fsts
jbe
movlps
inc
mov
pushf
mov
push
sti
call
neg
xor
imul
movsl
out
pop
or
cmp
jg
cmp
pop
test
fadd
pop
sbb
jecxz
adc
push
xchg
arpl
cli
push
xor
inc
xchg
pop
push
iret
repz
cmp
jae
inc
repz
movsl
out
and
sbb
nop
std
fstpt
fdivrs
lock
sbb
jp
push
pop
pushf
adcb
xchg
mov
in
pop
xchg
or
pop
sbb
xlat
das
mov
data16
scas
dec
repnz
pusha
sarb
jl
fcmovne
inc
mov
mov
pushf
fisubs
push
sahf
jbe
mov
sub
std
data16
sbb
inc
jp
pop
jge
bound
leave
int3
pop
mov
test
lea
rol
push
ds
xor
imul
sbb
fbld
in
sub
sbb
je
push
sbbb
xor
mov
mov
stos
scas
push
fisubs
inc
cli
push
rcr
int3
jge
jg
pop
fucomi
fucom
push
mov
push
lods
xchg
pop
lods
add
jmp
push
pop
jae
jle
jo
repnz
pop
bnd
adc
divl
push
cmpb
cli
jns
faddl
loope
daa
mov
push
lea
stc
add
mov
ret
pop
mov
movsb
arpl
jecxz
aas
jb
aaa
push
icebp
and
int3
push
mov
rcr
cmp
aam
imul
fisttps
loop
ja
or
sub
popf
sbb
push
cmp
pop
dec
cltd
adc
loopne
stc
rol
inc
xor
inc
aad
mov
lahf
fldenv
pusha
mov
lods
test
or
pop
std
xchg
cld
hlt
lea
and
jo
imul
cld
xor
rorb
mov
aas
xchg
push
sbb
push
adc
call
adc
mov
xor
or
push
dec
pop
rcll
and
pop
cmp
mov
out
push
add
mov
es
jbe
push
repz
out
popa
pop
sub
test
cmp
xchg
test
movsl
pop
leave
cli
mov
and
int
rorb
iret
pop
in
insb
fidivrs
arpl
rorl
mov
cli
std
add
and
and
jo
ret
lods
xor
cmp
sbb
sub
jo
mov
daa
and
sbb
jmp
or
inc
xchg
nop
test
cmp
fiadds
sti
repz
into
in
mov
outsl
hlt
sbb
push
mov
bound
jl
and
addb
mov
aaa
ja
or
stos
push
push
and
cld
mov
pop
push
push
repz
les
sbb
mov
imul
fwait
stc
mov
ljmp
les
arpl
fdivrs
mov
jno
adc
sbb
jb
push
lret
cli
push
xchg
arpl
aad
mov
xchg
mov
jb
xchg
sbb
cwtl
cmpsb
sti
fs
mov
or
decb
xchg
add
add
mov
and
jae
push
rolb
jne
adc
inc
aad
push
rorb
call
jo
repnz
xchg
xlat
fmul
cmc
adc
jecxz
push
lds
xlat
xor
outsb
mov
decl
mov
push
leave
mov
inc
cmpsb
hlt
ljmp
arpl
jb,pt
mov
add
pop
mov
pop
jge
ret
sahf
cmp
jl
pop
and
pop
pop
add
out
aaa
icebp
addl
mov
aaa
add
cmp
out
fs
fisubl
adc
xor
daa
aas
inc
leave
cmp
xchg
je
add
jp
in
mov
movsb
imul
imul
popf
roll
enter
mov
sti
ds
ljmp
dec
addr16
out
fisubl
nop
mov
sbbb
add
sti
gs
cmpsb
and
and
xor
cmp
into
xor
dec
shlb
mov
cmp
test
sub
adc
dec
imul
hlt
xor
pop
lcall
or
push
in
sbb
lods
cmpl
imul
jae
sub
cli
mov
shl
jne
mov
aam
loop
fnstcw
cli
dec
dec
iret
dec
mov
ret
shlb
mov
ljmp
leave
stos
cmp
loopne
dec
sti
lods
fiadds
dec
mov
lahf
sbb
test
iret
call
insb
addl
adc
sbb
jnp
jb
enter
outsb
int3
xor
addr16
mov
mov
add
enter
iret
imul
imul
xchg
mov
aam
decb
cli
movsb
mov
xor
sbb
and
sub
and
jnp
xorl
mov
jmp
jae
outsb
cli
and
push
xchg
and
stos
jecxz
sbb
or
fsts
push
dec
cmpsb
or
xor
and
dec
hlt
popa
pop
repnz
push
test
jno
sbb
push
addl
dec
fs
xchg
icebp
sbb
scas
push
cmp
gs
jo
add
or
xchg
int3
mov
sbb
pop
push
xchg
mov
test
ret
adc
pop
cmp
daa
mov
or
adc
sbb
jae
ja
lds
rcl
mov
addr16
jnp
or
out
push
bound
aam
xchg
jae
xchg
fst
cwtl
flds
arpl
sub
stc
xchg
inc
sbb
push
fsubrs
mov
loopne
mov
pop
inc
sbb
add
int
lcall
push
cmp
or
insb
into
mov
hlt
sti
bnd
and
lahf
xchg
cltd
hlt
add
dec
push
cmc
cmp
push
sahf
fistps
cmp
lds
jbe
dec
cli
jl
mov
sub
push
adc
cs
xor
sbb
fadd
icebp
lahf
or
outsl
jae
ljmp
fimuls
rclb
popa
jmp
pusha
push
out
and
into
dec
mov
sbb
xchg
imul
ljmp
push
jbe
cwtl
push
dec
ss
sbbl
aad
mov
std
pop
push
mov
fisttpll
mov
fbstp
push
cmpb
push
push
mov
mov
repz
cld
ficoms
das
in
ljmp
pop
pop
push
pop
test
nop
push
xor
scas
out
sbb
cmp
rcl
cmpsb
sub
aas
adc
adc
enter
cmp
repnz
in
pop
push
sub
fimull
jb
inc
mov
adc
sbb
mov
mov
xchg
ja
icebp
addr16
sbb
or
movsl
icebp
rcrb
jno
out
and
sti
addl
pop
jo
aaa
cmpsl
movsl
add
test
out
sub
pop
das
jg
mov
fisttps
jb
pop
mov
mov
icebp
ret
pop
in
push
aam
xchg
test
sbb
fistpll
repz
les
out
pop
test
pop
pop
jge
sbbl
lret
sub
cs
pop
jle
xlat
aaa
pop
cmp
adc
insb
out
inc
or
ror
not
dec
add
mov
or
push
and
test
scas
pop
dec
es
ss
repz
mov
and
jl
lret
bound
sbb
int
outsb
push
popa
pusha
mov
pop
xchg
mov
inc
adc
xlat
sti
es
xchg
mov
icebp
addr16
mov
add
shlb
sub
push
add
cltd
mov
push
mov
or
mov
movsb
inc
jnp
mov
popa
sahf
fs
add
or
call
fisubrs
xlat
pop
mov
push
or
movsb
cmp
adc
cmp
orl
sbb
mov
pandn
mov
xorb
xor
sub
dec
fisubrs
adc
mov
ret
jno
adc
subb
mov
jmp
xor
ds
sbb
shl
sahf
inc
rcll
add
mov
add
aad
int
test
fcmovu
das
jbe
cmp
in
test
push
imul
adc
sbb
sub
xlat
and
clc
dec
pop
outsl
ljmp
pop
push
shl
aam
mov
cwtl
addb
cmpsb
mov
add
push
gs
jmp
in
insb
pop
jns
push
xchg
cld
and
aad
dec
insb
xorl
nop
shlb
pop
xchg
add
jbe
jo
inc
out
mov
mov
divl
sub
bound
mov
lds
pop
addl
cmp
mov
out
push
cmp
add
jb
lea
xchg
mov
dec
mov
inc
mov
add
push
inc
mov
int
and
mov
cmp
fiadds
mov
testl
repz
adcb
jp,pt
shr
js
pop
pop
fcomps
ret
scas
add
ret
mov
movsb
mov
and
clc
inc
push
mov
mov
popf
adc
js
jge
pop
mov
sahf
mov
stc
jbe
inc
js
add
xchg
ss
dec
mov
fadds
sbb
xchg
ret
lods
dec
out
addr16
shlb
mov
rolb
xchg
clc
imul
push
mov
xlat
outsb
imul
mov
jb
xor
adc
jns
mov
sbb
repnz
xchg
sub
mov
arpl
scas
aad
scas
in
jno
sarl
mov
mov
fimuls
movsl
mov
loopne
jnp
cmc
xchg
xlat
movsl
je
push
push
insl
adc
in
push
fcomps
xor
jmp
or
aaa
sbb
cwtl
adc
loope
ds
adc
add
test
movsl
loopne
push
jno
pop
or
xor
iret
aas
jae
rolb
pop
ja
inc
jae
pop
pop
xor
sbbb
scas
pop
jle
dec
mov
push
inc
rcrl
in
mov
push
cmc
lret
push
jns
push
sbb
sub
pop
je
imull
and
loop
into
xchg
negl
mov
sbb
mov
mov
lret
into
iret
push
inc
and
mov
add
or
mov
repnz
dec
push
fnstsw
xor
sub
adc
or
sub
leave
mov
les
lahf
push
andl
add
fisubs
pop
sub
adc
xchg
subl
out
iret
add
dec
dec
movsb
in
cmp
divb
jl
mov
mov
nop
xchg
mov
xor
daa
pop
push
add
data16
cmp
mov
data16
lret
and
and
out
sub
data16
and
xor
lods
mov
push
and
cli
xchg
shl
pusha
iret
adc
pop
roll
sbb
xchg
fmull
cmp
mov
adc
inc
lcall
and
sbb
xchg
scas
xor
lods
add
int
cmp
and
je
aaa
imul
popa
sbb
jl
or
push
addl
lods
mov
mov
pop
lods
in
push
and
sti
sbb
push
pusha
push
xchg
rorl
adc
add
jno
aad
lock
sbb
call
sahf
cwtl
test
lret
out
jae
mov
dec
aaa
sbb
cmp
int
jbe
orl
lahf
into
cmp
mov
add
insl
loope
mov
fildll
stos
and
adc
mov
mov
lahf
shlb
xchg
fdivrl
or
jmp
sub
push
xchg
out
push
mov
cmpsb
orl
jnp
xlat
cmp
sub
aas
fsubrs
push
popf
dec
pushf
xchg
or
xchg
xchg
mov
lea
ret
jmp
cltd
cmpsl
pop
mov
sub
mov
mov
add
push
stos
inc
loopne
cld
sti
lahf
xchg
jo
pop
jbe
outsl
dec
pop
inc
pop
gs
sbb
xchg
out
loop
adc
sahf
xlat
scas
pop
in
into
repz
mov
xchg
pop
and
out
stos
bound
cmpsb
cmpsl
lahf
mov
mov
jae
jae
inc
push
stc
pop
and
pop
inc
inc
mov
mov
push
subl
xlat
aas
adc
mov
sbb
dec
jle
pusha
int3
xor
hlt
dec
ret
inc
ljmp
mull
leave
ljmp
jl
sbb
push
add
es
sti
xor
dec
lds
out
push
loop
sub
add
out
mov
cmp
jmp
push
and
jle
jle
mov
ret
xor
pop
scas
sbb
or
inc
mov
mov
jge
test
inc
nop
mov
mov
fwait
push
ss
dec
mov
jg
stos
or
pop
fsubl
or
sarb
xor
jae
test
cmp
arpl
inc
xlat
rcrl
loop
jns
hlt
outsb
mov
push
or
add
test
pop
stos
sti
xchg
popa
stc
jmp
fstpl
push
sub
sbb
xor
pop
inc
xor
or
inc
sbb
inc
out
adc
shrb
and
pushf
mov
adcb
scas
adc
es
adc
insb
movsl
leave
lds
movlhps
lcall
jp
push
jg
clc
fcompl
ficompl
ds
movsb
dec
cli
add
in
aam
mov
rcll
mov
pop
popl
fldenv
enter
dec
and
sub
les
push
mov
fstl
add
je
cmp
dec
push
cmp
xor
and
inc
sub
mov
mov
les
jle
mov
hlt
fxch
push
int
mov
js
imul
insb
aas
xchg
xor
or
xchg
fadd
xchg
adc
cld
pushf
add
jle
lds
add
mov
cmp
cmp
jo
shr
add
xchg
lods
mov
mov
push
fistpl
lahf
sahf
cmp
and
jno
fidivrl
fmul
sarl
imull
add
rcr
jnp
xor
fcompl
add
popf
fisubs
jmp
cmp
and
js
mov
pop
bound
cmp
push
mov
dec
add
xchg
int3
cmp
push
dec
sub
sbb
insl
push
lcall
add
push
leave
in
pushf
cmpsl
xlat
push
dec
push
mov
dec
and
sub
sbb
sub
and
mov
out
leave
jns
arpl
and
cmp
jl
xor
add
add
add
icebp
loop
out
jle
test
and
ss
cmp
inc
dec
les
mov
out
sbb
lcall
shlb
jo
jnp
insl
jae
or
sbb
icebp
inc
pop
pop
jecxz
push
scas
repnz
dec
sub
xor
rcrb
test
jl
fwait
or
jne
loop
inc
push
lds
adc
pop
mov
mov
push
xchg
and
pop
fchs
jge
mov
loopne
sbb
aam
rol
lret
js
sub
inc
jmp
lea
pop
xchg
dec
gs
leave
mov
shlb
push
aad
dec
int3
cmp
pop
lea
and
inc
mov
mov
cmp
rorb
cmpsl
or
jp
repnz
jo
jecxz
popa
ljmp
aas
xor
jmp
sbb
jl
mov
jne
and
pop
push
dec
jnp
sub
jae
inc
xchg
inc
arpl
or
lret
or
inc
lods
ret
in
dec
iret
adc
dec
fldenv
cmpsb
sbb
sahf
mov
loopne
aas
pop
fucomp
nop
adc
xor
in
movsb
out
dec
icebp
ret
xor
mov
call
mov
adc
add
jmp
ret
ljmp
outsl
lcall
adc
adc
repnz
stos
sbb
repnz
or
ret
push
lcall
fsubl
aad
push
jae
cltd
cs
shlb
movsb
je
jae
xlat
adc
xor
dec
fimull
packsswb
call
sti
adc
or
and
jmp
lahf
adc
xchg
in
ds
xchg
add
mov
pop
inc
xchg
sbb
addl
jae
lods
and
shlb
inc
loopne
xlat
mov
fimuls
icebp
lahf
pop
dec
and
jnp
andl
insb
test
cmovp
scas
sar
xchg
sbb
push
sbbb
test
testl
loope
add
mov
into
add
and
mov
cs
in
mov
pop
sub
leave
imul
push
sbb
in
in
jmp
divl
arpl
shl
jae
sahf
mov
imul
mov
aas
inc
aas
in
jo
ja
or
enter
mov
out
repz
test
pop
jecxz
and
xor
sahf
pop
cwtl
push
lahf
mov
sbb
stc
jbe
in
call
adc
cmp
rorb
sub
sub
call
rorb
repnz
int
cmp
inc
push
push
jmp
sub
sub
mov
jmp
pop
push
inc
mov
fcomps
cmp
bnd
sbb
cmpsl
add
sarb
xchg
jecxz
mov
fs
cmp
add
xor
fldt
push
shll
rcrb
dec
lods
mov
adc
adc
call
dec
mov
mov
lret
out
or
out
push
jbe
neg
add
sbb
and
aaa
in
lds
mov
movsl
sbb
jp
and
xchg
stos
fdivl
iret
fnstenv
pop
sahf
das
stos
xchg
stos
xor
out
add
add
and
dec
je
inc
imul
push
pop
popa
and
mov
clc
cwtl
inc
adc
cwtl
adc
jp
jno
inc
cwtl
inc
inc
in
add
mov
jg
daa
lcall
sbb
or
push
and
pop
jae
shl
xchg
int3
jnp
push
jns
test
lahf
cli
sub
inc
out
and
std
pop
mov
and
into
pusha
js
xchg
mov
push
xchg
adc
testl
push
nop
aaa
std
sub
xchg
sbb
out
lahf
pop
dec
sbb
mov
inc
or
faddl
stc
xchg
mov
mov
icebp
xchg
jmp
data16
and
inc
into
cmp
jle
or
mov
jg
lcall
cmp
fldcw
and
jnp
xchg
jnp
mov
jb
ror
sbb
out
ja
adc
lock
xchg
push
ret
popa
adc
sub
push
push
push
or
or
lds
pop
fcomip
stos
inc
xchg
adc
shll
dec
ljmp
add
xor
adc
imul
test
negl
add
leave
cmp
sti
sub
push
insl
sub
jno
cmp
mov
sbb
loopne
cld
cltd
push
adc
movsl
adc
es
and
cmp
out
mov
add
popa
lahf
push
fimuls
push
cmp
pop
out
repnz
cmp
jge
pop
negb
repnz
cwtl
fucomi
push
clc
flds
cmp
inc
mov
ds
in
sub
movsb
fsubs
cld
outsb
pop
xor
jae
push
aaa
mov
add
cmpsl
movsl
cltd
jnp
push
insb
mov
push
call
movsb
loope
sub
fnstcw
enter
cmc
scas
xchg
mov
pushw
mov
scas
mov
push
mov
bnd
jle
adc
test
inc
and
pop
cmpsl
inc
sub
sub
inc
jne
jmp
sbb
fiaddl
push
stos
scas
leave
stos
mov
in
orl
mov
mov
scas
xchg
push
roll
out
fnstcw
pop
xchg
das
mov
popa
push
in
and
inc
imul
insl
xchg
add
pop
je
pop
mov
xchg
mov
test
fcmovnb
shlb
ss
ja
cmpsl
ret
lea
pop
pushf
faddp
jo
inc
jb
jb
push
cmp
xchg
lcall
push
xchg
dec
sbb
inc
pop
divl
inc
dec
imul
hlt
jge
es
push
movsb
or
movsl
push
jns
cmp
xor
fmuls
jecxz
andl
xchg
jno
xor
mov
lret
dec
mov
mov
xchg
adc
nop
stos
pop
mov
sbb
mov
jnp
fs
jecxz
xchg
mov
sbb
rolb
cmp
das
in
cmp
xor
imul
pushf
subl
in
xor
dec
mov
jecxz
test
mul
sbb
ret
bnd
mov
mov
imul
sti
or
push
push
add
stc
fmull
sbb
cmp
cmc
loop
in
stos
mov
xor
inc
daa
outsb
xor
dec
push
aam
cmp
das
mov
cwtl
sbb
push
daa
mov
popa
arpl
pop
inc
pop
lea
les
xlat
fisttpl
and
mov
lock
loop
aas
stos
push
insb
pop
and
xchg
add
xor
loop
icebp
frstor
mov
pop
fisubrl
insl
mov
loopne
inc
dec
cmp
les
ljmp
dec
cmpps
das
shl
pop
jge
push
push
xor
fdivrs
xchg
adc
pop
push
imul
cmp
xchg
test
subb
xlat
push
inc
fimuls
dec
out
inc
push
aas
mov
andb
test
loope
xchg
inc
sar
punpckhbw
in
inc
in
sub
add
rorl
in
xor
les
int3
push
llwpcb
mov
cmp
rcl
mov
adc
mov
aad
xchg
push
add
adc
nop
dec
popf
loope
xor
out
pop
and
cmpb
dec
push
mov
sbb
aaa
test
push
jbe
out
xchg
in
jae
adc
out
lcall
data16
pusha
ss
mov
mov
pop
xor
ds
lahf
or
cmpsb
add
mov
mov
ficompl
ret
addb
mov
mov
sbb
and
pop
pop
cmpsl
jae
jbe
lods
add
imul
loop
mov
xchg
sub
sub
adc
pusha
and
fisubl
mov
inc
dec
push
and
iret
mov
addl
sub
sub
cmp
test
add
inc
fdivr
pop
stos
push
mov
push
pop
repz
jecxz
je
int
cmp
clc
fwait
outsb
out
neg
test
jae
xchg
pushf
cmp
sub
addr16
ret
fstpt
adc
pop
fcomps
xorb
mov
xor
ds
mov
inc
pop
lret
xor
into
jmp
stos
mov
sahf
ret
or
cmp
out
xchg
aaa
sbbl
adc
insb
or
jmp
mov
sar
push
push
xor
push
in
and
or
and
fisubrl
push
sbb
vmwrite
dec
inc
or
adc
mov
je
fcomps
sbb
popf
mul
leave
iret
repz
mov
mov
add
xchg
inc
dec
pop
cltd
inc
movl
cmpb
les
dec
inc
out
hlt
and
ss
in
jo
lods
gs
outsl
xor
pop
scas
pop
lods
adc
xlat
rcrb
sbb
dec
inc
push
cmp
pop
push
pop
test
fisttpl
int
pop
and
dec
mov
testl
and
xor
repz
les
loope
rolb
aaa
imul
outsb
shlb
or
int
push
loop
fwait
inc
shl
mov
push
stc
out
clc
inc
loopne
pop
lahf
cmpsb
and
mov
cli
and
inc
push
push
xrelease
jle
hlt
mov
dec
ds
jecxz
out
mov
test
faddl
xchg
out
xchg
jo
add
add
cltd
in
or
std
mov
icebp
mov
ret
and
scas
and
insb
ss
pop
aas
outsl
stc
out
sub
dec
dec
add
sub
pop
into
sub
push
sahf
dec
push
mov
jle
subb
jbe
dec
add
test
data16
mov
faddl
mov
xchg
or
fwait
sarb
push
xor
out
call
movl
les
das
jecxz
sbb
mov
bnd
dec
jae
or
cmp
fs
hlt
add
in
add
lock
jnp
popf
jmp
cli
push
faddl
mov
les
shlb
cltd
xor
jns
out
mov
xchg
or
push
mov
dec
xor
mov
mov
and
sub
popa
mov
mov
mov
mov
and
sbb
mov
xor
mov
jae
sub
stc
cltd
in
je
mov
mov
bound
loop
jmp
mov
out
aas
scas
fldl
cmp
add
jo
cmp
mov
xchg
mov
fnstenv
mov
inc
mov
inc
or
mov
mov
sti
xchg
inc
jno
lods
xchg
movb
or
and
cmpsb
mov
clc
xchg
mov
xchg
cltd
add
jb
ja
adc
pop
jnp
sbbb
and
or
imul
push
cmc
fcmovnbe
adc
adc
push
xor
and
add
jns
and
sbb
pop
xor
and
xor
sarl
incb
sub
int3
aas
ja
xor
push
jne
inc
mov
into
mov
sub
add
pusha
imul
jo
test
aam
movl
inc
adc
cld
add
imul
in
stos
fcmove
jl
mov
ret
jnp
xor
gs
mov
aas
in
pop
jp
sub
outsb
xchg
adcl
imul
scas
mov
mov
pop
enter
add
sbb
rcll
in
imul
jmp
push
dec
lcall
adc
enter
scas
xor
add
repnz
xor
xchg
cmpsb
pop
push
lahf
jmp
mov
mov
sbb
xor
mov
inc
jle
sti
lcall
int
imul
pop
lea
cmp
sti
jge
popa
movsl
clc
pop
loopne
lahf
or
mov
push
notb
pop
fbld
loop
inc
dec
aaa
subl
ss
adc
lds
xchg
lds
repnz
loopne
pop
pop
push
xchg
push
rorb
pop
pop
xchg
sti
mov
jbe
cli
add
jg
arpl
ffree
pop
test
dec
call
jmp
adc
clc
xor
nop
std
push
adc
cmp
mov
sub
pop
fcmovu
cmp
movsl
mov
inc
vcvtsi2ssl
fiadds
andl
nop
hlt
test
pushf
lock
jnp
push
and
int
inc
mov
sub
mov
cmpsl
inc
mov
in
jle
fisttpll
andl
xor
mov
lock
std
adc
lds
sub
mov
cs
pop
sbb
add
pusha
lock
aas
test
dec
repnz
xchg
fmuls
cld
mov
out
popa
out
mov
cmp
test
push
insl
cmc
lcall
dec
cmpsb
adc
rclb
sbb
cmpsb
out
cmp
lods
jb
scas
sbb
mov
fistl
filds
pop
inc
rolb
in
ja
outsb
dec
push
bound
and
clc
rol
push
icebp
sar
push
dec
idivl
inc
dec
mov
xlat
add
lds
mov
or
insl
stos
js
push
or
add
in
mov
add
or
loop
js
lds
mov
out
imul
push
jbe
daa
int3
xlat
pmulhw
cld
or
jb
add
in
xor
add
adc
outsb
mov
xchg
lret
jle
ficompl
dec
cmp
cli
sub
jae
lock
pop
sbb
mov
add
ss
sbb
loope
in
jbe
inc
mov
mov
jp
pop
enter
gs
or
pop
and
sub
out
subb
insb
cmp
mov
hlt
movl
ret
divl
aam
mov
dec
sbb
adc
pusha
pop
adc
inc
jno
and
lods
jle
mov
mov
pop
xchg
mov
inc
loopne
mov
jp
out
and
cltd
in
nop
ja
leave
or
or
popa
sbb
ror
dec
push
sbb
jmp
push
sub
shl
mov
xchg
arpl
insb
out
adc
sahf
ss
pop
xchg
pop
xchg
jl
imul
or
in
movsb
push
arpl
or
rcl
insl
mov
dec
jg
lcall
xorl
fcom
add
xchg
rclb
aas
push
mov
add
sub
aaa
xor
push
fwait
inc
push
adc
insl
dec
out
int
andb
loope
cmp
mov
dec
add
in
xor
push
enter
pushf
cmp
adc
cli
and
mov
lahf
mov
rorl
push
movsb
mov
call
cmp
and
iret
mov
push
icebp
jge
shlb
and
std
test
mov
addl
cltd
loop
mov
outsl
cmp
pop
sbb
push
or
aam
in
mov
js
cmp
push
lcall
lcall
mov
jge
js
in
xor
push
ret
xor
adc
mov
push
aad
lock
insl
or
pop
sub
jno
icebp
mov
push
cmp
adc
fcoms
xchg
sbb
sub
outsl
gs
std
dec
mov
pop
dec
lds
xchg
jg
negb
stc
push
data16
mov
dec
pop
aas
pop
dec
sbb
repz
shlb
cwtl
ljmp
test
jmp
or
xlat
pop
addr16
pop
jno
fucomp
or
aaa
js
mov
ja
jo
or
sub
push
adc
adc
xor
cmp
sti
inc
add
cmpsb
movsl
add
inc
jnp
cmp
popa
pusha
shll
outsl
stc
mov
out
mov
xchg
nop
and
sti
fsubp
hlt
push
pusha
add
les
xchg
mov
dec
fsubl
xor
mov
sub
into
jle
lds
test
jecxz
cmp
lcall
push
sbb
nop
mov
in
ss
xchg
and
lret
rcl
add
push
inc
mov
aaa
mov
xor
imul
fldenv
push
add
and
push
inc
ret
inc
scas
push
lahf
nop
jae
loop
imul
mov
xor
mov
shll
jecxz
inc
or
les
jne
rol
decl
fcoml
sub
add
and
rcl
add
and
mov
push
cmp
fists
fwait
ret
push
insl
add
sbb
adc
sbb
bound
xchg
jae
pop
fnstcw
ret
insb
ja
mov
mov
jb
sbb
movsb
shrl
sahf
nop
loopne
sbb
mov
push
test
jns
mov
xor
adc
pop
mov
mov
shll
scas
sub
dec
push
ret
sub
mov
pop
jg
sbb
cld
pop
sbb
xor
pop
in
add
pop
push
adc
xchg
pop
leave
xor
jl
push
int
mov
in
push
scas
sbbl
loopne
outsl
push
das
cmp
inc
pop
jns
stc
sti
push
push
dec
adc
setp
dec
movsb
xlat
xor
ds
and
xor
inc
xor
inc
mov
into
fldcw
mov
test
mov
inc
test
mov
sbb
push
in
bound
mov
push
icebp
push
mov
divb
ljmp
cli
in
in
xchg
and
mov
push
and
lods
sbb
jb
pop
add
sahf
leave
or
add
push
xchg
outsl
lds
xchg
push
push
shll
cmp
out
mov
repnz
push
loopne
das
mov
fnsave
pushf
push
les
mov
xchg
and
mov
loop
push
mov
fcoms
data16
mov
clc
cmc
ljmp
xorb
mov
pop
shl
rolb
movsb
pop
push
add
mov
and
inc
call
int3
cwtl
pusha
test
repz
shr
scas
fwait
pop
loopne
xchg
and
aam
movsb
mov
push
test
mov
mov
push
jnp
cmp
popf
inc
mov
pop
lret
out
mov
inc
int3
pop
pop
repnz
loop
cmp
in
xchg
push
and
imul
xchg
js
mov
stc
xor
cld
dec
push
nop
add
call
and
push
pushf
fistps
mov
imul
insb
in
jge
aaa
ret
fiadds
or
cmp
jmp
jb
xchg
ljmp
stos
inc
adc
lcall
fwait
in
sarl
inc
or
mov
adc
sub
mov
cmp
sti
cmpsb
jg
psubusb
xchg
stos
or
or
add
and
rorl
ja
bnd
daa
loopne
mov
dec
fwait
out
frstor
std
push
xor
or
andl
flds
xchg
mov
lcall
jbe
std
shll
jmp
fisttps
xchg
repz
dec
sti
xchg
imul
push
sbb
cwtl
fistl
cli
or
out
xchg
aas
xor
pop
sub
jb
imul
add
or
mov
mov
cmp
loopne
add
mov
mov
inc
add
jne
jmp
mov
cmpsl
adc
cmp
sbb
stc
dec
mov
leave
pop
and
fs
jle
mov
lahf
dec
lret
mov
lock
and
mulb
dec
xor
bsr
mov
insb
jge
inc
imul
or
gs
imul
jae
data16
js
loope
je
jmp
mov
jo
mov
fdivs
cwtl
sub
cmp
stc
push
into
jle
subl
jecxz
mov
cmp
mov
lahf
mov
sbb
push
xchg
and
pop
inc
fwait
xchg
push
pop
in
out
subl
mov
aaa
mov
mov
addb
sub
jge
cmpsl
cmp
repnz
mov
icebp
and
sbb
jbe
mov
push
inc
orb
imul
movsb
jle
popf
jb
push
cltd
cmp
in
or
arpl
ret
leave
add
mov
out
xchg
test
cltd
addl
or
adc
sub
push
fdivrl
push
pop
mov
or
sub
lcall
sub
lods
das
sbb
scas
xor
cld
jg
mov
ljmp
xchg
mov
in
jno
addl
cld
fs
adc
out
pop
cmpsb
movq
pop
push
aas
push
add
or
pop
flds
sbb
dec
aad
inc
jae
hlt
ret
mov
test
mov
nop
inc
data16
jo
inc
in
cmc
xchg
xor
stc
jg
sub
dec
incb
loop
pop
out
jg
call
jl
sbb
cmp
jg
jl
sbb
adc
pop
ja
dec
mov
mov
gs
pop
adc
scas
repz
out
or
mov
aad
repz
sarb
inc
imul
fldl
mov
adc
or
popa
test
sub
popa
xchg
inc
or
shll
outsl
lcall
pusha
sbb
loope
lret
ljmp
add
xor
in
movsl
push
movsb
shlb
out
mov
sbb
mov
daa
je
or
call
push
jmp
addb
out
insb
insb
test
mov
arpl
popa
bswap
jae
push
cmpl
fstp
and
mov
fcmovnu
xchg
pushl
add
lods
testb
adc
pushl
and
push
mov
imull
inc
negb
mov
inc
sub
cmpb
outsb
xchg
sbb
add
cltd
adc
xchg
test
sbb
or
sbb
mov
outsb
lea
dec
or
mov
push
or
xchg
or
sub
ja
xchg
call
xchg
testb
xor
int3
push
and
jmp
jae
stos
jecxz
stc
push
jle
cmp
clc
jp
loopne
test
xchg
xor
xor
push
mov
pop
and
push
inc
push
push
dec
inc
jle
cmp
shlb
and
cmc
pop
mov
sarb
or
stos
lahf
fcom
xlat
into
mov
push
or
andl
out
addr16
dec
test
mov
out
test
fstpl
int3
xchg
jb
cld
movsl
push
fcmovnbe
inc
sub
out
in
pop
mov
cld
sahf
test
sub
cltd
shrl
ljmp
sub
dec
mov
mov
pop
sbb
sbb
int3
test
clc
dec
lods
test
jno
push
in
out
mov
mov
int3
adc
clc
mov
mov
popa
jp
pop
push
inc
test
popa
shll
dec
mov
sub
pop
out
mov
outsb
and
push
cmp
iret
dec
fidivrl
mov
lods
mov
scas
dec
movsb
mov
dec
pop
or
xchg
sub
mov
xchg
lds
mov
mov
data16
mov
repnz
test
out
jnp
pop
mov
aam
push
je
cmpl
sub
push
cmp
and
cmp
push
xor
idivl
xorb
mov
mov
adcb
out
adcl
dec
push
mov
adc
mov
dec
mov
rorl
lock
push
xor
and
jecxz
adcb
negl
insl
adc
or
ss
rcll
mov
pop
popa
add
mov
popf
mov
dec
pop
xor
jp
and
roll
shlb
jae
popf
adc
or
or
insb
sub
push
pop
push
mov
sub
push
cmp
cmpsl
dec
push
daa
pop
add
imul
test
mov
pushf
dec
pop
pusha
dec
repnz
cli
xchg
scas
daa
movsl
push
mov
mov
inc
mov
cld
jmp
xor
aam
adc
and
shrl
adc
mov
dec
push
mov
or
xchg
mov
or
cs
lahf
xor
mov
stos
popf
in
loope
mov
mov
sbb
push
jb
outsl
push
subl
push
std
arpl
xor
or
les
in
leave
sbbl
aas
mov
push
ja
mov
add
inc
cltd
jae
cltd
sbb
cmp
pop
cmp
sub
dec
test
and
in
stos
enter
pop
lods
lahf
mov
xchg
in
pop
loopne
jb
fildl
sbb
lahf
arpl
movsl
fdivrs
mov
cli
push
pop
or
clc
xchg
outsl
adc
repz
add
and
pop
mov
sbb
mov
adc
cs
push
jno
and
and
int
xchg
in
cmp
sbb
lret
fmuls
adc
das
ja
iret
sub
imul
push
inc
clc
sub
mov
int3
jne
shlb
lahf
aad
or
cmp
or
and
ret
or
mov
sbb
xor
aam
cltd
std
cld
fisubrs
push
andl
lds
in
mov
repz
aaa
mov
jne
cmpb
mov
shrb
lods
lea
or
jmp
jl
mov
mov
push
sbb
popa
adc
cwtl
push
cmc
imul
cmp
das
xchg
and
lahf
add
push
sub
xor
mov
xchg
test
jne
cld
fnstcw
mov
pop
mov
outsb
insb
xchg
jo
and
and
loopne
in
inc
xlat
or
sub
mov
lcall
nop
jp
mov
pop
cli
push
in
jnp
xchg
add
jno
mov
inc
and
mov
push
loope
push
gs
cmp
sti
mov
lahf
mov
push
out
sahf
call
orb
inc
push
mov
pop
mov
mov
pop
fldcw
dec
test
sub
inc
sbb
movsb
gs
pop
movsl
idivb
lcall
xor
sbb
ds
sub
mov
and
jbe
mov
ret
xchg
fidivs
in
das
hlt
or
push
add
mov
insl
sbb
mov
dec
aad
negl
ds
push
stos
aas
xchg
test
push
mov
hlt
jnp
or
push
lahf
jecxz
xor
and
in
ret
sbb
scas
mov
ljmp
sub
das
popa
loop
adcb
xchg
cmp
std
into
jp
fidivrs
mov
pusha
and
inc
sahf
out
dec
rorl
mov
loop
add
iret
push
nop
push
push
push
xor
xor
lret
pop
mov
sbb
pop
stos
hlt
stos
dec
loopne
jge
repz
mov
inc
xchg
loope
sub
xchg
mov
mov
mov
sahf
cmpsl
nop
stos
stos
ja
inc
lahf
jo
xorl
sub
shlb
push
xchg
jmp
add
mov
sub
sbbb
push
mov
push
sub
inc
in
sahf
std
cmpsl
insb
add
fcoms
push
mov
addl
add
cmp
bound
pushf
aas
lock
bound
andl
xor
adc
data16
repz
es
fildl
jl
xchg
mov
mov
das
adc
push
loope
cmpsl
orb
mov
shrb
aaa
sub
js
sbb
int3
lods
insl
kmovd
in
test
sub
fwait
mov
mov
push
leave
xchg
lea
rol
xchg
lea
fldcw
test
sbb
jge
mov
test
mov
dec
push
ss
mov
push
and
cli
sbb
lahf
push
call
and
lret
pop
mov
dec
imul
clc
mov
lds
je
cmpsb
push
jge
sub
cmpsb
cltd
jmp
call
inc
cmpsb
lret
or
pop
test
jg
incb
sub
icebp
in
daa
and
jnp
cmp
int
add
into
sti
mov
repz
push
out
or
lahf
repnz
jg
pmaxsw
jns
and
fldcw
mov
xor
mov
pop
in
sub
mov
and
fnstsw
ja
out
div
dec
sbb
dec
mov
and
and
fists
mov
sti
repnz
imul
mov
imul
dec
xor
mov
pop
outsl
sarb
push
sti
pop
jl
xor
push
add
popa
ret
outsl
xor
sbb
sub
js
dec
xchg
and
mov
and
loope
loopne
sbb
fbstp
mov
mov
jnp
aaa
cmp
repz
mov
aam
push
xor
cmpsl
fnsave
jae
push
stc
aas
insb
idivl
shrl
add
mov
je
sub
test
sbb
lods
add
sub
add
lods
ret
xchg
ds
in
xor
aaa
jbe
jle
lds
fstl
inc
mov
cmp
sarl
or
xlat
pop
rcrb
es
push
mov
out
jbe
daa
mov
push
pop
xchg
jo
dec
cld
inc
mov
mov
dec
dec
aam
sub
dec
fsubrl
xor
xchg
jns,pt
ds
into
adc
xchg
pop
lock
jge
fidivrs
push
jae
cmpsb
push
lea
popa
nop
xlat
inc
jns
dec
sti
out
mov
lock
mov
mov
sbb
sahf
pop
dec
adc
loope
jp
mov
adc
idiv
xchg
mov
add
sub
jns
jmp
mov
sti
sbb
insb
pop
dec
arpl
cmpsl
sbb
leave
mov
dec
cmp
jl
mov
clc
sarb
popf
sti
and
loope
jbe
jg
fwait
sbb
pop
lods
mov
lea
ret
xchg
lahf
lods
insl
loope
lds
cmp
adc
inc
mull
dec
out
imul
dec
push
nop
fidivrl
mov
cld
pop
push
inc
sub
or
inc
test
loope
shrl
add
or
lods
cs
mov
jp
xor
loopne
sahf
lcall
mov
or
scas
pop
inc
outsb
jo
pop
adc
iret
aas
dec
mov
cld
and
test
daa
pop
inc
imul
daa
push
pop
xchg
es
int
inc
inc
pop
sbb
out
fstp
outsb
jle
jb
jb
popf
mov
pusha
jae
sub
test
pop
xor
enter
xor
mov
mov
test
adc
push
repnz
xchg
push
mov
xchg
or
iret
mov
dec
sub
xor
and
mov
or
test
cmp
and
xor
xlat
das
sbb
jge
adc
cmc
aas
pop
mov
je
xchg
shrb
imul
jmp
mov
mov
out
jmp
mov
aaa
inc
popa
mov
adc
cmpsb
jnp
into
mov
mov
shlb
jle
sub
fdivrl
sub
in
popl
xchg
jo
cld
loop
xor
jb
jle
iret
jnp
inc
out
pop
das
imul
sub
lods
out
sub
js
lods
adc
cwtl
sbb
xor
loope
or
lret
call
push
jnp
jmp
sbb
dec
push
aas
sbb
xchg
xor
dec
inc
repz
adc
testl
mov
out
in
cmpsl
daa
fcmovu
stos
cmp
dec
inc
pop
sbb
jnp
pusha
jmp
mov
insb
rclb
sbb
sub
xchg
imul
popa
adc
stos
xorb
imul
out
pop
xor
cmp
push
bound
dec
add
fiaddl
mov
bound
sub
sbb
loopne
jp
mov
ret
push
sti
push
push
outsb
mov
es
jo
test
jnp
popa
js
jmp
pusha
addr16
mov
sub
loope
sub
jno
cwtl
xchg
add
mov
out
aad
cwtl
jb
lods
xor
aas
cld
fs
inc
daa
lret
into
or
shr
iret
dec
insl
daa
inc
jle
push
das
lret
mov
lahf
lahf
jp
lds
inc
and
jns
mov
or
or
sbb
in
loopne
jb
cld
mov
pop
dec
inc
insb
dec
in
dec
aaa
rclb
fbld
sbb
cltd
imul
xor
mov
dec
loop
cmc
insb
pusha
sahf
push
xor
and
in
inc
cld
xor
sahf
in
mov
in
dec
and
mov
add
sub
sub
mov
sub
adc
dec
cmc
imul
loopne
inc
jo
imul
ret
sbb
fdivs
rclb
xor
rclb
add
jno
and
jg
xor
rclb
ss
sbb
mov
cli
mov
cmc
cmc
sub
pop
call
out
cmp
mov
push
dec
movsb
add
aam
pop
sbb
sbb
jle
lock
mov
inc
inc
mov
mov
imul
adc
pop
pop
sub
loop
xchg
inc
dec
sbb
sarb
in
pop
lock
mov
jb
inc
mov
addb
ljmp
ror
hlt
pop
imul
sbb
dec
inc
push
ss
test
repz
cmpsl
inc
mov
loopne
repz
sbb
xor
pop
scas
or
dec
xor
hlt
fcmovnbe
fsubr
adc
add
push
mov
jns
aas
rcrb
push
shll
movsb
dec
inc
gs
xor
mov
push
dec
xor
add
pusha
jmp
jmp
arpl
enter
pop
sbb
aam
add
mov
sbb
fisttps
mov
add
nop
jg
jne
or
pop
push
push
cmp
mov
and
xorb
push
mov
loopne
leave
push
jb
popa
ljmp
dec
dec
mov
out
das
and
outsb
xchg
imul
mov
jbe
fs
mov
movsb
mov
xchg
xchg
sti
dec
orl
outsl
xor
push
pushf
sarl
xchg
les
jne
pop
adcb
mov
lods
push
dec
fsub
lock
xchg
bound
lahf
inc
xchg
sbb
sub
fnstenv
ljmp
push
jnp
inc
mov
pop
xchg
sub
dec
aaa
cmp
push
sub
jb
clc
sbb
adc
dec
jg
xchg
cmp
inc
inc
xor
push
inc
cmp
jle
push
push
mov
xchg
jecxz
mov
push
adc
fidivl
scas
into
fcomps
sub
xor
js
notl
ficomps
pop
jle
pop
cs
inc
loopne
call
push
pop
or
jns
xor
mov
lahf
dec
aad
mov
mov
cmp
adc
stos
xor
mov
rcr
jmp
in
mov
sahf
sub
test
cmp
addr16
cltd
lret
xor
adc
inc
in
push
pop
ret
loopne
popf
cld
stc
jne
ret
outsb
je
sarb
cmp
mov
pop
mov
mov
jl
dec
nop
xchg
mov
or
pop
ror
xor
cmp
or
lret
loopne
imul
nop
lods
sbb
jo
or
mov
arpl
out
lret
jo
xor
push
mov
adc
mov
iret
leave
push
add
popf
les
xchg
ja
fstl
inc
mov
mov
popa
xor
adc
sbb
cli
cli
lcall
inc
mov
ret
inc
jecxz
and
fwait
enter
jno
xchg
insb
addr16
mov
mov
icebp
pop
cmp
push
out
outsl
pop
mov
out
out
pop
push
xor
sbb
inc
cwtl
lds
sub
pop
std
in
repnz
mov
ja
xchg
loopne
lods
jge
ss
xorl
sbb
xchg
cmp
mov
ficoml
cmp
jo
mov
lahf
sub
testl
mov
adc
push
sbb
mov
lea
xor
jle
andb
roll
ret
push
call
out
push
xlat
xchg
repnz
adc
out
add
pop
xor
aad
xor
fwait
or
push
data16
xor
xchg
out
inc
jnp
pop
pushf
xor
push
lods
sbb
ss
inc
xor
cmp
sbb
cmp
xchg
mov
inc
lret
shlb
jno
mov
rorl
mov
xchg
aad
repnz
daa
pushf
xor
cmp
cs
cmp
adc
scas
cs
add
push
sub
leave
fucomi
dec
ret
xor
sbb
pop
cmpsb
fistl
fxch
mov
sbb
xor
cmp
push
out
hlt
iret
mov
xor
mov
jg
cmp
movsb
fwait
in
sbb
dec
push
jb
xor
xor
mov
fdivrp
je
lcall
jb
dec
lahf
jne
jno
jbe
aam
stos
jmp
and
cmp
pushf
pushf
inc
scas
mov
stc
pusha
shrb
mov
mov
cli
jl
aam
push
pop
fwait
or
sub
xlat
lar
fucom
test
and
xchg
aad
aaa
push
mov
test
shlb
add
mov
loope
jg
popf
pop
xchg
in
cs
adc
xor
fidivl
stos
rcll
mov
jae
lcall
out
xor
adc
cltd
xchg
std
sarl
inc
fldt
cmpl
sub
movsb
fcom
pop
mov
js
movsl
mov
and
leave
lods
imul
push
daa
gs
lds
shrb
fcompl
lret
push
scas
ljmp
js
jbe
inc
push
sbb
js
clc
scas
aad
or
loopne
fisubs
loope
xorb
mov
and
dec
inc
loop
xchg
pusha
adc
faddl
or
js
or
js
repnz
push
cmp
add
cmp
or
sub
divb
fistpll
ja
sub
in
jns
cmpsl
mov
xor
imul
xchg
hlt
xchg
out
int3
xchg
mov
and
jmp
cld
scas
icebp
inc
xchg
int3
and
dec
fimull
mov
call
xor
dec
gs
and
jp
aad
and
ret
xchg
stc
jp
test
cmp
mov
xor
xchg
and
cmp
inc
lods
imul
rorb
out
loopne
dec
jne
mov
xchg
mov
inc
xor
ja
ds
loop
ds
push
add
sub
push
cmp
sub
decl
loopne
push
pop
mov
jl
inc
ss
jbe
repnz
and
leave
jae
stc
outsb
cmp
test
pop
into
ljmp
scas
push
jp
push
adc
or
jg
jb
ret
dec
push
mov
out
push
xor
ss
je
lock
and
jmp
or
and
pop
pop
les
arpl
add
push
in
push
or
clc
cwtl
cmp
mov
mov
int3
test
sub
mov
fsubrl
sbb
and
ret
push
cld
aad
cmp
dec
push
jl
cmp
in
jmp
dec
add
and
jl
xor
xchg
ds
jnp
sbb
push
hlt
adc
add
bnd
mov
pop
jnp
insl
sbb
jae
inc
xchg
pop
nop
sbb
cmc
aaa
imul
je
xor
pushf
push
js
inc
dec
cltd
repz
ds
leave
sbb
lock
xchg
xor
jecxz
mov
add
push
or
stc
mov
push
mov
in
mov
cmp
loope
sbb
mov
leave
push
cltd
xor
sub
adc
pop
fisubs
pop
mov
fdivr
js
cltd
in
cwtl
fwait
mov
js
in
push
lock
sub
sbbb
xor
add
outsl
notb
mov
xlat
xor
cmc
add
push
pop
xchg
pop
movsb
mov
fisubrs
jbe
xor
mov
sub
sub
fsts
loopne
lea
xor
stos
sub
pop
test
or
mov
ds
bound
into
cwtl
fs
sbb
jle
shrb
mov
pop
inc
mov
mov
and
faddl
cmpsl
in
xchg
fmull
or
push
sub
enter
jmp
repz
mov
cmc
mov
mov
xchg
jl
mov
insb
cmp
mov
inc
daa
cli
hlt
dec
ret
mov
push
mov
add
cwtl
icebp
cmc
xchg
add
movsb
add
mull
sti
sub
outsl
mov
inc
cbtw
and
jb
adc
rorl
fcmovnb
sbb
repz
inc
lret
push
mov
and
leave
push
jle
popf
popf
cwtl
sbb
and
lret
or
mov
je
pop
ja
mov
cmp
shll
rorl
dec
mov
insb
mov
add
js
sub
jecxz
adc
sub
repnz
jns
in
ss
insb
mov
and
cmpsb
test
xchg
dec
aas
daa
in
or
or
iret
sub
fmull
js
jl
imul
xchg
movsl
push
jmp
ljmp
add
mov
out
sahf
outsl
out
je
fisubl
adc
ss
repnz
jno
push
sub
or
jae
pop
loope
adc
icebp
cmc
dec
test
push
inc
pop
xor
andb
jb
jmp
aas
imul
sbb
repz
jne
pop
aad
iret
iret
adc
push
xchg
insl
inc
not
inc
mov
lds
cmp
stos
mov
xchg
mov
pop
push
cmpsb
and
dec
mov
jnp
and
dec
sbb
jle
or
ss
mov
inc
pmaxub
mov
call
adc
divl
sti
sbb
xchg
gs
and
loopne
mov
cld
xor
xchg
popa
shrb
xchg
inc
adc
ss
inc
sarb
fwait
rsm
and
pop
mov
jg
test
gs
hlt
insl
fidivrl
es
in
loope
dec
jmp
test
leave
lahf
inc
clc
xchg
add
mov
xor
fcompl
sub
xor
sbbl
test
dec
dec
call
sub
mov
push
push
gs
inc
mov
mov
hlt
test
pop
cs
out
pop
jns
idivl
or
sar
test
aad
loope
dec
lret
fwait
xor
lret
ret
add
out
adc
pop
adc
cmp
mov
inc
addr16
add
sbbl
jne
xchg
js
pop
enter
add
lcall
sub
inc
in
mov
dec
mov
lods
popf
sbb
bound
cwtl
fwait
mov
jecxz
adc
mov
xchg
jl
stc
and
outsb
mov
insl
push
jl
mov
mov
cmpsl
cs
iret
xchg
jbe
orb
jbe
lds
out
mov
and
rclb
outsb
adc
scas
xchg
int
mov
jnp
aam
out
jmp
mov
mov
inc
ret
aam
or
and
shlb
ljmp
bound
mov
pop
push
add
and
xor
inc
je
push
xor
int
aas
pusha
fs
add
mov
repz
orl
sti
push
xor
jae
out
lods
inc
and
test
mov
or
sbb
inc
popa
pop
lahf
mov
jns
sub
js
xor
ljmp
xchg
test
outsl
adc
into
xchg
hlt
mov
jle
add
mov
es
ja
stos
daa
clc
add
fidivrl
cmp
push
icebp
jmp
les
fwait
in
xchg
mov
push
hlt
cmp
cld
sbbb
test
sbb
push
pop
scas
rclb
adc
lock
pop
fs
dec
idiv
dec
fisttps
test
lock
leave
sarl
mov
ret
movsl
adcl
jg
stos
xor
test
mov
cmpsl
pop
and
inc
inc
push
test
and
xchg
ds
xchg
mov
jo
xchg
cmpb
mov
ret
adc
cwtl
pushf
mov
dec
and
mov
push
mov
jge
fs
fadds
gs
sub
dec
mov
ss
lcall
cltd
fisubl
lret
sti
jb
push
ja
cmpsl
mov
rcl
es
fldt
xor
addb
jnp
xchg
push
mov
cld
insl
cmpsb
jge
int3
sbb
ss
sbb
xor
les
int3
xchg
lahf
les
push
mov
mov
inc
add
mov
repz
gs
outsb
mov
push
cmp
and
cmp
sahf
add
and
jp
out
es
and
xchg
xchg
lds
adc
and
add
inc
jmp
lret
mov
sahf
push
stc
cmp
call
cmp
stos
sbb
and
or
mov
into
lods
pop
lahf
sahf
lret
mov
cmp
mov
int3
inc
push
subl
loope
adc
jnp
lret
popl
sbb
dec
mov
mull
jns
out
fists
inc
and
xchg
into
les
es
les
addb
or
test
adc
popa
lret
mov
jnp
insl
out
sbb
fbstp
cmp
mov
and
pop
rcl
loope
sbb
data16
dec
mov
xchg
sub
xor
or
in
mov
in
sbb
in
iret
test
mov
add
call
inc
mov
icebp
mov
jo
lret
test
rolb
jmp
and
mov
test
lods
mov
jns
or
xor
pushf
hlt
pop
jnp
out
jbe
subl
fdivs
inc
mov
pusha
add
push
lret
or
sub
add
cmpsl
faddp
xor
aad
adc
push
mov
fdivp
and
ficompl
das
xor
add
or
aam
xor
rorl
movsb
or
sub
jbe
lods
jecxz
xchg
cmp
adc
xor
jb
lea
cmp
push
cld
ficoml
pop
clc
dec
jp
sub
in
xor
inc
lock
cmp
mov
dec
popa
cmp
pusha
pusha
dec
sbb
dec
dec
je
ja
add
sbb
xor
or
inc
pop
movsb
hlt
xchg
ss
test
xor
out
scas
and
pop
mov
mov
mov
cmp
and
xchg
sub
adc
sbb
rclb
inc
popf
loopne
test
fisttpl
push
xlat
xchg
inc
sahf
jmp
loope
mov
mov
jnp
ljmp
jb
cmp
movsb
in
mov
cmpsl
mov
jmp
jae
test
scas
pop
icebp
jae
imul
pop
add
btr
cs
ret
mov
mov
cmp
and
or
dec
adc
inc
lcall
xor
in
jne
jno
andb
push
pop
dec
or
push
xchg
dec
push
push
call
sti
fsts
pusha
pop
cmp
or
in
xchg
cwtl
mov
roll
ret
fcomps
jmp
popa
xor
cmpsb
push
inc
inc
or
add
sbb
jmp
cmc
xchg
cwtl
xchg
push
fcmovnb
dec
ja
push
insl
int3
popa
mov
test
mov
and
lds
jecxz
out
stos
dec
pushf
gs
sbb
mov
test
xchg
mov
xlat
popa
mov
test
mov
mov
movsl
xor
loope
lods
pop
imul
movsl
sahf
mov
sti
cli
hlt
cmp
xor
scas
test
dec
cli
xor
not
mov
mov
out
push
pop
in
ret
out
out
or
pushf
shll
jl
aas
sbb
jno
dec
xchg
add
pop
sub
sbb
xchg
lahf
ljmp
fistl
xchg
xchg
cmpsb
pusha
xchg
addr16
xlat
enter
popa
jae
loope
xchg
jno
les
sbb
aas
xorl
insl
cmp
outsb
aas
cmp
fwait
add
xlat
add
in
in
mov
inc
addl
cmp
loop
adc
outsl
in
lahf
addr16
rolb
fwait
in
stos
orb
and
out
lret
add
lods
adc
xchg
sbb
lret
sub
jle
aaa
lea
cli
lcall
mov
jne
pushf
inc
lret
pop
cmp
jnp
xchg
fdiv
cmc
popa
cwtl
lret
sub
jne
adc
fisttps
xchg
xchg
insl
sarl
dec
loope
add
int3
call
fimull
test
addr16
and
lods
arpl
sbb
enter
adc
loop
into
int3
mov
lods
aaa
push
sbb
push
xchg
or
cwtl
popa
das
sahf
test
call
popa
stc
or
stc
int
leave
inc
ljmp
sti
arpl
push
je
dec
data16
out
fmull
pop
loop
xor
dec
mov
mov
lret
lods
mov
xor
pushf
mov
jp
insb
rorb
jmp
unpckhps
fdivrp
cwtl
testb
jl
jg
leave
sub
mov
out
xchg
mov
aas
sub
mov
lret
lods
sbb
movsl
mov
sbb
push
dec
adc
stos
mov
daa
jg
lahf
leave
lcall
pushf
inc
pop
adc
fdivr
fstl
fadd
jns
jmp
adc
mov
ret
imul
dec
add
in
shl
and
enter
push
jb
inc
sbb
push
lods
mov
dec
je
push
jmp
in
nop
or
and
mov
fwait
jae
icebp
lea
mov
cltd
push
mov
jae
ds
inc
pusha
jo
fs
mov
xchg
or
imul
clc
rcrl
or
out
dec
push
add
mov
icebp
cli
cmp
jo
xchg
lcall
negl
adc
add
xchg
imull
std
loop
and
or
push
xchg
cmp
dec
sti
or
adcb
ficompl
aaa
and
push
insl
clc
cmp
xor
fdivrs
cltd
xchg
bound
jno
xchg
out
leave
bound
gs
mov
cli
xor
jne
mov
pop
mov
xor
insl
adc
test
lock
adc
jmp
and
mov
pop
imul
nop
inc
data16
sbb
xchg
sbb
mov
popa
mov
dec
mov
or
sbb
je
cmp
cld
inc
pushf
test
xor
pusha
mov
das
lcall
ret
inc
fiadds
outsl
testb
repz
sbb
xchg
push
xchg
cld
cmp
sub
mov
sbb
pop
shrb
xorl
cmpsl
ljmp
fcoml
adc
outsl
mov
add
pop
cmp
arpl
std
jne
ljmp
push
and
inc
sub
xchg
xchg
ds
call
xor
cmp
jmp
jecxz
dec
sbb
scas
movsb
in
inc
call
jne
scas
ret
sar
call
arpl
adc
jmp
sub
out
xor
test
scas
or
fs
iret
push
push
or
dec
or
movsl
lods
sbb
pushf
mov
and
mov
dec
nop
pop
sbb
pop
sub
and
and
sahf
and
clc
sub
imul
xchg
push
popa
rcr
xor
mov
add
and
popf
mov
dec
push
lock
push
mov
pop
lcall
cmp
in
shlb
test
sbb
popl
dec
stos
or
push
ffree
cwtl
add
js
repnz
jmp
in
push
dec
jmp
push
aas
lock
inc
sarb
and
push
jp
mov
xchg
addl
push
xchg
push
pushf
dec
cmpsl
add
int
aas
ret
jns
pop
adc
dec
mov
ficomps
mov
sbb
pop
arpl
adc
sbb
into
jmp
inc
arpl
mov
xchg
mov
or
je
test
roll
in
fs
cmp
daa
mov
gs
inc
jo
fcomp
jl
in
mov
mov
das
inc
jmp
push
clc
push
mov
hlt
sti
dec
adc
stos
push
fidivrl
ljmp
aaa
sub
mov
mov
xchg
test
xor
add
js
mov
xchg
push
idivl
insb
xchg
jb
push
int3
shlb
pop
pop
cli
cmp
and
int
jne
push
int
jbe
pop
mov
jae
xchg
ljmp
subl
loop
mov
adc
fnstcw
das
push
sarb
or
in
in
loope
push
mov
nop
add
or
imul
fs
cmp
ljmp
and
mov
mov
cmp
leave
push
sbb
push
lcall
mov
xchg
imul
mov
mov
cs
xlat
cmp
stos
jo
and
sar
mov
in
sub
push
shll
sub
aam
andl
jecxz
adc
push
sets
shlb
or
inc
ss
cmp
jae
push
cmpsb
pxor
xchg
mov
sbb
pop
mov
jbe
and
cmpsb
movsl
push
jp
sbb
xor
xor
sbb
arpl
out
push
mov
xchg
adc
jmp
pop
rcr
sbb
shll
xchg
cmp
out
cmp
ljmp
repz
pop
fs
sarl
inc
jge
ret
and
and
mov
mov
cs
loopne
mov
std
push
stos
and
and
mov
jae
in
jns
pop
sbb
jmp
dec
repnz
add
inc
es
pop
jb
dec
ret
shll
ss
fwait
adc
je
or
lret
cmovs
cmp
or
jl
rolb
push
xor
xlat
dec
and
cmpb
cmp
lcall
out
repnz
rep
or
inc
dec
jns
loop
data16
sub
repnz
and
ficomps
or
gs
stos
push
mov
push
add
aaa
out
push
outsb
fwait
xchg
aas
inc
movsl
add
outsb
fisubrl
flds
fs
into
pop
imul
jmp
jnp
jb
push
cmpsb
fcoms
push
or
outsl
outsl
adc
out
fidivl
loop
insl
xchg
lock
inc
or
push
jp
iret
xor
mov
pop
jmp
sbb
jp
cmp
or
pop
subb
sbb
xchg
mov
dec
lock
fwait
mov
ljmp
test
fnstenv
addr16
in
leave
mov
sbb
xor
push
lcall
popa
mov
xchg
inc
negb
loop
cld
inc
enter
pop
in
cmp
in
inc
out
std
add
inc
je
jno
pusha
mov
push
pop
add
movsl
dec
loop
test
arpl
inc
or
aas
dec
jmp
mov
fldl
jge
lret
leave
mov
add
test
and
or
mov
aaa
aaa
out
nop
je
xchg
pop
push
pusha
xor
das
test
ds
mov
pop
insl
jl
gs
movsb
add
jl
hlt
dec
mov
jns
ljmp
ret
pop
fcomps
jne
mov
cmp
outsb
mov
push
jmp
or
out
pop
or
call
or
int
in
mov
sub
aad
inc
push
notb
cmp
or
add
testb
cmp
test
pop
out
sub
cltd
mov
cltd
std
xchg
dec
data16
or
sbb
js
cmp
xchg
mov
stos
aad
subl
repnz
fcoml
fwait
sbb
jge
push
jae
add
stc
fisubrs
rcrl
ds
mov
enter
ljmp
push
jb
jge
out
cmp
or
aas
mov
xlat
ficompl
mov
mov
push
out
sbb
arpl
lret
loop
inc
inc
jne
adc
or
in
out
add
mov
outsl
leave
out
cmpsl
cmc
test
pop
push
xchg
je
mov
adc
xor
sbb
repnz
dec
in
insb
call
add
push
loopne
mov
ss
and
push
scas
dec
loopne
adc
jbe
inc
xor
fimuls
stos
mov
je
pop
fucomi
mov
or
xchg
push
mov
scas
fwait
les
js
lahf
mov
daa
sub
sbb
sbb
pop
call
in
jmp
negb
xor
nop
pop
lret
lret
rorb
imul
imul
daa
adc
sar
stos
lret
aad
test
sub
cmp
sub
xor
pop
sub
jbe
aad
fst
pop
push
sti
lds
test
push
pop
dec
stos
push
arpl
sub
orb
aad
jae
in
sbb
fstl
pop
popf
test
repnz
lret
ss
push
pop
dec
lods
aas
xchg
inc
xor
pusha
imul
repnz
push
fwait
jb
push
xor
fcompl
out
shrl
jae
in
ds
cmpsb
mov
jno
scas
sbb
add
cmp
cmp
cwtl
das
pop
inc
repnz
loopne
lcall
dec
aam
rorl
sti
imul
loope
xchg
ljmp
stos
enter
add
xchg
mov
mov
call
in
loop
negl
inc
xchg
lret
sbb
movzwl
mov
aaa
mov
je
push
popa
jbe
pop
std
les
bound
mov
fwait
mov
cmpsb
ret
xchg
mov
movsl
cltd
leave
mov
clc
dec
jmp
loop
loopne
cs
xchg
ss
stc
inc
sti
push
push
inc
orb
stos
cmp
test
inc
pushf
and
and
add
xor
addl
incl
jbe
leave
dec
out
out
and
jae
or
and
dec
xor
clc
lret
xor
pop
orb
jns
pop
and
adcb
fisttps
mov
and
mov
in
fsub
dec
dec
mov
mov
jle
add
fldcw
ds
push
ds
pcmpeqb
das
aaa
sbb
push
fchs
repnz
xchg
mov
or
leave
xchg
repnz
outsl
pop
push
mov
push
mov
dec
jecxz
mov
cmp
call
scas
sbb
cwtl
jbe
fdiv
cli
les
dec
nop
add
adc
mov
inc
xor
mov
aas
roll
iret
cmp
xorb
pop
cwtl
xchg
popf
sbb
jecxz
inc
cli
repnz
push
sbb
adc
dec
icebp
xchg
js
add
fnstcw
jnp
adc
dec
inc
les
inc
in
mov
pop
sub
jns
dec
pop
jae
fisttps
stos
inc
pop
filds
in
icebp
xchg
dec
dec
fildl
jmp
insb
fimull
fidivrs
cmpsb
dec
add
leave
mov
daa
mov
inc
push
mov
into
mov
jae
pushl
cmp
repnz
das
mov
mov
cmp
loop
adc
lret
movsl
lcall
divl
lods
and
jb
push
cmp
loopne
popf
dec
or
pushf
inc
popf
fadds
hlt
jb
es
sbb
rolb
imul
mov
adc
mov
adc
repnz
sbb
daa
dec
dec
es
lcall
shll
dec
fldt
test
mov
jae
cmc
lahf
xchg
aaa
outsl
shlb
les
mov
int3
shll
shrl
cmp
jp
jbe
out
ss
in
inc
jmp
leave
ss
fstpt
shl
sub
ss
andb
clc
and
adc
incb
icebp
cld
sysenter
lret
pop
test
sarl
les
pop
test
stos
mov
popa
jg
lods
inc
push
mov
dec
movsb
add
inc
jge
fsubr
std
sub
xor
jb
pop
clc
jne
adc
out
xchg
loop
mov
adc
cmpsb
sub
out
pop
bound
inc
fprem1
and
push
lock
int
add
test
aaa
pushf
mov
hlt
or
inc
adc
fwait
shl
and
dec
xor
mov
rolb
adc
adc
push
aas
inc
clc
jno
arpl
das
inc
or
pop
pop
push
xor
or
lahf
dec
add
mov
fs
divb
jnp
inc
hlt
xor
cli
or
and
subb
push
notb
lret
push
pop
push
fdivrs
mov
ds
sub
cmp
clc
sbb
push
pusha
xchg
movsb
mov
mov
inc
imulb
xchg
dec
pop
bound
jns
call
inc
sbb
and
xchg
outsl
repz
jp,pn
mov
mov
mov
loopne
xchg
cmp
jno
xchg
jns
aad
lahf
daa
clc
push
enter
ficoml
in
pop
nop
loopne
pushf
lds
loope
imul
ret
stc
pop
xor
sub
in
xchg
test
testb
fimuls
dec
out
mov
loop
dec
add
ljmp
leave
lret
sbb
add
mov
xor
pop
cld
inc
lods
add
pushf
ficompl
mov
inc
mov
xorb
in
cmpsl
pop
adcl
jbe
push
pop
in
into
ja
ja
outsl
cmc
mov
jg
xchg
outsb
je
or
mov
pop
sbb
xchg
jo
cmp
mov
xchg
sahf
mov
jl
and
pop
sub
push
cmp
cmp
mov
or
fwait
out
decb
movsb
or
js
dec
lcall
push
add
leave
pop
mov
or
lea
and
mov
pusha
cmp
mov
or
push
or
push
jae
sub
inc
loopne
divb
fisubs
xor
pop
add
mov
mov
insl
add
jp
xor
fmuls
loop
jns
aad
push
jbe
cld
lcall
lods
insl
decb
cmp
dec
fmulp
loope
mov
cmpsl
pop
std
cltd
int3
jmp
push
adc
outsb
shld
fsubs
xor
cmpsb
xlat
xchg
adc
sbb
push
filds
cmp
popf
dec
push
dec
add
mov
pushf
pop
xlat
cmpsl
or
lret
push
mov
sbb
aas
sbb
mov
jp
call
push
nop
mov
cmp
int
imul
jae
mov
std
mov
or
push
icebp
fstp
jae
jb
or
mov
incb
cmp
and
mov
int3
pop
push
cld
mov
push
and
cmp
mov
push
pop
push
xchg
mov
cmpsl
jmp
fldenv
dec
cmp
inc
xor
sub
lods
loope
test
xor
cld
xor
inc
and
in
xchg
loop
shlb
faddl
les
cmpsl
sub
cld
mov
push
add
sbb
push
push
dec
gs
mov
hlt
call
jge
xchg
xchg
in
int3
jnp
push
and
sbb
dec
shll
aam
inc
lcall
pop
rclb
clc
dec
lock
sbb
inc
mov
xor
pusha
insl
enter
fimull
xor
test
hlt
icebp
push
pop
sbb
mov
imul
out
stos
mov
loop
or
pop
and
mov
jae
cld
sbb
lods
fdivl
dec
add
and
pop
jmp
cmp
xchg
cmpsl
stos
push
nop
xlat
das
or
incb
xor
xchg
fisubrs
pop
xchg
xchg
jp
add
icebp
dec
sbbb
rcll
mov
outsb
xor
imul
pop
cmpsl
sub
push
cmpsl
add
in
ljmp
push
gs
sti
out
into
inc
clc
aaa
jo
pop
icebp
roll
popa
and
mov
xchg
xlat
pusha
fcomps
adc
add
in
add
popl
data16
loope
idivl
lods
fcoms
sbb
jbe
insl
push
jnp
sbb
or
jne
mov
fwait
mov
negl
mov
xor
ret
bound
test
ret
adc
jge
cmpsb
cmp
cmp
mov
xchg
xchg
inc
jge
into
sbb
mov
dec
or
lds
pusha
test
sub
jmp
in
inc
mov
jo
sub
mov
test
inc
jge
dec
cmp
pop
int3
lea
insl
test
mov
incb
sbbl
aaa
std
jecxz
std
xchg
lret
xor
fs
imul
push
jo
jl
pop
mov
gs
adc
out
ret
mov
dec
sbb
add
popa
add
insb
lock
push
jns
dec
lcall
xchg
imul
loopne
shll
sbb
push
cmpsb
jecxz
icebp
scas
or
sub
mov
jnp
fmull
enter
vpaddq
stos
and
fsub
repz
movsl
ljmp
movsb
add
dec
mov
mov
les
cmp
loop
lock
sbb
jno
outsl
movsl
mov
repnz
jmp
sbb
jns
aad
push
lcall
pop
je
mov
cmp
pop
mov
add
jne
fcmovb
mov
sub
test
mov
xchg
mov
jbe
in
aad
hlt
or
xchg
push
ret
lcall
sub
jge
pop
lret
mov
scas
shrl
dec
add
jbe
mov
mov
pushf
inc
mov
adc
mov
mov
mov
in
and
icebp
je
xor
insb
fndisi(8087
addl
gs
std
inc
nop
pusha
gs
xor
cs
loope
add
push
add
jae
adc
pushw
jge
xchg
jne
fcoml
iret
mov
roll
push
cld
inc
add
pushf
push
lock
insl
int3
fists
les
ljmp
arpl
test
les
lret
add
jb
fildll
gs
sbb
jns
sub
test
mov
jno
add
pushf
pop
out
out
clc
push
and
dec
dec
fsub
or
nop
lods
popf
inc
cmp
inc
lds
dec
loopne
loop
outsl
xor
out
movsl
pop
loopne
lret
sarl
jl
pop
cmp
jb
imul
data16
ret
popa
cs
fwait
jle
or
lret
or
sarb
jmp
lock
stos
jl
and
negb
push
and
push
sbb
loopne
mov
int3
addr16
leave
in
jp
shlb
mov
mov
xor
mov
movsl
stc
aas
shlb
loope
cmp
cli
and
sbb
hlt
decl
or
int
inc
scas
or
testb
leave
xchg
mov
mov
sbb
jge
dec
dec
xlat
adc
shr
xchg
push
into
jp
daa
adc
js
mov
fisubs
test
inc
fdivs
fwait
movsl
pop
sahf
sarl
call
jle
xchg
mov
sbb
add
aaa
and
testb
jae
push
dec
enter
addl
fisubs
mov
jge
fwait
pop
subl
js
add
xchg
push
inc
je
inc
jae
movsl
aas
inc
jno
push
rorl
jae
loopne
in
dec
add
xlat
outsb
ficoml
shrb
jo
add
mov
test
in
jp
push
aad
jbe
pop
repnz
cmpsb
mov
xchg
leave
mov
or
mov
jecxz
aam
adc
mov
ja
dec
mov
aaa
push
jnp
mov
inc
movsb
lock
fs
scas
cld
mov
les
cmp
iret
sbb
jl
dec
push
mov
lret
insb
rcrl
aad
dec
mov
lods
mov
divb
fbstp
mov
cli
dec
inc
mov
sbbb
pop
int3
push
sbb
and
sarb
mov
add
into
aaa
sbb
pop
call
imul
push
inc
ja
adc
adc
aad
cmp
movsl
das
into
xor
mulb
sub
test
cmp
es
rcrb
push
lcall
decl
or
push
xchg
or
push
nop
ds
mov
test
cmp
and
jge
xchg
xor
les
inc
mov
fs
xor
imul
sti
cmp
rep
cmpsb
jmp
rclb
fisubrs
push
mov
imul
xchg
adc
stc
sub
cmp
js
fstpl
ss
cmpsl
and
aaa
xchg
or
les
push
movsl
or
addb
leave
jp
mov
jns
cmp
adc
daa
and
int
cs
adc
cmp
jp
dec
cmp
pop
ss
mov
es
fdivr
test
stc
or
inc
stc
shrl
mov
data16
add
jg
add
pop
adc
movsb
rolb
in
out
mov
cld
mov
add
and
mov
xor
in
iret
fwait
push
fisubrs
mov
iret
enter
icebp
shlb
bound
and
inc
popa
adc
int3
pop
cmpsb
cmp
pop
push
shr
mov
or
inc
or
xor
sub
mov
in
add
push
fwait
cmp
jbe
das
xor
das
sub
adc
rorb
dec
je
adc
ret
sbb
pop
cmp
jae
je
stc
sbb
pushf
hlt
add
or
xor
inc
aaa
sbb
out
mov
or
sarl
test
imul
cmp
in
push
repnz
xor
and
fldt
or
pop
jmp
xor
sub
inc
fiaddl
dec
mov
into
cmc
pusha
stc
xor
or
shl
mov
testl
aaa
inc
mov
outsl
mov
push
cmpb
cld
sbb
cmp
push
insb
inc
loopne
mov
cmc
mov
hlt
dec
xor
or
sbb
shrl
movsl
pop
mov
dec
stc
pop
aam
or
mov
fimull
jmp
addr16
mov
xor
add
aaa
adc
lret
imul
adc
into
daa
lret
inc
mov
fcmovnb
xor
or
cli
pop
push
inc
push
ficoml
jno
ret
xor
aas
mov
cmpsl
cmp
or
mov
adc
cmp
xchg
shl
into
mov
das
xchg
and
cmp
inc
push
pop
mov
out
jno
dec
mov
xor
les
insb
in
arpl
jnp
mov
xor
roll
fldenv
scas
mov
dec
aam
lods
insb
mov
ja
or
adc
mov
jmp
jecxz
xor
aaa
mov
imul
adc
pushf
pop
mov
pop
pop
xchg
inc
xor
or
cltd
push
inc
sub
mov
add
lahf
mov
push
pop
cmp
dec
test
push
mov
jmp
sub
push
test
in
mov
pop
xchg
cli
adc
and
push
sbb
xor
rcrb
leave
and
xchg
aas
int3
ret
xchg
and
add
mov
push
repnz
pop
add
add
or
ljmp
daa
stc
cmc
ret
xchg
push
or
mov
dec
test
test
jb
cltd
leave
stos
loopne
icebp
sbb
mov
xor
mov
pop
push
cmp
fidivrl
pushf
xor
sub
icebp
std
test
leave
dec
shll
lock
popa
mov
add
fsts
iret
jmp
jbe
pop
dec
mov
mov
es
subl
adcl
fisttpll
in
sub
mov
mov
mov
insb
inc
lea
or
negb
idiv
repnz
aaa
mov
sbb
loop
jmp
mov
cmp
xchg
dec
rcl
sub
ss
and
cmpsb
adc
lods
inc
or
out
mov
push
pop
repnz
cmc
or
add
pusha
fldenv
popf
icebp
cmp
in
std
dec
jmp
movsb
loop
inc
mov
or
std
cmp
js
cltd
jg
push
dec
rorb
jmp
push
sbb
jo
sti
cli
sub
subb
mov
push
pop
jno
lods
imul
icebp
out
mov
pop
push
xor
pop
pusha
mov
dec
divb
int
sub
iret
cmp
mov
mov
xlat
pop
rcr
dec
mov
ss
dec
dec
mov
out
fwait
daa
and
addr16
jnp
popf
xchg
xchg
movsl
icebp
inc
push
mov
pop
dec
jmp
movsl
mov
push
arpl
mov
or
cwtl
xor
sbb
out
arpl
sub
popf
push
int3
fisttpll
ljmp
ret
aam
mov
jge
aad
add
stos
cmp
and
das
xor
push
mov
mov
js
pusha
mov
call
adc
xchg
imul
add
rorl
popa
test
push
cmpsl
xchg
jl
loop
ficoms
cmp
in
or
adcl
leave
and
aam
clc
push
pop
mov
fisubrs
adc
xchg
mov
dec
lock
inc
inc
into
jecxz
das
dec
push
and
or
pop
aam
sbb
fldenv
xor
cmc
fsubl
out
in
push
inc
xchg
pop
jno
jmp
mov
rorb
shrb
xchg
xchg
adc
sbb
push
fwait
or
adc
add
jg
sbb
jl
pop
adc
in
adc
adc
cmpsb
aaa
rcrl
fsubrs
pop
ficoml
lods
pop
add
mov
or
dec
pop
sub
push
daa
xlat
fsub
out
lds
les
mov
mov
lcall
arpl
jmp
ss
bnd
popf
lds
mov
inc
clc
aaa
pop
out
jno
cltd
test
inc
jg
test
and
fbld
sub
mov
roll
popa
mov
rcrb
cmp
inc
arpl
test
mov
and
leave
jmp
jo
push
loopne
addb
jl
sbb
dec
in
in
shlb
xor
js
cmp
out
in
ja
xchg
nop
das
in
sbb
add
and
mov
or
xor
mov
mov
cmp
mov
or
int3
and
lods
popf
and
mov
and
cmpsb
jo
push
mov
or
rorb
inc
lret
mov
jmp
das
push
add
dec
jae
loop
ret
stos
icebp
mov
lahf
dec
icebp
xchg
lods
xor
sub
adc
mov
inc
mov
add
icebp
fidivl
in
fmul
daa
add
hlt
jmp
fists
jg
push
out
hlt
cmp
adc
cmpb
xor
aam
add
jle
sahf
sbbl
fwait
jo
test
sbb
pusha
xor
add
rcr
es
mov
rcrl
mov
fldt
xor
shrl
clc
mov
int
daa
cltd
dec
inc
outsb
cmp
out
adc
in
mov
test
ret
rcrl
jge
and
pop
push
pushf
push
push
inc
mov
loop
sub
cli
pop
adc
jg
rcrb
mov
ret
mov
jmp
push
fimull
push
pop
or
push
jl
cwtl
jge
jb
xchg
lcall
test
sub
test
incl
pusha
mov
into
repnz
lods
push
dec
xor
mov
pop
dec
jmp
iret
xor
add
nop
mov
add
sub
aam
or
ret
push
mov
add
std
inc
in
das
pushf
push
cmp
xor
mov
popf
mov
frstor
push
out
mov
stos
pop
dec
ret
aaa
out
movsb
testb
pop
es
and
popa
cmp
and
jl
cmp
pop
icebp
ds
dec
cmp
add
dec
dec
xor
dec
push
cmpsb
subb
divl
hlt
cmc
out
cmp
jmp
mov
jmp
or
jl
jmp
ret
add
hlt
sub
stos
fistps
xchg
inc
adc
push
mov
out
ds
std
nop
push
cmp
push
mov
mov
jl
and
ljmp
sbb
xor
inc
into
pusha
fnstcw
les
xorl
jno
jae
cmp
cld
xor
ret
xor
xchg
xchg
dec
xor
out
outsl
push
pop
mov
pop
xor
filds
les
scas
lahf
rcrb
add
int
jecxz
pop
jle
or
dec
adc
inc
and
imul
push
sub
xchg
xchg
imul
nop
sub
lds
and
sbb
lahf
pop
inc
pop
jo
jnp
fwait
outsl
add
xchg
and
mov
xlat
imul
decl
xchg
push
sub
daa
add
or
push
data16
test
push
gs
mov
cmc
cmpsl
dec
xor
movsl
daa
mov
inc
mov
call
lds
sbb
inc
and
inc
in
lock
push
stos
mov
xchg
cmpsb
dec
or
and
testl
addr16
insl
lret
cwtl
lods
lods
inc
lock
push
sarb
hlt
pop
push
cld
adc
jmp
ret
or
insl
sbb
mov
xrelease
mov
sub
sub
in
movsl
stos
cmp
stc
mov
jno
rorl
cmpsl
cmp
and
nop
mov
jbe
sbb
pop
loop
sbb
flds
testb
and
pop
mov
mov
xchg
arpl
dec
mov
xor
shll
cmp
loopne
out
jle
mov
inc
std
shrb
or
mov
pop
repnz
in
hlt
pop
out
or
mov
add
cwtl
aaa
push
into
test
dec
lods
mov
mov
mov
out
cmpsb
or
adc
scas
xlat
mov
mov
jmp
emms
pop
popa
stc
fidivrl
sbb
fimull
sahf
cmp
aad
inc
adc
mov
dec
jne
stos
cmp
fsubrp
lea
and
fnstenv
push
xchg
xchg
xchg
hlt
mov
mov
and
movsl
mov
out
sbb
xchg
les
inc
out
jmp
pushf
inc
jp
repnz
and
movsl
div
fidivl
mov
bound
or
es
xor
adc
mov
xchg
pop
mov
test
aad
dec
add
jbe
pop
pop
pushf
lahf
sbb
repnz
xor
imul
sbb
jecxz
pop
mov
cmp
fcomi
dec
ret
cld
xlat
mov
out
dec
cmpsb
stc
or
mov
movsl
mov
push
push
dec
pop
lods
test
aam
mov
mov
out
out
dec
xor
push
mov
xorb
clc
xchg
add
dec
sbb
xor
pop
movsb
mov
test
mov
outsl
sbb
subl
sbbb
lods
xchg
outsl
and
xchg
and
mov
sbb
decl
in
in
jbe
lds
call
or
sbb
mov
inc
fldt
jo
cmp
pop
negl
sub
xchg
cmp
ret
jns
push
cmp
imul
jp
ljmp
inc
push
outsb
movsb
sahf
add
xchg
lea
inc
and
mov
shlb
mov
aad
mov
push
inc
pop
cmp
and
jp,pt
fisttpl
add
jnp
daa
push
inc
xchg
xchg
enter
jnp
mov
push
add
aaa
outsl
sbb
outsb
popa
jno
inc
shll
daa
sti
jg
roll
int3
inc
push
jae
pusha
data16
cld
mov
loop
mov
fdivrs
mov
dec
out
or
or
dec
pop
repnz
imul
xchg
repnz
cltd
xor
fcmovb
mov
mov
cwtl
add
jl
push
pushl
xor
shrl
jno
jns
test
fwait
add
sub
dec
sbb
int
mov
dec
jge
test
daa
xchg
cli
xlat
sub
roll
loopne
mov
xchg
stc
lds
push
sbb
out
adc
ds
pop
mov
ds
add
enter
push
cmp
in
nop
push
push
dec
cmp
pop
imul
jecxz
xlat
scas
and
and
aas
dec
push
sbb
inc
test
xor
mov
iret
or
pop
movsl
or
ret
data16
into
push
xchg
js
jp
inc
pop
push
daa
iret
pop
mov
mov
dec
fwait
jmp
das
jmp
dec
xchg
adc
lds
sbb
xlat
or
sub
inc
in
inc
outsl
dec
mov
add
inc
mov
mov
mov
test
sbb
sti
xchg
std
sub
ljmp
jg
lods
jge
jae
addl
pop
mov
sub
adc
andb
push
movsb
inc
imul
add
and
cmpsb
jp
push
push
cmp
adc
or
sbb
xorl
pop
addb
mov
aaa
mov
scas
dec
dec
push
mov
jl
ret
out
shll
jno
fimull
movsl
daa
jno
push
jno
adc
sbb
mov
xor
popf
mov
xchg
inc
cmp
xor
dec
push
inc
push
aas
xor
sub
xchg
mov
xchg
sub
rorl
push
outsl
xor
js
inc
xchg
divb
pop
gs
stos
lret
xchg
lods
inc
bt
jle
nop
out
loopne
jl
push
mov
loopne
mov
fwait
push
sub
in
test
jb
ss
push
dec
std
mov
aad
pop
inc
enter
cmpsb
push
inc
push
daa
scas
scas
push
shll
push
pop
les
scas
xchg
xchg
pop
jae
cmp
fstl
push
jnp
jg
int3
add
aas
sbb
jge
fimuls
in
cli
ss
pushl
mov
jmp
shrl
pop
and
stos
jmp
popa
push
or
cmp
stc
stos
jmp
mov
lcall
pop
rol
xchg
fcompl
or
sbb
lret
push
test
xor
fidivl
mov
dec
lahf
cli
or
and
sub
test
and
fsubl
cld
xchg
negb
out
pop
test
mov
repz
sub
sbb
daa
icebp
push
lahf
out
cwtl
jo
jns
enter
and
pop
mov
imul
in
xlat
aam
xchg
data16
rorb
jg
outsb
cmp
aam
jecxz
pusha
test
xor
add
in
cmp
loopne
fsubrl
in
cmp
ds
mov
pop
xor
sub
pop
pop
dec
inc
dec
test
lds
jmp
fst
cmp
jg
bnd
cmc
and
sbb
push
dec
xor
outsb
jmp
in
mov
dec
dec
repnz
mov
mov
test
inc
fsubs
or
jb
jl
cmp
jbe
gs
push
adc
pop
sti
in
xchg
mov
adc
push
in
dec
cltd
push
mov
pop
sub
jae
pop
add
cmpsb
es
cmc
clc
out
pop
sbb
cs
cmc
dec
cmp
jne
mov
and
out
popf
movsb
mov
fcoms
jno
enter
loope
adc
sub
sbb
pop
push
mov
mov
add
in
cwtl
or
push
sti
cld
adc
add
stos
jecxz
push
push
out
pop
aam
leave
les
movsl
dec
xor
repnz
and
in
and
testb
cmc
cmpsb
into
pop
nop
outsb
gs
jns
and
jge
jo
mov
add
or
mov
or
jp
clc
mov
loope
push
clc
fwait
lret
roll
lret
dec
xchg
xchg
out
mov
xor
cmp
push
sub
test
addr16
or
dec
mov
stos
ljmp
aad
dec
or
mov
sahf
lahf
cmp
mov
and
mov
clc
or
decb
sbb
es
xchg
add
in
test
out
pop
pop
sti
or
mov
daa
rcl
mov
pop
iret
mov
loope
cmp
xchg
pop
cmpsl
rorb
mov
iret
fstps
int3
loope
and
push
pop
mov
adc
or
mov
cmp
push
push
popa
sbb
push
push
and
push
shlb
pop
mov
shll
ret
fimuls
call
cmp
jbe
flds
push
rcl
sbb
xchg
sbb
and
xor
out
xor
jbe
push
addl
fnstenv
or
out
sub
push
and
adc
xlat
adc
popa
aad
sbb
rcll
das
push
mov
or
nop
fsubs
std
sbb
sbb
aad
mov
icebp
adc
push
das
inc
xchg
mov
je
jo
add
nop
aas
js
in
cli
push
xor
aaa
hlt
push
out
cli
les
mov
ja
xchg
pop
xor
popa
inc
es
test
mov
sbb
ljmp
jle
dec
and
mov
ret
xchg
int3
push
push
inc
mov
xchg
push
sub
adc
cmp
mov
and
mov
sub
loope
cltd
sub
sbb
xor
push
push
lds
sbb
push
fsubl
push
add
ret
push
loope
xor
cltd
mull
mov
lret
jb
fnstcw
xchg
cmpl
stc
pop
adc
dec
jmp
pop
sub
hlt
push
lahf
mov
xchg
sub
inc
mov
out
xchg
fs
ljmp
inc
sbb
sub
imul
pushf
lock
rcl
mov
shrd
popf
xchg
cwtl
lock
jo
popa
mov
repz
inc
neg
pop
pop
icebp
push
push
mov
push
mull
movsl
push
mov
ds
cmp
mov
sbb
in
pop
adc
add
and
mov
sbb
push
adc
fistps
mov
jecxz
xchg
icebp
add
inc
xchg
shll
jnp
loopne
dec
mov
pop
mov
sahf
js
push
dec
lahf
mov
jle
ror
leave
aam
add
fwait
cmp
adc
cmp
cli
in
xor
xor
pop
lock
mov
cmp
sub
push
hlt
mov
jmp
xor
ljmp
sub
inc
cs
pop
pop
pop
enter
mov
pop
fistl
push
push
fs
mov
push
mov
push
mov
insl
test
aad
dec
lahf
stos
icebp
xchg
cmp
into
sub
mov
xor
jmp
and
jnp
xor
push
into
decb
aas
mov
adc
mov
mov
js
xchg
ret
jecxz
divb
jns
pop
dec
outsb
jbe
out
ffreep
dec
test
pop
fs
cmp
jo
mov
jns
jbe
outsl
in
fwait
in
cmp
scas
mov
rorb
sbb
test
test
or
pop
mov
sbb
stos
mov
jne
xchg
rolb
pop
cwtl
sar
rcll
pop
mov
mov
mov
shrl
sbb
cmp
fwait
inc
and
adc
cmp
fidivl
sub
cmp
xor
or
xchg
into
xchg
outsb
xor
push
lods
xchg
dec
xorb
repnz
dec
nop
sbb
add
and
mov
mov
or
sti
sbbl
jns
sub
jns
shl
or
pop
cmc
push
xchg
pop
outsl
movsb
mov
mov
ret
xor
ja
cmp
or
lds
mov
add
xor
dec
jno
ja
rolb
and
mov
xor
sbb
call
rcll
mov
std
push
push
mov
xchg
outsb
std
pop
sarb
or
push
popa
cld
push
adc
loop
stos
ja
sub
cmp
jg
movsb
insl
xor
movsl
insl
nop
inc
ret
xchg
dec
sub
mov
xchg
sbb
mov
push
adc
push
xchg
xor
cmp
push
dec
mov
xor
sbb
jns
fistpl
adc
push
cmc
push
lret
pop
xchg
inc
inc
xchg
lods
xor
pop
and
dec
stos
dec
inc
fisubl
mov
sub
jp
xchg
shlb
mov
jns
and
leave
arpl
outsb
pop
dec
push
jp
sti
jecxz
push
mov
jbe
int
subb
or
je
add
mov
ja
stc
iret
loop
xchg
in
dec
and
jmp
cmp
jmp
lods
dec
mov
into
mov
pop
dec
loop
mov
xor
pop
repz
ret
lods
imul
sub
adc
daa
cmc
pop
rclb
out
add
out
cmp
sub
push
bound
sbb
inc
sbb
add
dec
ja
and
mov
lret
test
mov
cmp
jno
test
hlt
enter
dec
xchg
mov
add
hlt
jno
pop
push
stos
lret
push
jp
mov
adc
adc
jg
lock
fs
in
call
incb
outsl
add
inc
push
leave
repz
test
aad
inc
mov
ret
clc
popa
add
fistpl
xlat
lea
icebp
out
iret
sarb
mov
xchg
cmp
ljmp
push
aaa
in
add
add
mov
mov
lret
push
inc
in
jbe
or
adc
popf
popl
imul
sub
jmp
dec
adc
hlt
in
pop
idivl
inc
subl
shr
xor
mov
cmp
dec
dec
dec
cmp
sahf
lods
sub
jmp
iret
jp
sub
ret
mov
sbbb
push
and
loopne
daa
mov
nop
sti
mov
arpl
nop
inc
xchg
lds
jl
icebp
and
ds
sbb
mov
sti
enter
iret
sub
and
mov
arpl
je
sub
adc
insl
or
pushf
add
cmp
inc
sbb
xlat
mov
xchg
scas
dec
imul
pop
scas
andl
jae
mov
pop
dec
jmp
pop
and
and
stos
in
add
dec
cld
push
sbbl
mov
xor
inc
mov
mov
aaa
push
fdivrl
js
out
ret
jbe
shlb
sub
mov
sbb
sbb
pcmpeqw
dec
shlb
call
push
aad
mov
mov
push
xchg
lahf
cmp
out
ja
mov
pop
add
and
shll
cld
outsb
mov
jae
push
jg
cmpsb
testl
ja
dec
ja
inc
outsl
sub
push
inc
mov
xchg
or
into
and
lcall
add
out
mov
adc
call
and
scas
xorb
adc
cmc
mov
push
mov
pop
push
enter
jns
addr16
insb
inc
jno
mov
push
jge
push
fucompp
gs
mov
ss
adcb
fsubl
mov
mov
inc
jmp
pop
loopne
jl
or
mov
and
fcomps
xor
into
pop
inc
sbb
orl
pusha
push
mov
cli
pop
sbb
push
fildll
inc
cmpb
mov
jns
aaa
xchg
or
jbe
bound
in
int
aas
popa
aas
stos
out
inc
sub
inc
shrl
cmp
adc
decl
mov
sub
sbb
cmpsl
inc
shufps
iret
sbb
nop
sbb
fisubrl
ss
mov
push
xchg
jbe
lahf
adc
cltd
lea
mov
cld
sub
or
sti
cli
ja
mov
das
sbb
es
xchg
or
push
mov
inc
stc
mov
fnstcw
dec
cs
mov
pushl
lahf
into
cli
sub
test
jecxz
dec
adc
icebp
les
sbb
aam
pop
outsb
jl
insb
mov
pop
int3
popf
aam
loope
ds
sub
jne
ret
sbb
adc
mov
mov
sub
jno
push
sub
and
xor
push
mov
adc
ret
fxch
pushl
cmp
pushf
popa
inc
scas
rcr
bound
xor
jb
xor
add
mov
and
jp
add
sahf
int3
push
xor
ret
or
addr16
ja
sbb
push
mov
push
jecxz
inc
cli
dec
jbe
push
add
pop
sub
xor
popf
test
fsubp
mov
dec
jge
cmp
adc
sbb
push
push
xorl
jmp
and
cmp
les
xchg
shll
mov
lds
push
sub
and
mov
mov
mov
mov
lock
or
std
popf
xor
dec
sbb
pop
aaa
mov
lea
jg
outsb
mov
rcrb
inc
hlt
push
sahf
mov
pusha
fwait
dec
outsl
add
lea
inc
std
outsb
or
mov
lds
insb
cmpsb
mov
push
or
push
iret
repz
add
sbb
or
sub
mov
sarb
sub
push
popl
ljmp
jae
dec
dec
aam
add
mov
testb
xor
lret
dec
adc
inc
add
les
jmp
push
test
outsl
fcoms
mov
stc
jmp
sbb
xchg
icebp
fistpl
hlt
lea
fst
aad
inc
xor
int
mov
cmp
cld
leave
and
cmpsb
pusha
es
icebp
mov
pop
cmp
mov
xchg
mov
insb
scas
lcall
loop
mov
dec
packsswb
mov
orb
push
mull
cmpl
cld
lock
fildl
out
and
ljmp
scas
scas
mov
stos
sub
imul
xor
cmp
outsb
aaa
push
fcmovnb
jle
out
xor
fwait
aam
out
in
ds
xchg
push
push
inc
sub
sub
inc
mov
cmp
fs
loop
inc
xchg
mov
xor
and
scas
inc
push
inc
sub
dec
sub
mov
arpl
mov
nop
cltd
and
or
and
ds
into
test
mov
jecxz
es
xor
leave
out
and
loop
or
out
jno,pt
js
xor
lcall
push
xor
sub
pop
xchg
btr
xor
and
in
sar
stos
pop
push
sbb
shll
test
imul
cmp
sbb
inc
rol
ds
push
test
add
add
dec
lea
pushf
mov
mov
iret
js
xlat
inc
cld
ret
and
test
hlt
and
pop
xchg
or
iret
mov
add
xchg
mov
mov
subl
mov
pop
mov
dec
jns
aam
inc
xchg
mov
xchg
push
dec
enter
shlb
pop
popa
dec
mov
jmp
sub
lea
or
mov
sbb
rorb
aaa
jecxz
pminub
cltd
and
xchg
stos
aam
sub
gs
call
add
xchg
int3
push
adc
pop
jp
movsl
adc
sub
call
fiaddl
mov
imul
hlt
pop
cmpsl
jno
in
or
bnd
add
dec
bound
into
insb
cmp
jle
xor
push
std
ds
or
jl
rcrl
loopne
daa
mov
jecxz
imulb
frstor
test
xchg
mov
popa
fnstcw
sbb
int
repz
sub
addr16
aas
push
jge
mov
ja
adc
dec
je
dec
xor
daa
icebp
gs
mov
adc
in
adc
xor
addr16
push
sub
lods
icebp
inc
cmp
add
pop
int
push
jmp
loop
mov
push
nop
dec
js
jne
into
jne
sarl
jne
into
mov
xchg
add
mov
je
shrl
cmp
xor
push
stc
fwait
test
in
std
enter
out
test
dec
sub
jnp
jp
sub
cmc
pop
test
pop
scas
xchg
gs
je
pop
les
cwtl
bound
test
mov
mov
fmull
dec
jp
add
add
sahf
inc
mov
or
clc
xchg
sbb
pop
and
inc
int
pop
mov
shl
mov
push
mov
test
push
arpl
mov
repnz
imul
test
mulb
dec
loop
inc
xor
mov
cmpsb
pop
dec
jns
test
or
add
ds
rcrl
gs
or
cli
xor
dec
or
pop
dec
sub
adc
jp
push
jo
pushf
xor
mov
das
stc
cmp
mov
hlt
ret
rolb
repnz
data16
imul
les
dec
sarl
jge
jecxz
fsubr
xchg
push
pop
mov
icebp
push
xor
das
divb
push
sbb
inc
mov
and
push
bound
iret
mov
push
mov
ret
rorb
inc
insb
cs
xor
es
cwtl
call
ljmp
xchg
clc
xor
xlat
lret
dec
sbb
xchg
lret
fnstsw
xchg
dec
mov
je
inc
mov
fistpll
fisubrl
fiadds
repnz
and
jge
repz
jnp
mov
ss
sbb
adc
std
aam
dec
push
cs
xchg
mov
inc
jnp
mov
dec
xchg
jg
jle
jns
mov
mov
ljmp
inc
loope
mov
fistpl
push
mov
arpl
sub
daa
out
lock
in
pushf
sbb
mov
inc
cld
push
mov
mov
cmp
pop
mov
lods
inc
ljmp
shrl
andl
dec
jne
fbstp
cmp
cmp
xchg
mov
cltd
cmp
dec
pop
sbb
mov
std
movsl
mov
les
adc
push
insb
test
outsl
iret
lea
pop
cmp
ss
jo
mov
aas
ficoms
movsb
inc
faddl
into
pop
sbb
sub
mov
sub
mov
fucomp
xor
mov
xchg
fimuls
add
or
xor
xchg
ljmp
leave
push
sub
sub
cmp
mov
push
pop
cmp
addr16
out
adcb
pop
or
inc
inc
and
sub
lods
sub
xlat
pop
pop
flds
shrb
push
fs
jo
sbb
sbb
pop
mov
sti
push
sub
out
popf
cli
hlt
cmp
sbb
mov
mov
adc
outsl
lcall
pop
cli
mov
ret
adc
ds
ss
adc
in
fs
add
sbb
dec
fldt
or
push
adc
insb
mov
stc
dec
stos
ret
sub
vcomiss
pop
adc
aaa
mov
call
inc
daa
dec
lods
loopne
jmp
adc
and
mov
pop
dec
xchg
inc
push
pop
out
data16
mov
lahf
xchg
mulb
pop
mov
and
xor
push
pop
lcall
push
add
xor
in
lahf
sub
push
pop
cmp
add
push
fstpl
sub
mov
movsb
jl
push
out
xlat
sub
je
sbb
dec
out
jbe
std
sub
loopne
sbb
pop
lods
stc
popf
cmp
mov
fdivrl
add
add
or
mov
icebp
cmp
divl
mov
mov
xor
jns
mov
fcoms
lret
movsb
xor
push
lods
sbbb
fmulp
push
mov
or
call
je
jb
xor
fstps
ja
repz
push
inc
dec
cmp
cs
add
lock
pop
lds
insl
pop
outsl
or
xchg
std
hlt
cmp
mov
dec
sbb
and
sbb
cmp
mov
add
pop
jp
aas
iret
cmc
pop
xchg
inc
daa
pushf
add
and
add
mov
pop
aad
or
push
lret
icebp
push
xchg
and
js
pop
push
dec
mov
cmp
mov
mov
std
xchg
pop
jo
dec
loope
cli
cmp
xchg
sti
bswap
jle
sub
lahf
movsb
in
push
adc
xor
jecxz
jecxz
gs
icebp
jmp
fldenv
out
aad
dec
cwtl
jecxz
je
imul
and
loop
cmpl
mov
lds
lock
add
incl
lock
mov
popa
push
xchg
mov
xchg
sbb
or
incb
test
and
sub
pushf
lahf
mov
adc
inc
mov
sub
leave
pop
addr16
lahf
inc
add
and
mov
cltd
xchg
arpl
adc
out
into
sub
jns
mov
inc
icebp
in
push
xchg
scas
pop
mov
cltd
lods
lahf
imulb
sub
in
push
push
jg
mov
inc
fisttps
into
shl
jp
pop
push
jge
inc
inc
adc
pop
ds
ret
leave
mov
mov
mov
xchg
pop
mov
and
mov
push
and
mov
jle
pop
rcll
or
mov
dec
and
mov
popf
pop
out
fimull
dec
jo
idiv
std
pop
cmpsl
adc
push
xor
sbb
fidivrs
cmp
xor
jns
ret
imul
out
sub
aas
lcall
pop
sub
fiaddl
faddp
lahf
and
cmp
xor
push
lods
cmp
andl
mov
nop
cmpsb
xchg
std
pop
mov
das
mov
add
jno
dec
mov
scas
mov
cmp
mov
fcmovb
icebp
jne
lods
pop
sar
insl
or
nop
ret
testb
fcomp
push
lret
jnp
adc
scas
jg
adc
std
repnz
imull
push
pop
je
stc
dec
mov
mov
xchg
fs
jb
int
pop
fwait
add
cmp
cmpsl
push
lods
sbb
out
and
enter
stos
inc
lods
das
ja
cmc
aam
xlat
pushf
adc
lea
mov
push
icebp
add
notl
cld
cmc
scas
repz
jo
fwait
mov
popf
or
adc
iret
xor
jnp
sbb
push
add
mov
pop
mull
add
dec
inc
lock
xchg
inc
arpl
mov
pusha
jmp
addr16
lcall
mov
sti
and
cmp
inc
mov
repnz
adc
in
dec
inc
lret
rorb
cmp
je
lds
dec
and
dec
ret
sub
inc
dec
inc
rorl
add
sub
add
mov
pusha
in
in
dec
xchg
jb
mov
bound
mov
repz
fadd
int
addr16
scas
loope
jb
sbb
xor
out
mov
mov
cmpsl
ds
out
in
pop
outsb
pop
mov
call
aad
movsl
lds
aas
mov
shlb
stos
scas
inc
pop
adc
outsl
jb
xor
repnz
mov
stos
imul
lods
xor
sub
mov
push
sub
roll
fimull
mov
insb
jecxz
sbb
outsl
sbbl
jmp
imull
icebp
jp
sbb
cmpsl
int
popa
fwait
mov
push
fldenv
call
inc
xor
outsl
mov
dec
scas
cmpb
popa
mov
jbe
addb
popa
test
pop
or
or
aam
dec
mov
ficomps
inc
adc
push
aas
cmp
test
add
mov
test
sahf
and
fsubl
repnz
sub
sahf
jae
xchg
and
jg
lret
int3
sbb
inc
add
inc
pop
enter
mov
xor
cwtl
fcmovnb
mov
fiadds
pop
push
aam
enter
sahf
loope
dec
and
iret
pop
push
cmpl
xorb
out
cmp
cmp
jne
mov
lock
pop
insl
daa
shl
std
pushf
push
pop
popf
or
mov
sub
iret
and
insl
cmc
pop
loopne
shrl
dec
psubw
push
outsb
loopne
test
adc
call
loopne
push
mov
in
fwait
fwait
pop
js
clc
hlt
hlt
pop
loope
sbb
les
rcll
repz
jno
sbb
adc
adc
call
cld
dec
pop
mov
mov
fisttpll
mov
add
mov
add
scas
inc
push
jge
inc
jo
pop
leave
call
xor
inc
lea
mov
mov
jns
pushf
inc
push
out
outsl
pop
jg
jns
test
sbb
repnz
movsl
sbb
xor
ss
sbb
lock
push
add
stos
out
sub
and
xchg
pop
dec
pop
notb
in
out
add
and
mov
ret
cltd
fiadds
aas
mov
pop
push
repnz
dec
cmp
movsb
inc
aam
mov
aad
lock
and
stc
push
loopne
icebp
orb
add
mov
cmp
mov
inc
mov
into
cmp
movsl
stos
xor
lcall
inc
pop
loop
test
dec
lret
mov
js
ficompl
xchg
jl
sub
clc
cli
call
xchg
dec
dec
stos
sub
test
cmc
jb
sahf
adc
sub
mov
fst
cmp
mov
mov
adc
ds
xchg
xchg
lea
lret
mov
loopne
mov
clc
mov
insb
loop
dec
and
push
lret
daa
dec
pusha
fistl
test
xor
mov
loope
push
push
fisubl
mov
cmp
vpacksswb
das
arpl
dec
cmp
inc
xor
inc
fs
inc
inc
sti
iret
mov
mov
or
rcrb
inc
push
mov
and
shll
push
dec
pop
cmp
jnp
das
rorb
es
inc
roll
scas
push
rcll
outsb
mov
push
je
arpl
jbe
sub
mov
or
scas
jb
std
rorb
mov
add
imul
pusha
mov
sarl
cmp
and
adc
or
cmp
xlat
pusha
cltd
mov
adc
call
mov
xor
ja
in
jecxz
movsb
pusha
xor
hlt
xchg
xchg
fidivrl
fcompl
push
cmp
xor
adcb
and
add
jo
insl
pop
ret
adc
pminub
std
inc
add
lret
jp
stos
cmp
enter
fdivs
cltd
or
nop
inc
add
push
test
mov
sub
cmpsl
pop
pop
pop
adc
inc
stc
arpl
jl
mov
xor
mov
ret
popa
dec
cs
clc
outsb
bound
into
inc
dec
sub
push
dec
add
mov
cmp
divl
xchg
adc
mov
sub
cmpsb
or
in
xchg
add
call
lock
std
ljmp
pop
scas
dec
xor
jmp
xchg
fwait
sub
sbb
sbb
fmuls
dec
insl
cmp
inc
pop
jle
xor
insb
push
shrb
stos
mov
or
out
xor
fdivs
push
pop
add
or
imul
or
mov
mov
mov
ss
jno
das
sub
dec
push
das
xchg
movsb
psubq
push
dec
imul
iret
sti
das
xchg
mov
roll
jb
pushl
jg
stc
fwait
add
addb
sbb
pop
cwtl
xchg
ret
dec
mov
orb
pushf
xor
xor
das
stc
test
mov
inc
inc
cld
or
sub
fimuls
inc
sahf
shll
add
movsb
scas
dec
mov
cmpsb
dec
addr16
xchg
lods
stc
mov
leave
out
shll
fld
or
mov
movsb
cmp
mov
mov
lret
aas
mov
loope
xorb
mov
dec
sbb
cmp
leave
mov
jle
fldl
xor
pop
les
lcall
sbb
clc
insl
pushf
insl
divb
stos
jnp
inc
pop
lds
rolb
lods
out
lcall
adc
das
mov
sbb
push
mov
lds
xor
test
icebp
je
and
ja
rclb
outsb
cli
lock
adc
mov
stos
ret
rcrl
cmp
mov
sub
sub
movsb
jl
test
dec
push
fsubrp
push
movsl
in
incl
lods
pop
test
or
addl
psubusw
cltd
sbb
insb
or
test
call
jns
mov
xor
das
adc
mov
cs
mov
sbb
xor
sub
sti
pop
xchg
cs
mov
mov
into
mov
pop
mov
mov
adc
adc
ja
jg
nop
adc
call
scas
fwait
les
inc
and
stc
int3
insb
sub
xchg
mov
shl
shlb
add
js
push
stos
lods
jne
cwtl
insl
lods
xchg
shl
stos
popa
push
fistpl
push
push
jecxz
ret
pop
sbb
xchg
mov
jbe
jnp
out
int
adc
test
jge
fwait
push
or
adc
xor
sub
or
inc
inc
gs
mov
jle
xor
fwait
adc
xchg
or
leave
mov
ss
mov
out
imul
in
dec
lds
lods
mov
sbb
cmp
inc
push
in
mov
out
fiadds
jb
and
adc
mov
out
cmp
pop
cmc
add
jp
aad
sbb
inc
mov
imulb
shlb
sub
push
sti
cmp
mov
jl
and
fcoms
mov
lods
pop
sub
rorl
xchg
outsb
sbb
fucomp
pop
pop
mov
cmc
jae
mov
ficomps
push
cwtl
mov
cmc
xchg
lret
or
push
jns
inc
leave
movb
mov
inc
lds
rcrb
jno
cs
nop
bound
inc
jle
ja
ljmp
sbb
ds
xchg
popf
sub
rcrl
mov
and
pop
loopne
mov
xchg
out
cmpb
das
jg
add
fcoms
in
jo
add
pop
scas
loope
stos
adc
fcmovbe
clc
fwait
cs
outsb
lret
xchg
mov
jns
jbe
in
xchg
test
xor
mov
ljmp
mov
mov
pop
pop
sarb
adc
ss
cs
push
xchg
pop
push
xor
jbe
sahf
lock
adc
sbb
sti
enter
stc
jno
gs
xchg
aas
enter
std
sahf
out
sahf
ds
clc
push
cltd
out
push
mov
ljmp
jl
out
jp
idivl
cmpsl
push
cmpsl
mov
js
push
stos
or
popl
add
mov
scas
mov
aas
dec
dec
ss
pop
bound
ljmp
rcrb
mov
mov
jle
int
adc
fwait
and
out
aaa
push
push
lock
fdivrp
cltd
mul
push
cltd
xchg
arpl
stos
or
dec
push
jp
aam
pushf
ret
mov
push
cmp
rorb
cwtl
sbbl
mov
int
adc
icebp
push
mov
jge
popa
lock
imul
or
pop
push
mov
addr16
sub
jmp
loope
jb
adc
mov
dec
stos
pop
jg
jp
lock
push
pop
movsb
inc
xchg
loopne
dec
out
adc
fistps
cmc
xor
rclb
xor
sub
inc
add
jae
xor
cmp
mov
int
out
mov
mov
sub
rol
sbb
jle
mov
mov
xor
add
data16
notl
fidivl
dec
dec
push
js
jb
jg
cmp
scas
fistl
icebp
mov
jl
jae
dec
cltd
cmp
lcall
cmpsb
mov
cmpsl
push
rcll
fdivrl
int
jl
inc
cli
cld
pusha
inc
adc
push
leave
jp
arpl
in
mov
imul
push
imul
test
insl
mov
mov
mov
pop
outsb
push
and
gs
sbb
add
int
lcall
xor
cmp
orb
repnz
inc
mov
push
enter
fcomps
cmp
jo
je
sub
push
push
dec
xor
in
push
mov
mov
push
scas
lds
jg
shll
pop
mov
xchg
int
pusha
int3
mov
jp
loope
dec
mov
arpl
clc
sub
fmull
stos
popf
aam
and
out
pop
scas
shll
mov
xchg
shl
cmpsb
movsl
insb
push
pop
clc
push
sub
push
mov
pop
loop
dec
iret
inc
adc
in
jl
pop
orl
pop
add
loop
mov
xchg
jecxz
ret
cmp
test
or
jns
lcall
rcl
jb
inc
lret
jg
fmull
push
jne
xchg
adc
jl
and
mov
cli
loopne
repz
mov
ret
push
dec
cmp
sbb
xchg
mov
popf
lock
aas
mov
xorb
push
ret
push
lods
cli
in
repnz
sub
xor
mov
jle
dec
lahf
push
enter
and
pop
movsb
adc
scas
rdtsc
mov
setne
or
jns
stc
pushf
ds
arpl
dec
mov
fcom
push
loope
sarl
xchg
in
fildll
lret
xchg
cmp
cvtdq2ps
arpl
adc
cmp
sub
jns
shlb
xchg
inc
push
dec
xor
jecxz
lods
pop
repz
sub
sub
xchg
out
xchg
or
adc
mov
add
or
lds
pop
adc
lods
sub
add
cld
and
aaa
bound
hlt
push
pushf
nop
sub
push
cld
sbb
jno
mov
call
movsl
fbld
call
outsl
add
sti
and
dec
jge
cmp
inc
xchg
push
xor
sbb
sahf
imul
push
xlat
jns
popf
mov
cmc
ljmp
mov
xor
sub
mov
push
idivl
fstpl
adc
call
fsubs
jge
out
add
adc
enter
ss
xor
jp
or
dec
jg
hlt
std
xor
notb
xchg
inc
and
test
and
js
pop
cmpsl
mov
addb
loope
sub
jmp
lret
pxor
add
test
iret
ja
jae
repz
pop
aad
and
in
xchg
and
shll
and
in
pop
stos
and
adc
xor
or
pop
mov
sbb
pop
jmp
cld
push
push
jl
lret
inc
mov
lods
movl
jae
cmp
nop
sbb
stos
stos
sub
add
and
mov
and
jne
jmp
jmp
divl
push
int3
cld
insb
and
sub
xchg
sub
sbb
jmp
sub
fisttps
mov
call
inc
sahf
or
pushf
fs
mov
arpl
mov
push
xchg
lods
mov
mov
js
mov
loopne
dec
xchg
cmp
popf
fwait
lahf
sahf
push
adc
add
hlt
and
popf
orl
or
imul
icebp
mov
fiaddl
jb
rorb
jecxz
fadds
jne
mov
push
jl
test
es
sub
cmp
pushf
popf
icebp
subl
cli
lret
sbbb
mov
popl
and
add
cmp
adc
fs
and
stos
and
xor
leave
sahf
or
imul
gs
push
int
add
ret
js
shrl
js
push
jae
inc
popa
inc
dec
jno
outsb
inc
mov
lods
je
dec
cmp
std
in
popa
xchg
inc
xchg
mov
subl
and
fxch
addb
out
xchg
lret
jns
sbb
xchg
lds
xchg
outsb
outsb
lea
sbb
ret
jbe
outsl
lea
xchg
xchg
and
outsl
sbb
addr16
cmp
jge
scas
andb
push
int3
dec
dec
dec
fiadds
add
hlt
mov
mov
sbb
push
faddl
scas
and
scas
sahf
inc
pop
mov
divl
push
mov
orb
mov
dec
dec
fsubrl
out
and
popa
js
mov
insl
loope
leave
adc
nop
xchg
sbb
hlt
sub
pop
inc
and
or
or
faddp
push
in
setle
gs
shll
push
std
in
insl
inc
scas
add
ljmp
xlat
mov
andl
xlat
xchg
cmp
test
jno
jno
gs
mov
jge
and
mov
cld
xor
and
fimuls
or
pop
push
jl
iret
cmp
cltd
int3
hlt
push
push
stc
add
mov
dec
rcr
movsl
jmp
mov
lcall
int3
pop
popa
push
call
pop
xor
pop
fwait
clc
addb
test
inc
and
sbb
and
cwtl
iret
stc
push
cmc
out
lahf
movsb
js
adcl
stc
cmp
incl
push
adc
je
cmc
pop
outsb
mov
fdivrs
xor
mov
push
xor
mov
cltd
repz
mov
outsb
and
xchg
jle
ret
xlat
in
sub
enter
in
idivl
dec
and
aaa
pop
dec
in
subb
repz
pop
mov
adc
or
xchg
orl
js
jle
insl
imul
sbb
push
daa
in
pop
cli
stos
imul
fadds
lcall
out
and
push
test
sahf
cmp
clc
push
mov
mov
sub
jns
lret
popf
icebp
das
les
xadd
mov
mov
jbe
fstps
test
sbb
mov
xor
shr
mov
jbe
mov
xchg
arpl
mov
push
mov
cmp
xlat
cld
daa
inc
cmp
and
jp
test
adc
jbe
stc
dec
mov
add
mov
lret
add
mov
push
test
push
mov
out
stos
mov
mov
or
ret
cmpsl
adc
jg
aad
sbb
test
push
sti
leave
popf
pop
add
ljmp
and
outsl
fidivrl
cmp
dec
gs
mov
sbb
lods
jge
lahf
jp
cmp
cmp
sbb
and
mov
xchg
stc
enter
pop
js,pt
mov
out
push
loope
test
xlat
add
test
mov
repnz
rcll
cld
mov
adc
arpl
in
shrl
aad
pop
xlat
int3
adc
in
insl
in
hlt
and
ffreep
sub
dec
outsl
or
aaa
incb
adc
movsb
mov
xor
test
jmp
aaa
aad
xor
jns
add
rcrl
xlat
sub
test
mov
add
pop
cmp
xchg
ja
inc
popa
rorl
jge
dec
fdivrl
mov
rorb
popa
mov
mov
mov
push
mov
mov
mov
inc
aaa
aad
pushf
adc
jl
js
sarb
mov
and
and
and
in
jge
cmp
or
push
adc
pushf
fnsave
fwait
mov
dec
inc
xor
scas
repnz
fwait
adc
outsb
jo
push
mov
stc
pop
push
out
mov
adc
xchg
pop
inc
imul
ljmp
and
jle
adc
xor
cmp
sub
and
out
dec
fwait
pop
subl
adc
jg
ror
fdivs
sub
cmc
mov
hlt
ret
out
dec
sbb
divl
cmp
ds
icebp
stc
jbe
fs
push
fisttpll
and
cmpsb
push
ljmp
in
push
iret
sbb
fs
xor
jg
cld
cmpsl
xchg
loop
les
xchg
call
insl
mov
addr16
jmp
je
scas
push
mov
lock
jbe
mov
cmpsb
stc
mov
mov
into
adc
xchg
dec
out
stos
xor
or
scas
test
sbb
movsl
sbb
mov
pop
adc
out
xchg
repnz
sbbl
loopne
pslld
rcl
out
push
cli
movsb
xchg
sbb
jp
int
pusha
fdivr
sbb
mov
test
pop
popf
ds
pop
popf
ud1
xor
dec
and
movsl
in
dec
mov
sbb
jne
dec
call
push
jno
sub
stos
mov
out
mov
fdivs
xlat
mov
cs
mov
jecxz
rorb
sbb
fmul
xchg
xchg
push
or
sub
sbb
cli
sbb
mov
mov
stos
xchg
adc
mov
ja
sbb
imul
jns
add
fists
mov
lods
and
gs
daa
lods
lret
or
jo
mov
dec
cmpsb
push
sar
leave
rorb
lret
and
add
arpl
or
mov
stos
xchg
dec
ja
jne
jle
cld
shrb
push
pop
repnz
and
lahf
xchg
push
cmpsb
mov
add
push
lret
stc
fs
fsub
jle
rclb
xorl
mov
insl
insl
push
cmp
out
inc
dec
push
or
sbb
add
shll
fstp
cmp
sbb
or
insb
or
popa
xchg
jp
mov
pop
xor
roll
push
repz
xchg
clc
cs
insb
xchg
add
jnp
mov
mov
js
sbb
push
fwait
or
xchg
sub
sarb
scas
ret
or
xchg
push
or
mov
js
cs
ret
cmp
mov
lods
repz
repz
add
cmp
cmp
ljmp
lods
inc
ljmp
into
int
stos
xchg
iret
out
jae
data16
push
testb
jae
push
cli
xchg
mov
cmc
and
xchg
push
out
ja
mov
push
adc
dec
cmp
popa
cmp
mov
mov
xchg
dec
ret
call
imul
fs
cmp
push
dec
pop
faddl
pop
movsb
xor
xchg
push
rcrl
mov
hlt
data16
xchg
add
movsl
ljmp
popf
sbb
dec
mov
leave
pop
push
lock
std
cwtl
hlt
xchg
jecxz
jno
sahf
in
out
adc
cmc
stos
paddsb
push
sahf
pusha
xchg
imul
out
test
mov
shrb
mov
gs
xchg
stc
mov
outsl
je
push
cwtl
inc
jo
inc
jg
mov
push
xor
ret
loop
stc
in
shrl
mov
jle
inc
jmp
mov
icebp
addb
inc
jns
cmp
in
mov
mov
pop
testb
push
push
push
test
sbb
sbb
sahf
dec
push
mov
sahf
push
movsb
jne
push
push
push
cmpsb
test
cmp
int
out
sbb
add
pop
mov
or
cli
insb
ret
iret
jbe
mov
and
je
test
sbb
pop
jb
shrl
roll
loop
xchg
lods
loopne
push
xor
bnd
jnp
dec
daa
xor
call
mov
hlt
movsb
out
into
addb
jne
out
or
test
cwtl
add
cmc
cmc
je
mov
dec
ds
aas
dec
mov
fadd
stc
orb
or
ja
mov
pop
push
jnp
cmp
inc
lock
pop
sub
lcall
in
jbe
pop
pop
mov
mov
insb
inc
inc
adc
cmp
mov
pop
xor
std
mov
call
jns
aam
xor
out
hlt
flds
or
outsl
ret
fwait
ja
movswl
bound
sti
sub
test
cmpsb
lock
nop
data16
add
jl
and
test
xor
or
dec
push
mov
call
mov
mov
or
sti
imul
lcall
lret
fadds
jmp
push
mov
lahf
add
xchg
ss
sti
sbb
outsl
ljmp
cmpsb
sub
inc
fiaddl
std
out
or
xor
push
xchg
mov
pop
xchg
pusha
and
xchg
mov
pop
sbb
loop
rorb
inc
sub
ljmp
int3
xor
ss
push
push
scas
sbb
rcr
mov
imul
sub
push
jb
popf
je
out
lcall
push
jge
jb
not
or
sbb
andb
mov
ficomps
push
mov
stos
or
popl
mov
mov
add
pop
lds
dec
mov
mov
or
dec
out
dec
repz
ja
aas
insb
ffree
push
push
scas
insl
and
std
pop
jge
xchg
xor
jle
lret
negl
cmp
sbb
xor
cmp
popa
jmp
loopne
testl
aas
aad
dec
andb
sahf
sbb
mov
xor
xchg
mov
outsl
mov
push
movsl
mov
das
mov
in
stos
sbb
clc
add
out
mov
jno
lea
fsubp
fisttps
repnz
or
cmp
add
cmp
pop
testl
and
movsb
push
jbe
mov
addb
xor
adc
rorb
test
insb
in
cmp
sbb
outsb
sub
xor
jnp
aam
cmp
rolb
ret
shlb
adc
shrb
lock
lahf
test
add
cmp
loop
mov
rol
dec
lods
scas
js
data16
add
inc
cmc
ror
cmpl
mov
clc
repz
out
cs
jmp
push
loope
cltd
mov
lds
mov
jnp
aad
fidivrl
stos
outsl
nop
ds
scas
pop
push
inc
scas
adc
negl
out
sub
mov
sub
addr16
push
inc
push
sub
insb
add
jo
mov
mov
mov
jns
cwtl
icebp
fstl
push
js
pop
ljmp
adc
out
cli
outsb
aaa
frstor
enter
push
push
push
xchg
adc
loopne
push
mov
je
sub
dec
or
cmpl
fdivrs
imul
xor
outsb
mov
inc
enter
pop
mov
loopne
sbb
mov
stc
mov
ficomps
or
xchg
movsl
mov
lock
fnsave
scas
aaa
add
jae
jge
test
or
das
inc
sub
dec
ret
int3
mov
aad
pushf
loop
jmp
xlat
fwait
into
int3
dec
int3
xlat
sbb
ss
cmp
push
pop
jns
or
mov
decl
dec
xchg
mov
jns
cmpb
jecxz
pop
xchg
sbb
push
sbbl
xor
add
and
mull
inc
mov
push
jno
cltd
or
rcrl
xchg
pop
mov
inc
inc
andb
sti
adc
adc
xchg
sbb
cmp
lea
dec
sub
into
out
fwait
push
cmp
cmpsl
inc
push
fdivl
dec
lret
xlat
and
pushf
lahf
jb
clc
lods
xchg
dec
mov
adc
cmp
lds
imul
xchg
cld
pop
fldcw
cwtl
fwait
test
enter
es
sbb
mov
aaa
in
cmp
rclb
sbb
push
push
adc
mov
adc
inc
cltd
mov
lret
mov
xor
mov
ret
sub
sub
and
add
fbstp
jno
jmp
mov
scas
mov
les
loope
aad
clc
adc
dec
clc
std
ljmp
push
cltd
cmp
dec
jne
loopne
hlt
sbb
fidivs
lea
jae
mov
icebp
pop
push
sti
lds
mulb
lock
fldl
popf
leave
sar
add
inc
adc
fwait
repz
cmpsl
es
fisttps
lea
push
fidivrl
mov
lret
shrl
xor
xlat
sbb
push
in
cmp
movsb
xchg
out
cmpsl
ja
addr16
jb
cld
fs
jne
imul
in
xchg
loopne
mov
nop
cltd
pushf
add
dec
or
and
add
in
cli
mov
push
mov
out
xchg
fstpt
stos
stos
fwait
or
push
xchg
cmc
inc
sbb
insb
popf
jo
clc
pop
mov
sub
ds
adc
cld
je
imul
in
and
cmc
sub
mov
xchg
fbstp
jns
lock
punpcklwd
mov
lds
fadd
sbb
loope
ds
sbb
jmp
hlt
pop
sub
bound
mov
jae
adc
add
je
das
push
outsl
dec
inc
xchg
outsb
jo
cld
dec
test
push
jno
inc
add
xor
mov
or
sbb
adc
imul
imul
out
xchg
in
pop
push
mov
andps
sti
rcr
xor
mov
push
lcall
pop
in
jo
sub
sub
xorl
mov
das
add
pop
stos
andb
pop
cld
push
mov
jnp,pn
mov
jns
jo
add
popa
fsubr
fneni(8087
or
lret
loop
dec
and
fadds
add
add
aad
out
in
mov
push
ret
and
cmp
cmp
push
repz
pop
cmpsb
xor
adc
in
and
dec
push
jo
mov
shr
xor
insl
int3
cmpsl
xor
mov
insl
cli
aaa
push
ret
and
cld
mov
jle
mov
pop
pop
addb
adc
adc
lret
mov
jecxz
inc
dec
pop
into
sub
xor
insb
test
sub
not
lcall
iret
xchg
dec
jo
xor
lods
sbb
gs
es
arpl
cmc
fistpl
das
in
popa
dec
or
dec
push
jg
push
sarb
mov
or
push
mov
jbe
adc
mov
call
cmpsl
push
mov
jecxz
push
inc
inc
cli
ret
cmp
rcll
dec
rolb
mov
imul
xor
pushl
test
lcall
mov
jg
adc
test
pop
add
sahf
out
movb
jle
xor
xor
imul
adc
mov
mov
repz
imul
shll
subb
in
orb
fstpt
mov
sbb
out
pop
out
and
add
fisttpll
xchg
cmp
cmpsl
mov
loopne
xchg
enter
sbb
rcrl
dec
aam
shlb
push
movsb
loope
jle
xchg
xchg
inc
inc
int3
mov
dec
out
inc
leave
push
mov
xchg
or
orl
sub
aad
mov
inc
or
adcb
mov
adc
nop
jl
out
adc
jns
mov
fcompl
fs
mov
fsts
jns
cwtl
aam
or
xor
push
iret
jnp
scas
aaa
or
sub
ret
loope
sbb
xchg
loopne
fs
and
lods
mov
daa
aad
pushf
add
dec
cmpsb
outsb
dec
sbb
test
sbb
testl
subl
jne
cmp
enter
cld
push
mov
jg
xor
aam
shlb
cmp
cmp
mov
and
lods
movsb
inc
cltd
jp
das
dec
pop
stc
mov
ljmp
aam
pushf
mov
fiadds
aaa
cmp
lret
cli
jge
pop
and
mov
inc
jge
sub
pop
push
outsb
stos
add
sub
sub
cltd
adc
xchg
add
jnp
nop
shlb
aaa
cmp
add
rcll
fidivrl
in
mov
lahf
adc
jbe
sbb
movsl
cmp
fisttps
insl
sub
mov
xor
cmpsl
jb
cmc
inc
push
das
scas
jp
pop
dec
out
or
cmpsb
out
scas
dec
sub
test
sbbl
rorl
pop
fcomps
loop
repz
mov
daa
addl
neg
cld
push
scas
pop
pop
inc
ss
lret
in
push
jnp
scas
test
or
push
incb
dec
cmp
cmc
stos
js
pop
out
aam
lock
test
dec
adc
lods
mov
dec
mov
imul
lret
add
pop
int
fdivs
dec
mov
out
rcrl
mov
nop
lea
jnp
icebp
dec
movsb
shlb
xor
das
pop
mov
popf
inc
sub
popf
mov
xchg
sbb
outsl
pushf
cmp
pop
ret
imul
or
data16
jbe
pop
js
sbb
mov
subb
sbb
and
mov
xchg
or
mov
arpl
ja
movsl
jecxz
dec
ds
lock
mov
xchg
nop
or
lret
and
push
jl
jne
inc
sub
es
out
and
sub
xchg
push
mov
pop
mov
or
mov
aas
cwtl
int
pushf
aam
push
cmp
pop
mov
aas
pop
pop
cmc
and
or
jl
lret
xchg
pop
and
idivw
push
movsb
xchg
sahf
adc
out
ret
stos
sub
jbe
ja
pop
sub
inc
lods
cmpsl
jl
jmp
inc
sub
inc
inc
pop
cmp
cld
std
push
cwtl
in
lret
xchg
push
adc
xchg
pop
xchg
push
popa
mov
loopne
pushf
imul
hlt
mov
and
xchg
call
in
push
xchg
mov
inc
dec
mov
daa
or
repz
aaa
pop
stc
jmp
xchg
pop
out
add
mov
push
lock
or
cmp
lret
cmp
aas
push
call
pop
mov
or
dec
xchg
cmp
and
aas
push
inc
jmp
cmp
xchg
sub
cmp
or
jnp
sub
sbb
popf
and
bound
pop
or
dec
inc
push
add
pop
xchg
inc
lds
mov
into
adc
movsl
rolb
cltd
cmpsl
inc
dec
rol
pop
or
push
jle
inc
lock
push
sub
scas
push
ja
lds
das
data16
pop
cli
jae
add
push
mov
movsb
lock
inc
loope
pop
pop
mov
or
add
rorl
je
cmp
sub
loop
ds
sub
lods
movsb
inc
xchg
loop
filds
scas
pop
lods
lcall
cmp
dec
shll
inc
fs
int3
test
xlat
sub
xchg
mov
rcrb
inc
or
xchg
dec
mov
push
pop
push
cmp
loope
or
dec
cmpsl
stos
adc
ja
std
mov
jne
dec
loope
and
jno
xchg
push
xor
xchg
xchg
addr16
sub
hlt
xor
addr16
sub
dec
xchg
out
lcall
jecxz
nop
insl
dec
mov
andl
sti
ret
popf
jle
cli
int3
ret
push
into
loop
or
cs
in
pop
mov
repz
popa
pop
shrl
push
rcrl
xchg
jo
sub
dec
mov
mov
lds
push
inc
negl
fwait
jb
je
in
aam
adc
iret
adc
sahf
cmp
int
lret
jmp
fcomp
hlt
sbb
adc
leave
xchg
push
inc
cmpl
lret
xchg
add
mov
lea
jns
inc
dec
mov
xlat
xchg
add
pusha
cmc
or
jecxz
add
jno
bound
sub
adc
sbb
push
adc
adc
loopne
and
jmp
jmp
cmp
pop
iret
xor
inc
pop
lret
mov
jno
in
xor
mov
clc
pusha
or
jae
jp
call
stos
push
pop
insb
mov
jle
je
sbb
pop
mov
push
jp
in
mov
dec
movsl
shll
dec
in
imul
pop
add
das
add
das
rol
cmp
mov
mov
push
cvtps2pd
cltd
inc
jl
adc
aad
dec
and
mov
les
subl
pop
loopne
cltd
adc
and
push
dec
sbb
test
xor
or
popf
pop
jne
les
jb
lret
sahf
cld
jg
lcall
insl
test
cmp
jnp
insl
xchg
insl
pop
scas
std
sbb
bound
std
xchg
and
je
inc
ja
jb
orb
into
pushf
in
addr16
cmpl
xchg
fbstp
push
stc
dec
lods
loopne
sbb
lods
xchg
xor
push
adc
cs
cs
mov
das
lods
stos
or
and
add
adc
jae
sub
aad
jno
pop
add
add
ljmp
idivb
enter
mov
out
adc
lret
sti
push
sarl
insb
mov
cmc
mov
repnz
sahf
jb
push
cli
int
loope
xchg
punpcklbw
es
int3
push
pushf
cmc
enter
shrb
fiaddl
loopne
lock
ss
xchg
cmp
and
loopne
xor
mov
sbb
fsubrs
jnp
mov
push
addb
pop
cld
push
xchg
push
outsb
adc
fstps
aas
xchg
and
mov
fbstp
insb
repz
mov
shr
xlat
add
daa
addl
in
adc
je
lods
out
lret
adc
xchg
cmp
push
incb
pop
rol
jmp
ret
fimuls
sub
jns
ljmp
ljmp
or
pop
and
xor
push
inc
arpl
mov
je
jmp
sub
loopne
je
xchg
cs
push
adc
imul
pop
or
pop
ds
xor
dec
frstor
iret
pop
dec
cmp
stos
dec
aaa
imul
das
jo
imul
mov
add
test
leave
pop
leave
in
and
pop
iret
xchg
stos
dec
and
xlat
xchg
jmp
outsb
in
lods
movsl
scas
mov
hlt
jge
test
xor
cmp
add
adc
cmp
insl
cmp
test
sbb
pop
dec
and
push
in
xchg
cmp
cmp
pop
mov
stos
test
enter
clc
out
f2xm1
popf
test
mov
xlat
cli
dec
in
dec
push
push
adc
dec
out
add
sahf
pop
xor
ss
lods
ja
cwtl
shrl
imul
push
xchg
pop
pop
negb
hlt
ret
pop
loopne
addb
dec
sar
movsl
lods
jl
inc
xor
mov
sbb
lret
inc
movsb
pop
fisttps
inc
or
adc
pop
mov
add
mov
mov
or
mov
cmp
push
leave
dec
mov
cmc
sbb
lret
sbb
arpl
inc
insb
push
or
mov
xor
and
lods
aam
dec
sbb
fs
mov
dec
sbb
dec
popf
jbe
push
movsb
inc
lods
aam
sub
cmp
in
pop
xor
mov
dec
adcb
pop
inc
jbe
sbb
repz
rorb
xchg
sub
rclb
je
addr16
cmp
cmp
sbb
mov
push
pushf
aas
repnz
decl
lods
inc
in
push
pop
aad
mov
push
fwait
rolb
mov
lcall
insl
ds
jnp
insb
test
subl
adc
das
cmc
add
xchg
xchg
add
imul
ljmp
sub
gs
inc
cmpsl
sub
enter
xchg
jp
xchg
mov
iret
jg
cmpb
cmp
std
jle
insl
daa
stos
pop
mov
cmp
movsb
lahf
cmp
stos
jmp
cmp
cld
enter
xor
jecxz
outsl
addl
cmp
scas
mov
xlat
loopne
js
cmpsl
in
xchg
xchg
jns
fldt
jno
ljmp
xor
mov
cmpsb
dec
push
std
push
push
jbe
ds
sahf
jne
cmp
addr16
mov
sti
jecxz
adc
scas
shll
pop
into
popf
lods
adc
push
cmp
adc
mov
mov
inc
mov
jae
cwtl
in
in
icebp
add
mov
setno
sub
stos
push
stos
mov
loop
jge
mov
sbb
test
pop
inc
popa
adc
add
and
sub
int
in
mov
pop
adc
jle
inc
cmp
in
sbbl
lret
testl
lret
negl
fsubs
dec
mov
sahf
pop
test
cmpl
pushf
test
fsubl
inc
inc
imul
lea
les
xchg
sbb
and
dec
xchg
negb
cmp
fdivl
adc
or
rorl
cli
sub
lahf
call
mov
movsb
daa
pop
cmpsb
call
pop
add
push
and
sub
repnz
jno
xorl
or
mov
shlb
jl
bound
sbb
negl
loope
int
test
jb
pushf
jecxz
sbb
clc
cs
inc
js
lods
outsb
jne
push
aam
mov
mov
fistpll
push
inc
scas
xchg
push
push
fwait
test
pop
mov
lahf
or
push
icebp
pop
loop,pn
push
mov
mov
or
jnp
dec
mov
aam
sbb
inc
addl
subl
xor
inc
popl
outsl
out
popa
sub
sub
or
xchg
aas
sarb
ljmp
jo
ret
dec
leave
inc
xor
cmp
fs
pop
pop
jmp
jmp
mov
dec
loope
pop
sub
movsl
fsincos
inc
pop
rcrb
pusha
pop
gs
jmp
popl
cmpl
adc
pop
mov
lret
ret
div
dec
stos
and
inc
push
call
fstl
ja
cs
setp
push
js
faddl
sbb
imul
sbb
movsl
fs
jae
add
bound
mov
jno
aam
or
mov
inc
int3
mov
jae
or
cli
jne
data16
push
ss
fs
xor
lret
lret
sub
ficoml
sbb
lret
aam
orl
sub
jle
imul
jno
mov
in
ret
xchg
xor
idivl
dec
xor
and
arpl
push
or
inc
cmpb
inc
jge
xchg
sub
scas
lahf
dec
xor
cmc
sub
sbb
lock
mov
faddl
gs
pusha
outsl
pop
mov
inc
out
adc
fnstcw
xor
or
imul
scas
add
sub
movsl
aaa
fstpt
nop
sub
fs
xchg
lcall
push
out
insb
clc
sbb
clc
cmp
fisttpl
cwtl
ds
inc
imul
iret
rcrb
repnz
xchg
jle
gs
sbb
cmp
rclb
mov
or
fists
iret
mulb
mov
test
cmpsb
dec
adc
js
sar
mov
mov
fwait
adc
fcomp
sbb
sti
pop
inc
leave
les
scas
inc
sbb
test
cmc
dec
ljmp
inc
sarl
mov
push
std
shrl
out
mov
or
inc
adc
cli
add
dec
daa
xor
pop
add
rclb
mov
cmp
inc
pop
lret
pop
fucomi
sahf
int3
outsl
dec
cmp
in
lock
test
and
jmp
pusha
mov
dec
jne
in
adc
loopne
mov
jns
lods
movb
jg
push
fildl
ss
or
mov
lret
repz
scas
adc
xor
shrl
push
insl
mov
aas
sub
xchg
movsb
inc
ljmp
sahf
movsl
imul
mov
fwait
mov
jnp
fcomps
pop
imul
push
mov
in
daa
insb
shlb
ret
aas
mov
fsubrs
jl
mov
dec
mov
aam
ds
mov
xor
xor
in
jge
loope
adc
add
mov
jns
mov
cs
imul
aaa
cmpsl
int
inc
sub
dec
cmc
cmpsb
dec
xlat
dec
enter
scas
loope
sbb
and
inc
jp
icebp
push
lock
mov
popa
push
jmp
sbb
sbb
in
sub
cmp
jno
stos
lahf
rcr
inc
mov
insb
or
xchg
aaa
mov
loope
lret
or
out
pop
out
or
lahf
adc
push
sti
jmp
cmc
cmp
push
and
je
sahf
adc
adc
loopne
jge
lock
push
fisttpl
popf
pop
push
and
ljmp
fadds
dec
adc
jl
or
or
loop
jae
pop
ljmp
pop
hlt
imul
mov
loop
rol
xlat
push
icebp
sub
cmp
scas
pop
xchg
jmp
roll
dec
enter
inc
aas
push
or
fcomip
push
jp
bswap
jmp
and
xor
les
pop
sub
dec
inc
cwtl
fmull
mov
and
fs
jno
cltd
cmpb
movsb
xchg
cli
stc
addb
and
xchg
aam
push
inc
pusha
daa
xchg
xlat
and
enter
push
cld
xor
leave
loopne
addb
cwtl
or
or
ss
lock
cmp
sarl
test
cmp
push
xlat
jae
inc
sbb
or
and
in
pusha
lahf
push
xchg
ret
mov
sub
out
fldcw
aaa
add
dec
popa
pop
sub
shlb
sub
xchg
push
or
dec
add
scas
adc
or
or
pop
inc
out
bound
cmpsb
repnz
adc
dec
fdivrl
sub
stc
ret
outsb
xlat
aas
cld
jp
cmpsb
out
in
inc
aam
xor
sbb
cmp
clc
out
pusha
into
and
scas
dec
stc
in
cmp
push
shlb
mov
push
dec
scas
dec
or
fs
lods
push
jo
test
dec
inc
jno
mov
lahf
mov
cmp
das
add
pop
fs
xorb
inc
out
lods
mov
xchg
xor
jnp
loop
or
fisubrl
adc
sub
aam
dec
loop
sbb
mov
cmp
cmc
cmp
xchg
dec
addr16
dec
adc
ja
mov
push
jge
fidivl
xor
dec
out
loopne
push
or
cmp
cwtl
cmc
push
mov
outsb
mov
lret
outsb
and
insl
mov
mov
pop
jns
push
dec
mov
lods
aam
fnstcw
loop
push
mull
and
fwait
sahf
mov
mov
xor
jb
pop
xor
mov
jge
and
sub
fistpl
fidivrs
jp
and
test
adc
hlt
cmp
xor
push
addr16
sbb
inc
jp
jecxz
loope
orl
cmp
cli
adc
repnz
hlt
stc
add
test
sub
sub
and
incb
ret
jbe
xchg
shr
loopne
jmp
leave
adc
add
xlat
pushf
xchg
inc
stc
adc
sub
jp
mov
es
or
fwait
mov
mov
lock
ds
in
sahf
push
fstl
adc
enter
jb
movb
cmp
sbb
repz
das
sti
cld
negb
mov
pop
ret
sub
outsb
add
inc
push
cwtl
dec
inc
pop
clc
adc
xor
std
dec
test
jp
outsb
xor
arpl
fdivl
pop
add
inc
push
test
in
sbb
mov
loop
cmp
lds
ss
test
or
insl
es
or
mov
sarb
xor
fidivrl
jle
loop
mov
sbb
push
cmpsl
cmc
enter
adc
xor
repz
mov
in
inc
repz
sti
and
fmull
jae
test
mov
gs
xchg
in
ds
pop
mov
xor
movsb
ret
loop
rcrl
inc
mov
fs
push
repnz
cmp
test
leave
cmp
adc
ja
lret
roll
sub
aaa
sub
gs
sub
mov
jg
enterw
push
pop
cmp
sbb
jae
cwtl
xlat
daa
mov
adc
mov
and
popf
aad
in
test
xchg
repnz
imul
test
bound
lds
cltd
pop
inc
mov
fdivs
stc
arpl
shrb
inc
xor
mov
adc
xchg
or
mov
pop
or
adcl
add
jmp
add
mov
dec
push
sub
cli
pop
cmp
fidivs
stos
lock
mov
repnz
movsl
and
mov
pcmpgtb
and
rclb
pop
sub
iret
sahf
fists
xchg
sub
mov
testl
xchg
adc
hlt
sbb
in
mov
lea
pop
scas
xchg
or
xor
popa
in
inc
int3
mov
loope
sahf
cltd
push
sub
adc
std
mov
xlat
enter
mov
mov
sarl
mov
scas
mov
xchg
push
rorb
or
lods
pop
inc
clc
and
pop
mov
int
in
xorl
push
xor
push
notl
mov
das
aam
insb
xchg
mov
or
insb
xor
cmpsl
in
std
or
or
or
mov
je
xchg
or
or
pop
fxch
push
in
imul
cmp
testl
mov
cmp
ret
inc
fcoms
call
lret
movsb
leave
pop
fcoms
sbb
mov
leave
stc
loopne
inc
xchg
mov
repnz
ja
les
loopne
jle
lods
dec
lds
mov
test
nop
mov
push
sub
inc
push
push
mov
cld
arpl
mov
test
sbb
or
insl
xchg
orb
pusha
aas
loope
js
and
mov
cmp
movl
int
add
out
jae
adc
lds
dec
pushf
sbb
lods
pop
movl
inc
aad
adc
fsub
sbb
push
add
aad
lret
xor
xor
fcoms
or
mov
mov
inc
mov
out
mov
pushf
inc
or
xchg
mov
push
fidivl
leave
and
mov
push
ss
xchg
and
sbb
cmc
gs
add
push
mov
mov
add
push
push
ficoms
fimull
dec
ret
mov
testb
mov
sbb
inc
data16
mov
xchg
iret
mov
stc
lcall
sbb
stos
cmpsl
in
jl
dec
fadds
mov
pop
lods
inc
shlb
inc
fnstsw
filds
push
push
mov
cld
cmp
cmp
ret
cmc
adc
inc
leave
push
adc
int
or
cld
fcompl
pop
sbb
pushf
mov
stc
xchg
ffree
fsubs
jmp
sbb
out
mov
ss
inc
cmp
adc
pusha
out
out
jo
sbb
jp
inc
pushl
loop
out
ljmp
mov
cmp
push
lods
jmp
inc
cmp
dec
cld
mov
dec
adc
gs
push
mov
js
add
lea
add
pop
dec
lret
cmpsl
cmp
pop
inc
out
and
jge
xchg
lods
ss
pop
inc
push
fcomp
cld
andb
mov
push
and
lods
lret
sub
lret
xchg
fstps
and
sub
in
out
push
adc
jl
adc
imull
mov
fwait
jno
pop
xchg
xor
sbb
inc
adc
seto
out
jae
int
mov
je
addr16
inc
test
mov
lahf
jno
mov
mov
fbld
scas
orb
repnz
dec
jae
pop
mov
mov
in
ud1
mov
call
xchg
lret
pop
jno
dec
loopne
inc
dec
dec
out
out
push
rclb
int
insb
lods
xor
add
jecxz
mov
mov
sub
cmc
aam
jmp
sti
mov
add
pop
dec
jae
xor
lods
dec
jecxz
ljmp
sub
stc
or
rorb
mov
je
int3
jne
push
popf
enter
jae
adc
lea
push
add
jae
pop
rol
add
xchg
rolb
adc
std
cmpb
mov
dec
xchg
mov
push
popa
movsl
sti
xor
pop
jecxz
mov
and
into
cmp
sti
rorb
icebp
jecxz
jp
or
sahf
cmpsb
add
insb
popa
roll
jmp
into
outsl
sbb
jnp
inc
jp
xor
scas
fisubl
jg
xor
or
or
jle
ss
dec
jo
test
pop
and
test
lea
xchg
jge
nop
das
xor
push
mov
in
pushf
adc
push
push
shlb
and
and
or
sub
pop
stc
sub
mov
sahf
xchg
xchg
aad
cmp
loop
pusha
sub
xchg
xchg
xor
or
jo
int3
pusha
addr16
sub
mov
in
out
jns
dec
jmp
or
push
xor
push
pop
sbb
pusha
outsl
cli
mov
push
sahf
sbb
fnsave
loop
int
test
fimuls
xchg
mov
aam
aas
or
fcmovnbe
popa
mov
insb
sbb
cmc
mov
aaa
pop
ret
add
int
pop
push
push
sub
pop
jg
cs
pusha
addr16
ficoml
and
mov
dec
mov
mov
fdivrp
fwait
sub
call
mov
and
aad
jne
aas
sub
stos
push
nop
repnz
inc
aas
xchg
mov
mov
push
out
or
mov
test
mov
cmp
dec
aam
xlat
xor
sbb
ficomps
jg
xchg
enter
mov
je
shlb
rol
in
outsb
aaa
faddl
push
mov
xchg
xchg
fwait
rorb
sbb
pop
shlw
or
iret
sbb
fcoms
inc
add
add
and
sbb
xor
cld
and
sbb
pusha
out
outsb
xor
addr16
pop
xchg
fidivs
or
sub
sbb
push
scas
and
xor
push
pop
test
lahf
or
jb
dec
popf
mov
and
hlt
pop
into
test
jno
cmc
xchg
addr16
mov
pop
lcall
flds
fmul
inc
insb
dec
jnp
mov
testb
shr
lock
pusha
inc
mull
fwait
push
test
jbe
shrb
mov
fnstsw
test
clc
popf
lock
aad
fbld
outsl
notl
push
std
stos
cmp
mov
cltd
mov
inc
mov
xchg
or
lcall
ss
and
pop
mov
out
or
lods
out
les
dec
and
push
push
mov
fiadds
sarl
xor
stc
add
daa
push
stos
ja
cmpsl
pop
popa
add
cmp
push
and
repnz
push
add
and
mov
cmp
mov
stos
dec
push
into
cmpsl
pop
push
ret
ja
and
or
hlt
call
aas
add
pop
je
rcr
fidivl
in
aam
ljmp
pop
movl
stos
test
sub
xchg
lahf
add
adcb
rcrb
sbb
insl
fwait
push
icebp
scas
in
push
popa
hlt
inc
popf
aad
jge
cmc
xor
vpsllw
push
add
fcoms
inc
cmp
mov
insl
ljmp
fidivrs
jecxz
jl
out
cltd
test
xchg
daa
mov
mulb
dec
imul
cmpsl
sbb
or
ljmp
imul
in
pop
sbb
pop
sti
mov
push
and
xor
loope
out
and
push
mov
sbbl
push
mov
aad
out
mov
in
call
xchg
lret
push
lcall
test
outsb
cmp
hlt
mov
lahf
inc
lds
cmp
cmp
xchg
mov
mov
or
xchg
aaa
sbb
fwait
pushf
out
pusha
repnz
sub
addr16
and
or
lret
and
ds
adc
or
jl
pop
fsubrp
push
pop
add
xor
push
jae
mov
sub
fimull
pop
add
jp
cmp
lret
out
push
jnp
scas
xchg
fldl
aaa
adc
mov
inc
xchg
cmp
sub
dec
cmp
into
in
sbb
push
or
dec
outsl
mov
notb
xor
dec
cli
sub
dec
jl
cmp
and
ret
adc
mov
arpl
daa
mov
clc
insl
into
inc
shll
das
cmc
test
scas
add
mov
mov
adc
push
cld
xchg
inc
jmp
sub
ss
sbb
or
or
ss
orl
dec
adc
mov
cmp
aas
pop
dec
sbb
adcb
int3
shrl
and
or
mov
data16
push
mov
hlt
and
repz
imul
mov
cmpsl
sub
daa
xor
in
rol
dec
int3
add
sbb
xor
pop
nop
shlb
scas
xchg
cwtl
subb
push
xlat
adc
xchg
ljmp
mov
stc
pop
sahf
mov
sub
jmp
clc
mov
inc
insb
jno
cwtl
imul
fcomps
pop
loope
lea
lods
cmp
incl
outsb
pop
jl
sahf
test
dec
lds
rclb
pop
out
into
aam
and
mov
mov
xor
out
aas
dec
dec
pop
into
xchg
xor
repz
adc
push
pop
popa
pop
mull
jl
sti
enter
bound
sbb
fidivl
mov
icebp
fldt
add
lret
andb
imul
xchg
inc
jecxz
or
test
enter
mov
std
xlat
cwtl
and
pop
inc
enter
aam
rcll
ret
das
pop
jle
or
lret
idivb
fwait
insl
iret
xchg
and
addr16
in
popa
popa
adc
xor
and
scas
pop
adc
mov
shll
sarl
or
cmc
rol
test
xor
xor
or
xor
pushf
pop
mov
push
dec
fisubs
stos
out
pop
out
and
lock
pop
enter
ds
dec
pop
mov
repnz
and
test
sub
or
mov
push
daa
data16
pop
stos
sbb
fimuls
xor
xor
ja
out
lea
push
int3
xor
pop
mov
and
dec
inc
scas
or
pusha
fwait
das
or
leave
pop
mov
scas
adc
sti
aad
dec
cmpsl
fildll
cmpsl
pop
xor
lret
insl
push
imul
xor
hlt
mov
enter
imul
cmp
cmovb
mov
in
push
clc
mov
inc
call
arpl
xor
jge
scas
jne
fsubs
xchg
mov
aas
scas
sbb
shlb
mov
cmpsl
jecxz
mov
es
faddl
xchg
lret
jmp
xchg
fidivrs
lock
cmc
jge
mov
aaa
cmp
adc
adc
dec
pop
mov
lahf
in
or
pusha
mov
mov
das
jge
jno
popf
test
loope
jno
sub
push
xchg
sar
mov
push
xchg
jecxz
rcll
xchg
outsb
ds
add
xor
je
xchg
lret
cmp
in
out
movsl
mov
scas
aas
outsb
sti
adc
add
loop
push
jnp
inc
lret
lock
or
test
cmp
aaa
xor
jbe
mov
adc
repnz
push
out
les
xchg
mov
das
cld
ljmp
pop
and
adc
pop
jg
pop
fmuls
sti
inc
sub
popa
push
or
leave
sub
and
jae
jb
mov
xchg
cmp
ss
cmp
and
xlat
enter
adc
adcl
pop
xlat
into
inc
push
sbb
movsb
sbb
adc
fwait
addr16
in
adc
mov
or
mov
lea
sbb
mov
jo
inc
out
movsb
xchg
dec
mov
push
xchg
adc
mov
pop
mov
push
push
notrack
adc
cwtl
pop
call
test
xor
cmp
xchg
loope
lea
jmp
mov
jae
lret
es
jb
loope
xchg
inc
push
dec
js
cmp
push
mov
outsb
aaa
jae
mov
outsl
or
mov
loop
test
adc
pop
mov
jle
inc
inc
orl
inc
test
dec
mov
jle
adc
jbe
call
imul
push
popa
sbb
jmp
popa
mov
scas
aad
push
sahf
outsl
or
jle
push
stos
insl
loop
pop
scas
ljmp
mov
push
in
mov
insl
sub
daa
pushf
out
mov
push
sub
sub
in
int3
aaa
sbb
mov
xchg
scas
adc
ja
fs
fidivs
xor
fistpl
mov
dec
repnz
ss
dec
shll
iret
dec
addr16
adc
xchg
incb
scas
sub
jmp
fstl
adc
pop
aas
std
pop
adc
popa
dec
cld
inc
jo
andb
test
daa
sbb
pusha
mov
nop
jp
aad
in
ffree
sub
in
adc
jne
mov
pop
cmp
in
test
xor
jne
lock
call
mov
popf
stc
jge
dec
pop
xchg
sarl
or
rorl
jae
fdivs
xor
out
mov
and
adc
and
clc
jmp
pusha
mov
repz
adc
push
loopne
arpl
fwait
jecxz
jno
ja
orl
mov
xlat
push
fstl
ds
xchg
pop
fnsave
ret
add
jb
cmp
add
pop
mov
out
mov
dec
fidivl
inc
push
xor
cmpsl
pushf
repnz
lcall
rorl
scas
jle
dec
lea
dec
pop
test
inc
push
add
pop
cmc
fwait
jl
pop
notb
dec
inc
subb
mov
add
outsl
jmp
insb
mov
lods
insb
jle
stos
mov
lret
movsb
outsb
clc
call
enter
paddq
pop
popa
cmp
int3
mov
add
pop
dec
outsb
ret
mov
mulb
xchg
and
test
cmp
stc
push
dec
arpl
inc
int3
test
lea
js
fisubl
pop
xor
lock
inc
cmp
jecxz
bound
or
imulb
push
xchg
lods
or
loope
pop
aas
test
push
lcall
inc
push
in
pop
push
inc
ficomps
add
jns
push
in
sbb
shrl
inc
int3
ret
mov
jge
out
inc
divl
pop
jmp
idivl
div
out
cmp
inc
lods
movsl
inc
fstl
push
sbb
xor
adc
or
xor
fwait
mov
pop
orl
out
xor
inc
jl
insb
jns
xchg
dec
mov
sbb
lock
insb
gs
arpl
pop
sub
dec
dec
lret
pushf
es
imul
aaa
dec
dec
js
xor
xchg
dec
push
orb
mov
add
insl
aas
adc
xor
movsl
xor
pushf
cmc
and
test
push
cmp
dec
xor
or
mov
mov
divl
das
arpl
mov
les
xchg
pop
sti
push
sub
push
inc
repz
sbb
xchg
pop
dec
mov
xchg
and
jnp
clc
lods
imul
dec
cmp
popa
test
ret
push
loope
add
xor
mov
or
mov
sub
cmc
stos
mov
and
cld
sbbl
ret
mov
in
orl
movsb
lahf
lcall
stos
sbb
clc
push
sub
pop
outsl
and
mov
cmp
sub
mov
cld
mov
lods
out
mov
rcrl
imul
fdivs
lds
outsl
outsl
jmp
std
fstpt
ja
out
jno
out
or
inc
mov
out
or
cmp
jbe
and
xchg
fisttps
aam
push
inc
aas
sbb
push
xor
in
mov
dec
push
mov
ror
repz
mov
leave
mov
out
push
and
movsl
pop
addr16
mov
lds
xchg
push
sbb
cmpb
mov
pop
and
cld
cmp
std
mov
pop
fwait
push
xlat
int3
imul
jo
or
fcompl
js
adc
mov
pop
pop
mov
clc
scas
adcb
xor
pop
add
lret
pushf
scas
js
aam
imul
ss
cltd
or
mov
mov
pusha
sahf
insl
jmp
jae
push
scas
test
push
add
cmpsl
mov
and
push
pop
fucomip
in
mov
stc
xor
daa
jle
ljmp
xchg
in
xchg
jl
bound
daa
in
push
pop
add
outsl
fdivrs
loope
mov
outsl
jl
xor
lret
mov
sub
out
inc
adc
sub
inc
in
mov
mov
ljmp
mov
sbb
in
bound
cmovbe
das
mov
stos
xchg
and
imul
subb
test
push
adc
shll
mov
jae
cmp
fwait
outsb
xchg
push
sbb
push
mov
xor
xorb
fisubrs
pop
push
cmp
sbb
daa
sbb
repz
push
jg
lea
xor
popf
or
push
adc
xchg
push
sub
xor
jge
notb
out
jno
jecxz
iret
sub
pop
cmp
push
xor
das
mov
notb
fcmovnb
ja
negl
sbb
push
ds
sub
dec
add
mov
aam
das
lcall
fcompl
mov
inc
dec
xor
push
movb
mov
cld
dec
pop
mov
jp
cmp
adc
std
dec
into
mov
scas
adc
cmp
decl
push
jg
mov
lea
sub
leave
and
mov
lods
push
cmpsb
sbb
subl
fmul
mov
sub
psrlw
sahf
jb
pusha
into
and
sub
push
rcrl
jb
loop
jo
or
stos
ds
cmpsl
or
outsl
pop
outsb
and
mov
jle
out
dec
clc
das
loopne
xchg
or
daa
out
jbe
dec
mov
push
push
add
repz
loope
sbbl
fmul
scas
in
jp
movsb
dec
sbb
in
add
mov
jbe
jg
dec
or
jecxz
dec
mov
mov
inc
loope
stos
mov
insb
cmpsl
rcrl
xchg
imul
xlat
jp
xchg
mov
sbb
data16
lahf
mov
stos
jecxz
dec
popa
xchg
dec
dec
and
mov
pop
mov
jo
push
add
inc
pop
flds
and
mov
cli
and
add
dec
fiaddl
inc
add
ret
pop
sub
nop
sub
out
ret
xlat
and
mov
mov
in
push
mov
sarb
shrl
test
cld
imul
es
data16
les
jnp
xor
popf
dec
loope
enter
mov
push
mov
repnz
jmp
jnp
outsb
hlt
mov
inc
je
add
push
sbb
cmp
mov
loope
ret
mov
mov
jmp
stc
cmp
icebp
push
out
enter
cld
loope
adc
jb
pop
and
iret
mov
mov
js
jg
in
ja
xchg
sbb
jbe
xchg
xchg
pop
pop
push
mov
lods
mov
mov
lcall
cmp
xchg
xchg
xchg
mov
jg
lods
out
cwtl
jmp
mov
adc
inc
enter
shll
bound
mov
movsl
or
js
pop
xor
aam
xchg
rcrl
add
pop
push
jle
add
push
js
ret
aaa
pop
mov
sub
outsl
sub
addr16
xor
dec
jge
out
stos
mov
mov
sbb
leave
push
xor
pop
mov
sbb
fwait
adcb
movsl
inc
movsb
xchg
adc
lods
in
pop
push
pop
ja
lret
pop
push
pop
dec
sbb
ds
mov
decl
jo
sti
shld
aas
xchg
mov
fdivs
iret
fwait
push
das
jns
pop
xor
arpl
jno
inc
jle
pop
ja
pop
mov
je
sarb
jmp
push
xor
lea
lret
insl
scas
ja
jae
fs
mov
int3
cld
ret
jne
inc
imul
ja
out
stos
out
jo
lahf
fwait
clc
mov
mov
jge
cli
je
outsl
mov
mov
xchg
test
adc
xor
cmc
or
out
and
aaa
mov
jecxz
add
inc
push
mov
stos
scas
mov
aam
repnz
add
cmc
cli
adc
les
push
mov
fcmovbe
dec
mov
and
clc
les
enter
mov
mov
mov
pop
fldenv
dec
jge
cmpsl
fstl
fs
test
shll
rorl
jp
test
mov
pop
popf
or
stc
jge
xor
jmp
xor
jecxz
hlt
mov
push
xchg
cmp
test
pop
ja
push
or
mov
and
js,pn
lock
jmp
and
sahf
les
xlat
mov
test
fiaddl
out
mov
iret
mov
lret
popf
jnp
notl
xorl
sbbb
xchg
aam
out
xor
mov
or
mov
jno
addl
adc
pop
jnp
cwtl
in
xchg
cwtl
dec
lds
fcomps
pop
scas
insl
cld
mov
test
and
bswap
sbb
push
add
mov
xor
dec
daa
and
or
xor
loope
mov
cs
jle
jmp
cmpsl
or
out
xor
in
pop
mov
loope
insl
iret
adc
js
pop
xor
lds
mov
enter
arpl
sarl
in
sub
out
cmp
jmp
scas
loop
and
inc
imul
mov
mov
add
mov
into
pushf
mov
pop
adc
jecxz
mov
xchg
scas
dec
push
jne
outsl
push
movsl
dec
sub
out
sti
mov
mov
mov
adc
lods
push
mov
fdiv
mov
dec
stos
mov
sub
ja
hlt
stos
vpacksswb
xor
sbb
fwait
and
xor
out
push
add
ret
mov
dec
xor
movsl
pop
or
dec
loopne
dec
lock
mov
enter
adc
mov
bound
add
scas
push
mov
sbb
push
xchg
mov
outsl
mov
cmp
push
stos
mov
pop
or
mov
inc
and
jb
cltd
inc
xor
mov
push
andb
in
and
push
ficoms
aam
out
xor
cmpl
adc
es
mov
subl
ss
insl
push
test
outsb
dec
inc
je
popa
insl
outsl
sub
mov
sbb
xlat
mov
call
bound
cltd
inc
das
xchg
or
fs
mov
pusha
insb
das
lods
jnp
inc
sub
inc
jmp
out
mov
cmp
inc
orl
and
xchg
daa
mov
out
jne
xor
pop
outsl
push
jo
test
rcll
sti
subl
js
out
fcomps
jbe
sti
bound
pop
out
xor
add
lock
gs
sahf
jmp
push
scas
into
cmp
ljmp
out
sbb
fwait
out
cmpsb
lret
icebp
mov
push
shll
and
icebp
cs
jne
inc
adc
call
outsb
iret
push
imul
xchg
jno
call
lcall
sub
imul
xchg
adc
das
in
or
push
pushf
movsb
sub
pop
fstl
mov
pop
jns
dec
negl
sbb
mov
add
lods
adc
fiadds
push
push
mov
xor
aam
jbe
jns
in
lahf
loop
adc
dec
xchg
sub
cwtl
outsb
lods
hlt
sub
or
xor
mov
or
in
enter
pop
test
lret
mov
xchg
stos
lds
dec
add
cmp
and
or
jnp
mov
push
daa
loope
add
mov
leave
add
jns
es
popa
js
jg
push
ret
sub
adc
mov
push
in
xlat
xlat
aaa
push
sub
adc
dec
imul
sub
or
adcl
cmp
pushf
test
mov
mov
lret
aas
and
daa
add
mov
ret
nop
loopne
xor
clc
loope
lret
inc
je
jno
sbb
test
cmc
aam
je
ffree
cmp
call
cmp
jp
or
add
int3
add
lds
ud0
in
jle
mov
insb
push
mov
adc
mov
fistps
sbb
xchg
xor
mov
jecxz
add
cmp
int
leave
mov
push
cmp
xchg
out
xchg
mov
mov
jns
loopne
jo
insb
cld
push
cltd
popf
out
mov
outsb
fsub
pushf
data16
mov
hlt
fwait
movsb
stc
int
inc
push
and
mov
mov
test
sbb
std
imul
push
rcll
clc
push
sbbl
fisubs
sarl
cmc
popf
dec
push
arpl
sbb
dec
add
or
int3
fsubl
andl
push
jmp
push
mov
xlat
hlt
arpl
ds
test
jbe
ss
frstor
jnp
cmp
cld
jg
into
test
outsl
cmpsl
push
aam
ljmp
xor
push
xchg
pop
pop
pop
test
or
icebp
inc
xchg
int
filds
xor
loope,pn
sbb
adc
mov
push
or
lds
lock
adc
cmp
inc
fistpl
aas
sbb
shl
and
fidivrs
out
mov
adc
mov
pop
sub
fiadds
cmp
enter
mov
dec
or
mov
or
fstl
mov
adc
pop
in
sbb
lret
xor
add
out
and
stc
add
dec
popf
shll
push
outsl
test
mov
fildll
int3
mov
dec
push
out
mov
ja
sbb
inc
adc
adc
insb
std
inc
and
and
ss
lds
add
pop
mov
dec
and
into
mov
popa
clc
mov
mov
test
dec
xchg
outsb
jns
cmp
ret
clc
in
test
inc
mov
and
or
mov
cmp
test
ficoms
cmpsl
sti
aam
inc
loope
and
test
loope
dec
dec
cmp
adc
sub
icebp
icebp
lret
pop
ficompl
xchg
imul
js
stos
outsb
sbb
lcall
pop
add
adcl
pop
dec
inc
nop
jp
scas
pop
std
push
js
repz
scas
loope
in
sub
jne
fcomps
mov
mov
lock
addr16
adc
data16
and
nop
push
mov
cmc
sub
mov
add
jbe
jnp
sub
xchg
mov
out
dec
subl
scas
inc
andb
fstps
xchg
jb
adc
out
cmp
mov
divl
add
mov
enter
addr16
sub
add
cld
fs
sahf
add
pop
sub
fldcw
xor
shrb
sbb
fiadds
in
aad
dec
stos
ficomps
imul
or
add
dec
push
sarl
jnp
rorl
fdivs
insb
cli
scas
das
dec
pop
pop
je
rcl
ja
gs
pop
inc
mov
jmp
imul
add
dec
insl
enter
jg
out
sub
cmpsb
in
ljmp
adc
sub
inc
scas
es
xor
xorl
mov
pop
cmpsb
fstpl
pop
cmpsb
cmp
pop
or
cmp
neg
test
adc
ja
jns
add
mov
sahf
aaa
enter
cmp
dec
jno
mov
and
xchg
jbe
xchg
div
lahf
xchg
popa
pop
mov
and
dec
daa
aam
lcall
xchg
mov
rorl
andl
sbb
jmp
xchg
inc
adc
and
and
jnp,pn
cmp
cli
andl
lret
cmp
xchg
in
jmp
in
xchg
add
and
jl
or
pop
jne
add
sub
cmp
xchg
adc
insb
push
push
xor
sub
jne
adc
icebp
std
dec
mov
jb
fs
xchg
lds
das
mov
imul
push
mov
xor
fadds
xchg
mov
lock
aas
lret
in
xchg
arpl
inc
into
std
sbb
jge
push
mov
dec
dec
mov
les
jne
lcall
sbb
lods
in
pop
mov
mov
in
push
push
sar
loopne
movsl
and
dec
sub
push
dec
shrb
addl
pop
insb
lods
cltd
mov
adc
outsb
loopne
jns
ss
outsb
cmp
sti
mov
dec
cmp
in
dec
and
pop
and
cwtl
lret
aad
incl
cwtl
xchg
dec
mov
ljmp
push
cmp
cwtl
sub
cmpsl
or
xchg
and
xchg
imul
mov
xchg
or
aad
jno
add
lea
dec
fsts
test
sbb
or
inc
and
xchg
mov
cmp
inc
mov
stc
jo
xchg
out
sti
sbb
pop
addr16
hlt
add
loope
mov
ror
lock
ja
lret
xchg
ret
jnp
adc
lcall
enter
dec
loop
jmp
movsl
sub
jo
loopne
cmp
daa
mov
pop
and
ret
sarb
lret
cmpsl
xor
data16
sar
sbb
stc
mov
mov
jb
cmc
jo
stos
insb
or
sub
push
mov
sub
orb
lcall
push
mov
ljmp
mov
shl
mov
dec
test
jecxz
xchg
inc
aas
mov
dec
lcall
les
mov
pop
imul
stos
imul
andl
jle
imul
fildll
divl
or
aad
cmp
cmp
xchg
cmp
lock
dec
std
loopne
aas
data16
imul
hlt
cmpsl
mov
xchg
add
imul
mov
fcompl
xchg
fildll
or
xchg
or
jp
adc
jle
push
and
cmpsl
nop
loope
popa
popa
mov
rcrb
inc
repnz
push
test
out
aad
or
imul
popa
out
dec
rcrb
iret
into
sbb
popf
push
cmpsb
dec
subl
loope
and
and
lcall
xchg
inc
in
adc
insl
inc
out
mov
dec
ret
xor
push
mov
sbb
cmpsb
mov
imul
lock
mov
fisubl
enter
mov
fsubs
jg
xor
pop
xchg
mov
cmp
lret
je
in
pushf
dec
lock
movsb
and
ret
mov
push
jae
lock
mov
mov
and
push
icebp
mov
stos
mov
mov
sbb
repnz
push
pop
mov
mov
sbb
testl
out
jmp
push
fcomps
xor
fnstenv
aad
push
das
xor
mov
daa
out
xchg
dec
mov
sub
movsb
das
ljmp
cmp
and
cmp
enter
and
or
mov
jo,pn
aad
add
lahf
pop
inc
fcoms
orl
push
cmpsl
mov
cmp
pop
and
loop
jle
push
out
jmp
or
push
xor
jmp
stc
cmp
mov
mov
add
xchg
out
push
mov
scas
add
outsb
push
cltd
sti
fsubp
jo
in
sub
xchg
or
leave
arpl
xchg
jns
out
scas
dec
js
pop
and
sbb
das
mov
xor
shrb
jp
cs
cmp
mov
adc
ficoms
jmp
movsb
jp
jne
lds
scas
repnz
push
xlat
out
out
and
ljmp
dec
sub
sub
push
mov
jb
sub
cmpsl
sbb
ficompl
pop
negl
cmc
fwait
and
inc
push
jmp
lock
and
adc
push
shll
lds
pop
xchg
aas
sbb
in
sub
push
out
pop
jmp
push
and
rorl
cmp
notl
enter
push
dec
mov
mov
sbb
jno
lock
out
and
int
xchg
pop
jge
mov
popf
inc
loop
pop
in
in
push
lds
inc
sbb
pop
cmp
addl
and
xor
loope
jns
adc
xlat
out
pop
leave
mov
push
stos
in
pop
xor
in
int
push
jle
xchg
sub
cmp
mov
adc
cld
xor
or
clc
dec
xlat
dec
cmpsl
sti
pusha
sub
push
push
popa
push
pushf
mov
push
roll
push
js
mov
push
add
add
jne
cwtl
aad
lea
adc
test
dec
jmp
call
pop
aas
shr
in
adc
dec
or
in
mov
dec
in
sahf
fadd
cmp
dec
push
nop
push
cmpl
jmp
jge
or
or
dec
jbe
mov
xor
add
pop
faddl
adcl
xor
sub
and
pop
xchg
push
rcl
test
mov
aam
shrb
call
xchg
test
outsl
daa
scas
mov
lcall
scas
xor
aas
jno
pop
call
jo
outsb
sbb
lock
call
push
lret
inc
mov
cmp
xchg
in
jmp
sub
out
sub
mov
insl
adcb
dec
ror
xor
mov
cmp
das
fldt
or
outsl
sub
jg
lds
into
iret
aaa
xchg
ret
pop
aad
push
jb
js
mov
enter
adc
pop
xor
pop
sbb
jecxz
or
mov
dec
out
cmc
call
in
jmp
jmp
rorb
icebp
dec
stos
cmp
rcl
pop
inc
call
fs
mov
in
leave
popa
sbb
insb
jns
fstl
std
jb
aaa
add
jp
test
jbe
xchg
push
mov
mov
push
fcoml
lret
enter
pop
cmp
pop
adc
sahf
movsl
aaa
fnstsw
imull
dec
dec
imul
es
pop
cmp
xchg
stos
push
shlb
aaa
leave
pop
testb
push
sbb
xchg
popf
in
push
int
mov
push
fldt
stos
aas
mov
cmpsl
push
cpuid
scas
jb
sbb
dec
addl
mov
fdivl
sbbl
test
pop
ss
enter
xlat
mov
lahf
add
dec
ljmp
mov
leave
sub
jbe
jmp
pop
dec
popa
mov
mov
or
mov
aad
mov
dec
jne
fstpt
mov
fisubrs
xchg
mov
fldenv
ss
pop
pop
in
adc
data16
test
jae
scas
test
iret
cwtl
jae
aaa
jbe
sub
and
movsl
inc
xor
cmp
mov
fnstsw
mov
scas
dec
lock
jns
lret
push
loopne
pop
mov
sti
into
push
push
jnp
push
insl
sub
sbb
in
jge
pop
in
lods
in
flds
bound
pop
popf
sub
pop
stos
mov
mov
fcmovb
push
and
popa
call
sbb
fcmove
cltd
cmc
and
xor
xor
int3
mov
push
inc
push
dec
stos
incb
push
xchg
enter
in
js
cli
fidivrl
inc
fidivs
inc
sbb
mov
push
sbb
mov
or
push
push
inc
outsl
enter
pop
pop
pop
pop
inc
scas
iret
es
aas
movsl
cld
mov
leave
mov
jbe
inc
dec
ja
pop
cmp
inc
das
je
ss
pusha
icebp
pop
int
nop
cmpsb
mov
mov
pop
test
jne
ret
or
ja
dec
test
mov
clc
shll
subl
pop
push
cwtl
xor
jb
sub
dec
or
repnz
cmpsb
xchg
cltd
push
or
mov
lds
lahf
stos
repnz
out
icebp
faddp
es
out
in
lea
dec
xor
jno
cltd
lret
std
cld
fstpt
push
mov
sbb
addr16
imul
mov
gs
in
out
mov
int3
mov
mov
loop
es
fistpl
mov
shrb
mul
adc
adcb
or
mov
cmp
aas
cmp
cmp
cmp
lods
mov
dec
jbe
ret
scas
out
jne
mov
outsb
push
cmp
aas
push
sbb
push
repnz
lcall
ss
sbb
add
cs
pop
arpl
or
xchg
vmptrst
inc
scas
popa
jno
popa
pop
pop
add
out
int3
cltd
cmp
xor
loop
mov
mov
arpl
ret
push
adc
mov
add
sbb
loop
and
mov
xchg
sub
divl
shlb
mov
dec
inc
push
aam
mov
sub
into
sub
push
insl
mov
push
dec
adc
out
repz
cmpb
fdiv
sbb
insl
xchg
and
and
sbb
jle
mov
dec
xor
xchg
frndint
fwait
aad
xorb
mov
fildl
dec
fsts
cwtl
cmpsl
fdivrs
lock
sub
or
popa
add
cmp
sub
push
jb
mov
sahf
stos
xlat
or
and
mov
lahf
sub
fisubrs
aad
sbb
mov
pop
mull
pop
cmc
push
mov
fnstcw
inc
imul
iret
imul
push
pop
jge
lock
mov
cmpsl
xchg
in
mov
in
mov
cmp
test
out
pop
push
pusha
xlat
inc
out
pop
loopne
das
nop
xchg
cmp
push
cltd
je
sbb
imul
pop
xchg
add
cld
push
enter
pop
cmpsl
aad
mov
sbb
cmp
scas
es
imul
out
iret
add
mov
or
mov
pushf
push
outsl
mov
push
faddp
iret
int
popf
xchg
adc
cltd
das
xor
out
leave
or
xchg
sub
shrb
leave
mov
aad
xor
push
inc
add
adc
ret
jle
lods
sahf
cltd
stos
aam
fs
and
mov
xor
fimull
mov
stc
jno
cld
inc
mov
jle
inc
cmp
clc
lcall
aaa
cwtl
fsubr
lret
xchg
and
mov
ss
and
mov
movsb
xchg
sbb
mov
adc
xchg
aad
ja
or
jbe
adc
popa
jmp
loope
adc
jo
jne
imul
movzwl
movsl
sub
mov
ds
ret
shl
jbe
lods
xor
dec
subl
pop
test
or
or
test
sarb
lods
jbe
int3
cmpsb
and
adc
fstpl
daa
xor
fldl
sti
cmp
jae
lret
or
pop
jbe
popa
cmp
leave
push
cli
mov
in
xchg
test
pop
xor
lods
xchg
lcall
mov
xor
addr16
scas
shll
mov
sbbl
push
jl
mov
repnz
inc
insl
inc
cmp
and
push
repnz
jl
dec
mov
aad
adc
jg
mov
ficoml
mov
fcoml
mov
push
inc
loopne
xchg
mov
pop
sbb
aaa
fwait
cli
leave
mov
cmpsl
mov
into
push
call
ljmp
mov
cli
loopne
int3
dec
sub
adc
add
pusha
scas
jmp
clc
popl
add
shlb
sub
jns
jp
mov
lret
outsb
push
mov
push
push
out
arpl
xor
sub
sbb
loop
icebp
lds
add
cmc
xorb
dec
popa
out
mov
packsswb
faddp
shll
push
mov
push
xchg
sbb
movsl
dec
pop
xchg
push
xchg
pop
mov
icebp
mov
call
imul
dec
pop
ljmp
jmp
rorl
push
pop
mov
addr16
sbb
mov
gs
fisttpl
add
or
pop
cmp
jne
pusha
out
addl
cwtl
xor
add
dec
insl
loopne
xchg
adcb
pop
aas
jge
fwait
mov
mov
je
sti
pop
sub
add
sti
sbb
cmpsb
leave
cmpsb
sbb
add
push
mov
add
pop
and
inc
imul
xchg
ret
aam
test
adc
orb
adc
jge
add
and
out
add
outsb
dec
or
aam
call
divb
push
mov
cmp
popa
jp
inc
pop
into
int
loopne
cltd
fwait
ret
rclb
lods
icebp
lret
xchg
sbb
sbb
mov
sub
xor
cli
popa
outsl
or
mov
sub
ja
insl
fisubs
imul
mov
jno
call
repnz
mov
xchg
jns
sub
cld
and
xchg
pop
ret
cmc
arpl
push
sbb
iret
pop
xchg
cmc
xor
jl
repnz
stc
imul
sbb
xchg
push
jnp
stos
int
mov
dec
mov
jle
sbb
mov
jl
cld
xor
add
fidivrl
cmp
dec
xor
cmc
aaa
iret
mov
mov
jbe
mov
mov
cmp
mov
ds
jns
dec
fs
insb
or
xor
add
cmp
movsb
out
jns
jg
pop
cltd
or
and
xchg
sti
cmp
fucom
sti
sbb
xchg
push
cmc
cmpsb
cmp
and
and
lds
push
orb
xchg
push
pusha
jge
ret
addr16
push
cmpb
int
adc
imul
or
adc
inc
lret
in
aaa
pop
adc
inc
adc
shlb
pop
cmpl
dec
pop
mov
push
inc
push
adc
sbb
rorl
into
dec
pop
inc
add
fstps
adc
imul
rcrl
sbb
inc
sbb
out
fnstenv
adc
int3
mov
and
dec
mov
popf
jge
cmc
xor
sar
push
adc
ret
xchg
sbb
sub
mov
jae
mov
jmp
rolb
fs
mov
xchg
push
ss
outsb
cmp
fmull
lcall
sub
ss
inc
bnd
jae
fwait
scas
jmp
cld
ret
xchg
push
lods
bound
inc
push
pop
sub
sahf
add
ret
jg
push
fbld
adc
inc
ljmp
dec
inc
pop
mov
andl
xchg
mov
pushl
sbb
fs
jp
sub
inc
sar
xchg
lea
mov
pop
test
add
mov
fst
in
scas
sub
lcall
xor
lods
cmp
pop
mov
aad
pop
jo
rorl
pop
mov
pop
xor
divl
movsl
mov
sahf
pop
xor
mov
add
inc
push
insb
fdivl
das
sub
pop
cmc
pop
sbb
in
adc
dec
lcall
mov
les
inc
fs
fwait
inc
mov
in
add
pushf
pop
in
leave
sbb
mov
sbb
pop
pop
sahf
inc
andb
js
int
lcall
xchg
and
xlat
sbb
test
ja
in
loop
or
dec
ds
ljmp
mov
aad
jecxz
xor
int3
mov
int3
cmp
push
call
push
cmp
add
cmpsl
xchg
fistl
inc
lods
or
and
mov
into
pop
mov
pop
or
in
push
rcrl
mov
out
push
fcom
aad
adc
aam
bound
xor
cmpsl
xlat
mov
cs
fsubr
push
dec
adc
inc
leave
gs
mov
test
mov
pop
xchg
sbb
aam
sub
mov
sub
add
or
in
push
jmp
jle
mov
out
jnp
or
call
mov
das
and
pop
cmp
add
sub
mov
into
mov
mov
cmpsb
jns
std
and
inc
jno
jl
pushf
sub
repz
comiss
and
loopne
or
mov
mov
xor
xchg
adc
push
out
js
dec
mov
add
arpl
das
mov
fistl
jl
mov
pop
xor
mov
cmp
mov
inc
loopne
mov
loop
add
fnsave
mov
mov
test
vpsubsb
jns
sbb
mov
outsl
pop
mov
push
lret
lds
and
mov
jge
jnp
xchg
xchg
lock
jmp
mov
loop
push
test
xor
ljmp
dec
ficoml
pop
das
cltd
jb
jo
cli
cld
and
or
cltd
in
out
es
mov
mov
cld
les
dec
inc
out
out
cmp
pushf
ficoms
pusha
in
leave
push
add
daa
icebp
ljmp
and
fldt
sbb
stc
mov
insb
addr16
lahf
xchg
sahf
xchg
add
push
imul
adc
inc
jo
push
repz
xlat
fistl
xor
pop
jecxz
or
fimuls
rclb
add
movsb
decl
das
add
add
popa
jns
mov
shll
cs
movsl
out
xor
mov
dec
xor
fidivl
mov
insl
push
cmp
or
pop
out
out
gs
call
or
fadd
into
inc
xor
xchg
jg
je
scas
mov
subb
adc
int3
dec
aaa
scas
dec
or
pop
push
fstl
push
out
xor
cmp
rcr
dec
lea
testl
dec
and
pop
iret
cli
sbb
lahf
sub
jl
fiadds
xchg
jns
sbb
test
inc
xor
call
push
mov
mov
push
repnz
lret
iret
xchg
cmp
imul
xor
fsubr
or
je
lods
fildl
out
dec
int
push
or
ds
mov
dec
lods
jmp
shr
movsb
and
fidivrs
push
jns
mov
daa
in
arpl
fisttps
ds
mov
pop
xchg
xchg
nop
lahf
fs
rorl
adc
jae
or
pop
aam
or
add
mov
cmc
scas
sbb
fwait
adc
out
dec
push
lock
jnp
test
cmp
mov
lds
test
movsb
push
jo
xchg
push
divb
push
adc
jns
mov
xchg
imul
std
xchg
jle
stos
hlt
cmp
inc
xchg
mov
mov
cwtl
mov
jbe
push
aam
jmp
cmp
mov
test
jns
clc
daa
xchg
jmp
insb
bound
push
cwtl
push
push
ret
pop
lds
add
imul
dec
jae
fdivs
jne
enter
imul
mov
xchg
pop
jg
dec
mov
inc
cmpsb
or
cmp
es
aad
repnz
fists
test
pop
ret
add
mov
addl
add
mov
subb
cmc
xchg
jle
mov
int3
jb
cmp
inc
push
hlt
dec
dec
mov
jbe
pop
mov
add
hlt
mov
aas
and
ret
mov
mov
xor
movsl
loopne
xchg
or
jle
adc
clc
ljmp
rolb
popa
out
movsb
push
push
clc
mov
push
lods
add
xlat
cltd
sbb
xchg
dec
mov
xor
test
and
inc
je
es
sub
or
pop
jle
insl
jecxz
inc
lret
ret
lahf
aaa
fidivrl
inc
movsb
or
in
rcrb
pop
rorl
pop
mov
add
call
jge
mov
sub
out
cmp
jne
dec
mov
fisttps
loope
adc
mov
pop
xchg
sbb
ss
jp
fimuls
inc
dec
push
enter
bound
jno
in
inc
mov
insl
or
mov
jns
fnstsw
and
imull
xlat
inc
sub
enter
push
pop
lret
sbb
adc
cwtl
es
in
test
shr
lods
mov
ja
mov
scas
test
fimull
fists
push
jae
adc
add
jno
add
push
bound
xorl
cld
xor
lds
add
dec
aad
lcall
or
mov
sub
jo
push
insl
gs
xorb
cmp
test
orl
sbb
out
push
je
loopne
js
loope
pcmpgtd
sbb
leave
sub
add
les
lods
fdivr
pusha
roll
lret
adc
or
push
mov
inc
cmp
movsb
jge
cwtl
mov
or
sbb
movsl
adc
test
out
fcmovne
pop
push
ret
gs
mov
sub
hlt
pop
hlt
fists
fmuls
and
ficoml
cmp
cmp
fmull
pusha
repnz
push
or
insb
imul
xor
dec
lret
out
aad
inc
xchg
fstpl
movsl
jno
out
mov
add
out
sub
or
pop
push
xchg
or
sti
aam
add
cmp
xchg
dec
clc
repz
add
or
ficoml
mov
andl
scas
into
push
mov
mov
push
dec
fucom
cmp
push
jl
jns
push
sbb
scas
xchg
insb
int3
cltd
aaa
lcall
inc
dec
xor
movsb
ret
dec
popf
aas
add
mov
gs
in
mov
xorl
sbb
jns
jle
clc
cmp
adc
mov
out
in
stc
cmpl
repz
fdivrs
loope
sti
fwait
data16
pushl
fldl
movsb
mov
orl
out
orl
push
pusha
push
stc
pop
or
adc
scas
xchg
push
inc
cmp
pop
mov
cmp
lds
mov
fbstp
lahf
jge
popa
lret
lahf
lahf
subl
xchg
and
push
mov
rorb
aas
gs
adc
insb
mov
cwtl
mov
stos
call
cmp
not
inc
add
fisttps
and
xchg
test
sbb
inc
xchg
das
lods
in
adc
xchg
xchg
or
cli
test
sahf
push
push
mov
jp
and
addr16
cmpsl
mov
pop
rcrl
and
out
outsw
lahf
aad
fadd
xor
ret
int
dec
mov
cmp
mov
jno
mov
ja
inc
pushf
sub
dec
out
or
add
inc
arpl
test
jbe
lods
pop
jbe
sarl
mov
lods
cltd
pop
or
ljmp
xor
sbb
sub
fwait
int3
mov
fwait
adc
pop
aad
cs
or
cmc
push
out
sub
or
xor
and
sub
mov
or
leave
push
outsl
out
push
mov
fwait
in
mov
std
insb
xor
inc
mov
sbb
push
sarl
outsb
adc
dec
loope
es
cmp
jae
in
and
daa
inc
fnstenv
add
mov
mov
mov
add
outsl
dec
shll
lcall
pop
inc
add
push
push
ss
mov
fmuls
mov
xchg
outsl
jle
lds
cmp
jo
arpl
stc
sub
out
and
pop
jnp
lds
xchg
ljmp
in
divl
adc
sbb
cwtl
mov
push
cmp
mov
idivb
and
mov
mov
xchg
lock
daa
in
xor
shlb
sub
scas
cmp
call
daa
stos
dec
les
imul
ds
cli
lea
xchg
or
sbb
sub
jp
jp
or
sahf
or
and
into
out
or
xchg
inc
orl
sbb
or
cmpb
jg
or
fs
lods
mov
jl
rorb
jo
movsl
dec
scas
push
and
sub
mov
cmp
enter
mov
dec
xor
ja
testl
jno
es
out
test
xchg
and
push
pop
lds
movsb
imul
out
dec
xchg
jecxz
arpl
sbb
add
xchg
adc
mov
mov
jmp
push
out
jno
jb
in
outsl
and
fisubrs
in
imul
int
sti
push
cmp
cwtl
jnp
pop
movsl
push
or
cmp
cmpsb
mov
sbb
mov
ret
cli
jg
enter
inc
int
popa
add
push
push
push
dec
inc
and
mov
in
jns
fiadds
and
mov
mov
push
loop
orl
mov
arpl
ds
mov
repz
inc
repz
ret
fcoml
js
lret
push
pop
pop
insl
int
push
jge
and
mov
or
stos
inc
pop
mov
or
rcr
test
fs
aam
jg
xchg
sbb
in
aaa
fcmovnu
sub
sarl
hlt
sti
sbb
je
scas
and
das
add
int3
sub
sbb
ljmp
call
movl
hlt
sti
imul
jmp
jg
fisubl
shrl
mov
ds
cld
dec
addr16
pop
ficomps
push
pusha
shlb
xor
add
push
xchg
outsb
iret
fldcw
sub
cwtl
bound
mov
adc
orb
sub
xchg
pusha
jl
cltd
stos
inc
jae
int
aaa
popa
sti
cmp
aad
sbb
pop
cmc
sbb
hlt
popf
rclb
das
je
adc
in
and
inc
and
insb
dec
jg
test
fnstcw
sub
mov
xor
xchg
xchg
xchg
adc
das
test
or
mov
out
jb
dec
inc
lds
daa
insl
int3
xor
lea
pop
scas
repz
aam
fdivr
cmp
ficompl
add
jge
sbb
jb
mov
mov
cmc
fcmovu
loope
scas
in
cwtl
cmp
mov
scas
insl
sbbl
js
cwtl
dec
out
sbb
rcll
popa
cltd
outsb
popa
stos
mov
out
iret
scas
loopne
hlt
dec
sub
ss
mov
push
repz
pop
pop
xchg
sbb
pop
mov
stos
sbb
mov
mov
in
fidivrl
mov
in
sbb
stc
stos
push
aam
mov
xchg
pop
lods
sbb
outsl
movsl
lds
divb
in
xchg
imul
stos
mov
cmp
mov
das
pop
repnz
scas
mov
xor
mull
shll
imul
cmpsl
mov
add
pop
bnd
int3
xor
fildl
adc
push
mov
lock
les
mov
jns
xor
out
push
aas
into
mov
movsb
push
fstl
lds
mov
and
cmp
cmp
cwtl
movsl
std
loopne
fwait
sub
loope
add
or
jno
orl
push
inc
sub
push
int
stc
mov
pusha
mov
mull
ljmp
push
push
out
addr16
mov
mov
imul
divl
mov
jbe
inc
pop
leave
arpl
or
dec
fcompl
add
cmp
xchg
int
fmuls
ss
cmp
sarb
imul
insb
or
and
dec
cmp
cmpsl
mov
push
ja
mov
stos
xor
mov
aas
pop
or
or
imul
push
imulb
jp
es
and
test
fstps
jecxz
rolb
inc
xchg
sbb
das
sbbl
shlb
popf
push
idivb
add
xchg
fisubrs
in
jg
pushf
add
sbbl
pop
cmp
loope
adc
pop
cmpsl
ljmp
outsl
idiv
int3
jg
pop
pusha
add
out
sub
addl
pop
xor
addl
setae
je
xor
subb
cmp
cmpb
adc
call
fsubrl
or
not
add
cmc
clc
push
stos
out
lret
jp
add
ss
movsb
jns
mov
sarl
subl
jbe
dec
sbb
cld
add
xor
lcall
movsl
jno
imull
outsl
popa
daa
cmp
inc
mov
dec
outsb
inc
cmp
repz
jns
lods
ja
rolb
jnp
stos
xchg
aas
fcomp
movsl
popf
jmp
cmp
inc
out
sub
in
xchg
scas
enter
enter
cmp
cmpsl
mov
mov
mov
fistpl
dec
shlb
aad
pop
add
out
or
test
mov
adc
mov
scas
lds
jg
mov
andl
mov
pop
xlat
cld
les
cmc
mov
sbb
cmp
cwtl
pop
hlt
add
push
sub
stc
lds
mov
jecxz
mov
shlb
cmpsw
mov
clc
insl
ljmp
stos
ret
scas
fidivrs
daa
fwait
pop
decb
jnp
mov
fcomip
sbb
sbb
imul
les
test
ljmp
lods
inc
mov
xor
lcall
inc
xor
into
cmp
icebp
fcompl
push
add
mov
das
shll
or
inc
mov
add
das
repz
pop
into
or
in
ret
cmp
nop
out
push
push
inc
ffreep
xor
push
xchg
scas
mov
and
xchg
mov
cs
mov
cli
loopne
pop
fcomps
scas
in
xor
cmpsb
int
mov
loop
jnp,pt
sbb
int3
mov
fidivl
out
jne
pushf
test
rcrl
sub
and
fists
sarl
in
fldcw
neg
mov
stos
and
push
out
test
pop
adc
adc
xchg
dec
jno
insl
push
rolb
stos
sarb
sub
inc
mov
cmp
dec
das
std
test
sub
rorl
add
cmp
and
cmpsl
rorb
rcr
sti
lods
ja
subl
xchg
je
push
mov
lods
and
add
xor
xor
inc
lock
sahf
push
push
pop
lods
or
clc
and
push
jo
push
stos
movsl
or
dec
paddb
pop
mov
pop
cmp
jae
mov
adc
shlb
in
orb
xchg
lods
jmp
pop
imul
loopne
les
mov
jbe
sub
sub
xorl
repz
sti
mov
xor
jo
enter
sbb
xor
xor
dec
inc
push
inc
sub
or
adc
rol
and
jae
and
push
rorl
movsb
pop
sti
sub
dec
cltd
test
daa
jno
jge
cltd
sub
cmp
sub
je
nop
cmpsl
fistpl
lods
mov
dec
int
das
mov
xor
or
cmpsl
mov
movsb
pop
andb
jns
loope
insb
and
test
jno
push
into
mov
shr
add
mov
jge
les
scas
mov
and
ja
movsl
into
andb
inc
adc
ss
cmp
xor
cmp
mov
xor
and
int
leave
mov
sub
seta
shlb
mov
pushl
mov
in
adc
pop
mov
negb
lcall
daa
pop
pop
dec
mov
imul
dec
push
adc
lods
jp
sbb
pop
mov
sub
xchg
inc
and
ret
cmp
outsb
lods
shrl
iret
shr
test
mov
dec
adc
and
imul
mov
pop
lods
das
adcb
stc
leave
sbb
lret
stc
add
in
jl
push
inc
mov
shl
mov
cwtl
mov
adc
sub
add
cld
jbe
xchg
jge
inc
movsl
and
push
mov
push
sarl
push
pop
push
jp
lds
repz
mov
pop
imul
jo
sbb
std
dec
loopne
adc
iret
pop
iret
ds
imul
adc
scas
cmp
pop
cli
push
filds
jecxz
inc
cmpsl
mov
popf
xor
mov
xor
int3
pop
scas
dec
repnz
shrb
dec
adc
sub
xchg
addb
xchg
lock
aad
mov
xchg
cld
push
insl
or
mov
cmpsb
ja
pop
or
inc
lods
and
icebp
and
aas
push
sbbb
mov
add
adc
repnz
sub
test
sarb
and
jg
insl
outsl
faddl
adc
je
test
loopne
mov
inc
jo
out
push
jge
sbb
out
jl
mov
dec
pop
lods
inc
and
fdivs
sarl
lods
mov
mov
pop
push
in
pusha
cmpsl
cmc
out
imul
xlat
and
lea
sbb
inc
add
imul
and
lret
test
mul
sub
lods
push
fmul
mov
sub
out
test
sbb
jne
xchg
aad
xor
rorl
inc
movsl
sub
movsb
xchg
xchg
xchg
adc
sbb
loope
outsl
call
addb
sbb
push
push
sub
out
add
pop
push
pop
mov
push
movsb
out
mov
hlt
push
aaa
sub
stos
and
pop
push
pop
cmp
jp
lds
sbbb
mov
or
inc
rcll
lea
and
test
jnp
xchg
jecxz
cmp
outsb
lock
push
scas
dec
rcll
int
lret
mov
andb
xchg
adc
mov
repnz
sub
ja
pop
pop
pushf
mov
xor
mov
cmp
nopl
dec
mov
into
cmp
loopne
into
movsl
iret
dec
or
cli
test
ja
test
mov
gs
stc
cmc
packsswb
sub
fldenv
outsl
lock
cs
das
push
test
xor
adcl
dec
cmp
cmpsl
in
cmp
scas
or
mov
sbb
stos
or
xchg
ret
pop
mov
adc
mov
dec
mov
sahf
test
push
xchg
sub
dec
cmc
jo
mov
push
pandn
loopne
cltd
mov
xor
dec
in
pop
mov
lahf
int3
movsl
or
icebp
jle
je
push
jne
xchg
lods
xchg
and
stos
lds
int3
iret
mov
cmpsl
fisttps
cmp
sub
shl
adc
lds
pop
addr16
and
out
stc
pushf
cmp
jle
cmp
jmp
mov
movsb
dec
adc
cmpsb
and
dec
push
mov
out
pop
js
fildll
xchg
stc
cmp
inc
push
lods
in
out
push
or
push
subl
pusha
xor
xor
lret
popf
mov
clc
jb
sbb
mov
bnd
and
inc
xchg
cmc
xor
pop
mov
pop
and
and
ret
ficoms
sub
mov
outsb
in
mov
mov
mov
mov
cltd
jne
adc
dec
idivl
inc
push
sbb
mov
test
inc
or
aam
xor
cmp
jp
jle
out
mov
push
jmp
mov
or
loop
jbe
inc
out
sbb
lahf
dec
xchg
mov
sti
dec
inc
call
out
lock
and
lcall
ss
mov
movsb
push
xor
xchg
mov
xor
fs
add
add
sub
dec
fildl
sahf
lds
or
iret
aad
cmpsl
leave
call
lahf
rorb
xor
pop
test
test
cmp
cmp
in
jnp
pop
ror
pop
jns
xchg
xor
push
std
mov
inc
cmp
cmpsb
cmp
iret
adc
ja
adc
idiv
stos
add
stos
adc
dec
mov
in
subps
adc
or
inc
jb
add
inc
mov
add
jno
push
fsubs
jo
popf
push
inc
dec
repz
inc
sub
or
lds
divb
arpl
out
mov
shll
sbb
insb
mov
movsl
shrb
dec
dec
sub
mov
mov
xchg
add
dec
in
push
inc
push
cmpl
fists
push
nop
lret
out
jge
mov
jns
jnp
push
shrb
dec
lds
mov
mov
int
pop
dec
or
cmp
mov
fldcw
fs
xor
xchg
shlb
cmpsl
sbb
test
inc
cmp
add
or
loope
and
mov
sti
lock
jg
faddl
and
gs
inc
les
sbb
and
stc
out
or
stos
cmpl
add
pop
sbb
mov
pop
int
out
dec
insb
in
cmp
aam
jmp
mov
lods
repz
sbb
mov
ljmp
test
fidivrl
lcall
cmp
mov
xchg
mov
popa
or
das
xor
lret
test
mov
jns
cmp
idiv
movsb
xchg
xchg
cmp
bound
jb
push
add
and
dec
pop
rorl
js
jbe
fmull
adc
push
loop
or
daa
sub
stos
inc
stc
push
cmp
enter
cmp
sub
xchg
es
clc
sub
pop
dec
jmp
add
lahf
data16
lods
dec
and
mov
sub
push
inc
mov
dec
addr16
push
fadd
leave
lret
stc
push
pop
movb
jb
loope
out
imul
fcoms
cld
lds
imul
mov
pop
repnz
int3
loopne
push
shll
test
push
fidivl
jle
or
mov
nop
xchg
enter
cmp
sub
dec
sub
mov
mov
push
std
neg
imul
push
add
popa
mov
xchg
inc
push
sbb
sub
imul
mov
sub
sub
enter
inc
lcall
fistpl
pop
jge
sbb
mov
push
scas
add
xchg
inc
or
inc
mov
cmp
jecxz
and
dec
lds
pop
adc
add
into
adcb
adc
inc
arpl
pop
divl
popf
lock
insl
insl
sarb
cmpsb
add
jecxz
adc
mov
bndmov
pop
xlat
push
cmp
inc
js
fisubrl
stc
cltd
jns
fdivrl
adc
stos
add
mov
fiaddl
lret
dec
jns
xchg
or
mov
icebp
scas
push
int3
pop
xor
xchg
jae
and
les
push
pop
les
mov
sub
ret
ret
hlt
dec
xor
shl
mov
cmp
std
insb
sub
sbb
insl
es
lret
mov
mov
or
push
pop
repnz
jno
bnd
cmp
sub
data16
ret
pushf
bound
add
decb
ficomps
mov
dec
sub
popa
mov
mov
enter
or
and
fistps
hlt
xchg
mov
push
loop
imull
mov
aam
push
cld
mov
jg
dec
call
xchg
out
push
jecxz
dec
push
dec
inc
jp
cltd
testl
jno
sbb
fs
sub
and
inc
cmpsb
stc
sti
fcompl
negb
mov
ja
pop
fs
outsb
lcall
inc
fwait
mov
sbb
repnz
fisubl
das
xchg
mov
in
lret
repnz
int3
jno
outsb
data16
cmc
xor
or
mov
jbe
add
lods
sti
jge
shrb
adc
popa
je
les
xchg
mov
adc
insl
data16
jge
add
enter
aad
xchg
stos
pop
in
mov
ss
mov
out
mov
or
jbe
jbe
lret
addr16
cmc
sbb
stc
cmp
mov
push
das
cs
jle
stos
je
movsl
out
dec
and
shrl
mov
sarb
shlb
lea
xchg
dec
jo
jne
shll
mov
nop
lret
cmp
loopne
sbbl
adc
cs
pop
hlt
and
insb
jg
or
movsl
jg
or
sub
jp
mov
mov
test
cmp
bound
xor
jle
out
mov
sbb
mov
frstor
jnp
ss
nop
dec
mov
enter
arpl
andl
daa
in
and
cmp
mov
mov
fcmovb
lret
sbb
fwait
mov
pop
imul
das
repnz
repnz
hlt
negl
and
mov
push
dec
lock
mov
popf
cli
mov
ret
add
movsl
fwait
lret
inc
pop
fisubs
outsl
test
push
xor
in
dec
hlt
leave
push
repnz
icebp
mov
xor
cli
inc
push
sub
sbb
mov
bound
aaa
or
and
mov
mov
cmp
movsb
mov
sbb
leave
lea
rorb
icebp
or
rcl
xchg
clc
imul
jno
xchg
or
jg
mov
test
vmovq
add
ja
jl
cmpsb
dec
fidivl
adc
lock
pop
lods
mov
clc
outsw
outsb
fdivr
lcall
jno
testl
pop
test
inc
jo
pop
pop
in
or
aam
cmp
ljmp
inc
outsb
stc
fcmovb
adc
cmp
jbe
mov
mov
cmp
xchg
inc
subb
add
cmp
je
pop
mov
jl
lock
xchg
arpl
push
push
in
add
jle
popa
out
and
sbb
jge
mov
cmp
cli
mov
adc
xchg
mov
and
insl
cmp
mov
pop
pushf
push
popa
gs
or
push
push
cmp
loopne
out
popa
sub
jp
sbb
arpl
out
add
mov
test
scas
ficoml
jle
jp
or
push
mov
pop
pushf
pop
movsb
xchg
sbb
or
adc
daa
lret
jo
jmp
xor
loop
pop
dec
mov
jmp
pop
inc
mov
add
std
int3
push
xor
inc
sub
jno
and
jmp
cld
mov
jae
lock
pop
in
adc
imul
push
mov
mov
rol
or
pop
movzbl
lds
xor
mov
in
jns
sub
sbb
mov
sbb
mov
lcall
xor
test
add
aad
rcll
loop
enter
mov
dec
xchg
adc
mov
mov
int
ss
sti
dec
mov
cmp
jge
xlat
test
adc
outsb
jmp
or
out
adc
aad
loope
movsb
dec
je
push
jne
jl
dec
push
shlb
call
push
xor
scas
add
test
lock
cltd
das
inc
sahf
leave
mov
in
pusha
push
enter
sub
cld
call
fldt
pop
scas
push
test
idivl
xchg
and
push
xor
int3
cld
mov
dec
add
adc
fildl
dec
dec
ljmp
push
add
clc
lret
jnp
aad
pop
aaa
cmp
addr16
jle
sar
insl
incb
je
ret
popa
sbb
and
xor
fwait
dec
mov
stos
data16
data16
int3
sbb
gs
mov
imul
mov
pop
xor
push
test
pop
pop
lret
sbb
shrl
fstpt
stos
loope
jbe
dec
or
ror
push
mov
pop
push
arpl
adc
and
pushf
mov
fnsave
scas
mov
add
lret
mov
std
push
aad
lods
fidivrs
aas
push
pop
jmp
inc
das
cmp
cmp
xor
cmp
adc
and
cltd
mov
out
dec
push
fucomip
inc
pop
sub
stos
loopne
or
sbb
ja
loop
xchg
xor
pop
orb
test
sti
testb
jne
jg
or
mov
dec
and
xchg
adc
scas
push
pop
daa
sub
push
xor
std
dec
ja
mov
xor
mov
and
push
adc
lods
jecxz
pop
in
or
les
fsts
inc
stos
sbb
loop
shlb
aas
clc
and
mov
fcoms
xchg
and
adc
cmp
movswl
pop
lock
mov
clc
jg
pusha
sbb
xchg
lret
mov
mov
xchg
mov
push
fistl
ljmp
add
adc
mov
push
or
and
stos
jle
xlat
out
subb
test
cmpl
leave
lods
sub
and
cmp
push
icebp
xor
test
pop
mov
leave
mov
jo
inc
fstl
sub
bound
jne,pn
mov
pop
and
sbb
les
sbb
inc
mov
inc
inc
lods
sbb
int
stos
xor
dec
sbb
mov
stc
jne
dec
push
xor
pop
rol
jnp,pn
dec
stc
pop
cmc
xchg
add
push
insb
rorb
and
cmc
lods
pop
push
fnstenv
adc
aad
xor
cld
fists
fldenv
scas
jg
jne
dec
xchg
xor
imul
push
inc
pop
adc
sbb
inc
mov
or
xor
mov
popa
rcrb
jnp
xchg
sahf
dec
aaa
mov
rcrl
jo
nop
out
jle
inc
push
repnz
loopne
mov
sub
mov
test
push
xor
xor
cmp
jns
inc
or
mov
lcall
ror
jge
cli
test
addl
pop
into
add
and
sbb
inc
jg
xchg
add
inc
adc
sub
xchg
daa
push
lods
mov
je
dec
jno
xchg
lea
outsl
and
movsl
jns
test
and
data16
sahf
mov
mov
sbb
mov
insb
ja
cmc
lret
mov
mov
mov
sbb
xor
lock
data16
int3
mov
mov
dec
and
fs
aad
xchg
mov
dec
adc
fimuls
call
cmp
sub
shl
add
sahf
inc
out
sbb
jg
mov
push
fisttps
push
sbb
into
inc
ret
pop
aas
xor
push
test
jg
pop
add
into
mul
or
decb
jmp
pop
lret
mov
outsb
push
cmp
sub
lcall
lock
adc
lods
lds
popa
in
inc
add
mov
or
or
cmp
inc
jb
addr16
imul
lret
xchg
das
std
xor
cmp
mov
lcall
andb
inc
rcrb
adc
dec
out
dec
sbb
push
test
jle
lcall
xchg
fisubrs
jg
adc
push
iret
pop
adcl
inc
push
test
idivl
mov
jnp
aad
mov
and
push
inc
das
rcr
jp
fcoml
cmp
inc
int
sbb
imul
adc
xor
movsb
add
push
arpl
das
cwtl
dec
push
cmp
pop
mov
fwait
sub
mov
mov
inc
jle
lahf
jo
pop
into
cltd
mov
add
js
daa
aas
out
jge
mov
mov
mov
jp
shrb
sbb
int3
jmp
iret
clc
sbb
scas
lcall
inc
jle
out
sahf
lds
mov
mov
lds
jb
xchg
inc
xchg
cmp
cmp
and
pop
dec
mov
fnclex
mov
jns
mov
jbe
lods
inc
xor
jnp
stos
inc
mov
imul
aad
mov
dec
fcmovne
repz
inc
pop
mov
sub
xor
push
push
rol
xor
cmp
mov
fcompl
fbstp
add
dec
stc
mov
xchg
push
arpl
inc
cli
or
sarb
cld
lcall
mov
jg
outsl
cmp
das
dec
pushf
sbb
hlt
movsl
mov
dec
jle
stos
push
mov
test
sti
movsb
push
rorb
ds
imul
cmp
sub
sti
outsb
adc
xchg
into
xchg
jae
scas
movsb
jp
clc
pop
sbbl
mov
out
les
and
stos
mov
bound
pop
clc
add
or
out
pop
sub
aaa
packsswb
pop
or
inc
test
add
dec
add
xchg
aad
pop
out
hlt
or
jb
pop
fwait
mov
xor
bound
mov
out
in
aad
adc
lock
movsb
std
mov
fwait
out
inc
mov
cmc
mov
pop
data16
mov
xlat
fdivrs
dec
std
or
sahf
push
sti
sbbb
into
mov
jmp
jno
leave
shrl
fcoms
ss
les
inc
cli
dec
xor
or
or
sub
ja
mov
stc
adc
dec
decb
mov
aas
in
nop
pop
push
lcall
mov
pcmpgtd
loopne
shll
jecxz
mov
scas
dec
jb
pusha
sub
insl
test
xchg
jecxz
xchg
mov
fwait
push
sarb
mov
popa
mov
repz
loopne
pop
es
sbb
sbb
sbbl
insl
nop
inc
aad
xchg
mov
jns
adc
out
mov
sarl
add
pop
mov
aaa
std
fwait
lahf
jmp
xchg
daa
cmovg
rolb
aad
push
popa
arpl
mov
icebp
into
imul
popa
ljmp
mov
sbb
push
push
and
das
xlat
pop
mov
push
mov
or
cwtl
rcll
inc
lock
es
push
mov
mov
repnz
xor
sbb
cmp
inc
mov
ret
adc
xchg
mov
dec
out
jne
push
jg
outsb
jmp
divb
sub
ret
push
xchg
dec
pop
xchg
fnstenv
push
pop
lods
outsb
stos
jg
mov
aas
or
inc
or
jo
cmp
jo
pop
dec
mov
or
sub
or
idivb
fidivrs
xor
push
int3
mov
xchg
pop
fidivrs
dec
push
dec
fxch
and
loop
jns
adc
movsl
and
addb
bound
les
gs
and
push
inc
pop
sti
sub
and
xor
mov
push
lcall
mov
outsl
ds
ss
in
imul
pop
inc
mov
ds
mov
int3
pop
das
sbb
movsl
adc
mov
inc
jae
fdivs
sub
addr16
movsl
roll
lods
or
mov
pop
sbb
call
push
in
inc
jg
sub
mov
jecxz
mov
jg
inc
lret
push
addr16
inc
imul
mov
in
xchg
insb
sub
dec
jle
mov
fnstenv
lea
push
pushf
popf
icebp
insl
movsb
adc
push
mov
fdivrs
stc
pop
sbb
mov
sbb
push
out
loop
jmp
dec
xlat
jnp
arpl
lahf
cmpsb
rcrb
adc
xchg
add
xchg
push
mov
pop
xchg
xchg
jno
mov
cmp
cmp
je
shrb
dec
popa
add
or
add
or
dec
orb
test
mov
mov
in
cltd
loope
pop
xchg
jnp
cmc
mov
outsb
pop
mull
and
inc
dec
repz
adc
stos
and
or
cmpsl
scas
loopne
or
or
pop
gs
dec
sbb
sub
or
xor
out
scas
xchg
movsl
and
add
shll
sub
inc
data16
repnz
imul
mov
scas
pushf
das
xor
iret
sbb
push
jae
dec
pop
aaa
cmc
sub
and
and
add
popa
mov
add
dec
xor
jb
cmp
mov
xchg
sarb
lahf
adc
fidivl
add
rcrb
shrb
sub
lock
dec
insb
adc
cmpsl
test
int
pop
stos
fcmovb
fadd
mov
insl
xlat
xor
push
xor
sbb
mov
mov
push
sub
daa
mov
push
leave
push
xchg
jge
and
push
fwait
add
orps
fnstcw
outsb
sub
stc
ljmp
outsb
adc
mov
jmp
mov
lahf
movsl
dec
leave
cwtl
dec
fisttpll
jnp
push
cld
fildl
push
mov
sti
mov
movsl
and
add
aam
inc
clc
adc
ud0
stos
mov
xchg
add
mov
push
mov
mov
add
loop
push
ljmp
mov
sbb
iret
outsb
stos
push
inc
rolb
add
dec
xlat
inc
pop
scas
cltd
push
mov
sub
inc
cwtl
sub
fs
cmpsl
rorl
and
imul
sbb
mov
enter
iret
nop
in
or
jle
mov
pop
xor
js
fwait
cwtl
das
pop
inc
mov
adc
dec
push
popa
shrb
cmp
pop
dec
scas
jge
dec
pop
scas
popa
sbb
lcall
jo
and
add
or
andb
lret
inc
outsl
push
call
in
xor
das
icebp
xor
out
and
jp
ret
out
mov
inc
nop
pop
dec
popf
mov
dec
or
jle
test
fcom
or
cltd
mov
push
int3
fistl
movsl
imul
mov
cli
les
add
les
sbb
xorl
es
js
movsb
mov
lcall
cmp
les
push
add
jmp
push
dec
mov
cwtl
pop
idivb
or
cmp
mov
add
in
mov
mov
sbb
mov
mov
push
test
cltd
xor
cmp
xchg
push
mov
arpl
inc
test
pop
adc
int3
mov
lods
mov
outsl
mov
dec
daa
gs
sub
mov
test
adc
cmpsl
sub
jae
mov
sub
gs
pop
sahf
pusha
in
cs
lret
pop
leave
inc
insb
mov
sbb
xor
neg
mov
mov
cmc
inc
cmp
arpl
push
jae
imul
add
push
or
sub
lcall
push
lret
xor
cmp
loop
fs
orl
pop
xor
repz
mov
adc
sbb
xchg
mov
repz
outsb
int3
lret
scas
lds
pusha
adc
mul
dec
cmp
ret
insl
int
ss
cwtl
pop
mov
mov
bnd
xchg
bound
jmp
xchg
cmpsb
idivl
xorl
lret
xchg
dec
mov
in
lock
jne
push
jle
xorb
and
and
pop
sbb
scas
mov
lods
and
sub
aam
test
push
std
or
mov
xor
in
outsl
inc
ret
adc
xchg
xchg
outsl
and
loop
xchg
xchg
lret
mov
jno
sub
mov
and
cmc
daa
and
shlb
xorb
inc
jecxz
xchg
scas
or
stc
push
ss
popf
lods
pop
jbe
push
pop
mov
movsl
mov
fcomps
pushf
and
pop
sti
ret
out
push
test
ret
dec
scas
ja
add
subl
push
in
psllw
pop
rcl
insl
loopne
mov
push
mov
call
sbb
lahf
jp
std
fstps
data16
scas
cmp
xor
fsub
test
sub
mov
adc
stc
sbb
cs
lret
mov
sahf
jmp
push
cmp
xchg
fstps
dec
cld
lret
pop
rorb
data16
std
xor
inc
add
loope
fildll
cltd
cmp
mov
mov
fwait
and
adc
cs
scas
dec
iret
mov
xchg
outsb
cltd
sub
jg
push
jbe
js
dec
push
pop
cmp
outsl
pop
dec
sub
push
sti
mov
xchg
pop
cmp
push
jb
mov
cli
and
add
and
cmp
and
inc
xrelease
sbb
fbstp
mov
das
inc
cmpl
inc
cmp
sarb
inc
xor
jae
cli
push
sbb
dec
fwait
test
push
and
cmp
mov
add
sarl
imul
sbb
xchg
xor
stos
sbb
mov
scas
mov
xor
filds
into
neg
push
nop
push
adc
dec
pop
inc
xlat
in
fs
cmp
shr
add
aam
pop
clc
and
mov
imulb
or
xor
jmp
aad
inc
sub
mov
xor
xor
aaa
cltd
addb
xchg
adc
mov
hlt
pop
cld
aas
xor
cmp
fildl
inc
sbb
les
enter
cmpsl
and
jge
cmp
js
inc
sub
and
xor
pop
jo
and
adc
imul
pop
daa
ficomps
loop
fstps
mov
in
pop
add
in
cs
dec
mov
ror
add
loopne
aam
mov
negl
mov
mov
mov
arpl
mov
adc
lret
jp
test
cmpsb
ds
insb
jnp
mov
es
mov
mov
sub
cmp
mov
lret
jnp
mov
add
outsb
sub
and
sub
mov
mov
inc
cmpl
test
xchg
rcrl
pop
popa
sub
mov
pop
mov
push
pop
jle
push
movsl
test
xor
pop
pop
jg
mov
xchg
mov
and
lds
stc
es
into
mov
pop
addr16
std
mov
ljmp
arpl
test
lods
in
pop
lret
push
mov
mov
out
sub
sub
pop
pop
xchg
or
sub
pop
outsb
fldcw
in
shlb
or
loope
adc
inc
mov
mov
cvtps2pd
rol
pop
xor
subl
jnp
cmpsl
add
xor
mov
mov
xchg
cli
push
pop
jmp
cmp
push
call
ss
pop
xchg
xchg
ficomps
push
mov
stos
xchg
jecxz
jp
push
je
mov
xor
cmp
mov
cmp
pushf
xchg
enter
adcl
sti
ljmp
jb
jmp
dec
mov
hlt
int3
fcomps
cmc
xor
push
mov
fisubs
lock
inc
xchg
movsl
cltd
mov
inc
lahf
lock
mov
pop
outsl
add
into
jb
lods
mov
mov
dec
fdivrl
movsb
fwait
loope
cmp
mov
gs
add
jp
aaa
or
sahf
pushf
sub
loop
xor
or
in
lfs
mov
mov
adc
lods
add
loope
in
cltd
mov
push
ret
push
bnd
aam
or
mov
rcl
xor
jbe
mov
sub
movsb
clc
std
int3
xchg
jno
cmpb
jnp
or
or
xchg
mov
in
loopne
into
sbb
movsl
mov
pop
mov
dec
push
test
frstor
dec
pop
mov
fisttps
add
push
popa
sahf
sti
push
fldl
cmp
inc
fs
mov
cltd
cmp
inc
xchg
xchg
ret
or
imul
loop
xchg
pop
inc
ljmp
mov
ficoms
mov
mov
popa
or
adc
add
xchg
cmc
pop
or
push
aas
stos
add
ds
gs
xchg
push
cmpsl
mov
mov
jo
push
mov
xchg
fstpt
xchg
insb
xchg
mov
xchg
shl
cld
ficompl
lahf
leave
or
cmp
mov
mov
adc
fildll
leave
push
aam
push
in
insl
pop
flds
dec
inc
xchg
lahf
int3
addr16
xor
dec
adc
imul
adc
testl
daa
jb
sub
in
mov
jno
insl
es
pop
mov
sub
and
push
xor
xlat
add
es
xor
addb
fisubrl
sub
cmp
cmp
pop
push
in
int3
lock
pusha
mov
pop
mov
cmp
jb
repz
pop
fsubl
insb
xchg
cltd
ret
xor
repz
mov
jno
sbb
mov
pop
mov
inc
out
aam
jne
pushf
fs
mov
dec
fs
sub
cltd
jns
mov
daa
jno
jl
push
mov
jnp
pop
movsl
movsb
sahf
fistl
cmpsb
in
sub
cltd
xorb
sub
test
sar
adc
sub
insb
bound
xor
scas
test
and
dec
sbb
aam
shll
and
inc
imul
or
cld
loopne
pop
outsl
cmp
xorl
push
fwait
jbe
dec
daa
push
or
pop
inc
jecxz
scas
mov
jmp
mov
scas
popa
dec
daa
mov
leave
test
bound
push
pusha
divb
aad
imul
fcoms
test
push
xor
call
jecxz
adc
out
jl
out
sbb
mov
int3
clc
add
cmp
sbb
popa
adc
mov
pushf
fs
lcall
lret
and
aas
mov
adc
xchg
adc
cmpsl
scas
lds
adc
rolb
sbb
popa
out
subl
lock
fucomi
imul
or
stos
flds
out
adc
lea
or
stos
mov
out
mov
into
dec
mov
dec
xchg
xor
fdivrp
push
sar
mov
test
cwtl
mov
adc
push
cmp
add
imul
notl
cltd
pop
leave
xor
test
inc
sbb
mov
in
mov
sbb
dec
xor
imul
rol
lock
mov
outsl
enter
movsl
std
mov
std
add
insb
jns
sahf
mov
fisttpll
inc
push
mov
fdivrl
mov
xor
add
nop
lods
out
pop
sbb
shr
call
mov
gs
aam
loop
aad
sbb
insb
lock
xchg
dec
pop
xchg
mov
jae
adcl
loope
jo
push
pop
stos
out
inc
mov
clc
sub
or
fs
cltd
push
pop
add
in
xor
cmpsb
je
add
xchg
add
loopne
fildl
imul
call
fs
and
incl
sbb
mov
cltd
jno
mov
sub
mov
sbb
cltd
xchg
fmuls
sti
pop
and
in
cli
dec
xchg
loope
mov
or
xchg
mov
imul
pop
jg
loopne
fwait
jo
mov
pop
addr16
sbb
leave
cs
cltd
lods
adc
adc
out
xlat
add
in
cmp
out
lret
testl
movsb
fimull
mov
add
sub
pop
in
sub
mov
push
cli
push
filds
sbb
in
push
stos
popa
stc
data16
add
loope
andl
jb
mov
mov
mov
popf
in
sbb
lock
inc
insl
xor
sbb
ss
jae
icebp
lret
jnp
lock
jb
mov
stos
test
daa
sbb
adc
cmc
cmp
mov
mov
push
pop
fidivs
dec
inc
lret
ret
xchg
and
inc
aaa
mov
sahf
clc
adc
mov
int
sbb
adcl
adc
cmp
or
or
and
inc
pop
xor
fnstsw
inc
pop
jecxz
rcl
mov
dec
xlat
pushf
mov
dec
aad
cltd
mov
xor
jnp
or
stc
cli
adc
daa
mov
push
mov
mov
push
pusha
xlat
pop
cs
stc
lret
dec
pop
mov
scas
xchg
jae
xchg
jecxz
addr16
push
dec
cmp
adc
aad
add
test
pop
out
scas
mov
movsl
mov
mov
fdivrs
xlat
push
jae
sbb
lahf
outsl
mov
sub
gs
or
jns
stos
rol
lea
sub
mov
sbb
lds
and
rclb
mov
cmp
test
xchg
sub
fcomps
pop
mov
jo
divb
dec
jmp
in
repnz
movsb
je
movl
loop
push
lcall
jmp
aad
les
lods
xor
fdivl
repz
xor
mov
incb
les
cmpsb
loope
in
inc
mov
aad
lods
xorb
fimull
mov
sbb
or
xor
bound
popa
pop
or
mov
and
mov
scas
je
or
lods
in
std
xchg
fists
lods
out
cmp
mov
jnp
and
data16
add
fldcw
es
adc
ja
mov
mov
pop
push
xor
push
sbb
in
jb
inc
sbb
pop
stc
xchg
xchg
adc
push
out
in
cmp
and
stos
sbb
lods
mov
pusha
mov
test
xor
ljmp
cmp
adc
fcompl
out
inc
push
jmp
sahf
mov
push
sbb
pop
mov
stos
nop
dec
mov
arpl
mov
or
repnz
das
adc
cltd
push
push
dec
or
xor
rcl
addr16
outsl
dec
aaa
and
sbb
mov
daa
test
fs
mov
sub
or
xchg
cmpsl
cmpsl
mov
loopne
xlat
or
addl
mov
adc
cs
mov
movsl
cmpb
vmread
jbe
mov
cld
in
jge
iret
in
sarb
sti
and
mov
and
clc
enter
pop
push
in
xorl
mov
ret
cmp
push
pop
das
inc
andl
outsb
movsl
mov
xor
xorb
aad
adc
test
aaa
push
jmp
rcr
ja
out
mov
push
jmp
in
fnstsw
xorl
je
cltd
push
fidivs
aaa
lds
je
dec
addr16
cld
xchg
data16
aaa
mov
bound
push
loopne
pushf
push
add
sub
aas
stc
test
leave
stc
popf
je
push
push
ljmp
mov
adc
jle
jbe
ja
sbb
sbb
push
or
xorl
adc
clc
mov
jae
xor
dec
pusha
fmuls
or
xor
xor
mov
das
fnsave
push
mov
jle
inc
push
call
inc
inc
dec
xchg
xchg
sub
loopne
push
push
push
sbb
ljmp
and
pusha
and
jbe,pt
push
aad
les
addb
loopne
or
shrl
inc
cmp
pop
arpl
push
sub
insb
pop
xor
out
xchg
sub
test
shl
mov
fdivrs
int
movsl
and
aad
add
xchg
mov
insb
test
sub
xchg
inc
dec
dec
pop
enter
and
mov
in
test
mov
push
enter
mov
mov
insb
push
push
pop
sbb
mov
push
rcrl
lahf
pusha
sbb
dec
movsb
jne
cmp
pop
xor
push
pop
or
imul
lret
and
cmp
fldz
jg
and
lock
sbb
add
das
adc
adc
dec
popf
test
xor
ds
roll
jg
dec
inc
and
and
movsb
push
aas
test
clc
dec
test
mov
push
sbb
pop
sub
push
xchg
mov
lock
mulb
mov
jns
xchg
cltd
cmp
sbb
xlat
xor
aad
adc
cltd
mov
sarl
sub
iret
shrb
sub
push
mov
enter
pushf
push
aas
mov
mov
std
xor
ja
sbb
xor
mov
out
sbb
outsl
adc
lret
inc
fbld
aas
push
std
fisubrl
xor
inc
shr
pop
or
enter
jmp
adc
cltd
xor
movsb
inc
fistps
imul
push
or
jnp
cmpsb
lods
insb
fwait
sub
add
lea
pop
lods
rcll
mov
gs
xchg
icebp
aas
adc
xchg
xchg
cwtl
sub
nop
push
fidivrs
aas
in
mov
insl
daa
fstpt
cmp
lods
rcll
cmc
push
xlat
xchg
cmpsb
cmp
mov
enter
xchg
push
sub
cmpsl
ficomps
das
mov
fs
pop
mov
jp
xchg
jl
or
xchg
mov
add
xor
mov
cmpsl
ret
fnstcw
mov
nop
xchg
test
rclb
lret
mov
into
loopne
inc
xchg
sti
mov
push
mov
mov
xchg
cmp
cmp
out
lret
inc
sub
pop
jnp
xchg
xchg
lods
cmpsl
adc
icebp
inc
jg
inc
outsb
xchg
cmpsl
and
xchg
cld
add
js
cmp
arpl
clc
dec
mov
adc
adc
nop
adc
mov
fs
pop
fsubrl
jg
insb
jae
lds
stos
xor
roll
outsl
insb
scas
fisttps
xchg
inc
mov
out
inc
adc
mov
es
sti
and
xor
jle
je
and
lods
or
xor
push
scas
add
popf
push
and
js
je
and
xor
sbb
lahf
test
test
inc
sbb
push
les
cmpsb
outsl
data16
ret
cmp
gs
sub
and
adc
push
push
mov
add
lahf
leave
sar
fiaddl
push
mov
push
push
jecxz
mov
aad
cwtl
cwtl
sub
mov
pop
mov
jmp
sub
in
dec
test
mov
jg
hlt
push
outsb
pop
sarb
or
xor
cli
add
push
cmp
mov
xchg
xor
test
pop
mov
push
iret
mov
push
jno
sub
fimuls
add
mov
dec
stos
insl
in
leave
jp
xchg
inc
aas
cmp
mov
popa
adc
cmp
cmp
jb
aas
test
jo
das
pop
push
sbb
xor
mov
pop
test
add
cwtl
into
hlt
es
or
xor
outsl
jns
vpmacsdql
mov
sbb
sub
or
insb
stos
stos
insl
or
sub
lods
mov
or
outsb
in
imull
push
fsubp
sub
adc
in
mov
sbbl
orb
lret
cmp
mov
nop
dec
mov
push
lods
call
push
shlb
aam
sub
sub
sbb
cmp
imul
mov
cld
std
mov
jge
dec
loopne
popf
fldt
into
stos
int
test
sbb
das
mov
adc
pusha
or
ljmp
xchg
out
movsb
push
test
shll
nop
icebp
cmc
pop
xor
push
push
fadds
insl
sbb
idiv
repnz
xchg
xor
jb
fildll
jmp
stos
test
shlb
xchg
imull
xchg
push
mov
enter
mov
or
test
jl
jns
test
imull
inc
test
jns
push
dec
call
jecxz
jg
sub
push
fldenv
jae
loopne
pop
lods
ljmp
add
in
and
pushf
inc
cmp
int
adc
or
outsb
add
cmpsl
xlat
call
lar
in
les
push
cld
mov
sub
cmp
pop
sub
push
ds
inc
fidivrs
pop
add
mov
daa
or
pop
xor
and
fcompl
je
aaa
push
or
fdivs
mov
sti
push
jle
push
inc
xchg
daa
shll
scas
nop
es
inc
ret
mov
in
scas
divb
cld
pop
repnz
inc
gs
loopne
cmp
je
mov
mov
jbe
int
push
lea
xchg
xor
enter
xchg
out
dec
je
into
xlat
sub
jg
fidivrs
repnz
jg
push
mov
sbb
int
movsb
inc
mov
and
cltd
lahf
xor
adc
inc
lahf
ret
add
lret
dec
jmp
and
inc
jecxz
pop
jb
insl
mov
int
jne
shld
scas
aad
cltd
cmp
lahf
mov
pop
cmpl
and
inc
push
xorb
shll
fiaddl
xchg
or
cld
sbb
push
mov
movsb
add
lods
fdivrs
shll
out
mov
push
xchg
push
pop
test
loopne
mov
xor
hlt
fstl
in
add
jbe
add
in
or
xchg
cmpsb
daa
stos
ret
iret
mov
pop
mov
js
into
outsb
push
xor
es
mov
jbe
pop
mov
stos
clc
jnp
into
sti
pop
or
loope
jg
lret
adc
into
popa
inc
repnz
and
andl
inc
fisubs
push
mov
push
mov
mov
jne
or
mov
inc
add
aas
in
sub
xor
push
mov
pop
loope
mov
in
or
cltd
xor
scas
mov
pop
xor
popa
les
inc
cs
pop
xor
sahf
jae
push
adc
lds
ficompl
jmp
xchg
shr
pop
std
cld
into
dec
inc
divb
rcr
cmp
andb
rcrl
jl
dec
jns
outsl
popa
fsubrl
jmp
jp
lods
sbb
fs
jnp
jmp
fcoms
jo
insl
or
mov
lcall
int
pop
loopne
cltd
lea
adc
cltd
repnz
orl
sbb
mov
push
in
mov
xchg
rolb
add
mov
mov
mov
aas
aam
loope
call
repnz
ja
pop
jle
aas
push
jae
aam
mov
and
out
shlb
adc
pop
div
lcall
jne
jl
shll
xchg
mov
sarl
sbbb
mov
push
inc
stos
frstor
mov
fidivl
sbb
cli
jecxz
mov
inc
das
mov
push
loope
mov
movsb
mov
or
mov
mov
sti
jecxz
sub
cmc
mov
push
push
cmp
sub
sti
jl
cmpsb
test
loope
inc
and
sbb
xchg
addl
jle
xchg
inc
add
testl
pop
rcr
push
cmp
xlat
add
repnz
arpl
push
xchg
jp
xchg
or
mov
xor
sub
hlt
pop
lods
fidivrl
mov
fcomp
jno
pop
xchg
dec
add
fmull
je
outsb
mov
nop
or
sti
or
hlt
shr
mov
aaa
sahf
insb
shll
or
cs
push
pop
daa
dec
movsb
inc
cmc
xchg
clc
push
aaa
fistpll
in
xchg
mov
or
lret
push
movsl
adc
or
inc
loope
sbb
push
jecxz
cli
mov
fldl
lds
and
mov
inc
push
fmul
imul
adc
lods
jmp
push
cmpsl
addl
decb
jge
mov
addb
sahf
adc
out
pop
fistpll
inc
add
sahf
rolb
outsb
mov
dec
xchg
cltd
push
push
xchg
jp
pop
inc
xor
lret
in
outsb
push
pop
add
mov
push
xchg
xor
push
jmp
lock
ljmp
mov
scas
add
sub
pop
addl
rcll
jnp
cmp
test
jno
or
int3
cmpb
outsb
out
fldl2e
mov
push
out
bound
push
sub
inc
arpl
fldcw
andnps
mov
call
sub
and
outsl
push
xchg
and
fidivl
push
push
into
xchg
outsl
xchg
jne
call
push
sarl
sub
hlt
stos
add
push
mov
negl
pop
lods
push
sbb
jnp
jns
mov
loope
ds
jecxz
mov
push
sub
imul
aam
and
daa
jno
out
push
popf
mov
pop
ret
in
pop
cmp
mov
lahf
xor
and
repnz
mov
pop
add
xor
lds
and
push
pop
adcl
orb
shrl
inc
and
stos
imul
cmp
inc
dec
lds
cmp
aad
sub
mov
push
mov
jl
lea
repnz
test
or
mov
ret
stc
stc
or
movsb
mov
inc
cs
xorb
jmp
mov
icebp
push
sub
loop
fs
clc
mov
xchg
rol
xchg
adcl
fsts
jae
mov
cmpb
adcb
cmp
cmp
jnp
jne
stos
ljmp
shrb
and
pop
mov
mov
sbb
addr16
std
lret
cltd
pop
inc
sub
popf
filds
cmp
test
cltd
sbb
sub
xchg
lods
sub
into
mov
lds
adc
shrl
aad
lea
mov
add
jne
lret
add
es
inc
add
cwtl
aas
pop
notb
aaa
pop
aaa
je
xor
addb
cltd
enter
insl
xchg
push
adc
xchg
jg
push
xchg
mov
pop
pop
dec
pop
jo
insb
jl
lahf
stos
or
xor
xlat
aaa
mov
test
dec
and
movsl
fldt
enter
xchg
das
push
cmp
cli
pop
pop
stos
cmp
jns
shlb
addr16
out
or
das
fisubrs
pop
out
out
int
sbb
loope
pop
mov
jmp
lret
cmp
lock
shlb
subb
loop
rclb
stos
movsb
incl
in
cmp
ficomps
sbb
or
in
xchg
fdivrs
popa
and
xchg
mov
lods
pusha
jb
popf
xchg
pop
push
and
jae
inc
enter
add
mov
jp
in
std
jmp
jbe
and
popa
jae
imul
popa
pop
inc
in
and
sbb
and
jb
out
int
xorl
fdivrl
jmp
mov
push
cld
and
imul
dec
sti
inc
push
scas
outsb
mov
mov
shl
icebp
mov
jnp
sub
or
call
int
and
inc
and
add
shlb
or
enter
adc
inc
xchg
push
xchg
or
or
mov
inc
out
dec
scas
nop
movsb
or
dec
lock
iret
iret
bsr
lret
sbb
sub
and
test
sbb
imul
std
fs
mov
or
fnstenv
mov
pop
aam
aas
daa
mov
cmpsb
addr16
dec
incb
xchg
or
dec
std
imul
push
outsb
add
call
das
inc
into
mov
or
xchg
dec
je
xor
testb
jbe
pusha
add
jae
in
cmp
pop
xor
mov
xchg
xlat
loopne
dec
pop
jbe
sbb
sub
daa
dec
pushf
push
mov
int3
jo
and
jecxz
or
mov
dec
div
andl
add
adc
aaa
filds
push
popa
sub
jae
mov
and
and
inc
mov
gs
or
or
in
mulb
pop
add
fwait
pop
pop
roll
mov
inc
xchg
loop
jb
add
cmp
or
test
lcall
mov
mov
aas
fxch
loop
push
std
les
jge
or
notb
inc
sti
mov
pop
fmull
mov
jl,pn
xchg
ja
mov
fidivrs
daa
popf
in
subl
pop
mov
mov
mov
inc
movsl
iret
mov
adc
sbb
and
inc
lock
mov
xchg
shrl
stc
pusha
lods
roll
in
addr16
inc
mov
add
out
jno
in
cmpb
push
fidivrs
xor
int3
sbb
mov
dec
test
sub
addl
xor
stos
cmp
fisubrl
or
and
mov
add
in
sbb
insb
dec
and
cmp
ret
pop
mov
dec
xor
movsb
dec
loope
sbb
ja
pop
not
imul
lods
les
in
cmp
ret
aam
lods
xchg
out
rcll
es
xor
aad
add
icebp
mov
js
lcall
jb
jge
rorb
hlt
and
lret
cmova
jno
mov
fs
ss
js
mov
push
ljmp
mov
stc
movsl
aam
rclb
pop
ja
test
bnd
or
fwait
rcrl
loope
xchg
inc
xchg
mov
adc
xchg
adc
jo
mov
out
sub
jp
aad
repnz
loop
pop
mov
xor
mov
push
sbb
enter
jmp
cmpsl
jnp
sub
cmp
inc
movsl
fcomps
movb
sub
cmp
daa
mul
imulb
insl
aas
stos
leave
mov
les
icebp
cmpsb
iret
pop
loop
inc
out
cld
jmp
xchg
popf
fisubrl
cmp
cmp
in
sub
cmp
sub
and
mov
movsb
add
sti
rcrl
dec
lock
testl
aaa
push
cmp
out
xchg
sub
adc
es
adcl
fmull
sahf
lock
cli
fildll
push
sub
repz
addl
mov
cmpsb
mov
in
xchg
inc
xorb
test
and
bound
sbb
rol
fimuls
mov
rcl
icebp
ret
imul
and
jns
das
push
cli
add
add
mov
dec
dec
test
sub
lds
mov
add
imul
div
mov
int
lret
mov
xchg
test
mov
mov
push
in
cld
push
out
repz
into
imul
adc
xor
ds
dec
adc
lods
xchg
sti
dec
leave
and
or
pop
cltd
sub
sti
push
out
das
ja
jns
movb
push
pop
adc
das
mov
xchg
in
pusha
jo
ret
lret
push
push
call
out
pop
and
arpl
or
add
and
push
cmp
out
sbb
rorl
ljmp
cmp
push
add
push
mov
mov
fisttpl
jmp
popa
repz
jge
addr16
xchg
adc
hlt
add
popf
jb
jo
or
sbb
xor
inc
shll
cmpsl
rorl
out
mov
mov
inc
sub
mov
pop
ja
xchg
int
pop
adc
aaa
mov
cld
pop
pop
pop
test
jle
test
pop
aaa
inc
mov
repz
popa
adc
jl
xchg
xchg
dec
rcr
js
xor
ja
sbb
cmp
bound
pop
loop
xchg
add
inc
out
fdivrs
and
int3
aad
int3
sti
xchg
push
mov
and
outsl
stos
add
push
lret
mov
popf
out
dec
mov
je
and
fisubrl
stos
dec
cmp
pop
pushf
jns
fs
sbb
leave
loop
pop
test
sub
bound
cltd
insb
dec
inc
mov
sub
scas
mov
sub
or
push
xor
adc
or
enter
pop
mov
cmp
mov
dec
sti
sti
dec
lods
fbstp
popf
pop
cmp
inc
les
sub
into
rcrb
stos
mulb
xlat
dec
or
push
pop
ja
out
mov
dec
mov
test
negl
sub
movsl
push
sbb
rcrl
xchg
test
imul
pop
ficomps
lods
xchg
adc
mov
sbb
aam
sti
stos
shll
dec
mov
and
cs
mov
fistpl
mov
pop
add
push
push
mov
call
jne
dec
inc
aaa
jnp
pushf
adc
aam
leave
push
bound
or
mov
mov
xchg
inc
outsb
sub
dec
js
icebp
inc
mov
outsb
mov
rcl
mov
imul
jmp
mov
cmp
je
pop
xchg
and
push
popf
lock
xor
mov
loop
inc
mov
dec
and
and
shr
push
scas
jp
add
int
les
dec
push
in
mov
test
xchg
js
and
cli
dec
mov
sbb
and
pop
mov
in
pop
and
arpl
mov
mov
push
add
addr16
lcall
xchg
mov
fwait
jb
js
mov
dec
sub
call
ljmp
add
jg
dec
cwtl
cld
cmpl
nop
inc
mov
push
insb
imul
mov
icebp
inc
je
imul
stos
xor
lods
dec
jg
mov
jecxz
mov
sbb
int
inc
sbb
xchg
pop
and
gs
xor
add
push
push
sub
fbstp
stc
lds
es
ret
ret
andb
push
and
jno
dec
mov
div
mov
cmp
sub
jns
hlt
jle
jecxz
adc
mov
addr16
mov
add
sub
inc
hlt
mov
inc
add
shrb
repnz
mov
out
lods
sbb
stos
adc
fcmovnb
dec
mov
out
mov
xchg
fadds
sbb
daa
in
fwait
out
rclb
scas
mov
cmp
bound
mov
jge
or
int
int
sub
cmp
in
dec
pop
roll
push
out
push
out
jae
mov
jp
ss
les
push
mov
mov
adc
lods
rcrb
enter
xchg
mov
adc
push
pop
push
cmp
cmp
daa
call
fwait
shll
iret
aam
jbe
sub
mov
pusha
in
aad
sbb
js
imul
push
fistps
push
jns
and
sbb
mov
mov
es
rol
mov
notl
inc
adc
cmc
or
pusha
out
add
icebp
xchg
jle
imull
lahf
dec
xchg
mov
mov
jb
outsb
dec
mov
stc
xorl
adc
movsb
xor
dec
in
stos
xchg
dec
iretw
adc
insb
add
cmovns
mov
dec
scas
loope
mov
pop
xchg
mov
or
sub
arpl
loope
jge
cs
xor
lock
notb
lods
add
xchg
adc
sub
jl
gs
mov
mov
pop
sub
call
data16
fcmovne
and
inc
sbb
or
sub
sbb
das
sbb
xchg
add
jecxz
and
push
gs
stc
scas
fisubl
lcall
ss
xchg
lods
pop
xchg
inc
cmp
jecxz
push
mov
push
lods
movsl
addr16
xor
jae
dec
or
scas
push
cmp
iret
mov
int
cmp
push
popf
inc
popa
fcmovu
jb
outsb
push
movsl
or
cli
enter
dec
lods
and
mov
adc
negl
pop
fisubs
in
gs
mov
and
dec
jge
xchg
cvtdq2ps
in
in
call
add
add
mov
pop
mov
jns
fsub
add
or
mov
loop
push
std
ljmp
sahf
loopne
andl
push
sub
aad
sub
add
inc
xor
out
imul
insl
fbstp
or
sbb
sbb
mov
ret
int3
stos
dec
lcall
movhps
jbe
push
ja
mov
nop
mov
ds
jg
mov
scas
cld
test
push
enter
test
stc
cs
stos
jl
loopne
enter
shrb
stos
mov
imul
cmp
inc
cmp
loope
sbb
cmp
xor
jne
push
inc
lock
imul
loop
xor
rcl
loopne
cmpsb
jge
cmc
repz
jmp
stc
xlat
movsl
cmp
push
sub
push
xlat
ret
test
inc
aam
insl
cmp
add
add
jno
add
cmp
mov
enter
cmp
dec
xchg
jmp
stos
notb
cli
pop
mov
push
test
dec
psllw
push
mov
mov
lods
fsubl
pushf
lahf
sbb
repnz
daa
dec
stc
pop
shrl
jl
adc
push
add
xchg
sbb
or
rcll
add
cwtl
cmp
push
lock
xor
in
fcompl
mov
or
movsl
int
sbb
and
sub
lock
add
sub
jo
jnp
adc
loope
out
shrb
xor
mov
fistps
pop
dec
jbe
sbb
sub
xor
adc
es
hlt
push
flds
testl
adc
or
or
je
xlat
jae
fldcw
repnz
sahf
adc
loopne
push
pop
push
lock
notb
lea
push
cltd
pop
imul
adc
jbe
and
test
into
sub
xor
dec
pop
dec
out
outsb
xchg
mov
jle
adcl
inc
cwtl
xor
xchg
mov
sbb
push
sbb
sti
and
adc
popa
pop
inc
mov
imul
mov
cmp
sbb
js
pop
add
dec
movsb
stos
jl
mov
fiaddl
jae
movb
aad
xor
leave
outsb
aaa
fimull
hlt
test
jle
jo
subb
dec
mov
inc
inc
in
sbb
push
shlb
jo
adc
and
iret
in
imul
movl
cmp
loopne
adc
scas
ljmp
inc
test
mov
push
xor
mov
cmpsb
mov
mov
inc
sbb
rolb
mov
daa
fsubs
push
cmp
dec
cmp
scas
test
and
jno
scas
cmp
das
mov
call
fisttps
lret
fsubl
sub
outsl
fcoml
pop
ret
int3
sub
lahf
aas
inc
xor
sbb
jg
fwait
dec
mov
lds
dec
mov
add
mov
jg
xchg
cmp
push
jb
imul
and
es
xorb
push
mov
call
fdivrp
pushw
add
sbb
inc
mov
out
aad
and
dec
and
jbe
popf
loopne
pop
or
fstl
push
out
push
push
std
mov
xchg
sbb
loope
and
jae
mov
das
repnz
mov
lods
mov
rolb
or
cli
jne
cmc
cmovo
shlb
dec
fwait
ljmp
pop
bound
xchg
adc
jae
and
loopne
adc
outsl
into
mov
or
outsl
sbbb
fisttps
inc
test
and
xchg
cli
and
cmp
pop
sub
out
pop
jne
not
subb
add
lret
pop
pop
add
jb
jp
mov
movsb
cmpsb
jg
push
jmp
in
inc
fadds
jl
cltd
ja
outsl
xchg
push
ficoml
pop
pop
mov
sbb
mov
xchg
mov
push
and
add
jne
testb
xor
push
cmp
scas
xchg
out
mov
inc
arpl
push
jnp
in
pop
dec
sahf
unpcklps
out
dec
sar
cmpb
pop
lods
rolb
dec
das
xchg
hlt
lock
movsb
aas
scas
icebp
pop
jmp
leave
lods
daa
test
jo
mov
sub
push
lods
and
test
fs
mov
jge
sbb
sub
mov
inc
data16
aam
ds
stos
adc
enter
test
sbb
xlat
mov
fisubl
std
out
test
pop
push
xchg
pop
es
fstp
ret
fists
testb
ja
inc
fnstenv
loope
mov
jo
addb
jb
jno
int3
insb
inc
addr16
call
sub
mov
enter
sub
mov
scas
in
add
sbb
fcmovne
enter
push
lds
and
rcr
js
dec
loopne
fbld
xor
iret
push
dec
rcrb
jle
sub
out
dec
adc
dec
cmp
pop
dec
mov
mov
aad
jmp
or
cmc
insb
scas
inc
dec
jno
aam
dec
fsub
lea
popf
fs
cld
rorb
jg
pop
jg
jnp
das
xchg
stc
mov
psllw
mov
push
cmp
sahf
push
add
popf
jnp
and
movsl
cmp
or
mov
xchg
mov
push
fucompp
pop
mov
int
loop
je
cs
js
gs
imul
xlat
pop
cmp
or
push
push
inc
inc
sbb
frstor
jmp
and
sahf
outsl
out
pop
fdiv
mov
into
lahf
notl
mov
and
cmp
rcll
fnstcw
xlat
mov
fimull
sahf
nop
in
jg
jecxz
fnsave
sub
push
out
rcll
lock
adc
and
std
jl
movsl
sbb
scas
and
xlat
outsb
xor
das
xor
pop
cmpsb
push
adc
mov
pop
stc
mov
xor
outsl
aad
cmpsl
sub
or
pop
sahf
adc
outsb
mulb
outsl
or
xor
jg
popf
sbb
jp
insb
cltd
jno
mov
lods
ret
inc
add
add
cmp
or
jae
mov
rclb
es
lods
xchg
or
sti
jecxz
inc
outsb
pusha
imul
pop
xchg
or
push
cmp
lret
fwait
popa
mov
inc
scas
mov
lods
dec
stos
js
pushf
popa
inc
mov
lock
cmp
in
mov
pop
pop
dec
xchg
dec
mov
adc
mov
push
jbe
jg
mov
dec
pop
out
in
inc
or
pop
xor
dec
dec
xor
cs
sbbl
and
iret
ss
xchg
xchg
jns
or
adc
negb
fwait
cmp
xorl
inc
daa
sub
jmp
pop
pop
jnp
sti
cmp
sub
call
arpl
cmp
aaa
out
inc
pop
daa
dec
or
sbb
fs
pop
add
call
cmpsb
imul
and
roll
out
in
sbb
pop
cmpsb
hlt
xchg
loop
push
push
adc
add
sbb
fadd
mov
ret
cmc
sbbb
jae
mov
adc
cwtl
sbb
rcll
into
loope
aas
xchg
xchg
nop
cmp
mov
out
scas
push
sbbl
js
cmp
dec
adc
sbb
sti
filds
push
dec
mov
push
pop
jge
sbb
mov
std
lcall
iret
lea
xchg
jno
push
xchg
xor
pushf
out
les
push
pop
mov
mov
add
push
ret
push
xlat
xchg
or
adc
scas
cld
fimuls
addr16
iret
fdivs
jecxz
in
in
loope
cs
add
imul
ret
imull
inc
jp
stc
popf
arpl
mov
aad
ja
bound
ss
loopne
pop
sub
les
loopne
xor
mov
push
stc
into
mov
sti
inc
push
aaa
sub
or
add
mov
xchg
adc
clc
enter
push
mov
sbb
mov
xchg
cmp
stos
cmp
mov
mov
enter
jae
xchg
das
pop
lret
pushf
push
in
daa
jo
mov
inc
mov
mov
adc
jnp
lods
aas
mov
xchg
not
add
dec
lds
xlat
inc
push
stos
xlat
out
lods
mov
inc
pop
lods
add
dec
fdivs
inc
ja
adc
scas
add
lock
rorb
jecxz
imul
mov
xchg
xor
gs
pop
js
inc
mov
mov
out
or
adc
mov
sub
push
imul
xor
mov
cmpsl
push
pusha
bound
adc
ror
gs
sbb
aad
fsubs
adc
and
dec
add
popf
add
mov
in
push
push
packsswb
lods
xlat
scas
leave
rcr
dec
cld
pushf
push
cltd
jge
jae
or
test
lds
mov
jmp
pop
repz
mov
adc
imul
fwait
xor
mov
adc
push
or
fistl
mov
mov
or
inc
sbb
scas
sbb
or
inc
lcall
or
sbb
cltd
xor
mov
and
sti
lods
cmc
inc
outsl
mov
xchg
aaa
push
cmp
mov
mov
add
push
arpl
inc
stos
lods
cltd
cmp
inc
inc
mov
mov
ljmp
test
cmp
adc
ljmp
pop
data16
adc
and
popa
clc
push
jnp
shll
fs
inc
jmp
pop
movsl
leave
pusha
arpl
pusha
pop
cmpsb
rol
cwtl
mov
mov
stos
adc
mov
mov
cmp
pop
repz
adc
push
dec
icebp
pop
test
sub
cltd
pop
or
aas
fcomps
insl
jp
dec
jnp
aas
jmp
sbb
add
xchg
ljmp
scas
push
jmp
lret
mov
adc
ret
jb
lahf
fs
xchg
js
out
fnsave
minps
pop
pop
mov
xlat
pop
xchg
div
mov
int3
addps
inc
leave
lahf
out
and
insb
mov
mov
jne
pop
int
pop
fneni(8087
cwtl
sti
nop
sbb
xlat
jne
lahf
inc
sbb
inc
xor
movsl
xor
dec
jecxz
ja
test
hlt
aam
dec
in
loopne
mov
cmp
mov
and
pushf
jge
inc
popa
int
jge
insb
das
jae
xchg
aas
ret
cmp
subb
jae
and
mov
push
scas
rclb
mov
cmp
and
pushf
cmp
adc
sbb
cli
and
jno
hlt
test
sub
mov
pop
xor
fidivs
push
inc
cltd
ret
in
fstpl
aas
popa
mov
sahf
and
pushf
mov
inc
inc
sub
sbb
xchg
bound
sahf
xor
mov
out
gs
xchg
in
insb
jg
mulb
mov
insl
stos
adc
pusha
stos
pushf
movsb
or
daa
dec
dec
ffree
mov
and
mov
jae
mov
dec
idivl
stc
mov
lret
inc
les
fcoms
shlb
jecxz
pop
mov
add
ss
xor
sahf
inc
outsb
in
cmp
cwtl
es
cmp
jmp
cmp
rol
hlt
pop
dec
ljmp
jb
lcall
fmul
gs
jnp
add
jl
push
js
push
sbb
repnz
inc
or
mov
lods
shrb
stc
insb
jle
lret
inc
xor
fs
scas
mov
fildll
sbb
notb
test
data16
push
jnp
sbb
icebp
or
add
push
pop
dec
in
negb
add
jns
ja
dec
mov
jae
test
pushf
or
lcall
adc
in
inc
inc
push
mov
xor
mov
lcall
fldcw
shll
gs
add
jo
movsb
dec
jmp
jno
iret
rolb
lods
pushf
mov
sub
cmp
popa
fwait
mov
add
repz
mov
mov
pop
mov
je
xlat
and
xchg
cmp
push
mov
push
push
mov
loopne
push
les
addr16
xchg
shll
pushf
mov
or
insl
ficoms
xchg
push
sub
pop
xor
hlt
and
push
jmp
mov
shrb
fs
flds
or
sahf
jno
shll
lea
cltd
call
sbb
dec
mov
sbb
add
pushf
sbb
clc
sub
loope
xchg
push
ss
cwtl
push
sbb
fs
mov
lock
fdivr
push
cmc
mov
imul
ror
push
push
and
jp
enter
mov
jge
inc
mov
es
sub
add
and
cmp
add
stc
in
int
mov
loopne
in
dec
sti
mov
pop
lods
add
mov
mov
xchg
shl
fistl
popf
out
cmp
in
xchg
addl
loopne
mov
sub
call
add
pop
xchg
dec
jg
push
mov
enter
outsl
repz
xor
lds
mov
daa
inc
mov
int
hlt
aad
rclb
ljmp
mov
pop
mulb
adc
jp
je
sbb
daa
pop
aad
add
jns
dec
fstp
pop
lcall
es
sarl
push
test
cmovg
data16
sti
jae
cwtl
insl
mov
mov
loopne
test
aad
mov
dec
loopne
pushf
out
stos
cld
aas
and
jmp
jle
loop
or
test
push
nop
sbbl
pop
inc
add
sub
mov
int3
mov
lcall
mov
ss
enter
pop
jg
push
ret
fucomp
jle
mov
fmull
xchg
int3
or
push
cmc
es
es
mov
std
dec
out
in
pop
and
cmp
out
dec
mov
imull
sub
fwait
sbb
mov
mov
push
and
aaa
into
dec
repnz
lods
xor
and
hlt
ftst
aam
stc
nop
out
or
insl
test
lcall
js
test
fs
sbb
xchg
mov
in
and
sub
mov
out
push
outsb
pop
cwtl
xor
mov
jecxz
aaa
outsl
mov
js
xor
cmp
adc
xorl
mov
ds
and
dec
cmp
insl
cmp
mov
cld
adc
test
insb
les
or
lock
iret
adcb
inc
out
lds
sub
or
roll
out
mov
addb
test
mov
lods
call
jg
sarb
inc
xor
pop
mov
inc
out
push
repz
dec
push
icebp
bound
fdivrl
jbe
pop
pop
inc
and
cs
or
cmp
pop
idivl
roll
mov
mov
mov
lahf
sub
ret
cwtl
inc
mov
jb
cmpsb
xchg
scas
sbb
jns
rolb
or
ds
out
mov
test
fisttpll
jmp
mov
aas
inc
std
push
dec
sbb
addb
jle
adc
dec
mov
int3
xlat
sbb
sub
xlat
rol
mov
sbb
add
pop
dec
mov
or
mov
mov
icebp
mov
leave
dec
cmc
and
sbb
cmp
sub
mov
mov
outsl
addb
or
xchg
xchg
out
jle
cmpsb
mov
enter
xchg
or
jg
insb
xchg
dec
sub
sbb
pop
push
add
xchg
xlat
cs
andl
mov
push
sahf
jne
adc
pop
out
int3
xchg
fs
std
adcb
sub
aam
cmp
add
lcall
jl
adc
mov
out
xchg
lea
imul
jb
aaa
mov
mov
int3
hlt
pushf
xchg
push
inc
std
lahf
rclb
gs
call
lahf
xchg
xchg
imul
movsb
sub
mov
push
rol
xchg
movsl
hlt
fdiv
int3
and
add
mov
sbb
scas
mov
aaa
xchg
xor
lret
scas
or
and
pop
adc
inc
aad
inc
sub
nop
aam
repnz
xchg
fimull
insl
je
add
xchg
sub
rcrl
adc
lds
or
in
loopne
popf
daa
adc
xchg
fs
push
fisubs
insb
fsubrl
shufps
xchg
adc
into
rolb
dec
add
rcll
or
sbbb
aaa
pop
inc
je
movsb
or
or
lds
push
and
cmpsb
repnz
push
xor
pop
mov
out
icebp
sbb
notb
out
jmp
mov
inc
add
popf
loop
mov
sub
std
pop
mov
add
mov
cmpsb
pop
mov
clc
addb
imul
fistps
jmp
jp
sbb
sbb
dec
out
xor
sarl
loopne
ds
inc
sbb
mov
add
outsl
add
je
movsb
mov
dec
lods
xchg
inc
add
xchg
rolb
jge
jnp
daa
fyl2xp1
in
sbb
lods
sahf
dec
imul
dec
or
push
stos
out
repz
imul
pop
sub
pop
jl
lods
test
sub
into
rcll
add
mov
push
mov
jb
outsl
mov
xchg
mov
add
fldcw
adc
in
jnp
sbb
in
imul
pop
pop
inc
mov
sbb
sub
pop
out
jnp
push
addr16
orl
leave
ret
xor
xchg
cld
push
imul
pop
test
lea
je
insb
or
pop
iret
push
sahf
adc
dec
cmp
cltd
xchg
call
into
in
dec
scas
sbb
hlt
sahf
or
je
add
in
outsl
in
je
push
lods
and
decb
mov
movsl
adc
or
xchg
scas
jb
sub
addr16
jl
out
movsl
hlt
xchg
repz
sahf
mov
repnz
and
stos
sub
and
sbb
cmc
subb
hlt
icebp
shrb
int3
fildl
into
adc
pop
int
cltd
outsb
mov
mov
hlt
pop
mov
in
push
fimull
sahf
mov
cmpsb
jmp
roll
inc
inc
jg
adc
jns
lea
shlb
cmp
loope
jecxz
pusha
in
pop
sub
stc
pop
xchg
loope
sbb
out
cmp
insl
jge
ret
call
xor
mov
mov
into
out
inc
cmp
addr16
into
mov
insb
test
inc
mov
or
cwtl
roll
pop
imul
incl
pop
test
xchg
adcl
adc
icebp
jae
jmp
cmp
mov
fstpt
lds
mov
imull
push
imul
cmp
add
ja
mov
stos
push
dec
push
iret
enter
xchg
fcmovnu
mov
and
popf
sbb
jmp
lods
jne
cli
add
mov
push
adc
repz
pop
stos
int3
mov
repnz
cmp
push
cwtl
wrmsr
inc
push
add
pop
xchg
cli
in
test
mov
ds
cs
shrl
adc
fistps
xchg
fldcw
test
mov
jge
addr16
stos
test
out
arpl
jno
rorl
jae
inc
sti
adc
push
bound
mov
daa
sub
addb
dec
add
ds
arpl
sub
inc
mov
and
lret
xchg
dec
repz
ljmp
jp
push
nop
hlt
dec
jmp
dec
mov
dec
icebp
fneni(8087
sbbl
mov
mov
insb
push
jne
dec
xlat
inc
and
adc
cmpsl
mov
fwait
xor
jg
cwtl
mov
mul
add
rcll
int
loopne
js
out
mov
insl
dec
lahf
lret
or
out
cltd
fidivrl
in
roll
mov
fisttps
cmp
cmp
pusha
cmp
je
sbb
jae
inc
mov
push
idiv
rcll
and
mov
adc
leave
xor
push
sbb
shlb
stc
lock
fbld
mov
xor
cmpsb
fs
mov
nop
mov
jmp
push
incb
es
leave
pop
sub
mov
mov
push
inc
in
mov
cmpsb
movsb
mov
sub
rcr
sbb
add
jecxz
jne
xchg
adc
repnz
aaa
je
mov
ror
rcr
mov
push
xchg
lret
mov
shlb
xchg
imul
lahf
aam
sub
cld
sub
mov
in
lock
mov
or
mov
scas
in
sub
jno
pop
aaa
shll
outsb
ljmp
push
ss
mov
dec
aam
jg
inc
jb
dec
nop
jo
jg
popf
ret
cli
out
sarb
mov
nop
cs
xor
out
aas
mov
fdivrl
stc
ja
nop
aam
int3
and
mov
es
push
ja
popf
push
das
in
lods
sub
mov
push
jmp
inc
test
xchg
cld
cmp
mov
mov
and
sbb
mov
jae
das
int
xor
andb
mov
cwtl
ss
inc
das
inc
push
push
add
jo
pop
mov
jbe
pop
and
adc
mov
sbb
xor
jae
jp
jmp
aam
mov
hlt
pop
inc
inc
xor
inc
and
jb
jno
pop
cmp
push
stos
push
cmp
mov
mov
mov
fidivs
inc
cmp
cli
repz
xchg
push
iret
fs
sti
lods
movsl
or
sbb
cmpb
ret
dec
or
jne
les
mov
xor
fsin
jae
ds
pop
sahf
ljmp
xchg
mov
pop
repz
lret
fcompl
lods
rcll
clc
inc
dec
sti
pop
aam
mov
mov
fidivrs
nop
enter
push
mov
push
in
inc
sbbl
adcl
jmp
adc
mov
fmulp
cmpb
insb
mov
sbb
push
adc
mov
pop
icebp
arpl
ss
adc
pop
jb
ljmp
sub
repnz
lods
push
out
dec
add
dec
addr16
js
xor
lret
lock
imul
dec
mov
std
bnd
popf
jnp
pop
inc
pop
pop
loopne
dec
scas
cmp
add
xlat
sub
orb
in
cmp
dec
test
fisubrs
jne
es
mov
cmp
lcall
push
xchg
mov
repnz
out
fcomi
mov
lock
jge
xor
mov
mov
sbb
aam
adcb
enter
in
fs
ret
pushf
mov
fsts
pop
insl
in
or
in
jg
fsubl
jmp
inc
aaa
pop
subl
insl
movl
sbb
xor
inc
sub
scas
inc
xchg
int3
cmp
test
jns
sarl
mov
push
popf
loop
aam
mov
and
dec
clc
dec
sbb
pop
stos
add
ljmp
in
hlt
xchg
lret
xchg
push
inc
adc
test
dec
sub
and
int
adc
mov
lea
int3
fcmovne
lahf
cmp
out
enter
inc
push
mov
test
aaa
incl
jne
movl
scas
xchg
cmp
and
stc
or
std
cmp
xor
mov
out
xor
cmp
mov
pop
sbb
mov
lret
jno
popa
cmp
mov
aaa
dec
inc
and
push
sub
int3
out
nop
mov
mov
push
faddp
lock
sub
in
lods
cmp
mov
cs
or
xor
rclb
jecxz
fisubrs
pop
xor
sub
lcall
mov
xchg
xchg
xor
jo
scas
shrl
shrl
cmp
mov
icebp
fnsave
inc
push
stos
frstor
icebp
stos
inc
xor
adc
into
inc
add
nop
insl
loop
out
and
andl
cmp
fimull
sbb
test
repnz
punpckldq
into
cli
sbb
aas
sarl
xlat
mov
cltd
xchg
push
call
mov
sbb
or
mov
sar
movsl
add
add
inc
jge
out
sti
sbb
cwtl
sub
add
jmp
mov
insb
cmp
jb
mov
pop
popf
cmc
and
dec
mov
push
rcl
repz
lods
out
mov
stos
ja
pop
js
add
adc
push
sbb
outsl
lret
pop
xchg
add
jnp
movsb
inc
pop
cli
add
cmpsl
cld
out
std
or
leave
in
mov
dec
cld
jno
lcall
mov
dec
sub
add
aad
stos
inc
push
sbb
cmp
stc
adc
iret
les
sbb
in
lods
xor
push
int3
or
stc
mov
call
cmp
ds
sbb
push
fsub
push
sub
sub
shld
bound
orb
icebp
stc
ret
sub
aam
xor
xlat
loop
adc
sahf
lods
sbb
mov
cmp
aad
mov
dec
dec
sbb
clc
push
lea
dec
std
add
mulb
popa
and
lret
mov
cs
add
mov
pop
xor
mov
fwait
and
push
movsb
iret
pop
xor
inc
xchg
pop
scas
jne
cli
ja
or
xchg
mov
hlt
rcll
jp
insl
cmp
cmp
daa
cmpsb
movsb
dec
test
das
push
f2xm1
and
cli
rcr
sti
mov
pop
fcmovu
adc
xchg
pop
out
push
fstl
and
mov
push
lea
ja
xchg
xor
cmp
mov
adc
sub
xor
jmp
aam
xchg
mov
ja
jae
jle
jbe
scas
sub
dec
mov
cli
test
inc
or
call
and
pop
dec
or
daa
dec
sub
gs
stos
adc
leave
mov
adc
jns
xor
xor
dec
out
adc
sbb
fldt
and
aad
mov
xchg
xchg
pop
lret
lret
int3
cmp
inc
mov
inc
mov
fidivrs
ror
mov
jge
pop
cli
or
add
stos
jge
sbb
pop
mov
xlat
jle
fisttpl
xchg
hlt
call
push
jnp
fimuls
hlt
jmp
or
dec
adc
iret
leave
aas
adcl
mov
xchg
ds
or
in
inc
add
and
and
sbb
aad
mov
mull
sub
jmp
xchg
pop
rolb
out
add
sub
jmp
mov
mov
ja
out
test
dec
rorl
fcmovnbe
sbb
mov
jle
pop
sbb
mov
enter
sahf
das
lods
fisttps
dec
or
cmc
les
in
mov
or
loop
lock
inc
out
push
jg
in
or
fstpt
aaa
pop
out
jmp
lahf
loope
push
enter
jp
in
cmp
dec
push
and
cmp
push
inc
mov
jo
cmp
sub
jecxz
sub
mov
or
fcmovne
mov
out
mov
outsl
pop
pop
and
loop
adc
pop
jl
push
pop
test
pop
bound
enter
js
xor
lcall
fwait
xor
aas
adc
mov
lahf
mov
sub
out
mov
inc
and
loope
push
sub
mov
and
sbb
shll
pusha
cli
dec
cmp
data16
lret
mov
rorl
es
xlat
xchg
adc
sub
and
jg
inc
loopne
popa
fstp
outsl
adc
mov
or
and
cmp
mov
mov
enter
xchg
out
add
in
rcl
jno
push
mov
jl
or
daa
ficompl
scas
push
mov
sbb
sbb
cmp
cmp
lock
adc
int
cli
push
sbb
stos
add
repz
xchg
jo
mov
dec
xchg
pop
mov
cmc
cmpsl
jne
movsb
mov
insl
push
movsb
mov
mov
xchg
enter
jb
mov
in
into
cmpsl
and
test
ret
ret
cmpb
popf
cmp
nop
imul
xchg
enter
into
das
push
roll
mov
and
sbb
mov
cmp
dec
push
mov
pop
sbb
push
imul
inc
sub
dec
dec
imul
mov
fisubl
outsl
std
dec
nop
add
insl
cmp
loop
jb
push
sahf
or
fsubs
cli
aam
mov
bound
inc
sbb
mov
cs
mov
fdivs
andb
imul
sbbl
popa
adc
and
fcoms
pop
in
aaa
jp
daa
je
jb
mov
jp
inc
addl
andl
push
nop
mov
pop
ljmp
addb
lds
push
fisttps
int3
xchg
mov
sbb
and
mov
sti
stos
xor
test
dec
sbb
and
dec
adc
adc
mov
pop
dec
xchg
nop
mov
fisubs
push
pushf
lods
aad
mov
sbb
add
adcl
aas
sub
scas
data16
jns
icebp
loope
sbb
adc
cwtl
sub
jae
cltd
jecxz
ret
jecxz
loopne
sbb
scas
xor
in
and
icebp
sub
nop
mov
dec
pop
xor
and
pop
pop
inc
xchg
or
dec
daa
nop
mul
pusha
das
xlat
jge
dec
mov
mov
and
test
pushf
sub
fsubrl
push
pop
test
lret
sbb
addb
popa
xor
mov
clc
xorl
inc
sbb
pop
xchg
pop
lahf
add
scas
jp
jg
jno
cmp
or
imul
out
push
cmp
mov
das
jne
es
jl
sahf
pop
adc
ret
popf
into
jbe
mov
daa
push
dec
cmp
insl
movsl
lock
pushf
loopne
xor
iret
int3
and
ja
inc
dec
in
repz
mov
loope
in
adc
add
cmp
sbb
add
lock
xchg
std
loope
mov
dec
cmp
mov
dec
in
in
pop
repnz
push
cmp
ficoms
jge
push
lea
pop
loope
sarb
sarl
in
inc
or
xchg
dec
pop
adc
mov
mov
sahf
pop
adcb
lock
add
dec
cmp
das
or
cmp
test
cmp
mov
mov
insb
inc
cmp
arpl
stos
and
xor
jb
in
fnstcw
inc
testb
insb
movsl
pop
xchg
mov
enter
aam
lcall
adc
pop
mov
add
outsb
xor
add
shr
inc
dec
mov
enter
stc
push
xor
ss
lods
mov
dec
shlb
and
iret
leave
xchg
or
pop
daa
sbb
lods
stc
fdivrp
pushf
in
pop
ja
adc
xor
inc
stos
aam
adc
out
mov
cmp
push
mov
push
sub
xchg
inc
lock
clc
mov
ja
dec
lods
test
scas
dec
jl
andl
dec
cmp
scas
mov
inc
xchg
imul
es
cmp
lahf
jne
adc
cli
dec
in
imul
jne
pushf
mov
and
or
sti
movsl
sti
pop
jmp
jae
out
das
dec
out
mov
jnp
shlb
cmp
sub
or
xchg
add
sub
push
dec
inc
cmp
rcrb
push
clc
jmp
cmp
gs
hlt
inc
xorl
jl
shll
mov
sti
push
sub
cmpsl
das
or
jb
in
in
or
pop
call
xchg
pop
mov
jp
iret
rorb
push
cmpsl
or
mov
xchg
xor
inc
mov
lret
ret
adc
sbb
sti
testb
add
in
or
adcb
popa
lds
mov
jbe
ret
pop
arpl
stos
mov
sub
jno
aad
cmpb
jne
daa
inc
repz
ret
in
rclb
lcall
aas
mov
ret
jnp
popf
mov
es
gs
push
pop
imul
dec
cld
inc
in
roll
inc
shr
dec
adc
inc
stc
sarb
cmp
inc
aas
xchg
ret
sbb
cmp
scas
in
fwait
adc
orl
pop
pop
les
mov
mov
out
fildll
sbb
inc
dec
into
jnp
fwait
in
fwait
rclb
movsb
cmpsb
ret
outsl
repz
dec
cmp
lods
out
in
sbb
cs
scas
lock
mov
pop
test
mov
shll
insb
xchg
adcl
pop
jl
icebp
and
mov
or
sub
push
xchg
pop
dec
sub
repnz
or
adc
dec
mov
rorl
stos
adc
add
push
xchg
jle
dec
test
mov
daa
adc
sub
mov
iret
stc
mov
ret
lea
sbb
int
jge
push
in
dec
mov
mov
ffreep
jg
inc
sbb
fildll
xor
cmp
js
inc
imul
mov
adc
pop
fwait
mov
outsb
out
jb
cmp
and
dec
fsubrl
mov
je
test
dec
sub
pop
xor
int
pop
movsl
imul
call
aas
mov
xchg
sub
inc
cmp
jmp
iret
fiaddl
jno
sbb
test
pop
fs
pop
lods
adc
fmuls
jbe
shlb
pop
mov
inc
pop
subl
inc
mov
jecxz
icebp
ds
mov
xor
pop
pop
mov
out
jae
fwait
cld
push
out
jns
je
lds
test
xor
jl
cmc
push
sbb
push
dec
ds
inc
fwait
lahf
jbe
cmp
pop
lret
mov
daa
fdiv
add
cli
jnp
lods
sub
std
ficoms
int3
aas
repnz
sub
mov
subb
sbb
mov
jns
mov
imul
aad
movsl
fcoms
and
outsl
icebp
xor
pop
lods
and
mov
enter
lods
imul
push
sbb
loopne
push
sbb
dec
je
lret
push
in
lds
xchg
js
movsl
repnz
add
inc
pop
sahf
mov
lds
mov
inc
or
mov
in
test
es
or
fstpt
and
icebp
repz
rorb
ja
lock
jne
repnz
sbb
sub
dec
out
in
sbb
jne
nop
rcll
loope
popa
stc
xchg
jbe
mov
mov
mov
repz
lods
xor
faddp
cltd
pop
mov
mov
sbb
mov
pop
out
sub
iret
jns
dec
dec
ja
sbb
int3
scas
or
bound
cmp
ja
je
adc
out
sub
cli
pop
test
sub
cmp
pop
sbb
or
mov
pop
sub
fstl
push
pop
ds
mov
test
fwait
int3
push
aam
aam
adc
sar
sahf
andl
pushf
out
std
add
pop
cmp
jp
pslld
leave
cmc
bound
pop
xor
in
jle
jmp
int3
xchg
push
mov
mov
mov
enter
iret
mov
pusha
adc
lock
cwtl
xchg
mov
dec
or
movsb
sub
dec
out
lret
push
paddw
xor
outsb
sahf
ja
cmpsb
inc
cwtl
aas
scas
lds
clc
mov
addr16
test
rol
aaa
mov
add
in
pop
or
pop
call
lahf
sti
test
test
or
les
pushf
insl
pop
lret
mov
inc
mov
test
roll
ret
jne
inc
mov
push
push
int
ss
call
test
bound
jl
ror
mov
mov
dec
pop
cli
add
and
cmp
sti
aam
xor
xchg
in
inc
int3
xchg
push
ret
dec
mov
push
xor
pop
ja
add
inc
sub
and
add
out
mov
cwtl
sub
xchg
mov
shlb
jp
mov
mov
in
in
sub
addb
aaa
dec
cltd
jae
adc
dec
lock
lock
or
push
cwtl
repnz
addr16
rcrl
xchg
ds
dec
add
xchg
loop
jmp
cwtl
dec
jnp
push
ret
lods
shrb
lds
lret
cmc
shrl
mov
dec
movsl
sti
mov
sbb
sbb
pop
pop
test
sbbl
pop
mov
push
out
cmp
shlb
add
fiaddl
cli
dec
push
xor
or
push
add
les
push
push
cli
adc
add
mov
enter
in
lods
xor
shll
mov
fimull
fidivrl
imul
jo
inc
in
lods
push
adc
pop
ret
jmp
cmp
push
xchg
int3
mov
add
call
insl
and
push
cmp
and
add
ret
mov
cwtl
ffree
sbb
and
push
jns
outsb
loopne
mov
jo
sub
cmp
mov
jl
mov
sub
ljmp
xchg
out
lods
xchg
mov
sub
imul
adc
sahf
inc
out
pop
mov
sarb
lret
test
jg
ss
bound
push
jbe
arpl
into
into
pop
and
iret
jmp
adc
and
ja
cmp
sub
mov
in
cmp
cmp
imul
xchg
xchg
mov
in
cmp
jne
stc
xchg
ja
lret
and
mov
stos
aad
inc
repnz
lds
sbb
pop
lret
mov
sub
stos
and
pop
sbb
movsb
mov
imulb
push
popf
mov
cmp
cmp
leave
jge
jge
lea
mov
je
push
dec
cmc
js
lds
bound
popf
outsb
ljmp
ret
push
test
adcl
lds
push
jp
jg
lods
pop
dec
mov
test
mov
popf
fsubrp
test
cs
scas
inc
pop
cmp
clc
ret
aas
jge
scas
popa
repz
xchg
pop
dec
and
jae
mov
mov
jecxz
stc
add
xchg
cmpb
sbb
xor
push
or
xchg
insb
jo
or
mov
cmpsb
aad
pushl
hlt
cmp
mov
popa
cs
mov
in
pop
enter
orb
fs
pushf
push
lret
inc
pop
loop
mov
cld
fucom
lock
icebp
xor
popa
addb
insl
cmp
movsb
pop
hlt
dec
pop
stos
ffree
jmp
push
test
lret
push
cmp
cs
inc
jno
xlat
ret
and
ljmp
mov
jmp
pop
cmp
in
mov
sbb
lods
fstpl
xor
outsl
fwait
jns
adc
lds
dec
mov
icebp
pop
aad
movsb
fstl
mov
daa
push
mov
mov
push
pop
loope
movsb
add
mov
pop
or
dec
popl
push
mov
int
cmpsb
dec
push
jmp
scas
loopne
mov
mov
adc
pop
sub
iret
test
bound
outsl
xchg
mov
inc
in
test
in
sti
mov
sahf
mov
xchg
jecxz
pop
push
or
and
pop
xchg
push
inc
mov
mov
pop
or
xchg
sbb
or
rol
pushf
sub
aas
mov
fcomip
insl
pop
repnz
in
sub
roll
std
jns
sbb
data16
aad
das
jo
ja
lcall
pop
mov
push
ret
mov
xlat
dec
test
pop
pop
add
jno
or
cltd
leave
pop
fsts
mov
negl
push
frstor
push
rcll
or
leave
push
xorb
insb
xor
cwtl
xchg
in
sub
push
xchg
push
mov
push
les
fs
aas
push
mov
mov
lock
jbe
jg
js
sub
sahf
lahf
movsb
mov
popa
push
das
repnz
fbstp
mov
fistl
mov
pop
sub
push
pushf
call
ret
in
add
sbbl
mov
and
mov
jb
mov
aaa
cmp
addr16
scas
add
xor
sti
and
push
insl
inc
in
inc
jecxz
iret
dec
ficompl
inc
mov
jae
in
outsl
imul
loop
stc
and
imul
scas
outsb
addr16
aad
out
outsl
adc
aad
xchg
roll
jne
pop
insb
or
fldl
lds
testl
cmc
adc
lcall
xchg
adcl
jl
xchg
cwtl
frstor
arpl
or
push
sarb
aas
push
in
in
mov
push
rorl
xchg
mov
mov
pushf
sub
jmp
repnz
sub
push
stos
or
test
mov
gs
in
xor
dec
in
dec
mov
popf
sub
dec
and
cli
call
push
jno
sub
pushf
inc
mov
mov
test
pop
pop
call
cmp
and
push
or
xlat
out
or
fistpl
lods
dec
push
jae
xlat
xchg
xchg
add
fstl
mov
xor
sub
call
pushf
sbb
push
xchg
inc
add
js
rcr
mov
fistpll
or
ret
xchg
lods
out
push
jne
push
adc
sub
mov
sbb
push
mov
cwtl
insl
test
xor
ss
and
leave
insb
sbbl
stos
inc
loopne
dec
mov
jge
icebp
sub
stc
and
cmp
out
mov
in
jp
xor
mov
lcall
inc
int
mov
sahf
iret
inc
cmp
inc
cmpsl
jno
xchg
cltd
nop
inc
xor
lock
movsl
lret
mov
aad
int3
adc
push
inc
mov
cmpsl
fnsave
jmp
mov
scas
testl
lret
mov
or
pop
imul
out
xor
subl
push
fstpl
sti
add
lods
cmp
pop
jmp
mov
loop
cld
aam
adc
adc
out
inc
adc
mov
stos
pop
pop
fiaddl
sub
js
add
inc
fiaddl
into
xchg
mov
das
mov
popf
cmpsl
in
testl
jmp
inc
jmp
push
and
mov
sbb
xchg
lods
sbb
cwtl
adc
inc
dec
fld
shrl
jb
ljmp
int3
popl
xor
xor
inc
loop
sbb
jne
hlt
frstor
sbb
repnz
cmp
imul
adc
fistps
sarl
paddusb
outsb
fwait
loope
aad
xor
add
lret
loope
out
std
mov
push
mov
mov
sub
fs
outsb
movb
ss
fistl
arpl
jmp
nop
mov
les
popa
out
and
hlt
fdivrs
aad
hlt
or
and
push
cmp
sub
and
jnp
mov
inc
insl
mov
aas
cli
bound
addl
mov
mov
test
jno
add
popf
cmp
adc
test
mov
dec
sbb
push
movsb
imul
ficompl
jnp
dec
bound
mov
jo
dec
pop
pop
imul
mov
xchg
jle
dec
sti
inc
add
push
data16
xchg
inc
mov
xor
xchg
clc
cmpsl
jmp
inc
push
and
pop
dec
in
cmpsb
enter
dec
and
mov
testb
inc
mov
pop
mov
mov
push
pop
jns
push
or
inc
adc
fdiv
mov
push
rcr
in
adc
mov
jp
mov
in
fcomps
inc
add
or
adc
mov
aam
decl
or
xor
ds
mov
mov
into
cld
fsub
jl
xchg
dec
add
cmc
mov
sarb
cmp
loopne
inc
cltd
fwait
movsb
loope
lods
xchg
int3
testl
xchg
call
mov
jg
mov
add
jl
inc
cwtl
addr16
xchg
nop
jo
xchg
jp
add
xor
pusha
mov
repnz
xor
jno
ret
mov
add
loopne
icebp
fdivrl
jae
dec
out
mov
ds
sbb
lcall
pop
xchg
mov
out
and
lea
pop
testl
aad
lahf
inc
stos
xchg
cmpsl
cmp
jo
scas
loope
and
or
mov
xchg
das
jbe
and
negb
mov
push
jae
dec
sti
and
pop
jle
incl
cmp
mov
out
popa
aaa
fwait
mov
fs
push
push
test
vmptrld
sbb
iret
fsubs
push
mov
jnp
fcmovbe
sahf
shll
or
pop
out
jnp
pop
jecxz
mov
jnp
mov
add
roll
mov
ljmp
dec
or
jae
add
mov
sti
movsl
lahf
out
outsb
lea
xchg
int3
mov
mov
popa
sub
and
mov
add
push
mov
push
adc
ret
or
pop
mov
xchg
rcll
lcall
fstpt
loopne
mov
stos
les
out
stos
call
in
jne
pusha
fs
aam
mov
xor
cmp
xor
out
jns
es
xor
orl
adc
jp
mov
pop
sub
mov
loopne
add
mov
jnp
int3
arpl
inc
lret
sbb
pop
cmp
cltd
out
fisubs
mov
jo
jns
ss
sbbb
mov
xor
mov
adc
jge
out
add
sub
pop
addl
cmp
inc
mov
test
adcb
or
jb
jmp
lret
push
enter
shll
fstpt
mov
popf
sub
leave
dec
lock
mov
jb
fsubrl
mov
sahf
pushf
push
xchg
push
push
xchg
fcomps
jp
mov
cmp
cmpsl
subl
sub
sbb
xor
push
into
rcrb
dec
dec
aaa
jg
fisubl
cwtl
pop
dec
sbb
clc
sub
xor
jg
xor
les
mov
or
xchg
mov
loop
lods
or
add
sbb
mov
mov
pop
test
das
dec
aad
jb
les
pslld
fs
test
jne
mov
stos
xor
test
cltd
adc
jl
ja
enter
pop
insb
imul
dec
fnsave
mov
push
test
rol
dec
jno
popa
sbb
jo
xchg
mov
push
cmp
sbb
push
bound
dec
cmp
mov
sub
pop
loopne
or
jbe
dec
add
fisttpl
bound
addl
sub
push
ret
dec
adc
jae
xchg
test
cld
jo
push
dec
xor
mov
inc
stos
fisttpll
and
incb
js
mov
fildll
ret
cmp
sub
jnp
addb
rcrl
or
sub
dec
sub
lret
mov
test
ret
cmpsl
sbb
push
xchg
sarl
iret
mov
push
add
sub
dec
outsb
in
sbb
push
and
addr16
test
aas
mov
popa
les
out
rcrb
inc
cwtl
mov
leave
sahf
and
scas
xor
bound
adc
mov
mov
lds
lret
das
mov
jns
adc
xchg
mov
cmc
into
ljmp
inc
inc
ficompl
imul
cmp
pop
mov
or
into
daa
mov
jecxz
stc
ret
cmc
and
dec
icebp
dec
loopne
loop
or
jbe
insl
cli
adc
mov
sti
negl
inc
leave
aad
mov
lcall
push
pop
stos
fs
out
dec
imul
cmp
test
jnp
mov
xchg
shll
mov
jmp
ret
cli
rorl
std
out
lds
jecxz
lods
sbb
push
loopne
mov
push
push
adc
mov
inc
lods
lahf
inc
cmc
xor
dec
faddl
cld
mov
test
sbb
out
adc
stos
xchg
or
sub
mov
cmp
adc
shr
or
jle
inc
mov
sbb
movsl
fsubrp
fs
fistps
mov
push
div
push
cmp
cs
adc
dec
and
push
add
mov
sbb
pop
pop
push
cmp
pop
and
lahf
xor
insb
repz
dec
pushf
arpl
mov
xor
push
aam
fstpl
lods
push
nop
mov
jg
sbb
fiaddl
cmp
out
inc
dec
add
xorb
int3
jo
push
push
and
rorb
lretw
cmp
mov
jmp
les
jecxz
sahf
mov
add
push
mov
mov
pop
out
dec
lods
cmpsl
js
dec
lock
movsl
xor
test
mov
hlt
dec
xchg
fcmovbe
popl
divb
mov
pop
int3
push
cmpsl
push
inc
shll
repz
loope
mov
icebp
lods
or
fs
cmp
sub
hlt
aam
inc
aad
jne
bnd
mov
dec
pop
imul
pop
and
push
repnz
fwait
add
push
pushf
xor
mov
cmpsb
adc
mov
sbb
push
scas
dec
xchg
lret
int
loope
fisttps
adc
dec
aad
dec
sbb
sub
fbld
pop
pop
shll
pop
fcoms
cmp
mov
test
rcll
movsl
cltd
cmpb
push
dec
bsr
daa
xor
clc
clc
leave
cltd
xchg
mov
in
ds
pop
aam
mov
test
xor
add
addb
ds
mov
mov
ret
xchg
cmp
and
lods
test
add
rcl
jno
pop
pop
leave
lds
shlb
add
movsb
xchg
dec
pop
lret
enter
xchg
xor
out
fcmovbe
stos
lock
xor
cwtl
fcmovnb
mov
or
mov
push
mov
divb
sbb
aam
add
sbb
lds
adc
outsl
push
and
mov
outsb
repnz
test
inc
jl
mov
fnsave
test
decl
mov
fistps
fsubrs
lock
mov
cmpsb
repnz
aad
jb
or
pop
adc
cmp
and
ret
cvtps2pd
mov
js
mov
cmp
scas
fstpt
xchg
testl
or
dec
aas
xorb
push
sbb
xchg
test
inc
push
add
pop
mov
imul
repz
pop
popa
mov
cld
int
lock
out
or
mov
and
cmc
or
hlt
loopne
push
dec
mov
cmp
fnsave
mov
jb
jno
popa
sbb
mov
mov
popa
push
cmp
ja
pop
shrl
mov
mov
shlb
js
or
xlat
xchg
pcmpeqw
call
stc
or
cmp
cmp
mov
adc
rolb
sahf
sub
repnz
mov
jg
sub
icebp
jno
imulb
cmp
inc
mov
jo
add
ljmp
call
insb
pushf
in
push
mov
movsb
ficoml
jmp
pop
jae
mov
int
cmp
jae
call
xchg
fisubs
pop
sub
gs
push
ret
inc
dec
ljmp
adc
xchg
inc
pusha
mov
mov
cmp
jnp
cmc
roll
loope
xchg
inc
mov
dec
push
test
adcb
xchg
xchg
je
mov
add
xor
cmc
fwait
xor
fidivrs
hlt
aad
cli
loop
xchg
lods
fdivrl
add
and
xchg
les
les
lcall
scas
fnstenv
lods
push
xor
dec
fcmovne
jae
cmp
jne
cltd
aas
stos
fwait
sti
xor
testl
mov
aad
pop
mov
add
mov
fcoml
jge
cmc
push
sbb
jmp
std
sub
jg
ljmp
mov
add
fstpl
xlat
mull
jecxz
sub
setne
pop
dec
add
push
addl
mov
jp
aam
lret
lcall
jno
loope
shr
int3
jge
or
dec
cwtl
sub
pop
xchg
cmpsl
inc
fs
jmp
addr16
adc
lods
mov
inc
push
dec
mov
adc
xor
xchg
pop
push
daa
stc
orl
call
shl
push
and
mov
aad
or
jb
sarl
int
sub
cmp
mov
sbb
es
inc
hlt
sub
xchg
ficompl
pop
mov
ret
enter
cwtl
add
scas
in
nop
repz
push
dec
jnp
mov
mov
cltd
push
es
loopne
clc
loope
je
inc
cmc
das
dec
mov
scas
clc
dec
ret
aad
rorb
pop
fldcw
movb
dec
pop
movsl
pop
or
cmp
dec
aad
shl
jns
out
into
roll
inc
mov
dec
mov
mov
les
or
push
loop
jecxz
leave
pop
cmpsb
adc
jge
jne
insb
loope
inc
xor
sub
and
add
fimuls
mov
mov
jbe
mov
xchg
pop
mov
push
add
pop
xchg
adc
jle
pop
jmp
lcall
cmpsb
pusha
mov
sbb
rorl
mov
lods
xchg
mov
push
xchg
xchg
fs
gs
xchg
sub
loop,pn
pop
in
repz
fbld
movsl
mov
cli
out
inc
inc
mov
je
inc
out
mov
mov
out
cmp
jmp
stos
cmpb
jle
sub
inc
mov
xor
push
adc
sub
inc
or
repnz
sbb
out
movsb
lods
mov
and
push
dec
bound
xlat
mov
inc
imul
testb
or
les
repz
push
mov
shrl
stc
int
cmp
out
aad
jge
and
mov
sub
push
orb
dec
stc
leave
stc
mov
xchg
les
vrcpss
lods
out
fcoml
in
push
repz
dec
mov
cmp
inc
cmp
fldenv
adc
movsb
xchg
inc
dec
xor
das
pop
cmp
adc
jge
xlat
mov
or
lret
test
xchg
mov
add
push
sbb
fldenv
jo
pop
xchg
push
ss
pandn
pop
test
imul
scas
in
mov
cmp
sub
test
pop
or
mov
cld
mov
xchg
xorl
scas
fs
aas
int
gs
inc
jae
adc
pushf
push
insl
cmp
jg
jle
adcl
push
out
into
push
push
test
sbb
in
sahf
in
xor
inc
sbb
push
ja
lods
pop
mov
xlat
sbb
sub
aaa
push
shrl
ret
jo
jmp
or
sub
push
je
push
mov
mulb
xor
fdivrl
hlt
sub
icebp
addb
out
and
sarl
xor
ja
pop
mov
jne
in
rorl
and
lret
call
sbb
sti
sbb
push
inc
test
ds
adc
loop
jns
xchg
inc
pop
jno
xchg
xor
fs
scas
cltd
or
mov
mov
mov
adc
nop
jmp
add
ja
jb
and
std
shl
add
andl
add
dec
mov
adc
jno
in
cltd
xchg
fs
mov
xchg
ja
pusha
pop
inc
dec
fstpl
dec
subb
push
imul
mov
js
xor
ret
sbb
sub
inc
or
add
call
push
fst
adc
push
stos
inc
xlat
mov
pop
cmp
cmpsl
mov
cmp
scas
ljmp
cli
lret
xor
xor
cltd
adc
cmc
jae
xchg
xlat
cmp
std
dec
cmp
pop
scas
push
imul
xchg
push
mov
push
repz
jmp
adc
sbb
cmp
lea
js
xchg
mov
adc
imul
lretw
xor
push
mov
and
out
sahf
sub
mov
frstor
sbb
les
cmp
mov
lret
cs
loopne
out
add
mov
into
fsub
xchg
push
scas
outsl
sub
shr
push
mov
mov
call
rcrb
jecxz
movsb
aas
push
xchg
pop
cmp
inc
jnp
cld
inc
insl
add
outsb
sbb
adc
adcl
cmpsl
in
jge
xchg
jb
test
push
xor
dec
cmpsb
or
in
mov
std
add
movsb
addr16
ret
out
iret
stos
aam
mov
insb
adc
mov
xor
jnp
fs
daa
jg
lock
pushf
or
xor
add
repz
sub
aad
mov
cmc
out
jmp
fstpt
pop
fidivl
add
call
push
sbb
lods
add
push
repnz
pop
adc
sar
jbe
pop
pop
shr
xchg
loop
inc
cld
or
add
lods
jmp
cmp
pop
cmp
std
push
into
and
cmp
inc
mov
test
push
push
add
mov
into
mov
add
pop
cmp
cmp
repz
jb
jecxz
int
cmp
push
loopne
or
lods
dec
mov
mov
enter
push
pop
adc
out
into
mov
cmp
fisubrl
pop
pop
mov
mov
test
adcl
mov
mov
pop
mov
jne
or
loope
pop
arpl
cltd
test
jno
lods
inc
pop
int
jp
stos
push
and
cmp
punpckldq
cmp
sub
dec
jb
imul
sbb
imul
gs
inc
call
pop
cwtl
test
test
mov
xchg
nop
call
rcrb
out
sbb
icebp
jae
loope
push
jnp
out
mov
jl
mov
dec
pop
push
fsubrl
pop
push
and
popa
mov
test
mov
pop
xchg
and
jle
mov
jmp
jo
fsubr
xchg
ljmp
push
pop
inc
ds
leave
out
xor
aas
fs
imul
arpl
pop
xchg
loope
push
pop
das
jp
aaa
inc
cmpsb
call
fsubrl
sub
nop
iret
inc
loopne
bound
rcrl
pop
or
shlb
movsb
and
jnp
nop
xor
cmpl
jo
sahf
lock
mov
jg
outsb
and
mov
jno
test
sbb
outsl
inc
stc
out
inc
push
inc
loopne
int
out
xor
fsubp
dec
adcb
fists
pop
inc
inc
mov
lods
push
xchg
jno
xor
sub
lret
push
call
loopne
add
mov
fmul
and
rcll
ja
jbe
je
pop
push
add
addr16
sbb
mov
sti
inc
or
jl
dec
movsl
xchg
xor
nop
mov
jl
and
xchg
push
pop
or
scas
lret
fisubrl
or
xor
xor
pop
ljmp
outsb
jg
cmpsl
lret
insb
add
xor
push
jne
add
ret
pop
xor
push
cmpsl
jle
sar
jnp
jns
push
test
outsb
push
lahf
mov
in
cs
das
clc
clc
das
pop
jmp
push
in
jae
inc
aam
mov
in
iret
pop
sbb
mov
pcmpeqw
je
test
sbb
enter
out
scas
mov
stos
mov
inc
jmp
pop
daa
xor
jle
cld
clc
ror
inc
popf
or
nop
arpl
sbb
aam
std
lock
and
cmp
ret
stos
or
mov
int3
push
xchg
es
xor
pop
fsub
xor
cmp
mov
cmp
dec
mov
aas
adc
mov
jge
aas
in
sar
push
ret
sbb
test
into
xchg
cmp
adc
sahf
lret
sbb
sub
inc
pushf
sub
iret
mov
in
xlat
clc
dec
fisttpll
xchg
dec
sbb
ret
push
adcl
dec
pop
ret
mov
mov
jno
fisubl
mov
pop
insb
aaa
cmp
mov
aaa
movsb
pop
call
jbe
xorb
cmp
jae
adc
int3
or
sbb
inc
add
jecxz
add
cltd
in
dec
movsb
or
jge
jge
mov
cmpsb
sar
insl
add
insl
inc
mov
mov
negb
test
mov
insb
mov
test
sbb
mov
sub
loop
enter
xchg
pcmpeqw
xor
xor
xor
fwait
push
push
dec
lock
jae
push
cmp
stc
pop
adc
push
dec
mov
inc
or
dec
mov
loopne
mov
test
xchg
push
push
adc
dec
cmp
xor
sar
adc
sahf
sbb
or
ret
xchg
aas
pushf
and
xor
jo
dec
imul
pop
fwait
int3
lock
and
dec
xor
imul
sbb
pop
int3
dec
sub
fs
mov
xchg
xor
divb
mov
rcrb
inc
ja
lds
aaa
sbb
leave
mov
movsl
orb
or
je
cs
and
fcoml
stc
scas
lcall
dec
int
hlt
cs
lret
test
lock
rcrb
mov
cmp
mov
aaa
or
test
lret
mov
jne
test
mov
pavgw
add
aas
or
mov
fsubrl
mov
loop
fmull
out
cmpsl
cli
std
xchg
lds
imul
pop
sahf
ss
clc
aad
cli
insl
cmpsb
adc
cmp
into
inc
insl
cmp
and
scas
mov
or
mov
and
test
xchg
addr16
sub
mov
test
push
hlt
outsl
push
popa
ret
lcall
mov
lods
shll
jmp
push
imul
inc
shr
xchg
daa
sub
push
psubsb
mov
fisubs
add
rcrl
add
aad
mov
in
sub
mov
jecxz
fdivrl
mov
jl
das
jg
addb
inc
nop
out
insb
mov
icebp
inc
ds
cmp
fbld
loope
add
mov
xchg
into
subb
scas
cli
add
jae
imul
das
pop
test
rcrl
pop
mul
sbb
xchg
jg
xchg
call
shl
adc
cmp
mov
or
sub
inc
lret
addb
stc
mov
es
push
cmp
popf
lret
sbb
fwait
cmp
iret
aam
loope
mov
das
loopne
mov
test
mov
cmp
and
scas
mov
in
jmp
xor
dec
js
dec
sub
and
gs
loope
sti
les
pop
and
testl
jge
out
jg
add
mov
cmpsb
aam
lahf
daa
cltd
or
dec
and
popa
push
mov
lock
divl
push
je
pop
xchg
imul
ret
cmc
scas
movsl
sarb
xor
mov
lcall
ret
pushf
je
out
pop
or
xchg
push
push
inc
ss
negb
arpl
cmp
push
jp
mov
test
aad
push
je
or
cwtl
add
ss
dec
pop
pop
and
dec
xchg
dec
mov
arpl
hlt
stos
dec
jo
sub
hlt
negl
mov
add
cwtl
int
push
cmp
ja
in
lahf
jge
mov
or
cmp
mov
adc
dec
inc
adc
pop
mov
cmpsl
shld
sbb
pop
or
xor
jo
mov
incl
pop
repnz
add
lea
mov
icebp
jno
push
or
xor
ret
cmp
lret
mov
and
cmpsb
cmp
jg
jecxz
xchg
test
jnp
loopne
add
cmpsb
arpl
ss
adc
dec
mov
fdivl
jne
xor
lahf
cmpsl
movsl
push
jl
or
xchg
out
call
lock
jmp
or
sub
ds
mov
add
mov
cmpsl
out
add
std
mov
adc
cmpsl
sti
pop
pop
add
frstor
push
loope
outsl
push
xchg
jo
push
xor
enter
orl
pop
mov
loop
call
movsb
mov
xor
icebp
mov
pop
jp
repz
clc
mov
add
inc
pushf
js
jmp
or
sub
test
mov
adc
jmp
loop
and
popf
stos
sbb
inc
fnstsw
xchg
fbstp
inc
mov
and
sahf
xor
sbb
or
repz
setne
mov
jnp
stos
bsf
pop
pop
data16
arpl
int3
dec
mov
add
pop
pop
cmp
shll
mov
sub
jbe
pop
mov
mov
pop
add
push
sbb
mov
nop
pop
or
fimuls
xor
push
aad
push
push
mov
jp
pop
sub
xchg
sahf
push
fnsave
cltd
subb
mov
sbb
cmpb
jae
fidivrs
call
call
ljmp
out
inc
fildl
out
imul
jl
dec
fidivrs
push
cltd
cs
mov
jmp
cmp
movsl
inc
jmp
andb
outsl
pop
in
pop
sbb
mov
repnz
cli
mov
cmp
rorl
sbb
add
dec
dec
jg
cmp
cmpsl
adc
pop
sbb
jp
rep
pop
push
pusha
push
fisubrl
or
jnp
inc
push
addr16
mov
jle
test
jl
sbb
aad
jne
mov
into
adc
in
cmc
ret
bound
xchg
or
lret
and
stos
push
sub
xlat
into
inc
stc
add
popf
xchg
popa
out
or
jp
lcall
push
popa
test
enter
pusha
out
mov
push
ret
and
xchg
rcr
mov
lea
popf
mul
mov
fiadds
repz
mov
push
int
clc
aam
in
push
stos
pushf
mov
sbb
test
out
lods
mov
pop
mulb
insl
dec
ljmp
nop
xchg
add
xchg
xor
jmp
cltd
lret
jecxz
shrl
imul
ds
cwtl
shll
adc
arpl
xchg
add
mov
cmc
out
jle
push
pop
cmpl
cli
hlt
pop
orb
add
adc
xor
dec
xchg
shrl
pop
mov
test
lahf
movsl
ds
add
jae
fcoml
pop
idivb
test
call
dec
enter
dec
hlt
repz
cmp
dec
mov
inc
adc
fmuls
inc
leave
je
aaa
adc
jns
sbb
repz
rorb
adc
pop
addr16
adc
mov
sbb
or
adc
sbb
ljmp
outsb
lds
inc
test
mov
mov
cltd
in
sbb
mov
lea
xor
cwtl
in
loopne
outsl
xchg
xor
repz
add
xlat
sbb
rol
jmp
and
jne
or
mov
aaa
neg
les
add
inc
mov
cs
mov
adc
xchg
stos
or
and
adc
stc
imul
sub
loopne
sbbl
in
cmp
push
je
inc
loopne
adc
add
inc
adc
jle
repz
cmpsl
imul
shll
les
aad
cwtl
lahf
jmp
jnp
lea
js
pusha
into
rcrl
popf
sbb
pop
jmp
rorl
fldenv
ljmp
shrb
mov
gs
fucom
pop
aam
push
cmp
call
mov
dec
mov
adc
mov
ljmp
imul
aam
mov
fdiv
and
repnz
mov
jmp
loope
jmp
mov
or
push
adc
mov
xlat
pushf
xor
daa
cwtl
aad
jge
fstps
sbb
sub
xchg
mov
lds
or
cwtl
loopne
or
insl
mov
sahf
mov
fidivl
rcrb
dec
cltd
pop
cmp
pushf
popf
and
fwait
nop
jmp
test
add
in
stc
rcl
test
pop
arpl
and
pop
xor
out
mov
movsl
lahf
mov
inc
cmp
inc
fwait
fwait
dec
mov
lea
adcb
aaa
mov
mov
dec
mov
je
xchg
leave
mov
mov
out
xchg
test
lcall
xor
cmp
push
cli
pop
cmp
mov
push
pop
jmp
and
lcall
jnp
jle
jg
xor
pop
and
addb
rcr
iret
xorl
push
arpl
adc
push
sub
and
adc
iret
lea
repz
cmpb
dec
xor
faddl
pop
cmp
inc
in
sub
sahf
cmpb
dec
cltd
inc
iret
inc
shl
sbb
lock
fidivs
into
cwtl
orb
scas
rcl
dec
aaa
pop
loopne
push
add
jg
push
xchg
push
arpl
pop
dec
cmp
int3
fistpll
in
cltd
cmp
fs
push
lahf
sbb
lret
dec
push
bound
mov
sbb
cmpsl
dec
fcmovu
cmp
cmp
popf
xchg
das
shrl
orb
lret
cmp
sti
jl
or
lods
or
into
sub
jg
mov
int3
lods
mov
lea
sbb
push
mov
pop
cmp
dec
mov
dec
lods
sub
sub
or
fdivr
add
cmp
adc
jle
scas
mov
in
mov
inc
cmp
mov
and
jp
dec
cmp
enter
and
mov
mov
dec
ljmp
dec
cmpsb
ret
nop
imul
cmpl
incb
dec
lret
dec
sbb
push
push
xchg
or
and
sbb
scas
insl
push
xor
loope
mov
cmp
gs
jae
icebp
clc
movsb
into
and
into
and
loop
add
or
aad
dec
push
inc
push
add
bound
test
mov
fsts
sbbb
adc
xor
repnz
inc
jbe
mul
mov
shrb
pusha
pop
sahf
push
int
dec
pop
pusha
icebp
dec
rcrl
jns
hlt
dec
xor
das
in
rcrb
dec
mov
jb
mov
lods
lock
cmp
cltd
jno
adc
out
jle
rclb
add
add
cltd
ss
out
adc
das
shll
xchg
stc
push
push
xchg
test
data16
pop
jnp
pop
xchg
arpl
rep
mov
xchg
mov
loopne
pop
test
stos
es
mov
sbb
pop
iret
and
xchg
or
hlt
bound
test
repz
jbe
push
xor
cmp
nop
sub
mov
mov
jge
jb
mov
bound
movsl
mov
loop
shll
xchg
stos
mov
dec
mov
popa
aad
adc
cltd
mov
cmc
or
mov
dec
lock
mov
push
repz
push
fimull
xor
xlat
adc
xchg
test
inc
sbb
pop
jp
xchg
ljmp
push
sub
sbb
or
jbe
dec
loope
ror
ds
xchg
fwait
sbb
repnz
mov
xchg
out
mov
add
inc
xlat
mov
cmp
dec
cmpl
in
or
sub
aas
mov
xchg
mov
sarb
xchg
clc
mov
pop
pop
jecxz
add
stc
mov
sbb
lock
into
and
lret
dec
cmp
or
push
mov
push
lret
stos
jl
addb
jae
in
mov
add
sbb
sub
outsb
push
imul
add
mov
scas
ss
and
adc
shll
lcall
dec
mov
mov
lret
notl
jl
lea
ficomps
int3
iret
ret
out
inc
imul
outsl
mov
lods
xchg
adc
dec
movsl
daa
jae
jl
loopne
stc
gs
mov
cld
clc
mov
cmpsl
arpl
jbe
repnz
gs
xchg
and
out
cld
mov
inc
sbb
dec
mov
and
lods
mov
and
mov
fwait
mov
xchg
call
adc
push
mov
xlat
loopne
mov
ds
lds
cmp
pop
fsubl
ficoml
aas
xor
decb
add
lods
inc
push
clc
adc
dec
inc
in
lea
mov
mov
mov
sub
sbb
clc
sub
mov
lcall
add
cmc
int3
orl
lcall
popf
cmp
xchg
data16
arpl
push
adc
test
and
mov
lods
fisttpll
pushf
xlat
xchg
and
inc
loope
sbb
das
add
cli
cmpsl
xor
mov
jns
inc
ja
cltd
inc
push
out
cli
test
in
ljmp
aas
push
adc
imul
sahf
cltd
jno
jge
mov
lods
mov
pop
lfs
and
out
divb
xor
adc
dec
mov
adc
scas
lahf
stos
mov
add
nop
cmp
sub
jmp
stc
sti
or
mov
arpl
sbb
ja
sbb
mov
rcll
stos
sahf
stc
pop
movsl
jmp
sub
mov
in
scas
je
and
dec
xchg
cltd
sbb
cmp
or
jns
imul
das
aad
test
rcll
jb
gs
fisttpl
out
jae
sarl
jecxz
pop
and
push
dec
push
jne
or
nop
sbb
jnp
icebp
add
fnstcw
cs
lds
scas
jo
xchg
sub
sbb
popa
pop
xchg
mov
lods
sub
les
mov
sar
and
xchg
int
dec
inc
mov
fcmove
dec
dec
imul
jmp
in
les
pop
mov
push
add
push
hlt
sub
dec
and
push
cmp
rcrl
sbb
jo
leave
pop
es
lea
shll
add
mov
adc
sbb
xor
out
and
in
jg
sub
sub
mov
jns
rclb
and
int
icebp
in
bnd
add
rolb
pop
mov
mov
enter
pop
xchg
in
in
jo
lss
out
jmp
inc
scas
push
mov
push
insb
push
adc
out
mov
hlt
test
sbb
shrl
sub
inc
in
clc
and
push
pop
push
mov
jg
dec
divl
fnstenv
adc
xor
xor
out
and
push
xor
sbb
push
fsubs
push
in
sbbb
ret
notb
jne
out
mov
clc
dec
adc
pusha
pop
movsl
mov
cmp
push
sub
movsl
bnd
xor
out
dec
movsl
xor
xchg
mov
xchg
test
fnsave
sbb
out
inc
and
mov
out
pop
jp
daa
mov
push
inc
std
icebp
sub
adc
das
jge
shlb
jp
loopne
in
jbe
xchg
xorb
xor
movsb
stos
xor
pop
aas
lock
and
aam
pop
inc
inc
fidivrs
jo
ljmp
pop
andb
pop
pop
pusha
mov
dec
push
adc
or
cmp
mov
lret
in
sar
out
ret
adc
add
push
cmpsb
jnp
imul
rep
pusha
pop
ja
ror
leave
andl
or
jp
mov
call
xchg
pop
addr16
into
daa
dec
call
xor
and
xchg
aam
int3
fnstenv
andl
cmpsl
sub
adc
mov
inc
cmpsl
pop
cmpsb
shrb
pop
jecxz
xchg
inc
leave
jb
outsl
stos
call
push
outsb
xchg
nop
xchg
test
rcl
rcll
mov
fcoms
push
pusha
sbb
cltd
pop
outsb
imul
pop
inc
and
lock
mov
scas
outsb
xor
pusha
mov
ret
jnp
dec
xorl
inc
gs
mov
jnp
dec
push
xor
das
push
lds
iret
xor
sbb
sub
push
sbb
add
mov
xor
push
test
mov
daa
fnstsw
adc
movl
push
xorl
jne
xchg
jp
inc
aad
pop
lods
clc
xchg
fisttpl
test
mov
mov
sub
dec
stos
fucomi
jae
add
pop
mov
out
jp
mov
or
dec
push
mov
dec
mov
xor
mov
pop
mov
xchg
push
jnp
repnz
push
lahf
xchg
push
jnp
das
fdivl
test
xchg
pushf
or
pop
and
cltd
insl
pop
stos
cltd
and
ret
pop
arpl
ss
and
data16
arpl
mov
std
addr16
add
pop
rcrl
xor
stos
lcall
cmp
imul
or
or
lret
adc
and
jne
in
adc
mov
cmp
insl
xchg
adc
xor
ljmp
imul
addr16
daa
mov
or
div
fiadds
xchg
lods
or
int3
lds
fstl
sbb
jo
xor
cmp
cmp
push
inc
rcl
pop
jnp
sbb
cltd
dec
add
out
xchg
movsb
xlat
stos
cs
mov
cmp
stos
pusha
jb
push
in
cs
mov
cmc
dec
lret
sti
push
inc
cmp
iret
in
or
cmp
ret
test
jmp
jnp
fistpll
icebp
push
sbb
enter
and
mov
push
int3
sahf
ret
push
sbb
push
cwtl
inc
or
les
sbb
out
bound
ret
xor
inc
mov
and
lods
jge
mov
jp
decl
fstpl
sbb
mov
rcr
sub
fnstenv
mov
jg
movsb
rclb
rep
sbb
mov
loope
adc
sub
imul
pop
xchg
mov
inc
mov
cld
xchg
imul
divb
mov
mov
jp
test
jl
sbb
popf
and
ja
lret
ss
lds
add
nop
insb
dec
test
rorl
ret
jmp
sbb
lahf
adc
pop
pop
push
xchg
pop
xchg
aas
jmp
adc
mov
mov
mov
shlb
std
jo
xor
pop
sbb
rcrb
sahf
sbb
cld
jg
adc
das
repnz
pushf
pop
cmp
jmp
mov
or
icebp
push
divb
je
dec
mov
or
std
jbe
cltd
jne
stos
aad
insb
xor
arpl
jne
mov
out
jne
fs
push
add
mov
add
inc
sbb
or
nop
push
out
rclb
dec
rorb
sahf
fisubl
test
sub
dec
pop
jns
rorb
jnp
inc
aam
insb
and
jb
push
jl
movsb
xchg
pop
movsl
clc
add
iret
movsb
insb
rcrl
daa
popa
push
mov
mov
pop
push
sub
hlt
ret
pusha
xchg
ss
into
in
lahf
fists
cmp
int
mov
inc
test
add
leave
in
jge
pushf
mov
pop
xor
mov
push
fidivs
mov
xchg
mov
outsl
push
mov
and
dec
sbb
arpl
imul
loopne
mov
mov
cli
ficoml
xchg
jnp
xchg
mov
mov
cmp
repnz
out
pop
aam
inc
mov
repz
jns
fdivrs
and
outsb
adc
int3
out
dec
fnstcw
mov
mov
cmp
pop
xchg
sub
test
mov
les
cmp
xchg
push
cmp
push
inc
orb
divb
mov
xchg
jmp
mov
cmp
jecxz
mov
jnp
icebp
hlt
cmp
test
outsl
dec
add
pop
stos
jge
add
push
xorb
sbb
xchg
clc
pop
xchg
jo
jb
les
push
and
test
cwtl
adc
sbb
mov
loope
js
insb
or
sti
xor
stos
imul
or
gs
movsl
mov
ja
out
sub
gs
frstor
stos
mov
pop
shrl
negl
push
sbb
js
push
bound
xor
jbe
pop
sub
sub
daa
gs
cmp
xor
push
mov
mov
inc
arpl
lret
xlat
orl
mov
push
xorb
sti
ja
test
aam
lds
das
ret
mov
push
outsl
lds
inc
inc
xchg
scas
jecxz
rorb
test
dec
and
in
or
les
add
mov
and
ljmp
jg
adc
and
stos
stos
sbb
lahf
jecxz
dec
jg
pop
test
cld
or
out
test
je
movsl
dec
test
loope
mov
mov
pop
inc
dec
or
sarl
repz
sbb
fs
pop
add
sar
fmuls
jne
mov
fwait
pop
imul
adc
pushf
pop
inc
cli
scas
sbb
out
cmp
add
dec
mov
cltd
cmc
popa
fisubrs
vmptrld
popf
aam
pop
in
cwtl
adc
pop
popf
sti
cmpsb
cwtl
scas
loope
aam
jbe
push
mov
clc
jnp
adc
ror
add
insb
daa
xchg
ds
lea
lcall
pop
and
mov
mov
xor
adc
in
pop
cs
dec
shlb
outsb
pushf
mov
xlat
stc
cmp
inc
push
pop
mov
pop
or
outsl
pop
dec
jo
in
rcll
std
rcrl
sbb
xchg
and
cmp
jl
cmpsl
out
psraw
and
push
sbb
jns
es
mov
mov
dec
dec
mov
inc
aam
push
outsl
add
jae
mov
jmp
xchg
push
pop
sbb
subl
xchg
add
adc
fcomps
dec
pusha
insl
mov
jmp
popa
adcb
fdivs
pop
jg
jecxz
js
sbb
push
int3
add
or
fsubrs
out
cmp
jmp
testb
ret
mov
adc
mov
ret
jb
adc
mov
ret
cmp
pop
shr
mov
int
call
adc
xchg
cmp
adc
mov
jge
ret
dec
cwtl
addr16
sahf
bound
sub
push
mov
sbb
out
jno
dec
sbb
xor
and
shl
mov
cs
out
out
loope
subl
andb
lods
ret
inc
sbb
je
jne
ret
mov
add
outsb
enter
stos
sbb
jg
sahf
xchg
jp
or
data16
xchg
movsb
imul
sub
xchg
and
and
leave
jecxz
iret
and
cmpsl
dec
xlat
sbb
sbb
mov
test
cmp
cmpl
pop
setl
icebp
pusha
subl
xchg
mov
sbb
out
push
xor
lret
sarl
adc
xchg
xchg
in
push
ret
xchg
push
inc
sub
enter
mov
cmc
enter
aas
cmpsb
aad
jno
iret
sbb
add
mov
sub
hlt
enter
jle
lock
pushf
pop
xchg
arpl
mov
cmp
pusha
xchg
or
ss
dec
add
pop
jg
and
jmp
jns
or
pop
add
out
and
jge
int
iret
dec
xor
enter
shl
inc
or
cs
push
adc
scas
push
dec
mov
push
pop
add
scas
inc
pushf
leave
aas
jg
dec
stc
pop
mov
mov
dec
and
jg
xchg
aas
sahf
insb
sub
or
shlb
jg
mov
xchg
mov
or
dec
test
mov
sahf
fdivrl
out
sub
lret
imul
jbe
jg
cmpsl
sub
cld
cmp
mov
in
jae
fnstenv
sarb
cld
adcb
pop
sbb
fiadds
dec
out
jo
cltd
inc
sbb
xchg
fwait
jecxz
jne
in
lods
aad
fcomps
pop
mov
mov
outsl
jnp
inc
lret
jno
ds
xor
cmc
iret
push
nop
test
push
sbb
sub
sub
lods
sbb
or
or
imul
xorl
push
ds
jmp
and
xchg
sbb
mov
cmpsl
inc
dec
das
inc
loop
inc
pop
pushf
les
jp
out
cli
cwtl
mov
adc
jbe
adc
sub
into
mov
mov
adc
sub
dec
cmp
ret
cmovnp
jge
jns
xor
jle
data16
stos
out
fcmovne
jbe
xchg
out
add
lret
orps
jecxz
aas
outsl
push
inc
fcmovnb
xchg
fwait
pushf
sub
xorl
push
jmpw
pop
add
addl
mov
pop
es
iret
or
and
js
lahf
adc
inc
xor
fdivrs
push
and
insb
sub
cmp
jno
bound
mov
xchg
out
sbb
mov
or
loopne
pushf
cmc
cmp
pop
cli
bt
aas
mov
lahf
ja
dec
sar
add
inc
sub
xor
pop
sub
test
pop
inc
pop
cmpsb
inc
and
ret
scas
push
push
shrl
arpl
popf
xchg
jb
jg
rcl
jl
add
ss
pop
lahf
pop
idivl
pop
xor
stos
xchg
pop
inc
mov
push
mov
cmc
cmp
jno
pop
into
push
mov
gs
ret
add
mov
std
scas
bound
sub
ljmp
aaa
cld
inc
push
movsl
arpl
sbb
sub
shlb
imul
out
das
pop
jns
repz
xchg
mov
scas
add
or
imul
leave
outsl
js
cmp
jg
iret
jns
sub
mov
imul
cmp
jg
jmp
gs
pop
jecxz
aad
push
push
scas
cmp
lods
cmpsb
and
xchg
push
push
cltd
push
sub
icebp
stc
jnp
xchg
inc
mov
dec
mov
sub
lahf
aad
shrl
inc
out
xchg
repnz
testb
data16
mov
fstpl
cli
jae
jae
add
pop
and
bound
add
add
pop
aaa
insb
call
sub
arpl
xchg
pop
loop
into
push
add
xor
push
mov
mov
push
add
cs
repz
or
fxch
cmpsb
fbstp
loop
mov
mov
dec
aaa
or
jmp
pop
mov
xchg
add
jo
frstor
mov
cli
fwait
xor
push
scas
cmc
in
xor
lret
mov
lahf
pop
xchg
mov
pop
xchg
jbe
es
sub
and
je
repz
faddl
int3
fadd
shl
lods
pop
daa
ljmp
data16
xchg
jae
xchg
lea
and
mov
aam
out
push
and
inc
push
fistpl
icebp
ret
clc
mov
dec
jb
mov
sbbb
xchg
inc
push
mov
jmp
aad
inc
adc
mov
mov
pop
pop
test
insl
xlat
mov
cwtl
cmpsb
jb
mov
jno
mov
leave
adc
xchg
jle
sbb
imul
mov
movsb
cs
sub
mov
call
sub
outsb
sti
or
icebp
jae
jnp
gs
jmp
adc
xchg
jae
add
int
in
stos
outsb
movsl
dec
sbb
jl
sub
popf
xor
andb
popl
shll
dec
or
pop
xor
sub
and
lcall
and
jecxz
in
loopne
mov
pop
xor
testl
enter
mov
ss
sub
xor
adc
ficomps
add
dec
mov
jle
notb
fwait
jmp
cmp
pusha
inc
xchg
sub
sbb
scas
jnp
mov
test
cld
sbb
movsl
xor
sub
imul
dec
je
je
xor
sub
loopne
xor
sahf
je
aaa
aam
mov
mov
vhaddps
and
ds
pop
xchg
add
mov
mov
push
addr16
loopne
fnstsw
shrl
push
add
fs
outsb
pop
mov
cmpb
xlat
push
inc
add
mov
test
or
leave
jmp
dec
push
add
push
lods
jmp
out
fs
cld
les
cmpsb
into
adcl
in
cli
fistl
dec
sbb
adc
sub
inc
into
insb
mov
faddl
mov
leave
dec
out
andb
cwtl
scas
into
pop
xchg
jae
mov
cmp
aaa
cmp
imul
jae
push
fiaddl
cwtl
imul
insl
pop
mov
in
outsl
inc
xchg
add
test
mov
pop
call
xbegin
push
xchg
sub
push
scas
xchg
iret
clc
aaa
sub
push
in
jbe
xchg
jmp
or
jle
and
fldt
repz
lret
adc
mov
mov
jge
cmp
pop
leave
repnz
in
in
ret
lods
adcl
inc
mov
fdivl
and
lds
push
and
add
loope
push
insb
jle
dec
rol
mov
push
mov
std
xor
sbb
lcall
fstpt
movsb
push
adc
lret
stc
jnp
add
lret
or
test
out
insl
dec
imulb
inc
and
mov
inc
mov
pop
and
cmc
adc
xchg
stc
ret
aad
or
fwait
test
pop
cmp
mov
loop
fs
fldl
push
sub
push
in
leave
movsb
cmpsl
cmp
and
mov
stc
jmp
push
scas
or
in
inc
pop
push
xchg
mov
adc
pcmpeqb
outsb
add
pop
pop
xchg
iret
pop
lcall
lahf
cmp
sub
mov
inc
jb
sub
mov
cmpsl
movsl
push
lcall
xchg
xchg
pop
int3
fcmovnb
arpl
lods
mov
jno
xor
inc
mov
out
les
mov
jne
cmp
sbb
jl
pop
and
sbb
sub
pop
dec
hlt
es
mov
repnz
roll
pop
adc
in
sbb
daa
push
push
add
dec
sahf
dec
mov
fcompl
mov
push
dec
ffree
or
ljmp
hlt
nop
sbb
insb
data16
mov
adc
or
jg
push
rep
stos
popf
leave
out
mov
and
jae
or
sub
jmp
mov
mov
hlt
test
inc
jge
imul
pop
inc
push
shrl
call
inc
loop
outsb
push
adc
inc
call
dec
mov
daa
cmpsl
lret
or
nop
sbb
ret
lods
cwtl
mov
mov
xor
adc
inc
gs
mov
cmpsb
in
je
outsl
leave
lods
fs
in
xor
pop
mov
lods
cmc
incl
add
push
jmp
insl
xchg
push
mov
cmpsb
insl
dec
lret
or
pop
stos
lret
cmp
loopne
xor
xchg
cmp
add
mov
enter
cmp
insb
icebp
pop
mov
std
inc
ss
xor
pop
les
xor
popa
imul
out
xchg
movsl
xchg
pop
add
test
rcrl
dec
fnsave
fstpt
add
in
xor
sbb
and
lret
test
addr16
iret
in
loopne
add
and
jo
stos
and
cmp
in
rcll
lods
les
in
sbb
out
jno
pop
fstps
fdivl
int
mov
sub
testl
daa
scas
inc
cmp
es
stos
rorb
mov
xor
sbb
icebp
pop
cmpsl
popa
push
pop
jp
dec
pusha
sbb
pop
pusha
mov
imul
stc
jnp
repnz
dec
call
sarl
mov
ss
jne
push
mov
pop
xchg
sti
mov
push
decl
dec
decb
sahf
roll
xor
cmp
cmpsl
or
fbld
fnsave
in
testb
mov
and
fldenv
push
das
dec
xchg
lods
test
and
or
or
push
cmove
bound
stos
popf
ret
add
push
sbb
sahf
arpl
pop
mov
cmpsb
xlat
daa
pusha
jge
pushf
and
pushf
jbe
mov
push
mov
pop
mov
movsl
cli
iret
daa
mov
add
xchg
dec
dec
int
jbe
shlb
xor
inc
pop
insl
adc
xor
data16
adc
mov
cs
mov
int3
xchg
test
adc
jmp
mov
and
cmp
and
sbb
cmp
mov
in
dec
jmp
xlat
and
push
out
outsb
dec
pop
pop
inc
push
inc
addr16
jle
divb
or
inc
xchg
lds
movntq
sbb
add
dec
jge
cmpsb
fwait
push
sbb
dec
pop
shrl
xchg
mov
xchg
fs
dec
push
loope
daa
rcl
lret
dec
jge
cs
add
mov
cmp
push
xor
lock
lds
pmaddwd
push
repz
xchg
adc
mov
cltd
push
ss
fiaddl
rol
pop
aaa
mov
mov
and
and
adc
jnp
out
outsl
or
cmpsl
pop
push
lock
fldt
std
jnp
dec
pushf
cmp
addr16
int
xchg
out
jmp
pop
jmp
mov
jno
sar
jbe
into
pusha
iret
mov
out
shlb
mov
addb
arpl
sbb
sbb
loope
movsb
jmp
in
test
xor
cli
sbb
sbb
out
stc
mov
jp
add
sbb
arpl
mov
and
cli
insl
in
or
loope
movsb
fisttpll
and
or
fnstcw
rcl
mov
orb
clc
insl
sbb
in
ds
adc
add
ficompl
shrl
adc
pop
mov
imul
es
fistpll
xor
out
test
inc
into
test
insl
xchg
orl
jne
mov
inc
das
icebp
xor
popa
inc
pop
pop
adc
push
sbb
xchg
icebp
mov
in
mov
lock
js
adc
sbb
sarl
and
xchg
in
rorl
mov
fsubrs
jno
scas
stos
xor
rolb
sbb
iret
sahf
fsubl
jb
inc
gs
adc
sub
cld
nop
mov
xor
lods
je
inc
jl
aam
adc
push
lret
jle
scas
les
cmpsb
loop
mov
ret
test
popa
pop
mov
xlat
and
push
int
ss
stos
cmpsl
mov
cmpsb
iret
sti
bound
or
xchg
fadds
cmpsb
aaa
pop
sarl
fdivs
loop
clc
cmpsl
daa
insl
add
in
shl
and
or
mov
mov
bound
inc
outsl
mov
test
xchg
ss
cmp
pop
lahf
dec
mov
in
mov
in
sbb
jp
and
pushf
aaa
jge
push
das
dec
pop
push
loope
xchg
fildl
rcll
aad
fstl
inc
cmpsl
sub
push
push
or
test
add
cltd
xchg
mov
sub
jns
fimuls
xor
cs
data16
insl
shrb
lahf
push
cld
xor
and
rep
xchg
repz
subb
jmp
mov
rep
push
jno
inc
adcl
iret
push
mov
inc
lods
loop
pop
in
pop
sbb
out
insb
addr16
dec
mov
jnp
lea
jmp
arpl
jmp
ret
lahf
addr16
ss
pop
mov
call
ret
lods
xor
xchg
addr16
stc
ja
js
pop
subb
ficomps
mov
and
xchg
bound
or
loop
int
push
repnz
fdivrl
mov
aaa
xor
xor
and
sbb
push
mov
push
cltd
jae
dec
mov
jbe
lss
or
mov
lea
sahf
rorb
jmp
xor
xor
push
in
sub
mov
test
nop
or
pop
xchg
mov
ss
cli
push
arpl
push
cmp
rorl
inc
push
mov
mov
mov
ds
push
push
inc
aas
fcomi
inc
jae
xor
add
xorb
xchg
aas
or
sub
js
aam
ds
mov
mov
fnstcw
or
icebp
mov
dec
ficompl
mov
cmc
push
mov
in
ja
mov
pop
and
je
mov
scas
cmp
std
adc
mov
inc
xor
imull
or
aad
cmpsl
fsubl
push
xor
dec
jbe
mov
mov
movl
sti
mov
ja
lods
adc
aam
pop
andb
xchg
jno
mov
imul
stos
sub
cmpsl
xor
sub
imul
pop
push
popf
fwait
into
incb
test
inc
pop
outsb
cmpsl
mov
int
push
test
push
sbbb
push
mov
cli
lods
cmp
xchg
addr16
pop
mov
jecxz
call
or
mov
mov
mov
pop
xchg
push
add
int
or
push
jg
insb
pop
imul
cltd
arpl
jae
push
sub
test
mov
lahf
pop
push
xchg
orb
adc
in
sbb
adc
xor
outsb
bound
int
out
push
shll
lcall
mov
lods
sahf
xchg
mov
call
or
fwait
cmp
xchg
into
add
insb
outsb
rorb
fsub
xchg
fdivl
decl
dec
sub
in
aas
push
lcall
fmul
pop
cmp
fcom
sub
arpl
clc
cmp
xorb
pop
dec
sbb
push
shlb
or
jnp
ret
arpl
push
fistps
das
mov
pop
jb
inc
icebp
ljmp
out
cmp
xchg
adc
xor
daa
js
xchg
adcl
pop
dec
or
mov
fadd
inc
and
arpl
cmp
push
jle
ja
enter
daa
jge
dec
xchg
pop
test
xchg
or
pusha
movsl
cmp
jne
dec
adc
ror
cld
mov
sbb
push
jge
lcall
aas
inc
sbb
inc
lcall
push
dec
filds
outsb
fbstp
mov
ds
xor
mov
xor
push
fndisi(8087
cmp
loop
xor
shrb
adc
cmpsb
mov
sbb
mov
iret
cmp
hlt
popa
stos
push
ss
pop
insl
vmovdqa
cmp
push
out
xchg
imul
xchg
or
push
mov
dec
sbb
loope
pusha
sarb
pop
inc
iret
repnz
lret
jge
jmp
lds
mov
insl
das
cld
xor
fadd
mov
ja
adc
push
jnp
cwtl
xchg
sub
lcall
ret
sub
sbb
dec
cmpsb
out
or
mov
in
fisubrl
ljmp
cmp
pop
enter
cli
xor
push
test
adc
fsubl
and
cltd
jmp
out
mov
arpl
cmpsl
movsb
lcall
pusha
sar
je
fbld
pop
pop
iret
out
in
lock
test
mov
mov
cmpsl
mov
in
push
and
lcall
mov
or
lcall
outsl
mov
jge
xlat
push
cmpsl
add
popa
daa
cmp
mov
icebp
scas
mov
fdiv
fdivrl
lcall
jo
pop
loopne
push
loopne
push
pushf
push
repz
pop
sbbl
aas
cs
inc
rcrb
adc
cmp
sub
pop
xor
pop
cmp
mov
std
clc
ret
daa
vpandn
xor
mov
lcall
cmp
les
or
adc
outsl
and
inc
pop
mov
sarb
cmp
inc
xchg
mov
incl
or
sbb
sub
add
aas
nop
cmp
fmuls
gs
mov
mov
push
mov
aam
enter
ss
das
mov
popf
push
lds
jo
jb
pusha
loop
push
shll
les
fcmovu
dec
mov
and
push
inc
stos
ds
mov
cwtl
mov
add
sti
cwtl
push
push
movsl
lock
add
inc
stos
inc
sbb
mov
aad
test
sbb
repz
and
sub
loopne
sbb
pusha
outsb
or
scas
push
cmp
cli
dec
cmp
lods
mov
cmp
and
out
pop
add
sbb
iret
int
ret
and
cltd
xchg
call
adc
add
sbbb
mov
dec
mov
repnz
adc
sbb
sub
mov
jecxz
jle
and
sbb
dec
loopne
std
stos
jl
inc
bound
mov
mov
popa
loopne
xlat
nop
dec
dec
repz
lahf
movl
push
lret
icebp
sbb
js
dec
lock
sub
jp
arpl
jl
add
jp
lods
lods
xchg
jno
fisubrl
test
mov
lcall
pop
xor
mov
xchg
cmp
xor
inc
fnstsw
addr16
pop
ret
cmpsl
ret
add
xor
pop
pusha
xchg
xchg
mov
stos
push
inc
ss
ljmp
add
jbe
sbb
xor
pushf
mov
lds
in
mov
in
cmp
push
or
inc
int3
loop
cmc
sub
adc
sti
mov
popf
arpl
add
fwait
or
mov
pop
dec
xchg
adc
ret
mov
jae
shll
fstl
loop
pop
mov
lahf
lea
or
mov
pop
mov
test
cmpl
fisubrs
sbb
push
dec
cmpsl
xchg
adc
push
int3
sub
pop
xchg
mov
push
ljmp
pop
cmc
movsb
ds
leave
jmp
mov
repnz
pop
push
sub
xchg
test
insb
mov
or
push
mov
outsb
fbstp
insl
clc
and
mov
mov
arpl
mov
lds
xor
inc
sub
jp
xchg
lods
inc
aaa
arpl
push
test
jmp
or
adc
mov
fld
ss
xchg
fsubrl
lea
xchg
sbb
fwait
das
jae
and
insl
popa
push
lret
test
mov
adc
mov
int
cmp
push
daa
or
das
frstor
pushf
mov
notl
mov
mov
adc
andl
xor
jmp
filds
out
pop
popa
pusha
adc
clc
cli
inc
fdivrs
sub
adc
sarl
mov
lods
pop
movsb
or
adc
lret
mov
xchg
xor
xor
in
mov
xor
aam
lahf
aaa
mov
adc
pusha
lock
sub
testb
icebp
add
dec
push
push
pop
sub
ss
arpl
sub
test
sub
iret
mov
push
aad
aad
lret
xchg
out
mov
sub
dec
xchg
push
sahf
out
inc
cmp
xchg
rep
out
fisttpll
data16
fsubrs
pop
xchg
ret
loop
pop
xchg
jmp
mov
scas
int
or
or
iret
sarb
cmp
cmp
and
jg
sahf
out
adc
divl
sahf
dec
cli
out
cmc
mov
fcomi
insb
cmpsb
ja
sti
out
lods
or
and
xorl
dec
loop
aas
mov
jle
jg
push
cmp
push
xor
pop
lds
out
cmp
add
movsb
lea
add
insb
mov
add
outsb
pop
fistpll
loop
lahf
cld
push
cwtl
inc
clc
aas
lret
mov
gs
aad
andl
sub
hlt
arpl
mov
push
int
xchg
mov
jg
adc
push
mov
xchg
fsubrl
xor
lock
jbe
mov
mov
mov
xchg
dec
jbe
jns
push
iret
lret
lcall
fnstenv
fsubrp
sbb
pop
fmulp
and
mov
mov
call
or
or
mov
test
es
scas
xchg
shl
lret
adc
lods
test
xchg
xor
mov
sbb
inc
pushf
or
test
mov
popf
cmp
jbe
push
or
shr
in
out
je
pop
cld
imul
cltd
push
loop
adc
fadds
fdivrl
stos
sahf
ss
dec
inc
fadd
add
test
adc
outsl
mov
shl
movsb
adc
xchg
gs
sarl
imul
lret
or
sbb
icebp
es
adc
adc
nop
mov
iret
pop
xchg
stos
mov
mov
sbb
sahf
icebp
mov
repz
movsl
je
cwtl
data16
stos
movsl
imul
sbb
xchg
cmp
push
in
and
in
int3
stos
jns
dec
xchg
je
inc
sub
ret
loope
data16
sbb
mov
out
or
iret
fwait
sbb
push
int
push
dec
in
mov
ja
pop
xor
jb
jp
lock
inc
sbbl
sbb
xchg
lret
jge
mov
cmpl
clc
mov
mov
add
xchg
cs
mov
sub
cmpsl
fcoml
fwait
mov
xor
sahf
xor
repnz
mov
arpl
xchg
inc
dec
call
ds
int
push
push
xchg
pop
adc
bound
jnp
fs
add
ffreep
in
test
push
rcl
pop
jg
jmp
fadds
and
sbb
ljmp
inc
mov
pop
pop
push
test
inc
pop
sarl
add
jecxz
loope
dec
data16
push
scas
not
or
mov
or
data16
test
xchg
sub
outsl
icebp
outsb
test
jl
adc
out
popa
mov
loope
pop
stos
out
in
out
xorl
stc
pop
cmp
xlat
sti
pop
sbb
pop
inc
in
pop
add
lods
call
sbb
push
lret
adc
or
scas
push
cmp
inc
or
lret
and
cltd
mov
iret
stos
test
dec
xor
cs
je
ljmp
mov
dec
add
incl
mov
jecxz
dec
sub
aaa
pushf
daa
int
aas
ljmp
es
sbb
lds
push
out
cwtl
pop
jmp
out
mov
sub
sub
fimull
mov
lds
inc
je,pn
ficoml
push
out
adc
into
int
jp
insb
sub
add
pushl
add
js
mov
mov
gs
and
or
iret
add
adc
sbb
pop
ss
adc
das
lea
jnp
stc
js
cmp
mov
rorb
lcall
and
shrl
cmp
push
vmread
in
adc
jp
mov
push
mov
jns
lret
jne
or
cmpl
popa
adc
xor
pop
inc
out
ficoml
in
inc
cmp
cmpl
jnp
fsubrl
mov
sub
fs
add
mov
insb
xchg
aaa
data16
sbb
cmp
dec
jae
stos
pop
lods
jb
aam
fdivl
mov
clc
or
mov
mov
int
in
lret
dec
ret
mov
call
cwtl
adc
es
testl
push
push
jp
je
pop
or
or
in
pushf
movsl
push
xor
out
mov
movsl
pushf
lock
sti
xor
add
xchg
sbb
cmp
shrl
inc
mov
adc
cmp
adc
ret
xchg
ss
lcall
fstpt
inc
xor
leave
add
xchg
insb
cli
pop
icebp
mov
mov
out
push
adc
in
xchg
movsl
fs
loop
clc
xchg
shlb
pop
jle
iret
sub
push
push
mov
loope
or
insl
out
loopne
xor
insb
std
ret
mov
loope
mov
adc
pusha
sub
add
xchg
pop
andl
xrelease
aam
mov
fists
inc
pop
push
mov
push
aad
add
push
mov
aas
jg
jbe
mov
fnstcw
xchg
mov
add
lret
mov
push
pop
ss
fmull
ret
and
inc
pusha
scas
xchg
scas
sub
cmp
icebp
push
stos
mov
cmpsb
shl
mov
push
icebp
in
xor
or
cmp
jl
lods
movsb
imul
adc
and
gs
in
cld
iret
cli
push
push
push
and
xor
in
push
jns
pop
jae
push
inc
ret
jo
inc
push
jae
fbstp
ds
add
add
jl
in
cwtl
lods
cmp
adc
dec
jg
jp
callw
leave
cs
orb
mov
daa
mov
lods
xchg
cmp
adc
mov
adc
or
leave
mov
gs
sub
push
fwait
mov
insl
sub
or
orl
add
push
xor
sub
mov
lods
sarb
insb
sbb
lret
pop
xchg
iret
add
pop
lds
aad
mov
pusha
mov
bound
icebp
mov
inc
adc
jl
cmpsl
jecxz
in
jg
cli
and
sub
xorb
rcrb
and
dec
dec
fsubr
push
add
inc
add
mov
mov
pop
mov
push
dec
dec
push
pop
inc
or
scas
mov
inc
pop
fcmove
push
stos
popa
mov
imul
mov
mov
inc
mov
push
or
add
inc
sub
fisubl
and
icebp
mov
arpl
stos
sub
dec
sti
mov
push
xor
adc
addr16
or
inc
cmp
adc
fbstp
popf
sarl
jmp
pop
jne
mov
lret
scas
test
loop
mov
mov
icebp
fmuls
rcrl
loopne
fcoml
xchg
mov
mov
mov
sbb
aad
sub
scas
sti
add
stos
lret
gs
cmpsb
pusha
mov
push
pop
movsb
pop
js
cmpsl
cmp
dec
arpl
hlt
cli
int3
scas
scas
push
sahf
sub
int
cmc
testb
sbb
mov
xlat
adc
cmp
pop
mov
out
sub
js
jno
ljmp
cmp
sbb
std
hlt
aad
insl
loope
lods
bound
stos
insb
or
cltd
adc
out
das
lods
stc
add
or
add
pop
mov
das
fbstp
push
out
xchg
xchg
or
lock
imul
mov
mov
shl
inc
mull
sub
pop
outsb
adc
mov
outsl
mov
pop
sub
nop
jb
mov
jmp
ja
lods
xor
mov
les
fbld
lock
shlb
shr
xchg
sbbb
add
test
nop
add
mov
rolb
lret
aad
and
mov
lret
in
leave
rorl
mov
mov
cs
jl
out
pop
sub
jb
hlt
ret
dec
in
cltd
xchg
ret
outsl
cli
out
add
in
push
std
sbb
lahf
mov
jmp
out
xchg
inc
sub
inc
addr16
enter
das
push
jl
jb
ja
push
pop
out
dec
adc
test
sub
sarl
lea
push
mov
shll
js
pusha
int3
ffreep
rcl
inc
sti
and
mov
in
clc
sbb
aaa
jae
pop
subl
inc
aas
mov
sbb
out
push
cmp
push
fstp
mov
insb
in
test
sbb
fadds
lods
push
popf
pushf
sbb
adc
cmpsl
fdivrs
fsubp
inc
sub
push
dec
sbb
mov
leave
movsb
sbb
dec
fidivs
pop
les
mov
ret
call
psadbw
mov
loopne
push
sti
adc
gs
or
xlat
cs
push
xor
sub
jle
movsb
mov
pushf
js
push
adc
push
addb
mov
pop
or
xor
addr16
push
add
popf
cs
shll
notl
mov
jl
leave
movsl
sbb
dec
mov
sbb
imul
orb
cmp
cltd
cltd
pop
mov
jge
mov
lods
fstps
loope,pn
loopne
add
inc
cld
loop
popa
and
sbb
inc
dec
adc
in
leave
mov
roll
imul
mov
and
jns
test
mov
pop
xchg
outsl
and
jge
add
adc
mov
orl
leave
rcll
xor
xor
xchg
dec
add
pop
pop
outsb
ret
xchg
jns
add
nop
lcall
out
mov
lret
testb
mov
xchg
movsb
xchg
xor
int3
mov
in
add
rorl
movsb
pop
ss
add
sti
jge
arpl
mov
jns
sub
inc
xor
cwtl
inc
jle
xchg
aad
mov
addr16
jecxz
add
sbb
repz
ds
jg
int3
push
fisubs
mov
jb
int3
decb
jg
ss
cli
mov
in
fcomip
xchg
ss
insb
inc
jg
pop
imul
sti
scas
ljmp
push
xchg
inc
pop
ds
mov
push
xchg
insl
outsb
adc
fwait
mov
lds
or
push
fwait
sbb
push
xor
in
add
ljmp
jle
aaa
dec
xlat
mov
jle
jb
mov
push
pop
pop
xchg
testb
xor
mov
jne
fiaddl
adc
or
imul
push
shl
stos
adc
pop
jge
mov
xor
fdivrl
sbbl
shrl
repz
ss
jle
popa
movsb
inc
mov
jb
xchg
mov
lret
stc
sahf
in
push
stc
addr16
adc
aaa
mov
push
jge
mov
lcall
mov
dec
lock
outsl
add
add
add
push
mov
pop
es
aaa
mov
rolb
and
cmpsb
rcr
movzbl
pop
aas
dec
or
lahf
idivl
scas
push
inc
test
sub
mov
dec
add
mov
or
loope
int
cli
movsb
mov
addr16
xor
pop
sbb
xchg
or
inc
fs
add
notb
aaa
rol
push
test
inc
push
imul
jno
lods
cltd
add
repnz
sub
fdivrp
jnp
dec
test
lods
adc
xor
cli
sbb
mov
mov
jg
out
pop
stc
shlb
rcrb
inc
pop
jge
push
pop
in
loop
or
mov
jbe
jp
rorl
fiaddl
xchg
inc
cmp
add
jae
jecxz
sub
lret
scas
ret
mov
nop
ror
insb
inc
sub
push
xchg
adc
imul
or
mov
mov
inc
cmpsb
shrl
test
cmp
or
mov
fcomp
cmpsl
dec
cltd
jb
insb
pusha
adcl
jno
sarl
les
push
cmp
mov
adc
mov
lret
cld
fsubrs
mov
cmp
mov
in
ljmp
add
test
cmp
lea
adcl
movq
daa
xchg
sbb
sbb
mov
cmpsb
cmp
add
int
xchg
notl
inc
mov
jo
sbb
sbbb
jmp
repnz
mov
nop
sahf
sub
jmp
pop
sub
xchg
shrb
nop
jle
sbb
mov
xor
mov
rclb
xchg
int
jbe
push
dec
xor
adc
xor
cmp
out
pop
xor
mov
mov
pop
incb
adc
xchg
or
push
mov
fldt
shlb
mov
in
ret
cmpsl
in
sti
rcrb
addr16
mov
test
div
cltd
sarb
cltd
dec
adc
mov
pop
sbb
aam
mov
mov
movsl
nop
sbb
add
int3
mov
or
push
mov
xlat
nopl
sarb
adc
stos
pop
je
mov
cmp
sbb
notl
clc
dec
shlb
or
das
ljmp
ljmp
pop
lds
xor
movsb
push
push
push
add
cwtl
aas
in
je
int3
int
or
call
dec
cmp
fsts
ficompl
and
lret
mov
out
leave
aas
fldl
pop
fs
push
test
cltd
gs
pop
shll
rorb
lea
fisubs
push
lea
lods
pop
add
dec
or
sub
xor
jmp
add
je
pop
ja
jecxz
or
pop
or
mov
push
xor
mov
mov
jnp
inc
and
stos
movsb
push
pushf
add
cmp
in
inc
mov
mov
inc
add
scas
inc
sub
or
faddp
and
or
adcb
test
and
cmpxchg
test
in
jne
pop
cmp
xor
popa
or
das
push
pop
jne
cs
fistpll
jne
push
xchg
js
sbb
call
sbb
xchg
and
sarb
movups
inc
mov
ds
jae
and
jmp
mov
inc
dec
add
mov
mov
out
dec
fchs
mov
adc
xchg
xchg
jecxz
cmp
sbb
stos
jecxz
not
add
xorb
gs
xor
sub
stc
mov
mov
int3
or
leave
sti
fistpll
mov
inc
test
xchg
xor
jge
xor
sub
inc
scas
mull
xchg
nop
sub
and
cmp
xchg
push
fstpl
cmp
cmp
imul
pop
adc
jno
mov
xor
and
jle
cli
mov
gs
test
rorl
sbb
lea
ljmpw
xchg
addr16
or
lods
lds
sub
sbb
movsl
mov
into
mov
lcall
inc
xchg
mulb
cmp
movsl
sbb
test
dec
push
jecxz
cltd
addr16
fwait
push
sbb
sub
and
push
movsl
lret
fs
orb
jmp
repnz
test
push
add
subl
in
cmp
cmp
mov
sti
in
mov
jmp
rcrb
or
scas
js
cmc
test
jo
jmp
dec
jo
mov
jnp
xor
add
pop
cmpsb
jnp
jecxz
hlt
in
mov
inc
mov
lock
cmp
mov
test
test
jmp
xchg
jbe
ss
add
cs
jecxz
add
and
mov
or
imul
add
cwtl
lret
mov
scas
dec
dec
pop
cs
ds
pop
cltd
sbb
and
pusha
pop
stc
inc
dec
pop
dec
mov
mov
push
cmpsl
gs
lods
out
lcall
add
xor
repnz
stos
push
pop
and
jae
jne
push
into
cld
idivl
nop
add
bound
sarl
int
orl
imul
and
add
pop
push
insl
imul
mov
shlb
lods
cltd
and
mov
mov
out
sbb
lds
addr16
or
int3
sbb
int3
jbe
mov
add
test
sbb
sti
xchg
rclb
into
mov
out
mov
push
cmpb
dec
rcrl
movntq
test
xor
mov
and
jmpw
cmpsl
inc
in
xchg
leave
sub
aad
mov
push
bound
push
shlb
and
inc
loop
movsl
inc
pop
cwtl
fisubs
jl
xchg
inc
movsb
jecxz
jecxz
sub
popa
lock
idivl
popf
sub
aad
push
and
lock
sub
mov
scas
mov
icebp
test
clc
pop
jl
mov
or
pop
iret
mov
dec
dec
push
out
inc
inc
pop
insb
push
dec
in
or
insl
jo
push
js
ficoms
nop
repnz
push
mov
lret
fistpl
jno
pop
push
adc
xor
jge
mov
es
aas
push
rcrb
xor
gs
movsb
inc
adc
popa
mov
dec
testb
cmpsb
mov
and
cwtl
push
in
pusha
loopne
mov
test
aas
mov
jnp
sbb
out
aas
or
jge
inc
sbb
adc
jae
mov
mov
mov
arpl
mov
repz
sub
or
ja
lfs
sub
jbe
call
aaa
sbb
movsb
imul
fsubr
adc
aam
loope
pop
and
rcr
out
adc
push
repnz
jmp
sti
adc
dec
pushf
sbb
in
loopne
push
outsl
imul
outsb
fnstsw
das
cmp
and
gs
sarl
xchg
jno
xor
sbb
cmp
fs
test
dec
les
mov
dec
aam
lahf
popa
aas
inc
std
arpl
sub
dec
add
out
pop
inc
pop
out
sti
fs
sbb
pop
dec
imul
and
push
aas
jp
sti
jns
test
iret
loop
jle
sub
add
push
and
daa
adc
lods
addr16
push
lods
cmc
mov
roll
sbb
pop
push
shlb
sub
sub
mov
jge
arpl
lock
inc
repnz
repz
cmpsb
shll
or
sarl
sbb
xchg
lods
sbb
daa
xchg
mov
inc
inc
pop
mov
mov
icebp
mov
add
xor
mov
int3
popf
push
leave
ja
aam
pop
outsb
rcll
ss
jge
sbbl
cmc
je
addl
add
data16
inc
xchg
or
push
mov
nop
ds
test
sub
aam
xor
ficomps
xor
loop
mov
xchg
xchg
shl
or
and
add
insb
sub
dec
ret
lcall
jecxz
inc
mov
stc
lahf
push
mov
inc
ljmp
inc
jp
or
js
nop
shl
pop
add
mov
arpl
cmp
fninit
push
cwtl
sub
in
xchg
std
repz
mov
mov
dec
inc
mov
sbb
test
pop
daa
imul
jl
repnz
pop
fstps
test
js
out
outsb
fcmove
jb
adc
call
push
jmp
in
imul
mov
das
scas
push
std
mov
push
push
pusha
xor
mov
aam
push
cmpl
cmpsb
jmp
xor
popf
nop
test
faddp
out
enter
xchg
mov
dec
push
inc
pop
push
mov
push
jae
inc
nop
mov
jp
js
add
xor
sub
add
mov
stos
lcall
or
jl
scas
or
out
push
sbb
mov
mov
cmc
insb
inc
mov
or
jbe
fxch
mov
lret
cmp
mov
rclb
imul
pop
cmp
fldt
fucom
sub
andl
cli
movl
inc
movsb
imul
shl
dec
dec
mov
add
jo
bound
sbb
sar
adc
jo
stos
mov
idivl
adc
les
push
test
ret
or
shr
push
pop
cmpsb
outsl
popw
in
cmp
fs
scas
push
mov
jmp
push
jo
jbe
mov
mov
jne
movsb
jb
lods
ss
fucomp
and
inc
sub
aad
pop
shll
xchg
gs
cmp
repz
mov
addl
pop
cmpsl
sar
imull
jno
push
inc
or
lahf
out
das
bound
ds
lcall
mov
rorb
loopne
push
scas
in
mov
scas
outsb
mov
nop
shl
push
xchg
pop
dec
mov
stos
popa
into
test
jbe
scas
imul
addr16
clc
mov
mov
sahf
pop
xchg
stos
mov
test
or
cld
push
inc
ret
cwtl
mov
xchg
in
in
movsb
push
cmp
and
mov
push
mov
cmc
cmp
daa
sbb
sbbl
in
popf
in
xchg
and
push
xor
cmp
addr16
inc
push
incl
mov
sbb
aas
dec
xchg
xlat
or
in
adc
push
imul
mov
imul
push
add
mov
loope
sbb
dec
adcl
test
je
in
or
mov
icebp
adc
or
xor
out
ds
lds
inc
adc
lds
in
jge
fdivl
into
add
sub
jo
shrl
add
or
cld
scas
insb
rolb
popa
mov
ja
aas
lock
push
jle
pop
adc
ds
test
and
movsl
test
xchg
and
ret
iret
mov
sahf
sub
stc
les
mov
mov
sbb
shlb
pop
sti
mov
add
leave
cltd
test
xor
adc
movsl
cmc
mov
or
dec
and
clc
int
add
lods
pop
das
jne
add
jmp
shrl
test
sub
fsub
and
inc
mov
stos
xchg
cmp
rclb
xchg
cwtl
lret
repz
icebp
popf
cltd
dec
mov
xchg
ljmp
bound
rorb
aad
dec
jmp
jae
loop
add
pop
int3
jns
js
je
sbb
adc
out
ljmp
push
cltd
fisttps
push
pop
test
sti
daa
cmpsl
and
pop
shlb
xor
jae
push
ror
cltd
in
and
adc
cmp
cmc
movsb
cmp
inc
lock
adcb
sub
jno
mov
fidivrs
and
dec
jle
or
push
or
adc
ja
push
add
add
jp
cmp
push
movsb
in
mov
mov
push
mov
xchg
mov
test
decb
lahf
sbb
je
jecxz
or
and
xchg
out
popf
inc
aas
sbb
adc
jns
adc
jns
addl
lock
in
sbb
jmp
or
sbb
jle
push
fldt
enter
dec
bswap
cmpsl
or
mov
fisttps
ljmp
pop
das
add
and
leave
repz
lcall
mov
adc
mov
inc
sbb
mov
push
subb
add
repz
jecxz
cli
mov
add
xchg
push
divl
inc
shrb
xchg
adc
mov
jecxz
sbb
and
iret
add
in
pop
ret
push
inc
sbb
adc
loopne
dec
xorl
cltd
inc
movsb
mov
sbb
cli
in
push
movsl
shr
mov
rcll
pop
mov
xor
idivl
aam
data16
xor
sbb
adc
xchg
js
and
fidivl
insl
mov
sub
xlat
mov
mov
xor
cltd
xor
out
pop
fsub
std
inc
mov
adc
mov
lcall
enter
aad
pop
lods
mov
xchg
fistpll
cmp
mov
pop
xchg
ret
aam
dec
jle
sbb
je
or
sub
push
mov
arpl
cltd
add
jne
jne
jae
and
jbe
sti
ljmp
and
xlat
or
push
filds
mov
dec
push
mov
rcr
fcoml
sbbb
aam
pop
scas
in
mov
fisttpl
repnz
push
jl
mov
sub
dec
lcall
sti
pop
mov
add
scas
out
mov
fwait
push
test
int3
popa
loop
stc
adc
cmpsl
xchg
and
loop
cmp
sbb
jnp
mov
mov
adc
xor
popa
push
dec
popf
lahf
or
adc
xchg
dec
mov
mov
or
loop
fnsave
vunpckhpd
mov
movl
pop
xchg
roll
sbbb
mov
adc
test
ret
aam
in
lcall
xchg
mov
shll
xchg
in
adc
int
sbb
lods
add
sub
jns
aad
cwtl
repnz
aam
cmpsl
test
shll
jb
pop
push
std
dec
cmpsb
mov
mov
mov
aaa
mov
fldcw
and
sub
mov
mov
mov
mov
daa
gs
add
cmpsl
adc
or
jg
fstpt
add
mov
inc
loope
imul
into
jbe
cli
pop
outsb
pop
and
stc
shl
pop
pusha
pop
mov
jmp
addr16
pop
cmpsb
push
cmp
push
adc
inc
add
mov
outsb
mov
iret
ja
ret
mov
sub
call
lods
test
cmp
dec
sub
mov
fildl
cmp
pop
cli
repnz
imul
cmpl
push
test
jne
inc
cld
cmp
out
clc
sbb
lea
push
mov
frstor
in
jns
and
rclb
sub
xchg
lcall
mov
dec
fidivrs
and
fnsave
add
lea
adc
push
mov
add
add
mov
sysexit
out
jg
cmp
pushf
jno
in
pop
pop
dec
arpl
pop
loop
stos
sub
mov
gs
cmpsb
jb
inc
sti
stc
outsb
xchg
ljmp
repnz
lret
mov
and
popa
inc
xchg
insl
pop
add
adc
scas
jo
or
mov
stos
add
repnz
pop
ret
push
test
dec
add
mov
jns
popa
es
hlt
cwtl
std
cmp
jnp
rcll
inc
xor
xlat
jmp
inc
sahf
arpl
mov
xor
xchg
xchg
lret
push
xor
pusha
rorl
xchg
cli
mov
dec
push
mov
sub
sub
inc
shrb
pop
or
in
mov
push
mov
sub
or
add
inc
aas
into
scas
jecxz
xlat
sbb
ja
jb
arpl
lret
dec
sbb
mov
mov
lods
cli
das
dec
cwtl
outsl
push
push
cmc
xor
inc
fisubrs
loope
mov
and
pop
jl
and
es
int3
filds
test
or
sbb
cltd
cmp
sub
xchg
cmovbe
sbb
push
adc
dec
repz
or
fmuls
imul
push
faddl
dec
cmp
out
mov
cmp
push
push
sub
jb
outsl
mov
jmp
mov
adc
mov
cmpl
xchg
mov
cmp
fidivrs
inc
cli
pop
or
fisttpll
jbe
inc
push
and
or
xor
repnz
lock
rol
cwtl
and
lea
push
dec
popa
sbb
insb
or
hlt
xlat
repnz
cltd
inc
movsl
add
rclb
jb
pop
bound
out
scas
call
push
outsb
pop
aam
and
jb
aas
jecxz
fcoms
sbb
scas
jmp
in
xor
das
xor
adc
lods
cmc
dec
mov
scas
out
dec
jo
stos
outsb
insl
jle
xchg
jb
adc
int
mov
loop
or
adc
cwtl
insl
sbb
adc
xor
out
out
jo
aad
push
add
fisubs
and
hlt
sub
jecxz
xchg
lret
xor
ret
call
or
movsl
mov
adc
gs
pop
ror
inc
mov
cli
ja
jmp
bound
dec
lahf
stos
dec
imul
lahf
and
imul
mov
pushf
jge
clc
clc
lock
sbb
sarl
inc
fsts
pop
lahf
fcoms
xchg
mov
ja
or
jg
cwtl
loopne
sub
mov
mov
xchg
xchg
cmp
adc
adc
iret
loope
pop
stos
xor
out
xchg
iret
pop
or
push
sub
gs
sub
in
cs
arpl
jp
jbe
enter
iret
jge
add
jae
jge
movsb
lret
fs
dec
gs
push
dec
jp
std
and
adc
cmp
mov
xorb
push
xchg
pop
or
nop
mov
jge
stc
test
test
jmp
in
notl
sbb
sbb
fbstp
dec
dec
xchg
and
dec
cmp
out
outsl
lods
xchg
mov
icebp
cli
or
mov
mov
fldt
js
xchg
insb
add
inc
mov
mov
push
sti
jne
out
bnd
daa
mov
cmc
cld
xor
xor
mov
fdivl
pop
es
imul
xor
movsl
out
mov
push
sub
xor
jno
clc
mov
es
or
push
enter
jns
jnp
push
mov
mov
fisttpl
sbb
orb
sbb
jae
in
lock
jb
cs
inc
mov
mov
popf
fstpt
sub
rcrb
clc
lret
das
js
jl
inc
xchg
pusha
pop
xchg
xchg
mov
mov
and
pusha
mov
jnp
outsb
imul
les
std
inc
test
pop
sub
add
mov
mov
xchg
push
sbb
push
jns
jle
aad
aaa
push
jnp
jmp
cmp
hlt
cmp
fsub
ret
mov
out
imul
mov
push
mov
pop
mov
out
jb
push
lahf
out
data16
gs
les
lods
loop
out
push
loop
call
add
incb
sub
cmp
fcoml
decb
add
sub
xchg
dec
add
cmp
ret
cs
add
pop
jbe
mov
sub
in
stos
sbb
iret
repz
ss
xor
sbb
jmp
push
dec
mov
stos
dec
inc
aad
or
inc
fmul
in
jmp
sbb
das
lret
dec
mov
push
out
ja
mov
call
mov
inc
les
loope
pushf
cmp
mov
dec
pop
movsb
add
cld
ljmp
mov
add
mov
mov
in
sub
jb
fists
xchg
aam
lods
std
ret
lea
orl
pop
stos
push
rolb
xor
cmp
fcmovu
daa
cltd
fcmovu
cmpsb
jns
adc
cli
push
mov
pop
leave
fucomi
mov
rcr
cs
cltd
je
mov
xor
or
stos
xor
sbb
cmpsl
lea
dec
xchg
or
jb
js
outsb
push
sub
cmp
mov
push
movsb
rcrb
cli
push
or
stc
pop
fwait
lods
pop
in
dec
adcl
dec
jne
in
or
es
jns
out
mov
mov
jge
iret
fptan
pop
inc
pop
inc
sbb
and
popa
push
add
cmovg
test
out
fimull
or
jg
pop
jnp
sub
stos
scas
int
sub
pop
dec
in
xor
mov
ss
stc
in
call
pop
dec
push
push
jb
aas
push
xor
ret
sbb
mov
mov
mov
rorl
frstor
inc
hlt
pop
add
in
incl
enter
cmp
lods
adc
aam
and
cmp
mov
inc
sub
and
jp
adc
in
jl
cmp
shrl
or
in
rol
scas
xor
inc
popf
inc
mulb
ret
push
mov
pop
cmpsb
and
negb
loop
cld
dec
cmpsl
lock
cmp
leave
test
sti
xor
or
add
jmp
aad
and
pusha
test
cmc
pop
repz
mov
aam
or
xchg
sbb
adc
push
mov
fwait
or
adc
mov
push
aam
xor
testb
jb
loope
push
inc
xor
out
pop
shl
mov
hlt
repz
pusha
adc
pop
data16
nop
xchg
inc
mov
out
popf
outsl
mov
mov
popa
je
mov
push
cwtl
shrl
lret
cmp
or
and
push
jb
jbe
repz
adc
jl
sahf
mov
jg
pop
pop
xchg
sahf
mov
push
ret
out
pop
test
aam
out
xor
leave
jge
js
imul
add
mov
leave
xor
mov
les
adc
hlt
jg
in
pop
arpl
rolb
sbb
pop
add
mov
out
rcr
daa
or
sahf
mov
movsb
fnstenv
mov
adc
sbb
mov
xchg
scas
xor
movsl
test
push
lret
call
dec
test
aam
or
lock
repz
jne
loop
push
inc
xor
in
push
mov
and
dec
jb
xor
xor
je
sbb
testb
cmp
push
lret
lret
push
int3
dec
add
bound
mov
mov
mov
add
jecxz
jmp
femms
cmpsb
mov
push
mov
mov
dec
rcl
mov
xchg
sbb
sti
and
cmp
inc
mov
shrb
mov
dec
loope
popa
dec
mov
add
push
mov
fucom
scas
nop
adc
xchg
and
or
pop
stos
popf
and
pop
pop
mov
movsb
in
and
xlat
dec
mov
inc
mov
mov
out
push
shlb
fsubl
imul
xchg
lock
xor
mov
mov
pop
rcr
movsb
cmp
clc
decb
sbb
mov
sbb
ret
add
cmp
gs
clc
scas
or
xchg
sbb
adcb
and
inc
stc
sti
lcall
mov
fs
dec
out
incb
inc
orl
xchg
cmp
in
xor
outsl
lret
xlat
push
scas
jmp
or
inc
mov
lock
scas
lock
fstps
and
std
dec
push
fs
pop
push
mov
and
mov
insb
shrl
jmp
add
orl
pop
in
enter
movsb
pop
and
in
mov
mov
mov
inc
push
cmp
push
pop
in
sarb
mov
lods
xchg
adcb
sub
je
mov
xor
nop
imul
or
cmp
push
daa
je
mov
xor
or
mov
inc
leave
lock
add
hlt
adc
sar
push
xor
iret
cld
cmovle
or
jns
push
adc
push
adc
and
xor
ljmp
aas
clc
inc
dec
fidivrs
rcrl
jecxz
sub
mov
adc
aad
jo
cmp
das
inc
pop
and
cltd
aas
cmp
cmp
xor
add
push
cmp
je
and
mov
inc
jp
pop
jg
push
fwait
ja
push
scas
dec
mov
daa
out
cmp
les
subb
lods
xor
cmp
icebp
iret
xor
lret
sahf
mov
mov
and
rep
xor
sub
paddsb
mov
xchg
jnp
test
dec
and
test
mov
imul
and
jp
enter
xor
lods
push
cmpl
cmp
out
mov
or
shrl
int3
scas
sahf
push
scas
xchg
ficoml
jge
fisubrl
in
adc
xchg
pop
sbb
xor
mov
and
jbe
dec
adc
add
repz
std
mov
jle
mov
shll
pop
mov
outsl
sbb
mov
pop
lcall
dec
cmp
dec
push
mov
and
fcomip
nop
dec
mov
in
mull
mov
mov
mov
pusha
stos
push
mov
push
jno
sbb
loopne
jne
inc
mov
pop
cmpsb
pop
pop
cmp
cmp
mov
dec
cmp
adc
addr16
cltd
ficoml
shr
das
test
mov
adc
scas
sahf
mov
inc
fisubrl
shlb
push
sahf
pusha
sbb
pop
shlb
inc
js
xorb
stos
sub
fldenv
dec
push
popf
leave
jl
pop
scas
adc
hlt
test
sub
push
ljmp
inc
pop
lock
test
scas
inc
xor
and
inc
xor
dec
xlat
stc
dec
mov
inc
pop
xor
daa
popf
mov
mov
xchg
inc
sub
js
lcall
mov
pop
xor
mov
adc
jmp
cli
xchg
sub
inc
into
roll
dec
mov
bound
add
sbb
sti
pop
xchg
hlt
push
adc
mov
and
inc
add
clc
add
in
lcall
mov
shlb
mov
mov
fadds
leave
adc
xchg
push
sbb
inc
lods
mov
out
push
jge
stc
mov
es
arpl
sahf
jg
xor
sahf
cs
xchg
xchg
xchg
dec
inc
add
mov
push
les
imul
mov
pop
cwtl
adc
lret
popf
add
pop
sbb
pop
adc
data16
aad
sbb
mov
imul
into
rclb
pop
mov
pop
mov
shlb
jbe
aad
sbb
int
dec
mov
mov
enter
or
mov
icebp
into
mov
js
and
int
addl
or
aaa
xlat
ds
testl
clc
xchg
sbb
xchg
gs
add
adc
cmp
and
push
rcrl
or
lock
movsb
inc
jnp
lods
call
mov
xor
xchg
jge
add
add
adc
pop
in
push
ljmp
xor
add
das
xchg
movsl
data16
add
pushl
pop
cwtl
sub
aam
jg
jne
mov
cmc
cmpsl
idivb
bound
mov
push
fucomp
push
fimull
sub
lds
jmp
sti
dec
mov
adc
cmpl
ds
cmp
adc
cmc
mov
mov
and
dec
dec
lahf
leave
ja
lock
mov
jmp
xchg
fisttps
fsubp
test
add
fmuls
jecxz
xchg
cmpsb
jmp
leave
fs
mov
fisttps
cmp
or
adc
movsb
or
sub
dec
dec
or
fstp
mov
or
push
dec
xchg
inc
out
test
pusha
negb
mov
jmp
cwtl
mov
jb
subl
dec
inc
dec
push
sub
daa
js
push
mov
pushf
aaa
xor
fcomps
mov
hlt
cmp
cmp
cltd
fidivrs
mov
mov
loop
adc
pop
push
nop
int
push
push
cld
push
arpl
iret
out
stos
insl
data16
and
jnp
fcoml
sub
inc
in
sub
mov
dec
add
or
cwtl
imul
add
cs
inc
cltd
jno
leave
inc
test
dec
lcall
js
imul
shlb
sub
insb
clc
xchg
cmp
jmp
lahf
cmp
pop
cmp
adc
jmp
inc
fldcw
movsl
test
xor
add
sbbb
inc
jg
jno
lea
aam
addl
xchg
testl
iret
and
sahf
add
scas
lret
repnz
pop
sub
out
mov
cmp
ficoml
rolb
sub
mov
fwait
sub
xchg
add
xlat
xor
ja
repz
es
cmc
andb
aaa
cmp
daa
and
push
loope
inc
sbb
adc
cmp
call
imul
xchg
cmp
dec
adc
les
xchg
adc
sub
ret
cltd
jb
ja
mov
ljmp
or
jns
add
adc
mov
out
insb
jno
xor
add
xchg
pop
int3
xor
mov
aad
divl
sahf
sbb
out
add
loop
lcall
mov
or
mov
jge
and
adc
stc
out
dec
mov
iret
mov
cld
lock
pop
leave
xchg
dec
push
pop
fistps
rorb
pop
dec
mov
es
dec
lea
mov
fiadds
rep
test
sub
adc
jno
dec
lret
hlt
adc
add
add
pop
ret
mov
out
lcall
lcall
out
mov
xor
inc
or
call
and
test
sbb
jmp
int
rolb
push
mov
sub
and
cmc
ret
add
and
dec
cmp
sub
mov
aaa
sub
cli
mov
or
in
inc
sub
mov
test
sbb
daa
mov
adc
mov
sub
test
lret
call
loopne
push
jl
mov
cmpsb
xor
xor
mov
sti
lret
pop
ds
icebp
pop
fisttpll
sub
insb
pop
push
mov
js
loop
mov
arpl
sub
lds
adc
push
popa
mov
dec
hlt
sar
leave
lods
mov
cmc
jns
mov
jae
push
jg
jo
inc
adc
into
or
xchg
sub
fdivrs
add
mov
mov
jp
mov
mov
xor
fadd
xorl
dec
gs
movsl
je
inc
repz
pop
in
cmpsl
sbb
lahf
bound
rol
scas
int
mov
xchg
push
pop
into
ss
sub
shl
push
xchg
ja
sub
xor
ljmp
ret
sbb
mov
cmp
xchg
cmpsl
lea
stos
push
lods
sub
xor
jne
jb
mov
adc
lcall
add
adc
sub
in
insl
xor
lods
inc
lahf
outsb
imul
movb
jge
add
sub
leave
sub
loop
and
pushf
into
sahf
shl
add
gs
mov
sbb
stc
mov
leave
test
and
pop
xchg
aad
rol
int
mov
lret
add
cmp
in
dec
jno
cmc
js
call
xor
arpl
jb
out
add
pop
insb
sub
push
roll
pushf
jmp
dec
jecxz
into
sarb
add
mov
lcall
lds
dec
add
add
cmpsl
xor
sbb
sub
inc
icebp
pop
lret
inc
sbb
jnp
inc
adc
push
aaa
cmp
inc
pop
sub
xchg
lcall
dec
sti
mov
dec
lods
int
insl
and
hlt
xchg
add
lahf
push
jle
sbb
bnd
fwait
arpl
jle
cwtl
or
push
mov
loopne
mov
aam
push
and
cmp
nop
cmp
jno
jo
test
fiadds
jne
jne
aaa
enter
pusha
pop
frstor
or
ja
cmpb
in
jmp
out
push
out
mov
ja
test
sbb
out
data16
dec
pop
inc
out
xchg
fs
loop
add
jno
sub
lods
inc
adc
push
stos
mov
frstor
sti
adcb
imul
xchg
cltd
xchg
insl
lcall
pop
pop
in
xchg
mov
loop
movsl
add
mov
dec
shlb
mov
les
sub
xchg
sti
pop
aaa
or
pop
xchg
gs
jb
mov
push
xor
jmp
test
lods
jne
inc
cltd
xorb
icebp
add
and
xchg
fiadds
leave
mov
in
fs
stos
xchg
inc
xchg
or
xor
adc
cmp
and
in
cmp
sahf
call
sbb
push
stos
outsl
sub
popa
xchg
lds
or
jmp
call
mov
add
fdivrl
int3
adc
enter
dec
push
ss
sub
daa
and
insl
das
test
mov
xchg
daa
mov
pushf
insb
add
mov
lock
out
stos
mov
fstpl
nop
sbb
add
adc
cmp
adc
add
nop
icebp
add
mov
leave
outsb
push
imul
ja
into
adc
mov
lock
cwtl
pop
leave
mov
pop
test
int3
js
lea
and
out
outsb
mov
xchg
xor
xor
jno
dec
jmp
rcr
mov
arpl
cmp
int3
cmp
rcl
subb
mov
dec
cs
adc
lods
jmp
cli
add
dec
mov
pop
xchg
pop
ja
mov
pop
jp
lret
xchg
loop
lods
mov
in
ja
shl
inc
in
lahf
cmpl
mov
popf
mov
es
xor
pop
jg
mov
jo
push
mov
mov
mov
jmp
push
jg
fmul
xor
out
add
mov
or
clc
jo
xchg
add
xchg
mov
shlb
dec
or
ja
push
scas
sub
loope
ja
adc
mov
push
les
lds
mov
sub
lds
pop
mov
cmp
push
push
mov
lcall
xchg
call
int3
jmp
jo
dec
scas
mov
pop
mov
sub
xor
or
shrl
cmp
decb
nop
loopne
dec
dec
or
mov
xchg
fdivrs
push
imul
inc
repz
rorb
or
clc
test
cmpsb
push
push
fstpl
outsb
sbbl
mov
negb
mov
inc
mov
mov
ds
push
jo
add
mov
mov
xchg
push
fldt
mov
push
pusha
call
jno
xor
lock
int3
push
pop
scas
lea
shll
in
jmp
xor
sarl
or
pop
dec
stc
mov
sub
jl
jl
inc
roll
jbe
mov
imul
xchg
push
push
and
jno
jmp
and
dec
push
fstp
lock
andl
xchg
push
jb,pt
push
xor
mov
rep
repnz
aad
sub
sbb
mov
mov
add
adc
push
pop
fwait
jns
mov
loopne
xlat
jne
jo
in
js
sub
mov
loop
adc
push
cmpsl
sbb
add
mov
pop
dec
cmpsb
mov
jmp
sbb
inc
adc
in
into
add
lret
outsl
out
pop
mov
push
pushf
hlt
fistpl
sbb
bound
inc
or
add
adcb
pop
lods
jecxz
test
mov
cmp
rorl
sbb
mov
unpcklps
and
call
sbb
mov
sub
inc
or
out
mov
rorb
in
pop
in
push
punpcklbw
nop
nop
sarl
pop
addr16
inc
add
mov
dec
jp
xchg
mov
push
std
push
sbb
mov
inc
xchg
lret
lds
lock
lea
insb
popa
cmc
xor
pop
int3
xchg
dec
dec
adc
out
inc
ja
repz
mov
in
xchg
jne
out
adc
push
cmpsl
mov
ljmp
xor
dec
dec
fidivrs
pop
cmp
cmp
aaa
pushf
adc
outsl
test
test
cld
imul
arpl
inc
addl
loop
sub
test
cmp
cmp
dec
shrl
and
xchg
adcl
push
push
mov
cmpsb
sbb
fisttpl
inc
mov
cmc
shrb
xor
and
fs
mov
aam
cmp
mov
arpl
xchg
and
or
out
xchg
icebp
pusha
mov
add
dec
scas
dec
cmpsb
cltd
adc
sbb
bound
push
xchg
daa
pop
jb
movsl
cmp
in
fldenv
stos
inc
gs
adc
xchg
lock
in
inc
inc
jnp
mov
lretw
pop
pop
push
jb
cmp
pop
sub
out
mov
pop
and
imul
xchg
jbe
adc
add
loope
loopne
sbb
xlat
jecxz
out
mov
and
int
bound
pop
cmp
cmp
orb
cli
stos
dec
jne
scas
mov
pop
cmp
and
mov
mov
mov
cwtl
mov
jle
loopne
sahf
xor
and
push
xor
sbb
xchg
lahf
add
int3
filds
enter
or
std
bound
jbe
in
fwait
insl
shl
cmpb
mov
add
push
mov
icebp
push
push
mov
iret
lcall
enter
cmp
and
mov
xor
outsl
arpl
jg
aam
lret
xor
imul
jnp
leave
adc
ret
cltd
test
and
enter
add
ljmp
fisttps
adc
popa
test
mov
cwtl
xlat
vaddsd
add
cmpsb
mov
js
pop
mov
mov
dec
test
and
cmp
xchg
ljmp
xchg
xor
add
outsl
sub
mov
rcll
dec
pop
add
fldl
push
jo
mov
sub
sbb
cmp
hlt
jnp
push
jae
cmpl
mov
dec
sub
test
fcmovu
push
jnp
int
lds
sbb
out
mov
aaa
jl
cmp
stc
jb
addb
mov
pop
fucom
push
sbb
dec
and
cmp
movsb
or
movsl
push
fsts
adc
mov
int
jae
pop
jle
pushf
mov
jne
sbb
mov
xchg
or
sbb
jp
fwait
push
mov
add
pop
mov
xor
mov
in
data16
mov
popa
jge
lret
in
movl
out
push
inc
sbb
and
fstl
xlat
mov
aam
inc
push
aaa
arpl
adc
mov
das
xor
popf
aad
fcoms
mov
int
or
push
xor
push
into
mov
dec
pusha
es
out
leave
push
aam
out
ljmp
movsb
stos
mov
mov
jle
or
cmp
pushf
fwait
mov
shlb
pop
sti
daa
mov
leave
pop
xchg
daa
adc
mov
push
aad
sbb
fwait
cli
inc
ficomps
outsb
cmpb
repz
mov
into
outsb
jnp
call
add
outsl
aam
cmpsb
ret
push
ret
lods
scas
scas
sub
cmp
cmp
sub
subb
je
push
xchg
inc
xchg
jmp
pop
jo
repnz
into
ss
test
daa
xchg
xchg
loop
scas
int
adc
out
movsl
cwtl
mov
leave
and
adc
inc
xchg
aad
inc
push
sti
push
cmp
push
cwtl
cmp
les
repz
push
jnp
adc
cmp
and
inc
leave
mov
xchg
sub
outsl
inc
push
xchg
fildl
leave
cmp
fld
cmpl
inc
sahf
xor
nop
xlat
add
adc
mov
notb
inc
and
insb
dec
pop
push
and
aas
int
lods
stc
fwait
mov
dec
aam
xchg
int3
fsts
call
adc
cmpsb
movsl
movsb
or
dec
mov
insl
mov
jmp
or
cli
lods
ror
jge
adc
dec
insb
test
or
ljmp
js
in
mov
lods
jp
aad
mov
sbbb
ljmp
lret
lret
or
lods
mov
sub
pop
sbb
mov
fwait
mov
cmpb
pop
push
int3
or
pop
push
pop
sub
push
fcom
dec
inc
sbb
loop
fidivl
outsl
jbe
and
int
sbb
add
pusha
pop
gs
gs
pusha
fbstp
ret
push
dec
push
sub
icebp
add
xor
xor
inc
jmp
outsb
je
xor
movsb
shlb
repz
test
sbb
je
cmpsb
push
imul
mov
or
aad
sbb
fnsave
stc
jmp
repnz
rorb
popa
xchg
jle
or
mov
popa
enter
push
and
cmp
inc
iret
retw
mov
and
or
pop
jo
sarl
bound
add
jno
xor
int3
jmp
das
push
sqrtps
insl
sarl
and
mov
push
mov
hlt
rolb
jbe
sub
or
or
fs
inc
lods
jge
sbbb
and
push
inc
mov
in
push
sbb
lcall
pushf
cmp
stc
das
mov
cmp
je
cltd
dec
fmull
std
mov
mov
sbb
ror
cld
pop
pop
lods
stc
jp
imul
jmp
add
dec
in
jecxz
pushf
cmpb
mov
mov
cmp
je
decb
push
cmpsl
outsl
pop
mov
push
outsl
xor
repnz
push
aas
test
cmc
adc
jb
rorb
inc
push
out
sbb
sahf
bnd
mov
inc
arpl
xchg
in
iret
mov
rcll
dec
test
addr16
aad
mov
cwtl
imul
or
pop
xor
add
mov
shrb
sahf
aad
push
pop
cmp
jns
scas
xlat
into
jae
cmp
jg
sti
icebp
dec
inc
cmp
cmpl
aad
arpl
push
pop
lods
in
idiv
xor
sbb
cwtl
stos
or
jmp
or
fadd
cmp
scas
cli
push
in
and
insb
mov
mov
push
cmp
gs
arpl
or
push
pushw
cltd
cltd
jg
pushw
mov
je
dec
outsb
int3
mov
mov
add
sarb
jno
cmp
mov
pusha
or
rcll
mov
sub
cltd
xor
pop
cmp
xlat
sub
pop
lods
insb
loopne
adc
push
cmpsb
lret
leave
cmp
push
and
and
sub
outsb
dec
add
es
mov
sbbb
inc
dec
mov
stos
adc
mov
mov
incl
sub
loope
rorb
imul
mov
cmp
lods
lea
jb
or
cld
push
cwtl
jmp
lods
inc
cli
es
jp
xchg
shrl
sti
dec
sub
mov
cwtl
je
loopne
jg
out
cs
movsb
ja
lea
shlb
push
mov
mov
pop
insb
inc
icebp
jle
data16
mov
or
lods
push
call
mov
loopne
rcl
outsl
test
sti
cmpsl
scas
xor
mov
js
cmp
aas
int
pop
xlat
and
cmpsb
or
or
sub
aad
jmp
adc
xchg
mov
add
into
in
out
data16
cmp
mov
xor
lret
or
xchg
ja
lret
sbb
inc
sbb
push
push
mov
not
mov
mov
xchg
aam
push
mov
mov
fcoml
sbb
pop
mov
lods
xor
add
in
sbb
jnp
inc
inc
pusha
jne
add
inc
mov
sbb
test
ss
daa
aad
cli
xor
or
test
push
sbb
mov
inc
cmp
or
mov
fs
je
outsb
rcrl
mov
insl
xor
cli
je
push
cmp
aas
inc
sti
gs
and
cmpsb
dec
jbe
fcmove
sub
xchg
pop
scas
fdivs
xchg
shlb
pop
fdivrp
sub
jge
sbb
mov
pop
mov
ss
lods
sub
or
push
xor
jb
nop
mov
sarb
cmc
sub
test
fdivrp
mov
mov
ljmp
pop
stos
cmp
and
add
cmpsb
and
arpl
aaa
push
movsb
dec
ss
cmpsl
fisubrs
adc
jmp
cmpsl
mov
dec
xor
out
addr16
mov
mov
inc
sbb
outsb
push
data16
push
ljmp
in
push
xor
test
loopne
jno
lods
add
or
mov
cld
rcrl
cmp
out
and
ljmp
jecxz
shl
imul
rcll
loope
jne
in
inc
iret
in
or
pop
and
dec
inc
out
js
mov
xchg
or
jl
push
pop
pusha
xor
stc
loopne
xchg
sbb
pop
lret
mov
push
maskmovq
mull
inc
push
sub
test
sahf
push
cltd
adc
xor
pop
mov
aad
cmp
data16
ret
shlb
test
inc
in
ret
dec
in
pop
scas
xlat
rol
aam
adc
xchg
dec
out
inc
shl
add
aaa
stos
inc
ljmp
addr16
push
inc
pushf
je
test
mov
push
das
pop
lret
rorl
add
jbe
aaa
dec
enter
dec
sub
adc
inc
shrb
out
push
jl
int3
add
mov
pop
dec
xor
jae
or
mov
inc
daa
std
in
sahf
std
icebp
push
sbb
adc
aas
adc
inc
pop
aad
in
test
mov
and
add
push
push
xchg
lret
insl
fs
test
add
sbb
les
addr16
cmp
hlt
mov
push
sub
xchg
into
ret
decb
adc
scas
enter
mov
addr16
addr16
xor
sub
lea
jecxz
imul
or
stos
iret
and
ret
sbb
aaa
lret
shl
lcall
popa
in
sbb
jns
mov
das
cmp
xchg
negb
dec
or
and
fstpt
cwtl
adc
xor
push
and
repnz
adc
mov
ss
mov
fidivrs
test
sub
cmp
push
lret
and
fimull
out
dec
das
int
mov
adc
xlat
out
pop
xlat
call
mov
cmp
aam
cmc
push
imul
rcll
js
pop
hlt
cmpsb
adc
cmp
push
add
jbe
xor
ja
mov
loopne
sub
mov
orl
pop
fldl
and
add
push
daa
test
push
fs
sbb
mov
push
pop
fnsave
jns
in
repz
xchg
mov
xchg
lods
in
push
arpl
stos
xor
sub
mov
mov
or
add
out
inc
dec
push
aas
push
pop
ljmp
lea
adc
or
xor
mov
pop
repz
int
or
jne
lds
das
and
inc
std
daa
push
ss
cmp
jmp
push
add
les
nop
sub
addl
ficoms
mov
mov
or
mul
sbb
adc
sarb
int
subl
push
mov
fbld
lods
idivl
pop
xchg
mov
push
ds
bt
jbe
or
bound
jne
mov
xor
aam
ret
in
jbe
adc
lods
repnz
in
cld
xlat
aam
sbb
nop
xchg
fisubrl
jb
mulb
inc
dec
mov
js
insl
nop
into
ror
subb
movsl
mov
movhps
int
es
sti
adc
ljmp
fimull
fidivl
addr16
mov
test
insl
fcoml
ror
dec
jo
adc
shll
mov
in
cmp
cmc
push
jmp
xorl
fldpi
orb
int3
mov
push
test
jmp
xchg
xchg
aas
pop
imull
outsl
push
pop
fdivrs
jmp
lds
rclb
stc
sub
andl
push
pop
xor
push
dec
xchg
sti
loop
rclb
adc
test
inc
push
pop
jae
ret
and
mov
scas
test
dec
xor
sbb
mov
add
dec
jl
sub
sbb
jge
adc
and
bswap
lods
lods
rcl
add
pop
imul
outsl
cmp
outsl
adc
push
aam
and
xlat
test
mov
mov
jbe
jbe
es
leave
mov
pop
xor
fdivrs
notb
andl
insl
loop
int3
jne
insl
loop
ret
loopne
stc
clc
ret
xchg
cld
sub
jmp
aaa
jno
xor
adc
push
out
sbb
cld
loope
or
mov
movsl
sub
out
in
push
shll
ja
sahf
lds
jl
adc
je
fbstp
jecxz
ds
sub
cltd
fbld
xchg
cmp
jb
rcrb
sub
jae
xor
scas
popa
mov
sub
pop
adc
hlt
shll
or
fisttps
inc
sbb
push
ljmp
ljmp
inc
ret
adc
inc
adc
sahf
xor
xlat
out
jnp
mov
cmp
insl
fstpt
sbb
jge
je
jne
outsb
and
test
dec
aaa
pushf
fmull
adc
dec
adc
xlat
adc
pop
jnp
mov
adc
lea
xchg
fcmovnu
ret
jae
push
scas
aas
sbb
sbbb
pushf
mov
pop
loop
test
fstl
lods
or
mov
bound
into
insb
les
mov
mov
cmpsl
out
jae
loopne
fmuls
test
mov
inc
mov
jmp
xchg
adc
js
cmpsb
push
dec
xor
addr16
push
ds
jp
adc
push
cmc
cmpsl
and
adcb
pusha
cld
sahf
into
data16
out
jbe
lcall
jecxz
xchg
mov
int3
pop
les
in
rcll
inc
mov
test
hlt
fisubrs
movsl
fs
cmp
cli
cmpl
shlb
shr
sub
sahf
shlb
mov
repnz
push
iret
or
and
outsl
in
xchg
imul
cmpsb
ret
in
mov
jg
mov
inc
dec
jecxz
jl
out
add
jae
and
and
lods
xor
jg
mov
iret
pusha
lret
insl
nop
into
xor
inc
add
cmp
out
cmp
push
insb
pop
enter
cmp
pop
xchg
idivl
xchg
pop
xor
imul
ret
int
xchg
inc
lahf
das
mull
sbb
les
xchg
inc
imul
lock
fcmovu
pop
inc
repnz
sub
sub
mov
rcr
and
in
mov
adc
jle
test
mov
test
cs
push
int
sti
lds
pop
xor
setle
out
xchg
hlt
mov
es
out
xchg
adc
ljmp
or
push
mov
mov
leave
jmp
push
mov
fnstenv
das
jns
push
cmp
push
jns
out
mov
rcrl
xchg
mov
negb
and
sbb
js
dec
movsl
xor
dec
mov
imul
pop
addr16
sub
pop
fsubl
dec
jge
mov
jnp
pop
jge
mov
xchg
lods
cmp
xor
sbb
xor
ja
xchg
push
and
xchg
ret
pop
xlat
nop
and
clc
rolb
push
push
test
mov
inc
daa
ja
aas
push
sub
mov
jno
pushl
cld
cli
arpl
mov
fs
outsl
push
ja
dec
lds
mov
cmp
mov
test
and
ret
sub
hlt
notb
adc
or
cmpsb
movsb
cli
or
jmp
mov
mov
xchg
hlt
out
mov
pop
push
aam
dec
int3
sub
mov
loope
loopne
push
hlt
inc
and
fs
and
dec
push
dec
cmpsb
aas
mov
jns
lahf
bound
stc
sbb
jle
sarl
stos
sub
xchg
daa
outsl
push
movsb
add
pop
cld
pop
rorl
rcrb
xor
outsl
push
and
pop
mov
sub
int
push
xlat
stc
ret
mov
cmpsb
push
and
adc
push
adcl
jmp
clc
push
push
mov
outsl
xor
and
jp
and
sub
les
js
int3
or
mov
mov
and
sub
in
pop
add
enter
ret
push
mov
out
dec
or
stc
xchg
test
sbb
xor
sbb
wrmsr
push
les
dec
mov
fpatan
push
push
cltd
aam
cmp
mov
cmpb
mov
stos
sub
cs
jmp
mov
and
mov
and
pushl
jge
cltd
lret
shrl
adc
shlb
adc
xlat
xchg
nop
das
iret
xchg
mov
mov
test
pushf
dec
xorl
mov
pop
add
and
xor
pop
sub
stos
sbb
fdivrl
movswl
mov
dec
add
mov
xor
cmp
push
stos
sub
loop
sub
xchg
shll
push
ss
add
jle
cmpsl
mov
cmpsb
adc
cmp
dec
in
inc
in
or
dec
dec
test
cld
pop
lods
icebp
jo
or
in
pop
fsubrs
mov
cmp
out
or
pop
ja
lods
jnp
fwait
xchg
out
jno
sub
rorb
jne
inc
pop
aam
sbb
push
fisttps
sbb
ljmp
push
ljmp
mov
xor
mov
fwait
inc
out
or
daa
pop
sbbb
mov
xor
popa
jno
adc
cwtl
cmp
movsb
push
dec
sbb
divb
dec
xchg
ss
fimull
pushf
jg
imull
push
in
iret
inc
push
enter
repz
out
lahf
mov
dec
jb
jle
inc
outsb
insb
iret
incl
push
notl
xchg
cld
and
mov
inc
adcb
or
jns
shrl
jle
ja
xchg
leave
add
push
mov
mov
mov
repnz
mov
decl
pop
mov
push
mov
pop
daa
sub
movsl
stc
sti
push
cmp
lock
mov
stos
inc
fldenv
cli
mov
xor
aaa
xchg
push
cmp
xor
daa
ret
lahf
mov
jae
das
sbb
mov
add
add
mov
push
shlb
arpl
ret
dec
fisttpl
pushf
mov
pop
stc
pop
xorb
lcall
push
adcl
in
std
push
jmp
inc
push
push
mov
mov
and
mov
outsl
repnz
lret
pop
sahf
mov
or
dec
sbb
daa
fwait
pop
aad
cs
mov
pop
inc
lahf
cltd
fldl2e
dec
pop
popf
aas
popf
repnz
shr
mov
test
xchg
xchg
fmul
xchg
mov
jns
or
out
popa
lds
icebp
mov
xor
aaa
pushf
daa
in
decl
jne
lds
insl
sarl
test
rclb
loopne
pop
mov
jne
push
add
ljmp
movsb
cmp
cmp
outsb
repz
inc
adc
pushf
ret
mov
jb
rcrb
sbb
cmp
cltd
add
jne
add
out
and
cmpsb
jae
test
adc
push
cmp
pop
sbb
aaa
test
lret
je
mov
arpl
adc
mov
lods
adcl
mov
pop
lret
xor
jmp
lret
and
add
arpl
xchg
mov
pop
ja
stos
in
mov
or
fcoms
mov
pop
mov
xchg
imul
dec
jnp
call
push
insl
loope
inc
and
clc
jmp
btr
xchg
mov
arpl
mov
inc
aad
sbb
out
movsl
loope
pop
loope
jno
rcl
repz
xlat
inc
dec
out
std
mov
lods
js
sbb
mov
xchg
scas
jbe
aam
lock
sbb
mov
imul
pop
aad
mov
je
popf
rorl
notb
cs
xchg
repnz
mov
pop
lcall
cmp
loopne
outsl
scas
pusha
add
lret
aas
test
push
push
xchg
hlt
lea
or
js
mov
mov
lahf
out
mov
bound
das
jge
repz
out
shrd
pop
add
mov
call
ds
lea
add
adc
outsb
les
sub
test
fmull
loop
push
pusha
inc
les
push
jae
ret
push
xchg
cmc
aas
repz
in
test
enter
aaa
cli
sub
add
shrl
pop
stos
inc
cwtl
stc
addr16
sub
cmp
sahf
mov
fnsave
aad
xchg
pop
mov
mov
int3
push
push
xor
xor
inc
cmpsl
ljmp
gs
lret
mov
mov
xlat
cmp
sub
add
mov
xchg
ja
add
lahf
lahf
xchg
clc
dec
aad
cmpsb
pop
pop
dec
adcb
mov
cwtl
lds
hlt
aaa
test
cmpl
scas
inc
fcmovnb
push
add
lret
dec
lds
dec
cli
mov
inc
push
sbb
dec
ljmp
mov
jmp
pusha
loopne
cltd
add
jmp
loopne
enter
add
sbb
jge
out
pushf
pop
shl
fldenv
mov
adcl
fldt
insb
push
inc
mov
testb
lea
cmp
lods
dec
mov
sub
xor
mov
mov
nop
or
ret
movsl
mov
nop
lock
repz
lods
mov
adc
movsl
and
aad
pop
sbb
fldcw
mov
mov
cmp
inc
loope
fwait
xor
lods
rcrl
icebp
lahf
sbb
jmp
inc
nop
jae
sahf
mov
push
loopne
pop
dec
test
dec
sbb
test
cmp
sbb
sbb
cmp
les
cld
mov
pop
out
insb
fiaddl
pusha
mov
test
loopne
adc
sub
xor
cli
mov
cwtl
adc
pop
ljmp
sub
pop
ret
jno
cmpsl
iret
ret
xor
imul
lock
dec
imul
subl
int3
aad
enter
stc
and
xchg
fdiv
xchg
shl
lods
adc
inc
xchg
out
mov
xor
mov
enter
sbb
enter
inc
inc
dec
lds
pop
mov
scas
das
push
out
das
inc
out
ficoml
movsb
loop
mov
inc
and
roll
insb
pop
lods
jbe
push
aam
addr16
mov
addl
bound
aas
fldcw
jbe
cmp
push
ret
mov
fistps
mov
cmp
insl
mov
in
or
ljmp
enter
push
cmp
inc
add
cmpsb
sub
enter
mov
fldcw
inc
xchg
jle
mov
or
pop
push
aad
add
mov
fistpll
movsl
inc
jno
mov
call
mov
movsb
setl
gs
mov
xor
cld
push
repnz
test
cwtl
je
xor
cwtl
cmpsb
xchg
rcpps
ja
sub
xor
sub
cmp
ret
push
push
fs
mov
aaa
jae
sbb
xor
inc
cmp
cmp
outsl
jns
cmpsb
fsubrl
cmp
into
mov
adc
push
outsb
cmp
repz
out
icebp
xchg
dec
mov
roll
cmp
rcrl
out
pop
rorl
cs
call
xchg
or
xchg
jb
pop
cmp
dec
imul
sbb
mov
cli
flds
xchg
subb
push
xchg
insb
cmp
mov
insl
test
ficoml
dec
mov
jg
jne
or
scas
jno
mov
jle
nop
ret
scas
sub
jno
jg
ret
roll
std
push
xor
dec
mov
out
jb
jb
jns
xchg
outsl
je
mov
cli
ja
or
adc
mov
lods
cli
mov
mov
test
stos
ret
mov
clc
iret
xor
dec
mov
mov
push
dec
fnstenv
test
pop
xchg
icebp
jl
push
std
addr16
sub
fstpl
in
lcall
ficomps
cmp
jmp
fwait
bound
sbb
xlat
popf
pop
test
mov
inc
xchg
adc
sub
mov
std
js
and
push
mov
cmpsb
stos
nop
jmp
shll
mov
ss
mulb
xor
and
in
jb
pop
add
ror
ret
add
or
mov
mov
je
xlat
pop
sub
sub
cli
xchg
in
sub
push
in
rcrb
rol
inc
aad
stos
fld
fcom
mov
movsl
jle
stos
push
test
mov
add
lahf
inc
sbb
repnz
outsl
sub
mov
mov
add
int
ljmp
jb
out
mov
loope
cmpsl
test
ds
jno
inc
push
scas
loop
in
push
mov
popf
jl
sbb
daa
add
mov
sub
cltd
jp
aaa
loopne
sbb
sbb
js
xchg
ljmp
clc
inc
mov
and
repnz
push
sbb
aam
pushl
cmp
test
add
inc
test
lahf
xlat
xor
insb
test
xchg
dec
jno
hlt
mov
aad
mov
push
push
dec
js
mov
push
sub
fsts
outsb
cmp
push
dec
mov
dec
xchg
lods
out
lret
xlat
xlat
and
lcall
in
push
fcmovu
cmpsl
lock
stos
clc
dec
pop
outsl
or
mov
inc
stos
aad
test
jne
xchg
ljmp
dec
loop
imul
push
inc
adc
dec
fstl
cld
stc
mov
fs
xlat
aas
imul
int
mov
adc
fildll
ret
stos
mov
in
cwtl
xor
add
dec
stos
pop
mov
sti
ljmp
pop
mov
mov
xchg
mov
hlt
pop
pop
and
into
pushl
push
lret
test
sub
outsb
test
sub
inc
lret
lea
add
and
dec
inc
or
std
or
cmp
cmp
dec
mov
push
jnp
lds
xor
rol
add
stos
cli
clc
cmp
mov
inc
lahf
mov
mov
xchg
inc
stos
xchg
fcmovnb
leave
repnz
sbb
lret
inc
xor
sbb
push
mov
repnz
ret
fistl
rclb
out
and
fwait
adc
cli
cs
sub
inc
lahf
dec
test
jbe,pn
ret
jmp
fisubl
inc
out
sbb
sar
lcall
outsb
and
dec
jnp
xchg
jae
mov
jae
push
lcall
jnp
jnp
fisttpl
lret
enter
pop
or
jno
or
jbe
mov
test
enter
mov
rorb
push
rolb
cltd
mov
insb
dec
cltd
and
xchg
aad
push
cwtd
ss
cmpsb
ficompl
mov
xchg
sub
idivl
test
daa
sahf
xor
scas
xchg
mov
insb
inc
xor
shl
outsl
sub
cmc
stc
adc
push
stos
cmpsb
xor
testb
xchg
xchg
out
notb
std
dec
repnz
gs
inc
sub
dec
clc
cwtl
xor
sub
mov
scas
mov
sbb
outsb
xchg
push
xor
mov
mov
lcall
xorb
je
shrb
arpl
mov
mov
clc
clc
pop
mov
cs
mov
add
or
jno
lods
mov
jp
js
push
cs
sub
fistpll
clc
jg
jp
jmp
or
cmp
fxch
jbe
pop
test
fistpll
mov
mov
sub
push
int
inc
cmpsb
xchg
push
fadd
and
mov
inc
outsb
aaa
fildl
lahf
mov
fmuls
dec
pop
ret
in
aad
mov
jno
mov
push
out
aam
cmp
sbb
test
pop
loop
push
add
imul
loope
fdivrs
popf
inc
hlt
sub
jge
pop
dec
ja
mov
ljmp
and
mov
test
pop
mov
xchg
test
mov
pushf
inc
or
iret
mov
xor
loop
xchg
mov
sarl
push
sub
in
inc
test
push
pusha
mov
aaa
mov
sbb
and
sar
xor
mov
int3
in
dec
cmp
mov
idiv
js
dec
clc
mov
inc
mov
push
hlt
sub
xchg
push
mov
ret
xor
out
dec
push
cs
call
xlat
or
or
push
sub
enter
pop
pusha
out
nop
push
jnp
pop
fisubs
push
dec
add
stos
pop
adc
xor
pop
pushf
ja
xor
or
add
lock
mov
out
xor
mov
test
inc
lock
stos
inc
xor
sbb
and
pop
pusha
pop
fiadds
and
mov
push
add
push
lods
fdivl
xchg
sub
sub
jae
xchg
adc
bound
mov
stos
or
sahf
incb
sahf
adc
fptan
push
cmp
dec
pop
jno
icebp
push
jle
inc
and
loope
pop
jl
subl
popf
sub
lret
jg
ja
test
mov
jle
or
std
lret
out
adc
xchg
ret
fwait
nop
addr16
jae
cmc
jae
cmp
adc
jle
pop
neg
mov
pushf
outsb
call
ror
cltd
icebp
dec
sbb
rolb
daa
xchg
enter
lahf
fcompl
mov
pop
je
pop
xor
xchg
jle
cltd
popf
xchg
mov
test
add
push
test
insb
cmc
cmp
push
sbb
jg
adc
and
sti
pop
jge
aam
hlt
inc
pop
jns
fcompl
cmp
push
nop
and
dec
js
jae
lods
loopne
mov
or
xor
mov
adc
shrl
xor
int3
lcall
mov
cmpsl
xchg
add
or
dec
or
in
popa
mov
loop
movsb
push
inc
or
out
mov
push
jg
fstpl
mov
dec
and
out
pop
lods
scas
mov
push
mov
mov
fnstsw
enter
adc
add
adc
push
shll
mov
cwtl
and
cli
xchg
shll
in
jbe
outsl
dec
mov
leave
xchg
lcall
cmpsl
stos
and
and
sbb
xor
dec
fmuls
das
mov
or
enter
push
imul
sbb
int
xchg
notl
ljmp
pop
shrb
push
and
sbb
add
xchg
push
test
push
enter
std
into
dec
adc
int3
aaa
mov
ja
or
mov
es
icebp
adc
mov
mov
repnz
mov
mov
hlt
xor
repnz
lea
ret
insb
in
push
inc
add
icebp
divb
cmp
dec
mov
push
bound
imul
add
mov
add
mov
cmp
ljmp
shrl
in
popa
cmpsl
mov
jnp
das
mov
gs
dec
cmp
add
int3
addb
xor
sub
adcb
mov
cmc
xor
andb
xor
lcall
pop
addr16
lret
or
fbld
push
arpl
mov
dec
adc
mov
mov
cmc
jmp
adc
and
mov
xor
pop
popa
les
and
mov
xlat
mov
inc
in
dec
dec
xchg
sbb
dec
pop
aas
xchg
mov
mov
or
hlt
movsl
dec
fs
xchg
lret
je
dec
ja
push
es
pop
sbb
jmp
lea
je
pop
dec
repnz
or
rorl
test
mov
call
xchg
jmp
push
xchg
jecxz
psubusw
push
jno
cmc
loop
push
int3
scas
jp
push
adc
xchg
inc
in
dec
cmp
xor
jno
jmp
lock
dec
mov
and
and
sahf
xlat
sub
in
xlat
ja
pop
cmpsb
cmp
notl
arpl
lcall
push
mov
cltd
inc
pop
dec
push
push
push
pop
or
je
mov
cli
push
fistps
sub
sub
pusha
scas
cmp
or
mov
or
cmpl
pop
fcoms
imul
xchg
inc
adc
push
in
daa
repnz
push
lahf
iret
xlat
push
jne
mov
dec
aaa
and
lea
mov
adc
fwait
push
out
adc
mov
jle
dec
mov
andl
loopne
scas
mov
mov
push
lock
and
aas
lods
dec
xor
cmp
xchg
cmp
mov
iret
cmc
and
and
jnp
cmp
cmc
or
lret
outsb
sbb
data16
pop
jnp
sbb
popf
popf
test
cmp
iret
cs
jl
mov
push
insb
mov
add
pop
out
cmc
jmp
xchg
mov
cmp
js
cmp
mov
inc
push
les
and
adc
outsb
pop
lea
clc
cli
jle
inc
dec
cltd
in
sub
jbe
lods
aad
fistl
mov
movsb
push
mov
cmp
sahf
inc
dec
insl
je
movsb
add
xchg
call
jmp
test
jbe
outsl
jne
bound
dec
sub
inc
adc
cmp
daa
rcrl
sahf
out
test
jg
fldenv
xor
mov
pop
pop
into
in
lock
mov
push
pop
push
add
xchg
xor
ficomps
jl
fbstp
inc
das
out
mov
test
or
data16
aam
fmul
mov
or
jns
incb
test
into
xchg
push
cmpsb
ljmp
in
into
mov
in
mov
in
cmp
xor
mov
mov
lds
sahf
mov
jl
xchg
push
subl
fwait
inc
mov
insb
out
push
and
cmp
inc
aam
lea
movsl
sbb
dec
mov
jg
xor
lods
test
popa
jnp
xorl
movsl
repz
or
fnstcw
push
lds
adc
jns
ljmp
and
sbb
jl
xor
roll
mov
orl
pushf
or
lods
jno
lods
xchg
fldcw
loopne
sub
mov
and
xor
rorl
pop
lret
xchg
outsb
pop
mov
call
sbb
hlt
aaa
aad
pop
jg
jmp
gs
mov
ljmp
inc
jl
or
sbb
ds
popa
out
ljmp
mov
pop
push
sbb
fldl2e
mov
roll
divb
test
aaa
push
inc
scas
gs
xor
mov
sbb
shl
das
inc
mov
std
es
testl
inc
xorb
call
cmp
outsb
mov
fsubrl
mov
jnp
or
pop
ss
and
mov
scas
mov
shlb
sub
je
cli
xchg
xor
cmpsb
mov
mov
sub
push
inc
out
lahf
push
pop
or
inc
gs
or
in
in
pop
sbb
mov
mov
movsb
clc
pop
sub
enter
xor
mov
xchg
into
sub
mov
lds
aam
pop
mov
xchg
pop
jmp
orl
inc
rcrl
xor
ljmp
push
lcall
pop
arpl
mov
gs
adc
mov
xor
dec
in
mov
sti
mov
inc
jp
xor
pop
sbb
xchg
cli
fucomp
or
add
sub
adc
outsl
adc
jnp
ficoml
and
xchg
cmpsb
and
shrb
into
xor
inc
pop
adc
and
repz
xlat
sarb
and
xchg
jl
or
cmpsl
rcll
outsl
sub
xor
push
mov
lods
popa
mov
std
xchg
fnsave
sbbl
mov
sub
in
pop
jge
repz
sub
mov
push
jns
inc
and
addl
push
fidivrs
sbb
pop
shll
pop
movsl
je
shrl
adc
stos
sub
ds
cwtl
stos
loopne
shl
inc
test
hlt
pop
insl
hlt
stos
jp
loop
fists
fidivrl
mov
push
pop
and
ret
scas
sbb
xlat
fwait
enter
xor
inc
pop
lock
cmp
ljmp
test
pusha
push
and
and
mov
es
loop
sti
orb
mov
lock
mov
lret
inc
and
mov
push
std
inc
out
xchg
mov
iret
jl
es
dec
sbb
jo
psubb
sub
sub
sbb
xlat
sbb
loopne
sarl
xchg
cmpps
cmpsl
mov
pop
dec
jbe
pushf
lds
mov
push
icebp
lods
insb
clc
lock
int3
ds
rorl
lds
loop
addr16
lahf
pusha
pop
addr16
arpl
cmp
fs
push
jle
fistpll
hlt
or
sti
mull
imul
adc
xor
sub
cmp
or
loope
and
dec
mov
cli
int3
inc
fnstsw
scas
jnp
mov
bound
dec
lahf
shlb
mov
push
leave
xorb
lcall
xlat
sbb
mov
mov
inc
pop
jns
jge
pusha
mov
jbe
stc
xor
push
jg
push
push
lds
cmp
and
je
in
loop
sub
cli
lods
mov
adcl
add
stc
ja
jl
stc
sbb
mov
scas
mov
push
xchg
es
mov
sar
pop
sahf
mov
inc
jp
cltd
sti
cmp
sbb
fcmovnbe
cmp
mov
mov
mov
fstpt
sbb
dec
or
jne
add
lock
repz
pop
int
lods
sub
cmpsl
lahf
repnz
in
pop
int3
jmp
lds
dec
inc
adc
jne
jno
ja
ds
enter
clc
adcl
cwtl
or
xchg
les
je
aaa
inc
out
xor
jae
push
jmp
cmp
dec
jg
addr16
mov
bound
sahf
pop
mov
push
stos
fwait
cmpsl
lahf
cltd
xchg
lock
das
jae
mov
cmpl
mov
fsts
loopne
pushf
add
flds
cmp
sha256rnds2
mov
mov
into
aas
pop
sbb
xchg
and
test
mov
xchg
sbb
andb
mov
dec
cld
xchg
mov
inc
hlt
cmp
push
add
jnp
scas
jo
jno
shll
inc
adc
sbb
scas
pinsrw
add
cmp
sbb
cmp
ss
sbb
pop
sub
adc
add
stos
pop
push
fidivl
hlt
iret
mov
lret
cmc
mov
sti
out
sbb
mov
lahf
shrb
mov
inc
int
mov
mov
flds
sar
cmp
pop
lods
aas
ds
sbb
imul
ror
ds
pusha
lea
hlt
mov
jge
cmp
ss
into
adc
jl
fsubrs
scas
je
mov
fisubl
icebp
mov
js
push
sti
and
fsubp
pop
movsl
or
clc
mov
xchg
out
push
mov
add
jge
imul
pop
pop
pop
test
orl
lahf
dec
fcompl
in
adc
idivl
mov
mov
mov
cld
jg
lds
pop
movsb
pop
push
add
mov
and
mov
scas
xor
xor
pop
mov
xor
push
adc
sbb
pop
sub
ljmp
ret
repnz
adc
or
in
sbb
inc
xchg
imul
mov
xchg
xchg
stos
or
test
push
fsubrl
add
aad
dec
sbb
adc
mov
jle
aaa
test
nop
push
pop
jmp
add
lret
and
mov
and
mov
and
testl
jne
imul
pop
add
mov
int3
and
outsb
bound
repnz
or
push
les
fdivrs
jno
xchg
subb
mov
cli
out
jnp
inc
cld
testb
cltd
jle,pn
push
scas
push
pop
pop
sub
xchg
dec
inc
mov
push
int3
push
or
mov
mov
jle
or
jecxz
dec
inc
xchg
cmc
loope
ret
repz
pushf
call
cmpsb
pop
movsl
mov
sbb
out
lret
cld
shrl
inc
pop
jecxz
sub
xorl
pop
mov
jo
int
pop
fsubr
inc
add
inc
sub
mov
out
or
xchg
jb
scas
inc
adcb
or
push
lock
fwait
push
lea
rcll
fsubs
nop
adcb
div
divl
cmp
mov
mov
out
out
data16
testl
fsubrl
fucomp
loope
jo
les
xor
aad
mov
cmp
mov
cld
jbe
pop
xlat
or
icebp
xor
adc
adc
mov
inc
pop
jp
inc
outsl
xor
ret
sub
inc
and
sbb
in
je
mov
dec
sbb
insb
mov
out
push
add
roll
pop
lret
sti
push
push
mov
idivl
out
leave
push
jo
jo
iret
lret
stos
push
add
lahf
mov
mov
cmc
daa
insl
stc
push
jo
lahf
pop
aam
and
idivl
xor
xchg
xchg
iret
stos
cmpl
or
into
enter
dec
notl
mov
inc
sub
popl
sbb
testl
mov
out
leave
mov
cmp
mov
or
pop
sbb
pop
jnp
cld
mov
das
push
iret
sub
push
dec
ret
fwait
sbb
dec
inc
push
adc
dec
or
das
add
dec
stos
sbb
adc
popf
movsl
outsb
js
movb
mov
test
jmp
mov
outsb
hlt
push
mov
mov
mov
sbb
ja
repz
or
push
test
lods
mov
dec
jnp
ret
repz
adc
jmp
push
into
cltd
enter
repz
sbb
mul
push
pop
adc
out
jb
lret
fptan
mov
inc
sub
imul
adc
xlat
and
test
pop
xorb
add
adc
pop
mov
or
pop
mov
xchg
cmpsl
loop
ss
xchg
push
push
hlt
push
mov
mov
out
sti
je
insb
lock
leave
cwtl
dec
pop
xor
dec
movsl
dec
cmpsb
lret
loope
or
jbe
add
mov
gs
inc
sbb
jp
sti
push
sbb
lods
enter
scas
rcrb
leave
mov
lcall
sub
inc
js
adc
lret
push
jg
in
fistl
push
inc
mov
jge
xlat
sub
sbb
jno
mov
out
movsl
aam
fidivl
jnp
xchg
aad
sbb
dec
in
repz
xchg
push
outsb
jle
aad
and
jb
sub
ss
jg
inc
push
inc
insb
js
stos
and
aam
imul
jbe
call
aam
xchg
mov
jae
push
std
mov
pop
mov
test
inc
mov
and
push
and
pop
push
add
jle
leave
inc
shll
iret
push
xlat
pop
loop
icebp
orb
xchg
and
andl
das
xrelease
mov
sbb
mov
adc
loop
pop
gs
popa
jle
mov
adc
jnp
mov
movsb
or
stos
inc
mov
test
insb
iret
pop
fisttps
push
adc
adcb
pop
mov
jl
data16
push
hlt
xor
movsb
cmp
inc
fucomp
cmpb
adc
pop
xchg
arpl
pop
xor
jbe
nop
cwtl
faddl
mov
jnp
outsl
mov
pop
mov
lcall
push
imull
out
arpl
mov
push
fstl
mov
mov
inc
jp
push
push
cmp
shlb
out
mov
cwtl
xchg
popf
inc
adc
dec
movsl
mov
mov
inc
pop
dec
test
mov
mov
jge,pn
outsl
cld
mov
pusha
stc
adc
bnd
fidivs
cltd
in
fxch
and
push
cmp
mov
mov
pop
stos
cmp
icebp
dec
out
ss
test
mov
inc
fisubrl
mov
pusha
in
dec
fidivrs
dec
aad
dec
lret
adc
push
dec
cmp
into
sbb
sub
dec
loopne
mov
test
addb
adc
sbb
cwtl
mov
pop
inc
in
and
pop
enter
fiaddl
jne
mov
inc
dec
mov
roll
int3
inc
inc
popa
ja
fwait
push
fldcw
jno
loope
mov
aas
jecxz
sub
adc
mov
rep
mov
adc
sbb
int3
inc
ficoms
sub
jno
out
cli
sub
jns
movsl
addr16
movsb
popa
add
nop
push
push
bound
sub
xor
aam
xlat
mov
mov
rorl
pop
jnp
movsl
sbb
pop
adc
jmp
sub
faddp
sarb
dec
jg
loop
jno
pop
push
loop
fs
cmc
sarb
lret
push
sbb
inc
inc
ds
xorl
sarl
jp
movsl
outsb
and
pop
fwait
pop
aaa
stc
shll
arpl
aam
cmp
roll
dec
pushf
clc
mov
jge
je
cmpsb
mov
add
sub
push
lahf
imul
push
adc
mov
jg
lock
jge
nop
xor
outsl
lret
add
hlt
add
ja
cmp
rclb
mov
sbb
xchg
nop
sahf
push
pop
pop
jg
bound
out
and
rcl
adc
jne
rcl
push
in
jbe
cltd
insl
push
pop
stos
cli
cs
dec
pop
and
mov
dec
out
iret
cmp
daa
pop
negb
mov
arpl
xor
pop
lods
mov
mov
popa
out
sti
hlt
ret
and
and
xchg
jb
push
jbe
sub
mov
pushf
outsl
and
pop
xlat
loop
lock
jge
movsb
jle
or
and
and
ljmp
xor
sub
aam
mov
mov
sti
cmp
rcl
ror
cld
andl
mov
dec
lahf
mov
lea
hlt
icebp
fsubrp
xor
sub
mov
dec
cwtl
mov
cli
or
das
je
mov
nop/reserved
adc
jge
inc
adc
mov
dec
int
mov
add
push
add
sub
ss
imul
aaa
or
popf
xchg
add
and
arpl
scas
cld
xchg
mov
bound
stc
dec
pop
int
lret
push
je
loopne
push
mov
sub
sub
repz
xrelease
je
jb
cmpb
aad
negl
mov
jl
sub
lock
notb
fcompl
cmpsl
mov
adc
jno
out
shrl
jl
or
out
mov
int3
in
mov
ret
leave
cmpsl
fwait
xchg
pop
outsb
int
cmpsb
lock
mov
cli
in
adc
cmpsb
adc
pushf
mov
jmp
gs
mov
adc
jmp
das
xchg
lods
sarl
cmp
call
add
inc
fs
jecxz
push
sub
mov
xlat
cmp
adc
aam
xchg
lret
sarb
pop
xor
inc
inc
pop
clc
call
add
dec
jmp
loope
mov
fs
mov
int3
test
rclb
jo
sti
xchg
push
mov
notl
popa
mov
and
jp
xchg
mov
jl
repz
dec
repz
inc
gs
faddp
adc
sbb
movhps
into
xor
in
je
stos
mov
outsl
sbb
sub
pop
jmp
cli
stc
adc
repz
xchg
leave
xor
mov
int
jo
fstpl
add
addr16
dec
adc
sbb
xchg
ds
faddl
or
idivb
lret
adc
mov
in
call
stc
dec
loope
js
jl
mov
cmp
ret
xlat
mov
push
test
frstor
mov
ds
mov
mov
sbb
je
aam
pop
pop
xchg
sbb
popf
mov
cli
cmp
ds
dec
xor
and
leave
pop
out
mov
sbb
lods
dec
xchg
subb
pop
sub
addr16
testb
ret
imul
lahf
cmp
repnz
rcrb
push
mov
mov
and
sub
aaa
mov
ss
insl
sbb
cmpl
xor
jo
stos
jmp
add
mov
add
loop
cli
dec
ljmp
enter
imul
or
push
hlt
test
in
pop
jnp
push
mov
mov
sbb
inc
outsb
jbe
mov
jecxz
cmp
out
push
cmp
in
jmp
mov
dec
hlt
and
jo
push
xor
ljmp
cmpsl
jae
lods
cmp
das
dec
jmp
or
sahf
adc
push
pop
popf
jnp
mov
aas
daa
xchg
mov
pop
push
dec
adc
push
shl
mov
pop
out
lock
jmp
into
scas
flds
pop
cmp
adc
add
loopne
cmp
lcall
sub
daa
ljmp
add
cmp
cmpsl
xchg
aas
mov
dec
imul
adc
sbb
jb
aad
addl
sbb
push
fwait
stos
idivl
fs
mov
cli
movd
push
in
aas
mov
adc
adc
sahf
out
lret
sub
ljmp
js
es
mov
pop
mov
mov
or
xor
jb
inc
es
inc
push
or
hlt
jge
inc
mov
dec
and
popf
or
stos
sahf
xlat
jne
add
testl
jle
ds
mov
mov
add
xor
cmc
mov
filds
push
ss
mov
inc
and
add
cli
je
adcl
xchg
repz
popa
inc
dec
lds
dec
dec
jbe
dec
mov
inc
leave
jl
scas
or
jmp
or
pop
and
sub
sub
pop
or
mov
lcall
mov
out
movsl
stos
test
lret
in
dec
rcll
jne
addr16
popa
mov
ret
pop
dec
fisubs
mov
sub
clc
mov
or
mov
jno
lret
jne
sub
add
pop
lock
inc
cmpsb
pusha
fsubs
test
cmp
repnz
popa
clc
pop
push
loope
push
enter
into
sub
jle
js
roll
xchg
cwtl
cs
push
xor
cli
mov
sbb
xchg
das
add
shll
jbe
mov
mov
aam
pop
xchg
lcall
adc
jg
dec
leave
in
push
subb
xchg
pusha
fsubrl
or
daa
sti
or
mov
jne
stc
and
std
setbe
popf
pop
dec
imul
inc
adc
add
rcrb
fwait
in
addr16
pushl
stos
sub
pusha
pop
hlt
adc
insb
fwait
or
lret
dec
jecxz
and
inc
pop
mov
add
or
jp
aam
nop
dec
xor
and
shrl
jns
mov
daa
jl
imul
out
lock
enter
lods
jmp
out
sahf
test
push
or
fld
test
pop
ja
pushf
lods
jmp
inc
ds
sub
mov
xchg
lret
cmp
sbb
jne
aad
mov
shlb
loope
add
pop
inc
xchg
gs
jb
jg
dec
popa
test
jne
popa
xchg
ds
mov
ds
inc
fdivrs
cmp
aam
jle
mul
mov
outsb
loope
push
fmuls
cmc
push
ds
popf
dec
inc
lcall
mov
fdiv
or
ja
add
test
or
ja
pop
mov
xchg
enter
mov
or
shrb
dec
jmp
push
sub
lock
jbe
test
xor
pushf
int
dec
sbb
filds
das
lcall
dec
arpl
xor
sbb
xchg
pushl
repz
push
push
ja
xor
fwait
gs
xor
jne
mov
xchg
iret
mov
add
loopne
push
add
pop
stos
subl
cmp
push
sbb
loopne
pop
jecxz
clc
ret
daa
cmp
jo
or
cmovb
sbb
int
mov
pop
out
or
notl
shrb
stos
sbb
repz
or
pop
inc
cmpsl
push
mov
cmp
out
jnp
mov
lcall
fisttpl
mov
xchg
stos
mov
mov
push
xchg
add
mov
cmp
jmp
sub
fwait
test
add
cmp
mov
fdivs
xor
stos
pop
insb
push
fwait
mov
outsl
out
loope
rol
mov
cmp
push
ja
cmpsb
loopne
sarl
aad
shrl
mov
je
adc
clc
mov
add
pop
cld
rorb
inc
add
and
insl
lret
stos
jns
jg
sbb
adc
iret
mov
mov
push
adc
into
and
dec
rol
and
mov
jmp
shll
imul
pop
add
or
icebp
pop
xor
daa
or
xorl
stc
fs
scas
jecxz
adc
sbb
add
add
inc
mov
call
test
fwait
out
int3
pop
icebp
int3
loope
mov
inc
xchg
and
inc
mov
adc
sbb
pushf
std
fdivrs
arpl
inc
cld
bound
rcl
inc
leave
shlb
cld
push
sub
lea
loop
out
push
mov
xchg
daa
sub
mov
cli
arpl
scas
push
adc
sbb
in
test
mov
rcrl
psubusw
js
test
mov
out
movsb
insb
jne
or
adc
xor
nop
shrl
push
and
jb
push
jmp
mov
ds
jecxz
dec
popa
mov
lock
cld
cmpsb
addr16
cmpsl
dec
icebp
leave
mov
shll
jne
push
lret
dec
mov
data16
pop
push
inc
inc
mov
dec
cmp
out
ja
or
inc
mov
mov
gs
jbe
popa
rclb
mov
loopne
in
adc
pop
pop
mov
fildl
fisubrl
xor
cmp
imul
sbb
movb
pop
xor
pop
mov
mov
shlb
test
int
add
clc
filds
jp
jb
push
mov
cmpsl
insl
adc
cmp
loope
pop
fstl
add
movsl
into
lock
js
inc
insl
and
xchg
fchs
dec
jnp
idivl
adc
lods
inc
cmpsl
cld
leave
and
cs
lds
popf
arpl
mov
idivb
pop
push
repnz
sahf
xchg
adc
mov
pop
lock
fwait
bound
or
pop
xor
cmp
add
mov
cmp
jne
nop
sub
lods
and
add
xchg
adc
xorl
jo
popa
push
jge
fdivs
stc
pushf
imul
sbb
fs
dec
scas
push
int3
push
iret
jle
adc
fnsave
daa
dec
shufps
cmp
repz
call
in
pop
sub
imul
mov
xchg
xchg
es
and
es
mov
sbb
jne
lock
movsl
push
adc
jo
repz
xor
xchg
xor
shlb
lcall
cmp
add
test
pop
sbb
nop
dec
ja
negl
jnp
rcr
xor
out
ficoms
popf
xor
mov
pop
add
sbb
das
and
mov
push
jge
mov
sbb
sbb
or
push
pop
push
dec
test
outsl
cwtl
fistl
div
sbb
jle
mov
mov
insl
sub
xchg
pop
xchg
mov
add
adc
mov
mov
push
jg
inc
cmpsl
adc
popa
push
xchg
and
or
es
or
pop
js
mov
pop
out
and
fiaddl
mov
cs
jl
inc
jo
lock
int3
out
inc
dec
sub
jno
or
mov
fstpl
fidivl
int
mov
mov
popf
cmp
mov
adc
jbe
data16
dec
xchg
stos
xor
or
adc
iret
pop
scas
cs
or
xchg
aaa
inc
or
test
or
stos
and
cmp
dec
jg
cwtl
lret
push
out
pop
pusha
jg
stos
push
in
sub
jmp
mov
testl
data16
pop
pushf
scas
mov
dec
clc
or
dec
sbb
sbb
jle
adc
dec
and
lods
sti
and
dec
lds
xchg
mov
lods
and
mov
fidivl
stos
mov
in
data16
add
pop
adc
lds
jae
out
in
mov
outsb
cmp
inc
in
mov
sti
push
movsb
lods
inc
jns
aas
cmpsb
lock
je
mov
jg
cltd
fmul
es
mov
pop
xchg
sub
mov
mov
fwait
iret
dec
push
pop
dec
icebp
cmp
cmc
movl
adcb
je
mov
sub
cli
xor
mov
push
ljmp
movsl
stos
js
jl
cmpsb
jbe
dec
leave
nop
out
cmp
xor
cmpsb
mov
push
and
int
adc
daa
leave
jecxz
xor
dec
inc
jmp
gs
cmp
notb
push
add
cmp
cmp
mov
or
sbb
scas
xor
les
adc
in
push
xor
jae
mov
push
jnp
shl
lock
leave
or
loopne
sbb
popa
cmc
jg
rcrb
sbb
jp
dec
scas
add
roll
mov
cmp
xchg
ljmp
adc
lret
cmc
push
mov
andb
je
mov
dec
pop
inc
fistl
out
mov
dec
ret
stos
inc
add
fisubrl
ljmp
ret
pop
lock
imul
xlat
movsb
xlat
stos
hlt
fisubs
mov
mov
out
pop
push
pop
pop
inc
cmpsl
inc
int3
xor
or
sub
imul
and
sar
cs
cmp
xor
add
clc
jp
stos
jge
in
lahf
mov
shrb
cmc
or
fwait
pop
repz
lcall
mov
inc
sub
mov
xor
lock
sbb
in
or
mov
mov
fbld
das
xorl
and
inc
ljmp
cwtl
xchg
imul
dec
lds
clc
fnstenv
fisubl
lods
jge
and
adc
nop
dec
xchg
ret
cmp
icebp
test
pop
pushf
dec
scas
sbb
andb
jecxz
mov
ja
out
inc
push
fmul
pop
fidivs
jne
ljmp
ret
enter
inc
add
or
cs
xchg
lahf
adc
xchg
cli
lcall
push
daa
pop
sbb
inc
addb
adc
jnp
mov
ljmp
mov
xchg
mov
aam
ss
sbb
or
jmp
xor
lock
int3
jo
aaa
cmp
or
sbb
imul
push
outsb
call
in
dec
jo
mov
or
or
test
fbstp
ja
sbb
adc
mov
addr16
sbb
xchg
push
push
cmp
sbb
jo
js
ss
and
jno
lds
cmpsl
mov
sarb
lret
push
sbb
push
mov
and
xor
jns
mov
jne
mov
dec
aam
cmc
xchg
mov
inc
mov
xor
loopne
lahf
test
add
stos
lahf
or
cld
cmp
pop
mov
push
out
push
aad
ss
shlb
out
mov
pop
mov
popa
push
outsl
sahf
aad
sarb
sbb
mov
pop
add
jl
cli
jl
filds
xor
pop
xor
js
dec
cmp
in
lcall
scas
xor
pop
inc
jne
push
jg
test
xchg
inc
cmp
cld
xor
jge
mov
loopne
mov
mov
aam
ds
in
lods
sbb
sub
push
scas
or
push
mov
jp
sub
stc
in
push
movsb
insl
cs
orb
subb
jge
dec
int
fisubl
mov
cmp
aam
or
sahf
lret
leave
dec
cmp
out
inc
cld
repnz
mov
cmpsl
addr16
pop
sub
jo
mov
pop
sbb
sub
mov
mov
out
mov
add
cmpsl
mov
jbe
mov
iret
ljmp
in
fst
sub
xorl
stc
sti
repz
inc
mov
push
sbb
in
mov
push
flds
mov
aas
clc
adc
xchg
jp
loop
or
scas
clc
addr16
lods
mov
fldt
mov
out
cmp
mov
pop
sbb
cmpsb
ds
and
jmp
mov
lock
pop
dec
ss
mov
enter
push
sbb
in
out
pop
aad
jmp
dec
jae
dec
dec
lea
nop
adc
popf
cmp
ficoms
shr
or
ljmp
jae
pop
movsl
lahf
sahf
push
lock
jg
nop
inc
xor
or
out
fidivrs
repnz
jb
mov
push
pop
mov
push
stos
int3
jmp
push
xor
sti
mov
rcrl
cmp
inc
js
ss
aad
xchg
gs
aad
pop
or
push
into
add
and
and
rclb
mov
sbb
push
mov
jp
repz
dec
js
int
mov
ret
int3
dec
mov
mov
enter
popf
movl
cmpsl
jle
movsb
inc
dec
xchg
cmp
or
mov
sarb
stos
jmp
cmpsb
ret
stos
inc
jge
xchg
add
cmp
negb
jmp
ja
loopne
and
xlat
xor
stos
enter
aas
les
inc
and
cmp
movsl
mov
mov
jns
or
jmp
and
mov
push
push
adc
subb
dec
mov
rcll
in
ret
aaa
xor
mov
jl
add
scas
push
fidivrl
mov
pop
outsl
dec
add
pop
ret
insl
adc
call
xor
outsl
cs
xor
mov
mov
inc
stos
out
test
xlat
or
dec
adc
shlb
scas
mov
inc
mov
push
mov
xchg
adc
fidivl
repnz
sub
imul
xor
and
fstl
fildll
sub
fisubrl
pop
mov
and
inc
sub
arpl
loop
in
inc
outsb
lea
sbb
xchg
sbb
push
test
out
mov
fmull
inc
into
inc
lret
dec
inc
sbb
lds
rol
jns
cld
sub
and
pop
in
xlat
dec
std
jb
les
jns
adc
cmpsl
lods
pop
cmp
pop
into
jne
imul
dec
pop
mov
mov
je
aaa
inc
adc
xchg
mov
cmp
ljmp
fstps
lret
xchg
les
nop
fcoms
xchg
mov
dec
jg
in
add
int3
cltd
rcrb
cmp
xchg
jbe
add
cmp
fs
jg
js
mov
mov
fildll
jp
stos
dec
loop
jmp
daa
cld
mov
outsl
mov
mov
push
or
and
mov
cmpsb
cmp
call
mull
and
mov
pop
xor
ret
mov
in
sbb
sub
out
sub
xlat
mov
push
and
out
xchg
dec
pop
dec
dec
mov
cmpsb
jns
xlat
mov
ja
xchg
loope
pop
mov
inc
test
fs
adc
xchg
xchg
movsl
push
outsl
jb
dec
rcll
fimull
and
fistpl
rcr
out
in
push
icebp
int
cs
jae
pop
jmp
mov
int
push
push
jg
cmp
popf
pop
movsl
lcall
test
sub
cmp
ss
aaa
or
fcoml
pop
iret
pop
test
xor
inc
mov
jo
push
push
push
subb
rorb
mov
movsl
or
jns
push
orl
in
aad
orb
dec
pop
xor
std
dec
pusha
cmpsl
insl
sahf
nop
dec
je
dec
loope,pn
dec
and
aad
ljmp
pop
sbb
dec
mov
push
cli
cmp
imul
ret
mov
cmp
addr16
test
jns
mov
jnp
lret
scas
jno
insl
lcall
test
ds
mov
roll
test
push
clc
scas
das
add
loop
enter
xor
test
sub
mov
inc
gs
xorb
sbb
mov
lcall
pop
xchg
push
mov
fidivs
es
shrl
and
test
jge
fldz
jmp
jmp
inc
mov
push
jbe
je
and
scas
push
in
cmpsl
inc
shrl
and
fisubrs
dec
pop
test
ds
inc
out
mov
sub
dec
pop
cmp
pushf
xor
sub
movq
push
mov
mov
push
push
push
repnz
movsl
cli
test
iret
lods
test
ja
pop
mov
add
xchg
ss
push
add
adc
adc
or
daa
push
push
stos
sbb
push
fcmovnu
cmpsb
xor
mov
mov
shll
pop
dec
and
push
pop
aad
sub
in
test
repnz
xorb
stos
jno
loopne
fcomps
push
dec
fs
pop
xlat
lea
scas
and
movsb
push
cmp
mov
leave
push
sbb
mov
jle
movsb
push
pop
push
mov
jno
movsb
imul
cli
lahf
mov
cmc
jle
cmp
jle
not
std
jbe
inc
xchg
inc
in
cmp
ret
inc
mov
pop
jno
not
pop
dec
sbb
jbe
xchg
push
xor
xchg
push
cld
dec
data16
adc
push
addb
mov
ss
pop
mov
notb
in
lock
mov
lds
fs
mov
fdivl
lahf
cmpsb
adc
cltd
or
or
mov
adcb
mov
mov
push
mov
jae
lock
push
push
push
push
lret
cmp
cmp
mov
das
dec
test
or
jmp
push
and
daa
inc
orl
pop
popf
sbb
pop
adc
sbb
add
push
mov
push
xlat
push
dec
jl
cs
sti
pushf
out
adc
mov
mov
push
js
fwait
dec
ja
mov
sti
push
xor
shrb
lods
cmp
mov
jp
cld
cmp
pop
loope
jbe
mov
cld
ja
rcr
pop
test
addb
xor
or
xlat
negb
cmpsl
or
and
rolb
jnp
inc
add
mov
cmc
into
xchg
cmp
aaa
aad
pop
lods
push
lods
mov
sub
shrb
xlat
mov
sbb
mov
inc
out
mov
mov
fsts
repnz
dec
outsb
xor
ljmp
add
test
pop
dec
out
inc
cwtl
rorl
ds
sbb
mov
cmp
int3
cwtl
arpl
in
icebp
adc
xor
push
and
fs
into
aas
rolb
push
push
mov
ret
rorl
pusha
shll
adc
inc
stos
mov
pushf
mov
cmp
adc
ficoms
cmc
addb
fstpt
movsl
cli
inc
jb
jb
iret
xchg
pop
mov
gs
outsl
cmp
fmul
mov
stos
aas
add
push
lahf
js
add
pop
hlt
fldcw
out
sbb
cwtl
call
ss
xor
mov
int
fs
into
and
loop
dec
hlt
add
pop
call
mov
stos
ficoml
repnz
fimull
clc
shrb
stos
out
xor
mov
rol
push
xor
stos
pop
je
mov
xorb
imul
sub
aam
int3
jle
and
mov
adc
sbb
mov
loop
jae
pop
add
enter
inc
sbb
or
iret
loopne
filds
inc
inc
adc
adc
xchg
mov
in
inc
insl
inc
movaps
gs
add
mov
dec
ss
nop
cmc
inc
sub
add
or
jp
push
insl
popa
add
imulb
inc
ret
sbb
mov
cmp
nop
arpl
testb
sub
mov
ds
jecxz
or
stos
into
inc
mov
test
inc
out
inc
hlt
pop
dec
leave
cli
pop
dec
in
or
adc
jne
xchg
icebp
jne
in
and
cmp
or
or
stc
mov
dec
dec
arpl
mov
mov
mov
stos
and
mov
std
shll
mov
mov
adc
scas
fwait
sbb
add
ret
int3
sub
rcr
jg
lock
iret
fdiv
hlt
lds
lock
in
jae
xchg
leave
or
shr
lret
xor
aam
int3
fisttps
dec
xchg
je
sub
cltd
mov
push
mov
enter
cmp
mov
add
push
lods
lds
jae
and
dec
inc
or
jl
out
stos
lret
adc
push
aad
cwtl
daa
and
xchg
mov
mull
mov
rclb
jmp
fistl
cmp
push
hlt
mov
or
cmp
xlat
scas
dec
fs
jge
push
je
test
cli
outsb
test
jp
std
shll
or
pop
xchg
adc
cmp
sub
iret
lea
mov
popf
mov
cwtl
jmp
orl
push
xor
rcl
das
call
out
ret
mov
cli
sub
ss
lea
sbb
mov
aad
iret
dec
and
add
data16
inc
mov
je
push
mov
xor
insl
sbb
mov
jne
add
insl
negl
jge
or
pop
test
add
sbb
mov
and
out
imul
into
xlat
jmp
xor
jl
cmp
or
adc
dec
into
cmp
mov
stos
jmp
loope
dec
iret
dec
cwtl
xchg
cs
test
clc
pop
shrl
stos
xchg
das
mov
mov
aas
and
cmpsl
popf
and
jge
inc
dec
std
mov
mov
fsub
inc
in
push
into
lcall
pusha
push
fmul
mov
outsl
lods
pop
sahf
imul
sti
xchg
mov
jno
popf
add
and
ja
xchg
or
fidivs
cld
dec
addr16
cs
lods
or
sbb
xor
les
pop
push
jl
and
adc
testl
insb
xchg
push
test
push
lret
pop
xor
mov
fbld
cli
mov
repnz
popa
lahf
add
fnstcw
loop
sbb
orb
push
loopne
jecxz
sahf
jl
lret
je
pop
push
sub
inc
mov
ds
andb
paddusw
ja
out
stos
fistpl
jbe
test
push
jae
jb
mov
aas
negl
lods
jns
xor
push
jnp
addr16
adc
lock
inc
js
push
test
sarl
ds
jnp
jae
outsl
test
xor
push
fwait
pop
jmp
xchg
loopne
or
mov
int3
lcall
pop
in
popf
ret
rorb
add
pop
sbb
dec
jl
insb
in
xor
fcoms
lods
fnstsw
mov
cmp
repz
push
cmp
mov
dec
cmpsb
xchg
pop
lods
lods
aam
frstor
popf
sbb
or
loop
sbb
test
rol
ds
int
jnp
dec
arpl
test
xchg
lds
jecxz
dec
out
jns
ja
testl
xchg
jecxz
mov
jbe
push
bts
pop
mov
and
insb
fdivr
fisubrs
inc
fdivrl
or
mov
pop
inc
lea
lahf
out
movsl
mov
mov
insb
mov
pop
inc
sbb
stos
movsl
adc
popa
lds
mov
clc
test
xchg
ficoms
mov
cmpsb
mov
cmp
int3
mov
inc
adc
call
inc
sti
out
jb
adc
jp
mov
sahf
push
inc
cmp
out
push
adc
mov
and
cmp
clc
aam
aas
into
out
dec
inc
out
xor
adc
cwtl
cmpsl
int3
ljmp
loopne
jecxz
pusha
into
loope
or
pop
movsl
test
je
inc
testb
aam
aas
in
addr16
sub
dec
mov
xchg
jle
xchg
les
mov
pop
jbe
dec
aam
test
aad
mov
movsl
push
fs
jle
cwtl
mov
cmp
mov
les
xchg
pop
cmpsb
push
sub
das
cmp
ret
jle
pop
loopne
test
and
mov
in
dec
add
jns
jge
sbb
test
xor
mov
mov
decl
fwait
movsb
push
mov
pop
neg
jno
nop
mov
lods
cmpsl
sbb
stos
xor
call
mov
cmp
bound
push
cwtl
out
sti
arpl
dec
push
push
loopne
sub
cmp
mov
cmovle
adc
push
hlt
out
dec
push
and
and
aas
push
test
movsb
ud2
test
sub
cmpsb
xor
mov
pop
sti
shl
mov
stc
jecxz
pop
rcrl
jo
cmc
and
jecxz
mov
jg
or
test
push
push
in
je
scas
sub
push
je
ss
and
sbb
jno
xor
push
mov
sub
mov
push
add
icebp
mov
pop
fdivrl
and
mov
mov
stc
js
int
call
cld
cmpsb
and
clc
gs
fbstp
jg
sbb
cmp
sahf
fistpl
sub
cmpsb
push
dec
movsb
mov
jnp
test
mov
arpl
sbb
mov
mov
test
hlt
push
pop
mov
dec
xor
cmp
add
xchg
sub
insb
mov
cmp
test
pop
aas
mov
sub
in
push
mov
je
mov
shlb
push
push
in
jo
fstpl
test
dec
inc
or
dec
or
mov
lcall
sub
ret
pop
sub
cld
jno
xchg
ficompl
mov
cmpsb
pop
jle
imul
iret
fs
mov
cwtl
sbbl
stos
inc
adc
jg
in
fwait
pop
testb
sub
lcall
in
xchg
dec
mov
jl
scas
adc
jl
sub
mov
lock
sub
cld
sbb
scas
sti
in
push
pusha
out
mov
dec
jmp
xor
mov
ja
imul
insb
lea
cltd
pusha
nop
adcl
scas
and
xchg
movsbl
and
sub
xor
aad
pop
pop
mov
leavew
inc
sbb
jno
lahf
pop
mull
jbe
pop
pop
sub
inc
ja
cmp
lcall
icebp
mov
aas
out
xor
inc
pop
add
clc
mov
sub
test
xchg
xchg
sub
dec
cmp
es
cmp
roll
fcompl
xor
jmp
movsb
icebp
lock
cmpl
testl
insb
inc
jb
mov
sbb
daa
pop
pop
mov
pop
adc
push
xor
cli
sbb
pop
mov
aam
mov
in
js
ds
adc
push
adc
faddl
insl
adc
cltd
push
inc
mov
arpl
or
mov
in
and
das
into
lahf
xor
lds
push
nop
pop
push
or
jge
xchg
or
dec
mov
dec
and
or
dec
outsl
xchg
cmp
jmp
insl
dec
loop
push
adc
cs
fcomps
popa
pop
iret
cmp
in
and
lret
mov
fistpll
inc
pop
jns
inc
imul
lea
dec
das
push
sti
pusha
xor
outsb
pop
sti
sub
test
mov
mov
adcl
jp
into
lcall
sub
adc
jnp
int3
orb
push
push
sbb
jecxz
inc
sub
mov
out
push
cmp
inc
fsts
movsb
push
rorl
in
pop
les
and
lock
cmp
daa
out
adc
ds
xchg
shll
push
in
adc
xchg
add
jp
scas
out
pop
shrb
and
addr16
mov
push
cmp
add
out
adc
sbb
add
sub
jo
dec
pop
insw
fsin
jns
jge
mov
sub
push
mov
ss
gs
xlat
cmp
scas
cld
cmp
push
hlt
ret
cmp
out
std
xchg
insl
mov
lods
loope
subb
into
add
inc
adc
dec
xchg
pop
mov
ja
push
repz
cmp
dec
and
hlt
btr
in
jge
mov
mov
xchg
shlb
int3
xorb
xchg
in
mov
add
mov
xor
je
pop
call
mov
addr16
xor
cmp
add
xchg
mov
fs
mov
xorl
or
dec
imul
pop
mov
mov
jnp
sub
inc
push
mov
push
lea
jne
dec
adc
aaa
in
out
xor
xor
jg
jle
mov
cmpl
push
and
xchg
mov
mov
push
and
call
mov
mov
pop
mov
jge
mov
ja
fs
sbb
je
fiaddl
xor
je
mov
pop
hlt
xchg
jne
int3
shr
in
mov
daa
xchg
xchg
mov
mov
and
pop
sbbl
mov
gs
ficomps
and
hlt
mov
mov
mov
add
flds
fcomps
sub
dec
inc
outsb
mov
pop
jg
push
adc
dec
jne
into
jb
jg
in
mov
fisttps
or
adc
inc
add
shll
in
or
xor
jno
jle
cmp
sbb
popf
push
insl
hlt
jmp
pop
test
pop
mov
pop
push
iret
jbe
lret
dec
dec
xchg
rorb
inc
xorl
dec
cmp
jle
rcr
stos
jl
xchg
lcall
cmp
jmp
shlb
ja
pop
mov
out
fcomip
mov
lret
jns
mov
push
or
adc
movsl
subl
pop
push
jge
jb
mov
dec
mov
stc
sub
xor
xor
mov
inc
add
sub
inc
cmp
xlat
ljmp
es
pop
mov
lds
adc
push
into
pop
fwait
aaa
shll
ja
hlt
js
cmp
ret
mov
add
cld
xchg
dec
int
popa
std
push
nop
add
sbb
jmp
bound
nop
loop
outsl
adc
mov
or
ja
push
fstpt
sar
sub
in
jnp
shr
sbb
insb
mov
ljmp
adcb
negl
ja
repnz
add
sahf
cmp
add
add
or
xchg
jns
ljmp
cld
xor
cmp
mov
je
adc
inc
jo
xchg
push
insl
cld
sub
cmp
mov
jo
outsb
lret
sbbb
shr
pop
mov
ss
mov
iret
xor
dec
cwtl
cmpl
adc
pop
stos
dec
jnp
hlt
cmpsl
enter
xchg
push
xchg
sbb
jl
cmpb
fldt
shl
addb
or
mov
mov
fdiv
add
ret
lahf
xor
scas
push
hlt
and
sub
jl
mov
and
inc
fwait
mov
adc
stos
dec
lret
inc
or
push
in
lds
push
ja
sbb
mov
flds
ss
les
pop
xchg
xchg
das
hlt
pop
mov
jecxz
das
in
hlt
cmp
sub
cmp
es
jg
arpl
push
and
faddl
adc
jne
dec
sahf
push
cmpsb
or
push
aas
insl
fdivrs
cmpsb
addr16
lds
adc
and
out
lods
imul
std
or
scas
popf
aad
xchg
xchg
push
mov
scas
xchg
lods
addr16
mov
je
xor
inc
shrl
mov
mov
ss
push
fdivs
dec
and
or
inc
bound
cwtl
clc
mov
adc
jne
dec
xchg
xor
add
pushf
or
mov
xlat
iret
xchg
push
sahf
jge
js
add
cltd
popa
fs
sbb
xchg
xlat
das
sub
cmp
aaa
adc
stos
jmp
dec
shll
jmp
stos
rolb
xchg
jne
sbb
daa
mov
mov
in
in
sub
sub
fwait
lods
addb
enter
decb
or
ss
pop
ficompl
xchg
fidivl
aaa
mov
jns,pt
mov
iret
inc
mov
imul
popa
mov
add
mov
push
std
mov
ss
dec
inc
out
pop
pusha
sub
cld
sahf
outsb
stos
out
mov
and
xchg
movsl
mov
into
loopne
cmp
push
out
xor
dec
cmp
pop
jb
mov
test
jge
xchg
ja
les
sbb
xlat
outsb
ret
pop
jmp
adc
test
pop
cmp
bound
int3
inc
pop
mov
ficoms
dec
fldenv
inc
add
frstor
jns
inc
mov
xchg
in
push
pop
xchg
je
ja
mov
outsl
shrl
data16
mov
dec
fsts
xchg
push
das
mov
lods
das
mov
adc
popf
cmpsl
add
inc
js
iret
test
pop
xchg
jg
iret
push
mov
cmp
loope
push
iret
ss
mov
jno
cwtl
pop
adc
cmp
jo
push
xor
mov
lods
xchg
jmp
lret
ss
lock
pop
push
pop
jp
lcall
aam
fists
jnp
lcall
cmp
xchg
cmc
ja
xchg
sbb
xchg
inc
dec
lods
xlat
sub
pusha
adc
outsb
mov
pop
pop
outsl
fdivrs
outsb
lahf
xchg
jns
dec
mov
or
jo
fdivr
sbbb
push
imul
jmp
mov
idivl
scas
in
xor
jg
xchg
insl
sbb
and
lcall
inc
ret
mov
addl
mov
jo
repz
neg
lods
movsb
aas
dec
fstpl
cmp
mov
mov
mov
xchg
or
push
arpl
xchg
test
jns
add
daa
dec
xor
filds
jg
repnz
lds
test
inc
out
bound
mov
sbb
gs
cmp
jnp
or
cmp
jecxz
push
lcall
clc
cmp
push
or
cmp
adc
add
add
xchg
ljmp
rcrl
and
cmp
pop
inc
inc
sbb
ljmp
pop
lods
inc
std
mov
in
mov
dec
push
jle
push
push
xchg
mov
aad
jb
loopne
or
inc
mov
pushf
js
adc
xchg
repnz
movsl
out
and
inc
sbb
mov
jle
stc
loop
xor
lods
aas
icebp
fidivrs
and
fisubs
in
cmpsl
test
cmpsb
lods
icebp
or
mov
xchg
repz
dec
rorb
loop
call
mov
mov
jo
cli
sub
push
ss
sub
mov
cmp
jns
test
sbb
je
fisttps
adc
sbb
scas
cmp
scas
test
add
xchg
pop
fstl
xchg
dec
icebp
jb
mov
lret
lods
inc
scas
jno
and
rcrl
pop
call
sti
and
mov
sbb
or
pop
pop
sub
push
sbb
testl
rcrb
lods
stc
sbb
dec
enter
into
cmovg
out
mov
lret
jg
pushf
lds
ds
int
mov
add
lret
xchg
xchg
int3
pop
ret
lret
sbb
fists
int
jne
sbb
imul
int3
and
cmp
jns
ret
leave
adc
jne
jl
sub
cli
push
jbe
stc
aaa
aad
cli
cld
jo
dec
sarb
scas
inc
sahf
mov
mov
and
loop
mov
test
clc
sub
into
adc
hlt
negl
pop
and
and
hlt
pop
negl
inc
and
aaa
add
push
pop
shll
test
xchg
int
inc
orb
pop
ret
lret
add
mov
sbb
cmpsl
push
or
mov
outsl
mov
and
adc
or
pop
inc
in
js
shl
dec
shrb
or
cmp
in
out
sbb
cltd
inc
out
cmpsb
call
pop
insb
lock
xor
daa
jecxz
cmpsb
movsb
mov
nop
iret
rolb
adc
inc
adc
leave
pop
nop
pusha
xchg
lds
in
and
or
fsubs
dec
inc
sub
sbb
adc
adc
out
iret
jae
aas
pop
fdivs
fcomp
jle
jo
pushf
addl
outsb
popl
sbb
pop
mov
dec
shll
adc
fnstcw
lret
fwait
test
pop
pop
push
mov
xor
and
insb
gs
jecxz
loope
cmp
ss
jmp
mov
ss
push
jl
add
lea
lcall
dec
fs
mov
in
pop
sbb
imul
in
in
scas
mov
pop
jle
fmul
lret
dec
mov
out
push
jl
sbb
stos
pop
loop
adc
or
aaa
pusha
shl
pop
inc
jp
push
mov
adc
inc
es
mov
adc
repz
or
xchg
mov
cmp
cmp
pop
ljmp
out
mov
mov
mov
ja
jb
lcall
mov
ret
mov
adc
stos
or
inc
adc
aaa
mov
inc
jo
xlat
out
inc
xorb
jno
mov
ret
cmp
clc
jae
stc
push
xor
lea
fisubrs
push
and
shrb
mov
data16
inc
xor
inc
mov
jno
adc
imul
pavgb
inc
push
les
lea
pop
cmp
mov
je
lods
fiaddl
cwtl
pop
cmp
les
aaa
jne
or
mov
adc
dec
cmpsl
push
mov
adc
cmp
add
xor
lods
sbb
fisttps
sbb
adc
add
insb
in
mov
aas
inc
test
jecxz
into
dec
push
test
ljmp
cmp
insl
pop
push
stos
xchg
sub
adc
leave
mov
insb
xchg
std
xchg
divb
stc
enter
daa
movsb
iret
inc
xchg
push
xchg
xchg
imul
insb
loope
dec
aas
and
jo
sub
mov
pop
mov
or
pop
mov
push
fidivs
das
cmp
sub
imul
jbe
lds
out
push
or
push
dec
mov
leave
jno
lcall
fistpl
js
cmp
add
inc
or
popa
or
leave
adc
mov
sbb
mov
repnz
sbb
xor
push
orl
sbb
and
and
es
cs
jg
mov
inc
leave
fisubrs
arpl
lods
mov
mov
fcomip
inc
or
cmp
xor
add
dec
jmp
inc
and
push
mov
pusha
adc
cmp
dec
sar
xor
inc
xorl
mov
cmp
cltd
cmp
aaa
aas
xlat
mov
jo
add
push
lret
pushf
xor
int
out
adc
test
movsl
sbb
fwait
inc
test
mov
inc
or
mov
sub
lods
jle
loop
les
push
or
jnp
pop
out
mov
xchg
add
push
xchg
ja
mov
adc
cmp
mov
sti
stos
fidivs
and
pop
mov
movsb
es
pop
mov
xlat
std
imul
dec
or
mov
sbb
push
mov
mov
mov
sub
dec
add
xchg
inc
aam
xchg
and
dec
ret
sub
mov
adc
bound
sub
add
mov
mov
fists
fbstp
push
xor
dec
das
sub
jecxz
sbbl
adc
mov
aam
sti
cmpsl
imul
movsb
mov
mov
mov
cmp
pushf
mov
xor
popf
lahf
sbb
int3
jmp
aaa
or
mov
inc
pop
mov
mov
pop
shrb
xchg
jmp
inc
push
aaa
pusha
xchg
push
shll
xor
mov
lret
leave
xor
ja
push
xchg
push
fsubrl
adc
push
lahf
inc
mov
ss
call
mov
lcall
jmp
xchg
imul
cmp
dec
je
sbb
fildll
movsl
and
aaa
ljmp
lds
stc
xor
jecxz
fwait
popf
sti
icebp
lods
out
sbb
shlb
subl
out
xchg
loope
adc
or
fnstcw
call
fs
lock
xor
jns
aaa
sbb
test
push
sub
jmp
cmp
push
subb
out
bound
push
dec
pop
addb
or
mov
inc
sub
pop
add
jb
sbb
repnz
mov
push
cmp
pop
sbbl
mov
pop
xor
sti
push
lock
fimuls
jne
addr16
xor
mov
sub
les
lock
add
fldt
xchg
or
test
clc
jne
js
jecxz
xor
hlt
repnz
sub
arpl
pop
cmpsb
jge
push
and
or
xor
pop
sbb
xchg
das
rcll
popa
add
adc
in
or
add
jo
repz
insl
lods
loopne
push
pop
lods
mov
mov
out
scas
out
xchg
jbe
les
push
movsb
xchg
shlb
addr16
mov
lret
pushl
xchg
filds
and
mov
pop
or
out
nop
and
inc
inc
outsb
xchg
add
mov
inc
mov
add
inc
inc
cmpsb
cmpsl
cmp
popa
inc
pop
push
inc
push
sbb
arpl
ljmp
sbb
arpl
std
push
dec
lret
loop
push
sarb
cmp
cmpsl
int
sarl
loopne
pop
stos
push
sbb
inc
punpckldq
ret
and
scas
mov
adc
dec
loopne
push
xchg
mov
xlat
xor
dec
stc
or
jmp
pop
xchg
mov
push
cmp
fcoml
scas
and
pop
cltd
jbe
call
cld
test
mov
iret
and
pop
sub
into
sbb
std
pop
inc
cmp
sub
mov
adc
xchg
movsb
mov
rcl
jp
lcall
jp
scas
xchg
mov
pop
cmpsb
pop
push
es
dec
fisubl
add
and
mov
and
cmp
dec
dec
adc
ja
jp
out
xor
popa
xor
inc
out
jmp
ja
xchg
jl
sbb
rep
jbe
fsubrl
or
push
jbe
insl
sti
add
int
jne
or
push
leave
push
fisttps
imul
adc
dec
pop
lock
pop
mov
imul
ljmp
sbb
dec
xchg
aas
mov
push
jge
or
mov
inc
mov
and
mov
adc
or
lock
les
in
mov
mov
mov
mov
mov
fimull
xchg
and
cmpsb
or
imul
lea
push
mov
push
enter
rcll
jae
pop
inc
fldenv
xor
cwtl
dec
jp
pop
aad
xlat
imul
sub
stc
or
cmc
jo
add
lock
xchg
popa
mov
jge
add
dec
sahf
js
outsl
mov
push
add
in
push
mov
aas
or
bound
mov
rcll
mov
cmp
mov
popf
push
dec
dec
cmpsb
pop
mov
repz
pop
or
adc
aas
push
adc
pop
sbb
push
xchg
jle
imul
cmp
sbb
push
fildl
mov
jmp
scas
mov
sbb
jecxz
adc
pop
mov
daa
adc
int
fdivrl
cmpsl
rorl
jle
cmp
inc
mov
mov
outsb
sbb
out
mov
mov
out
and
int
loopne
inc
jle
jg
test
loope
lcall
jo
and
mov
addr16
jo
pushf
mov
inc
popf
ja
lahf
loope
scas
jno
hlt
fildl
lret
mov
iret
aam
pop
cld
cmpsl
shr
cmpb
inc
stos
add
fiadds
or
jl
lret
mov
jle
cmc
in
mov
xor
push
adc
push
xchg
fs
add
divb
andb
outsb
push
jp
jp
mov
in
inc
loope
or
push
rcrl
outsl
lock
mov
mov
in
cmp
in
sbb
xchg
pop
dec
hlt
dec
pop
mov
stc
cld
cmp
pop
or
adc
push
push
test
fimuls
popa
jb
inc
or
jnp
rorb
aas
mov
push
push
arpl
xchg
or
inc
andl
arpl
fldcw
push
pop
inc
add
pop
dec
stos
out
jmp
sub
stos
sub
jmp
dec
mov
aad
and
push
adc
ret
stc
push
lock
shlb
jmp
dec
inc
outsb
and
ja
inc
adc
pop
in
sub
mov
faddp
cmp
repnz
inc
pop
sarl
pop
inc
xor
jo
sub
mov
cmpl
enter
lret
cmpsl
mov
mov
dec
push
mov
inc
stc
test
add
enter
inc
sti
mov
loop
js
jno
in
xchg
pop
sbb
pop
mov
je
lods
inc
cmc
sahf
mov
mov
xor
mov
inc
pop
and
movsl
adc
addr16
imul
aas
cmpsb
jmp
inc
xorb
pop
aad
mov
ss
lea
mov
cmp
and
jge
fs
insb
jp
ja
scas
cs
mov
mov
or
rolb
jo
cwtl
stc
cmp
int3
dec
stos
jbe
cld
xchg
push
loop
and
sub
fwait
mov
insl
and
jo
pop
or
test
xchg
subl
jp
xchg
ja
pop
and
push
loopne
and
and
fisubrs
xor
inc
jmp
aas
mov
inc
xchg
push
mov
lcall
imul
out
stos
xchg
ret
or
sahf
xchg
shll
outsb
push
test
imul
stos
adc
popa
test
mov
loop
pop
sub
adc
or
jo
leave
and
inc
stos
jne
push
adc
ficomps
lea
xorl
dec
push
mov
inc
push
xchg
pop
movsb
sub
jmp
dec
sbb
out
sub
cld
int3
and
xor
cmpsb
sub
arpl
push
cmp
pop
xchg
out
mov
mov
aam
iret
incb
jg
adc
pop
movsl
stc
bswap
add
out
repz
push
pop
cltd
std
xchg
aam
adc
sub
xchg
xchg
loopne
mov
rcrl
jmp
test
push
or
adcb
mov
pop
orb
jecxz
sub
cltd
aam
inc
add
xchg
enter
cld
push
fldl2e
loop
sbb
jg
sub
dec
popa
xchg
lret
int
ret
movsb
pop
adc
int3
pop
pop
hlt
cmp
loopne
addr16
rol
push
jb
add
in
out
push
es
sbb
mov
xor
xor
cmp
inc
sbb
cmp
jmp
lods
es
mov
inc
test
or
imul
test
pop
cs
in
mov
pop
jae
in
adc
les
test
cmp
test
mov
jae
jno
out
rolb
stc
mov
dec
std
mov
jno
xor
adc
xchg
inc
inc
push
loopne
xchg
int3
fucomi
lock
inc
out
jge
sub
pusha
aaa
cld
xchg
lea
gs
rolb
pop
or
or
push
fisubrl
sbb
iret
cwtl
mov
xor
div
jg
lods
in
mov
insl
cmp
bnd
cmpsl
cmc
cmp
push
jb
sbb
mov
pushf
pop
lret
fmul
psubw
call
add
xor
jbe
lret
xor
filds
cs
movsb
mov
arpl
in
hlt
aad
adc
movsl
pop
jge
iret
hlt
lea
and
test
out
outsl
cs
and
fadd
movsl
pop
clc
outsl
mov
dec
das
dec
test
stc
ja
hlt
lods
outsl
je
ret
jo
outsb
pop
mov
xor
in
and
cld
xchg
push
mov
fdivr
xchg
cmp
mov
nop
es
pop
add
out
push
mov
inc
lret
mov
loope
xchg
inc
mov
fwait
cmp
pushl
inc
sub
into
inc
push
sbb
xor
test
fstp
out
pop
cwtl
mov
dec
or
jg
and
xchg
mov
xor
cmp
imul
pop
sub
out
std
and
inc
sbb
mov
cmpsb
pop
mov
push
push
and
sbb
stos
sub
mov
int3
push
into
mov
inc
add
sbb
lods
mov
movsb
cltd
imul
cmpsl
adc
dec
lahf
cmp
jbe
push
gs
hlt
call
cmpl
push
out
xchg
test
sbb
scas
cmpb
push
outsb
xor
xor
ret
pop
push
or
jecxz
or
mov
dec
push
push
adc
jno
jmp
das
insb
inc
shrb
mov
cs
cmp
into
imul
lock
xchg
jg
insb
adc
out
imul
scas
sbb
aaa
bound
mov
lds
ss
sbb
cmc
mov
sbb
loopne
into
xor
inc
int
sbb
xchg
cmovae
stc
ss
sub
aad
sbb
das
sub
imul
sub
fldenv
push
sbb
outsb
push
fisubs
mov
mov
mov
push
jae
cmpl
imul
xor
mov
loope
mov
fimuls
out
cmp
mov
mov
push
and
push
je
test
cmp
mov
cmpsl
add
cmc
mov
inc
mov
and
inc
mov
xchg
popa
sbb
cmp
leave
or
xor
mov
es
lds
inc
in
push
repz
and
clc
stc
adc
mov
sub
test
xorl
fiadds
adc
fstpl
and
push
or
daa
inc
pop
cld
xlat
mov
leave
push
fbld
sbbb
sbb
inc
or
adc
mov
mov
cmp
pop
xchg
addr16
faddl
iret
fadd
jmp
mov
dec
ret
pop
ret
cmpsl
inc
sub
push
rol
imul
scas
out
jo
mov
cwtl
adc
and
pop
lods
fsubrl
cmpsl
push
cmp
cmpb
xchg
dec
push
mov
mov
jle
dec
icebp
sub
mov
xor
hlt
adc
or
cmpsb
js
andl
and
mov
stc
xchg
fstps
insb
mov
loopne
sub
hlt
push
jo
fidivs
jmp
sbb
je
jo
lods
or
imul
call
and
or
xchg
inc
pop
sub
add
cmp
jmp
adc
fmul
dec
push
and
jmp
addr16
fwait
je
ds
adc
lds
or
and
add
sbb
cmpsl
sub
fldt
lret
lahf
movsb
push
inc
cmpsl
outsb
orb
out
outsl
dec
mov
and
repz
push
popf
sti
xrelease
movsl
sti
inc
fistl
int3
lods
nop
fcom
in
enter
adc
inc
xor
les
mov
ret
xor
xor
push
or
pop
add
push
jle
imulb
dec
fmuls
imul
fcmovnu
scas
cmp
std
mov
push
inc
inc
mov
addr16
fstps
mov
enterw
fwait
adc
loopne
push
popf
insl
loope
cmp
jge
js
fsubrs
xor
inc
inc
jmp
outsb
arpl
dec
loopne
sub
adc
repnz
dec
in
fwait
and
rcrl
mov
adc
xor
cmp
inc
and
and
in
movsb
sahf
pusha
dec
fstpl
shlb
shll
testl
xchg
or
xorl
lahf
leave
push
sub
subl
sbb
or
xchg
xor
inc
mov
inc
dec
xor
push
ss
add
xchg
cmp
sub
sub
adc
lcall
jnp
es
mov
dec
imull
mov
fstl
cmpsb
pop
jne
bound
lret
arpl
mov
in
out
xor
cltd
xor
push
jo
ror
xor
daa
enter
jnp
stos
jle
xor
push
repnz
daa
mov
cwtl
jl
jle
pop
lret
popf
out
push
das
xchg
cmpsb
rcr
loopne
adc
hlt
fwait
or
es
das
jb
cmp
fcom
jae
pop
xor
int
dec
adc
icebp
inc
push
dec
mov
dec
outsb
cli
mov
pushf
add
and
push
fs
iret
mov
and
inc
sub
rclb
cmp
inc
mov
mov
mov
pop
sbb
orl
mov
sub
pop
xor
jge
and
xor
mov
xlat
mov
fisubrl
dec
mov
in
dec
lods
and
mov
mov
std
or
push
or
daa
push
aas
sub
lret
inc
mov
and
or
jmp
stos
shr
push
jns
int
repz
jo
push
or
shlb
push
ror
sahf
jg
lcall
jns
decl
popa
xor
sahf
dec
lds
mov
or
fistpl
stos
mov
mov
cmp
pop
sbb
loop
jmp
pop
xor
jecxz
shrb
pushf
jge
cmp
jl
ret
sub
jo
push
shrb
cmpl
cwtl
icebp
sbb
lods
scas
jmp
pop
push
xchg
jb
rcl
mov
cli
dec
add
pop
repnz
das
and
pop
push
adcb
cmp
lods
test
mov
dec
cmp
xchg
mov
dec
mov
or
icebp
or
test
pusha
subl
jge
sbb
cli
movsl
enter
sbb
data16
data16
in
xchg
test
out
xchg
adc
out
adc
lock
popl
imul
mov
aad
sbb
xor
bound
push
jge
test
jmp
cld
adc
lock
inc
mov
cwtl
pop
mov
push
jp
rep
aam
into
sub
and
loopne
decb
cmpsl
aam
je
test
lret
cmp
mov
sarb
aad
dec
clc
mul
adc
jle
mov
pop
test
inc
rolb
or
cmp
xchg
xchg
cli
aaa
pusha
or
lods
pop
add
dec
dec
dec
icebp
shrb
jbe
call
mov
dec
cmp
dec
lods
popa
push
ret
ret
loopne
inc
xor
frstor
in
jne
sub
out
mov
sub
or
fildll
jp
popf
jo
sti
hlt
xor
jnp
xchg
jecxz
xlat
pusha
bound
mov
cwtl
jbe
outsl
add
push
gs
pop
or
mov
jnp
imulb
dec
add
shl
in
mov
mov
xor
push
scas
inc
push
or
pop
ret
andb
jne
jo
test
repnz
aas
sub
sbb
imul
mov
mov
jmp
sbb
xor
inc
xchg
push
or
scas
xchg
call
sbb
sub
test
mov
xor
jecxz
cmc
scas
mov
add
jl
mov
sbb
adc
xor
aam
mov
mov
jge
std
adc
into
call
inc
sub
pop
xrelease
jmp
outsb
push
and
cld
fdivp
and
cmp
cmp
aaa
lret
pop
into
insb
mov
jge
movsl
int3
jae
inc
lods
into
adc
insl
jae
mov
ret
xchg
sbb
into
sbb
dec
ret
jl
or
inc
rcrb
xchg
jmp
lret
mov
pop
scas
cld
sub
adc
lret
into
mov
mov
xchg
sbb
lcall
sub
mov
popa
pop
dec
out
ljmp
jp
pop
push
out
dec
cmp
add
inc
mov
aas
inc
push
pop
add
cmp
mov
shl
mov
in
or
movsb
sbb
mov
inc
push
add
aas
or
cmpl
cwtl
add
je
push
adc
ljmp
push
inc
lret
ficoml
lea
mov
pop
adc
jle
fiadds
fistpl
mov
cmpb
or
sbb
pop
cmp
in
cmc
stc
ret
sar
mov
enter
mov
les
movsb
in
xchg
iret
enter
adc
inc
pop
scas
movsl
ficomps
cmp
aaa
mov
mov
mov
jp
mov
ja
rcl
faddp
lock
sbb
xor
cmp
iret
std
enter
inc
sbb
mov
xlat
mov
in
inc
adc
stos
jg
inc
into
and
scas
dec
push
out
fsubrl
jnp
ljmp
into
fists
cmc
sti
jo
inc
or
inc
js
and
xchg
out
shrl
or
neg
jb
mov
por
cmp
mov
jmp
push
xor
and
ss
out
daa
jmp
icebp
hlt
fsubl
jns
sbb
push
test
mov
shll
icebp
test
push
test
out
movsl
lods
enter
mov
scas
or
fadds
mov
push
pop
jae
mov
pop
or
push
sbb
mov
or
and
adc
inc
pushf
pop
stos
in
mov
fdiv
mov
test
lcall
add
mull
xchg
dec
pusha
mov
jnp
cmp
or
mov
dec
fists
adc
arpl
arpl
pop
fs
rcr
icebp
push
sbbl
mov
icebp
fldcw
cmp
popf
mov
mov
imul
dec
loopne
insl
aam
sbb
test
pop
inc
adc
inc
mov
and
shll
es
loopne
arpl
jo
ret
ss
test
jbe
clc
movsb
mov
popf
pop
fnsave
and
adc
loopne
subb
adc
repnz
push
sbb
mov
stos
gs
cmp
cmp
sbb
fcmovnb
movsb
xchg
mov
flds
mov
add
mov
out
inc
adc
bound
pop
mov
and
mov
xchg
push
aas
sub
add
insl
jge
push
and
push
sub
mov
dec
and
ds
sti
dec
lods
ja
xlat
cmp
loop
imul
icebp
mov
jb
int
xchg
mov
test
sub
cmpsb
enter
fldl2t
mov
repz
movsb
lea
jmp
xchg
insb
and
popf
in
dec
outsb
jbe
pop
mov
dec
ret
adc
cmp
jnp
mov
imul
xchg
adc
adc
decb
insb
push
orb
and
lretw
loop
mov
scas
cld
cmp
pop
push
pop
insb
stc
pop
jae
mov
and
daa
sub
clc
in
and
fsincos
into
sbb
push
das
inc
orb
loopne
cs
test
pop
loope
or
mov
xlat
sbb
fisubl
repnz
sbb
and
and
dec
rcr
jecxz
xchg
std
and
pop
aam
pop
mov
lahf
outsb
jne
adc
or
lods
inc
leave
cmp
cmp
ss
stos
sub
addr16
pop
fs
mov
pop
fdivs
cli
cli
xchg
pop
mov
lcall
jnp
dec
lock
xor
jae
clc
pushf
mov
lds
mov
cmp
pushl
sbbb
ds
nop
mov
data16
call
cmp
lods
push
imul
test
mov
js
in
aam
clc
iret
js
int
adc
popf
aad
add
cwtl
hlt
mov
inc
cvtps2pd
pop
shl
xor
and
out
lcall
fs
push
movsl
inc
or
dec
inc
fisubrl
frstor
test
mov
mov
jns
aas
lock
enter
mov
rcrb
sbb
mov
js
adc
fsubs
sbb
ficoms
and
cmp
test
jmp
push
pop
mov
fs
and
jg
lock
mov
jp
dec
fcoms
fstl
mov
jne
aad
jle
outsb
sahf
cs
push
sub
dec
add
adc
xchg
pusha
adc
pushf
or
xor
mov
cmp
or
push
icebp
scas
push
adc
scas
movsl
pop
cmp
jge
adc
repnz
pop
push
xor
lcall
inc
push
jb
int3
mov
and
inc
nop
movsl
int
gs
mov
jns
mov
and
and
push
call
in
andb
xchg
xchg
cli
xchg
adc
and
lods
jle
mov
sbb
pusha
std
cmp
sbbb
mov
imul
je
cltd
stc
jg
test
jns
movsl
mov
mov
mov
call
and
lea
pop
addr16
enter
cmpsb
jg
mov
js
adc
lcall
in
cld
rcll
push
das
addb
xor
sub
mov
sbb
mov
call
test
sti
mov
test
mov
push
sti
daa
inc
fsubrl
in
dec
add
jle
iret
xor
les
popa
or
pop
fcmovu
rcll
sbb
pop
pop
adc
stos
sbb
or
mov
aad
or
lods
xchg
lret
test
les
jnp
icebp
movsb
mov
fcomi
jo
xchg
add
sarb
ficoms
or
cwtl
andb
insb
fisubrs
push
jb
xor
push
jno
cli
xor
std
mov
shlb
xchg
pop
fs
add
dec
bound
or
fisubl
push
dec
sti
push
aam
fucom
cmp
mov
mov
imul
lret
or
sti
aas
cld
leave
xchg
adcb
cli
sahf
inc
adc
gs
stc
nop
mov
mov
fmull
push
dec
mov
xor
dec
pusha
ret
jne
add
out
and
mov
pusha
mov
adc
inc
andl
jne
mov
mov
cmp
pop
and
scas
lret
mov
aad
rclb
loopne
jp
xchg
jo
out
pop
dec
inc
xor
hlt
fcoml
popa
lock
mov
dec
jne
pusha
push
inc
shr
sub
jmp
loope
pcmpeqb
pop
test
popa
mov
mov
sub
fmul
or
xchg
mov
das
cwtl
imul
push
neg
pop
test
das
iret
imul
inc
out
mov
pop
popl
sub
or
in
in
xchg
ficomps
push
pop
inc
scas
xor
pop
mov
fcomi
je
test
jo
aad
data16
mov
mov
mov
push
lds
xor
mov
xchg
jbe
fwait
sbb
push
xchg
out
ret
das
fcomp
outsb
sbb
xchg
out
fists
xor
mov
xchg
and
jno
mov
pop
jbe
sbb
dec
inc
repz
mov
fbstp
sub
mov
mov
sahf
or
roll
sub
xchg
cmpsb
cmp
jge
cwtl
jle
rol
fsubl
out
shll
stos
in
js
dec
or
xchg
xchg
leave
sub
and
pop
pop
xor
lret
in
xchg
cmp
push
xchg
test
cwtl
and
sub
insb
sbb
push
adc
cltd
xchg
loopne
movsb
shlb
cmp
mov
movsb
push
add
repz
lods
dec
sub
or
mov
xor
or
mov
outsl
enter
lea
fprem
sbb
mov
push
push
jecxz
daa
and
pop
out
push
das
mov
ja
sbb
fnsave
or
push
xchg
lret
mov
adc
je
sbb
jo
cmp
xor
xor
call
cmp
call
xchg
xor
push
pop
in
mov
add
adc
test
jo
xchg
pop
pop
cmp
out
addb
mov
enter
in
xchg
xchg
out
and
ret
mov
mov
idivl
jo
mov
add
imul
push
cwtl
adc
mov
jl
loop
inc
mov
andb
add
mov
xlat
jae
dec
lea
call
sub
fwait
in
or
mov
mov
push
jp
ret
mov
ret
jns
pop
aam
cltd
push
jno
out
adc
or
lods
add
sbb
testb
mov
or
jp
stos
js
in
ret
jne
dec
cmp
addr16
push
movsb
rolb
add
xchg
pushf
aaa
arpl
and
jo
ja
sbb
sub
mov
push
mov
push
sub
or
hlt
mov
mov
imul
cmpsb
xchg
jp
push
add
pop
ds
out
lds
nop
xchg
inc
push
dec
lret
lock
and
repz
scas
mov
pop
aam
mov
fadds
add
bound
cmp
test
dec
mov
enter
jle
outsl
enter
bnd
fildl
scas
cli
sbb
xchg
rcll
adc
xchg
sbb
scas
insl
loop
xchg
gs
mov
push
repnz
pushf
sahf
cmpl
hlt
jb
add
mov
inc
je
fwait
cmp
inc
fs
data16
jle
aam
add
or
pop
int
mov
enter
push
aad
jp
lcall
sbb
push
adc
std
sub
movsb
leave
incl
or
cmp
mov
xchg
sub
test
push
mov
mov
adc
fwait
xchg
mov
scas
adc
cmp
or
xchg
cmp
cmp
lret
mov
roll
push
cmp
ficomps
dec
xchg
and
xor
sti
xor
push
sbbl
adc
mov
cmc
stos
push
pop
je
inc
pusha
lods
adc
xlat
gs
sbb
imul
das
lods
mov
in
cld
cmp
adc
xorb
pushf
enter
test
mov
or
sbb
scas
sti
pop
inc
add
cli
xchg
push
add
dec
in
xchg
insl
call
fidivl
shll
dec
popf
decb
and
lahf
dec
es
jno
lahf
ja
push
int
sbb
sub
rcl
inc
sbb
test
movsb
xchg
aaa
test
shrl
int
testl
out
mov
or
inc
stos
push
mov
imul
ljmp
jo
sub
rcll
jns
sub
mov
out
xchg
jmp
bound
xchg
fwait
in
cltd
inc
push
inc
xor
and
push
inc
jle
mov
add
push
mov
pop
adc
scas
and
or
pop
jl
movsl
dec
push
pop
push
push
fdiv
andb
pop
jmp
jg
or
aas
jmp
xchg
jl
jnp
and
inc
imul
repz
out
mov
daa
cli
popa
fsubrp
or
icebp
mov
xchg
or
and
xchg
testl
pop
sub
push
leave
pop
xchg
mov
aas
mov
outsl
and
sub
push
pop
pop
rorl
js
mov
mov
xchg
dec
jl
loope
hlt
pusha
push
adc
mov
in
je
xchg
inc
gs
cmp
outsl
sub
cmc
addl
ret
inc
cmp
cmp
in
cltd
jmp
sub
sbb
shll
sbb
stos
daa
xchg
je
cmc
mov
loope
push
fldcw
pop
loop
cltd
adc
pop
push
popf
inc
ret
lods
mov
movsb
lahf
sbb
lret
and
push
cmp
faddl
lcall
aas
mov
add
add
hlt
lea
xor
push
jbe
stos
push
rolb
test
ror
xor
sbb
jae
mov
out
push
push
jbe
mov
mov
push
sar
sbb
inc
es
ret
stos
jb
rcll
jle
lea
mov
fstps
fmuls
jno
test
dec
ret
outsl
push
daa
sbb
add
sar
insl
mov
cwtl
stc
inc
cmp
xchg
jle
stos
sub
and
icebp
cmc
fcom
and
pusha
pop
fsubp
enter
outsb
sbb
test
pop
bound
mov
and
adc
icebp
clc
sub
rorl
out
sub
rclb
lods
insl
push
into
sbb
test
inc
movsl
mov
mov
mov
bound
mov
xchg
sahf
jbe
xlat
aaa
shlb
inc
xor
ja
mov
enter
dec
subl
xlat
pop
jle
fadds
lods
mov
add
push
dec
clc
outsb
lods
push
mov
mov
mov
mov
mov
mov
rol
sbb
pop
mov
mov
lahf
push
dec
dec
jl
inc
sbb
cld
insb
lret
js
xor
xchg
pop
mov
icebp
lock
add
inc
out
xor
jge
fimull
sbb
fmull
push
ja
cwtl
scas
js
stos
cld
add
add
or
push
mov
inc
sbb
mov
adc
push
mov
and
or
lcall
imul
js
xchg
fiaddl
es
addr16
std
stc
inc
add
pop
sti
push
pushl
and
ss
inc
sbb
xor
mov
and
push
dec
jae
cltd
jne
dec
push
push
test
stc
sbb
mov
jae
cmpsb
and
lds
jbe
lea
jle
inc
bound
data16
xchg
stc
pop
add
xor
out
mov
xor
cltd
lret
cmc
or
push
mov
or
push
out
push
jp
inc
sbb
pop
xlat
sub
sbb
outsl
in
shrl
dec
dec
int3
hlt
adc
jno
repnz
mov
cmp
add
ljmp
sbb
cmpsb
or
inc
adc
mov
xor
loop
pop
lea
sti
test
mov
pop
lock
xor
sti
adc
and
out
loopne
dec
lods
scas
ja
mov
adc
mov
jge
and
mov
arpl
xor
lcall
jo
adc
je
loopne
insb
in
mov
std
dec
int
inc
sbb
clc
dec
inc
data16
pop
mov
and
jns
mov
add
jnp
adc
jae
jnp
lcall
sbb
sbb
out
ja
jb
rorb
sbb
mov
sbb
jge
jne
dec
jnp
fildl
in
xor
xchg
repz
repnz
sbb
dec
inc
jo
sbb
sub
cs
mov
bound
xor
xor
ret
xchg
data16
ds
out
fidivl
shl
js
repz
and
dec
adc
adc
insb
ffreep
adcb
idivb
fidivl
mov
mov
add
testl
jae
pop
cmp
out
popw
pop
pop
mov
xchg
mov
pushl
fimuls
mov
pop
inc
adc
dec
add
xchg
xlat
loopne
insb
aaa
pop
fildll
sub
lret
push
test
xchg
in
out
mov
sbb
xchg
cmp
insb
fdivs
add
lcall
inc
inc
int
ficomps
ss
and
popa
out
mov
lahf
addr16
xchg
and
lods
inc
sbb
sbb
mov
or
pop
rclb
out
sarb
in
dec
jmp
adc
inc
xchg
dec
inc
andl
lea
cs
add
xor
popa
adc
or
xor
xor
xor
movsl
jge
mov
mov
dec
sub
mov
lods
cmpsb
xor
sar
push
test
data16
stos
sahf
cmp
jle
outsl
iret
and
aas
xchg
or
pmaddwd
pop
call
negl
inc
cmp
mov
int
and
lret
push
sub
xchg
leave
add
scas
and
or
in
iret
mov
lea
jo
mov
lcall
and
outsl
lcall
and
in
lcall
aad
ficoml
hlt
push
jmp
cwtl
movsl
dec
in
adc
jno
aas
dec
or
icebp
cmp
popa
or
inc
pushf
sbb
leave
xorl
xor
inc
int3
push
xchg
or
xor
repnz
ret
dec
rol
jne
ret
lret
xchg
xlat
push
sbb
iret
cmp
xchg
push
stc
adc
mov
scas
sub
lea
lea
orl
or
movq
pop
lds
test
dec
sbb
addr16
pop
cld
mov
scas
sub
pushf
negl
ljmp
insb
add
sub
add
xchg
xchg
xchg
sub
bound
mov
mov
sahf
or
mov
lock
les
js
lret
inc
mov
xor
push
psubusw
in
fsubr
clc
mulb
data16
movsb
loope
cli
push
das
push
sbb
pop
lahf
xor
pop
nop
movsb
sub
dec
inc
rorl
mov
jno
incl
inc
gs
pop
lahf
call
xchg
in
fwait
xorb
aad
pop
mov
ja
fcoms
lds
aam
jmp
jle
xchg
lahf
xchg
movsl
dec
inc
xchg
lds
lret
and
test
cmpb
cmp
cmp
lret
add
out
adc
sti
mov
stc
cmp
xor
xchg
insl
xor
cmp
push
cmc
ds
pop
jl
pusha
push
xor
xchg
iret
jecxz
outsl
mov
fstps
mov
push
xchg
insl
or
add
fisubrl
xchg
popa
addl
stos
push
jl
aad
adc
pop
popf
pop
push
sub
cmp
stos
mov
xchg
push
fs
xor
push
push
out
mov
iret
ja
imul
lea
adc
imul
cmp
sbb
mov
in
ds
loope
pop
loope
push
xor
fcmovu
sbbb
test
xchg
cmp
or
andl
lea
cmp
push
mov
repnz
push
dec
mov
pop
inc
jp
cmp
mov
das
jmp
and
mov
mov
mov
aaa
lods
add
jl
dec
mov
dec
movsl
sbb
dec
negl
iret
mov
ffree
pop
xchg
sarb
xor
sub
mov
pop
mov
movsb
cli
ds
sub
xchg
das
pop
sbb
add
adc
adc
mov
negb
dec
das
out
push
push
gs
push
popf
mov
inc
test
adc
dec
loopw
jmp
jl
inc
pushf
insl
inc
pop
cltd
dec
xchg
ljmp
out
pop
xchg
jae
mov
fs
loop
ret
add
mov
add
in
fdivrs
ficompl
scas
push
stos
xchg
out
fld
or
dec
add
cli
int3
aaa
mov
out
sbb
aad
or
xorl
test
loopne
lret
cmovno
pop
cli
inc
cmp
sahf
jp
imul
mov
pop
out
arpl
sar
jg
testl
cmc
cwtl
cli
push
dec
push
push
fistpl
jg
xchg
add
jp
rclb
arpl
mov
loop
pop
jp
in
cmp
inc
push
arpl
mov
jbe
call
jp
call
push
dec
pop
dec
pop
cmp
adc
rorl
mov
xchg
adc
jnp
push
dec
push
mov
imul
fsubrl
xor
lahf
push
lahf
add
and
leave
test
sbb
outsl
inc
adc
lahf
lock
mov
lcall
cmp
lock
or
aaa
and
dec
cmp
mov
daa
shl
stos
adc
cli
hlt
pop
or
pop
fdivrs
daa
sub
mov
adcb
jnp
add
test
fucomp
push
lods
stos
aas
jae
icebp
jge
fwait
test
cmp
loopne
sub
and
pusha
sub
xchg
int3
or
xchg
ljmp
sub
int
add
rcrl
mov
test
push
fstp
push
add
cwtl
xchg
insl
rorl
pop
xchg
stos
popa
mov
inc
je
sbb
cmp
fnstcw
add
test
ret
rcrb
mov
test
adc
mov
sbb
jo
mov
push
lock
ljmp
or
jnp
jne
mov
cltd
dec
cmp
lea
movsl
xchg
pop
push
jg
mov
out
out
popf
ljmp
aad
movsl
mov
into
iret
push
pop
ds
mov
cwtl
sbb
mov
jo
lea
dec
outsb
xchg
imul
add
jge
jb
push
arpl
or
sbb
add
daa
insb
jecxz
bound
mov
xor
xchg
enter
or
repz
mov
popf
cmp
addr16
sbb
lret
xchg
jae
adc
cwtl
sbbb
inc
add
or
ret
imul
xchg
inc
cwtl
dec
test
xchg
jge
idivb
xchg
add
scas
rorb
pusha
adc
addr16
pop
pop
icebp
out
mov
out
rcrb
sahf
sub
pop
pop
dec
jb
cmpsl
mov
divl
inc
mov
leave
mov
mov
push
idiv
aaa
jns
add
inc
enter
dec
adc
lods
in
inc
ret
add
out
ret
jno
pop
leave
loopne
imul
scas
fdivs
mull
out
xor
jg
pop
movsb
shr
ds
mov
or
scas
sahf
outsb
add
push
stos
mov
popa
lret
push
or
bound
int3
fmull
movsb
pusha
insb
ja
stc
outsb
inc
jg
dec
xor
dec
and
xor
lds
push
pop
sbb
mov
int3
pushf
gs
sbb
dec
jg
out
fstpt
cmp
inc
push
mov
sbb
nop
mov
iret
mov
sub
push
adc
jns
sarl
jo
imul
aas
rcrb
adc
pop
mov
fnsave
xor
ja
cmpxchg8b
pop
imul
inc
xchg
xchg
or
xor
ret
xchg
xorl
dec
popa
xlat
or
in
in
ljmp
dec
jl
out
sub
rorb
pusha
xchg
or
sbb
mov
lock
decb
jnp
mov
enter
inc
lods
or
adc
imul
cmc
mov
or
dec
xchg
mov
mov
lods
jge
into
jo
stc
mov
sbb
or
xchg
jge
fidivl
das
in
or
fs
jno
sbb
insb
andb
mov
les
out
dec
out
rcrl
in
mov
and
dec
pushf
les
in
sbb
inc
dec
lret
movsl
nop
jae
jmp
pop
outsl
dec
pushf
cmp
fcoms
mov
nop
in
mov
out
in
jp
push
pushf
push
sub
sub
mov
bnd
cltd
adc
test
mov
movsb
cmp
sbb
mov
mov
cmp
addr16
imul
push
clc
xchg
fsubl
rcll
lahf
fs
ja
outsl
gs
push
ror
test
scas
add
mov
loopne
pop
cmc
or
rorb
fidivl
in
pop
data16
add
es
lret
or
subl
mov
loopne
inc
push
pop
mov
mov
dec
dec
fmull
test
jge
aad
jae
scas
dec
push
cmp
or
jecxz
sbb
mov
dec
push
stc
and
sub
ljmp
push
mov
sbb
jge
mov
mov
sub
xchg
mov
pop
inc
or
loopne
cwtl
adc
fwait
dec
clc
push
sarb
or
or
loop
ror
jmp
rcrb
test
iret
add
pop
ds
sbb
test
or
int3
test
aas
stc
push
ja
popa
mov
sbb
mov
pop
mov
aad
inc
pushf
add
mov
ficompl
or
rolb
outsb
sbb
or
xchg
xorb
mov
mov
push
inc
push
push
pop
pop
in
sub
jmp
imul
insb
mov
jg
xorl
and
daa
and
clc
shlb
xchg
push
lahf
xchg
jecxz
fiadds
jo
popa
leave
fwait
add
repz
mov
cmp
and
cld
mov
les
out
cwtl
daa
and
ret
mov
fnstsw
fsubrs
sbbb
mov
movsl
xor
sub
loopne
fildll
cmp
dec
adc
xchg
fimuls
add
xchg
popf
inc
add
pusha
xor
in
rcrl
and
inc
pop
cmp
in
cmpsl
push
add
jmp
sbb
pushf
sbb
ja
and
pusha
test
mov
lret
test
mov
lret
or
mov
stos
out
mov
stos
lods
enter
int
sbb
jae,pt
inc
jle
jg
out
scas
insl
hlt
mov
test
cmc
lret
lret
and
out
mov
cmp
mov
and
xchg
push
sub
popa
jb
adcb
pop
lock
xchg
lock
int3
push
roll
jae
adc
cmp
in
push
push
jl
xchg
cwtl
out
add
xchg
dec
mov
sahf
mov
mov
iret
sbb
xor
imul
ds
fisttps
cmpsb
sbb
mov
mov
std
pop
mov
clc
test
loope
mov
add
popa
call
jmp
nop
xor
add
xlat
or
ficomps
rep
gs
imul
pop
lahf
jb
cmpl
cmp
std
fcoms
add
xchg
jecxz
mov
adc
xor
test
adc
in
push
int3
mov
jne
adc
xchg
fld
loope
sarb
mov
jns
orl
movsb
xchg
test
ret
xlat
pop
shr
jg
outsb
xor
cwtl
and
shrb
stc
xchg
push
jns
adc
mov
sarl
cmp
dec
mov
aas
icebp
pop
test
add
in
mov
pushf
imul
test
mov
or
inc
clc
mov
sbb
aam
and
rcll
repnz
dec
imul
scas
fiaddl
inc
in
mov
arpl
push
ret
mov
out
inc
fdivrs
xor
stos
or
xchg
test
sub
xor
pop
mov
scas
aad
jmp
mov
adc
movsl
call
and
xorl
aas
nop
sahf
divb
repnz
or
sub
and
sbb
jmp
or
inc
xchg
and
xchg
testb
popa
add
sbb
mov
stos
add
stc
push
mov
pop
cmp
sbb
ds
scas
test
rclb
sbbb
xor
mov
stos
fdivs
daa
cmp
inc
loope
test
movsl
cmp
fwait
cli
data16
adc
cmc
imul
dec
xlat
add
sbb
add
sarb
xchg
lods
jb
lea
xchg
fbstp
test
xchg
lahf
insb
add
mov
adc
sub
jae
mov
aam
jge
cmp
add
add
mov
ficoml
cli
fsubs
in
scas
mov
push
int3
repz
scas
push
mov
sti
inc
push
push
jp
inc
cmpsl
lods
outsb
jecxz
mov
inc
xor
mov
xchg
xchg
incl
and
sbbl
mov
or
pop
in
dec
aad
lcall
shlb
sub
sbb
pop
jns
lahf
int
mov
xchg
push
aad
test
loop
ficomps
cmp
lods
sbbb
or
clc
ds
push
adc
mov
cmp
mov
mov
adc
mov
fs
push
mov
insl
push
imul
and
adc
call
mov
mov
cli
imul
sub
jge
adc
jl
xchg
pop
and
int
addr16
leave
dec
and
jl
jp
push
call
gs
push
cmp
stc
addl
xchg
pop
aad
popf
outsl
stos
pop
add
iret
jmp
inc
or
jle
orl
sub
dec
test
ljmp
xchg
into
pop
outsb
dec
xor
imul
xchg
shl
ljmp
jecxz
xor
jp
ljmp
add
pop
xor
cmp
imul
push
pusha
loop
sbb
inc
push
sub
nop
mov
arpl
cli
push
dec
shrb
xchg
stc
sbb
pop
aaa
nop
out
and
sbb
jp
xor
in
jg
aad
mov
shl
sbb
inc
or
adc
mov
push
aad
cs
fldt
cmp
int
andb
subl
dec
dec
lcall
dec
ret
hlt
xor
jne
xchg
xchg
sbb
cs
add
fisttpl
mov
cmp
push
cmp
push
sbb
and
and
mov
stc
sub
mull
mov
xor
lahf
dec
dec
dec
in
xchg
das
sarb
xacquire
xchg
jmp
push
mov
mov
iret
mov
clc
jle
xchg
int3
mov
and
in
pusha
sub
popf
and
or
movsl
push
xchg
sbb
cmc
xlat
iret
jae
dec
xchg
sub
ljmp
stos
xchg
xchg
jo
and
jns
pop
sbb
stc
mov
sti
pop
scas
lret
mov
iret
in
int
sub
stc
jbe
lret
fwait
ret
cwtl
lea
ds
fildll
arpl
cmp
out
inc
mov
sti
sub
dec
sbb
mov
nop
push
cmpsb
fistpll
add
add
dec
adc
mov
push
hlt
insb
xlat
jns
jecxz
dec
or
ja
or
cmp
negl
cs
je
daa
in
adc
cmp
aam
inc
pop
xlat
mov
pop
pushf
mov
mov
inc
imul
cmpsl
adcb
or
jge
xchg
xor
mov
jp
ret
sub
bound
inc
and
push
pop
outsl
mov
push
mov
and
arpl
movsb
sbb
divb
pop
cwtl
xor
cmp
sbb
push
aam
jle
mov
loop
arpl
bound
push
fwait
ret
fbld
push
push
xlat
mov
and
sbb
cwtl
jge
ja
pop
mov
in
mov
mov
lods
mov
sbb
push
dec
sbb
mov
inc
ja
adc
mov
inc
pusha
repz
mov
leave
or
mov
pop
gs
sti
daa
jnp
jmp
sub
pop
jp,pt
leave
sub
sti
rol
into
arpl
inc
es
dec
cli
ja
dec
jp
mov
push
ljmp
pop
idiv
pop
sbb
shl
out
out
mov
test
mov
jno
push
scas
rcll
jecxz
mul
jmp
out
lcall
add
pop
lods
or
fs
clc
adc
repnz
stos
in
fdivp
mov
pop
sbb
mov
nop
jbe
sbb
ds
fnstsw
and
push
outsb
leave
decl
add
mov
xor
cmp
repz
popfw
mov
lcall
mov
pop
sub
and
sbb
mov
ja
imul
scas
lahf
or
push
es
push
and
adc
mov
iret
scas
ja
xchg
jae
test
mov
cmpsl
xchg
mov
ds
xchg
or
adc
cli
in
cmp
pop
in
ds
push
fbstp
pop
xor
jge
rol
sub
mov
push
add
jno
sahf
outsb
xor
aas
inc
push
lcall
shll
xchg
nop
mov
adc
lods
rorl
lds
cmp
push
outsb
cmp
mov
test
dec
jae
fxch
stos
and
ficoms
xchg
test
xchg
daa
outsb
fs
fdivs
cli
gs
sbb
mov
lret
adc
jne
and
pushf
and
jnp
add
mov
mov
jns
inc
push
test
test
mov
stc
xor
push
ds
shl
repz
inc
jns
mov
test
fdivp
enter
insl
mov
stos
mov
and
addr16
mov
ret
push
mov
add
cmp
push
mov
arpl
push
outsl
fildl
dec
and
call
dec
adc
sbb
roll
shll
je
mov
lods
and
enter
mov
xlat
adc
push
fadd
or
sbb
adc
xchg
push
fildl
mov
stos
ds
out
insl
test
adc
xchg
push
cmp
mov
aam
pop
and
add
mov
call
inc
dec
jg
bound
movsb
stos
and
pusha
jmp
clc
sub
adc
adc
in
xchg
andb
pop
mov
mov
lods
pop
pop
dec
in
stos
icebp
es
out
xorl
push
stos
out
add
add
scas
dec
push
push
mov
dec
out
pushf
jns
cwtl
and
and
jne
pop
jne
cltd
es
je
neg
sub
mov
mov
cld
lret
lods
lock
xchg
cld
and
std
out
cltd
out
push
mov
outsl
mov
cmp
pop
dec
sub
and
add
popf
mov
out
popf
mov
call
adc
mov
pop
dec
repz
mov
mov
and
lahf
xlat
xchg
xor
sub
adc
jmp
push
addb
pop
pop
scas
negl
shlb
repz
mov
xchg
adcl
movsl
mov
mov
mov
cmp
and
leave
les
or
sub
out
jp
xchg
add
xchg
add
aaa
fstps
push
xchg
cld
lret
and
cmp
dec
adc
arpl
call
ljmp
test
aam
sbb
test
jmp
xchg
dec
mov
pop
pop
adc
push
daa
xchg
rol
in
or
jbe
mov
arpl
push
mov
inc
ljmp
sbb
mov
jp
jge
pushf
out
sti
mov
jb
mov
xor
jp
jge
inc
dec
cltd
nopl
or
mov
test
pop
jnp
movsb
jmp
shll
inc
xchg
cs
xchg
xchg
sub
int3
mov
adcb
add
daa
sub
lock
and
out
lcall
push
mov
jmp
cmpsb
sbb
xchg
push
add
dec
sti
pop
jns
aas
test
or
inc
adc
add
fidivl
das
clc
cs
test
pop
insl
stc
test
add
loopne
or
imull
pop
push
mov
sub
cwtl
scas
out
repnz
xchg
iret
adcl
movsb
mov
fbld
fucomip
mov
adc
scas
push
sub
sub
stc
test
dec
gs
std
jo
xchg
mov
push
icebp
jbe
jbe
dec
movsl
stos
pop
cmpb
jne
mov
pop
jae
cmc
lea
js
cmp
and
dec
flds
or
add
and
xor
cli
push
pop
or
inc
addr16
or
xchg
aam
outsb
cmpl
pop
or
jbe
mov
adc
hlt
mov
xchg
shlb
xlat
std
mov
sub
fwait
or
push
xlat
rcll
outsl
adc
sbb
cwtl
jbe
je
mov
rolb
cmpsl
aad
jl
jl
jo
repz
cmpsl
cs
dec
xchg
ret
out
mov
out
test
mov
dec
out
or
push
lds
pop
mov
cmp
xchg
add
dec
mov
cmovl
cld
pop
sbb
xor
and
cmc
xor
dec
and
cmp
andl
daa
sbb
mov
dec
scas
jp
mov
sbb
xchg
pushf
pop
je
sahf
lds
mov
cmp
xchg
stos
test
mov
test
mov
inc
inc
fwait
sub
xchg
popf
pop
inc
inc
xor
sbb
mov
xlat
add
mov
mov
pop
enter
mov
and
rcll
jle
push
mov
shlb
xor
inc
in
sbb
ljmp
pushaw
xchg
or
sbb
test
cwtl
pop
insb
push
mov
xchg
idivl
setne
sbb
aam
mov
xor
ja
aad
fiaddl
cmp
inc
pop
movd
ror
fisubrl
in
sbb
loopne
mov
mov
cs
mov
xchg
icebp
xchg
sbb
add
test
sbb
loopne
inc
hlt
and
pop
jge
pop
or
mov
repnz
mov
pop
mov
test
mov
arpl
adcl
fisubs
sub
mov
call
xlat
jmp
dec
fsubr
pop
outsl
xchg
jns
lods
sub
gs
push
adc
pop
lret
scas
hlt
adc
shrl
cmp
fiadds
cmp
inc
filds
or
jno
mov
out
int
out
outsb
shrl
jge
pusha
data16
xor
push
sti
insw
add
jecxz
mov
inc
fwait
mov
add
in
add
push
ljmp
mov
data16
mov
pop
sub
jns
roll
and
cmp
jecxz
lcall
andb
xor
je
pop
adc
cli
xor
popa
ja
mov
add
mov
jo
addr16
jle
xor
ret
aas
cli
mov
adc
sub
int
int3
leave
cli
hlt
cmp
scas
adc
nop
adc
dec
mov
mov
push
mov
mov
mov
notl
adc
mov
fcmovnbe
pop
js
lret
out
pop
adc
mov
pop
clc
dec
mov
testb
pop
xor
lds
sub
je
pop
test
xor
mov
mov
dec
imul
fidivrs
test
leave
cli
dec
popf
scas
imul
test
mov
adc
mov
adc
adc
adc
pop
mov
pop
fistps
mov
xchg
addb
lods
loope
mov
jae
mov
andb
rolb
insl
gs
sbb
cmp
pop
ret
cmc
or
das
pop
arpl
cmp
roll
xchg
sbb
shll
mov
cmp
out
arpl
mov
fsubs
push
shlb
fsubp
inc
dec
sbb
jmp
jg
cmpsb
data16
btc
mov
xchg
js
mov
mov
in
cmpsl
mov
pusha
bound
loope
in
push
push
out
sbb
add
loope
ficomps
push
inc
sbb
jne
nop
enter
or
jb
xchg
arpl
scas
jno
mov
sbb
fcmove
push
rcll
jl
arpl
jl
lret
push
dec
js
push
xor
push
push
and
dec
and
mov
mov
imul
icebp
js
shll
mov
push
jmp
add
cmp
cltd
jp
dec
data16
mov
jmp
xor
mov
mov
jae
and
fsubr
jp
test
sbb
and
adc
jge
ret
lahf
jle
mov
pop
push
imul
mov
xchg
mov
jno
test
leave
aaa
sti
notl
dec
jae
or
pushf
popf
imul
add
xor
outsb
cmp
cld
push
cmpb
sahf
iret
in
movsl
cmp
rclb
cld
sub
out
mov
psraw
sub
xor
jbe
bound
and
xor
lcall
rcll
or
cmpsl
xchg
and
enter
mov
xchg
ds
xchg
mov
or
add
outsb
add
adc
xchg
cmp
sub
pop
push
test
sub
imul
xchg
mov
xchg
roll
ds
lcall
jb
mov
jb
adc
push
inc
inc
xor
or
xchg
adcb
loope
inc
pushf
push
out
jmp
icebp
hlt
mov
pop
inc
mov
int
test
cmp
call
sbb
pop
lock
les
lret
dec
repnz
mov
fsts
mov
pop
fbstp
fcoms
push
mov
sbb
add
testb
pop
push
pop
dec
dec
mov
rcrb
lret
add
ja
aam
sub
sbb
repnz
xlat
fsub
std
addr16
mov
cmpsl
push
test
adc
cmpb
pusha
out
adcl
cmpsb
pushw
xchg
inc
adc
arpl
fwait
lods
cmp
rcrl
cwtl
aas
sarl
pop
mov
add
xchg
loopne
ja
cmp
cmc
xlat
into
pop
lcall
mov
mov
lock
xchg
ret
push
lahf
fwait
push
xor
mov
sti
cmpsb
mov
or
xor
imul
and
xchg
xchg
xchg
out
loop
lock
cmp
jne
dec
dec
jns
adcl
cwtl
nop
push
push
test
xor
jg
outsb
pop
cmp
stc
dec
cld
movsb
call
js
mov
xor
mov
stc
mov
fistl
jb
push
fidivrs
clc
mov
les
test
jle
jno
mov
pusha
lret
loope
jbe
and
lcall
into
cli
ret
jo
lcall
or
push
cmp
push
out
test
push
sarb
testl
dec
ror
and
in
inc
xlat
and
cmp
sub
xor
xorl
popf
and
xchg
outsl
das
dec
gs
adc
push
sbb
inc
insb
xor
fwait
xor
test
jecxz
inc
push
jp
mov
push
push
insl
das
bound
inc
clc
cmpsl
dec
lret
negl
dec
addr16
int
ficomps
mov
shlb
cmc
out
mov
sbb
pop
inc
testl
mov
adc
stos
daa
push
addb
dec
cmp
pop
fsubrs
orb
add
or
je
subl
push
ret
mov
aaa
add
nop
int3
aaa
mov
pop
jmp
sbb
pushfw
and
push
shrb
sbb
rorb
dec
repnz
jae
add
daa
mov
fcomps
and
js
or
daa
int3
cmpsl
lds
dec
dec
mov
repnz
int
ror
sbb
out
daa
adc
out
jb
lods
aam
into
xchg
cwtl
jecxz
adc
push
mov
jmp
shl
mov
loop
add
xor
xor
std
pop
mov
ror
or
mov
mov
lahf
pusha
mov
test
inc
cs
shrl
fwait
outsl
mov
fsts
pop
movsb
scas
add
cmp
daa
clc
sbb
in
xor
dec
xchg
jbe
push
test
mov
adc
dec
inc
sahf
out
subl
shl
bound
xchg
adc
inc
jae
fildll
cmpsl
mov
cmp
lcall
ljmp
push
test
pop
loopne
mov
out
xor
xchg
sub
insl
push
js
pop
jle
mov
xchg
rorl
daa
jecxz
fidivrl
jbe
mov
ret
pop
xchg
icebp
jp
lods
sub
scas
lods
nop
and
insl
pop
lret
in
mov
shl
out
pop
inc
fdivrs
out
pop
sbb
adc
lods
test
repnz
clc
sbb
fsubrp
fists
push
aad
push
jae
int
add
dec
stc
std
and
out
pop
in
mov
shlb
rolb
add
insl
ljmp
pop
and
sbb
or
mov
dec
into
cmp
and
dec
mov
dec
fcmovb
addr16
mov
lret
xchg
bound
aaa
mov
push
fdiv
movsb
dec
loop
sub
push
rolb
jae
push
es
pushf
cmp
sahf
adcl
in
mov
jecxz
and
mov
sub
nop
add
lea
mov
or
popf
jp
lahf
loope
loop
mov
aaa
mov
add
sub
sti
xchg
mov
popf
sbb
xlat
and
mov
cmp
lcall
imul
push
sahf
mov
jle
pop
dec
out
xor
push
cmpsl
scas
insb
in
cmp
adc
dec
inc
push
mov
shrb
repz
mul
jae
in
orb
vpsubsb
xor
stc
inc
mov
std
mov
das
pusha
dec
and
les
sbb
xor
push
nop
leave
popf
add
fidivs
ljmp
adc
add
push
dec
jmp
test
fstpt
or
scas
mov
out
iret
dec
push
push
sbb
bound
mov
jg
std
xchg
popf
insb
shlb
pop
mov
cmpsl
shl
mov
dec
roll
pop
pop
fisubrs
in
dec
and
mov
ret
dec
adcl
fsubs
imul
mov
pop
ja
fnstsw
outsl
rcll
rorb
into
fcompl
in
fcmovnb
lret
jmp
inc
ja
sbb
jae
mov
shll
pop
xor
imul
call
movsb
lret
ss
push
mov
inc
roll
fwait
xor
push
les
sub
pop
shlb
icebp
fadd
clc
lods
ljmp
nop
mov
sub
sub
mov
neg
mov
add
push
movsl
dec
insl
lds
popa
jmp
sub
in
out
imul
or
jo
sub
mov
fiaddl
push
and
les
mov
sbbb
push
outsl
paddsw
jae
sti
adc
jae
imul
je
adc
inc
and
rcrb
or
sub
bound
loop
lea
in
xor
mov
dec
cmp
cmp
in
lock
push
rol
jb
push
mov
mov
mov
dec
in
mov
xchg
and
push
jecxz
sbb
js
and
sub
pop
fisttpll
inc
sub
xor
int
mov
dec
push
inc
jp
out
lods
sbb
push
xchg
push
mov
mov
mov
adc
inc
es
sbb
xchg
sub
aaa
lret
outsl
sbb
rcll
out
push
popa
xor
jbe
push
adc
pop
shll
insb
and
lret
out
jnp
cmp
mov
mov
lret
xor
push
push
inc
xor
repnz
out
fildll
dec
mov
dec
sbb
les
mov
push
and
xchg
stc
sbb
or
adc
inc
lock
push
lods
xor
iret
sub
xor
add
mov
jp
sub
inc
push
cli
sbb
push
jo
lods
stc
es
sub
sbb
daa
nop
outsb
cld
and
dec
test
xor
icebp
inc
addr16
sti
xchg
and
and
push
sub
rcrl
xor
movsb
and
mov
loop
js
mov
pop
stos
cmpb
out
cltd
inc
cmp
xor
mov
sahf
fstps
loope
sbb
xor
sbb
mov
adc
adc
jmp
jmp
xor
cmp
xchg
or
adc
ds
mov
sub
add
xchg
sub
dec
mov
or
xor
or
pop
xor
fadds
pop
cld
xchg
mov
mov
inc
aad
or
xchg
cld
test
aaa
addr16
nop
ljmp
pop
dec
jle
sti
int3
lahf
movsb
test
lods
pop
and
fisubrl
xchg
movsb
and
xchg
movsb
imul
fdivl
lds
repz
loope
adc
shlb
sub
fldl
and
shrl
aas
daa
sub
dec
jae
scas
push
inc
inc
push
mov
add
movsl
int3
call
pop
fucomp
adc
sahf
xor
or
dec
cmc
in
dec
rolb
cmpsl
cmc
xor
fs
fs
cmp
iret
pop
sub
xchg
add
out
push
jp
shrl
mov
or
push
jle
xor
addr16
or
pop
aad
dec
mov
mov
test
leave
pop
out
add
xchg
mov
movsb
push
adc
mov
in
or
adc
or
inc
xor
and
ja
into
scas
jp
mov
cli
and
mov
push
fisubl
sub
sub
mov
sub
dec
xchg
cmp
stos
decb
pusha
mov
out
aaa
mov
jbe
popa
or
arpl
iret
and
icebp
inc
insb
hlt
and
mov
je
das
les
inc
cltd
bound
push
andl
out
cmpsl
rcll
cmp
adc
xchg
popa
mov
pop
ffree
loope
pop
cmpl
lods
mov
mov
cmp
stos
sti
mov
sti
insb
mov
cmp
ja
stos
lcall
ja
rolb
mov
sub
divb
pop
adc
jne
cmpsb
stos
clc
insb
out
aas
cmpsb
clc
into
push
scas
xchg
lret
frstor
mov
lret
cmp
mov
push
ja
mov
outsl
push
repnz
rclb
inc
aam
rcrl
push
jecxz
call
clc
subl
pop
mov
jbe
bound
cmp
dec
inc
xchg
add
xchg
dec
aas
into
fs
inc
clc
mov
mov
or
icebp
pop
add
xchg
int
ret
das
and
insl
dec
nop
and
push
call
incl
xlat
paddusw
or
cmpsb
xor
mov
or
movsb
jae
sub
jg
xchg
sti
jb
jl
roll
daa
and
jo
pushf
out
pop
and
adc
sbb
pop
and
adc
mov
fs
mov
mov
push
dec
into
mov
mov
ret
mov
aaa
adc
daa
pop
fldcw
sub
lds
pop
add
xchg
fldcw
add
push
and
add
orb
mov
ret
test
jb
lahf
cmp
mov
or
movsb
cs
in
xchg
xor
xchg
fcoms
push
fisubrl
xor
lock
dec
in
je
jg
out
nop
clc
mov
pop
jb
in
mov
adc
mov
int3
idivb
clc
inc
adc
push
cmp
push
fwait
mov
call
decb
loop
pop
aaa
jge
out
mov
sti
jne
add
xor
sub
xor
ds
mov
int
cmp
lods
imul
jmp
mov
dec
pop
push
repz
add
iret
xchg
es
pop
into
sbb
clc
cmpsb
outsl
jp
xor
jge
cli
divl
push
add
icebp
in
in
xchg
jecxz
das
mov
repz
xor
push
mov
ja
pushf
insb
add
pop
mov
data16
or
imul
fnstenv
and
imul
and
lds
cmp
cmpsl
pop
aaa
dec
pop
or
or
sbb
adc
jne
les
lods
cmpsl
sbb
mov
out
or
adc
int
roll
test
sar
inc
jb
bound
or
out
cmp
inc
adc
inc
cmp
ja
inc
jno
popa
sbb
bnd
sub
lret
scas
adc
leave
sub
jge
fildl
xchg
rcr
mov
jbe
cmp
out
push
jns
cmpsb
add
push
and
shlb
repz
mov
mov
nop
test
push
daa
mov
and
inc
std
push
les
pop
dec
into
rorb
sub
addr16
or
test
lret
sbb
dec
sahf
rcrl
mov
fists
pop
dec
mov
leave
popf
out
lock
mov
popa
sub
lahf
cmp
mov
xchg
inc
pop
out
xchg
push
add
sub
loop
adc
loopne
adc
imul
mov
ficoms
cli
cmc
mov
jns
sti
push
lock
xchg
push
mov
shlb
inc
mulb
out
and
aaa
inc
jecxz
mov
and
cmp
cltd
mov
test
mov
sbb
sahf
call
and
push
xor
push
pop
bound
push
cli
in
addl
adc
addr16
loop
decl
lods
mov
xchg
mov
jl
dec
loop
inc
xchg
lds
add
pop
daa
sub
and
jle
jecxz
in
push
divb
or
mov
push
jle
testb
push
bound
sub
push
sbb
and
jl
pop
fsubrl
dec
fiadds
push
xchg
arpl
xor
mov
div
mov
mov
cmpl
and
cli
in
shl
sub
jbe
sbb
or
test
ret
or
inc
imul
mov
jl
mov
outsb
adc
jnp
je
mov
jle
or
mov
sub
sbb
mov
pop
dec
xchg
into
test
out
aam
cmc
mov
dec
rcrb
shrb
outsb
inc
ret
xor
insl
cmp
adc
cwtl
dec
sub
jecxz
out
int3
test
cmpsl
cli
fisubs
jp
cmp
shlb
adcl
mov
imul
inc
or
addr16
pop
sbb
sub
jno
mov
stos
and
sub
stc
mov
push
dec
xchg
ret
stos
in
scas
mov
outsb
jg
inc
loop
pusha
and
adc
dec
jl
inc
cld
mov
out
in
loop
jg
rolb
push
fs
jle
mov
dec
mov
in
addb
or
ja
std
arpl
xchg
mov
scas
cmp
aad
fstl
or
xchg
bnd
mov
and
imul
lret
push
jmp
jle
shrb
push
inc
or
or
mov
adc
push
test
shlb
adc
add
jge
scas
inc
jmp
out
inc
inc
add
pop
clc
cmp
hlt
test
test
rclb
inc
outsl
leave
pop
inc
sbb
outsb
scas
mov
push
xor
mov
ljmp
cmp
add
les
mov
cltd
inc
aad
sub
bound
xor
pop
int3
mov
fldl
lods
mov
dec
push
push
xchg
insl
movsb
ret
jne
stos
xchg
imulb
int3
xor
sti
xchg
sub
rolb
mov
in
mov
in
mov
lret
popa
mov
pop
aas
push
sub
gs
ss
mov
mov
cmp
iret
enter
enter
iret
and
inc
mov
or
cli
addr16
pop
mov
loope
divl
int
mov
xchg
jo
pop
push
fisubl
daa
shlb
jg
adc
push
in
jb
or
sbb
mov
clc
test
fs
int3
cwtl
pop
cmpsb
inc
and
mov
aam
pop
sbbl
out
shll
sti
fisubrl
repnz
in
lods
xchg
sbb
inc
and
pusha
pop
dec
mov
adc
or
mov
test
adc
nop
mov
lds
pop
loop
mov
or
jge
push
and
sbb
cmp
mov
mov
aas
sub
and
inc
stos
movsl
les
insl
xor
int3
mov
push
jp
cmp
subb
insl
push
std
dec
bound
flds
sub
sub
mov
xchg
fdivrl
xchg
fadd
outsb
repnz
sbb
jns
lds
xor
jo
rolb
mov
cmpsb
push
jb
add
mov
add
clc
or
call
or
sub
fimull
movsl
inc
lock
sub
hlt
jp
cwtl
inc
cmc
repz
mov
push
rorl
mov
jl
bound
aaa
roll
dec
inc
sahf
xchg
sbb
imul
std
dec
mov
pop
call
push
cwtl
mov
sbb
mov
sub
mov
mov
movsb
das
imul
mov
mov
es
mov
mov
adc
aaa
mov
in
mov
sarb
cmp
lahf
mov
in
fs
sub
pop
xchg
sbb
jg
cwtl
ljmp
jno
and
imul
scas
out
adc
in
sbb
mov
icebp
mov
pusha
adc
mov
xor
pop
xchg
cmp
jnp
push
lods
gs
subl
mov
lea
inc
data16
jmp
lods
test
sub
sbb
les
test
push
rcrl
fstpl
cld
jne
dec
imul
jbe
inc
push
in
jecxz
jne
popa
nop
cmp
mov
incb
mov
xchg
rcrb
cmp
iret
scas
push
mov
les
dec
stos
xchg
adc
imul
mov
inc
adc
dec
rcrb
shrb
fdiv
popl
jmp
shlb
loop
xchg
in
sub
sbb
repz
inc
push
imul
or
push
xchg
pop
jo
jle
xor
les
xor
ljmp
cld
scas
mov
mov
hlt
leave
and
mov
enter
scas
xchg
mov
repz
out
fwait
cli
mov
and
dec
lods
sub
icebp
das
mov
orl
fiadds
add
test
inc
or
hlt
add
adc
sub
xchg
dec
stos
enter
test
movsb
sbb
pushf
lahf
pop
xchg
add
push
popf
mov
sbb
es
stc
pusha
xchg
ret
rorl
sub
push
es
rsm
cmpsb
mov
xor
mov
xlat
out
mov
ficoml
out
jne
xor
and
jbe
das
das
add
inc
mov
bound
pop
cmpsw
push
sub
fldcw
pop
mov
neg
xchg
hlt
push
fistl
es
clc
loop
mov
jg,pt
cmp
xchg
mov
int
jg
das
dec
pop
sub
jle
adc
into
push
mov
mov
inc
or
jl
addr16
dec
addb
adc
push
jl
gs
pop
lahf
movsb
fwait
das
mov
in
dec
in
imul
pop
cli
dec
sbb
wrmsr
rsm
pop
les
loop
mov
push
movsl
call
mov
dec
jle
stos
jae
and
push
and
inc
outsl
xchg
inc
xor
sbb
xor
cmp
xor
or
jnp
push
gs
cld
and
icebp
adc
mov
xchg
in
cmp
addb
push
dec
js
pop
and
sub
ds
sbb
cld
fcoml
inc
push
iret
push
inc
daa
add
cmp
inc
addl
adc
push
loopne
jne
dec
mov
add
repnz
sub
cwtl
dec
mov
push
repz
pop
cltd
jge
subl
sbb
inc
mov
push
push
clc
mov
outsl
xor
test
sbb
outsl
movsl
xchg
jns
and
das
push
scas
leave
fs
notl
outsb
jecxz
das
sbb
inc
adc
dec
out
jne
xor
cld
mov
sarb
sbb
mov
addr16
push
push
xchg
nop
in
pop
inc
call
stos
inc
mov
cmpl
cmp
xor
add
mov
add
lahf
fcomp
or
mov
lea
mov
jns
and
dec
and
sahf
aaa
push
and
cmp
stc
scas
or
xchg
mov
les
dec
mov
or
out
push
subl
popf
or
xchg
adc
mov
mov
pop
fcmovnbe
popf
pop
mov
cmp
adc
mov
lcall
xchg
sbb
mov
jle
adc
push
dec
add
ljmp
dec
mov
fwait
call
ds
and
pop
mov
pusha
inc
repz
lods
cld
mov
pop
enter
and
sahf
movsb
push
cmp
inc
sub
and
in
xor
jle
ljmp
lods
or
enter
or
fxch
push
pusha
or
lret
inc
pop
jecxz
insl
aas
pop
clc
cltd
mov
mov
push
dec
movsb
cmp
lods
mov
sar
gs
sub
addr16
push
xlat
repnz
sbb
sub
jmp
and
push
jg
ljmp
fstpt
sbb
jle
dec
test
jmp
sub
call
cmpsb
mov
aaa
add
jl
xor
push
sar
aam
jge
sarl
stos
mov
dec
jecxz
movsb
jecxz
leave
inc
pop
add
arpl
addr16
xchg
cs
repz
leave
sub
std
rcrb
insb
fildl
pop
pop
pop
add
xor
fcmovnu
bnd
jle
push
sbb
sbb
jb
fsubrl
popa
lcall
jno
push
mov
out
imull
lods
stos
rorl
imul
fdivrs
add
pause
lods
iret
movsb
inc
adc
and
in
rcl
in
out
jnp
adc
mov
pop
lea
fildl
jbe
mov
mov
or
data16
dec
xor
jne
pop
dec
or
mov
enter
and
sbb
imul
mov
push
mov
fs
push
lcall
dec
jl
dec
push
cmp
jno
pusha
cld
mov
je
fsubs
in
sub
loope
jmp
mov
mov
dec
mov
ljmp
hlt
mov
xchg
imul
lahf
mov
ljmp
sub
pushf
icebp
adc
dec
fisubl
arpl
dec
mov
and
aad
out
pop
subl
in
mov
js
sahf
sbb
jl
and
sbb
add
dec
add
das
sub
mov
rcrb
jae
mov
mov
sbb
mov
ret
popa
dec
cmpsl
mov
xor
pop
mov
jbe
lret
in
cmp
push
aas
lcall
and
push
lods
cs
inc
es
push
dec
xor
inc
iret
rol
in
push
ret
push
loope
das
jne
adc
or
leave
xchg
inc
incb
lods
addr16
xchg
ficoml
push
sbb
adc
mov
movsl
add
dec
je
fistpl
daa
fmulp
mov
xor
mov
lret
and
sub
pop
fcomps
sub
adc
stos
mov
imull
enter
inc
or
adc
psubusw
jnp
dec
push
cld
cltd
in
cmp
cmp
cld
xor
jp
sbb
fwait
icebp
inc
xchg
das
jnp
xchg
and
sub
push
or
gs
ret
je
jbe
push
or
orb
jne
pop
cmp
mov
test
jecxz
mov
inc
push
mov
mov
bound
or
bound
mov
sbb
dec
imul
or
and
pop
jg
and
jae
mov
mov
in
rorl
daa
out
or
push
push
inc
lahf
dec
xchg
mov
dec
jnp
sub
incb
popa
sbb
mov
or
mov
sub
cmp
rcrl
xchg
mov
notl
popf
jo
sahf
data16
mov
cmpsl
inc
rolb
addb
lods
inc
aad
and
xor
push
push
jo
movsl
xchg
xor
aaa
push
cmp
mov
nop
mov
cmpsb
or
insb
ss
jle
mov
add
in
loop
or
imul
imul
dec
or
xorb
loope
inc
sbb
push
popa
push
jg
in
shrb
rol
adc
xchg
mov
dec
lret
cmc
adc
inc
movsl
inc
jns
shll
addr16
addr16
sbb
test
pop
sub
ds
ret
cli
cmp
dec
repnz
and
movsl
aad
fldt
xchg
cmpsb
add
add
pop
xor
push
rcl
popf
imul
mov
sbb
pop
les
jnp
aad
stos
popa
rcrb
cmp
push
dec
imul
inc
lods
fs
sahf
sub
fwait
cmp
inc
into
addr16
mov
loop
sub
cmp
roll
xchg
fdivrp
push
jmp
xchg
test
sti
not
and
or
mov
not
dec
and
stos
mov
loop
cmpsb
push
rolb
or
xor
xchg
xchg
fistpll
add
lcall
cwtl
xor
inc
ljmp
roll
in
dec
leave
leave
shll
das
int
es
popf
sub
pop
pop
jnp
mov
lahf
sbb
cmpsl
int
mov
mov
shlb
lret
ljmp
xchg
out
adc
loopne
insb
sarb
inc
mov
or
xchg
cwtl
das
inc
repz
xlat
xchg
fs
or
rol
loopne
hlt
cltd
daa
xchg
dec
push
cmp
clc
inc
inc
pop
push
push
cmp
pop
adc
test
sahf
jb
inc
out
mov
add
xor
sub
rclb
lahf
testl
xchg
jae
mov
arpl
push
in
in
inc
dec
jle
lods
hlt
jns
xchg
test
stos
es
in
sti
mov
in
std
out
loop
loop
sbbb
pop
dec
stc
adc
rcrb
stos
cli
sub
scas
mov
loopne
jle
in
or
jmp
xchg
sub
xor
xor
mov
add
ljmp
adc
xor
jno
cwtl
mov
rolb
scas
leave
fcoms
mov
shll
cmp
jecxz
mov
xchg
shlb
rclb
xorl
roll
js
test
or
push
fbld
loope
and
in
sbb
aaa
aam
jge
xchg
xor
lret
add
inc
xchg
mov
or
imul
or
xchg
js
lods
push
sub
mov
nop
xor
fists
out
mov
pop
cmp
std
cld
inc
int3
test
js
addr16
jbe
xchg
repnz
jecxz
push
fiadds
adc
sarb
cli
cmp
xor
fstpt
popa
or
add
xchg
divb
ljmp
aaa
lds
pop
je
pushf
jmp
jle
in
fcmovbe
adcb
stc
fwait
pop
out
leave
gs
cmpsb
aas
cmp
xchg
pusha
push
inc
ss
jb
js
jmp
or
pop
jns
pop
gs
insl
xchg
push
xchg
push
sti
cmc
fcompl
inc
mov
sub
jmp
xchg
jg
enter
add
out
and
leave
mov
cwtl
adc
pop
add
sbb
xchg
bound
lea
xlat
insb
jns
lock
and
sub
rcrb
stos
fiadds
push
push
xor
push
cmp
mov
lret
sub
sbb
mov
jne
pop
sub
montmul
cmpsb
add
dec
iret
std
adc
mov
mov
xchg
jno
icebp
push
pop
es
fsubs
popf
add
mov
cli
loop
insl
mul
xchg
xor
mov
push
jno
daa
pop
fisttpll
mov
leave
xchg
adc
into
sub
outsl
ss
gs
shrb
mov
pop
pop
push
sbb
xor
xor
fistl
jle
adc
xchg
mov
adc
data16
xchg
mov
in
add
jo
leave
cld
and
mov
mov
popl
pushf
addl
subl
lcall
mov
scas
and
and
mov
jne
or
leave
pop
mov
flds
loope
add
jmp
and
push
inc
push
or
lds
leave
scas
jnp
push
icebp
adc
test
sub
sbb
insb
mov
or
pop
sub
push
cmp
outsb
fwait
dec
xchg
pop
pop
cwtl
js
mov
fwait
popa
sbb
pusha
out
out
mov
outsb
insl
jne
pop
nop
sub
push
xchg
jle
mov
push
inc
mov
mov
je
cmp
xor
mov
pop
and
push
jbe
jmp
ficoms
repnz
mov
loope
pop
xchg
mov
mov
cld
repz
pop
outsb
xchg
mov
or
in
inc
adc
nop
lcall
push
add
in
jns
xor
fisubs
fs
dec
xchg
pusha
lcall
xor
daa
push
mov
dec
test
xchg
gs
mov
cld
inc
or
scas
test
jecxz
pop
mov
mov
sti
rcrl
out
mov
and
mov
xchg
outsl
fisttpl
aad
daa
add
dec
outsl
lock
ja
push
jnp
pop
lds
sub
add
into
mov
xchg
xor
jnp
push
ret
fistpll
or
ja
aas
mov
enter
mov
inc
ret
enter
adc
and
mov
cwtl
imul
mov
mov
sub
pop
aas
xchg
fmull
lea
dec
inc
call
arpl
mov
test
dec
repz
ds
xlat
shufps
dec
xchg
sahf
ficoms
cmp
imul
jnp
inc
fmuls
mov
mov
shr
add
xchg
pop
loopne
inc
decb
imul
jp
pop
mov
xor
rcl
xor
je
lret
sbb
sub
es
or
xchg
jns,pt
stos
testw
cmp
int3
mov
dec
daa
ja
movsb
rcr
push
lods
sub
jb
xchg
xor
mov
mov
and
pop
xchg
repnz
push
sbb
mov
inc
and
mov
and
inc
add
or
pop
sub
push
fwait
inc
pop
shl
lahf
pop
test
fistpl
inc
jl
add
aad
rcrl
mov
adc
or
sbb
pop
sub
dec
inc
mov
loope
add
loopne
sbb
cmp
insl
iret
dec
add
cld
adc
dec
mov
xor
ret
in
mov
je
sub
icebp
rolb
pop
push
insb
and
push
jl
jno
cmp
sbb
fistps
add
aam
mov
adc
xor
xor
mov
xchg
scas
and
or
and
mov
dec
test
push
sub
lods
jge
jnp
inc
ljmp
mov
adc
cmp
movsl
insl
jle
push
cwtl
out
push
cli
sub
ds
fisubs
mov
test
jmp
rolb
jo
pop
rclb
iret
dec
shr
or
adc
cmp
or
mov
mov
aad
inc
movsb
fs
jno
inc
cwtl
add
iret
pushf
mov
xchg
add
jno
cmp
adc
popf
sub
aas
sbb
push
sbb
fsts
lcall
xchg
dec
or
adc
or
cmp
push
iret
sub
and
fldcw
xchg
dec
inc
cmp
and
lock
nop
or
lds
outsb
lods
or
ss
inc
jnp
sbb
mov
mov
inc
adc
gs
xor
jp
inc
pushf
jne
cs
loopne
testb
jmp
lock
push
pop
cs
lds
test
xchg
mov
and
xchg
cmp
popa
inc
sub
aad
stos
data16
push
xchg
aam
adc
sbb
jbe
push
lret
cmp
out
repnz
jg
dec
mov
push
mov
cmp
and
mov
mov
add
xchg
call
sbb
jl
into
insl
enter
sbb
push
lcall
xor
mov
push
das
add
repnz
stos
lret
jns
lds
dec
push
lock
cmp
sub
out
mov
sub
roll
popf
sub
outsl
pop
pop
sbb
sahf
inc
and
decb
fs
pop
mov
sub
or
outsb
out
lret
push
sub
sbb
cmp
mov
and
lcall
xchg
and
repnz
or
or
add
hlt
push
fcoml
jecxz
loope
pop
jmp
push
das
subl
xor
cmp
xchg
mov
sub
stos
leave
and
pushf
mov
cmp
cld
loopne
pop
push
sub
sbb
push
mov
adc
mov
push
mov
out
sti
push
in
dec
cmp
sbb
cwtl
jnp
inc
ljmp
lea
insb
cmp
data16
out
cmp
xchg
sub
xchg
mov
call
imul
and
test
sbb
add
fbld
adc
xorb
das
cmc
adc
in
dec
out
push
in
adc
clc
mov
in
addl
xor
xchg
in
push
dec
leave
stc
pop
xor
mov
push
sbb
std
push
sbb
xor
sbb
test
cmpl
test
adc
xchg
mov
xchg
hlt
sbbl
or
orb
push
ds
scas
push
fwait
ja
jge
lods
pusha
mov
cmpsl
pop
adc
sbb
xchg
dec
sub
mov
iret
out
outsb
xorl
cmp
jge
jge
xor
xrelease
imulb
leave
push
repz
sahf
mov
cmpsl
dec
push
xchg
aad
cld
xchg
fs
popa
or
inc
loopne
cmp
xor
pop
push
cmc
jae
aad
jns
xor
popa
mov
std
fdivrs
and
pop
repnz
fs
imul
cwtl
or
popf
stos
push
dec
cwtl
out
fucom
pop
adc
int
or
repz
std
in
gs
jne
addr16
sahf
jge
jle
pop
push
dec
nop
bound
int3
mov
cmpl
outsl
jle
and
scas
ja
ficoms
mov
les
inc
sahf
xchg
cld
jp
imull
out
pop
fs
outsb
jbe
lcall
xor
out
out
jl
mov
and
pushf
ljmp
fidivrs
es
push
stos
jbe,pn
ljmp
ficomps
test
sub
cs
mov
xor
sti
popf
call
hlt
mov
inc
pusha
xchg
inc
mov
out
push
movsb
dec
or
test
inc
push
add
mov
xchg
and
inc
js
cmpsb
cmp
int
stc
hlt
xchg
sbb
gs
movsb
xchg
fs
imul
orb
aas
stos
xor
cmpsl
adc
xchg
add
or
lahf
push
sbb
adc
outsl
mov
out
push
rol
pop
push
iret
aad
int3
addb
xchg
jg
icebp
insb
fistpll
loopne
mov
int
sub
lods
jp
pop
xor
mov
inc
dec
cwtl
popf
adc
or
jmp
inc
loope
mov
bound
out
leave
aad
jns
lods
cmp
rcl
out
packuswb
mov
mov
cmpsb
push
push
aas
int
push
insl
ret
push
sbb
xor
mov
xchg
sbb
out
and
jmp
add
or
cld
popf
das
sti
and
mov
sbb
leave
xchg
adc
inc
das
sub
sub
fsubp
shr
push
jge
repz
arpl
cltd
cmpsb
mov
push
mov
xchg
rcrl
adc
outsl
jecxz
cs
xor
jae
sbb
or
push
or
and
xor
repnz
mov
mov
jp
and
clc
pop
dec
mov
push
dec
out
je
inc
daa
xor
push
xor
adc
inc
push
cmpsl
sub
dec
or
fildl
aaa
dec
ret
adc
sbb
adc
pop
cmpb
mov
fldt
outsb
lods
dec
jns
subb
cmp
push
push
out
les
popf
ret
jne
xchg
aam
mov
push
push
int
cmpb
and
out
sub
or
cmc
pop
xor
mov
mov
js
push
mov
mov
jmp
sbbl
popa
rcrb
sbb
iret
mov
addr16
fidivl
popf
cmp
fcomps
enter
mov
or
popf
iret
subl
jmp
js
lret
pop
les
push
into
jae
data16
rcl
sub
negl
mov
out
fincstp
bswap
lods
imul
push
lret
xchg
ds
inc
mov
rclb
jle
faddl
out
mov
fisttps
pusha
fldenv
jb
fdivs
mov
and
mov
push
sbbb
ja
xor
lahf
imul
cmp
xchg
das
das
aad
or
mov
in
frstor
xor
lret
repnz
sbb
dec
jnp
and
sbb
pop
mov
cli
stos
hlt
es
sub
int3
jne
or
sub
rcrb
lret
pop
fmul
push
push
add
push
jge
loop
in
mov
pop
add
ret
and
xor
int3
dec
fldcw
or
xchg
sub
clc
sub
xchg
insl
cmp
inc
push
stos
and
loope
lods
stos
add
jne
pop
popf
sbb
mov
loope
cmpsl
idivb
mov
and
mov
xchg
ret
dec
inc
cmp
sbb
sub
enter
aas
test
lahf
inc
xchg
fsubl
jl
or
fdivrs
aam
jb
in
sub
test
mov
rcl
sbb
test
imul
shlb
mov
mov
cmp
sbb
cmpsl
inc
or
loope
mov
sub
pop
cmp
insb
lods
cmp
je
sub
inc
jno
sbb
jbe
and
adc
or
call
aas
negl
or
es
mov
ss
pop
mov
outsb
push
into
mov
int
pop
xlat
movsb
sbb
aas
xchg
into
stc
insb
xchg
fnstenv
push
iret
repnz
cmpb
jo
jecxz
pop
fdivs
cs
out
xchg
fimull
dec
sbb
fwait
ljmp
mov
jbe
repnz
add
xchg
jnp
sub
jne
ljmp
push
sti
or
adc
adc
jae
sbb
cltd
jl
jb
and
test
inc
dec
xor
ficomps
lret
adc
shll
imul
stc
pop
mov
pop
dec
cmp
xchg
jp
das
call
addr16
xchg
call
pop
pop
les
maxps
pushf
int
ds
add
hlt
sbb
daa
test
sbb
jnp
cmc
mov
and
sub
je
push
lods
pop
iret
push
xor
jmp
ja
outsl
in
pop
push
rsqrtps
add
bound
sub
xor
push
xor
adc
mov
out
sbb
ret
fsub
test
pop
pop
pop
inc
cmc
test
lock
xor
cmpsb
jg
jmp
enter
jae
add
sub
sbb
pop
xchg
call
ficomps
addb
imul
dec
mov
xchg
mov
movsl
sub
rorb
xchg
xchg
jno
adc
aad
mov
xchg
xchg
je
data16
mov
push
je
lods
mov
iret
insl
push
repz
inc
scas
out
js
push
mov
pusha
loopne
int3
or
and
jns
out
mov
push
xor
push
jge
pop
dec
mov
enter
push
jecxz
sbb
lret
jo
mov
leave
jg
std
ret
ret
ds
loop
dec
cltd
mov
pop
mov
xchg
imul
daa
mov
pop
out
cmp
adcb
repz
jecxz
mov
dec
idivb
mov
dec
adc
cmp
std
fldenv
imul
pop
inc
ja
mov
fs
mov
out
jle
ja
scas
das
add
mov
jo
jmp
pop
lock
fwait
inc
js
dec
mov
xor
ficoml
inc
divb
fmuls
dec
push
lods
add
lds
or
dec
inc
loopne
dec
out
pop
inc
or
cld
popa
and
sub
imul
pop
inc
test
xchg
jbe
push
cmp
jae
pop
int3
cmc
xchg
xchg
icebp
xchg
xor
ljmp
xchg
addr16
mov
subb
repnz
cmp
data16
in
mov
imul
adc
mov
lcall
cmpsl
addr16
clc
insb
add
pop
jle
stc
ret
shl
adc
xchg
cmp
ds
pop
repz
cmpb
sbb
mov
pop
mov
imul
and
fidivs
adc
in
or
add
sbb
jns
sub
ret
mov
call
mov
cmp
scas
cld
fwait
and
mov
data16
fnstenv
ja
mov
pop
cmp
sbb
jno
inc
sbb
add
fwait
ds
fldt
data16
inc
xlat
dec
mov
ret
data16
push
fabs
loop
mov
daa
mov
mov
pop
xchg
nop
in
pop
ljmp
mov
in
adcb
out
pop
fdivp
jns
or
es
push
xor
and
sti
add
cwtl
rcl
iret
jne
push
outsb
popf
or
dec
sub
aam
movsb
dec
out
jg
or
and
sub
fldl
fiaddl
push
jne
sub
cmc
mov
loop
xor
popf
pushf
mov
icebp
fsubrl
cmc
ret
int3
pop
mov
push
ret
push
xor
jmp
mov
mov
adc
mov
test
outsb
bound
mov
mov
mov
adc
or
les
xlat
outsb
out
fists
stos
loope
test
cmp
dec
stos
cmp
pop
out
jle
subb
inc
mov
xor
out
jp
ljmp
data16
mov
jle
outsl
bound
loop
cmp
jle
idivl
xchg
fmuls
sub
push
mov
sbb
pushf
jnp
sub
mov
sti
test
xor
mov
test
adc
cmp
shr
lods
adc
cmpsl
loope
hlt
repnz
cltd
movsb
repz
iret
mov
mov
clc
aas
or
cmp
into
arpl
out
out
fiaddl
insl
mov
bound
mov
pop
fwait
mov
faddl
std
jge
stc
lock
sarl
scas
jge
pop
sti
test
stc
jp
data16
repz
cld
cmp
inc
jecxz
cmp
jp
add
lret
loop
push
popf
cmpsb
or
arpl
mov
mov
mov
mov
mov
sbb
lcall
std
pop
aaa
cld
inc
pop
add
xchg
pop
out
ljmp
pop
cmp
pop
lds
das
movsl
jecxz
and
movsl
imul
cmpsl
dec
addr16
into
jmp
mov
sub
dec
orb
pop
loope
mov
lds
jbe
xor
lahf
movsb
sub
pushf
xchg
repnz
cmp
out
sahf
fnstenv
data16
addr16
aas
ret
mov
lock
pop
outsl
pop
lret
sub
repnz
jg
xchg
rcll
jb
jo
cmp
dec
add
lret
mov
lahf
es
xchg
push
or
into
movb
cld
push
repz
vsqrtpd
jne
push
movsb
test
mov
jne
nop
or
add
mov
movsl
dec
ljmp
cmp
inc
xchg
movsl
push
add
rcrb
iret
pop
call
outsb
dec
or
sbb
and
push
jmp
add
or
iret
lock
lret
dec
mov
and
mov
aas
sbb
pop
sub
push
mov
loopne
divl
cmp
icebp
mov
or
lret
xlat
aaa
lods
hlt
aas
gs
fidivrs
lea
dec
out
clc
in
mov
divb
sbb
mov
popa
adc
mov
mov
ss
xchg
hlt
adc
popf
mov
addr16
xor
adc
int
cli
inc
lock
mov
pcmpgtd
pop
push
mov
pop
repz
fnsave
popa
jp
push
add
jo
push
js
in
int
hlt
and
scas
add
daa
jno
pop
rol
pushf
add
jmp
sub
scas
xchg
xchg
movsb
or
js
movsl
movsl
xor
inc
fucomip
adc
cld
push
xchg
push
subl
je
push
jp
dec
data16
pop
gs
pop
out
scas
cmp
or
jb
test
scas
mov
sbb
ud0
std
or
loop
imul
insl
or
out
xor
test
jecxz
arpl
jo
fisubl
xchg
sub
movsb
xchg
pop
inc
lahf
imul
jmp
push
and
loop
jle
pop
mov
call
in
or
test
xchg
ja
mov
pushf
push
jmp
sar
pop
sub
adc
mov
rcll
out
in
repnz
add
add
ds
in
dec
push
adc
nop
cli
cmp
das
mov
cwtl
into
cmpsl
out
iret
fimull
sub
jne
cs
pop
xchg
loop
dec
int
jle
xchg
cmp
xchg
pop
or
add
sub
sbb
pop
or
aam
pop
scas
jae
and
movsl
cmp
test
or
xchg
ret
and
dec
test
cld
lret
push
data16
xor
pop
cmp
add
movsl
add
mov
pop
aad
mov
cmp
test
sub
dec
ljmp
popa
cmp
pop
lock
mov
shrl
sbb
aad
xor
push
lcall
mov
sbb
cmp
xchg
icebp
je
sbb
xor
or
xlat
ficomps
push
scas
incl
and
jmp
in
cmp
sub
mov
push
arpl
sti
je
inc
std
xor
mov
xor
dec
xor
cmp
jg
nop
out
mov
cmp
mov
nop
adc
mov
mov
roll
nop
mov
and
pop
lea
pop
insl
add
jmp
lret
gs
jp
pop
dec
fiaddl
das
inc
mov
push
mov
add
cld
popf
aas
mov
push
or
daa
cmp
and
pop
or
leave
push
cwtl
incl
push
inc
sub
mov
iret
rcrb
ljmp
xchg
addb
adc
lret
pop
mov
or
pop
sbb
xchg
jge
adc
aam
hlt
pushf
sti
fs
pushf
out
xor
push
xor
mov
cltd
fsubrs
outsl
pop
fmul
outsb
fiaddl
out
jo
ljmp
inc
jae
test
fwait
ja
mov
lock
nop
mov
mov
data16
dec
push
add
outsl
dec
dec
out
incb
cld
push
neg
xchg
mov
or
inc
jo
je
push
cmp
add
scas
shll
cmpsb
cmc
lds
mov
pusha
arpl
sbb
sbb
out
scas
mov
addr16
adc
insb
mov
cmp
das
scas
or
adc
mov
lahf
test
add
out
int
or
cltd
mov
dec
jecxz
out
sarb
in
jge
xchg
std
in
xchg
popf
pop
vcmppd
mov
mov
mov
lcall
cmp
jbe
push
jle
sub
frstor
add
jmp
mov
or
shrb
jns
mov
sahf
inc
add
cmpsl
call
fimull
dec
push
mov
jb
mov
xchg
dec
ret
adc
xchg
add
jl
repnz
jmp
mov
daa
lds
in
fldcw
jne
mov
pop
mov
int
sbbb
pop
push
dec
cmpsb
adc
lods
lret
sbb
mov
mov
jg
addr16
jne
movsb
pop
mov
xchg
icebp
nop
cltd
sarl
mov
jnp
insl
in
imulb
outsb
mov
ljmp
cmp
cwtl
jbe
pop
sub
int3
or
stos
inc
xor
xor
scas
fildll
add
xor
insl
xorl
rcll
xor
and
inc
adc
std
cmp
fs
mov
lds
mov
inc
xchg
push
mov
xchg
pop
push
out
dec
mov
cld
fidivs
pop
or
inc
xchg
or
fstl
stc
dec
cmp
pop
int
pop
nop
inc
or
inc
je
jge
adc
out
xchg
sbb
sub
mov
mov
out
cmp
popa
je
mov
not
pop
sub
sarb
push
bound
mov
call
push
inc
ja
xchg
jg
movsl
in
mov
pop
pop
sbb
lds
sbb
mov
adc
dec
jnp
mov
mov
sub
push
ljmp
add
or
movsb
cmp
mov
xchg
adc
loope
xchg
stos
sub
lods
lock
mov
cmp
sbb
and
inc
dec
repz
adcb
mov
pop
mov
das
fisubl
inc
dec
add
mov
add
or
into
std
adc
add
out
dec
xlat
fnstsw
add
aad
aaa
mov
mov
cmp
mov
mov
pusha
imulb
xor
mov
mov
jl
adc
mov
xor
pop
push
ret
inc
mov
fcomp
mul
dec
cmc
loope
add
outsb
out
rcr
stos
pop
imul
cs
adc
sbb
jle
xchg
stos
mov
out
xchg
xchg
sub
adc
outsb
push
jle
inc
test
pop
mov
fstpl
lds
mov
mov
ret
mov
cli
jo,pt
clc
les
mov
imul
je
outsl
in
push
int3
xchg
or
dec
mov
mov
or
fs
dec
mov
leave
js
mov
push
xchg
jb
mov
jnp
gs
jmp
loopne
adcl
fildll
inc
jns
fs
xor
ja
mov
js
std
sub
clc
notb
loop
pop
ds
das
test
fstpt
scas
divl
subl
push
in
fsubrs
mov
jmp
xor
or
mov
mov
mov
lods
ss
and
and
lahf
cmp
pop
pop
push
jns
dec
jg
or
push
movsl
inc
addb
inc
pop
jmp
add
sub
stos
outsl
ss
ror
movsl
dec
add
subb
push
pop
push
int3
mov
shr
pop
sub
sbb
inc
in
inc
and
cmc
lret
cmp
xor
and
sub
push
cli
dec
pop
aad
rorl
xchg
lret
jo
in
outsb
fwait
cmp
inc
mov
test
push
cmpl
fisubrl
cs
jbe
cmp
dec
sub
lret
je
jne
shrl
iret
ret
xchg
out
jp
or
add
xchg
jbe
xchg
mov
xor
ret
insl
mov
outsb
sbb
push
inc
adc
repz
repz
xor
cmp
mov
or
mov
test
pop
xchg
cmp
add
jbe
bound
mov
push
xor
lods
in
pop
xchg
iret
adcl
test
nop
lods
xchg
push
pusha
add
mov
and
idivl
fs
lods
or
mov
xchg
xchg
push
sti
sbbl
scas
xor
dec
test
pop
jbe
lock
outsb
and
mov
cmp
outsb
loopne
cmp
loopne
fbstp
push
add
and
adc
add
mov
mov
outsb
xchg
sarl
jp
out
cmp
sub
jge
jae
andb
fnstenv
nop
mov
mov
adc
movsl
jecxz
int
mov
int3
adc
outsl
movsb
in
dec
sar
mov
inc
dec
scas
cwtl
push
and
lock
inc
dec
arpl
pop
test
dec
push
lods
lods
mov
imul
arpl
inc
pop
arpl
inc
push
mov
and
int3
movsb
cs
addr16
mov
adc
addr16
jmp
cmpsb
sahf
dec
mov
fs
cmp
fnstsw
mov
loop
mov
adc
and
fnsave
out
add
data16
fwait
out
or
popa
push
rcrb
sar
aaa
ljmp
dec
push
jnp
cmp
sbb
dec
add
call
stc
imul
mov
in
push
and
rolb
mov
push
jmp
bswap
xor
adc
xchg
mov
jo
inc
jle
in
or
jbe
popf
lock
mov
je
cmpsl
xchg
cwtl
lock
push
add
ret
mov
mov
or
mov
cs
imul
adc
adc
imul
mov
or
sub
sbb
fsubl
mov
test
add
test
daa
push
cmpsb
push
pusha
fimuls
gs
shrl
out
sti
sbb
mov
in
add
loop
mov
or
out
lods
jno
jl
loope
add
data16
cltd
inc
jns
mov
ret
mov
or
mov
repnz
sbb
cltd
mov
lock
cltd
rorb
inc
cltd
test
xchg
mov
add
movsl
xchg
pop
daa
lret
cwtl
nop
call
pop
sub
xor
dec
into
mulb
or
lahf
sbb
in
pop
incb
enter
sbb
movd
bound
mov
popa
cmp
pop
mov
pop
scas
enter
fistps
icebp
fisubrs
nop
inc
mov
cmc
loop
mov
iret
jbe
mov
fidivrl
push
aad
mov
enter
rol
int3
addr16
xchg
call
xchg
dec
jno
outsb
in
mov
fmull
mov
out
or
daa
popf
loop
test
enter
hlt
and
sub
inc
nop
xchg
sbbl
mov
call
subb
jne
roll
in
outsl
adc
mov
xchg
push
lods
add
repnz
mov
out
jne
sbb
ja
jns
cmp
rcl
iret
or
ret
pop
clc
stos
sbb
out
add
push
jae
mov
dec
cmp
and
sub
xchg
sbb
push
push
out
push
stc
add
mov
sub
add
mov
mov
push
mov
scas
xor
jae
ja
or
xor
xchg
icebp
push
cs
imul
clc
mov
mov
loop
mov
fsubrs
js
push
leave
lds
sbb
push
cmc
jne
stos
mov
xlat
xor
scas
call
in
and
call
add
sbb
js
push
xchg
mov
loop
fwait
cmp
pop
pop
cltd
pop
xchg
mov
jl
or
popa
jbe
cmp
cmc
mov
jns
in
icebp
fcmovu
imul
je
mov
loop
stc
jbe
lods
mov
and
sbb
das
mov
aad
negl
js
mov
xchg
cmp
inc
test
sub
das
xchg
scas
mov
loope
jle
out
in
or
mov
mov
xchg
rcll
test
outsl
mov
adc
mov
daa
mov
test
sub
stos
xchg
aad
iret
xlat
dec
mov
sti
in
xchg
sbb
lods
push
xlat
addr16
out
dec
das
mov
jp
clc
mov
imul
aas
push
das
pop
outsl
in
or
push
adc
lahf
int3
rclb
mov
mov
scas
lods
inc
das
popa
fxch
ljmp
push
lock
sub
cltd
pop
push
and
stc
repnz
fadds
jmp
and
push
or
xor
lret
fiaddl
push
cmc
addl
je
xchg
sub
adc
or
fiadds
mov
in
lods
sub
stos
mov
inc
fildl
mov
outsl
outsb
xor
mov
pusha
insb
inc
sub
xchg
mov
cli
cwtl
ret
jecxz
or
lock
lds
fmull
mov
in
lods
hlt
push
push
xchg
lret
push
xchg
out
cmovbe
pop
stc
mov
addr16
and
dec
ljmp
dec
iret
push
pop
insl
movsl
out
jae
adc
jecxz
lods
and
sub
nop
cmpsl
mov
shrl
pushf
adc
and
pop
sub
and
jbe
in
mov
inc
xor
jo
add
xor
add
pop
or
adc
fbld
sub
sbb
fldl
push
jle
pushw
xlat
mov
push
jmp
into
add
test
inc
mov
lret
cmpsl
out
rorb
dec
push
in
stos
testb
and
pop
sti
mov
sbb
pushf
or
cmpsl
fs
inc
lock
xchg
ror
mov
imul
imul
xchg
subb
jns
or
lea
inc
mov
mov
cmpsl
out
or
dec
scas
aam
add
in
out
mov
negb
nop
mov
or
arpl
dec
les
pop
call
ja
cwtl
aaa
sub
fcoml
push
xor
repnz
scas
xorl
jp
pop
scas
jb
jno
dec
add
inc
je
cwtl
aaa
loopne
lea
insl
aam
inc
cld
mov
loopne
jbe
jns
popa
xchg
mov
xor
loope
stos
popf
int
call
mov
fwait
cmp
test
inc
scas
xor
inc
jmp
rcll
push
aas
lods
sbb
test
mov
lds
adc
sahf
enter
scas
sbb
or
cmp
xorl
mov
and
dec
inc
mov
xchg
dec
mov
mov
sahf
push
dec
negb
xor
push
enter
fsub
cmp
fsubrl
in
pop
loope
scas
lret
adcb
int
frstor
or
cmp
sahf
mov
dec
xor
xchg
jno
int3
and
or
pop
xor
sbb
add
adc
add
outsl
mov
std
arpl
mov
jns
lcall
add
mov
fisubs
mov
or
into
mov
sbb
cmp
push
sti
sbb
push
jno
movsl
test
and
mov
cmc
mov
push
or
add
mov
fsubr
fmull
mov
sbb
pop
fidivrs
cli
test
into
imul
jne
imul
mov
adc
test
and
jl
push
lds
jnp
aaa
sahf
lret
leave
jns
jecxz
dec
adc
orl
xchg
scas
mov
rcrb
idivb
movd
jle
adc
testl
aaa
jp
in
sub
insb
xor
outsl
ss
lret
aam
inc
comiss
rcrl
jle
xor
lods
lret
pop
enter
add
pop
push
xor
jg
pop
icebp
cmp
xlat
inc
scas
inc
push
push
test
je
fistl
lret
divl
repnz
test
or
xlat
add
dec
and
ss
jb
pop
popa
adc
loop
cmp
sbb
cmp
add
mov
imul
daa
rolb
pushf
movsl
adc
lret
mov
inc
rolb
or
jecxz
sahf
mov
les
push
pop
cmc
pop
int3
pop
leave
inc
inc
repz
mov
subb
call
lock
or
xchg
or
in
leave
mov
push
shr
sbb
jno
adc
fistpll
pop
arpl
lods
jno
sahf
insb
movsb
iret
imul
inc
notl
xlat
xor
xchg
mov
pushf
cmpb
popf
in
aad
fcoml
mov
scas
fwait
xchg
iret
adc
in
cltd
mov
lcall
cltd
and
aad
or
lods
iret
add
mov
clc
nop
iret
mov
ret
mov
cli
fidivrl
and
je
sarl
in
cs
xchg
outsl
arpl
xor
jl
inc
or
jo
push
push
mov
pusha
ret
in
sub
cmp
push
cmpsb
and
into
sub
sbb
pushf
test
xlat
mov
mov
adc
imulb
sahf
inc
add
sub
les
lret
movsl
fcmovu
or
pop
add
mov
sbb
into
mov
out
loop
mov
imul
adc
sbb
inc
pop
ss
cld
inc
mov
xchg
popf
iret
adc
lea
imul
movsl
scas
lcall
inc
xchg
int
inc
aad
ja
mov
arpl
inc
and
mov
cs
negl
push
adc
xchg
int
push
pop
rclb
mov
bswap
jo
aad
inc
pusha
in
ss
xchg
mov
mov
sbb
mov
test
js
mov
sti
clc
inc
cmp
aas
xchg
data16
push
cmpsl
sbb
fmulp
pop
cmp
cwtl
fcmovnb
and
movsl
push
push
scas
sbb
mov
and
pop
cwtl
jp
enter
adc
xor
imul
sbb
xchg
lock
push
push
outsb
aad
andb
rcll
scas
int3
push
ljmp
mov
xor
jno
lock
mov
test
mov
dec
popf
push
add
xor
loop
shlb
sub
sub
leave
stos
ja
fwait
push
in
ficomps
jb
lret
push
les
out
mov
xorb
jge
mov
lods
sub
xor
or
pop
bound
insl
push
jle
stos
pop
push
mov
xchg
cld
jb
divb
ljmp
out
mov
lcall
lcall
pop
jnp
cmp
mov
shl
scas
daa
int3
out
ljmp
gs
sub
ljmp
mov
rorb
adc
in
cli
fadds
es
or
sbb
mov
mov
fnsave
or
lods
lods
lea
adcl
and
jbe
xchg
sarb
loope
adc
loop
mov
jno
mov
mov
enter
pushf
pop
or
sbb
icebp
sbb
xchg
getsec
mov
pop
mov
cmpsl
lcall
imul
aam
push
pop
leave
aad
flds
movsb
or
loop
sbb
and
sub
in
stos
and
test
jnp
pop
orb
mov
xchg
adc
out
xchg
cmp
cwtl
inc
or
jbe
sub
sarl
cmp
nop
mov
jl
clc
ljmp
inc
cmp
pop
int
dec
dec
sub
jg
dec
mov
std
cmp
pusha
lret
push
sbb
bound
lea
dec
jl
adc
push
call
shl
inc
push
sti
loopne,pn
jle
xor
mov
fcomp
imul
imul
jo
inc
aad
shrb
mov
and
inc
mov
scas
std
pop
leave
outsb
and
and
insb
sarl
xor
mov
mov
das
aam
pop
dec
xchg
pop
lret
ret
scas
imul
jnp
fs
mov
es
xchg
add
popf
mov
dec
fs
mov
dec
cltd
xor
xchg
lret
lods
cmp
add
mov
mov
lea
in
jge
pop
pop
inc
jl
add
test
dec
cwtl
test
subl
scas
ficomps
inc
xor
adc
cli
mov
push
push
push
mov
adc
push
roll
stos
jnp
xchg
push
cmpb
testl
push
inc
push
mov
jle
scas
inc
or
into
sbb
aam
movsb
pop
push
mov
lds
fadds
pop
loop
or
fwait
jnp
test
insl
mov
xchg
mov
js
jbe
stos
ds
sbb
mov
or
ret
xchg
sub
sbb
sbb
fs
or
sbb
xchg
jbe
popl
test
dec
sub
insb
mov
les
flds
jge
movsb
xor
mov
cli
lods
shrb
xchg
lea
xchg
aad
je
or
in
test
mov
mov
ret
test
mov
aam
jge
ja
mov
jno
ss
in
movsb
test
xor
mov
jmp
cltd
mov
fldl
sbb
push
fnstsw
xorb
xchg
or
jl,pn
push
imul
loopne
cwtl
inc
pop
loopne
push
xchg
fcompl
mov
mov
pop
cwtl
jg
jge
les
test
mov
push
divps
popf
arpl
std
mov
lea
push
les
jmp
fstpt
std
add
adc
pushf
lret
ret
push
mov
js
jmp
js
aam
sbb
insb
adc
xlat
shl
add
lcall
xchg
pop
out
data16
mov
in
js
mov
xchg
sbb
aas
push
sub
andl
add
xor
in
sbb
xchg
call
insb
fcoms
in
fwait
dec
outsb
fcomps
fsubr
push
scas
lock
jbe
push
mov
push
mov
inc
adc
push
sbb
cmp
push
leave
or
sbb
push
mov
push
scas
insl
fs
jge
fcompl
popf
adc
loop
popa
dec
sbb
cld
or
xchg
inc
jo
stos
jg
popf
hlt
sub
cli
sub
adc
outsb
in
jl
or
inc
shll
ljmp
dec
cmc
pop
push
mov
lods
jns
jns
dec
inc
pop
lahf
xor
sbb
sub
arpl
xlat
push
dec
mov
sub
add
jge
scas
xchg
and
dec
fucomi
data16
pop
lcall
xor
ds
jle
mov
outsb
sbb
mov
mov
push
negl
popa
test
or
in
lahf
call
sbb
mov
sarl
adc
push
icebp
stc
jl
ljmp
bound
mull
icebp
xchg
popw
xchg
inc
in
ret
inc
mull
push
pop
xchg
inc
stc
test
pop
in
imul
mov
or
inc
dec
movsl
ja
addl
in
or
lret
out
cmp
call
out
in
dec
lret
loopne
and
arpl
cmpsb
lcall
push
mov
xchg
rcrb
mov
adc
and
push
add
jb
push
ds
sbbl
ja
jp
loopne
add
repz
stos
push
push
insb
test
lods
or
test
xor
leave
and
mov
out
adc
inc
push
and
std
or
fwait
mov
inc
testb
rorl
jo
mov
es
add
push
jbe
leave
loop
mov
test
fldl
mov
popa
dec
subl
rorb
repz
inc
mov
popf
jge
adc
jle
push
cmp
stos
ret
lret
sub
jne
jge
cld
fadd
mov
aaa
jp
mov
inc
xchg
out
fdivl
stos
stos
fiaddl
and
pop
scas
adc
pop
in
mov
push
xor
or
cmp
rorb
sti
shll
and
jmp
aam
outsb
fsub
movl
stos
mov
mov
out
sub
sbb
push
pop
aad
xor
outsb
pusha
out
stos
enter
or
je
cmp
imul
outsb
xor
mov
lock
jb
pop
call
cmp
test
sti
adc
mov
outsb
or
push
ret
and
or
pop
pushf
inc
inc
dec
and
push
cmp
push
dec
leave
call
adc
push
shll
xchg
sub
jne
inc
cmp
sbb
mov
mov
in
std
add
pop
movsl
jno
mov
addr16
xchg
adc
pop
cld
jp
mov
sbbb
adc
js
push
je
add
or
sbb
nop
mov
mov
clc
test
call
loope
xchg
in
cwtl
push
cmpsb
or
or
mov
jl
or
hlt
push
sub
cmpsb
adc
icebp
mov
rol
mov
cld
icebp
pop
outsb
shll
orb
add
decl
nop
insb
js
aas
xchg
inc
jecxz
in
jne
lock
xor
std
jne
mov
fstps
jnp
add
in
push
add
jge
aaa
pop
adc
in
xchg
mov
inc
jl
jle
xchg
lock
fwait
adc
sti
or
add
jne
jns
pop
nop
out
adc
push
xor
in
mov
ds
sbb
aad
jge
add
xchg
mov
aaa
mov
or
xchg
cld
mov
or
imul
pop
adc
js
push
xor
dec
incb
sub
jl
add
lock
jmp
jbe
xor
and
stos
pop
lods
ficoms
jl
ja
test
sbb
std
adc
and
test
mov
jns
pop
dec
jne
push
lods
sbb
aaa
jg
imull
mov
adc
sub
push
mov
les
sub
mov
dec
jecxz
out
inc
add
jb
orl
lds
loopne
test
sub
add
cmc
adc
and
push
out
shrl
aad
jl
push
push
outsb
js
pop
sbb
xchg
mov
adc
push
xchg
xor
push
loopne
ja
push
sar
inc
or
inc
add
testl
mov
cmp
pop
sahf
ret
imul
cmc
adc
cmp
ljmp
lret
pop
fldt
inc
rcll
xor
pop
cmp
enter
loopne
mov
and
lret
jg
out
sbb
icebp
ljmp
pushf
scas
stc
nop
inc
mov
nop
bnd
in
pop
mov
push
xchg
and
lret
and
inc
and
cld
jmp
les
lea
fsubrl
in
pop
dec
mov
inc
mov
push
sti
int
mov
fwait
adc
xchg
jnp
rsqrtps
sub
dec
roll
leave
in
pop
xor
daa
pop
push
dec
push
div
and
xlat
adc
movsb
pop
into
pop
pop
lahf
and
inc
fs
aaa
mov
lock
ss
xor
stc
cmp
sbb
jo
fcmovbe
adc
adc
xchg
xchg
dec
repz
outsb
cmp
shll
cmpsl
int3
pushf
ds
xchg
jo
movsl
dec
fs
and
mov
mov
movsb
inc
aas
mov
out
sub
aam
xchg
outsl
xchg
imul
pop
in
pop
xor
inc
movsb
inc
enter
mov
mov
add
stos
ret
int3
orl
fstpt
test
ror
cmp
xchg
inc
dec
loopne
fwait
add
clc
cmp
aaa
arpl
push
sbb
shl
jmp
sub
imul
jge
push
enter
mov
jns
icebp
mov
cmpsl
inc
add
pop
mov
and
repz
jns
decl
push
loope
cmp
ret
and
mov
test
mov
pop
adc
add
mov
ljmp
or
loopne
call
xchg
jp
jb
pushw
stos
cltd
sub
add
sarb
xor
xor
lods
push
popf
out
xorl
rcll
test
xchg
lea
hlt
jp
andb
dec
jl
cmp
push
jnp
pushf
scas
jb
inc
int3
jmp
into
jecxz
sarb
push
mov
sarl
push
es
and
push
xchg
jnp
std
cmp
stc
notl
pop
les
mov
ret
jnp
scas
in
pop
add
scas
mov
and
test
jg
and
jg
mov
ljmp
movsl
mov
dec
dec
fsts
jecxz
jmp
std
dec
add
sbb
fldenv
adc
dec
aad
in
and
jecxz
pop
add
and
repz
xchg
adcb
scas
ret
push
jle
daa
fcomip
cmp
daa
int
inc
mov
jb
dec
mov
jmp
cmpsb
in
mov
and
fdiv
xchg
cld
fnstsw
inc
jo
add
mov
bnd
adc
fisttps
or
inc
ret
pusha
out
popf
lods
xor
ss
xlat
out
outsb
int
jle
stc
mov
cli
cmp
xchg
jne
bound
mov
lods
bound
ljmp
mov
pop
inc
or
int3
inc
icebp
loope
mov
xor
inc
and
and
mov
cwtl
cmp
mov
lret
idivl
mov
and
inc
iret
sub
addr16
adc
cmpsb
jg
aad
mov
sub
xorb
jmp
xor
out
loop
dec
fcoms
imul
das
xchg
xor
mov
push
loope
aad
inc
aam
jne
sub
mov
xlat
push
shlb
adc
pop
in
into
mov
sahf
adc
pop
movsb
mov
mov
fucom
cmp
mov
fistpll
jo
into
hlt
jle
mov
fdivrl
fcmovnbe
jne
out
add
sbb
fistpl
ljmp
jp,pn
sti
or
std
cmp
pushf
pushl
jge
jp
cmp
call
cmp
add
push
and
jo
pop
out
jns
and
int
jb
cmp
arpl
jae
cld
fs
out
movsl
sbb
test
scas
insb
cmp
pop
aas
daa
xchg
jo
mov
aas
dec
test
leave
jp
lcall
repnz
xchg
lret
pop
mov
cld
pop
push
repnz
test
jae
dec
jecxz
jne
and
cmp
bound
jnp
jp
pop
and
add
test
mov
jg
xchg
or
or
push
inc
out
aas
or
ret
jp
fisubrs
and
sub
icebp
lahf
or
rclb
xchg
dec
push
ljmp
pop
adc
xchg
push
push
inc
pusha
hlt
sti
push
push
mov
push
xchg
xor
leave
test
clc
scas
cmp
int
lods
test
stos
push
clc
jb
aad
leave
add
sub
cmc
mov
mov
mov
fs
xchg
pop
imul
cmc
pushf
sub
int3
into
adc
lock
dec
cmp
mov
addb
std
lods
je
dec
cwtl
aam
dec
mov
pop
leave
inc
xchg
ljmp
out
push
out
adc
loope
fldt
ret
jge
push
jae
sbb
scas
cmc
gs
aaa
dec
das
sub
in
lods
mov
inc
push
cmp
or
mov
xor
sub
mov
sbb
sub
pushf
xlat
lea
adc
js
stos
lock
aaa
enter
or
mov
pushf
push
inc
ret
adc
fwait
and
adc
xor
dec
jnp
daa
add
jle
inc
xor
xchg
les
data16
es
and
movsl
in
or
cmpsb
mov
mov
jge
dec
lds
sub
xor
add
fldcw
inc
dec
or
ss
dec
or
ja
aaa
clc
pop
pop
dec
cwtl
jge
mov
dec
or
sub
test
popa
adcb
fistps
xorl
sbb
mov
movsb
sub
push
add
incb
xchg
lret
scas
rcl
mov
or
push
xchg
mov
fcoms
sahf
es
insb
sub
out
stc
ss
and
testb
pop
mov
mov
pusha
cs
mov
mov
inc
cli
push
or
ss
test
pop
xchg
mov
and
daa
subl
aaa
movsb
push
in
iret
jb
adc
jo
mov
mov
pop
pop
ror
dec
test
xchg
push
popa
lret
push
cmp
lods
jb
cmpsl
jbe,pn
je
imul
push
push
inc
jg
xchg
sub
aam
dec
and
xchg
ss
sub
data16
cmc
cltd
jecxz
in
test
scas
xchg
jle
sbb
inc
pop
xchg
sbb
dec
sub
dec
jo
jb
pop
mov
cli
push
adc
xor
stos
mov
pop
out
dec
dec
test
xchg
shl
inc
int
repz
fistps
stos
in
imul
inc
nop
js
jbe
pop
inc
jge
mov
popa
inc
add
imul
ljmp
fstps
dec
lcall
les
pop
lea
xor
xor
nop
imul
push
adc
mov
rorl
push
cli
xlat
dec
icebp
movsl
sub
aas
xchg
or
loop
popa
aas
xchg
leave
int
ja
stos
sbbl
and
repnz
fcmovne
or
andb
mov
ret
fsubl
test
sahf
addb
insb
loope
mov
cld
fiaddl
mov
mov
outsl
dec
outsb
mov
xchg
iret
jle
push
pop
pop
xchg
dec
hlt
xchg
shr
ffreep
icebp
pop
out
lock
lea
mov
sbb
xchg
imul
jbe
xchg
ret
lds
cmp
pushf
std
test
add
and
jae
ret
jb
xchg
ja
lahf
cmp
sbb
or
stc
adc
test
popf
fisubrl
sbb
adc
ja
dec
xchg
mov
mov
xor
testl
adc
daa
adc
or
push
fneni(8087
cwtl
mov
jle
in
imul
ud2
sbb
movsl
mov
iret
cld
test
and
push
fidivrl
or
rclb
inc
iret
cltd
loope
inc
pop
mov
and
mov
adc
addr16
out
aam
push
jb
repnz
mov
jnp
call
in
pop
xor
in
stc
adc
push
negl
xor
in
lock
push
lret
dec
add
inc
mov
push
loop
mov
ret
scas
ret
or
stos
iret
inc
and
mov
or
mov
stos
mov
lcall
and
mov
mov
leave
fnstcw
sbb
dec
repz
sbb
shr
mov
in
mov
aaa
mov
or
pop
std
add
shlb
daa
jne
mov
cld
cmp
aaa
scas
sub
sbb
jecxz
push
cmpsl
mov
cmp
inc
flds
cwtl
push
cmc
jmp
dec
jge
jno
repnz
xor
mov
jbe
adc
add
mov
xchg
and
faddl
mov
jno
or
sbb
ret
xchg
push
pop
aam
aas
pop
call
in
sbb
xchg
xchg
add
aas
stc
pop
jbe
adc
sbb
mov
mov
addl
movntps
pop
jle
ds
jno
cmp
inc
jmp
js
out
and
nop
pop
into
push
rdmsr
sarl
fisubrs
sbb
nop
lret
cmpsl
mov
mov
xchg
jns
je
jo
inc
int
mov
lods
or
or
xchg
jbe
inc
jp
jnp
cmp
in
ror
lahf
andb
enter
or
inc
push
push
jne
push
pop
lods
dec
xlat
add
into
inc
cmpsb
arpl
jmp
add
mov
add
mov
cmc
stos
jno
addb
popf
fwait
xchg
mov
pop
xor
orb
and
push
or
repz
and
aam
ds
sbbb
int3
pop
sub
insb
jbe
repz
into
add
incl
add
sbb
into
ja
jns
xor
mov
bt
movsb
pop
inc
test
jle
sub
iret
mov
xchg
in
cmpsl
mov
inc
nop
ret
out
stc
mov
stos
push
cmp
and
icebp
and
insl
loop
push
dec
and
push
scas
mov
ja
jns
sbb
jg
outsb
adc
jae
lock
shl
roll
fistl
daa
cmp
daa
aad
adc
int3
mov
aas
mov
cmp
in
loopne
mov
fmuls
xchg
adc
cli
in
xchg
loop
ljmp
sbb
in
inc
cmp
adc
je
push
lcall
mov
jl
mov
ret
mov
and
scas
xlat
mov
push
xchg
les
sbb
repz
cmpb
lods
pop
mov
shll
xchg
add
push
sarl
inc
pusha
sub
lods
mov
xchg
xchg
xchg
rorl
es
push
imul
inc
enter
ja
dec
fidivrs
loopne
in
aad
cs
insb
sbb
out
inc
jns
lock
mov
pusha
mov
mov
sub
mov
mov
inc
mov
adc
sbb
dec
lock
out
pop
popf
cld
xor
insb
push
lods
jns
nop
mov
stos
cmp
add
cs
popa
into
sub
inc
jle
jle
pushf
imul
pop
jo
inc
out
mov
and
cmp
mov
in
pmulhw
mov
std
sbb
arpl
arpl
jno
rolb
fnstenv
jg
cmp
nop
sahf
stos
ficoms
fmulp
mov
push
roll
or
ficoml
inc
les
jno
shll
cmpsl
jb
test
js
cmc
movsl
mov
xchg
cmp
inc
mov
popa
add
lds
in
pop
mov
sub
and
shlb
jle
movsl
adc
mov
addr16
mov
imul
stos
mov
sbb
addr16
or
enter
mov
ret
fldenv
fs
in
mov
pop
int3
fisubl
xchg
pop
mov
pop
shll
add
aas
fisubrs
testl
sahf
jge
cli
cld
test
mov
out
mov
mov
daa
test
icebp
mov
testl
push
cltd
inc
xorb
fwait
sub
xor
sub
xchg
rclb
enter
es
mov
xor
test
ret
int
sbb
push
addr16
fnstenv
xchg
sarl
xchg
sbb
adc
rcl
push
mov
mov
cmp
stc
jo
pop
inc
pop
sti
int
lea
and
cmp
loopne
jecxz
or
pop
jb
jae
imul
xchg
das
and
pop
scas
mov
or
lret
lods
fsubs
xor
mov
sbb
stc
mov
push
icebp
lcall
jp
pop
mov
ljmp
fstpt
add
ret
lret
or
mov
add
out
or
push
gs
xchg
adcb
cmp
cmp
xchg
mov
and
or
out
sbb
hlt
sub
sub
rclb
inc
test
and
or
ret
mov
cwtl
call
inc
sahf
cltd
or
inc
dec
das
pop
mov
insl
dec
cmp
repnz
lret
xchg
jbe
cli
mov
push
xor
out
cmpsl
imul
cmp
in
rol
dec
xor
sub
xlat
popa
int3
cmpsb
imul
add
pop
pop
lods
mov
dec
and
mov
jae
mov
xchg
das
leave
push
mov
or
imul
xor
jl
mov
stc
aaa
push
sub
inc
aaa
jne
or
sbb
pop
fcoml
cld
jge
sub
dec
test
mov
jb
int
enter
hlt
pushw
pusha
sub
in
mov
sbbl
inc
and
mov
daa
mov
stos
in
add
mov
jle
xchg
cli
out
sti
gs
mov
lods
shl
shlb
notb
out
js
cmp
shl
jae
xor
xchg
out
lahf
jbe
das
inc
and
int
xor
popf
cmpsl
cmpsl
or
adc
scas
shlb
cmp
xchg
daa
dec
nop
adc
cltd
cmp
imul
inc
popa
sub
push
xor
xchg
inc
imulb
addr16
mov
icebp
aas
jo
cld
cli
sbb
jmp
xlat
mov
pushf
pop
notl
push
push
mov
pop
popf
mov
sub
cmp
in
test
outsl
movsb
loop
mov
jl
or
cmp
out
mov
cmp
sbb
mov
and
sub
gs
into
lock
mov
mov
adc
mov
xchg
mov
lret
push
sub
push
jge
xchg
in
std
cmpl
inc
pop
and
cmp
lcall
rol
test
mov
xchg
lea
jbe
sbb
rolb
mov
stos
aaa
pop
xchg
into
mov
mov
push
jle
aaa
in
shll
rcrb
inc
pop
cmovs
and
rolb
scas
sub
jmp
mov
loope
mov
mov
daa
inc
std
inc
xchg
sub
dec
out
das
daa
xlat
cltd
pop
mov
inc
stos
jle
xchg
aas
jns
das
xchg
jmp
es
fstpl
fs
pop
lock
dec
cs
inc
push
cmpl
ret
mov
cs
std
popa
call
push
adc
push
cli
jo
xor
pop
insl
repnz
das
adcb
add
hlt
pushf
jp
cli
enter
pop
xchg
fdivrp
imul
sub
arpl
pop
movsb
arpl
ret
shr
testl
mov
mov
adc
jl
aas
shlb
pop
lea
loopne
sbb
mov
lret
xchg
rorb
iret
cmp
adc
sbb
test
popf
xor
jno
hlt
ds
push
iret
fsubl
mov
pop
shl
add
pop
rorb
xorb
rorl
pop
cmp
or
roll
nop
mov
repnz
or
test
lret
mov
mov
pop
jnp
xchg
cmpsb
add
call
xor
xor
in
iret
dec
push
and
sub
or
sbb
ret
in
mov
sub
mov
or
shlb
xlat
push
push
outsb
pop
lods
test
lcall
or
in
lock
jmp
int3
dec
mov
xchg
mov
mov
ficoms
dec
std
fisubl
inc
mov
insb
add
repz
int
xor
xchg
or
mov
dec
dec
arpl
ret
add
jne
sbb
out
insb
pop
jecxz
subb
dec
ss
mov
push
mov
out
push
cmp
fdivr
push
movsb
bswap
push
push
push
cmp
jo
cmp
jne
cltd
pop
loopne
mov
mov
mov
sbb
xchg
frstor
rclb
jo
lcall
inc
mov
out
push
push
xacquire
add
stos
mov
shll
cwtl
xchg
xorl
and
leave
lret
imul
sub
cwtl
add
jge
fistpl
movsb
pop
clc
and
or
xchg
jb
sub
enter
mov
clc
rclb
push
fiadds
test
leave
leave
pusha
ljmp
andl
lret
dec
pop
and
lcall
pop
lret
mov
dec
xchg
and
lods
in
fldcw
adc
mov
movsb
mov
int3
adc
pusha
int3
leave
adc
push
decb
inc
jl
sub
push
dec
int3
jmp
pop
adcl
mov
mov
jo
dec
sbb
int
and
push
inc
arpl
subb
sub
jl
push
aaa
mov
lret
pushf
repnz
fisttpl
push
lahf
lcall
mov
aam
subb
sti
pop
jnp
mov
and
pop
dec
sbb
push
xor
dec
mov
sub
arpl
mov
movsl
test
pop
bound
or
xchg
mov
push
sahf
jecxz
push
dec
or
jae
and
push
hlt
cmp
rcr
in
lods
xchg
cld
dec
mov
mov
scas
push
ret
ds
add
call
rcll
pop
dec
ficoml
in
dec
fwait
mov
pop
movsb
or
mov
fmul
popf
mov
dec
jle
popa
shld
fstpl
sbb
pop
pop
mov
push
pop
ffree
enter
jb
lods
lcall
dec
mov
hlt
mov
outsb
popf
inc
fldenv
lods
sti
push
fidivrl
fstps
dec
push
pop
daa
jge
fcmovnu
and
outsl
adc
sub
aas
pop
addr16
fistpl
inc
jnp
push
hlt
cltd
xor
xchg
add
inc
rorb
cmp
mov
add
ss
add
cwtl
xor
dec
add
push
inc
xchg
mov
xchg
pop
test
dec
je
insb
push
cmp
xchg
mov
xor
popf
cltd
das
pushf
push
stos
mov
test
push
test
mov
dec
cld
fwait
mov
jg
iret
xchg
scas
xor
pop
stos
inc
les
hlt
aad
push
bound
sahf
mov
fs
xor
test
inc
enter
out
xchg
int3
mov
repz
xchg
dec
inc
jmp
ds
or
add
lret
xor
movsl
push
jnp
cs
dec
lahf
xor
sbb
cltd
dec
adc
fisttpll
inc
add
scas
mov
adc
std
cmp
test
jp
jmp
daa
add
mov
fstpl
data16
push
push
daa
lods
divb
mov
nop
dec
orb
in
and
mov
rcll
dec
stc
in
bound
fwait
mov
cs
cs
or
mov
iret
or
jp
or
jp
push
push
fiaddl
cmpsl
lds
push
xchg
das
dec
aad
fnsave
or
xchg
cmp
jb
fsub
enter
jecxz
movsl
lret
push
js
in
xchg
aam
mov
clc
loope
sbb
sub
std
mov
out
stos
lret
push
imul
fdivr
inc
add
out
mov
sub
and
aas
sbb
pop
shl
nop
daa
ret
cmp
test
lahf
sub
enter
jmp
repnz
dec
outsb
lods
xorl
inc
pop
dec
lods
pop
in
adc
push
xchg
xor
sbb
jo
jecxz
inc
stc
push
fldcw
xchg
push
xchg
in
lahf
dec
push
out
xchg
fcmovnu
lahf
imulb
pushf
or
or
pushf
cld
jnp
push
repz
xchg
lock
mov
push
sahf
xor
xlat
adc
stc
mov
push
pop
cwtl
sbb
lea
sti
out
xor
mov
adc
lods
ret
jmp
dec
scas
and
pop
insl
test
lods
cltd
daa
mov
sbb
test
sub
sub
inc
xchg
jg
dec
adc
pop
mov
dec
ficompl
and
out
mov
mov
push
aaa
mov
imul
js
dec
das
jnp
push
and
push
aad
mov
jle
movsb
sub
push
lods
and
stos
out
movsl
jo
pusha
ret
dec
mov
and
sbb
push
cmp
in
pop
into
fildll
lahf
pushf
adc
clc
data16
sub
ficompl
sbb
pop
or
dec
push
push
cltd
add
mov
lcall
das
dec
fimuls
jae
adc
mov
cmp
arpl
mov
dec
and
dec
cwtl
adc
mov
mov
push
push
adc
sbb
pop
in
jae
shll
leave
dec
cmp
cmp
xor
addr16
in
pop
push
cmp
pop
cmp
adc
mov
mov
mov
dec
imul
mov
jo
xor
shlb
xchg
popf
lods
aam
aad
xchg
outsb
pop
dec
imul
mov
sbb
push
add
fsubr
repnz
pop
adc
push
and
vcvtdq2ps
sub
pop
ljmp
outsb
addb
adc
cs
leave
jg
int
leave
pop
in
dec
in
pop
sbb
imul
push
repnz
push
and
xchg
test
cmp
out
push
mov
jmp
cs
idiv
cmp
cld
stc
adc
cmp
mov
out
jl
mov
sysexit
shl
xor
and
push
cltd
lea
lock
and
cmp
and
jl
movsb
adc
cmp
into
aad
xlat
add
movl
push
mov
fucom
jb
and
sbb
mov
imulb
sbbl
cmpsl
sub
cmpsl
jmp
call
sub
pop
je
mov
dec
ds
fs
mov
data16
je
jnp
data16
js
nop
ljmp
adcl
sbb
jo
mov
inc
test
sub
inc
pop
adc
mov
xor
js
das
addb
int
divl
lea
fnstcw
lds
dec
dec
sbb
pop
sub
insl
ret
jl
xchg
mov
inc
mov
lahf
push
dec
xor
and
jl
lcall
pop
inc
xor
mov
or
mov
xchg
lds
gs
mov
lock
cmp
lds
lret
test
in
pop
lahf
retw
rcll
and
pusha
and
push
mov
or
test
outsb
and
push
lds
ret
mov
loop
je
mov
mov
mov
sub
adc
loopne
dec
cmp
add
iret
and
cmc
sbb
or
repnz
jp
push
or
cmp
les
popa
addl
gs
jmp
jmp
mov
int3
jecxz
test
enter
sub
add
pop
pop
popa
inc
push
xor
mov
mov
dec
mov
rcrl
out
push
xchg
mov
add
movsb
dec
mov
imulb
cmp
dec
clc
rorb
icebp
je
and
xchg
inc
int3
scas
sub
shl
sbb
scas
cs
inc
and
mov
sbb
js
pop
push
adc
push
mov
jmp
ljmp
pop
adc
mov
dec
scas
mov
adc
ljmp
stos
scas
cmp
stos
imul
sbb
dec
add
xorb
stos
push
into
and
jp
in
stc
xor
xchg
adcl
out
xor
lods
shrl
scas
pushf
in
lahf
outsb
jns
iret
ljmp
fwait
push
icebp
jl
cmp
leave
adc
lcall
lret
push
xchg
ror
dec
lret
dec
inc
add
add
popa
daa
shl
mov
ljmp
mov
ja
das
sub
and
cld
ror
or
cmp
ss
or
jecxz
pop
push
mov
sbb
xchg
movsl
cld
sub
add
mov
mov
or
pop
out
jns
fsts
jb
mov
ljmp
sbb
and
xchg
outsb
repnz
jmp
and
out
sub
int
xor
sub
js
dec
mov
fwait
inc
or
test
ds
imul
insl
mov
arpl
test
in
mov
cmp
loopne
sbb
or
mov
aam
or
arpl
jnp
arpl
in
inc
jb
dec
out
dec
lock
jno
lods
lahf
mov
xchg
jmp
test
xor
hlt
dec
shl
cmc
or
xor
roll
das
fst
fidivrl
xor
or
jecxz
test
jne,pt
lods
popf
mov
cwtl
imul
stc
dec
add
test
cs
insl
cmc
mov
addb
stos
movsb
pop
inc
pop
mov
mov
mov
mov
push
sub
push
ror
mov
push
fwait
and
ja
mov
rol
cmpsb
xchg
mov
xchg
pop
jge
jne
xor
dec
inc
sub
loope
ret
mov
pop
js
repz
xor
xchg
lods
cmpsb
push
gs
outsl
or
fimull
inc
add
xchg
mov
or
movl
mov
push
push
gs
ficompl
pop
mov
pop
addr16
mov
in
inc
sub
fistpll
mov
in
std
fsubrl
add
mov
orl
ret
hlt
notb
repnz
test
dec
jns
lea
cmp
xchg
dec
shl
repz
hlt
push
mov
out
jg
add
bound
add
and
lock
int3
adc
daa
loop
cmp
cmp
outsb
shlb
and
jle
js
out
cmpsl
mov
xor
and
pop
loope
dec
mov
cmp
loope
cmp
jb
push
jae
sarl
inc
movsl
decb
mov
lods
cmp
xor
jns
cmp
jns
pop
adc
add
inc
aaa
filds
aam
cmc
mov
dec
lods
stos
adc
xchg
aaa
push
clc
lea
jle
fdivrs
adc
dec
bnd
inc
test
push
and
addr16
xor
and
ret
std
xor
dec
xrelease
xchg
int
loope
cmpb
out
fdivr
fld1
gs
inc
es
sti
jmp
js
mov
pop
ja
mov
xor
and
es
xchg
rorl
xorb
dec
imul
lods
idivl
jae
aam
cs
out
jg
or
stc
data16
push
push
clc
repnz
push
pop
pop
mov
or
sub
dec
xchg
sbb
xor
int
adc
imul
aas
jae
outsb
cmp
push
fisubrl
jb
loopne
sub
scas
pop
inc
mov
in
lea
or
pop
pop
int
lods
ss
sbb
jo
int
and
or
xor
xchg
loopne
xchg
or
xor
add
fstl
pop
dec
inc
adc
or
test
sbb
sub
lret
shlb
clc
aad
mov
xchg
stos
sbb
lea
inc
push
dec
out
aad
sbb
ja
push
push
xor
and
cwtl
repz
mov
adc
jg
inc
dec
xchg
jl
out
push
scas
mov
push
mov
dec
iret
mov
leave
dec
loopne
push
ret
rcr
xor
mov
xor
inc
pop
sahf
fwait
test
shlb
loop
jno
push
frstor
pop
cmp
std
repz
jbe
inc
jp
jb
rclb
jge
push
inc
add
inc
dec
push
cmp
fsub
in
xor
pushf
add
mov
movsb
stc
lods
scas
fs
pop
inc
in
fnstenv
pop
pushl
out
leave
sbb
test
mov
and
jge
ja
cs
aas
call
sub
fs
fcoml
lock
and
fsts
xchg
insb
les
imul
imul
add
repnz
adc
push
xchg
aad
or
push
xor
out
leave
pop
jl
adc
cwtl
jnp
and
and
arpl
enter
ficoml
clc
and
mov
sbb
inc
idiv
push
cmp
ret
clc
loope
sbb
sub
fwait
loopne
or
test
int
sbb
mov
int3
xor
movl
js
adc
repz
pop
jmp
push
cmc
pop
mov
dec
mov
adc
cmp
scas
ret
into
add
sbb
jae
out
jns
adc
push
lds
add
rorl
sub
xchg
lret
in
push
scas
xor
lock
fldcw
notl
test
xor
and
fwait
aas
cmp
cmp
lcall
iret
outsb
sub
mov
mov
pop
aaa
jb
loopne
inc
ficoms
popa
mov
imul
or
mov
fld
sbb
and
cmc
movl
jb
nop
adc
in
loop
roll
mov
adc
adc
sub
sub
fadds
jno
cmp
lock
xor
dec
mov
stc
insb
flds
mov
lret
sbb
and
adc
js
popf
xor
mov
hlt
cmp
dec
or
fisubl
scas
push
in
sub
xchg
test
cs
add
rcrb
dec
push
xchg
xor
jle
cmc
xor
jmp
lea
mov
das
fdivr
in
ret
inc
in
adc
imul
das
leave
cmpsl
jecxz
inc
ljmp
xchg
jge
adc
arpl
dec
cmp
daa
cli
mov
xchg
pop
adc
stos
or
outsl
xor
addl
mov
cmp
adc
lcall
rorb
notb
push
inc
ljmp
xchg
mull
mov
or
mov
add
ds
inc
sbb
pop
leave
adc
cmpsl
nop
inc
fidivrs
cmp
push
notl
mov
clc
fcomps
pop
xor
dec
adc
and
jbe
mov
out
das
jne
add
jmp
mov
lret
fimull
cltd
xor
fnstsw
imul
mull
sbb
xorb
dec
imul
lea
and
stos
int3
loopne
adc
mov
repnz
in
dec
or
sbb
pushf
jmp
jp
hlt
push
xchg
les
mov
sti
loope
cmc
xchg
mov
xor
in
jno
ret
mov
scas
ds
inc
push
mov
add
popa
out
sbb
cmp
lret
shll
negl
and
cmp
xchg
sahf
rep
mov
mov
test
cmp
fcoms
js
sbb
mov
mov
cld
nop
mov
push
mov
mov
hlt
lea
cs
sbb
mov
jp
xor
scas
fcomps
js
dec
xchg
cld
imul
bound
faddp
mov
lds
mov
inc
call
cmc
add
js
mov
inc
cmp
or
push
push
mov
rolb
sub
mov
es
xchg
loopne
or
shll
sti
lret
std
push
mov
je
mov
adc
adc
das
mov
call
lret
add
or
cmc
ret
sub
inc
rcl
pop
xor
clc
cmp
sub
pop
js
inc
and
dec
andb
adc
subb
push
inc
lret
ret
lahf
test
aas
ljmp
cmc
adc
mov
fistpll
pop
call
add
xor
cwtl
and
les
je
out
cs
sbb
iret
cmp
idivl
cltd
pushf
mov
push
push
arpl
fists
pop
out
jle
fistpl
lods
push
and
cmp
loopne
add
cmpsl
sub
aam
adc
idivb
adc
cmp
mov
adcb
xchg
mov
decb
add
and
icebp
jno
test
cmp
testb
testb
push
cmp
push
dec
xchg
xchg
or
xchg
sbb
mov
clc
mov
sub
leave
xor
fstl
arpl
enter
or
pop
daa
push
inc
dec
cmp
std
cmpxchg8b
lret
sub
and
sub
test
push
mov
mull
push
movsl
fildll
fcmovnbe
xchg
leave
sbb
xchg
xchg
shrb
loop
iret
cmp
cmp
sub
lahf
stos
repz
jecxz
xlat
lahf
pop
fs
mov
inc
ss
imul
dec
push
repz
dec
int
jecxz
push
pushf
adc
lea
push
pop
iret
mov
mov
add
dec
cmp
mov
sub
enter
mov
adc
stc
es
test
mov
cltd
in
sbb
out
or
sahf
mov
jns
daa
and
dec
lret
cmp
inc
fwait
jno
stos
cmp
mov
loope
or
hlt
xor
ja
inc
test
sbb
stc
mov
push
mov
shll
jl
aam
pop
nop
add
cmp
inc
fsubrl
jp
inc
in
dec
mov
pop
iret
rolb
loope
bound
outsl
jo
cmp
cmp
dec
in
add
aam
cmp
jbe
sbb
xor
pop
data16
xlat
lcall
scas
inc
mov
inc
sbb
fldenv
sub
sbb
jp
outsb
jns
das
xchg
sub
mov
push
mov
mov
scas
ja
push
negl
arpl
mov
test
sahf
bound
xchg
mov
pop
mov
loopne
stc
filds
jb
lock
xchg
cs
fstps
sub
shl
push
cs
add
test
and
cmp
in
pushf
fbstp
jae
es
mov
and
xchg
rcr
shlb
xor
push
mov
jnp
cltd
jecxz
mov
or
fiaddl
sbb
fs
mov
jmp
xor
push
dec
pop
jae
insb
addl
clc
adc
jge
sub
adc
test
mov
mov
pop
cld
mov
cs
or
xor
vmaxps
mov
push
mov
cwtl
sub
jno
fcoms
std
sti
push
mov
das
test
popf
sub
pop
jnp
dec
loop
lcall
push
test
jmp
push
and
pusha
loop
scas
sbb
cld
mov
ret
fsubrl
lods
icebp
push
push
popf
push
jb
icebp
iret
aam
xlat
rorb
xor
cwtl
cs
nop
daa
aad
xchg
cmp
popa
dec
pop
and
adcb
out
stc
sbbl
dec
mov
inc
or
mov
test
aas
xor
xor
pop
mov
mov
mov
push
lods
nop
inc
repnz
xor
shlb
jle
arpl
sbb
fisttpll
setne
cmp
call
dec
les
jae
sub
mov
and
cmp
in
arpl
iret
fisttpll
jne
jl
mul
cmp
xchg
mov
cmp
push
imul
jmp
mov
push
jo
dec
cmp
pushf
add
xor
lods
add
aaa
adc
std
imul
xchg
scas
mov
mov
add
pop
sub
cmp
sti
loopne
mov
mov
mov
xlat
cmp
movsl
scas
adc
lods
out
outsl
in
sub
jmp
xchg
das
inc
pusha
lea
push
in
xchg
mov
clc
les
dec
gs
jge
pop
or
jg
in
inc
fs
jnp
add
xor
xchg
pop
mov
jmp
mov
sub
aad
fnstenv
shll
dec
dec
sbb
push
fxch
cmpsb
mov
pop
test
fldl
dec
jb,pn
sub
sub
movsl
mov
or
jne
mov
mov
dec
mov
inc
es
fs
push
jecxz
punpcklwd
in
jns
gs
mov
or
sub
or
pop
sbb
push
cmp
gs
shll
push
out
out
xchg
imul
dec
mov
rorl
and
cmpsb
arpl
adc
mov
mov
sbb
mov
push
add
or
add
ret
icebp
sub
jecxz
addb
sub
insb
lea
sahf
out
jle
adc
mov
pop
mov
mov
aam
test
xor
imull
pop
mov
add
insb
cmpsl
dec
lcall
sbb
lahf
test
jbe
pop
mov
push
int3
stos
insb
push
jecxz
adc
xchg
mov
fwait
adc
jmp
fwait
mov
inc
test
cmpsb
ds
xor
mov
popa
xchg
mov
mov
jle
pop
in
into
shrl
or
js
cmp
sbb
xor
xlat
adc
leave
sub
repz
and
mov
jnp
or
sbb
push
mov
shr
xor
mov
mov
or
cmpsl
fnstsw
sbb
and
enter
loopne
fiadds
repnz
mov
push
add
xchg
cmpsl
cli
mov
fsts
stos
adc
sbb
fdivr
jne
dec
ret
stos
scas
jmp
pop
or
xchg
lea
ljmp
or
aam
sbb
fidivrs
inc
sbb
mov
inc
sahf
pcmpgtw
cmpsb
and
test
cs
mov
aam
jl
sahf
adc
cld
in
aaa
lahf
nop
or
into
in
mov
fdivrs
dec
pop
mov
mov
xor
test
stos
jle
mov
mov
jg
clc
lods
mov
add
mov
loope
dec
inc
pop
xor
jo
jge
or
xchg
rorl
mov
scas
jp
aam
sahf
mov
bound
push
test
ss
and
push
out
mov
lcall
push
repz
sub
pop
clc
lret
xchg
push
pop
mov
repnz
lea
idiv
scas
cli
dec
sahf
sub
or
fwait
sbb
cmp
and
int3
sbbb
dec
orb
push
adc
je
push
mov
out
sub
xchg
rcll
or
inc
inc
adc
jno
loopne
jge
lret
xchg
cmc
sbb
cmp
jg
hlt
jb
cmp
scas
out
sbb
movsb
insb
pop
pop
xchg
and
adc
push
ret
mov
xor
daa
shll
and
jbe
in
sahf
mov
sub
je
add
xlat
stc
pop
insb
sti
call
adc
ret
test
pop
test
and
mov
enter
movb
inc
sbb
mov
nop
jl
cmp
add
and
mov
push
mov
mov
push
sahf
sbb
test
rolb
inc
adc
push
mov
loope
jp
jbe
in
int
dec
and
es
jge
insl
and
hlt
mov
test
cld
sub
push
dec
adc
sub
divl
xchg
loope
pop
loopne
sti
and
dec
stos
jbe
gs
xchg
jecxz
cwtl
push
sti
js
mov
xor
sub
ret
dec
cmp
shrl
shufps
inc
cmp
mov
movsl
pop
cmpsl
cmpsb
aam
pop
xor
xchg
movsb
popf
add
jg
test
xchg
adc
pusha
inc
enter
and
mov
out
int
fsub
jb
push
shll
jge
xor
gs
mov
div
and
mov
inc
xchg
test
pop
jb
out
mov
leave
and
cmp
dec
push
push
sbb
mov
mov
adc
inc
lret
cmp
paddb
ljmp
imul
mov
pop
xchg
sub
orb
test
or
inc
jbe
mov
test
add
sub
xor
clc
push
cmp
sub
ret
fmuls
xchg
or
movl
pop
sbb
roll
pop
sbb
mov
sub
rcr
int
stos
or
adcl
ljmp
dec
cmp
mov
sbb
xchg
xorl
stos
in
or
add
std
sbbl
cltd
pop
aad
fidivs
lds
push
repnz
leave
shr
dec
inc
pop
les
adc
rorb
or
cmpsb
jne
xor
imul
out
push
or
and
ds
sti
xchg
add
mov
xchg
and
into
arpl
adcl
mov
test
sub
fsts
fwait
pop
inc
bound
cs
cmp
adc
mov
lods
sti
outsb
jns
and
lret
push
loope
push
add
jecxz,pn
xchg
adc
cmp
aas
das
sbb
ficoml
lret
adc
jns
mov
rcrl
cmp
push
test
mov
push
iret
mov
shll
push
push
popf
push
mov
mov
mov
add
leave
cli
dec
nop
add
jmp
stc
inc
pushf
bound
jg
and
pop
testl
lea
and
int3
adc
cmc
add
pop
xchg
adc
scas
xor
rorl
jne
jmp
test
push
call
jns
jecxz
jmp
pop
xchg
nop
sub
dec
aad
push
int3
movsb
push
push
jne
mov
sub
mov
stos
push
nop
decb
push
subb
mov
dec
lods
pop
jle
add
std
mov
shrl
imul
call
and
dec
fwait
in
sbb
add
arpl
xor
int
xor
pop
inc
andb
add
in
xchg
cmp
xchg
xor
sbb
lods
cmc
stc
daa
bound
cltd
inc
jmp
mov
add
jae
daa
sbb
jp
mov
inc
mov
sbb
cli
xor
int3
push
xabort
push
mov
mov
pop
push
and
das
pop
mov
loope
add
xor
add
mov
or
mov
cmp
daa
cld
int
mov
pop
std
or
mov
jge
pop
push
lahf
bound
out
repnz
mov
ljmp
ss
jo
push
mov
int
ret
ret
jo
aas
fiaddl
adc
hlt
shlb
mov
mov
stos
out
stc
sahf
in
lret
ret
pop
cmpsb
nop
jg
sarl
in
aaa
or
pop
fnstsw
mov
es
xchg
sbb
aas
jbe
cmc
cld
pop
add
xchg
in
lock
fwait
out
jno
xchg
js
inc
jno
jne
dec
das
ret
aaa
ljmp
jns
insb
xchg
paddusw
dec
push
push
push
popf
mov
and
out
repz
popa
popf
push
push
jae
imul
ds
cmp
jp
add
xor
cmpb
jmp
out
mov
imull
mov
xlat
push
xor
lea
add
jl
mov
shl
aas
hlt
test
icebp
dec
and
cmpsb
xor
push
pop
push
mov
das
mov
fldenv
push
arpl
mov
in
pop
sbb
xchg
and
int
enter
lds
pop
leave
neg
enter
push
cwtl
add
shr
fsubs
pop
xor
xor
lds
push
pop
adc
mov
xchg
and
adc
inc
fdivs
push
testb
push
xor
bound
mov
mov
loope
popf
shrl
push
ja
arpl
popf
jl
out
cmpsb
mov
mov
xor
lret
out
xorb
rorb
jg
xchg
pushl
aad
cmp
ja
xchg
lret
jle
and
out
inc
ficoml
insb
syscall
mov
or
popf
pusha
mov
jge
test
ficompl
daa
movsl
dec
sbb
js
pop
addr16
ret
das
mov
imul
insb
cmp
mov
int3
jmp
sub
ror
adc
scas
movsb
int
pop
gs
in
scas
aaa
cmp
sbb
cmp
sub
aam
cli
lcall
les
dec
sbb
es
xor
mov
dec
popa
mov
pop
iret
pop
pop
es
dec
push
ret
fmuls
mov
lods
sbb
push
outsb
enter
pop
jb
popf
fwait
jo
rcrb
adc
mov
cli
mov
push
or
roll
and
dec
and
hlt
or
hlt
add
repz
and
pop
xor
and
jle
ss
sbb
movsl
fsubrp
mov
fwait
mov
fucom
repz
lret
cltd
arpl
stos
xor
cmp
ret
int3
test
pop
test
xor
dec
xor
push
bnd
lods
cmp
pop
hlt
add
push
jmp
ror
out
jno
out
hlt
popf
or
jo
add
psubd
mov
rcrb
test
repz
dec
frstor
inc
xchg
jmp
loopne
jl
mov
mov
push
xor
sti
push
popa
filds
stos
sbb
lds
fs
fwait
adc
pop
arpl
adc
in
lods
add
aad
inc
fs
jle
std
push
fs
mov
mov
mov
jmp
stos
sub
push
js
jp
sbb
push
xor
or
push
xor
push
and
js
push
lcall
push
jmp
ja
sbb
push
pushaw
adc
aad
or
pop
adc
testl
cmc
cs
sub
or
add
pop
cld
add
inc
ficomps
and
jp
add
neg
dec
fbstp
or
xor
pusha
popf
cmc
pop
cmp
xor
aad
jns
imul
mov
mov
mov
mov
mov
call
fldl
stc
xor
jmp
xchg
push
sahf
std
loop
imul
loopne
outsl
addb
push
jg
jge
jnp
mov
fsub
mov
pushf
inc
cld
pop
ljmp
popf
icebp
into
shrl
push
mov
idivl
sub
cld
ret
push
cmc
jne
xchg
cs
push
pop
mov
loopne,pn
xchg
aad
push
into
jecxz
pop
addr16
dec
fisubrl
pop
adc
or
cli
inc
in
mov
bound
mov
flds
cmp
cld
cmp
out
loop
add
repnz
add
into
sub
and
pop
imul
insl
clc
adc
ss
das
sbb
cmp
xorb
cld
mov
and
mov
out
mov
pop
fnstsw
xor
mov
pop
xor
rcl
jle
dec
cwtl
movsl
sbb
mov
ret
inc
outsl
push
xor
xor
pop
xchg
mov
and
cmp
push
mov
adc
mov
and
gs
cmp
enter
jnp
notb
daa
ds
ret
and
push
mov
call
xchg
sbb
jmp
or
jecxz
pop
xchg
test
in
daa
mov
xchg
mov
fists
sub
faddp
mov
jne
std
jo
in
mov
stos
jnp
mov
mov
mov
in
mov
sub
jg
fisubrs
mov
push
icebp
pop
fidivl
js
jb
push
mov
fldt
add
inc
les
sbb
aas
pusha
icebp
add
xchg
push
jno
jle
mov
adc
cmp
out
lret
lods
inc
clc
and
cwtl
jg
add
pop
pop
or
mov
lret
cmp
fisttps
imull
or
push
jb
xchg
imulb
and
call
add
fcoml
sub
ffree
das
data16
in
test
add
aad
and
shll
xchg
jp
lds
or
add
psraw
mov
mulb
pop
mov
jle
dec
inc
js
aam
jbe
pop
xchg
xchg
in
outsb
pushf
xor
enter
dec
or
ret
mov
mov
pop
push
lock
clc
sub
pop
aad
sahf
pusha
popa
xor
push
jns
xchg
popf
push
xor
int
in
imul
cmc
setne
test
sub
daa
xchg
insb
mov
sub
popa
dec
mov
jle
lcall
cmp
loop
addr16
gs
iret
lock
sbb
fidivs
push
rclb
or
sbb
mov
repnz
cmp
jge
fdivl
inc
jae
inc
ja
test
mov
xlat
ret
inc
std
ret
dec
ss
test
jnp
adc
fcompl
xchg
inc
add
sbb
das
or
rolb
or
mov
inc
or
and
jns
mov
and
xor
lds
jnp
push
push
mov
cltd
push
arpl
cs
int3
ja
in
iret
cwtl
fidivs
sub
or
xchg
inc
aam
inc
rcrl
pop
emms
and
add
loop
mul
pop
out
xchg
cmp
aas
pusha
xor
mov
cmp
push
hlt
push
xor
test
sbb
add
sub
sbb
dec
xor
push
add
enter
adc
jle
sub
cli
clc
popa
insl
mov
pusha
mov
mov
mov
lcall
lahf
xchg
cltd
mov
dec
add
jno
push
or
shlb
sbb
int
jge
xlat
addl
cmp
pop
loopne
call
out
cli
scas
addr16
divl
into
pop
jle
sti
push
jno
aaa
test
lods
push
and
ljmp
arpl
movsl
imul
scas
test
repz
xor
adc
mov
loop
popa
push
int3
adc
mov
iret
and
call
jp
arpl
lahf
testb
mov
imul
lds
imul
sahf
inc
mov
mov
ds
enter
xor
mov
xor
jg
lahf
jns
mov
daa
imul
xchg
lret
cwtl
ret
and
loop
xor
and
std
add
mov
fimuls
loopne
jmp
cmc
adc
xchg
dec
out
sub
jnp
mov
jg
xchg
lock
divl
adc
inc
cltd
lods
dec
in
and
out
and
adc
rcrb
inc
outsb
aad
icebp
mov
adc
clc
rcl
push
cs
nop
imul
adc
or
outsl
rorb
test
in
sub
sub
pop
int3
fdivrs
decl
mov
jns
scas
dec
or
adc
jl
cs
cli
sarb
mov
pop
mov
sbb
leave
stc
jg
outsl
sbbl
jge
test
lock
out
xchg
into
mov
jp
sub
std
outsl
imul
add
inc
or
and
mov
jl
repz
lods
sti
or
inc
sub
repz
enter
rcrl
es
lret
outsl
in
fists
inc
jne
dec
add
das
dec
pop
cmc
jo
popa
jne
mov
js
inc
pop
stos
xor
xor
rcrb
mov
pop
data16
or
inc
popa
push
test
das
sub
addr16
je
in
cld
jb
shlb
flds
cli
push
jmp
fdivrl
mov
inc
push
jae
cmp
pop
dec
dec
out
mov
leave
push
loopne
push
pop
leave
xor
pop
mov
popf
mov
scas
cmp
mov
shr
js
mov
adc
lret
fincstp
jp
mov
sub
inc
or
movsl
mov
cmp
pop
jge
cmp
sub
push
int3
int3
lahf
sahf
in
push
dec
mov
out
mull
cli
andl
push
cmp
out
aaa
daa
xchg
repz
out
mov
int3
jae
xchg
xchg
jbe
hlt
pop
jno
outsl
insl
daa
ror
cmp
repnz
ret
cld
xor
loopne
xor
and
adcl
mov
pop
push
dec
jo
fsubl
mov
faddl
imul
mov
insl
cmp
xchg
rcrb
mov
push
jns
mov
ret
out
cmp
pusha
loop
xchg
jle
mov
cmp
ljmp
sub
int
jl
ret
cmpsb
test
sbb
mov
pop
or
jmp
int3
push
jp
sub
scas
xor
cmpsb
add
mov
nop
inc
lret
sub
mov
or
and
jno
test
lods
movsb
testl
movaps
rorb
cmc
int
sbb
jb
sub
or
sbb
clc
add
sub
pusha
adc
mov
outsb
xchg
test
add
add
test
lds
push
jp
mov
icebp
loop
daa
lods
lds
mov
cwtl
cltd
pushl
jno
inc
pop
and
jge
mov
and
lahf
stos
mov
lahf
fs
inc
lret
lds
lcall
xchg
sub
mov
movl
jmp
insl
or
dec
or
and
cs
inc
mov
mov
mul
testl
int
leave
sbbl
std
push
jnp
std
int3
js
icebp
or
or
mov
fcmovne
call
test
in
push
push
jl
arpl
add
push
sub
aam
or
scas
inc
jg
sub
jg
cmp
loope
xchg
outsl
lcall
sbb
es
repnz
outsb
out
pop
insb
sbb
jnp
push
cmpl
mov
inc
cmpsl
movsb
mov
sub
aad
inc
mov
adc
cmpsb
cmpsl
lcall
and
pop
test
sub
mov
popf
push
and
sti
negl
das
push
sahf
push
int3
arpl
subl
or
outsb
push
outsb
push
adc
nop
xlat
das
ror
adc
or
adc
dec
popl
jg
jb
cmp
inc
ljmp
sbb
or
sub
mov
jno
pop
sub
repz
sub
jns
xor
mov
andb
test
sub
pushf
adc
repnz
sti
or
jg
insb
xor
mov
je
sbb
xchg
xchg
sbb
lcall
jecxz
xlat
push
shll
into
ja
out
add
push
shll
add
or
popw
movsl
fcmovbe
pop
aad
jl
enter
push
xor
dec
adc
lret
scas
mov
jnp
out
loopne
call
call
xchg
jecxz
call
enter
xchg
dec
pushf
fsubp
jns
into
or
and
inc
xchg
ficoml
repz
push
ficoms
ss
cltd
mov
cs
hlt
jecxz
jb
mov
inc
subb
sub
xor
aam
fildl
scas
outsl
int
pop
and
movsb
mov
fwait
ja
xor
xor
mov
and
push
movsb
jle
jle
hlt
cmpsl
jg
pop
ja
pop
jnp
subl
js
inc
pop
xor
sbb
rorl
jp
loop
stc
mov
insb
fimull
or
jmp
lcall
icebp
push
sub
lock
push
lret
lods
push
lods
imul
adc
add
cmpsl
add
pusha
repnz
pop
jo
inc
sub
mov
fmul
rorl
sub
adc
into
pop
pop
shlb
cmp
pop
xorl
aas
or
jl
enter
jno
push
ror
inc
aaa
push
out
insb
push
incb
pusha
rclb
mov
add
ret
loop
pop
cmp
insb
or
mov
xchg
fmul
add
cmpsl
jnp
mov
dec
sbb
jmp
popf
inc
jmp
and
mov
cmp
jmp
lods
adc
mov
ror
out
dec
daa
sti
mov
xchg
mov
outsb
cltd
xchg
repnz
stc
inc
loop
imull
shlb
push
push
dec
mov
mov
xor
out
pop
push
pop
and
outsl
pushf
fisubrs
sub
fisttpll
fcom
and
pop
or
fcomps
push
fdiv
orl
xlat
mov
or
insl
shrl
add
jp
pop
fistpl
ret
lds
lock
dec
test
add
lods
fs
mov
cmp
mov
bnd
inc
push
sqrtps
cmpsl
rolb
push
or
lret
push
sub
decl
lret
pop
in
dec
nop
pop
adc
mov
lahf
lods
xorl
jecxz
cwtl
fcompl
icebp
inc
pop
fadds
mov
xlat
shlb
pop
or
jl
les
lock
sub
adc
jl
mov
aad
lods
sub
hlt
mov
cld
or
add
rcl
mov
dec
stos
sbb
notl
imul
cmp
sbb
xchg
jecxz
lret
aad
jnp,pn
add
call
and
out
fnstcw
or
inc
cmp
fs
ret
xchg
int3
xor
test
outsb
pop
xor
test
sti
adcb
sti
imul
sbb
inc
mov
pop
sub
xlat
clc
dec
sbb
inc
scas
dec
or
mov
fcomps
jb
jnp
aad
imul
xchg
add
jns
mov
out
ljmp
fbstp
enter
sbb
sbb
jg
std
dec
adcb
les
dec
aas
mov
jl
pushf
lahf
cltd
xchg
and
outsb
xor
ret
aam
jae
insb
stos
pop
sub
rcrl
lods
fldenv
push
pop
mov
xor
sub
pop
aaa
lret
ss
xchg
mov
inc
mov
sbb
add
or
loope
xchg
jns
insl
pop
dec
stos
xchg
or
fwait
sbb
xor
lds
imul
gs
sub
mov
inc
jge
jle
leave
adc
aaa
cmp
test
arpl
jg
das
int3
add
xor
or
mov
leave
mov
mov
loop
mov
nop
cmp
sar
cmp
add
add
mov
inc
aad
mov
shll
mov
cmp
jmp
ret
insl
jo
mov
adc
adc
pop
jg
loop
mov
cmpsb
mov
xor
cmpsb
ds
mov
inc
rol
stos
and
pop
std
jae
in
mov
sbb
pop
jecxz
mov
push
pop
or
and
push
push
lahf
push
mov
xor
push
or
insl
push
stos
xchg
outsl
dec
out
push
push
into
mov
insl
loope
adc
and
gs
pop
pusha
cmp
rclb
mov
pop
cmp
inc
cmp
or
mov
lods
adc
sub
scas
fnstenv
jmp
inc
stos
sub
xor
aad
mov
movsl
xor
add
arpl
inc
aaa
mov
xchg
cld
ror
repnz
sahf
adc
jbe
clc
scas
adc
jge
pop
xchg
lcall
jmp
scas
xchg
dec
pop
arpl
pop
int
jbe
sarl
test
clc
jo
fs
outsl
jo
and
dec
sti
sti
sbb
es
bound
icebp
mov
fdivrs
stc
jp
and
push
jbe
mov
int3
daa
lods
jne
gs
inc
call
hlt
popf
mov
xor
xorb
push
add
das
mov
xor
xor
adc
sub
loop
in
pop
jbe
mov
xchg
test
sub
add
push
cmp
popf
add
xor
gs
or
mov
testb
or
jbe
jnp
ret
cmp
cli
jae
repz
loopne
inc
fbld
aam
mov
mov
lds
cmc
daa
out
push
xchg
cli
stos
cwtl
add
pusha
pop
xor
pop
outsl
jecxz
jbe
hlt
pop
test
inc
or
nop
mov
or
and
lods
sub
aam
xchg
mov
jae
sahf
inc
mov
push
adc
cs
fsubl
stos
inc
pop
test
adc
hlt
pop
mov
mov
int3
sbb
adc
ret
out
lret
push
std
jne
cmp
loopne
das
call
push
rorb
enter
fldl
sub
push
inc
lods
and
mov
pop
mov
jno
push
jecxz
cmp
outsl
inc
cld
dec
aad
pop
fdivp
sub
mov
dec
adc
daa
pop
sbb
out
adc
leave
outsl
mov
mov
out
push
push
jnp
sahf
cld
stos
mov
stos
in
rolb
orl
sub
or
lret
and
lcall
mov
and
cmpsb
mov
scas
or
jbe
add
in
adc
jmp
cmp
dec
lcall
in
shll
ljmp
xor
cmpsl
les
mov
in
lea
pop
int
mov
dec
adc
push
shrb
shrb
aas
idiv
repz
sbb
scas
xor
int
sarl
hlt
mov
or
adc
icebp
lods
outsb
push
in
loope
ret
jo
mov
xor
div
mov
push
popf
cwtl
popa
loop
lods
add
xor
xor
jle
add
mov
movsl
adc
push
mov
fst
xchg
pusha
scas
adc
jb
and
cmc
adc
and
je
sub
ds
fisubl
xchg
dec
jecxz
or
pusha
popf
xchg
cwtl
lcall
lret
mov
fbstp
pop
jb
stc
push
pushf
mov
inc
ja
mov
in
dec
cmpsb
pushf
fiaddl
jo
sarb
sub
je
or
out
es
mov
ret
xchg
lods
insl
jae
pop
dec
push
ret
adc
ffree
je
lea
lea
add
xchg
pop
movsb
data16
aas
nop
dec
jge
imulb
and
bound
xor
and
ds
outsl
mov
adc
cmp
inc
bound
rcrl
xor
lea
movsb
sbb
mov
push
pop
cmp
push
bound
xchg
xchg
mov
jle
out
xlat
enter
and
jmp
inc
lcall
outsb
push
dec
dec
and
push
mov
jno
xor
loop
inc
xlat
insb
pusha
mov
popa
je
sub
dec
xor
add
fmulp
into
sbb
cli
lods
dec
dec
or
and
cld
or
inc
cmp
test
pop
mov
cmp
aad
pop
sti
xor
add
aas
jne
jmp
pop
sbb
mov
jbe
ret
lcall
in
ja
cmp
out
fidivrs
popf
fdivl
cli
popf
repnz
fcomip
cmp
cmp
data16
mov
and
mov
mov
inc
mov
in
orl
es
push
pop
push
sti
inc
fnsave
in
xlat
nop
jle
or
mov
popa
enter
jmp
jge
das
adc
add
aas
adc
xor
dec
sub
stos
adc
shr
dec
dec
imul
pop
mov
mov
mov
int3
push
scas
mov
das
fsubr
ret
and
repnz
dec
add
add
out
stc
stos
das
lods
cmp
xor
mull
mov
jne
nop
adc
in
dec
push
jb
pop
cmpl
mov
scas
cmp
mov
outsb
mov
jl
cmc
push
jb
aaa
pushf
adc
inc
pop
cmpl
call
out
lods
out
push
mov
inc
push
mov
enter
mov
cmp
mov
out
or
mov
cltd
xchg
shll
pushf
andl
inc
loopew
jo
xor
inc
xchg
imul
mov
jae
or
aad
mov
in
dec
lds
push
imul
ja
ljmp
lea
loopne
push
xor
cmpsb
lock
mov
sti
out
push
jb
add
fisttps
inc
aas
fbstp
movsb
loop
pop
out
mov
iret
sub
mov
in
pop
push
dec
fcomps
aas
js
pop
push
rclb
adc
inc
outsl
add
sbbb
pusha
xchg
aas
mov
adc
and
jno
cmp
sub
dec
mov
pop
imul
add
ss
mov
inc
mov
sarl
ret
mov
cltd
xchg
out
ror
clc
mov
xorl
icebp
fidivrs
dec
adc
xchg
lret
dec
aaa
adc
bound
int
sbb
add
es
adc
aad
in
je
test
rolb
ja
xchg
in
iret
sbb
fisttps
ret
adc
mov
mov
and
cltd
or
jp
jb
js
addr16
jno
xor
inc
fs
mov
cs
fsubl
outsl
vpsubb
mov
push
loopne
inc
mov
jne
test
add
mov
mov
in
adc
jge
rclb
jbe
fistpl
sbb
dec
add
ret
shrl
insb
subb
ljmp
jo
int3
xchg
cmpsl
mov
into
ljmp
aaa
dec
fnstcw
xchg
add
and
xchg
in
lds
int3
or
mov
dec
sahf
cld
mov
jns
xchg
push
loopne
sbb
cli
addr16
dec
sub
lods
sarl
cwtl
push
xor
stos
jae
adc
pop
jle
jle,pt
xchg
ficoml
pop
push
xchg
pushf
daa
adc
fidivs
add
or
adc
pop
sti
or
cmp
aad
sbbl
and
inc
inc
leave
gs
mov
xor
jp
pusha
lret
aam
stc
push
dec
push
dec
add
jns
jge
fisttpll
and
mov
fnstsw
xchg
mov
mov
mov
push
aas
das
and
or
sbb
das
add
sti
inc
repnz
int
js
daa
aam
int3
inc
pop
jnp
sub
push
push
fcomip
ljmp
mov
bnd
jbe
outsb
rcll
std
daa
mov
lahf
icebp
repz
movsb
sbb
xchg
jo
pop
add
in
mov
jg
push
push
push
clc
jle
jl
enter
mov
in
pop
and
insb
int3
lea
aas
scas
fs
scas
fcom
xchg
popf
sbb
jae
push
dec
imul
shlb
fcomi
enter
lods
adc
or
jecxz
clc
mov
stos
int3
fisttps
dec
mov
dec
add
xchg
sub
jecxz
sub
lret
les
sarl
repz
call
mov
or
xor
push
and
sbb
mov
xchg
push
sbb
rcl
rcrb
addl
arpl
add
fisttps
int3
int
lcall
shlb
mov
or
inc
xor
mov
fsubl
jns
dec
pop
or
sbb
sub
nop
js
pop
or
ljmp
xchg
repnz
icebp
call
mov
cmp
pop
jae
pushf
add
xor
jp
jge
adc
mov
sbb
and
sti
call
out
lea
and
scas
ja
fsts
pop
idivb
sbb
adc
dec
enter
xchg
mov
mov
sahf
int
out
mov
mov
test
adc
jl
cmc
inc
dec
inc
std
push
cmp
nop
mov
addb
push
pop
bound
enter
xor
xchg
jb
mov
hlt
sbb
les
or
mov
xor
and
int3
stos
fidivrl
xor
push
leave
sahf
cs
or
sub
jle
push
xchg
jp
xlat
into
imul
pop
ljmp
lsl
imul
sub
or
add
das
dec
cmp
faddl
out
rorl
jmp
push
pop
dec
subb
scas
dec
jbe
adc
jb
fisubrs
cmp
rclb
adc
dec
das
pop
or
lds
add
shr
hlt
push
mov
sbb
sbb
add
mov
pop
xor
inc
std
incb
cltd
imul
inc
jne
hlt
or
xchg
rcl
loopne
imul
sub
sub
js
das
negb
sub
cltd
sub
call
and
jbe
adc
sbb
enter
mov
hlt
sub
sarl
or
jno
popa
push
dec
pop
movsb
loope
je
push
inc
push
adc
mov
mov
fcomi
inc
mov
push
shrl
inc
or
dec
cmp
movsb
test
ret
and
insb
lock
or
pop
inc
add
in
data16
mov
es
jbe
ljmp
pop
out
mov
adc
pop
mov
or
fs
testl
ret
dec
pop
mov
fsubs
push
dec
mov
imul
mov
and
jg
push
dec
inc
shll
hlt
cltd
outsb
or
negb
push
pop
xchg
in
jae
call
mov
adc
loope
scas
mov
pop
mov
testb
xchg
aas
xorl
pop
movsl
xor
test
into
inc
outsl
cwtl
cmp
stos
mov
adc
roll
test
sbb
and
inc
leave
popf
xor
mov
out
fwait
pop
iret
push
push
xchg
mov
cwtl
push
push
or
mov
add
sbb
jg
add
psubq
pushw
ja
je
fnstenv
mov
inc
out
lcall
fildl
mov
call
orl
or
lods
sub
inc
push
jo
movsb
pop
daa
push
pusha
sub
add
fistps
pop
daa
or
stc
sbb
popf
xchg
cld
push
mov
xchg
mov
xchg
push
pop
test
xchg
cmpsb
rcrl
shrl
xchg
imul
out
adc
out
enter
adc
add
negb
lcall
jns
aas
aad
mov
icebp
dec
xchg
sbb
push
sbb
mov
pusha
dec
lahf
cmpsl
pop
xchg
shrb
or
fdivrs
sbb
or
test
in
inc
sub
push
stos
rol
and
dec
xor
movsl
call
ja
call
mov
pop
daa
mov
mov
dec
sbb
fistl
xor
insb
push
push
sar
dec
add
push
rcll
outsl
loopne
lret
bound
mov
roll
adc
iret
es
in
jmp
mov
mov
xchg
xor
shrb
xor
or
aas
dec
push
fldcw
arpl
dec
cmc
movsb
orl
mov
adc
leave
adc
out
sbb
call
movsb
fisttpll
xchg
pop
pop
dec
push
ficompl
fsub
or
ljmp
pop
adc
xchg
imul
lock
cmp
jae
xor
and
mov
cld
adc
xchg
mov
std
addr16
faddp
xor
sarl
leave
in
mov
lds
and
decl
cwtl
cli
mov
fwait
jae
ja
popf
lcall
add
aam
mov
in
aad
ljmp
mov
adc
mov
adc
and
dec
sub
popl
ja
pushf
int
sub
rcrb
jnp
das
sub
fcoms
je
push
push
sarl
daa
ja
faddl
mov
pop
inc
xor
dec
aam
into
xor
mov
lcall
das
data16
adc
or
jecxz
data16
popa
mov
sub
mov
mov
icebp
lods
inc
std
mov
mov
imul
sub
adc
xchg
mov
inc
pop
add
push
push
adc
call
xchg
inc
xor
ja
fidivrl
inc
ds
jnp
lret
je
push
fsts
lods
inc
popf
sub
ljmp
mov
mov
cwtl
leave
or
scas
cmp
negb
stc
shll
xor
aaa
test
jne
mov
jle
mov
mov
adc
sub
sub
les
fwait
sbb
test
xor
ljmp
icebp
xchg
dec
fnstenv
imul
cmp
in
push
jg
xchg
repz
shll
stc
out
aas
add
stos
dec
lret
sbb
movl
adc
test
subl
lods
or
sbb
stos
adc
sbb
xchg
rcll
or
outsb
push
lret
rcl
inc
xchg
iret
mov
push
jmp
lods
mov
mov
sub
inc
xor
xchg
repz
jne
xchg
ret
lret
loope
std
insb
sub
inc
fwait
xor
je
adc
aas
dec
mov
je
not
xchg
xor
mov
dec
or
es
sub
sti
pop
mov
mov
dec
mov
pop
pop
imul
mov
stos
xlat
iret
lcall
and
mov
pop
out
lock
add
push
pushf
cmp
mov
sub
rclb
sub
sbb
std
roll
loope,pn
or
xor
cmp
push
push
push
xchg
or
cmp
jae
mov
jmp
pop
ret
xchg
cs
jae
imul
ss
mov
add
cltd
rorb
ss
xchg
mov
pop
aas
cmpsl
hlt
sub
dec
repnz
cmp
cmp
or
inc
aam
bound
push
cwtl
or
cmp
inc
add
cmp
push
sub
or
mov
jnp
movsb
jg
fiadds
mov
push
adcb
pusha
inc
sarl
and
int3
out
cmp
mov
imul
xor
fisubl
mov
out
pop
xchg
dec
xor
dec
xchg
pusha
mov
pop
shll
xor
imul
xor
call
adc
inc
insb
es
shrl
jmp
jmp
mov
loope
movl
fstpl
fdivs
pop
mov
add
xchg
jno
in
and
ss
lea
andl
mov
lock
jmp
fistps
xor
arpl
xor
das
fimull
add
orb
fists
or
das
mov
or
sub
jmp
xchg
pop
lret
or
mov
leave
pushf
mov
fiadds
popf
imul
cltd
int3
xor
jbe
stc
and
rclb
inc
ss
lahf
jmp
jo
fistpll
xchg
xchg
dec
cmp
lcall
jecxz
fs
sub
pop
cmpsl
sbb
rolb
mov
fistpll
sub
aam
lods
push
sub
mov
push
jo
push
add
sub
or
xor
notb
lcall
pushf
inc
sub
mov
xchg
aaa
es
sbb
cltd
jo
inc
nop
enter
and
or
jecxz
ja
les
int
dec
mov
cwtl
xor
out
jbe
jg
les
je
pop
fidivl
bound
rolb
lahf
sub
jl
in
xchg
idivb
stos
xchg
fsubp
loop
add
sub
and
or
pop
out
push
fcmove
popa
lods
ss
int
mov
lock
mov
fldl
sbb
pop
xor
xchg
stos
stos
xor
pop
andl
or
or
push
sti
out
out
pop
call
int3
mov
xchg
lret
cltd
jns
arpl
mov
mov
shlb
mov
aam
fsubs
cmp
cmp
imul
sbb
push
int
sub
sub
pop
cmp
ret
jg
fildll
mov
push
fldcw
in
dec
add
sbb
jae
cmp
jb
sub
mov
lods
popf
xchg
scas
test
ret
push
lods
jns
jns
add
cmc
scas
pop
hlt
daa
sub
fisttps
stc
lret
fcoml
idivb
pop
push
loopne
leave
xor
adc
enter
jle
dec
andnps
inc
xchg
sbb
jns
pop
cmp
sbbl
fisubrl
fimull
pop
jmp
imul
or
mov
cs
aas
jo
jmp
loope
dec
cmpsl
xor
test
push
insl
xor
pop
push
xchg
xor
repnz
mov
mov
adc
aad
and
pop
jmp
xchg
pop
jo
add
ret
pop
mov
std
sub
fists
inc
pop
jle
sbb
sub
inc
cltd
mov
daa
cld
leave
cmp
adc
ss
test
fmuls
mov
iret
es
sbb
sahf
iret
mov
rol
mov
inc
hlt
test
xor
add
inc
xchg
dec
pop
cmp
movl
leave
sub
push
bound
in
jo
stc
enter
jns
cmp
lcall
mov
fsts
push
fisubl
inc
sub
add
shrl
inc
xchg
repnz
mov
mov
push
mov
sbb
sbb
jno
xor
add
fbld
inc
xchg
call
je
push
and
push
into
jl
xchg
out
dec
popa
xchg
stc
jle
dec
loope
js
and
orl
sti
mov
xchg
flds
push
dec
in
mov
shlb
jb
bound
cmp
mov
fistl
ja
adc
adc
inc
clc
popa
sbb
lock
mov
shrb
jle
divl
inc
and
cmp
rcrl
inc
or
cmp
stos
ss
test
outsl
repz
push
jnp
lret
xchg
nop
lea
dec
aaa
cmp
imul
xchg
adc
cmp
cld
f2xm1
push
pop
test
pop
icebp
fcmovnu
cmp
out
sub
push
adc
and
js
sub
fsubs
popf
pushf
and
filds
dec
test
inc
xchg
in
aas
dec
sbb
and
mov
in
dec
or
mov
pop
cmc
jbe
bound
cmp
fdivrl
leave
in
ja
and
lret
rcll
inc
iret
xchg
hlt
dec
jecxz
inc
call
outsl
jecxz
sub
inc
cmp
pop
push
xlat
test
add
sub
loope
mov
dec
cli
sar
add
push
data16
jno
add
mov
sub
cmp
add
mov
mov
adc
sbb
data16
jno
cli
pop
sub
jecxz
daa
adcb
mov
orl
es
pusha
adc
pop
out
sub
nop
call
movsb
fisubrs
inc
pop
popa
push
dec
jg
es
pushf
lock
repz
popa
mov
dec
iret
cld
sub
mov
xor
push
pusha
pusha
andb
mov
in
xchg
xorl
dec
jb
or
inc
sbb
jbe
push
inc
andl
roll
outsl
and
out
push
xchg
add
inc
popa
sub
adc
pop
roll
rol
mov
rcrb
gs
test
xchg
mov
pop
adc
mov
mov
jae
into
pop
mov
xchg
out
ss
mov
mov
jns
pop
imull
or
xchg
daa
rcl
add
stc
mov
adc
jg
adc
pop
xchg
mov
sahf
dec
leave
mov
dec
outsb
cmc
int3
push
insl
ss
cld
test
sbb
lahf
dec
cmp
xchg
pop
sahf
inc
mov
mov
mov
sahf
mov
icebp
sub
insl
fstl
mov
lods
imul
mov
lds
push
insl
jmp
lock
and
lea
mov
out
cmpsl
push
jecxz
fidivl
les
pop
sub
cs
ljmp
xor
adc
das
pop
stc
adcl
inc
jne
lret
lahf
jg
mov
push
mov
fnstsw
dec
pushf
or
sbb
loope
ret
sbb
cmp
xchg
mov
in
push
mull
mov
sub
dec
sbb
xchg
std
add
cmp
xchg
cmp
in
mov
mov
dec
aaa
jo
jae
push
popf
adc
add
daa
dec
or
fists
push
nop
mov
mov
push
mov
add
bound
xchg
popf
scas
jmp
add
imul
sbb
shlb
push
lds
inc
push
jb
mov
fsubs
cwtl
rorb
push
je
out
sbb
push
shl
cltd
inc
enter
and
jbe
arpl
pop
in
pop
mov
and
fldenv
lods
cwtl
jbe
divl
aam
add
add
mov
loopne
dec
mov
push
jecxz
xchg
jne
jmp
add
mov
popa
ljmp
mov
dec
push
xor
loope
jle
jp
inc
test
or
mov
js
je
mov
jp
mov
iret
push
sbb
ret
cmp
jae
cmc
xchg
or
add
inc
inc
xor
cltd
sub
dec
insb
repnz
add
jnp
lds
mov
xchg
dec
fnstsw
adc
ss
mov
push
insl
pop
fistps
clc
hlt
sub
xchg
xor
inc
xorb
mov
mov
mov
daa
mov
sub
mov
fnsave
clc
shll
sbb
jg
out
push
out
fdivrl
add
sbb
add
jns
aad
stc
fiadds
bound
loopne
lret
icebp
in
iret
inc
dec
inc
inc
div
mov
sahf
inc
mov
jo
adc
or
popf
mov
test
popa
push
pop
inc
or
lods
mov
add
mov
jne
adc
add
inc
scas
pushf
mov
dec
inc
mov
add
popa
xor
add
xchg
test
aam
pop
mov
and
nop
sbb
cwtl
add
jle
inc
or
jp
mov
ds
leave
fmuls
jne
loop
rorb
pop
xor
push
push
jge
sub
pop
dec
jle
arpl
insl
mov
movsl
adc
mov
lret
shrl
ss
decl
cld
shlb
xchg
jb
icebp
mov
inc
ja
adc
inc
xchg
stc
push
dec
sbb
hlt
movsl
mov
sahf
adc
sar
xor
test
rorb
popf
jmp
and
dec
cmpsb
mov
inc
fistpl
or
add
int3
mov
movsl
inc
std
mov
sub
mov
mov
lcall
mov
inc
dec
loope
lcall
outsl
out
rorb
mov
je
ftst
rclb
inc
add
mov
movsb
xor
inc
push
js
testb
icebp
and
mov
int3
push
jl
loop
std
xor
lds
lods
xor
inc
mov
dec
push
mov
je
addr16
inc
ds
adc
adc
add
mov
and
pop
loop
movsb
adc
inc
jecxz
jno
push
int3
addr16
stos
mov
test
push
test
ffree
push
mov
fcomps
mov
mov
arpl
dec
mov
mov
jmp
hlt
or
ja
enter
push
out
movsl
jne
out
into
inc
push
js
hlt
dec
add
inc
xor
xor
movsb
or
add
jbe
pop
cld
dec
mov
vcvtps2pd
add
jl
xlat
movsl
sbb
daa
xor
inc
jns
loop
mov
jno
inc
test
sahf
sbb
or
mov
leave
fsubrs
sub
adc
lods
add
outsl
jmp
xchg
outsb
sbb
repnz
divl
stos
push
insb
pusha
mov
dec
xchg
adc
les
jns
cs
sbb
xor
dec
dec
inc
jle
jp
sub
lret
mov
js
into
and
push
popf
mov
or
pop
and
bound
ljmp
mov
adc
adcl
ljmp
lea
ljmp
inc
pop
or
inc
and
icebp
loopne
and
popf
clc
or
pusha
pusha
dec
movsb
in
pop
xor
addr16
mov
test
pusha
adc
inc
or
dec
cli
inc
pop
ret
mov
addr16
and
cmp
cmp
jae
gs
rcrb
icebp
outsl
mov
dec
pop
mov
cmp
icebp
shrb
mov
pop
sbbl
xchg
dec
adc
pop
ret
mov
fmul
pop
loopne
cmpsb
addr16
popl
subl
cmp
dec
or
mov
fistpll
shr
cmp
add
out
jge
or
cs
inc
movsb
out
cmp
sbb
sbbl
xor
push
lret
sahf
lods
mov
xor
and
cmpl
hlt
mov
jl
in
mov
or
cltd
xchg
popf
leave
xor
in
mov
push
jns
mov
cmp
pop
cli
mov
push
ret
pop
jmp
or
fsubl
mov
mov
inc
push
lds
inc
mov
mov
repz
xor
mov
popl
sbb
jmp
js
leave
into
int3
adc
push
loop
icebp
and
fistpl
xchg
stos
inc
js
bsr
pop
mov
xor
xchg
pop
cmpsl
jb
pop
nop
sbb
pop
dec
cmpsb
mov
xchg
fnstsw
addl
idiv
xor
je
sbb
mov
add
sti
or
xor
mov
add
sub
cmpsb
cli
xchg
sbb
adc
pop
push
adc
fs
lods
and
cli
mov
pop
subl
stos
das
mov
clc
jl
ret
mov
lahf
movsl
test
das
sub
jbe
sub
repz
xchg
push
inc
sbb
inc
mov
leave
ljmp
sbb
arpl
fnsave
xor
pushf
xchg
cmc
lret
jae
cmp
rolb
arpl
iret
sbb
loop
insl
pop
addl
adc
adc
inc
sub
push
pop
sub
fisttpll
adcb
outsb
mov
ja
cmp
add
push
dec
test
pushl
pop
sub
leave
hlt
in
bound
xchg
mov
xchg
fsts
or
in
test
cmp
jae
push
mov
sub
lds
pop
ret
cmp
outsl
xor
rclb
cmpsb
xor
and
or
xor
mov
out
in
pusha
int
adc
js
fcompl
fsubs
call
in
ja
pop
and
xchg
js
mov
pop
lods
fbstp
movsb
aas
movsb
cmp
aaa
sbb
roll
and
jns
xor
arpl
push
cmp
insl
sub
cmp
cmp
rclb
pop
mov
mov
or
cli
lfs
mov
sbb
fisubrl
or
popf
jge
bnd
xor
sbb
test
push
arpl
cmp
loope
ret
lock
xor
call
sub
insb
test
inc
test
add
inc
fnsave
xchg
or
ja
xchg
roll
fwait
xchg
sub
sbb
or
dec
mov
inc
fstpl
xchg
lret
test
jo
pop
gs
add
sub
movsb
lods
sub
orl
push
sub
cmp
repz
cmp
and
out
incb
xchg
sub
repnz
mov
inc
cmp
adc
adc
out
stos
sahf
es
cmp
lock
in
out
aas
sub
aad
test
mov
insb
or
fidivs
mov
and
in
divb
fnstcw
pop
add
into
push
es
cmp
in
out
insb
shlb
popf
mov
mov
lret
jge
push
pop
mov
bound
mov
and
sbb
xchg
pop
scas
sbb
push
insl
pop
sub
flds
adc
jo
inc
cmp
jae
pop
fs
enter
jmp
cmpsb
pop
cmc
ja
jbe
push
add
mov
sub
adc
adc
test
sub
sub
mov
cmp
fcoml
test
sbb
xor
aad
iret
outsl
push
outsl
rclb
xchg
lret
lock
jno
push
push
fdivs
adc
mov
xchg
add
int
mov
dec
sbb
mov
sbb
sub
insl
add
adc
in
xchg
movb
rcll
enter
scas
pusha
das
into
jle
cmpsl
pop
adc
adc
push
xor
imul
in
xor
fisttpl
sbb
sub
xor
scas
xor
rcll
arpl
sub
mov
dec
lods
aaa
jmp
and
daa
mov
mov
pop
jne
sti
insb
jns
movsl
imul
inc
sub
iret
or
repz
into
fcoms
jno
vfrczps
jp
mov
out
jns
fnstenv
mov
scas
scas
es
lds
cltd
xor
in
sbb
pop
loop
jge
shl
fsubrs
fdivr
daa
cwtl
mov
add
int
jge
jl
int
jge
inc
dec
dec
jl
setbe
add
jns
testb
cmp
jge
add
lret
push
cld
movsb
aaa
push
jp
ret
nop
repz
and
insl
in
pusha
cmc
dec
xchg
or
sbb
inc
adc
mov
jp
xor
jmp
loope
jae
cmc
add
mov
add
sbb
mov
test
cltd
js
ja
scas
push
jno
shlb
pop
or
daa
ds
or
sbb
sahf
dec
lds
roll
sbb
stc
ds
shll
nop
jno
lods
imul
dec
ret
inc
sbb
cmp
fdivr
cmc
rcll
das
mov
fcomp
sub
mov
push
hlt
dec
mull
dec
inc
ljmp
popl
loope
ds
dec
xlat
pop
and
daa
hlt
fildl
xor
sbb
dec
lret
sub
cmp
jp
and
pop
add
sub
fsubrp
mov
jmp
out
jmp
dec
aad
out
and
repz
jns
xchg
jnp
insl
in
mov
aad
push
mov
cltd
dec
mov
sahf
les
inc
xchg
inc
dec
subl
xchg
sbb
push
adc
xor
in
adc
repnz
push
cli
sbb
inc
pusha
pusha
and
lds
test
pop
mov
or
shl
push
out
push
popa
movsl
xchg
enter
pop
fdivs
iret
push
xchg
inc
mul
int3
vcvtdq2pd
stc
sbb
xchg
into
push
or
xchg
xor
das
push
adc
fildl
or
mov
mul
scas
jg
iret
pop
jbe
iret
fsubl
pop
ror
aaa
sub
leave
push
xor
pop
xchg
or
lahf
adc
mov
hlt
lret
mov
rclb
mov
xlat
cmp
cmp
mov
pop
add
xor
cmp
sbb
xchg
jb
mov
mov
jns
outsb
les
xchg
mov
sbb
and
xchg
mov
cmpsb
mov
push
movsb
xchg
push
mov
push
leave
fdivrs
loopne
push
lret
cld
add
add
cmp
or
pop
sub
dec
popl
fstps
pop
lods
fdivrs
popf
negl
xor
test
gs
cmp
imul
xor
cmp
or
sub
out
mov
push
mov
leave
lret
je
iret
and
stc
pop
lods
es
add
xchg
mov
or
loop
xor
and
mov
popa
xchg
xor
xor
ja
stos
or
and
call
mov
pusha
mov
xchg
outsl
sub
jge
jl
jl
inc
mov
jo
mov
jne
cmp
cmpsb
xor
and
clc
jb
rorb
add
pop
sub
mov
in
fisubs
push
jno
xchg
movsb
mov
and
mov
out
cld
fwait
mov
inc
jge
mov
mov
push
pextrw
cmp
pop
pop
adc
addl
std
stos
gs
jp
testl
jnp
ret
in
sbb
loopne
jb
sub
ds
aas
or
xchg
popf
mov
xor
mov
test
or
lahf
in
inc
pop
sub
mov
subb
sahf
popa
xor
hlt
push
push
sub
in
push
aas
xchg
idivl
test
ret
lods
or
scas
sub
sub
push
movsl
fmul
loopne
jns
pop
cmp
sar
jmp
pop
ss
push
pop
fwait
sbb
jns
mov
mov
mov
nop
xor
outsb
loop
lret
pop
out
mov
dec
mov
incb
jo
fwait
icebp
pop
inc
xor
imul
mov
cwtl
jne
test
imul
cmp
cltd
inc
push
fsubrs
push
cltd
fldcw
test
lods
popa
stos
mov
sub
mov
negb
pop
aas
js
xchg
lahf
lret
xor
bound
fmull
sarl
dec
adc
in
insb
pop
mov
lcall
lock
xchg
clc
mov
cmpsb
mov
inc
xchg
mov
mov
inc
cmpsb
lods
mov
and
mov
xchg
and
or
addl
cld
mov
aas
push
popf
mov
lret
push
push
insb
add
push
pop
pop
fmuls
sub
clc
ret
jns
dec
jb
xchg
pop
aaa
jmp
sahf
push
in
dec
sub
aaa
fldl
pop
inc
rclb
and
aas
sub
stos
mov
and
insl
out
inc
push
jo
bound
mov
push
or
std
enter
fisubrs
js
pop
sbb
jno
in
mov
pushf
les
fisubl
lcall
bound
jo
or
test
repnz
sub
add
xchg
dec
cmp
lcall
movsb
cmp
pop
fwait
out
lea
lret
sub
scas
lret
rcrl
jecxz
fldl
loop
mul
pop
sub
js
sbb
mov
fdivr
ja
std
out
add
cmp
jns
das
adc
pop
pop
repnz
and
scas
inc
sub
xor
sbb
les
jnp
cwtl
jmp
sbb
sbb
sbb
rorb
sbb
add
leave
pushf
push
imul
mov
jb
pop
dec
and
sbb
dec
fldenv
inc
adc
out
adc
cli
movsb
mov
or
aam
mov
push
sbb
adc
and
jae
sbb
loopne
xchg
mov
xchg
or
fs
mov
pop
push
mov
push
je
dec
dec
xlat
sbbb
jle
pop
neg
push
je
mov
cmc
xor
adc
test
mov
lret
jae
dec
packssdw
push
cli
nop
enter
addr16
jle
cs
and
mov
lock
and
sub
mov
out
insl
int3
outsl
shlb
xchg
ret
daa
cs
popf
das
faddl
xchg
push
mov
popa
inc
add
pop
pop
stos
fcoms
dec
dec
add
cmp
push
adc
pop
inc
lods
scas
mov
int
jae
add
or
out
xchg
xlat
test
popf
vpsubd
dec
cli
repz
push
xchg
lods
pop
sub
out
movsb
js
scas
pop
and
cltd
aas
int3
mov
dec
mov
xor
and
shrl
xchg
mov
cli
xchg
inc
sub
xchg
gs
rolb
popf
dec
shl
xor
and
das
push
lcall
pop
sub
mov
jno
imul
mov
adc
cmpsl
call
jmp
mov
das
or
dec
lret
sub
ret
out
mov
mov
cmpsl
cli
iret
fs
movsl
mov
mov
xchg
icebp
xchg
pop
add
pop
ds
xor
adc
inc
cld
add
add
mov
ret
pop
fisubrl
mov
cmc
enter
fmulp
aad
mov
ret
cmp
pop
inc
scas
mov
mov
lret
sub
mov
push
lea
dec
popa
int
push
jmp
xchg
lods
ret
inc
lock
jl
push
clc
stos
xlat
or
push
hlt
repnz
cmp
adcb
sbb
dec
stc
dec
outsb
lea
divb
pop
test
xchg
std
and
aad
or
mov
repz
push
xor
popf
jge
std
inc
test
mov
scas
sub
test
push
jmp
lock
in
add
les
cltd
into
push
movsb
es
add
arpl
mov
bound
adc
adc
outsb
xor
clc
lahf
jns
cs
es
push
add
jle
mov
xchg
sarl
fnstcw
inc
pop
mov
daa
jnp
nop
sbb
or
test
add
mov
into
xor
inc
inc
mov
data16
xor
andl
push
sbb
mov
mov
pop
outsl
ficompl
movsl
lcall
push
adcl
xchg
bound
or
or
sbb
mov
lret
push
pop
jno
lahf
sbb
push
scas
xchg
lret
pop
pop
test
loop
incl
ss
xlat
sub
push
dec
ljmp
or
sub
mov
pushf
repz
shl
cld
xor
orb
clc
push
aam
cld
xchg
xchg
andb
aas
or
dec
mov
xchg
xor
cmp
sarl
ficompl
xchg
int
and
pop
cmpsb
jl
jb
or
addr16
xchg
scas
mov
cld
test
gs
mov
leave
cli
dec
jo
mov
add
aam
dec
push
testl
push
inc
data16
dec
ret
adc
ss
mov
and
sub
lret
jno
xchg
into
cld
or
movsb
ljmp
xchg
push
ss
test
xchg
in
popf
inc
pop
dec
push
add
adc
push
int3
push
xorl
pop
lcall
outsl
movsb
xchg
inc
lret
adc
out
xor
dec
cwtl
js
mov
daa
xchg
pop
dec
imul
gs
sbb
dec
push
cli
push
inc
into
add
push
jae
imul
push
fildll
repz
xchg
imul
pop
and
out
imul
xchg
mov
push
inc
or
nop
dec
lret
jo
dec
jle
iret
ffreep
les
test
jl
popf
test
jge
cmp
lcall
int
add
push
adc
test
add
xor
mov
jmp
ja
mov
loope
loopne
adc
dec
sbb
cmp
cmc
movsb
and
xchg
jge
xor
sub
sbb
fucomp
sub
loopne
jno
decb
repz
adc
stc
pop
inc
or
cmp
stos
or
adc
add
add
subl
outsb
lods
xor
movsb
daa
push
mulb
sub
mov
rclb
sub
cld
bound
jns
or
add
sub
cmp
nop
inc
jmp
xchg
popa
push
mov
add
aam
mov
imul
dec
lcall
jecxz
pop
pop
push
add
nop
sbbl
mov
fwait
sub
frstor
push
fnstsw
test
jne
int
rcrb
sbb
int3
in
aad
jns
push
sahf
stc
or
sahf
inc
lcall
jge
xor
cmp
jp
sub
std
dec
lcall
jp
pop
imul
dec
je
or
mull
lds
dec
ret
pushf
mov
fbld
shlb
out
hlt
push
fstpt
mov
push
sub
jp
adc
pop
inc
sub
and
out
xor
lahf
sub
es
std
stos
sub
or
add
jmp
cmpsl
sbb
jle
add
push
sbb
shrb
lahf
mov
cmp
cmp
cmp
pushl
pop
subl
lahf
cs
stos
aam
insl
scas
or
adc
out
in
pop
xchg
test
shrb
jge
jo
lock
scas
call
std
daa
js
data16
repnz
mov
dec
stos
jle
addr16
sti
jmp
notl
out
push
cmp
in
insl
xchg
dec
push
outsl
cli
hlt
xor
and
jae
pop
sbb
inc
insb
int
sub
out
push
dec
lcall
pusha
or
sbb
and
pop
in
push
mov
cmp
aas
fwait
lret
popa
loopne
push
aaa
jle
mov
cmpsl
sbb
jno
jne
fiadds
adcb
cmpsb
aaa
cs
and
mov
out
xor
loopne
mov
xchg
cli
inc
stos
popf
inc
add
xchg
push
fstpt
imull
pop
out
test
lock
sbb
call
in
pop
ret
push
pop
scas
mov
rorb
cld
jmp
cs
push
mov
es
subl
xchg
pop
pop
pusha
fs
lds
lods
lret
sbb
jb
cmc
iret
mov
sub
test
or
mov
pop
mov
mov
xchg
xorl
popa
gs
xchg
xor
bnd
outsl
addb
inc
sbb
pusha
cwtl
je
cld
ficoms
xor
add
in
xchg
or
jecxz
sbb
mov
gs
int
in
push
insb
xor
inc
repz
adcb
jg
sbb
pop
mov
xchg
das
cmp
mov
push
dec
pop
dec
add
rcl
jl
lcall
lock
in
sub
xchg
xchg
sub
scas
nop
pusha
in
loop
sbb
out
imul
rcll
subb
push
adc
and
fcoml
dec
pop
leave
stos
cmp
adc
inc
loope
std
sbb
or
or
mov
mov
pop
push
sbb
js
jno
cltd
mov
xlat
mov
jmp
inc
pop
out
cmp
fwait
es
fcoms
orl
xchg
mov
dec
add
dec
rclb
jmp
aam
or
push
pop
add
andl
dec
cmpb
out
shr
jo
xor
dec
jns
lds
xor
aas
imulb
cmpsb
jno
xchg
cltd
call
push
rorb
or
notb
leave
lcall
cs
popf
adc
das
jns
out
inc
mov
loopne
push
leave
insb
adc
dec
hlt
mov
adc
fs
clc
jnp
cwtl
lds
iret
lret
in
mov
jae
dec
hlt
xlat
push
leave
sub
jne
push
mov
lods
and
test
mov
xor
mov
stos
lock
cmc
mov
fisttps
mov
and
aam
dec
cmp
lret
mov
fisubrl
test
cwtl
leave
in
push
mov
fs
les
and
mov
hlt
mov
pop
sarl
sub
push
loop
sub
adc
mov
mov
mov
ss
aam
pop
ds
jmp
jnp
cmpsb
push
inc
xor
fcoml
pop
or
aad
in
stos
cli
mov
dec
sub
popf
test
mov
sub
jg
test
loope
mov
jno
dec
lods
test
add
jp
mov
lds
test
sbb
in
mov
fisubs
pushf
cmp
mov
int3
jg
jg
popf
pusha
stos
in
std
ja
dec
jmp
sbb
cmp
mov
push
aaa
push
enter
mov
sub
lods
xor
mov
aam
in
or
push
push
cmp
pop
bnd
imul
cmpb
dec
dec
out
lods
popa
fldl
push
lods
mull
les
sub
cmpsl
fisttpl
out
add
outsl
add
push
in
shr
popa
mov
and
pcmpgtd
add
xchg
orb
xlat
or
jns
sub
mov
xchg
add
pop
xor
mov
shrl
rcrl
sub
and
daa
popl
int3
stc
dec
ret
pop
push
sub
push
faddl
fs
xchg
aad
inc
xor
cs
pop
dec
subl
mov
push
rcl
sahf
das
cli
mov
inc
lods
mov
dec
scas
leave
shll
inc
arpl
mov
xor
leave
out
or
dec
mov
lret
mov
push
sbb
iret
push
sub
cmc
and
lock
cwtl
adc
dec
fwait
jae
or
and
adc
nop
addr16
fisubl
push
pushf
cmpb
sti
mov
adc
mov
sub
mov
test
jg
sub
xchg
mov
pop
push
and
mov
test
add
shl
mov
cmpsl
push
xchg
xchg
mov
std
int
jge
lds
sub
stos
ds
repnz
mov
and
push
pop
sbb
shlb
inc
int3
mov
cmpsb
jns
pop
dec
shll
dec
dec
dec
and
mov
popa
lods
and
inc
lea
dec
xchg
jnp
adc
fdivs
sti
lock
sbb
add
fdiv
pop
cli
and
push
mov
push
daa
repnz
adc
mov
test
bound
xor
rcl
mov
rcll
pusha
mov
leave
mov
jno
lret
dec
out
lock
sub
fwait
dec
lret
std
and
jo
cltd
in
out
mov
loop
aaa
cs
fstp
aad
nopl
jbe
jne
mov
je
lret
hlt
es
sahf
dec
addr16
mull
jmp
test
and
push
mov
push
popa
xchg
cmp
shll
adc
add
jne
jbe
push
in
pushf
scas
cmp
mov
mov
fwait
push
in
cmp
out
sar
lock
aam
stc
ja
test
jge
push
mov
and
mov
lcall
pop
es
sarl
stos
jp
xor
sbb
imul
xchg
push
inc
fs
xchg
sahf
outsl
and
mov
lahf
loopne
fwait
mov
ret
fs
or
je
cmp
jne
pop
outsb
xchg
mov
jmp
cmpsb
stos
inc
cli
xor
subl
push
aad
dec
imul
fistl
xchg
xchg
out
in
xor
push
or
inc
movsb
roll
dec
sbb
pusha
aad
fcos
fisubs
push
lcall
push
add
aam
repnz
or
fisttpl
mov
jo
dec
jo
aad
pushf
ljmp
mov
jb
dec
jb
xchg
fcoms
sti
ja
mov
push
mov
scas
lret
subl
mov
jg
fs
insb
scas
out
pop
mov
stos
cmp
bound
test
mov
xchg
sbb
fmull
pop
movsb
imul
je
fwait
cmp
in
mov
lds
mov
mov
popa
dec
mov
or
lret
inc
and
inc
cltd
test
inc
or
mov
sahf
sbb
int3
inc
aad
xchg
adc
nop
jo
cld
adc
jge
ss
sub
dec
dec
rsm
sbb
cmp
dec
in
insb
mov
inc
jecxz
es
cmp
sbb
out
negb
fiaddl
push
add
cmc
inc
loop
and
mov
xor
push
mov
sbb
insl
in
sub
jne
jmp
cmp
mov
pop
sbb
lds
mov
mov
jae
push
push
stc
popf
sarl
arpl
xchg
test
leave
jl
xor
std
mov
inc
cmp
mov
mov
das
sbb
or
imul
cmp
mov
push
push
xchg
cs
stos
out
daa
inc
or
imul
aad
btc
xchg
pop
lahf
scas
add
lea
sbb
xchg
dec
jg
jl
cli
shl
inc
add
jmp
xor
or
xchg
inc
inc
xor
iret
jnp
or
cs
xchg
stos
gs
lahf
imul
mov
repnz
adc
push
std
imul
sub
cmp
dec
pop
pop
mov
aaa
stos
mov
xchg
lret
inc
scas
insl
jno
inc
xchg
fstps
pop
pop
mov
pop
lods
cmp
cmc
lock
pop
outsl
pop
fwait
hlt
repnz
test
push
testl
int3
add
adc
test
repz
add
leave
jmp
mov
outsl
cmp
mov
loop
maxps
and
dec
mov
lock
sub
adc
clc
and
arpl
jbe
repnz
lods
lret
mov
aad
pop
push
stos
negb
and
or
imul
js
inc
popf
sbb
xchg
mov
ds
mov
adc
add
add
fnop
test
in
fsubl
xor
adc
repz
loopne
lds
int3
in
fsubrs
rorb
insl
ss
push
dec
sbb
inc
fistl
lods
aaa
or
rcll
jle
or
mov
push
dec
xchg
and
pop
les
jl
push
inc
pop
sub
add
push
testb
shlb
mov
mov
or
push
add
sbb
lds
pop
je
sbb
outsb
xchg
imul
popf
pop
outsb
and
mov
adc
xor
mov
stos
out
add
stc
add
out
jl
lret
mov
repnz
pop
add
dec
into
sub
in
aad
iret
andb
adc
push
and
lahf
bnd
mov
pop
ljmp
popf
loope
lcall
insb
mov
jl
dec
outsl
push
mov
out
push
push
dec
sub
es
jle
test
jecxz
pushf
lahf
cltd
repz
push
rcrl
mov
and
adc
or
push
jle
and
dec
enter
imul
jecxz
jnp
sub
std
mov
fcomps
jle
xchg
lds
lods
inc
cmp
outsb
into
xchg
in
adc
or
leave
dec
loop
lods
nop
aaa
ret
scas
jae
push
mov
dec
insl
dec
mov
and
inc
and
push
cltd
mov
mov
push
lds
clc
pop
out
add
push
int
cltd
dec
pop
rcrl
jp
outsb
xor
arpl
cmpsb
test
and
xchg
idivl
xchg
jge
negb
jg
addl
fs
mov
xor
xor
dec
jmp
ret
test
push
and
push
testl
das
enter
push
das
dec
jecxz
mov
dec
cmp
pop
ljmp
mov
cmpsb
jge
aas
dec
shl
pop
jp,pn
push
outsl
fwait
movsl
sbbb
loopne
mov
gs
lahf
sub
popa
rorb
mov
ljmp
cmp
loope
lret
inc
mov
add
in
cmp
int3
mov
or
lock
test
inc
aaa
movsl
push
pop
ljmp
bound
sub
lahf
rcl
xchg
pushf
dec
dec
cs
data16
jbe
enter
pop
adc
xchg
push
jae
push
test
dec
popa
iret
sub
xor
testb
aam
jl
imul
lea
popf
dec
ficoms
xchg
das
adc
mov
sbb
imul
push
or
and
push
pop
add
adc
jmp
xor
cmpsl
aam
das
jb
dec
popa
jbe
in
jo
dec
in
and
cmc
cld
cmp
cmp
sub
sahf
mov
stos
pop
mov
push
repz
pop
inc
xchg
scas
imul
lcall
adc
pop
out
sub
sbb
ss
push
sbb
dec
dec
inc
mov
xor
or
fadd
or
mov
dec
inc
enter
sbb
dec
cmp
imul
je
inc
sbb
pop
push
les
add
mov
in
sub
movsl
cmp
test
jns
or
jle
cmp
xchg
or
mov
test
mov
lcall
in
jge
dec
fsubp
mulb
out
or
jno
or
mov
mov
sbb
les
inc
hlt
mov
jle
fsubrl
mov
sub
loopne
push
or
icebp
jns
sub
sub
xchg
stos
mov
testb
ljmp
les
xchg
mov
ljmp
cmc
inc
and
jne
std
outsb
add
push
cmpb
adc
push
stc
xchg
rcrl
test
loope
lcall
pop
pop
push
pop
repnz
nop
aam
xchg
xor
pusha
loope
xchg
cmpb
cld
adcb
pop
mov
stos
adc
inc
mov
sub
and
mov
jmp
fs
inc
push
adc
pop
in
mov
jo
or
jecxz
xor
inc
push
fcomps
mov
mov
mov
or
and
sbb
adc
xchg
pop
mov
dec
push
fwait
jle
aas
and
fcomip
push
scas
ret
icebp
mov
imul
out
cltd
lock
leave
push
xchg
dec
adc
xchg
lea
fmuls
divb
mov
mov
call
std
loop
cmp
nop
mov
pop
push
ror
pop
fidivl
jl
mov
test
push
mov
mov
push
stos
das
in
mov
sbb
fwait
cli
in
loope
hlt
cli
das
int
mul
add
add
out
push
aam
addl
into
in
in
sahf
enter
sub
insl
lcall
imul
jmp
popa
or
sbb
mov
stos
scas
mov
cltd
add
pop
add
jecxz
aas
sbb
mov
fidivl
loop
jo
lret
or
fmulp
out
in
mov
pop
cwtl
jp
mov
ret
icebp
push
mov
xor
or
out
push
cmp
jecxz
bound
mov
mov
in
scas
mov
or
xlat
aas
outsl
sub
push
fsubr
or
std
fnstsw
lea
sti
sbb
repnz
imul
xor
mov
inc
mov
jmp
pushf
int
sbb
jg
cmp
pop
push
push
outsb
daa
mov
push
dec
jp
and
sbbl
popf
daa
jns
and
mov
push
jno
xlat
mov
xchg
stos
scas
xchg
clc
push
inc
sahf
arpl
mov
mov
movsb
push
imul
stos
pop
ror
std
mov
test
jecxz
sub
hlt
mov
or
add
bound
in
int3
jmp
mov
sbb
sub
jp
cmpl
hlt
mov
pop
mov
in
sub
outsb
clc
mov
mov
ret
mov
lods
fs
mov
fsub
in
jne
and
xor
mov
pop
addl
nop
std
sub
pushf
push
xchg
in
and
sarl
daa
sub
add
fnsave
sbbb
xchg
movsl
mov
pop
jl
xor
and
mov
fimull
lahf
adcl
mov
pop
ljmp
lods
cmc
push
test
outsb
xor
dec
rep
movsl
cmpsl
xlat
aas
sub
or
mov
sbb
sarb
inc
push
cmp
jo
dec
inc
jbe
push
stos
dec
xor
mov
dec
imul
dec
jecxz
push
cmp
sub
jo
popa
jae
das
sbb
adc
cmpsl
in
mulb
movsl
cmp
fimull
mov
dec
movsl
mov
sbb
jnp
pusha
dec
arpl
mov
jmp
xor
xchg
fmull
imul
jae
mov
adc
lods
adc
cld
xor
popa
mov
popa
push
cld
inc
data16
jb
fs
cmp
mov
cmpsl
sbb
push
adc
push
call
xchg
push
cwtl
shrb
nop
out
mov
lcall
inc
xchg
xchg
or
clc
jmp
jb
or
pop
mov
push
shlb
add
mov
mov
pop
shlb
xchg
cmpsl
cli
stos
data16
xchg
rol
cmp
jle
aad
in
pusha
out
test
adc
cmp
fs
sub
xchg
in
jecxz
pop
sbb
cltd
push
add
pop
mov
mov
mov
or
xlat
pop
lods
inc
insb
sbb
insl
adc
stos
mov
dec
adc
test
sub
aas
pop
das
enter
outsb
mov
sub
and
outsl
arpl
pusha
inc
mov
loopne
and
xchg
pushf
push
pop
jbe
jl
pop
dec
fucom
mov
aaa
push
loop
loopne
xor
lock
mov
or
or
in
arpl
lods
pop
dec
js
out
outsl
dec
pop
test
sbb
in
lds
sub
pop
mov
sbb
mov
xor
vmread
pop
clc
int
mov
movsl
pop
add
adc
test
lea
push
pop
sub
call
loopne
sub
js
xor
jno
repnz
push
cmp
xorb
aad
pop
loop
daa
outsl
inc
push
sub
add
call
mov
xor
ds
testl
stos
sbb
xorb
arpl
adc
or
enter
ret
test
inc
lea
adc
les
cli
sub
sub
push
dec
das
andl
xchg
outsl
jno
cs
cmp
icebp
lret
loope
pop
cs
xor
idivb
mov
mov
test
out
jmp
and
and
fwait
dec
xchg
imul
mov
aas
push
jmp
fs
outsb
pop
aas
int
mov
add
out
lret
mov
int
movb
push
jp
clc
stos
mov
add
ret
sub
in
sub
lds
fadds
mov
jp
or
dec
test
insl
mov
and
pusha
mov
inc
sub
mov
aas
enter
cmpsb
dec
push
push
fwait
insb
out
jno
sub
and
xchg
xchg
repz
insb
inc
push
sub
mov
xchg
sub
stos
les
int
xor
das
rcrl
addb
xchg
scas
rcrb
adc
les
enter
loopne
push
push
pop
loope
into
pop
dec
or
and
inc
fnstenv
add
pop
les
out
adc
into
ds
add
mov
test
lret
adc
fldenv
pusha
neg
add
xchg
lcall
lret
mov
ret
pushf
ret
std
test
push
lods
ret
sahf
aas
inc
jl
shrl
arpl
adc
fstpl
rclb
add
push
pop
mov
dec
cmpsb
je
xor
ret
adc
pop
out
iret
ret
adc
mov
pop
into
sub
pop
sub
cmp
scas
ret
gs
mov
sub
in
mov
lock
outsb
lods
lods
sub
inc
push
mov
add
mov
mov
push
out
push
in
mov
jbe
int
popf
hlt
sub
cmp
dec
push
rcl
test
jae
mov
jmp
sbb
add
mov
aam
ljmp
scas
cltd
stc
test
jne
fs
cli
or
dec
insb
inc
iret
jae
mov
out
ret
jns
rcrl
mov
xchg
mov
xchg
sbb
loopne
jo
jnp
sbb
fldenv
ljmp
into
shrb
mov
outsb
mov
xchg
push
cmpsl
dec
out
mov
dec
adc
dec
dec
iret
ffree
scas
fsts
cmpsl
inc
clc
shll
mov
je
xor
jge
cltd
aam
dec
sbb
push
mov
repz
je
fimull
aaa
jb
fwait
cmc
sbb
inc
jb
push
cmp
andb
orb
mov
sbb
jmp
mov
push
push
pop
pop
or
and
mov
mov
push
mov
mov
fcomp
add
fimuls
adc
xchg
adc
xchg
imul
mov
fidivl
mov
or
adcb
adc
mull
push
jmp
lahf
mov
and
aad
sub
lea
fiadds
popa
in
adc
push
jnp
cmp
sub
cmp
push
xchg
dec
sub
pop
negl
sbb
shlb
mov
addl
inc
es
rcll
lea
sbb
lret
mov
and
out
hlt
inc
aas
pop
aam
insb
lds
loopne
outsl
inc
rcr
leave
cmp
pop
xchg
rcrl
sti
sbb
mov
cmp
inc
xor
pop
pop
ret
mov
ljmp
mov
je
jp
aad
dec
std
shll
mov
xchg
jo
cmp
pop
inc
in
pusha
jle
xor
and
mov
jmp
xchg
lds
mov
pop
xor
mov
xor
adc
in
mov
daa
mov
sub
or
popa
inc
aaa
adc
ljmp
and
sub
bound
push
and
cmpsb
dec
add
vmovaps
xchg
cmp
outsl
fiadds
aaa
leave
jge
mov
cmpsb
add
pop
dec
nop
dec
je
jecxz
mov
shr
bound
in
js
mov
out
or
inc
mov
inc
cwtl
addb
out
pusha
decl
pop
jae
xchg
shlw
mov
ljmp
sub
mov
jecxz
sbb
push
fsub
push
clc
fistl
int3
movsl
lcall
imul
inc
xor
icebp
int3
xor
fsubl
enter
rolb
je
insb
push
cmpsb
les
js
mov
nop
daa
cmp
out
jae
and
ret
xchg
mov
loopne
out
inc
rolb
mov
sbb
sub
outsl
push
dec
inc
lods
inc
xchg
aad
sbb
sub
cwtl
bound
push
popa
sub
clc
loope
jmp
jb
push
add
sbb
push
out
leave
test
sahf
add
mov
call
jmp
in
inc
mov
pop
lret
mov
add
mov
xchg
rcrb
push
xlat
push
and
mov
mov
push
xchg
mov
gs
ljmp
xlat
mov
pop
nop
mov
int3
or
test
add
push
scas
xchg
test
jp
cld
cmp
add
out
jg
mov
and
or
mov
inc
xchg
outsb
shll
movsb
data16
sub
xor
outsl
jnp
cmp
and
inc
lods
or
lea
cmpl
loopne
std
inc
pop
mov
cld
cmc
cltd
adc
in
out
xor
cmc
outsl
and
sub
dec
pop
insl
ja
rorb
or
or
cmp
test
mov
js
dec
insl
mov
std
adc
pop
push
pop
popf
mov
jge
add
adc
push
sahf
xor
adc
adc
cmp
add
inc
fadds
je
dec
outsb
fdivp
xor
lock
or
and
movsb
int
push
push
mov
sub
pushf
notb
lcall
xchg
shl
dec
or
bound
adc
loopne
jge
push
pushf
test
mov
xchg
arpl
xchg
repnz
mov
adc
sub
sub
xorl
flds
dec
dec
pop
mov
mov
clc
ds
cmp
xor
gs
jns
lods
sub
scas
leave
mov
jnp
sbb
push
mov
sub
add
sub
cmp
mov
adc
stc
hlt
test
mov
out
rcr
test
add
mov
mov
sti
je
xchg
sar
andl
cltd
sbb
scas
adc
int
bound
or
sti
in
mov
push
roll
push
mov
mov
mull
int
mov
sbb
lods
jle
push
arpl
add
fcmovne
mov
rclb
cmp
push
jnp
sub
dec
pop
shrl
repz
jg
insl
or
inc
int
mov
es
movsl
mov
rcr
jo
nop
es
mov
arpl
scas
jp
aam
pop
lock
mov
fsubrs
sbb
sub
repnz
jecxz
push
fs
inc
pop
hlt
mov
leave
lock
clc
aam
add
rcrb
mov
mov
pop
aaa
loope
pop
and
loop
mov
xchg
testb
mov
inc
sbbl
shlb
int
ss
data16
jno
cmp
mov
add
mov
lds
lods
adc
scas
cwtl
sub
loope
iret
xchg
inc
bound
vfrczps
rolb
jb
xchg
fsubrl
inc
mov
push
mov
dec
test
xchg
out
dec
bound
inc
icebp
xor
stos
adc
pop
xchg
xor
cs
leave
test
faddl
clc
cmc
in
inc
call
cwtl
mov
sbb
cmp
loope
xor
jmp
xor
sbb
mov
mov
add
popa
add
and
mov
dec
incl
shll
mov
or
lret
sbb
lcall
pop
mov
icebp
jge
lods
pop
mov
xchg
mov
mov
sbb
xor
test
lret
arpl
lods
arpl
fs
negb
mov
hlt
xchg
jg
bound
addr16
cmp
push
scas
rcll
add
cmc
mov
pop
or
cmp
popl
add
subb
cli
inc
cwtl
cwtl
ds
or
jp
into
lods
cmpb
xchg
dec
movsl
fiaddl
subl
imul
jle
jmp
push
jg
cmp
out
loopne
loopne
lods
ss
xor
mov
icebp
xchg
dec
ror
xor
gs
sub
and
icebp
or
in
gs
fstps
sbb
sub
add
ljmp
xor
addr16
arpl
test
push
cli
out
push
adc
mov
sets
mov
mov
pushf
je
idivl
ret
pop
and
pop
int
mov
xor
add
mov
xchg
pop
xchg
cmpsl
shl
dec
mov
pop
jp
pop
ss
push
cmp
adc
repz
or
sbb
jecxz
ss
xchg
jp
das
aas
mov
cmp
idivl
js
daa
mov
xor
mov
ljmp
add
je
add
pop
sarl
sub
mov
cmpsb
push
idivl
push
lods
cmpsb
mov
call
fsubp
xchg
sub
sbb
mov
movsb
adc
and
insl
cmpb
push
mov
pusha
jno
dec
mov
push
in
adc
loopne
ret
or
pop
loop
mov
sbb
xor
pop
enter
sbb
jmp
add
mov
jne
insb
pop
daa
xor
test
scas
es
pop
orb
mov
inc
rorb
mov
outsb
fisubrl
mov
inc
pop
cmp
pop
xchg
mov
mov
lds
lahf
mov
movsb
cmp
rorb
mov
in
push
jle
mov
mov
enter
repnz
push
inc
mov
fsubrl
adc
fdivrl
xchg
push
push
push
cwtl
cmc
out
mov
xor
or
or
jo
ja
mov
push
dec
mov
icebp
inc
insl
test
mov
and
jo
cmpsl
mov
sti
and
popa
jne
or
adc
xlat
sub
inc
mov
adc
xlat
popa
ret
ljmp
test
test
shll
loop
or
pop
fisubrs
lcall
int3
arpl
jp
mov
or
int3
pcmpgtd
outsb
xor
rorb
pop
jo
push
push
cmpsl
and
sbb
adc
pop
in
mov
ljmp
jle
lds
ja
arpl
adc
insb
pop
push
lcall
cmp
cltd
or
jae
enter
std
inc
je
push
push
repnz
xchg
and
adc
mov
insb
mov
fwait
stc
mov
in
mov
pop
mov
mov
add
js
mov
and
rorb
mov
xor
pop
std
sub
movsl
in
xchg
popf
xchg
pop
loope
lods
aas
xchg
dec
jmp
sbb
adc
or
lret
ja
fdivp
cli
and
push
adc
fdivrl
fs
into
in
inc
mov
xorb
fstp
inc
lods
pop
sub
push
rcrl
mov
dec
leave
movsb
fstpt
mov
je
adc
xchg
aad
repnz
ret
pop
test
push
push
mov
push
or
data16
div
jmp
ret
call
icebp
jno
imul
adc
lret
add
push
push
or
ja
push
orb
jle
pop
out
clc
mov
adc
sbb
xorl
or
fnsave
shrd
filds
cmpsb
xchg
jecxz
fs
sbb
ret
pop
aam
lods
arpl
enter
push
xchg
repz
gs
cmp
int
mov
mov
push
int
cmc
mov
pop
cmp
inc
test
sti
jbe
nop
inc
pop
cmpsb
xchg
pop
jecxz
xor
sub
add
inc
dec
jle
out
pop
or
xlat
fistps
inc
loop
mov
fmulp
lock
insl
sbb
nop
int
mov
fnstsw
je
push
lods
mov
mov
shlb
cmp
inc
sub
add
imul
mov
push
enter
mov
mov
outsb
gs
jecxz
test
nop
stos
push
xchg
jle
pop
mov
ret
scas
aaa
mov
ljmp
repz
inc
imul
daa
sub
jnp
mov
mov
inc
movsb
sub
jne
jne
outsb
pushf
in
aad
out
mov
fcmovnb
incb
repz
pop
adc
clc
test
pop
or
ss
sbb
ljmp
arpl
popa
ret
daa
lret
pop
pop
and
sbb
jl
push
in
sti
dec
sub
mov
xchg
mov
lock
outsb
pop
shll
mov
add
adc
jl
jg
sbb
lahf
scas
sub
in
pop
mov
adc
test
xor
roll
fs
subl
popa
dec
pop
xchg
fidivrs
xlat
jns
sub
les
clc
sbb
test
push
sub
or
and
sarb
mov
and
ds
pop
les
lahf
int3
pop
je
cmpsb
arpl
inc
movb
iret
push
and
cli
loope
testl
and
push
call
or
orb
jge
aaa
and
jl
js
cmc
mov
repnz
popa
rclb
jb
and
and
negl
fwait
js
scas
xor
popf
mov
in
or
add
mov
inc
gs
mov
les
jmp
sub
popa
push
cmp
xchg
outsb
dec
cmc
roll
pop
mov
dec
repnz
out
mov
fmuls
inc
shlb
lea
mov
imul
mov
dec
dec
mov
stos
sub
pop
inc
adcl
or
aam
cli
mov
test
loope
fildl
mov
pop
push
jp
aas
movsl
mov
jae
xchg
mov
jp
out
jge
out
jge
shlb
out
shl
lods
subb
stc
fidivl
sub
jae
int
sub
push
pop
leave
or
es
inc
arpl
rcrb
rcrl
aaa
lds
mov
mov
xchg
xor
lret
mov
xor
into
imul
rolb
mov
insb
andl
cmp
mulb
in
pop
test
fs
dec
sub
sarl
dec
fadd
mov
clc
adc
jle
imulb
lret
or
aam
pop
stos
xchg
add
or
loope
inc
jecxz
test
int3
lcall
aaa
sbb
and
leave
aas
icebp
leave
fnsave
xchg
sti
sub
inc
jp
out
nop
fstps
or
mov
bnd
imul
test
sbbl
cmp
fcoms
dec
pop
call
add
lock
aas
push
xor
xor
repnz
sbb
add
cltd
cltd
rorb
aas
or
cmpsb
lcall
mov
push
pop
mov
cmp
call
std
dec
sbb
int
sbb
cld
fs
dec
pushf
jae
and
bound
gs
ret
shlb
loope
xchg
fistps
mov
pop
push
cmc
popa
push
sbb
bound
mov
fists
mov
adc
fdivrs
rcrl
cltd
adc
call
push
inc
and
pop
xor
sbb
mov
add
shll
lods
lret
mov
add
fsin
jb
in
faddl
jg
mov
call
jbe
js
cwtl
outsl
arpl
pop
cmp
inc
sub
xor
pop
popf
test
jne
movsb
pop
icebp
sub
xchg
push
dec
imul
jo
inc
pushf
insb
mov
stc
push
lret
sub
inc
mov
add
inc
ljmp
mov
mov
cli
jbe
dec
add
xchg
sbbb
data16
pop
loope
cmp
dec
lahf
xchg
jl
out
scas
in
mov
sti
mov
sti
js
shlb
dec
cmp
in
mov
bound
es
or
imulb
dec
out
pop
dec
test
push
lock
push
pop
pop
mov
sti
cmp
out
in
pop
jge
adc
pop
lret
scas
push
adc
nop
aad
inc
or
push
test
xlat
pop
jns
mov
push
mov
xor
adc
es
loop
and
and
adc
scas
add
dec
mov
lds
outsl
inc
sbb
enter
aaa
pop
push
xchg
scas
cmp
pop
add
pop
mov
int3
fiadds
push
fstpl
pusha
jle
iret
pop
or
mov
xlat
push
imul
xchg
scas
mov
lods
cmp
push
sbb
inc
mov
lock
lds
sbb
std
sub
adc
loope
je
aas
inc
js
inc
bound
fisubrl
push
test
lds
mov
sub
insl
movb
xchg
xchg
rolb
js
xchg
push
mov
inc
cli
insb
jl
mov
cmp
in
jbe
in
lods
mov
stos
cmp
imul
fldenv
sub
fcoml
lods
int
repz
mov
insl
sbb
xchg
push
push
lret
mov
and
and
shrb
daa
das
icebp
mov
mov
jp
inc
add
nop
sub
adcl
jb
mov
mov
sub
sbb
das
cmpsl
mov
push
sub
and
jg,pt
cmc
rcrl
lds
shrb
fwait
ja
or
aaa
mov
jo
iret
dec
inc
les
popa
andb
lock
out
pusha
call
in
aas
jecxz
inc
mov
fcomps
mov
push
daa
int
xchg
push
mov
addb
lea
or
addr16
out
mov
sub
sub
sti
xchg
cmp
jp
or
dec
jge
mov
out
pushf
sbb
mov
jge
xor
mov
sti
stc
and
mov
cld
clc
inc
jp
inc
fwait
push
push
loopne
xchg
jnp
mov
addr16
ds
mov
inc
and
mov
outsb
dec
call
mov
dec
aas
sub
add
sub
xchg
xchg
xor
jl
mull
int3
sbb
xchg
outsb
mov
pop
mov
jmp
jge
inc
mov
or
or
mov
pop
mov
pop
bound
pop
and
daa
fwait
aam
icebp
adc
cmp
jbe
clc
mov
cmpsl
and
test
pop
mov
and
pop
xor
mov
out
and
push
ljmp
ja
outsb
cmc
fdivs
dec
jl
push
test
scas
mov
sbb
push
sar
stos
inc
pop
mov
lods
sub
or
adc
add
pusha
nop
fbld
inc
inc
shrb
idivl
jnp
xor
leave
mov
inc
or
jl
leave
adc
insb
push
mov
jb
scas
xor
and
xor
xchg
or
jae
cmp
and
jmp
repnz
sbb
fs
mov
arpl
fsubl
aam
out
xlat
cmp
and
mov
add
xlat
outsl
fst
jecxz
or
jno
push
xchg
inc
mov
cs
jns
mull
xchg
add
cmc
cmpsb
ret
push
add
add
sbb
push
das
inc
jb
mov
data16
loopne
rorl
push
ret
loop
or
mov
or
mov
inc
setp
sbb
daa
push
insb
xor
loope
outsl
fdivs
lock
or
test
mov
xor
out
div
aas
loopne
and
outsl
cmpsl
jp
or
xor
aaa
loop
ret
ret
xor
rcl
dec
mov
aam
scas
pusha
bound
dec
das
loopne
adc
jns
xchg
xor
add
cli
enter
cmc
aad
jns
cmp
adc
imulb
jp
mov
leave
xor
ds
popa
push
ds
cmpsl
les
jae
sahf
cwtl
cmc
nop
clc
mov
cld
adc
jecxz
insb
cld
cmp
push
push
scas
repnz
ret
scas
add
movsl
ja
pop
in
mov
sub
cmpsb
mov
fdivl
outsl
jecxz
repnz
and
divb
loop
mov
fldcw
fwait
pop
xorb
push
fnsave
dec
into
jp
aas
add
mov
dec
ds
fidivrs
aaa
lea
cmp
pop
scas
and
cmp
inc
aas
fcomps
adc
mov
lret
inc
sbb
cmp
jle
lea
pop
push
jge
push
sbb
adc
and
jnp
push
int
jb
imul
mov
fcoms
inc
mov
mov
inc
push
dec
sub
xchg
sub
stos
sbb
rcl
shl
mov
clc
arpl
mov
or
fnstsw
imul
cltd
adc
bnd
insl
test
fdivrl
imul
loopne
orl
das
mov
outsl
xchg
test
jbe
mov
enter
int
ret
data16
xchg
mov
push
push
sbb
mov
jl
xchg
sub
xlat
loope
mov
sub
jo
cmp
cld
pop
and
dec
int
je
or
lds
orl
mov
les
add
xchg
mov
sub
pusha
ja
fiaddl
imul
xor
add
lret
mov
mov
xlat
xchg
xchg
add
out
cli
mov
popa
es
pop
scas
inc
xchg
js
repz
mov
lock
cmp
jg
fld1
test
fwait
movsl
jbe
cmp
lds
mov
adc
jl
jp
jp
pop
mov
pop
insl
mov
repz
add
lea
dec
mov
add
popf
mov
fcomip
dec
push
cmc
scas
lods
mov
stc
pop
xchg
test
sarb
push
clc
push
add
out
ds
aaa
lahf
cmp
jbe
pop
inc
sti
dec
or
sbb
pop
and
lock
shl
push
mov
loop
push
and
ret
lahf
rcrl
aam
or
jnp
cmp
lock
lahf
bnd
fidivrs
jno
jge
mov
dec
push
repnz
add
cwtl
in
outsb
push
adc
mov
adc
lret
or
xor
add
cmp
and
mov
dec
insl
ja
and
daa
fs
pusha
mov
or
sbb
adc
xchg
and
mov
imul
enter
sti
xchg
push
cmc
pop
sbb
dec
dec
add
stos
mov
and
jp
stos
mov
pusha
mov
sub
sub
or
pop
xchg
out
addr16
popf
cmp
dec
es
leave
xor
popa
xchg
aas
xchg
fstps
pop
adcb
mov
inc
pop
jp
mov
cmpsl
sti
adc
mov
les
js
popf
lret
fdivs
jae
cmp
fnstcw
mov
mov
inc
push
mov
cs
mov
popf
mov
cli
push
inc
xchg
and
and
xor
cmp
addr16
cltd
mov
xor
loopne
adc
push
or
sub
or
inc
aad
test
ds
orb
mov
and
sbb
aad
dec
sub
adc
shrl
cs
js
iret
in
in
int3
add
js
pop
setne
pop
sahf
lcall
aad
cmp
cwtl
add
mov
cld
sarl
jne
add
cli
xlat
adc
mov
cld
enter
inc
push
scas
dec
xchg
pop
pop
add
sbb
pop
add
jmp
fistpl
add
repnz
sub
and
jno
xchg
je
and
fiaddl
push
aas
mov
mov
insb
jne
stos
dec
frstor
xchg
std
cmpsl
cmp
sbb
jne
jno
pop
xchg
es
and
pop
pop
setp
sub
lods
clc
outsl
or
add
xchg
fnstenv
push
rcr
xor
cmc
push
mov
insl
push
xor
cmp
mov
sub
negl
jmp
mov
dec
xor
inc
xchg
add
movsb
aam
test
filds
faddl
xchg
shlb
xchg
add
sahf
test
push
mov
cltd
lds
jbe
addl
fisttps
xchg
mov
or
jge
mov
or
jl
or
sub
pop
test
cmpl
xchg
scas
jg
mov
fwait
lods
scas
mov
mov
cli
mov
push
sbb
mov
and
cmp
outsl
movsb
sahf
cmpb
inc
push
adc
mov
push
popa
dec
jne
mov
pop
jne
mov
mov
sbb
jle
cs
shlb
mov
xchg
call
les
pop
mov
negb
lods
stos
lret
fimuls
jecxz
jp
call
add
pop
pushf
lret
jnp
inc
cmc
aam
xchg
mov
xchg
push
stc
xchg
cld
loope
mov
mov
mov
mov
pusha
add
mov
dec
jge
mov
ficompl
cmp
bound
lods
xchg
iret
xor
xchg
shrb
cmc
dec
repz
push
or
test
adc
add
adc
inc
mov
lock
movsl
sbb
call
jnp
or
movsb
sarb
jmp
lock
push
test
xchg
and
call
std
popl
aam
in
jno
lret
dec
stos
inc
cmp
cmp
loope
xor
ja
cli
push
and
jmp
in
lock
lahf
fidivrs
and
cmpsl
les
mov
push
movsl
and
imulb
fldl
adc
mov
add
fnstsw
mov
ss
pop
jns
outsl
sahf
pop
sti
test
xchg
loopne
pop
add
jg
in
aas
cmpsb
jecxz
jae
iret
jg
lock
mov
testb
loop
jg
repnz
cmp
loop
add
mov
lret
mov
add
mov
and
sub
sub
pop
popa
insb
push
push
lcall
lds
pop
in
mov
in
lods
js
into
adc
es
movsl
ret
mov
insb
dec
or
loopne
jle
repz
into
jns
in
push
roll
lods
xlat
lret
push
pop
xchg
std
lret
mov
xor
in
add
push
insb
pop
negb
in
mov
mov
aas
xchg
pop
sbb
in
out
outsb
out
jbe
outsb
dec
ljmp
nop
xchg
mov
push
out
pop
lock
inc
leave
add
into
mov
in
cmpsb
sub
pop
movl
adc
xchg
inc
sub
xchg
or
xlat
push
imul
out
stos
add
cmpsl
dec
jbe
add
pop
xor
adc
add
xor
sub
loope
pop
rcrb
ss
mov
mov
jae
call
arpl
cmc
push
mov
cmpsl
pop
std
xchg
cs
popf
in
es
pavgw
cmc
mov
mov
push
mov
xchg
test
imul
adc
jbe
pusha
inc
out
leave
testl
inc
scas
sbb
mov
sub
rol
pushf
fidivrs
andb
jg
pop
sbb
dec
and
jnp
fdivs
movsb
mov
inc
test
add
push
lods
cmp
xchg
mov
pop
adc
adc
add
sub
in
mov
outsl
xor
inc
ljmp
adc
xlat
dec
push
fdivrs
mov
and
xor
popa
insl
add
jle
xor
push
mov
push
add
pop
sub
imul
sub
ljmp
ljmp
add
ja
fidivrl
outsl
sbb
lods
adc
out
jae
lock
push
or
data16
mov
jns
out
movsl
dec
xchg
dec
sub
push
pop
add
mov
jg
jmp
jne
test
adc
or
sbb
loop
jb
push
inc
repz
mov
rorl
insb
bound
xchg
mov
jecxz
inc
scas
or
call
cltd
sbb
lods
pusha
mov
in
add
inc
or
pop
mov
and
pusha
dec
mov
nop
cmp
divl
xor
andl
in
jae
mov
sbb
xchg
cmpsl
and
mov
add
stos
insl
and
pop
mov
rcl
stos
jne
pop
sub
call
mov
nop
push
xor
cmp
into
sti
mov
repz
jnp
mov
ficomps
cmp
sarl
mov
daa
test
mov
out
inc
fidivl
xchg
jo
dec
xrelease
es
jns
stos
shlb
stos
loope
dec
jne
xor
xchg
scas
mov
enter
sbb
inc
push
push
jmp
addr16
pop
scas
outsb
mov
xor
mov
dec
pop
push
jp
xchg
cli
repnz
in
repnz
mov
and
sub
cmc
pop
dec
xchg
adc
call
subl
outsb
jbe
cmp
aas
jle
pop
xrelease
test
mov
lahf
pop
dec
into
imul
movsb
movl
xor
and
push
inc
mov
push
push
fs
push
dec
fsubl
xor
int3
test
cmpsl
dec
sub
xchg
inc
jp
sbb
xchg
adcl
rcrl
mov
aad
int3
push
add
mov
sub
and
lods
icebp
subb
lods
inc
lock
test
lods
mov
adc
cmp
xchg
repnz
add
jnp
cmpsb
push
xchg
mov
push
leave
rorb
add
xchg
rclb
and
pop
fnstsw
mov
jne
jecxz
lret
adc
cltd
mov
and
mov
ret
roll
idivl
xchg
xchg
inc
mov
mov
inc
and
ljmp
mov
sbb
jecxz
icebp
cli
sar
es
aaa
cltd
jle
jmp
test
movsb
mov
cwtl
push
mov
mov
sti
xchg
aaa
push
xor
mov
sarb
test
dec
scas
pop
pushf
adc
aaa
scas
stos
fs
sbb
fbld
pop
push
mov
jge
fisubl
in
push
push
jno
cmp
dec
ljmp
cmc
mov
mov
loop
imul
ret
jb
xchg
negb
shrl
xchg
push
test
xchg
leave
lods
or
mov
mov
ret
vpunpckhdq
not
in
js
cmc
test
lds
movl
bnd
cmp
into
dec
leave
jmp
mov
lret
fxch
push
leave
pop
mov
adc
add
orb
sbb
inc
ret
pusha
in
arpl
and
shl
pop
lock
mov
cmpsb
mov
sub
jo
orb
inc
rcl
mov
add
ss
push
insb
push
jo
in
std
xor
add
pop
sahf
cmp
inc
xor
ss
push
testb
cmp
sbb
inc
jbe
in
jge
mov
sahf
and
loop
mov
and
cs
adc
dec
stos
mov
in
addr16
into
lret
iret
mov
sti
inc
int
mov
subb
mov
add
adcb
lea
jns
xchg
rorl
mov
jp
and
push
outsl
push
cmp
cmp
inc
cltd
sub
fistps
xor
pop
inc
push
jns
dec
je
push
jno
pop
sub
sbb
sbb
lock
sbb
mov
pop
in
lahf
jne
inc
cmp
jmp
inc
popf
sub
fidivs
push
cmp
push
stos
cwtl
aas
daa
popa
push
and
mov
inc
and
xchg
roll
jmp
fiaddl
adc
ds
mov
xchg
or
fs
mov
dec
and
sbb
loope
imul
cli
je
pop
mov
int
sbb
mov
cmp
lahf
mov
mov
mov
lods
xor
jg
sbb
push
dec
fistps
xchg
mov
mov
lahf
add
inc
push
cltd
push
call
add
xor
lcall
cld
pop
std
mov
jl
pop
shr
hlt
adc
ret
lret
repz
jecxz
add
mov
lds
int3
aam
push
lcall
orl
push
mov
mov
lret
test
inc
in
xor
addl
pop
daa
dec
mov
out
and
dec
into
cmp
dec
or
sub
adc
xor
lret
cmpsl
push
inc
popa
jge
or
ret
push
push
jbe
clc
cmp
xor
fs
sbb
outsb
cmp
mov
push
and
pushl
pop
jp
imul
sarl
xchg
pop
sbb
jl
lret
dec
sub
push
cltd
cmp
pop
lods
adc
arpl
insb
sbb
mov
mov
and
shll
adc
loopne
cmp
divb
sub
iret
scas
ja
cmc
pop
mov
roll
cmp
push
push
inc
sub
adc
cltd
stos
cltd
sub
mov
jp
jmp
imul
and
ja
insb
clc
aam
mov
pop
dec
lea
addr16
lock
mov
push
setg
or
and
jle
push
sbb
or
pusha
xlat
adc
jns
mov
mov
lret
push
jns
jb
cmp
andl
pop
popa
push
nop
add
and
sub
jecxz
add
inc
mov
fiadds
test
lahf
gs
sub
mov
push
in
mov
inc
gs
add
adc
mov
or
movsl
cmp
pop
xor
sbb
fnstenv
cmpb
inc
mov
dec
sbb
cmp
into
cli
dec
cmp
in
push
das
ja
sbb
mov
sbb
insl
test
dec
lods
push
aaa
fwait
test
fisubs
xor
mov
jle
test
mov
jne
jo
and
in
pop
adc
out
mov
add
lods
lods
rcrl
xchg
pop
imul
xchg
stos
dec
cmp
cs
inc
popl
inc
mov
cmpsb
mov
int
aad
enter
loop
daa
jb
imul
fistl
sbb
dec
inc
test
sbb
or
xor
insb
lret
enter
jl
jae
gs
fldcw
shlb
es
mov
lds
pop
pop
jo
mov
les
or
ja
sbb
loopne
mov
out
pop
dec
pusha
data16
pop
inc
aam
cmp
call
inc
lds
andl
lods
mov
scas
pop
cmpl
call
cmpsl
scas
cmc
scas
push
cwtl
loope
sbb
inc
ss
cmp
add
adc
ds
pop
mov
cld
dec
test
mov
js
cltd
xor
cmpsb
jg
int3
dec
or
lock
stos
test
insb
xchg
stc
and
inc
cmp
adc
inc
sti
mov
jbe
std
sbb
or
push
sub
push
mov
sbb
sbb
test
leave
call
test
loope
idiv
clc
pop
into
xchg
sbb
or
int
bound
jmp
mov
cltd
or
cmc
ficoms
push
or
test
enter
sbb
push
adc
adc
or
loop
stos
cltd
jl
jecxz
fwait
lods
divb
stos
push
jno
je
add
shll
jmp
sbb
mov
in
imul
je
shll
cmp
jno
add
rcll
jmp
jg
push
and
push
in
je
popa
loop
aad
loope
hlt
sbb
xchg
cld
gs
mov
bnd
lods
mov
jno
test
sbb
push
sub
fdivl
mov
mov
adc
xor
mov
sbb
cli
dec
mov
xorb
out
xchg
pop
pusha
out
sbb
loopne
fdivl
scas
aam
int3
mov
dec
mov
add
test
in
ret
jmp
add
int3
in
notb
cwtl
add
scas
jle
test
xchg
bndstx
mov
xchg
in
dec
rcr
mov
sub
jl
or
push
inc
sub
xor
pop
pop
aaa
mov
mov
pop
mov
sbb
mov
jae
and
lea
and
cmp
cmp
xor
pop
push
ljmp
stc
jmp
inc
add
imul
xchg
data16
leave
ret
xchg
push
scas
aaa
mov
mov
sub
push
jo
call
pop
push
mov
and
out
cmp
pop
mov
or
aas
lds
dec
or
mov
mov
jae
ljmp
mov
nop
mov
cmpsb
into
stos
repnz
pop
lods
jmp
fwait
arpl
stos
aas
push
mov
or
lret
jge
push
adc
and
fidivrs
sbb
rcl
jl
les
sub
cmp
pop
fldl
aad
push
sbb
les
push
mov
dec
jnp
push
xchg
push
pop
lret
rcll
fcompl
fildl
imul
cmp
imul
jne
shll
out
imul
fwait
popa
or
pop
and
outsl
push
cmpb
jb
inc
fstpt
sbb
mul
sbb
sub
adc
mov
inc
in
or
jp
push
sbb
jbe
fidivrs
jnp
test
in
subb
push
sub
call
or
lahf
jo
out
cmp
add
and
rclb
push
xchg
lock
ja
sbb
xchg
test
add
int3
adc
pop
push
fdivl
loope
scas
dec
dec
pop
prefetch
dec
xor
adc
inc
outsl
cld
addr16
jno
mov
stc
sbb
insl
adc
lret
cmp
aam
dec
mov
dec
aam
xchg
xchg
mov
add
xor
shlb
mov
fwait
insb
xor
pushf
sbb
roll
push
ret
cmpl
push
add
adc
push
cmp
dec
mov
mov
jg
dec
dec
mov
dec
or
ja
stos
out
outsl
mov
test
insb
fists
and
icebp
dec
lahf
mov
xorb
add
add
and
scas
pop
lahf
or
in
imul
repnz
sbb
mov
cmp
gs
test
fldenv
mov
in
sbb
mov
pushf
popa
je
push
xchg
fs
or
js
lcall
stos
cltd
push
mov
mov
dec
cmp
lret
sbb
adc
mov
sbb
mov
nop
adc
and
mov
push
xor
sbb
xor
aam
dec
pushf
inc
fists
cmpsl
subb
es
jno
sbb
in
mov
push
mov
mov
and
repz
movsb
jb
fldcw
daa
xor
cwtl
push
inc
push
je
mov
sub
xor
push
push
push
cltd
nop
das
jp
xchg
sub
pop
stos
aad
test
arpl
scas
sub
cmpsl
push
jp
std
cs
xor
dec
stc
adc
and
and
add
xlat
pushf
movb
dec
sub
ljmp
repz
push
push
xchg
cltd
cmpb
mov
das
out
ret
add
inc
jle
xor
mov
jle,pt
jge
lds
push
sub
mov
gs
pop
pop
cli
inc
pop
and
ss
imul
sbb
xor
push
xchg
lock
jge
mov
cltd
aaa
in
icebp
xor
fistps
push
xchg
cmpsl
pop
add
push
ds
jl
test
cmp
jge
or
pop
int
fxch
cld
xor
sub
xor
data16
jmp
fmull
xorb
xchg
repnz
xchg
stc
xor
jp
dec
xlat
sub
or
inc
gs
inc
lcall
fstps
movsb
in
push
das
fisttpl
cltd
outsb
imul
cmp
popa
cs
mov
jl
aam
xchg
push
fldcw
fadd
jmp
aad
aaa
push
in
mov
push
bound
test
mov
add
out
sbbb
sub
cmp
mov
loope
adc
fwait
pop
inc
movsl
lock
fnstsw
sbb
popa
xchg
sar
mov
mov
push
out
fwait
mov
punpckhbw
mov
mov
test
add
mov
push
xchg
xchg
adc
pop
rolb
cmp
ficoml
mov
popf
testl
and
shl
arpl
in
xchg
cmp
sub
rcr
sbb
sbbl
and
push
mov
dec
sbb
and
mov
fistps
pop
cmp
dec
cwtl
push
sbb
pop
xor
and
into
inc
mov
push
in
andl
pop
and
xor
inc
in
js
xchg
mov
lea
je
mov
mov
jb
xchg
out
or
popf
daa
fimuls
add
out
mov
lea
add
nop
jns
cmp
and
dec
insb
nop
dec
xchg
sub
sub
fisttpll
adc
fisttps
jno
rcr
hlt
cmpsb
push
pop
xor
cwtl
sub
movsl
sbb
xchg
jmp
test
dec
jb
jbe
sub
adc
and
and
test
mov
fildll
xchg
in
sahf
ret
jle
push
cwtl
pushf
sbb
aam
stc
mov
push
mov
lahf
push
push
imul
leave
mov
cmpb
sbb
enter
jns
pushf
sub
inc
pop
and
pusha
pop
in
pop
push
popf
add
unpcklps
dec
stc
cmp
sub
pop
jp
mov
sbb
fdivp
inc
cmp
rcl
lcall
test
adc
jo
frstor
xchg
push
dec
movsl
je
xlat
ret
cmpsl
mov
gs
or
add
jnp
bound
rclb
sbb
or
pop
std
mov
mov
mov
cmc
jp
je
sub
sti
cmp
dec
stc
jne
inc
adc
inc
popf
sub
jge,pt
sbb
mov
es
out
loop
rcll
popf
xor
mov
arpl
pusha
outsb
dec
push
fcompl
add
scas
add
lds
ret
cmpxchg
adc
jl
mov
insb
cli
xlat
lcall
scas
jo
or
out
sbb
xor
lea
xchg
push
out
loop
dec
jo
rcrb
push
xchg
loop
int3
or
cmp
push
ljmp
push
mov
jmp
add
mov
iret
mov
pop
aad
movsl
push
jg
xor
lock
arpl
cmp
cmp
sub
in
out
mov
mov
stos
cmp
iret
lret
xor
mov
ror
daa
fimuls
ficoml
ss
and
sbb
iret
aas
aas
and
clc
out
outsl
out
pop
mov
pop
test
pop
or
enter
cwtl
xchg
jle
stc
gs
out
fildll
pop
sbb
xor
mov
jb
cmp
mov
mov
mov
idivb
int3
inc
cmpl
sbb
adc
or
daa
pop
jge
jmp
xor
push
ja
push
popa
loop
jmp
jl
lret
push
inc
insl
dec
aas
fisubs
ret
sbb
loopne
repz
andl
arpl
dec
fisttpll
ljmp
pop
jmp
ljmp
and
jne
scas
xchg
repnz
inc
mov
push
jg
adc
fidivs
add
stc
jmp
adc
push
dec
test
and
cmp
and
xchg
leave
leave
cmp
jge
cmp
mov
xlat
dec
adc
jnp
push
mov
adc
sbb
cmpsb
inc
dec
clc
dec
or
inc
push
pop
and
pop
mov
int3
or
aas
jl
lret
adc
jno
stc
lea
dec
jb
push
adc
push
inc
in
adc
aam
popa
and
addr16
repz
dec
pop
rolb
in
add
pusha
lods
rorb
mov
stos
std
lahf
and
aam
das
js
sbb
xchg
mov
loop
xchg
lea
inc
mov
xor
jns
and
or
pop
inc
mov
call
cwtl
in
and
lods
fsts
imul
push
icebp
lods
adc
xor
mov
pop
add
sahf
pushf
and
shr
pop
into
out
loop
push
std
jo
imul
hlt
and
push
dec
cli
ja
mov
jae
fucom
enter
leave
cs
pushf
or
aam
sub
ja
std
mov
test
fadds
push
test
pop
aad
je
shlb
mov
adc
in
sub
push
int3
jo
ds
add
sbb
ficoml
stos
mov
lods
push
mov
sar
imul
push
inc
xchg
cli
or
and
jnp
or
lret
ljmp
sbb
inc
push
mov
lretw
out
sbb
sahf
in
inc
aaa
orl
hlt
test
mov
add
lea
iret
sbb
fsts
jg
repnz
push
inc
in
cmp
es
ds
jge
dec
fldenv
inc
cwtl
mov
xor
je
mov
sbb
clc
pop
mov
cld
ja
xor
cltd
ret
or
mov
cli
add
outsl
add
inc
lea
popf
sbb
mov
cmpsl
popa
cmp
cli
stos
jne
pop
mov
je
sub
sub
mov
mov
cmp
pop
inc
icebp
shr
shlb
nop
jb
andl
aaa
clc
add
jbe
movsl
repz
jl
iret
cmp
mov
sbb
stos
mov
cmpsl
dec
leave
fwait
mov
dec
cmp
sub
xor
add
xchg
ljmp
cwtl
pop
sbb
sar
sub
cmp
jns
aad
aad
add
leave
jmp
sbb
and
jns
or
ret
lahf
in
push
lods
sub
test
and
addr16
jecxz
ret
adc
pusha
insl
dec
xorb
mov
inc
jmp
ret
clc
mul
icebp
popf
xchg
hlt
push
cmpsl
enter
pop
lea
gs
and
xchg
inc
jecxz
jb
xor
mov
pop
sub
aam
xchg
inc
sbb
popf
pop
push
jecxz
adc
inc
fmull
aam
je
lret
std
jno
push
cld
push
rorl
jno
mov
out
sahf
cmp
arpl
jbe
inc
jecxz
dec
sub
scas
jmp
xor
jns
leave
cmp
je
push
or
loop
int
sub
rclb
sub
cli
mov
pushf
or
das
rolb
fstps
stos
test
dec
push
mov
scas
pop
bound
sbb
int
aaa
or
xlat
out
dec
mov
dec
sbb
lret
data16
xor
sti
out
pop
xchg
mov
cld
jle
stos
xchg
js
repnz
addb
or
dec
push
rolb
repz
and
mov
push
mov
jg
dec
lds
aas
cmp
fldenv
fldcw
nop
jl
inc
out
jp
sbb
inc
test
sbb
cwtl
mov
push
and
xor
cmp
mov
sub
sbb
rorb
gs
ss
cwtl
sbb
imul
push
ret
push
cmpb
rclb
mov
sbb
fidivrl
adc
push
xor
dec
jecxz
shlb
pop
je
xchg
jge
lahf
and
mov
mov
sub
pop
js
inc
xor
push
loop
loopne
add
repz
out
mov
test
cltd
in
scas
sub
inc
mov
pop
sub
shl
movsl
pushf
nop
mov
dec
and
mov
inc
orl
shlb
paddb
test
xor
sbb
loopne
dec
inc
jecxz
cmpsl
jne
cmp
or
ss
mov
mov
mov
mov
push
mov
cld
mov
arpl
ss
push
sti
js
inc
sahf
inc
shlb
sti
mov
not
xchg
ljmp
mov
je
sti
push
dec
cmpsl
push
loopne
mov
loopne
popf
adc
ss
popa
lahf
icebp
jb
mov
cmpsb
in
add
and
pop
pop
out
enter
enter
popf
out
xchg
push
scas
mov
ret
add
fmul
cmp
cmpsl
jne
js
xchg
imul
rcr
enter
xchg
mov
xor
push
inc
out
data16
pop
mov
mov
lods
arpl
stos
cmpsl
negl
mov
push
push
xchg
test
or
jns
fadds
imul
push
mov
inc
jnp
lcall
add
out
leave
shll
jmp
int
xor
push
lock
pusha
adc
jl
dec
jae
jmp
mov
enter
gs
add
mov
inc
roll
je
cmp
movsb
loop
stos
ret
clc
lds
dec
or
push
loop
and
mov
mov
ror
aaa
cld
and
test
dec
cmpsl
sub
in
xchg
or
lret
sub
fidivl
jle
add
mov
outsl
movsl
mov
jecxz
out
add
scas
ljmp
fs
scas
repz
clc
cli
or
mov
pushf
pmaxub
out
sbbl
cwtl
sub
out
sbb
negb
and
xchg
js
mov
fxsave
inc
int
data16
gs
adcb
mov
jle
test
jmp
sub
mov
and
xchg
pop
pop
rorb
gs
sub
je
in
dec
push
xor
fmulp
stos
outsb
push
out
xchg
in
dec
adc
pop
sbb
shrl
xchg
rclb
mov
dec
hlt
nop
ss
mov
pusha
in
aam
mov
loop
cmp
fcmovnb
xchg
cld
pusha
test
pop
mov
or
imul
imul
add
aaa
sub
gs
inc
add
shlb
in
imul
fisubs
cmp
adcl
mulb
adc
rol
std
adc
aaa
repnz
loop
fbstp
mov
and
dec
jmp
addr16
dec
outsb
in
in
push
testl
imul
fmull
xchg
sbb
xchg
push
repnz
mov
ret
pop
popa
dec
aas
addl
out
leave
xchg
mov
adc
jne
cwtl
fistps
mov
test
xchg
aam
lock
pop
inc
testb
push
inc
push
cmp
fdivrl
clc
es
fcomp
cmp
xlat
xchg
or
jo
mov
add
adc
rep
and
dec
push
jae
fsubl
lods
pop
in
jae
pushf
jge
sub
repnz
mov
xchg
lock
adc
cmp
dec
cmp
lock
cltd
mov
cmp
shrb
mov
and
iret
dec
xor
sub
sbb
testb
stos
out
std
mov
or
adc
fnstenv
push
jb
inc
loop
in
pop
cmp
ljmp
jle
hlt
inc
pop
xchg
adc
lds
fnsave
insb
or
leave
mov
movsl
pop
inc
adc
mov
push
in
sub
data16
sahf
mov
mov
or
out
int3
inc
jno
loope
mov
mov
popa
scas
mov
cmpsl
icebp
mov
jae
or
outsb
ret
jle
outsl
mov
mov
sub
hlt
cs
mov
pop
mov
test
pmulhuw
icebp
mov
xor
add
sbb
mov
mov
or
cmp
dec
xor
sbb
mov
fsubrs
jno
push
xchg
push
xor
das
jns
pop
cwtl
mov
adc
pop
sub
push
cld
loope
cwtl
sbb
in
sti
and
xchg
and
mov
adc
inc
xor
lret
ret
cmpl
xchg
pop
sub
sub
int
inc
jge
test
cmc
loopne
in
stc
mov
pop
in
out
xor
daa
pop
pop
cmp
test
xor
mov
push
addb
jno
testl
lods
adc
mov
adc
pusha
in
into
add
popf
jnp
cld
or
jbe
cmp
or
mov
ljmp
pop
ljmp
test
int
and
out
inc
xchg
popa
and
mov
lea
pop
es
xor
lahf
xor
mov
push
xchg
push
pop
aad
jae
sbb
sbb
not
jo
out
fdivp
xor
jo
shr
daa
mov
dec
push
mov
xorb
jecxz
or
mov
dec
test
add
imul
jge
push
and
mov
cmc
or
ss
clc
pop
and
push
mov
sub
xchg
xchg
into
and
fiaddl
pushf
dec
call
jmp
divb
repz
or
jne
inc
inc
repz
adc
jne
outsl
lods
inc
bound
fwait
sbbb
add
test
loop
jno
and
popf
shrb
mov
sbb
pop
lcall
pop
sub
adc
mov
in
aam
sbb
pop
inc
and
jl
lcall
xchg
or
push
sbb
aad
lret
dec
dec
in
arpl
repnz
stos
push
fiadds
movsl
add
inc
aas
lods
mov
jmp
mov
int3
mov
dec
mov
cmp
aam
clc
add
lret
test
xchg
dec
xlat
xor
add
stos
clc
xlat
testl
push
push
mov
mov
arpl
movsb
push
fistpll
fisubl
mov
cmp
cmp
shl
popa
sub
xor
inc
add
fsubrl
dec
jle
insb
pop
mov
and
jmp
xor
xor
adc
scas
mov
adc
mov
stos
shlb
mov
std
jbe
xor
xchg
xchg
cmpsl
stos
jp
inc
iret
int
push
pop
mov
pop
jne
push
int3
aas
jg
sti
addr16
js
fbld
loopne
jecxz
popf
jle
mov
jle
xor
xor
sbb
sub
add
mov
mov
dec
sti
xlat
xchg
cmp
push
cltd
cmpsb
jecxz
js
jg
cmp
cmc
push
in
cmpsl
jns
pop
push
xor
lahf
pop
jge
out
in
mov
jno
push
and
mov
cmp
xchg
mov
clc
out
pop
aaa
cs
xorb
or
mov
fdivrl
inc
rolb
push
out
jg
mov
and
xchg
scas
sbb
xor
ss
mov
mov
xor
jb
mov
xchg
pshufw
aam
mov
outsl
data16
das
sub
in
lea
push
cltd
bound
and
sub
jbe
loope
sbb
xchg
bound
mov
inc
jecxz
pop
pop
rcrl
adc
pop
movsl
push
jne
push
jne
outsb
out
push
aaa
sub
push
cwtl
lods
add
inc
and
xchg
arpl
pushf
push
sbb
mov
pop
fldenv
cmp
xchg
in
and
popf
lods
mov
test
nop
xor
fisubrl
inc
xor
mov
clc
fs
nop
push
test
inc
shrb
inc
out
and
ja
ficoml
sub
lock
jmp
mov
sub
or
test
cmp
sbb
stos
pusha
les
pop
loopne
ss
mov
cwtl
add
mov
push
push
filds
lcall
or
and
test
adc
scas
add
sub
mov
es
addl
and
ret
jne
pusha
sub
outsl
sub
jmp
cmp
subb
pop
inc
movsb
and
les
popf
sti
cmpsl
outsb
adc
and
int3
fildl
mov
pop
mov
jb
aaa
movsb
inc
gs
out
lods
push
and
sahf
test
push
loopne
gs
inc
xchg
outsl
add
fmuls
rcrl
or
popa
js
inc
outsl
lret
or
cmpsb
daa
mov
dec
scas
orl
daa
jmp
mov
test
cmc
mov
sub
cmp
xor
fs
sti
addr16
pop
pop
pop
adc
cli
push
test
jmp
pop
pop
nop
xor
lcall
int3
sub
cmp
mov
in
out
add
andl
dec
dec
repnz
ja
addl
shr
sub
inc
mov
pop
jg
sub
xor
and
mov
add
and
pop
ja
dec
push
or
push
inc
jns
in
hlt
enter
jl
sahf
inc
xchg
out
shl
aam
fwait
into
rcll
jb
inc
ja
mov
adc
adcb
roll
nop
movb
xchg
cmp
iret
ljmp
dec
dec
pop
lret
out
mov
jmp
test
add
sbb
push
fstpt
aam
lcall
cld
repz
jnp
shl
fcompl
cmp
xchg
ror
jae
inc
xlat
or
dec
adc
aad
jae
fisttpl
adc
add
insl
inc
rorb
cmp
adc
jl
outsb
sub
ds
push
pusha
lcall
movsl
rolb
je
ss
cmp
test
in
or
dec
mov
shll
lret
call
mov
ds
push
push
ret
adc
push
mov
and
icebp
out
aas
in
cwtl
and
xorl
les
int
or
fidivrs
stos
aad
aad
add
paddb
jns
inc
rcrb
les
cwtl
movsl
mov
and
daa
mov
lret
pop
sahf
jle
sti
adc
mov
in
xchg
pop
lods
add
test
pop
stos
inc
adc
rclb
loop
mov
add
inc
mov
sti
jae
and
arpl
mov
mov
dec
dec
push
xchg
in
stos
jae
test
lret
rcll
out
and
xchg
add
xchg
ljmp
jno
or
out
mov
sbb
outsb
mov
fidivrs
dec
rcrl
dec
add
fs
adc
mov
and
stos
das
hlt
in
xchg
shr
cmp
rol
adcb
popa
fisttpl
ficomps
and
sbb
push
push
push
sarl
pop
std
xchg
adc
into
movsb
add
dec
jp
push
mov
xor
jnp
stos
or
push
loop
push
pop
test
out
add
fiadds
xchg
fistpl
add
rorb
add
and
andl
adc
jbe
into
aad
nop
movsb
or
das
xchg
sub
sbb
jmp
sti
jmp
sbb
and
dec
lea
test
fwait
das
into
jp
xlat
push
push
inc
pop
aas
les
xchg
and
in
dec
inc
or
icebp
mov
xchg
push
push
jne
pop
sub
insl
enter
push
movsl
sbb
pop
fcmovne
in
pop
xchg
out
popf
xlat
mov
int
icebp
cmp
insb
cmpsb
ljmp
and
in
xchg
jne
mov
inc
int3
movb
cmp
mov
add
jmp
lea
push
test
adc
cmpsl
sub
or
cmp
call
xor
jnp
test
loopne
sbb
movsb
mov
fs
pop
iret
fs
lods
addb
jge
sbb
or
and
in
lcall
icebp
fsubl
subl
sahf
add
xchg
movd
cmp
xor
push
cli
mov
cld
cmp
into
punpcklbw
push
jmp
das
mov
std
mov
mov
je
dec
cmc
inc
mov
in
or
cmp
push
xor
lods
push
sti
fbstp
scas
shlb
xor
sub
add
ret
cmc
xor
mov
test
call
hlt
stos
ds
jl
mov
imul
rclb
sahf
mov
in
sub
mov
sbb
cmp
addb
into
push
das
adc
xor
dec
es
fwait
xor
cmp
jo
xor
adc
mov
std
fsubs
icebp
inc
repnz
jmp
add
sbb
adc
lret
xchg
mov
inc
mov
mov
and
nop
dec
popf
xlat
xchg
dec
cltd
dec
in
lret
sub
cmp
stc
out
popl
cld
ud2
fisubrs
ss
mov
mov
mov
push
cld
and
movsl
push
mov
cmp
std
sbb
mov
mov
stc
aaa
rcl
sub
ljmp
lock
jecxz
xchg
mov
xchg
mov
pop
mov
inc
mov
sub
and
mov
fiaddl
xchg
mov
pop
jns
xchg
je
imul
shll
stc
mov
push
sub
movsb
push
in
dec
loopne
inc
inc
xchg
cmp
std
movsl
cli
mov
mov
mul
ljmp
outsb
stos
jecxz
push
fidivl
sbb
dec
insb
es
cmp
cwtl
ja
add
addl
aad
or
les
clc
mov
jns
ficoms
test
or
jmp
negb
nop
or
shlb
stos
xor
in
es
dec
imul
in
outsb
mov
xor
push
cltd
xchg
enter
jns
aaa
out
jae
cwtl
push
rol
mov
jle
push
mov
testl
in
fdivl
into
lret
popf
dec
fcoms
div
insl
mov
pop
pop
sti
sub
iret
mov
adc
push
sbb
sub
pop
mov
into
xchg
jle
stc
popf
inc
fldcw
sbb
mov
jmp
ljmp
loopne
mov
mov
jo
inc
adc
cli
cmp
lods
jbe
stos
or
xchg
cld
add
push
sbb
pop
mov
add
out
into
or
adc
mov
iret
pop
adc
testl
dec
mov
push
mov
mov
outsl
and
push
scas
push
sbb
stc
les
ret
mov
aas
mov
pop
scas
xchg
sbb
and
pop
nop
mov
pop
cmpl
sub
ret
xchg
ret
sbb
addl
jmp
sbb
aas
ja
test
decb
aam
ljmp
push
pop
out
test
mov
cmp
mov
iret
cmc
call
xlat
ds
sub
add
mov
fildll
pop
aad
ja
in
jbe
mov
popf
or
icebp
sub
ret
dec
fwait
sbb
jg
pushf
pop
pushf
leave
and
aad
push
rorl
out
mov
outsl
bound
jmp
inc
aam
cmpsb
int
cmpsl
mov
jne
test
icebp
and
add
sbb
cld
xchg
push
push
stos
mov
cmp
out
lods
jge
fistl
aas
jge
out
dec
xor
pop
push
sbb
enter
fs
xchg
jb
repz
lahf
inc
xchg
mov
ljmp
je
mov
cli
daa
sti
sbb
dec
enterw
xchg
aam
cld
sub
scas
fistpll
and
sbb
mov
out
inc
popa
cltd
sbb
lods
stos
adc
in
rcrb
jbe
mov
xchg
push
sub
add
pop
call
cmp
out
push
mov
dec
daa
out
add
pusha
xchg
or
pop
subl
sbb
imull
mov
outsb
xchg
in
jae
jns
pushf
cmpsb
enter
jae
add
popf
add
lret
jecxz
mov
orl
cltd
cltd
das
jecxz
xor
and
xchg
sbb
cmp
pop
lds
xchg
jno
inc
cli
popa
enter
push
or
ja
jae
inc
popf
xchg
test
hlt
popf
push
dec
ret
lods
insl
cld
repz
dec
and
sbb
ja
cld
fildl
jb
sbb
out
out
ret
mov
mov
inc
test
adc
test
sbb
inc
loopne
add
cwtl
test
repnz
push
movsl
out
push
jmp
mov
xchg
negb
jbe
loopne
cmp
cmp
adc
inc
and
sbbb
daa
cmp
cmp
push
bound
mov
sbb
inc
dec
mov
nop
ss
fwait
xchg
push
xchg
mov
repz
jmp
add
mov
sbb
rcll
sbb
mov
leave
pop
lods
sub
pop
jg
ror
dec
cmp
mov
test
push
xchg
ret
subb
mov
mov
outsl
mov
adc
cltd
adcb
in
mov
xorb
mov
jle
lret
mov
inc
lds
xor
es
sub
sub
xchg
jne
enter
jno
fmulp
jmp
lds
cmpl
lods
int
out
lret
lret
jp
cmp
push
mov
rcll
cwtl
cmpsb
vmovups
add
mov
call
cmpsb
pop
cld
jle
cmc
mov
ja
lretw
js
adc
clc
sub
test
push
inc
into
aaa
sub
fs
mov
test
out
popl
add
inc
or
add
cmp
ss
adcb
lcall
jmp
sti
ljmp
loope
ss
gs
movsb
xlat
and
addr16
lea
sub
cmovbe
mov
mov
and
mov
jne
mov
jno
outsl
jl
add
in
std
push
lret
mov
push
sbb
js
cmp
lods
dec
lods
shl
push
out
int
mov
jmp
mov
mov
rcrb
cltd
dec
test
push
hlt
jle
sbb
cmpsl
scas
and
gs
jge
sahf
lret
push
sub
xchg
daa
sbb
pop
dec
sar
icebp
loop
lods
leave
jns
or
cmpsb
fsubs
ds
jne
mov
outsb
into
call
cmp
cs
das
and
dec
imul
hlt
div
jb
rorb
in
and
addl
stos
push
xlat
addl
fmul
loop
sti
pop
fs
dec
push
pop
fadds
adc
xchg
adc
and
push
ljmp
sbb
xchg
out
jle
push
das
sub
xchg
inc
cli
push
out
stc
notb
and
pop
push
adc
jno
mov
sbb
mov
dec
or
aas
push
adc
outsb
sbb
loope
int
fidivs
aam
fildll
add
mov
ss
inc
pop
shll
cmpsl
and
dec
jbe
ret
adc
pop
jbe
xor
in
and
test
adc
test
sbb
fs
push
mov
es
sub
push
pop
mov
mov
and
es
mov
xchg
add
mov
clc
xor
push
in
mov
cwtl
test
jns
sbb
gs
cli
aas
xchg
add
mov
fstpt
shr
out
inc
addb
ret
xor
mov
insb
stos
or
lret
add
int3
sbb
pushf
mov
dec
scas
es
inc
int3
cmp
aaa
sahf
popa
mov
pop
or
dec
mov
mov
jbe
dec
mov
frstor
cmp
dec
adc
dec
lcall
jae
mov
sahf
adc
mov
cld
inc
push
in
movsb
push
jl
xchg
mov
mov
and
jae
add
aam
ss
in
mov
xor
cltd
pop
inc
aaa
movsb
jmp
mov
test
clc
iret
sbb
inc
xchg
insl
fstps
fiaddl
lock
or
xor
push
fnstenv
jg
les
arpl
jnp
out
sbb
clc
adc
loop
out
pop
lds
loope
mov
lds
jge
xchg
mov
out
push
push
divb
je
inc
dec
mov
xchg
pop
add
loopne
cmp
jno
call
xor
xor
mov
and
sarb
es
jne
cmp
pop
xor
sub
or
ds
xorl
in
inc
mov
mov
push
sbb
jge
js
fidivs
dec
fldenv
jae
and
aad
roll
sub
xor
je
jns
test
adc
int3
push
or
mov
pop
jg
icebp
push
xor
jb
pavgb
out
ds
add
ss
cmp
push
mov
test
xchg
ja
add
lret
arpl
mov
mov
pop
pslld
inc
dec
add
orl
mov
cs
mov
lds
or
cmpsb
fs
cmpsb
popf
lods
loope
ror
bnd
mov
ja
mov
inc
push
enter
shll
stos
movsb
in
rcl
imulb
stc
jne
adc
fucomi
test
imul
orl
and
bound
mov
test
fdivrl
test
jle
std
addr16
cld
cltd
cltd
loopw
and
cmp
cld
lret
sub
ljmp
pop
lahf
add
jb
pop
push
xor
ja
cli
arpl
sar
pop
out
cltd
lock
icebp
xchg
mov
repnz
repz
ds
mov
inc
loop
fdivs
rolb
xchg
jbe
cmp
out
mov
sub
mov
dec
mov
xor
mov
test
pop
lahf
je
out
test
test
and
lcall
cmp
fldenv
sub
adc
divl
mov
incb
mov
andb
fisttps
cmp
pusha
ficomps
pop
cmp
jge
mov
add
push
outsb
and
cmp
pop
jno
add
fs
adc
fwait
out
je
andl
mov
cmp
aam
and
ret
mov
xchg
xor
and
bound
dec
jno
icebp
sarb
xchg
xchg
in
cmp
add
lahf
fidivl
sbbl
scas
push
adc
push
add
xor
pop
add
add
lret
je
rolb
insl
loopne
lock
mov
pushl
jmp
lea
shll
push
aaa
popf
or
xor
jnp
jmp
in
and
dec
xchg
pushf
pop
pop
ja
hlt
dec
stos
hlt
aad
notb
add
popf
and
sbb
fwait
adc
cmc
shr
cmp
iret
shrl
out
repz
mov
testl
cmp
mov
inc
lock
fadds
mov
add
clc
lret
cltd
jne
dec
inc
xchg
nop
sbb
inc
mov
mov
xlat
inc
cmp
add
std
sbbl
jne
sub
out
fisttpl
sbb
dec
xchg
pop
sub
stc
xlat
sahf
pusha
dec
sbb
jno
cmpsb
aas
adc
test
and
movsl
cmpsb
lahf
cmp
pusha
and
daa
cmc
lahf
mov
jo
dec
push
pop
ret
mov
lcall
or
lock
inc
jge
es
shll
cs
out
pop
push
fs
test
pushf
cli
dec
mov
in
test
aas
xrelease
cwtl
sub
cmc
add
dec
pop
inc
outsb
and
mov
xchg
repnz
push
sbb
xchg
xchg
sub
cmp
dec
pop
dec
jae
imul
lock
out
adc
add
mov
shlb
mov
sbbb
sbb
int3
inc
mov
cltd
cwtl
jae
ret
pop
push
clc
pop
cmpsb
and
out
mov
les
aaa
sub
mov
pop
mov
sbb
adc
mov
jo,pn
add
and
mov
pop
lock
pushf
shll
xorb
fnsetpm(287
out
xor
mov
scas
mov
dec
int3
aad
lods
jae
mov
pop
dec
test
imul
movsl
or
addr16
xchg
add
call
lret
xchg
pop
add
xchg
xchg
fstps
or
xchg
fildl
mov
outsl
xchg
xchg
dec
aaa
les
lret
jae
and
sbb
stc
gs
sbb
sub
adc
sbb
imul
jge
cmp
and
fcmovbe
arpl
push
xchg
jecxz
push
dec
push
push
cmpl
mov
insb
jl
sbb
insb
rcrl
adc
adc
aad
xorl
jg
cmp
call
outsl
fs
in
add
sti
pop
daa
or
jo
xchg
jmp
mov
call
and
mov
cmp
aad
mov
ja
pop
lret
xor
aam
and
mov
das
jge
mov
mov
fldt
js
popa
jl
push
or
nop
movsb
scas
dec
mov
aas
popf
sbb
ret
ja
cs
inc
gs
mov
jno
cmpxchg
or
sbb
pop
sub
mov
into
lret
lods
xchg
dec
adc
adc
xchg
and
aad
push
and
pop
add
cmp
jp
rcrl
jb
sbb
in
jl
fucomi
pop
outsl
cmpsb
sbb
shll
imul
push
pop
jge
sub
and
add
addr16
das
rcrb
ja
in
xchg
mov
mov
inc
inc
nop
loopne
mov
mov
push
clc
sahf
ret
xor
std
adc
rolb
mov
icebp
push
les
sahf
mov
add
aaa
sbb
sub
jecxz
mov
fldcw
mov
add
jge
sbb
ror
mov
pop
out
movsl
lret
shl
loop
shl
sub
pop
in
inc
jb
mov
jge
insl
iret
aas
xchg
and
add
loope
outsl
push
mov
gs
adc
mov
fistpll
and
sbb
mov
lcall
inc
mov
movsb
push
cltd
outsl
andl
ret
adc
inc
scas
shrl
icebp
mov
jecxz
les
mov
add
mov
cmp
lret
addr16
sbb
inc
stos
dec
jns
adc
dec
sbb
jge
cmovl
nop
repnz
push
push
je,pt
cmpsl
or
out
mov
call
inc
mov
push
ret
ja
xchg
mov
in
sahf
pop
xchg
adc
stos
xchg
push
rolb
test
cli
neg
dec
mov
jmp
stc
xchg
push
or
jno
ljmp
add
call
and
pop
in
ljmp
jmp
adc
lods
sbb
push
out
int
pop
jne
inc
mov
adc
fs
and
sub
push
popf
fwait
xor
jnp
jbe
lods
adc
fwait
lock
or
mov
addl
sbb
inc
xchg
cmp
rcrl
sub
cmc
fsubs
adc
aaa
push
call
jl
loopne
pop
ror
sub
jmp
dec
test
add
stos
inc
dec
inc
jl
orb
xor
inc
fwait
adc
test
imul
out
pop
sti
push
jge
sbb
out
insb
mov
test
lret
pop
push
arpl
cmp
shl
dec
outsl
ret
sub
inc
push
pop
fldt
pushf
and
fiaddl
xor
stc
int
push
push
stos
dec
pop
sbb
adc
push
mov
iret
addr16
inc
aam
dec
jno
pop
insb
dec
cmpsb
jl
pop
push
adc
jmp
mov
std
sbb
push
repz
add
mov
repnz
jo
pop
mov
nop
adc
mov
stos
xchg
xchg
or
sti
sub
repz
aam
xlat
mov
push
mov
xor
cmp
movsl
mov
clc
or
cmpsb
and
data16
or
jns
jecxz
mov
iret
adc
jae
jge
aam
push
pmulhuw
in
std
clc
in
jno
xlat
or
fadd
mov
mov
cmp
push
mov
popa
int
xchg
push
fwait
inc
add
sbb
sub
jg
mov
test
mov
mov
das
inc
xor
fst
pop
cmp
loopne
std
inc
aam
xchg
adc
add
lock
add
popf
test
mov
jno
pop
lret
cs
pop
shll
xchg
in
out
cmp
mov
int
sbb
mov
xor
divl
in
mov
mov
fsubrs
aad
rolb
imul
sahf
outsl
xor
xchg
loop
les
shll
adc
imul
arpl
and
mulps
jle
cmp
mov
mov
xchg
dec
sbb
adc
popf
divb
dec
sbb
mov
rorb
xchg
mov
imul
cmpl
add
cmpsb
fiaddl
fists
sub
or
add
mov
dec
test
loopne
push
mov
or
mov
out
sahf
sti
js
push
pop
adc
fldl
sub
sbb
cmp
rclb
add
mov
cmp
aad
xor
jge
fildl
out
jle
pop
mov
jmp
cmp
dec
mov
fldcw
push
mov
std
cmp
pop
loope
pop
push
dec
mov
aam
mov
or
outsl
sbb
aas
pop
pop
and
je
insl
lock
push
lods
call
popa
les
sbb
icebp
adc
adc
sbb
mov
add
add
int
xchg
mov
popf
loop
add
sbb
cmp
sbbl
xor
ret
mov
pop
add
jg
les
lea
cli
sub
sbb
or
in
insb
pushf
push
pop
stos
mov
faddl
in
pop
sub
cltd
pop
mov
and
aam
lds
cmp
cmp
and
jge
xlat
or
cmp
sbb
dec
leave
insl
lcall
int3
repz
inc
aaa
dec
mov
xor
test
sub
call
and
xrelease
jno
xchg
xor
lcall
fsubs
cli
das
xchg
dec
or
xor
bound
and
aaa
jle
enter
addr16
aam
in
cmc
add
mov
sbb
add
sub
inc
xlat
aas
xchg
lods
std
pop
mov
les
or
sbb
xor
daa
xchg
addr16
xor
jb
push
pushf
pop
adc
sub
std
lock
pusha
xchg
cmpsb
mov
cmp
shll
insl
in
adc
shll
xor
aas
dec
push
clc
mov
cmpsl
adc
lahf
test
mov
loop
dec
jb
movsl
inc
jbe
insl
push
fcmovnbe
sarb
cli
jp
dec
xchg
js
test
or
fildl
es
popa
cli
jecxz
xor
cmp
dec
xor
inc
mov
jl
sub
sbb
push
aam
aas
mov
add
mov
fwait
lcall
push
xchg
bound
shr
shlb
es
mov
dec
cmp
mov
sbb
lods
push
stos
dec
xchg
iret
or
mov
cs
outsb
jno
mov
mov
xchg
push
add
mov
lret
mov
stos
or
mov
or
mov
shl
mov
cli
xor
aas
ret
mov
mov
xor
cmpsb
jno
aaa
xchg
test
inc
cmpsl
movsb
sahf
data16
cmp
hlt
movsb
lret
xchg
lock
jmp
fnstsw
mov
push
sbbb
test
mov
xor
adc
mov
push
mov
aam
lea
sarl
and
mov
imul
dec
jg
xchg
movsl
xchg
cmpsb
repz
pop
pusha
xor
je
outsl
lds
repnz
mov
xchg
repz
in
lock
hlt
rorl
mov
in
out
pop
shrl
push
xor
push
loopne
mov
sub
movsl
mov
enter
sarl
add
gs
mov
inc
cmp
testb
jo
andb
addr16
js
out
or
stos
fsubrs
rol
jl
pop
mov
sbb
lret
stos
imulb
jmp
jge
xchg
adc
push
jo
imul
add
daa
xchg
cmp
pop
repz
mov
jle
loop
sub
push
jbe
sbb
test
mov
lret
xchg
inc
cmc
dec
pop
dec
cmc
push
inc
lret
aam
jle
mov
push
subl
clc
movsb
lods
and
popf
aaa
pop
ljmp
insb
pop
inc
ficompl
imul
cmp
or
pop
lcall
or
and
cmc
decb
mov
lcall
push
sub
rep
xchg
sub
mov
dec
out
push
cmp
push
scas
xchg
mov
and
or
mov
mov
jo
pop
shll
shr
cmp
mov
mov
div
cmp
jmp
jbe
mov
push
lock
dec
adcb
or
and
js
leave
test
cmpsl
sub
out
cmc
aad
jnp
mov
shlb
pop
aam
adc
nop
inc
roll
mov
and
pop
mov
inc
inc
and
leave
dec
repnz
mov
mov
xor
movsb
mov
in
dec
xchg
xor
fwait
lret
aam
mov
lods
jmp
mov
lds
loop
stc
push
rcrb
adc
push
xchg
mov
ss
xlat
idivl
shrb
cmpsl
inc
lock
cmpsb
test
mov
or
push
or
adc
into
hlt
mov
insb
inc
lds
data16
cmc
push
aas
jb
push
into
xchg
lods
nop
cmp
fstp
jle
neg
adc
xor
clc
jbe
in
cmp
add
movsb
sbb
test
push
fimull
retw
push
lock
rclb
test
cmp
sub
inc
cmp
fnop
and
mov
orb
cmp
add
jp
xchg
out
jnp
xor
mov
imul
fsts
inc
rolb
xchg
push
lods
pop
mov
imul
pop
push
mov
in
iret
jp
loop
sbb
sbb
in
mov
mov
int3
push
data16
cmpsl
out
in
es
loopne
jns
lods
and
roll
psrlw
cli
ret
notl
cmpsl
sub
mov
adc
dec
add
out
mov
call
scas
and
push
lahf
push
mov
outsb
aas
push
mov
sbb
imul
or
hlt
add
cmpsb
mov
jge
jg
mov
stos
shlb
add
out
and
sub
das
mov
jo
arpl
sbb
mov
pop
and
jno
jecxz
ja
inc
lahf
aad
outsb
ljmp
arpl
imul
int3
je
aam
mov
mov
add
lcall
inc
fnsave
push
jb
adc
dec
ljmp
sbb
js
add
xchg
push
mov
aad
and
pop
hlt
dec
gs
xlat
and
or
std
xor
rcrl
mov
mov
lret
pop
rcrb
cmpsb
jge
xchg
mov
adc
sub
jp
mov
stos
inc
xor
inc
push
aas
inc
mov
aas
add
aaa
xchg
inc
push
add
out
pop
fdivrl
std
add
push
cmpsb
fdivs
mov
xchg
mov
aam
repz
or
pop
pop
ret
mov
dec
mov
jae
cmpsl
pop
outsl
add
das
mov
adc
adc
mov
sbb
insl
mov
stc
outsl
mov
in
inc
add
cmp
int
cmpsl
mov
cmp
or
add
dec
shl
adc
mov
cwtl
xchg
arpl
testb
int3
mov
push
jmp
sarl
add
ss
sbb
arpl
push
sbbb
sub
lea
or
test
mov
sub
cmp
lea
mov
sbb
mov
decb
push
pop
or
cli
pop
dec
cmp
push
ds
pop
adc
ret
pop
cli
lods
loop
rcr
add
push
add
cmpsb
fcmovnbe
dec
or
pop
lahf
pop
push
lret
test
cli
cmp
sbb
aam
enter
xor
or
ret
mov
repnz
aaa
adc
pop
inc
mov
lret
adc
mov
lcall
push
test
por
out
nop
mov
or
lcall
shr
cmpsl
cmp
mov
inc
loop
shll
sti
out
cmp
sub
fs
xchg
mov
and
or
hlt
or
pop
lods
inc
cwtl
push
arpl
push
das
jecxz
dec
ljmp
xor
inc
aaa
jno
fwait
inc
xchg
dec
psubq
test
push
cmovbe
jl
sbb
shll
ss
mov
stos
in
fildll
cltd
cmpb
lcall
fcomps
lret
mov
int3
enter
out
sti
shlb
mov
movsl
lock
test
rorl
rcl
nop
push
pop
pop
lahf
arpl
mov
push
dec
adc
data16
lods
sbb
or
cwtl
dec
clc
jbe
xchg
and
mov
pushf
mov
push
lock
and
addb
and
adc
fwait
mov
add
sbb
lods
jne
dec
pop
out
test
xchg
fdivr
loopne
sbb
mov
push
cmp
aaa
pop
repnz
xor
sti
adc
arpl
imul
push
les
aad
inc
out
cmpsb
cld
pusha
jb
sbb
fwait
and
push
sub
mov
xor
mov
aaa
add
insb
xchg
into
pop
mov
push
pusha
sarb
dec
inc
gs
ficompl
jge,pt
xchg
das
outsl
ficoms
popa
mov
fdivrl
cltd
inc
sbb
imul
incl
jecxz
jns
mov
push
insb
cld
push
cmp
mov
adc
scas
in
aaa
dec
je
jne
inc
iret
fwait
mul
daa
mov
test
push
pop
push
sub
imul
scas
add
xor
mov
js
ret
xchg
pusha
sbbb
mov
cmp
pop
je
xor
mov
lods
ja
test
int3
enter
vmovhpd
stos
out
mov
jmp
mov
cld
cmpsl
testl
scas
lret
push
pop
and
sahf
cmpsl
mov
inc
mov
movsl
dec
ret
pop
xchg
jb
ja
mov
rorl
dec
out
nop
cmpsb
fwait
inc
cmpsb
lahf
cmpsb
iret
or
inc
mov
aas
xchg
out
iret
enter
cmp
or
jecxz
prefetcht2
out
test
dec
add
jns
inc
cwtl
mov
xchg
leave
sbb
dec
aam
xor
aaa
mov
es
orl
fs
out
adc
add
bound
outsb
jne
mov
scas
ds
push
inc
call
or
push
mov
mov
mov
fs
outsb
push
lret
mov
or
ss
cs
stc
adc
movsl
jae
mov
mov
add
cwtl
inc
lods
inc
jg
sbb
movsl
push
dec
cmp
in
mov
adc
sbb
mov
cmc
or
movsb
in
sahf
jno
cmpsb
cmp
mov
add
mov
push
cmp
jae
aad
sbb
push
std
xchg
jge
mov
aad
xor
outsb
jae
sub
adc
jne
cmp
push
out
aam
loopne
mov
in
ficoml
add
inc
adc
xchg
xor
aas
pop
jne
push
inc
sbb
iret
pop
shlb
jge
fcmove
pop
push
pop
push
loop
mov
jecxz
xchg
or
mov
mov
out
out
lea
sub
mov
jb
fists
iret
pop
jne
sub
arpl
addr16
mov
inc
or
incb
xor
mov
mov
adc
dec
push
js
out
pushf
push
mov
fisttpll
arpl
aas
push
lahf
imul
add
subb
fiadds
cmp
lods
jp
je
dec
insl
pushf
mov
movb
and
adc
clc
in
xchg
out
in
jecxz
mov
les
push
arpl
cmp
mov
mov
xchg
pop
aam
mov
int
imul
mov
in
ds
stos
fcoml
mov
or
stos
dec
nop
rclb
test
movsl
cld
add
popf
cli
imull
add
fisttpll
std
and
adcb
fs
sahf
out
insb
add
out
les
sub
cmp
mov
popf
adc
lahf
push
sub
cmp
mov
or
adc
pusha
xchg
jle
cli
pushf
sti
fwait
push
push
inc
jmp
fmul
push
out
inc
and
popf
call
sub
add
mov
fwait
push
dec
jg
scas
mov
xchg
out
je
cmp
cmp
dec
mov
frstor
stos
sub
cmp
mov
data16
aaa
lret
and
fs
adc
lret
jecxz
aam
clc
cli
ljmp
lahf
fs
or
in
cmc
jno
es
out
int3
push
cmp
fs
cmpsb
cmpsb
nop
in
push
popf
jle
aaa
sbb
mov
popa
out
popf
lcall
je
divl
mov
push
es
mov
stc
push
xchg
xor
inc
ficompl
sbb
xrstor
stc
imul
adc
shrb
in
scas
hlt
mov
scas
mov
adc
jbe
sti
jp
into
adc
inc
cmp
jg
adc
xchg
dec
inc
lock
or
ja
lcall
clc
das
mov
push
mov
lret
jle
lods
lea
dec
sbb
sbb
push
sub
scas
ss
dec
lret
testl
add
cli
mov
fimull
push
mov
or
sub
sub
dec
loopne
sub
add
dec
adcl
mov
cld
ljmp
pop
icebp
pusha
les
jb
add
sbb
sub
movsb
bound
push
push
push
sarb
popf
inc
and
or
or
inc
ja
xchg
ret
push
stc
enter
cli
cwtl
or
jnp
pop
mov
dec
or
fsubrs
inc
jne
in
jmp
jp
cmc
pop
mov
adc
addb
jnp
jmp
leave
rolb
mov
jae
test
jnp
add
pop
jns
sbb
and
push
cli
pop
add
mov
mov
xchg
mov
ret
daa
cmpl
shll
push
mov
push
in
xor
icebp
std
aad
push
dec
rorb
xor
daa
lea
xchg
fidivl
cmp
fistps
sbbb
mov
les
inc
inc
leave
jo
decl
addr16
pop
pop
xor
mov
xchg
jno
inc
adc
jb
xchg
lret
call
mov
movb
jnp
mov
loopne
inc
jns
lods
mov
sbb
sub
mov
fxch
std
mov
imul
pop
psllq
jmp
in
inc
aad
fildl
or
push
sub
push
mov
inc
ret
mov
clc
incb
push
jmp
mov
adc
out
and
loop
lock
jns
cs
dec
inc
popa
out
xchg
adc
mov
pusha
jp
lret
nop
ja
cs
insl
in
pushf
mov
enter
pop
shll
mov
inc
test
inc
xor
fwait
cmp
testb
cmp
mov
fldcw
sbb
insl
test
adc
inc
adc
add
add
rclb
mov
aas
mov
jecxz
mov
jo
and
cmp
cmpb
insl
repnz
or
xchg
inc
add
push
lahf
shr
xor
sub
ljmp
lea
stos
jp
dec
dec
fcoms
cmp
inc
inc
fistps
lock
push
sbb
adc
push
sahf
push
cs
adc
inc
mul
add
ss
movsb
jp
test
clc
or
test
out
les
in
lcall
cmp
dec
inc
inc
push
xor
cld
cmp
adc
imul
sub
mov
aaa
cwtl
es
ret
js
ret
adc
inc
pop
stc
daa
adc
leave
adc
dec
xchg
rcr
clc
sbb
or
cmp
cmc
lret
xor
sbb
adc
mov
xor
dec
mov
inc
arpl
mov
rolb
mov
lret
xor
inc
lahf
xchg
das
push
dec
sub
pushf
sub
popf
daa
in
arpl
mov
mov
enter
popf
cmp
dec
ffreep
aaa
test
mov
mov
lret
loopne
jb
mov
outsb
lds
aas
mov
ljmp
int
xor
mov
sub
dec
push
push
sbbl
jle
push
jmp
movsl
dec
and
cmp
add
repnz
push
aam
push
xchg
scas
scas
int3
inc
jne
lea
lods
add
pop
xchg
jp
aas
inc
addr16
and
cltd
cmp
insb
dec
int3
mov
jb
mov
pop
cmpsl
pop
lret
int3
pop
push
mov
sub
lock
push
jl
fimull
mov
lea
cmc
push
sti
mov
fsubp
mov
mov
aaa
sti
cmpsl
push
fdiv
jno
jb
in
inc
dec
mov
push
jo
out
push
push
jmp
pop
aaa
inc
push
and
or
pop
cmpsl
and
jp
imul
repnz
call
movsb
xchg
ret
aad
xor
pop
lds
cli
sub
in
stc
adc
cwtl
icebp
or
vpavgw
xor
and
jb
xor
pop
xchg
fwait
hlt
repz
mov
push
xchg
push
lahf
adc
lock
sbb
xchg
pop
rcl
xchg
hlt
pushf
push
inc
cmp
dec
lods
xor
pop
cmp
jbe
mov
dec
arpl
cmpsb
xchg
data16
xchg
xchg
xchg
adc
aad
push
jae
push
mov
out
pop
int
mov
pop
es
add
sbb
mov
imul
fdiv
lock
mov
dec
fwait
xchg
add
lret
cmp
popa
cmc
xchg
shrl
sub
insb
sub
adcl
scas
or
movsb
pusha
test
mov
imul
push
cmp
cli
pop
testb
mov
cld
ss
dec
cmp
mov
jae
mov
dec
enter
adc
push
fdivrl
push
rorb
hlt
lods
pop
insb
insb
xor
call
jmp
lcall
bound
mov
arpl
mov
lahf
cmc
in
clc
icebp
in
sahf
les
cmp
and
int3
fidivl
jecxz
lods
cmpsl
xor
xchg
jl
dec
pop
pushw
pop
pop
test
fs
inc
leave
std
mov
gs
or
mov
das
std
bnd
pop
xchg
ret
mov
mov
aad
ss
movsb
or
lahf
dec
mov
mov
sbb
lahf
push
int
mov
jno
adc
ljmp
mov
aam
clc
add
push
neg
add
addr16
pop
adc
mov
enter
lcall
pop
push
popl
loop
fsubp
jb
out
data16
inc
movsl
rorb
fincstp
lds
jge
lret
stc
jmp
insl
insb
and
sub
adc
test
jmp
jle
dec
mov
in
pop
mov
inc
add
lods
int3
push
icebp
mov
adc
jge
inc
sbb
add
xchg
rorl
shrl
int
or
adc
sbb
cmpsb
in
clc
sub
es
xor
mov
dec
mov
xchg
cmp
fldl
fwait
sbb
shll
or
int3
push
testb
xor
mov
xor
clc
into
loop
sbb
sub
inc
dec
and
push
shl
xchg
dec
mov
lods
xor
sub
aaa
cmc
mov
jmp
andb
sarl
xlat
inc
jp
mov
push
xor
fiaddl
pop
push
sti
rcr
imul
or
out
shlb
xchg
shll
cmp
cmp
inc
adc
lock
dec
arpl
out
fcmovu
stos
cld
or
into
in
mov
cs
push
popa
ds
cmpsl
ror
or
mov
push
push
je
or
shrl
mov
push
out
push
mov
into
mov
pop
push
dec
mov
addr16
iret
dec
inc
push
push
push
jmp
out
xchg
enter
lods
rolb
xchg
xchg
andb
fstpt
mov
jmp
pop
xchg
iret
push
clc
mov
rorb
cs
imul
rcrb
aad
xor
and
pop
ds
or
mov
sbb
mov
or
push
cmp
testb
enter
add
int3
cmp
xor
es
dec
sub
add
fsts
lret
lods
mov
adc
xchg
add
in
iret
inc
sbb
cmp
lret
aas
push
psrlq
sub
adcl
hlt
cmp
pop
adc
ret
sub
in
ret
pop
xlat
rcr
lock
adc
adc
jo
push
jne
sub
lods
repnz
out
imul
lods
jns
in
repnz
jbe
jle
mov
or
fldlg2
and
adc
leave
mov
xchg
xchg
xchg
xor
sarb
dec
cld
gs
or
aaa
das
sarb
movsw
jns
aaa
adc
aad
adc
pop
repz
cmc
mov
sbb
or
push
es
incb
jns
ret
pop
cmp
inc
or
in
sub
sahf
jnp
sti
aad
fimull
mov
cwtl
ljmp
cs
or
ss
push
loopne
loope
popf
sub
fwait
fwait
sub
outsl
add
adc
fucomip
sti
shr
popf
outsl
test
mov
jecxz
inc
jne
lods
roll
dec
clc
push
ud1
xchg
data16
pop
and
jns
pop
xor
mov
push
xor
push
dec
rcr
es
pop
and
sarb
pop
incb
or
lret
sahf
cmp
jge
cli
dec
and
hlt
jge
popf
insl
stos
lods
mov
imul
and
movsb
mov
jp
push
mov
ss
add
sub
inc
and
sbb
or
push
cld
ret
jg
and
or
sub
cltd
scas
push
je
and
pop
pop
jbe
or
add
or
pop
js
cmp
cmp
mov
pop
daa
inc
xor
pop
dec
add
push
cli
and
cmpsl
adc
push
inc
adc
mov
and
xorl
ret
jecxz
lret
mov
fchs
xchg
std
xor
ror
das
lret
inc
sub
jns
inc
dec
aam
rclb
arpl
mov
inc
loope
adc
rcrl
and
popf
call
mov
xor
mov
popa
inc
mov
rorb
aad
mov
cmp
repz
lock
sbb
pop
inc
mov
inc
pop
lods
js
add
jmp
loopne
jp
out
xor
bswap
outsl
in
mov
addb
jge
inc
mov
pushf
and
mov
pop
cmc
sub
lret
xor
ljmp
and
lock
jae
ret
add
inc
inc
cli
jmp
pop
popf
mov
lahf
and
orl
andl
ja
adc
sbb
insb
adc
aaa
mov
sub
xor
cmp
popf
xor
push
mov
cwtl
mov
in
mov
pop
or
shlb
mov
in
pop
or
jne
or
inc
mov
jb
xor
iret
sbb
movsl
jp
in
or
push
cmp
lea
out
imul
ljmp
jl
shlb
outsl
mov
and
xlat
cmp
lods
sub
push
mov
adc
fisttpl
mov
xchg
pusha
sub
iret
adc
inc
mov
aaa
xor
test
rcrb
imul
jbe
jae
pop
xchg
ss
push
xorb
stc
mov
es
mov
xchg
or
mov
cwtl
es
mov
adc
mov
test
sub
daa
dec
mov
jle
fxam
stos
dec
xor
std
pop
and
cmpsb
cmpsl
jp
fistps
sbbl
push
movsb
das
sub
mov
mov
jmp
nop
outsl
xchg
stos
sbb
xor
dec
fs
push
and
add
mov
iret
shll
sub
ret
ds
movsb
push
mov
inc
bound
xchg
movsb
cmp
mov
cmp
mov
or
mov
mov
hlt
xor
jns
dec
test
xor
fldenv
mov
push
test
mov
movsl
dec
cmp
jmp
fwait
adc
pushf
lods
shlb
adc
pop
push
adc
jmp
loop
add
inc
pop
jae
adc
pop
sahf
dec
mov
outsb
inc
notl
jmp
in
pop
pop
jp
push
push
mov
jg
pop
cs
xor
test
fbld
sub
mov
fldl
mov
adc
adc
sub
or
pop
rorl
insl
push
xchg
ficoml
xchg
cld
jle
dec
mov
repnz
lock
les
lods
js
mov
je
lods
mov
hlt
or
sahf
fldt
std
fidivrs
adc
cmp
adc
jo
lahf
aas
or
push
cmp
fldt
mov
sub
sub
pop
jno
pop
add
mov
ret
ret
test
mov
movsl
fwait
jmp
inc
adc
mov
fisttpl
jno
das
inc
les
dec
hlt
sti
cmp
mov
scas
xchg
in
push
pop
xchg
cmp
and
aad
push
cmp
sbb
add
out
xchg
pop
fisttpl
mov
shll
outsl
or
in
bound
fldenv
mov
aaa
int
mov
ljmp
mov
testl
and
mov
push
sahf
insl
jne
push
jbe
arpl
xor
scas
push
lahf
cmp
dec
sar
dec
add
pop
popf
fwait
test
loopne
icebp
mov
lods
or
sbb
pop
dec
stos
or
fwait
or
and
arpl
pop
mov
shlb
inc
mov
enter
jae
push
pop
call
loope
or
push
add
loopne
aam
jmp
inc
inc
testb
insl
push
aad
test
das
addr16
repnz
add
jle
push
jns
lods
push
orps
pop
test
lahf
sub
mov
call
in
test
cmp
inc
fistl
jae
hlt
lods
add
push
dec
xor
aas
int3
dec
stos
add
inc
rolb
jae
mov
pop
daa
inc
inc
dec
int
pop
sub
mov
cli
int3
inc
mov
adcb
and
sub
rorl
add
adc
leave
mov
dec
mov
xchg
sbb
adc
cli
inc
insb
xchg
pop
imul
sbb
out
es
inc
jns
sbb
popf
fnsave
sbb
sub
pop
mov
test
shrb
call
xchg
pop
mov
subb
dec
mov
ds
pop
pop
adc
pop
push
movsl
mov
xor
or
push
jmp
test
mov
hlt
and
fistpl
mov
inc
das
rcrl
dec
rcr
aas
lea
sub
sub
arpl
stos
inc
ja
mov
shr
jge
lea
lea
sub
lret
jo
jnp
fsubs
sub
shll
mov
adc
sbb
add
sbb
fists
mov
sbb
push
mov
fistpll
xorb
pop
in
test
add
lods
lock
mov
scas
test
lock
mov
pop
repz
addr16
jae
mov
xchg
ja
mov
shrl
icebp
mov
push
cs
std
fbld
dec
xor
push
fisubrl
push
aas
lock
lds
cmp
mov
cmc
jns
xchg
xor
jo
orb
negl
lds
lods
fdiv
inc
or
fs
pop
iret
xlat
hlt
push
mov
sarb
in
adcl
out
dec
mov
inc
sbb
nop
fsubs
negl
mov
ja
jmp
rorl
pop
inc
cmpsb
adc
mov
or
cmp
outsl
mov
dec
into
jne
insl
adc
push
subb
xchg
cs
arpl
pop
mov
inc
fwait
lcall
mov
xor
lcall
fimull
out
dec
jo
inc
add
popf
orb
imul
or
popa
or
and
jne
outsl
nop
cmpsl
icebp
movsb
jge
gs
or
popf
int
shrl
sub
mov
adc
add
dec
push
jp
pusha
jo
jnp
sbb
out
lds
lods
mov
mov
iret
fildl
cmpl
sub
xchg
adc
mov
cmc
negl
mov
out
cmc
jp
and
push
cmp
adc
push
outsl
or
loope
adc
or
test
mov
lcall
aaa
cmp
inc
xchg
lcall
call
cld
cmp
mov
cmc
rorb
shll
les
xor
lret
pop
xchg
movsb
pop
adc
hlt
enter
jecxz
inc
and
out
ret
pop
popf
xor
inc
inc
lcall
and
ret
xchg
cli
jae
xchg
xor
and
mov
daa
int3
and
sub
and
cs
fildll
daa
call
into
neg
dec
pop
aad
mov
addr16
scas
enter
jbe
je
cltd
lret
adc
dec
or
cmp
ss
enter
jne
add
sub
inc
aam
xor
setbe
xchg
inc
mov
sbb
lcall
enter
movsl
push
adc
mov
loopne
cmp
and
in
js
pop
lods
push
je
cli
aaa
js
sbb
shl
int
jae
clc
loope
lods
rclb
cmpsl
pop
das
test
sub
jbe
pushf
orb
popf
sub
dec
add
mov
loopne
sub
adc
mov
fldt
addr16
add
xchg
int3
xchg
ss
adc
inc
jnp
inc
fnstcw
xorl
xchg
dec
mov
hlt
repnz
push
mov
lods
aam
add
rorl
push
rolb
xor
lock
or
das
in
lods
jge
pop
daa
repz
adc
inc
icebp
mov
sti
std
rcrl
insl
or
dec
mov
lret
shlb
mov
negb
sbb
push
or
shll
push
jge
inc
fcoms
clc
adc
mov
ljmpw
mov
jecxz
icebp
adc
iret
les
push
sar
lret
jae
lds
inc
xorb
fistpl
daa
push
and
test
push
int3
dec
popf
jmp
lret
xor
pop
das
mov
cmpsl
arpl
mov
mov
nop
test
dec
cs
mov
and
in
enter
push
inc
and
jbe
in
xor
inc
xor
lcall
ret
imul
xchg
movd
push
mov
push
jb
pop
mov
push
xor
mov
cmp
and
fisubrs
adc
adc
fisubrs
sbb
test
jmp
xor
adc
ficoml
sub
push
or
cld
or
std
or
jle
inc
rolb
shr
or
cmp
nop
lret
and
mov
shlb
or
inc
aam
daa
fnstsw
adc
ret
ret
push
adc
sub
mov
sub
pop
test
cli
arpl
fistpl
bound
mov
popf
push
jo
int3
gs
dec
shrb
scas
test
repz
sub
out
mov
mov
sbb
lods
fwait
and
pop
and
cmp
movb
dec
fisubs
mov
aad
dec
and
and
aas
or
inc
lcall
pop
ss
outsb
outsl
xchg
int
cmovae
mov
inc
mov
lahf
or
mov
pushf
repz
vmovlps
push
cwtl
lods
shld
cwtl
lcall
xchg
loop
push
aam
jnp
mov
mov
xchg
inc
jno
pop
add
movsl
jbe
sbb
sub
repz
pusha
outsl
stc
sub
ret
and
xchg
jbe
push
lcall
nop
movsb
es
inc
fsts
cmc
mov
push
sbb
pop
push
ljmp
dec
cmpsb
int
sub
cmp
iret
int
cmpsl
add
xchg
in
dec
and
in
in
or
popf
ss
adc
sub
sbb
adc
jns
inc
ja
sbb
ds
scas
mov
ja
int3
xor
pop
cltd
das
cwtl
test
mov
stc
mov
pop
mov
push
cwtl
mov
mov
lret
loopne
push
adc
push
mov
lret
jge
jae
jae
sub
or
mov
popa
push
xchg
push
cmpsb
fbstp
out
pusha
pushf
cmc
or
dec
adc
mov
xor
jl
xchg
push
lds
add
je
aam
aad
icebp
stos
xchg
scas
mov
xlat
adc
sub
xor
popa
in
notb
iret
lahf
in
inc
cmp
or
ret
popa
lcall
sbb
rorl
add
cld
test
mov
pop
pcmpeqw
iret
pusha
stc
or
filds
mov
test
sbb
lods
push
sub
pop
pop
lock
adc
dec
shlb
jl
mov
mov
ret
mov
lcall
dec
mov
fstps
js
daa
xchg
inc
repnz
ljmp
fstl
imul
xchg
imul
fistpl
popf
ja
pop
inc
loope
test
add
push
and
xor
adcl
repz
lret
pop
lock
into
sarl
mov
int
add
mov
sub
mov
imul
scas
dec
sbb
roll
jns
and
lret
adc
loope
cltd
rclb
lret
dec
and
or
and
arpl
jl
xor
sbb
int
loope
daa
ja
enter
xchg
mov
fwait
out
mov
sbb
ret
pop
pusha
inc
cmc
decb
outsl
xchg
dec
sti
mov
cwtl
add
cld
lods
fists
movsb
jg
and
xchg
pop
dec
pop
dec
cmp
push
cmp
insl
push
adc
and
pop
mov
fnstcw
cmp
imul
and
dec
add
dec
lds
xor
lahf
movsl
xor
pusha
test
adc
std
aam
addb
popa
jge
mov
adc
outsb
sub
and
cltd
pushf
sbb
and
sbb
xchg
hlt
add
das
cmc
inc
sbb
add
imul
xchg
xchg
push
popa
pop
lea
iret
sub
pusha
movsb
pop
mov
cld
or
add
fwait
notl
push
lock
push
arpl
cmp
sbb
scas
xor
cltd
dec
push
jp
nop
pushf
lcall
mov
xchg
adc
sbb
cmpsb
popf
fldt
sub
or
mov
sbb
mov
push
inc
leave
xchg
mov
dec
aam
jae
inc
gs
int3
adc
xor
mov
sahf
pop
mov
xchg
stc
jbe
xor
movsb
repz
add
hlt
mov
cmp
test
pop
hlt
rcrl
add
movsw
mov
add
int
dec
int3
jnp
pusha
or
add
adc
daa
ja
cmp
call
add
in
sbb
cmp
mov
iret
sub
insb
testb
cmpsb
es
loop
stc
or
orl
pop
sub
pop
pusha
out
cmp
and
sub
test
inc
and
sbb
fcmovne
pop
adc
movsl
lock
in
ficoms
repnz
jl
jl
filds
sbb
mov
vpmulhw
jb
xor
pop
cmp
jle
test
gs
inc
pusha
cmc
dec
mov
xchg
pushf
and
int
or
cwtl
pop
aam
std
add
xor
rcrl
xor
cld
out
xlat
xchg
orl
rorl
inc
addr16
jnp
stos
scas
sti
adc
cld
loopne
adc
ficoms
xchg
jb
dec
sbb
repz
mov
repz
icebp
mov
ret
sbb
and
inc
sub
add
pusha
pop
pop
jae
sarb
and
pushf
push
xchg
enter
add
sub
cmpsl
test
push
movsb
shr
adc
stc
out
fnstcw
jmp
inc
imul
bound
or
pop
sbb
xor
les
mov
mov
movsl
dec
jbe
scas
mov
inc
rcrb
stos
pop
pop
stc
xor
sub
imul
and
dec
cwtl
loope
add
stos
sti
dec
push
pushf
scas
push
mov
adc
mov
xchg
cltd
cli
dec
dec
xchg
push
mov
hlt
das
jnp
mov
adc
enter
iret
dec
xchg
mov
or
cmp
sub
ss
repnz
xchg
push
sahf
mov
push
or
imul
inc
cmc
pop
js
add
or
push
daa
sub
stos
hlt
pop
fwait
push
mov
mov
sbb
xchg
daa
mov
aad
aas
data16
pop
sahf
add
imul
out
leave
xor
stos
cmp
or
mov
loop
pop
mov
xorl
dec
jmp
imul
mov
pop
orb
push
mov
test
test
xor
repnz
loopne
xchg
xor
dec
insl
mov
xor
test
into
ss
sub
xchg
cs
xchg
sbb
aas
ret
sub
dec
test
sub
into
fstpt
push
ja
jge
fbstp
insb
ret
inc
xor
test
stos
out
push
daa
enter
cs
cmp
mov
loope
sbb
cwtl
sub
inc
inc
int3
sbb
std
inc
pop
test
cmp
mov
and
dec
lret
leave
or
inc
or
inc
and
jns
add
aad
dec
sti
lds
rcll
and
out
cmp
loop
jle
ljmp
enter
xchg
mov
out
shr
call
lret
dec
xchg
scas
sbb
ds
inc
push
inc
ljmp
or
xor
xor
stos
pop
mov
mov
mov
cli
jbe
jmp
push
push
xor
nop
sub
add
inc
hlt
xchg
dec
icebp
int
fbld
int3
and
push
inc
loopne
insb
ror
clc
inc
aas
lcall
sub
ss
inc
cmp
push
fnstcw
fildll
pop
inc
jo
mov
incb
loope
pop
scas
add
pop
rolb
xor
jl
inc
sbb
add
mov
das
fcmove
add
mov
add
cmp
test
sarl
out
mov
sub
cmp
dec
movsb
lret
ja
call
mov
jmp
cmpsw
mov
or
outsb
sub
or
adc
jnp
xor
lea
and
xchg
out
ljmp
xor
sbb
pop
ret
and
or
inc
cmp
push
mov
dec
jp
and
fbstp
ret
imul
ficoms
shrl
in
loope
pop
rorb
fwait
sub
sbb
fst
sbb
cmc
insb
bnd
mov
sbb
les
iret
inc
sub
mov
arpl
pop
and
frstor
daa
leave
call
cwtl
mov
fwait
test
test
flds
cmpsl
jne
inc
cmp
outsl
mov
cmp
sub
enter
adc
cmpsb
sbb
xchg
jb
outsb
mov
popa
mov
adc
lds
mov
mov
decl
add
adc
pusha
cmp
add
dec
insl
cmpsb
movsl
dec
or
test
roll
mov
cld
out
sub
mov
xchg
stos
es
mov
mov
aas
adc
add
mov
imul
xor
cmp
enter
lods
pop
test
or
push
mov
lcall
push
jns
ss
lret
jae
ret
nop
xchg
iret
movsb
inc
xor
aad
add
andb
imul
inc
lret
mov
popf
sub
cltd
inc
insl
xlat
cli
aas
shrl
and
outsb
and
mov
aam
insb
add
sbb
mov
sbb
mov
sub
bound
ret
stc
ret
iret
and
sub
jp
in
cltd
fcmovnbe
ljmp
aaa
and
je
orb
arpl
pop
mov
jns
cmp
lret
dec
mov
shlb
xchg
lods
cmp
std
mov
stos
iret
jp
orl
or
mov
icebp
jecxz
jne
lea
sahf
fsubrl
adc
pop
fmuls
pop
jp
out
out
lahf
and
and
mov
adc
xchg
cmp
mov
lret
iret
push
pusha
xchg
jbe
pop
or
icebp
jae
mov
in
xchg
subl
and
test
clc
inc
aas
push
notb
mov
xchg
pop
test
lcall
cli
xchg
testl
loop
popa
iret
pop
push
aaa
in
data16
sub
popa
filds
push
mov
insl
subb
test
xor
cmc
movsl
jae
ljmp
sbb
rcl
icebp
xor
sti
add
jg
mov
xchg
xchg
push
ffree
xor
mov
cmpsl
xor
rorb
dec
pop
sub
or
out
ss
add
dec
xchg
fidivrl
or
insl
hlt
rolb
leave
mov
pop
mov
lock
outsb
cmpsl
sbb
daa
pop
xlat
mov
mov
outsl
mov
cmp
cmpsl
ljmp
das
add
mov
lret
hlt
dec
dec
lods
negb
das
fcom
xor
lods
and
mov
hlt
fnstenv
stos
jo
dec
and
minps
xchg
xchg
add
xor
xchg
sub
inc
pop
jne
stc
adc
pop
fxch
jp
or
xchg
xchg
lods
ror
das
push
loop
in
stc
cmc
push
mov
adc
adc
mov
cmpsl
in
popf
mov
xor
out
jg
scas
push
aas
adc
fcmovu
lahf
xor
stos
sub
mov
mov
aad
mov
in
mov
xchg
fs
and
jne
jnp
sub
loopne
xor
imul
out
rcrb
mov
jl
stc
cmp
les
cwtl
or
in
outsb
lret
or
lods
push
ljmp
daa
scas
mov
aam
inc
js
or
dec
pop
inc
aas
gs
aad
orl
inc
dec
int
mov
inc
cmpsl
or
loopne
into
push
cmp
ror
and
push
pop
adc
lret
subb
push
arpl
mov
mov
rolb
ror
frstor
bound
hlt
push
inc
mov
pop
lahf
into
jl
imul
adc
pop
pop
fcomi
hlt
add
subl
pop
xchg
push
int
in
and
sahf
iret
lock
add
cmp
cmpsb
decb
push
xchg
es
jmp
pop
mov
into
test
ja
push
pop
ljmp
mov
push
sbb
mov
les
add
jnp
hlt
mov
xor
xor
push
adc
xchg
jmp
imul
insb
movsb
jecxz
out
inc
daa
pop
in
sbb
push
decb
push
inc
ds
loop
adc
dec
dec
sti
ret
jo
out
mov
add
icebp
jb
daa
repz
pop
xor
das
out
jl
enter
push
xchg
scas
lock
jns
into
adc
fisubl
popf
insb
inc
push
sbb
lea
lcall
mov
dec
testb
lods
push
lock
xchg
pop
mov
pop
sub
clc
xchg
xchg
jg
in
xor
vpunpckldq
ljmp
fsubrs
lret
inc
dec
in
cwtl
cltd
add
aam
inc
jle
push
and
shr
and
xchg
jae
lods
lret
shll
movsl
mov
addb
popf
pusha
adc
sahf
stos
mov
cmp
test
cmp
int3
mov
sbb
mov
push
pop
in
hlt
das
push
movnti
add
hlt
or
cmp
push
inc
adc
fcomp
cmp
mov
xor
daa
cwtl
or
push
stc
add
and
imul
xor
shlb
xchg
das
push
jnp
js
sahf
mov
xchg
sub
daa
ljmp
pop
push
push
mov
movsl
jo
rcr
insl
and
push
orb
stos
mov
test
push
or
mov
pusha
stos
jns
cmp
scas
xchg
data16
pop
xchg
das
xchg
xchg
xchg
xor
and
xchg
mov
mov
push
cmc
mov
sbb
mov
add
or
and
in
and
in
movsb
cmp
call
dec
lret
xchg
arpl
popf
adc
inc
adc
arpl
out
push
sbb
pusha
cmp
jmp
arpl
or
dec
incl
cmp
xlat
outsl
test
pop
jmp
push
pop
cmp
pop
inc
mov
xlat
imul
xor
sahf
out
cltd
mov
dec
hlt
inc
push
cmpsl
dec
jno
mov
arpl
sbb
leave
outsl
mov
das
int3
fcoms
stos
sub
and
repz
lock
inc
dec
xchg
das
das
add
out
push
outsb
aaa
mov
mov
jp
lds
add
mov
shrb
xchg
push
inc
ljmp
adc
clc
xor
sub
xchg
outsb
aaa
or
shlb
test
adc
js
lcall
test
fcoml
clc
fwait
pop
test
and
test
lret
or
test
js
and
xorb
es
mov
repz
sub
mov
inc
hlt
inc
pop
fidivs
inc
xor
std
push
xorl
insl
ljmp
cmp
jecxz
rorb
xchg
ret
sbb
adc
inc
add
and
inc
inc
push
insb
sbb
scas
fs
pop
add
ret
ret
popa
jl
push
enter
or
data16
push
sub
sbb
jmp
inc
sbb
sbb
fmul
insl
push
and
adc
imul
gs
sub
stos
inc
scas
mov
xchg
fs
mov
inc
jmp
ja
mov
xchg
fnstcw
sahf
push
enter
xchg
adc
xchg
orb
mov
lods
imulb
xchg
adc
push
push
pushf
sbb
sarl
je
das
shlb
adc
mov
gs
push
fadds
add
inc
out
cs
xor
lahf
ja
insb
pop
mov
inc
dec
dec
mov
push
dec
mov
data16
test
in
mov
aad
ficoml
dec
and
mov
add
shl
rcl
cltd
out
xchg
jno
movsb
js
lea
popa
add
int3
mov
sarl
lock
fmulp
adc
mov
pop
push
lret
or
dec
mov
and
in
mov
inc
jecxz
insb
stos
lods
sub
xor
dec
xlat
nop
lock
lcall
sbb
ficompl
jl
adc
lds
jge
mov
pushf
pop
out
pop
xbegin
out
push
das
jnp
pop
in
fiadds
and
jp
xor
pop
adc
leave
lret
inc
or
gs
dec
sahf
loopne
lret
cmc
test
and
aad
push
test
add
mov
scas
sub
mov
sbb
nop
lret
je
mov
add
std
dec
adc
loopne
lea
push
jg
lds
adc
addl
cltd
xchg
addl
cmp
and
dec
push
or
jmp
rcrb
push
repnz
mov
jp
not
xchg
std
jge
ljmp
and
xorb
aas
inc
fwait
or
adc
in
adcl
jbe
addl
cwtl
mov
into
sarb
and
lock
push
add
adc
out
mov
pop
inc
call
or
out
cmp
imul
das
mov
mov
pusha
loopne
jge
aam
xor
lret
and
stc
xchg
mov
pop
pop
push
adc
xchg
int3
test
jecxz
and
clc
push
shll
mov
jl
sub
jno
jp
xchg
push
inc
xchg
imul
mov
mov
adc
xor
pushl
nop
xchg
mov
fwait
js
push
mov
pushf
out
int
jge
mov
nop
nop
jae
hlt
sarb
dec
outsl
mov
js
lahf
cli
cmpsb
add
imul
movsl
cwtl
xchg
cmp
sbb
jg
into
outsl
adc
jecxz
jp
stc
or
movb
push
daa
add
xacquire
push
inc
adc
fistps
mov
mov
inc
push
add
inc
and
test
int
and
jmp
mov
cmc
call
mov
push
mov
outsl
mov
mov
mov
insl
subl
js
push
arpl
xor
mov
in
mov
cmp
cmc
fdivrl
add
and
push
add
jne
jns
scas
xchg
shll
jle
leave
popf
fcomi
jb
call
jbe
int
ret
sub
push
mov
addb
cmp
loope
das
sub
rcll
cmpsb
push
xchg
mov
push
jns
jle
jae
push
inc
in
dec
ficompl
add
dec
rcr
addb
fs
pop
mov
mov
mov
flds
arpl
lods
fistps
jnp
addl
or
fwait
faddp
mov
push
shlb
xchg
je
adc
stos
xor
xor
int
or
ret
dec
pop
sbb
adcb
inc
loope
cmp
stc
sub
xorl
icebp
mov
mov
adcl
js
sarb
or
sbb
mov
and
and
ss
and
daa
xor
mov
enter
xor
lock
mov
das
jb
into
lds
test
pop
loopne
ja
movlps
dec
xor
sahf
adc
sub
imul
inc
adc
xlat
mov
ret
and
int3
dec
cmp
add
outsb
mov
pop
pop
mov
mov
icebp
sahf
xor
or
jg
jge
mov
sbb
inc
adc
jns
mov
jo
add
mov
rcrb
movsl
mov
add
pop
or
fmuls
bound
cmpsb
fs
inc
mov
ret
arpl
or
mov
in
and
idiv
mov
lret
xchg
in
out
pushf
movsb
jecxz
dec
mov
pop
pop
out
insl
sbb
push
in
cmc
incl
sbb
and
stos
movsl
mov
add
in
imul
jle
sbb
cmp
testb
outsl
pop
stos
out
sbb
mov
dec
pop
nop
jbe
mov
pop
cmp
pop
out
add
int3
dec
insb
pop
mov
mov
cmp
outsl
neg
or
mov
sub
cmp
sbb
xchg
sub
insb
fwait
mov
pop
xchg
divl
outsl
ljmp
inc
test
pop
xor
cmp
mov
xor
fcompl
cltd
xchg
cld
jae
xchg
lods
push
add
add
adc
rorl
and
inc
jp
lret
sbb
xor
jb
add
jo
fnstcw
push
test
jnp
ss
int
test
inc
pop
adc
xchg
push
pop
xor
es
ja
fcoms
lret
mov
mov
sbb
in
add
add
push
add
jle
add
popf
cwtl
lods
int
adc
pop
adc
mov
mov
fistl
add
daa
cmp
mov
jns
enter
sub
push
adc
sbb
push
fldcw
cld
outsl
out
fbstp
popa
fcoml
pop
sar
inc
adc
sbb
mov
shlb
jmp
pop
pop
rclb
sbb
jle
add
xor
hlt
nop
dec
sbb
lods
mov
pop
push
divl
fidivrs
stc
xor
adc
cmp
roll
xchg
pop
rcr
bound
ret
dec
mov
xor
push
mov
ljmp
aas
outsb
xchg
clc
dec
mov
xchg
out
cmp
outsb
ja
ret
jge
sbb
sbb
popf
repnz
fs
fnstenv
cmpb
movsb
jne
cmc
dec
int
mov
xlat
mov
xor
mov
cmpsb
ds
test
add
adc
or
mov
sbb
fidivrl
pop
mov
arpl
aam
and
inc
std
hlt
cwtl
mov
pop
out
or
ret
mov
cld
mov
std
mov
out
ljmp
int3
loop
test
jo
add
xor
push
out
out
xchg
add
arpl
dec
jge
mov
arpl
in
aad
rolb
std
rcl
es
daa
push
sub
aaa
mov
push
cld
sub
dec
jmp
pop
jne
scas
outsl
and
inc
aas
sbb
pop
inc
movsl
and
fsubr
test
faddp
add
dec
lock
and
pop
pop
dec
leave
call
scas
push
or
or
stos
mov
inc
add
lahf
rorl
xor
mov
dec
mov
imul
inc
into
out
xchg
adc
sbb
lock
shll
insl
cld
inc
mov
jl
ds
jns
lock
outsl
xor
xchg
add
mov
cmp
sub
inc
jge
cmp
jbe
adcl
int3
add
xor
and
add
jmp
push
mov
push
gs
out
mov
and
cmp
or
in
push
xor
test
or
mov
fwait
orb
lret
sbb
cmp
loop
and
jl
add
loopne
hlt
inc
xchg
xchg
inc
xchg
mov
loopne
mov
cmp
movsb
push
xor
incl
addr16
lea
adc
jb
stc
dec
shrl
and
or
popa
icebp
xor
and
or
push
mov
cld
sub
inc
or
dec
inc
inc
movsl
sbb
das
lret
out
loopne
out
mov
mov
or
gs
or
loope
mull
cmpb
lods
adc
mov
jle
and
popf
mov
pusha
loope
jg
out
call
dec
cmp
and
xor
lea
push
mov
push
mov
in
movsl
int
pop
cmp
mov
cmc
jns
adc
dec
shlb
xor
mov
jecxz
mov
fmuls
jne
int3
inc
sub
xchg
mov
mov
mov
mov
aad
dec
stos
dec
push
push
xor
in
mov
bound
add
into
repz
xchg
lock
fcoml
test
out
jge
sub
in
not
ja
test
add
sahf
sbb
mov
fcoml
jle
scas
movsl
in
or
mov
mov
mov
push
fdivs
pusha
mov
sbb
adcl
sub
roll
cld
and
dec
sbb
data16
hlt
and
cmc
sub
mov
inc
inc
lods
popf
or
mov
dec
in
ret
call
adc
sti
and
gs
cmpl
insl
xor
div
cmp
rorl
adc
shrb
stc
sahf
pusha
gs
adc
or
movsl
sbb
add
xchg
mov
mov
jne
out
mov
push
pushf
mov
lahf
xchg
imul
ljmp
fimuls
ret
loope
stos
pop
cltd
fdiv
mov
aam
mov
jns
pop
lahf
mov
cli
repz
pop
xor
jg
aad
ret
sub
jo
cld
pusha
ficoms
in
sbb
xor
sbb
inc
sbb
insl
mov
arpl
mov
aaa
iret
push
rcrl
add
jg
in
mov
cmpsl
or
lea
loop
dec
les
in
jb
mov
mov
cmp
sub
jp
into
adc
pop
lret
pop
add
or
sbb
mov
js
ds
jp
je
jnp
repz
jge
jecxz
call
hlt
loopne
pop
out
mov
pop
adc
sbb
lds
sub
movsb
ret
push
mov
jo
imul
movsb
pop
gs
xchg
pop
cltd
push
pushf
fistpll
outsb
cmp
gs
xchg
dec
push
adc
or
sbb
es
inc
fistpll
xor
mov
xor
pop
jae
jne
out
mov
and
imul
retw
and
ss
mov
jno
push
aam
leave
jl
repz
cli
xlat
mov
pop
insl
and
push
repz
pop
std
jb
lcall
jmp
mov
sbb
pop
push
dec
sub
call
stc
int
adc
hlt
int3
xchg
push
test
lock
es
jl
mov
xor
dec
push
pop
out
lea
lods
adc
and
outsl
ret
jae
mov
jge
mov
testl
sti
hlt
inc
aaa
frstor
mov
in
dec
jns
fisttpll
pop
sahf
xor
jns
or
push
mov
cmp
lret
pop
mov
add
xor
xchg
xor
inc
push
pushl
sub
mov
daa
call
loope
push
sub
adc
sbbb
xchg
and
adc
fsubl
test
pushf
xor
mov
mov
cmpsb
test
cmpsl
rcr
xchg
xchg
adc
je
mov
cmp
lahf
fstps
add
lret
mov
mov
and
xor
mov
nop
push
ljmp
and
bound
dec
cltd
jmp
inc
mov
lmsw
xchg
sbb
les
clc
call
push
in
mov
es
shrl
xor
loop
xchg
inc
pop
sub
leave
xchg
mov
mov
lock
in
mov
mov
mov
jecxz
ret
fwait
xorb
push
sahf
xor
out
pop
jmp
xchg
ret
add
cmpsl
adc
pop
cmc
adc
jmp
leave
inc
or
pop
int3
sub
test
mov
aaa
jns
aaa
addr16
mov
mov
fnstsw
jl
xchg
or
add
and
add
incb
ds
frstor
xor
jle
sbb
stos
xor
scas
out
cmpsb
adc
call
jecxz
push
jp
in
loopne
outsl
lea
xchg
dec
adc
mov
or
mov
xchg
xchg
std
lret
lcall
fimuls
push
xor
inc
incb
shrb
jae
scas
lock
push
std
rcl
negb
mov
cmc
loopne
sahf
test
outsl
shrl
lock
inc
mov
inc
xchg
dec
cmpsl
outsl
push
jbe
cmpsb
jb
sbb
ss
push
stos
sub
and
pop
add
mov
inc
mov
ret
les
movsb
push
iret
add
ret
cli
sbb
loopne
push
dec
push
js
fistpll
loopne
inc
cmp
sub
aad
rdmsr
jne
xchg
int3
and
je
ljmp
jp
jbe
cmp
xor
adc
push
push
inc
out
adc
imul
mov
mov
out
add
xchg
cltd
fcomps
in
in
mov
sbb
movb
icebp
aaa
push
lock
ja
jmp
jnp
das
out
insb
cltd
mulb
mov
pushf
movsb
ds
enter
mov
cmpsl
les
mov
or
mov
sbb
cld
movsl
lahf
jnp
mov
or
or
pop
iret
aam
adc
and
xor
push
js
mov
outsl
cmp
xor
pop
ljmp
insb
push
pop
rcll
pop
fidivrl
shrl
es
adc
dec
pop
aas
push
sub
movsl
js
adc
xchg
lea
outsb
push
int
and
mov
pop
pop
bnd
mov
fcoms
mov
cmp
jae
pop
mov
cmp
notb
pop
push
sbb
test
adc
les
mov
movsb
add
jbe
and
insb
fcomip
dec
into
ja
jbe
pop
stc
jae
adc
xor
xchg
and
and
cmp
xchg
ss
cmpl
xchg
xor
fadd
or
test
fwait
jne
lods
jae
imul
pusha
stc
push
inc
lcall
lcall
xchg
pushf
mov
mov
ds
in
xor
loop
adc
push
in
popa
push
sub
mov
xor
ljmp
cmp
test
ljmp
push
test
int3
add
in
ret
jp
stos
add
adc
or
arpl
mov
arpl
xor
sub
jnp
les
lret
pop
mov
arpl
insl
fstps
xchg
movb
imul
fldpi
imull
dec
push
call
add
mov
adc
outsl
call
loop
push
sub
xor
xchg
ds
outsl
sbb
jecxz
add
arpl
mov
in
arpl
or
fs
pop
mov
and
dec
aam
jb
loopne
jg
push
jp
popa
in
push
push
dec
mov
sbb
mov
test
sub
loopne
out
sub
data16
ljmp
adc
loop
scas
add
int
xor
xor
cmp
push
notb
add
stos
popa
pop
cmp
adc
ljmp
mov
es
push
inc
flds
adc
jle
in
lahf
jge
inc
das
shufps
cmp
dec
and
sub
mov
mov
push
pusha
into
adc
mov
sub
ds
push
xchg
add
jne
mul
dec
push
shrb
rorl
sub
and
insl
mov
push
ss
or
addr16
ljmp
jge
outsl
and
popf
sarl
or
xchg
inc
inc
sti
sarl
jl
das
lret
fwait
outsb
jne
dec
movsl
jne
outsl
sub
pop
call
cwtl
adc
mov
xor
xchg
or
sbb
popa
sti
in
jae
cwtl
cli
bound
fwait
insb
mov
outsb
xchg
sub
cmp
out
dec
cmp
into
mov
std
addb
ficompl
fisttps
xchg
testb
pop
movsl
mov
mov
bound
icebp
inc
mov
cld
cmp
xchg
imul
jne
fwait
nop
xor
out
pusha
inc
dec
mov
popf
xchg
arpl
sub
xlat
or
adc
adc
ret
nop
xor
rolb
cmp
loop
mov
out
mov
adc
clc
cmpsl
sub
ficoms
outsl
mov
stos
out
movsb
xchg
scas
fsts
lods
adc
test
jo
xchg
mov
cmp
push
je
pop
dec
adc
mov
test
push
dec
das
rorl
mov
mov
jmp
lahf
jmp
and
cld
loop
into
dec
dec
pop
out
sub
std
hlt
scas
sbb
movsb
dec
xchg
lock
xchg
rorl
inc
fbstp
sbb
adc
lea
sbb
dec
je
or
cmp
cmp
adc
jns
cmp
repnz
jo
sub
jp
fildll
pop
jg
sbb
xchg
mov
xchg
add
sbb
out
jmp
pop
mov
shl
cwtl
ds
lcall
sub
out
out
jae
push
cmp
shlb
cmp
mov
call
out
test
stos
mov
mov
xor
es
or
mov
adcl
stos
out
outsl
jmp
adcl
add
inc
mov
jmpw
daa
sub
adc
add
pusha
jne
les
addr16
adc
push
lahf
sbb
in
inc
int
mov
inc
fistpll
adc
add
mov
leave
xchg
and
xor
add
mulb
sbb
icebp
or
xor
leave
jnp
dec
xchg
ss
call
xchg
sbb
sbb
mov
imul
movb
sbb
inc
dec
adc
bound
sahf
add
push
cmp
fdivr
les
or
sub
das
xor
cld
add
adcb
fsubr
adc
cmpsl
or
jmp
adc
mov
cmp
xchg
fnstenv
push
das
cmpsb
fistps
aas
aad
or
test
pop
mov
lods
push
imul
xchg
inc
clc
cmpl
ja
mov
xor
test
les
mov
xchg
jo
les
gs
xchg
rorb
xor
es
mov
popa
pop
in
push
xchg
popa
cmp
notl
sbb
cmp
sub
into
add
adc
pop
nop
lock
mov
cmp
hlt
stc
mov
inc
mov
aad
lahf
ljmp
jae
pop
sub
and
out
inc
push
sub
repnz
mov
dec
xlat
inc
cmp
loope
lods
fistps
push
mov
xchg
test
or
xchg
and
outsb
mov
shrb
dec
fcom
mov
mov
mov
or
xor
sub
js
sub
adc
test
add
out
ja
hlt
xchg
mov
shll
mov
sub
push
xchg
data16
popf
mov
stos
outsl
adc
and
hlt
ss
pop
shlb
adcb
divl
aam
aam
mov
xor
push
push
ficomps
jae
stos
lcall
inc
jnp
sub
push
bound
stos
fwait
in
add
cmp
and
jo
mov
mov
into
lcall
lcall
jge
je
pushf
ja
popa
inc
cmp
jmp
es
pop
jne
mov
movsb
xchg
mov
lcall
cmpsl
idivl
nop
fimuls
mov
xor
add
push
and
test
pop
ds
pop
lahf
repz
call
and
dec
lods
lcall
ss
sbb
sbb
test
add
sub
cli
out
aaa
jne
jmp
push
adc
jecxz
pop
stc
stc
ljmp
jge
ret
cmc
mov
push
imul
dec
cmpsb
push
or
mov
xor
sub
cwtl
enter
fdivs
dec
test
in
adc
cmpsb
and
add
fbstp
jge
jae
pusha
insl
pop
popa
sub
sub
das
push
dec
push
data16
fwait
mov
pop
negb
lahf
jp
rdpmc
aam
and
cmpsl
cmc
mov
jns
cld
outsb
and
or
sub
aam
movsl
call
test
jmp
jno
stos
cmpsb
movsl
sub
mov
add
arpl
push
addr16
call
ds
xchg
mov
test
fildl
aad
jg
js
out
xchg
sarb
scas
in
incl
add
aam
mov
lss
in
in
and
mov
adc
mov
fsubrs
in
xchg
xor
push
and
insb
mov
out
push
adc
sbb
pop
inc
dec
adc
cld
arpl
push
aaa
add
xor
shlb
and
jb
test
fists
adc
lock
call
insb
movsb
xchg
xchg
xorb
xor
mov
adc
les
addl
hlt
clc
mov
dec
xor
mov
test
mov
stos
xchg
aas
cmpsb
xchg
das
jp
mov
lea
aaa
sahf
cmc
inc
out
cmp
inc
arpl
xchg
mov
mov
ja
int
dec
add
adc
ljmp
sub
ficoml
add
movsb
cmp
lods
dec
out
loope
pop
add
cld
push
daa
jns
sbb
int3
jmp
test
jo
popf
dec
sbb
stos
adc
xchg
cmp
test
and
loop
shl
dec
sahf
push
pop
push
inc
adcl
addr16
addr16
xchg
sbb
ss
filds
pop
xorl
pop
je
lock
push
push
jge
pop
jmp
jge
inc
insl
cmp
bswap
and
lret
sti
add
add
les
cmpsb
mov
jnp
sbb
rclb
mov
inc
int
pop
xor
jns
inc
out
dec
xchg
mov
inc
movsb
inc
shrb
or
rorl
cmp
inc
das
add
and
mov
int
inc
shl
or
mov
fisubrl
dec
mov
xchg
bound
adc
xchg
xor
adc
xor
popa
lds
lcall
mov
and
push
dec
jbe
mov
mov
imul
les
shr
aad
inc
lods
push
and
insb
dec
cmpsl
js
lcall
in
cmpsb
in
xchg
ss
loopne
bound
mov
sbb
in
jl
jl
loopne
into
add
pop
enter
adc
ficoms
push
or
test
cltd
ret
jle
repz
fwait
and
loope
rcl
out
xor
cmc
adc
movsb
sbb
mov
pop
add
push
xor
imul
sar
pop
lods
push
fdivp
dec
js
xchg
jbe
popa
dec
or
imul
add
dec
dec
fmull
imul
loop
push
std
xor
ljmp
out
push
lahf
movsb
mov
mov
adc
jno
ret
cs
adc
xor
push
fucom
dec
xchg
cmc
orl
push
js
push
insl
sbb
inc
test
rorb
and
rcr
lahf
lods
int3
adc
and
xor
cmp
mov
gs
aam
out
pop
lcall
lds
loope
mov
int3
inc
adc
dec
add
push
in
jmp
cwtl
mov
fistpl
pop
stos
ret
dec
rcrb
sub
addl
adc
sbb
mov
pop
fcmovnb
movzwl
rcr
pop
xchg
leave
int3
push
mov
push
mov
push
sub
push
mov
push
iret
add
imul
mull
mov
xchg
push
fidivs
sub
mov
enter
outsb
pop
ror
pop
jge
jmp
daa
inc
loope
aas
xorb
rcll
scas
mov
adc
fnstsw
adc
add
mov
sbb
iret
jne
inc
push
mov
add
daa
outsb
add
in
sub
lahf
lahf
lcall
imul
push
cld
nop
dec
pop
fbstp
adc
sub
mov
outsb
push
inc
std
pop
cmp
jns
addr16
loopne
mov
inc
loopne
sbb
cmp
xchg
fisubrs
xor
and
jl
sbb
pushf
jmp
xchg
cltd
inc
shll
fnstcw
pop
fsubl
cmc
inc
mov
stc
aam
rolb
adc
fldenv
test
add
mov
call
cmp
xor
adc
addr16
addr16
fwait
roll
cmc
jno
rcr
sbb
loop
dec
arpl
xchg
pop
je
xchg
pop
mov
dec
in
cmp
xchg
cltd
lds
adc
inc
repz
and
lcall
mov
inc
add
subl
clc
mov
sahf
out
mov
insb
sbb
xor
das
leave
std
mov
xor
or
jp
ss
data16
sahf
jle
sbb
jg
xor
sub
sbb
sbb
mov
inc
pop
mov
fsubl
daa
pop
mul
jb
hlt
popa
xchg
push
test
inc
repnz
aas
cld
out
test
inc
lods
sbb
call
jle
inc
cmpb
je
mov
pusha
test
shrl
test
adc
xor
xchg
ret
add
mov
xor
fldenv
mov
mov
aad
adc
pop
jo
push
inc
fcoml
sahf
rcrl
sub
add
dec
shlb
dec
stc
jl
das
mov
ret
mov
incb
js
ret
dec
mov
mov
decb
mul
and
sbb
lods
xchg
xor
sub
xchg
adc
dec
and
cwtl
test
gs
and
out
lcall
xchg
fwait
push
and
xchg
mov
loop
mov
jns
inc
sub
sahf
rcrl
push
std
jp
loop
imul
xor
xor
sahf
xlat
sub
in
popa
enter
xor
adc
ret
mov
das
push
jbe
fwait
aas
cmc
sub
in
xchg
push
aad
xchg
cltd
shlb
test
ret
fwait
cmp
dec
fcompl
xor
mov
in
add
enter
mov
mov
add
pop
pushf
es
dec
fisubs
js
fldl
fs
or
mov
lret
jbe
fsubp
jl
leave
or
int3
fwait
insb
sbb
stos
or
dec
lahf
xchg
lods
sub
cmp
jp
push
sarb
insl
sbb
sbb
lret
xor
cli
dec
nop
fimuls
sub
jecxz
mov
mov
sbb
and
lahf
jb
imul
sahf
std
lahf
lock
outsw
pusha
dec
jb
mov
shll
lods
xor
sub
insb
addr16
xor
mov
xor
add
or
sbb
jb
int
out
push
xchg
fsts
lret
outsl
in
iret
pop
nop
push
out
cmp
lret
and
sub
pop
lea
in
hlt
lock
adc
vpunpckhdq
sbb
addb
jo
dec
xchg
adc
fcomp
subb
lret
aam
js
test
inc
dec
jmp
mov
push
aam
sub
jmp
inc
push
jmp
jecxz
xorb
lods
push
fwait
and
in
js
rcll
inc
push
popf
int3
mov
pop
xadd
sbb
mov
push
dec
jo
dec
enter
jmp
test
dec
sbb
shl
sub
out
hlt
gs
xchg
add
outsb
int
dec
mov
test
add
jl
xchg
sahf
sub
xchg
and
aas
or
sbb
pmaddwd
sub
jbe
ds
js
adc
push
movsb
push
push
pop
imul
cmpb
mov
aam
test
dec
mov
push
mov
adc
and
test
movsl
xchg
or
cli
xchg
inc
iret
mov
xchg
sub
loop
cwtl
push
inc
icebp
out
push
lret
outsb
pop
mov
data16
xchg
repnz
leave
cmpsb
mov
fucom
mov
es
out
or
push
sub
lea
outsl
ja
push
and
jge
fs
or
movsl
jns
mov
inc
mov
pop
add
stos
xchg
lahf
xor
lock
add
pop
xor
jg
inc
or
adc
fsubrp
cltd
sub
addr16
bnd
je
pop
mov
mov
mov
pop
mov
mov
push
adc
push
cld
and
fstp
scas
or
jae
aad
dec
sub
movsl
xchg
xlat
add
dec
pop
sbb
cmp
arpl
inc
cmp
bound
sub
dec
push
push
les
mov
stos
xchg
mov
or
fistl
pop
adc
xchg
pusha
inc
in
sub
addl
daa
and
rcl
mov
nop
into
cmp
cmp
push
int
cltd
jg
orl
cs
sbb
jg
inc
clc
fidivrs
sub
xor
mov
loopne
mov
mov
jno
mov
push
xor
cmpsb
negl
shrl
and
lock
je
cmc
pop
sbb
movsb
mov
ljmp
push
adc
xchg
lock
add
pop
in
jae
mov
jle
jae
pop
jo
imul
mov
jae
mov
push
movsl
fdivl
rolb
iret
stos
sarb
jle
sbbl
lods
xchg
mov
fisttpl
mov
mov
inc
add
aad
mov
pop
xchg
fsubr
xchg
sub
xchg
and
scas
stos
testb
sub
inc
dec
xchg
xlat
js
ljmp
mov
mov
xchg
jmp
jae
icebp
add
cltd
sbb
mov
dec
sub
movsl
mov
out
sub
cmc
iret
add
iret
mov
loope
ret
inc
sarl
fs
jno
sub
fldenv
mov
mov
xchg
adc
into
lret
jge
test
xchg
and
or
adc
mov
sub
in
mov
fsubrs
loope
or
into
xor
or
and
iret
jns
inc
in
jnp
cmp
mov
cmp
jo
dec
dec
add
mov
repz
cmp
inc
inc
push
dec
scas
fs
loope
pop
pop
or
add
addl
sbb
mov
ja
insb
pop
ds
lods
sub
ret
mov
sti
mov
test
cmp
loop
fs
cs
fwait
aaa
cltd
outsl
inc
in
aaa
es
cmp
or
sbb
rcrl
push
test
incb
lods
mov
xchg
mov
mov
std
dec
popa
mov
or
jno
jno
jl
pop
push
fiaddl
cmc
into
mov
sub
inc
out
inc
and
mov
mov
movsb
or
rep
jmp
je
lret
test
pop
cmpsb
aam
sub
fwait
stos
test
inc
dec
push
daa
or
ss
shll
stos
lret
mov
xor
rcl
mov
adc
mov
add
pop
dec
push
or
and
out
int3
repnz
out
test
add
lods
pop
mov
adc
jns
sub
lcall
mov
movsb
dec
cwtl
or
cmp
push
push
out
not
clc
or
cmp
cli
mov
ja
mov
cmp
mov
push
add
test
pop
sub
mov
std
cmp
jg
pop
fwait
pushf
test
add
inc
sub
nop
test
incb
jge
popf
imul
mov
rorb
jae
and
inc
sub
jb
push
leave
or
aad
adc
push
lahf
xor
lds
andb
bnd
repnz
ljmp
stc
add
xor
sub
adc
je
cmp
push
sub
or
rcrb
frstor
repz
or
push
xorl
sub
mov
push
inc
jne
adc
mov
dec
insb
add
mov
push
push
or
nop
jge
push
call
into
test
sub
je
sub
insb
pop
mov
stos
repnz
mul
add
std
jne
shll
xchg
fadds
shl
rcl
lock
jle
add
inc
mov
inc
in
cmp
int3
into
add
adc
insl
cmp
mov
add
jge,pt
lock
test
mov
sub
std
cmpsl
cmc
pop
mov
insl
mull
push
pop
dec
fs
repnz
in
movsb
adc
and
pusha
jo
iret
ds
aas
mov
mov
scas
jb
pop
cmp
add
pop
adc
mov
mov
and
mov
dec
call
inc
xor
scas
orb
ljmp
in
pop
xchg
cmpsl
sub
mov
sbb
mov
push
lods
sub
cmp
movsl
int3
leave
add
push
cmp
push
push
adc
dec
ds
xchg
inc
arpl
dec
inc
es
mov
inc
or
scas
dec
dec
sarl
xchg
push
pusha
outsl
fmull
pop
xor
mov
sbb
jo
test
xlat
popa
mov
lea
cld
push
and
dec
movsb
fldenv
add
and
push
jle
pusha
lock
jbe
mov
sarb
sub
lcall
mov
flds
outsb
cmp
rcrl
leave
fstpt
cmpsb
arpl
mov
pushw
scas
sahf
fs
mov
push
jb
push
pop
mov
fucomp
cmp
mov
xchg
idiv
jle
stos
std
or
xor
sbb
in
stc
inc
push
pop
std
lcall
mov
cs
cwtl
or
in
popa
push
mov
outsb
push
loop
or
jbe
add
jae
mov
scas
pop
mov
mov
jp
sub
push
push
cltd
mov
rol
mov
lods
xor
hlt
rol
stos
and
push
push
xor
movsb
flds
inc
popf
sbb
sbb
lock
stos
sarl
stos
jp
jb
push
mov
push
inc
dec
js
push
rcr
push
mov
das
mov
leave
mov
push
inc
mov
xchg
inc
fidivs
fsubrs
inc
fisubl
gs
mov
ror
cmp
shrl
ja
cli
mov
or
ljmp
adc
repnz
and
out
rolb
sbb
shr
rorb
or
dec
iret
sti
repnz
mov
cmp
and
lret
mov
cmp
stc
shlb
into
scas
lods
push
insl
cmpsb
mov
add
adc
imul
dec
jae
idivl
push
push
repnz
add
lock
inc
in
popf
or
sbb
andl
lods
mov
shrb
dec
lds
lahf
sbb
jb
pop
aaa
idivb
jl
movsl
jle
pop
les
test
push
dec
pop
push
loope
outsl
in
xor
pop
test
push
test
lock
or
dec
vphsubwd
cwtl
loope
or
nop
movsl
clc
mov
pop
or
or
xor
jle
es
dec
ljmp
jae
sar
pop
fidivrl
cmp
fmul
sub
lahf
sub
xchg
or
inc
cli
daa
out
test
call
cltd
fwait
and
imulb
xor
sbb
std
sub
xor
lret
lds
fdivr
adc
imul
daa
pop
shrl
sub
roll
sbb
cmp
stos
imul
int3
jae
and
out
xor
icebp
andb
cmp
cmp
add
loope
enter
rcrl
lahf
and
nop
or
add
std
test
scas
pop
jecxz
movsb
lcall
inc
adc
lret
int3
pop
push
sub
or
aaa
dec
movsb
adc
mov
fcompl
stos
mov
hlt
je
gs
fistpll
and
pop
mov
mov
pop
arpl
stc
icebp
into
addl
mov
mov
inc
ds
sub
fs
inc
pushf
andb
shr
pusha
repz
xor
sub
sub
ret
leave
jnp
push
add
in
movsl
lea
xor
dec
mov
lods
and
mov
ljmp
lahf
push
and
test
inc
cmc
or
pop
dec
mov
sbb
clc
dec
insl
sbb
mov
xchg
or
mov
fidivl
in
mov
cwtl
push
leave
js
clc
xchg
xor
xchg
ret
add
insl
mov
jle
sbb
push
cltd
adc
jle
pop
cli
pop
push
mov
arpl
pop
and
test
inc
sub
adc
xlat
pop
lcall
xor
cmc
xor
loopne
inc
xor
mov
xchg
shll
xchg
cmpsb
and
push
jmp
iret
jmp
enter
lods
add
add
xchg
mov
add
mov
mov
lods
pinsrw
xchg
push
pop
and
lret
mov
aaa
adc
in
inc
int
je
mov
dec
in
mov
pop
and
pop
xorb
jno
add
repz
cmp
mov
mov
mov
xor
adc
sbb
ret
or
and
mov
or
add
add
enter
xchg
arpl
xchg
cs
jmp
cmpsb
sarl
and
lock
push
xchg
cmp
xor
xchg
test
xchg
or
push
out
xor
aad
insb
mov
inc
sbb
out
xor
add
repz
and
ret
xchg
or
jmp
jae
xor
dec
inc
mov
sub
sub
insb
xchg
or
or
sahf
rcll
aaa
mov
pusha
mov
adc
jns
sarl
and
jo
je
scas
push
pop
fisttps
and
sub
fs
push
fmull
loopne
pop
aaa
xor
push
clc
ss
dec
daa
cmc
jmp
xchg
or
scas
xchg
dec
xor
pop
and
jns
test
fisttpll
push
mov
sub
in
cmp
inc
fdivrl
inc
push
ljmp
xchg
daa
mov
shll
mov
scas
lds
notb
pop
inc
pop
scas
out
xchg
mov
fwait
dec
dec
sub
and
mov
adc
mov
pushf
mov
mov
out
insb
mov
push
mov
xchg
rcr
aas
stos
xor
popf
adc
add
pop
push
loopne
in
popf
mov
cltd
xchg
jnp
popf
mov
scas
shl
jmp
mov
mov
cmp
sub
in
sti
pop
loope
movl
gs
add
or
gs
stos
mov
xorl
imul
iret
cmp
adc
xchg
mov
mov
fsubrs
jp
jle
push
push
and
in
imul
stos
pop
std
sbb
inc
jo
repnz
std
dec
stc
cli
pop
xchg
lahf
int
arpl
cmp
sub
add
cmpsl
xor
loop
add
sub
fiaddl
iret
ljmp
sub
fldcw
or
mov
inc
jbe
out
and
inc
pop
mov
mov
test
lods
js
and
mov
mov
pop
lahf
push
add
roll
jg
jno
les
imul
and
popf
jb
inc
sbb
daa
roll
and
nop
int3
popf
inc
out
fcomps
iret
mov
into
push
adc
jns
lock
sub
sbb
mov
lcall
shll
roll
or
cmpb
sub
outsb
sub
cltd
andl
scas
popa
pop
sbb
ror
pop
arpl
xor
jle
lods
out
shrl
jmp
icebp
inc
sbb
std
imul
or
mov
inc
xchg
inc
jp
aaa
dec
mov
dec
push
ja
jns
addr16
push
cmc
int3
jno
fcompl
pop
mov
jl
lret
mov
cmp
jo
and
cmp
into
inc
and
or
in
rolb
iret
shl
jo
jle
pusha
sbb
loop
push
pop
xchg
jp
lahf
pushf
mov
xlat
cltd
dec
insl
mov
and
inc
enter
inc
cwtl
add
stos
sub
xor
jle
jecxz
push
fcomps
repz
or
add
xor
out
cmp
pop
nop
dec
or
push
data16
aad
pop
ror
faddl
pop
sub
negb
aad
daa
jbe
lcall
jmp
mov
mov
movsb
or
and
add
push
je
lds
mov
adc
int3
sbb
adc
aas
arpl
sbb
jmp
adc
sbb
mov
int3
cmp
sub
lock
loop
iret
pop
fists
push
push
addr16
mov
or
or
mov
lds
movsl
push
push
cmp
aas
and
xchg
lahf
mov
add
adc
add
data16
push
inc
and
or
fisttps
or
xlat
cmc
mov
adc
mov
mov
mov
arpl
lret
or
inc
pop
mov
outsl
cmp
adcb
cmp
outsl
push
jns
icebp
mov
mov
mov
lcall
clc
push
sbb
pop
pushl
ljmp
push
cmpsb
xchg
sub
daa
iret
cmp
pop
xchg
mov
nop
test
scas
jbe
sub
data16
inc
shrb
jne
xchg
rorb
sbb
push
cwtl
sbb
fstps
sbb
inc
sub
cmp
fdivrs
adc
pop
xchg
push
out
jl
jno
inc
sbb
push
sbb
inc
pop
dec
mov
mov
pop
xchg
sbb
ljmp
aam
mov
adcl
xchg
push
stos
mov
fs
push
pop
mov
xor
imul
pop
loope
mov
test
scas
cmp
dec
pop
mov
ss
cmp
cmp
mov
stos
inc
dec
cmpsl
push
mov
jmp
push
push
sarb
pop
inc
aas
movsl
outsb
or
std
stos
xchg
test
js
aas
mov
ret
cmpsl
sub
outsb
cmpsb
xchg
in
test
inc
jo
xchg
das
or
lahf
aad
in
out
fwait
jb
ljmp
dec
idiv
outsl
sub
add
dec
cld
and
test
in
cld
scas
lahf
dec
adc
mov
scas
std
sub
mov
in
jmp
jo
cltd
lods
loopne
scas
or
faddl
lahf
arpl
push
movsb
ret
int
mov
int3
xchg
mov
xlat
ret
test
or
push
push
fisubs
das
mov
xor
stc
mov
loopne
jo
mov
dec
sbb
movsb
insb
and
push
dec
test
subb
mov
and
cmp
adc
and
test
decl
xchg
xchg
xchg
gs
mull
int3
xor
and
pop
cltd
mov
jae
bound
adc
sbb
xor
sahf
xor
repnz
insl
adc
sub
arpl
pop
inc
mov
cmp
dec
push
movb
int3
movsb
fldcw
clc
pop
mov
jo
adc
pop
int
pushf
popf
inc
and
rclb
pop
push
jp
inc
sbb
cwtl
jnp
dec
mov
mov
scas
adc
movsl
dec
push
lds
int3
mov
jle
xor
add
mov
sar
lock
xor
add
lret
int
xchg
mov
stc
mov
in
sahf
jecxz
lea
pop
mov
leave
jae
outsl
or
js
pop
outsb
popf
jge
mov
mov
mov
and
push
fbstp
scas
adc
std
pusha
inc
in
xor
sbb
es
adc
mov
jnp
test
inc
push
pop
push
outsb
scas
adc
mov
mov
test
int3
lahf
aas
push
add
stc
sub
pop
roll
add
mov
mov
ret
xchg
xlat
stos
mov
and
fdivs
test
sahf
or
xchg
cmp
mov
sub
xor
push
cmpsl
xchg
loop
sbbb
je
daa
cmp
xchg
dec
into
lds
fisttpll
pop
lcall
mov
inc
leave
xor
mov
into
add
imul
or
cld
push
loope
sbb
out
xorb
lock
movsl
dec
sub
outsl
jl
fldenv
cs
mov
lods
ja
add
ss
rcl
out
xlat
test
leave
adc
mov
push
and
push
add
bound
xor
ds
fcompl
cmpsl
outsb
and
andl
or
sub
orl
sbb
sti
xchg
jmp
add
sub
rclb
bound
add
or
mov
add
leave
repz
cld
mov
imul
mov
inc
and
aas
iret
push
std
int
jle
jl
jae
dec
cmp
cwtl
movsb
mov
addr16
and
fidivl
sub
sub
mov
xchg
mov
lret
xor
iret
hlt
aad
adc
adcb
test
add
shl
push
mov
int3
jns
lds
mov
mov
clc
in
lock
or
inc
addr16
xor
or
sbb
lret
das
mov
repnz
add
cmp
cmc
mov
comiss
mov
pop
loopne
arpl
xchg
add
repz
shrl
mov
sbb
clc
add
das
lods
call
adc
cmp
dec
cmpsb
int3
rorb
adc
adc
or
xor
sbb
xchg
repz
xchg
ret
iret
xor
cmp
pop
fsubs
inc
sub
mov
in
xchg
into
icebp
pushf
scas
int
fsubrs
out
and
out
or
mov
xlat
outsb
rcrl
nop
movsb
inc
mov
outsl
mov
or
sti
fs
sbb
sbb
xchg
xorl
jbe
mov
enter
push
mov
and
cmc
hlt
aad
mov
outsl
stc
nop
adc
inc
stc
mov
nop
mov
or
cmp
test
repz
into
lea
or
xchg
jns
les
jns
push
cmp
andb
gs
pop
fxch
outsb
iret
jmp
jnp
stc
sbbb
in
mov
cli
daa
xor
sbb
outsb
in
outsb
sarb
scas
lock
stc
cmc
dec
adc
dec
loope
push
push
in
faddl
mov
dec
mov
push
cmp
inc
pusha
popf
push
int
sub
jbe
fwait
loope
jle
mov
sub
in
js
xchg
fdivl
jge
fnstcw
rclb
fidivl
mov
fisttpll
rep
stos
idivb
jne
hlt
iret
dec
jb
xchg
push
test
dec
pop
scas
ret
push
push
jmp
lock
sbb
lret
js
dec
xchg
jae
xor
push
sub
and
sub
adc
push
adc
aas
cwtl
inc
dec
or
xchg
roll
mov
push
fs
shlb
add
bnd
pop
add
and
ss
js
sbb
cmpl
and
jbe
cmp
push
adc
aad
hlt
arpl
inc
dec
or
xor
jne
push
stos
jl
mov
push
lret
push
cmpsb
cmp
push
enter
test
je
loop
dec
and
leave
sbb
movsl
cmpsl
das
add
aas
inc
daa
lret
enter
mov
xchg
popf
fidivs
int3
jmp
outsl
in
xchg
or
and
cmp
ret
mov
aaa
mov
fsubl
imul
pop
clc
lret
insl
insb
dec
insb
push
fisttps
aas
aas
lea
adc
jnp
mov
mov
insl
xchg
mov
jne
sbb
push
leave
jmp
lret
xor
aam
mov
out
test
fistl
lret
loope
sahf
cmp
lret
aad
cmpsl
popa
std
lods
cmpsl
pop
cmp
lret
enter
mov
xor
test
out
or
fdivrl
fbld
movsl
fwait
sbb
cmp
jbe
and
push
jl
xchg
out
fs
das
sbb
pop
mov
pusha
xchg
in
in
cmp
int3
cld
mov
inc
hlt
nop
and
sti
jo
dec
jns
jne
lock
sbb
inc
imul
xchg
cmpsb
sbb
iret
pusha
and
xor
cmpsl
add
adc
mov
fisttpll
lods
shlb
dec
lods
ds
pop
push
dec
mov
pop
sbbl
lds
lods
int3
sbb
mov
daa
scas
xor
pop
leave
scas
and
iret
and
mov
lret
sahf
sub
dec
xchg
and
js
jge
aaa
pushf
cmc
push
inc
sub
inc
sarl
sahf
mov
push
jb
std
pop
sbb
je
pop
pop
outsb
add
in
shlb
jecxz
lock
push
mov
rorl
test
xorb
mov
sbb
shl
adc
cmp
fst
cmp
mov
fcomi
rorb
sub
out
mov
ss
insl
pop
push
jp
data16
mov
adc
imul
movsl
sub
push
pop
cmp
sahf
jnp
xor
add
dec
stos
push
sub
ljmp
xlat
push
js
cltd
cmp
push
mov
mov
shl
repnz
cld
fistpll
mov
add
push
inc
push
es
xchg
cmpsb
fnstenv
lods
inc
js
jp
mov
push
sbb
insl
mov
test
inc
and
lret
xchg
sub
push
xlat
dec
and
js
dec
dec
ret
add
loope
sbb
push
mov
or
or
loope
xchg
add
loopne
inc
jo
loop
test
mov
mov
sti
ljmp
push
pop
sub
pop
cmpsb
push
xor
std
lods
mov
mov
cld
cmpsb
mov
or
gs
daa
push
add
enter
mov
push
fs
gs
pop
mov
sbb
mov
fists
inc
inc
scas
inc
in
pop
inc
jne
fidivrl
movsb
mov
inc
cmc
sub
or
paddsw
xchg
push
xor
scas
push
mov
pusha
ror
mov
in
lods
loope
or
test
std
mov
adc
cmc
out
sbb
ss
mov
int
test
in
scas
mov
xor
adc
out
add
mov
mov
movsl
pop
test
loope
aas
and
mov
dec
addl
fidivrl
push
jo
test
add
mov
inc
loop
or
cmpsb
addr16
lods
fcomip
cli
subb
cld
jo
mov
xchg
insl
and
lods
sub
cmp
jl
mov
pushf
or
daa
dec
ret
sub
lcall
pushf
mov
or
dec
das
and
fildl
sbbl
fnstcw
lods
mov
xchg
or
and
negb
aas
push
mov
add
sbb
loopne
aas
or
xchg
inc
and
cli
inc
or
sbb
or
or
rclb
xchg
mov
negb
aam
sarl
into
pop
jbe
pop
mov
arpl
push
rorb
push
stos
and
leave
aam
push
popa
jle
je
or
pop
push
jnp
mov
ret
testb
and
fists
out
mov
daa
dec
inc
xor
es
cwtl
mov
iret
fidivrl
inc
inc
mov
sub
sti
popf
mov
in
negb
mov
outsl
repnz
sbb
fistps
fists
add
aad
movl
out
push
adc
fmuls
fwait
cltd
repz
icebp
adc
aaa
or
adc
jno
test
fmul
pop
pop
mov
push
es
mov
out
mov
std
rclb
and
call
imul
cmp
mov
pop
sub
adc
dec
dec
xor
or
xchg
out
icebp
ljmp
push
dec
cmp
add
inc
rol
xchg
mov
push
ss
outsl
stos
ret
dec
push
hlt
repnz
add
repz
sti
fmuls
and
addr16
shlb
xlat
aaa
shll
add
sbb
out
sub
mov
popa
fldcw
loopne
inc
or
pop
mov
xor
ret
sub
jg
or
subb
ret
cmpsl
mov
js
lret
or
add
inc
pop
xor
in
sub
cmc
jo
lods
jge
xchg
and
sbb
or
and
into
test
outsl
test
test
test
out
mov
add
sahf
mov
adc
push
or
fcompl
aaa
lret
lcall
push
xchg
and
push
hlt
mov
push
ficoml
sbb
idiv
loope
mov
mov
jp
cmpsb
cmp
or
rol
cwtl
orl
rclb
xor
cmp
fdiv
and
dec
mov
cmp
jo
push
pop
add
ret
mov
inc
and
pushf
jmp
sahf
xchg
popf
add
dec
enter
and
xor
inc
inc
dec
out
rorl
jp
mov
ror
fwait
inc
mov
or
mov
sbb
cli
sub
pop
cmp
mov
mov
test
cmpsl
lcall
or
push
inc
in
or
cmp
or
cmp
or
lret
movsb
lret
cwtl
addr16
ret
nop
cltd
vpunpcklbw
bound
push
rorb
sub
std
push
adc
test
cs
adc
cmpsl
lock
push
out
xchg
sub
dec
cli
hlt
fsubl
push
xchg
add
icebp
jnp
lahf
sbb
enter
mov
out
dec
aas
daa
mov
out
pop
dec
rclb
add
mov
dec
nopl
mov
and
fistps
sub
inc
or
imul
imul
push
or
cmpsb
ljmp
inc
test
fmuls
out
jno
or
fdivrp
and
fxch
cmp
push
sbb
mov
cmpsl
fldenv
call
xchg
test
sub
daa
pusha
pop
cmc
jecxz
bound
hlt
insl
adc
mov
jnp
pop
mov
shl
bound
push
rolb
jo
out
push
repz
mov
sub
mov
push
xor
mov
pop
out
mov
nop
in
xchg
xchg
xor
test
sbb
mov
les
movl
addr16
fstp
cmp
adc
fidivs
pop
test
pop
mov
sub
cmp
mov
out
movsb
pop
rcll
mov
scas
out
sub
js
mov
ljmp
xchg
add
mov
scas
data16
push
mov
mov
push
mov
call
fisubrl
repnz
hlt
push
jae
jno
idivl
fs
mov
mov
xchg
sub
movsl
enter
adcl
push
lods
push
pop
dec
adc
dec
mov
jle
rclb
adc
adc
jo
les
hlt
add
sub
cmp
cli
inc
xchg
mov
fiaddl
inc
fnstcw
in
enter
sbb
fisttps
add
cmpsl
orl
pop
lea
hlt
adc
in
sub
or
mov
jne
mov
ret
or
popf
push
cmp
sub
icebp
xchg
mov
lret
lea
jle
sbb
dec
call
icebp
push
push
leave
mov
sbb
mov
sarl
jmp
push
shll
add
bnd
push
xchg
or
les
or
repnz
stc
jns
adc
jg
loop
dec
stos
jb
adc
push
cld
sbb
test
dec
and
loop
cmc
lds
push
push
mov
les
popa
out
mov
testl
clc
or
ljmp
add
stos
xor
sub
jmp
lahf
out
push
scas
clc
xchg
mov
adc
ss
fisttpll
ds
push
inc
xor
mov
cmc
dec
xor
clc
ja
ret
ljmp
imul
inc
pushf
pavgb
jp
pop
inc
push
test
xchg
loopne
cmpsl
fdivrl
mov
or
xchg
mov
inc
pop
and
aaa
xchg
xor
dec
bound
cli
cmp
adc
xor
pop
mov
rcl
and
mov
ret
cli
outsb
in
fs
xor
pushf
lods
test
pusha
sbbl
movsl
mov
sahf
repz
das
mov
lods
mov
cli
mov
incb
bound
ret
popa
int3
xchg
adc
pop
jb
inc
mov
jbe
pop
imul
loopne
xlat
adc
sbb
insb
in
out
lahf
jmp
test
inc
dec
jno
pop
mov
fwait
xor
lahf
pop
dec
dec
mov
cwtl
sbb
icebp
jnp
mov
pushf
sarl
scas
add
test
pushf
out
int
popa
adc
imull
insb
shrl
aaa
push
cmpsb
mov
cmp
frstor
mov
fistpl
push
mov
push
lcall
mov
dec
lock
shld
dec
pop
jle
gs
dec
pop
add
jns
out
sbb
mov
xor
rcr
aas
jne
push
mov
jge
adc
rorl
lahf
dec
enter
hlt
dec
cwtl
jno
xchg
fcoms
pushl
cld
mov
mov
test
jo
mov
pop
dec
jns
and
into
loopne
and
sub
or
lods
testb
shll
pusha
cmp
cmpsl
add
adc
stos
sarb
daa
sar
xchg
les
mov
mov
mov
cmp
out
adc
rorb
xchg
test
cs
das
clc
ds
push
decb
xchg
repnz
int3
in
in
push
in
lods
insl
dec
insl
popa
cmpsl
sbb
cmp
push
push
xchg
xor
mov
stos
iret
cmp
and
repz
clc
test
inc
push
imul
mov
sbb
in
sub
cs
cmp
pop
jp
adc
and
popa
ss
test
roll
xor
loop
fwait
cltd
out
xchg
and
adc
outsb
push
add
sub
pusha
fs
add
dec
aam
push
pop
loopne
call
push
enter
aaa
jg
out
adc
scas
sbb
xchg
sub
push
mov
jnp
arpl
xchg
out
loope
xchg
adc
mov
scas
movsl
movsl
push
ds
repnz
rolb
jae
fs
movsb
cmp
jnp
pop
fstps
es
and
mov
lret
rcrl
fwait
mov
stos
iret
insb
je
rcrb
pushf
xor
dec
jmp
mov
cli
not
mov
fwait
subl
lcall
push
jns
and
and
pop
test
or
gs
pextrw
aas
add
std
gs
fwait
insl
sub
jmp
rcrl
popf
mov
push
xchg
out
jnp
cmp
sbb
xchg
jo
xchg
in
adc
lret
pop
xor
call
xchg
and
or
jmp
dec
fistl
xlat
add
lret
push
add
fs
push
adc
imul
push
aas
pop
add
inc
popf
push
jae
negb
jmp
mov
out
out
inc
scas
adc
pop
jo
mov
inc
gs
ret
jb
xchg
mov
inc
cmp
jg
aaa
jnp
jge
jns
repz
sub
push
and
sub
fdivl
rorb
dec
aad
and
xor
dec
out
inc
sub
pop
add
pop
adc
loope
arpl
dec
icebp
xchg
and
iret
jle
and
inc
mov
inc
rcr
cltd
inc
adc
aam
xor
sbb
mov
sub
lea
mov
clc
inc
push
dec
jecxz
jno
shrb
arpl
stos
shlb
adc
dec
push
pop
not
stos
xchg
arpl
imul
inc
and
sub
rcrb
jo
out
neg
dec
mov
gs
shlb
adc
jge
pop
jge
fcomps
das
cmp
stos
xchg
jbe
mov
push
test
mov
adc
xor
pop
inc
imul
repnz
jmp
mov
loopne
cmp
xlat
pop
in
ret
pop
leave
xor
mov
jg
pusha
mov
add
sahf
and
dec
inc
stos
andb
push
int3
pop
lahf
out
jns
pop
pop
ret
or
adc
or
jmp
sbb
add
fisttps
pusha
lods
pop
mov
shll
push
addl
cli
ret
ret
or
inc
jecxz
fsubrl
ffreep
push
and
jbe
dec
call
fisttps
jmp
adc
dec
mov
sub
push
iret
popl
repnz
out
jb
mov
test
jo
mov
cmp
test
out
fadds
sbb
ss
push
cmp
lock
sub
sbb
dec
mov
shll
rolb
lret
imul
lods
cmp
iret
sarl
std
hlt
rcrl
arpl
xlat
stc
ljmp
adc
stos
inc
mov
enter
jae
neg
sbbl
data16
mov
jns
adc
lahf
or
ret
fnstcw
fcomp
loope
jg
mov
scas
jecxz
nop
pop
pop
scas
or
push
dec
ljmp
inc
xchg
stc
inc
lods
mov
repnz
mov
out
add
stos
mov
push
fsts
stos
sbb
scas
gs
adc
mulb
call
mov
ret
jo
jg
mov
inc
ljmp
das
iret
outsb
jnp
mov
pop
push
push
jge
or
and
sbb
push
mov
jae
aas
mov
leave
loopne
dec
sub
add
jge
gs
mov
fwait
in
dec
lcall
cmp
js
and
cmp
mov
or
mov
add
sub
xchg
test
mov
cwtl
das
popa
enter
mov
and
nop
and
cmpsb
push
test
imul
ss
pop
xorb
cld
stos
xchg
sbb
test
loop
rorb
xchg
fstpl
inc
adc
pop
test
pop
enter
pop
lret
jne
and
pop
adc
daa
dec
cld
js
mov
jbe
jle
lret
cmp
or
lock
divb
xchg
aaa
popf
les
hlt
mov
push
bswap
push
ljmp
xlat
sbb
ja
aaa
sub
jge
insl
jnp
test
cmpsb
dec
enter
mov
lcall
inc
in
sbb
xor
cld
xchg
mov
arpl
nop
insl
push
aas
sahf
mov
sub
ret
sti
pusha
mov
lods
cmp
mov
bound
xchg
push
xchg
pop
mov
in
insl
icebp
les
nop
testl
mov
sbb
xrelease
gs
imul
arpl
lret
lods
xor
xchg
sub
ljmp
lret
stos
out
aad
cltd
out
cmpsb
jo
jbe
subb
orl
lcall
pop
movsl
adc
sub
push
dec
adc
dec
sub
xor
push
outsb
fs
fdivrs
add
andl
and
sub
push
and
add
push
sub
cmp
cmpsl
xchg
push
adc
rcrb
lret
lea
adc
mov
ja
pop
imul
jb
mov
xor
add
inc
dec
dec
ret
inc
jg
mov
xchg
push
sub
hlt
jb,pn
mov
add
enter
sbb
xor
mov
xor
scas
test
jg
cld
idivb
shll
push
adcl
mov
lret
mov
xor
dec
movhps
mov
pop
xor
sub
xchg
mov
mov
dec
mov
cmp
or
call
cmc
mov
xor
stos
fnsave
les
mov
lods
arpl
pop
icebp
jnp
mov
pop
mov
shll
pop
and
xchg
mov
stos
insl
xchg
pop
jle
pop
into
not
stc
insl
xor
sub
ffree
or
test
adc
lret
xor
jle
jno
es
adc
testb
leave
push
push
lds
mov
insb
dec
mov
pop
in
xor
push
add
ret
in
ss
divb
mov
inc
loope
mov
sub
push
fldt
add
call
mov
xor
xchg
jns
mov
je
or
loop
rcrl
lds
dec
pop
stc
pushf
mov
push
jge
fbld
pusha
push
ss
mov
movb
jno
leave
out
xlat
fldt
push
inc
or
push
sbb
cwtl
jl
add
aam
mov
xor
aam
dec
ret
movsl
les
push
aam
int
ret
fisttpl
fwait
inc
faddl
shl
or
or
push
push
xor
je
daa
in
in
lcall
pop
adc
and
push
sbb
mov
push
mov
mov
jns
addr16
mov
xchg
rcl
jne
gs
mov
inc
sub
pop
push
fadd
iret
cmpl
adc
dec
or
sub
out
mov
mov
sbb
jns
ljmp
push
mov
int
das
js
push
push
pusha
fwait
or
es
outsl
mov
push
mov
jnp
mov
cmp
enter
pusha
fldt
lcall
mov
jns
int3
mov
in
push
das
mov
in
sbb
fmul
sub
jne
xor
pop
popa
insl
jg
imul
lds
in
dec
das
mov
push
in
inc
notrack
mov
test
leave
icebp
adc
add
xchg
pop
lea
dec
add
pop
mov
in
jo
lret
add
dec
cmp
xchg
mov
pop
clc
js
or
mov
mov
push
or
out
mov
dec
inc
je
daa
loopne
cwtd
in
mov
mov
data16
cs
ret
call
inc
ret
lret
dec
pop
and
mov
pop
xor
dec
test
xchg
xchg
xchg
test
repz
xor
enter
bound
sbb
aas
mov
es
fistps
enter
sbb
std
mov
xor
mov
ficoml
jae
inc
fs
faddl
aad
test
mov
rcrb
xor
cmp
pop
push
inc
loope
scas
dec
insb
xchg
xchg
push
nop
notl
fnstcw
mov
es
add
xbegin
mov
vpavgb
mov
outsb
or
dec
cmp
bound
shll
lret
ss
lret
imull
andps
push
push
sub
outsl
sbb
push
mov
out
fs
ret
mull
movsb
cmp
mov
in
int
push
sarb
repz
dec
adc
clc
and
inc
mov
mov
and
pushf
xor
inc
sub
mov
mov
push
loope
fildll
jmp
jae
mov
inc
push
cmp
push
icebp
mov
loope
ja
xchg
push
fisttpl
xor
rcrb
lahf
push
inc
mov
xorl
cmp
cs
enter
lods
sbb
outsl
xchg
leave
daa
and
outsl
subl
pop
ret
scas
jae
fsub
pop
or
mov
scas
rolb
pop
xor
xor
inc
pop
int
sub
imul
mov
xor
add
xchg
jb
addb
fisubl
filds
cmp
mov
cmp
je
mov
mov
sub
dec
xor
in
dec
inc
pop
jge
jnp
lret
sub
adc
mov
jne
mull
pop
fistl
xor
stc
and
pop
add
jne
clc
pop
push
dec
iret
scas
movsl
out
push
adc
sahf
jb
mov
test
jmp
and
push
lds
and
mov
jle
add
ljmp
inc
cmpsb
jbe
rcrb
xchg
imul
sbb
into
mov
mov
inc
jo
imul
mov
push
pop
mov
sub
jns
pushf
insl
in
xor
add
jbe
jae
xchg
lds
movsb
out
scas
sbb
orl
inc
jmp
xchg
push
xchg
and
dec
xchg
lods
fwait
adc
insl
cmpsl
scas
cmp
in
push
or
jmp
adc
pop
dec
or
test
push
add
repnz
out
lods
sbb
or
testl
pop
inc
or
pop
into
push
push
push
stos
cmpsb
insb
and
add
mov
in
shlb
pop
popa
jmp
addr16
inc
inc
out
addl
sarb
sub
test
call
lcall
xchg
inc
sahf
mov
stos
add
pop
dec
fimull
insl
cltd
rorl
mov
imul
mov
cmp
ss
aaa
stos
fwait
push
addr16
sbb
fwait
add
cmpsb
gs
mov
fwait
lret
pop
ljmp
xorps
aam
loopw
and
insl
mov
fcmovne
cli
pusha
cmp
xchg
mov
lock
jae
pop
push
cwtl
pop
push
imul
jbe
push
lcall
xchg
mov
cmpsl
cmc
jmp
push
divl
pop
test
sub
cmp
xchg
out
or
cmp
aam
push
shl
xlat
pop
jb
fidivrs
push
mov
je
jb
lds
jae
pop
ficompl
fsubs
imul
out
pop
dec
in
je
fistpll
push
pop
inc
ss
pusha
mov
ret
insl
mov
pop
lcall
mov
hlt
jno
in
pop
loop
pushf
scas
dec
aas
pusha
sbbb
in
imul
hlt
dec
cmp
fnstcw
inc
into
mov
aaa
cld
adc
push
jp
jne
insb
xchg
sub
aas
inc
sti
add
loopne
pop
dec
jbe
mov
out
cmpsl
subb
outsb
cmp
call
out
lahf
xchg
aaa
push
mov
jno
push
jp
into
add
fisubrs
dec
scas
and
jg
mov
inc
ret
nop
pusha
cmp
loop
push
mov
arpl
jp
shl
add
notb
sbbl
xchg
jae
jb
fstpl
outsl
xor
xchg
into
gs
push
mov
lahf
jnp
or
xchg
push
adc
std
xor
mulb
icebp
add
sub
mov
sub
sbb
cmp
sahf
dec
dec
xchg
push
mov
pusha
xor
ss
push
mov
mov
pop
jp
sub
adc
in
add
call
pop
outsl
mov
mov
leave
shll
out
std
sub
push
push
push
out
cmpsl
out
sub
cli
lret
mov
sub
pop
jne
jl
cmp
or
push
xor
inc
lock
mov
repnz
daa
out
push
pop
outsb
sub
shr
push
and
xchg
dec
xchg
cmc
adc
and
inc
and
mov
jmp
push
jl
xorl
shlb
and
sbb
pop
les
in
pop
push
add
stos
insb
in
stc
push
add
data16
inc
lods
test
mov
jbe
add
in
lea
add
inc
jge
add
jmp
pop
cmp
adcb
dec
push
add
cmpsl
fistpl
sub
stc
ret
pop
fidivrs
int
mov
mov
popa
notb
pop
inc
cltd
dec
push
daa
lods
pop
nop
push
cli
adc
movsb
fidivl
fidivrl
mov
ljmp
lods
movsb
pushf
mov
xor
adc
loop
call
jno
xor
repnz
push
scas
lahf
hlt
sbbb
pop
and
aas
ss
data16
sub
popa
arpl
sbb
mov
mov
std
lods
idiv
cmp
sub
lods
add
sub
lds
sahf
movb
xor
sub
jnp
loope
cmp
mov
scas
out
adc
push
adc
jns
ret
dec
lahf
mov
dec
adc
cmc
jge
lcall
movzbl
jmp
lret
outsb
daa
fiadds
dec
xlat
pop
mov
and
repnz
dec
adc
xchg
inc
xchg
and
ss
mov
push
mov
jge
sub
sub
jns
mov
dec
pop
push
in
imul
out
xchg
arpl
repnz
jge
dec
jns
jae
decl
sti
sahf
and
sti
ss
pop
loope
and
leave
fldcw
mov
dec
test
rorl
push
iret
outsb
add
add
push
xlat
loop
push
in
add
or
jne
gs
stc
ret
mov
ljmp
add
dec
mov
js
js
stos
mov
and
inc
mov
adc
shrb
inc
testl
mov
shl
sub
sbb
mov
lea
jp
ret
hlt
leave
idivl
movb
adc
jg
je
cld
lock
shlb
push
pop
xlat
mov
aas
cltd
push
enter
repz
cmp
scas
jae
iret
out
inc
dec
adc
mov
roll
cmp
add
lods
mov
adc
ja
dec
pop
xor
mov
mov
xchg
fldenv
xorl
lods
or
push
mov
in
inc
cmp
inc
in
sbb
jo
leave
or
inc
fs
fwait
add
cmp
pop
xorl
loope
mov
sub
incl
mov
mov
adc
push
or
pop
fldl
inc
mov
scas
push
dec
add
sbb
xor
add
nop
aas
and
dec
push
pop
push
stos
cmc
inc
cmp
add
mov
mov
mov
je
xor
adc
xchg
movsb
lods
push
stos
outsl
fidivrl
cmpsl
push
jbe
lods
ljmp
push
dec
mov
cmp
jo
mov
into
inc
xor
es
sbb
inc
cmp
push
sbb
sub
sub
jbe
or
xor
imul
inc
sub
popf
lahf
cmp
cmp
loope
testb
mov
stos
pusha
mov
pop
leave
push
pop
shl
push
cmc
rolb
fdivrs
and
inc
push
inc
dec
sbb
pop
adc
les
sub
pop
outsl
mov
inc
push
enterw
sbb
test
xorb
sbb
loop
jmp
fcoml
mov
pop
push
cwtl
scas
jg
std
dec
outsl
mov
mov
sub
push
iret
push
sub
stos
xor
cmpsb
sbb
stos
dec
cld
into
inc
push
ss
fstpl
push
push
cmp
jb
sbb
stos
leave
mov
imul
aad
xlat
daa
add
xchg
outsb
adc
dec
test
jl
pop
cmp
inc
cmp
jmp
or
ret
les
jo
dec
outsb
sbb
xchg
faddl
dec
and
aas
xlat
jle
imul
sbb
mov
xlat
je
sarb
gs
cli
add
cmpsl
arpl
xchg
add
jno
pop
enter
inc
loopne
inc
lds
loop
out
lahf
out
mov
nop
lods
dec
popf
inc
in
ficoms
mov
cmp
mov
sti
subl
and
mov
in
pop
xor
inc
sbb
pop
fcmovnb
jne
dec
insl
ret
daa
mov
cwtl
aad
mov
leave
cmpsb
not
adc
test
push
test
aad
fisubrl
test
dec
addr16
jb
ljmp
std
leave
aam
or
loope
mov
js
sub
mov
sbb
pop
jae
ja
xor
push
pop
mov
and
dec
sbb
add
sub
mov
stc
xor
daa
pop
mov
les
enter
jo
xor
dec
popf
and
popf
fsubs
add
and
scas
cmp
pop
mov
imul
jbe
mov
mov
sbb
fnstsw
sub
outsl
fwait
xchg
xor
lret
imul
nop
hlt
push
jp
pop
push
in
pop
cmpl
mov
sub
cmp
xchg
ret
outsb
xchg
xchg
jnp
push
jge
rcr
loopne
insl
jmp
addr16
and
jbe
and
mov
inc
iret
loope
insb
in
imul
shr
sbb
and
sbb
arpl
movsl
adc
rcrl
pop
jo
or
stos
add
lahf
pop
adc
xor
push
xchg
mov
add
push
pop
fimull
loope
sti
fcomps
stos
insb
push
cmc
fs
inc
xchg
mov
or
dec
popa
pop
ret
and
clc
push
mov
outsb
sub
cltd
jge
bound
test
jle
and
movsl
xor
push
mov
pop
pop
mov
jmp
hlt
insb
loope
inc
inc
jl
hlt
clc
mov
adc
imul
ljmp
out
sahf
cltd
xchg
or
mov
fwait
insl
lds
lret
cmp
add
push
scas
or
cmpb
outsb
fdivr
insl
xor
in
push
sti
inc
sbb
mov
dec
bound
or
adc
jg
pop
iret
pop
out
adc
pop
int3
push
lret
pop
scas
dec
inc
out
pushl
cli
test
inc
leave
add
and
popa
pusha
mov
push
pop
mov
inc
xor
jnp
out
in
dec
mov
into
shll
xor
test
adc
hlt
loope
jg
jle
and
inc
sbb
fldcw
inc
outsb
es
lods
push
jns
notb
mov
scas
pop
mov
into
cmp
les
jl
sbb
adc
daa
push
xorl
out
mov
sbb
or
mov
jo
into
adc
inc
fimull
jl
orl
xlat
xor
idivb
pop
outsl
scas
scas
jg
push
add
mov
mov
jecxz
cmp
cmp
xor
clc
lea
xor
int
pop
out
sbb
inc
rorl
inc
in
loopne
cmp
loop
mov
xchg
dec
test
in
ljmp
jb
subb
adc
insl
or
pop
lea
pop
or
jl
out
jl
scas
and
stc
clc
outsb
push
pop
dec
jecxz
loopne
adc
in
pop
gs
sbb
adc
and
and
test
andb
loope
mov
movsb
xchg
gs
push
push
clc
and
adc
fildll
cmp
cmpsb
sbb
mov
adc
fucomi
outsb
mov
les
int
and
mov
inc
xor
push
out
mov
movsl
push
enter
fisttps
in
cld
pop
inc
lea
and
pop
lcall
ret
push
adc
pop
insb
mov
xchg
out
and
ret
pop
jle
xchg
sbb
arpl
push
add
stos
and
ljmp
mov
xor
enter
mov
pop
dec
ror
movsb
cmp
loope
adc
and
xchg
lahf
cltd
stos
sbb
lcall
outsl
xchg
neg
lds
add
mov
mov
in
mov
pop
pop
mov
lret
push
ret
cs
in
int
arpl
mov
push
push
ret
inc
add
sub
out
xchg
xchg
jmp
adc
pop
mov
cmp
addb
aad
mov
lahf
aaa
nop
mov
sbb
data16
cmpsl
and
pop
jno
mov
dec
or
sbb
cmp
xchg
outsl
mov
jns
ret
sbb
jg
dec
lahf
cltd
ret
in
mov
adc
mov
push
nop
nop
jbe
nop
push
out
hlt
sahf
cmp
xor
push
shll
sbb
xorb
push
shrl
fiadds
sbb
xorb
out
das
mov
inc
cmp
and
push
test
mov
fistpll
mov
test
xchg
xlat
pop
dec
inc
push
adc
pop
std
jns
mov
pop
ret
pop
lcall
push
add
sub
loopne
jecxz
adc
cmp
adc
push
into
subl
jbe
dec
test
cmp
andl
loopne
dec
gs
out
fadds
arpl
push
mov
pop
lods
push
cmpsb
push
mov
jnp
sarl
xor
push
pop
out
insb
cmp
sub
add
mov
sbb
popa
dec
pop
mov
sbb
push
inc
fisttpl
adc
or
push
pop
push
rorb
pop
shlb
pop
pop
jg
inc
push
pop
lods
and
jmp
fs
sub
pop
divl
adc
xchg
mov
push
cmp
mov
push
jle
fisubrl
add
xchg
notb
push
iret
inc
xchg
sbb
jge
data16
mov
pop
inc
ljmp
inc
xor
xchg
adc
pop
testl
add
int3
add
xor
mov
xor
dec
roll
dec
outsl
cmp
mov
pop
loopne
adc
ret
addr16
mov
insb
je
out
or
nop
xchg
push
sbb
and
stc
test
nop
sbb
je
mov
mov
pop
xor
insb
repz
and
inc
test
mov
jecxz
pop
xor
fstps
repz
je
jmp
sub
icebp
imulb
inc
jecxz
js
cwtl
or
jb
aad
enter
ljmp
pop
lds
loopne
clc
xchg
cwtl
xlat
add
shl
adc
mov
inc
or
cmp
push
js
mov
out
leave
dec
in
imul
push
mull
add
jecxz
cltd
pop
mov
pop
loopne
movsl
xchg
pop
mov
mov
out
inc
fstl
adc
adc
lret
jo
pop
fidivrs
mov
into
and
cmpb
sub
xchg
inc
clc
sub
into
push
popa
es
popf
repnz
mov
std
push
out
adcb
cmp
mov
ja
sahf
mov
scas
shl
outsb
sub
xchg
loope
repz
lahf
jle
ds
aas
test
notl
scas
jmp
fisubrl
pop
fucomp
mov
lds
mov
cwtl
jne
int
jo
nop
push
push
or
and
leave
and
es
ljmp
mov
sub
fs
mov
add
mov
addr16
push
jo
fildll
sbb
shll
or
pcmpeqw
lahf
pop
in
add
shrb
mov
out
and
sub
out
imul
jo
loope
dec
adc
pop
push
daa
lahf
mov
cmp
push
aaa
fisttps
or
jecxz
mov
neg
lods
inc
repnz
in
mov
add
jl
xchg
lret
lods
mov
arpl
xchg
lods
jae
lret
mov
fimull
addl
neg
std
movb
inc
imul
jno
mov
out
movsl
mov
push
les
loope
sbb
arpl
dec
jns
push
dec
or
ljmp
xchg
mov
inc
sbb
test
xchg
jnp
cmp
push
stos
or
scas
outsb
aam
in
daa
xorb
mov
jge
out
test
adc
insb
jnp
mov
popa
cmpsl
add
jno
nop
addb
push
out
notb
mov
aam
add
or
dec
push
xchg
fnstcw
push
sub
push
pop
popa
adc
lds
and
outsb
fisubl
lahf
mov
mov
mov
mov
sub
jecxz
mov
sub
or
int
popf
xchg
sub
xchg
int3
fnsave
loopne
pusha
cmp
cwtl
int
or
xchg
or
out
stos
cltd
inc
push
mov
adc
movsb
aas
push
xor
inc
pop
mov
mov
pushl
cmp
rcrb
mov
mov
xor
sbb
inc
sbb
test
lret
inc
movsb
imull
push
sahf
lret
pop
and
add
xor
pop
mov
shrb
out
fs
xor
fsubr
xchg
pop
je
sub
std
leave
jo
int
sub
gs
cmp
inc
sbbb
repz
adc
hlt
mov
cmp
fs
aad
jbe
adc
fwait
mov
sbb
stos
add
mov
roll
jns
movsb
xchg
test
insb
repnz
and
iret
inc
aaa
cmp
adc
inc
add
inc
addr16
lock
int3
out
jo
cmp
jmp
scas
divl
push
imulb
push
pop
or
push
aaa
sarb
das
aaa
adc
sub
mov
shrb
insb
aas
sub
and
addr16
cmp
jg
inc
mov
mov
mov
jne
cld
xchg
into
out
pop
outsl
and
fimull
pop
push
cmp
lock
jmp
loope
sbb
pop
rorl
mov
inc
inc
movsl
enter
mov
mov
xchg
lret
sub
mov
ret
sti
cmp
xchg
adc
pop
dec
pop
sbb
adcb
mov
cwtl
xchg
adc
cmp
in
loope
dec
test
add
jmp
sub
mov
push
out
loop
add
push
lret
nop
sbb
hlt
pop
push
nop
cs
mov
mov
data16
xchg
in
sub
cld
scas
out
and
outsb
jae
xchg
or
fsts
push
repnz
les
ljmp
mov
movsb
int
add
mov
fcomp
and
out
nop
enter
int3
cmp
inc
aaa
push
insl
aas
pop
cmp
and
xor
fldcw
pop
inc
pop
lods
lahf
outsl
lock
rorb
jae
lods
add
jb
sbb
lret
mov
push
lock
mov
ret
imul
dec
push
mov
out
test
jno
add
add
std
jmp
in
daa
jnp
push
push
and
push
es
lcall
xchg
sbb
dec
sbb
jns
loop
xlat
mov
clc
jns
in
sub
bound
movsb
or
cmp
sbb
dec
mov
lock
jno
stc
mov
mov
pop
test
rorb
mov
mov
js
mov
sub
sarb
pop
or
pop
lock
ret
int
or
dec
iret
stos
sub
inc
scas
enter
mov
cmp
imul
cmp
cmp
data16
jp
neg
push
inc
jno
test
loopne
insl
mov
cmpsb
xor
lods
sbb
mov
mov
test
test
movsl
mov
inc
mov
movsb
adc
dec
and
mov
andb
add
jmp
xchg
xchg
js
sbb
das
inc
adc
stos
aam
pop
dec
and
mov
lds
cmpsb
pushf
jae
xlat
int
pop
fldenv
lods
fimuls
mov
dec
cld
pusha
or
inc
cli
adc
mov
dec
andl
insb
push
jno
sbb
or
mov
xlat
push
cld
push
pop
mov
sbb
jbe
xchg
sub
pop
sbb
dec
mov
jle
or
test
into
fstl
ficompl
int
lods
dec
mov
pop
xor
mov
pusha
add
mov
push
movsb
ret
jecxz
ljmp
xor
mov
out
push
jae
cmp
stos
pop
fldt
ret
test
testl
adc
mov
mov
xchg
dec
clc
push
out
sbb
sbb
mov
js
dec
mov
pop
pop
jl
in
xchg
push
mov
jae
sbb
add
push
bound
cmp
push
xor
jb
add
arpl
dec
in
or
sbb
add
ret
fadds
lock
sub
mov
fwait
adc
mov
mov
mov
clc
jnp
jle
pop
pop
push
out
mov
leave
aaa
shrb
mov
fisubl
cmp
pop
mov
jo
into
pop
movsl
push
xchg
pop
lods
mov
xor
fwait
add
jge
lret
mov
inc
in
sub
xchg
pop
xor
add
cmpl
pop
dec
shl
enter
xchg
out
loope
test
jne
fnsave
jg
xchg
fnstenv
push
jmp
idivb
arpl
pop
xchg
sbb
mov
mov
out
push
imul
rorl
or
jle
ds
pop
cmpb
push
aas
in
push
push
cmp
xchg
sbb
outsb
in
in
dec
in
mov
mov
ljmp
leave
movsl
popa
and
fcmovnbe
and
std
stos
je
add
test
shl
js
cmpsb
cmp
sub
mov
in
or
pop
cmp
xor
ficoml
dec
cmp
dec
hlt
and
fdivs
pop
pop
inc
push
popa
pop
push
dec
loop
sub
out
mov
jle
bndldx
add
mov
ja
mov
std
fsts
jmp
negl
sti
punpckhwd
and
aad
jmp
ljmp
mov
fadd
fmul
int
push
nop
and
sub
stc
mov
aad
je
jecxz
cmpsb
fsts
cmp
or
dec
movsl
pop
test
lcall
lret
push
cltd
aas
mov
xchg
push
jg
xchg
cmp
pop
lock
adc
fcomps
and
add
mov
outsl
in
fdivs
add
xchg
in
lcall
jno
lcall
mov
incl
mov
jg
and
cmp
push
cmp
pop
fsubrl
push
xor
inc
jbe
add
ffreep
mov
lds
push
push
ret
pop
movsb
and
enter
call
dec
cli
sub
xlat
mov
fsubr
add
inc
into
mov
sub
std
dec
jp
and
imul
fists
sahf
orb
sbb
jl
xchg
mov
test
or
cmp
xchg
lods
sub
aad
jge
int
jbe
pop
je
mov
inc
outsb
in
push
pop
push
jae
sub
push
xchg
xor
inc
pop
into
in
push
mov
movsl
in
jge
push
daa
into
dec
rorl
jo
outsl
lods
xchg
fisubl
dec
xchg
bound
lret
test
pop
outsb
push
jecxz
roll
gs
push
push
or
shl
ss
clc
push
xlat
lea
leave
pusha
ret
mov
jbe
es
insb
fdiv
fsubp
mov
repz
cmp
lcall
mov
mov
push
xlat
jb
pop
cs
aam
scas
movsl
jae
push
iret
orl
jmp
or
out
mov
sbbl
jmp
nop
sti
icebp
inc
push
add
dec
nop
inc
sbb
loop
gs
adc
insb
scas
dec
or
sbb
xor
lock
scas
sti
bound
pop
lock
or
subb
xlat
das
inc
add
inc
enter
scas
ja
mov
adc
test
aad
push
fwait
cmp
xchg
lock
sti
mov
xor
je
adc
fwait
sbb
inc
dec
jbe
jp
aam
aas
rorb
xchg
icebp
sub
out
push
cli
mov
sarb
ja
sbb
pop
pushf
push
lahf
ss
xchg
sbbb
test
pop
cmp
push
xchg
xor
and
push
xchg
mov
addb
mov
xor
pop
push
mov
movsl
orb
xchg
cmp
repnz
aad
and
imul
xchg
aaa
xchg
stc
inc
pushf
mov
in
dec
pop
je
aaa
test
jbe
sahf
and
pop
jbe
xchg
sub
cwtl
lahf
leave
and
ds
push
lcall
cmc
mov
pop
or
push
lea
mov
inc
pop
mov
xor
mov
adc
ss
test
adc
xlat
sbb
dec
clc
jg
inc
jno
mov
repnz
push
sub
add
xchg
cltd
inc
lahf
icebp
imul
ficompl
in
lods
pushl
lods
and
loope
sbb
aad
push
mov
and
and
out
xor
mov
jbe
out
in
rol
jl
repz
pop
fistpll
cmp
jmp
cs
dec
popa
pushf
inc
add
xlat
and
sub
sub
subl
jno
sub
jge
stos
dec
and
xor
ds
notl
push
push
inc
jl
cmpsl
or
aas
mov
push
jno
sbb
and
enter
test
or
jno
mov
adc
aaa
push
imul
js
aas
xchg
pop
mov
ret
mov
mov
lea
filds
adc
adc
mov
and
push
xchg
out
adc
push
stos
mov
gs
or
jmp
cld
inc
daa
xlat
and
cmp
sarb
shll
sbb
xchg
movsl
mov
jp
fcomps
lahf
push
das
add
jg
pop
push
inc
mov
mov
ljmp
jecxz
and
test
test
push
add
addl
xchg
ret
nop
pop
xchg
push
flds
sti
lret
loope,pn
cmp
filds
sub
scas
nop
ja
and
mov
loopne
dec
mov
xor
pop
gs
ja
loopne
aad
push
sub
mov
icebp
dec
rclb
test
dec
faddl
std
push
dec
lods
aas
or
cmp
cltd
into
outsl
dec
dec
dec
sahf
and
pop
nop
inc
icebp
sub
mov
lea
loopne
inc
pop
lods
xchg
add
xlat
insb
imul
mov
lcall
sti
test
mov
or
mov
test
dec
jmp
push
mov
inc
sbb
and
xor
out
xlat
sub
mov
push
fcmovb
rcl
das
aas
mov
inc
movsl
repnz
xor
loopne
int3
pop
jne
imul
mov
push
stc
nop
jmp
push
popl
leave
sbb
dec
add
rorl
mov
dec
fwait
cmp
loopne
lds
adc
nop
call
mov
dec
mov
repz
pop
les
pop
addr16
sahf
push
aam
aam
sbb
mov
in
push
mov
fimuls
ljmp
sbb
add
add
push
add
pop
fs
xor
xor
xchg
aam
push
ret
xchg
dec
push
jg
jae
ror
movsl
push
add
ljmp
sub
mov
push
and
jns
out
mov
test
shrl
cli
jne
jb
popa
fiaddl
pusha
add
dec
arpl
mov
dec
dec
ljmp
jnp
jns
mov
jbe
call
push
stos
dec
mov
scas
andl
mov
inc
negl
ds
add
push
sbb
fabs
lret
jb
dec
jmp
add
ljmp
ja
add
mov
and
mov
mov
fstl
cmp
mov
and
mov
mov
out
push
dec
xor
pop
in
mov
mov
fbstp
mov
sbb
movl
hlt
xchg
movsb
add
pop
shlb
shlb
divb
in
out
adc
dec
movsl
sarb
gs
paddusw
cmc
mov
rolb
popa
aas
adc
add
rclb
sbb
xor
cmpsb
add
enter
lret
sbb
jecxz
xchg
jnp
gs
push
stc
dec
loopne
mov
insl
push
push
lret
in
test
js
roll
or
lods
cmp
insl
andb
into
movsl
push
lret
jno
aas
adc
and
hlt
adc
jl
fnstcw
xchg
outsb
mov
xchg
rcll
enter
lds
cwtl
sub
std
lret
rclb
and
mov
repnz
cltd
jo
out
scas
mov
cwtl
push
imul
xor
or
loope
and
ret
mov
jl
inc
sub
jmp
mov
popa
push
sub
xchg
rolb
jecxz
add
mov
sbb
cmp
stos
jle
sbb
push
lret
add
fstpl
sub
test
lret
jb
fstpl
repnz
int3
fwait
outsb
pop
push
inc
imul
test
mov
cmpsb
and
je
mov
push
mov
int3
outsl
or
test
ljmp
xchg
cmp
add
sbb
xor
in
xor
xchg
call
mov
mov
repnz
xor
insl
mov
mov
push
sbb
push
jns
pop
call
push
repz
xchg
dec
rol
imul
push
or
mov
sbb
and
sti
jmp
cmp
lods
xchg
lods
push
fisubs
mov
push
pop
out
push
jae
xor
repz
xchg
js
xor
mov
jne
mov
clc
xlat
mov
pop
repnz
shll
in
pop
hlt
stos
cmp
or
fildll
cs
inc
incb
popa
mov
lcall
lcall
sub
jmp
jns
xor
xor
js
sub
and
xor
cs
cmp
dec
sub
mov
ja
dec
pushl
and
sub
jo
jne
arpl
jne
imul
mov
mov
sub
out
add
jle
add
gs
addr16
pop
out
xchg
and
daa
lds
xchg
gs
jns
sbb
cmp
fldt
movsb
and
add
das
ljmp
sbb
pop
pop
mov
bound
jl
aad
in
loopne
mov
fsub
cmp
push
sbb
xor
adc
es
and
arpl
test
pop
lret
lret
xlat
pop
push
cmpsl
push
nop
jb
movsl
aam
fldcw
lods
ret
shl
mov
mov
inc
push
clc
dec
mov
std
mov
mov
fistpll
ja
shlb
jmp
dec
adc
dec
data16
icebp
mov
mov
dec
sbb
aaa
mov
sub
xor
or
cmpsb
mov
jmp
call
lds
sub
dec
xchg
roll
fnstenv
insb
dec
xor
fstl
and
stos
jmp
imul
pop
mov
jle
jbe
adc
pop
leave
push
dec
test
enter
sbb
repz
lds
mov
sar
push
mov
mov
mov
mov
fimull
imul
pop
xor
mov
inc
mov
movsl
jbe
cwtl
or
repnz
jno
dec
mov
movsl
adc
pushl
ret
push
out
xchg
xchg
sub
popa
mov
roll
push
push
or
adc
pushf
dec
mov
jne
inc
mov
dec
dec
sbb
stc
push
mov
movsl
push
inc
lock
jae
and
xor
jno
out
push
rcrb
mov
adc
sbb
add
in
mov
add
xchg
sub
clc
xor
push
lods
rorb
xchg
mov
and
pop
movsl
cmp
jl
adc
xchg
sub
mov
dec
or
cmp
inc
arpl
mov
pop
cmp
xlat
mov
jae
dec
or
out
inc
lahf
mov
mov
xchg
ja
cltd
ljmp
push
push
jne
dec
mov
out
and
sub
mov
mov
repz
sbb
inc
jecxz
sub
clc
jmp
cmp
xor
pop
xor
inc
mov
xlat
rcll
dec
sub
lret
mov
xchg
int3
cmp
aam
inc
pushf
pop
jmp
ret
insl
lods
push
dec
movsb
movsl
add
fsubl
inc
out
in
dec
je
xchg
lods
out
inc
or
mov
lret
out
dec
sbb
shll
sub
int3
outsl
mov
cmp
aam
clc
mov
loop
mov
out
mov
test
enter
and
add
cmc
dec
cmc
cltd
rorl
imull
movsl
xorb
push
inc
ja
loopne
sarb
sar
push
pslld
mov
jae
sti
call
push
add
movsl
dec
mov
cmpsl
lret
mov
xchg
xchg
jl
adc
push
test
cmp
xchg
jmp
pop
inc
push
mov
push
fmuls
adc
fistl
jae
cli
stos
bound
orb
bnd
stos
dec
ss
inc
mov
jl
ljmp
shr
test
jns
inc
in
mov
or
ja
gs
cld
and
mov
sub
outsb
xor
dec
pop
mov
push
and
pop
and
mov
repz
imul
cmp
sub
movsb
mov
add
lods
enter
orb
pusha
std
ds
add
repz
add
es
xlat
mov
inc
sub
test
ret
inc
cmpsb
fildl
mov
pop
jo
inc
rclb
test
nop
enter
push
sahf
jle
fiaddl
or
test
adc
mov
shr
fldenv
lock
dec
mov
xchg
orb
cmc
movsb
push
movsl
jno
push
ds
imul
fidivrl
mov
lahf
hlt
jp
cwtl
les
pop
aam
gs
ja
or
cmove
repz
dec
test
pop
mov
ficompl
mov
pand
lret
test
mov
sbb
cmp
inc
lods
out
or
jb
mov
mov
mov
sub
stos
push
daa
lea
imulb
jge
pushf
jg
mov
add
mov
mov
push
jbe
arpl
mov
ljmp
mov
call
mov
loope
jle
or
adc
mov
lcall
pop
outsb
mov
rorb
fs
jbe
jl
divl
std
and
stc
idivw
lcall
dec
les
jmp
jne
notb
push
mov
xchg
aam
sarl
jl,pt
mov
je
jne
pushl
lahf
popa
imul
ja
aad
dec
xor
jp
mov
loopne
int3
mov
test
es
cwtl
imul
xchg
insl
lea
in
or
mov
pop
mov
adc
ljmp
lret
mov
add
bound
pop
pop
pop
mov
aad
call
mov
xchg
sub
xchg
lahf
jg
je
mov
jne
out
shlb
call
pushf
pop
xchg
call
mov
cwtl
mov
jmp
add
jmp
cld
js
pop
adc
jle
xor
fisubrs
mov
inc
clc
outsl
mov
adc
fdivs
js
pop
mov
push
dec
sbb
popf
or
add
push
pop
addl
arpl
clc
sub
add
imul
mov
mov
hlt
aas
pusha
cmp
lcall
or
dec
sub
adc
cmpsl
sbb
popf
xor
pop
pop
stc
push
xchg
pusha
push
test
sbb
push
sub
imul
and
das
xor
and
lcall
xlat
pop
pushf
sti
push
mov
in
jne
ss
or
arpl
inc
xor
push
cs
jb
dec
pusha
xorl
and
jecxz
testl
shl
jbe
inc
fsubrs
and
sbb
rorl
mov
inc
xchg
out
xchg
cmp
jl
mov
clc
mov
aam
cmp
fisubrs
cmp
xchg
xor
in
negb
fisubs
int
pop
leave
cmp
mov
xchg
dec
and
add
ficoml
daa
mov
push
fcmovu
sbb
mov
outsb
mov
data16
ret
insb
jnp
cs
and
jnp
icebp
cmc
push
cmp
cmp
into
push
pop
bound
fnclex
pushf
and
fs
mov
sti
sub
jge
shlb
sarb
ljmp
in
bnd
aas
push
lcall
fsub
mov
cmc
xchg
add
push
jne
dec
jnp
cli
jle
add
imul
jg
sbb
sub
cwtl
test
xor
jg
xchg
int
orb
divb
cld
aam
pop
insb
xor
je
out
lock
sub
imul
movsb
cltd
mov
xchg
stos
cmp
sub
mov
sbb
aaa
jae
rcl
jne
add
lds
in
inc
inc
mov
xor
outsl
nop
leave
mov
pop
sub
lea
jle
sub
pop
fcmovnbe
std
inc
stc
cld
xor
es
mov
loopne
sbb
lock
or
mov
and
mov
inc
xchg
stos
repz
imul
xchg
or
mov
push
imul
pusha
movsb
xor
fwait
popa
and
test
mov
xchg
cmp
test
push
jle
test
mov
int
pop
mov
int3
xchg
fidivs
inc
movsb
cmp
ret
xchg
cs
push
mov
sahf
mov
jo
xlat
insb
fisttpll
jne
or
cmpl
dec
pusha
lcall
das
call
cmpsl
and
imul
daa
aad
mov
repz
in
and
ljmp
sbb
adc
les
xchg
stos
cmp
xor
mov
test
push
ret
loope
cli
jle
mov
bound
in
fs
push
pusha
push
fiadds
scas
jno
or
or
pop
es
fsubrp
inc
jnp
cmpsl
push
rcrb
imul
pop
jp
lock
cltd
cmpsb
je
mov
jo
ficomps
fidivrl
fs
testl
movsl
cmp
int3
and
jl
cmpsb
lock
in
stos
xchg
and
lods
add
pushaw
xor
ljmp
in
sbb
pop
push
popa
sahf
inc
fisubs
add
cld
in
dec
addr16
xchg
cmp
scas
in
fidivl
jae
xchg
xchg
ud2
stos
dec
add
mov
adc
push
mov
es
std
shr
or
or
popf
jno
les
fmull
out
stc
adc
popa
out
sub
loope
xchg
pop
xchg
dec
movsl
add
cmpsl
jns
mov
out
lods
in
mov
jle
hlt
push
loop
xor
inc
lods
ror
fiadds
dec
popf
test
fistpll
ds
pusha
sar
lahf
pusha
pop
and
movsb
add
xor
add
xchg
lea
xchg
aas
daa
cmc
scas
je
iret
dec
add
iret
push
pop
cmp
pop
mov
dec
jmp
mov
sar
aas
xchg
pop
mov
out
or
lods
sub
icebp
xchg
inc
lahf
jae
nop
repz
mov
addr16
clc
movzbl
or
add
fstpl
mov
mov
sarb
adc
inc
xchg
mov
aam
dec
shrb
and
xor
push
lret
dec
push
mov
rcr
mov
pop
push
out
in
pop
jg
xchg
pop
mov
inc
push
mov
int
es
sti
cmp
imul
add
fildll
mov
dec
pop
jnp
lods
sub
cmp
add
pop
jmp
out
cmp
loope
hlt
inc
sub
push
inc
pop
fisubl
mov
sub
mov
loop
mov
sub
repnz
mov
adc
sub
ret
out
mov
loopne
push
inc
divl
dec
xor
out
or
setp
xchg
add
scas
push
adc
jo
ret
jno
lcall
sbb
js
pop
sub
pop
sub
clc
jbe
movl
pop
dec
adc
add
test
iret
pop
sbb
jp
out
push
ja
xchg
test
add
dec
sub
sbb
mov
jl
and
jns
arpl
push
idivb
xor
pop
jmp
loope
int
push
add
je
popf
sarb
int
imul
call
mov
pop
dec
test
mov
add
cmp
iret
inc
cmp
and
cltd
call
xor
jnp
push
mov
fnsetpm(287
sub
and
inc
xor
adc
out
jb
mov
mov
cmp
ret
mov
sub
gs
addr16
dec
pop
jno
pop
cwtl
adc
sub
fildll
jno
test
pop
mov
mov
es
add
mov
xchg
repz
hlt
mov
push
mov
test
outsl
sti
pop
or
aam
leave
adc
or
leave
imul
inc
xchg
test
cmpsl
insb
repz
int
pop
hlt
movsl
movsb
ret
ret
je
and
adc
push
cmpl
adc
js
lcall
loope
sbb
sbb
es
add
inc
mov
fs
and
insl
sub
push
mov
sbb
pop
inc
les
out
nop
push
ja
fwait
sbb
cmpsl
sub
sub
nop
aad
adc
jo
inc
mov
sub
push
pop
sub
jns
cltd
and
push
inc
addr16
mov
mov
stos
dec
orl
push
lods
or
movsb
int
enter
addr16
mov
xchg
test
repnz
lahf
lcall
shlb
lahf
std
stc
js
cmpsl
popa
imull
dec
and
nop
cmp
mov
push
cmp
inc
lcall
loopne
mov
daa
sub
lods
arpl
mov
movsl
pop
dec
ret
pop
aas
mov
fwait
inc
sub
fmull
pop
lock
filds
cwtl
sbb
shll
stos
adc
inc
repnz
or
or
dec
aaa
adc
arpl
orb
rorl
imul
push
mov
js
sbb
ljmp
xchg
icebp
pop
in
cwtl
dec
outsl
lahf
push
pop
out
int
sub
out
adc
sbb
or
cmc
xchg
cwtl
push
dec
pop
adc
lods
mov
testb
xchg
xchg
inc
xchg
sub
dec
smsw
xchg
jl
xchg
pop
and
ljmp
lods
push
test
mov
cmp
add
imul
clc
stc
xchg
stos
jno
mov
outsl
push
rolb
mov
jnp
lods
pop
push
inc
mov
ret
mov
std
dec
mov
in
push
fs
lret
push
ljmp
mov
fbld
mov
loopne
pop
js
cmpsl
xchg
cmp
cltd
ss
fisubrs
jnp
sbb
mov
pushf
insb
aas
push
sbb
test
mov
in
jge
xchg
aad
lahf
lahf
push
inc
sub
dec
fs
in
jmp
jb
push
or
xor
mov
mov
sbb
test
xor
jge
ljmp
iret
jmp
jp
repz
push
dec
andb
pop
lret
mov
scas
aad
add
xor
sbb
rclb
es
movsl
inc
int
dec
es
dec
je
mov
mov
dec
push
jne
jecxz
mov
pushf
outsb
adc
lods
fimull
cmp
jl
push
mov
cwtl
pop
mov
rorl
xchg
dec
aam
lods
sahf
push
sti
adc
notb
add
xchg
sti
or
outsb
divl
pop
dec
sbb
adc
sub
xor
jno
push
and
and
jecxz
gs
cli
and
icebp
push
fsubs
xchg
add
stos
hlt
stc
xor
push
call
incb
pop
iret
mov
xorl
lahf
pop
or
sub
inc
in
pop
loope
fs
outsb
repnz
out
mov
push
mov
dec
mov
imul
fcmovb
int3
push
adc
jecxz
push
mov
loopne
and
sbb
adcl
cmp
sbb
xchg
outsb
adc
hlt
add
cmpsb
imul
fucomp
aad
or
cs
xchg
push
add
aad
dec
or
jmp
jbe
cmpsb
add
xchg
ss
testl
add
sub
jbe
dec
push
mov
pop
dec
xadd
pop
jno
push
push
fs
push
int
xchg
jne
iret
repz
mov
fisubrl
fistl
cmp
or
lret
adc
sbb
sar
mov
mov
ja
ds
adc
xchg
sbb
lret
push
lock
xchg
data16
in
adc
add
ror
lods
pop
adcb
test
xchg
xchg
sub
fwait
les
pop
pop
push
sbb
cmpsb
mov
iret
pop
adc
push
addr16
cmp
inc
bound
sbb
pop
jb
cmpsl
adc
loopne
outsb
fs
cmp
sbb
imul
push
aad
mov
incb
xchg
cs
dec
adc
leave
push
jp,pn
pop
mov
mov
aas
ret
jo
jl
or
outsb
push
xor
fs
mov
inc
add
inc
push
add
mov
mov
pop
inc
faddl
insl
dec
aad
test
mov
std
scas
lret
mov
or
movb
int
in
lahf
sbb
add
jnp
jl
sub
nop
and
mov
in
lods
jmp
and
push
insl
push
and
cld
cmp
in
xor
jle
add
xchg
and
sbb
cwtl
imul
out
ss
push
in
imul
cmp
xor
push
arpl
mov
cmp
loope
jo
jg
xlat
inc
mov
test
dec
ss
jl
push
xor
xchg
clc
push
cmp
adc
adc
lods
fwait
add
inc
and
cmpsb
out
mov
inc
xor
mov
adc
push
test
jmp
scas
test
jg
ja
fistl
push
pop
cld
sbb
mov
decl
xor
mov
pop
cmc
push
push
add
jnp
jp
lahf
push
outsl
xchg
or
and
mov
push
push
adc
sahf
cld
xchg
sti
jbe
mov
inc
daa
push
scas
mov
push
pop
sub
in
pop
les
jnp
adc
nop
sub
out
jp
iret
hlt
and
testb
es
in
ljmp
push
rclb
cmpsl
or
mov
fwait
movsl
fsubs
lcall
mov
and
out
dec
push
jge
shlb
cmp
int3
in
scas
aam
jnp
outsl
in
jb
add
into
and
add
pop
sbb
xor
clc
xchg
ret
stos
in
ret
movsb
jnp
sbb
sarb
fdivrp
pop
repz
pop
adc
mov
mov
xchg
out
repz
ret
dec
ret
scas
rcl
hlt
sub
sbb
loop
imul
gs
popa
xor
sub
or
cwtl
das
xchg
or
sbb
loope
pop
in
dec
in
inc
add
pop
add
pop
jnp
es
pop
mov
xor
insl
fldt
sahf
cmp
mov
clc
fldt
or
leave
into
dec
pop
mov
imul
jnp
lds
xchg
loope
inc
jne
inc
sbb
jb
or
lods
mov
je
jg
jmp
fwait
je
data16
xchg
imulb
add
inc
test
push
xchg
mov
push
scas
jno
cs
mov
mov
gs
fldl
lea
cmp
cmp
and
iret
ds
in
mov
sub
xchg
cli
scas
je
xor
cli
enter
int
out
cmp
arpl
sbbl
stc
or
lcall
lds
cli
adc
rcpps
xorl
jbe
and
jge
ffreep
adc
rcll
sub
repnz
movsb
mov
fwait
andb
jecxz
adc
ficoml
cmp
sub
add
insl
lds
push
stos
inc
test
std
jge
pushf
sub
jl
jo
je
cltd
jo
outsl
dec
sub
push
je
jbe
mov
adc
movl
call
sarb
ja
xchg
das
and
cs
push
mov
inc
movaps
int3
js
cmp
insb
pop
popa
fwait
outsb
pop
xchg
into
xchg
out
xor
mov
aad
sbbb
notl
cmc
adc
fs
xchg
popa
inc
xchg
sbbl
push
js
imul
data16
or
or
pop
into
and
add
faddl
fmull
pushf
sub
push
or
sub
jmp
imul
inc
pop
addb
push
mov
std
lret
mov
adc
fs
rol
xor
js
xchg
push
mov
fyl2xp1
test
aas
push
repnz
fistpl
bnd
and
mov
mov
sub
inc
push
lock
daa
pushf
adc
jae
pop
mov
mov
inc
cmp
out
xor
cli
and
adc
in
daa
cmpsl
adc
pop
cmpsl
loopne
jae
add
insb
aad
mov
jns
pop
jmp
add
dec
in
fs
mov
into
mov
mov
xchg
pop
loope
dec
mov
pop
jbe
cmpsb
out
push
dec
gs
scas
adc
ds
aad
stos
xor
das
loope
sbb
jp
xlat
push
jg
daa
sbb
shl
imul
ret
lret
imul
fwait
mov
lods
mov
cwtl
cmpsl
xchg
xchg
add
push
add
repz
fstpl
dec
in
mov
cmp
mov
xor
push
mov
pop
enter
int
dec
daa
testb
mov
imul
push
and
cmpsb
imul
int
outsl
dec
shlw
mov
addr16
sub
xchg
fadd
into
bound
xlat
or
jbe
movsb
rcll
xchg
mov
jmp
and
imul
dec
in
and
stos
iret
pop
lret
repnz
aam
pop
mov
mov
xlat
mov
iret
rolb
cltd
mov
loopne
xchg
cmc
repz
orb
and
je
aaa
dec
lds
pop
fldt
xor
mov
mov
les
stos
test
push
pop
fs
inc
xchg
jb
mov
imul
loopne
std
lea
dec
cltd
int3
lcall
mov
loope
int3
mov
xchg
fcoms
js
movsb
int
outsl
arpl
ss
imul
arpl
push
repnz
add
ret
addr16
xor
or
imul
in
das
inc
in
mov
or
sbb
cmpsb
add
sbb
fbstp
stos
jns
stc
jl
mov
lods
stos
mov
fidivrs
cmpsl
lcall
pop
dec
xchg
push
cmc
mov
fcmovu
push
jo
mov
xlat
lock
data16
jmp
cmpsl
imul
jmp
sbb
sbb
mov
cs
jge
insb
jmp
push
add
cld
mov
jge
movsl
cmpsb
aad
sbb
xchg
cld
imulb
mov
dec
push
jnp,pt
cli
and
decb
push
cmpsb
or
mov
jmp
pop
jle
push
xchg
aad
push
xchg
mov
push
mov
push
xchg
mov
in
lret
or
loop
aaa
mov
jle
or
clc
and
pusha
push
mov
xchg
ret
dec
lahf
test
out
sub
lock
inc
push
inc
lahf
xchg
shlb
movsb
mov
bound
arpl
mov
jne
xchg
fs
or
js
pop
xchg
xchg
outsl
mov
push
push
mov
cmp
xchg
sbb
mov
xchg
pop
mov
xorb
cli
ds
push
std
fisttpll
aad
xchg
mov
add
imul
jge
inc
dec
pushw
or
jp
inc
inc
and
add
adc
lret
sub
mov
dec
cli
adc
add
mov
lds
mov
cmp
clc
stc
lahf
push
xchg
pop
cmp
in
jle
std
push
cwtl
sbb
leave
mov
outsb
adc
lock
push
fs
addr16
mov
mov
sbb
int
jge
push
leave
xchg
ficoml
lds
add
xor
add
dec
daa
adc
dec
int
sarl
test
mov
and
inc
push
mov
ljmp
les
xchg
jo
sub
adc
enterw
loop
fcmovnbe
push
test
pop
push
pop
cli
lret
sub
xchg
leave
and
mov
mov
push
adc
out
jae
xchg
fldcw
inc
mov
jnp
ja
mov
and
sahf
mov
cmp
jmp
popa
out
xchg
mov
pop
testl
in
je
sbb
repz
andl
fcomi
mov
fmuls
xlat
scas
sti
add
ljmp
call
imul
sbb
cmc
push
cltd
add
adc
shlb
cwtl
push
dec
sbb
in
lret
repnz
mov
xor
rolb
push
lahf
push
pusha
cli
xor
out
mov
loopne
lret
xchg
aaa
pop
sub
sbb
mov
sti
lea
insl
bound
cltd
scas
push
pop
pop
push
pusha
and
pop
outsl
aad
push
imul
push
fst
inc
and
xchg
arpl
jae
rclb
xchg
xor
ss
adc
cltd
bound
sub
fwait
leave
adc
push
sbb
ljmp
xor
adc
pop
sbb
stos
mov
inc
aad
jns
outsb
out
add
cwtl
jno
adc
repnz
in
jecxz
mov
pop
push
inc
ja
in
out
gs
push
dec
sub
and
mov
and
mov
add
mov
adc
jb
jne
cmp
sahf
test
xor
int3
and
mov
movsb
sub
sub
mov
out
and
cmp
or
cmpb
in
mov
nop
shl
outsl
lcall
xchg
push
lds
test
xor
mov
jae
stc
inc
iret
add
gs
jae
inc
jmp
jmp
enter
sbb
subb
fisubs
cmp
test
dec
leave
fcomps
sub
cmp
int3
sub
inc
les
push
lcall
push
aas
pop
sets
mov
sub
insb
repnz
xchg
test
scas
imul
dec
fldenv
add
mov
movsb
test
ja
push
cmp
je
push
and
dec
bound
jg
fwait
pop
lds
outsb
je
xor
jne
add
scas
pop
mov
icebp
or
mov
inc
popf
mov
mov
xor
xchg
mov
out
xchg
pop
mov
jmp
dec
pop
xor
push
pop
sbb
lcall
pushf
dec
push
mov
insb
notl
jp
ret
stos
mov
fld
dec
lret
fidivl
movsb
sbb
xchg
adc
or
add
inc
xchg
addl
inc
xchg
data16
test
or
xchg
mov
add
or
push
loope
sub
div
inc
rclb
adc
inc
jg
aas
xchg
addr16
decb
push
xchg
in
ja
pop
adc
xor
add
pushf
mov
subl
sbb
pop
sti
in
mov
add
xchg
inc
cmpsb
arpl
movsl
cmp
mov
popf
adc
push
or
xchg
icebp
dec
scas
imul
push
sub
push
cmp
cmpsb
ds
dec
rorb
ret
inc
mov
xchg
mov
repnz
int3
mov
xchg
repz
xchg
dec
jo
ljmp
test
call
out
mov
nop
leave
push
sahf
sar
mov
or
repnz
fmul
or
arpl
test
sbb
imul
pop
stos
pop
es
add
pop
dec
pop
add
stos
mov
or
push
dec
filds
push
sbb
or
pop
movsb
fildl
push
inc
nop
fbld
test
push
cmp
sbb
lcall
dec
xchg
sarl
pushf
pop
push
dec
pop
pop
ret
sarb
js
pop
inc
push
mov
or
inc
nop
mov
cmp
push
or
dec
mov
loop
mov
and
xchg
mov
pop
jmp
bound
push
arpl
push
fs
xchg
jns
shll
inc
jle
stos
mov
add
mov
xor
push
loope
jmp
jbe
leave
pop
sub
aaa
lahf
lods
push
inc
mov
add
imul
push
jnp
mov
idivl
xchg
ficoml
and
test
loopne
fcompl
mov
xorl
fs
push
xchg
int3
inc
les
sarb
and
lea
mov
fld
dec
jl
enter
or
pushf
lods
mov
fdivrp
add
ljmp
ljmp
pop
lock
mov
pop
sar
leave
hlt
push
test
gs
push
mov
push
xor
dec
xlat
out
lcall
into
sub
dec
lock
adc
jg
pop
scas
pop
and
pop
pop
mov
inc
sub
movb
loop
pop
andb
mov
xchg
sub
or
loop
xlat
mov
ret
and
xor
push
adc
cwtl
ss
mov
dec
add
jno
fcoml
decb
frstor
dec
and
iret
mov
mov
fmulp
subl
add
sub
jge
stos
sarb
cld
fs
aas
cli
jnp
mov
sub
push
loopne
lea
shll
scas
or
imul
lds
loope
in
ljmp
lret
inc
divl
movsb
push
mov
jo
pop
jg
dec
insb
mov
jno
mov
and
xchg
mov
cs
xor
add
out
lods
out
std
push
jp
imul
jl
push
sbbb
add
push
adc
shl
imul
sub
and
cmp
out
cmpl
push
or
and
mov
mov
inc
daa
xchg
cmp
repz
aaa
jae
arpl
cmp
lea
cmp
xchg
xor
xor
cmpsl
in
adc
inc
lods
jb
dec
and
shlb
lds
xchg
jb
and
dec
into
pop
ret
popf
popf
addr16
sbb
jg
dec
insb
xor
loop
pop
cltd
cmp
jg
mov
mov
or
pop
or
sub
sbb
add
into
dec
ss
shrd
push
sbb
add
rcrl
enter
sbb
xor
pushl
xchg
jg
push
stc
sbb
mov
les
dec
ss
hlt
cmpsb
cmp
cmp
mov
xchg
scas
scas
cmp
or
testb
xchg
mov
test
das
rcll
pop
xchg
sahf
or
out
popa
enterw
xorl
mov
sub
je
jno
dec
out
add
pop
add
mov
cmc
roll
xor
stos
outsl
sbb
xchg
outsl
enter
pop
cmpsl
inc
lods
aad
cmp
add
xchg
out
xlat
cmpsl
lods
jg
add
cltd
fistpll
pop
fdivs
mov
pop
mov
ds
sub
cmpsl
add
rcl
add
stos
xchg
adc
push
add
clc
pusha
cmp
fs
incb
lahf
xchg
cmp
dec
and
mov
inc
cwtl
ja
push
pushf
mov
adc
fisubrs
push
or
and
imul
adc
mov
dec
mov
jp
faddp
repnz
jg
cmp
pop
insl
pop
jecxz,pt
xor
adc
pop
insb
addl
push
lahf
push
loopne
jle
out
pop
scas
data16
mov
mov
inc
pop
stos
mov
icebp
jns
add
jmp
dec
test
test
jae
enter
pop
in
pop
mov
mov
out
gs
stos
aaa
popf
mov
rclb
mov
sub
push
cmp
push
push
outsl
mov
stc
pop
testl
xchg
negl
pusha
sub
xor
cltd
ja
and
push
cltd
scas
adc
shll
pop
shl
ret
push
mov
es
sbb
mov
adc
pusha
cmpl
mov
mov
push
dec
fisubrs
bound
aaa
jmp
or
sbb
popf
lret
lods
add
test
daa
popa
push
push
mov
jmp
inc
loop
or
cmp
imulb
mov
sub
loop
js
loopne
orl
jns
stc
mov
lgs
mov
lods
mov
mov
inc
cmp
pop
jns
jge
mov
mov
js
andl
lret
or
add
cli
sahf
loope
mov
test
and
mov
repz
mov
cs
dec
xor
sahf
jecxz
push
call
clc
je
sub
adc
push
sbb
in
pop
mov
jae
in
cmp
and
mov
pop
das
aaa
lret
mov
movsb
and
dec
out
roll
out
stos
or
mov
cltd
sbb
sbb
scas
int3
test
dec
cmp
and
nop
cmp
xchg
sbb
sbb
pop
cwtl
inc
popf
dec
inc
push
dec
xor
mov
imul
adc
imul
sbb
xor
push
lret
aam
mov
xlat
mov
inc
or
das
scas
bound
sub
out
out
imul
mov
sub
std
loopne
ljmp
cwtl
mov
cli
jle
stos
repnz
mov
aad
mov
xchg
ljmp
push
pop
outsl
dec
test
cmp
popf
mov
cmp
fisubs
and
mov
ss
cli
ja
gs
stc
test
push
fs
scas
insb
ss
iret
in
or
xchg
cmp
mov
in
xchg
fdiv
out
inc
std
xor
cmp
mov
popf
movsb
pushf
inc
insb
xchg
lea
sbb
out
imul
fwait
ds
cmp
imul
add
dec
sub
pop
sbb
cmp
in
pusha
rorl
xor
and
pop
dec
loopne
mov
aam
popf
scas
loope
pop
jge
jno
ret
out
or
cmp
add
cmp
adc
das
pop
pop
jns
sahf
fwait
stc
stc
js
insb
outsl
mov
xchg
mov
pop
jo
js
pop
adc
stos
scas
adc
pop
inc
push
push
and
testl
dec
insb
inc
and
lcall
cltd
adc
sbb
adc
bound
or
lock
push
insb
xor
jbe
jno
shr
inc
xchg
push
push
dec
mov
outsb
rcll
mov
pusha
jnp
andb
dec
mov
sti
leave
jne
dec
pop
sbb
in
sub
pop
popa
mov
adc
mov
insb
mov
mov
and
icebp
ror
loope
inc
push
sub
ss
popa
inc
push
jne
iret
jmp
mov
jmp
rorb
mov
addr16
repnz
popf
out
push
lret
inc
jmp
aaa
mov
jnp
jmp
je
or
or
inc
adc
clc
bnd
rorb
shlb
out
push
pusha
sub
sub
scas
mov
pop
sbb
inc
sbb
add
or
sub
or
cmpsl
out
jns
cmpb
sub
lods
add
dec
adc
sub
fistpll
push
das
cmp
icebp
rorb
popa
cmpsl
jno
fsubrs
fwait
test
popa
xchg
or
mov
push
cmp
push
push
cmp
mov
fwait
pop
ret
ljmp
rcll
repz
dec
movsb
mov
mov
push
ds
inc
mov
aam
inc
movsl
sbb
shl
lds
shll
lret
in
dec
repz
aam
sbb
jle
ds
xor
adc
dec
or
ret
ja
jae
push
ffreep
test
loop
rolb
jmp
jnp
xchg
mov
sarl
enter
loope
inc
cmpsb
sahf
ret
rorb
xor
fdivrs
loope
pop
movsl
mov
fmull
add
fistl
mov
xchg
mov
jmp
jns
inc
cmp
neg
push
movsl
insl
lds
mov
popa
ss
clc
loop
push
das
rcrl
sarl
sub
dec
sub
pop
sbb
decl
sbb
pop
insb
arpl
dec
jmp
jg
test
sub
repnz
jmp
sahf
daa
sbb
or
sbb
lds
in
imul
movsb
push
adc
or
pop
inc
mov
loopne
sbb
push
out
mov
push
leave
xor
cmpsb
imul
push
xchg
arpl
jg
mov
xchg
ds
xchg
push
pop
sub
imul
push
lcall
sub
adc
pushf
mov
or
rolb
pop
xchg
popa
loope
xchg
and
inc
popf
lret
repnz
fisubrl
xlat
negb
xchg
lock
sub
push
sub
imul
inc
mov
mov
inc
and
fadds
sahf
and
add
xor
mov
mov
add
sub
into
pop
xchg
incl
fstps
push
lods
aad
mov
popaw
mov
int
inc
mov
in
mov
push
inc
adc
outsl
fildll
jecxz
adc
in
xchg
cwtl
pop
aas
push
pushf
adc
adc
in
iret
cmp
cmp
push
call
jb
dec
loop
xor
sub
sahf
pop
sbb
loop
add
push
fldt
popa
add
addr16
dec
mov
mov
cmpsb
push
and
push
scas
add
fdivs
out
mov
cltd
inc
arpl
push
pusha
mov
add
clc
leave
loopne
mov
jo
xchg
xchg
mov
sarb
ja
jg
pusha
inc
mov
fldt
push
aas
pushf
xlat
add
fldenv
adc
xor
in
or
mov
sbb
mov
outsl
cmp
mov
cltd
test
arpl
insb
or
fists
lret
fwait
cmp
jmp
call
and
inc
add
push
sbb
das
sbb
call
movsb
push
add
aad
pop
push
jbe
cmpsl
lea
sub
xor
clc
lods
jl
lea
ret
jge
sub
add
push
out
repnz
xchg
mov
icebp
inc
mov
xchg
sub
test
dec
insl
les
in
push
in
test
pushf
mov
call
shl
or
aad
dec
ret
push
jne
loopne
shlb
test
push
push
inc
loopne
pushf
dec
jl
scas
out
in
popf
or
sarl
out
les
fwait
mov
cmpsb
mov
popa
sbb
shl
js
fnstcw
jg
sti
add
sub
jle
jae
je
mov
and
push
stos
xor
es
fwait
push
imul
mov
sbb
pushf
imul
test
jo
sub
cwtl
popf
adc
daa
xchg
cmp
or
mov
mov
mov
cmp
pop
mov
mov
adc
mov
aas
adc
jno
push
repz
testl
clc
cwtl
push
xor
out
and
lods
mov
pop
or
out
adc
and
cld
mov
add
sbb
pop
ja
aam
inc
cmpsb
test
cmp
push
mov
jns
mov
jo
and
fcomps
push
mov
jne
loope
mov
mov
mov
in
sti
xchg
fs
xor
xor
mov
jo
cld
dec
dec
adcb
xchg
lret
loop
sub
push
xchg
jno
add
ror
mov
mov
jnp
outsl
xor
and
xchg
cmp
in
sub
nop
pusha
adc
sub
pop
jecxz
cltd
addr16
sub
mov
xchg
push
cmp
fcompl
scas
jmp
pop
sub
add
adc
ss
enter
add
fnsave
and
add
orl
cbtw
xchg
dec
or
xchg
gs
lods
jp
jns
inc
pushl
dec
mov
adc
iret
xchg
out
sub
xchg
sbb
cmp
out
test
mov
test
mov
pop
ljmp
out
jl
cmp
daa
inc
adc
jns
loopne
int
adc
mov
mov
dec
shrb
dec
push
int
xchg
bound
xor
rolb
xchg
and
out
xor
mov
push
jb
mov
mov
sub
loopne
icebp
dec
ja
pop
push
xchg
push
sbb
and
into
cmp
fisubrl
jmp
xor
add
das
test
cmp
cmpb
popa
mov
mov
fdiv
cltd
dec
pop
fdivrs
dec
out
fsubl
and
cli
int3
cwtl
lock
adc
movsb
pop
popf
aaa
or
ljmp
nop
add
imul
clc
es
mov
dec
inc
test
lock
dec
clc
lret
mov
dec
sbb
enter
dec
andb
int
mov
arpl
mov
in
push
popa
mov
movlps
rcl
push
or
jne
inc
test
mov
loopne
inc
adc
ss
call
lock
fdivr
and
outsb
sub
ljmp
sub
mov
push
pop
xchg
xor
aad
sub
pop
mov
jge
or
and
mov
adc
mov
or
adc
sub
outsl
sbb
or
andb
or
ret
clc
sahf
mov
mov
in
xchg
imul
lret
hlt
xor
jge
stc
out
xor
sarl
cwtl
dec
push
rcl
fsubrp
rclb
lods
adc
cmp
mov
jae
cmp
ds
mov
xchg
add
jp
cld
jae
xchg
out
lea
cwtl
nop
lods
push
test
dec
push
fsubrl
sub
dec
shll
decb
jnp
jmp
jl
dec
cmp
and
in
adc
xlat
dec
fimull
loop
mov
inc
popf
or
shll
and
sbb
jae
mov
sub
mov
mov
fdivp
cmp
jge
xlat
pop
sub
xchg
in
jns
jg
call
fwait
shll
add
iret
loopne
popa
cmp
jbe
jae
out
lds
xchg
push
xchg
movsl
jnp
dec
ficompl
xchg
jle
cmp
js
iret
sbb
xor
hlt
loop
xchg
ja
push
iret
jge
into
add
sbb
adc
xchg
das
test
jecxz
push
movmskps
sahf
stc
push
sbb
adc
sub
push
jnp
push
inc
lea
fnstsw
xchg
ret
sbb
sbb
outsb
sub
shrl
push
jle
xlat
clc
mov
cmp
dec
or
add
inc
movd
push
xchg
es
gs
je
mov
dec
daa
add
mov
sub
jb
xchg
add
out
mov
push
xchg
pushf
ljmp
and
push
gs
adc
fnstsw
xor
rol
xchg
repz
sub
setae
scas
mov
sub
lock
test
mov
mov
scas
std
mov
dec
movb
xor
addb
push
add
pop
mov
add
idiv
scas
ss
fsubrl
insl
int
push
cli
in
andl
add
mov
jae
xor
loop
fistps
cmp
mov
add
xchg
inc
stos
xor
stos
or
jl
mov
fstpl
push
std
mov
ja
mov
ljmp
push
xor
enter
pop
inc
jle
dec
jmp
addb
or
cwtl
scas
push
adc
or
data16
popa
adcl
push
cmp
iret
adc
or
adc
sti
aam
fists
pop
lods
sti
mov
popf
mov
cmp
adc
pop
pop
and
push
incb
outsl
cmpsb
push
cld
xchg
adc
mov
enter
push
jno
dec
loope
pop
lea
loopne
dec
jg
lds
jb
cmpsl
int3
mov
add
fxam
fwait
or
jne
dec
lods
pop
add
mov
scas
pop
mov
pop
jge
inc
sbb
cwtl
add
jg
pop
sub
jmp
ret
dec
lock
lcall
shr
aam
push
stc
mov
ljmp
rcrb
bound
rcrb
xor
and
dec
adc
out
mov
andl
inc
outsb
mov
xchg
sbb
out
cli
jns
popa
xor
mov
add
adc
jmp
xor
fisubrl
daa
popa
push
sub
or
push
popf
mov
and
stos
pop
add
dec
in
in
inc
int3
ret
mov
repz
ficoml
xor
inc
clc
xor
es
out
xor
sub
pop
adc
push
fistpl
mov
jecxz
std
nop
mov
and
sbb
cmp
add
sub
push
dec
mov
and
rcrb
pop
lods
push
add
lcall
cmp
scas
stos
cmpsl
sbb
fistpll
mov
iret
repz
jno
inc
push
pushf
out
cmp
gs
movsl
sub
pop
pop
stos
jns
or
lds
mov
push
and
jne
add
je
enter
jne
stos
fld
div
xor
xor
lcall
xchg
push
or
jns
rcrb
sub
mov
roll
jmp
push
fmull
inc
push
add
jmp
scas
inc
ljmp
sbb
mov
mov
clc
ret
outsl
pop
stos
or
fsubr
sub
cli
xor
jle
cmp
jecxz
and
mov
std
jbe
jo
mov
pop
mov
inc
pop
xlat
lahf
das
or
jecxz
mov
adc
sub
lret
sbb
and
stos
pop
sbb
shrl
sub
mov
mov
das
je
sbb
cmp
fiaddl
lods
mov
lods
popa
xor
cmp
scas
cmp
pop
sbb
fldt
adc
ja
shlb
push
add
cmc
cmp
inc
mov
mov
cmp
dec
lcall
sbb
adc
xchg
testb
out
mov
fwait
sbb
inc
lea
call
mov
jge
push
test
or
mov
popa
cmovnp
fs
add
cmp
clc
rcll
icebp
inc
jae
lods
xor
sub
push
dec
out
push
fwait
js
push
adc
sub
jno
mov
lds
in
mov
or
cmp
mov
test
or
loope
shr
jb
aaa
inc
mov
mov
outsb
mov
adc
aam
rcll
xchg
and
mov
jno
push
add
mulb
cmp
int
push
add
adc
mov
clc
push
repz
imul
fsubl
adc
fwait
hlt
pop
and
jno
inc
stos
sbb
fisubrs
shlb
loopne
and
add
xorb
fldenv
fs
imul
test
xchg
and
lahf
push
lcall
sbb
fists
mov
lahf
in
mov
mov
js
push
mov
lret
pop
and
ret
jg
popa
inc
dec
jle
and
fsubs
insl
mov
xchg
dec
cwtl
xchg
and
sti
sbb
aaa
add
clc
addl
xchg
popa
mov
leave
sbb
push
stc
cmp
adc
mov
xor
lods
jno
push
mov
or
in
push
add
int3
rorl
inc
int
ret
rorl
icebp
pop
popf
stc
mov
sbb
lahf
and
mov
js
cmpsb
loop
pop
xor
les
mov
sub
out
rorl
and
les
adc
sbb
xlat
out
imul
in
jb
jecxz
mov
js
cmc
dec
movsb
int3
loop
sbb
xchg
and
lds
in
test
adc
sahf
lock
loopne
shrd
imul
mov
repnz
cltd
and
scas
call
jl
out
xchg
add
sahf
xchg
dec
ds
push
dec
cli
in
sbb
push
dec
and
adc
jmp
in
or
push
add
fsubrp
orl
and
inc
out
int3
mov
push
iret
ret
push
push
inc
lcall
sbb
mov
mov
int3
push
and
into
out
pushl
pop
popf
mov
test
pop
ficoms
fstps
and
cmpb
test
in
fisubs
jo
into
adc
jnp
dec
sysexit
push
fidivl
cmp
mov
fstpt
ss
add
push
push
ljmp
mov
idivl
test
iret
in
adc
rolb
aas
or
mov
and
xchg
cmp
add
jne
ret
xor
arpl
mov
or
add
dec
mov
cmp
adc
iret
iret
lods
lea
jmp
dec
aam
push
lods
sub
xor
test
lods
mov
sub
mov
xor
and
mov
das
sub
xor
cmp
fs
mov
pop
sub
and
cmpsb
jo
dec
and
pop
inc
push
ljmp
mov
stos
or
mov
xor
hlt
enter
cmp
mov
mov
idivl
xchg
sbb
int3
insl
push
sar
repz
or
ss
mov
push
dec
imull
inc
pop
and
stc
arpl
daa
fcom
orb
int3
or
ret
shr
adc
and
jbe
add
sub
xchg
mov
sbb
xor
pop
fildll
je
mov
push
jae
fs
and
insl
and
push
cmpsb
lds
shlb
cmp
mov
xchg
movsb
adc
inc
popf
outsl
push
jl
cwtl
loop
jecxz
addl
push
jge
or
leave
fstpt
add
dec
and
dec
mov
dec
sub
jo
sbb
cmp
inc
push
lret
mov
or
jecxz
sbb
cmp
jle
les
int3
adc
addr16
arpl
in
mov
dec
mov
jle
inc
pop
mov
es
scas
outsl
gs
inc
sub
lods
jl
shr
push
aas
inc
outsl
push
aas
testb
dec
lods
fiaddl
pop
or
sti
sbb
sub
fucom
push
insb
fildll
in
jmp
jle
and
fwait
ret
fmuls
cli
call
cltd
cli
imul
dec
mov
into
scas
mov
dec
xchg
mov
loopne
pop
lock
cmpsb
xor
mov
out
das
loopne
mov
cmp
pushf
sti
mov
or
xlat
xchg
aam
mul
xchg
sub
addr16
data16
pop
push
test
or
sarb
inc
push
enter
or
lret
mov
mov
jg
mov
outsb
mov
cs
sub
pop
xchg
sti
add
je
pop
ds
pop
cmp
dec
cmp
lods
mov
out
and
pop
fmul
mov
popf
mov
cmp
ds
mov
jg
adc
cmp
arpl
push
pop
out
clc
add
push
das
xor
jo
pop
add
mov
mov
push
xor
out
rclb
jbe
and
xchg
out
dec
in
std
push
or
add
pop
xchg
mov
cmp
pop
sub
add
inc
test
out
movsb
aas
stos
outsb
cwtl
ja
imul
mov
dec
fstpt
das
sbb
in
add
inc
add
mov
aas
repz
inc
sub
mov
mov
shrb
add
clc
sahf
dec
loopne
and
or
aad
and
inc
scas
fistps
push
pop
sarb
filds
xchg
mov
and
in
js
enter
mov
xchg
dec
mov
jb
ljmp
call
or
mov
into
pushf
iret
xor
cld
xchg
bound
mov
mov
mov
xchg
push
and
pop
jbe
mov
dec
and
dec
in
lret
and
push
lock
sbb
sub
mov
mov
push
addr16
jecxz
mov
rcll
stos
imul
push
bound
popa
in
subl
lock
lea
out
jge
fdivrs
lock
aad
cmp
jnp
sbb
in
insb
rclb
das
into
loopne
fld1
sbb
xchg
mov
mov
and
push
cmpsb
adc
jae
pop
icebp
mov
aam
or
cmpsb
cli
mov
sbb
and
xchg
les
or
jae
popa
jecxz
cmp
outsb
call
jg
pop
cmpsl
or
cltd
ficoml
out
lock
add
push
mov
popf
pusha
mov
add
stos
lret
jmp
aam
nop
lods
rcll
iret
adc
fs
stos
aad
shll
mov
das
xlat
fldt
and
mov
pop
dec
mov
and
push
ljmp
stos
int3
fnstenv
pusha
cmpsl
push
and
in
insb
filds
ret
shlb
sbb
fcmovb
jne
cs
mov
inc
xchg
inc
daa
inc
les
out
into
adc
rcl
push
int
lods
or
sub
loopne
pop
repz
sub
test
fsts
or
mov
xor
aaa
arpl
mov
xor
out
or
das
out
xorl
or
jmp
pop
rcrl
pop
loope
int
pop
push
icebp
sub
test
lods
and
popa
mov
inc
test
sbb
inc
dec
cmp
scas
in
test
mov
jl
sub
push
pop
scas
lcall
cmp
lods
dec
aas
cltd
gs
sub
cmp
push
adc
in
xchg
data16
or
data16
add
jecxz
mov
lahf
jne
push
add
push
shr
aad
daa
xchg
mov
pop
enter
mov
push
es
das
pop
xor
in
mov
fmull
test
cmpsl
sub
mov
movsl
sbb
pusha
dec
push
add
das
pop
movsl
mov
jmp
push
int
lods
inc
shrl
mov
pop
cltd
out
les
mov
cmp
mov
xor
ds
xorb
int
lcall
lret
int3
gs
imul
out
iret
fdivrs
lea
das
in
push
iret
jno
mov
aaa
addb
pop
ror
adc
xchg
mov
add
jbe
dec
lock
gs
in
jg
dec
add
push
and
mov
shlb
mov
mov
jge
in
add
test
dec
jecxz
sbb
test
das
cmp
imul
pushf
mov
inc
cwtl
cmp
push
push
mov
repz
negl
dec
fiaddl
add
in
dec
dec
xchg
repnz
cmp
rorb
scas
xchg
or
jae
inc
add
hlt
add
jno
or
stos
test
pusha
shll
inc
inc
aaa
xor
cwtl
dec
imul
out
xor
lahf
stc
ljmp
mov
inc
call
mov
and
mov
or
sub
or
les
imul
into
mov
out
mov
fs
sub
inc
cmp
push
scas
out
cmpsl
push
cld
or
aaa
in
stos
std
mov
in
mov
gs
jge
insb
cmp
popf
cmpsb
repz
dec
test
loop
insb
mov
fsubp
and
movl
mov
dec
jle
loop
shll
jns
mov
mov
xchg
adc
mov
std
cmc
in
out
dec
sub
cmp
pop
sbb
testl
imul
sbb
sbb
lahf
push
pusha
fsubp
push
out
xchg
idivl
in
ljmp
xchg
test
xchg
sub
out
in
mov
jne
cltd
and
pop
pop
xchg
in
xchg
jns
adc
push
rcll
pop
push
popf
arpl
call
stos
mov
or
jns
or
dec
sub
inc
pop
jge,pt
lret
int3
loope
scas
adc
shrl
adc
and
mov
neg
out
mov
xor
adc
mov
cltd
ret
lods
lahf
xor
mov
push
incb
stos
clc
sub
cmpsl
jbe
movsl
and
les
sub
or
jne
dec
in
repnz
cmp
dec
xchg
cli
mov
xor
das
pushf
xchg
sbb
sub
aaa
sub
add
mov
jmp
inc
cmp
ret
idiv
sbb
lret
scas
pop
stos
pop
mov
scas
sahf
js
insb
mov
jb
mov
insl
jge
sbb
push
popf
xchg
xchg
jp
jno
pop
nop
push
jno
daa
mov
cltd
or
iret
ss
shll
and
incb
mov
push
cs
cmp
sarb
jno
rcl
shl
or
and
cld
mov
push
dec
cli
jbe
and
push
fbstp
jno
pop
push
or
or
lea
cmc
xor
sub
leave
iret
and
cmpsl
stos
fs
cs
in
insl
adc
xorb
repz
hlt
outsl
popa
stc
xor
jbe
jmp
mov
nop
popa
scas
bound
push
dec
xchg
fimull
lcall
aam
jp
enter
rorb
stos
pop
hlt
mov
cwtl
test
inc
xor
fldl
icebp
mov
sbb
sub
fcmovne
push
fadds
incb
xor
mov
jne
faddl
sub
sbb
es
sub
cli
add
cmpb
roll
push
jbe
cmp
pop
mov
push
inc
out
cmc
and
in
fimull
add
or
fsubs
ud0
icebp
add
jmp
inc
pop
mov
pop
test
data16
pop
add
push
mov
push
cwtl
and
pop
xlat
xchg
push
lods
sbb
imul
inc
sbb
or
fistps
repnz
outsb
aaa
gs
cli
xchg
neg
into
push
or
sub
inc
inc
xchg
rorb
fiadds
or
pop
lret
popa
popf
outsb
xor
jnp
jge
adc
sub
jb
jno
mov
pop
jp
outsb
pop
lods
mov
hlt
push
fnstenv
mov
or
pop
cmp
pop
aam
dec
shr
adc
mov
inc
rcl
fisubs
push
cmpsb
lock
shll
inc
pop
inc
jge
scas
dec
mov
stos
pop
jne
pop
mov
cs
enter
rolb
mov
test
mov
sub
mov
sub
or
xchg
ds
cmc
xchg
or
xor
mov
push
xlat
sbb
ds
repz
lea
cmpsl
mov
ljmp
xor
add
pop
ljmp
gs
dec
xor
mov
lahf
mov
mov
outsl
aad
xchg
mov
fsubrl
and
stos
xchg
adc
mov
jge
scas
sti
or
std
push
es
xchg
stc
je
mov
ret
rcrb
pop
and
lret
and
mov
xlat
and
je
test
lods
inc
add
mov
shll
mov
jg
xchg
mov
rcrl
addl
loop
mulb
dec
out
mov
rolb
sti
mov
xlat
imul
fdivl
rcr
lea
push
cmp
pop
jns
pop
outsb
aaa
fcmovnu
mov
pop
insb
fisubl
dec
mov
adc
in
into
and
jecxz
sub
gs
outsl
mov
fwait
sbb
repz
jb
leave
int
icebp
sbb
cmp
and
test
and
sub
add
push
sarl
imulb
xor
cwtl
shrb
ret
mov
or
popl
mov
arpl
inc
xor
mov
loope
sub
enter
add
fwait
scas
xor
push
movsl
cmp
xchg
pop
test
aad
mov
repz
cmp
mov
fwait
scas
jmp
mov
and
test
mov
inc
fiaddl
mov
xlat
into
adc
inc
mov
test
aam
hlt
into
rcl
pop
cwtl
out
cmp
jbe
jbe
inc
push
cmp
inc
push
and
jb
inc
mov
in
add
or
mov
imull
or
adc
test
sbb
sub
pop
or
rol
sbb
ja
xchg
inc
leave
push
test
jo
push
cwtl
mov
mov
mov
clc
sbb
add
leave
out
sbb
sbb
push
lods
pop
sahf
hlt
cmp
cld
push
inc
sub
jnp
mov
jle
add
int3
mov
pop
mov
sub
call
mov
loope
pushf
pop
movsb
hlt
add
fs
shrb
aad
data16
js
xchg
scas
adc
adc
addr16
mov
repnz
pop
adc
and
sub
shll
pop
cmp
dec
shll
xor
loopne
out
sbb
icebp
xchg
push
adc
dec
mov
popa
inc
je
cmc
inc
scas
cmp
adc
xchg
sar
std
mov
icebp
and
jae
outsl
in
fsubrl
mov
adc
das
or
adc
cmp
sbb
stos
dec
pop
rol
aam
xchg
imul
scas
mov
lret
out
push
je
cmp
or
dec
xchg
inc
and
sti
je
stos
cltd
sub
sub
dec
icebp
lret
rcll
push
xchg
jle
xchg
mov
dec
xchg
stc
adc
adc
into
idiv
mov
pop
jb
sbb
popf
cmp
xchg
repnz
xor
in
xchg
insl
shll
icebp
mov
inc
cmp
test
enter
std
fldenv
sub
xor
pusha
push
lahf
or
test
xchg
push
fdivl
pop
pop
push
dec
lods
dec
jb
push
push
sbb
popa
mov
push
cmp
loop
pusha
push
aam
cmc
lahf
pusha
jg
clc
xor
xchg
mov
ljmp
pushf
mov
dec
push
push
inc
or
mov
dec
ja
out
dec
ret
jne
push
inc
sbb
sub
xchg
andl
daa
jbe
lahf
add
nop
insb
clc
lcall
dec
mov
cmp
shll
and
loop
sub
pusha
sahf
lea
sbb
jmp
push
dec
jp
sub
inc
pcmpeqw
jle
jmp
in
cmpsb
jnp
gs
lahf
xor
adc
repnz
lds
bnd
es
jbe
out
subl
mov
cmp
sbb
repnz
sub
int
outsl
js
push
addr16
xchg
cs
adc
inc
addr16
pushf
lock
add
jge
xchg
sub
in
cli
or
shlb
movsb
mov
decb
jp
cmc
rol
xchg
fwait
adc
mov
cwtl
pushw
loop
adc
dec
loope
add
xchg
dec
jmp
push
push
mov
mov
pusha
cmp
xchg
sub
mov
sub
inc
lret
and
andb
xor
push
mov
ret
and
or
loope
ja
mov
lea
fcmovb
subb
jns
mov
mov
push
cmpl
dec
daa
mov
mov
xlat
pop
pop
fs
sub
int
enter
in
inc
and
xchg
sub
xlat
addr16
mov
pop
nop
mov
xchg
aas
aad
add
js
das
jl
pop
lea
imul
push
lret
fwait
loopne
int
jnp
mov
xchg
lds
lret
sahf
push
js
mov
cmp
insb
pop
push
notb
or
push
sahf
sbb
pop
daa
add
xchg
xor
mov
mov
hlt
push
jno
ja
cmpsb
pop
in
fisubrl
adc
cmp
movsb
ret
sub
je
pop
xchg
add
out
dec
popa
std
sbb
jne
ret
lcall
js
repz
pop
xor
rcr
push
mov
sbb
push
mov
fdivs
cld
loopne
outsb
sub
scas
pop
fisttps
in
push
push
mov
push
push
rclb
nop
clc
fscale
cli
xchg
jg
ss
into
fisttpll
mov
pop
pop
dec
cmpsl
xchg
mov
dec
dec
dec
mov
dec
xor
mov
in
pusha
cmp
inc
and
cmc
sbb
jae
sub
jbe
sub
gs
inc
adc
or
divl
mov
popa
mov
lret
loop
cmp
xchg
pop
push
push
fcom
sub
test
and
push
mov
stc
cld
int
in
dec
lods
pushf
dec
cmp
mov
ds
test
test
hlt
bound
out
mov
mov
fstl
test
inc
in
push
out
scas
xchg
and
jb
aam
sbbb
add
mov
adc
adc
push
movsb
testl
mov
push
shlb
pop
push
hlt
mov
bound
dec
mov
mov
popf
and
and
cmc
icebp
and
sub
ret
fcos
cltd
inc
sahf
fists
lret
das
loop
add
or
scas
dec
icebp
add
push
or
dec
out
je
cltd
cmp
je
cs
roll
outsb
mov
jae
pusha
ds
push
scas
mov
jo
mov
sbb
ss
mov
dec
or
jae
dec
in
or
xchg
pop
add
jp
cmp
fwait
add
dec
xor
dec
xchg
mov
in
xchg
xchg
imul
bound
pop
std
dec
sub
mov
and
fisttpl
dec
cmp
push
aam
imul
mov
and
decb
inc
xor
xchg
inc
mov
ja
lea
push
dec
inc
sbb
aad
pop
pop
mov
mov
xor
cli
xchg
addr16
sbb
pop
pop
push
cmp
jb
cmp
inc
es
cmp
aam
push
xlat
or
add
pop
pop
fs
cwtl
rorl
sub
inc
ret
ficompl
jns
adc
or
out
insb
pusha
dec
xchg
dec
mov
fcoml
sbb
sbb
jle
or
lret
push
enter
shrb
lahf
gs
push
pop
rcl
sar
pop
rorb
test
test
daa
pop
or
iretw
scas
mov
repnz
or
inc
ljmp
in
cmpsb
cmovb
mov
sbb
test
xchg
cs
jg
mov
jns
hlt
mov
mov
cmp
jno
movsb
mul
sub
inc
in
xchg
ret
lods
shlb
mov
into
push
cmp
lods
iret
es
xchg
movl
rorb
lret
fnstenv
js
adc
test
jae
cltd
sub
pop
rolb
mov
sar
inc
or
test
push
in
lahf
sarl
xor
imul
xchg
scas
incl
mov
cs
test
lea
and
out
jmp
push
add
and
fwait
or
lods
mov
outsb
test
pop
lds
dec
push
pop
mul
mov
jae
inc
rcrb
push
outsl
inc
push
loop
jno
ljmp
mov
mov
push
mov
mov
add
jae
push
pop
push
xorb
lds
std
out
imul
xor
adc
mov
dec
adc
imul
ss
inc
xlat
ficompl
outsl
mov
inc
lret
dec
ds
int
stos
inc
repz
int3
fwait
lcall
loope
nop
xchg
int
or
jecxz
sub
jb
jge
mov
add
mov
jns
sbb
mov
pop
fidivrl
dec
inc
iret
push
xchg
and
lea
sbb
in
rcl
lds
insl
popa
dec
push
shlb
pop
sbb
push
mov
bound
fistl
mov
out
inc
mov
jo
adc
fwait
stc
incb
enter
js
test
std
fcomps
pop
mov
push
aam
scas
inc
cmp
stc
xor
dec
adc
leave
xchg
sti
mov
les
jbe
mov
mov
mov
mov
movsl
mov
in
test
pop
rcrb
dec
inc
stc
pop
leave
mov
mov
adc
push
sbb
add
nop
fsubp
jp
fimuls
nop
and
pop
jae
ljmp
into
xchg
and
pop
push
mov
adc
push
insb
mov
mov
out
inc
repnz
sub
movsl
jbe
jbe
jno
test
test
cmp
stos
inc
or
xchg
or
shrb
push
lods
jl
pop
jnp
mov
aaa
pusha
out
cmp
lods
adc
inc
stc
mov
shll
adc
int
bound
inc
sbb
or
ret
outsb
jae
dec
xor
push
jo
xchg
mov
dec
bound
sbb
xchg
lahf
jecxz
aam
lcall
inc
jbe
add
jg
roll
lahf
out
mov
lock
scas
xorb
xor
cmc
pop
mov
test
xchg
ja
enter
jp
fistpl
xchg
jle
ljmp
dec
stc
out
call
cwtl
data16
or
push
es
jnp
pop
scas
stos
sub
dec
aas
jns
pop
cs
and
dec
jecxz
aas
cmp
xchg
test
scas
dec
idiv
jmp
clc
jl
jmp
xchg
jae
shrb
xor
loopne
mov
fidivs
cli
xor
cwtl
adc
xchg
rcl
adc
movsl
ljmp
mov
mov
in
push
push
and
jnp
les
push
idivl
sbb
iret
lcall
into
in
sahf
xchg
fildll
push
sub
leave
popa
jns
sbb
fisttpl
push
lods
push
pop
add
addr16
imul
push
gs
jp
adc
or
std
lcall
pop
mov
cmpsb
imull
inc
lea
aas
sub
xchg
sub
gs
lock
popf
popl
je
std
inc
out
pop
dec
fdivp
adc
mov
push
inc
push
rorb
js
mov
xchg
add
call
sbb
xor
clc
pop
mov
push
xchg
aas
pop
sbb
fcoml
mov
cli
jp
push
inc
or
rol
fmul
dec
pusha
fwait
insb
push
dec
pop
pop
cmp
int
adc
pushf
fldcw
sbb
in
in
jecxz
nop
inc
jnp
insb
xchg
sarb
push
nop
mov
push
push
addb
ficompl
mov
pop
sbb
jae
loopne
arpl
cwtl
test
push
sub
cmpsl
pop
xchg
rorb
push
dec
dec
dec
mov
aad
jmp
push
shlb
mov
lods
cwtl
mov
cmpsb
testb
rolb
dec
ss
cltd
pusha
adc
jne
jbe
lds
lods
mov
sbb
hlt
mov
ret
out
adc
mov
cltd
mov
scas
mov
dec
out
cs
dec
popf
js
mov
adc
popa
inc
push
xor
mov
cmpsb
mov
cmp
sbb
xor
push
enter
add
shlb
stos
pop
call
pop
mov
pop
jl
andl
cld
jg
mov
xorl
xlat
jecxz
aam
nop
push
adc
jb,pt
push
sahf
out
pop
dec
fimuls
test
sbb
je
cwtl
or
movsb
pop
push
shlb
xor
pop
mov
mov
fldz
ret
loop
in
aad
xchg
test
ljmp
or
jle
mov
xor
loope
ret
sub
enter
jg
dec
push
cwtl
push
inc
mov
int
or
int3
push
xlat
out
daa
pop
sbb
outsl
and
fsubrl
or
lcall
sbb
out
push
aaa
adc
mov
add
push
sub
addr16
add
jecxz
stc
dec
inc
lods
sub
or
inc
sbb
add
mov
dec
fisubl
in
pop
jl
in
push
clc
jmp
sub
xorb
outsb
dec
adcb
xchg
jecxz
and
sbb
xchg
testb
test
push
inc
pop
dec
and
xchg
sub
adc
in
test
jno
add
fwait
dec
pop
xchg
sub
mov
mov
or
orb
popa
mov
pop
dec
sbb
and
mov
int
cltd
push
mov
mov
ret
sbbb
push
xor
and
test
popa
aam
daa
aad
cmp
push
jecxz
inc
mov
hlt
adc
push
cli
fisttpll
lods
inc
adc
fnstenv
mov
call
inc
data16
ja
loopne
mov
pusha
lea
xchg
outsl
fstpt
movl
int3
ja
mov
sbb
push
pop
xchg
pop
xchg
and
pushf
loop
out
bndldx
mov
cmp
jmp
xor
pop
xchg
lods
jmp
xchg
sub
movsb
fwait
mov
dec
sub
dec
pop
out
ret
fucomip
call
rolb
pop
mov
mov
loopne
cmp
daa
sub
jmp
fdivr
lea
mov
in
out
inc
testl
adc
mov
pop
aam
es
fiadds
jno
shrl
push
xchg
add
mov
pop
test
mov
xor
aam
sub
ret
jnp
and
adc
jb
lods
dec
mov
lahf
pop
xchg
jmp
jne
rorl
or
fcmovbe
insl
inc
jne
addl
out
sub
sahf
std
arpl
ret
or
movb
adc
outsl
movsl
pop
push
fadd
jecxz
inc
mov
mov
cli
add
xor
or
xor
fninit
sbb
mov
iret
xchg
pop
into
jne
outsb
sub
rcll
add
pop
lds
mov
and
insb
clc
xor
push
jae
lods
imul
xlat
fnstenv
mov
mov
dec
js
movsb
xor
sbb
mov
scas
int3
mov
cli
and
lcall
shr
rcll
pushf
push
pop
xchg
das
inc
lea
mov
mov
fcoml
jnp
xor
ljmp
insl
rorb
mov
mov
add
inc
cmp
jmp
xor
lds
or
fcomip
pop
push
cmp
push
adc
js
das
adc
scas
mov
push
into
mov
movsb
rdpmc
cmp
and
loop
stc
cli
jecxz
xor
xchg
sti
dec
or
aaa
ret
out
push
xchg
cmp
rorb
rolb
insb
xlat
pop
cmp
sbb
lds
lods
cwtl
mov
xor
ja
loop
enter
and
cmp
xchg
push
inc
in
stc
push
mov
ficomps
pop
sbb
scas
scas
and
jle
add
mov
mov
mov
sub
movsb
mov
sbb
add
fistpl
popf
add
xlat
push
mov
sub
shr
or
scas
arpl
xor
dec
mov
dec
gs
pop
jmp
lcall
dec
add
jl
adc
and
rcrb
push
sub
and
xor
jns
loope
pop
pop
lds
mov
les
mov
loopne
jp
or
adc
mov
and
roll
xchg
aad
mov
and
jo
loope
mov
push
adc
clc
clc
push
aas
adc
addr16
cmp
lock
inc
push
push
mov
dec
lcall
xchg
daa
dec
xchg
imul
ljmp
xlat
and
addl
lret
or
cwtl
cmpsb
push
adc
push
xor
bound
xor
cli
loopne
add
mov
imul
test
movsb
orb
pop
xchg
icebp
and
push
pop
jne
test
out
rcrl
xchg
loope
lret
mov
mov
mov
or
sti
hlt
aaa
dec
inc
pop
jae
mov
add
lods
gs
inc
subl
mov
loop
hlt
cs
int3
icebp
pop
faddl
and
jb
cld
jno
int3
cs
sbb
jecxz
mov
aaa
cmp
decb
int3
xchg
movsb
jbe
or
clc
mov
xchg
imul
mov
push
ljmp
dec
xchg
fwait
xchg
push
aas
jge
addr16
adc
and
sbb
gs
sbb
push
int3
fdivl
fidivs
inc
adc
or
or
pop
mov
clc
pop
ret
cld
inc
sub
cmp
lds
mov
jne
sub
arpl
sbb
lcall
iret
sahf
dec
xchg
stos
imulb
inc
cwtl
js
leave
cmpsl
mov
jno
and
in
addb
and
subb
repz
cmpsl
push
or
or
pop
xchg
in
mov
xchg
cwtl
testb
outsl
pop
lods
fwait
pop
pusha
sarb
ret
mov
pop
rcrb
pushf
xchg
cld
adc
test
shlb
dec
mov
outsl
repnz
jno
fwait
add
daa
mov
xchg
xchg
js
mov
cld
pop
mov
ljmp
xchg
xchg
arpl
jl
jg
es
mov
adc
mov
cmp
mov
stos
shrb
push
lcall
gs
hlt
xchg
pop
data16
aad
data16
cmp
or
outsl
popf
push
pop
pop
xchg
xorb
sub
or
jge
out
lods
cmp
addb
lods
xchg
fidivs
dec
adc
nop
test
out
sub
int3
inc
push
cmpsl
add
xchg
shll
arpl
pop
clc
icebp
into
pop
and
in
jns
test
inc
loop
dec
pusha
les
jg
stc
in
sahf
sbb
fbstp
cmp
mov
inc
mov
aam
dec
mov
fwait
add
add
call
int
in
jne
dec
or
and
dec
push
mov
lahf
xchg
or
lea
gs
test
mov
ljmp
data16
rcr
cli
pop
xchg
lock
cld
outsl
jp
mov
in
jmp
xchg
mov
popf
data16
sahf
stos
inc
aam
lock
test
pop
out
mov
lahf
test
movsl
push
out
adc
cmp
lods
lock
sub
or
cmp
into
add
and
bound
sbb
push
push
mov
pop
mov
pop
and
cli
sub
dec
sbb
test
out
xor
std
sahf
xor
test
cmp
sahf
fadds
sub
ds
jae
movsl
jno
data16
mov
test
out
jmp
std
and
out
shrl
jge
jae
jo
cpuid
roll
inc
nop
xchg
sbbb
cmp
sub
pop
mov
dec
fdivl
in
mov
add
cwtl
cmp
fs
mov
sbb
popa
loop
jge
out
mov
sbb
xor
add
aad
cmpl
or
pop
popf
lcall
clc
ss
inc
test
nop
aad
mov
or
mov
lea
aam
adcl
xor
and
data16
or
js
mov
push
fcomps
cmp
dec
shlb
outsl
xor
pop
std
ss
repnz
mov
mov
push
pop
adc
sbb
sahf
sbb
push
aad
push
adc
pop
push
notb
cmc
stos
sarl
add
xchg
jnp
scas
sbb
mov
in
js
push
lds
push
icebp
jge
insl
ljmp
jl
sbb
dec
stc
in
int
fistps
lahf
cmp
insl
lret
xchg
out
cmp
sub
sbb
xchg
mov
test
jmp
fsubrs
rcr
fs
les
and
in
loop
pop
bound
out
lock
mov
fdivs
xor
loope
jecxz
jp
and
push
cmc
imul
mov
cs
cmpsb
xchg
loopne
jo
sbb
insb
pop
mov
dec
add
push
loope
test
ret
cmpsl
out
in
mov
mov
jns
cs
and
mov
mov
xchg
xor
push
cmp
shl
test
xchg
sub
push
dec
hlt
cmovs
xor
daa
cmp
les
std
dec
dec
test
in
cltd
lret
ret
mov
cs
jmp
mov
sbb
inc
xor
in
jge
sub
pop
lock
test
insl
mov
jle
mov
sarb
imul
mov
lret
andl
es
idivb
cli
lret
jbe
mov
scas
test
pop
jp
and
cmp
int3
mov
js
pop
icebp
outsb
sbb
cmp
es
out
lock
test
adc
std
sub
in
push
xor
andb
adc
dec
rorb
pop
sub
lret
adc
imul
sbb
or
out
inc
sub
mov
fisttpll
fwait
stc
repz
test
pop
push
jmp
jo
daa
cmpsl
pushf
ret
enter
jo
jmp
scas
andl
scas
jne
mov
lods
ret
aad
and
mov
mov
cmpsl
or
mov
cmp
ja
das
andb
les
dec
lcall
mov
dec
sub
mov
movsl
aam
or
imul
xchg
aam
sahf
sub
les
insb
mov
in
or
cmpsl
mov
mov
mov
sbb
cltd
nop
ret
push
fisubrs
ja
ljmp
pop
mov
mov
popf
andl
lea
ja
push
mov
ds
dec
sahf
jns
lods
test
ljmp
stos
sbb
sbbb
push
pop
int3
jno
push
int
add
xchg
fnstsw
inc
cmp
int3
mov
or
sub
nop
inc
fdivrl
cmp
add
adc
or
pusha
or
clc
repnz
fnstenv
mov
push
push
sbb
push
push
ljmp
inc
push
cmp
adc
and
loopne
es
inc
dec
dec
cltd
cmp
divl
adc
cmp
push
ds
addr16
pop
pop
fs
pop
call
aam
sbb
cld
int3
pop
subl
cs
arpl
fdivs
jecxz
mov
lods
fldenv
mov
cs
inc
lahf
push
lea
xchg
arpl
lret
dec
push
test
mov
jmp
xchg
cltd
aad
mov
and
mov
jb
cmpsl
jg
cld
pop
mov
cmp
lods
and
sub
adc
or
push
enter
and
mov
xchg
arpl
inc
aam
adc
jne
inc
mul
adcb
iret
out
jb
test
repz
xchg
movsb
xchg
inc
sbb
sbb
xor
movsl
shll
aas
jmp
cld
outsl
jbe
cmp
jo
out
nop
out
addr16
mov
test
xchg
xchg
lahf
mov
adc
outsb
mov
add
jecxz
push
test
es
daa
mov
mov
call
xor
inc
add
dec
pop
fwait
inc
mov
test
stc
dec
sub
add
xor
push
in
out
fistps
mov
out
repnz
and
and
dec
pushf
jl
repz
scas
sbbl
inc
out
pushf
xor
xor
scas
stos
out
mov
sub
inc
adc
sarl
adc
add
xlat
add
ljmp
loop
mov
lea
iret
loope
sub
ret
out
bound
jle
lahf
adc
sahf
leave
mov
mov
mov
mov
lock
sti
lock
pop
add
push
loop
sub
lcall
dec
add
lods
push
and
inc
mov
inc
dec
cmp
test
jo
rcl
aas
sahf
sbb
jp
std
sbb
sub
push
cltd
mov
jbe
cmp
out
pop
mov
pop
dec
ds
jae
imul
mov
jg
out
icebp
lret
mov
sbb
mov
sub
inc
mov
jo
test
pop
pushf
repnz
mov
lcall
lods
clc
jns
js
pop
or
repz
divl
fnstsw
xlat
sbb
add
aad
jns
call
sub
sbb
imul
push
jge
outsb
add
iret
out
loopne
hlt
jle
mov
sub
mov
jmp
cli
xor
xchg
mov
inc
push
mov
data16
mov
arpl
jge
pop
outsl
filds
enter
test
cmpb
imul
mov
cmp
or
sub
inc
ds
in
outsl
pop
pop
pop
cli
or
outsb
pop
orb
dec
push
xchg
aas
roll
push
loop
scas
fsubr
addb
leave
nop
out
xchg
in
xchg
insl
adc
lods
loopne
cmp
mov
ret
jecxz
adcl
daa
dec
pop
xchg
or
sbb
xor
out
cmpsb
jp
scas
shrl
add
popf
jle
les
jl
jnp
cld
cmp
and
das
push
or
cmpsl
cli
adc
fcompl
stos
sbb
push
scas
cmp
mov
decb
and
xchg
aam
iret
inc
pop
imul
or
xor
xor
outsl
mov
mov
adc
sahf
cmp
pop
mov
stc
insb
jmp
xor
inc
dec
pop
inc
sub
xor
jecxz
lds
flds
iret
xor
add
repnz
and
cmp
sbb
mov
lods
aaa
test
jno
mov
fs
ss
sub
mov
mov
pop
cmpsb
leave
push
call
xor
lods
mov
mov
sbb
and
outsl
loope
cmp
dec
lcall
fcomps
aam
jne
icebp
movl
pop
and
fisubs
push
inc
jp
int
xchg
lock
icebp
decb
jbe
clc
popf
rorb
sub
test
fisubrs
pop
xor
adc
jae
xor
mov
sar
loopne
jb
mov
dec
push
inc
inc
ljmp
inc
push
gs
or
popf
pusha
jae
mov
lds
int
sub
movsl
roll
movsl
push
lea
push
popa
subl
rorb
dec
xor
popa
jp
dec
mov
bound
int3
iret
hlt
mov
movsb
dec
xchg
and
insb
jl
aaa
jno
adc
shrb
mov
push
sub
pop
jge
adc
inc
sub
decb
or
cltd
shrl
repz
dec
je
inc
mov
dec
sahf
cmpsb
dec
out
sbb
mov
mov
cmp
sub
push
jle
push
push
out
add
jb
adc
shlb
out
sbbl
cmp
push
repz
mov
testl
or
mov
pop
cmp
test
popl
cli
mov
insb
cmp
adc
adc
subl
xor
adc
mov
adc
movsl
rol
imul
jl
mov
cli
jmp
mov
insl
inc
pusha
ret
mov
push
xchg
mov
sub
mov
lock
adc
sub
daa
mov
inc
mov
cmp
mov
repnz
pushf
daa
mov
push
add
lock
out
adc
shlb
push
mov
mov
and
pop
and
push
jl
addr16
mov
xchg
push
lcall
pop
or
lods
pop
jns
mov
mov
in
imull
mov
inc
pop
add
cmpsb
sbbl
notb
xlat
mov
sub
std
sbb
and
mov
fsubl
mov
xchg
out
iret
imul
mov
cwtl
insb
mov
loopne
fwait
adc
lock
jg
rorb
push
mov
frstor
test
dec
adc
mov
jp
test
or
outsl
cli
dec
cmc
int3
and
lock
into
xchg
sbb
das
sbb
pop
push
sub
dec
xor
gs
scas
stos
addl
sbb
iret
mov
sbb
dec
addb
roll
add
pop
icebp
outsl
dec
mov
sub
xchg
andl
imul
js
push
and
sbb
sahf
stos
and
adc
lods
dec
shlb
js
dec
and
bound
sbb
outsl
xlat
add
gs
xchg
sbb
shr
cld
repnz
xor
fsubrs
ret
push
mov
movsb
in
sbb
sub
xchg
or
mov
xor
sahf
jge
iret
or
jnp
test
xchg
push
jno
shl
outsb
pop
dec
sbb
repz
ja
pop
add
out
outsl
cld
dec
fisubs
jo
or
mov
fdivrs
out
sti
clc
mov
fisubrs
and
jecxz
lcall
pop
add
or
cmp
shl
test
data16
sbb
xchg
fadd
push
dec
test
js
dec
add
inc
test
sbb
sub
gs
adc
mov
sbb
push
fists
popa
scas
mov
aaa
cmp
pusha
mov
and
fwait
mov
inc
and
mov
fstpl
pop
mov
mov
je
je
add
mov
and
mov
stc
pop
cli
insb
sahf
jne
shl
fidivrs
aad
popa
jae
pop
mov
and
sbb
and
pop
sahf
out
cmpl
loop
pop
pop
dec
dec
int3
dec
int3
aad
mov
aas
std
sub
push
push
mov
jg
test
jge
cmpsl
repnz
mov
lahf
leave
shl
test
cwtl
mov
push
in
mov
xor
fwait
adc
mov
push
or
add
dec
pusha
fmuls
ljmp
call
inc
dec
jl
mov
xchg
mov
data16
in
aaa
jbe
ficoms
not
repz
adc
rcrl
notb
add
cmp
push
ror
mov
mov
repz
outsl
out
dec
aaa
mov
les
jp
orl
mov
and
xlat
hlt
dec
mov
lcall
dec
cmp
pop
ds
outsl
pop
xchg
mov
test
pusha
mov
cld
mov
pop
shll
iret
sub
ja
xlat
sbb
lret
sarb
xchg
cs
sub
dec
or
aaa
je
push
xchg
adc
dec
jle
test
test
out
cmp
in
mov
adcl
ja
outsl
add
movsb
pop
pusha
pushaw
out
mov
movsb
xchg
jae
push
stc
dec
push
test
mov
adc
out
adc
sbb
stos
insl
add
cmpsb
gs
aam
fsubr
in
jecxz
cmpsl
mov
ljmp
sbb
mov
cmp
mov
fdivr
xchg
fnsave
mov
lret
aam
aas
or
hlt
ret
mov
das
inc
aam
xlat
sub
push
add
orb
or
repz
test
jno
push
or
mov
cmpl
push
pop
push
ds
test
inc
movsb
sub
inc
pop
inc
das
stos
aad
jecxz
scas
pop
push
jmp
out
repz
test
shlb
rcl
xchg
pop
mov
xor
mov
aad
mov
insl
test
jnp
jne
mov
mov
mov
popa
dec
rclb
lret
mov
pop
or
repz
clc
xchg
mov
push
mov
fstpl
lret
inc
test
push
std
imul
mov
inc
test
stc
add
int3
insb
pop
ds
and
sbb
adc
dec
test
cmp
out
shll
pop
hlt
ds
mov
aad
mov
ja
pop
xchg
inc
sub
jnp
dec
nopl
out
sbb
mov
aaa
adc
mov
fdivrs
push
rcll
mov
push
insl
nop
and
mov
jp
js
or
push
xor
pushf
cmp
pop
pop
pop
sub
in
cmp
jmp
inc
pop
in
loopne
sbb
mov
xchg
jne
ds
jae
jnp
inc
xor
test
insl
les
js
mov
repz
ficoml
inc
and
pop
cmpsb
ss
push
jne
je
rorb
mov
mov
jne
cmp
js
or
cmp
sub
cmp
out
cld
pop
mov
ret
adc
push
pop
jnp
and
imul
cmp
je
repz
call
repz
enter
jae
push
stos
inc
xor
push
cmp
pop
and
push
ret
cmpsl
pushf
fwait
xlat
ret
icebp
ljmp
sub
mov
clc
hlt
xlat
in
inc
push
not
scas
adc
fsubrp
sti
nop
cmp
orl
test
or
insb
popl
mov
leave
mov
cmp
mov
cmp
orb
sub
xchg
jo
test
lcall
loope
push
cmovb
inc
dec
mov
dec
and
sbb
hlt
ljmp
add
out
push
jb
movsl
xchg
xor
push
mov
xor
push
aam
dec
and
jge
lea
sarl
dec
faddl
cmp
cmpsb
ljmp
and
pop
and
jp
pop
int3
xor
xor
dec
xchg
push
rolb
iret
xor
rclb
orl
mov
into
je
ret
dec
cwtl
movsb
testl
xor
lods
sarl
push
push
orl
mov
mov
repnz
cmp
sbb
push
cs
xor
push
mov
jmp
sbb
push
adcl
sbb
pop
inc
out
leave
inc
ss
mov
in
scas
sti
sub
nop
lret
lahf
out
out
loopne
stc
xchg
inc
mov
fwait
gs
sub
arpl
pop
mov
outsb
pop
insb
popf
add
mov
adc
push
arpl
jne
sub
jb
mov
jle
inc
pushf
add
pop
test
or
fsubr
daa
daa
adc
mov
inc
test
unpckhps
pop
or
repz
xchg
movsl
stc
pop
mov
imul
out
stos
arpl
std
and
psrlw
aad
js
dec
adc
repz
shl
mov
ret
inc
pop
mov
xor
dec
add
pop
jg
repz
mov
mov
lret
and
mov
mov
jb
lods
mov
clc
and
hlt
je
dec
cmpsl
push
mov
mov
fwait
push
mov
ja
lcall
enter
pushf
movsb
xchg
push
push
adc
lods
push
pop
in
mov
and
cmp
loop
leave
adc
dec
bound
adc
addr16
daa
mov
xor
orb
add
subb
jnp
push
test
push
xchg
mov
fwait
loop
xor
mov
adc
or
xchg
jae
int
pop
xchg
cmpsb
movsl
nop
xchg
and
aas
lods
dec
or
mov
mov
push
adcb
mov
lods
imul
dec
sbb
sub
jle
lahf
xchg
or
cli
dec
das
add
das
xchg
cli
rorb
xchg
pop
jns
cmc
dec
jb
push
push
mov
sub
mov
push
dec
mov
aad
mov
mov
sub
sbb
out
arpl
add
jne
loope
mov
jne
dec
je
xlat
std
cld
push
xchg
xchg
test
xor
mov
imulb
leave
fildl
jne
jns
ja
fiadds
adc
sbb
mov
inc
lret
push
sbb
sbbl
xor
push
fsubrl
mov
loopne
jg
mov
cld
dec
psubsw
jge
push
ljmp
push
cmc
mov
cmp
xor
add
cmc
enter
add
or
fmuls
fwait
jno
cmpsb
push
xor
jp
cmp
mov
xor
das
sbb
push
lret
cwtl
add
add
stc
push
ret
std
inc
jle
mov
je
and
int3
and
xchg
mov
scas
mov
in
jmp
outsb
sub
jae
pop
xchg
es
or
xor
lret
imul
jns
push
nop
insb
popl
fadd
inc
and
jb
and
push
xchg
xor
rolb
ret
lret
cwtl
enter
and
loop
inc
xchg
mov
cmp
xchg
pusha
rep
xor
daa
rcll
push
mov
inc
inc
adc
adc
dec
mov
mov
fs
shll
pop
xor
and
in
sub
fnstsw
jno
cmp
mov
in
jne
in
lods
mov
je
insl
cmp
sub
cld
ljmp
sbb
in
std
sti
in
mov
lret
cmp
dec
pop
or
out
mov
test
cmp
and
sub
ss
push
ds
mulb
sahf
nop
add
sti
xor
add
xchg
adc
mov
jne
or
xor
sub
addr16
shrb
mov
adc
pop
mov
arpl
adc
dec
pop
mov
xor
cld
and
cltd
js
push
adc
scas
std
es
sbb
push
in
stos
repz
notl
outsb
or
adc
adc
rcll
subb
add
pop
mov
stc
rorl
dec
cld
cmp
lock
and
pop
add
mov
into
lcall
fstps
mov
sbb
or
cld
inc
adc
cli
lret
movsl
addb
outsb
imul
add
push
pop
lods
push
push
sbb
cmp
push
out
dec
xor
insl
jb
mov
lret
mov
inc
cmpb
push
insb
fwait
hlt
bnd
pop
dec
pusha
inc
aaa
pop
push
xrelease
fxtract
imul
xor
mov
xchg
repnz
popf
hlt
faddl
push
aad
outsb
push
dec
in
fdivl
out
mov
jns
adc
inc
stos
test
call
notb
and
pop
out
or
aam
jp
shl
mov
mov
cld
mov
or
icebp
cmp
repz
les
in
dec
mov
pop
push
mov
or
sbb
xchg
adc
mov
jns
shll
ja
sarb
xlat
dec
mov
pop
pop
mov
xchg
into
test
push
arpl
xchg
mov
fisttps
clc
fistpll
dec
inc
sti
mov
incl
xchg
xlat
mov
jl
pop
pop
lcall
mov
sbb
int3
mov
push
lcall
inc
jbe
repz
adc
mov
mov
stos
pop
xchg
dec
data16
fs
not
mov
cmp
and
test
nop
fdivp
push
bound
loop
xchg
add
push
push
cmp
fists
das
clc
mov
or
fisubrs
pop
pop
imulb
xor
or
lcall
mov
dec
lea
es
rsm
add
lcall
mov
or
cmp
inc
frstor
adc
das
fldl
cwtl
mov
iret
push
pushf
idivb
mov
repnz
jno
jo
xlat
sbb
ffree
repnz
and
aad
sub
push
fistl
jnp
cmp
imul
rcl
in
push
sbb
mov
out
dec
add
arpl
movsl
fwait
pop
dec
dec
mov
add
iret
mov
dec
lret
lods
dec
xchg
push
xchg
test
mov
mov
xchg
mov
in
out
dec
int
fistl
test
xor
add
movsl
ss
cmc
out
jle
adc
jo
mov
cmc
icebp
test
jg
dec
jbe
movsl
cli
mulb
and
leave
jno
jge
loopne
or
loope
outsb
ja
mov
popa
test
fcmovne
shll
mov
imul
dec
out
hlt
test
mov
in
dec
shll
gs
into
jecxz
sbb
or
jecxz
stos
cs
jb
cwtl
mov
bound
sub
test
call
push
leave
rcll
movsl
and
nop
inc
bound
jge
mov
mov
jecxz
sub
in
fmuls
jmp
lods
xorl
add
jo
xor
pop
cwtl
xchg
cmpsl
repz
aaa
sbb
xor
ss
add
xchg
test
mov
inc
sbb
jns
xchg
mov
or
inc
nop
out
sub
mov
mov
jl
test
add
imull
cs
mov
and
fwait
arpl
mov
inc
lret
fisubl
push
jle
decl
bnd
dec
cmp
cmp
fistps
and
imul
mov
arpl
push
movsl
data16
push
imul
mov
cld
mov
and
cmp
sub
push
enter
hlt
add
mov
sbb
shrb
cld
dec
popa
dec
add
mov
xchg
xor
or
pop
dec
hlt
out
testb
hlt
jo
fiadds
jge
sub
clc
cltd
dec
xchg
test
jo
lret
inc
dec
pop
xor
push
mov
or
scas
aas
sub
push
or
stc
adc
dec
mov
jl
inc
into
nop
ss
arpl
insb
adc
push
sbb
cmp
lcall
imul
ja
stos
xor
into
sbb
sub
loope
js
aaa
push
inc
aad
xorl
cmp
out
sbb
xchg
inc
test
mov
sbb
push
in
leave
pop
or
sub
xchg
fsubl
dec
dec
inc
mov
mov
cmp
xchg
xchg
dec
pop
lahf
mov
in
sbb
loopne
aaa
mov
rcrl
push
fsubs
aad
inc
pop
xor
enter
sarb
loopne
cwtl
test
jmp
in
fcompl
ret
cmc
mov
mov
or
mov
xchg
mov
outsl
icebp
aam
cld
adc
xchg
enter
or
leave
sbb
pop
sbb
sbb
or
gs
into
cmpsb
dec
sub
mov
xchg
fadds
xchg
outsl
jg
fcomip
push
test
lahf
ret
sbb
out
and
adc
mov
insb
mov
and
daa
lahf
mov
cmpsb
movsb
push
cmc
dec
sub
ret
mov
or
test
and
aas
pop
and
jge
inc
mov
jnp
je
movsb
popf
imul
jbe
jmp
xchg
mov
movsl
mov
loopne
push
adc
add
xchg
pop
or
bound
stos
jecxz
clc
mov
add
lret
fsubrl
xor
xchg
js
dec
fnsave
aad
sbb
enter
les
fidivrl
into
testl
cmpb
cld
mov
lret
cmp
loopne
add
orb
pop
sub
pop
or
pop
loop
or
pusha
adc
in
je
mov
mov
pusha
repz
jb
mov
mov
out
mov
pop
mov
or
imul
or
add
inc
fistps
xchg
add
repz
sub
pop
xchg
mov
aaa
lcall
iret
sbb
leave
cmc
fdivrl
push
push
mov
cmpsl
mov
dec
mov
leave
in
repnz
arpl
lcall
jmp
add
mov
lcall
xchg
mov
push
lea
push
out
movsl
call
cmp
fsts
jmp
and
aas
cs
or
mov
aam
inc
mov
pop
icebp
int3
cmp
sahf
dec
mov
movsb
inc
nop
je
cwtl
or
xchg
popf
add
loopne
mov
xlat
imul
dec
mov
loopne
dec
xchg
adc
mov
dec
push
jge
sbb
cmc
daa
std
rol
es
in
sti
aad
inc
pop
xor
clc
mov
mov
push
sub
pop
xlat
mov
je
jmp
and
ss
pop
sbb
push
jecxz
and
sub
lahf
mov
adc
in
mov
jmp
pop
pop
push
or
lcall
or
inc
addr16
imul
bound
mov
cli
sub
mov
outsb
stos
loop
call
js
cmp
jnp
jb
fcomps
shll
enter
jmp
test
push
cmp
push
ss
sti
data16
les
or
fimuls
mov
add
sub
popa
sbb
cld
and
jnp
dec
cli
pop
xchg
outsb
mov
push
loop
mov
mov
dec
addb
jae
in
adc
or
sub
and
adc
sarb
cmc
imul
inc
mov
arpl
jmp
aam
sbb
hlt
cmp
cltd
aas
scas
mov
mov
iret
fs
sbb
pop
adc
and
cmp
or
cld
inc
push
gs
sarb
mov
dec
jno
jmp
ret
ficoml
loope
mov
popf
in
jmp
fnstsw
inc
push
xor
push
icebp
push
les
lods
pop
cmp
xor
jno
dec
icebp
cmp
shr
push
out
pop
add
jbe
out
outsb
push
daa
int3
repnz
inc
xchg
or
mov
sub
xchg
dec
pop
push
rclb
xchg
sub
aaa
lcall
fwait
in
inc
sahf
fsubrs
dec
leave
dec
pop
mov
cld
sbb
mov
cltd
scas
or
out
rcl
or
inc
adc
xor
or
xchg
sarl
iret
add
dec
mov
rorb
push
iret
jle
repnz
inc
mov
outsb
adcb
jge
sbb
add
and
cmp
clc
inc
orb
xorb
popf
pop
add
and
add
imul
add
mov
add
pop
ss
mov
mov
xor
add
hlt
flds
mov
push
add
fildl
sbb
mov
jmp
stc
in
push
adc
popa
div
test
add
mov
movsb
push
mov
lods
add
push
mov
fidivl
mov
loopne
push
in
sub
or
xchg
jp
sbb
add
inc
mov
scas
xchg
cmp
mov
sahf
aad
enter
xchg
push
push
xor
mov
pop
xchg
ss
mov
sbb
adc
sbb
sbb
or
roll
ds
add
add
jecxz
inc
int3
jne
sbb
push
aam
mov
cmc
outsl
inc
std
jne
sbb
ret
mov
ret
test
movsb
addb
rorb
push
lods
push
ss
js
sbb
das
jmp
jmp
mov
add
clc
shlb
jmp
jnp
das
andl
nop
mov
mov
shll
loopne
pop
sbb
ficompl
aaa
fs
sti
scas
or
lock
push
mov
mov
jne
or
lods
je
jp
nop
fwait
jne
xchg
test
dec
rolb
and
jo
dec
das
test
inc
ret
cmpsl
pushf
pop
and
aam
mov
fstl
sahf
push
leave
xor
mov
lahf
mov
dec
xchg
das
jne
add
push
mov
cmp
inc
subl
cmpsl
repz
fnstenv
sub
pop
fsubrs
adc
dec
aas
xor
sti
pop
pop
xor
mov
cli
lods
mov
pop
sbb
dec
sbb
sbb
inc
or
aaa
jmp
jb
sub
jl
and
dec
mov
xchg
pop
pop
scas
call
pop
inc
in
in
mov
jae
or
addr16
adc
imul
cmpsb
je
fstp
mov
mov
adc
cld
xchg
in
mov
jnp
pop
sti
in
shl
sub
mov
outsl
sahf
sub
jno
ds
repnz
xchg
mov
adc
mov
xorb
call
cmp
out
cmp
hlt
out
xchg
dec
cmp
cwtl
cwtl
mov
and
mov
js
cmpsb
sbb
cmpsb
push
adc
int3
leave
adc
and
push
ds
repz
push
jg
xchg
sahf
push
and
pop
add
mov
aam
mov
outsl
xchg
loope
test
dec
fwait
and
mov
jo
or
loopne
repz
xchg
mov
jmp
add
in
inc
rclb
jo
sub
cmp
negl
jo
outsl
push
gs
stos
xor
lods
push
enter
push
inc
shrb
stos
fsubs
inc
xorl
outsl
or
xchg
outsb
xchg
mov
rclb
xlat
and
mov
mov
fwait
sbb
mov
shll
xchg
sub
pop
lods
or
inc
push
mov
ljmp
iret
imull
push
pop
loope
movsl
outsb
imul
inc
jo
and
and
dec
test
inc
sub
push
test
mov
mov
or
cli
dec
push
insl
subl
cmp
lahf
xchg
pop
insl
mov
scas
gs
shrb
fs
js
and
imul
dec
and
sub
out
sbb
movsl
popa
popa
sbb
adc
push
call
imul
outsb
or
and
icebp
ret
jl
mov
adc
ficompl
mov
icebp
xchg
cmp
data16
addr16
lds
sbb
in
outsl
notb
mov
data16
push
jge
testb
subl
or
inc
inc
gs
test
or
push
mov
fmul
or
fcompl
mov
pop
dec
mov
mov
sbbl
test
add
dec
fs
dec
and
xor
addr16
cmp
mov
nop
testb
imul
movsb
jbe
cltd
mov
adc
ret
mov
in
jp
xchg
inc
xchg
jbe
pushf
fistl
les
mov
seta
pop
push
add
leave
pop
in
mov
xchg
lods
out
lret
push
xchg
roll
sbb
inc
xor
mov
dec
repz
jge
cmp
mov
imul
lock
cmp
loopne
out
sbb
cltd
insb
fadd
push
jb
divb
call
fcomps
into
cmp
xor
les
je
cwtl
xchg
cmpsl
loop
jo
pop
icebp
insl
popa
inc
addr16
addr16
adc
and
call
add
ficompl
je
adc
and
or
inc
popa
pop
cmp
pop
mov
and
sub
inc
cmpb
adc
je
lock
inc
pusha
push
movsl
push
fs
aas
pop
xchg
jno
and
dec
cmc
cmc
mov
loop
jecxz
mov
and
int
push
ss
call
imul
out
fwait
rol
lret
push
push
out
cmpsb
jl
push
rcll
xchg
pop
mov
jle
adc
repz
ret
insl
sub
xchg
sub
je
nop
xchg
adcb
mov
int
mov
add
js
into
mov
scas
mov
popa
rorl
arpl
or
cwtl
mov
pushf
push
fs
pop
ja
jp
std
jb
push
bound
fnstenv
arpl
movsl
sbb
hlt
enter
mov
out
mov
add
orb
clc
shrb
popa
jbe
adc
les
insl
dec
sub
xor
mov
imul
mov
cmpsl
lcall
scas
mov
scas
xchg
or
fwait
loope
or
loopne
mov
push
mov
jo
loope
cltd
adc
divb
mov
xchg
cmp
insb
icebp
pop
inc
xlat
addr16
out
testb
mov
jns
pushf
mov
les
xor
pop
rol
add
sahf
insl
stc
aad
loope
jmp
das
push
add
dec
movsb
and
sub
out
xchg
loop
push
scas
fimull
pop
adc
adc
lahf
dec
xchg
cs
lret
mov
mov
mov
dec
add
adc
out
push
jg
jbe
add
xchg
push
popa
add
and
sbb
jl
ss
test
shrl
sar
xchg
cmp
and
xchg
pop
cmpsb
gs
add
add
mov
mov
jb
sbb
aam
or
cmpsl
lret
insb
lea
xor
loop
push
in
stos
sbb
cmp
je
imul
pop
popa
cmp
xor
mov
sbb
mov
es
adc
in
mov
sub
sti
lea
mov
jnp
outsb
bnd
fcomps
aam
outsb
stos
mov
stos
aaa
aas
push
push
xor
pop
adc
scas
icebp
xor
inc
mov
xchg
sub
mov
fxch
cmpsb
sbb
cmc
push
out
jmp
imul
in
out
ljmp
cs
push
jbe
push
call
inc
xchg
sub
adcb
lods
cmp
sbb
rorb
inc
cmp
daa
sarb
xorl
xchg
cmc
testb
sbb
call
mov
or
fs
and
notb
add
dec
imul
jbe
aad
call
or
pop
test
jecxz
jb
shl
cmpsl
test
into
pop
pop
sub
cmp
xchg
dec
imulb
cmp
sahf
pop
fisttpl
lods
sbb
repz
xchg
mov
aaa
cmp
xchg
dec
sbb
and
jns
fiaddl
testb
hlt
out
lea
bound
mov
jmp
xchg
jbe
mov
test
repnz
incl
sbb
imul
mov
xchg
hlt
cmp
aad
add
push
stos
fisubl
dec
popa
push
test
movb
lea
jp
add
cs
out
outsl
insb
lcall
fmull
es
fst
cwtl
inc
int3
xchg
scas
cltd
shll
and
ret
stc
es
mov
cmp
cmp
or
stos
or
or
sbb
add
ds
sbb
push
sbb
inc
inc
inc
test
push
bound
fsubp
rcrl
movsl
sbb
mov
neg
das
or
into
xchg
cmp
sub
jns
xor
rol
ljmp
mov
loop
out
sub
sub
jmp
cwtl
pop
push
rorb
ja
icebp
loopne
inc
outsb
pushl
jle
orl
push
adc
int3
aam
sbb
push
stos
mov
pop
dec
in
adc
pop
xchg
mov
sti
es
cltd
sahf
mov
and
mov
push
insl
negb
aam
pop
shl
out
sbb
out
ljmp
lret
jp
xor
push
xlat
pushf
cmp
cwtl
or
pop
ret
adc
inc
clc
dec
subl
jmp
sbbb
sub
mov
pop
imul
mov
inc
fdivrp
inc
lds
lods
inc
nop
pushf
or
xor
pop
mov
dec
mov
lods
sub
fnsave
mov
cld
in
rorb
std
sbb
sti
fdiv
les
mov
dec
and
hlt
outsb
shll
call
andl
cmp
sahf
js
and
and
add
mov
dec
out
out
sarb
cwtl
daa
add
mov
xchg
push
sti
mov
adc
add
mov
ret
sbb
push
popl
inc
mov
xchg
cltd
xor
sub
cmp
dec
lock
jnp
lcall
daa
inc
jno
lcall
adc
sub
adc
imull
sbb
pop
mov
xor
mov
mov
xchg
ljmp
cmp
mov
lahf
cld
lock
aas
mov
repz
add
xchg
sbb
push
repz
fistps
xchg
jle
push
mull
sub
inc
mov
lret
repz
adc
addr16
xlat
jl
sub
lods
jae
mov
bound
push
movsl
mov
push
loop
fcompl
arpl
das
cmpsb
jb
ja
cld
dec
arpl
jae
jae
xchg
ror
sub
sarb
sar
fmull
sub
iret
addr16
add
imul
mov
sbb
faddl
xor
loopne
fimull
mov
ja
add
add
cmpsb
xchg
xchg
xchg
ja
clc
push
rcll
in
enter
ja
dec
cs
loop
xchg
fwait
lret
add
add
pop
push
jns
orb
stos
jle
xchg
dec
cmp
pop
mov
sbb
fsts
ret
mov
push
jbe
add
movsb
std
sbb
add
pop
fdivl
in
std
shrb
push
jb
stc
jmp
test
repnz
inc
inc
add
loopne
add
adc
incl
mov
mov
in
xor
mov
sbb
push
sarb
sub
push
in
imul
mov
and
fs
push
sbb
mov
shll
sub
out
mov
out
jb
fwait
into
lahf
movb
xor
orb
or
jb
int
insl
cmp
es
das
add
imulb
ja
adc
add
ljmp
push
out
xchg
arpl
jnp
mov
enter
rcrb
les
ja
or
lahf
pop
mov
lock
jno
inc
icebp
aas
add
push
in
iret
pop
jg
dec
inc
and
movsb
lret
jo
add
cmp
test
cli
push
lret
in
repz
sub
add
shrb
pop
sub
xchg
cli
sbb
orl
test
sub
mov
enter
mov
iret
and
iret
and
pusha
lcall
pop
cmp
or
std
xor
pushf
out
jb
fwait
fs
fs
jg
jg
add
mov
les
cmc
scas
pop
sti
arpl
icebp
mov
lds
mov
in
sub
sbbl
xor
mov
cmp
jbe
das
outsb
jb
pusha
jge
sbb
sub
xchg
test
and
orb
sbb
movsl
dec
push
sbb
adc
dec
ret
push
es
fscale
loopne
lock
cli
testl
lret
sub
cli
fmul
push
mov
mov
mov
fsubrs
push
aas
inc
xchg
lcall
dec
sahf
outsl
jg
xchg
aad
adc
sti
sub
out
sbb
paddsb
loop
push
movsb
mov
inc
add
add
movsl
and
mov
imul
xchg
sahf
cld
or
add
lods
out
cld
aas
pop
xor
mov
xchg
insl
lea
jmp
push
sbb
leave
jl
je
ret
mov
mov
push
cmpsl
jne
aas
mov
push
adc
mov
lcall
jae
ret
dec
pushf
xorl
cmp
flds
xchg
jae
js
jno
aam
rclb
jl
leave
scas
ret
cmp
jb
cld
push
pop
out
mov
xor
cwtl
ds
sbb
stos
add
xchg
add
adc
ss
xchg
xlat
ja
jns
out
xor
adc
inc
push
jae
ds
pop
std
xchg
sub
inc
pop
leave
nop
mov
sbb
repnz
add
out
inc
aam
push
in
bound
pop
fdivrl
jge
add
adc
cld
leave
adc
mov
out
sbb
mov
inc
mov
jle
rclb
repz
pop
into
cmp
sti
fmulp
iretw
mov
test
test
addl
or
or
divb
dec
inc
mov
pop
jae
jbe
les
mov
gs
jae
push
orl
xor
stos
jp
adc
jne
scas
leave
ret
add
rcrl
push
icebp
dec
cmp
or
xchg
push
in
shl
sub
push
loope
jns
out
inc
lcall
and
push
cltd
mov
fists
push
insb
mov
insb
xorb
or
xchg
mov
stos
sub
rorl
mov
adc
xor
bound
lock
dec
xchg
mov
pop
js
jne
adc
rorl
movsl
fisubs
inc
push
js
mov
mov
dec
mov
lock
fstpt
cmp
push
pop
popf
andl
movsb
push
in
out
mov
rorl
data16
sub
mov
into
push
jbe
aad
dec
add
jmp
lea
out
jg
ss
pop
ret
or
test
pop
test
gs
jl
mul
scas
jb
or
jecxz
shr
and
xchg
jb
add
test
xchg
cltd
mov
pop
dec
pop
jge
or
cwtl
test
fisubrl
cmp
fst
repnz
pop
lock
dec
pusha
jb
scas
aas
movsb
leave
adcb
stos
push
aaa
xchg
xchg
aad
xchg
xchg
push
xchg
out
xchg
adc
pusha
add
mov
xchg
repz
test
shll
rorl
scas
xor
jae
enter
mov
enter
xchg
adc
cmpsl
mov
mov
in
mov
dec
inc
push
dec
mov
jmp
ljmp
pop
xchg
add
push
dec
lahf
arpl
inc
popf
xchg
scas
pop
push
jb
int3
cmpb
adc
fidivl
xchg
movsb
pop
mov
jne
inc
adc
adc
pop
das
xorb
mov
mov
cwtl
mov
aam
mov
push
popa
cwtl
mov
daa
ja
movsb
jo
or
mov
sub
fsubs
andnps
adc
mov
addr16
daa
aas
enter
inc
orl
loop
sub
out
adc
push
mov
dec
lcall
int
inc
scas
or
xchg
roll
stc
mov
int
pushf
aam
into
push
ret
pop
xor
mov
pop
adc
cmc
jae
cmp
dec
outsl
outsl
sbb
aaa
pop
inc
ss
fisubrl
es
ljmp
jmp
mov
pop
push
sub
inc
push
jmp
add
mov
xchg
cli
out
mov
cs
iret
test
jb
push
push
jo
wbinvd
leave
xchg
divl
jbe
jb
leave
mov
cs
hlt
pop
pushw
or
loope
jne
lcall
xchg
pop
sahf
sarl
jae
cmp
les
jne
mov
xor
xor
xchg
adc
cmp
cmp
pop
call
xor
in
xchg
icebp
cltd
pop
mov
sub
sbb
ret
jmp
push
adc
fdiv
push
int3
pop
int3
lahf
jne
mov
ret
mov
and
jne
add
test
pop
iret
xlat
into
aam
dec
ljmp
or
and
stos
gs
ficompl
popf
lock
cmc
lcall
iret
shld
je
jns
leave
rorl
leave
in
das
sarl
out
xchg
push
rcr
lods
xlat
add
xchg
and
ja
pop
out
punpckhbw
ss
stos
adc
inc
test
cmovae
out
dec
jg
pusha
jo
subl
push
mov
cltd
jecxz
cld
das
fsubr
out
arpl
add
and
sbb
mov
roll
jmp
mov
lcall
out
jle
mov
das
fsubl
pop
dec
pop
dec
sub
fisttpl
ljmp
sbb
hlt
mov
shlw
jno
inc
test
aaa
mov
push
add
cmc
xchg
dec
sbb
gs
idiv
movsl
xor
sar
mov
shr
jbe
or
xchg
and
movsb
xchg
enter
cwtl
xchg
div
add
in
ljmp
lahf
cmp
mov
popl
dec
and
and
int
or
insl
mov
pusha
adcl
inc
movsb
pop
movsb
cmp
je
mov
int
push
or
inc
cld
cmpsb
gs
or
mov
push
repz
xor
movb
cmc
jge
mov
scas
push
dec
inc
inc
pushf
add
loopne
fwait
or
xor
mov
push
call
xor
xor
pop
subb
pop
push
loop
xchg
adc
std
popa
lea
aam
jmp
xchg
inc
clc
pop
test
movsb
push
push
add
pusha
enter
jmp
jo
lock
lea
xor
popl
and
cmpsb
mov
stos
rcr
insb
imul
mov
sbb
loope
ljmp
roll
arpl
xchg
lcall
pushf
add
mov
mov
arpl
lods
std
lret
dec
fcmovnu
sbbb
add
jge
sbbl
and
pushf
outsl
repz
push
lods
sbb
pop
inc
inc
push
out
lcall
mov
out
adc
mov
jnp
pop
cmp
mov
push
call
sub
or
sub
cmp
ficoml
mov
imul
incb
xchg
loope
cmp
jl
mov
jecxz
jb
mov
loope
mov
push
test
data16
dec
add
pop
or
cwtl
into
cmp
pusha
cli
push
inc
je
cmpsl
mov
add
lea
xor
dec
adc
sub
mov
out
push
cld
sub
mov
std
push
outsb
push
push
jp
les
cmp
es
and
and
lret
jbe
scas
sub
dec
push
jp
jge
dec
jp
mov
cltd
pop
inc
push
pop
xchg
ret
outsl
mov
xchg
mov
jae
sbb
inc
fsubrl
mov
scas
in
cltd
dec
pop
mov
addl
aas
cli
int3
repnz
mov
cmpsb
negl
jmp
int
in
inc
lret
inc
fdivs
dec
aaa
stc
jns
jbe
scas
or
cmpsl
sub
inc
repz
mov
dec
out
cmpsb
dec
push
and
cmp
rorb
decl
daa
rdmsr
or
pushf
imul
mov
mov
hlt
sub
add
sbb
dec
add
rcll
insl
add
xchg
mov
js
jecxz
xor
push
pop
mov
add
push
cmc
push
sub
add
jge
xor
lahf
cmp
and
stos
int3
mov
jecxz
jns
arpl
lea
sub
dec
xlat
push
out
jb
add
push
push
dec
dec
fstpt
cmp
cmp
ret
jo
paddusw
fnstenv
jbe
mov
or
cltd
xorl
jp
roll
les
mov
mov
add
pop
push
shl
adc
xor
jne
push
mov
sub
stos
pop
stos
les
push
das
xchg
in
mov
inc
aas
arpl
dec
out
cmp
or
daa
cs
jle
mov
pop
sbb
and
mov
imul
loop
push
cmc
rcrl
xor
add
enter
sbb
inc
je
fnstsw
out
in
dec
xor
xor
dec
dec
dec
cmc
dec
int3
or
popf
jbe
mov
fildll
cmp
out
dec
pslld
mov
clc
lcall
ja
cmp
mov
push
mov
and
into
push
aad
lret
rclb
sub
andb
add
fsubl
jb
adc
jp
lock
sub
jno
or
lcall
cmp
rcr
pop
ss
out
mov
mov
push
es
sti
stos
sbb
and
add
sbb
mov
out
xor
inc
rol
cmp
gs
mov
je
dec
xchg
add
add
inc
jo
mov
sbb
push
fisubl
or
xchg
xchg
and
std
xchg
push
out
enter
mov
into
fwait
push
daa
lods
test
jecxz
pop
adc
add
push
pusha
ret
imul
jl
add
fimuls
cmp
sub
rorl
in
xor
das
mov
sbb
fld
jecxz
cmp
mov
lock
decl
xchg
or
mov
ja
insb
pop
mov
jbe
mov
or
mov
jp
add
mov
shrb
test
rorl
jle
test
mov
inc
imul
and
push
rclw
fsts
adc
popf
inc
cld
fdivrs
xor
cmpsl
mov
ljmp
or
ja
mov
cmpsb
xor
mov
push
xchg
jg
roll
int
sbb
or
and
ds
mov
push
call
in
add
push
fs
push
idivl
sub
dec
out
in
mov
dec
jno
lret
mov
add
or
push
dec
push
rcrl
repnz
sti
cmp
mov
mov
dec
aaa
inc
aad
mov
rorl
jns
sub
ja
test
sbbl
inc
sbb
bnd
xor
movsb
in
sti
jle,pt
fstps
pop
or
js
cmpsb
out
dec
ds
jp
loopne
and
push
xlat
or
push
sar
adc
xlat
push
mov
imul
cli
in
ret
dec
cmpsl
jle
cmpsl
or
iret
movsl
js
cmpsb
jl
test
stc
pop
mov
repnz
andb
push
sbb
xchg
dec
add
inc
adc
rcrb
int
add
cmp
sub
inc
inc
add
popa
and
sbb
stos
je
xor
inc
adc
aas
mov
je
jnp
inc
gs
pop
mov
jne
inc
cmp
sub
sub
lock
mov
sbb
scas
pop
lea
neg
inc
mov
push
dec
cmp
mov
aaa
sub
and
dec
and
clc
popf
sbb
lds
cs
push
sbb
addb
enter
sbb
xchg
adc
and
xchg
adc
outsl
jnp
pop
das
push
test
push
jbe
jg
sbb
iret
negl
ss
inc
xor
jb
fsubl
sbb
pop
mov
pushf
xor
mov
mov
pavgw
inc
mov
lods
mov
adc
adc
push
push
mov
movsl
test
mov
ret
xadd
bnd
pop
dec
daa
pop
cmp
iret
push
mov
pop
jp
xchg
or
push
pop
push
adcl
and
ret
jae
mov
cwtl
and
lret
inc
add
push
cmp
lods
inc
xor
adc
je
aad
push
dec
int
xchg
add
add
push
xchg
xchg
scas
inc
cmp
fmuls
outsl
mov
fcmovbe
pop
sbb
cmp
in
jne
adc
sub
jno
clc
and
out
jae
test
es
rorb
lahf
jae
arpl
lock
lds
adc
jp
push
xorb
jecxz
push
lods
lret
jno
mov
scas
jns
es
jle
sub
pop
jns
and
mov
pop
xor
xchg
jno
nop
in
or
or
es
nop
fiaddl
xchg
outsb
fldenv
jns
rcrb
pop
into
xor
jne
lret
jmp
cld
jl
lret
mov
nop
repz
pop
inc
xchg
mov
xor
pop
lret
iret
add
leave
fs
repnz
imul
mov
adc
loope
mov
mov
or
sarb
or
cmp
pop
iret
es
cmpsl
roll
mov
and
mov
push
xchg
inc
xchg
adc
and
pop
mov
mov
lahf
ret
xchg
stos
in
sub
add
dec
cmp
mov
cmp
fcom
xchg
leave
xor
mov
sahf
xchg
arpl
pop
adc
fs
dec
adc
push
loop
fisubrl
lret
test
mov
les
jle
aad
or
dec
jle
push
repnz
xchg
ret
pop
movsl
sarl
and
pop
mov
icebp
cli
aam
popa
je
imul
pop
imul
xor
inc
arpl
xchg
sub
hlt
or
jmp
int3
mov
push
xor
jmp
lods
mov
stos
mov
xchg
push
repnz
sub
idivl
add
outsl
cmc
cmpsl
je
rcr
pop
fisubs
inc
iret
jmp
aas
cmp
or
cmc
cmpsb
add
into
adc
mov
in
push
cmp
popf
rcll
nop
push
lea
jae
push
imul
sub
loop
dec
and
push
ret
mov
std
xor
sbb
test
cmp
in
pop
or
sub
arpl
pop
mov
icebp
xchg
fcmovb
out
lea
adc
cmpl
pop
or
push
cltd
bound
add
xchg
fcmovne
xchg
xchg
jg
cmp
lcall
inc
dec
sbb
sbb
mov
mov
xchg
or
xchg
add
aas
out
and
xchg
cmc
sahf
jmp
mov
dec
cmp
in
pushf
cld
jno
addr16
in
ss
mov
cmp
stos
jl
enter
loopne
mov
inc
pop
stc
fisttpll
les
add
fidivs
cltd
pop
iret
lret
mov
test
xor
adc
jno
pop
test
sbb
mov
mov
jnp
je
xor
leave
push
jnp
fsubrl
sbb
add
xlat
pop
or
fs
inc
push
push
mov
and
pavgw
cmp
add
in
pop
jle
mov
fimull
fldt
sub
xor
fs
scas
xor
test
pop
mov
bound
mov
repnz
stos
add
cmp
ficomps
xor
xor
in
mov
sub
dec
cmp
fdivrs
inc
es
xchg
mov
mov
pushf
jns
iret
and
shll
incb
cmp
lods
ljmp
pop
push
inc
pop
test
mov
movsb
mov
push
push
dec
and
loopne
cli
insb
pusha
std
ljmp
das
in
int
mov
clc
xor
dec
test
mov
mov
stos
cltd
sub
mov
pop
jge
sbb
and
mov
push
xchg
addr16
movsl
test
hlt
fidivs
jg
add
xchg
cmp
lods
jno
cwtl
ljmp
scas
cmp
arpl
rorl
arpl
adc
loope
js
fistps
dec
jmp
std
jle
xchg
cmpsb
jne
mov
rcrb
rcl
jb
lret
adc
insb
jb
loop
lret
pop
ret
ds
pop
jmp
cmpsb
addb
imul
stos
ficoml
or
lret
xchg
xchg
addr16
shl
dec
xchg
shrl
pop
lods
cwtl
push
push
in
cmpsl
cmp
pop
jl
cwtl
ret
stc
cmp
cmp
push
mov
fnsave
cmp
or
sbb
xchg
cwtl
jecxz
lods
xchg
shll
pop
cwtl
in
mov
movsl
fidivrs
das
je
movsl
pop
mov
sub
mov
das
cmc
dec
stos
sahf
mov
imul
mov
and
nop
push
mov
xlat
aas
gs
mov
shll
jmp
xchg
pushl
mov
lcall
pop
aas
add
test
movsl
mov
push
mov
lds
jb
ja
into
js
cltd
and
and
test
dec
or
mov
test
xor
inc
inc
ret
aam
jl
sub
adc
fstl
xchg
pop
ja
pop
cmpsl
movsb
jle
push
iret
popf
stos
scas
jl
mov
addb
cmpsl
pop
or
sarb
xor
xchg
push
inc
cmp
jnp
jp
clc
adc
mov
loop
push
pop
aam
lcall
mov
xor
sub
loope
jns
aam
jns
sbb
jbe
loopne
lea
jmp
rcll
out
lret
or
in
ljmp
cmp
pop
ljmp
sbb
add
ljmp
mov
push
jecxz
adc
xchg
nop
bound
loop
jne
incb
push
and
stos
imul
sub
adc
mov
lahf
arpl
insl
and
fucomp
jbe
mov
adc
inc
rcll
or
jns
fdivl
imul
arpl
xchg
and
test
lret
add
pop
adc
dec
hlt
push
out
mov
pop
mov
cld
and
pop
xchg
mov
sbb
ret
jo
push
cld
lea
push
jecxz
and
inc
in
jb
loop
sarl
in
dec
pop
out
lea
and
push
jg
push
jbe
insl
jecxz
sub
xchg
jmp
pop
loopne
out
shll
outsl
std
aad
out
or
xchg
sti
je
gs
sarl
stos
pop
negl
lret
test
mov
cmp
cmp
pop
jp
loopne
mov
mov
popl
cmp
scas
ja
dec
cs
mov
jp
inc
notl
bound
cltd
in
hlt
adc
mov
std
pop
in
shrl
in
lock
lds
inc
mov
cld
les
movsl
lret
push
shll
mov
mov
pusha
icebp
test
mov
repz
rclb
into
fwait
outsl
inc
push
add
and
aam
fnstcw
call
add
mov
cmp
test
into
in
out
inc
sbb
movsl
fstl
shll
scas
xchg
int
insl
stc
jp
pop
push
push
rorl
lahf
add
or
pop
push
popa
add
inc
es
outsl
sub
push
push
add
jb
pop
jp
jecxz
cmp
pop
lea
push
mov
sbb
sbb
stos
loop
cmp
dec
mov
je
add
adc
mov
mov
ljmp
fldl
sbb
mov
aas
or
push
and
xchg
lcall
dec
add
ljmp
xor
sbb
sti
cmpl
sbb
add
imul
mov
jbe
add
arpl
test
xchg
insb
mov
adc
dec
mov
testb
lahf
mov
jl
adc
fiadds
mov
add
dec
jo
mov
mov
xchg
movsb
adc
loope
xchg
shlb
and
in
push
loopne
and
test
dec
jl
cmp
mov
negl
push
daa
or
sbb
ljmp
cmp
mov
push
hlt
sub
pop
call
push
repnz
add
push
test
sub
add
dec
sahf
or
shrl
pop
arpl
sbb
stc
mov
mov
hlt
adc
or
cld
mov
aas
xchg
push
pushf
inc
dec
mov
mov
sbb
adc
mov
dec
xchg
jmp
btr
mov
call
sbb
pop
cmpsl
dec
jle
jecxz
loop
lea
ret
outsl
mov
xchg
pusha
jp
mov
leave
mov
push
outsl
movsb
cltd
xor
les
pop
inc
inc
mov
push
inc
je
and
push
mov
mov
jnp
push
inc
call
inc
outsl
ds
addr16
pop
push
inc
mov
xlat
jnp
out
hlt
dec
dec
dec
jnp
sbb
cmpsb
bound
mov
jmp
push
push
mov
push
js
stos
xlat
jp
push
push
mov
or
lcall
add
shl
adc
xchg
dec
scas
ljmp
mov
xchg
dec
push
cmpsl
pop
lcall
pop
or
mov
das
cmpsb
push
xchg
sub
or
popa
popf
sti
or
repnz
popf
test
psubw
jo
jo
mov
bound
cmp
dec
rcrb
lds
push
pop
cmp
push
or
fucomp
stos
outsl
dec
mov
lea
sub
xor
or
pusha
xchg
shl
add
sub
xchg
les
dec
jae
pop
and
jmp
dec
and
add
jb
fcompl
jmp
xor
sub
sub
in
adc
addr16
inc
out
movsl
cmp
inc
gs
jae
or
xchg
aam
es
jle
int
dec
mov
popf
ret
out
cmp
push
scas
jns
das
or
sahf
add
daa
push
jle
shr
dec
xchg
jp
jge
int
or
popf
loopne
mov
pop
stos
scas
loope
std
in
mov
jmp
jp
test
push
inc
mov
cmc
fldenv
ret
movsb
push
push
repz
inc
rcrl
daa
fwait
xchg
pop
sarl
andl
push
dec
jmp
push
sbb
shrl
or
scas
cmp
lret
scas
shrl
push
fisubs
fucomi
add
inc
jnp
ficomps
add
mov
and
sub
movsl
fcompl
jmp
out
sbb
mov
jecxz
inc
mov
test
adc
fdivs
push
adc
int
mov
or
push
dec
and
scas
fwait
std
inc
cmp
jecxz
inc
test
xchg
or
mov
fadd
jne
clc
mov
inc
fiadds
movsb
adc
enter
std
sub
push
das
lock
sub
les
cmp
mov
dec
mov
xchg
cltd
sbb
jl
xchg
shlb
mov
jmp
test
mov
dec
dec
sub
pushf
in
add
sti
push
test
sahf
jbe
pop
fdiv
dec
add
aas
cmpl
push
or
xchg
nop
push
dec
nop
ficoms
imul
push
cld
jmp
cld
add
dec
mov
outsb
cld
fldl2e
ljmp
adc
xor
push
testl
into
sbb
sbb
mov
push
mov
lea
jnp
fbstp
scas
ja
pop
outsl
in
xchg
cmc
dec
cmpb
push
jecxz
xchg
hlt
rorb
ret
push
adc
inc
out
mov
sub
pop
ss
repz
cmp
cld
jno
jle
dec
sbb
xchg
inc
outsb
in
je
cmp
cmp
add
push
clc
jnp
and
sbb
call
pop
pop
push
push
scas
or
hlt
jo
out
jbe
subl
aas
xorb
data16
test
and
out
add
shrl
mov
mov
lock
ja
mov
xchg
shll
inc
xchg
mov
rolb
ficomps
scas
aas
lods
imul
or
mov
dec
es
pushf
dec
pop
jae
and
ljmp
mov
sub
fdiv
aam
roll
mov
cmp
notb
stos
mov
iret
push
jno
adc
push
lahf
mov
mov
gs
stos
jne
icebp
out
and
or
lods
adc
lcall
mov
cmc
std
je
jae
fmul
mov
inc
inc
stc
mov
xor
icebp
dec
sbb
sar
cltd
aad
fcoml
sub
dec
fwait
adc
mov
cltd
test
adc
cmp
push
rorl
ficoms
psubb
das
jle
mov
or
gs
sbb
jp
dec
movsl
stc
push
sub
inc
add
lods
repnz
test
negb
cmpsb
inc
jecxz
jmp
and
mov
loop
cmp
mov
xor
ja
insb
cmp
mov
iret
jle
aaa
shrl
data16
xchg
aam
mov
sbb
push
sbbl
jnp
jbe
movsl
pop
cmc
in
or
sti
push
mov
repz
push
xor
cmp
ljmp
mov
pop
sbb
lret
cmp
or
cmp
xchg
add
pusha
test
sub
lds
sbb
sbb
dec
in
dec
lock
and
push
adc
loopne
aas
or
cmpsl
push
adc
inc
jg
push
leave
and
enter
ds
lods
mov
in
jno
jnp
loope
movsl
jne
jnp
scas
adc
xor
pop
aam
xchg
inc
inc
mov
in
adc
enter
test
adc
stos
lods
adc
aad
lret
shlb
imul
outsl
and
shll
icebp
leave
jmp
jb
push
or
out
mov
fisubrl
sbb
out
in
sbb
push
jae
pop
adc
addr16
cmp
mov
bound
jge
ret
sub
loopne
sub
fbstp
fildll
in
sub
pop
push
cmc
push
cmp
and
xchg
or
push
jle
and
enter
jo
data16
fs
mov
pop
jmp
adc
iret
sbb
add
icebp
mov
xor
ret
jp
xchg
jb
add
sub
lea
outsl
inc
shrl
daa
out
lods
ds
subl
scas
lret
leave
insb
pop
shll
cmp
or
dec
adcb
jg
cmp
jae
in
jl
out
xchg
scas
push
stos
rcrl
iret
int
lret
jno
push
mov
ret
das
xor
or
fisubl
popl
scas
mov
lret
sbb
in
stos
mov
jecxz
fwait
push
lods
aam
pop
push
sahf
fwait
imul
adc
stc
jae
xchg
ss
gs
mov
dec
push
push
cwtl
mov
pushf
jecxz
in
adcl
fwait
les
jl
jg
mov
inc
push
pop
in
aaa
add
cmpb
adc
aaa
dec
popf
fists
and
sub
mov
and
lcall
adc
jmp
xchg
xchg
or
inc
cmp
adc
sbb
xchg
mov
sbbl
arpl
leave
fidivrs
in
cmp
xchg
daa
sti
ljmp
pop
adc
fwait
repnz
push
lods
jg
je
stos
sbb
jns
leave
nop
inc
cli
daa
cmc
or
sbbb
push
xchg
push
imul
enter
xor
lret
add
or
and
cmp
lahf
mov
xor
pop
imul
sbb
ficoms
mov
add
dec
out
mov
aas
pop
mov
movsb
push
fbld
jnp
dec
jl
in
lahf
rcrl
lea
shll
je
ja
mov
cld
pop
fs
arpl
pop
lret
lret
mov
stc
pop
bound
es
stc
xchg
movsb
push
inc
jecxz
in
movsb
jle
pop
cwtl
insl
push
mov
in
pop
popf
imull
scas
je
xlat
and
mov
fistpl
insl
push
push
stc
cmp
test
pop
scas
and
loopw
les
das
mov
push
jp
out
or
fstpt
repz
sub
jb
and
push
in
sub
xchg
jg
mov
lds
add
inc
adc
jb
sbb
cmp
inc
imul
sbb
movsb
in
jae
inc
pusha
xorl
lea
out
in
mov
jns
lcall
inc
cwtl
pusha
lcall
test
lds
push
add
test
push
cltd
cli
lahf
pop
push
inc
xchg
scas
jb
out
jle
rcrl
and
sub
xorb
rcrl
inc
cmp
lds
clc
xor
dec
out
add
aas
add
out
mov
lahf
dec
sbb
cmpsl
adc
imul
sbb
xor
stos
sbb
mov
pop
ja
popa
mov
sbb
mov
clc
dec
push
leave
lds
stc
aas
hlt
sti
aas
sub
pop
cli
pop
cmp
test
sbb
repz
ror
mov
push
pop
dec
lcall
jnp
testl
scas
cld
out
lods
jno
xor
sti
xorb
fidivs
shrl
xor
mov
push
adc
stc
sub
sub
xor
daa
pop
movsb
adc
cmp
push
fptan
sbb
lahf
jb
and
xlat
mov
jnp
add
insb
jp
stos
jno
cwtl
out
scas
repnz
lcall
stc
cmp
loope
clc
inc
fsub
add
or
cmp
xor
push
aad
out
ret
add
push
sbb
or
push
jns
rol
mov
xor
jne
xchg
pmaxsw
xor
sbb
in
sahf
jp
xlat
aad
in
aam
ret
or
mov
mov
and
lret
lea
mov
cmp
mov
jae
mov
mov
outsb
call
scas
mov
cs
lds
test
mov
dec
jo
enter
pop
lods
movsl
inc
iret
jl
xchg
adc
jae
test
sbb
ret
adc
lock
push
aam
out
or
sbb
push
push
mov
mov
lcall
bnd
in
je
adc
cld
mov
jl
imul
mov
aad
lret
pop
sub
jb
cltd
push
bound
gs
insb
inc
push
pop
add
ds
negl
lds
mov
cmpsl
dec
push
cld
insl
repz
iret
pop
lea
dec
fdivrl
lds
in
data16
stc
lock
in
iret
xchg
cmp
js
out
lret
sahf
movsl
mov
stos
shld
add
mov
jbe
aas
dec
shr
cli
lock
jle
les
popf
pop
sbb
add
in
mov
daa
enter
add
xchg
xor
fxch
out
scas
mov
cmp
push
jmp
scas
mov
test
test
testb
add
sub
push
sbb
push
rolb
mov
cmp
pop
adc
cmc
adc
aam
push
xchg
push
dec
outsl
push
mov
out
ret
ss
cmp
sbb
nop
dec
test
fbld
dec
out
dec
dec
popa
ja
movsb
jl
stos
lret
lods
icebp
shl
sbb
xor
in
mov
add
xor
notb
out
cld
lret
and
mov
les
mov
fwait
pop
sub
loope
dec
sub
mov
xor
adc
sub
and
mov
nop
in
adc
imul
data16
cmp
je
pushw
push
sub
fldcw
jp
aas
inc
pop
push
ljmp
push
mov
or
sbb
xchg
adc
dec
mov
sbb
sbb
mov
and
jbe
popf
push
add
orl
cmp
insl
fildl
lahf
pop
inc
jl
xor
je
daa
adc
out
dec
cld
cmp
loope
fwait
test
lahf
stos
cmpsb
je
insb
or
popa
jne
and
ret
xor
inc
cli
ja
pop
call
cmpb
xchg
push
xor
popf
inc
in
inc
pop
cmp
int
pushf
cltd
jo
adc
lds
into
popf
lea
xchg
repnz
sbb
dec
mov
xor
hlt
std
rclb
cli
or
mov
push
adc
loope
pop
int
hlt
aas
push
push
inc
cmp
push
jg
cmpsb
stos
push
adc
jbe
scas
test
mov
int
jne
jb
jge
daa
fs
std
and
dec
push
pop
int3
inc
sbb
add
jnp
imul
mov
mov
xchg
mov
hlt
lret
mov
outsl
decl
mov
and
or
mov
pop
loop
push
jecxz
fs
cld
add
insl
mov
add
xchg
pop
mov
inc
outsl
rcl
into
xor
push
pop
lods
jbe
adc
sti
subb
enter
out
arpl
mov
test
std
mov
jmp
into
cmp
dec
jo
jns
jmp
or
shll
xchg
sub
bound
push
xor
in
sbb
cwtl
mov
or
fnstcw
add
sub
or
out
mov
loop
dec
inc
pusha
inc
sahf
adc
inc
dec
mov
in
inc
jecxz
out
ret
xor
mov
into
lret
shll
mov
pop
push
jne
movsb
push
mov
jne
leave
gs
dec
inc
sbb
mov
movsl
adcl
pushf
cmp
cmp
jbe
push
aam
cmp
cwtl
mov
pop
in
ljmp
lods
inc
add
stos
cmpsl
js
leave
jae
pop
sub
and
dec
frstor
mov
dec
test
fistl
std
and
jmp
add
xchg
scas
xorb
repz
pushf
push
pop
push
iret
add
je
mov
andb
jnp
jns
add
repz
inc
add
mov
in
aad
test
loopne
test
ret
insl
dec
pop
in
repnz
insb
ret
sbb
pop
mov
push
mov
test
sub
push
mov
ret
mov
adc
jge
mov
test
imul
int3
jno
xor
sbb
sahf
notb
jno
jb
out
dec
mov
xor
in
lods
cmpsb
out
mov
cmpsb
mov
arpl
in
adc
mov
xor
cmc
push
xlat
push
add
cld
add
fs
xorl
mov
sub
pusha
xchg
out
mov
stc
clc
das
cltd
js
mov
fists
sbb
int
cmp
ror
add
mov
push
cmpsl
pop
call
adc
pop
mov
cs
dec
mov
or
mov
jo
mov
notb
or
lahf
push
or
mov
rolb
push
data16
movsb
cli
rcll
in
lret
cltd
ds
sbb
mov
mov
add
clc
pop
push
addb
leave
ds
shrb
lods
xor
mov
mov
sahf
fwait
adc
loop
xlat
mov
adc
xchg
sub
jae
repnz
mov
sar
in
xchg
cli
xor
test
sbb
dec
ja
xchg
sub
cmp
rcrl
xchg
dec
or
or
cmp
lahf
arpl
push
xchg
test
inc
cs
outsl
hlt
mov
imul
mov
scas
inc
ljmp
xchg
mov
pop
hlt
imul
push
aad
jae
icebp
jnp
jl
sub
fnstenv
movsl
dec
and
add
push
cmp
dec
pop
jecxz
jno
sub
or
or
rorl
lea
push
jno
arpl
jae
push
std
pop
mov
leave
shlb
iret
or
mov
imul
pop
cs
sbb
in
data16
jbe
mov
outsb
movsb
into
arpl
fsubrp
sbb
xchg
lahf
lret
mov
mov
dec
dec
bound
jge
or
sbb
ret
jle
xchg
sti
xchg
cmpsb
add
loopne
jle
repnz
scas
cli
and
and
jb
fwait
and
push
cwtl
pop
sub
push
xchg
push
add
movsb
stos
pop
dec
xchg
mov
or
and
jno
lods
fneni(8087
push
pop
or
ljmp
sbb
sbb
and
inc
inc
stos
imull
ljmp
sbb
mov
jb
pop
xchg
and
in
aas
xlat
stos
fcoml
ficompl
or
xchg
sbb
in
jge
cmp
sub
lds
adc
sti
or
push
imul
mov
mov
call
and
push
dec
push
mov
pop
out
sar
jecxz
adc
ljmp
adc
cmp
fistps
push
xchg
sbb
mov
inc
mov
xchg
dec
inc
scas
fsub
popf
pop
lret
and
icebp
sub
and
push
ret
adc
sub
sub
xor
lods
push
pop
sti
jae
les
cmp
ss
xchg
inc
add
fs
mov
lret
sbb
inc
rolb
out
adc
push
push
test
ret
inc
mov
cld
xor
mov
dec
mov
push
push
sub
mov
fidivrs
sbb
jno
imul
notl
cs
add
bound
sbb
jl,pn
adc
scas
dec
or
andb
mov
lds
into
iret
rcr
cli
fbld
sub
pusha
es
xchg
fisubs
push
popf
sub
lcall
push
loop
loope
fdivrs
js
das
mov
pop
xchg
cmpsb
push
push
pop
add
inc
fcmovbe
mov
std
inc
rcr
adc
inc
xor
jb
inc
out
movsl
enter
dec
mov
mov
pusha
test
lcall
scas
jmp
in
aaa
popa
neg
call
lcall
pushf
jge
and
mov
inc
jmp
and
bound
cli
jecxz
loop
adc
mov
subl
sarb
fldt
inc
jge
mov
cmp
sahf
inc
and
jg
sahf
or
nop
add
add
push
sarb
sbb
cmp
lcall
int
jo
dec
mov
mov
jl
lods
jns
jbe
xchg
aam
dec
adcl
cmp
mov
jmp
rep
add
int
push
jecxz
aas
bound
sbb
sbb
sahf
fbstp
pop
pop
data16
mov
mov
int3
aaa
int3
iret
shr
test
sbb
es
fstp
lods
in
push
sahf
popa
or
xchg
fidivrl
sub
in
pop
subb
push
mov
je
enter
or
mov
ficoms
ds
mov
jp
jp
push
xchg
sbb
xchg
cmp
dec
jbe
inc
push
cwtl
mov
dec
sbb
jle
dec
addl
push
fs
cmp
fcomps
cmp
mov
mov
inc
test
out
sbb
pop
fcom
repnz
rclb
or
dec
inc
xchg
into
decl
jb
sbbl
and
cltd
mov
jmp
inc
lret
pushf
cmp
push
and
or
push
in
adc
xor
jmp
daa
jmp
js
std
mov
enter
inc
outsb
mov
or
xor
add
fs
les
xor
jbe
idivb
push
loop
mov
sbb
and
cmp
stos
outsl
push
pusha
jbe
mull
cwtl
mov
mov
loope
rclb
repz
sub
mov
in
mov
xor
push
adc
jnp
scas
cmp
ret
lock
cmp
sub
mov
mov
dec
mov
mov
sbb
sbb
scas
mov
std
xor
loop
out
outsb
inc
pop
and
clc
std
xchg
sahf
dec
mov
lock
pop
xor
sub
out
cmp
add
jmp
xor
or
sub
pop
lds
into
fstpt
cld
inc
nop
xor
mov
test
cmp
stc
adc
ljmp
into
or
ss
mov
cmp
mov
aas
cmp
mov
cmp
aam
xor
fucomi
and
jp
leave
aad
mov
fdivrs
repnz
cmpsb
nop
cmpsl
sbb
sahf
mov
sbb
insl
loopne
xlat
mov
cmp
mov
leave
imul
sub
je
test
push
cmp
sub
loope
pop
iret
mov
in
dec
icebp
leave
lahf
cmp
jle
shll
bound
stos
pop
lods
add
jo
popa
ss
ss
cmpl
aam
bound
inc
push
pop
fcomip
cld
dec
mov
loope
adc
in
xor
test
fsubs
xchg
xlat
and
fcoms
and
mov
loope
xchg
inc
xor
sbb
push
xchg
mov
cli
test
xorb
xor
sub
cmpsl
shlb
mov
adc
dec
xchg
mov
lods
xor
add
call
imul
daa
ret
icebp
push
sub
stos
pushf
shr
jg
stc
push
repz
daa
push
add
data16
outsb
adc
dec
ret
les
je
mov
inc
imul
cmpsb
and
pop
mov
inc
ja
enter
mov
ret
inc
xor
jge
push
xor
jle
sbb
pop
inc
fisubrl
cs
adcl
out
mov
xorl
pop
xchg
popa
lret
shrl
push
pop
out
in
mov
mov
add
jmp
push
dec
ret
cs
aam
ret
xor
mov
adc
rcrb
clc
lea
and
divl
mull
arpl
daa
dec
push
xchg
int3
int3
insl
sbb
add
scas
push
loope
mov
pop
inc
dec
cli
lahf
mov
mov
pushf
push
gs
or
fstps
sub
mov
hlt
loope
lods
test
sbb
dec
nop
cmp
lcall
add
cld
insb
mov
inc
and
pop
int
jl
out
fldcw
xlat
pop
xor
push
mov
jns
mov
mov
push
imul
pop
xor
inc
push
out
test
loop
orl
mov
cmp
mov
in
jg
loop
push
inc
mov
out
cmpl
movsb
jle
jbe,pt
mov
stos
aas
adc
int3
sub
and
sti
ret
inc
cs
lahf
mov
mov
out
int3
iret
or
jbe
scas
into
ja
dec
push
jmp
mov
mov
cmp
imul
pushf
imul
ret
pop
dec
mov
inc
sbbb
pushf
push
testb
pop
xchg
push
push
inc
movsb
ud0
sbb
or
mov
sbb
jecxz
rclb
mov
stc
jg
mov
test
add
mov
pusha
stc
jne
imul
imul
pop
jae
es
mov
xchg
mov
inc
pop
or
and
pop
xor
mov
jb
ja
sbb
hlt
mov
lahf
out
dec
adc
inc
dec
nop
cmpsl
cmpl
les
xchg
in
or
or
sub
mov
outsb
cld
out
cmp
add
repz
fstp
sub
sti
jg
mov
adc
lret
repnz
dec
js
mov
xchg
pop
adcb
jp
mov
mov
or
imul
lret
push
ljmp
sbb
jmp
and
cli
jge
mov
push
pop
in
leave
jp
xchg
or
hlt
ja
lods
push
andl
push
xchg
cmpsb
mov
pop
ss
mov
lahf
scas
sub
mov
ljmp
adc
mov
jae
xchg
scas
jb
call
lods
push
addr16
push
mov
stos
subb
dec
je
rcrb
push
outsl
sbb
pop
xor
cmp
and
mov
push
mov
into
cmpsl
test
cmp
or
push
sbb
scas
mov
es
aad
push
push
lea
mov
out
and
ds
cltd
xchg
inc
cmp
test
or
jae
pushf
imul
pusha
xchg
lods
mov
xchg
dec
in
stc
lcall
int3
stos
mov
aas
and
je
scas
mov
or
inc
std
pop
das
inc
jecxz
lcall
jp
mov
sti
repz
bound
loop
daa
xchg
jle
xchg
bnd
mov
out
sub
sbb
xchg
inc
sub
cli
mov
fdivl
push
jbe
sbb
out
sti
sti
shrl
jae
dec
imul
add
rclb
push
dec
lock
or
mov
mov
dec
mov
cmp
cmpsl
xchg
xor
rorl
mov
jmp
in
rol
xor
xchg
pop
inc
dec
dec
sbbb
iret
jecxz
lret
movsl
mov
mov
inc
out
aas
or
aas
and
lods
negb
int
cli
loop
inc
cmpsb
push
sbb
dec
sahf
mov
cmp
jp
jnp
add
into
add
or
add
insl
das
scas
repnz
pop
dec
int
xchg
dec
gs
push
xchg
jnp
cmp
add
xor
cmc
xchg
or
sub
into
stos
aam
lds
test
cwtl
jo
sub
mov
mov
xlat
mov
test
cltd
jbe
stos
pop
mov
out
scas
outsb
pop
jo
arpl
repz
cld
iret
add
test
jnp
movsb
cmp
cltd
hlt
pop
push
ss
arpl
stos
xor
sbb
cmpsb
jp
push
je
shll
sbb
jecxz
jl
inc
inc
adc
xor
mov
lods
stc
fcomps
sahf
rorl
cmpl
out
int
and
dec
adcb
loope
dec
aad
sti
outsb
push
sub
xor
cmp
push
data16
insl
je
jl
fistpl
jecxz,pt
repz
pop
xchg
jnp
inc
mov
xchg
mov
jb
roll
sub
insb
in
push
add
loopne
aas
xor
call
and
push
idivb
xorl
adc
icebp
loop
out
pop
cmp
fwait
mov
mov
ret
mov
fs
shrb
adcb
outsl
and
pop
out
push
jg
addb
aaa
popa
outsl
and
adc
mov
or
xor
inc
adc
popa
in
mov
mov
push
test
loop
sub
mov
popf
scas
shll
add
dec
incl
int
bound
fsubrs
dec
mov
jo
jae
repnz
xchg
je,pt
and
ja
sahf
push
xor
pop
xor
push
je
mov
loopne
push
mov
hlt
repz
dec
inc
sbb
push
jne
outsb
scas
outsb
mov
pop
fiadds
in
lods
jge
xchg
pop
add
lahf
mov
insl
std
in
mov
and
loope
movl
xchg
scas
jmp
clc
push
pop
fidivs
enter
adc
int3
xchg
xor
jns
push
inc
push
insl
adc
lock
xchg
or
lods
inc
xchg
sub
in
sbb
cmp
smsw
mov
sti
jg
xchg
js
or
fyl2x
cltd
mov
inc
inc
and
out
outsl
movsb
in
rorb
cmc
cmc
jns
jbe
repz
pop
bound
or
sahf
cmpsb
ss
and
lods
xchg
adc
mov
shll
in
jno
js
xor
jp
repz
in
inc
mov
daa
addl
cmp
adc
aam
lods
mov
fmuls
insl
cmp
sbb
sub
push
cmp
xchg
inc
and
cmc
pop
dec
inc
ret
jns
daa
push
xor
sub
push
fcmovu
out
cltd
mov
inc
testb
mov
push
mov
lock
pop
jecxz
and
mov
call
mov
ret
xor
arpl
fists
lea
idiv
roll
iret
jge
lods
jecxz
bound
xchg
dec
dec
xchg
out
mov
or
or
jecxz
jp
xchg
sub
sub
vpsubb
sub
aam
push
adc
das
in
xor
push
pusha
imul
les
or
dec
dec
call
mov
imul
and
iret
lods
mov
push
aaa
xchg
xchg
and
sbb
ret
enter
add
mov
mov
or
faddl
ficoms
repnz
push
pop
mov
out
in
shll
dec
jmp
and
cmp
add
add
push
inc
shrb
cmp
mov
jo
ret
cmpsb
dec
pop
add
shll
divl
inc
mov
adc
inc
hlt
scas
popf
gs
jns
ss
or
or
movsb
mov
mov
add
aam
cvttps2pi
jle
or
cmovl
cld
xchg
and
test
rorb
inc
testb
lret
mov
stos
and
xlat
mov
push
lds
mov
fdivrp
mov
and
lcall
inc
adc
sub
es
xchg
cmp
pop
mov
test
fwait
mov
cmp
adc
add
negl
iret
adc
repnz
mov
adc
inc
mov
out
mov
loop
inc
test
sbb
imul
stc
pop
ret
push
addr16
jle
and
mov
dec
dec
jg
into
cmp
mov
nop
xor
repz
jo
dec
je
int
shl
mov
lods
xor
push
jns
dec
stc
inc
loopne
lret
dec
adc
loope
jp
mov
xor
push
xchg
fildll
lods
cli
insb
insb
xor
cmp
addr16
add
fstpt
sub
xchg
cmc
xchg
lahf
movsl
stos
adcb
jae
bound
test
mov
ds
jnp
push
add
fs
call
pop
sub
xchg
jno
dec
or
cmp
outsl
mov
dec
imul
enter
roll
rorl
pusha
loopne
in
xorb
sbb
lods
push
test
rol
repnz
xor
or
jmp
adc
aaa
pop
scas
lahf
add
push
rcl
adc
and
pushl
xchg
mov
fldt
movsb
insl
sbb
ljmp
sub
mov
jo
pushf
mov
aaa
lock
in
jge
lret
fs
popa
fxch
push
jne
sbb
jae
dec
add
test
or
fisttps
cld
out
cmc
add
xchg
cmpsl
jecxz
jle
sbb
adc
and
jl
aas
lock
imul
inc
mov
lea
add
sub
movsl
jb
and
inc
ljmp
jbe
lods
dec
sbb
ss
pop
xor
aad
lds
push
loop
lds
mov
lods
mov
fs
mov
push
sub
jecxz
push
rcrl
clc
xor
stc
pushf
add
jno
dec
call
add
xchg
dec
xchg
xor
jge
cmp
lods
mov
and
xlat
push
rol
pushf
add
sbb
incb
mov
xchg
mov
xor
loop
xchg
jl
adc
test
stos
dec
jbe
repz
sbb
push
repz
xor
imul
adcl
daa
test
cli
fidivrl
cli
cmp
sub
inc
test
mov
rcrb
push
jae
pop
mov
test
cmpsl
test
popf
in
jmp
mov
jle
inc
iret
js
mov
aam
pop
adc
mov
xor
lds
popf
sbb
es
mov
push
push
jmp
jbe
dec
stc
jns
mov
mov
popf
mov
xchg
imul
or
cmc
loope
js
nop
push
jb
xor
mov
and
stos
psubusw
inc
les
jnp
mov
packssdw
jo
push
xchg
pop
or
dec
test
add
out
push
inc
adc
inc
mov
loopne
push
lock
adc
dec
lds
cmc
cwtl
dec
shrb
sub
or
std
lock
mov
mov
addr16
xchg
mov
lret
pop
addr16
ds
ds
fsubl
pop
insl
push
cmp
push
sub
imul
push
fistpll
jnp
ret
push
inc
movsb
sbb
cwtl
xchg
lret
das
lds
cltd
push
inc
repz
jg
xchg
mov
cld
fildll
xor
insl
pop
pusha
fucomip
fisttpll
jae
mov
clc
aas
xchg
mov
ds
pop
icebp
push
lret
clc
lds
mov
pusha
lret
or
cs
outsb
dec
jo
enter
cltd
iret
push
sbbb
push
and
ss
aad
mov
xchg
pop
jne
sub
dec
rolb
mull
xlat
rcl
mov
xor
ret
mov
std
pusha
outsb
xchg
or
outsl
mov
jnp
xchg
pushf
ja
inc
or
jbe
faddl
pop
adc
sahf
jmp
mov
scas
mov
push
jbe
leave
sbb
xchg
rcll
lods
shlb
lahf
stos
out
clc
jo
pop
mov
cmp
pop
mov
andl
clc
inc
aas
fildl
rclb
jecxz
repnz
movsl
pop
push
sub
hlt
shrl
rorb
fdivs
pop
sti
aam
or
sub
roll
outsb
pushf
test
pop
aam
push
nop
iret
inc
push
mov
cs
push
loope
pushf
jecxz
sub
cli
push
mov
loop
mov
mov
gs
cltd
lds
adc
jg
js
in
lods
sub
pop
pusha
cmp
movsl
ljmp
arpl
repz
mov
add
xchg
lea
xchg
add
sub
rorl
out
mov
clc
pushl
mov
ret
ficompl
roll
adc
adc
lahf
cwtl
jmp
sbb
inc
stc
add
pusha
es
add
popa
xlat
dec
outsl
or
imul
jnp
sub
jmp
lcall
lret
sarb
cwtl
mov
sbb
arpl
mov
sti
lods
inc
ret
movsb
gs
out
pop
xchg
aas
xchg
arpl
sbbl
xor
inc
adc
cmc
shlb
mov
ja
dec
inc
fnstsw
test
cmp
add
cmc
mov
jmp
xor
xor
cltd
fldcw
xchg
lahf
dec
pop
pop
push
or
loop
mov
int
lock
add
loope
push
pushf
xor
jne
mov
daa
ss
pushf
pop
js
add
ret
enter
jmp
sbbb
into
fcomps
and
in
or
adc
in
test
jecxz
xor
or
sbb
or
adc
jp,pn
mov
push
and
dec
dec
call
push
lods
les
data16
sub
pop
pop
repz
aas
or
rorl
mov
xchg
push
popf
inc
cli
mov
shrl
ficompl
mov
mov
or
mov
test
in
icebp
jno
les
lahf
ret
mov
jmp
nop
sub
loop
pusha
mov
repnz
mov
enter
jns
mov
shll
filds
fdiv
test
mov
out
in
xchg
sbb
mov
mov
dec
test
jae
pop
loopne
xor
bound
lock
loop
sbb
jmp
and
cld
cmp
es
vpextrw
lock
adc
push
out
inc
adc
inc
cwtl
pushf
loopne
stc
mov
cld
pushf
adc
lret
fcoms
insl
test
jmp
test
mov
push
popa
xchg
jecxz
pop
scas
fmuls
and
inc
loope
xor
mov
imul
cmp
jl
in
notl
lcall
mov
rcl
lods
psubb
in
cmpsl
mov
inc
sbb
lock
mov
insl
negb
fisttps
stc
pop
add
das
mov
adc
dec
adc
push
and
imul
xor
mov
cmc
add
push
mov
fs
lcall
or
cmp
or
gs
paddusw
out
push
mov
cltd
popa
cmp
sbb
into
and
scas
int
clc
imul
mov
movsb
cwtl
xorl
xchg
aad
arpl
test
dec
fdivs
push
lods
into
inc
cmpsl
call
or
into
inc
andb
pushf
test
pop
repnz
fstl
sbb
sub
add
adc
mov
dec
aas
int
xor
pop
shl
mov
mov
mov
nop
or
ds
jmp
lds
cmc
aaa
loopne
xor
xor
cmp
xchg
jle
adc
fwait
bound
push
jl
add
mov
jl
stos
mov
adc
lods
les
in
cwtl
sbb
sub
mov
into
lcall
push
add
adc
mov
lods
fistpl
xor
push
out
addb
imul
pop
jb
fs
or
fldenv
jo
mov
sub
inc
and
sbb
push
cmp
jae
xor
mov
inc
mov
push
or
mov
lcall
mov
notl
gs
mov
addr16
sub
add
mov
push
xor
jmp
out
dec
gs
dec
adc
pop
jne
inc
mov
int3
jg
shrb
sarb
test
sbb
loop
ret
lds
dec
cmp
push
xor
sbb
and
adc
scas
ret
mov
dec
aas
inc
jno
mov
dec
mov
or
cs
pop
pop
ljmp
xchg
popf
addl
sbb
sub
fwait
xor
pop
pop
rcl
xor
xchg
movsl
sub
xor
js
and
imull
scas
ljmp
nop
lea
sub
mov
xchg
xchg
jns
pop
jmp
sar
pop
mov
ret
data16
mov
ljmp
in
jo
shr
jne
lcall
or
fldt
test
out
mov
cmp
adc
or
loop
out
jge
out
jns
je
jbe
enter
out
adc
or
xchg
pop
je
call
mov
push
push
mov
cmpl
int
or
push
sub
addr16
bound
ds
push
mov
and
sub
lahf
sbb
lcall
je
movsl
add
pop
pop
addl
clc
sti
push
mov
mov
inc
sbb
jae
xchg
mov
and
and
sub
shll
cmp
js
adc
test
dec
sbb
lea
mov
or
pop
push
es
rolb
and
notl
xor
push
imul
pop
xchg
loope
inc
lock
cmp
fadds
std
jmp
addr16
gs
lods
jle
ficompl
inc
popa
cwtl
inc
mov
call
cmp
mov
pop
test
aaa
out
dec
or
imul
loopne
pusha
mov
sbb
sbb
std
stos
fwait
mov
jne
loop
flds
movsl
mov
rorl
push
add
sti
mov
xchg
test
mov
inc
xor
jp
out
and
and
ss
adc
rorb
adc
xchg
jmp
scas
in
push
out
xchg
lret
lea
mov
sti
bound
pop
popf
ficomps
jle
pop
nop
inc
loope
and
push
sub
jns
in
mov
out
into
mov
xchg
sbb
fbld
test
or
jbe
pop
adc
pop
fisubl
adc
nop
fdivs
outsb
dec
and
jno
loopne
inc
cmc
das
pop
mov
clc
dec
xchg
pop
shrl
fisttpll
jle
mov
or
fmuls
xor
pop
mov
sbb
ret
mov
es
pop
mov
and
adc
rorl
cmp
test
jns
mov
add
inc
push
dec
fwait
pop
mov
mov
inc
push
fsubrl
adc
adcb
jae
add
cwtl
pop
xor
dec
jle
sti
add
jmp
push
xor
pop
add
push
inc
icebp
sub
or
push
mov
jle
insl
das
xor
xchg
mov
cld
and
out
out
push
pop
jno
pushf
call
mov
and
pop
aaa
pop
ljmp
out
cmp
pop
les
xor
dec
sbb
push
sub
cmpsl
into
int3
mov
lcall
cli
stos
movsl
shrl
cs
push
xor
pop
mulb
je
inc
xchg
mov
xchg
sarl
imul
icebp
sbb
jnp
mov
or
mov
and
mov
and
sub
inc
xchg
push
out
int3
ljmp
inc
jo
js
test
or
pop
pop
cmp
add
loope
rep
dec
shrb
mov
push
pop
pop
cmp
loop
pop
in
push
stos
xor
mov
sbb
cmpsb
xchg
pop
push
mov
or
jno
fiaddl
pop
gs
loope
int3
mov
inc
pop
mov
mov
jg
pushf
fildl
outsl
mov
into
popa
js
addb
xchg
mov
ss
in
rorb
sti
ljmp
insb
push
das
call
jnp
shr
push
inc
dec
stos
pop
loopne
mov
icebp
push
dec
ds
popa
adc
adc
jmp
out
fcmovbe
das
mov
out
cmp
pop
mov
ret
jbe
pop
test
xchg
in
xchg
cmp
or
mov
adc
adc
popl
xlat
pop
testb
repz
cmp
add
or
jbe
insb
cmp
es
sub
mov
mov
ja
dec
add
push
pop
nop
mov
cmp
dec
mov
pop
stc
iret
in
add
sub
inc
out
xor
push
repnz
and
and
mov
fucomp
ljmp
pop
out
xchg
lds
dec
jnp
aad
push
push
shl
leave
das
sbb
cmc
leave
fwait
into
test
and
ljmp
nop
adc
jo
mov
shlb
ljmp
popa
xor
lods
daa
jno
dec
jle
sub
sub
mov
sub
inc
add
imul
push
pop
into
add
jle
mov
lret
outsl
enter
test
cmp
cmp
pop
mov
outsb
pop
sbb
cmp
mov
mov
pop
out
gs
pop
test
xor
fldt
xchg
jb
xchg
pop
in
cli
lds
mov
pusha
arpl
das
dec
mov
jle
outsl
push
std
jge
fcoms
mov
fstpl
mov
push
scas
or
pop
and
jnp
add
cmp
imul
xor
bound
inc
push
and
mov
mov
mov
outsl
jne
mov
test
decb
inc
jb
mov
mov
mov
mov
pusha
adc
addl
push
icebp
push
jmp
mov
and
aas
popf
xchg
es
or
push
pop
sub
fdivs
test
and
stos
les
and
inc
loopne
pop
xor
jp
lret
cmp
push
icebp
cltd
hlt
pusha
pop
sahf
add
fistpll
lods
std
push
pop
xchg
aas
mov
push
pop
fdivrs
and
jae
scas
add
lods
adc
mull
mov
jg
pop
jge
xor
mov
aaa
adc
dec
sub
loopne
cltd
out
aas
pop
movsb
pop
pop
cmpsb
insb
je
repz
add
pop
jns
jmp
adc
iret
add
les
xor
adc
popf
popa
jg
popf
jp
mov
xor
sub
loope
jmp
pop
mov
fstl
gs
jle
loop
inc
pop
mov
sbb
rclb
stc
out
mov
jecxz
sar
addl
xchg
cmc
sub
gs
out
mov
lods
pop
or
ret
jecxz
ljmp
ret
orl
jbe
cmp
mov
or
xchg
sbb
pop
in
push
inc
test
mov
push
in
adc
add
mov
and
popl
xor
cwtl
test
pop
cmpsl
and
sub
int3
loopne
into
sarb
enter
adc
jae
pop
or
lret
cmpsb
xor
aaa
pop
imul
sbb
xchg
push
push
movl
xlat
inc
jl
popa
mov
enter
sbb
je
mov
imul
sbb
push
cmp
xchg
mov
inc
jnp
jge
idivb
outsb
sarb
cwtl
orb
movsb
insl
jbe
xchg
mov
inc
iret
and
lret
stos
push
stc
cs
mov
inc
mov
or
test
fucomp
sbb
aas
push
pop
cmc
outsb
xchg
incl
dec
mov
add
dec
scas
dec
scas
pop
jmp
xchg
out
mov
cmp
lret
ret
cmp
dec
dec
xchg
div
hlt
adc
sub
pushf
sar
sti
enter
push
aam
jmp
fcmovbe
pop
cmpsl
sbb
dec
cmpsb
sbb
push
rorb
movsl
shr
enter
movl
mov
or
sub
or
jmp
adc
int3
jmp
jecxz
jb
popa
xchg
and
push
in
and
aad
bound
inc
xchg
push
push
gs
arpl
insb
push
inc
xlat
insl
push
shll
loopne
in
push
pop
aam
aaa
popf
add
cmp
mov
aam
cld
pop
xor
mov
cmp
xor
jp
mov
andl
sbb
dec
ret
clc
sbb
pop
sub
adc
stc
andl
push
loope
out
loopne
arpl
mov
cmp
sub
sub
jp
adc
aaa
jmp
out
aad
cmp
xor
jp
into
pop
add
dec
lcall
ds
ljmp
repnz
dec
ljmp
cmc
popf
mov
mov
fwait
icebp
aam
fsub
out
in
ds
jnp
js
adc
push
out
mov
imul
xlat
mov
cli
pop
sub
aad
add
movsl
mov
and
decw
outsb
push
out
ror
push
inc
dec
fadd
jmp
push
sbb
inc
stc
mov
jbe
icebp
sbb
inc
in
add
cmpl
popa
pop
xchg
push
shl
shrl
lret
jp
pop
test
das
or
or
outsl
pop
popa
test
cmpsb
cmpsl
setg
sbb
scas
lods
push
lahf
inc
add
clc
push
xlat
nop
jae
adc
lds
mov
sub
jns
mov
rorl
xchg
inc
ljmp
test
mov
pop
stgi
jo
stos
outsb
jbe
mov
dec
scas
xchg
pop
xor
push
jg
js
mov
enter
mov
or
pusha
test
mov
pop
loope
pop
subb
jp
adc
fcoms
and
adc
sti
sahf
aaa
sub
sbb
jae
ds
pop
mov
scas
add
adc
push
jmp
xchg
mov
inc
ss
xor
mov
cmpsl
push
adc
xchg
xor
pop
cmpsb
gs
in
xchg
sbb
inc
stos
sub
dec
leave
outsb
and
dec
dec
popf
ret
pop
les
pop
ljmp
fsubrl
loope
scas
inc
shlb
insl
addr16
cmc
pusha
sbb
add
out
mov
inc
fcomi
cmp
push
jo
adc
jp
lea
inc
sub
fs
sar
jecxz
test
sub
xor
int3
xchg
mov
adc
xor
scas
adc
and
push
push
cmpsb
cmpsl
in
int3
push
mov
mov
push
push
cmp
stos
fstl
xor
sbb
imul
mov
xor
push
dec
mov
sbb
mov
dec
mov
mov
fwait
cmc
adc
dec
push
mov
mov
mov
push
or
cmc
and
add
insb
je
jecxz
in
pop
push
dec
cli
or
and
cmpxchg
or
clc
decb
int
jbe
lret
gs
pop
and
push
enter
std
lds
jecxz
cmp
sub
mov
fdivl
push
dec
dec
push
inc
jg
fidivs
mov
out
mov
ljmp
loop
or
add
pushf
mov
js
hlt
fcomps
insl
adc
sbb
ror
xchg
stc
jmp
sub
xchg
or
stos
movsl
xor
push
dec
inc
xor
push
in
aaa
add
xchg
ljmp
inc
outsb
ja
add
loope
jnp
mov
pop
cwtl
out
adc
or
scas
daa
stc
xor
test
fmull
cld
clc
add
jns
cmpsb
cli
cmpsl
mov
idivl
or
jo
lods
jmp
pop
xor
data16
inc
adc
jo
shr
xor
and
push
cltd
jne
xor
jo
int3
xlat
push
out
ds
rolb
test
push
inc
sahf
push
mov
xorl
jecxz
push
lahf
jo
popf
push
mov
add
fs
inc
mov
jp
gs
out
lods
adc
test
jae
aaa
cli
add
mov
inc
mov
mov
iret
in
xlat
mov
ficomps
jnp
push
jb
pop
pop
popf
aaa
mov
sub
insl
ja
in
fwait
imul
push
push
push
push
push
cmp
cs
inc
pushf
vpavgw
add
out
mov
push
data16
es
test
imul
in
xor
pop
cwtl
cmpsb
push
cmpsb
mov
push
jne
ret
pop
pusha
sbb
lcall
and
sub
pop
sbb
pusha
adc
repnz
aad
in
xor
inc
adc
push
sbb
fsubs
dec
lret
push
push
sbb
std
mov
push
out
sti
jmp
and
es
jae
test
into
xor
loopne
aas
in
dec
pop
in
test
cltd
sub
jg
or
push
add
aad
jg
out
and
jo
dec
mov
xchg
mov
xchg
bound
sub
pushf
fisubl
push
data16
jp
jl
ficoml
push
adc
dec
xchg
adc
cmp
sub
fistpl
jnp
stos
jg
sbb
fwait
cmpl
push
sarb
repz
push
xchg
xchg
mov
xchg
lods
out
xchg
jmp
lahf
cwtl
jo
fnsave
shlb
scas
xchg
xchg
mov
mov
push
mov
dec
jno
mov
stos
mov
mov
sub
push
sarl
xlat
repnz
cmpsb
sbb
push
jge
cmp
or
add
add
fstps
pop
xchg
imul
rcr
jecxz
cmp
lcall
insb
mov
inc
or
int
orl
data16
xlat
lahf
sbb
fstl
cmp
fiaddl
mov
scas
jne
hlt
or
clc
push
push
cmp
mov
call
hlt
bound
or
sub
adc
pop
jle
sbbb
push
sub
or
out
in
outsl
lds
dec
shlb
orb
es
xor
dec
adc
jecxz
cmp
xchg
xchg
push
es
xor
lret
jno
out
cmp
movhps
xor
pop
sub
andb
enter
scas
test
adc
xor
dec
iret
cmp
jbe
call
shlb
push
in
imul
pop
xor
push
pop
jl
or
dec
adcb
add
aaa
jno
jno
sub
mov
fsub
fsubs
repnz
mov
orb
pusha
daa
mov
or
fs
cld
iret
aaa
sti
lret
test
jp
out
in
js
mov
pop
and
mov
mov
subl
mov
mov
jp
sub
xlat
scas
pop
jns
sti
push
xor
test
lock
lret
dec
push
jmp
xchg
out
lcall
pop
das
sbb
sahf
jo
scas
mov
xor
loopne
mov
cwtl
fisubl
dec
add
fcomps
push
cmp
lcall
mov
sbb
mov
out
sbb
xchg
jg
pop
sbb
shl
and
cli
lcall
addr16
lret
mov
adc
inc
sub
xchg
stos
jb
test
fs
xchg
jne
xor
jmp
and
mov
and
xchg
jnp
test
push
push
xor
ret
mov
rol
push
leave
jge
pop
test
movsl
lock
ret
lods
pop
std
xor
scas
inc
and
sub
and
repz
and
lcall
and
cltd
addr16
xlat
dec
stos
and
rorl
mov
in
cli
xor
cwtl
insl
test
sub
xchg
iret
js
jmp
add
leave
cmc
lcall
and
divl
xchg
push
loope
pop
pop
fwait
cwtl
inc
test
jg
ffreep
mov
int
cmp
in
js
andl
cmp
mov
cwtl
aad
xchg
sbb
pop
sbb
les
sarb
mov
cmpsb
mov
ret
enter
sub
dec
ljmp
sub
sti
lods
push
popf
fistpl
test
fildll
dec
ss
das
dec
and
cmp
mov
int3
fisttps
filds
jo
cmp
xor
movsb
cmp
mov
push
pop
fsubl
imul
rorb
inc
adc
add
inc
inc
sbb
inc
int
mov
mov
jmp
dec
fld
pop
scas
xchg
mov
and
xchg
mov
loope
add
inc
mov
sarb
sahf
mov
call
adc
add
jno
divb
pop
xchg
add
mov
bound
mov
push
adc
fcomps
mov
sbb
xor
nop
lods
jnp
inc
rcrl
sbb
rolb
push
loop
mov
inc
sti
and
jecxz
int3
popf
add
pusha
or
mov
mov
jb
stos
jp
fwait
lock
addr16
mov
cwtl
test
adc
mov
inc
inc
mov
jo
lret
outsb
daa
xchg
push
xchg
jns
pushf
mov
push
and
inc
sub
cmp
sbb
push
add
repz
push
hlt
mov
pushf
cmp
pop
test
jge
scas
cmp
inc
aaa
mov
lea
inc
iret
int3
stc
call
int3
cmp
sub
pop
rorl
cmp
adc
pusha
fs
test
pushf
inc
loope
jne
mov
cmp
and
fcoml
movsl
pop
mov
and
rorb
mov
divl
jo
sbb
adc
fisttpll
lret
out
push
mov
and
pop
sub
lcall
ja
into
push
push
outsl
mov
daa
cltd
lds
cwtl
xchg
sti
adc
xchg
fidivrs
xchg
ret
xor
jecxz
inc
pop
out
movsl
scas
rclb
lcall
movsb
adc
into
push
out
sbb
push
sbb
jb
jmp
nop
stos
bound
shr
test
sahf
xchg
out
aam
inc
jns
es
pusha
sbb
sbb
in
cs
pusha
ret
dec
sub
adc
jno
cwtl
xchg
pop
je
cmp
xor
pushf
push
mov
dec
dec
repz
lods
mov
loopne
jno
xchg
jae
pop
sub
movsl
jmp
mov
mov
mov
xchg
jecxz
stos
inc
jno
sbb
leave
loop
mov
mov
int3
sbb
loop
jmp
mov
push
mov
enter
fdivrl
mov
dec
es
add
leave
pop
or
je
aas
xchg
add
int
lock
xor
imul
dec
dec
sbb
movsl
shr
ret
pushf
or
pop
lret
int3
test
dec
jbe
imul
dec
or
aam
mov
mov
int3
mov
mov
addr16
push
cmc
and
insb
leave
outsb
mov
pop
shr
jge
mov
push
cmpsb
test
dec
cli
in
and
adc
xchg
arpl
fbstp
test
std
jg
lahf
jae
in
sub
push
cwtl
mov
xor
cli
jp
pop
mov
jp
sub
popa
xchg
jmp
inc
shl
inc
inc
pop
push
adc
lds
mov
andl
adc
and
dec
mov
dec
cmp
or
sub
sub
mov
xchg
lret
out
sbb
mov
pop
mov
pop
xchg
ds
adc
or
xor
loopne
mov
push
loopne
and
sub
leave
iret
es
push
dec
insl
sbb
rclb
add
add
cmc
andb
cs
sub
dec
mov
jg
jge
push
adc
pop
dec
push
push
mov
and
pop
push
pop
sti
mov
add
dec
das
or
sub
mov
in
ljmp
pop
add
out
pop
jne
aas
scas
or
les
outsl
add
popf
inc
cltd
pop
cmpl
xchg
or
ljmp
xchg
data16
mov
ret
xlat
imul
int3
xor
aas
out
lahf
call
xor
cltd
jmp
xor
ss
std
in
jb
adc
jae
and
jno
ljmp
xor
stos
lock
adc
cs
adc
cmp
xor
xchg
cmp
fimuls
int3
adc
aam
outsl
in
ret
aam
push
push
fs
xchg
icebp
sbb
xor
cmc
sbbb
out
push
rcl
lcall
xor
mulb
mov
add
xor
cmp
xlat
dec
jne
pop
iret
mov
cmp
lret
out
shll
jo
push
add
movsb
aad
outsb
sub
std
daa
in
negl
out
lret
push
hlt
mov
outsb
push
dec
mov
cltd
xchg
int
fsts
enter
adc
sub
call
sti
pop
movb
pusha
jb
mov
xchg
adc
pop
fstps
out
or
push
push
push
inc
out
pushl
mov
sub
loop
loope
xchg
add
xlat
pop
mov
mov
adc
dec
sar
sub
inc
xor
xchg
inc
adc
mov
repz
add
mov
insl
test
mov
and
pop
daa
push
mov
mov
cli
and
gs
movsb
dec
out
fisubrs
pop
adc
push
dec
mov
xchg
push
xchg
je
es
mov
mov
jmp
push
mov
inc
cmpsb
push
push
or
dec
mov
pop
inc
fcoml
pop
push
std
stc
frstor
fcmovnb
or
repnz
ljmp
mov
out
call
lret
pushf
xchg
sbb
mov
jne
add
lret
je
cmp
addr16
mov
pop
stc
jge
inc
push
test
repnz
lahf
das
push
mov
cli
dec
cmp
add
out
ljmp
cmpl
imul
add
push
dec
or
sbb
les
ljmp
mov
mov
sarl
imulb
movsb
aad
sbb
mov
jb
inc
mov
call
daa
jo
ja
mov
hlt
sbb
int
pop
and
fcoml
lret
movsl
mov
jmp
mov
stos
movsl
cli
hlt
das
and
ljmp
das
mov
mov
or
fcmovb
inc
pop
ja
add
pop
mov
movsb
out
out
sbb
pusha
and
xchg
imul
push
fistpl
call
jmp
add
imul
inc
gs
insl
in
inc
int3
imul
lock
repnz
loop
cmp
jl
das
mov
fwait
enter
dec
mov
jge
es
lea
add
gs
imul
sti
xchg
xchg
cmp
call
push
out
cmp
lret
daa
xchg
jb
dec
ret
push
push
leave
dec
push
inc
cs
mov
mov
bound
mov
movsl
push
mov
fcompl
mov
push
sbb
rolb
lret
mov
cmpsl
push
paddb
add
int
outsb
sbb
adc
mov
in
sbb
xchg
mov
gs
loop,pt
in
mov
dec
iret
pop
dec
aas
add
rcll
out
andb
pop
ret
push
xor
dec
pusha
pop
mov
push
scas
pusha
add
cwtl
sub
out
shlb
sub
sub
aad
insl
push
js
add
outsb
adc
mov
jle
sub
cli
sbb
subl
dec
dec
jle
fdivrl
jbe
xchg
cmp
push
notl
cmp
orl
cmpsb
scas
or
jge
arpl
jns
inc
adc
fdivl
out
in
dec
xor
dec
dec
movsl
cli
xor
cvtps2pd
sbb
xchg
xor
loopne
or
in
add
mov
dec
or
push
mov
sub
mov
mov
mov
push
cmp
lock
sbb
aam
mov
je
jb
jns
fisttpll
mov
add
xchg
cmpsl
and
bound
jl
dec
jbe
ljmp
popf
xchg
push
mov
pop
outsl
lock
lret
jmp
fwait
and
enter
jne
sub
and
and
mov
dec
xchg
jae
jg
add
ljmp
test
xor
push
lcall
and
lock
test
call
add
mov
cmp
aam
ss
jmp
cmpl
sub
pop
jbe
in
pushf
or
push
in
push
and
arpl
push
popf
jo
lods
test
ds
jp
arpl
jbe
mov
mov
popa
pop
inc
scas
adc
dec
mov
jmp
xor
and
leave
inc
mov
cwtl
gs
mov
inc
sub
enter
jg
mov
fcomps
pop
das
dec
ret
loope
pop
repnz
mov
or
jae
adc
nop
xchg
cs
test
adc
cmp
adc
sbb
stos
xlat
mov
test
popa
mov
imul
pop
aas
sbbb
jmp
cli
dec
mov
pop
pop
fsubl
je
test
push
push
aad
les
sub
push
mov
sbb
sbb
jns
sarl
sbb
notb
xor
in
lahf
jno
mov
out
sbb
and
pop
pop
popf
lea
cmc
add
jl
std
call
and
outsb
in
out
mov
or
or
add
incl
bound
data16
aas
inc
cmc
out
cmp
out
imul
int3
xchg
inc
jno
out
xchg
scas
aad
push
pop
cmpsb
adc
cmp
dec
sbb
xor
mov
dec
jbe
xchg
pop
push
mov
das
push
xor
insl
inc
inc
push
cmpsl
aas
mov
xchg
call
adcl
dec
loop
les
test
or
sbb
scas
outsl
xor
pop
adc
xlat
dec
ljmp
inc
push
cwtl
xchg
xlat
and
xor
xchg
leave
rolb
xchg
iret
popf
xchg
or
sbb
mov
jg
and
cmp
sarl
into
lods
add
jmp
sti
std
mov
bnd
das
add
dec
inc
xchg
fs
and
cmc
xor
lret
mov
jmp
and
sti
jns
stos
frstor
in
lock
add
fs
cmp
add
or
jl
pop
sub
gs
jecxz
into
clc
sbb
mov
call
fstps
pop
adc
xor
jns
test
fs
stc
call
jnp
lret
out
in
into
iret
das
mov
push
movsb
push
stc
dec
in
pop
xchg
push
pusha
jo
dec
cwtl
or
dec
fistpl
sbb
jbe
es
cld
inc
mov
fcompl
xor
adc
adc
lret
arpl
pop
xor
pop
mov
aam
divb
aas
jae
sarl
lahf
add
pop
push
js
insb
or
mov
jne
mov
add
movsb
aas
pop
out
jbe
push
or
sbb
dec
adc
jg
sub
sbb
das
jp
jae
fidivrs
ret
or
pop
aam
or
mov
mov
dec
pop
cmpsb
nop
jmp
out
mov
rorl
jecxz
sub
adc
sub
iret
push
mov
jmp
xchg
cmc
hlt
pushaw
movsl
in
out
ljmp
jg
movsb
jnp
mov
mov
and
xorl
lock
repz
pop
repz
ljmp
hlt
ss
lock
fisttps
cmp
jbe
test
stc
jge
jb
pop
or
lret
cmpsb
mov
dec
into
rcrl
add
adc
test
popa
data16
cmpl
mov
mov
mov
jge
inc
ret
fsubl
pop
sub
stos
sbb
aam
shlb
push
data16
stc
out
xlat
loopne
add
dec
mov
in
or
enter
xlat
test
mov
dec
out
sarl
cltd
outsb
cmp
sbb
testl
nop
clc
cmp
pop
mov
dec
pop
adc
pop
push
mov
fsubrs
pop
xchg
cmc
and
and
cli
vpaddsw
inc
mov
outsl
icebp
dec
xchg
in
pop
push
dec
scas
mov
or
adc
jge
cmp
jne
rcrl
sbbl
dec
imul
or
jmp
mov
mov
inc
movsb
dec
sub
popf
xchg
fnstsw
adc
movsb
pop
mov
fiaddl
lods
jmp
out
loopne
mov
stc
adc
inc
das
lret
cmp
push
pop
loop
nop
es
test
adc
push
adc
lcall
into
mov
xchg
or
jecxz
cli
push
loop
fldenv
push
inc
fwait
xchg
mov
inc
xchg
fnstsw
sarb
push
mov
pop
cmp
mov
movsb
push
sub
dec
fiaddl
cwtl
add
shll
jnp
cmp
cs
or
orl
aas
aad
das
cld
outsb
cmp
lcall
adc
fcoml
xchg
sub
inc
loop
sti
pop
lea
insb
xor
cmp
push
sbb
fmull
gs
loope
mov
mov
aas
int
lods
es
xor
lock
push
in
mov
add
popf
add
stos
push
or
mov
mov
cmp
and
xchg
loopne
mov
sub
stos
cli
in
imul
les
imul
mov
inc
imul
cmp
inc
xor
pop
or
das
jl
rolb
xor
cld
clc
xor
ds
fdivl
add
les
adc
sub
add
int
loope
jp
out
xchg
pop
inc
mov
pop
or
xor
or
xor
in
adc
push
in
mov
fistps
mov
pop
adc
inc
in
test
xor
jmp
clc
pop
repz
xchg
cmc
sub
into
xchg
xlat
scas
lock
stos
daa
cmp
sub
std
adc
jl
stos
pop
adc
inc
cmp
std
nop
inc
xor
xchg
jbe
push
fimuls
or
pop
add
inc
out
adc
jns
mov
scas
insb
cmp
dec
push
and
push
and
ds
lcall
repnz
jo
dec
aam
mov
bswap
xchg
imul
insl
jb
stos
cltd
dec
mov
pop
mov
mov
ds
push
or
mov
xor
sub
subb
add
js
testb
outsl
outsl
jge
fimuls
dec
lods
sbb
sbb
shlb
adc
call
ljmp
xchg
sub
push
or
mov
outsl
lock
mov
mov
push
fstl
imul
mov
add
push
dec
incl
and
fdivrl
bound
jecxz
not
mov
and
adc
repz
enter
xchg
push
les
sub
inc
cmp
lahf
push
mov
adc
dec
std
push
pop
icebp
adc
xchg
test
pop
and
inc
daa
mov
add
dec
xor
pop
jle
ret
hlt
jle
lods
and
sub
outsb
xor
lods
dec
mov
inc
pop
cwtl
push
addl
sub
dec
or
mov
ffree
icebp
fsubs
repz
movsb
push
cmp
iret
pop
in
pop
sub
adc
insl
test
out
arpl
pop
je
icebp
sub
cld
push
lods
pop
xchg
ljmp
fistpll
jnp
outsl
call
ds
sbb
push
cmp
xchg
jno
xlat
fldcw
add
fstps
push
imul
scas
loope
inc
and
subb
mov
push
or
inc
sbb
xchg
sub
cmp
stos
sbb
inc
stos
inc
int
jo
push
rorb
jp
aad
fstpt
dec
mov
xlat
test
push
add
rcrl
lods
sub
out
test
in
out
cmp
xchg
out
mov
adc
loope
xchg
fnstcw
push
aad
adc
add
sahf
stos
adc
shrb
repz
jmp
fdivl
mov
addr16
or
and
mov
xor
add
inc
idiv
and
stc
jmp
pushf
xchg
push
loope
lds
mov
pop
je
mov
mov
mov
jo
or
xor
stos
push
bound
jmp
pop
iret
sub
out
xlat
cli
xchg
jge
ret
repnz
add
in
adc
cmpsl
push
inc
pop
adc
mov
hlt
xor
cmp
jb
movsb
rcrl
addr16
pop
xor
xor
sti
scas
cld
jnp
addr16
leave
jg
sub
jne
jl
mov
pop
rdmsr
outsb
enter
xor
cmpsb
roll
fs
inc
jle
xor
lds
jb
dec
cmp
dec
mov
popf
mov
jge
inc
out
xchg
call
leave
xor
repz
sbb
pop
inc
push
sbb
add
lock
add
sbb
daa
push
inc
cli
loopne
sbb
mov
lea
push
jno
cli
fcomp
add
mov
pop
dec
scas
xchg
dec
mov
int3
mov
fstps
mov
jl
scas
sar
and
lcall
sub
cmpsb
lock
addr16
xor
jne
adc
neg
out
xchg
jp
jmp
mov
push
repz
push
ja
sbb
adc
rorb
sbb
adc
cmc
imul
stos
jnp
xchg
ljmp
pop
cs
pusha
fiadds
ss
xchg
test
and
les
mov
or
inc
mov
mov
subl
pop
iret
orl
test
pop
and
jo
aaa
stos
xlat
jg
jae
lock
and
cmpsb
test
xor
jns
mov
mov
loope
sbb
inc
mov
mov
fistl
push
or
push
xchg
xor
dec
inc
ret
leavew
pop
lret
and
jb
into
mov
dec
out
imul
mov
lods
lcall
cmpsb
lods
loope
cmp
xchg
adc
push
mov
mov
rorl
mov
mov
inc
ljmp
stos
pusha
xor
mov
sub
or
pop
add
add
stos
mov
adc
enter
mov
clc
repz
inc
or
imull
inc
leave
jne
cltd
fisttps
inc
mov
subb
mov
into
jae
sbb
loopne
shll
test
enter
adc
insl
mov
or
adc
test
cmc
aad
add
sti
dec
sbb
addl
jae
sub
cli
mov
es
jge
shrl
xchg
or
cmp
fs
pushf
hlt
daa
push
push
fstpt
push
imul
das
dec
push
dec
ja
int3
pop
xor
mov
insb
dec
lahf
push
mov
nop
jmp
and
push
xchg
mov
pop
addb
fcoml
imul
icebp
push
adc
fisubrl
test
in
sbb
cwtl
mov
out
test
and
lret
mov
fistpl
pmullw
sahf
ss
mov
stos
nop
jge
mov
jge
jae
cmp
cmpsb
stc
out
mov
pusha
jnp
aaa
test
gs
addr16
push
sub
sub
iret
aaa
pop
cmp
cmp
xchg
ss
imul
cli
int3
andb
dec
xchg
lahf
and
sub
scas
cmovge
ja
cli
lods
jg
and
jecxz
jns
in
rorl
pop
and
add
push
adc
addr16
arpl
jbe
movsl
sub
adc
lds
rorl
fisubrs
mov
mov
in
cmpl
clc
push
es
sti
bound
fnsave
push
lret
insl
jecxz
jmp
sub
or
loop
in
lds
pop
sbb
outsb
mov
xchg
decb
cmc
mov
mov
jle
int3
mov
sahf
popa
add
xchg
mov
fwait
aam
mov
hlt
subl
mov
mov
pop
inc
pop
jnp
into
and
das
repz
test
mov
sub
push
shr
leave
jae
or
add
les
dec
mov
scas
mov
shll
pop
and
dec
cld
add
xchg
xor
inc
xor
inc
sub
das
mov
fstpl
dec
sub
in
in
sbb
inc
psubq
sbb
loop
mov
mov
sbb
xlat
inc
fistl
in
push
mov
dec
cmc
lea
sbb
dec
add
or
and
jp
mov
out
lods
adc
scas
idiv
add
aas
sub
mov
out
mov
pop
jnp
jne
push
ret
push
and
rcrl
fwait
and
cmp
push
inc
mov
push
loopne
push
mov
inc
std
jbe
sbb
cltd
inc
cmp
mov
adc
jl
aaa
shll
mov
and
ficoml
or
outsl
sti
adc
aaa
shlb
lahf
fs
sub
pop
cmp
inc
es
out
sub
out
fs
loopne
in
mov
add
daa
fdivl
loop
filds
movsl
imul
fcompl
les
ljmp
xchg
mov
fcomp
cs
mov
xchg
aaa
pop
les
ret
aas
sbbl
jnp
bswap
mov
mov
clc
push
mov
and
enter
xchg
aas
mov
mov
sub
in
xor
shlb
push
xorps
rcll
sbb
cmp
xor
xchg
xlat
bound
mov
sti
addr16
push
add
sub
mov
mov
cs
loope
std
insb
lret
dec
sti
mov
outsl
in
xor
mov
mov
jle
pop
pop
test
adc
pop
or
leave
sub
sbb
jmp
xor
cltd
mov
lods
jae
or
iret
addr16
ret
cmp
xchg
dec
fdivl
arpl
test
mov
scas
fiaddl
pop
jo
and
movsb
enter
mov
aaa
fdivrl
and
or
lea
dec
cmp
sbb
sbb
xor
pop
dec
std
adc
or
sub
pop
cmp
jge
out
aad
fmuls
jbe
ljmp
ret
push
mov
popf
es
imull
jns
mov
add
shrl
add
mov
inc
mov
dec
cmp
repz
and
ljmp
js
in
lea
pusha
sub
pushf
dec
jae
call
jo
cmp
shl
inc
ljmp
sub
mov
aad
cmp
lods
out
mov
lods
out
dec
repnz
mov
out
enter
les
inc
shrb
fcoms
inc
insb
jae
arpl
test
lahf
inc
mov
pop
adc
push
and
pop
in
or
mov
leave
pop
jle
cmc
mov
add
subl
push
pop
dec
adc
mov
in
leave
repz
cmpl
faddl
push
icebp
mov
dec
fsubrl
push
push
nop
arpl
dec
into
pop
mov
mov
jbe
jmp
or
dec
nop
pop
mov
jns
sub
sub
sbb
or
imul
push
sub
mov
lahf
addr16
in
dec
jp
xorl
mov
cwtl
sub
call
popf
mov
push
in
mov
cwtl
mov
movsb
mov
test
inc
push
test
fistps
jp
inc
adc
pop
xor
mov
mov
cmp
lods
xchg
in
lret
arpl
add
int
data16
mull
mov
mov
or
mov
mov
loope
adc
fnstsw
sub
lret
pop
pop
sahf
adc
mov
insb
popa
lret
divl
inc
xor
jge
xchg
add
pop
shlb
jge
xchg
sub
jmp
out
shrb
sbbl
stc
cs
sti
push
inc
jbe
mov
cs
aas
ret
mov
ljmp
int3
bound
mov
out
jg
dec
push
and
rcrl
inc
fcompl
test
add
rcrl
mov
jge
inc
cmc
xchg
insl
mov
aas
ja
rcll
mov
dec
push
mov
rcrl
lods
inc
sub
cmpsl
out
xchg
and
aad
jne
xor
inc
sub
and
push
in
lcall
mov
sub
in
dec
jnp
jle
xchg
push
xchg
ja
mov
xchg
sub
jl
cmpl
xor
cmc
jns
jno
in
loopne
popa
icebp
cwtl
out
mov
and
adc
pop
iret
lahf
aas
adcl
mov
xchg
cmp
jae
int
push
in
jo
add
sub
lret
imul
jae
jp
cmp
jne
ret
xor
shlb
xor
push
mov
stos
lods
cmp
sysexit
add
pop
dec
and
cltd
lods
repz
ljmp
outsl
loopne
test
push
pushf
jge
jge
in
mov
add
jge
pop
enter
paddw
pop
push
cs
repnz
loop
in
pop
insl
and
adc
add
push
aas
pushf
cs
add
dec
mov
jge
fwait
pop
sub
xchg
mov
jae
scas
mov
insb
mov
stos
jg
sbb
ret
pushf
ja
es
cmp
in
loop
fisttps
push
mov
shll
adc
orl
aas
ret
insl
dec
test
xor
enter
dec
sub
sbb
jno
stos
sub
pop
mov
lods
ficoms
add
adc
and
add
dec
lahf
lcall
sub
fcoml
jle
cltd
pop
jne
push
fsubrp
xor
cmpsb
fsubrs
mov
andb
xor
sbb
mov
je
outsl
leave
aad
xor
aas
js
arpl
imul
dec
sbb
add
out
insb
int3
pop
in
fmull
lcall
lcall
jae
inc
pop
jecxz
xor
xor
jbe
mov
in
and
shlb
cltd
sbb
jo
movsb
add
mov
pop
dec
xchg
rcrb
sti
aas
data16
shlb
push
or
cs
aad
cmpsb
adc
addr16
out
adcl
pop
jp
cmc
mov
in
or
jbe
stos
cld
imul
xchg
ret
inc
xor
sub
sub
jmp
filds
mov
lds
xor
test
pop
outsl
sbb
push
xchg
push
push
call
xchg
insb
jo
jl
enter
inc
dec
sbb
outsl
jb
add
mov
ss
idivl
inc
sub
adc
mov
push
test
lock
cs
clc
call
sub
test
fucom
mov
adc
cmpsb
adc
inc
lods
xchg
repnz
mov
mov
lcall
lea
mov
fdivs
push
xchg
ror
imul
push
cmc
cs
or
fmuls
out
repnz
pop
or
ja
mov
pop
mov
cmp
push
lds
xor
pop
out
scas
cmp
xor
arpl
mov
test
xchg
sarl
nop
jl
jns
sub
cmp
jle
xor
xor
sbb
cmp
stos
sbb
rorb
int
pop
je
psubusb
out
lods
jge
jg
bnd
ss
add
into
cmp
arpl
xor
pop
je
mov
fnsave
sub
and
lods
push
push
sub
test
xor
and
out
pop
fistps
mov
popa
repnz
sub
push
adc
pusha
and
or
test
loop
stc
push
ret
in
movl
loop
xor
movsl
lret
pmaxub
outsl
mov
scas
push
out
pop
bound
xchg
or
jae
call
lret
test
in
cmp
je
ljmp
push
jecxz
mov
add
repnz
stc
xor
cs
clc
scas
incl
lods
and
push
jo
inc
xor
enter
inc
add
inc
cmp
adc
adc
jnp
aam
rorl
loop
xor
ret
xchg
adc
les
pop
push
test
pop
jne
push
sub
jl
dec
push
add
lret
lcall
xor
roll
cmp
cld
mov
dec
sub
jecxz
outsb
ss
cmp
rorl
cs
cwtl
arpl
sbb
enter
mov
gs
inc
sub
lcall
mov
mov
mov
int3
push
scas
fnstenv
rcrl
fiadds
lahf
xchg
or
dec
mov
div
pushf
sub
xor
insb
stos
cs
pop
daa
fidivl
std
sbb
xor
adc
out
daa
xlat
xor
inc
je
or
mov
frstor
mov
xchg
fadds
cli
scas
pusha
mov
lret
sub
mov
dec
push
test
pop
ds
or
movsl
imul
xchg
hlt
xorb
aam
jo
pop
xchg
les
pop
inc
enter
and
dec
mov
mov
out
ret
adc
int
xchg
out
arpl
lcall
jae
and
ret
xor
adc
pop
push
in
jae
jbe
push
mov
push
or
leave
rcl
call
inc
or
add
scas
daa
fs
fs
clc
pop
mov
pusha
jl
sub
dec
repz
jge
sbb
rcll
lret
sbb
movsl
add
repz
in
inc
mov
mov
push
arpl
sar
push
int
sub
sub
add
push
or
outsb
mov
xor
or
jmp
insl
xor
in
cli
mov
fsubl
cmp
loope
cmp
sbbl
inc
and
test
das
mov
pushf
ficoms
pop
out
add
adc
into
lods
pop
out
mov
repnz
inc
dec
inc
repnz
movsb
push
xor
mov
rcrl
xor
sub
lea
and
dec
imul
out
addr16
jge
cmp
push
test
mov
mov
sbb
pop
test
repnz
movsl
xchg
pop
jl
pop
pop
push
fimull
mov
imul
loope
mov
push
in
and
xchg
rcrb
adc
loopne
loop
cld
in
mov
or
dec
enter
std
and
inc
mov
call
cmp
cld
pop
loopne
insl
in
scas
and
data16
dec
addr16
mov
test
insb
add
addr16
fadds
add
lock
call
dec
fwait
hlt
jbe
ja
ret
in
mov
or
rorl
inc
inc
sub
xchg
imul
xchg
cmpsb
add
iret
dec
inc
lret
into
rcrb
popf
inc
mov
pop
mov
mov
xor
psubw
ror
jno
dec
test
dec
andb
add
insb
add
dec
sti
push
sbb
aam
jb
inc
xchg
inc
cltd
movsl
scas
lret
inc
mov
inc
mov
lds
nop
adc
call
xor
mov
xchg
lock
jl
inc
in
push
pop
dec
mov
scas
sbb
inc
xor
adc
mov
cli
js
mov
or
dec
lds
jbe
or
and
ficomps
outsb
xlat
xchg
inc
sub
mov
sbb
divb
xlat
push
jmp
inc
les
and
add
xlat
mov
ss
adc
rcrl
fldenv
xchg
mov
jge
xchg
aam
jp
imul
jg
loope
mov
daa
orb
lret
popf
mov
inc
inc
bound
pusha
in
or
fisubrl
icebp
dec
ds
adc
and
mov
jbe
popf
orb
and
push
sub
jge
mov
pusha
mov
xor
mov
pop
daa
jmp
xchg
xchg
mov
push
pop
xchg
stos
xchg
pop
fdiv
xchg
lret
adc
rorb
roll
xor
sahf
sub
ljmp
mov
mov
pop
sbb
mov
push
ss
xchg
sbb
mov
inc
push
pop
cli
cmp
sub
movl
ja
mov
jp
pushf
or
dec
lock
insl
gs
jp
adc
lods
mov
cmp
cmp
mov
xlat
scas
into
repz
aam
add
xor
into
add
dec
push
pop
cmp
push
fistpll
lahf
lret
data16
and
aas
shlb
fldt
pop
out
xchg
push
mov
cmp
or
xchg
cli
faddp
sbb
xor
sbb
mov
lock
ja
sarl
sbb
pop
pop
mov
shlb
jp
and
les
shlb
jmp
mov
imul
outsb
mov
xor
cmpb
ss
lock
call
inc
jnp
jne
bound
test
mov
insb
popa
xlat
jb
push
mov
lret
aad
lret
and
adc
mov
arpl
cmp
scas
xchg
push
lret
add
add
ljmp
jno
fstp
mov
pusha
push
test
adc
jne
leave
in
xor
jmp
or
test
loope
mov
popl
imul
jo
pop
cmp
fcmovb
mov
out
in
mov
sbb
pop
mov
fwait
and
mov
mov
cmp
inc
push
pop
xchg
xor
pop
sub
xchg
dec
das
enter
add
jns
andb
or
cmp
adc
popf
and
lds
mov
iret
add
nop
popa
lock
push
mov
ret
xchg
fmull
jns
jo
out
out
les
int3
pop
fld
rorl
aam
shll
sub
xor
daa
scas
mov
loop
sbb
int3
sbb
pop
cmp
dec
inc
xor
and
and
call
mov
js
rcrb
inc
dec
and
dec
push
mov
sahf
cmpsl
fs
ror
imul
mov
scas
incb
push
push
cmc
dec
mov
mov
dec
inc
fisttps
or
andl
xchg
xchg
aas
repnz
push
fldl
setae
sub
mov
add
rolb
lret
mov
xor
lcall
mov
out
pusha
in
add
in
mov
adc
add
mov
fwait
mov
aaa
into
int3
sbb
or
or
loop
fmull
pop
jae
jmp
cmc
pop
cltd
ljmp
inc
mov
popa
mov
es
lods
enter
jmp
lret
out
jge
push
lods
and
mov
push
xor
shlb
nop
in
pop
cld
sahf
xor
adcb
enter
sbb
andl
xchg
add
pop
add
mov
repnz
push
mov
dec
adcl
sub
xor
sub
rorb
scas
xor
adc
js
sbb
dec
mov
lods
push
pop
iret
icebp
sub
mov
addr16
jnp
adcl
cmp
jl
xchg
or
mov
aam
jle
mov
fcoms
pop
int
mov
xor
dec
xlat
cld
mov
sahf
imul
adc
sub
loopne
outsl
into
adc
push
arpl
dec
pop
les
mov
repnz
je
sbb
lods
in
lock
scas
sbb
cld
push
fs
data16
adc
xchg
outsb
dec
and
add
adc
fldenv
sbb
inc
sbb
xlat
lock
into
mov
and
lret
adc
add
aam
inc
sub
mov
call
shl
mov
in
lahf
push
cmp
add
sbb
jb
xor
xchg
push
xchg
lret
aas
jmp
or
mov
popf
cmp
iret
lea
insl
mov
jl
int
sub
pop
or
xchg
prefetch
dec
dec
andb
jbe
xor
jae
lea
xorl
pop
jp
jno
cmp
and
dec
lock
dec
inc
insl
test
xchg
loop
ja
add
jmp
inc
movsl
rclb
jle
dec
ret
outsl
pop
hlt
cmp
ds
add
filds
rcll
insb
fidivs
mov
or
sbb
cmp
pop
dec
ret
push
push
test
push
int3
sahf
xlat
xor
jne
lcall
lcall
or
test
pop
push
loop
lods
cmp
cli
movl
push
and
push
add
push
and
and
dec
repz
adc
jae
xor
test
mov
dec
mov
mov
jbe
push
sbb
fs
std
sahf
test
icebp
and
ljmp
xchg
and
cwtl
jbe
aad
xchg
out
or
mov
and
mov
mov
xor
adc
rcr
imul
jbe
and
add
xor
inc
add
in
nop
in
outsl
data16
mov
cmp
push
sbb
sbb
ficoml
add
jecxz
cmp
js,pt
pop
pop
mov
and
adc
push
js
aam
xor
ljmp
mov
pop
dec
and
stos
mov
test
pop
loope
push
gs
pop
sbb
xor
push
fld
mov
dec
aaa
xchg
cmp
inc
cltd
aam
out
jg
or
pushf
adc
je
int
and
xorb
sub
out
and
inc
jne
shll
xchg
lds
adc
and
mov
mov
or
cmp
arpl
repz
int3
test
mov
je
cmc
add
mov
cmc
sbb
pop
add
lods
jae
or
aas
shll
dec
push
ret
daa
dec
jno
cmpsl
aaa
mov
data16
mov
jb
pushf
push
jbe
sarb
or
repnz
std
and
sbb
data16
inc
sbb
inc
xchg
xchg
pop
mov
sub
jbe
daa
add
push
mov
jb
lcall
inc
inc
stc
cmpl
dec
sarl
fildll
inc
push
add
call
jo
cmp
insl
cmp
ja
mov
dec
pushf
adc
cmpsb
fdivr
mov
outsb
push
popf
loopne
js
out
adc
outsb
inc
inc
cmp
mov
xchg
out
mov
repnz
inc
mov
lods
outsl
in
jp
or
jo
dec
inc
popa
enter
cmp
jnp
std
inc
or
mov
xlat
push
xchg
mov
mov
out
xor
xchg
mov
cmp
jbe
sbb
movsl
add
push
les
into
xor
xchg
out
icebp
sub
inc
cltd
pop
js
xchg
dec
out
cmp
loopne
cmp
cmp
mov
ret
fucom
adc
sub
je
scas
sbb
jg
je
fsubrs
mov
jns
dec
movsl
jmp
cltd
and
lahf
aad
lret
mull
jb
das
sbbb
sbb
test
add
stos
adc
mov
lods
mov
jo
push
les
cmp
das
sub
cltd
inc
xchg
inc
dec
inc
test
das
jmp
lods
stos
mov
pop
push
and
leave
cltd
xor
test
jecxz
into
xor
cli
int3
leave
lea
imul
pop
test
push
sbb
mov
stos
cmp
jb
std
mov
dec
outsb
sub
push
outsl
add
pop
loopne
fisubs
dec
mov
inc
cmp
mov
fwait
lcall
mov
repnz
and
push
xchg
cmp
jle
enter
data16
mov
in
es
sti
push
push
fwait
mov
pop
push
es
mov
outsl
scas
imul
push
ja
push
call
nop
mov
dec
inc
jnp
fcoml
push
mov
jmp
sub
push
pop
lods
nop
add
push
arpl
pop
jmp
inc
sub
pop
mov
mov
sbb
adcl
clc
jbe
cmpsl
ss
cltd
jo
adcl
pop
dec
sub
xchg
in
cmp
dec
in
mov
sbb
dec
adc
push
out
dec
cs
pop
add
mov
or
mov
jp
jge
imul
xchg
inc
hlt
scas
clc
sub
jne
cmp
movsb
out
arpl
jecxz
push
or
push
mov
aad
out
sub
loop
cwtl
icebp
loop
shlb
pushf
out
call
data16
mov
xchg
xchg
push
cmp
cmp
push
out
fwait
in
xchg
movsb
sub
movsb
cmp
push
arpl
lahf
js
loope
mov
sub
and
shl
mov
repnz
enter
aam
dec
lret
sbb
stos
fwait
outsl
stc
test
mov
xor
je
mov
sub
out
push
xchg
xchg
sbb
mov
sti
cmp
and
xchg
mov
fdivs
in
sub
inc
clc
push
aaa
movsl
fld
cmp
jl,pn
adcl
gs
xor
xchg
scas
lret
mov
mov
sahf
xchg
xchg
xchg
jno
inc
fisubrs
ret
divb
sarl
jo
cmp
xchg
cmpsl
add
ficomps
fsubs
cmp
iret
popa
dec
shlb
repnz
push
jnp
sub
lods
retw
pop
add
push
in
and
xchg
jb
fildl
lret
fs
adc
sub
call
push
in
sub
mov
mov
xchg
dec
cwtl
dec
sub
adc
repnz
aas
lods
decl
jge
adc
in
xlat
jo
out
ds
mov
mov
xchg
cmp
rclb
push
lds
add
outsb
mov
mov
adc
adc
into
add
stc
pop
sub
ds
sbb
pop
xor
daa
inc
adc
imul
adc
sbb
rorb
ljmp
jl
pushf
imul
sbb
sub
push
dec
adc
push
mov
add
fldenv
lcall
cmpb
cltd
out
and
repnz
lret
or
dec
ficoms
sti
stc
cmp
popf
jmp
xchg
jbe
adc
mov
mov
mov
mov
xor
cmp
cmp
pop
fcmovne
rorb
push
test
sub
xor
popf
rcrl
cmc
lret
das
ljmp
insb
es
mov
in
in
das
jg
scas
notb
jp
pop
ds
rolb
sub
or
and
jno
out
mov
addr16
mul
imul
sbbl
or
enter
popf
or
dec
jge
push
scas
cmpsl
cltd
cmc
icebp
insb
movb
outsb
movsl
xchg
loope
xchg
aam
lret
lods
cmpsl
push
adc
xchg
icebp
xor
sub
adc
hlt
mov
inc
outsb
cld
imul
xchg
fs
jecxz
adc
das
push
negl
call
repz
adc
lahf
fsts
jp
mov
mov
fdivrl
adc
out
stc
in
xchg
and
sub
into
mov
out
push
jmp
mov
push
lods
outsl
jnp
stos
iret
dec
push
pop
mov
and
pop
in
add
adc
notl
aad
pusha
pop
mov
or
fwait
adcb
sbb
pop
push
nop
loopne
pop
adc
and
gs
mov
or
mov
call
inc
bound
in
dec
xchg
lret
lods
add
cmp
imul
movsb
insl
in
into
push
shl
popf
push
mov
jne
cld
aaa
inc
stos
stos
mul
leave
mov
jg
mov
dec
inc
sbb
outsl
lods
add
push
sti
ljmp
cmpsl
out
mov
pop
xchg
fmull
jp
cmpsb
sub
cmp
ds
pop
arpl
test
jle
push
stc
dec
add
daa
push
lods
sub
add
jo
cmp
inc
mov
outsb
pop
lock
add
xchg
cmp
shll
daa
shr
aas
mov
mov
xchg
mov
xchg
outsb
das
cmc
pop
push
and
call
shll
aas
inc
test
testb
inc
jo
cmp
movsl
das
ljmp
fidivl
jl
cmp
or
xchg
in
scas
lret
cwtl
popa
aaa
imul
pop
sub
and
pop
repz
in
lcall
xchg
pop
xor
xor
in
aam
dec
mov
inc
scas
adc
loop
sbb
push
jb
xor
iret
push
mov
xor
pop
adc
addb
mov
cmc
push
dec
jg
inc
insb
daa
cmp
pop
cmp
mov
adc
xchg
mov
jae
mov
stc
push
in
xchg
fldl
ds
ss
or
aad
inc
sbb
outsl
push
cmp
fldt
mov
adc
roll
inc
and
ret
push
mov
imul
out
jmp
mov
fcmovbe
push
mov
sub
sub
rcll
rcrb
repz
push
mov
push
or
xchg
fadds
pop
fisubrl
cmp
aad
divl
jb
insl
ror
sbb
push
andl
repnz
mov
repz
sahf
rcll
repz
xlat
test
fwait
push
push
mov
xchg
cmp
dec
out
ret
enter
dec
imul
loopne
dec
dec
sbb
inc
sub
jge
xor
xor
pushf
jmp
push
adc
cmp
shlb
and
mov
and
jl
aaa
mov
mov
scas
dec
pushf
cmp
loop
push
mov
and
lcall
addr16
out
shr
push
daa
in
mulb
shll
addb
and
outsl
xchg
call
jge
cmp
add
incl
jmp
push
xchg
and
popa
cmp
push
inc
sub
ret
sbb
and
cmp
rolb
pop
je
inc
fs
dec
jnp
jg
stos
imul
bound
les
es
shll
movsl
repz
xor
cmp
fimuls
dec
fnstcw
mov
mov
loopne
leave
inc
mov
repnz
push
jnp
cmc
adcl
push
sub
dec
sub
adc
pop
xor
out
lahf
loope
dec
cmpsl
fimuls
push
jb
or
xor
in
les
pop
js
int3
fs
inc
sub
sub
xor
fsts
in
test
cmpsl
sbb
xorb
or
lods
lret
mov
push
xchg
add
mov
cmp
out
mov
lret
fistpll
pushl
mov
adc
insl
imul
or
lcall
stos
mov
repnz
ret
adc
insl
test
lea
sub
loopne
add
mov
jmp
loop
cmp
jno
ljmp
daa
sub
mov
fiaddl
pop
shll
int
mov
pusha
in
repz
add
sbb
dec
iret
lahf
popa
sbb
cli
arpl
repz
adc
adcl
pop
mov
mov
xor
repnz
sub
xor
push
xchg
pusha
mov
lods
scas
ret
icebp
jg
adcl
push
add
ret
mov
cmp
lds
xorb
cmp
inc
idivl
nop
das
inc
adc
repnz
fs
jno
add
jl
xor
imul
sarb
outsl
inc
in
lods
call
cmp
and
adc
mov
nop
clc
fsts
and
std
pop
dec
push
inc
pushf
or
mov
push
mov
mov
repnz
cmc
sbb
dec
xor
emms
or
xchg
fsubrs
mov
das
inc
popa
mov
push
jo
popa
pushf
notl
mov
cmpsb
imul
ljmp
mov
mov
repnz
cmp
int
jno
add
rclb
xchg
jb
push
jp
jle
arpl
fnsave
cli
fisttps
outsb
pop
inc
adc
mov
add
xor
or
mov
mull
clc
sahf
icebp
mov
cld
movsb
loop
adc
mov
in
jb
js
inc
rcl
pusha
repz
mov
negl
push
adc
aas
in
push
nop
shll
xchg
xchg
lock
adc
out
fbstp
jmp
mov
aas
mov
push
xor
enter
fs
xchg
sbb
cmp
fldt
push
push
out
dec
jnp
es
out
movsb
andb
iret
call
outsl
push
out
mov
scas
ds
imul
jno
mov
xchg
outsb
mov
sbb
out
call
subl
sub
xchg
jne
in
mov
dec
in
fisubs
addr16
lcall
cmpsb
push
push
jno
push
and
ds
cmc
mov
dec
push
aam
ficompl
shl
fs
imul
lods
imul
stos
or
out
xchg
in
stc
and
pop
mov
leave
sbb
sbb
add
ror
addr16
cmpsb
add
imul
jp
inc
and
imul
lods
ja
mov
into
mov
insl
jg
sub
jns
push
enter
adc
scas
sbb
dec
fcomip
add
cltd
cmp
and
pop
mov
xor
mov
add
loope
insb
mov
dec
xchg
cmc
add
out
cltd
xchg
scas
in
mov
sarl
xchg
jne
repnz
mov
mov
lret
xchg
lret
pop
fcomps
les
rclb
pop
jne
sbb
movsb
or
mov
dec
dec
repnz
add
sbb
xchg
cmp
cmpsb
cld
mov
fsubrl
cli
jae
enter
mov
inc
or
sti
icebp
pop
sub
popa
gs
sub
push
jmp
sub
repz
mov
xor
mov
jne
xor
test
xor
lods
loopne
mov
adc
or
pop
cmpsl
push
mov
mov
jno
sbb
in
ret
mov
push
enter
jb
push
shufps
xor
push
fistpll
mov
sbb
cmp
subl
mov
cmpsb
clc
xor
cs
xchg
dec
test
dec
and
in
push
fidivl
jo
or
out
jge
mov
add
mov
sub
test
mov
fcmovbe
testl
enter
lcall
sahf
and
repz
es
andb
arpl
xor
daa
jnp
push
inc
mov
lods
jp
push
pop
cwtl
loope
jbe
rorl
push
popa
cmp
out
push
dec
push
pushf
adc
lea
lahf
movsb
mov
sub
scas
jne
dec
lock
aad
and
push
and
cld
test
fisubrl
sub
jne
sub
sub
cmp
sbb
jbe
jle
test
adc
jae
push
cli
or
fwait
or
or
sbb
xchg
push
push
stc
xchg
fcoml
in
push
inc
dec
and
in
mov
xlat
jns
icebp
rorl
add
lahf
add
cmp
inc
fisubs
fiaddl
push
std
aaa
add
sbbl
hlt
cs
mov
sub
dec
ja
sti
pop
pop
mov
dec
dec
jle
ds
jbe
jns
fsubrs
cmp
push
mov
xor
jge
sahf
dec
xchg
inc
arpl
mov
adc
sahf
test
test
xor
jle
push
in
int
jnp
cmp
int
xor
dec
sub
pop
mov
xor
lods
lock
cmpl
cmp
and
mov
xlat
hlt
mov
xchg
sbb
sbb
xor
outsb
loope
jg
sub
ret
cmp
mov
push
js
jb
mov
and
jmp
pop
movsb
clc
mov
pop
mov
hlt
sbb
testl
push
sub
std
cmpsl
imul
lcall
fdivrs
mov
movsb
mov
xor
jecxz
test
popa
testb
xchg
pop
cmp
sub
nop
sub
cmpsl
out
push
cmc
loop
and
imul
fwait
sub
test
jbe
imulb
sub
xor
stos
decb
les
jo
imul
cmp
fs
push
popa
dec
ja
push
mov
aas
mov
add
stos
scas
pop
lea
sbb
mov
add
mov
inc
in
in
popf
mov
or
punpckldq
imul
mov
inc
xchg
push
stc
add
mov
popf
das
mov
les
lahf
lcall
mov
testl
out
fdiv
push
jmp
jne
mov
mov
stos
sbb
insb
addl
in
mov
bound
pop
push
mov
sarl
or
jne
dec
push
dec
sarl
cmc
xorl
sarl
mov
or
dec
sub
jbe
in
lock
cwtl
pop
cltd
sbb
test
add
enter
scas
add
je
jmp
je
dec
out
and
loopne
icebp
mov
cmp
test
ret
std
mov
popa
sbb
in
inc
or
pop
dec
movsl
xor
and
push
dec
push
sub
gs
mov
pop
mov
aam
out
inc
lcall
jnp
stc
pop
cmp
sbb
inc
inc
jmp
addr16
es
xchg
push
or
mov
shlb
push
add
sbb
es
notl
cmp
nop
decb
movsb
dec
mov
stos
pop
std
loope
adc
mov
sbb
std
mov
sbb
inc
std
mov
loop
pop
cli
aad
inc
add
adc
add
scas
adc
mov
dec
pop
mov
adc
lret
and
mov
or
jno
outsb
adc
jae
push
in
fnstcw
sub
scas
mov
es
pop
and
idivl
xchg
fidivl
std
adc
push
ja
cwtl
and
adcb
cmp
xor
mov
scas
clc
mov
fcoml
aad
jge
repnz
jge
sbb
lret
inc
pop
lret
icebp
xor
mov
dec
add
fbstp
test
sbbl
xchg
scas
xor
jo
cmp
fs
insb
aam
cmpsl
movsb
nop
loop
cmp
sub
pushf
jne
lret
cmp
ljmp
push
pop
jg
dec
add
test
jns
fst
dec
fidivl
push
pop
das
mov
fisttpll
mov
lcall
stos
inc
out
lret
mov
sbb
aaa
dec
aad
sub
repnz
or
cmc
xchg
clc
mov
and
imul
in
inc
iret
xor
dec
mov
bound
jg
add
bnd
cli
pop
xchg
loope
adc
mov
jmp
sbb
in
inc
mov
xchg
cmp
cmp
lock
fistpl
cmp
pop
mov
lock
shlb
call
aas
insl
add
mov
lock
cli
xchg
mull
movl
out
lods
mov
dec
pusha
mov
pop
mov
mov
jbe
aaa
jnp
inc
xor
fistps
cli
dec
dec
mov
pop
jl
iret
push
xlat
fs
cmp
mov
mov
mov
into
sbb
imul
cmp
icebp
or
bound
sbb
adcb
jnp
daa
popf
dec
mov
movsl
adc
mov
out
lds
int
jle
subl
sbb
imull
sahf
inc
jl
aas
imul
mov
sbb
jae
dec
sub
repnz
lods
add
push
lcall
pushf
cmp
add
mov
imul
jp
push
lds
sbb
cld
arpl
sub
clc
bound
and
mov
mov
int
dec
mull
lahf
loope
mov
lret
adc
add
push
inc
push
xlat
movsl
inc
push
jmp
daa
cmp
in
lret
call
lods
inc
adc
imul
pop
or
test
fmul
enter
adc
shr
subb
dec
fcoml
mov
jns
xor
push
xchg
fildll
add
inc
push
outsb
pop
iret
das
pop
jo
mov
mov
jne
xchg
popf
insl
add
push
scas
jl
push
stos
jmp
popa
jo
clc
sahf
icebp
mov
daa
jns
lret
popa
and
inc
xor
xchg
cmp
testb
pusha
xor
fadds
out
les
mov
movsl
cmp
jle
jge
or
sahf
add
stc
dec
leave
or
jbe
fisubl
outsl
aaa
jg
scas
popa
mov
xor
mov
flds
sub
xchg
loop
repnz
int3
mov
xchg
movsl
fnstcw
adc
loope
jae
jb
sub
les
jl
fwait
stos
mov
iret
sub
mov
enter
mov
getsec
mov
adc
ret
cs
stos
xorb
pop
iret
outsl
orb
sbb
xor
xor
mov
insl
outsb
add
inc
sbb
out
loopne
mov
mov
sbb
in
bound
dec
les
je
and
pop
pop
lods
xchg
popa
popf
stc
add
xor
cmpb
mov
scas
pop
out
sbb
subb
ret
jmp
sti
xlat
xchg
rcrb
mov
dec
add
xchg
inc
and
and
in
sbb
data16
fdivs
pusha
xor
fs
mov
and
lods
push
fnstsw
inc
lret
pushl
lahf
push
jmp
insb
jg
mov
cmpsb
cmpsl
cltd
dec
dec
cmp
sbb
xor
sbb
push
xor
dec
adc
fisttpl
pop
mov
gs
cli
mov
pop
mov
fxtract
jecxz
mov
and
jp
pop
sahf
fwait
mov
lea
into
mov
idiv
push
mov
adc
inc
mov
xchg
inc
movsb
into
fsubrl
or
mov
mov
mov
dec
xor
cltd
insb
and
push
xchg
adc
jmp
insl
cmpsl
sub
lret
cli
pop
lock
shlb
addr16
add
xor
sbb
adc
into
stos
aad
jl
mov
add
out
mov
loope
push
ret
push
or
mov
lret
xchg
and
sub
push
sbb
mov
jecxz
icebp
xor
or
inc
pop
mov
lcall
out
scas
aas
xchg
cmpsb
xlat
fcoms
addr16
sub
lret
adc
push
adc
insb
arpl
mov
lods
enter
iret
pop
adc
add
ret
or
mov
jae
insl
sbb
or
enter
data16
test
add
cld
xchg
mov
or
mov
mov
out
mov
aas
sbb
mov
push
gs
jnp
xor
push
cmp
and
subb
dec
or
and
adc
sahf
repz
sbb
mov
stos
out
movsb
or
mov
or
or
shrb
imul
cmp
in
aad
mov
jo
mov
pusha
les
movsb
pop
dec
jecxz
movsl
hlt
jnp
mov
add
inc
cmpsb
pop
cmpsl
jg
cmc
clc
fisubs
inc
iret
sub
cltd
ja
mov
into
popf
xchg
enter
pop
mov
dec
shll
cmp
in
and
daa
adc
inc
stos
push
adc
sbb
push
mov
push
jmp
repnz
jp
sub
push
fwait
mov
ds
jbe
out
cmp
lds
or
repz
stos
fiadds
icebp
lcall
push
cmp
sub
daa
jnp
sub
mov
inc
mov
xchg
movsl
push
fwait
shlb
jno
ljmp
scas
popf
gs
popf
test
mov
xor
jnp
aaa
mov
daa
ss
jge
push
ljmp
stos
mov
cli
xchg
sbb
cmp
cmp
pop
push
sbb
add
lea
adc
and
mov
jmp
xchg
and
or
xor
xchg
rcrl
push
nop
rclb
imul
outsl
inc
inc
inc
sbb
in
inc
fisubrl
sbb
addr16
cwtl
cltd
push
mov
add
movsl
sbb
fld
ljmp
loope
sahf
xor
cmc
sar
and
stc
adcl
and
cwtl
movsl
mov
sahf
icebp
jge
inc
jno
clc
aad
fcoml
shll
mov
aam
movsl
pop
mov
xchg
dec
sub
cmpsb
call
negl
adc
mov
mov
mul
loope
and
aad
test
fadds
popa
xchg
out
dec
jle
inc
out
enter
pushf
cmp
sub
movb
dec
push
loopne
or
add
leave
mov
mov
mov
jns
inc
push
lds
push
sub
adc
xor
pop
sub
push
nop
pop
push
leave
pop
push
push
stos
mov
insl
xchg
and
mov
das
sti
movsl
inc
xor
add
fstpt
push
dec
outsl
jo
xor
or
lock
jnp
movsl
fildll
ret
pop
cltd
inc
ss
lods
inc
cs
aad
jns
sti
jmp
insl
jae
fisubrs
pop
out
shrb
testb
dec
mov
lcall
and
repnz
into
pop
shl
clc
loop
dec
icebp
cmp
sub
push
pop
push
xchg
jle
xor
sub
inc
or
xchg
xor
aad
inc
mov
push
xchg
jl
lret
aam
shrl
mov
mov
data16
cmpb
sahf
push
sub
sub
rclb
mov
xor
inc
mov
adc
xchg
arpl
fwait
dec
ret
aam
loopne
mov
mov
xor
jecxz
inc
sub
loop
dec
flds
xchg
or
mov
nop
xor
cld
shll
add
jns
lahf
sbb
fsubl
jle
fstp
pop
adc
mov
xor
pusha
dec
or
roll
push
loopne
pop
in
popf
lahf
sbb
sub
xchg
mov
push
jno
and
jno
adc
adc
clc
push
and
push
push
cltd
clc
jl
xchg
xchg
fiadds
fisubl
cmp
push
shl
sar
xlat
gs
add
cmpsb
lret
add
sahf
inc
std
aas
jge
cli
jge
daa
insb
pop
test
shll
and
sti
test
les
push
ljmp
cmp
jnp
in
and
sbb
mov
in
testl
jle
es
pop
daa
push
out
nop
mov
cld
scas
out
jno
pop
lret
loopne
mov
inc
adc
push
fisubl
dec
clc
push
xor
sbb
xchg
mov
dec
jo
aad
mov
mov
mov
add
insb
xchg
xor
dec
lret
and
inc
ss
mov
popl
sbb
xchg
and
dec
bound
dec
pop
add
enter
psubusw
out
fcompp
and
test
or
mov
test
loop
and
ret
pop
and
xchg
popa
mov
cmp
rcrb
jb
mov
push
push
mov
ss
push
not
mov
mov
adc
jno
out
out
clc
mov
fs
sub
pop
push
and
test
es
xchg
out
pop
stos
lahf
xchg
pop
mov
test
ja
pop
and
sub
mov
cmp
lods
mov
xchg
mov
mov
in
fs
inc
push
pop
push
cwtl
and
popa
out
or
fs
inc
push
or
fst
push
outsb
mov
inc
cmc
mov
cltd
cmp
xor
jle
loop
scas
popf
fs
cmp
inc
jmp
in
adc
cwtl
pop
pop
mov
hlt
add
rcll
call
cmpsb
mov
push
jns
out
inc
das
fstps
jp
repz
sti
mov
aas
movsb
xchg
popf
loop
jns
xor
insb
std
das
jns
leave
push
cmpsb
lea
shlb
push
inc
gs
hlt
aas
xor
cmp
ret
mov
icebp
sub
pop
shll
cmp
xchg
pop
or
xchg
imul
xchg
sbb
xor
sub
dec
add
shll
xchg
or
mov
push
inc
aas
into
ja
mov
push
imul
mov
dec
insb
adc
push
lret
out
or
roll
cmp
cmp
sbb
xor
mov
negl
or
sbb
inc
aas
push
sbb
dec
ret
and
fsubrs
rolb
cmp
adc
xchg
leave
mov
xor
sbb
pusha
push
lret
outsb
daa
repz
push
cmpl
mov
inc
aas
adc
je
arpl
test
push
sub
mov
sub
sbbl
orl
push
push
pop
cmpsb
cmc
sbb
js
jg
paddb
popf
scas
pushf
add
add
inc
cmp
rorb
xorl
xchg
js
in
cmpsb
adc
push
mov
sbb
outsl
mov
mov
add
cmp
lea
cmp
inc
cli
rcrb
sbb
mov
loope
add
or
shrl
and
xchg
sub
addl
jae
ljmp
mov
rcrb
out
fsubl
xchg
cmpb
or
pop
test
pop
sbb
ror
rolb
sbb
lret
fidivrl
ret
and
xor
ja
jnp
lret
inc
or
or
sub
jmp
bnd
decl
inc
or
test
dec
jb
mov
mov
mov
enter
je
add
fistl
adc
xchg
mov
je
pop
and
pop
repnz
fs
xchg
dec
ds
lods
inc
mov
mov
testl
out
jne,pt
push
push
rorl
pop
das
stos
fidivrl
mov
mov
jo
cmc
ljmp
sbb
or
cli
pop
aaa
pop
and
aam
aas
sarb
pop
call
push
sbb
ret
sahf
inc
sbb
sti
adcl
push
movb
popf
jnp
in
pop
subl
xchg
mov
loopne
or
fcompl
sbb
mov
aas
xlat
adc
xor
loop
add
jle
cld
xchg
popa
xchg
sbb
mov
sbb
in
mov
mov
mov
inc
jno
rcll
xchg
xor
cltd
aas
je
ret
cmp
pushf
fs
mov
fbstp
bound
xor
inc
leave
mov
stos
add
or
dec
lahf
mov
inc
std
arpl
fcmovne
push
adc
pop
and
push
daa
jmp
out
and
xchg
xchg
and
daa
pop
pop
rcrb
jb
inc
test
jmp
test
push
push
inc
or
sub
lahf
jecxz
inc
cs
jl
sarb
jge
push
xchg
pop
call
push
hlt
stos
jp
jo
inc
outsb
aaa
fiaddl
inc
cmpxchg
xchg
mulb
lods
sub
cmp
mov
dec
repnz
jle
pop
ds
nop
jnp
dec
and
loop
mov
nop
hlt
mov
pop
cmc
sbb
bound
ret
stos
sub
mov
inc
sahf
mov
push
push
je
mov
mov
icebp
insl
inc
mov
adc
xlat
mov
dec
imul
lahf
ret
outsl
mov
mov
or
pushaw
iret
andb
pop
repnz
push
xchg
pusha
lret
imul
std
mov
push
imul
ds
lea
into
aas
inc
in
and
pop
aas
sbb
or
insl
add
push
pop
sti
lret
jbe
jecxz
test
lods
pop
lea
jmp
fwait
arpl
cmp
or
fcomps
cmp
add
addl
cld
stos
iret
inc
or
pop
push
pop
xor
jge
rol
cli
push
loop
or
xchg
pop
lock
inc
inc
mov
addr16
icebp
mov
xchg
insl
pushf
outsb
call
test
psubusb
lods
sarb
inc
dec
nop
dec
hlt
pushf
fisubs
enter
call
xor
mov
lret
mov
dec
mov
into
dec
pushf
fisubrl
imul
iret
add
xor
push
dec
outsl
aaa
lea
adc
sub
sub
xor
or
fbstp
popa
lcall
lock
sbb
dec
push
inc
pushf
inc
sub
sbb
ret
outsl
push
fisttps
cmp
push
cltd
in
imulb
nop
and
call
test
jl
push
out
call
test
dec
daa
jne
push
rcrl
ret
jp
out
or
dec
add
sbbl
test
xchg
leave
enter
in
push
jnp
pop
fadd
push
repz
js
lret
mov
cmp
mov
mov
and
fwait
negb
xor
cld
or
out
mov
dec
adc
xor
add
lret
test
dec
xor
idivb
nop
clc
push
push
lods
push
sbb
xor
xor
xor
xchg
fistps
js
xor
int3
ror
jnp
pusha
inc
out
imul
or
es
ja
lret
mov
or
imul
cmp
lret
repz
xor
aas
xchg
idiv
loope
ficoml
xchg
out
mov
add
add
leave
jbe
xchg
shll
xor
aaa
testb
mov
out
js
mov
mov
sbb
add
push
test
in
pop
cmp
pop
dec
sbb
add
test
filds
and
mov
movsb
lcall
cwtl
rorb
filds
outsb
xchg
dec
neg
sbb
stc
repz
sbb
mov
iret
ret
jb
mov
cmp
push
lcall
cmp
add
mov
aam
inc
aas
xor
adc
lock
xchg
sbb
fwait
or
push
loopne
cmpb
outsl
cmp
mov
cwtl
xchg
or
mov
mov
outsl
push
cmp
sub
add
mov
popa
arpl
mov
cmp
push
pop
out
or
aaa
cmc
test
imul
push
sub
xchg
push
adc
hlt
mov
mov
inc
pop
dec
cmp
cmpsl
in
fsubr
ret
push
cmpsb
in
cmp
sub
out
push
cmp
jl
inc
jg
test
out
dec
push
pop
mov
jmp
jle
sub
les
movsl
in
les
popa
test
mov
pop
inc
jge
sti
ret
and
out
jecxz
mov
xchg
add
aad
mov
mov
fdivrl
push
pushf
sbb
dec
xchg
push
inc
xor
push
and
add
push
add
push
out
sbb
or
add
loop
pop
ljmp
mov
xchg
in
in
ljmp
jge
sub
xor
add
push
ljmp
push
jg
cwtl
push
mov
fistpll
xchg
lea
nop
mov
push
push
inc
mov
add
add
adc
retw
sbb
bound
fs
out
int3
shll
cli
outsl
cmp
mov
mov
jno
dec
adc
xor
cmp
daa
imul
cmp
jp
insb
loope
jnp
in
lahf
lock
inc
add
orb
cmp
xor
cltd
ret
scas
scas
out
ja
insl
push
in
mov
subl
fdiv
icebp
pop
cwtl
inc
test
in
cs
cmp
popl
repz
dec
or
lea
jg
rcrb
sbb
push
lds
add
fstl
push
js
and
loop
out
push
push
mov
out
call
inc
sbb
in
push
psubd
je
enter
loopne
out
xlat
inc
pop
inc
stos
jne
mov
pop
setne
movsl
xlat
dec
fsubrs
sbb
cmp
imul
fs
stc
repnz
fidivrs
lds
mov
loope
inc
add
push
daa
xchg
loope
adc
pop
cltd
inc
call
xor
mov
sarb
les
adc
aam
mov
loop
fbstp
sbb
push
inc
cmp
fs
xor
cmpb
pop
push
cmpsb
or
cmp
lock
shr
jmp
aad
stc
sub
jl
jnp
pop
enter
lret
push
ret
mov
stos
mov
fcoms
enter
dec
sub
fs
das
adc
in
fsubrs
xchg
sar
into
pslld
addr16
addr16
pop
rcll
rorl
xor
sbb
fildll
and
in
xor
lods
mov
das
pop
pop
pushf
xchg
mov
hlt
jns
dec
lea
pop
adc
cmp
stc
fadds
outsl
ret
mov
jecxz
jp
popa
loop
rolb
push
js
xor
sbb
aaa
sub
lds
test
add
fwait
jl
pusha
ret
sar
mov
add
call
rcrb
cwtl
rclb
inc
sub
and
push
push
adc
adc
adc
cmpl
or
cltd
mov
mov
and
mov
pop
lds
sbb
testb
push
inc
add
std
les
sub
lock
mov
jns
sub
push
lret
and
dec
push
imul
outsl
mov
das
xor
mov
icebp
push
in
leave
lret
sbb
daa
insb
gs
repnz
mov
addr16
cmc
mov
in
add
stc
sub
jae
xchg
out
je
and
cmc
jmp
cli
shlb
addb
cltd
xchg
lea
popa
call
pop
into
dec
mov
adc
lds
mov
rorb
ret
into
sbb
inc
mov
cmp
aas
pop
popa
iret
xchg
push
inc
inc
pop
adc
fistpll
clc
rorl
cltd
mov
pop
aad
outsl
push
or
scas
ficoml
paddsb
jl
dec
test
cmp
int
lock
xlat
divl
test
push
je
mov
and
xchg
lods
in
mov
push
mull
or
mov
bound
cmpsb
movsb
loope
adc
inc
adc
fistpll
jbe
andl
mov
test
stos
add
scas
cli
iret
pop
fs
ja
inc
sbb
dec
pop
dec
jns
icebp
cmp
or
ja
mov
mov
pop
cmpsl
movsb
sti
cmp
add
cmp
add
repz
mov
cltd
push
nop
jns
jns
movsl
fstps
ja
insl
enter
mov
mov
in
daa
bound
mov
lret
inc
mov
sbb
mov
push
in
in
stc
je,pn
sbbl
mov
fistps
xor
fidivrs
mov
cli
adc
xor
mov
daa
cli
adc
dec
popw
das
jge
xor
fnstsw
pop
inc
pop
test
stos
int
mov
dec
xchg
arpl
sub
cmp
das
mov
dec
fistl
sti
sti
ja
sbb
aam
push
imul
fwait
fs
pusha
hlt
sti
xchg
mov
out
mov
jmp
pop
and
xchg
mov
cmp
fdivrs
xchg
pop
mov
pop
push
cld
jecxz
fcomps
mov
jl
xor
in
add
mov
icebp
insb
pop
push
enter
std
orb
dec
pop
pop
cmp
loopne
into
and
enter
in
fisubrs
and
dec
jo
enter
add
sbb
and
and
mov
pusha
loop
or
scas
cmpb
mov
mov
fiaddl
cmp
and
xchg
xor
js
xchg
pop
jp
mov
add
sahf
push
movsl
sbb
hlt
aas
rorb
and
dec
push
test
sbbl
lock
js
pop
mov
inc
dec
pop
ret
push
pop
test
adc
xchg
adc
movsb
inc
ss
adc
xor
add
stc
movsl
pop
sbb
mov
mov
repz
aam
popa
sbb
cwtl
repnz
mov
cld
and
inc
cmpsb
push
iret
sahf
test
xchg
mov
inc
jo
sub
out
sbb
daa
repz
cs
and
and
imul
popf
xchg
dec
loop
jno
and
aas
cmp
loop
ficomps
lea
xchg
in
lahf
rol
fdiv
xor
or
mov
pop
mov
jnp
sub
mov
lahf
mov
cwtl
data16
mov
mov
dec
int3
in
fisubrs
inc
mov
mov
xchg
mov
mov
or
lea
fmull
addl
ret
leave
sub
and
lods
dec
sbb
xorl
jae
cmp
add
cmp
mov
sahf
sub
movsb
add
mov
aaa
and
push
mov
jmp
shll
xchg
lock
add
test
lea
das
data16
jae
ret
adc
mov
mov
add
arpl
sbb
sub
dec
adc
insb
outsl
cld
add
fldt
out
pop
mov
mov
fcomi
sub
sbb
popa
push
pop
nop
aas
test
mov
int
mov
and
mov
xorb
jl
pop
mov
xor
mov
xor
scas
cmpsl
adc
mov
ret
jbe
push
xor
gs
fdivrs
xchg
jge
sub
jp
add
cmp
div
or
cli
icebp
xor
out
lcall
jne
add
inc
mov
sbb
popa
shlb
pop
lret
loopne
std
jl
mov
movsb
dec
and
lahf
push
pop
cmpsl
push
gs
dec
test
sbb
mov
push
notl
inc
fisubl
ljmp
loop
in
adc
or
mov
mov
fnstenv
cld
xor
cmpsb
or
and
loop
push
repz
loop
xchg
jmp
icebp
shll
fcomps
and
je
out
stos
nop
pop
sbb
mov
sbb
pusha
repnz
shrb
lds
shrl
xrstors
push
pushf
and
or
xor
pop
jg
pop
xchg
inc
mov
xchg
mov
loop
sar
idivl
xchg
inc
lods
and
out
outsb
in
iret
stos
addl
add
in
push
outsb
test
push
and
xchg
mov
sub
mov
jge
mov
adc
jnp
push
cli
bnd
das
add
mov
sbb
aam
mov
dec
insl
mov
lret
xchg
insb
jns
loopne
rcll
cwtl
enter
xchg
sub
adc
jecxz
es
cmp
jb
imulb
push
inc
cltd
and
sbb
pop
cmpb
sti
mov
xor
add
sub
push
push
fnstcw
inc
adc
in
pusha
or
xlat
and
jmp
mov
pop
mov
lods
xchg
pop
test
popa
cmp
mov
sbb
loopne
jmp
push
sahf
cmp
sbb
cwtl
mov
jg
arpl
lods
out
lock
inc
mov
inc
fadd
jns
dec
adcl
cli
andb
push
add
cs
lahf
stos
pop
mov
clc
pop
lcall
push
xlat
add
xchg
mov
leave
jb
into
and
aam
adc
mov
test
lea
pop
aas
nop
jns
out
sbb
jecxz
or
dec
sub
and
into
mov
sbb
dec
mov
std
jb
gs
loop
inc
ljmp
mov
int
jb
mov
sbb
mov
mov
pop
jns
mov
mov
ret
mov
test
mov
cmpsb
insb
xchg
push
and
sbb
mov
pop
mov
mov
sub
mov
jg
aas
jb
shll
add
loopne
enter
mov
das
mov
mov
cmp
lret
add
lret
les
in
mov
xchg
push
inc
ja
fidivrs
push
fildl
lcall
inc
or
and
movsb
sbb
dec
arpl
mov
dec
dec
inc
jmp
ds
jns
cmp
dec
or
jns
mov
call
sbb
div
push
push
gs
mov
add
sahf
int3
sub
lcall
mov
pop
fbld
xor
mov
bound
pop
xor
pop
xchg
int3
push
jge
mov
or
xchg
cmp
or
int
jecxz
sub
imul
adcb
push
push
imul
cmp
mov
ror
mov
movsl
fcompl
jmp
lods
lcall
into
je
mov
mov
insl
shll
dec
test
pop
pop
inc
sbb
xchg
cltd
rclb
push
lods
mov
sbb
and
nop
inc
mov
mov
test
push
jne
push
sub
xchg
xchg
push
pop
aaa
imul
xchg
mov
enter
faddl
fs
push
lods
push
lds
cmp
and
sub
jge
or
mov
and
cmp
sub
out
and
push
pop
mov
push
stos
flds
xor
ja
cld
xchg
cmpb
aam
cli
push
sub
mov
fbstp
push
sti
stc
add
notl
mov
mov
jg
mov
loope
inc
sbb
add
mov
xchg
push
xor
loope
mov
loope
lret
outsb
mov
xchg
mov
cltd
mov
jns
pop
mov
sbb
jo
mov
aas
push
int
test
enter
in
and
repnz
or
roll
mov
mov
outsl
fiaddl
scas
mov
cmpsl
inc
pop
and
scas
and
jp
cmp
cmp
movsl
sbb
lahf
fwait
js
and
into
cmp
inc
scas
repz
sbb
dec
enter
lods
in
data16
mov
mov
add
pop
cmc
adc
test
inc
repnz
inc
sub
push
cld
and
aas
loopne
xchg
imul
adc
cmp
mov
les
jge
jmp
ret
mov
shr
mov
cs
and
sub
pop
imul
cli
mov
ljmp
inc
mov
inc
imul
loop
jmp
dec
repz
orl
jne
jg
pop
mov
insl
popl
lret
mov
scas
dec
xor
inc
sbb
mov
push
ss
mov
dec
and
sbb
repz
xor
add
nop
push
add
dec
jl
dec
xchg
outsb
sarb
fcmovnb
rcrl
pop
shr
push
mov
je
and
imul
movsb
inc
testb
cmp
pop
push
dec
in
mov
test
mov
andl
leave
mov
popf
call
mov
mov
mov
add
ficomps
icebp
aas
mov
mov
pop
ficompl
mov
pop
in
data16
shl
cs
mov
leave
jecxz
mov
inc
lock
mov
dec
icebp
ficomps
repnz
sbb
sti
or
movsb
mov
jg
roll
pop
sbb
pusha
idivl
push
push
xorb
shlb
js
leave
ss
pop
cmc
lock
and
leave
out
repz
pop
or
ds
ret
test
cmp
repnz
xor
jmp
scas
fmulp
lods
mov
xchg
mov
lods
adcb
leave
stc
inc
cwtl
jmp
and
jg
test
pop
sub
scas
push
pusha
je
mull
int
dec
andl
add
fimull
or
leave
inc
xor
jo
shrb
inc
addr16
mov
inc
dec
lcall
je
test
inc
or
lods
xor
push
fiadds
lcall
lret
cmp
sub
pop
mov
jb
lret
push
xlat
outsb
cmpsl
xchg
repnz
xchg
aam
movups
mov
jns
je
sti
sbb
inc
push
insb
dec
jg
fs
sbb
shlb
std
mov
lods
xchg
into
mov
cmp
enter
imul
adc
mov
hlt
test
stos
cmpsl
popa
pop
push
dec
jns
enter
push
jp
xor
pop
cmc
sbb
in
and
arpl
xchg
sbb
fidivs
add
ficoml
push
sub
push
jmp
mov
lret
mov
mov
repnz
pop
dec
push
test
pop
out
sbb
mov
cmp
cmpsb
in
and
stc
fnsave
mov
sub
jae
cmpsl
cs
cmp
movsb
sub
xchg
push
sbb
jl
fbld
xchg
adc
rolb
mov
cwtl
popf
cli
mov
cli
sub
cmp
or
push
lea
push
cld
sub
xor
test
es
xor
adc
push
push
push
cmp
adc
mov
fsubrp
mov
mov
cmp
fwait
pop
sahf
dec
jmp
and
jb
mov
lea
popf
mov
jp
mov
and
imul
andl
and
popf
xchg
mov
stos
decl
jb
test
jb
mov
inc
movsl
or
pop
lret
inc
sbb
mov
inc
pop
leave
jae
movsl
xlat
xchg
sbb
cmp
sub
dec
mov
stos
test
lahf
xlat
push
sbb
jns
jle
push
ljmp
mov
int3
dec
bnd
dec
dec
pop
pop
cmp
lret
mov
xor
sbb
outsl
lret
mov
scas
mov
jno
push
jae
add
sbb
stos
fs
or
ss
pop
and
fisubrs
adc
xorl
push
sarl
cli
lods
data16
dec
or
out
call
iret
mov
jbe
inc
fwait
pop
mov
cmpl
mov
sub
dec
rcrl
pop
out
daa
hlt
enter
and
pop
pop
scas
cld
jne
jmp
and
or
jb
xchg
sti
push
inc
mov
sub
xor
pop
inc
loopne
mov
xchg
mov
adc
xchg
inc
mov
iret
lds
pop
cltd
and
jge
mov
xchg
jg
push
je
xchg
push
ljmp
shll
dec
std
mov
lret
mov
loopne
push
cmpsb
cld
sub
and
push
test
das
pop
adcb
jbe
xor
adc
xor
lds
push
fs
cmc
cmp
pop
inc
movsl
cmpb
mov
jns
sbbb
push
pop
adc
gs
loope
das
ja
neg
sahf
sbb
and
roll
dec
pop
push
jae
stos
push
mov
orl
dec
mov
adc
mov
pop
sbb
jp
roll
fisubs
xchg
rcrl
sarl
ja
mov
es
xor
or
adc
xor
das
mov
movsb
cmp
dec
sub
cltd
ljmp
dec
and
mov
sahf
sar
jnp
xorb
pop
mov
add
iret
xchg
jno
rorl
sbb
sub
test
xchg
and
mov
sbb
jge
into
mov
mov
add
dec
dec
add
sbb
in
xor
pop
push
jne
inc
leave
icebp
sbb
add
inc
std
scas
mov
inc
jle
cli
sbb
sub
jecxz
xchg
sbbl
imul
mov
xchg
test
push
lds
jle,pn
ret
or
std
pusha
pop
push
and
xchg
rcl
jecxz
int3
out
out
cltd
xor
inc
push
cmp
fldl
insl
out
adc
push
dec
pop
cwtl
mov
inc
xchg
mov
push
xchg
adc
pop
dec
push
jae
mov
mov
fldenv
mov
and
vandps
test
cmp
jg
iret
adc
jno
out
jg
cs
jge
addr16
test
xorl
mov
xorb
pop
jecxz,pt
cmpsl
xchg
roll
inc
pop
jg,pn
fwait
jo
and
pop
call
adc
ss
in
lret
test
lret
int3
int3
imul
ror
xor
int3
mov
mov
enter
je
xchg
dec
cmpsl
movsb
and
sbb
sarl
mov
dec
xchg
pop
inc
insl
dec
lea
pop
movsl
int3
cmp
push
inc
call
out
call
mov
adc
cmpb
jmp
mov
int3
into
inc
sub
jge
pop
mov
cmp
scas
pop
inc
shll
mov
jns
jmp
jmp
test
push
insl
data16
add
sub
pop
xchg
xlat
inc
lret
sub
sub
movl
xchg
or
pop
xchg
in
pusha
sbbb
pop
std
or
clc
sbb
shrl
push
jo
int
jmp
pop
aas
pop
outsb
xchg
and
adc
xchg
sbb
stos
and
cmp
dec
push
cmp
lock
shl
xchg
adc
lock
mov
mov
idiv
lock
jp
int3
outsl
add
rcrb
arpl
mov
lods
lods
mov
pop
mov
ss
and
adc
xor
popa
fnstenv
xor
xchg
inc
or
mov
mulb
out
lcall
andl
pop
mov
mov
loopne
xchg
mov
xchg
jg
inc
scas
jbe
addb
xor
dec
pop
add
fiadds
xor
mov
xor
sbb
out
inc
in
in
sub
in
jp
jp
sub
aam
mov
dec
test
ss
mov
jecxz
bound
je
das
sarl
pop
andb
jmp
pop
xor
bound
and
inc
inc
cmp
mov
dec
jmp
add
or
aam
clc
inc
or
mov
pop
out
xor
pop
inc
pusha
xchg
push
dec
insl
jne
test
mov
cwtl
cmp
fidivrl
mov
ret
xor
pop
cwtl
mov
je
insl
mov
cmp
mov
add
gs
inc
inc
ds
add
mov
dec
jbe
add
roll
inc
rcrb
mov
pop
mov
sbb
es
jb
dec
mov
dec
addb
shlb
push
jmp
xchg
sub
inc
xchg
adc
push
sti
mov
outsb
div
iret
stos
scas
leave
xchg
mov
or
and
inc
mov
lods
jb
cmc
push
aam
scas
stc
gs
and
sahf
cmp
in
fwait
mov
dec
add
inc
movsb
or
add
fwait
xchg
pop
or
push
push
fidivs
aas
lds
and
rorb
cmp
dec
sub
in
xor
mov
data16
lock
push
idivl
pop
inc
sub
pop
stc
and
mov
or
fstpl
aad
popa
in
aad
bound
push
fwait
jle
shl
dec
nop
cmc
inc
ret
jns
loopne
cmp
mov
inc
pusha
mov
imul
mov
xchg
aam
push
adc
movsl
inc
out
iret
loopne
sub
cltd
dec
push
aaa
pop
lock
js
push
add
or
imulb
pop
je
sbb
fidivs
cld
push
inc
xor
rcl
mov
push
out
push
arpl
outsb
out
fcomps
inc
cwtl
sub
adc
jge
addr16
sbb
jno
mov
or
sbb
sahf
jo
das
sub
insb
push
xchg
dec
mov
stos
mov
test
mov
addb
sbb
nop
or
in
jne
popf
or
out
lret
inc
pop
andl
aas
out
pop
lahf
or
pushf
xchg
adc
fneni(8087
subps
dec
mov
out
push
inc
and
mov
pop
loop
xor
cld
push
fdivrs
fbld
pop
jns
int3
push
outsb
mov
clc
add
sbb
flds
ljmp
mov
fucomp
mov
cmp
xchg
int
stos
enter
inc
jp
and
mov
xchg
roll
aam
outsb
mov
sub
lods
sub
mov
dec
xchg
jle
fldt
inc
into
mov
xor
mov
dec
je
lods
adc
std
pop
ljmp
and
push
fidivrl
sarb
jbe
ljmp
sahf
rol
das
cmp
xchg
sahf
out
cltd
cvtdq2ps
add
lret
test
lods
test
jge
test
push
jb
mov
xchg
daa
cld
notb
xor
std
jecxz
mov
push
jle
loope
sahf
sbb
jge
ret
outsb
pop
mov
dec
xchg
cmpsb
stc
sarl
pop
aad
mov
sub
inc
loope
shll
aam
or
adc
popf
and
pop
jecxz
ret
mov
popf
sub
lods
mov
rorb
stos
pusha
cltd
outsb
push
or
jae
sub
xor
add
notl
arpl
loop
jge
push
test
jecxz
lods
and
mov
pop
pushf
and
gs
xor
or
shlb
mov
fsubs
pop
sub
mov
or
jl
adc
leave
pop
into
push
cmpsl
cmpsl
lret
inc
ja
push
or
mov
push
inc
or
shlb
addb
jecxz
into
mov
push
and
mov
jo
xchg
adc
fst
or
adc
inc
outsb
insb
fisttpll
add
sbb
int
in
js
jno
add
stos
or
sub
adc
mov
ror
nop
scas
pop
push
push
sub
lock
adc
test
mov
sahf
mov
shl
daa
dec
out
pop
jmp
mov
ds
mov
cld
test
cmp
bound
mov
sub
loopne
xchg
pop
lds
or
insl
jmp
jmp
lock
int
loope
add
repnz
int3
mov
inc
ret
inc
sub
cmpsb
dec
aas
jg
add
stc
mov
mov
pop
xchg
and
out
cmp
push
sahf
mov
lcall
ljmp
outsb
mov
mov
cmp
shrb
inc
mov
sbb
fcoms
out
mov
jns
sub
out
sbb
or
inc
cmc
lcall
mov
bts
sti
sub
cmp
xchg
arpl
test
add
in
cmp
outsb
lcall
xor
faddl
push
lods
out
lds
jge
mov
cmp
push
xlat
add
pop
lds
cwtl
xchg
daa
inc
movsl
jbe
jne
cmpsb
push
lock
lea
loope
ja
push
cli
and
inc
out
cmpsb
jp
cmp
push
xor
pushf
pop
dec
xchg
adc
into
dec
adc
sti
pop
js
xor
mov
ja
lcall
pop
cs
dec
push
inc
popf
jge
fdivrs
loope
jbe
mov
arpl
dec
arpl
add
data16
jp
fildl
mov
inc
mov
test
orb
mov
leave
push
push
xchg
xchg
repz
movsl
fwait
mov
lahf
adc
int3
es
dec
int3
adcl
in
pop
adc
and
test
jge
ljmp
dec
add
push
jb
mov
shl
mov
sub
dec
ds
inc
sub
inc
movsb
sbb
out
push
test
mov
imul
test
fsts
je
repz
and
or
pusha
leave
add
or
lcall
fbld
mov
or
cltd
mov
jbe
or
pop
sub
aas
push
imul
fistpl
pop
test
xchg
repnz
and
push
cmpsl
js
out
xor
inc
int
insl
xchg
mov
cmc
mov
cmpsb
xchg
loop
sub
incb
int
enter
sbb
and
out
test
sub
pop
or
mov
jmp
push
push
imulb
sbb
inc
xchg
mov
aas
fsubs
mov
xor
into
popf
mov
aad
inc
mov
in
scas
and
sub
jne
xchg
fdivrl
jae
cli
xchg
cmc
jo
rclb
xchg
mov
fistpl
pushf
std
fsubr
mov
push
mov
xor
mov
adc
popf
addr16
xor
adc
out
imul
cmpsl
cmpb
jne
mulb
mov
pop
push
fisttps
or
int
stos
fwait
pop
inc
cld
inc
pop
pusha
test
and
fistl
or
outsb
adc
lock
cltd
mov
mov
mov
mov
adc
aas
aas
fisttps
mov
flds
pop
jo
mov
mov
call
dec
mov
cltd
mov
repnz
fldl
xor
jnp
sbb
pop
mov
sahf
mov
mov
cmpsl
mov
shrl
xchg
fimull
testb
cwtl
push
out
rolb
jne
xchg
jne
mov
insl
mov
add
cmp
dec
ja
test
push
mov
add
lods
out
lods
inc
mov
stos
and
ss
mov
ss
je
add
and
roll
lods
scas
dec
popf
mov
movsl
jnp
in
sbb
stos
das
sub
inc
push
movsb
aam
fildll
fldl
addl
mov
adc
and
push
push
push
sahf
int
std
sbb
lea
lcall
xor
iret
mov
outsl
jge
xchg
out
mov
es
mov
add
data16
adc
lcall
fwait
out
shrb
xor
mov
jmp
inc
aas
addr16
dec
sbb
lahf
mov
adc
stc
or
inc
stc
pop
push
mov
xchg
inc
adc
cmp
adc
mov
pop
stos
and
repnz
cld
in
es
imul
fistps
pop
dec
testl
cmp
addr16
xchg
or
aad
mov
ss
mov
cld
imul
mov
pop
nop
inc
pop
and
mov
cmp
jbe
or
inc
stos
xor
xchg
or
fsts
add
jge
or
imul
pop
enter
mov
add
pop
xchg
lock
jecxz
jg
mov
mov
ret
mov
adc
loop
ss
daa
cmp
xchg
adc
adc
fmull
mov
and
addb
inc
arpl
out
incb
cmpsl
or
loop
jb
out
sub
push
adc
xor
int
jb
cli
in
pop
js
js
cltd
fs
or
jge
daa
ss
mov
outsl
outsb
clc
ret
add
cltd
enter
mov
fstpt
push
jmp
in
bound
sbb
sbbb
xchg
out
add
ret
out
cmp
jl
and
cmp
mulb
jp
sahf
pusha
ret
lcall
test
or
jge
mov
js
xchg
lcall
repz
xor
outsb
scas
fwait
in
fsubs
clc
std
ljmp
xchg
lods
xchg
js
loopne
xchg
cwtl
pop
mov
imul
mov
dec
leave
gs
icebp
js,pt
scas
push
xor
clc
fisttps
xlat
mov
int
inc
or
jp
pop
ja
xorb
xchg
nop
data16
loop
popf
sbb
fisubrl
mov
jnp
cmp
inc
push
mov
mov
cmp
int
shrb
cmc
adc
xor
and
stc
imulb
or
sub
call
lcall
push
pop
out
sub
push
push
std
adc
and
xchg
sbb
sub
dec
icebp
pop
mov
mov
jns
loopne
enter
pusha
in
out
and
pop
in
clc
notb
enter
or
aaa
jg
iret
js
popf
adc
std
leave
ljmp
sub
and
popa
cmpsb
dec
fs
hlt
xor
fstpl
popa
mov
shr
pushf
nop
into
xor
ja
mov
pusha
add
out
aaa
adc
out
in
data16
sub
add
jg
sub
lahf
fwait
jnp
aas
popf
addb
test
pushf
mov
dec
lods
enter
jg
enter
sbb
outsl
sub
push
pop
dec
js
shll
filds
jno
inc
dec
add
xorl
sbb
int
fwait
or
iret
ds
fs
cmp
sub
loop
call
xchg
icebp
xorb
cmp
cs
loopne
imul
mov
lock
and
mov
insl
sub
sub
fists
mov
test
and
or
push
sarl
and
std
push
mov
jbe
pop
arpl
mov
mov
jo
jmp
sbb
jmp
jne
test
jmp
clc
xor
lret
mov
push
xchg
popl
dec
frstor
loopne
outsl
popa
repz
and
out
insb
mov
add
imul
add
pop
and
sbb
dec
pop
xlat
daa
addr16
cs
fildll
sub
xor
xchg
out
cmpsl
inc
outsb
out
mov
pop
fs
jmp
ljmp
rcrl
lcall
out
nop
sbb
repz
lret
xchg
mov
out
loop
notb
and
pop
mov
lods
pusha
arpl
jo
cmp
jne
insl
lods
ljmp
sbbb
mov
popf
push
mov
sub
repz
in
mov
sub
mov
jl
push
dec
jno
add
dec
loope
dec
fdivl
arpl
and
cmp
gs
mov
pop
insl
test
int
xor
enter
add
mov
sub
pushf
and
sub
xor
fsts
sbbl
pop
fists
and
mov
cld
mov
notb
pop
and
or
sub
icebp
cmc
movsb
mov
sub
adc
inc
mov
shrb
mov
aam
add
pop
add
pop
push
pop
jbe
insl
mov
mov
jp
in
mov
adc
mov
leave
mov
enter
xrelease
xor
daa
cld
jne
pop
pushf
jae
je
rcrl
clc
leave
jae
xchg
fdivrl
jp
mov
sub
sub
cmp
cld
daa
push
call
dec
inc
mov
jmp
scas
inc
or
sarl
add
fmul
out
xorl
pmuludq
dec
push
inc
xchg
clc
testl
mov
lods
incl
mov
push
lahf
dec
mov
xchg
mov
sbb
jg
les
push
pop
dec
sbb
sbb
outsb
xchg
test
cwtl
ja
cmc
hlt
aam
xchg
jbe
dec
add
sub
loop
jae
outsl
in
push
mov
adc
jae
mov
lds
add
and
out
pop
cmc
inc
push
shrl
dec
mov
mov
outsb
cmp
push
sub
jno
test
and
adc
scas
mov
ret
add
mov
stos
mov
aas
inc
add
cmp
mov
mov
mov
push
mov
hlt
arpl
mov
stos
sbb
and
jge
insl
xchg
fdivrl
notb
lret
test
scas
pop
out
xor
sbb
mov
stc
sarl
jg
push
scas
stc
pushf
cmp
xor
push
pop
dec
cmpsb
orb
cli
hlt
mov
stc
push
jae
dec
shl
dec
ja
fmuls
cmp
std
mov
inc
jle
call
pop
les
jecxz
std
cmc
adc
cmp
mov
cmc
sub
xchg
mov
test
je
call
fstpl
lret
lods
out
test
push
movsl
sbb
jbe
mov
lcall
movsb
cmp
std
or
test
xor
leave
ret
pop
addl
lret
sbb
push
pop
cmp
or
mov
cmpsb
push
add
or
cmp
mov
ja
nop
sub
fnsave
push
inc
fs
into
pushl
notl
daa
aad
addl
xchg
and
sub
push
jbe
push
repnz
call
mov
ljmp
mov
inc
popf
jo
test
sbb
neg
cmpsl
cmp
push
mov
ds
sbb
std
imul
into
push
cmp
loope
fcmovne
data16
lods
jne
xor
fwait
mov
dec
add
lds
pop
ret
add
lods
or
adcb
adc
nop
push
arpl
imul
adc
adc
mov
dec
lods
inc
pop
jb
loop
sbb
xchg
mov
lea
in
pusha
pushf
jne
xor
mov
in
in
lcall
aas
mov
insb
xchg
movsb
inc
sbb
xor
pop
inc
lahf
sbb
int
movsb
fcmovnb
xchg
mov
in
cmpsb
xchg
idivl
adc
fmull
inc
pop
sar
jmp
sbbl
cmp
loope
aad
loope
add
jne
push
dec
jge
xorb
mov
or
push
inc
jo
jecxz
rorl
mov
inc
cmp
adc
jmp
push
xchg
lret
aas
pop
aas
insb
sub
or
and
sbb
jno
lock
add
push
pop
ss
mov
jmp
mov
xlat
out
in
arpl
push
les
cli
dec
fcoms
push
sub
and
cmc
lods
loop
push
inc
jg
push
aas
seto
pop
add
push
fmuls
insb
adc
inc
pop
push
and
pop
lea
xchg
pushf
push
inc
push
jecxz
inc
push
sbb
add
and
lcall
je
gs
out
pop
lcall
addr16
and
cs
pop
add
mov
arpl
test
bound
stos
mov
out
ds
push
fwait
push
push
xchg
inc
push
push
fadds
sbb
jno
adc
aas
cld
cld
lds
sub
mov
and
jb
xor
out
das
cmp
mov
xor
jle
jo
fisubl
sbb
into
ret
sub
nop
sub
and
pushf
add
rol
lcall
inc
push
sbb
fbstp
jmp
push
or
loope
cmpsb
dec
push
in
rorb
add
jnp
shll
mov
pop
adc
fwait
lret
mov
out
lods
out
xchg
arpl
push
xor
sub
jmp
adc
sub
out
insb
loop
cmp
xor
xchg
lcall
loop
adc
outsl
loope
out
cmp
xor
adc
ljmp
repnz
push
jmp
data16
dec
dec
push
test
push
push
mov
push
fwait
mov
cltd
stc
or
into
push
and
test
rclb
push
push
sbb
in
push
inc
and
push
adc
insl
add
adc
push
cmpsb
jl
sbb
bound
repnz
mov
xchg
je
push
repz
jl
stos
gs
shl
in
aad
sbb
jmp
cmp
stos
into
aad
lret
js
xchg
movsb
movl
scas
xchg
fwait
repnz
lret
jo
sbb
lods
pop
pop
movsb
data16
outsb
hlt
movsl
and
mov
cmp
lea
and
cmp
dec
scas
and
jl
cmp
mov
mov
stos
xor
push
dec
scas
sbb
jle
mov
xor
mov
hlt
loope
pop
loopne
mov
adc
and
jae
ljmp
repz
sahf
loop
imul
sbb
mov
xor
sbbb
sub
lret
or
loop
mov
clc
pop
pop
add
adc
mov
mov
bound
xor
imul
ret
push
push
xchg
arpl
and
int3
or
jo
add
jmp
xchg
je
push
mov
xchg
pop
sub
popa
mov
into
sbb
sub
fcoml
mov
xor
adc
push
ret
jbe
sbb
sbb
jae
and
mov
sbb
jbe
popa
test
dec
jle
add
iret
std
sbb
call
imul
mov
jl
je
je
repz
push
push
mulb
fsubr
cmpsb
fwait
mov
aad
repz
jl
dec
push
add
test
divl
fisubs
jnp
and
das
xor
popf
scas
xchg
roll
mov
push
in
iret
xchg
dec
insl
push
adc
int3
lret
out
add
mov
cmp
dec
pusha
shr
mov
cmpsb
push
mov
jae
sbbb
adc
cmp
andb
or
leave
mov
int3
mov
jns
call
jg
cmp
fnstsw
test
test
mov
ds
hlt
sub
dec
rcrl
xor
test
int3
mov
inc
test
add
fistpl
add
subb
cli
pushf
dec
dec
jecxz
or
inc
dec
add
scas
repnz
sbbl
sub
mov
push
lret
lock
dec
mov
jb
lods
sbb
sub
std
and
mov
je
orb
and
shl
les
xchg
divb
movsl
or
cld
jne
jae
dec
and
stos
call
mov
mov
jno
lcall
and
out
cmp
adc
push
push
pop
push
jne
jg
scas
mov
pushf
mov
cwtl
addr16
jbe
inc
push
inc
push
push
add
fistpll
jle
mov
fimull
mov
mov
sub
cmp
les
xor
lods
dec
js
dec
int
aas
xchg
shll
mov
or
dec
sbb
mulb
flds
imull
cmp
cmp
cmpsb
addl
or
or
xor
js
pop
out
xchg
jo
je
data16
movl
fstps
shrl
inc
add
lock
pop
shr
inc
out
adc
mov
and
into
cmp
sbb
sub
ret
jno
das
inc
stos
arpl
xor
pop
fidivrl
iret
cmp
out
sub
inc
or
xor
sub
cmp
dec
push
sbb
mov
iret
pop
jns
jno,pt
fsubrl
push
sub
sahf
jns
pop
cmp
loopne
out
adc
arpl
andb
push
adc
ret
or
jns
pushf
mov
outsl
push
cmc
pusha
dec
push
out
shll
dec
mov
out
iret
fs
sbb
jnp
jno
xchg
testb
mov
sarb
push
ss
mov
test
loop
out
rolb
test
pop
popa
int3
push
or
into
mov
pop
imull
mov
shl
cli
adc
xchg
xchg
lods
add
pshufw
sub
fxtract
add
out
pop
and
and
add
pop
sti
add
leave
ret
lods
mov
cmovbe
adc
lahf
aad
add
push
andb
push
pop
lods
dec
aam
out
sub
in
jecxz
mov
xchg
mov
in
imul
add
mov
jnp
data16
aam
popf
mov
sub
fstps
dec
xchg
pop
es
cmp
sub
out
inc
mov
lock
aas
movsb
pop
xlat
and
or
jle
adc
push
xchg
pop
fsubrp
hlt
std
js
sti
bnd
sbb
iret
push
adc
in
adc
push
add
jb
gs
lcall
push
jne
mov
push
ret
icebp
call
mov
scas
ret
lret
inc
mov
pop
pminub
mov
int
ljmp
xchg
mov
inc
insb
sahf
mov
mov
add
push
sbb
aas
jae
xchg
mov
pushf
cmc
sub
shrl
inc
cld
cmp
sarl
ldmxcsr
adc
cmc
hlt
call
imul
and
filds
xchg
mov
outsl
xchg
xchg
insl
stos
arpl
iret
sbb
arpl
les
cmp
sbb
cltd
or
dec
xor
mov
scas
jg
push
jp
test
pop
insb
pop
mov
mov
mull
push
fiadds
test
fwait
or
lret
mov
xchg
xor
sub
mov
enter
fdiv
and
sub
scas
out
and
rol
nop
in
ret
mov
es
mov
pop
cmpsb
ret
lret
dec
out
xchg
push
insl
xor
push
or
mov
xor
cmp
test
dec
xchg
push
popf
sti
sbbl
shl
mov
dec
adc
rorb
mov
jo
push
je
mov
sub
mov
repnz
das
ljmp
test
andl
lock
xchg
test
adc
imul
pop
fwait
mov
test
jo
jecxz
pop
lahf
adc
inc
pop
xchg
lods
xor
fisubrs
inc
push
dec
sbb
add
adc
xor
test
insl
negl
ret
dec
scas
push
pop
pop
out
leave
outsl
jb
shll
mov
add
push
jge
sbb
cwtl
inc
call
mov
push
repz
insb
fcmovbe
and
xchg
jl
mov
adc
repz
xchg
jne
dec
mov
cld
mov
jne
mov
sub
lods
dec
hlt
and
cmpsb
fwait
lahf
pop
push
movzbl
jecxz
notl
pop
jmp
push
jmp
enter
hlt
je
push
pop
jge
mov
xor
cltd
xor
movsb
inc
add
inc
dec
mov
xchg
jns
cmc
xor
mov
adc
dec
inc
ss
jbe
adc
sub
push
stos
jecxz
int3
or
cmc
enter
int3
pop
in
add
mov
push
out
cli
cvtdq2ps
or
xor
mov
sbb
pop
mov
xor
or
jl
sub
lcall
and
pop
pop
sti
mov
fnstcw
mov
je
int
cld
jge
jno
cltd
inc
xor
push
jns
test
data16
pusha
test
lcall
cwtl
pop
pop
jb
loopne
or
mov
mov
push
xchg
iret
clc
lea
repnz
pop
jno
addr16
mov
xlat
test
shll
push
pop
mov
idivl
insl
subl
xor
rcll
mov
arpl
dec
xchg
mov
fs
jle
jns
inc
fsubr
test
repnz
mov
dec
mov
add
fwait
or
out
xor
sbb
add
push
loopne
adc
mov
scas
je
mov
mov
cmp
sbb
sbb
negl
pushf
lahf
mov
lea
inc
or
dec
orb
dec
imul
movsl
in
inc
out
sbb
dec
add
fcomps
cmp
pop
shrb
push
push
adcb
pop
and
cmp
cs
cmp
roll
loopne
push
hlt
mov
or
out
add
sti
pop
jge
mov
mov
std
add
js
jl
mov
loop
dec
inc
jbe
mov
fldcw
cli
sbb
inc
aam
mov
ljmp
pushf
mov
and
pushf
mov
cmpl
int3
rcl
mov
pop
xlat
incb
or
jge
mov
imul
test
sbb
mov
mov
push
pop
or
mov
push
lcall
push
cmp
cmpsl
pop
sub
outsb
mov
jmp
xor
subb
inc
pop
hlt
pop
xchg
dec
xchg
test
and
addr16
or
sbb
aaa
lock
dec
loop
movsb
xchg
pop
ficompl
inc
sub
add
ret
mov
jo
xor
adc
cwtl
jle
movsb
xchg
dec
jge
push
xchg
xor
stos
xor
dec
inc
jnp
lea
fwait
cltd
ja
push
cmp
cli
jl
popa
cmp
insb
cmp
cmpsb
xor
push
mov
mov
imul
aas
arpl
aas
push
and
dec
stc
xor
push
sahf
in
loopne
mov
psllq
push
popa
and
stos
dec
rorb
stc
jl
scas
dec
imul
xor
scas
sarl
stos
push
xor
shrl
xchg
sar
lds
mov
dec
in
jecxz
mov
or
cmp
movsl
add
inc
fcomps
sbb
cmpl
je
push
pop
jo
fs
or
fistpl
push
pop
mov
fbld
mov
mov
sbb
les
mov
and
dec
cwtl
mov
imul
and
jns
mov
sbb
test
add
fbld
sub
cltd
ss
pop
ret
scas
loope
push
inc
in
mov
ds
or
jns
xchg
jb
out
mov
mov
sub
pop
repz
xchg
or
std
es
mov
pop
call
cli
jp
je
xor
push
pushf
mov
inc
ret
fbstp
jle
repnz
fnsave
push
hlt
lahf
and
clc
cmp
aas
fstps
or
mov
inc
cmpsl
xchg
test
mov
xchg
sbb
mov
subl
movsb
adc
push
push
sbb
add
rorl
testl
xor
imul
lret
sub
cmp
addr16
cld
fwait
jmp
add
mov
cmp
sbb
imul
jecxz
sub
pop
sahf
mov
dec
js
or
and
int
pop
subb
addr16
aam
les
pop
rcl
mov
xor
ficompl
inc
push
fnsave
test
cli
sbb
iret
xchg
or
call
mov
mov
int
nop
cmc
shll
xchg
mov
sub
xlat
int
mov
aas
mov
cmp
lcall
add
cltd
outsb
jae
add
fildl
leave
jmp
push
test
imul
jle
mov
xchg
jae
sub
push
push
mov
lcall
mov
xchg
xchg
add
mov
dec
mov
push
sub
sbb
arpl
jbe
movsl
mov
outsl
sub
outsb
and
aas
gs
mov
scas
ret
faddl
push
add
fcoms
add
lret
fldenv
dec
cmp
inc
pop
cmp
psubw
scas
dec
inc
xchg
mov
mov
sarb
insb
into
pop
xlat
add
dec
test
mov
jns
or
mov
sub
cmp
xlat
inc
add
stos
movsb
push
int3
test
or
dec
xchg
inc
vcvtss2si
inc
sub
lahf
movsl
lret
pop
cmp
mov
les
sub
imul
mov
lods
jmp
add
dec
loopne
lcall
fs
or
lahf
cmp
imul
ret
out
cltd
in
rcrb
cmc
mov
icebp
aaa
dec
xchg
or
dec
andb
push
push
jl
loop
add
mov
popf
push
adc
xchg
dec
dec
push
mov
movsl
cmpsb
fs
mov
xlat
jno
or
test
cmp
push
fucom
sub
ret
dec
cmp
xchg
mov
sbb
push
aaa
cmc
fidivl
or
iret
cltd
add
cwtl
dec
sub
into
pop
in
shrd
mov
sub
out
jbe
sti
rcr
fdivrl
iret
sub
rclb
pop
aaa
fists
aam
xlat
sbb
cmp
jne
shll
dec
jmp
mov
pop
divb
inc
push
mov
xor
add
bound
jno
and
into
cld
pop
or
xchg
inc
stos
cmp
nop
popa
lret
fsubl
repnz
neg
mov
push
out
mov
orl
int3
jb
les
hlt
pop
add
add
xchg
repnz
jg
lret
push
mov
jne
ja
insl
mov
cld
and
mov
mov
and
mov
inc
mov
int
rol
mov
mov
pop
ret
sub
pop
and
sub
enter
xchg
sbb
std
inc
sub
mov
mov
fidivrs
insl
aad
jg
int
loop
sub
rcrl
jmp
jnp
out
pop
ljmp
cmc
and
inc
lret
sbb
mov
sub
lods
jo
movl
xchg
and
jecxz
mov
inc
sbb
ret
sub
out
xchg
sti
push
cwtl
testl
imul
adc
ljmp
into
mov
sarl
mov
pop
or
ss
outsb
lods
ret
sub
fidivrl
mov
xchg
mov
lods
cmpsb
add
mov
add
adc
gs
jbe
mov
rcr
add
test
lock
mov
idivl
and
add
sbb
dec
cmp
gs
dec
xor
mov
mov
jecxz
or
or
push
push
mov
pop
push
cmpsl
jge
xchg
in
int3
adcl
aam
mov
sbb
outsb
das
add
fwait
mov
adc
leave
add
popf
sti
fsubr
data16
mov
adc
and
jecxz
fmul
mov
iret
sbb
inc
hlt
je
mov
mov
cmovae
hlt
dec
cltd
push
outsl
xchg
xor
loop
sbb
mov
jle
fnsave
mov
or
adc
and
test
das
pop
sub
mov
aas
pop
push
les
dec
adc
lahf
ds
jg
out
cmp
outsb
mov
xchg
std
jecxz
jo
test
fsubrl
jge
int3
movsb
and
cmc
test
mov
cli
adc
popf
xchg
arpl
inc
inc
aad
and
xchg
shlb
adc
das
jnp
mov
pop
test
fcomp
stc
pop
add
mov
mov
int
push
inc
mov
mov
int
shlb
mov
adc
mov
dec
mov
sub
icebp
test
xchg
fucomi
xor
lods
std
cld
and
ljmp
pusha
outsb
sti
fsub
push
mov
aas
enter
cmp
cli
ret
lods
repz
cmc
out
fst
pop
mov
aad
mov
jmp
cwtl
cmp
shll
in
sbb
jns
clc
in
mov
xchg
or
cmc
call
mov
xchg
outsl
push
mov
pop
out
sub
int
mov
sub
int3
fistpl
push
adc
clc
jge
dec
mov
xchg
icebp
cmc
call
fmuls
std
stos
shll
fidivrs
leave
call
imul
mov
inc
scas
adc
daa
mov
mov
mov
inc
push
mov
and
pop
push
rorl
mov
inc
or
or
and
adc
dec
inc
and
not
inc
xchg
jnp
fsubs
cli
and
sti
and
pextrw
jbe
xor
sub
add
add
or
mov
and
add
jo
xchg
add
push
sti
cli
xchg
sub
or
pop
inc
add
test
adc
jns
mov
adc
cmp
into
pop
aaa
mov
pusha
test
mov
inc
loop
loop
test
jb
or
xchg
fisubl
andl
cli
mov
movsb
xchg
push
xor
mov
loope
or
test
dec
cmp
add
and
mov
insb
xlat
sahf
inc
mov
out
mov
mov
jp
inc
add
sahf
shll
sub
jp
xchg
enter
notl
sub
push
dec
push
push
lds
int3
add
lahf
ja
push
call
dec
push
addr16
cmp
ljmp
and
outsl
mov
add
cwtl
sahf
fwait
adcb
dec
shrl
in
gs
aas
jp
mov
xchg
mov
ss
xlat
xchg
xchg
push
jmp
ret
lcall
call
loop
lret
faddl
pop
jge
loope
ljmp
mov
mov
adc
orl
out
scas
sarb
cltd
mov
cmpsl
mov
fsubrl
mov
outsb
rcl
cltd
stos
cmpsb
mov
adc
jge
mov
jle
dec
pop
push
ret
sub
mov
add
test
test
push
pop
jnp
scas
mov
ljmp
cmp
clc
shll
and
orb
jns
imul
sbb
and
leave
cmp
pop
std
leave
dec
or
fisttpl
outsb
ss
int3
aad
jg
or
add
test
negl
and
movsl
or
addl
psubd
fldcw
dec
mov
jo
inc
fcmovbe
xor
add
sub
into
lcall
jno
xor
sub
xchg
adc
or
inc
sub
in
mov
xor
or
mov
sub
dec
loope
adc
pop
dec
outsl
mov
pop
mov
push
mov
pop
inc
cli
xchg
ljmp
add
inc
add
mov
test
xchg
call
dec
stos
clc
enter
sub
inc
and
dec
jg
xchg
mov
push
xor
cmp
add
shrb
scas
lahf
and
lods
xchg
jnp
push
out
test
div
loope
movsl
pop
push
ficompl
sahf
xchg
aad
sub
sub
mov
mov
jo
inc
ja
setle
sbb
mov
jg
lds
push
push
clc
push
jno
iret
xor
xor
and
mov
sbb
pmuludq
out
test
sbb
adcb
xchg
in
or
insb
dec
jecxz
fildl
mov
cmpsb
xchg
fwait
aad
scas
repz
nop
das
xchg
lods
int
and
mov
ds
adc
cmp
and
xor
mov
sub
dec
loope
addr16
sbb
cmp
lods
outsb
push
jp
cld
sub
pop
inc
mov
lods
or
aas
out
scas
pop
jo
cmpsb
mov
lods
sbb
imul
lahf
mov
xchg
mov
inc
repnz
lods
push
jbe
mov
cmpsb
rcll
out
scas
and
test
cs
inc
pop
imul
cmp
aad
sbb
fisubrl
test
movsb
mov
dec
mov
fiadds
dec
rclb
repnz
cwtl
rcl
push
fcomps
hlt
pop
jl
pop
add
push
or
dec
ud2
and
push
jo
imul
mov
mov
adc
mov
or
clc
fldenv
test
test
xlat
and
jae
add
cmp
fsubl
dec
mov
rcrb
adc
mov
imul
and
dec
mov
dec
adc
stc
xor
dec
xor
mov
xchg
add
xchg
lret
imul
std
scas
je
jne
inc
ss
dec
inc
sti
and
xchg
add
mov
dec
pop
jmp
js
sub
ret
shrb
mov
cmp
cmpb
iret
in
hlt
stos
jnp
hlt
out
add
push
pop
mov
jnp
ror
cmp
into
xor
pop
mov
xor
pop
neg
fildl
pop
fdiv
sub
sbb
push
mov
in
xor
and
cmc
out
je
std
cld
add
cmp
gs
sbb
jmp
mov
test
sahf
cmp
insl
out
imul
inc
push
sbb
aad
jne
fimuls
push
or
nop
push
jecxz
test
jo
jo
xlat
sbb
ffreep
lret
loope
aad
inc
mov
add
adc
sarb
loopne
ret
imul
mov
fisttps
jle
fcoml
jmp
fsubrl
sti
push
in
and
push
icebp
cld
inc
push
jo
cwtl
mov
aas
fadd
cmp
enter
push
cmp
cmc
arpl
adc
mov
call
cmpsl
inc
lcall
nop
mov
mov
mov
push
jne
pop
mov
pop
out
sbb
popa
pop
aad
jge
ret
out
xchg
orl
gs
stos
adc
inc
call
mov
imul
push
icebp
cmp
push
inc
ret
adc
les
sbb
movsb
jecxz
stc
stos
adc
inc
push
inc
jge
popf
call
shrb
cmp
clc
lret
and
enter
aam
jmp
jns
xchg
adc
add
movsb
fcoml
leave
inc
cld
pushf
mov
out
push
mov
imul
cmpsb
push
outsb
outsl
fcomps
fs
stos
xchg
sbb
or
imul
add
es
outsb
mov
sbb
jae
push
sbb
lods
jb
push
mov
pop
fldt
je
out
rclb
or
aam
pop
add
and
test
jbe
sub
stos
adc
shll
jae
add
or
adc
pop
adc
sub
lock
lods
push
loop
test
js
je
mov
sbb
cmpsb
in
inc
xor
mov
icebp
sub
aad
int3
cmp
xchg
inc
xor
mov
push
das
flds
mov
out
and
ljmp
mov
orl
sti
call
imul
xchg
cs
clc
jae
push
ret
mov
cmp
xchg
dec
jns
push
pop
loope
adc
cmp
fwait
loop
and
pop
lds
cmc
xor
push
fwait
inc
push
or
les
movsb
and
mov
arpl
sbb
cmp
push
cmp
or
jmp
jns
or
jae
ds
adc
imul
adc
aaa
enter
test
sub
sbb
pop
dec
add
sarb
flds
xor
dec
ret
and
cmp
daa
sahf
lcall
adc
sbb
iret
xor
pcmpgtw
xor
sti
je
daa
stos
lods
subl
cs
inc
inc
enter
int
sub
mov
dec
sub
cld
mov
int
mov
pop
or
addb
xchg
jb
mov
mov
pop
mov
sub
sub
sbb
jne
fnstenv
gs
out
push
sbb
ret
add
in
jge
lods
addl
mov
inc
dec
or
jle
mov
sub
into
repnz
stos
fisttpll
mov
or
rolb
lock
xchg
jns,pn
stc
scas
and
mov
lea
cmp
outsb
sbb
mov
mov
add
icebp
pusha
or
stos
in
dec
fisubrs
shlb
xchg
sub
sbb
cwtl
xor
dec
scas
int
dec
fs
out
stos
add
xchg
push
mov
dec
xchg
das
lahf
dec
jb
icebp
gs
aam
pop
pop
out
jae
je
lods
cmp
aas
cmp
sub
jl
mov
sti
inc
pop
dec
cmpsb
decl
and
pop
and
cmp
cmp
hlt
mov
and
bound
xorb
pop
stc
cli
add
add
popa
rol
push
lock
sarb
popa
ret
jbe
sbb
sub
inc
push
mov
lea
cld
dec
adc
mov
pop
adc
inc
xchg
mov
les
js
ja
xor
inc
push
jle
in
rdtsc
popf
fdivs
stc
and
jnp
pop
outsb
ljmp
push
mov
push
sub
imul
jl
std
add
cmp
xchg
adc
dec
insl
hlt
popf
pop
outsb
les
sub
ljmp
push
sbb
fidivrs
bound
cmp
mov
test
adc
or
xlat
aam
add
cli
arpl
xor
pop
leave
xor
mov
mov
push
int3
lcall
hlt
xchg
dec
cmp
jl
xor
dec
out
push
dec
pushf
mov
out
sbb
leave
inc
push
enter
adc
mov
popf
pushf
ljmp
cli
cs
ss
fdivp
mov
jno
mov
pop
movsb
adc
movsl
xchg
lcall
and
add
mov
pop
andl
insl
or
pop
cmp
cmp
scas
cmp
xor
jb
shrb
mov
add
cld
inc
test
loop
js
outsl
jmp
popa
jl
cltd
cmc
xor
mulb
inc
sbb
aaa
cmp
shrl
or
ljmp
iret
xchg
mov
sahf
jl
outsl
lea
sub
inc
nop
lea
mov
pushf
xchg
lods
fistpl
jmp
inc
mov
sbb
out
fnsave
xchg
or
add
sbb
jo
fnstenv
push
push
cmp
pop
pop
dec
sbb
push
cmpsb
shll
jo
mov
mov
stos
mov
mov
into
mov
cmp
inc
dec
jae
loop
repnz
pushf
or
lock
pop
outsb
xchg
or
mov
dec
repz
es
cmp
cmp
lds
notb
mov
xchg
or
pop
dec
jle
loop
pop
inc
inc
push
shll
push
loop
xchg
pop
nop
mov
in
cmp
sbb
fisubs
jae
lods
in
xchg
jbe
xchg
negb
fwait
push
loopne
shrb
inc
xchg
mov
sub
mov
xchg
push
mov
or
add
outsl
dec
sbb
fcomi
leave
mov
insl
ja
and
repz
push
stos
xor
insb
cmp
jnp
add
cmp
mov
sbb
xchg
or
inc
nop
cmp
lcall
dec
or
xchg
cs
sub
inc
xor
repnz
es
pop
mov
cli
lahf
addr16
adc
arpl
rcr
lods
nop
and
and
mov
jb
iret
mov
ljmp
es
pushf
jo
cmp
adc
lods
or
cli
fwait
aad
test
xor
cmp
or
xor
pusha
adcl
pop
lahf
dec
aas
insl
sub
inc
mov
mov
push
add
push
xchg
add
mov
aaa
pop
sub
xor
pop
sub
mov
sbb
sub
les
push
out
cmp
jge
push
mov
inc
adc
shlb
push
jecxz
mov
imul
movsl
mov
sub
push
not
out
lds
dec
cmpsb
or
fsubr
sarb
xchg
mov
mov
mov
push
and
out
sbb
in
imul
mov
add
xchg
lcall
inc
lock
hlt
shll
repnz
sub
inc
mov
push
js
xorl
out
sbbb
push
divl
pop
fwait
in
sub
in
lock
push
sub
test
mov
sbb
fsubs
push
xchg
push
or
stc
ljmp
sub
jae
and
insb
js
mov
loop
daa
lret
push
push
stos
inc
mov
shr
imulb
jl
push
push
daa
rcll
xlat
add
mov
ja
in
out
jp
pushf
mov
inc
sub
insb
push
cs
pop
ljmp
lods
xchg
mov
jne
push
mov
lods
es
cltd
xchg
lods
sbbb
lret
imul
mov
dec
insb
xchg
sbb
add
xchg
pop
xor
pop
add
mov
je
mov
dec
fildll
movsl
push
lods
clc
push
cs
or
jle
ljmp
pop
adc
mov
pop
inc
cmpb
std
andb
mov
leave
sub
loope
adc
cli
stos
jg
in
lods
rorb
mov
lret
js
scas
and
insb
idivb
mov
jle
out
das
push
sub
jmp
inc
or
or
adc
push
xlat
xchg
mov
inc
ja
xchg
gs
ja
nop
lods
shrb
jg
add
cmp
leave
hlt
ret
pop
clc
lods
imul
mov
inc
or
in
or
stc
fs
fs
xor
xchg
and
scas
fs
data16
inc
jg
xor
or
ljmp
pushf
jae
xchg
cld
cmp
dec
sbb
push
cmpsl
out
aaa
iret
cmp
std
mov
xchg
movsb
dec
in
addr16
clc
bound
mov
or
xchg
sub
jge
pop
inc
sbb
es
sub
xchg
mov
fdivrs
pop
mov
mov
push
push
jmp
xchg
je
sub
shll
or
mov
test
test
shll
adcl
fnstenv
not
shll
sub
loop
jecxz
sbb
addr16
movsl
out
dec
shll
fadd
xor
shll
jne
push
not
jno
sub
js
rcr
add
inc
xchg
mov
and
ja
pop
bound
stos
pop
fs
xchg
sbb
out
es
xchg
in
mov
pop
fidivs
mov
mov
inc
xor
mov
jmp
roll
adc
push
xor
inc
mov
push
dec
cmc
mov
xchg
sub
jecxz
fadds
hlt
or
mov
js
repnz
xchg
lcall
dec
and
xchg
push
scas
jecxz
pop
or
cld
loopne
inc
add
outsl
call
inc
aas
movb
xor
cs
imul
add
mov
mov
lds
push
and
dec
int3
sub
pop
push
stos
sahf
cmpsl
movl
adc
outsb
jle
mov
pop
jl
ja
int
inc
add
lea
shlb
sahf
mov
cmpb
out
mov
pushf
mov
and
pop
test
cltd
pop
pop
mov
lods
adc
test
andb
xorb
outsb
imull
push
sbbb
loop
ljmp
sarb
pcmpgtb
out
stos
xchg
sub
cmpsl
pop
dec
cmpsb
popf
mov
xor
sub
clc
inc
out
fimuls
add
mov
jge
fdivrp
fwait
aad
fstl
xchg
pusha
pop
and
sbb
xchg
inc
push
adc
inc
pushf
les
sbb
mov
stos
jbe
cmpsl
roll
orb
lahf
cli
les
inc
jmp
fadd
push
lods
xchg
pop
enter
loope
jg
mov
mov
mov
add
or
cld
add
pop
lret
in
mov
mov
in
jg
push
fiaddl
imul
pop
fisttpl
test
xchg
jo
and
pushf
xchg
sub
std
test
test
pushf
lahf
movsb
sbb
sub
fcomi
sbbb
int3
js
jle
pushf
hlt
sbb
cmp
xchg
les
inc
pop
push
mov
mov
cmp
xchg
sti
fldcw
xlat
test
rcrl
ret
adc
fcmovbe
repz
inc
int
icebp
loopne
jo
push
jb
sahf
movsb
fnstcw
mov
inc
add
pop
cltd
vpextrw
shll
xchg
xchg
add
ror
loopne
stos
in
jle
fsub
mov
negb
inc
popf
aas
jnp
fidivrs
lods
arpl
test
xor
push
jae
out
adc
push
jb
mov
cmc
loopne
add
roll
pop
xchg
mov
dec
icebp
cwtl
orb
sbb
and
mov
imul
in
lea
ja
dec
loop
popa
imul
ret
ds
xor
xor
dec
mov
jne
jne
and
aad
lods
pop
add
sub
icebp
mov
int3
xor
xchg
sarl
and
mul
dec
xchg
es
xchg
push
stc
rol
and
inc
dec
adc
xchg
adc
xor
pushf
cld
loop
lods
iret
addl
add
lods
fmull
sub
pop
cmp
or
popf
mov
lds
adc
stos
mov
push
mov
and
in
je
xchg
aad
mov
outsb
mov
in
inc
or
arpl
mov
add
xor
inc
leave
loopne
ss
test
cwtl
addb
and
icebp
test
jnp
dec
or
js
nop
movsb
je
into
ds
mov
mov
xor
inc
sbb
lret
push
outsl
mov
add
ror
ss
inc
in
ret
pop
test
or
sbb
mov
xorl
in
scas
sub
mov
pushf
loope
inc
test
movsb
jmp
xor
in
dec
xor
cld
or
and
inc
xchg
cltd
frstpm(287
fadds
mov
cmp
aaa
sti
lret
mov
sub
mov
rclb
in
xor
out
repnz
dec
loopne
push
lret
cmp
push
loop
mov
adc
les
push
mov
aam
pop
add
jnp
mov
add
push
mov
adc
pop
test
loope
bound
out
and
fwait
lea
pop
lods
xor
mov
lods
cld
inc
add
in
jmp
push
je
jp
xchg
mov
in
iret
or
xorl
fidivl
pop
or
cmp
scas
cmc
pop
bound
jb
xchg
lods
xchg
cmc
sbb
fsub
enter
shll
aad
js
aad
push
sahf
fcomip
dec
rcrb
ja
pop
das
jle
dec
ds
sub
cld
pop
add
je
adc
in
xchg
xor
push
jbe
cmp
xor
stc
jle
rcr
xor
insb
ret
loope
dec
data16
int
sbb
pusha
insl
adc
inc
jle
xchg
test
jo
mov
fnstcw
push
int3
mov
shl
jg
enter
das
pop
jl
dec
inc
cmp
lock
js
popf
cmp
dec
xlat
arpl
scas
pusha
jnp
jb
arpl
xchg
sub
mov
lods
and
shrb
inc
sub
fs
sub
dec
outsb
or
mov
in
fdivs
push
mov
pop
mov
ss
pop
in
cli
movsl
test
inc
jne
inc
sbb
mov
mov
das
jl
adc
into
clc
scas
lds
pop
pusha
jae
and
pop
sbb
cmp
loop
mov
jo
pop
adc
in
lahf
jb
pushf
addl
sbb
testl
xorl
lret
pop
dec
jns
sub
inc
fucomip
int3
add
jle
in
inc
push
fwait
call
sub
xchg
rorb
fiaddl
pop
enter
nop
mov
mov
mov
sub
pop
jle
test
push
cmpsb
adc
enter
mov
jmp
ret
xor
sub
lahf
in
in
popf
fs
js
ljmp
adc
lods
mov
idivb
inc
iret
or
push
lcall
stc
pusha
test
dec
and
loope
jle
mov
cmc
pop
test
insl
add
cmpsl
incl
jge
in
in
pop
push
sub
add
mov
inc
test
sbb
pusha
push
ror
dec
jb
lds
pop
adc
pop
inc
divb
xchg
xchg
or
insb
or
push
mov
sbb
pop
cmp
push
imul
aas
fstl
adc
outsl
clc
dec
add
cmp
bound
jmp
outsl
push
sub
jnp
cmp
dec
mov
sbb
pop
cmp
adc
or
pop
lret
in
xchg
adc
mov
mov
lods
adc
mov
aad
ficompl
push
nop
pusha
cmp
mov
adc
inc
insb
jne
aas
outsb
cld
test
int
popf
fucomi
and
mov
shrl
jbe
pop
sub
rcr
lahf
addr16
xchg
pushf
cmp
push
mov
inc
xor
xchg
adc
mov
jne
jmp
dec
test
insl
shrb
cli
add
jge
inc
lds
ficomps
call
xor
pusha
cmpsl
xlat
sbb
jb
imul
xlat
or
ficompl
jp
xchg
xor
xor
pop
imul
aam
ja
sar
xor
and
pop
sbb
cmp
push
clc
dec
xchg
and
push
sti
xor
xchg
call
sbb
push
pop
jge
or
mov
jns
cmpsl
adc
divl
lods
jae
int3
lret
mov
push
mov
xor
sbb
shll
jbe
xor
arpl
and
add
lret
ds
testb
insb
rorb
xchg
cmp
outsl
pop
sti
xor
iret
xor
sub
cli
lret
or
outsl
inc
out
push
lods
sub
loopne
sti
or
inc
cltd
pusha
pushf
add
mov
mov
xor
into
cmp
jo
adc
sbb
icebp
mov
sbb
mov
pusha
sti
ss
mov
mov
or
pop
repz
jb
mov
iret
push
xchg
xor
scas
lock
adc
int3
mov
aas
xchg
mov
rclb
mov
jnp
sub
imul
pop
leave
inc
pop
mov
divl
mov
push
cmpsl
in
scas
jb
pop
xchg
ret
dec
mov
cmp
mov
or
or
xor
mov
fnsave
stos
pop
bound
xor
int3
iret
push
cltd
mov
jmp
mov
mov
xchg
push
call
into
mov
xchg
stc
lahf
mov
movsl
jmp
jg
roll
in
jl
ret
inc
cmpsl
popa
call
dec
daa
faddl
pop
lock
mov
fisttps
push
fsubrs
or
adc
pop
jmp
adc
test
adc
int
in
push
loop
push
in
pop
mov
jbe
insb
addr16
bound
mov
push
rcrb
add
pusha
stc
xchg
pop
inc
cmc
lods
sub
aad
dec
enter
push
pop
std
add
loope
xchg
and
in
xchg
inc
addr16
ljmp
stos
cwtl
dec
mov
les
fdivrl
bound
mov
inc
popf
adc
mov
mov
stos
out
mov
inc
lret
fcomps
cmp
call
scas
inc
cmp
cli
inc
pushf
cmp
stos
repz
pop
outsb
cli
xchg
xchg
mov
sahf
test
mov
mov
xchg
loop
cmp
inc
inc
out
push
das
ljmp
jo
sbb
cmp
ret
jno
push
push
adc
fidivs
cmp
cmp
or
outsl
xor
in
ret
dec
test
int
xchg
aad
ss
cmc
call
xor
das
adc
sarl
push
and
mov
repz
mov
sub
xchg
lods
clc
jo
xlat
je
cmp
repz
mov
cld
out
hlt
push
outsl
xchg
call
cmp
aam
adc
repnz
leave
fdivrs
push
pusha
pop
dec
jnp
icebp
mov
mov
jb
shll
mov
push
or
mov
sub
add
icebp
pop
sbb
mov
mov
jae
iret
cs
dec
in
je
mov
pop
mov
jle
test
loope
hlt
aaa
ret
in
push
negb
sbbl
mov
fs
data16
add
fldl
repz
popf
aas
test
repnz
ret
addb
mov
stos
dec
pop
pop
dec
cwtl
cld
cmp
cs
push
enter
jle
inc
clc
rcl
insb
iret
add
in
neg
hlt
adcl
dec
ljmp
aas
jb
les
outsl
sub
bound
popf
dec
cli
pop
fsubp
sarl
inc
outsb
push
add
or
sbb
and
mov
ljmp
sahf
push
lahf
insl
pop
in
cmp
popf
mov
adc
insl
in
xor
and
fwait
popa
rclb
jp
inc
cmp
subb
dec
jo
loope
stc
pop
dec
ja
xchg
xchg
dec
stc
or
cmp
and
pop
sbb
mov
testl
push
sbb
scas
ret
jmp
jg
or
inc
cmp
ror
icebp
or
mov
push
mov
cmp
push
cwtl
mov
push
out
ss
leave
dec
pop
mov
or
xlat
inc
aam
xchg
stos
ljmp
fistps
lret
add
repz
pushf
loop
or
push
sub
mov
test
mov
pusha
pop
popa
cmp
jo
cmp
out
push
test
daa
lds
add
jmp
fcmovnbe
punpckhdq
lcall
cmpsb
loopne
imul
mov
dec
xor
js
xor
in
xchg
inc
push
pop
mov
enter
push
arpl
pop
sbb
repnz
stos
jle
inc
outsb
adc
push
adc
cmp
mov
ja
or
or
mov
sbb
fidivl
xchg
jo
loopne
pop
inc
jecxz
xor
ret
insl
cmc
jge
push
imul
xchg
jle
push
fldl
fisubs
push
shrd
push
jecxz
loope
cmpsb
aad
loop
sub
aad
movsb
aaa
dec
aad
inc
pop
dec
inc
lods
js
jne
arpl
leave
sub
je
inc
fmull
scas
out
std
xor
pop
xor
mov
xchg
fxch
and
jno
jmp
imul
aaa
add
mov
fsts
lea
dec
in
mov
data16
mov
fs
cmp
or
pop
and
jbe
push
xor
fwait
mov
inc
and
xor
jne
addb
xchg
ret
stos
xchg
test
mov
mov
jge
mov
insb
fwait
cmp
lcall
add
out
dec
inc
and
mov
jmp
mov
stos
inc
sbb
xchg
jnp
out
mov
leave
or
lcall
int
decb
repnz
add
sbbl
or
mov
jb
in
cmpsb
jb
add
pop
loop
inc
sbb
xchg
cli
pushf
mov
pop
push
inc
ds
and
pop
ret
mov
rorl
cmpsb
loopne
stc
dec
inc
sub
jo
ror
dec
movsl
mov
popf
rcrb
cmp
fsubl
int3
xchg
or
mov
jmp
ss
cltd
adc
mov
data16
faddl
cmp
or
jb
fldenv
xor
adc
push
lcall
lods
jg
in
cltd
aas
mov
mov
mov
xchg
shrb
pop
mov
sub
pop
pop
in
sahf
sub
push
pop
pushf
leave
xor
sbb
je
mov
mov
sarl
cmp
pop
arpl
fs
push
jno
pop
or
xchg
xchg
xchg
xchg
mov
in
shll
inc
mov
dec
sub
mov
mov
aaa
mov
mov
sub
sub
in
dec
jne
inc
dec
sbb
push
ss
push
or
xchg
dec
gs
push
jns
mov
push
data16
push
dec
jle
jle
lret
stos
leave
test
cmc
jo
je
movsb
cld
inc
mov
inc
cmp
or
movsl
dec
jbe
push
pop
push
xchg
ret
imul
adc
lahf
jp
inc
and
in
aam
je
lds
aas
xchg
test
and
lds
gs
ret
mov
push
xchg
sbbl
push
fisubl
das
pop
ljmp
cmovg
adc
stc
add
xchg
pop
add
xchg
push
fisttps
add
movsl
inc
jl
inc
in
pushf
xchg
adc
push
jmp
inc
mov
insb
pop
pop
lret
aaa
sbb
shlb
cmpsl
adc
mov
cld
jo
dec
add
mov
jge
mov
pusha
push
sub
cmp
or
daa
cmpsl
mov
aas
mov
insb
inc
jbe
or
fs
movsb
jecxz
pop
insl
jnp
ljmp
das
xchg
lods
mov
fisttps
push
test
enter
jg
xchg
adcl
adc
xchg
sti
ret
cmc
dec
imul
cmp
data16
daa
sbb
pop
inc
mov
stc
ret
clc
loope
lods
xor
sbb
movsb
sbb
out
sbb
push
add
aam
loopne
cmpsl
xor
rcr
inc
or
jns
add
inc
ret
fisubs
or
movsb
xchg
bound
mov
out
je
inc
mov
dec
fbld
jbe
jge
mov
pop
cli
insb
dec
push
sbbl
cpuid
fcomps
cmc
mov
cmpsl
mov
pop
imul
scas
pop
sub
pop
xlat
mov
arpl
arpl
xchg
mov
push
cmc
lret
ds
or
scas
mov
test
loop
mov
xor
sar
ret
or
dec
jp
and
stos
sbb
sbb
sbb
mov
mov
cmp
cwtl
cwtl
repz
cmp
gs
pop
pushl
lcall
ds
pusha
cmp
inc
out
adcl
movsl
lea
mov
xor
mov
or
test
and
push
adc
cmpsb
pop
fisubrl
aam
add
dec
xchg
or
and
enter
cld
add
adc
loop
out
jecxz
int
fmuls
and
dec
mov
outsl
push
pusha
aas
je
xchg
hlt
hlt
xor
out
pop
mov
icebp
dec
and
in
push
push
test
jae
lods
jecxz
inc
jge
shrl
xor
pop
incb
xchg
leave
and
out
lret
pop
xchg
mov
add
add
loope
out
mov
and
test
leave
xchg
xor
or
insb
dec
mov
dec
jbe
inc
sbb
out
mov
fld
cmpsl
inc
sarb
mov
cwtl
cld
pop
into
dec
mov
mov
cmc
aas
imul
push
jae
pop
mov
stos
mov
ljmp
popa
xchg
aas
addr16
popf
pusha
jae
std
xchg
xor
in
adc
test
aas
jb
ds
xchg
mov
ret
fwait
add
sbb
adc
mov
stos
push
adc
cmpsl
outsl
lock
sbb
cmpsb
les
xchg
and
mov
aas
xchg
mov
and
push
addb
fstl
ljmp
ret
shr
or
pop
mov
into
lods
out
inc
push
adc
sub
bsf
push
inc
scas
sub
push
and
xchg
pop
lcall
das
arpl
jle
fldenv
or
mov
repz
dec
out
mov
mov
in
dec
jb
pop
sub
stc
dec
fs
cmpsl
xchg
or
mov
push
jge
aas
loop
dec
jbe
xor
loop
movsb
and
mov
xor
out
push
xor
cmc
insl
jbe
insb
mov
sbb
dec
jno
jae
xor
adc
xchg
xchg
jmp
xorl
inc
cltd
mov
or
mov
cltd
pop
lods
sbb
mov
sbb
jns
inc
mov
or
and
icebp
pop
cmp
daa
call
sub
inc
mov
sti
mov
inc
or
or
xchg
cltd
mov
outsl
fisubs
push
mov
data16
int3
push
jp
popf
ror
in
sbb
mov
scas
push
push
pop
stos
sbb
push
push
cmc
cmp
data16
repnz
jbe
sub
jno
test
je
in
pop
xlat
mov
jecxz
jno
jge
inc
dec
aas
adc
jne
mov
rolb
cli
filds
inc
xchg
pop
data16
add
sub
vfnmsub231ss
fldenv
pop
cmc
cmpsl
sub
mov
ljmp
cli
sub
mov
dec
fs
addr16
rorl
cmp
xor
and
cwtl
and
das
mov
in
mov
push
inc
adc
add
push
adc
inc
rcrb
fsub
pop
cmc
jecxz
lds
inc
pop
mov
das
cmp
into
add
cmp
fiaddl
mov
pushf
mov
pop
fcmovnbe
pop
mov
mov
shlb
jp
mov
cmpl
sarb
movsb
sub
push
stos
mov
add
pop
jg
xor
mov
dec
daa
sbbb
shlb
loop
adc
fwait
adc
pop
ret
cld
cli
movsb
mov
mov
icebp
mov
insl
adc
push
adc
xor
shlb
mov
fs
xchg
sub
pusha
cld
inc
ret
inc
sub
in
inc
out
mov
scas
in
mov
out
loopne
fsubrs
jno
mov
pop
cs
push
mov
divl
call
pop
inc
mov
pavgw
cltd
add
add
adc
lods
scas
sahf
int3
sub
movsb
cld
xchg
lcall
dec
sti
arpl
movsb
js
sub
cmp
mov
out
iret
ret
int
jl
mov
outsb
cmc
mov
mov
stos
push
int
jns
or
sub
mov
lods
addr16
cs
sbb
subb
pop
iret
sbb
adc
ret
roll
outsb
xor
mov
sbb
cmp
cmp
aas
sub
inc
mov
pushf
pop
popa
outsl
dec
lock
add
mov
or
mov
jbe
mov
imul
cmp
fadds
jle
add
xor
es
rcrl
lods
rol
mov
mov
adc
mov
xchg
push
dec
push
stc
dec
xchg
push
leave
scas
ds
dec
int
mov
shrl
push
lahf
movsl
int
cmp
inc
call
je
cmp
lods
repz
adc
add
hlt
pushf
ret
lea
in
jnp
sub
mov
lods
cmpsl
lret
repnz
loop
repz
or
pop
add
cld
popa
dec
call
sbb
mov
fiaddl
clc
mov
js
cs
add
daa
jmp
fsubrp
lret
sub
cmp
xchg
or
inc
adc
and
dec
or
sub
mov
jmp
scas
push
adc
xchg
adc
dec
cli
xchg
push
add
and
push
call
lock
dec
fisubs
adc
ret
loop
aam
xor
mov
xor
jg
pop
pop
mov
xor
adc
or
insb
jmp
dec
pop
icebp
or
inc
pop
pop
int3
lret
dec
pop
mov
aad
sbb
daa
fildll
add
rcll
jne
push
xchg
xchg
pop
pop
cmp
cltd
push
popa
aaa
adc
dec
mov
adc
stc
fldenv
inc
xchg
lods
rorl
ss
scas
scas
sbb
cltd
lock
adc
or
and
and
mov
xchg
mov
popf
sbb
test
ljmp
aas
cmp
lahf
pop
pop
push
xor
inc
mov
sbb
xchg
xchg
add
inc
or
jb
push
incl
dec
addr16
sahf
inc
bound
insw
inc
insl
push
jno
ljmp
add
jecxz
jb
dec
cmp
xchg
pop
mov
dec
sbb
sbb
adc
mov
fs
push
nop
ffreep
mov
das
adc
dec
fdivl
data16
popf
int
mov
in
fmull
insl
adc
stos
js
int3
push
dec
cltd
in
fldt
fistl
xchg
test
cmp
jl
xchg
and
outsl
iret
and
inc
xchg
xchg
mov
das
int
push
fstpt
cld
fimull
rorl
jnp
adc
pop
loop
adc
or
pop
xchg
mov
arpl
mov
xor
cld
cli
in
or
incb
stos
and
sbb
test
mov
int3
add
pand
shrb
sub
lcall
scas
out
outsb
fcoml
jbe
sub
adc
dec
nop
xchg
add
movl
test
fs
pop
scas
imul
xor
push
push
cmp
jnp
pop
and
or
mov
test
test
hlt
inc
out
xor
jp
pop
or
movsl
xchg
push
inc
loopne
pop
adc
int3
decb
mov
xor
jecxz
aad
jg
andb
sbb
fcompp
jecxz
mov
jb
xchg
and
in
sbb
addb
lcall
repnz
js
rcr
add
mov
lret
daa
pop
outsb
lods
test
adc
jae
xor
roll
idiv
lods
notl
movsb
sub
cli
out
sar
push
xchg
hlt
arpl
jl
aam
jecxz
cwtl
hlt
jl
sarb
ss
add
mov
ljmp
lock
das
push
sbb
pushf
subl
aas
push
test
push
inc
sub
push
dec
lcall
loop
xchg
jbe
cmp
cmp
mov
dec
or
pop
test
orl
sub
push
xlat
test
in
dec
cltd
addb
sbb
mulb
cmp
adcb
or
aam
fisttps
xor
lea
test
roll
pushf
push
cli
test
jns
jno
push
test
popf
inc
mov
xchg
cli
movsl
test
pop
sarb
les
push
test
sbb
push
cmp
repz
mov
xchg
lock
in
inc
orb
aaa
dec
loope
cmp
dec
jns
jp
fcomps
push
mov
add
add
ja
lahf
cmp
lcall
pop
outsl
push
push
sbb
cli
lds
daa
insl
lahf
movsb
repz
sbb
test
cmp
xchg
fs
aas
ret
fs
pop
push
int3
in
in
sarb
imul
mov
and
fwait
test
jae
outsb
shl
fiaddl
ret
xor
push
mov
add
mov
jbe
in
add
les
and
adc
aad
ljmp
sbb
mov
jns
insb
insl
cmc
push
dec
sub
sbb
push
ficompl
mov
sbb
insb
mov
jo
ret
pop
xor
or
sahf
lock
inc
xor
xchg
fistpl
push
int3
xchg
xor
xchg
dec
cmp
or
lds
adc
gs
or
xchg
shlb
and
dec
or
dec
rcrl
cmp
dec
inc
int
subb
shl
sbb
xor
test
cmp
je
into
mov
lds
jl
and
jno
inc
ss
ljmp
rcr
fxch
repnz
add
jg
popa
enter
fiadds
pop
mov
popf
icebp
ljmp
mov
cmpsl
mov
xchg
in
into
in
movsb
mov
cmovl
push
push
and
inc
mov
pusha
xchg
push
mov
pop
addl
inc
jns,pt
testb
ret
pop
popa
jp
ret
push
sbb
add
lods
xor
xor
test
jecxz
dec
ffreep
adc
mov
sahf
push
sbb
pusha
adcl
mov
test
daa
pushf
or
mov
mov
mov
fcmovb
pop
xchg
aam
stos
js
stos
mov
cmp
mov
xor
sub
mov
sahf
push
cmp
in
or
imul
pop
ror
cwtl
stos
add
daa
mov
jle
subb
hlt
mov
xchg
aam
and
and
xchg
sub
sbb
fwait
lds
out
push
mov
sub
addb
cmpsl
pop
mov
test
push
sti
mov
cmp
mov
and
pop
mov
cmp
add
pop
add
loope
cmp
jne
mov
push
xchg
xor
push
mov
mov
xchg
push
mov
enter
xchg
aam
out
push
lds
push
cltd
add
shlb
xchg
stc
mov
jmp
mov
mov
push
sub
cwtl
pop
lods
out
repz
xchg
mov
std
mov
or
movsb
sub
push
lret
outsb
jle
rcll
add
lock
pop
je
mov
lock
fbstp
loope
sti
or
cmp
mov
fwait
pop
xchg
ljmp
or
mov
scas
mov
jge
cwtl
add
sbb
pushf
std
rcr
out
jmp
mull
repnz
rcrl
push
or
cmpsb
inc
inc
and
insb
sub
sbb
cmpsb
fisubrs
xor
mov
addb
jno
div
mov
cmp
cmp
mov
imul
aad
or
and
xlat
adc
xor
or
out
lret
fbstp
inc
mov
movsl
test
and
ja
adcl
sbb
es
adc
jbe
and
push
lret
fnsave
jp
out
repnz
hlt
fadd
ja
in
bound
jno
cmpsb
stos
mov
pop
ds
pop
repz
mov
movsb
push
lret
ret
mov
cmp
xor
dec
into
ljmp
std
push
dec
jb
push
jne
mov
lods
jb
and
pop
mov
lock
pop
mov
xchg
dec
xchg
mov
xor
xchg
sbb
and
push
lods
jnp
lock
pop
int
push
jl
push
outsl
xchg
pop
inc
in
pop
dec
mov
and
xor
test
mov
mov
stos
cmp
out
stc
cmp
pop
cltd
frstor
mov
mov
and
xchg
movsl
add
add
icebp
pop
or
outsl
scas
inc
jbe
cmc
inc
movsb
cmp
dec
stos
fbld
and
push
cmpsl
xor
inc
xchg
cmp
jge
xchg
xor
sbb
pushf
sub
cli
cwtl
orb
jo
loop
int
cmc
cwtl
scas
in
adc
shll
adc
dec
add
or
aad
xchg
aam
jb
and
jnp
inc
cli
push
xor
pop
sbb
pushf
sub
cld
push
inc
test
mov
je
add
dec
adc
mov
inc
test
js
mov
fwait
sbb
and
and
lds
mov
xchg
push
leave
sar
mov
sbb
loope
mov
mov
add
pop
pop
pop
fdivrs
add
and
jg
loope
aam
xchg
in
call
xchg
inc
or
bound
mul
into
insb
push
movsl
sub
jecxz
cmp
in
stos
lock
jno
pop
stc
dec
rorb
cli
lcall
aas
inc
test
nop
lock
jecxz
or
cmp
xchg
sbb
jmp
fstpt
and
sahf
sub
mov
cld
scas
cltd
fistps
negb
jno
and
inc
add
sahf
mov
ret
ljmp
dec
xor
pop
paddd
inc
in
adcb
xor
repz
in
cmpsl
sub
lods
dec
cmp
movsb
cmp
push
scas
fs
je
mov
scas
pop
lcall
xor
jle
mov
push
mov
sbb
out
sbbb
std
mov
mov
push
divb
jmp
std
or
push
cli
into
clc
daa
ja
pushf
mov
or
imul
mov
rcl
pop
mov
cmpsb
loope
mov
jg
popf
fs
dec
int3
or
das
in
xchg
sub
in
outsl
stos
fs
insb
loopne
rorb
in
les
imul
clc
mov
dec
xchg
jg
pop
add
sub
mov
pop
xchg
xchg
clc
cs
xchg
mov
aam
outsl
add
lea
push
push
loopne
xchg
mov
imul
ret
xor
in
clc
addr16
fs
jge
cmpsb
xor
loope
and
ffreep
and
adc
test
test
adc
test
add
pop
test
sarl
or
ss
bound
jnp
rorb
jle
jl
cmp
aam
jb
xchg
xchg
xor
jae
inc
rcll
mov
test
sub
sub
xchg
bts
sbb
lahf
imul
pop
inc
mov
xor
xchg
cmpsb
adc
add
xor
aad
adc
je
out
movsb
pop
lds
xchg
test
push
std
xchg
fnclex
je
andl
mov
cmpsb
pop
mov
inc
xor
mov
jo
cmc
sbb
lret
push
xchg
lcall
gs
scas
fstpt
pop
adc
loope
sti
cld
add
arpl
in
es
push
mov
inc
clc
add
dec
mov
and
inc
xchg
mov
add
xor
outsb
dec
xchg
sarl
dec
mov
inc
add
pop
dec
mov
mov
out
sub
xchg
jle
stos
shlb
xchg
outsb
sbb
data16
lds
inc
or
call
or
repz
mov
mov
jo
int3
fisubrl
hlt
inc
cwtl
pop
xchg
push
or
mov
push
je
add
sar
sbb
pop
lock
gs
cmp
sub
inc
dec
jns
mov
pop
sub
inc
test
xor
and
push
scas
inc
std
std
into
out
bound
test
push
aaa
and
cmpsb
push
daa
inc
icebp
jmp
cmpsb
sti
xor
add
and
mov
lea
cmpsb
dec
push
and
adcb
jo
les
mov
sub
add
std
pop
repnz
insb
cmpsl
push
enter
sbbb
ret
push
fwait
out
insl
test
movl
inc
mov
or
out
dec
nop
popa
lock
mov
mov
jge
in
sub
scas
sbb
sub
push
int3
cmp
mov
scas
repz
mov
jnp
mov
std
jbe
adc
incl
or
mov
jnp
jge
pop
stc
pop
out
call
mov
mov
clc
ret
dec
lock
and
daa
popf
iret
pop
hlt
ficomps
pop
out
mov
lret
addr16
insl
enter
mov
jbe
cmc
add
mov
pop
repz
mov
jmp
mov
pusha
fistpll
pop
fmuls
sub
push
ja
shrb
aad
stos
or
daa
mov
cwtl
out
and
inc
or
aad
and
in
ljmp
mov
data16
inc
ret
test
cmp
sbb
push
rcll
jo
hlt
arpl
scas
add
pop
sbb
pop
fstps
mov
dec
xchg
int
and
cmp
push
jecxz
push
cmp
popa
sbb
gs
push
dec
sbb
es
xor
jnp
std
or
ds
popf
out
lods
fbstp
cwtl
xchg
pop
bound
std
jns
or
xor
mov
mov
hlt
insb
mov
loopne
aas
add
xchg
cmp
test
idiv
out
ljmp
sti
pop
mov
fdivr
and
fildl
adc
popf
fs
pop
pop
mov
ja
push
add
jb
pop
arpl
and
dec
cmp
mov
jo
pushf
pop
pop
xor
out
sub
out
mov
add
cmp
cmp
or
ja
and
ret
test
adc
and
lods
pop
insl
call
xor
push
jp
out
lock
or
aas
sub
int3
sahf
jne
ja
sub
jecxz
aas
cld
cmp
pop
loop
ds
xor
add
cmp
add
shrl
pop
inc
push
test
jmp
push
aad
ja
sbb
testb
adc
sahf
xchg
sbb
outsl
repz
iret
dec
js
lret
jns
inc
jmp
stc
mov
adc
jo
int3
fnsave
mov
scas
shr
cmpsb
lcall
adcb
jb
sbb
in
iret
mov
and
sub
sbb
lds
mov
cmp
fs
vpsubusb
cwtl
pop
les
lcall
je
jns
fcmove
jb
sbb
pop
jb
daa
std
dec
test
out
shll
xor
mov
xor
push
movsb
sub
xchg
ljmp
cld
mov
push
mov
dec
pop
jnp
jae
addl
mov
pop
aam
mov
mov
out
mov
ja
mov
ret
iret
sub
test
lea
cmp
ret
test
fxch
mov
cmpsl
ja
mov
cmp
adc
cmp
mov
out
xorl
mov
xchg
sarl
in
add
add
in
or
or
cld
adc
push
cld
addl
into
push
movsb
sub
push
xor
inc
sbb
fsubs
push
pop
cmc
in
cmpsl
hlt
aaa
adc
dec
sub
into
dec
inc
sbbl
adc
mov
enter
nop
sti
dec
loop
movl
orb
sbb
in
xor
fadds
push
pop
rcl
pop
int
fists
jno
dec
push
movsb
ds
loopne
ss
xchg
adc
je
imul
mov
inc
pop
repnz
notb
jne
or
jns
adc
mov
sbb
mov
or
jg
cli
xchg
jmp
pop
in
push
inc
xor
ljmp
ret
and
fistl
pop
and
imul
cmp
mov
inc
lds
icebp
lahf
xchg
mov
fs
mov
mov
cmc
sbbl
jno
cli
popa
stc
jbe
test
das
adc
mov
pop
cmp
fmuls
add
sub
fadds
sub
mov
cmp
adc
int3
bound
sub
adc
jno
mov
inc
insb
or
fadd
outsb
shlb
dec
inc
add
daa
xchg
xchg
mov
adc
shll
das
xchg
mov
fidivs
mov
outsb
xor
fs
and
inc
fucom
pop
mov
jle
jne
mov
in
xchg
dec
push
mov
cmp
mov
js
pushf
sbb
cmpsb
in
iret
imul
xor
xchg
jbe
mov
mov
jge
test
push
lcall
mov
jnp
mov
je
mov
cwtl
jns
out
test
jo
in
insl
xchg
in
loope
aam
les
out
dec
cltd
scas
mov
stos
aad
ds
int3
pushl
and
test
inc
push
ret
pop
push
call
xor
jge
jo
lods
sbb
push
add
pop
test
outsl
dec
jmp
movb
or
pushf
or
jbe,pt
int3
mov
shrl
jae
mov
lret
stos
mov
out
mov
das
mov
cs
mov
loop
cmp
into
mov
cmpl
mov
rcll
xchg
test
xchg
ds
cmpsb
jno
setne
aam
jl
movsl
cmpb
lea
mov
scas
sbb
push
in
ljmp
insl
loopne
loopne
push
and
repnz
loope
int3
push
ja,pn
lods
pop
lock
mov
rcrl
lea
mov
sub
daa
sub
xor
push
cmpsl
adc
stos
and
jno
xlat
or
repnz
inc
sub
mov
cld
aam
pop
rcll
lea
data16
pop
pop
int
insl
jo
in
cmp
jae
pop
stos
jo
and
inc
test
mov
push
mov
out
xlat
rclb
or
push
sbb
cmp
fisubl
xlat
xchg
jo
mov
into
aad
clc
js
je
flds
add
mov
add
push
xchg
adc
pop
int
xchg
xchg
jne
push
shrb
mov
cld
mov
sbb
mov
movsl
inc
dec
out
hlt
or
xor
ja
xchg
in
jnp
daa
fxtract
mov
xchg
push
jno
mov
xchg
cmc
or
mov
movsb
cmpl
cmp
gs
pop
xchg
sbb
pop
sarb
xor
cli
push
int
push
jl
cmp
lds
dec
mov
sub
ss
pop
sub
fistpll
xor
es
and
or
dec
dec
xchg
xchg
orb
insl
jl
adc
sbb
sbb
dec
sub
mov
sub
fisubrl
xlat
inc
rcll
jnp
mov
dec
pusha
jle
xor
mov
cmp
jbe
xor
out
dec
lods
aam
outsl
push
sub
ret
out
in
jp
fadd
lods
lods
jnp
ljmp
and
or
inc
mov
sub
stos
xchg
js
xchg
rclb
jbe
ret
sahf
sbb
xor
push
xchg
push
imul
iret
add
cmp
ja
mov
fistpl
shrl
mov
dec
jbe
jl
lea
add
mov
sub
fnstcw
fcmovb
cmc
mov
or
xchg
rolb
mov
stos
push
add
and
adc
js
xor
sbb
lea
push
test
iret
loopne
shl
fs
xor
test
pop
leave
popa
adc
and
mov
jecxz
push
cld
pop
leave
lea
js
push
inc
gs
sar
and
sbb
jecxz
jb
adc
cwtl
mov
push
cmpsb
aam
jle
imul
mov
enter
sub
push
inc
shll
call
adc
sahf
xchg
cmpsl
mov
fstpl
neg
out
xchg
jo
sub
imul
mov
mov
fiaddl
push
scas
adc
add
lds
push
pop
sahf
pop
imul
inc
subl
mov
mov
dec
ss
bound
sub
test
mulb
in
lcall
pop
mov
jl
hlt
popa
les
clc
lods
or
subl
in
jmp
mov
xor
fcomp
test
jg
int
jno
cmp
std
fwait
xor
mov
aad
and
xor
fnstenv
popa
jo
testb
ret
outsl
rclb
jo
push
cli
jae
cli
mov
das
xchg
xchg
dec
jno
je
lds
inc
cmp
mov
add
xchg
ja
in
and
push
dec
sar
mov
icebp
jbe
adc
ds
jl
pop
addb
add
xor
mov
jns
subb
jg
ret
mov
popa
ljmp
daa
adc
push
jp
and
xor
sahf
mov
jbe
fmull
sbbl
mov
dec
or
imul
aad
mov
or
cmpsl
pop
icebp
ficoml
cmp
sub
call
mov
inc
jo
mov
icebp
lods
mov
xchg
inc
pop
or
call
daa
xor
dec
cmpsb
in
sbb
mov
test
add
aad
xor
cmc
xadd
leave
push
jnp
fmul
xor
add
pop
mov
lret
pop
lods
jne
cmp
lds
cmp
imul
imulb
add
movsl
inc
mov
outsl
push
gs
shlb
mov
or
and
add
fildl
mov
sbb
mov
cmp
xor
arpl
and
xchg
icebp
icebp
mov
mov
push
push
ss
insl
xlat
push
sahf
fwait
mov
lods
xchg
xchg
lods
lahf
sbb
fistpl
cmpsb
aaa
test
insl
dec
out
sbb
and
push
push
outsb
inc
or
pushf
adc
daa
lods
push
push
pop
call
pushf
pop
sub
movsb
enter
jle
jge
sahf
add
es
std
or
cmpl
sub
insl
and
cld
jo
leave
outsl
rclb
sti
or
insl
outsb
imul
gs
ja
ret
cmp
inc
mov
lods
xchg
xchg
xor
push
call
sub
shll
into
mov
loope
shl
fcomps
sub
ficomps
and
sbb
cmp
and
push
or
pop
push
add
push
xor
ljmp
mov
cmp
inc
add
mov
out
pop
ret
icebp
outsb
aaa
sbb
call
in
push
in
push
push
jge,pn
inc
push
push
addr16
clc
fbld
cmp
xor
aas
imul
cmp
sbb
ja
adc
repnz
mov
pop
clc
fdivrp
xor
mov
mov
movsb
hlt
mov
xchg
mov
cmp
sbb
push
js
push
cmpsb
shll
insb
adc
xchg
stos
gs
fwait
xchg
jle
nop
xchg
push
pop
arpl
push
xor
inc
jle
ficompl
repnz
rclb
cmp
mov
xchg
shlb
and
rcll
pop
aad
pop
add
dec
jmp
mov
mov
mov
pusha
pop
insl
ja
test
mov
int3
orb
pop
jmp
xor
dec
cmp
jg
sub
lods
jnp
pushf
lcall
addl
fcoms
stos
aas
pop
fmul
int3
out
jmp
push
xor
add
and
loope
mov
cli
cmp
xlat
sti
imul
mov
mov
cmp
xor
or
aaa
xchg
dec
dec
mov
in
js
mov
jne
into
cmp
xchg
stc
ret
movsl
js
add
push
sbb
icebp
sub
pop
mov
mov
dec
sub
into
insb
fnsave
pminsw
test
test
rorl
in
add
sar
sub
pop
xlat
add
xor
fwait
bnd
leave
out
les
arpl
sbb
sbb
notl
add
data16
pop
and
fimull
mov
pop
pop
jno
add
sti
inc
js
inc
push
pop
test
loop
sti
xchg
test
data16
add
adc
nop
imul
roll
in
shlb
xor
pop
cmp
xchg
ret
mov
and
shll
jae
pop
dec
sbb
push
push
inc
mov
inc
mov
ljmp
mov
mov
sub
arpl
mov
adc
push
stc
addl
sbb
xor
jg
sub
js
hlt
fs
das
dec
jg
loopne
and
pop
mov
xor
mov
cmp
push
movsb
cmp
int3
int3
sub
pop
mov
sub
push
pushf
movsl
jmp
adc
pop
ds
repnz
loope
scas
rorb
sub
test
xor
jecxz
dec
mov
dec
fildl
jnp
sbb
pop
in
xor
jns
cmp
push
xchg
fwait
into
jae
paddd
dec
sub
add
and
call
mov
mov
sub
fstl
pop
dec
pop
dec
lds
pusha
cs
int
insb
mov
or
mov
rorb
adc
mov
add
in
ljmp
mov
fs
rclb
inc
dec
push
aas
jmp
aad
inc
mov
pop
push
das
jecxz
mov
sbb
aaa
mov
iret
cli
in
rcrl
gs
sbb
arpl
leave
mov
jns
pop
lahf
pusha
loop
sbb
inc
xor
push
cmpsl
das
jo
sarb
jl
mov
add
mov
sbb
mov
fs
inc
je
fcoml
in
mov
push
jge
shll
mov
inc
or
test
adc
ljmp
mov
lret
sarb
inc
idivl
cmc
mov
mov
sarl
ljmp
xchg
leave
push
sub
push
aaa
jno
fucom
mov
jno
fwait
test
test
lss
xchg
lods
out
mov
jae
ss
push
fmul
dec
fists
push
xor
adc
xor
pushf
jmp
sbb
jl
cmp
jb
ret
lds
pop
mov
sbb
aaa
cmc
mov
dec
and
out
shll
sbb
adc
loopne
and
push
data16
mov
aad
jle
movsl
push
ljmp
out
jno
mov
adc
cwtl
adc
add
ret
cmp
inc
mov
cs
mov
nop
mov
into
mov
jnp
shlb
in
fldcw
fimull
push
dec
or
stc
shll
fnstcw
push
in
jbe
xor
leave
add
ret
jb
incl
lret
push
lret
repnz
movsb
xchg
cmp
mov
mov
xor
insb
xor
out
movsb
in
out
pushl
fsubs
js
cwtl
and
dec
mov
lcall
nop
ja
cmpsl
cmpl
xchg
hlt
dec
adcb
cltd
loop
sub
fs
mov
jbe
jmp
pusha
shl
fdiv
or
dec
lock
outsl
sub
push
sbb
xor
scas
adc
mov
hlt
sbb
sbb
lock
sbb
xchg
loopne
sub
in
hlt
mov
xor
pop
adc
mov
mov
mov
pop
scas
sbb
push
xor
mov
xchg
ss
push
imul
sbb
sbb
mov
repz
sbb
std
xchg
xchg
pop
xor
out
cmc
loop
xor
mov
dec
or
ret
jns
push
sbb
xchg
scas
push
sbb
push
add
rcl
out
ljmp
mov
mov
or
mov
xor
cltd
repz
cli
sub
mov
push
nop
repnz
lret
push
out
mov
fnstcw
mov
jno
leave
cmp
fldt
aaa
ljmp
std
push
std
lcall
rolb
mov
mov
adcl
test
in
inc
mov
cmp
dec
push
push
cmp
sub
push
push
pushf
jecxz
addb
push
push
adc
in
xchg
imul
xchg
pop
rclb
add
pusha
stos
mov
and
rcr
adc
popf
inc
in
mov
xchg
pop
inc
pop
out
in
lcall
mov
xchg
xchg
out
dec
fdiv
js
movsl
inc
popf
push
push
cmp
ss
mov
sub
cmc
in
jno
pop
push
jb
scas
mov
fistpll
xor
pop
mov
or
mov
lea
xchg
cmp
cmp
sbb
mov
aad
mov
es
sbb
mov
fwait
sbbl
or
mov
mov
roll
add
mov
add
insb
cmpsl
or
outsb
lret
adc
leave
sub
icebp
je
insl
xor
jl
dec
mov
out
ret
sub
cmp
mov
lock
loop
lods
mov
mov
clc
mov
rorl
outsl
in
add
cli
xor
mov
and
icebp
jno
sbb
mov
mov
adc
mull
add
mul
ljmp
xchg
jb
dec
xor
loope
push
loopne
mov
xchg
xchg
push
hlt
ret
jae
fldenv
xchg
inc
bound
pop
insb
inc
or
jmp
fmull
es
stos
pushf
or
mull
push
add
xchg
mov
cmp
push
ja
jecxz
or
and
mov
unpckhps
jnp
mov
mov
lcall
sub
ret
sbb
pop
insl
enter
jbe
cmp
and
repz
lods
cmp
out
push
xor
push
cli
fucomip
jns
sub
push
add
ss
push
clc
sub
testl
adcb
push
imul
sub
insb
push
dec
push
sbb
mov
pop
daa
adc
shlb
cmpl
int3
decl
pusha
or
cmpl
movsl
xchg
lcall
mov
xlat
fisubl
in
pop
lret
mov
inc
jno
fadd
inc
or
fucompp
mull
pop
repz
mov
pop
mov
leave
mov
push
ljmp
pop
lds
lods
add
movsb
out
imul
mov
stc
or
dec
push
mov
cwtl
jge
mov
mov
sub
push
pop
pushf
xor
lea
aad
lahf
dec
lds
movsl
xchg
hlt
sbbb
fisttps
arpl
mov
and
icebp
subl
push
or
or
int3
imul
mov
sub
bound
jg
test
aad
mov
je
js
jae
sub
xchg
mov
mov
test
and
rcll
mov
mov
fldl
pop
mov
jb
mov
pop
mov
push
sub
xor
ror
fcoml
xor
xor
or
sbb
es
adc
add
xor
xchg
aam
jmp
ds
stos
or
ret
sub
test
fwait
js
test
cltd
mov
ret
mov
stc
cmp
movsl
mov
aad
push
in
ret
xchg
in
fadds
add
jp
sub
push
or
stos
jge
inc
aad
mov
mov
insb
stos
cltd
enter
pop
call
jne
mov
or
mov
mov
vmptrld
fistpll
cmp
push
stos
outsb
insl
push
nop
add
out
bound
fcmovnu
mov
insl
and
sarl
ljmp
sbb
out
popf
cli
jne
or
adc
lods
lods
ret
out
push
iret
mov
arpl
mov
iret
scas
ds
fisubrs
scas
xchg
out
iret
mov
hlt
add
or
insl
mov
cli
fidivs
cwtl
scas
cmp
dec
lods
movsl
lcall
lcall
push
shrl
lcall
sub
push
inc
out
push
jnp
mov
movsl
in
dec
rcll
dec
push
outsb
sti
mov
bound
clc
arpl
cmp
repnz
into
dec
adc
mov
daa
je
push
je
sbb
ret
inc
xor
xorb
mov
loop
sbb
fsincos
fstps
xlat
adc
movl
xchg
test
js
jge,pt
cmpsl
or
sbb
stc
jge
dec
sub
imul
fidivrs
notb
push
adc
pop
dec
cmp
call
cld
cld
pop
ljmp
repz
test
jb
or
daa
mov
out
sub
xor
add
push
jge
sub
inc
sti
popa
mov
gs
sbb
stos
and
adc
fiaddl
add
loopne
mov
insb
pop
dec
mov
bound
in
fnstcw
or
dec
push
lds
or
fbld
negb
adc
sbb
es
add
mov
jg
jecxz
adc
addr16
mov
jmp
lods
and
or
push
in
das
into
push
bound
pop
pop
repnz
out
ret
sub
mov
xchg
mov
ret
mov
inc
xor
jnp
cmp
add
arpl
push
inc
mov
inc
dec
leave
push
dec
fistpl
int
imul
dec
sub
stos
adc
inc
mov
push
sub
icebp
shrl
rol
cmpsb
pop
sbb
repnz
cld
leave
cmp
imul
loop
add
xchg
les
or
hlt
mov
cltd
js
stos
xchg
dec
insl
sub
in
mov
mov
mov
int
pop
mov
adc
xor
and
pop
mov
xlat
or
dec
xchg
lods
mov
dec
jae
or
mov
jg
outsl
mov
stc
mov
mov
adc
adc
jecxz
fcmovne
fidivs
enter
movsl
out
jns
lcall
xchg
xchg
push
loopne
inc
lock
in
sbb
adc
jmp
leave
out
mov
ss
lock
push
mov
ljmp
adc
addr16
sti
pop
sub
out
sub
test
xor
insl
adc
int
adc
loopne
scas
lea
data16
push
fadd
push
dec
aas
leave
jge
imul
cltd
decl
subl
aam
enter
sbb
repz
xchg
notb
jno
xchg
lods
loop
and
ret
jbe
xorb
lea
adc
and
imul
adcb
ficompl
std
outsl
push
jle
dec
roll
xchg
push
dec
push
repz
in
into
jae
push
cmc
xor
aam
xchg
mov
repz
aad
xor
push
mov
add
add
and
divb
in
mov
int3
dec
xchg
cmpsb
add
lcall
fldenv
lret
mov
push
lret
sub
adc
push
xchg
and
dec
xor
leave
xor
in
lahf
mov
aas
mov
fldcw
sub
jnp
lcall
and
inc
in
insb
push
jg
add
push
inc
mov
mov
pop
loope
pop
lods
in
mov
mov
and
shll
test
leave
xchg
add
cli
outsl
inc
cmpsl
pusha
call
sbb
popa
mov
int
mov
xor
lods
or
sbb
ficoms
inc
xchg
mov
xchg
xchg
test
and
out
inc
rorb
ds
roll
pushf
mov
gs
sarb
fisttpl
xor
data16
out
xor
dec
rcl
inc
lahf
lret
adc
mov
gs
repnz
aas
dec
mov
or
and
cs
test
add
mov
xchg
add
stos
cmpb
in
lcall
push
fwait
pushf
scas
loop
push
push
ficoms
xlat
pop
mov
hlt
dec
adc
daa
les
dec
cmpsl
out
pusha
push
mov
and
repz
test
push
jne
lods
inc
cli
xchg
mov
sbb
dec
mov
xchg
dec
mov
insl
mov
imul
adc
out
test
xor
negb
adc
enter
sub
mov
sub
push
addl
sti
cli
push
jo
sbb
movsb
rcll
arpl
dec
pop
mov
das
sbb
enter
fucomip
int3
xchg
in
or
mov
pushf
sbb
in
add
pop
pop
ret
pop
cmp
scas
ret
sub
es
sbb
hlt
cli
fdivrs
out
cld
xlat
into
lcall
mov
aad
inc
in
faddl
imul
or
cli
xor
mov
stos
lds
jp
xchg
cmp
mov
add
fldt
popa
inc
jae
loopne
out
xchg
mov
push
cmp
enter
shl
xchg
mov
loope
inc
nop
pop
test
mov
fnstenv
ret
jnp
subb
xlat
pop
cmp
clc
pop
push
push
mov
push
fiaddl
jl
dec
inc
hlt
push
rcr
mov
mov
push
jae
notb
lods
testb
dec
out
shrl
and
mov
subl
aas
jno
inc
pop
adc
dec
fwait
mov
add
imul
inc
lcall
outsl
inc
inc
aam
xchg
movsb
sahf
pop
call
mov
xchg
loopne
std
xchg
xchg
pop
popf
clc
jecxz
mov
jns
push
inc
clc
lret
mov
jnp
cwtl
mov
lahf
jb
je
pop
cli
push
into
insb
push
xchg
scas
push
pop
dec
and
adc
mov
ds
scas
in
int3
dec
push
dec
jp
cmpb
stos
outsb
test
ret
in
cmc
cmp
mov
add
outsb
sar
dec
gs
mov
sbb
stos
and
out
fnstenv
inc
cli
push
lds
jbe
cs
pop
xor
push
pmullw
popl
movsl
xor
pop
mov
scas
das
push
dec
and
fdiv
daa
repz
dec
int3
int3
inc
gs
popf
jnp
inc
ret
insl
enter
and
push
mov
jmp
mov
int
xor
dec
inc
stos
das
mov
pop
loope
mov
addl
mov
sbb
test
inc
nop
mov
loopne
jo
and
mov
lods
test
sbb
aas
mov
and
ds
out
mulb
mov
sub
mov
mov
daa
mov
jnp
lahf
sahf
xor
cmpsb
xchg
jns
aaa
incl
aas
pusha
out
leave
jmp
adc
fistpl
push
mov
push
pop
xchg
enter
push
out
call
mov
fcomps
mov
jno
mov
mov
or
outsb
push
cmp
pop
repnz
cmp
cmp
sub
sbb
push
repz
mov
roll
ds
pop
xor
je
and
mov
inc
test
mov
mov
negb
stos
add
lcall
mov
and
mov
cwtl
cmpsl
jo
incb
adc
jle
test
jge
repz
pop
nop
int
jnp
push
pop
sub
mov
repz
fcomp
andl
movsl
pop
mov
loope
aaa
ficoms
jnp
mov
mov
pusha
mov
cmpsb
in
fdivrl
in
test
out
mov
aaa
mov
out
lods
data16
fdivrl
stc
xchg
jl
lret
pop
test
mov
xorb
mov
xchg
push
leave
sbbb
push
sbbl
xor
push
xor
dec
in
clc
ret
in
in
arpl
xchg
mov
movsl
push
sbb
rcr
js
pusha
icebp
imul
xchg
adc
loop
jbe
and
cmp
fbld
sub
mov
xlat
int3
rolb
xchg
lret
loopne
daa
mov
lods
xor
add
cmpsl
fisttps
pop
sub
cmpb
add
xlat
into
or
jo
add
pop
adc
ficoms
cmpl
fcmovnbe
cmp
arpl
in
scas
mov
sub
mov
pop
push
xchg
push
scas
xchg
aad
out
jb
xchg
rorb
add
clc
ret
movsb
xchg
shll
jecxz
pop
sbb
vpmaxub
pop
push
jns
mov
sub
dec
push
xor
sub
lock
inc
je
sbbb
push
fldcw
push
ss
push
fldt
mov
cmpsb
imul
and
outsb
je
mov
inc
push
sbb
and
stc
push
repnz
leave
pop
shll
arpl
in
enter
jns
addb
fnstenv
inc
pop
xor
sub
and
aas
cmpsb
call
mov
fsubrl
scas
mov
shlb
xchg
sbb
fsubl
push
test
push
cltd
int
push
out
mov
mov
aaa
and
jecxz
movsb
dec
mov
adc
dec
xor
cld
push
add
sub
in
pop
inc
pusha
inc
jns
out
or
pusha
push
sub
pop
int3
jecxz
call
and
xor
jl
add
mov
lahf
jb
rorl
jge
pop
pop
lret
xchg
in
add
pop
jmp
xchg
cwtl
dec
loop
dec
adc
test
jmp
int
cmp
sub
mov
ret
lea
repz
push
sbb
add
inc
adc
popa
xchg
cld
test
popw
int
in
sar
aad
or
xor
add
or
push
jbe
das
fistpl
sub
jbe
movsb
lret
ljmp
sbb
xor
inc
inc
aam
std
mov
lahf
jno
fs
mov
jg
or
xor
sub
add
outsl
notl
orb
lea
cmp
inc
xchg
jns
mov
mov
aas
ljmp
mov
mov
push
outsb
add
lock
sub
outsb
xor
mov
mov
stos
adc
std
dec
pop
loopne
pop
and
pop
aas
fnsave
shrb
inc
in
mov
int
jg
mov
out
jge
and
sbb
lods
lods
jp
dec
imul
inc
in
xchg
fwait
repz
cmp
pop
adc
xchg
stos
popa
sarl
fs
fwait
daa
mov
fldcw
and
add
inc
rclb
lea
inc
push
xor
add
mov
and
jecxz
push
ljmp
xchg
sub
push
mov
in
or
jecxz
in
ljmp
bswap
cli
repnz
mov
aam
ds
fxch
sub
jmp
or
jnp
sar
lods
pushl
sub
xorl
fdivs
in
or
outsb
sub
ja
and
insb
enter
mov
jo
int3
adc
push
testb
cltd
pop
lret
mov
cld
outsb
adc
arpl
das
lret
lret
outsb
cmp
imul
sub
push
test
sbb
imul
mov
xor
xlat
popf
mov
jo
ja
popf
nop
aas
mov
xor
insb
sbb
mov
xchg
cmp
std
push
mov
ja
pushf
jmp
stc
xlat
pop
rcrl
push
mov
enter
jae
cmp
inc
jecxz
adc
repz
push
pop
scas
dec
inc
xchg
loopne
int3
xor
mov
lds
loopne
xchg
insb
jmp
and
xchg
jae
mov
ds
lret
jno
push
jecxz
fwait
jb
cmp
rcrl
xor
and
add
cli
adc
arpl
mov
fsubrs
xchg
sbb
cmp
xchg
xchg
sbb
mov
mov
cltd
push
xor
cltd
jno
pop
ja
divb
jg
in
insl
imul
fsubl
xor
mul
enter
mov
push
push
test
or
or
iret
push
mov
push
mov
mov
xor
xor
add
rorb
movsb
lock
cmpsl
pop
mov
and
sbb
add
jnp
sbbl
imull
or
imul
idivb
test
jge
fsubl
inc
data16
inc
jmp
mov
movsb
or
and
cmpsl
lea
jmp
mulb
daa
and
into
dec
int3
xlat
inc
fwait
dec
outsl
mov
pop
mov
leave
mov
add
outsl
pcmpeqb
add
sbb
cwtl
and
inc
clc
jl
addr16
mov
add
xchg
push
fnstsw
mov
mov
data16
lock
mov
pop
inc
ds
pushf
pop
scas
push
or
mov
sbb
sub
inc
in
xchg
xor
lds
rcll
pop
dec
pop
add
cmpl
add
mov
ret
and
cs
mov
repnz
andb
fistps
sbb
mul
loopne
aas
fs
insb
insb
jns,pn
jp
jecxz
inc
hlt
and
jae
rcr
xchg
push
fstpt
lahf
cmp
popf
jb
sub
xor
push
mov
mov
or
test
outsb
js
xchg
push
jns
sbb
mov
int3
xor
fistpll
imul
add
xlat
test
dec
mov
add
frstor
test
push
adc
jno
xchg
mov
xchg
and
or
mov
pop
mov
xor
jmp
mov
push
pop
jns
push
mov
scas
js
lds
mov
cld
insb
into
or
andl
jecxz
popf
int
lret
ret
fistpl
inc
mov
mov
jg
dec
add
divl
xchg
vdivpd
pop
mov
clc
scas
mov
es
cmp
addr16
stos
clc
fsubs
daa
sbb
insl
idivb
in
dec
add
fidivrs
mov
icebp
popf
mov
xchg
ret
xorb
cs
imul
repnz
in
into
xchg
ret
out
mov
push
enter
adc
ljmp
rcr
and
xchg
inc
pop
icebp
mov
pop
repnz
cld
lret
sub
adc
xor
aaa
addb
mov
movsb
mov
mov
mov
aad
push
jae
xchg
push
mov
mov
pop
adc
mov
or
sar
inc
sbbb
shr
movsb
sub
aam
pushf
fdivs
stc
out
push
mov
add
pop
popa
and
add
xor
lahf
lret
lock
in
mov
outsb
jge
adc
jle
sub
int
inc
jb
jecxz
fidivrl
pop
cmp
mov
inc
push
cmpsl
dec
out
dec
mov
jbe
pop
pop
jl
test
push
pop
stos
lock
jmp
mov
enter
out
add
adc
js
cmp
rcl
jge
sub
std
pop
add
fidivrs
imulb
xor
ret
pop
cmpsl
fnsave
je
dec
mov
inc
or
or
mov
std
jl
in
or
pop
lret
mull
lahf
fimuls
lcall
or
stc
pop
jle
lahf
lret
sub
rcrb
std
ds
jp
shll
aas
sbb
push
sbb
mulb
mov
push
ds
cmp
stos
icebp
push
mov
adc
mov
and
add
popf
jmp
add
inc
adc
arpl
mov
leave
loope
test
fidivs
mov
je
iret
push
loop
cmp
jge
out
enter
xor
lahf
aaa
cld
xchg
test
and
ret
insl
in
add
outsb
jno
fsubs
movsb
loop
into
xor
mov
adc
in
jle
test
pop
pop
or
pop
notl
fidivs
or
inc
inc
jecxz
mov
test
jge,pn
sti
les
or
jmp
mov
jl
movsb
fstpl
cmp
xchg
push
in
mov
nop
push
sub
jg
add
int
or
sbb
into
adc
mov
je
mov
pop
mov
cld
inc
lods
in
adc
inc
insl
gs
int
enter
movsl
adc
sbb
repz
out
push
imul
scas
leave
lds
sub
aas
xor
jb
gs
sahf
mov
cld
mov
mov
xchg
mov
xchg
sbb
add
cs
fadds
adc
mov
xchg
xor
mov
mov
les
and
movsb
mov
shll
jle
ss
adc
dec
or
shll
loop
ss
mov
jg
xorl
nop
in
and
repz
nop
jmp
es
sub
ret
xchg
dec
pop
inc
push
loope
cli
xchg
mov
ret
das
mov
int
repz
ret
pop
mov
imul
mov
imul
add
add
pop
bound
inc
mov
ror
mov
sub
xchg
in
xchg
ljmp
cwtl
jmp
add
dec
and
sub
inc
push
jo
pusha
in
ljmp
jnp
push
sub
mov
mov
repz
or
pop
lods
xlat
pop
es
test
int3
jnp
mov
jne
stos
ljmp
adc
call
addl
sbb
adc
mov
push
push
sub
cmpsl
sub
sub
inc
in
in
scas
xor
cmpsb
xor
jbe
cmpsb
sub
cmp
ja
xor
cmc
jecxz
addr16
out
mull
jg
mov
clc
arpl
cmpl
or
and
enter
popf
push
mov
push
fs
lcall
add
push
sub
dec
dec
call
pop
xlat
and
les
mov
push
xor
call
adc
jle
mov
add
sbb
push
mov
mov
sub
dec
std
dec
jns
jo
pop
push
xchg
test
adc
mov
arpl
popl
fcmovnb
jns
fiadds
mov
cmp
shrl
stc
mov
dec
push
lahf
scas
fwait
mov
imul
cld
inc
fcompp
ja
ds
inc
cmpsl
mov
nop
push
cmp
cmpsb
cmp
mov
cmp
jmp
mov
cmp
inc
and
ja
fwait
jb
add
jne
push
cs
sub
jge
fldenv
add
sbb
cmpsb
add
lds
dec
scas
pop
cli
sub
out
push
je
shll
fldt
jmp
rcll
sub
mov
pop
jbe
jecxz
sbb
sarb
jne
in
decl
ret
cmp
in
stos
adc
add
icebp
push
movsl
sbb
adc
inc
sahf
push
push
mov
or
mov
or
mov
outsb
adc
xor
add
ja
jg
dec
insl
adc
add
jns
mov
js
sub
sub
mov
mov
xchg
ficomps
sbb
sub
std
ja
jge
cmp
repnz
pop
or
push
pop
shrb
push
insb
repz
aad
and
or
cmp
dec
scas
xorb
sbb
xor
inc
mov
testb
out
mov
stos
roll
dec
mov
xchg
lahf
idivb
mov
adc
lret
mov
jmp
mov
sbb
xor
cmp
and
sub
adcl
cmp
xchg
mov
xlat
loopne
or
mov
fwait
pop
cwtl
sbbl
push
scas
inc
sub
jecxz
cmp
aad
test
or
cmp
popa
pop
add
mov
or
test
movsb
jp
scas
mov
imull
mov
iret
mov
cmp
lret
aad
mov
inc
xor
or
sti
and
sbb
cmp
mov
ja
lods
mov
dec
or
in
sbb
mov
in
jo
lods
bound
add
insl
data16
xor
xchg
or
popf
or
mov
and
pop
loop
fs
int
and
cmpsb
sbb
push
out
lret
jmp
xor
dec
movsb
push
jne
jo
cwtl
in
and
cmp
pop
je
pop
push
fwait
push
popa
push
xchg
mov
pop
jle
adc
jl
arpl
xor
addr16
or
or
out
xor
lods
sub
repz
sarl
pop
test
ror
push
rclb
ret
mov
popa
cs
leave
or
cli
iret
dec
inc
add
push
push
xchg
sbb
and
ret
stos
fwait
sbbl
repnz
or
pop
out
mov
and
loope
mov
push
dec
inc
push
mov
push
test
mov
or
pop
or
or
dec
stc
jo
cmp
cwtl
aaa
stos
bound
xchg
inc
fs
aam
sub
sarl
mov
adc
mov
lds
jge
pop
rolb
sahf
ret
mov
sub
or
mov
das
jl
xor
stc
cwtl
pushf
into
cs
and
int3
js
sub
push
addb
pop
rclb
mov
test
fwait
test
in
shrl
mov
dec
xchg
xor
mov
out
mov
xchg
or
jmp
add
test
jo
mov
outsl
add
xor
xchg
outsb
adc
sahf
xorb
xor
xchg
mov
insb
loop
adc
stos
or
ds
adc
or
int
pop
add
xchg
push
mov
jbe
pop
dec
jge
daa
add
pop
inc
push
hlt
adc
xor
push
xchg
test
roll
dec
jp
fldcw
in
fstps
push
pop
in
std
aad
lods
rorb
cld
sub
sarl
mov
push
xor
push
out
incb
lcall
test
mov
test
jns
sbb
mov
adc
insb
push
mov
addr16
adc
or
push
add
mov
dec
fs
dec
pop
add
jmp
sahf
loope
adc
int
add
mov
test
lcall
xchg
js
push
gs
daa
add
sti
jmp
or
jbe
and
add
push
out
cs
cmpsb
sub
aam
nop
les
repnz
jo
sub
imul
hlt
xchg
xor
push
cmp
stc
sub
imulb
scas
fsts
pop
mov
popf
mov
mov
xchg
fsubs
push
imul
test
pusha
push
push
or
fmuls
fmuls
ljmp
or
cmpsl
mov
sahf
dec
adc
add
incb
mov
dec
pop
in
mov
out
or
push
mov
push
cmp
and
xor
orb
dec
push
ret
or
dec
dec
add
lock
leave
ljmp
mov
cwtl
add
lcall
iret
push
ficoml
cmp
aaa
cld
jae
dec
jge
jle
xorl
sub
xchg
xchg
and
push
mov
add
pop
sti
and
scas
sbb
outsl
repz
pop
decb
ret
cmovb
xchg
jbe
pop
lods
and
rorb
out
mov
xor
pop
xchg
jb
jmp
pusha
sub
sbb
inc
mov
xchg
sbb
sbb
repnz
jecxz
cmp
mov
dec
and
inc
outsl
mov
lock
aad
cmp
shlb
pushf
xchg
sahf
jmp
aaa
jp
nop
push
dec
ss
jp
mov
xor
sahf
cltd
js,pt
jmp
xchg
adc
adc
pop
mov
pop
dec
sbb
dec
lret
inc
xchg
sbb
mov
jbe
pop
pop
adc
and
fmulp
notb
dec
push
mov
xchg
lret
leave
fbld
dec
cld
add
decb
sbb
idiv
xor
xchg
lahf
sarl
sbb
xor
xchg
fistpll
ret
mov
mov
or
orl
movsl
movsl
xchg
push
sbb
lret
out
fcoml
xor
mov
popf
ret
lock
and
add
add
out
pushf
cld
cltd
xor
loope
inc
stc
dec
and
fnstsw
push
lods
pop
or
jmp
mov
jo
inc
mov
push
sub
icebp
ljmp
popa
pop
mov
push
dec
mov
mov
sub
cltd
and
ficoml
negl
rorb
xchg
pop
xlat
and
nop
sar
movsl
mov
sub
dec
inc
dec
imul
cs
fcmovb
xchg
xchg
and
in
cmp
pop
jae
and
sub
in
into
xor
cs
clc
call
or
inc
fimull
cmp
es
sub
mov
sub
push
pop
pushf
rcll
mov
into
in
fadds
xchg
std
lods
out
loopne
int3
mov
ja
xor
push
arpl
cltd
jmp
add
cld
dec
add
push
pop
push
push
rol
shlb
xchg
sbb
jbe
xor
popa
dec
or
push
cmp
push
mov
cmp
sti
aas
adc
add
sbb
add
mov
jo
bt
mov
cltd
in
jg
mov
pop
adc
outsl
xor
mov
popf
add
xchg
dec
pushf
fiadds
stos
jecxz
add
int
ljmp
lahf
pusha
imul
imull
jle
jb
pop
cmp
xor
inc
out
sahf
flds
push
shl
pop
lods
jge
mov
jns
cwtl
pop
cvttps2pi
ss
pusha
dec
mov
out
inc
inc
movsl
mov
jae
mov
adc
pop
lret
je
mulb
xor
lret
out
dec
inc
gs
decb
aas
stc
jb
mov
icebp
mov
bound
mov
call
push
mov
or
mov
and
and
outsb
pop
xchg
jns
and
mov
lock
cmpsb
sub
jne
push
std
cmp
mov
add
in
mov
mov
pop
mov
xchg
loope
or
out
push
inc
sbb
pusha
ret
mov
push
push
push
enter
pop
adc
jae
ret
and
xor
and
cmpsl
shlb
dec
jo
pop
mov
std
mov
fwait
mov
outsl
mov
scas
sub
dec
stos
and
mov
test
lahf
jl
mov
add
int3
jp
xchg
outsl
inc
cmp
add
mov
mov
mov
mov
jbe
xchg
jmp
or
inc
out
mov
call
push
inc
mov
inc
test
jge
outsb
or
out
add
test
xchg
sub
incb
add
adc
xor
sbb
push
xchg
stc
or
loopne
cmp
outsl
insl
dec
sbb
inc
or
pop
sbb
test
scas
fisttps
aaa
xchg
test
ljmp
cli
jo
out
insb
lahf
jno
fdivs
add
in
add
cmp
out
pop
test
or
sbb
test
or
sarb
cmp
jmp
stc
jmp
push
jg
push
jge
mov
jae
lds
pop
pop
cmp
jbe
aaa
outsb
xchg
in
push
enter
sub
aad
stos
in
cmp
ret
subb
push
icebp
push
mov
daa
jb
loope
lods
repz
jnp
jns
push
jae
ja
out
lods
dec
in
out
sti
andb
push
cld
popa
xchg
movsb
or
pop
icebp
and
repnz
test
jle
aaa
call
mov
fwait
jg
jecxz
testl
cmp
jl
lea
cmpsb
cmp
ss
add
mov
xchg
jle
nop
mov
in
popa
inc
inc
and
roll
int
push
xchg
cmp
ds
adc
lret
push
push
add
cmp
data16
shlb
push
add
mov
insl
add
out
xchg
imul
loop
dec
enter
loop
shrb
mov
mov
mov
ds
push
adc
xchg
lods
jae
fwait
cs
int
jns
inc
repnz
pop
dec
das
rcl
arpl
push
lahf
dec
mov
inc
push
xchg
js
rolb
in
mov
ror
dec
ss
psubw
movzwl
xor
gs
rorl
in
push
adc
add
or
sbb
aas
xchg
loopne
or
bound
cmp
es
pop
adc
mov
jnp,pt
test
in
sbb
adc
push
mov
lcall
mov
sub
nop
add
outsl
das
cmp
jnp
mov
mov
lahf
mov
arpl
push
scas
imul
mov
mov
aam
and
add
jl
ret
fsubp
lret
stos
and
pop
pop
jne
and
mov
sar
ja
xchg
ja
dec
jl
shr
add
push
jno
lds
pop
dec
cmp
or
xor
jae
or
push
in
add
pop
ficoml
push
xchg
add
arpl
adc
ss
insl
dec
lock
arpl
movl
dec
mov
fisttps
imull
push
jnp
jo
dec
inc
popa
test
add
cld
loope
lods
lods
adc
daa
sti
in
test
ljmp
test
push
fisttpll
xlat
mov
aad
ret
out
inc
pop
push
ljmp
xorb
mov
jb
mov
push
movsl
ds
arpl
jnp
sub
mov
lock
lea
out
mov
arpl
orl
adc
loopne
lcall
nop
and
and
mov
nop
mov
sub
inc
xchg
popa
push
xorl
rol
pop
leave
inc
sbb
or
jp
or
andb
jp
bound
pop
add
cmpsb
and
nop
fidivrl
js
in
cmp
adc
in
push
popf
out
xchg
adcb
mov
mov
jbe
shr
loope
or
jle
stc
xor
seto
push
inc
inc
bound
jns
iret
xchg
loop
xor
push
test
cmp
push
imul
xchg
jge
hlt
aas
push
subb
adc
rcrl
daa
cwtl
test
orb
bound
adc
xor
mov
stos
push
sbb
mov
cmp
lret
mov
fwait
xchg
stos
nop
clc
push
cs
jge
punpcklbw
push
cmp
mov
pop
add
faddl
dec
push
dec
inc
adc
mov
mov
xor
mov
and
pop
sub
add
xor
push
and
and
outsb
adc
in
popa
test
inc
rcrb
xchg
ss
jg
xchg
icebp
stos
outsb
test
fists
pop
mov
push
sub
xor
or
cmc
sbb
mov
sub
dec
pop
dec
popa
xor
das
gs
stos
xchg
mov
in
ljmp
jbe
xchg
mov
xorl
clc
xor
lret
push
jmp
je
dec
into
movsb
pop
mov
lods
pusha
mov
outsb
mov
and
arpl
sbb
add
movsb
cmpsb
adc
xchg
inc
pop
test
cmc
mov
dec
lock
mov
mov
mov
cmp
adc
sbb
jb
push
sahf
jge
iret
sbb
push
pop
dec
aad
push
fsubrl
outsl
cmp
inc
in
sub
sub
lcall
cwtl
mov
imul
pusha
in
test
pop
or
ljmp
xchg
mov
loopne
xchg
loope
popf
add
or
inc
and
pop
shl
scas
push
xor
imul
inc
inc
jne
dec
push
into
xchg
addr16
adc
je
cmpl
lock
lods
jmp
outsl
add
rcrl
xor
add
test
imull
divl
jnp
push
sbb
add
incb
xlat
leave
popf
cmp
negl
dec
jnp
aad
repnz
mov
aaa
lods
adc
jcxz
stos
push
imul
mov
jecxz
pop
fs
inc
aam
aam
dec
rcll
in
push
into
jne
sbb
fisubrs
adc
jle
scas
lahf
mov
adc
test
out
adcl
ja
adc
mov
mov
out
arpl
imul
xlat
divb
outsb
lret
pop
leave
scas
in
xlat
outsl
insl
xchg
lahf
sbb
mov
jbe
mov
ret
xchg
inc
jne
ja
jg
das
cli
lods
loope
sbb
add
sub
xor
cmp
mov
orb
pop
sub
jmp
pushf
adc
jp
jg
xor
leave
cmovle
repz
and
dec
stos
adcb
jo
sub
sbb
pop
pop
out
sbb
cltd
mov
dec
xchg
cmp
xchg
dec
shlb
pop
xor
pushf
rolb
or
xor
jecxz
mov
popf
int
popf
xchg
test
mov
jns
or
mov
and
fldenv
add
xchg
pop
dec
fwait
lahf
fcmovne
cmpsl
leave
cli
cs
pushf
fwait
daa
sub
je
jge
adc
je
sbb
jmp
jb
xor
fsubrs
sbb
and
cmp
mov
ljmp
lret
mov
mov
and
cmp
ucomiss
into
pop
push
or
cmp
jnp
leave
pushf
jbe
into
cli
cmp
cwtl
hlt
mov
cmpb
inc
pusha
lods
in
aas
mov
sbb
mov
push
imul
push
psubd
fstpt
or
sbb
sbb
and
sub
add
mov
push
and
mov
push
adc
fmul
in
repnz
arpl
fsub
mov
test
int
outsb
iret
lret
or
sbb
jbe
xchg
outsb
push
out
out
mov
stos
cmp
inc
mov
ljmp
ja
dec
mov
paddusb
pop
into
enter
and
cmpsl
outsb
popl
into
sub
clc
or
inc
mov
int3
ret
es
mov
pop
repz
into
jb
ror
push
lea
enter
idiv
mov
xchg
mov
scas
test
jns
sbb
test
out
leave
cmp
add
loope
aad
loopne
inc
add
rorl
sub
roll
dec
into
fmull
lea
xchg
sub
mov
stc
fs
cmpsl
jl
mov
cli
lret
loop
rorb
cwtl
mov
and
clc
cwtl
into
cmp
push
jmp
cmp
ds
jmp
pop
ljmp
lea
cmpsb
movsb
inc
sbb
add
hlt
lea
add
mov
test
dec
dec
xor
or
add
repz
das
push
sbb
xlat
rol
test
mov
jns
cmp
pop
cmc
imul
sub
jp
jge
pop
and
insl
inc
das
or
hlt
jo
dec
lock
faddl
fdivl
and
inc
sub
jmp
clc
popa
lods
mov
fildl
addr16
sub
fcoml
jne
mov
push
leave
and
lds
addr16
or
movsb
mov
xor
xchg
cmc
lods
rcll
pop
testl
jno
nop
dec
mov
shr
cwtl
clc
sbb
nop
clc
sub
xchg
push
jecxz
cli
jae
cs
ljmp
push
imul
jne
ljmp
in
aas
pop
aam
xchg
push
push
xchg
jmp
out
out
mov
scas
mov
ret
ret
pop
and
mov
xor
mov
movsb
call
push
mov
dec
pusha
jno
inc
push
push
sahf
xor
stc
loope
or
pop
in
dec
push
clc
xchg
testl
icebp
ja
xchg
xor
in
scas
sbb
outsl
push
imul
test
jnp
push
add
dec
dec
mov
and
int
loopw
xlat
cmp
lret
jae
cmp
jns
push
push
push
or
in
sub
lods
xor
xor
fidivs
cmpsb
std
push
out
fstps
cmpsb
xor
inc
mov
lcall
movsb
cmp
stos
push
mov
cmp
jno
push
adc
adc
jnp
mov
mov
sub
xor
sub
test
dec
push
movsl
cmp
mov
inc
dec
lock
and
mov
sbb
xor
inc
popa
dec
mov
test
add
es
loopne
adc
cmp
dec
push
or
push
lcall
lock
mov
add
or
sub
std
push
mov
jae
lds
adc
xor
and
push
aam
int3
push
pop
repnz
lds
imul
mov
in
mov
inc
jbe
outsb
sarb
mov
cld
fstpl
or
xchg
stos
data16
inc
sub
jne
xchg
lea
jmp
xlat
mov
out
mov
sbb
xor
int3
outsb
push
bound
pop
push
mov
lods
fldl
pop
cld
nop
stos
or
ja
imul
and
xchg
mov
dec
stos
mov
mov
int3
aas
cli
mov
stos
push
mov
inc
fbld
mov
ret
and
and
sahf
sbb
cmp
sti
ljmp
addr16
inc
int3
pop
icebp
aad
dec
pop
cmpsl
jmp
pushf
xchg
fcoms
mov
notb
inc
inc
lds
int
insb
push
and
push
xchg
and
pushf
int
mov
fs
loopne
icebp
add
in
push
in
jae
stc
inc
mov
stos
scas
cmp
push
leave
mov
jl
ds
push
sbb
daa
outsb
cltd
and
rcrl
mov
pop
push
leave
aas
das
xor
push
subl
pop
inc
loop
dec
jle
dec
pop
mov
lods
fistpl
xor
test
cwtl
dec
mov
pop
add
mov
sub
sahf
or
test
inc
mov
cmp
aaa
mov
int
cmp
mov
and
incb
pop
lds
sbb
sbb
sti
cmp
and
in
push
in
sti
jl
aas
pop
int
mov
out
xchg
sub
sub
pop
cmp
xchg
push
notb
or
jno
push
stc
mov
or
repz
ret
call
sub
mov
inc
dec
loopne
jno
insl
or
les
sub
ret
mov
push
call
xlat
in
bound
test
and
cs
adc
xchg
xchg
ja
verw
add
cmpl
jo
mov
jle
daa
fists
jbe
rorb
dec
push
in
std
jo
aaa
loop
mov
jp
pop
add
test
movsb
add
stos
jmp
dec
jmp
dec
int3
in
pusha
jmp
bound
xchg
clc
xor
dec
popf
mov
pop
dec
rcll
lods
insl
loope
fbld
mov
icebp
cltd
ljmp
mov
mov
fdivrl
add
xchg
bound
hlt
dec
mov
push
lods
cmpsl
stos
or
cltd
aas
pop
jae
std
stos
push
js
xchg
mov
lcall
cmc
jge
stos
out
lret
stos
xchg
aaa
clc
filds
push
fwait
fwait
xchg
xchg
mov
sti
pop
add
and
adc
xor
add
fstpl
fwait
xchg
mov
inc
shl
add
push
inc
arpl
bound
xchg
cs
jae
mov
adc
jbe
ja
nop
mov
sub
shlb
mov
imul
sub
ljmp
xchg
int3
test
add
loopne
andl
fistpll
mov
inc
pop
fs
adc
adc
loope
gs
orb
scas
mulb
add
dec
fstpl
fcomp
dec
rorl
pop
cs
imul
cmpsl
sub
insl
sub
add
xor
rclb
jo
sbb
fsubrs
fdiv
mov
jg
dec
fwait
loope
arpl
sub
int3
adc
int
bound
out
fnsave
mov
cmc
add
xchg
mulb
test
mov
push
hlt
jnp
nop
inc
mov
push
or
pop
mov
pop
loope
int
jg
cwtl
out
aaa
out
cs
movsl
movsl
jbe
dec
push
ss
dec
mov
call
ret
ds
ljmp
mov
cmp
sub
hlt
xor
mov
mov
jnp
push
sbb
std
in
push
cmpsb
sub
and
addb
or
es
dec
add
fldenv
out
cli
xchg
daa
xchg
repz
xor
and
ret
mov
pop
repnz
mov
dec
gs
leave
add
lret
test
out
cli
and
mov
fucomi
sbb
dec
mov
movsl
and
shl
mov
inc
pushf
or
lcall
sbb
sub
mov
out
in
in
mov
pushf
fldcw
inc
ret
js
les
xorb
insl
cmp
fsubs
cmp
jl
jmp
inc
push
inc
out
test
aam
lret
stc
in
pop
cli
movsl
push
mov
adc
sbb
sub
int
pop
mov
sbb
in
mov
push
sub
pop
imul
sti
mov
mov
cmc
imul
xchg
sub
sahf
repnz
into
bound
pushf
push
push
or
shll
fdivs
xchg
lds
cs
ret
cwtl
xchg
jmp
jno
push
sub
insl
add
ret
stos
adcl
mov
xchg
jp
into
cmp
mov
clc
dec
fs
out
adc
cmp
cli
jns
subb
leave
test
pusha
call
ret
jecxz
and
js
xor
test
call
xchg
mov
insl
xorl
pushf
push
in
leave
insb
in
orl
sbbl
js
xor
inc
movsl
inc
add
fnsetpm(287
cmp
or
sbb
iret
dec
pop
jmp
mov
sahf
es
lea
jbe
bound
xchg
or
scas
mov
cwtl
mov
or
ljmp
shrl
outsb
hlt
or
or
std
lds
lea
mov
imul
jbe
xor
push
loop
add
cmc
js
adc
push
outsb
xchg
shl
push
push
fsubs
lcall
and
jnp
enter
iret
aas
jnp
pop
inc
sub
sub
sahf
mov
shrb
sub
mov
cmp
repnz
je
mov
repnz
mov
outsl
lea
pop
pop
push
inc
arpl
mov
jmp
leave
std
std
sub
cmpsb
negb
jbe
pop
xor
cmc
push
daa
lods
push
fwait
js
repz
or
push
cmp
pusha
sti
mov
dec
pusha
mov
loopne
jp
mov
js
addl
pop
mov
xchg
scas
call
push
cld
std
movsl
popa
ja
addl
or
xchg
xor
sbb
add
test
xor
fwait
cmp
sub
pop
jge
add
lahf
xchg
push
pop
int
cltd
cwtl
xor
add
test
clc
cmp
pop
mov
lock
inc
xor
xor
sub
push
mov
xchg
arpl
xchg
push
xor
shlb
daa
lock
pop
xor
jno
cmc
jg
jmp
pop
lods
adc
js
popf
sarb
mov
mov
xor
lds
ret
mov
in
cli
pop
mov
inc
enter
jge
inc
mov
push
or
shll
mov
cmp
repz
dec
icebp
cmp
jmp
cmp
fucomi
lods
mov
pop
out
cmp
sbb
push
dec
mov
in
mov
std
push
jb
and
into
outsl
ret
test
add
dec
lcall
inc
lahf
jbe
test
imul
shlb
fimuls
or
jmp
dec
imul
stos
push
sbb
xchg
les
cmc
ror
xchg
mov
sbb
dec
pop
jmp
or
jge
adc
add
mov
xor
dec
sub
or
filds
lea
xlat
lahf
dec
into
out
lahf
ds
mov
adc
and
xlat
xor
pop
sbb
rorb
inc
movsb
dec
mov
mov
xor
mov
or
inc
cmp
ss
call
data16
cmpsl
pop
data16
ss
jge
loopne
and
fnsave
cmpb
mov
mov
lahf
loop
and
in
insl
ret
push
pop
call
scas
jle
mov
lret
add
inc
loope
iret
xchg
into
adc
add
lock
cmp
fldt
xorb
jp
push
sti
scas
cmpsl
push
mov
jg
adc
cmp
mov
inc
cmp
mov
les
cmp
xchg
adc
sarb
jbe
cmp
clc
pop
push
cli
icebp
sub
inc
cmp
add
fwait
xchg
shll
sub
call
mov
sbb
sbb
adc
lret
ret
xor
mov
adc
data16
lock
dec
xor
lods
mov
hlt
xor
push
add
sub
push
pushf
idivl
loop
imul
lret
jmp
stos
arpl
push
aaa
sub
jecxz
mov
daa
mov
sbb
adcb
xchg
fdivl
ljmp
hlt
call
adc
sub
inc
test
sub
cmp
xor
imul
stc
je
mov
mov
adc
push
addr16
sub
ss
cltd
pop
adc
push
incb
inc
cmp
int3
sbb
add
mov
mov
and
add
xchg
aam
push
fdivrl
ss
out
sub
data16
adc
ret
cmp
mov
xchg
dec
lods
fisubrs
add
lods
xorb
lahf
imull
jmp
ret
into
push
sbb
xor
sete
cmc
jne
jns
mov
mov
pop
mov
mov
xchg
pop
jno
jbe
mov
pusha
aas
icebp
sbb
push
imul
sbb
push
insl
mov
adc
pop
lods
adc
jae
daa
sub
jnp
jp
and
sbb
mov
and
push
jmp
imul
jg
notl
mov
jle
xor
fistps
jo
dec
and
adcl
mov
sti
or
out
les
insb
jns
or
adc
in
out
add
sbb
push
enter
repnz
sub
dec
xchg
jb
inc
out
repnz
ret
mov
jle
mov
sti
xchg
int3
inc
stc
mov
fbld
dec
lds
fcoms
and
xchg
inc
les
ss
xor
and
scas
jmp
test
mov
mov
stos
push
inc
jl
addr16
fwait
push
ds
push
jb
push
xchg
and
mov
mov
mov
sbb
xchg
dec
cmp
ljmp
jo
pop
js
xlat
pop
dec
mov
sbb
cmpsl
mov
jmp
jno
imul
int
inc
and
aas
insb
fisubrs
lcall
lahf
xorb
push
push
cmp
mov
dec
xor
cmp
inc
xchg
js
lahf
shlb
mov
sub
or
int
sarb
or
inc
jbe
fisubl
inc
ret
xlat
iret
test
dec
cltd
fisubrs
adc
aas
xor
imul
mov
test
xor
push
inc
out
fidivrs
lahf
or
fs
loopne
in
push
nop
fwait
mov
mov
mov
jbe
xor
movsb
fadd
neg
add
lcall
jecxz
nop
add
dec
into
pop
dec
bound
cs
pop
mov
mov
cltd
int
xor
cmpsb
iret
push
mov
test
jle
xchg
push
pop
pop
aaa
cmp
xchg
lea
and
jno
jo
icebp
out
ret
pop
clc
into
pop
ret
dec
xchg
daa
je
and
push
or
push
cli
mov
mov
gs
dec
rcrl
xlat
xchg
outsb
rolb
and
or
repz
cs
jno
jb
push
jns
or
sbb
inc
and
jp
and
pop
arpl
in
mov
data16
fmuls
jmp
es
jecxz
or
ljmp
lock
or
push
sbb
loope
mov
mov
xor
ds
push
sahf
adc
jns
adc
js
xchg
or
icebp
cmp
stos
inc
gs
add
emms
mov
jo
daa
movsl
and
movsb
cmp
subl
stc
outsb
inc
notb
enter
and
fmuls
hlt
cmp
pop
adc
shl
shrb
cmp
in
movsl
sarb
insl
mov
jbe
or
pop
mov
scas
adc
mov
popa
aam
cmp
inc
mov
push
mov
ret
jbe
push
stos
nop
pushf
lea
add
ret
mov
divl
push
fwait
adc
sbb
inc
adc
in
loope
jne
push
xor
std
mov
mov
std
movsb
hlt
scas
pop
add
jnp
jmp
idiv
and
repz
or
jbe
lea
jbe
jecxz
and
ljmp
inc
push
pop
jmp
andb
dec
push
fnsave
xor
fidivs
insl
or
rolb
les
cmp
add
gs
and
gs
leave
jmp
ds
pusha
and
inc
inc
pop
lahf
dec
add
lret
test
sbb
adc
sbb
cs
fsubs
sbb
aad
or
cmpsl
xchg
add
pop
adc
movsl
mov
pop
fstp
mov
pop
mov
stc
pusha
mov
jb
test
cs
or
call
call
cld
jbe
ds
and
sub
sub
decl
mov
cmp
lea
in
jg
jg
mov
fwait
and
movsl
xor
cmc
in
aaa
cmpsl
shlb
mov
adc
pop
test
popf
sbb
fadds
inc
sbb
out
sbb
mov
incl
sahf
and
mov
aaa
pop
mov
sub
dec
sbb
dec
mov
push
pop
add
aas
lock
cmovb
pop
fdiv
sub
xor
stc
arpl
dec
loopne
fistl
gs
xchg
dec
xchg
sti
dec
xor
dec
aam
iret
int3
in
leave
sbb
sbb
daa
test
aas
mov
lret
sti
sbb
pusha
bound
xchg
fidivrs
xchg
sbb
and
shl
js
repnz
push
es
add
hlt
adc
ljmp
repz
lret
ds
dec
mov
outsb
mov
jle
and
pop
or
aam
cltd
lcall
jg
jae
imul
lret
xchg
push
push
repz
dec
mov
fistpl
mov
or
andl
mov
inc
mov
inc
dec
mov
imul
jmp
mov
imul
jmp
jno
jecxz
ljmp
sti
stos
subb
inc
nop
mov
xor
out
push
push
incb
mov
or
popf
and
sti
mov
mov
or
sbb
nop
cmpsb
lret
and
xor
dec
ds
int3
push
addr16
sti
divl
mov
push
mov
shll
push
bound
adc
mov
ficoms
aaa
outsb
lea
pop
jae
hlt
jns
ret
mov
cwtl
mov
jnp
mov
inc
out
inc
mov
scas
or
xchg
lods
stc
adc
push
lret
pop
fsubrs
pop
movsl
out
mov
mov
push
pop
mov
xor
cmp
sbb
xlat
add
lock
ror
cmp
fwait
cwtl
cltd
dec
imul
push
idivl
push
mov
and
xchg
lock
mov
repz
sub
ljmp
and
mov
pop
push
scas
and
movsb
push
pop
or
cmp
jae
xor
xlat
sub
mov
inc
negb
mov
xlat
jno
das
xor
testl
das
inc
pusha
in
mov
push
adc
xchg
out
aam
sub
cmpsb
xchg
aam
mov
scas
out
cmp
out
shlb
pop
and
test
push
mov
hlt
aad
mov
xchg
mov
imul
pop
mov
mov
mov
xor
test
sub
in
fwait
sbb
xor
jl
int
ret
jb
mov
std
lahf
sbb
push
mov
adc
mov
ss
loope
sti
jmp
push
dec
xor
adc
in
dec
push
lods
stos
mov
fistps
dec
mov
mov
repz
in
xchg
test
subb
add
clc
xchg
jns
dec
xchg
xor
pushf
ud2
hlt
xchg
mov
inc
jg
aas
jmp
inc
data16
push
pop
aad
push
iret
mov
xor
xor
lcall
aas
and
or
rcrl
lds
cltd
jle
lret
mov
scas
jg
mov
scas
or
ret
pop
inc
dec
dec
rclb
les
sbb
cmp
je
rorb
jbe
mulb
xor
es
shrb
mov
jnp
push
mov
sub
ss
popl
movsl
inc
pushf
clc
mov
xor
jg
movsl
leave
test
ret
loopne
aad
xlat
ret
mov
and
imul
xor
and
iret
in
pop
pop
fnstsw
dec
int
jecxz
push
aam
push
mov
mov
les
push
and
lock
and
xor
dec
adc
jbe
sub
jns,pt
mov
negb
mov
add
sub
idivl
xlat
xchg
mov
jmp
pop
xor
ljmp
adc
dec
mov
push
and
mov
pop
xlat
and
add
decl
out
je
es
cltd
and
pop
std
cmp
call
and
mov
fdivrl
mov
xchg
push
jg
iret
inc
jbe
out
loope
adc
lcall
and
jae
adc
cmp
mov
xchg
jns
daa
xor
mov
loopne
sti
push
test
insb
in
inc
add
jge
xchg
pushf
add
dec
push
cmp
inc
mov
movsb
push
add
pop
bound
movsl
addr16
fdivrs
stos
or
lds
lcall
xchg
rclb
push
jp
pop
pop
lods
push
insb
pusha
outsb
dec
mov
jno
mov
push
cmc
jns
das
add
popf
popa
add
jle
add
push
jmp
stc
rcl
stos
imul
in
nop
mov
jmp
lret
outsb
xor
stc
lea
stc
daa
aam
push
fstps
cmpsl
mov
fwait
mov
mov
js
jb
es
mov
jmp
jge
scas
xchg
int3
loopne
ret
pop
or
div
and
imul
loopne
jbe
popa
push
lods
cmp
add
subb
test
xchg
mov
bound
lds
pop
cmp
lods
jecxz
popa
cmpl
pushf
aaa
inc
or
pop
add
dec
cwtl
fnstcw
ja
int3
shlb
push
mov
data16
push
sbb
lods
fs
sub
test
bound
jbe
mov
outsb
xchg
xchg
adc
fwait
jne
lahf
sub
lods
sub
ds
adc
sub
out
mov
inc
ror
pushaw
mov
mov
mov
aas
mov
mov
xor
repnz
mov
std
clc
sbb
aas
pop
sbb
add
int
mov
jmp
cli
adc
out
fs
test
rorb
outsl
scas
ret
jp
idivl
xor
mov
mov
push
add
scas
pop
jb
mov
xor
clc
inc
fisttpll
out
bound
dec
xchg
or
notl
addr16
stos
pop
aam
sub
add
incl
outsl
mov
aas
push
adc
jno
lds
insl
mov
es
pop
or
lods
outsl
stos
pop
cmc
xor
sbb
mov
jecxz
scas
xor
add
or
jo
add
rclb
inc
mov
or
pop
push
jb
dec
inc
loope
andb
das
add
es
inc
sbb
int3
leave
cmp
sahf
xor
fwait
xchg
xchg
rolb
out
mov
cli
add
pop
cmpsl
xor
adc
push
xorb
mov
push
test
inc
mov
iret
adc
lret
pop
dec
popf
loope
std
test
out
cld
pusha
outsb
mov
sub
push
mov
popf
iret
pop
pop
add
jb
cwtl
jb
sub
leave
dec
mov
lret
mov
mov
daa
mov
xchg
or
add
movsb
push
push
les
mov
adc
lds
daa
inc
jo
lods
fnstenv
xor
xchg
sbb
jg
xchg
pusha
aam
fs
xchg
xlat
bnd
sbb
jmp
loop
jnp
data16
mov
cmovo
mov
inc
jmp
jecxz
jb
or
fldt
or
push
daa
push
pop
dec
adc
push
jle
xchg
addr16
gs
leave
jecxz
nop
add
xor
loopne
push
sbb
lret
test
movl
mov
jnp
mov
test
mov
cmc
pop
rcr
mov
and
push
adc
dec
inc
orb
fistps
mov
imulb
shrb
jo
popf
lcall
outsb
sbb
jae
pop
ficoml
test
stos
stos
jl
xchg
ja
or
rolb
ja
push
rcll
pop
xor
pop
pop
cmpsl
sub
setg
pop
loopne
mov
or
ljmp
punpcklbw
jecxz
pop
add
scas
mov
inc
jl
pushf
stc
dec
mov
sti
iret
fldcw
xor
inc
outsb
pop
adc
dec
repz
jae
dec
mov
stos
mov
xchg
sbb
push
add
xor
mov
icebp
orw
cmp
pop
adc
ja
jns
pushf
aam
jge
add
adc
cli
and
lcall
or
mov
icebp
rclb
ss
mov
mov
es
loop
mov
ja
mov
pushf
ds
les
out
mov
pop
repz
ds
sub
cwtd
lcall
dec
sti
sub
push
stos
js
sub
orl
lock
push
repnz
sbb
loope
and
enter
clc
lcall
mov
xchg
push
inc
mov
or
add
push
imul
gs
push
or
inc
imul
idiv
scas
js
sbb
xchg
cmpsb
mov
adc
ds
test
jae
cmp
pop
into
out
ret
out
jecxz
das
xor
insl
mov
inc
jmp
dec
mov
mov
in
inc
add
xor
adc
dec
or
cmc
or
sbb
sbb
push
cmp
pop
fsubr
pop
iret
testl
jns
add
add
xchg
jns
pop
lahf
jmp
sub
xor
cmp
or
idivb
xor
and
test
inc
xor
fistl
je
xchg
push
int
push
adc
das
fisttpl
mov
test
fisubs
push
mov
dec
sub
inc
cmc
jo
into
ja
sub
push
jle
test
call
ret
jae
sub
xor
jecxz
dec
mov
mov
push
loope
jmp
sbb
fnsave
cs
cmc
or
in
jb
js
mov
cmpb
mov
and
out
push
adc
mov
mov
out
lcall
xchg
lods
jle
jne
push
jne
push
cmp
insl
bound
jae
jmp
and
enter
insl
fimuls
or
les
adc
in
or
jbe
pop
aas
popa
pop
jle
es
and
adc
add
jb
push
or
aam
fs
cvtdq2ps
push
mov
orb
adc
repnz
xchg
push
lcall
sub
pop
aas
push
ret
sarb
mov
add
mov
push
xor
nop
dec
stc
xor
jmp
sub
pop
jns
jge
sub
dec
sub
sbb
push
js
repz
mov
sub
mov
stos
notb
movsl
inc
sub
insb
pop
dec
icebp
int
xor
jp
mov
xchg
mov
imul
dec
lods
adc
jno
rcrl
lahf
push
and
dec
inc
leave
jno
mov
cmp
mov
xchg
shlb
stos
jmp
cs
and
int
and
sub
int3
add
lea
ret
popa
push
sub
call
lods
insb
sub
jge
lret
loopne
sahf
pop
dec
mov
mov
fisubrs
and
and
loope
fcoms
ret
into
or
jb
dec
call
jmp
lss
pop
push
jb
sub
mov
lcall
arpl
inc
mov
cwtl
scas
jns
bound
sbbb
mov
add
shrl
push
jp
jbe
xor
push
test
aaa
icebp
jbe
orb
push
lods
and
sbb
movsl
mov
and
push
das
lret
aad
out
mov
mov
xor
pop
pop
sub
xor
push
cmp
rcll
shrb
xor
imul
adc
out
or
pop
cmp
jecxz
fstps
aam
lds
jns
push
testb
js
je
dec
or
mov
pop
inc
sbb
scas
inc
jb
adc
pusha
sbb
je
jmp
lret
jb
sbb
mov
pop
repnz
adc
cmpsb
and
cld
ja
enter
jns
xor
cld
add
xchg
pushf
pushf
adc
out
dec
stc
or
xor
aas
xchg
lds
xchg
lcall
or
aam
pop
or
out
sbbl
mov
not
mov
inc
push
pop
cmc
mov
jmp
push
push
push
cli
and
xchg
aam
outsb
cmpsb
push
pushf
sar
test
std
xor
push
in
cmp
push
hlt
pushf
xchg
lea
rcll
shlb
pop
jae
cmp
repnz
xor
scas
pop
loope
mov
sbb
jmp
mov
hlt
rolb
test
dec
jbe
shll
cltd
push
icebp
jbe
adcb
mov
incl
mov
rcrl
or
ljmp
mov
outsl
or
sub
shll
sbb
mov
incl
or
decl
cmpsb
mov
add
lret
ja
lods
ja
in
jo
sbb
jne
mov
xor
jp
pusha
js
or
mov
xchg
test
pop
lock
stc
rcrb
das
ds
add
lea
test
xchg
mov
out
xchg
call
adc
or
scas
mov
lods
imul
idivb
insb
shll
push
out
in
mov
or
in
loope
and
sbb
pop
push
add
or
inc
dec
sbb
jge
decl
outsb
les
fsub
scas
cmp
mov
pop
cmpsb
test
sbb
aam
lret
lcall
fdivs
cmp
out
sbb
push
and
and
fisubl
mov
int3
imul
adc
ffree
xchg
aaa
jmp
outsl
push
jo
stos
jae
sub
mov
push
jmp
fwait
pop
inc
cmp
jb
test
mov
push
std
pop
xor
clc
push
xor
pop
cmc
mov
and
repnz
dec
dec
shll
push
push
dec
mov
clc
enter
fs
jecxz,pt
insl
push
push
pop
sbbb
loop
enter
aad
aas
and
imul
mov
jmp
xlat
fidivl
cmc
and
jl
xchg
das
out
mov
enter
jecxz
add
mov
enter
dec
cmp
lcall
push
imul
xchg
pushf
fs
ficoms
imul
and
and
adc
cmp
imulb
pop
dec
push
sbb
int
mov
push
aad
cltd
cmp
mov
fsubr
scas
xchg
mul
xor
xchg
filds
fsubp
lods
lock
lea
sbb
mov
add
sbb
test
insl
push
cmp
and
fwait
stc
add
jp
in
xchg
inc
les
lcall
loop
fs
adc
movsb
mov
cmp
push
xchg
addr16
lods
push
pop
jge
orl
lock
movl
rorl
add
out
xchg
push
fistpll
pop
mov
push
mov
aam
inc
and
inc
repz
pop
push
outsl
add
sbb
push
subb
xchg
push
iret
cmc
push
push
sti
fisubrs
mov
pop
mov
into
loopne
push
sbb
fdivl
ficompl
ljmp
pop
adc
jecxz
adc
aaa
test
push
xchg
hlt
shr
testl
xor
cmp
cmp
xchg
xchg
jb
bound
mov
adcb
mov
test
pop
insl
loop
je
and
sbb
sub
cld
or
pop
movsl
cmpsl
imul
mov
rdmsr
jecxz
mov
mov
int3
xchg
test
and
inc
leave
jg
pop
inc
filds
push
clc
push
lock
inc
adc
and
ja
iret
cmp
xor
ljmp
jmp
loop
adc
xchg
in
enter
push
test
icebp
jnp
fs
loope
cmpsb
popa
and
call
pushf
mov
push
jno
loop
pop
push
push
sub
sub
loope
mov
stos
xorb
aaa
xlat
ss
mov
cmp
jecxz
or
sbb
outsl
add
adc
and
das
shl
cmp
mov
push
popf
mov
cmc
mov
cmpsl
out
fstpl
lcall
pusha
cmp
frstor
test
and
cmpsl
xchg
inc
daa
xchg
sbb
mov
lret
movsb
jle
fildl
sub
insl
ret
and
mov
sub
jno
ret
mov
fwait
mov
xchg
imul
xor
icebp
jmp
inc
push
and
or
out
xchg
add
dec
jne
cmpb
std
jecxz
mov
jp
dec
bound
jp
pop
fs
test
xor
cmc
fwait
mov
mov
lahf
in
cmp
divl
in
aas
push
push
mov
pop
cld
mov
rcrl
in
mov
jno
iret
leave
cmp
add
fsub
stos
popf
mov
aad
incl
jae
into
fs
sti
jo
fisttps
in
adc
sbbb
nop
inc
inc
or
push
and
dec
xor
dec
cli
dec
cmp
xchg
or
xor
push
ljmp
ret
out
push
shlb
mov
jbe
xchg
mov
or
inc
and
mov
ja
aaa
inc
add
test
mov
sub
loope
inc
fisttps
cmp
cmp
jle
shrb
cltd
scas
roll
jmp
shlb
out
add
insb
lods
pop
flds
sbb
add
jnp
cmp
mov
movl
pop
mov
mov
in
jmp
or
leave
and
daa
insl
push
push
adc
hlt
adc
lret
cmpsl
mov
in
cli
movb
mov
mov
mov
jmp
xchg
push
dec
mov
adc
sub
push
cld
insl
int
and
mov
loop
pop
stc
stc
jae
sbb
or
mov
mov
mov
push
inc
mov
or
aaa
cld
nop
leave
jg
or
pop
dec
and
dec
lock
enter
add
dec
rcll
inc
jmp
or
mov
lods
mov
out
sub
add
out
outsl
subb
pushf
jae
fadds
push
and
lea
clc
shr
xchg
push
inc
add
and
ds
arpl
call
jnp
mov
pop
mov
and
test
sbb
cmp
jp
testb
xor
icebp
lods
lahf
cmp
ljmp
ja
rorl
xor
push
pop
cmp
sbb
mov
lods
sti
int3
dec
outsl
sub
and
movsl
xchg
jmp
sbb
jecxz
out
sbb
fcompl
out
xchg
pop
popl
out
xlat
je
sbb
cli
or
jo,pn
or
sub
fchs
mov
cmp
jo
sti
jl
aad
cmp
scas
adc
sub
sbb
mov
sbb
mov
mov
mov
clc
sub
aaa
push
pop
lods
push
adc
push
incb
popl
mov
ljmp
push
add
sub
cmpsl
xchg
in
les
xor
mov
xor
divl
roll
das
fbstp
sahf
xor
stos
jl
and
xchg
lds
sbb
arpl
insl
dec
test
notl
les
leavew
or
jp
pop
mov
sub
test
arpl
iret
out
cmpsl
shl
sti
rorb
and
and
int3
or
in
es
push
push
fcoms
push
les
pop
cwtl
add
ja,pt
push
fiaddl
addr16
push
push
push
mov
push
push
flds
adc
xchg
aad
mov
iret
clc
push
sbb
hlt
xchg
ss
xor
cmp
or
cmp
outsb
xchg
cltd
neg
call
mov
lds
imul
xlat
pop
das
repz
push
jmp
xor
cli
inc
repz
jl
jg
cmc
xor
cmpsb
lods
je
ficoml
or
pushf
jnp
xchg
stos
sbb
cmpsl
add
jg
pop
push
lods
cmpsl
loop
adc
jno
sub
aaa
dec
sti
or
xchg
movb
push
imull
insl
cmp
inc
mov
adc
test
jmp
xor
cmp
adc
xor
push
ret
pop
popa
dec
aam
roll
sbb
xor
dec
lret
jno
cs
sub
jg
dec
cmp
cltd
inc
add
loope
dec
sub
dec
dec
shll
sbb
sub
call
mov
fistpll
iret
repnz
xchg
mov
or
jp
mov
cs
push
xchg
rcrb
dec
scas
sbb
scas
jg
or
mov
mov
scas
or
cmpsl
jae
mov
adc
mov
stos
out
jbe
sbb
lds
or
jnp
leave
out
leave
or
adc
xchg
xchg
jbe
lods
and
icebp
add
push
sub
lods
repnz
xchg
test
jns
incl
es
xchg
push
add
es
fimuls
sahf
scas
xor
jle
mov
jae
and
mov
clc
pop
jmp
mov
sahf
in
mov
and
js
imul
mov
ss
jge
dec
push
fdivr
icebp
pushf
rolb
call
or
inc
fisubl
jp
inc
mov
or
adc
mov
push
xchg
mov
cld
inc
or
int3
mov
adc
jo
aam
bound
cmp
in
arpl
lea
xchg
and
sbb
xchg
xor
mov
adc
sbbb
fs
jbe
xor
fisubrl
mov
jns
stos
mull
int
push
xor
pop
lods
pop
aas
inc
daa
out
es
xchg
lcall
ficoms
int3
in
scas
pushf
pop
pop
fstpl
inc
jne
or
mov
jmp
int3
mov
push
call
pop
jbe
enter
and
stc
sbb
mov
cmpsb
shlb
sarl
cwtl
movsl
enter
aad
push
dec
jne
mov
loopne
lahf
adcl
jbe
mov
js
mov
mov
inc
dec
push
jo
ds
mov
inc
addl
int3
stc
inc
ffreep
testb
sub
popf
push
push
je
iret
mov
and
pushf
mov
fisttps
sub
adc
inc
in
add
es
stos
test
push
mov
pop
ljmp
and
test
stc
add
xchg
and
cltd
adc
cs
stc
je
cmc
fwait
xor
sbb
mov
dec
add
and
adc
jno
imul
mov
insl
push
pop
or
loope
nop
add
inc
in
mov
aad
mov
rep
mov
lods
xor
out
push
jo
sub
gs
fst
xchg
shlb
punpckldq
ret
loope
pop
lods
das
push
mov
cld
loope
out
add
lcall
pop
sti
jle
mov
mov
roll
mov
pop
insb
cmova
call
mov
cmp
rorl
xchg
daa
mov
add
lea
add
add
cmp
xor
xchg
cmp
lahf
fldenv
mov
mov
cld
dec
in
fimuls
addr16
jp
mov
xchg
cmp
push
and
inc
mov
clc
andb
jnp
insb
arpl
daa
stc
sbb
fimuls
rclb
jno
mov
cmp
xchg
enter
sbb
mov
cmp
ja
hlt
inc
pusha
lock
push
or
cmc
movsb
inc
mov
push
add
inc
outsb
mov
loopne
sbb
leave
sbb
mov
xchg
fs
adc
adcb
sbb
xchg
fistps
push
mov
lods
test
pushf
xchg
sub
cs
inc
or
test
in
out
testb
sti
push
mov
stos
cld
and
fsub
sti
xor
int
inc
xor
inc
inc
push
test
in
adc
pusha
and
ja
call
sbb
xchg
into
movsl
jo
push
sub
movsl
xlat
dec
clc
cmp
push
jg
jmp
push
jne
xor
xchg
loopne
adc
jnp
inc
out
lahf
sbb
lahf
out
cmp
cld
subb
jae
ljmp
fstps
inc
je
out
inc
in
jae
add
xlat
daa
adc
dec
lds
add
jns
push
rorb
data16
sbb
icebp
lods
lret
scas
xor
jl
dec
arpl
xchg
loop
push
jecxz
nop
in
fsts
and
jb
sbb
xor
movsl
outsb
bound
xor
mov
mov
lret
mov
fdivs
in
nop
xchg
inc
js
push
mov
cwtl
mov
repz
ja
fcmovbe
or
sub
dec
rcrl
sub
arpl
or
cltd
add
jns
cltd
sub
loope
inc
pop
fdivl
mov
xchg
cltd
idivl
mov
adc
xor
cmc
dec
stos
sbb
mov
mov
pusha
xadd
lods
outsb
push
dec
cmp
outsb
mov
dec
cld
je
lret
push
add
or
or
inc
mov
ljmp
cmpb
lods
in
jb
mov
fs
xor
lods
and
jb
adcb
inc
pop
pusha
dec
pushf
pop
xor
dec
cmp
addr16
push
pop
ror
sub
aam
or
mov
popf
jmp
pop
mov
testb
mov
int3
push
or
mov
lret
mov
jmp
mov
inc
call
ja
sbb
xor
xchg
inc
ljmp
and
and
pop
inc
gs
inc
push
inc
mov
mov
mov
sub
push
mov
stos
js
js
xlat
sbb
std
or
stos
jecxz
add
add
sbb
cmpsb
pop
push
xor
adc
out
mov
mov
xchg
movsl
jecxz
das
push
pop
loopne
mov
jmp
cs
jmp
les
jo
imul
pop
sbb
mov
outsl
lods
dec
or
adc
ja
jb
out
test
aas
mov
jnp
sahf
hlt
or
out
mov
icebp
xor
mov
push
lcall
cmp
jae
dec
mov
xchg
cmpsb
nop
insb
out
imul
inc
inc
xor
mov
push
cmp
cmp
dec
aam
ffreep
pop
add
jno
shl
mov
mov
es
cld
xor
insl
scas
in
lahf
sti
xchg
mov
mov
jbe
mov
push
ds
sti
mov
mov
jmp
ja
cmp
cmp
sti
popl
sub
ja
xor
or
pop
pop
repnz
add
testl
dec
push
cmp
loope
out
cmpsl
inc
adc
bnd
mov
mov
push
roll
adc
mov
cltd
pop
dec
dec
push
aad
and
aaa
fwait
jp
scas
stc
dec
ret
mov
jmp
daa
out
push
scas
out
popa
lds
pop
dec
and
rol
fwait
js
xchg
clc
test
push
add
aam
push
add
stc
inc
jae
cmp
and
std
popa
out
fs
dec
arpl
or
pop
add
xchg
aas
pop
sbbl
out
push
inc
push
pop
sub
lock
xchg
cld
not
push
ffreep
ljmp
lret
insl
xchg
movsb
lds
aam
scas
dec
push
inc
mov
popf
push
sti
mov
jns
jmp
stos
push
lods
shl
sbb
xor
call
mov
sbb
or
add
scas
pop
mov
ret
test
mov
fucom
adc
or
push
notb
xchg
lods
xor
insb
push
dec
jmp
and
sbb
cld
sub
adc
or
or
xchg
push
or
mov
into
popa
jg
loopne
pop
movsl
jnp
xor
push
fcompl
xchg
pop
mov
or
jo
or
aas
pop
jbe
scas
imul
xchg
enter
shll
jno
repnz
cwtl
imul
cmpb
movsb
xchg
aaa
movsl
mov
outsl
push
fwait
push
insb
push
sysexit
pop
ja
shlb
mov
mov
cmc
or
cmp
jns
dec
or
and
in
sbb
in
call
loopne
jo
movsb
rcrl
cmp
inc
add
repnz
lcall
dec
ds
push
jne
fdivrl
fldcw
dec
dec
push
ds
cmpsl
faddl
mov
pusha
popf
lods
popf
xlat
cmc
mov
mov
lods
cmpsl
clc
dec
xchg
and
mov
rcll
pop
fmul
sbb
mov
cmovnp
cmp
fcomp
adc
dec
lods
sub
xchg
jmp
aas
adc
cwtl
xor
ljmp
add
pushf
pop
xchg
test
in
std
mov
movsl
pop
lods
out
fs
sbb
inc
pop
lods
sarl
fiaddl
in
push
add
outsb
or
repnz
and
lret
add
adcb
push
into
lret
add
fiaddl
adc
add
loopne
xor
ja
movsl
push
cmp
mov
push
lock
sarl
add
xchg
xchg
into
cltd
dec
jmp
scas
xor
or
out
lret
sbb
mov
mov
mov
and
pop
orb
int3
adc
orb
out
inc
pop
inc
add
in
in
jmp
push
add
cli
hlt
aaa
cmpb
stc
loop
sub
pop
cmp
jmp
sbb
or
push
cmp
mov
mov
xlat
outsb
mov
fnsave
jbe
test
rol
push
arpl
imul
orb
fwait
or
js
push
pop
cmpsb
xor
and
sub
cmp
stc
aad
cwtl
pushw
lea
test
clc
sub
dec
lea
mov
testb
lret
jmp
movsl
fsubs
pop
and
ret
add
mov
mov
je
mov
mov
aad
add
push
faddl
addr16
and
das
stc
or
popa
dec
adc
xchg
bound
xor
decb
mov
or
enter
cmc
add
adc
adcl
sub
lds
pop
jg
rorb
imul
repz
es
xchg
pusha
push
cmovg
jecxz
mov
xor
and
mov
shrb
adc
dec
push
push
dec
ds
push
adc
sarl
daa
enter
inc
jne
and
and
cmp
xor
std
fldenv
pop
fistpll
push
js
sub
notl
cmp
jbe
sub
pop
int3
cmpsb
bound
cs
push
lea
cmc
jbe
sbb
sbb
pusha
lahf
bound
test
ss
sar
mov
bound
int3
pop
xchg
dec
pop
fimuls
adc
sub
jmp
pop
arpl
xor
xlat
xchg
adc
lds
ja
jns
movsl
mov
inc
popf
inc
xor
xchg
jmp
jns
cmpsl
fchs
fucomi
xchg
gs
xchg
jbe
aas
jne
inc
inc
or
fwait
test
lcall
out
lea
cmp
iret
lods
and
mov
cs
sbb
inc
js
mov
test
jbe,pt
loop
rol
jmp
bswap
xchg
mov
sbb
push
jns
mov
call
call
cmp
jnp
imul
or
mov
pushf
mov
xchg
sti
add
je
sarb
in
and
adcb
stc
data16
test
dec
cmp
xchg
inc
stos
inc
push
pop
mov
pop
and
jl
pop
mov
mov
iret
sbb
negl
aad
and
vpshuflw
push
cltd
lock
cli
mov
dec
xor
daa
mov
rcll
push
pop
xchg
jne
int
lds
out
arpl
addr16
cmpsl
inc
iret
xor
pop
idivb
xchg
jns
js
inc
inc
add
sbb
add
sbb
dec
xor
fldcw
out
pop
shll
loopne
or
sbb
ljmp
xor
sbb
stos
fcoml
outsb
std
cmp
xor
mov
mov
in
jl
popf
jb
jecxz
add
mov
push
sbb
loopne
pusha
pop
in
loopne
je
enter
xchg
sub
xchg
sub
push
or
test
arpl
push
sub
mov
std
leave
test
mov
pop
or
sti
push
subb
push
shlb
mov
mov
adc
and
push
cmpsl
cmp
push
or
or
loopne
mov
push
jge
jno
popa
pop
jg
inc
add
mov
add
adc
sbbl
repz
lock
xchg
in
adc
xchg
dec
test
js
fidivrs
mull
push
shll
or
push
repz
and
ret
out
aam
pusha
lea
js
out
and
xchg
add
add
mov
jne
xor
les
and
lods
mov
imul
clc
lahf
adc
dec
popa
pop
cmp
fisttpll
cmp
push
lahf
lds
pop
add
xchg
xchg
test
mov
mov
test
imul
cmpsb
xchg
pusha
or
int
push
outsl
pop
sbb
push
sbb
inc
adc
dec
test
or
pop
les
pop
or
push
fmul
sbb
repnz
movsb
sbb
xchg
dec
pop
testb
xor
cld
fadds
shr
and
cmp
adcb
std
jnp
fisttpl
clc
sahf
mov
push
je
jp
shlb
mov
rclb
scas
clc
cmc
sahf
jp
in
outsb
outsb
mov
and
mov
pop
test
rcrb
pop
jmp
loope
sub
repnz
push
inc
inc
sti
add
imul
pop
repnz
jg
cltd
mov
fildl
mov
inc
jns
mov
adc
xchg
loop
push
ficomps
sbb
cld
lcall
in
scas
aad
pop
sub
push
out
jno
mov
dec
adc
std
jmp
add
cltd
pusha
rcrl
add
movsb
in
stc
jg
sub
and
cld
xor
dec
sbb
pop
push
scas
dec
pop
loope
fldln2
mov
xor
mov
out
ja
sbb
push
mov
xchg
dec
std
ds
stos
xor
and
mov
or
imul
add
mov
mov
aaa
inc
jbe
inc
pop
icebp
cmc
and
std
ds
push
insb
push
fidivrl
icebp
movsl
mov
sbbb
insl
cmp
cmp
aas
popf
cmc
fldenv
dec
push
dec
mov
imul
jae
cmpb
xor
data16
rol
xor
rclb
cmpsb
in
fistps
sarl
inc
jbe
sub
cmp
dec
add
jp
aam
lret
cld
push
rcrl
jecxz
or
sub
in
adc
jmp
lock
jo
loopne
sti
fs
movsb
pop
add
add
pop
jge
push
sbb
stos
add
jbe
cmpsb
push
mov
inc
shlb
cmpsb
cmpl
movsl
aad
xchg
lahf
mov
repz
pop
js
dec
cli
jmp
sub
loope
int3
frstor
stos
and
das
cwtl
cmc
std
xor
neg
scas
and
mov
mov
push
xchg
jns
ret
fbld
mov
cmp
scas
mov
lahf
or
adc
test
popa
mov
in
jmp
fisubl
lret
and
aas
mov
jae
sub
fistpl
push
aaa
mov
mov
rorb
jmp
xchg
dec
jecxz
incl
cmpsl
mov
cli
insl
imul
ds
flds
push
rolb
mov
pop
dec
push
and
andb
mov
lods
push
lea
stos
lock
imul
ret
mov
notl
adc
andl
aad
int3
xor
lret
sti
test
mov
test
repnz
pushw
idiv
xchg
jge
cmp
sbb
neg
int
les
mov
add
add
hlt
ljmp
xchg
xchg
es
shr
push
test
mov
jno
pop
fwait
adc
data16
jle
dec
es
divb
loopne
mov
mov
aad
mov
adc
in
int
sarl
xchg
jo
sti
jecxz
orl
xchg
icebp
ss
sub
std
xchg
in
outsb
daa
or
sahf
sbb
lods
add
jp
inc
dec
out
xchg
push
test
mov
stos
iret
outsl
inc
mov
scas
push
fdivr
pop
add
loope
sbb
or
mov
mov
je
lahf
or
gs
pushf
jecxz
mov
loop
loope
mov
pop
test
shrb
scas
mov
or
cmp
out
imul
jp
xor
and
or
pop
scas
add
test
out
jp
add
add
cmpsl
dec
jmp
popa
and
clc
jle
pop
cmc
iret
sbb
pop
frstor
incb
mov
lods
cmp
jmp
dec
inc
fsubrl
fbld
mov
add
mov
xorb
mov
enter
js
inc
or
lock
ljmp
mov
jae
pop
add
in
mov
shlb
scas
xor
push
dec
fs
add
loope
or
test
test
es
test
push
loopne
popa
imul
cmpb
mov
enter
in
movsl
sbb
mov
dec
movsl
es
aas
clc
lcall
dec
stc
mov
xlat
test
les
mov
mov
mov
push
push
and
xchg
cli
pop
out
movsl
mov
add
cld
and
out
mov
mov
fcompl
sbb
add
out
push
mov
repz
cmc
je
shr
mov
stc
and
loopne
scas
or
lods
sti
mov
and
add
loopne
jmp
aaa
mov
jbe
push
adc
sub
es
jge
cs
andb
mov
mov
stos
or
pushf
cwtl
jle
cs
rorl
adc
pop
xor
ret
mov
pop
add
or
sub
ret
push
das
ret
rep
movsb
push
mov
lret
fisubrl
mov
cmp
jne
hlt
gs
outsb
jno
je
rcr
push
pushf
push
sub
ret
mov
cmp
imul
rorl
out
adc
cs
sub
jmp
sahf
fs
push
inc
scas
xor
mov
pop
cltd
adcb
outsb
mov
imul
lock
sbb
outsl
jg
and
pusha
in
push
aad
ret
iret
xor
or
out
sti
sub
mov
lahf
out
sbb
cmp
pop
dec
jnp
xlat
sarb
xlat
sti
inc
push
pop
cld
mov
push
push
mov
mov
loopne
jmp
testl
stos
imul
or
lcall
cli
insb
fsubl
add
inc
jbe
cmc
sbb
adc
mov
es
inc
rorl
push
jg
shrl
lods
adc
jmp
sbb
mov
jno
push
dec
mov
lret
clc
in
ss
int3
xor
push
scas
xchg
add
push
insb
dec
mov
mov
push
aaa
mov
sub
rcrb
add
lods
stc
outsb
daa
enter
dec
dec
fwait
or
aam
mov
push
rcrb
jge
filds
lret
data16
jp
jmp
movsl
pop
loopne
xchg
sbb
jg
fucomip
loop
and
mov
js
gs
mov
fs
dec
jo
jg
inc
pop
cwtl
fsubrs
fs
imul
add
jg
icebp
loop
xor
lcall
scas
repz
aaa
jo
sub
dec
ss
pop
stc
mov
push
je
dec
jecxz
dec
pop
xchg
cmp
rcl
pop
fsubr
repz
jne
je
rol
mov
push
mov
out
lods
sub
sub
jmp
imul
inc
xor
ja
notl
xor
cmp
adc
cmc
push
pop
sarl
xchg
jns
add
xchg
clc
cwtl
cltd
xor
pop
xor
into
fsubs
push
std
dec
pop
repz
mov
jbe
cmpsl
rorl
stc
inc
pop
mov
out
pop
mov
mov
andb
call
push
inc
repz
aas
sub
cmp
repz
cli
add
enter
out
xor
mov
inc
push
popa
mov
sub
cwtl
dec
xor
cmpsb
add
jge
xor
inc
dec
cmc
mov
lods
sahf
test
lret
sub
jae
loope
outsl
inc
or
loop
add
cmp
adc
dec
lods
mov
jns
adc
and
inc
push
in
mov
xor
rol
sbbl
lcall
mov
push
dec
repz
lcall
jo
andb
inc
sti
fwait
popf
add
cmp
inc
mov
mov
movsl
cmpsb
in
push
xchg
fisttpl
lret
aam
enter
hlt
repnz
cltd
imul
jb
xchg
pop
in
mov
clc
jp
add
xchg
jmp
fwait
cmp
push
movsb
push
jo
popf
pop
jle
shll
xchg
mov
xor
push
xchg
xor
jbe
xor
lahf
mov
inc
inc
mov
adc
loop
dec
jge
stos
imul
jecxz
negb
sbb
insl
dec
xchg
xchg
ljmp
out
push
outsl
mov
inc
iret
orb
xlat
daa
push
and
ss
jl
push
mov
mov
cltd
adcb
and
dec
jb
scas
mov
mov
fs
outsb
sbb
mov
xchg
xchg
add
bound
inc
stc
jb
mov
fdivs
adc
cltd
push
and
mov
hlt
addb
shrb
pop
les
insl
inc
pop
lds
std
sbb
mov
mov
add
jae
mov
loop
sbb
pcmpgtw
bound
push
ds
mov
orl
or
jne
pop
bound
mov
test
push
fsubs
xor
cmp
cwtl
aad
divl
bound
idivl
hlt
xchg
cmp
inc
sbb
jl
into
pop
fildl
mov
testb
xor
xlat
xchg
and
and
jae
mov
dec
fcmovnb
in
out
out
sub
and
mov
mov
cltd
aam
mov
or
movsb
mov
push
stos
daa
cwtl
lds
enter
sahf
mov
negb
or
or
jb
or
movb
iretw
rcl
sahf
jbe
push
mov
cmp
jmp
inc
fs
inc
xor
jae
insl
ss
and
int3
jmp
mov
push
pop
dec
pop
pop
mov
icebp
les
pop
movsl
cli
in
xchg
lea
or
jns
clc
outsl
jns
lods
es
sbb
lahf
xchg
jae
nop
int
fnsave
mov
adc
or
shll
iret
je
ljmp
fdivrl
cmp
mov
pusha
add
mov
test
nop
pop
xor
jae
and
push
jb
movsb
in
shll
mov
inc
xor
jns
pop
sbb
push
adc
jno
fiadds
add
lock
jnp
pop
enter
jl
mov
lcall
mov
add
les
rolb
repz
xor
pop
decb
inc
test
adc
pop
stos
sub
stos
jecxz
decl
ret
jmp
jecxz
nop
cmpsb
sub
push
mov
repz
mov
ss
int3
sahf
mov
popa
in
shrb
and
sbb
xchg
cmpsl
push
sbbl
pop
aas
mov
in
cmc
call
jle
arpl
int3
and
inc
mov
push
mov
fxch
sbb
mov
cmpsl
pop
les
mov
movsl
lds
loope
shlb
cmp
imul
lock
repz
sti
push
ret
btcl
xlat
push
xlat
mov
imul
pop
mov
jnp
push
fldenv
xchg
sub
or
es
pop
pop
insb
cli
mov
out
xor
hlt
ljmp
shrl
fistpll
push
mov
dec
xchg
xchg
jbe
bound
add
mov
inc
daa
popa
dec
ret
stos
add
fs
popa
pop
imul
jge
or
in
pop
jl
scas
mov
sbb
jne
jp
mov
xchg
xchg
or
leave
inc
mov
xor
in
cli
mov
mov
jno
xchg
ljmp
jg
jg
inc
ficompl
xchg
sbb
jl
stos
fcompl
stos
mov
dec
dec
mov
mov
es
popf
or
arpl
xchg
int3
and
or
or
nop
sub
adc
pop
sbb
test
push
jg
sub
addb
mov
pop
inc
sbb
bound
call
sub
pop
and
ja
inc
add
stos
and
scas
in
fidivrs
je
dec
push
jl
sqrtps
clc
cmp
and
xchg
jp
cli
xchg
ljmp
stos
lret
pop
mov
subl
push
xchg
sub
jno
fbld
mov
push
shl
pop
dec
and
mov
push
pop
js
push
cld
lods
repz
hlt
mov
std
add
sti
out
lret
dec
xchg
shlb
push
call
and
test
jb
adc
dec
adc
fwait
cmp
test
push
dec
or
leave
cmpsl
cmp
xchg
clc
mov
ss
mov
testl
ud0
jne
stos
add
mov
dec
and
ret
xlat
popf
dec
ds
mull
push
push
xchg
xor
daa
push
aas
repz
lds
and
cmc
inc
cwtl
sbb
push
cmpsb
jmp
pop
shrb
addr16
cmp
sub
loope
cmc
cmp
outsb
xchg
xchg
in
xchg
xor
push
std
pop
inc
jbe
into
inc
xchg
sub
out
dec
out
stos
push
push
cmpsb
das
sarl
lcall
cmp
cs
cmp
aaa
pop
fwait
cmp
gs
mov
aam
cli
ss
push
cld
fbld
cmp
adc
dec
fistpl
pop
jo
jmp
sti
arpl
xchg
mov
xorb
add
dec
arpl
popa
mov
adc
lods
lcall
dec
sti
jnp
andb
sbb
scas
js
bnd
cmpl
cltd
adc
mov
push
test
mov
mov
push
jmp
xor
in
aaa
das
mov
inc
dec
pop
shlb
dec
adc
int3
add
xchg
push
int
push
outsl
ror
lea
xchg
in
je
dec
sbb
vcvtps2dq
push
test
pop
xor
sbb
sahf
insb
push
push
ss
ret
testb
cld
cltd
outsb
mov
mov
call
sarb
jnp
cwtl
dec
sbb
adc
in
mulb
jle
pushf
hlt
pop
leave
and
and
jnp
enter
lret
stc
call
lods
scas
cs
jp
ffree
or
test
mov
push
hlt
mov
lret
cmp
pop
dec
sub
sub
push
or
inc
mov
jbe
rcr
lret
adc
adc
pusha
xor
pop
cld
xor
push
mov
cs
xchg
pop
push
mov
and
xor
in
or
test
push
lock
repnz
nop
movsl
and
mov
fcmovnu
movsb
int
fmuls
ljmp
ss
ljmp
scas
arpl
and
pop
xlat
cmpsl
add
pop
adc
mov
jno
psllw
mov
pop
lahf
pop
fists
aas
rclb
decl
xor
mov
add
test
enter
sub
aaa
lods
and
lock
sub
lahf
xchg
sahf
mov
xchg
mov
jg
xchg
xchg
mov
sbb
sub
mov
arpl
icebp
lock
jge
mov
jne
adc
inc
mov
outsb
jne
nop
int3
sbb
sub
rol
out
push
xlat
push
inc
and
mov
test
out
push
into
decb
jo
call
lret
or
ret
mov
mov
test
sbb
sete
mov
jecxz
inc
adc
repnz
pop
lds
dec
lret
std
sbb
sbb
in
cmp
xor
mov
testl
push
data16
das
pop
int3
das
jbe
std
in
leave
cs
sbb
es
sahf
push
jo
ficomps
dec
bsf
popf
out
mov
outsl
dec
sarb
pusha
bound
rolb
cmp
fsubrl
sbbb
mov
cmp
out
loopne
out
cmp
mov
das
inc
pop
vpperm
inc
or
push
jecxz
sbb
fisttps
scas
jbe
loopne
out
dec
pop
xor
xchg
int3
push
mov
xchg
out
inc
mov
jg
inc
sub
pop
inc
in
sub
cwtl
lds
or
sub
xchg
cmp
mov
xlat
sbbb
imul
push
inc
add
and
jmp
dec
lret
sbb
or
aam
test
lret
shlb
inc
popf
lcall
add
push
cmp
cmpsb
fdiv
pop
add
pop
dec
mov
jb
sub
or
jle
ss
mov
hlt
std
in
addr16
cmp
stos
jmp
xchg
xlat
cmp
loopne
and
add
xchg
or
bound
scas
out
ud0
cmp
adc
iret
rcll
jp
mov
in
mov
test
rcrl
xchg
notb
pop
imul
add
test
leave
push
andb
vsubsd
jecxz
cmc
mov
dec
xor
roll
cmp
shlb
jp
mov
and
jae
movsl
stc
sahf
call
sub
pop
sub
lds
cmpsb
push
sub
or
cmpb
sub
sbb
fdiv
and
mov
dec
push
sub
in
cmp
ret
mov
subb
leave
and
or
and
dec
pminub
xchg
xlat
jnp
addl
dec
inc
popa
jo
cmp
loop
popf
and
movsl
push
jno
add
mov
out
rcll
sbb
mov
loope
jae
push
lock
scas
pop
imul
stos
add
jg
cmp
sub
and
jbe
clc
ljmp
negb
pop
enter
pop
fistpl
jo
inc
test
push
stos
fldcw
jecxz
jne
inc
push
in
pushl
lret
leave
push
mov
mov
sahf
dec
add
fdivl
dec
shll
cmp
lcall
in
cmp
push
cmc
loopne
xchg
or
lea
je
jnp
fs
or
aas
loopne
pop
cvtpi2ps
cmp
test
cwtl
xchg
das
xlat
jnp
xchg
add
lcall
or
jo
lret
shlb
lret
loope
mov
movsl
and
jge
add
xchg
fidivrs
cld
or
xchg
cs
ret
push
dec
add
in
mov
cmpsb
xchg
clc
pop
mov
xchg
xchg
clc
pop
jno
fsts
add
and
cs
fsubr
mov
rcpps
xor
bound
sbb
add
test
cli
pop
fs
inc
sub
adc
adc
jns
adc
inc
cmpsl
pusha
ja
push
cmpb
movsl
test
dec
loopne
dec
xor
lea
icebp
mov
into
fiaddl
sbb
xchg
pop
xorl
out
and
in
outsl
lcall
les
es
jmp
lahf
xor
scas
nop
jo
out
shlb
pop
mov
fwait
mov
xchg
in
stc
adc
insb
xchg
pop
rcrl
adc
aas
mov
aam
div
outsl
inc
and
xor
dec
fnstsw
sub
cmp
ficoml
insb
aaa
flds
cli
push
xor
lock
outsl
push
lds
bnd
pop
imul
sub
fwait
cmp
dec
mov
push
scas
adc
inc
xor
aad
jl
jl
ret
fwait
pop
dec
push
lret
push
sahf
push
es
mov
sub
jp
sbb
stos
in
pushf
jle
and
leave
insb
adc
pop
mov
xchg
repz
xor
add
popf
and
cmc
add
dec
loop
adc
test
jmp
jbe
mov
pushf
adc
adc
push
dec
adc
dec
imul
dec
aas
jge
divb
cltd
mov
lea
or
add
popa
or
cmpsl
dec
mov
les
shll
push
movsb
mov
cmp
xchg
stc
and
stc
cmp
int
mov
call
inc
mov
and
jmp
sub
dec
pop
call
xor
dec
inc
test
lock
daa
adc
push
mov
rorb
push
push
iret
aad
rcrb
outsb
lret
ljmp
insb
pop
arpl
sbbl
pop
xor
jb
dec
or
pop
cmp
sub
sub
push
push
call
mov
imul
les
mov
mov
xor
insl
xor
leave
push
testb
adc
adc
jp
push
adc
add
push
and
xchg
sbb
mov
cmp
xor
jo
mov
dec
pop
mov
gs
adc
mov
icebp
push
sbb
jno
mov
push
int
push
pusha
mov
test
popa
movsb
ljmp
shlb
lods
outsl
adc
jae
mov
dec
outsb
cmp
adcl
push
popa
xchg
xlat
xor
lock
loopne
push
imul
insb
shll
cmp
dec
pop
pop
icebp
sbb
insb
push
add
and
nop
cs
shlb
out
imul
fucomi
lcall
jp
stos
stos
ret
push
xor
lcall
sbbb
cwtl
mov
xchg
jnp
mov
xchg
adc
mov
jo
in
fidivrl
push
mov
xchg
sahf
mov
xor
popf
sbb
jmp
add
lret
inc
and
loopne
and
shr
lods
xchg
sbb
dec
adc
mov
inc
add
mov
cld
inc
lods
popa
push
sub
dec
sahf
xchg
rol
mov
mov
fildll
ret
sarb
ljmp
push
clc
lods
dec
adc
mov
push
and
shll
sti
push
imul
inc
je
sbb
clc
out
jg
fwait
mov
iret
out
inc
ss
call
and
cmp
dec
in
cld
xchg
jp
mov
out
aas
mov
iret
sbb
cmp
dec
lods
cli
ja
sbb
cli
xor
cmpsb
sbb
sub
push
dec
push
insl
jbe
and
ss
sbb
inc
adc
int3
pop
push
or
adc
addl
das
push
scas
repz
jge
mov
sub
int3
adc
pop
push
jns
ja
ret
inc
xchg
call
or
aaa
inc
movsb
jmp
add
clc
movsl
out
xchg
iret
mov
aam
and
in
pop
push
mov
adcl
and
and
sar
dec
ss
insl
ljmp
test
mov
iret
pop
arpl
adc
movsl
sbb
push
jbe
pusha
mov
xchg
cli
adc
test
test
lods
fsubrl
scas
enter
and
xchg
aaa
pop
loopne
in
sub
and
lcall
push
mov
xor
popa
outsb
add
fldt
dec
push
inc
popa
inc
push
mov
fld
push
mov
lds
push
jae
mulb
jg
cmp
in
rcll
ds
mov
mov
pushf
add
sarb
insb
adc
inc
adc
pushf
out
jecxz
pop
xor
and
dec
mov
mov
jb
scas
xchg
das
mov
sbb
sub
dec
arpl
mov
xorl
or
je
add
adc
loopne
inc
out
ja
mov
out
mov
or
inc
popf
call
mov
dec
sub
push
push
cld
xchg
call
gs
lahf
popf
ret
adc
movsl
mov
fildll
shr
mov
xchg
push
fwait
inc
mov
cld
jecxz
ds
adc
pop
xor
cs
push
repz
xchg
mov
imul
adc
add
and
pop
xorb
repnz
adc
stc
and
lds
icebp
cmp
mov
xchg
loop
cli
popl
daa
iret
sbb
xchg
mov
xor
jle
lea
mov
movsb
fildll
push
cmpl
jno
xor
mov
fsubs
jne
repnz
mov
mov
into
inc
stc
mov
nop
inc
jbe
mov
mov
add
lock
repnz
hlt
jge
add
out
pop
filds
dec
jbe
aaa
lock
lahf
jmp
fisubrl
mov
sbb
push
jo
jno
mov
jnp
pop
mov
inc
push
ficomps
ja
gs
xchg
cmc
mov
shlb
add
icebp
cmpb
mov
in
stos
jge
cmpsb
mov
pushf
adc
fdivrs
sub
pop
stc
adc
fdivr
jnp
mov
mov
aas
push
fstpt
mov
test
xchg
int3
dec
clc
xchg
inc
sub
lds
call
xchg
or
and
cltd
or
ja
inc
test
sahf
das
stos
jne
add
mov
stos
lcall
lcall
xchg
mov
add
loopne
aad
jg
and
add
jl
nop
jne
arpl
ljmp
fsubs
push
lock
mov
push
movsb
add
cmp
lret
xor
pop
aam
cmpsl
mov
sub
repnz
cmpsb
rorb
xchg
cld
mov
lea
testl
arpl
mov
inc
scas
mov
push
fbld
xor
je
pusha
iret
mov
das
sub
decb
fsubs
jns
and
fs
shl
les
loopne
out
fs
inc
std
leave
lea
cmp
push
sub
stos
or
cwtl
jae
and
add
rcl
mov
pusha
mov
clc
sbb
mov
in
xor
cwtl
adc
inc
pop
adc
xchg
iret
xchg
fimuls
test
sub
ret
xchg
pop
test
repnz
stc
loop
cmp
iret
mov
dec
mov
cmp
cmpl
aad
jle
dec
pop
xchg
or
and
xor
ss
pop
mov
jb
add
and
sbb
and
repnz
cmpsl
aam
repz
mov
xchg
ja
in
call
in
sub
ss
imul
push
xlat
icebp
test
adc
movsl
fisttpl
outsl
mov
loopne
in
ror
or
dec
addr16
js
ror
jno
jbe
xor
mov
std
movsb
fsubl
repz
cmp
mov
fidivs
push
jne
xor
dec
movsb
lods
sbb
push
cmp
je
sub
cmp
jl
and
jns
and
and
int
loop
daa
call
jo
pop
or
bound
sub
add
test
push
ret
test
mov
xchg
mov
push
push
push
jecxz
subl
jnp
lcall
mov
scas
push
jl
enter
int
dec
addr16
sbb
inc
cmp
pop
rcrb
mov
xor
and
cs
pop
or
adcb
push
sub
add
xor
push
test
fdivrs
stos
xlat
and
es
dec
xchg
mov
lds
cmp
dec
dec
pusha
repnz
pushf
mov
fiadds
mov
pusha
into
in
pop
es
mov
out
xchg
mov
lret
stos
mov
pop
sbb
pop
mov
inc
mov
push
and
fucomi
out
dec
ss
adc
push
push
out
pop
jmp
push
add
test
lcall
pushf
fildll
sub
sbb
mov
stos
sbb
lret
inc
popl
cmpsl
cmp
push
mov
dec
add
mov
push
in
jno
inc
lods
dec
and
sbb
mov
std
push
or
sti
dec
repnz
mov
lret
adc
in
mov
stos
mov
shrl
mov
sub
inc
imul
mov
lods
fwait
sbb
xor
sbb
pop
inc
je
int
mov
jbe
mov
loope
adc
lock
ret
mov
enter
ss
pop
iret
adcl
inc
jmp
adc
out
lods
ret
push
ret
jg
cld
rorl
lret
xor
stc
sub
hlt
cld
or
pop
dec
mov
or
and
ret
test
sahf
sti
xor
dec
cmc
adc
aaa
ror
push
popa
add
push
in
test
jl
std
cmp
imul
and
mov
sahf
repz
jp
scas
repnz
xchg
stos
lret
std
push
xor
jmp
sub
dec
xlat
add
repz
icebp
fmuls
jle
call
add
pushf
add
pop
add
sub
jmp
orb
enter
lea
jb
sub
mov
cmc
and
pop
cs
inc
mov
push
push
jecxz
pop
cwtl
jp
cs
push
xor
mov
bnd
xchg
or
or
sahf
scas
cmp
pop
fidivrs
or
mov
movsl
in
shrb
cwtl
cmp
or
nopl
inc
xchg
aam
sahf
out
scas
mov
ljmp
dec
lcall
cmp
js
cmpsl
push
and
inc
or
mov
adc
insb
mov
lret
mov
pushf
cmc
mov
dec
cltd
dec
sahf
scas
xchg
int3
xchg
lea
jae
ljmp
xchg
mov
movsb
jge
mov
pushf
out
mov
jae
inc
or
lds
aam
push
aas
mov
jnp
mov
push
pop
sti
push
aam
push
cmp
inc
sbb
bound
mov
outsb
leave
fidivrl
mov
sbb
sbb
jp
addb
ret
inc
lret
pop
imul
test
or
jbe
pop
xchg
sbb
lods
lods
push
cmp
xor
xchg
ret
out
jae
jmp
add
lahf
cs
sbb
sbb
adcb
outsb
mov
or
sbb
leave
test
rcrl
mov
or
lds
pop
dec
add
dec
rclb
sbbb
inc
cmovs
xchg
out
and
and
xchg
pop
push
cmp
movsl
mov
out
fstpt
leave
lahf
push
mov
xchg
movsl
add
not
ret
imul
dec
or
cmpsb
adc
sbb
sbb
and
mov
sub
aam
inc
ja
add
jnp
pop
and
cmc
mov
arpl
adc
mov
dec
fnsave
push
popa
repz
sub
xchg
mov
jno
and
xchg
push
cli
add
inc
adc
leave
subb
stos
push
test
sub
adc
jnp
cmpsb
inc
sub
dec
les
and
jl
fs
jp
and
add
xchg
stos
cmp
adc
stos
xor
fstpt
or
movsl
movhps
add
inc
xchg
lret
bound
in
loope
addr16
lock
les
jnp
ds
loop,pn
into
cmp
pop
dec
xorb
adc
and
push
jo
xchg
repz
ds
notb
xor
cmp
xchg
jne
dec
dec
shrl
dec
pop
ret
inc
mov
into
pop
fisubs
shlb
mov
lret
fidivrl
mov
fucomp
mov
mov
sbb
adc
js
push
xor
es
aam
out
or
xor
and
ficoms
jge
mov
lahf
les
test
sarl
sub
rcl
jno
push
sbb
push
scas
fisttpl
add
cmp
mov
mov
mov
cmp
adc
std
xchg
cmp
mov
pop
lds
shr
sub
xor
loop
cmp
aam
add
insb
adcb
sub
popa
movsl
roll
mov
xor
adc
cmp
das
mov
pusha
rclb
mov
jne
lods
xchg
and
ja
pop
pop
sub
sbb
jns
mulb
dec
cmp
sub
or
sbb
add
push
jle
inc
jbe
push
push
lahf
fisttpll
int
push
sahf
shl
push
mov
inc
lea
mov
mov
insb
mov
inc
pop
ja
fbstp
add
jo
inc
sbb
loopne
push
pop
pop
movsb
adc
out
push
clc
jo
jl
fnstsw
add
loop
int
lahf
mov
or
stc
orb
das
or
pop
xchg
push
push
mov
pop
dec
jle
xor
mov
push
push
pop
lahf
idivb
jecxz
pop
mov
sbb
aaa
xor
std
mov
dec
divl
jmp
jno
out
lret
movsb
lret
negb
sub
inc
add
and
sbb
or
or
push
fistpl
cmp
fldcw
insb
subb
mov
mov
pop
add
nop
iret
cmp
aaa
dec
push
cmp
stos
push
lcall
mov
dec
cmp
mov
loopne
sbb
arpl
mov
mov
daa
jecxz
daa
xorl
xor
fists
pop
inc
dec
notl
enter
push
xor
stos
bound
sub
pop
and
std
js
jmp
lret
sbb
xlat
pop
sti
adc
push
mov
add
inc
mov
pop
es
cmp
stos
dec
pop
addr16
xor
mov
fsubrs
js
leave
mov
into
je
jge
add
shll
clc
mov
jg
out
jb
fimull
dec
movsb
mov
popf
in
mov
out
repz
sahf
orl
inc
inc
sub
rcrb
out
and
mov
or
ret
shll
mov
xchg
cltd
int3
fsubrs
push
les
xor
orb
imul
mov
sbb
adc
xor
test
jl
jns
and
lret
jno
xchg
test
dec
es
ret
sub
mov
leave
push
into
dec
aas
mov
je
cmp
or
adc
inc
push
movsb
jb
sbb
xchg
mov
jp
mov
cmpsb
xchg
mov
insb
push
xchg
dec
das
adc
jle
add
pmaxsw
xchg
stos
data16
pop
and
lcall
outsb
adc
in
ljmp
nop
inc
push
test
inc
scas
lea
jne
stc
test
loopne
pop
sbb
mov
fs
push
sbbl
and
cli
adc
xchg
xchg
mov
adc
jbe
sarb
xchg
stos
sti
lahf
mov
mov
and
mov
int3
push
lds
sbb
pop
stos
push
inc
les
and
mov
inc
leave
push
push
fucomip
in
sbb
mov
push
fcomps
mov
push
sub
mov
ja
sbb
fistpll
dec
aas
in
popa
adc
mov
hlt
cmp
jo
loop,pt
inc
mov
pushf
lahf
shrb
dec
fldl
pop
mov
arpl
out
cmp
test
sub
dec
popf
mov
and
mov
xchg
cmc
fxch
enter
sti
xchg
test
repnz
enter
daa
cmp
std
jns
ds
cmp
mov
arpl
push
jge
jp
push
dec
or
adc
push
push
and
lods
test
bound
fdivrl
icebp
loop
push
push
out
pop
pop
cmp
sub
ljmp
loopne
arpl
inc
fcompl
outsb
sub
mov
jle
pop
cmpsb
mov
mov
loope
in
subb
sbb
les
sbb
mov
orb
push
ficoml
push
pop
mov
rdpmc
add
out
cwtl
sub
cmp
repnz
or
push
dec
or
or
jge
xor
inc
iret
cmpsb
mov
mov
push
outsl
mov
into
xchg
mov
sub
adc
or
lods
jno
out
mov
mov
pop
mov
iret
int
dec
test
loop
xor
int3
xchg
lret
scas
or
in
and
inc
ljmp
movsl
cmp
mov
test
in
lret
mov
xlat
dec
sahf
xchg
daa
mov
outsb
orb
sub
sti
stc
inc
loopne
xor
sub
sti
xor
cmp
lret
divl
mov
insb
mov
loop
inc
les
outsb
push
mov
into
cmp
jp
scas
popw
mov
ret
cltd
lcall
cmp
jbe
or
movsl
and
inc
push
aad
test
push
mov
adc
push
lock
add
or
xchg
aaa
pop
addr16
pop
stos
push
shlb
jecxz
insb
push
or
hlt
cli
mov
or
cmpsl
mov
pusha
cmp
and
rorl
test
jo
xor
dec
adc
loopne
jl
add
movsb
loopne
xchg
insb
adc
mov
xchg
mov
mov
mov
imul
cmpsb
in
addb
inc
add
xchg
out
icebp
sbb
mov
jl
arpl
xchg
ds
imul
dec
scas
mov
and
in
and
pop
imul
fisubrs
jle
fnstenv
mov
lret
adc
mov
mov
mov
jge
and
xchg
xchg
stos
xchg
inc
xor
outsb
clc
pop
mov
and
push
adc
sbb
add
push
bound
rolb
lahf
cmp
mov
inc
ds
mov
push
pop
aam
repnz
in
push
sub
push
push
stc
push
cwtl
xchg
aad
popf
imul
mov
sub
xor
jbe
ljmp
jno
push
lds
je
sbb
pop
adcl
add
out
push
inc
fs
mov
fmull
fldl
add
and
cmp
das
cltd
testb
sahf
sbb
js
sysret
jmp
aad
mov
nop
jmp
and
fistpll
add
xchg
push
in
mov
pop
pop
loop
fisubl
inc
sub
xchg
insb
into
push
inc
sahf
cmc
cmp
adc
pop
out
enter
xlat
hlt
lret
xor
sub
dec
add
mov
loop
lea
outsb
lret
into
pop
dec
popf
js
imul
cmp
inc
ja
ja
iret
out
imul
mov
out
fs
jne
cmp
dec
aaa
xor
insl
sub
fsubp
in
push
into
adcb
mov
fildll
popa
or
mov
paddusb
cmp
jle
lahf
dec
cmpsb
pop
je
hlt
sti
test
sub
dec
xchg
cld
dec
es
adc
div
inc
fwait
mov
or
imul
push
pop
sub
mov
pushl
pop
bound
push
jne
popa
mov
sub
or
push
pusha
push
popa
inc
cmc
pushf
js
or
mov
mov
cltd
out
mov
xchg
mov
scas
and
add
lret
pop
imul
imul
ud2
popa
add
in
mov
lds
out
jno
lahf
dec
xchg
lods
data16
mov
cld
or
imul
jns
dec
push
mov
mov
movsl
enter
test
arpl
sbb
xchg
fnstsw
lds
inc
sub
lock
push
mov
imul
mov
dec
nop
push
test
sub
scas
mov
pop
mov
jmp
ret
or
sbb
dec
scas
jmp
dec
push
fucomp
dec
or
adc
add
lret
es
fiaddl
sub
call
jmp
sbb
mov
mov
push
mov
cwtl
ret
lock
test
negb
insl
and
xchg
add
lods
popf
mov
mov
jno
out
adcb
jge
nop
mov
leave
fildll
jge
cwtl
pop
or
fcomp
call
jo
push
sbb
cmpsl
sahf
adc
dec
sahf
and
jp
push
push
xorb
je
dec
movsb
leave
mov
subl
loopne
dec
fdivrp
jl
push
incl
sbb
push
sbbb
es
sub
repnz
sbb
inc
add
int
push
xor
adc
clc
inc
leave
add
push
ss
js
or
jecxz
fwait
jns
cwtl
push
jp
sbbl
fwait
add
jns
in
fs
std
int
jnp
jge
sub
scas
aad
cmp
shlb
arpl
ret
in
xor
sbbl
push
stc
aad
arpl
stc
pop
pop
cmpsb
pushf
inc
mov
scas
idivb
jecxz
aad
jmp
pop
push
xchg
xchg
cmp
les
dec
fsubr
pusha
and
lods
dec
xchg
popl
pop
inc
xorl
jne
or
imul
pop
mov
sahf
inc
in
orb
insb
xchg
iret
sbb
test
inc
jmp
dec
adc
bound
push
scas
add
mov
inc
dec
paddq
imul
rol
xchg
sarl
hlt
xlat
imul
mov
pop
daa
add
adcb
int3
inc
sbb
or
pop
rcll
sub
sub
jmp
push
out
push
pop
cwtl
stos
mov
push
dec
push
cmp
push
dec
es
push
insl
jmp
adc
xchg
sarl
xchg
or
jp
push
aad
outsl
aam
fistl
mov
scas
sub
gs
xchg
je
sbbb
popf
xchg
mov
push
movsb
dec
jmp
push
loop
jbe
push
adc
iret
add
imul
es
mov
das
jne
test
mov
jmp
das
xor
outsb
xchg
aas
cmc
xchg
jo
hlt
jecxz
cltd
lret
lret
test
pop
and
mov
push
lods
jb
jp
mov
mov
inc
sbb
in
sub
jecxz
push
jp
sbb
mov
dec
inc
sbb
sub
and
or
dec
in
mov
pop
movsl
test
or
mov
xor
mov
mov
pushf
dec
cmp
mov
and
jmp
sbb
and
les
sub
pop
mov
aam
cli
sub
iret
inc
or
out
lods
add
mov
jl
xor
xlat
dec
cmpsb
sbb
ds
sti
outsb
push
enter
sbb
jo
jp
sbb
xchg
ds
xor
cwtl
sub
jb
add
xlat
out
inc
rolb
into
push
xchg
xor
sbb
cmp
les
sbb
testl
faddp
fdivrs
pusha
dec
cld
ss
sbb
and
les
icebp
fisttpll
rcrl
jge
jp
cmc
cmpsl
jbe
mov
cmpsb
loope
jecxz
outsl
pop
pop
in
sub
mov
test
repz
adc
mov
enter
push
lods
pop
pop
loope
fisubrl
mov
les
pop
dec
mov
mov
ja
cltd
rorb
inc
cmovne
sub
inc
adc
and
mov
cmp
pop
dec
sub
or
jns
push
mov
pop
sbbb
sbb
hlt
movsl
sbb
cwtl
xor
push
addr16
cmp
or
mov
out
into
mov
outsl
mov
adc
lcall
cmpsl
mov
shrl
mov
cmp
lret
mov
roll
out
add
fisttpll
out
mov
pop
or
jle
xlat
inc
fcmovu
sbb
dec
or
clc
sub
mov
jne
ds
add
je
fidivl
mov
xor
or
cmp
cmp
test
and
mov
sub
cmpsb
dec
lahf
call
gs
outsl
adc
push
xchg
lahf
mov
and
xor
hlt
inc
mov
loop
es
fwait
xchg
into
out
mov
jp
sbb
subl
negl
and
dec
es
push
jge
mov
or
dec
add
sbb
jg
pop
inc
xor
rcrb
lods
imul
shll
xor
mov
das
js
and
cmp
mov
push
lret
push
inc
outsb
cmp
sti
push
int
sahf
lret
push
mov
add
adc
adc
bound
lret
fs
cmp
push
push
hlt
xchg
inc
xchg
aam
cmp
mov
test
loop
pop
inc
out
insb
or
mov
cs
jno
add
cli
je
cmpsb
mov
loopne
push
push
sbb
mov
fisubl
cmp
es
ret
adc
scas
jg
adc
cmpl
pop
aas
ret
mov
call
fwait
dec
adc
fsts
adcb
sbb
sahf
out
pop
sbb
fbstp
inc
cmpsl
jb,pn
cmp
adc
arpl
sub
dec
aad
dec
roll
stos
xlat
cs
or
cmp
inc
in
fsubs
mov
pushf
jae
cld
into
push
fsts
dec
test
lret
mov
jbe
jmp
imulb
addr16
ja
mov
sub
push
jecxz
jnp
test
add
ffreep
cmpsb
test
das
sbb
inc
popf
cmpsl
pop
clc
orl
pop
jge
xchg
outsb
mov
stos
cmpsb
stos
inc
fsubr
ss
pop
push
mov
mov
mov
lcall
sub
test
fs
int
add
jo
movsl
out
fadds
pusha
cmpl
imul
inc
pop
in
add
push
sbb
lock
mov
into
cmp
aam
xchg
pop
insl
scas
icebp
out
mov
pop
daa
sbb
nop
jne
in
into
jl
xor
fidivrl
je
xchg
sbb
aad
or
pushf
fnstenv
aaa
jo
out
sub
sbb
sub
add
pop
lea
pushf
sub
mov
pop
imul
pop
mov
imul
sub
repz
push
dec
sub
leave
imul
stos
and
je
and
addr16
sti
push
jb
loop
enter
mov
dec
or
add
dec
sbb
sub
popa
ljmp
inc
xor
jmp
es
xor
popa
lea
popa
movsb
sub
xchg
in
mov
mov
xchg
pop
roll
fmuls
into
inc
clc
jnp
mov
repz
cltd
ret
xor
cltd
mov
or
int3
cmp
cmpl
mul
movsb
data16
mov
rol
and
pop
jge,pn
sahf
out
adc
stos
bound
jo
inc
pop
fists
aas
adc
cmp
inc
jo
mov
or
icebp
ss
inc
xor
mov
shrb
inc
sub
sahf
jne
jle
fcompl
scas
pminsw
pop
scas
es
xor
add
pop
movsb
or
push
aam
cmp
push
loop
pop
std
addr16
pop
lods
add
mov
aas
mov
call
xor
ret
sti
int
jecxz
ss
fidivrs
dec
in
adc
repz
lea
sbb
and
dec
xchg
leave
sbb
ret
jl
cmp
lds
mov
push
mov
icebp
or
dec
mul
pushf
adc
test
insb
pop
or
andb
sub
lds
cmp
mov
fwait
jae
fdivr
lea
adc
fwait
int
hlt
xor
mov
push
cs
shrb
or
push
leave
mov
pushf
mov
sub
jne
dec
jne
cmp
and
mov
data16
sub
leave
mov
call
mov
or
insl
push
stc
push
hlt
push
xchg
sti
add
push
in
sbb
xor
sbb
add
xor
lahf
lods
mov
adc
pop
js
dec
jge
lds
push
jl
jg
pushf
aas
stos
leave
mov
pop
repz
dec
push
fidivs
in
mov
fisubrl
insb
sahf
out
push
pop
sarl
and
or
cmp
dec
sbb
jno
test
mov
sbbl
ret
aaa
imul
es
push
lock
jns
pop
bnd
pop
mov
mov
cs
sub
mov
and
mov
fcoml
loopne
pop
loop
ja
xchg
xor
mov
push
xor
mov
out
in
jp
or
leave
ljmp
mov
add
mov
popa
xchg
int
cmpsb
hlt
addb
gs
and
loopne
negb
mov
out
fidivrl
dec
mov
mov
mov
div
packuswb
or
xor
lock
or
stos
rcl
cmpsl
pusha
push
fs
xchg
fimuls
mov
and
adc
inc
loop
adc
push
dec
pop
mov
xor
mov
lds
mov
out
xor
gs
adc
mov
data16
mov
fcomp
test
out
dec
xchg
mov
lcall
bound
xadd
je
sarl
push
aam
xor
and
jno
dec
shr
lods
cld
and
mov
inc
test
jnp
addr16
push
lret
jnp
je
jle
cld
xor
mov
xor
dec
fcoml
lock
pop
leave
aad
inc
and
ret
or
js
cmp
subb
scas
fildl
sarb
sbb
test
or
jg
mov
mov
inc
cmp
imul
add
jns
sahf
mov
mov
xchg
add
inc
pop
mov
pusha
leave
dec
aad
cmp
ds
ret
mov
mov
mov
movsl
mov
cld
sahf
or
mov
and
mov
inc
jbe
dec
mov
sbb
push
pop
idivl
sub
pop
fwait
out
xor
mov
out
inc
and
test
mov
sahf
shlb
and
daa
dec
scas
push
push
pop
cmp
inc
jecxz
adc
sahf
push
shlb
mov
out
sub
inc
pop
jnp
clc
into
mov
mov
sbb
inc
jo
out
push
scas
aas
jne
jg
out
push
jb
arpl
ret
xchg
dec
pop
aaa
cmp
iret
int3
dec
sbb
dec
push
call
test
jp
push
lret
orb
imul
dec
xchg
push
mov
std
fadds
sbb
lds
lea
fiaddl
jl
push
dec
push
repz
xchg
icebp
lds
fcmovb
or
cmc
cmp
arpl
and
sti
pop
insb
sbb
fbstp
adc
test
sub
bound
sub
jb
push
icebp
push
mov
aaa
aaa
inc
inc
sbb
inc
jp
test
or
jl
in
je
push
mov
ja
into
lret
out
nop
cmp
mov
test
fisubrl
popa
test
lcall
add
mov
mov
cltd
push
push
cmp
jg
cli
jne
pop
inc
jo
mov
xlat
jbe
aaa
shlb
xor
add
repz
popf
push
lds
mov
int
cmpl
pop
add
js
movsb
adc
jo
clc
into
aad
lea
das
inc
mov
push
mulb
stos
mov
pop
sti
sbb
pop
push
jg
push
out
subl
out
adc
mov
shlb
cmp
mov
stos
xor
cmp
or
shl
add
adc
adc
sbb
inc
cmpsb
push
inc
or
test
lcall
test
bound
mov
jmp
js
fxch
adc
ja
mov
mov
push
ja
jecxz
sbb
test
xchg
jecxz
je
cmpsb
rcl
cmp
jne
sbb
test
add
pop
imul
inc
mov
and
movsb
repnz
mov
ss
lods
stos
xor
idiv
int
movsb
add
dec
jno
gs
testb
cmp
insb
daa
inc
cwtl
cmp
in
adc
dec
scas
push
push
icebp
pop
jmp
xlat
aaa
lock
jnp
sti
sub
jp
cmp
stos
pop
lock
sub
es
stos
push
cli
and
fnstcw
filds
int3
stc
mov
mov
and
mov
fnstenv
loopne
cmp
pop
mov
lods
inc
fs
aaa
xor
xchg
lds
xor
iret
or
leave
sbb
imul
lods
push
fdiv
and
mov
or
adc
jle
imul
mov
xor
cs
sbb
cmp
rep
out
pop
icebp
pop
mov
insb
dec
hlt
aad
gs
addr16
pop
dec
jo
orl
xchg
mov
add
in
mov
repnz
cs
fistpl
test
fldl
loop
test
or
clc
cmp
movsb
xorl
mov
ret
fcmovnbe
cmp
cwtl
cmpl
mov
pop
and
lods
js
push
lods
iret
iret
sbb
stc
repz
sti
lea
inc
shl
dec
shrl
mov
cwtl
pusha
xchg
sti
mov
mov
out
outsl
adc
cli
adcl
jp
call
xchg
je
test
pop
fstl
or
mov
data16
dec
pop
ds
lods
sbb
xchg
pop
mov
aam
xor
xchg
pushf
push
xor
sbb
nop
mov
pop
sbb
push
ljmp
cltd
xchg
loop
adc
mov
lret
ret
inc
stc
mov
loop
inc
mov
shll
sbb
or
inc
int
add
icebp
add
popa
mov
imul
sub
hlt
jno
in
xor
testl
jecxz
jbe
loop
xchg
fcoml
push
push
push
sarl
mov
push
jmp
xchg
out
insl
mov
dec
js
adc
mov
cwtl
into
inc
cmp
pop
mov
mov
in
ljmp
sbb
roll
pop
cmovge
push
adc
add
in
jg
jb
int3
mov
push
gs
sub
mov
test
cmp
stos
push
lods
jp
sbb
mov
ficompl
cld
idivb
mov
mov
sub
rcrb
push
lods
push
sub
leave
sbb
jl
sahf
xchg
fmuls
xchg
cmp
cmc
xchg
sahf
aad
loopne
xor
mov
les
or
das
add
in
sbb
sbb
dec
sub
das
sarl
cmpsl
fidivrl
cmp
fistpll
dec
loop
mov
movsb
xchg
add
push
clc
pusha
jae
in
push
das
and
mov
push
xchg
push
and
js
shl
lret
iret
or
jnp
mov
aas
and
loop
jbe
cwtl
movsl
cmpsb
int
sti
sub
jnp
fwait
sbbl
insl
cmp
cmp
inc
arpl
stos
mov
nop
dec
ficompl
push
addr16
les
test
inc
cwtl
clc
mov
xchg
push
cmp
rorb
flds
arpl
insb
cmp
jle
es
insb
scas
insb
and
xchg
adc
shrl
push
scas
mov
lcall
out
test
std
into
xchg
sti
inc
scas
inc
push
fidivrl
leave
test
push
cmp
dec
mov
nop
mov
push
push
outsb
mov
call
out
scas
int3
or
inc
jl
in
in
cld
sub
ja
dec
mov
lods
shrl
addb
push
cmp
sbb
xlat
mov
xchg
add
cmpsl
and
test
stos
je
mov
pushl
inc
push
mov
js
xchg
aaa
rol
mov
xor
mov
cld
les
fiaddl
dec
rcrl
movsl
test
jno
ret
xchg
xor
fadd
xor
push
add
bound
xor
cli
adc
cmp
lahf
pop
mov
fists
cmpsl
mov
xlat
fcmovnu
call
jg
test
cmpsb
ficoms
add
stc
add
cmpsb
repz
repnz
inc
mov
rolb
inc
inc
jae
pop
push
popa
sub
add
jg
lea
pop
xchg
leave
push
out
push
or
int3
mov
or
test
in
pushf
add
push
or
lea
fsubrp
imul
jnp
push
cli
insl
mov
push
movsb
insl
fsubrs
rclb
cmp
cmp
dec
bound
aad
push
shll
mov
stc
xchg
xor
cs
mulb
inc
sti
push
in
inc
subl
or
add
mov
sahf
addr16
pop
and
add
or
xchg
sub
pop
pop
stc
push
cmp
adc
jne
pop
mov
xchg
rorl
xchg
mov
out
pop
loope
rcl
repz
jmp
mov
out
sbb
daa
push
mov
enter
mov
fdivr
mov
lods
scas
jmp
add
test
jge
adc
pop
imul
sbb
add
push
test
sbbb
jg
cltd
call
fistpll
pop
jmp
cmp
lods
repnz
pop
jo
jns
fucomp
loop
jno
mov
inc
sbb
mov
or
mov
mov
rcrl
das
adc
dec
test
adc
or
fcoml
xlat
mov
arpl
and
xor
jecxz
mov
mov
insb
ret
mov
mov
cld
adc
es
adc
jne
push
jae
push
ss
xchg
and
je
mov
inc
ret
mov
faddl
je
jle
lcall
or
in
mov
push
dec
adc
jnp
cmp
daa
sub
push
cmc
into
sbb
jns
lods
outsb
mov
and
std
test
mov
cmpsl
mov
sub
sbb
aas
fmul
faddl
ds
add
push
lret
out
jge
ret
sysret
dec
dec
fimull
lods
cmpsb
loopne
loope
sahf
push
xchg
scas
push
xor
xor
or
cmpsb
and
push
add
jge
sub
push
cmpsl
mov
sti
add
xchg
dec
shlb
sub
mov
es
jecxz
jb
and
cmp
dec
xor
jbe
enter
mov
addr16
lret
popa
jnp
add
cmp
add
mov
push
push
testb
inc
adc
lahf
test
dec
addb
jo
sub
sub
xchg
das
cmp
adc
pop
data16
push
hlt
popa
xchg
lods
jae
enter
mov
into
sbb
and
sbb
sti
lea
cmp
das
loopne
jo
dec
cmp
add
sbb
dec
inc
aas
inc
ficoml
mov
test
jmp
pop
aas
add
sub
jne
js
pushf
rcll
xchg
sahf
xchg
roll
mov
stc
cmpb
add
mov
pop
sub
stos
inc
aaa
mov
mov
call
cmpsl
in
hlt
fdivr
sbb
and
xor
adc
pop
into
bound
fwait
inc
imull
movsl
inc
cli
mov
leave
pop
or
std
mov
inc
outsb
std
inc
sub
aas
sub
je
add
inc
aaa
sti
ljmp
or
fs
pushf
clc
ds
lock
mov
jecxz,pt
adc
test
pop
and
stos
sub
je
dec
jnp
out
dec
adc
cmpsb
ret
loop
sub
scas
mov
adc
hlt
sbb
je
jmp
scas
ficompl
lods
or
adc
ja
dec
lret
fwait
cmpsl
lock
mov
add
shlb
pusha
inc
aad
int3
shrl
cmp
cs
fsts
fstl
repnz
mov
push
cs
mov
test
clc
adc
add
push
xor
sti
jb
out
cmp
cmpsb
mov
repz
mov
mov
cmp
xor
pop
add
mov
shl
or
imul
cmpsb
adc
aam
push
lock
dec
cmc
and
gs
jecxz
xchg
ret
cmpsb
fisubl
aaa
dec
arpl
mov
cld
mov
cmp
nop
notl
lret
xor
repnz
xchg
jp
add
mov
ret
std
addb
out
push
pop
jae
add
je
dec
dec
mov
jle
pop
js
dec
int
add
js
dec
mov
hlt
mov
push
push
sbb
leave
fcmovnbe
adc
fists
pop
fcomps
sbb
cmc
mov
lods
mov
out
inc
aaa
adc
and
dec
cmpsb
pop
sbb
daa
cmp
dec
inc
aaa
mov
push
mov
adc
inc
sub
or
cmpsl
mov
cld
push
xchg
or
imulb
fwait
paddq
jne
movsb
inc
nop
sub
inc
mov
sub
lods
mov
xchg
inc
cmc
add
decl
loopne
js
add
loopne
outsl
jns
jl
sub
lahf
pushf
fisubs
mov
cmpsb
dec
inc
sbb
jmp
push
fidivrs
fimuls
sbb
cltd
xor
push
daa
inc
imul
push
pop
sbbl
jb
loope,pn
pop
dec
arpl
leave
cld
je
ja
pop
notl
xchg
sbb
jne
xor
pop
sbbl
mov
rorl
inc
inc
xchg
fistl
adc
jbe
push
adc
shrl
push
mov
pop
pop
pop
addr16
std
sahf
stc
movsl
sbb
fmull
pop
aaa
xor
and
mov
mov
iret
jmp
mov
pop
bound
enter
pusha
outsl
rcr
daa
or
mov
popa
in
clc
mulb
pusha
pop
scas
xor
jmp
in
jg
xor
jmp
out
mov
in
sub
fwait
lds
movaps
fidivl
cli
dec
xor
xlat
lds
nop
push
inc
lea
and
jp
ret
and
xor
incl
push
pop
jecxz
sub
push
dec
lcall
scas
mov
mov
les
lahf
adc
dec
add
dec
push
jl
add
xchg
std
aam
xchg
push
pop
ret
sbb
pusha
dec
shll
add
mov
int3
push
push
insl
adc
lahf
enter
iret
sbb
pop
ret
inc
mov
cli
add
cmp
xchg
lret
push
cmpsl
imul
adc
sub
sub
arpl
fsubrs
pop
ret
xor
je
ret
lret
insb
out
outsl
xor
enter
test
cmc
faddl
lret
mov
and
xchg
xchg
out
pop
clc
push
jmp
pop
cwtl
jecxz
and
je
xor
repz
xchg
daa
das
mov
test
imul
mov
cmp
add
stos
pusha
mov
pushf
mov
and
dec
cmc
pop
xor
pop
mov
or
std
jp
dec
xchg
sbb
das
es
repz
cmpsl
cs
push
jecxz
outsb
add
pop
or
jae
mov
fwait
repz
and
mov
les
aas
or
pop
adc
cwtl
fisttpl
lret
sbb
and
lret
and
test
stc
mov
jecxz
lret
in
test
or
adc
pop
mov
dec
mov
push
push
ss
pop
pop
and
sarb
dec
out
or
enter
jge
cmp
cmc
fwait
or
aad
aas
dec
ja
jo
and
shll
adc
jae
outsl
push
inc
jns
pusha
xlat
mov
js
push
inc
mov
loopne
pop
or
testb
pop
mov
cmpsb
mov
fistpll
pop
hlt
shll
movsl
test
gs
out
lock
aam
adc
fistpll
xor
add
xchg
push
sub
sti
adc
and
idiv
and
pop
xor
xchg
and
stc
leave
pop
lods
mov
adc
imul
movsb
inc
xchg
aas
call
clc
add
xorb
mov
int3
jb
push
pop
in
bound
fisubrl
out
lcall
add
fldl
lret
std
insb
add
js
aam
fistpl
mov
xchg
rol
or
mov
fisttps
jno
stos
mov
xchg
scas
push
mov
inc
mov
mov
aam
jmp
sbb
mov
jnp
stos
cmp
dec
dec
push
pop
testb
pop
and
xor
xor
add
adc
outsb
fdivs
dec
mov
je
or
sub
rclb
add
loopne
mov
adc
pop
imul
lock
jg
and
and
pop
and
cmpsl
cmp
mov
jb
or
vmovlpd
mov
dec
test
popf
scas
cmp
aad
mov
rcrl
xor
fsubrs
dec
pushf
idivl
sti
dec
push
mov
add
inc
inc
pop
xchg
fldl
sub
outsl
jns
mov
out
inc
daa
repnz
mov
flds
ds
xor
aad
mov
xor
xor
outsl
xchg
xor
lcall
push
out
loope
mov
das
das
xor
in
push
icebp
decb
bound
popa
jns
add
fidivrl
aaa
push
mov
sub
pop
xchg
jbe
pop
je
addr16
xchg
add
dec
rclb
sti
xchg
sbb
dec
mov
adc
dec
pushf
mov
adc
sti
shlb
mov
mov
imul
pop
jecxz
sub
jbe
mov
xchg
test
and
out
fidivrs
adc
xchg
jg
mov
cmpsb
lahf
fs
dec
int3
jne
xchg
jp
inc
inc
loop
adc
outsb
aaa
dec
outsb
push
jl
je
test
inc
dec
pop
lahf
aas
nop
pop
xor
sbb
pop
dec
in
cmp
push
test
inc
sub
pop
in
insl
mov
fsub
pusha
cmp
mov
xor
mov
cmpsl
sbb
pop
jge
jbe
pusha
and
mov
xorl
jne
mov
cmp
cmp
or
fidivrs
jae
jns
mov
xchg
dec
ret
push
jae
in
xor
enter
adc
ds
ja
insl
cmpsl
mov
ret
xchg
lret
adc
ret
call
outsb
push
cmpb
xchg
in
xchg
mov
movsb
ds
cwtl
repnz
jge
jmp
mov
dec
lea
pop
andl
add
or
sti
andb
mov
jp
dec
je
jb
lock
rcrl
dec
and
shr
mov
jno
pop
lret
pop
int3
or
into
pusha
jge
adc
lock
icebp
pop
in
imull
pop
insl
popf
ljmpw
lahf
sbb
cmpsb
insb
daa
push
inc
jmp
xor
mov
xchg
test
andb
xchg
leave
ret
int
pop
shrl
movsb
push
sub
sahf
es
mov
add
jo
int
std
inc
jmp
push
aaa
dec
in
gs
call
mov
fs
in
or
in
testb
mov
mov
jae
in
jb
fists
inc
inc
imul
ss
or
push
shr
fiaddl
dec
fisubs
notl
lahf
imul
adc
add
adc
rolb
add
mov
sbb
in
cwtl
adc
or
jge
scas
pushf
shrl
sub
xlat
cmp
and
pushf
push
test
add
rcll
ficoml
mov
fnstcw
addl
in
bound
sub
push
mov
cmpsl
push
adc
or
ret
cmp
ljmp
cmp
mov
ds
xchg
dec
leave
out
sbb
cmp
enter
bound
and
push
inc
adc
push
das
ret
cwtl
loopne
mov
push
xchg
jnp
mov
leave
divl
dec
sub
jp
jo
xchg
jp
cld
xorb
leave
dec
stos
adcl
mov
mov
test
pop
sbbl
push
mov
ss
punpckhwd
push
xchg
dec
bound
or
push
pop
fdivs
or
dec
insl
lea
push
xor
inc
sbb
jg
push
push
test
xor
das
push
cmp
sub
lret
std
xchg
adc
popf
test
lds
xchg
inc
push
pushf
data16
enter
repnz
mov
test
std
mov
test
andl
pop
jg
pop
decl
repnz
mov
int3
sub
test
push
out
bound
jno
int3
inc
push
stos
mov
sub
sbb
xchg
xlat
lret
sbb
loop
mov
jge
dec
add
cmpsb
adc
sbb
js
mul
sbb
fdivrs
cld
push
repnz
mov
push
fcompl
pop
push
mov
bound
sbb
push
jl
ds
std
push
adc
cmp
fistpll
ficomps
xchg
fsubr
and
enter
mov
mov
inc
les
int3
repz
push
test
das
mov
pop
sub
bound
aas
movsl
cmp
mov
fdivr
or
sub
iret
in
add
jg
sbb
mov
xchg
jle
pop
push
inc
lahf
mov
adc
dec
out
lock
mov
jecxz
in
in
add
mov
push
subl
mov
ret
into
insl
mov
mov
popf
repz
stc
cmpsb
xor
xor
ret
lds
jmp
outsl
mov
and
pop
inc
aam
jb
or
push
and
push
repz
cmp
mov
mov
fldl
inc
arpl
lock
hlt
mov
outsb
daa
test
xor
dec
add
cmp
cwtl
shll
les
lret
ret
jno
jge
mov
insb
jp
fisttps
je
add
pop
gs
sub
and
adc
bound
cmp
dec
lock
xchg
mov
and
pop
dec
mov
cli
sbb
enter
ss
cli
add
mov
jl
xchg
adc
cwtl
mov
dec
in
dec
cmpsb
xchg
scas
sbb
insb
and
cmp
outsb
cwtl
xchg
push
mov
test
lret
cmpl
sub
imul
jmp
mov
xchg
adc
lea
cmp
adc
cmp
sub
orb
in
cmp
mov
std
arpl
push
enter
ljmp
cmpsb
or
jbe
cmp
cwtl
jnp
nop
fs
jmp
loopne
scas
outsb
lods
cmp
in
rcll
dec
jmp
pop
push
jae
adc
or
fisttpll
rcll
outsl
dec
icebp
stc
fwait
mov
or
cltd
inc
test
pop
lea
fstps
lret
lea
out
pop
jno
leave
jb
test
orl
xchg
pop
and
fs
cmp
and
and
lret
loope
and
in
dec
add
sub
and
and
xor
mov
out
ret
cmp
jnp
test
out
ljmp
inc
pop
xchg
inc
sti
xchg
pop
pop
add
je
lret
xor
mov
fmul
int3
adc
push
adc
add
mov
inc
mull
pushf
mov
inc
add
clc
mov
in
inc
arpl
iret
movsl
sbb
jmp
in
jle
outsl
test
dec
sti
sbb
in
pop
xor
jp
stos
fadds
out
fnop
xor
lahf
mov
mov
stos
and
int
xor
imul
pop
mov
cmpsl
gs
scas
aad
add
sbb
das
mov
mov
xchg
outsl
ret
aad
cmp
jp
pop
dec
decl
pop
ret
jl
push
xchg
inc
dec
clc
cmpsb
mov
mov
mov
sbb
shl
adc
pop
adc
inc
cmpsl
loop
mov
xor
pop
jbe
mov
xor
incl
add
xor
popa
fsts
mov
mov
and
cmp
pop
sbb
movsb
dec
arpl
sub
cli
fsub
in
loop
fsub
jle
pop
jno
or
adc
out
mov
jge
xchg
clc
dec
cs
gs
out
push
xchg
mov
jno
and
mov
jl
cmpsl
adc
jmp
mov
gs
in
fbld
add
rcrb
in
sbb
test
or
pusha
mov
push
test
lret
popa
movsb
cmpsb
sahf
lcall
jb
mov
xchg
popa
ficoml
cmp
sbb
ret
cmp
repnz
shrl
repz
mov
inc
sub
fldt
scas
cmp
dec
pushf
mov
push
or
mov
cwtl
mov
jmp
std
add
scas
jns
jbe
sbb
daa
in
test
adc
loop
push
mov
push
loop
jo
lret
out
push
shll
mov
addl
nop
mov
cmp
ljmp
cltd
inc
sub
mov
mov
pop
imul
xor
int
cmp
cmpl
mov
sbb
adc
ret
sub
mov
dec
mov
sarl
mov
xchg
push
pop
aaa
mov
cs
call
inc
sbb
mov
inc
rcl
leave
dec
lods
sbb
je
leave
shl
pop
call
push
xchg
test
adc
xchg
mov
ljmp
jns
stos
xor
pop
dec
cmp
andl
mov
and
jp
sbb
lea
jecxz
js
mov
jecxz
icebp
sarb
lds
or
mov
push
aam
rcrl
in
xchg
fiadds
repz
sub
or
sbb
and
and
pop
add
xor
or
mov
std
jae
dec
das
jl
inc
loop
sbb
loope
adc
loopne
int
rorb
sbb
clc
stos
pop
jecxz
jo
ds
sub
pop
cmpsb
shr
pop
pusha
aas
cmc
lods
aad
xchg
test
mov
mov
pop
xchg
stc
sbb
sti
or
jle
pop
adc
enter
movsl
fldl
mov
into
or
adc
iret
lahf
mov
jno
cmp
pop
cld
stc
xchg
rcr
lret
out
or
and
mov
mov
aas
jo
mov
fstpl
or
or
mov
and
out
test
movb
sub
mov
aad
movsb
adc
or
jp
or
jne
jne
out
lods
cmpsb
mov
dec
or
add
stc
and
jae
clc
roll
pop
test
shll
arpl
cmp
dec
jae
inc
add
out
lds
push
fs
popa
out
xor
push
pop
push
jle
cmp
cmp
adc
lahf
cld
fwait
sbb
and
out
lods
popl
push
shrl
dec
push
push
sbb
add
and
outsb
pop
pop
mov
dec
mov
mov
xor
xor
adc
andl
ljmp
fcoms
pop
aad
adc
xor
fnstcw
jb
clc
add
pop
aam
pushf
insl
dec
sbb
repz
andb
mov
in
outsl
mov
cmpsb
jmp
mov
push
pop
repz
dec
mov
adc
cs
dec
mov
lds
incb
inc
mov
cld
add
sarb
jp
fdivrs
and
roll
mov
mov
data16
sbb
repz
dec
ljmp
and
fs
add
jmp
jns
pop
stos
adc
xor
push
cmp
inc
pop
out
inc
jno
or
inc
jecxz
fistl
mov
pfmin
imul
mov
push
mov
mov
fsubrl
adc
fcmovne
sub
cmp
and
out
fnstenv
into
cli
ja
jl
inc
inc
mov
mov
pop
ret
arpl
enter
fidivl
xor
xchg
jmp
and
mov
push
xor
or
push
cmp
popf
cli
sub
dec
out
push
mov
test
sarl
mov
and
or
mov
sarl
jge
cmp
cli
in
in
xchg
jmp
notl
ss
push
jbe
clc
pop
jmp
jae
dec
sub
xor
nop
popf
dec
mov
in
outsl
or
or
fdivl
push
sarb
sbb
pop
jecxz
pop
int
insl
xchg
mov
sbbb
xchg
popf
loopne
add
mov
data16
mov
sbb
sub
sub
out
inc
adc
test
fwait
pop
enter
and
cmpsl
imul
lock
cmp
cmp
mov
cwtl
adc
mov
sub
imul
or
jne
push
imul
daa
mov
adc
inc
daa
inc
idiv
out
cli
sbb
mov
fldcw
adc
aam
clc
pop
xlat
loop
dec
fcomip
push
sub
pop
sub
ss
gs
cltd
inc
mov
cwtl
fnstsw
adc
push
into
sub
or
mov
cmpsl
add
lods
into
xchg
push
cmp
aam
push
shrl
hlt
andb
pop
cli
out
fstp
xor
inc
add
lret
inc
outsl
mov
xchg
mov
mov
imul
mov
dec
je
popa
jge
cmc
push
jecxz
scas
and
mov
pop
xchg
xchg
out
push
mov
cmpsl
sub
lods
sbb
mov
inc
fbstp
insl
nop
daa
dec
pop
jns
cs
out
test
scas
push
sub
inc
cld
xchg
push
in
icebp
leave
mov
inc
imulb
xor
xchg
ror
lahf
dec
pop
cwtl
mov
les
push
fdivs
je
xchg
rcll
jb
pop
mov
cmp
inc
ljmp
xchg
push
jne
aam
push
xor
cmp
outsb
mul
cmp
dec
rclb
add
test
in
mov
dec
jb
add
movsl
ljmp
pop
nop
arpl
das
lcall
push
out
sub
shrl
in
inc
dec
inc
hlt
push
daa
int3
aaa
push
inc
popf
btr
sbb
addr16
and
movsb
xchg
outsb
adc
mov
mov
imul
arpl
out
inc
inc
xchg
lods
idivb
xchg
add
lcall
jmp
sti
xchg
xor
cmp
pop
pop
xchg
cmp
inc
stos
jo
xchg
outsb
and
jno
clc
ficoms
pop
cld
dec
scas
inc
jno
and
popf
adc
xchg
jae
pop
add
cmpsl
int
lret
mov
aam
or
xchg
mov
lock
inc
mov
fcoms
jge
sbb
repz
mov
jge
cs
mov
lock
cmp
xchg
mov
lods
cli
push
mov
ljmp
cmp
pop
inc
fmuls
adc
sbb
sbb
rorl
mov
aad
mov
xchg
push
cld
scas
jge
xor
xor
ja
add
sub
jge
addr16
xchg
mov
sbb
imul
fsubp
test
int3
fldcw
push
fisubrs
repz
jns
jnp
lea
test
inc
fnstcw
ficomps
lahf
int3
aam
andl
push
xchg
insb
das
mov
sub
test
outsb
xor
icebp
sti
dec
stos
popa
imul
imul
sbb
xlat
lods
loop
in
or
ja
gs
mov
jne
mov
pop
lock
cmpsb
mov
inc
adc
lahf
movd
insb
outsb
adc
test
inc
xor
mov
inc
and
fildll
leave
ljmp
or
xor
xchg
pop
call
sbb
cwtl
cmp
cli
sti
inc
push
add
cmpsb
jge
jne
or
add
mov
inc
test
inc
xor
js
jmp
sub
ret
movsb
or
cmp
push
rolb
lret
ret
dec
inc
mov
xchg
xchg
in
test
cmp
fidivs
andb
sub
in
aaa
loop
xorb
mov
fisttpl
jl
mov
push
daa
insb
mov
and
sbb
hlt
sahf
mov
call
pop
popa
or
xor
lods
fidivl
ss
je
dec
mov
shlb
add
dec
or
pop
mov
push
cs
adc
aaa
fistpl
enter
adc
ja
ret
lahf
addr16
mov
fsubs
and
jb
xor
mov
cmp
rorl
mov
pop
int
pop
dec
roll
or
mov
hlt
insl
repz
imul
ret
out
out
sub
stos
rorb
cmp
xchg
sub
sub
sub
arpl
dec
leave
lea
test
std
mov
xchg
imul
pop
jmp
scas
cltd
jmp
dec
inc
cli
int3
sbb
add
popa
loop
add
pop
gs
xlat
dec
xchg
sub
push
stos
scas
pop
mov
jns
push
in
and
mov
cmp
nop
and
and
fs
daa
int
orl
out
sbb
jno
fcoml
pushw
sub
pop
daa
loopne
sbb
add
add
jle
gs
loop
cmc
adc
js
sub
std
dec
dec
mov
jne
push
mov
aaa
inc
inc
lret
sub
mov
push
pop
movsl
or
sbb
out
jecxz
dec
arpl
add
sub
cmp
adc
xchg
push
sti
jmp
xchg
mov
dec
outsb
incl
push
xchg
imul
loop
orb
in
push
mov
repz
shrl
sbb
dec
adcb
and
rclb
cmp
inc
mov
and
jbe
cmpsb
fcomps
sub
xorl
adc
pop
mov
xchg
js
jmp
mov
mov
test
lds
hlt
lods
push
xor
dec
lds
ss
test
sbb
mov
lea
mov
insb
pop
mov
pop
leave
ljmp
lds
cmp
in
je
fisubs
xchg
mov
and
add
mov
es
push
lds
lods
lret
loopne
shl
mov
insb
pop
repz
xchg
dec
ret
add
pop
cmp
cmp
cwtl
in
pop
int3
add
mov
add
push
jle
ret
sub
hlt
mov
dec
jl
enter
mov
xor
je
push
mov
sahf
cmovo
sar
jbe
imul
jmp
mov
scas
inc
xchg
test
out
sbb
jg
stos
jmp
cmc
pop
pop
test
xchg
or
pusha
and
scas
inc
ret
inc
out
fs
pop
imul
xorb
daa
cli
dec
mov
add
in
push
sbb
dec
dec
mov
mov
sub
mov
jle
lret
adc
push
dec
fwait
lods
dec
stos
mov
fldl
xchg
mov
icebp
add
mov
push
js
popa
cmp
or
cmpsl
and
imul
cmp
fwait
adc
out
fs
insl
push
pushf
push
cmpsb
je
and
fst
and
mov
scas
gs
pop
mov
cmp
ljmp
popa
add
divl
jae
mov
repz
and
mov
xor
push
pushf
test
nop
add
and
inc
out
cltd
fwait
cmpb
or
xchg
test
jbe
addr16
movb
pop
or
push
insl
in
xchg
and
mov
test
cs
inc
sarb
add
push
js
cmp
test
notl
shrl
push
movsb
lret
ja
bound
mov
js
repz
movsb
fmull
inc
into
push
lcall
insl
inc
movsl
jbe
inc
enter
sahf
lret
inc
xchg
cmc
popa
mov
in
repnz
gs
mov
push
cmc
jle
in
and
cmp
inc
push
insl
in
add
push
daa
dec
inc
movsl
test
jbe
in
in
xor
mov
arpl
gs
repnz
jle
mov
test
imul
mov
js
test
cmc
mov
enter
push
and
out
and
dec
pop
arpl
das
insb
dec
or
jb
jns
pop
jno
sub
sub
mov
inc
sub
adc
notl
std
shl
insl
sbb
mov
arpl
loop
pusha
ret
jno
or
sub
mov
mov
sub
pushw
aaa
rcrb
stos
sbb
sti
movsb
mov
icebp
loopne
pop
out
lock
inc
jmp
stc
mov
xchg
sub
mov
sub
pop
test
sti
loope
push
sbb
mov
js
pop
lds
inc
test
pop
loope
and
mov
pusha
jmp
pop
sub
fwait
mov
lods
mov
notb
js
add
and
fnsave
clc
test
mov
dec
loop
ret
add
rorb
js
jne
or
aaa
lock
out
push
xor
gs
mov
in
jmp
arpl
popa
mov
fs
fldenv
shrb
shl
xchg
fucomp
addl
lahf
mov
orb
out
push
loopne
jg
int3
cmpsb
push
inc
out
pop
add
cmp
pop
sbb
cmp
stos
jg
out
mov
test
bound
mov
js
add
dec
inc
cmp
push
mov
cmp
clc
inc
mov
add
push
lods
jo
dec
mov
mov
jge
daa
inc
adc
out
push
xorl
clc
inc
insb
data16
cli
and
cmp
cmp
das
mov
in
addr16
push
inc
push
jne
repnz
xchg
mov
pop
xchg
push
mov
adc
pop
lods
lods
cs
xchg
cmpb
stc
iret
cmc
imul
sbb
jne
or
xorb
inc
xchg
dec
das
cmp
leave
lds
or
push
mov
test
cmp
outsl
lahf
mov
clc
lods
xor
fdivrs
addr16
ss
add
int3
stc
rolb
jae
cmc
fwait
push
imul
sub
push
sbb
int3
pop
repz
fs
push
or
pop
push
mov
mov
dec
mov
js
imull
lock
in
jae
out
push
xchg
push
cmp
xor
xchg
adc
and
add
mov
fwait
push
cld
push
xor
xor
andl
test
pushf
add
mov
inc
std
or
and
and
addl
cs
arpl
fxch
sbb
sub
pop
lds
sbb
hlt
xchg
mul
lret
movsl
rcr
cmp
cli
mov
into
add
mov
inc
sub
and
cltd
inc
or
jg
pop
sub
insb
ljmp
jecxz
xor
loopne
sbb
in
xor
mov
iret
adc
xor
outsb
leave
testl
cld
sbb
jp
adc
cld
push
mov
sub
inc
sbb
xchg
jae
inc
mov
cmpsb
jecxz
and
test
mov
jo
adc
imul
fildl
push
stos
xchg
add
inc
ljmp
inc
push
cmp
movsl
xor
fwait
jns
cltd
jbe
enter
inc
negl
orl
lods
mov
bound
fisttps
ret
or
jecxz
mov
cmp
adc
inc
xor
mov
outsb
sbbb
pushl
pop
jle
mov
jmp
fnstenv
leave
mov
scas
xchg
inc
outsl
push
lret
hlt
dec
mov
pop
fldenv
testl
ja
lcall
cmpsb
fsubrl
jne
jge
out
andb
gs
std
mov
mov
xor
push
mov
add
aam
jmp
jae
cmp
movsl
bound
das
dec
mov
mov
mov
adcl
jp
xor
int
mov
jnp
and
push
add
sti
fwait
stos
push
sahf
mov
add
push
xchg
jbe
lahf
dec
mov
add
inc
out
andb
and
cmp
jmp
adc
jecxz
mov
dec
fbstp
xchg
xchg
mov
add
push
in
fwait
add
fsubs
loop
std
out
pop
cmpxchg8b
shll
mov
outsb
es
shlb
mov
scas
jmp
jge
mov
movsb
fistpll
push
ret
push
inc
fidivl
test
inc
inc
je
pushf
jae
scas
ret
mov
push
mov
jecxz
lock
mov
dec
ficompl
popa
lahf
lret
or
mov
inc
lock
cmpsl
pop
fstpt
leave
nop
lcall
sbb
daa
sub
mov
add
mov
adc
add
xchg
mov
push
inc
out
stc
sbb
popa
aaa
test
into
ret
add
sbb
jmp
scas
lahf
jo
mov
mov
loop
test
sbb
push
push
ljmp
pop
cmpsl
cld
cmc
adc
shlb
jo
fimull
cmp
ja
imul
xchg
test
ja
cwtl
xlat
test
pop
clc
fs
cmpsb
insl
adc
pop
vfrczpd
add
orl
outsb
mov
mov
sbb
repz
lock
fsub
mov
xlat
push
xlat
xchg
mov
xor
xor
mov
mov
inc
out
imul
je
int3
sub
adc
jbe
dec
sti
sub
ljmp
sub
shr
jb
lret
fbstp
jge
adc
test
sub
notl
in
insb
mov
fcompl
inc
push
pop
sbb
fmull
xchg
pop
inc
pop
adc
fiaddl
cmc
sub
xchg
mov
add
scas
mov
mov
movsb
xor
lock
and
icebp
call
or
iret
fsubrs
inc
xchg
or
xchg
add
ret
xchg
push
je
cmp
sub
fdivp
inc
aam
std
rcrl
and
mov
dec
fisubrl
adc
lret
insl
je
ja
repnz
iret
shlb
repz
jl
add
inc
gs
jle
cltd
cmp
pop
test
in
mov
sti
xchg
push
sbb
shrb
push
mov
rclb
cmpb
test
adc
stos
mov
sub
mov
add
cmp
mov
mov
pop
mov
cmp
and
add
dec
dec
push
insb
out
sbb
or
jno
mov
mov
test
push
sbb
dec
fsubl
inc
iret
mov
jo
inc
xchg
lret
cmp
insb
js
cmp
inc
lods
adc
ljmp
add
cmpsb
iret
and
pusha
jge
inc
mov
jmp
test
std
jno
xchg
adcb
xchg
mov
out
mov
inc
cld
cltd
inc
sub
std
pop
or
mov
fiadds
pop
aas
cld
loopne
sub
fnstsw
mov
pop
test
fcoml
fcompl
lcall
stc
or
xor
ss
sub
xchg
lock
jle
popf
adc
xchg
aam
cmpsl
and
xor
add
sub
lods
jge
dec
movsb
jnp
mov
mov
arpl
clc
inc
mov
adc
sub
xlat
inc
inc
jle
fsubl
mov
fistps
lods
and
mulb
jo
jg
dec
dec
sbb
test
ret
jne
hlt
mov
push
test
int3
mov
jne
pop
call
xchg
inc
sarb
les
inc
aad
mov
sub
dec
dec
stc
adc
outsl
jl
push
fcmovne
push
rorl
mov
sub
dec
adc
mov
das
sub
xchg
movsl
xchg
hlt
hlt
divl
lahf
xor
pop
cmp
mov
inc
iret
and
test
lcall
lds
push
inc
xor
fisubl
mov
dec
aas
mov
lods
xchg
call
subb
sub
mov
scas
and
inc
cmp
adc
inc
clc
xchg
xor
jae
js
aad
test
mov
pop
inc
xchg
adc
lret
lds
xchg
movsb
pusha
cwtl
rcr
stc
xor
dec
lock
push
mov
mov
jge
cmp
lods
sbb
pop
xchg
test
and
adc
push
fildll
or
in
or
xor
mov
aas
mov
push
cld
and
and
fdivs
jns
ss
sbb
pop
das
fistpll
andb
iret
lock
cmpb
fs
fdivr
testb
dec
sbb
xor
rolb
cmpsl
and
dec
push
add
clc
inc
in
jno
add
call
ds
mov
cltd
jne
cs
jns
mov
jmp
ljmp
adc
inc
inc
mov
inc
dec
lods
fnstenv
in
mov
popf
fsubr
pop
cmc
insl
mov
cmc
aad
popl
mov
out
inc
sbb
or
sarl
xchg
jecxz
ja
sub
insl
xor
imul
rol
hlt
mov
repz
fwait
fwait
pop
fstl
insb
inc
xor
test
or
cs
clc
inc
sbb
mov
add
sub
cmp
pop
stc
add
cli
jne
xchg
les
pop
sahf
sbb
lahf
mov
adcb
inc
sub
mov
iret
ss
xor
stc
enter
ss
mov
pusha
push
lret
lds
push
int
mov
jge
fsubrs
and
cmp
dec
pop
in
mov
js
fdivrl
and
scas
dec
fldl2t
gs
lret
cwtl
fisttpll
lret
cmp
outsb
inc
loopne
xchg
arpl
cmpsl
or
ret
test
mov
mov
sub
cltd
sbb
push
mov
mov
and
pop
in
sarb
sar
es
rcr
pop
adc
inc
ss
ret
ficomps
mov
aam
dec
cld
rcr
loopne
pop
xchg
cmp
cwtl
pushf
push
inc
mov
roll
add
sub
dec
cwtl
test
loopnew
movsl
inc
arpl
inc
mov
fsubrl
push
xorb
imul
call
and
jmp
mov
cmp
mov
pop
ss
fimuls
ja
test
pop
fildl
enter
mov
int3
fs
pop
int3
subb
add
ss
outsl
mov
jge
dec
fs
adc
cmpsb
repz
data16
imulb
mov
xor
jp
jmp
iret
inc
aas
dec
das
sahf
leave
nop
lahf
jns
xor
cli
mov
pop
add
rorl
aam
das
add
fisubs
cli
mov
faddp
or
jo
sbb
jne
sub
cmpsl
jmp
cmp
xor
inc
cli
fcoml
aaa
push
sbb
cltd
ffreep
loop
daa
lods
out
mov
test
shlb
sbb
jbe
xchg
jg
sbb
sub
push
dec
in
jno
mov
pop
xor
sub
pop
or
fisubs
add
leave
or
lds
cltd
lahf
and
pop
or
xchg
test
jle
jnp
loopne
jnp
cmp
mov
cmp
repz
loopne
decb
out
lods
jae
data16
or
test
xor
jl
add
call
movsb
sahf
mov
pushf
or
xchg
sbb
lods
sti
xor
inc
cs
xor
jl
sahf
xchg
jecxz
push
xor
shl
jns
mov
adc
loopne
jo
lret
repz
mov
enter
cmp
sbbl
test
sub
test
addl
ret
fisubs
out
cli
sbb
jmp
xchg
stos
sub
add
and
mov
mov
lds
mov
shrb
fisttpl
xchg
xchg
xchg
sbb
test
lret
std
cld
vpsubd
pop
adc
xor
jle
inc
mov
popa
xor
mov
addr16
cmpsl
jb
jne
inc
jnp
ficomps
push
ret
out
clc
xor
mov
mov
scas
out
xor
dec
test
mov
push
cmp
xor
pop
dec
cmpsl
pop
int
jnp
testb
int3
lods
jb
cmp
sbb
nop
or
and
push
fisttpl
push
js
fdivrs
mov
add
mov
js
cmp
mov
sub
jne
xchg
fisttpll
push
jne
ret
mov
sahf
push
xor
cmpsl
fistl
js
in
filds
je
mov
xchg
adc
sbb
sbb
scas
sarl
dec
icebp
cmp
or
jns
cs
push
fucompp
push
scas
mov
mov
dec
movsb
jnp
inc
add
mov
push
aam
mov
clc
aas
pop
and
sbb
lock
xchg
jb
scas
xchg
jge
data16
push
push
add
xchg
rolb
rorl
sbb
xchg
shl
push
fbld
jne
icebp
inc
out
jns
inc
add
sbb
dec
ss
mov
stos
fwait
dec
cli
shr
scas
or
push
stos
arpl
imul
and
rorb
pop
je
loopne
fisttpl
shrl
lock
jne
adc
in
sbb
fisttpl
sbb
popa
mov
fadd
popl
and
nop
clc
loope
xor
jecxz
mov
xchg
jb
jmp
dec
ss
dec
int3
xchg
movsl
movsl
sub
push
mov
cli
dec
fidivs
ljmp
pop
std
mov
mov
rcr
shlb
decl
clc
pop
cwtl
fidivs
out
dec
cmp
mov
push
jg
in
mov
icebp
ficoms
inc
add
lods
flds
cmp
ljmp
orb
in
jl
xchg
test
pop
stc
adc
imul
sub
mov
stos
or
lods
clc
xlat
xchg
xor
dec
subl
lock
push
or
inc
sub
fistpl
dec
mov
mov
ja
clc
lds
jbe
fidivs
sti
and
gs
push
cld
sub
out
stos
xchg
xorl
icebp
jecxz
arpl
mov
mov
cmp
jne
lcall
xchg
mov
pushf
enter
jg
cvtdq2ps
xor
pop
testb
push
xchg
dec
inc
mov
xor
in
fwait
roll
je
out
or
xchg
pop
mov
xchg
enter
hlt
stc
loope
adc
sub
loopne
fdivrs
lea
jg
fimuls
stos
mov
gs
xchg
xchg
push
inc
pop
es
out
and
sbb
in
fs
inc
test
movsl
lds
cwtl
mov
ja
arpl
mov
dec
jbe
pop
xor
jae
test
sahf
push
mov
aam
xchg
mov
jne
xor
cmp
jno
fld
icebp
mov
inc
popa
cwtl
xchg
add
add
leave
imul
mov
movsl
xor
mov
dec
mov
mov
dec
ret
out
cld
hlt
jno
push
sub
and
clc
mov
cmp
adc
mov
sub
ds
inc
daa
ljmp
je
test
jne
ret
addr16
arpl
fimuls
das
cli
lea
int
mov
xchg
sub
cmp
test
mov
pop
das
fildll
xchg
inc
sub
adc
and
inc
pop
mov
mov
rcll
and
or
mov
lret
dec
repz
ja
add
std
and
push
mov
addr16
ss
hlt
adc
add
xchg
cmpsl
cltd
adc
jg
mov
adc
aam
stos
fwait
das
bound
pop
daa
mov
movsl
icebp
cmp
mov
mov
lret
fcoms
mov
push
es
jne
xorl
xchg
movsb
or
sbb
aam
addr16
mov
js
xchg
ret
ljmp
scas
pop
out
loope
xchg
xchg
inc
js
add
push
inc
mov
jg
outsb
dec
aam
jno
fidivl
dec
pop
sbb
es
push
mov
rep
push
lret
sbb
mov
mov
xchg
xor
mov
testl
mov
xor
stc
shrb
jo
and
lock
idiv
mov
ljmp
or
mov
sub
jno,pt
push
subb
movsl
and
sbb
data16
fs
fwait
push
xchg
je
xchg
inc
scas
xor
mov
aam
lods
xor
inc
and
stos
fists
lods
fld
ds
lret
imul
mov
inc
mov
and
movsl
iret
in
lcall
sub
pusha
loop
cltd
scas
mov
mov
dec
sub
dec
popa
mov
dec
push
jg
aad
test
aad
lahf
hlt
dec
scas
cmp
and
das
pop
push
add
scas
in
push
xchg
dec
pop
out
add
jno
xor
xchg
pop
adc
mov
pop
xchg
and
bt
or
ds
mov
ficoms
sub
ljmp
add
inc
lock
int
pop
aas
or
mov
mov
das
or
inc
dec
jb
in
fwait
mov
sub
sbb
mov
test
data16
fidivs
test
loop
sub
dec
push
shrl
mov
popa
fimuls
xor
inc
jg
add
and
pop
xor
lea
cmpsl
cmp
jae
add
adc
sahf
cmpl
add
xchg
out
dec
dec
test
test
nop
mov
fs
das
inc
lret
inc
lea
xor
push
popf
dec
js
and
lret
insb
cs
bound
movsb
mov
hlt
dec
lret
cs
mov
push
xor
mov
lea
cmp
cmp
in
iret
push
cs
sbb
mov
fsubrl
cmpsl
xor
fwait
nop
and
shrl
cmp
cmpsb
movsl
pop
xchg
mov
jle
stos
xchg
rolb
std
cltd
sbb
loopne
out
sti
ror
sbb
xor
lahf
ret
out
mov
cs
add
aam
add
sbb
mov
cld
mov
xchg
sbb
loope
sub
ds
mov
sbb
es
pop
jmp
pop
outsl
cmpsl
sbb
sbb
cmpsl
popa
and
mov
sti
out
in
mov
xlat
les
mov
lret
jl
dec
push
icebp
mov
inc
xor
mov
or
inc
aas
das
pop
dec
je
mov
push
imul
outsl
and
repz
or
pop
xchg
push
xchg
scas
mov
sbb
rorl
orb
cs
xlat
enter
xchg
push
cmp
lahf
mov
rorb
xor
xchg
adc
jmp
mov
movsb
stos
inc
dec
call
leave
lods
inc
push
aam
inc
mov
sbb
nop
pop
out
jnp
cli
ret
push
popf
cld
inc
imul
sbb
mov
call
inc
push
add
xor
mov
mov
mov
mov
fnstenv
sub
pop
int
xor
cld
fsubr
cli
js
ror
push
orb
gs
sbb
aad
push
enter
lret
mov
inc
icebp
ret
mov
wrmsr
and
lahf
dec
mov
mov
or
test
add
jl
mov
jl
scas
mov
sbb
push
pusha
inc
enter
add
mov
jl
xor
pop
add
mov
jo
andl
adc
push
lcall
hlt
xor
add
pop
dec
xchg
stos
push
test
push
xor
cmp
cmpsb
or
or
jg
push
rclb
and
in
ret
mov
mov
lods
push
jl
out
fcmovu
sub
loope
ds
sti
inc
rorl
sub
loop
lds
dec
mov
into
mov
leave
movsl
call
mov
flds
lds
sarl
xlat
imul
xor
inc
jb
es
mov
xor
mov
mov
adc
es
xchg
ret
lret
add
lock
push
mov
cltd
lahf
dec
sbb
fsubr
sarl
in
mov
add
sub
sarl
xor
cmp
or
mov
dec
xchg
sti
out
inc
cs
push
aad
and
sub
rclb
repz
rclb
mov
cwtl
pusha
xchg
and
mov
xchg
testl
mov
lea
insb
dec
sub
push
inc
in
cmpsl
ret
pop
jbe
clc
pop
scas
icebp
and
sbb
loop
xchg
add
in
loopne
push
test
push
and
add
vmovlps
xchg
pop
xchg
pusha
push
lods
ret
mov
push
imul
repnz
xchg
and
add
out
inc
fisubrl
sub
add
mov
push
jle
lods
jmp
test
es
pextrw
add
add
movsb
fsubl
mov
xchg
scas
dec
jne
mov
mov
inc
inc
in
mov
test
mov
push
jp
pop
jge
jbe
ud0
sub
into
scas
stos
lock
loop
mov
adcb
pop
mov
fdivrp
or
pop
lahf
int
repz
cmp
jns
movsb
ret
or
insb
sarb
jne
push
jge
or
scas
repnz
jne
or
dec
leave
mov
adc
push
dec
ja
mov
push
scas
std
add
inc
mov
sarl
push
mov
jle
sbb
sub
inc
in
or
lahf
pop
jge
sbb
jecxz
jno
mov
mov
jl
dec
and
loope
or
lret
rorb
stos
out
fistpl
mov
out
xchg
and
movb
movsl
sub
ss
lods
popa
imul
push
jmp
rcrb
pop
lret
popf
mov
test
shlb
or
mov
push
test
dec
pop
notl
pop
movb
or
lret
push
inc
add
sbb
xchg
add
mov
mov
bound
out
sti
mov
aam
push
inc
add
repz
adc
sbbl
pop
jnp
mov
mov
mov
test
bound
and
xchg
mov
repnz
mov
aaa
cmc
cmp
fwait
or
dec
lret
xorb
stc
ss
stos
std
scas
push
xchg
mov
fildl
mov
add
ja
icebp
in
jae
lods
or
in
mov
ss
add
je
cmp
mov
mov
enter
cwtl
sub
xsaves
mov
jnp
loop
std
cmp
sbb
inc
mov
cmpsb
cmp
test
inc
or
imul
in
hlt
ret
pop
inc
mov
out
push
inc
pop
loop
lods
mov
mov
addr16
inc
mov
sti
push
jo
shl
or
loope
lock
jle
popa
pop
add
iret
mov
movsb
shll
xor
pop
and
insb
pusha
movsb
imulb
divb
push
insb
mov
mov
cmp
mov
decb
pop
ret
add
push
push
adc
jmp
loope
test
mov
or
and
mov
dec
insl
pusha
test
mov
cmp
lock
lods
aad
jb
xor
dec
imul
popa
lret
fnstsw
andl
xchg
data16
adc
pop
sub
sbb
mov
xchg
mov
pusha
push
imul
sti
or
cmc
jl
and
jns
pop
xor
insb
or
xchg
scas
or
jb
jb
adc
arpl
adcb
lret
cmp
adc
shlb
mov
adc
sbb
repnz
ret
es
daa
nop
pop
stc
push
adc
adcl
pop
lcall
sbb
std
fwait
ljmp
cli
or
jo
inc
sar
stos
jmp
ret
pop
lret
xchg
push
sub
imul
dec
fisubrs
lock
sub
mov
les
movsl
fnstsw
pop
jmp
mov
hlt
bound
or
and
pop
pop
mov
clc
xor
pop
movsb
mov
pop
xchg
adc
inc
lds
adc
aad
or
adc
sbb
sbb
xchg
pop
xchg
aad
mov
push
iret
aas
fdivs
imul
jbe
ss
outsb
aaa
jo
scas
sub
mov
push
mov
movsb
xchg
mov
mov
mov
mov
jnp
aaa
fidivl
aam
xlat
push
add
or
jno
ja
mov
mov
adc
imul
mov
mov
int3
mov
inc
sbb
scas
adc
popa
loop
or
jno
sbb
loop
push
dec
scas
or
out
lret
push
xchg
mov
insb
mov
jmp
in
inc
push
sarb
gs
mov
pop
mov
inc
mov
adc
lods
cli
js
test
mov
cmp
inc
sub
or
mov
jmp
mov
or
or
xor
jns
push
fwait
sub
scas
pop
xor
mov
addr16
int
xor
or
mov
push
shlb
push
sub
inc
sbb
pop
aaa
add
dec
stos
out
outsl
xchg
xchg
jae
lods
or
lret
je
inc
or
mov
into
aad
push
jge
out
in
pop
sahf
js
xor
xchg
fucomp
jae
mov
or
add
mov
aad
pop
and
mov
pushf
test
shll
jbe
pop
filds
add
ljmp
adc
mov
int3
inc
mov
faddl
inc
pop
push
xchg
push
popf
pop
mov
cmc
idiv
insb
sub
insb
sbb
add
and
pushf
movsb
imul
lds
outsl
repz
pop
lahf
jmp
lods
jmp
in
jg
subb
xlat
out
andl
jle
xor
mov
pop
cmp
adc
and
dec
in
dec
lcall
cmp
int
mov
das
addr16
mov
mov
shlb
mov
movsb
cld
lods
mov
jg
ljmp
xor
or
inc
aaa
outsb
lcall
test
loope
std
jns
mov
stos
dec
in
fdivs
sbb
sahf
popa
push
pop
add
int3
adc
popf
daa
icebp
das
loopne
push
rclb
daa
out
stos
or
or
loope
xchg
sub
dec
cmpsl
xchg
jg
mov
sahf
ss
xor
add
shlb
mov
adc
push
push
mov
push
jmp
cltd
adc
mov
pop
and
push
daa
iret
ret
movsl
add
cli
cs
je
scas
pop
dec
sbb
lock
sub
mov
and
adc
push
cld
mov
repnz
outsb
mov
inc
xor
dec
jg
int
xchg
pop
mov
sub
cltd
adc
adc
jle
lret
or
xchg
sub
lahf
xor
call
inc
scas
fisttpll
pusha
mov
and
xor
std
mov
xor
in
fiaddl
lods
mov
inc
stos
inc
rcrl
jmp
cltd
mov
mov
sub
js
mov
les
pop
fwait
adc
pop
shr
or
sarb
shl
mov
dec
jecxz
mov
xchg
aaa
andl
out
test
add
gs
sub
std
adcb
in
adc
out
orb
stc
inc
in
sbb
lods
movsl
ja
pusha
jne
fildl
mov
xchg
mov
and
outsl
cli
scas
test
loope
in
cltd
int3
adc
fsubs
cmp
mov
outsb
mov
dec
je
lods
loop
imul
pop
mov
xor
xlat
gs
mov
mov
add
inc
hlt
popa
or
movsb
lret
pop
pop
pop
cmpsl
imul
lods
mov
pop
gs
xlat
or
add
xchg
lods
inc
clc
jle
xor
cwtl
orl
push
adc
insl
and
cltd
sub
outsb
fstpl
enter
in
das
sbb
loopne
push
movl
push
mov
shll
or
sti
pusha
and
repnz
addr16
xor
dec
mov
cld
add
xor
aas
push
mov
xchg
cld
in
jae
fwait
pop
outsl
mov
sbb
enter
fnstcw
add
adc
cmc
negb
rcll
push
xor
adc
ja
cmpsb
in
and
in
adcb
data16
aam
rorb
or
mov
mov
cld
stos
cmp
popf
icebp
mov
dec
xchg
mov
add
int3
fucomp
ret
xor
mov
testb
bound
mov
cmpsl
popa
cwtl
dec
sbb
cmc
iret
fcompl
pop
inc
mov
push
add
mov
scas
in
push
jbe
mov
mov
into
xorl
insb
jb
es
fsub
pusha
shlb
inc
vpminsw
cmc
std
dec
out
sub
jmp
cmp
aaa
sarl
jne
mov
popf
shrl
out
or
lcall
xor
je
lcall
mov
ror
dec
add
iret
lret
lods
ds
add
insl
mov
mov
dec
rclb
jecxz
jl
and
orb
mov
mov
add
in
pop
dec
ret
daa
arpl
imul
pusha
sti
add
pop
pop
mov
fsubl
inc
icebp
ja
xor
out
insl
mov
int3
or
pop
xchg
outsl
xchg
rorl
dec
dec
pop
xchg
dec
lods
add
gs
cli
shll
clc
pop
dec
bound
addr16
cltd
mov
ljmp
cwtl
or
shrb
aas
xchg
and
imul
aaa
repnz
arpl
jae
sbb
pusha
add
out
dec
lods
jg
push
addr16
mov
shr
fdecstp
mov
cwtl
jne
je
loop
imul
in
sbb
js
dec
mov
fldt
arpl
lods
inc
imulb
mov
push
iret
sti
pop
rorl
paddusb
aad
sarb
mov
push
es
mov
push
into
push
fisttpl
add
out
sub
xchg
pop
mov
push
inc
test
jb
ret
movb
sbbb
dec
push
dec
inc
loop
int3
out
xor
adcl
imull
xor
pop
iret
cmp
cs
cmp
jns
push
push
lods
or
dec
loope
pop
or
lods
push
roll
add
lret
or
in
ljmp
xchg
add
or
inc
lret
xchg
pop
adc
dec
adc
sbb
filds
mov
and
mov
cmp
dec
add
testb
sub
push
sub
fcomps
mov
lea
stos
cmpsl
mov
xchg
xchg
fdiv
mov
out
dec
pop
fldl
lock
xchg
out
sub
lock
dec
sbbb
push
loope
sti
dec
jns
dec
stos
repz
lahf
adc
je
mov
mov
jmp
imul
ret
pop
mov
in
or
sbb
and
pop
xchg
repz
adc
or
sbb
lods
sbb
xchg
adc
sbb
pop
ljmp
and
jle
sti
nop
fisubs
enter
aam
lret
or
or
lds
xor
cmp
lahf
inc
sbb
jge
adc
push
lods
sub
adc
loope
sub
mov
lret
imul
ss
fcmovbe
pop
push
inc
sub
cmpsl
jbe
add
arpl
mov
clc
push
adc
mul
cmp
dec
pop
test
cmp
xchg
xchg
mov
subb
sbb
push
mov
push
sbb
push
lea
test
cmp
int
test
cmp
cltd
ret
insb
lahf
movsb
cmpsb
cmp
fildll
cmp
out
adc
jge
mov
aaa
popf
fisttpll
inc
leave
add
xor
hlt
loope
pop
mov
lretw
repz
repz
mov
mov
stc
outsb
jns
cmpsb
ljmp
xchg
cmc
jge
add
xchg
mov
dec
es
xchg
shlb
adc
das
dec
imul
mov
outsl
lods
lahf
add
xor
inc
jbe
fcmovnu
sub
pop
adc
pushf
movsl
dec
rcr
mov
inc
xchg
into
daa
loope
ja
xchg
pop
movsl
fldt
add
mov
pop
outsb
sub
scas
lss
lea
jle
jo
adc
add
lret
mov
aam
mov
xor
add
jne
shlb
dec
jge
outsl
mov
adc
mov
jecxz
dec
mov
scas
or
orl
cmc
push
in
adc
jo
loop
dec
out
mov
sbb
movsb
iret
xor
psubsb
cli
subl
mov
xchg
pcmpeqw
inc
push
clc
cmpsb
mov
ss
adc
or
mov
out
lret
mov
xor
stos
imul
rorb
push
imul
in
lock
cmp
nop
xchg
aas
aam
std
pop
out
sub
popa
push
cli
xchg
inc
in
sub
lea
xchg
adc
iret
pushl
adc
jo
fiaddl
lret
lret
cld
dec
movsl
bnd
sub
add
fadds
mov
pop
imul
inc
mov
out
stos
test
test
fcmovnb
rorl
mov
imul
scas
cmc
and
xchg
cmp
std
sti
sbb
mov
mov
mov
sbb
xor
testl
pop
mov
stc
cli
fbstp
pop
mov
mov
jb
cmp
push
push
popa
js
lret
sbbb
imul
mov
adc
xchg
roll
loop
jle
xchg
pop
inc
cwtl
ror
or
dec
lret
and
jo
scas
aas
jl
mov
outsl
xchg
xchg
les
mov
popa
lods
sbb
mov
repnz
cmp
mov
cpuid
in
jo
add
repz
lcall
sub
xlat
or
pop
cmp
clc
push
cltd
iret
lahf
icebp
in
push
movsb
pop
ret
sbb
test
adc
jae
jae
clc
xor
dec
cmp
dec
mov
mov
mov
and
pop
mov
int
sub
into
out
outsb
repnz
push
pop
jno
mov
cltd
mov
jge
fldenv
fstp
lret
pop
xor
or
jb
or
mov
jnp
dec
push
inc
xchg
mov
test
les
daa
xchg
inc
adc
sub
cmp
or
push
sbb
xchg
fbstp
mov
ret
sbb
inc
jnp
cwtl
daa
xchg
mov
adc
xor
cltd
fwait
pushf
jb
lock
adc
roll
and
inc
or
int3
push
movsb
adc
cmpsb
xor
mov
cmp
pop
fsts
push
outsl
mov
aam
push
in
pop
push
ja
cmp
lds
incb
xor
mov
adc
jl
in
adc
mov
push
push
int3
mov
test
insb
loop
fistpll
xor
sub
test
jbe
add
insl
cs
jle
ja
pop
pop
fsubl
mov
xchg
pushf
fistpl
stos
push
pop
insb
cld
stos
daa
add
xchg
mov
dec
xor
mov
mov
cld
xchg
inc
add
adc
lods
scas
lea
aam
add
jnp
aaa
cmp
xchg
iret
into
loop
dec
xor
dec
and
sub
pop
in
jl
popa
cmovle
iret
lret
insl
fbstp
test
nop
in
mov
add
in
xor
mov
inc
mov
loopne
mov
mov
outsb
xchg
jmp
pop
xor
fwait
leave
pop
add
int3
add
js
and
sbb
insb
and
dec
imul
cld
mov
sbb
lods
push
sub
daa
out
sti
outsb
movsl
cmp
inc
mov
mov
mov
dec
sub
sbb
inc
mov
mov
jne
mov
out
test
jg
filds
orb
push
clc
gs
xor
pop
shll
das
xor
stos
or
push
add
jle
bound
loope
pop
cmp
dec
add
dec
mov
repnz
aas
xchg
adc
mov
jne
test
and
mov
xchg
jge
adc
ret
lret
dec
inc
jbe
loope
mov
popf
in
mov
cmpsb
das
or
xchg
xor
pop
push
adcb
ljmp
push
lcall
clc
les
inc
cwtl
jbe
enter
notl
dec
mov
shll
dec
xchg
mov
inc
jecxz
loop
push
pop
adc
adc
test
jg
ret
ljmp
arpl
movsl
xchg
cmp
xchg
xchg
jge
dec
mov
jl
call
lea
test
les
xlat
cmpsb
cs
hlt
xchg
cs
pop
sbb
mov
xorl
adc
inc
out
push
fs
and
in
inc
adc
jnp
sbb
in
data16
mov
push
jae
push
mov
xor
inc
sub
mov
mov
mov
add
adc
cmp
aaa
inc
stc
les
mov
int3
jno
cmp
ja
add
dec
lock
push
sub
movsl
push
inc
sub
cwtl
enter
lret
jbe
je
repz
fcmovnu
repnz
test
xchg
jns
push
mov
jno
dec
fidivs
or
push
xchg
sub
in
xchg
stos
inc
sar
jns
mov
in
icebp
cli
cmp
fcoms
mov
inc
push
add
and
and
cmp
mov
sbb
pushf
add
hlt
dec
and
mov
lock
mov
das
in
cmp
lods
sub
adc
mov
sub
addl
jmp
mov
daa
dec
imul
repz
loopne
bound
jns
push
adc
enter
jnp
into
cs
dec
xor
pushf
mov
jo
xor
repz
fiaddl
sahf
pop
es
ljmp
lea
adc
mov
insl
jns
mov
inc
pusha
add
jbe
cmp
fmuls
scas
mov
mov
sbb
adc
stos
pop
cltd
clc
aaa
stos
std
repnz
test
mov
jp
sbb
popf
pop
cmp
shll
sti
jo
int
jae
sbb
sahf
mov
mov
sub
mov
push
cmpsb
lret
jg
xor
insl
aad
xor
push
mov
add
push
inc
sub
enter
inc
stos
mov
dec
xor
inc
rorb
jo
movb
sbb
jg
cmp
mov
push
mov
rorb
or
dec
push
test
ja
pop
nop
out
pop
jg
pop
ljmp
or
sub
dec
pop
adcl
sub
add
jmp
mov
cmpsl
add
jge
out
pushf
stc
fsub
stos
xlat
stc
jg
lret
inc
mov
xor
pusha
push
mov
mov
jo
mulb
stos
pop
decl
shll
fcmove
inc
fxch
adc
outsl
arpl
ret
inc
cmpsl
sbb
mov
lea
xchg
push
mov
dec
cmp
or
sub
push
ret
mov
cmp
pop
sub
ljmp
push
ljmp
sbb
jmp
push
loop
ret
icebp
pop
sub
mov
cltd
sub
aaa
push
sbb
xchg
cmp
js
xor
jmp
pop
push
pop
popf
jle
pop
jmp
or
jns
nop
mov
jge
and
scas
xlat
jle
mov
push
adc
out
imul
mov
mov
lds
scas
push
ja
xor
cmc
por
dec
stos
jmp
scas
out
sbb
mov
push
xchg
loopne
add
add
sbb
out
rcrb
out
cltd
push
stos
pop
nop
xlat
jg
push
mov
cmp
jg
fldl2e
outsl
pop
dec
cmp
sub
repz
ficoms
jmp
arpl
enter
jmp
or
xlat
xor
dec
jge
mov
into
jmp
test
xorb
out
ja
xchg
cltd
stos
cmp
out
mov
cli
nop
outsb
pop
mov
ja
push
and
sbb
popf
pop
fwait
jb
out
jno
jb
pop
jne
repz
or
mov
jbe
sahf
pop
jo
addr16
sarb
xor
xor
lret
cmpsb
outsb
jmp
jmp
lcall
pop
rclb
lret
mov
cmpb
dec
jo
idivb
add
test
les
out
or
nop
ficoms
shlb
in
inc
rorb
adc
aas
push
shll
test
jl
xchg
pop
add
xchg
push
mov
ret
cwtl
mov
fmull
mov
pop
sbb
xchg
jmp
sbb
mov
out
addr16
shlb
xchg
or
mov
in
pop
pop
pop
aas
inc
vcomisd
inc
jo
divl
sub
imul
xchg
daa
push
cmp
mov
stos
sub
jecxz
cli
lcall
test
xchg
and
out
test
cltd
lcall
pop
lods
enter
sahf
cmp
mov
movsb
mov
cmp
xchg
add
js
into
xchg
sbb
pop
push
fwait
in
push
lahf
push
andb
or
mov
push
out
cmp
push
mov
dec
nop
mov
ljmp
and
mov
jbe
ret
and
out
cmpsl
pop
in
ret
arpl
push
mov
imul
fs
shlb
mov
fst
xchg
inc
enter
or
lds
mov
mov
jl
xchg
or
sbb
mov
sbb
aaa
add
adc
cmpsb
dec
push
xchg
push
adc
inc
cmc
popf
aad
mov
jp
aam
and
jb
ss
push
lret
jnp
mov
push
and
dec
push
push
mov
pop
cs
stos
sub
shll
cs
pop
sbb
inc
push
mov
lods
inc
xor
cmp
cmp
mov
mov
jle
nop
ret
lods
popf
movsb
adc
adc
mov
dec
jno
lret
mov
cmp
mov
sbb
inc
cmp
lods
jge
inc
jbe
or
pop
inc
sbb
xor
roll
ret
ljmp
jno
push
jae
pop
ficompl
sub
sarb
ret
rcrl
scas
lds
stos
push
cmp
shlb
repnz
test
lcall
mov
dec
fiaddl
fucomi
mov
dec
adc
addb
pop
in
and
loopne
into
mov
addr16
scas
fistpll
fisttpl
mov
push
orb
lds
aas
jl
ror
and
ljmp
loope
data16
pop
cld
add
or
jg
mov
es
inc
loopne
inc
push
cld
cwtl
cli
dec
in
mov
xlat
jle
push
fs
sub
xchg
lahf
push
insb
mov
jb
dec
test
nop
fsts
add
icebp
js
hlt
adc
int3
inc
mov
dec
rol
pop
cmp
xchg
mov
mov
fdivs
adc
outsb
je
sub
shrl
cmp
in
cmp
jns
gs
iret
outsl
cmp
mov
fwait
jp
dec
fs
push
into
xor
int3
xor
mov
out
add
and
mov
cmpb
repnz
cltd
adc
vpaddusb
pop
into
xor
int
les
shlb
bound
add
mov
imul
cmp
pop
call
mov
scas
hlt
fcmove
or
mov
dec
inc
lea
aad
xlat
fmul
ret
out
jecxz
jne
int
cmp
leave
dec
cwtl
sbb
pop
leave
mov
hlt
mov
pop
mov
movl
add
je
push
subb
es
push
dec
add
je
lret
pop
mov
addr16
dec
add
and
push
call
xchg
gs
call
sbb
fdiv
xchg
and
push
lods
push
outsl
adc
insb
or
int3
push
movb
add
add
cs
dec
fwait
jl
rolb
pop
xlat
loope
insb
mov
dec
or
adc
inc
jmp
mov
pop
aad
push
fwait
pop
add
int3
rolb
jge
movsl
test
stos
stos
hlt
push
mov
nop
leave
jmp
xacquire
arpl
out
movsl
push
push
in
lea
and
leave
pop
xchg
paddsb
call
pop
cmp
xor
sbb
addr16
inc
cmp
cs
shrl
xor
fidivs
mov
jno
and
or
push
sbb
fwait
pop
jmp
xor
push
and
mov
inc
stc
pushf
xchg
popa
int3
mov
sbb
scas
and
xlat
push
in
lods
inc
test
cmpb
nop
out
aam
push
jae
sub
repnz
push
es
loop
jp
cmpsl
stos
leave
test
icebp
fistps
add
jmp
dec
push
dec
jle
in
clc
dec
outsb
int3
dec
sbb
push
pop
sbb
arpl
rcrl
je
jnp
or
xor
call
push
sbb
mov
hlt
out
dec
mov
add
pop
inc
cmp
push
adc
xchg
lahf
movsl
ret
sbb
inc
ret
imul
jge
sahf
mov
sar
mov
jle
in
cmp
pop
jb
dec
jge
add
sbb
dec
pusha
xor
loop
repz
rorl
jg
mov
and
rorb
jp
sbb
cmp
lahf
mov
xlat
dec
gs
dec
inc
out
leave
test
xchg
jns
imul
call
lret
pop
pop
fdivrl
adc
pop
dec
pop
rcrl
inc
push
push
insl
push
mov
inc
fwait
cmp
int
jmp
dec
push
aad
addr16
stc
jg
movsb
jmp
adc
adc
xor
mov
dec
cmp
push
incb
pop
mov
jne
dec
mov
push
sbb
int
int3
fisttpl
or
xchg
fsubrl
mov
std
ss
outsb
mov
mov
jae
lods
adc
out
rcrl
dec
or
mov
xchg
mov
push
xchg
mov
bound
jle
fsts
icebp
neg
lret
add
add
cs
lds
call
adc
mov
dec
inc
pusha
adc
rcrb
sbb
lods
repz
fwait
or
int
xor
pop
cmp
lahf
lods
mov
outsl
push
xor
ret
mov
popa
lahf
cld
mull
mov
inc
daa
pop
mov
test
stos
xor
iret
and
aam
shrl
adc
xchg
ficoml
mov
lahf
and
push
xor
call
sti
mov
jl
sbb
fildll
mov
jmp
add
sub
in
jle
repnz
lock
adc
dec
mov
sub
fwait
nop
push
mov
cltd
popf
jl
fmuls
imul
pusha
out
cmp
adc
push
test
or
movsl
adc
inc
dec
pushf
insb
mov
sub
addb
mov
xchg
sbb
mov
leave
cltd
loope
mov
cwtl
jns
fldcw
mov
push
mov
test
push
sahf
test
imul
cmp
sub
jg
sbb
push
data16
and
and
cmp
lcall
in
adc
call
adc
jmp
xor
cmc
mov
out
dec
jmp
adc
adc
push
inc
xchg
and
push
inc
adc
shrb
and
and
xor
test
call
scas
adcl
add
lret
enter
sub
in
dec
jecxz
add
xlat
mov
pop
adc
sub
mov
pop
jne
jle
nop
mov
jl
rolb
pop
and
movsb
out
mov
cld
cmc
out
push
jmp
imul
push
ljmp
xchg
stos
or
pushf
lret
enter
sub
xchg
outsl
xchg
jb
insl
in
loopne
das
imul
adc
pusha
xor
imul
cmp
mull
arpl
push
aaa
call
cltd
push
cli
test
push
jno
cmpsb
inc
mov
icebp
jb
adc
sahf
arpl
jo
jnp
lcall
sahf
inc
lcall
sub
pop
or
sub
sub
xchg
popa
sub
into
adc
sbb
loopne
xor
inc
fldenv
mov
push
sbb
lret
test
pushf
pushw
cld
pop
imul
rolb
xlat
xchg
xchg
mov
xor
sub
arpl
les
inc
vpmaxsw
out
aas
stos
fwait
pop
jb
filds
cli
cld
movsl
or
lcall
lahf
and
mov
add
jmp
repz
int
sbb
push
push
mov
mov
push
sti
push
daa
shlb
and
push
mov
pop
mov
jo
popf
dec
int3
cmp
fildll
push
jne
sub
test
and
vpmacsdd
cmpsl
mov
push
jo
sti
inc
sahf
mov
das
xchg
sbb
ss
aas
imul
xchg
je
xchg
pop
jp
push
jge
jno
xor
pop
xchg
es
push
aad
mov
bound
imul
or
ljmp
pop
add
dec
and
jg
test
and
cmp
cmpsb
mov
cmpsl
pop
sub
pop
or
push
xlat
lds
cmp
lahf
rcrb
jle
nop
add
scas
lahf
fisubl
mov
iret
sub
pop
sub
andl
movsl
push
cmp
or
pusha
xchg
xor
sti
push
pushfw
out
mov
push
nop
add
cltd
lret
enter
adc
dec
test
xorl
push
sti
lret
push
mov
shlb
insb
push
or
rol
cmp
xchg
inc
cld
and
push
daa
sarb
fwait
lods
xchg
push
xchg
mov
pop
mov
in
dec
inc
adc
je
sbb
mov
lds
adcb
xchg
cli
mov
jnp
jb
xchg
xchg
movsl
sub
not
rcrl
xlat
nop
and
movsb
push
cmp
pusha
out
mov
lock
enter
push
repnz
and
ljmp
fistps
add
jns
xor
adc
mov
mov
repnz
jp
add
push
shlb
in
fsub
or
mov
push
icebp
mov
pop
mov
inc
cmp
scas
hlt
xchg
xor
pop
and
pop
xor
mov
fwait
ret
jo
andb
ret
popf
jl
mov
hlt
pop
nop
xchg
rcrl
lock
pop
adc
pop
movsl
sahf
xchg
in
cld
loope
mov
enter
cmc
and
dec
fwait
and
into
popf
loop
fcoms
inc
jle
aaa
aad
push
sbb
lcall
fucomp
dec
fldenv
add
or
lret
push
movsb
mov
pop
test
jmp
dec
adc
mov
adc
inc
in
daa
xchg
fdiv
mov
rsqrtps
push
xor
mov
cmp
jl
push
jmp
push
in
adc
pop
push
mov
xchg
jl
test
xsha256
cmpsb
push
pop
sahf
sub
mov
data16
dec
js
inc
sahf
roll
andb
call
inc
loopne
pop
sub
fisttpll
inc
cmp
and
fisubrl
lcall
xorl
cmc
xchg
in
xor
gs
mov
leave
dec
cmp
call
or
scas
mov
flds
xor
add
incb
xchg
out
and
cld
and
daa
dec
push
js
test
add
dec
mov
scas
and
sub
test
outsb
xor
mov
xchg
cmp
rcr
out
adc
fwait
sub
inc
xchg
pop
push
in
imul
lahf
mov
je
sub
int
inc
aam
stc
fs
adc
test
mov
cmpsb
sbb
cmp
out
les
outsl
push
lret
bound
inc
jne
daa
aam
lcall
adcl
ljmp
sti
xor
push
lcall
push
and
popl
dec
and
adc
mov
adc
fmull
mov
mov
aam
popa
pusha
sbb
cltd
lods
sbb
sub
jns,pn
lds
mov
mov
jbe
in
fstpl
daa
xchg
andl
push
negl
int3
dec
sti
and
stos
mov
adc
jb
sti
test
push
sbb
lods
andb
jbe
push
outsb
xlat
xor
xchg
push
loop
or
and
push
in
jmp
and
jl
std
pop
cmp
dec
inc
cld
sbb
or
mov
call
ret
negb
pop
icebp
cmpsl
fsts
lahf
dec
xchg
push
test
in
cmpsb
cli
pusha
mov
pushf
inc
xor
or
jbe
addr16
cmpsl
hlt
aam
mov
cld
xor
iret
mov
cmp
jbe
and
repnz
pop
decl
es
stos
rcrl
fistpll
pusha
or
cmc
fnsave
mulb
mov
jmp
sub
lret
in
xor
lds
push
push
dec
push
push
mov
and
adc
push
mov
dec
pusha
test
shll
lahf
jae
xchg
pop
push
cmp
push
or
mov
xchg
test
out
xor
fndisi(8087
icebp
xchg
push
ret
xchg
aam
dec
add
mov
xchg
stc
cmp
jg
push
scas
sbbl
enter
fisubrs
mov
pop
and
mov
ss
pop
pop
cli
popa
nop
js
sbb
ret
add
mov
jne
jb
pop
push
imul
imul
jge
mov
aaa
pushl
sbb
jbe
mov
in
pop
mov
sbb
jb
push
fcoms
and
loopne
push
stos
filds
lock
adc
out
sbbb
pop
push
aam
ret
rcrl
add
outsb
loopne,pn
xchg
cmp
jne
aam
lea
repz
ja
sub
xchg
insb
pop
mov
es
loop
imul
leave
in
loop
pop
cltd
and
jae
test
addl
test
xchg
scas
mov
call
push
ret
dec
xchg
inc
adc
in
adc
pop
xchg
cld
shll
in
ss
dec
mov
insl
js
jnp
loopne
insb
mov
inc
stos
les
scas
gs
jmp
xlat
mov
sbb
xor
mov
xchg
repz
add
cmp
push
cmp
xchg
data16
cltd
push
mov
cltd
sub
dec
cwtl
push
cmp
jge
enter
dec
ss
mov
sahf
push
mov
fdivs
jmp
mov
pop
cld
mov
cmp
sahf
push
cld
mov
pop
movsb
xchg
mov
bound
xchg
cmovg
scas
pusha
mov
push
fsubrs
les
mov
mov
add
test
inc
adc
dec
jmp
jns
stos
jb
adc
negl
push
xchg
mov
jo
fstpt
scas
or
push
aam
rolb
push
xor
das
loope
push
push
sub
fmulp
cmp
aaa
dec
std
dec
test
cmp
jp
imul
add
push
lea
je
adc
push
dec
shll
cwtl
adc
cmp
cs
inc
mov
pop
fs
xor
cli
mov
ret
testl
lock
cmpsl
test
lret
xlat
test
add
sbb
xor
mov
mov
lcall
push
fwait
cmp
mov
mov
mov
jns
dec
xchg
push
cwtl
lods
das
lcall
mov
xchg
cmp
outsb
cmpsl
call
fldenv
rcrl
ffreep
addr16
imul
scas
jno
push
or
int
mov
mov
jmp
roll
test
cltd
out
fdivrl
cs
loope
sub
dec
ffreep
andb
out
fcmovb
nop
or
xlat
inc
ja
sbb
imul
insb
xchg
in
std
nop
in
mov
or
sub
scas
bound
dec
scas
cmpb
addb
dec
in
es
jp
cltd
enter
push
in
pop
cmpps
sarb
lret
loopne
mov
adc
fistpll
nop
mov
repz
stc
scas
in
jmp
arpl
addr16
popf
jbe
test
scas
mov
mov
sub
cmpsb
xchg
sbb
ja
les
lahf
aas
cmp
inc
jne
jne
addr16
test
pop
xchg
xchg
outsb
dec
xchg
or
jae
xor
popf
loop
add
inc
fistpl
jg
loop
pusha
xchg
push
xchg
cmpsl
ja
cmp
ret
or
adc
pop
mov
xor
pop
sbb
mov
ficomps
mov
mov
mov
rolb
push
sarb
inc
cmp
out
inc
cmp
loopne
mov
enter
cmc
scas
out
dec
ficomps
jns
jb
test
push
dec
push
jae
pushf
jmp
and
sbb
bound
fsubp
jl
pop
mov
push
je
repz
sub
adc
enter
imul
incb
out
arpl
xchg
mov
dec
sub
stos
adc
add
popf
mov
add
jecxz
in
mov
dec
inc
xlat
mov
dec
cli
stc
rorb
fcompl
into
ret
imul
adc
stos
adc
pusha
cld
out
dec
insb
and
pop
fldenv
jecxz
xchg
push
pop
mov
sbb
sub
inc
mov
paddsw
xchg
pop
out
xor
mov
jb
mov
fwait
les
jle
andb
add
nop
mov
pop
ja
lcall
or
mov
rorl
aaa
insb
adc
movd
loopne
sbb
adc
jns
sub
cmp
inc
dec
mov
fiadds
in
mov
in
js
fstps
pop
and
sahf
dec
mov
es
cmp
jl
dec
jecxz
pop
push
jle
sahf
jae
movsl
popa
jo
cld
stos
hlt
jl,pt
pop
pop
movsl
dec
imul
ljmp
cmp
fucomi
mov
lock
fucomi
aaa
adc
aas
loop
lods
cmp
jmp
shrb
pushf
jg
cmp
pop
push
and
add
pop
notb
xor
subl
dec
and
out
hlt
call
xchg
dec
mov
sti
repnz
xor
icebp
and
push
aaa
cwtl
out
imul
pop
cs
out
addl
add
xorl
jns
mov
or
mov
or
ja
cmp
or
pop
fsubs
adc
dec
sbb
rcrb
ret
sbb
inc
pop
push
mov
jmp
xlat
sub
shl
stc
jmp
push
mov
imul
push
insb
sbb
test
jecxz
fs
cs
sub
mov
inc
push
lahf
jmp
xor
xchg
or
adcb
mov
in
lcall
ret
cmp
xlat
sarl
test
mov
stc
std
sbbl
mov
fimuls
arpl
test
add
xor
sti
lds
cmp
sub
sahf
sub
adcb
mov
movsl
add
or
stc
hlt
imul
add
jno
mov
nop
sub
pop
mov
ljmp
push
pusha
xor
sub
js
mov
jge
pop
and
add
push
jl
icebp
loope
adc
arpl
std
push
pop
fs
cmp
gs
cmovp
mov
data16
popf
into
fwait
mov
out
pop
jb
add
orb
iret
sub
nop
ljmp
hlt
loop
cld
lock
xor
sub
lcall
rclb
or
mov
and
shll
push
aad
shlb
cli
movsl
dec
xor
xor
xchg
push
inc
aas
xor
mov
sub
mov
sarb
dec
mov
movsb
popa
mov
mov
das
lahf
orb
push
inc
xor
pushw
adc
xchg
sub
pushf
mov
xchg
pop
int3
sub
and
cmp
loope
cmp
test
pushf
scas
cmpsb
andb
repnz
std
xor
pop
shl
rcrb
push
xor
enter
xchg
testl
outsb
dec
js
lods
stos
movsl
inc
dec
repnz
and
push
add
pop
cmpb
outsb
and
sbb
aas
add
fwait
and
nopl
mov
int3
mov
mov
out
push
dec
sub
pop
into
adc
dec
xor
enter
ret
pop
push
add
cmc
and
and
subl
cld
pmaddwd
xor
inc
pop
xchg
fwait
cmp
dec
sbb
aad
insb
xchg
cmp
push
xchg
mov
dec
out
sbbb
repz
jae
jmp
negb
les
je
shl
test
call
ret
fldt
sbb
ret
shlb
xorb
ffreep
and
or
xor
xor
jmp
jge
cwtl
sbbl
mov
in
movsl
add
fidivrs
subl
jb
ljmp
adc
int3
xor
add
mov
fsubr
xor
cmp
test
dec
add
aaa
fldl
in
sbb
mov
dec
jne
inc
push
cmp
mov
dec
add
mov
je
adc
loopne
test
jo
pop
mov
repnz
iret
lahf
mov
repz
lret
sub
test
pop
xchg
cmp
aam
mov
movsb
jne
mov
stc
mov
pusha
pop
add
subb
mov
mov
jns
ja
xchg
mov
mov
sahf
mov
lahf
idiv
lahf
sub
pop
pop
push
fwait
in
test
fsubs
leave
loope
jmp
sub
xchg
mov
push
add
fdivrs
popa
cmp
cwtl
push
test
movsb
sub
sbb
icebp
sbb
mov
dec
cmp
xchg
test
xchg
scas
stos
adc
loopne
in
xchg
mov
xchg
dec
push
test
and
out
mov
and
jb
cmp
je
xchg
inc
sub
scas
jns
pushf
inc
imul
popf
pop
test
in
cmp
popf
jb
xchg
dec
sbb
fs
pop
ljmp
ret
dec
repnz
jle
cli
pop
sbb
xor
mov
sbb
mov
cmp
dec
sub
xchg
jbe
push
dec
pop
aam
aaa
outsb
adc
jbe
mov
popf
imulb
jmp
and
lcall
fiadds
into
lcall
push
pop
push
iret
xor
fstps
adc
xchg
and
lahf
mov
mov
dec
test
jnp
mov
xor
pushf
push
sub
lds
inc
or
nop
fisubrs
mov
inc
popa
subl
mov
dec
xchg
sub
sbbl
icebp
ss
divb
sub
sbb
test
scas
jmp
adcl
icebp
test
dec
push
cmp
rcrl
ud0
imull
pushfw
sar
xlat
cmp
cmp
std
addl
sti
data16
push
mov
cmp
cmp
daa
repnz
in
fisubs
ljmp
xor
lret
xor
push
std
cmc
mov
xor
insl
hlt
jle
in
pop
mov
imul
stos
scas
xor
jae
xor
into
pop
cmp
popa
pop
jnp
in
in
sbb
mov
popf
and
dec
sub
les
sbb
or
mov
jecxz
or
scas
lea
call
jno
jb
push
dec
into
subl
adc
in
inc
mov
and
inc
sub
iret
scas
imul
pop
fsubl
cmpsl
jge
in
pop
pop
shll
mov
cld
movsl
hlt
mov
pop
jecxz
add
and
sub
mov
and
add
hlt
jmp
jbe
mov
fmull
lahf
mov
lods
lods
xchg
jbe
imull
cmc
mov
mov
ss
fmul
or
enter
add
add
jno
cmp
popa
xor
add
jo
dec
push
or
mov
push
popf
int3
or
or
sbbl
sub
sbbl
into
dec
int3
icebp
or
ljmp
xchg
push
pop
outsl
dec
xchg
push
sbb
mov
jg
aas
dec
add
push
jg
inc
mov
sbb
inc
data16
inc
xchg
push
cmp
push
cmp
add
cmp
pop
jp
das
jnp
xor
je
bound
imul
cmpsl
popa
pop
loop
and
aad
push
xchg
aad
int3
enter
lea
mov
es
sti
push
xor
lret
cli
dec
push
mov
sbb
fdivl
push
jmp
inc
add
popf
out
xchg
pop
sub
pop
fs
ret
iret
fldcw
mul
jecxz
cmc
xchg
mov
mov
scas
jns
dec
and
dec
mov
lret
dec
lods
push
cmp
hlt
fcmovnb
xor
test
fists
icebp
sub
jae
lock
data16
or
subb
jb
push
out
push
xchg
pop
cmp
mov
mov
adc
lods
adc
lods
ds
loope
xchg
cmpsl
clc
xchg
pop
lds
jnp
cld
rol
dec
cli
sahf
xchg
cmp
and
pop
jo
xorb
fdivr
push
lret
pop
mov
mov
ds
jno
fiadds
or
stc
sub
xor
test
data16
add
mov
je
test
pop
arpl
mov
mov
jbe
call
and
xchg
mov
in
movsb
int
lds
jnp
mov
stc
mov
mov
push
xor
sbb
fildll
dec
fsts
sti
std
sbb
push
rclb
push
mov
js
andl
xchg
pushf
push
fcoms
lea
mov
rcr
push
int3
das
add
ss
movsl
mov
jmp
test
cmp
cmc
dec
mov
test
stos
scas
rorb
jl
inc
outsl
and
cmp
ret
inc
out
sub
push
sub
push
mov
insb
orl
insb
adc
dec
or
inc
out
scas
and
sbb
add
pushf
lret
shl
mov
add
push
rolb
push
lret
add
inc
fmull
push
sub
mov
out
lods
movsb
movl
and
xchg
in
or
pop
xor
lret
fimuls
xor
js
cmp
stos
mov
sbb
xchg
in
and
iret
movsb
in
sub
adc
cs
fildll
or
push
fs
dec
in
mov
cmp
stos
inc
xchg
lods
pop
pop
sbb
mov
in
cs
cmp
push
inc
mov
push
cwtl
nop
pushf
jns
mov
lock
cmp
scas
push
and
cs
and
in
or
pop
nop
imul
push
xchg
out
andb
addr16
and
sbb
insb
xchg
in
cmp
push
mov
ret
jl
js
or
add
adc
hlt
xlat
cwtl
in
sbb
pop
jge
fs
popa
loopne
popa
clc
mov
stos
xlat
ljmp
add
sahf
ret
push
cmp
mov
mov
repz
repnz
adc
fildl
clc
sahf
ficoml
fistps
sub
cmp
add
lds
pop
insl
fldt
ja
jne
out
in
sahf
add
movsb
fdivl
loopne
btr
nop
xchg
addr16
fnstsw
shlb
outsl
insl
jbe
cmp
je
test
dec
int
xchg
xchg
pop
mov
mov
mov
nop
add
sbb
repnz
adc
add
jb
fimull
insb
add
mov
outsl
cmp
sbb
and
pop
pop
cld
je
lret
xchg
jb
xchg
add
lods
call
sub
ljmp
stc
and
es
adc
dec
test
mov
xchg
sbb
mov
movsb
jle
notb
stos
bound
les
sub
ss
xor
jb
out
fldpi
jl
sub
addr16
sbb
mov
ret
pop
push
cmp
sbb
dec
add
mov
pop
loopne
and
stos
add
sbb
in
inc
mov
push
cmp
jmp
adc
mov
fs
push
mov
mov
js
mov
push
jae
ret
inc
adc
mov
int
andb
push
jno
sub
sbbl
push
inc
add
mul
sbb
sti
push
cmp
and
mov
mov
push
sahf
jp
jb
ss
xchg
sub
rorl
xchg
fcmove
sarb
stos
movsb
mov
iret
test
clc
data16
fcom
mov
call
in
mov
mov
adc
mov
psllw
sub
ljmp
add
add
mov
dec
lods
fwait
arpl
sbb
sbb
addl
cmp
mov
negl
in
cmp
or
sbb
cmp
or
mov
jne
inc
xchg
lea
lahf
sahf
mov
cli
push
xchg
cmc
and
mov
mov
sub
fldt
repnz
gs
inc
popa
scas
push
dec
popa
jl
out
xchg
mov
insl
push
inc
icebp
xchg
jno
sub
ret
jns
lock
addr16
mov
sbb
pop
push
adc
mov
mov
iret
sbb
adc
fdivrs
test
push
mov
add
insl
sbbb
adc
xor
and
outsl
sbb
xchg
shr
scas
sbb
mov
cmp
mov
pop
dec
imul
cmp
add
push
mov
sbb
loop
pop
rclb
jns
push
pop
lahf
div
addr16
pop
pop
mov
mov
sub
shl
pop
cwtl
add
inc
mov
test
shlb
add
sbb
iret
in
sbb
lret
jb
sbb
lcall
or
imul
fwait
jp
cld
inc
scas
lods
mov
xchg
ret
jge
std
je
cmpsb
loop
adc
lret
jecxz
out
mov
mov
dec
mov
movsb
pop
sub
iret
repnz
repnz
fldcw
and
push
dec
movsb
or
imul
dec
jge
mov
push
clc
ds
mov
das
xor
inc
mov
jmp
jo
push
mov
rcll
outsb
pusha
dec
add
mov
filds
je
xchg
jge
jo
aas
add
inc
or
mov
fdivrl
hlt
ret
into
lret
les
out
jl
int
outsb
inc
add
into
lcall
adc
mov
dec
mov
cmpsb
xchg
and
mov
push
jns
ljmp
cmpsl
loop
jns
pop
jp
out
push
mov
jecxz
push
mov
test
icebp
outsb
int3
shlb
jmp
out
loope
or
dec
sarl
popf
imul
push
test
std
push
xor
xor
dec
xor
cmp
and
imul
cltd
cmpsb
add
cmp
push
dec
mov
mov
xor
pop
lea
clc
mov
icebp
cli
dec
sbb
ljmp
movsb
push
fiadds
dec
insl
jbe
and
imul
ds
pop
ja
xchg
or
push
hlt
das
cmp
mov
or
pop
inc
and
roll
mov
xchg
inc
int3
enter
loopne
lods
iret
and
inc
cmpsb
xor
and
aam
sub
ret
jg
outsl
jge
push
sbb
xchg
mov
aad
mov
push
xchg
push
lea
outsl
push
xchg
ficompl
add
neg
adc
lret
hlt
into
lods
jp
sub
mov
cmpsb
mov
jge
fisubs
push
fwait
leave
or
xchg
fdivrl
mov
mov
pop
sbb
jnp
jno
out
leave
stos
je
ja
dec
shl
test
mov
incb
mov
jg
mov
stos
xchg
iret
jp
jae
sub
aaa
jmp
dec
mov
fcmovu
jge
mov
add
mov
arpl
jo
xor
shrl
push
test
enter
push
or
cltd
popf
insl
imul
pushf
insl
addl
fwait
push
out
rcl
data16
push
cmpsb
sub
lret
aas
mov
mov
in
mov
jno
sub
sub
movsb
adc
cmc
xchg
push
stc
xchg
dec
jno
mov
adc
sbb
adc
rolb
cltd
loopne
lea
jne
cld
or
gs
push
repnz
xchg
fisttps
data16
imul
push
movq
xchg
push
or
popa
cmp
pop
aad
fsubs
pop
pop
or
jecxz
inc
or
ret
xchg
pop
adc
pushf
adc
jmp
test
repnz
and
xchg
test
add
mov
inc
lods
jl
pop
arpl
mov
jmp
rolb
and
inc
hlt
test
push
fwait
add
mov
loopne
imul
lret
popa
ljmp
int
outsb
je
mov
and
fistl
jnp
rol
sarb
lea
cli
daa
adc
cmp
rorl
fsubl
ds
mov
pop
cmp
into
inc
mov
fwait
xor
xor
jg
clc
aam
xor
mov
dec
jmp
jg
sahf
addr16
mov
cmp
mov
dec
inc
ljmp
xor
or
inc
pusha
adc
leave
int3
lock
sbb
inc
imul
aas
cmc
rcrb
cmp
or
jle
mov
mov
cld
mov
sub
imul
in
pop
es
aam
into
addr16
test
jae
jp
sbb
aam
pop
divb
sbb
cltd
loope
add
iret
inc
cld
mov
jl
push
jne
js
xchg
mov
aam
fs
andl
iret
outsb
push
mov
mov
mov
cli
xlat
pop
xor
sbb
and
cmpsb
test
push
testb
adc
mov
outsb
xor
xchg
add
cmpsb
mov
inc
rorl
std
push
mov
fsubr
lods
xchg
stos
pop
call
and
adc
push
movsl
or
xor
and
test
pop
inc
aam
push
adc
daa
imul
and
popa
mov
and
mov
out
push
shrb
aad
addr16
push
jge
leave
addb
lds
dec
add
xchg
or
aas
lret
pusha
addb
aam
sub
stos
xchg
sbbl
je
loop
fdivs
push
into
int
inc
jle
or
push
cs
sbbb
loopne
scas
aaa
dec
fstps
stos
test
sbb
test
and
rcll
shr
scas
cltd
pop
js
adc
push
sub
rcr
cmp
push
add
adc
cmp
les
js
adc
int3
aas
lds
mov
repnz
mov
mov
fwait
push
inc
stc
ljmp
add
leave
test
fsubrl
out
subl
push
pop
popf
pop
adc
les
sub
sbb
pop
in
and
or
pushf
hlt
jge
fstl
es
mov
int
mov
and
jmp
push
pop
dec
fs
or
jmp
push
addb
sub
das
jp
or
mov
scas
ret
movsl
add
ror
ret
or
push
and
sarb
pop
mov
pop
mov
adcb
addr16
call
mov
and
popa
mov
out
xor
repz
jne
xor
mov
in
push
shll
mov
push
add
test
mov
add
or
mov
push
fbstp
jle
sub
loope
stos
imul
arpl
daa
ret
shlb
mov
ss
mov
stos
fucom
test
fldt
int3
mov
pop
cltd
inc
push
xor
push
test
mov
mov
pushf
jnp
test
nop
outsl
and
imul
inc
fnstsw
pushf
ja
in
push
and
cmpsb
clc
sub
xlat
sarb
add
in
push
and
cmp
rol
inc
repz
jl
mov
shrl
aad
sub
fadd
in
insb
sbb
adc
cltd
mov
push
fs
adc
xor
xchg
cmp
mov
shll
cld
mov
repz
inc
pop
stc
aad
jne
ret
jb
inc
scas
iret
mov
and
sbbb
rorb
cltd
mov
pop
mov
jnp
ja
cltd
sahf
ds
push
fucomp
mov
roll
push
les
mov
test
xchg
jmp
fwait
aaa
adc
cwtl
mov
mov
mov
pop
lret
add
bnd
jo
fildll
test
adc
shl
out
pop
lds
inc
ret
das
pop
and
loop
je
inc
popa
fidivrl
neg
push
push
push
mov
xlat
es
shll
inc
xchg
jle
xor
dec
add
cld
and
addb
mov
mov
dec
xchg
mov
lea
mov
push
pop
mov
xchg
sbb
test
mov
pop
mov
stos
es
in
ja
lret
mov
dec
sbb
sub
pop
jmp
inc
add
adc
pop
roll
in
mov
lret
push
sub
lock
jle
mov
loop
sub
dec
inc
and
inc
test
inc
xchg
cmpsb
pusha
int
ja
inc
sub
or
fbstp
mov
fists
lea
movq
inc
imul
pop
stos
fadds
fdivr
fimull
or
sbb
out
sbb
inc
in
call
dec
dec
lahf
movl
dec
lahf
jne
aas
int
lret
jge
rorl
lods
and
imul
mov
sbb
nop
pop
xor
or
jp
sti
out
lods
fldenv
femms
sbb
fucomi
mov
movsbw
and
arpl
pop
lds
mov
pop
mov
or
scas
pop
cmpsb
in
loope
lds
sbb
push
cmp
imulb
inc
stos
pop
sti
ja
and
out
pop
mov
cmp
cmp
icebp
xor
pop
add
in
data16
in
cmp
test
bound
push
sub
sbb
sbb
push
ljmp
push
bound
sarl
jns
fs
fildl
xchg
cmp
ret
add
sub
mov
jmp
jo
xchg
xor
jno
rcll
adc
dec
outsl
stos
sbb
out
and
inc
filds
ljmp
xchg
push
mov
push
aas
jg
adc
inc
rcrb
jnp
in
ljmp
cwtl
fists
out
loopne
in
add
cmp
aas
ljmp
pusha
icebp
cmp
pusha
cmc
mov
stc
push
jb
int3
dec
popf
pusha
dec
dec
fmulp
lret
mov
pop
movb
notl
adc
cmp
adc
lods
ljmp
push
out
ss
cmpb
je
repnz
int
xchg
out
dec
test
mov
mov
jns
sbb
fildll
loop
mov
lahf
fisubrs
push
into
out
cmpsb
push
pop
inc
in
jns
sbb
pop
lds
jecxz
insl
inc
and
push
xchg
jno
sar
fadds
cs
jge
push
es
insl
shrl
push
repnz
pop
daa
jbe
mov
xor
test
and
out
push
cld
or
in
lods
lcall
adc
jne
dec
loopne
mov
push
inc
sbb
sti
dec
add
fisttpl
mov
xchg
pop
sahf
and
cmp
addr16
mul
jnp
mov
lods
xchg
inc
js
and
ljmp
insl
iret
add
das
dec
mov
out
cltd
rcrl
add
lds
add
cmp
push
aas
mov
xchg
and
inc
or
mov
popa
sub
cli
jne
mov
rolb
fidivrl
repz
inc
sbb
mov
xor
jp
aas
mov
mov
stos
test
addr16
stos
cld
inc
xor
and
cs
mov
fstpt
jns
jne
test
imul
test
add
lahf
and
mov
sub
pop
loope
fcomps
xchg
adc
and
sbb
jge
test
filds
lret
pop
xlat
dec
loope
mov
jbe
in
xchg
push
jo
pop
pop
add
pop
sti
pop
mov
or
xor
mov
pop
cmp
push
vpxor
inc
mov
add
jns
jle
sbb
test
pusha
shlb
adc
pop
cmpl
mov
addr16
push
clc
int
imul
pop
jno
mov
jp
mov
imul
roll
mov
inc
or
leave
xchg
inc
jno
cltd
mov
nop
cwtl
inc
and
test
mov
lret
xchg
ficoml
jle
cmpsb
bnd
jp
adc
and
xchg
je
push
cmp
sahf
clc
add
pop
cmp
mov
sti
and
cmp
mov
cmp
jle
fisubs
sbb
mov
push
cmp
ficoml
icebp
aas
enter
add
aaa
jmp
xchg
int
imul
adcb
jae
inc
sub
jae
jns
enter
mov
jno
in
fwait
mov
outsl
push
inc
push
clc
fcomi
jg
pop
aam
jnp
mov
movsl
mov
adc
out
and
shrl
shrb
pop
lock
and
dec
xchg
ret
dec
jge
cld
inc
xchg
fmull
and
mov
call
inc
push
inc
jmp
mov
aam
shll
rcrb
mov
dec
dec
rcrb
xchg
add
test
or
iret
mov
enter
adc
pusha
lea
pop
cltd
insb
fs
xor
mov
call
push
push
xchg
mov
mov
add
push
add
mull
hlt
and
arpl
push
sbb
out
pop
adc
out
xchg
xor
adc
dec
sqrtps
pop
test
shl
cmc
jno
push
hlt
add
imul
push
xchg
jne
jno
sub
dec
jl
jno
sahf
sub
mov
arpl
mov
xlat
and
cmp
adc
test
scas
mov
sub
ss
stos
pusha
mov
pop
add
je
sbb
add
cli
xchg
fwait
mov
mov
aam
hlt
xlat
das
cmpsb
mov
dec
adc
mov
mov
add
pop
bound
or
push
and
or
daa
push
mov
mov
pop
mov
dec
or
fmull
mov
outsb
xor
push
loopne
int
insl
xchg
enter
test
fsts
int
push
mov
pusha
in
fildll
iret
sub
addr16
or
pop
cmp
mov
sbb
test
push
pop
int
stos
int3
pop
out
cmp
pop
lock
and
sub
aam
sbb
ja
xchg
add
rclb
mov
mov
sahf
sub
or
sbbb
and
mov
jle
movb
fistpl
jae
out
add
push
rclb
loopne
mov
clc
aaa
mov
out
push
xchg
push
rorl
dec
addr16
push
aaa
and
mov
lcall
push
pushf
ffree
rclb
push
or
xchg
data16
in
das
sbb
xchg
test
fucomp
stos
dec
jnp
adc
imul
inc
add
es
cmp
imul
push
neg
fsubs
adc
push
subb
sti
int3
ja
sub
aas
pop
jo
cmp
mov
repnz
sub
ss
lcall
inc
and
jo
pop
adc
cmp
and
mov
mov
insl
mov
insb
stc
mov
jno
and
cmpsl
mov
inc
and
ret
clc
lret
adc
pushf
xchg
fisubs
sub
pushf
rorb
and
cltd
or
mov
xorl
jecxz
dec
orb
gs
repz
pop
or
sbb
or
mov
adc
sbb
pop
adc
std
test
roll
stos
or
outsl
xchg
dec
add
or
mov
decb
fisubs
das
call
ljmp
jae
sub
shlb
pop
cmp
jle
cwtl
and
rolb
lock
clc
testb
rolb
arpl
das
jae
mov
ficoml
jnp
jmp
mov
adc
shl
jnp
pop
cmc
xchg
xchg
pop
cmp
jnp
popf
popa
lds
movsb
jecxz
repz
pop
add
pop
ret
imul
mov
adc
addr16
rolb
add
iret
and
mov
out
movsb
test
push
xor
inc
test
inc
imul
hlt
arpl
mov
lods
push
fildll
xchg
mov
pop
fmulp
inc
leave
push
ret
bound
sub
mov
stos
in
mov
jmp
or
xchg
fcmovnb
insl
pandn
sbb
popf
push
popf
jg
ret
popf
inc
jno
in
sbb
aaa
repnz
mov
push
cwtl
and
sub
sub
push
ret
cld
jmp
sub
jns
lods
dec
push
jge
mov
loop
ret
adc
rcr
or
dec
movsl
fldcw
add
mov
inc
shlb
cld
dec
lret
pop
cmc
clc
std
repz
icebp
push
sbb
jge
adc
or
jo
push
test
fcomps
adcb
daa
pop
mov
mov
fs
es
mov
mov
jb
outsl
and
mov
add
ds
popa
push
xor
sbb
test
aaa
lret
test
fxch
cmpsb
push
push
leave
shl
in
in
fdivr
mov
mov
mov
dec
loop
jns
call
das
nop
jmp
stos
add
sub
ja
sub
jnp
out
mov
pop
xchg
cmpsl
sbb
mov
xchg
and
cmpsl
adc
ret
push
jo
push
mov
or
clc
jbe
and
push
sbb
jge
mov
in
sbb
or
mov
adcl
outsl
push
push
in
nop
insb
jo
out
sti
stos
pop
add
ljmp
aas
mov
xor
mov
pushf
push
xchg
popa
mov
mov
pop
adc
sti
mov
fdivrp
cmc
adc
jae
mov
mov
lsl
mov
adc
fst
scas
or
shrl
dec
mov
jne
shll
data16
test
call
add
and
int3
push
aas
jns
push
repz
dec
push
movsl
clc
lods
es
push
aad
leave
sub
fiadds
dec
iret
mov
jb
push
cmpsl
mov
repz
andb
imulb
ret
out
in
push
push
sub
add
ss
lcall
xor
rclb
jne
dec
mov
inc
jbe
inc
movsl
mov
inc
inc
repz
xor
xchg
in
bound
aad
push
pop
xorb
push
in
into
subl
in
jle
ljmp
std
sub
mov
call
fbstp
fwait
xor
mov
daa
aaa
mov
jbe
inc
jo
xchg
out
jge
or
ja
pop
std
add
pop
test
push
mov
ss
or
and
add
dec
setb
push
push
testl
xchg
pop
xchg
dec
cmc
ss
sti
popf
mov
out
outsl
dec
mov
jmp
jns
in
jl
out
xor
rcrb
int3
mov
inc
addr16
adc
push
arpl
mov
lods
cmp
ljmp
push
scas
and
xor
loopne
xor
push
cs
cmp
adc
or
ja
inc
dec
daa
cmp
cmc
das
stc
cmp
add
sahf
popl
mov
xor
jns
dec
jo
xor
dec
icebp
insb
inc
add
xchg
or
push
push
iret
loopne
jno
add
and
adc
cmpl
das
mov
or
xor
lret
bound
je
cltd
push
adc
rcl
adc
pop
inc
pop
out
test
insb
addr16
sub
cmp
stc
pop
sub
and
pop
cmpsl
dec
fisubs
stc
jecxz
enter
fistl
push
ret
dec
mov
mov
gs
mov
jbe
pop
cmpsl
dec
push
jp
aaa
mov
aam
xor
dec
sahf
push
mov
inc
inc
das
pushf
xlat
test
std
call
loopw
adc
mov
loope
cmp
sub
mov
das
xchg
bound
or
leave
shrl
adc
mov
adc
repnz
ja
inc
in
cmp
sbb
inc
and
out
and
dec
mov
lret
cmp
movsb
dec
jle
imul
loop
data16
sbb
mov
xor
xor
pop
arpl
inc
sub
cmp
dec
addr16
mov
and
cmp
xlat
fcomip
push
into
jmp
lds
cs
pop
xchg
movsb
or
jmp
xchg
sbb
rcll
mov
xor
or
sti
push
mov
pop
push
popa
mov
and
loope
outsl
loop
jl
push
xor
cmp
and
xchg
sbb
fnstcw
xchg
in
mov
pusha
lods
jns
lds
stos
enter
jmp
or
xor
mov
sbb
dec
xchg
cmp
lret
out
dec
dec
cs
test
pop
decb
jbe
jle
scas
jmp
insl
rclb
gs
notl
jl
fwait
or
jae
icebp
test
dec
mov
roll
xchg
sub
mov
test
xchg
fsubrs
add
or
icebp
mov
xchg
or
push
cmp
fsubrl
add
iret
mov
es
jp
insl
lods
mov
pusha
push
fucomp
xor
xchg
or
xchg
sti
cwtl
jecxz
nop
sbb
mov
inc
mov
shrb
fs
xchg
mov
insl
lea
mov
sbb
mov
cmp
add
fscale
adc
ret
jl
xchg
xor
idivl
fidivrl
out
push
enter
loope
mov
int3
les
push
and
or
adc
inc
cld
ljmp
dec
dec
and
cmpsl
lock
xor
add
adc
sbb
cltd
sti
lahf
cli
or
cmp
push
cmp
lcall
mov
mov
cmpsb
imul
xchg
mov
jbe
scas
rcll
inc
add
imul
dec
je
shl
cmp
add
orb
repz
jo
adc
inc
cmp
sbb
pop
inc
fisubl
sbb
sti
pop
jb
call
mov
test
mov
sbb
mov
orb
pop
push
fildl
sbb
and
jnp
fnstsw
push
fstps
arpl
jo
push
pop
lock
xor
mov
sahf
push
cli
stos
out
and
mov
out
out
and
rcrb
push
dec
ret
mov
and
dec
in
out
push
out
pop
lds
out
dec
insl
dec
push
lret
sub
fucom
outsb
adc
shrl
scas
pop
mov
mov
out
sbb
stc
and
insb
and
jns
push
popf
or
dec
shlb
mov
lret
xchg
in
aam
cmp
dec
fucomip
sub
xchg
popl
cmpsl
mov
frstor
cld
inc
xchg
or
add
jmp
mov
xor
mov
mov
or
mov
lods
push
insb
sbbb
push
lock
xchg
xorb
je
insb
mov
push
jne
dec
and
xchg
inc
imul
shlb
sbb
aaa
jl
shlb
stc
jae
push
cmp
add
gs
test
jne
push
pusha
dec
icebp
rorb
mov
enter
dec
je
push
add
jecxz
cmp
push
fisttps
dec
scas
pop
push
cli
push
mov
cmp
bound
aaa
dec
mov
ret
lds
scas
push
sub
mov
xchg
cli
cmpsb
je
call
scas
sti
ljmp
or
outsb
shl
jae
xchg
loope
xchg
mov
filds
stos
outsl
add
push
sub
sub
pop
imul
inc
shrl
cmpsl
es
lahf
cmpb
gs
aaa
pop
outsb
sbb
sbb
cwtl
sbb
mov
andb
testb
repz
pop
and
xchg
movsb
cmc
cmp
popa
mov
cmp
mov
mov
xchg
mov
jae
stos
mov
hlt
sub
dec
lock
test
dec
mov
adc
pop
jecxz
shl
aaa
arpl
xchg
or
insb
iret
loop
jp
pop
jb
sbb
xchg
mov
fcmovbe
idivl
mov
add
lret
cli
xor
shlb
cmp
fiaddl
repz
arpl
cwtl
mov
callw
jb
inc
or
inc
in
stc
neg
dec
cli
out
add
jp
lahf
call
cltd
push
jb
insb
xchg
pop
outsl
stc
mulb
push
sbb
dec
xor
cltd
lods
jge
jb
jbe
loop
mov
test
fnstenv
xchg
cmp
gs
push
mov
mov
in
test
je
or
in
stos
jle
lcall
sub
add
push
sbb
add
popa
dec
das
out
inc
stos
adc
jge
imul
movsb
push
call
insl
loopne
fistl
sub
fs
fs
daa
insl
jle
mov
adc
xlat
cmp
mov
pushf
in
add
mulb
sarb
es
cwtl
test
pushf
xchg
mov
in
sub
fimuls
rcrb
in
addr16
sub
lock
out
push
out
pop
lret
xchg
mov
loop
cmp
pop
icebp
aad
rcrl
and
daa
notl
lret
ret
push
insl
xor
mov
in
or
fildl
sub
dec
addb
pop
stos
jbe
gs
scas
ja
mov
repnz
inc
adc
dec
and
pushf
xchg
mov
cmc
aaa
pop
leave
push
mov
test
jbe
adc
fisubrl
imul
clc
cmpl
xchg
mov
push
call
cwtl
repz
and
clc
js
testl
jbe
jae
push
addr16
mov
mov
jp
ss
mov
push
nop
cmpsl
cwtl
cmp
popa
sbb
sti
adc
loopne
cmpsl
cmp
arpl
sub
or
jge
add
mov
fwait
es
les
mov
dec
icebp
clc
mov
xlat
sbb
and
lret
jge
pushf
test
cmpsl
or
inc
push
sarb
adc
cmp
jecxz
or
loope
cmp
out
inc
xchg
sbb
pop
loop
adc
sub
mov
xchg
ret
or
clc
das
pop
push
dec
ljmp
daa
popa
adc
jb
jb
cmp
popf
adc
repz
int3
dec
gs
inc
dec
aaa
test
pop
mov
add
pop
pop
icebp
das
das
insb
and
pop
add
jae
bswap
xor
add
arpl
lcall
inc
cwtl
leave
aaa
adc
mov
ret
icebp
or
or
fsubl
mov
les
mov
pop
rol
popa
mov
jecxz
sub
ficompl
mov
loopne
adc
bound
je
or
mov
dec
sub
lcall
push
add
cmpsb
insl
jmp
add
fildl
arpl
xor
lods
loope
pop
xor
jl
xlat
adc
lret
in
das
lcall
add
xchg
gs
mov
mov
addr16
dec
adc
decb
outsb
and
lods
dec
xchg
xchg
out
adcl
push
dec
add
fwait
jb
push
nop
leave
sti
mov
aad
scas
and
sbb
mov
inc
jo
push
cs
pop
jb
jbe
aad
add
sbb
sub
aad
mov
das
lock
dec
push
arpl
adc
addr16
int
lret
pop
aam
shl
lahf
bound
nop
aaa
xchg
scas
inc
scas
jl
mov
cmp
cwtl
nop
fiadds
jae
loope
mov
add
xlat
scas
or
loopne
sbb
call
dec
jle
mov
push
bound
lock
pop
fwait
xor
jnp
adc
js
mov
jle
leave
dec
sbb
or
das
xor
jge
movb
jmp
adc
pop
sbb
les
inc
mov
jecxz
jp
test
lret
clc
fstpl
int
inc
ret
cwtl
inc
test
out
outsb
leave
sarl
cmp
mov
pop
xorb
lock
or
in
loopne
imul
roll
jb
mov
push
push
push
jle
aad
cmp
dec
adc
fwait
jg
push
inc
popa
cmpsl
sbb
xlat
shr
push
add
leave
leave
add
iret
and
mov
mov
lahf
imull
push
les
and
or
insl
cmp
sbb
pop
scas
loopne
xchg
mov
add
inc
icebp
fcompl
dec
or
pop
arpl
xor
and
add
gs
jbe
dec
dec
adc
inc
mov
int3
push
aam
add
insb
or
cmp
xor
sub
nop
mov
jle,pn
mov
sahf
lds
out
sub
mov
and
addb
stos
xor
add
into
xchg
in
adc
call
rorb
scas
enter
call
aad
add
and
popa
dec
sbb
lret
mov
into
negl
sbb
jbe
jo
or
out
fiaddl
mov
xor
out
jae
mov
cmp
clc
icebp
fildl
lock
hlt
sbb
pop
in
push
lods
sbb
ret
adc
sbb
gs
nop
pusha
inc
xchg
xlat
lods
cltd
xor
bnd
or
mov
cmp
sarb
mov
aad
add
xor
sahf
rep
mov
in
pop
xor
add
mov
int3
test
inc
xor
mov
adc
push
inc
sbb
call
subl
inc
pusha
adc
jno
jmp
sti
and
mov
inc
aam
cmpsl
jnp
mov
push
mov
cmpsb
dec
add
push
ljmp
push
xchg
xchg
mulb
sarl
lret
lods
aam
cwtl
out
loope
jecxz
gs
sbb
dec
add
mov
cwtl
mov
sub
addb
jae
xlat
jge
les
mov
sti
lock
and
rolb
shl
xor
insb
cmp
pop
fcomps
cs
mov
aas
stc
sub
test
push
test
xlat
sar
roll
pusha
mov
cltd
cmp
iret
mov
lea
je
and
fldt
ret
imul
jle
or
out
out
mov
lds
in
jp
int
test
jge
andl
dec
sbb
mov
mov
cmp
rorl
adc
out
ja
adc
adc
fldt
mov
and
aad
test
dec
repz
push
pop
mov
jmp
lret
mov
mov
aad
fsubl
add
fwait
cmpsb
test
cmp
test
cmp
push
and
outsb
pop
addr16
pop
jecxz
adc
fs
mov
daa
out
popa
and
or
mov
mov
jbe
inc
fs
jb
mov
push
mov
mov
scas
adc
sbb
or
xchg
lret
gs
inc
imul
lds
mov
std
dec
in
mov
int
xchg
adcb
jle
mov
pushf
test
lahf
dec
sti
sbb
fstl
mov
inc
sub
int3
add
mov
xchg
xlat
adc
sub
mov
rcll
and
lret
jecxz
sub
xchg
mov
out
les
scas
xor
pop
or
jg
xchg
mov
push
addr16
pop
in
dec
in
sub
add
push
push
popa
into
or
push
and
cltd
sti
mul
outsl
jp
xchg
ret
int
movsb
imul
cmpsl
xchg
mov
push
les
pop
lahf
mov
das
dec
adc
sbb
push
push
sub
adcl
pop
cmc
mov
jmp
sbb
and
sub
mov
outsl
stos
dec
add
xor
stos
lcall
jae
jge
jmp
std
push
in
inc
fidivs
or
sub
jnp
xor
push
rcrb
cmpsl
pop
jae
mov
daa
xchg
jae
arpl
jno
ja
fimuls
pop
mov
mov
out
cmp
mov
sbb
inc
ds
push
add
pusha
aas
add
add
or
loop
jne
pop
push
add
mov
divl
inc
jmp
mov
pop
rorl
dec
jo
xor
jg
dec
xorb
pop
xchg
sbb
js
xor
ret
cmc
into
xchg
xor
repz
repz
xor
lahf
cli
and
shll
pushf
xchg
in
xchg
mov
jo
sub
adc
cmp
es
fcompl
mov
mov
push
pop
pop
fcmovb
mov
stos
js
add
int
cmp
mov
repnz
xchg
aad
mov
inc
adc
mov
pop
fldcw
cmp
push
inc
bound
dec
fidivrl
loop
bound
xor
fwait
test
xchg
or
loope
and
lock
faddl
rcll
lods
or
lret
add
inc
inc
pusha
fstp
das
sbb
or
cltd
inc
out
mov
inc
cwtl
cltd
jg
incl
rclb
loope
cmpsl
insb
cmp
jecxz
and
mov
addb
xor
xchg
das
mov
ss
push
pop
popa
dec
xchg
pop
fsubr
scas
push
aas
xchg
add
mov
out
mov
orl
dec
push
repnz
das
and
xchg
or
sbb
out
sbbl
mov
mov
pop
call
les
push
jg
in
vcmpss
mov
dec
jmp
lcall
sbb
or
repnz
in
add
dec
adc
push
cmp
or
fimull
rcrl
jno
pop
add
mov
aaa
adc
or
scas
dec
mov
aam
mov
loope
push
push
mov
adc
in
cmp
add
scas
jecxz
pop
mov
std
out
pushf
fsubs
mov
mov
mov
or
jo
imul
rcll
xor
fstpl
imul
loop
rol
dec
inc
fs
ss
ret
pop
mov
jl
mov
inc
jp
test
fildl
xor
test
lods
add
mov
stc
stc
xor
jecxz
outsb
dec
cs
add
dec
xchg
sub
push
mov
insb
pop
mov
dec
push
in
sbb
pop
mov
and
je
mov
and
loop
pop
ss
dec
xchg
push
lods
movsl
sub
mov
nop
nop
sub
pop
sub
dec
stc
mov
stc
mov
dec
adc
mov
lret
jge
inc
inc
pop
inc
fidivl
bound
pop
push
dec
cmp
jl
push
cmp
xchg
test
push
push
in
scas
sahf
jg
es
sti
mov
int3
cmp
scas
jmp
test
jo
mov
mov
pop
add
out
add
xor
sbb
sbb
adc
fucom
push
shlb
insb
dec
fdivrl
lret
and
adcb
sti
insb
call
les
rcr
iret
jo
xchg
test
pop
add
add
xor
pop
inc
es
fisubs
pop
mov
cs
sahf
push
inc
fdivrl
div
aaa
gs
andb
loope
jge
xchg
shlb
dec
lahf
ficompl
fbld
fiadds
push
decb
push
add
or
outsb
inc
push
lods
fsubrl
dec
dec
das
pusha
dec
js
jbe
xor
pop
idivl
mov
insl
and
mov
mov
popa
mov
insb
test
testl
mov
jb
jns
inc
adc
pop
int3
adc
fstps
fistps
inc
xchg
shr
lea
mov
into
cmp
rorl
xchg
enter
push
and
add
scas
adc
cs
jb
inc
xchg
scas
sbb
aaa
mov
mov
jns
dec
push
mov
jae
xor
pop
iret
fnsave
ss
mov
inc
sub
scas
je
outsl
ret
sub
xor
movsl
mov
bound
push
jp
paddd
stos
hlt
gs
mov
xchg
clc
mov
cmp
mov
je
popa
sub
xchg
pop
cltd
xchg
stos
into
push
xor
daa
and
ljmp
adc
fucomi
add
testl
cmp
movsl
xor
iret
cmp
outsl
ss
fs
sub
cmpsl
mov
sub
imul
out
mov
and
fwait
lods
xor
in
je
stos
xchg
xor
loope
iret
je
vmwrite
iret
clc
sub
jle
xchg
xor
fs
inc
sahf
pusha
pusha
pop
loopne
sbb
add
lds
sbb
mov
mov
sbb
cmp
mov
in
clc
clc
jle
pop
mov
xor
in
mov
push
int
adc
xchg
ss
popa
jle
loopne
subl
fwait
inc
sbb
push
dec
cmp
insl
movb
pop
in
inc
mov
ret
clc
pop
xchg
clc
add
push
push
add
out
dec
or
xchg
jl
jb
mov
nop
pop
jge
mov
pop
cmp
shlb
sbb
out
in
jno,pt
pop
add
filds
jp
cmc
push
ret
call
jmp
cwtl
mov
sbb
jle
pop
lret
hlt
enter
addr16
push
and
loop
loop
insb
add
xor
xchg
add
stos
jns
fstl
push
mov
cs
test
mov
rorb
test
xchg
cmpsb
cltd
daa
lret
lea
xchg
in
sub
mov
aaa
je
mov
adc
cs
pop
aas
dec
loop
xor
mov
jno
popf
iret
in
lods
pop
mov
outsl
jae
mov
sub
dec
xor
jle
push
fistpl
adc
push
mov
aas
fs
repz
pop
jb
ret
adc
mov
and
mov
xor
js
pusha
enter
and
enter
adc
inc
dec
pop
pop
xchg
stos
das
in
sub
add
push
leave
int
dec
in
push
pusha
loopne
xor
nop
bound
xor
imul
xor
scas
ss
iret
std
xchg
push
test
mov
push
pop
rcr
inc
aas
mov
jecxz
add
bsf
daa
out
pop
jbe
add
sahf
inc
pop
cmp
repz
jne
adc
sub
repz
jg
dec
outsb
and
inc
lds
prefetch
mov
iret
pop
lods
inc
push
lods
mov
mov
lods
repz
leave
push
mov
gs
sub
dec
pop
lret
xor
adc
sbb
movd
call
jge
cwtl
lcall
enter
pop
insl
rolb
inc
orb
lret
add
add
jge,pt
cmpsl
cld
loopne
push
lahf
out
jnp
xlat
jmp
jns
daa
pslld
popf
sbb
mov
pop
das
jbe
push
cld
sahf
jl
push
iret
jb
mov
movsl
icebp
mov
pop
mov
jns
jl
stos
idivl
inc
jbe
fsubl
pop
cmpsl
jg
xchg
in
fisttpl
test
lea
sub
adc
mov
cmpsb
xor
push
mov
xchg
into
mov
mov
lods
test
jge
stc
sub
fisubrs
adc
pop
sub
pop
pusha
ljmp
sbbl
jp
and
push
pop
pop
idivl
es
sub
mov
mov
cmp
cmc
sti
dec
outsb
inc
pop
outsl
popa
clc
in
jl
fistpl
and
ret
fwait
sub
lret
mov
cmp
repz
mov
mov
mov
xor
sbb
ret
mov
aaa
sbb
pop
sti
xchg
out
xchg
inc
jo
outsl
push
rcrl
pop
push
testb
in
cmp
popl
test
inc
notb
jae
shll
xchg
divl
adc
mov
and
or
dec
sbb
ret
icebp
pop
mov
inc
lea
rclb
mov
xlat
out
adc
inc
call
xchg
xlat
popa
ret
cmp
pushf
xlat
les
cmc
sub
xlat
jae
andl
jbe
nop
cmp
adc
mov
jge
in
out
int3
pop
call
pop
cmp
inc
lret
fsts
mov
jmp
jg
dec
mov
ljmp
push
rclb
sbb
xchg
ss
sub
into
push
fiadds
mov
mov
aaa
ficomps
dec
movsl
imulb
adc
imul
fcmovnbe
cmp
sub
add
cli
jmp
movsb
into
les
mov
xchg
rcll
std
mov
xor
and
rclb
int
pop
div
push
xor
out
jnp
loop
adc
sbb
pusha
call
pop
js
cmp
xchg
mov
mov
adc
sahf
cmp
adc
lea
sahf
mov
inc
pop
lret
xor
outsb
call
jle
test
mov
pusha
addl
mov
nop
or
jae
roll
prefetch
subb
dec
dec
or
scas
mov
xchg
jne
and
test
pop
adc
sub
xchg
jo
ret
dec
in
or
pop
inc
xor
sbb
in
js
push
push
and
cmpsl
dec
cmp
sbb
cwtl
dec
mov
mov
mov
mov
or
lret
lret
repnz
mov
and
lcall
jb
addl
push
jnp
cwtl
or
adc
iret
pop
insl
push
scas
pushf
jle
iret
sub
inc
stc
fwait
addl
or
mov
loop
mov
fisttps
std
shl
cwtl
mov
pop
scas
cmp
add
fs
repz
gs
aad
push
into
push
or
hlt
out
rcrl
mov
add
lahf
or
and
xchg
pop
js
or
pop
imul
add
mov
mov
das
sbb
fsubrs
mov
push
push
cs
fnstcw
es
repnz
mov
arpl
sbb
xor
les
fcoms
in
pop
fwait
mov
stos
jbe
dec
mov
data16
jb
xor
dec
mov
cwtl
push
testl
dec
or
iret
loopne
push
std
outsb
in
cmpsb
dec
push
jp
lret
leave
jecxz
mov
mov
mov
push
vpshldvq
add
and
jcxz
push
loopne
out
outsl
shr
in
push
cmp
dec
ret
xlat
pop
xchg
popa
sbb
sub
dec
iret
mov
and
ret
add
jmp
ss
stos
ss
and
pop
dec
cmp
data16
pop
cwtl
loope
pop
xlat
inc
push
push
pop
jbe
adc
xor
push
inc
pop
sbb
xchg
push
pop
rcll
sar
aas
xchg
dec
push
dec
daa
mov
mov
sbb
or
mov
mov
enter
cmp
insb
or
loopne
shr
sbb
add
and
jb
pop
cmc
jl
mov
clc
loope
lahf
add
push
movsb
mov
shl
mov
xor
ficompl
lds
jg
pushf
daa
adc
adc
shrb
data16
arpl
sub
imull
xchg
mov
xor
sub
cmp
sub
xchg
push
inc
call
jmp
sub
out
sahf
dec
ficompl
mov
cmp
mov
sub
add
lods
xchg
xor
stc
sbb
mov
mov
xchg
ja
test
inc
jmp
test
mov
arpl
push
jp
xor
xchg
mov
shll
rcl
bound
adc
sub
stos
out
cs
cmp
arpl
push
std
out
push
xorl
mov
insb
and
push
out
sti
pop
xchg
sub
push
inc
push
icebp
in
mov
pop
mov
mov
cwtl
push
mov
xchg
jmp
inc
mov
dec
dec
jle
inc
lret
ret
fnstenv
mov
pop
sub
aas
shl
mov
and
jb
jo
pop
dec
xchg
andb
das
jno
repz
xor
es
repnz
mov
mov
lret
sti
lcall
add
push
fdivrs
and
mov
outsb
xlat
adc
xor
xchg
push
adc
add
repz
addr16
mov
icebp
pop
movsl
cmp
sarb
xchg
mov
sub
jb
inc
or
sbb
sub
sub
fwait
es
dec
and
or
pushf
push
notl
stos
call
mov
xor
sbb
shl
rcll
faddp
push
xchg
imul
jae
fstl
out
mov
aaa
push
push
mov
cmp
daa
ret
clc
data16
call
lret
pop
cmpsb
decl
fnstsw
outsb
pop
mov
cmp
std
mov
scas
cmp
xorb
mov
aam
or
or
sbb
push
jle
cmp
pop
fcmovnb
pop
and
lods
test
xchg
cmp
sbb
cmpsl
cmp
int3
mov
sbb
jl
in
addr16
std
data16
pop
sbb
push
jb
aas
aam
sbb
inc
lcall
sbb
loopne
sbb
daa
push
xor
leave
cmc
stos
and
fwait
testl
mov
faddl
pusha
adc
mov
and
jnp
fwait
stos
aas
adc
pop
in
adc
inc
testl
fistl
cmc
addr16
mov
test
out
fwait
mov
psraw
popf
pop
xor
fucomi
sbb
mov
sub
clc
mov
and
jnp
fwait
out
or
stos
test
sub
loop
cltd
xor
lods
loopne
lods
cmc
jp
jb
insb
inc
inc
mov
jae
out
in
test
fs
je
pop
test
pop
fwait
jae
loope
mov
pop
mov
test
ljmp
ljmp
sbb
stos
pop
mov
pop
insb
fucomp
xor
jmp
cmc
sub
cmpsl
nop
cmp
iret
lcall
pop
sbb
pop
mov
arpl
sahf
jmp
inc
adc
cltd
push
clc
jge
scas
push
test
lahf
jmp
aas
xor
jmp
mov
sbb
mov
xchg
inc
push
mov
das
fstps
pop
cli
xchg
cwtl
mov
clc
enter
cltd
sub
inc
ret
pop
xchg
xor
rorl
pusha
jae
xchg
in
jp
and
mov
mov
js
lods
xchg
adc
enter
xchg
push
jmp
mov
nop
inc
adc
dec
addr16
sbb
scas
dec
mov
fnsave
in
enter
xor
xor
ja
lret
stc
pop
mov
lret
loope
inc
push
push
and
cli
add
sub
dec
fwait
imul
loop
sbb
mov
mov
repnz
lret
push
sbb
stc
pop
aaa
sub
js
ljmp
mov
orl
loope
mov
sbb
popf
cmpsb
mov
sub
popf
inc
fimull
jo
icebp
xchg
cmp
rolb
mov
sub
fdivrs
dec
lods
fidivrs
mov
in
add
roll
ret
or
fstpt
pushf
jae
rep
inc
jo
das
mov
lret
mov
jb
popf
sbb
int
repz
cmp
popf
jecxz
jae
and
ffree
jge
dec
test
fcmove
aaa
cltd
xchg
mov
dec
lret
mov
lock
pop
adc
bound
je
sub
in
leave
add
aaa
add
hlt
in
jmp
mov
ja
repnz
and
inc
dec
pop
add
jbe
xchg
fnsave
out
or
inc
iret
inc
sarb
repnz
imul
mov
push
pop
sarb
rcr
push
jge
movsl
xor
pop
dec
lcall
imul
xor
rcrl
cmpsl
scas
cmp
xor
jne
mov
cwtl
add
xchg
sbb
dec
cmp
and
ljmp
std
les
das
xor
fbstp
lds
pop
je
enter
dec
mov
xchg
and
and
leave
inc
imul
mov
clc
loopne
lcall
movsb
xchg
sahf
push
fsub
xor
mov
jbe
fcom
and
jb
mov
jecxz
andl
adc
jmp
pop
out
in
scas
push
xchg
dec
or
mov
xor
loopew
lcall
and
xchg
xchg
pop
popf
mov
fmuls
ja
stos
fimuls
jb
pop
jne
add
xchg
sub
inc
cwtl
xor
and
idivl
sbb
sbb
test
filds
push
mov
mov
mul
push
xchg
scas
jle
and
pop
pushf
fdivrp
sbb
jne
sub
inc
xchg
addr16
aas
adc
int
leave
jl
inc
xchg
loopne
aad
idiv
out
lea
push
in
adc
push
push
sub
mov
fwait
jnp
adc
ljmp
outsl
icebp
test
push
jge
test
sbb
push
loopne
lods
adc
and
xchg
mov
dec
shll
sarb
outsl
mov
pop
lods
mov
imul
xor
or
jmp
mov
inc
mov
out
daa
cwtl
ds
xchg
mov
or
ljmp
add
stos
push
popf
add
mov
test
mov
pushf
sbb
pop
adc
xor
negb
roll
fidivs
cmp
fidivl
xor
sub
arpl
pop
hlt
cmp
sahf
ljmp
jns
pop
mov
jb
xor
jmp
fmuls
dec
mov
mov
out
xchg
push
loopne
outsb
pop
sbb
push
test
int3
or
ljmp
mov
jo
lahf
popf
mov
fidivrs
or
cmp
repnz
in
jecxz
push
xchg
add
dec
decl
and
adc
inc
xchg
pop
mov
add
push
jo
mov
mov
mov
jb
cmpl
pop
xor
mov
out
subl
fs
das
cmp
xlat
dec
jae
add
aaa
gs
pop
jmp
ret
pop
xchg
xor
pop
mov
xlat
pop
jbe
sub
mov
and
add
and
mov
dec
bound
mov
leave
push
popa
push
leave
js
sub
lea
stc
inc
sub
sub
movsl
scas
push
push
data16
adc
jnp
jg
aam
cwtl
in
jnp
jnp
bound
mull
cld
insl
push
loopne
enter
jl
out
popf
add
pop
lock
push
movsl
inc
pop
repnz
sbbl
into
push
clc
cmc
cmp
and
mov
and
repnz
out
xchg
es
cs
loop
mov
rcll
hlt
push
test
into
and
mov
xor
add
and
bound
cltd
inc
out
dec
ljmp
dec
adc
add
scas
fisttpl
xchg
mov
mov
adc
xlat
mov
pop
cmp
or
mov
mov
dec
dec
xchg
xor
or
or
jge
les
in
dec
inc
fsubs
jmp
fwait
and
insb
test
pop
jmp
fstl
call
aam
push
imul
inc
add
cwtl
pop
sub
bound
aas
cmc
movsb
out
je
shrb
js
lock
add
jle
pop
sub
xor
adc
insl
pushf
jo
stos
ud1
jns
cmp
movlps
jmp
inc
mov
sub
cld
push
dec
push
das
xchg
inc
jmp
outsb
dec
xchg
push
push
jo
das
push
roll
scas
jo
fildl
or
push
jnp
cmpsl
mov
mov
outsb
arpl
mov
es
push
pop
scas
jb
movsb
sbb
push
ret
jmp
or
jnp
aaa
in
push
pop
jbe
in
adc
imul
inc
mov
out
scas
adc
push
lods
inc
mov
scas
pop
push
pop
mov
xchg
mov
out
divb
cmpsb
in
int3
call
aas
mov
dec
mov
popf
mov
pop
bound
mov
pop
int
jmp
mov
and
rep
jecxz
scas
xchg
or
std
daa
sbb
add
dec
mov
fnsave
sar
stos
pop
cld
pop
or
adc
fdivrs
inc
jno
adc
and
mov
mov
cmp
dec
loopne
add
fldcw
fidivl
cmpsl
xor
xchg
das
adc
cmpsl
bound
icebp
sub
loope
inc
jmp
sti
cmp
stos
ds
xor
jbe
cmp
or
shll
xchg
mov
enter
shlb
and
arpl
xchg
jne
inc
jle
add
cmp
sbb
add
push
out
sbb
jo
sbb
in
mov
ljmp
mov
sbb
ja
data16
popf
mov
lret
iret
mov
push
jge
sub
test
xor
jnp
mov
es
sub
out
inc
out
icebp
stc
jno
dec
int3
cltd
je
pop
and
js
aam
scas
or
shll
xor
jns
cs
mov
imul
mov
mov
fs
mov
xchg
inc
pop
jp
mov
xchg
lods
daa
pop
sbb
xchg
orl
and
push
int
pop
ds
mov
dec
mov
outsb
and
push
xchg
lahf
jns
out
lret
xor
pop
adc
push
shlb
pop
iret
xchg
cli
ror
fstps
punpckhdq
pusha
xchg
mov
test
adc
cli
mov
je
mov
cmp
mov
call
mov
test
imul
add
cs
add
fs
ljmp
cmp
mov
xor
pop
lret
insb
in
pop
and
test
mov
or
inc
rcrb
pop
test
int
xlat
mov
pushl
mov
cmp
push
bound
fsubl
pop
jmp
xor
ret
jl
repnz
ds
cwtl
mov
lock
popa
sub
jle
mov
popa
mov
sub
cmp
mov
mov
mov
in
sbb
repnz
mov
insb
aaa
movsl
in
fnsave
xchg
movsb
mov
inc
mov
shl
adc
cmpsb
sbb
push
pop
aad
sub
xor
dec
scas
addr16
xor
loope
dec
adc
add
jecxz
or
xchg
sbb
fsubrs
mov
xor
aas
jnp
int3
mov
dec
and
mov
leave
imul
fsubrl
test
and
lahf
jmp
jmp
mov
enter
pop
inc
jae
cmp
push
cmp
xlat
bnd
lret
cmpb
push
cmp
jae
pop
nop
jbe
lcall
mov
es
mov
pop
dec
adc
sbb
push
loop
mov
dec
dec
and
insl
push
adc
xor
inc
add
sbb
sbb
lret
test
pop
mov
inc
xor
movsl
outsb
xor
push
inc
mov
lret
sbb
mov
data16
xchg
xor
inc
testl
pop
jg
insl
add
aam
jge
push
xor
adc
mov
xlat
inc
inc
push
mov
cwtl
push
dec
in
sbb
add
push
xchg
pop
pop
loopne
add
stos
stc
push
jecxz
sbb
xor
pop
adc
int3
mov
nop
jmp
xor
testl
rclb
loope
jne
adc
mov
lret
sbb
int3
lea
fstl
and
jnp
gs
dec
out
sub
xchg
test
pop
cmc
daa
jl
lcall
popa
mov
fs
hlt
fwait
mov
insl
xchg
fcoml
addl
jae
lods
mov
jmp
pop
mov
lcall
xchg
mov
push
jno
mov
and
mov
rcl
add
shll
jbe
mov
fnstcw
adc
sarl
push
sarb
jle
sahf
mov
pop
fdivr
bound
icebp
addr16
loop
cwtl
jge
jl
cwtl
fimuls
divb
das
xor
stos
popa
pop
movsb
cmpl
out
sar
xor
imul
push
loopne
jmp
sub
mov
jle
cld
cmpsl
test
inc
pushf
adc
dec
test
mov
fidivs
push
ret
push
sbb
icebp
inc
and
fsts
cltd
mov
and
dec
imul
mull
pop
sti
cld
mov
or
in
cld
fstpt
pop
adc
ljmp
cmpl
lret
jl
mov
dec
jl
sbb
inc
push
cmpsl
xchg
pop
mov
cmpsb
inc
push
xor
sbb
out
xchg
or
xchg
mov
shrl
shll
shll
xor
cmpb
ja
inc
lahf
popf
pop
fs
xchg
rep
or
test
movsb
jp
dec
lods
cmp
test
popa
dec
xchg
mov
rol
stc
push
daa
std
pop
adc
fs
loop
stos
sub
add
stc
mov
sub
in
ss
lods
push
ret
sbb
int3
into
push
test
fmuls
inc
or
xor
lret
jmp
subb
mov
add
ss
jno
mov
adc
divl
cli
mov
inc
sahf
dec
lea
push
jnp
xor
scas
mov
inc
dec
fisubs
sub
cwtl
adc
dec
jmp
adc
dec
xchg
and
and
out
in
pop
xlat
test
movsl
fistl
shll
pop
add
push
adc
int3
pop
dec
out
add
mov
popa
jg
xor
dec
inc
fwait
adc
inc
scas
jg
mov
movsl
insb
mov
addr16
push
xchg
mov
add
pop
test
and
test
cs
inc
inc
cs
popa
aas
push
and
scas
icebp
inc
arpl
test
int3
inc
leave
mov
mov
lds
in
mov
jbe
pop
cmpsl
push
jmp
jno
bound
mov
or
sarl
mov
push
xor
mov
ret
aas
mov
sub
lcall
or
dec
xlat
daa
mov
sbb
cmp
hlt
daa
push
mov
cmc
cmp
out
push
shl
ret
xchg
jp
fstp
cmp
lcall
loopne
test
bound
dec
cwtl
loop
mov
and
mov
mov
stos
sbb
rcll
push
pusha
loop
inc
cmc
out
arpl
fs
movsl
loope
jo
nop
in
stos
cmpsl
add
mov
and
add
cmp
mov
add
imul
rol
pop
jl
cmp
add
ljmp
or
mov
pop
dec
popf
pusha
iret
add
sub
shlb
xchg
cld
sbb
in
jmp
imul
sub
and
cmc
insl
nop
sbb
push
gs
repnz
mov
lcall
push
xor
xchg
das
in
mov
cwtl
out
adc
pop
inc
push
stos
sub
and
xor
lods
in
pop
mov
jecxz
nop
jl
mov
insb
xlat
xor
jnp
ds
repnz
add
lods
jno
dec
nop
sub
adc
jge
sub
xchg
cmc
in
pop
lods
lea
insb
adc
jo
mov
test
addr16
sub
mov
adc
ror
stos
lret
add
add
cli
mov
repz
jmp
test
xchg
out
sbb
cmp
xor
das
pop
sub
sub
jbe
sub
mov
pop
add
iret
aam
aam
xchg
cwtl
sub
cwtl
jnp
or
shll
xlat
shlb
push
or
testl
or
push
cmc
sub
movsl
sbb
mov
leave
mov
cltd
jb
into
pop
adc
dec
xchg
cmc
jg
lret
xor
out
push
fcmovnbe
cltd
pushf
out
test
fsubrp
and
cmpsl
or
fbld
add
iret
inc
fs
sub
dec
jge
xchg
or
hlt
movsl
lret
mov
and
mov
dec
popf
inc
daa
xchg
xchg
xlat
cltd
cmp
add
xchg
mov
pop
sub
dec
xchg
push
hlt
xchg
pop
jae
cmc
addb
sub
cli
negl
idivb
fnstcw
mov
mov
sub
stos
mov
xchg
push
mov
js
add
ret
and
cmp
mov
sub
testl
push
push
and
mov
mov
xlat
xor
lcall
pop
mov
imul
sub
int3
daa
dec
inc
jl
fimuls
sub
or
ds
add
cltd
dec
ret
mov
pop
shlb
jno
je
aam
int
js
cmp
adc
jne
adc
lods
cmp
add
test
stos
das
mov
lcall
and
arpl
push
jae
dec
jo
lock
shlb
data16
push
add
sub
mov
sub
das
test
out
xlat
int3
loope
pushf
fsubrs
stos
popf
scas
das
mov
jmp
or
push
push
ss
jo
shrb
xchg
mov
add
xchg
mov
push
je
dec
mov
mov
and
mov
dec
loopne
arpl
jle
int3
gs
mov
xchg
dec
sub
or
jecxz
sbb
lret
adc
aad
sti
add
jo
les
mov
ret
das
mov
insb
test
sub
stos
lcall
pop
mov
sbb
mov
xor
loopne
fistpl
cmpsl
sbb
jno,pn
and
push
aaa
scas
pop
lods
inc
xor
xor
or
push
inc
dec
jnp
fiaddl
jg
xchg
pop
leave
adc
fnstenv
jb
push
mov
lret
scas
std
sbb
das
adc
push
dec
fldenv
daa
xchg
in
jbe
mov
and
mov
dec
lret
or
push
into
inc
sbb
pop
idiv
mov
xor
les
sbb
mov
adc
push
pop
sbbb
outsb
icebp
mov
les
jae
jbe
cmp
mov
xor
lock
sub
orl
xor
sbb
fsts
popf
xchg
and
into
jae
pop
jl
jne,pn
enter
rorb
outsb
ljmp
xchg
sti
les
ret
adc
stc
fmuls
mov
jb
movsb
loopne
mov
inc
lret
in
push
or
push
sarl
cmp
mov
jne
imulb
add
xchg
outsl
push
cmp
dec
sbb
popf
or
addb
iret
add
and
ficoml
mov
pop
jl
push
test
fmull
das
popf
ljmp
cmpb
jno
and
mov
inc
test
jg
test
xchg
or
and
lret
mov
add
sbb
sarb
rcl
nop
in
push
fs
sbb
xchg
xchg
jle
fldt
imul
pop
pusha
push
sub
lods
dec
out
cmp
fildll
mov
xchg
pusha
divl
xor
test
loope
xor
bnd
push
sub
mov
aaa
movsb
adc
push
jns
mov
mov
mov
fcmovnbe
dec
xor
or
mov
mov
fdivrp
movsl
mov
mov
ss
jp
xchg
mov
adc
jmp
push
pop
jae
rolb
push
mov
stos
iret
aam
aam
mov
jle
in
inc
in
outsl
pop
outsb
mov
mov
mov
es
mov
loopne
xchg
into
mov
and
daa
adc
out
in
push
dec
cmp
and
mov
xchg
cmc
and
jg
orb
dec
or
push
dec
jns
js
dec
add
push
jbe
mov
imul
jle
ss
ljmp
icebp
cwtl
dec
add
push
mov
mov
inc
dec
out
or
and
imul
pop
push
out
dec
or
filds
xchg
out
movsl
and
test
sub
fwait
inc
rcl
pushf
dec
ljmp
cmp
dec
cmp
mov
mov
insl
xor
pushf
xchg
fdivl
fisttpll
push
xchg
jb
inc
lret
nop
lea
xchg
dec
adc
fldcw
inc
mov
sub
add
out
push
pushf
sbb
mov
or
mov
ds
lock
add
mov
fistpl
ss
fwait
adc
test
lret
lods
jns
mov
lea
mull
push
outsl
add
cli
or
mov
mov
inc
aad
ja
sub
inc
or
inc
fidivl
ljmp
pop
jo
sbb
sti
cmpsb
rol
ret
ret
outsb
shlb
hlt
inc
inc
mov
dec
rorb
xchg
insb
mov
jmp
sbb
sbb
xor
add
mov
pop
mov
and
jnp
js
sbb
pop
icebp
xlat
les
andb
int
pop
in
aaa
sbb
cs
int
icebp
xor
ds
lods
mov
mov
or
mov
xor
arpl
xchg
call
ss
loop
dec
inc
sub
mov
outsl
xor
push
daa
cmp
jg
adc
mov
xchg
mov
xchg
icebp
dec
jns
ret
push
mov
or
es
daa
js
dec
int3
lcall
stos
inc
fdivl
sbb
xlat
add
add
add
andl
or
and
test
xor
leave
jae
fs
sbb
ficomps
or
popa
faddl
les
int3
stos
loop
add
fucomip
dec
movnti
push
and
or
stos
jmp
movsl
sti
in
sub
test
push
jno
sbb
fdivl
test
xor
mov
sub
jp
aas
icebp
loope
push
cmp
sti
insl
lcall
cmc
lret
fldt
jg
mov
mov
add
and
xchg
sbb
pop
mov
xchg
pop
push
cmp
clc
inc
pop
push
push
cmp
xor
pusha
lods
mov
outsb
pop
cld
xor
cltd
mov
data16
sbb
mov
aad
lahf
jp
xor
dec
mov
jp
cmpsl
scas
stos
push
and
xor
cmpsb
movsl
std
jae
fcomp
mov
in
sub
cmpsb
push
repz
vcvttss2si
repz
xor
mov
fdivl
jmp
xchg
cli
push
leave
in
shl
lock
xor
sahf
dec
sarl
push
dec
fldcw
shlb
cmp
sbb
orl
arpl
lcall
cmc
sahf
lahf
repz
ljmp
ds
jp
inc
jmp
lret
mov
push
fidivs
sub
scas
loop
ror
and
aam
xchg
mov
sar
jne
pop
lock
iret
dec
cs
enter
lret
aam
add
jp
or
cmc
into
je
xchg
lret
pop
fisubl
lods
cmp
pop
ja
ss
imul
or
sub
mov
outsb
movsl
mov
mov
test
pusha
lsl
add
mov
xchg
lcall
cmc
mov
sahf
jecxz
movsl
pop
xor
lods
mov
lock
xor
outsl
cltd
sbb
aaa
cltd
mov
pop
dec
fdivrl
in
leave
lret
fdivl
mov
lret
mov
fcoml
push
sub
xor
outsl
xor
test
xchg
iret
imull
mov
adc
mov
arpl
cmp
inc
jbe
dec
std
sub
sub
xor
mov
pop
fstl
cmc
sub
adc
pop
push
or
fld
daa
cmpsb
mov
cs
cmp
mov
inc
cli
mov
add
pop
cwtl
lds
pop
ret
iret
xlat
cmp
push
mov
testl
movsb
stos
lret
in
les
out
sub
xchg
sub
push
push
icebp
add
push
sbb
mov
xchg
cmpsb
loope
sub
xchg
aas
loopne
jae
cmp
or
in
mov
and
movsl
add
mov
fisubrs
fwait
in
dec
or
xor
mov
dec
lcall
xorb
or
push
lahf
mov
movsl
ds
inc
test
sub
stos
jl
push
out
and
xor
mov
jp
mov
mov
mov
dec
movsl
in
push
lds
mov
es
pop
jg
lret
ror
insb
adc
test
add
push
adc
in
ret
lods
rol
pop
popa
ss
pushf
pop
insl
lods
jo
mov
lock
addb
ja
push
mov
pusha
jmp
push
fbstp
adc
xor
nop
jmp
or
dec
adc
orl
hlt
into
cmp
or
aam
jecxz
aas
xchg
jne
sub
rorl
adc
aad
xor
or
jle
sbb
pop
mov
push
pop
cltd
rolb
std
cltd
push
inc
dec
mov
arpl
mov
pop
call
mov
pop
sbb
dec
jg
add
mov
sar
lret
cli
mov
add
iret
dec
mov
movl
mov
mov
fcoml
daa
sti
xchg
mov
xchg
push
xchg
cmpsb
int
lods
add
xor
mov
int
popf
loop
lret
xchg
dec
push
nop
les
fmuls
cmpsl
lcall
shrl
mov
mov
dec
out
cwtl
pop
sbb
cmp
cmp
js
insl
stos
add
fstpl
in
aaa
mov
xchg
pop
icebp
clc
jno
pop
and
icebp
xchg
push
xor
movsb
ret
add
retw
fidivrl
imull
ja
mov
push
push
and
cwtl
iret
aaa
fstp
lcall
lahf
lret
lods
mov
sub
lods
hlt
adc
push
pop
sub
daa
movsb
or
jo
repz
scas
sti
inc
mov
aas
std
xchg
inc
adc
ds
ss
xchg
mov
pop
lahf
mulb
repnz
loope
xorl
dec
mov
idiv
mov
dec
or
lock
xlat
push
stc
in
outsl
cmp
dec
push
movsl
lea
sub
jg
push
mov
pop
xlat
pusha
flds
push
pop
sti
sbb
mov
adc
cmpsb
mov
ss
add
outsl
arpl
mov
cmp
rcr
hlt
cmp
decb
inc
cmc
mov
stos
sbb
in
hlt
sahf
fcoms
cwtl
mov
dec
ljmp
ljmp
sbb
outsl
mov
test
push
xor
fcomi
push
sti
cmpsl
mov
repz
ljmp
addr16
jo
loop
xchg
cmp
pop
mov
fwait
enter
mov
pop
pop
jp
nop
mov
mov
cli
fcomps
out
cwtl
jle
enter
push
jmp
inc
mov
test
repz
mov
arpl
sub
out
sahf
jg
pop
aad
rcr
and
fdivs
js
mov
inc
cmp
popf
inc
adc
xor
mov
popa
enter
sub
call
mov
je
ja
sahf
push
mov
and
add
lret
push
add
sbb
dec
into
mov
shll
mov
push
sahf
sbb
push
xor
mov
repnz
nop
add
adc
mov
aaa
adc
xor
mov
xor
ds
imul
dec
xchg
lret
mov
push
in
rcr
cld
daa
adc
xor
mov
or
or
sub
push
rcll
jne
aas
lahf
addr16
outsb
push
mov
imul
sub
push
sbbb
xor
outsl
lahf
push
fiaddl
adc
lcall
sti
sarl
dec
mov
and
pop
sbb
sbb
sub
ds
or
sbb
imul
imul
mov
testl
adc
add
popf
sub
pop
add
lds
pop
icebp
call
pop
mov
inc
addr16
insl
dec
clc
pop
mov
xchg
pop
pop
jge
and
pop
inc
xchg
push
mov
int3
sub
loop
mov
dec
rcrl
push
sub
adc
add
xchg
aas
jp
dec
sub
stos
pop
push
ds
mov
ja
dec
int
fmuls
xor
test
xchg
xor
out
out
sahf
add
xchg
jns
add
pop
out
adc
mov
pop
stc
into
adc
lods
loope
dec
imul
inc
jle
aas
lahf
fsubrs
push
push
sti
inc
mov
es
lds
shl
gs
cmpsb
sbb
push
ret
pop
gs
and
orb
mov
test
and
adc
or
fsubs
pop
jecxz
push
pop
repz
out
imul
mov
cltd
cmpsl
out
aaa
cmpsb
cmp
rcrl
sti
and
iret
mov
and
and
sub
and
pop
mov
push
inc
sbb
or
lods
sbb
inc
mov
mov
xor
push
push
int3
add
xchg
push
mov
popf
sub
js
xchg
outsl
addr16
cmp
hlt
aam
xorb
jmp
xor
cmpsb
add
pop
cmp
enter
loop
xchg
fiadds
cwtl
pop
int
xlat
sahf
push
pop
jle
mov
repz
scas
hlt
adc
popf
mov
or
sar
and
pop
dec
fsubrs
mov
addb
fs
adcl
dec
fistps
dec
or
mov
mov
iret
aas
push
add
pop
ss
pop
jg
mov
jecxz
js
neg
xlat
mov
arpl
ror
xchg
inc
jnp
xchg
insb
sbb
mov
sbb
test
mov
push
fbstp
pop
mov
inc
ljmp
jle
ja
mov
xor
out
imul
ret
mov
lahf
fwait
addr16
lds
rcl
call
mov
push
xor
push
mov
push
fidivrl
xor
int3
mov
jns
lock
mov
mov
rol
out
push
inc
inc
mov
fildl
add
sbb
outsl
xor
nop
movsl
cmp
sub
fsubrs
pop
icebp
add
jmp
daa
iret
leave
scas
fstl
mov
sbb
scas
xorl
dec
pop
fdiv
out
sub
xor
mov
push
adc
mov
jp
int
and
xor
out
xchg
xlat
das
in
push
adc
pushl
cmp
sahf
jmp
adc
enter
and
test
pop
aam
dec
ret
mov
and
ds
pop
insb
mov
popl
sub
push
mov
inc
cltd
adc
cmc
movsl
mov
mov
std
add
add
lea
testb
bound
jecxz
imul
mov
les
or
mov
xor
fidivrs
iret
sbb
mov
enter
cmp
add
ror
mov
cmp
jnp
jge
sbbl
adc
mull
mov
mov
sbb
divb
shll
stc
sub
lods
negl
ds
mov
jae
enter
xchg
and
add
sahf
inc
pop
insb
or
xor
bound
into
fiaddl
and
test
imul
int
and
adc
jns
cmp
mov
sbb
jle
xchg
mov
sbb
push
pop
icebp
pop
imul
lock
or
dec
enter
popa
sub
ret
rcr
mov
mov
and
sub
call
xchg
pop
hlt
adc
lods
bound
in
xor
mov
or
or
xor
cmp
test
push
pop
test
push
mov
cmp
ficoml
cs
ficompl
pop
cwtl
xchg
daa
js
or
or
sub
cmc
loop
push
sti
push
fucomip
shrb
jecxz
dec
cmp
xchg
fistps
adc
cmp
nop
rolb
gs
dec
jg
stos
jl
pop
sub
inc
loope
imul
sbb
mov
out
xchg
stos
mov
jmp
cwtl
mov
shll
mov
bound
faddp
movsb
xchg
pop
cmp
ror
cmpsb
mov
mov
fsubs
shrb
mov
dec
push
jno
cltd
sub
cmc
lahf
imul
push
test
mov
out
mov
or
jle
scas
inc
pop
scas
push
test
sub
dec
or
mov
sub
mov
xlat
sub
out
xchg
sub
pushf
or
pop
ljmp
sub
in
push
shll
inc
jle
and
mov
xor
imul
out
cltd
xlat
sbb
xchg
dec
inc
pop
jo
or
xchg
ror
push
lret
sti
push
mov
or
in
jb
ljmp
js
mov
mov
inc
lcall
loope
fldcw
je
mov
loopne
stos
popa
pop
jo
xor
dec
lods
imul
mov
insl
sarb
mov
notb
or
lret
adc
mov
das
aad
gs
add
mov
test
mov
cld
notb
incl
scas
fs
inc
jmp
call
jp
pop
pop
das
cld
cmp
xor
jb
xchg
js
push
test
les
fcmovnbe
outsb
int3
std
jmp
call
sti
outsb
cmc
cmpb
ja
mov
mov
scas
sbb
fdivrl
and
stc
fcomps
cmp
test
push
dec
or
push
mov
in
dec
jp
sbb
loop
xchg
pushf
arpl
jne
xchg
mov
cld
mov
pushf
dec
add
mov
sub
in
movsl
mov
mov
cmpsb
sub
add
or
dec
cwtl
loope
xor
shrb
dec
cmc
pop
pop
cmpsb
shlb
outsb
mov
leave
push
cld
cmc
lds
rcrl
cwtl
addr16
mov
inc
test
add
push
sbb
aaa
rorl
xchg
lods
insb
outsl
cmpsb
adc
xchg
pop
fstpl
sub
or
cmp
into
dec
dec
mov
or
mov
adc
jb
and
push
dec
sahf
aas
jb
daa
sub
xchg
dec
xchg
jb
mov
dec
imul
std
insb
test
mov
sub
lret
movsb
jmp
or
rolb
sub
iret
xchg
clc
inc
jge
sahf
inc
mov
inc
sub
test
dec
mov
sbb
sub
and
xor
mov
pop
xor
xor
lcallw
loopne
test
out
push
cwtl
lahf
xor
mov
mov
dec
sub
push
lods
cmp
lret
clc
lcall
pop
inc
jl
call
inc
cwtl
ds
stos
inc
cmc
fbstp
push
dec
jge
mov
iret
roll
cmc
push
cli
xchg
lret
add
pop
rcrb
push
mov
mov
lahf
and
inc
fcmovnb
out
hlt
and
out
aaa
rorl
divb
mov
inc
jae
xorl
test
sbb
jmp
push
dec
mull
repnz
lret
outsl
in
ss
cld
imulb
sahf
addr16
test
ja
subb
rorb
add
pop
adc
lds
cwtl
sub
mov
cmp
hlt
jno
xor
je
fcoml
jecxz
jb
ret
jo
in
aam
loop
or
lcall
jge
fxtract
lds
ljmp
cmp
std
int
cmp
adc
ss
ret
pop
in
out
shlb
sti
or
add
push
lock
dec
out
repnz
addr16
jae
int3
call
movsl
popa
push
pop
fisttpl
pop
push
into
addr16
data16
pop
out
pushf
daa
push
sub
inc
adc
jp
fs
and
loope
and
adc
jbe
lea
iret
loopne
gs
mov
mul
xlat
loop
mov
inc
test
ja
aad
mov
fidivs
loop
sbb
dec
jp
and
test
push
inc
ret
sub
or
add
push
xor
outsb
cli
es
or
xor
negb
lock
xor
je
js
cs
cmp
push
jbe
subl
push
xor
jo
in
cmc
jmp
jmp
cmpsl
cmp
mov
je
sub
sbb
in
ret
pop
mov
pop
xchg
imul
cwtl
shlb
pop
mov
ljmp
into
adc
fmuls
enter
fsubrp
xor
inc
add
sbb
cmp
popa
fndisi(8087
mov
loope
in
pop
cmp
stc
dec
xor
cmpsl
adc
jl
mov
loopne
jne
imul
cmp
add
stos
mov
pminub
pop
cmc
xor
lret
stc
stos
fxch
in
add
pop
jo
int
cwtl
out
mov
adc
cmp
sub
pop
add
mov
in
pop
mov
add
in
pop
push
xor
pop
in
inc
pop
pop
xchg
adc
and
js
movsl
mov
test
cltd
mov
cmpl
rorl
dec
movsb
sbb
jnp
mov
lods
or
dec
pop
cmp
dec
jl
rol
or
cmp
call
xchg
jae
sbb
out
int
jno
sbb
imul
mov
and
call
sti
sbb
inc
addr16
push
call
scas
or
icebp
inc
icebp
push
rcrl
fnstenv
sahf
pop
cmp
sub
add
lret
push
jnp
xor
sub
xor
xchg
fists
mov
cli
ss
pop
jecxz
pop
or
mov
shrl
mov
and
sbb
or
jmp
outsb
jmp
sub
mov
adc
leave
sbb
jae
jmp
divl
or
dec
pop
and
out
bound
xor
jp
pop
ret
pop
movsl
clc
jle
and
bound
mov
xchg
jp
xchg
fisttps
addl
dec
mov
mov
jo
pop
push
mov
xor
add
jl
mov
mov
insl
das
pop
jle
xchg
push
push
dec
push
mov
xor
dec
imul
push
enter
push
mov
movsl
adc
or
aam
push
hlt
sbb
xor
leave
or
stos
mov
mov
cmp
mov
loopne
xlat
je
mov
inc
out
sub
cmp
dec
shl
mov
push
cmp
cmp
jnp
loopne
cmp
pusha
fdivrl
sbb
movsw
sahf
shlb
sub
adc
mov
sbbl
sub
mov
mov
and
jbe
inc
out
outsl
addr16
lds
lret
loop
adc
push
aam
adc
ds
xchg
or
fbld
repnz
mov
ret
movsb
repnz
shrl
cmp
inc
dec
jno
xchg
sbb
pop
outsl
iret
pop
insb
and
aam
lret
cmp
and
mov
repz
lret
add
mov
push
in
clc
jp
pop
pop
jnp
stc
sarb
push
xchg
push
dec
xchg
mov
popa
jecxz
test
cmp
lcall
sub
sbb
dec
stos
dec
stc
pop
lds
and
pop
fists
sbb
xchg
dec
adc
leave
lock
cld
push
mov
push
cmp
movl
mov
popa
shlb
push
loopne
push
mov
icebp
inc
mov
lods
into
or
lock
sbb
dec
nop
test
ficoms
cmp
or
stc
lods
movsl
enter
mov
hlt
mov
xchg
dec
push
lds
push
pusha
fsubrs
scas
adc
mov
cmp
and
xor
xor
aaa
jno
or
adc
xor
repnz
popf
stos
imul
sbb
or
outsb
xlat
in
clc
mov
fbstp
enter
sbb
cmp
mov
pop
push
xchg
ret
movsl
pusha
or
rcrb
mov
pusha
lea
mov
add
mov
inc
sar
icebp
mov
and
icebp
or
pop
adc
adc
mov
fsubl
nop
arpl
jle
js
int3
inc
hlt
xor
fdivrs
outsl
add
flds
cmp
or
repnz
cmpsl
movsb
mov
cmp
sbb
xor
ret
jnp
sar
pop
enter
shlb
jnp
ret
in
imul
ja
jb
dec
outsb
test
sub
test
add
insb
xchg
adc
mov
in
out
xchg
aas
jnp
push
in
inc
addr16
enter
out
pop
sti
dec
push
sbb
pushf
push
in
mov
jnp
cmpsl
pop
lahf
fiaddl
sbb
lock
jecxz
es
pop
inc
mov
icebp
push
aas
insl
jae
adcb
mov
cmpsl
jns
pop
and
std
iret
je
and
xchg
jbe
adc
stos
or
xchg
jp
les
test
pop
jmp
repz
sahf
push
jecxz
and
jge
cltd
sub
imul
inc
mov
clc
xchg
jbe
pop
addr16
cmpsb
ds
mov
in
xchg
loop
cld
pop
sahf
cmp
sbb
pop
jle
aam
or
mov
iret
push
xchg
lahf
add
in
pop
xchg
push
mov
test
aaa
incb
mov
in
adc
mov
sub
hlt
insb
rcrb
fwait
xchg
jle
adc
adc
fs
push
sahf
aas
int
adc
lods
fistpl
push
jae
adc
or
add
or
inc
mov
fwait
pop
add
cmp
sub
cmp
ja
jmp
cs
and
cmp
adc
inc
cld
movsl
negl
jl
arpl
push
mov
and
inc
xchg
arpl
ret
xor
addr16
push
hlt
cmp
jmp
or
adc
rcrl
call
pusha
cmc
std
add
test
clc
nop
dec
jl
into
or
add
or
or
cld
pop
shll
pop
pop
sbb
sti
inc
pop
and
loopne
lahf
ss
loop
lods
cltd
mov
add
push
xchg
dec
cmp
cli
xchg
adc
push
or
pop
les
sbb
or
push
push
ja
adc
jge
cmp
sbb
fwait
cmpsl
mov
into
or
imul
mov
add
mov
fcomp
mov
or
xchg
or
outsb
divb
into
repz
subl
in
fstps
fs
jo
divl
push
push
scas
data16
test
cmp
cltd
push
add
push
add
ja
push
sbb
mov
pop
shl
pop
insl
stc
cmpsb
adc
jl
inc
sbb
faddl
lret
aas
cltd
inc
xchg
fwait
lods
xchg
daa
sahf
fwait
std
popf
pop
xchg
dec
dec
xor
mov
int3
test
add
je
repz
jl
pop
pop
imul
cmp
out
hlt
cmp
add
and
mov
test
hlt
js
jecxz
sbb
and
push
jle
add
cmp
leave
mov
repnz
in
scas
pop
sbb
inc
xor
adc
push
std
jecxz
daa
sbb
int
neg
or
rcr
xor
xchg
rol
daa
jecxz
bswap
testl
push
arpl
sbb
ja
jnp
data16
es
or
fcoms
call
cmp
das
mov
xlat
inc
into
fstpl
add
mov
push
push
mov
jmp
roll
lcall
or
test
dec
insb
pop
pop
ret
mov
add
push
pop
or
push
dec
andl
jne
jb
mov
jns
addl
cwtl
push
inc
ret
inc
test
jb
mov
clc
push
dec
xchg
mov
cmp
call
xor
push
push
mov
popf
rorb
fildl
cmp
mov
push
test
stc
push
push
iret
inc
sbb
std
mov
mov
add
loop
lods
test
fs
daa
dec
rcl
mov
int3
daa
fisubs
lret
fstps
cmp
hlt
sti
fwait
jb
dec
inc
pop
movsb
in
subb
outsl
sbb
dec
lods
pop
xchg
sbb
mov
mov
pusha
pop
adc
mov
sub
int3
shlb
aam
ss
sahf
xor
stos
pusha
add
jle
pop
mov
cltd
inc
mov
ret
in
jp
ret
adc
je
ss
scas
data16
mov
pop
xor
adc
popf
ds
pop
jl
js
mov
inc
xor
rcl
cmpsb
data16
cmp
sbb
loopne
xor
or
js
jge
imul
popf
stc
pop
stos
scas
loope
mov
sub
mov
cmovo
jae
adc
test
ror
sahf
bound
pop
cmp
aad
cmp
ds
sub
outsb
cmpsb
pop
dec
icebp
inc
mov
lods
sahf
std
movsl
popa
aas
and
cmp
mov
inc
push
daa
sbb
dec
pop
fcoml
push
mov
mov
test
fnstcw
push
sbb
sub
sub
bound
mov
ret
push
bound
insl
int3
lcall
fcompl
sbb
sbb
loop
push
pop
xor
jle
mov
mov
fwait
inc
pop
sbb
lret
dec
cmp
pop
push
mov
and
inc
je
dec
pop
mov
mov
fistps
mov
repnz
lods
mov
js
fs
add
jnp
add
push
dec
jg
mov
out
lock
inc
push
testl
fbld
cli
sti
push
dec
add
cltd
pop
fbld
clc
out
push
fidivrs
arpl
sub
fildl
xchg
mov
loopne
jg
push
fidivl
daa
clc
adc
jmp
aam
push
leave
outsl
add
repnz
andl
icebp
mov
aaa
xchg
fisubs
mov
jno
or
ja
mov
aad
jnp
mov
xor
pop
xor
std
negb
jecxz
inc
cwtl
mov
popl
mov
adc
sub
inc
cmpsl
and
call
jo
cmp
lret
ret
mov
push
sbb
cld
fildll
add
push
and
inc
lahf
popl
stc
lcall
cmpsl
push
cmc
mov
mov
xchg
cmp
dec
cli
push
jnp
repnz
test
sbb
push
fimuls
pop
or
xchg
push
repnz
cmp
fcompl
pop
cli
pop
in
ret
mov
or
sub
and
aaa
imul
push
jge
outsb
out
pushw
stc
adc
mov
jle
ja
push
movsb
test
jmp
repz
ret
xchg
cltd
int3
test
test
add
cs
pop
mov
sub
xchg
shl
out
inc
jmp
add
sbb
je
cmpsb
fidivs
lret
test
add
sbb
sbb
fwait
out
push
push
push
pop
inc
push
je
cwtl
adc
icebp
cltd
leave
rorb
cmp
cmp
shll
cmc
dec
dec
ljmp
jno
clc
fistl
popa
fcoms
das
rcl
sbb
inc
dec
add
sahf
loop
movsb
mov
fcoml
xchg
or
test
repz
icebp
inc
es
mov
vpaddq
jge
cs
sbb
lods
mov
scas
sub
push
sub
or
pop
test
and
daa
mov
inc
outsb
push
imul
ret
xchg
xor
sub
push
mov
scas
push
xchg
sbbl
mov
mov
pop
add
imul
fstl
test
clc
fisubl
xchg
push
stos
insb
mov
loope
mov
aaa
adc
inc
adc
ja
mov
or
cli
lds
add
mulb
add
fwait
test
pop
sub
xor
mov
push
test
out
mulb
mov
pushf
dec
inc
xor
inc
dec
mov
iret
outsl
std
mov
push
daa
adc
xchg
xchg
int3
in
jb
xor
or
jae
push
jne
sub
neg
cmp
xor
lea
adc
pop
and
jp
ret
pop
jno
or
movsb
mov
mov
je
xor
ret
push
cmpsl
xchg
and
dec
xchg
ljmp
ret
push
mov
push
mov
cltd
mov
jmp
dec
push
mov
pushf
mov
enter
pop
pop
mov
push
mov
out
imul
aas
cltd
dec
mov
jb
pop
icebp
leave
push
hlt
movsb
adc
cmp
ss
outsl
cmp
mov
inc
mov
or
pop
adc
int
xchg
adc
push
or
push
stos
jg
adc
out
je
sti
outsb
repz
or
lods
pop
or
sub
add
cmpsl
fwait
jge
mov
add
shl
es
arpl
test
xlat
inc
mov
int3
loopne
repz
mov
add
xor
stos
ja
notl
inc
in
sahf
xchg
ret
call
popa
outsb
mov
mov
bound
fs
out
mov
sbbb
ljmp
or
inc
xor
lds
mov
pushf
adc
fcoms
push
jns
out
inc
sub
test
push
dec
call
pop
sbb
das
imul
and
mov
ds
push
xchg
sub
cmp
int3
sarb
sub
mov
sbb
or
jle
pop
or
mov
or
outsl
mov
add
inc
popf
imul
cmp
shrb
push
mov
cwtl
jecxz
sarb
cmp
ljmp
fstpl
fstps
adc
paddsw
daa
out
jge
jmp
inc
sub
jge
adc
test
or
xchg
je
jle
ficoml
aad
push
les
and
cld
jns
dec
mov
test
xlat
jle
movl
cmp
push
jmp
push
stc
stos
pop
mov
mov
or
inc
cltd
inc
xchg
sbbl
adcl
icebp
jno
movsl
lret
add
xchg
sbb
lcall
dec
mov
inc
int3
mov
jns
push
loopne
lods
mov
mov
nop
sub
clc
lcall
jae
sub
dec
inc
jb
data16
mov
cld
pop
mov
mov
or
jns
or
and
ret
mov
enter
xchg
into
xor
xchg
jg
aam
xchg
fildl
cmp
sub
jne
lret
leave
ret
xchg
mov
pop
jle
adc
insl
popf
push
aas
or
xchg
lods
in
das
push
mov
cmp
hlt
lahf
push
and
xchg
stc
adc
pop
stos
test
xchg
adc
fs
out
rcrl
scas
mov
iret
adc
scas
xchg
aas
jbe
cmp
stos
add
movsl
push
icebp
arpl
pop
inc
xor
cmc
pusha
xchg
popa
jbe
ret
xor
out
in
jge
inc
mov
jl,pn
pop
insb
lret
xchg
adc
unpcklps
sub
insb
fcoms
rcl
andb
xor
push
aam
or
dec
ror
push
pop
mov
icebp
xor
ds
mov
xor
leave
enter
and
rolb
xorb
dec
mov
pop
mov
jb
inc
jecxz
js
adc
pop
lahf
cli
xor
xor
jns
mov
ss
sub
xor
mov
cmp
jmp
mov
push
sbb
adc
ljmp
push
jecxz
iret
mov
stc
or
mov
jo
insl
loopne
and
sub
push
imul
mov
sub
stos
sub
pop
filds
leave
pop
add
fnsave
inc
scas
fwait
aas
jb
testb
push
cmpsb
gs
add
xor
jno
pop
cli
lret
ss
out
fwait
xchg
sbbb
sub
dec
cmp
test
test
cmp
jo
mov
add
sbb
xchg
cmc
xchg
pop
jns
loopne
mov
cltd
ljmp
and
test
icebp
mov
dec
repnz
lret
or
mov
jae
fwait
in
push
mov
loopne
add
cli
push
pop
fdivrs
jo
inc
mov
jbe
pop
xchg
mov
iret
adc
sbb
jle
pop
sbb
pop
out
push
inc
sbb
sbb
xchg
les
push
rorl
fistl
add
push
mov
pop
stc
js
aas
mov
lcall
sub
adc
mov
push
lock
mov
xor
dec
fisubs
pop
sbb
pop
lods
cmpsb
icebp
arpl
scas
mov
cld
and
rcrl
cmc
ds
mov
outsb
mov
shll
pop
sbb
ljmp
xor
and
outsl
jle
jbe
aad
fldenv
in
xchg
andl
sub
in
adc
adc
pop
in
hlt
lret
enter
mov
lds
jecxz
shrb
dec
rcll
add
or
incl
dec
test
addr16
aas
jo
fnsave
mov
cmp
xchg
js
xchg
and
adc
ret
jecxz
inc
repz
into
inc
push
dec
mov
call
xchg
push
adcl
xor
loop
mov
frstor
push
pop
test
cmp
or
test
fnsave
jae
push
dec
fs
push
orl
mov
push
mov
sub
iret
bound
out
int3
movsl
outsb
xchg
lods
rclb
jp
lahf
sahf
in
jae
fldenv
adc
in
cmp
outsb
xchg
insb
mov
push
jle
sub
sbb
pop
clc
sti
lods
lods
jno
push
xor
fsubl
xchg
xor
int3
or
fimuls
adc
and
sbb
dec
cs
xchg
das
popf
push
cmp
or
push
xor
inc
iret
inc
in
popa
outsb
repnz
push
push
int3
pop
push
fs
adc
fcompl
sub
stc
rcrb
bound
call
enter
push
cmp
push
sbb
xor
adc
mov
pop
int
fwait
sub
xchg
mov
in
mov
in
jns
dec
jp
cmc
pop
scas
bound
pop
pop
jmp
mov
inc
add
dec
stos
inc
js
addr16
lock
lahf
in
push
mov
adc
stos
loop
dec
outsb
inc
mov
cmpb
frstor
cmc
call
lcall
fisttpll
dec
push
popa
pusha
push
jl
xor
mov
cmc
movsl
jo
imul
jne
test
push
iret
lret
clc
fnstsw
sbbb
stos
sub
cmp
aaa
test
sbb
loop
repnz
and
jo
jo
xor
leave
ja
pop
lahf
push
cmp
daa
dec
ret
or
fbstp
outsb
cmpsl
add
pop
cmp
pop
jno
rorb
pop
lods
fistps
insb
out
or
sbb
rolb
pop
and
mov
rcrb
mov
fidivrs
sub
gs
xor
fadd
fs
jnp
mov
in
lret
xchg
jb
imul
fcmovb
sub
int3
mov
inc
inc
mov
in
ficomps
inc
cli
mov
adc
clc
dec
xchg
add
mov
xchg
jb
subb
adc
sbb
jl
rcll
inc
jp
pop
xchg
nop
push
call
pop
inc
std
cmp
mov
es
cmpsb
add
adc
ret
inc
repz
jno
add
inc
pop
inc
push
clc
test
stos
les
xor
fs
pop
inc
pushf
and
rorb
xchg
pop
push
test
cwtl
lahf
xchg
stc
cwtl
push
pop
jg
pusha
fsubl
xchg
xor
cmp
cwtl
pop
inc
add
imul
int
loope
mov
xlat
mov
dec
fwait
sbb
mov
test
xchg
inc
fadds
gs
jae
movsl
stc
cmp
adc
adc
iret
inc
in
xchg
push
outsb
xchg
cmpsb
sub
arpl
mov
adc
mov
test
aam
pushf
ret
sub
jns
andl
mov
mov
xchg
es
lds
int3
inc
xor
out
xlat
inc
ljmp
push
leave
rcl
ret
mov
test
xorb
xlat
popf
fcmovu
js
pop
dec
xchg
ds
mov
mov
insl
xchg
pop
or
ja
push
out
sub
call
jbe
push
and
imul
loopne
pop
sub
imul
xchg
cmc
hlt
push
pop
push
out
repnz
cmp
scas
jb
ret
sub
jg
xchg
aaa
mov
sarl
mov
pop
cmp
imul
enter
nop
sbb
adc
pop
iret
sbbl
sbb
shlb
aad
mov
insl
mov
xor
int3
pusha
jns
jp
insl
push
inc
das
in
jbe
and
xlat
test
add
scas
sbb
xchg
stc
repz
push
ret
mov
cld
imul
xchg
aaa
jmp
clc
pop
out
and
xchg
adc
jge
or
aas
sub
ljmp
cmp
jno
xor
push
fadds
jmp
push
std
stc
dec
sti
adc
ds
xor
sub
mov
cmp
cmp
lcall
fadds
loop
fwait
int
push
call
push
jno
or
push
push
daa
mov
sbb
cmpsl
ret
mov
call
popf
dec
jnp
and
fldcw
out
enter
insl
or
pop
jp
lret
loope
ja
addr16
push
mov
fidivrs
mov
mov
mov
out
outsl
std
xchg
in
pushf
or
xchg
dec
cmp
lea
xchg
in
and
fistpl
adc
jg
outsb
xor
shrl
add
lods
jno
pop
push
and
jae
gs
dec
in
sarb
jge
xchg
lcall
fdiv
sbb
cmp
movsl
mov
shll
inc
dec
mov
pusha
sti
cli
stos
lea
std
outsl
cmp
xchg
popa
cmp
outsb
mov
pop
adc
xchg
or
imul
sbb
push
lret
sti
push
fistpl
add
shrb
dec
pop
cmc
ret
movsb
aam
outsb
cmp
push
cmp
popf
pop
add
popa
stos
mov
cltd
mov
cltd
iret
jns
sbbb
cld
lret
out
je
mov
add
or
arpl
rolb
xchg
int3
jl
xchg
outsl
movsl
cmc
jbe
xor
mov
in
fildl
jbe
ss
mov
repz
roll
stos
or
int
mov
iret
clc
push
roll
rorb
dec
push
push
lods
add
xor
cmpsl
fldenv
movsb
testb
enter
mov
sbb
xchg
cmp
or
lret
sbb
cli
jo
call
rclb
pushf
pop
mov
inc
cld
rcr
dec
sub
xlat
jne
cmp
mov
cmpb
popf
jmp
cmpsb
fimull
pop
and
sub
test
pop
pushf
rcrl
jnp
cmp
out
xchg
mov
push
xchg
mov
sbbb
hlt
xlat
adc
lock
in
loope
xor
jns
cmpl
sub
subl
out
adc
rcrb
bound
xor
lret
mov
mov
cmp
inc
stos
mov
jnp
hlt
pop
repz
sbb
lahf
icebp
ds
sbb
cs
or
fcmovbe
mov
jle
push
xchg
mov
sbb
gs
mov
jp
xchg
mov
cmp
ret
add
leave
mov
and
xchg
fstpt
sub
outsb
xchg
lret
mov
jns
dec
out
and
dec
or
scas
mov
cmp
shll
sub
ja
popa
push
fxch
mov
adcb
dec
xor
dec
mov
adc
jns
jl
jnp
rcll
inc
add
and
outsb
outsl
mov
mov
and
stc
jno
loop
xchg
xchg
fcomps
jmp
sbb
push
push
and
mov
mov
push
lret
decl
std
sub
sbb
aaa
xor
jge
cmp
or
or
adc
cwtl
xchg
flds
ds
imull
mov
push
ret
mov
movsb
fldcw
and
cmp
repnz
lret
test
inc
daa
sub
std
gs
movsl
movsl
sbb
test
cmc
fisttpl
jb
push
int3
pop
cltd
mov
sub
cmp
in
cmpsl
push
jge
movsb
repnz
popf
sub
lods
int
inc
xchg
and
mov
sbb
pusha
mov
mov
stos
sbb
popf
scas
push
push
lea
arpl
cmp
inc
jp
popf
inc
lds
pop
fdiv
flds
mov
mov
popa
jle
or
mov
out
push
mov
mov
xchg
fucom
lcall
jp
insl
and
lock
fdivrl
std
pop
jle
add
lods
push
jge
pop
loope
lods
push
fnstcw
clc
into
sub
inc
sahf
pmulhuw
mov
lock
xor
add
addr16
lahf
in
dec
sahf
adc
adc
lret
lods
into
mov
or
arpl
cmp
xchg
mov
mov
test
in
xor
enter
adc
fildll
mov
movl
mov
addl
rcrb
dec
cmpb
fldcw
pushf
aad
cs
xchg
lcall
arpl
dec
outsb
fsubrl
xchg
jmp
adc
js
aam
sbb
jns
repz
decb
movsb
xlat
scas
pop
push
repz
lcall
bound
les
outsb
shrb
sbb
ret
or
out
jne
mov
adc
xor
adc
subl
adcb
pop
mov
repnz
jl
je
ret
push
out
rcrb
les
add
loop
arpl
xor
mov
and
push
mov
mov
dec
jb
in
aaa
lcall
adc
leave
aas
xchg
jmp
int
adc
scas
push
xchg
cli
jmp
or
pop
mov
sub
jmp
push
sbb
xchg
fcmovnbe
dec
lods
gs
jmp
inc
repnz
jecxz
fdivs
or
repnz
pop
xchg
pop
xchg
vmovntpd
stc
test
mov
test
dec
jle
mov
call
fcomps
sbb
aas
pushf
dec
push
push
test
jnp
xchg
cmp
nop
and
add
stc
mov
loopne
lret
push
or
push
in
add
xchg
cmp
addr16
adc
and
fcoms
mov
adc
cltd
adc
arpl
das
fisubrl
cltd
push
cmpsl
ret
jl
cmpsl
addb
sbb
sbb
sbb
loope
xchg
outsb
lret
gs
jne
xor
jg
cmp
popf
test
insl
arpl
in
mov
leave
icebp
xchg
or
jge
outsb
add
xor
jns
enter
cmovb
xchg
pop
push
or
fisubrs
daa
jno
out
mov
dec
mov
push
lock
mov
cmp
mov
repnz
std
popl
maskmovq
testl
addr16
lods
jo
add
inc
movsb
xchg
add
into
lahf
xchg
scas
cmpsb
decl
cmp
jnp
outsl
add
inc
push
mov
lcall
aad
sbb
sbb
scas
xor
outsb
dec
cmpsl
push
mov
push
loope
les
shr
pop
stos
adc
pop
iret
push
repnz
jbe
xchg
dec
mov
inc
dec
inc
rorb
addl
loopne
rol
fsubrs
lods
test
xchg
addr16
imul
inc
push
jne
bnd
or
mov
insb
pop
or
xchg
nop
add
lea
push
into
mov
mov
shll
xchg
rolb
adc
xor
popf
stc
aam
inc
aas
push
xchg
pop
lret
sbb
cmc
shlb
ljmp
or
mov
outsb
and
shrl
xchg
mov
inc
std
jge
sti
insb
cmp
mov
sti
movsl
shlb
js
cs
xor
sbb
js
int
clc
dec
lods
or
xchg
faddl
addl
nop
add
push
imul
loope
cmpsb
enter
mov
data16
add
sbbl
in
or
sub
jo
xor
pop
mov
add
or
inc
jl
mov
mov
mov
mov
outsb
jns
loope
sub
imul
sub
mov
xor
bound
inc
cmpsl
jb
inc
rclb
or
dec
dec
repnz
loope
pop
popa
push
ror
leave
or
push
gs
out
and
ret
mov
call
mov
or
pushf
jbe
add
push
dec
and
and
mov
push
loopne
pop
mov
int3
jp
mov
dec
ret
sub
test
adc
xchg
pop
adc
mov
sbbb
xor
repz
dec
test
or
cs
dec
xchg
nop
in
aam
mov
pop
nop
lock
xchg
inc
ljmp
inc
mov
in
out
adc
enter
lods
test
cwtl
and
lcall
xchg
pop
mov
jbe
fnstcw
iret
cmpsl
leave
push
shl
xchg
scas
push
pop
ret
aas
je
push
or
imul
pusha
mov
adc
ss
xchg
push
jne
jg
mov
push
pop
inc
mov
sub
scas
leave
xor
or
xlat
pushf
cwtl
repnz
cmpsl
sub
mov
sbbb
les
inc
sub
out
sub
fmuls
scas
bound
sbb
mov
pop
test
psubusb
cmp
loopne
mov
adc
mov
lods
dec
jae
and
inc
imul
push
test
mov
xor
mov
sarb
popa
js
scas
ficoml
int
ds
add
or
sahf
icebp
mov
sahf
mov
icebp
dec
icebp
daa
cli
push
sbb
and
lock
leave
pusha
notb
cmpsb
mov
adc
dec
repnz
or
iret
rolb
jae
aam
shll
ss
fwait
outsb
xchg
sbb
xchg
jnp
lret
ja
repz
push
lret
movsl
mov
mov
jg
test
inc
imul
ret
fiadds
adc
dec
leave
add
push
sub
iret
xor
jmp
mov
stc
leave
dec
xchg
nop
push
out
nop
mov
mov
adc
and
inc
ret
mov
js
mov
and
fisubrl
jns
inc
inc
cmpsl
or
xor
pop
in
enter
lds
loopne
scas
imul
lahf
inc
out
lret
inc
xor
imul
pop
adc
sbb
and
and
rcrb
das
or
ljmp
push
xor
stos
pop
mov
pop
xor
rcll
imul
test
jg
scas
mov
add
rcrl
and
xchg
jmp
and
jl
clc
lahf
xchg
and
icebp
fcmovnbe
filds
jl
mov
out
dec
jle
test
iret
sbb
adcb
fisubrs
jmp
shr
sbb
pop
and
pop
mov
es
pop
loop
pop
popf
lods
sub
imul
pop
jo
mov
shr
lods
ja
popf
adc
fsubrp
add
jno
xor
jg
sbb
pop
or
mov
sbb
out
sub
mull
xchg
jg
mov
lods
leave
jbe
push
add
xchg
ret
sbb
aaa
stos
xchg
xor
adc
dec
xchg
adc
and
fdivrl
sub
dec
or
pop
mov
into
mov
pop
arpl
ret
xchg
cmpsl
sbb
pop
add
movsl
outsb
test
jb
push
data16
fildl
or
push
sbb
data16
inc
call
test
mov
aad
loop
or
jno
add
push
pop
xor
leave
test
mov
inc
addr16
inc
jge
and
xor
pop
scas
js
js
dec
pop
scas
xlat
cmp
sub
mov
bound
cmpsl
pop
cmp
cld
sub
mov
idiv
stos
jmp
mov
xor
lods
sbb
and
notl
loop
xchg
jle
xor
or
ficoml
inc
iret
aaa
fldl
js
fimuls
sbb
mov
push
pop
int
inc
movl
in
mov
dec
xchg
adc
aaa
jae
push
lret
aam
cli
mov
out
push
dec
sub
mov
jl
mov
bound
lods
mov
xor
inc
iret
pop
or
std
fs
inc
lahf
xor
out
pop
in
jle
mov
xorl
sti
adc
jno
xchg
adc
sub
cld
push
dec
clc
repz
push
inc
pop
clc
in
sbb
or
push
mov
mov
iret
push
enter
testl
push
inc
sarb
insb
and
xor
pop
dec
fs
sbb
xor
rcr
inc
cld
int3
fnstcw
test
fistps
orl
fwait
repz
inc
mov
imul
adcl
push
loopne
xchg
add
sub
ret
jmp
lods
and
sub
and
mov
add
lock
nop
inc
cmp
scas
pop
add
mov
mov
mov
jbe
in
mov
fwait
dec
insl
adc
jge
loope
dec
adc
or
out
add
fdivrs
xchg
lret
imul
xor
aas
js
cs
jl
leave
pop
mov
dec
shll
daa
cli
push
add
jge
push
sar
dec
cmp
mov
das
push
xchg
inc
mov
jecxz
enter
push
test
and
inc
pop
sub
dec
movsb
inc
cltd
inc
imul
fildll
sub
js
cli
or
mov
lret
pop
icebp
repnz
mov
hlt
scas
push
cltd
arpl
xchg
mov
push
imul
into
mov
int3
enter
mov
xchg
aam
loop
mov
ljmp
xlat
mov
mov
add
or
dec
ljmp
sub
pushf
ffree
add
dec
inc
and
push
pop
repz
xchg
clc
xchg
jbe
fs
mov
mov
int
rorb
and
mov
sti
jg
pop
arpl
cmp
push
aaa
pop
jmp
into
movsb
push
mov
mov
jnp
hlt
cmpsl
inc
fdivs
imull
inc
mov
xchg
dec
ret
mov
stos
in
jmp
inc
mov
cmp
jp
aam
inc
xchg
sbb
mov
call
js
jo
lods
pop
adc
mov
push
xchg
xlat
jns
jl
inc
lea
inc
lret
nop
sti
subb
dec
sahf
jae
into
jne
call
call
sbbb
sbb
push
or
xor
or
or
adc
movsl
lcall
xor
test
and
dec
push
movsl
or
repz
test
cmp
inc
repz
loopne
scas
clc
dec
mov
or
push
xchg
jg
sub
daa
jb
out
xchg
shlb
xchg
outsb
repnz
lcall
mov
jmp
int
dec
add
inc
imul
push
ret
and
dec
sub
enter
mov
xchg
push
mov
adcl
enter
lock
cmp
addr16
adc
fildll
jnp
popf
in
or
push
into
pop
mov
xor
mov
or
stc
test
lret
or
lahf
hlt
mov
in
roll
icebp
outsl
xchg
notb
push
imul
push
out
cmp
outsb
jmp
or
js
pop
mov
jmp
repnz
shlb
into
loope
sbb
ds
inc
dec
mov
inc
into
fnstcw
cmpsb
mov
mov
or
xchg
cltd
data16
inc
jecxz
jnp
pushf
movsb
sahf
in
or
lea
movsl
outsl
fadd
outsb
out
xchg
insl
and
push
insl
inc
jae
or
popa
repz
cmp
mov
mov
cmp
mov
add
out
call
dec
mov
inc
mov
jnp
mov
mov
inc
or
xor
lods
lock
pop
arpl
xor
xor
aas
js
add
fnstsw
xor
inc
lds
rol
les
mov
xlat
leave
xor
stos
push
push
gs
xchg
and
pop
cmp
ljmp
ljmp
daa
jns
adc
repnz
std
aas
ret
out
mov
push
xor
cmp
push
lret
lcall
and
adc
in
lea
dec
cld
ja
xchg
insb
inc
adc
test
ret
jg
test
dec
stos
add
filds
and
std
nop
jle
andb
mov
adc
ret
in
mov
in
nop
mov
sti
cli
stos
mov
jo
fs
fnstcw
int
scas
je
mov
adc
cmp
adc
insl
es
push
mov
out
imul
and
inc
stos
mov
pop
add
leave
mov
lahf
mov
into
fwait
xchg
jnp
call
adc
lahf
enter
jo
push
repz
lods
in
ds
mov
jl
add
jl
mov
adc
dec
outsl
mov
scas
lods
shlb
imul
dec
dec
jae
mov
cmp
arpl
sub
in
cli
in
xor
inc
cmp
addl
xor
lret
decb
movsb
fiaddl
scas
popa
jns
mov
rorb
and
add
aam
sub
mov
dec
cs
dec
test
jne
mov
mov
sub
cli
nop
fnstenv
nop
and
ljmp
xchg
test
and
sub
push
xchg
dec
ret
cltd
out
sbb
ficoml
int3
sub
mov
lcall
mov
mov
xor
inc
fsubs
mov
jnp
push
jle
jnp
sbb
cmp
mov
adc
jne
xlat
ja
loopne
loop
lret
dec
push
xor
push
shl
jle
pop
imull
inc
lea
sub
lods
lods
ja
addl
test
into
loopne
scas
pushl
outsb
int3
jno
in
shll
insb
mov
pop
dec
movsb
jo
nop
dec
sub
leave
repz
lock
loope
and
in
and
jb
xchg
jb
mov
mov
xchg
lods
popf
std
jae
decb
xor
xchg
push
std
lret
andb
dec
pusha
push
aaa
outsl
or
mov
mov
dec
add
fwait
jmp
sbb
inc
lds
dec
stos
mov
or
sbb
shlb
add
cwtl
jmp
dec
sub
sub
shrb
ret
dec
mov
in
xor
lret
xor
push
adc
imul
aaa
xchg
arpl
daa
and
rcrl
jno
cwtl
jne
das
dec
loopne
mov
mov
dec
and
repz
cmp
mov
shl
sbb
mov
add
pop
aas
push
div
std
int
sbb
xor
add
aas
pop
je
aam
adc
inc
adc
dec
out
fs
arpl
mov
sar
neg
stos
icebp
inc
mov
sub
pop
aad
enter
mov
insl
outsb
pop
frstor
adc
nop
sub
xchg
mov
push
cwtl
xchg
mov
xchg
fidivl
in
sub
ss
outsb
push
out
xchg
adc
or
cld
xor
inc
lcall
add
cs
stos
mov
adc
scas
jp
scas
pop
loop
adc
dec
cmpsl
insl
js
xor
aad
dec
and
arpl
inc
rol
aas
jmp
xlat
ja
add
push
mov
jne
adc
sbb
loopne
push
out
xor
xor
sbb
loop
out
add
xchg
lds
cmp
dec
aaa
add
jl
push
lahf
outsb
cmpsb
out
ret
pop
and
fwait
mov
sub
daa
in
outsl
mov
pop
and
movsb
push
inc
jmp
jg
mov
stc
jle
mov
jbe
rcll
pop
int3
aaa
mov
sbb
in
adc
add
pop
inc
pop
pop
test
jnp
mov
sbb
pusha
imul
dec
ja
or
sbb
mov
sub
and
push
pause
les
lret
js
lods
mov
jae
or
leave
lret
loope
xor
pop
ret
xchg
cmp
imul
pop
repnz
out
ljmp
sbb
mov
movsl
aam
scas
xchg
fcmovne
jg,pt
mov
mov
pusha
loope
lods
jl
mov
pushf
cmp
jl
dec
outsb
pop
mov
sub
sbb
dec
mov
jo
mov
add
xchg
push
mov
mov
in
push
xlat
roll
in
ffree
lret
inc
les
ficoms
and
xor
xor
int3
loope
fs
outsb
or
cmc
inc
mov
test
push
js
bound
sub
aad
decl
outsl
ds
mov
pop
dec
dec
flds
jo
jo
shl
test
ss
es
mov
pop
push
push
xor
sahf
pop
push
in
xchg
es
fdivl
mov
xchg
add
xlat
jns
sarl
push
mov
data16
adc
cmc
test
adc
xchg
clc
dec
insl
inc
add
push
jnp
lret
or
fistpl
lahf
insl
hlt
rcl
roll
inc
and
aad
xchg
lock
xchg
mov
xor
cmp
inc
idivb
xchg
xchg
cli
es
mov
jle
pop
ljmp
imul
and
cltd
lret
pop
popa
mov
repnz
push
or
popf
and
mov
xorl
dec
pop
jp
dec
inc
push
ja
push
sbb
push
mov
pop
sbb
movsb
cmp
and
jecxz
and
mov
add
lds
xchg
mov
popa
adc
into
je
daa
sahf
jl
aam
faddl
mov
mov
in
aam
fs
xchg
lods
xor
fwait
movsl
jge
cmp
inc
outsb
into
int3
icebp
fcmove
call
push
mov
sbb
scas
xchg
xchg
loope
xor
sbb
test
in
test
cmp
sbb
loopne
jb
inc
push
lds
xchg
mov
fmulp
adc
jle
jae
cltd
lds
xor
xchg
cwtl
repnz
repz
loop
jl
xor
pop
cmpb
iret
nop
pop
sbb
pusha
popf
jle
adc
cltd
jnp
repz
clc
push
test
mov
sub
clc
sbb
cmp
rcrl
testb
not
fwait
into
pop
or
rcll
jns
sbb
cmp
xor
enter
lea
mov
cmc
xor
push
cmp
in
pop
int
es
and
sbb
scas
lods
lock
add
popf
in
movsb
addr16
xchg
xchg
repz
ja
jae
rcr
pop
ret
iret
xlat
insb
pop
push
sub
pop
mov
cmp
lds
jp
pop
ja
loope
nop
ss
insb
notl
insl
mov
pop
hlt
out
xor
adc
imul
out
popf
xor
shlb
push
push
shrl
sbbl
lods
ret
std
mov
das
dec
lods
dec
lret
lds
xor
pop
or
mov
shll
jae
xchg
dec
in
arpl
outsb
sub
outsl
adc
mov
lret
pop
incb
aaa
cwtl
pop
add
stos
inc
lock
sti
xchg
xor
xchg
inc
ds
aam
inc
fcomi
ret
test
gs
jne
sar
inc
pusha
push
cld
bound
js
cli
filds
jl
addl
imul
jne,pt
cmp
mov
clc
rol
lret
js
jo
sbb
jne
pop
mov
repnz
shll
cmp
mov
shll
roll
dec
jmp
or
outsb
into
xchg
xchg
ds
xchg
fcmovbe
fidivrl
jmp
sub
orl
jae
clc
jo
dec
jg
xor
xchg
lds
stos
xchg
iret
xchg
and
dec
add
cltd
dec
jl
xchg
add
xchg
subl
xchg
and
sub
incb
dec
lcall
cmp
sbb
ja
clc
mov
pop
push
and
pop
ja
sti
pop
fidivrs
ret
or
lea
lea
arpl
xchg
mov
adcb
xor
call
dec
xor
rclb
test
mov
jl
xor
and
repnz
fcompl
pop
mov
cli
imul
jo
fcoml
xor
push
loope
das
mov
push
push
in
lahf
xor
outsl
sub
aam
emms
or
mov
cmpsb
divb
lea
xchg
cmpsl
shrb
js
lea
xlat
sbbl
jl
cli
jle
scas
adc
and
cli
xchg
inc
pusha
mov
les
mov
mov
adc
arpl
pop
jne
setne
add
imul
mov
std
mov
dec
rcrb
sbb
xor
jp
pop
xchg
sar
sbb
insl
fmul
js
in
xchg
imul
inc
jae
lea
mov
not
pop
std
movsl
adc
addb
pmaddwd
cmp
mov
cmp
cmp
mov
jns
ret
mov
push
negl
or
out
xchg
std
out
ret
inc
jns
cmp
push
or
jb
and
sahf
insl
mov
sub
ljmp
sbb
push
adc
sub
mov
inc
add
jecxz
push
xor
mov
sbb
dec
loope
sbb
or
popa
sub
lods
push
mov
push
out
daa
fldcw
in
lock
loopne
movsl
jno
cmp
mov
das
xchg
adc
dec
push
mov
push
xor
int3
mov
shrl
pop
lods
jb
pop
pop
xchg
test
aam
lods
adc
mov
push
sbb
xchg
out
mov
mov
jmp
sub
add
xorl
pop
or
fsubs
pop
arpl
daa
cmp
subl
dec
ljmp
pop
push
mov
lea
fimuls
pop
out
hlt
pop
lahf
test
sti
test
dec
jmp
cltd
mov
push
inc
imul
mov
sbb
adc
lds
lock
jge
sub
push
sub
rcll
test
pop
loope
mov
cmp
insl
nop
and
xchg
pop
popf
add
xchg
lods
mov
iret
popf
and
cld
dec
out
mov
pop
std
fistl
fcmove
dec
int
mov
sbb
mov
inc
fidivrs
add
ds
sub
adc
and
mov
add
repnz
dec
ficoml
lahf
xor
dec
and
add
pusha
aam
sbb
and
cmp
les
les
adc
adc
jle
add
ret
je
cltd
xor
xchg
mov
cmp
in
aas
stos
ljmp
adc
push
mov
js
test
rol
rorl
iret
jns
sbb
mov
mov
sub
ficomps
mov
adc
dec
xchg
es
pop
pop
lea
adc
and
imul
movsl
xlat
arpl
popf
mov
pop
mov
fisubs
stc
gs
mov
neg
pop
push
sub
repz
xor
or
arpl
in
fwait
xchg
xor
jbe
stos
sbbb
dec
xlat
sahf
nop
mov
fsts
push
out
and
dec
orb
dec
sub
dec
mov
mov
aam
dec
sbb
ds
cmpsl
icebp
scas
push
pop
jbe
ficoml
fisubs
movsl
out
lds
push
pusha
push
rorl
mov
cmp
cmp
imul
xor
addr16
or
jecxz
inc
push
and
push
pusha
fabs
mov
cltd
aad
cmp
jmp
fsubrs
mov
mov
out
jbe
shl
sbb
xchg
pop
and
fwait
mov
cld
adc
in
cli
or
repnz
rolb
add
mov
xor
shl
push
mov
out
xchg
iret
adcb
int
cwtl
sub
ret
pop
push
aas
dec
push
in
xor
push
repz
cli
stos
inc
adc
xchg
in
sti
mov
insl
xchg
jae
scas
jl
mov
lds
push
cmp
dec
xchg
aaa
sub
aad
loopne
push
mov
repnz
cmp
inc
mov
xorl
cli
mov
mov
sub
aad
scas
pop
dec
jbe
inc
stos
and
inc
sub
mov
arpl
pop
cwtl
adcl
xchg
pop
pop
adc
icebp
popf
jo
pop
pushf
push
iret
xchg
outsb
dec
xor
adc
mov
lods
mov
and
push
cli
adc
xchg
cmp
and
xor
sub
aam
cld
mov
adc
ret
test
sahf
lods
pop
sbb
jb
in
jnp
push
outsl
push
ss
push
call
rcrb
ret
adc
push
jbe
lret
inc
enter
lret
add
mov
and
dec
out
clc
jno
and
mov
pusha
add
test
int3
aam
sbb
daa
sbb
and
sbb
sbb
push
pop
scas
in
adc
xor
add
dec
jle
cmp
mov
xor
lcall
mov
mov
mov
ds
subl
mov
out
lock
test
xor
and
cli
inc
outsl
sbb
jns
push
or
and
loope
scas
ret
mov
mov
push
xchg
or
xor
push
dec
pop
cmpsb
popf
jmp
popf
pop
xchg
adc
or
test
int
js
lea
mov
mov
dec
xor
xchg
sub
popf
cmp
sub
adc
xlat
fwait
mov
pop
jg
in
push
call
dec
and
bound
sarl
outsl
and
test
lods
pusha
or
aas
lret
ds
cmp
lock
push
add
add
or
ds
and
jecxz
jo
xor
add
mov
popf
ss
rcrl
das
cmp
adc
je
gs
adc
add
aaa
in
mov
dec
or
std
leave
fmuls
push
fildll
sbb
push
loopne
or
nop
aad
aad
dec
stc
pop
dec
cmp
fistps
fiaddl
das
pop
sub
xchg
sbb
inc
ljmp
jl
gs
cmp
sti
inc
ret
cs
ret
ret
cmp
mov
mov
outsl
loopne
add
cwtl
repz
adc
mov
jp
out
push
mov
inc
mov
lods
cmp
insl
cmp
adc
xchg
gs
xchg
popa
jb
mov
jge
loopne
mov
xor
or
shll
out
jne
sti
inc
sub
xchg
cmp
sti
jno
data16
daa
mov
leave
add
jo
jmp
adc
clc
orl
jbe
jae
out
and
mov
mov
xadd
lock
outsl
lds
cmp
rol
jne
into
movsb
pusha
sub
or
movsb
xchg
xchg
cmp
popa
enter
adc
mov
scas
cmpsb
sbb
cld
fwait
jb
repnz
adc
jb
cld
xlat
flds
mov
add
mov
lret
xor
addb
ljmp
mov
adc
aam
cmc
mov
dec
adc
pop
sbb
dec
mov
xor
and
or
imull
iret
dec
loopne
mov
mov
lods
jecxz
sub
cmp
pop
mov
and
sub
out
dec
jbe
xchg
mov
js
push
jnp
pop
gs
ja
and
stos
cmp
lock
and
cli
lea
clc
jb
or
add
fs
xor
imul
pop
aad
push
rcrl
fimuls
xchg
mov
test
fcom
mov
push
int3
pop
adcb
sti
les
push
push
fs
xchg
inc
fdiv
icebp
push
std
into
xlat
sbbb
mov
adc
push
fisubrs
in
and
xchg
or
cmp
out
je
mov
aad
scas
push
jle
sub
repnz
sub
mov
inc
push
pop
pop
iret
push
jmp
adc
mov
push
push
dec
pop
jmp
mov
push
cmp
lret
xor
ret
xchg
imul
aas
and
add
fstpt
test
lahf
pushf
mov
add
pop
fisubl
daa
stos
lahf
pop
mov
sub
push
jno
jmp
cmp
xchg
add
sbb
push
inc
add
inc
cmp
mov
stos
xchg
mov
push
add
lea
stos
hlt
test
mov
jo
outsb
jg
leave
sti
mov
push
mov
sub
pusha
lahf
nop
inc
out
cmp
dec
or
lcall
push
push
decb
mov
xor
xchg
rcrb
fistpl
movsl
jl
movsb
add
pmulhuw
jl
push
jle
inc
inc
loop
adc
add
pop
int
in
fstps
cmc
inc
xchg
sbb
add
push
lea
es
pop
xchg
sti
out
sbb
and
jmp
sti
negl
imul
dec
sbb
iret
stos
int3
adc
hlt
mov
orl
in
pop
pop
push
scas
pushf
sbbb
mov
or
pop
lahf
xorb
pop
rcrb
cmc
mov
or
in
push
cmpl
outsb
shrl
lea
icebp
das
push
out
mov
scas
lea
inc
push
fcompl
in
sar
in
jl
shlb
fs
aad
movsl
loope
mov
jp,pt
cmp
movl
mov
cs
add
adc
lock
mov
rolb
jmp
lock
cmp
sti
jo
lret
push
scas
xchg
adc
push
jbe
int3
mov
decb
sbb
andb
sar
pop
and
frstor
mov
movsl
mov
or
sbb
inc
les
cmpsb
add
dec
js
imul
outsl
ss
movsb
push
sub
or
mov
adc
loope
pushf
cld
ret
gs
cmp
addl
mov
pushf
lods
leave
test
and
mov
std
mov
outsl
sbb
mov
sarl
dec
or
imul
ljmp
sub
cmpsl
rcr
imul
sahf
cwtl
sbb
jae
outsb
sbb
inc
pop
shrb
lcall
movsb
nop
sbb
cmp
lahf
mov
inc
add
test
hlt
mov
inc
mov
and
mov
loope
in
out
push
inc
mov
pop
mov
lea
inc
in
subl
dec
fwait
cmpsb
popf
pop
mov
movsl
pop
cmp
ljmp
push
mov
or
dec
xor
lock
pusha
test
mov
ja
lock
push
adc
add
sbb
and
ret
push
cmp
mov
xor
or
sti
sbb
dec
xor
push
addr16
outsb
sti
mov
les
jle
aaa
jecxz
sbb
rorb
jno
subb
pop
popa
aas
insb
dec
jmp
add
mov
das
and
xchg
lock
inc
dec
xor
jne
addb
cs
jb
xchg
inc
rcll
cmp
xor
js
push
insb
xor
mov
shlb
hlt
arpl
push
push
sub
in
rcrl
aas
je
mov
cwtd
clc
in
or
push
push
xor
mov
pop
xor
jbe
xor
out
roll
pusha
shlb
pop
cmc
rcr
mov
push
sub
push
add
cld
sub
inc
add
inc
in
fidivrs
push
enter
add
js
sahf
xorl
add
push
jl
jne
add
mov
stos
cwtl
je
add
inc
dec
pop
inc
pop
dec
jmp
inc
ss
cmp
cmpb
int3
shl
repz
mov
dec
fstpl
pop
add
xchg
out
mov
loopne
mov
or
loopne
imul
pop
test
enter
fcmovbe
pop
sbb
aad
push
push
xor
test
lods
add
xchg
jb
movsl
frstor
mov
cltd
mov
fisubs
ficomps
xchg
cmpsl
aad
dec
pop
pop
mov
cmpl
gs
sti
in
xor
sbb
or
lcall
cmp
mov
jbe
push
cmp
adc
jl
mov
into
dec
inc
out
xchg
cltd
push
aad
dec
rcl
nop
jecxz
sub
adc
fwait
sbb
mov
rcrl
lock
inc
or
out
mov
sbb
cmp
je
test
sub
ljmp
inc
push
shrb
fscale
mov
sbb
lea
and
rcrb
sbb
pop
and
rolb
adc
dec
or
or
das
mov
aaa
mov
movsl
call
mov
lods
fbstp
xor
out
sub
hlt
xorb
xchg
xchg
push
pop
mov
add
jb
jno
push
movsl
add
ss
movsb
push
in
sbb
int
jbe
repz
xor
mov
cmc
cli
or
mov
ja
sahf
push
std
pop
test
xchg
inc
sbb
pop
lahf
les
xorl
pop
mov
repnz
daa
les
jne
pop
loopne
lds
inc
jns
lods
aad
ds
xchg
fisttpll
mov
inc
or
xchg
xor
xor
xor
scas
iret
ror
cmp
xchg
out
pop
mov
xchg
cli
stos
ds
movsl
mov
pop
push
movsb
or
xor
insb
pushf
lcall
pop
sbb
jmp
fs
dec
xchg
or
repnz
xchg
cs
sub
lods
mov
push
sbb
cs
out
call
into
ja
cmpl
jne
jno
mov
sbbl
sahf
stc
out
outsb
imul
insb
and
sub
insb
mov
dec
adc
out
repnz
imul
or
lods
in
mov
push
orb
dec
cwtl
mov
addr16
outsb
pusha
fldenv
shrl
negb
or
cwtl
std
daa
cld
adc
push
jg
push
test
jmp
pop
inc
inc
push
cmp
outsl
rol
sbb
data16
push
pop
popw
xchg
and
loop
loope
pop
cmp
and
jge
mov
add
mov
mov
jp
push
aad
and
xchg
dec
push
orb
adc
xchg
push
lock
imul
add
mov
lock
stos
or
lods
dec
or
arpl
loope
lock
mov
xor
sti
test
das
jns
loope
xor
dec
sarl
int3
add
ja
jno
lds
bound
sbb
sub
xchg
dec
addr16
xchg
pop
das
inc
dec
and
addl
mov
jno
jmp
call
mov
ret
pop
lock
jmp
sbb
int
mov
push
add
mov
sbb
hlt
pop
stos
xor
sub
inc
xchg
ret
dec
pop
and
sarl
lods
xor
adc
pop
adc
pop
add
outsl
fimuls
and
nop
add
xor
push
pop
shl
sbb
jmp
repnz
inc
jl
out
cltd
or
jecxz
add
xor
lods
lea
mov
je
add
push
cs
adc
mov
ljmp
fiaddl
inc
aas
imul
mov
dec
cld
in
mov
sbb
cmp
jmp
sbb
sbb
repnz
xchg
outsb
daa
lods
mov
scas
push
jns
ljmp
xchg
nop
sbb
sub
inc
mov
cli
or
pop
fiaddl
add
aam
fdivr
loope
inc
data16
js
sub
aas
fsubrp
mov
adc
add
jae
fstpt
sti
es
jecxz
arpl
popa
enter
test
and
cmp
cmc
shrb
push
xchg
jne
jge
cmp
test
test
repnz
popa
in
in
loop
sub
push
cld
sub
lea
sahf
cmp
dec
push
shll
dec
fdivs
pop
xchg
lcall
test
mov
mov
cmc
mov
ljmp
jmp
mov
xchg
fwait
push
mov
jg
or
xchg
imul
mov
adc
imul
ret
fistpll
push
movsb
dec
lods
xlat
ficoml
nop
add
mov
cmpsl
lcall
subl
add
outsb
jecxz
rorb
leave
and
rcr
push
sub
jg
ficomps
add
jo
lahf
int
jg
inc
or
loopne
outsb
mov
clc
jo
pushf
out
adcb
outsb
inc
and
jb
mov
outsb
push
lock
xlat
outsb
int3
repnz
outsl
std
and
nop
mov
mov
mov
push
xorl
xchg
dec
lret
or
lock
sbb
pop
mov
lods
cmp
pop
hlt
shll
mov
repz
ds
je
pop
xor
cmp
fs
or
mov
shrl
sub
mov
adc
ret
scas
mov
sbb
out
dec
add
jmp
xchg
fistpl
adc
jb
scas
xchg
hlt
mov
add
fs
mov
fsubl
sbbb
xchg
mov
dec
in
mov
cli
jns
mov
sahf
sbb
mov
sbb
dec
nop
dec
push
jbe
pushf
sub
add
in
idivl
mov
int
mov
add
jae
xchg
inc
dec
int3
decl
roll
sbb
adc
out
testb
xor
sub
and
xchg
sub
cwtl
dec
outsb
call
and
adc
adc
dec
sbb
cmp
lods
outsb
fldcw
data16
adc
roll
rcl
adc
pop
loopne
jns
push
lahf
aaa
mov
pop
out
aad
mov
dec
stos
adc
pop
pop
xchg
cmp
push
add
inc
adc
out
xor
gs
cmp
sti
jl
and
aas
cmp
addl
sbb
adc
orl
daa
hlt
orl
stc
dec
push
or
sbb
jle
adc
jp
xchg
adc
mov
ja
jb
lret
fwait
nop
cltd
push
push
xor
rorl
add
ss
in
xchg
out
das
ljmp
int
shll
sbb
cmpsl
add
in
inc
jecxz
cltd
adc
xlat
cwtl
add
hlt
shrl
pushf
das
outsb
sarb
push
and
movsb
sbb
jnp
enter
ret
call
and
addr16
rolb
fistl
mov
lods
sub
jp
pop
aad
mov
sbb
or
lret
inc
mov
hlt
push
popf
pop
cwtl
mov
push
int
inc
fxch
add
mov
xchg
pushf
daa
mov
inc
dec
loope
pop
out
lret
push
adcl
push
or
push
sbb
add
jnp
outsb
jno
insl
in
inc
sbb
in
imul
mov
outsl
mov
sbb
in
mov
dec
inc
movsl
ds
dec
pop
movsl
fs
scas
out
rcll
mov
out
jo
jecxz
stos
inc
cltd
pop
dec
into
dec
lock
pop
add
out
add
test
jae
cmpsl
xor
repz
push
int3
pop
test
movsb
insb
pfsub
iret
and
sbb
pop
pop
in
aas
roll
xor
out
xchg
mov
repnz
push
ss
jmp
mov
jl
aam
into
cs
lds
sahf
adcl
cmpsl
push
sbb
std
mov
jg
stos
mov
enter
fsub
roll
pop
adc
ret
mov
xor
inc
lea
mov
jg
aaa
push
pushl
adc
test
sbb
dec
push
xor
scas
lret
jae
cmp
push
xor
test
adc
test
jbe
mov
pop
jno
pushf
rcrl
jmp
jae
mov
mov
outsb
ss
int
or
dec
cwtl
mov
mov
testl
xchg
jmp
sarl
or
mov
xchg
sub
inc
shrl
pop
xchg
sub
sub
fcmovbe
push
inc
xchg
outsl
roll
shr
sub
repnz
movsb
inc
je
sub
push
xchg
orl
movsb
push
hlt
movsl
in
ja
or
fadds
sub
test
ds
popf
mov
jmp
pop
cmp
sub
out
fdivrs
fistl
enter
je
test
or
addr16
fcoms
out
jno
cs
imul
fdivrl
int3
jmp
lods
inc
addr16
push
movl
lret
test
mov
mov
jbe
push
sub
pop
inc
cmp
rclb
loop
or
notl
out
jl
lods
cmpsb
adcb
imul
and
loopne
mov
scas
add
xor
lods
dec
leave
fisubrl
in
in
jmp
pop
loope
mov
imul
fldenv
xchg
cmpsl
pop
cmc
adcb
jmp
movsl
je
add
add
lret
scas
test
and
test
dec
cmpsb
pop
fstl
int
test
xchg
vmread
fs
test
movsl
pop
mulb
xor
loop
js
gs
push
push
adcl
mov
jmp
lock
xchg
sti
sub
dec
jge
cmp
jno
jmp
repz
addr16
or
jmp
hlt
pop
jns
popa
test
inc
and
fsts
lock
movsb
leave
fildl
lcall
mov
mov
cltd
cli
pop
lock
lods
xchg
mov
push
push
xchg
pop
insb
pop
js
outsb
push
adc
pop
mov
sti
test
xchg
stos
orb
cmp
aaa
sub
into
xchg
mov
sub
stos
test
shrb
pop
data16
adc
enter
in
fs
sub
xor
lret
mov
dec
dec
mov
jmp
jno
jmp
sub
jbe
xchg
lock
pop
addr16
in
cmp
adc
imulb
or
jnp
or
inc
or
xor
into
add
dec
xchg
lods
mov
sub
and
fstl
xlat
ss
leave
out
inc
mov
and
mov
dec
scas
icebp
mov
mov
stos
ss
mov
out
daa
rsqrtps
or
inc
sub
jge
hlt
ljmp
inc
jg
mov
adcb
cmp
rcll
jle
jmp
push
aaa
pop
dec
push
fsin
cs
outsl
ds
pushf
jnp
in
shll
out
mov
jae
dec
xchg
xchg
sahf
push
xchg
sub
lock
pop
add
mov
cli
and
cmpsb
lods
enter
xor
lods
fnstsw
sub
insb
add
bnd
lea
mov
xchg
or
xadd
xadd
sbb
into
sti
and
lock
nop
dec
mov
mov
int3
and
inc
repz
in
inc
stos
mov
loopne
insb
scas
dec
xchg
xor
hlt
inc
add
shrl
or
pop
fcoms
push
stc
push
xchg
aam
subb
push
sahf
dec
aad
add
jle
mov
cltd
mov
sub
aaa
mov
pushl
adc
gs
stc
cmc
jnp
out
ljmp
or
cmpsb
daa
inc
out
ret
fstpt
lods
mov
ror
jl
sub
xchg
jle
mov
or
dec
mov
in
mov
xor
repnz
mov
aad
mov
mov
pop
pop
lods
int
leave
mov
xchg
pop
dec
push
aaa
call
pop
ret
xor
cmp
stc
inc
mov
push
lcall
dec
xor
imul
mov
stc
adc
test
lea
sbb
cmp
mov
int
les
icebp
bound
xchg
gs
cmp
gs
sub
inc
cmc
in
cld
and
cmc
mov
mov
xor
adc
lea
and
push
dec
cmp
in
or
push
pop
fiaddl
sti
jnp
pusha
push
sbb
and
xor
xor
xchg
push
mov
push
or
daa
sub
in
xchg
xor
sbb
fadd
loop
xlat
gs
jo
or
or
testb
movsb
jae
mul
iret
stos
icebp
incb
cld
mov
iret
ja
or
mov
jnp
icebp
lret
notb
mov
xor
dec
inc
fiaddl
jge
xchg
xorl
loopne
popa
in
xor
dec
jecxz
mov
mov
jns
xor
push
push
dec
mov
sbb
std
sbb
jb
and
ret
pop
mov
dec
jbe
sbb
xchg
scas
sbb
pusha
insb
aad
push
push
cmp
xor
test
and
in
imul
cmp
movsl
loop
outsb
sbb
fildl
push
fildll
add
pop
jne
call
mov
and
add
shlb
cmpsl
ret
jae
shrl
mov
mov
mov
xchg
push
xor
mov
das
add
std
int
xchg
xlat
mov
mov
xchg
mov
pop
aad
push
jnp
leave
or
push
lcall
imul
add
mov
and
xchg
test
ljmp
mov
aaa
xor
test
or
xchg
lock
cmp
adc
jno
pop
dec
roll
lcall
jg
sbb
add
sub
cmpsl
cmc
cmp
pop
int3
adc
je
mov
stc
sub
fsubs
cmp
lods
es
cmp
mov
cwtl
pop
jb
xor
stos
lea
cmpsb
dec
cld
movsb
mov
push
js
cmpsb
imul
imul
aam
inc
adc
pop
jecxz
pusha
roll
imul
subb
cmpsb
mov
testb
shrl
pop
xchg
pop
mov
movsl
jae
sub
fwait
xchg
xor
in
xchg
fmull
aaa
sahf
gs
mov
add
js
xor
sub
fimuls
mov
xor
push
in
pop
dec
adc
mov
sbb
call
lret
ljmp
fcmove
stos
daa
xlat
mov
fcmovnu
sbb
xor
lods
jmp
imul
push
ljmp
cmp
jbe
lret
jne
push
test
jno
icebp
jl,pt
cmp
inc
push
pop
push
sub
divl
in
fs
mov
iret
and
outsl
push
sub
cmp
scas
stos
push
push
lcall
adc
dec
push
scas
mov
mov
sub
repnz
jmp
lods
xor
je
std
pusha
inc
or
inc
sbb
jno
mov
pop
jno
lahf
mov
cltd
or
push
and
enter
xor
outsb
in
cmp
inc
adc
pop
push
int
push
test
iret
inc
mov
ficoms
inc
daa
ds
mov
add
iret
aaa
shrb
push
out
rcrl
add
pusha
dec
lods
pop
and
mov
dec
xlat
int3
stos
mov
std
adc
scas
shll
leave
cltd
scas
inc
or
leave
xchg
sub
in
pop
movsl
sub
jle
hlt
cmp
cmp
dec
sbb
xchg
dec
clc
adc
inc
and
outsl
leave
fisubrl
jmp
push
pop
jo
adcl
mull
pushf
sub
insl
mov
pusha
lcall
or
adc
ljmp
dec
adc
rcrb
divl
cmp
movsb
or
je
mov
movsl
stc
ret
xchg
insb
mov
je
add
dec
push
js
pop
shl
lahf
js
ret
inc
sbb
icebp
cmpsb
ljmp
dec
mov
in
loopne
or
js
shll
imull
mov
jmp
mov
daa
cld
mov
lret
inc
inc
outsb
inc
out
sti
push
sarb
ds
mov
notl
addr16
mov
jmp
mov
jne
pop
adc
xor
ss
pop
or
mov
mov
ret
add
sbb
int
scas
hlt
aaa
adc
stos
sbb
popa
cmp
or
jecxz
jg
inc
std
mov
loopne
inc
cmp
mov
inc
xchg
dec
in
push
or
cs
sbb
enter
xchg
mov
int3
cwtl
into
nop
pop
fldcw
pop
insb
int
mov
push
cltd
cwtl
xchg
dec
scas
sti
and
fsubr
outsl
pop
mov
add
mov
mov
xor
stos
pop
dec
inc
gs
jmp
test
movsl
mov
pop
sub
mov
add
in
divl
mov
scas
outsl
sti
push
add
add
ror
jae
lods
xchg
jp
negb
add
pop
out
fstp
addl
fcomps
mov
shll
outsb
loop
inc
xchg
testb
xlat
adc
popf
mov
insl
rorb
subl
enter
sbb
jb
xchg
icebp
sbb
jae
push
movsb
incb
lods
enter
les
leave
es
add
daa
test
out
iret
sbb
out
inc
mov
fists
aaa
lahf
fcmovnu
jl
iret
mov
and
add
jecxz
or
jle
mov
loope
sub
push
mov
popa
add
mov
stos
outsl
xchg
mov
loope
mov
sbb
inc
das
ficoms
jno
dec
movsl
cmp
ja
xchg
add
subb
enter
sete
dec
cmpsl
fcompl
loope
adc
jle
xor
icebp
cmpsb
lods
mov
movsb
adc
dec
adc
adc
insl
mov
mov
in
outsb
jnp
xor
lcall
xchg
add
loop
popf
stc
hlt
das
push
testl
dec
ljmp
push
and
es
jle
mov
in
jge
or
roll
cmpsl
out
pop
cli
push
mov
adc
cld
and
cs
in
pop
push
sbb
mov
into
xor
pop
jmp
lods
mov
or
adc
adc
or
shr
or
mov
je
jecxz
xchg
jge
inc
shl
data16
movsl
push
mov
ficoms
xchg
lods
shrb
fst
pop
cs
xchg
add
ds
xor
sub
fbld
pop
stos
aad
adc
xchg
ficoml
pop
dec
lea
lahf
clc
add
and
mov
inc
mov
rorb
dec
xchg
xchg
stc
rclb
or
add
sub
xchg
pop
testb
inc
jmp
or
pop
xchg
not
inc
mov
les
mov
enter
outsb
ficoml
outsl
sbb
xlat
filds
dec
std
fwait
ret
or
mov
push
fcomps
jae
inc
enter
jno
jae
int3
rcrb
sub
mov
icebp
add
and
shlb
dec
mov
push
mov
nop
aaa
mov
jns
or
imul
sub
jmp
add
dec
dec
inc
stos
pusha
xlat
popf
add
sub
popa
in
jno
jne
push
movsl
sub
insl
lods
cltd
dec
popa
jb
mov
fdivrp
xor
mov
jns
lods
enter
movsb
frstor
je
shll
or
pop
repnz
inc
scas
dec
incl
mov
dec
mov
adc
xor
es
rclb
cwtd
push
cmp
popa
ret
divb
mov
push
out
add
call
push
mov
fsubl
dec
cltd
dec
xor
jmp
mov
mov
or
rclb
jge
pushaw
cmpb
and
inc
out
push
shlb
syscall
inc
movsl
and
xchg
leave
cs
jns
mov
push
jns
or
mov
or
and
out
mov
ss
outsb
decl
out
jne
pusha
inc
xlat
sbb
mov
les
mov
push
push
xor
mov
les
pusha
jnp
lods
xchg
mov
inc
stc
repnz
lods
fsubr
notl
sub
sbb
iret
jmp
pop
mov
mov
in
testb
addl
stc
sub
jnp
pop
cmp
sub
cwtl
pop
pop
lea
shll
adcb
mov
or
loopne
cli
push
pop
cmc
adc
cmpsb
push
push
dec
int
icebp
scas
mov
outsl
incb
push
fstpl
xchg
sub
or
add
sbb
push
leave
mov
push
add
rorl
jo
dec
repz
cmp
xchg
add
mov
idivl
test
into
dec
jae
xchg
fwait
xchg
orl
popa
xchg
lret
addr16
outsl
push
daa
fdivrp
iretw
adc
jl
out
inc
mov
mov
iret
scas
inc
jb
xchg
in
pop
dec
sub
insb
dec
pop
xchg
movsl
dec
sarb
jno
sti
push
outsb
mov
dec
sarl
xor
adc
leave
push
jae
mov
mov
and
dec
add
mov
movsl
mov
jecxz
out
rcl
dec
push
in
mov
testl
xor
movsb
mov
fstpt
int3
xor
and
or
sbb
into
mov
lret
pop
xor
or
cli
pop
clc
in
dec
divl
loop
or
mov
mov
jb
fcompl
adc
push
mov
sub
jnp
fs
push
sub
imul
xor
cli
mov
scas
repz
enter
aam
fstp
add
inc
test
mov
cli
adc
nop
out
mov
jb
mov
jp
popa
rclb
idivb
adc
int
shll
lods
ja
xor
cmpsb
mov
out
sub
jne
xlat
mov
aaa
xchg
xor
xchg
out
out
stc
out
je
mov
push
push
or
cld
sarb
dec
mov
subb
sub
or
pop
shlb
pusha
fisubs
or
cli
inc
xchg
lea
mov
mov
sarl
incl
popa
or
mov
adc
push
jle
inc
cli
mov
addr16
push
cmp
mov
mov
ficomps
outsl
hlt
aam
sbb
aad
lcall
dec
xchg
ljmp
std
in
push
push
inc
arpl
lds
hlt
in
adc
pop
insl
adc
mov
jne
mov
pop
xor
adc
jecxz
mov
dec
xchg
adc
sbb
rorl
imul
and
dec
inc
popa
sub
mov
lock
test
push
xchg
mov
mov
jnp
sbbl
daa
lods
push
pop
insb
push
enter
push
mov
mov
jl
loop
scas
push
xlat
mov
mov
pop
jo
lods
push
adc
cmp
in
xchg
cwtl
jnp
ljmp
arpl
dec
mov
cwtl
cld
gs
out
popf
popf
push
xchg
call
push
gs
or
jl
mov
nop
and
testl
inc
pop
jp
daa
xlat
jle
and
jae,pn
jecxz
mov
int
in
push
je
mov
dec
pop
add
mov
jmp
xchg
mov
fmul
add
dec
cmp
push
xor
sbb
insl
leave
push
sbb
imul
lods
cmc
cmp
sbb
push
test
mov
insb
push
cmp
sbb
inc
aad
mov
jmp
sbb
cld
pusha
jg
xchg
inc
pop
pop
mov
cmp
dec
inc
adc
jno
add
push
mov
aaa
xor
xor
aam
and
popa
mov
sbb
mov
rcl
test
xor
push
xor
inc
push
lahf
enter
cmpsl
out
adc
das
into
ja
lods
mov
dec
std
pop
fmulp
repz
imul
jnp
mov
and
out
pusha
les
xor
cld
rorl
mov
iret
ror
arpl
pop
lret
in
imul
lret
ret
mov
push
das
push
sbb
ds
mov
jbe
lods
sub
test
es
mov
xchg
pop
add
and
lcall
cld
jno
push
scas
push
int3
jp
call
pop
push
push
push
fstps
lahf
in
push
mov
nop
insb
xchg
mov
je
dec
rcr
rcrb
push
stc
shrb
ds
pop
leave
fimull
fiaddl
xchg
adc
insb
popa
int
ja
push
mov
scas
pop
add
out
mov
shll
scas
fcmove
sbb
lret
fwait
cwtl
or
xor
les
adc
and
aas
dec
dec
mov
xlat
call
gs
dec
cli
addb
clc
xchg
jmp
rolb
aas
mov
adc
cwtl
sbb
sub
pop
push
arpl
xchg
add
out
enter
cmp
repz
jp
sub
clc
sub
or
jge
cmp
in
mov
fdivs
test
lcall
fstl
xchg
ljmp
enter
add
lcall
insl
sti
pop
lea
lods
mov
add
cltd
sahf
push
dec
push
repnz
mov
lret
mov
fwait
xchg
cmc
fistpl
or
xchg
cltd
push
shlb
sub
ror
or
data16
cmp
gs
cs
bound
dec
dec
xchg
gs
iret
mov
je
cmp
js
in
fnsave
sbb
ljmp
imul
outsl
jns
loop
lret
jbe
in
insl
xchg
lret
xchg
dec
adc
ss
aas
or
add
cs
jo
aaa
imul
and
cli
push
addr16
aam
xor
in
ds
repz
push
mov
stos
pop
scas
cli
mov
lcall
stc
mov
bound
pop
jle
xchg
aaa
or
negl
jae
pop
and
pop
xchg
adcb
mov
loop
adc
xchg
daa
cmp
mov
and
imul
lock
sbb
and
add
loopne
mov
mov
std
pop
sub
pop
inc
hlt
icebp
ret
int
pusha
out
loopne
add
imul
fbld
mov
or
rcrb
xchg
dec
jg
mov
lock
loop
test
out
movsl
dec
lods
fldl
sub
lret
lods
out
xor
and
cltd
add
roll
xchg
sub
fidivrs
in
inc
ljmp
add
iret
into
ss
orb
repnz
lods
mov
mov
xor
inc
jbe
stc
fmul
jg
fsubrl
stos
lods
call
cli
mov
mov
pop
movsl
jns
mov
test
imulb
xchg
outsl
pop
pop
sti
repnz
pop
popa
xor
outsl
outsb
dec
xchg
sub
nop
lds
push
inc
pushf
jmp
iret
leave
test
mov
insb
cs
sbb
shrl
mov
mov
insl
sbb
fidivs
jmp
sti
es
and
hlt
add
ss
jg
int
add
cli
fsts
sbb
je
jmp
push
cmp
outsb
adc
jo
lods
xorl
js
lret
or
pop
jg
aas
add
mov
out
sbb
jbe
fmuls
xchg
pop
arpl
ficoml
jecxz
lret
push
int
mov
lret
add
and
das
cmpsl
and
add
insl
mov
and
jnp
dec
push
pushf
sbb
into
add
lods
ja
ror
lods
addl
fsubrs
mov
es
and
fdivr
cltd
push
ja
icebp
pop
sub
mov
mov
cs
push
stos
js
dec
test
adc
mov
adc
push
fs
sbb
sar
and
jbe
ret
and
mov
fiaddl
add
pop
std
insl
push
xchg
in
pop
mov
mull
insl
dec
xchg
mov
mov
sub
inc
sbb
das
cwtl
xchg
cmp
mov
mov
pop
fs
xchg
adc
mov
dec
mov
dec
std
jmp
daa
mov
int3
inc
daa
inc
lcall
adc
es
add
loope
or
hlt
pop
pop
pop
ret
fdivl
cmpsl
js
repnz
ja
fsts
jnp
loopne
xor
movsb
add
xorl
adc
orb
cmc
orb
jmp
dec
mov
dec
ret
test
jne
xchg
int
and
jmp
xor
aam
xor
xor
fmull
sub
xchg
jle
push
lahf
jge
dec
mov
std
and
cmp
xchg
fs
pushf
clc
mov
in
jle
imul
jg
sbb
clc
lcall
int3
addl
int
insl
aad
rorb
std
jne
leave
lea
rcrl
mov
push
in
jp
rcrb
xlat
sti
outsb
mov
les
cli
es
mov
inc
fs
push
jp
adc
add
dec
pop
dec
icebp
cwtl
jno
mov
lock
rcrl
sbb
out
les
pop
and
fistps
inc
ljmp
push
lret
jp
mov
lcall
mov
and
sub
dec
divl
std
cmpsb
mov
pop
std
cmpsl
mov
fld
fnstenv
push
aas
dec
cmp
out
inc
movsl
rol
adc
mov
popa
push
test
or
adc
stos
dec
xor
dec
and
in
jne
inc
out
stos
xor
fstp
cmc
addl
cmp
loop
add
test
cmp
je
sub
repz
testl
popa
in
cmpsl
mov
sub
nop
adc
add
cmp
sbb
fs
cwtl
nop
outsl
dec
les
cmp
sarl
int3
xchg
cwtl
or
and
dec
jl
ljmp
fdivs
dec
test
add
stc
or
lret
fimull
push
adc
xorb
sub
cld
pop
sarl
pop
push
inc
jbe
mov
negb
or
lods
shll
scas
jno
addb
push
mov
scas
stos
imul
inc
sti
or
add
xchg
push
pop
popf
cmp
mov
call
push
mov
or
ret
popa
pop
xchg
in
int
mov
cmpb
shrb
lcall
mov
sbb
in
adc
je
cwtl
xchg
fstl
mov
out
call
movsb
mov
scas
movsb
and
dec
jg
insb
movsb
outsl
in
cmp
mov
push
fisttpl
push
mov
xor
pop
out
ret
mov
mov
dec
xchg
push
cwtl
out
popf
sub
clc
jne
mov
outsb
lahf
insl
stc
pushf
lods
gs
std
rcr
lods
fld
sub
mov
stc
mov
jp
movsl
out
cwtl
lret
pop
and
imul
or
inc
icebp
popf
nop
jae
out
std
outsl
add
fs
nop
sbb
jnp
bound
call
push
inc
xor
mov
ds
add
mov
xor
cmp
repnz
and
in
add
in
dec
add
mov
dec
lods
xor
into
sahf
xor
mov
mov
push
push
aaa
cmpl
and
mov
push
fstpt
xor
mov
push
push
mov
icebp
mov
add
int3
rorb
mov
cwtl
call
js
push
sub
cmc
add
cmp
mov
jge
sti
xchg
ret
push
dec
adc
pop
dec
xchg
stos
mov
insb
fcompl
xor
cli
enter
daa
xor
out
sti
fcmovb
aaa
repz
daa
push
or
mov
sarb
jmp
popf
gs
imul
sarb
into
xchg
sbb
pop
mov
pop
sub
mov
jns
xlat
jp
push
cmpsb
addb
cmp
int
sub
dec
das
cli
rcr
mov
movsl
add
insl
push
push
add
mov
movsl
shrl
sub
jecxz
dec
frstor
aas
xor
fmul
jl
xchg
stos
int
xchg
inc
mov
sbb
lock
sub
sbb
add
in
xor
into
cmp
ds
xor
out
xor
lods
daa
cmp
fs
push
stos
adc
jg
adc
mov
scas
inc
jb
fcmovnu
add
adc
push
repnz
push
scas
mov
mov
movsl
clc
and
mov
push
add
aad
loope
mov
xor
dec
in
fsubs
xchg
out
push
pop
pop
loopne
es
insb
fld
add
xor
movsb
cmpsl
jnp
cmp
iret
inc
xchg
sub
sub
shl
mov
mov
adc
data16
hlt
and
nop
ja
sarl
mov
sahf
cltd
or
xchg
stc
push
lcall
outsl
int3
cmc
lcall
cmp
lcall
outsl
imul
jmp
inc
add
sub
imul
xor
or
les
cltd
push
xor
push
xor
mov
insl
jns
xor
movsb
jl
sbb
out
repz
gs
cmp
jecxz
cmp
ret
jp
outsl
or
aam
mov
and
movsb
xor
iret
add
cmp
pop
imul
pop
push
imul
xor
int
aas
inc
fcom
xchg
mov
clc
out
push
daa
iret
mov
push
lock
add
push
cmp
cs
cmpsb
lock
subl
fbld
xchg
jb
mov
mov
stc
pop
mov
test
jmp
je
mov
push
orb
scas
test
outsl
xchg
jno
inc
xlat
in
xchg
dec
aaa
repnz
cmp
cmp
adc
add
mov
push
sbb
ljmp
inc
cmpsb
mov
mov
jnp
push
adc
sbb
inc
shrl
lds
int3
dec
xchg
insl
push
mov
shlb
icebp
ret
mov
lahf
xchg
xlat
xchg
pop
pop
shr
inc
test
cmp
scas
std
push
pop
into
std
push
cmpsl
and
pusha
mov
lcall
mov
scas
add
stc
adc
cli
test
or
inc
sub
sbb
arpl
xlat
sbb
into
xchg
rolb
jmp
adc
cmpsl
rcll
imul
cmc
shl
in
ss
movsb
mov
cmpb
adcl
mov
pop
jns
andb
and
dec
movsl
imul
mov
ret
shlb
aas
mov
int
add
jge
mov
sub
sbb
or
hlt
cltd
or
enter
fsubs
push
shrl
mov
and
fistl
xor
push
mov
fs
pop
add
mov
pop
or
outsl
inc
add
rol
mov
xor
fwait
add
pop
or
xchg
fdiv
mov
dec
xchg
pop
roll
pop
dec
in
popa
test
scas
push
in
cmp
arpl
add
or
mov
enter
pop
dec
pusha
decb
sbb
cmp
shll
inc
and
sub
fidivs
les
pushf
mov
sbbb
stos
cmpsl
xchg
push
inc
popf
sub
stos
in
inc
jae
sub
fs
cs
in
pop
aas
aad
rorl
pop
orl
ja
add
stos
push
push
repnz
mov
ret
push
jne
sbb
jno
dec
in
das
and
ret
std
cli
mov
mov
aad
inc
xchg
sub
adc
fcoml
adc
adc
lds
pop
cwtl
mov
imul
add
jne
fs
mov
sbb
cwtl
xor
and
cwtl
sti
cmp
shlb
sbb
lods
int3
imul
push
mov
mov
mov
fadd
shlb
rorl
and
pop
xchg
xchg
lea
jb
push
and
xchg
add
lcall
push
cmpsl
lds
xchg
sub
jnp
sbb
cmpsb
inc
bound
sarl
das
loope
popa
mov
pop
mov
aas
imul
push
dec
pop
ja
cli
icebp
jmp
jno
in
cltd
xor
cltd
dec
sub
in
ljmp
push
xor
mov
cmpsb
or
cmp
test
loop
xchg
adc
or
adc
cld
mov
sahf
add
out
xchg
add
xchg
aas
pushf
into
cwtl
cmpsl
repz
roll
dec
ljmp
xor
fmuls
xchg
push
dec
enter
out
std
addr16
and
or
inc
jns
pop
push
xchg
mov
divl
insl
decl
imulb
jae
dec
int3
out
jo
test
push
cli
arpl
jb
sbb
sub
loopne
testb
and
or
mov
push
loopne
out
in
loopne
rorb
mov
jmp
into
lods
adc
lods
jp
jns
lods
jns
dec
xor
fldcw
outsl
dec
test
subb
sub
leave
xchg
push
shll
insl
cs
je
jge
imul
pop
imul
cwtl
lret
insl
mov
daa
test
add
mov
jno
and
daa
cmpsl
fcmovnbe
jae
fisubl
lock
in
fnstsw
mov
or
outsl
pushf
jmp
pop
test
pop
sbb
jp
lods
lock
js
repnz
aam
scas
scas
sarl
lret
mov
jo
gs
push
and
in
sub
sbb
lock
fld
inc
add
fwait
pop
out
push
push
cmp
add
lahf
je
pop
and
sub
test
jp
in
pop
js
inc
sbb
loope
sub
imul
js
or
insb
mov
cli
mov
sub
scas
cmp
aam
insl
loope
xchg
mov
cmc
mov
fldenv
aaa
or
aad
insl
or
call
in
sbbb
testl
enter
daa
add
cs
dec
push
pop
mov
jg
aad
pop
push
mov
cmp
xor
test
in
jae
inc
xchg
outsl
push
lds
in
jmp
pop
jno
sub
jnp
adc
pop
iret
xchg
mov
std
cmpsb
daa
rorl
mov
addl
sbb
mov
xor
insl
les
mov
mov
inc
movsl
jg
pusha
movsl
xchg
es
stc
sbb
xor
leave
stc
jbe
cmp
ret
push
pop
and
adc
daa
sti
jae
mov
mov
je
lods
push
insl
xchg
ret
aaa
mov
xlat
add
leave
out
mov
lahf
pop
add
test
mov
mov
sbb
inc
sbb
xlat
mov
cltd
test
pop
jno
sbb
clc
imul
sub
pop
xchg
stos
jmp
pop
sbb
lahf
js
ficoms
jns
jno
sbb
cmp
in
repnz
mov
loopne
lods
inc
jge
jg
inc
mov
lock
sub
pop
add
iret
mov
pop
push
push
std
add
ds
mov
insb
sbb
adc
push
popa
xorl
mov
outsb
mov
lret
add
jae
test
cwtl
pop
xchg
test
or
rorb
daa
pushw
sti
inc
std
sbb
popa
cli
adc
leave
sub
std
fildl
gs
out
mov
mov
call
lret
or
xorps
dec
push
fs
inc
lahf
enter
outsb
iret
and
push
push
fs
data16
loopne
fwait
jp
lock
dec
cmc
add
and
lcall
out
arpl
popf
add
xlat
mov
cmp
jno,pt
jnp
sbb
mov
test
push
and
mov
cld
push
stc
jbe
inc
jo
mov
ja
stos
or
xchg
push
shr
adc
leave
xchg
cs
out
aam
cltd
lcall
fidivrs
sarb
mov
dec
mov
xchg
xor
and
or
jecxz
mov
jne
cmp
in
mov
aaa
jecxz
jecxz
xor
jg
sub
pop
fsubrp
daa
stc
jge
fwait
int3
dec
mov
jns
add
add
stos
or
movsb
shlb
push
push
pop
push
rcrb
das
add
sbb
int3
add
into
into
lods
call
inc
jge
sahf
xchg
inc
xchg
cmp
push
xchg
pop
jmp
cwtl
lock
jg
cmp
orl
cmp
mov
pusha
jge
sbb
jp
into
and
por
inc
cmp
mov
push
adcb
stc
jp
push
jno
jo
mov
dec
dec
or
add
mov
mov
inc
scas
push
jb
roll
das
cmpsl
push
insl
add
and
sbb
or
xchg
or
mov
adc
cmpsb
out
xchg
pop
inc
sub
dec
dec
in
cmpb
pop
dec
or
mov
pop
stc
insl
push
insb
cmp
insb
ret
mov
fs
sbb
insb
mov
ja
sub
add
inc
das
sub
ret
mov
or
scas
data16
shrb
sarl
test
fwait
insl
outsb
inc
xor
fs
mov
fs
sub
pop
shl
jb
lcall
jg
out
jl
outsl
test
pop
adc
add
mov
hlt
in
lret
adc
or
mov
xlat
add
ficomps
js
dec
daa
das
and
xchg
cmp
add
daa
scas
mov
fstpl
divl
dec
mov
xchg
arpl
sbb
mov
aad
fs
dec
fcomps
or
shlb
xor
pop
insl
mov
cmp
cmc
mov
or
push
sub
cmp
and
sbbl
mov
push
sbbb
add
dec
mov
push
mov
push
push
insb
xchg
fdivl
repz
lahf
adcl
ljmp
xchg
sbb
add
xlat
clc
mov
and
inc
cli
insb
sub
fiaddl
cmpsl
lahf
arpl
in
clc
mov
sub
cld
add
stc
movsl
std
xchg
cmpsb
fs
out
les
mov
jno
inc
ret
mov
mov
mov
dec
xor
fwait
and
mov
movsb
mov
aam
fistps
insb
inc
ret
stos
push
pop
les
icebp
add
test
pop
push
in
popa
ljmp
mov
mov
jbe
sti
mov
fdivr
sti
add
pop
imul
in
or
pop
fnsave
lock
xor
in
sahf
and
sub
call
mov
scas
pop
fdivrs
and
dec
and
jne
iret
inc
rol
inc
add
iret
dec
push
add
xchg
inc
popf
icebp
jecxz
movsb
cmp
test
mov
and
sarl
out
add
mov
and
sub
sahf
pop
cmp
adc
dec
ljmp
push
leave
test
pop
scas
or
dec
jg
outsb
or
lret
je
bound
divb
cmp
loopne
roll
push
je
popa
jmp
lock
sub
int3
sahf
filds
repnz
shll
das
adcb
fbld
pop
sbb
outsb
adc
or
out
jge
ret
fcoms
mov
push
pop
push
cld
test
nop
loope
dec
push
push
out
mov
inc
lea
and
imul
add
loop
sub
sti
cmp
mov
sub
and
add
bound
int
cltd
aam
sarb
leave
add
lahf
xlat
idivl
mov
xor
sbb
mov
push
test
pop
adc
jl
cmp
fwait
stos
fisubs
rclb
ds
sub
daa
repz
pop
inc
add
xor
sbb
push
neg
sbbb
jns
cs
ljmp
push
and
loopne
jbe
out
xlat
scas
adc
push
outsl
jge
fsubrl
lcall
stos
pop
xor
lret
ret
movsb
std
mov
push
sbb
xchg
adc
ss
paddsw
sarb
repz
xor
repz
pop
add
adc
test
sar
in
adc
std
and
int
and
xchg
aam
sub
mov
loope
mov
add
push
cmp
xchg
fidivrs
aas
loopne
inc
out
movsl
and
jnp
inc
push
xchg
push
push
mov
mov
sbb
adc
ror
or
jbe
mov
pop
sub
hlt
fisubrl
data16
test
mov
pop
popf
fadd
repnz
xchg
je
lcall
stos
mov
xor
jb
pop
movsb
cli
sbb
push
lret
mov
mov
xorb
xor
mov
dec
inc
cmp
pop
jle
mov
dec
adc
xor
out
adc
dec
push
mov
sub
movsl
mov
dec
fstpt
mov
inc
jne
dec
outsb
push
sub
call
pusha
insb
inc
or
js
dec
lcall
push
adc
mov
pusha
jl
inc
jl
adcb
leave
arpl
or
cld
push
xlat
fstpt
push
les
clc
rcrl
in
int
or
orb
decb
pop
scas
jl,pn
roll
mov
adc
xchg
movsb
scas
xchg
sbb
ret
nop
mov
test
lds
in
scas
and
inc
fucompp
push
out
jmp
negl
mov
fcompl
or
xchg
test
test
stc
cld
xorb
enter
mov
ret
orl
dec
sarb
adc
cmpsb
cwtl
jg
pop
inc
sbbl
outsl
mov
orl
in
sub
aad
and
sbb
mov
xchg
cltd
in
adc
or
pop
xchg
sti
cmp
frstor
adc
cmpsb
sahf
adc
cltd
shrb
je
push
aaa
mov
femms
outsl
xchg
das
xlat
pop
nop
sub
dec
add
mov
ret
daa
mov
push
mov
fnstcw
mov
repnz
out
insl
in
orb
aad
jmp
lock
sub
push
orl
stos
mov
sub
and
lock
sbb
and
dec
emms
sub
adc
cmc
lea
push
cmp
sbb
jmp
std
popa
enter
dec
hlt
jb
outsl
imul
in
lcall
movsl
out
adc
push
sub
out
jb
xchg
nop
int
xchg
into
arpl
inc
pop
adc
jo
insb
xchg
mov
fbld
cltd
incl
lahf
popf
out
sti
out
and
outsl
push
xchg
push
jb
jp
sar
adc
mov
push
pusha
pop
xchg
iret
rol
shr
adc
xchg
cmc
pop
outsl
in
shrl
push
jo
jo
jns
fld
addb
fsubl
xchg
push
ljmp
pop
xchg
sub
mov
and
inc
scas
inc
outsb
xor
add
adc
adc
mov
dec
add
je
mov
out
xchg
cld
bound
popa
paddb
fcmovne
addr16
push
push
inc
cmp
fndisi(8087
push
inc
dec
mov
inc
xor
inc
sub
lret
les
mov
in
lea
and
lret
or
add
xchg
pop
popa
mov
fadds
fwait
pop
jo
into
cmc
gs
fndisi(8087
and
addr16
ficomps
cmp
adc
outsb
arpl
jo
outsb
sarl
xchg
repz
mov
shrl
fdivrl
sub
das
hlt
pop
shlb
push
mov
clc
push
add
int
mov
mov
int3
test
imul
call
shll
cmpsl
adc
pop
sbb
out
add
out
jne
cmpsl
hlt
xlat
sub
sub
mov
mov
xchg
subl
jo
cmp
sahf
mov
adc
int
roll
and
pop
mov
mov
aad
adc
popa
mov
ja
xor
cwtl
pop
mov
xor
leave
jbe
sub
rorb
faddl
sbb
pop
mov
in
cwtl
stc
loop
lret
inc
xchg
imul
nop
xchg
mov
ss
out
inc
inc
loopne
mov
incb
push
pop
es
mov
mov
or
mov
adc
test
clc
cs
stos
lods
mov
mov
leave
jge
inc
inc
cwtl
popa
sub
in
sbb
jl
xor
xchg
jne
jl
mov
dec
js
out
inc
mov
in
add
jne
or
mov
push
pop
mov
loopne
dec
out
mov
sub
test
test
out
mov
jo
add
mov
and
imul
ds
push
adcl
ss
and
dec
ljmp
jle
movsb
ss
stos
ljmp
lret
inc
dec
add
ljmp
jne
dec
int
out
dec
sub
jnp
xor
aam
js
inc
mov
and
mov
sub
shl
pop
lds
dec
pop
mov
mov
es
imul
push
jg
push
repz
in
fs
push
shlb
sub
dec
insb
test
xchg
adc
cli
mov
add
in
inc
xor
and
sar
bound
shlb
mov
push
dec
mov
cmpsl
shlb
aad
mov
jp
mov
mov
xchg
dec
inc
int
cmpb
xor
jnp
mov
push
and
adc
sbb
icebp
or
or
lock
das
flds
add
push
dec
jg
cli
pop
mov
adc
xchg
iret
mov
data16
pop
mov
pop
in
mov
sarl
nop
and
rcl
xor
cmp
sbb
and
les
sbb
pop
inc
and
ds
mov
push
outsb
dec
push
in
arpl
lock
xchg
mov
jmp
ret
mov
test
addr16
mov
push
les
xor
xor
fninit
or
in
sub
jg
stc
shlb
ret
xor
test
in
enter
jb
pop
mov
pop
or
sahf
push
decb
cmp
imul
nop
div
out
push
mov
fs
xor
call
sti
adc
push
jge
lret
sahf
bound
test
cmc
mov
adc
pop
pop
pop
mov
adc
xchg
adc
push
out
outsb
fwait
jnp
xchg
inc
fnstcw
pop
push
enter
jb
stc
fadds
mov
xchg
insl
push
mov
xor
jg
ss
pop
add
pop
mov
inc
cmpsb
rorb
into
orb
xor
dec
cmp
int
cltd
inc
in
jg
or
aam
fidivl
jbe
pop
cmpsb
mov
push
sbb
data16
sbb
fst
push
in
pop
loope
pop
and
adc
in
push
sub
aad
out
push
lods
outsb
cmp
and
es
sbb
cwtl
movl
in
in
mov
inc
push
shll
mov
sub
ret
add
leave
cltd
or
inc
std
dec
mov
xchg
outsl
sahf
jg
data16
mov
add
aaa
and
dec
cmp
subl
fnsetpm(287
imul
stc
inc
sbb
in
pushl
mov
sbb
inc
repz
mov
push
ret
sahf
inc
mov
sbb
mov
push
rcrb
lods
daa
push
mov
xchg
mov
mov
leave
sub
mov
dec
mov
roll
iret
aaa
push
pop
imul
data16
xor
jno
cmc
sbb
xor
push
or
mov
das
cmpsb
ret
inc
pop
mov
sub
mov
repnz
xchg
pop
int3
and
mov
or
cmp
std
push
xchg
aaa
cmp
adc
test
add
into
cmp
add
sti
add
mov
fnstcw
xchg
cmp
push
jmp
push
xchg
fsub
call
cmp
test
dec
cmp
fwait
mov
fstps
iret
adc
lea
add
stos
mov
cmp
cmp
dec
imull
xchg
mov
ror
jle
dec
push
mov
mov
pop
shlb
test
jl
lods
add
outsb
rorb
hlt
jmp
popa
daa
mov
int3
or
imul
and
hlt
test
pop
adc
out
sbbb
jle
adc
aaa
loop
inc
push
jge
jae
push
mov
mov
xor
insl
pop
mov
cmpsl
lret
ds
or
inc
std
cmp
test
or
adc
hlt
jb
cmp
cs
popf
add
ret
in
test
xor
decb
cltd
lods
cmp
rcll
roll
cld
jne
test
dec
xchg
jg
test
aas
icebp
roll
rcll
jecxz
in
adc
inc
pusha
push
sub
aas
lods
les
pop
add
pop
jb
dec
cmpsb
jno
fwait
aas
pop
popa
xor
cltd
jbe
sbb
push
jb
or
adcl
xchg
or
dec
mov
add
pushf
sub
pop
jg
jne
in
int3
jmp
pop
pop
js
pop
pop
lock
inc
push
popa
ljmp
hlt
and
sbb
icebp
adc
add
dec
sahf
in
inc
dec
pop
cmp
sub
pusha
fnstsw
lret
cmpb
idivb
inc
or
push
add
fsubrl
sahf
mov
push
jl
mov
jl
push
dec
ficomps
mov
sbb
xchg
jno
iret
into
adc
test
dec
rorl
bound
data16
mov
push
pop
cmp
imul
test
mov
adc
push
and
out
sti
shlb
adc
pop
mov
xor
in
mov
pop
adc
mov
jmp
mov
je
add
xchg
in
xor
loop
clc
pop
lock
loope
mov
lods
add
fsubrs
sahf
cmp
sub
cmp
push
in
pop
into
in
add
or
mov
ss
fwait
leave
aad
jno
mov
dec
fxam
cwtl
xor
ror
mov
lcall
inc
insb
mov
in
push
negb
mov
cmp
lcall
inc
sub
pop
jmp
adc
sti
scas
mov
mov
jns
sbb
popf
xchg
loop
icebp
push
jae
fadds
xlat
in
popa
dec
sub
out
mov
inc
ret
ret
xor
sub
mov
nop
xlat
inc
lods
xlat
orb
into
daa
jmp
and
pop
xlat
addr16
sbb
out
pop
icebp
mov
shlb
lahf
sub
dec
faddl
adc
insb
repz
test
and
leave
pop
xor
mov
push
icebp
cs
xchg
aad
call
inc
arpl
mov
cmpb
dec
movsb
and
xchg
bound
dec
inc
clc
inc
add
adc
xor
shl
xor
xchg
cmp
arpl
pop
fcomps
ret
scas
xchg
dec
cld
ret
mov
mov
jbe
lcall
push
jno
mov
lcall
mov
xchg
mov
push
xchg
shlb
addr16
lret
cltd
test
push
xor
jmp
mov
in
cltd
lods
mov
loopne
addr16
dec
outsl
cs
ret
xor
cs
enter
cmp
xbegin
stc
xor
mov
xor
jb
hlt
sub
xor
sub
addr16
sub
dec
push
cs
jl
or
lahf
sub
es
xchg
fildll
jno
mov
dec
mov
pushf
dec
daa
adc
or
cmp
mov
imul
push
ljmp
inc
lcall
shll
inc
push
std
fsubl
mov
dec
dec
and
xchg
jmp
scas
xchg
and
adc
aas
cltd
xchg
fstpl
inc
and
jae
in
sbb
xchg
jno
mov
rcrb
bound
fstp
push
idiv
in
mov
popa
or
add
hlt
push
les
ror
outsb
scas
test
int
xchg
mov
push
pushf
adc
add
lods
dec
mov
dec
xchg
push
xchg
js
rcr
leave
movsb
push
cltd
imul
dec
adc
dec
xchg
js
into
mov
xchg
add
popa
cwtl
xchg
sarb
int
sbb
or
push
enter
repnz
repnz
pop
adc
sti
sahf
pop
jb
xor
xorb
movsb
popf
mov
push
dec
lret
xchg
movsb
push
jle
mov
paddusb
enter
test
pop
daa
lcall
push
outsl
repnz
add
pop
out
cmc
out
neg
mov
add
mov
add
addb
insb
insb
es
lods
stc
jns
push
adc
pop
adc
mov
push
popf
rorb
jl
jecxz
gs
shlb
mov
inc
sahf
movsl
add
fcoms
clc
mov
jo
std
data16
inc
and
xor
sbb
call
adc
hlt
mov
fs
repz
cmp
cmp
loop
mov
dec
ret
loop
jge
sbb
sahf
jno
mov
imul
mov
shrb
mov
sbb
aam
int
rcll
aaa
stc
sbb
int
daa
fstp
rolb
dec
nop
cmp
push
mov
push
scas
sbb
mov
cmc
aam
or
xchg
xchg
mov
or
jp
out
bt
mov
push
cwtl
pop
nop
and
test
inc
pop
out
sub
adc
js
xor
cmp
mull
xor
inc
jmp
or
or
ljmp
mov
inc
and
xchg
lret
dec
cmpsb
dec
xor
mov
jb
cltd
dec
pop
insb
in
lret
pop
loope
inc
fsubrl
in
jg
jnp
sbbl
or
mov
pushf
mov
add
cmc
xor
imul
mov
test
push
xchg
cmpsb
gs
fs
sub
xchg
shll
cmpsl
cvttps2pi
pushf
pop
xchg
dec
mov
xor
test
test
in
jg
cli
jg
jge
das
pushf
sub
mov
andb
and
add
sbb
rolb
les
rcll
out
sbb
outsb
push
fildl
and
mov
inc
push
xchg
jecxz
sbb
mov
cmp
enter
sub
jge
jp
insb
and
cmp
roll
lea
mov
lret
sahf
outsb
popf
icebp
test
out
and
into
bound
arpl
test
cltd
imul
in
fcmovnu
sahf
cmpl
add
fcompl
hlt
out
inc
jo
ret
mov
cltd
push
pop
int
addl
dec
cmp
mov
pop
cmpsl
mov
mov
push
mov
jnp
mov
xchg
pop
ljmp
icebp
mov
xchg
ljmp
les
fistps
push
dec
xchg
pusha
test
mov
sbb
fwait
cmpsb
imul
sbb
outsl
mov
mov
cmpsb
dec
mov
popf
mov
sbb
sub
adc
or
aam
insb
fiadds
hlt
lcall
lds
imul
xor
into
mov
xchg
pop
int3
in
mov
jmp
and
lds
arpl
pop
negb
mov
fistpll
push
es
sti
fistps
sbb
jge
lods
jbe
or
cmpsb
cmp
aaa
adc
push
pop
test
xchg
aaa
out
cld
mov
sub
inc
mov
jbe
push
mov
adc
xchg
js
aam
mov
jecxz
sbb
pop
aas
add
cld
inc
cmpsl
es
cwtl
inc
mov
cltd
mov
jge
rclb
mov
mov
lods
dec
rol
arpl
outsb
pop
pop
imul
cld
add
jl
push
adc
inc
mov
xchg
orl
add
mov
jo
mov
push
outsb
pop
cli
mov
imul
sbb
mov
pop
repz
bound
pop
dec
push
jae
daa
or
cli
mov
mov
das
jl
not
and
mov
add
lea
idiv
mov
pushf
imul
mov
ret
cmp
and
test
sub
sub
lock
pop
and
mov
xchg
cmpsl
jb
ja
cwtl
cmc
dec
inc
scas
mov
rolb
pop
push
xchg
ret
xor
dec
xorl
shll
pop
adc
cmp
push
pmaxsw
lods
inc
into
mov
lahf
cmpsl
rorb
push
mov
lcall
mov
jb
and
pop
ds
sarl
push
xor
lret
lods
jg
xor
cmp
dec
push
fs
pop
sahf
sahf
imul
xchg
dec
imul
jle
adc
pop
loopne
cltd
add
int3
dec
and
daa
mov
imul
popa
mov
aas
pop
pop
aas
sub
ss
push
notb
xlat
in
and
test
pusha
push
and
addl
rol
pushf
fsubrp
cmp
sub
ljmp
inc
sub
loopne
inc
out
mov
call
cmp
xchg
dec
pop
cmp
dec
enter
loop
push
jl
pop
jne
test
cmp
stos
push
cmp
das
cmpsb
ret
rcr
lea
cmp
insl
inc
mov
and
mov
into
rol
push
cmp
cld
pop
cmp
les
repz
jae
nop
mov
bound
push
inc
je
fs
ja
xchg
dec
inc
xlat
fisttpl
stc
fstl
out
fidivrl
ret
fiaddl
pop
xlat
scas
lret
test
jo
mov
or
jecxz
sbb
outsb
cwtl
inc
push
sub
daa
notl
lahf
and
int
mov
xchg
cmp
pop
mov
mov
push
jnp
daa
iret
add
mov
mov
push
in
push
push
jnp
into
leave
ja
jmp
arpl
jmp
xor
xor
fnstcw
iret
lcall
sbb
adc
hlt
mov
mov
cwtl
stc
jl
xchg
icebp
enter
mov
aaa
jl
jle
cmp
test
shll
mov
dec
scas
sahf
and
in
and
mov
dec
mov
scas
mov
std
and
call
jecxz
add
sbb
sbb
test
adc
cmpb
dec
jmp
nop
jne
movsl
mov
int
sub
and
and
je
icebp
or
xchg
icebp
mov
mov
mov
mov
mov
lahf
sub
and
add
jl
xchg
and
sub
push
push
aaa
mov
dec
pop
pop
sub
test
in
jne
jno
fcomps
es
mov
mov
fsubrs
xor
cmpsl
pop
mov
mov
or
adc
pusha
mov
fnstsw
mov
and
test
out
in
mov
mov
and
pop
mov
xor
pusha
jo
sbb
xor
arpl
fsts
and
add
repnz
out
ret
sti
mov
xchg
imul
pop
dec
jne
pop
jp
pop
setge
xor
mov
mov
repz
and
inc
movsl
and
mov
shrl
int
pop
pop
test
cmp
in
sub
jbe
pop
pop
lcall
adc
inc
lea
sub
and
out
in
repnz
out
jmp
jne
inc
jle
jmp
mov
sub
stos
add
inc
fnsave
xchg
int3
ds
pop
lock
lret
mov
cmp
cld
mov
xor
sbb
push
and
cltd
movsb
aas
push
clc
cmp
mov
and
andnps
out
xor
dec
rcrl
xlat
push
ret
inc
cli
orb
and
cmp
sbb
add
fdiv
mov
jbe
add
jbe
imul
pop
arpl
fdivr
out
shr
repz
mov
test
outsl
rcrl
push
faddl
adc
push
pop
xorl
xchg
sub
ds
fbstp
sbb
loopne
lret
ret
xchg
xlat
rclb
into
aam
pop
in
in
test
sti
xchg
test
arpl
jno
imul
lods
lods
sub
push
out
mov
xor
cmpsl
dec
lcall
ret
arpl
add
data16
inc
pop
adc
jmp
je
jb
mov
pop
mulb
mov
dec
call
pop
pop
jnp
cwtl
or
mov
mov
mov
jle
and
xor
cld
inc
dec
cmpsb
outsb
in
and
rorb
ja
jmp
pop
cmp
and
sub
imul
mov
xchg
fisubrs
add
fsubrl
int
je
xor
aaa
repz
int3
and
outsl
jne
xchg
xlat
out
mov
cwtl
xchg
pop
and
popf
movsb
dec
jle
sbb
xor
add
movsb
sub
push
cmpsl
xor
mov
cli
mov
imul
cmpsl
adc
jne
popa
stos
out
add
sbb
popf
or
insb
mov
inc
or
mov
cmp
cmp
lret
push
mov
lcall
and
mov
mov
aaa
or
xchg
mov
or
mov
daa
jmp
lcall
push
mov
adc
jle
pop
bound
dec
shl
adc
out
aas
lcall
and
cld
stos
xchg
insl
cmp
add
or
jne
xchg
aam
insb
les
popf
xchg
and
fisubs
xchg
sub
push
shlb
sbb
rol
int3
fxch
inc
cmp
imul
nop
push
in
jne
pop
rcll
pop
add
es
sbb
test
lcall
stc
ss
std
out
mov
mov
mov
mov
idivl
test
jo
mov
jmp
mov
jbe
jecxz
push
test
push
jecxz
pop
ss
pusha
loop
popf
push
in
adc
aas
inc
jns
mov
pop
dec
pop
scas
cmp
inc
popa
into
push
mov
inc
xchg
push
push
fsub
int
test
call
insb
pop
xchg
push
pop
cmp
add
pushl
ds
xchg
push
mov
lret
adc
sbb
leave
lret
jl,pt
cmp
popa
jns
les
in
or
mov
into
xchg
push
je
lock
and
loopne
out
sti
sti
push
mov
push
loope
test
ds
sbb
or
das
sbb
mov
cmpsb
int
pop
movsl
pusha
popa
fsubrl
sbb
jno
xor
sbb
mov
sbb
sbb
mov
movntps
loop
jmp
push
pop
xchg
decb
jp
jl
ret
mov
pop
inc
gs
mov
pop
dec
roll
jnp
cs
data16
jne
hlt
out
cmp
sub
cmp
stos
int
rcrl
fwait
cmp
js
push
ja
loopne
inc
imul
aas
cmpsl
fs
aas
test
mov
mov
or
arpl
pop
push
repz
sarb
adc
sbb
pop
jecxz
sub
aad
gs
xor
fwait
lock
push
mov
inc
xor
jp
js
mov
jg
out
test
jb
cmp
hlt
daa
sbb
cmp
into
mov
push
ret
pop
popa
in
test
addl
frstor
test
hlt
and
adc
mov
dec
jg
lock
cltd
leave
lahf
pushw
push
out
push
push
add
or
nop
in
or
nop
mov
test
mov
mov
loopne
sub
pop
mov
jmp
inc
jp
mov
hlt
sbb
call
sbb
mov
mov
xchg
mov
loope
add
sahf
inc
mov
adc
loopne
add
mov
adc
ljmp
cmp
lret
xor
inc
imul
dec
cltd
es
insl
aam
pop
push
lahf
jo
aad
hlt
iret
lea
out
in
push
test
dec
test
ror
jae
repnz
shll
pop
addr16
xchg
or
notb
cltd
cmc
in
jb
push
mov
in
sbb
adc
and
aaa
scas
sub
insl
idivl
pminub
inc
lret
fldcw
mov
jne
andl
jecxz
call
adc
int3
inc
lcall
sbb
fwait
insl
sub
push
fscale
mov
test
push
stos
aas
fdivrs
adc
addl
push
mov
mov
jnp
mov
mov
ja
aaa
pop
mov
add
mov
and
and
xor
push
mov
ret
pop
and
add
adc
movsb
jns
lcall
loop
es
xchg
test
aam
lods
inc
or
adc
jl
inc
daa
mov
mov
loopne
idivb
cmpsl
test
test
xchg
jno
jae
daa
or
mov
xor
xchg
xor
std
pop
fldenv
sar
je
out
ret
das
sub
bound
inc
inc
xor
and
es
add
or
and
inc
mov
fbstp
in
mov
repz
jmp
pushf
and
aaa
push
xchg
ret
bound
arpl
in
fwait
mov
out
rcr
inc
mov
fiadds
int3
mov
dec
int
clc
ss
aam
ret
or
lea
jle
jo
xchg
popa
rol
ror
mov
outsl
out
inc
xchg
xor
popf
lret
aaa
xchg
dec
jge
in
gs
aam
push
and
adc
stc
cmp
push
and
adc
xor
mov
leave
popf
je
out
repz
iret
dec
daa
leave
and
out
mov
mov
stc
xchg
pop
in
sub
dec
xchg
xchg
stos
push
dec
sti
mov
enter
add
ss
outsl
sub
rolb
push
jmp
mov
test
add
or
out
enter
jl
jbe
push
xchg
arpl
jge
inc
mov
out
inc
sar
jg
fsubl
or
ret
and
shll
pop
sti
push
into
aad
sti
in
jnp
test
cld
sbb
sbb
and
fwait
popf
mov
ljmp
test
mov
movsb
cmp
ret
mov
dec
lods
xor
xchg
test
sub
fldcw
jmp
cmpsl
cmp
insl
popf
arpl
rolb
mov
sti
or
mov
mov
aas
jmp
add
pop
fstps
loope
cmpsb
arpl
fsubrs
or
add
nop
lock
imul
scas
mov
rorb
jae
dec
repnz
ss
mov
movsb
add
sub
test
ret
cmp
cmpsl
test
jmp
loope
and
mov
mov
or
mov
les
xorb
test
xchg
mov
fimuls
aam
push
test
jecxz
mov
ljmp
sub
cmpsb
leave
adc
adc
in
hlt
int
xor
popf
js
inc
iret
in
pop
sahf
adc
adc
enter
pushf
xor
cmpsb
adc
lock
xlat
outsb
cld
dec
data16
gs
push
ficompl
movsb
push
add
shrl
pop
pop
xchg
dec
xchg
fcmove
push
inc
inc
cs
aaa
jae
sbb
jne
incl
lret
lret
push
sbb
mov
jb
mov
mov
std
loopne
test
arpl
clc
out
lea
nop
test
jo
pop
lock
test
jbe
inc
jle
push
pop
test
fwait
and
js
push
add
outsl
adc
iret
loopne
xchg
test
and
push
mov
pusha
mov
mov
dec
outsl
das
push
jecxz
jecxz
dec
add
or
test
jbe
jnp
lods
lret
inc
pop
jbe
cmp
lret
xchg
dec
movsl
enter
mov
loopne
imul
hlt
sbb
shl
dec
scas
icebp
shl
aad
mov
mov
mov
sbb
sub
js
push
popa
sbb
push
mov
mov
push
mov
int3
pop
xchg
call
push
lcall
das
and
mov
fucomi
adc
out
pop
inc
push
popa
or
sar
aaa
in
cltd
cmpl
outsl
inc
add
cmpsb
xchg
das
jle
in
jle
cmpsb
push
cs
mov
xchg
sbb
addr16
adc
mov
ret
fisubs
mov
std
in
sbb
pop
push
scas
data16
jmp
scas
or
pop
mov
mov
imul
mov
and
jg
loope
and
inc
xlat
popf
arpl
xchg
dec
adc
mov
das
push
ja
and
jne
sub
cmp
push
leave
mov
dec
int
jmp
mov
in
jmp
popa
sahf
sub
adc
movsl
and
xor
shlb
mov
mov
xor
ficoms
imul
icebp
add
std
out
into
jmp
pop
pop
dec
mov
push
sbb
sarb
divl
sub
mov
dec
sbbb
sbbl
arpl
pop
mov
repz
push
les
cmp
xor
cld
xchg
adc
inc
ljmp
pop
sub
cmp
jge
loope
cli
adc
mov
iret
and
adc
jbe
adc
lret
mov
xchg
adc
sub
cwtl
cs
in
mov
push
scas
out
popf
pop
cmp
lcall
mov
push
push
test
sbb
mov
inc
adc
jns
pop
jnp
popf
stos
aas
inc
push
subps
enter
mov
lea
loope
dec
outsl
adc
pop
leave
iret
add
and
iret
cmp
mov
fwait
jns
scas
out
dec
nop
push
fdivr
push
push
ljmp
test
arpl
jb
xor
fists
scas
sbb
pop
dec
mov
testl
lret
outsl
inc
imul
push
and
mov
loopne
daa
gs
push
mov
int
sbb
ss
outsl
xor
pop
mov
lahf
or
jle
stos
orl
push
lret
pop
cmp
es
sbb
mov
xchg
ja
ljmp
add
mov
inc
sub
call
mov
sar
lods
push
pushf
cmp
popa
or
ja
aaa
stc
xor
mov
sbb
les
mov
adc
or
les
call
mov
lods
mov
xchg
mov
iret
shlb
jo
outsl
xor
inc
mov
sbbl
mov
pop
ljmp
jmp
xor
fistpl
jno
les
push
adc
pushf
sub
ljmp
cmp
les
ficomps
gs
pop
push
iret
cli
mov
jae
aam
push
outsl
mov
adc
jb
mov
add
movsl
jns
jg
xchg
std
inc
shrd
sbb
pop
andb
lock
or
push
cld
pop
fiaddl
je
mov
mov
loop
add
push
scas
leave
sub
add
ret
rorb
or
xor
lock
and
into
cmpsl
mov
pop
and
and
inc
in
or
jbe
repz
xlat
push
testb
cmp
fstps
out
jle
adc
cmp
adc
mov
imul
insl
fs
sti
cmpsl
xchg
out
pop
mov
inc
sub
inc
test
fwait
jno
mov
jmp
outsl
lods
or
clc
add
dec
pop
and
mov
imul
scas
push
jp
add
xchg
or
repz
loop
movsb
imul
sbb
jne
inc
xchg
and
in
test
stc
pop
and
outsb
mov
xchg
dec
sbb
mov
sahf
popa
ret
inc
sbb
pop
xchg
mov
test
jle
addb
ljmp
sti
imul
inc
mov
xchg
jb
cmp
and
xor
insl
das
xchg
js
jge
sub
jno
shrb
dec
imul
xchg
lods
nop
lahf
mov
loope
nop
out
cmc
xlat
xchg
out
sbb
push
shrl
sub
out
mov
cmc
add
mov
jp
xchg
adc
mov
shll
pusha
inc
leave
adc
and
lds
mov
xor
xor
fisubs
and
xchg
scas
cmc
mov
mov
jno
push
sbb
dec
or
movsb
mov
test
fstpl
mov
aad
sub
sahf
popa
shrl
push
fs
shrb
mov
xor
dec
mov
add
rorb
fs
repnz
xchg
jg
dec
sub
push
cmp
fcomp
out
stc
xor
fldz
sub
dec
and
in
adc
xchg
imul
adc
inc
dec
add
xchg
dec
ss
inc
cmp
sub
imul
imul
mov
add
lcall
test
lret
rcl
fcomi
sub
and
scas
mov
lcall
or
xor
and
lock
mov
mov
out
andl
dec
jb
cmp
je
int
jbe
jbe
rol
pop
stos
in
call
jle
fmuls
jge
pop
int3
stos
or
xchg
rolb
loop
cwtl
in
adc
pop
aas
cmc
lock
ficoml
data16
push
cmpxchg
aaa
in
mov
inc
pop
gs
push
bound
jb
out
dec
loop
xlat
mov
xchg
je
push
add
add
mov
mov
or
inc
jb
fdivs
inc
sub
adc
add
stos
cmp
sub
hlt
jae
nop
cld
out
xor
mov
xchg
ja
inc
add
sub
test
fbld
sub
adc
or
popf
sahf
lcall
cltd
fwait
sub
sbb
outsl
and
push
jns
je
or
in
inc
mov
adc
movsl
mov
out
pop
and
xchg
aam
xor
mov
lea
ss
mov
jmp
and
xor
cmc
outsl
add
and
and
mov
mov
popf
mov
jg
call
vpaddusw
pop
leave
jmp
and
pop
sub
xchg
cmp
stos
lock
or
test
jnp
inc
or
inc
jno
jge
xor
cmpl
lods
or
add
sbb
lods
loopne
jnp
push
repnz
mul
xor
imul
insl
sub
jb
test
iret
sub
ficomps
or
gs
cmp
jecxz
lods
jnp
sar
add
adc
pushf
stos
pop
mov
sbb
scas
cli
idivl
or
push
cmp
rcrl
mov
iret
pop
adc
inc
or
sub
fsubrl
mov
cmp
xchg
faddl
stos
inc
scas
push
lret
or
es
dec
add
mov
and
dec
xor
sbb
sub
pop
sti
fisttpll
fcom
or
in
icebp
repnz
popf
fidivl
xchg
cmp
pushf
leave
stc
inc
repz
stos
scas
xchg
or
xchg
push
ficomps
push
or
cmc
adc
pop
data16
or
pop
stos
mov
and
jns
cmp
push
fs
push
fcomip
dec
and
add
iret
sub
dec
int3
pusha
ficompl
loop
pop
jne
sti
call
ljmp
fbld
enter
mov
ret
xor
dec
or
sbb
sbb
pop
mov
jl
sub
in
popf
add
fs
xlat
fisttpll
xchg
dec
pusha
test
xlat
shl
and
fwait
repnz
addr16
sti
enter
pop
movsl
outsl
jp
stos
addb
mov
fmull
inc
nop
cmpsl
and
stos
push
xor
scas
push
and
mov
xchg
add
mov
adc
and
xchg
sub
rcrb
lcall
mov
test
cmp
fwait
test
add
into
sbb
dec
push
push
fcmovb
aas
pop
cltd
jns
jno
mov
loop
xchg
nop
xchg
test
xchg
pop
testl
xor
outsb
pop
xchg
dec
movsb
in
andl
push
push
cmp
jmp
jae
mov
loop
push
cli
int
mov
or
fldenv
dec
push
sbb
sub
mov
dec
popa
xchg
add
xor
inc
das
ja
dec
es
or
pop
imul
or
cmp
xor
push
scas
fcmovne
xchg
pop
xchg
sbb
sub
jo
sbb
sbb
cld
adc
sub
faddl
mov
xchg
in
rcl
sub
inc
mov
insl
mov
pcmpgtd
loope
mov
dec
adc
shll
ffree
movsl
mov
pop
pop
popa
mov
fsts
pop
pop
xchg
xchg
roll
enter
and
cli
push
out
test
sbb
std
and
pop
push
jle
xchg
test
jg
inc
insl
xchg
lock
fcom
dec
dec
jp
sub
pusha
xchg
sbb
pop
je
pop
fildll
adc
test
xor
inc
adc
out
mov
lds
outsl
shlb
mov
imul
test
dec
sti
dec
dec
jb
lea
xor
jne
and
sub
movsb
inc
lock
pusha
ds
jo
loopne
scas
lods
jle
shlb
dec
fcom
sub
daa
push
push
xchg
inc
insl
je
aaa
mov
ljmp
sbb
fbstp
sub
out
add
inc
push
push
jo
sub
push
mov
hlt
fwait
test
cmp
mov
sbb
fldenv
in
in
push
push
push
aas
push
cmp
mov
push
test
mov
mov
push
push
lock
cli
mov
mov
cmp
push
fidivs
fxch
xchg
jl
jae
sbb
xor
and
push
bound
xor
daa
rcl
fwait
je
adc
dec
test
add
push
pop
mov
test
ficomps
icebp
xor
push
enter
sbb
aam
cmp
sub
mov
mov
mov
pop
pusha
pop
mov
loop
push
mov
jns
xlat
das
adc
gs
data16
jg
cmpsb
mov
sub
aaa
rclb
or
inc
cld
mov
dec
out
imulb
lods
insl
cmp
cli
bound
jl
jbe
jb
ja,pt
sete
jns
xchg
xchg
cmpsb
sub
push
mov
lds
into
test
out
xchg
imul
in
int
imul
mov
sub
push
adc
mov
push
mov
inc
rcrl
sarb
mov
iret
jbe
mov
fimuls
shl
push
mov
jns
add
lods
mov
mov
xchg
ljmp
popf
aaa
in
lods
outsl
jl
jne
or
loope
inc
adc
insb
and
cld
sbb
inc
repnz
fsts
test
addb
pop
jecxz
mov
adc
push
jle
pop
pushf
lods
outsb
or
lret
xchg
dec
xchg
add
adc
dec
mov
push
pop
lods
mov
hlt
inc
cmpsb
push
subb
adc
adc
addr16
aam
fwait
outsl
mov
or
out
repz
mov
insl
adc
pop
js
sbbl
jl
fwait
jno
xor
iret
jecxz
mov
fdivs
adc
nop
out
cwtl
jnp
pop
mov
sti
mov
imul
jecxz
and
mov
push
aad
xchg
imul
pop
cmp
inc
enter
inc
ds
and
mov
in
cmp
pop
xor
lahf
ds
inc
in
lock
loop
je
sub
push
js
sbb
ficomps
stos
ljmp
imul
xchg
pop
orl
sub
cwtl
mov
les
sbb
ret
mov
mov
jl
daa
in
sbb
jno
orb
roll
or
scas
cmp
data16
mov
movsb
imul
pcmpgtd
mov
mov
fists
insl
cmpsb
adc
shl
aaa
xor
je
das
xchg
mov
movsb
std
ret
addb
xchg
jecxz
clc
jnp
lea
pop
sub
jno
dec
test
leave
push
inc
dec
popf
add
hlt
jp
mov
bound
jmp
int3
test
loope
in
insl
jb
jge
sub
dec
in
xchg
xor
jne
sbb
nop
addr16
mov
push
pop
bound
xorl
add
inc
or
repnz
push
pop
stc
out
insl
data16
push
je
inc
cmpsb
sub
xchg
ffree
test
outsb
repnz
mov
mov
push
fs
cltd
test
fsts
in
sub
push
es
bound
add
dec
je
mov
xchg
or
mov
repnz
cmp
ret
mov
mov
dec
xor
insb
fisttpl
arpl
inc
pop
loope
mov
or
xchg
jle
cmpsb
scas
mov
pusha
lret
xchg
push
lods
jb
cmpsl
and
dec
out
sti
mov
mov
aas
movsl
aas
jg
aam
and
jbe
ljmp
cmp
mov
sti
dec
push
cmp
mov
xchg
push
in
mov
mov
mov
mov
movsl
pop
les
inc
jge
sub
xchg
stos
dec
mov
aas
push
cmp
jp
xchg
ror
jl
in
add
cmp
outsl
push
stc
xor
fnstcw
xchg
mov
clc
mov
mov
int
ja
fmulp
leave
jecxz
test
js
xchg
pop
das
rorb
shll
mov
mov
mov
dec
cld
xchg
xchg
xchg
fdivr
dec
sub
sbb
mov
jnp
sbb
ljmp
divl
and
fcmovnb
lods
dec
jmp
push
insl
inc
sbb
hlt
out
cmp
mov
repnz
sbb
mov
cmp
and
jle
shll
xchg
insb
xchg
pop
push
mov
pop
or
mov
push
inc
fmuls
popa
andl
rcll
loopne
xlat
jl
mov
add
inc
jbe
push
ja
aas
jecxz
dec
xor
cmp
add
mov
fcmove
dec
ret
add
lahf
mov
and
push
fdivs
cld
movsl
inc
or
sub
inc
pop
data16
sar
mov
pop
ret
adc
stc
jbe
test
sub
sbb
add
fistl
scas
xor
xchg
mov
dec
scas
hlt
adc
inc
imul
sbb
mov
jmp
pop
and
iret
cmpsl
ja
call
out
inc
xchg
push
aas
loopne
pop
sub
lcall
in
cmp
and
push
push
cli
mov
push
data16
and
test
push
mov
sub
ss
scas
aas
dec
pushf
es
pop
inc
repnz
and
fimull
mov
jo
insb
mov
movl
shll
add
jecxz
add
dec
fmuls
sbb
push
mov
sub
fcompl
and
jecxz
mov
mov
and
and
push
test
pop
iret
pop
test
sbb
xor
test
push
xchg
sub
xchg
jecxz
shrl
xorb
xor
mov
adc
jno
jg
cwtl
mov
bound
inc
rorl
cmp
sbbb
jg
pop
inc
mov
popa
inc
lret
mov
push
stos
push
hlt
jecxz
repnz
mov
inc
jg
cli
push
popa
lret
push
movsl
lret
fistpl
add
mov
ret
mov
push
jl
imul
lock
inc
pushf
out
jae
std
fistps
cs
outsl
pop
jecxz
add
xchg
jne
popf
into
or
xchg
cmp
mov
lret
jno
stos
lret
jmp
pusha
mov
setae
pop
mov
mov
loopne
jle
into
addb
or
xor
int3
sbb
pop
dec
std
xchg
cmpb
push
jnp
pushf
add
fistl
push
xor
jnp
xorb
addl
adc
or
ret
loopne
jg
fisubrs
daa
mov
loopne
cmpsl
dec
cmpsl
sahf
jae
adc
loop
out
jbe
pop
lret
xor
cmp
nop
pop
mov
push
dec
dec
arpl
jne
test
cmp
outsb
cmp
add
jb
out
aas
adc
and
or
cmpsb
aas
movsb
xorl
cmp
stos
test
push
xor
lret
mov
inc
int
jle
xchg
hlt
incl
popa
or
push
pusha
popf
pop
orb
test
mov
sub
subb
or
stc
clc
std
xor
call
add
test
mov
mov
jns
xor
push
arpl
fwait
inc
cltd
cmp
scas
xchg
mov
popf
repnz
imul
mov
aam
fsub
dec
sbb
mov
or
mov
xlat
lods
jb
js
xor
rclb
xchg
push
and
jae
mov
mov
lods
jne
dec
jnp
mov
popa
cmp
mov
adc
sub
push
incb
scas
jecxz
xchg
jnp
sti
fs
adc
lods
stos
lods
push
cmpb
es
sub
mov
push
icebp
test
ret
or
in
imul
popa
mov
rcll
je
movsl
inc
repnz
adc
xchg
xchg
mov
andb
mov
in
sub
je
push
pop
int
repz
jmp
ffreep
in
call
dec
mov
outsb
lods
inc
fwait
push
scas
push
dec
push
sub
pop
sbbb
adc
lret
adc
mov
mov
lea
mov
dec
mov
out
mov
shrd
and
xchg
data16
lea
lock
mov
xchg
ss
mov
fiaddl
clc
outsl
sub
mov
outsl
fcoms
push
dec
outsb
pushf
pushf
mov
out
ret
inc
jns
je
xchg
jnp
stc
cmp
mov
sub
mov
fistpl
test
pop
lea
fsub
or
dec
xor
dec
or
or
xchg
test
and
mov
push
pop
dec
mov
and
jge
cmp
nop
or
cmpb
gs
or
ror
stos
aam
je
push
aam
and
movsl
roll
rcrb
adc
repz
sub
scas
push
inc
sbb
push
roll
in
fidivs
fstps
fcmovnb
push
sub
mov
push
mov
mov
inc
dec
aaa
out
xorb
sbb
lds
pop
sub
divl
call
incb
cld
and
stos
and
pop
jns
inc
add
xchg
jg
and
ficoml
xchg
sarb
jae
dec
loop
inc
inc
xlat
imul
sub
loopne
out
and
pop
inc
in
cli
rep
or
movsl
sbb
shr
inc
sub
xor
hlt
sub
pop
mov
cmp
pop
hlt
xchg
or
sbb
nop
jecxz
sub
and
xchg
mov
ljmp
cmp
dec
ds
push
aam
mov
mov
lds
sbb
lea
inc
popf
scas
scas
lds
lods
ljmp
push
xchg
bound
movsb
sbb
arpl
dec
call
push
push
push
xchg
sub
dec
push
inc
jmp
scas
int
xor
add
sub
mov
add
fstps
xor
inc
das
in
push
or
jecxz
adc
pop
dec
sbb
inc
xor
push
loope
mov
jb
lret
je
loopne
or
shlb
je
lods
in
jge
out
or
pop
stos
mov
push
cs
add
nop
rorl
popa
push
inc
inc
test
leave
and
daa
add
push
bnd
pop
jne
and
loopne
lock
sbb
loopne
arpl
rorl
mov
cmp
bswap
out
scas
cmp
scas
adc
push
fisubrs
push
mov
lahf
xor
scas
into
scas
xor
sub
and
xchg
push
and
sbb
dec
cwtl
dec
mov
mov
mov
cmp
fs
rcll
push
lcall
daa
scas
pop
aas
test
sbb
lods
pop
sbb
aas
xchg
mov
mov
scas
sti
mov
sbb
sbb
fistps
call
jnp
and
repz
pcmpgtb
jae
sub
test
jge
icebp
popa
sahf
pop
push
xchg
mov
dec
jle
je
mov
xchg
push
jmp
inc
adc
fnstcw
pop
gs
xlat
xchg
xor
dec
sbb
dec
test
xchg
insl
xchg
sub
lahf
out
push
nop
inc
fstpl
in
mov
lret
and
dec
push
jp
sbb
pop
movsb
test
dec
movsl
int
mov
cmp
in
mov
add
aaa
inc
sbb
adc
loope
cltd
lret
mov
or
cltd
inc
xchg
loope
mov
lods
add
xor
xchg
adc
mov
test
shlb
xchg
mov
or
push
rcll
fnstenv
shlb
mov
les
dec
and
out
roll
sarb
mov
pop
push
push
mov
shll
negb
mov
jae
mov
dec
push
loop
xor
pushf
leave
inc
xchg
add
or
ja
push
pushf
cli
xchg
rolb
sbb
jecxz
push
pop
push
icebp
dec
xlat
shlb
adc
lods
inc
outsb
xor
lds
push
data16
xor
rol
xor
cmp
int3
dec
clc
aas
jle
arpl
sbb
mov
xorl
nop
sbb
std
xor
enter
insl
dec
loopne
lods
xchg
sub
sub
iret
xor
lds
mov
jnp
dec
inc
enter
or
enter
xor
mov
aad
fsubrs
inc
stos
mov
cmpsl
test
dec
jmp
adc
dec
sbb
jg
pop
outsl
adc
dec
inc
pusha
test
jge
test
repnz
push
jne
jecxz
and
ja
xor
dec
rorb
test
jmp
les
xchg
movsb
sbb
fisubrl
pop
xchg
fs
stos
or
push
mov
mov
push
jmp
enter
fs
dec
and
inc
hlt
and
pop
adc
ds
mov
mov
xchg
jno
je
pop
cmpsl
das
add
mov
cmp
movsb
imul
fisttps
push
lret
cld
mov
push
jmp
in
sbb
sbb
mov
or
pop
mov
mov
xlat
movsl
outsl
sbb
mov
add
aam
shl
mov
adc
push
inc
mov
ja
nop
inc
addl
cmpsl
dec
sbb
push
test
lahf
out
cmp
lods
testl
mov
mov
je
xchg
jg
and
pop
call
mov
mov
sbb
push
mov
stc
stc
ficomps
in
push
and
inc
clc
xor
or
pop
xchg
fsub
in
push
push
hlt
shll
das
mov
mov
add
and
push
inc
xor
add
add
dec
and
hlt
fldcw
enter
test
mov
pop
addr16
sub
aam
les
incl
int3
inc
push
ja
xor
loopne
inc
popa
sarb
frstor
cmp
mov
and
sahf
pusha
loop
and
or
xchg
or
mov
or
sbb
clc
xor
sub
std
and
push
and
loopne
pop
push
mov
add
pop
pop
push
jno
sbb
lods
mov
out
jns
mov
movb
sbb
sarl
inc
dec
in
outsb
imul
jecxz
mov
adc
loope
xchg
jo
stos
bound
jge
aad
ficompl
mov
jge
cs
xor
negb
xchg
or
add
xor
cmp
cmpsb
jb
mov
jb
pop
inc
test
push
sub
aam
pop
mov
pop
xchg
lret
js
test
shll
inc
mov
xchg
bound
pop
fadds
add
clc
loope
or
mov
daa
jae
ljmp
push
jae
lret
jno
push
cmp
xchg
pop
fwait
stos
mov
test
dec
int3
fst
pop
repz
stos
mov
repz
xchg
sahf
fdivl
mov
lret
sbb
cltd
jbe
inc
pop
jp
int
push
lret
loop
push
lret
add
nop
push
sbb
cwtl
les
inc
aad
test
pop
test
je
nop
out
sub
mov
ja
pop
jp
loopne
addl
mov
sub
xchg
mov
mov
and
jb
sbb
fwait
call
repnz
jge
cmp
cmp
dec
and
or
data16
jle
cmpl
sbb
ds
fildl
sub
pop
out
daa
cltd
or
push
xor
movsb
dec
inc
jle
test
aam
mov
jmp
in
and
xchg
add
std
out
mov
cmp
iret
add
add
loop
jno
mov
inc
add
lcall
inc
cmp
pop
push
add
jb
mov
cmp
mov
sbb
xor
mov
or
and
push
test
mov
jb
jne
subb
push
sub
stos
mov
and
out
and
test
mov
ja
push
adc
stc
xchg
stc
sbb
rcll
scas
lret
mov
mov
and
das
hlt
jmp
inc
in
inc
dec
call
idivl
lret
rorl
call
or
fwait
xchg
adc
push
xchg
jae
stos
icebp
leave
inc
test
xchg
jnp
sar
aad
js
arpl
dec
test
xor
int
sahf
sbb
jne
test
fiadds
popf
or
fildl
adc
pop
cmp
jnp
mov
pop
orb
cmc
mov
ds
sbb
jmp
aam
incb
pop
hlt
pusha
and
or
jg
dec
adc
out
lret
push
inc
stc
cmp
outsb
jae
xlat
inc
pusha
xor
out
jae
aas
call
dec
xor
jno
cmpsl
and
test
jo
cmp
or
push
movl
daa
mov
ret
sub
jnp
je
aam
stos
mov
dec
push
cltd
repz
cmpb
xor
js
pop
add
mov
in
addr16
sub
jmp
mov
jbe
je
pop
mov
dec
push
mov
loopne
mov
pop
mov
ss
mov
mov
sub
lret
jb
adc
shr
nop
insl
pushf
test
sahf
cmp
pop
pop
sbb
or
inc
sub
push
and
out
pop
ss
loope
pop
hlt
pop
fs
sbb
xor
leave
fsqrt
push
xor
fnsave
sarb
mov
adc
jmp
out
sub
xor
fisttpl
rcll
push
cli
push
cmpsb
mov
repz
lds
dec
outsl
inc
inc
mov
pop
test
mov
shll
mov
add
sub
inc
scas
sub
sub
lods
out
scas
lods
pop
ja
in
jae
jb
xchg
mov
pop
stos
ret
inc
pushf
fmulp
jecxz
mov
jbe
fucomp
mull
lret
push
add
lods
xchg
fwait
stos
push
fdivr
insb
sbb
push
push
js
testb
inc
dec
dec
sbb
inc
in
inc
mov
popa
out
dec
mov
movl
icebp
xor
xor
pop
xlat
sbb
outsb
imul
cwtl
repz
std
mov
jo
pop
stos
add
sbb
xchg
xor
dec
xchg
mov
cmpsl
push
cmp
xlat
sbb
repnz
push
scas
inc
lcall
loope
jmp
sbb
pop
sub
dec
cmp
push
cltd
inc
insb
gs
cmp
insb
int3
loop
lds
rorb
icebp
jns
outsl
bound
out
cwtl
sbb
mov
and
dec
and
lret
pop
pop
bound
mov
pop
xlat
xor
insl
cmc
dec
mov
xor
push
repz
pop
insb
lahf
cmp
push
shll
jnp
loop
pop
das
fisubrl
mov
shr
popf
mov
jo
and
lods
and
in
in
outsb
sbbb
add
hlt
pop
mov
mov
push
adc
and
ja
imul
leave
enter
shl
fdivrs
xor
out
mov
fadd
mov
xor
dec
test
ljmp
xor
sti
ss
jle
xchg
dec
mov
push
mov
stos
sbb
add
shr
stos
mov
ljmp
and
dec
sub
out
push
mov
dec
in
cmp
inc
cmp
mov
mov
cmp
or
scas
in
lods
jb
inc
adc
sbbb
nop
filds
fistpl
pmulhw
aad
popf
ret
pop
sbb
cld
or
mov
sub
ds
call
out
pop
adc
sbb
enter
jl
cmp
daa
push
jo
mov
lret
lea
aas
sub
and
fnsave
jo
cmpsb
xchg
jmp
mov
push
mov
xchg
aad
push
out
aad
lds
mov
push
imul
xchg
jo
popf
cmp
rolb
push
es
out
cmp
mov
inc
xchg
clc
inc
stos
xor
rorb
out
in
mov
loop
mov
aad
or
xchg
inc
mov
jg
dec
outsb
aam
inc
jg
cli
dec
push
push
insb
adc
adc
mov
inc
mulb
repz
jg
cmp
xor
stc
xor
and
int3
divl
scas
adc
arpl
xchg
orl
dec
adc
sbb
repz
push
cltd
add
sti
pop
cmp
and
and
ficompl
add
push
cmp
cmc
mov
iret
gs
pop
lahf
and
in
aaa
aas
outsb
xor
cmp
and
fdivs
inc
enter
sti
mov
mov
les
push
arpl
cmp
ja
xlat
push
cmp
cmp
test
adc
xchg
ret
inc
or
jne
inc
mov
jge
sbb
imul
dec
fldenv
imul
sub
lea
fistpll
sti
push
adc
adcb
clc
cmp
lcall
pop
xchg
es
ds
fimull
cwtl
push
sbb
mov
stos
rorl
cmc
outsb
and
add
and
pop
push
pushl
cld
push
cmp
dec
cmp
pop
out
mov
int
jns
es
sub
lods
mov
or
and
jae
es
pop
pop
dec
ja
fsubrl
push
jmp
sbb
cli
imul
push
xor
ret
into
mov
test
shlb
repnz
pop
imul
pop
test
mov
rcrl
xchg
add
test
cwtl
push
sub
jle,pt
sti
xchg
xchg
sbb
mov
dec
stos
sub
mov
pusha
aas
mov
cmp
pusha
scas
xchg
addr16
sbb
push
pop
add
sbb
xchg
push
jo
xchg
xor
jno
outsl
stc
js
rcll
push
sbb
cmpsb
xor
xor
fiaddl
pusha
jo
xchg
adc
insb
xor
fwait
adc
divb
and
enter
push
xchg
sbb
mov
pcmpeqb
jge
mov
je
movsl
xor
adc
xchg
mov
xchg
fsubl
scas
sahf
xchg
sbb
sub
scas
fs
xor
fdivr
lcall
ret
mov
mov
sub
xchg
ljmp
or
lea
lret
ja
mov
hlt
out
adc
insl
jmp
xlat
ds
adc
lock
data16
sub
into
hlt
mov
pop
push
xor
jmp
jb
mov
arpl
cmp
jmp
adc
xchg
bound
add
into
pushf
fldl
movb
mov
push
leave
push
icebp
test
pop
out
int3
jne
dec
pop
in
ret
jecxz
test
repz
mov
incb
push
dec
jg
jge
stc
mov
adc
aas
icebp
mov
inc
sub
cmpsb
mov
mov
cs
subb
cmp
jg
sub
adc
mov
jo
ret
xchg
xor
insb
adc
clc
sub
sbb
xchg
lret
fcomi
adc
vunpckhps
push
mov
icebp
lret
sub
das
and
mov
rcrb
adc
pop
lahf
mov
inc
test
addl
sub
mov
dec
xchg
sahf
ja
adc
cwtl
ss
sbb
push
gs
sahf
jmp
stos
sub
cmp
xor
fimull
mov
pusha
mov
bound
pop
mov
cmpsb
pop
aam
negl
pop
insl
dec
or
pop
pop
add
pop
lods
lods
push
or
fiadds
test
notl
xchg
testl
stos
cmp
mov
je
inc
es
sbb
jb
cmc
in
cmp
dec
and
mov
cmc
enter
cmp
pop
fwait
mov
xchg
jbe
mov
inc
into
xor
and
add
push
int3
add
cmp
es
pop
paddusb
sbb
and
mov
adc
or
adc
jmp
jmp
rclb
movsl
aad
ret
outsb
hlt
bound
cmp
mov
or
call
es
ret
jmp
repnz
xor
sub
pop
aad
dec
cmp
in
jmp
mov
xor
push
popa
cmp
mov
mov
in
cmp
or
inc
sub
pop
sub
adcb
shlb
push
cmp
dec
mov
xor
inc
imul
outsb
int
dec
call
jecxz
mov
nop
stc
js
xchg
test
mov
scas
sahf
cmpb
stos
fildll
adc
or
into
adc
out
loopne
icebp
jae
push
mov
scas
aad
mov
sbb
pop
arpl
jbe
idivl
or
add
pop
push
loopne
repz
enter
lea
in
mov
fwait
cwtl
xor
inc
arpl
insb
imul
fcomps
mov
pop
lea
fs
jecxz
mov
and
and
mov
inc
ficoms
shrl
xor
jg
cmp
push
or
sarl
jmp
inc
cmp
push
mov
sti
mov
jg
fsubrl
jnp
inc
lock
push
cmpsb
dec
nop
push
loopne
mov
pusha
push
imul
icebp
sub
pop
push
and
loope
push
scas
mov
repnz
sbb
out
cli
sarl
orb
lahf
dec
push
aad
lods
push
jge
adc
cltd
inc
pop
push
dec
push
je
push
aam
out
roll
add
movsl
inc
or
and
sbb
push
test
push
ds
shl
hlt
jl
dec
dec
jnp
push
mov
add
mov
dec
mov
inc
loope
outsb
mov
stos
arpl
jb
call
negl
nop
or
sub
xchg
pop
sbb
movsb
outsl
mov
sbb
and
fisubl
insb
int
push
jecxz
clc
insb
test
jge
fsubrl
xor
xchg
movsl
shlb
aaa
mov
loopne
test
xchg
scas
and
fnstcw
lds
out
mov
inc
in
clc
orb
sar
xor
push
rorl
cmp
ljmp
aad
and
push
subb
cs
mov
adc
leave
cmpb
jecxz
fadd
out
or
lock
mov
in
inc
int
mov
push
scas
sti
sbb
xlat
out
cmpxchg
xorl
ds
cld
cmp
xorb
bound
les
push
xor
cmp
push
xor
mov
or
xchg
imul
clc
and
inc
jnp
xorl
lret
mov
dec
mov
pop
loopne
fst
fsts
dec
addr16
sub
add
insl
pop
pop
jno
add
icebp
ss
jg
ds
int
jecxz
cmpsb
jb
and
lea
cmp
adc
xchg
push
sahf
jg
lret
xor
jno
out
in
fcompl
mov
pop
or
leave
sbbl
sahf
add
mov
mov
and
and
sbb
insb
test
jb
xchg
dec
push
aaa
push
lea
mov
push
and
adc
arpl
loop
lahf
mov
push
fs
lods
jg
pop
dec
shrl
xor
ds
stos
dec
pop
xor
imul
jae
adc
cmp
dec
cmpsb
mov
pop
jle
pushf
je
jle
loope
sahf
push
aam
jnp
je
sbb
jmp
fisubl
xor
push
movsb
push
xchg
shl
mov
and
data16
jnp
inc
loop
mov
dec
jns
mov
insl
scas
notb
rolb
adc
inc
sub
and
jb
ss
inc
ret
jmp
dec
icebp
hlt
push
daa
xor
lods
in
mov
leave
inc
in
ja
jae
push
daa
divl
out
add
stos
out
dec
mov
lods
adc
mov
enter
dec
dec
mov
testb
mov
dec
sbb
loop
stc
fwait
sub
repz
push
mov
or
mov
mov
filds
sbb
ljmp
add
sub
mov
adc
jae
xchg
add
and
push
aas
mov
jo
ljmp
movsl
fwait
jnp
shlb
rcll
stos
mov
lock
int
mov
pusha
jl
jl
mov
and
sub
subb
stc
stos
add
sub
add
dec
in
xchg
sarl
clc
xchg
insb
add
out
dec
fwait
and
dec
mov
fcomi
cmpsb
insl
jo
cmp
enter
push
stc
jno
push
test
out
movsb
test
roll
es
inc
enter
xchg
sub
xor
lahf
das
mov
dec
cmp
adc
sub
sbb
and
xor
mov
fadds
mov
in
and
cs
push
cmc
or
jp
mov
repz
aas
fsubl
adc
es
sbb
fisubl
pop
sub
adc
jl
jns
lock
sub
in
iret
call
mov
or
mov
mov
imul
adc
lahf
cs
imul
outsb
rsm
js
in
adc
arpl
test
lret
mull
loopne
jp
aas
or
mov
xchg
adc
mov
xchg
cwtl
stc
dec
xlat
mov
or
fiaddl
sbb
mov
popf
out
int3
sbb
pop
lret
js
add
or
hlt
mov
cmp
ljmp
or
mov
mul
lock
aas
outsb
repz
sub
data16
lea
jb
movsl
add
data16
pushf
syscall
or
mov
ja
es
outsl
aam
daa
sub
and
mov
jne
sbb
adc
popl
or
sbb
or
ficoml
mov
push
lret
mov
dec
inc
das
orl
and
adc
mov
push
mov
mov
outsl
ds
pop
push
aad
iret
lret
pop
imul
xchg
pop
jecxz
repz
adc
adc
mov
andl
xchg
push
repz
arpl
leave
popf
lock
hlt
adc
sahf
sahf
mov
in
arpl
pusha
cmp
mov
sbb
cli
stc
add
mov
out
sahf
data16
ja
aam
test
lea
sbb
leave
jg
std
pop
and
push
cmp
inc
addb
push
mov
mov
jns
outsl
lcall
in
mov
sbbb
das
psubusw
lcall
mov
pop
xchg
xlat
inc
mov
ret
pop
dec
pop
cwtl
xor
loop
push
pop
les
xor
dec
sbb
cmp
aad
hlt
pop
cmpsb
ud2
adc
arpl
mov
pop
cmc
mov
scas
das
sub
xchg
lahf
dec
lret
iret
inc
or
rcrb
jne
fbstp
dec
js
ss
int3
adc
loop
in
cwtl
rolb
adc
cmpsl
sbb
fsubr
pop
sbb
or
out
cmp
pop
jle
ss
cmp
sub
xchg
lcall
sbb
inc
mov
xchg
shll
cmp
dec
inc
cs
sub
dec
cmp
inc
aaa
jecxz
dec
call
loope
cmc
inc
in
sub
sbb
lcall
aam
sti
int
fwait
sub
fldenv
les
push
fs
mov
pushf
cli
or
adc
mov
adc
mov
adc
fidivl
mov
cmp
xchg
dec
fimuls
popf
sbb
test
pop
pop
cwtl
movsl
mov
neg
std
stc
xor
repnz
stc
jge
xchg
cmp
pop
xor
outsb
mov
mov
and
insl
inc
adc
or
or
inc
pop
out
push
mov
mov
into
popa
imull
jp
push
xchg
sub
fs
xor
push
movsb
jnp
rorb
push
iret
and
jle
xchg
jmp
push
xchg
dec
mov
mov
fxch
xlat
mov
scas
cltd
push
outsw
testb
mov
lods
sbb
or
test
add
pop
cmpsb
push
xor
mov
jp
lea
xlat
cwtl
ss
dec
dec
je
sbb
nop
pushf
jp
jecxz
shll
sub
mov
aas
popa
jo
pop
lods
pusha
ds
clc
xchg
push
cmp
movsl
arpl
andl
arpl
lret
mov
loopne
dec
xchg
imul
test
and
ficoml
in
jbe
xchg
inc
push
pop
les
mov
lahf
fstpt
push
mov
rcr
and
pop
jbe
xchg
rcrb
push
jmp
cwtl
push
testl
or
lods
pop
test
in
mov
sub
pushf
lcall
push
sbb
adcl
add
cltd
push
pop
jnp
bound
ror
outsb
leave
sarb
mov
movsl
mov
xchg
and
cmp
dec
stc
js
lret
lea
or
fidivrs
xchg
cmpsl
mov
out
int3
lahf
imul
scas
test
gs
sbbl
push
and
insl
jg
xor
cmp
repz
sbb
xchg
dec
xchg
stos
aam
dec
jge
fidivs
jae
pop
je
fxch
mov
cwtl
scas
cmc
fsubrs
fs
inc
pop
add
aas
sti
sti
lea
popa
iret
mov
ljmp
sahf
stos
lret
jns
lock
jmp
mov
rorb
mov
add
xor
movsl
push
stos
lret
cmp
xlat
sbb
mov
xchg
dec
insb
sub
std
int
push
xchg
fs
lea
int3
xlat
aad
jg
test
leave
jmp
dec
mov
in
fdivp
and
in
and
jne
ja,pt
cmp
mov
cld
pushf
outsb
push
push
mov
popf
mov
loopne
push
adc
loop
xchg
push
mov
adc
cmc
add
mov
jb
and
and
das
loope
sub
fwait
inc
fucomip
data16
sub
cld
rcrl
pop
out
cmp
push
inc
mov
ss
or
pushf
inc
je
mov
pop
push
push
test
pop
pop
shl
inc
mov
adc
fnstcw
pop
cmp
cwtl
mov
pusha
mov
es
jg
sub
mov
cltd
hlt
fidivs
mov
and
jbe
xchg
mov
xchg
jbe
test
adc
test
pop
cs
jb
pop
sub
sub
rcll
jb
mov
cmp
sub
fnstcw
or
mov
jecxz
dec
mov
mov
mov
sub
shr
jo
pop
test
subb
mov
jns
push
xor
sub
jp
cwtl
xchg
test
sub
shlb
stos
sti
imul
pop
ja
repnz
cmp
mov
das
mov
adc
lret
jno
ret
dec
cmp
lock
xchg
cs
mov
or
xchg
push
out
mov
sub
cmp
adcl
pop
jne
sub
jo
xchg
add
ret
jp
inc
orl
lea
pop
subb
movsb
or
call
fcomi
lahf
pop
stos
roll
mov
push
inc
jo
push
inc
jo
dec
jno
mov
pop
push
popa
sub
mov
stos
out
daa
aam
mov
jle
cli
cmp
insl
fsubl
sti
pop
in
push
in
dec
and
loop
insb
fst
std
into
dec
cmpsb
enter
push
shl
out
adc
adc
mov
mov
les
xchg
fcmovnu
scas
jg
repnz
cs
sahf
sbb
mov
insl
mov
dec
mov
insb
or
adc
mov
into
xor
lcall
aam
arpl
daa
fbld
or
mov
rorl
xchg
pop
dec
xchg
or
pusha
sub
adc
test
and
data16
es
icebp
int
mov
lods
decb
dec
inc
mov
mov
das
rorb
outsb
fucomi
jl
test
test
pusha
and
gs
in
inc
and
popf
or
mov
hlt
mov
ja
add
mov
mov
addr16
in
mov
dec
insl
shrb
fwait
mov
ja
dec
mov
fadd
mov
fstpl
dec
add
mov
loopne
xchg
sub
dec
rep
add
stos
xchg
mov
int
mov
jo
dec
xchg
js
mov
out
xchg
mov
mov
xor
jbe
adc
cmp
outsb
movsb
or
push
xor
in
jbe
dec
stc
iret
insb
scas
pop
pop
adc
inc
fnstsw
movsl
push
stos
mov
mov
sbb
dec
aam
addb
jmp
fmul
sub
js
je
rorb
enter
push
iret
scas
sub
xchg
adc
bswap
xchg
sub
push
add
fbstp
out
addr16
pop
js
lods
sbb
stos
xchg
push
mov
mov
mov
fldl
scas
aas
inc
inc
movsb
xchg
sub
in
and
add
test
push
or
addb
rclb
pop
push
cmc
ds
das
pusha
sbb
dec
sti
cmpb
mov
ljmp
xchg
dec
mov
jnp
inc
xchg
pusha
xchg
mov
dec
xor
pop
mov
or
push
push
into
dec
cmp
cmpsl
shll
add
lea
xlat
test
data16
xchg
inc
ret
adc
mov
push
das
ret
xchg
in
ret
dec
lock
push
aaa
pop
push
popa
aaa
mov
push
jp
shl
sar
aad
pop
hlt
imul
dec
pop
fwait
lods
rcl
mov
pop
fwait
mov
push
test
roll
pusha
movsb
mov
mov
in
push
inc
sub
lahf
mov
push
xor
add
bound
or
xchg
popa
push
dec
mov
adc
jae
mov
mov
sub
push
xor
push
fists
mov
out
sarb
or
jle
sub
sub
ret
pop
inc
dec
enter
std
mov
sub
fsts
xchg
subl
lea
insl
sbb
pop
cmpsb
cmp
pop
out
cmc
aaa
push
sbb
rclb
shll
and
mov
rcll
mov
pushl
stos
addr16
mov
and
lcall
je
sbb
push
pop
and
es
fsubr
mov
adc
xchg
dec
xchg
sub
add
fcomps
icebp
adc
xor
lahf
or
sub
mov
adc
out
not
cwtl
cmp
test
fildll
lret
pop
aaa
or
insb
insb
int
cmpsl
and
adc
shl
push
call
sti
xor
sbb
popf
and
sbb
sbb
mov
cmc
iret
ret
pop
dec
or
lds
or
cmc
jle
xlat
pop
loop
xor
call
xor
roll
xor
int
pop
js
xchg
bound
pop
pop
cmp
sub
jle
sarb
roll
pop
in
lret
xorl
xchg
dec
push
shrl
fimuls
leave
insl
cli
test
es
lds
xor
movsl
and
xchg
icebp
mov
mov
andb
push
ja
test
stc
sbb
pop
sbbl
les
out
jb
outsb
or
jp
mull
inc
ja
push
lea
adc
popa
stos
lret
repz
pushf
test
xchg
and
call
cmp
stos
sub
adc
sbb
add
or
stos
mov
push
out
xchg
jge
loopne
inc
adc
jns
icebp
test
cmc
outsl
dec
jnp
push
xlat
add
sbb
or
sbb
clc
cmc
or
cmp
xor
adc
pop
mov
sarl
adc
dec
bound
push
adc
dec
sbb
movsl
psllq
fldcw
cmp
in
mov
xchg
fstpl
add
xchg
jne
push
out
mull
jl
xlat
cmp
push
mov
imul
sub
mov
push
xchg
into
xchg
push
leave
cltd
jg
test
nop
aas
pop
xor
xchg
js
fnstcw
dec
jle
jae
outsb
sbb
cld
dec
sub
out
xor
loop
or
es
notl
cmpsl
xor
push
movsb
sub
or
xchg
inc
push
test
das
pop
ljmp
cmp
clc
mov
dec
out
sbb
jl
cltd
popf
mov
stc
add
sub
xor
arpl
gs
fcompl
inc
popf
or
jns
inc
iret
push
cmp
jns
mov
pop
or
repz
f2xm1
sbb
cs
fistl
push
imul
add
inc
repnz
movsl
loope
push
out
sbb
popf
rolb
loopne
pop
lds
push
sbb
inc
mov
xor
push
and
sub
in
and
mov
add
call
dec
cmp
sbb
jg
push
mov
sub
scas
push
push
fsubl
jno
push
loope
jl
jge
inc
hlt
stc
imul
pop
cwtl
mov
lcall
dec
mov
lods
mov
shlb
sub
mov
jnp
movsl
mov
xchg
adcl
je
xor
test
push
xor
test
in
clc
xor
xor
fisttps
repz
fcompl
fbld
xchg
popf
adc
mov
sub
out
into
sub
push
adc
pop
add
sub
addl
pop
or
fnstsw
addr16
mov
mov
push
mov
xchg
lods
lret
xor
rol
aad
jb
popl
out
push
inc
lock
mov
sti
add
sti
sbb
popa
inc
cmp
xchg
push
mov
ds
or
stos
lea
shrb
out
mov
adc
enter
jnp
rorl
movsb
arpl
fnstcw
sbb
jg
mov
add
sarb
sarl
hlt
inc
sub
xchg
cs
lds
add
xlat
daa
cmpsl
inc
sti
or
dec
xor
cmp
lret
out
ficoml
popa
jmp
xchg
push
and
addl
xchg
dec
xchg
or
xor
push
jne
mov
mov
sub
icebp
sub
lret
dec
sti
imul
push
mov
lcall
inc
ret
pop
insl
xchg
test
pushf
mov
push
and
push
es
test
rcll
insb
repz
clc
dec
pop
sub
dec
mov
rcrl
mov
clc
inc
inc
adc
mov
inc
jb
loope
mov
dec
fdivp
mov
rol
stos
inc
aad
cmp
dec
mov
mov
fstl
jns
test
iret
imul
xor
std
outsl
mov
push
mov
andl
pop
std
out
mov
in
or
xchg
iret
pop
mov
popf
mov
out
outsb
mov
xchg
dec
ret
sbb
nop
orl
loope
cmp
rcll
mov
iret
add
stos
inc
sbb
test
pusha
add
inc
ds
adc
push
mov
dec
ret
lret
xor
or
xor
jg
inc
push
sbb
push
arpl
push
push
mov
mov
fstl
sub
inc
addr16
in
and
dec
faddl
fdivrs
and
or
sub
mov
ljmp
div
mov
test
lret
movsl
mov
add
mov
iret
insl
xchg
add
clc
mov
lea
mov
orl
shr
jge
dec
dec
cmp
mov
sub
in
dec
add
xor
cltd
iret
insl
mov
jae
inc
sub
mov
mov
cmpsl
in
xchg
shll
pushf
js
dec
add
cmp
outsl
inc
mov
lods
jecxz
xor
push
jb
cmc
dec
push
xchg
test
insl
fdivl
leave
jmp
cwtl
or
push
push
mov
xor
adc
cs
js
mov
push
sbb
das
std
jmp
stc
outsb
and
push
or
sbb
mov
sub
mov
or
xor
dec
adc
adc
dec
insl
mov
mov
push
inc
sbb
push
leave
lds
ja
or
xchg
in
xchg
jo
fidivrs
lods
insl
nop
jecxz
mov
out
rorb
pop
sti
mov
movsl
cmp
lods
pop
fwait
xor
shlb
outsl
ret
lret
jb
sub
xchg
in
xor
rorl
mov
fsts
loopne
rcrb
sbb
push
add
sub
push
and
clc
mov
sti
adcb
mov
lock
ja
cmp
xor
xor
sti
jns
push
sbb
sti
aaa
outsb
xor
movsb
add
fiadds
jns
clc
insl
sbb
jle
scas
js
pop
and
dec
xchg
dec
adc
sub
scas
push
decb
mov
movsb
mov
xchg
cmpsb
push
in
in
mov
xlat
popa
pop
daa
cmc
outsl
loope
sbbb
cmpsb
adc
test
xor
mov
mov
popf
nop
fistpl
insb
fisubs
out
ret
mov
ret
rclb
fists
or
mov
nop
fimuls
aad
xchg
mov
js
stos
xchg
ds
add
adc
mov
dec
mov
mov
xchg
icebp
mov
cld
push
ficoms
sub
xor
xor
shll
test
out
sbb
jp
push
and
xchg
loopne
dec
xlat
lcall
pop
mov
into
dec
fidivl
pop
sbb
jb
stc
fcos
adc
sub
jb
cmp
loopne
pushf
inc
insl
push
sbb
mov
or
mov
fisttps
push
aaa
inc
sub
mov
and
shl
sbb
notb
jecxz
inc
repnz
aaa
mov
and
pushf
adc
sbb
lods
adc
jl
ret
jmp
call
clc
xor
xlat
arpl
jns
fsubr
mov
lret
mov
mov
int3
pop
pop
insl
in
lcall
test
mov
sbb
sar
int
cmpsl
inc
je
pop
adc
adc
sub
addl
push
cmp
das
add
add
cmpsb
fisttps
add
fsubr
jnp
std
rcll
or
addr16
pop
ljmp
ljmp
std
jp
test
dec
xchg
mov
ret
push
add
lock
and
mov
mov
imul
mov
call
adc
arpl
imul
ror
sbb
outsb
cmp
sbb
cmp
je
xor
bound
jmp
jg
adc
sub
mov
ds
sahf
in
add
icebp
mov
jg
insl
or
mov
sti
sti
pop
mov
xchg
mov
pushf
and
mov
mov
add
adc
divb
xor
ss
xchg
out
lods
add
test
sub
xchg
into
int3
in
mov
fwait
je
jecxz
pushf
test
loop
add
jmp
imul
shlb
call
adc
into
xchg
xor
push
testl
arpl
pop
pop
sbb
in
out
pop
push
fisubl
adc
aaa
fwait
push
inc
inc
into
in
in
mov
pand
sbb
jb
inc
jns
add
push
cltd
xchg
inc
xor
out
test
mov
test
andl
bnd
xor
cs
es
cmp
xchg
xchg
lahf
push
mov
fnsave
xlat
je
mulb
aad
mov
cmpsb
push
push
imul
scas
cmp
popa
xchg
sbbl
loop
adc
shll
dec
add
fwait
inc
or
cmpl
jb
xlat
sahf
cmpsb
pop
aam
mov
xchg
fdivl
test
jno
cwtl
stc
flds
mov
fsubrs
sub
push
repnz
test
push
insl
rol
mov
sti
mov
repz
ljmp
sbb
push
cmpl
loope
pushf
in
imul
das
andb
mov
lock
pushf
xchg
dec
mov
out
and
lcall
repz
popf
sub
sub
push
stos
jecxz
jne
xor
mov
test
test
dec
xchg
push
mov
pop
sbbl
cmp
jnp
imul
shrb
int
add
push
mov
or
loopne
pushf
mulb
loop
sub
lret
push
test
addr16
lods
pop
pusha
push
hlt
ja
jbe
push
fcmove
dec
dec
xor
insl
sahf
jnp
jl
add
in
jmp
inc
add
jg
pop
repnz
loopne
shll
xlat
push
cmpsl
pop
add
loopne,pn
out
lds
int
nop
stc
mov
lds
pushf
sbb
outsl
jmp
icebp
dec
sub
addr16
jl
sbb
aas
mov
in
push
nop
adc
cmp
popf
push
mov
adc
imul
adc
popa
cmp
pop
outsb
inc
cmp
jg
mov
rol
jbe
das
insb
jo
cmp
popf
lea
add
dec
sub
scas
sbb
adc
jmp
call
hlt
popf
mov
movsb
mov
mov
sbb
pop
pop
jg
xchg
mul
rorb
arpl
loopne
mov
lods
pop
cs
lahf
xchg
push
mov
fisttps
fldcw
mov
cvtpi2ps
push
aad
inc
loop
jnp
rcrb
fsts
push
int
push
aas
fs
aad
sti
lods
scas
loop
fmuls
cmp
xlat
push
fs
jg
xchg
push
cld
jne
and
ss
cltd
xchg
call
push
mov
scas
inc
addr16
pop
mov
sbb
ds
in
xor
or
sti
xchg
dec
or
in
lcall
shlb
and
cltd
and
mov
adc
add
sbb
inc
insb
xchg
popf
fsts
into
mov
enter
pop
addl
xchg
pop
out
mov
mov
in
shr
insl
dec
scas
add
je
outsl
or
jae
inc
sub
inc
or
sbb
sub
jp
aas
rorb
mov
cmpsl
inc
outsb
or
insb
or
iret
sti
sbb
mov
leave
jb
adc
in
mov
inc
push
adc
imul
stos
popa
mov
leave
push
pop
push
and
jl
mov
lock
mov
aam
je
cmpsb
jg
jns
addl
xlat
mov
pop
in
mov
add
mov
dec
lahf
pop
jno
outsb
xor
arpl
pop
rcrl
jmp
mov
mov
test
cmp
stos
cmc
bnd
push
pushf
in
hlt
ret
push
push
or
sbb
ja
ja
bound
test
xor
fs
mov
cmc
pop
mov
js
xchg
xchg
jg
push
loopne
or
mov
xchg
mov
popa
mov
jns
mulps
out
aam
loopne
in
imul
add
cld
lcall
mov
mov
repnz
stos
mov
or
fcoms
add
andl
bound
push
insb
stc
xor
xchg
hlt
test
adc
xchg
out
pop
pop
addr16
mov
and
add
fistl
push
mov
mov
scas
int3
or
pop
movsb
pusha
loopne
repnz
cmpsl
movsl
adcl
mov
pop
and
sbb
mov
outsb
xchg
rolb
and
mov
popf
scas
je
loop
out
inc
xor
das
mov
mov
pop
mov
repnz
lret
jne
pusha
xor
mov
int
cmp
rorl
add
push
cli
mov
clc
rcll
push
push
inc
or
sbb
mov
jnp
dec
adc
and
test
xor
ds
fs
int3
push
xor
and
sbb
in
cmovo
dec
lods
jb
and
mov
jae
sbb
sbbb
mov
sbb
cmp
stos
jbe
pop
push
dec
dec
or
scas
sbbb
ljmp
inc
push
jnp
je
aaa
and
gs
xchg
shlb
mov
pop
bnd
fsubrp
adcl
insl
out
or
or
xchg
out
mov
roll
pop
negl
pop
out
test
enter
push
push
imul
jno
xor
mov
dec
or
mov
push
ficomps
ds
frstor
test
mov
xchg
sbb
mov
adc
push
adc
test
shl
pop
data16
shl
mov
inc
js
leave
movsl
and
sub
jmp
scas
and
xor
popf
pop
ret
test
loopne
add
rolb
loop
push
sbb
push
push
filds
je
cmp
insl
in
mov
mov
cs
repnz
jecxz
dec
or
or
out
arpl
xchg
mov
jle
ja
shr
sub
pop
cmp
add
lods
sub
xchg
xchg
jbe
sub
or
adc
test
and
adc
pusha
jl
lahf
or
lea
cmp
mov
jnp
insb
xchg
in
add
stos
arpl
loopne
mov
adc
movsl
mov
add
test
fs
mov
cmp
xor
jecxz
sub
repnz
inc
lcall
push
addb
dec
jp
in
xorb
mov
cs
cmp
shll
cmp
imul
push
fwait
int3
lret
and
or
ficomps
out
pop
push
mov
nop
addr16
adc
cmpl
jo
add
jp
out
les
xchg
add
and
mov
mov
jmp
add
sti
or
mov
dec
mov
fwait
outsb
stos
adc
push
cld
mov
dec
mov
lret
jae
push
cmp
sbb
sbb
jecxz
sub
or
xor
jge,pn
test
mov
pusha
enter
inc
fistpl
push
fisubl
xor
ss
setnp
sbb
pop
in
stos
adc
and
xchg
in
and
push
enter
iret
cmp
leave
ss
mov
loopne
inc
fnstsw
push
dec
into
push
jmp
ljmp
dec
insl
fisttpll
add
xchg
xchg
leave
mov
and
loop
jl
push
in
mov
ds
and
inc
pop
call
mov
mov
hlt
test
jb
or
push
pop
ss
mov
ficomps
dec
mov
mov
stos
fstps
cwtl
cmpsl
bound
rclb
sti
mov
mov
fcomps
pop
jne
lahf
fimuls
xor
call
pop
jmp
lock
and
into
testl
stc
push
ss
icebp
mov
adc
xorb
aad
sub
repnz
mov
dec
insb
lret
xchg
in
cmp
insl
push
push
sub
or
cli
xor
mov
ret
and
repnz
mov
out
fcomps
cmp
push
out
sub
sub
add
pushl
mov
dec
cld
mov
push
je
aad
fwait
aam
leave
rclb
call
dec
xor
sub
sbb
int3
mov
dec
clc
test
rclb
fdivrl
inc
pop
adc
les
ret
or
and
in
add
mov
or
pusha
dec
cmp
es
cmc
insl
std
bound
dec
adc
jg
push
ljmp
test
mov
cmp
ss
adc
jge
pop
mov
mov
sub
aam
pop
ret
and
cmpsl
sub
and
cmp
xor
mov
inc
orb
sbb
pop
das
jbe
into
pusha
cmp
je
and
mov
mov
xchg
outsb
fiadds
aas
sub
cld
adc
repnz
adc
xor
hlt
movsl
xchg
sub
rcrb
sbb
cmp
jle
and
xor
fwait
lcall
dec
leave
imul
test
data16
or
cmp
sub
mov
add
ficoms
and
fdiv
xor
rcrl
sub
jp
incb
and
stos
popa
cwtl
repz
pop
movsb
push
dec
lret
repnz
pop
pshufw
mov
arpl
sbb
in
push
adc
push
push
sbb
mov
ret
ss
jp
xor
xlat
mov
orb
fsubs
xor
xchg
les
sbb
or
push
jmp
mov
jbe
sub
mov
and
out
fsubl
pop
mov
pusha
pop
inc
pushf
adcl
or
adc
lds
jmp
lret
mov
and
xchg
ret
adc
pusha
pop
stc
mov
lea
mov
dec
xlat
jp
out
inc
mov
aaa
mov
add
adc
insl
sub
dec
push
psrld
iret
mov
mov
call
pop
sti
xchg
aad
orb
jnp
and
cs
sub
sub
stc
mov
xor
push
adc
mov
outsl
iret
mov
mov
cmp
jecxz
leave
lahf
adc
out
inc
cltd
xchg
mov
das
sbb
sub
sar
pop
not
jp
mov
jp
fwait
lcall
pop
mov
mov
mov
mov
aad
testb
adc
stos
out
dec
add
and
mov
fxch
pop
sbb
scas
push
pop
out
push
inc
xchg
mov
bound
inc
cmpsb
sub
mov
mov
inc
nop
pop
int3
sbbl
shl
mov
and
test
adc
mov
out
fadd
add
add
jp
adc
arpl
scas
lcall
decb
or
lds
cli
shll
pop
xor
push
dec
adc
xchg
mov
cmp
cld
inc
in
call
sbb
pusha
popa
lret
cmp
xchg
das
ror
stc
pushf
and
jns
cltd
enter
addl
dec
mov
lahf
out
data16
add
mov
in
fidivrl
jnp
xor
fildll
std
decl
cmp
in
adc
xchg
gs
mov
push
in
sahf
popa
push
pop
inc
cmpsb
cmc
jmp
sub
enter
into
inc
mov
jbe
call
inc
or
push
jmp
ja
dec
fbld
pushf
pop
pop
jne
outsb
outsl
dec
add
hlt
lcall
cmp
inc
sbb
fwait
movsb
xchg
inc
cmp
or
dec
test
or
cmp
mov
rcrb
mov
repz
int
in
add
test
and
and
mov
and
dec
scas
push
xchg
mov
add
add
testb
cmc
dec
push
shrd
fildll
push
popf
je
mov
add
ds
mov
enter
xchg
lcall
arpl
cli
push
jne
clc
lcall
mov
dec
sbb
gs
sub
sbb
fcompl
arpl
stos
sbb
adc
push
mov
mov
lret
mov
mov
add
and
js
xor
faddp
mov
aam
add
cmp
in
aas
dec
cmp
lret
mov
and
xchg
add
sbb
pop
add
xor
xor
push
cmp
mov
pusha
pop
add
fxch
lds
ret
je
jmp
flds
pop
push
and
pop
mov
add
test
pop
dec
sbbb
jecxz
stc
cwtl
stos
adc
inc
push
pop
and
movsb
fistps
push
mov
push
mov
out
xchg
dec
push
dec
inc
xchg
mov
enter
adc
insl
dec
int3
cmp
loope
push
out
jge
pushf
xchg
or
and
js
and
mov
add
add
xor
icebp
shll
add
jge
test
rorl
mov
mov
or
stos
and
out
jp
jb
je
sarb
arpl
rorb
jecxz
fstps
clc
lcall
push
mov
dec
pusha
or
cs
cmp
fdivr
enter
xchg
mov
cli
sub
jmp
adc
out
mov
add
or
cmp
mov
je
pop
adc
ss
inc
push
int3
mov
xchg
adc
adc
fwait
xchg
push
xlat
mov
inc
mov
pop
rclb
imul
cmc
stc
dec
je
out
outsl
mov
cmp
out
flds
dec
gs
std
add
fadd
cmp
cs
loop
ret
leave
add
mov
xchg
adc
inc
cltd
push
xor
mov
mov
jge
stos
sbb
push
jno
loope
push
rcll
jnp,pn
mov
adc
mov
sbb
xchg
fwait
add
mov
push
xor
jne
jl
jns
fisttpl
test
arpl
push
xor
in
repnz
mov
inc
fnstsw
and
inc
lods
sub
sbb
xor
lock
test
cmpsl
jl
adc
or
mov
fdivs
inc
lcall
inc
cmp
or
test
vxorpd
rol
pop
clc
jne
test
jle
cmp
in
push
lret
inc
pop
push
push
mov
xor
jp
lea
enter
add
lret
movsl
xchg
mov
bound
repz
jmp
lds
aam
or
jecxz
xorb
fdivrs
add
mov
mov
mov
ss
outsl
mov
mov
xor
ja
fnsave
ret
sbb
cltd
je
adc
jmp
xchg
das
xchg
mull
movb
cmpsl
dec
cwtl
mov
mov
cmpl
les
xor
inc
dec
fsubrp
int3
stc
sub
lds
mov
dec
mov
shr
and
pusha
stos
loop
and
jp
in
fcomp
in
stos
insl
mov
mov
imul
cs
js
dec
xor
add
dec
mov
xor
cmp
jmp
pop
cmp
aaa
mov
xchg
es
orb
jg
out
xchg
push
scas
push
sbb
jmp
xchg
loopne
adc
out
sub
inc
sar
or
ret
notb
xchg
out
push
movsb
hlt
cli
mov
call
jbe
add
sub
add
mov
ficomps
fs
sti
pop
adc
fcoml
int3
or
lea
jo
test
jg
out
pop
adc
mov
std
inc
jge
stc
pop
imul
shr
xorl
stc
out
mov
out
xor
inc
sbb
scas
and
aas
addr16
jo
add
and
out
lret
jno
incb
push
or
loop
pushf
pop
rorl
shll
mov
inc
cmpsl
sahf
jecxz
enter
push
adc
rcll
xor
rclb
iret
popl
add
or
and
jne
inc
and
inc
and
test
add
push
ds
mov
mov
xor
lret
hlt
lods
mov
repnz
lea
aad
and
stc
mov
lods
adc
and
lds
and
mov
out
sub
pop
dec
das
aaa
mov
cli
mov
lcall
pop
mov
orl
lock
mov
popl
cmp
lret
push
lret
mov
mov
xor
cltd
add
lahf
stos
add
lods
in
mov
ficoms
jno
fldenv
fwait
pusha
aas
cld
pop
mov
lret
mov
fsubrs
mov
dec
cltd
push
pop
out
dec
pop
cmp
int
in
jp
mov
push
mov
test
lock
lea
xorb
stos
icebp
loopne
and
shlb
ljmp
shrb
mov
int3
xor
sub
xchg
jne
cmc
incl
push
dec
jbe
test
stos
jns
and
repnz
cltd
ljmp
push
mov
scas
cmp
lods
lahf
push
in
xlat
fcoms
popf
push
xchg
push
xchg
xchg
lock
inc
jnp
push
or
add
inc
mov
sub
mov
pop
idiv
adc
sub
shll
iret
ret
or
pop
xor
fisubrl
xlat
repz
adc
mov
std
adcb
fs
jle
pop
pop
add
jecxz
cmpsl
xor
nop
and
jne
outsl
adc
dec
ds
clc
sar
in
mov
pop
adc
das
mov
hlt
add
xchg
sarl
fst
cmp
xchg
push
lock
adc
jns
mov
mov
movsb
add
cmpsb
ljmp
and
sbb
add
jle
je
call
mov
jno
dec
jmp
cmc
loop
mov
es
test
inc
cmp
fsubrs
sub
xchg
dec
test
sbbl
sbb
ret
mov
clc
push
push
nop
dec
inc
cmp
or
fildll
lods
adc
cmp
fistl
lock
test
ret
es
leave
cmp
jno
inc
xor
aaa
inc
or
mov
pop
out
out
mov
mov
push
les
adc
fdivrl
and
sub
imul
nop
enter
adc
ja
lock
cli
out
int
dec
cmp
rcrb
outsl
dec
sbb
adc
sbb
cmp
cltd
lcall
mov
icebp
mov
test
xchg
pop
jle
pop
inc
jnp
sbb
iret
stos
fs
ret
stc
adc
inc
or
inc
add
push
pushf
ss
cmp
and
fcomp
pop
out
mov
and
push
or
pop
mov
testl
in
mov
aaa
movsb
incb
sub
test
fcomip
inc
pop
lea
add
and
sub
mov
push
pop
dec
and
xchg
andl
icebp
fmul
mov
das
pop
jmp
ret
pushf
lret
les
aam
or
popf
pop
popa
sbb
fisubs
mov
jg
pop
fwait
imul
test
sbb
mov
dec
add
dec
std
mov
jle
mov
int
xchg
mov
pusha
jae
mov
add
adc
adc
jbe
addb
fnstcw
lods
jge
mov
and
jno
sbb
xchg
jne
in
jg
lds
jl
aad
mov
sahf
repnz
push
fimull
sahf
call
push
and
jno
mov
mov
sarb
in
ds
lock
test
push
dec
es
movsb
movsb
rol
xchg
mov
mov
outsl
aaa
sub
jl
lret
pop
mov
or
push
out
filds
in
out
mov
jmp
aaa
rclb
neg
push
out
lcall
pop
out
into
in
ljmp
loopne
mov
out
ret
in
add
inc
or
nop
fwait
sub
stos
lock
jle
shl
adc
cwtl
xor
adc
mov
xchg
aaa
mov
mov
ljmp
push
cmp
fldenv
je
nop
pop
mov
fdivl
jno
pusha
cmpl
mov
adc
jae
mov
sub
dec
lods
mov
icebp
cmpsb
inc
mov
dec
xchg
aaa
pop
mov
addb
push
mov
pop
idivb
loop
rcl
pop
enter
lcall
and
lahf
mov
pop
jp
aam
stos
inc
push
jo
cmc
lcall
mov
xor
jae
xchg
adc
dec
stc
je
xchg
outsl
push
fcoml
xchg
shrb
mov
fiadds
popa
pop
fisubrs
mov
push
rorl
out
out
xor
fwait
dec
fcom
mov
add
cmp
cld
mov
add
fiaddl
repz
data16
int3
mov
jmp
popa
frstor
inc
push
mov
dec
push
repnz
jnp
adc
sbb
mov
mov
aad
repnz
sbb
xchg
inc
sub
stos
dec
sub
jns
ret
add
sbb
push
push
adc
adcb
dec
cmp
add
repnz
jp
push
xor
aam
ljmp
add
or
xlat
in
adc
in
pop
cmp
lret
jle
cld
fs
scas
gs
test
loopne
push
adc
cmp
xorb
push
xchg
mov
push
xchg
lea
pushf
mov
and
sbb
and
sbbl
adc
sbb
jnp
mov
pop
insb
jo
sbb
rcrb
pop
push
cmc
neg
xchg
movsb
pop
cmc
lahf
lea
xor
or
adc
dec
iret
test
int3
das
sbb
mov
xchg
mov
sbb
rorl
minps
pop
and
mov
push
aam
cwtl
mov
mov
xor
ficoms
cmp
outsb
int
sub
add
fwait
sbb
pop
fs
rcrl
mov
popa
cld
push
shrb
ss
insl
hlt
push
lret
add
mov
negb
sbb
adc
mov
cmc
daa
repz
fiadds
push
inc
sub
adc
jecxz
std
xchg
in
in
dec
cmp
xor
adc
xor
sbb
out
cwtl
jecxz
xchg
sbb
xchg
aam
cmp
mov
push
xor
jno
mov
cwtl
fs
in
xlat
mov
daa
push
icebp
fdivrs
scas
add
and
ret
or
jge
xor
lcall
mov
cmp
lods
jl
mov
mov
and
test
push
xchg
scas
mov
insl
ficomps
jle
nop
push
or
push
insb
repz
inc
mov
sbb
xor
sbb
shl
adc
sub
adc
sbb
pusha
dec
push
popf
push
sub
pusha
jg
enter
lods
mov
icebp
mov
andb
mov
ja
mov
fs
cmp
cmp
ljmp
fsub
xor
out
mov
repnz
push
xor
xchg
xor
xchg
sbb
mov
adc
pop
aas
jmp
cmp
mov
ret
jae
cmc
int3
sbb
dec
adc
jl
pop
add
test
pop
clc
add
insl
incl
subb
sub
mov
loopne
xchg
roll
dec
xchg
push
lret
jp
subl
cmp
loopne
fiadds
jb
and
mov
mov
pop
imul
fisubrs
cmp
push
iret
sbb
inc
cmp
xchg
jge
push
mov
fists
jno
inc
jns
xorb
pop
test
cmp
mov
add
and
fsubrp
xchg
dec
cmpsl
sbb
mov
inc
mov
sbb
mov
call
aas
lods
int
into
vhsubpd
mov
aad
push
cmpsl
fwait
mov
dec
imul
push
in
daa
hlt
mov
lret
popa
sub
jo
shll
in
pop
jmp
push
rolb
out
test
or
enter
or
push
or
lret
loopne
dec
data16
and
movsl
movsl
push
test
subl
mov
push
xchg
aaa
xor
loop
cmp
push
popf
mov
sbb
fwait
xchg
jb
sbb
xchg
add
imull
test
outsb
mov
in
cld
pop
or
lods
outsl
fnstenv
push
call
adcb
fimuls
inc
xchg
outsb
sub
dec
push
cmp
cmpl
arpl
test
stos
sahf
movsl
cmp
sbb
stos
loop
shlb
push
adc
mov
bound
sub
shll
adc
xor
adc
orb
mov
dec
and
bound
nop
loop
mov
inc
aas
cli
sub
lods
hlt
jns
jp
pop
fwait
aas
bound
jg
dec
sub
ret
mov
dec
jb
mov
cmp
imul
adc
pop
and
jmp
inc
xchg
dec
mov
add
mov
or
inc
das
fcoms
sbb
insb
pop
cmpb
js
lret
dec
mov
pop
pop
push
jle
mov
loop
jge
ja
outsl
inc
inc
xchg
dec
pop
mov
loopne
orl
test
movsb
push
sub
sarb
sti
xor
inc
sahf
imul
pushf
jns
out
inc
and
lock
in
mull
or
cmp
dec
push
add
adc
jle
and
mov
mov
test
inc
popf
lds
xor
fs
sahf
pusha
int
mov
insb
cmp
loopne
mov
das
fdivrs
test
pop
shl
in
stc
in
mov
int3
stos
xor
cmp
mov
sub
int3
fimull
jge
icebp
xchg
mov
aas
mov
in
jnp
lret
xor
pop
cmp
push
testb
or
xchg
add
nop
dec
jno
dec
ficoms
stc
hlt
decl
push
insb
mov
mov
lds
cltd
fs
ficoms
stc
jne
pop
pop
aas
sbb
push
fsubp
insb
adc
pop
mov
inc
ret
mov
cmp
inc
popf
xor
stc
xchg
mov
lods
xchg
mov
push
or
pusha
in
andb
out
pop
cld
push
sbb
lret
xchg
sub
push
fsubs
sub
bnd
jmp
jl
cmpsb
ljmp
push
out
lods
pop
dec
push
xorb
nop
sbb
cs
xchg
int
movsl
decb
orb
ret
out
mov
xor
push
pop
stos
leave
cld
mov
outsb
sub
xchg
adc
push
jmp
and
sti
dec
add
inc
cmp
push
xlat
jg
mov
xor
mov
hlt
mov
jge
repz
test
out
dec
adc
incl
les
mov
roll
adc
andb
mov
loopne
fsubl
xor
inc
sbb
fs
in
jge
add
jge
sub
sbb
sub
gs
sub
xchg
xor
xlat
movsl
shrb
divl
loop
fs
cltd
mov
push
hlt
addl
push
push
fadd
addr16
push
lods
insl
movb
jmp
ja
lea
sub
int
cmp
mov
sub
aaa
pop
bound
cmp
pop
test
sbb
movsb
fimuls
fcoms
xor
pop
jns
vmwrite
insl
lock
loop
push
loope
xchg
jb
and
repz
out
out
pop
enter
test
inc
roll
xchg
pop
push
sbb
popa
lcall
stos
mov
pop
push
jb
rorl
int
mov
fldlg2
shl
repnz
stos
test
addb
add
outsl
shll
adc
repz
std
negl
rcrb
xor
sarl
inc
call
push
mov
mov
in
inc
int
pop
xchg
stc
pop
cli
popa
insb
adc
pop
push
lahf
fidivl
mov
add
in
xchg
push
mov
jle
sub
cmp
stos
cmp
sub
sbb
jg
xor
les
inc
int3
mov
das
aam
mov
and
popa
dec
mov
cmp
rcr
lret
fnstsw
adc
inc
sub
add
imul
mov
adc
push
rolb
xor
jbe
cmp
fisubs
frstor
push
mov
andb
jb
out
mov
je
jle
clc
cmc
pop
pop
icebp
or
jno
loop
mov
or
ret
adc
push
xchg
pop
clc
sbb
mov
xor
pusha
loope
arpl
js
or
das
and
shr
cmpsl
rcll
push
mov
xchg
scas
imul
inc
cmc
cmp
mov
push
cmp
pop
jle
rorl
cmpsb
mov
sub
cwtl
jl
cmp
ficoml
mov
pop
pop
adc
nop
fwait
cltd
repnz
sahf
outsl
push
inc
ljmp
or
xor
xchg
andl
ret
movsl
or
popa
mov
repz
push
mov
jl
adc
or
dec
mov
sub
and
mov
lahf
inc
aad
mov
movsb
push
cli
xchg
lods
mov
enter
mov
push
xchg
mov
push
mov
clc
in
add
xorl
pop
xchg
add
lods
lret
xor
dec
dec
imul
cmp
sub
mov
js
movsb
cmpsl
fsubs
sub
enter
mov
outsb
xor
lods
add
aaa
lcall
fildl
xchg
xor
loope
int3
add
dec
je
in
sahf
lods
push
mull
inc
mov
pushf
dec
push
cmpsl
stos
add
das
leave
insl
dec
in
pop
jb
in
push
adc
scas
loop
lret
or
and
js
les
jbe
cmp
orb
imulb
movsb
xchg
mov
fiaddl
lea
push
sub
pop
stc
clc
pop
mov
and
mov
and
nop
jns
ret
inc
inc
aad
inc
push
sub
lahf
dec
jg
push
or
add
xor
icebp
test
gs
add
sbbb
lahf
cmp
test
pop
push
cmp
out
mov
ret
and
xor
sti
sub
scas
dec
adc
sbbl
mov
mov
cmp
inc
aam
xchg
fisubl
scas
add
aaa
jg
or
adc
imul
push
sahf
jbe
sarl
lea
repz
rclb
jb
adc
cmp
mov
pop
mov
cwtl
lahf
scas
xchg
jecxz
pop
xchg
inc
ret
test
mull
pop
adcl
in
repnz
repnz
xchg
pop
inc
xchg
inc
es
es
in
jg
push
popa
xchg
pop
add
pop
add
and
test
lods
je
ljmp
pop
leave
shrb
and
cmp
test
rorb
mov
sbb
sbb
push
xor
adc
and
pop
xchg
or
pushf
xchg
push
xchg
insb
jl
or
push
fistl
das
pop
out
mov
sub
popf
jae
out
mov
cld
or
sub
stos
inc
adc
fcomps
pop
or
cld
cmp
xchg
sub
xlat
cwtl
or
in
dec
add
pusha
push
lods
sti
push
jecxz
inc
jmp
mov
and
jnp
stos
js
cmpsl
mov
int3
out
and
test
insb
dec
adc
add
cs
shr
and
test
frstor
xchg
cmp
andl
in
inc
pop
sub
aam
jecxz
loopne
pop
inc
cli
fdivs
ret
add
cmp
mov
ja
loop
sahf
test
stos
mov
mov
shlb
pop
push
xchg
mov
nop
mov
jo
arpl
mov
dec
divb
loope
pop
ret
cs
sbb
cld
out
rclb
aam
adc
cld
pop
jg
sub
hlt
mov
enter
jmp
pop
mov
shrb
popa
mov
adc
cwtl
idivb
fstpl
cmp
ss
sbb
ljmp
xchg
or
and
cmpsl
xor
adc
subb
loopne
xchg
or
xchg
jbe
jno
aaa
inc
repz
mov
decb
addl
pop
les
cld
sbb
jp
mov
bound
scas
nop
lods
popa
outsb
in
enter
icebp
push
push
pop
pop
or
dec
mov
xlat
adc
insl
pusha
push
imul
rcll
mov
test
mov
fld
sbb
lret
mov
cmpb
pusha
lret
pop
mov
mov
mov
adc
sbb
stos
xor
andb
inc
or
xchg
jle
iret
jbe
sbb
jnp
and
xor
adc
outsl
fdivrl
cltd
pusha
fldl
adc
cmp
iret
mov
ja
insl
dec
push
aad
rep
xchg
and
enter
pop
jl
xchg
jmp
lock
sarl
addr16
int
mov
aas
fnstcw
inc
inc
aas
sub
mov
push
and
dec
movsl
fstpl
stc
inc
js
xchg
shrb
push
pop
cmp
les
pop
sti
enter
cmc
out
stos
addr16
sbb
outsl
xor
mov
rcll
mov
dec
enter
imul
lret
cmc
xchg
dec
push
lahf
cli
mov
lods
jecxz
mov
dec
fidivrl
daa
cmp
push
mov
daa
or
xchg
jo
dec
pop
push
sub
cmp
dec
xor
rolb
sarb
mov
lret
sbb
mov
shll
and
xor
push
ret
shlb
mov
mov
push
push
mov
adc
insl
repz
mov
sbb
cmp
dec
aaa
outsb
xor
cmp
jmp
lds
push
fchs
jl
jae
mov
es
jbe
cmp
js
mov
pop
push
je
lock
mov
loopne
push
mov
outsb
dec
mov
cmp
cld
xchg
or
push
sti
xchg
adc
ret
jl
dec
sbb
inc
shll
add
repz
mov
pop
jp
in
das
inc
add
sbb
push
lods
sbb
repz
push
sahf
pusha
int3
inc
inc
cld
aas
cwtl
imul
das
movsb
or
out
pop
mov
out
cmpsb
shl
or
mov
adc
xor
mov
mov
js
push
es
add
push
xor
xor
sbb
inc
jbe
loope
fwait
adc
scas
mov
aad
inc
mov
enter
mov
shll
jb
cmpsl
pop
ror
sbb
mov
pushf
je
mov
push
aaa
lcall
shlb
idiv
js
adc
xor
stos
enter
push
mov
out
shlb
sahf
xor
xchg
hlt
pop
lea
js
xor
fisttpl
pop
in
push
out
in
cld
lret
xor
and
and
inc
mov
xor
cli
pusha
jle
mov
or
ss
push
cmpsl
faddl
les
dec
ljmp
subl
xchg
mov
fmul
lock
fsub
rcll
add
or
and
mov
xchg
cmp
repnz
stc
jmp
ror
sbb
fistps
pop
add
stos
cmp
enter
lock
imul
mov
ja
push
into
daa
testl
adc
hlt
fstpt
inc
in
out
inc
in
in
push
cli
dec
icebp
xchg
mov
imul
faddl
lods
int3
insl
pop
std
fiadds
jbe
inc
mov
cmpsb
data16
lret
andb
mov
test
sub
dec
cmp
xchg
cmp
adc
pop
xor
push
lods
push
fidivrl
pop
das
sbb
cmp
dec
nop
lahf
jno
stos
loopne
stos
push
mov
pop
inc
or
xchg
adc
mov
enter
adc
loope
cli
repnz
dec
out
mov
jl
dec
loopne
stc
cmp
sub
sbb
cwtl
les
pop
push
xor
mov
dec
in
cs
test
push
mov
jp
inc
je
imul
aad
int
add
xor
or
shll
sbb
scas
push
jmp
jmp
call
jnp
movb
punpckhbw
cmc
pop
cmp
mov
xchg
nop
xchg
aam
mov
mov
bound
push
sbb
pop
inc
sub
push
ret
add
mov
ljmp
lods
jge
js
mov
enter
add
jnp
add
xchg
hlt
mov
cli
orb
sub
pop
xlat
xlat
inc
cmp
insl
pushf
adc
out
dec
adc
xor
xchg
movb
rcrl
mov
in
lret
into
mov
pusha
ret
popf
into
xor
icebp
fbld
jbe
add
adc
mov
aaa
in
or
cmp
mov
mov
fdivl
fistl
sarl
daa
rclb
aaa
in
jae
push
adc
and
jl
dec
add
xor
mov
stos
std
adc
aaa
nop
cmpsl
dec
repz
data16
lods
ret
daa
out
imul
rol
pop
sub
xchg
mov
push
shrb
inc
add
and
sbb
leave
xchg
test
out
insl
xor
dec
sbb
lds
xchg
cmp
aam
mov
sahf
jnp
jae
dec
dec
sub
je
rcl
popa
mov
call
inc
pop
pop
aas
aad
mov
adc
icebp
jns
push
mov
out
dec
shr
xchg
imul
inc
aas
inc
mov
iret
lahf
pop
test
sbb
cmp
outsl
adc
sbb
in
nop
je
clc
fstpt
pop
inc
jbe
out
cmp
scas
xor
imul
movsl
js
and
xchg
push
lods
lahf
ret
loopne
inc
shrl
test
out
mov
outsb
test
xorb
sub
enter
je
jno
push
fbld
cmpsl
and
sbb
push
push
lods
insl
std
dec
pop
mov
mov
icebp
and
mov
lret
xor
imul
adc
pusha
cmpsl
pusha
mov
int
in
xchg
or
dec
ret
sub
lahf
or
out
out
push
mov
imul
push
pusha
sbb
inc
push
andb
add
jo
js
cmp
clc
popa
jmp
mov
and
mov
das
mov
xchg
sbb
or
mov
scas
and
cmpsb
cmp
adcl
stos
les
jae
test
fs
dec
pcmpeqb
or
xchg
push
into
adc
rcll
sahf
or
mov
jb
push
dec
dec
rcrl
pop
add
mov
mov
push
pop
mov
xorb
push
lahf
adc
fisubrs
sub
fucomp
push
clc
pusha
xchg
xorl
mov
and
xor
je
jnp
lds
inc
push
flds
ret
mov
insb
xor
cmpsb
sbb
dec
push
adc
jmp
ror
into
aas
jl
sbb
mov
or
cwtl
xchg
inc
pop
movsb
je
mov
add
mov
mov
pusha
dec
je
repz
pop
xchg
js
rcr
ljmp
cli
das
sub
ds
addl
lret
rcll
inc
inc
pop
xchg
fdivrp
sub
push
mov
jbe
xchg
push
sti
stc
test
add
out
mov
dec
mov
mov
cmp
fmul
rol
sub
mov
incl
lcall
xor
insl
jge
xchg
nop
add
adc
add
mov
cmp
popa
sbb
push
das
pop
in
hlt
sbb
std
divl
int3
jnp
sahf
lods
lods
pop
pause
mov
jle
cmpsb
mov
lock
mov
pop
xor
inc
pushf
pushf
sbb
mov
and
cmpsl
push
cmp
xchg
mov
add
das
je
xor
pop
or
xor
fdivs
pop
lret
lods
and
dec
xor
or
or
sbb
test
stos
and
mov
fisubs
dec
mov
orb
or
or
mov
xor
dec
add
mov
mov
pop
xchg
sbb
in
jne
inc
push
fidivl
push
enter
stc
ret
test
data16
sar
scas
push
xor
push
mov
fs
test
adc
cmp
dec
add
push
inc
jp
js
dec
jecxz
mov
pop
inc
cltd
addr16
call
mov
repnz
arpl
mov
cmpsb
dec
mov
scas
rol
pop
nop
int
movsl
cmp
jne
out
inc
lods
lret
add
cwtl
add
mov
jne
lea
cwtl
stos
lret
lret
jmp
lock
cmpsb
sti
inc
out
in
or
jl
movsb
mov
in
sbb
dec
pop
rclb
mov
adcl
push
aam
pop
dec
rorl
jo
cmc
xchg
es
dec
or
in
xor
sahf
iret
cmp
popf
sarb
mov
mov
jge
sbb
sub
fbstp
sub
movsl
mov
lahf
and
test
fsubs
aam
xchg
jo
cmp
cld
cmp
cmp
sub
shlb
xlat
fstpt
lret
xor
push
jle
xchg
scas
or
ss
lds
je
cld
jo
faddl
jno
push
xor
jne
add
mov
xchg
aad
cmpsl
jno
or
and
repnz
add
test
mov
ss
inc
es
push
stos
mov
fstps
mov
cmpsb
es
mov
sub
fstpt
lcall
hlt
push
xchg
add
xor
mov
push
sub
in
mov
mov
jl
add
jge
icebp
icebp
mov
and
add
push
add
test
push
addr16
and
mov
popa
scas
xor
xchg
pop
cmp
in
push
inc
jecxz
testl
or
and
cmp
push
adc
pop
inc
add
mov
cmp
jg
pushf
imul
std
mov
ja
push
xor
arpl
loopne
mov
cmc
fisubrs
daa
push
jae
lret
mov
cmp
mull
xchg
xor
cmp
dec
dec
sahf
adc
push
mov
roll
rolb
pop
mov
xchg
and
loopne
jp
cmp
pop
cltd
adc
nop
ljmp
daa
dec
xchg
pop
ficompl
jno
add
mov
mov
fdivl
dec
lea
mov
cmp
fidivrl
push
mov
sub
mov
sahf
xlat
jns
sbb
mov
and
push
jmp
ret
or
std
pop
mov
mov
dec
std
daa
out
nop
push
neg
cmpsb
sbb
aad
sti
xchg
shrb
mov
dec
mov
sbbb
push
xchg
orb
push
mov
out
mov
mov
lock
dec
ds
xchg
sbb
push
rcr
gs
or
mov
test
inc
lret
pop
mov
pop
push
xor
lods
xchg
test
xor
add
jge
dec
dec
sbb
mov
mov
mov
cld
ja
mov
lock
insb
sti
outsl
and
mov
push
sbb
cmp
dec
xchg
lods
push
cld
xchg
add
mov
in
mov
popl
fcmovu
xor
inc
mov
or
mov
mov
popa
cwtl
popa
ds
pop
mov
daa
dec
jno
dec
mov
add
xchg
jns
in
aaa
cli
xchg
xchg
push
out
shl
or
pushf
movq
nop
mov
mov
rorl
aas
lods
mov
out
inc
test
mov
xchg
xor
fbstp
xchg
mov
pop
sub
mov
jmp
aam
addr16
lods
push
xchg
aam
test
sbb
out
inc
cltd
sub
data16
fisubrl
faddl
leave
mov
bound
sti
xchg
pop
mov
inc
enter
pop
and
push
cltd
bound
mov
lock
adc
dec
in
stos
mov
sbb
sub
sbbl
sbb
xor
pop
xchg
pop
std
lret
push
fisubs
out
ljmp
pop
roll
popa
pop
xor
add
out
loopne
scas
cmp
xor
fwait
bnd
jmp
dec
mov
loope
mov
ja
jbe
stos
pop
sbb
and
mov
aaa
mov
fwait
jo
outsb
repz
sub
dec
pop
lcall
les
in
xor
push
in
push
xor
jmp
and
dec
adc
daa
clc
sub
add
mov
jecxz
bound
jmp
sub
loop
mov
xchg
adc
push
inc
loopne
outsb
divl
ss
divb
adc
test
sub
dec
lods
or
rcl
mov
or
daa
inc
mov
jmp
pushl
mov
cmp
test
clc
add
add
pushf
repnz
sarb
push
ret
aas
popf
es
fs
shll
shll
and
gs
mov
mov
jb
add
mov
mov
cmpsl
jno
or
mov
scas
xor
push
mov
repz
jmp
inc
push
add
jle
data16
sub
lret
out
scas
push
inc
push
add
pop
lahf
jnp
lods
loope
lock
or
sbb
push
sarl
sub
jne
push
insb
jp
cmpsl
imul
cmp
in
xor
out
dec
out
jbe
insl
enter
sub
mov
vpacksswb
mov
test
rorb
lret
adc
cmp
aad
outsb
dec
leave
lods
enter
jle
mov
pop
and
mov
out
and
mov
mov
lret
xlat
movsl
and
push
cmp
sub
inc
sub
lds
mov
cmp
add
mov
push
jg
jmp
xor
imul
lds
jp
lock
lret
push
mov
mov
cmp
ss
adcl
outsl
aas
pop
lcall
sub
lods
inc
mov
jge
in
movsb
xchg
xor
jmp
into
mov
xorl
fs
test
and
mov
repz
clc
or
pusha
push
jb
jmp
mov
iret
popf
xor
cld
movsl
cmc
je
jbe
sub
sahf
sub
movsl
sbbb
push
jmp
cld
lds
jae
ljmp
stos
mov
cmp
jge
ja
sbb
mov
sub
xchg
sbb
or
dec
sub
adc
out
lret
add
gs
mul
ficomps
or
ss
jb
ret
stos
xor
pop
fisubl
lods
loope
fcmovu
xchg
nop
push
or
and
bound
addr16
out
sbb
in
adc
jl
jge
inc
nop
fucom
negb
hlt
aaa
dec
sahf
scas
pop
lds
xor
leave
ss
pop
mov
mov
sub
scas
mov
in
xchg
jg
pop
test
int
jns
jns
cltd
movsl
pushf
cmpsl
sahf
aad
les
pop
and
inc
popa
loopne
and
sub
jae
jg
cmp
scas
lret
jl
pop
test
pop
or
stos
mov
fiadds
dec
push
or
sbb
int
add
mov
xchg
lahf
int3
xor
lret
adc
subl
xor
add
punpckhwd
sbb
sarl
lcall
jecxz
cmp
dec
jo
mov
adc
sahf
insb
shrb
xchg
inc
sub
ret
ret
insl
mov
or
fiaddl
mov
mov
cld
testl
icebp
int
mov
or
loopne
xchg
pop
fistl
mov
push
mov
add
and
pushl
movsl
ud0
mov
fdivrl
into
outsl
daa
das
mov
pop
ss
mov
fidivl
push
inc
cmp
mov
sbb
or
cmpl
and
push
cld
aaa
cli
bound
push
add
or
das
xlat
jo
adc
mov
mov
pop
insb
dec
aas
inc
inc
mov
jle
icebp
mov
fwait
push
fwait
out
xchg
inc
jecxz
ret
xchg
cld
xchg
in
ja
jb
lahf
dec
inc
pop
adc
adc
mov
xchg
sbb
insb
insl
cs
cltd
mov
mov
xchg
dec
adc
shll
popa
movsl
pop
lods
xorl
nop
or
outsb
jns
xor
iret
mov
into
addr16
std
push
pop
fnsave
jae
mov
sarl
mov
jnp
jmp
mov
jge
ret
sbb
push
xor
jbe
sbb
pop
xchg
dec
xor
adc
mov
lea
sbb
pop
pop
movsb
pushf
and
cli
inc
dec
out
sarb
jo
sbb
dec
shrl
sbb
xchg
pop
fdivl
movsl
addr16
ds
xchg
clc
lret
leave
fbld
mov
cli
inc
mov
and
nop
out
pop
cmp
imul
lret
adc
mov
clc
je
aam
mov
pop
and
pusha
xor
pop
sahf
mov
dec
adc
xchg
ljmp
or
inc
gs
inc
and
jno
jp
insb
fnstcw
test
aad
cmp
pusha
enter
hlt
decb
sub
dec
out
xor
mov
cmpsb
dec
jp
mov
mov
and
push
pushf
ljmp
flds
xor
xchg
add
mov
jb
test
jae
pushl
dec
fcomip
mov
and
inc
hlt
ret
vsqrtsd
loopne
sbbl
push
cmpsl
jb
inc
loop
fdivrl
cmp
mov
xor
inc
adc
pop
lods
mov
mov
clc
js
mov
add
mov
dec
inc
int3
xchg
jns
outsl
adc
mov
stos
mov
pop
addb
pop
jge
rclb
inc
xchg
cmpl
stos
sti
nop
fistps
or
cli
and
aam
lods
cmp
into
repnz
or
movsl
popa
ss
shrl
out
mov
sti
stos
jae
clc
and
es
js
mov
adc
packuswb
cltd
push
mov
jge
xchg
cmp
lods
mov
and
aas
ret
mov
sbb
xor
jae
sub
dec
in
ss
pusha
mov
and
xchg
bound
mov
jmp
jae
jno
and
mov
std
test
fistl
enter
jmp
pushf
mov
jge
sbb
popa
cmp
or
sub
outsl
cltd
cmpl
mov
lahf
pop
jle
mov
sbb
jns
cmpsb
mull
sahf
mov
fmuls
ret
out
dec
jecxz
dec
jecxz
les
test
xchg
push
sub
enter
sbbl
sarl
xchg
mov
fildl
mov
ret
dec
mov
js
fwait
aas
test
push
pop
rcrb
insl
mov
testl
inc
aas
in
scas
dec
jmp
pop
clc
icebp
test
loopne
in
pop
fwait
push
cli
sbb
jge
scas
repnz
add
cmp
hlt
fucomp
loopne
out
add
outsl
ss
ljmp
cmp
mov
outsl
jp
fs
xchg
ret
xlat
jb
aaa
jmp
pushf
sub
ja
repnz
je
fdivl
out
hlt
jno
movsb
push
mov
jo
mov
cmp
sub
mov
js
leave
dec
loopne
icebp
add
mov
cmp
ja
cmp
repz
test
mov
or
pushf
ja
inc
add
mov
adc
into
in
xchg
pop
jae
ss
stos
jns
sahf
pop
sub
jae
imul
mov
pop
push
testl
popa
fidivs
add
sub
lret
mov
sub
mov
dec
es
call
test
push
scas
outsl
decb
mov
ljmp
fstps
hlt
mov
icebp
mov
fwait
sub
or
in
fs
xorl
fstpl
daa
cwtl
out
jmp
imul
clc
xor
mov
mov
push
out
cmp
add
fildl
adc
pop
insl
push
sti
out
add
sub
out
stos
arpl
jns
shll
mov
adc
xlat
repz
jnp
dec
cmp
cltd
in
add
icebp
test
sbb
or
into
push
lahf
mov
in
mov
and
mov
test
loopne
int3
aad
mov
or
jp
cmpsl
pop
mov
xor
ret
aas
repnz
test
gs
js
adc
rcrl
pushf
out
or
iret
xchg
mov
aam
insl
in
adc
sbb
xchg
sub
repz
xor
fiadds
mov
test
dec
mov
imull
dec
insb
dec
add
mov
je
fsubl
lock
ret
push
aas
jmp
outsl
adcb
insb
lock
movb
mov
repz
jp
sub
movlps
sti
gs
xor
fdiv
test
test
scas
pop
xchg
jg
push
sahf
push
mov
push
jo
xchg
pop
xor
movsb
xchg
fadds
mov
imul
cmpsb
dec
inc
push
lock
fs
in
cwtl
ret
cmp
stos
fdivp
push
cmp
loop
aam
lock
adc
repnz
repnz
aad
ss
or
scas
rcll
jmp
in
icebp
mov
xchg
push
loop
inc
dec
mov
les
mov
leave
add
inc
xchg
inc
es
lret
movsl
out
imul
int3
fildll
jmp
movsb
ds
adc
lods
stc
sub
subb
or
cld
icebp
xchg
xor
mov
adc
gs
dec
aam
xchg
dec
dec
loope
sbb
xchg
lds
pusha
mov
scas
aaa
dec
fnsave
mov
mov
jne
mov
sahf
test
xor
sbb
mov
adc
ds
movsl
lods
xor
dec
pop
dec
push
stos
stc
aas
lahf
adc
pop
xchg
movsb
or
sbb
pop
cmc
pop
mov
jle
xor
sbb
arpl
popa
jge
sbb
xchg
rolb
mov
addr16
dec
loope
imul
jns
fbld
xlat
xor
repnz
push
sbb
mov
sub
dec
adc
dec
sahf
fucom
pop
xchg
dec
cld
mov
dec
fimuls
movsl
imul
ret
jo
xlat
out
enter
add
imul
out
push
push
jo
stos
das
pop
inc
addb
rcrl
lahf
ficomps
sbb
and
push
stos
addl
push
inc
je
pop
sbb
and
or
imul
add
add
stos
sbb
clc
addr16
mov
sbb
xchg
in
fwait
cmp
mov
test
push
outsl
push
aad
rcll
xchg
xchg
sbb
call
sbbb
and
sbb
cmpsl
loope
daa
mov
fbld
lret
clc
adc
mov
fmul
mov
fwait
or
lea
jge
dec
inc
xchg
jno
out
in
in
aam
lea
je
xchg
xor
mov
bound
enter
push
shrl
xchg
mov
mov
xchg
out
push
ss
xchg
jg
push
lret
push
cltd
inc
mov
adc
push
jbe
shll
js
jl
mov
aas
jo
or
sub
mov
fdivrl
mov
xchg
pop
mov
mov
push
dec
add
stos
js
shll
mov
and
cmp
xor
jg
sbb
ljmp
cmc
inc
jbe
cld
or
pusha
xchg
cmpsb
xor
pop
into
test
dec
mov
pop
pop
fmull
pop
and
xor
push
aaa
mov
pop
pop
iret
push
js
mov
imul
and
mov
inc
popf
out
cmpsl
fs
mov
inc
sub
test
adc
mov
aad
push
stc
neg
repnz
and
sbb
std
movsb
mov
icebp
enter
cmp
movsb
mov
pop
and
jl
mov
fwait
push
sbb
sub
fsubs
mov
adc
sbb
inc
dec
push
lds
stc
stc
test
sbb
cmp
enter
add
inc
or
fwait
mov
jmp
loopne
adc
mov
cs
int3
add
cmpsl
lds
cmp
xchg
int
js
add
and
out
mov
sbb
out
dec
jnp
jo
in
mov
adc
andb
stos
mov
out
pop
sub
xchg
dec
sbb
adc
imul
add
inc
imul
add
test
cmpsb
notl
pop
add
fwait
add
and
inc
fs
and
jecxz
hlt
xchg
inc
subb
stos
movsl
mov
pop
xor
fcmovb
jmp
popf
pop
inc
inc
clc
outsl
lds
movsl
inc
mov
pop
clc
jl
roll
negl
cmp
call
imul
cld
mov
jmp
mov
lds
adc
out
xor
insb
pop
enter
jle
push
mov
js
popa
lret
cmp
mov
and
mov
rorl
rcll
and
iret
nop
or
leave
push
sbb
pop
cmc
add
ja
out
nop
jg
cltd
pop
adc
pop
push
pop
adcb
mov
mov
inc
sbbl
mov
inc
mov
push
pop
inc
icebp
mov
jecxz
orb
pop
lods
xchg
stc
lods
mov
or
adc
and
jae
or
jp
xor
test
fistpl
and
dec
push
or
mov
imul
in
inc
in
pop
repz
pop
stos
or
xor
adc
mov
pop
in
sti
cmpsb
sti
mov
dec
or
mov
dec
xor
cmpl
xchg
and
sti
and
repnz
and
cmp
leave
jbe
repnz
xchg
ja
pop
jmp
jmp
push
std
arpl
scas
aam
or
imul
mov
xchg
cmc
sbb
mov
push
or
das
movsl
pop
rclb
ret
adc
pushf
pop
add
mov
add
add
jb
lret
daa
stos
fidivrs
sahf
repz
mov
pushf
aas
xchg
test
jbe
popf
shr
mov
in
mov
bound
add
cmp
inc
loopne
adc
pop
mov
mov
jae
add
add
jbe
out
jg
add
jp
pop
shlb
nop
sub
hlt
pop
scas
shlb
mov
add
add
mov
and
inc
dec
pop
xchg
pop
scas
call
sub
and
movsl
pushf
xchg
gs
push
sbb
or
fidivl
outsb
mov
xor
mov
sub
push
pop
out
fsubrl
fcom
and
sbb
mov
xchg
movsb
sarb
and
xchg
mov
adc
jnp
enter
insb
xchg
sub
pop
push
ret
out
mov
out
add
movsb
inc
push
and
pop
xor
fisubs
mov
push
jne
cmpsb
fimull
out
orb
add
pop
xchg
call
xor
lret
shll
js
out
pop
push
or
fsubrs
test
mov
mov
inc
daa
push
push
mov
aam
sub
pop
imul
dec
and
add
lcall
jne
add
cmp
dec
jl
insl
push
push
sub
into
xchg
lods
jmp
aad
sub
or
adc
les
dec
fidivl
push
es
test
dec
pop
xor
cmp
push
ja
lret
lret
xor
inc
inc
inc
adc
sahf
stos
fadds
out
lock
sbbb
in
cwtl
ret
cmp
dec
or
jno
fdiv
push
jg
es
lcall
inc
and
mov
xchg
mov
fcomps
movsl
inc
push
popa
adc
lods
mov
aaa
clc
mov
dec
jo
jp
out
push
ja
xchg
aas
xor
icebp
popl
pop
lcall
jle
push
xchg
jg
push
ss
pop
loope
dec
push
das
xlat
push
push
and
xchg
dec
xor
add
fstpl
push
sub
sarl
or
fnstcw
repz
mov
popf
lret
xchg
dec
das
xchg
jp
ss
inc
lcall
loopne
mov
sbb
xor
inc
push
ret
xchg
sbb
sub
stos
sahf
mov
and
out
scas
jns
sti
mov
test
cmpsl
cmc
jp
mov
fimull
dec
jg
sbb
rorb
sbb
or
mov
inc
jg
lahf
arpl
ja
mov
mov
aam
arpl
ja
fmul
push
outsl
xchg
xchg
imul
xchg
mov
mov
cmp
xchg
std
mov
pop
mov
push
pushf
lahf
mov
push
jo
jmp
jmp
mov
enter
mov
loope
out
dec
mov
mov
sub
xrelease
inc
and
fdivrp
cmp
leave
lods
inc
setno
aam
xor
std
scas
push
add
stos
pushl
mov
push
xlat
out
sbbb
inc
sahf
mov
pop
sbb
mov
dec
mov
lahf
mov
add
jns
ss
push
lahf
inc
or
and
mov
inc
pop
sbb
or
roll
out
pushf
pandn
dec
lret
mov
push
mov
lret
test
lds
push
sbb
aam
imulb
cmp
ds
adc
xor
adc
sub
jge
adc
or
cltd
leave
cmp
or
pop
stos
and
mov
and
sub
and
jno
lods
nop
adc
cmp
mov
mov
out
out
std
xor
mov
mov
outsb
int
enter
imul
cmp
dec
call
sub
cmpsb
scas
dec
in
dec
cwtl
test
icebp
add
or
int
or
pop
dec
and
cmpb
mov
aad
stos
xchg
shlb
adc
fildll
sahf
enter
aaa
movsb
xor
sub
or
add
out
xor
fdivrs
jns
leave
pop
push
add
sti
lahf
fdivr
imul
int3
add
or
insb
in
adc
cs
inc
cmpb
lahf
cmc
popa
push
stos
sar
pop
xlat
add
jns
aas
xchg
mov
outsb
fmull
mov
xchg
fwait
mov
pop
imul
pop
call
popa
mov
and
lods
hlt
sbb
loope
sub
sub
cmp
jo
mov
subb
int3
jae
hlt
subl
sub
cltd
cld
popa
fcom
nop
les
push
or
mov
pushl
xchg
mov
adc
test
xor
xchg
shrb
movsl
xchg
ffree
sub
jmp
daa
std
dec
dec
out
pop
loope
enter
push
andb
mov
mov
add
adc
sub
push
popa
jecxz
sahf
aad
mov
mov
mov
dec
inc
cmc
std
push
iret
ds
pushf
mov
popf
inc
dec
mov
stos
test
xor
in
push
fwait
repz
jb
fildl
sarb
mov
sub
nop
lahf
adc
scas
aas
popf
aad
adc
insb
push
push
lods
cmpsb
inc
or
push
mov
fwait
jp
lret
inc
mov
ljmp
in
pop
sti
int
idivl
aas
sbb
mov
mov
jp
mov
jnp
ficomps
jmp
stos
ljmp
pop
xchg
pop
inc
xchg
cmp
hlt
or
lret
push
ss
push
xchg
mov
mov
sub
sub
outsb
jecxz
fs
jg
xchg
dec
sbb
iret
mov
adc
mov
mov
jnp
cli
jge
add
lret
push
or
cwtl
fisubl
pop
fists
and
push
gs
fwait
or
push
stos
nop
mov
adc
and
pop
xor
dec
jae
and
xor
std
sbb
int
push
je
inc
xor
jp
xchg
jecxz
or
push
cmp
mov
lods
mov
mov
cld
cmp
cmc
arpl
inc
rcrb
dec
sub
loopne
adc
aas
xchg
mov
pop
jno
jae
mull
test
pop
pop
shll
bound
call
loop
pushf
pop
pop
inc
sub
xchg
xor
lcall
sub
xchg
mov
jp
dec
mov
cmp
jmp
test
shlb
pusha
xor
push
decl
cmpsl
mov
and
inc
aaa
mov
add
lods
dec
adc
and
mov
xchg
xchg
fmuls
adc
fistl
imul
rorb
inc
shrl
ss
xchg
out
lods
dec
add
jbe
ret
dec
dec
mov
sbb
into
out
inc
pushf
and
mov
and
cmpsb
in
ja
cltd
inc
xchg
shr
test
mov
pop
mov
xchg
ja
or
insl
roll
std
xchg
orl
data16
lahf
push
ja
shlb
ja
outsb
mov
fdivrl
add
or
insl
mov
or
jecxz
cmc
mov
xchg
sbb
lds
negl
mov
ss
inc
daa
lahf
xor
cmp
adc
jecxz
stos
and
mov
cltd
mov
int
out
push
outsl
jle
push
icebp
xor
pop
cltd
dec
xchg
and
scas
adc
fidivrs
pop
or
fsubrl
cmp
mov
add
sbb
test
mov
sahf
mov
jle
pop
in
fadds
xorb
lret
loop
mov
mov
sub
pop
mov
adc
sti
sti
mov
popa
mov
movsl
xor
sbb
stos
je
lcall
add
push
in
mov
or
js
mov
jg
outsb
enter
fiaddl
inc
cmp
adc
dec
mov
es
scas
and
in
push
fsubrl
mov
arpl
and
inc
inc
or
repz
dec
push
insb
lcall
jbe
fiaddl
or
lret
pop
shll
xor
int3
mov
xor
sbb
orl
push
mov
aaa
fs
ror
fstps
sub
jbe,pt
and
mov
mov
test
push
test
cmp
and
roll
inc
cmp
push
pop
jns
xchg
dec
jg
sbb
lea
dec
or
popf
and
cmp
pushf
and
lahf
xchg
popf
jae
cmpsl
xlat
loopne
test
dec
insl
out
pop
xor
stos
xchg
and
inc
out
test
inc
pop
and
pop
jge
adc
mov
jbe
and
stc
es
sub
push
int
mov
int
mov
sbb
into
das
inc
sbb
rclb
inc
sbb
out
push
push
dec
pop
data16
in
jmp
cwtl
xor
sub
inc
out
rorb
loopne
stos
inc
test
xor
pop
and
popa
mov
iret
ret
push
les
mov
lds
outsl
pusha
mov
dec
sub
addl
in
adc
call
lcall
adc
sti
adc
fnsave
jg
pop
push
adc
sahf
mov
dec
jg
movsl
stos
test
mov
in
inc
cmp
adcb
rcll
jno
xchg
add
pop
sub
mov
add
mov
cmp
sub
in
jecxz
xchg
and
sti
push
stos
or
bound
mov
adc
sub
lret
mov
mov
xchg
and
out
pop
test
inc
imul
idivl
xchg
rorb
sbb
bnd
inc
fistpll
icebp
out
aas
testl
cmp
cli
leave
mov
sub
movsl
jecxz
clc
mov
cli
mov
adc
mov
mov
adc
iret
push
xor
mov
and
sbb
add
add
or
adc
and
insl
and
test
push
jb
jo
dec
shr
pop
ljmp
sbb
inc
out
outsb
push
cmp
lret
xchg
movsl
sbb
ljmp
pop
adc
popa
xor
or
push
movsb
mov
cmp
jne
inc
lods
push
sbb
add
jmp
push
inc
lret
clc
insl
out
push
jmp
scas
dec
cs
mov
insl
adc
out
xor
test
sub
popf
pop
sbb
jnp
cmp
mov
dec
jecxz
in
inc
push
imul
jbe
fstl
cs
imul
adc
int
pop
test
dec
xor
cmp
sub
and
jl
jg
lcall
inc
fadds
dec
ret
scas
sti
mov
mov
ret
nop
fdivrl
lods
call
ss
push
repz
sub
xchg
sub
pop
dec
cmc
or
and
xchg
fcomps
push
add
cld
scas
cwtl
pop
lcall
lcall
jp
mov
fcmovbe
xchg
jbe
cmp
jne
mov
scas
sti
inc
sti
aad
in
cmpsb
fildl
cmc
loopw
leave
movsb
push
fwait
out
adc
nop
push
repnz
idivb
clc
inc
hlt
xchg
mov
int3
cmpsl
fadds
test
and
int
xor
pop
xchg
sub
inc
sbb
xchg
leave
fstl
fmulp
loopne
jecxz
ds
adc
sahf
mov
xchg
push
sub
movsb
mov
lods
and
fs
dec
aad
xchg
cmp
mov
rol
out
cmp
cmc
rorl
cltd
push
push
mov
mov
jl
push
dec
or
test
push
int
xorb
stos
jb
or
stc
push
pop
xchg
jno
push
adc
mov
ss
adc
lret
sub
pusha
jp
xchg
mov
cmp
push
xor
rorb
sbb
in
jg
pop
cli
and
lahf
inc
loop
test
insb
aaa
jb
or
cwtl
icebp
dec
add
rorl
int3
jle
je
and
shrb
insl
push
pop
loope
inc
mov
insl
jp
sub
mov
clc
jne
mov
outsb
xchg
and
xchg
adcl
xor
mulb
scas
loope
stos
popf
inc
lods
into
inc
mov
aad
adc
dec
imul
es
clc
mov
cltd
inc
xor
pop
fwait
xor
jne
xor
ljmp
dec
ss
test
jns
adc
shl
jle
mov
push
and
in
fsubp
jns
pop
sbb
cmp
inc
in
test
add
inc
xor
cmpsb
and
ja
jmp
cmp
cs
sbb
les
push
fwait
push
adc
cmp
and
or
jp
loopne
xchg
mov
outsb
ja
xor
cmpsb
xchg
adc
dec
cmp
inc
lret
adc
sbb
int
mov
jmp
mov
orb
and
cmp
pop
add
call
jmp
mov
mov
cmp
sbb
fstpt
sub
outsl
out
ljmp
fstl
aam
jns
ficompl
xor
jp
lods
inc
fwait
mov
push
in
adc
fisubl
aas
insb
jae
cmp
insl
jo
mov
clc
and
mov
push
mov
stc
pusha
xchg
pop
aas
inc
mov
push
cmp
cltd
into
mov
or
clc
imulb
jbe
outsl
aas
ds
jecxz
out
insl
cmc
jne
pusha
dec
cmpsb
xor
inc
add
push
fstpt
pop
jl
inc
sarl
add
movsb
and
idivb
movsb
pop
popa
pop
pop
daa
jl
cltd
pop
jmp
cmp
xchg
or
cmpsl
mov
adc
adc
push
and
test
add
push
repz
sbb
movsl
repz
aad
ret
fs
repz
dec
repz
push
mov
push
adc
push
fwait
loope
mov
push
inc
aaa
fistpll
sub
jnp
rorl
addb
fnstcw
mov
enter
jne
mov
sbb
dec
dec
enter
fdivr
out
sbb
add
mov
shrb
mov
sub
scas
les
fstpl
fwait
clc
cli
and
loopne
cmp
mov
pop
js
or
xchg
cltd
dec
ror
in
fcoml
jmp
sub
sbb
inc
jg
xchg
and
add
adc
iret
cltd
push
xchg
jo
es
mov
xchg
inc
jns
sub
lea
inc
shll
push
push
loopne
jecxz
and
stos
enter
pusha
cmp
movsb
sub
push
sub
insb
mov
inc
popa
dec
xor
and
cmpsl
inc
lret
imul
and
xchg
inc
call
out
sahf
mov
fidivs
movsl
xchg
pop
or
pop
bound
mov
add
mov
mov
out
add
popa
inc
ljmp
sub
test
in
push
sub
xchg
add
test
call
and
pop
sub
and
fmull
sub
push
fwait
xorb
sub
data16
ja
hlt
subl
add
push
mov
pop
out
mov
add
jecxz
inc
comiss
aam
lcall
push
imul
sbb
mov
or
mov
jns
dec
add
insb
mov
cld
jl
jp
mov
pop
loop
sbb
fstpt
outsl
mov
adc
xlat
pop
dec
lret
sti
push
nop
addr16
pop
test
xchg
dec
shl
sbb
add
repz
out
out
mov
ja
and
cld
fdivrl
inc
cmp
sbb
mov
and
mov
rcrl
jne
sti
jmp
pop
std
mov
cmpsb
call
data16
adc
rolb
dec
jbe
dec
std
int3
mov
mov
loop
outsb
ret
xchg
fbld
sub
jle
imul
in
add
xchg
xchg
and
insl
adc
cmc
in
inc
push
or
dec
jl
jp
ret
mov
push
sub
mov
stc
test
adc
xchg
fcoml
push
cmp
inc
lea
xchg
lods
pop
jmp
pop
mov
mov
mov
addb
sub
push
xor
adc
out
push
mov
addr16
js
test
js
ret
insb
popf
or
jecxz
push
je
decl
cs
loopne
adc
jmp
int3
imul
andb
push
mov
imul
icebp
loopne
xchg
mov
dec
xor
les
dec
sbb
inc
pop
test
or
adc
unpcklps
stc
fisubrs
pop
mov
loop
add
push
lret
fisubl
test
mov
push
lock
leave
stos
les
mov
mov
sub
stc
test
repnz
pop
negb
cmc
adc
jmp
push
mov
lret
push
repz
push
repnz
mov
gs
pop
adc
cmp
rclb
inc
shll
in
push
out
int
push
cmpsl
ljmp
negb
stc
jb
shrl
insl
es
and
call
add
lods
test
test
xor
in
and
adc
adc
or
js
outsl
dec
cmc
push
addb
and
mov
cltd
or
fcmove
lea
jnp
fcomps
mov
mov
jno
out
jbe
push
pop
or
inc
sub
ficoms
mov
xchg
in
aaa
cmp
les
pop
test
xor
jl
mov
mov
lcall
sbb
cmp
in
mov
dec
sahf
jecxz
xor
outsb
aaa
pop
pop
shll
cmp
sub
or
dec
mov
cltd
hlt
inc
ljmp
jge
push
adc
mull
lods
scas
xchg
arpl
inc
cmp
sbb
mov
dec
imul
dec
ret
lret
xchg
loop
roll
or
mov
mov
scas
adcb
lea
push
mov
rolb
xorl
rcll
dec
jp
and
fbstp
add
shrb
ss
cs
dec
cmp
and
sub
jg
sbb
das
mov
inc
idiv
mov
mov
rcll
jmp
sub
mov
add
jle
hlt
insl
imul
pop
subb
enter
pop
push
in
shlb
rcll
aam
or
xchg
jmp
fnsave
outsl
clc
lods
fwait
pop
ss
adc
jge
mov
aaa
pop
testl
data16
sub
push
cli
and
outsl
jg
xchg
popf
push
repz
cmp
jge
lds
push
sbb
and
mov
sar
pop
cmpsb
movsl
mov
jl
outsl
fst
lock
adc
sarb
daa
fnstsw
lret
inc
cmp
xor
sub
pop
mov
shll
inc
stc
pop
imul
sub
mov
fwait
xchg
in
insb
stos
mov
cmp
adc
adc
pop
lret
jo
xor
inc
fsubrl
jne
xor
roll
aaa
jae
andl
dec
ja
mov
outsb
adc
jge
mov
or
mov
lods
stos
lods
jge
inc
push
xor
inc
push
ljmp
ret
cmp
out
sub
lahf
ja
push
pop
jp
fiaddl
jg
roll
scas
sbb
xor
xchg
shr
pop
adc
pop
leave
movsb
mov
jmp
or
add
pusha
test
clc
test
test
sti
mov
stos
pop
mov
cmp
cli
inc
xchg
xchg
mov
ret
or
pop
and
movsb
mov
fsub
add
pop
sbb
fbstp
into
addb
out
xchg
sbb
dec
xchg
jl
or
mov
cmovb
aas
ja
mov
enter
cmc
sbb
clc
inc
ljmp
testl
sub
push
xchg
sub
not
pop
int
pop
push
xor
xchg
shll
pop
lock
popf
adc
add
neg
enter
mov
popf
ss
jne
jb
mov
sub
or
ljmp
out
and
and
add
xor
and
movsb
fistl
imul
outsl
jnp
sar
filds
mov
ret
sbb
out
or
pop
adc
xchg
or
mov
leave
jne
scas
jns
xchg
lds
aaa
or
and
js
test
fsubr
adc
adc
inc
ficoml
loopne
push
cmp
sub
adc
sub
xor
cwtl
add
xchg
cmp
cmpsb
aad
mov
push
sbb
inc
mov
inc
and
mov
out
mulb
dec
ljmp
into
xchg
cmp
and
jge
add
add
test
adc
xor
add
adc
dec
lods
rolb
gs
and
dec
xor
int3
mov
dec
push
aaa
out
jl
cld
sbb
mov
sbb
insl
xchg
pop
jnp
jmp
ja
rorb
movsb
mov
lds
out
clc
dec
jge
imul
mov
aaa
stos
movsl
je
arpl
adc
das
add
es
and
push
push
dec
mov
outsb
xor
test
mov
jmp
cltd
dec
push
mov
mov
hlt
pusha
loope
test
dec
pop
leave
jbe
stc
sub
jns
sbb
outsb
or
xor
sub
iret
push
insb
jne
lea
xor
pusha
or
lret
je
xchg
lods
or
aad
mov
push
pop
in
repnz
dec
or
mov
mov
mov
cmp
mov
push
adc
inc
popf
cmp
adc
xchg
pusha
insl
jle
out
iret
inc
xchg
mov
xchg
cltd
dec
dec
xlat
inc
mov
lahf
inc
and
negb
inc
incl
movsb
mov
imul
jns
out
dec
stos
gs
xor
inc
sti
pop
jo
idivl
adc
mov
dec
rol
enter
ljmp
xchg
inc
shrl
mov
ljmp
lock
pop
fldt
push
gs
mov
push
mull
push
adc
insb
std
mov
cmpl
loope
xchg
dec
inc
inc
lea
je
xchg
imul
mov
jb
mov
rclb
push
lret
cltd
scas
mov
lahf
insl
hlt
dec
std
in
xor
repnz
daa
and
dec
subl
fnstsw
daa
popf
subb
ret
bound
mov
aaa
push
and
xchg
add
push
cli
sub
in
mov
cltd
je
out
std
movsb
and
add
pop
push
mov
testb
lock
inc
das
and
xchg
pop
outsb
push
hlt
insb
fnstenv
jae
ss
lock
mov
mov
adc
xchg
repz
inc
cmp
fisubrs
movsl
jge
fidivl
pop
lea
cmp
iret
rcl
and
pushf
push
aas
cmpl
out
iret
jle
xchg
sarl
popf
adc
mul
inc
icebp
mov
jl
imul
jecxz
mov
xor
adc
cmc
sti
cmp
dec
ss
sbb
into
pop
cmp
rcl
aad
adc
rol
sbb
push
das
stc
or
not
inc
cmp
cmp
into
add
inc
lock
outsb
sub
mov
popa
lods
call
sbb
pop
pop
ror
imul
insb
lods
jbe
sub
icebp
mov
adc
adc
jle
add
mov
pusha
cld
aaa
and
xchg
je,pn
xchg
dec
xchg
test
xor
shll
sub
sub
push
push
xor
inc
shrl
xor
jae
cli
jmp
adc
xchg
mov
in
aad
push
arpl
adc
xchg
nop
push
sbb
jmp
pop
rclb
shll
push
xchg
add
push
test
scas
test
push
adc
xchg
inc
bound
adc
lret
pop
jnp
int
mov
stc
xlat
jmp
xchg
mov
or
inc
jmp
inc
xor
out
fwait
out
sub
or
repz
and
sub
cmp
xor
mov
and
pusha
fistpll
mov
ds
mov
sub
out
dec
mov
test
pop
pop
sub
stos
imul
out
out
pop
jmp
adc
loopne
xor
or
call
mov
roll
sti
pop
xchg
rcrb
mov
shrl
mov
cltd
out
xor
pop
cmpsb
int
mov
and
and
jne
and
jo
movsb
ss
pmaxub
lock
out
leave
pushf
mov
or
fs
pop
adc
test
rcl
rcrb
hlt
jecxz
sbb
mov
mov
addr16
andb
add
hlt
cmpl
jae
mov
mov
pop
cmpsl
test
cltd
mov
jp
loopne
push
and
ret
loop
data16
adc
rol
sti
sub
mov
test
jbe
push
jbe
lock
js
or
mov
test
xchg
cmp
hlt
lea
jbe
dec
aad
into
xchg
mov
out
cmp
xlat
cmc
les
rclb
lods
pop
jle
popa
ret
jno,pt
or
aam
xchg
mov
lods
daa
das
and
movsl
sub
in
jae
sbb
sub
fidivs
mov
cltd
imul
cmpsb
sahf
loopne
jle
sahf
outsb
pop
int
imul
loope
dec
popf
orl
pop
inc
add
xor
dec
leave
push
out
add
enter
cwtl
adc
enter
mov
pusha
xchg
aam
xor
sbb
cmc
mov
repnz
sub
mov
dec
ljmp
in
cmp
testb
mov
pop
loope
push
mulb
test
push
pop
stos
stos
js
mov
cli
movsb
push
imul
repz
mov
addr16
fisubrl
je
push
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fisttpll
stos
fists
sbb
mov
ret
enter
popf
sub
jae
cmp
repnz
stos
divb
push
sub
testl
xchg
adcb
leave
inc
cmp
fbstp
xchg
and
xor
outsl
lods
adc
aad
enter
insl
mov
stc
adc
mov
xchg
imul
pop
ss
int
mov
mov
lods
mov
into
jnp
jne
sbb
adc
pop
mov
jae
mov
lea
outsb
cmp
shll
cmpb
aas
frstor
cmp
mov
stc
mov
jle
push
sahf
push
shl
lock
and
ljmp
pop
mov
call
repnz
xlat
mov
and
pop
jl
fwait
leave
xchg
jbe
rorl
sbb
mov
xchg
fldt
jl
es
aas
dec
mov
ja
dec
cmp
outsl
jb
mov
adc
je
adc
xchg
movl
aad
pop
inc
gs
stc
fimuls
frstor
notl
fsubl
mov
xchg
inc
push
popf
aam
in
push
pop
cmpsl
fidivl
cld
jl
out
adc
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pushf
movsl
mov
add
out
mov
