movl
lret
pushf
das
orb
sub
sub
scas
pop
lock
imull
ss
sahf
pop
ret
loop
pop
movsb
xlat
ret
pop
bound
inc
xor
movsb
dec
loopne
fcoms
sahf
insl
xor
dec
icebp
into
test
rorl
outsl
int
cmp
cmpsb
out
orb
xchg
das
xlat
inc
jo
inc
das
cld
dec
or
lods
das
or
jge
inc
into
and
fsts
push
gs
out
pop
cmp
pushf
das
subb
pop
subb
xchg
lret
pushf
das
movsbl
ljmp
adc
mov
sahf
sub
mov
inc
out
repnz
inc
dec
loope
out
scas
sbb
insl
in
inc
out
mov
pushf
pop
sub
adc
push
orl
loope
cmp
pushf
das
andb
sub
data16
divl
sarb
arpl
enter
fwait
je
jge
arpl
mov
lahf
jp
les
sub
aas
pop
das
orl
std
out
iret
pushf
jp
daa
arpl
and
test
out
sbb
iret
pop
jp
daa
pop
jmp
stos
pop
push
out
pushf
fistpll
cli
scas
mov
xorl
mov
add
mov
je
dec
sub
lret
lahf
lods
cmp
fs
ret
pop
or
pop
jp
pushf
inc
enter
push
arpl
jge
or
fisubrs
inc
pop
fwait
ret
fsubl
inc
leave
daa
or
int3
and
and
lret
pop
aad
gs
clc
vmread
outsl
ret
xchg
test
pushf
das
jno
lds
inc
pop
jmp
mov
jne
loope
xorl
movsb
cmp
pop
lods
dec
mov
das
or
pop
movb
pop
push
enter
mov
jge
mov
jecxz
stos
xor
or
xor
adc
mov
pusha
rcrb
push
inc
andl
xchg
rcrb
arpl
pop
push
call
fidivrs
push
fmul
sbb
cmpsl
mov
sub
dec
xor
push
cli
push
popf
sbb
adc
xchg
incw
sbb
pavgb
cmpsb
addl
push
shll
inc
push
outsl
pop
push
outsb
push
xor
dec
jecxz
shlb
leave
mov
and
shlb
jecxz
pop
aaa
add
scas
movsl
dec
pop
xchg
xor
pop
mov
add
mov
lea
adc
rclb
cld
bound
cmp
aaa
push
jecxz
mov
push
jge
mov
and
leave
mov
adc
iret
sahf
xchg
imul
shr
loopne
jns
sbb
cmpsl
mov
sbb
jg
and
rclb
or
mov
xchg
mov
mov
push
popa
adc
push
daa
negb
stos
adc
ss
scas
sbb
fisubrl
sub
data16
testb
pop
scas
sub
dec
push
jecxz
cltd
inc
rcl
stos
mov
inc
nop
xchg
loope
or
rolb
adc
jno
mov
popa
push
popa
xchg
repnz
adcb
push
stos
scas
arpl
inc
enter
or
rolb
mov
out
xor
cmp
sub
mov
jecxz
sarb
push
rolb
imul
sbb
leave
es
adc
xchg
stc
mov
mov
out
les
mov
jno
and
lods
sbb
sub
mov
and
lretw
ljmp
jmp
xchg
pavgb
mov
call
and
scas
cmp
lret
cmpsb
imul
jecxz
rol
iret
inc
sbb
sti
push
rolb
call
pop
bndstx
xchg
sub
push
rolb
or
sub
xchg
sub
sbb
xchg
mov
mov
call
stc
pushf
adc
pop
shl
xchg
inc
sbb
pop
icebp
gs
xchg
inc
sbb
xor
stos
xor
cmp
arpl
movsl
popa
rolb
sarb
add
mov
sbb
pop
pop
pop
push
rolb
call
jne
sbb
jmp
inc
in
out
inc
jecxz
adcb
pop
push
mov
and
dec
data16
rolb
call
es
fbld
inc
adc
pop
jge
push
sarl
pop
pusha
cmpsl
dec
test
xchg
push
test
xchg
push
push
pop
mov
mov
jmp
std
sub
sbb
push
fcmove
xchg
xchg
pop
mov
sub
and
push
pop
test
nop
ja
ss
jnp
adc
fiaddl
outsl
pop
or
call
sbb
or
adcb
pop
or
call
movb
sarl
jmp
jbe
mov
scas
sub
pop
mov
cmp
out
inc
jecxz
mov
js
rolb
pusha
bextr
inc
xchg
imul
shrl
mov
call
mov
sub
cmp
call
ror
adc
cmpsl
dec
loopne
call
fldenv
pop
xchg
rolw
jmp
xchg
adc
pop
sbb
mov
mov
xchg
fiaddl
pop
stc
adc
pop
andb
mov
jecxz
lcall
arpl
inc
push
ret
rolb
call
pop
or
loopne
dec
xor
mov
test
shlb
imul
in
arpl
inc
negl
lods
push
ret
rolb
pusha
push
out
arpl
jns
adc
leave
push
orb
pusha
cmpsl
dec
push
loopne
inc
mov
xchg
sub
pop
outsb
cmp
sbb
pushf
inc
enter
dec
ljmp
jecxz
test
popa
rolb
arpl
push
arpl
aaa
jmp
movsb
dec
call
push
xchg
dec
orl
sub
pushf
cmpsl
dec
sbb
mov
or
jae
jecxz
ror
mov
call
fidivrl
jnp
inc
push
push
es
mov
ljmp
sub
and
mov
push
mov
jp
repz
pushf
push
cli
and
roll
and
inc
in
fcompl
fwait
shl
ljmp
dec
mov
mov
jnp
add
and
push
in
ss
mov
ficoms
lods
and
fwait
mov
insb
out
inc
fsubs
and
shll
mov
pusha
sbb
sbb
lret
add
movl
in
adcl
call
or
cmp
dec
orb
mov
mov
andl
roll
mov
out
rol
mov
loop
pop
push
shll
bound
sbb
xchg
inc
std
insb
js
sub
jbe
imul
data16
push
mov
imul
loopne
pusha
pop
andb
lock
inc
andl
mov
and
inc
jb
xchg
stc
stc
jl
insb
xchg
push
stos
mov
ja
inc
mov
xlat
mulb
ret
gs
xchg
pop
jmp
xchg
aaa
push
push
dec
lahf
lcall
fs
gs
cli
pop
call
imul
and
addr16
repz
sahf
enter
dec
xchg
push
mov
js
icebp
loope
ret
cmpsb
stos
push
orb
push
mov
arpl
adc
ficoms
mov
cmpsb
repnz
push
sbb
ja
adc
pop
or
and
out
inc
push
in
ret
test
fadds
loope
pop
pushf
or
mov
fst
rcrl
mov
xor
or
in
subb
movsb
fisubl
gs
xchg
jnp
sub
dec
cmpsl
inc
pop
xor
adc
fwait
cmp
xchg
or
inc
inc
jbe
pop
xchg
jo
push
roll
mov
addl
cmp
or
push
scas
xchg
jge
mov
in
adc
in
ja
mov
fsubs
inc
pop
bound
stc
movsb
imul
icebp
imul
push
mov
or
scas
push
push
lods
adc
movsb
ljmp
icebp
pop
rclb
insb
push
push
mov
inc
lret
inc
mov
cmp
shlb
cmp
inc
cmp
loop
imul
repnz
sbb
fldcw
push
in
jecxz
mov
test
xlat
mov
jl
shlb
pop
test
rcrb
fwait
add
cmp
or
inc
mov
rol
bound
mov
add
loopne
dec
mov
jne
xor
scas
mov
lods
movsb
jmp
dec
dec
jae
and
adcl
mov
add
pop
clc
mov
imul
fdivrl
dec
mov
cltd
dec
pushf
mov
pop
out
or
shll
int
sbb
pop
aaa
xor
cltd
or
lods
jle
sahf
out
mov
inc
jmp
jecxz
test
ret
leave
push
mov
mov
mov
jnp
adc
pop
bound
outsb
xor
rorb
shlb
cmp
jmp
pop
enter
pop
xchg
fucom
add
imulb
push
pop
fistl
and
add
out
es
outsl
push
pop
fisubl
adc
xchg
imul
cmp
xchg
dec
repz
xchg
imul
test
push
lret
jo
push
inc
jne
or
aam
and
out
mov
mov
sub
imul
movsb
push
data16
ret
hlt
scas
out
imul
and
sbb
mov
cmp
pop
mov
arpl
jle
enter
or
das
fucomp
mov
xlat
push
mov
adc
inc
jbe
adc
xor
push
xor
cmp
arpl
cltd
fcoms
sbbl
pop
add
pop
dec
fists
lods
push
loop
fisttpl
imul
add
push
jecxz
and
inc
pop
and
xchg
cmp
fstl
mov
icebp
jp
pop
pop
add
jne
add
jmp
xchg
pop
repz
and
loopne
mulb
cli
and
jb
dec
xlat
out
pusha
hlt
inc
adc
cmpsl
dec
mov
hlt
mov
incb
xchg
jbe
daa
lret
jb
dec
out
repnz
sti
inc
push
mov
insb
sbb
test
pop
imul
bnd
push
cmpl
mov
fidivs
dec
push
push
mov
push
dec
mov
mov
sub
jmp
push
cld
sarl
lods
and
nop
clc
out
movb
push
pop
mov
les
inc
insl
orb
add
dec
and
xchg
lret
out
inc
sub
pop
mov
pop
xchg
scas
repnz
popf
add
and
pop
repnz
sub
outsl
xchg
jne
mov
pop
bound
scas
testl
mov
jmp
and
in
jmp
data16
dec
addb
inc
pop
cmp
inc
cli
push
iret
inc
negl
loopne
push
dec
xor
sbb
call
sarl
push
xlat
cli
arpl
dec
lahf
pop
push
xchg
mov
adcl
mov
sub
lcall
insl
ret
dec
rolb
jl
xor
fisubrs
loop
or
sti
outsl
subl
fs
add
mov
ja
sub
xor
lods
pop
aad
mov
or
or
gs
jp
push
mov
inc
addr16
dec
push
lods
mov
out
scas
inc
ret
adcb
roll
pop
imul
xchg
in
enter
push
adc
stos
xchg
cltd
test
ljmp
cmc
dec
add
out
outsl
push
ror
add
rclb
mov
xchg
fcomi
pushf
jno
and
sub
push
stc
xchg
xlat
rcll
mov
iret
jo
xor
ljmp
push
test
xor
xor
adc
jg
xlat
xor
sbb
jecxz
jecxz
xchg
les
rcrb
lret
push
lret
ret
jmp
jl
pop
sar
out
pop
xchg
loopne
aam
scas
inc
jg
and
test
and
data16
push
icebp
mov
fdivp
std
and
xor
out
mov
or
mov
jns
and
push
xchg
inc
fwait
aaa
ja
cli
or
push
fnstcw
pop
rorb
pusha
add
push
lret
xor
call
mov
jae
inc
int3
aam
xchg
sbb
pop
data16
addr16
dec
xorb
pusha
adc
rclb
mull
repz
jmp
mov
push
out
outsb
mov
jnp
push
pop
jmp
cli
icebp
decb
pushl
push
sub
inc
xchg
jg
data16
sub
rcr
adc
sahf
push
mov
xor
imul
cmp
iret
shl
int
sbb
movsb
pop
mov
out
mov
call
inc
cmpb
ret
dec
push
lret
jbe
dec
sti
jo
jbe
loopne
sbb
cmp
push
mov
jae
mov
cld
dec
fdivs
fistl
ja
imul
movsl
xchg
mov
push
int
cli
adc
cmpsb
fldt
push
sbbl
rcll
ret
cmpsl
sbb
mov
mov
addl
mov
adc
cmc
bnd
scas
fcmovnbe
mov
mov
movsl
mov
and
pushl
test
jmp
mov
mov
imul
mov
clc
outsl
xchg
ret
push
jmp
xor
outsb
clc
dec
out
or
add
adc
and
sbb
popa
inc
adc
fs
addr16
ret
lock
push
clc
sub
add
subl
fs
divl
sbbl
stc
stos
sbb
out
call
pop
lret
outsb
into
ljmp
push
cmpsb
pop
mov
xor
jp
jl
inc
imul
jae
and
fs
cmp
pusha
rorb
sbb
sarl
cmp
arpl
in
dec
xor
mov
dec
enter
mov
xchg
and
jno
jp
test
and
into
xor
xlat
repz
inc
in
inc
hlt
adc
sub
lret
mov
ss
js
stos
lods
out
push
jno
cmpsb
orb
dec
mov
pop
mov
inc
jno
and
sub
xlat
pop
jge
imul
mov
jg
mov
mov
lret
adc
out
cwtl
adc
jnp
in
or
jg
ret
rclb
xor
fsubs
div
subl
cld
dec
loop
push
jle
shrb
push
jge
in
lods
leave
add
pop
lret
enter
outsb
xlat
clc
jecxz
cmp
add
test
mov
mov
lcall
outsl
add
fnstsw
out
inc
les
imul
jmp
nop
rclb
jecxz
repnz
mov
inc
test
push
movsl
jecxz
out
mov
push
pop
enter
repnz
repz
inc
mov
cmp
sbb
loope
sub
adc
fcmovne
clc
jg
pusha
fiadds
mov
ds
dec
lock
xchg
test
mov
imul
cmp
xor
enter
call
ja
aad
and
incb
stos
subl
bnd
adc
jp
cmp
divl
pop
inc
movsb
clc
testb
std
imul
shll
out
mov
mov
lcall
mov
in
xchg
and
fsubp
cmpb
stos
gs
or
dec
pop
addr16
andb
jbe
xchg
jp
subl
mov
dec
das
and
xchg
pusha
mov
lds
dec
mov
cli
ljmp
addr16
push
loop
sub
dec
loop
repnz
cli
xchg
inc
push
add
add
aaa
das
cmp
mov
fcomip
scas
sti
outsl
add
xchg
sbb
in
in
push
jle
adc
aaa
jl
xchg
repz
hlt
push
mov
dec
inc
adc
dec
repnz
mov
push
adc
mov
insl
dec
jb
leave
sbb
fwait
jb
aaa
jne
jecxz
xor
loopne
mov
scas
cld
fidivrl
out
mov
out
pop
jg
mov
push
in
mov
sub
mov
and
cli
rolb
imul
rol
and
or
bound
lcall
shlb
push
inc
cli
faddl
mov
nop
addr16
call
jge
les
lcall
sbb
pop
mov
mov
repnz
ja
data16
pop
loop
mov
xchg
dec
push
cmp
repz
sti
sub
movb
adc
jmp
xor
bound
lcall
aad
mov
cmp
je
mov
mov
jb
dec
imul
mov
fwait
cs
rcrl
pop
pop
stos
jno
fcoms
pop
or
jmp
xchg
dec
repz
clc
lret
mov
or
jecxz
push
lret
jg
loop
enter
jmp
nop
arpl
jmp
jne
jecxz
fsubs
ffreep
sbb
jg
repz
mov
ret
jg,pn
adc
dec
sbb
jns
ret
pop
pop
pop
inc
inc
mov
jae
xchg
pop
insl
jb
mov
rcr
arpl
repnz
das
cmp
fs
filds
imul
data16
cmpsl
sub
adc
hlt
out
dec
adc
mov
clc
stc
dec
pushf
mov
ja
xor
mov
push
and
mov
cltd
outsl
dec
gs
shlb
adc
xor
push
mov
jo
push
ret
dec
ror
out
dec
cmp
adc
inc
fimull
pop
inc
mov
pop
jo
jmp
cli
mov
and
stos
jns
shlb
push
lods
xlat
inc
ret
lret
adc
cmp
jmp
repz
or
dec
xchg
jbe
shl
cmpsb
add
shr
inc
jmp
imul
jmp
xor
xchg
xor
in
jp
and
dec
dec
mov
adc
scas
push
fists
cmpsl
cli
or
data16
mov
jmp
push
mov
fistpll
xor
or
ja
dec
cwtl
lahf
inc
cli
ljmp
or
into
loope
outsb
mov
and
mov
jmp
insb
jge
imul
div
gs
xchg
arpl
fdivl
stos
mov
xlat
mov
xchg
xchg
lret
inc
out
mov
pop
aam
mov
pop
sbb
scas
mov
sbb
loop
cmp
lret
iret
rcrb
sub
pop
xor
mov
pop
jp
dec
dec
lret
mov
add
stos
movsl
jg
leave
shll
mov
xorl
add
das
cmp
push
cmpsl
cmpsl
push
outsb
and
jo
and
jmp
subb
xor
loope
arpl
fmul
jo
xchg
notl
adc
ficomps
jp
xor
lret
jg
push
subb
daa
cmc
ret
loop
push
es
mov
mov
lods
inc
sub
int
scas
mov
adc
jb
xor
rdmsr
subb
ret
mov
adc
cmp
mov
cmp
test
add
scas
sahf
mov
cmp
std
loop
insb
int
outsb
adc
sub
mov
out
push
or
int3
outsl
xlat
imul
imul
daa
jle
sbb
cwtl
sub
or
push
fst
or
jae
orps
bnd
mov
fucom
mov
dec
fstpl
pop
loopne
jbe
out
xchg
jae
stos
and
iret
lret
testb
mov
lret
addb
push
mov
fs
lret
stos
mov
sbb
dec
stc
mov
lret
aad
xor
rolb
rcll
ljmp
imul
ret
lret
xor
repz
int3
out
cmp
lock
pusha
inc
loope
insb
inc
decl
pop
pop
es
rorl
call
xchg
leave
movsl
rcrb
dec
inc
adcb
xor
or
aaa
or
inc
stos
lret
push
inc
jno
stos
push
sub
cmp
cmpsl
push
sub
push
repnz
pop
inc
in
sbb
mov
xor
sbb
inc
rcll
lret
pushf
call
cmp
push
add
pop
adc
xor
imul
sbb
loopne
cmp
notb
or
cmpsb
mov
in
gs
dec
pop
daa
xor
mov
outsb
div
xchg
fldcw
out
jbe
xchg
shl
push
ret
stc
dec
in
mov
sbb
adc
mov
jmp
jl
xchg
sub
fdivl
mov
inc
das
jne
fcmovnb
and
adc
ljmp
sar
inc
enter
inc
or
in
xchg
es
push
test
icebp
xor
iret
movsl
addr16
nop
lea
lcall
jg
insl
fiaddl
outsb
mov
lods
popa
inc
jmp
cmp
push
or
shll
push
cmp
jmp
mov
out
cmp
pusha
iret
ljmp
ss
xchg
jo
jg
imul
outsb
push
jg
mov
sbb
pop
push
cltd
and
ljmp
test
xchg
dec
jle
push
xchg
xor
push
stos
sbb
cmp
xchg
cmp
test
dec
fbld
jp
mov
sub
xchg
add
mov
pop
aas
dec
in
mov
push
call
fsubrs
in
fimull
or
gs
sahf
jge
out
gs
xchg
arpl
dec
nop
and
pop
inc
pop
add
in
cli
pusha
pop
xlat
test
push
push
shrl
in
mov
inc
push
stos
mov
adcb
cmp
pop
jl
repz
push
pusha
mov
mov
fs
xchg
inc
mov
sbb
sub
test
adc
out
pop
addr16
jg
push
xor
cmp
and
addr16
lret
insb
jbe
enter
mov
in
xor
addr16
cmp
addl
xchg
xor
fistps
cmc
and
popf
inc
adc
notl
push
push
inc
cmp
out
cmpsl
scas
jnp
push
cwtl
iretw
sti
lret
iret
jp
adc
daa
into
mov
ret
inc
xchg
pop
movsl
xor
mov
inc
adc
jns
jnp
xchg
adc
cmc
xchg
xchg
inc
push
dec
hlt
test
dec
jp
pusha
icebp
jb
pop
rorl
in
xor
or
adc
inc
jmp
lds
push
addb
les
and
push
shr
out
nop
xchg
into
and
popf
mov
lds
rolb
xor
push
fiaddl
out
jmp
arpl
pop
repz
arpl
lcall
fisubl
inc
ljmp
testb
jne
push
mov
shl
push
fiaddl
or
dec
enter
sahf
rclb
shl
inc
lret
mov
lcall
adc
sahf
and
jns
dec
movsb
inc
icebp
xor
lock
add
and
inc
xchg
pusha
xchg
lahf
scas
inc
mov
iret
mov
jmp
mov
sub
roll
add
jecxz
xor
jo
mov
insb
push
nop
imul
addb
pop
or
das
sbb
push
sbb
lds
add
int
clc
jmp
rcrl
movsl
sbbl
push
mov
mov
jnp
sbb
lds
insb
insb
pusha
jle
test
mov
push
mov
and
mov
stos
inc
jns
dec
scas
sub
pop
dec
mov
mov
mov
jmp
lret
imul
mov
mov
imul
adc
aas
es
jg
data16
shll
pop
mov
leave
ror
lret
sub
mov
das
in
fsubl
data16
ds
negl
ret
mov
jmp
add
dec
and
dec
or
cmpsb
cmp
ljmp
ret
dec
sub
movsl
pushf
imul
sahf
push
inc
sahf
inc
popa
xor
or
imul
fistpll
shl
cmp
dec
inc
xor
xor
mov
aaa
mov
mov
sub
mov
cld
sbb
push
arpl
xchg
nop
push
fiaddl
xchg
mov
leave
cs
test
sub
mov
daa
push
push
mov
es
and
xor
fmull
xchg
adc
adc
xchg
sbb
out
icebp
gs
shrb
dec
xchg
cmp
mov
in
int
out
xchg
aas
pop
adc
xchg
enter
lods
jmp
shll
inc
cs
inc
or
or
ss
data16
pop
inc
or
shrb
jb
in
jle
pop
out
cmpsl
jl
call
popa
out
lret
lret
or
xor
lock
das
sbb
jae
movl
mov
ficompl
ret
inc
in
stc
mov
and
inc
int
push
mov
std
in
adc
jnp
lret
negl
imul
dec
fmull
mov
outsb
jmp
jnp
push
dec
sub
stc
xchg
jle
mov
push
mov
push
mov
movsl
out
jb
gs
mov
mov
pop
outsb
adcl
adc
or
push
adc
sbb
repnz
jns
daa
inc
pop
and
cmc
xor
cmp
aaa
lods
sbb
mov
ffree
outsb
lds
or
sub
sub
pop
mov
xchg
adc
add
mov
jno
lock
add
inc
mov
pop
sub
test
rcll
jmp
daa
lock
jg
je
pop
rcl
pop
adc
imul
cmpsl
xor
jnp
cmp
nop
hlt
xchg
sub
pop
mov
pop
data16
jo
imul
inc
sub
pop
jne
jmp
and
ss
repnz
jo
push
or
stos
xchg
and
jb
movsb
xor
test
js
lret
fisttpll
mov
pop
inc
mov
jne
bound
fs
jns
mov
mov
inc
xor
nop
mov
out
mov
bound
xchg
js
gs
psrad
pushf
mov
mov
sub
cmc
sbb
cmp
ret
enter
mov
and
dec
xchg
jbe
jg
pop
addb
into
rcrb
jbe
fimull
dec
nop
mov
dec
or
cmpb
loopne
mul
out
ljmp
lds
ja
jo
ljmp
or
xchg
in
jb
xchg
ljmp
pop
push
enter
pop
inc
add
push
repnz
cmp
push
jge
and
and
pop
jb
leave
sbb
aaa
daa
pop
pushf
add
adcb
mov
rclb
push
loopne
pop
aas
nop
xchg
mov
aas
cmp
mov
lods
divb
jae
icebp
orl
push
call
jae
cmpsb
inc
lahf
rcll
lds
mov
js
adc
xor
pop
cmpsl
mov
inc
lea
lods
insb
add
dec
adc
in
loope
jbe
jb
push
insb
in
lret
push
push
fwait
stos
push
adc
incl
mov
out
dec
push
mov
add
int3
loop
int3
enter
in
inc
dec
xchg
sbb
imul
inc
xchg
pop
pusha
pusha
movsb
add
outsl
negl
aaa
and
dec
sub
arpl
mov
xor
sub
popf
enter
fbld
pop
fwait
loop
ficomps
enter
das
je
push
xchg
mov
inc
pop
sub
jecxz
fldl
and
out
inc
push
lret
repnz
pop
lods
xchg
popf
shl
pusha
stos
xchg
fstp
js
pusha
xchg
and
jb
jmp
pop
test
dec
or
mov
mov
imul
mov
addb
mov
test
pop
jbe
into
ret
aad
repz
adc
addr16
xchg
hlt
dec
inc
push
cmp
repz
ret
rolb
in
lcall
out
test
ds
or
cmp
push
push
stos
push
stc
scas
dec
add
adcl
sti
mull
sbb
dec
or
cmp
and
insl
inc
pop
out
insb
xchg
lahf
aad
cmc
jbe
aam
sti
std
xchg
out
int3
jnp
daa
orb
pop
jno
inc
mov
sbb
rcr
loope
mov
es
ja
jle
cmp
xchg
ja
push
aam
pop
repz
sbb
clc
int
inc
loopne
ret
sbb
sbb
fisubrs
inc
pop
dec
or
decb
fxsave
inc
out
push
stos
movsl
aad
out
push
mov
loopne
movsl
sbbb
dec
push
add
dec
push
jnp
xor
or
popl
lcall
mov
inc
xor
push
aam
popf
inc
adc
pop
jne
popf
inc
mov
inc
imull
in
lds
jmp
addr16
movsl
lds
andl
add
jl
push
rolb
mov
xor
lret
ss
cwtl
out
fildll
jno
jae
arpl
jns
addr16
xchg
cmp
cs
xor
and
push
imul
adc
inc
mov
add
std
xchg
mov
lcall
jp
mov
andb
ljmp
aaa
push
popa
jnp
cmpb
push
push
scas
addr16
push
loopne
daa
adc
sbb
xor
arpl
fsubrs
jns
rorl
cmc
cmp
mov
mov
sbb
mov
ja
cmp
je
aaa
jbe
mov
push
fwait
hlt
ret
mov
dec
add
icebp
inc
ds
addr16
add
xchg
and
add
jae
ds
cld
or
insb
inc
add
pop
adc
leave
stc
mov
ret
jo
inc
xchg
rcrl
es
ja
orb
adc
cmp
aaa
iret
dec
sbb
cli
inc
pop
mov
jno
jle
or
nopl
push
shl
pop
adc
jb
out
mov
lcall
mov
sub
push
mov
in
test
cmp
adc
jle
pop
inc
mov
pusha
xchg
inc
fisttpll
sub
sti
dec
testb
push
mov
std
cmp
or
stos
subb
into
outsb
das
leave
lock
pop
cmpsb
loope
dec
lret
or
pop
adc
leave
lock
test
sub
fidivl
sbb
mov
xchg
repz
fisttpll
sbb
mov
or
mov
stos
mov
gs
lock
xchg
loopne
negb
ficompl
add
sbb
fdivl
push
pop
addr16
in
fdivr
add
dec
in
sbb
outsb
xchg
test
in
fistl
mov
dec
and
push
inc
ss
push
mov
inc
mov
fadd
dec
sub
cmp
inc
adc
fbstp
push
cmp
bound
faddl
popa
ret
mov
repz
test
mov
scas
pop
jmp
hlt
insl
pop
rcll
ss
daa
int3
push
xor
add
arpl
inc
xlat
add
pop
bound
mov
out
fwait
add
push
adc
iret
dec
pushf
push
movsl
arpl
aaa
lea
outsb
in
cs
cmp
sbb
cmp
mov
call
rcll
pop
int
ss
xchg
adc
xor
ljmp
dec
test
scas
mov
inc
add
inc
leave
lahf
in
mov
test
lods
out
add
js
push
mov
ret
push
and
imul
fstps
pop
sub
mov
sbb
cmp
push
xchg
lahf
sbb
and
bound
push
int
mov
mov
leave
mov
mov
loope
adc
nop
fs
xchg
fcoms
pop
cmp
mov
lahf
iret
ljmp
cmp
sub
sub
jl
adc
dec
dec
push
sub
push
scas
push
adc
repnz
mov
scas
xchg
push
xchg
cmp
bound
imul
rcll
pop
adc
cld
lret
outsl
dec
pop
mov
mov
sub
push
pop
imul
pop
or
fistl
push
movsb
filds
cmp
cmp
movb
in
pop
lcall
mov
loop
pop
out
cmc
push
ljmp
cli
sub
rclb
push
xor
lea
stc
pop
mov
and
xor
pop
jmp
into
xchg
xchg
pop
mov
push
cld
mov
cwtl
ret
ret
lret
inc
adc
sub
cli
mov
sub
outsl
and
repnz
mov
or
xchg
mov
leave
push
in
lret
inc
cltd
fiadds
aad
int
js
cmp
dec
inc
xor
or
mov
fdiv
ret
into
cwtl
xchg
mov
dec
fbld
mov
push
or
pop
inc
dec
mov
inc
int
push
test
idivl
jmp
cmp
inc
dec
jge
clc
mov
push
xchg
mov
pushf
jb
cld
cmp
dec
inc
bound
mov
xchg
rol
xor
dec
adc
fdiv
mov
insb
push
jp
sub
add
aas
xchg
adc
xor
mov
adc
outsb
hlt
cs
mov
or
aam
imul
sti
sub
push
dec
push
test
and
out
dec
adc
inc
inc
mov
dec
jno
aam
lcall
mov
outsl
xor
mov
inc
testb
mull
push
rorb
sbb
clc
mov
jns
aaa
add
sarb
sub
pop
fwait
pop
ret
push
and
scas
and
jae
mov
xchg
and
aaa
lret
cmpsb
outsl
pushl
cli
push
lret
sbb
jmp
inc
mov
fistps
inc
test
pop
push
jp
add
xor
fmull
inc
jb
test
mov
iret
idivl
lods
cs
jmp
clc
sub
ja
cld
inc
cld
jae
sbbl
add
lahf
add
into
jmp
sub
pusha
and
insb
push
cmpl
mov
and
out
subb
pop
rcll
mov
out
mov
jb
dec
fmuls
cmpsb
pop
mov
jns
lret
stos
mov
ret
cmpsl
push
adc
and
dec
movsl
push
lods
in
cmp
xchg
fs
xchg
imul
out
pop
inc
cmc
xor
mov
or
mov
jbe
add
roll
jmp
jne
mov
mov
cli
pop
out
dec
pusha
xor
notb
stos
mov
adc
insb
jp
jb
repz
and
or
push
dec
adc
fnstcw
insb
lock
mov
popa
popf
dec
xor
shll
decl
mov
add
and
mov
stos
repz
test
push
stos
or
shrb
push
stc
bound
addr16
pop
or
inc
cmc
pop
xor
fildll
or
dec
xor
int
ja
push
add
repz
cmp
inc
test
xchg
ss
inc
jb
push
adc
or
sub
ret
nop
xor
stos
adcb
mov
add
xchg
sub
xchg
out
ficoms
ret
jae
repz
pop
mov
mov
jle
test
rorb
shrb
cld
bound
call
inc
jnp
xchg
push
jbe
mov
jo
pushf
sub
aas
jne
or
mov
jecxz
fistl
jbe
aas
enter
jnp
lahf
testl
xchg
xchg
mov
mov
icebp
call
shr
movsb
add
outsb
cwtl
or
inc
les
ljmp
and
add
mov
ficomps
xchg
fdivrl
loope
lcall
fwait
adc
and
pusha
and
sub
pop
xchg
ficomps
dec
aas
repnz
orl
les
les
sub
add
and
mov
lret
pop
or
bound
fstps
mov
stc
push
jmp
mov
es
sub
sbb
repz
cmp
bt
shrb
fbstp
jg
repnz
movsb
mov
sub
jno
jge
fldt
das
lret
divb
pop
push
mov
push
mov
leave
jno
cld
dec
cs
cmpl
stos
movlhps
scas
xchg
test
mov
mov
mov
inc
outsl
popf
movsl
sub
gs
fcompl
lret
out
and
jae
leave
jnp
aad
mov
inc
jmp
adc
cmp
cmpsb
dec
loop
cmpsl
ljmp
push
and
test
xchg
add
mov
and
outsl
movsl
jnp
xchg
cli
or
fidivrl
movsl
pushl
xor
sbb
aaa
dec
sbb
xchg
xor
mov
xor
out
push
mov
lds
dec
or
and
int
dec
nop
fldl2t
aaa
sbb
adc
inc
sub
pop
ss
call
add
mov
stos
dec
pop
inc
or
mov
push
pop
jno
out
hlt
lret
jae
xor
or
mov
out
lods
adcb
add
ss
inc
mov
push
and
or
iret
inc
outsb
mov
push
push
and
shl
lret
inc
jnp
mov
sahf
add
cld
es
stos
sub
iret
lods
outsl
subl
jns
fnclex
jne
roll
mov
daa
cmp
dec
fisttpll
scas
fstps
iret
add
in
mov
pop
cmpsb
jne
out
jge
leave
sbb
mov
mov
jne
cld
inc
scas
sub
xor
test
xchg
cwtl
cli
scas
sub
and
pop
xchg
lea
pop
jnp
sbb
sub
in
xchg
and
in
je
sti
xor
and
out
ret
sub
mov
cmp
movsb
pop
stos
imul
shll
cli
mov
stc
adcb
pop
inc
or
out
and
sub
jbe
sub
scas
rcll
xlat
push
repz
filds
stos
fsub
xchg
sub
add
and
repz
push
and
mov
jno
cli
stos
push
jae
insb
int3
push
ret
sub
jmp
popf
insl
and
sarl
lret
test
ljmp
jp
ret
push
dec
mov
adc
sahf
repnz
or
mov
add
cmpsb
jp
clc
rcrl
cmp
out
ficoml
and
andb
lret
adc
rorl
pusha
ljmp
repnz
sub
inc
aaa
gs
clc
mov
xchg
push
stos
outsb
add
les
iret
or
mov
in
jg
orb
icebp
into
fsubs
mov
insl
orl
out
test
mov
ljmp
rolb
push
dec
iret
scas
lret
loopne
mov
jp
xchg
imul
setns
xor
xlat
iret
sbb
inc
mov
fwait
das
pop
cmp
inc
or
xor
mov
xor
ret
adc
adc
mov
lret
test
aam
inc
lods
lret
xchg
bound
dec
cmp
dec
jle
jno
pop
jbe
or
ret
ret
dec
pop
arpl
xor
inc
outsb
daa
jp
adc
repnz
repz
clc
adc
iret
cmp
cmp
fs
add
roll
testl
mov
jle
adc
jne
popa
fs
and
mov
test
orb
mov
mov
loopne
mov
xor
dec
adc
add
scas
fstpl
mov
out
xor
mov
inc
pop
daa
std
shrl
aad
stos
and
arpl
xchg
adc
out
mov
add
jg
jne
dec
push
imul
arpl
jo
cmpsb
ja
and
fidivs
push
sahf
xor
repz
outsl
stos
movsl
cwtl
fildll
adc
and
dec
adc
sbb
pop
push
dec
insl
add
jg
mov
pop
xchg
dec
pop
lcall
add
notl
jno
test
cmpsb
sub
dec
fcomps
inc
mov
or
dec
call
sub
mov
popa
pop
sbb
je
mov
sarl
sahf
jbe
dec
lea
mov
lds
int3
mov
loopne
inc
push
pusha
dec
lea
and
push
xlat
mov
ljmp
xor
push
loopne
pop
pop
xchg
sarl
pop
sub
roll
mov
xchg
sub
test
mov
xchg
inc
mov
call
push
daa
push
mov
mov
lcall
imul
imul
xor
mov
xchg
mov
xchg
push
ja
and
hlt
adc
bnd
jge
jg
sbb
xor
pop
cmp
adc
or
xchg
push
clc
jno
jg
mov
jge
mov
sub
mov
stos
in
fnsave
mov
xchg
ljmp
dec
loop
xor
dec
aaa
rclb
pusha
or
xchg
not
jno
xor
sbbl
cmpl
pop
enter
jo
lods
mov
sbb
sbb
lea
pop
outsl
or
and
mov
mulb
test
jp
arpl
fs
out
sub
outsl
cmp
int3
std
xor
aas
insl
nop
push
cltd
sbb
js
xchg
inc
inc
xor
mov
adc
outsb
out
mov
jle
sub
sbb
or
mov
adc
das
lret
out
mov
daa
add
or
inc
daa
lea
and
push
add
jnp
rcrb
daa
jae
ljmp
hlt
pop
xor
fwait
stc
addr16
pop
sbb
call
data16
imul
mov
inc
cmp
fcoml
adc
jmp
aam
mov
mov
mov
test
pusha
jnp
loop
shlb
sbb
jl
mov
push
movsb
or
es
sub
mov
orl
sub
adc
push
mov
hlt
sbb
cwtl
sbb
or
mov
into
mov
xchg
gs
das
lahf
and
mov
sti
daa
movsb
cwtl
sarl
adcl
out
xchg
and
add
and
add
xchg
testl
push
xchg
lods
mov
lods
jmp
testb
movb
imul
sub
enter
clc
imul
inc
pusha
push
push
mov
cmp
imul
arpl
cmpsl
pop
add
bound
inc
mov
lret
loope
test
out
jmp
add
insl
popf
and
cmp
jne
or
push
mov
pop
and
mov
mov
adcb
imul
loope
cmpsl
cmpl
jae
jl
arpl
mov
mov
in
shll
cli
push
insw
aas
lea
dec
fimuls
cli
popf
pop
aam
in
xchg
mov
xor
insb
imul
in
into
lods
ret
leave
rolb
cmpl
xchg
popa
pop
adcl
push
outsl
pop
or
adc
xchg
cwtl
insb
cmp
stos
and
push
mov
or
mov
daa
add
stos
imul
aas
jns
cmpb
mov
xchg
fsubs
imul
sub
mov
jecxz
pop
sub
dec
adc
pusha
xchg
test
scas
idivl
or
stc
jmp
sbb
push
push
cmpsb
ds
adc
inc
or
and
dec
cmp
push
dec
push
adc
inc
sbb
mov
xor
cmp
pop
xchg
or
inc
cmp
mov
stc
push
fsts
lahf
push
sbb
add
inc
mov
pop
cmp
std
mov
ss
orb
push
ja
pushf
stos
xchg
lahf
inc
adc
in
jb
lret
rcl
mov
jmp
xchg
and
fadds
cli
xchg
push
inc
mov
inc
dec
icebp
fs
and
xacquire
testb
and
mov
xor
xorb
mov
xor
jb
mov
mov
out
push
lcall
negb
stos
pop
sbb
ljmp
outsl
imul
stos
sbb
mov
push
loopne
push
or
in
lods
leave
out
mov
les
das
nop
adc
pushf
es
mov
pop
out
jo
ret
fs
and
movsb
lret
icebp
mov
xchg
push
inc
aaa
es
popa
add
pop
mov
ds
es
pop
push
and
sub
push
xchg
add
lahf
loope
pop
mov
movsl
push
push
xchg
dec
addr16
push
cmc
cmpsl
out
cmp
enter
xchg
fcmovu
jnp
adc
rorl
pop
xor
sbb
mov
inc
mov
push
mov
xchg
and
push
inc
sbb
mov
cs
jnp
xchg
test
into
inc
cmp
ret
adcl
mov
jg
pop
lret
xchg
cwtl
inc
xchg
int3
xchg
and
je
clc
mov
stos
cmp
loop
cmp
push
xchg
in
cmc
adc
xchg
xchg
loope
inc
pushf
fisttpl
xor
sub
aad
and
mov
dec
loop
mov
mov
mov
sbb
or
add
das
add
sub
jbe
or
jo
addr16
punpckhwd
inc
pop
cmc
mov
mov
int3
scas
adc
mul
jmp
out
jmp
bound
inc
xor
stos
addr16
loopne
adcb
xchg
ret
and
dec
xorl
rcl
roll
pop
jmp
inc
or
in
adc
fiaddl
mov
in
add
adc
xchg
adcb
sbb
test
push
inc
lahf
xor
sub
gs
in
mov
adc
movsl
and
pop
sub
jle
inc
or
addr16
cld
jmp
bound
repnz
pop
data16
cmc
test
ss
mov
sbb
jecxz
mov
aas
fnstcw
dec
pop
divb
sub
mov
out
aam
data16
aas
mov
mov
cmp
pop
xchg
dec
cld
push
lods
lock
push
cs
sub
pop
in
mov
or
jp
mov
imul
mov
ret
dec
mov
push
dec
repnz
aas
lock
mov
imul
xorl
nop
das
out
push
imul
lds
xchg
imul
lods
jmp
jl
sub
sbb
sarb
int
push
xchg
mov
js
into
adc
lods
cmp
xchg
and
sub
pop
xor
xchg
movsl
or
cmp
in
das
cmp
loopne
std
lcall
mov
or
mov
sar
cltd
sti
fstp
ret
dec
iret
lcall
shrl
outsl
inc
adc
jmp
mov
aam
mov
mov
xchg
addr16
push
inc
mov
push
mov
dec
adc
jae
pop
xor
outsl
dec
mov
or
dec
or
sbb
or
iret
xchg
push
inc
cmpsl
jo
rorl
notl
test
aaa
dec
jbe
cmp
push
jbe
dec
ret
hlt
pop
sub
pop
cmp
sbb
call
fldenv
out
call
sub
push
test
mov
shl
xchg
and
inc
jnp
lcall
das
inc
fldenv
xor
int3
push
cmpsl
or
les
inc
ret
test
cltd
outsb
lret
and
ss
cmp
repnz
lret
mov
in
out
stc
mov
lahf
idivl
sub
sbb
rorb
or
mov
mov
mov
sbb
in
dec
and
lock
xchg
cmp
das
jbe
sarb
push
lret
push
xchg
out
push
test
inc
stos
push
mov
mov
mov
xor
mov
adc
out
cmp
ret
data16
lcall
filds
pop
out
xor
push
xchg
jle
outsb
cmpsb
mov
stos
into
pop
pop
mov
mov
rcl
adc
sarl
inc
mov
add
jecxz
fmul
push
pop
mov
adc
cld
into
inc
stos
mov
movsb
push
ficoms
xchg
lret
popf
lret
daa
jp
lods
or
dec
xor
es
cmp
xor
test
leave
mov
fstp
xchg
jns
and
fildl
inc
outsl
jno
xchg
movsl
sbb
or
fwait
mov
les
movsb
or
adc
mov
jp
mov
mov
pop
shll
stos
lahf
lsl
lret
cmp
sbb
xchg
enter
fs
xchg
fsubrl
mov
jg
or
inc
stos
mov
sub
mov
sti
sub
mov
mov
ffree
dec
loope
scas
movsl
outsb
or
xor
jecxz
or
loope
add
rcll
push
cmp
jmp
fcmovu
cmp
ret
adc
xor
mov
jo
xchg
jbe
pop
push
and
xor
push
subb
mov
mov
jmp
call
push
or
pusha
fiadds
jne
push
lock
cmp
shr
int3
adc
jp
stos
cs
push
mov
jb
aaa
iret
mov
mov
inc
push
rcrl
mov
xor
xchg
out
incl
les
repz
push
in
out
arpl
push
lret
push
call
std
xchg
mov
jle
mov
jmp
das
sahf
mov
cli
jnp
push
jo
and
test
mov
xor
mov
loope
xor
aaa
aad
test
sti
out
pusha
int3
cmc
test
sbb
in
xor
pop
ret
cmpsb
jle
pop
cmpsb
loop
dec
jae
arpl
scas
ret
jbe
push
add
push
and
xchg
inc
add
xor
mov
mov
in
fs
rcrl
ffree
insb
cld
mov
mov
push
stos
adc
mov
push
sub
call
clc
inc
cltd
imul
daa
testl
sbb
ret
lret
or
and
cwtl
and
dec
cmpsl
add
lret
jb
pop
cmp
scas
rorl
pop
mov
stos
inc
in
lcall
adc
dec
test
lahf
lcall
movsb
mov
lret
xor
adc
bound
outsb
ficoml
outsb
xor
addl
aaa
adc
stos
jp
push
adc
aaa
arpl
and
call
popa
add
dec
inc
inc
mov
cmp
shl
ss
xor
mov
push
ja
dec
push
std
mov
xchg
cltd
testl
jne
ret
fwait
xrelease
int
insb
sub
popa
outsl
scas
shll
pop
bound
mov
adc
xor
outsl
xor
into
jnp
movsl
adc
addr16
fldenv
jb
add
dec
inc
adc
push
cli
dec
or
jmp
out
and
and
aas
and
and
sbb
jecxz
inc
int3
out
push
jnp
into
faddl
das
push
stos
or
les
add
inc
lret
mov
sbb
sbb
sbb
arpl
cmpsl
cmp
in
in
ret
sti
xchg
fwait
aaa
mov
adc
push
test
fwait
sub
icebp
cmc
and
mov
pop
xor
imul
iret
mov
testl
dec
inc
and
les
cmp
sub
xor
push
xchg
sub
stos
enter
push
fsub
jo
out
addr16
loop
inc
ljmp
push
inc
push
mov
adc
jg
and
clc
ja
mov
mov
push
mov
pushf
or
or
xor
movsl
das
adcb
sbb
cld
pop
cmpsb
and
pop
aam
in
sbb
fsubl
sub
pop
int
cmc
or
inc
add
push
jl
div
push
and
mov
cld
cmp
ljmp
lds
shll
ljmp
pop
pop
and
push
inc
repz
es
jmp
stos
mov
imul
xchg
cli
rorb
repnz
loop
cmpsl
dec
lret
outsl
ljmp
out
icebp
jo
pop
lods
adc
mov
jb
inc
aam
ret
mov
fadd
ret
lods
jle
lret
rcl
pop
push
jae
sub
add
negl
lea
mov
inc
addr16
imul
adc
mov
repz
ret
pop
out
xchg
ficoml
push
cmc
mov
cmpsb
loop
daa
mov
push
arpl
adc
fwait
xchg
loop
gs
pop
addl
call
mov
mov
in
int
addb
push
pusha
notl
inc
pop
and
xor
mov
mov
mov
mov
xor
ret
pushf
jle
push
mov
pushf
scas
dec
js
icebp
mov
xor
mov
imul
inc
or
scas
cltd
popa
or
jnp
dec
loopne
push
jae
stos
adc
cltd
or
inc
xor
dec
pop
mov
xchg
fiaddl
ret
insb
push
add
xchg
outsl
jg
jb
jns
lds
out
mov
shll
std
enter
daa
mov
dec
stos
inc
adc
test
cmovo
ss
push
or
or
cmc
ds
mov
push
leave
hlt
scas
adc
or
or
repz
xchg
inc
pop
jae
fisubrs
bound
outsl
xchg
subb
loope
adc
adc
cltd
mov
pop
add
ret
mov
cmp
out
push
addl
inc
sbb
push
xchg
add
adc
pushf
add
scas
ja
adc
push
mov
rcrl
push
push
lea
dec
or
push
imulb
pop
arpl
and
dec
inc
test
aaa
hlt
and
scas
call
pop
and
scas
xchg
scas
pop
out
loope
inc
lods
test
enter
ljmp
adc
loop
or
repnz
fistpl
pop
icebp
cmp
loope
sbbl
scas
mov
mov
xchg
into
push
imul
inc
push
loopne
iret
movsb
push
mov
push
cmp
pop
mov
dec
fldenv
nop
sbb
ljmp
adc
mov
dec
data16
xchg
cmpsl
jg
and
xor
pop
repz
enter
rcll
add
rcrb
xchg
cwtl
mov
xchg
daa
mov
nop
out
inc
xchg
inc
aaa
pop
mov
mov
mov
or
test
pop
push
fisubl
nop
fs
jae
sub
fcoml
push
fisttpl
ret
arpl
jb
pop
xchg
sarb
imul
jg
pop
sub
push
jbe
xchg
outsl
hlt
add
movsb
lods
popf
mov
adc
dec
add
sbb
jns
add
shlb
jb
sbb
bound
xchg
cmpsb
fists
cmpsl
ds
xchg
rorb
loop
repz
ficompl
ret
repz
and
iret
mov
pop
sub
push
jmp
push
scas
addr16
repnz
pop
loop
leave
push
or
fsts
or
adcb
mulb
lds
jno
ljmp
inc
out
pop
mov
and
push
cmp
add
pusha
sar
call
out
adc
daa
or
clc
in
jle
cmp
sbb
inc
jnp
nop
iret
ljmp
xchg
outsb
xchg
imul
xchg
into
sti
sub
test
push
push
cltd
pop
ficoms
mov
sub
pushf
add
push
push
mov
dec
xchg
and
adc
pop
xchg
cmc
stc
add
leave
mov
jp
pop
mov
lret
jb
ret
xchg
sub
or
add
cwtl
cmpsb
dec
sbb
les
mov
insl
push
mov
mov
roll
cwtl
dec
in
lret
mov
icebp
mov
sub
push
icebp
repnz
or
sbb
hlt
mov
pop
les
out
sti
xchg
jne
std
es
insl
test
xchg
sbb
jmp
or
lcall
imul
ja
lcall
mov
jmp
inc
ds
ret
orb
xchg
inc
xchg
jb
hlt
jnp
scas
addr16
je
cmpsl
ljmp
std
pop
fcoms
push
ss
cmpl
jmp
dec
push
jne
mov
inc
loopne
stc
out
lods
inc
hlt
add
leave
call
mov
out
push
loopne
out
xchg
dec
aam
ja
mov
mov
in
outsb
pop
lret
dec
cli
jl
repnz
mov
testl
push
jmp
sti
cmp
cmp
mov
outsb
cmpsb
xor
pop
adc
jb
sub
sbb
testl
cmp
or
js
and
dec
mov
outsb
mov
inc
push
push
pusha
cmc
movaps
fcomps
aam
dec
movsl
pop
inc
pop
cmp
xor
xor
cli
push
dec
dec
cmp
out
adc
out
sub
ret
pop
push
xchg
add
dec
enter
mov
inc
sbb
mov
push
shlb
inc
adc
and
push
dec
out
dec
shll
adc
dec
test
mov
xchg
cwtl
sbb
push
iret
mov
dec
mov
out
and
adc
mov
or
rep
je
jmp
mov
ffree
sbb
inc
mov
sub
xchg
stos
lcall
cmpsb
das
xor
inc
add
adc
daa
cmp
out
cmpsl
push
imul
enter
jno
in
pop
xorl
add
xchg
sbb
loopne
inc
push
and
xchg
fisttpl
mov
push
lods
fiadds
sbb
cmc
or
xorb
scas
iret
push
call
cmp
adcb
mov
repz
insl
loope
cwtl
pop
cmpsl
pop
cmpsl
in
inc
test
fwait
xchg
fs
mov
es
loop
setb
inc
cltd
ret
mov
jge
ret
gs
mov
fwait
mov
add
mov
jmp
mov
push
push
push
mov
movsl
inc
movsb
push
sub
mov
das
pushf
repz
xor
pop
movsb
dec
cli
stc
fwait
cmp
mov
mov
jp
add
mulb
mov
mov
rcl
push
addr16
or
add
jmp
sbb
dec
push
dec
jp
ret
dec
fcmovbe
fstp
jmp
ret
outsl
dec
mov
inc
inc
or
sub
or
ss
xlat
addr16
adc
adc
stc
push
mov
xchg
cli
dec
jae
mov
adc
outsb
outsl
lret
mov
add
or
ljmp
cld
push
rcrb
hlt
mov
js
popf
xor
ja
incb
push
rcrb
jg
jae
ds
adc
sarl
or
pushf
shr
out
pop
or
lret
adc
mov
ljmp
fistpll
fs
imul
sbb
jg
mov
dec
push
mov
push
ret
loop
ljmp
and
mov
rcll
push
dec
shlb
scas
mov
dec
jp
push
orl
cltd
push
arpl
imulb
iret
jp
push
adc
pop
mov
lahf
inc
jno
mov
jbe
loopne
pop
ss
inc
mov
popf
bt
ljmp
daa
imul
pop
ret
sti
xchg
stos
shl
stos
dec
push
test
loopne
ja
sbb
mov
test
push
sub
out
add
xchg
stos
pusha
movsb
pop
and
shl
insb
fistpl
cmp
inc
mov
push
cld
into
divl
jge
int
xor
sub
jg
adc
out
repz
clc
out
mov
mov
inc
es
lret
jb
idivb
cmc
xchg
xchg
stos
jp
push
push
mov
ja
cmp
fdivrl
ror
add
out
dec
mov
lods
call
sub
rcrl
or
mov
xchg
loopne
dec
dec
mov
xor
out
mov
adc
ret
add
inc
cmpsb
push
pop
mov
adc
lds
or
inc
rcll
call
leave
push
sbb
add
mov
and
ror
cmp
gs
pop
insl
out
ds
dec
int
inc
ror
subb
std
cwtl
lret
test
push
xchg
dec
push
dec
mov
cmp
stos
add
test
push
insb
adc
cmp
jno
cwtl
stc
ret
hlt
mov
out
pop
mov
scas
inc
and
xchg
fcmovnu
stos
int
mov
addr16
cmpsl
inc
out
ret
push
jp
jnp
rolb
imul
mov
aam
in
push
leave
bound
testl
jb
mov
add
ss
dec
shl
xor
test
jne
mov
cmp
push
mov
xchg
push
rol
out
or
es
test
sbb
adc
mov
outsb
rorb
jmp
leave
jmp
jle
adc
ljmp
push
adc
sahf
mov
cs
bound
pop
pop
sbb
xlat
shl
dec
aam
jbe
sbb
stos
add
add
addr16
and
popw
mov
xchg
cmpl
pop
mov
cmp
pop
jae
mov
mov
lods
out
cmpsl
push
lds
inc
push
outsb
xchg
jmp
fs
iret
mov
push
movsb
mov
fnsave
push
jbe
dec
xchg
mov
repnz
not
out
push
push
out
mov
lret
mov
call
jno
je
cmp
iret
out
cld
mov
lods
mov
js
mov
rcrb
sarb
jae
push
mov
icebp
mov
outsb
and
lock
repnz
xchg
addr16
push
icebp
xchg
cli
mov
fs
mov
sbb
mov
into
or
mov
mov
ds
out
ret
xchg
stc
jns
dec
out
xchg
dec
out
loop
dec
xchg
cmp
xchg
fwait
imul
into
or
push
xchg
mov
add
pop
jmp
fldt
test
add
mov
mov
cmp
arpl
pop
rcrb
mov
cmpsl
std
pop
inc
dec
fs
mov
into
testl
bound
add
adc
xchg
bnd
lods
push
enter
or
mov
cmp
aam
enter
int3
sub
dec
pushf
ja
add
loopne
mov
inc
add
sbb
insb
push
inc
mov
shll
push
lods
sbb
shl
jbe
add
and
jo
inc
inc
or
mov
add
push
fwait
and
xchg
fsubp
imul
sti
ljmp
test
sub
mov
scas
ds
push
mov
mov
aaa
xchg
call
rcll
add
mov
aas
push
xorb
inc
scas
dec
jecxz
shll
push
hlt
jbe
lret
dec
push
and
into
mov
iret
xor
inc
je
add
enter
scas
insl
adc
ja
push
xchg
sub
xchg
in
sub
push
mov
in
aad
mov
addr16
jb
loopne
les
cltd
lcall
notl
roll
mov
mov
push
lret
leave
leave
fwait
xlat
push
adc
cli
scas
xor
rcl
addr16
mov
out
ljmp
nop
sbb
lcall
cvtpd2pi
pop
daa
pop
mov
xor
pop
or
cmp
outsb
loopne
enter
mov
test
stos
test
out
testl
rol
dec
push
loop
ljmp
sub
mov
sbb
test
xor
loope
mov
mov
pusha
mov
cmp
jmp
std
push
mov
jmp
mov
imul
stos
pusha
addr16
gs
lds
pop
std
mov
stos
push
pop
xor
pop
shl
push
xor
in
out
xchg
sbb
jge
ret
dec
stc
mov
loopne
xor
out
lahf
ljmp
xchg
mov
add
shll
or
cmpsb
pop
lret
mov
cli
ljmp
shlb
stc
call
out
or
bound
or
lret
out
dec
xchg
test
dec
mov
lahf
aas
add
dec
data16
pushl
test
sub
data16
adc
outsl
fists
cmc
mov
add
cltd
mov
jmp
test
pop
mov
imul
mov
adc
shlb
jae
and
arpl
mov
std
fcomps
mov
out
and
jae
fwait
pop
or
xchg
stos
xchg
and
aas
pusha
or
xlat
ret
push
adc
and
orl
jns
push
imul
xchg
sti
fdivrs
push
loope
sub
mov
or
hlt
push
lret
xchg
and
push
and
jb
xor
inc
outsb
test
mov
xchg
data16
cmpsl
mov
dec
inc
rorl
jae
es
mov
jae
xchg
xor
mov
outsb
ss
fs
sbb
add
mov
int
adcl
jg
dec
mov
cmpsl
repz
sbb
loop
fisubrl
out
fwait
hlt
push
imul
sbb
loop
jnp
arpl
stos
dec
cmp
out
jle
movsb
dec
pusha
fwait
sub
pop
aaa
dec
repnz
jl
push
lds
xchg
jge
dec
addr16
inc
or
es
test
loope
push
pusha
cli
mov
aad
mov
sub
lahf
lret
add
lods
push
inc
js
imul
in
adc
pop
in
jmp
cld
icebp
mov
int3
push
fwait
or
test
shlb
xchg
or
pop
push
jl
pop
scas
addb
cmp
movsl
pop
dec
pop
xlat
das
mov
imul
mov
lods
mov
cli
loop
jnp
pushf
xor
jmp
push
inc
push
or
or
sbb
leave
negl
xor
inc
mov
sahf
jmp
loop
sbb
bound
pop
fwait
and
mov
adc
push
xor
jb
icebp
xchg
cmp
lahf
mov
out
shll
pushf
cmp
xchg
lods
mov
lock
mov
cmp
and
jle
xchg
ror
ret
jb
mov
mov
mov
test
pop
out
jo
clc
add
add
jmp
out
movsb
push
pop
bound
cwtl
test
dec
rcrl
loopne
jnp
mov
test
repnz
pop
out
cmpsl
cs
push
adc
lock
mov
jmp
sar
mov
aad
or
addr16
jl
pop
xchg
ds
jbe
addr16
mov
mov
inc
push
jg
jle
mov
and
dec
cmp
std
movsl
add
pop
cwtl
sbb
ds
mov
fadds
data16
mov
lret
inc
cmp
out
lahf
lods
outsb
fwait
sahf
mov
jmp
cmp
sti
xchg
mov
inc
vsqrtss
pop
ret
cli
in
lock
test
sbb
hlt
shrb
test
sub
xlat
out
pop
jnp
repnz
sbbl
daa
cmpl
sbb
pusha
xor
push
popf
and
fsts
pop
rolb
mov
pusha
sbb
imul
insb
pop
cmpsl
inc
mov
test
scas
insl
and
cs
xchg
fcmovnbe
jns
sub
mov
gs
jb
dec
fidivs
inc
dec
xor
inc
xor
ret
pop
pop
daa
cld
mov
jge
adc
jmp
int3
pop
das
pusha
push
imul
mov
sub
or
xchg
or
add
jae
push
pop
ret
loop
pop
cmp
mov
add
adc
jl
movsl
inc
mov
sub
shrl
add
cmpsl
adc
sbb
outsl
sbb
xor
or
cmp
mov
pop
data16
sub
jp
fstps
xchg
insl
idivl
dec
jb
jg
sahf
imul
cld
mov
movsb
push
mov
aam
xor
dec
js
ljmp
sbb
inc
mov
mov
jns
cmpsw
inc
scas
xor
xchg
xchg
ss
ret
ret
faddl
aaa
out
add
dec
bound
outsb
mov
xor
bound
dec
jmp
pop
pop
mov
popa
aas
aaa
iret
xor
inc
mov
inc
int
mov
sub
in
sahf
adc
mov
add
dec
jb
push
jp
pop
hlt
cmpsl
inc
xor
rorb
ljmp
sbb
push
xor
jne
ret
lret
roll
jnp
popf
je
sbb
sbb
mov
xor
out
leave
pusha
push
cmp
inc
out
xor
mov
shll
sbb
pusha
cmpb
push
pop
xchg
sub
mov
lods
sysenter
add
leave
jno
xor
inc
sub
adc
xchg
les
out
pop
push
repnz
xchg
test
cmp
int3
call
mov
add
stos
cmp
fld
lret
jnp
int3
adc
mov
aaa
inc
jge
ja
lcall
xlat
aaa
fcmovnb
mov
movsb
mov
lcall
int3
gs
mov
mov
jecxz
daa
pop
sub
addr16
mov
scas
xchg
cmpsl
fsubs
cmpsl
xchg
fdivrs
inc
add
mov
or
cmc
testb
add
repnz
sbb
test
mov
pop
pop
shr
adc
xlat
xor
mov
fistps
out
or
and
dec
mov
and
xchg
stos
dec
test
in
push
jmp
popl
loopne
aas
repnz
xchg
xchg
xor
loop
div
es
stos
sbb
inc
out
inc
out
sbb
fistps
les
push
lds
xchg
inc
and
rolb
mov
gs
mov
or
cwtl
and
imul
push
int
push
mov
push
mov
ret
pop
mov
xor
sarl
ret
sub
stos
jne
idivb
ss
cmp
arpl
xlat
bts
lcall
push
or
loopne
loope
imul
mov
ret
cmp
push
adc
adc
pop
popa
stos
jno
adc
jb
data16
rorl
pop
mov
jae
xchg
jg
xchg
jb
imul
push
in
push
iret
xchg
cmp
mov
in
xlat
es
sbb
or
insl
add
ficoml
dec
sub
pushf
loopne
fisubrl
icebp
adc
movsl
xor
sub
push
adc
bound
stos
mov
jno
mov
cmc
pop
inc
mov
das
lcall
mov
cmp
sbb
ss
push
lcall
xchg
lret
ret
add
xchg
adc
sub
aaa
lret
inc
fadds
cmp
mov
data16
push
lock
sub
sbb
push
fisubl
push
cmpsb
xchg
stc
out
push
ret
mov
lock
test
fmull
into
inc
and
push
xor
xor
push
scas
dec
adc
pop
imul
mov
pop
lock
pop
andb
jg
mov
jle
adc
xchg
lcall
stc
repz
jae
insb
add
ds
inc
aaa
cmp
jmp
ss
pop
jl
dec
fidivs
sub
int3
sub
cld
adc
adc
sub
cs
dec
dec
mov
sbb
daa
js
sti
out
lods
shll
jecxz
popa
divl
popf
mov
fistpl
cmp
arpl
lret
push
pop
cmp
adc
ret
lahf
sub
bound
bound
pop
fimuls
inc
or
ljmp
fdivr
ficompl
sbb
test
xor
roll
xor
js
outsl
jg
inc
shlb
mov
mov
gs
rolb
fldt
push
dec
int3
loopne
push
imul
mov
mov
jne
mov
cltd
dec
or
cld
repnz
sti
mov
lahf
dec
push
stos
sub
inc
int3
inc
inc
mov
fnstcw
push
mov
sbb
enter
mov
aas
inc
aam
jnp
lret
push
xor
dec
pop
frstor
sbbl
loope
aas
mov
aam
cli
clc
js
push
shl
xchg
pusha
xchg
xchg
pop
rorb
xchg
cmp
jle
xchg
cli
dec
mov
icebp
push
popa
inc
roll
mov
push
movsb
je
add
imul
push
aaa
mov
js
pop
push
jmp
scas
loop
mov
popa
cmpsb
jge
xor
fbld
aam
divl
jne
test
repnz
inc
pop
sub
insl
mov
push
jle
jne
cmp
dec
cmc
aaa
dec
sub
es
hlt
xor
and
ret
es
or
push
sbb
dec
add
stc
stos
test
add
jmp
xchg
test
mov
lods
push
mov
movsl
push
push
repz
lea
std
stos
inc
out
fwait
cwtl
out
or
pushf
pop
jo
adc
rorl
or
sti
fwait
repnz
mov
jp
mov
cmp
iret
pop
adc
mov
add
lock
cmpsb
iret
aaa
cs
or
mov
or
adc
jne
or
mov
jle
lahf
push
mov
ljmp
ffreep
jne
ja
out
movsl
mov
xchg
imull
aam
and
shrl
sub
lahf
or
les
loopne
imul
lock
into
add
mov
sbb
fisubrs
mov
out
or
std
sahf
outsb
negl
out
sub
cmpsb
sti
add
push
data16
pop
cmpsl
or
xor
push
mov
hlt
sub
pop
das
mov
imulb
mov
cli
repnz
aam
scas
push
lahf
xchg
lea
mov
sbb
or
pop
or
jae
xchg
daa
int
mov
and
ljmp
adc
gs
adc
xor
rorl
scas
int
adc
mov
jge
out
mov
repnz
aas
out
and
lods
loopne
or
and
pop
xor
mov
int
rcrb
push
cmpl
mov
xchg
mov
in
mov
push
lahf
mov
jecxz
ficomps
push
mov
inc
sbbb
fstpt
pop
inc
jg
ret
cmovs
pop
adc
fcmovnu
aas
cmpsb
ret
push
inc
dec
push
inc
or
bnd
pop
jae
xor
push
dec
fmuls
mov
mov
push
int
mov
dec
and
xchg
jae
xchg
lods
cmp
sub
std
xchg
scas
cmp
sbb
and
push
fmull
iret
inc
jle
cmpsb
pushf
mov
fists
sbbl
call
push
fwait
ret
mov
jge
sub
jae
mov
mov
icebp
mov
aas
sub
fsubrl
ror
out
test
xor
push
jnp
lcall
lret
mov
testl
cmp
shll
in
pushf
mov
sub
stos
hlt
and
jae
sub
jmp
pop
shlb
sbb
lahf
ret
pushf
in
mov
push
push
or
mov
mov
lds
out
pop
dec
in
aaa
popf
les
orb
or
adcl
cmp
add
xchg
sub
out
shlb
push
inc
loop
rcrl
fsubrl
mov
inc
mov
fnstcw
loop
xchg
inc
std
into
adc
outsl
push
mov
out
xchg
jl
jg
jp
imul
or
testb
inc
fisttpll
jmp
and
xor
stos
idivb
ror
cmp
rorb
sbb
mov
xchg
lret
std
rorb
sbb
sbb
mov
in
push
lds
inc
mov
ret
push
lahf
call
cli
aaa
shl
or
ds
icebp
stc
and
cmc
jb
mov
dec
inc
insb
into
dec
iret
popf
jmp
or
mov
cwtl
mov
fistl
xchg
adc
add
inc
mov
jp
sbb
pop
jmp
ljmp
enter
shll
mov
ljmp
int
jo
mov
adc
aaa
dec
and
inc
mov
cmp
aad
add
sbb
and
pop
push
mov
cmp
pop
cmp
dec
mov
adc
scas
jg
inc
pop
jecxz
fidivrs
adc
sarl
imul
pop
xchg
dec
sahf
outsb
das
jnp
jmp
lods
mov
mov
les
jmp
xlat
push
cmpsl
mov
sbb
bound
pushl
cmp
add
lahf
mov
ljmp
fldenv
mov
std
mov
cld
shrb
hlt
jns
adc
inc
fisubl
out
xor
xor
push
nop
in
dec
jg
out
dec
loopne
inc
mov
jmp
pushf
xor
adc
mov
push
adc
jp
dec
imul
adc
out
xchg
xchg
push
popa
sbb
xlat
insb
mov
sub
jne
jbe
insl
mov
cli
int
cmpsl
and
dec
outsw
and
adc
cmp
adc
nop
pop
add
leave
and
add
mov
sbb
and
pop
insl
mov
pusha
adc
insl
fwait
pop
xlat
sbb
cld
xchg
lret
sbb
mov
into
xchg
jns
out
jp
sbbb
aam
jne
cmp
mov
in
mov
ret
mov
cmp
out
int
mov
xchg
sbb
pop
repz
ror
and
push
repnz
cmc
sub
popa
sbbb
clc
jmp
dec
negl
xchg
fildl
push
int3
jmp
pop
fnsave
cmp
push
or
stc
pop
or
cmp
lock
pop
mov
push
cmpsb
ja
divb
lahf
and
lret
andl
sub
fcmovb
jle
addr16
xchg
jmp
test
addr16
xor
jne
ja
sarl
mov
lods
sbb
xchg
mov
add
cmpsl
cmc
int3
xchg
cmp
loopne
add
out
daa
inc
mov
adc
sbbb
add
pop
add
movsb
aam
push
aas
jp
jl
inc
out
lret
scas
pushf
je
sub
data16
rcl
inc
jne
dec
lret
pushl
movsb
int
adc
int3
insl
and
popa
icebp
into
sbb
ljmp
sub
nop
pop
pop
jmp
jb
daa
js
fsubr
imul
repz
xchg
pop
aas
mov
jg
lea
jne
and
push
daa
adc
outsl
pop
add
mov
xor
imul
popa
cmpsl
aas
repnz
imul
cmp
push
dec
lret
pusha
mov
mov
sbb
loopne
leave
repz
nop
les
ret
fisttps
mov
mov
out
xchg
dec
nop
andl
push
xchg
test
mov
scas
xchg
dec
insl
xor
icebp
jno
pop
pop
popa
test
jnp
neg
mov
cmpsb
xlat
adc
test
add
out
push
mov
fistpl
pusha
or
loop
jp
stos
jb
bt
add
add
cmp
rcll
mov
pop
cmp
or
shrl
xchg
xor
xor
jl
pusha
mov
mov
sub
call
and
iret
xchg
mov
rcrb
in
iret
xchg
test
jne
sbb
loopne
pop
nop
cwtl
stos
stos
inc
cmp
jae
sub
test
xor
das
outsb
out
les
cmp
mov
fldcw
les
sub
aad
mov
jmp
jnp
pop
aad
dec
stos
pop
xchg
fldl
pop
ljmp
push
loopne
ror
shlb
fsts
aaa
sbb
xchg
js
xor
or
testl
xor
pop
subl
gs
bound
inc
mov
std
icebp
xor
sub
push
sub
mov
leave
ret
sub
sbb
in
mov
rclb
loopne
cmc
xchg
pop
call
mov
push
and
imul
sbb
stos
jae
idivb
pusha
cmp
imul
in
mov
inc
outsl
lahf
jno
sub
repnz
push
mov
icebp
popa
pop
lret
dec
cld
cli
gs
cltd
jg
xchg
xchg
test
repnz
in
dec
out
rclb
and
mov
std
dec
mov
xor
sbb
pop
dec
clc
xor
mov
pop
sub
xor
sbb
jns
cmp
adc
cmp
fmull
pop
push
shr
ret
dec
adc
jbe
scas
jb
sub
xchg
add
push
and
ss
in
rorb
cmpsb
outsl
pop
xchg
push
mov
lds
shl
cmpb
ret
nop
rclb
mov
add
inc
mov
mov
and
adc
fucomi
lds
mull
jbe
cmp
in
shrb
add
jbe
add
jp
pop
xchg
push
movsb
push
xlat
negl
xor
push
jb
pop
cli
repnz
cmp
lret
out
inc
stos
xor
outsb
into
loop
popa
inc
xchg
dec
ljmp
mov
mov
and
stos
lds
imul
fsubrl
lcall
sbb
lret
cld
adc
dec
cs
scas
xor
std
fcmovnb
jno
leave
cmp
inc
enter
inc
cli
inc
and
ljmp
mov
fdivrs
or
adc
mov
lret
jo
stc
aad
aas
xchg
dec
and
inc
enter
shlb
cmc
stos
mov
outsb
mov
mov
jge
xor
clc
lds
pop
stos
fcoms
adc
and
insl
lods
adc
pop
inc
pushf
scas
cmp
inc
imul
mov
lahf
stos
and
dec
daa
xchg
insb
icebp
stos
push
push
or
fucom
pop
lods
iret
mov
and
aaa
pop
call
repnz
leave
fdivp
jnp
mov
add
inc
lret
adc
outsb
cli
adc
xor
sub
xchg
sub
pop
push
sbb
push
daa
rclb
mov
dec
out
inc
mull
cmp
scas
ret
out
sbb
xchg
push
in
ja
or
sub
dec
jbe
int3
jb
xor
xor
popa
add
xchg
push
jne
ljmp
xchg
jbe
lock
enter
leave
sub
outsb
jp
cmp
pop
ljmp
and
push
mov
fsubs
dec
test
xlat
xchg
push
leave
mov
add
insb
test
jb
jbe
xor
mov
shll
rol
dec
push
cmpsl
bound
leave
sbb
inc
mov
add
push
ret
adc
add
enter
repnz
xor
pop
mov
fisubs
out
test
push
sbb
sbb
sarl
icebp
shrb
into
imul
dec
js
ja
dec
sahf
cli
das
mov
or
dec
inc
push
xchg
fistps
pop
mov
mov
lea
out
mov
mov
sbb
xchg
push
xchg
repnz
jmp
cmp
xchg
dec
shll
adc
iret
push
jle
push
xchg
ds
daa
xchg
jbe
sub
cmc
ljmp
in
dec
pop
adc
add
sub
push
imul
xchg
xchg
out
orb
outsb
dec
es
add
jp
insl
inc
adc
lds
mov
fcmovnbe
or
cld
mov
shrb
mov
daa
scas
add
outsb
mov
pop
scas
in
aaa
mov
pop
cmp
pop
mov
jne
repz
dec
inc
imul
icebp
jno
adc
aaa
arpl
mov
hlt
add
outsb
mov
call
icebp
jecxz
dec
push
aas
lret
mov
push
add
and
cld
mov
fs
shr
mov
ret
mov
loopne
popa
sbb
adc
cmpb
out
push
jecxz
lcall
fnstsw
jns
jge
mov
hlt
stc
sbbb
shll
movsl
insb
jecxz
xchg
fcmovu
fistps
hlt
out
in
mov
and
imul
sbb
cmp
jp
aam
adc
push
mov
jno
push
repz
lahf
inc
imull
testl
pop
pop
pop
and
into
xchg
enter
int3
test
inc
add
adc
push
imul
ret
adc
xlat
adc
jg
aas
iret
push
adc
inc
xor
insb
xchg
out
pop
pop
out
push
ljmp
cmp
dec
mov
push
sub
dec
insw
jbe
xchg
dec
out
imul
movsl
imul
lods
inc
jecxz
idivb
xchg
fisubl
cmp
cmp
or
stos
push
adc
inc
xchg
out
jnp
leave
jg
push
cs
mov
addr16
jmp
cmp
dec
mov
ret
push
and
pop
push
push
lahf
inc
push
jne
xor
pop
lock
xchg
or
fwait
sbb
movsl
aas
bound
pop
add
cmc
rcrb
inc
popf
sub
loopne
inc
xchg
sahf
lcall
mov
mov
adc
scas
clc
out
sub
out
xchg
jge
repnz
mov
push
dec
outsb
cmp
inc
mov
ficoms
push
cmp
pop
pop
andl
mov
movsl
repz
fwait
das
lcall
cmp
inc
hlt
int
scas
sub
add
pminsw
fiadds
imul
loop
aad
mov
add
mov
push
fildl
mov
inc
test
shll
xchg
cmp
mov
dec
fisttps
imul
jns
dec
cmp
xchg
dec
cmc
mov
lcall
dec
fcoms
lret
rol
hlt
and
out
enter
stos
outsb
xor
rorl
or
and
stos
clc
cmp
int
addr16
xor
repz
ret
pop
lret
mov
mov
adc
pop
jb
jp
inc
pop
dec
cmpsl
or
imul
sbb
sbb
adc
mov
lock
lods
test
sti
cmp
cmpb
fadds
sub
or
add
xchg
push
jns
cmpsl
adc
scas
ror
daa
mov
or
popa
outsl
repz
into
sub
mov
pop
xor
inc
mov
mov
and
cs
push
add
in
push
leave
xlat
repz
jae
mov
out
pusha
mov
jmp
arpl
pop
ljmp
test
int3
divb
pop
jbe
push
insl
mov
xor
inc
jmp
push
fldcw
pusha
sti
push
das
jo
or
ss
rcrb
fucomip
ss
xlat
roll
inc
add
sbb
push
mov
adc
or
andl
mov
int
lods
dec
mov
push
lahf
lahf
in
add
push
stc
jnp
or
mov
leave
dec
popf
xchg
adc
and
xchg
shrl
and
and
leave
jl
imul
aaa
xchg
xor
fwait
pop
dec
adc
test
test
outsb
jnp
inc
sbb
jno
fsubrs
lock
mov
roll
movsl
xlat
insl
repnz
iret
sub
lahf
testl
stos
jmp
add
ds
push
sbb
adc
test
inc
adc
scas
mov
adc
pop
rcrb
shrb
and
jno
sub
xor
hlt
imul
inc
xchg
mov
imul
call
and
cs
out
dec
les
outsl
scas
sub
insl
jno
das
jp
adc
xlat
jmp
stos
mov
repnz
es
dec
xchg
in
pop
xchg
or
lret
mov
gs
push
or
jo
ljmp
pop
fsubr
inc
xchg
xchg
mov
mov
enter
ja
xor
int3
out
fisubrs
faddl
std
jb
fisubrs
mov
cld
adc
ret
sub
mov
inc
into
lock
pop
add
xor
scas
fidivl
add
loop
aad
shr
cld
iret
and
jg
and
push
sub
iret
aaa
sbb
cmpsb
iret
inc
dec
gs
cmp
testl
mov
and
test
push
test
pop
add
mov
outsb
popf
cmp
pop
mov
icebp
adc
fcoms
pop
or
fcoms
out
mov
bound
push
sub
out
nop
mov
repz
dec
repz
iret
lret
outsb
inc
mov
xor
mov
int3
in
push
xor
rorb
imul
sbbl
ret
dec
mov
outsl
out
xchg
push
loop
cmp
xchg
pop
jne
xor
mov
jmp
jae
cmpsb
or
outsl
jae
and
push
jmp
cli
in
stos
mov
rolb
ds
addr16
stos
in
mov
jmp
sarl
mov
sub
in
shrb
cmpsb
and
iret
sub
fcmovne
sub
arpl
mov
cwtl
sub
sbb
roll
loop
xchg
or
loop
pop
dec
insb
push
lret
ss
xor
dec
les
lret
cmpsb
imulb
adc
sbb
ljmp
adc
lock
xor
push
shrb
pusha
stos
inc
in
adc
arpl
mov
push
push
out
pop
inc
mov
and
cli
in
add
call
push
mov
xor
shl
lods
sbb
cld
out
pop
jmp
inc
repz
xorb
dec
or
stos
jne
insb
adc
shrl
movsl
and
pop
cmp
jno
jae
jle
into
fstpt
test
hlt
mov
sub
push
nop
movsb
cli
mov
fcoml
or
shll
inc
stos
or
mov
negb
push
sti
xor
and
add
lock
stc
xlat
push
pusha
addr16
clc
lods
xor
xor
mov
insl
ffree
pop
xchg
movsl
inc
imul
sbb
ret
std
ffree
sarl
jno
lods
and
mov
cmp
jo
ljmp
rolb
cs
jg
xor
mov
mov
loopne
mov
sbb
lahf
xchg
dec
ret
adc
inc
repnz
cmpsb
push
out
xchg
xor
imul
xchg
and
or
test
lret
jae
inc
xchg
dec
and
mov
aam
pushf
addr16
hlt
jno
orl
pushf
jl
test
jbe
test
mov
gs
popa
cmp
xlat
adc
cmp
add
test
mov
pop
inc
add
cmp
cmpsl
cmpsl
cmp
push
add
cmpsb
bound
or
dec
flds
xchg
fisttpl
aas
and
and
jae
ljmp
cmp
push
orl
mov
imul
cld
movsl
lods
mov
lds
ret
jo
jge
das
push
xor
mov
sub
nop
push
push
fmuls
out
insb
pop
xor
jp
dec
xchg
jno
data16
and
xchg
mov
jmp
jae
adcl
jmp
pop
push
repz
mov
lret
push
int3
call
imul
xor
in
jo
in
sub
out
aam
cli
and
inc
jns
push
pop
popf
out
lcall
repz
les
dec
push
ret
adc
and
lea
pop
movsb
lds
or
push
mov
jmp
fmull
iret
imul
mov
aaa
iret
jae
pop
mov
cmp
cwtl
push
fwait
add
test
cld
sbb
mov
or
jecxz
cmp
outsl
cld
push
mov
out
cmp
xchg
adc
mov
adc
mov
cmp
loope
mov
cmpsl
xor
jne
leave
dec
pop
xor
sub
sub
imul
sarl
stc
insl
ficoms
inc
sub
jns
rorl
xor
fwait
cmpsb
jnp
lret
mov
inc
sub
ret
imul
fcomip
dec
and
test
int3
aaa
lock
fimull
pusha
push
mov
xchg
fdivs
and
inc
movsb
inc
sahf
stos
nop
int3
jns
mov
xchg
dec
mov
popa
mov
cmp
and
add
or
ljmp
sbb
ret
adc
movsl
aaa
movsl
into
addr16
or
push
jle
xchg
sbb
mul
les
pushf
push
sti
mov
insl
leave
inc
mov
add
loopne
mov
xchg
adc
jge
test
add
push
mov
loope
inc
sbb
icebp
cmp
dec
pop
into
cmp
and
int
ljmp
push
add
xor
mov
adc
neg
jb
push
xchg
repnz
pop
mov
push
mov
cli
aam
adc
push
lock
sub
lea
insb
ret
arpl
xor
mov
adc
orb
lret
arpl
mov
mov
cmp
inc
imul
mov
or
int
es
insb
daa
rcrl
xor
sbb
stos
pushf
push
and
mov
dec
cwtl
je
fdivl
and
leave
dec
sbb
sub
pop
scas
jg,pn
push
jbe
loop
or
adc
adc
pop
sbb
inc
pop
mov
xor
dec
or
lock
out
dec
aad
xor
jno
cmp
xchg
sub
jns
inc
in
int
out
popf
jmp
xchg
pop
sbb
test
inc
in
sti
add
xchg
push
mov
dec
inc
adcb
sbb
sbb
jne
mov
jp
inc
sbb
cmp
xchg
add
add
arpl
call
fdivrl
jb
pop
or
sbb
dec
mov
jo
and
icebp
cmp
fsubs
xor
fmuls
gs
dec
jl
xor
mov
jo
or
lahf
mov
and
notl
inc
dec
add
or
mov
mov
xchg
lahf
testl
mov
xchg
lods
bound
cmp
push
lcall
inc
mov
add
out
sub
mov
mov
test
inc
leave
adc
jle
pop
stc
loop
adc
ds
sti
inc
sub
ja
lret
jae
xchg
je
mov
cmc
pop
insb
xchg
push
cmp
mov
or
mov
in
aad
mov
loopw
mov
mov
incl
data16
fs
popf
ret
jp
daa
imul
add
mov
dec
lds
jnp
push
or
and
and
sub
jae
jb
pop
cmp
jae
imul
aas
jl
adc
loope
call
add
xor
sbb
adc
divl
in
jns
hlt
and
push
cli
imul
inc
xor
imul
and
pop
sbb
push
xor
daa
es
xor
cltd
mov
mov
and
into
xchg
jbe
lret
inc
mov
mov
in
mov
mov
imul
mov
or
outsb
std
jge,pn
mov
mov
push
jl
test
je
test
cli
test
bnd
add
gs
mov
mov
ret
cs
stc
outsb
push
or
cmpsl
or
int
test
repz
rcrb
mov
dec
push
dec
rcll
jl
adc
out
jp
ljmp
dec
ffree
ja
fmuls
sub
jbe
cmp
sti
mov
xor
push
in
cmp
sti
int3
pop
cli
movsb
out
int
test
pop
adc
cs
push
pop
mov
test
mov
adc
sub
jmp
out
imul
mov
popa
sti
jbe
inc
xchg
xor
cmpsb
cmp
and
adc
jno
and
and
fdivl
push
mov
scas
sbb
inc
push
adc
lret
fistpll
mov
mov
inc
testl
arpl
jo
ljmp
add
sub
pop
add
mov
fadd
push
pop
xchg
pop
jb
jb
adc
jle
imul
pop
pop
daa
mov
ret
pop
inc
jle
shr
clc
mov
inc
sub
pop
push
jmp
xchg
out
data16
test
jno
mov
add
fmuls
push
xlat
test
aam
movsb
popa
into
push
mov
mov
ret
stos
outsl
mov
ret
mov
add
add
fidivs
jle
push
jb
repz
loope
lods
dec
fnstcw
mov
into
lahf
xchg
xchg
enter
adc
cmp
jg
test
lock
cmp
mov
sbb
insb
call
lahf
scas
stos
jb
fcomip
enter
shlb
sbb
addb
dec
push
test
ljmp
mov
testb
inc
cmpsb
cwtl
pushf
sbb
mov
dec
mov
jo
dec
dec
pop
jo
mov
sbb
out
jae
xor
arpl
fdivrl
aas
mov
mov
int
push
test
or
push
out
cmp
lds
repz
jbe
mov
xorl
shrl
mov
pop
push
sbb
pop
rcr
xchg
sbb
push
adc
add
adc
icebp
jne
jmp
arpl
push
loop
pop
jno
adcl
sub
bound
pop
data16
mov
push
shlb
or
sbb
inc
daa
adc
dec
sarl
adc
fcom
mov
xchg
adc
scas
enter
out
call
stc
aaa
mov
inc
jbe
push
xchg
mov
push
repnz
das
mov
mov
outsb
int3
lods
in
mov
loop
ljmp
int
push
or
adc
dec
push
lea
or
and
push
test
xor
adc
jb
cmp
test
and
leave
pop
jg
jp
idivb
fnsave
mov
jb
jb
dec
xor
cmpsb
and
jmp
insl
jns
testl
xor
cs
insl
xor
adc
shl
pop
fistl
test
inc
mov
jg
inc
add
adc
push
cli
in
out
je
xchg
sbb
and
mov
add
dec
je
subb
ljmp
sarb
bound
sbb
add
mov
mov
jecxz
std
xor
push
movsl
or
mov
xorb
rorb
loop
fisttpll
mov
lahf
js
and
push
mov
dec
xchg
add
aaa
mov
lret
push
add
push
pop
push
ret
aaa
ret
lods
stc
push
adc
sub
fistl
mov
movsl
shll
sbb
jg
mul
xor
cmp
fmull
mov
mov
cli
std
cmc
pop
inc
sub
jmp
push
test
aam
out
scas
pop
dec
xchg
dec
test
mov
sahf
jnp
push
and
and
pop
mov
loop
mov
mov
fs
stos
gs
lods
sbb
xor
or
mov
lods
jg
and
rcll
ret
jnp
mov
mov
cmp
aad
sub
jp
int3
ss
aad
cltd
cli
out
out
pop
cmp
or
imul
cwtl
inc
ja
jge
jns
aad
or
ret
pop
xchg
aas
cli
in
xchg
mov
fstps
pop
cmp
lahf
mov
insl
add
pop
out
daa
add
mov
add
dec
push
lds
test
and
or
xor
pushw
mov
sti
adc
movsb
mov
ret
pop
pushf
jb
inc
je
push
pop
inc
addr16
and
inc
add
xor
mov
les
nop
ss
jns
adc
push
inc
lret
xchg
loopne
cmpsb
imul
sbb
aas
dec
jne
cmp
push
jo
jg
idivl
nop
mov
jb
imul
in
testb
scas
add
sbb
and
shll
rorb
loope
shll
and
jno
loope
cmp
lcall
mov
int
cltd
dec
push
mov
fmulp
dec
sarb
xor
pop
dec
pop
es
sarl
sbb
clc
clc
inc
pop
jbe
and
loopne
dec
out
cld
mov
mov
pop
insl
imul
adc
jle
cs
dec
test
bnd
and
add
repnz
loop
xor
adc
inc
pop
scas
lret
jge
mov
into
xor
in
dec
push
fnstcw
fwait
outsl
add
push
mov
inc
xchg
ret
sub
in
xor
add
sbb
in
fistps
sbb
pop
and
adc
push
sub
repnz
xchg
adc
iret
in
and
lea
push
pop
int
aam
bsf
outsl
push
lock
jp
cli
cmc
sbb
in
repnz
cmpsb
inc
loop
bound
insb
inc
inc
in
cmpsl
pop
jns
xchg
and
pop
jns
adc
jg
mov
out
and
push
mov
sarl
push
fcoms
mov
cmp
lahf
sub
ret
scas
xchg
pop
push
xchg
inc
push
imul
xchg
scas
cltd
xchg
xchg
loope
add
lret
dec
jmp
and
mov
xchg
ja
jle
inc
orl
push
les
xchg
sti
cmp
push
subl
push
or
xchg
lods
push
mov
sub
sub
stos
dec
sbb
js
or
inc
fisubl
mov
jns
fstpt
cmc
cli
ljmp
xchg
pusha
and
xor
shll
jg
xchg
dec
sub
outsb
lahf
cs
stos
adc
or
cmpsl
dec
idivl
mov
cltd
xor
jno
adc
mov
insl
sbb
mov
sub
mov
mov
inc
sub
ret
jmp
ret
push
jl
inc
adc
push
lock
or
pusha
or
push
jne,pn
std
mov
jg
hlt
cs
ja
dec
jbe
in
push
adc
ja
jae
loop
subb
adc
or
sbb
movsb
add
rorl
mov
mov
dec
dec
pop
add
mov
das
ret
pushf
cli
push
mov
jg
subl
xchg
mov
and
lods
movb
mov
jmp
cwtl
adc
push
or
repnz
fwait
push
ja
mov
jle
cwtl
pop
sub
out
addr16
xchg
add
xchg
pushf
sub
ret
and
iret
rcr
cmp
push
mov
mov
pop
inc
cmp
cmp
mov
pop
mov
in
mov
dec
je
add
repz
leave
ret
repz
cmp
jne
mov
fldenv
or
add
and
loop
fstpt
fmul
test
xor
ret
jge
popa
addb
aaa
and
xchg
cli
sti
sbb
lds
mov
shll
stos
nop
cmp
jns
daa
sarl
fs
mov
cli
dec
cmc
cmp
ret
and
sub
push
mov
mov
pushl
popa
dec
cs
mov
mov
cli
in
arpl
push
push
add
imul
sub
aaa
jp
pop
push
add
jmp
or
out
repz
addr16
repnz
enter
rcr
ja
ret
loopw
test
inc
mov
xor
and
out
mov
push
cs
shlb
xchg
enter
repnz
mov
push
in
out
lahf
loop
push
pushl
mov
cmpsb
mov
nop
inc
push
xor
pop
lret
jnp
lret
mov
dec
out
mov
sbb
mov
mov
cmp
xchg
ret
inc
addl
jno
int3
idiv
insl
lahf
lods
sbb
addr16
add
fsubrl
cmpsl
lretw
pushf
mov
lahf
test
and
add
or
xor
or
sbb
fwait
or
loope
outsb
adc
mov
pusha
cmc
cmp
xor
cld
push
jbe
sbbb
xchg
adcl
xchg
stos
fisttpl
ror
and
cmp
cwtl
cli
ds
xchg
xchg
sahf
cmp
xchg
mov
inc
clc
push
ja
xchg
iret
xchg
test
nop
dec
lret
ljmp
ficoml
pop
std
push
adc
pop
imul
repnz
lods
test
dec
call
push
cmc
dec
mov
add
mov
add
insl
add
fdivs
fidivrl
movsl
fistl
dec
pop
or
push
dec
jmp
jmp
clc
test
sbb
sbb
mov
repnz
jmp
data16
shl
jnp
pop
arpl
mov
loop
push
fsubr
sarl
repnz
sbb
push
pop
hlt
fdivr
or
jg
jecxz
push
pop
mov
out
out
mov
jge
push
mov
iret
inc
inc
jmp
testb
inc
pop
mov
std
add
push
leave
pop
add
in
dec
push
jne
inc
push
jns
sub
imul
lahf
andl
jle
lds
jecxz
jle
or
xor
leave
ss
loopne
in
ficoms
sarb
shr
push
dec
mov
mov
repnz
ret
daa
in
adcb
jnp
icebp
jae
push
jne
cmp
fwait
iret
push
xor
pop
push
les
or
decb
fiaddl
sub
mov
mov
add
cmp
jl
jnp
aaa
xlat
ds
loop
cmp
icebp
outsl
sbb
adc
and
pop
mov
idivl
nop
jo
sub
jge
fdivl
mov
lcall
imul
mov
add
jge
rcrl
nop
mov
pop
sub
xchg
in
push
sbb
loop
cmc
pop
lods
inc
push
mov
cmp
cmp
imul
xor
xlat
fisttpll
add
movsb
data16
and
inc
bound
bound
es
mov
repz
sti
out
add
out
jmp
int
aad
sti
ljmp
xchg
out
fcoml
or
daa
and
in
ds
fisubs
lret
push
fnstsw
imul
in
or
cmc
xor
jo
fwait
mov
les
xchg
and
movsb
mov
mov
pushw
push
sarb
and
sub
int3
and
xchg
push
dec
insb
mov
dec
scas
jge
pop
pop
out
xchg
test
dec
adc
dec
ss
push
add
and
int
inc
sbb
mov
pop
cltd
adc
mov
or
dec
push
pop
inc
inc
push
divl
or
cltd
add
out
rcll
clc
push
adc
filds
jle
ljmp
sbb
xor
repz
popa
pop
imul
push
jp
pop
inc
sahf
scas
jge
inc
pop
pop
out
inc
cmc
mov
stos
ljmp
shrl
inc
out
mov
faddl
fisubrl
sbb
popa
inc
sub
inc
mov
or
in
jbe
adc
gs
icebp
shlb
aas
lock
pop
mov
lock
mov
aad
xchg
lret
sti
lods
movsb
jne
sahf
xor
xor
and
fmuls
ret
das
out
inc
notb
mov
adc
add
push
jmp
push
xchg
add
imul
sbb
ja
psubw
aad
pop
rcrl
outsb
in
sbb
push
xchg
movsb
fimuls
jecxz
and
subb
jle
pusha
add
loop
dec
and
test
xchg
mov
out
out
ret
jo
out
ficomps
test
cmp
jge
leave
popf
fstpl
push
inc
out
mov
lahf
loopne
xor
adc
dec
push
mov
cmp
mov
cmp
dec
outsb
and
fistl
cli
dec
dec
xchg
mov
ret
cmc
mov
add
add
cmpsb
jmp
pop
xor
das
orl
cmovnp
push
imul
shlb
pop
add
push
cmc
daa
loopne
mov
inc
insl
push
and
mov
les
aas
xor
jmp
stc
addb
lret
jb
fwait
addr16
jmp
push
not
and
cmp
jecxz
lcall
insb
imul
jmp
imul
lock
inc
inc
dec
bound
repz
cmpsb
push
outsl
jle
insb
xor
aas
pop
scas
mov
cmpsb
jl
adc
inc
mov
pop
loope
xchg
add
jp
subl
sti
mov
xchg
lcall
sub
adc
andb
test
xchg
adc
sbb
or
mov
cmp
lds
test
xor
xlat
pop
push
or
sbb
hlt
and
mov
cli
and
fbstp
push
pusha
scas
out
jnp
cmp
jle
inc
das
and
adc
sbb
in
jae
mov
xchg
popf
mov
jecxz
sbb
pop
cwtl
pop
pushf
xchg
and
mov
add
test
loope
and
push
imul
or
pop
mov
or
jae
int3
ljmp
repz
sti
sub
push
loop
cmp
shll
jmp
incb
popa
popa
ds
addr16
inc
scas
pushf
adc
jecxz
ds
cmpsl
stos
test
daa
lret
sub
sub
test
imul
into
insb
xchg
dec
and
mov
sbb
aad
inc
cwtl
dec
dec
jecxz
mov
rorl
fcmovu
mov
test
pusha
cmp
cmpsb
jnp
inc
add
and
adc
popf
dec
ret
sbb
cmc
daa
lret
repnz
fwait
clc
jp
jl
fldt
add
jp
and
movsl
mov
out
idivb
jp
dec
sub
into
call
adc
xchg
mov
xor
push
mov
outsb
ljmp
push
push
add
cli
and
adc
jmp
mov
mov
inc
sahf
pop
mov
ja
push
jl
add
or
jbe
imul
xchg
ja
adc
cmc
je
es
dec
mov
int3
lcall
cli
je
ffreep
xchg
loop
mov
loope
dec
shll
sub
add
xor
pop
mov
mov
gs
into
push
xchg
xor
push
xchg
dec
mov
mov
stos
mov
xor
dec
arpl
rcrl
outsl
ret
lret
rol
push
inc
jnp
push
mov
mov
int3
push
mov
aaa
cmp
stos
inc
mov
pop
insb
shl
lret
push
lret
mov
pop
mov
sbbb
aaa
xchg
out
add
xchg
repz
dec
sbb
push
pop
hlt
lods
mov
clc
je
pop
stos
pop
add
leave
insb
popa
movsl
fisttpl
cli
leave
enter
out
pop
push
dec
clc
mov
and
out
xchg
aas
mov
adc
inc
cltd
jg
bound
cmpsl
or
dec
push
mov
sti
int3
jle
int
fists
dec
test
stos
inc
inc
je
push
adc
jae
repz
jno
pop
scas
pop
movsb
gs
adc
loopne
stc
pop
leave
ja
or
xchg
xchg
xchg
mov
popa
bound
shl
cmpsl
out
inc
mov
gs
test
scas
fs
dec
jne
xchg
dec
sbb
xor
lock
xchg
hlt
outsb
cmpsl
lret
stc
sub
sbb
arpl
mov
lcall
pop
pushf
cmp
push
es
subl
cmp
outsb
stos
xchg
dec
cmp
and
pop
inc
or
in
outsw
inc
xchg
outsb
jne
xlat
test
jo
push
fsubl
dec
imul
int
ss
dec
fneni(8087
mov
cltd
loopne
roll
push
lods
inc
test
movsb
mull
jno
scas
out
add
pop
sub
pusha
add
pop
popf
sbb
push
cmc
ljmp
sti
mov
outsl
push
lret
repz
filds
daa
xchg
cmpsb
addr16
dec
push
sarb
mov
push
data16
jae
cmpsb
or
mov
xor
xchg
hlt
pop
xor
lods
xor
shll
out
mov
jl
inc
xchg
pop
mov
daa
mov
sbb
aaa
and
std
testl
jg
jns
lds
ljmp
adc
notl
xchg
pop
add
jo
mov
sub
shll
inc
push
cmpsb
mov
stos
cmp
outsl
loopne
mov
cli
fnstenv
or
adc
sbb
and
pop
out
adc
mov
jmp
jl
push
ljmp
push
nop
jb
mov
push
aaa
fld
shlb
xor
mov
push
outsl
addr16
dec
pop
xchg
test
bound
push
jae
mov
outsb
mov
and
lret
aam
cmpsl
mov
cmp
pop
jns
fdivrs
xor
testl
inc
pop
pop
sbb
repnz
roll
inc
push
xchg
dec
ja
ss
jg
dec
mov
xor
mov
push
mov
mov
mov
stos
aas
mov
xchg
dec
inc
mov
out
inc
push
dec
and
pop
dec
mov
mov
xor
daa
jbe
nop
and
mov
test
fdivrs
cmp
and
mov
push
push
stos
push
pop
ja
jb
rorl
mov
mov
lahf
cmp
xchg
data16
in
push
es
pop
push
jno
cs
cmpsb
outsl
inc
push
sti
adc
mov
inc
mov
and
or
imul
pop
aam
stos
mov
notl
test
cmp
inc
imul
fstps
inc
pop
jle
daa
lods
or
xchg
or
add
xor
lret
shll
iret
jle
and
jg
pusha
stos
push
leave
xchg
les
dec
hlt
ror
ret
out
dec
inc
push
fildl
aaa
jp
aad
add
xchg
sti
fsubl
movsb
fcoml
adc
push
and
mov
lret
daa
addb
jne
cld
loop
sbb
lret
fsubr
xor
cmp
js
cltd
and
cmp
add
pop
es
rolb
sub
mov
jmp
pop
and
push
adc
sub
mov
add
dec
psrad
add
mov
jl
lods
lahf
popf
add
arpl
ss
inc
jne
hlt
insb
jno
iret
push
call
inc
pop
inc
fsubrl
mov
cmp
in
pop
sub
and
aas
sub
movsb
in
cwtl
insl
mov
movsb
inc
stos
dec
daa
popa
movb
daa
push
sub
xor
in
xor
call
sbb
inc
mov
mov
adc
addl
xchg
jno
lahf
cs
imul
xor
mov
int3
popa
aad
or
xchg
adc
cmpsl
sub
imul
adc
jns
outsb
lods
inc
fistl
push
inc
aam
mov
ds
scas
and
sbb
ss
adc
negl
lods
add
les
mov
jno
inc
or
nop
dec
into
xchg
inc
dec
and
inc
push
add
mov
or
ja
cmp
out
push
sub
in
loope
mov
push
sub
inc
mov
push
fisubl
sbb
pop
fidivl
push
test
lret
adc
cmp
ficompl
fcomi
popf
in
ret
js
notl
fwait
jbe
fstpt
icebp
aaa
cli
or
sbb
fstpt
and
xor
lods
fstl
movsb
enter
movsl
push
lret
sahf
out
jb
mov
mov
movsb
sub
stos
push
jmp
loopne
dec
mov
pop
jp
ljmp
iret
push
pop
outsb
rcrb
es
inc
fimull
jo
push
push
cltd
mov
movsl
jp
or
push
loop
aas
mov
fnstsw
lret
mov
inc
sub
jmp
push
pusha
sbb
mov
sub
ficoms
in
cmp
inc
daa
mov
jg
or
ja
adc
insb
clc
bound
inc
cli
push
scas
mov
inc
ds
jno
push
sub
pushf
push
jl
popa
int
enter
jns
pop
shll
jno
inc
adc
xor
mov
sub
movsb
test
adc
pop
rcrl
or
fisttps
pop
push
jl
mov
out
fwait
push
mov
jl
or
xchg
sahf
dec
adc
push
addr16
stos
stos
in
sbb
lret
push
xlat
jnp
stos
ret
ss
cmpsl
inc
int
xchg
cmp
or
inc
nop
jle
das
cwtl
xor
push
pushf
clc
bnd
dec
in
stos
aas
mov
dec
dec
addr16
jne
into
jnp
in
jo
xor
in
jo
dec
js
inc
ja
imul
fsts
in
or
iret
and
sub
push
sub
inc
ret
add
push
sub
or
push
and
push
xor
mov
add
dec
mov
add
xor
xor
push
push
sub
inc
sub
call
sub
sub
inc
add
or
and
lea
inc
sub
sub
mov
add
or
push
and
inc
push
and
push
xor
push
push
sub
xor
call
dec
add
mov
add
or
xor
xchg
or
shr
lods
xor
xor
and
sub
mov
dec
mov
mov
jne
add
xor
add
pop
and
add
and
pop
add
and
pop
dec
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
