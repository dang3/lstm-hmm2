dec
and
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
in
add
mov
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
iret
inc
add
mov
add
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
add
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
clc
inc
add
add
add
inc
and
add
add
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
loop
inc
add
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
cmp
inc
add
xor
mov
mov
push
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
add
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
add
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
fld
inc
add
push
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
xlat
call
je
add
or
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
daa
roll
inc
cwtl
shl
mov
add
add
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
inc
add
push
movsb
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
add
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
movzbl
jmp
mov
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
inc
add
adc
test
mov
lds
jno
mov
push
call
pop
jmp
mov
call
push
pop
ret
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
andl
mov
lea
push
pushl
push
call
cmpl
je
mov
leave
ret
mov
test
je
mov
lea
push
pushl
push
call
jmp
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
jne
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
and
push
test
push
push
push
je
mov
mov
mov
xor
cmp
jne
cmpl
je
test
mov
je
mov
mov
call
test
je
mov
test
jne
cmp
jne
push
pushl
push
call
mov
mov
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
xor
cmp
je
mov
cmpb
je
add
cmp
jne
test
jne
pop
pop
mov
pop
ret
push
mov
push
mov
test
je
push
mov
mov
mov
call
test
js
mov
andl
push
mov
lea
call
mov
mov
push
call
test
mov
je
mov
push
call
lea
call
xor
pop
pop
pop
ret
push
mov
and
sub
cmpb
push
push
push
jne
xor
cmp
je
mov
mov
lea
call
mov
cmp
movb
je
cmpb
jne
mov
pushl
mov
mov
mov
lea
mov
mov
call
mov
cmp
jne
lea
push
mov
call
inc
add
mov
mov
call
cmp
jne
incw
lea
push
pushl
call
mov
mov
mov
cmpw
jne
mov
call
decw
lea
call
xor
cmpb
jne
cmp
je
mov
call
cmp
je
cmp
mov
mov
jne
mov
mov
cmp
je
add
mov
incl
incl
mov
mov
mov
call
xor
cmp
je
incl
incw
push
push
pushl
push
mov
call
cmpb
jne
mov
cmpw
jne
mov
call
decw
cmpb
jne
decl
call
cmpb
jne
mov
mov
pushl
xor
call
cmpb
jne
lea
push
call
mov
call
pushl
call
lea
call
cmpb
jne
mov
andl
push
push
push
mov
mov
push
mov
call
cmpb
je
mov
testw
jne
lea
push
lea
mov
movb
movl
movl
mov
mov
call
cmp
je
mov
cmp
je
mov
lea
push
push
push
call
test
jns
movl
mov
mov
push
pushl
push
push
push
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
call
jmp
incl
jmp
push
mov
and
pushl
mov
pushl
mov
push
push
pushl
call
add
pop
ret
pushl
lea
pushl
call
test
jne
xor
ret
pushl
mov
mov
call
test
je
jmp
cmpb
push
je
cmpl
mov
je
incl
incl
push
push
mov
mov
mov
mov
pushl
mov
pushl
call
cmpb
jne
decl
call
pop
ret
xor
cmp
setne
ret
int3
int3
int3
push
push
push
mov
test
je
mov
nop
mov
mov
test
jne
mov
test
jne
pop
pop
xor
pop
ret
mov
test
je
mov
call
test
je
push
mov
mov
call
jmp
mov
call
test
jne
jmp
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
pop
ret
mov
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
ret
push
mov
push
push
push
mov
mov
test
push
mov
je
mov
lea
push
pushl
push
call
test
jne
mov
pop
pop
leave
ret
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
call
add
lea
mov
xor
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
mov
lea
lea
lea
mov
mov
push
lea
lea
push
movl
movl
mov
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
call
mov
test
mov
mov
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
test
jne
test
jne
mov
test
jne
pop
add
jne
cmp
je
mov
mov
push
mov
call
mov
mov
mov
push
push
mov
mov
add
push
lea
movl
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
mov
mov
add
call
test
js
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
cmp
je
mov
cmp
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmp
je
mov
cmp
jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
add
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
add
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
add
dec
clc
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
or
inc
add
adc
add
movl
movb
call
test
js
mov
lea
push
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
inc
add
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
inc
add
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
std
lret
inc
lock
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
and
inc
add
xchg
inc
lock
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
push
mov
push
mov
je
cmpl
jge
mov
mov
push
mov
call
push
push
call
add
test
je
push
push
call
add
test
je
orb
cmpl
movb
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
sub
mov
add
lea
xor
mov
movl
call
lea
push
lea
call
mov
mov
call
lea
mov
call
mov
call
test
js
mov
test
je
mov
add
push
call
add
test
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
mov
movb
call
movb
mov
movb
jmp
push
mov
sub
mov
xor
mov
mov
test
push
push
push
je
xor
cmp
mov
jne
lea
mov
mov
push
lea
push
mov
movl
movl
mov
call
cmpb
jne
mov
call
mov
mov
mov
mov
cmp
je
mov
shr
and
jne
mov
push
mov
lea
mov
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
mov
cmp
je
mov
lea
push
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
add
cmp
je
mov
push
push
call
lea
call
lea
call
incl
mov
cmp
jb
lea
call
lea
call
mov
cmp
je
cmp
je
lea
push
add
push
mov
mov
push
call
test
js
cmp
je
pushl
in
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
add
mov
pushl
xor
push
pushl
lea
push
call
mov
mov
fs
fadds
pop
add
pop
add
add
jb
push
add
mov
add
mov
ja
add
xchg
enter
enter
push
jmp
mov
mov
add
push
jno
mov
add
into
sarl
add
call
in
add
push
push
push
push
lea
push
push
lea
push
push
push
call
fildl
add
lock
xchg
add
jbe
add
xlat
lods
mov
sahf
add
pop
xchg
out
aad
jne
out
filds
sub
pop
popl
push
push
push
push
lea
push
push
push
push
call
pop
lods
add
push
pop
add
jns
arpl
add
xchg
add
fmul
js
add
mov
aam
addb
mov
add
iret
mov
xchg
in
add
rclb
add
add
xchg
add
jmp
add
pop
std
sub
pop
push
push
push
push
push
push
call
jge
add
xchg
ret
out
mov
addl
lods
jo
imul
jmp
movsb
add
popf
roll
pop
push
pop
lods
insb
loop
add
mov
add
add
mov
add
testl
jle
arpl
add
add
int3
pop
add
in
lock
push
push
push
push
push
call
jp
mov
mov
fidivs
mov
lods
loope
add
roll
shll
mov
testb
ljmp
fs
lock
add
roll
pop
push
push
push
push
call
add
add
addb
mov
push
add
lods
add
pop
in
mov
add
add
mov
add
add
pop
gs
imul
xchg
add
pop
fiadds
mov
pusha
add
test
add
xchg
outsl
add
fldl
movsb
add
rolb
add
add
out
outsb
mov
jne
test
push
push
push
push
push
call
hlt
lock
ja
push
ror
sarl
jge
add
ja
cli
push
add
add
add
add
add
out
fldln2
movb
addr16
add
in
sub
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
push
add
stos
cwtl
lock
mov
mov
hlt
in
add
add
add
mov
mov
out
add
stos
testb
arpl
pop
call
push
push
push
lea
push
push
push
push
call
add
lret
nop
leave
xlat
mov
clc
mov
pop
xchg
push
xchg
mov
mov
mov
mov
add
add
add
add
fiaddl
mov
add
add
jb
add
jae
gs
sti
fiadds
ja
add
ret
push
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
stos
add
outsl
lret
leave
push
repnz
add
mov
les
test
add
add
add
lds
xchg
mov
jns
xchg
clc
add
fstps
pop
add
push
add
pop
mov
push
lea
push
push
push
call
jns
add
imul
add
add
add
fcom
add
add
add
movsl
les
cmc
push
mulb
mov
jmp
outsl
add
add
hlt
add
pop
add
add
mov
mov
mov
pop
mov
xchg
add
pop
sub
pop
mov
push
lea
push
push
lea
push
call
mov
mov
pop
add
std
add
xchg
push
add
lret
incb
add
add
sahf
pusha
add
mov
int3
mov
mov
movsb
push
movsb
add
cwtl
add
test
sar
pushf
icebp
cld
fiaddl
pop
xchg
lahf
mov
add
add
mov
in
les
push
sub
pop
add
add
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
add
mov
frstor
add
add
arpl
into
into
lret
lock
add
test
add
mov
insb
fldl
iret
stos
filds
sahf
add
lock
jbe
sub
pop
add
push
push
push
push
push
push
push
call
mov
int
movsb
bound
pop
add
mov
enter
rolb
add
add
loop
add
pop
add
xchg
jmp
add
xlat
add
add
mov
scas
mov
jmp
add
jns
xchg
gs
pop
mov
xor
push
push
sub
lea
push
or
inc
add
add
sub
not
lea
lea
pop
inc
pop
push
lea
push
push
push
push
push
call
test
ror
add
add
jb
mov
call
jmp
movsb
out
rclb
add
add
add
mov
add
out
add
ljmp
add
add
add
mov
mov
add
mov
sub
pop
pushl
call
push
push
push
push
push
push
call
jge
rolb
pop
mov
mov
mov
cwtl
push
add
add
add
add
mov
push
jl
repnz
add
push
add
add
add
mov
ficompl
in
call
mov
movl
push
lea
push
push
push
push
push
push
call
fsts
mov
push
fstps
add
add
add
js
add
jae
add
add
add
popa
lods
pop
add
fisubs
add
popa
mov
mov
add
add
pop
in
mov
lcall
mov
sub
pop
lea
push
lea
push
push
push
push
lea
push
call
add
add
mov
add
xorl
rolb
leave
pop
xchg
mov
mov
mov
imul
push
push
push
push
push
push
call
clc
add
add
xchg
add
fnstcw
int
add
mov
out
add
lods
add
fadds
pop
add
mov
imul
add
jno
icebp
add
pop
add
add
sub
pop
pushl
push
lea
push
call
add
hlt
add
xchg
mov
mov
add
add
out
addb
pop
leave
jmp
rolb
in
add
jmp
call
add
filds
sti
add
in
add
fwait
sub
pop
pushl
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
jmp
add
push
add
add
add
les
add
add
insb
scas
xchg
fnstenv
sahf
add
mov
add
jb
cli
pusha
repnz
jecxz
sub
pop
call
push
push
push
push
push
lea
push
push
push
push
call
add
fwait
push
push
add
mov
add
add
jp
out
bound
movsb
add
jae
out
add
add
jge
test
mov
add
add
arpl
add
stos
xchg
into
stc
add
pop
mov
add
add
add
mov
not
sub
pop
pushl
push
push
push
push
push
push
push
push
call
add
arpl
stos
aad
add
add
testb
xchg
mov
mov
add
addr16
lret
lahf
data16
faddl
lahf
add
sub
pop
pushl
push
lea
push
call
insb
add
add
pusha
push
fsts
lahf
add
add
xlat
add
test
iret
add
mov
fldl
clc
arpl
add
mov
mov
push
clc
cltd
add
mov
add
sti
push
into
add
mov
add
add
mov
add
push
push
lea
add
shl
push
xor
add
not
dec
inc
xor
sub
inc
inc
pop
shr
pop
push
push
push
lea
push
push
push
push
call
add
xchg
call
add
add
mov
mov
fcoml
in
xchg
add
push
cmpsb
pop
xchg
add
cld
mov
pop
out
xchg
roll
xlat
add
xchg
mov
sub
pop
pushl
call
push
lea
push
lea
push
push
push
push
call
imul
add
incb
add
fadds
mov
add
add
jno
out
jae
mov
jle
ret
push
mov
mov
in
call
push
push
push
inc
add
push
sub
add
sub
sub
ror
ror
rol
shr
pop
rol
sub
add
xor
pop
push
push
push
push
push
push
call
loopne
add
add
in
out
add
cld
scas
cmpsb
push
mov
ljmp
shl
aad
ret
pop
add
jmp
add
jbe
movsl
sub
pop
push
push
push
push
push
push
push
call
add
xchg
jmp
test
add
out
add
mov
xchg
repnz
add
mov
add
push
jae
add
add
neg
fwait
testb
add
add
rclb
sbb
fnstsw
push
std
fldl
cmp
das
add
add
fnstenv
add
add
add
add
lds
mov
scas
mov
adcb
lret
mov
in
lock
lcall
clc
push
push
push
call
add
call
add
pop
push
call
jne
lret
add
add
add
push
jns
sti
add
add
mov
movsl
add
in
frstor
add
mov
cmc
pop
mov
pop
jl
fmul
clc
mov
int
mov
pop
push
push
push
push
lea
push
call
mov
incb
add
testl
mov
fstpl
add
add
mov
add
lock
mov
push
push
push
lea
push
push
push
call
add
stc
pop
jmp
add
hlt
rcr
icebp
push
icebp
shll
add
int
push
pusha
test
jns
jae
sti
movsl
add
mov
icebp
add
les
out
add
mov
add
enter
mov
aad
std
add
add
jb
add
jmp
add
jl
sub
pop
add
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
repnz
add
add
add
arpl
movsb
jo
add
insb
add
add
jo
add
je
add
out
jb
add
mov
bound
push
add
xlat
fadds
mov
lcall
ret
add
add
add
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
roll
add
pop
insb
add
mov
add
jnp
mov
xchg
fcoms
lods
add
mov
add
sub
pop
mov
push
push
push
push
push
push
push
call
test
add
add
add
push
add
add
roll
cltd
add
add
int3
xchg
add
jmp
int
add
xchg
add
scas
lret
jl
add
filds
ljmp
add
stos
add
sub
pop
xor
push
push
push
push
push
push
call
mov
add
ja
movb
mov
add
int
add
add
add
hlt
mov
add
loop
xchg
cltd
jo
jns
loop
add
adcl
jp
mov
add
lods
pusha
mov
ja
out
lea
add
add
sub
pop
add
push
lea
push
push
push
lea
push
push
push
push
push
call
hlt
cwtd
mov
mov
add
ficoms
add
jbe
add
mov
cltd
mov
gs
jo
jae
add
add
add
pop
stc
jle
add
add
rcl
icebp
addl
add
jb
add
fdivr
lcall
jne
push
lea
push
push
push
call
add
fwait
add
add
push
mov
loope
push
add
jns
mov
add
les
add
add
push
xchg
in
push
add
add
push
add
movsb
add
mov
ja
js
in
add
add
add
add
lock
lcall
mov
xor
push
push
push
lea
push
call
scas
cmc
add
shr
mov
ljmp
stos
add
repnz
jbe
ja
cmc
add
in
std
xchg
jecxz
addl
add
add
lcall
lock
push
push
push
lea
push
push
push
push
push
push
push
call
testb
out
ljmp
add
add
stos
loopne
std
je
xchg
popa
mov
jno
add
rolb
add
add
add
cmpl
jle
jo
add
loope
popa
add
push
add
faddl
add
cmpsb
lock
shr
push
fiadds
dec
add
cmp
push
push
push
push
lea
push
push
lea
push
call
mov
jle
stos
xchg
lret
jle
out
lea
mov
pop
pusha
idivl
fiaddl
push
lahf
add
add
mov
addl
add
test
add
mov
lcall
or
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
rolb
test
jecxz
testl
add
xchg
lret
add
sahf
imul
add
cld
add
leave
stos
sub
pop
add
push
push
push
push
call
xchg
push
lahf
mov
mov
cli
add
fisubl
hlt
in
add
add
jmp
addl
icebp
popf
shll
add
in
xchg
repnz
sub
pop
push
push
push
push
push
push
push
push
call
pop
add
pop
add
fiadds
mov
xchg
mov
jo
les
mov
negl
pop
movsl
push
shrl
inc
or
or
mov
cmp
imul
push
push
push
push
push
call
pop
jmp
add
mov
int
xchg
insb
movsl
stc
add
popa
jo
js
cltd
imul
outsl
add
add
shll
add
mov
add
testb
xchg
add
add
out
add
add
sub
pop
xor
push
lea
push
push
push
call
imul
add
add
add
mov
add
mov
add
push
jne
out
sarl
add
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
loop
jge
push
arpl
cmpsb
iret
fiaddl
pop
push
add
mov
pop
jae
flds
xchg
jo
cld
push
add
enter
xorps
lea
push
push
push
push
lea
push
call
add
mov
add
xlat
add
imul
add
mov
call
scas
add
add
pop
sbb
add
mov
mov
mov
add
arpl
add
loop
lock
push
add
pop
mov
mov
xchg
arpl
push
sub
pop
pop
rep
push
push
push
push
push
push
push
push
push
call
repnz
cltd
mov
imul
add
cmpsb
loope
add
add
rcrb
shl
add
mov
add
xor
fadds
jns
jp
add
int
push
testb
pop
lds
add
mov
call
fdivr
lcall
push
push
call
into
add
cwtl
clc
jl
pusha
add
fs
pop
push
in
push
push
out
jmp
clc
mov
add
add
add
add
cbtw
add
mov
pusha
fnstenv
clc
lcall
pop
hlt
push
push
push
push
push
lea
push
lea
push
push
push
call
mov
lahf
add
mov
sar
xchg
hlt
ret
add
flds
add
rcl
into
add
mov
add
mov
ljmp
add
push
add
add
popa
lods
add
lea
out
add
out
add
jns
pop
add
pop
in
push
lea
push
push
push
call
in
add
fildl
movsb
sahf
test
add
add
je
aad
lcall
add
lahf
mov
into
js
mov
pop
add
push
push
push
lea
push
push
lea
push
call
arpl
add
filds
xchg
add
lea
int3
add
mov
add
lds
add
add
add
leave
fldl
pop
roll
out
add
add
test
add
lods
lahf
mov
add
call
add
push
lea
push
push
push
push
push
call
out
mov
test
fs
add
mov
xlat
add
add
add
je
add
bound
add
jae
add
push
add
xchg
sub
pop
mov
xor
push
push
push
push
push
push
push
lea
push
call
mov
jmp
add
fwait
mov
cwtl
fwait
add
add
add
in
push
add
mov
mov
rcll
ljmp
movb
fwait
out
add
add
push
pop
push
lahf
add
add
jns
add
ja
pop
push
add
mov
out
test
xchg
jecxz
roll
sub
pop
mov
xor
push
lea
push
push
push
push
push
push
push
lea
push
push
call
pop
lret
jo
add
add
cmpsb
fadd
jbe
xchg
add
stos
add
clc
jo
les
xlat
add
popa
sarb
in
fcomps
dec
sub
mov
push
push
lea
push
push
push
lea
push
push
push
call
mov
add
add
pop
andb
jge
pop
mov
cltd
add
mov
mov
add
add
jo
add
add
mov
add
mov
cli
push
lret
aam
fiaddl
fincstp
aam
add
fdivr
lcall
ret
jg
push
jne
xor
jnp
push
lea
push
call
jne
add
add
add
fcmove
xchg
add
jle
ficompl
pusha
add
add
xchg
add
add
lcall
rcll
inc
sub
pop
lcall
call
sahf
add
add
je
pop
fiadds
loopne
call
mov
movsl
push
add
add
push
mov
in
in
lcall
fsubrs
into
mov
push
sub
push
push
pop
add
sub
sub
shl
add
sub
xor
sub
pop
rol
rol
sub
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
stos
jecxz
xchg
bnd
add
push
stc
add
add
jecxz
add
imul
loopne
lret
data16
add
add
add
add
sahf
add
add
add
fdivr
lcall
jne
push
push
push
call
sbb
in
lea
jno
sar
faddl
imul
lahf
add
aam
mov
adcb
add
push
out
add
sub
pop
call
push
push
lea
push
push
call
cwtl
xchg
add
mov
add
in
add
orl
out
mov
add
add
add
jne
add
rolb
sub
pop
push
push
push
push
sub
add
add
add
sub
add
pop
ror
pop
push
rol
sub
pop
push
push
inc
add
pop
push
push
lea
push
lea
push
call
mov
shll
add
xchg
pusha
ja
rolb
add
addl
pop
add
mov
add
add
incb
add
add
add
push
add
add
mov
add
cmc
out
jle
add
add
sub
pop
call
push
push
call
add
add
leave
xchg
addr16
test
add
mov
lods
add
int3
add
out
add
add
rolb
add
test
pop
add
lcall
clc
push
push
shr
pop
push
push
ror
lea
pop
mov
push
push
push
push
lea
push
push
push
call
std
rcl
add
jae
add
add
in
add
test
add
add
add
add
cmc
add
add
lcall
add
aam
sub
pop
add
push
push
push
push
call
xchg
insb
in
movsb
pop
xchg
pusha
popf
mov
mov
add
jmp
add
add
add
ljmp
pop
add
push
shr
lea
shr
pop
add
push
pop
mov
xor
push
sub
pop
add
push
add
pop
push
push
push
call
add
add
lods
jne
add
add
add
push
add
not
mov
fwait
add
xchg
testb
aam
add
add
add
add
test
add
lahf
mov
cmc
add
shl
bound
lcall
inc
adc
cmp
std
jecxz
es
lea
push
push
lea
push
push
call
jo
add
add
mov
in
mov
add
shl
out
loopne
mov
pop
iret
xchg
jle
cltd
clc
arpl
pop
add
mov
jns
into
push
pop
add
lret
add
add
add
in
in
xor
push
lea
push
push
push
call
movsb
mov
cmc
insb
test
fadds
pop
add
add
fcoml
xchg
imulb
add
add
push
in
add
mov
xchg
addr16
mov
lret
sar
iret
add
mov
out
cmpsb
add
les
push
push
push
push
push
push
push
call
jbe
loop
add
jl
mov
add
addb
add
add
add
cwtl
add
add
mov
lock
add
not
pop
pop
mov
push
push
push
push
push
push
push
call
add
test
loope
mov
add
xchg
mov
add
test
mov
push
shlb
add
mov
push
andl
scas
push
mov
in
popf
xchg
cli
mov
popa
add
add
add
sub
pop
xor
push
push
push
push
push
call
popl
sarb
add
xchg
mov
lods
push
pop
sarl
in
add
add
add
loop
fidivrl
add
push
leave
cwtl
add
add
mov
idiv
pop
mov
xchg
popf
mov
add
lahf
add
add
addl
nop
insb
enter
je
sub
pop
add
push
sub
pop
rep
mov
xor
push
not
pop
or
je
push
sub
ror
pop
mov
push
push
lea
push
push
push
push
call
fildl
fcmove
movl
ja
lods
add
add
fldl
addb
jmp
add
add
add
mov
fcmovu
push
jle
pop
push
cwtl
add
add
mov
shr
sub
pop
xor
push
lea
push
call
add
add
jo
stc
mov
add
pop
add
jge
imul
out
nop
mov
mov
cld
fstl
add
sarl
add
add
push
test
popa
pop
add
imul
les
not
pop
mov
xor
push
push
push
push
call
mov
mov
cltd
clc
mov
jne
test
ljmp
jns
pop
mov
ror
lods
add
pop
add
add
mov
mov
les
push
add
in
push
add
lcall
jp
mov
in
lock
add
push
push
push
push
push
push
lea
push
push
call
jp
add
pop
stos
add
add
add
add
filds
popf
xchg
pusha
add
out
add
add
push
roll
mov
mov
add
fwait
mov
xchg
cld
jecxz
jbe
add
jle
jne
cld
call
push
stos
add
add
add
add
mov
insb
mov
mov
in
loopne
add
push
add
shr
pop
push
push
push
lea
push
push
push
call
xchg
add
jns
add
int3
repnz
add
add
add
mov
stos
add
rolb
stos
mov
pop
lea
add
add
popa
push
outsl
mov
add
add
add
add
test
hlt
int
icebp
in
bnd
leave
add
neg
jns
add
lcall
inc
or
or
push
lea
push
lea
push
lea
push
push
push
push
push
call
jb
roll
add
add
push
xchg
test
std
add
add
pop
mov
add
stc
add
mov
into
flds
sub
pop
xor
push
push
push
push
push
push
push
lea
push
call
add
jo
mov
fildl
add
cli
add
xchg
flds
add
mov
loope
shr
mov
mov
int3
add
gs
stos
out
cwtl
adcb
test
add
loopne
add
push
lea
push
push
lea
push
push
call
mov
xchg
sub
pop
lret
insb
mov
add
jecxz
scas
pop
flds
mov
gs
add
mov
shll
add
add
jp
ja
leave
add
ja
leave
add
add
cmc
sahf
jbe
stos
add
into
add
add
clc
pop
xchg
add
add
in
in
lcall
lock
push
push
push
lea
push
push
call
jne
add
test
js
lea
jns
add
add
notb
arpl
cltd
pusha
aam
xchg
add
add
add
add
roll
lret
clc
jnp
in
xchg
add
fs
cmpsl
cmpsb
rcr
add
rcl
push
add
pushf
js
addr16
xchg
lcall
movsb
push
ror
pop
mov
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
fildl
test
sti
pop
add
loop
addb
jb
add
lods
add
lcall
roll
int3
stc
push
cmpsb
iret
fwait
add
add
add
add
lret
jb
add
call
fcomps
or
push
push
call
imul
push
add
out
add
andb
push
loop
fmul
pop
add
mov
movsl
nop
out
mov
add
ret
fs
xchg
add
insb
xchg
enter
add
insb
add
mov
add
add
add
mov
push
add
push
add
push
sub
pop
add
push
add
pop
or
je
push
push
push
push
push
push
push
push
call
std
mov
insb
rolb
jle
add
sti
mov
lock
cmpsb
insb
mov
add
fildl
push
add
outsl
pop
mov
adcb
in
hlt
push
mov
ljmp
sahf
add
xchg
jne
leave
sub
pop
mov
push
push
lea
push
push
push
call
add
lock
jae
mov
call
add
add
mov
pop
jl
push
add
add
pop
add
popa
test
int3
test
mov
iret
lahf
jmp
fldcw
push
add
push
xchg
bound
jo
add
jae
add
fs
mov
sub
pop
add
push
xor
pop
add
rep
push
shl
add
shl
pop
pop
push
push
xor
not
xor
rol
push
and
add
sub
xor
sub
shr
add
add
sub
pop
dec
pop
push
shl
ror
sub
pop
pop
push
push
lea
push
push
push
push
call
add
add
pop
mov
test
in
fstpt
ffree
add
mov
add
add
stos
out
add
add
pushf
arpl
add
add
mov
js
add
fldl
add
jne
push
push
push
push
push
push
push
push
push
call
add
push
add
fnstsw
pop
lahf
add
add
addb
dec
xchg
lahf
in
outsl
push
add
loopne
mov
jno
shlb
add
sub
pop
mov
push
push
lea
push
push
lea
push
call
sahf
mov
mov
movsw
add
jp
lock
add
movb
add
mov
in
add
out
add
in
in
lcall
inc
and
jmp
push
dec
lea
rol
pop
push
mov
push
lea
push
push
push
push
push
push
push
call
add
push
xchg
jo
repnz
sar
add
add
fiadds
rcrb
add
cmpsb
mov
gs
stc
add
cmc
mov
mov
xchg
push
sub
pop
add
push
not
shr
sub
pop
push
push
push
ror
ror
pop
push
push
rol
not
lea
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
add
add
leave
leave
jns
mov
add
mov
add
testb
add
ret
add
add
je
test
outsl
mov
push
add
jge
xchg
jl
mov
add
mov
cmc
push
add
in
loopne
mov
push
push
lea
push
call
imul
iret
lahf
add
lods
pop
add
add
mov
std
add
add
mov
add
outsl
les
test
in
hlt
lcall
push
lea
push
push
push
push
push
lea
push
push
push
call
in
testl
add
add
add
mov
xchg
add
mov
add
add
add
incb
stc
xchg
testl
push
fldl
xchg
sti
stc
add
pop
add
lret
add
add
cltd
add
add
roll
sub
pop
pop
push
add
shr
lea
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
push
nop
mov
push
in
add
loopne
xchg
jge
movsb
shlb
int3
add
pop
mov
mov
add
add
pop
aad
ljmp
mov
repnz
add
ljmp
imul
lcall
push
shl
shl
pop
leave
push
add
pop
ret
push
push
push
push
lea
push
push
push
push
call
add
add
sahf
ficompl
add
stos
imul
je
mov
add
add
rolb
add
lahf
ret
lahf
movsl
mov
lcall
in
push
pop
add
push
dec
pop
push
push
push
shl
add
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
gs
shl
repnz
push
vmovdqu
add
jl
push
add
add
add
outsl
xchg
lahf
mov
fiadds
out
mov
add
add
insb
add
in
pop
mov
add
add
add
out
fiaddl
push
loope
loop
sub
pop
movl
addl
push
lea
push
call
mov
roll
lahf
add
add
lods
xchg
fs
add
add
add
into
add
fcoml
mov
mov
mov
lret
fldl
stos
mov
add
add
out
testb
mov
hlt
sub
pop
test
je
push
push
push
push
call
mov
add
add
outsl
mov
add
add
jmp
add
add
cltd
arpl
add
jle
idivl
add
cmpl
add
add
add
lcall
inc
or
mov
xchg
mov
push
push
push
lea
push
push
lea
push
lea
push
call
fmul
out
stos
xchg
out
add
push
add
add
loope
cld
in
out
add
mov
add
add
add
jo
pop
add
add
lods
add
xchg
add
les
lcall
push
lea
push
push
push
lea
push
lea
push
push
call
jns
out
sar
add
jno
push
xchg
lock
fldcw
ljmp
mov
add
test
mov
add
jns
lcall
xchg
lea
jb
arpl
movl
into
mov
add
pusha
add
mov
sub
pop
pop
push
sub
sub
pop
pop
push
push
call
add
push
jnp
push
test
fs
add
jne
nop
pop
add
add
mov
test
pop
sahf
pop
add
add
jnp
jge
add
add
add
lock
ja
jne
loope
mov
test
add
lcall
leave
push
push
push
push
lea
push
push
call
push
add
add
add
mov
jecxz
into
add
mov
pop
subl
mov
add
add
pop
out
stos
jae
add
add
push
pop
test
add
mov
mov
jecxz
addl
mov
pop
fwait
lock
mov
enter
mov
add
push
push
push
push
lea
push
push
push
call
add
cli
rolb
add
scas
add
mov
mov
add
jp
lock
movsb
shlb
je
cld
add
push
add
add
lcall
in
add
push
add
not
rol
pop
push
push
push
call
mov
add
add
int
add
lret
out
js
add
add
add
lods
add
add
add
out
icebp
add
add
add
mov
jae
jo
mov
mov
jbe
jle
in
clc
lcall
push
pop
push
push
pop
push
testl
push
pop
addl
push
shl
dec
pop
push
call
push
push
call
ja
xchg
add
xorl
push
add
test
movl
in
scas
mov
mov
jmp
in
add
add
add
inc
cld
pushl
push
lea
push
call
add
add
stos
mov
mov
push
add
mov
std
add
mov
add
lret
add
in
aad
mov
movl
lods
push
ja
add
lds
lcall
call
sub
sub
not
pop
push
call
push
push
lea
push
lea
push
push
lea
push
call
jo
jp
add
popf
add
add
add
loop
js
fsubp
mov
add
je
imul
mov
jecxz
add
lea
lcall
jge
add
test
lcall
sub
pop
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
testb
sti
addb
cltd
cmpsb
scas
add
test
xchg
jnp
mov
pop
push
andb
test
into
mov
jle
push
add
xchg
add
nop
pop
pop
cmpsb
add
std
mov
pop
mov
add
mov
mov
pop
pop
push
sub
shr
not
shl
pop
leave
ret
push
rol
inc
add
pop
push
push
dec
pop
mov
push
push
push
push
call
shrb
test
add
add
add
mov
mov
pop
pop
add
cwtl
add
jb
mov
stc
push
push
stos
pop
insb
fcomp
sbbl
cld
push
not
lea
pop
push
push
dec
pop
push
push
shl
pop
push
push
shl
pop
push
push
add
rol
pop
movl
push
push
push
push
push
push
call
stos
movb
add
div
push
icebp
add
add
scas
mov
add
add
add
pushf
add
outsl
add
add
int
add
pop
nop
movl
jnp
jb
add
add
pop
push
call
arpl
mov
push
stos
lret
mov
mov
add
add
jbe
add
add
add
out
cltd
scas
add
test
jne
add
xlat
mov
pop
add
adcl
sar
add
movsl
clc
ljmp
push
lea
push
push
push
push
push
push
push
lea
push
call
repnz
incb
push
add
mulb
add
add
push
xchg
push
mov
add
into
repnz
add
push
add
mov
add
add
xchg
push
add
rolb
imul
incb
cmpsl
fwait
push
jge
add
add
addr16
add
test
jo
add
iret
add
lcall
sti
call
cmc
sub
rol
ror
pop
subl
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
fsubr
add
xorl
add
xchg
add
add
popa
rclb
pushf
rcll
add
mov
loop
popf
not
jp
add
mov
add
sub
pop
cmpl
jne
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
movsl
lods
jmp
sbbb
js
add
aam
add
testl
add
add
jnp
mov
mov
call
add
mov
jge
clc
add
jnp
test
mov
pop
pop
push
pop
pop
push
inc
sub
pop
pop
pop
push
push
push
push
push
push
call
shll
mov
add
fisubl
add
add
mov
cmpsb
add
mov
xchg
add
fsubp
add
add
out
add
movsl
mov
cltd
fcoms
mov
clc
push
mov
pushf
mov
test
add
out
jge
push
stos
add
lahf
add
lahf
add
lcall
flds
lcall
push
push
push
push
call
jb
xchg
insb
jae
cmpsb
in
movsl
imul
add
mov
mov
filds
int3
pop
add
add
add
pop
jmp
fimull
add
add
out
test
sub
pop
ret
push
push
push
push
push
push
push
push
push
push
call
xchg
stos
add
cmpsb
jae
lock
mov
add
loope
out
add
add
add
add
nop
jmp
in
fcompl
in
add
push
push
push
call
data16
test
jbe
add
jne
ljmp
add
cld
add
jecxz
std
out
add
out
movsl
add
add
add
mov
add
mov
mov
add
mov
lahf
in
test
add
cmpsl
popf
add
call
hlt
lcall
push
not
pop
push
push
ror
add
sub
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
add
lods
test
add
mov
les
jmp
sahf
add
add
add
ljmp
cmpsb
in
bound
mov
push
repnz
add
jno
add
add
cld
jb
jmp
add
add
push
push
sub
shr
push
xor
add
add
ror
xor
sub
inc
add
pop
xor
ror
pop
push
not
not
pop
pushl
call
push
push
push
push
push
push
push
push
lea
push
call
jl
add
push
pushf
mov
add
pop
fwait
ljmp
imul
cmc
movsb
add
push
push
add
in
fdivr
lcall
shrb
sbb
stc
push
ror
not
push
sub
add
not
inc
sub
pop
rol
ror
lea
pop
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
scas
test
add
add
mov
add
cltd
add
mov
add
gs
add
push
pusha
add
add
push
add
add
xchg
sar
out
add
call
push
add
xchg
mov
lods
add
jne
push
add
lcall
fcomps
jne
call
push
pop
call
push
push
ror
push
xor
add
lea
sub
lea
shr
inc
pop
sub
dec
inc
pop
push
rol
shr
pop
pushl
push
shl
inc
rol
ror
pop
call
push
shl
rol
add
pop
call
push
push
sub
sub
sub
push
and
add
sub
sub
inc
pop
pop
push
xor
dec
pop
pushl
push
sub
dec
add
dec
pop
call
push
dec
pop
call
push
push
rol
push
or
not
add
xor
sub
add
sub
sub
shl
sub
lea
pop
sub
sub
xor
pop
push
ror
xor
lea
pop
pushl
push
xor
dec
pop
call
push
add
xor
pop
call
push
push
xor
push
xor
add
shl
sub
sub
add
shr
add
add
pop
add
pop
push
inc
ror
xor
pop
pushl
push
push
call
push
xchg
cld
add
mov
add
arpl
add
shr
add
jne
jmp
add
lcall
cltd
cmp
add
call
push
push
shl
inc
push
push
pop
add
shl
sub
not
dec
sub
sub
pop
dec
sub
ror
lea
pop
push
rol
dec
not
pop
pushl
push
shl
shr
xor
pop
call
call
push
push
lea
shr
add
push
xor
add
lea
not
sub
inc
inc
pop
ror
inc
lea
pop
push
lea
add
pop
pushl
push
lea
push
call
movsb
push
pop
add
shl
mov
add
hlt
mov
add
add
lahf
add
lods
mov
add
std
add
jge
jo
fcmovbe
add
xchg
je
add
add
mov
sti
addr16
pop
add
stos
hlt
push
xchg
add
jmp
add
mov
sub
pop
call
call
push
pop
mov
push
push
push
push
push
call
filds
pop
test
icebp
pop
add
add
in
add
add
add
push
push
mov
add
mov
add
out
add
test
in
ja
cld
sub
pop
lea
push
push
push
push
push
call
test
ja
movsl
add
add
mov
mov
add
lock
mov
shrb
lcall
call
jge
scas
jns
push
push
push
push
call
mov
popa
add
mov
mov
call
in
add
jmp
enter
mov
ljmp
mov
jmp
lods
hlt
add
mov
mov
add
loopne
lcall
add
lret
pop
shr
push
sub
pop
add
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
mov
popa
cmpb
std
adc
add
insb
cmp
shr
add
fxch
ljmp
add
push
xchg
pop
mov
add
add
pop
add
add
add
in
add
loopne
bound
iret
jno
cmpsb
pop
std
int
lea
add
mov
fistpl
pop
mov
push
push
push
call
pop
nop
add
mov
repnz
xchg
add
lret
xorl
scas
add
fildl
push
aad
in
push
mov
add
add
stc
test
add
shlb
jle
add
andb
js
xchg
mov
aaa
push
push
push
push
push
lea
push
call
add
faddl
sbbl
add
into
test
add
add
add
cmpsb
add
add
mov
push
add
xchg
jae
in
pusha
mov
add
add
mov
jne
notl
add
out
sub
pop
add
add
push
add
rol
pop
mov
mov
push
shr
shl
pop
cmp
jne
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
test
lret
xchg
add
stos
pop
pop
stc
cld
int
mov
add
bnd
cmc
add
jno
lods
sub
pop
cmp
jne
mov
push
dec
dec
shl
xor
pop
movl
push
push
push
push
lea
push
push
push
call
mov
imul
sti
add
cmpsb
mov
add
aad
mov
movsl
xchg
pop
lods
add
mov
add
add
add
pop
xchg
add
push
jo
mov
add
xchg
iret
add
add
mov
filds
sub
pop
jmp
mov
push
lea
push
lea
push
call
roll
add
pop
add
add
imul
add
jne
add
add
in
out
iret
push
jmp
cwtl
out
pop
rcrl
lret
add
mov
int3
in
add
xchg
mov
gs
rcll
incb
mov
sub
pop
mov
sub
jne
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
add
add
cli
add
push
pop
add
push
jae
ja
enter
movb
add
add
sbb
std
add
in
fcompl
inc
adc
add
add
push
sub
pop
jmp
push
ror
not
pop
mov
push
dec
ror
shr
rol
pop
mov
cmp
jne
push
lea
push
push
push
lea
push
call
add
add
pop
add
mov
add
mov
mov
iret
add
add
add
add
add
add
in
in
lcall
inc
adc
pop
movl
push
push
push
push
call
imul
fdivl
add
add
jno
add
jb
mov
add
mov
aam
mov
pop
shll
mov
int3
add
repnz
je
stos
mov
lret
mov
mov
add
add
gs
pop
jmp
push
push
push
push
push
push
call
add
mov
add
push
imul
je
testb
fiaddl
mov
pop
scas
ret
mov
mov
loope
jmp
add
int3
add
mov
stos
add
fildl
roll
out
test
in
fsubl
push
xchg
add
lcall
inc
cld
cmpw
jne
push
lea
push
lea
push
call
mov
scas
mov
fwait
add
add
into
add
movsl
pop
add
subb
ret
pop
mov
mov
add
in
mov
add
sub
pop
mov
push
inc
sub
pop
movl
jmp
push
sub
pop
pushl
push
ror
pop
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
add
imul
add
push
push
add
add
add
add
add
add
mov
roll
add
icebp
cltd
add
call
add
jecxz
add
cmc
jne
out
jae
lods
jecxz
iret
sub
pop
mov
push
push
call
add
add
add
stos
add
add
lods
faddl
add
add
jle
out
sahf
add
addb
les
add
add
jns
add
mov
add
cmpsb
jb
pushf
add
pop
pop
add
fadds
cld
add
add
stc
add
add
lcall
push
or
pop
push
inc
push
dec
dec
push
or
inc
add
shl
add
sub
xor
lea
not
pop
ror
sub
pop
push
sub
pop
push
call
push
push
call
add
shl
add
xchg
xchg
add
cmpsl
xchg
imul
mov
cmpsb
add
lahf
aad
pop
push
icebp
add
add
fldl
hlt
add
test
add
add
add
add
lcall
js
int3
fldz
ret
es
add
push
push
dec
rol
push
xor
add
sub
sub
pop
rol
add
sub
pop
push
rol
sub
dec
pop
push
push
inc
pop
call
cmpl
je
push
push
sub
add
push
push
pop
add
lea
shr
not
dec
sub
inc
dec
rol
pop
pop
push
xor
pop
push
push
shr
not
rol
pop
call
push
pop
cmpl
je
push
push
lea
dec
dec
push
push
pop
add
ror
sub
lea
not
inc
pop
add
dec
pop
push
push
lea
push
call
add
push
push
sahf
out
mov
cltd
rcl
cmpsl
add
popf
mov
xchg
movsb
cmpsl
pop
aam
add
popf
fnstsw
filds
add
out
xchg
xlat
add
add
xchg
push
fiaddl
jle
movl
add
jp
add
add
cltd
add
repnz
add
aam
in
hlt
lcall
push
sub
pop
call
push
ror
sub
pop
cmpl
je
push
push
ror
not
add
sub
push
or
not
add
sub
inc
ror
rol
sub
xor
xor
shr
pop
shr
pop
push
add
pop
push
push
sub
add
inc
lea
pop
call
push
push
push
push
call
jae
add
icebp
movsl
add
test
add
add
lret
scas
jp
icebp
add
pop
imul
add
xchg
sub
pop
cmpl
je
push
push
dec
dec
push
sub
add
add
add
sub
shr
pop
sub
rol
add
pop
push
add
shl
xor
pop
push
push
push
push
push
push
call
cli
mov
fdiv
xorl
add
add
add
mov
mov
mov
mov
popa
hlt
add
loopne
push
in
in
lcall
imul
ret
int3
je
push
push
add
lea
add
push
and
add
shr
add
rol
sub
dec
pop
ror
xor
pop
push
not
not
pop
push
push
push
push
push
push
push
push
lea
push
call
add
pop
add
out
add
add
in
cwtl
lock
add
xchg
movsl
add
cmpsl
add
xchg
add
add
pusha
rcrl
add
lcall
lret
das
add
push
push
push
call
jb
add
add
xchg
add
pushf
push
lahf
gs
jp
add
arpl
sar
xchg
add
xchg
adcl
je
add
rolb
jecxz
into
add
int
add
add
add
out
mov
cld
push
jbe
out
sub
pop
cmpl
je
push
push
xor
ror
shl
push
or
not
add
shl
sub
sub
shl
shr
pop
rol
pop
push
pop
push
push
push
lea
push
push
push
push
push
push
push
lea
push
call
outsl
mov
jo
add
pop
push
imul
xchg
push
add
cli
lock
mov
add
sub
pop
call
cmpl
je
push
push
xor
inc
push
push
pop
add
shr
add
sub
sub
dec
pop
ror
lea
sub
shl
pop
push
xor
add
ror
pop
push
call
push
sub
sub
pop
cmpl
je
push
push
shr
ror
shl
push
push
pop
add
shr
xor
xor
sub
ror
shr
shr
pop
inc
pop
push
push
call
add
add
pop
add
add
pop
hlt
jecxz
add
add
subl
nop
addr16
add
add
jae
add
add
pop
lahf
lods
jecxz
add
sub
pop
push
call
push
lea
push
lea
push
call
add
imul
test
add
js
shr
loopne
sti
add
add
add
jnp
incb
ret
mov
sub
pop
cmpl
je
push
push
rol
push
push
pop
add
ror
not
sub
shr
dec
pop
sub
pop
push
push
call
scas
enter
add
add
mov
jae
mov
loope
add
push
in
ficoml
lret
data16
je
jb
add
add
test
lcall
add
fiaddl
add
add
repnz
add
add
mov
add
movb
test
cwtl
mov
pop
push
call
push
pop
cmpl
je
push
push
xor
lea
sub
push
push
pop
add
add
ror
rol
sub
inc
pop
shr
lea
inc
pop
push
push
push
push
push
call
xchg
fnstsw
aad
pop
mov
cmc
mov
lods
jns
add
jae
cmpsl
out
movl
add
test
mov
add
lea
add
lcall
call
push
rol
add
pop
cmpl
je
push
push
rol
lea
push
sub
add
dec
lea
shr
sub
sub
sub
dec
pop
not
shr
not
pop
push
lea
shr
dec
dec
pop
push
push
add
pop
call
push
push
lea
push
push
call
roll
mov
loope
sahf
add
data16
outsl
bound
jmp
add
xchg
loopne
jne
push
add
add
shll
push
in
add
add
add
mull
pop
push
shl
test
lret
fiaddl
jmp
add
mov
add
cltd
lcall
lods
add
add
sub
pop
cmpl
jne
mov
push
push
push
push
push
call
scas
iret
jo
mov
add
mov
imul
nop
jns
mov
add
pop
aad
ror
std
mov
in
in
pop
movl
push
push
push
push
push
call
mov
add
jle
xchg
fimull
xchg
add
iret
add
add
mov
popf
in
add
add
test
add
testb
faddl
pop
pop
add
jo
add
out
jecxz
jno
rcll
std
out
add
stos
xchg
jb
test
add
in
inc
add
adcl
pop
jmp
push
rol
dec
sub
pop
xor
pop
push
push
lea
push
push
push
lea
push
call
add
aam
push
mov
add
add
cli
add
add
add
mov
add
in
into
jl
add
pusha
lret
xchg
cmc
add
lods
cmpsb
sahf
add
add
add
mov
jle
sarl
add
fmul
add
outsl
rolb
jle
movsb
add
out
add
mov
mov
fcomps
sub
pop
pop
push
inc
pop
pop
push
xor
pop
pop
leave
push
add
pop
ret
push
push
lea
ror
pop
mov
push
push
push
push
push
lea
push
lea
push
call
push
add
sar
add
add
movsl
jle
add
fwait
mov
add
stos
data16
push
jl
xchg
add
add
jne
lcall
add
add
pop
add
lahf
push
add
fldl
out
enter
imul
add
jno
roll
pop
add
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
jle
pop
lret
adcb
mov
jmp
test
cmpb
faddl
add
add
add
repnz
fcomps
les
pop
add
add
sub
pop
cmpl
jne
push
push
sub
add
inc
push
sub
add
not
sub
sub
pop
add
add
pop
push
push
lea
push
call
ret
test
xchg
pop
in
add
out
mov
add
pop
add
mov
add
add
jae
jns
pop
aad
nop
add
add
add
ljmp
in
ret
test
les
out
addr16
sub
pop
pushl
call
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
cltd
add
test
jle
add
sar
push
fcoms
add
add
add
jne
xchg
les
xchg
add
add
rcll
add
jmp
add
jge
mov
in
int3
add
in
fcompl
call
call
push
push
push
push
push
push
push
call
loope
in
add
add
pop
or
lods
scas
xchg
add
add
loop
jne
stc
mov
clc
in
push
push
clc
add
in
nop
add
lcall
pop
sbb
add
movb
sub
add
pop
cmpl
jne
push
add
pop
mov
call
push
inc
add
pop
ret
jmp
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
ret
cwtl
jno
add
add
jb
jne
roll
leave
add
jp
add
push
cli
mov
mov
in
add
mov
add
push
add
cmpsl
hlt
pop
lret
fldt
hlt
add
add
lret
pop
add
mov
add
add
sub
pop
cmpl
jne
push
push
sub
push
xor
add
ror
sub
rol
ror
ror
shr
pop
sub
ror
add
shl
pop
push
shl
shl
pop
pushl
push
push
lea
push
push
push
call
stos
mov
imul
add
add
add
negb
xchg
mov
add
lods
clc
in
addl
mov
add
add
add
jge
aam
lods
add
add
flds
popa
aad
add
xchg
mov
mov
xchg
mov
lcall
mov
shlb
in
in
lcall
jne
add
push
rol
xor
pop
push
push
not
rol
sub
add
pop
call
push
lea
push
lea
push
call
mov
add
add
mov
add
add
js
nop
add
jl
xchg
addl
mov
add
add
add
popa
iret
add
addb
add
jne
push
jmp
add
add
loop
xlat
fxch
in
fwait
gs
jecxz
in
hlt
lcall
add
add
push
push
push
push
push
lea
push
push
push
push
call
shll
in
add
add
bnd
add
jmp
add
leave
add
add
ja
add
mov
fistl
xchg
push
int
jbe
pop
out
add
hlt
add
add
fadds
add
hlt
add
fbstp
add
jecxz
sub
pop
cmpl
je
cmpl
jne
push
push
push
push
push
push
lea
push
push
push
call
cmpsl
add
add
mov
in
jbe
fsubr
je
out
push
pop
movb
loope
movsl
js
fldl
repnz
add
test
lds
popa
cld
add
lahf
add
jmp
add
stos
add
add
lcall
add
add
push
shr
add
shr
add
pop
mov
push
add
pop
push
push
push
push
push
lea
push
lea
push
push
call
add
xorl
jmp
push
push
stos
stos
fwait
enter
pop
imul
xchg
add
add
jmp
add
lcall
xor
aad
outsl
lods
push
shl
sub
push
xor
add
shr
sub
lea
sub
pop
rol
add
pop
push
push
push
call
add
pop
nop
clc
imul
insb
xchg
add
loope
mov
jp
neg
cli
add
test
fcoml
xchg
add
add
pop
add
cld
add
cmc
into
popa
add
push
stc
add
hlt
pop
pushl
push
lea
push
push
push
push
push
push
push
push
call
xchg
roll
jle
add
add
bound
gs
add
add
mov
add
hlt
mov
rolb
add
push
hlt
ja
add
js
xchg
leave
add
lret
mov
add
jne
into
push
push
jbe
cmc
sahf
fldcw
push
in
push
sarb
call
call
push
push
inc
push
xor
add
sub
add
not
rol
pop
add
sub
pop
push
ror
pop
pushl
call
push
dec
pop
call
push
push
sub
lea
push
push
pop
add
lea
shr
sub
xor
pop
rol
shl
shl
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
add
cmc
jl
add
push
stc
jp
xchg
enter
add
add
fildl
lcall
add
mov
jmp
loopne
lcall
jne
call
push
push
push
call
aam
jb
clc
pop
mov
push
add
add
hlt
jae
add
mov
add
add
jp
rcrl
hlt
add
in
mov
popl
lcall
shrb
lret
push
dec
push
sub
sub
not
push
and
add
shr
sub
inc
sub
pop
dec
add
lea
pop
push
pop
pushl
push
push
lea
push
push
call
mov
add
in
add
push
into
mov
mov
pusha
add
mov
cmpsb
outsl
jne
add
scas
add
jecxz
add
filds
lcall
mov
lea
shl
pop
call
push
push
push
xor
add
rol
sub
rol
rol
pop
rol
shl
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
sahf
add
add
addb
lea
fsubl
jno
add
lcall
pop
fsubr
ficomps
fcomps
jne
push
pop
call
call
push
push
sub
push
and
add
rol
add
sub
dec
sub
lea
not
xor
pop
add
pop
push
pop
pushl
push
push
lea
push
lea
push
push
push
lea
push
call
cltd
addb
shr
popf
jge
push
add
add
out
add
icebp
add
add
cli
pop
add
jo
jnp
loop
lahf
insb
add
add
add
add
addb
add
jne
test
lcall
pop
call
push
push
lea
push
push
push
push
push
call
loopne
cli
ljmp
stc
cmpsb
add
add
popf
add
nop
shlb
push
in
mov
add
push
add
mov
adc
add
pop
add
shll
mov
add
popa
mov
add
xchg
add
fs
pop
pop
xchg
pop
push
call
push
push
shr
push
push
pop
add
not
sub
add
sub
sub
not
pop
rol
shl
pop
push
rol
add
pop
pushl
push
push
push
call
fisubs
std
mov
add
test
sahf
mov
xchg
movsl
bound
fldt
fyl2xp1
add
add
add
add
add
cltd
lods
cmc
add
xchg
add
mov
cwtl
add
xchg
lea
pop
call
push
push
lea
push
call
adc
add
add
push
add
add
add
push
mov
lahf
add
add
xchg
std
add
lahf
jmp
mov
push
loop
sar
add
add
faddl
mov
repnz
repnz
add
jecxz
add
pop
pop
arpl
add
add
add
mov
jae
mov
pop
call
push
push
add
lea
lea
push
sub
add
add
sub
shl
add
pop
add
add
add
pop
push
push
lea
push
push
push
push
lea
push
push
call
mull
jnp
scas
mov
add
add
add
out
add
xchg
into
xchg
in
push
xchg
data16
add
aad
jo
add
test
cmpb
in
add
add
add
add
xchg
lahf
sub
pop
pushl
push
xor
xor
pop
call
push
rol
pop
call
push
push
shr
push
sub
add
lea
sub
add
pop
xor
sub
sub
pop
push
push
push
push
push
push
push
lea
push
call
mov
mov
mov
stc
add
xchg
add
mov
addb
add
xchg
add
leave
xchg
add
pop
jnp
sub
pop
pushl
call
push
push
push
push
lea
push
call
add
bnd
ja
add
mov
add
add
add
add
add
std
add
add
jbe
add
push
int
lret
jmp
add
sub
pop
call
push
push
shl
push
sub
add
lea
sub
inc
sub
dec
pop
lea
pop
push
add
rol
add
shl
pop
pushl
call
push
not
sub
xor
sub
pop
lea
push
push
lea
push
push
lea
push
call
add
add
rcrl
add
add
leave
add
in
loop
mov
popf
cmpsb
bound
pop
push
in
int
les
push
shrl
add
add
jnp
add
mov
add
loope
mov
jnp
mov
add
repnz
pop
add
lcall
push
add
sub
ror
shr
pop
call
push
push
xor
push
or
not
add
sub
rol
not
sub
add
not
pop
sub
pop
push
push
push
call
add
into
pop
add
mov
add
add
int
add
pop
ror
add
add
mov
out
add
mov
add
dec
add
jne
push
inc
shl
xor
pop
call
call
push
push
shr
sub
push
and
add
not
inc
add
sub
sub
inc
lea
pop
add
ror
sub
pop
push
lea
not
rol
ror
pop
pushl
call
push
lea
shl
pop
call
push
push
not
not
push
or
not
add
rol
sub
ror
pop
inc
shl
inc
inc
pop
push
not
not
lea
pop
pushl
push
push
lea
push
push
call
lahf
xchg
movsb
add
pop
pop
xchg
add
add
jno
add
fiadds
add
jle
add
int3
lret
scas
mov
pushf
lock
add
sub
cmc
add
xchg
roll
push
add
addr16
add
sahf
pop
stc
add
add
add
add
shrb
sub
pop
call
call
push
push
dec
add
ror
push
and
add
add
shr
lea
sub
not
dec
xor
shr
pop
inc
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
pop
add
out
push
push
add
xchg
add
add
add
xchg
add
jns
stc
add
add
xchg
fisubrl
add
add
add
add
mov
add
add
fcompl
jne
call
push
push
dec
add
not
push
sub
add
shr
sub
ror
shr
pop
sub
xor
pop
push
push
sub
add
push
sub
add
ror
xor
ror
sub
shl
dec
lea
pop
inc
rol
pop
push
add
not
not
pop
call
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
add
mov
stos
pop
cmc
mov
mov
add
xchg
add
stc
nop
test
add
add
push
in
add
pop
add
push
pop
add
out
lahf
pop
xchg
pusha
add
arpl
mov
push
jge
fdivs
add
lahf
mov
mov
cld
add
xlat
lock
xorb
in
fdivr
lcall
jne
call
push
xor
pop
mov
push
push
push
call
push
imul
push
pop
mov
mov
js
push
jecxz
add
scas
call
fistl
lods
add
fcmovu
mov
call
iret
add
addr16
lods
ret
movsb
push
mov
lcall
add
fcoms
add
enter
add
pop
xchg
popa
lcall
into
loop
sub
pop
int
push
rol
pop
lea
push
push
sub
sub
sub
shl
push
xor
add
add
lea
sub
sub
not
ror
sub
pop
add
sub
pop
push
push
push
push
lea
push
lea
push
push
push
call
add
ja
pop
call
in
add
add
stos
add
xchg
jno
gs
pop
mov
ficompl
add
push
add
mov
add
add
loop
clc
add
add
mov
fisubl
add
add
ror
mov
mov
iret
stc
imul
data16
sub
pop
pushl
push
pop
call
push
add
sub
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
jns
add
add
pushf
out
add
call
mov
mov
repnz
cmpsl
jno
add
pop
add
mov
in
fcompl
shrb
sahf
in
push
push
shr
not
xor
push
or
inc
add
not
lea
sub
add
pop
lea
shr
rol
pop
push
inc
ror
pop
pushl
call
push
lea
push
push
push
push
lea
push
lea
push
call
add
stc
add
add
test
gs
add
add
push
cltd
mov
sar
cli
clc
movsl
pushf
add
out
cmpsl
mov
mov
add
push
fcmovnb
lds
pop
std
add
fisubl
add
add
pop
mov
add
pop
sub
pop
call
push
ror
pop
mov
lea
push
push
dec
ror
push
xor
add
inc
sub
shr
xor
xor
pop
add
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
mov
add
mov
shrb
call
add
add
pushf
add
rolb
lcall
jne
push
push
push
call
jge
jne
jns
fiaddl
insb
add
add
add
mov
arpl
xchg
mov
add
add
add
add
pop
enter
add
cmpsb
xchg
add
jge
mov
mov
ret
rolb
jecxz
push
xor
fiadds
lcall
sbb
inc
inc
pop
lea
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
add
faddl
and
mov
fildl
add
mov
fcompl
add
add
add
lret
xchg
cmc
fiaddl
add
std
add
add
mov
bnd
lcall
lods
sahf
fnstenv
lret
in
call
sub
pop
push
push
shl
pop
push
push
inc
pop
pushl
push
push
xor
push
or
inc
add
shr
sub
sub
not
dec
pop
shl
sub
shr
xor
pop
push
xor
sub
pop
push
call
push
push
not
push
and
add
shr
sub
xor
add
pop
lea
not
xor
ror
pop
push
lea
push
lea
push
push
push
call
stos
add
mov
lods
ja
nop
out
push
jno
add
add
fsubr
add
cltd
lahf
mov
xchg
add
add
lods
icebp
add
add
scas
cli
add
lcall
jne
call
push
push
push
push
push
push
push
push
call
add
pop
add
jecxz
add
stos
add
add
xchg
fs
int3
add
mov
rcrl
add
add
add
pop
into
mov
bound
add
push
call
push
push
shl
push
or
inc
add
lea
sub
add
add
pop
inc
not
inc
pop
push
push
push
lea
push
push
push
call
stos
pop
add
add
jp
xchg
push
movsb
js
xchg
cli
add
add
pop
jp
fimuls
ficoms
fildll
mov
mov
js
frstor
xchg
sub
pop
pushl
push
push
push
push
push
push
push
push
call
mov
add
xchg
xchg
add
add
scas
pop
add
fcoms
add
cli
xchg
add
jae
js
in
add
scas
adc
add
shl
add
pop
call
push
lea
push
push
push
lea
push
push
push
lea
push
call
scas
fnstsw
mov
mov
scas
xchg
enter
add
add
push
mov
fldt
clc
cmpb
jp
cltd
sti
test
in
imul
add
add
jbe
pop
movl
sahf
add
fildl
lock
sub
pop
pushl
push
push
lea
push
push
push
call
js
shl
add
addr16
add
cltd
mov
xchg
xchg
fadds
add
add
push
loop
add
push
cltd
sahf
mov
add
js
add
shll
add
add
add
sub
pop
mov
push
rol
pop
jmp
push
push
inc
sub
push
and
add
shr
inc
sub
sub
pop
sub
shr
pop
push
add
add
ror
xor
pop
pushl
push
lea
push
call
add
add
sti
add
jmp
mov
cmpsl
addl
add
mov
xchg
add
mov
jp
xchg
imul
lods
lahf
mov
in
mov
mov
sub
pop
call
push
push
push
push
lea
push
push
push
call
add
add
add
std
mov
pop
std
add
mov
add
mov
pop
mov
add
pushf
add
mov
lret
lds
add
add
leave
iret
add
loope
add
mov
aad
add
lods
incb
in
add
outsl
mov
pusha
add
jge
cmpsb
sub
pop
call
push
push
add
lea
push
or
not
add
dec
xor
lea
sub
sub
pop
dec
not
pop
push
sub
pop
pushl
call
push
dec
pop
push
push
sub
pop
call
leave
push
push
push
push
push
push
call
roll
enter
icebp
add
add
hlt
jl
testb
movsb
add
add
add
pop
fiaddl
add
in
call
add
push
push
call
jno
filds
jp
add
shl
test
scas
pop
cli
jno
add
roll
add
cmpsl
gs
iret
add
add
xchg
fldl
pop
add
in
mov
add
push
icebp
addr16
mov
add
int
add
aam
add
jb
in
add
lcall
push
rol
rol
pop
pop
push
xor
lea
sub
pop
pop
xor
push
push
push
push
call
pop
push
je
fcmove
add
jne
out
jne
rcl
mov
jge
cmp
leave
add
xchg
add
add
add
add
add
pop
inc
push
rol
ror
pop
ret
push
lea
push
lea
push
push
call
jmp
add
push
mov
out
mov
add
add
xchg
out
add
add
add
add
mul
aam
add
lcall
add
roll
add
mov
mov
shll
in
lock
leave
push
xor
pop
ret
push
push
push
push
push
push
call
jns
mov
pop
shrb
add
jb
add
add
leave
movb
mov
flds
mov
lods
xchg
xchg
movsb
sub
pop
mov
push
add
pop
cmpl
jne
push
push
push
call
into
mov
add
add
enter
out
add
push
add
iret
movsb
imul
jle
pop
movsb
mov
add
cmpsl
add
mov
je
lret
add
into
in
add
add
add
add
mov
xchg
add
jge
xchg
lcall
cmpsl
add
in
rolb
in
in
hlt
pop
mov
push
push
push
lea
push
push
call
mov
gs
add
ja
add
cwtl
pushf
push
les
in
data16
add
loop
cltd
push
mov
add
into
add
add
add
fst
add
nop
testl
cmpl
fsubrs
cmc
jne
fldl
mov
testb
in
in
pop
jmp
push
add
pop
mov
push
dec
pop
and
xor
push
lea
push
push
lea
push
push
push
push
push
push
push
call
into
mov
neg
outsl
pusha
cmc
push
push
rolb
add
jno
mov
in
rcl
mov
xchg
icebp
fwait
call
add
movsl
jl
clc
add
mov
mov
mov
xchg
mov
lahf
add
push
ret
sub
pop
xor
push
lea
push
push
push
push
call
add
popf
add
in
movb
mov
jbe
out
movsb
faddl
mov
mov
add
pop
testb
filds
add
add
add
enter
mov
outsl
mul
sub
pop
add
push
push
lea
push
push
push
push
push
push
call
jnp
add
ja
mov
add
push
add
stc
add
fwait
loopne
mov
add
add
repnz
mov
add
fucom
js
push
add
aad
pop
push
add
popa
in
sti
add
roll
lcall
dec
decl
ror
pop
sub
push
push
push
push
call
add
cwtl
push
test
add
jo
int3
add
cld
add
add
mov
add
jmp
push
push
push
push
lea
push
push
push
push
lea
push
push
call
arpl
xchg
jno
rclb
add
ja
mov
add
jno
ror
sarb
arpl
add
fwait
add
aam
shr
mov
test
cmpsl
add
xchg
fwait
add
addl
pushf
add
scas
add
movsl
enter
sub
pop
sub
push
shr
not
inc
pop
pushl
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
std
addr16
add
add
add
jbe
add
jae
add
popf
add
add
std
je
in
fdivr
lcall
jmp
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
push
mov
scas
add
add
rcll
test
mov
cmc
mov
xorb
ljmp
add
test
sub
pop
cmp
jne
push
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
insb
sarl
xchg
mov
add
add
hlt
jle
push
xlat
pop
jmp
cmpsb
cltd
ljmp
mov
add
arpl
in
mov
add
orb
add
cmc
add
jno
cld
add
lcall
enter
push
lea
ror
pop
sub
mov
push
push
lea
push
push
call
hlt
sti
jmp
push
add
jo
add
lock
fildl
int
mov
cli
shl
push
xor
add
add
jmp
shl
add
inc
sub
pop
sub
push
xor
ror
ror
sub
pop
pushl
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
add
out
data16
jecxz
push
add
in
loopne
xchg
mov
out
add
out
add
push
out
sahf
loopne
add
shll
add
test
add
add
mov
push
scas
mov
add
add
flds
add
int3
push
add
add
add
jmp
mov
fistps
mov
call
add
call
add
push
js
add
shr
add
in
add
popf
stos
je
nop
mov
jns
add
sub
pop
and
sub
push
inc
pop
cmp
jne
leave
push
rol
pop
ret
push
push
push
push
push
push
push
push
call
mov
imul
arpl
push
mov
pushf
mov
add
add
add
scas
add
rolb
add
in
push
push
call
popf
add
add
add
xlat
add
add
mul
jo
add
jp
out
jecxz
add
movsb
movsl
add
push
scas
xchg
scas
aad
je
mov
fldl2t
loop
jae
ja
lcall
loop
mov
mov
addl
xchg
rolb
cmc
add
xchg
sub
pop
add
push
push
call
scas
add
xchg
les
xchg
lret
push
push
les
push
push
sti
jnp
add
add
lcall
add
mov
add
push
jge
pop
loope
push
pusha
push
in
pop
addb
js
iret
add
lcall
push
lea
push
push
lea
push
lea
push
lea
push
call
add
push
mov
add
add
add
add
add
add
mov
ljmp
add
add
add
add
mov
shrl
js
pop
test
out
add
lcall
push
shl
inc
add
pop
push
push
push
sub
pop
push
push
lea
push
push
push
push
push
push
call
xchg
push
add
aam
pop
add
add
add
xchg
xchg
pushf
add
add
mov
sarb
je
xorb
add
cmp
loope
add
push
add
fildl
clc
add
lcall
pop
or
je
pushf
push
call
lock
divb
int3
rolb
mov
mov
add
mov
out
int3
add
add
add
add
in
clc
lcall
push
cmp
xor
not
pop
sub
push
shl
shl
pop
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
add
je
imul
add
jp
pop
add
add
mov
movsl
loopne
mov
add
add
aad
jne
mov
add
push
jnp
add
loope
add
add
cmpsl
test
add
mov
add
add
add
add
ljmp
add
add
add
add
int
gs
add
add
add
add
add
add
mov
in
fwait
test
sub
pop
add
mov
push
shr
sub
pop
add
push
sub
add
add
pop
mov
push
add
ror
sub
not
pop
add
push
push
push
lea
push
push
call
out
add
add
in
in
mov
in
xchg
push
out
push
cwtl
jns
xchg
add
out
lock
imul
add
jb
mov
xlat
push
add
add
push
add
xchg
add
add
cmpsb
add
add
ljmp
popa
add
jo
shl
sub
pop
xor
mov
push
push
push
lea
push
push
lea
push
call
add
movb
add
jecxz
add
in
add
xchg
pop
add
pusha
add
cmc
fnsave
add
add
nop
lcall
call
lcall
loopne
push
ror
shl
sub
sub
pop
rol
rol
push
push
push
lea
push
push
push
push
push
push
push
call
hlt
fwait
stos
fsubr
arpl
add
add
fiaddl
add
add
pop
add
fcmove
push
add
jl
movl
add
stc
pop
aad
add
push
pop
add
out
loope
add
mov
sub
pop
xor
inc
push
push
push
push
push
push
push
call
lods
out
arpl
mov
outsl
pop
enter
add
add
jne
jl
pop
pop
mov
add
movsb
lea
pop
std
push
xchg
xlat
incb
add
add
lret
icebp
filds
imul
add
push
add
pop
xchg
push
jle
add
mov
imul
sub
pop
cmpb
jne
push
inc
sub
pop
add
push
push
push
push
lea
push
call
add
lahf
mov
add
fiaddl
add
insb
add
xchg
add
xchg
add
add
add
xchg
les
out
movb
add
fwait
mov
cld
mov
hlt
jnp
add
add
sub
pop
cmp
je
push
add
add
shr
inc
pop
add
cmpl
jne
push
push
push
push
call
fsubl
int
add
pop
movsb
cwtl
lds
add
mov
add
fidivs
add
push
gs
fst
add
add
mov
fndisi(8087
shlb
add
add
cltd
add
add
add
add
fiadds
lcall
rclb
ret
dec
dec
lea
push
push
lea
push
push
call
loopne
fucompp
enter
test
add
add
sti
cmpsl
loop
add
ret
jmp
push
nop
jecxz
pop
mov
add
add
fiadds
std
add
add
js
mov
add
lods
mov
add
add
pop
push
int
mov
add
lcall
pop
push
sub
add
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
call
add
loope
add
cltd
add
add
add
xchg
add
leave
enter
loopne
mov
add
jecxz
xchg
add
add
ja
fcompp
shlb
in
in
pop
pop
push
push
lea
push
push
lea
push
push
call
gs
out
les
test
xchg
fimull
jnp
aam
add
add
lock
add
add
test
push
icebp
movsb
mov
sbbl
mov
push
add
lcall
push
ror
sub
lea
ror
pop
ret
push
push
call
mov
mov
add
xchg
in
fiadds
data16
xlat
out
fs
mov
lcall
data16
mov
add
lahf
andl
xchg
add
mov
popa
sub
pop
mov
push
ror
pop
add
push
lea
push
push
push
call
leave
xchg
add
loop
ja
addb
add
mov
in
insb
add
add
stc
add
add
mov
add
scas
add
mov
movsb
add
add
pop
add
add
cld
add
push
add
add
dec
lea
push
push
push
lea
push
lea
push
call
cmpsl
add
add
xchg
mov
add
mov
mov
add
hlt
mov
pop
push
jge
ljmp
mov
out
add
in
sub
pop
push
mull
push
dec
pop
pop
push
ror
pop
call
push
xor
add
ror
pop
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
add
add
add
add
lahf
add
mov
add
popa
mov
jns
imul
add
loopne
lcall
pusha
icebp
jmp
rclb
std
clc
pop
fs
pop
pop
push
push
push
push
push
push
call
scas
loopne
nop
cltd
add
pop
ret
roll
int3
add
in
add
enter
push
ja
add
popf
call
pop
mov
push
lea
add
cmc
imul
in
add
lcall
push
dec
add
inc
sub
pop
pop
pop
push
push
lea
push
call
loop
loopne
fs
jnp
add
stc
shlb
jae
add
add
testb
pop
xchg
add
insb
add
les
xchg
mov
add
ror
jae
aad
ljmp
pop
out
jae
popl
movsl
lret
add
fadds
jns
lea
add
gs
jle
mov
sub
pop
leave
ret
push
push
lea
push
push
call
jge
xchg
add
mov
les
je
add
test
je
shrl
mov
add
nop
add
lcall
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
jb
fwait
add
in
add
push
add
pop
cmc
add
in
mov
add
add
testl
loope
fisubs
pusha
mov
add
add
in
fcomps
in
push
push
push
push
push
lea
push
push
push
push
call
nop
jge
leave
sahf
movsb
les
jns
mov
movsb
jne
fadds
jge
add
add
addb
cli
add
sub
pop
add
push
push
add
sub
rol
pop
push
push
push
pop
push
push
push
push
call
fmull
add
add
fldl
add
in
mov
addl
add
add
add
loopne
enter
addb
movsl
pop
fistpll
add
lock
in
js
add
lds
mov
add
mov
add
add
lcall
pop
or
mov
and
add
fmulp
bound
add
cli
lahf
mov
mov
add
add
add
mov
xchg
sub
pop
push
push
push
push
lea
push
push
lea
push
call
jecxz
add
add
add
shlb
mov
std
int
iret
add
add
out
movsl
ret
call
pop
lea
push
push
call
add
add
jno
pop
enter
std
call
add
mov
jmp
mov
mov
in
scas
add
add
add
add
cmpsl
add
imul
mov
sub
push
push
push
push
push
push
call
add
add
add
mov
add
enter
loopne
testb
fidivrl
jno
add
sti
jns
faddl
add
mov
add
rolb
pusha
sahf
jge
push
xchg
jle
add
shll
add
mov
mov
push
lea
push
push
push
lea
push
push
push
push
call
add
imul
arpl
mov
add
add
movb
lods
add
data16
push
mov
jne
jno
icebp
orb
add
jno
mov
push
add
rolb
add
fwait
add
leave
add
lcall
ljmp
add
pop
mov
push
push
push
push
push
push
push
lea
push
call
add
add
add
mov
movl
stos
add
mov
pop
add
push
leave
out
add
aam
lock
push
add
add
std
add
lcall
fcos
jae
push
lea
push
push
push
call
add
call
mov
test
add
xorl
add
mov
add
add
repnz
fldl
xlat
lods
sub
pop
popl
push
push
call
xchg
andl
add
add
lahf
add
hlt
insb
mov
in
icebp
cmc
pop
add
nop
xchg
jp
stos
add
mov
add
js
fstl
fwait
add
out
aam
cmc
sub
pop
mov
push
shl
pop
add
xor
push
push
push
lea
push
call
int
rorb
jmp
sti
fldl
add
push
cmpsl
add
xchg
add
add
xlat
lods
int3
fwait
add
pop
add
mov
add
add
add
xchg
mov
in
lock
lea
push
push
push
lea
push
push
push
push
lea
push
call
push
push
add
add
in
add
mov
mov
xchg
js
mov
scas
pop
enter
loope
stc
add
cmpsb
shr
jnp
mov
mov
arpl
add
aad
xchg
add
in
add
loope
sub
pop
mov
push
inc
pop
add
push
rol
add
rol
pop
xor
rol
push
push
push
push
call
add
lds
lea
rolb
lcall
add
jl
add
imul
add
add
jns
les
xchg
popl
shl
fcompl
pop
xchg
popa
jno
add
into
lcall
jae
add
shl
addl
test
add
add
mov
mov
lods
roll
push
push
push
lea
push
call
jae
mov
lcall
scas
mov
add
add
add
add
lahf
add
sub
pop
nop
xor
push
shl
pop
nop
push
push
call
add
add
add
add
add
add
mov
fldenv
jns
jl
addl
mov
mov
add
in
clc
pop
nop
inc
push
push
lea
push
push
push
push
push
push
call
add
push
add
push
bound
pop
mov
fiadds
jbe
mov
add
mov
add
lods
add
pop
add
movsb
pop
xchg
push
add
cmc
add
icebp
mov
into
add
stc
jle
shlb
pop
test
mov
lea
into
pusha
mov
pop
jo
test
fs
sub
pop
nop
push
not
add
pop
nop
cmpb
jne
push
ror
rol
pop
add
push
lea
push
push
push
push
push
lea
push
push
push
call
ficompl
lods
add
lahf
stos
add
push
add
add
add
push
rclb
std
add
add
add
loop
add
add
lcall
push
lea
push
push
push
lea
push
call
xchg
mov
icebp
xchg
add
push
pop
add
mov
stos
stos
je
add
test
add
lock
add
sub
pop
nop
push
ror
pop
cmp
je
nop
push
push
lea
push
push
lea
push
push
call
in
cwtl
add
stos
test
int
into
xchg
add
push
add
sti
mov
outsl
stos
add
addb
mov
aad
add
add
test
mov
data16
add
pop
popa
mov
xchg
add
mov
jmp
stos
cmpsb
loop
loope
mov
sti
add
add
test
xchg
xchg
add
push
sub
pop
nop
push
push
push
lea
push
call
add
add
cmpsb
mov
mov
mov
jbe
loopne
call
add
divl
push
add
mov
jae
in
jmp
cmpsb
xchg
imul
pop
mov
andb
mov
jns
sub
pop
inc
push
push
push
push
lea
push
push
push
push
push
push
call
add
jmp
mov
add
in
sar
movsl
in
add
jno
in
add
fnstcw
mov
add
data16
divl
add
addr16
hlt
mov
repnz
nop
nop
push
push
push
push
call
iret
sahf
jns
add
jle
in
mov
mov
lret
movsb
lock
add
add
jb
mov
data16
add
sahf
add
add
add
in
lock
lcall
jne
jb
push
add
dec
add
lea
pop
xor
push
push
push
call
subl
mov
add
xchg
pop
cld
jbe
mov
add
xchg
fcompl
add
les
push
add
add
mov
add
add
pushf
add
cld
xchg
add
lcall
lds
add
push
push
push
push
push
push
lea
push
call
add
xchg
sbb
add
cmpsl
test
push
mov
add
add
subl
push
add
mov
pop
test
mov
add
push
not
pop
movzwl
push
lea
pop
mov
push
not
sub
pop
add
push
not
shr
xor
pop
mov
push
shl
dec
sub
pop
xor
xor
push
shl
ror
dec
pop
shl
push
shl
add
sub
pop
xor
shl
push
push
push
push
push
call
add
add
jo
pushf
arpl
push
sti
cld
test
loop
add
add
int3
add
add
mov
add
xchg
fcoml
add
add
std
add
lock
xlat
add
stos
loop
jno
rolb
add
sub
pop
xor
push
push
push
push
push
push
push
lea
push
call
jo
pop
mov
jge
mov
lret
in
fdivr
add
xchg
add
out
test
jmp
xlat
add
cwtl
stos
lock
in
mov
add
jnp
orl
add
add
add
into
jmp
lock
add
add
add
mov
lcall
loope
push
lea
push
push
lea
push
lea
push
push
push
call
fwait
add
lods
sti
add
popa
lahf
pop
add
out
jne
push
add
out
add
xchg
data16
add
loopne
mov
add
sti
add
stos
mov
xchg
nop
int3
sub
pop
xor
push
push
push
push
push
push
push
push
push
push
call
addl
aam
add
test
out
add
add
lock
mov
popf
mov
data16
loopne
push
add
pop
loopne
in
add
int
add
add
xchg
mov
in
fcomps
rcll
sbb
add
push
push
push
push
push
call
shrl
out
popf
add
add
test
jno
add
addr16
loop
jge
pop
pop
add
add
scas
mov
add
js
ja
jbe
add
mov
add
push
lea
push
push
lea
push
push
push
call
mov
mov
mov
mov
add
add
add
lahf
add
cld
push
sarl
pop
push
push
push
push
call
add
hlt
cmpsl
cltd
jae
js
pushf
in
xchg
test
addl
shrb
add
data16
xchg
xchg
add
iret
ja
fiadds
xchg
xlat
jp
add
add
add
push
arpl
lock
lcall
push
push
push
push
push
push
lea
push
lea
push
push
call
movl
popa
xchg
add
add
cltd
mov
fwait
mov
loopne
add
add
add
add
add
pop
add
jae
xchg
add
add
lea
add
add
add
add
in
push
popa
add
lcall
leave
push
lea
pop
ret
push
push
push
push
call
mov
sahf
gs
add
add
add
cmc
add
rcrb
lds
push
mov
lea
add
add
add
cmc
test
lcall
stos
lock
add
outsl
sub
pop
mov
push
push
push
push
push
lea
push
push
push
call
jo
filds
mov
mov
fsubl
icebp
sti
fadds
sahf
add
lea
xchg
jae
add
add
jb
movsb
insb
hlt
add
clc
add
xchg
lds
add
shrb
loop
pop
sub
pop
push
push
push
push
push
push
push
push
push
push
call
cmpl
cmc
subl
add
data16
hlt
mov
loop
imul
add
mov
add
lret
add
push
leave
lods
xchg
mov
in
fdivr
lcall
push
push
pop
push
mov
push
add
pop
mov
push
sub
xor
pop
mov
push
push
push
lea
push
push
push
call
jae
sti
add
add
add
repnz
scas
add
xchg
popa
negl
jns
add
cld
mov
add
ret
add
les
repnz
mov
jnp
mov
mov
mov
add
add
add
divl
in
call
test
add
mov
push
pop
test
je
mov
push
not
rol
pop
mov
push
push
call
add
out
ljmp
mov
push
pop
jecxz
enter
pop
add
add
fwait
xchg
jle
add
add
add
loopne
mov
mov
add
mov
in
clc
lcall
pop
push
push
push
lea
push
call
pop
lock
push
cmpsb
call
popl
lcall
lahf
add
hlt
in
add
movsb
add
arpl
mov
xchg
jge
jp
pop
add
add
add
in
add
lcall
cmp
je
push
push
lea
push
push
push
push
push
push
call
rclb
add
test
jae
add
add
push
add
test
mov
aam
add
test
aam
in
jne
jp
int
jae
pop
loope
hlt
mov
mov
add
add
add
ljmp
jno
int3
faddl
test
pop
test
je
push
rol
ror
add
pop
mov
inc
push
push
call
enter
outsl
mov
cltd
loop
add
jl
mov
jge
mov
movb
lcall
add
jbe
push
add
addr16
bound
add
mov
sar
add
add
popa
pop
popf
pop
pop
rcr
js
in
mov
enter
clc
lcall
rorb
test
add
add
call
out
sub
pop
xor
push
push
call
js
add
push
ret
add
loop
xlat
add
mov
les
xchg
popa
shr
add
push
add
jo
roll
add
mov
mov
scas
adcb
sti
add
add
sub
pop
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
xchg
filds
add
int3
call
xchg
filds
add
movl
fld1
mov
sub
pop
pop
pop
push
push
lea
push
call
add
incb
bound
add
add
fcmovne
jnp
xlat
lret
lret
ret
roll
add
movsb
add
aam
add
fmulp
in
add
xchg
nop
mov
add
sahf
pop
add
add
std
jl
popa
add
lods
repnz
sahf
add
add
ror
pop
loopne
add
xchg
add
lcall
push
push
push
push
lea
push
push
push
push
call
shl
add
add
imulb
add
imul
add
add
add
stos
add
cmpsb
add
mov
xchg
pop
scas
add
add
scas
mov
cmc
clc
add
lret
ljmp
lcall
push
push
push
push
call
cmpsl
popf
jne
add
mov
call
add
icebp
add
lds
mov
imulb
jns
jmp
iret
pop
push
cli
add
add
lcall
or
mov
push
shl
pop
inc
push
inc
inc
sub
pop
cmp
jne
push
push
lea
push
call
leave
push
add
stc
fadds
lcall
add
insb
mov
add
jns
cld
add
add
mov
pushf
add
mov
push
cli
je
add
movsb
add
pushf
xorl
add
add
in
hlt
lcall
jle
push
pop
mov
push
push
call
aam
add
add
mov
int3
out
lcall
scas
add
sahf
add
mov
xchg
add
vpsraw
rolb
int
add
add
test
mov
mov
lods
cld
stc
addr16
pop
test
je
push
add
sub
pop
mov
push
inc
inc
inc
pop
add
cmp
jne
push
pop
mov
test
je
push
push
push
push
push
lea
push
push
push
push
push
call
add
imul
jle
movsl
xchg
addb
add
add
jmp
add
lahf
shl
fcmovne
enter
add
add
add
in
out
gs
test
mov
cli
jne
add
add
push
in
in
fdivr
lcall
incw
in
push
call
in
mov
add
add
jmp
cli
stos
jns
je
hlt
add
testb
ljmp
test
mov
mov
add
add
add
sub
pop
cmp
je
jmp
push
push
push
call
pop
add
mov
mov
cmpsl
test
add
add
int
pop
push
mov
mov
test
add
add
cmc
sub
pop
xor
push
add
rol
pop
pop
pop
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
add
push
test
aad
insb
fs
mov
push
ja
in
add
roll
add
repnz
enter
xchg
fwait
add
rolb
mov
add
add
in
mov
mov
sub
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
fdivs
fisttps
mov
mov
mov
in
push
add
fists
fstpl
test
add
jecxz
add
add
mov
add
add
jmp
add
bound
in
fdivr
lcall
push
push
lea
push
lea
push
push
call
pusha
add
add
out
std
add
add
add
pop
push
mov
mov
icebp
mov
add
flds
add
add
add
jno
add
add
add
xchg
cwtl
add
sub
pop
leave
push
push
lea
push
push
push
push
lea
push
push
push
call
test
add
xchg
add
lock
stc
add
push
imul
out
add
gs
xchg
into
jo
enter
lahf
js
call
pop
jmp
add
or
push
lea
push
push
push
push
push
push
push
call
push
add
add
fcomps
add
mov
add
add
add
mov
call
add
mov
stos
xchg
mov
ret
movsl
push
cwtl
cmpsb
add
popf
add
std
popa
add
loopne
add
add
add
fwait
add
lret
fisttps
xchg
add
loopne
lea
push
push
push
lea
push
push
push
push
call
test
add
mov
add
pop
loop
jne
add
fldl
jl
mov
push
add
add
popa
cmpsb
js
add
mov
loopne
add
stos
mov
add
push
sub
pop
pop
pop
push
push
call
fidivl
fsubp
jnp
add
pop
add
out
mov
mov
add
cwtl
movsl
in
cmc
add
add
lahf
loopne
add
add
mov
add
mov
popl
out
negl
add
lcall
push
push
lea
push
push
call
mov
add
mov
mov
pop
push
add
xchg
add
mov
add
add
jnp
add
add
add
add
xchg
out
xchg
pop
add
add
lcall
push
not
pop
leave
ret
push
lea
push
push
push
push
call
fiaddl
insb
je
add
add
xchg
add
add
xchg
scas
stos
mov
add
add
jae
rolb
add
add
add
in
in
lcall
push
inc
add
pop
pop
push
not
sub
shr
sub
pop
pop
pop
push
shr
shl
pop
pop
push
lea
push
call
add
mov
movsb
xchg
fnstenv
mov
in
add
je
int
add
xchg
add
scas
jb
loop
add
mov
add
mov
fidivl
mov
in
add
mov
push
jmp
data16
mov
in
clc
lcall
push
push
push
lea
push
lea
push
push
push
call
cld
shlb
jo
mov
add
mov
add
cmc
repnz
add
mov
add
add
add
jbe
add
add
imul
add
ret
cmp
mov
inc
lret
cmp
into
mov
loope
mov
ret
lods
lock
or
mov
xchg
lret
or
mov
mov
add
add
fisubrl
out
mov
xor
out
adc
testl
repz
cmpsl
es
push
push
lahf
xor
adc
lds
sub
and
cmp
add
hlt
xchg
fisttps
mov
pop
into
stos
insb
ds
mov
les
jle
lds
das
popf
ret
inc
pop
inc
pop
push
icebp
sbb
inc
pusha
push
stos
xchg
xor
loop
insb
mov
out
mov
stos
scas
fcompl
sbb
cmp
sub
xchg
mov
movsb
gs
mov
mov
mov
imul
push
mov
ds
movsl
adc
jl
inc
pop
addr16
and
in
lods
stos
fiaddl
out
lods
sahf
sti
mov
es
push
dec
mov
fstpt
pushw
mov
or
cmp
mov
lret
sbb
loopne
sub
movsb
and
cmpsb
into
bound
mov
test
mov
dec
sbb
push
call
out
dec
xchg
fcomip
pop
iret
mov
sub
mov
add
push
sub
jno
ret
test
xchg
mov
cmp
shrl
mov
adc
inc
pop
call
loop
xor
lods
insb
xchg
rcll
imul
mov
cwtl
es
mov
sub
xchg
outsb
std
jne
jno
adc
pop
filds
dec
fstl
into
cmp
pop
xor
iret
movl
js
mov
addr16
into
fs
or
xor
dec
in
sbb
repnz
mov
lret
aad
clc
mov
lock
inc
test
xor
xlat
fcomp
mov
outsb
jae
adc
jle
push
mov
cld
xchg
jle
mov
popa
adc
push
int
push
addb
or
clc
pushf
arpl
or
cmc
lds
mov
dec
pop
pop
cmp
mov
push
xchg
mov
neg
stos
adc
fisttpll
inc
imul
or
outsb
fcomip
out
lcall
dec
push
ljmp
cmp
jle
adc
mov
dec
jg
cmp
xlat
or
push
xchg
cwtl
js
jmp
divps
or
pop
add
lea
pop
stos
cmp
fcompl
scas
push
sub
int
call
adc
xchg
xchg
xor
push
pop
int
cmp
lahf
xchg
inc
push
sbb
iret
sub
daa
and
xchg
inc
test
mov
negl
sbb
pop
pop
cmp
dec
cltd
es
mov
mov
inc
ljmp
sub
sub
in
inc
addb
mov
mov
xchg
divl
jmp
jmp
mov
push
jg
adc
mov
fwait
or
fistpl
fcomip
pop
mov
sarb
aam
lods
dec
fwait
xor
fildll
ret
int3
adc
push
outsb
andps
lcall
repz
scas
xchg
cli
stos
ret
and
sub
mov
addr16
or
mov
add
into
sbb
mov
and
dec
sbb
rcll
jo
notb
xchg
jnp
fbstp
loopne
notb
mov
xor
aaa
adc
into
adc
popf
dec
lods
aad
fadd
inc
stc
popa
shrb
stc
pop
cmpsb
loop
enter
das
das
jae
jecxz
jmp
rcr
cli
sub
scas
mov
add
out
mov
cmp
ss
cmp
bound
sub
lods
push
add
add
pop
insb
loop
dec
lahf
addr16
sbb
insl
push
jno
cwtl
lahf
push
fiadds
and
das
call
or
ret
icebp
psrlq
fldt
outsl
xchg
push
enter
mov
jne
mov
inc
mov
nop
lcall
loop
iret
flds
push
adc
hlt
jo
xchg
pop
or
daa
pop
mov
mov
mov
fistpll
test
repnz
sub
popa
dec
jmp
pop
insl
pop
pusha
pop
sbbl
fwait
adc
xor
mov
push
lcall
aad
mov
gs
dec
in
test
fwait
pop
mov
inc
in
jb
push
dec
mov
push
fnstsw
mov
xor
xlat
popf
inc
cwtl
lahf
mov
imul
adc
out
cli
push
push
loope
or
mov
rol
lock
in
scas
jle
test
testw
test
cmpsb
dec
push
xchg
mov
pusha
mov
clc
xor
and
sub
pushfw
push
lock
xchg
mov
sarl
add
xorps
ss
or
movaps
hlt
adc
adc
mov
leave
mov
fidivrl
sbb
ja
les
lock
xchg
or
pop
scas
jae
add
mov
dec
or
roll
or
hlt
push
stos
push
test
stos
mov
outsb
test
decl
insb
arpl
xchg
pop
ss
sbb
nop
dec
shl
cwtl
ljmp
adc
xchg
mov
filds
iret
rclb
mov
fisubrs
scas
xor
aad
iret
imul
mov
insb
outsl
adc
jno
mov
fidivl
dec
ja
movups
xor
push
stos
mov
icebp
aam
cmp
repnz
and
pusha
andl
out
jae
lcall
cmc
fcomps
dec
mov
ss
mov
fdivr
sbb
andl
aad
pop
jp
rcrb
imul
xor
or
scas
lret
cmpsl
stos
stc
ljmp
mov
out
je
add
gs
out
lods
shl
adc
or
xor
push
dec
shl
mov
mov
jg
and
aam
iret
negb
mov
lds
xor
xchg
xor
mov
xchg
inc
faddl
inc
or
mov
repnz
jmp
fsubp
jns
push
xor
mov
mov
mov
sbb
int3
jmp
xlat
in
aaa
mov
cmp
loopne
es
mov
jne
pop
mov
add
cmp
ret
cmp
pop
aam
mov
data16
jae
in
bound
pusha
sub
sub
icebp
sete
fnsetpm(287
or
sti
pop
cmp
pop
addr16
xchg
pop
in
pop
ret
dec
xor
push
add
jge
xor
mov
push
inc
mov
pushf
cmp
mov
test
into
popa
das
mov
iret
rcrl
mov
iret
fs
pop
adcb
mov
sbb
das
xor
mov
inc
mov
icebp
loope
pop
lahf
cmp
adc
hlt
and
inc
xchg
lret
mov
pusha
fstps
cmp
mov
xchg
push
movsl
imul
xchg
out
hlt
push
mov
push
popa
push
pop
or
or
sahf
adcl
adc
jns
cwtl
fcomps
mov
out
cmpb
jbe
scas
icebp
push
cmp
popf
ret
stc
frstor
mov
addr16
daa
sahf
mov
dec
mov
leave
hlt
sbb
inc
mov
loop
imull
jne
xor
mov
in
jl
popa
sub
cmp
xchg
sbb
mov
das
into
jb
and
js
dec
lret
xor
pop
push
sub
lcall
push
xor
sub
add
xor
sbbl
aad
sbb
popa
arpl
addr16
iret
xor
andl
out
dec
push
add
push
inc
sub
pop
jmp
lock
jmp
jae
addr16
mov
adc
xor
push
xor
adc
cmpsb
mov
sbb
push
sub
lods
push
dec
aas
and
clc
and
inc
out
outsl
push
shll
pop
insl
mov
mov
push
pop
sub
and
inc
pop
std
mov
inc
lret
movups
add
pop
popa
repnz
testb
dec
sti
add
or
push
lcall
mov
mov
gs
cmp
aaa
clc
mov
enter
cs
test
out
sbb
test
movsb
adcb
enter
push
popf
jg
mov
or
fbld
jnp
mov
push
push
lahf
icebp
jae
or
std
add
sahf
hlt
lret
push
scas
out
jno
xchg
outsb
sub
jecxz
jo
call
testb
push
mov
addl
pop
arpl
aam
mov
cli
jne
out
fdivp
movsl
mov
in
cmc
int
cmp
xor
lcall
decb
xchg
fimuls
lcall
sbb
jae
jnp
loop
negb
mov
in
test
xor
push
inc
aaa
cmp
pop
and
rcll
stc
imul
daa
mov
aam
in
add
adc
movsl
push
cmp
rcll
clc
lahf
sti
sarl
or
xor
sbb
dec
jno
jb
idiv
inc
fcomps
push
xor
push
aad
je
inc
add
les
dec
inc
icebp
jle
mov
adc
jae
pop
mov
push
pop
out
loop
addr16
jp
fcoms
movb
ret
add
repnz
mov
and
rcrl
mov
mov
aaa
jne
push
xor
fisttpl
xor
and
ficomps
outsl
xor
xchg
and
adc
sub
xor
decb
mov
popa
mov
jp
xor
adc
mov
dec
es
popf
push
andb
sub
imul
mov
fldt
mov
hlt
lods
out
cwtl
rcll
aam
clc
xchg
jg
and
imul
sbb
test
aas
inc
and
sbb
fstpt
mov
sub
sbb
pop
inc
add
enter
and
int3
jo
xchg
dec
insb
sub
es
leave
sub
jecxz
stos
ljmp
jle
dec
dec
add
xor
adc
add
dec
pop
mov
fcomps
clc
shl
or
xchg
mov
mov
test
push
add
xchg
pop
mov
fisubrl
lock
subb
push
cld
sti
nop
in
pop
inc
inc
in
mulb
dec
and
popf
xor
ret
fwait
cwtl
jecxz
push
leave
jne
and
in
mov
into
sub
lods
add
stos
aam
out
push
rorl
cmp
and
lds
cld
push
jle
std
xor
inc
fwait
xchg
das
pop
fldt
adc
adc
pop
and
ss
xchg
lods
lcall
or
aam
pop
pop
mov
lods
inc
jg
mov
xchg
cmpsl
loope
cmc
insb
mov
imul
test
xor
mov
mov
daa
mov
outsb
cli
mov
in
push
jns
data16
sarb
inc
ret
mov
inc
xchg
or
mov
cmp
mov
scas
inc
mov
jne
jg
test
std
out
inc
cmp
sub
arpl
add
push
insl
and
repnz
or
adc
cmpsb
loope
cltd
daa
nop
iret
cmpsb
xor
add
insl
pop
repnz
mov
mov
jle
andl
push
popa
cmp
daa
xor
jo
xlat
arpl
inc
test
push
mov
mov
mov
mov
movsl
test
loopne
jno
sub
ljmp
adc
fadds
imul
jb
and
rorb
pop
pusha
xchg
stc
sub
imul
hlt
stos
movl
sbb
mov
inc
cld
push
inc
test
inc
bound
cmpsl
and
outsl
test
xchg
stos
jp
aam
and
mov
sbb
xor
or
test
lret
xchg
test
jmp
pop
mov
shrl
mov
cld
outsb
outsl
bound
jnp
jp
aas
push
xor
xchg
or
cwtl
adc
cmp
outsl
enter
lcall
or
mov
sbb
orb
inc
lret
fs
lea
outsb
mov
popa
int3
inc
dec
adc
mov
add
rorl
cwtl
shlb
scas
push
gs
adc
insb
sti
test
aas
fdiv
aas
fisubl
jg
in
rcr
testb
je
js
push
shlb
iret
test
insb
cmpsb
xchg
dec
dec
pop
enter
loop
clc
pop
outsl
jns
in
or
sub
fwait
add
jb
jmp
mov
jns
ret
adc
lahf
scas
and
mov
xchg
cmpsl
cmp
pop
hlt
stc
in
rcl
sar
push
and
outsl
sbb
cmc
mov
mov
and
cmpsb
cmpsl
mov
cli
dec
lods
mov
sti
fldenv
mov
and
or
rcr
pusha
add
bound
ss
jae
mov
mov
addr16
scas
mov
adc
insb
lahf
insb
data16
or
inc
cmp
jp
int
ret
data16
mov
push
xchg
and
xor
mov
data16
pop
sahf
push
push
push
ret
scas
xchg
sub
push
mov
jl
test
jb
push
jg
test
out
dec
das
test
and
sub
notl
scas
jae
add
das
and
pop
cwtl
jb
test
sarl
mov
sahf
sbb
or
je
arpl
or
pop
pop
lret
mov
lcall
jg
aaa
sub
enter
ss
movsl
mov
test
cmpsb
gs
addb
mov
hlt
sub
aaa
pop
xlat
xlat
xchg
xlat
sub
jno
loopnew
ds
fildll
xchg
or
nop
arpl
call
jle
mov
adc
sbb
mov
push
dec
mov
cld
jge
cli
jo
jg
imul
sbb
jae
mov
ds
mov
sahf
icebp
aad
and
pop
imul
sub
aad
lcall
in
xchg
dec
stos
add
xchg
scas
xchg
cmp
je
lret
fidivrl
sub
sub
cmp
and
add
lods
andb
or
adc
pushf
xchg
movsl
sti
movsl
push
dec
adcb
jge
xchg
inc
mov
iret
into
out
push
call
dec
jecxz
push
ret
pop
add
and
mov
or
add
sub
inc
lret
cmp
pop
xor
sahf
inc
jmp
cmpl
int3
xchg
mov
arpl
ja
cmp
pop
cmpb
test
shlb
mov
cmp
adc
mov
dec
inc
push
add
adc
mov
mov
adc
sbb
push
pushf
sbb
outsl
into
in
jecxz
fsubl
dec
pop
clc
outsb
in
cmpsl
fadds
xor
or
mov
push
ror
aas
lods
and
hlt
xchg
inc
scas
sti
mov
add
jge
sarb
popa
jb
arpl
push
xchg
mov
das
std
jle
mov
nop
mov
xor
stos
sbb
dec
lods
sbb
mov
adc
xor
fsubs
sub
xchg
dec
or
fptan
push
pop
fdivrs
into
sti
addr16
fcmovnb
bound
imul
aam
jne
aam
add
dec
mov
add
push
faddp
inc
mov
mov
dec
lods
in
mov
inc
mov
iret
mov
enter
adc
dec
lods
mov
lcall
lds
jle
cld
fldcw
inc
outsl
rclb
dec
js
sbb
imul
scas
mov
mov
xchg
jg
push
push
xchg
push
lahf
jg
mov
pusha
xchg
mov
pop
cs
or
test
bound
push
xchg
or
movsl
stc
sbb
sub
pop
mov
mov
jge
testb
pop
nop
test
mov
roll
add
out
mov
int
out
mov
xor
mov
test
xchg
pop
shll
lods
push
das
loopne
jle
lock
adc
push
movsl
jle
and
sbb
into
aam
call
pop
aad
out
cmp
ss
fisubl
adc
or
test
inc
mov
pop
and
scas
fcomps
enter
adc
dec
call
test
out
and
or
jnp
sub
adc
push
popf
dec
xchg
cmpsl
or
test
xchg
push
je
push
insb
ret
ja
fs
stc
pusha
fidivrl
shrb
xor
test
cmp
push
pushf
test
repz
add
inc
pop
testb
sbb
call
jecxz
test
fistpll
jmp
cli
jnp
xchg
inc
mov
ja
outsl
fsts
outsb
dec
aas
mov
pop
sbb
lahf
mov
inc
les
add
jns
leave
addl
call
lret
mov
push
cmpsl
je
mov
adc
repz
pushw
xchg
orl
sbb
xchg
or
les
insb
sub
xchg
inc
xchg
imulb
inc
jnp
aam
mov
xor
aaa
jmp
and
mov
pop
mov
scas
xor
mov
add
nop
lret
scas
jnp
daa
inc
push
push
arpl
in
dec
shrb
or
rcll
mov
sub
cmpsl
sbb
inc
pop
sar
adc
and
jmp
jb
cli
lds
pop
jb
repz
pop
pushf
add
dec
xchg
xchg
add
inc
cs
cmpsl
pop
pop
sbb
jg
mov
cmp
fimuls
adc
test
cmpsb
jbe
push
adc
popf
jno
test
popa
loop
ret
insb
cmp
test
mov
daa
fwait
nop
jmp
movsb
cmp
xor
mov
outsb
das
dec
push
jecxz
add
adc
pop
pop
pop
pop
adc
fidivrs
in
mov
iret
dec
shl
jge
pusha
xchg
mov
mov
adc
ds
dec
cwtl
and
push
dec
pop
adc
sub
lock
mov
dec
loopne
movsb
popf
clc
xorb
sarb
hlt
repz
les
xor
push
cmpsl
mov
mov
shrb
hlt
fsubr
xor
mov
mov
xor
mov
inc
popf
in
and
data16
lret
in
inc
pop
xchg
daa
sbb
sub
scas
push
xchg
pusha
or
adcb
xor
fbld
leave
enter
jo
or
movsb
setge
rol
cmp
pop
std
push
orb
pop
push
cmp
rclb
std
into
lret
fstps
jecxz
rcrl
mov
mov
mov
cmc
sub
repz
push
cli
inc
lds
or
sbb
and
sbb
pop
shrl
fldenv
sub
xor
cmpsl
push
fcmovnbe
mov
insl
andl
notl
xor
insl
sbb
in
into
sub
loop
or
std
mov
movsl
mov
insb
int
lcall
shlb
dec
shl
add
sbb
lret
jo
in
int
ss
push
filds
push
icebp
aam
and
xor
xor
push
popa
out
addb
enter
ficomps
adcl
and
mov
dec
inc
lcall
xor
xchg
and
std
ja
and
jmp
mov
lret
cmp
lret
jbe
lcall
clc
in
enter
into
repnz
mov
mov
rolb
std
pop
sub
ja
mov
and
stos
xchg
je
mov
cs
adc
mov
cmp
fstpt
out
mov
imul
mov
outsl
push
and
out
scas
inc
fldenv
inc
jmp
scas
pop
adcb
sbb
inc
dec
sub
mov
adc
cld
imulb
inc
jns
pop
es
test
sub
mov
fisttps
xchg
inc
adc
outsl
dec
push
xchg
inc
movsl
cltd
pop
push
inc
adc
bound
add
mov
in
popf
adc
sbb
mov
dec
in
inc
lcall
daa
pop
mov
push
sub
push
push
das
jge
jne
mov
push
pusha
xchg
out
lods
xchg
add
xchg
or
xchg
popa
jmp
faddl
pop
imul
sbb
jb
mov
xchg
cmp
stos
dec
jge
rcr
mov
pop
and
rolb
pop
add
mov
popa
push
mov
or
cmp
outsl
xchg
push
cmp
jae
out
xchg
push
xchg
pop
mov
outsb
jp
sbb
jne
push
inc
mov
daa
int
mov
adc
fimuls
daa
mov
lcall
in
push
sub
mov
gs
push
lods
adc
int
pop
cmp
push
push
cli
sarl
jl
adcl
bound
sub
bound
scas
inc
mov
push
in
fs
stc
pop
inc
sub
into
jo
cwtl
insl
aad
xchg
rol
adc
jmp
je
adc
mov
test
notl
je
sub
pop
xor
jne
or
xchg
lea
and
in
cmp
leave
addr16
push
sbb
add
sbb
cld
out
rclb
lret
lods
mov
xor
daa
push
ss
inc
repnz
fwait
lods
xchg
shr
mov
pop
sub
mov
fisttps
daa
pop
and
adcl
daa
pusha
and
adc
inc
sub
adc
cltd
shrb
dec
xlat
and
or
pop
je
xor
icebp
ret
mov
push
lcall
daa
inc
cmp
scas
pop
push
xchg
and
insb
mov
push
movsb
fisubrl
movsl
scas
cmpsb
mov
dec
daa
pop
stos
xchg
enter
movsl
jge
pop
xlat
test
in
rorl
loope
mov
pusha
pop
fisubrs
mov
cmp
lret
mov
mov
test
loopne
cmp
ljmp
scas
or
loopne
loop
outsb
lods
scas
push
aaa
jmp
xchg
bsr
addr16
inc
xchg
pop
out
bound
cmpsb
in
cld
ret
dec
mov
jno
jb
adc
and
cltd
test
out
negb
pop
repnz
fidivrl
lds
adc
push
add
jg
and
push
xchg
add
mov
add
jne
push
sub
loopne
add
jl
xchg
mov
and
lods
sub
sub
das
mov
mov
sbb
jne
rcr
out
or
cltd
jnp
sub
xchg
sbb
jle
xchg
ret
adc
push
xor
test
cmpb
repnz
dec
mov
ret
movsb
testl
in
and
mov
sub
adc
stos
movl
add
mov
pop
mov
loope
pop
pop
sub
addr16
xchg
push
push
pushf
in
adc
shll
lods
into
adc
jns
cld
cmp
mov
sbb
xchg
hlt
ds
in
leave
mov
scas
jge
mov
inc
jecxz
cmpsl
fdivs
cmp
mov
inc
cmp
clc
xchg
out
mov
jo
adc
xorl
das
push
or
rcrb
ljmp
add
ds
cmp
jo
add
cs
cmp
pop
xor
add
nop
rcrb
jmp
inc
jnp
push
aam
daa
mov
hlt
push
shll
dec
mov
shlb
cwtl
movsb
or
xor
xor
movsl
testl
push
outsl
mov
inc
mov
adc
ljmp
mov
push
divl
jns
mov
inc
add
cwtl
jp
xchg
loopne
cmp
imul
jmp
cmc
xchg
stos
cmp
xchg
dec
sub
push
push
fists
inc
inc
jo
mov
adc
popa
insl
add
subl
xor
mov
rclb
add
xor
pop
shll
lret
stos
xchg
insl
mov
jmp
je
cli
mov
sbb
mov
sarb
in
test
int3
pop
sub
rcll
inc
fstpl
out
or
mov
enter
repnz
cmc
out
sbb
repnz
or
in
pop
or
mov
mov
outsb
or
jno
push
sysenter
jp
pushf
sub
add
lock
notl
ljmp
ret
inc
cli
xor
pop
cmp
jge
lahf
adc
or
js
loopne
sbb
adc
inc
mov
xchg
in
lret
mov
cmp
loope
cmp
sti
lcall
lock
mov
scas
in
ret
mov
pop
popa
ja
int
je
inc
hlt
push
clc
les
push
push
jg
dec
pusha
repz
dec
gs
and
inc
push
push
andl
scas
pop
inc
js
inc
lods
mov
scas
jno
add
sahf
mov
xchg
cmc
jae
outsb
jo
jecxz
adc
movsl
pop
out
adc
sbb
inc
rorb
mov
dec
push
jmp
aad
cmp
addl
test
mov
ljmp
and
popa
lahf
mov
ret
mov
das
fmuls
mov
xchg
or
mov
jbe
fwait
cmp
shll
jns
out
roll
sub
test
clc
or
mov
xchg
pop
xchg
stc
sbb
inc
in
xor
ds
mov
fisubl
testl
fdivrs
inc
or
clc
pusha
out
lock
push
inc
bswap
mov
sub
in
in
es
enter
test
in
push
xchg
mov
dec
add
jge
fstl
cmp
push
jbe
lret
ss
insl
pusha
pop
jmp
or
push
cmpsl
push
mov
dec
test
push
xchg
shll
hlt
aas
stos
sub
xchg
and
aaa
or
movsl
std
leave
jp
fstl
andl
mov
out
lds
push
js
and
adc
adc
mov
jp
or
sahf
daa
xlat
stos
pop
movl
xor
cmpsb
and
mov
jnp
loope
cltd
stc
jge
or
mov
jl
je
pop
insb
sbb
mov
lods
arpl
push
test
xor
aaa
testb
stos
dec
pop
out
mov
xchg
jnp
sbb
xchg
inc
add
enter
mov
fistps
stc
in
inc
xor
stos
and
outsb
das
sahf
iret
or
dec
pop
test
mov
xor
std
imul
pop
hlt
fadd
jae
lods
pusha
jo
cmp
push
jecxz
add
or
cmpsb
push
cmp
sub
test
fnstcw
mov
repz
inc
xorb
inc
insl
lcall
push
outsb
cs
out
es
in
or
out
adc
xchg
mov
aad
mov
cld
mov
in
mov
mov
repz
xchg
pop
jl
lret
in
and
xor
xchg
mov
repnz
or
adc
sbb
scas
xchg
jae
mov
cmpsl
out
icebp
jge
sub
cli
sahf
add
out
or
adc
loop
arpl
aaa
test
and
sti
mov
enter
data16
faddl
add
jp
mov
mov
push
bound
inc
adc
mov
adc
fs
push
jmp
repnz
cmpl
jno
push
mov
mov
jmp
fcoml
push
xor
xchg
repnz
cmp
jge
and
xor
dec
imul
cltd
or
xlat
sbb
cmc
push
in
lods
popf
insb
stos
mov
or
shl
inc
or
push
cmc
cmp
jge
mov
inc
icebp
dec
stos
loope
cmc
mov
aas
inc
mov
out
adc
pop
cmpsb
pop
shlb
insl
in
test
lock
out
adc
gs
lret
push
mov
test
push
xchg
sbb
adc
out
jge
push
fidivrs
pop
hlt
add
movsb
mov
sbb
push
sub
xor
push
xorl
andl
mov
xchg
popa
imul
outsb
mov
and
std
jecxz
out
xor
sub
insb
out
xor
testl
scas
iret
bound
cmc
icebp
scas
out
insb
leave
inc
les
movsl
cmpl
je
int3
icebp
mov
pop
sub
fisubrs
loop
jnp
aad
or
mov
fnsave
mov
sarb
sbb
stc
cmc
sti
cltd
loop
push
sbb
dec
mov
lret
clc
rorl
shlb
adc
or
jmp
paddsw
or
es
loopne
scas
lock
roll
pop
and
out
mov
xchg
daa
jecxz
iret
sub
push
pop
mov
test
xor
aas
in
pop
adc
aam
sahf
push
test
cli
cwtl
add
ret
fsub
mov
add
xchg
decl
mov
and
arpl
push
pop
mov
pop
xor
cli
mov
push
data16
push
sub
jge
repz
xchg
cmpsl
jo
fwait
ss
mov
push
in
pop
or
lahf
jns
out
xchg
xorl
leave
jbe
mov
gs
test
cmp
add
mov
aad
fcoms
dec
pop
call
pop
adc
in
rclb
xor
and
rcl
sbb
push
out
lret
dec
loopne
lea
movsb
movsl
sbb
lret
add
sub
je
test
adc
test
sbb
adc
nop
ffree
inc
aas
or
aad
mov
lidtl
out
call
fs
mov
cmp
sub
mov
sti
pushf
test
jmp
inc
push
and
fwait
scas
xor
scas
fiaddl
das
cmpsb
popf
inc
jp
pushf
out
iret
pop
shrl
xor
dec
cs
adc
jle
std
nop
jle
add
in
cs
sub
mov
add
adc
sarb
vpmacsdqh
jl,pt
add
test
push
xchg
pop
or
dec
xor
fpatan
xchg
ljmp
xor
outsb
lahf
inc
jmp
shld
mov
pop
je
push
stos
loope
test
lahf
clc
in
inc
gs
xchg
stos
int3
dec
or
cmp
repz
das
ja
addr16
shll
cli
mov
mov
xor
cmc
clc
inc
out
jns
jbe
pop
add
arpl
fs
leave
std
mov
cli
xchg
jnp
in
lods
movsb
push
push
test
mov
push
js
sbbb
test
cmp
outsb
mov
lcall
jbe
imul
shll
sbb
cmpsb
xor
mov
push
inc
add
test
pop
scas
scas
sbb
xchg
xor
iret
aad
sbb
or
mov
loop
and
mov
repz
lods
cmp
mov
rorl
xchg
call
sub
stos
shll
mov
icebp
shl
insl
in
mov
mov
add
jae
scas
leave
imul
push
or
xor
mov
mov
stos
popa
jg
pop
xor
mov
clc
push
ja
xchg
out
inc
lret
inc
pop
sbb
mov
xchg
dec
add
pop
icebp
arpl
sub
pop
shl
sub
shrb
xchg
mov
into
pop
mov
cmp
sbb
mov
out
incb
faddl
int
push
push
and
cmp
pop
mov
ret
inc
xchg
fmuls
out
push
push
subl
push
dec
loope
arpl
lcall
push
push
xchg
cld
mov
movsl
pop
call
xchg
mov
or
pushf
inc
and
daa
pusha
inc
scas
fdivrs
clc
movsb
sub
dec
sbb
cmpsl
in
pushf
cmp
or
add
insl
push
ja
push
sti
mov
and
push
stos
aad
mov
inc
jecxz
ss
push
in
dec
sub
je
jns
and
push
aas
popl
push
pop
xchg
std
inc
outsb
jns
pop
ror
inc
inc
dec
mov
xor
mov
insb
dec
ljmp
xchg
outsb
fdivl
sub
or
incb
dec
movsl
mov
cli
jle
jmp
dec
xor
sbb
and
and
cmp
in
je
iret
in
gs
in
or
inc
dec
mov
hlt
inc
stc
adc
lock
and
or
inc
or
in
dec
add
adc
aam
in
roll
and
lods
lock
and
or
jmp
pop
ljmp
mov
negl
push
add
fidivl
xlat
sbb
dec
pop
fldenv
or
inc
and
mov
and
xor
sub
xchg
in
lret
pop
andb
mov
testl
inc
lcall
repnz
test
stos
cmp
es
sub
xor
test
shlb
jo
sbbl
adc
mov
dec
mov
test
push
or
aad
ja
pop
mov
test
stos
xchg
xchg
dec
loopne
lock
cmp
fistpl
push
movl
mov
adc
pop
shlb
cmp
cli
xchg
int3
xchg
in
dec
or
xchg
jbe
test
popa
cwtl
clc
and
fwait
sti
sbb
in
inc
rol
mov
ret
push
jp
setl
out
mov
orb
pop
adc
lcall
push
and
pop
xor
xchg
popf
fwait
js
out
jns
or
dec
inc
rclb
aad
dec
push
jo
inc
icebp
push
mov
add
int
xchg
addb
dec
adc
cld
mov
dec
loop
rorl
push
sarl
pop
in
sub
and
pop
in
sbb
sbb
aaa
jb
shll
leave
sbb
lret
popf
jge
andl
lock
pop
pushf
mov
lock
jp
and
outsb
lods
jo
out
mov
mov
in
or
push
or
cmp
out
inc
out
pop
sub
loopne
loope
dec
push
fisttps
popa
rclb
push
mov
mov
mov
lods
mov
inc
into
pusha
outsl
cmp
or
adc
subb
xchg
jle
dec
nop
mov
addr16
pusha
popa
sbb
ds
xor
xor
out
stos
xor
cmp
or
add
aad
ror
shrl
push
pop
mov
jb
add
cmp
push
popf
fists
inc
dec
out
repnz
jb
sub
mov
adc
movsl
test
pop
lcall
inc
mov
pop
out
lea
lret
stos
mov
xchg
fbstp
sarl
mov
add
add
stos
pop
ja
mov
xchg
adc
jecxz
outsb
in
or
add
inc
data16
xchg
sbb
adc
out
out
out
mov
sbb
and
pop
pop
mov
sbb
add
push
cltd
and
je
out
fwait
sub
adc
jge
cwtl
mov
and
jae
mov
fs
int3
insb
adc
pop
incb
popf
pop
or
add
subb
pop
pusha
jnp
sub
aas
adc
stc
mov
les
sub
and
leave
lds
popf
xor
out
sbbb
mul
lods
loope
sbb
push
pop
dec
mov
enter
int
repnz
sbb
mov
sti
xor
es
pop
jae
outsl
cmp
and
xor
lods
call
dec
inc
push
cmp
js
mov
push
xchg
and
fs
dec
setge
jl
fs
rclb
mov
pop
imul
fmull
ja
icebp
pop
es
mull
incb
in
pop
ss
insl
out
inc
add
loop
add
mov
divl
pop
js
pop
xchg
inc
and
nop
pop
mov
mov
dec
push
lock
scas
cmp
int3
jnp
icebp
add
cltd
adc
add
out
push
push
or
mov
pop
lds
inc
enter
and
pop
in
push
lahf
jge
sbb
jmp
xchg
xor
cmp
sub
repnz
mov
pop
pop
sub
fwait
adc
fsubrl
jge
inc
and
cmc
inc
lahf
mov
mov
notb
in
nop
inc
push
xchg
js
in
jbe
inc
int
jns
xchg
out
xchg
fldln2
andl
test
cmp
cltd
mov
inc
lds
dec
or
pop
push
mov
mov
push
addb
push
add
adc
sub
gs
mov
std
fsubr
pop
aam
fcomps
mov
sbb
pop
dec
add
add
das
call
sbb
aas
shl
sub
shlb
jns
xchg
push
mov
fmull
nop
into
test
cmp
int3
mov
dec
cmp
xchg
adc
repnz
mov
mov
mov
pusha
sub
pop
inc
xchg
enter
add
add
gs
jae
pusha
xlat
imul
mov
jmp
popa
add
jae
fnsave
or
push
push
and
xor
and
jb
in
and
leave
pop
adc
adc
mov
add
mov
xor
outsb
or
cld
aad
sbb
mov
mov
xchg
jbe
and
add
dec
jecxz
and
rcrl
or
jl
jne
dec
inc
outsl
in
fsts
xorb
jp
lea
xor
sbb
jo
inc
jnp
ret
ret
cmp
mov
xor
cmp
ja
aad
jae
or
ljmp
mov
cmp
out
or
lahf
das
jmp
cmp
dec
outsb
out
jno
push
mov
lret
push
fwait
in
pushl
cmp
stos
cmc
jno
pop
push
repnz
scas
lock
sub
aam
dec
add
sub
cs
insb
nop
push
daa
pop
lret
popa
fidivl
sub
jge
shlb
mov
xchg
lret
mov
add
lods
test
inc
faddp
in
sbb
xchg
jne
and
cwtl
test
out
push
xchg
sbb
jp
adc
push
sbb
sbb
in
mov
xchg
pop
mov
pop
enter
add
jecxz
or
iret
add
int
and
es
mov
jge
cmp
shr
fmul
sub
jmp
loopne
arpl
cmp
sahf
add
out
cmp
xchg
and
add
cmp
inc
clc
fsubl
arpl
push
in
lods
sub
into
mov
jge
and
mov
aad
outsb
into
movsb
cmpsl
fcoms
push
mov
test
mov
enter
jne
call
insb
push
lock
xchg
das
or
sbb
rclb
out
roll
vfrczss
mov
dec
into
dec
cmp
fdivl
xor
mov
rcll
enter
jno,pn
test
add
cli
loop
jmp
aas
mov
inc
xorb
xor
push
imul
cli
aas
xchg
push
aas
scas
sbb
mov
dec
jle
push
push
sbb
mov
dec
lret
xchg
pop
and
jge
sbb
push
jae
sahf
or
icebp
insb
aas
stos
in
pop
push
test
ljmp
jo
add
xchg
out
jbe
push
insl
jge
push
test
mov
addr16
xchg
cmp
out
ret
add
cld
mov
xor
rolb
and
mov
les
stos
in
inc
cmp
mov
inc
jo
arpl
leave
cmp
pop
sub
mov
in
jg
and
pop
lea
mov
mov
call
fsubrl
mov
lcall
inc
adc
lods
xor
pop
pushf
xchg
xor
push
mov
sub
mov
subl
mov
ret
fistpll
mov
push
dec
inc
add
push
cmc
mov
xchg
add
sub
stos
nop
insb
hlt
je
dec
mov
xor
jmp
push
das
pop
pop
xor
rol
pop
mov
sbb
iret
ljmp
repnz
test
out
mov
inc
cmp
aam
mov
push
out
test
hlt
je
popa
in
repz
outsb
xchg
jnp
repz
enter
jge
adc
push
jae
mov
or
pop
ret
cmc
xchg
pusha
sbb
imul
xchg
in
fistpl
je
out
jle
stc
mov
out
rcl
push
js
ret
cltd
sub
jno
mov
inc
lret
push
xor
xchg
xlat
fsubs
sbb
sub
fwait
subl
insl
dec
imul
jl
push
or
and
sub
push
js
fstps
dec
inc
popf
push
xlat
rcrl
cs
adc
mov
cmpsb
xlat
push
test
inc
ficoml
jne
neg
cs
insb
push
xchg
lock
xchg
int
mov
pop
adc
aam
mov
or
les
cwtl
mov
push
gs
mov
push
out
jo
sbb
movsb
or
sub
filds
adc
xor
sbb
inc
dec
ja
imul
mov
push
loope
inc
ja
mov
faddl
pop
pop
repz
lea
sub
cmpsl
push
sarb
sbb
or
push
cmp
push
inc
lods
dec
mov
pop
sub
aad
dec
mov
loopne
dec
test
ds
pop
addr16
loope
mov
lret
mov
inc
and
sub
jae
test
out
enter
cs
out
arpl
loope
mov
mov
fimuls
jecxz
mov
pop
jnp
scas
andl
les
mov
lcall
jl
push
cld
outsl
adc
xor
mov
push
jne
mov
rolb
mov
inc
iret
popa
and
xlat
into
lods
mov
out
mov
sub
jns
ds
xor
ret
mov
or
dec
int
in
push
push
stos
sarl
ret
rcrb
add
mov
xchg
cltd
jmp
cmpsl
fimull
fst
outsl
adcb
test
and
add
imul
jle
leave
cld
fwait
push
adcl
stos
lret
sub
xor
cld
jns
pop
adc
xlat
jbe
jecxz
cmp
in
jno
imul
pop
xor
es
sub
arpl
ud2
lods
bound
add
jae
jb
bound
mov
mov
test
cmp
push
and
cmp
mov
out
popa
sbb
sahf
pop
ret
sbb
pusha
in
dec
loope
dec
stos
rolb
out
das
pop
lcall
ss
pop
les
ret
and
inc
add
repz
push
mov
dec
mov
outsb
xchg
mov
aas
movsl
dec
inc
and
subb
jae
fadd
addr16
pop
shlb
mov
data16
cwtl
mov
mov
in
cmp
and
push
test
ss
cmp
outsb
or
in
xor
xor
mov
aad
mov
sbb
cmp
cli
cs
stc
sbb
sarb
mov
in
and
ljmp
pop
mov
popa
stos
sbb
scas
lcall
int
cmp
add
inc
out
pushf
xchg
pushl
jmp
xor
sub
mov
rclb
into
std
xchg
stos
movsb
push
lahf
cmpsb
rcrb
jno
jecxz
in
xchg
jo
sbb
mov
sahf
test
mov
xor
sti
cli
pushf
shrl
ficoml
pushf
nop
call
rorb
popa
push
sbb
into
mov
movsl
mov
pushf
lods
fdivrs
adc
cmp
shlb
sbb
popa
sbb
nop
or
mov
mov
pop
mov
cmpsb
mov
mov
iret
push
cmp
xchg
xchg
sub
inc
pop
aaa
sub
cmp
mov
addr16
adc
je
push
subb
call
lods
sbb
out
mov
push
test
inc
push
push
loop
es
in
je
sub
in
outsl
rcr
pop
fsubl
mov
andl
jecxz
cs
stos
adc
push
mov
and
dec
ret
or
nop
adc
sbb
xchg
inc
xor
and
rorl
jnp
mov
ds
ds
xor
jo
mov
add
pusha
js
adc
xchg
xlat
insb
add
lcall
es
mov
and
hlt
mov
mov
pusha
shl
dec
sbb
lea
leave
xor
scas
loope
cmp
push
inc
ja
loopne
repz
cmp
mov
sub
pop
mov
jge
insl
jecxz
cld
dec
xor
cmp
cwtl
lret
jnp
and
mov
xor
lcallw
push
and
inc
test
out
pop
xor
outsb
fmull
js
dec
sahf
ret
scas
inc
pop
lahf
jne
es
aaa
cltd
xor
cltd
outsl
bound
nop
and
adc
outsb
xchg
push
sub
push
nop
sbb
xchg
stos
mov
fdivp
in
mov
out
add
push
mov
inc
cltd
ja
dec
cli
xor
inc
rorb
jl
inc
loopne
push
adc
cmp
xor
add
add
lds
lods
inc
mov
fdivrl
or
jo
and
test
cmp
jp
cld
pop
fisubrs
mov
cmpsl
dec
ficoml
mov
sub
add
or
jg
fidivrs
aas
mov
daa
adc
nop
frstor
ds
xor
add
mov
mov
movsl
rorb
mov
mov
add
mov
cltd
insb
add
push
and
push
push
sbb
mov
fiaddl
pusha
sbb
imul
roll
add
or
addr16
pop
dec
ret
xchg
aaa
mov
ret
dec
adc
loop
call
cmp
mov
pop
or
test
and
push
inc
xchg
es
push
lahf
push
stc
loope
sbb
ljmp
into
call
ret
pop
xchg
inc
movsb
sahf
jmp
jne
scas
cmpsb
mov
fstpt
pop
jp
aaa
dec
lds
ja
lods
fisttpll
in
inc
cmpl
stos
sbb
pop
out
popa
cmp
rcrb
mov
sub
aad
in
clc
or
lahf
add
inc
jo
je
sbb
mov
pop
cs
fwait
bound
and
rorl
jno
jb
jmp
enter
adc
push
popa
xchg
rcrb
in
stos
cmp
repnz
mov
dec
mov
push
fisubrs
mov
jg
fildl
sbb
sarl
push
inc
mov
addl
pop
idivl
repz
or
enter
cmpsb
cwtl
mov
pushf
xor
mov
iret
into
scas
stc
sahf
sarl
ja
inc
lahf
push
push
loop
pushf
push
and
cmc
cmpsl
cwtl
inc
jecxz
cli
inc
dec
pop
jne
mov
jb
loopne
cmp
adc
xor
in
mov
imul
je
aam
iret
adc
lcall
dec
test
mov
or
sub
mov
or
sub
imul
mov
pop
cmp
mov
pop
jno
jns
dec
lret
pop
sub
js
add
ret
or
mov
cmp
psrlw
jnp
popf
and
in
mov
or
xchg
cmp
xchg
and
mov
leave
fs
and
ja
pop
inc
mov
cmp
mov
jmp
pop
jnp
mov
pop
cmpsb
mov
fwait
mov
adc
in
and
jle
loopne
jecxz
xchg
add
ret
push
dec
push
ljmp
pushf
sub
fsubr
jbe
icebp
xorb
std
sub
sbb
push
jbe
ret
pop
sti
lock
subl
repz
in
mov
ljmp
pop
adc
movsl
in
addb
les
rclb
mov
fwait
shrl
popf
movsb
ret
mov
sti
aas
lahf
xor
fs
out
lods
stos
ja
pop
hlt
adc
shll
out
dec
mov
fcmovbe
xchg
lret
pop
cmp
repz
les
mov
lods
jmp
cmc
cmpsb
xor
jbe
sub
cltd
rcrb
div
xchg
loop
test
inc
shlb
das
xchg
arpl
lcall
mov
loop
add
pop
loope
sarb
sub
lods
idiv
lock
rclb
icebp
cld
lods
insb
lea
xchg
inc
push
scas
inc
aas
shll
xchg
dec
idivl
cmpsb
stos
rcr
xor
adc
pop
aaa
sub
fnstenv
jo
and
fnstsw
inc
adc
jo
test
dec
ss
and
mov
jnp
xor
push
pop
je
jge
push
push
push
imul
stos
les
jge
push
rcll
mov
cmp
inc
dec
cmp
leave
mov
incb
out
jge
and
and
mov
test
push
inc
lret
push
jge
mov
xor
sbb
dec
xor
jmp
ds
cmpsb
mov
jno
aad
fcmovb
cmp
dec
jno
mov
adc
arpl
xchg
loopne
aam
pop
imul
cs
ds
into
xchg
aas
dec
imul
call
std
popf
rcrl
scas
pop
icebp
enter
pop
xchg
xchg
xchg
ss
or
mov
dec
pop
dec
xor
jnp
xlat
leave
lods
pop
fs
mov
in
mov
xchg
xor
xchg
pusha
out
in
das
movsl
movsb
clc
aaa
sub
jmp
fwait
lcall
scas
out
push
sarb
dec
xchg
adc
mov
jae
and
iret
and
fwait
leave
loop
jno
mov
mov
and
mov
adc
ss
adc
js
into
jae
adc
jl
fisubs
pop
mov
fs
faddl
out
loope
movsb
fucom
or
cmpsb
adc
repz
xor
cwtl
loope
adc
or
xchg
cmc
pusha
or
popa
imull
add
mov
cmp
and
jo
sub
loope
test
lds
rol
adc
mov
jnp
ret
int3
jle
sub
xchg
mov
leave
fbstp
idivl
inc
call
pop
xchg
inc
pushl
lret
data16
repnz
pop
insb
jl
pop
js
mov
sti
jae
xchg
mov
mov
insl
sahf
and
pop
fiaddl
push
cmp
xchg
mov
rcll
adc
lods
pushf
dec
mov
or
in
mov
ja
pop
andl
adc
out
xor
jp
mov
lea
mov
push
fistpl
mov
bound
mov
cmp
ljmp
mov
aaa
dec
mull
mov
std
push
cwtl
mov
addb
mov
icebp
out
push
mov
mov
out
int3
fistpl
jo
jns
test
sub
negl
pushf
mov
xor
cli
xchg
aas
int3
in
shrl
stos
dec
sub
cmpsb
fidivrs
mov
mov
test
out
add
or
and
mov
in
jns
mov
shll
add
dec
jns
mov
sti
lods
ffree
cmp
push
out
jmp
cltd
lock
sbb
ljmp
sarb
xchg
hlt
dec
jge
mov
addr16
cmp
jne
cs
roll
icebp
xlat
inc
adc
ds
push
sbbb
popa
cmp
ss
xor
mov
daa
mov
ds
sub
into
sub
jg
jne
les
dec
insb
pushl
jecxz
aaa
pop
int
insb
mov
xor
inc
int3
dec
ja
adcl
dec
adc
pop
cmp
out
adc
mov
rcrl
hlt
sbb
inc
and
ret
jno
popa
inc
or
mov
sbb
pop
adcl
or
test
loopne
and
and
stc
loop
pop
and
in
add
jo
fld
dec
or
mov
lock
hlt
stos
icebp
push
cltd
or
stos
aam
mov
cmp
cmp
shl
pop
shl
mov
outsl
xlat
mov
mov
cmovnp
imul
jns
scas
ret
pop
inc
ljmp
outsl
lds
out
or
mov
daa
inc
mov
sbb
add
pop
fadd
pmuludq
scas
out
mov
andb
sub
mov
insl
push
mov
pop
cld
test
ret
imul
dec
sub
add
inc
fadd
push
fisubrs
adc
mov
or
adc
xor
pop
ret
and
mov
xchg
mov
loopne
pusha
xor
js
xor
cld
mov
jb
jmp
push
jle
push
xchg
xchg
pop
pop
dec
pop
stos
push
push
jle
adc
lods
mov
fisttpl
push
jnp
and
and
cwtl
xor
ret
test
mov
sbb
sbbl
push
aad
addr16
push
mov
in
in
add
movsl
fwait
jp
ret
sbb
inc
neg
adc
xor
clc
and
into
xor
arpl
add
inc
lods
adc
adc
adc
push
jge
lods
jp
popf
fistl
push
pusha
ror
pop
mov
daa
push
imul
pushf
jp
scas
push
int3
js
cli
jno
mov
lahf
scas
cli
test
cmc
lds
cltd
fimull
cmp
movsl
movsl
push
ret
mov
pop
lods
test
jo
decl
push
test
cmp
wbinvd
cmp
icebp
jo
rcl
es
or
icebp
jmp
inc
jbe
sub
jo
aam
leave
cmp
cmpsl
add
lods
jle
sbb
pushf
pop
xchg
push
cmp
gs
je
xchg
orb
push
movsb
mov
ds
jmp
loopne
mov
push
mov
cmp
dec
push
insl
imul
ljmp
out
xchg
or
jb
jmp
or
jge
sub
push
sbb
xlat
lcall
stos
and
popf
pop
je
xor
or
enter
ljmp
jl
jg
xor
sarb
bswap
or
inc
fcomps
jp
adc
test
popf
stc
ljmp
js
stc
xchg
xchg
inc
dec
rolb
and
inc
leave
sub
cmpsb
mov
fcomps
cmp
cmpsl
lea
jge
fwait
and
test
xchg
shl
es
adc
je
fiadds
sbb
ja
out
movsb
jo
je
fistps
clc
shlb
fnstsw
pop
cld
push
stos
xor
out
add
cmpsl
arpl
loopne
adc
fcoms
lret
mov
mov
imul
jmp
or
insl
sbb
scas
pop
cld
sahf
fimull
inc
int
int3
push
js
mov
cmpsb
push
jp
loopne
sub
mov
jmp
insb
aas
scas
xchg
les
imulb
movsb
or
cmp
push
outsl
fwait
sub
adc
out
test
and
call
nop
push
sub
frstor
test
jp
cmp
mov
or
fcmovnu
out
iret
out
pop
hlt
pop
loopne
add
fistpl
nop
xor
and
or
jge
add
cltd
inc
cmpsb
dec
push
stos
bound
mov
testb
mov
jl
lock
scas
lds
sub
jp
mov
cli
sbb
mov
push
je
mov
pop
test
imull
insb
adc
xor
ret
fdivrl
jbe
mov
ret
mov
or
fsubrs
xchg
xchg
inc
subl
in
pop
sbb
pop
or
inc
rcl
fcompl
sbb
leave
das
add
pop
stos
or
adc
mov
stc
sbb
test
sbb
ficoms
xor
pop
cmpsb
mov
xchg
int3
pop
rclb
adc
mov
call
gs
fdivs
push
shrl
mov
xor
mov
cmp
push
aaa
outsl
xor
cmpsb
jmp
sub
mov
mov
add
inc
push
jb
scas
repnz
jae
mov
mov
lds
fadds
xchg
or
or
and
dec
inc
fs
leave
xorb
sub
stc
adc
fldl
jl
movsb
or
and
call
mov
push
inc
jge
loop
test
and
std
repz
shlb
outsl
lods
sbb
xor
test
sbb
or
popa
add
das
aad
inc
ret
test
dec
clc
lret
pop
or
cltd
call
shrl
mov
xlat
or
ja
pop
and
test
imul
pop
xchg
cmp
stc
dec
rcll
add
dec
cwtl
dec
pushf
movsb
pop
cmp
xchg
mov
fs
mov
ja
mov
mov
sbb
popa
cmp
icebp
mov
fwait
xchg
popf
jle
xchg
sbb
sbb
adc
pop
xor
xor
jge
sbb
xadd
mov
xor
ror
pop
nop
xchg
cmp
je
add
or
cltd
sahf
or
lret
mov
addr16
adc
pop
imul
push
lods
pushf
mov
or
pop
push
data16
fiaddl
jg
pop
pop
inc
jg
jmp
out
shll
loopne
cmp
pusha
ret
mov
cltd
xchg
or
push
jmp
out
xor
pop
sbb
outsl
pop
jb
loope
in
push
xor
sbb
divl
jb
test
shlb
adc
insb
lahf
seta
push
sub
loope
and
stc
inc
js
or
ret
sub
sbb
sbb
pop
pop
jne
int3
jg
popf
sub
pusha
push
push
imul
int3
xor
push
jns
js
and
imulb
pushf
xchg
add
lcall
pop
scas
and
aam
imul
iret
dec
loopne
pop
cwtl
mov
xchg
sbb
fildll
pop
int
push
mov
icebp
arpl
cmp
adc
push
xorb
push
add
out
ljmp
lret
pop
add
dec
xchg
jne
jle
mov
or
push
xchg
ljmp
cmp
jno
mov
jl
add
jg
int
dec
ffreep
jmp
mov
ds
es
es
xor
and
pop
inc
xor
mov
add
inc
or
pop
cmp
inc
jg
test
repnz
add
cwtl
ljmp
pop
pop
pushf
inc
int
out
repz
ds
dec
mov
xorb
cs
xor
jecxz
xchg
out
push
cmc
sti
inc
mov
inc
inc
mov
lods
add
test
in
push
adc
nop
sbb
cmc
xchg
stos
pusha
cld
sbb
adc
inc
sahf
or
mov
cmpsl
mov
testb
adc
push
loope
or
insb
jge
mov
xchg
insb
mov
lods
or
mov
jecxz
ja
imul
or
cli
mov
jle
push
aaa
jae
adc
pcmpeqw
dec
and
jnp
loope
cmpb
xlat
mov
pop
aam
push
dec
rolb
push
lahf
outsl
lods
jp
outsb
into
jge
es
dec
in
jecxz
shll
pop
cwtl
fstps
popf
cmpl
push
inc
stc
cmp
cld
add
lahf
call
mov
xchg
pusha
mov
lahf
in
es
mov
jge
lret
xchg
test
sbb
sub
into
mov
inc
les
xor
add
lods
or
and
mov
inc
pop
push
dec
mov
pop
xor
aas
add
xchg
roll
std
shl
inc
repnz
int3
push
jl
clc
add
xchg
mull
subb
jg
mov
and
mov
push
orl
aad
int
dec
jmp
cmpsl
not
test
inc
clc
insl
test
and
sub
inc
test
push
inc
xchg
and
ja
sahf
pop
cmp
mov
loopne
push
mov
enter
adc
xor
jecxz
push
ret
popf
inc
testl
xor
movb
xor
adc
sbb
fbstp
inc
fbstp
fcmovbe
cmp
fcompl
cmp
jae
mov
sub
das
int
sub
or
cmp
je
xchg
xorl
lea
mov
inc
gs
or
cld
push
and
jbe
and
lock
mov
pusha
subl
xchg
and
lahf
xbegin
sbb
push
adc
lahf
cmc
cmp
je
mov
lret
ret
clc
or
fldl
jno,pt
lock
cmp
sub
fsubs
mov
lret
inc
jno
mov
add
and
lret
add
mov
mov
lods
cmp
ja
cmp
dec
call
cwtl
lret
pop
cmpsl
lret
pop
imull
xor
sub
mov
add
out
imul
xlat
sub
adc
sub
lock
sar
sbb
and
lea
imul
notl
jl
mov
sbb
fs
jbe
repz
test
dec
gs
cmp
and
in
scas
fs
dec
pop
mov
dec
ja
mov
repnz
xchg
push
fildll
mov
popa
icebp
pop
or
mov
jg
imul
and
in
jns
andb
movsl
and
lret
ja
test
insb
xchg
notl
mov
es
mov
call
lcall
mov
sti
sbb
add
mov
ficoml
movsl
mov
out
adc
jg
idivl
inc
enter
mov
pop
sti
imul
popf
repnz
xor
sahf
enter
add
pop
sbb
icebp
shlb
jecxz
xor
or
or
push
mov
and
into
mov
mov
or
xchg
xchg
lahf
in
mov
std
or
les
or
inc
xor
mov
and
xchg
fstpt
adc
fdiv
sbb
jb
ds
nop
add
jmp
add
and
clc
xchg
push
mov
inc
dec
sbb
ffreep
lock
lahf
repz
jmp
icebp
xor
or
fsubs
imulb
pop
into
push
or
das
push
xlat
bound
add
dec
lods
or
or
pop
and
pop
arpl
inc
cmp
fcmovnb
mov
pop
jbe
cmp
out
push
arpl
sbb
in
cmp
nop
ja
cmp
lahf
cmpsb
mov
cmp
icebp
mov
orl
daa
into
add
out
rcll
insl
mov
ror
dec
adc
adc
in
insl
and
jo
daa
stos
inc
or
mov
push
pushf
dec
and
cmpsl
and
inc
dec
mov
cmp
and
movsb
pop
repnz
mov
cmpsb
pop
imul
and
in
jns
jne
insb
mov
jb
xlat
push
into
xchg
loope
or
dec
push
in
sub
mov
addr16
and
pop
push
iret
xchg
mov
dec
adc
adc
mov
xlat
lcall
nop
stos
enter
adc
dec
in
sbb
in
in
cmp
and
mov
out
rcll
and
stc
jbe
ljmp
mov
pop
xchg
aad
pop
das
lret
add
inc
xor
sub
in
mov
incl
add
xor
xchg
fcomps
sub
movsb
jb
add
fnsave
pop
movsb
pushf
jle
dec
pop
in
xchg
sbb
mov
pop
std
pop
pop
xlat
mov
enter
enter
sub
ljmp
fisubrs
mov
nopl
int
sbb
mov
pop
dec
ret
pop
cmp
pop
push
out
adc
pop
sub
mov
leave
mov
jo
mov
mov
fiaddl
push
cmc
pusha
dec
jae
in
fnstcw
sub
adc
jno
jle
push
jb
fbld
rorb
mov
bswap
mov
adc
jnp
fcmovu
ljmp
in
test
fwait
jge
push
and
dec
imul
dec
xchg
lock
cmc
sub
mov
rcll
mov
cmp
or
push
xor
mov
fs
dec
adc
jp
adc
fwait
add
jle
mov
sbb
loopne
pop
pushf
sbb
push
idiv
adc
pop
nopl
das
fidivl
mov
push
mov
sahf
outsl
sub
mull
lahf
sub
inc
hlt
mov
cmp
mov
jle
dec
mov
and
inc
cmp
or
outsl
adcb
and
mov
stc
jg
mov
lret
pushw
mov
and
jg
pusha
jno
or
xor
or
dec
xor
dec
stos
xchg
jp
out
cmpsb
push
addr16
movsl
add
insb
xor
lds
cmpsl
in
fstl
in
sub
mov
pop
shrl
jle
les
daa
enter
and
aaa
and
cld
or
pop
and
dec
fiaddl
mov
push
add
bound
test
xchg
movsb
and
jb
mov
inc
and
aaa
icebp
call
jl
cltd
in
pop
inc
loop
mov
mov
push
add
rcl
mov
sahf
in
push
std
mov
jnp
jb
lock
xchg
clc
jb
into
out
divb
jne
fucomp
rcrb
fcmove
movsb
pop
mov
sbb
mov
roll
add
adc
dec
dec
clc
push
and
lcall
cltd
call
mov
js
sbb
das
cmpsb
outsb
and
scas
or
movsb
pushf
cmpsl
flds
adc
cmp
mov
cmpl
fmuls
cmp
dec
ja
jle
test
ret
in
xchg
pop
scas
or
lock
mov
lcall
aam
push
xchg
out
mov
or
stos
not
test
ja
insl
je
dec
shr
aaa
adc
addr16
sbb
mov
mov
int
jmp
out
mov
inc
mov
and
cmp
dec
and
test
jle
packuswb
iret
out
or
or
icebp
test
xchg
xchg
mov
test
xchg
ret
mov
mov
dec
mov
dec
mov
add
js
pop
or
cmovno
cltd
outsl
aaa
ret
xchg
aaa
sbb
and
xor
scas
mov
repnz
xchg
cwtl
rolb
xchg
sbb
js
mov
shll
adc
je
lock
add
jecxz
sub
push
das
xchg
lcall
mov
and
fdiv
xor
adc
out
adc
jb,pt
push
xchg
xor
dec
sub
dec
add
xchg
dec
cmp
dec
push
xlat
mov
clc
pop
add
or
mov
add
stos
fcmove
mov
sbb
lods
pushf
inc
xchg
fcmovu
cmc
xor
cmp
sbb
and
cmc
fisubs
loope
nop
xchg
insb
mov
push
mov
es
das
pop
adc
adc
aad
mov
adc
mov
repz
sub
pop
mov
push
mov
jns
xor
mov
out
push
jmp
das
xor
loop
or
loop
cli
stc
andl
or
add
pop
or
sbb
imul
out
js
insl
adc
dec
pusha
xchg
pusha
adc
mov
cli
jae
adc
outsl
pop
push
mov
mov
xchg
fneni(8087
in
xchg
cmp
add
push
xor
pop
xchg
int
arpl
xchg
sub
lret
dec
mov
pop
imul
jl
push
insl
cs
imul
dec
dec
repz
loopne
cmp
xchg
cmp
push
xchg
mov
adc
cmpsl
cmp
mov
pop
mov
and
ja
call
loop
pop
add
js
inc
sti
negl
dec
popa
scas
and
xor
dec
daa
pop
mulb
xchg
pushf
and
je
out
jbe
js
daa
in
jb
jae
adc
fwait
and
mov
xchg
leave
push
inc
xchg
les
inc
sbb
test
pop
adc
jg
clc
pop
fdivr
andl
cmp
pop
jnp
stc
call
inc
outsb
mov
inc
fwait
or
test
or
stos
jecxz
xchg
sbb
fsubrl
cmp
sub
int3
dec
mov
ja
inc
cmp
push
movsl
xchg
xor
loop
mov
xchg
mov
mov
mov
les
out
in
jnp
insb
mov
out
sub
mov
xor
int
push
enter
std
mov
xorl
cmp
push
int
fildl
pop
cmpsb
int
rclb
push
push
or
add
arpl
int3
xchg
push
pop
xchg
bound
addb
mov
shrb
xchg
or
dec
xor
fists
push
scas
out
mov
mov
sbb
rorl
mov
movsb
cmp
sbbb
cmpsl
rcrl
in
data16
jg
cwtl
pop
mov
and
dec
mov
rcll
pushf
dec
cmpsb
in
jle
lcall
push
pop
aam
or
dec
jmp
inc
stos
in
insl
xchg
shlb
testl
mov
test
cmpsb
pop
adc
sub
push
sub
pop
cmpsl
mov
stc
mov
add
stc
adc
mov
jp
aaa
push
aam
adc
pop
cmp
dec
or
out
js
lret
cmp
negb
mov
pop
leave
xchg
outsl
adc
xchg
vcmpss
je
jg
add
jne
mov
and
lods
cwtl
sbb
push
lods
fldt
hlt
or
xor
lcall
pushf
xchg
rcll
cltd
inc
jmp
xor
int
mov
rcrl
dec
add
cmp
ret
and
imul
pop
fcom
in
cmp
movsb
mov
nop
mov
inc
cmp
outsb
pop
in
fs
repnz
push
jns
les
sar
outsb
jns
xor
sbb
pop
dec
pop
jns
in
and
jbe
inc
shlb
sbb
push
cmp
cmp
rcll
pop
push
inc
and
fistps
xchg
clc
sahf
jbe
push
or
jle
mov
push
add
lods
mov
fidivrs
xor
sbb
push
or
pop
mov
fidivrs
add
and
loopne
mov
int3
xchg
mov
xchg
shrb
xchg
ret
lret
outsb
fists
jmp
scas
add
ss
sbbl
xchg
shll
out
lcall
ds
push
push
cmp
xchg
leave
in
into
cld
adc
out
in
iret
loope
fiaddl
push
sub
lcall
popa
dec
int3
iret
xchg
push
fmull
mov
jecxz
idiv
hlt
call
test
negb
ror
outsl
ds
mov
sub
dec
test
inc
lods
daa
nop
jb
xorl
ficomps
je
lahf
mov
add
cmp
gs
jge
sbb
fdivrp
add
stos
iret
rcll
lahf
sahf
les
inc
in
jnp
gs
dec
mov
inc
push
addr16
push
sub
cmp
fisttps
add
out
push
mov
imul
stos
cmp
orb
mov
sub
sti
scas
out
fwait
mov
cmp
test
in
or
lea
cmp
lods
xchg
fsubrs
fidivrl
gs
out
ret
in
lds
jecxz
daa
cs
ja
inc
pop
sbb
push
sbb
adc
add
loopne
add
inc
sti
cmpsl
sbb
lret
mov
movb
ror
cmp
push
pop
push
push
les
scas
and
sbb
sub
enter
pusha
cs
test
cwtl
gs
add
popa
lods
cmpb
test
ja
push
sub
int
stc
rcll
jge
mov
aam
mov
test
mov
push
js
pop
mov
adc
jbe
fwait
sarl
xor
pop
loope
mov
lock
stc
dec
loop
pushf
iret
mov
testl
xchg
pop
fnstenv
in
cli
lcall
dec
sub
scas
xor
sbb
cmp
shlb
ja
mov
mov
outsb
ror
pop
jbe
mov
shl
dec
cmpl
mull
inc
rolb
mov
xor
out
jne
lcall
add
pop
inc
sti
or
mov
xor
es
idivb
ffree
stos
addb
ret
adcl
mov
xor
faddl
imul
sbb
jl
and
and
pushf
incl
mov
dec
jne
cmp
inc
xor
outsl
pop
xor
rol
movsl
or
pop
sti
cltd
pop
push
aas
js
mov
mov
mov
cltd
and
cld
push
adcb
adc
push
sub
out
imul
movsl
and
clc
ss
aad
les
dec
sub
jo
lcall
dec
lods
mov
mov
mov
adc
pop
adc
test
mov
and
std
dec
cli
gs
jmp
movsb
cwtl
dec
mov
bound
adc
les
mov
xchg
push
sbb
ss
sbb
fsubrs
mov
pop
iret
pop
ds
inc
xchg
cmp
test
test
dec
push
fsubrs
shl
mov
les
push
pusha
inc
mov
ret
cmc
js
jno
out
jns
popl
shlb
in
xor
bound
xor
and
or
push
pop
sbb
pop
xchg
shrl
push
mov
idivl
clc
pop
cmp
or
pop
in
test
mov
cmpl
dec
adc
fistpl
jge
xchg
push
and
mov
ret
mov
sbb
cltd
orb
psllq
int3
out
xchg
loopne
ret
add
jo
xchg
ljmp
pusha
xchg
dec
mov
dec
cmp
incb
mov
je
into
rorb
or
sbbl
aas
cli
pop
pop
insb
xor
fnsave
sbb
push
clc
pop
dec
push
dec
repz
fdiv
clc
stos
sbb
std
dec
pop
adc
mov
add
pop
imul
mov
mov
ret
xchg
into
mov
scas
dec
sbb
adc
add
iret
add
lods
jmp
or
push
sbb
ret
sbb
jne
bound
inc
xor
leave
xchg
adc
shll
add
mov
loop
xor
dec
cli
lret
outsb
mov
sub
in
scas
loopne
int3
test
jbe
pop
sub
and
sarb
popl
push
cmp
adc
stc
hlt
fisubl
hlt
jo
je
push
mov
mov
lds
jecxz
fildll
dec
jecxz
xchg
adc
and
sub
mov
dec
mov
inc
mov
jg
mov
andl
push
arpl
andl
sbb
add
and
loop
mov
fbstp
xchg
mov
inc
mov
aam
roll
sbb
inc
pop
sbb
stos
push
std
adc
mov
mov
mov
xchg
testl
out
fidivs
lds
int3
adc
cltd
pop
adc
insl
lea
dec
dec
fdivr
dec
call
movsb
jae
mov
call
dec
xchg
push
jne
pop
shll
cli
jmp
je
loop
sub
mov
adc
das
push
sarl
ja
mov
pop
sub
sbb
dec
call
jae
sub
js
cmc
leave
xchg
xor
cmpsb
xor
scas
outsl
lcall
dec
xchg
cmpsl
addr16
sbb
lods
mov
dec
xor
push
sbb
loopne
test
mov
and
sub
push
or
pop
je
rol
xor
mov
xchg
out
aad
aaa
sbb
cwtl
inc
ja
ret
jbe
adc
push
and
xchg
jmp
sub
aaa
mov
jo
and
mov
sub
in
sbb
xor
xchg
dec
jge
mov
pop
popf
rorl
mov
mov
sub
movsl
inc
or
out
jp
out
les
daa
pop
inc
pop
cmpsl
outsl
sub
add
or
adc
jecxz
out
mov
sti
mov
mov
cmp
loope
sbb
or
jo
in
or
or
sub
push
lods
imul
or
pop
cmp
fwait
ss
ljmp
dec
andl
nop
mov
stos
test
push
insl
fisttpl
scas
dec
cmp
push
or
lods
mov
in
in
sbbb
imul
cs
pusha
lcall
add
out
xor
dec
or
js
mov
shl
jbe
sbb
xlat
push
adc
loopne
not
mov
and
mov
lock
push
bound
jp
idivb
dec
roll
sbb
lock
jg
int3
ss
mov
aaa
shrb
push
xor
ss
lock
push
pop
jnp
negl
rorl
adc
repnz
mov
ljmp
shr
cmp
push
inc
jl
movsl
xchg
dec
push
les
inc
sub
imul
ret
data16
test
mov
sti
mov
xchg
jnp
push
cwtl
ds
mov
inc
sub
jg
stos
pop
ss
cmp
xor
lret
inc
insl
mov
sbb
push
mov
je
pop
pop
sub
orb
ljmp
scas
vmovlps
push
nopl
clc
out
xchg
cwtl
cmp
and
rcrl
push
lods
je
add
int
fwait
vcvtsi2sdl
or
ja
mov
push
dec
cli
jns
scas
pushf
int3
test
test
sub
push
movsl
aas
inc
xor
mov
inc
and
mov
pusha
sbb
mov
out
mov
pushf
jl
imul
jl
mov
cltd
adc
push
test
jmp
xor
jg
and
push
sbb
mov
sbb
dec
les
sbb
mov
add
das
flds
mov
push
inc
and
or
js
lock
and
aaa
sub
in
adc
pop
pusha
loop
pop
pop
dec
or
idivl
std
xchg
add
and
inc
pop
rolb
push
push
or
popa
add
xlat
or
ficoms
int3
iret
rolb
mov
dec
mov
push
loopne
pop
jecxz
cmp
xor
or
mov
jecxz
jmp
jnp
lcall
sub
test
mov
cmc
push
mov
arpl
sub
cmp
in
inc
and
push
pop
and
sbb
stos
and
inc
pop
mov
mov
jne
nop
sbb
repnz
inc
in
pop
sahf
out
cmp
js
inc
xchg
scas
and
push
loopne
shll
or
sub
mov
mov
stos
mov
adc
stc
fidivrs
ds
and
pusha
pop
xsavec
xor
cmpl
out
fwait
js
push
arpl
lret
bound
xor
rcrl
int
popa
int3
inc
push
and
lret
pop
xchg
xchg
ljmp
outsl
imul
mov
push
pop
mov
cmpsb
xor
mov
cmc
sbb
and
mov
add
pop
int
mov
icebp
int
test
push
rolb
popa
nop
hlt
cmp
mov
shll
add
sub
adc
add
test
loopne
push
popa
arpl
xor
repz
push
cmc
mov
inc
mov
mov
aam
lret
nop
lcall
add
aaa
mov
pop
push
inc
cwtl
jmp
sbb
jmp
mov
ljmp
sarl
aaa
sub
lods
enter
xor
push
imul
rcrl
sub
pushf
loopne
jbe
inc
push
in
pop
cltd
or
daa
add
and
mov
add
pop
jecxz
decl
xchg
ret
loope
loop
pop
cmp
mov
bound
sub
popf
jl
and
int
ja
in
fisttps
mov
mov
ja
into
jge
int3
rclb
or
jnp
or
cs
out
push
lret
xlat
cmpsb
repnz
iret
ds
fwait
sarl
push
xchg
cmc
inc
sub
stos
shl
test
in
xchg
fs
flds
test
enter
cltd
gs
out
add
push
fadds
mov
jnp
mov
cltd
xchg
sub
adc
sub
in
push
rcr
push
nop
pop
and
jp
aam
xchg
loope
ret
mov
addl
xchg
xchg
xchg
sub
jo
add
je
xor
dec
lods
and
push
cltd
daa
pop
push
mov
xchg
idivl
xchg
mov
movsl
mov
test
mov
cmp
jae
pop
sbb
push
adc
out
mov
inc
aas
in
in
stos
lret
sub
inc
mov
rcll
adc
adc
sti
jbe
cld
dec
sub
xor
xor
mov
push
pop
push
lods
dec
adc
jnp
adc
mov
push
lock
adc
movsb
sbbl
mov
cs
out
int3
fstpl
es
fldenv
sarl
pop
test
loope
stc
mov
sub
sub
lods
cmpsl
hlt
mov
insb
lret
and
sbb
mov
push
nop
test
xchg
add
or
cld
ss
stos
xchg
loop
add
data16
push
mov
js
xor
xor
push
int
adcl
and
xchg
cmp
push
pop
mov
sbb
icebp
in
into
test
loopne
dec
arpl
push
cmp
xor
stos
in
xchg
sbb
bound
sti
xchg
addr16
nop
lock
xchg
inc
sub
dec
sbb
push
movsb
adc
enter
jle
lods
jns
jecxz
shrb
jp
dec
gs
pushf
xor
rol
push
xor
adc
pushf
sub
sub
sbb
dec
fucomp
test
jle
test
sub
mov
iret
mov
movb
orb
and
movsb
ret
enter
mov
mov
ds
mov
lret
out
movsb
ret
aam
pop
lock
aad
push
xor
into
jp
xor
sbb
xchg
imul
ffreep
and
pop
push
insl
shlb
mov
lds
jb
sub
xchg
jae
leave
jmp
call
cli
dec
or
dec
push
mov
aam
aaa
pop
pslld
sbb
jns
test
into
imul
jne
call
or
dec
adc
cltd
fwait
fistpl
xchg
repnz
pop
pop
mov
ljmp
adc
mov
lret
xorb
loope
pinsrw
ja
inc
pop
pop
repz
js
hlt
mov
jnp
ret
out
iret
icebp
insb
clc
sbb
mov
aas
jge
ret
lcall
sbb
call
push
icebp
jmp
insb
jge
inc
cmp
data16
inc
bound
mov
jge
leave
pop
xor
es
adc
cmpw
pushf
ss
mov
xchg
loop
sahf
int
out
popa
pop
movl
vsubsd
fistl
dec
in
push
inc
aam
push
rcl
fsub
or
arpl
xchg
xchg
cmp
outsb
fstpt
test
add
cli
dec
and
aas
adc
sub
lahf
cli
daa
or
not
insb
bound
mov
push
cmp
push
cmp
mov
cvttps2pi
je
lock
je
sub
arpl
es
inc
addr16
cmpsl
popf
cs
test
lret
inc
fstpt
out
call
and
pop
or
fstps
cmp
fwait
out
std
xchg
sahf
mov
shrl
loopne
adc
in
cmp
jo
stc
jecxz
adc
rolb
pop
ljmp
cmp
repnz
cmp
or
jle
jecxz
dec
test
and
js
sub
fsubrl
mov
or
mov
push
shlb
xor
sub
and
jge
pop
pop
imul
pusha
adc
dec
out
outsl
clc
rcr
lock
in
cmp
arpl
arpl
push
loop
movsb
xlat
adc
jo
adc
cmp
sahf
out
in
dec
cmp
outsb
jae
lods
xchg
inc
fimull
rolb
mov
push
mov
loopne
sbb
jnp
pop
add
mov
popa
ret
push
and
in
pop
leave
fs
repz
pop
cwtl
mov
cli
and
jno
mov
adc
popa
fldl
dec
mov
lods
jb
popa
xlat
dec
pushf
lcall
xchg
and
shrl
in
nop
mov
push
push
cmp
call
or
xchg
dec
xchg
mov
stos
pop
jl
scas
andb
movsb
push
bound
cld
or
lds
push
jp
sub
jl
mov
cmp
outsl
cmpsl
sbb
addr16
je
fisttpll
mov
movsl
pop
and
out
jo
sbb
mov
pushf
movsb
or
pop
subb
add
dec
test
lret
pop
out
out
test
ret
push
daa
popf
pop
mov
lds
or
enter
out
imul
pop
pop
sbb
movsb
push
and
sti
pop
push
stos
sbb
adc
dec
and
mov
scas
outsb
sahf
inc
push
mov
pushf
adc
and
mov
lock
pop
jb
add
sbb
push
movsl
mov
test
outsl
ja
sub
sbbb
mov
jbe
es
jg
xchg
and
lods
pop
jecxz
dec
xchg
aam
lahf
cmpb
add
lret
scas
sub
aas
lds
sbb
roll
mov
sbb
sti
jae
xor
lock
jbe
sahf
push
mov
add
dec
or
adc
jns
je
push
in
test
xchg
xorb
mov
push
movsb
movsb
pop
pop
pusha
jp
sbb
movsb
jns
stos
inc
mov
mov
cli
inc
cmp
jno
stos
jle
leave
into
lcall
inc
jb
mov
mov
mov
cmp
jae
mov
shrl
cmp
lahf
adc
inc
jge
jp
scas
mov
ljmp
xor
pop
nop
mov
or
inc
dec
push
int3
out
xchg
cmpb
xor
lds
jg
cmp
sbb
jl
out
popf
pop
insb
in
imul
sbb
cmc
cwtl
notl
cld
inc
cmp
fisubl
mov
ss
sub
sub
testl
insb
xchg
lahf
jmp
dec
dec
aas
in
mov
cmp
sub
jno
adc
cmpsb
dec
ret
mov
mov
in
xor
push
pushf
outsl
sbb
outsb
outsl
cmp
jb
mov
imul
jle
loop
imull
mov
push
insb
aad
pop
orl
loope
and
jl
je
imul
add
push
jp
stos
mov
idivb
inc
pop
ficoms
adc
xchg
mov
shll
and
jge
ss
or
cmp
stc
sub
push
daa
rol
arpl
push
loopne
mov
ret
push
in
inc
jmp
sbb
and
test
js
mov
push
sbb
xchg
ss
sbb
movb
mov
ficompl
cmpb
xor
pop
sub
mov
cmpsb
pop
pop
test
sarb
lods
inc
leave
jbe
adc
insl
inc
repz
imul
pop
subb
outsb
sub
xchg
mov
andb
ja
mov
cld
std
ret
scas
leave
into
sbb
adc
in
sub
push
add
idivl
pop
movsl
popa
pop
sub
out
inc
jg
or
jne
jns
jmp
iret
jg
mov
pop
xor
rorb
dec
icebp
sbb
inc
or
cmp
shll
and
fdivs
in
inc
subb
out
and
mov
pop
out
test
sub
ds
outsl
ljmp
xchg
call
jge
insl
imul
test
adcl
push
jno
pop
stc
movsb
shl
test
xchg
addr16
bound
mov
cmp
and
cmp
test
xchg
fisttpll
adc
sarl
sub
imul
ret
cmp
mov
push
fsubrs
out
cmpl
out
inc
pop
nop
inc
and
mov
sub
cmc
and
dec
hlt
sub
push
push
sbb
pop
out
inc
test
inc
mov
rcl
xchg
in
sbb
pop
inc
mov
jb
jo
stc
imul
inc
xchg
dec
dec
cmp
xchg
jg
inc
push
jb
test
icebp
mov
mov
sbb
jg
inc
jge
pop
mov
into
test
call
push
lret
sub
xchg
hlt
fistpll
add
ds
mov
ja
pop
addr16
jg
adc
cmp
lock
sub
fistpl
pop
push
sbb
loopne
add
lret
pusha
in
movsb
or
mov
scas
xchg
ds
jae
xchg
jp
mov
push
sub
dec
or
cmp
cmp
add
pop
rol
shlb
mov
icebp
lods
arpl
addl
test
and
cmp
xchg
jns
xchg
sbb
sbb
sbb
les
mov
or
fadds
fcoml
mov
jle
xchg
sarb
add
xor
jecxz
int
addb
mov
xor
call
faddl
in
ret
pop
mov
and
mov
pusha
insb
es
pop
outsl
stos
xchg
mov
xor
mov
xor
sbb
mov
negl
cwtl
mov
and
xchg
jnp
pop
rorb
mov
inc
or
fbld
inc
mov
pop
int3
jne
ret
xor
pushf
sbb
mov
xor
jp
rorl
rolb
xchg
addb
mov
lods
test
popa
sti
mov
push
cltd
test
data16
xchg
cltd
cmc
movsb
int
int
push
fcmovu
in
jmp
jg
rcrb
pop
xchg
shr
lods
jecxz
and
xchg
dec
pop
inc
gs
shr
jb
sub
inc
mov
adc
inc
lcall
mov
jns
in
push
sub
mov
add
jge
incb
cmp
addl
mov
std
pop
out
into
repz
lods
jle
test
leave
mov
aas
es
mov
ds
xchg
dec
pop
fyl2xp1
dec
stos
lea
jmp
aaa
cld
bts
cmp
sti
adc
push
xor
mov
pop
scas
loope
adc
ret
aad
xchg
push
push
pop
lds
pop
and
arpl
or
daa
xchg
lods
std
imull
sbb
aas
pusha
iret
add
sub
xor
repnz
js
pop
lods
push
js
negl
outsl
mov
mov
sbb
jmp
stc
popf
inc
inc
mov
dec
loopne
or
ucomiss
cmp
xchg
fmuls
stos
sub
cmc
in
xchg
or
lret
ror
fs
sbb
cmc
call
mov
mov
fisubrl
jno
and
push
mov
test
inc
addr16
mov
insb
in
or
mov
dec
xchg
inc
scas
lret
dec
std
cmc
pop
mov
mov
sbb
lret
pusha
add
xor
imul
out
aam
ds
arpl
insb
push
push
jnp
mov
ja
das
fwait
xor
into
add
imul
cmp
movsl
aam
push
icebp
cmp
mov
xchg
sub
xor
rclb
mov
dec
ret
aad
xor
into
fnstsw
adc
call
mov
lds
sbb
inc
pop
mov
push
adc
inc
fcmovnbe
dec
loope
and
loopne
push
inc
cmpsb
stc
fsubs
add
movsl
fcoms
inc
dec
loop
out
xchg
lea
adc
sub
jmp
dec
xchg
sub
je
bound
mov
pop
aaa
imul
push
insb
cs
lock
stc
sub
mov
jle
xor
lea
inc
or
aaa
fwait
and
add
xchg
pop
fs
filds
mov
in
push
jecxz
mov
add
add
lahf
pusha
mov
cmpl
xor
adc
std
add
push
pop
mov
xchg
test
pop
mov
cmp
pop
leave
pop
dec
aad
insb
cmc
jns
xchg
into
xchg
fadds
and
div
jo
jb
mov
xlat
out
cmp
mov
and
push
sbb
idiv
test
adc
fcmovnbe
repnz
push
mov
jnp
jne
adc
xlat
mov
xor
lahf
add
sbb
popf
pop
cmp
mov
test
into
std
push
ror
or
xor
jmp
sbb
xor
xor
punpckhwd
xchg
sub
mov
sub
sbb
faddl
scas
mov
lods
pop
jp
push
mov
in
das
mov
in
sub
jae
push
or
inc
ds
into
jns
or
mov
adc
dec
mov
addl
mov
and
sub
mov
mov
int3
cltd
sub
xchg
lahf
imul
mov
call
rcll
in
mov
mov
jmp
lods
out
xor
xor
sahf
das
jbe
jl
mov
adc
ljmp
push
lock
ja
adc
push
bound
int3
jp
rcll
adc
sbb
adc
mov
and
jns
lods
stos
jo
mov
and
notb
dec
orb
inc
movsb
push
or
insl
mov
jb
lahf
xor
cld
popf
mov
and
adc
cltd
fs
lcall
cmp
stos
xchg
imul
sbb
gs
sub
icebp
popf
test
pusha
loope
dec
inc
sub
mov
rcll
push
test
popl
mov
mov
push
mov
pusha
mov
jge
mov
mov
adcb
adc
mul
xlat
xor
jno
jle
sti
pushl
mov
inc
fists
icebp
das
jb
jecxz
mov
fstpt
es
pop
cmp
fwait
adc
adc
repnz
add
dec
shlb
decl
jg
sub
sbb
sti
mov
or
fldcw
inc
rcrl
enter
cwtl
sbb
cmp
or
adc
outsl
sub
push
push
sub
mov
sub
fsub
mov
xchg
pop
loop
xchg
pusha
cmc
mov
inc
les
scas
aad
xor
pop
add
xchg
loopne
std
enter
shl
adc
dec
repnz
pop
cmc
addr16
pop
lret
mov
adcb
or
outsb
or
dec
bound
imul
sub
or
inc
push
jne
out
cmp
cld
push
fistl
enter
dec
bound
pushf
ds
ljmp
aas
rol
inc
into
fcmovu
push
push
out
pop
lret
arpl
sub
sbb
aad
gs
push
jne
sub
adc
push
jge
insb
add
popf
repz
pop
sbb
jp
nop
sbb
sbb
inc
adc
repz
cmp
mov
pcmpeqb
addr16
push
movsb
push
mov
test
xlat
mov
test
test
fnsave
dec
xor
negl
lds
cmp
dec
out
js
push
xchg
pop
push
dec
push
jmp
shrb
hlt
mov
aas
into
pop
imul
pop
push
mov
pop
xor
pop
lods
scas
jp
icebp
sbb
jecxz
out
mov
mov
repnz
dec
jmp
outsb
test
in
aaa
cld
rolb
mov
xor
xor
pop
sub
lods
mov
cmp
leave
xchg
mov
push
mov
test
std
stos
inc
mov
popa
add
popf
cmp
fadd
int
dec
or
rcll
push
adc
insb
outsl
or
mov
fmul
div
xor
pop
mov
test
imul
gs
cmc
cmp
pop
movl
add
fcmovbe
add
ret
adcb
adc
test
ret
xor
inc
cmp
pop
cmpsb
mov
aaa
xor
mov
mov
andl
aas
repnz
loope
xor
loopne
int
or
cmp
repz
and
mov
jns
jmp
xchg
xchg
into
lods
mov
orb
pop
mov
lods
int3
sbb
mov
inc
sub
push
insl
repnz
stos
add
sar
pop
cmp
fsub
jae
mov
and
aas
lock
test
les
ds
lret
nop
xlat
outsb
and
fildll
aaa
shlb
add
and
loop
arpl
or
fwait
pop
add
mov
popf
out
fwait
out
test
lret
inc
add
sub
jg
inc
and
and
leave
push
call
push
outsb
inc
mov
jle
mov
fucom
mov
stos
lret
cmpsb
pop
movsl
scas
nop
jns
test
enter
cltd
lods
sub
xor
out
ss
shlb
sub
aam
mov
pop
loopne
lret
push
in
adc
and
fisttpl
mov
dec
fisubl
inc
aas
insl
sti
test
push
mov
or
mov
mov
sub
sbb
and
xchg
data16
xorl
xchg
cld
cmp
adc
lds
loope
pop
and
sub
and
stos
push
sbb
lret
cmc
dec
cmp
addr16
stos
iret
or
push
jmp
fstsw
dec
je
pushf
ds
push
lcall
inc
xchg
or
movsl
jbe
pop
push
inc
shr
push
sub
out
mov
sub
sbbb
push
stc
xchg
cli
subb
cmpsl
pop
mov
pop
jb
xchg
fistps
nop
adc
sbb
mov
stos
pop
andl
shl
loope
leave
in
dec
in
je
inc
call
xor
daa
mov
jne
jae
pop
in
push
xor
inc
pop
mov
pop
ret
sbb
push
xor
rcrb
or
xor
mov
cmpsb
sub
dec
push
scas
imul
aas
xchg
pop
leave
and
mov
hlt
or
mov
cltd
dec
pop
arpl
push
popa
cmc
loop
rcrl
adc
cmpsb
mov
in
ret
out
cmp
xlat
jge
addr16
push
lret
fcompl
and
pop
inc
inc
mov
mov
mov
cmp
ss
mov
int3
aad
adc
sub
pop
cwtl
cmp
jl
pop
nop
test
in
imul
sbbb
push
popa
clc
pop
mov
pop
je
inc
sahf
lret
sbb
mov
out
pop
jo
cwtl
movsl
stos
int
bound
cld
test
add
in
fstpl
cmp
pop
or
fwait
test
out
lods
loopne
jmp
mov
ja
rol
into
and
subl
mov
loopne
cld
jecxz
push
inc
mov
push
movb
push
inc
jae
pop
lods
jp
and
jnp
pop
hlt
pop
pop
sub
loope
cld
dec
pop
mov
adcb
add
sahf
inc
inc
mov
icebp
imul
gs
inc
sub
shl
outsb
mov
jae
sub
mov
test
and
mov
data16
or
dec
outsl
or
aas
into
negb
xchg
loop
xchg
mov
cld
mov
sahf
ss
sub
xor
xchg
adc
pop
jle
roll
dec
lods
mov
out
mov
insl
adc
les
stos
mov
nop
jge
es
xchg
mov
out
fisubrl
scas
add
pusha
cli
mov
mov
mov
mov
pop
pusha
xor
outsb
sub
push
xchg
mov
xor
mov
or
push
mov
add
gs
adc
ret
movb
shll
jl
rolb
or
mov
fstl
cs
sub
insb
push
mov
mov
sbb
fisttpll
xchg
cmpsb
iret
lret
movsl
aad
popa
clc
outsb
mov
loope
js
inc
add
test
movl
jge
mov
mov
fisttpl
or
cmp
mov
and
jb
leave
fwait
sahf
sub
mov
in
xchg
inc
jl
leave
jne
cmp
out
sbb
cltd
inc
jae
dec
sbb
in
outsl
jb
add
ljmp
push
xchg
out
das
or
xor
push
addr16
dec
push
add
mov
iret
and
das
inc
add
scas
test
push
or
pop
cmp
int
ret
xlat
push
or
and
and
jae
and
arpl
cmp
mov
nop
lock
sub
aam
xlat
gs
std
dec
arpl
inc
js
mov
out
and
pop
sbb
xor
test
add
outsl
mov
clc
pop
icebp
call
loop
push
push
jae
mov
inc
mov
ja
adc
insl
push
mov
js
adcl
or
inc
inc
roll
test
mov
movsl
ds
daa
or
js
push
sub
push
ds
data16
push
mulb
dec
hlt
cld
lods
dec
outsl
cld
mov
inc
ljmp
cmc
bound
mov
ljmp
std
test
xchg
mov
leave
and
out
adc
pop
push
ds
rclb
stc
rclb
jle
sbb
jge
cmp
shlb
inc
fldz
push
aaa
fs
adc
mov
push
sbb
cmp
mov
inc
sbb
sbb
mov
movsl
lret
and
cmp
sub
adc
out
dec
xlat
insl
fimuls
adc
test
jecxz
mov
sbb
jo
add
mov
call
mov
dec
movsb
and
xlat
mov
jecxz
test
daa
mov
pop
movsl
sbb
xor
or
adc
int3
imul
dec
movsl
push
mov
cmpsl
push
fisubs
loopne
jo
pop
pop
dec
nop
and
add
shl
and
loopne
pop
enter
bound
sub
orl
leave
enter
dec
mov
mov
xor
adc
or
and
cmpsl
push
xchg
out
aam
ja
adc
cli
sub
sarb
sub
sbb
repz
push
cmc
xchg
or
mov
mov
aad
xchg
pop
mov
fisubl
pop
iret
dec
int
out
mov
aas
subb
scas
data16
mov
cmpsl
fisttpll
push
mov
gs
decb
int
cmpsl
cltd
sbb
adc
mov
aam
or
jge
push
arpl
das
pop
mov
xor
inc
pop
imulb
add
or
ficoml
jno
pushf
int3
clc
lock
aad
mov
add
mov
add
adc
and
xor
lahf
jnp
pop
adc
out
shl
call
loop
aam
jl
cli
add
pusha
fiadds
popf
push
xor
and
xor
mov
mov
clc
jge
test
xor
repnz
sbb
outsl
fs
mov
in
hlt
out
pop
sti
and
fwait
mov
add
aas
addr16
adc
cld
stos
cmp
in
push
pop
pop
xor
lret
cmpsl
pushf
in
sbb
lock
sarl
add
push
fildll
stos
mov
adc
cmp
enter
jne
lahf
xorl
ret
cmc
adc
dec
ficoms
or
jmp
inc
aad
mov
rcrl
inc
push
cld
mov
imul
mov
mov
sub
rcl
inc
and
and
call
push
pop
mov
shrl
repz
stc
daa
scas
es
adc
loop
stc
mov
push
sbb
mov
int
movsl
cli
pop
lea
mov
cld
xchg
push
sub
push
lahf
shl
jg
icebp
ljmp
mov
stc
xchg
dec
mov
rorl
std
aas
into
les
rcrb
push
pop
pop
adc
push
ret
or
xchg
fisubl
jbe
adc
mov
ficomps
sbb
in
cld
add
adc
adc
cmp
stc
stc
jae
cwtl
call
adc
sbb
and
jo
bound
mov
std
les
jnp
or
ja
or
stc
adc
aam
lret
push
pop
loopne
ret
push
add
dec
fsub
and
shrb
jge
in
jae
add
daa
add
jle
ret
decb
fsubl
aaa
or
cs
popa
in
or
jecxz
xor
xchg
mov
cmp
es
jb
mov
fwait
lock
sub
scas
shll
aaa
cmp
mov
adc
ret
add
lods
adc
into
mov
leave
or
mov
aaa
nop
push
out
rolb
jmp
ljmp
xchg
dec
and
inc
push
inc
leave
jp
xor
mov
clc
push
or
inc
leave
mov
ja
push
js
jae
jmp
scas
or
loopne
mov
in
mov
mov
inc
inc
mov
cmp
xchg
sub
fs
mov
mov
or
lods
insb
shlb
dec
imul
xchg
fwait
inc
sub
ret
pop
mov
jnp
imul
in
xlat
cmpsb
mov
mov
mov
jp
mov
cmc
cmp
repz
ds
adc
and
mov
test
or
repnz
je
incb
jno
mov
js
js
mov
in
lahf
lods
lahf
push
cmpsl
fists
xor
pop
adc
in
test
dec
movsb
gs
push
xor
cs
stc
out
imul
and
fcomip
cs
cmc
fstl
aam
xor
loop
fldcw
mov
push
frstor
les
jl
add
mov
stos
sub
sub
pop
imul
outsl
xlat
mov
mull
shl
into
and
popa
mov
push
bound
cwtl
sbb
iret
xchg
xor
stc
ljmp
pop
mov
clc
mov
push
out
push
std
scas
adc
adc
xchg
in
fcmove
jge
int
subl
in
js
push
shlb
call
ret
imul
lds
rorb
and
clc
test
fcoml
lcall
std
aas
lods
fwait
andl
gs
icebp
xchg
mov
jecxz
leave
scas
fs
mov
call
bound
enter
push
dec
jmp
mov
es
out
out
pop
idivb
shl
add
or
cwtl
outsb
jb
fcoms
popa
addr16
xor
lahf
push
rolb
push
outsb
mov
int3
jno
test
cwtl
and
push
scas
jp
in
cltd
pusha
mov
or
mov
fwait
int
xlat
pop
loopne
shrd
adc
and
add
push
cmp
pop
idiv
push
shll
cmpsb
jecxz
dec
mov
ret
je
inc
sbb
movsl
lock
aam
les
leave
push
subl
std
adc
ret
jbe
cwtl
mov
in
jg
inc
xor
pop
das
xchg
mov
sbb
out
call
out
std
shrl
sbb
test
mov
iret
loopne
bswap
xchg
fcompl
fnstcw
gs
loop
mov
push
fcmovnu
aas
mov
sbb
xor
add
loopne
push
sti
jbe
roll
pusha
movsl
mov
mov
or
clc
dec
inc
jle
pop
cwtl
push
jl
fbld
test
xor
test
push
out
mov
dec
test
mov
loop
out
xor
insl
add
mov
out
add
scas
gs
push
or
pop
outsl
adc
or
sbb
mov
out
mov
inc
loope
outsb
cmpsb
enter
mov
cmpl
push
adc
fcoml
js
rolb
push
jns
xchg
jnp
movsl
sbb
pop
rcll
mov
adc
loop
lahf
jo
jg
imul
std
sub
nop
push
xchg
stos
jae
addr16
pushf
mov
mov
scas
adc
divl
xor
jle
clc
mov
jge
sbb
stos
repz
outsb
jg
out
sbb
dec
inc
add
popa
std
cmpb
pop
add
aam
mov
lds
mov
and
cltd
xor
mov
daa
ja
jle
fiaddl
std
jo
fmul
dec
inc
sbb
testl
inc
xchg
pusha
mov
in
lahf
inc
xchg
adc
mov
daa
pop
ja
hlt
pop
in
jno
mov
into
mov
jge
loope
cs
mov
adc
sub
clc
fucomip
mov
std
loopne
inc
repz
faddl
xor
test
das
or
neg
xlat
mov
pop
stos
outsl
clc
negl
push
pushl
sarb
fisubl
mov
inc
or
jno
mov
adc
pusha
push
rdtsc
jge,pn
lods
dec
aas
fs
inc
pop
aaa
mov
dec
jae
xor
into
jmp
ljmp
add
hlt
mov
add
imulb
shlb
test
in
adc
dec
cmpsb
sbb
ror
int
push
inc
cld
mov
jecxz
jecxz
push
cltd
lea
push
lret
xor
fs
mov
cmp
mov
ficomps
mov
fsts
test
in
push
stc
dec
imul
ficoms
sbb
push
mov
push
pop
in
dec
xchg
push
lret
into
pop
movq
sub
movsl
push
push
inc
rorl
pusha
loope
aas
je
push
loop
lahf
aam
shl
mov
push
lock
shlb
xor
push
movsl
add
pop
xchg
add
add
mov
repz
mov
mov
int
int3
sbb
aas
push
hlt
jae
nop
xor
pop
lock
and
stos
mov
repnz
pushf
or
ror
ljmp
mov
repnz
xor
jno
pop
in
shll
xor
pushf
scas
dec
leave
les
sub
rorb
mov
adc
dec
pop
xchg
mov
movsl
xchg
cmpsl
scas
xor
pop
or
gs
cld
loope
pop
mov
or
fildll
cmp
imul
testb
xchg
test
mov
inc
daa
xor
pop
mov
pop
popa
jo
leave
and
sbb
xchg
push
sub
enter
mov
mov
mov
loop
cmp
sub
insb
cld
test
xor
adc
sbb
mov
adc
movsb
sub
lds
aam
push
jae
ja
pushf
adc
nop
dec
adc
sar
mov
imul
or
add
cmp
cwtl
or
test
jle
rcrb
daa
in
xchg
sub
xor
mov
movsl
push
jno
arpl
loop
pop
test
or
and
pop
sbb
out
cmc
dec
mov
jl
scas
mov
out
in
call
cs
push
out
push
aam
mov
push
push
xchg
imul
cmpsb
jmp
xor
mov
lahf
in
imul
pop
dec
push
aas
insl
add
jbe
aad
mov
xor
pop
push
sub
fisubrl
mov
sub
sub
sbbb
outsl
cli
xor
aas
xchg
cmc
adc
shl
stos
repz
or
mov
or
adc
dec
or
sbb
test
repnz
out
stc
test
clc
and
and
es
xchg
cmc
xchg
mov
test
lods
mulb
addl
insb
mov
outsl
sub
popa
xchg
sbb
push
fiadds
scas
fcmove
leave
decb
dec
mov
xchg
out
cmpsb
aas
xchg
arpl
je
pop
idivb
test
out
push
cmp
out
xlat
bound
notb
ljmp
or
lea
cmp
or
jno
icebp
daa
sbb
push
adc
push
mov
in
jmp
mov
xchg
adc
pop
call
jp
mov
inc
dec
data16
enter
nop
add
pusha
and
mov
fildll
adc
sub
sub
in
ljmp
jnp
in
lds
das
test
inc
inc
adc
sub
cmpsl
imul
mov
jns
in
jg
fwait
ljmp
int3
lahf
cmp
inc
lcall
push
pop
outsb
xor
std
push
shlb
dec
inc
mov
push
outsl
rol
je
enter
shlb
xor
sbbl
push
push
adc
or
or
cmp
out
mov
fistpll
js
jbe
nop
jbe
mov
sbb
mov
test
in
mov
out
mov
jne
data16
add
add
hlt
popa
pop
push
repz
and
ja
mov
inc
mov
adc
movsb
clc
dec
fcmovu
arpl
shrb
daa
inc
jmp
mov
xchg
in
aas
shll
sub
pop
jne
popf
outsl
pop
mov
mov
jge
and
adc
sbb
adc
shrl
add
mov
mov
push
inc
out
pop
pop
lods
cmpsl
fidivrl
popf
sahf
cmp
xor
jne
xchg
push
push
mov
inc
int
fwait
pop
ds
sti
mov
dec
push
int3
xchg
jnp
and
jmp
mov
cmp
push
sbb
mov
adc
mov
sahf
out
mov
mov
jl
pop
xor
and
or
lret
pop
movsb
dec
stos
mov
mov
sub
cwtl
and
cmp
in
xchg
mov
or
or
icebp
mov
push
mov
lret
fucomip
popf
ja
jno
xchg
fcmovnbe
cmc
cmp
sahf
icebp
out
jo
ds
bound
negb
jb
shrb
mov
shlb
cli
inc
sub
sahf
adc
jae
sbb
xor
out
jne
push
mov
lods
sub
mov
dec
pop
enter
es
xchg
lods
jl
dec
orb
sarw
cmp
sub
xchg
sarb
test
lods
inc
dec
xchg
jo,pt
and
iret
mov
mov
add
sahf
rcll
imul
pop
or
xchg
and
adc
std
sbb
xlat
out
xor
daa
clc
and
mov
adc
imull
je,pn
push
xor
rcr
dec
out
out
loopne
sbb
loop
es
test
inc
pusha
movsl
mov
movsb
mov
stos
mov
mov
add
cmpsb
push
jmp
ds
pop
lods
dec
leave
sbb
mov
lods
enter
dec
jno
sub
sbb
push
sbb
mov
imul
mov
ja
push
rorl
cmp
das
data16
scas
push
aad
mov
ljmp
xlat
push
ds
shl
xchg
fildl
dec
mov
sbb
cmp
dec
movsb
roll
std
sbb
jge
adcl
sahf
dec
lods
sarb
jg
mov
or
sbb
push
stos
and
and
insl
xor
adc
neg
shl
repz
popf
pop
sbb
jb
fildll
sbb
inc
mov
lods
cmp
call
sub
fnsave
xchg
sbb
pop
inc
daa
xchg
imul
mov
lret
mov
fs
mov
test
adc
out
inc
push
jp
pop
xlat
push
mov
icebp
sbb
add
dec
loop
test
sbbl
cltd
loope
sahf
fildl
or
xchg
sti
mov
jbe
test
sbb
jl
shll
cwtl
fdivs
out
fstpl
fcmovne
test
insl
daa
mov
sub
or
icebp
cmp
in
adc
popf
pushf
sub
mov
movsl
nop
sbbb
fcmovne
jo
out
jbe
pop
dec
jl
mov
xchg
mov
jp,pn
or
sbb
mov
iret
lcall
gs
iret
divl
push
outsl
mov
pop
aam
lret
mov
mov
cmp
xor
ds
inc
outsb
mov
mov
pop
aam
sahf
test
push
and
lret
jle
ljmp
sub
mov
andl
sbbl
in
xchg
call
je
mov
call
sbb
jmp
ret
and
pop
out
cwtl
cmp
out
add
imul
test
pop
aad
in
enter
leave
push
je
repnz
sti
int3
fnstcw
mov
add
mov
cmp
mov
adc
shl
cs
cmp
loope
insl
test
mov
mov
out
ljmp
sub
fildl
orb
out
js
addl
jo
mov
jle
pop
xlat
mov
mov
aad
xchg
ljmp
push
shll
xchg
and
jg
sti
jge
ja
int3
jmp
and
mov
mov
out
pop
ja
popf
stos
and
and
add
jns
cmovns
ret
dec
cs
mov
stos
dec
push
mov
in
mov
pushf
iret
sbb
lods
or
data16
orl
fwait
mov
mov
shr
mov
dec
bound
in
mov
enter
adc
into
sub
jns
pop
cmp
cmpsl
dec
cld
into
pop
and
mov
and
adc
lcall
es
imul
fwait
push
addr16
mov
jp
lahf
hlt
add
cld
in
ret
sub
leave
sbb
and
inc
dec
mov
push
mov
fwait
sub
mov
inc
into
cmpsl
popa
or
fsubp
cld
pop
push
dec
shrl
mov
jb
dec
inc
add
xchg
inc
pop
repnz
insl
jge
shlb
xchg
cld
push
mov
and
fldl
test
fwait
jl
out
lret
pop
sbb
stos
in
and
es
mov
sbb
pop
ss
mov
push
std
jg
jne
mov
mov
std
inc
js
imul
dec
shlb
ljmp
adc
dec
ja
pushl
sub
or
inc
adc
cmpsl
inc
mov
jge
sbb
pop
insl
cltd
rcrb
repnz
shlb
pop
and
sarb
test
xor
mov
and
mov
sub
fdivs
add
fimuls
push
adc
cmp
push
jp
dec
push
mulb
sbb
loope
sub
imul
jecxz
pop
mov
and
fmuls
ret
in
inc
repnz
enter
test
and
lahf
dec
sbb
jne
das
fwait
pop
lret
out
int3
js
aas
pop
test
ds
andb
adc
and
insl
aam
gs
xchg
add
add
dec
mov
push
mov
test
outsl
mov
stc
cmc
outsl
out
xor
mov
cmpb
loope
cmc
fstpl
xchg
jbe
jno
rolb
add
out
scas
and
leave
stos
push
insl
sbb
das
lods
mov
sub
jp
clc
pushl
jp
cmc
and
jmp
ja
xchg
aas
jae
movsb
xlat
fisttpl
in
pusha
int3
sbb
or
rol
lret
nop
xlat
inc
loope
rcl
fldenv
mov
mov
push
popf
sub
push
iret
push
test
loopne
xor
xlat
cmp
sbb
push
pop
xor
aas
and
push
push
xchg
mov
xchg
dec
dec
addr16
or
lds
lss
push
insb
mov
ljmp
pop
ljmp
test
sarl
dec
aas
imul
icebp
nop
xor
ret
aad
int
sbb
cmp
inc
dec
roll
jno
or
xor
mov
sar
std
inc
cmp
clc
pop
jg
shll
sub
fstl
mov
or
popa
pop
aas
adc
aad
fsubs
dec
xchg
enter
add
rcl
push
in
pusha
cmp
push
sub
add
lret
sub
add
mov
inc
sub
push
cld
mov
mov
data16
mov
xchg
sub
inc
mov
pushf
mov
jno
jne
and
inc
lret
out
jo
fdivr
xchg
loop
leave
sbb
ds
stc
ficompl
aad
inc
push
dec
aaa
dec
push
push
mov
lcall
inc
push
xchg
test
in
add
push
lods
shrl
rcll
into
pop
pop
push
xchg
sub
les
jb
js
mov
adc
adc
ds
adc
dec
push
xor
jmp
arpl
lahf
cmp
cmp
xchg
add
icebp
and
xchg
mov
mov
imul
cmp
into
lock
xor
add
int3
scas
mov
push
pop
divl
or
fimull
ljmp
push
aas
pop
aas
mov
push
ret
cmp
sub
stc
add
mov
lods
or
shl
mov
mov
in
or
aaa
jge
sub
sbb
mov
jb
mov
add
andl
jg
push
pop
cmp
cmc
loop
pop
mov
bound
inc
je
in
pop
sbb
shl
mov
mov
inc
cmp
inc
ffreep
cmp
outsb
xchg
dec
fidivs
outsb
mov
sbb
jnp
out
adc
iret
imul
xchg
iret
sbb
add
popf
shll
orl
mov
xor
add
insl
sub
inc
jns
inc
dec
or
leave
mov
or
movsb
jne
sbb
mov
add
dec
pop
icebp
inc
cmpb
mov
and
mov
mov
dec
xchg
lcall
pop
cmpl
mov
mov
dec
adc
mov
sbb
jb
insb
lar
xor
sbb
push
stos
dec
in
mov
cmp
lahf
xchg
fs
faddp
insb
out
xor
fisubl
sub
add
sbb
cld
cmc
pusha
not
lds
aad
jge
das
notb
mov
xchg
xor
cwtl
out
fldenv
scas
popa
stc
imul
aam
test
lret
movsl
cmp
in
mov
mov
lret
lds
mov
leave
out
test
inc
insb
cmp
cld
cmp
dec
aad
outsb
ret
ja
pop
add
aad
add
xchg
in
cld
ljmp
dec
ds
add
jecxz
jo
int3
in
sbb
rolb
mov
lahf
mov
sub
jae
int3
adcb
les
xchg
xchg
cmp
push
mov
cs
das
fs
test
call
jb
or
lahf
lret
sbb
inc
int
out
out
adc
pop
mov
mov
subl
aas
jecxz
jno
xor
xor
add
pop
pop
repnz
into
repnz
inc
push
ss
hlt
mov
xchg
fsts
shll
fs
xchg
mov
cmpsb
dec
leave
jg
mov
jo
lahf
sarl
pop
aaa
sbb
push
addr16
das
out
orl
addr16
out
cmpsl
add
mov
dec
cwtl
repz
clc
cmp
out
xorb
into
out
inc
push
mov
mov
xchg
cmp
sbb
test
dec
imul
ss
push
in
mov
mov
data16
lock
push
bnd
pushf
stos
cld
push
fdivl
dec
in
and
inc
jecxz
xchg
and
dec
lds
push
dec
xchg
add
call
test
dec
insl
iret
lcall
jne
xchg
mov
loop
insb
dec
fldl
pop
add
jne
mov
daa
ljmp
adc
imul
test
inc
lret
mov
mov
sbb
cmc
xchg
mov
mov
cli
or
mov
jno
ja
fimull
pop
mov
addr16
iret
ja
ret
test
push
cmp
mov
lret
rcr
mov
cmp
push
jmp
shlb
test
lods
cmp
stos
cli
mov
mov
jo
push
xor
push
and
fimuls
repnz
repz
xor
gs
xchg
scas
sbb
xor
clc
xorb
mov
push
in
test
js
adc
push
push
xchg
jnp
stc
push
add
and
and
ljmp
bound
xor
xchg
pop
xor
gs
xor
jne
jmp
xchg
mov
jle
mov
xor
dec
jbe
aas
pop
push
stos
pop
daa
into
adc
call
stos
mov
cmp
sbb
gs
mov
push
sbb
scas
mov
mov
cld
sbb
daa
test
add
push
push
clc
test
sbb
cltd
and
loope
stos
enter
cmpsb
test
cmpsl
sbb
xor
aaa
lock
mov
pop
mov
nop
inc
ja
push
jle
lods
hlt
hlt
sbb
xchg
out
or
or
mov
in
add
adc
xor
test
sub
and
out
sbb
mov
dec
std
inc
push
das
push
lds
popf
mov
pop
lret
cltd
cmp
or
adc
ljmp
fstpl
mov
add
les
jp
cltd
xchg
sahf
xchg
adc
fs
sbb
sub
icebp
stos
mov
testl
rclb
dec
flds
lcall
sbb
add
xor
fists
lret
shll
mov
jecxz
dec
sub
iret
pop
jmp
ljmp
pop
mov
dec
jnp
jmp
push
shrb
sahf
jmp
xchg
divl
loope
mov
cwtl
dec
mov
mov
jae
rclb
push
lds
mov
repnz
xor
xor
push
bound
jge
jge
sti
jle
enter
not
fst
orl
and
cmpsl
sub
movsb
dec
mov
sbb
int3
add
push
leave
mov
pop
sbb
ret
pushf
loop
sbbl
fldcw
push
jge
rcrb
and
jb
gs
rol
push
push
push
xchg
int
mov
sbb
sub
test
daa
std
rcll
loopne
and
lret
mov
dec
push
or
jne
pop
xchg
inc
loop
jns
and
cmp
nop
push
test
sub
push
sbb
sub
mov
cmc
adc
push
mov
push
rclb
pop
xor
imul
sub
cmp
mov
jo
push
cmpsl
inc
mov
ret
xor
mov
aad
stos
xorl
fiadds
pushf
pop
and
loopne
shrb
mov
mov
mov
in
dec
nop
insb
bound
sbb
into
sbb
mov
xor
rcrl
inc
mov
dec
push
fsubrl
push
nop
lret
fwait
add
or
inc
adc
push
pop
mov
xchg
addb
lock
jb
imul
rol
dec
fwait
cmp
pop
xor
repz
gs
push
inc
hlt
lea
xor
mov
in
add
xchg
mov
push
popa
stos
enter
ja
adc
adc
movl
out
pop
jp
xchg
pop
int3
nop
xor
xor
insl
test
or
shrl
pop
xchg
push
in
icebp
out
mov
test
xchg
jle
and
aaa
pop
jne
dec
test
mov
cmp
shll
mov
mov
hlt
je,pn
dec
mov
mov
cmp
out
add
cltd
xchg
xor
push
jle
push
shll
cmp
sar
or
lret
jle
jae
jmp
ret
mov
les
nop
inc
iret
int
out
push
dec
add
rclb
mov
outsl
flds
fildll
push
int3
rorl
sbb
sbb
jl
cmp
loop
pop
dec
lods
iret
mov
notl
outsl
mov
js
mov
cmpsl
aas
icebp
adc
mov
mov
sub
imul
int3
jl
inc
inc
push
jo
loop
mov
lret
push
inc
mov
arpl
fsubr
lock
insl
jo
mull
sbb
dec
add
in
push
das
mov
adc
jge
push
inc
lock
dec
movsb
pop
xor
cli
aas
push
xor
xchg
in
or
sbb
shl
test
xlat
in
cmpsb
or
loop
pusha
xchg
lcall
or
xor
dec
bound
cli
xchg
clc
insb
sub
in
mov
pop
daa
jg
dec
movsl
out
bound
loopne
incb
adc
jecxz
loope
and
xor
aas
sub
mov
dec
xor
cld
xor
stos
push
mov
imul
ss
test
shlb
mov
fwait
xchg
popa
outsb
fmull
nop
jb
out
adc
mov
push
lods
cmc
mov
call
bound
mov
xchg
push
sub
jcxz
mov
jmp
push
mov
mov
add
jmp
or
mov
dec
mov
shrl
lds
sbb
xor
fimull
dec
sbb
jne
in
cmpsb
sub
sub
adc
push
adc
or
add
cli
arpl
xor
or
pop
ds
dec
adc
in
push
jg
das
dec
test
test
cltd
xchg
jecxz
xor
sbb
jbe
sbb
loopne
mov
daa
push
pop
mov
insl
ret
insl
sub
dec
pop
pusha
mov
push
mov
jae
adc
pop
sbb
inc
mov
push
mov
js
sub
sarl
data16
cmp
mov
sub
cmp
cmp
movsb
shrl
push
adc
imulb
lods
jnp
cs
xchg
xlat
lea
xchg
pop
rcrb
pop
xchg
pusha
adc
cwtl
dec
outsl
xchg
or
fs
lock
arpl
and
popf
clc
arpl
test
les
out
add
mov
xchg
repz
mov
popf
xchg
out
lahf
sti
mov
out
daa
je
add
mov
in
leave
jne
dec
mov
pop
fsubs
mov
mov
mov
test
mov
dec
xchg
mov
call
sbb
stc
inc
push
xor
clc
add
cmp
mov
xor
jb
push
or
cs
adc
sbb
out
mov
mov
add
aad
or
sbb
movsl
push
stos
cli
lea
xor
add
scas
mov
xorl
mov
sgdtl
fcmovne
sar
push
push
push
dec
cltd
mov
xchg
daa
mov
test
jge
sti
nop
xchg
test
in
sbb
shll
xchg
dec
push
cmpl
icebp
xchg
pop
mov
in
faddp
dec
push
sbb
xor
movsb
push
out
add
dec
pop
xor
pop
xchg
cmp
jns
mov
rclb
pop
ret
test
outsl
xor
xorb
push
test
cmp
sbb
shll
aaa
dec
add
inc
sbb
add
push
xor
add
lods
jae
ret
fiadds
sub
sbb
add
addb
sbb
hlt
add
dec
clc
push
mov
mov
mov
mov
loope
loop
sbbb
daa
and
fnsave
int
fcompl
stos
inc
es
mov
in
cmp
xchg
insb
adc
push
jecxz,pn
push
inc
cld
aam
shlb
int
xchg
inc
jmp
or
and
xchg
push
adc
sti
subps
or
test
nop
popl
xor
dec
repnz
pop
inc
sbb
stos
xor
add
adc
mov
lock
insb
repnz
inc
jge
jp
inc
filds
test
cmp
xchg
or
pop
lret
dec
mov
clc
cmp
push
mov
xor
in
xchg
jnp
mov
xor
rcll
mov
repz
xchg
jns
sbb
jmp
mov
movsb
cmp
jmp
fidivrs
lea
into
push
sbb
ds
push
mov
std
push
in
pop
outsb
divb
stos
insl
cld
outsb
daa
pop
out
lock
repnz
sti
cmp
adc
lahf
call
push
sbb
int3
cmp
push
out
adc
repz
pusha
mov
mov
stos
mov
push
pop
mov
sbb
scas
stc
jo
pop
lret
adc
pop
dec
lcall
int3
or
popl
push
fstpt
pop
loopne
notb
push
popa
add
mov
or
stos
mov
mov
outsl
daa
call
mov
add
cmpl
iret
or
imul
pop
sbb
mov
mov
xchg
mov
inc
add
xor
pusha
test
cmp
in
sub
cld
icebp
jg
mov
xchg
imul
jmp
add
fadd
sub
mov
pop
bound
pusha
cmp
call
shll
sahf
neg
jo
aam
in
mov
jmp
xor
pop
sti
jbe
test
or
cmp
in
hlt
inc
int3
shrb
ret
sub
fwait
xor
adc
xchg
or
mov
call
mov
ret
xchg
add
add
adc
mov
inc
dec
and
adc
add
dec
inc
cld
adc
adc
or
ds
sbb
inc
ret
arpl
mov
inc
and
cmp
es
mov
or
jae
inc
push
test
jl
pop
push
iret
jge
rorl
call
or
cmpsl
sahf
sti
mov
mov
cmc
jnp
cld
pop
or
stos
jb
test
cmpsl
mov
sub
mov
cmp
cmp
push
adc
mov
push
xor
cmpsl
jno
and
out
rcr
divb
loopne
or
repnz
push
jmp
push
roll
or
mov
ss
cmp
add
sbb
cmp
test
mov
add
pushf
fnclex
outsb
cli
xor
sub
pop
push
push
pop
push
or
cmp
fcmovnu
outsb
mov
ret
xchg
in
imul
sbb
hlt
das
mov
iret
fistl
xorl
mov
jle
inc
outsl
add
int
insb
fdivrs
pop
or
xchg
pop
mov
jbe
push
mov
daa
imul
cmp
lcall
in
clc
cli
pop
das
enter
fwait
cmp
inc
shl
add
insb
mov
or
dec
adc
pusha
or
test
add
xchg
mov
sub
loop
lret
jecxz
xchg
mov
scas
les
testb
xchg
mov
sub
dec
adc
push
leave
imul
lret
js
faddl
add
xor
jne
dec
jp
pusha
aam
and
add
shrb
iret
fwait
push
inc
cltd
aad
and
ja
test
jae
cmp
testb
mov
xchg
ror
pop
push
in
dec
iret
inc
pushf
pop
ret
out
xchg
outsb
xchg
sbb
sub
xchg
inc
movsb
ljmp
xchg
pop
fdivrp
adc
adc
lds
inc
adc
xor
push
lea
inc
mov
dec
fadds
int
mov
aam
jo
cli
dec
test
fcomps
cmp
xor
adc
mov
xchg
lret
enter
js
xchg
aas
sarb
push
dec
aam
sti
repnz
fsubr
clc
fdivr
pop
pop
lds
jg
xchg
xor
lods
subl
or
ret
jle
in
add
pusha
shl
ss
out
add
mov
or
jg
push
add
dec
ret
xor
and
out
js
add
adc
gs
push
inc
imul
push
loop
xor
cli
sbb
daa
cld
xchg
adc
pop
sub
add
or
xlat
das
push
push
aad
push
xor
mov
pop
sbb
push
and
out
mov
inc
inc
add
aad
sbb
aaa
mov
mov
sub
push
xchg
pop
mov
sub
pop
aas
mov
cmp
pop
mov
iret
dec
xlat
jmp
dec
sbb
repz
mov
mov
rcl
pop
and
mov
daa
mov
mov
jmp
xchg
movsl
fisubs
es
loope
mov
push
aad
xor
push
or
fcomps
sbb
jl
pushf
orl
pop
push
sbb
loope
scas
sbb
jae
divb
in
xchg
cmpsb
sub
in
mov
pop
dec
loop
pop
lea
ret
jl
mov
push
push
cmp
inc
shrl
hlt
lret
int3
add
orb
inc
mov
aaa
mov
mov
cmp
insb
ret
in
push
xchg
mov
xor
mov
test
lods
in
pop
jmp
faddl
out
or
loopne
mov
fmulp
outsb
imul
mov
sbb
mov
mov
and
mov
xlat
clc
aad
mov
and
sbb
jne
push
in
push
loop
jo
sahf
cmp
leave
inc
es
scas
inc
push
mov
sub
pop
jo
fnstcw
dec
pushf
stos
je
js
or
sbb
push
test
mov
les
xchg
and
and
sbb
imul
push
mov
test
or
mov
push
fbld
cwtl
push
movsb
fcomp
pop
cmp
lret
testb
jae
or
add
sub
pop
push
test
enter
jo
inc
pushf
jg
in
jmp
ljmp
frstor
aaa
adc
adc
ljmp
add
mov
daa
push
cmp
sub
repz
mov
aas
fdivs
mov
sbb
andl
dec
pop
movsl
dec
jle
mov
push
ljmp
cmp
xchg
sbb
pop
ja
rclb
dec
jbe
icebp
test
mov
xchg
scas
mov
mov
out
mov
and
fsubs
testl
repnz
add
or
out
stos
mov
mov
into
test
mov
xor
push
pop
xlat
mov
movsb
push
cmpsl
nop
fmuls
aad
lret
fcoml
mov
and
jnp
fistpll
imul
cltd
xor
xchg
out
jne
subb
sbb
sbb
lahf
fs
lea
rorl
shlb
xchg
aaa
es
xlat
push
push
adc
inc
mov
mov
xchg
ja
lahf
xorb
mov
push
jg
jnp
insl
xor
rorl
nop
iret
push
dec
sarb
out
fsubrl
pop
mov
hlt
pop
mov
mov
dec
movsl
adc
minps
ret
pop
push
cmp
cmpsb
mov
in
sub
mov
jg
adc
aaa
mov
jo
pushf
jb
and
loope
push
inc
insl
mov
xor
fcomps
push
idivl
mov
daa
dec
add
xchg
adc
push
les
xchg
imul
sub
test
out
rcll
add
xor
cwtl
mov
jmpw
ds
inc
dec
addr16
and
ret
mov
out
call
xor
mov
jnp
shl
push
fidivrs
sbb
or
fcompl
lcall
ss
aam
ficoml
mov
xchg
lds
aad
mov
call
fdiv
adc
fstl
adc
cmp
roll
negl
scas
jp
notb
or
jno
cmpl
add
lea
jae
inc
sarl
pop
pop
test
das
negb
in
repz
mov
mov
jne
xchg
jb
popl
fisttpl
int3
test
call
adc
das
out
inc
daa
mulb
mov
sbb
adc
arpl
add
push
in
jg
lods
xor
fsubrp
and
and
lods
xchg
popf
and
pusha
cmp
insb
loope
mov
lds
dec
test
into
push
xchg
cmc
test
in
gs
xchg
loope
adc
call
jmp
ljmp
shlb
jns
adc
in
xchg
mov
mov
and
sbb
xchg
ljmp
cmp
mov
xlat
jle
ret
push
xchg
add
pusha
xlat
pusha
xor
fwait
out
imul
inc
mov
mov
in
inc
jbe
cmp
adc
ljmp
mov
gs
xor
jno
mov
and
loopne
xor
xor
pop
movsl
add
jl
aas
loopne
arpl
xorb
aas
push
sub
cmp
add
pop
std
and
shll
and
loopne
dec
mov
lret
cmp
popa
mov
leave
fs
pop
and
push
fwait
mov
dec
xchg
outsb
fdivrs
xchg
movsl
roll
mov
mov
dec
sbb
push
test
adc
sub
fwait
push
movsb
jg
and
jo
inc
lret
xor
xchg
mov
insl
push
clc
ret
cmp
sbb
fildl
push
pop
sub
add
ljmp
pop
in
jne
cmpsl
js
mov
xor
jecxz
xor
xchg
sar
dec
aaa
es
imul
mov
mov
dec
fmuls
xor
cmc
push
pushf
adc
mov
inc
das
dec
sbb
fnsave
adc
out
cltd
nop
push
in
or
ljmp
sub
and
rorb
push
add
push
imul
and
data16
mov
subl
adc
cmp
mov
mov
dec
adc
fsubrl
bound
in
cli
orl
inc
rorb
test
jge
mov
jo
push
movsl
sti
xor
inc
cmp
xchg
jg
xchg
stc
stc
adc
int
fdivrs
adc
popa
add
mov
int
adc
or
or
and
insl
lds
jge
cmpsb
push
movsl
push
test
dec
push
addl
inc
mov
ret
xrstors
das
std
pushf
aaa
shll
lea
xor
dec
pop
push
push
mov
loope
or
push
xorb
add
xchg
fbld
fldcw
notl
add
movsb
adc
push
and
mov
cmpsl
fimuls
pop
hlt
jge
jb
stc
in
xchg
je
xchg
ds
adc
pop
aad
in
iret
xchg
dec
imul
or
jne
jmp
push
push
cmp
insb
xchg
ret
xor
call
lret
insb
sub
sub
push
int3
aam
rcl
adc
jae
bound
mov
mov
test
aad
cmp
push
cmp
mov
xchg
xlat
stos
xlat
or
popa
pop
xor
cmp
fisttps
push
or
pop
add
or
adc
ljmp
cmp
shll
jge
dec
sbb
mov
mov
jecxz
aam
and
sti
mov
push
and
pop
dec
cltd
cli
lods
xor
test
in
and
leave
and
and
push
or
xor
xor
xchg
orb
in
push
idiv
and
and
fcoml
insl
pop
dec
aaa
or
mov
in
push
or
push
inc
orb
cli
jecxz
js
out
int3
mov
shlb
push
push
fscale
jecxz
enter
imul
dec
call
dec
cmp
into
and
jge
cmp
jno
xor
cmpsl
jo
repnz
jp
push
xor
mov
test
repnz
adc
jns
mov
mov
mov
les
sub
add
gs
cmc
xor
outsb
add
sbb
xchg
test
pop
cltd
inc
repz
outsl
pop
movsb
pop
jecxz
xlat
push
nop
fwait
adc
les
test
leave
imul
sar
stos
std
dec
in
loop
pusha
test
andb
mov
jb
call
mov
push
and
in
pop
in
push
add
and
cmp
xchg
add
jecxz
mov
iret
fistl
ja
iret
fsubr
in
test
mov
xor
fs
pop
pop
cmp
cmp
bound
bound
xor
addr16
pop
mov
cltd
cmp
jmp
mov
mov
shl
cmp
pop
sbb
es
leave
push
cmp
insl
pop
ret
adc
imull
jg
imul
ljmp
negb
push
sbb
sub
imul
test
mov
and
xor
in
hlt
or
adc
xor
nop
fsubp
lahf
dec
sbb
inc
fstps
out
test
lcall
add
mov
in
dec
popa
jle
scas
and
xchg
inc
cli
push
pop
lods
stos
sbb
mov
pop
out
cmpl
push
js
mov
and
cmp
jp
mov
push
in
movsb
pop
dec
in
lea
mov
ret
jp
rol
mov
adc
inc
loope
sbb
cli
or
push
fs
dec
push
pop
sbb
pushf
mov
sbbl
mov
fimull
test
mov
inc
js
jne
daa
adcl
mov
dec
in
push
dec
xor
out
pop
ret
jb
lods
scas
add
leave
movsb
mov
pop
pusha
adc
nop
dec
pop
into
dec
scas
std
inc
dec
icebp
ror
lds
xchg
bound
aas
dec
adc
outsl
jp
pop
movswl
and
sub
adc
adc
cmpsl
mov
mov
fldl
sbb
sbb
and
pop
xlat
jne
pusha
pop
push
ljmp
dec
enter
ret
mov
mov
lret
imul
fucomp
popf
xor
dec
in
xor
movsl
pushf
push
clc
fstps
mov
stos
icebp
xor
mov
xchg
mov
mov
negl
pop
inc
cmpsl
in
out
dec
add
push
adcl
imul
sub
pop
mov
jo
jmp
mov
and
adc
rclb
pop
cmp
lret
adc
dec
xchg
cmp
cmpb
dec
addl
imul
mov
in
adc
add
gs
dec
loope
pushf
leave
mov
cmc
or
push
sbb
mov
das
stos
mov
rorb
daa
mov
iret
adc
mov
sarl
dec
fbstp
and
call
adcb
push
rclb
xchg
cld
and
add
and
pop
mov
and
jmp
cmpsl
dec
cmp
in
in
rclb
jle
mov
fists
les
mov
fnstenv
jne
stos
int3
jecxz
jg
jnp
test
mov
xor
mov
scas
cs
fwait
inc
stc
push
daa
movsb
pop
addr16
sbb
aaa
cmp
fs
insl
sub
mov
jmp
shrl
adc
inc
lret
fwait
pushf
pop
fwait
jmp
xchg
jl
cmpb
jle
or
inc
pop
sbb
in
jnp
pop
stc
mov
pop
fbld
fwait
mov
or
ss
mov
and
fdivrs
je
cltd
pminub
data16
rcll
aad
jnp
lods
outsl
cmp
scas
xor
inc
les
in
jecxz
pop
movsl
and
jmp
movsb
iret
hlt
popa
and
mov
jg
pusha
mov
sbb
push
imul
dec
add
icebp
or
mov
and
mov
xchg
cwtl
xchg
scas
mov
or
pop
arpl
cmpl
inc
addl
xor
mov
imull
sahf
outsb
jb
lcall
push
jo
mov
sbb
mov
in
leave
xor
xor
lret
cwtl
jg
mov
nop
adc
out
push
addr16
out
sbb
cmp
int3
adc
adc
mov
test
pop
mov
inc
popa
xor
jmp
or
cmpsl
leave
pop
inc
scas
push
xor
xor
test
out
or
and
filds
sbb
sub
les
or
mov
and
gs
jnp
sub
aaa
mov
xlat
mov
dec
lret
pop
outsl
and
ficoms
mov
aad
cli
mov
cmp
dec
iret
addr16
insl
mov
jl
push
mov
xchg
inc
jl
mov
push
sub
mov
mov
ja
add
repnz
jl
push
mov
cmpsb
mov
cwtl
add
lret
mov
das
movsl
xlat
dec
addr16
cmpsb
pop
popf
insb
lahf
cltd
sti
sub
pop
push
push
out
xlat
mov
mov
stos
scas
cmp
arpl
mov
ret
int
mov
push
mov
jae
sub
and
jge
scas
pop
xchg
sgdtl
dec
mov
xchg
sbb
enter
test
enter
xchg
xorl
xchg
mov
adc
and
sub
in
jns
call
or
pusha
addr16
xchg
and
lcall
inc
fisubs
dec
add
popa
cmp
xchg
stos
add
jnp
and
jae
in
out
pop
aaa
cmpb
leave
aaa
sbb
mov
in
pop
mov
in
cmp
ja
arpl
push
sbb
mov
dec
xor
pop
pushf
push
sti
push
int3
xchg
idivl
and
test
or
dec
jl
roll
pop
lods
fs
in
mov
pop
leave
push
jle
xchg
popf
out
xor
xchg
lea
dec
mov
sti
fnstenv
add
xlat
push
and
fcomps
jne
pop
jae
push
in
nop
push
jnp
mov
push
addr16
lahf
leave
xor
xor
gs
mov
adc
xor
jns
cltd
and
outsb
xchg
mov
loope
lods
test
push
and
outsb
mov
mov
sbb
std
ja
int
mov
adc
popf
sub
dec
push
pop
xor
xor
mov
pop
int
pop
scas
xor
push
mov
xchg
inc
inc
imul
jnp
dec
out
loopne
andl
cmp
pop
sub
jbe
subb
dec
decb
shl
icebp
sub
dec
arpl
lahf
or
jp
adc
notb
ljmp
into
inc
pop
mov
push
in
std
std
shll
sub
lret
cmp
xchg
out
mov
sbb
push
adc
inc
and
push
sub
cmp
push
xchg
ja
nop
mov
pop
mov
jp
rcll
inc
add
sarb
mov
orl
dec
arpl
rolb
rcl
sarb
fcmovb
sub
dec
mov
mov
aad
mov
inc
inc
jno
sub
orb
jns
jnp
scas
iret
test
das
leave
inc
fwait
pop
xor
cmpsl
dec
dec
jo
aam
sub
sub
test
pop
stos
and
repnz
ss
dec
inc
mov
shrb
nop
or
ljmp
testb
push
movsl
and
inc
xchg
jg
lahf
jmp
daa
and
cmp
mov
inc
sub
cli
add
push
adc
out
mov
hlt
jmp
xchg
mov
arpl
ret
dec
adc
jne
pop
fs
sub
and
xor
test
xor
push
loope
in
mov
icebp
and
orl
enter
jge
and
push
mov
movsb
ja
mov
mov
add
repz
adc
test
roll
push
jo
cmc
mov
shrl
cmp
adc
arpl
pop
mov
jg
inc
add
repz
sub
mov
pop
add
inc
mov
add
mov
dec
sbb
ret
test
push
stos
fiaddl
cld
lea
sbb
pop
jbe
aad
inc
icebp
dec
std
mov
sbb
or
push
sbb
psllq
bound
fistps
push
movsb
push
lock
les
sub
push
inc
adc
push
push
mov
ret
push
or
int
pop
inc
notl
and
es
sub
cwtl
rcrb
add
lods
ret
sbb
jp
sub
cltd
sbbb
fs
push
pop
int3
pop
mov
imul
imul
mov
lods
mov
jmp
out
dec
sub
mov
pushf
sub
fistpl
inc
dec
xchg
xor
xchg
ja
pop
jns
pop
sbb
xor
int
lods
and
in
popa
xor
cmc
push
dec
jo
out
jmp
mov
pop
push
xor
push
sbb
push
fidivrl
sbb
push
scas
xchg
mov
push
vdivps
imul
popa
mov
cmp
jns
mov
xchg
xchg
mov
test
stos
sbb
xor
mov
outsl
rcrl
jecxz
lea
push
cmp
daa
lock
mov
nop
add
jmp
jmpw
sbb
or
inc
repnz
cs
mov
outsl
shr
push
mov
mov
push
test
pop
pop
mov
mov
xlat
test
jae
outsl
xchg
cld
pop
test
push
in
ffree
imul
incb
sub
movsb
stc
into
stc
pop
inc
popf
sub
xchg
dec
imulb
sub
cld
mov
pop
jl
and
inc
lret
adc
jb
jo
pop
addb
aaa
or
pushw
shrl
push
inc
add
hlt
insl
push
pop
push
stc
vpcmpd
inc
add
loopne
dec
rolb
xchg
cmp
and
fwait
add
push
add
lret
cmp
pop
adc
jmp
pop
loope
mov
test
in
xor
and
sub
mov
je
aaa
ljmp
loopne
imul
out
jmp
popf
lds
cmc
fwait
in
jp
loopne
lret
stc
rclb
rolb
sar
das
mov
pop
insb
inc
push
mov
cmpsb
lret
inc
push
mov
xor
sub
out
dec
xchg
pop
push
sbb
fistps
mov
xor
sbbl
aaa
shrl
pop
push
mov
sub
and
lahf
pop
fnstcw
add
roll
shrl
dec
pop
fwait
popf
ficomps
jle
mov
iret
jo
adcl
cs
iret
aam
scas
mov
mov
test
ss
inc
jmp
jmp
andb
mov
xlat
test
push
jbe
or
dec
aaa
jb
pop
sub
cwtl
addr16
or
jge
fsubrs
sub
loopne
push
flds
test
mov
add
inc
mov
stc
out
dec
arpl
adc
add
xor
sub
cmp
and
clc
adc
cmp
repnz
cmpl
and
pop
enter
and
aad
push
movsb
cwtl
in
repz
sub
jbe
int3
xor
gs
cwtl
add
add
js
popa
inc
xor
inc
adc
mov
rcr
and
dec
lret
inc
repz
dec
mov
int
bound
mov
loope
pop
mov
inc
or
lock
lock
and
and
xor
lock
aam
push
cs
mov
js
cmp
sbb
insb
mov
imul
mov
push
inc
mov
push
js
outsl
scas
cltd
dec
lcall
jp
adc
out
push
in
jp
stc
jmp
fwait
sub
popa
and
out
or
sub
cmp
jg
sub
mov
lods
test
dec
jmp
stos
sahf
xchg
xchg
sbb
and
loopne
jno
xlat
pop
sbb
cmp
dec
das
in
push
stos
fistpl
inc
outsb
sbbl
test
mov
test
xchg
mov
addl
dec
out
xchg
jno
out
push
outsb
cmp
lret
gs
fmull
mov
pop
movsl
inc
and
mov
cmpb
ret
idivl
cmc
cmpsb
lret
and
xchg
xchg
fistpl
or
cmc
fdivr
sbb
cli
icebp
add
inc
sbb
aam
aam
das
mov
jmp
fldt
mov
in
out
imul
lcall
xchg
addl
mov
pop
fcmovnbe
popf
out
in
pop
out
pop
js
dec
push
int
mov
scas
test
cli
sub
sub
std
imul
lcall
sbb
or
sub
add
add
dec
addb
fdiv
in
arpl
mov
js
repz
sbb
es
mov
xlat
popa
dec
jmp
jmp
lret
or
outsl
mov
push
in
fdiv
mov
lea
iret
and
jbe
stc
test
fwait
jb
push
arpl
lds
jle
add
bound
je
add
cmp
in
les
ficompl
add
jge
adc
mov
push
lods
xor
pop
fistpl
ret
je
mov
in
mov
xchg
mov
mov
dec
ds
clc
mov
ds
mov
jmp
push
sbb
jp
fists
loope
xor
fiadds
sbb
aaa
mov
mov
push
sbb
jmp
pop
sub
mov
adc
cmpsl
addr16
insl
jecxz
fdivp
jecxz
fisttps
mov
push
inc
fildl
jae
repz
add
mov
dec
mov
imull
mov
push
enter
xchg
cmpsl
lahf
int
scas
outsb
jmp
lods
lea
pop
cltd
in
mov
cmp
popa
not
xlat
pop
fcomi
testb
in
sub
push
pop
or
or
adc
dec
nop
jno
add
adc
out
fistps
adc
lock
in
jge
sub
fwait
add
sbb
sub
inc
pop
cmp
lock
addr16
pushf
mov
test
orl
and
jno
pop
dec
push
lea
fidivs
ret
movsl
xchg
pop
sbb
pop
mov
push
pop
dec
int
sbb
outsl
push
dec
mov
mov
fisttps
loopne
mov
cmp
xchg
jecxz
imulb
adc
cmp
iret
push
imul
test
sub
faddp
mov
sbb
mov
xchg
push
and
sbb
sahf
cli
addb
addl
mov
sarl
sbb
sbb
ret
xor
fcmovnu
mov
inc
test
pop
mov
sahf
adc
xor
enter
test
fsubs
mov
xchg
add
in
shll
pushf
add
popa
mov
and
inc
pop
add
out
mov
cmpsl
cmp
cwtl
push
adc
andb
adc
lret
push
lret
cs
xorb
in
lds
or
aam
push
stos
arpl
bound
mov
sub
lods
loope
sbb
sub
aaa
adc
add
dec
xchg
push
xor
adc
lock
adc
clc
adc
aad
rcr
or
and
test
mov
enter
mov
sahf
popa
push
mov
add
jmp
scas
jmp
jl
mov
iret
in
insl
jbe
inc
xchg
iret
xchg
lock
push
mov
lock
sahf
ljmp
cmp
mov
out
shlb
jl
xchg
in
insl
fsts
sub
loope
into
sbb
ljmp
sub
push
repnz
xor
js
das
gs
cmp
jp
adc
lods
mov
add
jae
lret
pop
xor
fidivrs
ret
cld
testl
or
jns
add
fs
daa
jl
mov
cmpsb
xor
aad
sbb
movsb
cmpl
xchg
mov
mov
insb
dec
fcomip
mov
add
push
dec
ror
dec
std
mov
in
cmp
add
sbb
out
rorb
or
stos
pop
push
mov
iret
push
in
sbb
rorb
dec
adc
xchg
dec
les
xchg
insl
lret
xchg
nop
lods
pop
in
jmp
mov
push
add
out
sbb
jae
cmp
fs
xor
popa
clc
pop
mov
jmp
sbb
mul
mov
push
inc
mov
adc
or
lret
sti
aaa
imul
ds
subl
push
xchg
sub
cmpl
rcrl
cmc
jo
xor
adc
adc
sbb
add
sub
frstor
cmp
imul
mov
es
push
aas
ja
sti
jb
sbb
jne
mov
inc
adc
cs
scas
icebp
xchg
jecxz
xchg
int
and
or
jbe
mov
fnstenv
cmc
inc
xchg
cmpl
dec
adc
push
jae
or
fsub
das
sbb
inc
mov
aad
js
ret
push
sbb
dec
jno
scas
jbe
inc
mov
scas
fisttpll
mov
shrb
sbbb
xor
rcr
sub
xchg
mov
mov
jecxz
ret
dec
cmpsb
lds
sbbb
addb
push
lcall
sub
mov
lret
in
insl
dec
adc
pop
shlb
pusha
fnstcw
push
fdivs
mov
loop
stos
pop
repnz
mov
push
in
mov
rcrl
lock
and
clc
int3
adcl
enter
aas
mov
pop
sub
cli
imul
scas
lret
xchg
jnp
lea
xor
out
adc
or
lahf
daa
in
xchg
push
mov
pop
es
imul
and
dec
inc
fld
aad
cltd
jl
and
pop
lahf
aas
into
mov
addb
fdivr
lahf
dec
repnz
lahf
repnz
fnstcw
and
adc
ds
add
sbb
nop
sarl
sbb
inc
rcrb
mov
mov
cltd
push
xor
sti
sbb
mov
loope
xchg
jne
stos
sbb
repz
pop
dec
gs
pop
rcrl
cmp
scas
pop
xor
mov
xchg
sbb
inc
outsl
hlt
shr
mov
jmp
jg
sub
dec
or
or
loopne
sub
les
inc
in
dec
loopne
push
inc
cmpsl
sbb
out
and
push
ret
xchg
mov
leave
push
jge
push
scas
mov
cmpsb
cltd
cmp
shll
xor
mov
jno
mov
mov
enter
lock
xchg
test
daa
adc
xor
xor
or
int
mov
lret
sub
mov
iret
aas
pop
outsb
into
iret
cmc
fnstsw
pop
repnz
ret
lret
and
cmpsl
mov
pop
add
fst
cmp
xchg
popa
sub
dec
jp
pop
xor
rclb
shrl
in
sti
mov
push
mov
jp
push
dec
ja
xor
inc
insl
adc
jg
jb
arpl
into
sub
rcr
jnp
fldt
fnstsw
push
clc
and
jnp
inc
sub
outsl
inc
xchg
jmp
test
lock
dec
lahf
cs
testb
pop
add
adc
out
lret
jnp
xor
vpsadbw
pop
jg
add
cltd
cmp
sub
clc
push
addr16
jecxz
mov
push
mov
gs
inc
xchg
mov
sbb
fcom
adc
mov
and
aas
or
pop
mov
jns
sbb
mov
jl
pop
cwtl
inc
pop
and
cmp
stos
sarb
popa
rcll
xor
icebp
jns
adc
add
sbb
pop
cmc
push
repz
mov
or
aam
aaa
mov
xchg
cmpsl
push
repnz
jo
and
mov
daa
fsubr
cld
insb
sbb
sbb
lcall
in
adc
push
and
push
movsb
test
int
mov
push
mov
test
jne
add
xor
daa
in
mov
push
push
enter
dec
push
dec
mov
push
dec
call
xchg
rorb
aaa
push
popa
inc
mov
test
in
or
pushf
cld
jne
xchg
xchg
lret
pop
dec
subl
mov
aaa
cwtl
xorb
cmp
shlb
inc
test
jae
daa
inc
dec
or
addr16
dec
inc
xor
adc
sbb
int3
imul
insb
lret
inc
push
adc
adc
popl
mov
mov
sbb
rcl
call
xchg
push
sbb
dec
cmp
lcall
adc
rorl
scas
movsb
cmc
sub
movsb
test
int3
clc
sarl
jmp
mov
hlt
fdivs
in
cmp
es
jge
out
pop
incb
es
inc
mov
ss
jle
sub
cmp
test
inc
mov
sti
shl
and
inc
mov
adc
mov
mov
mov
scas
mov
inc
lods
stc
add
or
push
push
ret
rep
lret
adc
jge
shl
into
les
insl
jmp
mov
sbb
push
or
mov
movsl
outsb
adc
out
xchg
test
mov
into
aaa
xchg
sub
les
fdivrs
imul
sub
or
cli
push
sub
js
pop
mov
aam
inc
push
sbb
jecxz
push
jp
cwtl
pop
fbstp
and
test
mov
daa
loope
lods
adc
mov
pop
push
jmp
mov
inc
cld
xor
mov
sti
mov
sbb
xor
rclb
sahf
inc
add
shll
xchg
fisttps
and
lds
icebp
pop
pop
out
mov
pop
mov
mov
and
in
aas
sbb
xor
stos
pusha
cmp
inc
lcall
les
repz
popf
repz
test
cwtl
add
cmp
push
mov
push
test
rclb
pop
push
inc
mov
pop
cs
mov
data16
adc
inc
push
repz
mov
or
pop
sub
mov
xor
or
inc
movsb
sti
mov
adc
cwtl
sub
mov
or
jp
sbb
inc
outsb
sbb
push
ja
dec
fwait
pop
pop
insb
cmp
outsb
mov
cwtl
sub
lcallw
imul
mov
loopne
insb
pop
testl
rclb
inc
mov
enter
aaa
add
adc
xchg
lods
sti
cltd
sbb
movsb
cmpsl
adc
dec
sahf
les
xor
pop
or
loop
jecxz
push
adc
pop
popl
add
ret
mov
inc
and
pop
pop
notl
add
fsubrl
dec
push
inc
dec
test
cli
in
fs
add
dec
jae
push
adc
es
xchg
pop
or
jmp
aaa
out
int
fcompl
mov
outsl
lds
cli
pop
ret
inc
leave
xor
outsl
adc
jp
subb
and
inc
and
adc
and
push
mov
hlt
test
jbe
dec
test
mov
sub
mov
dec
aam
xor
jl
fwait
jg
and
cmc
mov
cmpb
sbb
sbb
mov
movsb
inc
jecxz
fcomps
dec
or
insl
push
sbb
pop
xor
in
dec
push
inc
jmp
and
mov
push
push
cmp
add
jg
hlt
test
dec
mov
nop
in
xchg
enter
test
pop
lods
mov
or
push
ja
push
or
push
lods
ljmp
pop
jge
mov
mov
sub
call
sarl
lret
stos
fcmovnb
inc
imul
cmc
push
jg
in
cmpsl
addr16
push
pop
pop
into
std
fs
mov
xor
gs
pop
cmp
add
test
push
add
or
inc
or
or
mov
loop
cmpsb
pop
into
cltd
and
dec
ss
sbb
cwtl
jmp
and
xchg
rcl
xor
push
push
jle
cmp
sbb
popa
cmp
mov
push
add
push
in
push
cmp
sbb
jge
xchg
add
xor
xchg
mov
fdivl
arpl
push
push
js
nop
scas
por
pusha
xchg
lret
cmp
stos
xchg
incl
and
push
sbb
cld
arpl
pop
je
jae
pop
loope
xchg
sub
adc
cld
sahf
fldl
cltd
hlt
in
movsb
jbe
test
scas
pop
xchg
adc
jp
xor
xor
test
orl
sub
inc
shrl
rcrb
in
or
call
cmpsb
loop
adc
in
out
imul
popl
sbb
ds
xor
repnz
xchg
push
adcb
shll
ds
push
or
test
sbb
cmp
loopne
inc
outsl
std
push
scas
aad
out
inc
xor
xchg
fildl
fstps
mov
inc
insb
jbe
push
movsb
inc
dec
push
notb
frstor
cmpsl
in
jno
ss
mov
cs
nop
repnz
popf
scas
gs
je
ret
jno
hlt
ds
pop
cmp
mov
mov
xor
sbb
inc
clc
jo
lock
enter
mov
gs
jle
cmp
xchg
int3
in
lods
insl
loope
jae
xchg
cmp
in
or
repnz
xor
sub
lods
inc
movsb
xchg
fildll
lods
mov
lret
push
out
xchg
push
xchg
push
nop
or
or
cmc
adc
dec
test
dec
imul
lods
mov
adc
cld
adc
xchg
jbe
jno
push
jecxz
and
loop
push
enter
cltd
push
cmp
stos
clc
test
addb
rolb
sbb
ret
out
sbb
hlt
arpl
pop
cltd
cmp
fmull
jnp
fdivrs
cmpb
scas
dec
stos
mov
int
xchg
xchg
cmpsb
mov
cmp
je
test
inc
cld
cmp
xlat
inc
gs
adc
or
xchg
cmp
adc
or
std
inc
jl
cmc
inc
pop
imul
stos
jge
je
int
or
jge
sti
icebp
cltd
scas
and
jge
pop
dec
loop
jmp
lods
stc
add
and
xchg
cli
outsl
dec
pushf
loopne
test
popa
sti
xor
ret
xchg
sbb
xor
cmp
dec
xor
pop
adc
xor
mov
dec
call
ret
mov
dec
in
lcall
dec
fsubrs
pop
xor
lds
push
scas
lret
fucomi
pop
stos
inc
int
xor
jnp
pop
add
xchg
popl
popf
ja
xor
pop
xor
sbb
jecxz
idiv
clc
insl
inc
push
mov
dec
mov
sub
ds
add
arpl
xor
into
js
jp
adc
inc
fdivl
sub
aaa
xlat
in
scas
sarl
mov
in
dec
scas
add
push
sub
mov
in
insb
mov
mov
adc
sub
add
add
icebp
cmp
push
cmp
and
mov
subl
push
sarl
cmp
dec
and
pop
cmp
addr16
jge
mov
loopne
adcl
dec
add
stc
sub
ret
jae
scas
mov
mov
pop
push
mov
test
mov
dec
sub
icebp
scas
or
jge
int3
es
xchg
push
mov
inc
sbb
insb
inc
jno
cltd
or
test
mov
mov
or
andl
enter
inc
cwtl
ds
sub
mov
add
jl
jecxz
out
or
fldenv
ret
in
rcrl
scas
daa
addr16
pop
xor
out
and
fs
push
push
push
sbb
pushl
sbb
sti
test
rclb
in
std
xor
shll
add
call
enter
enter
cmp
xor
xorb
xor
in
or
int3
std
in
enter
loopne
sbb
add
push
inc
mov
push
dec
mov
sub
insb
sbb
xchg
add
cmp
in
mov
out
loop
mov
cmpsl
popf
xchg
lock
rol
lea
jmp
ret
rorl
inc
es
fcoml
lret
mov
roll
lods
pop
cmp
pop
pop
leave
pop
xchg
xchg
mov
das
push
and
xlat
pop
rcrb
jbe
sub
in
mov
cmc
fbld
bound
inc
adc
shrl
arpl
fsubrl
repz
and
inc
fildl
loop
pop
imul
js
test
inc
sahf
add
mov
jge
dec
inc
inc
movsb
cmp
ffreep
popf
sub
je
call
inc
xor
clc
dec
and
jb
lds
jg
jge
scas
sbb
imul
add
loope
mov
rep
cmp
inc
into
dec
shll
adc
outsl
fidivl
pushf
enter
mov
add
xchg
std
xlat
xor
push
sub
mov
lods
test
ds
push
lds
outsl
sub
bound
je
icebp
lret
cmc
mov
mov
mov
jns
mov
shlb
dec
lock
inc
out
jle
jecxz
cmp
incb
push
dec
fmuls
imul
lds
mov
lea
or
popa
lods
mov
pop
sti
in
orl
loopne
cld
mov
jae
lret
movsl
inc
push
xchg
adc
popf
popf
jno
pop
sub
repnz
mov
iret
ljmp
ret
jnp
sub
loope
adc
inc
lahf
repnz
push
or
adc
shll
test
outsl
mov
mov
popf
cmc
cmp
cmp
xchg
pop
sbb
lods
ljmp
jo
sub
imul
push
jo
fistpll
cmp
push
mov
ss
scas
dec
repz
lea
shl
out
hlt
inc
dec
jnp
add
ljmp
aas
int
sbb
push
mov
inc
test
subl
movsl
fnstsw
outsb
popf
hlt
inc
push
adc
mov
shr
cmc
sti
adc
dec
adc
fstpl
les
and
dec
fists
inc
jns
mov
dec
stos
adc
cs
sbb
sub
jl
insl
inc
push
adc
inc
mov
repz
or
pop
addr16
jnp
adcl
sbb
xchg
out
and
jmp
lea
cmp
fwait
in
fs
dec
fs
and
gs
fwait
lods
xchg
cs
repnz
pushf
int3
shrl
not
mov
xor
mov
fistpl
sub
and
mov
sahf
into
data16
mov
int3
xorl
sbb
mov
push
loopne
push
sub
jbe
pop
popf
scas
pushf
bound
lods
pop
andb
inc
popf
lret
push
aam
mov
dec
lcall
mov
stos
fildl
add
inc
popa
clc
jp
in
or
push
xchg
push
push
mov
arpl
insl
stos
xor
xchg
mov
lahf
mov
ret
out
int3
sub
testb
daa
xchg
mov
cmc
xchg
repnz
aas
mulb
inc
mov
aas
xchg
cmp
loope
fdivp
out
sti
das
fisttpl
jmp
int
orb
jae
xor
fyl2x
cld
jne
mov
mov
and
jno
inc
test
popa
scas
jg
cmp
jne
mov
xchg
repnz
scas
sti
ljmp
mov
and
icebp
xchg
add
jo
dec
lds
mov
arpl
pop
into
popf
mov
icebp
imul
fdivrs
sub
add
dec
xchg
mov
insl
jecxz
pop
in
imul
outsb
sub
dec
int3
jne
outsl
pop
insb
arpl
subb
repz
fcmovu
cmc
dec
sub
shrb
test
xchg
hlt
fildl
pop
push
or
lds
dec
dec
push
pcmpgtd
or
add
imul
sbb
cmp
inc
inc
adc
dec
jo
cmp
cwtl
fwait
fwait
push
inc
dec
into
subb
and
bound
mov
clc
xlat
mov
gs
ja
cltd
dec
fwait
ret
test
lcall
sbb
aad
fsubrs
mov
push
daa
adc
adc
lods
xor
gs
mov
fwait
adcl
adc
dec
inc
adc
lret
int3
push
hlt
jbe
dec
adc
loop
pop
and
xchg
lret
pop
xchg
test
out
mov
or
xlat
inc
pop
in
push
and
sbb
mov
aaa
test
ljmp
push
dec
push
pusha
rcll
out
test
and
repz
push
inc
xchg
jp
ja
fisubl
loope
or
pop
pop
mov
test
cmpb
jno
add
int3
sub
daa
dec
dec
aaa
lods
xor
sub
xor
cmp
hlt
imul
jb
repnz
jle
push
adcl
fs
ret
pop
int3
sbb
xchg
mov
xor
jmp
stos
test
mov
push
test
inc
ss
add
in
mov
jne
sub
sub
lahf
fnsave
and
cmpsl
outsb
or
dec
das
fs
fistpl
mov
test
jns
push
mov
sbb
add
jl
pusha
push
pop
fldl
add
inc
xor
and
out
insb
pop
jmp
jge
jl
xor
jl
pop
das
xchg
and
and
test
clc
mov
jb
or
test
pop
popf
out
cmpl
je
push
cmp
ds
mov
addr16
ficoms
sub
and
push
aaa
sub
or
nop
shlb
add
gs
jbe
je
fs
popa
ret
sub
jns
pop
rcrl
dec
loope
push
shlb
push
cmp
shll
sti
mov
mov
push
pusha
imul
pop
jno
popa
in
or
add
jne
adc
scas
cltd
shl
mov
and
jno
shrb
sbb
mov
or
lea
lret
adc
arpl
mov
mov
je
ret
xor
jmp
and
shlb
push
fsubrl
subb
pop
mov
add
and
data16
clc
mov
cmpsl
push
std
mov
mov
call
cmpsb
and
jg
adc
std
jp
jb
cmp
leave
mov
and
sub
nop
inc
sarb
push
pop
pop
nop
mov
cmp
jecxz
xchg
jg
mov
repz
cmpb
sub
lret
daa
add
push
out
adc
push
fsubs
mov
cmp
pop
icebp
icebp
pop
popf
cmpb
pop
jl
jae
sbb
lods
rcrb
and
push
add
xorb
sbb
aaa
sbb
movsl
jae
jle
pusha
inc
jle
push
out
fildl
dec
enter
fs
mov
ss
or
outsb
lods
test
pop
mov
mov
xlat
mov
sbb
das
notb
fwait
push
mov
loopne
fistl
dec
jno
sbb
fs
sbb
push
outsb
mov
dec
jge
aad
roll
test
jl
test
rcrl
sti
jo
push
adcb
les
arpl
mov
stos
pop
xor
imul
add
jmp
sub
movsl
dec
out
fwait
test
push
jno
jo
fwait
popa
lahf
fsubs
add
pop
ja
loop
pop
sti
mov
xchg
push
daa
popa
loopne
sbb
mov
ret
xchg
xorl
jns
loope
fsub
sub
cmp
iret
and
sbb
cmp
cmp
outsb
or
std
scas
jle
iret
and
push
jge
mov
ror
incl
push
out
insl
pop
and
popw
outsb
add
sub
jns
push
stos
adc
sub
jmp
lret
movsl
aas
fld
inc
inc
sub
inc
test
xchg
ljmp
data16
push
add
iret
popf
jg
jle
aam
and
aam
and
sti
lock
jmp
pop
int3
inc
cld
inc
xor
mov
mov
out
mov
jmp
lret
fisttps
jle
push
pop
mov
das
jns
sar
test
pop
sbb
cmp
push
push
pop
xor
in
mov
lds
mov
add
popf
lret
jp
int
je
shrl
inc
mov
movsb
hlt
adc
and
lahf
test
mov
and
hlt
cs
pusha
mov
hlt
lods
testl
outsl
fnstsw
aas
or
sub
sbb
mov
mov
test
jnp
sub
sahf
sub
daa
in
mov
orb
push
ficomps
push
shll
mov
fmuls
fstps
enter
test
flds
inc
xchg
jmp
jb
push
cld
jecxz
fldl
lahf
cli
lahf
pusha
js
bound
scas
cmp
call
pop
push
mov
jno
pop
add
pop
stos
and
mov
loope
ss
pushf
leave
pop
add
push
mov
xchg
sbb
xor
cs
mov
jnp
push
adcb
pushf
sbb
mov
xchg
icebp
push
arpl
popf
ret
lods
pop
es
cmp
mov
sbb
fcmove
mov
shl
lahf
jnp
loope
stc
cmp
repnz
or
inc
shlb
aas
aas
scas
dec
std
imul
sarl
pop
enter
stos
into
nop
mulb
xor
push
dec
cmpsl
inc
and
push
fisubs
xchg
pop
pop
rcl
das
jmp
or
cld
gs
jo
add
sub
lea
dec
jmp
fsts
cmpsl
punpckhwd
add
mov
mov
jecxz
mov
xor
cmp
in
xchg
or
dec
outsl
adc
rorb
jmp
mov
out
jle
xor
dec
mov
cmp
outsl
push
cmp
mov
addb
adcb
pop
and
adc
aaa
into
jbe
adc
jo
enter
inc
les
jne
and
dec
xor
sahf
lods
jp
dec
test
cmp
rorl
addr16
iretw
jne
add
or
xor
popf
xchg
loope
loopne
filds
pop
or
call
aam
xor
daa
out
adc
movsb
mov
mov
ja
adc
in
dec
fldt
add
inc
mov
or
aam
ljmp
add
or
pop
jle
std
pop
icebp
sub
arpl
shrl
adc
push
xor
pushf
arpl
outsl
pop
std
mov
testb
adc
aam
insb
jns
cmp
sbb
pop
scas
stos
scas
mov
into
cmp
and
int
popf
andl
dec
mov
pop
scas
cli
pause
mov
mov
dec
rorb
nop
packssdw
fnsave
aaa
xchg
cmp
mov
cli
movsb
cmc
xchg
sbb
mov
xchg
pop
mov
jmp
push
out
rcrb
loope
and
cmp
shrb
xchg
mov
int
addr16
sti
xor
mov
rcrl
jae
fidivrl
mov
aad
aam
rol
mov
lock
or
xlat
fldenv
popa
mov
mov
shl
or
imul
cmp
adc
scas
dec
ja
ss
aad
sub
xor
mov
movsb
sbb
fs
cwtl
cmp
mov
in
imull
aaa
push
dec
pop
lcall
xchg
repnz
push
dec
mov
mov
fbstp
repnz
das
leave
jmp
or
nop
xorb
mov
rorl
ja
jecxz
dec
scas
out
pop
jmp
push
sbb
pop
jecxz
push
mov
cmp
sub
mov
insl
je
mov
mov
arpl
inc
test
or
lods
mov
aaa
cmp
insl
decl
adc
fs
pusha
lds
leave
test
ret
cmp
icebp
sub
jmp
xchg
arpl
adc
leave
mov
lcall
test
pop
xchg
ficomps
cmovno
lea
xchg
aam
xchg
dec
cmpsl
push
ss
ret
jae,pt
add
mov
inc
push
add
movsb
cld
dec
cmc
add
mov
sahf
or
mov
and
sahf
mov
test
push
mov
inc
lahf
sub
shrb
push
dec
das
xchg
les
ror
push
push
out
or
push
pop
push
imul
mov
daa
inc
jl
movsb
ljmp
push
fcompl
push
sbb
pop
mov
or
decl
jno
daa
loopne
pop
mov
mov
lock
loope
cmp
out
fstpt
test
push
pushf
pop
dec
decb
dec
mov
and
adc
pop
jnp
push
cmp
mov
loop
int3
int3
or
mov
imul
insb
lahf
das
ret
add
mov
and
jmp
stc
rcrl
iret
xchg
scas
gs
and
lock
inc
fcom
nop
pop
lock
inc
fists
out
or
in
lods
mov
in
aam
xor
or
mov
movsb
push
push
push
sahf
pop
test
aaa
add
sub
js
insb
dec
cmc
push
or
outsl
stos
aas
ror
adcl
xor
mov
mov
out
fcoms
jno
les
aad
rcl
orl
cli
adcb
leave
roll
dec
cltd
rcll
ljmp
mov
xor
lock
pop
xor
imul
cmp
clc
mov
xchg
cmp
stos
call
popa
adc
jg
sbbl
icebp
incl
push
or
push
add
sahf
mov
sbb
cmp
mov
dec
push
mov
or
mov
sbb
pop
mov
sti
lcall
xchg
push
sub
pushf
data16
cmp
aam
inc
out
arpl
cli
test
mov
dec
loope
jmp
jge
stos
movsb
test
sub
inc
jo
sub
sahf
sub
std
pop
out
sub
out
jo
mov
xchg
cmp
inc
cmpsl
cltd
popf
jae
aad
jae
or
adc
push
fildll
fwait
dec
xchg
pushf
call
ds
repnz
mov
pop
mov
lds
repz
hlt
fucomip
insb
ret
popf
mov
cmp
pop
loopne
ja
flds
loopne
cmpsb
rorb
pop
enter
xchg
xor
jnp
mov
fcmovnu
jmp
insl
sbb
jo
adc
frstor
adc
mov
test
les
jmp
adc
sub
mov
scas
jge
sub
arpl
jbe
xor
xchg
arpl
stos
repnz
aam
cmp
imulb
icebp
js
les
push
lahf
or
mov
jp
lods
and
mov
pop
dec
fdiv
fcoms
jno
jge
add
cvtps2pi
push
cmp
rcr
orb
add
loopne
dec
aas
std
mov
fdivs
push
dec
sub
jb
repz
sub
in
fsubrp
fs
pop
outsl
push
adc
push
outsb
test
cmp
lods
mov
fisubrs
in
decb
dec
jp
add
xor
inc
in
mov
or
adc
scas
cmp
mov
addr16
xor
add
add
daa
or
dec
push
dec
xchg
pop
mov
imul
or
push
insl
arpl
pop
test
pop
sbb
mov
je
adc
cmp
test
outsb
xchg
xor
test
inc
cmc
xchg
out
lcall
inc
shrl
xchg
pushf
mov
and
lods
or
out
insb
push
out
mov
lock
mov
lret
dec
mov
adc
add
jmp
xchg
pop
subb
pop
sarl
adc
das
jne
rorl
mov
nop
sti
push
push
or
sbb
out
xor
movsl
mov
sbb
jle
hlt
pop
cmpsl
jno
mov
hlt
sbb
out
pop
push
dec
cmp
mov
xlat
ret
jecxz
push
ss
mov
pop
jge
in
daa
dec
inc
dec
mov
lods
aas
stos
inc
jle
pop
pop
pusha
pop
in
adc
xchg
push
mov
jne
push
inc
sub
push
insl
mov
sbb
inc
jo
adc
push
mov
repnz
repnz
pop
lods
or
mov
dec
pop
jge
movsl
scas
or
xchg
das
faddl
cmpsb
cli
notb
iret
push
sahf
addr16
cmpsl
jle
repnz
popa
mov
and
and
push
stos
shr
or
fs
mov
cmp
or
mov
divb
push
jb
aas
cmp
mov
and
sbb
shrl
sbb
jl
lret
dec
insl
stos
sti
ret
inc
lea
cmpsb
ljmp
jo
nop
movsb
dec
sub
ret
push
cwtl
cwtl
mov
pop
cld
dec
sub
sbb
movsb
pop
pusha
stos
addr16
pushf
inc
pusha
and
or
push
pop
mov
mov
pop
push
push
jg
icebp
lret
outsl
push
addr16
pop
cmp
lahf
jnp
ret
stos
enter
fcomi
xchg
cli
std
leave
pushf
and
jmp
dec
jns
xor
stos
inc
cmp
dec
mov
jmp
sub
imul
popf
pushf
or
rcrl
lret
insb
out
sub
sub
dec
ret
dec
jne
inc
sbb
jo
rclb
arpl
jle
cmpb
cmpsl
je
cmp
sarl
mov
jp
js
sti
divl
out
pop
pushf
out
lret
ja
fnstsw
out
test
cmp
dec
push
dec
je
mov
into
mov
sub
xor
and
pop
mov
idivl
jae
adc
cmp
fisttps
aam
int
fiadds
loopne
jns
pop
subb
mov
xchg
jge
dec
mov
dec
sub
lods
stos
in
mov
outsb
mov
aam
mov
mov
adc
sbb
clc
and
push
mov
mov
mov
push
or
inc
jo
pop
out
jmp
pop
int
fdiv
test
leave
mov
sbb
out
add
add
xchg
in
ficompl
jae
adc
loopne
mov
mov
mov
clc
or
dec
gs
mov
xchg
xchg
push
rolb
push
mov
icebp
out
fsubs
pop
or
outsb
mov
add
iret
push
test
mov
cld
lods
rolb
xor
pop
push
xor
stc
mov
jbe
bnd
jl
push
popa
fildll
and
jecxz
cmpb
push
hlt
test
sbbl
adc
and
xchg
mov
dec
hlt
fisubs
push
in
pop
and
xchg
cmp
ror
lods
inc
loope
xor
sbb
jecxz
out
addr16
cmc
adc
and
push
adc
outsl
adc
movsb
mov
or
cmp
sub
sbb
xchg
push
gs
out
ds
getsec
mov
push
loop
xor
aad
fdivrl
push
cs
mov
je
or
adc
push
cwtl
push
sub
xchg
int3
push
imul
inc
xchg
loop
cmpsb
pop
aam
jecxz
jns
pop
roll
lret
adc
into
xchg
push
xchg
sti
ret
xlat
xor
bound
das
scas
stos
push
rorb
notb
ljmp
fisttps
adc
xlat
push
inc
jp
addr16
es
mov
mov
iret
adcl
fwait
mov
push
test
cmp
testl
mov
mov
adc
cs
pushf
pop
fs
xchg
mov
cwtl
repnz
aad
bound
xchg
mov
xor
scas
andb
push
mov
mov
inc
out
in
sub
mov
add
cli
fwait
mov
stos
cmpb
sub
jmp
inc
scas
addb
jo
xchg
or
sahf
add
sbb
dec
fnstsw
lret
mov
cwtl
mov
clc
push
pop
push
test
lret
arpl
mov
loopne
rclb
in
jmp
test
inc
or
lret
pop
jmp
push
sti
stos
add
bound
nop
imul
jmp
rcll
pusha
jge
fucomp
xchg
push
sbb
xchg
cli
or
xor
divl
push
es
lret
xor
insb
dec
mov
loop
push
jmp
fstpl
mov
inc
xor
cmp
jbe
jno
push
sbb
bound
mov
adcb
std
add
inc
je
stos
inc
sub
dec
mov
addb
mov
mov
arpl
shr
or
mov
pop
or
mov
jne
pop
pop
xchg
and
cld
jp
roll
or
in
rcrl
loopne
shrl
mov
jne
enter
movsl
mov
addb
gs
mov
arpl
jle
xchg
inc
cmp
cli
add
cwtl
sub
stos
dec
cmpsl
shrl
mov
xchg
cmp
sbb
cmp
enter
les
aad
mov
icebp
pop
cmpsb
jo
std
aas
sub
aam
rcl
cmp
xchg
mov
insl
divl
test
push
jo
imul
xor
insl
add
mov
dec
mov
pusha
ja
cli
rcr
mov
cltd
cmp
lea
mov
popa
xchg
fwait
jbe
filds
pop
adc
cld
dec
push
mov
add
xchg
cmpl
addr16
cmp
push
icebp
cmp
add
sbb
jl
inc
fwait
insl
mov
and
loopne
ss
mov
jmp
mov
or
xor
insl
or
push
test
insb
sub
mov
shll
jno
xor
or
lcall
add
outsl
mov
xor
shrl
push
and
cld
xor
sbb
out
or
je
imul
add
xor
js,pt
jmp
into
lods
add
loop
out
xchg
fst
fwait
ds
mov
lock
cmp
shl
fidivrl
into
mov
mov
jge
sbb
lahf
aad
cmp
stos
inc
push
loopne
out
out
cli
xor
cmpsb
or
sbbl
or
push
daa
dec
out
push
scas
cmp
mov
gs
cli
adc
xchg
mov
push
push
negb
cmp
stc
cmc
or
sbb
xor
outsl
loop
dec
stos
and
cltd
ret
dec
xor
mov
test
dec
push
mov
push
dec
sbb
pop
mov
jno
dec
push
xor
mov
sbb
pop
sbb
ds
call
mov
cmc
insb
add
mov
cmp
adc
mov
addb
sub
pop
nop
sub
mov
aam
mov
iret
aas
inc
std
push
pop
mov
sarb
testl
loope
aaa
mov
jmp
pop
int
sbb
rorb
adc
popa
stos
sarb
lods
loopne
test
pop
stc
mov
arpl
mov
inc
xchg
pushf
lods
xchg
mov
cld
xor
xchg
mov
pop
cltd
inc
xchg
xor
dec
sub
pop
cmp
mov
inc
fidivl
sbb
adc
cli
fmul
inc
pop
add
lock
push
scas
imul
jns
pop
inc
push
wbinvd
xorb
scas
in
cmp
int3
outsb
inc
in
add
addb
xor
call
cmp
add
mov
mov
inc
insl
insb
pop
mov
xorl
mov
ja
dec
repz
cld
daa
lcall
outsb
mov
cmc
jbe
or
scas
enter
fcoms
xchg
out
add
ss
pop
add
in
cmpsb
iret
jl
mov
cs
jp
adc
pop
popf
xor
cmp
add
pop
sbb
cmc
insl
flds
test
mov
loop
jge
pop
cli
rolb
cmp
leave
mov
jne
or
and
out
mov
add
adc
mov
into
cld
push
sub
insb
ja
shrb
add
dec
jmp
popf
sub
stc
aad
cmp
jae
xchg
or
inc
add
xor
inc
inc
mov
adc
js
adc
mov
or
inc
dec
xlat
cmpsb
inc
mov
xor
jb
not
pop
lcall
cmpsl
mov
pop
push
fcoms
lret
xchg
lea
or
insb
xor
push
or
fcomp
sub
push
add
arpl
pop
and
or
daa
arpl
xchg
aas
xor
mov
sub
xchg
lock
xchg
push
int3
or
scas
lea
fdivl
stos
aaa
insb
push
pop
mov
stos
push
add
sbb
fiadds
inc
arpl
or
dec
mov
add
cmp
and
cld
sub
dec
dec
sbb
mov
dec
inc
lods
fmul
inc
in
cltd
mov
xor
sbb
sub
pop
push
jle
bound
movsb
inc
xor
iret
fisubl
inc
aas
int3
fidivs
iret
leave
subb
jge
rclb
pop
jns
stos
shlb
ja
testb
ljmp
adc
inc
repnz
cmc
aas
test
mov
ret
mov
cmpsb
test
inc
jnp
mov
ja
cmpsl
inc
jmp
arpl
jae
pop
or
dec
jge
and
push
add
insb
ljmp
adc
orb
adc
inc
jns
adc
cs
and
fs
aaa
lahf
in
mov
add
cmc
addr16
das
lcall
outsl
cmp
fisttps
inc
test
cmp
es
or
xor
dec
mov
add
les
push
xchg
cmp
mov
add
les
movsb
or
lods
jbe
cld
mov
push
sub
inc
add
hlt
loop
dec
cmpsl
xchg
ja
cmp
xchg
int
push
in
mov
lcall
movsl
mov
xor
or
fiadds
out
in
aam
scas
adc
outsl
mov
and
inc
loopne
outsl
bound
dec
mov
fildl
adc
sbb
xor
es
mov
inc
imul
stos
pop
xor
stos
dec
aad
add
insb
addb
lods
ss
mov
sub
jae
loop
cmp
sbb
cmpsb
push
or
pusha
out
fstl
cwtl
cwtl
mov
insb
jge
and
dec
sbb
sub
pusha
in
out
ret
in
movsb
int
sbb
xor
shll
inc
pusha
dec
lret
adc
leave
iret
sub
sti
int
mov
test
mov
ret
jp
roll
lret
cltd
cmp
test
add
loop
xlat
clc
rclb
movsb
jg
sti
fldl
jns
fdivr
test
xor
adc
fs
leave
or
xorb
and
leave
xor
lea
xchg
jae
sbb
repz
and
or
hlt
cld
and
mov
and
cmp
adc
mov
mov
push
xor
sahf
iret
add
paddd
push
or
lods
dec
xchg
or
xchg
cmc
add
lret
or
outsl
xchg
or
jl
adc
pop
ror
in
in
jg
andl
push
insl
out
adc
in
scas
inc
dec
xchg
mov
pop
xor
push
mov
gs
jmp
inc
pop
cli
jge
cmp
loopne
xchg
dec
rcrl
int
xchg
out
mov
loope
sarl
xchg
mov
pop
dec
stc
pop
push
mov
inc
xchg
xor
shl
push
jl
aad
mov
pop
jne
mov
xor
sub
cmp
jnp
adc
aam
push
arpl
push
dec
push
aaa
mov
xlat
and
int
cld
xlat
dec
pop
movsl
inc
ss
push
adc
icebp
jmp
addr16
adc
lods
sbb
push
mov
mov
or
les
enter
sbb
test
test
cld
xchg
cmp
jl
xchg
add
push
ret
jecxz
jnp
lret
dec
sbb
les
pop
cmp
sub
pop
pop
ficoms
xchg
repnz
push
add
test
ljmp
aad
or
imul
and
insl
mov
sti
xor
inc
fidivrl
cmpsb
mov
dec
mov
dec
outsb
ret
sub
lock
sahf
ds
lock
dec
inc
cmpsl
xchg
sar
mov
push
adc
inc
jb
pop
sbb
fdivrl
mov
aad
les
cmp
ret
jl
cmp
imul
movsb
fs
scas
icebp
pusha
pop
mov
insl
mov
daa
sub
pop
jmp
lods
movsl
adc
xor
xchg
arpl
mov
mov
jae
jl
lods
cltd
imul
insb
mov
imul
mov
into
nop
clc
sti
xchg
in
push
sahf
push
push
and
push
outsb
iret
popa
sub
out
and
aaa
js
sub
xor
rcrl
sub
mov
adc
setae
cmp
js
fs
adc
sub
xchg
add
insl
dec
ds
cs
push
jecxz
add
fwait
add
sub
adc
xorb
cmpb
add
push
dec
mov
push
iret
aad
pop
mov
test
fistl
inc
aaa
or
and
leave
xchg
jae
xchg
push
daa
mov
loope
stos
dec
xor
repnz
jmp
daa
ficoms
ror
jp
pop
mov
adc
jmp
stc
jmp
xchg
pop
mov
push
in
insb
out
int
dec
or
mov
sbb
mov
repnz
lret
loop
shr
mov
cmpsl
hlt
sbb
add
jnp
fldenv
mov
jne
push
pop
out
add
and
pop
inc
push
jp
mov
fstpt
jns
into
shrl
push
adc
mov
mov
addl
sub
dec
pushf
adc
jo
jmp
pushf
mov
jle
xor
sub
fs
jmp
jecxz
or
xlat
or
addr16
dec
out
imul
jle
xor
loop
pop
loopne
sbb
gs
aam
imul
jnp
sbb
dec
das
pop
mov
mov
jae
cmp
aam
jge
inc
lret
mov
enter
out
push
mov
int
arpl
mov
dec
mov
ret
inc
mov
loopne
call
xchg
fiaddl
add
add
cmc
pop
jp
cld
fnstsw
cltd
sbb
lahf
pop
push
sti
dec
xchg
loope
pop
adc
repz
xor
mov
and
shlb
mov
fs
adc
adc
push
xchg
dec
mov
dec
xchg
hlt
fisubs
add
ja
pop
push
sti
imull
int
mov
es
dec
jg
test
sub
jbe
xor
jbe
jne
lds
sar
mov
or
dec
push
cld
adc
out
inc
dec
sbb
xchg
cmp
scas
push
pop
aaa
cli
fimuls
mov
sbb
sub
ja
leave
mov
jne
adc
or
test
shrb
sub
xchg
mov
cltd
ja
sbb
mov
idivl
mov
pop
daa
cmp
clc
out
dec
fsubl
add
sub
jns
shr
push
incl
and
xor
cmp
sbb
sub
or
jo
xchg
loope
mov
and
xchg
and
bound
xchg
sub
popa
daa
je
jo
fcomip
cmp
lods
scas
add
movsl
aaa
iret
cwtl
jl
imul
push
sbb
and
mov
xor
push
sbb
in
dec
pop
dec
sub
outsl
add
mov
xchg
idivl
and
xchg
bound
stos
or
or
xchg
enter
mov
fadds
inc
inc
in
jge
mov
test
xchg
popf
pop
rcl
sbbl
pop
xor
outsb
insl
jp
jp
call
les
idivl
jnp
das
mov
lret
add
arpl
or
push
iret
xchg
fwait
mov
xchg
int
aas
jb
push
out
mov
adc
lods
sbb
in
mov
or
or
or
inc
in
adc
mov
jg
sti
push
ret
xchg
dec
adc
sbb
cmp
xor
mov
sub
jg
data16
push
fimuls
xchg
cmp
push
sub
add
mov
mov
and
pop
jb
add
xor
xchg
mov
mov
sbb
inc
das
mov
or
shlb
es
mov
add
or
mov
mov
movsl
xor
fwait
push
lods
mov
dec
xor
ret
mov
inc
cmp
mov
ss
fcoms
push
daa
repz
stos
cmp
jp
pushf
imul
cmp
xchg
in
roll
out
inc
scas
pop
pop
loop
inc
push
and
add
mov
dec
push
popf
lds
das
cmp
push
pop
xchg
iret
mov
outsl
lods
push
sub
addr16
loope
adc
aad
insb
push
mov
incl
cwtl
repnz
sub
mov
bnd
dec
incl
add
and
jp
loopne
mov
stos
sahf
pushf
sub
aam
or
or
xchg
aam
arpl
arpl
jp
add
daa
adc
dec
add
mov
push
shll
gs
fldcw
daa
cmp
fcompl
mov
aad
lahf
xrelease
pop
rcl
jne
sub
adc
xlat
out
addr16
in
jno
sub
and
out
xor
mov
icebp
inc
xor
jb
cli
push
shr
push
mov
and
xor
jecxz
add
adc
int
lret
sbb
test
int3
or
and
or
out
test
xor
mov
jge
mov
stc
push
cmp
loopne
bound
lea
jbe
lods
xchg
cmpb
iret
popa
sbb
push
lret
adc
rorb
cwtl
insb
push
loope
inc
js
jl
ds
pushf
stc
inc
ret
aad
mov
adc
pop
add
in
inc
rcrl
push
lret
mov
loope
dec
lcall
aaa
int3
xlat
mov
es
das
fmull
and
inc
imul
jp
and
sbb
dec
popa
mov
dec
imul
mov
lods
sbb
mov
inc
adcl
xor
push
or
and
lods
xlat
inc
in
fimull
and
inc
int3
rclb
movsb
jge
xchg
sub
and
add
mov
pop
mov
mov
push
inc
add
test
adc
lahf
mov
mov
push
mov
ja
test
lmsw
mov
pop
dec
xchg
or
pop
jb
cmc
outsb
jae
inc
cmpsb
sub
and
repz
faddl
and
scas
or
pop
add
jl
incb
pop
inc
repnz
jno
mov
sbb
in
and
mov
nop
out
in
das
xchg
adc
pushl
cli
pushf
cs
sub
nop
imul
mov
pop
inc
dec
mov
ds
push
and
out
fdivr
mov
mov
outsl
fucomip
stos
cmp
add
sti
jo
test
sbb
xchg
lret
add
loop
push
test
and
imul
push
out
cmp
jg
shlb
pop
xchg
rcrb
mov
jae
or
xchg
shll
in
inc
test
cld
cmp
shll
cmp
loope
gs
sbbl
inc
fisttpl
loope
adc
lea
sub
cmp
dec
xor
dec
cmp
fwait
jge
xor
jns
cmpsl
or
js
out
cs
je
push
sarb
inc
mov
xor
sbb
or
lods
inc
cmp
inc
jbe
jnp
sbb
jns
loope
mov
add
lret
xchg
add
mov
je
ret
push
fcmovnu
jno
mov
pop
pop
or
sti
call
xor
adcl
jno
pop
jne
xchg
mov
inc
in
lcall
into
shlb
sub
jno
pop
aam
in
push
not
fucomp
jae
mov
mov
jp
xor
addb
test
add
lock
sahf
add
push
dec
mov
hlt
es
adc
out
sbb
cli
pusha
rcrb
xchg
dec
ds
jne
inc
subl
cmp
mov
outsb
mov
dec
clc
popw
jne
mov
cmp
insl
or
xchg
xor
inc
sub
repz
or
mov
push
add
cld
adc
jl
add
and
fldt
add
dec
xor
orl
mulb
push
sub
cltd
push
mov
jmp
out
out
iret
push
jns
leave
inc
stos
inc
and
jbe
leave
imulb
adc
lods
shlb
test
notl
pop
mov
out
aam
enter
movsl
mov
jns
in
jle
sbb
clc
add
mov
in
dec
adc
push
inc
dec
mov
out
pop
mov
xchg
or
mov
je
int
and
scas
std
ja
inc
adc
arpl
lea
pushw
pop
xchg
ljmp
ja
push
jg
and
pop
and
jbe
add
pop
mov
repz
scas
fistl
mov
or
mov
mov
sub
stos
test
xor
cmc
mov
mov
int
add
insl
sub
adc
cmp
sub
jg
xchg
mov
pop
mov
inc
cmp
movsb
orb
dec
test
inc
pop
mov
mov
stos
lcall
out
mov
cmpsl
pop
inc
popf
aas
sbb
xor
out
adc
jmp
out
add
jl
xchg
mov
adc
loop
jmp
jge
lret
jge
cmp
jmp
and
cmp
imul
xlat
push
clc
ret
inc
sub
arpl
fcomp
push
pushf
loopne
and
xchg
call
jnp
sbb
jo
test
and
sbb
mov
imul
sub
fadds
stc
xchg
mov
push
sub
mov
sahf
or
and
sbb
nop
push
adc
lret
mov
push
ljmp
xor
bound
lods
data16
pop
add
jo
and
and
lahf
gs
dec
cmpsl
enter
cli
in
out
inc
push
je
mov
aaa
xchg
insb
xor
fcoml
scas
sub
mov
js
mov
cmp
inc
sar
and
sub
shrb
xor
cmpsl
add
mov
mov
push
js
mov
stc
insl
push
pop
add
push
inc
adc
cs
std
jno
bound
and
hlt
addr16
pop
data16
in
ja
js
fcomip
cmp
fdivr
jb
iret
mov
add
push
call
jecxz
orb
lods
bound
stc
in
bound
mov
jns
mov
push
ja
aad
push
js
imull
jnp
add
jno
cmpsl
testb
in
pop
mov
xlat
outsb
fwait
mov
xor
pop
xchg
int3
cmpsl
mov
jecxz
cli
enter
mov
out
out
sub
pop
movsl
sti
push
mov
sarb
arpl
mov
arpl
adc
stos
dec
fstps
movl
movsb
add
notl
jg
push
mov
addr16
xchg
push
cmp
mov
inc
mov
insl
inc
inc
inc
addr16
movsl
mov
and
xlat
push
mov
sub
outsl
ret
andb
sub
in
or
int3
mov
fisubl
or
out
mov
push
mov
cmp
lea
push
into
dec
movsb
mov
or
movsb
jp
mov
or
mov
jl
int
jno
insb
pop
push
cmp
pop
addr16
insb
das
push
enter
aad
push
imul
jne
mov
xchg
jb
xchg
lret
lahf
aaa
lret
mov
xchg
jne
sub
dec
shl
xchg
mov
sbb
mov
pop
push
push
and
xor
ja
inc
lret
sahf
or
pop
inc
mov
jp
shlb
xor
dec
cmp
pushl
pop
push
dec
jle
cli
addb
inc
cli
ss
inc
fdivs
call
push
push
mov
mov
imul
lcall
jmp
sti
add
add
in
mov
dec
lret
xchg
jbe
pop
xorb
lock
push
pop
aam
pop
sbb
sbb
imul
gs
adcl
xor
dec
loop
imul
fldl
cld
daa
jb
mov
add
test
pop
out
xchg
xorl
or
lret
das
dec
adc
popf
mov
xchg
insl
inc
cs
inc
stc
lret
cmpsb
xchg
sub
jge
xchg
sbb
pop
decl
and
lcall
xor
or
in
push
mov
ss
xor
enter
or
add
jns
aaa
shlb
push
adc
xchg
test
dec
pushf
jmp
insb
adc
call
sub
xchg
jbe
cmp
lahf
sub
mov
add
mov
add
imul
mov
sub
dec
in
ja
scas
mov
fiadds
mov
sbb
push
fiadds
xor
cmp
pop
lods
les
adc
inc
mov
adc
daa
hlt
push
push
pushf
jno
sbb
cs
stos
in
je
stos
sub
inc
bound
out
and
loop
cmp
jbe
gs
arpl
mov
scas
shll
cli
adcl
leave
pusha
and
xchg
cmc
divb
lock
out
jle
sub
xor
out
int
dec
xor
lea
insb
mov
xchg
sbb
and
lcall
pop
stc
dec
stc
xchg
pop
sbb
jne
xlat
pop
gs
insb
mov
std
orb
pop
and
test
sub
mov
stos
sub
add
sub
xchg
loope
test
lcall
mov
or
push
cmp
loopne
ja
es
pop
mov
mov
stos
adc
inc
repz
mov
push
adc
push
jne
in
sub
jno
inc
jle
lds
sti
mov
xchg
imul
popa
inc
in
push
adcl
hlt
mov
xlat
dec
adc
adc
cld
adc
mov
stc
sti
jge
jl
xor
lret
jge
icebp
cwtl
xchg
andb
lods
mov
add
loopne,pn
mov
iret
pop
test
arpl
mov
stos
jle
mov
sbb
arpl
sub
lods
addr16
xchg
into
jns
sti
mov
cmpb
mov
cli
imul
pop
sbb
sti
outsl
cmp
jnp
or
mov
mov
subl
lds
cmp
ljmp
je
xchg
or
xchg
xchg
inc
movsl
mov
cmp
frstor
xchg
inc
incb
push
inc
enter
in
fiaddl
je
push
sub
inc
xchg
xchg
or
mov
imul
in
push
ret
repz
mov
sbb
sub
mov
lret
loop
cmp
filds
daa
aaa
subb
std
cltd
ret
insl
or
inc
repz
es
adc
icebp
mov
addb
xchg
in
sbb
jnp
add
mov
icebp
dec
inc
stc
imul
dec
mov
and
lods
dec
mov
xor
push
and
scas
cwtl
aas
out
mov
push
test
repnz
data16
xrelease
mov
aam
stc
je
icebp
xchg
rcrb
sti
call
push
orl
add
jb
sub
stos
or
or
sahf
mov
add
loopne
inc
push
pop
add
shl
mov
dec
testb
popa
pop
arpl
arpl
movsb
mov
test
jg
je
mov
fs
out
dec
push
test
das
sub
or
rcll
repz
lea
inc
cmpsl
call
mov
mov
pushf
sbbl
mov
cli
fists
mov
cmp
adc
dec
inc
aaa
pusha
add
test
inc
scas
mov
fldl
les
cmp
pop
push
adc
jo
cs
or
mov
mov
mov
adc
pop
sahf
mov
icebp
fadds
mov
leave
sbb
sbb
cmp
data16
adcb
mov
inc
xorb
sti
lcall
movsb
ret
add
dec
sbb
xor
cmp
fs
pusha
jl
pusha
sub
xchg
push
inc
push
sbb
jmp
loop
cmp
inc
push
leave
movsl
or
jno
adc
ffreep
fwait
xchg
pop
ss
pop
adc
rcrb
jecxz
push
or
cli
mov
sbb
leave
outsl
add
dec
test
mov
shl
xor
jle
mov
inc
mov
mov
xchg
fs
repnz
sub
dec
inc
mov
lods
bound
or
mov
adc
mov
inc
lods
dec
sarb
sub
mov
test
push
dec
ljmp
sbb
daa
ja
ret
sub
scas
and
sub
or
fistl
pop
xchg
xor
int3
clc
push
and
dec
nop
mov
jmp
ja
xor
lcall
outsb
test
ror
lcall
loopne
scas
nop
test
repz
addr16
jns
arpl
jg
mov
cmp
inc
cmp
data16
xchg
in
pop
aad
pop
addr16
mov
sub
cmp
pop
adc
mov
jo
pop
stos
pop
inc
xchg
mov
shrb
loop
imul
dec
sbb
push
rorl
stos
dec
shll
or
pop
pop
aad
into
and
aas
mov
jo
daa
cltd
sbb
int
pop
dec
js
cmp
inc
push
jbe
in
subl
xor
stos
jmp
ret
push
sub
bound
and
jb
add
jo
cmc
pop
test
pop
bound
in
or
jecxz
nop
pop
fucomp
xchg
jmp
test
mov
cmpb
subl
push
dec
mov
sbb
ret
insb
push
dec
cmp
mov
cmp
cmp
jb
dec
and
pop
ret
ljmp
enter
and
xchg
call
mov
xchg
mov
jle
and
mov
aam
mov
cmp
dec
out
jge
cmp
scas
enter
or
mov
sarl
pop
jns
leave
pop
je
int3
inc
pop
mov
and
lds
js
subl
shr
stc
push
inc
cld
test
es
xor
push
pop
jg
mov
push
and
and
or
sub
mov
xchg
icebp
lret
inc
and
or
es
insb
out
pop
movsb
stc
mov
lret
mov
sbb
les
mov
dec
mov
xor
leave
mov
inc
or
pop
fbld
cmp
es
cmpsl
jne
flds
sbb
aad
fistpl
sbb
shlb
mov
mov
sub
inc
mov
or
js
je
data16
mov
fidivl
scas
push
sub
push
jmp
fucomp
in
lock
pcmpgtd
unpckhps
push
dec
jg
push
inc
fistpl
hlt
dec
cmp
xchg
sbb
or
or
sbb
push
pop
repz
mov
jbe
cmpsw
cs
xor
dec
test
mov
mov
or
ja
fcoms
lock
dec
rcr
sbb
lcall
push
xor
scas
adc
xchg
pop
push
adc
sub
in
repz
movsb
push
stos
xchg
inc
leave
es
jne
stos
or
xor
dec
loope
cmp
push
xchg
push
fs
repz
pop
fwait
loopne
fs
hlt
jmp
fwait
mov
test
cmp
popa
cltd
enter
mov
push
dec
xchg
push
fildl
mov
adc
inc
stos
and
loopne
test
ret
aad
push
setge
aas
jl
jb
test
sub
and
mov
pop
push
loopne
and
sahf
jbe
or
dec
lea
rcr
scas
adc
outsl
loopne
sbb
clc
les
jle
clc
loop
xchg
push
cmp
loope
lret
xor
sti
gs
sbb
stos
popa
push
ja
xchg
xor
addr16
pop
addl
and
push
out
pop
push
sub
mov
add
dec
inc
pop
push
dec
dec
mov
mov
xchg
notb
out
push
scas
xor
jno
inc
stos
dec
aaa
adc
lret
mov
jno
addr16
mov
and
in
lcall
inc
mov
sbb
cmp
cs
add
mov
inc
xchg
clc
stos
cmp
enter
dec
shlb
cmp
jmp
in
inc
imul
adc
sbb
mov
cltd
mov
jle
sub
out
stos
mov
lds
pop
sub
repnz
scas
inc
mov
xorl
rcl
loopne
add
cmp
xor
inc
je
arpl
icebp
jl
and
inc
rcll
xor
sbb
lcall
xchg
xor
mov
add
int3
xor
cltd
jb
xor
enter
xchg
lock
loopne
sbb
loope
inc
inc
and
mov
xchg
pop
inc
fcompl
mov
insb
test
or
lret
sub
xchg
daa
imul
stos
inc
cmp
inc
loop
adc
mov
cmpsl
inc
icebp
ficompl
out
arpl
mov
or
ret
sub
mov
adc
push
xchg
xchg
sub
clc
cs
mov
aad
fstl
xchg
add
insl
and
shlb
cld
xchg
push
test
movsl
push
mov
mov
cmp
push
mov
dec
dec
jne
sub
xor
xchg
icebp
loopne
ja
cmp
jb
subb
pop
jb
jge
fdivs
xchg
push
xor
or
cld
shlb
mov
dec
sub
pop
fsubs
pop
mov
loope
shrl
cwtl
loopne
sub
in
scas
mov
jp
push
mov
mov
enter
pop
push
sbb
mov
cltd
push
jecxz
mov
test
push
inc
arpl
push
mov
js
ds
and
mov
arpl
cwtl
call
cmp
int3
xchg
or
push
js
icebp
ja
jbe
test
mov
push
pop
tzcnt
popl
sub
lea
movsb
xchg
scas
fldt
sahf
sahf
mov
out
test
orb
inc
dec
in
int
mov
dec
bts
jg
in
jne
addb
sbb
outsl
push
push
pusha
inc
xlat
loopne
hlt
sti
dec
leave
add
mov
int
mov
pop
xor
mov
jg
out
pushf
divb
push
aas
and
stos
mov
into
mov
pop
test
lret
shrl
aaa
add
mov
mov
push
xor
inc
adc
out
je
dec
dec
insb
sti
jo
cltd
jmp
rcrb
push
leave
out
sub
out
ficompl
jge
xchg
leave
sbb
fmul
mov
or
pop
dec
adc
cltd
inc
test
rcrl
pop
xchg
leave
std
loope
mov
fidivs
enter
adc
jecxz
cmp
push
cld
or
mov
aaa
adc
mov
clc
sbb
mov
std
mov
and
mov
arpl
xchg
es
std
dec
ljmp
sub
xchg
je
out
mov
stc
lahf
sub
lahf
cli
and
in
cs
pop
scas
mov
nop
mov
mov
add
inc
and
jle
inc
push
lcall
iret
jo
pop
inc
fsub
in
sub
cmpsl
mov
add
cmp
movsl
test
jno
mov
lahf
adc
fs
inc
fisttpll
sbb
shl
jne
out
mov
ss
xchg
adc
jbe
inc
test
fsubrs
xchg
mov
adc
notb
add
in
jno
inc
test
test
icebp
xor
mov
xchg
js
int
xlat
jns
jo
adc
inc
xchg
sbb
cmp
jp
push
xor
lock
jne
xchg
cld
jne
push
sar
int
fcom
sahf
nop
jo
pop
or
adc
mov
das
iret
iret
jae
pop
jo
stos
dec
imul
jg
push
repnz
cli
mov
jae
pushf
add
es
ss
add
jle
mov
lods
xchg
iret
xchg
out
flds
xchg
pop
dec
iret
addb
pop
sub
dec
or
lcall
aaa
les
adc
pop
or
dec
insb
jnp
jbe
push
ljmp
hlt
jbe
cmpsb
cld
jle
lcall
les
test
mov
add
out
lds
imul
mov
sbb
test
pop
ljmp
cltd
adc
fnstcw
fcoms
icebp
or
push
inc
push
mov
jle
lock
in
xchg
pop
jne
lea
cmc
mov
stc
shlb
xor
pop
xlat
fdiv
adc
arpl
lods
ja
fidivrl
out
lcall
dec
imul
xor
inc
cmpb
xchg
jle
push
push
cmpsl
adc
dec
stos
xor
jns
and
pushf
pop
lods
std
pop
mov
cmp
aad
sub
sub
sti
mov
iret
pop
mov
in
dec
mov
sti
shr
loope
fwait
push
loop
xchg
pop
cwtl
mov
mov
jg
cmpsb
jmp
cmp
push
push
adcl
cmp
cmp
sbb
lcall
add
fcmovnb
cmp
mov
mov
push
fdivr
inc
std
lret
nop
xor
test
sub
add
mov
es
xchg
loope
inc
push
fnsave
into
push
pop
mov
xor
mov
lods
ret
mov
pop
out
mov
push
lods
add
pop
rcrl
or
lcall
out
sbb
ss
aam
adc
in
aas
lock
push
mov
sahf
cmpsl
mov
add
mov
mov
jnp
jno
icebp
pop
popa
test
and
jo
je
mov
fistps
xor
js
pop
lret
mov
mov
fst
cmc
scas
push
fldenv
and
jl
and
aad
fdiv
jne
xlat
nop
jae
in
inc
and
jecxz
pop
mov
mov
popf
mov
in
xchg
fwait
sti
aad
or
xor
out
sbb
xor
xchg
cmc
or
rorl
andb
loope
inc
push
cmp
dec
inc
sub
fbld
fidivl
and
aas
mov
lcall
imul
pop
cltd
fwait
mov
pop
dec
inc
xchg
jno
cltd
pop
insl
push
push
ds
rolb
and
scas
cmove
mov
inc
push
mov
addr16
nop
in
stc
pop
mov
loop
pusha
daa
mov
lahf
mov
movb
add
add
inc
inc
movsl
lods
or
stos
xchg
xchg
pop
and
shlb
notl
ss
jg
sbb
mov
inc
popf
lea
std
pop
loope
shll
repnz
push
jmp
aas
mov
add
mov
fs
mov
ja
xor
jle
hlt
cwtl
repnz
out
mov
inc
mov
inc
push
repnz
sbb
loop
ret
es
lahf
pop
mov
push
and
mov
or
adc
xor
xor
xlat
inc
pushf
fnstsw
mov
bound
xchg
mov
iret
mov
imul
push
imul
out
cli
pop
push
pop
jmp
lock
outsb
mov
mov
jp
mov
dec
xchg
pop
out
test
sub
in
push
test
lds
mov
xchg
dec
pop
xchg
adc
pop
ljmp
aad
cld
mov
movsb
loop
mov
xor
scas
gs
pop
fists
and
mov
aam
cltd
nop
aas
add
push
sub
stos
jae
mov
pop
repnz
scas
bound
test
loop
xchg
add
mov
mov
lock
cmp
fmuls
imul
loopne
sbb
dec
or
pop
dec
mov
add
mov
lcall
out
sub
pop
sti
cwtl
sbb
or
pop
cli
and
dec
outsb
inc
cmp
mov
mov
mov
jp
xorb
and
in
loope
jae
cmp
jp
ss
shl
push
cld
pop
jno
insb
sub
shr
int
test
and
dec
ljmp
arpl
cmpsl
mov
ret
mov
repnz
test
or
lret
test
adcb
sarb
xchg
cli
mov
shrb
xchg
repnz
dec
inc
mov
insl
insl
add
shrl
push
les
sub
shll
lahf
aam
fiaddl
inc
mov
add
aaa
test
xlat
add
jb
insb
les
add
aas
dec
lods
mov
lods
dec
data16
xor
sahf
stos
cld
xor
jp
int
push
fnstsw
cmpsb
dec
jae
dec
dec
sbb
lahf
xor
test
push
imul
test
pushf
pop
cld
adc
xchg
test
push
ss
jg
mov
mov
xchg
cmpb
ror
adc
outsb
stos
pop
test
fcompl
lret
int3
dec
mov
les
movsb
fucomi
mov
jbe
push
in
call
popf
sub
xchg
ret
lods
cmp
sub
mov
dec
lea
sbb
push
sub
or
gs
jecxz
in
loopne
test
addr16
out
push
jbe
gs
in
shlb
aad
or
adc
jmp
and
insl
sbb
pop
xor
mov
xchg
icebp
imul
cli
jno
sub
hlt
outsb
sub
stos
dec
jno
mov
push
and
sub
pop
rorl
fimull
ss
das
cs
iret
stos
dec
imul
mov
cmc
mov
mov
and
ss
test
push
jge
mov
cmpsb
pusha
loopne
jnp
adc
inc
xchg
mov
insl
lock
pop
add
adc
cmp
mov
rclb
inc
xchg
lret
aad
sahf
mov
movsl
fistpll
enter
pop
cltd
jp
test
enter
dec
or
sbb
rorb
jecxz
mov
adc
push
not
fdivp
xchg
fadd
dec
in
stos
xchg
outsl
cwtl
jae
mov
clc
lods
les
outsl
neg
loop
setge
push
lds
fldln2
inc
aas
aas
xchg
jo
inc
sub
jno
sbbl
xor
mov
push
ljmp
xlat
aad
lea
out
or
ljmp
movsb
mov
add
aaa
cmp
xchg
push
fiaddl
lods
push
dec
jle
inc
sbb
inc
add
movsb
jo
xor
inc
in
mov
mov
in
mov
sbbb
mov
imul
inc
mov
fcomip
xlat
dec
xchg
fwait
or
pop
stc
cmpl
mov
call
mov
out
lcall
icebp
push
xorb
outsl
lret
mov
and
sbb
inc
out
loope
mov
into
inc
inc
es
jge
sahf
in
addl
sbb
cmc
add
pop
addr16
inc
jg
dec
mov
cmp
xor
and
and
sbb
loop
adc
mov
enter
js
cmp
or
jecxz
daa
iret
adc
jno
push
mov
xchg
arpl
or
lahf
mov
test
popl
dec
jle
int
mov
testb
push
fs
inc
xchg
cwtl
lahf
imul
shrd
mov
cmp
xchg
jmp
xchg
pop
mov
ret
sbb
jb
adc
lret
arpl
jns
pop
leave
mov
inc
out
notl
or
cmpxchg
mov
fucomip
jge
test
xchg
cmp
xchg
push
xor
das
sti
leave
loope
jno
push
fldcw
xchg
xchg
push
cwtl
fnstsw
xchg
xor
or
and
mov
mov
cwtl
addr16
iret
jno
loopne
push
pop
dec
and
add
aam
sbb
daa
or
mov
pop
cmp
fsub
mov
sub
and
stos
mov
les
push
inc
aam
sbb
pmullw
fstl
out
pushf
sarl
or
push
jae
popa
aas
jae
into
js
xor
repz
testl
in
sarl
fsubrp
fdivr
xchg
ret
mov
xor
push
xor
out
dec
mov
shll
inc
movsl
test
xchg
ret
shr
jnp
outsb
insl
out
dec
cld
mull
or
mov
mov
adc
fildl
stc
sbb
inc
lret
lds
xor
inc
mov
std
fbld
jle
xlat
cwtl
in
xor
repz
into
pop
dec
out
jno
ljmp
dec
sub
je
mov
adc
pop
das
add
inc
sbb
xchg
pop
dec
sbb
inc
sub
and
pop
jmp
mov
pop
jge
mov
popa
xor
mov
fadd
rorl
jp
mov
mov
imul
out
subl
int3
cmpsl
sbb
jno
fisubrs
or
test
jbe
or
fiadds
sbb
xor
sub
ljmp
xor
and
fildl
int3
mov
loopne
pop
mov
pop
jg
dec
repz
jl
dec
and
fwait
push
es
pop
cld
xor
jne
out
icebp
les
push
mov
dec
or
test
xorl
xchg
pop
or
aaa
sysret
inc
mov
xor
jmp
insl
fstpl
xchg
jmp
fwait
or
sub
rorl
and
pop
ja
mov
and
cmp
movsl
inc
push
sub
out
insl
pushf
das
dec
pop
push
dec
rcrl
inc
mov
push
cmp
cwtl
and
shlb
aam
xlat
cs
fdivrp
mov
pushf
js
fsubrp
mov
cmpsb
mov
nop
sub
jne
dec
mov
adc
xchg
mov
insl
pop
and
fs
sbb
std
andl
mov
aam
clc
insb
pop
inc
stos
or
out
jmp
mov
icebp
jg
fsubrs
ljmp
data16
pop
cwtl
push
xchg
mov
aaa
inc
jbe
lock
inc
pop
cmp
xor
sub
jae
adc
pop
mov
dec
push
pop
dec
dec
jns
push
mov
mov
mov
clc
test
out
loopne
push
push
clc
xor
mov
mov
pop
pop
push
add
out
aad
iret
clc
out
inc
mov
pop
mov
mov
pop
rcr
aas
sub
sub
les
stos
jo
inc
pop
lss
or
or
lahf
adc
mov
out
dec
xchg
or
push
mov
and
dec
adc
flds
or
jle
daa
rclb
aam
jae
jmp
imul
inc
in
andl
jae
mov
test
push
and
into
fdiv
inc
dec
pop
loope
push
pop
mov
stos
xchg
push
mov
sub
test
sbb
cmp
pushf
add
cmp
pop
lds
es
pop
mov
inc
cmp
sub
sub
inc
aaa
jl
inc
inc
ret
inc
pop
jae
cltd
aas
fcmovnbe
cltd
mov
mov
call
ljmp
sub
jmp
int
mov
xchg
lds
enter
mov
push
sub
pop
scas
inc
push
mov
and
mov
xor
sbb
andb
mov
inc
add
nop
push
jp
scas
cld
sbb
jns
xor
stos
mov
dec
js
pop
call
add
jg
scas
out
popf
add
and
mov
jp
push
loopne
or
arpl
sub
lret
cmp
push
ss
repz
cmpsl
jle
out
add
repz
fsubl
scas
call
or
mov
sbb
inc
jne
fldt
and
mov
fldenv
push
and
xor
pop
movsb
lea
nop
mov
gs
and
out
imull
arpl
mov
push
push
daa
mov
sbb
xorb
stos
leave
adc
pusha
rcrb
cmp
shll
mov
aaa
add
and
dec
xor
xchg
xchg
rorb
cld
bound
stc
scas
jne
movl
cmp
inc
lret
lods
mov
cmp
stc
pop
fsubl
mov
jg
or
mov
inc
imul
mov
or
mov
sbb
js
pop
pop
push
pusha
clc
pop
or
dec
pop
jge
loop
cltd
mov
push
out
shrl
cmpsb
jnp
sarl
mov
push
cmp
dec
inc
in
fsubl
xor
and
mov
pop
sub
rcrl
test
loopne
push
sub
jp
fmull
pop
push
cli
or
jmp
dec
lcall
jbe
movsb
outsb
cld
mov
xchg
xchg
ja
push
imul
mov
mov
inc
jno
dec
ljmp
addr16
push
xor
adc
dec
lret
and
in
addr16
test
out
mov
push
pop
shr
jb
push
xchg
inc
and
andb
out
fnstcw
pop
push
pop
and
cltd
lcall
iret
xlat
imul
data16
sbb
add
mov
and
int
xchg
popa
imul
inc
subb
cmpsl
daa
outsl
fistl
ret
adc
movsl
std
pop
xlat
inc
sti
insb
mov
adc
inc
pop
rcrb
leave
test
int3
ficoms
inc
jmp
inc
in
sbb
sub
and
fsubl
cmp
scas
int3
stc
mov
xchg
add
out
or
aaa
mov
scas
popa
rcrb
mov
pop
mov
es
add
shr
sbb
fists
cltd
pop
cmp
call
testl
pushf
jb
ror
push
or
xchg
dec
push
loopne
sbb
lods
jne
pusha
lret
adc
fs
cmp
mov
data16
and
repz
jle
js
mov
orb
stc
jae
cmc
call
dec
sub
pop
in
sub
dec
clc
and
fbstp
es
into
mov
or
dec
incb
sbb
push
inc
lret
rol
hlt
sub
dec
cltd
dec
push
inc
ficoml
pop
jmp
ds
icebp
popa
insb
cmpsl
pop
jnp
dec
loop
loopne
inc
negl
rcll
xchg
mov
jne
mov
mov
fdivrl
andl
out
rorb
pop
ret
out
bound
call
mov
fwait
cltd
outsb
test
push
aaa
sub
test
mull
pop
fcmovbe
mov
movsb
aad
push
rorl
or
jg
fs
sbb
xchg
push
fbstp
rcrl
adc
push
push
xchg
mov
aaa
and
scas
repz
inc
jl
add
xchg
fimuls
repnz
or
outsb
aam
jne
lods
lret
xor
mov
xchg
ljmp
cmp
cmpsl
xchg
bound
mov
popf
aad
or
jno
push
jno
jle
shlb
xor
pop
push
cmc
sahf
adc
fwait
add
jle
push
pusha
or
aam
test
mov
xor
pop
jge
mov
fstpt
push
stos
xchg
cmp
xlat
lds
scas
dec
cmp
cmpsl
rcrl
in
adc
sbb
sbb
js
rorl
das
test
pop
scas
jle
mull
scas
sbb
xchg
out
cmp
ljmp
ljmp
popl
mov
push
jbe
out
lahf
bnd
fcoml
jmp
mov
and
jecxz
inc
in
rorl
inc
outsl
lcall
ljmp
lahf
push
mov
cmp
shll
sbb
gs
jle
sbb
mov
insl
mov
sub
cwtl
dec
cmc
pop
pop
pushf
mov
sub
test
aad
fildl
mov
shll
cmp
icebp
aas
sbb
nop
insb
xchg
aas
ror
sar
jnp
lods
xor
jnp
add
or
xchg
xchg
xor
dec
loop
sbb
xchg
addr16
and
inc
pop
aaa
xlat
aam
adc
ljmp
push
jp
daa
or
aam
subl
pop
rcl
xlat
inc
cmp
xor
in
mov
dec
cld
jno
sub
jmp
and
mov
idiv
xor
js
push
xchg
enter
rol
addr16
int
cs
lcall
sbb
jle
js
adc
addl
scas
jb
lret
and
addr16
mov
insl
test
pop
outsb
dec
push
xchg
pop
aam
pop
popa
lahf
enter
cmp
pusha
movsl
movsl
cs
push
mov
mov
mov
sub
xor
pop
clc
xchg
sbb
shr
icebp
jbe
sbb
jae
jbe
mov
jmp
inc
adc
in
push
xor
dec
xor
and
test
cmp
lock
or
push
je
pop
xchg
mov
or
fldcw
dec
jno
fwait
addb
lcall
pop
andl
sub
test
push
int
xchg
mov
cmpsw
add
adc
jp
pop
xchg
push
icebp
mov
fs
xor
fisttpll
cmp
add
xor
loopne
in
mov
leave
pop
add
adc
inc
aaa
push
push
dec
mov
mov
pop
add
and
rcl
lret
les
int3
movsb
hlt
pop
jp
xor
adc
and
faddl
pminub
mov
lock
dec
xlat
les
rcrl
lcall
add
lcall
hlt
sbbl
and
push
sahf
add
xor
mov
inc
push
and
push
sti
push
sbb
ret
popaw
pop
push
sarb
dec
stos
js
or
or
mov
and
sbb
scas
inc
cmpsl
pop
imul
scas
pop
mov
mov
add
sbb
test
push
add
sbbb
mov
mov
jge
cmp
loopne
dec
pop
test
push
int3
inc
inc
dec
mov
pop
sbb
cmpsb
jmp
call
lds
sub
sti
cltd
imul
pusha
data16
pop
sbb
push
jo
addr16
xchg
daa
stos
fstl
divb
xor
mov
sarb
call
shll
xor
add
sub
mov
sahf
jo
mov
adc
and
insl
dec
scas
add
das
push
filds
repz
xchg
pop
jno
mov
jo
and
xchg
cmp
addl
bound
out
jbe
ljmp
sarb
test
idiv
xchg
sahf
shr
movsb
xor
jmp
jmp
push
add
lahf
pop
insl
or
push
mov
pop
leave
fcom
xchg
repz
mov
xchg
outsl
or
dec
je
in
sub
sub
in
aas
jae
xlat
xlat
pop
mov
inc
dec
adc
in
js
pop
popa
cmp
add
in
pop
or
and
out
lahf
fyl2xp1
pop
fsubr
push
ja
test
or
and
mov
aaa
sub
popf
cltd
outsl
mov
lahf
orb
sub
dec
outsb
mov
outsb
mov
mov
test
arpl
std
or
mov
movzwl
inc
rcl
pop
ja
dec
add
add
dec
in
adc
xor
or
add
dec
jmp
hlt
mov
fxch
call
adc
std
stos
fisubs
and
and
mov
or
out
pop
dec
sub
cmp
xor
fisubrs
sub
mov
ds
jne
shl
mov
pusha
lods
es
out
call
mov
sub
stos
repz
mov
jp
sub
jae
cmp
imul
or
mov
mov
pop
mov
inc
test
push
sbb
xchg
lds
aaa
xchg
int
pop
in
xchg
push
mov
insl
mov
scas
sub
and
pop
sbb
hlt
je
xor
pop
push
add
call
fprem
mov
pop
or
loop
xchg
mov
negl
js
and
imul
icebp
push
test
lret
mov
pushf
andl
sub
roll
rorb
xor
test
sbb
data16
shrb
scas
pusha
ds
ds
loopne
in
pop
and
cmc
enter
jmp
mov
push
icebp
cmc
dec
test
test
shl
mov
andb
mov
fsub
fisubrs
add
and
cmpsb
repnz
lods
inc
mov
test
mov
jnp
lds
in
cld
cmpsl
out
xor
xchg
es
pop
mov
fisubrl
cmpsl
rorl
or
or
mov
pop
pusha
jo
movsl
sub
fwait
push
mov
cmp
pop
pusha
in
mov
movsl
ss
cltd
adc
loopne
fcoms
pop
aaa
mov
jb
in
mov
push
mul
pop
push
insl
xor
push
arpl
insl
jmp
pop
insl
push
mov
ja
dec
xchg
xchg
rcll
rorb
push
jbe
jmp
repz
lods
mov
mov
dec
cwtl
andl
adc
xlat
or
or
aam
jb
aaa
aam
shll
loopne
jmp
out
mov
dec
mov
inc
sbb
movsl
push
xor
ljmp
shlb
add
test
enter
int
lcall
daa
mov
ja
in
dec
loope
fwait
xchg
sub
testl
jg
adc
jbe
popf
pop
dec
paddw
jp
jne
cmp
mov
mov
ja
xchg
pop
ss
jge
orl
fcomps
push
aaa
inc
dec
out
push
loope
jecxz
adc
sub
jg
imul
std
data16
push
mov
pop
aam
sti
ja
sub
push
mov
popf
ret
call
jge
and
test
jcxz
ja
sbb
popa
mov
or
add
aam
int3
inc
decb
xchg
loop
pusha
mov
idivb
int
ljmp
addr16
out
clc
xchg
icebp
into
sahf
lcall
data16
cmp
mov
push
pop
add
add
aam
test
and
mov
insb
xor
iret
dec
movsl
push
push
lods
dec
in
cmp
or
xchg
xchg
dec
and
ljmp
in
shrb
sti
mov
fnsave
bound
sub
inc
stc
and
int3
stc
shrb
or
cltd
cmp
in
clc
mov
pop
shlb
push
outsl
mov
icebp
jl
adc
lcall
icebp
int
xor
mov
push
sbb
das
test
frstor
out
inc
adc
pop
pushf
mov
stos
sbbb
test
ds
mov
leave
cmpsb
jno
jbe
ret
repnz
adc
dec
mov
divl
xor
xor
pop
fwait
sar
mov
inc
loop
out
cmp
push
loopne
fmuls
outsl
test
dec
mov
xchg
test
sbb
push
cmp
or
lret
mov
insl
or
test
and
stos
sub
fstpl
or
in
pandn
sub
xchg
sub
lret
mov
pusha
fsubr
sub
xchg
jae
xchg
xor
sub
dec
ja
nop
clc
aas
fidivs
xor
iret
fxam
ret
loop
inc
dec
pop
lods
fwait
xchg
data16
andb
scas
xchg
pop
addl
lds
les
push
inc
pusha
out
push
lock
mov
mov
or
mov
pop
decl
imul
cmp
sbb
or
mov
mov
or
pop
xor
dec
pop
push
mov
repnz
dec
enter
shrl
push
adc
fsubrs
test
add
cmp
mov
es
lods
cmp
add
jecxz
cmp
lcall
roll
push
pop
mov
mov
cmp
add
inc
outsl
pushf
out
inc
adc
push
pop
xor
gs
cltd
push
std
dec
hlt
pusha
or
faddl
movsb
push
mov
mov
sbbb
outsb
lds
or
or
aad
mov
shll
aaa
adcl
cmp
rorb
jmp
in
pushf
call
movsl
mov
mov
clc
sub
jae
test
in
dec
adc
pop
iret
xlat
mov
jmp
mov
in
lods
int
incb
mov
iret
mov
in
or
fmulp
dec
in
cmp
in
lahf
pusha
nop
clc
sub
and
cwtl
xchg
fnsave
lods
lret
or
push
les
inc
cmp
sub
sbb
jmp
xchg
out
testb
jno
shlb
into
jo
xlat
lock
jge
sbb
xchg
xor
pop
mov
jbe
into
jnp
ss
psubusw
pop
xor
mov
push
scas
insb
fldl
movsl
shll
fwait
test
stos
mov
mov
mov
cli
push
daa
jnp
or
fxam
xor
sarl
icebp
sub
jb
in
in
out
enter
es
arpl
out
test
mov
push
movsb
adc
xchg
aas
xchg
fsubrs
inc
cmp
sgdtl
jp
xchg
xchg
inc
stc
dec
sbb
out
push
enter
adcb
aas
pop
scas
dec
or
cmc
lea
add
cld
jmp
into
repz
stos
sub
enter
jns
mov
jge
int3
or
and
cmc
js
mov
cmp
mov
push
nop
mov
cmp
mov
decl
aam
and
push
call
xor
add
enter
lcall
fwait
sti
lds
adc
cmc
daa
mov
test
fcomp
adc
dec
pop
adc
and
ja
lds
or
inc
lret
sahf
fisttps
jae
dec
dec
lock
xchg
xchg
fidivs
out
mov
xchg
adc
dec
or
xor
cmc
cmp
add
or
push
mov
xor
xlat
iret
ret
jmp
ret
fadds
xchg
iret
jp
pop
sub
add
insb
aam
popa
inc
inc
jno
leave
adc
xchg
xchg
adc
sub
xchg
cmpsb
fwait
push
shlb
or
adc
xor
enter
aaa
shlb
mov
stc
addl
and
or
shr
testb
adc
ljmp
sbb
adc
lcall
dec
pusha
push
sarb
int3
xchg
dec
daa
jecxz
jecxz
cmp
cmc
mov
cmp
nop
jge
dec
es
movsl
mov
addr16
xchg
movsl
fimull
add
into
fildll
rorl
ds
jge
jo
push
jbe
xor
cmp
not
xor
cmpsl
or
popa
fiadds
popaw
cmpsl
lods
cmp
sbb
sti
sub
pop
push
push
xchg
shlb
lods
into
adc
push
add
push
adc
mul
and
js
imul
or
cmpsl
lods
xor
ljmp
jmp
movsl
lret
inc
out
xchg
test
mov
scas
mov
mov
aas
sub
and
test
inc
jl
fwait
cltd
mov
rcll
sbb
xor
das
insl
ds
imul
pop
mov
push
out
jb
xchg
mov
adc
arpl
pop
test
jg
xchg
int3
test
inc
jb
gs
out
nop
cmp
cli
clc
sti
xor
jbe
sti
or
xchg
fbstp
iret
fidivl
popf
xor
in
imul
cmc
insl
int
fcmovnu
jmp
jle
sub
jns
and
out
push
fiadds
xor
adcb
popf
in
gs
pop
inc
int3
mov
xor
or
call
in
js
das
outsw
inc
inc
mov
je
out
and
jmp
dec
lret
sub
int
cmp
mov
int
inc
fnclex
push
aam
fiadds
js
jns
xchg
lock
lret
inc
jg
lods
sub
loopne
xchg
sarl
into
nop
push
or
inc
lock
sbb
add
and
pop
mov
loopne
add
aad
filds
es
mov
pop
rcr
hlt
shlb
add
jnp
adc
xchg
xchg
mov
shrl
movsl
popa
into
mov
lock
and
test
add
ja
out
mov
and
in
imul
out
negb
adcb
mov
add
push
sbb
sbb
xor
jmp
jp
mov
aad
xchg
mov
scas
ret
fldcw
into
lcall
aam
dec
add
sbb
in
hlt
jmp
push
jg
imull
mov
dec
cmpsb
mov
test
add
nop
jl
lock
add
mov
negb
fildl
sti
cmp
addr16
mov
xchg
pop
out
mov
lret
jecxz
mov
lcallw
out
sbb
repnz
xor
jne
mov
adc
jmp
lds
popl
pop
mov
push
push
fwait
add
rcrl
mov
xor
dec
jnp
xchg
daa
jl
pusha
pop
pop
sub
pop
xlat
pop
test
pop
fcomp
rclb
inc
push
add
jb
in
dec
fdivrs
mov
cmpb
inc
outsb
lret
cmpl
lea
jmp
jle
mov
sub
sub
jg
out
pop
cld
outsb
lret
mov
push
dec
repz
jg
test
aaa
fsub
popl
out
mov
and
cli
mov
dec
outsb
das
jno
iret
outsl
insb
jle
xchg
out
rorb
aas
add
jo
cmp
ljmp
xchg
mov
mov
lea
xchg
fwait
mov
idivl
jnp
aam
xlat
dec
stc
lcall
mov
jne
mov
lea
dec
arpl
sub
mov
cli
shll
dec
lods
sarb
cmp
lret
insb
xchg
test
sub
subl
lcall
cwtl
in
xor
out
mov
pusha
xchg
lahf
mov
xchg
xchg
cld
add
insl
sti
mov
pushf
sarl
mov
xchg
xchg
sub
test
fldcw
call
sahf
mov
mov
xchg
popf
or
sub
xchg
adcl
pop
ja
adc
scas
ret
push
add
sub
xchg
sbb
aaa
push
xlat
jge
push
aas
jmp
push
test
outsl
cld
sbb
stc
scas
adc
test
out
fistpll
adc
xchg
out
jb
and
icebp
mov
ljmp
add
cwtl
roll
jg
sbb
out
leave
or
or
mov
cs
jnp
enter
scas
cli
fstl
and
loope
imul
pop
mov
jae
push
mov
cli
addr16
or
jns
push
movsb
jbe
xchg
mov
or
sbb
mov
cltd
sbb
pop
and
out
push
push
sub
pop
sub
sbb
sbb
in
pop
in
ret
lods
inc
stos
sub
movsb
addb
jb
nop
scas
xchg
push
cmp
arpl
cmc
out
adc
lea
or
pop
push
or
jg
mov
in
jne
fstpt
scas
movsl
pop
std
mov
jle
jge
sub
js
leave
mov
repnz
mov
nop
neg
jl
sub
ja
jbe
push
pop
nop
test
imull
adcb
fucomp
shrl
jmp
mov
or
scas
lds
ljmp
push
pushf
sub
addr16
cmp
jnp
push
fistps
push
push
pop
xor
or
mov
jle
jae
inc
xlat
or
orl
mov
sub
inc
cwtl
jp
cmp
mov
lods
stc
mov
cwtd
and
pop
inc
pop
scas
test
inc
xchg
jns
out
adc
and
call
jno
jne
aad
xchg
ja,pt
mov
mov
mov
test
aad
popa
out
nop
iret
lret
mov
mov
mov
outsl
mov
sar
pop
xchg
bound
sub
scas
pop
stos
incl
negl
mov
addl
loope
pusha
jp
or
push
mov
jmp
mov
aam
sbb
std
stos
add
xchg
pop
popa
pop
cmp
inc
pop
sub
dec
mov
mov
cmp
add
jb
jg
cli
xor
ret
push
pop
mov
and
daa
xor
lcall
mov
out
xchg
jns
cmp
test
movl
gs
loope
orl
or
push
cmp
push
cltd
cld
push
dec
add
jl
pop
or
xchg
adc
mov
addr16
in
dec
fwait
pushf
cmp
lock
je
movsl
in
or
xor
cmc
cmp
xchg
bnd
jns
jge
cmc
roll
push
ret
dec
push
mov
sarl
sub
outsl
dec
dec
lret
mov
jmp
gs
jae
lods
out
dec
stos
inc
mov
and
dec
popa
aad
adc
jg
xorl
enter
inc
hlt
push
push
jg
inc
mov
js
shl
sub
fsubrs
cld
shll
hlt
mov
out
mov
dec
scas
push
fs
inc
pop
inc
xchg
repnz
mov
xor
aaa
jae
cmc
fldenv
test
cltd
fcoml
sub
push
pop
data16
shll
or
outsb
in
ficompl
fwait
cmp
inc
cmpb
jmp
cmc
cmp
insb
lds
mov
push
push
enter
sbb
mov
jge
fisttpl
imul
shrb
divb
call
inc
scas
loopne
xchg
dec
je
push
pop
iret
ficoml
mov
jp
out
ret
mov
inc
mov
shlb
cmpsb
scas
or
add
inc
xchg
xchg
pop
xchg
dec
xchg
ljmp
jb
cmp
jecxz
lock
sti
out
sahf
jns
inc
daa
ffree
sbb
shll
mov
jns
es
mov
mov
popa
int
dec
adc
or
add
rol
mov
cltd
daa
scas
and
xchg
mov
mov
adc
cmp
push
sub
inc
mov
pop
sar
sarb
and
push
jbe
add
push
popf
icebp
cmp
jmp
sbb
cmp
jl
out
push
clc
decl
dec
out
nop
pop
imul
mov
pop
fildll
inc
fidivrl
inc
add
push
pop
std
pop
lcall
mov
sbb
or
adc
and
adc
in
test
stc
or
push
jg
lahf
testl
push
imull
mov
sbb
cmp
outsl
lock
fnsave
push
add
jle
mov
mov
je
xor
sbb
je
adc
out
add
xchg
dec
add
adc
and
ret
xchg
loope
inc
cmpsb
push
aad
inc
lret
mov
pop
sub
and
push
push
out
mov
popf
cmp
outsl
cmp
add
jae
ror
inc
in
sbb
and
xlat
fildl
sub
adc
jno
push
jge
cmc
icebp
dec
sbb
add
sub
nop
xchg
pushf
les
clc
jmp
decl
hlt
repz
lock
popa
cmpsb
es
fcompl
push
loop
sbbb
jle
es
cmpsl
inc
pop
sub
pop
rorb
fisubl
pop
std
fldcw
adc
negb
ds
loope
mov
push
sbb
fs
xor
adc
push
repnz
lcall
cmp
or
lods
push
adc
divb
and
mov
test
or
pop
in
and
std
test
push
xchg
pop
fucomip
push
adc
pop
xchg
sbbl
xorl
decl
mov
hlt
push
and
pop
stos
cmp
js
add
push
daa
push
movntq
fnstcw
adc
ja
jge
jmp
das
imul
outsl
xor
mov
rcr
test
sub
lods
dec
push
cmp
outsl
fistps
adc
mov
mov
fiadds
fisttpll
fmulp
loop
cli
nop
call
xchg
mov
dec
or
fnsave
in
aad
cwtl
cli
adc
xor
dec
nop
jp
cmpl
adc
mov
sbb
jmp
xchg
sarl
mov
jmp
test
or
mov
out
fs
jle
jnp
add
and
jne
out
inc
fldenv
mov
push
js
sbb
add
xchg
cmc
push
ret
jo
cmpsb
mov
leave
mov
mov
dec
out
shll
cmpsl
pop
stc
cmp
xor
insb
mov
cmpsb
loop
jbe
sbb
inc
adc
test
cmc
stc
mov
lods
into
xchg
cmp
add
mov
test
xor
sbb
mov
insl
mov
mov
sbb
or
jne
dec
lds
inc
mov
pop
lods
xchg
dec
lret
ja
cmp
mov
js
sub
fs
add
jae
in
jmp
addr16
pop
dec
dec
pop
sbb
std
mov
jge
push
lea
dec
or
fistps
sahf
push
sub
adc
or
es
jno
in
fnstcw
push
inc
jo
scas
aam
fistps
ret
out
rcrl
mov
inc
inc
mov
push
repnz
mov
in
mov
shl
pop
push
add
mov
adcl
mov
es
lock
std
std
adc
dec
mov
xchg
sub
pushf
stc
dec
pop
out
fdivl
int
xor
cmp
lahf
inc
cwtl
sub
inc
cltd
movsb
arpl
dec
jns
push
push
js
or
xchg
pop
jmp
js
or
insb
aad
cmp
push
frstor
mov
mov
test
jg
stc
adc
push
jmp
jge
mov
nop
es
push
rcrb
xor
push
push
in
aas
in
push
shlb
or
out
jl
dec
jmp
cmc
cmp
les
cltd
xor
in
aam
lahf
leave
cli
push
cmp
daa
jnp
sbbb
sar
in
push
mov
mov
dec
hlt
jge
mov
lahf
dec
dec
cmp
test
decb
xchg
dec
sub
adc
in
mov
cmpsl
pusha
mov
xchg
add
push
mov
mov
pop
xchg
repz
ljmp
call
pop
jmp
jle
fcom
adc
imul
daa
push
mov
inc
mov
loope
or
mov
repnz
sub
loope
fisubs
fdivrs
lea
movb
imul
sbb
jle
push
fsts
das
jns
pop
xchg
adc
outsb
add
hlt
push
cli
sbb
bound
ljmp
pop
push
jno
jnp
inc
push
mov
pavgb
int3
sub
inc
mov
mov
movsb
les
mov
enter
ret
mov
jnp
loop
jge
xchg
xor
lret
mov
sub
ja
ret
out
lock
xchg
sahf
fimuls
fisubl
cmp
mov
fmul
cmc
cmp
dec
shrl
cmp
xchg
stos
repnz
hlt
and
adc
cmp
fildll
sub
roll
pop
int3
or
mov
sub
mov
mov
rolb
js
movsb
adc
and
sti
and
xlat
sub
ss
stc
aas
mov
pusha
inc
cmpsl
in
rcrb
mov
in
cmc
rcll
sahf
mov
lret
inc
mov
and
insl
push
ljmp
subl
dec
cmc
test
fnstcw
add
xchg
test
popf
insb
std
fwait
jge
adc
lock
in
fisubs
add
inc
mov
movsb
pop
std
ja
jb
fs
mov
popa
sbb
addl
loopne
inc
pop
fistps
cwtl
stos
dec
inc
xor
test
test
and
in
mov
mov
fnstcw
push
mov
int3
cld
ret
lds
xchg
stos
cmpsb
scas
mov
rclb
bound
fnstcw
jl,pn
sahf
xchg
ds
pop
pop
leave
sub
sub
popa
mov
int3
push
and
fbstp
mov
int
mov
sub
pusha
mov
nop
mov
incb
mov
in
movsb
mov
pop
cli
mov
out
and
shl
mov
into
sbb
pop
movsb
inc
add
cli
mov
out
or
lcall
lods
mov
shlb
push
sti
push
jb
mov
push
inc
daa
pop
in
into
mov
movsl
adc
lds
ss
dec
mov
mov
mov
cld
cmp
in
int
jg
fsubr
jae
push
push
mov
jl
test
popa
push
leave
jecxz
insb
mov
cmp
fnstcw
arpl
or
dec
insl
pop
call
cmp
xor
dec
mov
or
jecxz
scas
mov
popf
lret
out
mov
int3
cli
xrelease
jge
xor
scas
adc
pop
js
stos
jns
and
mov
out
add
stc
fisubl
xchg
pop
scas
lock
mov
idiv
mov
jae
leave
push
test
test
push
mov
mov
push
cmp
mov
mov
es
cltd
xor
cmp
or
cmpl
pop
xchg
leave
ja
call
fucomip
cs
push
adc
mov
fldcw
xor
arpl
and
jg
filds
in
stc
adc
stc
mov
jbe
repz
push
pop
fcomps
frstor
imul
test
loopne
sbb
test
subb
es
adc
fsubrl
hlt
cbtw
rcr
in
cmp
cli
mov
adc
push
sub
pusha
ljmp
mov
popf
in
pop
xchg
stos
into
hlt
xchg
rcrl
mov
leave
lods
dec
popa
or
mov
mov
adc
stos
int
popf
ficomps
mov
bswap
pop
jbe
pushf
pusha
add
xlat
lahf
add
jg
push
mov
cld
mov
vpavgw
xor
insb
test
insb
xor
mov
push
jmp
fwait
dec
stc
cmc
pop
rcrb
xor
mov
or
js
jne
dec
mov
addr16
call
and
hlt
test
push
mov
push
inc
out
or
push
adc
push
mov
cs
fidivl
or
leave
out
xchg
adc
mov
sbb
or
sbb
inc
fildll
ficoml
mov
mov
cmpsb
pop
call
int3
xor
mov
lods
inc
stos
sti
lret
xchg
cmp
jecxz
mov
jle
ss
xor
es
xor
jle
sub
ss
movsl
fs
inc
xchg
sbb
jge
lcall
sahf
cltd
sahf
pushfw
les
pop
push
push
xchg
mov
cmpsb
pop
loope
arpl
jae
mov
add
fmull
push
jno
lods
fmull
loopne
push
and
cmc
push
sub
push
roll
sub
sar
icebp
mov
mov
enter
data16
ja
loope
mov
aam
sbbl
jno
cmp
or
mov
jmp
hlt
pop
leave
mov
pop
orb
addr16
jp
arpl
hlt
mov
decb
pop
dec
push
sbbb
nop
cs
mov
xor
scas
cwtl
mov
sbb
divb
sbb
daa
stc
xchg
cwtl
hlt
orl
cmp
xor
ret
lea
sub
sub
push
js
lea
sub
cli
xchg
and
mov
push
and
rcl
mov
mov
movsb
or
aam
aaa
jg
adc
cmc
xchg
mov
cmpsb
paddq
out
nop
insb
mov
fwait
sub
mov
xlat
inc
jbe
leave
xchg
hlt
push
xor
inc
xchg
push
dec
lcall
xor
rcr
lds
mov
test
test
iret
xchg
test
mov
stos
adc
lcall
mov
gs
sbb
stos
mov
inc
pop
push
aas
fildl
push
lea
lds
enter
scas
mov
lahf
loope
push
mov
xchg
dec
test
mov
cmp
inc
pusha
lods
shrb
xor
push
mov
lods
std
sbb
sahf
loope
sti
cmp
xlat
mov
mov
jnp
cmp
sti
push
sahf
cmp
push
cmpb
lock
movl
add
sbb
xchg
xchg
push
stos
inc
sbb
jle
adc
fildl
cmpsb
in
add
iret
dec
mov
popa
cltd
inc
stos
xor
jg
jo
insl
sub
daa
in
mov
gs
ljmp
cmp
sub
push
inc
inc
mov
cli
in
xchg
movsb
rcr
or
andl
inc
push
test
repz
es
in
adc
les
lock
dec
cmp
xor
xchg
test
cli
std
int
pusha
mov
push
pop
push
push
sub
cs
cwtl
repnz
ret
imul
add
scas
jge
push
insb
and
jp
jecxz
sahf
and
std
daa
stc
rcr
fbstp
and
adc
mov
push
dec
sbb
add
jo
dec
mov
push
xor
mov
test
cwtl
int3
push
pop
push
js
loope
loopne
xchg
adc
adcl
push
jg
mov
pop
cltd
push
xchg
mov
int
jmp
mov
sbb
std
test
cmp
jle
fsubp
mov
adc
cwtl
or
aaa
dec
or
sti
push
xchg
scas
cmp
out
fwait
xchg
imul
ficompl
loop
in
fs
sub
ret
daa
call
aam
ret
cmpb
lods
and
addr16
jge
mov
test
outsb
cwtl
jno
jno
lock
mov
addr16
mov
fmull
aam
inc
sahf
insl
adc
js
jmp
outsb
test
xor
or
in
test
dec
nop
cwtl
loopne
pop
cmp
xchg
mov
mov
loope
and
sbb
mov
int3
add
pop
fiadds
xlat
jp
sbb
fs
adc
arpl
jne
enter
push
inc
jecxz
fidivs
in
cli
ljmp
mov
ss
push
leave
push
shrb
mov
pop
aaa
add
push
pop
cmp
stc
fldcw
mov
cld
add
cmp
adc
mov
pop
mov
mov
adc
into
pusha
mov
sbb
andb
mov
pushf
jg
mov
jmp
faddl
mulb
dec
push
in
imul
jno
nop
adc
stos
ja
ret
shr
mov
shl
dec
push
pop
cli
lock
in
cli
jp
and
jmp
xor
rorb
mov
mov
outsb
and
test
mov
and
or
lods
mov
xchg
dec
test
pusha
mov
pop
fists
xchg
imul
std
test
jns
insl
popa
sti
cmp
jae
fwait
sbb
dec
adc
mov
ret
jl
cwtl
push
jge
xchg
sub
inc
mov
lods
sbbl
sub
outsb
lods
insb
push
test
mov
inc
hlt
pop
jns
dec
mov
aas
mov
jp,pn
out
push
pop
mov
mov
push
lea
lret
jae
add
cs
lds
aaa
ljmp
jbe
pop
and
sbb
das
lock
rolb
loopne
lret
std
je
or
pop
and
lret
add
pop
dec
xor
xor
jae
mov
mov
and
std
push
xchg
jb
sub
cmp
xorl
ds
pop
in
orl
inc
mov
xchg
ljmp
notb
xor
mov
mov
fidivrl
mov
jnp
push
push
add
mov
inc
loop
fwait
cmpsb
add
cmp
mov
jl
js
into
aaa
fcomi
and
jb
push
aam
std
ss
push
xchg
outsb
popf
sbb
pop
stc
lods
in
xchg
ja
mov
adc
mov
pop
dec
sbb
lahf
mov
and
dec
mov
jg
rcrl
aas
push
sti
sbb
inc
mov
rcrl
icebp
cmp
cmp
dec
jge
mov
cmp
pusha
mov
adc
je
mov
jb
nop
xchg
mov
movsl
and
jns
cmc
mov
sti
jle
inc
sbb
cmp
imul
push
push
test
insl
pusha
int
fisubs
adc
mov
adc
test
icebp
fdivs
fisubl
and
clc
dec
jnp
iret
int
popf
sub
test
dec
jg
jb
xchg
jle
mov
adc
mov
scas
out
lods
pop
cmpsl
cmp
lret
adc
cmp
xorb
inc
shl
js
add
cmp
lock
cmpsl
movsl
bound
ss
push
stos
movsb
cli
hlt
mov
mov
fcompl
xchg
push
ret
mov
mov
jle
inc
adc
in
lahf
inc
into
subb
out
pushf
imul
in
fs
outsl
jmp
mov
mov
movsl
pop
incl
jbe
lods
dec
cmp
leave
aaa
adc
sub
loopne
addb
cmp
in
push
mov
js
push
mov
push
adc
add
or
pop
dec
fidivl
in
stc
xlat
and
stc
gs
ret
xlat
and
insb
test
pop
enter
inc
or
dec
aas
in
clc
xor
mov
push
fistpl
repnz
lock
jecxz
lds
push
fidivl
iret
das
mov
repnz
orb
das
pop
repnz
leave
mov
pop
in
mov
inc
daa
mov
or
add
popa
loop
adc
sub
ror
xlat
sysret
pop
lea
mov
subb
sub
imul
mov
pop
xor
fwait
enter
push
pop
leave
fdivrs
xchg
inc
sahf
les
rorb
std
gs
xor
scas
xlat
scas
mov
call
gs
mov
jp
xlat
aam
pop
std
imul
iret
push
stc
les
push
jl
jle
jo
enter
mov
insb
pop
xchg
movsb
jb
cmc
and
movsb
jge
outsb
mov
push
movsl
sbb
fdivs
push
call
icebp
pop
mov
rcr
mov
add
xchg
jns
pop
mov
jo
bound
repz
bound
pushf
addr16
ss
mov
sbb
ja
mov
ja
push
aad
pop
jmp
inc
test
movsb
inc
xchg
test
pop
call
ret
sahf
and
rorb
stc
int3
loopne
push
clc
push
push
pop
test
jge
mov
int3
popf
enter
enter
or
repnz
and
fwait
inc
lret
jb
in
pushf
cmp
addr16
rorb
cltd
sbb
insl
pushf
xchg
pushf
mov
push
xchg
push
xchg
mov
mov
and
imul
insl
and
sbb
push
cmp
fstps
popf
je
test
ds
add
mov
fdivp
in
loopne
mov
lds
cli
cs
jl
cs
xlat
loop
fildll
lods
and
xchg
push
push
pop
jmp
and
add
rol
adc
les
jb
push
lds
sub
push
pop
push
sbb
xor
out
mov
jmp
xchg
cmp
xorl
and
mov
sub
xlat
xchg
outsl
inc
cmp
mov
fcoml
insl
shll
xchg
xchg
lock
cmc
stos
dec
xchg
inc
jae
ret
dec
jnp
lods
xchg
scas
cmp
fcmovb
fsubl
mov
push
rclb
cmp
mov
ds
add
jge
mov
aaa
pop
cmp
test
pop
scas
jnp
sbb
sahf
fstpl
test
jne
es
mov
mov
cld
mov
sbb
ds
sub
arpl
out
jbe
in
xor
sub
addb
adc
mov
jns
lcall
int
xchg
addr16
adc
adc
std
mov
inc
out
dec
pop
cmpsl
into
jl
data16
int3
fsub
xor
and
mov
add
inc
sbb
cmpsl
jne
es
add
jle
aad
fistps
movsl
lretw
in
cwtl
jge
mov
push
aas
pop
adc
lds
shll
push
mov
inc
and
cmpsl
movb
das
mov
push
icebp
push
mov
xchg
inc
rcl
mov
lahf
rcr
arpl
xlat
and
fiaddl
insb
mov
mov
xchg
sbb
orb
out
mov
in
add
mov
sbb
dec
loop
pop
sbb
insl
fcoml
inc
adc
cmp
adc
cmp
out
int3
ret
aam
and
push
arpl
aad
test
es
xchg
fdiv
xchg
push
mov
pop
xor
aaa
arpl
sbb
fisubs
movsl
cmp
fistl
mov
mulb
les
push
jmp
xor
and
push
pop
daa
fwait
push
xchg
adc
mov
xor
jno
sti
popf
ret
xor
jnp
push
stos
and
sbb
filds
cltd
or
jmp
nop
test
es
jmp
stos
pop
pusha
mov
lret
xchg
or
mov
imul
and
jbe
syscall
xchg
adc
add
nop
into
xchg
dec
push
xor
push
out
mov
push
lret
test
dec
xor
xchg
jge
loop
cmp
mov
jecxz
lods
pop
test
sahf
aad
mov
pop
imul
in
test
lcall
lock
das
inc
cld
sbb
call
sti
lock
fadd
pop
daa
call
ret
fwait
mov
les
std
mov
test
in
dec
xor
xchg
lahf
pop
fcmovnbe
adc
jg
adc
adc
xorb
push
push
jae
fldl
mov
popl
fdivr
mov
dec
rcr
cmpl
mov
cld
pop
mov
ds
jbe
out
outsb
in
xchg
jg
sub
or
add
mov
xchg
mov
shlb
adcb
aad
sahf
xchg
cmpl
fwait
leave
mov
pop
incl
push
mov
or
or
lahf
push
sub
mov
call
cmp
xor
test
iret
repz
inc
imul
mov
sub
xor
push
test
push
inc
je
fsts
cmp
jns
out
cmp
push
mov
fldl
jo
lock
jl
mov
movsb
sti
pop
adc
pop
mov
xchg
sbb
pop
sbb
popa
xor
cltd
mov
jmp
popf
ds
int3
ja
mov
out
xchg
inc
movsl
ja
push
lods
idiv
rorl
adc
test
insb
xor
jle
daa
dec
jge
dec
pushf
and
sbb
out
jne
test
sahf
fstl
and
js
cmp
add
stos
scas
xchg
push
push
pop
inc
or
jne
jl
popf
xchg
push
aaa
sub
jge
sbb
insb
bound
out
into
cmpsl
and
addr16
sbb
pop
addr16
push
stos
xchg
arpl
subb
es
mov
aad
cld
out
push
jecxz
ret
mov
cmp
add
jb
sub
inc
cmp
push
aas
lret
sbb
xchg
push
ljmp
add
or
add
sub
sbb
stos
pop
jge
jp
mov
aam
pop
mov
leave
or
pushf
pop
roll
int3
daa
leave
sbb
outsl
sub
xchg
insl
xchg
mov
sbb
xchg
or
adc
cmpsb
xor
pop
lods
dec
jge
add
push
dec
mov
cmp
jb
arpl
scas
stos
cmp
adc
jae
mov
xlat
js
into
jo
mov
pop
xorb
jle
jnp
jnp
loop
loop
add
jl
add
sahf
cltd
jo
in
movsb
loop
pop
js
nop
in
out
add
jmp
add
adc
daa
insb
inc
cmpsb
loopne
icebp
hlt
mov
fwait
test
inc
pushf
imul
push
movsl
fwait
insl
popa
into
sti
jnp
cwtl
fcomip
inc
je
sbb
sbb
pop
xchg
in
les
shlb
adc
int
in
mov
subb
les
bound
add
ja
xor
stos
movb
mov
loopne
mov
dec
or
pusha
mov
testb
mov
sub
xchg
in
pop
out
enter
shll
pop
sub
sub
pop
mov
sbb
ja
or
aaa
lds
push
adc
testl
pop
subl
pop
js
outsl
and
shlb
lods
sbb
lea
inc
jb
mov
loopne
add
fstpt
xchg
jecxz
mov
mov
xchg
fs
sub
dec
mov
mov
mov
cld
push
or
rcrl
gs
into
outsl
mov
or
rolb
mov
dec
and
adc
es
push
push
pop
jg
mov
pop
fs
mov
xor
push
pop
and
mov
test
in
cmp
ror
gs
sbb
adc
dec
cmp
scas
dec
lods
mov
push
sub
fidivs
test
add
inc
mov
push
push
pop
adc
add
fnstsw
mov
das
mov
insl
lock
ficomps
dec
xlat
int3
repnz
test
add
dec
lds
rdpmc
imul
ljmp
notb
es
adc
push
push
cli
or
aaa
push
jno
das
aaa
dec
or
cmp
stos
sub
enter
cmp
xchg
xor
pop
push
cmc
cmp
add
std
xor
jg
xor
push
add
lods
xchg
pusha
cmpsb
adc
stos
or
or
push
scas
decb
push
sbb
xchg
pop
add
or
jmp
mov
outsl
adc
loope
in
jnp
sub
in
jg
scas
push
ljmp
jo
fidivs
mov
iret
mov
test
pop
dec
push
fsubl
add
mov
outsl
pop
and
cltd
push
es
xor
push
sub
jge
push
sub
leave
sbbl
cmp
dec
push
movsb
testb
jp
std
mov
sbb
jp
in
add
outsb
mov
mov
out
inc
cwtl
into
xorl
xor
iret
xor
sbbb
mov
sub
movsb
jecxz
ds
xchg
inc
cmp
lahf
icebp
jb
ds
fstpt
enter
mov
popa
hlt
fildl
fildll
fs
sub
out
sub
mov
cmp
repz
leave
fsts
enter
inc
pop
xor
fimuls
lret
adc
pop
sbb
sbb
mov
mov
push
mov
notl
mov
mov
ret
clc
mov
into
jne
pop
popa
or
add
in
or
ret
pop
mov
fcomi
cs
push
push
xchg
cmp
inc
pop
jo
adc
and
mov
incb
jne
mov
xchg
aas
add
pop
scas
xchg
dec
pop
cmc
outsb
mov
insb
test
push
popa
lds
fisubs
mov
loope
dec
hlt
xor
inc
xchg
add
pop
nop
and
andb
loope
adc
cmp
lret
cmc
sbb
into
xor
pop
mov
outsb
mov
and
dec
pop
shrl
fwait
ret
push
xor
popa
outsl
push
and
xchg
xchg
pop
mov
push
jp
arpl
mov
cmpsb
mov
pop
push
test
int
mov
rcll
pop
jmp
and
test
mov
out
jns
push
sbb
pop
cwtl
push
test
in
dec
and
sub
mov
jbe
pop
mov
js
std
les
add
nop
int3
push
je
shl
loopne
and
inc
sbb
stc
ud2
movsl
dec
mov
mov
movsb
xchg
mov
jmp
jae
push
std
mov
mov
mull
shrb
pop
mov
out
jl
dec
fldl
addr16
xchg
mov
lods
jbe
or
fnstsw
jmp
and
push
add
adcb
xor
mov
repnz
adc
jne
sub
inc
ret
pushf
or
pop
icebp
in
js
ss
jae
pusha
adc
xor
sub
int
sbb
cmp
cmpsb
cmc
jnp
pop
jg
pop
jle
cmpsb
rcll
jns
mov
call
jge
test
add
sbb
frstor
jb
mov
and
cmp
insb
notl
in
loop
xchg
mov
cmp
cmp
push
mov
mov
cmpl
rorb
mov
xor
cmpb
test
movsb
test
or
mov
or
xchg
lods
lret
mul
pop
mov
js
test
out
xor
jge
bound
inc
mov
outsl
xor
ficomps
mov
aas
xchg
jle
push
xchg
mov
mov
fbstp
lods
dec
loope
jo
inc
mov
fwait
dec
inc
mov
aas
sbb
push
mov
mov
movsb
sbb
mov
fwait
ret
leave
push
or
mov
push
sbb
imul
mov
cmp
int
push
and
imul
pop
dec
cltd
mov
jge
sub
iret
clc
xor
test
mov
std
cmp
out
outsl
subb
in
sbb
jp
aam
and
outsb
xchg
scas
bnd
std
lret
aam
insb
or
jno
mov
stos
mov
jecxz
lock
pop
mov
ret
mov
out
fs
push
in
sahf
xchg
lahf
les
adc
xchg
test
ja
add
es
push
xchg
xor
mov
je
fidivrl
aas
test
mov
insb
add
mov
lcall
jmp
and
cld
hlt
sbb
movsb
frstor
push
in
scas
sbb
sarb
ja
and
shl
paddd
aas
xchg
nop
pop
jno
lea
jno
inc
push
mov
sbb
dec
out
gs
scas
dec
add
xchg
movsb
lock
lods
jnp
push
jmp
mov
gs
inc
faddl
cmpsl
emms
mov
xorl
push
sub
add
xor
cmp
lret
fldl
dec
stos
cmpl
test
mov
mov
nop
stc
mov
notl
push
and
sub
xor
xor
or
test
inc
adc
inc
mov
sbb
out
fsts
addr16
test
in
mov
dec
sub
xchg
cld
or
xor
mov
pushf
in
xchg
mov
fdivrl
shll
out
out
jmp
insb
mov
aaa
mov
mov
mov
and
xchg
jns
lahf
dec
dec
roll
sbb
or
fsubl
pop
shrl
sti
fdivp
xor
mov
jg
lods
mov
pop
iret
ret
lods
jge
and
xor
rclb
movl
pop
cwtl
mov
ret
insb
lods
sbb
int
fisubrl
xchg
pushf
aas
into
insb
inc
dec
jno
xchg
cltd
add
sbb
xchg
outsl
xchg
fwait
addr16
mov
call
push
decb
mov
cltd
ret
addr16
mov
rcll
or
nop
add
call
iret
pop
jg
push
push
gs
jne
cmc
out
ljmp
imul
or
jge
insl
pop
dec
imul
push
rclb
add
jmp
sbb
incl
sub
bound
js
lods
jo
daa
fcoml
ror
loop
in
pop
aas
stos
inc
test
leave
dec
push
jg
push
adc
lods
cmp
leave
mov
sub
inc
pusha
and
push
loop
imul
pop
je
ret
dec
stos
mov
sbb
flds
adcb
notl
jb
inc
mov
xor
stc
test
addr16
or
cmpb
push
test
inc
cwtl
iret
sbb
jo
mov
adc
mov
mov
out
cltd
stc
mov
aas
ss
pop
sbb
dec
and
lret
rcrb
mov
aad
add
in
aad
shlb
sbb
mov
insb
sbb
hlt
xor
and
inc
jo
adc
arpl
adc
dec
add
lods
pop
fsub
test
mov
xor
iret
xlat
aaa
shl
mov
mov
cmp
sub
lret
mov
repnz
lcall
ftst
fidivs
xchg
out
and
mov
xchg
daa
stc
inc
jmp
loop
sbb
into
push
sbb
xorl
push
pop
rol
stos
je
les
adc
or
jo
xor
jbe
mov
dec
add
cmpsb
negl
add
and
loopne
lds
test
jo
nop
xchg
adcb
je
jae
aas
fwait
clc
in
sub
jecxz
test
mov
mov
xchg
sbb
and
push
adc
into
sub
rclb
push
mov
aad
out
icebp
cbtw
inc
lahf
orb
mov
pop
fs
push
xor
es
cmp
and
sub
hlt
cs
leave
fsubrs
adc
mov
xchg
dec
out
mov
loop
add
mov
ret
mov
mov
lcall
dec
jle
gs
dec
xchg
jnp
jp
mov
sahf
dec
fistpll
push
out
xchg
cli
cwtl
inc
pop
inc
or
jo
out
fsts
daa
popf
aas
xor
sbb
cmpxchg
and
call
sahf
mov
jnp
xchg
aam
mov
lcall
pop
out
pop
pop
pop
xor
mov
pop
out
jno
jge
cli
inc
sub
add
push
call
push
repnz
and
adc
and
scas
pop
xlat
dec
arpl
fisttpll
in
sti
xor
dec
out
xor
stos
mov
rcrb
inc
aad
push
popa
cltd
lahf
int
call
push
and
xchg
sub
addr16
mov
mov
mov
test
out
xor
pushf
xchg
sub
xor
push
add
movsb
push
nop
sbb
pop
fnstenv
push
subb
pop
lods
inc
push
enter
addr16
pop
into
xchg
dec
imul
push
idivl
inc
sub
cmp
je
add
xor
insb
sub
loop
add
cmp
push
or
cmp
inc
xor
int3
clc
into
pop
test
pushf
mov
ror
ja
imul
stc
pop
stc
jns
pop
pop
pop
sub
ficoml
xor
jno
mov
inc
dec
out
dec
sbb
loopne
cwtl
sub
insb
xor
or
push
xor
and
movsb
dec
cs
push
int
xchg
idiv
lock
fdivrp
push
xor
inc
fwait
das
js
sbb
mov
xor
push
xchg
aam
fisubrs
test
test
push
pop
lret
xor
mov
call
add
mov
jbe
jns
into
not
cmp
jle
in
push
xchg
ss
std
push
add
fwait
or
sbb
or
sub
outsl
outsb
lea
mov
sti
popa
popa
repz
push
jne
repz
pop
test
mov
or
lea
aam
in
jmp
or
cmp
roll
enter
hlt
adc
insl
cld
push
push
cmpsb
push
jb
inc
dec
insl
es
lea
repnz
iret
sarl
lods
pop
add
push
out
lods
repz
mov
pop
inc
mov
xchg
push
shrb
shll
popf
jo
xchg
inc
jecxz
pop
ljmp
push
push
xchg
jp
stc
and
clc
sub
pop
mov
scas
lcall
mov
imul
test
ret
adc
xchg
mov
xchg
sbb
dec
sbb
or
xchg
push
clc
cmpsl
fcmovu
rcr
push
inc
dec
sbb
in
mov
jg
repnz
test
aad
sar
xchg
ror
lods
mov
mov
lds
pop
dec
push
cltd
mov
push
jge
scas
je
addl
sub
lret
shrb
dec
pushf
mov
push
mov
imul
inc
xorb
je
sbb
sub
test
sbbb
sbb
lcall
or
stc
ret
jne
int
dec
stos
jbe
lret
aam
aam
jl
pusha
adc
and
push
repz
mov
lret
mov
rclb
sbb
jge
mov
mov
xor
iret
call
ljmp
inc
sar
mov
xchg
mov
mov
mov
int3
dec
jl
sti
jbe
cltd
aas
scas
mov
jnp
aad
mov
sbb
lock
int3
mov
sahf
outsb
cli
mov
test
pusha
outsb
cmpsb
rorb
push
loope
mov
cltd
adc
inc
faddl
mov
jg
inc
out
push
jl
test
dec
sub
sbb
add
pop
int
mov
test
push
xlat
sbb
call
inc
daa
insl
clc
sbb
adc
arpl
sti
test
mov
sarb
arpl
xor
sub
cli
adc
adc
movsb
or
std
cmc
or
into
mov
push
imul
and
mov
out
cs
pop
movsb
aad
fwait
xchg
xor
negb
or
inc
or
pop
pop
xchg
int3
add
sti
inc
test
lods
ja
add
push
dec
gs
push
push
repz
andl
add
pop
sbbl
push
mov
lcall
fdiv
xchg
jge
cmp
push
nop
xchg
test
xor
or
lret
sbb
fcoml
pop
xchg
adc
sbb
xchg
int3
push
out
xchg
or
out
jne
cmp
cltd
faddl
dec
mov
sbbb
hlt
in
and
stos
test
jne
mov
stos
ds
push
push
leave
sarb
push
lods
dec
sbb
mov
js
jl
pop
dec
push
insb
and
ret
ljmp
insl
push
out
out
inc
sub
ds
jne
push
jecxz
jmp
dec
leave
std
and
pop
mov
inc
lahf
pop
je
add
insl
aas
or
push
push
movsb
jecxz
and
adc
ss
out
dec
in
test
mov
xor
lcall
in
dec
push
jae
or
shl
and
jb
sub
pop
aad
sarb
xchg
mov
out
ror
ljmp
xor
idivl
shld
mov
rolb
dec
sbb
lods
mov
shrb
inc
inc
test
dec
cltd
test
fcoml
xchg
test
lcall
mov
js
shr
jg
mov
std
fwait
xchg
std
add
hlt
aad
cmpsl
ja
mov
test
mov
jp
or
and
pop
sub
scas
inc
iret
pop
scas
mov
or
ficomps
enter
das
pusha
and
sbb
mov
imul
int3
jno
ljmp
mov
xor
mov
fsubs
enter
xor
test
jg
push
push
xchg
fadds
test
lods
xor
nop
push
int3
adc
mov
inc
nop
lea
fnsetpm(287
in
fsubrs
jo
pop
jle
jmp
ret
and
mov
mov
mov
fabs
lret
push
scas
mov
lock
cmp
gs
das
or
or
or
sub
leave
insb
jp
sbb
call
cmpsl
sub
cwtl
mov
imul
or
inc
mov
popl
mov
daa
insl
sub
sti
mov
cmpsl
inc
mov
and
lock
fwait
cli
add
lret
es
mov
out
popf
adc
pop
out
test
lods
mov
pop
cltd
push
sub
into
insb
js
cld
adc
fcoml
xor
sti
mov
popf
push
push
xor
xor
cmc
dec
xor
push
adc
lahf
outsl
mov
out
inc
jge
sub
scas
pop
cmp
sub
and
shr
mov
fisttpll
in
fdiv
fwait
or
pop
leave
mov
adc
movsl
jl
jmp
push
pushf
jl
mov
pop
loope
pop
mov
les
or
adc
xor
imul
cmp
out
xor
mov
pop
and
jb
or
adc
sbb
pop
data16
fmuls
add
mov
mov
ljmp
lods
sbb
mov
adc
lahf
xor
mov
and
cmp
std
faddl
dec
shlb
stos
inc
push
pop
mov
lock
inc
xor
jne
inc
cli
pop
outsb
jnp
lods
stos
bound
cmc
hlt
sub
adc
jge
push
cld
jnp
dec
loop
gs
mov
in
cmc
aam
mov
rep
outsb
add
out
cmc
js
int
cltd
xchg
add
loopne
jg
jnp
xor
sub
imul
aas
push
dec
in
std
adc
movsb
out
push
stc
sahf
lret
mov
out
sub
jmp
fldenv
jnp
int
jecxz
mov
rclb
mov
stc
out
xor
jb
pushf
mov
xchg
xor
daa
icebp
and
popl
xchg
out
inc
into
cmpsb
and
enter
dec
ds
xchg
push
dec
popl
arpl
cmp
sbb
xor
push
sub
inc
outsb
lret
leave
push
shr
outsb
cmp
push
and
mov
into
dec
adc
gs
cltd
jmp
cmp
mov
sub
jnp
dec
outsl
mov
xor
hlt
lahf
bound
into
pop
pop
xchg
sub
js
scas
dec
lahf
ljmp
fcomp
cmp
adcl
push
and
cmc
add
sbb
mov
pop
fidivrs
popf
jl
add
add
test
lahf
xor
inc
andl
inc
xchg
cmp
lock
data16
push
pop
xchg
mov
mov
out
sub
hlt
jb
jns
sbb
stc
int
dec
xchg
or
mov
addl
xchg
inc
clc
add
inc
andb
sub
and
out
push
and
inc
inc
cwtl
adcl
pop
ljmp
pop
inc
stos
sti
jb
std
push
adc
hlt
dec
in
and
mov
sub
push
imul
fs
pop
cmp
cmpsl
repnz
xchg
jns
xor
mov
add
mov
inc
in
mov
sahf
push
xchg
lea
cmpsl
aam
add
push
jns
push
push
xchg
xor
stc
or
lds
es
jle
jge
cmpsb
pop
movsb
ljmp
add
inc
fildll
jns
xchg
jecxz
sub
adc
push
mov
nop
lcall
dec
mov
mov
nop
outsb
loop
nop
jbe
arpl
push
jo
test
or
and
add
and
inc
inc
or
push
adc
mov
adc
out
mov
rorb
dec
xchg
shll
and
lds
cltd
dec
leave
ljmp
mov
mov
and
xor
icebp
dec
xor
or
dec
sub
jb
loopne
loop
dec
pop
test
add
cmc
popf
add
mov
int
mov
hlt
mov
fsubrl
fs
ror
in
jg
push
imul
lea
repnz
sub
cltd
outsb
push
jae
push
jp
pop
leave
inc
mov
shl
aam
xchg
mov
ret
stos
call
inc
mov
mov
ja
inc
aas
in
test
mov
shlb
sub
xor
xchg
cmp
ss
fidivrs
xlat
jo
sbb
jmp
js
out
scas
xor
loopne
sub
cltd
adc
inc
aaa
jmp
outsl
jo
int3
xchg
mov
in
gs
std
enter
cmpsb
xlat
xlat
mov
out
push
mov
xchg
cmp
int
outsl
or
cld
imul
lret
movsb
sbb
sbb
xchg
pop
and
pop
in
cmp
aam
xchg
es
dec
push
fstps
sub
and
stos
add
call
jp
fisttps
fnsave
stos
in
xchg
mov
fcmovne
in
pusha
xchg
push
fisubrs
loope
mov
mov
xor
jns
jo
cltd
push
aam
inc
xchg
mov
push
mov
arpl
jno
enter
cmp
das
mov
sub
cwtl
and
mull
pop
mov
iret
fadds
push
cmp
ljmp
call
pop
dec
jg
fwait
fwait
inc
addl
add
dec
jle
test
pop
or
fadds
xchg
pop
pop
aam
or
fs
mov
inc
dec
xchg
push
lahf
jge
or
pop
and
sbb
or
icebp
subb
inc
add
mov
repnz
push
cmp
out
shl
sbbl
test
cmpsb
dec
dec
jp
out
add
das
cltd
int
adc
mov
adcl
jp
ret
dec
out
fidivl
and
push
aam
cmp
lods
loope
data16
mull
clc
dec
sbb
inc
inc
movsl
mov
shr
sub
add
or
scas
pop
aaa
push
push
or
inc
cs
imul
pusha
imul
divb
xchg
repz
cmp
fisttps
xorl
push
xor
pop
mov
sbb
inc
inc
xor
insb
sub
rorb
push
dec
jns
add
mov
sub
mov
sahf
xchg
pop
inc
xor
mov
test
and
xor
jbe
inc
ja
bound
jge
xor
loop
or
lret
out
andb
xchg
jecxz
or
push
fstpl
out
mov
xchg
adc
jae
mov
jo,pn
jno
in
inc
roll
ja
cmp
mov
cs
mov
jp
xor
in
inc
in
sub
fs
clc
loopne
enter
test
push
ds
fldl
lret
sub
inc
mov
nop
shlb
shlb
rcr
jae
fwait
pop
aaa
ret
shll
gs
insb
pop
cmp
popf
push
test
jge
sahf
sbb
sbb
loopne
sub
insb
bnd
jbe
js
fcoms
das
and
loop
xchg
mov
test
cld
inc
inc
leave
out
add
out
rorl
mov
cltd
cli
xor
enter
mov
pop
jb
push
imul
fs
xor
jl
and
aaa
sbbb
sub
cwtl
andl
popf
cmp
cmc
fsubrl
dec
repnz
pop
cmc
fwait
push
ss
xchg
int
clc
inc
add
mov
pop
lods
mov
push
and
daa
loop
sahf
repnz
lds
push
clc
hlt
pop
shrd
cld
mov
cmp
int3
push
inc
jl
jle
or
jbe
arpl
mov
aas
insb
stc
movsl
mov
inc
je
xor
or
sbb
inc
pop
xor
ds
push
sarb
xchg
int3
jns
inc
xor
insb
sbb
jp
xchg
scas
xor
xor
and
mov
into
stc
push
std
fwait
repz
jge
cmp
aad
es
xchg
aad
insl
pusha
jl
cmpsb
aam
scas
push
jp
lds
and
adc
aas
mov
jl
push
sbb
adc
pop
mov
lock
rcrl
and
or
je
lcall
out
jmp
mov
and
mov
inc
cltd
dec
mov
out
push
sbb
stos
fdivrl
jl
push
mov
jbe
loopne
jno
lds
aad
mov
xchg
or
inc
rcrl
sub
jg
test
jmp
subb
sub
push
sbb
addb
jnp
and
into
in
mov
jne
cmp
mov
nop
or
mov
xchg
pop
loope
aas
imulb
jmp
mov
std
push
push
cmp
jmp
add
dec
fildll
loop
in
or
aas
fsubrp
adc
pop
daa
dec
shrb
out
mov
inc
xchg
cmc
mov
cltd
lods
adc
pop
shll
push
push
add
xor
mov
out
shlb
pop
and
insl
inc
push
stos
enter
mov
arpl
jne
ljmp
repz
mov
stc
ss
pop
push
cmp
mov
hlt
sahf
cmpsb
es
pop
aas
out
xchg
int
mov
pop
mov
mov
mov
pop
sub
xlat
or
jne
xchg
dec
je
jno
das
add
adc
add
add
mov
push
xorl
dec
dec
fnsave
jmp
sbb
fcmovnb
pushw
das
loopne
push
mov
imul
sub
fs
jecxz
jl
insb
std
lock
push
sub
mov
mov
ja
repz
mov
sub
stos
adc
loopne
jno
push
push
les
pop
fmull
rcrl
xor
out
pop
fistl
outsb
jbe
mov
out
aad
bound
lret
shr
loope
jp
inc
pop
sti
dec
pop
xor
add
xchg
stos
and
popf
test
pop
fwait
push
inc
out
lahf
imul
pop
insl
push
adc
test
inc
neg
or
push
sbb
jg
sbb
push
mov
pop
xorl
aam
imulb
jge
pop
xor
and
imul
insl
gs
sbb
pop
and
mov
adc
fiaddl
add
outsb
addps
test
sahf
mov
pop
and
add
push
adc
loope
jge
and
xchg
or
test
cmp
nop
hlt
fidivrs
lret
or
xor
xchg
mov
daa
loope
jg
or
je
jo
int
pop
mov
cmc
sbb
push
ja
and
aam
inc
cli
lea
shlb
outsl
push
into
and
test
cmp
subl
or
int
xor
xorb
jo
mov
cmp
iret
mov
int3
sbb
jp
mov
ret
push
mov
push
fsubs
and
lods
outsb
loopne
gs
es
mov
push
xor
push
sub
cld
inc
jecxz
or
jp
jne
push
dec
cmp
mov
mov
lcall
mov
mov
push
std
ljmp
jae
and
out
aas
cmp
jae
cmp
and
fstl
and
push
aas
iret
add
adc
push
pop
lock
ss
xor
jb
out
lds
repz
std
notb
mov
pop
push
aad
mov
ficomps
cmp
inc
push
pop
mov
lret
and
push
jno
aaa
mov
xor
xchg
jo
iret
push
push
cmp
dec
icebp
lret
mov
scas
mov
jo
in
scas
add
movsl
push
imul
jo
mov
jo
sbb
test
pop
fs
jno
ss
dec
nop
pop
dec
inc
addr16
add
rolb
xor
fldt
stc
inc
fst
add
sbb
mov
add
push
mov
mov
xchg
shll
lret
and
cmp
mov
dec
in
cmp
dec
sbb
rcr
add
xchg
aam
lods
mov
hlt
je
ljmp
xchg
inc
jae
adc
dec
push
enter
fistpl
add
loope
fsubr
push
bound
mov
sbb
and
push
xor
pop
iret
mov
aaa
pop
sbb
and
push
pop
sub
inc
ja
sub
mov
mov
shrb
pop
dec
ds
aas
mov
mov
bound
and
add
shrb
test
imul
enter
jo
dec
pop
movsl
stc
push
mov
adc
xor
pop
cmp
push
in
jge
jmp
cmp
add
jle
ret
jle
dec
xchg
mov
add
data16
shrl
enter
mov
push
pop
arpl
push
inc
loop
leave
mov
cmp
mov
shl
adc
pop
inc
pop
loope
xchg
push
push
inc
push
push
in
xchg
cmp
xor
jae
stos
sbb
jno
mov
adc
dec
fadds
push
mov
mov
mov
mov
sbb
ja
int3
fstps
cmpsb
mov
dec
push
xchg
sub
rcrl
movsb
ret
int3
dec
xor
es
lock
lds
out
mov
not
pop
mov
mov
cmp
add
mov
or
dec
inc
lcall
fcom
push
push
in
xorb
adc
mov
leave
clc
adc
or
dec
jnp
xor
push
push
push
jmp
bound
mov
ja
stos
int
stos
iret
inc
dec
push
clc
flds
test
icebp
sub
adc
xor
cltd
jecxz
test
out
push
jg
sub
cmp
and
jno
test
adc
pop
lahf
shrb
jnp
jnp
jno
mov
or
sarl
jne
pop
mov
mov
jb
xchg
fdiv
xchg
xchg
stos
mov
shlb
inc
mov
rep
cmp
pop
dec
ret
popa
push
std
rclb
lret
sub
dec
pop
mov
xor
out
push
jecxz
fistpll
addl
mov
sub
mov
mov
xor
xchg
xor
jmp
fwait
xor
movsl
popa
roll
cmp
popa
pop
push
xor
dec
jge
jno
repnz
in
das
jl
insl
scas
xchg
or
xchg
dec
sbb
js
sub
stos
fs
jp
jnp
mulb
and
mov
mov
roll
popa
push
dec
xor
jb
enter
gs
jl
pop
xchg
mov
or
pop
clc
shll
push
jl
and
das
dec
mov
int3
test
pusha
pop
rcll
rcr
rolb
sbb
imul
pop
fs
jecxz
push
int
mov
jge
aas
jns
sbb
comiss
push
movsb
bound
sahf
sub
add
jmp
push
and
adc
sbb
push
mov
xchg
dec
push
or
pop
or
mov
or
cmc
pop
fnstsw
mov
test
out
dec
jg
dec
cmp
push
movsl
jbe
jp
notl
cmp
xchg
mov
push
cmp
js
sbb
push
mov
jnp
push
shll
cmp
out
repz
jb
into
dec
cmpw
pop
adc
aaa
xchg
jb
rolb
pop
push
mov
aaa
push
fs
out
int
xchg
repnz
jmp
ss
and
cmp
pop
shlb
sub
cmpsl
push
inc
push
cli
fst
fs
aam
icebp
filds
hlt
cmp
add
mov
xor
inc
jl
push
lret
mov
test
jmp
mov
mov
mov
rcl
xor
pop
aad
stos
lahf
xor
xchg
xchg
dec
add
lock
adc
push
into
sbb
out
push
subb
cmp
cmpl
jecxz
scas
insb
xor
cwtl
hlt
cwtl
loopne
scas
pop
pusha
sbbb
adc
out
add
call
sub
dec
mov
add
pushf
rol
mov
and
dec
jb
leave
lret
jo
test
fstpt
xchg
push
push
stos
call
mov
mov
repz
je
bound
popa
sbb
insl
add
icebp
fs
popf
lea
push
fs
flds
sbb
int
fs
inc
xor
jno
addr16
sti
mov
repz
bound
call
cld
sbb
mov
cmp
sub
ficoms
pushf
ret
lcall
sahf
mov
ja
mov
test
jmp
cmp
cmp
jb
lds
jnp
jns
add
adc
int3
loope
cmp
insb
mov
push
jp
sub
push
movb
pop
dec
pop
xor
loopne
mov
jnp
xor
ljmp
inc
mov
pop
test
testl
ja
stc
in
test
movsl
xor
cwtl
cmp
js
or
add
cld
pop
jmp
jmp
add
jge
pop
and
cmp
andl
jno
cli
sub
repz
fs
sub
and
sub
xor
sbb
sub
lret
mov
stc
push
jns
cwtl
adc
in
out
ss
stos
jecxz
add
dec
jns
or
pop
inc
jmp
sbb
mov
bound
ficoml
cmp
fdivl
test
and
popf
je
mov
lock
js
call
push
lret
jbe
lods
shl
pop
push
scas
xor
shlb
push
fisttps
or
arpl
mov
xchg
fisubrs
jle
gs
adc
ljmp
xor
mov
jp
and
pushf
movaps
insb
mov
xchg
dec
into
xchg
pushf
sahf
xlat
dec
add
ret
mov
xor
std
and
add
lahf
loope
jbe
arpl
jno
pop
xor
addl
sbb
dec
call
sbb
dec
or
or
rolb
loopne
mov
out
xor
adc
aaa
sarb
test
mov
je
movsb
jl
add
gs
fwait
imul
loop
cmpsl
sub
cltd
fwait
xor
or
test
sbbb
imul
enter
fcomps
les
and
lcall
enter
inc
sar
outsb
les
push
les
push
fiadds
rcll
cltd
dec
scas
dec
ja
jne
push
or
jp
pop
out
adc
dec
push
jle
mov
flds
cmp
es
ret
sub
cli
push
ja
mov
mov
mov
out
cli
xchg
and
stos
xlat
push
cmp
lahf
int3
mov
cmc
push
mov
inc
xchg
fimuls
push
jle
sbbb
insl
out
ja
xchg
jl
adc
js
mov
mov
loop
lds
sbb
mov
jle
scas
mov
mov
mov
dec
inc
lods
cmp
jo
aam
sbb
call
lahf
int3
in
in
sarl
stc
jmp
cmp
cli
aam
mov
in
xor
lret
inc
mov
pusha
in
arpl
sub
inc
and
cmp
insb
or
and
fsub
mov
pop
test
test
inc
inc
mov
cwtl
sti
mov
or
pop
jge
mov
lcall
adc
push
in
mov
push
into
push
mov
pop
lret
sbb
cwtl
mov
addb
sahf
adc
bound
nop
or
loop
lahf
dec
add
jo
addr16
dec
divb
das
stc
mov
mov
fisubrs
scas
inc
mov
xchg
icebp
call
xor
into
imul
mov
mov
arpl
out
shr
mov
jne
insl
mov
lea
mov
ja
sbb
jle
gs
dec
js
sbb
mov
adc
cmp
addr16
ss
xlat
iret
mov
sbb
adc
dec
ljmp
jg
loope
icebp
les
testb
sub
adc
or
push
stos
push
mov
inc
pop
enter
sub
int
into
or
adc
fstpl
fmull
je
jmp
ljmp
and
jns
clc
or
sbb
cmpsl
sarl
add
stc
test
cmp
ret
dec
inc
jae
frstor
fs
cmp
bound
sbb
hlt
int
sarl
inc
sbb
sbb
leave
test
xor
sub
push
test
push
add
mov
pushf
imul
jno
mov
test
add
push
ret
dec
pop
cmp
lds
xor
pop
mov
and
xor
xchg
xor
pop
cmc
pop
dec
or
adc
mov
jb
cmp
ret
std
cmp
gs
je
not
add
jnp
enter
mov
lods
das
mov
sbb
dec
push
sbb
xchg
mov
scas
decb
cs
cmpsl
sub
add
cld
fists
jbe
jp
mov
lds
mov
push
sti
out
pop
dec
es
pop
aam
nop
inc
cs
movsb
dec
in
dec
imul
stc
or
stos
add
sbb
inc
jb
dec
cwtl
arpl
push
test
cmpsb
adc
loop
aad
mov
adc
xor
pop
pushf
add
xorl
jnp
sbb
cmp
out
xor
out
mov
enter
push
int3
lcall
adcl
add
dec
gs
std
stos
iret
or
outsb
leave
push
push
or
cmpsl
mov
out
inc
mov
fnsave
jmp
inc
pop
nop
xchg
lea
imul
sub
stos
outsl
test
je
mov
sub
add
imul
imul
and
xchg
adc
xchg
pop
jne
add
je
adc
adc
movd
cmp
cs
jb
test
repz
jno
mov
sti
sbbl
inc
xor
pop
mov
cmpb
das
insb
shl
dec
rcrb
add
dec
inc
pop
add
loop
shrl
push
lret
mov
aam
cld
jl
add
jno
add
std
pushf
shrb
mov
or
movsb
pop
pop
dec
mov
imul
movsl
cs
mov
mov
cwtl
mov
dec
incb
sbb
leave
stc
xchg
add
mov
rcrb
pop
stc
add
xor
mov
xchg
mov
in
pop
jno
popa
std
add
test
aaa
sbb
outsb
pop
fwait
cmpsl
shll
shrb
or
out
mov
pop
xchg
xor
out
fildl
jnp
dec
or
pop
push
jge
jno
test
int3
cltd
negb
jno
fnstenv
or
lods
add
ss
ror
into
sub
pop
loopne
cmpsb
insl
fisttpll
lea
cmp
hlt
jg
dec
fwait
xor
mov
in
jp
jno
cmp
mov
and
and
mov
out
cmp
push
sub
insb
aas
or
mov
pop
out
adc
adc
std
stc
pop
fdivr
inc
xor
cmp
xor
and
pop
in
imul
cmp
mov
mov
and
and
call
xlat
adc
stos
or
test
add
xor
mov
mov
adc
or
movsl
cmpsb
add
aas
rol
notl
sbb
sti
inc
cmp
dec
out
insl
sbb
xor
and
int3
test
adc
cwtl
push
push
pop
outsl
sbb
mov
fsts
mov
fwait
js
hlt
leave
jo
xor
nop
jbe
int3
inc
lock
mov
sub
fsubs
xchg
fsubr
dec
pop
addl
cmp
test
movsb
xor
push
add
jecxz
mov
adc
pop
rorb
lahf
call
fincstp
push
inc
xchg
mov
imul
cmp
inc
pop
sub
xchg
mov
cmp
mul
adc
lods
rol
inc
cmpsl
pop
pusha
aad
sahf
pop
pop
xor
testb
mov
jb
mov
dec
push
stos
cmp
lahf
int3
icebp
push
dec
aas
fnsave
sbb
push
pusha
and
jo
lods
std
loope
xchg
leave
xor
push
je
fwait
adc
dec
adc
fistpll
fildl
jo
jne
imul
pop
pop
dec
lahf
pop
movsl
mov
fldl
xchg
dec
mov
xor
dec
lea
ja
mov
test
jle
xor
shlb
out
xchg
iret
cmpsl
pop
jns
inc
fsub
loope
out
rorl
rolb
xchg
push
cmp
push
pop
arpl
dec
push
bound
hlt
shl
and
pushl
sbb
cwtl
push
cmp
jo
jno
sbb
cld
mov
sti
shlb
mov
out
iret
rorl
push
mov
jno
push
add
push
jns
mov
ds
je
sarl
add
cli
in
sub
lcall
or
call
adc
sbb
push
cmp
aam
sbb
mov
divb
fs
cwtl
or
xchg
and
xchg
cmpl
push
add
arpl
xchg
shlb
gs
mov
sbb
xchg
aaa
scas
push
or
lret
or
lcall
lods
testl
lock
aad
fidivs
sbb
movl
mov
cli
sub
add
jmp
fucomi
ret
mov
aaa
arpl
mov
dec
hlt
test
xchg
std
notl
xor
xor
aaa
cmpl
lea
jnp
cs
rcr
adc
dec
daa
js
int3
inc
insl
and
pop
cwtl
push
push
out
pop
das
fmull
push
mov
out
leave
stos
cmpsl
jns
or
movswl
push
sbb
in
or
jno
inc
sbb
xchg
sbb
jae
and
xor
xor
dec
adc
call
pop
mov
outsb
dec
xor
mov
mov
xor
cmp
fbld
cli
mov
lahf
mov
jnp
dec
cpuid
outsb
pop
add
fcmovu
adc
mov
in
xor
pushf
pop
pop
mov
mov
sub
movsl
mov
pop
ljmp
sbb
sar
or
sti
arpl
fadd
pop
out
ja
push
sbb
or
push
pop
xlat
mov
lret
clc
int
in
out
xchg
add
das
sub
mov
mov
sbb
test
bound
inc
sbb
adc
and
pop
cmp
xchg
jp
ficomps
add
in
pop
insb
cs
jecxz
pop
cli
pop
lods
daa
mov
repnz
add
cmp
mov
loop
mov
push
fwait
mov
neg
mov
test
stos
scas
sub
or
jg
push
enter
pop
stos
jo
pop
xchg
or
movb
mov
inc
jb
dec
mov
add
js
xor
push
push
punpckhwd
icebp
jge
add
adc
loope
les
imul
rcrl
mov
mov
mov
arpl
inc
push
test
enter
pushf
push
push
std
roll
or
lods
pop
outsl
lods
pop
inc
mov
out
ja
les
fwait
mov
xchg
movsl
cs
je
int3
jg
adc
inc
jb
call
lods
movsl
pushf
jge
bsf
or
adc
sub
xor
push
inc
cmc
jbe
push
jg
pop
jge
ja
mov
mov
and
sbb
aaa
sub
clc
leave
sbb
ljmp
add
mov
sti
adc
in
or
stc
inc
xor
test
lahf
inc
jne
lcall
int
dec
fdivrl
rolb
test
into
movsb
movsb
scas
dec
aaa
stc
andl
xchg
and
ret
lret
stos
stos
or
pushf
es
lahf
fmul
or
sbb
mov
int3
inc
scas
hlt
jg
mov
popa
pusha
lea
cwtl
faddp
fsubl
pop
cmp
inc
sub
xor
cmpsl
xor
pop
sbb
mov
mov
cmpsl
cmovns
int
cmp
push
jl
cmpb
pop
nop
adc
jle
adc
push
shrl
cld
mov
ret
jns
add
push
subl
mov
outsb
adc
jbe
jp
nop
out
sbb
sub
sbb
pusha
cltd
neg
and
cmp
inc
lods
aam
and
out
les
cmpxchg
sbb
loopne
imul
xchg
int3
dec
out
lahf
sub
adc
out
and
cmp
mov
js
cmp
xlat
cmp
int
cli
dec
adc
dec
pop
in
iret
lcall
mov
outsb
or
xchg
mov
cmp
cli
mov
lea
adc
into
lcall
adc
std
jnp
js
jo
repz
in
stos
fstp
loop
inc
rclb
arpl
ret
cmp
push
xchg
shll
lods
daa
push
mov
xchg
and
fistl
shll
fcompl
add
push
xchg
or
gs
cld
ss
ret
push
dec
scas
pop
inc
pop
jmp
push
xchg
mov
jne
fiadds
mov
mov
mov
sbb
fmull
or
jg
xchg
xor
push
cmp
and
in
cltd
inc
daa
aaa
daa
mov
inc
cmp
mov
jle
jl
or
out
pop
xchg
cmpsb
or
aaa
or
pop
dec
cltd
add
jmp
inc
std
add
adc
test
fsubrs
push
lock
cmpsl
por
xchg
pop
xchg
movsb
loope,pt
sub
sub
jg
push
push
inc
cltd
aas
push
es
cmp
popa
pop
pop
out
jns
insb
cmp
subb
add
inc
std
mov
imul
std
push
xor
xchg
push
orl
push
das
pop
jbe
sbb
adc
mov
ror
adc
xor
cmp
mov
push
loope
and
mov
cmpl
push
in
insb
andb
movsl
insl
sub
sbb
aaa
jno
mov
iret
pop
jge
int3
mov
jge
mov
and
push
ljmp
imul
outsl
imul
adc
shlb
mov
mov
scas
pop
mov
or
and
or
and
mov
pop
fcmovb
std
cld
popa
leave
call
jle
out
out
lds
call
into
in
xchg
push
nop
mov
jnp
sar
and
test
mov
shlb
and
mov
push
cmp
insb
std
mul
in
in
sbb
jne
movsb
sub
rorb
shlb
bound
imul
mov
fcomps
xor
sub
jle
cld
xchg
cmp
mov
cli
in
cmp
add
shll
sbb
mov
rol
out
daa
fwait
cli
pop
sbb
pop
dec
mov
jbe
xor
sbb
pop
push
and
inc
and
cmp
xor
popf
ror
test
in
xor
sahf
adc
dec
arpl
sbb
mov
test
push
sub
xchg
ret
push
push
insb
xor
jno
or
pop
test
sbb
lods
jp
xorl
outsb
or
adc
rorl
jl
and
ss
push
dec
xchg
inc
ror
movsl
xor
inc
dec
mov
inc
ret
out
js
daa
push
xchg
xor
cvtps2pd
outsb
mov
stos
aam
fdivrs
stos
and
add
jns
nop
sub
and
popa
pop
push
xor
dec
rcll
xchg
shr
psrlq
sub
rclb
mov
mov
jo
sub
xchg
mov
mov
stos
rcrb
adc
mov
aam
lods
mov
outsb
daa
sti
es
ljmp
pop
or
and
scas
push
ja
push
xor
add
jmp
mov
cmpsb
dec
jl
icebp
jge
mov
int3
xor
pusha
cmpb
sbb
mov
adc
jb
inc
jl
mov
pusha
mov
push
jp
xchg
inc
inc
jbe
sbb
mov
dec
arpl
movsl
bound
xor
lds
add
je
aas
inc
and
pushl
ficoms
insl
movsb
inc
mov
mov
mov
push
xor
push
mov
push
popa
dec
add
xlat
sbb
call
popf
cmp
or
dec
iret
push
lock
sub
bound
push
divb
ret
and
inc
xor
fisubl
dec
std
push
or
adc
jbe
cld
xor
lods
test
movsb
xchg
or
sbb
pop
dec
xor
arpl
ljmp
cmp
jp,pn
pop
fsubrp
daa
lock
repnz
sub
or
leave
cld
add
xor
jle
dec
in
loop
es
mov
outsb
ss
cld
cmp
lea
loope
gs
sarl
in
adc
in
js
gs
icebp
clc
mov
pop
lods
mov
andb
mov
adc
adc
push
inc
add
leave
rcrl
cmpl
popf
loope
lcall
arpl
std
je
fldcw
loope
repz
xchg
mov
cmp
lds
push
inc
xchg
cmp
push
push
adc
mov
imul
movsl
scas
lahf
es
mov
int
cld
call
sub
xor
and
leave
add
push
js
shlb
or
or
insl
or
xor
test
in
out
call
jle
iret
add
leave
or
push
leave
push
rclb
adc
jnp
and
mov
jne
mov
lcall
jbe
dec
xchg
inc
or
mov
test
gs
rolb
rolb
divl
out
mov
mov
mov
fs
sub
je
icebp
daa
das
sti
xchg
cmp
sbb
dec
mov
test
sub
js
repnz
enter
pop
stos
scas
mov
loope
lret
push
shll
std
ja
push
inc
jmp
loopne
in
xor
jg
mov
mov
iret
cmp
or
jns
mov
fildll
xor
xor
into
movsl
loopne
pop
sub
push
test
sub
testl
insb
sbb
jecxz
add
lret
sub
mov
dec
adc
cmp
sbb
lds
test
cwtl
ror
ror
or
mov
shlb
push
rclb
pop
popf
rorb
aaa
pushf
ds
insb
jae
sbb
jne
jmp
or
pop
rorb
mov
daa
pop
pop
pop
subps
mov
cli
ret
fld
test
inc
cmpsb
loope
add
dec
xchg
ja
dec
push
push
mov
icebp
stc
push
jns
pusha
enter
pop
ret
xchg
sti
icebp
stc
add
cmc
iret
mov
leave
ds
test
mov
inc
sbb
add
xchg
dec
fs
fs
cmp
dec
jmp
pop
pop
mov
adcb
ret
jmp
icebp
cwtl
test
dec
mov
xchg
scas
and
shr
jl,pn
or
push
adc
sbb
jae
inc
jo
and
fnstsw
mov
lret
shlb
jp
scas
shr
sub
mov
scas
mov
sbb
sub
in
cmp
cwtl
shrl
cmp
jg
les
xchg
or
sub
ficompl
fstp
pop
stc
adc
sar
fwait
mov
call
adc
pusha
addr16
add
mov
nop
mov
and
push
pop
or
push
lcall
popf
mov
outsl
push
xchg
and
or
inc
lock
test
rcl
xchg
xchg
jp
sti
pusha
sahf
std
dec
jge
test
xchg
call
fsubrs
js
jno
out
fmuls
pop
and
cmpsl
mov
jg
pop
jns
adc
push
in
jnp
xchg
xor
aam
hlt
lcall
sbb
jge
mov
aas
mov
mov
sbb
mov
pop
mov
je
out
mov
testl
pop
jnp
mov
notb
jne
dec
loope
repnz
sbb
xchg
cltd
ja
mov
aas
adcl
xor
xor
pop
push
cmp
rdpmc
aam
cmp
adc
inc
xchg
fsubrs
xor
inc
mov
mov
mov
jb
push
cmc
mov
pop
add
ja
add
mov
adc
repz
and
inc
out
push
cwtl
xchg
cvtps2pd
popa
or
sarl
shlb
adc
lods
mov
jge
push
push
je
iret
pop
stos
sub
adc
inc
leave
mov
test
mov
shll
xlat
pop
and
imul
jns
mov
mov
cmp
push
addb
and
xchg
in
jp
in
sbb
dec
jecxz
jmp
mov
push
mov
adc
movsl
adc
ds
ret
clc
cmpb
pop
mov
shl
xchg
inc
sub
mov
inc
loop
add
and
fistl
xchg
dec
or
pop
int3
add
cmp
xchg
add
repz
fwait
xlat
mov
mov
leave
arpl
outsb
ficoms
push
sbb
sbbl
mov
cmp
mov
push
pop
xchg
pop
mov
jb
nop
mov
sti
mov
jo
jl
xor
xor
jns
pop
mov
imul
cmp
insl
ficomps
dec
mov
lock
mov
nop
ret
cmp
insb
or
and
shl
dec
add
push
inc
push
xor
in
mov
cld
push
and
jne
imul
adc
and
jp
jnp
andb
lahf
xor
dec
lods
add
popf
add
ret
inc
jb
add
pop
dec
test
stc
xchg
cmp
data16
jb
push
ss
mov
insb
ss
lret
or
or
fmull
adc
or
enter
xchg
leave
jns
add
pop
outsb
and
mov
add
sub
pop
repz
imul
and
push
dec
xchg
jge,pt
or
js
dec
jle
jb
leave
pop
adc
xchg
or
pusha
sub
add
or
jno
lds
lcall
xchg
jl
xchg
xor
jl
pop
cmp
mov
xchg
jne
clc
cltd
add
sbb
pop
push
fs
lcall
imulb
jecxz
sub
xor
cmp
shr
stos
mov
cmpl
add
push
lods
sti
aaa
jl
ret
inc
in
leave
mov
stos
add
outsl
repnz
push
jp
das
addr16
loop
lods
mov
repnz
pop
sub
pop
orl
cmp
mov
mov
push
fnstenv
sbb
cmp
stos
jg
push
xor
repnz
leave
jge
cmp
mov
add
lea
mull
xchg
jp
testb
and
out
ljmp
arpl
lahf
sbb
sahf
js
repz
cmp
pusha
sub
add
push
lret
ja
mov
out
mov
cmpsb
sbb
mov
cmp
adc
xchg
xchg
je
inc
pop
int3
and
fldcw
imul
dec
adc
add
fidivl
pop
rorl
or
cmp
mov
push
je
cmp
jno
in
in
rclb
lods
mov
push
xor
cmc
inc
sbb
sub
xchg
nop
push
stos
cmp
mov
push
jp
sbbb
stos
and
push
fmuls
psllq
insl
lea
jae
cmp
xchg
or
loope
pop
mov
push
mov
push
and
mov
mov
cmp
js
fldt
inc
mov
cmc
pop
xchg
inc
cmpb
mov
pop
inc
bound
sub
push
scas
cmp
cmpsb
data16
pop
pop
test
mov
es
aam
rcr
lock
sbb
add
mov
inc
les
pop
fstps
xor
rolb
lods
xor
arpl
fdivr
push
aam
testb
mov
cli
xchg
shrb
stos
jmp
add
cmpsb
daa
scas
pop
sahf
xlat
ret
cmpl
pop
mov
cmp
cld
cld
cs
out
pop
loop
inc
mov
or
ljmp
shrb
sar
stc
mov
fs
and
into
mov
subb
scas
and
pop
xchg
out
xchg
loope
stos
icebp
cmpsb
fdivs
lock
sbb
jmp
rdmsr
jmp
mov
mov
fidivrl
lcall
stos
jecxz
pop
lock
fs
ret
dec
jge
push
in
or
inc
stos
fisubs
lahf
cmp
sub
out
sub
mov
adc
les
sub
push
loop
loopne
ja
in
pop
xor
or
sub
out
lahf
jp
adc
lds
jle
cmc
data16
xchg
mov
cmp
mov
xchg
xlat
pop
sub
in
jno
incl
mov
jmp
sbb
mov
dec
outsb
stos
cmovns
mov
jno
mull
mov
repz
push
push
cs
and
xchg
push
clc
cli
inc
out
ds
aad
pop
mov
mov
je
out
pop
call
es
leave
sbb
mov
int
mov
mov
xchg
fdivrl
mov
push
and
pop
fdivs
movsb
scas
jne
or
sub
add
ret
sbb
push
push
lock
inc
sub
sub
and
and
js
insl
lods
cmpsb
inc
mov
inc
jb
insl
test
and
int
cmpsl
xchg
pop
jae
enter
add
daa
adc
test
add
repnz
push
mov
dec
icebp
dec
mov
movsl
add
lds
movsl
sti
scas
pusha
or
shlb
dec
and
inc
sarb
rorl
sbb
icebp
repz
pop
loope
cs
xor
mov
jo
pop
inc
ds
or
popa
adc
or
sbb
rcrb
pop
je
mov
std
into
xor
dec
cs
or
out
out
lahf
popa
xchg
stos
pop
popf
sub
sbb
not
jge
scas
xchg
mov
addl
mov
leave
stos
cmp
nop
mov
mov
or
dec
nop
mov
cmp
mov
jnp
push
xchg
mov
pop
mov
insl
mov
out
add
dec
pop
add
aaa
and
bound
push
mov
xchg
jns
push
add
mov
xor
push
push
jno
dec
xchg
or
dec
int3
dec
js
rorl
aas
ljmp
cli
scas
xchg
out
adc
je
andb
push
and
mov
repz
mov
jne
lods
addr16
lock
lods
fistl
push
sbb
sub
mov
push
lret
and
repnz
fs
fucomi
mov
xchg
arpl
and
lds
inc
pop
cmp
es
dec
into
in
imul
hlt
mov
xlat
repz
xor
popf
mov
mov
hlt
cmpsb
mov
stos
xor
pop
insl
std
xor
test
inc
inc
in
insl
fcmovb
jg
ror
cmp
jl
scas
jo
rcr
popa
movsb
mov
fisttpll
fs
loopne
sbb
test
das
mov
gs
fisubrl
aam
jne
sahf
jecxz
cmp
mov
ret
std
in
rolb
cmpsb
jae
mov
add
ret
jnp
inc
jg
mov
sbb
das
cld
xor
or
or
jmp
pushf
mov
adc
popa
mov
adc
dec
rcrb
and
scas
aad
cwtl
into
cmc
call
sub
dec
bound
lods
dec
lret
xchg
inc
lret
shl
lahf
mov
jle
popf
jo
jne
iret
enter
hlt
sub
mov
ljmp
sub
sbb
insl
and
insb
sbb
dec
fldl
or
xchg
sub
mov
lea
pop
std
addr16
mov
bound
loopne
or
and
les
ljmp
jno
arpl
ja
xor
dec
mov
add
mov
add
adc
mov
cltd
add
pop
out
popf
popa
mull
dec
enter
adc
push
lods
push
call
les
xor
sbb
stc
inc
loope
mov
add
mov
dec
inc
les
inc
ret
out
adc
and
xchg
andl
cli
loope
xor
pusha
xor
xchg
ja
mov
sub
xchg
mov
jl
jns
xacquire
arpl
lret
jmp
dec
imul
jl
sbb
sbb
add
stos
push
add
cld
pop
mov
mov
fidivs
cmpsl
push
xorb
cmpsb
nop
imul
inc
or
add
call
es
pop
mov
xorl
scas
add
sbb
mov
adc
shlb
sub
loope
pop
xor
repnz
insl
sbb
mov
and
mov
fs
inc
inc
test
insb
sti
jo
mov
sbb
adc
int
aad
mov
push
dec
pop
insb
lret
mov
add
ljmp
cli
and
sti
fildl
dec
loop
mov
and
sbb
es
cltd
inc
jae
push
rorb
or
mov
es
push
adc
arpl
adc
mov
mov
dec
aaa
cltd
xchg
lock
mov
rcrl
or
addl
imul
mov
cltd
pop
aam
in
and
cld
je
pop
mov
nop
sub
repnz
xorl
cld
lds
sbb
lods
lods
rclb
xor
mov
cmp
jbe
mov
push
jmp
xorb
push
loop
mov
fwait
adc
and
adc
push
ret
call
mov
and
add
jp
push
xorb
jo
inc
jge
pop
jae
jo
daa
cld
loopne
pusha
mov
sysret
adc
xor
push
add
or
es
cltd
jae
adc
cmp
call
divl
or
xchg
test
pop
lock
or
popf
sbb
sarl
jle
shll
cli
dec
mov
mov
rcl
shrl
mov
cmp
pop
sbb
fwait
lock
or
mov
xchg
decl
es
adc
jmp
xchg
mov
dec
test
bound
push
lods
mov
push
lods
mov
sub
lgs
pusha
iret
xchg
cmp
div
mov
mov
out
call
xorb
cmpsb
xor
cmc
jecxz
lods
clc
int3
dec
pop
mov
movsb
or
clc
push
pop
pop
fnstcw
lfs
fs
fdivs
xchg
xor
sbb
addr16
dec
pushf
adc
cmc
je
push
push
movsb
fs
mov
sub
ljmp
sbb
stos
xchg
mov
sti
push
call
jo
popf
mov
cltd
insl
inc
lahf
mov
repnz
jl
es
scas
ret
jae
push
mov
mov
repz
fdivp
fldt
stos
test
mov
sbb
data16
dec
fwait
mov
xorb
xchg
rcl
fadds
and
mov
or
or
pop
jl
ds
cltd
sub
fists
pop
repz
dec
or
ret
push
mov
cld
jae
xor
adc
mov
movsl
inc
mov
mov
jno
mov
jle
adc
loope
sub
je
rclb
dec
cwtl
sbb
cmp
pop
push
test
fnstenv
sub
cmc
pop
pop
insb
mov
adc
and
xchg
xor
lods
sub
das
mov
mov
cmp
adc
adc
xor
mov
leave
mov
and
mov
ljmp
sub
pushf
mov
or
xchg
xchg
lds
mov
and
cs
mov
xchg
orl
gs
test
pop
jg
mov
push
ret
cli
xor
mov
push
fs
mov
test
mov
in
sbb
cli
sbb
cltd
add
test
xchg
adc
ljmp
mov
inc
mov
jbe
idiv
xchg
cltd
sub
imul
shrl
pop
mov
jmp
fstpt
out
repnz
ret
insb
pop
or
mov
mov
aam
aas
mov
les
push
stos
out
and
clc
sbbl
push
iret
pop
in
out
divb
xchg
cs
insl
sbb
lret
aas
imull
jmp
xor
fs
sub
outsb
popf
arpl
sub
mov
roll
push
mov
out
in
jl
sahf
push
or
pop
jnp
loop
inc
sbb
adc
loope
push
or
cmp
mov
repz
js
or
xchg
enter
fstpt
mov
xor
movsb
sub
hlt
mov
fs
sarl
jl
loop
inc
ret
sbb
pop
shr
sub
jne
ret
and
fsubrs
and
call
add
lock
push
cmc
cmpsl
jo
sub
inc
in
mov
call
or
and
out
or
mov
js
jecxz
daa
sbb
testl
dec
loopne
push
mov
mov
and
cmp
shll
or
iret
stc
lds
or
jg
xchg
iret
ficoml
sub
cmp
fdiv
adc
sub
lock
out
fwait
mov
enter
xchg
mov
adc
shr
jg
rolb
xlat
pop
outsl
mov
inc
mull
or
fsubrl
mov
nop
and
pop
nop
add
pop
nop
pop
clc
mov
push
cwtl
jbe
jb
test
scas
jb
js
in
mov
push
in
std
leave
fsubrl
mov
jp
cmp
mov
xchg
adcb
stos
or
inc
sti
nop
jbe
arpl
adc
pop
shlb
aad
cmp
pop
pop
adc
pop
adc
test
lea
sub
js
lret
xchg
sub
or
scas
xor
pop
mov
scas
lds
add
pop
xchg
sub
pop
jmp
ds
or
arpl
aam
cwtl
or
inc
cmp
mov
xchg
xacquire
xchg
sbb
stc
testb
ficomps
push
outsl
fxch
sub
inc
cmp
mov
ret
test
cmp
outsl
cmpsb
xor
adc
dec
insl
sbb
sar
mov
sti
lock
scas
into
dec
test
add
sub
cmpsb
lea
pusha
mov
loop
jmp
adc
es
cmp
repnz
push
out
sub
aam
test
xorl
jne
and
or
and
test
loop
jb
lahf
mov
mov
cmp
icebp
stos
mov
rorl
sub
int
fsubs
mov
fisubs
mov
inc
dec
push
sbb
xchg
lret
je
repz
testl
fstps
cwtl
enter
push
rolb
lcall
sub
push
mov
out
jmp
add
jbe
and
sub
and
mov
sub
jbe
cmp
pop
ss
jecxz
stos
adc
and
lods
ret
dec
push
test
test
out
cmpsb
lret
fdivrs
xchg
es
aad
mov
mov
mov
mov
cli
addr16
adc
ja
stos
cmp
stc
fdivl
loopne
or
cmpsb
movsb
inc
xchg
or
mov
sub
subl
and
jbe
insl
sbb
pop
inc
mov
mov
mov
bound
popf
into
in
rdmsr
shll
inc
scas
into
add
dec
cmpsb
mov
jl
insl
dec
sub
lea
cli
rdpmc
mov
std
ficoms
cmp
mov
popa
in
push
shll
scas
out
sbb
mov
popa
test
or
subl
shl
cs
and
push
mov
or
mov
xchg
test
in
aas
cmpsb
xor
inc
mov
push
stos
xlat
dec
pop
call
xchg
or
add
clc
mov
pop
push
lock
mov
pop
xchg
out
out
mov
cmp
dec
daa
mov
or
mov
dec
jo
mov
mov
test
mov
push
and
pop
das
push
lods
in
sbb
and
push
jb
adc
rorl
mov
repnz
cmpb
fcoms
lock
mov
mov
std
lcall
mov
fnstcw
xor
and
xor
sub
call
das
mov
aas
dec
dec
je
cmpsb
outsb
test
filds
popl
mov
lods
rcrl
mov
cmpsl
loopne
jno
push
add
loopne
inc
popa
lcall
outsb
or
cmc
mov
imul
mov
and
fdivl
popf
mov
lock
and
out
mov
sarb
scas
add
icebp
cmc
pushf
lock
leave
jbe
ret
sbbl
into
sub
cmp
and
fcoml
pop
and
ds
movb
and
popf
aad
testl
lcall
mov
rorb
insb
or
aam
xchg
inc
push
ret
jg
enter
mov
js
loope
aam
jnp
xchg
push
je
test
jo
cmp
jmp
pushf
and
cld
icebp
add
add
lods
jae
cltd
mov
dec
and
or
pushf
xchg
pop
or
adc
in
pmaxsw
mov
dec
aam
lods
or
cs
mov
loop
scas
in
or
imul
cltd
lret
inc
xchg
test
fbstp
out
call
insl
sbb
jp
pop
insl
mov
aas
cmc
xor
hlt
pushf
lods
scas
xchg
xchg
push
jmp
call
stc
jl
out
into
cmc
push
addr16
add
insl
xchg
jo
call
insl
jecxz
mov
mov
pop
fiadds
aaa
or
push
or
pop
iret
scas
sub
sbb
sub
dec
or
pushf
into
ja
cltd
mov
shlb
cmp
lods
stos
loop
pop
or
fcomi
mov
repnz
mov
inc
sahf
cmpsb
and
lret
adc
clc
ja
pop
and
cmp
addb
cltd
dec
sbbl
loop
addl
dec
out
mov
xor
pop
int3
dec
repnz
jl
sbb
jb
shl
and
lcall
add
jge
xor
hlt
push
fsubr
dec
pop
das
pop
sub
add
sbb
push
add
repz
loope
mov
jmp
push
or
int
jns
inc
fildll
push
push
in
sub
ret
aaa
push
add
fldt
loope
adc
sub
das
dec
jmp
aam
outsb
pop
push
mov
push
mov
clc
sbb
sub
inc
ds
xchg
push
imul
or
stos
movsb
popa
xchg
jp
shrd
jns
cli
movsb
jno
dec
test
out
dec
push
mov
sub
lock
jmp
mov
push
shlb
jg
push
out
inc
inc
sarl
fstl
inc
mov
test
xchg
xchg
cmpb
std
adc
push
jnp
and
cmp
mov
aad
and
std
mov
xchg
outsb
xor
loopne
push
pop
mov
xchg
cmp
leave
scas
f2xm1
nop
sub
dec
push
jne
les
cmp
out
or
ljmp
jle
imul
mov
fisubrs
psrlw
sbb
jo
cmp
jl
add
cmpsl
inc
and
outsb
arpl
mov
pop
jecxz
mov
sbb
cmp
dec
scas
add
sarb
fmuls
mov
mov
shl
cmp
inc
push
inc
rcrb
adc
ljmp
inc
in
jne
inc
ljmp
mov
aaa
addr16
nop
fucomi
sub
lods
mov
out
lods
cmp
mov
dec
aaa
std
sub
pop
pop
sub
xchg
es
repz
cs
test
cli
cmpsl
mov
push
faddl
lods
stc
cwtl
mov
insb
jns
fwait
push
mov
and
mov
or
sbb
mov
ret
fistl
sbb
andl
adc
subb
mov
mov
jmp
mov
jbe
jg
outsl
mov
clc
adc
sub
push
test
cmp
in
mov
sbb
out
iret
idivl
scas
adc
das
cwtl
push
sbb
xchg
call
cmp
xchg
in
lret
mov
out
adc
sbb
ljmp
dec
and
jb
cmp
rorb
test
jge
js
lods
jno
repz
add
iret
out
push
cs
cmp
jmp
mov
push
cmpl
push
ljmp
notb
movsb
mov
aam
rolb
inc
test
jge
xchg
ror
ret
xchg
inc
mov
pop
into
push
vsqrtps
adc
xor
in
jg
pop
or
add
out
into
das
jne
into
mov
dec
mov
movl
clc
lret
xchg
fdivl
shll
or
mov
jle
imul
inc
xchg
fstpl
ljmp
adc
mov
mov
or
dec
and
outsb
pop
inc
sub
sbb
rcl
push
xchg
loop
fidivl
lds
rorb
cmp
xchg
pop
aaa
insl
orb
push
lods
enter
aaa
sbb
xchg
sub
sub
adc
aad
adc
sbb
scas
movsb
jecxz
test
mov
shll
shlb
aas
cmp
out
imul
sbb
lea
fistps
jne
lcall
cld
cmp
ret
push
les
imul
jne
dec
leave
jne
dec
mov
mov
xor
mov
xchg
out
pop
test
and
cmp
addb
cltd
repz
jl
out
sbbb
dec
mov
aas
pop
js
insb
out
push
ds
xor
jp
xlat
movsl
pop
cmp
push
dec
loop
cmp
jmp
jo
cs
or
stos
je
cmp
lds
jge
ss
outsb
stc
orb
pop
push
inc
pop
cld
mov
mov
xor
notb
ljmp
mov
fdivrs
dec
roll
xlat
or
push
push
pop
lock
clc
icebp
lahf
in
stc
push
les
rcrb
sbb
xor
and
inc
inc
mov
inc
mov
push
push
dec
adc
sbb
fbld
lods
jo
dec
mov
dec
pop
mov
cmp
stc
mov
jb
adc
jp
dec
jo
mov
mov
movsb
pop
sub
sub
inc
dec
xlat
pop
loope
xchg
orb
andl
sbb
push
inc
xchg
fwait
hlt
nop
push
mov
adc
push
icebp
in
int3
int
cmpsb
jmp
pop
mov
jb
inc
push
call
imul
loop
mov
ja
stos
sub
cld
pusha
mov
nop
jae
jp
mov
mov
adc
ja
pusha
dec
in
std
mov
sub
aad
sahf
and
out
adc
or
adc
outsb
jae
sub
in
bound
push
es
xor
cmp
jp
sub
mov
lds
verr
push
and
mov
fnstenv
pop
or
jno
xchg
repnz
push
or
aaa
dec
sbb
or
lcall
mov
fmull
jbe
lahf
arpl
or
iret
mov
js
push
jle
xchg
das
add
jb
and
fstl
fucomip
and
test
inc
sbb
icebp
or
fnstcw
daa
cltd
add
sbb
mov
pop
stos
sarb
or
inc
daa
ja
addl
sub
pop
ficoms
mov
mov
insb
sbbb
xor
jae
addr16
add
aaa
js
fucom
lret
mov
mov
jno
aam
inc
outsl
ds
imull
jp
or
fnstcw
lock
dec
pop
cld
pop
push
sub
fildl
jbe
xlat
cmpsb
popa
stc
inc
cmp
or
mov
xchg
pusha
sbb
addr16
cmp
cltd
sbb
inc
add
test
xchg
xchg
or
mov
fisttpll
jne
jmp
or
push
jo
cmpl
push
aad
cmp
push
pshufw
add
adc
mov
xor
je
stc
add
std
sarl
pushf
inc
dec
mov
loope
push
mov
ja
sub
mov
mov
xchg
or
loop
in
sbb
scas
repz
aam
sahf
lods
push
push
jl
dec
add
and
insl
sarl
in
sub
dec
sub
adc
fdivs
push
add
dec
jle
repz
ds
xor
leave
fmuls
scas
pushf
pop
mov
inc
dec
sti
jecxz
sub
push
pop
mov
pop
cs
notb
shlb
ds
or
push
cwtl
xchg
mov
xchg
in
negl
fcompp
cli
mov
adc
daa
push
gs
nop
sub
sub
iret
mov
mov
sub
cmp
xchg
sub
push
adc
push
dec
es
sbb
cmpsb
xchg
cmp
mov
in
add
out
xor
cwtl
das
push
ja
sarl
inc
imul
ja
push
fs
adc
add
adc
js
mov
es
movsb
cmp
ret
pop
mov
inc
mov
mov
insb
jp
arpl
adc
das
iret
xor
outsb
daa
lods
cmpsl
mov
outsl
adc
dec
cli
push
arpl
pop
scas
sub
inc
lret
add
lret
ss
js
push
out
sub
mov
out
lea
sbb
jbe
adc
xchg
xchg
mov
add
and
adc
fnstcw
clc
insb
mov
sbb
clc
xchg
cmp
out
lret
push
or
pop
jp
and
dec
add
cmp
stc
orl
in
loop
rcr
mov
repz
lahf
xchg
cmp
sbb
jo
mul
push
mov
jecxz
fmulp
inc
pop
push
sbb
jns
add
xchg
nop
xchg
mov
cltd
add
mov
sub
mov
and
dec
jl
aaa
inc
mov
mov
jg
jecxz
lods
sti
mov
or
je
add
xor
push
jg
shrb
pop
ret
insb
push
ds
or
outsl
out
in
out
add
jne
push
dec
sub
lock
test
cli
or
jae
popa
pop
call
dec
cmp
and
xor
pop
cmp
mov
mov
pop
adc
aas
lods
adc
xchg
lahf
mov
mov
xchg
ret
ret
xchg
leave
lock
xchg
sbb
dec
ficompl
mov
mov
jecxz
push
aas
mov
stos
cmp
enter
xchg
inc
ret
mov
insl
sbb
fdivrp
push
outsb
popa
adc
mov
mov
cmpsb
jbe
sbb
push
pop
sbb
and
push
jl
decl
and
stos
cmp
lods
int3
lret
pop
push
aaa
lds
inc
int
xor
stos
hlt
or
jo
dec
jno
decl
rcll
mov
push
pop
lds
lock
pop
and
add
hlt
mov
imul
out
xchg
test
into
enter
pop
fs
mov
call
shlb
push
cmpsb
addr16
pop
xchg
stc
pusha
mov
sbb
jno
lret
popa
or
dec
xchg
hlt
dec
mov
iret
push
fstl
flds
orl
fstpt
or
pop
stos
xchg
lret
js
push
in
add
lret
cmp
jmp
push
jge
xlat
adc
loop
insb
out
jno
gs
mov
fisubs
ss
sbb
in
je
pop
int
or
pop
adc
sbb
cmp
xchg
mov
fnstsw
pushf
ss
ficomps
inc
jae
jecxz
lcall
sbb
cwtd
aam
fst
sbb
xor
ljmp
call
jae
sub
lcall
and
cs
pop
mov
mov
and
inc
int
rcrb
incl
inc
loop
jno
adc
int3
mov
subl
jbe
push
push
adc
pop
push
mov
xchg
pop
out
ret
cmp
xor
mov
push
mov
dec
in
int
shll
or
push
fstp
popa
cwtl
and
cmp
and
jmp
test
fnsave
pop
mov
data16
sub
mov
je
jecxz
leave
mov
or
inc
into
mov
in
outsb
add
mov
sbb
mov
enter
mov
rcll
fdivl
jbe
sub
mov
lea
shlb
inc
movsl
data16
xor
in
cmc
or
jno
mov
popf
lds
pop
push
mov
sub
icebp
dec
or
dec
adc
jle
insb
lds
jg
mov
ret
popf
rcll
sbb
push
mov
cmp
jmp
adcl
add
jne
xor
jle
inc
sub
mov
xlat
or
inc
push
popf
mov
ret
dec
lds
mov
mov
testb
enter
lods
gs
dec
xor
cmp
cli
xlat
push
out
divb
ret
sbb
sbb
and
cltd
or
test
fmul
lret
js
shll
pop
fimuls
inc
inc
jecxz
and
ja
icebp
lea
pop
lea
repnz
lahf
leave
ret
jmp
aas
pop
mov
mov
int
add
pop
pop
cwtl
rol
sbb
lahf
pop
or
xchg
and
push
cmpsb
push
jne
lret
and
pop
mov
inc
push
lahf
xchg
dec
add
rep
add
mov
mov
mov
jg
jl
fnstsw
jno
cmp
rol
int
fstps
and
adc
int
stc
mov
enter
pop
hlt
pop
jecxz
popf
lahf
or
jge
add
mov
or
inc
and
jno
mov
dec
mov
xchg
and
mov
mov
ds
adc
lret
mov
scas
jno
repnz
and
nop
dec
cli
mov
lock
and
lcall
mov
adc
fmuls
sub
ss
mov
test
sbb
jno
xchg
push
xor
lods
adc
or
mov
push
ret
lock
rcr
arpl
mov
sub
into
push
in
adc
add
fsubrs
adc
and
mov
in
aam
push
mov
ljmp
mov
mov
int3
cmp
aaa
cmp
sti
fwait
cmp
cmp
dec
mov
mov
mov
ret
add
sbb
mov
lock
jbe
or
sahf
leave
adc
insb
loop
jecxz
adc
dec
out
aaa
dec
rcll
dec
iret
shlb
cld
sub
push
jno
icebp
fdivl
push
repz
mov
mov
cmp
mov
icebp
rcrl
clc
sahf
adc
push
les
into
lods
mov
stos
dec
imul
dec
mov
mov
push
inc
mov
cmp
dec
sbb
imul
jns
or
adc
scas
movsb
subl
inc
mov
mov
imulb
and
subb
xor
cs
dec
outsb
cmp
xor
pop
sbb
or
lahf
xlat
jmp
insl
bound
popf
sub
divb
push
jle
jnp
loopne
add
pop
sbb
movsb
mov
dec
add
js
xchg
xorb
rcrb
frstor
cmpsb
imull
xor
sbb
cmc
sarl
adc
call
push
aas
repz
inc
aaa
shrb
imul
stc
fs
daa
das
xchg
or
ljmp
sbb
fsubl
mov
cmp
into
cmp
aas
mov
test
movsb
fwait
add
fdivrs
rcll
arpl
daa
int
xchg
jp
inc
adc
sub
dec
xchg
lret
nop
add
enter
lret
sbb
ret
popf
pop
and
dec
lcall
add
mov
mov
cmp
pop
add
sub
aaa
pop
iret
fadd
xchg
stc
jbe
jle
push
mov
add
mov
mov
push
iret
mov
mov
in
das
hlt
repnz
insb
mov
rorl
xabort
les
fisttpl
mov
mov
sub
cwtl
scas
repnz
mov
push
imul
cltd
bound
lahf
and
orb
sbb
sub
push
cmpsl
int3
popf
jle
scas
das
jmp
push
rcll
aaa
lods
nopl
inc
mov
fdivs
stos
orl
dec
lret
pop
lcall
cmc
xchg
cwtl
pushf
mov
enter
inc
jno
push
mov
stc
das
adc
ds
fdivl
aas
mov
sbb
push
sahf
in
out
mov
test
pop
xchg
cmp
movsl
add
sbb
push
fsub
xchg
mov
pop
adc
pop
repz
and
sub
ret
pop
push
pop
bound
inc
cmpsb
int3
cmp
mov
or
icebp
ud2
cli
lcall
bound
adc
gs
addr16
xor
stc
xchg
inc
mov
jg
repz
daa
sub
dec
and
aaa
xor
mov
sub
andb
push
lds
shrb
cwtl
imul
out
hlt
sub
dec
push
out
movsl
imul
mov
jns
sar
std
xchg
imul
pop
cltd
dec
jns
push
cmp
cmp
mov
push
jbe
pop
adcb
dec
ret
rcrb
inc
out
out
jl
inc
push
in
mov
popl
xor
xlat
idivb
iret
cmp
sti
pop
ja
or
fidivrs
pop
test
sub
aad
inc
mov
adc
mov
scas
jo
xchg
or
pop
lret
lret
cmc
mov
xorb
fldl
mov
jns
pop
fisubs
lcall
adc
push
xchg
popf
sub
loope
adcb
out
pop
stos
xchg
jae
sbb
fnstenv
ficoml
push
sbb
cmc
lret
inc
dec
push
sahf
add
mov
xor
jnp
clc
cwtl
lret
fldcw
test
mov
movsb
mov
xchg
sub
mov
mov
repnz
mov
cmpsl
addb
loopne
out
mov
or
cmp
add
fabs
mov
out
xchg
jg
popf
mov
push
adc
mov
mov
jmp
ficomps
stc
adc
push
cmp
or
imul
cs
into
adcb
pushf
xor
sahf
xlat
cli
mov
jo
mov
cmpl
pop
out
aam
ljmp
mov
stc
jo
jb
jmp
in
stc
scas
mov
hlt
cmp
pop
push
dec
imul
ljmp
std
fs
stos
ljmp
es
jecxz
cmpsb
mov
hlt
sbb
pop
add
pop
cmp
insl
int3
pusha
mov
f2xm1
sub
and
adc
pop
mov
in
xchg
je
or
sahf
jecxz
dec
adc
add
push
add
lods
movsb
adc
dec
fidivrl
nop
add
js
xchg
adc
jne
arpl
sarb
inc
pop
push
pop
inc
mov
sub
out
mov
cmc
jns
pop
movsb
jnp
sub
cmpl
dec
ja
inc
xchg
inc
clc
sub
and
dec
out
lret
pop
jge
sub
subb
stos
rorb
jb
insb
cmp
rolb
loope
stos
mov
ss
xchg
cmp
jns
pop
push
iret
lret
mov
jo
pop
js
pop
push
dec
imul
xor
dec
add
fstpt
dec
sahf
popa
lock
mov
cmp
sub
testl
ret
hlt
xlat
xchg
fsts
movsb
or
fistl
pop
or
fistpll
scas
popa
mov
inc
pop
or
xchg
sbb
imul
xor
xor
outsb
jg
icebp
repz
or
test
mov
out
idiv
lahf
mov
lods
push
icebp
pop
and
pop
shrl
push
rorb
sti
iret
xchg
fst
inc
xchg
push
adc
loope
ret
mov
out
jb
push
and
rorb
loope
mov
mov
cli
lods
pushf
xor
pop
jae
scas
fildl
adc
xor
flds
imul
pop
jp
mov
hlt
movsb
pop
test
imul
dec
dec
pop
fldt
push
adc
xchg
xchg
mov
lcall
cmp
and
jb
add
mov
mov
ja
or
mov
xchg
repnz
scas
out
out
jb
std
in
xor
push
fisttpl
and
orb
mov
mov
mov
xchg
fwait
ss
outsb
mov
cmpsb
xchg
repnz
dec
or
ss
jge
and
pusha
sub
add
daa
pop
test
sbb
mov
mov
adc
fcmovnb
test
jno
push
in
outsb
sbb
dec
push
aas
out
imul
andl
rcll
mov
fmul
das
sub
into
rcrl
sub
adc
sahf
mov
icebp
xchg
mov
iret
jo
push
push
pop
outsb
sbb
xchg
lds
pop
das
addr16
std
mov
xchg
cmp
mov
stos
ret
pop
das
cld
sbb
hlt
dec
mov
mov
lret
mov
push
add
pop
sbbl
iret
scas
dec
fdivs
hlt
scas
xchg
jae
push
or
adc
loopne
push
mov
popf
loop
rorl
lods
cmp
mov
inc
lcall
lods
cli
js
pop
cmp
mov
imull
pushf
loop
into
outsl
in
pop
scas
lcall
movsb
cmp
mov
and
and
mov
imul
jmp
inc
and
pop
xchg
fwait
mov
or
pop
pavgb
jmp
sbb
or
xor
jnp
clc
clc
push
out
insl
mov
xor
adc
add
xor
mov
shr
lock
xor
cmp
aas
arpl
test
incb
mov
mov
inc
push
jno
lods
mov
xchg
lods
and
data16
xchg
mov
ja
xchg
adc
xor
pop
rcrl
jnp
xchg
enter
xor
jmp
dec
aas
and
inc
mov
or
jmp
popl
cmp
fmul
mov
inc
ret
lds
xor
cmp
enter
xchg
mov
push
loopne
addb
dec
adc
into
test
mov
xor
xor
mov
pop
movb
mov
pop
sbb
cmpsb
into
dec
xor
dec
aad
jnp
sbb
inc
push
xchg
push
push
mov
push
mov
lods
mov
mov
or
sbb
push
jg
dec
int
inc
inc
fsubl
jne
inc
pop
lea
insl
jno
inc
inc
pop
shrl
or
add
or
rcl
xlat
sbb
mov
mov
xor
into
mov
sbb
push
mov
jae
fimuls
addb
cwtl
xchg
sbb
es
ljmp
inc
xchg
cmp
and
xor
mov
pop
dec
sbb
jg
jle
insb
shll
cmpsl
cltd
test
or
lahf
cmp
stos
cs
mov
mov
xchg
lret
pop
mov
inc
ja
or
hlt
cmpsb
dec
ret
ja
add
or
and
xor
out
jge
test
addb
repnz
inc
dec
add
int3
mov
lret
sahf
mov
pop
ret
mov
jo
addr16
fcompl
aas
pop
xor
xchg
mov
sub
lea
sarl
xor
dec
loop
pop
xor
sahf
leave
mov
icebp
aad
and
fisttpl
sub
daa
jmp
lahf
orl
outsl
xchg
sbb
push
or
xor
and
mov
or
call
andb
push
aad
jbe
outsb
cld
add
mov
mov
negb
xchg
test
fstl
shrl
sbb
xchg
adc
jmp
fidivrl
lret
scas
push
dec
push
push
and
add
insl
dec
sarl
pushf
adc
mov
arpl
stos
jae
scas
push
xchg
lahf
das
or
fnclex
pushl
jb
addl
les
mov
sub
or
arpl
ret
outsl
jge
xchg
dec
stos
xor
arpl
mov
jns
ja
aas
sub
sbb
dec
mov
push
andb
push
aaa
mov
xchg
jl
cmpsl
adc
add
jns
cmp
jecxz
jecxz
rolb
mov
cmp
scas
dec
dec
nop
inc
ljmp
push
adcb
adc
lcall
loop
adc
mov
cli
mov
cwtl
and
sbb
lock
inc
mov
push
lock
insb
cmp
mov
mov
cmpb
sub
or
cmp
adc
and
leave
xchg
sub
sahf
inc
shlb
out
dec
js
sbb
pop
jl
sub
add
sub
hlt
xchg
mov
mov
sub
mov
dec
push
mov
xchg
test
adc
pop
and
jecxz
int3
sahf
test
xor
jne
mov
ja
outsb
adc
xchg
imull
add
pop
pop
push
rolb
cmp
cltd
inc
insl
js
cmp
cmp
pop
mov
inc
jmp
into
std
mov
xchg
shl
daa
xor
push
adc
inc
pushf
int
adc
inc
mov
js
in
jmp
inc
push
sub
push
or
loope
and
xchg
out
fisubs
fs
mov
call
loope
in
mov
push
in
cmpsl
test
ds
aaa
push
cmc
loop,pn
fnsave
leave
mov
dec
jg
push
je
hlt
push
xor
rorb
jno
xchg
cmpsb
xchg
fcmovnb
fisttpl
jae
int
and
pop
lds
dec
jne
mov
fisubrs
int
pusha
sbb
jp
jo
ljmp
ja
imul
enter
std
pop
push
push
push
bound
sub
ret
mov
push
in
sub
nop
js
pop
pop
add
mov
out
jno
in
mov
sti
jnp
push
fldl
ljmp
shl
inc
ja
cmp
push
push
push
dec
mov
inc
xchg
imul
cmpsl
outsb
repz
xchg
cmpsb
xchg
dec
out
rcr
push
mov
mov
in
push
or
add
jmp
ss
loop
stos
jg
adc
loopne
rorl
cld
int
adc
mov
cmp
rcl
idivb
imul
daa
xlat
fnstenv
xor
sbb
xchg
push
das
in
ret
ljmp
dec
decl
out
add
sbb
mov
negb
cli
jnp
stos
arpl
cld
sti
dec
gs
jo
xor
inc
push
xor
imul
jbe
lods
cmp
sub
sub
or
js
mov
fdivl
inc
push
add
xchg
imul
jmp
jmp
inc
inc
cwtl
push
adc
push
dec
jb
outsb
cmp
orw
sbb
je
and
cli
mov
mov
fucomp
dec
testl
iret
in
lret
or
pop
jecxz
daa
sub
dec
test
xor
xchg
icebp
fisubl
pop
out
jae
xchg
pop
pushf
gs
lds
or
mov
aam
mov
push
std
or
inc
adc
cmpsl
call
in
outsl
mov
push
or
mov
js
fnsave
xchg
hlt
orb
jns
gs
iret
cmp
arpl
inc
out
jbe
sbb
cmp
fwait
inc
pop
rcrb
pop
dec
les
pushf
call
std
adc
push
std
outsl
jnp
inc
and
and
icebp
xchg
mov
and
aam
sbb
inc
je
fistl
lcall
push
or
dec
push
push
push
pop
mov
xor
and
pop
pop
xchg
iret
mov
mov
xor
enter
out
cli
popa
andl
aam
and
test
cmp
pop
jae
pminsw
push
leave
mov
pusha
jno
mov
jp
fldcw
pop
loopne
pop
imul
push
cli
jbe
mov
fs
lret
lret
cmp
adcb
imul
jl
inc
dec
inc
push
ret
sub
sub
int3
add
xchg
in
jmp
aas
out
pop
mov
or
ds
loopne
xchg
test
lahf
test
fcompl
mov
jmp
adc
and
movsb
es
add
jmp
shlb
imull
cwtl
lods
scas
lods
stc
sti
add
fld1
mov
pushf
cmp
and
mov
mov
fsubs
xor
cmpl
lods
lds
insl
fistl
add
xlat
fcomip
mov
pop
loope
mov
insb
rcrb
push
rolb
lahf
adc
enter
adc
inc
outsl
cmp
das
pushf
in
pop
call
push
insl
xchg
cmp
ficomps
hlt
sahf
push
mov
cltd
fidivrs
cmp
ss
ss
xor
out
adc
jecxz
jnp
jne
mov
popa
jge
mov
sub
outsl
inc
or
sbb
pop
xchg
add
fwait
or
xchg
mov
push
jle
lock
sbb
xor
test
jno
pop
jns
xchg
sub
scas
mov
insl
or
loop
aad
mov
ret
cmp
mov
ret
sbb
test
mov
sahf
cmc
icebp
cmc
mov
je
jg
enter
popa
adc
add
adc
cld
xchg
push
cs
add
xor
or
aam
fs
ljmp
jno
call
das
inc
movsl
fwait
das
and
push
popa
add
pop
jnp
test
push
negl
mov
jnp
pushf
shrb
push
inc
mov
mov
roll
fisubl
ds
xorl
in
ret
icebp
es
test
cmp
in
pop
cmpsl
cld
outsb
mov
mov
xor
cli
mov
pop
popf
mov
into
data16
add
jle
cmp
xchg
shrb
in
std
push
jno
add
jmp
mov
adcb
mov
aas
out
lret
pop
mov
or
inc
sub
rolb
pop
pop
cwtl
and
xchg
xchg
xchg
cli
in
hlt
stc
pushf
sub
bound
loopne
pop
bound
mov
int
js
pop
lcall
or
mov
ljmp
jo
mov
inc
mov
xor
aad
ret
pop
lret
pop
test
ss
fistpl
push
jnp
shl
push
xchg
or
mov
add
xor
jne
xchg
pop
das
lcall
mov
rorb
sbb
push
jmp
pop
fistpll
loope
cltd
idivb
xor
pop
adc
stos
inc
or
mov
js
mov
repnz
roll
nop
cmp
jmp
fdivrs
addr16
xchg
je
mov
jb
in
dec
ja
jo
adc
xchg
sub
lods
add
cltd
add
jbe
cs
fdivl
adc
repnz
out
es
or
test
add
mov
jp
push
enter
inc
adc
dec
insb
fdiv
in
jb
loop
push
lea
mov
inc
sbb
aaa
ret
mov
pop
mov
and
mov
lret
add
pop
roll
test
push
mov
aad
inc
pop
sub
mov
or
mov
jg
in
std
or
outsb
cmp
cmp
test
punpckhdq
cmpsl
stos
les
inc
adc
xchg
out
push
js
stc
nopl
xchg
sub
test
ljmp
cld
and
push
push
data16
adc
and
mull
and
sahf
into
sbb
loop
mov
mov
loope
je
xchg
jge
test
fisubrl
lods
xchg
mov
dec
sub
sti
addr16
and
mov
pop
pushf
outsb
jb
pop
jg
mov
hlt
lahf
sub
sub
jmp
mov
test
lea
cmpsl
xchg
movsl
jae
mov
and
leave
mov
inc
adc
dec
mov
dec
push
push
xor
testb
fldenv
dec
mov
int
fs
jae
pop
jns
ss
mov
jmp
push
xor
jp
insl
cld
mov
xchg
arpl
stos
dec
inc
bnd
sbb
dec
fidivrs
test
fiaddl
in
xor
sub
je
cli
bound
js
inc
xor
cmp
lret
movsl
pop
std
popf
adc
cmp
mulps
in
test
mov
sbb
or
and
inc
mov
push
push
mov
addr16
and
mov
shrl
out
cs
mov
out
inc
push
jge
call
idivl
fisttpll
enter
cmp
into
pop
mov
adc
mov
mov
xchg
adc
lock
arpl
loopne
cli
cwtl
out
insb
push
xchg
adc
ret
pusha
sub
xlat
push
scas
adcl
xor
adc
xor
addr16
cmpsb
iret
and
inc
add
cmp
lea
mov
outsl
push
cld
xchg
out
fldt
movsb
test
add
cli
divb
mov
cmp
mov
fidivrl
cwtd
or
or
jmp
push
push
mov
push
icebp
push
inc
and
aas
enter
pop
cltd
imul
push
mov
xchg
sahf
fldcw
adc
stos
inc
ds
push
jmp
cmp
jecxz
test
jae
and
je
mov
in
cltd
push
iret
mov
or
loopne
dec
xchg
cmc
int3
push
pop
inc
xor
jae
in
sub
out
dec
inc
push
movhlps
inc
inc
adc
pinsrw
dec
into
sub
xchg
push
addr16
jb
jmp
cs
divb
inc
xor
jg
inc
popf
dec
test
aas
mov
xchg
leave
cld
test
dec
repnz
sub
in
pop
icebp
inc
dec
dec
into
sub
lret
jns
push
and
add
arpl
xor
mov
pop
mov
xor
andl
dec
pushl
or
popf
in
jg
dec
aas
pop
fwait
mov
mov
hlt
loop
mov
add
scas
sub
in
mov
mov
push
das
aaa
add
mov
or
repz
inc
cwtl
popa
int3
mov
test
test
mov
data16
out
pop
add
dec
es
sub
xor
xchg
ljmp
jecxz
flds
fninit
sahf
je
in
or
push
insl
cmp
push
mov
sbb
dec
inc
imul
sahf
leave
cmpsl
arpl
stos
movsl
hlt
nop
mov
jne
adc
shlb
xor
push
pop
mov
js
mov
aad
xchg
les
incb
decb
mov
icebp
push
clc
into
lahf
cmp
cmpsl
enter
push
push
jl
nop
mov
lods
inc
hlt
add
ljmp
dec
jp
mov
movsl
mov
sub
into
arpl
inc
xchg
addr16
mov
ss
je
scas
pop
out
pop
or
imull
ss
outsb
into
fmull
jp
test
es
mov
mov
mov
add
xor
adc
push
or
cmc
mov
lods
xchg
out
lcall
push
cltd
loop
cmp
test
inc
mov
ljmp
cltd
mov
cli
xcrypt-ctr
cmpsl
fwait
push
add
sbb
jns
pop
jecxz
dec
pop
dec
fld
fidivl
xor
mov
ljmp
mov
pop
dec
roll
push
lahf
fistpll
push
xchg
in
xor
cmpsl
sahf
add
push
add
push
fidivrl
add
subl
cmp
jmp
pop
into
orl
push
mov
ja
inc
sub
lahf
push
and
xor
cmpsb
outsl
test
and
cmp
adc
mov
aad
loop
mov
dec
cmp
stos
push
xchg
xchg
movsl
sbb
sbb
loop
mov
int
mov
testb
les
mov
ret
fnsave
pusha
mov
and
jg
loope
jne
data16
or
ret
sub
xor
in
call
push
jb
and
sub
out
scas
push
pop
push
outsb
data16
mov
push
sti
iret
push
and
add
mov
sti
adc
ficompl
iret
out
repz
jg
mov
sti
sub
ficoms
out
int
clc
call
jmp
xor
cmp
mov
xchg
dec
jl
xor
popa
mov
jmp
mov
dec
mov
add
mov
mov
or
xor
mov
iret
xchg
fidivs
jecxz
ljmp
pop
in
rol
mov
outsb
pop
pop
out
adc
push
cli
mov
mov
in
mov
cmc
popa
push
jmp
xchg
std
pop
mov
mov
jle
mov
test
xchg
inc
cld
jecxz
clc
and
cmc
sbb
orb
fisubrs
int
icebp
outsl
and
pop
cltd
adc
inc
dec
test
cmp
test
inc
adc
xchg
cmpsb
xor
or
rol
mull
xchg
or
lds
pop
push
subl
mov
cmp
mov
outsb
movl
dec
gs
icebp
aaa
ficoml
mov
inc
dec
adc
lea
xchg
lcall
ds
insl
xchg
or
out
dec
xor
aas
mov
pop
mov
call
mov
ret
call
push
jo
mov
adc
jge
sbb
jne
inc
xchg
xchg
ret
push
out
xchg
imul
sbb
push
add
inc
in
mov
push
and
push
sbb
shrl
mov
adc
out
clc
lcall
jmp
push
pop
mov
ja
jo
mov
ficoml
imul
jmp
ret
shlb
leave
js
cmpsl
add
mov
pop
mov
mov
or
ret
stc
xchg
inc
mov
jnp
nop
scas
mov
inc
mov
imul
xchg
or
cli
mov
xchg
fxtract
in
add
insl
dec
jle
pushl
jle
or
es
jecxz
inc
pop
loopne
pop
push
into
add
push
jo
fstl
xchg
testb
and
mov
adc
loop
xor
clc
imul
out
gs
gs
aas
daa
xor
test
xor
ja
dec
adc
pop
push
int3
mov
mov
shl
sahf
xlat
fwait
mov
cmp
cld
pop
push
orb
xchg
rcrb
movsl
sub
adc
fcomps
dec
xchg
in
xchg
jb
daa
sub
out
fiaddl
scas
in
mov
push
gs
dec
mov
js
adc
loopne
jns
or
loope
lods
or
scas
shlb
push
lret
mov
sti
cwtl
adc
add
nop
bound
jne
xchg
or
pop
dec
adc
push
aaa
fcomi
repz
or
mov
fildll
rcl
push
xchg
cmp
sub
or
pop
test
xor
call
movsb
shrl
ret
hlt
sbb
pop
loopne
in
mov
call
sbbb
mov
xchg
mov
sub
sbb
int
bound
leave
push
sbb
or
jge
int3
mov
push
cli
adc
jne
in
mov
lret
out
imul
xchg
rolb
dec
mov
push
test
mov
std
sbb
push
sbb
movsl
dec
ss
dec
jge
or
les
sbb
shlb
cwtl
int3
loope
mov
inc
xor
test
arpl
sub
mov
pusha
fs
std
mulb
pushf
orl
ret
and
inc
sub
inc
xor
mov
addr16
mov
dec
test
stos
imul
out
mov
add
ret
jnp
stos
add
jecxz
int
pop
pop
inc
mov
sub
dec
negb
lods
rorb
in
push
out
or
inc
repnz
jecxz
cmp
pushf
jp
fchs
push
push
and
adc
insl
arpl
and
cmp
xor
hlt
call
in
aas
mov
mov
jecxz
sub
sub
sub
push
in
jecxz
arpl
ds
scas
adc
xchg
shlb
das
dec
sub
aas
movd
mov
mov
inc
mov
aas
pop
mov
hlt
xor
lret
je
outsb
and
in
sbb
pop
xor
inc
or
mov
jl
pop
movsb
les
jbe
rcll
push
adc
iret
push
out
data16
or
pop
inc
inc
lods
inc
out
cs
cmpsl
lods
dec
cltd
sbb
lahf
inc
repz
jge
dec
inc
mov
shl
les
mov
data16
mov
mov
mov
push
mov
adc
out
jp
mov
in
scas
push
adc
xor
enter
rcrb
call
or
sti
fstpt
mov
loope
jge
jno
push
xchg
outsl
sub
jg
int
push
push
fld
push
out
push
xchg
cltd
or
sbb
ret
and
pop
imul
mov
dec
sub
lock
adc
lret
jl
cmpsb
jbe
test
push
mov
stos
push
cmp
xchg
ror
pop
dec
jecxz
push
mov
movsl
icebp
out
dec
aad
dec
sub
cmp
dec
mov
loop
xchg
xlat
lret
hlt
adc
stc
dec
aas
loope
outsb
rcl
pop
aaa
das
and
or
shll
les
pop
movsb
in
in
cwtl
cmc
js
mov
inc
push
movswl
cmp
lock
and
test
xchg
xchg
lret
mov
ret
mov
lret
inc
shl
lods
ljmp
filds
aam
stos
aam
push
jne
imul
imul
cmp
in
orl
cmp
fmuls
loop
add
and
xor
loopne
aas
jae
mov
mov
leave
sbb
mov
or
pushf
dec
pusha
daa
in
les
mov
xchg
cmc
xchg
mov
mov
xorb
inc
test
add
jmp
lcall
fbld
test
enter
lret
loope
movsb
pop
sti
or
jb
fsubrl
jnp
adc
pop
jecxz
rclb
jo
or
gs
fs
xor
test
jge
push
cmp
int3
orl
push
imul
and
jae
xchg
sahf
xor
dec
pop
dec
cmp
dec
popa
push
cmp
lds
stos
jbe
mov
dec
push
lods
cmp
rorb
jle
mov
mov
stos
jecxz
mov
pop
mov
add
xchg
jl
fstpl
xor
into
jbe
dec
fucomi
cmp
sub
jle
mov
xor
lods
arpl
xchg
or
popa
movsb
fnstcw
sbb
push
pop
lret
cmp
add
dec
mov
push
pop
push
pop
jge
mov
sbb
stos
and
lea
or
repz
enter
mov
pop
push
lods
jmp
cwtl
lret
fs
mov
and
cwtl
sub
xor
push
add
dec
xor
sub
mov
mov
mov
adc
mov
fistps
and
sub
insb
in
movsb
mov
jecxz
sub
lahf
repz
mov
loop
xchg
push
add
or
cmpl
filds
std
add
stos
mov
ljmp
mov
out
sub
fistpll
pop
adcb
int
aas
or
jge
ficoms
push
inc
dec
adc
lret
xchg
repnz
lods
andb
mov
in
mov
cmp
jp
mov
push
cltd
in
aas
sub
imul
mov
cmpsl
xorb
jnp
lcall
push
imul
and
out
cld
push
fiadds
dec
cmpsw
ds
inc
sub
nop
mov
sub
mov
jl
popa
mov
dec
dec
or
inc
out
xchg
sbb
enter
dec
jns
xlat
push
mov
sub
sahf
mov
movsb
fnstenv
push
ret
and
mov
push
jmp
push
add
dec
jae
cmpl
cld
int
pop
adc
pop
cmp
leave
push
lcall
lahf
sbbb
inc
iret
push
sti
loopne
mov
add
inc
push
dec
cmp
addr16
jo
fcoms
fisttpl
push
adc
mov
sbb
mov
mov
movsl
jmp
ljmp
mov
push
insl
mov
filds
arpl
mov
daa
fs
dec
mov
and
stos
shlb
xchg
lret
xor
mov
adc
cmp
pop
jp
mov
jmp
js
out
rcll
mov
dec
popf
push
sub
sub
stos
mov
push
cli
hlt
and
dec
sarl
cmp
icebp
loope
cmpb
in
clc
jg,pt
adc
cmpb
repz
mov
sbb
inc
rorb
fldt
cmp
sub
pusha
mov
mov
pop
fbstp
jge
add
clc
std
ss
sub
add
xchg
repnz
jle
and
jmp
pusha
mov
imul
adc
cmpsl
jp
scas
out
mov
pop
cmp
xchg
and
cltd
jmp
jnp
in
dec
push
bound
jmp
inc
xchg
sub
xor
sub
xor
aam
in
int
ret
sahf
scas
or
add
push
jg
lahf
fisttps
pushf
shll
jo
in
loopne
lods
ljmp
xchg
idivb
dec
lea
xchg
sarb
insl
cli
add
jno
arpl
pop
ds
mov
dec
pop
dec
mov
jae
scas
adc
and
dec
shlb
cltd
xchg
or
lds
ljmp
repz
jle
pop
xor
xor
cli
sub
cmp
add
cltd
ds
xchg
cmp
push
sbb
loope
pushl
xor
xor
mov
mov
es
stos
sahf
imul
and
jnp
int
inc
aaa
push
in
call
test
mov
push
pop
xor
jns
xchg
loop
dec
inc
xor
daa
and
sub
mov
xor
push
jge
sub
add
imul
sbb
sub
test
pop
push
mov
add
gs
dec
xor
inc
pop
negl
push
aad
loop
test
mov
les
in
inc
dec
mov
mov
sbb
movsl
faddp
out
jns
pusha
push
notl
or
std
pop
cmp
cmpb
pop
gs
jmp
ret
sarl
add
push
sbb
fwait
repnz
sub
sti
ds
popf
adc
ds
pop
adcl
jp
aad
cmpsl
add
sub
jecxz
mov
ficomps
mov
insl
mov
js
out
jno
shrl
scas
mov
jle
into
out
inc
push
jecxz
movl
xor
daa
dec
adc
push
cmpsl
mov
nop
xchg
and
and
inc
arpl
shll
cmp
xchg
cmp
push
mov
mov
aam
out
push
daa
mov
int
adcl
int
ja
lods
mov
adc
cmp
lret
pusha
sbb
in
and
cmpsl
ffree
test
call
sahf
and
idivb
sub
push
jne
xor
mov
jns
inc
inc
pusha
outsl
cmpsb
dec
push
cmp
and
push
add
ret
xchg
rcr
jae
add
incb
ljmp
clc
mov
test
mov
mov
sti
and
jne
xchg
xchg
pop
cmp
mov
jecxz
leave
sbb
dec
jmp
out
fisttpll
mov
push
test
pop
or
sbb
sarb
leave
cmp
jl
stc
rorb
mov
stos
ret
or
adc
aad
rorb
cmpsw
push
incl
jg
mov
jle
mov
pop
je
jno
loop
das
iret
add
loope
jns
pop
push
pop
pop
mov
cmp
insb
inc
into
add
shlb
push
sarl
adc
in
mov
push
pop
out
lods
fimull
out
out
fnsave
add
jg
fld
cmp
xchg
jg
pop
inc
and
not
sub
xchg
jae
inc
hlt
mov
adc
adc
xor
rolb
mov
mov
sarl
ja
fnstsw
sbb
jns
mov
cld
lods
and
ret
imul
jmp
push
push
gs
xchg
inc
movl
shr
adc
cmp
cmp
and
test
aaa
inc
out
subl
in
add
outsb
mov
cwtl
ret
aas
mov
sub
jecxz
or
call
push
pop
adc
imul
addb
mov
push
sub
out
and
popf
pop
int
test
jns
leave
dec
lods
sbb
jl
push
inc
mov
sbb
iret
imul
mull
mov
and
insl
jl
sarb
mov
pop
add
push
int3
pop
sub
ljmp
cwtl
pop
out
hlt
adc
fisubl
pop
jb
adc
aam
mov
imul
sar
ficoml
pushf
push
pop
cli
sti
jno
adc
adc
ss
cld
cwtl
mov
adc
adc
test
fdivrl
pop
jge
arpl
mov
dec
add
movsb
push
jl
xor
lock
push
pop
mov
int
int
cltd
inc
out
test
pop
jnp
adc
pusha
mov
pop
sbb
mov
test
iret
inc
insb
stos
fsubs
insl
xor
or
push
cld
push
fwait
xchg
aaa
inc
mov
das
mov
mov
xor
loop
movl
push
ljmp
cmpsl
adcl
pushf
push
xor
push
sbb
stos
mov
pusha
out
insl
sub
adc
stos
cld
adc
stc
mov
aad
sub
fs
push
shlb
test
add
mov
movsl
sub
add
adc
xchg
jecxz
andb
add
jno
out
lock
or
push
lock
add
sti
mov
pop
js
fs
ds
cmp
jns
mov
aam
xor
jae
push
rcll
push
mov
divl
lods
in
push
push
arpl
cli
inc
xor
outsb
stos
dec
mov
adc
mov
jo
mul
inc
mov
xrelease
aad
daa
roll
xchg
mov
into
jecxz
add
xchg
lahf
xchg
lods
mov
add
inc
notl
jmp
lret
pop
mov
inc
jno,pt
mov
insb
out
scas
insb
push
mov
cmpsl
iret
fs
adc
aam
sub
test
adc
or
fsts
dec
push
fbstp
in
dec
and
out
pop
lock
dec
into
loope
imul
fisttps
call
test
outsl
orb
fs
mov
add
scas
jp
mov
cwtl
bound
sti
and
imul
adc
repnz
xor
xor
out
push
mov
pop
fwait
scas
mov
push
xor
adc
mov
stos
popa
jmp
stc
cli
cmc
jmp
fmul
sbb
adcl
mov
pushf
in
mov
fwait
test
mov
cmpsb
sub
fdivl
cltd
sbb
test
inc
lahf
jmp
jb
inc
mov
rorb
inc
push
call
inc
out
jae
das
mov
or
sbb
lods
movsb
pop
mov
lea
mov
imul
cmp
orl
mov
in
add
sub
data16
adc
es
popa
push
dec
push
stc
pusha
dec
mov
sar
aam
lock
mov
mov
lret
dec
mov
aam
ret
test
xchg
shll
inc
ss
inc
mov
out
push
sub
shl
pop
inc
inc
lahf
push
cmp
pushf
jmp
vpsubb
cmp
dec
or
popa
fcomps
mov
fcoms
jnp
nop
aad
popf
scas
mov
cmp
xchg
loope
popa
nop
int3
cmp
je
inc
stc
imul
lock
lcall
dec
icebp
mov
shlb
xor
sbb
inc
cmp
cwtl
dec
test
addl
xchg
mov
add
mov
daa
in
out
mov
es
xor
xor
aas
lods
dec
or
outsb
cmp
mov
adc
rolb
sub
aad
fs
mov
stc
fidivrs
jbe
adc
lahf
pusha
fcom
lods
sahf
shrl
jl
jl
mov
les
cs
dec
scas
xor
ret
sbb
out
ja
das
cmpsl
xchg
sbb
inc
jo,pt
mov
xchg
xchg
xor
push
jno
xor
inc
aad
jns
inc
lea
sbb
fs
pusha
cmpsb
repz
cs
mov
mov
pop
adcl
popf
dec
shll
sahf
pop
mov
aad
repnz
loopne
or
std
mov
scas
or
add
dec
pushl
mov
out
aas
jbe
sbb
ds
mov
add
in
sub
sub
mov
and
out
mov
sbb
mov
push
mov
mov
roll
out
jmp
jnp
jno
fistps
inc
push
rcl
les
jns
out
loope
pop
cwtl
clc
or
cmp
mov
sbb
jbe
adc
xchg
icebp
dec
sarl
pop
mov
movsb
jp
xor
pop
push
sahf
push
shrb
lock
pop
push
push
imul
dec
xchg
push
jecxz
cld
push
inc
movsl
jbe
sbb
push
movsl
test
aas
leave
loopne
and
lret
jbe
leave
jns
cld
dec
add
jecxz
nop
in
lods
sahf
mov
xchg
movsl
sub
dec
xchg
loope
sbb
jge
lds
in
lock
jp
xchg
jmp
xor
aaa
adc
mov
sub
and
xchg
jmp
xchg
or
lds
add
imul
les
ss
sbb
imul
pop
mov
push
cmp
push
xchg
fcoms
shr
dec
xchg
test
in
pop
or
mov
pop
push
stos
pop
push
insb
aad
test
cmp
push
mov
xchg
lret
or
cmp
cmpsl
rol
sbb
movsl
pop
ljmp
push
cltd
adc
jno
es
fidivrs
insb
movsb
out
mov
sbb
lds
ss
mov
movsb
movsb
pmullw
in
sub
xchg
mov
push
cmpsb
push
scas
mov
sbb
and
pushf
push
fs
fdivrl
jg
insb
shrb
nop
mov
jle
imul
mov
outsl
add
mov
push
pop
cmpl
mov
or
pop
scas
and
fmull
pop
insl
pop
push
mov
xchg
enter
sbb
cmp
leave
or
xor
fmul
arpl
cmp
lcall
gs
fwait
pop
pushf
ss
push
jmp
and
movl
inc
add
jae
movsl
inc
mov
mov
dec
dec
test
ljmp
inc
jle
pop
fiadds
fneni(8087
repz
mov
outsb
xchg
hlt
ja
or
jecxz
outsb
dec
mov
lret
add
inc
mov
jbe
sub
ss
arpl
mov
xchg
scas
push
sub
and
out
lcall
dec
arpl
fwait
pop
jbe
jl
pop
lret
movsl
cmp
push
std
shlb
cmp
or
mov
mov
or
pop
pop
hlt
addr16
ja
sbb
test
sahf
loopne
add
push
pop
inc
mov
xchg
jmp
pop
jmp
push
scas
ja
sub
nop
inc
jb
add
ljmp
fnstsw
shlb
int3
enter
push
mov
cmp
mov
cmp
mov
or
repnz
stos
xchg
fucomip
sub
mov
das
enter
cmp
or
xchg
mov
popf
jge
mov
mov
adc
mov
cmp
lods
ljmp
mov
scas
xchg
inc
pop
jae
mov
testb
popf
mov
or
outsb
je
shrb
push
sbbb
mov
jns
jge
mov
inc
add
inc
dec
jae
sub
push
sbb
outsb
xchg
sbb
push
lcall
jno
ror
sbb
arpl
or
sti
add
aaa
and
xchg
or
inc
inc
mov
xchg
pop
aas
mov
inc
cmpsl
roll
sbb
mov
lret
test
cltd
jne
imul
sbb
push
subb
gs
es
sub
les
mov
loope
add
jp
inc
movsb
sbb
dec
push
and
mov
cmpb
xchg
mov
lret
in
cmp
enter
fsubs
fdivp
shlb
lock
sarl
xchg
adc
pop
push
stos
stos
ss
mov
xchg
shll
mov
test
out
jl
std
cmp
frstor
dec
jge
movsl
xchg
jg
xlat
test
or
dec
adc
push
dec
jle
jg
cmp
pop
and
cld
es
shlb
jmp
and
lahf
sbb
xor
movsb
movlhps
popf
lret
dec
or
stos
test
insl
cmp
loop
cmp
add
repz
pop
inc
and
xor
jne
inc
mov
and
jne
mov
iret
les
mov
or
daa
fidivrs
sahf
int3
cmp
arpl
jnp
xor
hlt
pop
and
ja
xor
mov
pop
rorl
mov
mov
lret
pop
jb
loope
rcr
lds
nop
and
cmp
cli
cmp
mov
ss
cmp
stos
insb
dec
pop
xchg
outsb
adc
dec
mov
addl
mov
xor
lret
aas
mov
leave
roll
mov
popa
xchg
jmp
dec
fistl
xor
out
or
xchg
and
daa
cmp
scas
jecxz
imul
xor
test
jae
fcoms
mov
jge
jnp
ficoml
xchg
jnp
add
mul
shl
js
push
mov
dec
enter
les
jle
add
sub
push
xor
jg
jl
mov
popf
lret
pop
movsb
mov
cmc
shlb
adc
outsb
pop
jbe
pop
scas
add
push
jl
adc
mov
pop
push
sub
lods
adc
sbb
jbe
ja
fimull
cs
repz
int3
cltd
cmc
lret
in
add
inc
pop
xchg
dec
jae
pop
add
fs
scas
sbb
outsl
cmc
mov
testb
xchg
inc
rcr
lea
and
idivl
xchg
or
das
push
xchg
int3
cmpsb
cli
cmpsl
shl
and
pushf
mov
inc
arpl
lods
pop
jns
push
dec
in
pop
xchg
stc
pushf
test
mov
out
sarb
rclb
sahf
mov
mov
or
mov
mov
adc
mov
xchg
rorl
add
mov
and
imul
mov
bound
add
ret
mov
dec
xor
hlt
and
inc
xchg
pop
push
mov
inc
jg
cmp
fistpl
lea
mov
sub
jo
leave
scas
sub
push
adc
clc
push
xor
push
xor
sub
icebp
scas
jmp
je
mov
cmpl
negl
gs
andl
lods
xchg
xor
sar
xchg
xchg
fst
insl
push
addl
jmp
decl
sbb
mov
lcall
pop
xchg
insb
push
xchg
xor
or
mov
inc
or
inc
das
das
cmp
pop
or
mov
cmp
sub
fdivl
mov
mov
mov
push
xor
xchg
xchg
mov
xor
pop
dec
add
and
stos
add
inc
movsl
xor
pop
call
push
xor
lods
sub
mov
pushw
add
out
xchg
nop
xchg
jb
push
mov
sub
subb
insb
int
pushl
andb
sbb
push
jle
flds
or
or
pop
in
or
imul
sub
shlb
sbb
fdiv
fbstp
dec
dec
aad
cmp
mov
sbb
adc
or
xorl
or
sarb
call
lret
sbb
ja
test
sbb
pop
dec
fisttpl
nop
js
lock
mov
js
push
push
in
lods
adc
call
sbb
cmpsb
orl
mov
sbb
gs
pop
pop
ror
inc
out
fs
js
inc
aaa
into
shlb
or
mov
out
mov
repz
and
pop
and
xor
mov
sti
in
sahf
in
jae
xchg
sbb
xchg
stos
jl
mov
jecxz
test
mov
jbe
jmp
mov
jne
sahf
jnp
int
movsl
or
xchg
xchg
mov
mov
and
dec
cmc
cltd
pop
cltd
lods
mov
add
cmp
mov
mov
in
mov
ds
bound
lret
andl
push
sub
dec
mov
gs
imul
loopne
mov
mov
ja
jne
cs
into
shll
rclb
xchg
dec
push
pop
imul
pop
inc
mov
aas
int3
pop
fs
lods
adc
mov
les
add
adc
mov
add
fsubs
pop
and
cmp
and
popa
mov
dec
sub
jno
mov
mov
aam
clc
add
aad
cltd
dec
stos
mov
pop
ret
adc
mov
pop
repnz
add
rorl
mov
in
out
inc
or
das
les
xor
cld
inc
add
icebp
stc
mov
es
push
add
fs
jo
shl
push
sahf
add
pop
fcomps
inc
inc
clc
mov
dec
adc
or
add
push
loop
rcrb
test
pusha
lahf
xchg
sbb
cmp
inc
mov
les
mov
sbb
rcrl
push
mov
seto
xor
call
adc
enter
daa
xchg
mov
pop
mov
test
jmp
pushf
mov
push
fwait
mov
hlt
fwait
loopne
inc
adc
outsl
pop
mov
xlat
mov
es
stc
mov
ret
jmp
mov
xor
sbb
mov
cwtl
stos
inc
sub
cmp
cli
push
fsubr
sbb
clc
stos
mov
ret
adc
nop
lahf
hlt
cmp
stos
fidivs
jns
sbb
rolb
repnz
jbe
lret
add
jg
insl
jg
fsubrs
cld
inc
fnstenv
push
stos
lret
adc
outsl
cmpsb
mov
sub
fsubrs
cltd
das
add
inc
add
or
pop
sbb
sbb
mov
add
mov
in
mov
pop
aas
insb
push
sti
les
sub
sti
jb
out
adc
jbe
cs
xchg
push
or
xor
inc
add
out
xchg
xchg
jecxz
mov
jae
mov
dec
mov
daa
in
sbb
iret
aad
xchg
shlb
into
cmpsb
aaa
mov
mov
or
aad
jecxz
orb
sbb
orb
arpl
mov
pusha
cmp
daa
cmc
and
cmp
or
ljmp
xchg
loope
jb
mov
jbe
cmp
mov
dec
dec
pop
dec
push
xchg
arpl
insl
and
rclb
les
scas
sub
repnz
xchg
ficomps
pop
jmp
out
xor
roll
mov
ljmp
repnz
sbb
fstl
mov
bound
outsl
jbe
xor
lahf
inc
or
cwtl
mov
in
mov
int3
scas
insb
je
inc
pop
pop
sub
int
jmp
dec
outsb
dec
scas
xchg
cmpb
loope
and
sub
data16
sub
jmp
mov
dec
sub
rorb
enter
xor
cwtl
sbb
sarb
pop
arpl
dec
cwtl
aad
lds
fisubs
dec
adc
ja
ds
in
cmp
mov
rcll
adc
mov
mov
jo
addr16
repz
push
mov
mov
out
imul
push
sbbl
pusha
lret
les
rcr
int3
test
idiv
jae
or
mov
pushw
mov
push
adc
push
xchg
inc
pop
pop
mov
daa
jmp
dec
or
icebp
in
jmp
jns
push
xor
scas
pop
addr16
adc
stc
inc
dec
icebp
repnz
enter
lahf
ret
adc
add
xor
adc
push
sub
jg
push
add
xor
lock
sahf
cltd
sti
and
adc
pop
rolb
mov
imul
mov
popa
jb
jecxz
mov
sub
popa
fadd
add
dec
and
xorb
mov
sbb
and
arpl
sub
dec
add
adc
xorb
jge
adc
insb
xor
cmp
xor
addb
andb
or
scas
icebp
pop
out
xchg
cmpsl
bound
xchg
or
add
mov
mov
repz
ret
mov
add
test
vpshuflw
lcall
jo
pop
cmpsl
dec
push
mov
clc
cmc
inc
mov
jge
fldl
pushf
insb
xchg
add
sub
dec
int3
dec
mov
lods
mov
icebp
mov
cmovs
mov
js
push
pop
das
add
push
test
aam
mov
nop
push
pushf
rolb
jno
add
push
adc
shlb
test
mov
pusha
inc
dec
cs
loope
mov
sti
inc
enter
imul
lods
leave
jae
in
push
jbe
cmp
push
outsb
pop
cltd
lods
mov
out
movsb
in
shrb
mov
inc
loopne
arpl
sub
stos
out
ret
ja
shlb
das
iret
mov
sub
sbb
pop
test
dec
aad
out
adc
jle
dec
fdivrs
sub
loope
into
pop
jb
mov
addb
testb
adc
outsl
add
dec
mov
push
add
jle
pop
bound
fcomps
popf
or
fwait
jb
pushf
enter
mov
cli
aas
dec
rclb
sahf
add
lcall
and
inc
sbb
mov
mulb
hlt
inc
sarb
xchg
ret
into
jb
cltd
push
stos
jb
mov
cld
leave
mov
loope
xor
inc
lods
imul
pushf
inc
mov
push
adc
outsl
push
or
sub
or
dec
inc
in
xchg
push
js
rorb
sub
int
jbe
and
mov
jb
daa
aad
shll
ljmp
dec
jae
and
mov
adc
pop
call
add
rorl
or
mov
dec
lret
lds
pusha
sbb
dec
mov
call
mov
inc
dec
sbbb
das
cli
fstps
shlb
aad
jb
movsb
sbb
cwtl
outsb
idivb
or
jbe
cmp
lret
jg
mov
mov
ja
mov
pop
ret
scas
movsl
iret
dec
int3
lock
call
add
fcmovnb
pop
fistpll
popa
aaa
mov
mov
dec
adc
xor
pop
popl
sub
movsb
in
inc
test
and
sbb
pop
stos
sbb
test
lds
fcoml
mov
mov
adc
jmp
sbb
push
sahf
jnp
imul
lock
cltd
adc
pop
call
sbb
cmc
dec
je
sbb
push
jl
and
sti
and
sbb
out
mulb
out
dec
lret
cs
pusha
fdivrl
jns
in
and
in
inc
test
mov
scas
movsl
xchg
push
pop
dec
mov
dec
out
ja
sub
and
add
mov
pop
push
call
das
jns
xchg
push
mov
xor
cmp
pop
xchg
mov
and
mov
test
in
xor
inc
jmp
cmp
je
cmp
sub
mov
insl
cmp
sub
sub
mov
pushf
jmp
mov
cmp
jno
movsl
int3
xor
mov
mov
fadds
mov
xchg
pop
stos
jge
leave
pop
mov
mov
cs
icebp
int
xchg
lock
inc
mov
nop
push
iret
mov
xor
rcll
jp
movsb
xlat
mov
popf
les
fmul
push
push
in
imul
test
inc
scas
pop
fcoms
mov
fnstenv
jge
outsb
and
mov
cld
inc
push
mov
cmc
sbb
bound
lea
dec
lds
pop
mov
ficoms
dec
jl
jmp
arpl
push
inc
lret
loope
les
mov
stc
mov
inc
sbb
lods
lea
pusha
movsb
aas
jg
sbb
inc
xchg
mov
sub
out
or
test
stc
mov
push
mov
or
leave
add
dec
repz
incl
and
pop
xchg
sbb
mov
cwtl
xchg
sbb
sbb
ret
shlb
adc
push
push
jecxz
mov
sub
es
or
jns
scas
imull
mov
and
mov
mov
xchg
insl
pop
mov
mov
cmc
in
xchg
sub
mov
fdivl
adc
dec
push
cmpsl
fists
xchg
pop
add
enter
jmp
push
push
mov
cmp
cmp
add
push
fstl
mov
icebp
sbb
movsl
loopne
shlb
dec
or
xchg
xchg
fisttps
jne
xchg
pop
mov
psllw
sbb
jbe
lahf
movsl
xlat
fchs
add
mov
shlb
fwait
jg
adc
aaa
ja
add
add
or
aaa
pusha
mov
call
mov
mov
sbb
jg
neg
movsb
xchg
cli
adc
mov
adc
int
adc
or
mov
mov
mov
jmp
ret
int
call
push
int
out
mov
into
fcmovne
andb
dec
sub
xor
sub
cmp
push
clc
clc
inc
emms
sbb
jo
test
aaa
int
std
and
cli
lea
imulb
mov
xor
frstor
call
xor
iret
out
cli
mov
xor
das
pop
jecxz
mov
testb
and
mov
ds
jge
jo
cmp
push
inc
out
xor
test
mov
mov
test
mov
das
dec
pop
mov
cli
pop
in
push
outsl
pop
fstpt
das
loop
jne
and
std
push
mov
addr16
mov
push
loope
adc
fdivrp
imul
lret
pop
jae
mov
mov
nop
les
lret
loop
jg
pop
sub
cld
adc
aad
sub
push
mov
inc
sub
ja
std
pusha
ret
sbb
cmp
movsb
adc
iret
dec
stc
push
mov
or
and
mov
sub
adc
pusha
ds
scas
je
popf
hlt
call
sub
pop
test
frstor
testl
push
cld
cmp
dec
pop
sub
sub
dec
xchg
inc
das
aaa
incb
incl
shll
mov
cmc
int3
not
sbb
rcll
push
jle
inc
lock
fisubl
and
xor
lret
sbb
sbb
mov
or
sub
iret
dec
xor
cld
sub
cmp
scas
mov
testb
xor
pusha
enter
push
mov
test
loopne
jb
pop
add
inc
push
mov
es
out
add
hlt
adc
and
or
jle
jns
cs
pop
dec
in
fidivrs
dec
in
inc
jno
fisubs
dec
sub
pop
ret
push
dec
dec
push
ret
fistps
mov
ss
arpl
pop
xor
add
inc
mov
int
push
decb
cltd
mov
decl
jge
sbb
ret
int
push
in
int
out
push
mov
xor
aas
out
sub
mov
out
xchg
mov
mov
adc
call
in
xchg
fs
fwait
xchg
xor
mov
and
and
lea
rcr
movsl
movsl
sbb
aas
pop
cmp
jl
sub
and
call
xor
sarb
xlat
pop
mov
fadds
sbb
ss
aaa
jb
dec
sbb
inc
js
insb
lods
mov
mov
push
rcrl
adc
inc
sub
mov
shr
cmp
lock
ljmp
xor
test
sbb
jae
mov
mov
xor
mov
lods
cmp
into
out
outsb
jae
sub
push
cmp
mov
xchg
lahf
xor
mov
dec
out
xor
notl
dec
or
lods
in
mov
mov
outsl
push
push
scas
subb
pop
shl
mov
mov
repz
or
push
lods
dec
call
fnstsw
xor
or
push
cld
cltd
mov
scas
icebp
or
mov
lcall
data16
jg
xor
fucom
sbb
movsl
inc
test
in
inc
lods
aad
loope
jno
ror
lcall
mov
dec
lea
repnz
shl
pop
scas
lret
sub
in
es
test
jne
outsb
mov
movsl
and
loope
inc
fwait
xor
arpl
sbb
jecxz
sbb
or
adc
cmp
iret
jb
rcr
and
iret
loope
jo
loope
mov
lret
add
xchg
inc
mov
stos
jnp
imul
mov
cmp
dec
ret
call
jo
adc
mov
fwait
push
lods
fs
cmovb
out
out
push
push
movsl
ja
inc
jle
xor
call
subl
dec
cmpsb
pop
test
fs
ret
ffreep
notb
fs
push
test
sub
and
pop
jl
loopne
sbb
inc
leave
hlt
pop
or
shll
inc
push
pop
pop
pop
sbb
jno
dec
fwait
and
or
sbb
and
fsubs
adc
fnstcw
fidivl
inc
fidivl
dec
mov
insb
mov
and
add
pop
cmp
sbb
movsb
insb
inc
sub
shll
popf
adc
xor
jns
call
xor
scas
popf
bound
jae
clc
xchg
push
clc
hlt
jmp
arpl
fucompp
std
jmp
loope
mov
sbb
cmp
xor
xor
in
xchg
lret
mov
jno
jo
jp
xchg
cmpsl
push
mov
fsubp
adc
orl
or
push
cmp
and
fdivrs
fisttpl
addr16
mov
aaa
mov
into
mov
cmpsl
aam
jg
adc
je
pushf
sub
loop
cmpsl
push
rcr
imul
pushf
push
and
movsl
bound
mov
and
xchg
sbb
mov
push
mov
mov
jnp
sbb
push
sub
pop
sti
mov
or
scas
push
cli
inc
mov
pop
bound
insl
cmp
lret
in
push
aaa
leave
cmpsw
adc
adc
out
fsubl
sub
std
popa
call
jne
clc
jb
cld
ds
push
cmp
xlat
sti
add
jmp
jne
loopne
mov
push
cli
fwait
rcl
scas
jnp
jne
cli
lods
cwtl
pushfw
jbe
outsb
jnp
int3
dec
test
mov
aas
pusha
sahf
sbb
cli
inc
inc
pop
xchg
xchg
push
or
cmp
loope
pop
outsl
aad
lock
int3
cmc
and
out
mov
lods
pop
outsl
int
xchg
rcll
or
mov
ljmp
push
push
add
lods
stos
mov
cmp
pop
loope
pop
loope
inc
add
out
mov
pop
inc
fistl
add
call
xchg
int3
push
sarb
cmpsb
daa
stos
jno
cs
mov
sub
add
adc
adc
insb
outsb
roll
mov
mov
movsb
sub
scas
jl
mov
pop
add
push
in
sbb
mov
loope
mov
pop
add
jecxz
in
out
mov
jmp
pop
nop
aam
cmpsb
mov
sub
or
sub
test
cmpsb
mov
test
pop
in
das
or
jne
pop
je
popa
or
out
mov
sub
xchg
loop
stos
cmpsl
test
pop
int3
dec
lock
push
cmp
mov
pop
push
rcrl
je
leave
mov
inc
mov
jge
cld
adc
std
xor
inc
mov
xor
mov
inc
or
add
out
sub
or
aas
or
jb
out
popf
jb
mov
lods
xlat
inc
iret
int
dec
or
lods
mov
cld
insl
xor
mov
jle
dec
call
dec
stc
repnz
scas
out
je
sbb
xchg
pop
jg
mov
lds
popa
stos
cld
arpl
mov
or
xor
outsb
stos
inc
mov
mov
lcall
sahf
push
ret
xor
popf
loopne
jecxz
cmpsl
movsb
out
pop
mov
das
rolb
dec
daa
mov
dec
fildll
cwtl
jecxz
add
fcomps
jns
ja
jge
sti
xchg
dec
insl
mov
inc
add
mov
jnp
negb
movl
enter
ds
out
jecxz
subl
xor
sub
jae
jl
cmp
test
arpl
les
shll
lods
push
add
jl
out
lret
push
xchg
jecxz
lea
xor
jle
xchg
sub
sub
add
in
sbbl
push
mov
cmpsl
lock
mov
lcall
or
xchg
sbb
test
fiadds
adc
nop
fwait
sub
cltd
adcl
inc
jnp
out
jnp
imul
in
add
rorb
and
mov
xor
or
call
pop
mov
xchg
cmp
clc
inc
call
cltd
pop
fdivrl
mov
cmpsb
inc
lret
inc
icebp
push
cmp
loop
and
fs
inc
jge
mov
fdivrs
inc
xchg
push
push
mov
jae
bound
cli
lcall
popl
push
fdivl
clc
cld
test
jp
push
xchg
repnz
rclb
adc
mov
lea
aad
adc
mov
xchg
nop
dec
ss
data16
shrl
push
scas
bound
subl
add
stos
out
stc
out
jb
and
jg
mov
mov
adc
cmp
push
mov
sti
sbb
int3
fmuls
aam
cmp
jg
stos
loop
das
sbb
xsaves
and
repz
pushf
push
popa
loope
inc
mov
dec
ret
insl
lret
popa
stos
and
jno
daa
pop
fsqrt
cld
lahf
je
inc
jle
push
andb
shrl
out
push
sub
inc
std
int3
ret
ljmp
enter
adc
pop
outsl
out
add
mov
out
pop
cmp
dec
sbb
dec
int3
pop
jmp
imul
int
or
mov
in
pop
and
inc
and
xor
add
inc
imul
sbb
in
mov
or
aad
cwtl
push
ja
jno
test
cmpsl
movsb
add
jae
mov
push
decl
push
inc
xor
jecxz
dec
int3
dec
stc
cmp
cwtl
stos
clc
mov
push
mov
cmp
jg
dec
pop
scas
xor
into
mulb
jle
jno
js
ss
pop
mov
pop
adcl
ss
test
adc
pop
push
jg
pushf
repnz
or
or
dec
push
scas
leave
sub
mov
nop
rcll
or
xchg
fcmovu
adc
out
xchg
aas
arpl
sub
xor
in
mov
jmp
loop
mov
insl
cmp
sub
in
mov
aaa
in
cmpsb
pop
add
jo
clc
mov
loopne
cwtl
insb
testb
ss
jno
xor
xchg
pop
jns
dec
stc
int
ja
fisttpll
and
sbb
inc
inc
or
popa
movsl
negl
cmp
insl
test
jmp
jb
loope
sbb
cld
xor
push
shlb
push
aaa
repz
mov
mov
arpl
inc
sbb
ja
decl
lahf
xchg
les
inc
xchg
out
jg
sarb
push
stc
ret
jb
mov
pushf
push
dec
dec
lock
pop
mov
bound
jno
inc
mov
aaa
adc
pxor
addr16
maskmovq
vshufps
repnz
pop
stos
data16
sub
push
scas
jb
das
and
in
shll
and
test
add
lret
dec
movsl
fneni(8087
add
mov
es
dec
xchg
movsb
test
loope
xor
shll
or
iret
pop
sarb
sti
mov
dec
test
inc
repnz
mov
rol
movl
push
push
daa
out
xchg
mov
sub
outsb
push
adc
je
mov
mov
xchg
stos
xor
xchg
imulb
aam
daa
insb
sbb
sub
xchg
stc
or
bound
mov
stc
out
pop
clc
aad
adcl
paddb
popf
fsts
inc
jb
call
mov
cmp
mov
fdiv
ljmp
sub
or
imul
adc
in
mov
addb
dec
sti
ja
mov
roll
cmp
add
push
adcb
sub
nop
adcl
adc
dec
dec
sahf
sub
testl
inc
cli
pop
mov
shrb
in
pop
fisttpll
inc
add
inc
loopne
cmp
dec
inc
mov
bound
inc
mov
jnp
push
or
mov
or
xchg
jns
mov
std
mov
dec
or
push
ds
fisubs
aam
cmp
repz
pop
test
push
sti
pop
dec
inc
in
and
stos
nop
jo
stc
cmp
push
es
aas
add
push
sub
hlt
push
cltd
addr16
and
mov
les
mov
das
test
sbb
rcll
fisubrl
mov
ds
pop
sbb
push
loop
ja
mov
gs
push
lock
xor
push
sahf
mov
xchg
mov
ret
imul
aas
xor
sbb
ret
mov
mov
fcmovb
test
lds
and
pop
loope
jecxz
cmpsl
addr16
fstl
sub
jecxz
ss
xlat
mov
decb
stos
push
lsl
cmpsb
xor
int3
sbb
subl
push
stc
mov
cmp
cmc
das
dec
fimull
lods
pop
movsl
jge
pop
xchg
sbb
call
xlat
in
jmp
rclb
dec
jl
push
imul
xchg
mov
cmc
sbb
xor
mov
je
das
bnd
xor
out
movl
nop
push
pop
icebp
mov
mov
fwait
popf
xchg
cs
and
and
enter
or
fisubl
adc
outsl
cld
ljmp
mov
jecxz
fcoml
idivl
inc
inc
hlt
add
xchg
jl
out
jge
lock
ja
push
sub
mov
sub
cmpsl
lcall
in
and
movsb
lea
mov
or
je
pop
mov
stos
dec
movsb
fnsave
in
shrb
outsl
jbe
xor
cli
test
jae
sbb
ljmp
push
test
mov
dec
mov
cli
push
jg
mov
mov
mov
fsubs
push
sub
and
imull
pop
cmp
push
stos
pop
and
push
adc
inc
sub
mov
orl
aam
loop
aas
mov
or
test
push
aas
push
inc
xchg
scas
or
test
push
push
sub
sub
shlb
aam
mov
roll
inc
fadds
shll
add
into
lods
mov
jbe
push
movsl
inc
mov
stos
mov
je
mov
sbb
pusha
lcall
inc
adc
fwait
imul
rol
pop
cmp
mov
cli
xlat
adc
repnz
mov
adc
inc
pusha
jns
insl
data16
xor
iret
scas
xchg
icebp
daa
mov
or
aam
jg
or
call
dec
and
and
cmp
in
das
mov
pushw
js
pop
negl
dec
adc
pop
sub
dec
push
loop
sub
gs
jno
ds
mov
insl
pop
mov
in
push
aas
das
add
sub
dec
imul
pop
cmp
clc
sarb
test
ds
push
or
adc
inc
jnp
fwait
out
cli
aam
xchg
cmp
jae
outsb
dec
lods
leave
xor
mov
cmpsb
punpcklbw
mov
scas
cmpsb
sbb
cld
cmpsb
push
popf
mov
fstpl
cmp
test
push
mov
push
xchg
push
fnstenv
mov
popa
ds
adc
dec
in
inc
and
sbb
push
fmul
pop
sub
and
xchg
mov
fstpt
jmp
pop
lcall
pusha
pop
mov
js
and
in
cmpsb
out
or
inc
mov
jecxz
iret
mov
ffree
fs
nop
lretw
adc
cmp
ret
inc
js
pop
jne
mov
bswap
es
mov
jae
add
mov
xchg
nop
mov
cmp
xor
leave
cmp
sbb
fcmovnbe
jne
cmp
adc
lcall
shl
decl
mov
sub
xchg
imulb
push
xchg
mov
xor
or
mov
ret
ds
js
mov
cmpsl
or
pop
cmp
mov
pusha
pop
lds
or
stos
imul
fdivl
loop
out
or
xchg
clc
jecxz
test
es
mov
test
popf
ss
sub
inc
outsb
jmp
jb
xchg
mul
loopne
cmpsb
enter
inc
mov
adc
and
pop
je
push
and
jnp
mov
push
or
pop
jg
jl
pop
push
mov
aas
or
loopne
repz
adc
outsb
sub
sub
fwait
repz
out
mov
loop
daa
fiadds
fisttpll
xchg
or
mov
stos
inc
daa
daa
lahf
cmp
pop
call
insl
shr
xor
jle
in
int
notb
cmp
sti
sub
stos
clc
decl
dec
fidivrs
leave
adc
subl
push
hlt
mov
cmpsl
and
pusha
aam
mov
lret
sbb
les
fcomp
cmp
push
jbe
insb
mov
popa
sub
adc
inc
cmpsb
inc
cmp
add
cld
lock
fnsave
mul
mov
sbb
lret
or
outsb
loop
leave
and
cli
add
xor
shl
enter
cld
sbb
adc
dec
cmp
shll
inc
mov
jb
push
push
movd
hlt
stc
ds
or
arpl
push
dec
push
aaa
sub
test
jle
testb
jl
adc
cmp
call
bound
addr16
icebp
mov
das
add
pop
sbb
xchg
stc
roll
sub
jbe
loop
out
fdivs
pop
imul
dec
mov
dec
mov
mov
insb
mov
rcrb
sbb
repz
in
loopne
xchg
pop
push
sti
jge
cmp
inc
sub
bound
fucom
push
ljmp
push
dec
push
sub
cmp
mov
xchg
addr16
scas
mov
mov
pop
imul
shrl
out
leave
cmpsb
test
jge
sbb
jb
mov
xchg
push
xchg
mov
dec
ja
pop
inc
cmp
cmp
pop
xor
jecxz
mov
inc
adc
in
push
imul
ret
push
daa
insl
mov
push
jnp
push
inc
daa
mov
int
out
dec
push
pop
scas
mov
mov
dec
idivb
into
notb
cwtl
xchg
ss
adc
inc
std
idivl
lret
je
jmp
lods
mov
negb
lahf
scas
movsb
mov
mov
inc
pop
in
out
jge
add
aad
cmp
push
and
push
aad
or
ljmp
aam
inc
cmp
mov
stos
mov
xor
das
add
loopne
pop
popf
pop
out
inc
push
and
push
incb
push
adc
ja
call
outsb
aaa
mov
cmp
stos
mov
mov
cmp
mov
cwtl
cmp
repnz
jle
mov
movsb
sub
inc
mov
nop
out
push
xchg
xor
mov
cmpsb
lods
jl
inc
cmp
imul
jbe
xor
fbld
in
dec
cwtl
mov
mov
test
outsl
push
negl
dec
aam
mov
sub
xchg
iret
push
ret
dec
dec
out
xchg
out
sbb
ja
push
mov
jp
xor
and
mov
cld
test
add
adc
dec
lea
insb
cmpsb
and
outsb
and
jno
inc
and
scas
pop
jl
mov
mov
shl
xor
xchg
test
inc
cmp
cmp
lods
and
mov
inc
xorb
call
jl
push
dec
mov
fdivrs
pop
dec
mov
jmp
iret
sbbb
cli
jg,pn
cmp
jmp
dec
gs
xor
dec
xor
rcll
jbe
adcb
xchg
jg
inc
ficoml
fs
mov
iret
mov
mov
in
sub
inc
arpl
loopne
rcll
mov
jmp
adc
das
std
inc
cmp
add
addr16
and
mov
push
mov
test
std
out
outsl
stc
add
sbb
and
cmp
stos
sbbl
sbbb
xor
outsl
cmpsl
test
jle
fidivl
popa
data16
iret
decl
inc
outsl
test
cmp
cmp
out
in
sbb
adcl
addb
test
xor
les
loop
lret
mov
sahf
inc
add
ret
add
fs
jno
lea
xor
fwait
in
into
imul
adc
shlb
fst
dec
adcl
or
xlat
dec
ljmp
loopne
mov
cmpsb
inc
das
xchg
icebp
in
jp
dec
jmp
cmpsb
dec
icebp
sbb
ss
adc
data16
or
sarl
sarb
ret
jl
sbb
or
pop
or
daa
pop
xor
or
inc
test
pop
fsubrs
fs
mov
mov
jmp
cmp
and
sbb
pop
and
call
stos
dec
cmc
dec
ret
fstp
jmp
loop
insl
sbb
mov
arpl
addl
mov
or
fistl
insb
lock
push
xchg
dec
lea
add
pop
jle
shrb
call
sub
jecxz
sti
push
pop
fs
mov
addr16
sub
test
cmp
jmp
lahf
cmp
mov
inc
into
sub
push
je
scas
push
fwait
notb
xchg
mov
jo
divb
fcomps
or
mov
jge
mov
jle
pop
or
stos
faddl
ss
add
arpl
shlb
mov
popa
int
shll
add
mov
test
dec
adc
insb
test
sahf
xor
fsubp
cmp
and
sahf
insb
mov
movntq
or
pop
insl
jp
sub
shl
ret
push
jl
scas
sbb
jbe
mov
stos
cmpsl
cmp
out
inc
insl
popf
inc
imul
iret
jp
inc
imul
test
faddl
push
inc
sub
loop
cmpl
lods
arpl
cmp
jp
cli
xchg
add
xor
fidivrl
addb
or
jns
arpl
jl
jne
stos
negb
frstor
fisubrl
push
scas
adc
mov
jne
mov
out
dec
sarl
fdiv
jns
lods
mov
jns
lcall
and
push
cmp
xor
je
cmp
popf
dec
push
and
mov
mov
xor
lods
in
fstpt
push
aas
dec
xchg
push
jge
sub
test
subl
inc
jne
or
jo
fstl
jne
xlat
mull
fcomps
sti
cmp
adc
sbb
iret
aaa
cmpsb
popa
fdivr
aaa
outsl
push
mov
dec
jge
adc
xor
jo
inc
dec
xlat
and
popa
rcll
xlat
aas
cwtl
jnp
push
xchg
adc
leave
pop
cmp
out
hlt
lahf
or
repz
mov
ss
cmp
idiv
dec
or
scas
xchg
pop
movsl
push
jnp
adc
aam
mov
ret
mov
test
fbld
aas
sbb
in
aam
ljmp
sub
mov
pushf
popf
movsb
hlt
cmp
pop
stos
adc
je
pop
clc
divb
cmp
jge
cld
cmc
jo
mov
mov
in
jo
push
cmc
xor
cmp
cmp
mov
mov
std
xchg
stc
sub
lcall
sub
pushf
stc
imul
lock
negb
into
push
gs
ds
std
mov
xor
dec
ljmp
cmp
mov
sub
add
push
jg
dec
push
mov
ret
sarl
xchg
jo
jp
xlat
jl,pt
sbb
cs
into
test
push
scas
insb
mov
dec
xchg
lods
clc
subl
pop
jb
inc
dec
lds
shrb
stos
cmc
in
ja
xor
add
xchg
out
mov
jnp
adc
iret
jns
fldt
inc
das
and
mov
ret
push
leave
mov
lea
dec
popa
or
mov
jl
clc
pop
test
dec
test
or
pop
sbb
sti
or
pop
notb
outsb
xchg
loope
jp
dec
cmp
loopne
out
sbb
test
mov
mov
out
inc
aaa
inc
mov
fldl
jae
lods
scas
int
jns
pop
bound
adc
mov
in
sbb
mov
push
adc
cmp
inc
cltd
xor
xchg
imul
fnsave
sbb
pop
push
daa
mov
xor
and
jne
loopne
mov
das
mov
jo
lcall
xchg
jecxz
lds
lds
mul
xchg
ja
les
stc
shrl
push
das
sahf
sbb
push
cmpsl
xor
mov
negl
push
insl
popf
mov
mulb
xchg
jge
roll
cmp
mov
shl
outsl
sbb
lahf
nop
shlb
cwtl
shr
push
pushw
xor
dec
cmp
xor
ret
mov
imul
xchg
add
fdivrs
cmp
lret
dec
lcall
int
outsb
push
jne
std
stc
pop
pusha
sub
add
adc
pop
loop
adc
aam
nop
xor
ss
or
xor
cwtl
add
test
jmp
jo
push
ss
gs
ds
or
scas
inc
stc
les
inc
push
repz
xchg
in
xchg
mov
cs
jl
rcl
cmp
jge
mov
xor
push
stc
jnp
sbb
xchg
sbb
fistps
cmp
cwtl
addl
xchg
mov
push
daa
pop
pop
jg
lods
mov
adc
movsl
adc
enter
pop
push
jae
inc
sub
mov
and
outsl
pop
sbb
ret
add
xlat
jno
shrl
or
out
fucomip
filds
mov
loop
cmc
add
test
pop
lcall
or
popa
and
es
push
or
push
push
insl
jle
adc
add
fistpl
jne
mov
jnp
stc
add
js
psubb
mov
sub
daa
addr16
pop
js
cmp
inc
std
mov
lcall
jmp
popf
cltd
jle
adc
dec
dec
and
fldcw
sti
pop
add
ret
adc
sbb
and
test
lret
mov
or
je
das
iret
in
ss
adc
add
jns
adc
xchg
cli
outsb
arpl
movsb
xor
dec
pusha
dec
add
mov
sti
pop
mov
add
hlt
mov
dec
out
movsl
shrl
mov
popa
out
adc
sarb
ficoml
xor
pop
inc
cwtl
pop
ret
mov
and
push
cmp
pop
loop
sub
mov
adc
dec
jecxz
mov
mov
jge
ljmp
sahf
icebp
dec
sub
jmp
jae
and
lds
dec
aad
mov
xor
hlt
mov
jecxz
das
add
sub
enter
mov
cmp
add
aaa
add
inc
outsl
jb
call
fdivl
test
xchg
or
cmp
or
pop
mov
inc
jbe
cmpsb
call
xchg
mov
lea
push
add
faddl
mov
sub
xchg
movsb
test
inc
mov
fwait
lock
mov
pop
jle
mov
mov
jmp
nop
or
xchg
add
mov
mov
add
sbb
shl
cmpsb
push
sub
xor
je
imulb
aam
pop
jae
pop
dec
ja
insl
xchg
loop
mov
addr16
scas
sub
dec
int3
sahf
adc
sbb
jge
loopne
repz
mov
movsl
jb
sub
xchg
mov
xor
hlt
adc
xlat
notb
push
cmp
mov
stc
xchg
dec
ror
ss
stos
mov
pop
and
xor
inc
es
push
lods
aad
rcrl
shrl
jle
in
scas
dec
mov
cmp
push
mov
add
fs
movsl
loope
or
sub
jb
or
push
movsb
dec
les
arpl
fstpl
and
jne
ret
fcomi
ds
mov
test
ret
sub
insl
mov
clc
inc
or
fiadds
int3
fbstp
lret
cmc
aad
in
hlt
xchg
in
jmp
dec
push
daa
push
and
fdivs
ret
inc
inc
adc
fwait
xor
in
lcall
inc
fdivrs
into
gs
xor
lods
insl
out
movsl
aam
fs
jnp
xchg
and
pop
lcall
xor
xchg
sarb
xlat
jl
and
repnz
push
push
push
jg
mov
cmp
xchg
mov
mov
pop
and
xchg
mov
inc
jbe
push
outsb
out
inc
and
pop
mov
xchg
sti
int3
andb
pop
inc
test
in
lock
add
cld
imul
stos
sbb
push
mov
push
jmp
jnp
cmp
sub
xor
lcall
jbe
lahf
jp
or
rorl
ljmp
pop
out
mov
xlat
rclb
scas
xchg
fdivrl
scas
ret
cs
add
mov
or
xchg
pop
inc
pop
fsubrp
icebp
sbb
jnp
mov
xor
insl
aam
inc
jg
xchg
lods
test
lock
aaa
loopne
aam
pushf
add
jmp
insl
leave
into
mov
incl
mov
test
jno
and
add
jbe
and
cmp
lds
js
pushf
pop
push
loopne
addr16
pop
stc
shl
push
sbb
repz
js
repz
pushl
jns
and
cmp
push
push
addb
imul
pop
lret
ret
sti
sbb
mov
inc
outsl
orl
xchg
mov
mov
add
shrb
shlb
ja
dec
jnp
call
roll
xchg
jle
stc
add
aas
sbb
dec
loopne
lock
mov
loop
cmpsb
fsubs
xor
rorb
in
mov
xchg
adcl
xchg
adc
mov
jg
fcmovb
js
mov
in
and
lret
in
mov
mov
jbe
add
ss
mov
ljmp
xchg
xchg
sub
insl
ja
mov
dec
int3
pop
stc
cmpsl
aaa
es
ret
sub
lahf
add
sub
jb
nop
adc
mov
xchg
cmpsl
add
or
mov
in
pop
xchg
ds
pop
jns
lcall
out
mov
or
and
lods
mov
xorl
loop
mov
inc
insl
mov
pop
iret
push
call
jno
pop
nop
in
push
jnp
sbb
imul
mov
cltd
imul
loope
jmp
ret
jmp
call
pop
negl
mov
dec
cli
gs
ficompl
pop
mov
rcl
sub
push
frstor
jb
loope
mov
sbb
cld
push
adc
in
adc
in
sahf
or
cld
dec
xlat
push
or
aas
nop
jnp
jg
mov
dec
pop
inc
mov
jo
or
fistps
mov
mov
aam
sahf
inc
or
cmp
aaa
push
or
mov
sub
daa
adc
test
lock
pop
int
xchg
mov
or
push
daa
mov
xchg
push
arpl
cld
xchg
sbbl
push
or
lcall
sbb
inc
and
add
shrb
xchg
inc
inc
jle
enter
test
mov
add
bound
pushf
lahf
lahf
cmp
add
push
sar
cwtl
shr
pop
scas
jle
cld
in
les
mov
mov
iret
inc
fistpll
loop
push
les
mov
pop
push
mov
xorl
lcall
imul
inc
fistpll
push
cltd
xor
xchg
pop
adc
test
lret
out
xor
lret
push
pop
jns
stos
enter
dec
add
inc
sti
shrl
cltd
ss
mov
lods
xor
rcll
aaa
int3
add
stos
cmp
xchg
add
cmpl
push
test
push
inc
out
in
pop
ss
jae
ljmp
out
xor
add
pop
aad
gs
mov
out
or
xor
mov
adc
pop
shl
insb
arpl
dec
mov
je
push
pop
cmpsb
mov
lea
jne
int3
imul
mov
fdiv
mul
mov
sbb
sbb
lahf
inc
mov
sub
in
cmp
add
jmp
or
xchg
fistps
jp
aaa
or
lods
icebp
call
or
add
fwait
fs
jb
mov
adc
testl
fcomp
mov
inc
mull
cmp
xchg
sbb
lret
xor
pop
pop
les
and
fbstp
scas
stc
sub
aas
inc
push
xchg
pop
leave
xchg
aam
mov
pop
push
adc
mov
stc
sbb
enter
in
inc
cmc
sti
std
pop
xchg
or
xorb
mov
pop
repnz
hlt
popf
cmp
stos
pop
xlat
or
cmpsb
ficomps
hlt
cltd
pop
add
leave
pusha
test
xor
xchg
jnp
clc
add
mov
pop
out
ret
js
mov
adcl
test
push
pop
mov
jae
clc
ss
push
mov
jecxz
xchg
or
dec
in
jae
int
mov
stos
jae
sub
bound
rcll
cmp
arpl
dec
std
outsb
icebp
imul
pop
ljmp
xchg
testb
test
sbb
dec
movsb
fistl
jecxz
push
mov
xlat
cli
ror
je
push
out
add
iret
adc
cmpsb
int3
icebp
loope
jge
loope
sub
or
push
sbb
scas
arpl
sbb
out
popf
xor
add
jg
imul
cmp
dec
sub
mov
clc
in
xchg
cmp
push
sarl
pop
sbb
mov
cmp
stos
ja
lret
jle
xor
mov
mov
cltd
roll
pop
cmp
or
mov
rclb
mov
xor
mov
int3
jno
xchg
enter
mov
aam
arpl
test
cli
or
cmpl
fucomi
dec
clc
lods
pusha
jp
jo
roll
cmp
adc
xchg
stos
xorl
jle
out
jg
jmp
sub
movsb
data16
std
jne
mov
add
inc
mov
call
xorb
dec
xor
ljmp
jb
cmp
outsb
jns
cmp
cmp
daa
fs
and
cmp
cltd
repz
sbb
ret
sbb
into
push
mov
pop
inc
test
ss
sbb
rol
cmp
or
loope
std
ret
std
pop
cmp
clc
sub
add
xor
sub
mov
mov
js
inc
fcoml
dec
mov
in
cmpsb
mov
imul
and
frstor
mov
mov
loope
fwait
addr16
fbstp
xor
push
imulb
cmp
outsl
xor
mov
lahf
and
pop
push
pop
push
mov
jne
cwtl
out
xchg
push
push
aaa
orb
fiaddl
lea
mov
fisubs
pop
std
jl
lods
es
in
leave
daa
into
sub
call
mov
mov
int3
dec
push
and
hlt
scas
arpl
add
lcall
push
jnp
fldl
xchg
shlb
cmp
stos
push
mov
sti
and
xchg
mov
push
sub
mov
jle
sub
push
jnp
inc
out
sbb
mov
mov
mov
repnz
movsl
xchg
js
pop
shrb
fstl
sub
shr
pushf
lods
test
sbb
sbb
and
or
adc
push
cmp
mov
jp
push
ret
rcl
lock
and
mov
xlat
rcr
push
xor
fidivrl
std
jl
rcl
cmp
pop
pusha
mov
mov
inc
jmp
pushf
test
out
out
mov
jb
cmpsb
jl
repz
sub
cmp
cmpsl
dec
mov
pop
push
sub
jae
ja
mov
gs
incb
xor
add
dec
push
mov
fisubs
dec
sbb
addl
sbb
jle
sbb
dec
mov
addb
xlat
fmuls
fdiv
push
and
mov
ds
cmc
testb
out
and
adc
pusha
add
add
test
push
outsb
jl
shrb
xor
test
decl
pushf
and
cmpsl
lcall
dec
jle
aam
jle
pop
xchg
daa
adc
mov
cld
xchg
mov
pop
shlb
push
gs
sarl
cmp
push
pop
ficomps
inc
mov
mov
dec
mov
ficomps
add
push
test
movsb
mov
out
stc
stc
or
fnstsw
jge
xlat
imul
push
test
pop
mov
push
adc
lock
push
jnp
add
sbb
in
cmc
scas
inc
pop
clc
or
leave
mov
xor
test
lahf
xchg
xchg
jl
pop
jp
fsts
lock
sbb
cltd
jle
push
jae
jmp
mov
shrl
cmc
jecxz
sub
push
leave
clc
stc
and
or
xor
jg
mov
movsb
es
inc
mov
cmp
movsb
dec
into
jecxz
clc
mov
mov
movsl
pop
call
inc
mov
jnp
pop
or
loopne
push
popa
aam
adc
jle
sbb
mov
cmp
jbe
mov
xor
or
es
insb
cli
lret
cwtl
in
mov
push
bound
rcrl
mov
push
in
mov
xchg
movsb
imul
das
sbb
ficomps
sti
fwait
inc
cmp
negl
dec
js
in
cmp
push
into
mov
lds
lret
fwait
push
mov
sub
cmp
cmp
mov
fs
es
cmpsb
das
cli
rcll
push
lahf
and
sbb
lods
imul
cmp
mov
xlat
jle
jnp
add
mov
rcll
mov
outsl
mov
fstl
or
pmuludq
pop
fisubrs
dec
bound
cmp
loopne
sbb
dec
cli
loope
stc
push
cs
xchg
in
shrl
ja
stc
rolb
dec
ljmp
imul
mov
movsl
ljmp
jo
push
xchg
jbe
outsb
in
xchg
dec
insb
pushf
rorb
lds
cmp
push
stos
pop
xor
arpl
or
xor
jl
xlat
xlat
fisttps
lahf
mov
xchg
ret
xor
imul
dec
and
pusha
arpl
addr16
cmp
lcall
cmp
dec
lods
inc
xor
arpl
stos
int
std
cltd
aas
push
fwait
add
add
test
xchg
lods
jnp
loopne
movsb
test
lock
pop
xchg
iret
pop
xchg
and
cltd
mov
ret
mov
bound
mov
pop
xchg
sbb
pop
cltd
int
fisubrs
ljmp
daa
fcoms
pop
xor
fucomp
mov
cmp
cmp
sbb
out
dec
push
mov
das
mov
cmpl
adc
pop
lcall
lds
cmp
out
in
test
cmpsl
out
mov
fisubrl
cwtl
out
adc
mov
mov
test
cmp
lock
cmp
adc
sbb
mov
lret
xor
and
sub
js
mov
adcl
mov
push
and
repz
jo
push
adc
rorb
sub
rcrl
out
scas
nop
xchg
sbbb
sbbb
gs
es
mov
clc
jge
lds
testb
inc
or
pop
or
or
ret
cmp
fwait
mov
imul
pop
mov
fistps
or
or
ret
xchg
sbb
mov
lret
into
xchg
push
push
div
sbb
cmp
push
cltd
movsb
mov
inc
addr16
fsubl
ret
movsl
fstpt
out
add
jl
inc
adc
pop
bnd
out
cmpsb
add
or
xchg
movsl
xor
xor
mov
inc
insl
pop
ljmp
push
fcmovnb
fucom
or
addr16
push
and
xor
lods
adc
divl
cmpsl
adc
mov
repz
mov
xchg
cwtl
daa
sbb
pusha
dec
sub
sub
les
push
push
popf
sbb
and
adc
inc
xchg
scas
xor
mov
hlt
ss
or
sub
xchg
or
sbb
sbb
and
push
lea
inc
or
mov
lock
lcall
mov
push
jp
sub
dec
int3
test
dec
add
mov
add
in
ja
dec
cmp
lret
lret
mov
mov
jl
mov
cmp
inc
in
pop
sbb
addw
fptan
mov
sbb
mov
movsb
cmpsl
push
pop
call
sbb
add
xlat
xor
add
dec
daa
loopne
cmpl
inc
jns
lods
xchg
sub
movsb
pusha
xchg
cmp
movsl
mov
mov
outsb
in
mov
xchg
cwtl
mov
dec
icebp
lods
cs
inc
push
pop
lds
dec
popa
pop
loopne
cmpb
and
sub
les
inc
pop
dec
shl
stos
or
icebp
repz
mov
sub
out
inc
data16
add
mov
movsb
jmp
cmp
nop
inc
imul
add
fstpt
int
cli
insl
inc
pop
mov
ret
insl
xor
cmpsb
shlb
mov
lods
out
test
dec
push
lret
fwait
hlt
push
jo
mov
and
xor
sti
loope
popa
cmp
mul
insb
mov
cmp
cmc
or
dec
cmpsb
and
xchg
pop
popa
dec
and
pop
xchg
add
pushf
push
aas
pop
mov
mov
and
imul
push
out
cmp
in
push
xor
mov
xor
dec
sub
into
sbb
mov
andl
orb
mov
pushl
inc
pop
pop
mov
imul
stos
mov
ret
lret
test
inc
sub
dec
cmpsl
movsb
add
push
inc
jg
sub
fcomps
sahf
sarl
or
mov
adcb
cmp
or
shll
xchg
cltd
lods
fs
pop
test
daa
stos
dec
sub
pop
add
enter
xchg
pop
mov
pop
xor
cmp
jnp
lods
mov
mov
ss
dec
add
lret
insb
and
pop
mov
cmp
or
clc
pop
sbb
aaa
mov
es
aam
es
lret
and
adc
scas
sbb
xor
inc
mov
repnz
mov
outsl
dec
mov
cmp
mov
adc
call
add
rorb
pop
jle
ret
inc
jmp
cli
jnp
jo
leave
lahf
cmpsb
and
scas
es
cmp
fbld
cmp
mov
sbb
inc
and
enter
inc
fiadds
arpl
out
repnz
lods
stos
icebp
push
jbe
and
pop
out
data16
or
xchg
cmp
dec
xchg
adc
fstpl
inc
and
fldl
rclb
cmc
add
xor
cmp
pop
push
mov
int
jge
rolb
jnp
data16
mov
out
mov
js
xlat
divl
std
sti
pop
fcomi
inc
jecxz
cmp
shlb
mov
pop
cmp
dec
imul
push
xlat
push
popf
jae
ret
mov
sbb
xchg
loopne
push
add
jne
sbb
lods
int3
push
and
in
or
enter
test
cmp
mov
ss
sahf
mov
push
sub
cli
pop
in
mov
xor
sub
add
scas
ss
and
adcl
xchg
sub
cmp
pusha
sbb
push
mov
mov
mov
push
std
out
push
int
pop
sbb
sbb
xchg
push
pop
repnz
leave
movsb
ds
jge
push
popa
inc
imul
jne
decb
into
jae
jg
dec
xor
rorb
xchg
pop
mov
jp
inc
ja
ret
gs
call
bound
leave
mov
lods
ret
cmpsl
cmpl
outsl
out
loop
cmc
out
xchg
es
xchg
cltd
add
fwait
dec
jo
sti
outsb
loopne
out
fwait
aas
mov
sbb
dec
nop
sub
dec
and
sbb
add
fistpl
mov
stc
outsl
push
add
add
movsb
mov
enter
shr
inc
sbb
jg
pop
xor
xchg
insb
in
pop
add
xlat
test
outsl
test
sbb
xor
shrl
lods
pusha
incl
pushf
gs
mov
idivb
ja
cmpsb
cmp
adc
mov
jns
xchg
outsl
test
aas
es
jl
mov
test
sub
xchg
and
arpl
test
push
imul
mov
out
adc
movsb
mov
ds
pop
sbb
xor
dec
mov
mov
das
add
out
cmp
lahf
movsl
mov
rcr
sti
imul
call
shlb
sub
push
cwtl
fisubrl
adc
pop
shrb
std
lea
outsb
mov
iret
or
and
mov
aam
leave
jl
push
jge
cld
loopne
int
and
add
lock
and
xchg
and
jae
enter
xchg
testb
stos
sub
stos
int3
jno
mov
sahf
dec
js
loope
or
xor
xchg
out
mov
lods
shll
ds
mov
or
mov
les
or
ds
mov
mov
pop
push
dec
xorl
ljmp
mov
mov
lods
add
or
xchg
or
sbb
movsb
scas
push
rcrl
notl
adc
sub
mov
adc
xor
inc
outsl
mov
out
dec
pop
in
push
sub
dec
lret
mov
xchg
mov
mov
pushf
mov
lahf
pushf
push
inc
cltd
inc
pop
adc
sahf
stos
stos
rorb
adc
jle
jb
lock
dec
or
jne
in
inc
outsl
inc
faddl
outsl
push
not
repz
dec
icebp
xchg
lock
lahf
dec
mov
test
adcl
dec
and
mov
in
outsl
adc
addr16
pop
sub
stos
aad
mov
jmp
adc
mov
push
inc
dec
out
call
mov
cwtl
xchg
sbb
xchg
inc
xor
adc
jb
iret
and
mov
das
sub
mov
sbb
jo
xchg
cmp
adc
hlt
or
mov
mov
mov
mov
inc
xor
cmp
enter
push
dec
hlt
shr
and
or
loop
js
mov
ja
dec
adc
hlt
xorl
ret
or
shlb
mov
jns
adc
add
xor
xchg
mov
cmpsb
jg
hlt
in
outsl
bound
push
and
pop
outsb
cli
je
lea
shr
repz
push
mov
sub
inc
cmp
xlat
push
cmpsb
cmp
hlt
mov
pop
mov
iret
daa
gs
retw
push
in
std
int3
push
es
pop
push
ret
xchg
sbb
leave
xor
pop
popl
mov
movsl
decb
sub
fidivs
imul
iret
xchg
push
gs
cmp
stos
stos
ljmp
movsb
shll
inc
or
fmuls
push
pop
inc
inc
testl
mov
lds
or
js
mov
mov
adc
es
movsl
es
adc
js
ret
or
leave
inc
data16
jne
lea
jb
sarb
sarl
loope
lds
inc
push
scas
push
lret
rolb
stos
sti
scas
lret
jle
repz
in
and
adc
push
xchg
lret
lret
movsl
sbb
dec
and
aam
inc
inc
xor
jno
jl
mov
js
push
imul
push
mov
insb
sub
inc
xor
rcll
adc
inc
cmp
in
mov
lcall
das
push
stos
aaa
or
imul
mov
psraw
cmc
dec
jg
sahf
cmp
dec
mov
inc
rorl
dec
dec
push
test
in
leave
test
jbe
scas
test
sub
sub
sub
add
push
movb
pusha
mov
int3
push
lret
jl
sub
cmp
mov
cmp
inc
or
add
mov
xchg
dec
scas
mov
movsl
std
cmp
inc
push
int
cld
sti
inc
and
inc
aad
sbb
xor
adc
arpl
int3
cmp
subl
inc
lods
xchg
ret
imulb
cmpsb
sub
xchg
cmpsl
pushf
xchg
xor
cmp
je
pop
or
mov
push
sti
xlat
lret
mov
inc
adc
pop
fsubl
mov
mov
stos
cmpsb
lods
push
loopne
pop
fimull
inc
and
and
insb
je
in
loopne
inc
dec
dec
pop
pop
or
out
das
js
jbe
xchg
popa
stos
push
cs
push
mov
jmp
loope
jae
mov
mov
xor
divl
dec
adc
popf
lahf
dec
xor
pop
cmp
or
sub
adc
sub
jns
mov
xchg
mov
mull
divb
addr16
out
cmp
divb
xor
loopne
call
jl
movsb
movsb
jo
enter
aaa
push
data16
inc
cs
and
cmp
push
subl
sbb
std
ja
xchg
mov
and
out
in
xchg
clc
adc
sbb
or
adc
and
movsl
pusha
pop
mov
mov
rcr
cmp
adc
jne
sbb
mov
mov
or
cmp
pop
mov
fbld
loopne
outsl
inc
addb
or
mov
mov
or
sahf
mov
mov
push
push
ja
cmp
xchg
add
shll
xchg
mov
icebp
movb
add
cmc
fwait
sbb
into
lods
dec
cmpsl
or
loopne
lcall
jg
lea
pop
jne
aad
std
mov
push
movsl
adc
sbb
mov
loope
jl
cltd
add
nop
add
fldcw
pop
xchg
sub
iret
adc
out
wbinvd
sbb
aad
push
std
adc
testb
xchg
jmp
loope
xor
clc
cmp
xchg
je
fwait
out
push
les
icebp
das
mov
and
lcall
mov
jnp
pop
push
jae
cmpsb
scas
lret
shr
imul
and
shll
inc
mov
xor
sub
js
push
jge
sub
nopl
nop
sti
pop
sub
xor
mov
mov
adc
test
add
and
inc
sti
add
iret
cli
bound
xlat
fs
push
mov
sarb
rcrb
xchg
insb
gs
fnstcw
loope
add
incb
mov
mov
out
jo
idivb
xor
jle
lcall
xor
dec
aam
stc
sarl
subb
imul
mov
jmp
mov
inc
inc
inc
or
in
xchg
mov
hlt
push
ret
fists
xchg
push
cli
or
cs
sarb
inc
sbb
push
and
pop
inc
sub
stos
add
mov
lock
jl
in
cs
setno
cmp
mov
ret
dec
adc
dec
andb
cmp
lret
test
xor
add
jo
or
lcall
mov
test
mov
or
inc
popf
jbe
stos
test
aas
cwtl
mov
xlat
insl
ret
ret
sub
lods
pop
mov
in
cs
jb
mov
and
inc
xor
sbb
mov
data16
xor
ret
pushf
aaa
lods
aam
or
scas
cwtl
shl
mov
inc
and
and
popa
fisttps
fdivrl
push
mov
scas
xlat
jo
adc
pop
lea
sbb
and
push
insb
nop
mov
sarl
inc
out
aaa
fsubrl
ffree
xchg
into
fsts
adc
dec
jg
es
push
sbb
cmp
movsb
dec
inc
loopne
loope
je,pn
jne
imul
adc
dec
dec
add
fiadds
inc
mov
test
movsb
push
mov
je
xor
inc
rclb
mov
dec
inc
add
lea
fdivs
repz
lahf
pop
sahf
insl
cmpsb
or
sub
popf
aad
mov
sbb
imul
lcall
and
cmp
cmpsl
pop
adc
popa
mov
scas
jo
in
push
rol
xchg
js
leave
int
adc
sahf
insl
xchg
nop
push
lahf
or
ljmp
cmpsb
cwtl
dec
cld
adc
jnp
mov
xor
xor
movb
ret
fdivrl
pop
cmp
push
xor
out
push
push
push
inc
jo
inc
sti
enter
pop
aas
sti
cwtl
lcall
add
push
lret
ja
popa
jne
and
gs
mov
lahf
loopne
pop
test
dec
xor
call
mov
ficomps
mov
fimuls
xor
push
shlb
aam
filds
push
aas
lret
mov
add
cld
push
daa
adc
xor
pop
mov
repnz
dec
pmulhuw
outsb
movsb
xor
dec
push
ds
sbb
pop
lret
repnz
cmpsl
mov
xor
movsl
and
inc
lahf
pop
push
stc
lock
pop
pop
out
dec
xor
sub
xchg
out
mov
pop
rorb
mov
lret
lods
or
pop
mov
sahf
test
pop
mov
mov
mov
out
out
lods
dec
repnz
rcll
xor
mov
mov
and
add
dec
and
mov
add
repz
mov
adc
sbb
jno
jb
jmp
sub
arpl
mov
push
out
sarb
sub
out
lds
int
push
lods
xorb
fwait
in
dec
sbb
push
dec
das
adc
xor
mov
xchg
shl
aas
stc
cs
xor
inc
sbb
cmpsb
jbe
xchg
scas
inc
and
adc
pop
data16
pop
lds
sub
sarl
jmp
jb
mov
pop
push
mov
aad
xor
xchg
mov
in
xor
dec
jne
lods
int3
ficoml
mov
cmp
cmp
je
test
jb
imul
lahf
add
jo
dec
out
into
jge
or
bound
pop
pop
testb
fs
push
sbb
push
xchg
push
push
jg
mov
imul
xchg
ret
jg
xchg
sbb
inc
lahf
test
mov
out
jmp
mov
out
mov
shll
sub
dec
or
gs
inc
jnp
sbbb
jo
jo
add
sbb
jg
test
add
cmp
rclb
fwait
jg
out
rcll
mov
mov
adc
out
adc
push
mov
outsl
stos
jne
mov
cmp
test
fucomi
jecxz
inc
pop
scas
cltd
aaa
rorb
rcr
shlb
sub
mov
add
sub
std
fimull
or
dec
mov
aam
repz
push
xlat
insl
push
pop
jg
xor
pop
popf
lds
cmp
jl
pusha
push
xor
xchg
and
pop
add
mov
imul
incl
push
add
nop
cs
jbe
pop
outsl
or
imul
rol
jp
popa
mov
jnp
data16
push
jge
pop
sarl
bound
jl
test
xchg
add
or
movsb
aam
loopne
test
inc
inc
mov
cs
int3
mov
inc
aaa
test
xchg
jmp
push
sub
inc
mov
or
std
lret
pushf
iret
mov
dec
imul
jle
xchg
jbe
dec
scas
std
andl
pop
data16
inc
jo
jge
nop
xchg
xor
cli
mov
or
mov
or
fbstp
cmpsl
mov
or
ret
ss
lods
and
mov
fstps
push
add
add
add
iret
push
xor
sub
cwtl
shll
pop
icebp
mov
mov
and
push
roll
inc
mull
sti
movsl
mov
insb
repz
loope
or
int3
bound
xchg
ret
lahf
fyl2x
shrl
fdivr
filds
mov
pop
int
add
aas
push
sub
repz
xchg
repz
lods
cmp
out
inc
mov
outsb
jns
lea
pop
adc
bound
push
js
fbstp
imul
sbb
mov
sub
repz
leave
cmp
and
or
xchg
and
cmp
ljmp
lcall
decb
push
pop
cmp
pop
pop
sub
mov
jge
jle
ja
fildl
xor
fisubs
fimuls
fiaddl
mov
inc
sub
roll
add
sarb
pusha
cmpsb
xchg
cmpsl
outsb
push
leave
arpl
sbb
mov
orl
cli
xor
jns
jne
stc
rorl
sbb
mov
rclb
adc
es
in
cmpsb
add
jl
and
fwait
ljmp
xchg
ret
mov
leave
pop
outsb
jae
pusha
cld
popa
push
outsl
jae
jmp
pop
iret
push
shlb
inc
push
lahf
xlat
les
cs
dec
fcmovu
xchg
mov
and
cmpl
movsb
dec
ss
or
or
cwtl
cmp
roll
xor
jmp
in
jmp
mov
lds
int
bound
push
rcrb
mov
fistps
add
std
push
fbld
lcall
aam
mov
adc
add
sub
xor
adc
out
mov
pop
fstpt
cmp
sbb
xor
mov
loope
shrb
leave
jl
inc
stos
imul
stc
sub
adc
push
and
aam
sbb
hlt
dec
mov
test
push
dec
orl
and
mov
or
dec
pop
or
push
js
mov
or
pop
mov
sub
sbb
jne
rcr
shrl
jbe
cmp
dec
push
stc
cmp
cltd
imul
je
mov
movsb
push
lds
add
push
outsb
mov
jns
add
in
and
mov
pop
add
clc
cmp
mov
inc
ret
bound
mov
rol
jo
push
fdivs
sub
adc
lret
sbb
mov
mov
push
jne
mov
and
push
adc
xchg
adc
dec
inc
ljmp
inc
sub
fbld
ja
cmp
lea
in
add
dec
lods
pop
inc
mov
adc
cmpsl
cmpl
jbe
pop
xchg
scas
mov
mov
ja
adc
int
dec
and
mov
fists
out
xlat
imul
imul
js
add
xchg
add
sub
or
and
push
jo
fisttpll
inc
push
dec
mov
sbb
repnz
std
xor
dec
test
xchg
add
and
test
adc
insl
pusha
or
mov
imul
ret
dec
mov
and
ss
sbb
test
sbb
fiaddl
ds
mov
lcall
loope
xchg
and
jle
adc
lret
and
jmp
cltd
mov
inc
xchg
lahf
cmpsb
push
repz
xchg
pushf
negl
sub
ja
std
ja
mov
imul
scas
add
lock
jle
cmc
sbb
add
in
movsb
js
sub
nop
jg
ljmp
mov
clc
jle
dec
dec
xchg
jbe
sub
mov
out
or
test
xchg
xchg
int3
inc
jg
mov
xor
gs
aaa
movsl
and
in
aad
xor
jecxz
dec
lret
xchg
dec
les
es
dec
mov
xchg
insl
jo
xor
pop
lret
daa
adcb
adc
imul
push
mov
adc
or
das
lods
subb
aas
xchg
rcl
push
inc
sub
shl
adc
clc
sbb
adc
incb
push
xchg
movsl
fsts
addr16
scas
movntps
addl
pop
enter
shlb
pop
mov
cli
push
sar
mov
xchg
or
dec
dec
into
in
out
iret
ja
add
ret
push
lcall
out
push
inc
ss
add
sahf
sub
jne
aad
sbb
fisttpl
in
insl
mov
pop
push
popf
and
fwait
lds
xchg
sub
push
gs
sbb
jp
xchg
lea
pop
inc
mov
xchg
out
ljmp
out
fnstsw
sarb
add
test
fsub
push
mov
lds
cmpl
xchg
ss
pop
xlat
stos
xor
lock
dec
mov
cmc
jbe
aas
or
ja
mov
dec
add
fsubs
ret
xor
push
leave
jb
xchg
fabs
mov
jnp
jbe
jbe
add
or
jge
cs
xor
shll
push
cmp
xchg
sub
in
cmp
sbb
rorl
jecxz
arpl
mov
andb
sbb
sbb
cmpsl
sub
iret
mov
and
lods
push
xchg
loop
into
inc
scas
add
dec
inc
inc
jmp
cmpsl
and
push
mov
movsl
sti
adc
and
sbb
or
jno
lock
nop
push
xlat
pop
ljmp
cmp
push
sub
xor
cld
data16
mov
cmc
iret
sbb
sbb
clc
test
roll
dec
std
mov
mov
es
into
outsb
aaa
fwait
mov
imul
dec
mov
fadds
pop
jp
nop
int3
mov
int3
rolb
mov
mov
test
lea
fiaddl
push
shll
nop
pop
push
push
fistpll
push
pop
push
cli
int3
scas
add
lret
push
push
bound
push
inc
out
cmp
arpl
fucomi
idivb
jae
inc
sub
in
int
mov
fcmove
inc
fiadds
or
or
outsl
mov
std
mov
scas
mov
inc
sbb
popf
cmc
cmp
lea
insl
cmp
lock
xor
int3
mov
outsb
in
sub
inc
inc
pop
xor
testb
mov
iret
rolb
push
enter
or
sar
jecxz
lods
pushf
lea
testb
mov
outsl
push
pop
pop
insb
fiadds
imul
xchg
gs
pop
and
cli
inc
push
shl
fxch
mov
leave
jle
jno
out
pop
sub
mov
ja
xor
add
mov
lock
cmp
or
fs
pop
cltd
ja,pt
mov
or
xor
arpl
jge
push
or
fneni(8087
pusha
outsb
jne
pop
xchg
mov
mov
jmp
dec
outsl
ret
movsb
jecxz
lcall
ret
pop
out
sbb
shrl
in
inc
add
not
imul
lret
jecxz
jb
cwtl
je
in
aad
mov
push
fnstenv
xsaves
scas
mov
lods
mov
push
cltd
movsb
mov
inc
xchg
lahf
lahf
sub
push
fisttps
jbe
in
jp
stos
xchg
xchg
push
sub
pand
jmp
enter
pop
xchg
xor
out
mov
sub
mov
xchg
int3
cwtl
int3
jge
inc
ret
insb
xor
mov
mov
xor
fstpt
sub
xchg
je
pop
shrb
decb
push
add
inc
xor
pop
mov
xchg
loopne
xchg
add
mov
adc
xorl
push
pop
sbbb
aas
addr16
xchg
fisttpll
orb
mov
ss
stos
insb
xlat
daa
pop
movsb
and
pushf
pop
iret
lods
mov
fsubr
jne
and
add
adc
or
lods
loope
shlb
mov
mov
out
leave
insb
bnd
leave
leave
cmp
test
cld
nop
out
fincstp
pop
adc
pop
jo
pop
add
pusha
icebp
cltd
inc
insl
cmp
in
mov
add
xor
cwtl
lahf
pop
xlat
cmpsb
and
mov
or
out
xchg
jne
cmp
divl
inc
jae
lcallw
clc
aam
add
iret
xchg
call
bound
sbb
mov
jecxz
mov
lcall
mov
enter
jno
sarb
clc
xchg
dec
les
dec
inc
popa
mov
xchg
jno
mov
call
insl
mov
cmp
mov
outsl
inc
and
inc
pop
lret
push
or
fidivs
jae
mov
mov
outsb
xchg
fnstsw
inc
sbb
repnz
push
ret
or
sti
pop
dec
in
or
les
addr16
sarl
xchg
mov
adc
loope
iret
pop
xor
push
daa
call
lods
mov
lret
loope
mov
sar
ljmp
jp
or
lret
push
cmp
mov
jnp
mov
mov
lcall
pop
lcall
adc
shll
fstps
xchg
cmpsb
aaa
fsubrs
adc
jb
cmp
push
adc
test
push
out
adcl
sarb
cmpsl
ljmp
push
int
aad
ror
fucomip
aaa
push
stos
std
shrb
inc
inc
movsb
lcall
push
jmp
mov
in
pop
adc
loopne
cmp
jp
mov
push
jo
mov
jnp
out
add
lods
xchg
dec
mov
xor
push
outsb
inc
jnp
mov
call
mov
mov
scas
in
aad
ror
mov
inc
sbb
sbb
sbb
or
fimuls
imul
lods
aaa
movsb
mov
aaa
test
aam
test
or
add
stos
mov
ret
pop
sahf
insb
jb
xchg
jns
movsl
jo
lods
mov
cmp
lea
xlat
mov
loop
decb
in
or
or
fdivs
cmpb
ret
xor
popf
jle
std
cmc
ret
incl
push
inc
push
sbb
sti
mov
fsubrs
aaa
rorb
xchg
test
ret
cwtl
sbb
aam
inc
stos
out
add
jp
imul
daa
movsb
rclb
lds
out
outsb
dec
repnz
imul
dec
insb
stc
inc
clc
sarl
test
xchg
repnz
pop
add
mov
add
mov
inc
movsl
mov
mov
jmp
sbb
jecxz
inc
jb
mov
jg
cmp
rclb
je
inc
and
js
popa
loope
jne
arpl
mov
xchg
xor
jmp
dec
inc
sbb
mov
mov
add
xor
imul
fisttps
movl
movb
sbb
sbb
mov
lock
cmpsb
sbb
fimuls
pop
das
cli
rcr
gs
pop
imul
clc
stos
jge
clc
adc
xchg
jle
mov
jecxz
push
xor
jne
sbb
adc
pop
lock
jbe
jbe
roll
mov
mov
adc
cmp
into
inc
mov
cmpsb
imulb
sub
clc
push
js
adc
jae
js
mov
add
data16
push
es
xchg
jecxz
mov
lods
lods
enter
mov
js
adc
lret
xchg
mov
imul
jbe
std
adc
jno
fidivrl
out
ret
sbb
cmp
xor
adcl
inc
popl
ds
orl
pop
xchg
jge
mov
shl
gs
adc
adc
mov
push
dec
stos
xor
push
pop
push
lcall
add
sbb
push
in
shlb
adcb
pop
iret
jge
jb
add
jno
fadd
sub
cld
push
ljmp
shlb
push
pop
adc
fstpl
mov
jb
pop
dec
jmp
ss
repnz
filds
inc
push
mov
jp
mov
sub
sub
pop
repnz
adc
pushf
pusha
mov
sub
cmc
dec
in
jp
jmp
jnp
jecxz
mov
jne
jb
data16
out
mov
push
adc
pop
sub
pop
mov
mov
pop
pop
mov
pop
dec
hlt
lret
adc
call
xchg
sub
out
dec
adc
push
adcl
jns
clc
or
xchg
and
mov
pop
mov
cmp
add
outsl
sbb
roll
rol
and
in
push
cmc
jno
push
gs
ja
sub
sbb
popf
je
call
flds
xchg
bound
mov
sti
stos
push
push
add
int3
xor
pop
push
into
push
cmp
repnz
mov
scas
inc
jo
stos
std
mov
or
movsl
sub
je
jle
mov
push
sub
out
roll
mov
xchg
xorb
call
out
mov
dec
sbb
or
std
sbb
xchg
mov
mov
mov
popf
jno
rcrl
fiaddl
mov
fsubrl
lds
and
xchg
mov
bound
shrb
and
loopne
mov
push
ret
imul
xorb
sub
movsl
mov
cwtl
andl
cltd
pop
repz
testb
mov
jle
arpl
mov
push
scas
pop
xchg
mov
adc
add
and
cmpsl
inc
ret
cmpsb
push
pop
stc
push
cmp
add
call
inc
xor
dec
cmc
pop
dec
push
jle
mov
dec
mov
mov
shll
or
cli
into
or
bnd
sub
out
inc
push
xchg
add
popf
test
xchg
adc
adc
scas
add
rclb
rol
jle
jbe
jle
push
cli
xchg
xlat
addr16
sahf
cmp
fucomi
xchg
mov
adc
cwtl
xor
pop
in
xchg
ffree
jo
cli
repz
or
mov
add
jg
out
adc
fldenv
mov
push
adc
push
inc
xor
cltd
xchg
fnsave
push
pop
lea
repz
pushf
ret
dec
sub
xchg
addr16
clc
dec
and
stc
adc
push
movsl
xor
pop
push
jnp
outsb
mov
push
ret
mov
sub
inc
add
mov
cmpsl
sahf
aam
pop
js
push
fcoms
bound
in
testl
sbb
clc
sub
mov
je
xchg
adc
aas
repz
lahf
and
xchg
icebp
jp
dec
fldenv
mov
rcrb
mov
pop
rorl
pop
mov
xchg
mov
sbb
push
mov
shll
jns
ret
mov
js
enter
push
test
mov
xchg
sbb
xchg
imul
cmpsl
push
call
das
jge
loop
lods
sub
push
push
push
dec
mov
aas
lret
push
ficomps
push
out
xchg
ja
loope
cltd
push
sub
mov
mov
inc
or
fiaddl
mov
pop
pop
out
jmp
enter
push
dec
pop
pop
mov
pop
out
idivb
and
add
imul
incl
cmp
ss
mov
es
xchg
jle
or
inc
mov
xor
adc
jl
jbe
aad
scas
daa
inc
xchg
cmp
mov
cltd
shlb
mov
mov
ss
sub
cmp
fcompl
out
cmc
jg
mov
out
push
fs
lock
repnz
imul
dec
sti
lahf
adcb
in
jp
ret
xor
aas
nop
clc
mov
in
pop
jl
ficomps
in
lods
fcomps
jp
mov
push
add
sub
rol
xchg
in
adc
test
pop
sbb
cmc
cmp
out
stos
and
sub
ljmp
cli
test
mov
inc
pusha
inc
arpl
xchg
sub
pushf
adc
mov
iret
push
mov
dec
loopne
ret
inc
adc
sub
push
sbb
shlb
in
stc
cmpsl
add
mov
mov
pop
mov
cmp
test
into
xchg
inc
sbb
mov
arpl
push
out
jg
out
iret
lret
lods
inc
push
adc
and
movsb
sub
mov
fstpl
jg
jae
mov
pop
ljmp
dec
scas
popa
mov
push
xor
mov
jns
pushf
fcmove
add
loop
bswap
dec
pusha
sub
xchg
push
inc
or
xor
add
mov
sbb
pop
adc
xchg
fsubs
jg
pop
mov
repnz
mov
mov
add
jp
mov
mov
push
xor
adc
gs
xor
sub
int
test
fcom
das
imul
in
push
xor
adc
pop
testb
mov
aas
sbb
jl
mov
push
rorl
shlb
adc
jo
adc
xor
dec
pusha
xor
loope
mov
adc
cltd
mov
stos
sub
and
ss
add
mov
push
jmp
push
out
and
test
jae
rcll
dec
mov
pop
pop
mov
and
cmp
push
jae
stc
push
mov
cmp
test
jge
test
sbb
dec
dec
inc
rep
das
mov
mov
and
push
mov
out
jae
xchg
loope
cmp
sbb
in
arpl
sarb
mov
or
dec
jmp
les
fwait
xchg
hlt
pop
mov
shll
push
in
dec
inc
scas
inc
xlat
xchg
pop
out
push
int3
daa
pop
fnstenv
sub
loope
pop
out
and
mov
push
xor
xchg
xlat
mov
dec
mov
xchg
daa
cmc
ja
hlt
inc
jbe
or
flds
popl
cmp
imul
push
cli
cmp
add
fdiv
mov
mov
aad
lock
mov
and
cs
test
repz
lea
in
je
xchg
cmpsb
orb
movsb
pop
pop
or
adc
dec
shr
and
enter
xor
jmp
adc
inc
inc
in
xchg
fdivrs
or
cmp
mov
push
inc
pop
or
jnp
mov
sbb
fs
int
add
fistl
outsl
ret
call
jge
daa
jp
hlt
push
scas
data16
es
in
cmp
jae
test
dec
dec
repnz
and
loop
fwait
jo
sbb
mov
out
inc
or
je
jb
ret
cmp
pop
mov
add
push
adc
lcall
fiadds
push
mov
xchg
adc
into
sarb
outsl
sbb
mov
xchg
sbb
enter
shl
into
jns
loopne
jbe
popf
test
and
lods
xchg
mov
popa
sub
sub
outsb
test
and
jge
jo
aad
shll
cmp
out
stc
mov
sbb
push
addl
out
adc
mov
insl
jge
das
mov
inc
stc
out
movsb
xchg
mov
pmullw
test
sbb
int3
dec
pop
stos
pxor
inc
xchg
test
int3
js
push
cmp
mov
call
inc
dec
dec
and
xchg
sub
dec
sti
cmpsl
out
xchg
rcll
movl
mov
fsubl
outsb
mov
fisubrs
orb
sahf
push
rcrl
mov
std
imul
xchg
and
adc
cli
ret
push
adc
paddb
jbe
not
in
inc
jns
lea
jne
mov
test
sbbb
cmpsb
rorb
inc
repz
mov
scas
mov
shlb
mov
push
movsl
loop
dec
pop
sbb
mov
sbb
push
lds
movsl
lock
cmp
ficomps
inc
in
jmp
int3
adc
cmp
jge
xchg
mov
imul
dec
xchg
retw
popf
push
aas
rorb
nop
ljmp
inc
dec
push
ds
ficomps
dec
out
scas
je
mov
xor
mov
arpl
push
cmc
mov
in
aam
sub
mov
ror
int
mov
inc
loop
mov
push
or
jns
or
cltd
jbe
idivb
shr
xorl
mov
aam
lcall
jnp
test
pop
adc
jb
mov
adc
push
sbb
jl
cmc
adc
outsl
or
addr16
jl
mov
xchg
rorb
mov
ja
jl
pop
or
sar
lret
gs
sarl
mov
testb
ret
andb
cmc
add
loop
push
inc
enter
adc
and
push
mov
xlat
repz
pushf
cld
jp
in
jecxz
sbb
push
sub
pmullw
inc
and
repnz
push
mov
notl
jg
push
outsl
lcall
movsb
inc
jne
adc
shlb
movsb
push
pop
sub
jge
mov
and
or
mov
enter
jbe
in
stos
pop
or
sbb
or
imul
cmc
stos
push
cmp
mov
jge
iret
pop
and
das
pop
mov
es
out
xor
out
or
lahf
xor
lea
mov
fmuls
jb
push
in
and
test
or
sbbl
mov
mov
sbb
push
mov
mov
iret
in
shll
sub
daa
xchg
or
cmp
jecxz
test
inc
push
fidivl
jle
inc
push
pop
mov
jbe
fidivrl
pop
cld
xchg
xchg
in
sub
subl
out
xor
aad
xchg
and
mov
mov
shl
loopne
iret
pop
push
xchg
pop
hlt
ror
jg
enter
cmp
and
jno
jl
mov
iret
loope
adc
aas
fisubrl
lods
imul
loop
cld
mov
aaa
mov
icebp
call
and
in
notl
cmpsb
xacquire
js
cs
and
sbb
pushfw
push
mov
aaa
testb
mov
fs
insl
sbb
idiv
and
xchg
sar
pop
and
rclb
aad
out
mov
adc
mov
mov
fwait
popa
fsub
sub
movsl
test
dec
in
and
sub
test
lret
sub
push
ret
dec
xchg
push
sbb
lea
and
mov
xchg
call
test
fcmovne
bound
push
mov
popf
insb
repnz
mov
xchg
pop
sbb
ficomps
cmc
mov
fs
dec
hlt
dec
das
and
mov
mov
or
int
data16
add
clc
sbb
mov
mulps
mov
and
test
and
lcall
ret
cmp
sub
pop
mov
scas
adc
mov
push
or
xor
push
pop
push
xchg
and
pop
out
mov
sarb
js
shlb
or
or
push
popf
xchg
loopne
mov
dec
pop
jae
das
push
jmp
int
cs
gs
mov
addr16
push
or
and
mov
dec
dec
lret
jmp
jo
xchg
pop
fistps
stos
xchg
add
rcrl
inc
lret
lock
ret
mov
out
test
jge
adc
or
and
xor
lcall
outsb
and
lcall
push
mov
mov
mov
inc
sub
add
inc
mov
shll
stc
movsb
fdivl
or
add
stos
sub
arpl
mulb
cmpsb
in
adc
mov
jbe
push
movsl
push
daa
mov
bound
jo
rolb
aam
dec
fldcw
push
mov
stc
cmp
cwtl
xchg
clc
sarb
nop
sahf
dec
movsb
xor
or
pop
cmp
shr
add
push
mov
sub
dec
push
xchg
sti
rclb
gs
sbb
add
or
mov
std
sarl
sub
lret
jnp
mov
arpl
stos
sub
imul
testl
imul
mov
sub
addl
xchg
test
sbb
cwtl
leave
dec
and
fimuls
mov
or
outsb
ret
and
adc
push
scas
scas
addr16
jo
cmp
lds
out
jne
outsb
stos
insb
xor
xor
outsl
sarl
push
dec
iret
stc
jbe
and
arpl
ret
cmp
xorb
test
xor
nop
push
xchg
cli
test
xchg
fldcw
call
push
jl
jb
js
es
dec
mov
test
add
lods
jp
aaa
sbb
add
fistl
das
stos
and
sub
xchg
jg
cmp
ljmp
popf
test
arpl
ss
fidivs
lcall
mov
fbstp
je
mov
sti
hlt
adc
mov
cmp
pop
pop
cmpsl
sbb
xor
popa
and
loopne
inc
xor
fadd
stos
scas
lods
mov
lock
mov
test
mov
push
cwtl
mov
push
scas
and
push
mov
pop
imul
int3
jmp
int3
icebp
push
fsubs
add
call
test
jno
stc
insb
sub
fiaddl
das
shlb
cmp
adc
data16
add
adc
cltd
repz
xor
out
or
les
fsubl
xchg
les
add
mov
add
lcall
pusha
and
pop
push
in
pop
add
fidivrl
dec
sub
movsl
jl
jl
mov
outsl
mov
adc
or
fdivrs
sahf
and
mov
ljmp
and
stc
mov
leave
and
fiadds
cltd
in
insb
shrl
or
fiaddl
mov
dec
inc
jmp
pushf
leave
nop
sub
out
inc
push
pop
xor
dec
push
ficomps
leave
fcoms
xor
inc
xor
pushf
xchg
and
lahf
mov
dec
flds
pop
and
cltd
xchg
pusha
pop
push
mov
add
cmpsb
cltd
cmp
rcrl
jp
xchg
inc
subl
int
lds
jecxz
mov
loope
hlt
or
aas
push
adc
inc
mov
or
pop
sahf
mov
test
mov
cmp
cmp
rolb
sub
call
icebp
mov
cmp
stos
sub
push
std
sarl
add
sahf
inc
sbb
or
and
clc
test
in
mov
jno
ja
sbb
dec
xlat
mov
call
test
cmp
add
push
jns
aaa
into
imulb
out
xor
aaa
addb
dec
lret
imul
popf
jg
inc
or
fs
cli
mov
lcall
pop
push
aas
jns
fisttpll
call
loope
fmull
aaa
popf
pop
ja
sbb
repz
xor
sub
jmp
arpl
or
es
sbb
nop
push
xchg
cwtl
pushf
stos
inc
cmp
sbb
aam
xchg
stos
pop
ret
sti
bound
pop
and
std
push
jae
mov
nop
inc
pop
xor
inc
xor
in
fcoml
pop
xor
in
stos
adc
push
xor
out
aam
sub
faddl
bound
dec
cld
xor
test
or
push
sub
sbb
lret
pop
rclb
int3
pop
cld
sub
mov
or
movsb
mov
int3
enter
lock
push
dec
fisttps
sub
xchg
das
mov
add
cmp
in
jp
popf
fsubl
mov
cmpsb
mov
aaa
pop
pusha
mov
decb
in
out
pop
in
test
or
xlat
sbb
push
rcl
xor
inc
jmp
ja
inc
lods
mov
ret
addr16
inc
test
in
mov
mov
pop
stos
pop
dec
mov
inc
xchg
sbb
pop
cld
int
cs
or
xchg
sarb
xor
sti
pop
lcall
adc
mov
pop
mov
lods
and
mov
cmp
stos
mov
lea
mov
xor
call
cmp
je
int3
push
imul
inc
or
add
xor
sub
jp
test
rclb
cld
and
dec
adcb
or
dec
scas
jg
fs
or
and
sub
rclb
test
test
popa
mov
bound
jmp
sub
scas
xor
ret
out
mov
sarb
int3
in
lods
cwtl
pushf
push
jae
mov
sti
pop
inc
xor
lods
pop
cmp
push
sbbb
sub
add
cmp
fldl
into
cmp
fimuls
outsl
inc
inc
dec
jg
mov
cmp
cwtl
fcmovnu
or
pop
mov
ret
jmp
sbb
lods
sbb
cwtl
shl
push
xchg
addb
or
sub
ret
and
jno
cmp
ljmp
jne
movsl
sbb
ret
dec
rclb
push
test
loop
pushf
mov
xor
aas
lock
aad
loop
lea
mov
mov
xor
aad
sub
push
pop
lret
sub
push
cmpsb
and
test
leave
cltd
mov
ss
mov
stos
std
lds
stos
jge
xor
fbld
loop
add
icebp
or
aam
sub
or
push
ljmp
outsb
sti
fcomi
fsubl
dec
cmp
je
ja
mov
movsl
dec
xchg
stc
or
jb
mulps
xchg
adc
pop
mov
xor
adc
test
pusha
pushf
mov
imul
addr16
xorl
cli
and
into
dec
xchg
mov
mov
mov
loop
xor
sbb
xchg
popa
and
jge
pushf
add
jge
in
loope
shr
mov
mov
mov
mov
xor
and
mov
mov
fstpl
lods
cmp
and
inc
dec
pop
xchg
mov
dec
mov
dec
imul
lret
lods
sub
jns
cld
in
cmp
dec
mov
push
fdivr
sub
imul
les
mov
push
mov
out
sub
dec
pushf
nop
sbb
fcom
xchg
lret
lret
fmuls
stos
int3
pushf
or
add
fidivs
ds
ficoml
sahf
adc
jmp
fnsave
add
pop
sbb
push
insl
sub
push
scas
cmpsb
aaa
pushf
lods
int3
lods
popf
outsl
push
dec
sar
push
cmp
and
out
pusha
push
int
dec
rclb
aad
mov
pop
jo
shrl
xchg
fs
loope
push
and
lret
and
dec
aad
mov
cmp
xchg
repnz
movsl
clc
xchg
mov
xchg
imul
adc
jo
lret
sbb
adc
je
cmp
inc
sahf
sub
ds
sarb
shl
shrl
je
lahf
sub
insb
dec
sbb
jp
enter
jmp
imul
shrb
cltd
sub
cwtl
mov
in
inc
inc
jl
fidivs
push
mov
mov
adc
outsl
xor
xor
iret
mov
arpl
pop
add
jl
dec
cmp
cmp
push
dec
pushf
cmp
mov
add
ljmp
inc
mov
arpl
dec
nop
iret
and
mov
push
idiv
scas
mov
rclb
sbb
inc
push
loopne
jge
sbb
dec
mov
into
inc
pop
inc
cli
rcr
stos
cmp
fidivrs
mov
data16
sbb
mov
out
xor
mov
aad
push
lret
mov
inc
inc
cmp
adc
mov
jbe
pusha
mov
and
sbb
sbbl
ja
jge
mov
mov
dec
push
mov
dec
cmc
test
or
mov
repz
jno
sub
mov
sahf
mov
mov
movsl
xchg
cli
in
sub
aam
ret
insl
inc
jg
ljmp
jle
cwtl
lcall
mov
dec
cmp
add
int
push
sbb
dec
jbe
pop
sbb
frstor
mov
sbb
addr16
in
xor
ss
loope
mov
fs
dec
mov
and
ljmp
or
ja
mov
scas
or
mov
sbb
mov
out
fbstp
cmp
pop
pop
add
in
jae
inc
insb
mov
mov
pushaw
add
mov
cmp
int
cltd
push
dec
cmpsb
test
lret
inc
data16
pop
imul
pop
jge
dec
inc
scas
bound
test
sti
shrl
or
rcrl
or
add
gs
ljmp
jae,pn
es
cmpsb
dec
adc
add
jne
dec
mov
cs
jge
rcll
mov
hlt
cwtl
xchg
pop
xchg
mov
dec
pop
cs
xchg
test
sub
inc
adc
or
inc
cwtl
ljmp
inc
xor
inc
mov
aaa
inc
lods
push
xchg
fidivs
cmp
frstor
popa
aas
push
add
mov
loopne
lret
scas
jns
adc
inc
pop
mov
imul
xchg
xchg
aad
add
adcl
cld
xor
adc
test
mov
cs
sbb
push
adc
aad
mov
ja
push
sarb
std
jb
fsubrp
cmp
mov
int
pop
jmp
cmpl
mov
push
ljmp
fimuls
ret
sub
add
xor
cs
dec
push
mov
jno
test
jno
jmp
cwtl
add
add
cmp
push
xchg
aas
movsl
push
cltd
xchg
insb
adc
mov
jp
sbb
pop
sti
mov
shrl
sub
imul
push
xor
out
xor
inc
repz
or
mov
sarb
shlb
lea
mov
add
cwtl
dec
leave
pop
push
imul
xchg
sahf
mov
je
insl
push
imul
mov
pop
sbb
adc
fisttpl
out
pushl
cmp
out
test
mov
xchg
hlt
pop
xchg
push
sub
pop
and
cwtl
mov
out
pop
lock
pop
sbb
sub
insl
and
adc
aam
pop
loopne
sub
lea
xchg
aad
aas
xchg
push
cmp
jae
repnz
addr16
cld
aaa
test
cltd
pop
popa
ja
gs
mov
xor
inc
or
push
ds
mov
and
jnp,pt
in
std
xchg
sahf
inc
or
add
push
xor
inc
or
ljmp
mov
lods
inc
enter
sbb
push
dec
jno
jae
imul
xor
adcl
in
pop
popf
push
sbb
sbb
stos
cmpsl
jno
sub
push
ret
mov
push
and
cmp
les
repz
loopne
scas
push
add
mov
lcall
cmpsl
mov
ss
loopne
dec
push
pop
nop
sahf
adc
fst
cmp
jg
adc
clc
push
and
outsb
mov
push
stos
icebp
or
xlat
sub
aaa
jl
stos
rorl
lods
pop
xchg
aam
dec
shrb
vmovsd
adc
xchg
test
and
loope
sarl
adc
jae
sub
leave
xor
mov
imull
or
add
jp
ds
push
mov
push
cmp
mov
pop
js
repnz
sub
xchg
incl
sbb
addl
lret
adc
dec
jns
roll
add
jge
add
adc
inc
lock
mov
fbstp
dec
jno
iret
into
bound
jp
sbb
in
stc
lods
repnz
xor
xchg
mov
fwait
shll
imul
xor
sub
addr16
xchg
push
mov
loopne
aas
daa
mov
fdivl
xchg
cmp
faddp
inc
adc
mov
xchg
push
push
fnstenv
test
out
and
jl
dec
int
scas
daa
mov
xor
push
into
mov
mov
adc
inc
push
mov
jns
cld
mov
pushf
sub
mov
jo
aad
xchg
mov
stos
lods
push
lahf
push
mov
sbb
iret
cmp
mov
rorl
sti
mov
push
icebp
and
add
mov
xor
insl
insb
outsl
decl
call
mov
mov
insl
mov
sbb
cmc
or
dec
pop
call
mov
xchg
cli
push
push
ljmp
insb
pop
scas
ljmp
xchg
jmp
cmpsb
xchg
popa
sbb
fidivrs
and
rolb
fs
std
lds
stc
mov
dec
fs
repz
or
fimuls
cmp
sub
adc
mov
test
ret
addr16
mov
cmp
test
or
adc
repz
mov
inc
push
adc
add
ret
iret
jne
and
loopne
or
lock
sbb
lods
repnz
in
ret
into
xchg
scas
pop
lcall
add
xchg
sbb
mov
sbb
lahf
stos
lock
rcrl
std
test
dec
dec
sbb
test
mov
mov
dec
mov
repz
out
adc
stc
loope
int
insl
cli
aam
insb
dec
dec
cld
arpl
inc
mov
int3
in
int
and
or
push
out
neg
in
and
fidivs
imul
leave
push
and
pop
adc
mov
xor
cmp
sub
inc
xchg
or
mov
or
mov
cli
cmpsl
seto
daa
and
sub
dec
pop
mov
mov
xchg
adc
dec
pop
subl
push
shlb
cld
int3
add
pop
fwait
bound
pop
inc
mov
dec
mov
pusha
mov
adc
mov
lods
pop
in
hlt
or
enter
pop
mov
cwtl
pop
lcall
pop
sbb
mov
xchg
fbstp
mov
neg
adc
jmp
xchg
xchg
push
insl
cmpl
adc
jp
test
sub
jno
test
cmp
adc
mov
adc
aad
xchg
sub
mov
mov
data16
and
sti
add
pop
aad
rdrand
xchg
adc
sub
aam
or
mov
or
fcmovnb
xchg
xchg
in
ret
scas
std
filds
dec
xchg
jb
loop
and
xchg
xchg
popf
orl
test
push
sahf
and
add
out
imul
pop
stos
aam
add
jns
mov
cmp
popa
sbb
jbe
pusha
xchg
test
inc
ret
lret
int3
jmp
mov
pop
pop
pop
cmp
aaa
inc
popa
xor
pusha
fdivrl
jmp
in
xchg
mov
add
mov
cmp
jbe
jmp
mov
iret
sub
push
testl
flds
sub
mov
fcomps
dec
xchg
cmp
fsubrp
leave
iret
imul
mov
rcl
mov
cmp
dec
cmpb
adc
pop
xchg
mov
pop
insb
xchg
sbb
fs
lods
mov
stos
call
dec
aam
sbb
jmp
ss
lret
ss
inc
inc
xchg
mov
pop
sub
insb
fmuls
adc
jne
xor
scas
stos
aas
sbb
xlat
cmp
rcrb
dec
movsb
repnz
xlat
pop
xor
fwait
sbb
daa
dec
stc
xchg
cmp
aaa
jbe
out
aas
mov
cmp
pop
fsubrs
jb
sbb
jns
test
mov
or
add
neg
push
out
and
add
adc
jecxz
imul
andl
jns
jp
fdivs
ret
xor
out
xchg
int
mov
dec
adc
ret
or
mov
arpl
les
inc
and
sbb
mull
ss
xor
loopne
fdivs
mov
daa
xchg
mov
movsl
dec
std
mov
jns
xchg
inc
shlb
mov
into
fucom
imul
fidivl
aaa
arpl
outsl
pushf
jae
fisubl
lret
imul
jae
lea
cmp
add
xor
aaa
dec
cmp
loop
mov
test
out
adc
dec
jp
pop
mov
cld
sub
test
push
mov
lds
sub
lret
bound
outsl
sbbb
stos
pusha
sub
in
jnp
out
scas
idivb
xorb
jno
inc
pusha
in
lret
mov
daa
xlat
idiv
xor
cmpsb
push
leave
test
mov
inc
mov
dec
movsb
push
adc
lret
orl
adc
rcr
or
push
in
hlt
test
sbbl
scas
mov
je
xchg
xchg
in
jmp
sub
test
mov
mov
lcall
aam
cmpsl
stos
js
popf
lods
xchg
test
pop
add
imul
cmp
jne
int
inc
shlb
sbb
enter
lods
rclb
jns
imul
pusha
jecxz
fildll
xchg
shlb
xchg
push
mov
fnstcw
adc
mulb
lods
scas
scas
xor
andl
loopne
push
or
push
lret
iret
aas
sub
lds
sub
add
sub
inc
cld
sahf
xor
jmp
movsb
iret
jmp
jmp
dec
sbbl
mov
and
decl
int3
push
jb
jns
test
pop
jge
cmp
loope
std
mov
or
hlt
out
dec
inc
es
lcall
add
adc
or
out
sbb
das
cmpsl
xor
mov
jns
mov
daa
mov
lock
sahf
jbe
fwait
cmp
add
cmpsl
mov
push
cmp
jnp
jnp
mov
test
jnp
push
and
ret
dec
fcompl
pushf
out
sti
scas
or
and
mov
xchg
cs
mov
jg
iret
test
and
insl
jmp
dec
daa
mov
jmp
fildll
jl
sub
cmpl
cld
push
les
pusha
movsl
cmp
mov
inc
push
dec
mov
xor
sub
mov
addl
cmc
jle
inc
or
loop
push
sub
mov
loop
push
js
or
in
les
jmp
add
inc
out
add
xor
xchg
sbb
or
mov
push
std
icebp
lcall
lcall
push
int
loopne
arpl
push
aam
sbb
inc
mov
imul
xor
mov
fdivr
mov
mov
push
add
mov
cwtl
jge
clc
cmpsb
lds
dec
test
pop
pop
mov
pusha
adc
ret
and
jae
jle
sbb
jle
imul
shl
sub
push
repnz
jmp
jl
lds
aas
inc
mov
xchg
ljmp
loop
xor
mov
vpsadbw
jbe
add
js
jp
inc
or
jnp
into
xor
xchg
adc
pusha
lret
adc
cltd
insl
dec
insl
xchg
sbb
dec
or
add
or
sbb
fsubl
xor
dec
lea
mov
popf
jne
adc
add
popa
mov
addr16
mov
subb
dec
xor
in
pop
add
call
mov
pop
xchg
sti
push
cmp
rcll
sub
repz
pop
push
scas
dec
repnz
and
sbb
adc
loope
lods
stos
imul
push
mov
rolb
inc
enter
daa
mov
lret
js
addr16
test
out
add
inc
sub
and
or
call
test
imul
add
mov
inc
add
mov
xchg
aas
jnp
sub
das
ja
mov
clc
jae
mov
mov
adc
xchg
xchg
dec
pop
ljmp
rcll
in
mov
or
jle
in
rcl
xchg
ret
insl
loopne
adc
push
inc
mov
adc
outsb
xchg
mov
cmpb
imul
stc
jp
push
lahf
jbe
cmp
cmp
push
pop
fstpt
rol
stc
or
es
nop
pop
xlat
aas
das
xlat
loope
jns
bound
mov
out
daa
int3
add
push
xlat
sub
ljmp
test
loopne
push
cmp
shl
int
pop
pop
repz
jp
jnp
icebp
ret
clc
loopne
mov
jg
and
test
mov
add
dec
inc
popa
push
jle
lds
fwait
out
dec
pop
inc
jns
xchg
cmp
stos
fucom
sahf
inc
nop
in
dec
les
ds
mov
les
sbb
in
bound
pusha
std
xchg
lahf
mov
jb
sbb
insl
dec
sub
mov
icebp
sbb
mov
fldenv
sbb
arpl
fwait
cmp
cmp
adcb
sbb
sbb
ds
test
dec
leave
xchg
clc
ret
push
ret
inc
rclb
xor
pusha
pop
add
or
insl
or
cmc
loop
loope
sub
and
mov
cmp
xchg
push
test
ftst
jo
repz
sarb
pop
mov
jb
subb
mov
iret
mov
lea
jg
mov
ficoml
hlt
push
sbb
or
fists
dec
push
outsl
mov
ds
xchg
mov
sti
xchg
or
pop
cmpsl
arpl
mov
ret
call
rcll
scas
sub
push
leave
jae
pop
test
out
hlt
push
jg
ds
fsubrs
ja
sub
push
cmp
fs
jne
push
shrl
lret
sbb
push
push
dec
push
pop
cmp
stos
or
mov
repnz
and
fldt
cmp
incl
add
push
push
js
sub
aam
loope
mov
adc
jle
xchg
lods
mov
in
jmp
test
aas
pop
nop
and
jbe
push
jp
test
add
push
lea
and
arpl
clc
das
pop
dec
iret
pop
and
mov
jno
fcmovbe
inc
dec
xchg
xor
or
jge
imul
pop
loopne
push
out
push
add
sbb
push
div
jnp
dec
dec
add
shlb
pop
test
adc
xchg
les
inc
inc
pusha
in
and
aam
imull
sub
ret
ljmp
sub
push
fidivs
cmp
xchg
xchg
dec
and
idivl
ljmp
mov
lahf
xchg
test
cmp
mov
lahf
mov
sbb
xchg
xor
fdivrl
in
cmp
popf
push
mov
jmp
add
stos
xor
sbb
pop
in
push
add
push
dec
push
mov
mov
mov
lods
mov
sbb
fildll
push
mov
sub
jg
xlat
mov
push
popf
xor
xor
push
sub
mov
cmpb
lods
cltd
insb
inc
pop
das
aad
pop
lock
decb
jne
xchg
pop
insl
shrb
test
adc
add
or
test
test
xor
add
fsub
push
jb
inc
or
cmp
sbb
cs
add
sbb
jl
xor
shlb
sub
push
inc
or
xchg
push
and
insl
jmp
aaa
xchg
insb
std
popa
sub
stos
pop
adc
push
sub
or
mov
pop
and
pop
adc
pop
scas
jg
sbb
dec
sbb
data16
xor
fsubrl
xlat
xlat
out
cmc
jp
in
das
pop
adc
xchg
pop
idivb
inc
adc
into
bswap
cmp
cmp
fiadds
jae
mov
mov
fnstenv
push
and
xchg
jmp
mov
stc
xchg
mov
mov
popa
into
mov
popa
mov
or
xor
sahf
dec
pop
or
push
inc
inc
rcll
rcrb
repnz
inc
lcall
push
push
movsl
xor
push
out
orb
pushl
scas
aad
andl
inc
sub
test
call
xchg
std
js
sti
sti
xchg
mov
jo
or
xchg
pushf
loop
cmpsl
das
lock
mov
shl
mov
jbe
neg
cmpsl
sbb
dec
jge
lea
add
shrl
stos
insb
pop
into
or
lea
mov
mov
mov
fsts
lret
scas
or
push
xor
fiadds
stc
sbbb
pusha
mov
outsl
ret
jp
jb
lcall
int
jle
test
pop
cltd
xlat
aaa
lea
jo
pusha
push
and
sub
add
inc
adc
pop
fimull
dec
rolb
push
cmpsb
fimuls
sub
adc
xor
or
jnp
sub
mov
push
xchg
push
and
nop
out
lods
push
sub
mov
lds
xchg
aas
into
negl
pop
jmp
dec
enter
and
pop
outsl
mov
sub
push
xlat
cmp
xorl
and
sbb
push
testb
call
in
xchg
adcb
clc
test
dec
xor
fwait
push
insl
lahf
jecxz
js
mov
sub
or
test
inc
addb
pop
lock
dec
sbb
inc
fdivrl
test
jle
dec
sbbl
push
test
jbe
repnz
jmp
xchg
mov
and
mov
das
pop
lret
orb
push
push
mov
movsl
call
or
popa
adc
int
cmpsl
jae
jp
cmp
lret
outsb
pop
arpl
mov
loope
cmpsb
jno
fimuls
iret
mov
fwait
bound
repz
or
xchg
inc
cmp
mov
es
xchg
sub
idiv
inc
cltd
xchg
cmp
std
push
mov
in
dec
pop
aaa
dec
inc
fs
sub
pop
xor
cli
lcall
call
xchg
popf
add
mov
in
aam
iret
xchg
jge
iret
sti
pusha
leave
xor
sahf
xchg
outsb
leave
jle
outsl
cmpsb
mov
test
dec
adc
sti
pop
add
cmp
sub
cmc
enter
pop
in
andb
sarb
scas
push
loope
jmp
push
cmp
dec
dec
jmp
fistps
fwait
or
xor
loopne
pop
push
adc
enter
addb
mov
rclb
inc
scas
add
pop
mov
adc
adc
jmp
decb
mov
inc
xor
out
fcoml
sbb
and
outsb
aaa
cmpsb
cld
bound
in
clc
pop
add
or
sahf
jb
pushf
shr
cmc
add
scas
mov
pusha
jb
adc
inc
mov
fdivrs
imul
xchg
and
cld
pop
loope
and
push
sub
xchg
sbb
or
sarb
insl
rclb
cmp
lret
sti
dec
push
lcall
cld
fstps
sub
lods
in
pushf
aas
cld
adc
adcb
lea
push
out
aas
clc
xor
fisttpl
clc
fiadds
inc
test
pop
dec
jae
cmp
or
call
dec
stos
pop
mov
jmp
movsb
xchg
ret
or
mov
jb
rorl
push
jb
hlt
in
push
call
dec
cmp
imul
lods
cs
fnsaves
fcompl
loop
push
push
push
jle
dec
scas
jge
sub
mov
push
testb
in
imul
sub
fsubl
mov
sub
loop
cmp
sub
xchg
dec
push
push
fstpt
add
xchg
pop
ljmp
xor
lea
stc
jnp
mov
mov
mov
sub
adc
imul
jle
sahf
ljmp
aas
fxtract
adc
adc
in
cmp
inc
loop
jg
and
shrb
jbe
inc
ret
fstpl
fucomi
stos
jp
in
int
pushf
xchg
jb
test
andl
aam
fildll
outsb
pop
pavgb
sbb
mov
lret
mov
test
or
aam
xchg
into
fstl
sbb
loop
xchg
ljmp
iret
mov
es
mov
or
xor
and
movsb
test
mov
jmp
mov
pop
test
mov
push
mov
dec
and
ud0
pop
inc
aaa
jmp
psubusb
lret
dec
icebp
xchg
adc
sub
aad
pop
sti
cmp
insb
ja
adc
jae
stc
sub
pop
dec
shlb
lcall
push
push
int
fmull
shrb
adc
dec
mov
test
or
xor
or
fsts
sbb
pop
outsl
fwait
dec
arpl
dec
cmp
in
or
jne
cmp
sbb
jl
mov
in
scas
or
dec
lods
cli
lahf
repz
xchg
or
jae
fnclex
rcr
outsl
std
push
mov
outsl
or
cmp
dec
or
aad
mov
mov
mov
add
in
aam
pop
jns
mov
and
jmp
mov
pop
mov
sub
stos
mov
jg
cmp
dec
lock
repz
mov
orl
sub
fbld
in
pop
push
shll
mov
or
hlt
push
data16
into
fsts
roll
cli
sbb
cmpsl
fwait
insl
sti
jle
and
xor
adc
loopne
std
mov
and
mov
mov
shrl
pop
cmp
mov
test
leave
xor
subb
js
test
cmp
jo
ja
fwait
sub
sub
loop
cmp
mov
mov
je
adc
jns
gs
les
mov
mov
mov
std
fld
cmp
sub
test
out
adc
push
mov
fadd
shrb
xchg
stc
cmpsl
jne
dec
pop
lds
adc
out
pop
cmpsl
and
lahf
push
iret
lcall
iret
sbb
push
adc
imul
or
mov
bound
push
or
jnp
subl
pop
js
out
shrb
sbb
jns
icebp
mov
xchg
hlt
mov
je
adc
sti
rcl
sahf
sub
dec
pop
push
mov
sbb
sbb
test
push
sub
stos
inc
enter
stos
popf
dec
xchg
mov
jg
cmp
sarl
dec
dec
hlt
mov
xchg
orb
and
sahf
into
jecxz
jge
cmp
mov
dec
decl
dec
xchg
int3
sub
push
rcll
add
pusha
pop
out
pop
adc
dec
lahf
into
mov
in
movsb
addl
lret
jno
sub
mov
scas
or
inc
dec
mov
mov
addr16
sbb
into
rcl
pop
xor
outsl
les
sub
out
mov
inc
inc
xor
lret
and
fcompl
loope
xor
inc
mov
stc
scas
xlat
xchg
cmp
xor
stos
add
dec
xchg
mov
xchg
mov
mov
ficoml
mov
inc
call
pop
jle
xchg
cmp
pop
cld
aad
or
in
ljmp
es
push
out
or
mov
sbb
repnz
lea
jne
xchg
idivl
dec
push
lods
xor
mov
cmpl
in
push
jle
jge
add
xor
jbe
test
test
insb
ds
enter
outsl
or
pop
mov
jle
in
inc
sub
sub
fs
cmp
popl
mov
andl
fstpl
loop
dec
cld
jmp
les
call
inc
mov
mov
data16
fidivl
clc
insb
or
sbb
push
mov
sbb
dec
mov
or
popf
rolb
popf
cs
roll
add
adc
and
mov
out
cmc
inc
or
or
jp
inc
xor
sub
xchg
rorl
mov
lahf
add
xor
jmp
je
pop
xor
mov
lods
mov
lcall
mov
ss
out
inc
xor
dec
movsb
lret
aaa
movsl
mov
lahf
dec
inc
xor
sub
loope
cmp
test
lea
scas
push
jne
cmpsb
add
nop
xor
frndint
jo
sbb
sbb
mov
out
js
data16
xchg
xor
or
xchg
in
xor
test
sub
fimuls
je
stos
aas
adc
push
gs
stc
insl
add
out
mov
insl
xchg
mov
fldt
dec
aam
mov
cmp
jmp
fimull
xor
jno
out
repz
cld
arpl
xor
push
pop
out
cmp
sbb
push
pop
push
add
fadds
stos
inc
mov
fcomip
or
fists
push
cmp
mov
push
inc
js
mov
mov
mov
faddp
lahf
stos
mov
mov
xchg
cmp
pop
mov
incl
xor
pop
arpl
jge
in
adc
inc
and
imul
xor
xchg
add
insl
stc
jb
mov
pop
movb
scas
jne
out
cmp
out
out
push
xor
dec
push
data16
jmp
popf
jge
jbe
jo
stos
int
shrl
mov
out
cmp
ficomps
jns
inc
cwtl
cs
daa
push
jbe
sbb
mov
xor
mov
fidivs
lods
inc
insb
andb
dec
je
fadd
xor
gs
mov
ds
das
sbb
pop
adc
jle
aaa
adc
scas
ja
pop
pop
dec
jle
or
mov
adc
push
shlb
adc
pop
nopl
or
mov
sbb
fwait
mov
xor
setl
cmp
mov
sbbl
lods
jb
or
mov
lret
adc
icebp
push
pop
or
pushf
xchg
hlt
sarl
clc
xchg
xchg
pop
xlat
pop
fimuls
inc
jmp
add
gs
jecxz
cwtl
int
inc
xchg
jae
add
aas
inc
cmp
xchg
pushf
js
pop
stos
fidivs
xor
shll
shll
fdivrp
sarb
xor
sub
js
pop
data16
and
or
mov
dec
pop
cmpl
mov
adc
cmp
roll
fidivs
gs
lods
or
dec
push
mov
test
and
clc
xor
mov
sub
cld
call
daa
xchg
cli
mov
push
out
jbe
and
pop
and
jne
in
inc
or
test
call
mov
cmp
inc
jge
xor
jle
nop
ret
adc
cmpsl
hlt
jno
add
pushf
sub
loopne
nop
leave
les
fidivs
xlat
daa
dec
xchg
sbb
adc
movsb
sti
and
aaa
fistl
sbb
pop
jmp
popa
jecxz
sbb
xchg
mov
pop
sbb
mov
shll
lock
imul
mov
push
add
bound
and
sub
faddl
stos
mov
xor
insb
scas
xchg
sarb
imul
mov
fldt
adc
mov
mov
int
push
and
xor
mov
fdiv
mov
inc
push
hlt
lds
lods
jl
push
sub
jge
sub
inc
sti
pop
mov
jns
push
push
arpl
mov
xor
sub
andb
lea
jnp
ljmp
fmul
repz
in
fwait
inc
xchg
inc
push
sub
xor
int3
adc
mov
shlb
je
and
mov
push
xor
xor
xor
mov
or
das
es
dec
xor
or
in
aam
push
add
shlb
xlat
in
xor
rdmsr
sub
hlt
jecxz
cli
jecxz
jo
mov
nop
lods
mov
cltd
and
scas
ljmp
lcall
lcall
js
leave
or
popf
sub
pop
sbb
cli
pop
pop
cwtl
imul
call
sub
lods
inc
dec
pop
rorb
cltd
jmp
xor
xchg
in
dec
pop
or
das
adc
dec
adc
lahf
mov
scas
ljmp
sub
lock
push
insb
mov
adc
test
out
xchg
cmpsb
cmp
pop
adc
sbb
mov
popl
ljmp
incl
sub
push
lock
inc
dec
add
lret
cmp
out
dec
iret
jne
push
dec
or
xor
sbb
push
outsb
cld
test
movsb
mov
cmp
pop
sbb
sbbl
xchg
mov
vucomiss
and
hlt
and
dec
lods
in
mov
int3
fdivl
shrl
sar
lods
jecxz
inc
aas
mov
cmp
daa
xchg
mov
push
xchg
lock
outsb
lea
sar
fldl
sub
jb
pop
and
pop
xchg
imul
jmp
sbb
or
sbb
imul
add
addr16
leave
aas
adc
xor
xchg
sub
scas
enter
nop
mov
repz
pop
pop
add
outsl
ret
es
fs
cmc
cli
xchg
fdivr
fmuls
cmp
dec
pushf
arpl
stos
add
mov
arpl
push
and
inc
or
std
ret
inc
jmp
rcr
cmp
push
jbe
stos
je
sub
jmp
cwtl
std
fmul
arpl
nop
mov
cmp
les
andl
add
lahf
out
int
mov
lds
lds
sub
dec
push
filds
add
ss
pop
xlat
xchg
xor
out
sbb
xchg
cmc
mov
jle
cmp
into
out
mov
xchg
xor
sahf
mov
mov
push
jbe
pop
data16
sbb
repz
movsl
movsl
mov
or
inc
add
xchg
dec
call
test
jo
pop
mov
das
orl
scas
cmp
fnsave
loopne
xor
sbb
repnz
clc
neg
mov
jle
out
sti
testb
pop
sbb
xchg
push
ss
pop
push
jno
inc
and
mov
jg
and
jno
fwait
imul
xor
and
mov
adc
adc
pop
mov
nop
mov
mov
cwtl
insl
mov
lahf
shll
and
test
adc
mov
pop
jb
pop
idivb
pop
int
mov
jo
xchg
sub
loopne
cwtl
stos
addr16
mov
scas
jle
sbb
mov
in
jno
popa
lret
mov
or
and
and
cmp
stc
xor
xchg
push
test
mov
cld
jnp
pop
or
cmpsb
cmp
arpl
add
cmp
imul
out
jo
aaa
pop
aaa
mov
dec
xchg
pushf
les
push
mov
repnz
ret
mul
aaa
jge
loope
addr16
add
pop
mov
dec
cmpsl
dec
aam
pop
out
mov
rcrl
inc
aas
movsb
lahf
jno
shll
cmp
pop
mov
and
sbb
or
dec
sbb
sbb
pop
or
notl
idiv
lea
mov
sbb
jno
xor
jmp
ret
loope
repz
mov
shrl
mov
shl
or
aam
mov
adc
fstps
push
sub
mov
es
pop
push
iret
pop
push
xchg
xchg
dec
sahf
dec
cli
dec
fldenv
scas
push
cmp
shrb
sbb
icebp
push
fidivrs
cmp
out
pop
insb
std
imul
pusha
add
sahf
popa
movsl
lret
adc
idiv
lcall
mov
pop
movsl
popf
mov
fiadds
mov
pop
nop
adcl
int
push
ret
sub
cmp
negb
and
adc
sbb
ljmp
lock
cmp
pop
outsl
inc
mov
cmp
inc
add
popa
add
or
mov
es
push
lds
sbb
daa
icebp
iret
int
cmp
aad
cmp
lcall
rolb
xor
sub
adc
sbb
xchg
imul
test
mov
jno
jmp
iret
sbb
mov
mov
out
xchg
hlt
rclb
lds
mov
sbb
leave
ds
movsb
stos
sbb
outsl
shl
push
imul
testb
xchg
fwait
adc
notb
jae
mov
cmp
lret
sub
or
or
inc
inc
jae
ds
push
icebp
jnp
lea
rol
sbb
mov
incb
mov
orb
xlat
cli
fstps
xchg
pop
xor
ret
ret
xchg
out
xchg
or
fsubr
add
test
push
mov
xchg
ret
shrb
adc
adc
test
pop
and
sub
xchg
jnp
arpl
dec
mov
sub
lods
pop
sti
popf
sbb
cmpsl
xchg
mov
pop
imul
sbb
notb
inc
aad
cmp
fistps
adc
out
inc
push
fwait
rcr
mov
xor
cmp
or
dec
jne
test
fisttpll
lahf
aaa
and
cmpsl
xlat
ja
pop
cli
xor
mov
sub
aad
pop
mov
aad
and
int
fwait
div
and
in
adc
adc
xor
hlt
and
jo
sub
mov
out
fwait
test
inc
stos
add
xchg
or
std
loope
je
inc
shll
and
aaa
scas
mov
lea
in
movsb
or
sbb
in
xlat
and
into
hlt
jmp
aaa
arpl
pop
xchg
ret
pop
mov
inc
xchg
jns
dec
ljmp
bound
mov
mov
aaa
test
inc
xchg
dec
push
enter
cwtl
jge
cmc
dec
adc
lcall
pop
in
out
fwait
cltd
xor
dec
mov
sbb
or
and
test
data16
or
push
lahf
xchg
add
inc
adc
jb
ljmp
add
adc
add
std
cmp
mov
jmp
cld
dec
imul
xchg
inc
xor
mov
daa
push
mov
test
mov
jl
movb
xor
jle
popa
xchg
sti
mov
loop
xchg
movsb
icebp
push
cld
test
xchg
jnp
inc
xchg
and
mov
rcrl
movsb
fisttpll
sbb
xor
mov
dec
call
mov
cmp
test
xor
sbb
sahf
ret
aas
mov
push
add
out
or
mov
xor
cmc
lret
jae
inc
sub
shlb
addr16
xchg
pop
adc
leave
shr
sar
cmpsl
mov
adc
jb
out
mov
jp
ja
sbb
lods
push
mov
mov
aam
in
scas
lods
iret
call
cwtl
fsts
outsb
push
xor
shrl
inc
int3
sub
jb
jbe
dec
sub
or
lret
push
cmp
in
test
mov
loop
fadd
dec
test
sub
mov
cmp
adc
ljmp
cmp
xor
out
pop
mov
mov
dec
or
push
negl
xchg
push
mov
inc
gs
mov
xchg
fs
mov
bound
stos
adc
popa
ficoml
data16
je
test
sub
pop
xchg
scas
and
vaddsubpd
cmp
inc
mov
fdiv
jecxz
jecxz
sbb
or
pushf
mov
sbb
jl
inc
test
fiaddl
leave
arpl
rcll
movsb
icebp
scas
xchg
outsl
sub
jae
jae
mov
xchg
out
mov
jb
jg
es
cmp
inc
out
incl
leave
push
out
mov
out
mov
xor
mov
rol
lcall
movsl
js
dec
cmp
adc
sub
xchg
fidivrl
xchg
test
in
xchg
mov
iret
dec
sbb
fisttpll
xchg
push
cmp
mov
dec
cmp
fwait
into
dec
push
pop
es
xchg
dec
and
fwait
pop
sbb
jb
xchg
jle
and
dec
mov
mov
mov
pop
scas
mov
shrb
push
dec
in
xchg
fiadds
testl
sbb
rcrb
inc
lock
cli
mov
cs
movsl
outsb
mov
add
mov
lcall
push
mov
push
in
pop
lods
int
adc
inc
ljmp
mov
sbb
jg
push
sbb
call
xlat
cmp
add
sbb
sub
stos
aad
mov
xor
adc
inc
mov
imul
lcall
inc
js
mov
ss
out
cmc
mov
xor
mov
dec
add
mov
sub
pop
out
jl
jns
repnz
fdivs
add
leave
movsl
sti
inc
mov
or
pushf
sub
mov
mov
jbe
ret
cld
jne
sbb
test
jne
imul
imul
jecxz
cmc
add
js
outsb
cld
fcomps
pop
push
insl
push
es
pop
adc
xchg
cld
popf
test
jg
mov
arpl
mov
xor
xchg
adc
jp
pop
or
ljmp
mov
insb
dec
inc
mov
push
out
mov
adc
fstp
in
lea
outsl
jo
clc
mov
data16
adc
repz
ja
xchg
and
xlat
xor
divl
test
lods
std
mov
mov
lods
ret
inc
bound
mov
xor
popf
push
lds
push
mov
mov
ss
hlt
inc
xor
or
popf
adcl
sbb
xor
popf
fsub
cmp
cmp
dec
inc
mov
jmp
dec
add
bound
jecxz
dec
jmp
jge
shll
push
clc
sahf
push
pop
leave
pop
fst
cmp
xchg
cmc
mov
mov
loope
ljmp
dec
sbb
xor
ffreep
outsb
sarl
lds
or
sahf
into
out
pop
inc
push
lock
popf
mov
jl
and
out
push
hlt
jecxz
loop
movsb
mov
sbb
out
outsb
adc
jmp
outsl
mov
xchg
and
push
insb
xor
dec
sahf
sarl
je
shrb
cmp
pop
mov
movsb
out
adc
pop
cmp
add
mov
pop
xchg
push
test
xor
out
out
arpl
push
cmp
shll
aas
cmove
dec
test
popa
fs
loop
pushf
cmp
lahf
xorl
xor
pusha
xchg
nop
addr16
pop
insl
ficomps
inc
add
or
add
gs
adc
adc
inc
aam
push
filds
leave
mov
push
loop
pop
push
jmp
and
adc
movswl
into
sbb
insb
repnz
push
mov
iret
fildl
xchg
or
movsb
int
mov
xor
je
cmp
push
jns
cmp
xchg
lret
cli
addl
scas
imul
cmp
xchg
cmp
adcb
jp
inc
pop
cli
inc
push
stc
ret
idiv
mov
inc
jl
rorb
xchg
test
dec
movsl
jl
outsb
xchg
insb
clc
or
push
out
add
push
mov
arpl
into
mov
sub
test
loopne
mov
je
pushf
sbb
xchg
dec
xchg
sbb
mov
lea
add
sub
outsb
dec
add
and
movsb
jmp
mov
idivb
movsl
popf
icebp
aam
cld
sbb
nop
lds
data16
enter
int
out
hlt
pop
insb
pusha
dec
mov
and
jb
mov
mov
arpl
movl
outsl
fidivl
mov
inc
movsb
jbe
ret
loope
fndisi(8087
sarb
aas
mov
je
lea
stos
dec
lea
ficoms
jmp
imul
sbb
push
xor
mov
sarb
fwait
test
push
push
hlt
sbb
push
inc
int3
sbb
mov
sbb
jge
test
or
cmp
sub
movsl
sbb
dec
inc
sub
sbbl
and
frndint
and
test
stos
daa
mov
mov
jae
out
xor
or
insl
orl
jne
enter
sbb
mov
or
xchg
adc
dec
mov
inc
xor
cli
stos
adc
rclb
iret
cmp
or
mov
lret
faddl
fcoml
inc
js
and
ljmp
push
pop
fidivrl
mov
mov
jnp
cmpsl
jecxz
push
cmp
cmp
push
testb
mov
jmp
test
ret
jno
addr16
mov
mov
xchg
test
repz
lds
jmp
fdivp
jnp
adc
lods
fldcw
push
mov
fcomi
iret
mov
es
call
dec
push
test
inc
xlat
enter
lret
sub
xor
mov
mull
cmp
adc
cld
pop
pop
movsb
mov
mov
pop
cmp
xor
pop
xor
or
mov
je
movsl
or
xchg
or
orb
insb
adc
adc
test
and
push
popa
inc
cmpsl
adc
stos
outsl
sub
outsb
lret
cltd
push
lret
push
push
stos
adc
js
jo
dec
push
dec
movsb
mov
push
aad
cmp
idivl
adc
subl
inc
insb
sub
jo
stos
or
lahf
xchg
cmp
loop
lret
out
adc
cs
aaa
add
cmpsl
cmp
push
sub
xchg
pop
iret
aaa
mov
push
xchg
outsl
sbb
fdivrl
mov
sub
mov
stos
repnz
push
mov
xchg
mov
lahf
jg
movsl
inc
mov
push
sbb
adc
jmp
xchg
dec
push
mov
push
popl
pusha
bound
scas
inc
imul
lods
negb
sub
inc
dec
ja
in
cld
daa
cmc
call
sub
std
sbb
stos
xor
xchg
adc
sahf
xor
stos
or
out
lahf
xchg
or
sub
push
or
test
push
cltd
push
leave
shlb
lea
xchg
inc
sti
push
add
xor
in
fs
mov
lds
xor
push
call
sbb
inc
clc
inc
inc
pusha
sub
subb
xchg
inc
cmpsl
jg
push
sub
mov
adc
mov
push
push
mov
shll
add
mov
shrd
or
adc
test
jle
mov
mov
in
inc
adc
imul
inc
xor
xchg
pop
loop
pushf
and
add
inc
and
adc
adc
movsl
lods
or
in
clc
mov
inc
xor
bswap
loopne
repz
test
xor
mov
xor
or
adc
push
call
jbe
cltd
adc
or
sbb
pop
sbb
or
xchg
jae
lods
cmp
push
and
aam
push
repz
scas
mov
inc
stos
mov
jne
cmpsl
test
mov
xor
aad
push
mov
mov
std
mov
scas
sub
mov
out
fnsave
lods
adc
dec
orl
mov
inc
ror
mov
xchg
sub
xchg
dec
push
xlat
lock
mov
sub
mov
push
rcrb
roll
test
addr16
mov
and
jns
sbb
push
add
and
cli
inc
mov
push
dec
lea
mov
into
and
test
sub
les
inc
mov
or
push
jmp
sub
sarb
lcall
dec
cmp
or
lods
frstor
hlt
stos
xchg
sub
xchg
test
mov
scas
adc
xor
mov
pop
addr16
jbe
sub
es
aam
sbb
xor
jno
mov
xor
inc
xchg
jl
enterw
pushf
xor
imul
adc
pushf
jecxz
fisttpll
xchg
sbb
and
sbb
jg
pop
in
popf
or
adc
out
fstps
jge
je
inc
lock
mov
xchg
push
rorb
xchg
jb
mov
rcrl
fwait
mov
fnstcw
sbb
ret
or
fwait
adc
out
lret
sbb
imul
int3
call
pop
mov
jmp
arpl
adc
sub
or
hlt
repnz
jnp
mov
shlb
adc
sub
fsts
lods
push
ficomps
cmp
mov
cmp
divb
repnz
jne
mov
fiaddl
mov
ret
or
cli
outsb
xor
div
movsb
push
xor
xchg
mov
sarb
js
cmp
js
jmp
mov
sub
in
inc
leave
sbb
loopne
daa
cld
call
je
dec
stc
and
mov
adc
pop
pop
leave
cmpsl
add
jnp
mov
cld
or
icebp
out
out
loopne
vmovss
push
inc
xchg
or
repnz
mov
and
xlat
std
xchg
jne
cli
sub
loopne
sub
repnz
ret
push
sbb
fldenv
cli
lods
pop
out
sbb
data16
fxam
sbb
adc
xor
scas
mov
mov
pop
addr16
mov
ljmp
iret
jbe
lcall
or
std
sub
cmp
jge
mov
dec
je
out
imul
shlb
cmc
inc
xchg
fiaddl
or
int3
mov
fsubs
mov
and
cmp
jno
or
out
rorl
mov
es
lret
dec
jo
notl
aaa
xor
mov
int3
cs
cs
ffreep
mov
mov
jecxz
jne
ret
and
hlt
pop
pop
mov
jae
cmp
loop
jp
xchg
jnp
dec
mov
loope
and
into
out
dec
mov
push
sbb
shl
xchg
xor
fisttpl
cmp
pop
mov
ret
or
xchg
gs
dec
and
push
dec
lea
aad
imul
imul
in
jg
xor
pusha
stc
ja
movsl
adc
loope
inc
jae
pop
add
pop
xchg
xchg
pusha
and
rorb
pushf
shll
shll
mov
and
push
adc
daa
mov
pusha
sarl
test
mov
pop
mov
mov
jp
pop
loopne
aad
test
fisttpl
jp
dec
xorl
sbb
xor
jle
add
push
dec
scas
sarb
push
cltd
xor
enter
dec
neg
stos
jge
int
pushf
lock
stc
pop
das
xchg
data16
cltd
cmp
push
sub
xor
loop
inc
mov
inc
xor
xchg
repz
or
push
mov
push
mov
orb
xor
subb
pop
dec
ret
std
pop
and
test
cmpsl
test
das
mov
jnp
jnp
jl
sub
fsts
arpl
and
mov
sbb
aas
and
push
or
fwait
xchg
roll
arpl
je
add
sub
adc
js
and
push
and
mov
ss
add
in
fcoml
add
out
push
push
fldenv
jne
jns
dec
xor
idivl
dec
fiaddl
fprem1
xchg
arpl
ret
shll
xor
int3
and
adc
push
add
ljmp
jmp
ret
cmp
and
pop
cmc
insb
inc
and
lds
xor
dec
push
aaa
cwtl
test
sbb
stos
test
cmp
sbb
hlt
push
jmp
mov
mov
xchg
sub
jmp
outsl
cmp
cs
fcompl
lock
push
fistpl
dec
fsubl
cmp
add
js
lds
aas
jg
mov
dec
lcall
adc
sub
cltd
or
repz
and
mov
mov
es
jnp
aaa
xchg
cmp
ljmp
inc
sbb
and
add
mul
cmp
mov
pop
out
mov
rclb
test
dec
call
outsb
fisubl
push
stos
mov
mov
xor
xchg
into
mov
mov
inc
test
mov
aad
jmp
popa
pop
cli
lods
jo
add
arpl
cld
ret
push
stc
jnp
test
sub
push
mov
cmp
sub
nop
incl
mov
adc
test
adc
jne
adc
and
shll
sub
mov
decl
and
dec
xor
cmc
into
mov
leave
lea
repz
les
mov
and
call
stos
aas
js
dec
jnp
imul
ja
push
fnstenv
hlt
inc
mov
hlt
mov
xor
pop
push
push
hlt
mov
inc
les
ret
jp
test
inc
push
xchg
add
popf
aam
mov
xchg
cmp
insl
outsb
iret
jnp
jno
ljmp
insl
inc
jecxz
loop
xchg
cmp
out
scas
test
sub
add
jo
lods
sarl
sbb
lds
cmp
inc
and
iret
dec
sub
jmp
mov
aam
inc
int
push
push
call
lret
cmp
subb
or
jno
ds
and
dec
or
pusha
test
jns
and
into
mov
adc
jmp
dec
xor
xchg
jmp
mov
sub
push
out
arpl
enter
mov
rorb
dec
push
pop
push
or
loopne
notb
je
dec
and
and
icebp
xchg
pop
insb
pushf
sub
imul
xchg
mov
pop
aam
pusha
xor
sbb
mov
add
ds
adc
arpl
xchg
call
xchg
xor
pop
push
and
gs
mov
mov
je
int
cmp
leave
ljmp
cltd
dec
fisttpll
and
xchg
dec
jecxz
pop
inc
or
cmpsl
mov
scas
fsubl
idiv
ja
movsl
jb
aam
nop
insb
insl
xchg
push
fildl
int
push
out
rcrb
pop
lods
aad
call
roll
out
cmp
vorps
in
jb
outsb
test
sub
and
mov
mov
mov
aaa
push
subl
cwtl
and
pop
sahf
jge
outsl
idivb
xchg
push
daa
push
fsubl
fidivl
cmp
pop
std
xor
into
xchg
pop
push
rcll
fst
lea
clc
mov
fdivl
aam
jecxz
jge
push
dec
jns
js
pop
push
lret
loopne
mov
lds
int3
or
mov
imul
enter
sub
cmc
mov
mov
loope,pn
xor
push
ss
adc
cmpsl
add
cwtl
pop
ret
inc
add
xchg
xor
sahf
adc
adc
lret
and
lcall
sbb
cmpsb
sub
dec
push
rclb
push
push
xchg
cmp
stos
add
xchg
bound
out
push
inc
sbb
pop
mov
and
xor
fisubs
inc
mov
cmc
std
lods
sbb
or
aad
test
test
cmpsb
mov
inc
hlt
fimull
xor
xor
enter
dec
out
ret
jbe
add
mov
or
push
bound
out
loopne
sbb
scas
pop
dec
sub
popa
adc
mov
mov
add
adc
popa
sbb
ljmp
jno
adc
addb
fwait
or
xchg
dec
leave
stos
and
insl
les
dec
int
mov
or
inc
dec
sub
inc
aad
pop
jnp
mov
cmpsl
xor
fnsave
ficompl
cli
arpl
arpl
mov
cmp
xchg
cmp
pop
out
icebp
sub
mov
xor
vphaddbw
mov
nop
in
outsl
cltd
and
push
jb
aam
aas
cmp
sub
or
xor
add
out
pusha
call
ja
jae
insb
adc
pop
pusha
idivb
jge
cmp
add
add
push
pusha
jno
dec
jecxz
mov
sub
pop
dec
test
shlb
cmp
mov
faddp
dec
dec
insl
xchg
ret
push
rcrl
and
push
xor
mov
subb
aaa
in
pop
pop
mov
cmp
or
xor
adc
push
xchg
add
push
jae
jb
test
aad
fbld
fsts
push
rcrb
mov
nop
inc
fisubs
inc
pop
sbb
outsb
push
xchg
ret
inc
pop
sbb
das
ffree
or
mov
sub
fcmovb
out
pusha
lds
and
fstpl
bound
idivl
mov
push
andl
rol
pop
lret
shlb
mov
mov
or
js
sub
mov
push
sbb
imul
mov
dec
cmp
stos
dec
js
push
gs
jmp
cmp
mov
xor
pop
lds
jl
lock
mov
shrb
ret
xchg
jg
dec
outsl
fabs
andl
lock
lahf
repz
pusha
sbb
ret
inc
cmpsb
jnp
jecxz
hlt
push
jno
test
fidivs
dec
daa
inc
jg
mov
les
hlt
inc
pop
push
pop
add
gs
fadd
test
inc
push
pop
js
jg
jmp
mov
or
xchg
pop
inc
clc
popf
stos
inc
sbbl
lea
out
sbb
idivl
pop
outsb
or
lds
jle
inc
fcoms
sub
mov
movsb
lcall
or
orb
clc
out
imul
aad
lds
lret
xchg
push
fisttps
or
sbb
sbb
jns
ret
bound
inc
ss
in
xchg
test
scas
or
mov
test
push
or
jo
repz
add
aam
xor
movsb
psrlw
daa
popa
sarl
repnz
popa
fsub
cmp
pop
int
sub
cs
lret
ret
hlt
lret
and
xor
outsl
pop
adc
outsb
xor
mov
push
in
pop
xor
das
mov
stc
mov
loope
imul
out
add
xor
xlat
icebp
stc
mov
clc
or
std
jle
fwait
pop
fcoml
add
es
cmp
sbb
xchg
bound
out
cld
pop
imul
mov
add
int3
sbb
popa
push
sub
movsl
pop
jbe
sub
nop
jae
xchg
pop
jne
cmp
mov
aad
mov
mov
int3
jae
cmp
pop
cmp
push
add
pop
fnsave
lret
sbb
xchg
sub
adc
fbstp
data16
inc
mov
xor
arpl
movsl
je
push
xchg
or
xchg
jns
jb
mov
mov
cld
in
data16
aaa
out
dec
push
mov
scas
pop
jmp
inc
or
sarl
xor
mov
mov
inc
pop
cli
xchg
mov
pusha
adc
pop
daa
xor
aaa
nop
shlb
js
cmp
lret
leave
mov
int3
int
jo
pushf
pop
aam
fldl
ja
xchg
push
sub
dec
lcall
imul
subb
mov
dec
cltd
sub
cld
or
push
mov
dec
add
sbb
sbb
icebp
mov
arpl
jg
stos
inc
fisubrl
jae
mov
stc
add
or
orps
das
scas
ljmpw
adc
pop
xchg
push
push
fstpt
out
mov
test
and
fcoms
jp
cmp
jmp
adc
sub
xchg
dec
cld
jbe
cmp
aaa
loop
mov
mov
xor
sti
cmp
or
push
or
hlt
cwtl
test
or
pop
push
pop
mov
cmpsl
cmp
ret
out
imul
test
mov
out
xchg
mov
or
fwait
sub
jp
xchg
dec
inc
xor
sub
lds
aaa
sbb
jne
repz
add
push
or
pop
xor
rorl
pusha
xor
inc
stos
push
mov
idivb
sbb
fstpl
cltd
int3
and
add
jnp
jl
jle
fwait
lock
loope
adc
xchg
cwtl
test
fldcw
hlt
xchg
loop
pushf
pop
inc
in
pop
arpl
jbe
cld
mov
dec
sub
sub
hlt
xchg
pop
dec
adc
test
in
or
mov
and
gs
loopne
push
data16
sti
shll
dec
cmpl
or
sbb
add
fs
xor
sub
jge
je
mov
mov
divb
cmp
scas
js
jae
call
sbb
sbb
mov
lret
or
mov
and
sbb
cmp
mov
cmp
sub
imul
mov
pushf
lret
scas
outsl
adc
mov
jno
rorl
out
mov
enter
xchg
test
xchg
push
repz
lret
cmpsb
sbb
lea
adc
jl
adc
xor
ljmp
clc
dec
movsl
xchg
and
xor
testb
test
adc
nop
in
cmp
loop,pt
push
je
test
and
jb
pop
ret
mov
jle
add
mov
add
fsubs
in
push
repz
scas
test
ret
xchg
and
xor
sbb
movsl
xchg
fstps
add
jne
push
inc
je
jns
push
add
lock
jecxz
mov
mov
pop
add
pop
sbbb
scas
call
sub
out
sbb
neg
xchg
cltd
stc
ror
bound
loopne
sbbl
mov
xlat
sbb
or
mov
data16
filds
bound
jno
cmp
ja
insb
std
mov
adc
andl
and
inc
dec
xlat
push
jle
mov
ljmp
or
or
pop
mov
jecxz
sbb
lret
lods
fsts
pusha
cmp
ret
in
in
imul
xchg
iret
push
sysenter
movsb
jg
mov
lcall
lahf
lds
jl
fldcw
fadds
ljmp
dec
cltd
jle
mov
fsubs
out
adcb
arpl
and
pop
faddl
xchg
cmc
mov
andl
pop
add
enter
lods
push
mov
pop
aas
mov
in
push
fldcw
and
adc
in
int
jb
cmpsl
stos
gs
dec
adc
adc
lahf
iret
enter
push
test
addl
ss
movsl
sub
or
push
divb
jne
les
frstpm(287
xchg
lds
or
mov
out
and
jns
sbb
arpl
subl
cwtl
jb
mov
jl
sub
mov
out
ficompl
jl
rcrb
lods
ret
inc
mov
xchg
adc
xor
movsb
popa
mov
popa
aad
push
dec
mov
jle
cld
ret
xchg
icebp
scas
arpl
push
mov
xor
test
loopne
dec
fdivs
sbb
js
test
sti
jg
push
lock
repz
inc
jl
gs
sub
lds
jmp
add
arpl
test
lret
adc
iret
cmp
xchg
jne
pop
pop
and
add
inc
mov
jle
push
jae
sbb
mov
mov
sbb
push
mov
inc
rorb
in
or
push
gs
out
je
dec
cmpsl
pop
xlat
js
outsb
pushf
scas
outsl
adc
mov
lea
pop
sti
fwait
push
mov
call
std
hlt
mov
dec
jnp
jns
addl
xchg
inc
sbb
das
int3
pusha
pop
mov
out
movsb
fwait
rcrb
pushf
mov
pusha
push
out
aam
mov
lds
cmp
cli
push
dec
sbb
in
sub
or
mov
push
mov
sub
adc
sbb
std
test
mov
test
ficoml
fdivrs
mov
fildl
sub
dec
sub
sbb
xchg
dec
clc
inc
pop
data16
test
push
push
icebp
dec
aad
inc
aam
and
xchg
dec
sarl
lahf
lret
aad
out
popf
sbb
aad
jle
xchg
aaa
push
mov
cmp
and
push
fwait
icebp
shlb
std
dec
mov
cmp
loopne
jmp
pop
jle
xor
shlb
mov
lcall
lahf
test
dec
leave
movsb
sbb
in
pusha
shll
lock
push
add
lea
stos
push
add
push
pop
test
push
xor
jno
mov
sahf
mov
outsb
jno
jecxz
mov
mov
int3
lds
inc
and
enter
pop
mov
test
ror
pop
aas
cltd
and
addr16
enter
sbb
xchg
mov
mov
int
into
adc
or
inc
push
jecxz
xor
dec
mov
test
pop
lea
outsl
pop
pop
jecxz
jg
imul
and
pop
jg
xor
rolb
out
or
dec
add
movsb
sar
mov
mov
faddl
pop
pop
stos
mov
push
mov
subl
aas
adc
push
lock
mov
adc
imul
popa
in
mov
inc
adc
lock
adc
fcmovnu
dec
jmp
pop
aad
dec
lret
adc
cwtl
sahf
js
dec
mov
pop
jecxz
xchg
sub
sahf
imul
or
push
lods
loope
sbb
sbb
mov
aad
ret
repz
and
je
ljmp
mov
mov
lahf
dec
xor
push
mov
popf
pop
push
mov
jb
or
in
and
and
push
mov
lock
add
inc
repnz
xchg
xor
out
icebp
fwait
js
jmp
xor
xchg
xor
push
mov
jge
int3
mov
jae
mov
mov
cltd
movsb
pop
jp
imul
jae
scas
adc
je
mov
sahf
lea
enter
pop
clc
fwait
add
mov
cmpl
push
mov
sti
pop
flds
mov
fsubl
lret
jne
mov
loop
jl
xor
sbb
outsb
lds
loope,pn
add
jnp
sahf
outsb
aas
inc
dec
pushf
add
popl
or
aam
das
mov
roll
push
stos
mov
ja
pop
inc
or
cmpsl
les
scas
and
push
shlb
xor
jp
mov
lret
insb
add
scas
enter
add
cmp
adc
xor
ja
sbb
xchg
dec
inc
loop,pn
ljmp
dec
xor
insb
pop
and
xor
fs
repnz
loopne
push
mov
or
outsl
xchg
test
enter
outsb
icebp
sub
and
push
dec
xchg
jnp
lds
sbb
in
rol
add
js
mov
dec
mov
mov
scas
jmp
lds
arpl
stc
xchg
sbb
jns
clc
mov
pop
stos
adc
cltd
add
adc
add
sub
sbb
jle
push
xor
mov
pop
ds
mov
or
stos
vphaddbd
add
cmp
psubusb
popf
aad
cmp
xchg
jmp
pop
jg
cmp
mov
inc
add
je
and
or
in
jae
dec
cmpsl
rcll
xor
les
fcomps
pop
cmp
jns
sub
push
jl
push
xlat
pusha
mov
movsl
mov
pop
aaa
outsl
jg
push
fbstp
loope
and
add
jae
sahf
popf
or
xchg
xor
mov
sbb
rcr
es
mov
fisubrl
push
stc
pop
cmc
test
and
shlb
pop
mov
ljmp
xchg
xlat
mov
enter
outsl
cmp
mov
xchg
lret
bound
xlat
pop
arpl
xor
xchg
out
in
sub
loop
push
aas
sub
sbb
push
popw
push
js
daa
xchg
js
and
mov
xchg
pop
sbbl
sar
mov
loop
mov
mov
int
jnp
and
nop
sub
fstpl
idivl
cmpsb
jnp
ret
std
push
cltd
mov
mov
imul
lea
fnstsw
lods
jl
xor
call
std
mov
mov
test
lcall
nop
lret
in
popa
cmp
xor
arpl
clc
dec
out
loopne
ss
lret
push
cvtpi2ps
mov
stc
mov
int3
push
jbe
jmp
inc
jl
aad
sbb
xchg
mov
mov
adc
and
push
imul
insl
cmp
add
cli
call
sbb
ret
adc
mov
inc
fldt
jp
push
and
mov
xor
pop
sub
jp
in
xchg
loop
push
inc
loopne
sbb
add
imul
imul
lret
and
pop
aam
dec
cld
push
jmp
dec
inc
shlb
fnstsw
lock
xchg
pop
stos
inc
and
lds
dec
xlat
sub
addl
or
ret
int3
adc
jp
add
lods
std
pop
mov
mov
fdivrl
cmpsl
mov
mov
test
bound
jns
xchg
call
add
lcall
cmp
inc
lods
push
fcoml
and
mov
sub
repnz
mov
add
testl
mov
incb
jg
cwtl
call
leave
jle
clc
fldt
sbb
data16
sub
shr
in
loope
clc
sahf
divl
jle
or
fiaddl
sub
push
pop
cmp
xchg
jle
insb
jb
pusha
sarl
and
add
movsl
adc
inc
dec
shll
add
sbb
dec
pop
jle
cmp
sbb
push
repz
add
stos
xor
cmp
insb
dec
jecxz
mov
dec
push
and
lret
icebp
pop
fmul
popf
stc
pop
int3
or
subb
xchg
mov
in
test
sbb
push
cltd
int3
sub
jne
loopne
cld
adc
push
insb
push
mov
flds
mov
stc
push
inc
pop
aam
test
testl
or
push
cmp
iret
jb
imul
cmc
mov
and
mov
jo
inc
push
sbb
cmp
mov
and
bound
pop
in
es
les
xlat
add
pop
sub
sub
mov
cmp
or
sub
dec
adc
jmp
jmp
call
loopne
subb
cmp
int3
jmp
mov
jecxz
sub
cmpb
stos
notl
adc
mov
scas
add
mov
pop
and
addr16
rclb
xor
add
xorb
xchg
sbb
mov
dec
mov
cmp
test
mov
movntps
xchg
adc
pusha
pop
xchg
mov
jnp
xor
in
shl
mov
mov
add
jg,pt
lds
push
push
cmp
aaa
icebp
fdivl
and
in
cmp
sub
arpl
lret
mov
lahf
or
jge
ret
shll
jge
out
jecxz
push
push
sub
jmp
bound
push
push
scas
insb
cmovl
push
mov
jg
xor
fisttpl
lcall
mov
mov
jge
stos
outsl
jmpw
mov
inc
and
out
push
das
ljmp
push
push
movsl
add
fimull
iret
pop
sub
mov
or
sbb
jmp
xchg
sub
mov
inc
shlb
xchg
mov
int3
cli
sbb
push
lret
mul
xchg
mov
pop
imul
adc
add
sbbb
outsl
cmp
xchg
je
or
lret
inc
sbb
pushf
xchg
icebp
dec
xchg
sub
sub
test
das
or
jl
inc
dec
dec
imul
mov
filds
lds
jns
and
add
addl
pop
xchg
lds
stc
orb
je
cmpsb
xor
das
jbe
xlat
cs
or
lahf
mov
mov
ret
add
and
stc
and
jnp
loopne
cmpsb
outsl
push
jb
js
bound
stc
mov
movsl
sti
test
shll
fsub
or
in
mov
dec
jae
into
int
xlat
inc
test
jge
xchg
pop
inc
add
arpl
subps
inc
test
and
mov
enter
adc
jmp
js
inc
jnp
fimuls
dec
push
pop
sbb
xor
outsb
or
mov
jmp
jge
sub
mov
push
sub
jecxz
push
fisttpll
jne
jp
push
pop
scas
enter
cmc
sar
inc
sbb
or
insb
mov
cmp
and
jae
mov
stos
mov
add
dec
stos
imul
loopne
dec
mov
frstor
jae
out
mov
push
rep
inc
sub
mov
xchg
loope
push
arpl
insb
cmp
or
ret
test
mov
outsl
or
js
push
jne
mov
in
sbb
hlt
fwait
ss
jb
lock
js
in
inc
add
adc
je
jno
cmc
and
shr
inc
sub
and
jge
or
aas
sbb
push
js
xor
jae
xchg
cmpsl
sbb
testb
gs
sbb
out
jle
or
jle
push
dec
jns
xor
bound
xor
pop
es
data16
test
pop
int3
jnp
xor
push
ljmp
lcall
or
pop
mov
mov
dec
pusha
js
mov
push
lret
std
or
lods
sti
aam
xor
ror
cmp
imul
pop
or
mov
xchg
test
pusha
jns
xchg
add
push
and
sbb
xlat
fimull
inc
dec
ss
push
jbe
and
fists
sti
mov
mov
or
nop
add
mov
inc
outsl
or
jge
xchg
xchg
mov
add
mov
adc
jns
sub
rcr
mov
lret
mov
loopne
cmp
sbbl
repnz
adc
xlat
jbe
jg
mov
xor
jno
jle
xchg
mov
cmovp
jae
sbb
jmp
cmpsb
cmp
pop
in
andb
push
inc
insb
jmp
mov
mov
pop
aaa
ret
leave
out
mov
xor
out
icebp
stos
pop
or
arpl
lea
inc
outsb
push
hlt
jb
mov
or
fisubrs
std
setno
cmp
xor
xor
iret
les
cmp
or
cmpsl
jnp
int3
add
fnsave
cmp
push
push
insb
vcvtsi2ssl
imul
pop
dec
mov
dec
inc
cli
or
lds
inc
shlb
lret
or
adc
pushf
imul
jo
pusha
add
lods
lock
cmp
dec
push
ss
inc
test
sub
jbe
repz
push
xor
out
sub
mov
aas
mov
lahf
xchg
xchg
std
mov
subb
das
adc
pop
push
shlb
cmpsl
push
nop
daa
lret
xchg
aad
les
repz
pmaxsw
sbb
mov
push
mov
or
mov
lret
mov
lahf
jg
js
or
and
mov
jbe
push
xchg
mov
mov
not
sbbl
cmp
pop
repnz
test
push
xchg
aam
lahf
pop
adc
sti
push
addr16
mov
mov
mov
loopne
jg
stos
out
or
bound
fisttps
mov
dec
jno
xor
leave
sbb
add
dec
rorb
insb
popf
fmuls
inc
fsubs
adc
rclb
jecxz
ret
mov
add
push
cmp
repnz
es
fisttpll
jmp
pushf
xor
out
movb
or
lds
sub
push
adc
inc
imul
mov
jo
or
dec
rol
jl
flds
jne
pushl
addr16
stos
pop
imul
movsb
and
jg
cmp
dec
or
enter
xlat
cltd
or
push
mov
ficomps
mov
mov
lcall
push
mov
adc
ret
cmp
push
mov
xor
test
out
sub
out
xchg
pop
repnz
jae
inc
daa
sahf
in
mov
hlt
push
sub
or
scas
ja
repz
ja
call
jo
test
in
hlt
movsb
xlat
mov
pushf
xor
mov
dec
int
incl
sub
mov
push
out
leave
cmp
and
shlb
xor
sti
dec
repnz
xchg
dec
add
lds
mov
test
jmp
sbb
xchg
mov
and
sar
rcll
cmp
push
pop
lret
jge
ss
sub
idivb
in
loopne
mov
imul
cmc
jle
dec
aad
mov
movsb
lods
jne
dec
int3
inc
or
icebp
jae,pn
and
fwait
dec
ret
push
push
loope
push
lods
nop
in
and
xchg
mov
jb
outsl
jge
lods
cmc
or
mov
xor
add
push
clc
xlat
lods
clc
xor
enter
jmp
imulb
sti
mov
xchg
mov
dec
xor
popa
xchg
test
xor
cli
push
inc
syscall
fistpll
out
add
pop
xchg
in
mov
movsb
out
cmovb
xchg
test
leave
adc
shll
pop
pop
pop
jo
icebp
mov
sti
push
sbb
fidivl
adc
and
ret
or
mov
jle
mov
aaa
ficompl
inc
push
jbe
stos
pop
rcll
xchg
fstp
sub
add
dec
movsl
les
push
fucomp
mov
aad
xchg
xor
dec
sarb
ret
adc
sahf
push
repnz
mov
adc
addb
mov
cwtl
dec
shrl
mov
out
icebp
aad
pop
and
adc
push
jnp
xor
jne,pt
xor
jne
pop
xor
pop
cmp
out
push
push
mov
mov
jno
mov
dec
fistpll
iret
sub
mov
pop
jbe
out
mul
into
cwtl
gs
cwtl
push
ret
adc
idivl
faddl
and
insl
xchg
push
cmp
pop
push
fdivrl
iret
imul
loopne
or
cli
subl
push
xor
popa
xchg
inc
push
or
insl
xchg
bound
xor
lret
or
sbb
push
sub
xor
loopne
push
xor
cmp
mov
pusha
inc
imul
call
xchg
mov
movl
cmp
mov
scas
daa
repz
mov
sub
mov
push
push
aad
rcll
mov
jb
jmp
aaa
cli
xchg
add
and
inc
movsb
call
add
test
test
mov
mov
push
getsec
mov
fistpll
dec
mov
gs
cmp
ret
jle
out
fsts
and
call
ljmp
ret
and
aam
mov
test
in
mov
ja
jns
cli
mov
pusha
fbstp
jl
sbbb
arpl
cld
movsl
adc
and
and
pop
pusha
loopne
dec
stos
loope
out
insl
fcomps
inc
fmull
cltd
fisttpll
jb
imul
pop
out
cmp
xchg
fidivrl
outsl
lcall
rcr
sub
loopne
jne
push
ljmp
loop
pop
lods
das
sub
add
xor
mov
add
inc
fisubs
jge
jge
shr
movsl
xchg
push
jg
jle
jns
jno
push
insb
jp
jg
mov
call
popa
out
xchg
xchg
adc
dec
add
xor
xor
xchg
pop
lret
push
mov
int
adc
pusha
mov
push
test
aad
decl
xlat
jae
pop
sarb
inc
xchg
jb
cmpsl
lahf
call
jmp
fdivrl
loop
mov
push
and
shl
mov
mov
mov
cmp
and
jl
fsubrs
lcall
add
mov
mov
jg
inc
cld
jl
aad
inc
mov
rclb
hlt
pop
outsb
dec
pop
mov
je
loope
xchg
pop
xchg
outsb
jl
mov
faddl
lds
aas
mov
aad
fisttpll
test
jmp
js
andl
xor
push
or
sbb
daa
jge
fucomip
adc
aam
and
mov
cmp
aad
inc
mov
pusha
sub
sbb
dec
adc
mov
sbb
inc
and
das
cmp
jb
xchg
and
push
ljmp
outsl
xchg
xlat
subl
add
and
imul
movsb
ret
lret
sbb
leave
or
fadds
andl
lea
loope
mov
ljmp
xchg
pop
push
push
mov
fs
cmc
into
jg
cmp
xorl
add
mov
repz
test
mov
sbb
push
mov
and
xchg
movsl
sbb
jecxz
int3
sbb
mov
into
call
fdivs
fistpll
popf
ljmp
add
adc
aad
lods
repz
mov
push
push
aas
ret
faddp
jnp
mov
int3
ror
sub
aas
ss
incl
xor
lock
mov
pop
je
scas
lods
inc
sbb
cmc
mov
bound
xchg
jb
in
ret
adc
or
mov
cmpsb
dec
dec
test
xchg
mov
mov
ret
jecxz
sub
fsubrs
les
pop
xchg
dec
dec
scas
pop
int3
lea
fldcw
outsb
stos
inc
fidivs
aad
or
arpl
lods
adc
cmc
insb
push
ja
iret
lahf
shlb
dec
out
cs
push
out
scas
mov
xor
inc
mov
jl
xor
cmc
popa
pop
mov
jl
jge
xor
out
xchg
clc
add
or
out
lock
mov
lret
je
daa
ret
addl
push
loop
mov
syscall
mov
iret
sub
xor
push
dec
mov
inc
pop
mov
lret
sbb
jne
or
jecxz
jae
xchg
jle
jae
cmp
pop
cmp
pushf
sahf
jge
into
out
int3
mov
les
js
xchg
stos
ret
loope
repnz
inc
push
in
push
mov
aaa
clc
push
xor
out
dec
mov
add
adc
filds
cmc
daa
adc
mov
mov
mov
lods
ret
jp
adc
fcomps
rolb
inc
cmp
lahf
lcall
mov
xchg
mov
xchg
outsl
jo
decb
xchg
inc
or
xchg
or
mov
cmpl
outsl
gs
jb
ret
addb
push
popa
sahf
rolb
inc
icebp
mov
out
sub
js
int
test
push
sbbb
add
dec
mov
popa
aam
jnp
and
push
fdivs
fwait
mov
or
jl
jae
mov
dec
sbb
sub
mov
pushf
pop
jecxz
loopne
out
jp
xchg
add
dec
mov
jnp
jbe
lods
sub
cli
push
clc
sbb
cmpsb
and
pop
cltd
and
push
addb
icebp
jo
ss
and
jecxz
xor
cltd
ss
pop
insl
xor
mov
lret
leave
mov
sub
jae
lret
cmpl
push
cmc
incb
mov
punpcklwd
roll
sbb
dec
push
insl
int
pop
imul
sub
sarb
scas
ljmp
mov
test
inc
push
cmp
mov
cltd
adc
cmp
adc
xor
ds
dec
and
adc
aad
test
sbbb
scas
clc
sbb
jp
xor
push
xlat
sbb
dec
orb
adc
xor
inc
jne
push
xchg
xchg
shll
mov
inc
pop
imul
push
stc
lcall
shl
test
hlt
xor
jp
xchg
mov
push
and
je
aaa
mov
and
mov
lcall
or
mov
or
repz
cmc
shll
push
dec
and
xlat
mov
push
or
rorl
ret
cmp
cmpsb
push
pop
xorb
add
inc
mov
push
sbb
aad
rcr
lcall
xor
jbe
dec
xchg
and
jne
mov
adc
jl
ret
pop
push
aaa
stos
xchg
icebp
mov
and
repz
or
lods
jge
dec
clc
sbbb
in
lret
jnp
push
jo
pop
inc
cltd
fs
js
fs
int
xchg
or
shl
push
fs
jo
fcomps
and
pop
add
ds
xor
sub
mov
cmp
sbb
xchg
cs
sbb
inc
dec
addr16
fidivl
or
cmp
and
aam
jle
adc
add
and
xorl
shlb
enter
cli
add
inc
sbb
cs
jbe
scas
pop
sub
add
add
jb
mov
cs
test
out
ret
inc
sbb
add
push
sbb
and
xor
lods
scas
daa
ret
loope
jecxz
cs
popa
cli
or
imull
push
test
enter
mov
push
jl
ds
push
popf
dec
sbb
movntps
pop
arpl
cmp
out
jno
dec
push
xchg
xchg
add
mov
cmc
sub
or
pop
sbb
iret
cwtl
xchg
popa
jge
mov
jb
in
ds
jns
shll
fidivs
scas
sbb
mov
add
fmulp
stos
push
xor
push
fs
pop
repnz
mov
daa
ffreep
mov
dec
movsb
out
scas
xlat
mov
pusha
fsubl
repnz
jb
mov
int3
add
call
jecxz
mov
shl
andl
repz
dec
xor
or
aaa
dec
mov
mov
and
mov
push
jnp
and
stos
jle
hlt
inc
stos
or
scas
iret
xchg
out
fwait
imul
cs
es
add
pop
hlt
lods
push
mov
jmp
rcll
jo
mov
aam
cwtl
sub
push
push
push
std
inc
and
mov
push
icebp
or
sbb
and
sbb
int3
xchg
jecxz
inc
adc
aad
xchg
sbb
adc
cmp
cmp
ja
pop
fld
js
add
movsw
call
add
push
adc
sub
inc
mov
pop
add
leave
sub
stos
cmp
into
aas
jge
cli
test
ds
xchg
fdivs
mov
xor
ljmp
cmc
mov
push
fisttpl
lret
fisttpl
dec
inc
mov
in
jp
sti
sbb
push
and
ffree
mov
sub
sub
lock
aas
js
rorl
inc
mov
jbe
sbb
mov
cld
mov
outsb
mov
mov
sti
leave
add
jb
test
mov
sub
pop
add
mov
sti
and
xor
addr16
inc
data16
lret
out
and
mov
mov
push
mov
and
fiaddl
inc
leave
sti
jne
fs
mov
xchg
cmp
mov
push
cmp
mov
xor
jne
std
lret
inc
inc
pusha
mov
mov
adc
ret
mov
lock
adc
dec
pop
add
fistps
shll
pop
negl
mov
jg
mov
int3
imulb
bound
testb
xchg
pop
mov
push
cmp
sub
movb
std
mov
jp
fsubrs
loop
lds
lea
mov
subb
xchg
dec
mov
add
int3
pushf
in
or
insl
sbb
dec
sub
pop
jno
fcom
test
push
test
cmp
jmp
mov
mov
int
icebp
lret
mov
add
fistps
mov
mov
pop
cmp
push
or
in
dec
fsubs
rcl
dec
aad
pop
cmp
push
mov
cmp
std
leave
xchg
push
stos
adc
lods
inc
cmp
push
jo
push
lcall
xor
push
cli
jmp
sbb
pop
loop
or
cmp
dec
addr16
mov
gs
and
push
and
shll
cmpsb
push
mov
aam
push
jle
rdpmc
test
jne
pop
leave
or
and
lds
subb
loopne
add
cmpsb
std
cs
test
jnp
jb
inc
es
jle
lock
cmpsb
mov
test
jns
or
cmp
fisubrl
and
sbb
push
dec
xor
pusha
xchg
cmp
int
pop
or
lea
cmp
or
ja
mov
pand
dec
adc
add
mov
rcrl
icebp
cs
enter
aaa
push
lea
mov
cli
cltd
add
int
xor
push
cli
inc
aad
das
xor
xchg
mov
mov
movsb
lahf
in
add
sub
sub
xor
or
arpl
movsl
dec
cmp
orl
orb
lcall
push
subl
push
loopne
and
outsl
mov
addr16
js
divl
out
push
insl
bound
xchg
push
andl
cwtl
icebp
xlat
xor
outsb
xor
jo
jo
in
out
add
xchg
push
lods
gs
pop
cwtl
gs
int
jmp
test
mov
aad
aad
fs
iret
or
int3
aaa
pop
mov
scas
xor
mov
and
push
pop
arpl
nop
dec
adc
xchg
popa
loop
test
imul
or
mov
sub
repnz
movsl
push
cli
rorl
sbb
and
cmp
add
cmpsb
stos
rorl
addr16
mov
push
push
mov
enter
divb
out
push
cmp
inc
dec
adc
mov
pop
xor
fildl
aaa
pusha
je
std
repnz
cmp
pushf
fwait
orb
cltd
pop
rcr
cmpb
bound
mov
dec
adc
inc
in
js
xchg
jae
mov
xor
movsl
xor
lret
int3
sub
mov
cmp
imul
jle
sets
sbb
add
decl
shlb
les
add
insl
rcll
push
mov
daa
rclb
fdivrl
test
cmp
insb
inc
push
fs
mov
cld
dec
mov
adc
inc
lock
sub
lcall
insb
fcoms
mov
jecxz
lods
clc
inc
sbb
cmp
flds
into
cmp
stc
daa
pop
jle,pt
imul
xchg
push
gs
outsl
inc
in
femms
mov
and
neg
scas
xchg
mov
addb
or
and
cmc
fwait
and
pop
nop
push
xor
and
ret
mov
push
jl
out
jo
mov
sub
inc
and
aam
add
mov
cmpsb
inc
stos
loope
and
push
or
dec
and
inc
dec
xchg
inc
cmp
cmpsl
insb
pop
mov
and
icebp
sub
sahf
cwtl
pushf
sbb
mov
jge
fistps
into
xchg
add
lods
xchg
outsl
adc
push
stos
addr16
and
fiadds
push
mov
jae
pop
clc
mov
push
mov
stos
mov
xchg
sti
or
and
rcrb
loop
je
xchg
fucomp
inc
fisttps
stos
xchg
inc
js
test
es
adc
hlt
popa
add
and
pop
aad
popw
fisttpl
jae,pn
cmp
add
dec
es
les
outsb
ja
lret
mov
adc
or
nop
push
cmp
aaa
in
in
mov
ss
xor
lcall
decl
in
cmp
xor
or
inc
stc
mov
js
or
dec
sbbb
xorb
pop
aas
push
mov
mov
xchg
clc
adc
fcomps
push
dec
xchg
xchg
inc
mov
push
pop
mov
adc
iret
stos
in
push
cmp
cld
cmp
mov
leave
stos
pusha
jle
lahf
dec
cmp
push
push
scas
cli
test
loop
cmp
dec
in
xor
mov
addr16
stc
andb
mov
sti
scas
aas
mov
subb
lock
pop
aad
roll
dec
inc
andb
jne
outsb
mov
mov
inc
rolb
sti
inc
add
or
jnp
out
cmp
cmp
and
leave
in
mov
or
fsubrp
loopne
jmp
xchg
imul
out
inc
loope
lock
out
icebp
lods
jbe
push
jecxz
dec
pop
push
scas
adc
cmp
pop
add
jb
push
jo
scas
mov
ffree
int3
sbb
pop
fstpl
and
rcl
gs
mov
stos
push
cmp
jb
cmp
push
cmp
or
lahf
jbe
cmc
js
mov
mov
jmp
bound
sbb
mov
inc
xchg
test
jmp
mov
or
push
mov
mov
mov
lock
xor
lcall
sbb
sub
lret
repnz
inc
xlat
lcall
and
cmp
inc
cli
roll
movl
movsb
mov
stos
out
mov
xor
xor
lds
decb
mov
sub
out
loopne
sarb
outsl
data16
sbb
lea
loop
jb
inc
jge
movsl
repnz
jbe
scas
mov
cld
sti
int
jae
int
rcl
rol
aas
jl
dec
mov
mov
test
aam
iret
push
stos
cwtl
dec
sbb
cs
hlt
in
sub
int3
mov
mov
mov
jae
stos
call
mov
aad
adc
enter
adc
loopne
pop
aaa
insl
popa
mov
in
pop
pop
mov
xor
jge
js
stos
int
lret
mov
fidivs
mov
cmpl
faddl
adc
mov
adc
fnsave
movl
shl
fcompl
pop
add
mov
shlb
popa
pop
loop
bound
pop
cmp
jno
pop
cmc
arpl
nop
fcmovnbe
pop
test
jnp
dec
sub
bound
adc
mov
cld
das
jno
loope
push
xor
popf
into
sbb
mov
or
sbb
lret
rcll
lea
xor
jns
sub
add
fisttpll
nop
xchg
fisubrl
mov
inc
inc
fildll
insl
iret
sahf
sub
jmp
jp
sub
sub
sub
mov
mov
test
test
xlat
outsb
aam
xchg
inc
jle
je
mov
lods
mov
add
add
adc
pop
sbb
push
movsb
ss
or
mov
stos
push
movsl
cmpsb
cmp
mov
lcall
in
repz
pop
mov
lods
pop
jae
fcomps
add
into
stos
lods
xchg
inc
pop
adc
sbb
sbb
out
pusha
insb
mov
mov
and
mov
int3
sub
mov
mov
sub
shr
mov
decl
inc
mov
les
add
out
pop
jno
push
cmc
dec
notb
aam
jle
lret
pop
jecxz
push
mov
fisubrs
pop
jo
rclb
push
int
cli
outsb
adc
or
fcmovu
cmpsl
cli
add
popf
cmp
mov
and
pop
lahf
mov
push
cmpb
xchg
sbb
xor
mov
jge
xor
lret
shlb
jmp
sti
insl
fxch
aam
rorb
push
mov
mov
stc
jnp
xchg
sub
sub
xor
mov
pop
js
aam
xor
fimull
and
imull
cmp
ficoml
movsb
or
jmp
jle
popf
lods
add
cmp
adc
stos
rep
iret
scas
sbb
xchg
add
and
movsl
rcrb
int
add
mov
xor
lret
mov
sar
push
flds
xchg
popf
sbb
lcall
cld
xor
jae
inc
and
xchg
inc
mov
in
repz
mov
daa
pop
mov
push
fcoms
mov
movsb
jno
cltd
je
xchg
aas
pop
sbb
sub
test
shlb
inc
js
adc
aaa
push
push
fmulp
outsb
loope
ss
sub
and
aaa
xchg
mov
iret
mov
ljmp
popf
imul
lods
inc
inc
or
sbbb
dec
lods
fldcw
outsb
gs
rcrl
rcll
pop
push
xchg
test
and
dec
mov
daa
pop
jo
xor
imul
cmc
test
sha256rnds2
nop
jl
sbbl
mov
mov
jle
inc
mov
fidivrs
xor
or
mov
mov
push
dec
and
sti
mov
cmp
sub
sub
ljmp
insl
or
dec
dec
push
and
inc
sbbl
adc
sti
mov
std
adc
jle
out
pop
adc
fidivrs
je
pop
ret
push
rcl
pop
push
lea
mov
jle
push
xor
rclb
adc
sarb
adc
and
js
popf
jge
fistl
lds
xchg
ljmp
loop
lret
inc
cmp
repz
test
scas
lret
rcrl
repz
fwait
cltd
fs
mov
sbb
push
mov
adc
leave
je
xchg
cmpsl
cmp
dec
mov
dec
je
pop
mov
and
cmc
mov
mov
lods
scas
out
addr16
pop
push
cmp
int3
fadd
dec
lea
iret
fcompl
mov
fildll
adc
movsb
mov
sub
push
fwait
movntps
adc
loope
mov
shlb
sub
pusha
xlat
push
dec
lock
insl
scas
cmp
push
jne
std
shll
dec
sti
adc
imul
inc
xor
aam
and
cmp
xor
mov
xor
sub
sti
icebp
push
faddl
mov
mov
leave
sbb
fdivrl
shll
cld
xor
rcrl
mov
in
xchg
and
mov
nop
dec
cwtl
sub
sbb
imul
adc
xor
and
sbb
push
push
out
ss
sub
orb
fcmovb
adc
sbbl
mov
ss
push
out
mov
sbb
sbb
push
jge
mov
xor
mov
mov
pop
pop
lds
fsubrp
shrl
pop
push
cmp
adc
xchg
sub
pop
dec
xchg
rcll
xchg
pop
daa
cs
imul
mov
add
rcrb
clc
xchg
insl
ret
sbb
mov
rclb
jecxz
inc
dec
push
adc
fistpll
mov
test
and
pop
mov
inc
ja
mov
mov
mov
mov
xchg
popa
jp
loope
xor
and
sti
outsb
testb
sbb
je
movsb
outsb
xchg
insb
sahf
cmp
jae
in
sarl
xchg
pop
cmp
outsb
push
jb
push
cmp
sbb
inc
mov
bnd
xor
addr16
or
clc
neg
out
fdivp
mov
or
ljmp
pop
movsl
mov
pop
stos
jo
mov
aaa
mov
xchg
mov
leave
packuswb
lcall
pusha
clc
add
bound
mov
in
or
xor
or
dec
pop
inc
and
xor
mov
mov
inc
fnstenv
xor
lret
pop
nop
lea
jl
lock
aas
insb
dec
xchg
mov
leave
inc
jg
adc
jle
jp
pop
xchg
xor
into
das
imul
nop
loopne
fmul
mov
and
out
cmpsb
or
mov
cli
inc
dec
outsl
bound
nop
leave
addr16
mov
idivb
divl
mov
jmp
jmp
push
dec
lods
cs
xchg
incb
sbb
clc
in
mov
scas
mov
mov
mov
loop
jmp
dec
fdivs
dec
mov
cmp
jns
je
push
or
pop
add
into
cmp
pop
adc
mov
fnstsw
xor
std
xor
push
pusha
mov
jbe
mov
scas
dec
add
scas
pop
add
sub
rol
je
push
sub
xchg
xor
loope
adc
aam
pusha
add
and
inc
or
pop
jg
xor
loope
lahf
sti
dec
gs
pop
dec
shl
jne
arpl
pop
jp
adc
adc
ljmp
in
mov
psrld
mov
push
int3
sub
and
or
or
push
mov
xchg
and
xchg
pushf
adc
fstps
jg
mov
in
pop
jg
sub
mov
lret
testl
lods
lock
bound
call
int
push
bound
ds
jnp
push
es
or
pusha
xor
mov
push
addl
testb
push
cwtl
xor
dec
and
xchg
mov
jns
xor
mov
test
push
jecxz
sbb
cmp
lret
fstl
sbb
mov
cmpsb
xchg
jbe
mov
testb
lea
fnstenv
int
lret
or
xor
iret
cltd
scas
in
lods
or
jo
sub
ds
mov
das
pushf
popf
shrl
sbb
cmp
inc
inc
fdivrl
outsb
and
mov
sbb
jns
mov
orps
cltd
into
sbb
jns
sub
cmp
sbb
andl
test
add
dec
lret
dec
ret
mov
jle
jl
nop
push
ljmp
call
or
cli
inc
xchg
and
aaa
test
push
shlb
xor
or
jne
dec
xchg
fsubs
mov
xor
lods
jp
leave
push
mov
pop
cltd
mov
sbb
out
imul
mov
xor
cwtl
hlt
jmp
negb
arpl
rcrb
popf
xor
loop
fdivrs
push
in
xchg
adc
mov
arpl
daa
dec
and
mov
add
rolb
and
sbb
push
or
add
push
mov
popa
cli
es
xor
aaa
push
dec
mov
cld
loopne
jmp
lock
push
jae
lcall
sbb
popf
pop
mov
ljmp
fidivrs
imul
fisubs
ss
in
push
dec
dec
stos
adc
clc
int
pop
xor
xor
and
and
sbb
test
test
or
xchg
sub
fsubrs
lret
std
ret
jp
std
push
lcall
jg
mov
or
push
sub
lret
xlat
movsl
fists
mov
repz
mov
sahf
push
cmp
add
aas
xchg
sub
xlat
pop
pop
test
jg
cmc
mov
lret
lods
lcall
mov
loop
scas
sti
inc
pop
aaa
mov
mov
outsb
in
lds
push
cmpsb
sbb
and
pop
sbb
push
sbb
jns
dec
cmp
or
mov
fwait
fs
in
push
push
mov
lods
notb
mov
inc
jne
loop
iret
das
jmp
and
dec
push
mov
mov
cmp
and
leave
mov
hlt
cmpsb
sbb
inc
and
sbb
adc
rcrb
ret
push
push
cli
loopne
pushf
inc
push
fimuls
mov
nop
fisubl
test
jmp
es
test
or
pop
adc
add
inc
and
lods
or
add
scas
push
repnz
and
push
data16
push
cmc
jns
push
xor
or
push
jns
int
inc
cmp
adc
xchg
loop
ja
cmp
fdivrl
push
inc
dec
push
cmc
jecxz
fbld
je
in
cmp
or
movsb
pushf
xchg
es
add
aam
ficomps
xlat
in
es
in
and
addr16
cmp
dec
sbb
jge
push
ucomiss
into
inc
dec
sti
push
mov
xlat
lods
xchg
adc
sbb
jg
aam
cmp
fdivl
mov
add
push
jp
inc
adc
out
in
lods
jle
cld
pop
mov
cld
dec
add
sub
lret
mov
mov
cmc
adc
mov
sub
push
adc
mov
leave
sbb
hlt
mov
mov
in
or
add
das
adc
push
lret
in
push
outsb
std
inc
lgs
mov
or
pop
pusha
jnp
push
lock
mov
int3
mov
inc
cli
push
adc
dec
bound
sti
push
add
aam
in
loopne
lret
mov
mov
jo
fstl
xchg
add
sahf
jo
jl
jnp
subb
push
roll
cmpsb
xor
sbb
lods
push
or
repz
mov
cmc
inc
push
jecxz
cmpsl
lcall
mov
comiss
cmp
pusha
mov
outsb
fidivrl
mov
movsl
mov
xor
pop
insl
mov
popa
cmp
inc
xchg
mov
insb
push
cmp
ljmp
sbb
scas
sub
push
inc
rol
test
add
imul
negb
negb
add
test
or
call
lret
cld
aam
je
or
stos
mov
push
enter
nop
sub
lahf
outsl
jmp
mov
dec
out
incl
mov
jg
xchg
pushf
insb
sbb
push
sub
and
mov
push
add
movsl
mov
jbe
adc
mov
mov
pop
cwtl
addr16
les
repz
fsts
add
enter
adc
daa
xor
jge
pop
js
pop
push
push
sbb
icebp
and
ds
inc
push
scas
mov
test
cltd
ficoms
pop
sbb
dec
mov
push
out
push
data16
push
insl
arpl
add
insl
inc
arpl
pushf
or
mov
cmp
inc
mov
nop
les
inc
lcall
sub
ljmp
push
mov
ret
inc
and
jb
mov
stos
xchg
fdivrl
rcll
mov
mov
fcoms
xor
pushl
fisttps
xchg
adc
lods
mov
dec
adc
sbb
jg
inc
pop
add
dec
jecxz
rcrl
movsb
aaa
in
pop
push
adc
idiv
mov
data16
ja
shrl
dec
push
imul
leave
lock
xchg
push
xlat
fwait
xchg
pushf
popf
cli
push
aad
shll
mov
mov
mov
out
rcrb
jge
mov
incl
movsl
pusha
xor
push
pop
add
or
rcl
mov
add
ja
pop
jb
add
xchg
pop
fptan
sti
sub
shlb
mov
mov
mov
xlat
popl
mov
movsb
cmp
push
jb
xchg
clc
loop
stos
jecxz
xchg
pop
imul
out
add
or
lahf
leave
sbb
sbb
adc
dec
iret
out
mov
fisttps
push
repz
mov
rorl
push
sbb
lcall
cld
lahf
xorl
mov
mov
int3
jo
xor
push
mov
aad
xchg
pop
stos
sbb
outsb
out
push
imul
lea
aam
sbbb
xchg
incb
inc
jmp
and
hlt
jb
push
pop
pushf
push
pusha
adc
cmp
mov
scas
nopl
mov
int3
lret
pop
aad
mov
mov
arpl
leave
cmc
pop
pop
sub
dec
sbb
cmc
ss
test
ror
inc
imul
mov
dec
mov
scas
and
rol
mov
fisttpl
mov
xor
inc
mov
cs
in
push
cli
xor
push
sub
loope
dec
enter
dec
mov
push
push
lret
enter
dec
push
es
int3
sbb
nop
pop
movsl
or
aad
ret
mov
adcl
push
sti
cmp
stc
imul
repnz
adc
arpl
test
or
out
loop
xchg
test
aas
loopne
xor
mov
inc
mov
sti
cmp
cltd
fiadds
add
jle
idivl
pop
outsb
sbbb
mov
and
mov
or
addl
push
dec
loopne
enter
leave
add
push
icebp
pop
insb
mov
repnz
sub
jae
sahf
sbb
mov
dec
das
fstl
in
test
inc
icebp
add
in
scas
adc
push
push
rclb
fnsave
dec
and
cmp
push
mov
jl
xor
cmpl
loope
mov
cmpb
lods
hlt
push
divl
cmp
fld
jb
ljmp
sub
jb
shl
xor
stos
mov
fadds
aad
sbb
lock
and
push
rcrl
sub
ret
jmp
or
fwait
mov
rcrb
mov
insl
or
xor
xchg
icebp
add
mov
xchg
xor
jae
test
js
dec
inc
inc
jb
lods
push
or
xor
inc
cmpb
pop
mulb
mov
pop
cmpsb
in
rcll
dec
jge
scas
pop
je
pusha
mov
mov
pop
stc
xor
gs
cmp
out
push
mov
stc
nopl
xor
cmp
mov
xchg
mov
daa
push
add
testl
movsl
loopne
les
sub
pop
pop
jle
xor
arpl
cmp
pop
cmp
and
mov
popa
in
cmc
fdivr
or
adc
das
ja
push
jg
cs
daa
add
mov
jno
xchg
inc
subb
add
sbb
xor
mov
push
jge
jne
mov
pop
dec
shrb
lods
xlat
repnz
sub
mov
cs
dec
enter
sahf
or
aam
cmpsl
sub
bound
std
pop
lahf
lods
sub
inc
std
push
sub
movsb
sbb
mov
add
push
push
arpl
pop
mov
dec
inc
insb
sbb
mov
aam
mov
insb
cmp
jo
fsub
stc
jns
pop
decb
outsl
pop
adc
xor
mov
or
mov
cld
sbb
push
sub
lods
imul
xor
out
or
xchg
sub
aaa
test
mov
sbb
xchg
inc
add
push
shlb
xor
adc
push
ljmp
jmp
lret
pop
mov
or
mov
jb
fcmovnu
clc
mov
jno
or
movl
inc
push
push
fstpt
mov
jbe
dec
rclb
pop
sbb
jmp
data16
dec
psubw
ja
push
in
push
aad
add
movsb
push
and
add
lods
xchg
dec
xlat
adc
lock
cltd
out
xor
add
cmpsb
lea
daa
jns
hlt
mov
dec
imul
and
pop
sbb
pop
xchg
test
inc
push
pop
les
adc
hlt
fmuls
mov
mov
nop
mov
fs
stos
pop
and
fistps
int3
repnz
xlat
loop
dec
push
xor
xor
mov
loop
cmp
xchg
sbb
fwait
pop
mov
pop
sbb
hlt
mov
movq
mov
aad
loopne
adc
lahf
inc
or
inc
xor
addb
in
sub
sub
into
jecxz
jns
cmp
xchg
fistps
popa
pop
fildll
jl
sub
mov
ret
cmp
faddl
loopne
lret
sbb
inc
sbb
pop
mov
movl
fstpl
ficoms
and
movsb
xchg
cmp
dec
mov
stos
mov
add
js
call
xor
add
xchg
insb
mov
leave
daa
repz
dec
add
mov
push
std
rorb
lcall
fstpl
fisubl
psllw
inc
adc
testl
aas
iret
dec
jmp
subl
inc
push
mov
push
pmuludq
xor
pop
lahf
mov
adcb
fldenv
xchg
hlt
cmp
inc
jno
js
fdivl
cmp
jle
add
pmulhuw
xchg
jp
xchg
sub
lods
cmp
or
jle
and
push
dec
and
lods
push
jno
cmp
lret
sarl
dec
repz
in
aad
stc
jp
xchg
mov
inc
push
or
repnz
pop
mov
pop
dec
cmpsb
xchg
fnsetpm(287
push
xchg
xchg
stos
lret
dec
lahf
inc
les
adc
or
mov
push
mov
add
xchg
rcrb
or
