add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
inc
xor
decl
decl
test
mov
cmp
lahf
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
cmc
and
add
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
in
inc
inc
add
push
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
add
inc
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
add
inc
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
inc
pop
inc
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
dec
dec
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
pop
inc
add
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
dec
dec
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
inc
inc
add
add
adc
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
sub
add
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
cltd
cmp
sub
test
outsb
cmp
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
and
inc
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
dec
inc
add
inc
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
dec
inc
add
add
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
cmp
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
push
push
call
mov
add
lods
lds
scas
add
add
add
cmpsl
jno
ja
popa
in
add
mov
jge
mov
add
add
add
add
icebp
mov
ret
pop
movsl
pushf
pop
add
pop
test
repnz
push
mov
add
push
push
push
call
nop
neg
xchg
add
add
call
aad
add
pop
add
mov
lret
out
in
rolb
mov
addb
add
cmpsl
insb
jl
add
sar
add
hlt
add
add
movl
cwtl
add
data16
mov
vfrczsd
popl
add
mov
lods
add
mov
pop
popl
push
push
push
call
insb
add
jp
ror
fucomip
push
fstpl
iret
nop
add
xchg
pop
mov
jge
test
mov
add
push
jge
cmpsl
popf
add
addl
add
push
mov
jmp
add
test
add
add
cmpsb
add
add
fmull
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
call
add
xchg
rcll
add
test
add
stc
loopne
cmpsb
sahf
add
incb
xchg
push
test
add
or
movsb
push
xlat
test
mov
xchg
fucom
cmpsl
outsl
push
fstps
mov
pop
push
push
push
lea
push
push
call
out
add
cltd
xchg
iret
add
gs
add
cld
fldenv
add
add
add
add
arpl
jne
fimuls
xchg
jecxz
fiadds
mov
add
sti
and
stc
jl
add
enter
mov
test
or
push
push
push
push
push
lea
push
call
fdivrs
mov
pop
add
add
loop
mov
movsl
test
mov
add
ljmp
add
popa
add
add
mov
testb
add
add
stc
call
add
sahf
insb
push
push
add
jne
movl
xchg
arpl
add
add
mov
lea
pop
call
call
push
push
push
lea
push
call
add
iret
jmp
add
add
sahf
add
mov
jne
rolb
mov
pop
clc
add
test
add
mov
add
add
pop
add
mov
mov
lea
pop
push
push
lea
push
lea
push
push
push
call
pop
mov
stos
mov
je
xchg
out
add
fldt
popa
hlt
add
add
jmp
xchg
add
add
loopne
jno
pop
in
mov
call
add
pop
js
mov
in
ljmp
add
popl
pop
ror
lea
int3
lea
pop
call
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
lods
mov
add
pop
mov
add
add
add
imul
in
loope
test
fwait
add
outsl
xchg
add
stos
push
cltd
outsl
faddl
sbbb
add
add
add
add
fwait
mov
and
jmp
push
push
push
call
add
out
jmp
or
imul
mov
add
js
add
push
add
add
stc
mul
clc
add
cld
xchg
jge
add
sarb
stos
sbb
add
add
out
push
xlat
add
je
aam
bound
ret
push
push
push
push
push
push
push
call
xlat
add
mov
fsts
movsl
rolb
add
add
push
add
add
gs
lds
add
add
add
pop
push
test
int3
add
cmc
mov
aam
bound
mov
push
lea
push
call
jecxz
add
int
pop
add
shrb
push
add
mov
add
add
jbe
mov
xchg
cmpsb
add
ja
pop
add
add
in
add
gs
add
enter
lods
add
add
add
add
test
mov
lea
pop
mov
add
push
push
push
push
push
push
lea
push
push
call
add
rcrb
out
add
js
mov
add
add
add
add
test
shlb
imul
mov
rcrl
add
aam
mov
add
jns
add
add
mov
int
mov
push
fs
imul
fs
add
push
push
call
lahf
test
cli
rolb
add
shrb
aad
add
jecxz
xchg
add
add
in
add
add
js
cmpsb
test
pusha
mov
fs
add
xchg
add
cltd
jge
mov
lea
pop
add
mov
push
push
push
call
xchg
stos
fdivl
add
add
mov
cmpsl
add
scas
add
cmc
add
sti
icebp
lahf
add
lret
mov
push
add
cwtl
roll
mov
add
add
mov
movsb
add
movb
cmpsb
arpl
add
push
jl
add
pop
xor
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
pushf
add
mov
add
jmp
jo
add
add
clc
mov
push
loop
add
cwtl
add
add
add
mov
pop
mov
xchg
add
ja
add
out
lea
add
add
pop
add
push
push
sub
push
xor
add
xor
add
xor
sub
sub
sub
pop
inc
pop
push
push
push
push
push
call
jnp
add
mov
jge
add
xchg
movsb
add
notl
js
add
enter
mov
xchg
add
mov
add
jns
mov
lea
popl
xchg
arpl
add
mov
lea
pop
pushl
push
push
lea
push
call
enter
jae
add
and
add
jle
add
leave
xchg
push
add
scas
imul
add
add
add
mov
jns
shlb
lret
addl
shrl
add
pop
push
faddp
enter
push
add
icebp
popl
jmp
push
mov
filds
add
lahf
ror
loopne
test
pop
call
push
push
push
push
call
add
add
lds
jecxz
pop
xchg
mov
pop
push
push
add
mov
lock
add
fs
std
add
mov
test
add
add
jnp
xchg
jmp
jecxz
jnp
mov
mov
sbbb
int3
lea
pop
mov
movl
push
lea
push
push
call
add
add
add
add
std
cmc
add
outsl
mov
add
leave
jae
add
cli
jnp
mov
add
add
ficompl
andl
push
mov
add
add
add
mov
aad
cld
ror
add
pop
lea
push
push
push
push
lea
push
lea
push
call
add
enter
lock
cwtl
add
push
hlt
nop
mov
mov
add
add
fwait
cmpsl
add
cli
pop
add
frstor
out
popa
xchg
add
fs
test
add
add
add
jle
add
enter
push
mov
jle
add
je
add
lcall
mov
lea
pop
pushl
pushl
push
push
lea
push
push
push
lea
push
call
add
fimuls
add
add
add
in
icebp
aam
mov
push
add
add
pop
in
in
cwtl
gs
int3
mov
jne
add
enter
add
fidivl
out
xchg
lcall
add
add
bound
mov
call
add
lea
pop
call
push
push
push
push
push
lea
push
push
push
push
lea
push
call
rorb
cld
mov
push
push
xchg
fadds
xchg
add
fidivrs
fildl
add
push
out
push
jle
out
add
lods
add
in
mov
push
add
mov
add
add
mov
int3
jmp
add
add
mov
add
add
in
cli
mov
les
incb
jle
out
out
add
adcl
pushl
pushl
push
push
call
call
add
int
xchg
xchg
add
in
jl
pop
add
fadds
out
clc
add
mov
add
add
cltd
mov
mov
loope
mov
add
nop
jle
add
add
mov
add
enter
add
fildl
movb
add
add
add
jl
mov
lea
pop
call
push
push
dec
lea
xor
dec
push
sub
add
add
sub
sub
pop
add
pop
push
push
push
call
add
pushf
add
mov
add
pop
add
pop
repnz
mov
test
popl
imul
add
add
jecxz
lret
icebp
cmc
popf
je
add
jle
fiadds
add
add
enter
push
call
stc
push
ret
add
mov
fiadds
rorl
pop
pushl
push
push
push
push
push
push
call
add
loopne
in
js
in
jae
add
loop
cltd
mov
add
fsubrl
add
add
jnp
mov
add
cwtl
sahf
add
repnz
bound
add
sub
mov
roll
add
jl
mov
lea
pop
call
push
push
push
add
shl
sub
push
xor
add
ror
xor
shl
sub
add
dec
pop
sub
add
pop
push
push
call
std
add
add
lds
xchg
pop
add
je
pushf
xchg
xchg
lods
add
add
add
in
add
data16
aam
jle
popa
jp
xchg
mov
jbe
add
mov
movl
mov
flds
add
cld
lea
pop
push
push
push
push
lea
push
push
lea
push
push
call
push
add
add
add
add
pop
fcomps
mov
je
xchg
call
movb
movsl
mov
stos
add
push
orb
add
fs
add
into
jge
add
add
test
add
addr16
jb
mov
lea
pop
push
push
push
lea
push
call
add
push
add
imul
movl
add
add
neg
push
out
add
arpl
add
add
xchg
push
add
add
add
out
ljmp
call
mov
push
push
push
push
push
push
call
arpl
mov
test
add
cmpsl
mov
rolb
scas
test
fldl
add
shlb
shrl
add
push
xlat
add
add
add
push
mov
popf
add
add
jle
mov
lea
pop
push
push
lea
push
push
call
loope
mov
add
add
push
mov
icebp
add
iret
add
add
add
add
stos
enter
popf
add
add
hlt
add
mov
addb
push
add
add
test
imul
rcrl
jno
into
cmp
push
mov
mov
lea
pop
push
push
push
push
push
push
push
call
mov
lret
add
add
outsl
add
add
bound
fcomp
xchg
add
add
rolb
movsl
arpl
icebp
fiadds
add
add
lds
add
add
add
movsl
jl
in
jmp
mov
add
add
rolb
mov
add
jle
enter
add
add
push
fisttpll
test
data16
pop
in
push
lea
push
push
call
clc
mov
gs
cli
add
test
push
les
rolb
lcall
mov
add
pusha
add
jns
add
xchg
add
in
xchg
xchg
arpl
mov
add
add
iret
rcll
popa
push
shlb
shlb
mov
add
fildl
push
jp
jmp
jbe
pusha
push
mov
lea
pop
add
push
lea
push
push
push
push
lea
push
push
push
push
push
call
lods
add
jnp
addl
hlt
mov
stos
leave
jno
test
clc
add
add
sti
add
add
mov
sahf
mov
enter
addb
add
mov
clc
sahf
push
xchg
lret
lea
pop
add
push
push
push
push
push
push
lea
push
push
call
hlt
stos
mov
stos
add
add
addl
mov
add
mov
add
movsb
stc
add
mov
add
out
out
outsl
add
add
add
movsl
add
imul
push
add
int
cli
add
add
add
in
pop
cmc
add
mov
lea
pop
add
mov
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
push
in
add
lods
add
add
mov
arpl
add
push
rcr
imul
fildll
movsl
je
xchg
add
les
push
mov
jne
addl
add
add
add
mov
lea
pop
xor
push
push
push
lea
push
push
push
push
push
lea
push
push
call
loopne
add
add
stc
add
jge
stos
fs
push
fsubr
add
add
add
add
negl
test
test
arpl
cmpsl
call
jge
add
leave
fildll
mov
flds
mov
cmpsl
jle
not
push
add
mov
add
rolb
enter
add
mov
pop
push
lods
add
pusha
sub
les
push
push
push
push
lea
push
call
add
xlat
int3
add
mov
jp
mov
add
add
add
add
add
mov
fwait
add
jmp
add
jns
clc
in
jecxz
add
add
add
fiaddl
add
aad
clc
mov
lea
pop
add
push
push
push
lea
push
push
push
push
push
call
add
cmpsl
add
arpl
mov
mov
add
add
push
add
cmpsl
mov
add
add
data16
add
addr16
test
mov
jb
test
add
jl
xchg
xchg
add
xchg
movsb
add
push
add
fiadds
mov
std
push
loopne
add
add
mov
lea
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
add
jl
mov
in
add
test
add
gs
fwait
xlat
mov
mov
add
mov
add
lcall
add
aam
bound
pop
xor
push
push
push
push
push
call
add
faddl
ja
add
flds
xchg
fwait
mov
mov
movsl
pop
arpl
pusha
xchg
add
jmp
int
add
push
jbe
xchg
add
add
mov
add
add
add
cltd
fs
add
add
pop
xchg
movl
add
adc
add
push
lea
push
lea
push
push
call
add
jns
cmpsl
add
mov
add
push
add
mov
stos
add
iret
add
stos
add
add
add
add
add
mov
pop
lahf
add
xchg
add
add
pop
add
push
push
push
call
add
mov
popf
shlb
add
add
js
jb
push
lahf
add
add
add
clc
je
mov
add
add
add
ror
add
add
hlt
loope
mov
popa
or
pop
mov
push
push
push
push
push
call
xlat
mov
add
movsb
mov
jae
add
into
fdivs
pop
add
add
push
popf
cmc
add
add
add
pop
add
test
jmp
ljmp
scas
js
add
roll
pop
pop
into
add
hlt
lea
pop
xor
push
push
push
push
lea
push
push
call
add
add
mov
add
add
add
js
insb
add
add
addl
add
add
test
out
imull
lods
add
jecxz
sti
mov
cld
fdivrs
mov
outsl
popf
mov
imulb
add
add
imul
add
lea
pop
add
push
lea
push
push
push
lea
push
call
mov
pop
add
add
pop
in
jns
mov
add
fiaddl
pop
addr16
mov
imul
add
popl
loopne
add
mov
add
arpl
add
enter
shrl
add
repnz
add
mov
out
js
mov
add
pop
push
mov
push
push
push
push
push
push
lea
push
push
push
call
leave
lods
add
xchg
js
add
add
add
stos
add
add
stos
add
int3
subl
add
cmc
add
in
call
loope
jns
incb
sti
mov
jge
add
pop
xor
push
push
lea
push
push
lea
push
push
push
lea
push
call
imul
cld
mov
testb
add
jmp
mov
bound
add
imul
fisubl
xchg
add
in
add
add
icebp
cltd
add
roll
push
jecxz
mov
mov
xchg
add
into
cmpsb
je
lea
pop
add
push
push
push
push
push
push
push
push
call
in
mov
pop
ljmp
add
mov
out
iret
add
sub
add
scas
xchg
les
lea
lret
ficoms
popf
imul
jb
mov
fadd
stc
add
fbld
in
ljmp
addl
cli
add
push
repnz
add
mov
lea
pop
sub
push
push
call
add
mov
enter
mov
arpl
jb
movsl
push
lret
push
stc
out
mov
xorl
fmuls
add
add
jae
mov
add
lea
pop
pop
rep
push
push
push
push
push
lea
push
push
call
fistps
add
add
popf
push
add
mov
mov
add
rolb
jae
popf
xchg
add
imul
hlt
in
incb
add
idivl
add
add
add
hlt
add
lret
add
cmpsl
ret
add
jl
push
push
clc
jge
mov
lea
pop
pop
push
push
call
add
cwtl
add
push
outsl
add
xchg
mov
add
scas
cld
fnstcw
add
add
sti
add
add
pop
add
je
mov
int
add
cmpsb
cmpsl
add
loope
mov
popa
mov
pop
mov
add
add
pop
mov
add
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
mov
adc
mov
arpl
add
add
add
jecxz
add
add
add
cli
les
les
popl
outsl
add
add
scas
je
mov
nop
jecxz
add
mov
mov
mov
pop
cli
add
add
subb
mov
lea
pop
add
push
push
push
push
push
call
add
fsts
add
ljmp
add
out
pushf
add
out
aam
cltd
xchg
data16
mov
cli
add
mov
movb
stos
lea
shlb
stc
add
pop
mov
add
add
jnp
hlt
subl
icebp
mov
pusha
rcr
outsl
mov
rolb
add
bound
add
mov
push
push
push
push
lea
push
push
push
call
rclb
mov
shl
arpl
mov
push
add
enter
xchg
imul
cwtl
add
add
add
call
add
pop
xor
push
push
push
push
lea
push
push
push
push
push
call
mov
add
iret
addl
push
add
mov
jno
mov
lods
add
add
add
js
add
add
rolb
mov
add
in
add
add
pop
add
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
scas
add
xchg
lret
add
add
popa
jae
out
add
jecxz
mov
les
add
nop
call
fbstp
lods
repnz
outsl
xlat
push
add
mov
add
mul
lahf
add
std
imul
lds
jecxz
add
add
rorb
add
into
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
cld
push
add
out
add
add
mov
div
add
mov
add
add
add
cmc
mov
xchg
add
mov
jnp
add
add
add
popa
push
add
add
add
imul
push
push
stos
lahf
pop
fs
lea
pop
xor
push
push
push
call
add
aam
add
pop
hlt
addl
add
test
mov
add
jp
add
mov
mov
add
popf
add
nop
arpl
pop
in
leave
stc
iret
add
add
ja
mov
mov
add
stos
stos
add
cltd
nop
hlt
ljmp
rolb
add
loop
add
lea
pop
add
push
push
lea
push
push
call
add
add
aam
add
stos
add
stc
add
jae
xchg
add
out
push
add
pop
add
push
lock
mov
add
add
in
add
pop
popf
add
movsl
js
jbe
lods
imulb
add
in
add
add
add
add
adc
dec
sub
push
push
push
lea
push
push
lea
push
push
call
add
mov
loop
add
fdivs
cmc
mov
add
jno
add
test
test
add
add
mov
xlat
mov
add
add
push
add
push
add
add
xlat
xchg
in
cli
add
pop
add
push
push
push
push
push
push
call
stos
jnp
push
ret
fistl
loopne
shlb
out
push
loopne
lods
xchg
xchg
arpl
add
add
add
iret
push
repnz
add
fldcw
lret
add
lea
jle
add
add
nop
cmc
cmc
mov
lea
pop
add
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
call
add
add
int3
add
add
in
sbbl
imul
pop
std
loopne
into
xchg
mov
in
cld
mov
add
jnp
add
cmpsb
ja
add
clc
popl
mov
lea
pop
mov
push
push
rol
add
ror
sub
push
sub
add
add
ror
xor
sub
shl
pop
ror
ror
sub
pop
push
lea
push
call
add
xchg
add
add
add
std
add
pop
out
faddl
test
add
ja
outsl
jge
xchg
add
add
addl
add
mov
add
lds
add
in
mov
rcll
add
movl
scas
mov
out
jb
add
pop
push
ljmp
lea
pop
pushl
push
sub
rol
xor
not
pop
call
push
push
push
push
call
add
pusha
add
lahf
stos
hlt
test
add
int
fwait
add
sti
outsl
out
push
add
xchg
pop
jp
jle
xchg
add
add
sarb
enter
add
add
add
pop
add
cmpsl
xchg
data16
filds
mov
lea
pop
push
push
push
inc
push
xor
add
shr
sub
rol
pop
sub
sub
pop
push
lea
sub
pop
push
push
push
not
pop
call
push
add
sub
add
ror
pop
mov
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
pop
mov
add
add
lea
stc
scas
add
out
mov
add
add
push
pop
add
add
jne
ja
add
mov
add
leave
mov
xchg
in
mov
add
imul
add
bound
push
add
test
add
sti
scas
out
mov
lea
pop
push
push
push
lea
dec
pop
mov
push
shr
pop
add
add
push
lea
push
push
push
push
call
lods
popl
add
frstor
in
add
add
mov
clc
add
add
stos
fs
enter
cmpsb
lret
jnp
add
lods
cltd
jo
movsl
xchg
pop
lahf
add
jbe
sub
jb
int3
add
in
movb
mov
cld
lea
pop
add
push
lea
push
push
push
lea
push
push
call
jbe
add
mov
aad
pushf
add
xchg
loopne
loop
je
add
movsl
add
add
add
add
add
in
add
add
xlat
jns
lea
add
mov
pop
xchg
jae
cli
mov
add
jne
add
mov
add
popf
add
shlb
mov
xor
push
ror
sub
shl
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
neg
mov
add
add
pop
imul
pop
mov
lds
add
add
add
aam
add
addr16
pop
add
add
add
add
add
stos
loop
xchg
xchg
add
mov
mov
push
rclb
mov
call
mov
lea
pop
mov
xor
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
add
shlb
mov
out
popl
cmpsb
rcrl
add
mov
push
xlat
in
xchg
lahf
test
data16
push
cwtl
add
xchg
push
pop
add
add
add
clc
int3
add
cwtl
add
cltd
add
add
mov
aam
add
add
idiv
sti
add
jecxz
leave
bound
les
lock
push
call
popa
add
pop
int
add
pop
add
add
jle
addb
ja
add
rorb
mov
mov
xchg
loop
loopne
hlt
add
mov
pop
add
add
add
in
add
cld
xchg
add
add
and
push
mov
addb
addr16
lea
pop
pop
push
lea
dec
lea
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
mov
pop
testl
add
addl
jne
movsl
add
fsubrp
neg
add
push
bound
mov
add
pop
mov
pop
add
add
int3
lea
pop
xor
push
push
push
push
push
push
push
push
lea
push
call
pop
addr16
stc
mov
iret
add
aam
add
mov
test
add
add
mov
add
push
addl
push
add
add
add
add
mov
lea
pop
add
push
lea
dec
pop
rep
push
push
push
push
push
push
lea
push
push
call
add
xchg
mov
in
push
add
out
add
lcall
push
sti
xchg
imul
add
add
addb
add
add
out
jo
arpl
xchg
repnz
ljmp
add
mov
add
add
addb
jne
add
mov
add
jecxz
cmc
lea
pop
mov
push
push
push
push
lea
push
lea
push
call
add
loop
xchg
lcall
mov
mov
cmp
movsb
cwtl
fistl
add
push
scas
in
add
add
aad
add
test
add
add
mov
add
jge
cmpsb
loope
js
add
imul
push
add
add
pop
addr16
add
testl
mov
adc
xor
push
push
push
lea
push
push
push
push
lea
push
call
add
cmpsl
je
decb
movsl
aad
shrb
add
out
add
add
cld
add
addl
add
scas
pop
pop
test
push
ljmp
js
jmp
mov
mov
mov
lea
pop
add
push
push
lea
push
push
lea
push
call
data16
mov
fdivp
negb
add
add
jl
in
add
inc
xchg
add
jbe
jae
pop
mov
mov
jge
icebp
jl
cwtl
pop
add
add
add
pusha
adc
or
je
push
not
sub
pop
mov
xor
push
push
push
push
call
add
out
test
sarl
add
add
pop
jl
js
fs
xchg
add
icebp
into
cmc
jae
out
lahf
out
cmpsb
add
add
testb
add
add
xchg
push
xchg
lea
add
in
lcall
mov
push
ret
out
add
add
aad
nop
add
mov
addr16
add
pop
mov
xor
push
push
push
push
lea
push
push
lea
push
push
call
cltd
add
push
add
into
jmp
arpl
add
mov
add
scas
fidivrl
add
mov
jecxz
push
jmp
mov
lea
pop
add
push
push
push
lea
push
push
push
lea
push
push
push
push
call
testl
add
mov
add
out
add
add
jbe
pushf
imul
add
imul
mov
add
jbe
fcoms
movsb
add
iret
add
pop
lea
pop
pop
sahf
movsb
add
aam
bound
pop
add
push
xor
rol
add
pop
push
push
add
not
not
pop
mov
push
push
push
lea
push
push
lea
push
push
lea
push
call
test
cwtl
mov
mov
add
pop
mov
add
mov
sahf
xchg
xchg
add
add
in
adcb
iret
xlat
add
mov
test
sbb
xor
push
push
push
push
lea
push
push
push
lea
push
push
call
lea
je
add
sti
add
insb
nop
bound
add
scas
push
popa
add
mov
add
xlat
cli
push
add
jb
add
add
pop
add
push
push
push
lea
push
push
push
push
push
push
push
call
add
pop
mov
mov
add
add
xchg
mov
aam
pushf
add
add
add
add
mov
add
add
add
jns
mov
aad
add
add
fsub
add
pop
add
pop
push
lea
push
push
push
call
jecxz
ja
incb
stos
movl
shll
fadds
bound
add
add
sti
out
test
std
add
rcrb
mov
les
add
push
xlat
mov
mov
popa
mov
jne
add
mov
lea
pop
rep
push
push
push
push
call
pop
xchg
addl
add
add
lods
push
fnsave
add
add
scas
jb
xchg
test
mov
add
icebp
lcall
stos
add
xchg
add
xlat
in
stc
stc
std
mov
push
mov
vpshuflw
jne
push
add
jne
mov
jb
testb
popf
add
add
fildl
mov
lea
pop
mov
push
push
push
push
push
push
push
call
mov
mov
add
cmpsl
cli
add
add
out
add
add
out
loope
xlat
mov
icebp
add
add
int
mov
mov
std
mov
out
add
addl
pop
mov
lea
pop
xor
push
push
push
lea
push
lea
push
push
push
push
call
xchg
jle
lds
add
mov
add
mov
xlat
mov
pop
test
add
into
je
xchg
mov
iret
lds
addl
flds
call
add
add
jnp
cld
movsl
fmul
fstpt
int3
lea
pop
add
push
push
push
lea
push
lea
push
push
push
push
push
call
insb
stos
mov
add
add
in
mov
push
add
fwait
ret
add
pop
add
cmc
add
mov
filds
sti
loopne
add
movsl
add
add
add
add
lods
jnp
add
xlat
add
roll
fldl
cli
pop
add
xchg
add
les
lea
pop
or
je
push
pop
mov
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
mov
call
out
imul
mov
add
add
out
xchg
pop
add
cmpsb
mov
cli
add
loop
xchg
in
add
mov
push
popa
repnz
enter
iret
cld
loope
mov
movsb
jnp
jecxz
mov
and
sub
push
push
push
call
mov
push
test
mov
add
add
icebp
mov
stos
fucomi
test
add
out
bound
lcall
add
mov
pop
jb
add
sarl
popf
gs
pop
stos
imul
jmp
jecxz
iret
add
fnstcw
imul
push
pop
sahf
fsubrl
add
add
add
mov
mov
hlt
lea
pop
add
rep
push
not
sub
pop
pop
push
push
dec
ror
add
shr
push
push
pop
add
not
lea
sub
pop
ror
not
not
pop
push
rol
pop
pop
mov
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
xchg
add
xchg
vshufpd
add
add
add
mov
in
xchg
stc
mov
add
pop
xchg
add
add
jge
mov
jns
add
xlat
add
add
add
aad
pop
mov
lea
pop
mov
push
push
lea
push
push
push
push
call
push
add
jl
fisttpl
push
add
jge
fldl
add
mov
mov
pop
cld
cmpsb
sahf
add
add
enter
bound
mov
popl
scas
rorb
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
add
mov
mov
add
push
xchg
fwait
jae
add
add
add
jmp
pop
jnp
mov
add
mov
jne
add
xchg
loope
push
call
jl
bound
add
mov
add
arpl
jo
add
add
pusha
sub
loopne
push
sub
inc
inc
pop
mov
add
push
lea
push
call
test
mov
add
mov
xlat
jp
xchg
cmpsb
push
cwtl
add
fdivl
jge
add
add
data16
pop
add
stos
xchg
test
add
int3
cld
enter
lcall
mov
jp
std
mov
shlb
lret
jp
add
divl
faddl
fsts
popa
or
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
in
lock
lea
fimuls
add
arpl
sar
mov
add
stos
in
lret
add
push
xchg
add
add
leave
orl
mov
lea
pop
push
push
push
lea
push
call
add
out
mov
add
test
fiadds
fucomi
jno
mov
add
mov
lret
mov
out
add
pusha
rolb
mov
add
incb
out
add
push
add
pop
loopne
xchg
imul
test
int
lret
cwtl
les
push
push
mov
lea
pop
push
mov
push
lea
push
push
push
push
push
push
push
push
call
fiadds
mov
xlat
jp
loopne
add
jo
scas
jmp
sahf
add
add
in
test
out
imul
push
add
test
in
out
add
fadds
out
add
jp
ja
fwait
stos
xchg
push
add
add
mov
and
pop
push
add
pop
pop
pop
push
xor
pop
pop
push
shl
rol
rol
pop
leave
push
lea
push
push
push
push
push
push
lea
push
push
push
call
test
test
add
add
rcrb
add
mov
lds
fiadds
add
mov
mov
push
add
fs
fldlg2
fildl
stos
mov
add
add
fldl
mov
lea
pop
ret
push
shr
rol
inc
pop
push
push
push
push
lea
push
push
push
push
push
push
call
test
popa
add
test
add
push
int
add
push
jae
movsl
ret
add
jo
nop
add
loop
loopne
add
add
add
add
jecxz
add
fildll
add
lock
add
mov
lea
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
insb
jns
add
hlt
lcall
mov
popl
std
add
test
lods
push
clc
add
in
rolb
iret
ret
fwait
add
rolb
filds
bound
add
jp
add
iret
mov
add
add
mov
add
roll
xchg
push
add
loopne
add
add
fsubrl
aad
mov
lret
lea
pop
add
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
movsb
add
mov
add
add
arpl
add
lret
push
mov
push
xchg
out
push
mov
xchg
mov
add
add
mov
test
add
add
mov
add
push
add
pop
push
push
push
call
loopne
add
ljmp
pop
xchg
ficoml
lods
add
scas
add
jge
add
add
add
mov
in
stos
loop
loop
add
fmull
push
dec
rol
add
pop
push
push
push
push
lea
push
push
push
push
push
push
call
addr16
cmpl
mov
add
mov
popa
test
mov
add
add
loope
cmpsb
add
push
add
cwtl
out
add
movsl
fmuls
mov
in
arpl
mov
add
add
add
cmpsb
add
mov
mov
fdivrs
in
mov
int3
lea
pop
movl
push
push
lea
push
lea
push
call
add
fstps
stos
add
mov
lods
nop
add
lds
movl
out
push
lea
mov
add
add
into
scas
popf
sti
lds
add
fucomp
scas
add
fiaddl
mov
in
add
jmp
faddl
in
lcall
add
add
jae
pop
orb
pop
addl
test
je
push
xor
ror
sub
ror
pop
mov
pop
push
push
push
push
push
push
push
push
push
lea
push
call
add
jo
pushf
lods
mov
add
shr
xchg
mov
ja
add
test
mov
add
add
insb
add
stos
jns
test
add
add
lahf
cwtl
mov
add
xchg
movsb
add
jl
add
add
jbe
movsb
add
pop
pop
pop
push
shr
pop
pop
leave
push
push
lea
push
lea
push
lea
push
push
push
push
call
jae
rolb
pusha
lods
add
push
xchg
cld
push
add
out
add
clc
cmpsb
add
add
add
fistl
add
loop
add
add
add
iret
add
add
jge
mov
add
ror
add
aam
add
add
add
iret
push
add
filds
cmpsl
stos
int
add
add
imul
pop
mov
aam
bound
pop
ret
push
inc
add
shl
pop
push
mov
push
push
call
push
mov
add
add
push
lret
add
in
push
add
pushf
add
or
add
fiadds
repnz
fiadds
test
sti
add
js
repnz
pop
xchg
mov
pop
pop
addb
add
jmp
push
mov
add
add
lock
test
mov
add
lds
add
mov
lea
pop
add
push
push
add
add
xor
pop
push
push
shr
sub
shl
pop
push
push
lea
push
push
lea
push
call
xlat
push
mov
mov
add
push
xchg
add
pop
stos
mov
mov
mov
xchg
mov
nop
insb
ret
add
mov
mov
popa
cmp
stc
jmp
scas
mov
add
add
mov
test
add
loope
add
add
xchg
xchg
sahf
mov
pop
push
push
inc
pop
testl
addl
push
push
push
lea
push
push
call
xchg
add
add
shl
rolb
add
add
je
fadds
add
add
scas
popa
jae
imul
add
add
cwtl
popf
add
add
add
add
jmp
add
loop
add
ljmp
add
leave
push
add
add
mov
add
mov
lea
pop
push
push
shl
sub
shr
lea
pop
call
mov
push
push
push
push
lea
push
push
push
push
call
mov
les
jmp
add
popa
iret
add
add
add
incb
testb
add
data16
add
add
les
flds
fucomip
add
popf
xchg
add
fstpl
hlt
lea
pop
pushl
push
push
push
lea
push
push
push
push
call
add
popl
decb
add
pop
cmpsl
imul
add
add
iret
mov
push
fsubrs
fistps
cmpsb
jb
in
xchg
push
jmp
pop
rolb
add
ret
add
xchg
faddl
les
add
orb
push
push
lea
push
push
push
push
call
add
add
lret
add
enter
ror
js
cmpsb
stc
stos
mov
test
add
lock
mov
stos
add
in
les
add
andl
jae
in
imul
add
add
add
push
lret
scas
loop
pop
bound
adc
push
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
frstor
test
add
mov
sarb
mov
add
add
add
fildl
add
add
movl
jae
jmp
add
shlb
int3
mov
add
xchg
add
shrl
aam
bound
call
cmpl
jne
push
lea
push
push
push
push
lea
push
push
push
push
push
call
scas
add
jle
add
jge
jecxz
add
fprem
jge
add
ja
loopne
int
mov
add
add
movsl
xchg
add
bound
mov
lea
add
out
add
add
mov
add
popa
jbe
movsb
jno
add
lret
add
add
loop
adc
fs
fwait
mov
lea
pop
pop
push
not
sub
inc
pop
pop
push
add
rol
sub
pop
pop
push
pop
pop
leave
push
push
push
push
push
push
push
call
addr16
stc
add
add
add
out
outsl
add
imul
add
rolb
add
mov
cli
mov
pop
xchg
stc
add
mov
add
leave
int3
add
int3
lea
pop
ret
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
lock
add
add
je
push
out
push
add
pop
jo
lret
out
mov
int
call
add
loope
add
add
bound
pop
push
push
push
lea
push
push
push
push
call
arpl
pop
fstl
mov
mov
add
in
mov
fiaddl
fs
movb
add
addb
leave
pop
les
insb
add
ljmpw
pop
mov
add
add
mov
fcmovb
push
mov
xchg
scas
add
xchg
pop
mov
lods
add
add
aam
fmuls
pop
mov
push
sub
ror
pop
add
push
push
sub
sub
xor
not
pop
push
push
lea
pop
push
push
push
lea
push
call
add
lcall
add
incb
add
add
add
add
pop
sahf
insb
mov
orl
jp
xchg
movsl
fsubrl
icebp
imul
divl
rcll
add
pop
mov
clc
jbe
add
cmpsb
mov
lea
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
add
fisubrs
mov
repnz
fs
fs
add
mov
xchg
add
mov
test
add
mov
fiaddl
lret
add
test
addr16
xlat
add
pop
adc
test
je
add
fmull
inc
cld
add
add
rol
loopne
not
sub
pop
call
push
push
lea
pop
call
push
pop
subl
push
pop
cmpl
jne
pop
push
shr
pop
pop
pop
push
push
lea
push
push
lea
push
push
push
push
call
pop
add
lea
add
stos
push
flds
xchg
mov
add
pop
add
add
mov
out
icebp
jnp
add
xchg
mov
add
add
lcallw
add
jmp
jne
add
xchg
outsl
add
mov
lea
pop
pop
push
rol
add
pop
leave
ret
push
pop
push
push
add
sub
ror
pop
mov
push
push
call
mov
stc
add
add
mov
add
in
lcall
add
in
fnstcw
in
hlt
sahf
lea
popf
mov
jbe
mov
popa
adc
mov
add
add
add
cld
fistps
mov
pop
add
push
enter
sahf
add
lea
pop
add
push
add
shr
not
pop
push
push
push
push
push
push
call
xchg
add
add
add
into
add
scas
add
add
add
fisubrs
mov
mov
add
jae
add
add
xchg
add
mov
add
add
add
in
add
insb
add
add
in
cltd
fldcw
mov
jae
popl
add
in
cmpsl
add
stos
in
fistpl
add
mov
add
data16
push
push
push
push
push
push
push
push
push
push
call
pop
mov
add
les
push
movl
push
enter
movsl
mov
add
push
mov
add
push
fstpl
xchg
scas
add
test
push
add
add
add
pusha
add
sti
add
pop
push
push
dec
add
pop
push
push
push
push
push
push
lea
push
push
push
push
call
mov
mov
add
add
add
add
jbe
xchg
out
mov
jae
test
lods
into
pop
xchg
add
sub
fnstenv
imul
add
imul
lret
mov
add
jecxz
outsl
add
add
add
add
add
mov
lea
pop
mov
push
push
push
push
push
push
push
call
add
movsb
xchg
ret
add
push
fs
pushf
add
push
rcr
bound
mov
add
add
add
push
add
add
pop
out
lcall
cli
addl
fidivl
mov
lea
pop
lea
push
push
push
push
push
push
call
sti
out
add
add
mov
add
xchg
add
ljmp
int
add
aam
xchg
addl
iret
mov
add
push
push
mov
fldl
stc
sahf
ljmp
lea
pop
sub
push
push
lea
push
push
push
push
call
add
clc
add
add
xorb
mov
push
push
add
add
jecxz
pop
mov
cwtl
test
mov
idivl
xchg
cmc
mov
pop
add
mov
push
cmpsb
add
out
jle
add
push
add
pop
mov
push
shl
xor
pop
shr
push
lea
push
push
lea
push
push
lea
push
call
cld
fsubr
lock
into
pop
add
mov
xchg
fistpll
call
out
add
mov
not
popf
lods
xchg
push
movsl
adcl
lahf
mov
add
add
add
add
add
sahf
add
js
addb
xchg
add
orl
add
mov
push
sub
ror
pop
mov
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
pop
mov
add
cmpsl
ret
fdivrp
lea
out
movsl
mov
rcll
add
sahf
out
jp
add
test
mov
out
add
mov
add
mov
mov
lea
pop
add
push
inc
add
pop
add
push
push
push
push
lea
push
push
call
jmp
add
repnz
add
add
add
add
pop
add
lret
jp
std
add
popa
push
mov
push
js
pop
add
nop
add
add
jne
mov
xlat
jp
add
add
xorl
jno
add
xchg
cwtl
lcall
pop
add
add
pusha
sbb
inc
add
add
mov
push
push
push
push
call
add
add
feni(8087
add
imul
out
lock
push
lcall
add
xchg
jo
add
jle
into
jle
add
add
jae
mov
add
add
add
add
cwtl
add
add
add
lea
pop
mov
cmp
jne
push
sub
pop
cmp
jne
mov
push
push
call
shrl
cltd
add
data16
mov
add
pop
xchg
add
int
cmpsb
push
fiadds
add
xchg
pop
add
cli
mov
add
jne
cwtl
add
jnp
mov
add
push
scas
add
xchg
idivb
add
push
add
pop
movl
push
sub
pop
jmp
push
rol
add
dec
pop
mov
mov
push
add
xor
sub
pop
sub
jne
push
lea
push
push
lea
push
call
hlt
add
insb
add
add
add
add
popf
mov
add
add
iret
mov
popa
push
add
mov
pop
mov
movsb
incb
jno
add
fdivrl
lods
push
add
xchg
test
xlat
add
add
bound
pop
mov
push
add
xor
pop
movl
push
dec
add
pop
jmp
mov
push
lea
push
push
lea
push
lea
push
push
push
call
add
out
add
test
push
popf
add
push
or
arpl
aam
push
mov
add
mov
lea
mov
std
jbe
add
enter
cmpsl
jge
push
jb
add
jl
add
add
add
hlt
je
add
lock
add
add
add
popf
add
sar
cmc
add
sbb
mov
push
lea
push
push
push
push
push
call
add
mov
in
jle
mov
add
add
xchg
arpl
add
add
shl
ror
mov
ja
add
xlat
in
add
pop
add
add
int
add
mov
jae
addb
into
loop
mov
scas
mov
loopne
mov
jp
add
add
jmp
add
bound
add
call
lea
pop
cmp
jne
mov
push
push
call
loop
stos
test
arpl
fwait
std
jmp
mov
add
add
in
mov
xchg
cli
stos
add
lcall
cmpsl
xchg
push
jns
add
add
stc
add
mov
les
add
add
add
out
mov
or
add
loopne
pop
mov
cmpw
jne
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
xlat
sar
add
add
add
rorb
out
fldl
notl
jle
add
add
mov
lret
mov
lret
incb
cmpl
aam
bound
pop
mov
movl
push
push
lea
push
lea
push
push
push
lea
push
call
add
movsb
sub
add
add
sbb
data16
out
xor
lret
out
rcl
iret
add
add
fiaddl
pusha
add
mov
jmp
jb
lods
mov
lea
pop
jmp
pushl
push
lea
pop
pop
mov
push
not
not
pop
mov
push
dec
pop
mov
push
push
sub
ror
shr
push
and
add
sub
shr
sub
shl
add
pop
pop
push
add
pop
push
push
push
push
call
add
cmpsl
add
mov
call
pop
pop
popl
pop
jge
add
mov
mov
pop
lret
pop
add
out
out
mov
mov
lretw
in
sahf
jbe
int3
jge
add
add
push
add
add
add
ret
add
icebp
test
add
in
mov
add
ret
add
add
jmp
bound
pop
call
push
push
push
push
push
push
push
call
add
stc
add
lret
in
pop
lret
int3
mov
add
push
ja
nop
imul
add
rcr
mov
add
add
in
pop
jbe
shl
out
mov
xchg
js
add
jle
rolb
add
add
enter
add
add
xchg
shll
add
lea
pop
cmpl
je
push
push
rol
push
xor
add
lea
sub
sub
pop
shr
pop
push
pop
push
push
sub
sub
pop
call
cmpl
je
push
push
not
push
sub
add
xor
inc
sub
add
rol
add
pop
dec
sub
shr
pop
push
ror
shl
pop
push
push
push
push
push
push
call
cmc
add
lods
add
xchg
fnclex
pop
jecxz
stos
enter
push
mov
jbe
cmpsl
add
roll
pusha
bnd
add
mov
add
ja
lahf
xchg
xlat
mov
lea
pop
call
push
push
push
push
push
push
call
lods
add
add
mov
filds
addl
in
add
jnp
cli
ljmp
aad
jmp
add
cltd
add
jecxz
add
nop
les
pusha
notb
add
push
mov
in
ja
pop
addl
not
ret
add
add
add
mov
add
jmp
add
fsubs
add
add
lods
add
sbb
js
int3
fldz
ret
push
push
add
push
push
add
sub
add
push
or
inc
add
dec
inc
shr
sub
add
add
pop
shl
sub
xor
pop
push
add
lea
lea
not
pop
push
call
push
sub
dec
pop
cmpl
je
push
push
lea
lea
not
push
xor
add
shl
inc
sub
not
sub
shr
dec
pop
rol
inc
pop
push
rol
lea
pop
push
push
push
push
lea
push
push
call
out
loope
subb
xchg
in
outsl
mov
movsl
jb
mov
jge
add
xchg
lcall
loopne
mov
loope
int
add
add
pushf
int3
add
pusha
add
add
mov
add
popa
imul
mov
test
add
lds
xlat
shll
mov
lea
pop
call
cmpl
je
push
push
shl
push
sub
add
sub
sub
sub
add
pop
dec
pop
push
lea
push
push
call
pop
mov
stc
xchg
insb
movsb
add
push
add
lds
vaddpd
scas
stc
hlt
add
mov
add
mov
nop
add
shll
push
add
popl
fcomps
jge
mov
lea
pop
push
call
push
shr
pop
cmpl
je
push
push
inc
shl
rol
push
xor
add
lea
inc
sub
add
shl
pop
shl
lea
pop
push
add
pop
push
push
not
add
pop
call
cmpl
je
push
push
ror
lea
lea
sub
push
xor
add
shr
shl
sub
add
ror
dec
shr
pop
dec
shl
pop
push
push
push
push
call
mov
add
roll
cld
add
add
mov
cmpsb
lods
xchg
push
jle
add
add
cmc
jl
js
in
add
add
xchg
mov
add
movb
in
add
pop
push
push
add
not
pop
call
push
lea
shl
inc
pop
cmpl
je
push
push
rol
not
add
push
or
not
add
inc
not
shr
sub
sub
not
rol
sub
pop
not
xor
not
add
pop
push
push
push
push
push
push
push
call
add
add
add
mov
add
test
jo
add
add
add
add
add
out
rcr
jne
mov
mov
add
push
add
add
pop
lahf
jge
mov
pop
add
pop
push
mov
hlt
lea
pop
push
push
ror
xor
pop
call
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
scas
pop
ljmp
orb
xchg
rorb
imul
xchg
add
leave
mov
ja
add
add
test
aad
push
add
add
insb
mov
lea
pop
cmpl
je
push
push
not
not
push
xor
add
sub
dec
inc
sub
xor
xor
not
add
pop
rol
lea
pop
push
lea
push
lea
push
lea
push
call
shll
add
mov
jmp
shl
add
lahf
add
popf
ja
add
add
add
add
add
add
add
lock
add
in
add
add
xlat
int
shlb
lds
add
add
js
mov
or
mov
add
pop
push
push
inc
pop
call
cmpl
je
push
push
dec
dec
push
and
add
not
rol
sub
inc
not
xor
pop
shr
add
pop
push
dec
lea
shr
pop
push
push
not
inc
inc
pop
call
push
lea
add
pop
cmpl
je
push
push
inc
sub
sub
sub
push
or
not
add
inc
sub
dec
pop
xor
pop
push
sub
dec
pop
push
push
sub
shl
pop
call
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
bound
push
into
enter
push
add
add
add
add
lock
pop
add
push
testl
push
add
jae
jl
fcom
mov
mov
lods
add
push
pop
aad
cld
lea
pop
cmpl
je
push
push
inc
not
shr
xor
push
or
inc
add
add
sub
shr
xor
pop
lea
pop
push
push
call
add
add
int
out
add
add
add
test
mov
add
add
mov
add
push
js
stc
popa
pop
add
jmp
testb
movsb
popa
xchg
add
add
push
loop
fadds
add
mov
add
add
add
mov
pusha
add
repnz
add
rorl
pop
push
call
push
sub
sub
pop
cmpl
jne
push
shl
inc
sub
pop
mov
push
push
push
lea
push
push
push
call
jno
jl
add
add
leave
mov
lcall
add
repnz
mov
add
jae
pop
xchg
add
loopne
cltd
add
xchg
roll
add
add
add
jl
add
mov
mov
roll
mov
fcoml
mov
add
add
cld
push
add
bound
pop
movl
push
inc
add
pop
jmp
push
lea
push
push
push
push
lea
push
push
push
call
add
pop
ja
add
add
add
add
lock
add
repnz
test
sti
add
rolb
mov
fcmovb
lahf
lret
add
repnz
add
add
data16
sahf
add
xchg
add
add
xchg
mov
add
mov
push
push
int3
lea
pop
xor
push
add
lea
pop
pop
push
ror
ror
pop
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
lret
mov
add
mov
add
rcrb
xchg
jl
xchg
add
scas
add
add
mov
std
jnp
mov
xchg
rcr
add
xchg
loop
add
add
push
test
add
xchg
add
add
flds
shr
mov
jns
cmc
add
in
cmc
add
popa
jmp
pop
insb
mov
add
gs
cmpb
add
cmc
add
mov
lea
pop
pop
push
lea
push
lea
push
lea
push
call
pusha
repnz
add
pusha
pop
clc
leave
add
call
lcall
stos
mov
add
push
xlat
jmp
mov
aad
scas
cmp
add
fcmovbe
add
add
add
push
aam
mov
add
add
pop
add
ficomps
cld
lea
pop
pop
leave
push
push
push
push
push
push
call
add
std
pop
add
xchg
imul
cmpsb
add
add
add
add
add
push
std
add
pop
lret
push
add
fwait
mov
pop
jbe
push
movsl
scas
leave
scas
jne
xchg
into
sub
add
pop
add
mov
add
add
imul
jle
cmpsl
testl
add
std
add
add
stc
add
mov
lea
pop
ret
push
push
push
push
push
push
lea
push
push
push
push
push
call
ja
mov
add
adc
push
push
shr
add
add
mov
add
in
mov
add
test
add
mov
add
add
add
mov
add
shr
xorb
mov
ja
sahf
add
pop
mov
add
push
ror
pop
cmpl
jne
push
push
sub
not
not
push
or
inc
add
xor
xor
lea
sub
shr
ror
pop
sub
rol
shr
sub
pop
push
sub
lea
ror
rol
pop
pushl
push
add
shl
pop
call
push
push
lea
push
push
push
push
push
push
push
call
shll
add
mov
pop
iret
movsl
cwtl
fcomp
int3
push
test
fists
jns
add
sti
push
add
mov
add
add
mov
add
mov
add
xchg
mov
add
idivl
imul
add
and
rclb
add
push
push
push
push
lea
push
push
call
js
popf
into
loop
imul
sub
mov
push
add
add
add
lret
add
add
movsl
add
js
imul
leave
fs
stos
ret
loop
sti
add
add
pop
add
stos
jne
add
lea
pop
jmp
push
push
push
call
mov
add
jl
lock
in
cld
pop
movsb
mov
sti
sub
add
xchg
pop
add
jae
bound
sti
cli
cwtl
add
push
add
add
fldl
jecxz
scas
add
lret
add
xor
add
add
js
add
pop
mov
hlt
lea
pop
cmpl
je
cmpl
jne
push
add
pop
leave
push
lea
push
push
push
call
add
xchg
subl
add
add
add
add
bnd
push
push
add
add
add
xchg
add
add
add
mov
mov
lea
pop
add
pop
push
push
push
push
push
push
push
push
call
call
add
add
lcall
pop
add
pop
test
shrl
hlt
add
fsubrp
js
mov
pop
add
add
mov
ljmp
pop
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
jae
add
add
mov
cld
stos
mov
add
icebp
addl
lret
add
add
out
jp
fsub
xchg
add
pop
pop
add
not
add
movl
popa
mov
mov
lods
icebp
popf
mov
mov
mov
mov
loopne
jbe
add
add
insb
mov
addr16
pop
pop
push
shl
not
shl
sub
pop
leave
add
push
sub
dec
lea
shl
pop
ret
push
push
lea
push
lea
push
push
push
push
push
call
std
xchg
push
out
add
add
lret
in
jne
push
int
jo
add
jl
ljmp
js
mov
push
mov
xor
fildl
add
jbe
mov
clc
mov
mov
add
add
add
add
add
add
xchg
lods
push
sbb
in
add
add
cltd
mov
cld
lea
pop
jmp
push
lea
push
lea
push
push
lea
push
lea
push
call
add
icebp
int3
add
jo
scas
add
out
add
arpl
sti
rcrl
jns
add
add
aad
nop
add
add
rorb
sbb
jge
add
test
add
add
jmp
xlat
push
add
push
or
not
add
sub
inc
dec
sub
add
shr
pop
add
pop
push
push
push
push
call
roll
add
pusha
push
add
add
add
add
mov
ljmp
mov
scas
add
push
popf
test
xchg
jp
mov
add
add
add
add
mov
add
add
scas
add
mov
add
add
add
pop
js
jb
les
jne
push
add
pop
call
push
sub
ror
pop
push
push
pop
call
jmp
push
inc
pop
cmpl
jne
mov
push
pop
mov
push
ror
sub
add
pop
call
push
push
push
xor
shr
not
push
or
inc
add
add
inc
inc
sub
sub
sub
pop
dec
pop
push
add
add
sub
add
pop
pushl
call
push
dec
pop
call
push
push
not
rol
xor
add
push
or
not
add
not
add
not
sub
ror
shr
add
dec
pop
ror
ror
ror
pop
push
push
push
push
push
push
push
push
push
call
mov
add
xchg
add
mov
add
xchg
lret
add
arpl
xchg
add
faddp
push
sbbl
add
add
clc
add
scas
add
push
popf
imul
testl
jmp
push
data16
pop
insb
add
mov
lea
pop
pushl
push
pop
call
push
push
push
push
push
push
push
push
call
add
add
in
scas
mov
add
ljmp
add
mov
lcall
push
aam
jb
mov
add
add
pop
add
out
jecxz
add
andl
jnp
lods
add
pop
call
push
push
push
or
inc
add
add
sub
lea
not
sub
not
add
pop
sub
pop
push
push
push
push
call
jns
xchg
xchg
xchg
add
add
mov
mov
add
enter
push
add
lret
mov
clc
add
add
add
mov
sti
loopne
add
incb
mov
mov
mov
add
mulb
add
jne
add
fld1
testb
out
add
pop
pushl
push
shr
pop
call
push
pop
call
push
push
sub
sub
push
sub
add
xor
sub
sub
add
pop
shl
rol
lea
rol
pop
push
push
call
test
mov
add
add
stos
aam
mov
mov
test
test
add
imul
repnz
add
addl
jmp
movsb
fildl
sti
add
orb
pushl
push
xor
sub
pop
call
call
push
push
add
dec
push
and
add
add
shr
rol
sub
not
sub
pop
rol
lea
not
pop
push
lea
push
push
push
push
push
push
push
call
add
mov
in
jnp
pusha
aam
testl
mov
add
add
add
add
rcrb
pop
add
add
loopne
aam
bound
pop
pushl
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
mov
hlt
pop
cmc
add
iret
pop
add
div
add
icebp
sahf
lea
mov
push
add
add
add
xchg
add
mov
add
mov
add
lods
int3
add
cld
lea
pop
call
push
lea
push
lea
push
lea
push
push
call
push
enter
mov
iret
add
popa
add
popa
add
mov
add
icebp
add
clc
loope
pop
mov
lds
push
scas
add
fwait
mov
add
add
add
add
add
test
imul
ljmp
cmp
insb
test
jne
mov
mov
add
imul
mov
lea
pop
call
push
push
add
push
or
inc
add
rol
sub
rol
sub
rol
pop
rol
add
pop
push
push
call
add
mov
fnstenv
add
add
mov
out
in
xchg
in
add
add
pusha
stos
add
jno
add
fiadds
movl
mov
in
xchg
aad
hlt
mov
add
pop
pushl
call
push
sub
shr
pop
call
push
push
lea
push
or
not
add
sub
dec
sub
rol
pop
not
inc
inc
pop
push
push
push
call
add
add
je
imul
mov
cmpsb
add
add
mov
add
xchg
add
shl
mov
outsl
add
add
push
lea
ret
loop
test
add
add
add
mov
in
mov
repnz
bound
mov
lea
pop
pushl
push
push
push
lea
push
lea
push
call
fucomi
add
add
scas
add
out
add
add
popa
in
int3
add
add
cmpsb
out
popa
mov
xchg
mov
ja
xchg
call
push
data16
fwait
add
add
add
xchg
xchg
add
fstps
mov
scas
fidivrs
xchg
out
mov
lea
pop
call
call
push
push
sub
add
rol
push
or
inc
add
rol
not
ror
sub
shr
pop
add
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
pop
jnp
jmp
add
add
lahf
add
add
arpl
jb
add
add
add
mov
add
and
jne
push
rol
pop
call
call
push
push
inc
ror
push
sub
add
add
sub
ror
sub
inc
dec
pop
add
pop
push
push
push
call
pop
add
pop
out
add
add
add
mov
mov
add
xchg
mov
xchg
lods
mov
push
add
jo
mov
enter
leave
je
jp
add
add
xchg
xor
add
addb
cmpsl
popa
andl
mov
fdivrs
lea
rolb
mov
nop
loopne
filds
add
cmpsl
add
add
add
mov
lea
pop
pushl
push
pop
call
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
add
add
push
in
aad
add
add
ret
add
shrb
push
push
mov
in
add
int
addb
jge
enter
add
fldcw
add
test
mov
lea
pop
call
push
push
shr
dec
push
or
inc
add
sub
sub
pop
not
dec
add
rol
pop
push
lea
push
push
push
push
lea
push
call
pop
in
in
mov
testl
movsl
mov
add
add
mov
jne
add
insb
icebp
xchg
int3
mov
int
nop
push
movsl
ljmp
add
push
lret
flds
xchg
add
add
mov
lea
pop
pushl
push
shl
shr
rol
pop
call
push
lea
push
push
push
lea
push
push
push
call
add
add
add
addl
add
add
rclb
mov
mov
test
push
add
imul
add
ja
add
in
fistl
loop
mov
fs
stos
add
popf
mov
arpl
add
pop
add
jne
add
push
mov
add
sarb
pop
lea
push
push
call
add
add
jbe
add
add
add
add
clc
jge
out
ret
add
add
xlat
jb
jmp
jmp
add
jae
jo
mov
lea
pop
push
call
push
push
shr
push
xor
add
inc
add
shl
sub
shr
shl
pop
xor
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
std
add
mov
adcb
js
add
add
add
andb
mov
stc
mov
add
stos
out
add
lds
adcl
out
mov
pop
mov
lea
pop
pushl
push
lea
pop
call
push
push
push
push
push
push
call
add
add
in
mov
pop
add
jo
add
clc
in
lret
in
add
push
add
xchg
shr
fdivs
add
popf
test
add
imul
cwtl
int
xchg
pop
add
fadds
js
add
add
add
mov
lahf
mov
lea
pop
call
push
push
sub
rol
not
push
xor
add
shl
rol
sub
inc
pop
lea
pop
push
inc
ror
pop
pushl
call
push
shl
sub
pop
call
push
push
push
or
not
add
sub
xor
ror
sub
dec
pop
sub
pop
push
push
push
push
push
push
push
call
ret
add
add
incb
addb
mov
mov
lret
movb
add
int
add
mov
mov
mov
in
add
add
xchg
add
add
jmp
add
mov
fisttpl
add
add
rolb
testl
popf
add
xchg
mov
add
cmc
add
lret
add
mov
outsl
fstpl
mov
pop
add
mov
lea
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
gs
add
mov
pop
jecxz
mov
add
add
xchg
mov
add
std
add
xchg
scas
pop
loope
add
mov
lea
pop
call
push
push
push
push
push
call
xlat
jne
xlat
add
cli
cmpsb
add
lcall
add
loop
add
add
add
jp
jbe
cmpsb
repnz
add
add
mov
add
ficoml
mov
add
insb
push
pop
int
mov
lea
pop
call
push
lea
push
lea
push
call
add
add
add
nop
add
add
pop
add
push
add
lock
mov
gs
add
popf
iret
add
into
xchg
fldl
add
add
iret
test
cli
jne
mov
lea
pop
lea
push
push
shl
push
sub
add
dec
sub
pop
pop
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
jl
stos
add
pop
add
add
jle
add
in
add
mov
add
popl
push
mov
pop
test
jge
shl
add
mov
cmpsb
jo
add
cmpsb
add
pop
pushl
push
lea
push
lea
push
push
push
lea
push
call
mov
add
rclb
add
icebp
add
pop
mov
mov
out
add
arpl
in
add
add
imul
js
scas
mov
add
fistps
ljmp
int3
sahf
call
out
add
add
add
add
mov
sbb
mov
add
push
push
sub
shl
xor
pop
call
push
push
sub
dec
push
and
add
rol
sub
dec
sub
sub
not
rol
pop
pop
push
dec
shr
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
fstl
mov
add
loop
mov
jne
mov
nop
add
roll
xchg
mov
lahf
mov
add
push
call
jecxz
add
pop
call
call
push
push
push
push
lea
push
push
push
push
call
add
mov
ljmp
fdivl
out
les
add
fs
mov
fs
add
jl
add
sti
push
addb
xchg
mov
bound
int
add
add
in
test
iret
xchg
cmc
add
mov
je
les
inc
cld
push
push
xor
sub
sub
rol
push
and
add
shr
sub
pop
inc
pop
push
xor
pop
pushl
push
push
lea
push
push
call
add
add
add
mov
cmpsl
jae
pusha
mov
add
add
lcall
jb
out
add
add
popa
fildl
mov
add
in
pop
hlt
fsts
push
addb
add
pop
add
rcrb
popa
add
add
out
add
add
repnz
lea
pop
call
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
mov
lock
test
jo
lret
loopne
add
add
add
jae
add
data16
add
add
into
push
add
in
jecxz
sahf
clc
add
jp
jecxz
mov
lea
pop
pushl
push
push
lea
push
push
push
push
push
call
mov
add
loope
add
add
add
cltd
in
sarl
ljmp
add
mov
mov
push
mov
add
jecxz
test
imul
add
add
popl
add
out
shl
pusha
add
push
add
jae
roll
xchg
mov
add
mov
add
mov
lea
pop
call
push
push
sub
not
push
or
inc
add
xor
sub
inc
pop
pop
push
shr
sub
pop
pushl
push
lea
pop
call
push
push
inc
ror
inc
push
push
pop
add
inc
shl
shl
inc
sub
pop
shl
pop
push
push
not
push
or
inc
add
lea
ror
sub
ror
pop
xor
lea
pop
push
lea
push
push
lea
push
lea
push
push
call
stos
enter
add
mov
xchg
nop
lods
aam
add
push
add
icebp
out
jne
add
je
andb
add
add
add
add
add
add
scas
test
fistpl
arpl
add
loop
aam
xchg
filds
push
aam
bound
pop
call
push
push
dec
push
sub
add
ror
sub
shr
add
pop
not
add
pop
push
inc
pop
pushl
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
fnstenv
stos
jmp
push
pop
add
clc
mov
jbe
add
roll
push
add
add
mov
into
mov
lea
pop
call
mov
push
rol
xor
pop
lea
push
not
pop
lea
push
lea
push
push
push
lea
push
push
push
push
call
lods
add
add
add
imul
loopne
add
mov
cld
pop
mov
pop
test
js
faddl
popa
popa
add
add
int3
fdiv
add
loope
xchg
mov
cmc
test
add
icebp
add
jl
add
add
loopne
add
lret
add
data16
int3
lea
pop
push
push
push
push
push
push
call
pop
add
pop
mov
pusha
outsl
add
out
stos
xchg
test
add
popf
add
add
hlt
add
add
add
add
add
mov
add
mov
add
xlat
cmpsl
cltd
jb
add
add
xchg
jle
add
add
fldl
ja
push
imul
add
ja
hlt
lea
pop
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
pushf
add
mov
filds
out
addb
add
pop
leave
push
sbbl
je
add
sti
repnz
andl
mov
xchg
push
in
imul
cli
test
in
mov
popf
je
pop
add
mov
add
pop
mov
mov
lea
pop
push
push
push
dec
pop
push
push
push
call
testl
add
add
add
fwait
add
aam
pop
add
gs
add
shl
add
add
test
shl
add
movsb
mov
mov
add
mov
push
add
add
ja
pop
push
fstpl
mov
add
les
add
push
push
push
lea
push
call
add
add
add
incb
xchg
shrb
add
add
in
mov
out
cmc
pop
sti
pop
mov
add
rolb
add
ljmp
mov
add
jnp
add
add
mov
mov
mov
lea
pop
push
push
xor
pop
pushl
push
rol
pop
push
push
pop
call
push
push
add
add
push
or
not
add
sub
sub
not
rol
shr
lea
pop
sub
pop
push
shl
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
std
add
addl
xchg
add
add
je
add
mov
add
add
loope
testb
add
add
add
stos
add
pop
jle
add
in
cld
in
cmpsb
mov
mov
pushf
add
sti
add
in
xchg
add
ja
mov
lea
repnz
addb
ljmp
hlt
loop
mov
jle
add
lea
pop
call
push
push
push
push
push
lea
push
call
into
mov
mov
cwtl
lds
add
mov
testb
add
add
lret
add
movsl
add
add
out
add
addl
sahf
add
push
mov
pop
mov
add
ljmp
add
fildl
push
add
pop
add
mov
jnp
add
js
add
lret
add
mov
lea
pop
call
push
pop
mov
push
add
inc
rol
ror
pop
pop
push
push
push
push
call
imul
xchg
ror
cltd
ja
xchg
fldl
mov
pop
popa
loopne
mov
jl
nop
add
mov
mov
mov
mov
add
arpl
mov
in
mov
jmp
add
mov
add
add
out
pop
test
test
roll
pop
loopne
add
fmull
jne
jmp
push
inc
pop
call
push
push
sub
sub
push
and
add
ror
sub
sub
inc
add
pop
ror
add
pop
push
dec
pop
pushl
push
lea
dec
ror
xor
pop
call
push
push
push
lea
push
push
lea
push
push
call
add
pop
movsl
mov
lcall
add
lods
add
idivb
orl
fiaddl
stos
out
pop
add
shrb
add
mov
test
add
in
lret
jns
hlt
lea
pop
call
push
lea
shl
pop
mov
lea
push
push
sub
push
push
pop
add
add
sub
rol
shr
pop
lea
inc
sub
pop
push
push
push
lea
push
call
popf
fildl
loope
push
add
arpl
jb
cwtl
pop
add
add
mov
shlb
xorl
mov
mov
popa
test
add
popa
arpl
jns
push
ret
add
mov
out
int3
jl
add
add
add
add
pop
pushl
push
sub
lea
pop
call
push
push
push
push
push
push
push
lea
push
push
call
jbe
mov
add
js
add
mul
rcrb
into
add
aad
mulb
fst
lods
mov
add
mov
add
addb
je
test
add
add
add
xor
mov
mov
cmpsb
mov
jle
add
push
leave
iret
in
lahf
roll
add
add
stos
add
aam
bound
push
push
inc
ror
inc
pop
call
push
push
not
sub
add
push
or
not
add
rol
sub
ror
pop
pop
push
add
rol
sub
pop
pushl
push
push
push
push
push
push
lea
push
lea
push
push
call
xlat
lock
fs
mov
add
add
add
push
shll
lock
pushf
jae
test
testl
mov
add
cwtl
add
in
add
add
iret
scas
mov
addr16
call
call
push
xor
pop
mov
push
push
push
push
call
mov
push
fs
add
xchg
add
add
aad
mov
add
mov
add
add
add
add
add
add
add
aad
out
mov
std
fsubs
lds
add
xchg
add
repnz
in
xlat
scas
std
mov
mov
lea
pop
lea
push
push
dec
not
not
push
sub
add
xor
xor
sub
lea
dec
shr
pop
inc
shr
sub
dec
pop
push
push
lea
push
push
push
call
fsubrp
mov
add
add
add
movsl
cmpsb
sti
add
bound
ficoms
mov
aam
mov
add
add
cmpsl
out
into
jo
jo
jo
add
xchg
idivb
add
test
add
push
add
cmpsb
add
rcll
add
stos
mov
mov
lea
pop
pushl
push
sub
sub
dec
add
pop
call
push
lea
ror
ror
inc
pop
lea
push
push
shl
add
shl
pop
push
push
ror
pop
push
pushl
push
push
add
add
push
xor
add
sub
sub
add
lea
sub
sub
pop
xor
add
pop
push
push
push
push
push
call
sahf
insb
nop
stos
lock
addb
lds
push
roll
adc
add
cli
add
add
hlt
loopne
add
add
lock
push
add
add
add
ret
into
movsb
testl
add
insb
call
adc
push
push
rol
dec
dec
add
pop
call
push
push
shr
push
sub
add
sub
sub
xor
sub
dec
pop
sub
pop
push
add
add
sub
pop
pushl
push
xor
add
pop
call
push
push
lea
push
push
lea
push
push
push
call
pop
add
xchg
rol
add
mov
popf
outsl
add
ret
fs
add
stos
aad
incb
arpl
add
xchg
les
xchg
movsl
iret
add
add
icebp
ljmp
add
add
lea
int3
add
mov
test
out
xchg
outsl
out
loope
gs
add
add
in
add
cltd
add
add
out
mov
lea
pop
push
call
push
push
not
dec
sub
shr
push
push
pop
add
add
add
add
shr
sub
add
pop
xor
lea
pop
push
push
lea
push
lea
push
push
lea
push
push
call
push
add
cld
add
add
lods
add
add
insb
add
cli
mov
add
add
jmp
imul
add
push
mov
out
movsb
add
shlb
pop
add
add
add
pop
pushl
call
push
lea
push
call
jne
stos
ret
jno
push
jo
add
movsl
pop
push
ret
add
iret
xchg
add
add
xchg
add
fwait
scas
add
jne
mov
imul
mov
lea
pop
call
push
push
push
lea
push
push
push
push
push
call
ret
add
add
add
fistpll
out
out
in
cltd
imul
std
mov
ljmp
sbbb
iret
aam
add
add
add
xchg
add
lahf
mov
and
inc
add
add
call
lock
add
mov
movb
add
add
add
aad
mov
xchg
stc
outsl
add
add
add
mov
std
rolb
add
add
lcall
loopne
xchg
out
data16
xlat
add
mov
jp
arpl
into
add
mov
mov
int3
lea
pop
pushl
mov
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
movsl
mov
popa
add
popf
add
pop
add
jns
push
rolb
fucomi
add
add
add
loop
add
lret
aad
jo
add
mov
push
loop
add
lods
add
add
add
add
insb
fdivr
mov
lea
pop
jmp
push
push
add
push
push
pop
add
add
sub
rol
pop
shr
pop
push
lea
push
push
call
add
lret
scas
mov
add
arpl
pop
add
mov
mov
loope
ljmp
mov
std
out
add
js
add
jo
jecxz
fldt
out
xchg
cltd
mov
fs
push
ficoms
addr16
pushl
call
push
xor
ror
pop
push
push
pop
call
push
push
dec
shr
push
xor
add
shr
add
sub
inc
not
xor
pop
ror
pop
push
sub
inc
pop
pushl
call
push
push
push
lea
push
push
lea
push
push
lea
push
call
mov
add
shl
add
add
test
fadds
add
icebp
add
push
xchg
add
out
imul
add
add
add
add
add
insb
fst
add
outsl
fisttpl
pop
push
call
push
lea
add
pop
leave
push
push
push
push
lea
push
lea
push
push
call
stos
jge
out
add
add
add
test
add
mov
add
loopne
mov
rcl
into
std
mov
ljmp
mov
jmp
add
lods
add
leave
popf
pop
lods
mov
stc
add
pop
add
xchg
add
pop
test
add
fisubs
push
loop
in
mov
lea
pop
add
pop
push
rol
add
pop
pop
push
not
xor
pop
pop
push
sub
shl
pop
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
call
ljmp
pop
xchg
add
pushf
gs
pusha
add
add
popf
testl
pop
stos
xchg
xchg
sarl
cwtl
loopne
in
add
movsl
out
add
js
pop
add
mov
lea
pop
leave
add
push
dec
ror
pop
ret
push
push
push
push
push
push
call
jno
push
mov
add
into
jno
add
stc
cmpsb
mov
shrl
push
add
fists
lods
add
popa
stos
icebp
call
xlat
add
add
add
scas
stc
in
lret
add
jae
mov
insb
cltd
jns
mov
mov
lea
pop
leave
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
jo
pop
sahf
shlb
add
test
pop
xchg
xchg
lea
fdivp
xchg
add
pop
ljmp
cmpsl
pop
mov
fwait
nop
jp
add
add
addb
add
push
add
add
pop
ret
push
push
push
push
push
push
lea
push
push
lea
push
call
in
lods
add
filds
push
mov
call
repnz
mov
push
push
cmpsl
popf
jmp
add
iret
add
add
arpl
add
aam
mov
fadds
add
add
xlat
out
add
jge
add
add
test
call
mov
or
data16
add
out
add
add
jbe
mov
lea
pop
push
push
push
push
call
mov
arpl
lds
stos
rolb
fstpt
add
add
cmc
fwait
lea
pop
xchg
push
add
add
cmc
lahf
out
roll
add
add
cld
lea
pop
mov
push
push
push
call
imul
pop
add
add
bound
push
jbe
mov
add
mov
out
int
pop
movl
add
add
add
add
mov
add
int
push
mov
popa
add
lods
add
mov
add
mov
mov
add
hlt
lea
pop
cmpl
jne
push
lea
push
push
call
flds
push
add
push
loop
add
add
rolb
add
fcmovne
add
adcb
loopne
add
add
add
call
fisubl
fiaddl
add
add
gs
mov
jl
add
add
popa
or
mov
jmp
push
lea
push
lea
push
push
push
push
lea
push
call
add
stos
add
add
mov
mov
je
add
xchg
add
call
fists
jl
fisubrs
add
add
mov
add
mov
lea
pop
mov
and
push
shl
shr
dec
pop
xor
push
push
push
push
lea
push
lea
push
call
testb
add
add
mov
add
add
insb
iret
add
int
mov
add
add
loopne
mov
add
add
add
add
test
pop
xor
add
push
shr
xor
pop
xor
push
push
push
call
mov
add
add
ret
jecxz
mov
scas
add
rolb
jmp
add
test
out
add
add
pop
mov
mov
mov
add
add
out
add
add
add
scas
std
add
fwait
cmpsb
add
pop
mov
xchg
add
out
hlt
lea
pop
dec
push
push
lea
push
call
pushf
xchg
add
xchg
in
add
add
addb
add
data16
add
add
js
add
fs
add
int3
add
add
jo
mov
push
fcompl
add
add
pop
sub
jmp
push
push
lea
push
push
lea
push
push
call
jle
int3
in
movl
add
add
addr16
je
gs
add
add
add
test
add
mov
add
mov
add
add
push
out
add
add
scas
add
rolb
lret
push
add
add
data16
add
add
pushl
push
sub
sub
sub
sub
pop
pop
sub
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
pusha
add
imul
add
sarl
mov
push
pop
in
jecxz
ja
add
testb
addl
fisubrs
lahf
add
add
data16
mov
lea
pop
cmp
jne
push
push
call
add
filds
add
les
add
mov
add
add
add
enter
addl
add
add
mov
jno
bound
cmpsl
add
call
sar
pushf
jge
add
mov
bound
imul
add
add
add
jns
add
mov
mov
lea
pop
mov
lea
push
push
call
add
xchg
add
nop
add
push
lret
push
loop
add
add
add
mov
mov
mov
cwtl
add
out
jb
std
add
pop
sub
push
push
push
push
push
call
roll
add
jbe
lock
shlb
mov
add
cltd
imul
jecxz
add
add
pusha
scas
mov
push
push
popa
push
mov
test
sarb
stc
mov
mov
pop
addl
imul
jle
out
mov
lea
pop
mov
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
lret
add
pop
scas
scas
je
mov
lret
test
add
xchg
push
mov
bnd
add
add
roll
clc
add
mov
stc
nop
stos
rcrb
sub
add
loop
mov
add
mov
sub
jmp
push
push
call
add
data16
add
xchg
add
stos
fildll
xchg
mov
shrl
std
in
add
hlt
cmpsl
je
push
add
fwait
add
add
add
add
pop
sub
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
lods
shrl
jnp
add
add
aam
add
add
add
mov
mov
push
loopne
add
add
add
fcoml
lds
mov
add
cmpsb
pop
stos
push
add
rolb
rolb
jmp
pop
les
pop
add
leave
loopne
add
mov
into
add
add
add
bnd
push
mov
lea
pop
pushl
push
lea
sub
rol
rol
pop
pop
push
add
sub
pop
shr
and
push
lea
push
push
push
call
mov
cmpl
and
add
or
clc
outsl
cmc
add
pop
add
add
add
addr16
add
out
pop
std
ja
arpl
fiadds
add
add
sarl
add
add
mov
add
fsts
ljmp
adc
jmp
push
push
push
push
lea
push
push
push
push
push
push
call
jmp
add
outsl
push
add
xchg
push
add
pop
add
add
add
xlat
add
faddl
pusha
mov
xlat
add
data16
scas
add
add
add
les
stc
sbb
test
cli
call
sti
add
pop
leave
push
push
lea
push
push
call
pop
push
outsl
cltd
add
les
ljmp
les
add
add
scas
in
jnp
push
sti
clc
pusha
mov
mov
add
add
fsubs
add
in
mov
icebp
movsb
test
std
add
add
test
movsb
into
add
xchg
add
scas
cmpsb
lods
hlt
mov
lea
pop
ret
push
push
push
call
sahf
pop
add
cld
push
add
int3
add
add
in
add
xchg
add
add
add
mov
js
push
in
imul
fcmovne
shll
xchg
jge
add
mov
or
push
push
add
pop
mov
push
not
add
not
pop
add
push
push
push
push
call
add
add
ljmp
loop
ljmp
roll
fiaddl
add
mov
rcrb
add
fildl
sti
jmp
jl
pop
fldl
bound
insb
mov
push
push
mov
add
shr
add
mov
add
test
fwait
movsb
pusha
add
push
push
leave
aam
mov
mov
lea
pop
push
push
push
lea
push
call
out
rcr
add
addb
jne
mov
out
add
add
add
fiadds
jbe
add
fldl
add
add
add
add
js
test
int
lock
add
mov
add
stc
add
add
add
fldl
ja
jecxz
mov
or
push
push
xor
pop
push
push
sub
pop
push
push
push
lea
push
push
push
lea
push
push
call
push
insb
jl
add
mov
mov
jl
nop
movsb
fwait
out
add
addl
stc
in
stos
fiaddl
add
add
testb
push
popa
addb
add
cmc
mov
add
imul
mov
jecxz
add
push
arpl
call
call
int3
lea
pop
mov
lea
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
jae
fidivs
testl
mov
push
nop
mov
add
push
ljmp
mov
add
add
pop
popf
imul
mov
imul
add
add
push
in
sahf
push
movsl
add
mov
lea
pop
sub
mov
push
push
push
push
push
push
push
push
push
push
call
pop
lds
test
int
add
leave
add
add
push
xchg
cmpsb
add
push
cltd
mov
add
add
repnz
out
in
add
add
lahf
jmp
xchg
add
loope
add
nop
imul
lahf
mov
out
add
jbe
add
pop
add
add
cmpsl
add
pop
shr
push
xor
pop
add
push
lea
push
push
lea
push
lea
push
push
lea
push
call
xchg
out
jecxz
jge
testb
sahf
add
add
test
arpl
leave
jae
xlat
push
scas
jo
mov
add
enter
add
popf
rcrl
into
push
jnp
add
push
xchg
roll
out
jae
lods
add
add
mull
add
push
imul
stc
lcall
arpl
mov
add
push
ror
pop
mov
add
push
sub
pop
xor
mov
push
shl
pop
and
push
push
push
push
call
add
lahf
icebp
cmpsb
std
add
add
lea
add
aad
popf
jle
add
pop
fiaddl
cltd
pop
push
push
push
ret
add
add
rolb
jmp
mov
lods
add
add
add
add
loopne
add
add
jbe
fiaddl
push
icebp
outsl
mov
mov
hlt
mov
lcall
add
lea
pop
rol
push
sub
pop
rol
push
xor
ror
ror
sub
pop
xor
inc
push
rol
dec
pop
cmpb
jne
push
push
push
push
push
push
lea
push
lea
push
call
push
jb
xchg
jecxz
clc
stos
fildl
sahf
add
mov
nop
add
not
clc
pop
add
pop
jmp
lret
add
mov
rclb
clc
xlat
test
cli
lahf
mov
iret
imul
mov
xchg
add
jmp
add
pop
add
push
push
push
push
push
lea
push
lea
push
push
push
call
push
loop
js
repnz
addl
leave
arpl
xchg
pop
mov
add
add
enter
add
fisttps
bound
jne
cmpsb
in
fisttpl
mulb
add
xchg
loopne
add
add
nop
mov
fadds
scas
jmp
ret
stos
add
outsl
iret
mov
iretw
mov
lea
pop
cmp
je
push
add
xor
pop
add
push
pop
cmpl
jne
push
lea
pop
xor
push
dec
inc
xor
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
rcrb
add
fildl
xchg
loop
scas
add
jp
pop
add
lahf
push
add
add
mov
adcl
push
push
call
add
jns
imul
gs
in
mov
add
repnz
add
add
lahf
pusha
push
mov
imul
lahf
outsl
popa
mov
or
pop
pop
push
lea
push
call
mov
add
add
ja
add
notl
shl
add
add
add
insb
add
cwtl
add
nop
push
add
testl
or
push
sub
add
rol
add
pop
leave
push
push
push
lea
push
call
mov
add
xchg
xchg
jge
add
stos
mov
aad
add
add
mov
add
add
cli
ret
cwtl
stos
in
scas
aad
mov
pop
pushf
add
add
add
lods
mov
jno
test
add
add
add
push
add
clc
add
mov
add
stc
add
into
add
in
pop
add
pop
ret
mov
push
push
call
imul
pop
out
add
cltd
loope
add
mov
scas
add
je
add
fcompl
loop
popl
lahf
add
je
pop
adc
add
imul
sbbb
in
roll
add
add
rolb
jge
add
test
add
pop
push
lea
add
in
add
lea
pop
add
push
push
lea
push
push
push
call
add
add
outsl
add
add
add
push
jns
aam
bound
stc
enter
fs
add
add
add
pop
aad
add
add
add
push
ret
lea
pop
push
push
push
call
hlt
fwait
xchg
fsubl
add
xchg
pop
mov
ror
in
les
into
in
push
push
flds
add
mov
add
xchg
add
add
lods
ja
push
mov
popa
or
add
push
push
push
push
lea
push
push
call
add
lock
add
std
stos
push
js
add
jb
mov
add
ret
cmc
add
add
out
add
add
sti
add
outsl
testl
out
stos
sti
mov
xchg
mov
sti
add
mov
movsb
fstps
xchg
mov
repnz
iret
add
mov
add
xchg
pop
mov
cmpw
push
lea
push
push
push
push
call
add
mov
xchg
add
add
add
jmp
jnp
jo
xlat
clc
add
add
add
out
mov
add
jae
les
push
add
push
rcll
add
add
data16
pop
push
not
pop
pop
mov
push
sub
not
ror
pop
push
call
push
ror
sub
dec
xor
pop
xor
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
pop
add
add
leave
pop
add
imul
sti
add
pop
add
add
mov
fucom
add
add
add
call
rolb
leave
pop
push
movsb
sahf
test
pushf
clc
pop
add
pop
pop
push
rol
pop
pop
push
add
pop
pop
push
xor
pop
pop
leave
push
push
call
add
jae
add
add
add
lods
add
fcom
xchg
sarl
jmp
mov
fadds
push
mov
fabs
gs
rcrb
lret
push
xchg
testb
jge
push
pushf
mov
rolb
int3
lea
pop
ret
push
lea
pop
push
push
push
push
call
add
int3
mov
add
mov
pop
add
add
int3
rolb
mov
mov
in
add
aam
adcb
add
push
jne
jae
add
testl
lret
add
jo
mov
lea
pop
mov
push
ror
pop
add
push
shl
pop
push
push
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
imull
add
stc
aad
add
add
mov
add
out
add
mov
xchg
add
push
xchg
jns
loope
mov
out
mov
add
outsl
mov
lea
pop
push
push
add
add
add
pop
mov
push
pop
push
push
push
lea
push
push
push
call
add
std
add
push
add
in
ret
cwtl
mov
pop
add
mov
mov
add
add
mov
cmc
add
add
repnz
add
mov
add
add
shrl
push
sti
add
in
fiadds
add
fcompl
mov
lea
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
push
aam
addl
pop
add
aad
add
add
xchg
add
mov
jle
lret
pop
push
faddl
add
add
add
out
add
jecxz
add
push
jle
pop
add
add
add
loope
jmp
lods
stos
push
stos
mov
lea
pop
lea
sub
push
add
add
shr
pop
mov
push
xor
add
dec
pop
shr
push
not
sub
pop
add
mov
push
push
call
sbbb
xchg
addb
jae
push
sti
add
lret
jp
mov
arpl
mov
fs
add
add
add
add
sti
add
add
jno
add
fldenv
mov
jmp
les
fsts
call
sbb
push
stc
call
add
add
idivl
add
pop
jp
imul
lods
add
add
jmp
mov
add
add
rcrl
push
add
cmpb
add
movsb
add
pop
add
add
or
inc
clc
push
rol
shl
pop
mov
push
lea
push
push
push
push
lea
push
push
push
push
push
call
lahf
in
cld
push
pop
fldcw
mov
push
add
sarb
add
add
test
rolb
mov
xchg
jno
mov
lods
lret
add
add
rcr
mov
push
add
add
lea
in
lea
pop
jo
add
popf
add
jo
cld
lea
pop
add
push
lea
push
push
lea
push
push
call
andl
add
mov
mov
lock
hlt
mov
fst
mov
pop
xchg
pop
std
push
xchg
mov
add
add
int3
jmp
cmp
add
add
add
add
pop
xchg
add
add
add
stc
push
out
sahf
scas
call
addr16
xor
lea
push
push
call
out
add
add
icebp
add
xchg
add
add
add
popa
jp
add
popa
add
stos
mov
pop
jmp
sahf
add
pop
scas
fildl
rolb
add
add
mov
add
add
out
jo
push
divb
shr
test
ret
add
lret
fsubs
fldl
test
add
gs
aam
bound
pop
mov
add
push
sub
pop
xor
push
dec
pop
rol
push
push
lea
push
call
push
add
add
mov
repnz
add
add
mov
popf
add
add
ret
lods
add
add
mov
bound
add
add
jmp
add
mov
bnd
add
movsb
add
pusha
or
nop
push
shl
pop
nop
xor
push
push
push
call
in
in
xorl
jp
call
add
add
clc
add
mov
add
loopne
insb
add
add
call
incb
in
push
pop
mov
add
add
xlat
in
add
add
pop
nop
nop
push
shr
add
pop
inc
push
push
push
lea
push
call
mov
test
movsl
out
nop
add
add
fadds
shll
shlb
add
ret
add
xchg
pop
insb
add
add
popl
shrb
xchg
test
fisubrl
xchg
testb
andb
fwait
mov
mov
lea
pop
nop
push
shr
shl
lea
pop
nop
cmpb
jne
push
push
push
push
push
call
icebp
push
add
outsl
add
mov
repnz
add
ljmp
add
movsl
add
mov
lret
add
add
jmp
add
lret
xchg
add
mov
add
cmpsb
add
add
add
popa
fwait
xchg
les
inc
pop
ss
push
dec
xor
pop
nop
push
add
not
pop
nop
push
push
push
push
push
lea
push
push
push
call
add
loop
add
add
add
pop
ja
add
jle
add
add
test
xchg
add
nop
add
nop
add
mov
add
shll
add
add
popl
pop
jecxz
add
mov
xchg
mov
mov
sub
lea
pop
cmp
je
nop
push
push
push
push
push
push
push
push
push
lea
push
call
add
mov
mov
cmpsb
add
jp
mov
cmc
pop
icebp
addr16
movsb
push
add
push
not
mov
xchg
mov
je
mov
add
pop
nop
inc
push
push
push
push
push
lea
push
call
add
xchg
jne
into
pushf
add
jmp
add
movsl
jmp
xchg
cli
jo
je
add
push
add
roll
add
mov
add
jns
test
mov
mov
mov
lea
lahf
jne
mov
mov
lea
pop
nop
push
ror
pop
nop
push
lea
push
lea
push
lea
push
call
lock
clc
add
int3
xchg
add
add
js
subb
add
add
add
mov
push
out
add
in
mov
add
xchg
fadds
gs
add
call
ljmp
jo
add
orl
jb
push
add
not
pop
xor
jmp
push
rol
ror
pop
mov
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
roll
add
popa
add
mov
int3
add
fsubs
add
scas
xchg
popf
push
add
mov
fwait
add
int3
rolb
mov
loop
add
in
stos
mov
aam
xchg
add
add
mov
xlat
popl
mov
stos
rclb
jae
add
cltd
fbstp
add
loop
scas
jmp
add
out
popl
mov
lea
pop
add
movzwl
push
not
sub
shl
dec
pop
mov
push
lea
push
push
lea
push
push
lea
push
push
call
notb
leave
rcr
pop
cwtl
jl
mov
xchg
add
add
mov
xchg
add
int3
incb
fiadds
add
cli
movsb
add
popf
pop
jp
cmpsb
add
jo
add
jb
cmpb
add
iret
shr
add
jmp
jl
add
rcl
mov
pop
add
add
add
add
addb
add
add
add
data16
add
push
lea
push
push
push
push
push
call
ja
mov
jo
pop
cld
stos
faddl
imul
shrl
pop
xchg
scas
fadds
add
fildl
ja
pop
add
outsl
add
pop
add
add
std
add
add
loopne
les
testb
out
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
call
movsl
add
mov
push
je
clc
pop
add
add
cmc
add
faddl
out
out
mov
mov
add
add
mov
add
add
fisttpl
pop
xor
push
add
pop
xor
push
xor
shr
sub
pop
shl
push
push
call
xchg
loop
scas
add
add
add
add
movsb
pop
add
add
add
outsl
mov
clc
fsubl
pop
mov
add
add
test
add
add
lock
shlb
fmulp
push
pop
add
add
cwtl
add
or
dec
nop
add
shl
rcrb
loope
xor
push
dec
add
pop
shl
xor
push
inc
not
pop
mov
add
push
rol
pop
pop
push
push
call
add
lcall
stos
add
add
loop
data16
test
cld
mov
push
add
jle
pushf
add
movsb
pusha
lock
push
add
pop
add
mov
mov
lea
pop
pop
push
push
push
push
call
mov
add
shr
add
data16
add
add
mov
add
add
add
add
movsb
fildll
iret
add
cwtl
popa
cmpsb
mov
lea
pop
pop
pop
push
lea
push
push
lea
push
push
push
push
call
add
pop
add
push
test
lea
addl
add
pop
rolb
loopne
fucomi
add
ljmp
xchg
add
into
jge
arpl
add
add
clc
data16
push
xchg
mov
leave
pop
xchg
add
pop
lret
or
mov
lea
pop
leave
ret
push
lea
xor
add
sub
pop
push
push
dec
add
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
call
add
cmpsl
add
add
scas
leave
add
cltd
in
cld
jl
fmull
add
out
mov
jecxz
add
add
add
add
call
xchg
add
fstps
movsl
jo
xchg
add
push
cmpb
mov
jle
movsb
jle
mov
lea
pop
push
push
push
push
push
call
add
add
mov
bound
mov
in
mov
add
lds
lea
mov
sarb
add
add
data16
fnstenv
mov
add
add
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
loopne
mov
fsubp
pop
mov
mov
add
movsb
in
movsl
add
mov
add
xlat
add
movsb
call
test
xchg
fiadds
lcall
ret
mov
jbe
mov
add
roll
add
add
mov
add
push
pop
jecxz
add
add
add
pop
push
push
push
push
call
mov
add
out
xchg
icebp
jmp
roll
in
add
add
jmp
add
add
mov
outsl
mov
jnp
repnz
mov
pop
ret
add
jo
mov
decb
pop
mov
push
lea
pop
mov
push
not
shl
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
add
add
pop
add
add
mov
add
jo
lahf
addl
xchg
mov
jmp
add
xlat
data16
push
pop
add
outsl
fiaddl
mov
add
add
mov
lea
pop
test
je
mov
push
push
push
call
add
add
ffreep
push
xchg
add
add
add
imul
mov
out
icebp
add
add
add
add
mov
mov
out
fsubrp
pop
add
add
add
test
call
mov
sarl
add
les
mov
popf
testl
rcll
lea
pop
test
je
mov
push
ror
xor
pop
mov
mov
push
push
push
call
add
sahf
add
mov
add
test
mov
add
jmp
pop
hlt
add
lret
jae
leave
enter
call
add
roll
push
jno
ret
add
mov
nop
add
bound
xlat
out
mov
imul
mov
lea
pop
inc
push
push
push
push
push
call
mov
jp
add
add
add
add
pop
outsl
pop
pop
aam
lahf
xchg
add
mov
mov
add
add
cltd
iret
add
cwtl
add
cmc
jecxz
xchg
test
jl
hlt
lea
pop
cmp
je
push
sub
pop
test
je
push
lea
push
push
push
call
xchg
movsb
out
out
add
fsts
jecxz
add
lods
cwtl
add
add
xchg
add
xchg
cmpsb
cld
mov
out
add
int3
pusha
testb
into
add
fcoml
mov
shlb
push
movsl
jb
add
add
lret
lea
pop
mov
inc
push
add
shr
shl
pop
cmp
je
push
sub
pop
test
jne
xor
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
add
in
add
push
outsl
mov
add
fildl
pop
cltd
push
bound
add
out
pusha
add
cltd
mov
add
add
pop
add
xchg
jno
pusha
mov
lea
pop
pop
push
xor
ror
shr
ror
pop
pop
push
rol
inc
pop
pop
push
pop
pop
push
inc
pop
leave
push
lea
push
lea
push
push
lea
push
push
push
push
call
pop
out
jmp
fadds
mov
add
movl
stos
add
lods
filds
push
stos
popa
add
mov
aad
fs
je
mov
add
push
flds
push
mov
jne
int
rolb
mov
leave
pop
mov
shll
jp
scas
nop
jge
insb
add
mov
insb
add
jne
scas
add
gs
add
mov
lea
pop
ret
mov
push
push
call
lret
add
xchg
imul
fs
pop
pop
add
popa
mov
xchg
add
lods
mov
lods
xchg
popl
mov
gs
pushf
cltd
jmp
add
incb
add
in
push
mov
lods
mull
enter
lea
pop
inc
push
not
dec
sub
pop
cmp
jne
push
rol
dec
pop
lea
mov
push
push
push
push
push
lea
push
push
lea
push
push
push
call
jo
sti
stos
add
mov
mov
in
add
pop
add
mov
repnz
add
add
stos
add
xlat
add
lcall
lea
pop
test
je
push
add
add
pop
mov
push
not
pop
add
cmp
jne
push
shr
shr
add
pop
mov
push
push
push
push
push
lea
push
push
call
xchg
pop
mov
push
mov
cmpsl
popa
sahf
popa
add
mov
js
in
test
add
testb
mov
add
mov
popa
js
jge
rorl
pop
test
je
mov
push
push
push
push
push
lea
push
push
push
push
call
cli
rolb
outsl
add
bnd
mov
add
in
in
out
add
add
mov
popa
push
mov
gs
xchg
add
cli
add
add
pop
add
cmp
je
push
push
push
push
push
push
call
jne
mov
stos
add
insb
add
data16
sar
jbe
add
jle
pop
mov
add
mov
add
jmp
add
imul
repnz
std
pop
int
mov
lods
popf
push
add
mov
add
jecxz
in
xchg
pop
mov
add
add
add
mov
lea
pop
jmp
push
push
push
lea
push
push
push
call
data16
add
repnz
add
add
mov
add
mov
testl
add
add
imul
xchg
xorb
sbb
add
add
add
mov
push
jae
mov
lea
pop
xor
push
push
push
push
call
add
add
add
pop
pop
fcoml
cmpsl
xchg
jae
fwait
out
cmpsb
mov
xchg
add
push
mov
mov
addl
add
jge
incb
lcall
add
add
mov
add
mov
lea
pop
pop
push
push
call
push
xchg
fildl
mov
pop
add
jae
add
cli
mov
mov
add
sbb
pop
add
add
mov
add
add
cmpsl
std
add
je
mov
add
nop
push
mov
clc
jecxz
enter
aam
bound
pop
pop
push
dec
dec
pop
pop
push
push
push
call
add
aam
mov
mov
add
xchg
add
add
mov
popa
add
std
add
mov
add
add
mov
insb
out
sahf
cli
add
pusha
bound
int3
add
mov
mov
add
add
push
fadds
add
je
add
int3
lea
pop
pop
push
shr
pop
leave
ret
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
hlt
mov
add
jmp
cmpsb
mov
mov
add
filds
add
jns
cltd
pushf
sarb
add
add
mov
std
jnp
mov
stc
out
push
cltd
loope
pop
add
add
push
mov
mov
lods
fimuls
hlt
lea
pop
lea
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
test
mov
test
pusha
test
roll
imulb
hlt
sahf
add
fwait
add
scas
mov
mov
scas
pop
bound
pop
add
add
imul
mov
scas
iret
xchg
nop
add
xchg
gs
lea
pop
pop
push
push
call
add
outsl
sahf
mov
sti
add
add
test
add
lods
out
std
lea
mov
pop
add
mov
ja
into
mov
cwtl
fldl
add
jge
mov
shrl
mov
lea
pop
pop
push
push
push
lea
push
call
loope
pop
add
stos
add
add
in
jns
add
fildl
xchg
add
ljmp
subl
test
fwait
clc
jle
add
pop
pop
push
shr
sub
rol
add
pop
pop
push
push
push
push
call
leave
clc
add
lcall
push
add
out
jbe
add
add
add
pop
add
scas
add
add
aad
add
pusha
add
add
int3
lea
pop
leave
ret
push
sub
pop
mov
push
push
push
call
jmp
adcb
hlt
ljmp
add
les
insb
mov
jle
add
movb
push
faddl
int3
into
pop
add
negb
scas
add
hlt
xchg
mov
add
jbe
add
add
push
ret
add
fsubrp
jno
add
mov
xchg
pop
frstor
mov
loop
add
mov
push
add
addb
popa
stos
mov
lea
pop
pop
push
lea
push
push
call
xchg
add
add
add
jns
into
in
addb
movsl
cmc
add
pop
pop
mov
add
add
les
add
cmc
lcall
imul
imul
decb
push
add
jno
stc
mov
lea
pop
pop
push
ror
inc
pop
pop
pop
push
push
push
lea
push
call
data16
xchg
fiadds
mov
mov
add
sub
jmp
add
cwtl
add
add
add
mov
xlat
push
add
in
pop
sti
push
cmpsb
add
xchg
add
jnp
sahf
mov
lea
pop
leave
ret
test
push
test
jae
test
jb
pop
jae
fisubl
push
mov
jae
test
jae
int3
mov
add
pop
xor
sti
testl
int3
mov
cwtl
or
fbstp
outsl
sar
and
xchg
jle
test
cmp
or
dec
or
sbb
rcrb
call
in
pcmpgtd
imul
lea
push
and
adc
xor
aad
imul
sub
adc
pop
in
rolb
mov
andl
xor
test
prefetch
mov
xor
in
addr16
clc
xor
or
jbe
imull
sub
mov
sahf
inc
jmp
mov
loopne
inc
and
dec
lahf
sahf
ja
inc
mov
test
push
inc
add
lods
pushf
roll
rcrl
dec
ret
arpl
fwait
mov
mov
mov
adc
lcall
dec
xor
push
adc
fdivrs
fistpl
imul
mov
lock
mov
rcll
or
push
in
inc
cli
inc
xor
dec
adcb
cmp
imul
out
and
mov
flds
fdivrl
pop
and
push
add
into
cmp
int
test
push
mov
test
pop
popa
aaa
pop
mov
mov
and
sub
cmp
mov
xor
test
jg
pusha
setle
mov
call
faddl
inc
jbe
dec
xchg
xor
xchg
pop
insl
add
aam
cmpsl
pusha
mov
sub
cmpsb
pop
push
jge
mov
add
mov
arpl
push
mov
in
sahf
push
scas
divb
ds
repnz
cld
mov
lods
repnz
sbb
js
or
scas
push
repnz
mov
cmpsl
jecxz
arpl
adc
lds
bound
xchg
cmp
push
and
int3
test
jecxz
add
inc
dec
mov
hlt
addl
imul
or
pop
aas
sub
dec
fmuls
and
stos
xchg
dec
outsb
inc
and
dec
mov
test
out
mov
fs
outsl
and
lods
fisubs
into
shl
sub
add
jbe
out
andb
adc
jns
shll
mov
pop
pop
popa
popa
xor
mov
jmp
fmull
mov
sub
add
dec
sbb
js
xor
sub
leave
pop
ss
mov
xor
arpl
cli
push
and
popf
testl
aas
loop
fildl
sbb
xchg
imul
cmp
mov
bound
sub
fisubs
loope
sub
mov
or
mov
inc
cli
push
stc
cmp
ret
jge
xor
mov
cmpsl
dec
cmpl
cmp
xchg
iret
cmp
cwtl
jns
cmpsb
or
or
mov
scas
pop
jno
adc
lret
pop
lahf
je
loope
or
or
push
daa
popf
lret
xchg
xchg
jp
and
adc
in
negl
cmp
mov
pop
lret
jnp
jo
inc
lods
arpl
sub
mull
lds
mov
jae
cwtl
or
lret
aad
fsubs
div
iret
jp
xchg
imul
mov
cltd
mov
das
mov
sbb
jo
in
mov
insb
push
fnstenv
scas
pop
notb
cli
movsl
pop
or
jnp
mov
ja
and
cli
punpcklbw
das
sbb
loopne
pop
mov
out
jb
popf
cwtl
pop
data16
sbb
sbb
or
jl
in
jae
pushf
dec
fs
push
enter
jl
clc
in
js
pop
xchg
scas
sti
xor
inc
nop
adc
cmpsl
scas
rcrb
loopne
cmp
testb
push
pop
sbb
addb
insl
adc
daa
fcompl
sti
cmp
aas
dec
sub
rcll
into
push
stos
rolb
mov
mov
lock
push
cs
das
cmpsl
adc
inc
out
sbb
mov
jecxz
fucom
or
jl
stc
test
xor
mov
loope
fisttpll
pushf
inc
adc
mov
lods
ja
xchg
sub
cs
inc
or
mov
popa
cmp
andl
sbb
adc
in
dec
outsb
in
jl
xor
lods
mov
adc
cmp
cmp
movsl
ds
mov
pop
jne
mov
cmpsl
data16
jg
or
or
sbb
sub
adc
cld
xchg
hlt
sub
mov
imul
cmp
xchg
cld
popf
xorl
stos
imul
lock
in
push
mov
in
filds
add
rcrb
dec
repnz
push
dec
in
push
xlat
out
and
pop
loope
fildl
jne
push
fisubl
adc
jge
sub
inc
dec
outsb
testb
insb
into
in
xor
aas
fists
mov
cmp
repnz
push
lods
aam
shl
or
shlb
lods
add
aas
pop
fs
push
xchg
sbb
push
movsl
add
pushf
or
fdivrl
xlat
push
sbb
cmp
jmp
testb
adc
mov
rcrb
adc
into
hlt
sbb
jp
inc
cmp
cli
lea
jb
mov
loope
into
xor
lret
fisubs
je
lret
sub
in
ja
mov
js
mov
mov
in
push
cltd
mov
rcrl
add
clc
mov
push
lret
idiv
enter
mov
jnp
jb
inc
xchg
arpl
js
stc
scas
sub
sub
mov
mov
mov
icebp
push
add
or
mov
xchg
xchg
test
pop
jle
lahf
xchg
aam
je
ja
pop
mov
jge
lds
xor
mov
scas
cltd
cld
addr16
in
push
jg
test
test
popf
xor
insl
scas
mov
mov
mov
sub
xlat
add
cli
aas
push
cmp
int
addr16
mov
jo
cmpsb
lea
icebp
repz
mov
push
mov
jne
mov
pop
and
xchg
mov
pop
js
jnp,pt
cmc
ds
adc
cmp
pop
fs
add
and
push
mov
mov
mov
ja,pt
je
into
pop
xorl
or
mov
in
inc
imul
mov
inc
in
jmp
mov
sub
mov
xor
aas
stc
lahf
xorb
xlat
je
mov
push
mov
push
sub
lret
mov
pop
dec
insb
hlt
arpl
jne
loopne
loopne
insl
lds
pop
imul
decb
data16
mov
xchg
push
sbb
xchg
scas
dec
fsubrl
call
lcall
adc
push
sbb
iret
fidivl
and
mov
int3
dec
and
mov
jne
imul
into
mov
cmc
jg
mov
rcrl
lahf
add
sbb
or
not
xlat
je
push
outsl
dec
leave
xlat
mov
outsb
lgs
shlb
push
sbb
je
xchg
ss
into
fnstcw
enter
jbe
mov
sbb
add
inc
mov
imul
mov
sbb
and
dec
sub
pop
xchg
rclb
dec
rorb
add
ret
cmp
mov
fisubrs
icebp
cmp
dec
xorb
or
add
js
dec
sub
jbe
insl
inc
mov
test
jb
mov
jae
scas
cmp
fisttpl
mov
mov
jecxz
lcall
mov
stc
dec
cli
in
lahf
dec
jae
les
jle
addr16
xchg
and
sbb
shrb
negl
icebp
xor
mov
pop
ljmp
xor
pop
pop
jno
call
push
sub
mov
arpl
fcoml
pop
mov
loope
sub
ljmp
sbb
loope
adc
loope
xchg
add
push
subl
jle
cmp
scas
pop
out
mov
stos
jo
stos
push
or
icebp
cmp
movsb
outsb
out
adc
and
scas
test
aam
add
mov
scas
out
stos
adc
enter
dec
das
mov
jp
lahf
jo
or
pop
sub
jle
xor
and
dec
inc
stos
inc
xchg
xor
in
rolb
xchg
pop
mov
movsl
enter
lcall
cmpl
out
or
enter
inc
fisttpl
sbb
movsw
mov
pusha
cmpsb
dec
inc
movsb
int
insl
and
cmc
adcb
inc
mov
push
cwtl
stos
pop
negb
pop
cli
fldl
jns
or
sbb
sbb
enter
sahf
nop
out
cld
mov
xor
ss
pop
cmpsl
sub
pop
inc
mov
push
or
jns
icebp
mov
push
fists
std
aad
push
jns
mov
incb
icebp
out
jbe
std
push
je
setne
pop
fstpt
mov
clc
push
pop
mov
or
clc
sbb
mov
mov
push
pop
fs
loop
loope
and
ret
adc
nop
or
popa
xchg
scas
xor
pop
fdivs
mov
pop
jb
arpl
lods
push
cltd
mov
ret
popa
enter
inc
mov
inc
pop
in
xlat
add
xor
test
loop
jbe
mov
jno
outsl
sub
sarl
mov
inc
mov
inc
rolb
mov
mov
dec
ud2
jbe
xor
movsl
jae
inc
adc
jg
test
sub
dec
sbb
and
pop
leave
cmp
movb
and
xor
into
mull
jo
mov
and
lcall
dec
ljmp
ds
inc
or
outsl
xor
dec
popf
ret
push
xchg
and
mov
shl
cli
shlb
xchg
fiadds
arpl
jmp
mov
cmpl
rcrb
or
sbb
pop
iret
xor
mov
in
xchg
dec
xchg
rolb
pushf
mov
pop
cmpxchg
out
and
push
loope
pusha
outsl
fmulp
inc
add
mov
or
stc
mov
std
dec
out
scas
mov
cmp
add
jmp
lret
add
mov
jns
pop
xchg
pop
inc
sub
pop
adc
pusha
jns
cmp
out
inc
ljmp
xchg
inc
sbb
pop
idivb
mov
lods
mov
sbb
jecxz
push
clc
cmp
adcl
and
cmc
pop
add
jbe
js
cwtl
pushf
xlat
sbb
stos
clc
mov
xor
mov
aas
mov
mov
pop
lret
imul
popf
scas
sarb
mov
cwtl
mov
cmp
add
pop
lret
imul
jnp
xor
and
sti
inc
xlat
enter
int
sbb
lods
call
fildl
mov
xorl
ja
mov
xchg
ss
mov
enter
mov
lcall
dec
aaa
mov
out
or
jb
imul
xorb
cmpsb
loopne
adc
jge
fidivrl
sbb
imul
pop
test
mov
cs
sti
shl
out
jl
inc
adc
xchg
jnp
popa
push
mov
das
mov
mov
test
fiaddl
push
aas
xchg
xorb
jle
arpl
imul
adc
xor
aad
push
sub
lods
in
add
fs
sub
mov
cltd
sub
imul
mov
adc
push
out
mov
adc
xorl
test
push
mov
cmp
in
nop
sbb
add
lcall
inc
sbbl
aad
and
aam
fldt
dec
cwtl
fmuls
sti
xor
scas
or
xlat
repz
mov
mov
fbstp
pop
inc
and
push
loopne
mov
loope
inc
add
inc
sub
movsb
in
cmp
pop
lcallw
nop
leave
loop
addl
adc
push
decl
out
leave
arpl
and
into
jns
jne
mov
mov
and
mov
sbb
mov
shl
mov
mov
pop
mov
sti
xchg
inc
icebp
cmp
jo
repnz
insl
cltd
popf
cmp
lret
insb
mov
adc
and
inc
fsub
mov
shlb
test
push
lock
js
nop
mov
lock
or
leave
popf
lret
aam
dec
jecxz
loop
sub
or
in
iret
xor
push
lods
mov
or
lret
arpl
pop
mov
cwtl
mov
mov
mov
sub
repnz
aas
nop
test
add
repz
jnp
out
lahf
filds
pop
aaa
test
not
popa
cmp
popf
rorb
les
xor
mov
push
jne
in
pop
mov
sub
push
repnz
push
mov
jnp
inc
stos
sahf
movsl
jg
nop
mov
cld
cld
cmp
push
repnz
test
push
outsb
mov
aad
lods
cwtl
cli
pusha
pop
pop
xchg
xchg
subl
fsubs
xchg
adc
xchg
mov
fdiv
xor
add
shl
push
into
pop
add
cltd
mov
shrl
adc
sbb
loopne
bound
fistpll
cmp
call
es
jmp
mov
pushf
bound
xchg
imul
add
sub
mov
iret
lahf
push
sub
iret
jp
rorl
fidivrs
les
push
fdivrs
pop
imul
sti
dec
shrl
adc
add
cmp
int
dec
jecxz
cmpsb
push
in
rcrb
hlt
mov
push
cmp
cmp
add
rorl
cmp
mov
enter
sub
xlat
daa
mov
mov
add
iret
cmp
cmc
mov
add
add
or
xchg
mov
sub
nop
int
gs
hlt
xor
mov
and
xchg
adc
out
inc
popf
jecxz
enter
pop
push
sbb
add
xlat
cmp
addr16
daa
out
ljmp
add
adc
mov
lock
sub
xlat
mov
cmp
pop
lahf
xchg
stos
jl
les
and
jo
and
fsub
ljmp
mov
dec
inc
and
adc
sbb
aam
mov
mov
pop
sbb
fs
jmp
enter
mov
pop
jb
lods
jp
mov
mov
cmp
fbld
in
mov
jns
inc
or
or
icebp
daa
mov
sbb
pop
sub
cmp
testb
cs
shl
adc
mov
xlat
jge
mov
mov
out
pop
pop
adc
out
icebp
in
aas
lods
ret
data16
stos
mov
orb
add
adc
add
xor
loopne
mov
mov
out
mov
sub
or
dec
jle
sahf
into
stc
aas
push
inc
or
cmp
mov
jmp
mov
sub
and
nop
and
and
cmp
cmc
xchg
iret
sbb
cmp
mov
pop
out
in
jns
sbb
pushf
jg
leave
pop
xchg
dec
aam
mov
pop
pop
les
cwtl
xor
fsin
imul
push
rclb
jecxz,pt
push
sbbl
jle
jns
out
add
xor
adc
dec
jnp
or
addr16
push
test
subl
movsl
fisubl
add
mov
stc
fldl
inc
inc
in
std
sbb
adcl
stos
in
insl
or
jnp
imul
xor
andl
push
hlt
out
cmp
adc
daa
out
and
andb
xchg
test
je
sub
pop
dec
pop
pushf
sub
mov
in
sub
in
daa
or
cli
test
xchg
push
cmp
sub
mov
sub
push
loop
jmp
pop
test
loope
lods
jae
cmpsb
imul
std
push
xchg
xchg
xchg
pop
lahf
xchg
xor
jo
adc
int
mov
jl
and
sub
repnz
pop
jne
jnp
pop
test
shll
scas
jecxz
push
dec
xchg
imul
cmp
push
sbb
lock
mov
mov
ds
cltd
add
mov
cld
mov
pop
ss
mov
addl
inc
lock
adc
in
push
cld
mov
icebp
inc
into
ljmp
addr16
mov
jnp
popa
mov
push
jecxz
xor
jmp
add
sbb
pop
ret
mov
pushl
btr
cmp
xchg
add
xor
fstpt
xor
push
imul
pop
and
imul
xchg
jmp
enter
jae
hlt
cmp
xchg
movsb
pop
mov
cwtl
inc
test
popa
sub
jns
loopne
pop
dec
pop
push
mov
jp
pop
scas
mov
insb
inc
cs
sub
bound
int
nop
std
lret
jno
aaa
cmpsl
ljmp
hlt
dec
pushf
or
test
pushf
hlt
dec
inc
cwtl
xor
mov
or
push
xchg
mov
mov
out
out
cmp
inc
adcb
bound
mov
lea
sbb
inc
fstl
xor
cmpsb
jb
sar
dec
jp
xchg
and
inc
cltd
movsb
adc
jecxz
and
aaa
mov
or
data16
jns
cmp
mov
test
xchg
pop
or
xor
in
xchg
out
mov
cmp
xchg
cmp
mov
and
std
sub
mov
cmp
ret
aas
inc
mov
popl
movsb
ja
jle
ficoms
cmc
in
mov
dec
mov
cltd
scas
ret
ret
fwait
mov
cmpsb
mov
insl
leave
fwait
add
or
jecxz
std
pop
imul
mov
enter
sarb
lea
push
mov
mov
mov
lcall
mov
inc
jno
and
rorl
mov
loope
ljmp
sti
mov
sbb
lds
sub
add
cmp
ljmp
mov
xor
xchg
ljmp
int
les
repnz
movl
lret
or
pop
cmp
or
sbb
xchg
cmp
fstpl
mov
out
push
jmp
jecxz
jns
lret
loope
mov
push
fsts
jl
xchg
xchg
mov
mov
sti
std
sete
cld
mov
push
cmp
stc
and
or
test
in
xchg
jb
ret
sub
adcb
or
or
in
pop
out
xchg
ret
mov
jbe
mov
xor
in
mov
in
mov
push
mov
jbe
bound
loope
jnp
insb
jo
aad
xor
out
mov
mov
cmpl
push
int
mov
mov
out
or
xor
aaa
fisubl
cmp
adc
add
pop
pop
jae
sbb
stos
add
dec
mov
ljmp
cmpsl
pop
jmp
xchg
js
pusha
sbb
sub
fisubrl
int
mov
fdivs
mov
les
pushf
push
add
cs
pop
inc
push
fs
imul
xlat
bound
movsl
mov
pop
xchg
repnz
or
pop
addr16
mov
fcomps
rcll
fisttpl
or
ret
aas
mov
arpl
sub
sarb
add
in
int
pop
addr16
mov
mov
xchg
cmpb
sub
dec
sub
cmp
clc
sahf
xchg
jae
push
psubb
sub
push
lock
or
jno
movsl
jge
pop
adc
cmp
shr
sahf
cmpsl
mov
fs
inc
ja
sub
sub
add
or
push
test
lea
push
testl
pop
popa
arpl
fimull
fildll
enter
mov
push
xor
jg
or
nop
xlat
mov
cmc
add
fstl
rcrl
lcall
sahf
push
jl
test
inc
or
adc
je
mov
aam
push
testb
cmp
nop
addr16
leave
test
aas
stos
adc
loop
sbb
or
mov
push
cmovo
mov
mov
pop
xchg
or
mov
popf
and
fsubl
rolb
sarl
lods
xor
mov
dec
cld
bound
sub
inc
gs
ds
pop
mov
jecxz
mov
outsb
pmullw
in
jmp
cs
xor
shl
and
test
int
lds
int3
test
imul
out
sub
in
cs
sub
cmp
out
cmp
mov
jge
fiadds
pop
int
inc
ret
lret
adc
sarl
test
ljmp
fnstenv
imul
fildll
pop
cld
fisttps
mov
mov
inc
xor
mov
fisttpll
data16
and
aad
fistl
cmp
mov
mov
aas
xor
scas
sub
les
xchg
add
cmpsb
add
int
xchg
rol
and
push
jmp
mov
popa
fstpl
dec
jl
push
xor
test
ja
pop
fidivl
int
aaa
pusha
insb
loope
lcall
sbb
jge
stc
pop
sub
mov
fsubs
push
and
je
jbe
cli
mov
stc
jg
inc
enter
scas
iret
repnz
pop
and
push
jo
scas
popf
cli
jl
jg
lea
adc
stos
xlat
mov
jae
dec
sub
adc
ret
popf
fisttpl
add
dec
rcl
sti
or
inc
in
jl
jnp
jg
arpl
sti
or
out
stos
aaa
dec
fmull
push
ds
pop
inc
sarl
movb
repz
pusha
pop
movsl
mov
pushf
adc
in
and
fisubs
mov
mov
xor
push
cwtl
pop
push
ret
pop
sub
mov
subl
jae
loope
mov
rep
pop
jns
cwtl
add
mov
cld
ret
popa
adcl
rorb
mov
pop
mov
add
decl
into
cmp
or
iret
and
bound
popf
test
sbb
sti
ds
pop
sub
inc
add
mov
sbb
enter
push
xor
xor
movsb
in
int3
addr16
mov
jno
add
xor
mov
jp
shll
cld
inc
fs
fsubrs
test
and
mov
decl
mov
into
mov
scas
fisubl
filds
pop
or
lret
mov
int
mov
sbb
add
and
xor
push
rol
lods
adc
frstor
sub
orl
pop
pop
testb
pop
orl
fsubl
mov
aam
into
cmp
cmpsb
loop
dec
push
mov
adc
in
dec
xlat
mov
pop
sbb
sub
iret
ljmp
in
clc
cmp
jmp
pusha
into
jbe
loopne
int3
fstps
test
jo
pop
jnp
xchg
pop
clc
adc
add
pop
repz
sub
rorl
outsl
divl
sub
addl
int
sub
mov
pop
push
sbb
imul
cltd
dec
jge
inc
scas
fimull
xor
out
or
mov
sti
not
arpl
testb
jbe
mov
popf
or
mov
popf
aaa
popf
and
and
mov
and
cmpsb
stos
out
aas
push
jg
inc
cld
cmp
aam
addb
xlat
sbb
arpl
repnz
dec
out
and
fcompl
sbb
jae
or
sub
xchg
inc
lcall
por
xchg
and
jecxz
outsl
das
lods
les
xchg
adc
cwtl
sarb
lret
int
mov
push
arpl
es
std
iret
adc
xchg
imul
loop
dec
xchg
pop
jge
dec
mov
fiadds
movsb
jl
adc
jecxz
loopne
mov
or
jb
repz
popa
in
xor
mov
jbe
jnp
push
fnstenv
aas
sbb
scas
or
and
shll
fcompl
outsb
fimuls
cmp
dec
jmp
test
mov
push
nopl
cli
push
mov
jnp
cmpsl
jle
adc
lcall
add
jmp
sbb
mov
xchg
movb
xor
mov
push
xorb
push
sub
call
ja
rcrl
pop
adc
lahf
xchg
mov
in
pop
and
dec
fdivrp
cltd
out
jle
xor
mov
sahf
inc
pop
pop
dec
sub
fistl
inc
aam
out
xlat
pop
imul
pop
jns
test
shl
ret
test
jl
ljmp
inc
stc
sub
xchg
mov
hlt
frstor
rorl
test
aam
push
sahf
into
iret
add
cld
dec
xchg
sbbb
out
pop
lahf
jp
sub
rcrl
pop
orb
aad
mul
fldt
fbstp
into
mov
mov
xchg
mov
push
inc
dec
addb
sbb
ficoml
enter
dec
mov
fadd
mov
sahf
xor
clc
adc
les
nop
jno
sub
into
or
and
xchg
and
ds
adc
jle
pop
or
int
inc
enter
mov
hlt
vaddss
daa
lods
add
push
cld
sub
mov
and
fdiv
or
cmpl
xchg
cmp
les
mov
decb
ljmp
push
or
jae
shll
jo
lds
aaa
jb
test
repnz
mov
je
addr16
add
push
jge
clc
sbb
mov
or
mov
scas
mov
mov
pop
lea
sub
cwtl
pop
aad
jno
jne
add
ja
divb
pop
imul
lds
inc
and
icebp
fisubl
pop
test
pop
cld
cmp
inc
push
push
mov
or
jns
mov
cmp
and
and
jle
sbb
aas
xchg
das
jo
adc
jp
pop
sbbl
dec
hlt
cli
xor
in
xrelease
xor
outsl
jne
xor
repz
je
sbb
sub
xchg
pushf
scas
out
movsl
mov
sbb
daa
push
int3
jg
lock
pop
clc
in
scas
adc
movsb
mov
add
cmc
and
fistpl
xchg
inc
cmp
jne
and
mov
popf
or
pop
and
xchg
xor
cmp
mov
scas
xor
push
scas
imul
ficoms
pop
add
fldpi
jno
and
lds
out
test
mov
xchg
add
pop
mov
shll
add
mov
dec
push
or
aam
and
daa
lods
add
sahf
dec
je
fcomps
stos
jge
pop
inc
rcr
fwait
xor
in
sti
ljmp
sub
loope
in
mov
adc
enter
fucomip
pop
jle
arpl
xchg
mov
dec
js
testb
dec
xor
cmp
test
pusha
lock
insl
in
xor
lock
add
inc
in
loopne
xchg
and
mov
je
xchg
icebp
dec
hlt
movsl
cmp
daa
shrb
cmpsl
in
jb
lock
and
stos
push
bound
shrl
jge
fcomp
outsb
dec
push
mov
ljmp
inc
xor
cmp
mov
and
mov
dec
popf
icebp
jmp
shlb
inc
imul
xor
into
inc
sub
ret
scas
dec
sub
xchg
jg
arpl
aaa
dec
js
scas
gs
call
xor
out
push
fwait
stc
push
mov
popa
xor
arpl
mov
or
out
dec
subl
lods
jl
push
cmp
test
xor
or
fidivrl
jne,pt
xchg
dec
loopne
or
hlt
xchg
and
pop
test
and
cmc
cmp
xchg
push
loope
mov
imul
test
test
push
push
cmpl
mov
pop
jb
jg
mov
cli
mov
inc
sbb
in
pop
cmpb
jl
es
insl
or
push
jo
movsl
cltd
mov
or
or
test
loope
es
leave
pop
stc
and
sti
in
mov
in
sbb
and
sub
or
int3
enter
mov
inc
sub
rcll
nop
repz
push
imul
cmpsb
jo
jo
push
xchg
add
push
xor
pusha
jnp
add
add
test
cmp
dec
push
fmul
loop
popa
cmc
and
lcall
movsl
mov
cs
outsb
call
in
mov
shll
jecxz
mov
pop
fs
dec
xor
enter
std
ja
clc
sub
scas
adc
stc
sbb
dec
sbb
lret
adcl
out
and
ds
add
aad
cmp
xchg
sbb
lds
lret
mov
push
push
sahf
mov
pop
lahf
in
sbb
fbld
xor
push
push
sub
cwtl
scas
imul
jle
int
ds
jns
mov
repz
imul
push
and
mov
sbb
push
out
xor
clc
mov
sub
mov
outsl
popf
jge
rclb
inc
sbb
jb
in
in
leave
ss
pusha
xor
ret
aas
insb
adc
cmpsl
mov
addr16
inc
out
fimuls
jge
or
repz
sub
in
cld
adc
leave
push
push
stos
and
aaa
push
dec
lock
mov
stos
int
push
enter
jb
ror
icebp
adc
dec
xchg
inc
roll
shrl
push
mov
fbld
sbb
push
movsl
mov
push
cwtl
mov
and
fiaddl
mov
lods
or
pop
or
dec
je,pt
push
scas
cmp
jmp
imul
scas
leave
aaa
xchg
pushf
mov
xchg
outsb
pop
je
pop
mov
fadds
xchg
rcrb
add
xchg
fsubrs
mov
stc
and
xchg
mov
sbb
idivb
fistl
mov
fucomi
sbb
iret
cmp
mov
and
es
inc
shll
xchg
movsl
pop
lahf
fimull
sub
sub
xchg
push
ret
insb
dec
repz
ret
jae
mov
add
sahf
jge
lea
cmp
pushf
lds
subb
dec
leave
nop
pop
mov
test
jae
or
and
shrl
in
jmp
mov
lds
fists
mov
xor
dec
aam
mov
imul
or
mov
shll
rorl
pop
daa
cmp
test
jecxz
es
daa
dec
ret
aaa
xchg
sub
or
inc
adc
xchg
xchg
inc
cmp
and
jecxz
es
sbb
dec
into
mov
sub
pop
popl
in
fisttps
stos
cwtl
mov
aad
pushf
and
das
clc
decb
inc
repnz
xor
out
stos
loopne
jns
out
out
test
inc
rcl
ror
rep
adc
das
inc
gs
sub
popa
xor
mov
jg
inc
and
jg
test
sub
outsb
iret
fstl
or
inc
cmpsb
rolb
sbb
inc
or
cmp
test
and
xchg
outsl
xchg
ja
fidivs
add
jae
daa
or
cltd
pop
add
int
xchg
hlt
mov
xor
movsb
mov
popa
movsl
jnp
and
fistpl
lea
inc
adcl
push
adc
mov
jmp
or
movsb
adc
xchg
dec
call
sti
xchg
sahf
jmp
stos
pmulhw
cmc
ds
xchg
dec
hlt
arpl
pop
stos
add
mov
xchg
pop
dec
pop
xchg
xchg
daa
rcl
divb
out
xlat
lods
mulb
loopne
aaa
lods
push
push
pop
shlb
bound
inc
fcmovb
dec
ret
mov
fld
ret
and
jno
idiv
or
and
notb
leave
jns
clc
add
ret
mov
pushf
sub
inc
mov
mov
mov
adcl
sub
int
add
sqrtps
scas
and
pop
ret
or
in
jbe
sub
cmpsl
mov
pop
adc
scas
or
loopne
mov
ret
fwait
add
jno
mov
sub
cmp
gs
jge
fisubrs
je
adc
fldt
adc
sub
cmpsl
daa
sub
sub
js
inc
in
sahf
sti
ds
jge
ret
roll
ds
dec
lock
iret
push
add
loop
js
sub
fs
xor
js
lea
imul
add
cld
cmp
outsb
mov
in
popa
or
dec
dec
mov
cmp
mov
sbb
xor
and
ret
arpl
xchg
cmp
adc
shlb
icebp
bound
mov
jbe
sbb
jb
daa
fisubl
mov
movsb
mov
jmp
pop
loop
leave
jns
stos
lock
mov
fistps
iret
and
sub
popf
rorb
jae
pop
pop
pusha
sub
sbb
or
call
pop
shll
test
xor
cld
clc
repz
ss
pop
pop
shrb
daa
sub
insl
mov
loopne
or
scas
dec
or
mov
mov
mov
dec
ljmp
pop
mov
pop
mov
outsb
outsb
push
mov
xor
aam
lret
inc
mov
lods
insl
mov
loopne
mov
notb
lcall
xor
and
loope
cwtl
xchg
push
jnp
jl
cli
mov
inc
je
data16
pop
lods
dec
mov
movsb
adc
or
dec
iret
or
es
push
nop
mov
lcall
aad
cmp
test
out
ds
mov
pop
ret
cli
rcl
aad
cs
test
in
jne
je
push
adc
imul
jbe
and
cmc
add
mov
push
roll
or
push
repz
mov
outsb
lret
push
addr16
xor
mov
jno,pn
ljmp
xchg
aaa
and
mov
xor
mov
dec
jl
sahf
clc
jle
loope
psubusw
int
cmp
dec
sbb
pop
pushf
outsb
mov
popf
mov
insb
inc
sub
sub
mov
or
mov
inc
movsb
or
dec
and
dec
mov
mov
sbb
loope
lahf
out
dec
lret
orb
mov
mov
cmp
or
in
xchg
ds
js
jl
nop
and
arpl
or
adc
fldl
cmpsb
sbb
pop
popa
cmp
mov
xchg
xor
adc
mov
fwait
addr16
adc
pop
test
jns
enter
ret
mov
push
lahf
int
or
adc
imul
xchg
loope
into
jnp
sub
aaa
daa
adc
dec
fimuls
shrl
shll
cmp
mov
rolb
xchg
jno
pop
lods
xchg
movsb
cld
ljmp
cmp
fisubrl
nop
popa
fisubrl
stc
clc
je
in
divb
js
mov
movsb
stos
int
push
int3
xchg
adc
loopne
mov
adc
xchg
ret
out
out
aam
dec
jle
aaa
mov
add
add
add
jmp
xchg
pop
insb
test
inc
push
lret
ja
mov
add
jl
and
push
add
add
jp
popa
jo
adc
pop
loopne
fbld
xor
mov
sti
sbb
jmp
xchg
dec
lock
or
adc
mov
push
movsl
and
test
scas
cli
sbbb
push
imul
and
dec
int
dec
mov
push
jl
add
fs
inc
push
fst
test
fildll
or
insl
inc
cmp
or
int3
imulb
cmp
jge
mov
push
sub
call
pop
pop
inc
dec
leave
pop
cmpb
arpl
scas
adc
mov
in
adc
push
mov
movsl
test
push
repnz
xor
xor
pop
jbe
mov
icebp
clc
xor
fnop
lret
dec
mov
lea
aas
xlat
mov
pop
fxam
hlt
test
mov
mov
daa
lea
add
or
and
jbe
ja
cwtl
sbb
lods
fwait
sub
sub
lcall
dec
sbb
bound
xor
test
push
xchg
push
lret
rclb
fisttps
xchg
sbbb
jno,pn
repnz
dec
fadds
lret
out
mov
dec
in
sarb
mov
divl
call
clc
inc
mov
sahf
or
sub
jle
cmc
movsl
lcall
add
xchg
shrb
ds
repnz
jmp
mov
scas
add
adc
push
push
cmp
cmpsb
ret
sbb
and
pop
iret
mov
push
xchg
test
xor
dec
adc
out
mov
mov
cltd
scas
dec
push
jecxz
and
xor
mov
or
cmpb
stos
jno
test
mov
pop
movsl
cld
jbe
and
icebp
test
and
dec
jle
and
es
xor
jge
cmpsl
cmpsl
pop
xchg
mov
pushf
push
popf
into
pop
in
pop
mov
jne
ss
xor
xchg
out
lock
jb
andb
ds
xchg
cmpsb
add
clc
cmp
sbb
lret
sub
inc
call
xor
lods
mov
jle
push
imul
stos
test
xchg
sbb
dec
push
push
fmulp
adc
dec
push
stos
adc
or
adc
and
lods
sbb
es
pop
clc
insl
sub
pop
mov
mov
jg
popf
test
ja
mov
addr16
jle
dec
push
or
jp
sub
cmp
outsb
int3
adc
sbb
mov
ret
sbb
add
addr16
imulb
in
pop
sub
les
mov
in
out
jmp
movsb
sarl
mov
bswap
and
pop
in
inc
sbb
fmull
addr16
in
fidivrl
pusha
or
push
pop
movsb
rclb
mov
ja
push
cmp
addr16
je
mov
sbb
jns
mov
iret
mov
aam
das
hlt
ror
or
lahf
movsl
addr16
ljmp
outsb
pop
lock
mov
pop
loope
into
sub
mov
xor
push
icebp
sub
mov
mov
mov
xchg
loop
inc
dec
sysexit
inc
stc
adc
add
push
or
bound
and
push
daa
pushf
cltd
arpl
ret
xchg
add
out
mov
pusha
push
cs
lds
arpl
scas
aaa
dec
xor
push
push
ror
lds
cmp
mov
aaa
or
and
fisttpl
sti
js
xor
in
mov
jbe
mov
jg
and
xor
xor
push
dec
inc
movsb
dec
fcmovbe
jmp
sbb
movsl
aas
and
push
inc
data16
dec
push
and
seto
sub
pop
fildl
add
imull
bound
outsb
sbb
jp
xchg
mov
mov
inc
rep
out
cmp
add
or
les
in
fs
out
mov
insl
add
jge
pushf
adc
xor
mov
call
inc
mov
mov
js
mov
mov
out
outsl
pop
mov
mov
lock
fisttpll
mov
mull
sbb
inc
xor
imul
sti
ret
cmp
xchg
push
sbb
pop
repnz
mov
lock
sub
xor
dec
aad
int
pusha
mov
xor
adc
sub
sbb
xor
jne
lds
testl
adc
ljmp
jo
mov
nop
jge
out
shlb
lret
les
pop
pusha
jb
cmpsb
and
out
dec
jo
sub
mov
aas
lret
and
jb
leave
xor
sbb
cltd
pop
push
xchg
cmpsl
cmc
int
sub
mov
push
call
mov
mov
add
dec
idivb
loopne
movsl
jne
or
out
insb
mov
outsb
int3
stc
mov
push
cli
lods
or
add
xor
aas
cwtl
icebp
jbe
inc
fisttpll
loopne
xor
lea
sarl
addr16
in
aad
mov
enter
mov
in
cmc
sub
cs
adc
and
xchg
dec
jno
mov
sbb
pop
aas
into
rcrl
inc
stos
movsb
cmp
icebp
and
decb
xchg
jge
mov
add
clc
cmp
pavgw
xor
fisubs
ret
mov
adc
stos
insb
inc
pusha
inc
iret
jecxz
lcall
mov
pop
je
loop
xchg
ds
add
push
cmp
jnp
in
cmp
lods
cmc
jae
pop
sub
sbb
ret
icebp
add
xor
aam
repnz
hlt
insl
xor
jbe
enter
jbe
imul
popf
jl
jne
punpckhbw
mov
adc
ja
jecxz
xchg
rclb
mov
std
dec
ja
cmc
or
inc
callw
fistpl
daa
imul
and
outsl
sbb
push
popa
sbb
ret
in
inc
pop
test
hlt
pop
rorl
jecxz
test
mull
pop
insb
repz
and
insb
cld
dec
test
cmc
mov
jo
and
imull
stos
sbbb
out
adc
es
xor
ret
pop
cmc
jp
leave
mov
nop
repnz
cmp
imul
and
push
jbe
sbb
loop
jecxz
mov
pop
icebp
sti
rorb
shl
ds
les
cmp
pop
jae
add
mov
jno
mov
pop
mull
cltd
sbb
frstor
adc
sbb
and
push
aaa
xor
mov
lods
jge
into
fsub
in
xor
stos
pop
push
jmp
addr16
fimull
aad
out
scas
lcall
sub
dec
orb
es
notb
add
aaa
cwtl
xor
jns
cmpsl
push
add
cwtl
lods
loop
pop
xor
sarl
sbb
mov
mov
clc
adc
pop
jbe
repnz
and
or
xchg
lods
mov
lods
push
inc
push
cmp
es
pop
cmp
data16
adcl
and
ret
test
inc
pop
lret
cmc
dec
push
inc
subb
outsb
cmp
and
cli
xchg
mov
sub
shrd
out
push
aas
or
clc
xor
stos
inc
js
sbb
add
std
mov
mov
outsb
or
lds
idivb
mov
push
movzbl
imul
push
int3
repnz
xchg
cs
inc
imul
scas
std
mov
dec
sbb
inc
or
sub
xor
pop
jbe
out
jmp
sbb
sub
xor
or
lods
mov
in
mov
test
add
gs
mov
adc
sbbl
jbe
sbb
xchg
mov
inc
mov
dec
in
add
movsl
mov
push
push
jg
pop
insl
mov
push
aam
lds
enter
mov
dec
push
aad
sbb
mov
clc
pushf
mov
sub
add
addr16
cmp
in
add
out
mov
inc
inc
stc
and
clc
xchg
or
xchg
shll
imul
push
pop
push
shl
stos
gs
in
mov
inc
ret
inc
cs
movsl
jmp
push
js
outsb
jne
sbb
das
cmp
cmp
cmp
insl
loopne
das
ja
test
flds
mov
sub
and
mov
pop
pushf
sub
adc
cmp
pop
sbb
call
loope
pop
mov
lret
out
pop
push
adc
mov
leave
fwait
rol
idivl
and
or
cld
enter
dec
xchg
pop
std
push
sub
or
enter
adc
sub
rcrb
aas
add
sub
jl
data16
das
jns
loop
add
enter
mov
xchg
leave
xor
pop
mov
out
pushf
enter
shlb
nop
pop
mov
imul
add
jns
and
lods
lahf
pop
xor
imul
mov
popa
mov
mov
shlb
mov
lods
mov
pop
mov
cmpsb
popa
sub
lcall
dec
cmp
pop
or
adc
imul
insb
inc
sarb
cmc
cltd
add
test
mov
enter
ret
shrl
xchg
jg
lock
cld
imul
xchg
mov
dec
test
std
test
aad
mov
lahf
cmpl
sti
mov
hlt
adc
or
jne
out
nop
xchg
mov
or
sub
pop
push
or
movhps
xor
lea
daa
mov
inc
cltd
fistps
in
in
jmp
mov
jbe
xchg
inc
xor
out
fnstcw
sbb
xchg
ljmp
ljmp
movsl
and
fistpll
outsb
data16
mov
push
movsb
push
arpl
adc
mov
int
inc
out
and
push
jnp
mov
mov
jg
or
push
cmp
sub
rcrl
dec
fwait
add
ljmp
fchs
call
or
mov
push
mov
stos
scas
mov
test
or
sub
push
je
sub
fs
rcrb
lea
fs
xchg
sub
ret
fistps
insb
cmp
sbb
mov
jb
repz
aaa
dec
jl
ljmp
test
mov
sbbl
push
shlb
std
ret
movsb
movsl
daa
push
sysret
mov
or
repz
ja
mov
cmp
mov
rcll
mov
sub
and
dec
inc
lea
xorl
mov
pop
and
int
sbb
outsb
mov
push
into
divb
je
jbe
and
inc
mov
xchg
sub
nop
xchg
aam
fwait
sbbb
daa
in
mov
lds
das
frstor
cmp
push
nop
ss
mov
xor
dec
cld
adc
popf
ficomps
iret
ret
nop
push
and
and
gs
mov
push
jno
and
cmpsl
sbb
sarb
test
dec
fstps
fidivrl
shrb
cmp
mov
xchg
pusha
inc
xor
loopne
rolb
xchg
mov
jle
inc
rcrb
pop
jmp
movsl
xor
mov
push
rol
scas
loope
ljmp
add
inc
xor
sub
call
call
pop
sbb
or
in
mov
adc
mov
inc
mov
sbb
cmp
pop
outsb
jnp
test
rcll
int
fisttps
out
mov
and
mov
outsl
loopne
dec
cli
cmp
push
lcall
cmpl
bound
fsub
mov
dec
jmp
cltd
cmc
notb
insl
addb
cmp
lods
xchg
push
iret
dec
pusha
cmpsb
sbb
or
mov
mov
dec
mov
into
adc
push
cli
dec
pop
pop
fimuls
stos
jge
shl
add
mov
dec
fsubrs
mov
pop
push
pop
mov
jb
jecxz
dec
scas
sub
in
insb
aas
test
mov
out
pop
xchg
sbb
mov
pop
jnp
shll
insl
repnz
fs
leave
rep
cmpsl
mov
push
in
neg
xchg
shlb
mov
push
cmp
pop
mov
add
adc
les
leave
push
inc
jne
and
aad
adc
les
test
add
xlat
dec
test
push
mov
clc
cmp
mov
dec
clc
lea
test
push
push
leave
jo
pop
hlt
adc
or
cld
pop
xor
insl
lret
adc
leave
fldenv
inc
bound
addr16
add
inc
stos
sub
pusha
add
mov
notl
xor
xlat
bnd
add
mov
insl
mov
jbe
mov
je
fxch
or
add
xchg
pop
call
mov
test
lods
jae
call
mov
ljmp
inc
orl
xchg
xor
jne
ja
fisttps
mov
push
sarb
lret
pop
lods
popa
stos
add
push
rcl
push
or
les
sub
ret
adc
aam
hlt
fnstenv
lret
ret
mov
cli
mov
addr16
fwait
push
test
fstl
inc
sbb
lods
andb
dec
xchg
icebp
mov
add
insb
sarl
sub
das
enter
arpl
add
test
push
mov
xor
add
or
push
repnz
dec
nop
dec
pop
sarb
das
fsubs
jae
lahf
and
dec
lret
and
mov
push
xor
or
add
lods
sbb
cmp
dec
inc
aaa
jbe
repz
je
pop
xchg
jno
orb
mov
sbb
loope
and
fildll
mov
sbb
push
cmp
jle
cmpsl
mov
sbb
inc
xchg
adc
out
jge
out
lahf
jns
cmp
cmp
rclb
daa
fdiv
pop
pop
outsl
and
cmp
xor
push
xchg
mov
mov
rcrl
out
mov
test
es
jbe
js
stc
sti
mov
cmpsb
xor
cltd
inc
push
sbb
xchg
or
enter
mov
into
mov
pop
mov
mov
pushf
aaa
sbb
out
inc
cli
xchg
repnz
cwtl
jg
inc
cwtl
ret
xor
mov
jnp
inc
je
inc
and
nop
stc
mov
pusha
jg
cmpsb
sbb
ljmp
dec
inc
dec
inc
push
push
lods
shll
cmp
and
enter
mov
dec
push
or
sbb
shrb
push
mov
scas
lea
rorl
push
mov
mov
sub
sbb
cmc
cmpsb
xchg
call
subl
cwtl
cmp
ljmp
dec
sub
mov
or
push
mov
mov
stc
xor
push
loopne
outsl
pop
mov
push
sbbb
adc
push
mov
add
stc
xchg
outsb
inc
jo
mov
push
aam
stos
sbb
pop
mov
rolb
pop
dec
adc
dec
add
inc
sti
pop
movsb
ret
cmpsl
xor
adc
inc
sbb
js
pop
sub
cmp
jg
dec
insl
testl
test
xor
ja
cmp
stc
adc
shl
push
imul
pop
shrb
jns
mov
ret
insb
or
sbb
jle
xchg
ret
fists
xor
xchg
push
push
cmp
push
fstl
push
or
push
outsl
push
int3
dec
test
and
mov
xchg
shrl
js
movsl
int3
subb
push
add
xchg
dec
movsl
ds
or
add
stos
pusha
ss
push
test
cmp
xor
push
je
xchg
mov
rcrl
mov
xor
mov
jne
dec
retw
adc
mov
pop
xor
loopne
or
push
mov
sbb
mov
xchg
mov
std
cwtl
mov
ja
mov
xchg
imull
mov
lds
mov
icebp
inc
nop
xor
cmp
adc
mov
aam
les
sar
mov
xchg
enter
mov
push
ret
xlat
and
cwtl
mov
cmpsl
jecxz
ret
mov
push
addr16
mov
xchg
push
dec
bound
xorl
in
cli
xlat
mov
adc
sub
aam
jnp
int3
mul
dec
loopne
nop
cmp
mov
lods
dec
outsl
das
popf
fwait
or
push
popf
xor
outsb
shlb
jecxz
movsl
xor
xchg
xor
mov
mov
sub
mov
mov
sub
cwtl
call
mov
aas
xchg
inc
xchg
sbb
push
frstor
mov
int
repnz
and
or
enter
sarl
cmp
pop
subl
mov
ljmp
adc
mov
movl
inc
jae
frstor
pop
mov
push
cltd
test
test
gs
rcl
lods
out
clc
pop
scas
or
lds
into
cmp
mov
mov
add
or
sub
pop
clc
aam
sub
inc
mov
jmp
mov
xchg
jo
mov
aad
adc
inc
mov
cmpsl
subb
mul
xor
xchg
mov
stos
jp
pop
xchg
dec
mov
jae
push
jae
iret
xchg
outsb
loop
test
arpl
js
and
or
push
loopne
inc
xor
and
sub
and
pop
mov
push
outsb
test
lock
lock
aam
stos
add
pop
lcall
mov
stos
xor
jmp
bnd
inc
and
lea
sbb
loopne
cmc
ja
test
fidivl
pop
xchg
push
or
pop
and
lods
pop
dec
lods
add
pop
mov
push
shl
movsl
shr
test
stc
mov
push
mov
mov
push
and
das
mov
fdivs
or
mov
enter
pop
cmp
scas
or
or
and
adc
or
xchg
adc
sub
sbb
lea
test
mov
lahf
push
push
jle
jmp
ja
inc
cmp
mov
jge
sbb
cmp
adc
jb
fiadds
ret
xor
xchg
mov
lds
subb
lds
add
into
sbb
pusha
cmp
mov
aaa
divl
mov
xor
stos
xlat
push
stc
lcall
rcrb
sbb
add
fbld
mov
addb
movsb
pushf
mov
icebp
cmp
xchg
sbb
jl
jbe
xor
popf
inc
add
iret
adc
in
cmp
dec
inc
xchg
flds
cltd
enter
dec
push
outsb
dec
fildll
pop
rclb
cmpl
jb
push
pop
sar
or
fwait
mov
or
cmpsl
xor
out
adc
mov
outsl
hlt
cmp
push
fs
pusha
fcomi
into
xor
les
mov
aad
imul
cli
andl
ljmp
rcl
shlb
dec
sbb
mov
sub
inc
into
inc
push
stos
repnz
inc
paddd
je
mov
icebp
xor
push
cmp
adc
daa
jbe
cltd
cmpl
sbb
jecxz
in
rcl
add
ret
clc
xor
das
add
fiadds
push
icebp
nop
mov
in
cli
xchg
sub
addr16
stos
jne
and
xchg
loop
bound
pop
sub
adc
sahf
in
repz
int3
jl
sti
add
int3
loopne
cmc
mov
lret
mov
or
jle
inc
rcrb
jle
push
or
int3
jl
int
xor
aad
pop
push
out
jg
jns
or
pop
insl
push
stos
outsl
cld
mul
cmp
cmpsb
and
dec
xorb
fldcw
movsl
adc
inc
cld
jp
call
xchg
popl
dec
test
mov
lret
arpl
push
jle
adc
pop
pop
adc
inc
aam
jp
pop
mov
std
leave
fsubl
popa
fmuls
addr16
dec
mov
loopne
imul
das
mov
scas
stc
pop
js
insb
and
stos
fwait
lret
nop
add
lahf
or
add
sub
xchg
adc
fadds
ljmp
lahf
cmp
lcall
out
or
jl
cwtl
fs
jmp
sub
adc
nopl
jb
inc
pop
fldl
cwtl
clc
cmp
sbb
sub
pop
mov
push
pop
cmpsl
push
fdivrp
outsl
jg
loopne
aas
outsl
testl
sbb
and
iret
lahf
mov
and
adc
cs
mov
arpl
sti
movsb
add
dec
out
pop
add
loope
and
jae
pop
stos
movsl
sub
cmp
cmpl
test
flds
mov
outsb
cmp
jnp
xchg
jns
xor
jl
mov
pop
mov
push
xrelease
inc
je
mov
shll
add
out
push
ja
aaa
dec
push
data16
pop
sar
sbb
mov
jge
sbb
testb
xchg
inc
xchg
push
add
inc
int3
loope
dec
mov
mov
jb
cld
xchg
popa
fmuls
mov
test
and
jge
dec
mov
mov
jae
xor
mov
inc
xor
stos
xchg
sub
cmp
mov
dec
daa
pop
shrb
push
add
mov
js
mov
fsts
xchg
sub
and
lret
sbb
lock
sbb
mov
je
stos
jecxz
fcomp
loop
push
bound
imul
or
mov
sbb
in
and
imul
xor
clc
lock
clc
mov
or
fnstcw
dec
mov
jge
loopne
gs
push
push
xchg
lock
dec
jg
push
inc
int3
es
nop
push
or
and
jb
fwait
hlt
enter
dec
sub
stos
xchg
jae
cmp
adc
cmp
scas
xor
mov
stos
and
add
bound
std
xchg
cmp
imul
mov
test
mov
arpl
ret
and
push
mov
jne
and
sbb
int3
push
int
xchg
dec
repz
scas
xor
pop
xchg
out
outsb
fdiv
jge
jae
mov
cltd
add
fisttpl
inc
ret
ficompl
insb
jb
dec
push
gs
cmpsl
xchg
mov
and
sbb
movb
enter
loope
inc
stc
fwait
sub
outsb
sub
add
test
cmp
mov
mov
enter
jo
xor
lret
inc
sbb
xor
xor
call
push
xchg
cld
outsb
loop
aad
xchg
adc
pop
cmp
pop
sub
arpl
cmp
lods
repz
pop
xor
leave
dec
aad
dec
fsub
inc
test
fstpl
inc
inc
jns
adc
daa
cmp
aam
adc
imul
adc
jne
push
pop
mov
xchg
push
xchg
and
add
pop
and
ficomps
pop
pop
subl
mov
push
movsl
mov
inc
repnz
lcall
fucom
or
mov
xor
pop
es
sbb
jecxz
addr16
sbb
mov
dec
sbb
dec
push
jle
fsubrl
mov
fstps
test
ret
sbb
ret
jno
xchg
push
xor
bound
jnp
add
inc
sbb
fbstp
aaa
mov
adc
incl
or
notl
pop
mov
fwait
add
js
adc
or
adc
xor
jmp
bnd
push
test
sar
cwtl
into
or
out
xchg
adc
or
cld
push
jl
mov
insl
or
mov
fcom
ja
scas
xchg
cld
loop
adc
xlat
jno
mov
mov
add
push
add
lcall
daa
rorb
and
fwait
xchg
inc
xor
mov
jle
mov
cmc
pop
sub
hlt
pop
or
xchg
xchg
lcall
outsl
mov
call
push
subl
sbb
xor
jle
mov
xor
les
test
xor
mov
bound
pushf
data16
and
xchg
jns
adc
es
in
aas
xor
inc
dec
cli
shlb
dec
inc
subb
xchg
or
imul
into
and
pushf
jae
shll
insl
cmp
add
or
bound
inc
call
ljmp
imul
mov
cmp
mov
and
imul
movsl
stos
push
push
loop
mov
push
cmpsl
gs
xor
mov
mov
jnp
push
pop
push
mov
xchg
sub
pop
push
outsl
add
mov
jle
stos
test
mov
out
mov
test
adc
inc
xchg
lods
out
xor
sub
repnz
dec
icebp
fldenv
push
pushf
pop
test
push
and
mov
or
mov
icebp
lea
enter
dec
xor
jb
or
sub
cwtl
outsl
push
adc
push
add
inc
mov
ss
pop
cmpsl
mov
scas
mov
test
ss
pop
leave
sarb
inc
mov
cmp
imul
negb
lcall
pop
inc
or
sub
xor
in
in
int3
pop
setbe
shrb
push
ss
mov
adc
push
div
cmpsl
jl
cmp
mov
or
leave
ret
stos
pop
mull
iret
ror
inc
ljmp
jb
push
mov
test
push
dec
in
stc
shrb
popa
mov
jle
push
cmp
xor
imul
mov
xor
loop
sbb
mov
lcall
cmpsl
into
cli
inc
jg
xchg
or
xorb
push
fists
fcomp
adc
add
sub
push
data16
inc
jmp
icebp
sub
outsl
fisubs
xor
in
ror
mov
jmp
mov
push
inc
mov
cs
sub
lahf
pop
in
fwait
scas
decl
test
das
lret
mov
jnp
clc
mov
ljmp
outsl
into
mov
aas
jns
std
out
cmp
xchg
and
loop
jp
ficoms
pop
mov
les
lock
add
cmpsb
icebp
sar
hlt
cli
iret
adc
lret
pop
mov
les
pusha
lock
cmp
jecxz
jae
into
test
movsl
push
dec
mov
or
pop
cmp
ficoms
jno
into
push
imul
fnsave
cmp
cs
mov
mov
or
loope
pop
das
mov
gs
adc
mov
popa
sub
loopne
jp
int3
bound
incl
movsl
pop
fwait
outsb
add
icebp
cmp
lods
stos
mov
iret
fucompp
es
popa
mov
adc
push
mov
pop
sbb
outsb
push
loope
fstpl
add
pop
cwtl
jg
pop
adc
cmpsl
push
ficoms
insb
inc
das
movsb
dec
aad
mov
jo
pop
or
pop
cmp
pop
mov
imul
push
jle
cmp
lea
push
push
sysenter
adc
test
adc
cmpsb
mov
enter
ret
sub
xchg
incb
test
icebp
ja
push
or
inc
subl
roll
push
push
test
jecxz
and
pop
mov
out
inc
arpl
adc
fwait
icebp
mov
sub
add
or
jne
add
mov
xlat
or
add
fldl2e
iret
iret
arpl
mov
test
mov
sbb
insl
imul
cld
push
adc
rcrl
lods
arpl
push
test
cmp
dec
inc
jne
pop
movsl
dec
aam
test
enter
jae
mov
sbb
popf
xchg
test
and
adc
cld
cmp
or
dec
in
aam
pop
mov
push
mov
mov
jb
ficoms
dec
in
push
rorl
mov
pop
out
pop
sar
mov
fimuls
dec
insb
sahf
sbb
outsl
aaa
pop
xor
push
das
stc
or
lods
call
fbstp
pop
aam
xor
scas
enter
mov
sti
insl
sub
mov
in
idiv
mov
add
sbb
mov
test
xor
aam
movsb
and
mov
mov
fmull
sub
pop
add
int3
insl
xchg
test
mov
xlat
mov
popf
xchg
jo
cmpsb
scas
pop
mov
fsubrp
xchg
inc
lahf
into
arpl
or
rclb
dec
hlt
movsb
push
cmpsl
fldcw
cmp
add
cmpsb
sbb
in
aam
and
dec
fs
in
out
and
daa
mov
xchg
xor
or
adc
mov
repz
pop
push
cld
sbb
mov
imul
add
add
movb
cld
in
cwtl
mov
notb
mov
mov
lret
xchg
int
xor
imul
adc
loop
orl
xlat
cwtl
loopne
lods
insl
cmp
add
add
into
cmp
cmp
movsl
pop
xlat
pusha
ret
stc
loopne
mov
cmc
test
adc
adc
and
jb
lock
outsl
ret
or
add
pop
push
inc
sub
pop
pop
add
popa
mulb
sub
nop
rol
mov
imul
loope
pop
cmp
sahf
cmp
lods
pop
sbb
add
and
js
and
dec
clc
in
pxor
jnp
andl
test
pop
das
sub
and
xchg
rcr
not
xchg
inc
cmp
xchg
jl
pop
fdivl
in
dec
mov
sbb
imul
mov
cmp
idivb
adc
mov
imul
mov
xchg
push
fs
int3
cwtl
fdiv
mov
jmp
aas
xchg
lea
xchg
xchg
dec
mov
fisubrl
shlb
xor
out
scas
xchg
insb
fists
cwtl
shlb
xchg
negb
add
jle
lret
jne
jmp
sub
mov
ds
jl
adc
iret
iret
inc
xchg
inc
pop
push
cmp
aaa
jmp
push
jl
in
sbb
or
in
push
mov
pop
xchg
dec
sti
adc
xchg
mov
dec
daa
or
mov
pop
std
cmpsl
insb
cltd
insl
sbb
inc
and
jmp
test
pop
cmc
sti
xchg
sub
and
stos
mov
inc
fdivrs
aaa
adc
sahf
jmp
or
cmp
sbbb
xor
inc
sub
dec
ret
sarb
ret
bound
adc
mov
icebp
pushf
sub
lret
sbb
sub
pop
dec
stos
outsl
xor
add
sbb
adc
mov
jne
fmull
inc
push
test
dec
push
arpl
ret
daa
inc
and
inc
nop
outsb
dec
pop
movsb
jo
or
mov
pop
jmp
repz
pushf
es
shll
test
or
and
mov
int
ret
mov
push
pop
into
jbe
int
mov
mov
lock
inc
dec
repz
xor
sbb
ss
rol
leave
dec
aaa
adc
int3
test
or
out
mov
in
jecxz
mov
lea
icebp
and
xor
ret
mov
nop
dec
pop
dec
dec
jmp
mov
mov
push
ret
bound
jmp
out
adc
fs
daa
hlt
xor
xchg
push
xchg
dec
adc
jne
lret
lret
loopne
xchg
pushf
outsl
mov
mov
in
sub
push
adc
inc
lret
sbb
lret
orl
xchg
pop
ja
pop
jecxz
cltd
adc
jne
or
cmp
in
rcl
inc
xchg
cli
xchg
orb
or
xor
pushf
and
add
xchg
and
jp
pop
xchg
add
test
ret
cmp
test
sub
xchg
xor
xchg
cmp
cmc
sub
cmpl
sti
push
xchg
iret
addr16
pop
lods
xor
jp
aaa
gs
mov
inc
out
xchg
in
mov
mov
popf
jo
cmp
ret
adc
jae
and
fnsave
sbb
xor
mov
out
cmc
cmpl
cmc
in
jecxz
jp
push
inc
cwtl
jmp
xor
pop
jge
in
loopne
xchg
fdivl
xchg
cld
mov
mov
mov
pushf
test
mov
in
push
out
mov
mov
jp
mov
lret
fcmovu
sti
xor
test
jle
je
jmp
jne
xchg
popf
pusha
xchg
push
and
imul
mov
add
mov
fadd
adc
repnz
outsl
sub
les
add
dec
xchg
jns
subb
cld
sub
push
add
out
jecxz
xchg
push
or
aad
out
cli
jp
arpl
xor
movntps
lock
xor
sti
cmp
lock
sub
rcr
cmc
push
ss
or
push
leave
mov
add
sbb
adc
mov
jbe
ja
jb
cld
das
and
and
mov
mov
xor
mov
push
aam
in
xchg
add
pop
xor
mov
pop
jo
icebp
in
orl
and
add
out
leave
inc
xchg
adc
pop
pop
js
sbb
sbb
xlat
cmp
jle
push
cmp
pop
dec
scas
jo
dec
mov
add
push
pop
adc
pop
xchg
jmp
icebp
jp
mov
cld
jbe
cltd
aam
ror
out
orb
test
es
ds
pop
in
insb
cmc
sub
ret
xchg
adc
xlat
arpl
jge
dec
xor
jl
add
inc
push
sarl
std
subb
pop
js
iret
leave
ljmp
add
adc
jge
pop
sub
sbb
lods
sbb
das
xor
jp
mov
in
pop
sbb
cmp
mov
call
fsubrs
inc
pop
out
lock
hlt
sbb
and
sub
add
cmc
scas
adc
sbb
fs
leave
out
adc
pushf
xor
sbb
xor
mov
out
icebp
sahf
and
and
inc
jl
in
jmp
pushf
mov
or
shl
and
shll
movsb
ds
out
ja
sbb
add
inc
or
xor
jmp
loopne
xchg
cld
lea
or
loop
jl
xchg
fdivrs
ss
sbb
inc
shlb
cld
jp
push
mov
cltd
ss
push
cmp
pop
jns
movsb
mov
shl
pop
outsl
repnz
and
loopne
mov
jne
or
push
cmp
stos
test
ljmp
ja
pop
push
pop
xchg
out
jp
sar
psrlq
insl
adc
shll
fbld
cmp
stc
jg
mov
fimull
icebp
sbb
jb
jnp
movsl
fcmovu
jmp
popa
jno
stos
je
std
inc
or
subl
inc
sarb
dec
mov
push
decl
jp
dec
pop
lods
andl
inc
pop
mov
fsubs
or
mov
add
aam
aaa
shr
sbb
cltd
sbb
mov
xor
mov
addl
adc
mov
hlt
out
jno
adc
xor
fiadds
stos
dec
dec
push
push
insb
or
ljmp
fsubp
notl
mov
std
in
dec
add
hlt
rcrb
xchg
sbb
psllq
nop
pop
mov
out
cmpsl
sbb
add
add
inc
pop
sbb
mov
or
and
jno
adc
xor
fstps
sub
movsb
int
insb
dec
or
mov
arpl
jge
cmp
out
mov
xor
filds
fstl
bnd
fcmovu
mov
rol
pop
pushf
dec
ja
push
sti
movsl
push
iret
out
pop
push
mov
xlat
or
insb
je
test
adc
push
andl
call
imul
pop
xchg
mov
sbb
lds
popf
mov
push
mov
fistpl
xchg
mov
inc
xchg
rol
into
loopne
fists
rcrb
xor
subl
pop
mov
pop
sub
cld
insl
out
lahf
mov
movsb
dec
lods
jecxz
xchg
aam
loope
popa
not
stos
iret
push
lret
sub
adc
jmp
push
cwtl
rorl
sub
mov
xorb
cmpb
insl
push
push
pop
jno
rcr
sbb
jge
ss
dec
mov
push
cs
mov
mov
lds
lea
inc
mov
mov
cmp
xor
add
aad
addr16
testl
sbb
cmp
inc
popf
pop
sub
pop
mov
mov
cmpsb
int
out
xchg
icebp
in
mov
pop
mov
mov
fistps
aas
mov
push
ret
out
mov
mov
fdivrs
dec
aad
pop
enter
xchg
ss
dec
notb
xor
cmp
push
dec
in
add
popa
inc
cmp
cmc
push
and
jnp
das
dec
push
shlb
fbld
cmp
pushf
scas
push
pop
hlt
fdivs
pushf
cpuid
rolb
lret
xchg
inc
adc
into
jmp
cmp
adcl
mov
mov
in
mov
or
lock
mov
dec
lcall
pop
rol
in
lock
mov
adc
or
shll
sbb
jb
add
fmull
mov
add
inc
cmp
ss
push
std
inc
dec
pop
rcrb
jge
sub
lahf
mov
or
xchg
icebp
xor
fstpl
dec
enter
add
cmp
ret
inc
pushf
pusha
and
mov
push
xchg
cmc
cmp
shlb
rcrb
gs
xor
jae
xor
jns
outsl
lock
mov
and
or
inc
pop
and
sub
push
adc
loope
adc
in
loopne
lahf
add
sub
fcmovnb
lods
mov
sub
adc
jb
testl
pop
sahf
insb
xchg
addr16
pop
lret
je
fsubrs
adc
pop
jo
fwait
pusha
out
addr16
pusha
ss
repnz
sub
mov
test
hlt
push
test
xchg
mov
imul
movsl
push
mov
cld
aad
jp
push
mov
push
stos
sarb
xor
mov
out
in
or
add
ffreep
retw
test
adc
outsl
mov
xor
and
mov
adc
jg
and
adc
xor
bound
inc
insl
mov
aad
clc
ss
icebp
popf
xchg
gs
aas
ret
and
xlat
jb
in
je
mov
cmp
data16
int
jge
push
xchg
test
push
repz
jne
pop
test
adc
mov
push
sbbl
fisttps
int
mov
movsl
lods
or
push
arpl
add
xchg
xor
jle
xor
cmpsl
mov
ja
shlb
out
or
jl
jp
xchg
mov
add
sub
movsl
mov
pop
xlat
add
and
stos
sbb
adc
imul
cmp
mov
xchg
sbb
ja
ret
jp
ret
hlt
out
inc
mov
fcmovbe
cld
xor
or
sbb
pop
jecxz
push
sbb
mov
xor
inc
cmp
jle
xchg
imul
mov
daa
stos
stos
loop
je
test
pusha
adcb
movsb
arpl
je
inc
push
lahf
pusha
daa
and
cmc
cld
outsl
mov
mov
add
jmp
sub
adc
movsb
mov
cli
in
aad
nop
loop
stc
add
lret
jbe
ret
xor
push
cwtl
jecxz
and
or
in
fcompl
push
mov
aam
push
inc
jle
je
mov
lret
push
pop
es
xor
icebp
jne
mov
jo
push
adc
mov
mov
xor
or
cwtl
insl
add
imul
adc
stos
mov
fists
fucomi
jns
fs
push
pushf
jnp
pop
mov
push
sbb
jb
cli
rcrb
cmp
jno
je
int
fchs
and
insb
jle
js
clc
je
lods
imul
inc
test
popa
bound
push
adc
jbe
mov
cmp
test
lret
inc
add
mov
in
mov
adcl
pusha
insb
add
dec
or
ror
mov
mov
call
testl
or
mov
xchg
xchg
testl
fisubrl
mov
push
sti
stos
pop
xchg
in
and
mov
in
dec
lret
clc
mov
addb
pop
popf
dec
popa
mov
mov
loope
add
loop
adc
mov
cli
push
push
cmp
test
fsts
jbe
push
aaa
nop
insl
xor
ffreep
xor
pushf
push
int3
xor
sbb
leave
push
mov
int
bound
xchg
add
test
rorl
or
shll
insb
stos
sbb
je
or
repz
iret
rolb
stos
xor
cmp
push
scas
jmp
mov
xor
cltd
lods
pop
sahf
or
and
pop
add
cmp
cmp
fadds
movsb
cltd
inc
imul
mov
add
inc
imul
pop
fnstcw
ja
rclb
fdivrs
loopne
or
fwait
cltd
ljmp
push
mull
or
popf
icebp
mov
pop
push
push
push
call
adc
jmp
or
jmp
push
out
pop
in
mov
aaa
dec
sub
pushf
out
sbb
clc
mov
repz
packsswb
mov
pop
cli
mov
sub
mov
scas
icebp
xchg
in
push
fcomp
jp
fimuls
ljmp
nop
ds
adc
pop
jne
cld
pop
inc
cmp
ljmp
xchg
sub
inc
out
pop
jns
dec
rcll
stc
paddb
repz
mov
cltd
lods
cmpsl
icebp
cmp
lret
sbb
popf
dec
pop
pop
mov
arpl
cwtl
push
test
sbb
aaa
jmp
xchg
mov
mov
sub
out
mov
addr16
dec
xor
fimuls
cmp
dec
cmp
arpl
mov
mov
xor
daa
cmp
jbe
stc
iret
cmpsl
and
push
push
stc
mov
pop
adc
or
xor
aas
jg
scas
lods
add
xlat
mov
pop
fildll
sarl
jl
xchg
or
pop
inc
jns
and
xlat
mov
sahf
sbb
cli
sub
jle
sbb
scas
push
rcll
sub
fcompl
adc
or
orb
sbb
adc
xchg
lds
push
fwait
outsb
outsl
add
sub
sbb
and
or
jne,pt
inc
cltd
sbb
mov
mov
test
negl
or
jno
in
pop
cmpsl
inc
cmpsl
enter
cwtl
sub
outsb
mov
in
adc
jns
mov
loop
jg
jnp
or
fld1
out
and
into
je
jecxz
jmp
int3
and
inc
ja
cmc
arpl
mov
mov
pop
scas
sbb
outsl
pop
outsb
movsl
mov
arpl
cwtl
ret
lods
into
les
jns
mov
fwait
es
push
ret
dec
pop
sub
lahf
pop
shr
mov
jo
mov
dec
inc
inc
or
clc
sub
mov
mov
sbb
mov
push
xchg
mov
push
push
mov
popa
icebp
xchg
imul
push
push
mov
pop
mov
aas
popa
mov
int
mov
push
sub
iret
jb
iret
out
in
jbe
cmpsb
adc
mov
bound
and
adc
icebp
movsl
dec
fisubrs
fnstcw
xor
or
aas
cmp
into
inc
mov
aam
dec
xchg
cmpsl
cli
dec
push
shl
push
cs
incl
mov
mov
lret
in
or
jp
cltd
sub
mov
sti
dec
ret
xchg
mov
cmp
test
frstor
nop
pop
mov
daa
sbb
loop
subb
rcll
jle
scas
int3
dec
inc
clc
int3
mov
subl
xchg
jl
pop
testb
leave
sbb
push
popf
loop
and
mov
js
adc
cli
inc
stc
mov
fwait
fwait
les
lret
jg
fs
loop
jecxz
pop
mov
loop
clc
lods
aaa
nop
mov
mov
enter
xchg
xchg
ljmp
jbe
sarl
scas
fdivr
xchg
push
sub
mov
in
mov
mov
jle
pop
addr16
xor
sub
imul
nop
nop
add
leave
and
enter
aas
aaa
mov
movsl
xchg
dec
inc
jno
cmp
adc
mov
mov
rcll
fistps
imul
sub
inc
push
mov
cli
mov
ret
xor
test
pop
cmp
push
xchg
mov
mov
inc
sub
push
sbb
pusha
stc
sbb
fwait
clc
fbld
inc
adc
xor
push
dec
mov
out
cli
les
add
adcb
outsb
jb
xor
cmpsl
dec
jg
sahf
sbb
test
ljmp
mov
jnp
push
ss
iret
pmuludq
inc
insb
lcall
mov
add
pop
fwait
xlat
sbb
fcoml
into
xor
jge
lahf
ss
adc
push
mov
das
pushf
cltd
add
data16
xchg
js
xor
cltd
stos
jg
aas
inc
dec
scas
jno
mov
pop
in
push
xor
fsub
pop
insl
popf
cmpsb
ja
inc
in
mov
mov
adc
xor
pop
sbb
fnsave
imul
jmp
inc
push
mov
mov
push
mov
insl
adc
repnz
jns
in
mov
scas
bound
js
xchg
lock
adc
push
cmp
adc
push
call
scas
jo
call
repnz
ljmp
insl
sti
or
ja
popf
add
repnz
mov
int3
adc
dec
ljmp
shlb
push
jmp
jg
xor
xchg
aas
in
mov
add
fnstcw
repz
lock
fimull
decb
or
into
add
mov
lret
loop
je
inc
mov
repz
popa
ss
sub
out
or
repz
fsubr
dec
inc
sub
adc
hlt
jp
incl
sbb
mov
leave
and
popf
xchg
xorl
add
xor
jbe
sub
inc
adc
fsubrs
pop
popf
js
cmp
sub
mov
sub
dec
lret
cmp
push
ja
pop
xor
into
push
in
ret
enter
mov
xchg
mov
mov
icebp
add
lret
fsubl
notl
shlb
add
jo
stos
jbe
pushf
xchg
imull
lcall
adc
pop
fistpl
stc
cmp
cld
inc
sbb
movsb
pop
movsl
mov
out
test
sbb
mov
xor
test
pushf
mov
dec
adc
jecxz
movsb
jno
jo
adc
and
adc
pop
cmc
xchg
or
add
cmp
leave
je
xchg
xchg
xor
ss
scas
out
movsb
add
mov
aam
cli
inc
mov
test
in
cmpsl
push
dec
push
sub
test
jo
jns
adc
aaa
in
iret
ret
sbb
mov
or
stc
pop
or
pop
xor
and
jne
mov
in
fadds
mov
pop
jbe
cld
aam
cld
sti
push
in
sbb
mov
fwait
femms
in
cld
push
out
cmpsl
sbb
pop
and
jo
cld
leave
shrl
add
sarl
sbb
popf
push
adc
test
push
xor
mov
daa
mov
pop
or
and
lds
lcall
stc
cmpsl
cmp
jge
test
and
into
sbb
ret
mov
pop
scas
xchg
dec
jae
xor
adc
addr16
mov
sbb
jle
mov
fisttpl
insb
mov
push
sub
pause
test
ljmp
movsb
ret
mov
pop
and
jle
int
clc
and
mov
pop
fwait
inc
mov
sahf
and
test
outsl
ss
jns
pop
lret
mov
cld
push
cmp
iret
mov
mov
mov
sub
sbb
mov
adc
sbb
cmp
sub
mov
out
pop
add
call
or
in
sub
xchg
call
push
ret
dec
cmpsl
hlt
out
mov
cmpsl
bound
in
jnp
xchg
les
test
outsl
cmp
daa
insb
adc
add
and
jae
pushl
out
xchg
nop
cs
rcl
jne
lret
pop
not
outsl
sub
adc
dec
adc
loopne
vpsubw
mov
dec
rolb
jl
mov
pop
imul
scas
push
push
cmpsb
xchg
sti
fbld
pop
test
ss
cmp
setnp
push
xchg
sbbl
icebp
clc
movsl
or
pop
popa
add
push
cli
cmpl
mov
lret
inc
add
fs
stc
aad
and
add
fcompl
or
mov
adc
pushf
addr16
aas
and
jns
push
outsb
gs
mov
call
xchg
pop
sub
and
mov
jg
clc
popa
mov
mov
mov
fadd
inc
lods
incl
faddl
outsl
out
dec
or
inc
or
jg
mov
pop
addl
iret
sahf
inc
sbb
and
and
cmp
lret
add
mov
jns
popf
pop
add
enter
xor
jno
out
ljmpw
lods
repnz
mov
cmp
inc
cmp
cld
push
cmpsb
dec
push
sbb
jge
test
add
xchg
mov
fstpl
popf
test
in
mov
sub
out
xor
popa
xor
imul
es
push
hlt
pop
int3
incb
pop
jmp
lret
fbstp
xchg
ret
testl
aad
out
lods
lock
mov
xchg
sti
flds
cmp
aad
bound
jmp
xorl
icebp
aaa
addr16
xchg
jbe
adc
ljmp
mov
jno
dec
inc
mov
pop
sbb
fnstenv
or
pushf
aad
add
push
cmp
jmp
xchg
or
pop
add
cltd
cmpsb
lock
es
cmp
mov
daa
lahf
cmpsl
add
push
pusha
clc
xchg
jmp
lret
xchg
lds
sbbl
pop
adc
pop
scas
std
outsb
inc
outsl
mov
out
rclb
mov
jae
rorb
das
and
or
pop
leave
out
dec
dec
shrl
mov
ja,pn
push
stc
test
mov
dec
popf
xchg
sbb
jns
pop
das
adc
dec
popf
fs
in
xchg
jge
dec
xor
add
jae
testb
xor
aam
lds
clc
sbb
adc
lods
mov
xor
fisubs
fmuls
aas
es
xor
test
or
lods
arpl
or
leave
mov
les
mov
scas
sub
xor
jge
daa
repnz
fcmovne
or
sbb
mov
es
pop
stc
negl
or
dec
loop
jle
mov
das
fs
sub
mov
xchg
lock
out
and
and
lods
mov
adcb
shrl
xor
push
test
repnz
cmp
xor
push
lret
push
xchg
mov
leave
inc
add
loopne
iret
out
pop
shll
fcoml
sbb
mov
fdivs
outsl
test
push
and
decl
enter
jbe
sub
sbb
xchg
in
push
test
push
sbb
sbb
cs
xchg
inc
mov
push
xor
inc
or
jno
test
sbb
cld
sub
jl
dec
push
mov
movw
sbb
push
cs
dec
cmp
aam
pop
mov
das
cmp
loop
aas
mov
mov
xor
in
rorb
add
jne
cmp
pop
xor
insb
sub
mov
push
inc
add
inc
test
mov
pop
outsl
in
xor
sahf
jbe
cmp
sub
lds
jbe
shll
inc
mov
push
popf
sbb
test
ret
mov
jp
jbe
fisubrs
loopne
std
and
sbb
dec
sbb
call
sti
jmp
dec
jp
lods
into
mov
adc
sbb
sub
loope
mov
vmovaps
mov
push
cmp
fistpll
jge
mov
lods
je
lds
add
loopne
lret
lea
adc
jne
pop
xchg
sub
aam
ds
jl
js
inc
mov
dec
push
mov
adc
mov
mov
lods
mov
or
lret
movsb
aaa
lret
dec
cmp
dec
xchg
and
xor
mov
mov
add
inc
dec
and
add
add
sbb
pushf
es
pop
dec
push
cltd
sahf
push
mov
lea
repz
icebp
pusha
adc
cmp
incl
ja
movsl
repnz
pop
xor
or
mov
xchg
es
push
xchg
push
mov
popa
pop
iret
test
push
movsl
sbb
cwtl
test
shl
push
mov
subl
aam
jae
and
nop
push
fistpl
mov
push
lahf
add
inc
dec
inc
mov
stos
jns
fwait
mov
fwait
inc
adc
rol
jg
gs
dec
stos
lds
mov
ret
ljmp
leave
bnd
pmulhuw
mov
rcll
push
ret
arpl
test
cmpsb
fildll
jp
int
pop
mov
cmp
or
mov
sbb
add
xor
push
push
imul
ret
xchg
mov
stc
sub
dec
push
cs
daa
mov
aam
pop
sub
or
jbe
dec
cmpl
bound
push
dec
and
out
mov
out
sbb
xchg
cmp
jnp
jo
pop
mov
xchg
pop
inc
cmp
mov
push
iret
mov
scas
call
jae
dec
repz
xchg
dec
jmp
jle
into
imul
xor
addr16
cmp
dec
mov
jecxz
enter
sar
dec
add
jo
add
pop
imul
dec
jmp
pushf
push
xchg
dec
sbb
jnp
out
fmull
and
or
fcmovb
xchg
cmp
or
xchg
je
loopne
push
mov
lods
sub
fxch
jl
cmpsl
hlt
inc
cld
sete
or
aam
mov
jmp
lret
lea
outsb
ret
gs
sub
popf
icebp
out
push
adc
mov
inc
push
test
outsl
mov
mov
arpl
or
out
mov
or
mov
enter
insb
add
or
sahf
loopne
iret
sub
push
cmovno
push
incl
cli
mov
lock
inc
scas
rolb
jl
mov
lcall
xchg
push
pop
sub
pop
test
out
hlt
push
enter
sub
out
sub
mov
test
je
jb
sahf
rdmsr
test
xor
xorl
das
and
pop
mov
jne
subl
int
push
aad
in
popf
gs
pop
int3
xor
pop
repz
add
addb
jb
pop
repz
cmp
mov
xor
inc
jne
subl
js
pop
mov
dec
fsub
les
lock
dec
jp
and
adc
aad
adc
or
cmc
xchg
leave
pop
test
loope
cs
or
divl
hlt
mov
imul
mov
push
pop
stc
into
clc
push
push
iret
mov
les
mov
push
xlat
lcall
mov
ret
cmp
push
push
sub
scas
in
pop
jns
cmp
xor
sbb
jo
int3
mov
xor
fdivl
fs
lods
cmp
xchg
repnz
roll
std
repz
add
xor
insb
cmp
mov
xchg
test
fsubl
lods
lds
cmpsb
sub
jbe
insl
lret
bound
mov
xchg
inc
inc
jmp
das
dec
add
mov
clc
dec
xchg
aam
fbstp
into
movlhps
mov
xor
dec
push
pushf
lcall
test
rcll
sbb
jecxz
mov
lahf
sub
cld
repz
dec
lahf
or
sbb
mov
push
mov
out
and
cli
rolw
arpl
adc
inc
in
ret
adc
cmc
cmp
aad
adc
and
pop
arpl
jbe,pn
sarb
inc
roll
jb
enter
pop
or
jmp
shlb
xor
pop
jno
sahf
inc
into
shl
stos
mov
xor
push
lods
cmpsl
mov
pop
ret
pusha
repnz
xor
sub
test
out
in
jne
into
notl
cmp
inc
leave
icebp
js
imul
je
sub
imul
sarl
dec
shrl
mov
inc
jmp
xor
cmc
pusha
rorl
sub
pop
mov
das
mov
lcall
movsb
stos
xchg
mov
ret
mov
clc
inc
and
or
gs
sub
jle
mov
pop
or
dec
cmp
jae
pop
shrb
mov
mov
and
sbb
shl
xchg
dec
sub
or
leave
pop
ss
js
push
push
sub
jae
and
mov
test
iret
in
inc
mov
divl
movsb
xchg
jbe
push
sbb
mov
adc
sub
test
shlb
or
xchg
aas
pusha
sahf
jl
sbb
stos
adc
xor
imul
les
inc
int3
shlb
push
mov
mov
push
fldl
in
xchg
cld
stos
jns
lods
icebp
push
js
inc
aam
inc
adc
int
adc
add
repz
xchg
pop
clc
movsl
inc
fwait
into
jle
xor
fwait
xchg
loop
jecxz
mov
rcrb
xchg
inc
and
outsl
jp
cli
cmpsb
dec
push
cld
aas
inc
lahf
inc
and
jns
sti
jp
aad
int
pop
addr16
daa
jno
dec
adc
mov
pop
push
xor
inc
out
xchg
lods
or
lret
jmp
ret
jb
into
cmp
mov
aaa
pop
aas
pusha
lcall
gs
shrb
adc
inc
lods
mov
in
mov
insb
cmp
lea
jge
stos
int
daa
aas
das
sbb
inc
rclb
jecxz
cmp
mov
out
jg
push
in
movsb
adc
nop
sysexit
mov
xchg
adc
dec
ret
jle
into
or
aas
mov
pop
paddb
sbb
pop
neg
mul
enter
call
std
dec
cmp
incb
mov
enter
data16
push
mov
mov
bsf
pop
ret
push
popa
movntps
cmp
push
or
pop
sahf
add
xchg
jmp
sti
int3
mov
bound
xor
imul
andb
xchg
cmp
ret
movsb
adc
adc
lods
lods
movsl
mov
lret
std
jnp
je
push
pop
inc
pop
lcall
adc
jge
pushf
or
data16
push
fildl
in
jne
push
rcrl
fisubl
pop
pop
cmp
call
jg
loopne
add
push
mov
mov
lahf
pop
jne
pop
mov
jp
lds
mov
mov
notb
sarl
inc
lods
xlat
fs
dec
cwtl
int3
or
dec
mov
stos
jmp
jne
or
and
xchg
and
ds
call
mov
dec
cwtl
push
dec
mov
sbb
fisttpll
add
push
pop
cltd
cmpsb
shll
mov
scas
and
dec
gs
ds
imul
in
inc
xchg
dec
dec
sbb
jge
popa
inc
jl
sbb
gs
in
pushf
adc
mov
or
ljmp
cmp
repnz
dec
add
frstor
lret
dec
xor
sub
pop
mov
sub
adc
xor
out
and
cmp
adc
out
int
add
aas
cmpsl
addr16
jmp
vmovdqu
out
mov
sbb
int
inc
jnp
push
mov
lcall
cmp
xor
js
xchg
push
pop
out
pusha
aam
fbstp
sub
cltd
and
repnz
fisubl
scas
nop
sub
jnp
cld
cmc
shr
ficomps
xchg
sbb
jle
leave
fcmove
int
mov
pop
cmp
stc
orl
push
adc
fs
mov
cmp
adc
sbb
sub
std
sbb
cwtl
inc
call
daa
lea
pop
xor
adcb
fs
in
stos
fdivs
add
adc
jle
loop
out
lods
dec
pop
cmp
icebp
rcrb
mov
jl
lret
or
scas
enter
push
dec
sub
mov
pop
mov
adc
sbb
out
or
sbb
insb
sub
xchg
cmp
das
aaa
sbb
shlb
xlat
lret
std
sbb
and
ret
out
mov
add
jmp
pop
fcmove
nop
cld
push
push
cmovae
arpl
bound
cmpsb
imul
popf
popf
das
push
js
inc
mov
jmp
sbb
and
sbb
adc
or
mov
ljmp
iret
es
push
scas
add
call
clc
rolb
jb
pop
in
xor
enter
add
jl
pop
rorl
fbstp
dec
inc
aad
test
mov
rcll
mov
mov
xchg
call
mov
adc
sbb
pusha
sbb
add
jecxz
leave
push
mov
in
ja
stc
divl
xchg
mov
push
aaa
gs
mov
and
inc
push
dec
orl
dec
ds
call
ljmp
sbb
sbb
into
gs
push
popa
dec
test
fistpl
test
xor
outsl
lret
insl
test
fisubs
cmp
out
jg
js
adc
lcall
out
mov
faddl
test
inc
mov
add
icebp
jb
push
mov
mov
mov
cmp
stc
push
sbb
mov
rorl
xchg
nop
sub
outsl
in
adcl
nop
cld
xor
in
sbb
cmp
sbb
mov
mov
rclb
clc
fcompl
cwtl
dec
loop
jle
inc
arpl
enter
cmp
xor
aas
sbbb
outsb
xor
lret
ret
add
mov
inc
sub
sub
pop
jnp
sub
popa
lret
mov
fwait
jp
nop
aad
fwait
int3
mov
mov
pop
jle
sbb
dec
jmpw
push
fwait
data16
sbb
and
push
jns
out
xchg
sub
lret
movsl
subb
or
outsl
in
xchg
lock
lahf
add
iret
inc
push
adc
bound
and
imul
xor
es
jbe
or
dec
fsubrs
pop
pop
sub
rcrb
aam
inc
jno
jge
sbb
sarb
outsb
loop
sub
add
insl
mov
dec
sub
lret
jns
sub
fnstsw
nop
ret
mov
mov
jbe
dec
jno
pop
cmp
jge
pop
xchg
xchg
lahf
xstore-rng
cmpsl
xchg
mov
add
dec
xor
or
daa
aaa
shl
lock
mov
pop
stos
out
inc
in
shrl
imull
cmp
pop
push
mov
ret
sub
in
insb
mov
xchg
push
rcll
or
inc
or
and
add
das
sahf
cmp
mov
jp
daa
js
ss
pop
icebp
adc
pusha
add
cld
add
imul
sarb
mov
test
mov
adc
jmp
daa
xchg
jnp
dec
sub
xor
add
sti
imul
icebp
add
jg
orb
je
push
mov
cwtl
xor
sbbl
bswap
jg
in
out
push
insb
or
cs
arpl
mov
repz
ret
shrl
adc
jmp
fsubrl
clc
mov
ss
mov
test
push
sbb
inc
jle
push
xor
or
jo
or
insb
sub
test
movsb
add
cld
into
in
sahf
sbb
xchg
cmp
pop
js
testb
or
mov
cmp
and
sbb
in
aam
adc
and
inc
in
adcl
into
clc
mov
dec
ret
add
mov
pop
in
insb
xchg
fst
sbb
inc
cmp
mov
adc
mov
jl
fwait
adc
xor
fnstcw
test
shlb
data16
fisubs
mov
jbe
out
fs
pop
out
push
mov
cmp
outsl
andl
mov
pop
cmp
pusha
pop
push
jo
imulb
incl
and
push
ss
or
pusha
sbb
mov
dec
pusha
rcr
imul
into
mov
orl
enter
movsl
aaa
and
icebp
dec
mov
inc
cs
std
mov
sahf
mov
lods
in
mov
inc
inc
add
sbb
add
inc
ret
mov
cli
and
sti
inc
imul
fbstp
sarb
pop
pop
lods
mov
adc
push
jle
mov
mov
test
cli
mov
stos
iret
cwtl
inc
jbe
pusha
mov
shl
and
jp
dec
shll
mov
scas
cmp
addr16
mov
shll
out
pop
in
xor
testb
sti
inc
xor
sub
inc
add
ret
int3
xor
sub
adc
push
or
insl
ror
bound
bound
test
jb
cld
cmp
cld
and
sub
jnp
push
sub
addr16
and
aad
iret
iret
sti
cmp
fwait
shll
push
in
cs
in
enter
imul
fwait
and
jecxz
sarl
jb
dec
mov
outsb
in
adc
ret
aaa
jb
xchg
fistps
sbb
cmp
dec
scas
inc
adc
xchg
mov
cmpsb
shr
into
sarb
cmc
fcomip
jb
sbb
lods
mov
in
sti
repnz
xor
sbb
pop
fbstp
and
stos
and
ljmp
scas
xchg
mov
jg
sub
push
popa
inc
or
xor
sub
adc
cli
pop
cwtl
push
or
lret
push
xorl
enter
aad
mov
fs
or
hlt
scas
cld
in
mov
std
push
push
ljmp
cmp
lods
jge
pop
mov
mov
stc
dec
inc
xchg
inc
mov
pop
adc
lea
add
sub
pop
pop
and
push
lods
and
xor
insl
push
xor
movsb
adc
pop
pop
clc
cmp
inc
fcmovne
icebp
adc
mov
xlat
fmuls
test
mov
push
in
outsb
cld
ret
mov
cld
insl
cld
xor
stc
loop
rclb
aad
leave
and
pop
js
imul
mov
push
mov
or
arpl
xchg
movsb
insl
push
dec
icebp
and
cmp
nop
jl
inc
sarl
cmp
scas
cmp
xor
fsubrs
push
adc
pusha
aam
xchg
mov
bnd
aas
inc
scas
les
pop
add
rolb
or
pop
xlat
dec
inc
cld
jb
fsubrl
xlat
mov
pop
lcall
cwtl
icebp
mov
or
jb
in
js
ljmp
pop
roll
aam
scas
es
jne
dec
xor
loopne
mov
jmp
pop
les
pop
pop
je,pn
mov
arpl
or
std
outsb
scas
inc
addr16
pop
and
incl
lods
jmp
js
sbb
in
pop
nop
gs
xlat
out
lods
arpl
scas
in
in
adc
scas
mov
movaps
ljmp
cmp
in
addb
or
cmp
push
fsts
scas
out
or
loop
dec
jge
xchg
jmp
aam
aaa
and
lods
xchg
mov
adc
dec
test
gs
test
mov
cmp
pop
jne
lea
jb
xchg
incl
sub
mov
lret
dec
jmp
movsb
push
daa
js
push
jg
and
dec
inc
push
popf
je
ret
xor
push
dec
push
lret
icebp
mov
push
into
stc
pop
cmp
mov
push
movsb
xchg
lcall
mov
lcall
mov
fmulp
and
sarl
insb
push
push
mov
sub
cmpsl
xor
dec
hlt
xchg
popf
lret
out
insb
dec
sbb
push
mov
mov
inc
cmp
pop
ljmp
cmp
pop
ja
sti
pop
das
cmpsb
xchg
sbb
cmp
lods
lds
movd
inc
mov
mov
xchg
pop
inc
insl
sbb
test
data16
addl
mov
cmp
sbb
mov
adc
xchg
xchg
cmc
jbe
ds
test
jecxz
push
mov
in
add
in
pop
lahf
cmp
mov
jo
push
ljmp
icebp
cmc
jmp
xor
test
sub
iret
aaa
and
imul
mov
rcrb
in
dec
or
sub
dec
lahf
mov
cmp
jp
scas
jbe
ret
leave
sub
loopne
into
add
and
mov
sbb
outsl
ljmp
dec
aad
out
add
mov
cld
scas
push
or
loopne
sbb
ror
scas
test
test
pusha
xchg
sarl
jbe
and
xchg
nop
add
stc
fisubrl
mov
stos
les
mov
adc
inc
mov
xchg
mov
sbb
sbbl
xorl
xchg
pop
or
arpl
mov
xchg
or
popa
mov
mov
mov
test
mov
jle
out
std
mov
pop
or
push
sub
inc
xchg
mov
push
addb
pop
ret
fistpll
inc
mov
sti
cmpsl
out
test
push
outsb
push
mov
xor
and
mov
mov
je
call
mov
mov
or
push
jecxz
push
sbb
inc
push
es
jnp
xor
xor
or
or
sbb
in
test
pop
sbb
sub
inc
lods
clc
cmpsl
enter
cmpsl
sbb
pop
int
inc
pop
mov
xchg
in
mov
sbb
loope
jno
ret
mov
mov
pop
and
and
push
rol
stos
insl
sub
in
cltd
sbb
mov
add
out
lcall
pmaxsw
pusha
outsl
mov
add
mov
mov
dec
add
aaa
in
imul
mov
daa
adc
jle
lods
mov
pop
xor
ret
pop
test
push
test
je
in
mull
mov
lret
call
xchg
mov
cmp
cmp
mov
test
dec
sub
mov
mov
mov
cmc
inc
ret
leave
arpl
jp
insb
shlb
cmp
sbb
and
dec
clc
lods
jne
lock
shlb
dec
shrb
xchg
sarl
pop
mov
cs
in
or
std
leave
fsub
out
pop
xor
cmp
fdivrs
mov
fildll
stc
push
mov
adcl
or
dec
mov
hlt
cmc
and
mov
cmp
dec
cmc
push
sub
adc
mul
fsub
push
out
jle
inc
fucomip
out
popa
fst
pop
jp
js
mov
fnstsw
int3
fidivrs
je
or
sub
outsb
outsl
adc
ss
lock
mov
push
sbb
sub
mov
jnp
cmpsb
sub
lds
cmp
movsb
pop
nop
aaa
aaa
rorb
cmp
movsl
call
imul
std
mov
mov
jge
inc
test
sub
inc
push
inc
add
jbe
repnz
je
push
mov
cmp
fistpll
gs
cmpsl
adc
sub
imul
fisubs
dec
xor
or
mov
pushf
push
jno
rcr
mov
and
sub
call
out
or
mov
pop
repz
sub
push
jns
in
adcl
cmp
aam
movsl
mov
xor
jae
js
sub
movsb
push
ret
or
xchg
pop
mov
mov
add
das
push
jne,pt
pop
stos
jo
jg
jne
cli
ret
xlat
xchg
adc
inc
fstpl
aad
or
les
notb
mov
push
pushf
repnz
xchg
mov
dec
lret
aas
lea
call
lcall
fsubs
xor
push
inc
lea
adc
cmpsl
dec
mov
and
push
jb
sub
ss
mov
sarl
and
cmp
les
ja
iret
int3
pusha
cmp
mov
cmp
push
sub
insb
push
xchg
and
or
das
jle
push
mov
imul
iret
pop
xlat
loopne
movsb
dec
pop
gs
ficoml
sbb
mov
sub
xor
xlat
pop
jle
int
dec
jb
lahf
testb
mov
sub
rcr
cwtl
dec
push
mov
mov
cmp
leave
popa
xor
push
rcrl
sub
jne
iret
pop
sbb
addl
loop
iret
dec
sub
sbb
inc
and
in
mov
adc
cmpsl
xchg
aas
ss
inc
inc
cmc
xor
repz
stc
adcb
fiadds
test
adc
sub
mov
mov
adc
aam
mov
jp
cmp
add
les
sub
loope
add
xchg
mov
outsl
std
xor
push
ljmp
dec
hlt
pop
repnz
and
push
push
inc
sbb
jne
scas
popa
xchg
cwtl
cmc
xor
inc
aam
mov
or
inc
fists
cmpl
insb
push
lods
push
mov
imul
mov
sbb
bound
lock
mov
jmp
push
repz
cltd
mov
xchg
shll
sub
jo
cmpsl
pop
bsr
loopne
pop
mov
mov
fbld
sbb
mov
fsub
mov
popf
cltd
lahf
jl
add
and
mov
or
shrl
ljmp
and
repnz
imul
int3
testl
out
adc
popf
cmp
mov
int
sub
add
cli
out
mov
push
and
mov
mov
lahf
leave
ja
adc
nopl
outsb
push
idivl
or
mov
pop
repnz
lea
xchg
jnp
rcrl
xor
fnstenv
sbb
rol
nop
and
bound
adc
clc
cmp
mov
movsl
push
adc
ret
xor
sarb
adc
mov
pop
out
fdivl
or
nop
test
aad
aas
hlt
outsl
xchg
int3
mov
ljmp
popf
lods
jns
loopne
adc
sub
rolb
jp
ja
std
sub
mov
push
xor
mov
pop
lea
push
or
je
xchg
repnz
pop
jle
add
dec
iret
test
or
cs
or
ja
sub
sbb
sbbl
js,pn
xchg
push
dec
jmp
pop
cmp
xchg
cld
fisubl
addb
mov
mov
clc
xchg
call
cmp
movsl
fbstp
testb
and
push
lea
xor
sub
lret
aad
pop
inc
jg
out
lret
or
jmpw
iret
dec
push
adc
and
inc
jae
add
outsl
inc
movsb
dec
test
shlb
mov
pop
leave
adc
in
inc
cmp
or
xor
jae
sbb
pop
mov
lea
out
push
and
imul
jno
push
adc
arpl
dec
push
xchg
pop
fnstenv
int
lret
int
or
daa
mov
sub
mov
clc
and
enter
pushf
mov
sti
inc
mov
mov
daa
dec
stos
arpl
jp
test
into
cld
mov
or
pop
mov
rolb
fs
aad
xchg
mov
lret
push
fdivrl
cltd
or
loopne
cmpsl
add
sub
adc
jb
mov
out
pop
dec
sbb
cmp
jmp
cmc
add
sarl
and
cmp
leave
cs
aas
rcl
es
jl
pop
mov
pushf
dec
shll
sub
movsl
add
adc
jns
into
pop
repnz
inc
xor
mov
repnz
fs
aas
cmp
repz
and
ret
movb
sarb
pop
mov
aad
jae
add
fisubl
mov
jge
idiv
jno
jl
popf
mov
sbb
repnz
sub
fs
sbb
fisubl
mov
push
rclb
jmp
aas
mull
in
lock
push
adc
std
push
testb
aad
jbe
lock
cld
cltd
in
push
int3
xchg
mov
shld
inc
ljmp
sbb
jb
mov
stos
mov
testl
idivl
pop
ss
adc
xor
xchg
outsl
int3
lcall
dec
enter
lods
sbb
aad
cmpsl
hlt
cmp
cmp
xchg
sub
daa
repz
mov
mov
mov
in
xchg
mov
cmp
out
js
les
jbe
mov
ds
mov
test
mov
jecxz
mov
mov
mov
push
add
mov
clc
in
loopne
shl
jno
add
jle
je
add
sub
jle
mov
cmp
dec
iret
jp
in
inc
xor
xchg
or
cmpsl
xchg
sbb
aad
enter
pop
setnp
sbb
fs
loopne
out
mov
jno
adc
xchg
stos
cmp
pop
test
push
ja
sub
jnp
xchg
adc
pop
mov
mov
xor
xchg
repz
xor
mov
ret
adc
dec
pop
cmp
and
push
sub
jae
xchg
int
outsl
mov
popl
jae
scas
xor
and
add
sub
data16
pop
sub
jg,pn
dec
xchg
mov
xor
mov
inc
mov
iret
push
xor
sbb
cmpsb
scas
add
jbe
sbb
jg
push
mov
xor
sbb
xchg
sub
cltd
sbb
add
clc
xor
pop
lock
cmpb
aaa
push
sbb
push
std
xchg
ret
push
push
mov
add
ficomps
inc
mov
or
and
int
adc
jecxz
movsl
push
push
leave
sbb
mov
inc
mov
xchg
nop
or
and
or
push
mov
cmp
dec
inc
add
or
mov
lods
cmp
jle
push
insb
cmp
data16
in
shlb
data16
imul
sub
enter
jl
rorb
iret
imul
cmc
sbb
jecxz
orb
stos
push
or
mov
add
add
cmp
cltd
xchg
insb
neg
cmp
inc
adc
mov
gs
mov
lods
leave
mov
mov
mov
nop
ja
add
cltd
jbe
inc
dec
jge
sbb
push
in
mov
ret
enter
jle
add
jle
xor
out
xlat
leave
and
repz
pop
fldenv
inc
jp
icebp
dec
lock
fs
pop
fdivr
test
sbb
mov
rcrl
insb
loopne
insl
or
fnsave
sbb
and
push
sbb
fmull
jns
out
jae
or
dec
jle
push
repnz
and
jns
stos
pusha
dec
adc
push
das
dec
iret
or
inc
mov
and
jb
xchg
hlt
shrl
fwait
and
pusha
sbb
ljmp
enter
inc
inc
rclb
fwait
inc
aam
jge
and
dec
ss
mov
popa
add
jge,pt
inc
mov
mov
and
adc
push
cs
gs
cmp
int3
enter
mov
call
sti
pop
rcll
adc
or
jnp
nop
lahf
push
int3
outsb
testl
lret
cmp
cmp
pop
out
ja
jg
das
lds
lds
std
push
cs
cld
shll
jb
out
popf
fnsave
mov
ja
mov
sarl
aaa
pop
dec
fsubrs
inc
and
enter
pop
test
pop
push
sbb
pop
xor
fiadds
adc
jmp
dec
jns
insb
mov
aaa
jb
mov
hlt
xchg
jno
mov
sub
add
push
std
or
test
adc
mov
cmp
dec
es
pop
mov
test
sub
adc
dec
push
dec
in
jg
imul
das
loope
fiadds
ja
jae
or
shrb
mov
add
add
stos
mov
jmp
pop
xchg
dec
sbb
cmp
add
mov
inc
das
inc
lds
lock
sub
enter
cwtl
aam
adc
push
xchg
aaa
je
push
stos
mov
outsl
adc
rclb
and
inc
mov
insb
mov
mov
les
xor
data16
fwait
clc
push
mov
adc
or
xor
jo
xchg
xor
lahf
and
mov
mov
fwait
mov
sbb
add
lock
jp
je
cmp
push
subl
pop
jbe
scas
dec
add
adc
pop
sbb
ficoms
jb
dec
sbb
jge
pop
jb
xor
xor
sub
jp
pop
pusha
fisttps
call
clc
or
adc
lock
push
pusha
cmp
push
into
add
add
mov
addb
mov
popl
shrb
xor
testb
fwait
xchg
dec
xchg
notb
inc
sub
pusha
rol
popf
fiadds
push
adc
test
cmpsb
into
push
sti
mov
inc
dec
lds
push
popa
lret
lret
js
push
rorl
jecxz
rclb
sbb
push
or
pushl
adc
in
mov
mov
imul
leave
mov
xlat
cli
jp
clc
pop
popf
ret
repnz
or
and
scas
jbe
jno
leave
ja
xor
mov
hlt
and
fcomp
push
scas
cmp
test
push
loop
int
push
xchg
jle
jl
dec
or
pop
sbbl
popa
xor
es
jae
mov
dec
aaa
xor
sbb
sbb
pop
into
mov
jmp
cld
mov
adc
and
mov
iret
xor
inc
and
inc
mov
push
out
mov
jg
inc
inc
push
addb
loopne
jmp
movsl
outsb
mov
pop
movsb
lret
or
pop
xchg
push
clc
loop
adc
rcll
cld
push
fdivrs
push
imul
mov
fistpll
das
push
test
ljmp
arpl
dec
mov
pop
mov
add
mov
jecxz,pt
popf
lds
fidivs
cmp
lea
pop
in
mov
orl
int
pop
outsl
dec
dec
call
les
jmp
sub
push
mov
notb
mov
xchg
aad
push
mov
add
sub
pop
dec
and
xchg
push
adc
push
lea
push
cmp
xchg
dec
or
xor
ret
aas
xchg
sub
lods
sub
out
addr16
and
repz
cmp
xchg
imul
mov
mov
out
inc
shlb
jmp
mov
shlb
in
and
xor
nop
fdivrs
xor
xchg
cwtl
push
inc
in
pop
test
push
jmp
mov
call
xchg
jg
inc
movsb
nop
push
pop
jnp
outsl
lret
xor
xor
adc
cwtl
lcall
and
mov
dec
xchg
or
outsl
decl
adcb
push
xorl
adc
iret
dec
xchg
mov
cmp
cmp
add
mov
scas
xchg
rcrl
shl
mov
mov
out
mov
in
out
ljmp
add
push
clc
aad
and
addr16
inc
add
test
xor
xor
lods
or
int3
cmp
pushf
cli
cmpsl
jecxz
push
xchg
jge
sbb
lcall
imul
xor
pop
arpl
pop
jnp
lods
fcoms
lea
fists
into
jmp
add
subl
movsb
ret
movsl
cmp
jno,pn
popl
adc
pop
popf
out
repnz
mov
mov
fwait
sub
int3
mov
mov
jnp
sbb
and
clc
in
inc
sbb
fbstp
fisttpll
in
push
ljmp
jmp
cs
mov
push
repnz
sbb
pop
filds
dec
movsl
and
inc
jns
adc
mov
jae
pop
dec
or
jo
ds
shufps
aaa
fnsave
out
cmp
cmpsb
mov
aad
adc
xchg
xor
js
or
push
jno
and
jp
inc
sub
incl
les
sub
pop
lods
jge
mov
sbb
push
mov
pop
or
push
xchg
mov
adc
jp
mov
and
add
gs
jle
jno
sub
jo,pn
pusha
cmp
push
sub
jecxz
xchg
jo
adc
inc
sti
incb
dec
sub
vmwrite
xchg
mov
dec
dec
mov
mov
mov
bound
fwait
or
jl
sbb
xchg
dec
andl
xor
inc
clc
mov
loope
xchg
mov
icebp
xor
movsb
adc
push
xchg
mov
bound
data16
testl
mov
push
sbb
gs
gs
mov
push
push
push
inc
pop
mov
ss
scas
adc
mov
pop
mov
cli
mov
imul
sbb
cs
pop
in
jmp
and
stos
es
adc
sbb
sbb
or
repz
mov
inc
xchg
cld
xor
sub
ret
push
test
fs
popa
aam
cld
repz
cltd
fwait
jecxz
aaa
popa
cmp
dec
sub
sub
hlt
mov
in
test
out
enter
adc
gs
test
sbb
push
iret
jne
sub
sub
aad
pusha
dec
mov
sti
fadd
andb
cmc
xor
ret
cmp
mov
xchg
jecxz
insb
insl
mov
mov
mov
mov
stos
cld
es
sub
push
jno
imul
cmp
cli
jg
pop
inc
faddl
mov
and
sbb
popa
push
fld
pop
iret
mov
adc
add
lcall
jb
jecxz
repnz
stos
add
test
in
xor
adc
mov
shlb
xchg
leave
and
iret
mov
stc
call
inc
fcomi
adc
or
jl
jmp
dec
scas
sbbl
ret
rclb
cmc
jl
scas
cmp
cmpsb
pop
add
ret
das
rcrb
add
sub
mov
repnz
pushf
sbb
iret
adc
bound
icebp
cltd
mov
inc
xchg
fwait
mov
sub
xchg
jnp
sti
mov
mov
push
mov
mov
add
push
cltd
lock
mov
pop
xchg
in
imul
xchg
flds
lahf
lret
pushf
mov
mov
int3
cwtl
pusha
cmpsl
lahf
dec
pop
xchg
adc
adc
sbb
movsb
icebp
mov
cmpsl
jb
shlb
or
or
sbb
sbb
mov
test
test
and
cmpsl
rolb
ja
fmulp
aas
xchg
xchg
fstpt
dec
rolb
outsl
mov
and
xchg
cli
mov
dec
shrb
xor
mov
adc
sbb
pusha
add
inc
movl
test
iret
mov
mov
das
jmp
push
test
mov
out
inc
xchg
mov
les
mov
cld
cmp
stos
push
cmp
pop
lea
sub
mov
shll
repz
lret
fbstp
imul
jne
ja
push
int
dec
rcll
jo
lcall
mov
mov
stc
sub
movl
in
pop
ja
inc
and
mov
inc
sbb
xor
xor
dec
sti
and
in
mov
bound
pop
push
sbb
lret
jns
xchg
inc
or
cltd
int3
imull
adc
out
or
push
out
por
std
or
xor
ja
push
or
loope
mov
xor
dec
push
outsb
in
sarb
mov
and
or
cmpsl
imul
jne
xor
fisttps
repnz
sti
push
mov
rcr
loop
sbbl
inc
push
dec
cltd
inc
xchg
dec
les
cmp
add
mov
int3
repz
or
inc
loope
xor
clc
test
inc
sub
inc
xor
dec
dec
sahf
push
incl
cmp
sarl
xor
pop
out
sarb
ja,pn
leave
ss
xchg
add
or
subb
ds
out
pushf
out
fs
sub
les
mov
enter
jmp
jbe
fwait
sub
jb
mov
mov
push
cmpsl
mov
and
in
push
daa
xlat
pop
push
stos
dec
shlb
pushl
inc
rolb
or
or
cs
sub
pushf
jle
shll
andl
repnz
or
pop
sar
fstpl
pop
sub
pop
clc
lahf
ja
and
adc
stos
mov
iret
or
lahf
pop
push
stos
jle
lds
cmpsl
ds
pop
repnz
inc
xchg
push
mov
aad
lock
or
repz
int
xchg
inc
mov
pop
pop
les
or
or
pop
enter
in
in
lret
xchg
pop
push
or
fistpll
addr16
jns
jmp
mov
inc
and
divl
in
aaa
rorl
cmpsb
and
cmp
in
mov
stc
sbb
stc
clc
cwtl
mov
and
xchg
xor
jge
jg
cmp
outsl
imul
inc
fcoml
sbb
cmp
test
cmpsl
jno
pop
xchg
push
mov
jns
bound
ret
or
sub
sub
mov
jo
sub
or
rorl
push
out
outsb
cmpb
adc
leave
mov
enter
xlat
ret
xor
aas
mov
cmp
xor
movsb
xor
sub
out
nop
dec
jg
iret
daa
add
outsb
sub
inc
adc
jae
loope
sahf
cltd
lret
jle
icebp
push
cs
add
mov
mov
mov
out
jne
mov
cmp
ja
jl
cmp
add
mov
jne
das
xchg
cmp
shll
test
in
movsl
mov
push
inc
mov
andl
ljmp
push
movsb
fidivrs
icebp
lds
or
or
aad
adc
mov
idiv
sub
sbb
sub
mov
cmp
dec
ret
lahf
sar
adcb
mov
adc
cmp
xor
xor
sub
mov
mov
movsl
xor
lahf
movsb
mov
jo
addb
sti
in
push
sbb
cli
mov
xor
push
mov
bound
adc
inc
jo
jno
and
mov
sub
aas
dec
fs
addr16
sti
add
push
and
aaa
xchg
fnstcw
pop
stos
jns
sbb
and
fwait
mov
stos
popa
iret
xchg
jl
push
add
js
sub
repnz
cmc
movsl
cwtl
push
inc
jno
lock
or
sahf
mov
jbe
mov
fsubl
fstl
pop
xchg
cmpsb
repnz
mov
mov
and
in
jle
cmc
aad
data16
push
cmp
add
rolb
cmpl
cmp
cmp
pop
test
push
mov
test
pop
jnp
addr16
mov
test
in
sbb
test
dec
pop
popa
insb
pushf
mov
stos
jne
xor
and
into
jns
mov
fistpl
les
data16
xchg
sub
jecxz
xor
ret
call
and
adc
or
push
ret
xchg
jae
shlb
es
ret
inc
cmp
jmp
daa
decb
xchg
mov
in
xchg
xor
int3
xchg
mulb
ficoml
daa
aam
sbb
or
outsl
loopne
xor
in
iret
pop
and
mov
lods
xchg
insl
jb
mov
cld
loopne
sbb
lcall
xor
es
rcl
ds
mov
jno
pop
scas
scas
adc
pop
mov
xorl
mov
lret
sarb
mov
out
add
mov
inc
jmp
dec
jo
or
push
ss
fwait
push
adc
jge
adc
inc
loop
je
push
add
inc
lret
imul
add
lods
pop
imul
push
pushf
mov
daa
mov
mov
sub
enter
std
aam
sbb
nop
dec
adc
jo
push
cmp
and
pop
sahf
sbb
or
adc
mov
xchg
ljmp
mov
pop
sti
mov
sarb
bound
das
xor
cmp
add
push
or
out
sbb
pop
add
mov
int3
pop
lods
rclb
push
fisubrs
jnp
pop
mov
jbe
cli
sub
divl
sbb
idivb
movsb
push
push
mov
mov
jmp
shr
lods
mov
inc
insl
xor
xor
mov
cs
testl
cmp
cli
xor
ss
pop
gs
negl
js
push
imul
xchg
in
lea
mov
xor
cmp
and
add
or
cwtl
dec
js
jo
dec
add
sub
cmc
ljmp
inc
or
fldenv
mov
bound
jp
int3
or
mov
faddl
or
lods
xor
xchg
cmp
int3
pop
inc
das
jbe
ds
mov
push
push
xchg
sti
dec
sub
popf
dec
mov
push
out
pusha
call
ret
and
leave
out
fsubp
into
adc
dec
test
daa
call
call
mov
int3
in
mov
daa
daa
lahf
xchg
adc
add
shlb
test
mov
or
mov
lcall
sbb
and
out
xor
jle
in
pop
adc
cmpsb
cmp
rcrl
xlat
or
gs
addl
imul
sbb
fincstp
inc
psubd
cmpsb
scas
jo
mov
pop
mov
out
addr16
cmp
cmc
jnp
mov
push
lods
daa
adc
iret
pushf
test
jb
mov
sbb
xor
sbb
push
inc
ja
push
insb
cld
adc
out
lret
inc
sub
fs
xor
icebp
pop
mov
or
jo
popa
cmp
xor
mov
xchg
das
jne
aas
mov
or
xchg
push
arpl
addr16
mov
jne
negb
pusha
and
xchg
or
adc
jge
jo
cmp
adc
jno
loope
or
es
jb
xchg
and
or
sbb
fdivs
mov
xor
mov
inc
xor
fcomip
jo
xchg
sub
inc
ret
add
dec
inc
mov
adcb
dec
mov
fdivs
push
das
sub
xchg
add
cmp
adc
mov
mov
je
xor
call
out
xor
test
aas
outsl
and
push
mov
and
dec
int3
clc
mov
je
lds
lahf
dec
js
lret
out
test
mov
std
mov
jns
in
test
in
adc
leave
push
push
in
addr16
rclb
jp
add
adc
jl
and
xchg
aaa
outsl
out
addb
inc
push
add
jg
push
add
cmc
pusha
pop
mov
push
ljmp
or
nop
bound
push
stc
shrl
xor
mov
insb
inc
jae
mov
sarb
int
jge
shll
das
pop
js
sbb
mov
pop
scas
stc
xchg
lea
lret
pop
push
shl
push
xlat
jge
push
leave
cltd
push
dec
repnz
das
mov
std
neg
ljmp
jg
sbb
imul
mov
cmp
push
fimull
add
fcomi
scas
movzwl
push
pop
mov
xchg
shlb
adc
push
mov
sub
inc
and
sub
inc
mov
daa
jmp
cmc
jg
mov
cmp
push
jge
jns
addl
inc
mov
or
scas
xchg
ficoml
xchg
dec
mov
aaa
sbb
xor
daa
jg
incl
roll
dec
sbb
iret
sub
inc
ret
dec
jb
lods
add
push
cltd
cmp
inc
clc
xor
sbb
out
mov
int
jb
push
push
inc
int3
inc
test
shll
out
inc
es
xor
mov
inc
jb
dec
mov
pop
pop
sarl
popa
fidivs
pop
xchg
int3
ja
jb
shlb
in
int3
and
icebp
in
stos
cmp
cld
sub
xor
adc
mov
psllq
fisubrs
xor
xchg
imul
insb
inc
push
fcmovu
dec
stc
iret
xchg
enter
fisttps
inc
lret
pusha
lret
pop
std
test
jnp
iret
das
jne
jp
xchg
jae
stc
jne
movsl
lds
rcll
leave
jmp
or
push
addr16
dec
pop
sti
out
in
adc
jp
and
cwtl
push
mov
dec
out
sbbl
jns
aad
jp
sbb
aas
fidivs
xchg
or
xchg
dec
gs
sbbb
ja
pop
lods
loopne
xorps
cmp
jne
neg
pushl
in
stos
add
lahf
xchg
sub
jbe
cmp
fs
in
xor
pop
inc
cwtl
mov
xor
mov
inc
jp
in
ds
mov
bound
mov
inc
in
in
mov
jno
andl
sarb
dec
xchg
rclb
or
std
xlat
sbb
pop
mov
repz
sahf
mov
aas
lods
inc
xchg
out
roll
push
xor
sbb
mov
and
int3
ficoml
lods
adc
mov
cld
cmp
pop
cmp
or
jo
fists
mov
and
out
out
push
loopne
xchg
jp
outsb
in
jo
mulb
mov
repnz
jecxz
adc
sbb
loop
ds
mov
push
dec
mov
jecxz
ja
adc
jae
jno
lret
jle
pop
xor
mov
pop
lahf
sarl
cmp
and
popa
les
iret
rcll
leave
insb
shlb
insb
dec
jp
roll
add
lds
rcll
add
or
outsl
cwtl
cmc
daa
xchg
add
cld
cld
leave
fsubs
jle
cmp
mov
dec
push
sbb
mov
int3
dec
and
inc
ret
arpl
push
mov
add
jne
sub
int
mov
xlat
lahf
xor
shll
sub
push
scas
in
pop
cltd
push
shll
testl
inc
xor
pop
cmp
imul
int
jg
jmp
es
enter
int
add
cmp
leave
test
mov
jl
pop
test
int3
out
and
das
push
pushf
stos
pop
int
sti
mov
or
cmp
add
xor
adc
xor
xor
sub
xchg
push
or
dec
and
add
ret
lods
sub
repnz
jge
out
pop
fwait
pop
rcr
sbb
pop
mov
cmp
mov
sbb
cmp
jnp
std
decb
jnp
sub
in
stos
xchg
mov
xor
rcrl
jmp
add
push
inc
movsb
inc
imul
imul
hlt
pop
mov
xchg
dec
mov
and
dec
in
fsts
stos
outsb
outsl
sahf
pop
movsl
imul
scas
jne
adc
mov
pop
mov
movsb
repz
mov
sub
pop
push
mov
push
pop
xchg
gs
ret
gs
cmp
mov
sub
sti
lock
xchg
mov
sub
and
jno
inc
arpl
lods
inc
lahf
out
cmp
fcoml
mov
mov
ja
sahf
shrl
cmp
out
push
lods
xchg
jecxz
dec
xorl
cmp
lods
add
repz
dec
rol
push
sbb
push
pop
sbb
push
iret
stos
aas
or
inc
lods
ret
movsl
xchg
ja
subb
fbld
stos
jp
popl
clc
mov
xchg
jbe
dec
dec
lahf
call
in
cmp
cmp
jl
aaa
adc
xchg
pop
mov
in
push
faddl
repnz
aas
jge
jp
test
push
pop
xchg
cmpsl
cmpsl
scas
inc
mov
repz
push
ds
push
pushf
push
or
hlt
mov
inc
push
popl
lods
jecxz
sbb
roll
sub
mov
loop
ret
mov
out
scas
push
out
adc
ss
inc
sbb
cmpsb
xchg
xor
cmp
and
sub
aas
mov
mov
or
je
cwtl
shll
popl
fidivl
or
inc
rcrb
xor
mov
ss
imul
daa
fwait
repz
cld
sbb
iret
test
or
xchg
inc
les
sbb
push
mov
ret
arpl
mov
out
in
add
fdivrl
ret
jge
xchg
sbb
push
dec
mov
lahf
add
sub
cmpsl
out
insl
lods
pop
das
push
leave
cmpsl
incl
insl
clc
clc
pop
jns
jo
movsl
mov
lods
fistps
nop
cwtl
or
pop
mov
jno
push
sbb
sbb
xlat
and
or
inc
or
mov
call
xchg
fstps
pusha
pop
sahf
sahf
popa
sub
mov
xchg
xchg
pop
imul
mov
mov
xchg
mov
adc
sbb
mov
lret
negb
push
push
in
xchg
mov
clc
xor
mov
and
test
sti
pusha
cmp
xchg
std
inc
and
and
sub
cmp
lds
cmpsl
xchg
push
vcvtsi2ssl
cmp
decb
mov
fadds
fwait
and
outsb
ljmp
or
pop
cmp
sub
pop
cmc
and
popa
lds
ret
ret
add
lock
jg
mov
adc
cmc
in
cmp
dec
adc
mov
push
bound
aam
adc
or
test
out
and
push
xchg
shl
pop
movsb
fists
leave
stc
push
mov
sti
jecxz
cmpsl
dec
xlat
cli
cmpsb
cmp
sahf
dec
jmp
pop
mov
cs
in
cmp
bound
hlt
cmc
imul
arpl
int3
pop
mov
mov
xchg
arpl
popf
ljmp
cmpw
ja
add
in
icebp
fsub
mov
lock
xchg
outsl
dec
cltd
jecxz
test
jne
pop
daa
jbe
add
cmp
sti
jg
cmc
mov
dec
dec
insl
fdivs
in
mov
adc
call
mov
push
sbb
xor
jge
or
test
loopne
mov
cmpsl
outsb
push
xchg
xchg
cltd
dec
inc
and
sbb
subb
sbb
into
hlt
push
je
xchg
insb
lods
rcll
jle
push
push
leave
rclb
stos
fs
sbb
jno
test
leave
add
xchg
out
xchg
add
dec
mov
insl
jle
mul
mov
inc
popf
mov
bound
aad
les
xchg
dec
addr16
fldcw
adc
push
rolb
and
dec
rolb
dec
adc
and
addl
lods
inc
fidivl
jbe
mov
jge
call
loopne
repnz
pop
das
or
pusha
mov
je
push
les
ljmp
rorl
test
aam
scas
inc
cmp
jl
lods
push
dec
iret
and
scas
add
out
dec
leave
scas
dec
test
lea
es
push
jnp
bound
or
or
fcmovnbe
adc
ds
jae
push
rcr
adc
hlt
jne
mov
sbb
dec
xchg
bts
xor
cmpsb
push
stc
ret
mov
pop
popf
call
fmulp
and
mov
cmpl
add
arpl
push
sub
notb
out
mov
roll
push
adc
push
dec
shr
sahf
pop
enter
jecxz
push
push
filds
pop
xchg
lret
jp
or
ficomps
cltd
push
lcall
lods
mov
xor
mov
shl
loopne
out
hlt
pop
inc
int3
lret
mov
pop
ja
pop
aad
fs
inc
and
dec
or
sbb
loop
cmp
pop
stos
xchg
stos
dec
sub
xlat
ss
sub
daa
sbb
popf
mov
dec
pop
pop
push
mov
adc
or
inc
or
push
mov
add
imul
dec
sub
xor
xchg
mov
mov
or
push
test
mov
in
repz
pop
dec
cmp
not
js
sysexit
repnz
adc
xchg
pop
mov
jecxz
adc
push
or
and
js
pop
lcall
cmp
xor
addr16
xlat
ja
test
sbb
and
out
cmp
cltd
int3
and
pop
mov
sbb
call
into
push
cwtl
push
mov
cwtl
call
outsb
xor
jo
test
xor
adc
xchg
dec
xchg
imul
jns
xchg
mov
repz
out
iret
push
add
les
mov
push
jp
jg
popa
mov
inc
aas
sbb
leave
and
aad
jecxz
cmp
xchg
lea
adc
rcr
xor
sub
test
xor
jp
mov
ret
and
cli
dec
xchg
in
stos
mov
jae
jnp
popl
imul
clc
and
int
lahf
rcr
pop
rorb
mov
jge
mov
xchg
int
push
iret
add
xchg
mov
aaa
xor
es
stos
inc
js
mov
sarb
jl
xchg
mov
fucom
xor
mov
ficoms
aaa
test
inc
inc
dec
sub
lret
cmpl
pop
sti
push
popf
stc
jg
lods
cld
cwtl
cld
xor
pop
xor
push
movl
addr16
mov
pop
mov
adc
adc
lcall
ja
adc
clc
popa
pop
daa
aaa
sti
mov
and
dec
mov
pop
mov
test
icebp
jg
jne
repz
das
or
subb
xor
jmp
push
xlat
jno
popf
js,pn
or
xor
jnp
adc
dec
stc
out
inc
sbb
jmp
daa
sub
addr16
sahf
sbbl
mov
push
loopne
ret
or
stos
adc
fwait
mov
aas
mov
test
and
xor
mov
ret
popf
shlb
scas
pop
mov
leave
pushf
lods
mov
leave
mov
loop
das
fs
test
mov
in
jecxz
lock
lret
lock
ja
or
cmc
lock
dec
out
aam
jmp
es
icebp
jbe
stc
jmp
icebp
add
cmc
sbb
add
clc
fcoml
sbb
xor
cmpsb
lock
adc
arpl
jg
stos
aad
dec
mov
xor
pop
or
mov
sbb
xor
inc
cltd
call
push
lcall
lret
das
pop
dec
jp
or
dec
jmp
sti
enter
insl
scas
push
jb
cli
test
dec
add
inc
mov
sub
xchg
add
dec
xchg
in
sbb
cmp
int
outsl
in
mov
xchg
or
pushf
sub
jno
in
pop
ss
test
pushf
cmp
push
pop
jbe
subl
and
ljmp
rorb
outsl
insb
std
lea
jecxz
dec
int
fildl
mov
inc
jl
pop
lds
cmp
imulb
jp
imul
jge
scas
int
out
out
adc
mov
adc
cmp
lcall
pushl
dec
je
imul
in
mov
cwtl
and
pushf
adc
or
adc
push
pop
cs
dec
ljmp
xchg
xor
dec
add
cmp
or
loope
testl
rclb
je
mov
mov
in
and
mov
add
dec
add
sarl
sub
fwait
orl
push
cmpb
jbe
mov
cmp
sub
sub
cmc
lret
push
jle
inc
js
push
in
stos
xlat
mov
out
mov
adc
pop
shl
sbb
fwait
xor
mov
cmp
and
xchg
pop
rcrl
fnstsw
push
jnp
mov
lock
jne
aaa
andl
sub
hlt
stc
nop
nopl
fstpl
int
ljmp
test
rorb
roll
in
sbb
mov
xchg
js
in
push
jmp
pop
inc
lods
adc
dec
imulb
mov
dec
adc
pop
sub
or
or
int
adc
cmp
pushl
mov
repz
fldcw
js
cmpsb
je
jp
push
int3
aaa
xchg
bound
fs
js
jae
fdivl
mov
or
add
std
push
jae
jb
dec
imul
pop
or
push
nop
je
lds
sub
icebp
push
ret
aam
or
fmuls
mov
out
xlat
xor
add
lea
push
jecxz
aad
sbb
test
sub
das
stos
xchg
into
mov
jge
scas
jge
popa
pop
arpl
inc
ficoms
pushf
cltd
das
mov
xor
clc
or
je
out
pop
insl
push
cmp
xor
lret
ffreep
inc
outsl
outsl
lret
daa
mov
add
rorb
icebp
lods
jecxz
outsl
mov
nop
mov
repz
outsb
shll
jo
lds
mov
es
icebp
and
fiadds
xchg
fwait
xor
lcall
jge,pt
imulb
ja
inc
mov
mov
out
jmp
fnsave
jle
ss
mov
shrl
ret
jae
shlb
cmpsl
add
iret
and
psraw
lods
pop
xlat
add
mov
mov
loope
icebp
int
lret
jg
sub
inc
add
rol
jb
dec
arpl
mov
mov
pop
imul
test
jg
xchg
and
popa
shrl
das
mov
dec
adc
pop
ffree
sbb
or
mov
rolb
cltd
cltd
jb
ficoml
xor
dec
loopne
arpl
pop
es
or
xor
mov
scas
mov
mov
pop
mov
les
jbe
mov
and
mov
lods
mov
fndisi(8087
out
jbe
pop
xor
pop
inc
scas
out
dec
imul
nop
and
out
xchg
dec
xchg
xor
sub
aad
xor
andl
es
sbb
pop
xor
and
test
ljmp
icebp
out
sub
jb
sub
ljmp
sub
scas
ret
xor
les
loopne
push
fldl
lea
mov
adc
aam
add
inc
pusha
cmp
sub
sbb
fldl
push
sbb
arpl
jp
shlb
adc
out
push
icebp
arpl
jg
shlb
cmpsb
dec
data16
shrb
out
cli
ss
outsb
loope
pusha
mov
aad
push
je
sub
loope
insl
pop
or
push
rcrb
sbb
fs
and
inc
push
out
dec
and
fimuls
sbb
decb
rclb
fwait
aam
sub
dec
jns
andb
aad
fs
shrb
ljmp
jno
clc
lods
push
fdiv
orl
jo
pop
ss
mov
xchg
cmp
push
inc
xlat
stos
divl
add
xor
stos
int3
jb
push
outsb
shr
lods
cmpsb
mov
fmuls
cli
ss
dec
data16
jno
or
xor
lret
xchg
fidivrl
es
jg
dec
adc
inc
sahf
jge
loopne
and
mov
pop
ret
push
out
mov
xchg
fidivrs
pop
jmp
mov
mov
dec
pusha
dec
inc
hlt
rolb
and
push
mov
inc
aas
loop
repz
lock
daa
or
adc
add
notl
dec
es
test
mov
adc
sti
gs
hlt
scas
push
ds
nop
xor
dec
iret
or
lea
sub
mov
loop
cmp
ljmp
mov
mov
ss
or
lcall
pop
dec
mov
sbb
lahf
popf
nop
cmp
mov
or
push
lea
dec
aam
add
mov
push
push
dec
pop
push
std
int3
xchg
xor
xchg
mov
sahf
call
add
and
ds
dec
pushf
sbb
repz
and
cmpsb
in
sahf
in
out
adcb
cmc
jns
mov
mov
cld
mov
fcomps
popf
mov
or
ds
arpl
xchg
xor
mov
push
out
mov
sbb
ficoml
xchg
pushf
cwtl
pushf
cmova
sbb
pop
in
daa
mov
cmp
test
in
ret
xor
test
dec
nop
and
and
cld
pop
mov
xor
movsb
popa
mov
lret
add
js
lea
int
lret
lds
test
movsl
cmpsb
push
jmp
insb
call
std
or
push
cmp
rcrl
cltd
icebp
pop
gs
std
dec
cmc
icebp
pop
add
or
arpl
mov
jmp
nop
pusha
mov
dec
sub
push
fndisi(8087
out
inc
push
dec
xor
lcall
mov
sub
shlb
lcall
or
hlt
outsb
mov
lahf
inc
fistpl
pop
lods
xor
and
mov
dec
and
testb
in
pop
test
jb
mov
fcomp
loop
cli
rolb
mov
or
jmp
lods
fisttps
out
adc
inc
enter
loopne
test
pop
and
lock
filds
add
je
mov
xor
mov
cmp
mov
cwtl
adc
cmp
stos
addb
fimull
add
mov
pop
out
push
in
ret
or
pop
push
je
repz
in
xchg
roll
push
stc
es
rcrl
mov
sbb
xchg
in
js
pop
mov
stos
inc
and
cwtl
push
test
or
mov
loop,pt
das
or
lods
or
mov
fisttps
push
mul
and
inc
repz
cltd
lds
popa
cwtl
ror
xchg
or
fmull
repnz
cmp
ja
mov
loop
cmpsl
sbb
mov
mov
xchg
test
push
les
fs
xchg
add
test
dec
das
notb
hlt
std
movsl
insl
mov
lahf
adc
fisubs
adc
push
mov
lcall
daa
cmpsb
popa
enter
dec
arpl
lods
pop
jg
xchg
adc
lret
xchg
and
mov
mov
dec
into
ss
sub
push
push
mov
fists
aas
dec
xor
into
jbe
data16
add
jge
dec
andb
mov
into
cltd
push
cmpl
test
push
adc
add
jl
pop
fistpl
pusha
lds
pushf
stos
bound
iret
repnz
popa
addr16
fmuls
xchg
add
lret
les
fmulp
pop
cmp
mov
aaa
push
inc
and
outsl
notl
mov
int
or
sahf
cmc
test
mov
and
cwtl
or
jns
and
mov
pushf
mov
inc
or
mov
mov
sub
je
push
mov
mov
popf
leave
in
xor
loop
cmp
pop
stos
push
mov
mov
out
push
pop
rcr
and
adc
stc
xor
sti
xor
and
es
into
xor
roll
imul
rcrb
xchg
push
jg
pushf
insl
mov
cs
in
mov
inc
and
aas
stc
mov
aam
lret
popf
xor
xlat
sbb
inc
shrl
push
dec
mov
or
sete
jmp
inc
cmp
adc
or
outsl
sbb
imul
ljmp
cmp
andl
fidivrs
fsubs
cmp
dec
cmpsb
xor
add
xor
jecxz
or
arpl
loope,pt
test
mov
push
sti
dec
mov
test
js
push
mov
movsb
ds
leave
add
pop
fcmovbe
movsl
stos
lock
pop
jmp
enter
adc
mov
push
lods
mov
mov
xchg
xchg
fnstenv
icebp
call
fcomip
sub
sbb
xor
mov
pop
sub
sub
cld
lea
inc
mov
cmp
rcrb
sub
repnz
dec
push
mov
ljmp
inc
mov
xlat
jmp
mov
out
mov
pop
ret
je
cwtl
gs
xchg
dec
call
xlat
fwait
imul
aas
and
fdivl
les
out
in
push
imul
add
inc
enter
fxch
out
aad
vpandn
xchg
add
mov
ss
mov
xor
shll
jge
inc
jno
push
insb
daa
nop
push
ds
dec
dec
mov
mov
ret
aad
mov
test
dec
scas
sub
mov
hlt
inc
jle
stos
cltd
test
fdivrp
out
dec
filds
adc
and
je
jo
hlt
pop
mov
and
dec
scas
ret
flds
push
ret
or
pop
mov
lods
add
loopne
out
aas
lods
outsb
lods
mov
inc
movsl
ljmp
fs
in
cld
or
mov
ret
mov
push
jae
jbe
cmpsl
pop
cmp
cli
ljmp
iret
and
insb
nop
mov
daa
xlat
lea
dec
icebp
sahf
lcall
mov
xchg
adc
in
mov
mov
subl
imul
negl
sub
fisubs
and
jle
or
or
sub
cwtl
pop
ret
pop
std
mov
sub
and
or
push
fs
repz
or
lods
sub
mov
inc
sub
pusha
jns
mov
ds
test
jns
icebp
stos
pop
add
test
mov
insb
cmp
sarl
inc
mov
cmp
nop
pop
rcrb
or
fdivs
mov
clc
xchg
andl
ss
lcall
in
xor
stos
and
add
test
out
sub
mov
addr16
lret
xchg
fcomps
in
clc
and
test
mov
sarl
fstl
push
insl
call
jl
lret
sub
out
mov
in
aad
mov
jbe
outsb
arpl
inc
adc
cmp
fs
push
cmp
xchg
mov
pushf
out
insb
add
imul
push
pushf
mov
cmp
ficomps
sub
lea
add
pop
pop
mov
std
lds
mov
inc
mov
imul
xor
mov
dec
inc
test
sbb
jp
or
iret
mov
jge
cmc
int3
out
pop
jae
mov
hlt
push
mov
push
es
xchg
inc
andb
mov
loop
loopne
mov
repnz
xor
jp
std
syscall
int3
lea
inc
rcrb
add
clc
cli
cmp
insb
sbb
into
insb
sar
sub
dec
add
mov
mov
adc
or
mov
das
fistl
leave
sbb
dec
mov
movsl
pop
cwtl
pop
or
je
sbb
mov
xlat
daa
iret
pushf
imul
imul
xchg
mov
imul
scas
out
pop
mov
push
stos
push
js
pop
xor
cmp
test
push
adc
arpl
push
and
cmp
xor
cmp
in
shll
ret
adc
icebp
lret
movsb
stos
inc
stos
lcall
and
jecxz
pop
mov
das
rcl
mov
mov
fisttpll
pop
lret
sbb
int3
pop
cmpl
push
pop
pop
insb
sbb
dec
push
or
add
test
mov
loop
shrl
orl
sahf
ds
test
loopne,pt
push
or
mov
jne
lock
mov
push
lock
fidivrs
and
enter
mov
mov
sub
push
in
pop
dec
or
mov
mov
sbb
mov
mov
das
es
daa
dec
pop
stos
aam
jo
inc
sbb
fs
and
or
dec
cmp
aam
scas
lods
fsubl
out
or
push
fwait
pop
lods
push
stos
and
ja
aas
xlat
push
rolb
sub
cmpsl
mov
push
mov
ret
cltd
inc
out
push
jp
inc
mov
verr
cmpsl
jb
fimull
pop
pop
push
fiadds
lock
and
call
pop
jmp
fildl
fmul
sahf
in
sbbb
jae
cmp
test
fimuls
lcall
sbb
mov
push
js
and
roll
movntq
sbb
insl
pop
sahf
dec
inc
jns
xor
test
cmp
je
movsb
out
fstl
adc
daa
popa
and
jp
popf
orl
sub
ja
out
mov
in
notl
in
xchg
addr16
mov
scas
pusha
stos
sbb
xchg
sbb
roll
adc
mov
es
pop
cmp
stos
mov
pop
mov
sub
out
loope
scas
call
shll
dec
lods
xchg
inc
mov
jecxz
out
decb
les
sbb
lods
xor
in
mov
sub
pop
mov
add
addr16
loope
cmpsb
adc
popa
ja
mov
imul
pop
add
subb
ret
loope
loope
fnstenv
inc
jmp
mov
or
or
xchg
lea
jecxz
adc
xorl
xor
call
fld
cltd
pop
xor
jns
icebp
mov
stos
and
fstpt
mov
jl
data16
mov
dec
and
daa
xchg
insb
jge
fisubs
add
mov
xchg
pop
dec
loopne
add
out
loop
enter
jp
xchg
jb
cmpsl
scas
fbstp
push
inc
add
adc
int
sub
or
mov
repnz
aaa
mov
xlat
addb
jnp
and
daa
stos
cltd
xchg
xor
fdivs
mov
stos
inc
fdivs
fwait
mov
or
push
popl
mov
cli
adc
jl
sti
adc
lods
jecxz
mov
nop
lods
jbe
in
addr16
sub
xchg
aaa
add
int
jecxz
mov
pop
sub
xchg
push
push
hlt
mov
stc
rcrl
ficoms
sbb
mulb
sbb
jb
stc
sub
and
js
sbb
xor
inc
dec
push
cmpsl
sti
scas
aas
loope
jbe
adc
or
push
scas
lret
xor
sub
es
and
ficoml
cli
push
xchg
or
sub
adc
sbb
mov
std
ret
xor
jle
jns
dec
lds
jns
repnz
pop
mov
inc
cmp
les
dec
out
cmp
sub
bound
sbb
out
pop
mov
fimuls
lcall
sub
cltd
in
arpl
pop
in
iret
jae
mov
lods
or
ja
push
or
add
aaa
repnz
jbe
scas
mov
mov
decl
outsl
mov
leave
cmp
pushf
xor
jg
iret
mov
pop
mov
stos
mov
pop
or
mov
pop
pop
sbb
jge
scas
ret
mov
lea
xor
test
es
jmp
dec
sbb
test
fcompl
mov
loope
pop
je
xor
ds
shr
mov
cwtl
andl
jne
mov
clc
mov
push
push
rcll
mov
sarb
enter
repnz
fwait
cmpsb
loop
xlat
adc
cmp
fldl
jae
adc
lods
adc
fucomi
cmc
shlb
xchg
popf
cli
dec
inc
dec
orb
sub
inc
adc
data16
mov
shrb
mov
jns
lret
pusha
mov
leave
jg
sarl
pop
out
mov
cld
xchg
hlt
mov
mov
ret
mov
jnp
aas
jmp
push
ss
or
sub
aad
or
aas
test
adc
mov
mov
ret
cld
enter
or
lret
mov
in
lret
les
fisubs
ret
rcrl
fmuls
dec
gs
pop
push
push
mov
add
mov
push
imul
mov
and
xor
push
call
pop
cmp
jbe
pop
fimull
xor
push
mov
test
inc
jg
movsl
loopne
sbbb
push
outsb
outsb
inc
sub
js
xor
movsl
fiadds
xor
pop
or
fwait
jno
xchg
out
cwtl
adc
xor
cmpsl
gs
out
inc
mov
sbb
xorl
jle
sub
ljmp
push
out
cmpl
leave
sub
xor
push
sub
mov
sbb
ss
stos
arpl
ror
inc
sbb
jecxz
mov
mov
jge
mov
mov
sbb
or
dec
pop
cmp
sahf
add
loope
int
mov
hlt
cmpsb
and
push
in
pop
add
imul
or
inc
mov
sub
roll
test
push
popa
push
add
add
or
adc
and
push
lahf
sub
aad
out
xor
dec
in
sub
xchg
inc
cmp
cmpsl
mov
lods
or
ljmp
dec
ret
out
cmpb
lds
sbb
lock
xlat
mov
sti
in
sbb
jnp
or
gs
dec
push
cmp
dec
xor
pop
lret
cmpsb
cmpb
out
icebp
adc
repz
push
loopne
xor
sub
test
cmpsb
iret
pop
pop
xchg
ss
jbe
lods
int3
test
fs
dec
jbe
push
cmp
adc
pusha
sub
sbb
outsl
sahf
dec
mov
scas
gs
andl
test
sub
pmullw
rorl
xchg
ljmp
imul
es
cltd
xchg
aad
lret
rorl
pop
cmp
jecxz
fsubrs
out
dec
cltd
dec
sbbl
andl
mov
dec
sub
shlb
pop
je
and
lods
add
in
push
fnstenv
jae
int
arpl
jl
inc
test
jne
adc
lret
lock
stos
cmpsb
sub
mov
xor
pusha
js
sbb
in
jo
pop
pop
mov
mov
and
sbb
jnp
loope
cmp
fwait
mov
pop
es
sbb
jg
fisttpll
adc
jecxz
scas
sub
shrl
fstp
dec
sahf
push
int3
movsl
out
and
mov
stos
popa
pop
repnz
loope
stos
out
jle
mov
aad
in
jge
test
xor
js
ds
and
push
icebp
addl
ret
adc
cmp
rolb
lea
daa
cmp
stc
push
lods
jno
imul
jb
xchg
enter
xchg
pop
cmpsb
cmpsl
and
js
sbb
pop
mov
hlt
sub
pop
cld
push
cmc
add
cs
mov
stos
imul
inc
arpl
adc
hlt
cld
in
mov
cs
clc
mov
xchg
mov
je
jmp
sbb
jecxz
call
cmp
or
and
and
icebp
cmp
mov
xchg
xlat
and
inc
fildl
outsb
loop
and
xor
push
and
fistpll
lods
push
orb
rcrl
lods
es
add
push
subl
loop
stc
inc
mov
jno
inc
gs
jbe
dec
xchg
cmp
test
sbb
push
xchg
pop
xor
cmpsb
xor
inc
adc
cld
mov
sbb
sti
xor
xchg
or
shl
jns
dec
es
mov
test
daa
je
jbe
stos
xchg
push
scas
jp
push
sti
lret
lcall
mov
jo
and
test
inc
inc
adc
int
mov
mov
int
andb
push
stos
jne
jge
xlat
lods
sbb
rcl
inc
inc
ret
shlb
ret
shrl
ret
cmc
loop
mov
and
inc
lods
xchg
sbb
ja
idivb
loopne,pn
fstpt
xchg
out
imul
fxch
or
inc
daa
dec
movsl
les
dec
out
mov
sub
and
mov
stos
out
cld
je
mov
lret
ljmp
div
cmc
sarl
or
popf
pop
pop
ret
mov
stos
jecxz
or
push
add
push
push
inc
and
pop
out
outsb
pop
mov
add
xchg
shl
imull
xlat
xchg
mov
cmpsb
js
pop
and
jp
int3
mov
je
cli
insl
lock
fsubrl
mov
inc
std
mov
jg
xlat
xchg
ljmp
xchg
sub
loopne,pn
rcll
or
jbe
sbbl
rsm
test
mov
sahf
lcall
pop
pop
mov
and
and
mov
inc
push
aaa
xchg
nop
ss
add
leave
xor
push
call
fs
sbb
fstpl
imul
xor
cmpsb
cmp
mov
xchg
andb
pop
dec
mov
jnp
in
xchg
sbb
ret
jnp
xchg
sar
inc
and
loop
packssdw
xlat
jb
daa
loop
xchg
in
mov
lds
inc
dec
mov
mov
xchg
sbb
adc
aam
stc
xorl
call
sub
gs
jecxz
clc
push
xchg
dec
sbb
mov
clc
jbe
daa
aas
cmpsb
loopne
push
add
and
sbb
and
xlat
shrl
mov
inc
dec
cmpb
xchg
pop
add
xchg
inc
in
fadds
out
xchg
or
nopl
out
jne
or
inc
pop
out
mov
mov
mov
cltd
and
movsb
or
dec
pusha
push
mov
hlt
mov
repz
lret
out
aaa
xor
mov
js
xchg
or
inc
repz
pop
shll
dec
or
lds
mov
imul
das
aaa
rorb
sub
movsb
mov
pop
les
pop
in
jl
add
cli
in
and
ljmp
pop
test
lcall
je
add
mov
pop
test
pusha
mov
jnp
or
orl
lcall
ret
jg
cli
sub
imul
jae
test
jnp
enter
fs
outsb
loopne
jle
sbb
pop
notb
adc
pop
cs
adc
pop
sub
nop
and
jne
call
pop
aas
push
mov
mov
mul
xor
jg
ja
xchg
out
inc
ja
es
filds
and
repz
push
jg
sbb
jmp
iret
iret
xchg
push
add
jmp
xchg
stos
xchg
mov
aaa
adc
sub
push
mov
sti
xor
push
cltd
repnz
repnz
jno
inc
aas
jbe
fs
mov
cmpl
mov
inc
mov
insb
mov
add
xor
cmp
fistl
sub
push
arpl
js
or
push
mulb
cmp
mov
scas
filds
lret
mov
scas
cmpsb
dec
pop
sub
mov
push
outsb
jbe
jle
fdivrl
data16
dec
inc
rcll
lcall
je
dec
pusha
inc
and
dec
cli
sbb
into
pushf
jl
lods
aad
inc
push
sarl
push
adc
sahf
fdivrp
in
jo
pop
xor
jno
mov
pushf
pop
jb
arpl
fmuls
int3
dec
push
inc
insl
popa
aas
ljmp
loope
add
add
out
popa
xchg
in
jg
pop
mov
cmp
xchg
and
out
mov
pop
or
js
enter
jp
fsubr
push
sub
mov
imul
ret
imul
lea
lods
divb
ja
movsb
hlt
pop
and
into
in
negl
scas
vcmpps
rorl
ja
xor
es
test
xchg
fs
ret
dec
push
mov
xor
jmp
pushf
stos
pop
cmc
jg
sbb
add
sub
xor
sbb
mov
cltd
aas
pop
subl
sti
mov
scas
mov
jle
sti
adc
mov
push
cmc
cli
or
xlat
repnz
out
add
clc
adc
fnstenv
in
cs
pop
rorl
ftst
insb
cs
jno
sbb
cmp
mov
jae
or
pushf
fld
jecxz
push
mov
mov
add
xchg
mov
cmpb
xlat
rorl
or
daa
rorl
in
pop
movsl
jp
cmp
out
sub
fldz
sbb
std
dec
neg
test
aad
jns
mov
lret
and
imull
arpl
pop
fs
dec
mov
lock
mov
pop
xchg
dec
sub
ds
push
and
lods
aaa
push
push
rol
jo
jecxz
inc
insl
mov
jg
movsl
adc
lcall
std
xlat
rcr
sbb
push
stos
mov
inc
adc
es
cmp
pushf
pushf
xchg
lock
dec
sbb
fs
pop
cmc
mov
add
xor
or
lcall
dec
shrb
into
in
sub
xor
xor
mov
xchg
test
popf
sarb
rcrl
es
jae
mov
lea
adc
popa
fisttpl
rol
pop
pop
in
jne
xchg
lahf
ss
pusha
lea
ds
mov
fwait
pop
and
or
sub
or
mov
fld
nop
stos
sub
test
out
loope
cmp
xor
jle
cmp
and
fidivrl
loop
mov
push
pop
fildl
mov
stc
cmc
jno
dec
das
push
sub
repnz
mov
lods
or
notl
and
cli
sub
inc
jmp
shrl
add
xor
js
push
hlt
push
mov
xchg
inc
jno
scas
inc
in
cmp
inc
fsts
ljmp
sbb
pushf
push
sarl
setge
sahf
mov
add
or
push
push
stos
sub
xor
hlt
daa
mov
cmp
shlb
lahf
fidivrs
cwtl
inc
fisubs
nop
xchg
cmpsl
fisttpll
enter
pushf
in
repnz
lret
sbb
ds
lret
xchg
cmpsl
aaa
leave
scas
pop
sti
scas
imul
sbb
push
aaa
or
sar
add
dec
mov
inc
sbbb
js
jp
sbb
insl
inc
mov
push
data16
jns
mov
xlat
nop
addr16
push
pop
mov
pushf
popf
in
pop
cmp
jns
repnz
std
hlt
les
xchg
pop
and
in
nop
adc
arpl
sub
mov
xor
test
xchg
push
hlt
addr16
out
ljmp
cmp
dec
pop
in
pop
and
stos
insl
std
cmpsl
xor
sbb
out
dec
sarb
js
inc
push
adc
pop
xor
outsl
arpl
mov
cs
je
cmp
pop
sbb
imul
jns,pt
repz
push
ljmp
fstpl
sti
cmp
movl
adc
inc
in
fldcw
sub
xchg
pop
cli
dec
enter
int
daa
in
pop
mov
insb
lods
mov
mov
mov
lcall
mov
xchg
dec
pop
lahf
mov
xchg
dec
jmp
cmpsb
or
mov
jmp
push
out
xchg
adc
arpl
outsl
sbb
int3
cmp
mov
inc
loop
in
mov
xchg
mov
in
gs
mov
call
cmp
shrl
mov
ss
jge
test
sbb
push
in
mov
repnz
imul
or
mov
imulb
cld
cmp
mov
cli
or
push
pusha
insb
adc
xchg
and
pop
pop
lea
aas
add
push
and
push
into
bound
mov
dec
pusha
dec
ss
xchg
mov
cmp
jnp
dec
cld
ja
fistps
je
pop
jmp
lods
pop
fwait
mov
sub
cmp
and
cmp
sbb
je
cltd
inc
ret
cltd
fdivl
push
out
pusha
and
jnp
les
shl
rclb
cwtl
mov
iret
add
shlb
aaa
das
je
adc
mov
int3
imul
adc
rcrl
pop
adc
mov
std
pop
jmp
cltd
bound
xor
push
divl
sub
testb
jne
popf
in
ja
sbb
movsb
addb
jb
dec
pop
mov
adc
mov
pop
fildl
adc
cmp
cmpsl
or
popf
jns
jg
movsb
andl
xchg
mov
mov
mov
filds
push
fcomps
push
adcb
mov
leave
popa
add
push
fstpl
pop
mov
mov
add
nop
adc
xor
xor
mov
xchg
lea
jl
adc
mov
mov
roll
and
sarl
mov
jnp
enter
or
test
in
dec
xor
and
lods
xchg
jl
or
out
stc
lahf
dec
rcr
cli
xchg
push
cltd
push
sbb
imul
fnstcw
dec
movb
sbbl
call
imul
repnz
sti
int3
sbb
ret
imul
or
push
in
int3
push
mov
or
inc
sub
imul
popa
shlb
jae
in
cmp
mov
pop
in
jmp
adc
jmp
pop
rorb
cmpl
push
mov
jne
push
pop
data16
mov
push
cs
cwtl
out
and
xchg
xchg
or
movsb
ficoms
jmp
cld
cmp
mov
sbb
loop
inc
xchg
xor
jae
insl
mov
jp
push
jp
pop
cltd
sub
insl
sub
cmp
shlb
pop
mov
dec
sub
push
ret
sti
stos
mov
fdivr
jge
pop
movsl
jne
iret
idivb
lods
sahf
imul
xchg
pop
ret
fdivs
rorl
sub
mov
clc
mov
imul
fdivl
sbbl
inc
popa
sbb
add
cmp
push
pushf
xor
lret
dec
xchg
adc
test
ret
in
cs
push
adc
iret
push
movsl
insl
mov
lret
mov
in
out
cli
xchg
xchg
xchg
cmp
ds
jge
fsubp
clc
filds
pop
xchg
pop
sbb
mov
ret
xchg
lret
cmp
fnstenv
cmpsb
xchg
sbb
lret
roll
mov
ja
lret
sbb
mov
pop
repz
dec
xchg
xor
sbbl
mov
mov
inc
mov
pop
push
roll
adc
mov
dec
out
add
pop
jnp
sbb
sbb
mov
inc
dec
popa
pop
ret
fiadds
stos
adc
cmpsb
mov
div
jno
xlat
xchg
mov
lret
jnp
add
cmc
push
stos
stc
fistpll
add
mov
loop
mov
shrb
fdivr
push
xlat
das
cwtl
push
push
pop
inc
pop
mov
cmp
add
and
mov
mov
add
call
adc
out
pop
in
xchg
subb
clc
inc
ret
dec
inc
cmovbe
fwait
or
sbb
dec
pop
cmp
push
aam
mov
xlat
lret
xchg
xchg
dec
clc
push
cltd
jg
mov
adc
adc
mov
popf
or
mov
and
rorl
cmc
pop
subb
adc
rcll
pop
jge
out
mov
insl
push
and
xchg
mov
insb
inc
imul
fimuls
out
clc
cmp
or
stos
andl
ficoml
arpl
push
adc
mov
es
push
ljmp
xor
mov
loop
cs
rol
ss
dec
sub
mov
fs
push
ret
int3
mov
das
aas
inc
fiadds
mov
adc
test
ffree
and
dec
andb
sub
outsl
in
fdivs
mov
cmp
shll
xor
fldcw
jle
jmp
sub
dec
andl
or
mov
mov
repz
mov
sbbl
aas
scas
inc
sub
add
out
mov
arpl
xchg
int
test
test
fidivrs
xor
xchg
je
pop
lock
cs
mov
adc
xor
mov
cld
jne
ret
xchg
xchg
and
inc
popa
arpl
jge
in
movsb
dec
mov
jnp
push
daa
xchg
xchg
or
aad
repnz
mov
bndldx
jnp
scas
fdivl
movsb
push
repz
adc
sti
std
jae
cli
inc
jle
shrl
ret
mov
bound
add
int3
sbb
dec
cltd
test
sbb
xchg
insl
or
push
getsec
mov
data16
dec
mov
les
xor
xchg
jge
mov
inc
cmovo
outsb
jnp
outsb
cmp
mov
jb
sbb
scas
mov
and
mov
and
add
mov
cwtl
pushf
pop
jecxz
push
test
ret
lods
fimuls
xchg
mov
sbb
movsb
adc
ficomps
add
mov
subl
insl
test
addr16
xchg
pop
inc
cmp
dec
cld
stos
push
imul
scas
out
mov
ja
loope
fists
cmpsl
add
sub
mov
xchg
lods
cvtpi2ps
cmp
xchg
in
stc
aaa
pop
jecxz
adcl
sub
cs
das
outsb
sahf
adc
test
ffree
sub
lds
add
xor
mov
imul
jae
mov
xchg
cmp
inc
enter
add
lds
inc
mov
push
add
pop
mov
sub
out
mov
sbb
push
cmpsl
les
arpl
mov
ret
in
push
call
pop
pop
xor
leave
popf
js
pop
mov
subb
lcall
les
mov
mov
cmp
shl
sbb
es
mov
lret
mov
sbb
dec
dec
pop
std
aad
lret
stc
push
fs
xor
emms
and
sbb
mov
aad
cwtl
sahf
xor
mov
sub
pop
sbb
pushf
aam
pop
shll
lea
jg
movsl
faddl
pop
cmp
stc
fldt
cmp
jno
or
ror
inc
gs
cmc
cmp
ret
shlb
pop
rcrl
inc
repnz
xlat
bnd
rol
lods
hlt
add
cwtl
xchg
les
out
pop
jno
insb
lcall
jns
sub
xor
inc
sub
mov
cmc
dec
fistps
leave
sub
pop
mov
in
jp
clc
addr16
pop
sarb
mov
inc
std
mov
dec
sub
popa
or
stc
scas
jbe
mov
or
dec
dec
dec
or
push
hlt
jg
adc
xor
xlat
aad
xchg
lods
fnstenv
dec
js
aad
lods
stos
stc
pop
sbb
xchg
sub
or
in
sahf
out
xchg
fisubs
dec
pop
mov
sub
jp
push
jnp
cmp
aas
jg
mov
hlt
xlat
scas
cmp
mov
in
test
lods
push
nop
cmp
cmpsb
lods
push
jg
inc
stc
out
push
fildll
sbb
adc
cmp
outsb
mov
ss
cmp
pop
es
mov
les
mov
pop
enter
es
faddp
andl
push
jae
ret
mov
mov
dec
adc
push
ss
jmp
shl
jge
push
sahf
cmp
lcall
mov
pop
inc
cmpsb
sub
pop
popf
xchg
fwait
inc
subb
xchg
jb
push
enter
push
or
cs
cmc
adc
js
adc
mov
pushf
jbe
and
mov
lea
cmp
repnz
or
shll
movsb
pushf
xchg
hlt
stos
dec
adc
cmp
jae
sarl
iret
les
shrl
xchg
dec
cld
xchg
js
pop
jmp
cld
jge
push
fs
mov
test
scas
adc
inc
cmp
pop
mov
stc
cmc
in
cld
sbb
fldl
cld
scas
ret
lret
add
inc
sbb
push
push
out
shll
pop
push
gs
scas
addr16
cmp
dec
dec
xchg
hlt
pusha
jo
jnp
pop
mov
aas
fs
pop
ffreep
int
add
jle
mov
std
jmp
jo
xchg
insl
xor
dec
pushf
xor
daa
sbb
jo
mov
ffree
scas
dec
loop
push
loopne
jp
mov
in
add
fisubrs
lcall
scas
sahf
call
lods
and
dec
inc
cmp
sbb
aas
in
xor
xor
dec
sub
ret
adc
mov
fidivrs
jecxz
aas
dec
xchg
bound
shl
fidivs
cmpsb
lock
lret
inc
test
and
mov
mov
push
push
sbb
dec
sbb
adcb
sub
sbb
fidivs
sub
fsubrl
adc
add
pusha
or
pop
jne
xor
repz
test
and
mov
jle
pop
loop
shr
loop
cmp
jl
inc
pop
jbe
shll
in
cmpb
outsb
jae
fwait
push
pusha
stc
ret
inc
and
negb
in
orb
mov
push
aad
data16
jb
ja
cmp
push
and
sub
and
mov
or
pop
add
add
sub
insl
inc
js
xchg
adc
insl
incb
or
out
div
shlb
iret
fcomps
pop
out
addr16
pop
mov
xor
test
test
ficomps
inc
cmp
outsl
sub
and
mov
xchg
mov
dec
clc
jo
cmp
aad
adc
shlb
adc
icebp
xor
add
sbb
push
insb
cmp
sbb
fistpl
sub
mov
lcall
mov
mov
jg
jg
loopne
lods
sub
fidivrs
outsl
xor
pop
arpl
divl
pop
and
pop
inc
gs
imul
xchg
push
icebp
pop
and
in
sahf
push
push
mov
das
jne
scas
cwtl
fsubrs
fisubl
adc
movsl
call
ja
xchg
sub
push
test
jecxz
jno
rcrb
mov
out
insb
out
push
push
sbb
xchg
xor
shld
rol
sti
jnp
mov
and
sbb
test
jmp
movsb
ss
pusha
mov
dec
scas
pop
sbb
pop
add
cmp
add
push
out
lret
jne
clc
test
cmp
jle
mov
dec
sahf
sub
inc
push
xchg
mov
inc
ljmp
jae
cmpl
and
sub
mov
push
jle
mov
test
push
cmpsb
mov
inc
imul
mov
jae
imulb
add
pop
fcomps
mul
and
jmp
jb
jo
mov
push
jno
push
adc
sub
fld
jp
subb
jge
cltd
pop
gs
inc
add
cmp
or
add
xchg
int3
adc
scas
lds
imul
mov
pop
xor
mov
mov
pop
data16
jle
xlat
lods
cmpsb
push
xchg
adc
fucomp
aad
jb
in
xchg
cmp
popa
cwtl
gs
jae
ret
in
adc
repz
xchg
stos
add
jg
repz
mov
xor
jge
shlb
cmp
xor
icebp
mull
imul
shrb
cmp
fnstsw
mov
movsb
jo
inc
push
fidivl
aad
add
mov
js
aaa
sahf
sbb
filds
jl
sti
bound
sti
mov
and
test
mov
imul
sub
loop
out
xor
mov
push
cltd
ljmp
dec
cmp
loope
jne
insb
out
add
sub
jg
popa
mov
fists
pop
in
add
cmp
shrb
mov
or
icebp
je
out
mov
inc
lods
or
and
xor
fs
stc
rclb
xor
adc
inc
sbb
pop
movsl
fwait
push
or
inc
jae
lret
push
hlt
jns
stos
inc
int
add
sahf
push
ss
mov
xor
push
jb
arpl
lret
cltd
pop
cmp
scas
and
sub
nop
pop
fwait
rorl
mov
unpckhps
xor
xchg
pop
lcall
mov
outsl
sahf
shll
mov
pop
shll
xchg
adc
dec
divl
sbb
xlat
adc
inc
lcall
sbb
int3
xor
cs
add
push
mov
inc
fsubrs
repnz
lds
rolb
mov
mov
pop
std
jg
mov
jp
lds
stos
andb
fidivs
lea
sub
outsl
inc
push
sub
cs
xchg
fadds
ja
mov
fdiv
jo
loop
mov
mov
ja
shll
mov
pmaddwd
andl
jnp
movsl
pop
xlat
jp
mov
ljmp
cld
push
outsb
xor
fdivrs
aas
mov
cld
jno
push
rcrl
shll
push
cmp
jae
pop
movsb
pop
loope
jo
cmc
jecxz
aad
jo
mov
stos
add
xchg
les
lds
bound
push
mov
push
aas
pushf
fdivrs
std
inc
push
xchg
add
rcrl
push
or
lods
rcll
pop
imul
xchg
call
rclb
pop
icebp
or
out
lea
push
sarb
inc
daa
fwait
lds
cmpsb
push
sar
mov
sub
push
shl
sbb
in
mov
xchg
sub
aam
in
push
mov
jg
sbb
sub
imul
adc
dec
test
lret
jnp
xchg
add
cmp
push
jo
mov
jl
popa
dec
in
pusha
test
inc
xchg
icebp
fildll
mov
cmpb
mov
call
test
ja
jns
pop
lock
rorb
jb
adc
test
dec
imul
mov
xorl
and
add
sbb
aas
out
inc
mov
les
fwait
xchg
out
in
lds
popf
dec
les
in
inc
sbb
arpl
pop
es
sub
int3
mov
pop
sbb
aad
test
sbb
pop
cmp
add
cmpb
fldt
push
lds
imul
jmp
out
fldt
cmc
cmp
sti
mov
mov
sbb
ds
xchg
ficoms
int3
ss
mov
lea
cmc
je
jbe
int3
inc
out
and
xchg
adc
pop
dec
adcb
mov
cmp
loope
repz
cmp
pop
idivl
add
pop
and
or
jecxz
sti
push
xor
sbb
dec
movsb
pop
aad
sbb
cmp
js
lret
enter
mov
jae
mov
add
sub
in
test
shrl
push
fiadds
cltd
je
mov
jne
push
lcall
popa
loope
push
cmp
sub
mov
xchg
dec
adc
out
fdiv
mov
xor
dec
jne
add
mov
cmp
pop
cmp
mov
pop
cmp
mov
add
fisttpl
or
hlt
xchg
mov
mov
rorb
mov
jbe
fwait
jle
inc
sub
push
cmp
jbe
shll
pop
je
in
testb
lods
adc
mov
mov
xchg
andl
adcl
mov
xchg
cmp
dec
xchg
inc
mov
jb
jg
sahf
fwait
pop
sbb
adc
or
jne
jno
pop
aaa
or
push
cmp
call
call
test
mov
xchg
popf
shll
sub
leave
sbb
rclb
mov
js
xorb
js
add
pusha
push
cmpsl
inc
clc
hlt
cmp
and
jns
ds
mov
and
std
or
pop
dec
leave
cltd
ret
nop
ds
loope
inc
inc
pop
push
or
mov
dec
push
fnstcw
xor
jl
outsl
push
movsl
cld
ss
and
or
inc
push
inc
xor
push
push
mov
add
mov
imul
sahf
push
fisubrs
pop
jae
mov
cmp
pop
popa
inc
nop
dec
pop
lahf
loopne
lcall
adc
dec
cmp
lret
orb
cwtl
xchg
sti
in
repnz
ret
je
jmp
xor
push
jge
mov
cmp
xchg
inc
lds
sbb
js
add
cmp
rcrl
dec
mov
movsl
xchg
lds
push
stos
and
push
mov
pop
or
rol
jae
imul
or
ja
mov
jbe
stos
test
dec
push
inc
inc
testl
pop
push
aad
or
xchg
fcmovnu
out
xor
jle
pop
xchg
sarl
test
mov
jmp
pop
dec
les
pop
mov
enter
sub
inc
xor
orl
imulb
inc
in
addr16
add
test
xchg
es
mov
cltd
xchg
sahf
aad
sbb
dec
lret
xchg
into
jo
ja
inc
cmp
mov
xchg
lea
ljmp
addr16
cmpsl
arpl
repz
inc
pop
adc
std
jb
sahf
mov
filds
leave
and
inc
jns
ljmp
test
mov
rclb
mov
jle
jmp
push
dec
test
push
xchg
scas
cwtl
shr
movsb
lods
push
xchg
mov
out
xor
cmp
imul
adc
je
rclb
fdivs
adcl
and
test
das
sbb
lock
hlt
jbe
das
loope
fs
fst
pop
or
pop
jo
cmp
mov
push
scas
test
push
push
cmp
xlat
jle
mov
dec
cli
or
mov
cmp
jnp
dec
popa
or
sub
in
cmp
push
popf
jb
xchg
cmp
pop
mov
filds
insb
je
jnp
insb
out
xchg
cmpsl
adc
jnp
insl
shlb
add
mov
arpl
ljmp
in
adc
sbb
pop
loopne
call
mov
leave
adc
dec
sahf
imul
inc
in
es
lahf
xchg
aaa
int
pop
xchg
dec
lahf
je
jl
pop
adc
pop
and
shll
shl
jge
and
stos
mov
stc
stos
push
cli
test
filds
ss
pop
repz
jb
movsl
test
cmp
ffreep
xor
lock
andb
adcw
mov
pop
sub
add
sbb
xchg
lret
nop
xorl
outsl
out
dec
out
lret
pop
sbb
lea
xchg
add
cmp
fidivrs
push
bound
ds
jbe
shr
pushf
insb
sub
inc
outsl
xchg
xchg
outsb
jecxz
sbb
mov
push
jp
xchg
cmpl
pop
xchg
popa
jle
rorl
or
push
add
popl
cltd
fimull
sub
sub
andl
pop
outsb
dec
out
adc
push
xor
into
push
add
push
push
addr16
divb
mov
fdivrp
sub
movsb
push
inc
mov
push
mov
and
mov
cmp
in
mov
enter
iret
cld
mov
loopne
idivb
xor
push
jbe
fucomp
repz
repz
pop
fsubr
mov
add
stc
xchg
or
popf
call
les
sbb
pop
sub
scas
push
push
ss
out
pop
and
xchg
xorb
mov
sbbb
insb
or
aas
mov
cmpsb
add
fstpt
cltd
in
adc
shr
add
arpl
pop
and
cltd
push
leave
cmp
ja,pt
or
and
enter
pop
mov
cmp
call
adc
xor
add
adc
pop
add
mov
sahf
out
inc
leave
dec
in
mov
xor
mov
popa
negb
cs
das
inc
imul
rolb
mov
push
jno
lea
push
fildl
xor
mov
or
jp
mov
inc
dec
into
rclb
flds
push
sahf
mov
sarl
fbld
nop
cmp
mov
cli
jp
mov
mov
pop
jle
sbb
sbb
sub
sub
mov
push
jecxz
xchg
stos
imul
bound
popa
gs
ss
clc
push
call
xchg
jo
adc
in
inc
xor
in
std
mov
fiadds
in
aad
xor
es
fldt
mov
repz
xchg
push
daa
frstor
lret
jbe
es
sbb
jmp
movsb
in
aam
mov
mov
sbb
xor
or
cli
jmp
or
lods
fisubrs
push
int3
jl
out
lea
lret
xor
mov
cli
cld
in
mov
xchg
lods
sbbl
outsl
pop
mov
cmp
sub
int
pop
add
xlat
test
dec
movsl
sub
fistl
pop
pop
lods
js
aad
insb
lea
fisubrl
movsb
vpsllw
xchg
fbstp
lds
mov
gs
adc
jbe
push
imul
aam
inc
inc
enter
outsb
fnsave
fwait
push
filds
push
lock
loopne
jo
dec
ret
stc
test
sbb
mov
scas
sub
xorl
jmp
scas
test
and
in
xor
push
push
sbb
or
mov
ficoml
nop
call
popa
pop
pop
pusha
jo
push
scas
shl
fsubrl
jle
mov
push
nop
popa
std
mov
jle
mov
push
sarb
mov
inc
dec
lcall
push
mov
mov
inc
xchg
fimull
add
cmc
adc
popa
stc
dec
lret
mov
std
cld
test
inc
add
js
popf
cmp
adc
repz
mov
sbb
jne
pop
fbstp
and
daa
shl
jp
xchg
sbb
mov
push
loopne
ljmp
pop
ror
dec
aas
out
sbb
cmp
ret
into
xchg
cltd
xlat
stos
pop
dec
scas
fistpll
insl
sub
sub
das
cltd
pop
jg
jae
pusha
lods
mov
sub
rep
mov
xor
xchg
jb
loope
lea
addr16
and
hlt
pop
int3
addr16
inc
call
int
xlat
mov
fwait
mov
sbb
imul
jae
add
add
mov
jg
xchg
es
or
loopne
jns
inc
stc
arpl
or
loop
xchg
jp
jae
xor
popf
fimull
xchg
and
add
mov
cmp
cli
in
xchg
adcl
adc
mov
push
cli
inc
and
xchg
stos
movsb
cld
cli
add
aas
mov
insl
cmp
cmp
movsl
adc
lcall
pusha
dec
mov
scas
and
insb
or
imul
mov
jecxz
or
mov
shll
incl
dec
adc
or
dec
inc
lock
and
jge
cmp
enter
push
lods
adc
push
xchg
mov
lods
movsl
es
ret
xor
push
mov
inc
jae
adc
dec
cmp
adc
push
cmp
pushw
scas
stos
mov
addb
xchg
adc
sbb
sbb
int3
mov
mov
das
imul
xchg
jge
and
add
loop
fstl
mov
fwait
cmp
in
sub
daa
adcl
push
ja
pop
push
movsl
lock
dec
mov
notl
sahf
sahf
push
lea
sbb
sahf
cs
cwtl
fucom
pop
push
cmp
out
lds
push
test
dec
rcll
inc
lret
lcall
imul
and
rcrl
inc
mov
lahf
pushf
sub
dec
ret
cmp
rorb
orb
cwtl
push
dec
or
call
popf
push
stos
or
inc
xor
cmc
pop
fdivrs
sub
sbb
notb
lock
add
movsl
out
ja
inc
or
dec
inc
fbld
sti
mov
call
and
mov
dec
xchg
inc
inc
xor
mov
ja
js
xor
mov
lods
jp
sarb
adc
fisubrl
cmpsl
mov
clc
mov
add
fwait
ret
and
or
mov
pusha
out
clc
add
xchg
ljmp
sub
inc
lret
test
movsl
aas
fnstsw
sub
inc
lods
adc
syscall
mov
inc
popf
xchg
adc
fidivrs
push
paddd
add
adc
aad
sbb
mov
xor
aam
cltd
insl
in
pushf
inc
jae
mov
xchg
adc
mov
lahf
scas
inc
add
xlat
xchg
jb
ret
test
sbb
jae
xchg
ja
shll
shlb
and
test
repz
dec
les
call
push
test
pushf
stos
sarb
or
daa
loop
arpl
inc
outsl
pop
shr
fsubrl
sti
repnz
mov
push
loopne
and
or
mov
into
sbb
mov
outsl
dec
loope
subl
push
jp
or
cmp
lcall
jno
sar
std
pop
stc
pushf
addl
cmp
push
popf
cmp
aad
dec
fsts
xor
sub
in
push
xchg
inc
jl
sbb
inc
incb
sti
shlb
push
test
lcall
dec
out
push
and
repnz
popl
aas
adc
mov
lods
dec
cmc
xor
lods
sbb
dec
adc
rolb
movsb
xchg
xor
lds
cmpsl
movsw
cltd
lds
flds
repnz
cmp
push
rclb
into
lods
or
mov
inc
jmp
leave
dec
pop
ja
inc
add
lret
pop
mov
jl
mov
in
xchg
in
mov
lcall
add
inc
sbb
inc
or
out
js
pop
mov
andb
inc
cmpsl
fldt
adc
cmp
fstl
xor
insl
mov
aaa
xor
test
pop
mov
cmpsb
int
fstl
addl
xchg
jecxz
xchg
leave
sbb
sbb
shl
insl
cmpsl
addb
cwtl
test
jo
insl
mov
cmpsl
out
mov
lods
insb
pop
adc
push
mov
add
xchg
lret
mov
push
push
lds
arpl
sub
jbe
dec
sahf
push
dec
cltd
in
cmp
loope
in
mov
xlat
cs
mov
mov
shlb
subb
dec
jg
xchg
mov
mov
cmp
cmp
mov
ja
mov
sbb
dec
into
stc
push
mov
lret
sub
xchg
pop
out
xlat
cmpsb
test
roll
jle
mov
ds
jae
jg
push
and
test
pop
jle
mov
pop
xchg
adc
jo
xor
sbbl
pop
testl
sub
mov
pop
xlat
pop
popa
pop
addl
and
iret
cmpsl
cmpsl
les
inc
call
movsb
mov
aad
and
in
push
leave
mov
int
and
xchg
movsl
and
movsb
in
jecxz
adc
push
or
repnz
mov
loope
andl
loopne
push
sub
mov
inc
fcoms
cld
sahf
sti
jmp
call
loop
mulb
cld
lea
out
cmp
mov
movsb
shll
pop
leave
sahf
xchg
call
test
xchg
pop
out
cmpsb
pop
sbb
mov
fucom
mov
mov
dec
sub
xchg
inc
dec
add
sub
dec
mov
cmc
or
inc
push
test
pusha
and
and
cmp
mov
clc
xchg
aas
xor
ljmp
add
arpl
out
inc
push
add
test
stos
jp
loopne
sbb
ss
fsubl
cmc
mov
rcrl
aad
adc
inc
repz
mov
push
push
dec
in
cltd
push
cmp
lahf
fstl
ficoml
imul
xlat
in
xchg
xor
rcl
inc
ja
sbb
jb
stc
fwait
mov
popf
flds
and
push
lock
jg
je
inc
fwait
insb
int3
mov
xchg
aaa
inc
cmp
jbe
lods
sbb
in
pop
test
inc
push
push
mov
jne
lret
das
xor
loopne
mov
sub
inc
sahf
push
out
mov
pop
mov
hlt
shlb
cmp
stc
add
adc
ret
cld
out
xor
mov
sbb
in
scas
mov
pop
mov
lret
adc
imul
daa
out
sbb
and
mov
in
stc
mov
xchg
or
mov
sub
movsb
shll
lret
jno
je
fisubrs
outsb
mov
jge
push
movsl
pop
add
jb
shrb
mov
sbb
mov
loop
in
lock
adc
fcmove
sub
jbe
mov
fsubrs
movsb
push
mov
mov
pop
adc
mov
push
outsl
sbb
cmp
adc
add
nop
shll
adc
sub
mov
xor
jecxz
es
fldl
xlat
test
int
or
inc
ja
adc
lret
movsl
mov
or
and
xchg
in
rcrl
aad
das
test
out
rorb
push
inc
dec
cmp
out
add
mov
shll
add
push
ret
sbbb
clc
cld
mov
aad
gs
fcmovnb
xchg
push
aad
mov
dec
push
mov
aam
push
movl
in
xchg
pop
adc
lock
shll
or
negb
and
cmpl
cli
scas
mov
into
icebp
add
bound
cmc
dec
cmp
dec
lods
imul
outsb
test
push
inc
pusha
ja
sub
sub
mov
loop
data16
mov
out
mov
and
xorb
pop
ret
test
and
jno
std
testb
or
inc
rorb
loop
aaa
push
shlb
push
out
sub
jge
jge
std
and
roll
lar
push
push
insb
push
push
rcll
insl
pop
fistps
pop
mov
or
push
outsl
dec
scas
mov
addr16
outsl
test
mov
pop
outsl
jbe
mov
scas
bnd
or
lds
mov
push
pop
shr
lcall
mov
xchg
je
iret
adc
loopne
dec
hlt
or
mov
adc
dec
push
sbb
inc
xor
lds
mov
daa
repz
jno
cmp
ja
iret
movsb
enter
int3
lock
in
out
adc
push
and
ffreep
push
aaa
loopne
outsb
xor
ficompl
repz
xor
bound
in
cmp
or
cmp
inc
lahf
mulb
outsb
sbb
xchg
sbb
cmpsb
xor
out
loop
sub
idivb
popa
jb
imul
aad
shrl
mov
pop
jbe
movsw
cmp
push
cmpsl
test
add
daa
mov
push
xchg
fdivs
adc
xor
xchg
sub
fiaddl
aad
inc
lret
cli
mov
push
xchg
sub
push
pop
lret
cmpsl
xchg
pop
pop
mov
jl
in
mov
or
pop
xchg
stc
mov
jg
out
sub
jo
sbb
mov
out
and
iret
jecxz
clc
clc
add
mov
jmp
or
add
jle
mov
add
popl
stos
mov
adc
rol
mov
sub
or
sar
dec
popf
adc
dec
in
fnsave
int3
xor
mul
jbe
lods
pop
push
xchg
jns
mov
sbb
in
mov
roll
aad
jae
and
lret
rcll
orl
adc
mov
movsl
or
test
arpl
negb
je
add
in
fs
adc
xor
xchg
fisubs
js
dec
call
sahf
rcrl
jle
fistl
rcrl
cld
add
leave
das
adcl
sbb
push
and
shll
mov
sub
pop
cli
sub
stos
and
cmpsb
mov
xor
mov
xor
fmuls
mov
mov
movsb
and
rcrl
xchg
mov
add
cs
jb
add
in
jmp
cmp
gs
mov
push
and
clc
pop
add
add
es
mov
push
popa
dec
xlat
arpl
cmp
stc
push
test
sbb
rcrb
jo
lock
inc
imul
pop
add
in
fucomip
mov
fimull
mov
add
movsb
stos
inc
jnp
mov
loope
jmp
push
cmc
xchg
jmp
mov
not
mov
and
pop
mov
jp
push
or
push
fisttpll
scas
pop
insb
js
insl
stos
jle
pop
dec
pop
jnp
jecxz
scas
fwait
jl
movsl
sbb
sbb
orl
sahf
call
xor
or
jno
sahf
mov
pop
popf
xor
lcall
out
dec
push
dec
hlt
cmp
fwait
dec
jl
push
inc
pop
fsubrl
jle
cmp
xchg
dec
out
addr16
push
add
mov
xchg
movsb
adc
xor
sub
xor
stc
shl
and
or
pop
mov
out
rclb
jg
push
pop
xchg
out
xchg
ja
call
jecxz
xlat
inc
add
jns
adc
mov
dec
adc
pop
daa
outsb
fisubl
stos
testb
cmp
add
adc
cmp
xorl
dec
add
mov
mov
cmp
push
sub
lea
cmpsl
fwait
test
sbb
and
mov
pop
xor
pop
mov
movsb
push
loope
subb
aam
xchg
dec
push
mov
jmp
movsb
xchg
nop
jne
dec
cld
outsl
test
jns
cwtl
pushf
out
mov
lock
loopne
sti
data16
sub
test
int
movsl
dec
outsb
bound
adcl
mov
or
xchg
ds
adc
xchg
or
mov
jbe
add
lcall
sub
sarl
int
in
jb
js
pop
repnz
stos
mov
mov
mov
stos
lock
adcb
lods
icebp
sahf
out
push
sub
ja
ljmp
xor
loopne
sub
adc
dec
outsl
mov
cltd
fnstenv
cli
sbb
ret
test
sti
lahf
sbb
aad
push
cmp
and
iret
notb
pop
outsl
icebp
mov
leave
ret
push
inc
adc
jbe
jnp
jne
inc
add
movsb
inc
testl
sbb
in
push
ret
mov
js
and
jo
cmpsb
cmpsb
push
inc
add
stos
lods
es
addl
scas
adc
scas
pop
add
cmp
sbb
jge
mov
jmp
lods
and
xchg
jmp
data16
imul
imul
jecxz
jbe
inc
push
dec
xchg
cmp
cmp
sti
cwtl
sbb
xchg
test
out
fcmovbe
pop
xchg
inc
incl
xor
push
mov
lahf
push
or
mov
add
aad
cwtl
push
out
dec
into
cmp
cmc
inc
dec
insb
int3
fcomps
xor
mov
loopne
insb
mov
pushf
mov
sbb
ds
push
pusha
jp
sub
pop
icebp
jo
rorb
rcl
loope
in
int
pcmpgtd
xchg
sbb
pop
dec
add
adc
inc
mov
jns
sti
rcrb
jne
dec
into
adc
push
lea
xchg
jns
int3
cmp
or
mov
xchg
jbe
ret
mov
es
pop
mov
pusha
xor
xor
pushl
add
inc
and
mov
pop
adc
cmp
ljmp
mov
rcr
pop
pop
cli
adc
sub
cld
cmpsl
in
mov
pop
mov
fmul
xchg
cli
inc
test
ret
mov
or
lret
pop
stos
and
int3
pop
shll
sqrtps
aas
lods
mov
mov
pop
repnz
pop
shl
or
icebp
mov
and
mov
imul
xchg
jno
or
push
jns
call
das
je
add
mov
test
mov
outsb
sahf
push
mov
dec
mov
jb
xor
jle
stos
inc
jno
lcall
and
jp
push
cmpsb
ficompl
pop
test
gs
pushf
mov
fdivrl
or
xchg
adc
mov
add
pop
cmp
lcall
out
cmp
test
pop
push
stos
xor
pop
test
and
movsbl
inc
sbbb
cmp
sbb
pop
das
or
lret
out
insl
loopne
push
dec
xchg
ffree
or
out
jg
fadd
dec
popf
pop
adc
xlat
jns
mov
and
fsubl
dec
or
adcl
pop
aaa
aas
push
mov
xchg
push
dec
inc
repnz
andb
sub
xor
dec
lock
aam
rcrl
jne
test
cmp
and
test
lods
stos
jl
sar
push
insl
xchg
or
push
sub
std
out
rcr
cltd
cmp
lahf
mov
lock
jp
mov
xchg
add
mov
in
int
push
addr16
pop
jle
fs
popf
cmp
scas
imul
insl
test
push
daa
imul
test
mov
xor
xchg
cmpb
clc
hlt
scas
add
add
mov
mov
mov
xchg
dec
add
push
mov
push
adc
lahf
mov
fs
psrlq
xor
mov
push
test
aas
push
sarb
jbe
jmp
mov
jno
jne
pop
cld
ret
fisubs
jle
xor
mov
jle
add
adc
mov
or
and
pop
mulb
idiv
imul
int
aas
dec
jge
mov
bswap
loop
addr16
je
ret
or
mov
inc
shlb
nop
and
sbb
add
add
or
inc
cmp
loopne
xchg
fidivrl
es
arpl
push
jmp
inc
sub
imul
sbb
pop
jns
rcrb
dec
ds
popf
mov
xchg
sbb
xor
xlat
lret
insb
cwtl
jno
cmp
sbb
pop
sub
out
nop
xlat
lds
xchg
push
mov
jae
dec
mov
add
sbb
mov
nop
mov
insl
cmc
mov
cmpsl
enter
cmc
add
pusha
dec
iret
or
xchg
cmpsb
dec
jge
fwait
imul
or
jg
sub
dec
mov
std
mov
in
sbb
fisttpll
stos
stos
mov
xchg
ret
movsl
mov
inc
dec
pop
lods
adc
xchg
rcrl
sub
or
adc
push
or
das
push
jmp
std
shlb
xlat
or
cs
lret
cmp
add
pushf
cmc
sbb
cmpsb
sub
push
aas
and
pop
movsb
mov
femms
mov
and
and
mov
test
lods
mov
clc
test
pop
or
xor
outsl
sub
add
stc
push
cmp
insb
xor
call
mov
push
icebp
push
loopne
mov
test
cmp
xor
or
dec
sar
dec
mov
xchg
sbb
jnp
scas
sub
mov
ss
aam
and
mov
aaa
fwait
push
repz
addr16
mov
subl
mov
idivl
sarb
loopne
xor
and
mov
sub
in
cmp
add
adc
and
inc
outsb
cmc
popa
mov
dec
add
gs
sti
ss
jle
mov
push
clc
jnp
ds
pop
mov
in
xchg
jb
jp
dec
adc
cmpsb
mov
cmp
add
jmp
xchg
and
and
into
mov
movsl
testb
mov
cld
push
mov
mov
iret
push
mov
inc
mov
mov
push
arpl
pop
cmp
mov
inc
mov
sbb
test
cmp
orb
sbb
cmc
lahf
fimull
dec
lret
xlat
fsts
ds
or
inc
mov
jge
hlt
mov
mov
or
mov
testb
lock
lea
cmpsb
std
adc
pop
and
xchg
jne
pop
push
cltd
and
xor
ret
jae
insb
dec
daa
add
idivb
pop
mov
pop
out
cmp
pop
jp
mov
ror
int
sbb
bound
inc
add
push
sbb
das
in
adc
inc
mov
xor
les
jge
sbb
push
or
sub
or
cmp
pop
insb
adc
out
jbe
pushf
test
mov
sarb
imul
ret
mov
popf
aam
and
jbe
or
stos
cs
stos
rorb
mov
xchg
jae
inc
je
inc
gs
int
add
mov
mov
xlat
mov
mov
and
ret
mov
pop
test
into
popf
orb
sub
or
cmpb
push
int3
cltd
xchg
jle
fs
cs
lcall
iret
pop
add
mov
adc
sbb
add
sub
mov
push
sub
pop
mov
sbb
mov
fcomip
mov
dec
xchg
jecxz
jge
ret
mov
add
xor
sbb
shlb
jbe
add
inc
jmp
cmpsb
sbb
iret
push
jns
mov
xchg
lock
bound
jle
loopne
jp
outsb
ftst
cli
mov
cmc
lret
push
push
out
push
repnz
mov
push
xchg
pop
outsb
and
ljmp
out
inc
sub
test
movsl
cmp
fstps
pop
push
out
hlt
mov
outsb
scas
aam
pop
pop
xchg
enter
sub
int3
popa
mov
sahf
mov
lret
mov
adc
into
or
sbb
or
loope
lcall
xor
imul
jb
push
xchg
xor
call
fucomi
shlb
and
or
sbb
lret
notl
cwtl
aas
ret
loopne
jge
fmul
push
imul
and
test
xchg
and
inc
scas
loope
sahf
cltd
dec
enter
loop
and
dec
cli
ret
mov
mov
mov
pop
mov
xchg
mov
test
push
fs
and
addr16
jae
push
mov
jmp
mov
push
push
test
or
aaa
jg
outsb
xchg
outsl
iret
or
lahf
sub
cmp
xor
jae
out
imul
cmp
repz
dec
movaps
jp
outsl
pushf
jge
loop
pop
sbb
dec
jbe
xchg
push
imul
push
sub
dec
ret
inc
shlb
dec
jg
nop
xor
nop
hlt
cmpsl
scas
aam
sub
pop
stc
cwtl
xchg
loope
pop
mov
adc
inc
pop
xchg
mov
aas
adc
lods
cwtl
inc
lods
add
loope
fstps
cmp
adc
sub
jns
test
xchg
mov
inc
sti
jo
inc
out
inc
mov
xorl
push
outsb
hlt
leave
add
dec
cld
out
xlat
push
jnp
add
mov
mov
push
push
xor
jge
bound
test
sub
pop
ret
jl
lods
xchg
ljmp
in
jae
mov
jno
fwait
jae
cmp
mov
jnp
mov
shlb
out
imul
inc
add
inc
cmp
dec
xchg
shlb
mov
or
mov
in
pop
mov
daa
mov
mov
hlt
lcall
inc
sub
mulb
les
sbb
adc
outsb
mov
jae
push
sbb
dec
cmpsb
adc
inc
dec
js
dec
out
xorl
cmc
mov
pusha
xchg
or
add
fstpt
data16
stc
mov
or
in
lds
das
jne
xchg
daa
pop
pop
test
mov
lods
jle
stc
fwait
jns
lcall
lea
mov
cltd
sbbb
mov
subl
call
push
mov
mov
testl
jbe
sub
les
cld
mov
add
jno
xor
rorl
bswap
fldt
push
aam
xchg
repz
xor
into
aas
shl
adc
mov
mov
lahf
iret
pop
mov
mov
test
into
jnp
sahf
js
jae
paddsw
sarl
mov
fstps
insb
enter
in
arpl
sarb
inc
lret
add
sub
ret
ret
loop
imul
jnp
jge
popf
lock
sub
in
repz
jo
mov
push
insl
jl
call
inc
iret
add
in
push
sub
or
ljmp
pop
sti
insl
xchg
jae
aaa
es
and
lock
dec
jl
movl
cld
cmp
pop
out
in
ret
js
pop
xchg
and
insb
push
jno
sbb
mov
test
xlat
pusha
rcrb
and
add
xchg
leave
xor
or
jg
inc
jne
mov
int3
sbb
out
push
xchg
pop
mov
add
and
mov
cmp
xorl
xchg
out
ret
cmpsb
out
sbb
fs
fiaddl
mov
ds
aad
mov
sub
cmp
sahf
mov
sub
dec
cmc
and
jae
cmp
decb
mov
mov
push
push
std
imul
xor
mov
dec
std
mov
rcll
push
adc
mov
push
les
mov
repz
mov
mov
or
test
test
xchg
inc
loope
decl
cmp
and
mov
cmp
jns
pop
loop
mov
xor
cwtl
adc
jb
xor
bnd
mov
sahf
ss
mov
stos
sbb
fxch
pusha
popa
sti
ret
xchg
xor
rclb
pop
insl
aaa
xor
fsubrl
cmp
adcl
scas
or
jns
jl
sahf
mov
and
aaa
xor
lret
adc
pop
out
fsubs
stc
and
jbe
sbb
xchg
push
mov
int3
mov
add
call
mov
cmp
push
sbb
push
testl
daa
ret
dec
subl
inc
testb
cmp
cmp
fidivl
incb
push
out
jns
in
in
rol
clc
into
inc
dec
pusha
sbb
mov
cmp
push
mov
dec
adc
mov
pop
xchg
fistps
faddl
fcomp
stos
fstps
xor
mov
test
pop
stos
inc
bound
cmp
orl
xchg
mov
sbbb
test
enter
mov
les
xor
rclb
fidivs
shll
mov
cltd
inc
out
inc
repz
lea
mov
sub
pushf
ja
pusha
bound
mov
push
sbb
mov
mov
pusha
addl
scas
std
shll
mov
lcall
inc
mov
fdivs
pop
insl
pop
arpl
adc
dec
hlt
mov
pop
lret
or
jo
or
pop
push
imul
mov
js
es
ds
mov
xchg
out
lcall
inc
scas
aad
pop
rcr
outsb
fnstcw
pop
and
dec
test
pop
push
sub
pop
inc
subl
stos
adc
outsb
test
fwait
call
mov
push
sahf
add
mov
leave
pop
inc
cld
rcr
test
inc
in
ljmp
lods
mov
sbb
stos
test
mov
add
in
insl
or
cmp
into
push
adc
fs
int
sub
pop
std
pop
shrb
mov
loopne
xchg
mov
fwait
in
inc
mov
or
aam
mov
push
inc
or
and
addr16
stos
sbb
or
test
and
xor
out
lods
repz
mov
sti
push
and
scas
cmc
notl
mov
inc
mov
jecxz
jp
pop
aaa
stos
rorl
aam
push
lcall
add
jl
cmp
mov
mov
sub
loope
mov
push
or
xchg
sahf
mov
cmp
pop
xchg
cs
mov
adc
mov
stos
cli
mov
ror
stos
xchg
pop
call
or
insl
pop
mov
shll
push
mov
xor
push
sbb
adc
fsts
adc
pop
pop
movsb
out
and
movsb
sub
test
lds
mov
mov
jo
sub
ds
push
mov
fisubrs
adc
adc
jle
lcall
sub
cmc
xlat
inc
adc
push
rolb
cwtl
lods
das
and
aas
in
push
jg
hlt
ljmp
enter
out
add
xchg
rcrl
xor
sbb
call
and
aad
inc
mov
hlt
sbb
roll
pop
xchg
push
xor
cs
cmpsb
lea
gs
mov
aam
sub
xor
or
pop
pop
mov
ficompl
xchg
lcall
fisttpl
stc
cmp
push
push
mov
jle
add
sbb
jns
or
push
adc
mov
fisttpll
jge
and
in
inc
in
cmp
add
inc
or
imul
mov
pop
bound
cmp
dec
ja
xor
nop
and
or
jne
aad
cmpb
mov
adc
daa
movsl
test
call
test
ljmp
rcr
adc
ret
pop
lret
clc
xor
inc
lods
mov
push
nop
push
xor
sti
lods
iret
imul
aam
movsb
adc
lods
lock
filds
popa
loope
xchg
xchg
or
and
jno
xchg
enter
hlt
sar
mov
mov
xchg
inc
stc
push
inc
inc
es
ret
in
scas
adcl
xorl
int
adc
fcoml
and
push
repnz
adcl
daa
dec
dec
push
aas
push
mov
sub
jns
clc
rol
adc
test
jns
pop
inc
jp
push
jnp
loope
scas
ret
sbb
sbb
es
lods
lods
arpl
mov
icebp
and
pop
mov
int
and
jmp
ds
imulb
out
dec
push
mov
sbb
add
mov
loopne
jecxz
ja
pushf
je
xor
out
ficompl
adc
lahf
ja
push
data16
lret
sub
inc
loope
fistpl
cmc
jne
mov
int
movsb
cld
enter
repz
push
data16
call
push
jmp
add
hlt
les
xor
inc
scas
and
jno
push
fisubl
or
ljmp
push
push
dec
and
and
adc
je
pop
loop
or
inc
add
sbbl
fs
jg
pop
pop
or
stc
push
jecxz
pop
xchg
or
xchg
mov
push
xchg
mov
aas
xorps
arpl
mov
push
mov
and
mov
and
mov
mov
sbbb
pop
js
in
pop
or
mov
add
xor
cmpsb
mov
xor
pop
adc
out
push
push
push
arpl
sbb
imul
popf
add
ja
add
jo
loop
sub
mov
mov
adc
jb
mov
push
psubsb
mov
jg
push
sarb
and
scas
cmp
ds
push
xor
jno
mov
ljmp
mov
leave
sbb
aam
addr16
pusha
pop
stos
fsubr
rcll
cwtl
pop
loop
and
pop
push
xchg
push
call
mov
nop
cwtl
xchg
jns
ljmp
or
std
xchg
scas
adc
mov
ss
jno
repnz
sahf
jl
mov
inc
daa
sbb
fstpt
inc
mov
pusha
sub
mov
daa
add
insb
leave
into
test
stc
xor
xchg
sub
fiaddl
adc
jno
cmpb
lcall
sahf
and
in
ds
popf
imul
out
pushf
std
js
xchg
out
mov
or
cltd
jg
fstpt
int
or
cmp
cmpb
out
movups
mov
mov
les
xor
adc
outsb
or
mov
lock
jmp
divb
add
jecxz
fwait
fs
inc
cmp
jo
fnstsw
and
aaa
stos
test
sub
addl
pop
jo
cmp
inc
lcall
int
xor
push
repnz
xchg
ja
mov
fsubs
dec
lcall
bound
jno
inc
mov
or
mov
jmp
sti
mov
cmpsb
repz
mov
xor
incl
arpl
repnz
ss
or
dec
cmp
dec
lods
insl
xor
mov
pop
and
adc
mov
stos
movsl
pop
dec
into
js
cmp
es
add
inc
scas
fld
popf
and
push
cmp
mov
sti
imul
push
gs
mov
cwtl
sbb
mov
test
jmp
daa
mov
dec
sbb
lahf
jecxz
sbb
cmp
cs
std
popa
pop
mov
sub
mov
ds
push
cmp
in
pop
or
jbe
and
imul
movsb
push
or
dec
jmp
jmp
sti
dec
sti
jge
sub
cmp
mov
sbb
aaa
and
push
aam
push
insl
mov
lcall
aaa
ret
in
mov
sbb
sti
test
or
pop
mov
adc
jecxz
fisubs
in
test
and
adc
fisttpll
cmpsb
sub
sub
sahf
or
out
pop
push
popf
mov
movsl
dec
xchg
jo
mov
addb
stos
das
sbb
aam
push
or
add
or
shrb
sti
ljmp
dec
dec
mov
add
add
rcl
xchg
or
mov
fcmovnu
pop
jns
sbb
fimuls
or
add
xor
lahf
mov
imul
sahf
jno
jno
or
lock
jp
and
js
fwait
sahf
push
and
sbb
mov
clc
mov
test
mov
arpl
out
stos
mov
or
sbb
or
stos
or
hlt
mov
xor
shlb
enter
push
lds
cltd
lahf
sbb
pop
or
pushf
subb
mov
jmp
mov
sub
in
sahf
or
push
lods
dec
or
xor
mov
loope
cmc
or
ds
sbb
cltd
cltd
pop
sbb
movsb
flds
cmp
movsb
adc
call
pop
mov
mov
sbb
xor
sbb
xchg
leave
sahf
push
mov
aam
jae
out
pop
inc
push
dec
mov
addr16
popf
xchg
mov
push
or
cmp
dec
sarl
into
mov
pop
sbb
aaa
js
nop
popa
push
sbb
aas
or
cmp
cmp
lds
daa
cmp
xchg
add
out
mov
fstl
imul
mov
ljmp
mov
cs
pop
adc
jns
les
adc
mov
insl
in
pop
shll
lds
or
inc
addr16
and
nop
clc
addr16
mov
push
mov
rclb
or
outsb
mov
adc
pop
jo
or
sti
mul
cld
sbb
in
idivb
imul
fadds
xor
iret
xor
sbb
mov
cwtl
into
push
pusha
ds
mov
sub
mov
push
push
into
test
inc
mov
popf
xor
imul
and
jbe
push
stos
mov
movsl
inc
jnp
mov
pop
pop
mov
jecxz
pop
push
push
mov
pop
out
push
lret
xor
dec
fimuls
and
jg
stc
rcl
jne
pop
repz
loop
scas
das
mov
outsb
gs
push
pusha
loop
shll
aam
sub
push
xchg
hlt
adc
sbb
push
subl
cmp
repz
lods
xlat
pusha
ret
inc
xor
add
xchg
cmp
das
bound
pushl
jno
jnp
dec
mov
dec
pushf
pop
fisttpl
adc
mov
cmp
xor
movsl
lock
movsb
add
insb
test
mov
outsb
xchg
ss
sub
lds
data16
mov
and
lods
and
xchg
dec
mov
mov
negl
pop
aad
xor
sbb
cmp
in
mov
in
push
clc
ret
cwtl
sbb
mov
fstpt
test
add
cmp
aas
hlt
scas
mov
jae
aam
test
adc
in
cmp
mov
jae
mov
push
mov
cmp
push
cwtl
mov
subl
jle
sahf
insl
sbb
push
xchg
outsb
or
adcl
inc
sti
leave
mov
push
xor
loopne
xchg
aas
in
arpl
ja
adc
mov
pop
lret
jmp
sbb
je
out
mov
and
pusha
movsl
stos
dec
imul
testl
xor
push
push
pop
addb
test
push
dec
lcall
int3
xor
add
mov
push
push
dec
enter
mov
inc
lods
jns
mov
push
cmp
int
sbb
mov
xchg
insl
inc
jne
dec
sub
cmc
pop
test
and
or
enter
push
sbb
adc
pop
call
pop
or
arpl
xor
and
mov
jecxz
sahf
pop
outsl
mov
iret
flds
mov
sub
loope
rol
cltd
fsubl
and
in
mov
jae
push
test
cmp
inc
inc
aam
push
lcall
sub
pop
and
nop
mov
inc
jp
and
cmpsb
xor
cld
sbb
or
sbb
call
jg
mov
rorl
cwtl
push
mov
and
mov
ss
out
fbld
push
jmp
jle
ficoml
dec
cmpsb
push
das
mov
jns
ja
ljmp
push
fistpll
dec
xchg
lea
test
lahf
lea
call
aam
mov
add
and
pop
addr16
xlat
xchg
xchg
test
mov
daa
les
add
leave
out
fdivl
jge
aas
das
and
div
jnp
insl
or
mov
loop
dec
ds
push
stos
fdivl
jecxz
in
popf
xor
jns
sbb
enter
test
sub
shlb
ljmp
mov
js
dec
mov
jge
mov
adc
add
fists
inc
iret
rcrl
jmp
dec
pop
dec
cld
aad
jne
mov
loope
bound
out
bound
mov
into
mov
xchg
jae
fmuls
and
cld
xchg
mov
divb
add
mov
fdivrl
add
test
mov
and
mov
push
pop
dec
into
mov
rclb
adcb
stos
int
mov
push
inc
mov
int3
js
outsb
int
push
pop
mov
and
cltd
fdivrp
adcb
cmp
pop
xchg
or
cmp
les
push
incb
sub
sbb
jge
push
push
jnp
and
lret
xchg
pop
mov
loopne
hlt
insl
outsl
fildll
ljmp
push
int
add
jge
jecxz
lea
leave
mov
inc
pop
cwtl
dec
push
loopne
int
aam
xchg
cli
pop
mov
push
jnp
mov
sbb
inc
inc
mov
imul
cmpsl
test
xor
dec
jb
pop
fwait
jae
inc
xchg
dec
or
jo
mov
inc
pop
sbb
jge
ljmp
loop
loope
fidivl
ret
mov
mov
jne
adc
lods
inc
cld
mov
mov
out
mov
rolb
inc
adcb
xor
out
xor
push
lock
inc
lcall
mov
pop
mov
stc
adc
prefetchw
shrl
sar
mov
js
repz
popf
sbbb
addl
je
movsl
fistpl
cmp
sub
int3
int
jg
pop
xchg
ficoml
shll
adc
sub
fstpl
int
pop
test
pop
jle
outsb
fucomi
out
into
lock
sbb
imul
or
imul
test
mov
inc
mov
xchg
push
ds
out
loop
xchg
add
std
addr16
jg
lods
nop
imul
js
xchg
scas
das
sbb
subb
movsb
cld
ds
bound
mov
adc
push
addl
mov
test
or
sbb
sbb
jp
loopne
pop
test
add
jmp
xchg
inc
push
cmp
sub
loopw
cmp
and
in
adcl
add
push
xchg
and
push
int3
lock
or
movsb
push
pop
pop
inc
out
mov
xor
fistl
inc
arpl
pop
cli
mov
je
sub
popf
loop
imul
orl
mov
push
mov
inc
divps
jbe
mov
sub
pop
push
lret
xor
addb
int
jg
test
je
mov
adc
cltd
lret
or
mov
xchg
xor
je
adc
push
test
xor
add
sti
xor
stc
fsubl
adc
xor
pop
out
les
cmpsl
les
xlat
cmp
pop
or
shll
push
or
aam
or
bound
imul
mov
cwtl
xor
ret
jle
arpl
mov
sub
stos
mov
and
mov
jns
sub
pop
adc
cld
add
or
cmp
or
xor
pop
test
rcr
mov
stc
mov
mov
jae
aaa
jne
ljmp
scas
call
pop
pop
pop
lock
sub
inc
jno
int3
int
out
lea
sbb
dec
xchg
out
dec
inc
ret
daa
jp
mov
xchg
fcomps
lods
lret
lret
xchg
sub
jno
mov
lcall
dec
xchg
imul
pop
out
icebp
dec
push
movsl
sbb
jo
pop
ss
out
aaa
cltd
sbb
mov
push
inc
push
pop
adc
sbb
shrl
das
dec
pop
sub
ds
jmp
lods
bound
mov
sti
sub
vaddps
mov
dec
outsb
add
xchg
fnstenv
stos
loope
sub
add
mov
std
pop
cltd
shlb
out
iret
xor
inc
stos
icebp
mov
cli
or
xchg
test
mov
mov
in
sbb
das
and
mov
mov
xchg
jg
inc
pop
mov
mov
cmovne
cmp
jns
aaa
ret
pop
fwait
sub
test
test
lds
inc
and
mov
and
sbb
mov
mov
mov
aaa
cmp
pushf
cmp
enter
mov
mov
jns
arpl
adc
mov
mov
and
jnp
pop
and
scas
ja
aas
dec
jle
cli
jnp
mov
jo
push
insl
shrb
push
push
dec
pop
mov
inc
insl
stc
das
lea
clc
lret
divl
bound
aaa
sbb
pop
lock
xchg
adc
inc
mov
mov
cmp
jmp
stc
dec
popf
test
fsub
jae
jae
jae
std
fs
hlt
xchg
mov
test
mov
fldenv
into
fcomps
xor
cmp
push
and
adc
sub
fs
sub
xor
cmp
or
imul
mov
mov
push
cmpsl
sub
jmp
imulb
stc
inc
jge
adc
push
fisubrs
movsl
jno
or
scas
inc
cmc
push
lret
sbb
sbb
incb
insb
fs
int3
loop
push
mov
stos
les
mov
les
mov
daa
ret
gs
add
cmp
mov
mov
push
not
cmp
xlat
jno
add
call
mov
test
adc
inc
pop
imul
ret
sub
mov
xor
in
out
push
mov
sarb
push
xor
repz
nop
mov
adc
sub
xchg
jmp
lret
cmp
cld
jbe
sub
inc
icebp
inc
fnsave
add
and
adc
fdivrl
imul
fists
stos
into
and
cmpb
xor
xchg
in
and
jnp
inc
or
xchg
push
adc
les
call
sub
dec
cwtl
clc
xor
shr
ljmp
or
add
iret
rorl
cmp
mov
inc
out
add
adc
pop
iret
xchg
dec
fmulp
inc
pop
inc
ds
add
shld
xor
or
test
nop
repz
sbb
jmp
pop
sub
xor
push
add
adc
lret
loopne
mov
loopne
div
and
fldenv
xchg
xor
jmp
out
add
pop
cltd
in
ja
lret
xor
repnz
mov
jo
xor
lock
jge
icebp
rcll
pushf
stc
in
ds
shlb
icebp
stc
xor
and
int
and
inc
sub
or
das
scas
pushf
and
inc
xchg
pop
dec
xor
cmpsb
add
mov
xchg
decb
leave
and
divb
add
sbb
xor
aad
mov
add
pop
lret
xchg
push
bound
push
push
push
mov
jb
lahf
mov
and
fwait
inc
sub
xlat
and
sub
or
cli
inc
aad
inc
in
xchg
mov
dec
popa
mov
push
lcall
cmpsl
out
enter
js
insl
outsl
mov
sub
fs
xor
popf
scas
test
test
mov
cmp
ss
mov
xchg
jae
sbb
xchg
or
and
dec
jl
xchg
imul
ljmp
or
dec
push
xchg
popa
shrb
jnp
dec
hlt
call
cld
popa
rorl
sbb
int3
ret
outsl
popa
and
fcmovnu
push
mov
repnz
mov
jne
ret
lods
lcall
xchg
mov
lods
hlt
jle
adc
cmpsb
ds
scas
xlat
cmp
mov
fucomi
mov
inc
cmp
push
in
inc
mov
or
or
negb
mov
out
imul
std
dec
data16
ja
xchg
push
adc
inc
mov
into
inc
xchg
outsl
sub
add
popa
push
cld
jne
adc
cmp
and
sub
out
adc
xor
adc
int
bound
mov
add
fcomip
pop
sarl
sti
enter
popf
dec
lcall
jle
insb
outsl
into
mov
hlt
outsl
mulb
sbb
push
mov
insl
jl
cmp
push
or
xor
push
and
inc
push
mov
add
jmp
sub
xor
jl
pop
iret
loop
xchg
cs
pop
adc
push
ds
push
adc
sbb
andl
xchg
lods
cld
sub
frstor
mov
mov
lret
xchg
mov
lock
repnz
xlat
mov
icebp
add
sarl
cmp
iret
sub
sbb
cmpsl
jge
ds
fdivr
xor
mov
pop
jno
xchg
rclb
scas
xchg
push
gs
fwait
movsb
and
mov
jb
cli
js
out
subl
stos
cmp
pop
sbb
inc
adc
mov
adc
stos
aaa
jmp
jge
in
lcall
pop
adc
xor
xchg
mov
push
shll
hlt
and
mov
sbb
mov
ret
push
jns
xor
pop
insb
test
push
je
stos
push
out
jp
xchg
and
xor
pop
sti
sub
into
out
mov
dec
dec
cmc
pop
call
xchg
fbld
jbe
sahf
xchg
ljmp
jo
sub
dec
in
dec
and
je
sbb
mov
mov
negl
mov
loop
jg
mov
jo
out
pop
ljmp
test
ds
xchg
das
addr16
cli
icebp
mov
push
es
les
adc
sbb
jecxz
xor
push
inc
sti
push
push
xchg
or
fdivr
or
subl
fmuls
fs
add
subl
lods
rol
xchg
test
in
pop
or
mov
test
mov
das
adc
cwtl
xchg
or
rorb
imul
das
ss
add
jo
xor
cmp
sbb
lock
jne
cld
imul
stos
mov
and
into
scas
or
inc
fld
fisubrl
sbb
xchg
xchg
dec
stos
jb
jb
lcall
in
cmp
dec
loop
cwtl
pushf
cmp
outsb
sbb
inc
clc
sub
jle
cmp
sub
add
inc
setle
xor
mov
jae
je
stc
push
mov
xlat
sub
xor
mov
inc
mov
repnz
sbb
cs
push
int3
or
xchg
add
pop
mov
mov
mov
pop
addl
fcmovbe
mov
loope
mov
test
rcll
xchg
mov
andl
jo
mov
mov
dec
std
sub
mov
fnstenv
in
cmp
sub
data16
inc
cmpsb
adc
clc
xchg
sbb
das
pop
pop
outsb
or
sub
sbbl
cmc
arpl
jbe
mov
in
in
adc
xor
xchg
movsl
scas
repnz
sub
pushf
popa
sbb
mov
shrb
mov
jle
cltd
add
xchg
shl
mov
or
clc
dec
adc
loope
jg
fiadds
leave
mov
aad
or
out
imul
test
rclb
sbb
cmpsl
or
push
pop
in
inc
enter
adc
fimull
cmpsb
sahf
pop
mov
lcall
jnp
adc
mov
mov
rcll
pop
adc
mov
into
push
cltd
js
pop
push
mov
xchg
movsl
cs
xchg
xchg
xor
pop
rorl
clc
cmpsb
pop
pop
outsl
in
ret
mov
fadd
hlt
xchg
lods
int3
cmp
lods
push
gs
xchg
in
lds
les
adc
cmp
je
push
adc
test
ss
ficomps
xor
add
out
sti
cmpsb
mov
push
rcrb
cmp
fs
les
mov
int3
subb
xchg
xchg
scas
scas
data16
pop
ficompl
enter
arpl
jle
pusha
jno
inc
inc
and
mov
orl
iret
or
outsl
loopne
mov
mov
cmp
pop
repnz
inc
mov
cmp
repz
mov
pop
aad
pop
push
loop
out
stos
xor
ss
loope
push
insb
daa
pop
mov
mov
jecxz
inc
scas
ficoml
lods
adc
push
pop
jae
sub
shrb
pop
sti
xor
mov
scas
pushw
repz
inc
inc
ja
xor
sbb
xor
in
es
daa
pop
add
popa
add
sub
js
and
push
divl
or
mov
aam
jae
loope
fs
cmp
mov
fwait
lret
insl
daa
repz
hlt
in
pop
pop
out
es
cmp
lret
pop
xchg
cmpsl
mov
or
inc
rol
cmp
xchg
xchg
sti
lods
mov
cs
push
inc
jne
xor
icebp
fcmovb
jnp
mov
inc
mov
xor
test
push
and
xadd
fldenv
pop
fdivs
addr16
stos
lods
iret
inc
aam
imul
out
sub
stos
arpl
dec
hlt
clc
js
vunpcklpd
add
cltd
pusha
lret
mov
pop
push
in
loope
int
aaa
out
pop
mov
xchg
jb
sub
in
add
jno
fwait
stc
scas
xor
mov
mov
idivl
dec
inc
xchg
cmp
and
outsb
rep
negl
mov
popf
add
xchg
out
in
hlt
int3
push
mov
ret
andb
pop
sbb
jbe
xor
arpl
aas
mov
push
pop
jb
jnp
mov
xlat
ret
mov
out
sbb
das
scas
mov
pop
not
jmp
sub
lahf
wrmsr
inc
jmp
xor
ja
gs
mov
cmp
push
push
enter
sbb
or
in
fcoml
or
es
pop
fwait
pop
daa
outsl
stos
mov
loopne
mov
filds
movsb
mov
push
jge
or
hlt
inc
dec
inc
xchg
lods
mov
add
out
fisttps
aam
jbe
and
movsb
mov
dec
pop
xchg
push
cmp
mov
pop
enter
aad
jns
mov
lds
aaa
mov
mov
inc
shll
aaa
xchg
cmp
jl
jg
dec
xor
pop
pop
popa
stc
test
insb
sti
jmp
pop
sub
sub
jmp
shr
pop
mov
lcall
cmpsb
sub
icebp
sbb
and
in
add
dec
into
jecxz
outsb
push
sub
test
decl
push
jecxz
pop
mov
adc
iret
mov
add
sbb
push
iret
jg
push
push
xor
cmpl
movsb
sbb
addr16
xor
mov
xor
mov
mov
xchg
push
aaa
call
push
xor
push
mov
ljmp
movsl
lret
jle
iret
mov
mov
lahf
or
pushf
fldcw
ljmp
andl
lret
sub
lds
inc
push
stc
mov
imul
jne
and
xchg
aad
shll
int3
mov
mov
mov
mov
es
jae
and
mov
sbb
mov
out
ds
sahf
std
xor
out
sub
ljmp
cmp
insb
into
loope
inc
inc
inc
xchg
mov
imul
add
push
out
pop
imul
push
mov
roll
or
push
inc
mov
sub
jne
dec
sbb
xor
sahf
popf
or
xchg
and
adc
enter
adc
popa
jmp
mov
mov
aaa
imul
clc
pop
or
nop
push
mov
adc
push
push
outsb
repz
in
pop
mov
sarl
cltd
imul
dec
xchg
add
mov
cmp
imul
insl
cmpsl
push
xor
rol
push
adc
imul
mov
jge
or
hlt
xchg
test
mov
add
gs
jae
jnp
and
lcall
push
jmp
cli
insb
mov
sbb
data16
xor
jp
aad
or
lcall
lret
hlt
push
push
cmp
leave
or
push
leave
repnz
mov
xor
mov
je
sub
cmc
mov
add
sbb
jnp
mov
filds
or
adc
ljmp
or
aam
repz
rcrb
inc
lcall
int
mov
push
iret
xchg
mov
and
in
aad
mov
push
push
insb
pop
fs
iret
sub
popf
leave
xchg
xor
into
les
idivb
push
int
pop
mov
jmp
inc
insl
push
sub
cmp
addr16
adc
xchg
rcr
mov
out
sbb
jns
xor
test
in
or
inc
mov
mov
js
loopne
xchg
lahf
pop
dec
push
and
push
xchg
ret
mov
out
test
xorb
jbe
enter
sbb
sahf
add
sbb
std
sahf
mov
sbb
int
or
fstpt
fistl
sub
ret
inc
rcrl
mov
mov
adc
popf
popf
xor
decb
mov
cs
cmp
and
dec
sub
ja
pushf
inc
sub
lcall
loope
repz
inc
sbb
in
call
sub
sbb
xchg
mov
mov
lods
out
out
aad
cmp
psubd
mov
xchg
dec
and
popa
push
push
ret
mov
xchg
jmp
push
push
jbe
push
adc
cwtl
pop
popf
daa
adc
xlat
fwait
mov
mov
loopne
sbb
adc
out
enter
push
pop
ret
jmp
cmpsl
ffree
xlat
lret
les
add
and
add
pop
sub
push
xor
movsl
inc
mov
and
jle
jge
jae,pn
inc
xlat
call
test
dec
arpl
mov
xor
mov
adc
add
dec
xor
loop
stos
mov
shlb
fildll
jo
push
jne
rorb
xchg
mov
and
incl
xchg
xchg
movsl
mov
mov
mov
pop
xchg
jb
mov
es
xor
daa
sub
dec
test
mov
ret
xchg
hlt
outsb
cld
or
repz
shll
mov
add
jmp
fiadds
cs
jne
adc
and
mov
loope
adc
imul
int
push
out
aaa
sub
mov
addr16
jmp
std
mov
mov
jl
jl
or
jbe
negb
push
mov
dec
mov
push
mov
sub
lcall
push
cmp
call
ljmp
test
stc
out
jg
lock
xchg
fnstsw
xor
addl
sub
fs
pop
stos
fs
loopne
data16
dec
jge
mov
lea
or
sub
xchg
mov
push
in
aad
rclb
test
mov
mov
aaa
xor
push
lret
push
rcll
adc
mov
or
icebp
int
scas
sbb
cmpsl
mov
stos
jnp
daa
popf
push
dec
dec
inc
jp
ret
sarl
add
scas
iret
jae
dec
shlb
rclb
imul
mov
pop
movb
and
and
fistl
mov
js
in
xchg
mov
ret
jns
jmp
xor
mov
push
add
sbb
cwtl
test
lahf
ljmp
cmp
loope
and
stc
sub
pop
sub
sub
push
fldt
inc
cmpsl
push
cs
push
subl
xchg
pushf
scas
or
sbb
lods
pushf
xchg
icebp
jle
mov
xchg
adc
mov
jae
lds
mov
push
push
aaa
fiaddl
addr16
test
das
ret
jo
mov
mov
push
pop
and
adc
nop
cld
ret
imul
push
sub
fstpt
xlat
ljmp
ret
pop
sbb
into
push
xor
inc
adc
imul
repz
xor
adcb
mov
push
dec
and
pop
rclb
inc
call
shll
inc
insl
enter
fdivs
fs
dec
mov
outsl
mov
stos
lock
and
lds
ffreep
dec
aam
mov
call
xchg
and
popf
or
out
call
sbb
jle
add
adc
fwait
xchg
mov
jl
test
mov
pop
sub
gs
and
repz
xchg
sub
outsb
push
test
inc
or
and
out
fs
jge
aaa
mov
dec
inc
lods
ja
pop
decl
jns
mov
inc
and
jae
xchg
icebp
and
pusha
loopne
add
sbb
adc
xor
outsb
imul
lcall
or
push
sti
or
test
popf
adc
push
mov
mov
jae
cli
jno
inc
ja
aas
or
outsb
sub
adc
pop
adc
jmp
mov
mov
cltd
jo
outsb
or
inc
clc
jbe
xorb
jl
in
in
aad
adc
dec
bound
jae
sbb
mov
xchg
movsb
add
push
in
rorl
mov
jle
stos
xor
pop
mov
jmp
ds
aad
sub
dec
add
jp
stos
mov
mov
jg
jae
sysexit
jg
sub
mov
sub
stc
insb
or
in
int
dec
or
ljmp
inc
lods
aad
add
scas
mov
sbb
inc
leave
stos
sub
test
iret
xchg
cmp
je
mov
addl
mov
repz
cmp
popf
add
mov
aad
pop
inc
inc
lds
sbb
mov
jl
xor
dec
sbb
or
sub
mov
adc
lcall
ss
nop
lock
and
add
or
xor
cs
xchg
int3
mov
sbb
push
stos
mov
cmp
push
out
mov
andl
xchg
test
adc
insb
out
inc
pop
sbb
jae
xchg
popf
inc
es
add
ret
negl
jecxz
pop
movsb
inc
lret
repz
rolb
into
insl
cld
dec
xor
es
int
sbb
inc
dec
enter
mov
inc
adc
imul
mov
mov
out
lds
gs
or
cs
adc
dec
inc
loopne
sub
dec
xor
stos
mov
lods
ja
les
pop
iret
repnz
fnsave
mov
dec
outsl
test
enter
dec
xchg
xor
int
fs
jb
pop
mov
cmp
dec
cmpb
aaa
call
add
lods
adc
fimull
mov
arpl
or
push
cwtl
adc
cmpsb
xchg
lret
or
enter
sbb
nop
lret
fiadds
cmpl
es
rolb
mov
sub
fisttps
pop
dec
add
mov
stc
jg
sbb
and
sub
pop
cmpb
sbb
mov
mov
sbb
jb
cltd
scas
dec
pop
inc
lods
negb
pop
in
lea
int
mov
jecxz
ret
and
ffree
mov
mov
movsl
jbe
adc
jnp
aaa
push
jl
jge
stos
mov
push
xchg
out
add
ss
call
shl
mov
pop
out
pop
mov
dec
push
sub
add
decl
clc
jae
pop
adc
jge
xor
pop
mov
cmpsb
je
out
cmp
jns
sbb
int3
inc
adc
and
loopne
xor
ss
push
pusha
jno
push
mov
popa
out
dec
test
cltd
jecxz
xor
fwait
test
aaa
xor
ljmp
cmp
cmp
and
dec
sar
mov
pop
add
add
xor
push
inc
lods
and
inc
mov
test
jmp
pop
sbb
std
lea
rcll
daa
out
jb
push
and
scas
pop
cltd
sbb
gs
xchg
xor
cmpsl
or
pop
xorl
xchg
mov
push
jae
pop
roll
rcl
int
leave
and
adc
hlt
das
and
adc
add
addr16
xor
xor
push
adcl
cmp
addr16
je
mov
mov
push
mov
lods
sahf
pop
fisubl
inc
push
test
inc
hlt
sbb
push
lods
cltd
push
enter
cmpsl
sub
xchg
add
or
pop
scas
out
jl
and
fiaddl
scas
pop
mov
or
stc
dec
out
js
jmp
mov
dec
xor
aas
and
adc
pop
dec
dec
negl
cmp
lea
inc
cmp
aaa
outsb
in
es
adc
ret
dec
jno
mov
aad
sbb
lcall
fnstenv
scas
mov
out
call
or
shrl
xchg
push
fildl
push
mov
pop
outsl
sarl
jno
leave
repnz
sub
sarl
mov
xor
les
outsl
je
sbb
sub
shlb
jmp
mulb
ljmp
int
das
fists
les
mov
stos
aaa
loopne
repnz
enter
pusha
mov
les
rolb
pop
xor
xchg
mov
mov
mov
test
xchg
loop
test
sub
shll
mov
icebp
sahf
std
aam
aaa
repz
push
and
movsl
mov
add
imul
out
dec
sahf
into
cmp
bound
out
add
dec
xlat
cmp
xor
add
cli
out
push
arpl
dec
jmp
xor
xorb
mov
pop
clc
sahf
mov
mov
push
bnd
jp
or
push
inc
mov
arpl
movsl
pop
pushl
add
pop
filds
and
wbinvd
xchg
and
dec
xchg
mov
fisttps
shll
inc
push
dec
in
pop
je
adc
mov
cmp
movsb
inc
jo
xchg
fisttpll
cmp
mov
cmpsb
jne
dec
mov
sub
dec
ja
rolb
mov
nop
insb
repnz
pop
sub
lods
mov
mov
sbb
fadd
mov
aas
notl
pop
and
shr
and
jmp
sub
movsl
push
cltd
popa
call
jns
scas
sti
out
repnz
orl
mov
mov
inc
push
push
mov
sub
pop
mov
dec
dec
push
cltd
call
adc
stc
and
ljmp
fs
or
sub
enter
and
jmp
and
sbb
pop
jnp
mov
int
negl
cltd
rolb
rolb
cmp
movsb
xor
mov
je
cmp
mov
cmp
ja
mov
jge
xor
rcrb
add
sbb
repnz
cmp
inc
lret
stos
push
mov
add
mov
dec
fisubs
push
aaa
and
mov
pop
rclb
mov
cmp
fisttps
pop
pop
add
jge
repz
cmc
and
xchg
xor
push
inc
jle
testb
aad
add
mov
sub
repnz
xorl
rol
xorl
shll
test
xor
lods
out
in
push
mov
jg
mov
pop
ret
je
mov
xchg
out
aam
movsl
cmc
push
adc
sbb
imul
fisubs
subb
test
mov
in
cmp
sbb
cs
cmpl
loop
negb
mov
jae
mov
cli
pop
inc
dec
das
in
movsl
test
push
andb
and
sbb
sbbl
or
repnz
sbb
outsb
xchg
jno
repz
cmp
jnp
pop
xor
jbe
dec
movsb
sti
negl
sub
sarb
inc
sbb
mov
aas
pop
les
rcll
lods
xorb
or
test
leave
jnp
leave
lret
mov
sbb
shl
bound
in
decb
or
push
push
addl
je
lahf
das
mov
imul
jp
movd
frstor
push
ja
mov
jg
lret
shr
das
add
cmp
xchg
sbb
mov
push
into
inc
inc
cmp
jg
ja
das
outsb
xor
inc
pop
into
adc
jl
inc
push
stos
in
dec
and
repz
dec
fdiv
cmp
out
push
dec
jnp
inc
daa
sbb
ja
pop
mov
loop
xor
mov
lds
inc
lods
sub
mov
jnp
loop
sub
push
mov
dec
push
sub
pop
inc
fsubs
sbb
fwait
js
sub
fdivrl
pop
cmp
sbb
and
cmpsl
jbe
mov
les
js
dec
cmp
push
cmpsb
xor
hlt
mov
push
xchg
pop
out
mov
scas
adc
clc
out
loope
lods
dec
add
ss
or
xor
and
int3
leave
dec
mov
sbb
mov
jo
mov
mov
or
pop
push
into
jbe
push
test
lcall
adc
aas
adc
cmp
js
sar
jg
arpl
push
xchg
shl
jne
cmp
jle
jae
inc
mov
insl
in
xorb
fidivrs
cld
subb
mov
jle
test
jl
sti
push
outsb
ret
add
xchg
sbb
pop
and
push
push
ljmp
imul
dec
push
cmp
jbe
lret
mov
mov
stos
rorl
ret
jp
icebp
cmp
sbb
mov
xor
add
xor
stos
das
pushw
out
imul
or
mov
imul
fldenv
pop
les
in
inc
push
shlb
rcll
cs
lret
pop
dec
dec
push
mov
lods
or
wbinvd
imul
lret
mov
push
divl
pop
stc
fmul
roll
dec
jecxz
fildll
cmp
in
orb
xchg
or
imul
rcrl
es
inc
mov
mov
adc
sbb
repz
mov
add
mov
fidivrs
subb
add
aad
mov
idivl
dec
cmc
lahf
and
jbe
lods
dec
aas
jp
cmp
inc
sbb
xlat
jp
xor
dec
inc
jmp
mov
jmp
test
dec
xor
pop
or
push
xor
out
jno
dec
cwtl
add
pusha
or
push
jbe
add
aad
lcall
stos
ror
pop
and
mov
xor
nop
rcr
inc
leave
popa
pop
fisttps
jp
mov
push
adc
lea
mov
pushf
mov
into
jb
insl
out
test
aam
fs
push
push
jnp
add
jo
out
aas
pop
aas
movsb
lock
dec
push
jns
xor
lret
mov
insl
adc
sti
cmpsl
in
ds
adcl
stos
push
inc
dec
push
xchg
xchg
mov
add
jmp
jno
ret
aam
es
lods
aad
ss
add
inc
xor
mov
cld
sbb
stos
shrb
pop
cmp
mov
sub
pop
cmpsb
loopne
in
cltd
leave
iret
hlt
xor
test
mov
inc
ficoms
dec
jp
sub
cmp
jnp
xor
inc
filds
lret
jno
sbb
inc
cmp
out
mov
arpl
or
mov
jo
sub
or
add
add
cld
jno
pusha
cmp
mov
pop
push
mov
mov
inc
cmp
jo
hlt
lods
gs
mov
push
lret
adc
mov
jmp
push
inc
cmp
ljmp
add
out
pop
pop
aad
sti
mov
mov
mov
push
clc
sbb
nop
push
sbb
ret
ret
pop
jl
and
xchg
inc
stos
roll
or
cmp
out
xchg
loopne
mov
icebp
xchg
mov
loopne
ret
out
fwait
dec
sbb
es
icebp
push
fisttps
fcomps
sub
jmp
pop
mov
enter
leave
xor
loope
aad
xchg
mov
jb
xchg
lret
mov
sub
xor
ljmp
jae
stos
mov
ret
push
or
fwait
xchg
inc
xor
inc
xchg
inc
sbb
mov
andb
lods
mov
sbbl
mov
add
dec
andl
and
inc
inc
and
jecxz
cmp
fwait
cmpl
pop
fimuls
and
fisubrl
lea
or
add
je
and
test
sub
out
movsl
adc
mov
fdivl
mov
aaa
sub
jae
cmp
outsb
mov
jns
stos
repz
xchg
jge
out
icebp
cmpsl
lret
pop
divl
test
mov
loopne
and
in
xchg
jns
mov
sti
mov
cmpsb
lods
jle
push
xor
ficoml
stc
jmp
jne
cmpsl
sub
push
cld
cltd
dec
movsb
inc
jb
arpl
pop
jmp
pushf
fwait
and
dec
loope
xor
mov
inc
lahf
pop
push
xchg
addr16
add
add
push
scas
cmpl
cmpsl
mov
fdivl
mov
hlt
in
out
fmull
add
mov
inc
in
mull
mov
push
lea
and
jb
xchg
xor
cltd
mov
push
xchg
adc
adc
jae
loopne
push
cmp
pop
mov
cmp
stos
mov
push
ljmp
sahf
mov
inc
jnp
lds
sbb
imul
inc
lret
je
rorb
test
in
rorl
fstps
or
addr16
jp
stos
mov
push
cmp
adc
push
icebp
pop
add
movsl
and
shll
outsl
out
xor
lods
inc
jnp
out
stc
popa
out
mov
xor
add
testl
push
xor
aam
adc
setne
repz
xor
pop
sbb
scas
iret
mov
push
pop
lea
ds
push
pushf
leave
push
and
imul
packsswb
cmp
mov
push
cmpsb
test
cltd
mov
dec
testl
jo
testb
loope
jae
out
call
inc
clc
dec
scas
or
mov
cltd
or
pop
push
jg
jecxz
adc
push
les
mov
into
push
ljmp
popf
and
sbb
xchg
xor
pop
test
dec
dec
mov
mov
sub
fld
jg
add
pop
mov
aas
sahf
dec
mov
jns
mov
or
out
hlt
fmull
mov
pop
ret
xor
cmp
mov
xchg
call
pushf
not
lret
scas
inc
test
sti
and
icebp
shrl
cmp
int3
jecxz
pop
xchg
and
pop
jno
sub
xchg
sbb
mov
push
aam
hlt
adc
mov
sbb
push
fistpl
mov
addr16
popf
shlb
mov
sbb
out
xor
mov
sbb
add
jp
sub
xor
sbb
bound
out
or
push
mov
xor
outsl
inc
bound
lret
test
cwtl
lds
jno
xor
js
lret
ss
dec
mov
and
adc
xchg
aam
jecxz
mov
lea
outsb
cwtl
pop
testb
repnz
roll
xor
lea
and
mov
and
pop
imul
jge
mov
setno
adc
jns
ss
sarl
popf
mov
push
adc
ror
sahf
stos
jl
ficoms
push
loopne
dec
mov
mov
ja
scas
sub
jns
jne
loopne
rorb
imul
aaa
nop
push
cmp
sbb
jo
jo
add
sti
call
jmp
pop
sub
popf
insl
jle
lods
nop
nop
adc
movb
push
test
inc
fbld
inc
orl
rcr
add
cmp
cmp
adc
shlb
leave
testb
push
in
xor
push
mov
cli
pop
jns
dec
push
sbb
or
into
out
jl
fisubs
test
push
adc
adc
clc
insl
sbb
jne
stos
dec
inc
mov
shrl
outsl
aas
and
push
sbb
sub
loope
incl
stc
sub
add
mov
out
pop
add
daa
enter
subl
push
into
sahf
sbb
or
jns
sbb
out
daa
push
repnz
out
sbb
scas
dec
push
bound
ljmp
or
pop
inc
jmp
jmp
mov
mov
pop
dec
imul
xor
movsb
lret
adc
jecxz
aad
mov
xchg
call
push
cmp
mov
addr16
shlb
loopne
aam
dec
cmc
dec
xchg
and
test
xorb
jno
jge
dec
fsubl
push
jle
pop
out
jnp
push
xor
adc
lds
sub
cs
adc
inc
mov
ret
xorl
ljmp
mov
pusha
sbb
lret
xchg
popf
pop
push
or
pop
or
inc
loop
xchg
repz
lcall
addr16
cmp
mov
mov
push
shrb
mov
pop
inc
lods
lret
fists
notl
xor
mov
negl
xlat
jb
mov
dec
cld
jg
push
lods
ret
push
adc
sbb
dec
enter
out
addr16
xor
push
mov
repz
shll
cmpsl
jne
nop
xor
mov
mov
loop
mov
sarb
test
cli
add
test
xlat
movsl
ficompl
fldt
mov
outsb
pop
shrb
mov
jns
icebp
das
ficoml
mov
imul
int
push
sbb
int3
cmpsb
cmc
xor
pop
xlat
ss
insb
sub
push
cmp
cltd
ds
sbb
out
shll
dec
mov
and
in
stc
inc
iret
jns
shrb
or
loopne
fsubp
nop
fstps
test
xor
sbb
test
sti
xlat
jg
dec
mov
push
inc
mov
push
dec
pop
mov
jno
outsb
add
cmpsl
adc
daa
or
ja
fimuls
xor
jns
cmpsb
int3
adc
leave
and
roll
pop
mov
or
jo
mov
sub
shll
mov
nop
popa
lea
mov
jnp
daa
jmp
adc
cmp
cmp
nop
mov
rorb
push
push
insb
push
out
mov
add
repnz
mov
lds
sbb
and
pop
and
cs
xor
imul
fcomps
add
popa
inc
push
outsl
and
popf
or
insb
sub
outsl
adc
je
andl
xchg
dec
push
jmp
loope
daa
pop
xor
in
mov
shrl
cs
in
mov
hlt
int
sahf
cli
xchg
or
pop
in
cld
test
mov
sub
scas
les
ljmp
jp
je
lds
jmp
pop
in
lods
pushf
dec
gs
fs
ror
jae
add
hlt
xchg
xchg
sub
dec
scas
mov
mov
enter
in
ret
xor
jne
push
cmp
add
jg
jg
outsb
add
fadd
dec
cmpl
int3
push
fimuls
pop
inc
popa
fmul
push
cwtl
mov
cs
cmp
jge
loopne
repnz
lret
loop
sbb
xor
les
mov
lods
and
mov
lahf
icebp
sub
or
jl
cmp
sti
cmp
fdivrs
push
mov
xchg
stos
lret
hlt
push
pushf
adc
in
repz
and
shlb
xchg
mov
fnsave
int3
lock
orb
adc
or
sbbb
jne
jg
repz
sbb
pop
gs
xchg
insl
pop
lock
xor
cmc
stos
lahf
mov
movsb
jb
mov
aaa
addl
movsb
dec
scas
ljmp
popf
out
fiaddl
movsl
hlt
dec
pusha
cmpsb
popf
sub
fdivr
cmp
inc
rclb
stos
fs
mov
leave
dec
inc
mov
bnd
push
sub
mov
mov
add
mov
shll
cmc
int
cmpxchg
popa
xorl
bound
dec
inc
push
sti
int
shrb
mov
jne
fwait
xchg
adc
and
mov
push
out
call
pop
bnd
mov
dec
mov
xor
scas
push
into
dec
and
pop
inc
fnsave
popa
test
repz
push
cmc
jo
and
adc
ss
rorl
lea
cmc
cmc
sub
push
mov
bound
loope
and
jp
ss
inc
sbb
mov
pusha
cli
cmpsl
movsb
gs
or
xchg
std
hlt
mov
or
pop
mov
mov
into
cmpsb
adc
mov
or
xor
idivl
adc
cmp
lods
fstpl
cwtl
je
xchg
lods
cmp
add
sbb
cmp
data16
sub
dec
sbb
mov
push
mov
cmp
enter
out
hlt
adc
push
cmp
mov
leave
cmp
xor
iret
cmp
dec
rcrb
lds
push
push
sbb
cmp
add
je
insb
insl
push
push
imul
in
mov
adc
sbb
cwtl
insl
stos
jmp
adc
adcb
sbb
inc
lcall
cltd
icebp
inc
fstps
xchg
push
repz
fadds
xor
outsl
lods
stos
mov
sbb
loop
cld
ret
add
inc
movsb
add
lods
pop
cmpsl
pop
dec
enter
loopne
add
dec
cs
adc
inc
mov
dec
out
push
addl
jmp
fwait
push
jne
cmpsb
sbb
loope
int3
negb
mov
push
sub
cmp
rolb
out
dec
sbb
and
sbb
mov
subb
jl
sbbb
pusha
mov
dec
sbb
cltd
jo
ret
mov
pop
sbb
sbb
hlt
test
ret
mov
or
jp
ret
pop
or
out
test
and
iret
fwait
xchg
stc
sbb
stc
or
loop
jmp
sbb
mov
or
jno
movsl
jbe
fwait
icebp
fyl2x
jne
dec
adc
ret
aaa
jno
jecxz
mov
sbb
xchg
clc
lods
xchg
pop
les
rcr
sbb
inc
push
mov
loopne
fsts
clc
push
jbe
lcall
fisubrs
aaa
sub
xor
fmull
shll
dec
dec
std
inc
aam
das
cmpsb
cmp
xchg
cmp
mov
int3
imul
call
aad
dec
sub
xchg
push
sbb
cmpsl
inc
jnp
nop
or
repnz
hlt
lcall
rcll
fstpt
xchg
bound
xor
adcl
movsb
and
fimull
inc
rclb
fisttpll
stos
jne
into
sub
jl
mov
dec
xchg
mov
loopne
ret
icebp
and
test
adcl
sahf
lret
sub
mov
cs
cmpsl
adc
mov
mull
cmp
sbbb
push
rolb
push
lock
adc
push
and
mov
mov
mov
je
out
out
push
les
out
cmp
push
lods
sbb
cld
mov
inc
mov
push
jmp
pushl
xor
int
sbb
aam
aas
or
dec
fs
aad
inc
popl
ret
ret
push
int3
and
jg
add
mov
int3
xor
xor
mov
and
mov
push
aam
adcl
cmp
sub
sbb
mov
dec
sub
aad
data16
pushf
addr16
jo
rorb
and
out
nop
dec
loope
pop
mov
std
add
inc
sbb
ret
fsubs
aaa
in
jo
mov
in
xchg
cwtl
out
xchg
and
dec
xor
ja
cmp
adc
jecxz
xor
dec
pushf
fnstcw
lcall
arpl
in
push
mov
xlat
loopne
mov
dec
addb
inc
ds
xor
cmpsl
shll
xchg
jo
roll
pop
or
aam
lods
in
out
sarb
loop
pop
sub
mov
sahf
int
inc
xor
lods
addr16
sub
test
mov
xchg
fisubl
push
inc
out
mov
mov
push
bound
ja
adc
xor
cwtl
ret
xchg
mov
dec
rol
add
add
inc
aad
leave
mov
fdivp
push
jmp
push
push
push
cmc
ret
or
int3
inc
daa
in
movsb
mov
add
mov
pop
imul
cs
lret
jl
dec
aaa
pop
mov
adcb
jae
or
jb
imul
inc
push
dec
sub
cmpsl
fcompl
orl
mov
jns
pusha
ds
leave
add
das
in
jge
add
adc
and
pop
cmp
sarl
dec
js
out
repnz
jmp
sub
xor
or
push
inc
xchg
jecxz
xchg
dec
ja
xchg
push
mov
lcall
lea
cli
andb
daa
cmpsl
pop
dec
in
fnstenv
mov
pop
test
or
inc
jb
adcb
dec
iret
sub
inc
dec
xor
mov
push
lahf
rorl
addr16
jmp
sbb
ror
aad
sahf
pop
and
lods
jp
cmp
repz
arpl
cmp
add
or
loope
push
push
xchg
jb
jp
ss
or
pop
lret
ret
cmp
add
data16
mov
mov
push
and
mov
cmc
movsb
push
cmpsl
scas
stc
jle
dec
xchg
sub
push
fistps
ret
sub
add
xor
cwtl
fcoms
push
lahf
mov
fisubrs
adc
arpl
repnz
inc
add
mov
lods
andl
out
sub
lret
mov
jbe
push
sub
adc
daa
or
int3
cmp
jle
inc
test
and
lret
cmp
push
in
scas
mov
cmpsb
jmp
fwait
andl
xor
cmpsb
or
push
push
in
push
xor
cmp
inc
or
les
inc
jge
sub
sbb
xchg
into
into
mulb
mov
int
outsb
lcall
repnz
pop
pop
xor
scas
call
inc
ficoml
mov
imul
popa
nop
gs
or
std
jnp
mov
pop
aam
adcl
pop
out
mov
jo
add
subb
lcall
call
mov
push
in
stc
or
push
mov
test
adc
sub
mov
andl
sahf
jle
ret
jb
push
pop
jb
mov
cld
mov
lods
mov
xchg
sahf
rcrl
cmp
jg
imull
in
pop
decb
shlb
inc
pusha
shl
push
outsl
lret
repz
loop
pop
add
insl
add
mov
fcompl
cmp
xchg
mov
jg
mov
lods
decl
aad
int
xor
or
loope
jno
lods
sub
in
xor
mov
lldt
and
out
pop
mov
jo
xor
mov
xchg
mov
and
into
cli
out
out
scas
mov
push
and
jne
and
adc
cmp
sub
mov
xchg
shrl
mov
xchg
dec
test
xchg
sub
and
cltd
sub
pop
cmpsb
xchg
stos
insb
loope
mov
in
or
and
push
push
or
mov
out
lret
lea
gs
push
pop
aam
and
in
cmpsb
data16
std
lea
repz
pop
dec
pop
inc
pusha
repz
cs
inc
add
or
adc
dec
and
xchg
xlat
shrb
fwait
cmc
push
lahf
pop
sarl
inc
clc
inc
in
and
xor
push
icebp
jnp
pop
jle
mov
cmpsb
out
push
decl
shl
jno
jno
or
jno
jp
mov
ss
xchg
dec
jmp
shlb
xor
pop
scas
mov
int
sub
pop
cmp
stos
jg
mov
test
mov
jne
test
out
movsl
in
jmp
push
movsl
lcall
outsb
mov
scas
xor
nop
push
popf
stos
lahf
inc
dec
mov
xchg
sbbb
and
or
fbstp
pusha
sub
pop
cwtl
mov
pusha
and
lea
xor
jnp
add
add
push
dec
in
ret
sub
adc
sbb
push
jmp
cwtl
in
inc
into
pop
xor
popa
ja
fwait
dec
int3
out
lret
sbb
mov
sub
mov
jmp
aad
and
mov
sbb
gs
imul
dec
pusha
inc
lds
sub
ret
loope
add
inc
sbb
mulb
mov
push
test
into
xchg
dec
lods
sbb
pop
movsl
mov
int3
iret
cmc
loopne
add
mov
push
sahf
notb
data16
sbb
imul
mov
or
into
pusha
sbb
adc
mov
test
adc
mov
mov
xor
xor
mov
and
arpl
mov
gs
adc
stc
mov
and
cmp
rcrb
push
jo
adcb
sahf
loop
mov
fdiv
jge
int
xor
pop
ret
sub
jbe
adc
outsb
adc
shlb
pop
lret
ss
jle
bswap
dec
mov
aad
push
fld
loop
dec
add
pop
icebp
add
cmp
or
push
mov
cli
sbb
lea
sbb
out
add
fcomp
cmp
sbb
lods
dec
hlt
mov
xor
mov
aam
push
mov
mov
sub
sub
flds
in
lea
lret
jp
sub
cwtl
ss
xor
mov
jle
adc
mov
fldcw
jmp
push
jecxz
mov
shl
mov
fdivrp
gs
adc
push
jg
int3
sub
pop
ja,pn
sub
sahf
insl
jns
scas
cmc
cmpsb
mov
in
cmp
and
adc
mov
insl
pusha
add
jae
xchg
inc
jle
mov
jmp
iret
dec
addl
in
repz
sbb
push
inc
aad
and
jl
pop
push
sbb
es
cmp
mov
scas
sbb
push
in
push
mov
mov
inc
sti
pop
cmp
sahf
ja
jp
mov
sbb
sahf
loopne
push
sub
repnz
cmp
xorb
xchg
pop
mov
popa
or
adc
sbb
pusha
add
adc
inc
push
mov
dec
hlt
les
stc
ret
mov
fnstcw
fnstsw
aaa
push
sub
jl
mov
scas
adc
adc
mov
rclb
mov
xor
out
fldt
test
data16
mov
js
push
push
mov
push
ror
cmc
pop
push
mov
iret
rclb
daa
fldcw
hlt
pop
mov
xor
in
sbb
cmc
jne
xchg
jbe
in
adcl
xchg
sbb
xchg
test
inc
daa
sub
repnz
mov
popf
scas
add
mov
or
addr16
nop
jp
add
dec
xor
adc
out
cmp
jb
lods
stc
divb
inc
sub
repnz
cmp
cmp
adc
cld
push
dec
imul
push
push
pushw
std
add
cmp
bnd
mov
aad
mov
push
inc
popf
setnp
xchg
js
xor
into
sbb
sub
fnsave
xor
imull
pop
mov
adc
enter
jno
jl
in
pop
outsb
in
sahf
sub
or
jl
xchg
xchg
int3
pop
xchg
fisubl
xor
loope
xchg
lea
gs
test
leave
cmp
test
xchg
mov
jae
dec
sbb
je
inc
cltd
or
dec
sbb
psrld
inc
jb
fstpl
and
pop
xor
jge
mov
je
push
jnp
or
sbb
xchg
cwtl
mov
jne
push
inc
mov
pop
sbb
gs
inc
addr16
es
imul
in
cmp
imul
mov
movsb
jne
or
call
rolb
sarl
mov
hlt
in
mov
sbb
xlat
fdiv
sbb
jno
sahf
cli
in
ret
mov
test
and
push
adc
int3
mov
mov
testb
push
test
push
mov
addr16
mov
mov
push
lahf
lret
call
imul
loop
ljmp
lret
and
fwait
or
testb
xchg
repnz
sub
pop
popa
loope
mov
lcall
mov
cltd
mov
mov
pop
cmpsl
sbb
mulb
xchg
mov
fcom
fildll
loopne
movsb
mov
add
test
or
sarl
sub
cmp
dec
ljmp
aaa
mov
fimull
pop
fcomps
out
pusha
sbb
jbe
bound
inc
jl
std
roll
sub
push
pop
inc
adc
das
push
sbb
push
jne
fistpl
shr
test
jecxz
cmp
dec
pusha
add
mov
mov
pop
sub
xchg
sbb
mov
jo
xor
clc
inc
dec
jbe
sbb
inc
cmp
xlat
mov
jnp
in
lcall
or
pop
jns
les
repnz
inc
mov
inc
jl
cmpsb
or
les
pop
jmp
popf
clc
lock
jp
rclb
das
cmp
stos
pop
test
mov
leave
adc
and
nop
push
fisubs
adc
or
push
adc
dec
push
loop
jnp
dec
sbb
mov
cmp
mov
pop
jbe
adc
jne
jle
pop
lea
loope
fs
scas
out
pushl
cmp
scas
mov
jbe
push
pop
stc
lods
xchg
int
and
mov
decl
sbb
dec
cmp
pusha
test
ss
mov
mov
inc
mov
ret
arpl
mov
adc
loop
add
dec
dec
inc
lea
lock
jp
pusha
loopne
pop
notl
push
int
enter
jbe
arpl
int3
cmpsb
shl
xor
rcl
pushf
cmp
int
xchg
sbb
xchg
mov
shr
and
les
inc
add
adc
sbb
shr
mov
cmp
or
mov
dec
aad
jp
add
xor
inc
push
inc
inc
shrl
cs
inc
mov
push
out
cmpsl
incb
mov
test
rorb
inc
push
push
out
divl
shlb
and
mov
ficoml
maskmovq
mov
bound
push
pop
push
mov
push
ret
fwait
push
lret
je
add
cli
es
stc
and
mov
repnz
cmp
bound
mov
add
shlb
jmp
sahf
sti
subl
lods
daa
xor
jp
das
mov
sub
adc
int
aam
out
mov
add
fistpll
push
xchg
push
outsl
pop
cs
jge
imul
int3
xchg
lock
lret
in
fnsave
sbb
cwtl
add
xchg
xchg
out
mov
push
inc
aad
mov
ret
sbb
fcmove
sbb
xchg
dec
add
mov
mov
pop
jbe
mov
test
or
in
mov
jae
neg
mov
or
or
push
mov
push
int3
inc
out
loop
fldl
icebp
jo
cmp
xchg
xchg
mov
push
scas
cmp
lock
jne
dec
jle
xor
and
mov
das
mov
push
pop
push
outsb
mov
cs
iret
cmc
dec
dec
clc
push
stc
lcall
jp
and
iret
push
cs
call
mov
fnstcw
lds
pop
xor
notl
loopne
loopne
insb
adc
push
call
dec
dec
jp
dec
in
cmp
pop
cmp
cli
lret
ljmp
sarl
insb
insb
or
repz
lret
repz
mov
pop
cli
clc
and
mov
loop
insb
mov
mov
adc
jl
mov
testl
or
pusha
lahf
pop
in
cli
inc
xchg
jle
bound
inc
pop
mov
ljmp
mov
mov
jnp
pop
push
lret
lret
outsl
das
lret
arpl
imul
push
sbb
cmpsl
inc
lcall
dec
loope
sub
iret
push
xor
icebp
stos
mov
xor
loopne
je
sbb
xchg
xlat
pop
mov
cmp
leave
or
xor
and
adc
dec
ljmp
cwtl
test
xor
cmp
sub
jge
out
pop
int3
inc
in
mov
mov
arpl
fidivrl
and
push
inc
xchg
xor
sub
in
cltd
movsl
or
push
mov
insl
jp
mov
lea
dec
and
and
xchg
rcrb
leave
jo
pop
ret
xchg
repz
jbe
sub
adc
mov
das
mov
mov
mov
push
aas
xor
xor
sub
and
jecxz
popf
dec
roll
add
call
sbb
pop
scas
and
cmpsb
ja
jnp
xor
enter
mov
xor
xchg
lds
mov
mov
mov
mov
inc
cltd
or
dec
lods
cmc
or
lcall
jbe
push
pop
jmp
insl
in
loope
xchg
fidivs
mulb
out
lcall
or
jecxz
jae
je
xorl
and
jmp
or
add
xor
mov
enter
jns
cmp
out
movsl
add
insl
cmp
mov
mov
loop
xchg
sub
cltd
sbb
cmp
add
push
add
in
xchg
and
push
jnp
sub
cmc
in
mov
out
jg
daa
mov
add
mov
dec
xchg
push
cmp
mov
push
rolb
adc
dec
cmp
and
or
push
pusha
les
mov
lea
jmp
cmp
xor
pop
into
fnsave
hlt
inc
xchg
sbb
mov
outsl
leave
fs
fdivl
sbb
mov
mulb
orb
pusha
xor
cmp
rcrl
ss
cmp
rolb
cmpsb
aas
mov
lods
mov
shll
loope
fldcw
out
les
push
mov
push
mulb
dec
arpl
outsl
jle
push
mov
in
adc
and
cli
xlat
lcall
scas
rcr
js
lret
out
xchg
add
stos
addb
dec
mov
xchg
push
nop
jmp
push
cmpsb
test
push
mov
imull
inc
xchg
cmp
mov
aas
pusha
fs
aaa
in
xor
pop
out
and
in
mov
and
sahf
arpl
ljmp
test
sub
rorb
lret
sub
cmp
mov
imul
out
dec
pop
fidivrs
call
sahf
jno
sub
adc
xlat
movsl
jno
jb,pt
jne
lods
fsubrl
ficompl
pushl
mov
popa
push
ljmp
scas
inc
fstps
stc
lret
aad
xchg
cmp
test
inc
add
jl
cmp
aaa
stos
jp
jl
mov
jge
mov
fisubl
mulb
call
sub
add
add
cs
mov
adc
cs
push
iret
pop
fildl
cmpsb
jae
cmp
cmp
fwait
addr16
fimull
xchg
sbb
pop
inc
gs
add
insl
pop
lret
pop
xchg
fldenv
aad
js
pop
dec
incb
add
dec
inc
adc
add
bound
les
inc
cmp
cmp
dec
jns
out
jb
aad
xor
add
js
dec
xchg
push
add
and
cmp
xlat
lcall
loope
test
sti
push
mov
fnsave
in
fmull
je
popa
xlat
dec
in
pop
int
mov
mov
inc
push
mov
mov
sub
pusha
clc
xor
repnz
xchg
gs
push
repz
xchg
xor
loop
aas
push
mov
in
push
aad
out
jo
xor
inc
addr16
packsswb
pop
jb
ret
loop
sbb
add
xor
ds
aaa
fwait
inc
sbb
push
xchg
in
fcmovnu
clc
fdivl
push
lahf
xchg
jge
jmp
xor
movsl
push
jmp
push
mov
jle
push
jnp
test
and
imul
xchg
mov
and
xor
mov
mov
iret
and
jl
lock
push
cmpl
cmp
sbb
adc
inc
in
stos
push
inc
out
mov
fadds
outsb
jns
mov
icebp
enter
repz
decb
lret
inc
mov
and
lahf
mov
ret
int
ret
and
dec
icebp
repz
or
sbb
ljmp
pop
scas
icebp
dec
idiv
mov
call
and
out
add
out
mov
addb
cwtl
cmpsb
shlb
mov
xchg
ja
push
inc
int3
pop
push
jo
inc
xor
mov
ret
mov
push
and
loope
jg
mov
mov
cmp
pop
into
jp
mov
inc
test
movsb
xchg
sbb
cmp
push
sub
mov
fdivl
fnsave
inc
daa
push
int
xchg
dec
ffreep
mov
xor
sub
cmp
dec
push
mov
dec
xor
loope
jb
pop
push
les
dec
inc
or
jmp
ja
cs
mov
push
stos
sub
lock
mov
ss
fldt
subb
adcl
mov
mov
out
lcall
mov
xor
popf
dec
inc
cwtl
mov
cs
pop
int3
daa
popf
jecxz
repnz
cwtl
test
in
mov
mov
cmpsb
movsb
push
xchg
out
mov
fs
lds
cmp
sahf
int3
mov
adc
xlat
cmp
in
mov
cltd
cmp
cmp
pop
pushf
xchg
push
or
sbb
jg
inc
cmp
jge
pop
pop
aad
mov
push
jge
and
pushw
pusha
lds
cwtl
or
fistl
lahf
stos
mov
in
cld
inc
subl
call
pop
cmpsl
fistps
loop
mov
add
int3
adc
add
out
adc
add
in
inc
or
shrl
lods
push
cmpsb
mov
mull
pop
adc
or
sbb
xor
jno
int3
nop
add
adc
xor
cmp
js
mov
add
sahf
mov
or
cli
cmc
dec
std
movsl
sar
add
sbb
dec
push
sbbl
fs
cltd
dec
mov
js
fstpl
loope
cmp
nop
add
sbb
pop
popf
adc
shll
in
push
aas
fisttpl
pop
inc
inc
dec
movsl
sahf
xchg
sub
nop
arpl
rclb
and
jno
xchg
pop
addr16
mov
pushf
xor
sbb
aas
insb
mov
xor
fsub
mov
adc
mov
sub
jg
jecxz
out
xchg
cmpb
int
inc
fcmovbe
inc
or
lcall
fbstp
std
mov
cwtl
cmp
mov
das
mov
push
lea
pop
shlb
bound
or
icebp
rcrl
pop
or
adcb
sub
lret
notb
jmp
push
fwait
lahf
mov
mov
push
rep
push
and
sub
mov
fs
shll
pop
cmp
jp
jmp
fidivrl
pop
mov
pushl
cli
imul
test
jno
imulb
ret
xchg
sub
mov
dec
test
jmp
cmp
out
sahf
adc
loope
es
jecxz
mov
jbe
push
xchg
lock
ret
mov
xchg
push
stos
jl
mov
cmpsl
inc
shr
mov
cwtl
mov
or
mov
mov
movsl
gs
sub
mov
adc
xor
fistl
test
pop
xchg
mov
test
jl
cwtl
mov
repz
js
inc
xchg
test
test
jmp
inc
and
lods
or
push
sbb
push
pop
cli
or
aas
call
popf
mov
sub
jns
nop
inc
das
push
fs
adc
mov
sbb
adc
test
mov
and
lahf
fucomi
mov
orl
xor
or
std
xor
scas
jmp
jecxz
gs
adc
cmp
jg
xorl
sbb
adc
jge
add
pop
mov
imul
ds
sub
out
into
dec
inc
sub
sub
stc
lcall
push
jno
or
gs
inc
sbb
mov
jne
je
mov
int
mov
and
test
dec
insb
fistl
movsb
fsts
int3
in
and
cld
push
jnp
mov
cld
xor
outsl
mov
lea
daa
pop
into
jo
lods
xchg
sbb
cmpsl
mov
jge
inc
pop
pop
setbe
out
add
ffreep
aam
fst
mov
mov
xchg
mov
mov
mov
ret
and
jle
or
or
jns
push
adc
lcall
push
mov
mov
pop
or
push
inc
pusha
cmp
mov
inc
outsb
data16
xor
xor
xorl
xchg
mov
ffreep
test
mov
add
mov
pop
sub
imul
jbe
dec
lahf
xor
dec
adc
fsubrl
lahf
das
bound
dec
rcll
cmp
inc
xchg
pop
enter
jb
mov
inc
sub
pop
lret
pop
lods
movsb
or
sti
adc
orb
rcrl
inc
or
shl
ja
in
mov
std
sub
sbb
aad
call
sub
xchg
or
sbb
inc
fidivs
and
inc
cmpsl
jbe
and
ja
inc
int3
lret
push
xchg
push
lds
pavgw
popf
insb
sub
inc
les
mov
mov
int
jp
sbb
jecxz
adc
lods
adc
xchg
or
stos
das
xlat
cmp
or
pusha
fmuls
stc
inc
sbb
sbb
imul
pop
std
push
mov
les
pop
nop
adc
cli
das
xchg
inc
fcoml
mov
xchg
scas
xchg
aas
jbe
adc
test
jns
bswap
hlt
ret
adc
pop
mov
sbb
sub
sub
jo
cmpsb
mov
adc
in
cmp
lahf
push
test
jbe
sahf
push
insl
jle
lea
sub
jge
imul
inc
adc
dec
out
inc
call
cmovo
jp
rorb
lcall
aam
sahf
jb
ljmp
in
xor
dec
jno
ret
inc
dec
fnstenv
pop
cmp
mov
testl
add
and
add
loop
daa
or
add
adc
push
pop
lods
fcoms
cmpl
jae
pop
jp
add
loopne
xchg
in
adc
fdiv
mov
xchg
pop
rol
fists
xchg
rep
jne
cld
dec
xor
call
dec
in
aam
das
xchg
pop
push
dec
inc
jle
inc
test
cmp
je
add
push
mov
jmp
gs
sahf
lret
mov
shrb
repnz
inc
xchg
lcall
inc
xchg
jo
test
jae
ret
sub
cmp
sub
addl
or
jg
imul
cli
mov
popf
faddp
sub
add
aad
lods
push
faddl
cmp
jmp
jmp
mov
sbb
mov
cmp
mov
push
xor
rcl
das
jmp
mov
fwait
adc
stos
xchg
fistps
mov
xor
das
ds
iret
aaa
inc
mov
and
sti
pushf
cmp
dec
mov
pop
xor
movsb
adcl
outsb
shrb
dec
fists
mov
or
mov
rdpmc
add
andb
push
adc
mov
inc
stos
imul
cmp
mov
ljmp
sarl
call
stos
fidivrs
pop
in
push
aas
mov
ficomps
loop
shl
cmpsb
jl
mov
push
push
call
jae
leave
fisubrs
loop
lret
stc
int3
out
js
dec
jg
sub
ljmp
or
cmp
jno
cli
push
add
dec
lds
mov
fs
dec
push
lds
inc
sbb
test
inc
jl
movl
jbe
hlt
out
mov
cmc
dec
xchg
cmp
adc
repnz
les
fwait
in
les
ret
cli
or
fs
lds
je
jnp
dec
sbb
int
fdivrl
xor
int
and
imul
fwait
push
in
test
daa
xchg
dec
push
xor
mov
stc
pop
dec
xor
lods
in
adc
lock
add
xchg
aad
xchg
mov
cmpsb
jge
or
adc
ljmp
sbb
push
test
mov
push
jne
jmp
cs
mov
mov
pop
cmp
test
add
scas
bound
nop
push
mov
outsl
imul
clc
jo
xchg
mov
adc
dec
sub
int3
outsl
pop
inc
cli
xchg
add
popf
outsl
mov
ja
mulb
jbe
dec
sti
test
in
enter
ss
dec
or
sub
and
inc
lods
imul
cmp
jg
fmulp
in
xchg
test
stos
aam
xor
jb
mov
or
iret
insl
bound
xor
inc
nop
xor
sub
out
mov
mov
loop
push
inc
xorps
fisttpll
push
xchg
insl
or
out
jns
dec
sarb
inc
into
addr16
sub
xchg
mov
je
pop
adc
mov
icebp
mov
popa
arpl
pop
push
push
subps
adc
pop
dec
popa
add
mov
dec
call
jno
mov
add
insb
out
push
aas
sarb
fstl
loopne
dec
lods
xchg
out
fiadds
jge
stos
dec
ret
shll
pop
or
out
stos
lds
and
arpl
mov
cmc
int
and
dec
xchg
mov
add
push
pop
jns
cmp
and
orb
mov
cmp
aaa
movsl
insl
pop
sub
das
mov
out
or
jns
daa
cmp
xchg
imul
shlb
cmp
mov
nop
pop
inc
js
fisttpll
jae
push
jp
mov
mov
pop
lea
fimull
out
xchg
mov
adc
insb
cmp
xchg
inc
aad
aad
sahf
xchg
out
push
fcomi
push
and
jne
popa
mov
int3
adc
fstpl
xchg
cwtl
push
sbb
fs
stos
test
outsl
fbld
sub
shrb
jae
into
aam
dec
dec
cld
push
adc
daa
and
add
andb
pop
jg
push
das
push
push
sub
jp
aad
aaa
loopw
mov
sahf
les
scas
in
or
inc
jns
je
dec
out
and
aam
shlb
lock
fistpll
mov
lcall
xor
outsb
movsl
test
pop
jns
sbb
inc
xor
push
in
pop
mov
pop
aad
sub
and
rorb
pop
loop
sub
push
push
aaa
and
lret
push
add
dec
jle
rcrb
push
arpl
add
in
mov
dec
mov
lcall
mov
clc
test
push
cs
rorb
fimuls
jns
cltd
sbb
js
pop
fistpl
ljmp
nop
sahf
int3
aad
mov
pop
pop
jmp
pop
cmpl
cmp
rcrb
bsf
jns
pushl
jne
dec
mov
xchg
cwtl
test
out
insb
ljmp
push
pop
ficomps
fidivrs
fimuls
mov
xchg
add
pop
fucomi
and
call
mov
add
mov
movsl
call
or
and
mov
push
movsb
lods
pop
mov
push
sbb
lcall
cmp
les
jne
out
push
or
sub
mov
xchg
mov
pop
or
xchg
push
sub
mov
and
outsl
xchg
mov
fnstsw
mov
out
cli
fmul
dec
mov
cld
push
or
xor
adc
add
xchg
pop
pushf
or
mov
pushl
adc
lahf
cmc
jge
into
xchg
addb
cli
add
sahf
cltd
pop
shll
jb
pop
lret
pop
dec
inc
adc
dec
sub
lret
adc
sub
nop
xchg
xchg
stc
aam
pop
loopne
int
sbb
rcll
or
insb
adc
fsubrl
lock
in
sub
jns
cmp
add
jge
insl
lea
pop
in
push
icebp
sbb
popf
mov
mov
loop
cmpsl
jae
repz
movsl
dec
sub
out
int
out
leave
add
xor
jmp
cld
fistpl
imul
fs
filds
mov
xchg
ljmp
cmp
xlat
rclb
jg
mov
fs
dec
cltd
or
les
add
xchg
mov
lea
jo
mov
push
cmp
hlt
xchg
pop
xor
and
stc
je
jbe
mov
sbb
sarb
movsb
push
fidivl
push
cwtl
mov
lahf
stos
mov
jae
mov
fildll
imul
nop
int
in
add
sti
das
jp
add
jno
mov
mov
int3
pop
es
sbb
mov
pop
cmp
push
sub
xor
xor
daa
xchg
pop
adc
xor
push
bound
pop
fwait
push
in
sbb
shlb
xchg
xchg
mov
add
jne
mov
push
daa
lret
mov
shrb
js
add
jbe
testl
xor
loopne
jle
adc
int3
mov
or
xchg
cmp
pop
je
or
les
mov
dec
cmpsb
cmpsl
je
xor
in
lcall
movsl
push
out
pop
add
mov
xorl
inc
mov
cmc
adc
adc
ja
stc
test
add
sub
cmp
dec
pop
push
jbe
sbb
cmp
xchg
xchg
out
dec
aaa
into
or
lea
mov
ja
pop
movsb
scas
mov
inc
jle
mov
int
cmc
call
jae
push
js
stos
pusha
add
cli
xchg
cmp
gs
push
xor
xchg
shrl
jne
lods
sub
mov
mov
jbe
lahf
mov
mov
and
and
fnstenv
loopne
sub
or
mov
sti
push
icebp
jg
outsl
sti
push
adc
arpl
mov
fisubl
pop
inc
mov
push
pop
out
std
insl
loopne
pop
addr16
xchg
and
lods
or
jae
mov
daa
fisubrl
jmp
fdiv
sbb
mov
jl
xchg
mov
dec
mov
cmp
inc
inc
jne
sti
mov
and
mov
push
sbb
xchg
mov
test
cwtl
imul
sbbl
jbe
mov
jl
rcr
mov
cmp
inc
cmp
dec
mov
jge
adc
xchg
mov
or
adc
andb
pop
xor
adc
shll
daa
cltd
mov
shlb
adc
mov
cwtl
mov
jb
push
imul
scas
mov
movsb
rolb
mov
jbe
into
sti
mov
jb
push
push
fidivrl
xchg
add
mov
loop
sub
addb
sbb
push
in
aam
int
pusha
mov
outsl
dec
push
mov
sti
out
jb
sbb
add
lods
push
roll
sbb
xor
dec
xchg
andl
push
stc
push
mov
inc
sahf
push
adc
adc
jp
sub
sbb
mov
scas
insb
mov
stc
jno
or
adc
test
es
and
jmp
inc
xor
mov
and
xchg
push
lcall
pushf
sbb
jl
mov
mov
cs
fistl
sbb
cli
inc
cmp
dec
or
mov
mov
nop
and
bound
rcrl
pop
jle
cmp
jl
adc
jae
pusha
enter
jl
sbb
sbb
cmc
mov
test
popl
popf
inc
xor
inc
inc
cmp
xchg
dec
pop
fisubrs
dec
daa
test
imul
cmp
push
push
push
clc
push
iret
incl
push
dec
mov
int
je
ljmp
mov
arpl
jmp
decl
or
pop
data16
addr16
pop
pop
jmp
stc
test
inc
cmp
sbb
jg
cmp
test
add
push
push
push
movsb
iret
rcrl
dec
adc
repz
xchg
push
adc
gs
push
loop
mov
or
bound
mov
hlt
mov
mov
mov
lret
loop
cmp
lods
cmp
insb
divl
mov
sub
mov
lock
xor
xlat
or
jns
int
xor
iret
jmp
ss
add
iret
adc
mov
mov
adc
scas
or
cmp
cmp
sbb
mov
mov
jmp
jecxz
or
inc
sub
stos
mov
push
mov
mov
sbb
insl
fnstenv
fisttps
or
jo
imul
les
ja
push
push
cmp
push
into
or
fcmovnb
adc
push
and
nop
xchg
in
sar
xchg
jae
cmp
js
xor
mov
push
hlt
push
sbb
cmp
cmpsl
inc
mov
inc
jmp
mov
repz
stos
js
pop
xchg
add
mov
adc
scas
sbb
xor
push
cmp
xchg
cwtl
sbb
add
clc
inc
fadd
adc
adc
sbb
push
jb
out
pop
scas
pop
push
mov
arpl
les
out
sbb
jne
inc
and
cmp
test
sub
dec
repnz
jne
in
jns,pt
in
inc
and
sub
mov
xchg
push
nop
cld
pop
pop
mov
test
imul
sahf
jns
shrb
mov
rcrl
mov
or
pop
std
mov
imul
mov
cwtl
jb
hlt
jb
jbe
xor
popf
in
into
xchg
fisubl
lods
enter
aam
imul
mov
movsl
xor
jp
popf
xchg
cwtl
push
xchg
add
mov
loope
xchg
mov
in
cmp
mov
out
and
popf
aam
and
cli
js
test
jge
fistpl
cmp
leave
fidivs
inc
insl
cmpsl
int
inc
rorb
int
mov
jg
shlb
rsm
xlat
movsl
insl
loope
sub
inc
adc
clc
push
sbb
dec
push
jo
adc
xchg
cmp
lret
jmp
push
mov
lods
repnz
xor
fwait
xchg
mov
and
and
lods
sub
int3
lock
mov
add
xchg
pushl
mov
cmp
sbb
or
enter
rolb
mov
movsl
lret
cltd
fmul
popf
lcall
cmp
xlat
add
pop
adc
lea
repnz
push
subb
shll
lea
add
jns
xor
insl
mull
out
pop
mov
mov
jb
xchg
mov
or
pushf
sahf
cmc
pop
and
lea
in
and
sub
frstor
pop
adc
inc
leave
sub
scas
adc
adc
push
jle
ret
xchg
lods
or
sbb
mov
mul
push
xor
cmpsb
fwait
or
das
cmp
aaa
divb
adc
je
dec
lds
aam
call
dec
subb
mov
mov
inc
sub
dec
mov
jo
rorb
mov
fcmovne
and
mulb
push
and
pop
pusha
mov
loopnew
cmpsb
insb
pushf
pop
fidivl
cltd
cmpsl
mov
in
aas
rsm
inc
cmpsb
cmp
inc
sbb
sub
sub
jge
or
pop
bound
xor
dec
cmpsb
cmp
push
dec
lods
sub
aas
insl
pushf
out
imul
cmp
fstps
pop
ljmp
fdivl
fstpt
adc
mov
jecxz
fstl
aam
fsubl
and
jae
call
les
sbb
fisubrs
imul
iret
xchg
cmp
pop
fdiv
add
roll
data16
and
jecxz
mov
push
inc
lret
gs
popa
mov
mov
add
inc
sub
cmpsl
sti
loop
stc
or
dec
dec
sbb
mov
mov
cmpb
adc
shlb
lods
jl
dec
enter
std
daa
push
insb
push
faddp
int3
out
es
data16
cmp
add
jge
sarb
inc
in
pop
pop
scas
push
std
int3
lret
out
push
fs
sbb
and
mov
hlt
sub
sbb
xchg
mov
mov
push
xchg
cwtl
cmp
mov
mov
jg
aad
cltd
repnz
jb
addr16
pop
mov
xor
sbb
into
sub
les
sub
shlb
fmuls
sub
gs
inc
rcl
sbb
xor
xchg
insl
or
fwait
aam
and
lea
in
xor
mov
aam
push
sbb
or
push
dec
xor
sub
jp
cwtl
das
in
cmp
add
addr16
daa
dec
mov
cmp
ss
rcr
lea
in
xchg
push
into
xchg
gs
stc
mov
pop
insb
and
mov
out
ror
adc
aam
cmp
fs
push
xchg
push
aas
das
movd
adc
mov
shl
fs
push
mov
scas
push
loopne
jo
xchg
sub
jae
add
mov
jp
cmp
sub
xor
sti
leave
mov
je
mov
adc
hlt
push
fs
mov
xor
nop
jbe
mov
cmc
cmp
adc
aam
and
push
sub
xchg
and
sbb
aaa
add
out
popa
pop
push
shl
pop
shll
iret
mov
push
stc
pop
cmp
inc
inc
add
scas
xchg
jae
repnz
pop
repz
xchg
pop
clc
insl
dec
dec
ret
fisttps
test
sub
lcall
sbb
aaa
cwtl
int3
fldl
bswap
mov
jmp
mov
or
cltd
aad
pop
das
rorl
sub
push
or
xor
fnstsw
pusha
fwait
mov
int3
out
sbb
mov
and
lds
daa
push
arpl
sbb
or
mov
mov
add
call
or
jl
or
ds
movsb
ja
pushf
xchg
sub
in
iret
test
addr16
int
mov
dec
xor
popa
inc
and
mov
push
std
xchg
gs
and
jbe
rol
ljmp
in
xchg
int
stos
mov
int
sub
cltd
add
loop
push
or
sti
jle
adc
sub
xsavec
fsubr
enter
in
inc
mov
je
mov
adc
lahf
fsubr
xor
movsb
pop
sub
test
icebp
punpckhbw
adc
jnp
hlt
lcall
xchg
cmp
loope
mov
loopne
cmp
sarl
adc
lcall
loopne
cmp
sub
push
adc
arpl
test
addr16
mov
arpl
push
adcb
inc
lea
pop
or
push
jmp
jb
push
repz
sub
mov
mov
fimull
mov
inc
pop
and
call
icebp
pop
pusha
test
rcrb
test
fs
orl
leave
or
imul
popf
sub
bound
mov
lods
mov
mov
mov
lahf
pop
test
inc
mov
data16
adc
test
fucomp
jne
in
fdiv
pop
cmp
mov
test
sub
mov
mov
into
in
add
or
orb
ja
mov
dec
push
clc
jle
dec
xorl
mov
inc
xor
in
das
ljmp
in
dec
push
js
mov
cmp
es
scas
sub
push
pushf
test
inc
and
enter
int3
aad
out
jae
and
aas
les
adc
sbb
sub
ja
mov
adc
mov
test
movsl
adc
nop
pop
or
push
popa
cmpb
jle
mov
scas
movsb
mov
ret
inc
in
push
xor
cltd
dec
out
movsb
or
jle
mov
pop
psrlw
mov
cwtl
pop
mov
push
mov
push
into
jbe
cmpsb
cmpsb
dec
xchg
inc
jnp
jns
xchg
icebp
mov
outsl
call
cmp
fisttpll
test
mov
aaa
stos
fcoml
clc
lds
je
cmp
mov
cld
fnstcw
dec
popa
je
fstpt
int3
or
cmp
xlat
bound
adc
xor
mov
imul
cli
pop
aas
xchg
fcomps
sti
std
mov
pusha
mov
pop
or
push
push
dec
inc
mov
shll
cmpb
gs
sti
xchg
ss
inc
test
or
dec
push
dec
mov
scas
test
mov
outsl
jecxz
sbb
gs
push
xor
leave
inc
sub
sbb
fs
push
and
cmc
jne
dec
inc
inc
lock
les
dec
incl
mov
and
test
rcll
pusha
sub
jbe
jmp
fidivrl
imul
cmp
cmc
mov
mov
bound
clc
mov
mov
xor
ljmp
push
jecxz
aam
jb
test
cmp
or
iret
mov
push
add
fidivrl
and
mov
orb
adc
icebp
add
mov
das
outsb
outsl
inc
xchg
push
push
xchg
xor
fiaddl
pop
mov
add
cmp
sbb
xor
int
clc
roll
dec
std
xor
shlb
loop
bnd
pop
es
dec
inc
int3
mov
mov
mov
lds
jne
add
adc
adcl
fdiv
and
jno
imul
jnp
mov
pushf
push
push
imul
es
sbb
push
mov
sbb
lods
push
enterw
jns
xor
mov
sub
xchg
test
xchg
dec
fdivrs
out
das
cltd
or
mov
outsb
mov
and
aaa
dec
dec
xor
fcompl
test
iret
iret
pusha
push
ror
xchg
inc
mov
gs
divb
cmp
aaa
push
mov
push
iret
push
pop
bound
mov
loope
sbb
or
and
ljmp
add
int3
xchg
imul
xchg
jns
cmp
and
jno
cltd
mov
fbstp
xlat
lods
and
aam
pop
imul
mov
adc
cltd
cli
je
cmpl
inc
jns
outsl
push
das
jns
sar
ds
cmp
dec
and
mov
stos
mov
mov
bndldx
adcb
or
and
fldcw
xchg
fs
dec
scas
pushf
xchg
loop
sub
cmc
push
sbb
push
insb
ds
push
xchg
xchg
pusha
adcl
repnz
sbb
xchg
dec
cmp
dec
jg
movsl
xor
mov
fisttpl
adc
lret
js
nop
rclb
and
sar
xchg
cmc
xchg
and
sbb
leave
push
rcrb
movsb
out
les
jae
movsl
test
and
outsl
repnz
ret
or
test
hlt
shll
ja
cmp
inc
cld
xlat
clc
jns
out
xchg
shrb
sub
rorl
add
xlat
lods
popf
movsb
mov
cmp
cmp
xchg
fldcw
scas
lds
lods
iret
cli
sub
fs
dec
clc
sbb
xchg
push
adc
pop
orb
and
xor
xorl
xrelease
pop
sbb
mov
ss
test
dec
xchg
jns
es
roll
xor
je
cmp
mov
popa
out
pop
mov
imul
jo
inc
iret
inc
inc
xor
call
das
jmp
cvtpi2ps
cmp
inc
pop
cmp
fcoml
aam
popf
fwait
adc
popf
jge
arpl
pop
mov
aad
mov
pop
and
xor
daa
fdivrs
and
pop
iret
stos
cmp
and
mov
push
push
scas
push
ret
ret
loope
outsl
cmc
add
movsl
push
xor
pop
cmp
ds
add
mov
dec
mov
ds
lds
push
jg
ficomps
dec
imul
iret
xlat
fldcw
aas
lods
sbb
scas
push
xchg
adc
cld
orb
mov
roll
mov
mov
jb
fistpll
pop
dec
sub
jb
push
mov
sti
clc
xchg
pusha
std
push
es
add
addr16
test
push
sub
jo
inc
insb
or
dec
sbbb
lret
aad
enter
jne
jno
cmp
mov
ja
and
test
inc
cmp
lock
ljmp
adcl
stos
fstps
mov
sbb
fwait
jge
cmp
movsl
fs
pop
push
inc
push
aaa
mov
vpexpandq
rolb
rcrb
push
push
outsb
dec
lahf
ljmp
add
repz
lods
in
iret
std
pushf
mov
jnp
dec
and
push
adc
lock
pop
cmpl
sbb
das
hlt
xchg
xchg
fmuls
ret
inc
adc
incl
fiaddl
mov
mov
sbb
sub
iret
movsb
cmp
in
xor
jbe
enter
dec
mov
les
or
push
and
xchg
cmp
add
lahf
add
fdivl
mov
mov
scas
push
mov
cmpl
fnsetpm(287
cmpsb
inc
lahf
sub
or
jg
xchg
push
lahf
pop
mov
sub
mov
loopne
outsl
sub
test
and
adcl
inc
ss
add
lret
pop
add
shl
rorb
nop
sbb
ja
xor
or
addb
mov
xorb
push
inc
je
leave
mov
xor
push
mov
enter
icebp
pusha
sbb
loop
jecxz
mov
ret
int3
pop
mov
mov
fsts
pushf
aaa
fmul
xor
test
push
jbe
icebp
mov
dec
out
mov
adc
adc
in
stos
push
and
call
es
popf
mov
mov
addr16
sub
xchg
scas
out
shlb
push
pop
pop
jns
repz
cltd
sbb
cwtl
inc
mov
mov
add
push
inc
inc
pop
pop
hlt
es
loopne
cli
and
les
mov
subl
push
outsl
scas
mov
in
sbb
mov
xor
push
add
cmp
xchg
scas
clc
cmp
xor
idiv
jge
mov
or
xor
bound
pop
pop
mov
xor
cltd
sub
cmp
sbb
imul
add
adc
sbb
outsl
xchg
dec
cld
xorps
cs
test
out
test
jo
pop
into
in
lahf
mov
gs
xchg
push
lret
aas
ret
stos
lret
push
xchg
dec
sbb
jmp
xchg
jnp
test
inc
jle
test
adc
xlat
and
outsb
imul
ficoms
inc
mov
mov
pop
pop
cmc
pop
cmp
sbb
inc
push
cmpsb
cltd
movl
pop
mov
fimull
out
dec
xor
push
xchg
ss
into
ljmp
imulb
adc
fisttpll
rorl
push
js
inc
push
and
pop
test
jp
mov
or
push
fwait
dec
dec
push
loopne
cmp
into
out
and
and
xchg
xchg
mov
mov
scas
lods
xchg
in
push
push
adcl
cmc
dec
cmp
rol
sub
jnp
repnz
jge
sub
xchg
mov
jge
and
dec
jmp
adc
les
lock
adc
xlat
jecxz
aad
mov
call
mov
dec
mov
or
or
imul
mov
pop
jae
andl
push
sub
xorb
scas
js
sub
xor
add
push
shll
mov
iret
inc
dec
fcomps
popa
sub
sub
jae
dec
decl
cmp
push
cmp
ret
movsb
or
stos
jo
loop
push
icebp
or
data16
push
push
mov
aad
hlt
mov
mov
mov
nop
inc
sub
pop
xchg
test
jo
xchg
push
cmp
pop
jno
add
xor
lahf
pop
sbb
add
or
outsb
or
in
add
out
dec
push
jge
add
mov
and
add
jnp
dec
mov
clc
push
pop
inc
je
adc
ljmp
inc
out
cmpsb
cmpsl
push
cli
repnz
imul
sub
push
push
leave
lock
addr16
cmc
pusha
inc
xor
cmpsb
inc
sti
into
pop
call
sbb
negl
int3
int
out
pusha
sbbl
in
dec
dec
sub
xchg
pusha
xor
fs
cs
xchg
xor
in
xchg
rolb
testb
fs
lods
btc
push
sub
and
scas
in
jmp
cmp
fcmovnbe
sub
mov
scas
pusha
jge
into
adc
pop
popa
test
push
jnp
inc
adc
fidivrl
call
popf
enter
jg
movl
in
or
bound
push
incb
push
mov
xchg
jmp
orb
pop
cmc
sbb
dec
add
jl
fcoml
bswap
xchg
mov
add
dec
push
cmpsl
repnz
jp
jnp
sbb
xchg
sub
cmc
cmc
loope
push
imul
inc
popa
push
add
xchg
cltd
sub
xor
dec
clc
cmp
in
imul
frndint
mov
xchg
imul
daa
aas
jmp
popl
ljmp
out
adc
fiaddl
aad
aaa
push
shll
mov
pop
inc
mov
ret
sbb
cmp
das
mov
adc
ss
pop
mov
out
inc
jmp
test
es
sbb
repz
ljmp
mov
fcmove
lock
jno
xchg
and
loopne
mov
jmp
mov
orl
xor
fs
push
jne
scas
subb
mov
inc
subb
gs
mov
sbbl
leave
push
pop
inc
or
jne
dec
mov
xlat
push
rcrb
loope
dec
outsl
and
or
outsl
pusha
dec
mul
jl
add
out
sub
sub
adc
dec
js
mov
or
mov
or
mov
xchg
loopne
or
mov
sub
loop
pop
adc
sub
jp
js
repz
rcll
or
xor
ja
fwait
mov
mov
cmc
push
cmpsl
push
sbb
xchg
sub
je
fwait
insl
inc
clc
int3
xorl
mov
xchg
das
aad
lret
popf
das
sti
add
push
stc
add
fmull
out
push
insb
ljmp
mov
push
leave
insb
jo
aam
test
push
mov
movsb
fisttpll
dec
sub
into
negl
pop
test
and
cmp
rcl
jmp
outsl
pop
inc
mov
pop
not
adc
add
popa
flds
jg
xor
jb
outsl
cmpsl
shl
rep
popf
loopne
enter
cld
adc
xchg
daa
cld
jb
je
fdivr
std
fwait
scas
cli
xchg
and
dec
pop
mov
test
dec
hlt
jbe
dec
gs
icebp
loop
push
mov
adc
jns
mov
stos
push
lods
mov
or
add
adc
scas
jno
cli
push
or
aas
enter
std
and
push
xchg
daa
insl
shrb
ret
lret
push
jg
fsubrs
fiadds
xchg
stos
xor
cltd
jae
test
addb
and
cmpb
adc
bound
in
sub
fs
or
ja
xor
xchg
test
rcll
std
es
adc
xlat
jne
fnstenv
mov
lcall
lcall
fxch
push
mov
push
mov
pushl
jg
outsb
repnz
scas
xchg
outsb
sbbb
xorb
icebp
jb
rcll
cmp
jmp
andl
lahf
cmp
popa
dec
sub
jmp
aad
mov
pushf
test
xor
pop
pop
ret
push
movsl
pop
adc
xchg
xorb
adc
testl
fcompl
xor
int
jb
mov
pop
cmc
test
sbb
push
or
icebp
rcrb
inc
loope
addr16
pop
or
and
stos
xor
dec
mov
inc
leave
fucomp
loop
jb
jno
andl
inc
cmp
or
jno
in
bnd
sbb
jle
or
js
lods
cltd
jns
mov
ret
loope
pop
in
mov
test
hlt
jnp
imul
aaa
push
fs
mov
jl
xor
adc
test
xlat
sub
iret
pop
inc
inc
push
add
jge
pop
test
dec
inc
imull
sub
addl
push
sub
pushf
roll
andl
call
ss
enter
lret
and
in
jl
push
lds
lds
cmp
mov
pop
push
out
push
fisubrl
xlat
test
inc
dec
incl
leave
add
test
sbb
out
movsb
repz
mov
aad
ja
cmp
aaa
subb
lods
sbb
cli
ss
and
inc
insl
ret
fidivrs
sbb
sbb
aaa
xor
out
lcall
sub
inc
and
push
pop
lods
xchg
lock
xor
lods
jl
xchg
adc
and
sbb
jp
in
imul
xchg
xlat
stc
mov
push
lahf
sub
pop
sbb
and
enter
xchg
fcoml
cmp
xchg
jb
clc
mov
test
sbb
mull
fidivl
je
inc
push
push
pushf
pop
xchg
add
cmc
aad
xchg
push
mov
sub
sub
mov
shlb
sar
lock
xor
jae
dec
sbb
pop
mov
mov
sub
mov
mov
and
push
pop
in
pop
and
sub
dec
mov
adcl
add
mov
dec
je
clc
mov
mov
cmpsl
add
mov
arpl
pop
pop
dec
pop
and
fs
stos
push
ja
mov
or
aad
mov
call
jle
test
and
insl
add
xor
shlb
out
out
lea
fdivp
sbb
xlat
insb
adc
cmp
test
testb
sbb
jle
shll
jl
sub
cmc
cmp
mov
bound
push
out
mov
test
cmpl
popa
rcl
cmp
es
jmp
stos
scas
cmpsb
sub
push
ja
js
hlt
cli
or
sub
imul
inc
in
dec
inc
aas
push
and
in
dec
push
sub
xchg
inc
mov
push
push
sbb
inc
rcrb
repnz
sarl
aam
mov
cld
popf
scas
push
pop
lret
pushl
xorb
test
cmp
rcr
mov
lds
mov
out
adc
imul
mull
out
repz
sbb
mov
xchg
leave
and
pop
cmc
stc
lea
or
lock
jnp
dec
insb
jmp
mov
outsb
sub
and
mov
xor
jle
js
imul
xchg
adc
aas
mov
je
dec
aas
inc
pop
sub
fdivrl
stos
push
das
adc
lahf
and
cmc
or
jp
xlat
popa
push
stos
xchg
inc
test
orl
inc
es
pop
xchg
xchg
clc
arpl
sub
jb
inc
call
add
pushf
xchg
pusha
mulb
and
mov
pop
xor
dec
lea
in
push
lahf
xor
or
xchg
hlt
insb
push
sub
push
and
cmp
lret
mov
jnp
dec
lods
and
loope
add
cmp
roll
enter
cmp
xchg
add
dec
and
js
push
aam
add
nop
mov
outsl
leave
jl
repz
pop
icebp
fst
fchs
push
stos
mov
insb
adc
pop
dec
sbb
cmp
popf
movsl
nop
into
lret
out
push
mov
movsb
insb
lds
add
lds
bound
sub
into
add
jae
mov
mov
mov
mov
sub
mov
sub
mov
pop
ljmp
add
push
dec
inc
pop
push
pusha
lcall
pop
add
add
inc
dec
fst
inc
or
js
xchg
push
sub
rol
sub
jecxz
shl
fstpt
cmpsb
sti
out
in
das
orl
sub
push
insl
inc
fistps
stos
add
xor
cmp
jmp
push
xchg
push
jg
fs
stc
out
std
popf
daa
and
scas
in
pop
cwtl
mov
xor
in
cmpsl
jne
ja
or
sub
xchg
sbb
call
push
add
imulb
mov
mov
je
dec
inc
push
shl
push
or
xchg
rcl
rcrb
pushf
enter
sub
cs
inc
xor
jo
and
mov
dec
cmp
test
ss
pushf
lods
gs
sub
cmp
xchg
sbb
repnz
jl
cmp
push
cmpsb
std
and
add
adc
mov
jne
daa
inc
ficompl
lret
test
imul
push
enter
mov
cmc
add
and
mov
shll
leave
add
cmpsb
push
mov
les
xchg
sbb
adc
mov
jbe
das
int
pop
mov
xor
int
imul
cli
stc
test
xor
hlt
lret
cmp
mov
cs
iret
dec
xor
jp
xchg
loope
xchg
nop
int3
cli
mov
adc
imul
jno
iret
cmpsb
adc
test
mov
shrl
jnp
pop
adc
mov
and
stos
and
jl
cwtl
push
imul
out
not
push
orb
test
test
fisttpll
sbb
pop
inc
push
daa
pop
xor
inc
arpl
xchg
and
idivl
push
cmc
jno
dec
cmp
out
imul
or
ror
unpckhps
in
mov
lods
dec
pop
call
push
cmc
lcall
cld
push
popa
into
dec
int3
inc
loope
inc
int3
cwtl
xchg
fldt
in
push
inc
xor
rorl
mov
xor
xchg
nop
jle
test
mov
adc
lret
jmp
sbb
fnstsw
fwait
outsb
fdivl
testb
cmpsb
nop
xor
inc
jl
test
js
shlb
rcrl
adc
xchg
pop
inc
add
addr16
lea
sti
fsubl
mov
cmpsb
rcrb
das
push
in
ja
xor
mov
ret
mov
test
fadd
std
pop
push
push
ror
push
js
aas
stos
or
ljmp
cmpsb
push
mov
movl
jb
dec
or
rorl
cli
dec
jno
test
dec
pop
add
cwtl
xor
shll
mov
mov
pop
and
inc
daa
pop
fwait
nop
popf
fildll
sub
cmp
push
jl
pop
jae
xchg
sbb
sti
xor
xor
add
or
sbb
ss
gs
xchg
cmpsb
jecxz
addr16
addr16
jb
cmpsb
adc
inc
jbe
subb
ficoms
mov
sub
sub
and
mov
pop
adc
xorl
movsl
pop
sub
cmpsb
add
xchg
mov
iret
pop
cmpl
sub
pop
sbb
std
inc
rcll
mov
outsb
jb
push
imull
or
sub
adc
mov
js
es
cmpsb
cmpl
mov
mov
jo
mov
je
push
out
fwait
cmp
pop
sub
lahf
imul
sub
lds
or
and
jle
lahf
sub
icebp
in
clc
pusha
or
sbb
imul
lret
mov
jo
scas
fadds
dec
mov
mov
lahf
mov
cmp
stos
mov
test
adc
les
das
dec
inc
sti
pop
and
push
lret
push
jnp
jnp
iret
mov
test
mov
ds
cmc
ror
mov
dec
xor
sbb
add
add
xchg
cltd
inc
fisubl
loopne
insb
lcall
les
push
repz
pop
stos
pop
cld
std
out
jp
loope
inc
into
icebp
test
pushf
jg
sub
mov
mov
cmc
sub
push
xchg
or
adcb
orl
push
pop
xchg
adc
pushf
push
int3
loop
out
xchg
or
popa
sbb
jo
enter
ds
mov
jae
imul
mov
loope
or
adc
cmpl
pusha
mov
test
jecxz
repz
push
pushf
push
imul
scas
xchg
mov
stos
dec
jns
pop
insl
imul
lods
aaa
outsl
daa
and
movsb
sub
xchg
out
or
inc
jne
popf
popf
cmp
roll
dec
sub
jmp
sti
cmpsl
mov
xor
mov
fwait
add
cmpsl
or
pop
lods
mov
fsts
cmpsl
add
push
fiaddl
cmc
dec
push
lods
cmc
mov
cmp
sbb
test
push
out
and
lods
shrb
sahf
push
pop
cmpsb
cmp
and
std
pusha
enter
lock
into
popf
sub
bnd
ret
je
inc
gs
pop
jg
fnsave
pop
mov
cmc
pop
test
xchg
pop
or
roll
dec
cs
lds
pop
pop
sub
jmp
jnp
push
repz
sbb
pop
sub
adc
inc
cli
mov
stos
add
outsb
ret
xor
loop
in
lret
sub
fucomip
dec
in
data16
dec
xor
push
ss
icebp
js
push
adc
or
pop
out
or
scas
inc
in
cmp
push
cmpsl
jecxz
and
loopne
sub
jecxz
mov
mov
incl
pop
push
dec
decb
loope
jecxz
sub
jge
repnz
jns
xor
daa
int3
in
arpl
aaa
scas
lahf
imul
inc
lds
sbb
out
cmpsb
addr16
test
mov
mov
ret
sbb
testb
in
aaa
inc
stos
and
lods
ficoms
mov
jge
movd
call
test
push
sbb
lock
lahf
jae
aaa
fiaddl
pop
addl
cmp
loopne
data16
sub
xchg
ret
mov
stos
pop
daa
pop
lock
adc
pop
adc
jnp
inc
sbb
mov
cld
nop
xchg
imul
fwait
pop
adc
pop
add
pop
or
dec
in
jo
mov
into
fisttpll
dec
outsb
repz
repz
mov
or
dec
gs
jbe
sbb
subl
adc
mov
pop
lea
into
lret
jns
cmovo
bound
adcl
mov
jno
jo
ljmp
faddp
das
xchg
ss
jb
or
jbe
inc
inc
hlt
out
fimull
adc
in
icebp
aas
xchg
adc
add
lds
lds
sub
imulb
mov
clc
dec
lea
dec
aas
push
xor
cmpsl
mov
movsl
aam
aas
fldenv
rorb
insb
and
mov
ljmp
xor
add
inc
in
out
mov
xchg
mov
cwtl
sub
repnz
test
adc
mov
and
cmp
test
aad
mov
push
pshufw
mov
inc
lcall
inc
push
out
aam
pop
lret
xchg
push
inc
push
cmpsl
into
les
or
jecxz
shl
mov
imul
jg
mov
sub
xchg
sub
or
lahf
push
stos
popa
pop
scas
cmp
jmp
enter
insl
adcl
insb
popa
je
xor
loopne
pop
pop
aam
adc
fstl
mov
push
mov
popa
lods
sub
adc
cmpsl
fimull
adc
xchg
aas
and
arpl
in
std
mov
repnz
in
aaa
rcll
sub
mov
xorl
add
cmpsl
xor
jbe
cmp
mov
mov
xchg
push
mov
aam
in
push
xchg
sub
mov
add
repz
add
push
shl
dec
in
movsb
mov
das
inc
inc
shlb
dec
mov
jle
xchg
adc
cmpsb
xchg
add
mov
cmp
sub
cmp
jnp
adc
jp
test
sbb
xchg
mov
dec
inc
test
mov
mov
fists
int
adc
and
xchg
out
negb
inc
jne
push
stos
dec
mov
fcomp
bound
mov
cmp
jae
cs
inc
shlb
sub
xlat
fbld
pop
xchg
push
push
sbb
dec
cmc
jb
mov
es
and
xchg
in
push
inc
sbb
fucomp
adcb
xchg
test
fcompl
mov
out
rol
ret
mov
imul
in
in
mov
test
rorb
movsl
sbb
insb
lret
sub
inc
mov
loope
subl
popf
shlb
iret
push
adc
push
push
cmp
lods
sub
xor
and
fisubrs
mov
push
adc
add
fsubl
pop
lods
mov
fistpll
in
jne
ror
mov
cld
xor
or
pmaddwd
mov
cmp
enter
mov
jp
cltd
pop
movsl
inc
aad
shl
mov
out
flds
decb
pusha
in
add
and
dec
icebp
and
iret
inc
scas
aad
ds
outsb
push
cwtl
rolb
sbb
or
fs
sub
mov
clc
aad
mov
cmp
fucomip
xor
pusha
cmp
flds
icebp
sub
pop
ds
and
shr
mov
in
sub
push
std
push
push
sbb
popl
xchg
pop
dec
cmp
mov
inc
cmp
ret
add
enter
icebp
fld
orb
mov
jb
jns
mov
shrl
ss
cmp
lret
lret
adc
es
dec
dec
push
cld
popa
and
gs
mov
xor
lcall
push
cmp
popf
lret
aad
in
add
int
pop
data16
imul
fstps
loop
scas
jno
fcompl
push
add
leave
js
shlb
or
xchg
sbb
xlat
xor
pop
int
add
jno
adcl
sub
loopne
sbb
mov
inc
mov
sbb
addr16
mov
sub
push
xchg
lret
ret
inc
clc
pusha
mov
pop
sbb
mov
gs
xchg
mov
sahf
inc
leave
cwtl
out
sbb
sarl
pop
leave
mov
gs
das
rclb
adc
loope
div
push
cmp
and
fwait
mov
and
pop
test
jle
jnp
mov
push
xchg
lcall
jbe
mov
sbb
movsb
sbb
das
jo
and
cli
xor
lods
dec
dec
rclb
aam
test
pop
rorb
pop
xchg
inc
adc
xor
mov
insb
fsubl
popf
pushl
jae
mov
dec
pop
dec
and
mov
xchg
cmpsb
stc
pushf
mov
jp
sbb
sub
mov
outsl
cli
push
in
fs
push
aas
jns
shrl
test
push
mov
test
push
mov
xchg
push
inc
and
lret
or
ret
push
push
mov
or
addr16
outsb
pop
sbb
sub
and
loop
fwait
sbb
xor
sub
rolb
jecxz
sub
fadds
push
sub
lods
dec
fmul
nop
gs
cmp
jnp
sub
and
fimull
mov
lcall
pop
push
lcall
dec
movsb
xor
je
sbb
es
pop
std
jne
cmp
and
push
mov
in
imul
in
pushf
fistps
ss
test
inc
push
xlat
push
sbb
inc
xchg
faddl
filds
sbb
movl
cmp
xor
cmp
shll
mov
cmp
cwtl
les
hlt
bound
je
enter
enter
mov
nop
sbb
hlt
xsha1
cmpsb
mov
mov
int
in
shlb
jle
cmp
movsl
test
std
mov
adc
arpl
pop
popa
jnp
movsb
pop
add
jbe
data16
pop
mov
test
push
mov
fdivrs
xor
jbe
dec
pop
jg
jmp
imul
cs
movsb
mov
call
test
stos
test
dec
pop
cmc
movsl
mov
out
hlt
add
hlt
fs
into
cmpsb
cmp
push
push
jnp
sbb
imul
cmc
and
or
test
pushl
icebp
mov
xor
jbe
shll
repz
push
fists
cmpsb
dec
aas
call
jl
mov
nop
cmp
in
lods
jmp
push
pushf
sbb
fldl
insl
push
xchg
jbe
inc
mov
adc
xor
iret
pop
mov
pusha
aam
roll
adc
imulb
test
pusha
inc
cmp
ret
dec
int
mov
push
mov
mov
cmp
mov
dec
and
sar
xor
out
xor
jmp
dec
and
xchg
in
pop
ja
sti
jno
rclb
pop
push
outsb
orb
test
mov
int
fcomps
cmp
sbb
insb
dec
in
pop
pop
dec
stos
shlb
hlt
leave
push
push
cmp
or
mov
xor
and
pop
mov
lods
idiv
inc
sbb
pop
dec
mov
outsb
out
inc
cmp
dec
inc
bound
mov
clc
ds
das
jns
push
mov
lahf
insb
xchg
in
push
inc
fldenv
adcb
jg
inc
mov
xor
addr16
pop
adc
movsl
notl
cli
lea
ds
rdtsc
je
dec
add
push
mov
das
lods
adc
sub
adc
popa
mov
stos
outsl
shlb
mov
lcall
into
in
je
sbb
insb
cmpsl
fcom
incb
pushf
jno
ja
mov
jne
nop
std
xor
push
movsb
push
xor
sbb
les
mov
pop
adc
in
mov
inc
adc
subl
lods
or
scas
lock
and
fcmovb
push
ja
popf
ret
add
ret
sti
loop
ret
loopne
push
mov
xchg
push
mov
dec
out
sysenter
aaa
cmpsl
mov
movsb
test
repnz
add
ja
sahf
sbb
movl
js
into
sbb
push
in
xchg
cld
pop
cld
pop
in
xchg
int3
ud2
loop
fildl
jge
pushf
mov
rcl
adc
iret
imul
mov
mov
xchg
mov
adc
mov
mov
fs
lahf
jno
out
xor
and
push
cmpl
xlat
add
dec
lock
sarl
ja
and
sbb
cli
aad
mov
push
pop
dec
cs
fstps
test
insl
push
mov
xor
and
mov
popa
jns
mov
jl
pushf
loopne
ret
hlt
lret
mov
gs
add
cld
inc
sub
dec
aas
in
sub
xchg
fdivr
cmp
imul
jbe
cwtl
mov
cld
mov
adc
inc
xchg
sbb
xor
enter
sbb
in
fdivrs
jp
insl
jp
mov
js
xor
mov
call
and
lcall
add
push
inc
outsl
inc
dec
fiadds
in
sarb
pop
aam
mov
arpl
ret
and
pop
and
push
iret
lahf
hlt
xlat
sbb
cmpsl
testb
jmp
and
dec
jge
stos
mov
arpl
jne
flds
pop
stc
xor
insl
lods
cmp
fsubp
mov
cmp
incl
jecxz
clc
pop
in
push
pop
pushf
push
sub
mov
int3
outsb
xchg
aas
jmp
push
jne
push
pop
fnstenv
xchg
test
fcoms
adc
test
popa
inc
in
mov
lods
cld
rcrb
repnz
shr
test
push
nop
xchg
daa
xlat
xor
inc
lahf
fs
arpl
dec
jb
iret
xchg
and
outsb
sbb
test
into
jns
or
loopne
sub
or
imul
pop
sub
jecxz
inc
lcall
sahf
out
mov
adc
fwait
mov
xchg
push
mov
mov
or
jecxz
pop
mov
enter
push
xor
shlb
or
dec
cmpsb
jae
mov
cwtl
ljmp
inc
push
mov
push
cli
cmp
dec
loop
stos
fidivl
insl
mov
inc
and
and
mov
mov
mov
dec
mov
repz
xlat
jl
cwtl
daa
and
jae
sbb
pop
and
test
mov
xor
popa
jne
test
addl
outsb
push
lret
pause
jnp
jmp
pop
ret
xor
repz
mov
sub
ret
inc
mov
mov
hlt
adc
push
and
dec
into
jg
mov
cwtl
jmp
mov
jle
lds
aaa
fldcw
movsl
shl
xchg
cmpsb
leave
xchg
mov
rep
daa
arpl
fdivl
out
pop
lock
lods
out
es
mov
les
test
jecxz
xchg
xchg
aad
aam
mov
hlt
insl
mov
mov
sbb
fisubs
pop
out
fwait
movsb
dec
shr
jmp
cwtl
inc
clc
mov
mov
shrl
or
and
repnz
push
jmp
mov
cs
mov
adc
int3
jb
add
shlb
in
leave
lods
jns
dec
fxch
fistpl
adc
mov
or
lods
cmp
mov
dec
and
push
loopne
sub
or
fcoml
sbb
push
frstor
out
jg
jmp
in
movsl
adc
xor
stos
stos
mov
push
pop
mov
addr16
mov
pushf
xchg
cmp
sbb
arpl
xchg
xlat
mov
pusha
js
sarl
std
imul
insl
cmp
cli
xlat
xchg
pop
ljmp
sbb
mov
jg
xor
aam
cs
dec
jg
loope
mov
mov
fcoml
lret
mov
notl
mov
loope
loop
iret
shrl
cmp
cmpb
mov
mov
subb
pop
inc
int
imul
dec
or
xlat
cmpsl
jle
dec
or
push
outsb
pop
sub
shl
stc
sahf
mov
repz
fimuls
movsb
sbb
subl
clc
pop
mov
aam
adc
ret
mov
xor
addr16
scas
push
iret
mov
icebp
adcb
inc
addr16
loop
push
imul
out
cmc
mov
lret
or
pusha
jg
fwait
stos
mov
lret
sbb
mov
jecxz
and
imull
push
loope
sub
cmc
dec
ljmp
int3
jp
lret
adc
insb
mov
lods
add
cli
enter
aam
mov
xorl
mov
rcrb
dec
jns
in
xchg
lret
xchg
adc
cltd
xchg
inc
mov
loop
pusha
ror
sbb
xchg
ret
sbb
push
cmp
in
jecxz
add
movsb
lretw
sub
mulw
aam
sub
out
into
adc
scas
mov
int3
push
or
jecxz
pop
xchg
xchg
loop
stos
adc
dec
subb
push
sub
aad
arpl
and
mov
fs
add
cmp
call
mov
addb
xor
jg
data16
std
insb
fcomps
jno
data16
mov
adcb
shrb
jbe
mov
sar
leave
sub
mov
outsb
sub
aas
mov
andl
mov
xchg
inc
dec
sarl
daa
push
std
xchg
loope
jmp
sub
and
mov
into
fstpt
pop
mov
xchg
xchg
mov
and
shlb
jne
xchg
outsb
sbb
and
es
fsts
jno
lcall
clc
ss
cmp
inc
roll
std
lahf
mov
mov
sbb
dec
push
jecxz
dec
aam
pop
pop
mov
jg
lods
test
aas
and
ja
adc
in
mulb
mov
xchg
daa
add
outsl
fstpt
jge
push
push
mov
outsb
jo
push
int
pop
lods
mov
mov
lret
lods
in
xchg
jg
mov
xor
fst
sbb
sahf
push
mov
rclb
and
inc
jae
ljmp
cmpsb
fcoml
into
out
sahf
subb
ffree
mov
in
sbb
aam
lahf
pop
in
iret
xor
xchg
xor
dec
pop
mov
js
fxch
in
xchg
xchg
fldt
jne
cmp
pop
lea
sub
out
pop
hlt
test
xor
loopne
xor
aad
jb
or
xor
cmpsl
repnz
inc
outsb
aad
pusha
ljmp
xor
mov
xchg
push
cmpsb
sbb
int3
dec
mov
ds
mov
mov
sub
int
inc
test
in
mov
test
loop
xchg
sbb
xchg
sub
mov
and
lret
adc
adc
fldcw
inc
jmp
in
push
mov
mov
adc
lahf
lahf
or
cmp
stos
ret
sbbb
and
inc
and
rcr
mov
or
xlat
test
push
addr16
push
lret
test
mov
pop
insb
mov
mov
or
sbb
fsubs
rcll
mov
push
pop
out
sarl
ficoms
divb
mov
jg
ds
js
cmp
popa
inc
pop
gs
dec
data16
popf
jmp
stc
push
add
in
xor
sahf
hlt
push
xor
xchg
cmp
loop
mov
clc
test
loop
xor
aaa
push
cmpsl
scas
jno
fmul
or
icebp
inc
ret
mov
cmp
cmp
mov
dec
push
jno
dec
insl
fisubl
jmp
loope
repz
cmp
outsb
cmp
rsqrtps
aam
ja
mov
int
jns
call
dec
rorb
insl
and
aad
or
out
pop
dec
daa
lret
in
mov
sbb
mov
aam
sahf
jmp
ds
adc
std
cmpsb
mov
push
idivb
jmp
adc
outsb
ds
mov
xchg
or
or
cmp
fcoml
push
aas
ror
dec
test
xlat
mov
lods
scas
aad
out
xor
aad
pop
jo
cmpsl
push
add
xchg
pop
push
fwait
cltd
inc
xlat
jle
iret
mov
data16
mov
aad
jne
pusha
mov
pop
push
or
fwait
imul
xor
mov
xchg
mov
push
outsb
sub
sahf
adc
je
sbb
and
mov
fstp
dec
test
push
cmpsb
call
ss
das
mov
cmp
xchg
cmpl
mov
sub
cmc
call
test
or
ds
fcmovnb
push
jp
pop
push
sub
and
adcl
lods
jo
out
aad
aad
mov
or
data16
lods
lahf
push
sbb
cld
stc
jge
mov
mov
sub
repnz
adc
out
out
adc
sbb
aaa
mov
cmpsb
fldl
xchg
cs
pop
xor
mov
jns
inc
add
xchg
mov
dec
sbb
jne
enter
lods
stos
in
lcall
mov
sarl
out
push
stc
cmp
mov
rcr
out
arpl
in
lcall
or
adc
sbb
mov
push
sahf
inc
popfw
inc
pop
pop
test
fdivrl
dec
xchg
inc
test
out
jge
add
out
pop
sub
mov
cs
popf
inc
test
push
cmpsb
sbb
fwait
adc
inc
outsb
frstor
jb
push
jno
out
loop
lock
popf
mov
cmc
jmp
ljmp
rorb
mov
add
mov
fbstp
mov
adc
nop
mov
outsl
sub
mov
jmp
mov
and
rolb
pop
addb
dec
iret
call
and
es
je
data16
add
xchg
pushf
test
jno
loope
mov
into
cli
mov
jne
xor
ds
fcoml
xchg
sbb
sbb
dec
dec
xor
push
adcl
xchg
pop
pop
rolb
mov
pop
pop
adc
jge
in
pop
lds
add
xor
inc
jae
loope
out
notl
cltd
mov
adc
repnz
test
or
movsl
mov
pop
loop
out
adc
xchg
pop
out
cmc
mov
mov
scas
add
and
ds
xchg
xchg
aad
sbb
or
in
movsl
sbb
scas
pusha
rclb
mov
inc
fisttpll
popa
pop
mov
push
std
xor
stc
call
cmpsb
jg
inc
jo
lcall
dec
pop
mov
jo
jmp
mov
xor
int3
jo
ja
subb
dec
jae
into
stos
outsb
ret
shrl
mov
mov
jle
sub
pop
adc
negl
popf
sbbl
push
in
notl
cli
icebp
inc
pop
xor
and
lret
xchg
roll
pop
sti
lcall
mov
in
inc
xchg
ja
push
sarl
inc
cmp
jnp
cmpsl
jb
pop
vpmacswd
inc
push
cmp
fcomps
fldl
sbb
js
mov
lcall
pop
pop
cltd
push
shlb
pop
xchg
clc
xor
fcomps
dec
dec
xchg
add
push
cld
cmpsb
mov
push
push
xchg
mov
mov
out
xchg
out
push
ja
fcompl
jg
sahf
push
out
mov
push
imul
lret
push
andb
aaa
mov
push
lds
pushl
dec
adc
rorl
xlat
mov
and
call
dec
aaa
xchg
pop
mov
ret
stos
das
movsl
xchg
cli
jo
jmp
cli
mov
lret
pushf
je
stos
dec
adc
add
add
mov
scas
dec
test
push
or
mov
ficoml
or
outsl
adc
movsb
mov
jno
push
xchg
mov
pop
addl
dec
andl
lcall
dec
popa
or
pop
and
cmp
and
inc
mov
push
cmp
mov
gs
icebp
repnz
subb
mov
sub
inc
test
ds
mov
rclb
movsb
fdivl
or
scas
push
lds
les
in
xchg
stos
ss
mov
imul
add
add
outsb
loopne
in
push
les
adc
mov
rcrl
add
int3
xor
xor
cwtl
mov
xchg
and
jmp
sub
test
adc
aaa
push
sbb
popa
add
jne
es
pop
and
lea
data16
fisttpll
jl
lock
loope
sub
decb
push
outsb
cli
adc
fcoml
or
je
adc
dec
jl
adcl
inc
fimuls
xchg
mov
mov
ds
gs
ja
sbb
out
pop
movsb
mov
jmp
pop
loop
in
jecxz
jecxz
mov
xchg
inc
xor
jnp
fmuls
xchg
movsb
xlat
outsb
lods
dec
dec
and
mov
test
bound
in
jmp
adc
push
xchg
jb
loopne
mov
push
push
xchg
mov
sbb
xchg
test
pop
arpl
pop
mov
out
and
xor
mov
push
jp
shlb
dec
mov
jnp
mov
aaa
xchg
out
jne
jl
xchg
add
roll
cmpsb
jae
push
ja
xchg
imul
jg
rorb
and
mov
es
lcall
fsub
xchg
std
xor
add
jnp
loop
add
cwtl
jle
lock
and
mov
sbb
jle
sub
in
fwait
sub
imull
ss
stc
push
add
sub
xchg
int
popa
mov
lods
leave
fs
jnp
mov
sub
pop
mov
lods
push
jne
push
or
testb
insb
icebp
daa
movsb
sbb
popa
insb
push
lret
and
int3
mov
dec
fwait
xor
jecxz
adc
jle
ffree
sub
repz
lods
dec
fdivs
mov
pusha
bound
push
cmp
dec
jmp
bound
or
xchg
and
call
call
add
cmc
pop
data16
data16
loop
test
jmp
insw
and
ret
addl
mov
clc
push
imull
jmp
stos
scas
jbe
ret
imul
out
xchg
aas
jnp
repz
pop
and
cmp
btc
push
pop
pop
daa
jo
aas
lds
int3
out
pop
mov
inc
mov
sbb
mov
rol
es
and
arpl
fdivrl
pop
mov
arpl
sbb
adc
iret
xor
sahf
fidivrl
and
arpl
xchg
xor
cmp
pop
fiaddl
call
and
aad
mov
dec
xlat
popf
jb
adc
vmread
sti
sbb
in
notl
fwait
mov
scas
int3
mov
sbb
stos
out
mov
inc
and
ret
sbbb
scas
shll
xchg
scas
adc
test
lds
or
dec
loope
pop
xor
mov
divb
jl
pop
dec
sbb
inc
pusha
leave
inc
cmc
enter
pop
xchg
mov
fdivs
cmpsl
testb
xor
enter
mov
jb
lret
mov
stc
loopne
nop
dec
cmp
fidivl
fldl
jae
jmp
shl
js
je
mov
mov
adc
jb
jle
xor
cmp
in
cmc
inc
xchg
rolb
mov
and
cmpsl
out
wrmsr
mov
mov
dec
push
xor
movsb
mov
push
xchg
and
mov
mov
lods
fs
inc
dec
ds
mov
cli
jns
push
insb
xchg
jg
ja
stc
movsb
stos
inc
inc
enter
mov
aaa
mov
sbb
cmpsb
pop
je
pop
fcoml
add
jl
adc
in
pop
pop
pushf
mov
push
push
imull
outsb
pop
push
sbb
ja
imul
fistl
xor
mov
cs
leave
jno
inc
mov
xor
icebp
mov
lcall
orl
xchg
cs
mov
xor
movsb
aad
cltd
mov
aad
test
addr16
cmc
inc
sub
movsl
or
add
data16
inc
out
nop
lahf
add
xchg
mov
mov
in
arpl
lret
fisubs
xor
inc
aaa
psubw
pop
jb
out
lea
daa
leave
cs
mov
mov
add
cmpsb
pop
inc
test
pop
xchg
sbb
pop
jno
fwait
mov
push
das
jmp
addb
outsl
int3
andl
xor
inc
cmp
mov
sbb
idiv
dec
sbb
and
aas
ror
ljmp
in
negb
mov
aam
push
or
loope
aas
push
push
pop
or
and
loopne
mov
scas
shrb
mov
add
sbbl
xchg
jb
fidivrl
add
xor
jge
stc
jns
mul
bound
add
mov
dec
push
ret
cmc
test
xor
incl
dec
or
add
das
or
je
idiv
repnz
pop
or
jmp
in
or
add
push
jp
jb
nop
fnstenv
stos
lods
std
add
or
sbb
pop
inc
mov
movsl
mov
mov
jmp
xor
mov
repz
flds
xchg
cli
xchg
bound
pop
and
lea
push
pop
inc
add
mov
pop
jnp
popa
addr16
test
xor
cltd
mov
test
loop
nop
ret
inc
mov
scas
mov
mov
js
lock
dec
sub
enter
aaa
sbb
add
icebp
arpl
xchg
adc
or
or
push
mov
pop
std
push
jge
negb
dec
or
call
outsb
pushf
mov
xchg
jmp
sbb
xor
pop
addb
sbb
mov
adc
jecxz
fbstp
enter
push
jp
mov
xlat
sbb
xor
stc
gs
sbb
imul
stc
lea
jne
mov
mov
xor
ss
in
xchg
push
nop
sub
lods
xchg
jle
and
and
and
push
mov
test
and
and
rorb
rcl
jne
mov
sub
mov
jmp
and
js
xlat
push
jo
fcoms
shlb
ret
loopne
adc
dec
cmc
into
fildll
xor
jmp
out
and
sti
enter
add
test
pusha
lret
pop
sub
pop
aam
scas
aas
popa
pushl
test
ficomps
xor
add
sub
imul
and
sti
ds
lods
sub
fmul
add
dec
xchg
addr16
and
xchg
and
cwtl
clc
dec
dec
cmp
mov
adc
or
jle
mov
in
popf
loop
xchg
insb
je
shlb
or
push
xor
jp
mov
dec
in
outsb
outsb
sub
and
inc
frstor
mov
clc
popl
incb
pop
in
lret
add
inc
cmp
xchg
and
xor
fisubl
rclb
mov
mov
add
aaa
nop
xchg
mov
cmovg
jae
push
mov
push
fmulp
mov
ss
mov
dec
jns
in
in
js
mov
enter
test
int
lock
jo
jnp
leave
push
invd
and
jb
daa
cmpsl
dec
adc
lds
jmp
aas
out
sub
icebp
mov
mov
scas
xchg
cmpsl
rcrl
cs
ret
ljmp
pop
pop
xchg
in
and
push
pop
inc
loopne
sbb
cmp
and
mov
ja
or
inc
push
ret
popf
inc
mov
pop
outsl
push
jns
inc
mov
mov
mov
imul
and
mov
mov
pop
in
movsb
or
xor
xchg
movntps
out
stos
and
jecxz
or
xchg
and
sub
cmp
pop
aam
sbb
push
mov
pop
lcall
xor
test
xchg
stos
xchg
daa
movsb
push
gs
mov
dec
xchg
ljmp
mov
pop
inc
adc
inc
arpl
adc
imul
mov
or
clc
roll
loope
nop
pop
iret
or
jo
ja
cmp
jnp
jb
add
push
fs
pop
in
adc
leave
jae
fadds
cmc
push
jge
insl
add
adc
dec
insl
aaa
cmp
push
dec
mov
or
or
imul
imul
xlat
xor
adc
out
mov
mov
iret
je
mov
fwait
add
inc
fcmovnbe
inc
aaa
jle
daa
ss
fiadds
push
leave
ficompl
test
sbb
std
and
xor
push
mov
bound
xor
popf
adc
push
push
stos
mov
xor
ds
fiaddl
or
mov
cmp
mov
sub
jmp
push
ss
ret
jmp
xchg
shl
aas
sbb
xor
cmp
jbe
mov
shl
pop
jmp
or
jae
sbb
sub
mov
loopne
test
xlat
fdiv
cwtl
inc
pop
shlb
inc
xchg
mov
lret
insl
or
popa
dec
aad
fs
sar
mov
xchg
out
out
pop
lods
sub
cmp
add
or
jl
loop
push
pop
inc
sbb
ljmp
sub
adc
mov
fiaddl
push
leave
jbe
xor
cmp
xor
jb
cmp
in
cmp
pop
or
lret
test
fs
mov
add
je
fstpt
xorl
fsubrl
jnp
pop
divl
jle
pushf
arpl
inc
out
sub
mov
adc
iret
jmp
sbb
aaa
cmpsb
movsb
cltd
push
in
outsl
daa
xor
loop
inc
push
ljmp
cs
pop
out
sbb
cltd
dec
xor
frndint
je
mov
adc
dec
insl
leave
lret
sub
cmp
mov
lret
add
dec
std
rorl
inc
orb
mov
or
stos
test
dec
xor
out
inc
and
mov
xor
mov
data16
sub
pop
push
pusha
out
xor
inc
loopne
xor
and
xchg
push
aam
enter
mov
xchg
or
jmp
pop
out
outsb
dec
stos
rcrl
addl
popa
cwtl
jmp
stc
jecxz
jp
pop
xchg
mull
cmpsb
fisttpll
or
mov
ret
adc
push
sbb
lock
or
adc
lock
jge
rorl
sahf
cltd
popf
sbb
jae
fsubs
sbb
sbbb
push
ja
push
je
filds
sahf
add
popf
test
pop
repnz
stos
dec
arpl
dec
addr16
cmpsb
enter
adc
mov
imul
pushf
pop
adc
adc
cli
in
cmp
lahf
lods
inc
in
xchg
leave
and
repnz
mov
and
inc
add
xchg
js
rcll
sbb
fld
sbb
fcomps
jb
and
fisttpl
adc
sub
pop
dec
jp
xchg
pop
dec
sarb
adc
and
ss
mov
jbe
sub
in
movsl
xor
pop
out
lahf
xchg
sbb
jo
movsb
sti
adc
xchg
sub
dec
and
scas
pop
call
imul
sti
xchg
mov
hlt
dec
leave
pop
bnd
push
xchg
shrb
mov
out
lods
call
xor
cmpb
jne
pusha
bound
fsubs
bound
int3
jo
scas
xor
inc
pop
cmp
lods
loopne
mov
mov
lods
jecxz
mov
rorl
outsl
in
sti
push
mov
movsl
mov
cwtl
lock
jp
xchg
out
stc
addr16
outsl
pop
cmp
sahf
mov
ss
fs
pop
mov
rcl
shlb
jmp
orb
mov
sti
into
mov
inc
push
jmp
xor
adc
mov
mov
popf
clc
adc
js
mov
xorb
xchg
clc
pop
rorb
js
add
mov
inc
mov
mov
lcall
stc
out
add
addr16
push
mov
inc
movhps
dec
int3
push
test
mov
hlt
xchg
add
pop
testl
cmp
ret
mov
repnz
or
push
js
popl
icebp
lahf
add
mov
shl
rolb
lea
out
mov
into
cli
or
pop
enter
cmp
je
popf
pop
add
dec
or
inc
jbe
xchg
daa
or
sub
sahf
jge
mov
pushf
nop
sbb
inc
push
fadd
fwait
popa
jle
mov
xor
ss
dec
add
data16
lcall
mov
adc
lret
ja
fstpt
andl
je
outsb
cmp
pop
lods
push
xchg
dec
jle
mov
les
pop
inc
jecxz
data16
pop
int3
loop
jne
mov
jbe
rolb
and
int3
push
mov
fdivrs
aad
push
clc
pushf
mov
cltd
repnz
jle
cmpsl
imul
add
shrl
jmp
inc
dec
out
adc
mov
aad
sub
push
das
and
xlat
sub
or
and
fucomi
cltd
jge
lcall
xchg
sbb
pop
jle
shll
push
cmp
jno
mov
xchg
jo
or
int
pop
imul
pop
xor
fistl
add
jo
xchg
test
imulb
outsl
insl
add
fstpt
jecxz
mov
jne
sub
lcall
loope
sahf
roll
xchg
daa
mov
xchg
test
addl
mov
jp
mov
push
mov
repnz
inc
ds
test
xchg
inc
mov
int
out
repz
into
mov
outsb
scas
leave
mov
add
mov
in
insl
or
popa
in
jle
out
ret
mov
cmp
or
out
sbb
adcb
mov
add
sub
sbb
pop
push
lret
and
das
je
pushf
jmp
cmp
xchg
rol
fcompl
sbb
int3
cld
jo
pop
add
adc
lcall
arpl
lahf
fs
decl
and
fwait
add
shl
sbb
mov
push
pushf
mov
xchg
ds
mov
sub
out
mov
insl
js
divb
push
mov
fs
cmc
aaa
mov
mov
fisubl
leave
in
pop
inc
add
push
pop
fwait
sar
enter
fs
inc
out
or
stos
scas
cmp
xor
loopne
adc
xchg
cmc
mov
xor
inc
push
pop
out
fucomip
test
lret
add
xor
test
daa
scas
push
imul
aas
test
insl
lock
add
cs
cs
sti
imul
mov
or
pop
movb
scas
cltd
sti
sub
cmp
subl
mov
xor
mov
push
mov
push
rcll
ret
cmpsb
mov
add
sti
mov
stos
addb
sub
fwait
test
lds
pop
movsb
fwait
adc
dec
dec
xchg
mov
pop
std
mov
rol
push
mov
outsb
jae
mov
jp
shr
movsl
sub
mov
mov
imul
mov
xor
mov
jecxz
sahf
dec
mov
add
mov
xorl
push
fs
pop
cmp
mov
mov
fists
mov
push
sbb
aas
xchg
rorl
adc
loope
test
xchg
dec
mov
jge
lea
rol
loope
shlb
stos
pop
mov
pusha
mov
jae
or
mov
decb
lea
test
popf
js
shll
testb
jo
mov
out
cmc
and
jge
inc
xchg
sub
rorl
gs
mov
push
xchg
pusha
iret
and
out
call
test
xchg
insb
outsb
ficoms
jmp
push
jecxz
dec
sar
leave
push
inc
sub
in
dec
ja
das
outsb
mov
rcr
int3
or
in
pop
xchg
repz
mov
inc
fs
cltd
inc
pop
cmp
push
inc
add
mov
imul
jmp
out
fistps
gs
ljmp
lcall
shlb
mov
xchg
popa
mov
stc
loop
jnp
hlt
ljmp
loope
hlt
test
std
inc
fildl
insl
sahf
add
cmp
ret
inc
adc
and
loopne
adc
sahf
push
mov
stos
in
test
adc
lods
adc
scas
int
dec
call
stos
gs
mulb
insb
mov
fistl
jo
mov
mov
push
inc
test
popf
xchg
xor
jne
insb
dec
add
xchg
aas
lods
popa
dec
lea
mov
pusha
jmp
call
jp
fisttps
inc
out
pop
movsb
sahf
pushl
fnsave
movsb
aam
aad
adcl
adc
jle
xchg
into
cwtl
xor
pushf
push
dec
aaa
and
insl
inc
jno
adc
mov
inc
je
mov
rcrb
fsts
sbb
lods
mov
sbb
movsl
jl
ljmp
pop
stos
rep
mov
sub
xor
aaa
mov
push
stos
movsl
js
jns
cmp
es
test
mov
icebp
mov
xor
jmp
notb
mov
lods
mov
mov
aad
xor
cltd
xor
cmpsb
sub
idivb
lret
add
cmpsb
push
or
cmc
dec
adc
jno
inc
je
fdivrp
pop
lods
fwait
push
adc
sub
cs
dec
mov
out
aad
std
mov
sahf
cmc
sbb
lods
jae
pop
jge
stos
dec
int3
mov
cmpsl
faddl
iret
loope
popa
orb
pop
xlat
pop
lea
push
pop
in
outsb
ljmp
aaa
dec
cwtl
xchg
jo
xor
lods
sub
arpl
data16
addr16
mov
in
or
xor
loope,pt
xor
mov
repz
outsl
clc
jbe
cmp
cmp
loopne
mov
jl
cmp
cmpsl
into
addr16
es
test
mov
xchg
or
cmovae
jb
and
xor
jp
sbb
dec
mov
stos
mov
es
in
loope
popf
push
mov
call
ds
mov
mov
push
mov
insl
lret
add
lahf
jb
cmp
fs
das
fwait
or
mov
test
pop
and
frstor
lret
scas
push
ret
xor
sbb
mov
stc
pop
shl
mov
and
adc
sbb
mov
fsubr
jle
xchg
jge
push
push
gs
test
push
dec
lock
push
push
cmc
push
dec
xor
out
cmpl
test
inc
push
aad
or
add
add
inc
les
inc
push
mov
insb
push
lock
fs
pop
pop
push
lahf
rcrl
push
mov
and
jmp
jb
mov
gs
pushf
jmp
pushf
test
and
ja
pop
xchg
clc
insl
mov
sti
pop
sub
add
ficoml
jmp
add
mov
les
pop
hlt
push
rorl
xor
dec
pop
pop
mov
or
pop
xchg
mov
ljmp
repnz
mov
test
sub
push
sahf
inc
mov
and
ljmp
loope
mov
mov
sbb
cmp
test
pushf
push
sbb
cwtl
xor
call
mov
jl
stos
mov
imul
push
adc
jmp
iret
mov
mov
test
and
clc
inc
inc
push
icebp
ss
jno
test
sti
sbb
add
not
lods
sbb
cmp
push
xor
sub
cmp
fucomp
dec
or
roll
mov
in
add
leave
jns
adc
test
jne
xchg
cmpsl
mov
shrl
into
inc
or
out
imul
aas
fs
sbb
sub
xor
sbb
dec
jno
add
testb
lcall
sub
jle
lahf
cwtl
inc
fs
pop
adc
es
xchg
enter
adc
xor
in
insl
cli
inc
push
and
push
test
filds
jmp
cmp
enter
inc
xor
pop
lret
shlb
fcompl
gs
into
sub
push
pop
mov
add
dec
xor
rcrb
pop
into
and
repnz
cld
dec
lea
and
xor
mov
jmp
add
popf
sbb
cmp
pop
add
mov
jnp
or
xchg
or
pop
adc
xor
xlat
adc
mov
in
or
push
aam
jp
or
sub
loope
mov
inc
fcoms
add
push
mov
and
psrlq
mov
or
jmp
xor
mov
push
xor
mov
jge
dec
and
mov
in
fiadds
fwait
shl
and
inc
mov
mov
push
js
push
fwait
xchg
inc
cld
xchg
in
mov
arpl
scas
cmpsl
mov
sub
scas
lock
push
test
stos
cmp
add
sub
mov
outsl
xchg
add
or
addl
lcall
movlps
dec
movsl
shll
iret
inc
out
icebp
div
outsl
mov
xor
mov
roll
xchg
test
dec
pop
pop
pop
jmp
inc
dec
pushf
outsb
out
mov
inc
mov
popa
sahf
rorb
mov
test
mov
xchg
jl
or
lods
dec
js
out
inc
pop
jp
mov
dec
mov
scas
sub
leave
pop
lea
mov
cmp
adcb
movsl
es
cmp
mov
sbb
push
jle
push
push
loope
or
xor
lea
pop
sub
mov
das
push
test
sub
shlb
sub
pop
mov
ret
test
pushf
dec
les
mov
sub
xchg
mov
xor
out
cmp
lret
sub
mov
push
jle
icebp
xor
ss
inc
cmp
cs
sub
in
lea
adc
push
mov
scas
outsl
ret
sbb
imul
jp
out
in
fdivrp
ret
push
add
sbb
inc
outsb
lahf
adc
sahf
dec
leave
fstpt
push
loopne
hlt
push
dec
lret
jmp
sub
xor
idivl
ret
fwait
subl
xchg
das
fnstcw
cwtl
popf
rcll
mov
scas
into
pop
addr16
jns
fstl
dec
aas
test
and
scas
adc
or
xchg
push
mov
mov
out
inc
gs
pop
aas
mov
mov
fldt
dec
mov
mov
add
das
adc
sbb
cs
xchg
test
mov
and
sbb
lret
xchg
and
fisttps
call
call
mov
fwait
mov
push
ficomps
mov
insl
pop
repnz
fdiv
std
pop
xchg
add
inc
pop
cs
aaa
sahf
es
decl
decb
daa
sub
push
hlt
out
jle
test
push
fwait
testb
fldz
lds
aam
sti
insb
inc
xor
popa
xchg
std
jecxz
aam
jnp
push
lcall
mov
adc
aad
in
lock
inc
push
pop
xor
push
add
sub
pop
outsl
sbb
lea
dec
neg
pop
push
mov
pop
push
xor
and
test
jae
jnp
packssdw
pushf
loopne
jne
repz
lcall
push
lds
sub
movsb
push
jnp
jl
mov
mov
push
testl
scas
das
bound
fdivrl
adc
mov
outsb
mov
xor
jo
xor
sbbb
cmp
add
mov
lock
rclb
out
mov
xchg
orb
dec
jmp
sub
int
jb
xor
cmp
adc
int3
mov
cld
lea
fnstsw
push
jo
lods
xor
sub
xor
dec
mov
mov
and
push
dec
xchg
and
xor
mov
addr16
mov
imul
pop
in
add
test
mov
and
cmp
aam
sub
mov
xor
pop
es
hlt
xorl
mov
pop
add
divb
cmp
shld
pop
stc
outsb
cmpsb
insb
sti
and
loopne
and
fidivrl
in
fs
and
xor
mov
movsb
push
dec
jb
cs
mov
cltd
fisttps
and
nop
ljmp
xchg
dec
rorl
add
mov
jae
imul
xchg
mov
xchg
sahf
xchg
mov
iret
outsl
andb
mov
sbb
add
stc
push
fists
int
jmp
adc
jecxz
addr16
mov
sub
jg
lahf
push
and
cmpsl
dec
and
adc
test
mov
add
fstl
out
push
repnz
pusha
add
stc
or
cmp
dec
pop
pushf
xchg
dec
shl
jae
adc
push
jnp
in
xchg
push
insb
xor
mov
add
jno
popf
test
dec
aad
pop
xor
dec
leave
mov
aaa
movsl
lods
es
fcmovne
imul
adc
dec
adc
fiaddl
pop
mov
and
cmp
xor
icebp
xor
push
pop
pop
lds
std
add
mov
sbb
xchg
adc
dec
push
sarl
ja
dec
dec
inc
xor
mov
in
cmc
inc
sub
xchg
mov
sub
xor
mov
lods
pop
mov
jl
mov
and
insl
inc
stc
push
adc
mov
movsl
loope
cltd
mov
push
loop
pop
js
imul
inc
addr16
cmpl
in
mov
adc
mov
repz
push
hlt
out
stos
scas
mov
pop
call
xchg
push
and
imul
cltd
out
mov
sbb
das
push
enter
inc
frstor
test
insb
cli
js
aaa
mov
push
mov
jbe
cmp
test
les
rcll
ret
jo
movsb
adc
decb
cld
add
mov
popf
stc
xchg
in
data16
mov
sbb
aad
int
nop
adc
rorl
jle
sub
mov
dec
and
aaa
daa
xor
jne
mov
mov
cmp
pop
xor
jecxz
push
jno
inc
pusha
fsubrs
mov
dec
push
adc
insl
stos
lea
icebp
sub
pop
lods
pop
stc
call
sbb
sbb
ret
or
push
clc
pop
adc
scas
popf
and
pop
ret
mov
mov
fs
fldlg2
mov
ds
sbb
imul
sub
adc
loope
ficompl
cmpsb
rcl
jp
or
enter
inc
daa
test
aad
int
in
adc
or
mov
out
addr16
xor
mov
adc
mov
pop
jmp
xor
shll
icebp
not
arpl
iret
xchg
cmp
cwtl
mov
push
push
push
pusha
in
in
dec
cltd
mov
sub
scas
lret
jge
aas
imul
sbb
repnz
orl
pop
mov
jne
in
mov
mov
enter
icebp
mov
xlat
xor
fisttpl
adc
inc
cmp
xor
adc
insb
dec
pop
push
fs
jne
xlat
jmp
test
sti
inc
movsl
shlb
jge
mov
cmp
ja
cmp
inc
add
out
pop
push
mov
clc
test
fiadds
xchg
push
sbb
aaa
mov
enter
sub
call
push
sbb
sti
fwait
pop
xlat
mov
or
add
clc
adc
push
jne
adc
xor
stc
adc
sbb
push
inc
rcll
cwtl
mov
outsl
jmp
dec
xchg
adc
pop
mov
imul
push
hlt
pop
lcall
cld
sbb
adc
iret
scas
lods
pop
inc
pop
test
and
cwtl
jnp
jo
xchg
movsl
rcrb
pop
ds
xchg
jp
leave
push
mov
mov
ret
sbb
int
faddp
push
test
mov
adc
mov
pop
pop
das
outsl
data16
fldz
lret
mov
adc
scas
mov
fisubl
mov
iret
je
push
xchg
sti
mov
mov
push
mov
loop
fprem
imul
jl
or
lahf
push
jne
adc
pushl
pusha
int3
jmp
pop
and
mov
mov
cmc
aam
lcall
cmp
push
mov
adc
jnp
movsb
pushf
ss
mov
jge
rorb
popa
inc
and
mov
dec
test
addl
aad
or
imul
xchg
int3
xchg
pop
adc
incb
out
xlat
xor
out
inc
add
dec
loopne
jmp
mov
popa
inc
add
sub
jle
pop
push
outsb
jmp
shll
gs
xor
mov
ljmp
inc
inc
je
mov
mov
cmp
movsl
adc
xchg
inc
sub
pop
jmp
jle
into
insb
add
inc
mov
out
movsl
cmp
outsb
stc
into
fwait
xchg
leave
mov
in
stc
xor
fiaddl
imul
adc
pusha
fiadds
and
xor
xchg
addr16
xchg
jae
clc
push
aaa
cmp
movsb
and
ret
test
ror
mull
mov
cmpl
jmp
mov
sub
sbb
xchg
ss
dec
sti
fwait
push
fcmovne
sub
jbe
push
int3
xchg
scas
sti
jl
cmp
pop
push
pusha
xchg
xchg
pushf
stos
in
insb
dec
popf
out
and
lock
cmovp
imul
sbb
dec
cmp
outsb
imull
cmpsl
sub
hlt
dec
jge
int3
addr16
shlb
inc
and
ss
jle
cmp
and
sahf
ss
je
ljmp
out
sbb
inc
shlb
popa
dec
fbstp
shr
cld
aaa
shll
sar
cs
xor
iret
sar
mov
mov
push
inc
sbb
xchg
xchg
imul
mov
stc
lock
pusha
ds
push
or
xchg
je
xchg
and
mov
out
jp
jae
sub
cmp
jle
lahf
mov
cld
or
mov
divl
mov
inc
xchg
movsb
cmp
jge
fcomps
sti
nop
leave
push
insb
repz
mov
mulb
jne
sbb
clc
shr
xchg
mov
jge
pop
rcrb
ja
rclb
ljmp
mov
popf
cmc
pop
test
or
push
add
push
mov
loopne
in
cld
xor
int
arpl
jnp
mov
push
pop
mov
mov
add
fcoms
out
mov
arpl
add
stos
inc
adc
insl
cltd
fwait
scas
jo
test
jle
mov
jno
inc
andl
add
xor
and
or
dec
pop
mov
dec
cmpb
push
cmp
lock
call
les
jnp
in
jmp
aam
push
cmp
sub
push
jl
mov
ret
ljmp
pop
inc
scas
xor
ffreep
js
fstpl
aad
or
ret
call
lcall
inc
into
mov
lods
push
push
cmp
cmp
sbb
scas
cmpsb
mov
mov
xchg
mov
out
shlb
nop
fistl
mov
fisttpll
add
mov
pop
mov
sbb
and
dec
aas
pop
cmpsb
lods
test
lret
ret
inc
jmp
adc
adcl
lahf
adc
fcompl
sub
dec
movb
cli
rcll
je
notb
inc
mov
jae
xor
icebp
dec
decb
inc
dec
xlat
mov
push
jmp
orl
xchg
dec
inc
cld
jnp
dec
xchg
les
pop
inc
enter
sub
fsts
add
pop
cld
mov
cmp
or
cmpsl
fsubl
or
popa
mov
adc
ja
pop
lret
popf
clc
inc
inc
adc
adc
pop
add
push
push
dec
pusha
and
data16
shlb
shrb
and
in
cli
mov
and
cltd
pushf
gs
pop
sbb
inc
in
sub
mov
aaa
loope
or
in
ret
pop
add
stc
xor
pushf
lret
dec
dec
and
pop
jns
inc
dec
repnz
or
adcl
jg
pop
fs
xor
cmp
stos
mov
pop
add
test
daa
fwait
std
shl
cltd
xchg
lds
test
adc
pop
add
sub
das
lret
mov
mov
nop
mov
jbe
in
mov
or
dec
scas
push
cli
sub
xchg
fisubl
sbbb
dec
jl
jle
xor
push
ja
push
movsb
cmp
ja
jnp
mov
mov
and
fdivs
jae
pushw
daa
sbb
data16
pop
stc
data16
add
ds
inc
pop
jno
pop
adc
xchg
ds
pop
das
jnp
push
rorl
xor
fs
xchg
dec
push
hlt
add
lea
daa
mov
mov
cltd
push
popf
stos
push
stos
cvtdq2ps
fidivs
inc
inc
push
push
jp
mov
push
aad
mov
dec
test
mov
push
xor
pop
sub
pop
mov
pushf
lods
lods
cmp
inc
sar
std
sbb
xchg
subb
mov
dec
pusha
arpl
dec
jg
test
mov
test
ret
lcall
pop
int3
shufps
out
loopne
not
mov
rolb
add
add
sub
int
je
inc
jbe
pop
cmc
jbe
je
inc
sti
push
shrd
pop
gs
ds
inc
mov
and
cs
inc
xor
mov
in
inc
mov
and
gs
lock
int3
inc
fstps
js
push
xchg
pushf
out
aas
xchg
mov
out
mov
fnstcw
into
pop
nop
push
clc
ljmp
fists
push
push
imul
daa
enter
je
lds
cmpb
mull
inc
jg
add
mov
push
int3
lea
sub
mov
scas
cmpsl
cld
jae
iret
pop
cmp
les
sbb
lds
imull
sub
shrb
idivb
push
idivl
scas
in
out
pop
xchg
out
movsb
lods
mov
aam
xchg
mov
or
imul
loopne
mov
popf
dec
mov
je
mov
ljmp
sbb
and
in
pop
out
jne
lret
popf
jl
pusha
popa
dec
dec
ret
arpl
pushf
xchg
push
or
fidivrs
je
cmpsl
mov
push
pop
inc
popa
push
popa
jp
call
jne
push
mov
or
sahf
inc
push
xchg
out
lahf
enter
int3
mov
lret
cmp
shrl
mov
stos
test
in
and
add
sub
arpl
and
fwait
jle
js
dec
push
pop
lods
jl
inc
lods
lcall
das
dec
xchg
outsb
dec
arpl
call
addb
sbb
js
sar
xchg
out
pop
add
das
push
fbld
xchg
adc
js
pop
or
cmp
sbbl
pop
insb
add
jbe
ljmp
and
les
push
inc
pop
push
lret
jmp
dec
xor
movsl
cmp
mov
push
and
sbb
xor
inc
sub
cmpsl
sti
andb
push
dec
dec
hlt
movsl
jb
mov
jbe
mov
stos
cli
mov
sarb
rcll
movsl
cmp
icebp
in
int3
push
mov
add
jo
cmp
pushf
jl
add
ret
adcb
scas
push
lods
imull
test
mull
adc
mov
fisubl
jp
aas
cmpsb
add
popaw
sub
in
or
xchg
in
pop
data16
inc
lcall
cmpsl
iret
mov
inc
sbb
sub
jge
jmp
push
mov
push
sbb
add
or
cmpsb
or
push
sub
out
xlat
cli
in
jecxz
fcomps
or
inc
push
mov
idivl
mov
sbb
xor
mov
sub
shl
fcom
add
dec
xchg
add
mov
data16
sbb
pop
mov
cwtl
push
fnstsw
jnp
divb
inc
mov
mov
iret
mov
jae
outsb
add
push
mov
andl
pop
das
pop
popl
test
mov
sub
int3
in
adc
lret
xor
sbb
and
repnz
sete
stos
fwait
popf
in
test
mov
stos
filds
rorl
sbb
add
fnstsw
out
add
daa
or
arpl
mov
or
insl
inc
pop
mov
push
lret
lock
jecxz
in
jle
gs
in
xchg
xorb
cwtl
lods
pushl
sbb
mov
mov
xor
cs
repz
adc
lret
push
cmpsl
stos
xor
lock
xor
pop
fs
push
es
in
dec
les
adc
pop
test
jnp
add
cltd
arpl
out
icebp
imul
xchg
sub
call
sbb
xor
sahf
mov
adc
xchg
cmp
mov
adc
dec
dec
mov
hlt
cli
jo
mov
and
and
jno
xor
lock
sub
push
inc
pop
push
mov
jno
jo
fwait
movsb
adc
mov
scas
cwtl
dec
sub
cmp
pop
sti
and
add
es
push
insl
cmpsb
sub
lock
push
jmp
fwait
mov
addr16
xor
fbstp
dec
lods
adc
mov
out
loope
adcl
fildl
add
or
mov
jg
lock
mov
fildll
or
rolb
in
sub
mov
xor
sahf
mov
lahf
test
fimuls
push
xchg
popa
bound
scas
pop
and
push
sbb
add
sub
aas
inc
jnp
aaa
xchg
jns
sub
fdivrs
dec
mov
daa
pop
rclb
adc
sahf
cltd
add
mov
inc
lcall
ret
call
sbbb
pusha
jmp
popa
pop
aaa
mov
jmp
sub
dec
rol
push
ret
jb
sbb
out
fisttpl
daa
mov
push
mov
mov
xor
inc
xchg
or
test
insb
gs
negb
push
mov
iret
dec
xor
jecxz
cmp
mov
gs
int
xor
lcall
mov
and
popf
mov
es
fwait
mov
daa
add
loopne
mov
sbb
insl
cli
xchg
xor
in
rcll
cmp
push
mov
fst
test
fwait
sub
rcrb
inc
call
adc
mov
pop
push
aas
popf
mov
movsb
or
add
jbe
mov
insl
cmp
pusha
add
inc
lods
into
xchg
insl
aad
loopne
mov
pop
xor
aad
bound
repz
push
test
xor
es
sti
mov
adc
inc
xor
xor
xchg
ror
add
dec
jecxz
out
or
mov
dec
fisubrs
mov
or
daa
popf
fldenv
push
xor
pop
cwtl
sarl
xor
inc
mov
sub
pop
sbb
dec
es
pop
lods
int3
fwait
sub
sub
cmp
xchg
dec
mov
sahf
mov
cmp
fbstp
ret
mov
aad
xlat
int3
cmp
xchg
loop
lret
push
ret
push
stos
push
sbb
cmp
imul
je
sbb
aad
add
jg
push
add
mov
pop
inc
stos
fstpl
loop
add
aad
data16
push
inc
pop
push
sbb
je
sarb
out
or
jno
sbb
xor
lock
dec
mov
lahf
sbb
and
or
inc
xchg
mov
xchg
sub
sub
or
aad
xchg
popf
push
mov
or
ficompl
js
jb
outsb
insb
clc
sbb
xchg
dec
inc
xor
imul
fcmovnbe
xor
dec
out
inc
test
pop
popf
xor
rolb
jge
xor
stos
enter
ss
push
je
jne
scas
aaa
sub
mov
add
sbb
cmpl
addr16
aam
loop
in
pusha
scas
jl
or
ret
sbb
xor
cmp
negl
stos
nop
out
into
in
xor
or
xor
mov
cmp
push
iret
add
sbb
pop
dec
subl
mov
cli
movsb
sbb
cmp
mov
lock
test
cld
call
int3
cmc
adc
jb
mov
mov
dec
aad
push
cmp
inc
add
xlat
int
pop
stos
push
das
pop
cs
inc
lcall
enter
push
cmc
or
loope
fbstp
test
adc
pop
sti
out
or
cmpsb
js
loopne
repz
pusha
adc
push
es
aaa
or
mov
fmul
aaa
inc
mov
in
dec
aaa
pop
inc
xchg
cmp
mov
pop
sbb
ret
mov
test
gs
cwtl
clc
jmp
daa
aad
push
adcb
cmp
pop
mov
jb
add
loop
jge
dec
xchg
xor
sti
imulb
out
xor
mov
xchg
scas
mov
xor
sti
fidivrs
aaa
filds
push
movsb
xchg
jo
cmp
jnp
pop
mov
jo
mov
sub
std
in
pop
inc
jne
pop
sbbb
dec
sahf
pop
imul
mov
mov
cwtl
add
ljmp
movsb
mov
pop
in
xor
call
into
mov
or
mov
sbb
push
inc
paddsw
dec
push
add
adc
mov
mov
pop
std
adc
gs
icebp
nop
or
imul
and
cmp
mov
fisttpll
movl
popf
jp
and
sub
sub
cld
stos
sub
jae
das
cmp
jmp
xchg
mov
lds
adc
dec
mov
mov
out
ret
xlat
ds
popf
and
cwtl
xor
cwtl
out
push
mov
sbb
jae
xchg
push
and
xlat
mov
lods
and
cmovo
pusha
lcall
data16
or
ja
mov
pop
and
sub
orb
xor
out
iret
icebp
push
std
add
jmp
sub
jle
dec
sbb
inc
in
jmp
movsb
and
sub
xor
outsl
pop
mov
ss
add
iret
mov
int3
and
in
test
adc
mov
add
sub
xor
sahf
cmpb
and
mov
loope
sahf
cmp
push
mov
testb
aaa
sub
jb
in
fmul
mov
sbb
fisttpll
pop
push
imul
push
jae
mov
les
fmul
jne
cmp
testl
cmpsb
fistpll
call
scas
dec
inc
test
or
push
repz
pusha
mov
clc
fsubrs
push
push
loop
sti
and
test
out
xchg
dec
insl
mov
xchg
push
jbe
outsl
fildll
test
xchg
test
cmp
ss
sbb
push
test
dec
mov
push
mov
test
sbb
cld
and
cmp
fiaddl
mov
jecxz
ss
pusha
aas
jmp
push
dec
xchg
xchg
out
rcrl
and
adc
es
push
fmull
cwtl
mov
dec
cmp
hlt
movsl
mov
jl
xor
fistl
out
enter
shr
sub
shll
mov
push
mov
or
mov
mov
add
lods
push
mov
adcb
mov
xchg
int3
mov
dec
stos
les
popa
mull
fidivl
enter
rcll
popf
cltd
cli
test
bound
cmp
mov
mov
popa
mov
aaa
pop
sbb
sbbb
scas
es
loopw
add
xchg
pushf
xor
lret
lret
subl
scas
addr16
mov
popf
mov
movaps
sbb
mov
sti
adc
adc
xchg
mov
mov
sub
and
mov
or
and
stos
jno
adc
test
int
cli
inc
adc
push
cmpb
fidivrs
and
or
cmp
xor
lret
mov
rorl
cltd
jge
jp
add
jns
setl
dec
xlat
pop
insl
push
lcall
lea
pop
test
pop
mov
mov
sbb
mov
and
fidivrs
gs
lds
bound
sbb
or
xchg
dec
insb
cmpsb
lcall
test
cmp
jae
add
adc
out
sti
mov
mov
mov
shlb
lahf
jne
andb
push
cmp
nop
aas
jmp
push
mov
adc
cmpl
adc
sub
xor
adc
stos
fistpl
test
in
adc
in
xchg
repnz
jb
int
xchg
jecxz
stos
out
in
sbb
cltd
jge
enter
and
sub
inc
aas
gs
xor
cmp
std
cmp
push
cmp
inc
jecxz
adc
popa
call
or
sub
andb
dec
push
jbe
mov
and
outsl
and
daa
fcmove
pop
enter
push
popf
cmp
incb
test
xor
fistpl
pop
lods
adc
mov
fistpl
lods
sbb
sbbl
xor
pop
ficompl
repz
movsb
mov
sbb
fwait
jb
mov
xchg
add
xchg
lds
inc
dec
jecxz
dec
push
into
lret
mov
repz
sbb
xchg
xor
cwtl
or
outsl
pusha
xor
stos
xlat
out
mov
loop
push
test
loop
push
jl
out
mov
movsb
mov
std
xlat
sub
xlat
cmp
loop
sbb
aam
jno
ja
ret
movsb
jg
repz
push
cmp
repnz
adc
rclb
inc
cmpsl
lcall
clc
pop
jmp
dec
lods
cmp
mov
test
fs
pop
cltd
or
outsb
sti
cli
fadd
inc
xor
mov
in
pop
outsl
rorl
imul
jmp
cmp
int3
fcom
xchg
xchg
sub
jecxz
in
xchg
mov
popf
mov
test
negl
dec
jmp
out
dec
dec
faddl
xchg
xchg
lods
mov
push
dec
sub
cwtl
xchg
push
fldenv
mov
mov
xchg
pop
xor
fdivrs
rorl
push
adc
aas
xor
mov
mov
popw
sub
ja
xchg
sub
fcomps
mov
mov
loopne
dec
cmp
daa
cmpsb
test
inc
arpl
scas
es
jnp
aam
cli
pop
pushf
xor
and
mov
cli
xchg
jo
mov
out
fmul
inc
out
incl
sbbl
and
jbe
pop
pop
fsts
out
loop
test
gs
fcmovbe
pop
mov
fldt
roll
mov
xchg
mov
clc
or
mov
stc
and
mov
cwtl
icebp
jnp
sbb
cmp
mov
sub
into
daa
rorb
loop
xor
mov
or
ljmp
or
movl
sbb
push
cltd
xor
dec
fadds
pop
push
sbb
ficoml
xor
lret
push
sbb
mov
cs
push
xorb
sbb
add
aas
enter
roll
sbb
inc
mov
sub
aas
in
stos
jp
lcall
sub
sub
sub
jle
andl
adc
flds
mov
xor
or
add
subb
sahf
jbe
aaa
cmpb
aad
jnp
push
mov
mov
pop
shl
jle
nop
xor
add
ret
push
sub
test
adc
repz
pusha
mov
jno
and
lret
insl
inc
cwtl
xchg
fstpt
mov
pop
dec
mov
push
push
sub
adc
jae
rorl
in
out
mov
inc
leave
int
mov
mov
fidivl
ljmp
add
repz
or
mov
in
dec
cwtl
fstpl
aaa
test
cltd
mov
pop
inc
sbb
jb
jnp
dec
or
scas
sub
mov
add
inc
es
sahf
mov
in
dec
out
cmp
mov
push
addr16
adc
push
push
xlat
cmp
rcr
hlt
xchg
bound
in
mov
inc
loopne
lcall
shlb
jne
dec
lret
cli
mov
repnz
or
mov
stos
push
sbb
xor
mov
rolb
shl
pushf
shlb
inc
push
jg
ss
scas
add
pop
mov
nop
out
jg
lcall
scas
lods
loope
inc
outsb
rcrl
mov
jg,pn
out
xchg
in
mov
push
testb
push
stos
inc
mov
fsubrp
movsl
popf
adc
push
push
fnstenv
xor
movsl
out
sub
fnstcw
cld
or
add
fs
sbb
xor
scas
xor
testl
jg
jg
and
mov
arpl
nop
adc
xorl
test
repz
mov
scas
adc
push
imul
lock
jl
imul
test
xchg
cmpsb
popf
das
mov
pop
push
mov
xchg
sub
outsb
pop
cli
jbe
jg
adc
mov
jno
and
pop
stc
add
mov
inc
out
je
sbb
mov
mov
xor
and
push
rcl
cmp
inc
lcall
lods
aam
lock
adc
and
rcr
push
or
dec
xchg
adc
loope
out
mov
and
std
cmp
push
movsl
dec
sbb
or
push
mov
inc
test
mov
icebp
insb
cwtl
jl
pop
ror
sbb
out
push
mov
dec
stos
xorl
ret
pop
adc
sahf
jne
sbb
out
xor
mov
adc
lahf
jno
jns
mov
adc
outsb
sub
aad
stos
negl
xchg
shll
loop
in
xlat
push
add
cs
jle
leave
cmp
dec
push
cmp
cmp
fstpl
popa
and
push
cld
xor
and
lods
sub
sbb
nop
inc
loope
repz
lods
sbb
ljmp
call
icebp
repz
push
mov
loopne
pop
jo
inc
inc
and
jecxz
xor
jmp
sub
xchg
cld
ret
jbe
divb
enter
add
mov
pop
cmp
lods
jmp
test
cmp
inc
daa
cmp
push
xchg
jecxz
push
adcb
jge
xchg
xlat
pop
sub
loop
ss
lods
xchg
cmpsl
xchg
sub
outsb
mov
test
jle
add
mov
divb
fstl
dec
sbb
lds
pop
gs
stos
rcl
sub
fisubrs
jl
ret
mov
ret
ds
cmc
mov
sbb
pop
repz
sbb
lods
loopne
iret
xor
xchg
mov
jmp
js
stos
leave
jns
enter
sub
jecxz
aas
loopne
test
jle
jl
inc
add
mov
mov
arpl
loop
xchg
xchg
mov
sti
in
or
mov
jmp
jg
mov
cmp
clc
and
push
or
or
cmp
pop
xorl
sub
daa
repz
in
mov
mov
mov
ds
popa
stos
adc
test
sub
stos
push
inc
cmp
dec
add
pusha
lcall
mov
xchg
mull
in
xor
adc
sub
adcb
fs
sub
popf
mov
icebp
xchg
idiv
movsb
cwtl
jmp
insb
mov
or
jge
push
dec
push
repz
in
add
adc
mov
outsb
stos
jl
mov
test
aas
mov
sbb
push
scas
mov
push
push
lods
mov
es
xchg
mov
mov
test
or
cmpsb
out
and
xchg
cltd
adc
mov
pop
sbb
stos
cmpsl
fwait
sbb
jnp
rcll
mov
push
into
push
mov
cs
mov
dec
jp
bound
das
adc
sbb
and
cmp
sub
fs
scas
test
add
cltd
dec
scas
ret
mov
icebp
sti
xor
pop
ret
and
cmp
scas
shl
fnsave
dec
ror
lcall
ss
or
push
dec
cmp
into
cmp
sub
lock
roll
pop
mov
aas
mov
aas
pop
jbe
shl
cmpsb
scas
loopne
push
mov
fxsave
xchg
fsubl
sub
cmpsl
lods
add
shlb
lea
idiv
stos
pop
mov
stc
add
ret
jge
mov
and
repz
pop
lcall
scas
mov
stos
fwait
mov
inc
push
jge
pop
pop
push
ljmp
into
adc
add
pop
popa
mov
xchg
xchg
gs
mov
jns
shl
fsubl
movsb
out
into
adc
sub
mov
es
fimull
xlat
cmp
lea
fstps
in
call
shr
mov
arpl
mov
fsubrl
cmp
pop
pushf
add
mov
add
data16
push
outsb
inc
movsb
mov
ret
mov
jl
stc
je
nop
add
push
dec
jmp
pop
cmp
sbb
mov
in
mov
pop
leave
sbb
fdivs
mov
pop
lea
jmp
outsl
pop
mov
gs
xchg
sbb
cld
clc
adc
sub
mov
sub
lods
dec
nop
mov
hlt
sahf
leave
sbb
lds
push
mov
bound
adc
jns
bound
inc
test
sbb
sti
in
fmull
test
mov
pusha
enter
and
adc
aas
mov
out
shl
in
mov
mov
ret
stos
and
pop
jns
mov
dec
xor
cwtl
test
cmpsl
mulb
inc
repz
and
mov
test
sub
inc
addr16
mov
movsb
cmpsl
shr
cs
stos
lret
cmc
bound
jmp
lret
sub
fnstenv
das
addr16
push
dec
insb
jg
rcrb
test
ja
or
pop
lds
mov
mov
or
ljmp
aaa
leave
das
dec
shlb
or
fcomp
jp
xor
ja
aas
shrl
mov
lret
xor
xchg
aad
loope
xchg
jo
xchg
lret
sub
dec
cmp
sub
imul
stos
popa
fmuls
mov
and
and
inc
pop
mov
aam
mov
fucomi
rorl
data16
pop
jge
into
jp
scas
in
loop
push
mov
mov
in
mov
jecxz
or
movsb
mov
pop
cld
push
sbb
jbe
sbb
sbb
cs
sarb
out
jecxz
pop
sti
cmp
sub
jg
jp
push
dec
lcall
jg
je
or
xchg
test
xchg
pop
fwait
dec
mov
pop
rcr
lcall
fldl
jp
push
sahf
repz
sub
xor
mov
jbe
pop
in
gs
add
bnd
les
test
aas
cmp
push
int
loop
jmp
pop
call
pop
cwtl
int
jae
mov
mov
test
dec
fidivs
push
in
pop
aas
fsubl
ret
cltd
imul
mov
jmp
mov
dec
scas
pushf
fdivrp
shr
push
lret
xor
insb
sarb
pop
add
mov
push
es
cmp
mov
fiadds
in
fs
sti
scas
fwait
sbb
rcr
les
mov
sub
or
movsb
rclb
xchg
pop
adc
inc
scas
sub
outsb
out
lds
test
out
ss
in
dec
or
sahf
gs
insb
and
sahf
dec
fs
xchg
mov
cmc
xchg
and
int
cmpsl
mov
dec
mov
aaa
push
fs
xor
cmp
repnz
mov
mulb
push
xchg
pushl
dec
fisubrl
imul
out
adc
enter
ja,pt
cmp
in
enter
jns
orl
cmp
in
mov
