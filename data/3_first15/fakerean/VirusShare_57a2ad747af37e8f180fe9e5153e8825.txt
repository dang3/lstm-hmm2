jns
popf
push
or
fnstenv
jb
inc
mov
das
push
aas
mov
cs
into
mov
push
fistps
es
xchg
out
jle,pt
out
add
repnz
test
sub
pushf
mov
std
lret
mov
and
mov
sbbl
and
mov
idivb
jge
or
mov
out
ds
idivb
xor
push
cwtl
stc
sarb
imul
shlb
cs
jle
add
jne
repz
sbb
cmovb
or
cmpsl
out
jle,pt
mov
adc
outsl
bound
ret
jbe
scas
sarl
jge
or
testl
int
jge
or
idivl
int
imul
and
shl
sti
mov
mov
out
dec
repz
enter
add
divb
sbb
sub
loope
xor
addb
cmc
pop
xlat
sbb
imul
xchg
mov
jle
out
mov
in
cmpl
jle,pt
adc
decb
mov
xchg
lock
pop
inc
jo
add
pop
and
pop
outsb
es
sti
test
adc
jle
dec
or
movsl
xchg
add
add
and
inc
xchg
pop
mov
jle
mov
cmp
or
cld
jg
out
ds
xchg
pop
sub
out
ds
pop
sti
mov
out
add
xlat
xchg
add
pop
mov
mov
mov
fdiv
ds
sahf
xchg
jg
xchg
out
enter
xchg
and
cmpb
adc
push
xchg
out
cmpsl
std
dec
push
pop
mov
or
xchg
out
jle,pt
aas
gs
and
push
repz
or
jle
cmp
xchg
out
aas
mov
fmulp
jne
push
jle,pt
jns
add
outsb
cmp
mov
sub
add
mov
cmp
dec
outsl
int3
jae
in
push
repz
rorb
push
repz
lds
pop
pop
mov
jnp
std
sub
add
sbb
lea
add
repz
cmpsl
jle
cmp
xchg
jnp
stc
sub
add
adc
mov
inc
clc
out
sbb
jnp
add
xrelease
cmp
add
fdiv
lcall
negl
imul
mov
xchg
cltd
shll
sub
icebp
imul
int
popa
insb
out
adc
or
arpl
add
sub
jo
out
fiadds
in
cmc
sbb
insl
jae
adc
and
adc
adc
mov
xchg
inc
push
movsb
fs
fwait
cmpsl
cwtl
mov
xchg
shl
inc
xor
outsb
imul
xchg
xchg
dec
cmc
unpcklps
bound
nop
cmc
sub
div
sub
push
std
pslld
test
xchg
repnz
jmp
test
push
lea
hlt
pop
pop
fdivl
imul
sub
out
jmp
addr16
subl
shrl
adc
pop
push
out
jnp
pop
lods
subl
xlat
ds
jnp
mov
add
dec
pop
mov
adc
cltd
xchg
jae
xchg
into
mov
rorb
test
dec
inc
insb
push
insb
leave
dec
xlat
out
jnp
push
aad
scas
pop
xor
insb
stos
mov
out
jnp
sbb
dec
repz
add
dec
inc
and
roll
int
dec
dec
sub
outsl
sub
dec
dec
sub
mov
push
jmp
fadds
aam
dec
dec
out
jnp
pop
pop
or
sub
fdivrl
push
pop
xchg
sti
jbe
adc
andl
push
sarl
push
dec
dec
sub
sbb
pop
pop
stos
add
xchg
push
xor
xchg
sarl
push
dec
dec
sub
iret
fldcw
idivl
dec
pop
jnp
adc
aas
cwtl
roll
mov
adc
ja
inc
push
pop
mov
xchg
xchg
sbb
xchg
adc
push
mov
rorl
sub
mov
dec
sbb
inc
push
push
jmp
dec
sub
pop
jnp
adc
outsl
mov
lcall
dec
adc
inc
sbb
mov
lds
test
sar
adc
outsl
sub
out
inc
inc
rorl
scas
push
cs
lock
ss
inc
cli
and
jecxz
sub
xchg
dec
ret
or
pushf
aaa
jno
dec
mov
pop
jnp
adc
sub
push
mov
xchg
into
adc
mov
in
in
sub
sarl
out
loop
push
out
pushf
xchg
or
and
cmp
outsl
pop
jnp
xchg
adc
ficoml
add
xchg
xchg
and
in
mov
lcall
xor
aam
in
xchg
inc
sti
inc
jg
pop
xchg
mov
stos
pop
jnp
inc
cmpsb
imul
adc
push
inc
aad
adc
inc
sbb
xlat
mov
fildll
stos
and
repz
adc
outsl
sub
mov
sub
leave
out
out
dec
push
and
push
loop
jge
mov
imul
push
xchg
roll
pop
adc
sub
roll
mov
xchg
outsb
aas
mov
xchg
into
hlt
ficoms
mov
sub
test
mov
push
out
dec
sub
ss
and
xchg
inc
rcr
fmulp
xchg
xchg
shr
fists
sahf
enter
xchg
arpl
cmp
mov
xchg
icebp
int
jo
jp
pop
pop
mov
imul
cmpsl
roll
mov
incl
fisubs
inc
mov
dec
cmp
sbb
testb
inc
leave
lock
adcl
leave
cwtl
roll
mov
push
enter
int
outsb
or
and
pop
dec
repz
rorl
sub
roll
xchg
roll
sub
roll
sub
roll
sub
roll
sub
lret
xchg
or
push
cwtl
int3
enter
fwait
mov
cmc
xchg
call
test
repz
jns
daa
fwait
insb
jmp
xorb
out
xor
xchg
sub
xor
xchg
xchg
rcl
in
xchg
rorl
cwtl
shrl
sub
shll
cltd
shrb
xchg
roll
sub
xchg
rcll
cmp
roll
sub
xchg
xchg
roll
sub
roll
sub
roll
sub
roll
cmp
roll
sub
roll
sub
roll
or
roll
sub
roll
sub
roll
sub
roll
sub
roll
sub
roll
sub
roll
sub
roll
sub
roll
sub
fpatan
es
roll
cmp
roll
sub
roll
sub
es
shl
sub
roll
aad
roll
sub
roll
xchg
xchg
xchg
xchg
roll
sub
roll
sub
roll
sub
roll
sub
roll
sub
shrl
bound
rorl
xchg
roll
mov
cmp
mov
xchg
push
enter
mov
xchg
inc
dec
and
adc
outsl
mov
mov
or
stos
cmp
inc
cwtl
jns
inc
cwtl
jns
jg
cmovg
sbb
xchg
sarb
cwtl
imul
test
aad
mov
hlt
or
fldcw
jae
out
ret
cmp
outsl
xchg
loopne
mov
mul
and
out
shll
sub
sarl
sbb
hlt
cmp
adc
adc
sar
repnz
outsb
fwait
lock
cld
adc
cmpsl
and
jmp
pop
insl
icebp
in
sti
dec
inc
add
xchg
mov
sub
into
xchg
xor
and
fisttps
push
je
icebp
cld
xchg
dec
mov
inc
inc
cmc
push
adc
or
pop
xor
adc
ja
push
gs
cld
xchg
sub
jo
sub
sbb
sub
ficoms
mov
xchg
lret
xlat
jo
and
adc
in
pop
mov
femms
leave
add
jl
es
mov
xchg
fwait
mov
xchg
rcll
fsubrs
sub
lret
out
mov
xchg
roll
mov
fs
lock
mov
adc
mov
xchg
inc
dec
sbb
leave
mov
and
in
add
jb
in
mov
xchg
rolb
sub
dec
or
lcall
aas
adc
fs
pop
adcb
and
pop
inc
adc
fmull
push
loopne
std
and
lock
shrl
xchg
sub
push
adc
mov
xchg
roll
and
push
shl
jb
fs
adc
adc
rolb
pop
out
dec
mov
dec
or
cmc
push
adc
or
leave
jp
fisttps
and
fsubrs
es
ficoms
mov
xchg
rcll
fsubrs
sub
dec
xor
enter
insb
int
sbb
or
pop
pushf
sub
xchg
dec
aam
xchg
push
pop
sub
inc
cmc
push
adc
xchg
jmp
out
cld
out
adc
arpl
push
jmp
push
and
jnp
fs
xchg
nop
dec
in
sbb
pop
pop
test
rcll
in
jnp
inc
int
arpl
addr16
enter
mov
cmp
mov
adc
sub
inc
std
push
adc
or
leave
jp
fisttps
and
fsubrs
es
fiadds
fistps
adc
push
sub
dec
std
sbb
mov
in
inc
dec
add
sti
faddl
add
roll
test
or
xchg
rcll
xchg
xchg
sub
adc
scas
pop
cmp
mov
adc
sub
test
push
int
pop
mov
imul
pop
inc
adc
mov
push
enter
xchg
dec
test
sub
adc
xchg
push
out
in
dec
leave
xlat
jo
mov
xchg
pusha
or
roll
push
fiadds
or
pop
mov
adc
popl
jnp
fisttps
and
fsubs
es
fidivrs
insb
popa
icebp
jns
shrl
xchg
sub
arpl
shl
adc
out
enter
inc
dec
sbb
popa
out
and
bswap
adc
repz
jnp
mov
mov
dec
scas
push
adc
push
or
int
jns
pop
leave
add
xchg
adc
sbb
lcall
push
adc
or
leave
jp
fisttps
and
fsubrs
es
ficoms
fistps
adc
push
sub
inc
dec
or
mov
mov
fisttps
push
movsb
roll
mov
xchg
pop
into
xchg
imul
dec
and
clc
leave
jo
fdivs
push
pop
pop
icebp
in
inc
outsb
mov
xchg
stos
pop
shlb
cmp
mov
xchg
adc
xchg
or
in
dec
push
add
pop
icebp
data16
shl
outsb
mov
aas
dec
aad
adc
cld
repz
aad
adc
sbb
dec
imul
gs
in
push
leave
jns
roll
sub
out
xchg
filds
and
leave
jo
fdivs
push
pop
pop
icebp
cld
xchg
inc
sbb
xchg
stos
pop
shlb
xor
mov
xchg
into
adc
xchg
add
setl
jb
dec
and
sub
and
push
shl
mov
xchg
shl
cmp
out
xchg
filds
and
leave
jo
fdivs
push
pop
pop
icebp
cld
xchg
inc
fldcw
movhlps
push
xchg
lret
mov
dec
pusha
push
xchg
leave
xchg
scas
add
push
pushf
rclb
std
aam
nop
fwait
dec
or
mov
xchg
fstl
outsb
pop
jno
sub
fmull
sub
pop
adc
adc
subl
adc
xchg
xchg
fstl
mov
adc
sub
pop
out
cld
xchg
lret
fsubrs
and
adc
in
pop
mov
jg
ret
mov
sbb
and
lock
sub
cmc
aam
jg
and
pop
shrb
adc
leave
pop
pushf
sub
mov
jp
lret
in
mov
pop
dec
push
jp
inc
dec
jne
pusha
mov
fdivl
push
adc
sub
dec
pop
sub
repnz
int
mov
jo
movsb
and
enter
ret
roll
sub
in
mov
lods
adc
pusha
leave
or
mov
outsl
fsubrs
es
ficoms
out
mov
xchg
rcll
fsubrs
sub
dec
xor
cwtl
decl
scas
in
shl
lret
aam
sbb
int
movsb
dec
mov
cmc
dec
sbb
stos
loope
lock
dec
shrb
shl
js
pop
pop
sets
pop
daa
jl
bound
dec
rorl
popf
outsb
sub
aad
sub
inc
cmc
push
adc
or
leave
jp
fisttps
and
imul
and
insb
add
hlt
xchg
mov
aad
in
repz
sub
jl
mov
xchg
rorl
push
adc
or
leave
jp
fisttps
and
fstl
push
xchg
stos
jbe
insb
int
cmp
mov
xchg
int
push
xchg
add
fstl
shlb
and
jl
shl
push
push
xchg
fcompl
mov
out
rcrb
ret
pop
dec
add
fs
hlt
les
jl
mov
loopne
xchg
popl
mov
popl
add
je
cmc
add
pop
pusha
push
out
std
add
add
in
out
fisubrl
std
rcr
cmpsb
popf
out
adc
repz
loope
stc
bound
pusha
dec
in
in
scas
mov
inc
dec
dec
jmp
shlb
ds
pop
cmpsl
imul
arpl
sub
stos
loop
and
bound
mov
push
inc
cmp
xchg
cld
aaa
jnp
addr16
lcall
stos
add
test
imul
ds
mov
int3
movsl
or
xor
xchg
pop
pushf
insb
in
add
lcall
jne
jno
pop
mov
jo
xor
test
test
jmp
loope
mov
sub
repz
negl
gs
mov
xchg
dec
in
push
xchg
fs
loopne
fdivp
ret
push
push
lds
mov
add
popa
test
xor
sbb
and
out
jbe
mov
jno
or
cmpsl
push
adc
outsl
xchg
mov
aas
mov
cmpsl
sti
lret
insl
mov
push
inc
cli
lods
xchg
push
mov
ret
jnp
add
push
out
and
popf
movsl
push
aam
inc
mov
call
lret
inc
inc
xor
jae
enter
inc
add
lock
lahf
push
cmp
mov
xchg
inc
xchg
mov
cmc
inc
sbb
xor
inc
cmpsb
aad
cmpl
js
xor
jnp
cld
lret
inc
fidivs
pop
bound
clc
lock
loop
xchg
mov
or
es
push
mov
and
fimull
scas
push
cld
jg
xor
shlb
popf
mov
xchg
jmp
pop
cmp
std
bound
pop
sar
xor
jmp
ret
cs
cmp
or
sbb
dec
mov
or
mov
out
mov
rcrb
pop
adc
pop
in
mov
fnstcw
add
decl
dec
and
mov
add
jb
mov
fdivs
jecxz
sub
shl
cmp
cwtl
sub
jecxz
inc
nop
inc
mov
xchg
mov
sub
lock
in
and
shr
xchg
mov
inc
fnstcw
rol
add
aas
xchg
ficoms
aas
xor
mov
leave
loop
notb
mov
cmc
test
fabs
or
pop
push
adc
scas
negl
sbb
repz
ja
leave
repnz
xchg
cwtl
rcrb
fisttpl
lods
cwtl
test
outsb
pop
cmc
mov
jmp
stos
lods
inc
iret
ficomps
jg
and
dec
scas
mov
hlt
adc
mov
and
sarb
jnp
in
jnp
xor
mov
rorb
push
jo
sbb
mov
stos
jl
faddl
dec
pop
adc
ss
push
in
push
pop
fsubrl
cmpsl
dec
push
sub
jle
xlat
sti
cli
incb
daa
lods
je
adcl
sbb
xchg
jecxz
or
wbinvd
mov
aam
push
adc
sub
jnp
imul
jmp
xchg
sahf
les
inc
fdivr
jo
sti
push
es
out
cmp
and
fwait
xchg
inc
das
ja
aas
jmp
stos
sub
scas
jmp
imulb
cmp
pop
repz
sbb
mov
fmull
pop
pop
insb
mov
mov
test
xlat
adc
pop
adc
jbe
rcl
mov
pop
lcall
stos
dec
decb
mov
push
movsl
sbb
pop
in
mov
cmpsb
out
sbb
pop
push
or
test
fdivp
mov
dec
xchg
jns
es
mov
or
cmp
push
xchg
xor
hlt
cmp
adc
jb
mov
or
sub
gs
xor
es
lock
sbbb
das
add
add
aaa
fldenv
adcl
bound
push
mov
inc
rol
and
cs
scas
xchg
imul
pop
pop
inc
mov
pop
sub
hlt
bnd
cmp
xchg
inc
xor
sub
pop
jl
test
shll
fsubrl
aaa
xchg
sub
movsl
bound
sahf
pop
pop
aad
push
pop
push
pop
pushl
cmp
pop
dec
jb
push
adc
or
ss
inc
vpsrlw
outsl
mov
mov
cltd
dec
jno
lea
loop
movsl
lahf
scas
in
aam
or
insl
nop
les
ret
dec
mov
fisubs
inc
push
stos
jp
inc
push
mov
sub
popf
mov
ret
mov
and
scas
cmp
sub
jo
and
mov
jbe
push
pop
pop
fcoms
jmp
xor
jle
rsm
dec
mov
pop
inc
aam
mov
stc
out
ret
cwtl
jb
ret
sbb
mov
shlb
lea
outsl
add
mov
rorl
cmp
into
jg
cwtl
pop
inc
jl
jo
movsl
push
and
mov
call
push
jmp
add
mov
sub
pop
dec
enter
dec
icebp
push
xor
push
das
and
adc
pop
rorl
cld
gs
jmp
and
push
cmp
xor
bound
call
pop
fcomps
fildll
or
fadds
mov
add
nop
xchg
xchg
ds
out
sub
mov
addr16
add
aad
roll
mov
bnd
push
outsb
ret
aad
pop
mov
or
mov
rcl
sbb
xchg
mov
or
push
orb
shl
inc
mov
jne
or
inc
mov
xchg
sbb
fdivrs
int3
sbb
mov
cmp
js
and
xor
or
insb
push
or
push
into
fidivs
mov
sbb
ja
jg
or
fdivl
jl
push
mov
mov
or
testb
mov
outsl
or
popl
inc
add
fucom
pusha
mov
xor
or
mov
cmp
pop
adc
jg
mov
test
push
mov
sarb
jle
faddl
and
add
iret
adc
pop
inc
pop
jb
mov
sub
lea
lock
imul
mov
rcll
call
jge
es
call
and
sarl
cmp
adc
nop
lods
daa
fdivrs
test
testl
scas
into
fistpl
pop
movsl
sub
aas
sub
cmpsl
popf
xor
pop
pop
xchg
xor
leave
lret
sbb
insb
inc
inc
or
jp
scas
jae
xorb
arpl
or
inc
lds
push
enter
pop
out
adc
xor
jp
xor
mov
mov
jmp
sub
movsl
fcompl
and
push
js
sbb
inc
pop
dec
pop
ja
aaa
mov
fs
and
push
movsl
inc
lods
inc
pop
push
mov
notb
cmp
sti
mov
xchg
adc
les
mov
inc
xchg
xchg
dec
cmpsl
fwait
test
sbb
mov
jg
cmp
push
mov
mov
sbb
shrl
push
lock
inc
jns
out
nop
shrb
jle
push
mov
repz
xchg
fneni(8087
cmpb
push
filds
outsb
and
mov
mov
mov
or
sub
pop
inc
xchg
mov
pop
shrb
ljmp
arpl
enter
jae
stc
pop
push
pop
push
cwtl
in
fldcw
popf
popa
imul
aam
outsb
jmp
imul
ds
pop
jo
fcoms
jns
popa
xchg
xor
push
rolb
cmp
or
outsb
adc
cmp
ja
fsubl
insl
push
addr16
jae
decb
daa
mov
sbb
xchg
pop
arpl
adc
mov
mov
sub
inc
dec
pop
bound
adc
pop
mov
out
sbb
or
and
mov
or
xor
mov
in
add
jp
and
push
test
mov
mov
rorb
cli
cmp
scas
ret
addb
sbb
and
xor
pop
adc
std
adc
call
nop
sub
and
shlb
ret
into
gs
xchg
jno
sbb
or
mov
out
bound
in
rolb
into
repz
aam
out
cli
mov
pop
cmp
test
inc
or
xchg
add
cld
xor
push
push
or
pop
lds
inc
scas
imul
inc
sub
inc
seto
aad
cmp
sbbl
adc
push
popf
mov
xor
inc
pushf
in
jno
push
jns
mov
cmc
xor
fiaddl
popl
fbstp
mov
fadd
cmp
add
es
mov
pusha
pop
inc
cmp
shrl
loope
mov
imul
das
into
jno
sub
das
rolb
rolb
sub
push
xchg
jnp
cmp
mov
cmp
inc
scas
cmp
mov
test
xor
mov
mov
inc
sbb
fldl
xor
loop
xlat
cmp
push
mov
cmpsl
hlt
ss
inc
int3
jae
aad
es
idivb
sbb
rcrb
push
add
aas
and
aaa
fs
or
fimuls
gs
push
mov
mov
int
mov
rclb
xchg
les
pop
add
dec
clc
jp
aaa
ja
cmpb
jg,pn
loop
jl
dec
popf
inc
jle
add
xor
stc
aad
out
xchg
jge
or
push
in
aaa
mov
push
jle
pop
pop
xor
xchg
mov
mulb
je
cmc
and
repnz
fdivrl
sub
push
add
pop
outsb
or
jle
and
mov
pop
sbb
aaa
mov
outsl
mov
pop
jle
or
add
add
mov
out
cmc
aam
pop
leave
rorb
ret
pop
cs
push
sub
cmpsl
lahf
pushf
outsl
jnp
insl
cmp
mov
inc
cltd
jmp
xchg
loopne
push
sahf
je
pop
js
push
outsb
shlb
ret
push
cwtl
push
or
jns
xlat
cmpsb
fwait
ret
or
push
add
ret
fwait
data16
out
sub
push
sti
dec
mov
jmp
cmp
xchg
arpl
pop
js
push
fdiv
inc
mov
mov
popf
push
or
addr16
pushf
or
xchg
fsubrl
mov
int3
xchg
scas
sub
movsl
mov
mov
into
xor
adc
scas
aam
sti
dec
out
add
jnp
adc
xor
pop
push
add
ret
fwait
xor
pop
dec
mov
enter
fnstcw
xchg
je
imul
insl
mov
addr16
mov
xchg
dec
clc
repz
gs
inc
cmpb
cli
les
inc
sub
sbb
mov
ret
sbb
jg
or
shl
mov
pop
fdivrs
mov
fwait
sub
push
add
and
inc
cmpb
sar
repz
es
js
int
and
xchg
sbb
jl
pop
hlt
cltd
test
mov
pop
pmaddwd
leave
push
jmp
xor
inc
pushf
and
inc
orl
add
pop
or
xchg
mov
jp
sbb
movsl
jbe
hlt
push
lods
xor
adc
mov
inc
ror
add
in
add
repz
pop
mov
pusha
lods
mov
xchg
inc
aad
stos
push
jl
xchg
jg
call
popa
jmp
inc
and
push
fnstcw
mov
dec
sub
jmp
mov
test
or
push
in
ret
mov
jb
ljmp
fadds
stos
mov
aaa
xor
push
xchg
sbb
rorb
out
shl
mov
sbb
fnsave
sbb
imul
imul
xchg
sbb
cmpsb
cld
inc
je
ret
jl
or
cli
cld
add
dec
sahf
fsubr
or
mov
scas
std
mov
cs
adc
and
mov
fildll
out
pop
or
fwait
jnp
scas
adc
lea
arpl
mov
xor
jl
or
push
dec
add
fs
mov
dec
sub
popaw
xchg
lahf
lret
jns
push
outsb
fwait
sbb
jnp
mov
xchg
stc
inc
jnp
and
push
ja
mov
std
mov
add
mov
jbe
nop
stos
ljmp
mov
xchg
icebp
sahf
mov
mov
sbb
test
imul
das
mov
sbb
ljmp
mov
lret
pop
enter
xor
ficoms
and
pop
push
mov
scas
ret
cltd
mul
xor
cmc
int
xor
dec
rep
test
outsl
xchg
xor
fs
sbb
mov
cmp
lcall
and
sub
movswl
and
mov
fildl
push
xchg
xor
aaa
add
mov
fsts
add
int
loope
scas
mov
xchg
cmpsl
push
fiadds
pop
dec
in
jle
mov
xorb
cmp
or
icebp
aaa
enter
mov
lcall
push
cmp
pop
mov
xor
inc
into
adc
mulb
fcom
decl
cs
dec
cmp
hlt
pop
inc
fwait
sbb
loop
repz
pop
cmp
mov
push
jmp
mov
mov
loope
mov
stos
pop
out
or
cmp
jmp
jmp
clc
adc
inc
cs
push
push
sti
mov
mov
xchg
inc
xchg
mov
adcl
adc
adc
adc
aaa
mov
out
cs
jnp
jns
outsl
sbb
hlt
negl
nop
mov
mov
xchg
or
sbb
pop
aaa
movsl
ljmp
mov
jge
xchg
enter
push
ja
cmp
pop
cmp
pop
push
jb
cmp
cmp
jmp
cmp
pop
cli
mov
adc
cmp
xchg
inc
pop
or
lock
jns
pop
pop
fwait
iret
dec
mov
iret
iret
and
insl
or
pop
or
arpl
and
addr16
mov
adc
aaa
push
cli
mov
pop
cmp
add
addr16
stos
adc
push
sub
sbb
jle
aas
adc
dec
gs
in
std
inc
pop
lods
mov
ret
dec
jmp
push
out
add
aad
xchg
xor
cld
popf
popa
pop
jno
and
pop
add
rcr
mov
es
mov
jne
xchg
cmpsb
icebp
and
imul
sbb
test
xchg
jnp
hlt
test
data16
push
mov
ss
in
push
add
mov
add
inc
or
enter
inc
or
fistps
roll
dec
xchg
inc
add
jo
js
in
mov
mov
mov
and
xor
loop
fdivrp
pop
push
mov
sahf
mov
mov
dec
xor
icebp
or
add
iret
std
lds
push
inc
shlb
cwtl
mov
dec
xchg
add
add
push
out
cmpsl
pop
stos
lea
adc
sbb
mov
fldt
in
fldenv
cmp
sbb
cmp
lahf
lods
add
sub
scas
push
in
repnz
cmp
fsubs
hlt
fdivp
rcrl
lods
fdivp
lock
test
rcrl
xchg
xchg
gs
out
faddl
jg
add
adc
pop
lret
loop
mov
mov
iret
mov
mov
imul
jnp
out
sbb
xchg
repz
imul
out
aas
pop
bnd
pop
mov
ja
cmp
cmp
mov
iret
les
mov
stc
jne
sbb
inc
cld
push
in
mulb
mov
mov
sbbb
or
sbb
repz
imul
fs
enter
clc
xchg
arpl
xchg
mov
aam
arpl
and
xchg
push
add
imul
adcl
pop
fdiv
mov
jae
and
dec
jne
push
icebp
ds
inc
mov
icebp
push
andb
sub
pop
popa
gs
xor
fidivrl
pushf
jne
lahf
pop
add
lods
inc
icebp
orl
and
dec
mov
mov
notl
jg
jge
mov
aad
add
arpl
stos
add
fstpl
les
add
jns
sbb
adc
add
jne
and
fs
out
push
xor
jo
mov
jae
insl
and
xor
cpuid
xchg
and
dec
xchg
adc
pop
cmpsl
mov
movl
pushf
lahf
mov
sti
mov
repnz
test
fbld
aad
scas
sbb
into
in
pop
cltd
cmpsl
dec
repz
mov
cld
test
inc
add
imul
xor
hlt
inc
xor
repz
fmull
or
fsub
fstpt
pop
sub
push
scas
xchg
lretw
add
or
jp
xchg
arpl
mov
mov
int3
js
xchg
dec
cld
scas
inc
mov
sub
mov
daa
sbb
mov
loope
outsl
add
mov
cwtl
push
and
inc
divl
popf
mov
sarb
pop
push
inc
sarb
das
imul
dec
shll
psrlq
ljmp
cmc
xchg
jp
lret
pop
mov
outsl
mov
fs
popf
add
outsb
mov
nop
jae
cmp
push
call
fs
cmp
xchg
add
dec
push
std
icebp
mov
ds
cmpsl
in
add
or
sub
pop
adc
pushl
jae
or
leave
hlt
xchg
pop
scas
fsubrp
ds
aaa
imul
decb
fisttpll
hlt
push
ror
push
sbb
xchg
push
pop
jb
push
adc
movsb
mov
pop
mov
cmove
cli
movsl
mov
ss
xchg
mov
push
cmpsl
mov
pop
or
iret
lock
ror
xchg
cmp
add
out
loope
pop
adc
dec
wrmsr
push
inc
sbb
push
sti
lods
clc
dec
negl
imul
xchg
push
into
outsl
pop
pusha
jg
and
sbb
mov
fstl
mov
movsl
adcb
lcall
mov
das
movsb
ds
lea
mov
jg
lock
scas
data16
nop
sti
repnz
pop
loope
adc
popa
int3
mov
inc
sub
lcall
xor
or
push
pop
sub
jb
push
test
clc
cmp
shrl
fwait
nop
pop
insb
cmp
sub
cli
mov
and
testl
xor
popa
aas
sbb
mov
sbb
fistpl
push
and
rcr
lods
sbb
mov
addr16
sbb
dec
leave
jmp
rcrb
xchg
bound
cmp
fisttpll
sbb
lret
or
lea
add
xchg
xchg
out
std
je
dec
testl
jb
pop
push
ret
lea
pop
data16
das
stos
lea
repz
pop
xchg
jmp
dec
roll
ja
mov
fs
rolb
cmp
call
mov
and
cmp
imul
inc
ljmp
push
or
mov
pop
ss
xor
mov
movsl
push
inc
mov
jns
push
loopne
push
adc
sub
sub
ret
loop
daa
cmp
fsubrl
inc
jl
outsb
ret
lret
xchg
movsl
inc
inc
xchg
ja
nop
add
cli
xor
dec
pop
pop
add
cltd
lods
pop
iret
rcrl
pop
clc
in
xchg
aaa
das
sahf
xchg
subb
push
mov
mov
jge
xlat
shl
adc
mov
jg
push
push
or
and
cld
daa
je
jne
dec
xchg
dec
pop
ret
std
dec
push
sub
xor
repnz
mov
mov
and
out
mul
lahf
inc
pop
clc
pop
scas
and
adcl
test
mov
aam
jmp
in
fdivrl
cli
test
pop
inc
in
push
and
mov
jnp
mov
ss
adc
fwait
repz
jmp
mov
test
pop
stos
push
mov
roll
stos
push
imul
loop
xlat
insl
push
inc
dec
add
fsincos
xchg
mov
mov
cmpsb
push
and
push
test
pop
pop
lret
sbb
cmp
clc
or
and
push
decl
int
les
les
adc
adc
test
arpl
pusha
push
ja
cltd
pop
ror
aad
xor
and
jnp
aam
jle
out
add
jae
inc
jl
dec
mov
repnz
pop
sbb
iret
sbb
pop
xcrypt-ofb
cmpsl
jmp
pop
push
repnz
dec
out
adc
xchg
jae
cs
testl
add
mov
mov
loopne
leave
jb
stos
mov
hlt
sbb
xor
shlb
loop
into
leave
xchg
cmpsl
es
push
leave
rorb
dec
js
andb
push
cld
add
aas
sbb
inc
pop
add
xchg
xchg
xchg
ja
aaa
mov
mov
xchg
dec
jae
loopne
fnstcw
sbb
lds
int
push
sub
stos
sti
in
mov
addb
xlat
lods
sbb
inc
pop
mov
push
pusha
fdivr
xchg
pop
test
notb
mov
mov
pcmpeqb
lods
std
cltd
test
sbb
rclb
push
xor
test
add
mov
inc
nop
mov
sub
inc
test
repnz
cmp
sub
adc
hlt
movsl
add
adc
stos
jns
pop
insb
or
pop
into
or
sub
mov
js
data16
imul
sti
lods
call
das
jo
call
call
pusha
jo
mov
dec
ja
push
cli
dec
mov
repz
and
mov
shll
mov
push
lret
mov
test
call
iret
ret
rclb
mov
popa
out
aaa
pop
jbe
rcrb
jbe
push
jns
aam
mov
scas
ret
ret
shlw
lahf
adcb
xchg
xchg
jecxz
in
and
shlb
xor
outsb
pop
rclb
pop
cltd
sti
out
xor
jnp
rorl
ds
push
ss
adc
cmp
sub
inc
sahf
xchg
inc
test
ds
mov
out
or
xchg
aaa
dec
or
pop
pop
cltd
jecxz
dec
pushf
mov
xor
ds
or
arpl
jno
les
stos
push
lcall
insl
push
imul
les
leave
fcompl
sar
sbb
pop
das
xchg
jge
cmp
push
or
in
in
mov
dec
pop
xchg
aas
xchg
aaa
cld
into
out
and
movsl
lcall
hlt
enter
cs
mov
fdivl
leave
hlt
push
insl
fs
jbe
aam
push
in
into
mov
or
andb
or
outsb
jecxz
push
js
sti
push
add
lock
les
jle
and
gs
out
fwait
sub
scas
jne
fisttpll
fwait
jns
bound
test
orb
dec
mov
push
sarl
out
mov
mov
call
bsr
into
pusha
fistpll
aas
sub
pushf
mov
xchg
jnp
in
jmp
or
push
lods
xlat
or
mov
sub
and
sbb
sub
mov
pop
cmp
mov
mov
pop
in
jl
insb
adc
or
jle
xchg
pusha
inc
xor
xchg
dec
sub
cmp
out
sbb
popa
fdivrs
add
mov
jns
ljmp
mov
xlat
push
out
cld
push
sub
fidivl
out
mov
cmpsl
xchg
sahf
sahf
subb
ljmp
push
push
incl
jne
lret
orb
enter
cwtl
push
mov
add
cmp
push
xchg
xchg
push
es
push
mov
aad
mov
adc
mov
fists
xchg
cltd
mov
in
rcrb
call
stos
movl
sub
popf
lret
lret
bnd
outsl
push
pop
cs
out
adc
pop
daa
sub
imul
cs
or
cmpsb
out
dec
sbb
out
and
sbb
ror
rorb
push
pusha
dec
std
mov
adc
mov
cli
and
repz
fcomps
mov
clc
pop
shrl
dec
mov
lcall
outsb
pop
loopne
repz
cs
xchg
cmc
test
dec
lds
cli
and
or
mov
lret
iret
cli
sti
and
imul
cli
pop
loopne
sub
aas
or
dec
mov
shll
cmp
into
cmp
test
inc
and
fisubrl
fcoms
xor
sub
mov
cmp
jbe
lods
rorl
lods
jne
movsl
xchg
and
movsb
mov
ror
stos
das
xorl
jae
inc
add
mov
aas
push
imul
rcll
sbb
and
dec
xchg
jge
pop
int
push
jge
jmp
jne
pop
or
cs
stos
push
aad
xor
jg
push
in
add
cs
dec
lds
push
pop
icebp
push
mov
notb
jbe
sbb
adc
or
mov
dec
sub
std
push
sub
push
mov
out
stc
test
das
or
addr16
in
mov
mov
inc
sbb
sub
sub
mov
push
icebp
fs
mov
xor
mov
repnz
shlb
mov
ja
cli
pop
push
out
popf
test
pop
sbb
shlb
sti
jno
lea
jb
insl
mov
xor
cmp
push
mov
add
jg
xor
hlt
push
and
ror
mov
and
and
cmpsb
repnz
xchg
cli
ret
mov
xor
outsl
cmp
leave
cmpsl
cmpb
cltd
repz
jne
xlat
fcompl
in
sub
popf
dec
mov
cli
sub
mov
int
aad
lret
test
adc
cmp
out
fsubrp
mov
insb
rcll
dec
and
gs
fldcw
cmp
lods
sub
in
aad
lea
insb
pop
sub
mov
or
call
stos
xchg
aaa
sbb
jmp
in
push
cmp
xchg
out
cmp
xchg
add
popl
dec
push
cmpsl
or
and
ds
adc
ja
call
popa
add
out
pop
or
mov
insl
ret
pop
jae
sub
add
mov
sbb
add
sbb
pop
movb
push
je
push
imul
dec
pop
leave
mov
popf
jbe
mov
xchg
jo
cmp
insb
cmp
mov
je
pop
push
divl
sub
dec
cmpsb
sub
mov
mov
mov
mov
ja
in
call
rorl
jnp
add
aas
cld
add
fstl
loopne
jns
mov
maskmovq
mov
out
fnstenv
cmp
pop
leave
push
pop
cmpsb
mull
sbb
leave
push
add
fmuls
scas
out
and
push
scas
xchg
incb
lahf
lock
xor
ja
mov
lcall
int
mov
bound
jge
pop
inc
test
stos
inc
cmp
cmp
mov
sbb
mov
icebp
pop
outsb
push
cmp
mov
xchg
dec
in
int
outsl
rcrb
add
outsb
jns
out
popa
pushf
lahf
xor
cld
inc
movsb
xor
std
ret
mov
loope
mov
rorl
and
inc
inc
xchg
and
mov
pop
inc
movsb
cmp
in
xorl
movl
push
lock
adc
test
xchg
ffree
xchg
sub
scas
xchg
xor
jmp
push
push
mov
out
mov
movsb
mov
scas
faddl
or
dec
add
mov
imul
cmp
jbe
sub
sub
cmpsb
fildll
pushf
cmp
test
sarl
inc
clc
bound
scas
lock
clc
cmc
dec
stos
ret
mov
in
dec
cmpsb
popa
mov
scas
dec
add
movsb
jno
imul
push
mov
insl
ret
cs
cltd
pop
fidivl
adc
adc
xor
and
in
mov
push
test
push
inc
loopne
pop
add
mov
das
lcall
push
loope
std
mov
rcll
imul
les
jl
fwait
test
lcall
les
adc
scas
dec
and
dec
xor
add
andb
sub
jg
xchg
mulb
mov
icebp
cmc
mov
je
cltd
inc
cltd
add
inc
repnz
cltd
out
incl
mov
loope
andl
in
dec
lret
pop
outsl
xor
jmp
fyl2x
sbb
ret
adc
jl
pusha
loope
icebp
ja
cmpl
shrl
das
in
jae
push
out
inc
mov
inc
add
loope
lret
mov
push
mov
in
xor
orl
cltd
fstp
jb
mov
mov
cltd
mov
ret
push
dec
mov
pop
leave
call
adc
test
insl
mov
es
push
scas
cmp
imul
mov
leave
jl
imul
xor
and
jecxz
push
dec
xchg
mov
jle
lahf
adc
add
gs
vandnpd
xor
pop
cli
rolb
xchg
inc
mov
pop
divl
xchg
push
rcll
mov
cmp
shlb
cmpsb
cwtl
push
dec
testl
sub
stos
xchg
fbld
pop
adc
add
in
int3
dec
sbb
int3
daa
popf
lcall
test
adc
sub
int
in
fcoml
mov
xor
jae
jns
insl
jae
jbe
lods
in
xor
icebp
push
fs
adc
rcr
mov
mov
push
testl
sub
das
and
mov
stc
xchg
incl
pushf
ret
dec
jns
push
jl
mov
je
in
ds
ret
add
clc
and
aam
rsm
inc
mov
aam
xorl
cmp
cmpl
mov
push
sbb
mov
in
mov
mov
add
xchg
popf
sahf
ret
cltd
out
loop
dec
test
cmpsb
sub
pop
lahf
adc
fs
or
jmp
mov
xor
popa
std
push
xor
stc
and
and
mov
adc
xor
and
push
repnz
add
js
or
mov
inc
adc
mov
rcll
dec
leave
sub
pop
adcl
inc
into
push
add
jo
loop
scas
into
sub
cmpb
sahf
adc
and
negl
sub
test
inc
in
cmpsl
andl
mov
cld
mov
daa
pop
pushf
mov
mov
xor
mov
dec
scas
add
and
lock
fldl
cmp
mov
aam
xlat
mov
sahf
in
mov
iret
mov
xchg
pop
add
and
add
scas
push
hlt
mov
pop
adc
mov
js
xchg
jnp
push
lea
pop
xchg
cmp
push
loope
je
into
sub
cmp
or
movsb
out
jnp
lret
std
data16
sbb
movb
push
iret
xchg
push
shlb
leave
jmp
and
cmpsb
lea
fcmovne
add
jge
daa
mov
sbb
mov
xor
xlat
pop
mov
jbe
sub
fisubrs
cmp
or
addr16
add
iret
sarb
rorl
ljmp
lret
daa
cmp
push
inc
inc
push
lods
push
xor
lret
imul
cmpsb
ss
test
mov
mov
mov
cmpsl
mov
xor
push
cmp
and
lahf
pop
add
xor
pop
sbb
cli
cmp
das
add
ret
and
je
rol
add
imul
mov
mov
sti
dec
push
mov
pusha
in
or
jp
lods
out
in
in
sub
xchg
stc
loop
or
cli
adc
ljmp
in
lods
movsl
shrl
lahf
call
out
cmp
cmp
dec
call
stos
xchg
jae
or
jge
xor
inc
out
inc
xor
out
and
fwait
mov
jg
mov
ret
and
cmpb
cmpsl
pop
xor
mov
jo
movsb
pop
ret
push
aaa
in
inc
repz
js
or
add
adc
cli
fisubs
pop
inc
cld
sub
push
inc
mov
loop
push
jmp
sahf
mov
sub
xorl
cmp
pop
repz
jb
rol
pop
cld
shll
dec
sub
or
xchg
outsb
fnstenv
leave
cmp
cmp
shrl
xchg
aas
test
xchg
push
popa
cmp
mov
clc
xchg
ja
jp
mov
icebp
push
shl
out
jmp
sub
mov
xchg
mov
pop
stc
add
xchg
cmp
pushf
popa
ret
mov
lcall
mov
popf
and
xchg
dec
add
mov
and
xchg
int3
xor
jae
lods
xor
or
mov
mov
pop
scas
mov
out
int
inc
push
or
cld
repz
pop
dec
clc
and
add
jb
les
xlat
xchg
xlat
inc
ja
xchg
adc
mov
stos
mov
adc
jecxz
test
and
addr16
xchg
mov
shlb
mov
sbb
pop
mov
inc
dec
ljmp
in
mov
ljmp
lds
mov
inc
xchg
push
xchg
gs
xchg
lret
ret
ss
shrb
sbb
mov
sahf
adc
lcall
push
sub
sub
cltd
jmp
or
adc
inc
mov
pop
sub
jecxz
out
mov
inc
mov
jge
insl
mov
inc
or
sub
icebp
or
adc
nop
adc
xchg
data16
jnp
or
sub
jp
push
into
cmp
inc
sub
add
sbb
add
and
jae
out
mov
jmp
test
movsl
ror
inc
popa
mov
clc
addl
int
mov
adc
sub
inc
mov
subl
sbb
rcrb
jne
inc
aad
outsl
sbb
pushf
out
sbbb
pushf
xchg
aas
addr16
stos
je
add
and
cmp
jmp
and
push
fs
test
sub
and
aaa
test
fsubs
stos
loop
mov
add
je
movsb
sub
mov
xchg
sub
cmp
in
lods
mov
in
add
xchg
add
cli
cld
cmp
sub
ret
ss
shll
push
adc
add
test
cmc
mov
sub
push
inc
fsubrs
dec
sbb
js
outsb
adcl
and
popl
dec
cmp
inc
shll
scas
and
cmp
aas
xor
and
sahf
lds
xchg
add
stc
adc
cmpsb
pop
add
pop
xor
rcrb
jecxz
fwait
push
and
lret
fs
and
dec
repz
push
in
xor
test
out
xor
cmpsb
aad
mov
inc
jnp
cltd
xchg
addr16
sbb
repnz
pop
aaa
mov
sbb
inc
mov
insl
fmull
pop
pop
cmp
arpl
pop
nop
loope
sbb
test
xor
cmp
sub
scas
jbe
sbb
fisubl
clc
or
adc
andb
pop
fwait
jbe
outsb
add
cmp
cmp
mov
and
or
popa
js
adc
inc
mulb
and
mov
push
xor
cmp
mov
iret
fwait
js
mov
movsb
shl
imul
out
push
out
cld
pop
insl
icebp
mov
fadds
out
test
cmp
xchg
and
pop
dec
mov
int
pop
sbb
inc
mov
mov
insl
xor
outsb
sbb
in
mov
ficomps
or
mov
mov
xchg
fnclex
mov
mov
xor
fwait
mov
std
es
clc
stc
adc
or
dec
xchg
adc
mov
shrl
push
mov
inc
or
daa
mov
jecxz
dec
adc
mov
lock
inc
pusha
add
add
push
repnz
data16
xlat
cmp
xchg
mov
pop
sbb
and
jbe
dec
sbb
pop
movsb
aad
adcl
dec
jmp
sti
lea
and
daa
xor
or
enter
gs
out
mov
stc
mov
jb
mov
lods
push
jne
jae
aam
mov
cltd
mov
nop
xor
adc
out
push
add
or
push
xlat
ficoms
sub
mov
xorb
mov
xchg
test
rorl
sbb
ffree
xchg
jp
xor
inc
cmp
mov
mov
lods
xor
xchg
fwait
pop
test
pop
sarl
push
shlb
mov
jmp
jae
inc
xchg
adc
lds
xchg
hlt
mov
jbe
cmp
mov
push
test
es
mov
and
idiv
es
xorl
mov
js
rcl
pusha
lods
add
fsubrl
push
sub
mov
xchg
push
and
subb
jle
je
sbb
sbb
ror
push
stos
mov
aas
sbb
and
pusha
mov
rcrl
jno
and
cld
lds
mov
add
cmp
out
push
lret
dec
xor
inc
mov
es
repz
xor
ja
loope,pn
scas
aas
imul
adc
inc
push
sbb
dec
lds
and
adc
rep
ret
mov
aad
inc
xor
insb
inc
cld
jmp
scas
je
sbb
ljmp
lods
les
cmc
jb
inc
and
rcr
add
aam
cmp
loope
sub
jle
xor
pop
andb
adc
mov
mov
and
adc
in
push
mov
dec
cmp
scas
popf
test
jnp
jmp
repz
cwtl
sbb
or
mov
daa
cmp
inc
xchg
lret
sbb
mov
push
push
add
jb
stc
inc
inc
mov
jns
ficoms
cmc
xchg
sub
push
in
dec
stc
sbb
cmp
pop
dec
fyl2x
sub
or
ffreep
sbb
pop
mov
not
mov
sbb
test
dec
xor
xor
xchg
cmp
or
aas
jne
cs
rcl
repnz
mov
and
dec
cmp
jge
out
popf
int
aas
call
sub
aas
cmpsl
dec
mov
repz
or
jae
pop
ret
pop
cwtl
ds
sub
mov
inc
jo
jl
xchg
hlt
cli
popa
jnp
mov
lcall
xchg
sub
jae
mov
and
mull
inc
popf
mov
jno
incb
fadds
sbb
adc
into
mov
sti
inc
pop
dec
insl
adc
shll
ret
insb
xorb
sarb
popa
mov
push
arpl
xchg
and
add
pop
lret
enter
ds
push
xchg
roll
std
dec
dec
loop
ljmp
push
xchg
add
add
xor
xchg
shll
push
adc
xor
push
push
bound
outsb
into
cmp
mov
mov
icebp
and
xchg
test
mov
int3
insb
cltd
pop
adc
outsb
cltd
pop
sub
push
gs
mov
jno
cmc
rcl
js
dec
inc
ds
pop
loope
lods
jnp
lret
aas
movsl
mov
nop
cmp
inc
aaa
aad
and
fstp
pop
cmp
push
mov
pop
adc
inc
xchg
inc
jmp
cli
dec
aad
lret
push
push
stos
sti
adc
dec
dec
sbb
jno
clc
jnp
xchg
les
fcomps
into
add
out
xor
mov
cld
fsubs
ljmp
std
ret
fisttps
mov
add
jp
pop
and
mov
add
pop
mov
bound
push
pop
in
jnp
popf
jne
lods
push
enter
les
cmp
push
dec
lahf
popf
mov
cmp
sbb
inc
mov
cmpsb
sub
jl
jbe
push
cmp
stos
mov
adc
popf
jae
xchg
lds
xor
rcrl
cltd
fbstp
push
mov
mov
hlt
mov
orb
popf
test
push
mov
add
inc
cmc
cmpl
in
stos
mov
pop
pop
movd
hlt
mov
ret
pop
jne
das
xor
mov
jl
inc
sub
cltd
call
loopne
dec
cmp
ret
mov
leave
and
dec
sub
ret
push
push
sbb
in
int3
repnz
mov
imul
dec
add
dec
pop
jae
or
sub
pushf
fbstp
add
popa
fists
ljmp
xor
pop
xchg
mov
stos
fcmovnbe
jg
adc
mov
pop
xlat
inc
dec
mov
mov
mov
adc
xchg
mov
fstl
xchg
loop
add
jmp
arpl
push
pop
int3
xor
jns
cmp
mov
aad
xchg
mov
aad
nop
mov
push
lcall
xchg
enter
pop
jmp
and
mov
push
mov
fiaddl
es
movsb
xor
ret
or
sbb
xor
cld
cli
mov
inc
nop
int3
mov
mov
in
pop
pusha
imul
push
aaa
push
pushf
es
paddq
adc
and
in
fadds
cmp
mov
pop
repz
or
push
adc
nop
inc
lds
aaa
xchg
rcrb
lods
mov
xor
in
mov
pmaddwd
pop
xor
and
nop
std
mov
pop
mov
adc
mov
das
sahf
outsl
arpl
mov
les
push
call
and
filds
or
xchg
mov
push
outsb
out
lret
push
lods
sub
mov
mov
out
xchg
inc
mov
push
shr
outsl
xor
push
xchg
stc
shlb
ljmp
bound
mov
sbb
ret
sbb
push
mov
scas
xlat
adc
pop
stos
mov
mov
cmp
shr
or
mov
jb
fcomi
mov
mov
fiaddl
shlb
dec
mov
push
jno
jno
pop
shrl
ret
addr16
pushf
adc
int3
movsb
mov
int3
addr16
out
sub
xchg
mov
insl
xchg
dec
push
outsb
rorl
or
inc
call
xor
lds
jns
cmp
fsubrs
jb
or
push
addr16
add
mov
mov
inc
cmpb
fcompl
lods
mov
xchg
adc
call
lret
out
mov
mov
aad
rcrb
lods
std
push
scas
inc
enter
xchg
vmovss
cld
lock
movl
jp
unpcklps
std
incl
xchg
xor
mov
jle
lret
dec
jae
lds
clc
or
jecxz
aas
and
adc
nop
jb
jp
enter
rcrl
shrb
rolb
push
repz
adc
and
sub
ret
inc
out
xor
hlt
cmpsb
xchg
dec
mov
loopne
push
mov
xchg
int
imul
cmc
rcr
jle
clc
mov
or
lock
mov
out
lahf
fs
shll
dec
sub
mov
xchg
stc
dec
mov
push
jge
pop
or
add
imul
add
push
push
lock
iret
mov
fcoml
add
and
mov
ret
sahf
cmc
add
push
scas
mov
lahf
xchg
fisttps
pop
xchg
iret
mov
sub
fstpl
jge
roll
test
cli
jnp
lds
add
pop
repz
sbb
dec
ret
les
lret
lea
jnp
sbb
rclb
fisubl
or
pusha
mov
inc
leave
movsb
popf
gs
outsb
push
jmp
xchg
xchg
pop
mov
xchg
lcall
pop
mov
jo
xchg
or
lret
movsl
and
cmp
lock
add
xor
ds
ret
mov
add
out
jne
and
pop
mov
sarl
cwtl
iret
sbb
and
cmp
add
sbb
add
in
int
and
mov
or
cmp
pusha
xchg
xchg
cltd
push
add
stc
imul
push
sbb
jns
test
js
out
int3
mov
fidivrl
or
andl
in
jge
adc
xchg
jns
test
mov
adc
repz
push
fdivrl
clc
jnp
sub
mov
lret
fsts
jno
fdivrl
mov
mov
pop
pop
add
and
sbb
movsb
mov
inc
and
lods
js
pop
adc
xchg
mov
inc
cmp
add
xchg
mov
sub
mov
dec
push
sbb
mov
push
int
mov
inc
lds
imul
les
sbb
test
clc
fists
xchg
xor
mov
mov
jbe
push
mov
pop
cmpsl
dec
clc
mov
test
push
and
lret
fs
loope
mov
mov
dec
fldl2t
stos
je
repz
hlt
cmp
push
hlt
in
or
insb
dec
dec
mov
pop
pushf
imul
push
adc
mov
and
inc
adc
cltd
pushf
xchg
adc
imulb
mov
fwait
pop
lds
movsb
adc
outsb
jecxz
cs
xlat
add
inc
test
iret
mov
mov
aam
push
mov
cwtl
fimuls
ss
shlb
andb
das
data16
lods
xchg
cltd
cmp
cmp
mov
inc
cmpsl
fdiv
and
inc
ret
dec
outsl
in
mov
daa
ret
stos
test
dec
std
cs
xor
xor
outsb
gs
outsb
xor
inc
daa
fldl
xchg
fistpl
or
jno
test
lods
mov
push
gs
add
shlb
push
lret
in
push
mov
pop
repnz
shrl
movsb
pop
push
clc
ret
imul
dec
icebp
movsl
or
pop
inc
inc
enter
or
sbb
js
call
and
adc
test
sub
push
outsl
dec
daa
loopne
rcrb
mov
fwait
lock
stos
and
jnp
jns
and
cwtl
fsts
fs
adc
je
cwtl
inc
pop
pop
jo
xchg
jnp
push
adc
sub
xchg
test
insl
xchg
cltd
and
sub
push
xor
add
xchg
out
adc
pop
pop
mov
inc
popf
pop
enter
movsb
sub
cltd
stos
push
xor
aad
ja
inc
aam
sbb
insl
push
dec
loope
lahf
movsl
inc
sbb
dec
adc
jecxz
int
cmc
int
push
lock
in
adc
jecxz
insl
pop
add
dec
fldl
xchg
lds
test
dec
mov
inc
dec
addr16
jl
cmp
lahf
fldenv
xchg
ud2
in
xchg
leave
jbe
inc
insb
cld
int3
jle
inc
mull
jg
sub
adc
iret
pop
sti
or
and
inc
sub
or
mov
lret
rclb
mov
adc
mov
das
lcall
fs
lock
repnz
punpckldq
aam
sub
mov
iret
in
sbb
das
xor
push
daa
xor
test
in
mov
cmp
pop
loopne
and
out
out
mov
paddsb
jl
add
xor
sub
icebp
add
xchg
xlat
and
test
sbb
cmp
pop
mov
iret
mov
or
pop
cli
rcll
sbb
xchg
sbb
stos
xlat
mov
push
xorl
ret
and
insl
bound
test
aas
fimuls
mov
gs
movsl
cwtl
dec
jmp
shll
cmp
call
bts
outsl
arpl
test
scas
push
xchg
fcoms
adc
fists
cld
insl
mov
pop
fisttpl
call
xchg
jp
and
test
int
xor
mov
inc
stc
pushf
pop
inc
mov
ja
test
mov
or
fisubrs
lahf
enter
dec
or
flds
inc
xor
test
loope
lds
or
popa
mov
imulb
shlb
xchg
adc
inc
and
and
mov
outsb
jbe
push
jne
inc
incl
fmull
dec
out
fdivs
imul
or
in
mov
fucomi
xor
clc
arpl
cmp
jo
pop
mov
mov
mov
popf
ja
mov
sbb
scas
insl
mov
adc
aas
mov
pop
sub
add
sahf
fcoml
scas
mov
das
xchg
pop
pop
jno
sbb
sub
sub
sbb
out
pop
or
aaa
insb
aas
sub
sbb
inc
pop
dec
add
jnp
dec
rcll
xor
push
rcrb
lds
cmp
jnp
data16
testl
loop
jbe
int3
ret
ja
scas
nop
aam
lahf
rcl
popa
sbb
jns
adc
fidivs
add
cwtl
cmc
mov
cmp
test
enter
cmp
xchg
add
and
ljmp
ja
and
add
mov
push
lret
cmpsb
mov
arpl
xchg
mov
addr16
stc
lea
sbb
cmp
jb
imul
add
dec
and
call
sub
sbb
xchg
mov
or
mov
pop
bound
fsubr
xchg
out
cld
movsb
add
hlt
inc
jae
loopne
push
dec
or
mov
pop
push
pop
in
add
in
mov
sbb
jb,pt
add
mov
es
push
push
cmp
cmp
mov
add
dec
sub
push
mov
add
pushf
ljmp
sbb
or
mov
xor
jge,pt
lcall
jg
je
stc
aaa
dec
repz
addr16
mov
lea
pushf
xor
mov
jae
fs
loope
into
jbe
divb
xchg
iret
icebp
faddl
lods
pusha
jbe
adc
pop
orl
mov
aam
pop
addr16
out
push
popf
inc
or
aas
push
mov
mov
mov
sti
rcrb
das
adc
adc
repnz
push
xlat
jmp
or
cmpsl
inc
and
sub
adc
lock
pop
sti
pusha
das
test
pusha
push
movsl
xchg
call
pop
lret
inc
xchg
leave
push
pop
dec
pop
or
mov
mov
ror
sub
int
xor
add
mov
push
mov
popa
repz
push
insb
sbb
sub
mov
in
out
pushf
aaa
or
pop
inc
aaa
inc
pop
add
popa
dec
sbb
out
mov
jl
add
ret
popa
sub
out
xor
lret
cmp
mov
nop
ret
fs
adc
shll
xchg
stos
mov
mov
in
dec
sub
sub
stc
push
adc
dec
adc
repz
xchg
jmp
out
pop
fisubrs
mov
loop
jbe
inc
jecxz
sbb
nop
pop
loope
mov
xlat
test
or
out
insb
iret
mov
add
ja
inc
leave
insl
leave
mov
inc
fisubrs
adc
inc
xchg
shrl
lock
pop
adc
loope
outsl
fstps
and
jmp
pusha
push
add
push
pop
push
cmpsb
fadd
into
cmpsl
push
loop
cmp
jo
je
call
dec
inc
add
xchg
movsb
push
mov
hlt
jb
test
cmc
lods
nop
das
arpl
mov
adc
rcr
cmp
jno
dec
insb
xchg
pop
or
ljmp
maskmovq
imull
andb
shr
insb
sub
std
fucomip
rcrl
loope
and
and
cmc
fldt
add
lret
in
pop
mov
jle
cwtl
adc
jp
jmp
xor
in
cmpsl
or
add
jg
jae
push
add
push
or
movsb
jmp
popf
in
mov
xor
adc
ss
adc
lods
inc
jo
sahf
pop
fwait
notb
sbb
sbb
bnd
lods
fdivs
int3
fldl
adc
sbb
int3
inc
xchg
cmp
mov
test
lock
addb
dec
int
mov
xor
mov
inc
je
je
push
push
jne
popa
xchg
int
add
imul
mov
cmc
sahf
lahf
rcrl
inc
mov
sbb
sbb
mov
cmp
ficoml
ljmp
or
imul
sbb
adc
lret
imul
mov
dec
int3
sub
inc
mov
dec
mulb
jge
fists
iret
stc
mov
xchg
mov
sub
add
sub
imul
das
lods
ja
jnp
push
pop
jg
pop
out
lds
add
cmpsl
inc
aas
subb
sbb
mov
xor
rclb
fwait
jb
lods
add
xor
fsubrs
mov
cld
outsl
popf
adc
enter
lahf
ror
sub
fwait
add
rolb
insl
fistpl
push
sahf
cmpsb
mov
add
xchg
ss
out
mov
sub
mov
rcl
icebp
adc
dec
or
push
and
cmp
mov
clc
push
jecxz
mov
mov
insl
pop
ret
or
sub
rorl
mov
mov
gs
and
ss
shl
arpl
sub
xchg
loopne
addr16
leave
daa
add
mov
sbb
mov
clc
lret
pop
dec
pop
jnp
sbb
jmp
cmpsl
sub
subb
fwait
mov
in
mov
data16
mov
mov
cli
insl
jnp
jl
test
out
lret
xor
fsubs
or
cld
xor
mov
cmp
xor
dec
and
std
push
cli
test
sub
bound
fldpi
in
lea
xchg
es
dec
xchg
dec
ja
hlt
js
lret
sbb
jo
push
and
stc
stc
jle
xchg
outsb
pop
lahf
cmp
pop
stos
mov
in
and
repz
popa
test
jne
rcr
adc
stos
lds
mov
shlb
mov
push
fsub
adc
fisubrl
or
cmp
mov
sub
mov
nop
xchg
inc
or
mov
mov
das
xchg
cmp
sbb
rcll
in
sub
fnstsw
fcmovu
lods
rol
xchg
cmp
jne
jl
or
hlt
scas
fildll
pushf
into
xchg
clc
inc
inc
loop
xor
mov
notb
cmc
xchg
or
jno
add
test
mov
rorl
daa
cmp
sbb
or
aad
xchg
mov
in
mov
cmp
sbb
adc
inc
ret
imul
cmp
lock
in
fdivrs
mov
jne
or
sbb
mov
xor
or
inc
or
js
outsb
fwait
mov
inc
ret
incb
lret
jbe
cli
mov
jae
push
jno
pop
and
imul
cs
pop
jge
icebp
call
xchg
mov
xor
mov
pop
xlat
cmpsb
idivb
aas
or
out
push
push
or
cli
jle
dec
divl
inc
inc
pop
xchg
frstor
add
fwait
cmp
in
ljmp
and
sbb
mov
sbb
adc
sbb
stos
lock
mov
icebp
pop
stc
push
mov
push
and
out
xchg
addr16
vmread
jbe
out
andb
es
pop
jo
mov
jbe
adc
xchg
daa
das
pop
and
faddl
mov
pop
roll
cmp
xchg
or
daa
push
dec
data16
out
lds
xor
mov
fidivrs
or
daa
sbb
jecxz
adc
mov
push
and
dec
inc
adc
cltd
andb
and
shrb
mov
jns
xlat
test
xor
add
cmpsl
decl
fs
ss
jb
pop
add
gs
and
inc
hlt
lods
dec
push
rcl
fnstsw
std
int
mov
out
js
mov
ds
xchg
xchg
xor
sub
in
hlt
js
out
sub
pop
push
inc
pop
add
mov
enter
xorb
jne
call
testl
jge
scas
cmpsb
and
push
lret
push
pop
inc
mov
shl
loope
test
addb
je
cmp
dec
stos
in
out
xor
xchg
xor
sbb
std
bound
data16
lahf
cmpsl
out
sub
mov
jle
dec
repnz
add
sbb
popf
jecxz
cli
gs
inc
cmpsl
cmpsb
or
call
aaa
add
mov
inc
jnp
sbb
mov
sub
jp
mov
jl
mov
mov
mov
add
adc
mov
movsb
push
sbb
xor
pop
lds
pushf
mov
sbb
loopne
ret
scas
stos
stc
lret
jb
cmp
fisttpll
in
cmp
icebp
int
imul
jns
lcall
jecxz
mov
test
movsb
dec
and
pop
pop
xchg
or
push
cltd
jnp
pusha
cmpsb
sarl
mov
jnp
fwait
cmp
scas
std
adc
add
push
outsl
mov
pop
add
repz
jp
adc
dec
fld1
int3
pop
les
vpcmpeqd
push
stos
in
sti
scas
push
or
mov
out
dec
jmp
loopne
jecxz
icebp
cs
mov
jl
aaa
fidivs
mov
arpl
xchg
pop
out
mov
and
xchg
jle
jbe
mov
mov
inc
adc
push
sbb
int3
jmp
fimuls
les
add
jl
scas
iret
jne
sbb
cmp
mov
stos
bound
shl
iret
and
jl
push
dec
sbb
xlat
ret
push
mov
or
rcll
in
rcrb
xchg
aaa
sub
dec
dec
adc
adc
jo
fbstp
push
push
xchg
scas
push
fwait
sub
jp
or
sti
popa
int3
lock
mov
sbb
push
jae
sti
mov
jmp
xlat
xchg
bound
rclb
jle
dec
xor
push
push
push
xchg
jnp
cmpsb
xor
gs
rcl
in
aam
mov
xchg
jmp
cmpsb
add
mov
push
add
jno
mov
ja
dec
inc
aam
sbb
orl
stos
fsts
dec
and
pop
sub
fwait
test
clc
push
ret
cmp
pop
or
stos
cmp
inc
ja
push
xorb
xchg
sub
or
sbb
mov
bound
rol
push
aam
subb
test
xor
xor
pop
cwtl
nop
movsl
sbb
int3
xor
lret
outsl
cmp
scas
iret
scas
push
adc
addr16
lods
mov
jae
in
test
jecxz
xorl
data16
xchg
stc
incl
inc
shl
outsl
je
test
and
ror
and
sub
sub
dec
dec
call
add
mov
add
loop
addr16
addr16
mov
fwait
pop
add
loop
call
push
mov
adc
xor
ds
fcoml
jmp
pop
jno
xlat
outsb
adc
ja
rorb
pop
icebp
fwait
xchg
std
imul
test
push
cld
cmp
push
dec
or
mov
cmp
data16
mov
test
mov
test
cmp
dec
add
lods
call
mov
fiadds
icebp
xlat
adc
mov
push
add
fmull
iret
roll
cltd
outsl
insb
inc
fs
jcxz
adc
and
testb
xchg
std
test
fcoms
sub
xor
mov
leave
loopne
out
mov
mov
inc
lods
lret
jb
fldl
or
adc
push
sbb
std
loopne
xchg
xchg
push
cmp
fs
aad
jecxz
imul
and
inc
lcall
cltd
add
roll
data16
and
fsubl
and
sti
cmp
popa
insb
sbb
mov
imul
cmp
imul
loopne
popf
push
jnp
leave
mov
mov
orl
jno
hlt
pop
xor
out
jecxz
inc
out
xor
out
mov
int
cltd
pop
lahf
mov
test
add
pop
call
dec
sahf
and
test
dec
mov
aas
pop
lcall
or
popa
mov
mov
cli
cmpsl
call
mov
lods
add
xchg
and
jge
scas
sub
xchg
js
cmp
mov
dec
cmp
adc
fsubp
inc
addl
mov
inc
test
mov
adc
mov
add
inc
in
mov
orl
ret
jno
cmc
int
mov
pop
mov
jge
jmp
adc
mov
cmovnp
mov
push
daa
or
fbld
xor
inc
loop
inc
add
fsubs
xchg
faddl
and
das
pop
bound
dec
dec
inc
in
imul
subl
adc
mov
cmpsl
out
or
clc
or
lea
xchg
push
fstl
xor
imul
jb
mov
pushl
movsb
mov
xor
fld
xchg
xor
es
dec
mov
adc
jbe
inc
cmpsl
pop
out
sub
in
lcall
mov
cmc
adc
inc
mov
enter
cmp
lret
int3
cld
mov
mov
jbe
xchg
popa
pop
popf
insl
out
cmpsb
jl
push
sbb
imul
arpl
nop
gs
adc
clc
or
xor
outsb
jae
pusha
or
cld
into
mov
es
lea
lds
je
add
pop
andb
sub
negb
or
sub
sub
pop
std
test
xchg
add
decb
inc
mov
add
mov
push
pop
cltd
outsl
cwtl
cmp
js
mov
push
inc
add
pop
inc
sub
clc
std
pop
xlat
out
frstor
fs
test
add
icebp
mov
pop
popl
sti
stos
std
pop
iret
or
imul
or
or
xchg
inc
mov
or
aam
shl
cmp
xchg
push
fsub
xlat
sbb
xchg
and
sbb
add
testb
clc
ficoml
callw
or
psrlw
loop
and
mov
mov
push
ret
out
or
shlb
dec
daa
bound
fucomip
lret
cmp
cmp
mov
push
push
fwait
push
push
mov
inc
les
fsubl
nop
or
nop
adc
data16
fistpl
push
push
call
mov
subl
dec
add
jmp
mov
je
or
lods
mov
notl
and
aas
jp
sbb
pop
jbe
sbb
je
cmp
xchg
test
mov
int
fs
addb
sub
out
sahf
jne
jbe
fdivrp
mov
push
pop
mov
xor
push
mov
adc
rcrb
dec
sub
pop
fimuls
sbb
arpl
orb
fwait
movsb
dec
mov
sbb
ss
in
popa
nop
or
insl
sahf
push
adc
add
std
pushf
sbb
and
mov
xchg
in
stc
jmp
lock
sub
add
call
aad
ja
lret
xor
scas
add
dec
dec
aas
loopne
sbb
gs
hlt
cmc
repnz
mov
and
push
xchg
mov
fisttpll
jmp
in
sbb
popf
inc
cmp
orb
int3
imul
fcmovne
and
push
dec
icebp
adcl
jb
and
jmp
pop
ds
push
inc
push
xchg
cmp
roll
sbb
cmpsb
in
daa
ret
cmp
fildll
mov
aas
jmp
movsbl
pop
lcall
pop
xor
into
test
das
lcall
dec
pushf
sbb
sub
inc
arpl
add
das
jl
push
push
movsb
mov
cmp
jge
jno
movsl
sbb
dec
dec
scas
push
or
mov
call
xchg
fwait
xchg
shrb
in
mov
int3
cmpsb
cmpb
js
and
inc
gs
adc
add
add
sbb
push
xor
scas
scas
sub
add
push
xor
scas
andb
jg
xchg
repnz
insb
int3
rorb
adc
add
push
sbb
movsl
outsb
pop
xchg
push
test
jp
fimull
loop
dec
xchg
repnz
dec
inc
xchg
or
aad
iret
test
pop
in
out
xchg
ss
inc
xchg
out
and
sub
push
push
lea
in
stos
and
pop
pushw
push
addr16
or
daa
cmpsl
mov
mov
sti
sub
popa
and
dec
cmpsb
fldln2
xlat
imul
repnz
dec
jno
cld
scas
lock
imul
lock
testl
cwtl
lcall
es
xor
inc
aas
sbb
jno
aam
jo
loop
fldt
sub
and
in
sbb
cld
cmpsl
pop
lret
xchg
out
pop
sub
mov
adc
add
xchg
pushf
mov
or
cmpsb
xchg
fstl
loop
mov
in
xchg
jae
sub
gs
popf
arpl
test
dec
mov
dec
push
pop
das
inc
ficompl
rcr
mov
mov
shrl
mov
mov
mov
outsb
int3
clc
dec
mov
test
in
gs
test
inc
in
mov
mov
inc
call
data16
inc
bound
int3
out
insb
sbb
push
aad
jbe
jb
call
gs
sahf
mov
cmp
int
ret
push
sbb
cmp
and
mov
jge
xor
out
scas
xlat
pop
dec
stc
push
sahf
cmp
stos
insb
loopne
mov
add
in
cs
or
leave
scas
sbb
popf
sahf
mov
or
inc
enter
dec
or
push
decl
xchg
aam
xor
or
sahf
aam
ret
push
rorb
jbe
out
into
and
adc
icebp
stos
aam
es
pushf
out
out
sub
mov
xchg
fst
call
xchg
xchg
mov
popa
inc
or
fisubrs
xchg
popf
loop
add
dec
xchg
adc
sbb
repz
test
push
or
inc
add
mov
jno
mov
jecxz
jmp
mov
and
sbb
daa
xchg
jno
sbb
mov
mov
rcr
imul
shrb
mov
cld
xchg
es
rorl
cmc
and
outsl
adc
fnstcw
hlt
sub
rorb
dec
push
ret
and
repnz
sub
imul
rcr
adc
and
repnz
xchg
jg
fldl
ljmp
sbb
fs
xchg
pop
pushf
arpl
loope
cmpl
mov
jp
int3
jno
loope
dec
push
push
leave
call
xchg
xlat
xchg
inc
sbb
push
ja
negb
or
ret
idivl
cli
sbb
push
mov
stos
sbb
cwtl
aas
mov
xchg
test
fchs
lds
pop
int3
inc
stos
jg
popf
sti
mov
or
jp
and
enter
ds
add
sbb
lahf
push
cmp
fadds
dec
lahf
lcall
xchg
mov
mov
outsl
jae
and
lahf
lods
clts
pop
cs
mov
imul
push
dec
out
addr16
pop
xlat
in
rorl
push
loopne
jp
add
or
pop
pop
jl
pop
inc
add
cwtl
imul
aas
out
shll
fwait
imul
cmpsb
adc
push
mov
ds
inc
das
stc
push
mov
and
arpl
adc
inc
adc
add
int
hlt
in
inc
push
cmpsl
lcall
rorl
mov
roll
xorl
push
pusha
cmp
xchg
call
xchg
ret
mov
pop
pusha
xchg
inc
push
push
push
data16
jo
add
ss
testb
mov
mov
mov
jecxz
xor
shrl
jne
out
lret
out
xor
xor
cmp
fisubs
jp
mov
pop
icebp
cmp
push
enter
into
lods
ljmp
clc
movsb
pop
mov
pop
arpl
mov
push
insb
sub
subl
aad
dec
inc
or
ret
sbb
sub
mov
xchg
ret
sti
mov
dec
icebp
push
lcall
sub
dec
or
mov
add
xchg
cmp
lahf
imul
adc
jecxz
iret
imul
dec
iret
ss
or
mov
mov
out
stos
rclb
jno
pop
imul
fisttpl
jns
or
test
int3
cmp
loop
sub
insl
push
data16
or
aam
jecxz
mov
arpl
or
mov
fisttpll
push
sbb
int3
mov
xchg
shl
adc
push
sub
fadds
inc
pop
shll
mov
rcrb
cltd
mov
dec
icebp
les
daa
popf
data16
push
xor
js
mov
and
dec
movsb
cmpsb
mov
sbb
or
xor
popf
mov
sbb
scas
cmpsl
adc
push
mov
mov
cmp
aaa
mov
pop
sbb
test
int3
les
mov
pop
xchg
cmp
sbb
test
sub
xor
cmp
addr16
insb
fs
mov
mov
sbb
pusha
lea
sahf
mov
rclb
inc
sub
push
popa
xor
pop
jle
ret
das
add
pushf
sub
push
mov
mov
and
gs
dec
lahf
lea
adc
mov
clc
rcr
in
push
flds
inc
inc
mov
popa
or
mov
ja
ss
dec
ret
out
fstl
push
ret
sbb
outsl
lods
stos
rcrl
xchg
jp
nop
dec
jmp
xor
xor
sbb
and
pop
dec
bound
and
fidivrl
loop
shlb
inc
pop
test
push
fs
sub
rcrb
ficoms
or
cltd
test
int3
dec
arpl
loope
push
insb
or
and
movaps
xor
cld
in
test
mov
jno
xor
aad
cs
xchg
ret
jns
repz
shrb
push
inc
sub
mov
ds
jecxz
xchg
ret
jns
push
dec
out
pop
adc
das
pop
pop
int
inc
xchg
jge
in
les
ljmp
mov
dec
in
stos
jne
xor
and
jle
mov
dec
in
dec
sti
in
and
jne
mov
hlt
cltd
adc
sub
add
pop
arpl
aaa
and
pushf
movsb
aaa
cld
testb
xor
lret
mov
fimuls
clc
inc
pop
pop
mov
and
fdivrs
inc
push
and
popl
inc
mov
sbb
inc
jp
push
xchg
mov
ret
push
mov
push
mov
inc
mov
pop
inc
pop
jecxz
outsb
insl
mov
es
repnz
xchg
lret
pop
mov
arpl
jle
insb
pop
adc
test
lods
xchg
mov
xor
rcrb
shr
aas
inc
pop
push
jp
pop
lcall
and
lret
loop
call
jns
mov
xchg
xor
ret
in
add
mov
insb
int
scas
test
mov
xchg
and
mov
insb
aam
or
addl
aas
sti
or
in
inc
jecxz
into
inc
ret
push
xchg
or
fbstp
dec
ds
jb
xchg
lcall
jecxz
jmp
pushf
mov
ljmp
lea
sub
sbb
and
sub
jmp
xor
jge
cltd
xchg
data16
jp
pop
or
sbb
jle
ret
in
es
in
call
ljmp
fadd
mov
repz
dec
repnz
pop
rcrl
mov
adc
lahf
push
adc
inc
jecxz
dec
sub
mov
xchg
js
xchg
shlb
ror
cwtl
jns
adc
cmp
aas
je
push
fidivrs
sub
loopne
xchg
sub
cwtl
xchg
and
lahf
gs
jle
mov
jbe
loopne
or
shll
xchg
scas
repnz
add
sbb
sbb
sbb
dec
repz
dec
out
cli
sti
adcl
xorl
mov
sahf
sbb
js
sti
stos
or
sub
stc
or
fsubp
test
imul
push
inc
rorl
cld
mov
jp
in
xor
out
repnz
divl
mov
inc
out
lds
mov
mov
jmp
mov
sbb
mov
int
or
xor
push
inc
test
iret
or
push
or
cs
mov
repnz
xor
filds
ficoms
push
mov
mov
pushf
and
rorb
cmc
ss
lds
icebp
jo
fdivrp
xor
cltd
xchg
popa
cmpsl
pop
pop
lret
mov
pop
pop
movsl
aam
shrd
rcrb
push
test
dec
mov
in
in
dec
popf
xchg
aaa
jecxz
ds
push
cli
stc
cmp
push
rorb
daa
jb
data16
and
pop
push
in
push
cmp
sub
jmp
dec
mov
int3
in
jg
fidivs
lds
mov
dec
xor
pop
fbld
fsts
jns
or
xchg
in
icebp
or
adc
aaa
dec
ja
xchg
stos
mov
mov
jl
mov
lret
stc
adc
xlat
dec
add
aad
lods
sahf
icebp
jmp
inc
adc
cmp
push
adc
ficompl
xchg
jb
pop
fldt
or
push
ss
addr16
xchg
add
idiv
push
or
sbb
scas
lret
add
sbb
in
cwtl
outsl
scas
pop
daa
test
rorl
adc
pop
jmp
jnp
aas
dec
sub
jecxz
inc
mov
jb
std
addr16
popf
out
fs
ret
pusha
push
hlt
inc
mov
icebp
lret
in
jmp
repz
lock
push
push
and
sti
xor
push
sbb
sub
sbb
jae
shll
lea
mov
dec
cld
repz
mov
sbb
pop
lds
lods
sub
sub
shll
adc
inc
insb
cmpsl
sub
mov
ss
decl
in
shlb
icebp
ret
repz
adc
cmpsl
lea
push
xchg
adc
sbb
clc
les
xchg
jae
pop
arpl
mov
out
repz
inc
jnp
and
dec
or
dec
mov
push
cmpsb
pushf
pop
lods
dec
mov
mov
lods
lock
mov
dec
fdivl
adc
loope
lods
push
mov
out
sub
nop
xchg
jmp
bnd
jne
mov
stos
mov
leave
mov
sub
enter
adc
test
xchg
add
sub
paddq
stc
mov
sbbl
divps
adc
mov
mov
pushf
loopne
jmp
sti
popf
stos
cmp
and
lea
fldl
pop
dec
xor
push
inc
push
mov
movsb
fcmovu
cmp
call
sbb
jne
mov
imul
aaa
sbb
bt
jmp
adc
out
pop
push
or
push
in
inc
shlb
call
adc
stos
je
aad
sbb
bound
faddp
push
mov
or
mov
movsl
jno
pop
xchg
ja
and
push
ljmp
lods
inc
xchg
sahf
ds
shl
cmp
sbb
inc
scas
imul
add
add
jbe
add
das
out
pop
std
std
or
lods
inc
addr16
dec
adc
daa
pop
cli
addr16
jmp
imul
adc
icebp
mov
dec
and
lea
dec
daa
xor
lcall
add
or
popf
std
test
cmp
aas
mov
das
jp
fcomps
outsl
das
stos
or
aaa
add
mov
dec
loope
lods
pop
inc
sarb
aad
test
xchg
xchg
imul
pop
mov
rorl
dec
int
jns
repz
dec
sbb
addr16
mov
mov
and
add
jno
pop
push
mov
arpl
clc
inc
filds
xchg
js
xor
add
test
jo
or
cmp
sub
xor
pop
adc
fneni(8087
out
adc
push
sbb
sub
outsb
xchg
sub
pushf
fistps
sub
iret
orb
les
out
test
jg
movsb
xor
scas
xchg
int
and
mov
aaa
inc
jmp
sbb
cmp
jp
int
dec
cmpsl
negb
lahf
ljmp
xchg
sbb
jg
adc
jno
push
or
adc
bound
ss
jo
push
fwait
or
loopne
xorl
jmp
fs
pop
inc
addl
pop
shlb
movsb
scas
into
repz
xchg
popa
pop
sbb
xor
xor
int
sbb
iret
jl
cwtl
sbb
pop
aad
lret
mov
jg
cmc
out
test
dec
lods
arpl
adcb
lret
add
shlb
mov
fstl
pop
add
inc
pushf
scas
xor
enter
test
aas
jo
mov
hlt
or
cli
cmpsb
dec
add
mov
pop
add
xor
in
lcall
mov
dec
test
jnp
cli
inc
push
test
xchg
jecxz
mov
jo
sti
cmp
add
fadd
pop
cmp
mov
add
add
sub
dec
fstl
adc
fyl2x
sub
add
sub
stos
ja
stos
pushf
pop
lods
scas
loope
std
out
jl
fdivrl
jo
mov
push
sbb
cmp
movsl
add
ljmp
mov
dec
jbe
repnz
outsl
adc
jg
jns
and
aad
push
in
ret
mov
sbb
jns
enter
js
mov
out
add
dec
xlat
push
movl
loopne
or
mov
adc
ljmp
mov
xchg
xchg
es
hlt
shlb
jmp
lret
lahf
cmp
lock
jecxz
repz
mov
dec
fistpl
dec
jl
mov
dec
mov
and
out
pop
push
jle
test
out
dec
mov
sti
dec
fs
decb
pop
or
xor
cmp
pop
cmp
iret
and
into
mov
loopne
inc
jecxz
xlat
cs
push
imul
sbb
mov
loope
ds
jns
inc
mov
movd
sbb
ja
xor
out
push
mov
sbb
dec
iret
data16
pop
imul
mov
sub
or
popf
xor
adc
cmp
mov
das
pop
xor
sti
inc
add
push
xor
pop
mov
cwtl
cmp
mov
mov
jbe
pop
add
adc
mov
or
jp
adc
shll
orl
xlat
sub
loop
mov
xchg
scas
xor
mov
and
lods
sti
dec
sub
sub
sub
daa
cltd
or
cli
add
repnz
pushf
sbb
adc
or
push
sahf
lret
js
pop
loopne
adc
xchg
into
sbb
loope
scas
lods
xor
pop
and
scas
xchg
mov
lods
fs
jo
mov
xchg
jp
push
adc
mov
push
mov
addb
dec
and
dec
arpl
sarl
imul
or
lcall
and
xor
and
jae
mov
out
sub
jle
add
fwait
cmp
push
lock
pop
inc
xchg
dec
popa
out
dec
xor
mov
push
mov
paddsw
bound
dec
das
andb
pop
cmc
sbb
in
mov
and
lret
dec
add
jbe
sbb
and
into
jne
jl
adc
cmpb
cltd
fstp
mov
dec
mov
pop
push
adc
rclb
inc
pop
jno
icebp
pop
sub
mov
xor
pop
dec
sti
aad
dec
adc
sub
je
loopne
sbb
mov
ret
dec
xor
aam
push
pop
arpl
mov
or
jo
int
adc
jg
xchg
pop
add
mov
test
cmp
cmp
cmp
cs
xor
ret
push
in
dec
addl
sbb
jae
nop
movsl
outsb
scas
adc
jle
daa
adc
jo
mov
fs
add
add
mov
dec
fwait
add
lods
mov
cmp
mov
in
dec
lret
jb
push
pop
pushf
jl
cli
test
push
cmp
test
sahf
sbb
mov
inc
mov
inc
push
mov
subl
ds
sub
cmpsl
pop
movsb
pinsrw
dec
add
mov
arpl
popf
out
mov
nop
andl
andb
scas
xchg
outsl
mov
mul
cmp
jg
rcrb
mov
mov
outsb
sbb
xchg
sub
fwait
mov
push
cmpsb
pop
push
test
xchg
pop
in
in
jmp
sub
push
icebp
mov
sub
mov
rsm
stc
unpckhps
popf
roll
les
jl
pop
xchg
mov
xor
movsb
xchg
adc
shrb
or
pusha
xor
inc
xor
mov
mov
rcl
pop
sub
xchg
adc
inc
pop
leave
push
fisttps
mov
loopne,pn
in
and
cltd
push
lods
or
xor
or
push
mov
js
inc
mov
scas
inc
ds
gs
cmpl
adc
das
cmpsl
xor
dec
minps
pusha
mov
jne
sahf
push
jg
shlb
addl
data16
fnstenv
stos
xchg
lret
mov
ret
xchg
or
daa
push
insb
adcl
cli
cmp
jne
incb
imul
mov
rcll
mov
int3
cltd
dec
jl
or
movsl
cmp
or
adc
repnz
out
and
push
loopne
ljmp
mov
pop
push
xor
cltd
mov
insl
out
and
xchg
jg
dec
shr
sarb
ret
jbe
bound
xorb
int3
jecxz
and
vmptrst
sbb
mov
insl
pushf
adc
push
andl
mov
lock
mov
push
sbb
pop
aaa
and
pop
sti
ret
or
sbb
pop
push
bswap
jle
inc
repnz
pop
repz
ds
ds
arpl
push
dec
push
mov
xchg
xlat
dec
ficoml
loop
mov
and
cwtl
inc
cmpsl
js
mov
push
inc
fiaddl
in
jo
ljmp
gs
inc
mov
pop
pop
cvtpi2ps
sub
flds
cmp
daa
mov
xchg
adcb
lret
jb
icebp
aad
push
adc
xor
pop
xchg
movsb
leave
in
pop
stc
daa
bound
xchg
cmp
aas
sbb
xlat
sbb
mov
xchg
sub
xor
add
loope
movsb
cli
scas
jle
stc
sbb
adc
push
mov
in
adc
xchg
mov
jle
rol
movsl
data16
mov
dec
dec
jg
dec
jmp
adc
inc
repz
or
xor
mov
push
dec
xor
fcmovbe
sub
pop
push
je
popf
mov
lcall
cmc
imul
imul
pop
push
sqrtps
mov
cmpsb
lret
cld
shlb
mov
xchg
pop
sub
push
fs
add
movsl
mov
sbb
adc
js
shlb
unpckhps
sbb
inc
xchg
push
jno
adc
push
push
mov
add
mov
rorb
in
and
xchg
xchg
test
aam
fmull
fnstsw
mov
xchg
fdivrs
scas
mov
clc
out
and
mov
fs
in
mov
jbe
add
clc
add
movsl
in
push
cs
arpl
cmp
in
mov
daa
push
fwait
and
inc
add
adc
fiaddl
jb
lds
movsl
nop
cld
fcoms
push
push
xchg
cmp
je
mov
inc
lods
std
test
mov
lcall
scas
fs
cli
sbb
gs
imul
lods
jo
mov
sti
outsl
push
inc
mov
sbb
jno
pop
mov
loope
sub
lods
clc
xchg
push
arpl
or
std
aaa
and
repnz
sbb
xchg
leave
dec
seta
sbbb
xchg
sub
sbb
pop
test
minps
cmp
iret
sub
bound
das
mov
cmp
push
add
mov
or
pop
inc
sub
sub
in
jecxz
rclb
mov
ret
jle
aaa
sub
mov
add
mov
sti
pop
les
mov
rcrb
pop
aad
jne
mov
je
sbb
or
fs
inc
sahf
loope
std
aad
outsb
jb
pop
sbb
dec
push
jno
or
mov
cltd
cld
jmp
cmp
test
mov
jb
es
lods
shlb
out
inc
inc
cmp
movsl
pop
flds
mov
jbe
pop
jecxz
cmpsb
cmp
lahf
cld
or
or
mov
cwtl
lahf
adc
push
push
inc
ret
adc
mov
jno
sbb
jp
mov
pushf
lcall
sbb
lock
jnp
jmp
out
leave
hlt
lods
std
in
mov
scas
icebp
jg
mov
mov
and
xor
popf
dec
nop
mov
ret
in
add
out
xchg
xlat
into
pop
loop
outsb
mov
jmp
lods
pop
mov
adc
ljmp
jno
push
ret
lret
imul
xchg
xorl
xor
mov
rorb
mov
push
mov
mov
cmp
mov
xchg
dec
mov
add
ffree
and
lcall
movsl
add
insb
js
movl
dec
scas
repnz
add
mov
sub
push
jecxz
add
jo
pop
in
out
loope
dec
jecxz
stos
pushf
insb
sti
dec
fidivrl
or
andb
pop
push
mov
jo
sti
push
push
push
in
dec
mov
xchg
into
xlat
add
pop
je
sub
push
ffreep
test
sahf
out
push
out
xor
sbb
xchg
arpl
xor
add
xchg
orl
cmc
xor
jmp
adc
movsl
mov
fistps
aas
push
mov
aaa
sub
push
jg
jg
rcrl
test
jnp
jp
jne
sti
push
push
aaa
and
sbb
mov
jle
cmp
pop
dec
cmp
movsl
outsb
jl
mov
imul
pop
inc
je
sbb
jle
pop
mov
es
xchg
mov
adc
decb
push
push
jbe
pop
out
test
push
movsl
bound
test
or
movsl
scas
addr16
in
mov
pop
lret
or
add
push
inc
test
js
push
jns
shlb
data16
sarl
cmp
clc
dec
leave
ret
cmp
pop
mov
dec
push
inc
xor
gs
pop
add
mov
sub
adc
gs
in
add
sbb
rcrb
xorl
sbb
sub
or
push
cmp
dec
dec
xchg
jb
xor
lock
or
cli
jbe
dec
dec
dec
mov
jno
iret
xchg
loopne
mov
xchg
xchg
aam
ret
fisttpll
jne
inc
bound
into
and
cmp
andl
xchg
sbb
mov
adc
rcrl
or
cmp
daa
add
mov
adc
or
fwait
mov
add
fwait
orl
mov
jmp
fldenv
movsb
xchg
fimull
inc
push
jae
out
pop
add
mov
dec
jnp
sti
test
out
inc
cmp
xchg
push
push
ja
rcr
cmp
sub
lods
cmc
push
push
pop
rcll
cmp
call
pop
iret
roll
lret
lock
adc
or
daa
add
xchg
stc
xchg
jns
jbe
outsl
outsl
mov
mov
insl
pop
mov
pop
hlt
push
sbb
mov
js
pop
fstpl
push
xlat
lods
scas
repnz
jle
sbb
xchg
movsl
dec
std
mov
jns
mov
cmp
jnp
shr
aad
sub
std
jp
neg
sbb
xor
fsubs
push
pop
add
jecxz
out
jl
xor
mov
mov
in
icebp
out
sti
cmp
clc
adc
push
sbb
push
das
shl
adc
bound
push
adc
sub
and
adc
scas
popf
int3
mov
cmp
scas
imul
out
ss
and
mov
nop
scas
mov
ljmp
cmp
sbb
cmp
sbb
mov
cmp
in
idivb
sbb
fucomip
push
pop
fwait
lock
cmp
popa
cmpsb
divl
push
stos
mov
dec
pop
pop
jg
pushf
adc
cmp
xchg
sbb
cmp
push
pusha
notl
cwtl
push
mov
or
rcrb
fwait
in
nop
cwtl
pop
out
sbb
data16
pop
fstps
repnz
stos
jno
and
pop
xor
mov
push
push
cmp
cmp
movsl
mov
aam
mov
xchg
imul
xor
lahf
outsl
push
mov
rcr
jnp
add
popa
mov
test
orl
or
pop
cmpsl
shl
xor
out
repnz
lods
jno
inc
xchg
test
out
cld
loopne
hlt
movsb
or
mov
xor
pop
inc
push
inc
adc
imulb
xchg
dec
or
rcrb
call
push
in
roll
js
push
ret
idivl
testb
outsl
mov
jg
xor
mov
xchg
inc
mov
movsb
ljmp
cli
pcmpeqw
mov
mov
pusha
sbb
adc
xor
dec
add
xor
pop
daa
mov
sbb
int
jbe
fiadds
sbb
pop
addl
mov
call
shll
pushf
xor
dec
mov
out
lea
inc
rcrl
mov
stos
push
pop
in
lcall
dec
or
mov
ja
xchg
or
sbb
mov
dec
adc
push
test
push
shlb
gs
add
push
out
icebp
fbld
in
inc
or
push
mov
movb
sbb
sbb
inc
or
sub
pop
mov
loope
xor
xor
stos
cmpsb
mov
and
cmpsb
sti
mov
xor
mov
push
mov
xorl
lds
pop
daa
dec
cmp
mov
pop
loop
in
cli
fiaddl
pop
inc
push
xchg
push
pop
test
imul
aaa
ja
out
add
popf
jmp
xchg
aad
sbbl
and
mov
pop
outsb
std
dec
jmp
cli
sub
and
popf
cltd
dec
xor
pusha
dec
xchg
out
adc
add
shll
out
sbb
dec
je
fs
mov
adc
xor
xchg
mov
daa
mov
pusha
pop
out
and
mov
dec
int3
xchg
addr16
adc
add
popf
adc
fildl
and
sbb
mov
xchg
clc
add
mov
aas
nop
popf
mov
inc
mov
out
and
xchg
fcomps
aaa
movsb
into
pop
push
lds
xor
popf
movq
cwtl
add
push
mov
loope
out
cli
cmp
xor
loope
out
in
mov
xchg
mov
add
or
cld
cmovp
adc
test
xorl
cmp
push
add
loope
and
nop
lea
nop
sub
aad
out
daa
mov
cli
lds
pop
ds
iret
leave
jb
fstps
jmp
pop
fcoml
clc
jecxz
aad
aad
enter
mov
jns
insb
stos
push
mov
out
fcompl
in
jae
insb
cs
insl
pop
insl
cmpsb
adc
xchg
and
pop
loop
popa
mov
mov
lds
outsl
inc
cmc
mov
push
sbb
push
xchg
cs
bound
cmp
aam
xlat
sbb
xor
fdivr
jp,pt
popf
int
pop
in
out
mov
push
inc
jns
add
xchg
pop
loop
outsb
pop
push
mov
sbb
rcll
xlat
mov
xchg
add
in
ja
sub
adc
dec
imul
or
push
cmpsb
jmp
inc
ss
aad
push
cmc
push
inc
jo
dec
lds
xchg
xchg
test
clc
push
jp
lret
xor
jg
fildll
dec
mov
xchg
pop
push
rorb
clc
cmp
mov
sarb
mov
aad
daa
sub
clc
dec
fdiv
inc
mov
in
sbb
insb
add
les
jo
pminsw
sub
push
rcr
ds
xchg
mov
push
push
mov
test
inc
clc
xchg
mov
dec
popf
out
loopne
mov
fmull
sub
nop
inc
fwait
push
add
push
xchg
jns
or
push
pusha
push
daa
call
in
adc
sar
mov
cli
sahf
or
mov
xor
sub
jge
inc
mov
into
sbb
or
xlat
xchg
mov
fsts
enter
cmp
enter
out
mov
lock
pop
jns
jle
enter
nop
mov
and
dec
add
cmp
dec
fsts
dec
pop
jl
pop
lret
iret
aam
call
mov
adc
dec
push
sbb
leave
pop
stos
aad
sbb
pusha
in
lret
adc
fldenv
push
test
or
mov
pop
shll
stc
jge
adc
pandn
adc
adc
or
insl
mov
lods
mov
fwait
sar
mov
int3
pop
shrb
ficomps
mov
push
movsb
mov
rorb
jecxz
in
ret
lods
fwait
and
cld
xchg
pop
aaa
cmp
in
lcall
inc
and
jle
fs
std
wbinvd
sub
call
in
pusha
imul
enter
sbb
pushf
test
cltd
push
dec
test
adc
loop
sahf
imul
andb
push
ret
ss
push
out
lret
xchg
inc
xchg
jo
lods
movsb
sti
xchg
cmp
sbb
mov
aas
loop
clc
pop
hlt
mov
cmp
jmp
repnz
popa
lahf
pushf
ror
sub
xorb
mov
hlt
mov
dec
xlat
shll
test
mov
pop
mov
adc
insl
sarl
pop
mov
mov
xorb
in
or
inc
jno
dec
mov
pop
bound
dec
ja
push
inc
xchg
xchg
dec
push
sub
addr16
addr16
pop
je
cmp
push
and
fcoms
das
stc
fisttpll
mov
sbbl
add
daa
or
inc
cmp
test
cmp
cmp
add
popa
gs
lret
es
fimuls
movsl
or
jno
dec
test
out
popf
js
mov
mov
ret
push
dec
mov
mov
mov
or
gs
mov
mov
mov
ss
cmpsl
xor
push
jle
xor
jb
or
xlat
cmp
pushf
adc
scas
lcall
sbb
std
xchg
mov
rcll
movsb
fldcw
fucomi
fwait
scas
jo
ss
out
or
sbb
shlb
cmc
sbb
cmpsl
and
mov
xchg
pusha
push
cmp
je
ret
sbb
cwtl
xorl
and
gs
mov
jb
xor
add
mov
clc
addr16
pop
pop
fnstenv
out
insb
jp
sbb
sbb
outsl
cmp
xorl
shrl
sbbl
push
and
cmpsl
cmpsl
lretw
pop
movsl
stc
pop
stos
fdivrp
daa
inc
push
int3
imul
xchg
add
or
cmc
mov
ret
push
mov
mov
call
and
sahf
aad
sbb
jge
loop
push
pop
xor
cs
inc
push
das
push
and
hlt
imul
push
scas
cmp
sbb
ljmp
scas
pop
adc
mov
xchg
pop
jecxz
inc
adc
mov
mov
dec
iret
es
xor
outsl
cltd
lods
daa
push
inc
enter
ljmp
push
push
cmpsl
pop
lret
or
or
or
decl
in
int3
int3
sbb
dec
adc
lds
mov
testl
in
fucom
push
lock
pop
popa
shr
push
insl
fimull
inc
or
lret
mov
add
pusha
shll
push
in
and
dec
sbb
pushf
mov
xchg
pop
push
scas
mov
repnz
sbb
jb,pn
outsb
adc
jae
pop
mov
aam
popa
lea
pop
xchg
jno
mov
insl
jae
arpl
fadd
xlat
iret
outsl
jp
pop
aaa
insb
fs
push
mov
test
fisttpll
jnp
js
ds
scas
mov
mov
mov
sub
cmp
jnp
fisttpl
push
sbbb
leave
daa
pop
jle
imul
fmul
mov
fisttps
jge
jae
jecxz
lret
mov
cmp
jp
fidivrl
lock
xor
sub
dec
adc
test
pop
mov
mov
jp
sbb
jecxz
das
jmp
adc
push
in
cmp
inc
movsl
bound
add
mov
pop
adc
ja
sbb
scas
mov
adc
jnp
dec
lods
call
cmp
incl
stos
push
lds
fldcw
pop
add
movsb
negl
pop
sub
jg
jb
xchg
dec
mov
or
js
bound
mov
adcl
leave
mov
sbb
add
imul
xchg
inc
popf
push
test
add
lock
mov
das
cmc
add
sub
mov
mov
out
lahf
out
xor
xchg
sub
jle
push
jbe
mov
jge
or
xor
mov
xor
test
adc
ljmp
or
inc
stos
daa
fidivrl
push
xor
aaa
ret
cltd
push
lods
xchg
push
cmpsb
cmp
sbb
and
push
pop
cmp
es
xchg
add
mov
ja
lods
lret
sbb
add
inc
lahf
push
std
daa
pop
add
cmp
movsb
shlb
mov
cmc
jo
lcall
mov
pop
aam
cmp
or
lods
cmp
ja
imul
js
jbe
fidivs
mov
pop
rorl
mov
lcall
pushf
sub
outsl
inc
jle
xor
add
loop
lock
mov
xchg
pushf
jne
test
gs
mov
push
push
jo
mov
clc
ds
pop
cmp
push
and
jo
lcall
dec
pop
rolb
ds
lock
lret
cli
popf
dec
adc
roll
xchg
ljmp
or
jns
stc
xor
mov
xchg
add
insb
sbb
push
cmp
mov
dec
sar
dec
ret
movsl
mov
cmpsl
stc
push
inc
popf
pusha
mov
dec
and
mov
xchg
dec
cmpsl
into
repnz
aad
mov
mov
dec
ret
imul
in
add
out
fdiv
addb
lds
scas
int3
mov
hlt
enter
popa
aas
xor
scas
jecxz
inc
aad
hlt
sbb
adc
inc
inc
jge
adc
idivl
pop
dec
xchg
lds
aad
sbb
mov
cmpsb
arpl
cmpsl
pushf
xor
and
lods
repz
and
ja
mov
popa
mov
push
dec
and
sub
jp
jle
sub
sahf
cld
xchg
in
xor
push
fcomps
push
ljmp
xchg
pop
ret
call
push
call
repnz
jbe
sbb
dec
pushf
jp
mov
and
out
mov
mov
mov
out
popa
inc
jle
inc
or
cmpsl
mov
jecxz
or
dec
adc
pusha
sti
mov
push
and
incb
xor
push
sub
shlb
mov
push
jbe
rorl
xchg
push
inc
xchg
test
test
call
lcall
inc
aad
push
jbe
pop
cli
shrl
lret
mov
imul
jae
jmp
leave
repnz
shlb
lahf
and
add
add
push
xchg
clc
xchg
popf
test
jo
and
jbe
mov
mov
push
cmc
xor
shll
shll
imul
pop
push
pop
mov
ret
add
inc
mov
and
out
rorl
lods
push
repz
jl
xor
jno
mov
push
dec
inc
rolb
and
in
cmp
sub
pop
sahf
adc
stos
sbbb
cmp
add
xchg
jmp
outsb
out
sub
daa
push
repnz
jecxz
xor
insb
fdivl
adc
cld
add
daa
mov
shl
lcall
sti
inc
jae
popf
imul
jns
sub
sti
pop
loopne
jecxz
xchg
sub
lahf
mov
jb
test
sbb
and
outsl
fadd
movsb
gs
loopne
lcall
fnstsw
jp
or
sti
xchg
out
mov
mov
addr16
loop
lea
pop
sbb
push
aam
in
mov
cmp
test
icebp
pusha
aas
xlat
jno
dec
mov
js
sbb
in
adc
mov
sbb
aad
jg
lods
repz
jno
push
lock
push
rcll
pop
and
aad
js
jne
mov
lret
faddl
and
fisttps
rcrb
mov
jb
mov
sbb
in
sbb
pop
sub
mov
popw
sbb
jmp
jl
repnz
dec
out
xchg
std
adc
rcr
shrb
je
clc
mov
xor
outsl
mov
dec
inc
and
mov
clc
lret
loop
dec
fcmovnu
andb
lds
fistl
fwait
mov
or
xchg
and
sub
mov
or
bound
mov
mov
sbb
jo
mov
enter
sarl
es
xchg
and
outsb
push
out
hlt
mov
jae
loop
lods
xchg
popf
add
hlt
pop
push
xor
repz
xor
push
insb
lcall
inc
int
movsb
test
test
dec
or
test
or
push
bound
jne
mov
and
or
rclb
fdivrl
sbb
jno
or
dec
es
jne
adc
jl
jno
ret
push
test
dec
and
out
in
dec
cmc
dec
pop
in
jbe
loopne
out
lock
pop
push
adcb
push
push
xchg
or
pop
or
mov
adc
call
cmc
and
push
adc
inc
in
dec
mov
xchg
or
mov
push
mov
mov
dec
addr16
js
push
add
or
aaa
shrl
sbb
sbb
cmp
mov
jp
test
popf
int3
rorl
lret
adc
insl
sets
aaa
imul
aad
hlt
popf
adc
mov
fisubrl
inc
aam
scas
pop
sub
mov
cmp
bound
xorl
std
sti
adc
xchg
lret
pop
sti
cmp
jb
outsl
cmp
cmp
or
pop
je
mov
mov
sub
push
dec
test
adc
lods
push
cltd
lahf
sbb
inc
lock
xchg
dec
cwtl
ds
pop
negl
out
dec
jmp
pop
mov
mov
xor
jbe
xor
loope
xor
cmp
das
pop
sti
sub
xchg
mov
mov
stc
push
jae
shlb
or
jo
push
xchg
addb
push
aaa
sbb
stos
stc
mov
pushf
cmp
cmp
aam
test
add
cmp
out
xchg
lret
xchg
iret
sub
repnz
ljmp
jns
pop
mov
popl
rclb
loopne
mov
insl
decb
push
push
inc
in
mov
pop
cwtl
pop
push
pop
leave
or
mov
jo
xchg
pushf
insl
pop
pop
jle
sahf
cld
in
shr
mov
and
in
or
pop
cmp
add
in
adc
mov
mov
mov
push
sbbb
mov
test
xchg
xlat
push
xlat
xor
pop
mov
mov
jmp
arpl
xchg
sti
jnp
mov
daa
test
jg
cmpsl
jbe
in
cmp
mov
in
sbb
mov
ret
or
leave
in
add
int
cltd
imul
and
mov
sbbb
inc
aas
add
mov
inc
jl
sbb
jmp
pop
aas
mov
jnp
jecxz
push
divb
inc
pop
enter
inc
pop
fwait
sub
jle
xchg
xchg
je
xchg
ret
sbb
rcrb
push
xchg
scas
adc
mov
wrpkru
test
push
xor
mov
add
push
inc
int
icebp
adc
jns
andb
add
cld
dec
sahf
arpl
sub
fwait
push
dec
jbe
xchg
dec
pusha
and
das
cmpsb
cmc
inc
xchg
mov
jle
sbb
test
cmp
push
pop
push
icebp
imul
jle
gs
cmp
test
in
bound
test
mov
mov
xlat
pop
mov
push
dec
jns
xlat
cltd
jb
xchg
aam
gs
xchg
mov
andb
mov
repz
xor
mov
sub
pop
add
fists
in
add
jle
xlat
adc
jno
or
pop
fistps
clc
pop
push
mov
fsubrl
jae
repnz
ljmp
jle
dec
fimuls
rorl
aas
xchg
call
fimuls
xor
out
push
dec
mov
repz
shll
add
stc
push
fdiv
mov
mov
mov
xchg
fbld
xchg
daa
and
lods
scas
add
or
mov
insb
pop
and
pop
test
in
fisttpl
dec
pushf
or
and
sbb
inc
xchg
mov
mov
xchg
pop
mov
dec
push
mov
loopne
imul
adc
test
es
outsb
hlt
push
mov
xor
pop
lret
ss
inc
mov
adcb
in
pushf
movsb
icebp
inc
sarl
or
cmp
mov
sub
pop
or
xor
push
lcall
loop
push
push
xlat
sub
imul
movsb
mov
roll
hlt
insb
mov
ds
xchg
mov
imul
lods
pushf
xchg
pusha
lgs
xchg
inc
mov
mov
pop
nop
shrl
pop
and
cmp
or
dec
push
mov
adc
jcxz
test
mov
mov
xchg
mov
cli
pushf
lahf
lret
pop
dec
leave
iret
test
outsb
movsb
enter
or
ds
fisttpll
add
nop
mov
xchg
repz
das
and
ja
mov
inc
add
xchg
push
cwtl
rclb
sub
fsubs
jge
xor
pop
cli
jb
ret
pop
stc
divl
inc
push
addr16
and
lcall
or
or
xor
filds
add
push
hlt
mov
inc
out
mov
ljmp
pop
fs
pop
pop
imul
enter
cmc
and
sub
sbb
movsb
xlat
adc
ret
jns
in
cmpsl
mov
dec
popf
lahf
lcall
inc
mov
mov
pop
aas
cmp
movsb
pusha
shrb
scas
hlt
inc
out
xchg
imul
out
hlt
test
inc
fmull
lods
or
or
cltd
lods
jle
xor
int3
hlt
adc
dec
int
int
inc
mov
add
pop
cmc
bnd
xchg
inc
icebp
mov
sbb
aas
in
add
icebp
jecxz
cmpsl
aas
push
xchg
loopew
jle
scas
fisubrl
cmpsb
adc
fwait
inc
add
mov
ljmp
mov
add
pop
or
rcrb
repz
mov
jecxz
bound
or
pop
out
aaa
ret
gs
stos
dec
push
mov
push
adc
xor
and
int
sahf
fstl
cmpsl
sub
lds
ret
incl
dec
scas
insl
les
mov
push
pop
stos
mov
lods
movsb
mov
mov
add
xchg
clc
mov
stos
icebp
out
repnz
and
repnz
sbb
pop
dec
sti
pusha
dec
cmpsb
adc
enter
sbb
push
or
adc
mov
dec
fstpt
shlb
mov
lods
addb
add
stos
hlt
sahf
inc
mov
inc
std
imull
call
ret
clc
pop
mov
pop
sbb
js
adc
cli
or
imul
jle
push
add
lea
inc
fs
cmpsl
jecxz
testl
pop
ret
push
jbe
cmp
dec
and
mov
or
pop
mov
out
mov
pop
or
push
lahf
out
addr16
ss
sub
shl
les
iret
jb
jmp
in
add
push
mov
jae
imul
sbb
out
mov
lods
leave
push
daa
mov
xchg
jbe
cs
xor
and
aaa
test
ret
aaa
inc
es
jbe
stc
mov
lea
aaa
jae
fwait
jno
sbb
dec
or
inc
cmpsb
inc
sti
movsb
xor
aas
pushf
xorb
xchg
push
pop
xchg
mov
ja
fs
bound
ret
inc
sti
out
rcrl
loope
adc
and
xchg
decl
aad
push
ret
aam
push
and
adc
and
cld
aaa
sbb
sbb
cmp
iret
mov
scas
mov
std
std
ficompl
das
bound
aaa
xor
decl
cmp
lret
lock
leave
ljmp
loop
pop
push
cmp
cmc
ja
adcl
lahf
jl
es
gs
sahf
pushf
and
ljmp
adc
cmpsb
xor
inc
jle
pushf
cmp
mov
adcl
jo
dec
mov
mov
and
mov
adc
iret
insl
push
mov
es
xor
aaa
ret
in
int
sbb
repz
dec
repz
bound
jns
cmp
sub
test
ffreep
pop
or
ret
outsb
dec
push
hlt
es
fwait
decl
stos
les
mov
jmp
and
push
mov
cmp
jge
or
sbb
repnz
imul
or
aaa
and
outsb
push
jp
mov
lcall
jle
mov
cmpsb
xchg
cmp
insb
push
jns
orb
cmp
mov
xchg
pause
nop
inc
shl
notl
jbe
je
fiaddl
in
test
aad
sub
jmp
out
test
and
sub
test
popa
push
arpl
cmp
pusha
setge
enter
mov
mov
addr16
cmpsl
push
sbb
fst
adc
cmp
sbb
sbb
das
jbe
jecxz
outsb
aaa
push
xchg
enter
sbb
jno
ds
xor
stc
in
xchg
icebp
sub
roll
loopne
out
out
cli
shll
icebp
cmp
mov
ja
sar
xchg
loop
fneni(8087
lods
aam
insb
or
sahf
pop
cmp
pop
movsl
icebp
lahf
cs
or
push
pushf
push
mov
shll
inc
or
pop
imulb
fimull
jp
sbb
fimuls
jle
mov
cltd
js
idivb
inc
mov
jo
sahf
popf
insw
pop
inc
push
dec
cmc
test
mov
mov
ss
cmpsl
andl
lds
pop
iret
mov
adc
jb
adc
pop
sti
add
imul
mov
aad
mov
adc
mov
mov
enter
test
gs
in
aaa
and
enter
xchg
divl
lds
cmpb
push
stos
ror
imulb
fsts
sub
fs
cmp
inc
pop
imul
test
inc
add
inc
es
aas
pop
jge
add
mov
sbb
gs
sub
mov
xor
jge
sbb
adc
mov
xor
jo
push
lock
shlb
pop
sbb
push
add
cli
xchg
add
and
outsb
loop
mov
jae
mov
sub
sub
pop
mov
sub
mov
xchg
popa
jo
int3
cs
loope
rcrl
mov
nop
shrl
int3
addr16
scas
adc
cmp
jle
lret
rol
idivb
mov
outsl
in
xor
xor
adc
loope
test
lock
daa
lahf
sub
and
xchg
andb
jae
popf
cmp
cld
xor
ljmp
das
mov
mov
out
sbb
icebp
jle
xor
jnp
jmp
dec
jo
sbb
inc
test
dec
mov
sbb
add
xor
push
jmp
jae
in
mov
mov
imul
mov
cmp
sbb
mov
sub
pop
fimuls
int
cmp
sbb
cli
push
mov
mov
xor
movlps
add
push
push
repz
sub
cmc
adc
aaa
xchg
sahf
cmp
xor
cltd
bound
movb
sbb
and
mov
hlt
adc
mov
dec
mov
cmpsb
add
nop
jecxz
leave
cmc
icebp
or
jae
push
mov
testb
mov
adc
pop
jge
sbb
icebp
inc
fsts
enter
sahf
add
mov
scas
push
sarb
jmp
popa
int3
incl
pop
and
or
jecxz
movsb
faddl
fwait
dec
mov
mov
faddl
out
mov
jge
int3
fwait
dec
sbb
mov
dec
movl
sub
jl
and
xchg
loopne
in
jb
push
pushf
adc
jnp
inc
push
aas
popa
pop
xor
pop
movsl
jae
int
inc
pop
enter
inc
flds
movsl
jns
mov
cmp
mov
lds
push
adc
mov
cltd
pop
lret
leave
scas
mov
or
repnz
into
aam
lcall
or
inc
pop
xchg
cmp
and
or
adc
popf
xchg
mov
rcrb
inc
cltd
push
jle
adc
mov
inc
and
xchg
aad
fdiv
popf
push
jmp
movsb
xchg
scas
rol
fsubrs
jl
push
jge
cli
enter
aaa
sub
cmpb
repz
out
push
sarl
mov
adc
mov
loop
push
add
movsb
daa
insl
jb
sbbb
lea
insl
mov
test
adc
mov
cmp
cmpsl
pop
bsf
fwait
adc
ljmp
pop
fabs
loope
clc
adc
xor
pop
xchg
inc
vpmovsxbq
test
lea
in
inc
dec
adc
adc
or
sub
xor
dec
ja
mov
stos
mov
mov
sbb
jo
in
add
sti
pop
or
push
ret
pop
mov
xor
jle
sub
repz
cld
cmpsl
push
inc
mov
pop
add
sbb
loopne
inc
jg
in
fsubl
leave
ja
aas
dec
fiadds
fwait
int3
sub
adc
jp
mov
push
lds
xchg
shl
dec
pusha
mov
adc
out
ljmp
popa
xchg
pop
lods
jnp
mov
popa
mov
pop
xor
lock
sbb
lret
jp
xchg
orl
mov
jg
push
fwait
mov
dec
out
cmc
sahf
mov
or
clc
stos
in
ret
mov
aaa
and
mov
adc
or
cmpsb
sbb
mov
push
cmp
cmp
push
pop
out
push
adcl
fwait
ret
nop
sbb
mov
xchg
cmp
push
jno
xor
push
push
mov
cmp
push
mov
pop
scas
out
xor
push
insb
sarl
dec
mov
pop
cmpsb
push
stos
push
jp
or
push
dec
cmp
jae
push
cmpb
fcomp
jp
imul
sbb
mov
cwtl
test
pusha
cs
in
rol
mov
pusha
sqrtps
insl
fsubp
add
decl
push
mov
inc
jmp
loop
cltd
mov
and
xor
jns
adc
in
lret
hlt
add
lret
mov
xlat
jns
mov
push
cmpsb
push
mov
or
mov
xchg
movsb
adc
adc
fldt
xor
xchg
stos
or
fnsave
int3
mov
cmp
pop
fcmovne
roll
fistps
in
aas
mov
or
adc
leave
sub
mov
aad
sbb
enter
das
push
ret
leave
dec
sbb
fcmovnbe
daa
dec
jns
jecxz
push
pop
push
popa
ficompl
mov
rclb
hlt
push
loop
push
inc
pushf
add
and
xchg
cli
add
and
mov
push
pop
adc
out
and
cmovl
add
fcoms
push
mov
pop
dec
push
jg
and
in
xchg
iret
cwtl
mov
cmp
into
mov
mov
push
push
iret
pop
sub
ret
mov
scas
push
aas
xor
jg
inc
mov
stc
js
and
ja
and
decb
xchg
jns
pop
dec
jmp
push
mov
and
xchg
stc
mov
les
and
lcall
popa
mov
rorl
dec
in
daa
lcall
js
xor
sti
in
repnz
ds
aad
in
pop
lock
or
sub
pop
and
xchg
cltd
dec
mov
jge
mov
dec
das
and
loopne
loope
int
aas
imul
sbb
mov
jae
ja
mov
cs
aas
xchg
cmpps
les
scas
and
divb
xchg
and
cli
std
pop
movsl
pop
lds
ja
movsb
loope
je
xchg
rcrl
pop
pushf
inc
fildll
xchg
mov
in
js
pop
out
push
and
ljmp
mov
cltd
inc
mov
mov
jle
test
mov
pop
ds
jl
arpl
adc
stos
xor
stos
pop
nop
mov
fstps
fildl
mov
repz
and
xor
fstps
orb
dec
sub
xlat
out
sbbl
push
ljmp
daa
sub
shrl
cmp
leave
imul
jns
jnp
arpl
adc
scas
jp
rolb
sub
xchg
jo
sub
shll
popa
jmp
in
test
pop
jae
int
lret
cltd
in
movl
pushf
je
push
ret
and
lret
xlat
outsl
jmp
mov
es
and
pushf
fs
pushf
pop
fidivrs
mov
sarl
sbb
pop
ret
mov
enter
mov
jnp
popf
mov
ficoms
rol
pop
dec
mov
pop
mov
movsl
aam
pusha
cli
cs
sbb
push
jae
repz
cmp
shlb
bound
lcall
sbb
add
mov
leave
hlt
or
xor
pop
test
testb
fdivs
jb
jo
in
add
xchg
subb
mov
mov
xchg
rcll
sub
mov
mov
and
int
mov
pushf
xchg
clc
sub
jne
xor
arpl
mov
rcrb
ret
pop
daa
mov
mov
and
and
push
push
add
jno
fmull
rcll
outsl
add
mov
or
scas
xor
inc
adc
inc
test
in
mov
sbb
jmp
sti
adc
stc
sub
and
int
dec
cmp
inc
lret
hlt
idivb
or
shr
cmpsl
jb
dec
inc
jl
mov
and
mov
rorl
fsubrl
fwait
ret
or
jge
xor
addr16
fisubl
pop
out
shll
xchg
push
add
or
test
add
lods
repnz
cmpsl
imul
fs
outsb
mov
out
push
sub
outsb
repz
movsl
add
in
mov
stos
jae
cmpsb
inc
lock
pop
push
imul
mov
insl
fnstsw
xchg
jmp
adc
xor
jecxz
dec
das
shrb
sub
mov
cltd
int3
clc
xchg
xchg
jg
and
fists
pop
fiadds
lahf
cmp
mov
push
addr16
mov
and
dec
inc
fiaddl
mov
jp
leave
les
test
adc
loopne
lahf
mov
sub
jmp
cmp
dec
std
cld
adc
mov
sbb
scas
dec
dec
xor
lret
in
outsb
orl
ja
jp
pushf
js
mov
es
imul
shrb
pusha
insb
aad
loopne
jg
shl
addl
and
push
arpl
repnz
fldcw
jb
pop
cmp
shr
loopne
in
mov
dec
jnp
ja
push
sub
push
inc
mov
sub
mov
stc
adc
or
add
push
xchg
mov
cld
sub
jb
pop
daa
enter
mov
push
into
sub
ljmp
fstpl
mov
filds
fsubrl
xchg
arpl
mov
pop
std
cltd
addl
in
or
mov
inc
mov
test
jl
into
and
lock
rorb
aaa
xchg
scas
and
imul
aas
mov
inc
ja
dec
jp
js
ja
adc
flds
lahf
mov
test
bnd
xor
loope
xchg
or
test
pop
test
aam
mov
pop
adc
std
mov
sbb
inc
stc
std
js
xchg
loop
add
fwait
hlt
movsl
bswap
stos
lea
mov
ljmp
popa
and
addr16
lods
cmpsl
cmp
loopne
jne
lret
sbb
adc
cmp
or
andl
mov
inc
aad
cmpsb
and
lea
sbb
lock
cmp
stc
add
mov
lock
shll
insb
xor
add
cmp
popf
arpl
pop
in
in
lahf
mov
cmp
call
xchg
jle
fistpll
ja
scas
ret
xchg
les
xchg
xchg
cmpsb
jno
jecxz
out
out
xchg
push
xchg
mov
pop
sub
jecxz
fwait
inc
in
pop
or
icebp
push
repnz
mov
push
jnp
inc
xor
jp
push
jno
jb
scas
jp
xchg
sub
mov
fadd
mov
xorl
inc
push
inc
dec
nop
imul
inc
pop
mov
rolb
adc
mov
xor
es
pop
mov
push
loope
inc
jne
xchg
add
repnz
in
mov
fstl
jae
ja
jnp
push
mulb
stos
lret
fisttpll
ja
daa
jmp
dec
push
mov
in
cwtl
xchg
pop
sbb
popf
fs
sbb
clc
lret
jp
push
es
movb
xchg
mov
mov
pop
lods
pop
mov
or
xor
mov
clc
je
fiaddl
pop
aaa
mov
jae
dec
and
es
sub
jb
rorb
les
out
mov
push
rcrb
mov
roll
sbb
sbb
inc
mov
clc
lea
inc
das
dec
cld
xor
aaa
mov
mov
in
mov
out
lods
stc
repnz
mov
fs
fbld
mov
out
xchg
dec
dec
out
mov
adc
mov
sub
mov
jns
mov
add
fldenv
nop
push
push
push
fldt
sbb
mov
cmp
push
mov
es
fxch
lods
test
cmp
and
pop
jmp
lods
mov
in
clc
insb
pop
pop
outsb
xor
inc
jbe
in
mov
cmp
jns
xor
sbb
cli
scas
cmpsb
test
xor
int
push
and
orl
pusha
and
lds
pop
add
scas
pop
test
xor
shlb
imul
cli
out
ss
hlt
mov
jg
and
arpl
out
or
mov
pop
inc
imul
mov
fidivrl
cmp
enter
test
mov
ljmp
dec
jne
shrl
or
xor
mov
out
pop
test
pop
stos
loopne
hlt
xor
mov
or
jbe
mov
and
mov
fstpt
cmpsb
jge,pn
push
outsl
or
or
stc
mov
ja
inc
mov
scas
fdivp
cmp
popf
inc
jae
xor
xchg
adc
mov
mov
and
push
pop
pop
cmp
roll
push
in
loop
pop
into
pop
mov
sub
xor
in
adc
or
repz
xchg
mov
push
xchg
rcrb
mov
ficompl
push
push
cmpsb
push
mov
push
mov
mov
inc
outsb
push
push
out
test
mov
int
jo
mov
decl
xor
fadds
and
pop
and
pop
add
out
call
cwtl
scas
scas
inc
aaa
arpl
pop
mov
out
dec
rol
mov
inc
mov
xor
ja
xor
mov
fwait
sti
fiaddl
jbe
les
aas
pop
cld
movl
dec
adc
sub
rorl
push
cmp
mov
mov
sub
ss
push
aaa
int3
in
out
out
pop
lahf
fbstp
les
push
data16
cmpsb
and
xor
fldl
sub
push
nop
adc
test
mov
insb
mov
dec
lcall
sbb
xor
shrl
mov
rolb
sbb
cmp
faddl
leave
fisubl
lods
in
adc
out
xor
into
and
jae
cwtl
mov
xchg
enter
test
cmp
add
adc
push
mov
xchg
psrad
or
ficoml
mov
lret
mov
movsb
sbb
mov
iret
push
idivb
enter
add
addl
das
pop
mov
cltd
or
clc
cmc
jno
or
mov
pop
mov
adc
jo
or
rorb
cmp
push
adc
jne
dec
add
and
aaa
cmp
fiadds
push
inc
aam
mov
adc
je
dec
push
lods
das
outsl
mov
lock
scas
and
cmp
or
mov
movsl
fstpt
popa
aad
cmp
ljmp
mov
out
pop
lcall
and
cmp
inc
cmc
xchg
jge
aaa
mov
and
and
mov
out
sub
mov
movsl
add
cmpsl
dec
adc
ret
sbb
test
pop
cmpl
icebp
jns
inc
xor
lds
andb
push
push
and
sbbb
add
pop
xchg
inc
pop
mov
mov
cmp
push
push
push
mov
rclb
lods
push
xor
sub
into
shrl
mov
inc
notb
frstor
dec
out
jbe
sahf
flds
popf
lock
ja
pushf
fwait
add
into
add
outsb
mov
dec
mov
or
adc
cli
lcall
mov
push
jbe
repz
push
add
in
in
das
outsl
fcomps
push
out
lahf
dec
pop
mov
sub
jne
test
imul
jb
ret
mov
lds
xorb
mov
aam
cmp
cmp
sub
test
or
lcall
sbbl
cmp
in
vprotd
enter
mov
sub
rcl
rorb
movaps
adc
and
out
mov
push
add
or
stc
xchg
fs
mov
jne
inc
cmp
mov
jo
icebp
pop
lret
test
fs
shlb
rorb
aas
sub
lret
push
mull
testl
and
insb
and
in
adc
jae
push
popf
aas
lods
dec
divb
fldt
addb
hlt
ds
push
stos
push
aaa
or
mov
lahf
pop
add
xchg
pop
jmp
dec
sti
lret
sbb
inc
jae
and
sub
dec
mov
addr16
insl
int3
push
xorb
stos
test
xchg
in
xchg
jbe
or
pop
pop
insl
stos
xchg
pop
shrl
dec
dec
push
dec
inc
xchg
loope
xor
cmc
mov
cmpsl
das
inc
and
or
pop
jo
jl
adcb
push
add
xlat
inc
roll
gs
push
fcompp
sbb
jmp
sbb
mov
xchg
sarb
ds
mov
cs
sub
adc
fsubl
xor
mov
adc
out
dec
push
mov
cmp
popa
in
or
scas
into
and
nop
in
xor
insl
mov
or
ja
sti
lds
mov
arpl
dec
lods
nop
rcrl
and
xor
pop
int3
add
mov
push
adc
sub
shl
aaa
fucomp
xor
int3
mov
mov
xchg
jbe
xchg
mov
adc
inc
aam
test
cmp
enter
push
mov
xor
mov
inc
div
pop
pop
inc
push
testb
jno
push
mov
imul
sbb
sub
add
scas
inc
xrelease
enter
std
inc
mull
insl
xor
xchg
push
mov
aad
inc
cmp
mov
mov
xchg
icebp
fisttps
cmp
loope
add
imul
xor
ss
xor
cli
arpl
xor
mov
iret
bound
ret
inc
aam
imul
xor
sub
subl
jns
dec
jo
addr16
push
or
loop
test
cmp
xchg
mov
push
addr16
cs
fcom
sub
pop
into
les
pop
mov
pop
sub
mov
mov
enter
lds
mov
mov
clc
mov
mov
cmp
bound
clc
mov
movsl
ss
push
push
xchg
sahf
sub
mov
mov
rorb
cmp
or
inc
xlat
mov
ja
in
inc
xor
sahf
jecxz
jmp
ljmp
divl
js
test
out
cmp
arpl
inc
or
push
and
mov
add
mov
dec
jle
push
push
jmp
repz
and
fiaddl
mov
int3
add
movsl
enter
lea
inc
and
or
inc
adc
xchg
aam
dec
daa
outsb
sbb
clc
and
lret
repnz
lods
stos
lret
dec
pop
mov
lods
mov
lds
jmp
fbstp
sub
std
pushf
xchg
dec
arpl
outsb
pop
pop
dec
das
xor
adc
out
inc
test
pop
orl
pop
jl
loopne
sbb
orb
imul
sarl
cmpxchg
xlat
jno
fmuls
inc
pop
add
test
jnp
or
jmp
aam
ret
imul
fucomip
jnp
cmc
popf
jmp
outsl
mov
shll
cmp
and
mov
sub
subb
pop
and
es
push
sbb
sbb
mov
dec
mov
xchg
xchg
and
add
or
aas
add
pop
imul
add
and
sbb
fwait
in
fisubs
inc
cmp
sub
mov
das
popf
cmp
push
jg
roll
repz
shlb
pop
fnstsw
add
add
stos
mov
das
icebp
mov
pop
mov
push
and
jnp
lods
leave
into
pop
sarl
xchg
xor
and
mov
mov
inc
mov
aad
adc
fildll
idivb
cld
call
fwait
jp
lcall
aad
out
aam
outsl
out
shl
jae
sbb
test
insl
pop
loopne
jbe
mov
roll
sbbl
jecxz
in
cwtl
dec
xchg
outsl
ret
or
mov
lea
psubusw
decl
xchg
push
pop
or
ret
std
and
insb
xchg
cmpsb
dec
int
inc
in
fcom
and
outsb
imul
sbb
pop
and
xchg
movl
aam
fdivrs
dec
imul
lds
je
mov
add
std
add
cltd
lret
std
sbbl
iret
iret
sbbl
inc
rcrb
out
xchg
add
jb
and
ds
loopne
dec
cmpsb
push
push
movsb
pop
in
push
xchg
dec
inc
mov
sbb
cwtl
shrl
mov
pop
outsl
xor
xor
iret
hlt
mov
inc
addr16
popa
or
jne
sbbl
jns
fcomip
int
insb
add
or
bound
imul
or
negl
xor
sbb
fldl
ljmp
push
jb
jns
in
nop
insl
xor
adc
roll
test
jge
push
pop
jns
idiv
test
dec
pop
fstp
lcall
fstp
lret
mov
ret
xor
imull
cmpsl
inc
pusha
stos
push
sbb
pop
push
fstpt
in
and
and
jno
mov
jb
icebp
insb
push
mov
ret
xlat
mov
test
fwait
jo
ja
xchg
dec
leave
ret
pop
mov
adc
movsl
jp
pop
out
dec
add
stc
roll
outsb
fidivrl
sbb
or
sub
sub
call
clc
in
mov
lock
inc
insl
fsts
insl
jle
adc
stos
test
pop
scas
stc
xchg
or
insb
xlat
jne
cmp
inc
popa
in
shrl
sahf
mov
call
jns
fwait
xchg
int3
mov
shrb
and
jae
rcll
sub
pop
fisttpll
xor
add
iret
repnz
inc
repnz
xchg
mov
jnp
das
mov
inc
dec
adc
mov
inc
cmp
or
cmp
arpl
leave
mov
mov
int3
in
pop
or
cli
sub
mov
out
cwtl
scas
push
xchg
push
clc
lahf
xor
jecxz
adc
mov
pop
mov
jns
cwtl
cmp
xchg
in
jp
sbb
test
xchg
andl
jle
push
shlb
push
push
je
out
loope
mov
jle
scas
loope
or
jbe
fcmovu
pop
mov
sbb
fildll
mov
mov
ss
sbb
fidivrl
jecxz
scas
xor
xchg
pushf
lahf
xchg
mov
clc
push
mov
add
jb
clc
ret
xlat
add
mov
mov
jae
pop
and
lea
cli
fwait
test
jae
adc
xor
xor
fsubs
repnz
orb
cmc
stc
pop
xor
sahf
mov
sbb
lea
cltd
ljmp
test
inc
inc
and
mov
sbb
jle
cmp
add
mov
or
pop
ret
xor
popa
sub
and
iret
jl
lock
xor
adc
xor
mov
mov
sbb
jge
adc
test
int
and
pop
jnp
rorb
leave
data16
xor
jo
repz
call
cmova
inc
xor
sbb
xchg
popl
shrl
xchg
cli
push
fmull
pop
mov
adc
push
mov
cmp
icebp
push
dec
popf
sub
push
cmp
sbb
and
cmpsl
sub
xchg
dec
push
imul
outsl
std
fsts
addr16
mov
leave
jmp
and
xchg
scas
and
sub
mov
je
loopne
or
call
add
add
notl
sbb
fisttpl
aas
or
or
test
ret
mov
mov
adc
std
push
lock
jp
cmpsl
jp
jecxz
ds
fdivl
inc
push
cmpsb
inc
inc
xchg
stos
mov
push
add
pop
xorb
ret
add
add
mov
cwtl
lahf
cmp
inc
test
ficoml
aam
cmp
orb
das
sar
mov
testb
jnp
sbb
jl
jle
test
mov
dec
in
lods
inc
cmp
adc
jecxz
pop
loopne
icebp
imulb
xchg
sbb
outsb
pextrw
jae
div
insb
push
pusha
fildll
pushf
or
jne
popf
rcrl
cmc
jnp
stos
mov
ret
imul
mov
push
mov
sub
mov
mov
sti
cmp
fxrstor
in
jne
adc
loop,pt
pop
ret
pop
pop
mov
data16
int3
out
pop
roll
pop
out
and
dec
sahf
inc
outsb
loopne
cld
fs
prefetcht1
sub
aad
rcl
call
sub
jge
dec
jl
mov
gs
sub
js
int3
push
mov
aad
push
mov
push
ret
ret
or
add
mov
cmp
std
cmc
sbbl
or
aad
jae
push
xchg
xchg
mov
cmpsl
lahf
pop
test
pop
popa
mov
mov
je
lret
and
in
fwait
mov
pop
shlb
add
add
sub
add
mov
sbb
jle
ret
or
mov
inc
outsl
sub
push
or
jle
decl
mov
and
mov
ljmp
push
sub
xchg
data16
mov
mov
xor
cmp
clc
xchg
mov
inc
cmp
cld
iret
mov
fldenv
add
or
mov
jo
cmp
sub
loopne
out
mov
push
psrlq
cmp
xchg
subl
sub
hlt
hlt
jle
loope
dec
inc
fprem
sub
dec
das
decb
hlt
or
inc
insl
movsl
repnz
in
and
fs
out
movsb
inc
outsb
pop
add
test
xchg
clc
mov
and
iret
mov
mov
insb
rorb
orb
add
aas
and
out
lds
xlat
cwtl
mov
mov
ret
jecxz
inc
pusha
xchg
pop
lods
sahf
xchg
lock
ja
icebp
cmp
in
mov
ja
int3
out
pushf
sarl
in
repz
scas
jnp
ljmp
das
cli
sub
pop
test
fs
mov
stos
mov
jmp
outsl
imull
mov
iret
mov
adc
mov
cmp
adc
addr16
int3
dec
mov
xlat
or
xchg
shll
add
mov
jo
push
testb
xlat
jp
lret
sbb
lods
mov
cmp
mov
mov
pusha
test
shrl
xchg
je
in
sbb
push
mov
call
pushf
fstpt
pusha
mov
out
mov
xor
out
xchg
jl
adc
loop
xchg
icebp
mov
pusha
pop
push
cmp
xchg
sbb
adc
cmc
push
das
jp
sti
cmp
lea
adcl
push
jnp
xor
or
mov
jl
lea
mov
cmp
or
cmp
sarb
jmp
dec
mov
repnz
cmp
push
cmp
mov
sub
popa
and
inc
fistpll
cmp
push
outsl
sub
mov
pop
pop
pusha
mov
pushf
inc
cmp
pop
mov
mov
push
sbb
cwtl
aaa
leave
sub
sbb
cmp
aam
sar
push
call
cmp
sbb
int3
xchg
mov
xchg
add
and
mov
jle
in
push
nop
and
inc
xor
fists
cmp
mov
dec
and
pop
lea
mov
pop
stc
ds
je
xchg
jmp
add
sub
jns
imul
ficompl
sub
mov
dec
hlt
pop
xchg
mov
icebp
jmp
lods
cli
sub
inc
daa
dec
imul
sub
faddl
ljmp
setl
notb
lock
cmp
pop
pushf
jmp
xchg
sbbl
test
lahf
nop
repz
jb
xor
mov
jecxz
push
pusha
jmp
adc
add
inc
push
add
lds
cmp
xlat
pop
or
pushw
sbb
mov
aam
jb
sahf
movsl
mov
pop
cmp
jo
sbb
xlat
sbb
ss
bound
test
mov
jge
jae
dec
jecxz
insb
and
movsb
test
sub
nop
sub
jl
and
aad
in
fnsave
add
stc
das
mov
cltd
dec
cmpsb
mov
mov
fimull
inc
xlat
add
movsb
mov
jno
xchg
outsl
jp
cmp
shlb
lock
xchg
jbe
and
push
movsl
out
cli
sub
aam
cmp
addr16
shlb
push
imul
push
lods
ret
cmp
push
xchg
ljmp
lret
inc
adc
scas
clc
cmp
mov
or
jmp
mov
or
jecxz
leave
sbb
sbb
inc
sub
mov
inc
in
sub
pop
and
inc
imul
mov
cmc
inc
aam
pop
lods
jne
xor
enter
stos
into
addr16
cli
sub
jge
push
shll
mov
mov
fcoml
dec
lret
enter
gs
aas
insl
cmpsb
pop
mov
mov
mov
xor
mov
inc
inc
push
aam
pushf
and
xor
arpl
mov
loope
jbe
push
xor
jmp
daa
pop
and
xor
icebp
cmp
mov
hlt
pop
leave
sub
mov
jmp
pop
inc
loop
lret
mov
ficoml
push
adc
sub
dec
inc
cld
xchg
aas
and
mov
and
xor
fstpt
lcall
jno
xor
push
in
sub
std
repnz
push
fcmovbe
call
movsb
mov
int3
stos
loopne
mov
shrl
mov
daa
popa
inc
mov
repnz
pop
into
mov
repz
mov
jmp
sub
leave
mov
test
outsl
mov
mov
inc
xor
dec
iret
ficompl
sbb
mov
shrl
aas
lret
daa
or
xchg
push
cli
jnp
test
cmp
cltd
repz
and
leave
xchg
sbb
lock
lcall
imul
mov
pop
leave
iret
mov
mov
cs
and
pop
out
not
into
test
and
push
or
or
jb
push
lds
das
jns
aad
imul
int
jmp
add
ja
aad
jl
negl
inc
or
push
mov
sbb
outsl
sub
add
test
inc
addl
mov
or
mov
cmp
push
lods
lods
mov
popa
add
cmp
cmp
fmull
push
add
xchg
ja
lahf
fiadds
sbb
icebp
ret
xlat
dec
mov
cmpb
inc
pop
inc
shlb
inc
and
mov
pop
lods
sub
scas
fs
aas
cmp
inc
dec
rclb
dec
add
inc
pusha
xchg
cld
xor
nop
rcll
jbe
pop
arpl
mov
cmp
addr16
cmp
lea
jmp
or
jae
jbe
push
dec
fsubl
mov
xchg
imul
pop
bound
ljmp
jb
inc
out
cmpsb
cld
jp
xchg
stos
cld
mov
js
mov
bound
pop
in
inc
jp
xor
shll
and
gs
notb
xchg
xchg
mov
fscale
xchg
daa
inc
ds
jl
imul
xchg
xchg
int
daa
push
push
or
aas
inc
fsubrp
ds
insl
push
push
mov
repz
mov
ss
cmp
cmpsl
mov
test
or
fstl
mov
xchg
jae
dec
stos
push
sbb
cltd
sti
outsl
fisttps
sar
out
ret
dec
mov
inc
insl
jp
cmpsl
out
repnz
inc
or
loop
xchg
pop
out
adc
lret
push
push
pop
push
out
int
mov
cmp
filds
lods
aam
xchg
cmp
push
ss
mov
sbb
fstpl
rorb
mov
cmpsb
mov
mov
xchg
aaa
bnd
ficoms
repnz
or
iret
lods
mov
cmp
ljmp
addr16
scas
fstps
add
and
push
mov
mov
xor
std
cld
sbb
xlat
adc
out
out
inc
mov
cmp
push
mov
add
test
sbbl
lock
cltd
js
int
jae
pop
adc
xor
adc
mov
jle
arpl
xor
ficomps
and
mov
sarb
sahf
sub
divb
or
ret
call
loop
cmp
lcall
inc
or
adc
mov
int
jae
or
fimull
push
in
rcll
int
mov
jmp
int3
movsl
lahf
dec
rclb
pop
cmp
jbe
sub
cs
mov
xchg
js
clc
sbb
dec
mov
nop
test
mov
pop
push
add
jo
rcrl
sbb
andl
sbb
pop
outsl
or
mov
dec
dec
inc
out
inc
sub
js
pop
jecxz
ljmp
aaa
lods
pop
rcrl
lret
pop
aad
cmp
xchg
in
or
xchg
out
mov
test
sbb
test
sarb
sbb
movsl
loopne
mov
mov
xor
call
xchg
xlat
sti
xor
arpl
inc
mov
ret
in
fimuls
or
mov
or
cmc
adc
outsl
fbld
ljmp
add
jmp
scas
push
cmp
and
xor
aas
rclb
leave
pop
lahf
jg
or
jno
addb
pop
push
fwait
xor
mov
es
outsb
adc
and
hlt
cmc
jg
hlt
es
jmp
mov
mov
jne
add
fadd
sbb
daa
xor
mov
loope
or
call
push
pop
js
or
idivb
mov
jnp
mov
aaa
add
aas
nop
es
scas
bound
cmp
lcall
sub
or
in
repnz
adcl
sbb
and
scas
sbb
shl
leave
leave
into
cmpsb
sbb
or
cltd
push
es
cwtl
shrl
int3
or
clc
sub
fwait
and
arpl
andl
shll
mov
cmpl
adc
gs
ds
test
push
cmp
rcr
push
cmp
dec
and
mov
xor
jbe
inc
loopne
lods
add
popf
and
fstpl
loope
sub
js
out
pop
adc
sahf
movsl
popa
stos
xchg
lock
in
dec
sub
dec
pop
xor
mov
movsl
int
in
and
fstpl
and
mov
mov
insl
pop
xchg
pop
pushw
xor
mov
cmp
icebp
adc
out
dec
pop
or
lret
es
xchg
pop
pushf
aam
lahf
ds
mov
jmp
mov
push
cmp
mov
arpl
movsl
test
cmpsb
push
popf
push
fsubr
rolb
bsr
out
push
rcl
push
faddl
and
sahf
pop
adc
daa
xchg
jno
pop
test
xchg
mulb
mov
jne
push
inc
sub
or
push
out
jmp
and
push
int3
les
mov
jp
fiaddl
out
dec
push
sar
iret
push
mov
imul
xchg
push
cmp
dec
enter
push
in
ror
f2xm1
mov
sbb
fstpl
fisttpll
mov
push
cmp
or
fdivl
setae
jle
repz
xchg
sub
jb
cmpsb
out
push
in
in
mov
lret
jecxz
mov
cli
xchg
add
jecxz
add
sahf
push
xchg
adcb
xor
jbe
fisubl
enter
cli
clc
fcomps
dec
sbbb
mov
pop
dec
jns
in
mov
repnz
lea
xor
jmp
mov
sti
data16
or
pop
inc
icebp
lret
iret
inc
fwait
jns
sahf
sbb
dec
inc
mov
daa
lds
jmp
inc
xchg
jo
sub
lret
imul
hlt
movsb
mov
orb
push
sub
mov
xchg
or
push
cmp
xlat
lea
fcomps
mov
data16
fisubl
stos
shrb
fldl
fnsave
push
pop
and
sbb
mov
sti
or
insb
cmp
into
jmp
fildl
inc
push
arpl
cwtl
jno
pop
shll
xchg
pop
cmpsb
jae
and
mov
cmp
std
cmpsb
push
and
jmp
popa
je
jecxz
cmp
rcl
in
sahf
daa
inc
mov
js
cwtl
orb
xchg
in
xor
dec
popa
mov
inc
in
inc
loope
jecxz
inc
cmovb
adc
pushf
or
mov
cwtl
inc
sub
les
in
sub
jle
sbb
push
fidivl
mov
pop
in
insl
mov
rorb
call
in
lret
and
inc
es
sbb
aam
out
mov
roll
in
and
cmp
outsl
dec
and
sub
jnp
rclb
clc
das
fistpl
lcall
mov
cmp
xlat
or
add
insl
scas
movsl
arpl
add
and
jmp
lret
add
iret
mov
test
push
ja
das
xor
jecxz
cmp
scas
sbb
js
mov
add
jne
stos
dec
sahf
mov
sarl
aam
sub
pop
call
insb
sub
push
add
push
mov
pop
clc
xchg
xor
imul
add
xchg
test
cmpsl
cmp
addl
dec
xor
cwtl
mov
inc
repnz
pop
out
push
movsb
ljmp
mov
adc
in
pop
cld
in
shlb
stc
hlt
mov
xchg
lret
mov
scas
jb
stc
jo
mov
mov
inc
xor
xor
jno
xor
and
jmp
ja
and
mov
lods
repnz
xor
out
aaa
jp
jl
loope
les
sti
pop
dec
shll
and
mov
js
mov
push
imul
insb
adc
jl
popl
scas
or
sbb
out
lahf
cmp
sbb
adc
pop
dec
movsb
mov
ja
jecxz
dec
shlb
fimuls
stos
inc
push
fdivrs
iret
faddl
rcrl
push
mov
cltd
or
xchg
daa
add
lods
movsb
sbb
jb
dec
outsb
sub
adc
push
push
gs
inc
fistpll
pusha
out
jne
sbb
xchg
jl
adc
push
insb
subb
pop
out
xchg
pop
lret
pop
outsb
mov
or
jb
ret
and
adc
mov
cltd
lret
lcall
jae
int3
sub
xchg
fnsave
mov
aas
pop
xacquire
jmp
xchg
and
dec
mov
mov
call
andb
mov
mov
cmp
mov
movsb
mov
or
inc
mov
add
adc
sbb
cmc
dec
es
loop
in
movsb
sbb
int3
adc
pop
cmp
stos
fbld
xor
sub
mov
rcrb
repz
mov
vandnpd
sub
je
push
shl
dec
shl
cmp
aas
insl
cltd
sbb
lea
cltd
mov
mov
lea
push
xor
js
or
xchg
mov
rol
xor
icebp
testl
psrld
and
pop
dec
ret
mov
lahf
or
mov
jmp
stos
sbb
sbb
leave
dec
les
movl
jbe
mov
xchg
out
inc
mov
dec
je
sub
jl
imul
xchg
pop
scas
push
inc
enter
cmp
gs
popf
orl
push
xchg
cld
or
pop
mov
dec
xor
mov
mov
jnp
mov
fldl2e
imul
mov
ret
stc
shr
pop
mov
sbb
leave
dec
inc
iret
adc
dec
xor
jno
cmp
lret
push
xchg
mov
aas
std
out
cmpsb
mov
push
cs
lea
mov
jae
cmp
sbb
mov
xchg
mov
inc
fcomp
stos
fildll
dec
xchg
jecxz
push
jne
cltd
xor
mov
dec
push
dec
lret
imul
push
ficompl
ret
xchg
mov
dec
jp
bound
enter
add
cmp
stc
scas
lcall
xchg
mov
jp
and
sahf
jecxz
add
cmp
jmp
in
inc
sbb
adc
dec
lret
cmpsl
lret
jmp
ljmp
sub
xor
pop
mov
or
inc
outsl
pop
dec
jle
cmp
enter
and
pop
add
sbb
mov
lods
add
xchg
cli
sbb
js
xchg
je
cltd
test
rclb
mov
add
notb
mov
push
jge
and
mov
sbb
mull
mov
cltd
and
cmp
and
cli
stos
pop
sti
cltd
je
mov
xchg
ja
out
inc
faddl
out
mov
es
adc
sbb
fimuls
jp
repnz
push
push
cmp
sbb
push
mov
xchg
adc
pop
cltd
push
mov
cmp
or
ja
and
lret
sbb
addr16
and
jle
mov
mov
dec
enter
fs
in
test
mull
movsb
push
jl
mov
lcall
mov
movsb
cmp
dec
cld
sub
movsb
xlat
adc
rorl
ljmp
dec
sti
loopne
int
cmp
mov
cmp
push
fists
xor
icebp
add
inc
outsb
test
adc
mov
pop
stos
jno
jg
mov
ss
popa
lea
loop
jae
mov
xor
test
adc
inc
imul
insl
ret
xorb
loope
lea
pop
xchg
out
movsl
cs
sbb
repnz
or
xor
movsb
or
sahf
xchg
sbb
mov
flds
sahf
and
fnsave
xchg
push
std
mov
incl
mov
pop
cmpsl
mov
adc
or
push
xlat
insl
adc
sbb
iret
mov
stc
cmp
dec
iret
jnp
mov
mov
and
fucom
adc
jns
fstps
fwait
popa
inc
test
jg
xor
jnp
mov
test
cwtl
push
sbb
dec
jecxz
test
xchg
stos
orb
orb
mov
jecxz
push
add
dec
repnz
add
inc
mov
stos
mov
jmp
aaa
mov
leave
pop
xor
jg
mov
lock
adc
clc
mov
add
xchg
leave
decb
dec
xchg
jb
lahf
push
icebp
cmp
cmpsb
andl
pop
fiadds
loope
iret
adc
test
jmp
mov
and
dec
sbb
cwtl
out
mov
push
iret
sub
loopne
mov
xchg
jo
or
xor
test
jbe
and
sub
mov
adc
lock
jmp
fs
pushf
arpl
adc
insl
or
out
pop
add
sub
cmpsb
add
or
clc
mov
daa
daa
or
es
test
jp
dec
test
dec
lods
mov
rcll
xchg
cmp
mov
loopne
push
mov
test
ret
and
mov
mov
push
dec
push
fnstsw
mov
add
pop
mov
push
mov
call
push
adc
inc
out
mov
imul
dec
adc
adcl
mov
cmp
or
add
mov
sarb
daa
sub
cld
adc
jns
cmp
xor
push
inc
cwtl
and
outsb
pop
jle
mov
cmp
cli
fcomi
xchg
adc
movsl
mov
and
inc
cmc
pop
mov
mov
call
mov
and
fdivrl
xchg
jg
out
sub
lret
lock
shll
sahf
lcall
mov
sarb
push
jle
xor
icebp
cltd
xchg
push
inc
outsl
lret
push
mov
gs
test
sub
daa
sti
lock
cwtl
pop
fucomp
fldcw
xor
push
pop
adc
cmp
mov
popa
shrb
scas
pop
ret
adc
xchg
fdivl
jle
sbb
cmp
pop
pop
jne
xor
int3
popf
xchg
ds
or
cmp
outsl
dec
inc
lods
inc
bswap
inc
inc
dec
rcrl
movsl
push
sahf
sub
les
cltd
stc
jmp
fadds
adc
mov
ret
ficoms
xchg
aaa
lcall
popf
xchg
mov
inc
scas
xchg
daa
std
lods
cmp
stos
add
aad
lods
xor
hlt
sarl
fldt
enter
adc
adc
movsl
cmp
loopne
data16
sbb
xor
rcr
push
push
gs
push
jmp
nop
inc
push
int
scas
jb
cs
shl
mov
pop
ja
negb
sti
call
xor
enter
fsub
roll
lcall
sti
mov
jbe,pn
push
pop
test
popf
test
hlt
add
imul
dec
out
jns
dec
arpl
xlat
jbe
pop
pop
mov
mov
adc
push
data16
sbb
sbb
lret
out
adc
sub
dec
adc
xchg
mov
lret
sbb
push
add
mov
xor
stos
out
mov
icebp
xor
rclb
andb
adcb
cmp
mov
or
dec
fiadds
dec
int3
imul
lods
adc
fsubs
mov
sub
or
jne
scas
leave
pop
cmp
xchg
dec
and
into
out
js
test
icebp
push
adc
push
or
mov
int3
and
sbb
pop
lock
push
idiv
xor
bound
push
mov
adc
inc
pop
adc
pop
inc
mov
repz
jle
cmp
dec
clc
cmpsb
inc
mov
hlt
fcoml
scas
mov
and
shl
push
aaa
mov
loop
push
je
or
in
xor
out
and
adc
mov
icebp
int
inc
pop
or
mov
add
test
fiaddl
adc
addr16
mov
jmp
lcall
xor
push
rclb
aas
sbb
scas
mov
std
ficompl
pushf
sbb
mov
lcall
jecxz
cmp
cli
add
dec
mov
mov
mov
stc
mov
mov
popf
test
fsubr
sub
adc
pushf
and
pop
jmp
sub
mov
fldt
jmp
jbe
outsl
mov
push
sahf
je
hlt
dec
lret
test
inc
std
pop
dec
cmpb
adc
movsb
pushf
scas
xchg
popa
jge
lea
jg
jno
pop
shlb
fcmovne
pop
and
shrb
in
xchg
stos
xchg
pop
test
call
push
xor
inc
fldenv
scas
hlt
pop
adcb
dec
sbb
jae
lahf
sbb
sub
add
xor
rcl
iret
out
jbe
icebp
roll
sbb
test
adc
inc
into
stos
nop
push
mov
mov
cmp
bound
fadds
jge
add
push
cmpsb
rclb
pusha
xchg
stos
jbe
mov
repnz
cmp
sub
in
add
lret
pop
rolb
xorb
test
push
fnstenv
or
enter
pop
mov
push
test
into
mov
dec
or
jne
pop
inc
push
dec
xchg
cmc
dec
lods
xchg
push
mov
xlat
jns
sbb
shr
jne
pop
mov
mov
movsl
fldcw
in
in
pop
andb
sbb
movsb
mov
aas
mov
in
add
dec
movsl
xor
pop
rol
mov
sti
sbb
jne
inc
idiv
xchg
pushf
stc
dec
jmp
les
lods
cmpsb
shll
dec
jno
jne
push
sub
push
outsb
adc
dec
pop
and
inc
loope
jno
xor
test
fmull
dec
roll
xchg
shr
ja
xchg
rorb
in
fstpt
cmp
push
popf
enter
into
pop
and
jmp
mov
sub
or
shll
mov
inc
xor
mov
stc
xor
push
ficoml
in
ljmp
int3
xchg
test
ljmp
pop
xor
sub
push
add
cmp
dec
cltd
cwtl
aaa
loopne
adc
pop
inc
outsl
cmp
mov
imul
xor
cli
add
incb
mov
sbb
cmp
mov
add
mov
inc
add
adcb
les
ljmp
inc
cli
fcmovb
cltd
frstor
leave
stos
and
imul
stos
movsb
ret
fwait
mov
sub
fs
xchg
loope
int
or
test
call
mov
ret
int
sbb
stos
mov
and
lahf
movsl
adc
ss
xlat
js
sbb
ljmp
xor
pop
mov
lods
cmpsl
in
sub
xchg
xor
xchg
or
xor
jbe
daa
dec
das
cltd
shll
rclb
test
outsl
pop
int3
fnsave
sub
mov
mov
addr16
xor
lea
or
dec
dec
and
pop
adc
push
jns
xchg
test
aaa
loopne
inc
data16
iret
enter
pop
inc
imul
pusha
jne
cmp
inc
jbe
roll
adc
dec
fistl
sbb
adc
dec
mov
mov
xor
xchg
xor
sbb
dec
ret
pop
mov
cmpsb
lcall
mov
pop
lds
fadds
or
dec
rcrl
arpl
cmp
and
push
negb
arpl
jecxz
mov
lea
pop
or
mov
cmp
cmp
cld
fstl
fcoms
cld
xchg
les
imul
jb
xchg
pop
aam
pop
add
fst
mov
jg
pop
or
mov
xor
xor
push
xchg
push
mov
mov
xor
sbb
sub
outsl
pop
mov
sbb
sbb
cmp
push
mov
iret
and
mov
clc
adc
clc
pop
rcl
dec
imul
sub
pop
je
pop
lahf
lods
fs
sub
or
mov
repz
sbb
lock
mov
mov
pop
lahf
stos
outsl
cmp
lahf
mov
cmpsl
sbb
call
sbb
push
cwtl
xchg
aaa
hlt
xor
sbb
cmp
cli
xor
xor
xor
filds
mov
push
jns
sub
daa
int
jmp
call
aas
mov
ret
rorl
or
adc
loopne
cwtl
cmovns
sarl
insl
push
ss
push
dec
aas
aaa
rcr
shll
mov
dec
push
cmp
out
sbb
and
push
cmp
int
fs
jo
gs
mov
lcall
xor
jp
mov
pop
cli
insb
in
jnp
lret
and
mov
cmp
inc
jne
or
test
rcr
xor
mov
push
adc
mov
pop
and
test
pop
lret
stc
stos
aas
shrb
dec
xchg
aas
inc
fwait
pop
xchg
sub
daa
data16
fbstp
xor
hlt
pushf
in
clc
mov
cli
sar
push
cmc
mov
lcall
push
fisubrs
ret
imul
leave
jb
sarl
fisubs
les
add
add
jg
xor
fwait
mov
mov
gs
xchg
lods
inc
fldcw
pop
enter
dec
fcmovnu
test
jle
mov
pop
pop
pop
dec
jmp
push
insb
push
inc
dec
sbb
cli
push
pop
xchg
or
cmp
or
inc
mov
mov
xor
mov
fs
push
dec
mov
or
adc
mov
mov
outsb
into
push
lret
mov
aad
hlt
add
dec
lcall
cmpsb
inc
adc
lds
xchg
and
lea
data16
cmpsb
repz
jo
loope
or
cmp
xor
loopne
cmp
sub
mov
pop
fs
push
or
repz
sbb
mov
pop
jns
mov
cmp
xor
mov
fsubrp
dec
lods
mov
jnp
fdiv
xchg
lcall
movsl
or
push
bound
imul
xor
sbb
mov
or
ror
shlb
ja
add
inc
dec
stc
cli
pop
pop
orb
das
xchg
or
fstps
fidivrs
psubusb
loop
mov
lods
mov
mov
mov
pushf
mov
xchg
mov
mov
sbb
cld
pop
xchg
and
adc
aaa
jecxz
sbb
das
jb
inc
mov
cmp
mov
push
ret
sub
addr16
aas
and
mov
outsl
or
repnz
into
mov
cmp
arpl
stos
psubusw
fldcw
lahf
fmull
and
push
cmp
shrb
ffree
in
mov
inc
fldt
negb
repnz
inc
push
bound
fmull
scas
xlat
insb
arpl
test
inc
call
lahf
mov
filds
inc
xlat
pop
pushf
add
daa
xchg
subb
jle
cmc
push
scas
mov
les
ret
mov
fistpl
xor
sar
add
dec
sti
mov
cmp
scas
outsb
mov
add
xchg
dec
setnp
xchg
fdivrl
xor
add
lea
hlt
pop
imul
jge
cltd
push
mov
pop
rcrl
push
jg
fistl
xor
adc
xor
stc
fwait
shrb
das
clc
mov
ss
int
adc
scas
dec
xchg
inc
add
outsb
stc
adc
sub
ficomps
lea
push
outsl
mov
mov
lahf
mov
jne
andl
js
inc
mov
xchg
mov
jecxz
inc
xor
dec
mov
fs
dec
mov
repz
in
imul
push
add
and
andl
shl
fisubs
shlb
xchg
icebp
add
rcl
inc
repz
adc
pop
pop
cmc
fidivrs
mov
add
cmp
cld
pop
push
mov
mov
pop
pop
clc
mov
iret
xor
sbb
hlt
jno
cltd
fwait
mov
subb
jle
arpl
sarl
adc
jb
jg
xor
cli
repnz
mov
mov
das
adc
pop
pop
aaa
lahf
icebp
jb
sahf
push
fiadds
cli
cmpl
xchg
add
int
out
mov
out
cmp
pop
adc
inc
mov
fstl
push
mov
shrb
pop
es
shlb
push
mov
out
push
fadds
mov
movsb
sbb
sub
xchg
out
jge
pop
add
jp
inc
sbb
adc
out
dec
push
mov
pop
jne
out
aaa
out
int
test
arpl
add
je
jnp
push
xor
adc
push
cmp
ret
cs
push
test
and
loop
fdiv
mov
xchg
mov
in
int
xlat
loop
push
bound
sbb
enter
fimuls
dec
popa
out
mov
mov
or
out
push
pushf
add
push
loop
loopne
sbb
iret
rclb
push
imull
scas
jo
clc
insb
xchg
mov
jecxz
outsb
jb
or
fdivrs
fnsave
shlb
rcrb
and
mov
xlat
in
test
stos
or
sbb
pop
scas
jbe
das
sbb
inc
xor
xor
adc
mov
cmp
pop
loope
lods
out
lds
repnz
jno
gs
xorl
out
sbb
mov
lcall
xchg
mov
rolb
scas
add
iret
cmp
pop
or
push
jl,pt
adc
int3
and
adc
out
mov
xlat
mov
jne
xchg
xchg
fildl
dec
mov
push
insl
mov
mov
das
sub
cld
pop
inc
out
sarb
ss
pop
jns
xchg
push
push
aas
cmp
adc
lock
out
lds
mov
cld
movsl
into
mov
xchg
jp
and
add
xor
ds
inc
aas
pop
inc
inc
xchg
sbb
call
repz
xor
inc
mov
outsl
inc
add
inc
fs
lcall
sub
jecxz
loope
out
movsb
mov
sbb
ljmp
mov
pop
dec
pop
shl
js
push
dec
xchg
mov
push
std
inc
cmp
stos
push
and
add
filds
insb
mov
in
lods
xor
mov
loopne
mov
push
popa
push
inc
cltd
mov
subl
add
sub
in
inc
fnstcw
ljmp
aas
xchg
inc
dec
jno
je
out
nop
dec
xor
fadd
adc
idivl
jmp
adcl
icebp
out
lahf
jne
jbe
movsb
test
movups
in
sub
sub
mov
push
int
ds
mov
push
out
lock
mov
mov
inc
shrb
sar
rclb
mov
adc
pushf
pop
movsl
jg
mov
cmp
inc
sbb
addr16
lret
movsb
in
sahf
push
sub
test
xchg
dec
xlat
push
arpl
xchg
sbb
and
xor
in
mov
ja
in
xchg
ljmp
jne
mov
fcmovnbe
jmp
fs
add
popa
xchg
xchg
lds
cmp
out
stc
cmpsb
stc
mov
xchg
dec
add
rcrl
stc
sub
lahf
cmpsl
shlb
push
or
inc
inc
lahf
inc
leave
mov
out
and
sahf
pop
inc
into
icebp
lock
loop
xor
mov
rclb
cmp
sub
jbe
sub
imul
mov
add
js
int
jb
sbb
cmpsl
sti
iret
fldenv
xchg
mov
shlb
ja
aad
xchg
xchg
xchg
outsl
insb
mov
xchg
mov
lods
pushf
lret
jp
inc
push
in
mov
out
stc
sub
subl
xor
jecxz
dec
cld
mov
xor
sahf
pop
xchg
jp
test
push
enter
xchg
sub
jge
dec
out
jnp
jo
popa
mov
mov
inc
dec
mov
loop
ss
mov
test
fsts
inc
into
je
jo
fs
push
and
js
xchg
jecxz
fistpl
das
clc
xor
push
pushf
jb
in
mov
js
or
je
pop
int3
repz
pop
cs
test
xlat
hlt
incb
sarb
fidivrs
fucomip
cld
out
add
inc
mov
xchg
shlb
push
add
pushf
mov
andb
out
fmuls
inc
iret
fwait
push
mov
push
pushf
shrl
and
lock
call
or
stc
in
sbb
psadbw
dec
jle
push
call
pop
xor
rorl
pop
xchg
mov
stc
sub
push
inc
mov
mov
int3
xchg
jmp
jecxz
xchg
inc
and
movsb
adc
insb
clc
add
loope
ja
cld
mov
jge
addr16
push
and
dec
pop
mov
fcmovnb
mov
sti
dec
sbb
adc
push
add
cltd
cmp
lahf
test
mov
iret
lods
imul
pushf
mov
cmp
fldt
mov
fidivl
pop
sbb
aam
sub
loop
mov
xor
cmpsl
push
sahf
lea
cmp
loope
fstpt
xchg
repz
push
loopne
movb
and
inc
scas
pop
ds
add
dec
xchg
fiaddl
mov
mov
xor
pop
xchg
mov
je
dec
push
inc
shll
lods
sti
popf
ret
loop
pop
js
and
pusha
mov
and
in
notl
mov
enter
push
lock
sbb
in
mov
inc
xor
shll
sub
cs
and
push
and
mov
sub
enter
or
mov
in
test
das
xorb
out
daa
sahf
cmp
inc
xchg
jle
inc
xor
lret
cmp
movsl
push
imul
push
push
adc
lods
rcll
xchg
mov
pushf
mov
inc
pop
leave
fs
aam
xor
addr16
fildll
loope
mov
and
subl
dec
pop
daa
adcl
lret
xor
scas
out
cmp
cld
push
es
js
jmp
flds
cmp
loopne
mov
scas
dec
pushf
sahf
adc
movb
add
cmp
fstps
popf
sub
arpl
lods
and
or
or
pop
xor
jno
outsl
test
jecxz
out
xor
test
mov
jo
popa
xchg
push
mov
xlat
mov
cwtl
pop
add
dec
and
dec
fcmovbe
leave
in
hlt
inc
or
insl
movhps
pop
cmp
sbb
shl
repz
sbb
jp
and
lea
je
mov
mov
stc
outsb
push
xor
and
shll
push
xchg
movsb
cwtl
dec
out
cmp
fidivrs
test
adc
cltd
ds
ret
rcr
pop
mov
and
xchg
cltd
jmp
pop
hlt
stos
sub
arpl
or
aas
or
sub
jno
mov
lret
xchg
jp
add
adcl
mov
add
outsb
pop
jecxz
lock
mov
and
sbb
loop
push
cwtl
cmpsb
push
add
xchg
add
out
pop
jge
mov
loope
cmp
add
add
push
in
push
pushf
daa
dec
jp
pop
pop
aad
mov
xchg
out
jecxz
sar
fcomps
sarb
push
scas
leave
scas
loope
or
xor
adc
shlb
imul
sub
fs
pop
jg
ret
loope
or
fdiv
mov
xchg
push
aad
in
int
leave
or
aas
addr16
add
test
dec
sbb
es
fadds
sbb
inc
incb
leave
ja
jp
mov
aam
cmp
dec
ficompl
pusha
std
add
and
arpl
or
iret
xchg
lock
outsb
aad
test
inc
arpl
mov
sti
sbb
add
xchg
add
xor
enter
push
cmpsb
mov
andl
addr16
mov
push
adcb
cmp
xchg
jno
les
push
sbb
sbb
or
mov
aam
loop
imul
ds
fstpt
jl
lret
loopne
pop
mov
clc
push
fwait
mov
shlb
pop
xchg
xor
jge
test
pop
leave
daa
cmp
cmc
sbb
push
xchg
ja
jge
cmc
adc
jne
popa
cmp
xor
out
pop
orb
ss
std
mov
push
shlb
in
enter
aad
shlb
repnz
and
pop
jno
mov
int
xor
push
and
adc
movb
dec
or
out
repz
cwtl
iret
mov
lahf
gs
mov
cwtl
xchg
mov
mov
out
sbb
sub
push
cli
enter
lret
test
pop
ret
sbb
inc
idivb
inc
xchg
and
mov
mov
adc
xor
xor
pop
int
sub
in
in
test
pop
cmp
push
cmp
xchg
jne
cmp
clc
aad
int3
pop
lea
fstpt
fwait
cmp
adc
aam
rol
or
push
psubusw
es
xor
push
ljmp
or
enter
inc
cld
jae
arpl
insb
je
int3
or
ret
lahf
lods
shll
in
adc
mov
jae
imul
add
inc
testl
imul
or
push
adc
bound
jo
outsl
testl
in
cmc
stos
add
clc
orl
dec
hlt
sub
xchg
loopne
mov
jnp
adc
jae
xor
xchg
push
lock
mov
sbb
enter
xchg
test
mov
ljmp
out
dec
nop
jne
sub
inc
dec
clc
jne
dec
xor
daa
int3
sti
add
fsubs
jl
lret
mov
xchg
fcmovbe
bound
int3
cmp
jl
jmp
pop
inc
imul
mov
xor
data16
mov
out
or
adc
out
sbb
or
outsl
icebp
lcall
or
test
pop
into
add
pop
or
lcall
test
pop
jbe
push
in
mov
xchg
out
arpl
and
or
out
push
cs
inc
xchg
js
xor
push
jmp
loop
mov
sub
pushf
inc
push
xor
push
dec
lods
cli
jp
fxch
lea
fistps
fistps
mov
jmp
scas
stos
mov
cmovge
add
push
cltd
cmp
daa
push
pusha
mov
adc
and
daa
jge
push
loop
test
sub
lret
xchg
and
shlb
xchg
ss
js
inc
dec
xor
inc
jne
out
xor
int3
dec
sbb
inc
sbb
in
push
arpl
lahf
das
push
outsl
sbbb
adc
test
inc
divb
jmp
push
aad
movsl
add
movsb
imul
dec
sbb
add
gs
adc
movsb
nop
mov
mov
fs
mov
jl
xorl
push
mov
inc
xor
rcr
sub
fnstsw
mov
mov
in
jecxz
mov
mov
and
dec
rclb
int
imul
cmpsb
sbb
add
jl
mov
pop
enter
sbb
pop
dec
insb
call
xchg
adc
push
ja
iret
les
test
mov
das
pop
std
adc
or
pushl
jmp
cmp
push
jl
dec
test
xchg
repz
xchg
repnz
sub
mov
lahf
scas
sbb
test
fadds
cmpsl
adc
or
mov
pop
add
call
xor
scas
mov
loopne
mov
adc
add
pop
adc
lahf
out
repz
pop
push
stc
lret
ret
lcall
jmp
lahf
mov
dec
stos
cmp
aaa
mov
testb
dec
jnp
xchg
js
xchg
dec
sub
test
jo
push
inc
xchg
mov
stos
sbb
cltd
pop
iret
stos
dec
in
mov
inc
ret
cmpsb
cwtl
pop
cmpsb
not
jo
cmpsb
push
mov
pop
adc
mov
jno
out
mov
inc
sub
cld
aas
lea
dec
sbb
clc
repz
cmc
or
gs
fcomip
sbb
in
nop
mov
loop
jecxz
pop
fisubl
idivb
jbe
mov
cmp
fwait
stc
fxch
and
mov
aad
out
pop
jae
js
jae
mov
sbb
inc
out
and
xchg
lret
fcoml
inc
fidivl
sarl
mov
dec
mov
jmp
pop
pushf
sbb
lods
push
fildl
sub
aas
mov
cltd
dec
sbb
cltd
in
dec
pop
jl
dec
add
dec
cmc
and
int3
mov
dec
outsb
outsb
mov
in
cmp
adc
jae
iret
in
mov
mov
and
cli
movsb
clc
and
lods
mov
aas
jp
sarl
jge
ljmp
addr16
xchg
and
outsl
lods
xchg
ds
in
scas
pop
sti
or
cld
push
mov
lret
in
adc
aad
cmp
loop
mov
jmp
stos
and
cmp
xor
push
insb
pusha
pop
lods
and
xor
lods
jns
push
jo
xor
push
fidivs
adc
or
push
pop
jp
or
dec
sbb
sti
jmp
test
mov
mov
or
into
mov
divb
les
sahf
adc
mov
je
stos
cltd
xor
lcall
scas
xchg
iret
jnp
dec
mov
inc
nop
jle
lods
xchg
adc
adc
add
jbe
out
cmp
pop
xchg
cmp
ss
ja
jbe
mov
push
cltd
aad
sarb
adc
push
and
aam
sbb
mov
mov
or
hlt
and
rcl
addr16
push
stos
pop
cmp
aaa
pop
in
xchg
sbb
push
mov
cld
fimuls
out
or
cmc
mov
popa
mov
push
cld
xchg
and
and
mov
pop
fprem
in
addr16
insl
add
mov
rorl
js
fdivs
scas
jb
dec
mov
mov
rcr
mov
inc
jnp
pusha
cmp
js
loop
shlb
dec
rorb
inc
push
fwait
dec
cmpsb
ss
call
pop
outsb
cmp
dec
or
jb
sbb
pop
xor
pop
fisubrl
push
jae
cmp
add
cmp
jmp
jle
or
dec
ljmp
or
mov
sub
dec
sub
mov
mov
dec
add
popa
inc
hlt
mov
aas
mov
add
sbb
bound
inc
jl
mov
cltd
adc
sbb
dec
mov
imul
mov
jg
jge
pop
popa
sarb
pop
mov
xchg
pop
mov
add
inc
insl
sub
idivb
jns
js
test
scas
xor
subb
fistps
sbb
xchg
push
psubd
imul
or
outsb
lods
inc
pop
adc
mov
mov
scas
dec
std
insl
pop
movsb
shlb
mov
mov
rcll
jae
addr16
mov
lea
sti
frstor
inc
adc
jecxz
xchg
and
arpl
cmc
push
pop
in
pop
xor
lret
aaa
mov
push
xor
in
mov
js
sub
push
cmp
inc
inc
mov
iret
imul
cmpsl
sub
stos
dec
sahf
fldcw
aaa
mov
outsl
loop,pt
jo
cld
pop
outsl
jge
ficomps
jle
sbb
dec
inc
cmpsb
inc
or
ljmp
add
dec
fnstsw
inc
scas
add
inc
mov
mov
in
pop
sub
mov
push
mov
mov
ret
lods
jmp
ret
mov
xchg
enter
xor
enter
xorb
cltd
xor
dec
fisubrs
sbb
cwtl
sub
aad
pushf
pop
stc
mov
int3
fdivrs
fs
jmp
enter
das
xor
bound
cmp
cwtl
inc
dec
in
sub
outsb
cmp
or
cmp
xor
push
xor
stos
jl
mov
sbb
inc
sbb
test
in
adc
sbbl
cmpsb
pushf
in
dec
mov
pop
jns
popa
stos
push
sbb
ljmp
push
or
xor
cmp
jne
xchg
cmp
jno
jno
out
cwtl
dec
sbb
fadds
push
add
imul
dec
fcmovu
dec
xchg
ret
mov
lcall
add
sarb
pop
icebp
and
imul
cmpb
add
xor
add
mov
test
pop
xor
xor
jp
out
fwait
mov
sub
cmpsl
inc
cld
out
jae
jmp
stc
dec
adc
mov
sbbb
lea
es
ret
lahf
add
in
push
inc
cwtl
das
add
dec
inc
cmpsl
dec
fidivrs
aad
out
sub
push
pop
dec
ret
call
xchg
jle
mov
movsb
call
aas
out
pop
mov
add
mov
popf
dec
xchg
mov
out
sub
aas
xor
pop
and
scas
aaa
adcb
dec
fbld
lods
out
cmpsb
stos
cmpsb
inc
bnd
inc
loope
and
sbb
std
fs
xchg
daa
mov
movsb
in
add
adc
sbb
shll
push
mov
jge
fs
jp
daa
lret
ret
xlat
xchg
popf
jnp
nop
fwait
sahf
or
aas
lods
mov
enter
fs
inc
leave
movsl
sbb
sub
sar
fldcw
xchg
push
inc
popf
fidivl
shll
scas
xor
pop
dec
je
pop
orb
pusha
dec
xchg
xor
push
lahf
loop
in
dec
mov
or
jo
in
xlat
setle
dec
mov
mov
mov
jecxz
sub
jo
pop
scas
dec
mov
outsl
inc
jp
push
sub
es
or
subl
or
mov
mov
xor
jns
out
sbb
ljmp
movsl
sbb
mov
xchg
out
dec
call
cmp
mov
dec
stc
lcall
or
sahf
and
out
push
ret
stos
std
xchg
or
sub
ds
cmpl
mov
push
sbb
mov
mov
push
cld
jo
cwtl
inc
jp
aad
cli
or
dec
icebp
push
enter
int
jl
jle
cmp
fcmove
mov
push
jno
inc
pusha
stc
pusha
push
test
outsl
in
mov
loope
andl
lds
sbb
jo
imul
pop
test
pop
sbb
dec
push
ds
push
jnp
sub
inc
es
inc
or
mov
and
test
mov
inc
xchg
dec
lret
mov
scas
adc
aas
or
ja
lret
mov
inc
sub
add
outsb
mov
jg
lea
xorb
jge
sbb
fistps
jmp
inc
jns
pop
pop
xchg
sbb
sarl
int
call
inc
repnz
leave
pop
outsb
inc
fnstenv
sub
jo
ret
iret
sbb
sbb
xchg
shrl
adc
out
rcll
xorb
mov
repz
dec
leave
push
sti
and
mov
mov
xchg
std
xchg
mov
scas
sbb
std
loope
push
lret
scas
stc
cmp
mov
sbb
cmpsl
leave
dec
fisubl
adc
out
in
or
sbb
out
imul
insb
cmp
jnp
push
sbb
fwait
sti
js
inc
loopne
push
cmp
lret
adcb
pop
xchg
pop
fistpl
stos
mov
shr
repnz
outsb
sbb
mov
fildl
cld
mov
mov
and
jg,pt
xchg
mov
adcl
insl
testb
cmp
cmpb
mov
out
push
inc
sbb
xor
out
dec
xchg
test
and
cmp
sbb
std
mov
and
sar
push
test
mov
add
cmpb
or
in
movsl
in
push
jb
ljmp
orb
fisttpl
push
sub
jb
stos
shl
cld
test
cwtl
xchg
dec
or
addr16
xor
sti
in
push
mov
aas
lret
js
mov
loope
lcall
ss
sbb
in
loop
insl
shr
lods
ret
mov
or
cmp
mov
adc
leave
repnz
xor
jmp
push
scas
shl
cmpb
xor
cmpsb
jae
xor
cmp
pop
jge
xlat
mov
fldt
pop
in
icebp
sahf
fs
inc
je
roll
cmp
xchg
and
cmp
xlat
mov
les
or
repz
mov
jae
les
pop
inc
cmp
shrb
imul
das
push
xor
push
addr16
mov
xchg
or
mov
data16
cmc
dec
fldln2
inc
cmp
stos
mov
jmp
mov
hlt
clc
in
in
xchg
imul
pop
xchg
adc
mov
lahf
sti
les
xor
inc
pop
mov
dec
bound
aam
enter
jge
mov
out
notb
imul
aad
fldcw
and
dec
dec
sahf
int3
mov
out
shl
sub
adc
lea
out
pop
xlat
subb
add
adc
cld
not
inc
dec
lret
std
sahf
adc
stc
cli
xchg
and
add
and
xor
in
dec
lock
pop
daa
mov
notl
cltd
cmp
std
cmp
pop
xor
inc
mov
fsubrs
pop
sub
mov
sarb
loopne
enter
dec
fldl
lea
daa
bound
push
inc
jp
mov
mov
push
shll
add
inc
push
stos
ficomps
popa
das
addr16
push
xor
inc
sahf
test
jmp
adc
loope
int3
pusha
mov
add
sti
in
mov
dec
dec
mov
xor
cmp
aaa
mov
test
sahf
jle
insb
mov
sub
push
inc
aaa
je
jg
loope
test
in
dec
push
xchg
loop
xor
and
mov
scas
aaa
jb
mov
mov
jecxz
cmp
jmp
call
or
popa
xor
sub
andb
mov
jp
ds
fcoms
inc
sub
xchg
scas
push
push
pusha
mov
jne
popa
xor
test
nop
sub
add
ret
mov
fidivl
add
mov
sbb
addr16
xor
jns
or
mov
mov
inc
mov
fidivrs
cmp
or
pop
daa
sbb
lret
lock
pop
xor
addr16
lods
cmp
xchg
lods
pushl
mov
sbb
sub
outsl
frstor
adc
fsub
fildl
movsl
enter
mov
or
cmc
or
in
int
xchg
mov
push
inc
xchg
fdivrp
fcompl
jbe
stc
repz
push
jmp
loopne
mov
or
pushf
cmp
arpl
cmp
or
push
pop
and
or
and
aas
push
sub
xchg
mov
neg
sahf
fstpl
add
xchg
push
sub
adcb
shll
ret
xor
nop
push
fimull
mov
inc
mov
or
hlt
sbb
mov
stos
push
xchg
gs
dec
outsl
hlt
fistps
push
pop
test
int3
mov
jp
or
inc
mov
add
sbb
aad
cmp
pop
or
and
aas
decl
add
add
in
mov
cmpsb
cmp
sbb
push
jmp
test
icebp
aad
in
sti
pop
fdivrl
cmp
inc
mov
and
mov
lock
cmc
mov
lock
inc
testb
aaa
adc
lcall
cmp
iret
adc
mov
imul
jl
lods
mov
xlat
sbb
add
and
movb
mov
call
icebp
or
jge
sti
pop
and
cli
or
or
iret
push
xchg
dec
cmp
cmp
pop
mov
movsb
adc
aas
xchg
daa
subl
mulb
gs
sbb
inc
cmp
mov
in
add
cmpsl
mov
mov
sbb
push
in
jle
shrl
sub
xlat
xchg
lea
dec
jo
cmpsl
cmpsb
lahf
xchg
pusha
push
inc
repnz
mov
subb
aas
jle
lods
inc
cmp
ss
insl
sub
sub
jns
jg
into
std
sbb
adc
inc
jnp
cmp
imul
and
cwtl
dec
push
mov
xchg
cmp
cmp
xor
jecxz
adc
cmp
movsb
cwtl
jo
mov
outsb
adc
hlt
ficoms
xchg
pop
sti
push
mov
rcl
cmpsl
faddl
imul
xchg
pop
cmp
or
dec
cmp
mov
adc
cmp
sbb
repnz
dec
in
xor
xor
loop
bound
xor
hlt
leave
mov
out
nop
fcmovnb
sub
das
add
jl
das
cmp
fninit
mov
jb
scas
dec
stos
lds
mov
dec
test
scas
lea
js
movsl
sub
or
dec
lret
inc
jb
pop
push
xchg
xchg
dec
jle
and
pop
push
cltd
fists
jbe
dec
lea
shll
pop
popa
enter
repz
ja
cmp
fcompl
loope
add
loope
lds
xor
or
lret
jns
out
push
cmp
icebp
xchg
in
jno
cmc
push
jle
push
mov
cld
and
mov
pop
cs
xlat
sbb
ljmp
call
xchg
enter
push
lret
xlat
pop
add
sbb
jmp
inc
push
movsl
sahf
pop
push
and
mov
leave
pop
jnp
nop
jp
flds
push
jnp
cwtl
mov
jb
jne
sbb
test
pop
loopne
loopne
pusha
mov
inc
lret
push
sahf
fs
inc
std
out
stos
xchg
inc
sub
out
ret
aad
fwait
andb
mov
push
rcr
push
jnp
mov
cmp
sti
insb
add
sub
cmp
or
xor
cmp
push
mov
cmp
fbld
mov
loopne
jbe
je
lcall
outsb
dec
xor
les
jae
jmp
adcb
inc
sti
xor
push
mov
jae
push
sarb
and
loope
loopne
es
sarl
add
or
pushl
sahf
jge
cmp
add
aaa
and
test
and
lods
pop
lahf
mov
jne
adc
rcrb
sbb
cmpsb
mov
lods
clc
ds
scas
push
popw
cmp
adc
dec
adc
or
mov
push
jnp
loopne
stc
xchg
cmc
dec
vmaxps
mov
xlat
cwtl
mov
push
imul
sub
loop
sub
stc
ret
add
or
mov
push
out
mov
pop
aad
sbb
call
aas
imul
lock
mov
mov
push
vmovups
adcl
mov
sub
add
sub
and
push
xchg
push
fadds
jno
jg
jl
cmp
out
adc
mov
fbstp
and
pop
cs
mov
jbe
mov
dec
add
dec
mov
sub
mov
loope
ljmp
pop
xchg
fsts
add
push
gs
sub
sbb
push
fs
in
sub
xchg
sti
jae
test
in
aaa
dec
mov
in
sub
inc
jecxz
mov
push
fcoml
sbb
mov
fcmove
inc
push
inc
push
adc
lcall
jl
outsl
xchg
lods
adc
fndisi(8087
xlat
xchg
xchg
in
cmp
lcall
and
lret
mov
dec
aad
pop
push
xchg
xlat
lods
lds
dec
das
and
cmp
mov
mov
int
xor
clc
mov
popa
and
adc
repnz
test
fldcw
cmpsl
or
sbb
and
imul
fs
add
cmc
lds
pushl
jne
jge
sbb
inc
or
pusha
cltd
lret
add
icebp
mov
ffree
imul
nop
shrl
addr16
movsl
ret
lds
jmp
fdiv
mov
out
enter
jl
andb
mov
inc
pop
test
push
scas
lods
adc
orb
nop
and
push
push
popa
inc
push
inc
dec
jnp
clc
jmp
mov
jno
pop
and
jecxz
cli
xor
jbe
inc
lret
insl
and
pop
mov
mov
mulb
mov
cltd
push
or
lods
mov
xchg
sbbb
testl
aaa
icebp
inc
pop
mov
and
lock
aad
repz
sub
jmp
jmp
jb
movl
gs
jmp
hlt
add
mov
xchg
std
sub
push
jmp
push
icebp
and
ss
push
lret
sbb
jno
xchg
adc
icebp
and
mov
out
mov
aad
xor
js
mov
cmc
inc
jp
pmaxsw
insb
into
adc
xor
jno
pop
insl
sub
sub
cmp
flds
iret
icebp
mov
fcomi
xor
rclb
xchg
pop
loope
sub
cmpsl
xor
imul
and
adc
mov
add
jae
loopne
inc
data16
movsl
mov
fisttpl
or
jg
out
inc
pminsw
insl
in
inc
cmp
and
dec
mov
jne
pushf
sbb
loop
in
jb
dec
insl
outsl
inc
loopne
into
fnsave
pop
xchg
jbe
mov
xor
xchg
and
cmp
pop
cmp
pop
push
sub
jmp
stc
lds
sbb
or
test
and
pop
push
mov
jb
loop
adc
push
mov
mov
cmp
fisubrl
gs
adc
jp
xchg
mov
xchg
popf
mov
jbe
jns
inc
bound
pop
cmp
mov
ficompl
jae
push
mov
cmp
mov
xor
sbb
adc
repnz
pop
jecxz,pt
lds
pop
and
mov
pop
mov
cmc
cld
leave
leave
jle
outsb
std
cmp
aad
jae
lea
adc
outsl
cmp
xchg
cld
shr
repnz
xchg
mov
cld
into
mov
and
mov
add
fsubp
not
push
push
adc
or
sbb
imul
int
xchg
mov
into
imul
pusha
mov
xor
testb
test
ds
xchg
movsb
adc
cmpsb
loopne
push
pop
mov
daa
ljmp
or
outsl
xor
xor
scas
lock
pop
hlt
xor
add
js
fsubl
sbb
jb
insl
popl
adc
inc
loopne
mov
adc
outsl
or
mov
dec
adc
int
scas
jp
inc
stos
xchg
mov
test
and
lret
int3
cmp
fstpl
es
arpl
xchg
es
sub
repnz
jp
jecxz
imul
mov
mov
xchg
enter
or
jno
movb
cmp
icebp
xor
out
test
push
ljmp
adc
add
sub
or
cwtl
push
ja
sbb
fstp
pop
rorl
lods
and
insl
push
adc
mov
push
pushf
lods
sbb
push
jno
faddl
dec
xor
mov
sbb
xor
mov
jl
jecxz
mov
mov
into
mov
shll
dec
rcll
rcrb
adc
add
mov
lahf
pushf
stos
movsl
fcomps
les
jl
and
adc
jne
cmpsl
das
popa
push
push
fadds
xchg
clc
mov
jno
xor
adc
subb
dec
rcl
mov
or
mov
sbb
movsl
popa
pop
test
mov
mov
dec
lods
and
mov
xchg
shll
push
mov
mov
push
mov
insb
fisttpll
jle
mov
mov
jp
iret
call
rclb
mov
dec
and
mov
xchg
movsl
cltd
cld
dec
mov
test
fcos
mov
bound
int3
gs
popf
pushf
cmpsl
mov
test
mov
clc
faddp
adc
mov
inc
sub
loop
dec
jg
jg
inc
ret
outsl
add
jle
loop
or
push
nop
int
mov
mov
cmp
fwait
jnp
pop
mov
add
jmp
pop
dec
mov
ljmp
stos
dec
xchg
sar
xor
adc
into
xchg
pop
inc
adc
sbbb
adc
xor
push
rorb
pop
pop
faddp
repnz
push
or
push
adc
lret
enter
pop
dec
or
sub
sahf
sub
movsb
mov
xchg
xchg
mov
sub
mov
lret
ret
js
pop
cmp
mov
leave
dec
add
ss
mov
ja
or
and
xchg
mov
fidivrl
ss
push
pusha
xchg
lret
push
repnz
push
add
jg
push
dec
pushf
dec
jmp
xchg
jb
fcompl
pop
and
xor
inc
ja
cmc
fadds
sub
sbb
fdivs
inc
adc
mov
je
mov
cmp
insl
sahf
or
fcmovnb
leave
test
push
cmp
test
and
enter
xchg
lahf
rclb
mov
lock
iret
insb
fiaddl
mov
addr16
call
sbb
lea
pop
xlat
dec
mov
loop
push
repnz
pop
push
fsubl
mov
cmpsl
dec
inc
and
std
adc
xchg
adc
add
popa
mov
add
jmp
sbb
push
ja
lock
mov
jge
jae
push
push
pop
jb
aas
mov
xor
rol
pop
mov
and
lcall
sub
add
neg
adc
jecxz
lods
incl
pop
in
xorl
clc
ret
ret
sahf
dec
or
imul
cld
adc
cwtl
mov
mov
cld
inc
repnz
xchg
dec
dec
push
cmp
or
jg
gs
and
push
daa
mov
mov
sbb
push
ds
pusha
inc
sub
pop
stos
push
lods
pop
shrl
mov
loope
xlat
js
add
andl
adc
adc
dec
push
insl
fs
roll
adc
fmull
lret
pushf
sti
push
mov
jae
sbb
out
xchg
scas
jne
add
dec
and
lock
xchg
sbbl
aad
lods
mov
jae
mov
movsl
call
enter
fsubp
xor
cltd
ljmp
sub
jle
lret
and
sub
push
mov
leave
sbb
outsl
loopne
iret
daa
jmp
sbb
add
std
or
pushf
mov
adc
xchg
ja
call
ret
jp
inc
lds
sub
pushf
xchg
adc
or
pop
jmp
scas
sbb
sub
adc
xor
cmp
add
fnstsw
testl
addb
inc
jnp
popa
mov
insb
popa
aam
push
push
add
mov
shll
fs
enter
sarb
sub
cltd
dec
xor
ss
cltd
xchg
push
dec
call
int3
adc
scas
push
and
dec
adc
mulb
inc
mov
adcl
stos
mov
dec
jg
aad
push
dec
mov
pushf
mov
cmp
sub
in
cmpsb
call
mov
jp
pop
movsb
mov
shrb
mov
lret
lret
popa
pusha
roll
pop
loopne
movsl
test
cld
scas
call
cmpl
jecxz
sbb
jp
rclb
fildll
cmp
out
jecxz
dec
jbe
js
xor
lea
cmpsl
in
imull
lods
mov
aam
add
push
mov
cmp
daa
cmp
out
push
mov
sub
rcll
dec
nop
inc
dec
xor
arpl
fnstsw
in
push
mov
adc
pop
fists
xchg
imul
stos
out
dec
cmp
into
les
sarl
in
mov
std
sub
mov
shl
jbe
jl
mov
dec
or
insb
fmull
repz
pop
insl
sub
xchg
add
or
mov
inc
mov
push
bound
jbe
sub
sub
dec
adc
in
mov
out
in
sub
movsb
fsubrs
cmc
stos
fcomi
mov
pusha
inc
jg
xor
push
loopne
sub
sbb
mov
mov
mov
inc
adc
adc
mov
fists
shrb
mov
ljmp
push
sub
jns
pop
cmc
mov
adc
jl
inc
pop
adc
dec
jmp
push
mov
aam
stos
out
loopne
sub
inc
in
out
lods
mov
enter
xchg
add
aad
dec
cld
ficomps
stos
or
int
pop
jns
cs
movsl
je
and
add
insb
xchg
sub
pusha
inc
jmp
push
lcall
or
push
pop
frndint
aam
data16
icebp
sti
mov
out
cld
and
mov
add
inc
xor
ficomps
nop
mov
je
add
xchg
cs
adc
ss
sbb
stos
mov
stc
pop
xor
inc
outsl
mov
adc
notl
sbb
cmpsl
fimull
shr
xor
lret
outsl
xor
notb
jg
add
and
ror
inc
jnp
mov
cmp
js
dec
pop
insb
dec
dec
cwtl
push
inc
push
jecxz
insl
nop
cmp
mov
cli
repz
fs
mov
ss
sarl
data16
aad
xor
jne
mov
lret
push
out
lret
lret
sub
xchg
xorb
rorl
sbb
rcr
test
cmp
dec
or
jle
nop
inc
push
add
mov
inc
shl
mov
dec
sub
push
push
pop
push
insl
mov
push
push
aas
rcll
das
mov
dec
movsb
inc
jge
and
out
and
push
repnz
sti
lcall
ret
push
adc
fwait
movsb
jl
cltd
mov
jl
clc
cmp
in
inc
xchg
cmp
loopne
scas
lock
popa
xor
sub
in
mov
jmp
xchg
clc
test
fmull
push
pop
shll
je
push
into
add
pop
sbb
sbb
lcall
lret
add
subb
divl
push
jmp
pop
jno
xlat
cld
push
mov
out
or
fcoml
idivl
movsb
aad
popf
push
mov
or
ds
cli
ss
enter
and
fisubrs
in
pop
cmc
adc
mov
ffree
lret
popf
mov
pop
add
adc
sbb
cltd
sbb
addr16
in
cltd
fdivrs
xchg
mov
cmpsb
mov
sub
ret
push
and
push
icebp
push
int
outsb
arpl
dec
mov
jbe
fidivl
xchg
mov
push
aas
mov
xor
and
inc
jae
push
sbb
std
ja
in
dec
sub
sub
insl
adc
push
cmp
sbb
popa
xor
movsb
adc
cmp
dec
xor
sbb
pop
call
mov
cwtl
test
addr16
pop
fcomp
jmp
mov
sbb
dec
and
cmp
adc
xlat
negl
ja
inc
jns
loopne
mov
ret
dec
xchg
cld
stos
cwtl
fbld
and
pop
mov
leave
adc
in
cli
mov
or
test
aas
test
sub
pop
xor
xchg
or
push
xor
jge
cwtl
daa
punpcklbw
js
inc
imul
push
push
jo
leave
jnp
sub
jge
scas
push
hlt
js
mov
cli
push
push
popa
rcll
inc
sbb
inc
jle
mov
nop
subb
nop
cmovs
gs
mov
jae
in
mov
and
fwait
jbe
mov
dec
movsl
jb
test
aas
cld
aam
push
mov
adc
mov
shll
cld
das
inc
pusha
cmp
inc
sbb
add
sbb
adc
and
inc
popa
push
push
push
xor
fwait
inc
jne
inc
sub
divl
test
inc
xchg
int3
sub
sub
sbb
adc
and
popf
jge
push
addr16
add
mov
call
in
pshufw
sub
push
shrb
stc
in
fstps
or
jne
cld
mov
mov
aas
cmpsl
cmpsl
fisttps
mov
fcmovu
or
mov
iret
inc
daa
shlb
arpl
shlb
pop
pop
adc
scas
xchg
out
push
dec
jo
xor
and
inc
lea
sbb
fsubrl
jmp
pushf
sub
mov
adc
adc
out
fstps
push
loope
mov
adc
and
dec
lods
adc
out
xchg
in
cmpl
out
negb
roll
push
mov
mov
mov
ficompl
loopne
int3
mov
sahf
cmc
push
sbb
push
hlt
outsb
and
sub
sahf
std
sub
sub
ljmp
or
pop
pusha
adc
ljmp
push
mov
sahf
cmp
aaa
sub
out
xlat
jg
mov
in
pop
je
rclb
mov
aam
cmpl
popf
arpl
xchg
or
mov
in
mov
and
sub
shr
or
jl
push
lods
sbb
outsb
mov
jle
mov
jne
clc
sub
and
mov
add
mov
mov
fwait
imulb
xchg
mov
xor
test
jnp
sub
cld
push
inc
push
cltd
and
add
jmp
pop
push
or
pushf
inc
inc
leave
mov
sahf
test
dec
stc
out
sahf
shrb
pop
stos
scas
ja
mov
sub
out
pushf
dec
rcl
mov
jl
cmp
mov
hlt
add
sar
and
divl
into
and
into
sub
fwait
je
jle
or
push
jmp
pop
inc
or
pushf
pop
cmp
int
jbe
adc
gs
lret
jg
imul
jae
add
inc
ret
es
dec
int
in
mov
adcb
pusha
xor
sub
mov
shlb
cmp
xor
pop
sahf
fimull
pop
sbb
js
jecxz
cltd
stc
cmp
jmp
cmpl
test
in
add
inc
sbb
into
xchg
sahf
push
and
iret
mov
sbb
shlb
cs
out
mov
je
xchg
icebp
inc
jmp
pop
mov
mov
pop
xor
icebp
fstpt
push
and
cmp
mov
mov
cmpsl
mov
into
insl
cmp
pop
jge
cmp
ljmp
mov
clc
add
mov
sbb
mov
mov
rcll
pop
loopne
loope
jl
gs
xor
xor
cwtl
out
pop
insb
mov
fs
aad
fnstcw
jb
aad
push
jg
push
ss
add
shll
jg
inc
push
adc
mov
fwait
cmpsb
mov
dec
in
xchg
adc
adc
dec
jp
push
push
dec
pop
cltd
arpl
jmp
loop
roll
les
dec
or
pop
or
adc
cld
mov
push
mov
jnp
test
arpl
ja
ret
xchg
fs
fwait
mov
inc
movb
mov
cld
push
and
sub
mov
push
ds
fwait
ss
push
pop
jle
and
call
mov
and
pop
mov
inc
mov
and
adc
mov
push
xchg
in
arpl
cli
andps
in
inc
dec
pop
xchg
cmp
in
mov
lods
iret
add
in
out
push
jno
rorb
or
dec
xor
push
mov
fisttps
shll
data16
xchg
sti
push
or
test
mov
jbe
shlb
icebp
fstl
cmp
adc
mov
xchg
push
jae
jno
add
call
sti
testb
adc
les
aas
ja
ja
inc
out
pop
lds
pop
icebp
fmul
or
decb
cmpsb
in
mov
insb
cmc
xchg
pushf
push
jmp
outsl
out
mov
jle
call
xchg
das
cwtl
cs
xchg
inc
xchg
or
in
pusha
push
leave
mov
or
inc
popf
push
sbb
ljmp
jo
data16
and
push
mov
ret
hlt
and
inc
push
adc
das
mov
lcall
xchg
and
into
repz
cmpsl
test
nop
mov
sahf
inc
dec
mov
shrl
fimuls
push
cwtl
pop
loop
out
cmp
xchg
int
mov
push
mov
inc
push
push
add
jl
adc
insl
or
fisttpl
and
jmpw
das
inc
out
pop
roll
jp
enter
adc
adc
frstor
jae
imul
adc
scas
add
cmp
repz
test
inc
lcall
pop
sub
jns
popa
push
jp
sub
es
adc
jo
repnz
test
gs
cmpsl
icebp
dec
lods
jge
xchg
loope
sahf
daa
lea
cmp
fildll
fsubp
mov
inc
adc
adc
sarl
icebp
mov
mov
mov
idivl
sub
xchg
mov
aaa
jg
rorb
mov
mov
jo
inc
jno
jp
and
push
mov
fnsave
xchg
mov
adc
rclb
loope
dec
xchg
lods
lds
pop
mov
fsubl
sahf
mov
shlb
test
mov
mov
cmp
dec
fisubrl
mov
popf
aad
pop
lds
inc
mov
xchg
mov
push
jnp
jg
ret
stos
xchg
in
sbb
cmp
js
push
jecxz
xor
cmc
decb
mov
cmp
ds
mov
sahf
nop
fs
mov
loopne
ss
nop
mov
inc
sub
sub
add
ficompl
or
ret
cmp
mov
cltd
xchg
popa
clc
dec
dec
imulb
icebp
ret
or
shlb
adc
daa
xor
test
into
jnp
xor
xor
imul
pop
pop
sub
mov
rcrl
lret
pop
repz
sbb
sub
std
jns
clc
std
sub
lahf
cmp
xor
mov
subl
nop
cmpb
mov
out
jg
out
jo
test
sub
add
jecxz
sahf
into
arpl
add
das
push
push
cmp
sti
sbb
call
add
std
fcmovnbe
clc
stos
hlt
add
fistpl
mov
cmp
aad
dec
sub
outsb
inc
sbb
mov
popf
lods
jle
std
mov
shr
mov
ret
aam
lods
xor
mov
jbe
fstpl
movsl
sbb
and
cmp
mov
mov
sub
or
dec
mov
je
push
sbb
leave
fistpl
mov
and
daa
stos
daa
xchg
subb
fcompl
scas
stos
xchg
mov
inc
and
mov
sbb
cmp
in
sahf
jb
in
mov
xchg
push
mov
nop
dec
jne
or
mov
mov
mov
ljmp
inc
xchg
jle
mov
push
mov
lods
cwtl
cld
cmp
mov
movsl
jecxz
jp
aaa
cmpl
xchg
xchg
into
aas
mov
push
fwait
pop
or
push
subps
jl
mov
xor
lcall
psraw
jo
push
jmp
and
and
mov
es
aad
mov
pop
jns
sub
addl
mov
xchg
xchg
jns
adc
cs
cmpsb
jl
cwtl
pop
xchg
jmp
cs
orl
pop
xchg
sbb
push
xchg
sbb
repnz
ret
std
mov
hlt
mov
orl
mov
inc
mov
mov
fidivrl
fists
cwtl
sbb
mov
lods
sub
push
fldt
in
mov
inc
cmp
sub
cs
out
out
xor
cmc
cmpsl
pop
pop
push
or
push
xchg
mov
fistl
adc
shlb
mov
jg
jmp
inc
ljmp
adcl
dec
adc
out
dec
push
inc
scas
jl
mov
jg
fwait
pusha
ret
mov
mov
xchg
test
outsl
cmp
outsl
mov
mov
into
sbb
addr16
jb
sub
ficomps
fincstp
mov
push
roll
jnp
adc
mov
in
mov
xchg
mov
test
outsb
out
fldt
push
or
or
test
sbb
stc
in
lods
inc
es
and
inc
mov
mov
sbb
push
push
movsb
clc
mov
push
xor
adc
es
mov
fsubrp
mov
push
pop
or
adc
loope
cwtl
inc
xchg
repnz
pop
mov
add
call
fs
jmp
cli
fwait
xchg
or
in
push
sbb
roll
jmp
and
xchg
loope
mov
mov
cmp
mov
mov
xor
dec
insl
lea
je
pop
pop
mov
test
pop
and
sub
pop
stc
adc
data16
out
iret
sub
mov
jle
popa
push
cmp
mov
dec
mov
cmp
sti
rcrb
push
inc
dec
icebp
jae
add
cmpb
jae
sub
ret
mov
hlt
jmp
mov
or
push
jmp
int
and
dec
lcall
mov
pushf
cmpsl
aam
pop
and
arpl
pop
sub
xchg
sub
test
pusha
fsts
push
push
cmp
loopne
xchg
dec
sub
mov
decb
call
repz
subb
stos
add
dec
pop
cmp
adc
in
adc
push
adc
pop
aas
or
cmp
pop
ss
enter
sti
call
sub
jge
inc
add
jo
movsl
dec
das
push
daa
in
xchg
sub
ja
mov
arpl
dec
mov
mov
cmp
es
js
and
je
testb
shlb
mov
aad
add
into
rcll
fisubs
dec
add
andl
or
into
or
ficomps
mov
imul
fs
lods
sti
adc
jg
xchg
adc
cmp
enter
in
shll
inc
pop
jmp
shlb
hlt
and
cs
fsts
mov
xor
jnp
clc
cld
cmp
pushl
andb
movsb
and
mov
jbe
adc
inc
xchg
jo
cmc
push
sbbl
and
xchg
leave
inc
sub
fs
insb
dec
jmp
std
inc
shrb
sbb
hlt
pcmpgtb
ja
push
insl
sub
lret
rcll
shl
pop
sahf
push
iret
xchg
in
jmp
into
sub
lret
std
shl
mov
shlb
dec
mov
inc
push
sbb
sbbb
jp
loope
mov
jb
lcall
and
mov
das
stos
push
sbb
or
or
pop
push
loope
or
std
rolb
cmp
xor
popa
mov
mov
repnz
iret
les
pop
push
loopne
lock
mov
and
inc
or
in
test
or
idivl
outsb
stc
mov
and
and
sub
pop
aad
test
mov
and
std
cli
stos
inc
outsl
cmp
arpl
and
xchg
xchg
and
inc
mov
xchg
fisttpll
cwtl
inc
jp
pop
fcomi
xchg
outsb
jmp
mov
call
mov
pop
out
mov
mov
mov
xor
repnz
cmp
push
jmp
rolb
cwtl
adc
push
jmp
mov
lods
in
int
roll
loopne
mov
loopne,pt
push
sub
jno
ret
mov
push
mov
lods
mov
lret
sbb
aad
push
dec
sbb
cmp
or
mov
insl
sbb
inc
pop
mov
inc
sub
pusha
sub
stos
fucomip
pusha
xor
lods
outsl
cwtl
pop
test
sahf
pop
lret
sarl
mov
pusha
add
inc
bound
sub
and
and
pop
mov
xor
push
leave
jmp
inc
xchg
mov
ljmp
adcl
mov
fimuls
add
jbe
popa
sub
inc
add
adc
movsl
xchg
sbb
mov
loope
sub
mov
pop
out
dec
out
mov
and
add
and
lods
cmpsb
adcb
xor
in
movsl
imul
orl
jno
iret
les
adc
cltd
cmp
leave
out
xchg
sub
rorb
pop
sti
push
xlat
shlb
clc
es
movsb
xchg
pop
push
test
in
mov
out
xor
fnstenv
add
mov
pop
mov
gs
jle
lret
subb
test
pop
and
mov
movd
and
xchg
flds
push
sbb
adc
outsl
and
out
xchg
daa
inc
fistpll
mov
loopne
leave
mov
pop
rolb
ret
jmp
xchg
pop
sbb
std
stc
xor
imull
pop
push
xor
sub
movb
cmpsb
lods
cmp
hlt
lds
test
mov
mov
loop
adc
sub
loope
in
arpl
xchg
jne
push
adc
mov
cmp
enter
cmc
pop
fisubrs
xor
aaa
popf
sbb
int
out
mov
aaa
push
sbb
ds
inc
lret
push
repnz
hlt
xchg
iret
je
or
punpcklwd
dec
fwait
sub
inc
fldcw
lock
or
movsb
adc
mov
sub
mov
scas
lea
stc
cmp
lret
test
insb
xchg
pop
pop
cld
iret
iret
fs
dec
adc
push
xchg
cmp
cmpsb
add
insb
test
icebp
xchg
loope
and
lcall
shlb
mov
xchg
inc
xchg
sub
push
add
insb
stos
adc
mov
xchg
mov
xchg
pushf
cwtl
dec
inc
fisubrs
call
inc
jge
lods
fidivrs
call
and
out
xchg
decl
test
fidivrl
push
fldt
lret
xor
mov
gs
push
xchg
aad
cmp
nop
ljmp
jge
stos
lock
inc
lods
dec
mov
inc
nop
push
xchg
cmp
insl
mov
add
or
sub
cld
and
xchg
dec
cmp
mov
scas
mov
mov
push
push
pop
lret
loope
pop
inc
jno
lret
ret
sbb
clc
lock
loope,pt
adc
sarb
aam
xor
mov
pop
repz
sahf
rcrl
shlb
or
add
xor
cmp
push
xor
push
push
add
and
fistpl
mov
sub
ja
mov
jo
sbb
lahf
dec
in
ret
out
lods
test
xchg
pop
stos
scas
push
and
sbb
shrb
push
sbb
test
test
mov
xchg
push
fs
fwait
out
mov
or
xchg
movsb
jg
movsl
mov
aaa
mov
rcrl
cmp
xchg
dec
testb
sub
fistps
hlt
mov
rcrb
loop
insl
ja
adc
cli
and
mov
imul
les
adc
arpl
lcall
fwait
aaa
mov
or
pop
xchg
jnp
repnz
jbe
mov
loopne
lods
fadds
fucomi
negl
mov
pop
repnz
sbb
ss
roll
andb
mov
jo
jb
jg
cwtl
mov
lods
aaa
addr16
jl
xor
mov
cli
mov
ja
shlb
jns
adc
or
push
xchg
sti
xor
leave
mov
push
rorl
inc
xchg
insb
rorl
movsl
out
in
mov
insl
sar
jae
dec
clc
inc
inc
lds
scas
push
or
popa
add
cmc
xor
test
aam
rcll
ds
decl
adc
loop
and
inc
movsb
pop
mov
ljmp
mov
pusha
inc
aad
inc
pop
arpl
xor
mov
pop
clc
or
lret
and
jecxz
adc
lock
insl
or
xor
jge
enter
icebp
shrl
xchg
mov
addr16
gs
fimull
and
sub
mov
dec
xchg
xchg
decl
test
lret
and
push
cmpsb
push
jp
pop
inc
sub
jne
cmp
mov
adc
arpl
mov
test
xchg
shrb
ret
mov
ficomps
loop
mov
addl
xlat
sbb
jl
shrl
mov
daa
jne
sbb
inc
outsl
xorb
dec
push
lock
adc
das
pusha
dec
loopne
shlb
addr16
cmc
sbb
mov
out
sbb
testb
dec
cmp
mov
rclb
fistpl
inc
sub
or
xchg
xor
jns
xchg
mov
push
add
test
xor
fidivrl
nop
mov
testb
lcall
pop
out
insb
jl
shll
jne
out
sub
repz
xor
sbb
pop
push
or
sbb
jle
sub
nop
cli
std
in
jmp
rcll
test
mov
test
pop
movsl
push
and
aaa
repnz
push
cmpsb
xor
daa
adc
push
adc
mov
and
insl
inc
in
sub
push
mov
add
ror
mov
lods
cmp
and
push
inc
add
adc
xchg
pop
ds
cmpsb
fldt
movsl
jmp
mov
and
outsb
sub
xor
loop
and
add
nop
lret
mov
sub
sbb
inc
jle
sbb
xchg
jle
jl
or
mov
adc
jbe
sbb
jl
fimuls
out
lods
add
and
sub
pushf
or
stos
pop
popa
clc
iret
in
cmpsl
out
mov
ljmp
test
mov
leave
mov
inc
add
and
fnsave
sbb
ds
repnz
popf
adc
shlb
add
out
into
iret
lea
mov
movups
or
jns
mov
int3
jo
mov
rorl
fwait
jae
hlt
mov
outsl
scas
repz
adcb
or
scas
icebp
ss
jae
push
int3
in
negl
inc
fwait
daa
and
push
mov
loope
jns
adc
out
mov
or
or
sub
lods
jae,pt
gs
mov
pop
jmp
scas
cli
jo
movsl
insb
mov
lcall
and
mov
xor
test
outsl
cmp
xlat
and
inc
insb
pushf
and
fmul
sbb
mov
mov
xor
call
pop
or
hlt
mov
lods
dec
out
pop
testl
inc
out
test
sbbl
stc
mov
push
bound
sub
sub
lcall
and
sbb
addb
lods
push
xchg
mov
subl
in
jmp
xchg
and
xor
add
icebp
hlt
enter
jecxz
orl
jb
mov
push
fwait
inc
clc
jbe
push
lret
lret
jne
je
lahf
sahf
repz
fcoms
stos
addb
outsb
in
sub
out
clc
pop
mov
std
scas
dec
mov
aad
jecxz
enter
jle
cs
gs
xchg
jp
jno
lds
mov
mov
cli
orb
lcall
cwtl
movsl
test
pop
sti
jnp
das
jnp
fldl
push
aad
sbb
sbb
and
mov
mov
dec
call
lods
push
push
mov
shl
clc
test
sbb
repz
jno
sbb
adc
mov
sbb
mov
cwtl
xchg
cli
fnstsw
adc
jnp
xor
loop
push
adc
cmp
dec
pop
xor
sub
mov
sub
jo
mov
pusha
dec
mov
test
movsl
push
stos
jne
push
dec
mov
out
inc
jl,pn
repz
sbb
jle
sahf
imul
out
cmp
pop
add
mov
in
cld
out
xchg
loopne
or
je
inc
enter
aad
and
int3
mov
aad
rep
fidivs
mov
loop
sub
lock
pop
sbb
inc
dec
fnstsw
rorl
jecxz
scas
mov
jmp
inc
ret
in
int3
cmp
dec
dec
outsl
insl
cmpsb
mov
cmp
cmc
push
and
xchg
inc
aam
inc
negb
push
outsb
inc
xor
les
jp
mov
loop
js
insb
shlb
clc
xor
mov
insl
pop
cmp
int3
push
rcr
jno
or
es
pop
add
inc
notb
in
inc
outsl
lods
jmp
inc
and
repnz
adc
or
mov
sub
data16
cmp
subl
dec
mov
inc
mov
std
jge
leave
mov
leave
mov
je
out
xlat
subl
adc
test
sub
aaa
fldt
aas
repz
ja
jo
lahf
dec
adc
fcompl
icebp
mov
xchg
dec
les
orl
addl
pop
sub
push
ret
cmp
xor
adc
pop
mov
adc
push
or
sub
mov
mov
mov
lret
nop
mov
push
add
stos
inc
pop
push
xor
inc
xor
xor
sahf
in
mov
outsl
insl
in
inc
or
in
adc
sti
dec
push
push
inc
jne
lahf
xchg
mov
mov
dec
stos
lret
in
sar
adc
mul
divb
scas
and
xchg
aad
dec
mov
mov
outsl
pop
sub
add
cvtpi2ps
insb
cmp
cmp
xor
cmp
jbe
adc
cmp
pop
jb
ret
dec
out
xor
push
bound
mov
fcompl
and
pop
jo
xchg
jmp
and
jno
dec
push
lods
dec
div
xchg
pushf
ret
imul
clc
mov
das
xor
and
fs
insb
andb
sbb
ljmp
ds
and
cs
imul
stos
sub
pop
in
incl
cmp
or
mov
sub
or
mov
pop
sahf
or
add
and
or
dec
insb
cmp
icebp
lret
or
sub
inc
cmp
scas
cwtl
int
lcall
pop
push
and
pop
out
or
imul
stc
sti
dec
call
add
jb
imul
fwait
mov
lea
add
cld
add
aaa
ss
popf
pop
or
enter
stc
cmp
sbb
mov
inc
arpl
lahf
fcmovnbe
in
icebp
out
jno,pt
or
pop
xchg
fs
mov
sub
jne
mov
and
cwtl
inc
push
lock
pop
xchg
out
mov
or
lods
jne
jae
jle
sahf
int3
jp
pop
pop
xchg
cwtl
int
inc
adcl
pop
out
shl
and
lods
mov
add
sbb
jnp
gs
and
hlt
cmp
mov
or
or
lahf
jle
shr
or
xchg
xor
sbb
or
stos
aad
jae
mov
enter
jnp
movsb
call
adc
aas
inc
rol
and
xor
pop
xchg
addr16
jg
add
sbb
dec
fdivl
fs
mov
gs
scas
ror
bswap
jmp
sub
cmp
push
add
cmp
jl
dec
sbb
dec
fistpll
xchg
sbb
lahf
adc
in
addr16
xor
jno
ret
push
frstor
or
gs
sbb
add
and
and
ret
scas
or
push
fiadds
xchg
xchg
xchg
sbb
bnd
cmpsb
and
adc
ja
push
mov
popf
arpl
inc
roll
in
pop
cltd
fisubs
mov
scas
jecxz
mov
aas
pop
mov
inc
das
mov
std
mov
xorb
subl
sbb
xchg
pop
call
push
leave
xor
fldl
mov
adc
xor
dec
pop
sti
iret
cli
adc
dec
jne
or
pop
push
insb
pushf
xor
sub
lcall
push
hlt
mov
and
inc
sar
call
movsb
inc
and
dec
cld
call
dec
push
filds
repnz
xchg
pop
iret
inc
pop
scas
fbld
gs
pop
scas
push
cmp
adc
xchg
xchg
sub
inc
das
sti
inc
jns
dec
cmp
repz
xchg
jmp
stos
imul
lret
sub
cmp
xchg
pop
pop
xchg
pop
add
in
es
pop
mov
mov
mov
and
xchg
sub
les
outsl
pop
sub
inc
mov
cmp
stos
jne
push
mov
in
repz
into
adcl
add
rolb
add
sbb
popa
sub
adcb
outsb
push
mov
leave
fwait
sbb
push
jo
add
data16
in
cmp
jns
mov
add
adc
push
or
shl
mov
cmc
jns
pop
push
movsb
addl
inc
push
les
rclb
push
fmul
adc
adc
popf
inc
lahf
cmc
dec
lods
faddl
mov
fwait
mov
shll
inc
lds
cld
jae
add
int3
xlat
xchg
add
in
movsl
jne
int3
dec
test
mov
cmpsl
or
pop
test
push
outsl
mov
addr16
mov
cmp
and
sbb
adc
gs
push
fistpll
fimuls
pmaxub
inc
mov
pop
jl
lods
add
adc
jecxz
sahf
test
lods
xchg
mov
push
xchg
lahf
inc
je
popf
push
int
jmp
add
xchg
jae
jb
jo
or
std
pop
dec
and
imul
adc
movsb
arpl
jae
lcall
scas
iret
loope
or
and
lcall
insb
pop
cmc
ss
cld
sub
int3
or
shrb
lret
push
outsl
in
fsubl
inc
xor
jecxz
pushl
mov
in
in
fs
and
dec
cmpsb
loopne
mov
or
data16
jl
dec
pop
jnp
lret
popa
cmp
hlt
es
lods
incb
clc
lahf
mov
out
mov
shl
mov
cmpsb
xchg
iret
pushf
outsl
das
dec
cmp
push
xchg
jge
push
outsb
xchg
notb
push
scas
and
mov
sbb
xor
imul
repnz
js
repz
mov
mov
in
xor
pop
pop
in
pop
xor
mov
push
int
fdivl
push
push
sub
ja
inc
jns
scas
leave
add
xchg
scas
push
sbb
dec
jge
ljmp
mov
dec
push
pop
xor
xor
popf
push
pop
lods
cmpb
test
ljmp
adc
or
mov
push
mov
jo
xor
adcb
mov
mov
cltd
sti
dec
jo
shrl
ljmp
lcall
leave
dec
ficoms
pop
mov
add
iret
std
dec
add
push
sub
pop
adc
cli
push
jnp
push
ficompl
fnclex
inc
and
pop
push
std
lret
xchg
sub
or
mov
push
outsb
in
mov
leave
mov
popa
dec
orl
fisttpll
loop
jmp
xor
pop
sbb
jne
out
add
fistpl
push
fcompl
imul
push
pop
clc
add
mov
imul
out
dec
popf
and
jo
jns
sub
aam
test
test
sub
sbb
add
bound
fnstenv
mov
add
adc
xchg
xchg
sar
and
and
rclb
pop
enter
in
fwait
fwait
cmp
iret
jl
xor
cmp
pop
rol
cltd
in
and
xor
inc
int3
sbb
xchg
mov
test
cmp
xchg
cmc
push
ret
shrb
adc
cmp
adc
adc
push
das
bound
ljmp
mov
ja
jbe
sub
outsb
mov
rcl
and
fisttpl
xor
notb
imul
cli
push
add
mov
cmp
jb
or
ds
mov
call
loopne
inc
lret
sbb
cmp
push
dec
cmpsb
ljmp
int3
push
mov
icebp
movaps
loop
sbb
xorl
cmc
mov
mov
lods
dec
sub
aam
push
mov
mov
cmp
lods
and
cs
xchg
int3
loope
ds
sub
inc
adcl
movsb
pop
push
je
xor
test
out
hlt
push
or
data16
ja
icebp
and
cmp
dec
push
add
dec
and
call
pop
cmp
in
mov
shr
mov
mov
sub
sub
xorl
add
addl
addl
add
dec
jne
leave
ret
dec
mov
push
sbb
call
inc
sub
inc
rol
push
mov
sub
call
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
call
mov
call
call
push
push
push
push
push
push
push
call
mov
pushl
call
push
pushl
call
push
pushl
call
push
push
push
push
push
push
push
call
mov
cmp
jne
pushl
call
push
push
push
push
push
push
push
call
mov
cmp
jne
pushl
call
push
push
push
push
push
push
push
call
mov
pushl
call
push
pushl
call
pushl
call
push
call
call
mov
pushl
call
push
pushl
call
push
pushl
call
call
mov
call
pushl
call
push
push
push
push
push
push
push
call
mov
cmp
jne
call
call
mov
push
push
push
push
push
push
push
call
mov
mov
mov
push
push
push
push
push
push
push
call
mov
cmp
jne
xorl
push
push
push
push
push
push
push
call
mov
cmp
jne
push
push
push
push
push
push
push
call
mov
cmp
jne
addl
push
pushl
call
pushl
call
jmp
call
lea
push
push
push
push
push
push
push
push
call
mov
cmp
jne
push
push
push
push
push
push
push
call
mov
cmp
jne
push
pushl
call
push
push
push
push
push
push
push
call
mov
cmp
jne
push
push
call
call
push
pushl
push
push
push
push
push
push
push
push
call
mov
cmp
jne
mov
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
call
mov
cmp
jne
subl
push
pushl
call
call
addl
push
pushl
call
push
push
push
push
push
push
push
call
mov
cmp
jne
call
call
leave
ret
push
repz
and
adc
testb
out
js
or
jne
enter
