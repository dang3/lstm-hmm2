jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
sub
push
push
push
mov
and
xor
neg
xor
neg
lea
ror
rcl
push
lea
xor
rol
mov
shl
mov
lea
rcr
lea
ror
not
neg
lea
xor
and
ret
neg
mov
xchg
mov
mov
mov
mov
adc
ror
xor
mov
lea
and
lea
lea
mov
and
xchg
xor
lea
adc
not
mov
add
mov
shr
mov
mov
mov
neg
ror
not
mov
xor
add
not
mov
xor
xchg
mov
mov
adc
mov
lea
xor
xor
lea
rcl
mov
push
neg
xchg
lea
mov
lea
rol
mov
rcl
neg
xchg
neg
xor
pop
not
mov
xor
adc
xor
rcr
add
not
neg
mov
ror
not
add
xor
mov
add
mov
adc
xchg
mov
shl
mov
shr
shl
xchg
lea
rol
xor
xor
mov
shr
neg
lea
shl
not
xchg
neg
lea
xor
not
xor
mov
lea
xor
xor
mov
lea
lea
xor
ror
rcl
xor
neg
xor
lea
mov
mov
add
add
xor
lea
mov
mov
xchg
rcr
xor
jmp
xor
rcr
adc
neg
rcr
mov
mov
not
mov
xchg
lea
rcl
ror
mov
xor
xchg
neg
not
lea
xor
neg
xor
adc
shl
ror
neg
mov
rol
mov
lea
lea
neg
ror
xor
xor
neg
not
xor
not
xor
xchg
mov
not
xor
mov
rcl
lea
xor
lea
mov
neg
not
mov
xor
xor
mov
mov
xor
lea
lea
not
mov
lea
mov
rol
mov
lea
xor
not
rcr
mov
mov
mov
mov
lea
push
call
neg
lea
xor
lea
lea
mov
xchg
xor
rcr
rol
mov
mov
xor
movl
lea
xchg
lea
lea
neg
lea
mov
xor
not
mov
lea
neg
not
xor
xor
xchg
rcl
xor
neg
lea
xchg
mov
push
xor
not
shl
xor
xor
call
ror
add
mov
xor
xor
xor
mov
neg
xchg
neg
xor
shl
ror
mov
dec
je
not
xor
and
lea
and
mov
not
xor
mov
mov
lea
rcl
mov
mov
adc
and
xor
lea
mov
rcl
ror
rcr
xor
mov
add
not
add
mov
mov
mov
neg
movl
rcr
xor
lea
lea
not
not
add
shr
and
rol
xchg
xor
xor
not
lea
add
add
lea
xor
not
mov
not
mov
and
lea
push
xor
rol
neg
mov
neg
mov
lea
neg
lea
push
mov
xchg
xor
lea
mov
rol
ror
pushl
xor
lea
mov
mov
mov
mov
lea
pushl
add
not
neg
lea
ror
mov
rcr
call
add
not
xor
mov
shl
not
lea
adc
mov
lea
xor
mov
adc
rcr
mov
rcl
xor
xchg
not
ror
mov
neg
xor
shr
mov
mov
adc
lea
shr
xchg
mov
adc
and
add
xor
not
mov
neg
mov
xchg
mov
xor
lea
xor
lea
mov
mov
lea
adc
xor
mov
mov
xor
xor
lea
xor
add
xor
not
mov
lea
shr
mov
mov
push
mov
mov
rol
and
mov
neg
xor
not
xor
lea
mov
xchg
not
mov
and
mov
mov
popl
lea
mov
shl
mov
add
not
rcr
mov
adc
mov
xor
mov
mov
neg
not
xor
decl
jne
rol
xor
rcr
add
xor
neg
shr
rcr
lea
rcr
not
shl
not
shr
shr
mov
xor
mov
rcr
mov
xor
neg
lea
neg
adc
add
shr
lea
mov
mov
rcr
neg
mov
and
xor
mov
xor
neg
jmp
mov
xor
xor
adc
mov
xor
lea
mov
ret
ljmp
pop
mov
ret
inc
mov
inc
push
mov
ret
xchg
stos
aas
fwait
imul
push
in
cmpsl
jecxz
mov
sub
adc
ja
mov
inc
inc
mov
hlt
jae
mov
je
push
inc
or
dec
mov
mov
mov
add
or
mov
xchg
sahf
or
gs
fwait
jmp
inc
jg
lods
into
hlt
fcomi
dec
insl
add
and
jb
inc
sbb
rcrb
decl
outsb
jb
cwtl
and
ret
cwtl
or
or
cmpsl
or
hlt
adc
adc
subb
cmp
mov
hlt
lret
out
cmpsl
mov
sarl
jnp
mov
ret
cmp
popf
jae
mov
xor
cmp
jl
xchg
ret
sarl
ja
adc
popf
mov
add
add
sarl
add
stos
dec
xchg
jbe
lret
add
pop
push
mov
dec
xchg
or
cmp
add
cmp
xor
mov
aaa
bound
dec
cmp
incl
lods
aam
aas
mov
jg
jl
pop
leave
decl
jno
adcb
iret
ret
mov
adc
inc
imulb
loope
add
add
jno
scas
mov
out
mov
hlt
fdiv
dec
xor
f2xm1
je
jge
cmpb
xor
add
dec
int3
jl
cmpb
lds
pushl
fnop
mov
hlt
or
out
mov
lds
push
je
hlt
hlt
add
les
cmpb
xor
pushl
fildl
jl
pop
leave
decl
jne
popl
mov
test
mov
out
mov
jnp
lods
xchg
sub
mov
popf
lea
jecxz
cmc
inc
xchg
sub
loope
xchg
and
inc
mov
mov
push
push
sub
addl
fs
shlb
inc
mov
test
add
iret
fnstcw
push
xor
into
lods
iret
inc
sbb
mov
add
push
aas
cmp
lods
pushl
fs
adc
enter
inc
icebp
jmp
fnstcw
andl
roll
push
dec
pop
and
imul
inc
mov
out
ljmp
std
xorl
add
icebp
aam
js
inc
in
inc
loope
lods
cltd
add
jmp
mov
scas
jmp
lea
arpl
push
icebp
shl
and
loopne
mov
mov
xor
mov
jecxz
mov
sbb
stc
lret
pop
mov
and
and
mov
push
int3
sbb
leave
cmp
adc
push
inc
dec
shl
inc
leave
push
add
aaa
jecxz
pop
fistps
test
fnstsw
mov
add
filds
cmp
inc
testl
cli
or
mov
jecxz
nop
add
lods
xlat
xor
inc
call
push
inc
int
rep
ret
xor
inc
sahf
pause
mov
or
scas
pop
fldt
stc
and
push
mov
jecxz
movsb
lahf
xor
das
jb
dec
shr
call
mov
jecxz
mov
nop
dec
or
out
mov
mov
testl
fsubrs
pop
inc
out
lcall
add
jae
sub
shll
lock
lret
int
pop
jmp
fnstcw
or
cmp
inc
jl
sbb
or
xor
dec
fs
inc
mov
mov
inc
mov
loopne
xchg
adc
cs
pop
jecxz
mov
mov
mov
dec
inc
cmp
mov
int3
sbb
leave
iret
outsb
testl
loopne
cmpsl
in
adc
add
sbb
add
sbb
xchg
adc
mov
xchg
adc
inc
mov
sbb
scas
adc
jne
pushf
lods
sub
sbb
add
cmp
insl
mov
jecxz
je
mov
sub
sbb
mov
shlb
rcrl
or
jno
sbb
unpcklps
add
cmp
inc
mov
jecxz
stc
cmp
js
filds
adc
pop
or
jb
dec
pop
inc
stc
cmp
int
and
stos
js
xor
adc
inc
jmp
mov
or
cmp
loopne
mov
stos
adc
push
js
test
push
add
pop
fisubl
cmp
jmp
iret
or
addr16
repnz
repz
pop
jge
iret
repnz
push
mov
dec
jmp
sub
dec
sbb
mov
pop
sub
sub
push
mov
mov
jecxz
ljmp
inc
sarl
push
xor
xor
and
orb
jno
sbb
dec
inc
call
test
int3
push
iret
mov
mov
loopne
test
in
jl
xchg
inc
jbe
add
popa
mov
in
cld
cmp
xchg
mov
addr16
pusha
xchg
cmp
test
mov
xor
push
in
out
and
pop
loopne
xor
inc
clc
or
xor
jecxz
mov
sahf
dec
pop
jge
cmp
lods
outsl
adc
jmp
mov
xchg
dec
test
xor
jl
test
pusha
in
xor
inc
seta
inc
mov
adc
inc
mov
jecxz
sarb
jecxz
stc
cmp
mov
in
dec
aaa
mov
int3
pop
shlb
xor
jo
sbb
ret
dec
pop
lret
dec
int
push
inc
push
fidivrl
and
mov
jecxz
pop
add
jecxz
popl
iret
cli
aas
call
dec
dec
inc
repz
leave
cmp
mov
in
fmuls
and
mov
out
iret
les
push
pop
clc
xor
inc
mov
sti
xor
mov
int
das
push
mov
ja
icebp
out
out
mov
jmp
sbb
rorl
aam
xor
mov
lea
push
dec
cmp
dec
test
push
dec
inc
adc
shlb
fs
das
xchg
sub
cld
subb
push
insl
sub
push
mov
sub
jo
in
call
cmp
fmul
lds
inc
push
outsl
push
aam
cmp
inc
inc
mov
repnz
add
adc
pushf
add
je
dec
push
jnp
sti
mov
ficoms
mov
mov
sbb
dec
and
cld
push
dec
sbb
movsl
sbb
mov
in
orl
jg
inc
mov
cmp
dec
cmp
xchg
push
dec
sub
aam
daa
rorb
dec
cmp
pusha
test
lds
mov
push
loopne
xchg
inc
adc
aas
pop
cmp
dec
xorl
push
pushf
sub
sub
push
testb
dec
in
popl
xchg
jbe
lock
mov
loopne
inc
mov
ss
lods
sarl
xor
add
sbb
out
dec
sahf
xor
test
jb
test
repz
ds
push
pushw
bound
or
jmp
inc
or
dec
mov
jle
mov
aas
rclb
pushf
pusha
mov
sbb
in
jl
cmpsb
mov
fxch
add
push
das
mov
lods
add
sbb
push
xor
inc
call
or
dec
sbb
xor
fsub
test
call
mov
les
xchg
aaa
lahf
xchg
or
xor
jo
sbb
in
xor
jg
dec
in
dec
inc
pop
xor
sti
jb
push
mov
mov
pop
repnz
loop
lods
push
out
iret
fldenv
add
stos
adc
imul
jmp
stc
aam
dec
xchg
mov
mov
shrl
int
add
jge
mov
cmc
xor
sar
and
enter
sbb
shlb
test
mov
sti
dec
and
add
inc
imul
mov
imul
in
and
xchg
or
pop
mov
pop
push
outsl
dec
lods
sbb
loope
mov
mov
mov
lret
mov
in
sbb
js
pusha
stos
xorb
or
ret
fidivs
xchg
inc
or
out
sbb
lcall
adc
adc
mov
idivl
pop
in
loop
in
andl
fstpt
out
and
addl
pushf
ficoms
je
loopne
cs
mov
shll
loop
dec
or
cmp
ret
adc
sbb
jo
or
in
scas
sbb
mov
icebp
jmp
xor
addl
sub
pusha
push
fisttpl
mov
xor
inc
mov
or
unpckhps
dec
pushf
pop
scas
popf
dec
inc
testb
pop
pop
maskmovq
fadds
mov
jb
push
xchg
lods
int
xor
dec
mov
xor
mov
push
xchg
inc
shlb
testb
adc
loope
mov
jnp
rorl
mov
xor
mov
fdivl
jns
into
add
loopne
lea
repz
arpl
push
out
pop
mov
shll
inc
xor
or
gs
jo
dec
in
lds
xchg
jbe
jg
adcl
mov
dec
sahf
or
mov
dec
cltd
push
orl
mov
hlt
test
js
loopne
imul
mov
shrl
addr16
push
jbe
les
das
inc
pop
sbbl
loop
xchg
pop
pop
les
lock
jl
dec
fidivrs
ja
movsl
mov
movsb
push
je
insl
mov
lods
faddl
jge
bnd
lods
rorl
mov
ret
ljmp
insl
mov
sub
sbb
ss
leave
cs
int3
mov
add
das
out
dec
fsubr
out
pop
daa
subl
jecxz
sbb
imull
enter
popf
sub
test
jno
mov
add
xor
movsl
clc
lods
iret
jmp
and
outsl
and
int3
sub
inc
data16
dec
pop
mov
mul
add
sub
pop
sbb
repz
nop
repz
pop
mov
push
add
outsl
cmpb
enter
iret
shrl
xor
jno
push
bound
in
add
push
addb
xor
jle
into
xchg
xor
jmp
pop
ds
sub
mov
jb
jae
add
add
mov
push
push
sbb
dec
in
ret
std
mov
lock
lcall
mov
mov
inc
shlb
insb
int3
nop
xor
pop
push
inc
mov
rorl
add
fistps
mov
xchg
out
outsb
je
pusha
mov
sbbl
lods
inc
out
hlt
test
xchg
dec
ficompl
mov
test
or
push
std
sub
pop
lahf
dec
lahf
repnz
iret
ljmp
loop
dec
mov
push
xchg
pop
nopl
lods
push
jge
sbb
aad
imull
insb
cmp
pop
mov
cwtl
movsl
sbb
cmc
push
lcall
inc
sarl
cmp
xchg
fbld
shll
dec
and
out
iret
fadds
xchg
push
psllq
adc
mull
andl
aas
fisttpl
in
ss
imul
and
push
lds
rclb
mov
orl
shll
jae
mov
or
shl
sahf
inc
and
ds
mov
pop
int
mov
mov
filds
mov
in
int3
sbb
jg
cmp
fwait
dec
push
mov
push
into
cmpsl
insl
lods
jbe
lods
or
popa
sub
sub
js
popf
jg
inc
aaa
dec
sbb
xchg
inc
or
stc
das
ja
push
or
or
repnz
enter
mov
xchg
pop
mov
in
jmp
dec
lcall
push
xor
imul
out
adc
xchg
sar
addb
cmp
adc
jge
jo
pop
xor
xor
add
mov
mov
xor
in
inc
adc
cli
in
jp
leave
xchg
pop
inc
dec
loop
nop
mov
jmp
popf
mov
cmpsb
inc
lea
sbb
xchg
sub
sub
sbb
or
cmp
jne
in
jle
mov
pop
or
int3
lods
pop
mov
dec
cmpsb
mov
or
insb
xchg
jne
jecxz
mov
outsl
mov
sub
sub
sub
fbstp
jns
mov
mov
test
clc
insl
sbb
test
jae
mov
clc
or
mov
aas
repz
ret
inc
mov
ficoml
mov
daa
nop
in
fsubrs
sbb
push
sahf
xchg
dec
mov
aam
sbb
xchg
sbb
xlat
call
repz
into
lea
test
xor
inc
jns
xor
cmp
inc
push
xlat
push
mov
mov
in
sbb
stos
push
push
dec
aad
mov
lret
add
enter
adc
loop
fs
testl
test
and
mov
xchg
push
cwtl
into
dec
in
xchg
pop
pop
shl
dec
lds
sarb
add
and
mov
imul
xchg
adc
xchg
sarl
and
and
inc
bound
mov
aad
mov
scas
add
jne
leave
enter
cwtl
or
pusha
push
hlt
jae
mov
add
call
mov
fbstp
xchg
lods
ljmp
ss
adc
xor
mov
loope
sbb
mov
mov
sub
enter
lods
insb
loopne
mov
fwait
sub
int
sub
outsl
mov
cli
push
mov
test
movsl
aaa
in
dec
add
je
aaa
jns
rolb
or
add
pop
add
les
leave
sub
mov
and
mov
enter
lret
sub
push
test
test
mov
xchg
adc
imul
push
cwtl
cli
sub
push
sbbb
rorb
loopne
lods
scas
sbb
sub
mov
inc
faddl
mov
sub
jnp
add
mov
fwait
dec
loope
aad
sbb
shrb
lods
cltd
sub
xchg
imul
adc
int
add
push
add
fimull
sbb
jnp
les
cmp
enter
xchg
fdivrl
or
inc
pop
xor
or
and
xchg
push
xlat
and
insb
or
lods
mov
adc
pop
ret
jo
inc
lock
or
push
jbe
fucomp
xor
sbb
jg
mov
in
sbb
test
ret
je
loope
dec
cmpsl
clc
out
mov
mov
xchg
pop
add
and
shll
dec
inc
loopne
ret
shlb
or
int3
or
sub
push
fidivl
xchg
push
sti
and
pop
in
jp
int3
and
xor
or
or
push
pop
inc
lahf
dec
call
xor
cmp
bound
shr
mov
sub
dec
notl
ljmp
shl
pusha
fwait
repnz
mov
or
mov
mov
cmp
mov
and
lahf
frstor
mov
in
not
shl
loope
ja
adc
push
fsubrl
push
mov
dec
test
fisttps
or
pop
adc
pop
xchg
mov
pop
mov
jle
aaa
xor
popf
xchg
loop
negl
inc
repz
inc
pop
fildl
xor
xor
stos
dec
adc
fwait
pop
xchg
inc
mov
jb
or
into
aas
or
aad
imul
movsl
into
roll
fmul
loopne
add
pop
movsb
inc
cmpsl
sahf
fldt
mov
movsl
aam
aam
data16
adc
outsl
cmpsb
dec
enter
adc
push
nop
pop
ret
imul
sub
ret
pop
mov
push
jecxz
inc
in
dec
in
inc
int
cmp
lods
mov
jno
xor
or
dec
into
sbb
pop
dec
inc
inc
xchg
add
jl
xchg
dec
fcmovnb
popa
sub
mov
sti
enter
popf
cld
outsb
cmp
in
out
xor
mov
cs
sub
mov
xchg
jmp
jo
or
lret
lods
lds
sub
inc
pop
jno
mov
add
and
rol
ret
div
sti
push
push
dec
add
fldln2
or
dec
loopne
sarl
and
outsb
adc
push
pusha
cmp
sbb
pop
adcb
jns
or
or
adc
sbb
xchg
clc
int
push
icebp
lods
das
dec
clc
aas
adc
rcrl
adc
aad
adc
iret
inc
rcr
inc
pop
add
pushf
test
inc
aaa
or
in
pop
push
mov
js
push
movsl
mov
jo
fmul
sbb
mov
fmuls
cmp
inc
stos
lods
sarb
jo
jae
pusha
ds
pop
sub
mov
push
in
fsubrs
jl
push
or
rorb
and
gs
imul
inc
add
sub
pusha
xor
lret
sarl
lods
imull
push
cmp
pop
xchg
jmp
pop
xlat
sbb
test
fs
cmp
cmpsl
leave
push
add
enter
insl
aaa
mov
fmuls
loopne
adc
aam
push
pusha
add
xor
and
std
jb
aad
les
scas
jl
test
lea
cli
gs
loop
and
scas
mov
rolb
dec
outsl
addr16
mov
ret
gs
mov
or
fimull
dec
xchg
adc
jbe
rcrl
jae
sub
mov
push
stos
push
pop
test
push
dec
dec
fdivrs
pushf
push
scas
dec
popf
enter
xchg
mov
xchg
jne
jbe
inc
adc
xchg
mov
mov
dec
sbb
or
sub
pop
sub
mov
cmp
jle
fadd
jg
and
mov
push
leave
movsb
mov
add
inc
add
sbb
cld
pushf
push
stos
dec
or
enter
push
mov
jecxz
xor
push
bt
add
inc
pop
out
mov
hlt
and
jle
and
icebp
jmp
mov
leave
jnp
mov
mov
cli
adc
mov
mov
sub
lcall
dec
fcompl
pusha
test
and
adc
cmp
dec
push
sub
and
cmp
sti
mov
push
aad
aad
sbb
xor
je
or
jo
dec
sti
out
pop
fsubr
das
hlt
pop
out
push
mul
rolb
inc
cmp
lock
push
pop
xor
add
cli
leave
adc
pop
in
adc
mov
adc
sti
xor
inc
and
ret
xchg
xor
sub
fstpl
or
leave
lret
jmp
sub
fwait
les
dec
push
mov
jno,pt
inc
jns
cmc
popa
scas
mov
lret
int
loope
pop
add
sti
xor
sub
bound
or
nop
shr
pushf
cmpsl
adc
sbb
insb
movsb
or
mov
in
adc
dec
jae
inc
addr16
popf
push
dec
dec
arpl
sub
sbb
shrl
mov
dec
mov
roll
loopne
int
sbb
pop
xor
cltd
shrb
mov
xchg
push
ret
xchg
ss
scas
jp
xchg
sbb
rolb
and
mulb
xchg
daa
cmpl
ret
lds
into
mov
jp
adc
lahf
push
rcr
xor
xchg
out
cmp
lret
fidivrl
and
pop
jno
add
xor
test
ljmp
cld
add
xor
data16
adc
add
inc
adc
inc
jmp
mov
outsb
scas
adc
jmp
mov
fcoms
rcrl
das
fisttpl
aad
cmp
dec
and
sbb
dec
xor
pminsw
push
and
mov
div
ret
mov
pusha
jmp
mov
dec
iret
dec
or
or
jg
test
scas
cli
jge
sbb
xchg
xchg
jo
std
clc
fdivs
mov
clc
sub
pop
add
pop
adcl
addb
mov
and
js
sbb
imul
lret
or
pop
gs
sbb
xchg
sub
inc
fdivrl
sub
mov
aad
int
icebp
sub
mov
js
add
or
jae
xor
pushf
fdivrl
rcl
ja
roll
jge
inc
ret
add
gs
in
inc
add
push
popf
sarl
jns
inc
fidivrs
ds
stos
test
stos
mov
int
sub
fdiv
mov
popf
hlt
js
adc
mov
or
jp
test
aaa
and
mov
inc
mov
push
lods
and
leave
push
std
in
xor
jns
imul
push
sub
cmp
inc
and
and
mov
aas
mov
push
into
fwait
sub
cli
jno
mov
pushf
cmp
sbb
pop
adc
dec
lcall
nop
int
rcrb
and
loopne
mov
ja
push
xchg
sub
repnz
sarl
lods
repz
adc
inc
jno
es
xor
sbb
push
in
or
xor
stos
ss
lods
and
scas
jb
or
push
xor
int3
sbb
jnp
xor
jae
fdivl
loop
xorl
xor
or
clc
sahf
ret
call
and
push
addl
aad
insl
inc
ret
in
in
test
inc
das
mov
out
sbb
pop
push
scas
repz
dec
mov
inc
roll
icebp
iret
push
lahf
inc
pop
icebp
sahf
pushf
loope
lahf
mov
int
ficompl
and
ja
dec
xchg
sarl
sbb
mov
cmp
divb
pop
int
xor
adc
mov
dec
fidivrs
je
xchg
mov
jle
stos
push
clc
and
popf
clc
cs
jno
stos
dec
mov
iret
mov
adc
add
inc
sub
fs
into
mov
adc
pop
lret
inc
sub
outsl
xchg
sti
and
sbb
hlt
lret
and
stc
xchg
out
cwtl
xor
hlt
dec
push
cltd
mov
mov
fcoml
inc
int3
cwtl
and
dec
mov
cmpsb
xchg
push
cmp
sbb
stos
xchg
pop
test
in
ret
cmp
bnd
inc
or
jmp
or
pop
push
sub
movsl
outsb
addr16
lods
cmp
imul
push
es
icebp
cmp
and
outsl
xchg
shll
mov
push
pushf
mov
sbb
int
loopne
mov
popa
imul
pop
rorl
mov
add
or
psubq
sub
inc
lret
cmp
nop
int3
repz
cltd
mov
cltd
orb
cltd
cmc
das
in
cmpsb
nop
add
addl
xchg
aad
pushf
sub
mov
xchg
push
or
mov
jge
clc
andb
pushl
jg
mov
jae
ret
scas
imul
lret
shll
push
clc
dec
adc
std
popf
mov
pushf
push
test
addr16
daa
cld
sbbb
push
loope
loopne
mov
aas
pop
fmulp
and
or
lret
add
repz
xorl
clc
lret
aam
fistpll
or
dec
gs
rolb
jg
mov
push
iret
and
sbb
inc
lcall
imul
pop
pushl
inc
out
mov
lea
scas
loopne
adc
dec
insl
mov
add
sub
das
ljmp
and
pop
rol
cmp
add
add
sahf
mov
and
repnz
cmp
test
mov
daa
push
adc
add
ficoms
mov
or
lahf
pop
ljmp
dec
stos
fcompl
xchg
into
mov
xchg
pop
xchg
ret
repz
es
fbstp
faddl
push
lods
sbb
daa
sub
sti
adc
jae
je
pop
xchg
dec
mull
inc
dec
test
mov
jb
push
adc
ffree
xchg
repnz
out
pop
jge
jno
xchg
push
jbe
mov
ss
xchg
ds
icebp
mov
movsl
shll
pop
mov
sub
push
add
dec
xchg
shlb
cld
xor
cmp
sub
cmp
push
mov
into
mov
pop
mov
xchg
xor
insl
out
lods
cmpsb
outsl
aaa
xchg
push
add
stc
leave
dec
and
sub
or
adc
js
hlt
mov
inc
test
rolb
cmp
cbtw
dec
add
fstl
out
pop
clc
and
ret
cmp
leave
outsb
xchg
popa
jnp
pop
cmp
je
adc
sbb
sbb
pop
push
sbb
repz
js
jb
pop
inc
pop
fwait
mov
out
pop
insb
xor
sub
pop
rcrl
hlt
push
nop
scas
add
xchg
cmp
mov
and
outsb
and
fsubrl
lcall
xchg
mov
dec
into
pop
adc
leave
ss
icebp
push
cmpl
jmp
jno
adc
clc
mov
das
repz
mov
enter
rorl
xlat
cmp
shlb
push
ja
inc
push
fcoms
inc
pop
mov
jmp
mov
aaa
or
imul
inc
and
dec
inc
aas
xchg
imul
xchg
pusha
fs
loope
test
shll
dec
into
neg
inc
lea
mov
xor
mov
fucomi
sbb
movsl
push
cmp
scas
push
lods
mov
cmp
pop
loop
dec
or
fcoms
mov
jae
jnp
push
fiadds
out
leave
cmpsl
rcr
cwtl
cmp
push
movb
or
sbb
jne
cs
lods
mov
jmp
adc
mov
imul
negb
adc
add
pop
pop
mov
inc
xchg
pusha
xchg
repnz
lds
inc
into
insl
add
movsw
xor
hlt
fwait
fs
sbb
stc
mov
ror
xorl
in
jno
or
mov
jno
push
pusha
mov
add
inc
lahf
xchg
mov
roll
xchg
adc
movsb
push
jne
leave
jmp
in
out
dec
cli
sub
mov
cli
mov
cmc
mov
mov
icebp
and
sbbb
push
sub
or
lock
int3
lret
outsb
inc
or
jbe
ret
loopne
cmc
mov
fldt
add
nop
cmpsb
jae
mov
mov
mov
mov
mov
nop
loop
push
subl
inc
pop
pop
andb
mov
add
pop
insl
je
outsl
jge
mov
movsl
mov
jmp
push
mov
bound
cmp
sti
in
sub
mov
pop
mov
das
rclb
ja
das
push
cli
fdivr
dec
out
add
int3
das
or
mov
dec
movsl
js
test
out
jl
sub
inc
negb
mov
rorl
lods
icebp
and
sbb
inc
xchg
xor
push
mov
cmp
jae
sbb
mov
cmc
pop
pop
or
cmp
aaa
cwtl
nop
hlt
loope
cltd
fdivp
jno
add
cmpsb
test
push
mov
adc
jne
or
xor
sbb
addr16
mulb
sahf
mov
dec
insb
or
jl
pop
jae
mov
es
ret
mov
mov
sbb
jle
adcb
pop
outsb
jmp
gs
pop
test
jl
pop
push
jae
xor
pop
and
xchg
sub
push
fcomp
push
mov
add
push
mov
xchg
lods
cmp
cmpsb
popa
jne
sbb
jl
lret
cwtl
and
adcl
xchg
test
es
push
push
test
decl
sub
xchg
mov
adc
xor
mov
leave
lret
cmp
sbb
insl
sbb
pop
psllq
pop
test
or
or
pop
jns
aas
addr16
adcb
xor
inc
es
jo
inc
adc
jge
dec
clc
add
add
enter
mov
lods
leave
ret
sbb
ja
or
xor
mov
mov
mov
out
xchg
pop
out
sub
xchg
dec
cmpsb
cli
jmp
jl
das
adc
daa
std
sub
mov
int3
jo
mov
cwtl
add
stc
adc
mov
nop
sub
aaa
lret
in
loope
repz
negb
cmpsb
ret
loop
sbb
xchg
mov
xchg
cwtl
and
push
das
repnz
iret
ret
push
fisubs
push
fcoms
and
cmp
adc
fisttpl
xchg
lcall
bound
in
inc
mov
dec
iret
mov
aad
ror
ficoms
and
xchg
and
ja
hlt
in
mov
cmp
arpl
aad
loop
mov
icebp
nop
insb
cmc
sub
jl
push
and
sub
pop
sbb
std
dec
je
or
repz
pop
fcoml
inc
and
ret
dec
mov
sti
jb
mov
push
ss
cmp
pop
pop
inc
addr16
subl
or
cmp
movsb
mov
inc
insl
push
xchg
inc
pop
lret
fdivrs
fidivl
mov
pop
pop
stos
adc
mov
and
jbe
imul
jmp
sbb
out
insl
sub
mov
stc
test
push
xchg
sahf
dec
mov
mov
and
cmpsb
subl
cmp
cmc
mov
sbb
push
aam
sub
xor
xchg
lahf
ds
add
cmp
hlt
aas
and
mov
mov
daa
inc
test
xchg
dec
mov
scas
xor
cltd
std
popa
sub
jecxz
mov
bound
lea
call
fsubl
out
movsl
xor
jns
sahf
cs
xchg
sbb
jmp
mov
daa
pop
xor
xchg
loop
push
xor
mov
push
ja
jns
sbb
jnp
dec
inc
test
mov
mov
int3
scas
mov
lret
add
dec
xchg
inc
xchg
leave
xor
xchg
add
mov
fs
xchg
mov
mov
fmuls
cmp
negl
mov
in
dec
xor
mov
orb
pop
xchg
pop
cmpsl
dec
xlat
xor
loope
adc
xchg
arpl
sub
mov
inc
adc
loop
xor
xor
andl
pop
insb
and
cmpb
jae
and
pop
lea
mov
mov
or
jmp
sub
loope
dec
inc
xlat
lods
push
adc
dec
xor
xlat
lea
inc
mov
inc
ja
pushf
rorl
mov
ss
mov
test
data16
lds
sti
sub
push
in
ud2
clc
adc
mov
mov
adc
stos
xchg
adc
addr16
mov
dec
mov
ljmp
aaa
cli
dec
adcb
sub
pop
push
cwtl
fdivs
ret
rcr
ja
mov
or
jno
shr
and
dec
jae
cwtl
cwtl
insl
mov
mov
les
adc
inc
xchg
shr
xchg
mov
outsl
mov
push
push
mov
add
push
scas
out
mov
lret
pop
lock
pop
enter
dec
cmp
sub
jecxz
addb
jge
repz
mov
div
pop
mov
xchg
push
adc
stos
iret
and
xor
jp
push
test
hlt
mov
or
adc
sbb
out
xchg
iret
sub
leave
mull
stos
movb
daa
push
adc
fdivp
xor
jg
jg
inc
mov
xor
in
inc
iret
iret
cmp
sub
push
shl
sub
lcall
mov
int3
pop
pop
mov
xchg
sti
and
data16
in
cmp
test
sub
nop
and
sbb
arpl
jl
mov
cmpl
dec
xor
jle
mov
divl
sbb
pop
stos
push
cmpsl
pop
adc
mov
lret
mov
adc
push
pop
movsb
and
jg
into
mov
push
icebp
pusha
stc
and
js
cmpsb
xchg
shrb
sub
pop
repnz
lods
sti
dec
aas
ljmp
hlt
data16
sub
xor
pusha
sbb
xor
rcrb
bound
xor
add
in
hlt
and
adc
fcomps
ret
ss
lds
sti
mov
in
mov
lret
sbb
xchg
push
adc
cmpsb
clc
daa
ja
std
push
adc
mov
dec
push
jp
test
xchg
data16
cmp
adc
lret
lods
jmp
xor
outsl
push
sbb
ja
sti
cld
int3
sub
jns
and
sub
mov
xor
xchg
xchg
adc
jecxz
mov
xor
or
adc
xchg
pop
int3
cwtl
lret
stc
and
sub
sub
aas
rcrb
pop
lods
outsl
aaa
cs
pop
mov
inc
push
mov
mov
int
sbb
mov
inc
mov
ljmp
cmpsb
fisttpl
sbb
adcl
dec
outsb
pop
dec
fnstsw
out
pop
outsl
aad
mov
xchg
adc
jge
movsb
jmp
or
pop
leave
shlb
push
test
sbb
dec
leave
lret
mov
fsts
cmpb
sub
cwtl
cvtps2pi
ret
xchg
fmull
add
in
shrb
dec
jmp
pop
out
stc
add
push
fwait
jg
adc
push
in
outsb
lods
jg
mov
and
je
scas
cltd
xchg
inc
gs
cmpb
ss
inc
jo
jecxz
cmp
cmp
int
xchg
dec
out
xor
cmpsl
shlb
xchg
and
xchg
adc
pusha
mov
jae
inc
out
and
mov
push
adc
cmp
push
aad
test
out
cli
xor
sbb
addr16
loopne
fsubr
push
push
push
pushf
cmp
cmpb
xlat
jg
sub
imul
pop
mov
mov
inc
testl
push
sub
sahf
xchg
test
jo
or
xor
dec
inc
dec
loopne
lock
aad
gs
jne
cmpsl
insl
jle
fistps
jns
push
fnstsw
add
adc
rolb
push
cmp
xchg
and
sbbb
inc
push
xchg
out
aam
mov
cmp
or
add
out
les
xor
or
inc
cmovbe
cli
lods
arpl
sbb
xor
xor
mov
mov
daa
jg
les
mov
add
jge,pn
push
inc
out
and
in
cmp
add
cmpl
sub
dec
rcl
cs
int
ffreep
inc
jl
pop
lods
aam
aam
mov
loope
fs
pop
and
push
sti
and
call
fdivl
sti
lret
mov
inc
ss
ja
jmp
inc
inc
in
cmp
adc
lea
std
ljmp
out
in
and
pop
test
add
js
xor
dec
fstpt
or
gs
add
lods
pusha
int
xchg
sub
push
in
inc
mov
sbb
jbe
inc
push
sahf
in
hlt
jnp
xor
mov
cs
mov
xor
addr16
inc
mov
adc
or
sti
mov
lock
sbb
mov
imul
imul
in
icebp
pminsw
mov
pop
addr16
and
pop
lea
xchg
or
loope
or
and
jno
aaa
xlat
dec
shl
call
popa
mov
xor
sub
sub
daa
jo
cltd
jnp
push
mov
lods
jo
call
pusha
int
inc
adc
fdivrl
lods
push
inc
aam
mov
xor
adc
cmp
jb
scas
jae
cmp
fidivrl
dec
sbb
iret
flds
ret
in
loopne
movsb
pop
and
xchg
and
in
add
xor
fistl
sti
adc
pop
push
adc
pop
lret
aaa
sub
aad
popa
movsb
ret
lock
stc
aaa
xor
mov
add
loopne
jns
push
xorb
jecxz
rorb
lahf
add
and
stos
cwtl
ret
pushf
mov
xchg
push
lds
shlb
ret
daa
mov
xchg
jg
xchg
push
fisubs
dec
mov
push
andb
arpl
xchg
repz
int3
popa
out
fildl
push
movsl
and
pop
mov
pop
inc
xchg
jo
add
arpl
pop
inc
mov
add
push
mov
cltd
dec
out
aam
mov
js
sub
cmp
ret
push
neg
xchg
xchg
sub
cmp
xor
sub
xor
jmp
arpl
mov
outsl
iret
sar
and
push
pop
ja
sbb
xchg
push
xchg
ret
push
xor
lds
lods
das
cmpsl
inc
push
push
mov
mov
jae
pop
in
and
push
dec
jl
arpl
fs
mov
dec
jno
icebp
pop
xchg
mov
mov
add
aaa
adc
sbb
or
jge
fwait
lcall
out
ljmp
adc
rclb
iret
inc
leave
add
inc
mov
mov
shr
pop
mov
jb
imul
sub
push
mov
and
dec
pop
les
in
call
cmc
daa
jnp
mov
adc
inc
lcall
fsts
lods
repz
aaa
sub
xor
fs
gs
mov
dec
je
push
add
fwait
js
repnz
gs
cli
adc
into
pop
jae
xchg
arpl
and
imul
negb
jb
pop
in
sbb
scas
out
les
cli
mov
add
negl
sti
das
xor
mov
mov
jl
roll
jl
dec
outsb
sbb
fstpl
fsubrl
or
add
adc
or
lret
jns
jmp
mov
std
pop
test
sarl
and
jbe
das
mov
and
mov
imul
ja
inc
mov
fs
in
or
jp
push
jg
and
icebp
push
mov
sbb
fs
or
jle
mov
mov
fnstenv
mov
jo
into
mov
adc
adc
cld
mov
ja
jae
stos
sub
mov
inc
lahf
pop
mov
cmp
dec
shrl
adc
inc
int3
shrb
dec
and
fbstp
cld
stos
pushf
repnz
aad
sbb
popf
or
in
out
movsl
jmp
imul
xor
fcom
call
fidivs
or
mov
shrb
mov
lea
shrl
gs
es
mull
std
adc
sti
es
fildll
roll
rorl
xchg
nop
xchg
mov
lahf
xlat
inc
cmpsb
add
inc
jns
sub
gs
jecxz
or
xchg
or
call
fisubrs
test
cmc
mov
dec
jecxz
into
fcompp
push
sbb
push
es
sub
rol
int3
imulb
xor
sbb
shll
aam
int3
cmc
mov
push
repz
sub
fldl
ss
dec
lcall
dec
fstpt
inc
shrl
xchg
clc
aas
inc
aas
nop
and
jnp
jge
fwait
int3
xor
and
into
jge
into
pop
daa
pop
xchg
push
mov
push
mov
adc
out
xor
pop
xchg
adc
cwtl
xchg
call
mov
inc
push
mov
push
or
fwait
jmp
cmp
or
cmp
je
shrl
fs
lret
adc
xchg
jns
add
jns
sbb
push
call
or
nop
mov
insl
clc
subb
push
add
jmp
push
stos
cmp
xlat
mov
mov
xchg
jg
outsl
divl
mov
icebp
dec
fldenv
int
jae
fnsetpm(287
mov
sbb
into
and
fsubr
pusha
rcrl
test
in
xchg
add
inc
push
sti
pop
inc
push
push
mov
bound
into
xchg
mov
mov
aam
pop
xor
jle
out
lds
adc
sbb
pop
sbb
sub
push
fcmovu
mov
dec
pop
mov
loop
xor
or
lock
push
mov
jb
and
xor
push
int
push
push
repz
dec
push
and
test
fcompl
mov
lret
out
test
int3
add
add
fwait
sub
sub
stos
cwtl
rcll
inc
enter
jg
or
shrb
jbe
test
movsb
fs
in
es
test
sbb
push
inc
mov
lcall
mov
dec
inc
ja
adc
das
xchg
jge
xor
xchg
sub
jo
inc
add
in
rorl
jns
jb
mov
fsts
aaa
sub
add
das
dec
rorl
ret
inc
pop
cmp
out
mov
xor
xlat
and
aas
inc
aam
enter
and
test
xlat
outsb
add
aam
popa
jge
das
mov
adc
or
xchg
stc
outsl
cmp
outsb
test
leave
fcomip
aam
arpl
in
push
into
lds
sub
popf
repz
adc
mov
and
inc
sarb
shrb
sahf
add
and
or
cmp
push
xchg
pop
jnp
mov
mov
xorb
mov
xchg
cmp
push
inc
daa
popf
in
sbb
dec
inc
out
stc
lds
pop
mov
fisttpl
lods
mov
cld
push
mov
bound
mov
push
mov
pop
inc
dec
or
ja
or
leave
sti
leave
mov
adc
pop
imul
fcomps
xlat
push
add
std
add
add
mov
push
mov
sbb
clc
lods
fbld
jb
outsl
jne
pop
mov
xchg
in
sub
cmp
rcl
jl
xchg
lods
adc
or
aas
mov
xor
jmp
movsb
dec
dec
inc
lret
inc
and
in
aam
adc
filds
addr16
ret
inc
iret
ja
mov
sahf
or
xchg
push
mov
jno
add
jbe
cmp
out
outsb
jns
call
pop
rsqrtps
or
data16
ja
inc
imul
imul
push
jno
aad
pop
jbe
nop
jns
adc
scas
mov
in
int
xor
and
adc
push
or
ret
dec
lret
lds
or
test
ret
mov
push
rcrb
pop
aaa
or
and
jns
jecxz
push
fisubrs
pop
sahf
sub
stc
dec
mov
js
or
gs
dec
add
rcr
push
int3
int
and
lcall
imul
mov
cmpsl
in
sbb
mov
roll
mov
adc
inc
mov
or
imul
xor
call
jo
dec
popa
das
dec
add
mov
xchg
rcrl
iret
out
and
shll
jnp
mov
int3
les
in
mov
sbb
mov
jecxz
nop
les
dec
xchg
xrelease
mov
out
bound
xor
lds
pusha
mov
lock
test
out
fiadds
pop
mov
xchg
add
jae
ljmp
push
testb
mov
ja
out
jg
lods
mov
aas
inc
jg
pusha
cs
shlb
push
add
ret
ds
xchg
popf
dec
sbb
dec
and
movsl
das
inc
test
cwtl
jbe
ds
push
pop
adc
lret
push
fsubrs
add
mov
add
in
jae
xor
test
ret
add
subl
mov
mov
leave
mov
pop
ds
test
lds
mov
in
shlb
dec
and
or
rcrl
pop
jp
xchg
push
jb
pop
imull
mov
xchg
les
int
inc
mov
int3
mov
or
adc
sti
fildl
pop
das
add
hlt
adc
push
xchg
jnp
xlat
pop
dec
cli
push
push
adc
sahf
push
jl
sbb
adc
push
sbb
push
out
jne
or
dec
mov
push
cmpsl
mov
sbb
out
jmp
push
ss
adc
jbe
xchg
adc
add
mov
dec
fists
mov
test
xor
pop
add
add
xor
cmpsl
pop
leave
ficoml
inc
loopne
out
xor
loope
repz
pop
sbb
adc
subb
fidivs
inc
roll
mov
xor
adc
sub
lock
and
inc
xor
fisttpl
hlt
xchg
sub
mov
mov
jle
hlt
fs
addr16
outsl
mov
repz
xlat
lods
xorl
test
pop
or
mov
pop
scas
outsb
pusha
jo
into
xchg
push
xor
ds
dec
add
xor
push
insb
add
or
inc
fistl
jg
lret
adc
mov
imul
aas
insb
xor
test
je
imul
cli
pop
xor
fcoml
in
popf
icebp
mov
jns
shll
mov
xchg
mov
pop
sbb
cmp
mov
mov
push
hlt
adc
xchg
push
divb
pop
neg
sti
repnz
pop
bound
cmp
sub
ss
jmp
in
dec
fisubrs
mov
xor
lret
sbb
into
xchg
pop
fs
clc
cmp
repz
push
clc
and
sub
jmp
xchg
repnz
fwait
movsb
mov
mov
dec
push
cmpsb
jge
xchg
addr16
cli
fwait
push
mov
dec
insb
addr16
rorl
dec
daa
cmp
cli
add
idiv
jbe
jl
test
cwtl
mov
pushf
mov
xchg
dec
mov
xchg
xchg
inc
sti
arpl
daa
mov
in
lods
bound
hlt
jno
mov
daa
push
sub
enter
add
xor
lods
pop
xor
xchg
and
test
ret
mov
mov
pop
addr16
xor
and
jp
and
pusha
cmp
in
dec
adc
sbb
cltd
mov
and
sub
sahf
mov
ja
fadds
jns
adc
lcall
sbb
dec
repz
sub
dec
loope
stc
adc
aaa
sbb
and
cmpsb
test
test
inc
dec
jge
xchg
popa
mov
xchg
lods
mov
cmp
push
aaa
aas
add
dec
movsl
lods
mov
je
cmp
adc
sub
mov
add
lcall
sub
sahf
dec
stos
test
mov
cmp
dec
jmp
push
mov
nop
sbb
push
adc
add
scas
or
arpl
lds
addr16
in
dec
or
jge
inc
add
mov
push
add
pop
add
leave
lcall
and
arpl
shrl
stos
mov
add
lret
loopne
xor
shlb
mov
sbb
dec
lcall
xor
insl
pop
cmp
push
sbb
mov
das
daa
push
setbe
arpl
sbb
xor
inc
pop
adc
inc
cmpb
int
js
or
and
lret
icebp
lds
and
inc
push
ljmp
add
xchg
jnp
sahf
dec
add
xor
sub
sbb
mov
xor
pop
pop
jg
add
lods
popf
ljmp
imul
movsl
xor
adc
ret
insl
movsb
inc
shrl
adc
pop
push
cli
push
sbb
mov
das
push
dec
sbb
fsts
jno
hlt
mov
int
inc
leave
rcrl
js
in
xchg
repz
and
add
fucomip
sbb
mov
mov
mov
dec
scas
push
nop
inc
push
adc
mov
and
cmp
rcll
xchg
dec
fisttpl
push
add
aas
pop
daa
cmp
cmc
sbb
pop
shrl
in
lret
xchg
repz
cmpsl
jg
sub
fists
out
sbb
lock
ss
push
mov
push
popa
addr16
adc
jae
shrb
push
pop
or
push
clc
push
out
je
imul
int
out
les
stc
out
int3
xorl
in
sub
call
xor
daa
aad
or
push
lods
pushl
add
xchg
ret
push
add
add
cld
lods
xor
dec
insl
sub
and
filds
call
test
lret
loopne
jo
outsb
mov
cmpsl
add
mov
add
adc
shll
cmp
and
mov
jae
loopne
xchg
es
pop
loope
hlt
mull
das
mov
jae
or
ja
sub
pop
push
les
ljmp
push
dec
xor
repz
ret
or
and
pop
push
jg
std
sbb
arpl
daa
add
mov
add
repz
jp
outsl
andb
mov
ljmp
push
dec
xchg
push
int3
out
pop
mov
jl
pusha
mov
mov
xor
push
imul
sub
outsb
arpl
mov
mov
out
shlb
inc
push
mov
xor
iret
imul
push
mov
sti
cmpl
ja
cmp
mov
shll
repz
xchg
enter
sbb
mov
mov
bound
clc
cmp
scas
push
jge
sti
cmpb
shlb
inc
fsts
fisubrl
sub
decb
arpl
clc
cmp
sub
jecxz
iret
dec
repnz
movsb
and
or
or
xchg
js
and
addr16
add
gs
or
movl
les
mov
icebp
icebp
pop
paddusw
cmp
xlat
fsubs
dec
or
shrb
int3
ljmp
ja
pop
icebp
cmp
lret
cli
in
js
mov
sahf
mov
inc
or
inc
mov
push
movl
jb
aas
sub
xchg
dec
ficompl
jnp
jns
popf
movsl
cld
mov
das
cs
cli
popa
dec
or
mov
test
popf
push
push
and
and
inc
adc
shl
adc
les
xor
in
sbbl
test
mov
enter
rolb
in
pop
in
and
push
imul
cmp
sub
push
pop
rcll
outsb
xor
push
dec
pop
ret
pop
mov
or
push
addb
shrl
icebp
xchg
xchg
or
mov
lcall
adc
dec
orl
mov
and
adc
mov
inc
cmp
mov
xor
mov
jge
mov
mov
adcl
add
pop
stos
and
mov
pop
lods
add
loope
fmuls
lods
mov
loop
add
scas
mov
inc
mov
rep
outsb
jmp
adc
xchg
inc
pop
pop
stos
adc
ljmp
jb
les
adc
pop
aam
out
push
shl
and
mov
or
dec
fmull
testl
pop
and
sahf
sub
int3
cmp
mov
mov
scas
cmp
sbb
sub
or
aas
pop
add
mov
inc
in
fs
shll
add
or
out
test
push
iret
in
mov
cmp
sbb
push
dec
and
mov
mov
cs
in
jno
popa
and
mov
out
orl
pusha
sub
das
pop
mov
out
int3
pop
xchg
sub
les
inc
in
ds
in
ds
dec
dec
int3
icebp
aas
inc
lock
fucomip
ror
rcrl
mov
jae
adc
xor
mov
cwtl
fidivl
loopne
test
sbb
pusha
or
mov
mov
sbb
push
xchg
add
in
rorb
lods
in
mov
loopne
jbe
mov
test
aam
fs
mov
mov
jae
push
cs
jne
sub
and
int3
jp
pusha
xor
mov
push
insl
inc
loope
sahf
xor
mov
mov
scas
mov
xchg
mov
xchg
fcmovnbe
jmp
dec
xor
in
addr16
xchg
mov
stc
xor
inc
in
lret
inc
cmp
mov
aaa
sti
jl
imulb
add
fwait
imul
inc
jno
inc
jb
bound
mov
mov
fiaddl
test
xlat
push
mov
and
cmp
loop
dec
mov
push
ljmp
pop
std
das
push
jl
fimull
cmp
ret
pop
mov
clc
mov
aad
xchg
mov
adcl
mov
divl
fcomi
mov
ret
stc
xchg
lds
add
sbb
int3
out
inc
push
rcl
sbb
adc
add
push
and
push
cld
dec
roll
lds
sbb
add
adc
mov
int3
mov
pop
das
cltd
aam
sti
xchg
mov
mov
pop
sbb
pop
pop
and
mov
icebp
hlt
push
dec
hlt
mov
xor
pop
jo
insb
in
sbb
sub
pop
mov
and
scas
mov
jo
sub
cmp
xor
and
adc
push
in
mov
push
dec
test
mov
mov
cwtl
pop
and
push
stc
sub
dec
fstpt
lret
inc
das
ja
inc
sub
pop
dec
mov
pop
push
adc
jg
inc
into
dec
fcompp
and
mov
and
dec
movsb
arpl
cmp
add
mov
jl
test
fs
rorb
repz
les
mov
clc
jecxz
int
insb
testb
aas
jl
inc
dec
cli
shll
xor
popa
int
jae
scas
xor
and
mov
lods
int3
scas
and
push
dec
fimull
jbe
stos
push
ja
pop
pop
out
dec
stos
push
lea
xchg
ljmp
push
pop
sub
and
adc
inc
inc
mov
in
mov
movsb
mov
pushf
pop
movsb
sub
jbe
xor
addr16
sbb
cwtl
outsl
dec
add
stos
insb
addr16
adc
test
xchg
jno
or
jmp
jmp
pusha
outsb
and
mov
cmpsb
sbb
xor
lds
call
sbb
xor
or
xchg
jge
stos
je
jbe
and
xor
mov
jg
jle
stos
jmp
cltd
lea
in
cmp
or
andl
xchg
jno
fcomps
js
idiv
add
push
js
push
dec
fstpt
in
fcmovnb
sub
cltd
add
lea
fisubl
popf
mov
rolb
pop
or
push
cld
pop
add
das
popf
ret
cltd
add
cmpsb
test
push
lahf
push
xor
mov
out
sti
popf
sbb
cmp
sub
mov
xchg
adc
and
xchg
fbstp
push
imul
pop
out
pop
mov
mov
jae
addr16
dec
call
xchg
dec
mov
dec
fistpll
loope
adc
xchg
insb
mov
pop
and
aaa
jae
js
adc
mov
sbb
mov
or
inc
out
dec
mov
lahf
adc
sub
inc
call
leave
imul
bndstx
outsb
les
fldenv
cmpsl
and
mov
pop
cwtl
sub
jecxz
dec
fcoms
inc
test
push
das
mov
arpl
xchg
mov
sar
pop
in
sub
jle
rorl
add
fs
clc
cmp
sub
sub
pop
repz
pop
sbb
lahf
jbe
xchg
mov
das
scas
cmp
or
dec
mov
mov
rcl
rol
sysexit
adc
ja
ret
outsb
or
or
dec
sub
or
stos
jecxz
popf
cmc
flds
leave
std
cmp
orl
lcall
jno
and
int3
repnz
and
ja
ljmp
ret
movsl
sub
ds
push
xlat
add
mov
rclb
jecxz
andl
xlat
cmpsb
cltd
jb
jp
lcall
and
mov
dec
dec
pusha
lahf
ss
fsts
cmp
dec
mov
das
mov
and
mov
xor
jns
xor
add
or
dec
xor
pop
add
lods
and
enter
das
movsb
inc
hlt
adcb
sbb
iret
ficompl
inc
lods
addr16
push
pop
cmp
cwtl
ljmp
sbb
dec
add
inc
inc
cs
and
pushf
dec
mov
jmp
mov
xchg
in
testl
setne
push
sub
push
inc
add
dec
inc
inc
add
sbb
filds
push
push
mov
mov
mov
adc
loope
cmp
xchg
mov
pop
or
xchg
pusha
jg
test
pop
repnz
daa
xor
pop
sub
or
jo
mov
or
jle
add
xor
pusha
into
repz
adc
clc
and
jae
sbb
sub
mov
or
scas
fwait
int
in
sub
in
jo
cmp
push
subb
mov
or
adc
cmp
cmp
xchg
pop
add
scas
mov
pop
popf
and
mov
cmp
sub
cmc
test
sahf
xor
ja
dec
andb
pop
pop
mov
sub
addr16
test
pop
scas
in
lret
psubsb
lret
bound
hlt
insl
orb
inc
sahf
mov
loop
in
loopne
cmp
mov
lahf
sbb
shll
es
rcrb
addb
push
sub
mov
les
fnsave
loope
cld
xor
int
popf
rclb
sub
lret
bound
repz
rep
sarl
ret
movsl
lret
les
fisttpll
push
pop
lods
arpl
dec
int3
sbb
sub
mov
mov
sub
cmp
scas
lock
pop
loopne
adc
adc
repnz
sbb
out
push
mov
push
fs
mov
mov
mov
ret
lcall
inc
in
orb
inc
dec
and
cs
jge
lods
popf
das
and
sbb
aam
sbb
cmc
xchg
fildl
sbb
mov
jns
addr16
sti
clc
sub
jno
adc
inc
adc
loopne
dec
daa
push
push
es
shlb
aam
fnstsw
scas
mov
xor
mov
movsl
mov
xor
or
fbld
daa
mov
adc
push
dec
add
cmp
icebp
sbb
dec
adcb
imul
fs
jmp
into
das
inc
nop
add
mov
dec
icebp
cmp
lcall
mov
cmp
xchg
push
cmp
rcr
les
xchg
lock
mov
push
adc
int3
outsb
and
dec
inc
js
lahf
dec
test
mov
push
mov
dec
fisttpl
cli
xorb
mov
pop
mov
sti
or
inc
pushf
je
ss
xchg
add
stos
mov
cmc
adc
dec
out
insb
leave
or
mov
in
pop
fcmovbe
js
rcl
sbb
in
gs
insb
js
ret
aas
roll
cmp
xlat
in
jae
inc
rolb
movsb
aas
stos
arpl
out
add
pop
loopne
ja
push
jle
leave
sar
outsb
dec
out
jbe
push
aam
jne
mov
add
lods
push
sub
fsubr
ret
scas
pop
ljmp
out
mov
jl
fdivs
jecxz
mov
or
dec
repnz
repnz
or
ljmp
scas
add
outsb
pop
popf
pop
or
hlt
cli
add
push
int3
xor
test
ret
flds
bound
sbb
out
sahf
mov
ja
shlb
mov
sbb
xor
gs
lahf
movl
std
inc
jge
add
pop
sub
sub
push
aad
mov
loopne
js
leave
xor
xchg
sbb
pop
mov
idivl
mov
dec
pop
inc
js
fwait
das
call
mov
cmp
xchg
pop
idivl
sub
adc
dec
cmpsb
dec
jbe
addr16
xchg
cmpsl
push
pop
mov
or
xchg
xchg
add
cmp
push
popf
add
sbb
sub
lret
imul
sbb
lahf
dec
addr16
cwtl
aaa
daa
pop
jb
pop
in
movb
xlat
in
xchg
sbb
dec
jo
dec
test
lods
data16
popw
in
cs
xorl
jbe
cmp
dec
xchg
cmp
push
aad
push
xlat
rol
fdivs
add
lahf
and
test
dec
cs
mov
xchg
mov
dec
lret
jl
pop
fisttpl
insb
lcall
out
je
fcoms
inc
outsb
fs
imull
cmp
loop
cmp
adc
xchg
jbe
cmpsl
pop
sbb
pop
fmuls
lods
into
imul
fimull
mov
dec
pop
iret
out
mov
insb
rolb
repnz
clc
mov
imul
and
outsb
sbb
das
daa
in
and
in
outsb
ret
sub
push
xor
jne
jmp
sbb
push
popa
push
and
and
cs
cmp
fstps
xchg
inc
and
xchg
fcmove
pop
adc
sbb
lea
popf
pop
clc
sbb
in
or
movsl
add
dec
xor
int
imul
pop
sub
lret
pop
lgs
jno
dec
addr16
or
mov
cmpsl
mov
inc
daa
insl
jb
and
roll
pop
add
mov
pop
dec
lock
loop
or
ds
stos
cmp
inc
xlat
push
push
dec
jl
in
dec
sbb
lock
add
inc
addl
hlt
out
inc
mov
sti
cmp
jnp
mov
jg
bound
lret
jecxz
cmp
fldt
jl
andl
xchg
daa
mov
mov
sbb
outsl
add
or
jo
daa
out
subl
iret
or
and
aas
loopne
into
popf
iret
push
mov
imul
or
jmp
sbb
pop
jno
jg
adc
movsb
mov
rcl
cwtl
push
xlat
and
jno
xlat
imul
fisubs
mov
ljmp
cmpsb
cmc
adc
outsl
xor
jns
mov
rcr
sub
jno
inc
stos
data16
icebp
sub
cwtl
iret
xchg
pop
iret
push
int3
xchg
mov
or
push
jbe
dec
stc
pop
ror
rclb
push
fs
fistl
mov
xchg
adc
inc
or
or
pop
or
clc
lds
decl
arpl
scas
das
xchg
sbb
scas
fidivs
ja
cpuid
xchg
or
in
add
pusha
movsb
pop
adc
xchg
mov
sahf
mov
adcl
xchg
add
das
and
mov
pop
push
push
dec
adc
adc
pop
shl
daa
cmp
inc
jge
jg
fcmovnbe
xchg
xchg
jle
bnd
jno
and
loope
lahf
add
andl
cld
test
imul
pop
xor
es
lods
adc
cld
push
sub
or
xor
shll
cltd
inc
push
out
jmp
push
fidivs
jp
pop
mov
mov
sti
and
xor
sbb
sbb
inc
add
mov
push
andb
dec
mov
enter
pop
inc
lea
test
test
sub
pop
cmpsl
movsb
repz
daa
or
sti
sbb
lahf
adc
and
stos
inc
jo
into
lods
scas
loop
mov
incb
imul
sti
repz
inc
movsl
xchg
int
xor
inc
cld
jmp
lds
ret
sbb
inc
jmp
les
outsl
sahf
xchg
xor
das
idivl
cltd
xchg
jmp
dec
or
sub
fs
mov
lret
mov
gs
xchg
dec
mov
pop
ljmp
adc
mov
mov
mov
out
inc
test
mov
in
xchg
negl
push
ljmp
and
scas
pop
cmp
adc
xor
inc
cltd
jge
sbb
lret
into
mov
adc
incl
arpl
movsl
inc
sbb
das
add
iret
pop
cld
mov
js
inc
jp
gs
adc
das
fnstcw
mov
inc
sarb
pop
bound
fdiv
aad
mov
pushf
inc
fwait
test
pop
sti
cwtl
xor
addr16
dec
repz
push
cld
push
sbb
add
lods
sbb
leave
xor
lahf
data16
mov
adc
jecxz
int3
mov
sub
or
inc
subb
add
shlb
pop
daa
or
leave
cmp
insb
nop
push
outsl
add
repz
dec
mov
stos
jge
cmp
cs
sub
cmp
cmpsl
iret
lods
dec
imul
sbb
test
xor
adc
and
push
pop
lret
dec
sbb
lods
rorb
fistps
packsswb
mov
and
pop
inc
packuswb
cs
mov
lds
into
push
dec
cmp
out
pop
jp
movsb
and
jno
cmp
xchg
push
test
sbb
mov
push
mov
adc
sub
sarb
pop
mov
xor
rcll
pop
pop
jg
rcrl
and
subl
xor
and
in
xchg
call
fs
and
shr
or
jmp
cs
inc
fisubrs
adc
lods
mov
out
cmovs
pop
push
cmp
loopne
iret
mulb
inc
lret
sbb
jge
out
mov
jb
sub
flds
in
push
mov
int
scas
mov
fidivrs
stos
sub
or
sub
mov
xchg
insb
jl
cmp
xlat
jg
ret
pop
and
or
mov
out
pop
imul
and
bound
call
fcomps
icebp
loop
push
popf
xchg
sahf
fsubl
jns
std
fcomps
mov
outsl
add
mov
sbb
decl
mov
flds
pop
adc
xchg
cmp
int3
fwait
adcb
add
popf
and
fistl
bound
inc
rorl
dec
cld
call
stos
les
aaa
scas
mov
sub
out
cmpl
lods
aaa
sbb
inc
sti
jmp
adc
xor
movsl
sbb
lahf
pop
xlat
notrack
aam
fisttpl
cmp
jp
lret
pop
lret
sbb
xchg
loopne
add
dec
shr
pop
stos
dec
mov
xchg
and
xlat
mov
xchg
icebp
xchg
push
mov
push
mov
lock
shll
repz
pushl
rcl
add
push
dec
icebp
ror
cmp
and
add
mov
jo
ret
push
sarl
out
imul
out
jae
add
jg
dec
dec
loop
mov
add
push
scas
decb
repnz
xor
test
inc
nop
addr16
mov
stos
dec
in
xor
dec
mov
scas
jne
insl
test
out
ljmp
rolb
sti
cmc
iret
sub
jbe
shll
mov
mov
xor
int3
push
pop
xor
lret
stc
xchg
mov
test
in
pop
xchg
pop
jg
add
loopne
aaa
rol
cmp
rcrb
in
sbb
or
xchg
sub
movsl
adc
test
sub
sub
aaa
dec
mov
xchg
arpl
cmpsl
lods
jb
cmp
jo
fidivrl
and
mov
push
mov
aaa
inc
mov
sbb
imul
mov
mov
ret
mov
push
shll
daa
gs
lcall
daa
test
push
add
jecxz
xor
xchg
cmpsb
inc
leave
mov
fisttpl
push
inc
ret
add
inc
out
out
test
hlt
nop
push
mov
jle
pop
arpl
mov
push
js
nop
mov
mov
loop
in
in
sbb
test
add
test
fcomps
in
sub
pop
mov
mov
jno
push
pop
mov
lds
cmpsb
mov
and
sahf
jae
mov
jg
int3
jns
or
jae
or
jp
je
int3
mov
and
adc
int3
mov
adc
adc
fldcw
cmp
sbb
xor
cmp
imul
jl
pcmpgtb
mov
cmp
sbb
mov
scas
lret
decl
imul
nop
js
mov
repnz
push
ret
jns
sub
dec
shr
stos
sbb
popa
sbb
or
xchg
imulb
sub
add
lret
loopne
addr16
and
jg
push
push
mov
pop
sahf
pop
jb
push
imul
cmpsl
leave
add
and
iret
mov
int
mov
mov
pop
cmp
xlat
data16
mov
fdivp
in
std
aas
inc
push
hlt
mov
ret
loop
adc
add
stos
and
push
je
ret
gs
pop
les
mov
or
mov
push
les
push
dec
into
and
inc
lods
insl
insb
pop
adc
ret
stos
dec
movsb
repnz
xchg
stc
mov
std
add
mov
repz
mov
jle
stos
test
inc
and
je
jo
xchg
fidivs
sahf
popf
jmp
inc
cld
data16
adc
mov
in
add
mov
popf
adc
xor
iret
jge
dec
jl
sbb
add
xchg
sahf
pop
in
mov
and
lahf
cmp
xchg
add
push
mov
and
mov
jne
jns
cmpsl
jno
dec
mov
fwait
aas
cmpsl
xchg
out
in
dec
movsl
or
lret
out
stos
xchg
add
xchg
jp
sub
dec
mov
in
cmp
jbe
iret
cmp
mov
xchg
mov
sbb
push
mov
adc
hlt
mov
sbb
xchg
testl
push
shrl
int3
test
mov
inc
ja
cvtps2pi
fsubl
sbb
adc
insl
sbb
loopne
ds
in
mov
aad
fdivr
mov
popf
outsl
int
mov
xor
in
fsubrs
cs
cmp
inc
lods
push
mov
cmp
xor
lds
cwtl
sbb
mov
bound
dec
xor
mov
xchg
push
inc
and
jnp
insb
fwait
cli
cmpsl
adc
mov
ret
xchg
int
sub
xor
int
jl
mov
in
or
das
cwtl
imul
icebp
ja
add
cmpsb
data16
mov
daa
push
dec
aad
cmp
iret
dec
fmuls
subb
xor
fnstenv
push
fwait
mov
mov
subl
xchg
cmp
pop
int
adc
leave
adc
ljmp
xlat
mov
adc
ja
push
iret
xchg
frstor
icebp
adc
in
jge
cwtl
add
adc
mov
data16
pop
fcomip
inc
ret
mov
push
lret
pop
jno
mov
mov
or
pop
pop
sbbb
int
cmp
pop
xchg
pop
mov
sub
cli
scas
mov
mov
iret
dec
mov
add
pop
or
jl
movsb
or
sub
bound
mov
pusha
xor
cld
sbb
jnp
jmp
xchg
movsl
and
mov
mov
fldz
pop
mov
xor
push
pop
lods
sbb
cmpsb
xchg
imul
cmp
push
data16
mov
in
dec
and
out
inc
mov
hlt
insb
test
sti
aam
dec
test
int3
into
enter
mov
cmp
mov
add
mov
inc
aas
xor
add
mov
leave
shll
lret
sub
jno
ss
xchg
inc
mov
xchg
fwait
adc
mov
aaa
pusha
cwtl
lods
imul
lods
iret
add
add
adc
cwtl
mov
pop
sub
insl
ds
pop
xor
jl
mov
insb
in
push
mov
das
fbld
dec
cmp
push
fstpl
cmp
pop
mov
adc
bound
adc
xor
add
ja
pop
fmull
mov
push
inc
insb
xchg
push
xor
ret
adc
push
cmp
imul
mov
lods
dec
pop
and
iret
jmp
sub
aas
cmp
mov
xchg
sbb
sbb
sahf
stos
cmp
sbb
sarl
test
mov
sbb
dec
push
lahf
ret
adc
stc
mov
xchg
fcmove
add
lret
mov
or
fnsave
mov
je
insb
into
mov
inc
inc
mov
insb
cli
add
add
inc
xor
hlt
loop
leave
addb
enter
add
lahf
cmp
cmpb
jmp
repz
je
je
dec
stc
icebp
lret
push
sahf
adc
cs
repz
mov
cmp
add
inc
out
int3
adc
orl
mov
daa
aad
cmp
fs
or
movsb
xor
dec
pushf
out
jne
daa
sbb
shrb
push
xor
mov
lret
lock
fwait
cmp
mov
in
loopne
xchg
and
cli
roll
jg
push
mov
test
fistpll
mov
aas
pop
push
bound
pop
dec
pusha
out
pop
sbb
pop
jle
sbb
pusha
push
add
fwait
lods
hlt
pusha
or
loopne
sub
adc
inc
les
ljmp
or
notb
call
mov
enter
repz
cmp
cwtl
jnp
inc
xchg
inc
out
cmc
negl
push
int3
pop
lahf
fiaddl
mov
xchg
pop
xor
mov
iret
stc
add
mov
fs
inc
and
jmp
in
xor
adc
roll
mov
test
iret
rcll
popa
movsl
or
data16
negl
fcomps
mov
sub
cmc
cwtl
lahf
mulb
mov
cmp
js
sbb
vmovss
les
xchg
leave
das
int
scas
cmc
mov
add
push
and
pop
out
jle
mov
pop
sub
insl
repz
insb
xchg
inc
orl
cmc
push
pop
hlt
int
or
arpl
lcall
push
movb
mov
xchg
cmpsl
jp
mov
inc
cli
imul
dec
mov
in
cmp
mov
idivb
sub
lcall
jmp
mov
call
sub
into
xor
pop
dec
loopne
out
mov
test
cmp
negb
aas
repz
dec
cmpsl
sbb
inc
sbb
sub
push
jg
popf
ljmp
push
scas
fistl
xor
push
imul
testl
xchg
or
cmp
test
in
jnp
jge
mov
shrl
mov
dec
mov
insb
in
cmp
in
mov
or
cltd
pop
out
xchg
stos
adc
sarl
rolb
or
adc
pop
mov
daa
dec
fstl
push
xor
fildll
enter
xor
out
pop
or
push
mov
push
movsl
dec
adc
adc
lret
mov
mov
xchg
lods
ljmp
subb
fistl
push
pop
cmc
lcall
fs
xor
pop
sub
mov
cmc
pop
data16
mov
test
pop
out
cmpsb
in
cmpl
sti
int
daa
push
bound
shlb
lods
dec
fistpll
test
cmp
jnp
pop
mov
int
and
push
jge
or
jno
pop
jno
out
push
pop
xchg
jns
scas
or
lea
jb
int
daa
and
fwait
and
cmp
and
or
cmpsb
adc
cmp
fistps
and
cs
mov
adc
adc
inc
push
cmp
mov
mov
xchg
adc
mov
xor
mov
test
push
popa
fnstsw
std
sub
pusha
cmc
push
mov
sti
sub
xor
shl
popf
add
stos
mov
emms
sub
nop
cltd
shr
imul
ds
cli
inc
fs
in
subb
xchg
jnp
setne
rcr
mov
test
lret
scas
sbb
ret
loopne
cmp
leave
xor
or
daa
iret
lret
pop
add
mov
push
push
test
outsl
iret
scas
int3
rcrb
cli
or
clc
push
loop
incb
cwtl
pop
stos
dec
ljmp
push
inc
in
ss
gs
addr16
mov
in
push
and
lods
in
push
mov
push
sub
mov
lahf
pushf
es
enter
push
sbb
mov
xor
mov
pop
dec
out
push
sub
fucomip
scas
js
pop
or
rcr
dec
inc
out
pop
push
rcll
mov
and
adc
iret
fidivs
shll
xchg
dec
xor
punpckhwd
mov
cltd
xchg
sbb
outsl
jno
jae
outsl
add
out
push
je
xchg
fwait
xchg
dec
test
in
jmp
xor
test
pop
out
fnstsw
adc
lret
arpl
pushf
mov
nop
enter
insb
sti
mov
mov
push
std
outsb
cmc
or
xchg
in
popa
sub
adc
stos
inc
stos
imul
lahf
adc
jg
mov
xor
out
js
push
mov
or
or
dec
clc
add
mov
imul
int3
sbb
cmp
xor
pop
ljmp
jecxz
scas
fistl
iret
cmp
aas
testl
or
push
lahf
and
je
add
push
or
fs
and
inc
stc
sub
jns
mov
rcrb
addr16
xchg
mov
sub
pop
or
pusha
xchg
or
pusha
mov
mov
and
cmpsl
pop
inc
lods
and
loopne
lods
cmp
aam
or
cmp
push
and
sbb
mov
stos
adcl
mov
xor
fmuls
pushf
adc
add
cmc
adc
iret
loop
pop
fidivrl
adc
or
shr
in
mov
in
sahf
mov
sub
add
or
ret
or
mov
fs
xor
jno
ret
loop
push
loop
add
mov
xchg
or
clc
and
rcrb
outsb
int3
mov
cmpsl
shrb
rcr
mov
andb
dec
adc
xor
ja
mov
dec
xor
stos
orl
push
mov
pop
lods
or
pusha
mov
add
mov
cwtl
in
sbb
inc
out
stos
popf
pop
add
fsts
push
mov
adc
push
cmc
nop
test
outsb
or
push
icebp
dec
aas
jg
inc
enter
pop
stos
dec
sub
rorl
outsb
jle
or
loopne
arpl
outsl
repz
inc
out
lds
in
mov
sbb
ret
add
adc
xor
popf
dec
adc
in
jecxz
mov
and
adc
mov
pop
aas
pop
pop
lret
cmp
jp
pusha
jns
push
stc
dec
sbb
cs
mov
xor
or
jno
inc
jo,pn
cli
xchg
cmp
mov
cmpsb
pop
aas
shlb
stc
jae
iret
mov
loope
movsb
pop
xchg
movsb
pushf
pop
idivl
rolb
gs
fcmovne
imul
test
inc
add
push
mov
ret
stos
push
outsb
adc
xor
repz
cwtl
xor
pop
and
in
or
push
test
ja
xor
mov
dec
repz
das
lock
movsl
fs
loop
mov
popa
jns
fwait
add
aam
adc
inc
inc
test
sub
insb
xlat
adc
add
cld
lods
push
loop
push
mov
cmp
es
cmp
das
xor
pop
jmp
movsb
fisttpl
pop
stos
vpminub
stc
cmove
mov
mov
lahf
out
or
mov
dec
jo
cwtl
movsb
jecxz
ss
divl
jae
adc
out
inc
inc
mov
ja
in
mov
push
mov
sbb
push
cbtw
cmc
sbb
sti
pop
adc
shll
sub
pop
negl
pop
insl
shl
add
gs
and
push
dec
or
add
sub
decl
fsubl
cmpsb
stos
mov
or
pop
fadd
rcll
fsubl
cltd
dec
sbb
pop
das
jo
in
inc
pop
fxam
push
and
xchg
ficoms
pop
jecxz
pop
mov
punpcklwd
xor
inc
xorl
out
xor
aas
sub
daa
xchg
push
add
adc
push
xor
mov
jmp
xchg
sub
add
dec
mov
cltd
mov
aaa
out
imul
inc
jmp
les
imul
fs
sub
scas
add
add
jmp
pop
push
out
mov
mov
scas
mov
pop
jne
das
jnp
sbb
cmc
cltd
mov
cmp
cli
fsin
mov
aaa
aaa
mov
jae
fisubs
jg
jb
jl
xor
dec
jp
hlt
add
inc
loopne
into
jno
iret
pop
and
and
jnp
mov
inc
adc
cmpsl
ret
idivb
repz
adc
jmp
pop
jns
nop
lods
sub
out
dec
jno
mov
xor
mov
xchg
stos
daa
push
sbbb
lret
lods
xchg
ljmp
cmp
jge
cltd
dec
or
xchg
dec
jne
xor
sub
xchg
imul
mov
dec
or
fs
dec
mov
jb
mov
pusha
movsb
mov
cmpsl
andl
call
jge
cmc
les
jmp
fimull
scas
mov
xchg
mov
push
push
sahf
fstps
xchg
xor
pop
mov
cwtl
mov
inc
mov
or
and
sub
jl
cmp
lods
mov
lret
out
jmp
cld
loope
mov
xchg
dec
mov
mov
and
lds
std
leave
aam
mov
xchg
cli
cltd
inc
mov
cmp
clc
adc
movl
movsl
xor
mov
add
jnp
adc
xor
nop
inc
scas
cmp
xchg
cltd
mov
je
pop
mov
xor
add
imul
and
pop
outsb
andb
inc
jge
dec
add
test
mov
jecxz
lcall
xchg
cmpl
sbb
add
xchg
testl
rcll
xlat
dec
in
and
mov
inc
sub
js
stc
cmp
sub
add
xchg
lret
clc
movsl
icebp
daa
loopne
inc
in
xchg
sbb
and
mov
xor
mov
pushf
mov
add
push
cmpsb
int3
and
imul
inc
repnz
jle
mov
aam
jno
dec
shll
shlb
inc
push
sub
or
adc
js
cmp
incl
std
cltd
push
inc
xlat
jns
sbb
cld
cmpsl
in
cmc
call
sbb
adc
add
inc
adc
iret
sub
movsl
or
jl
mov
jo
sbb
shll
leave
ret
insb
pop
in
fadds
je
insl
mov
push
icebp
aas
mov
daa
movsl
int
or
fucomp
cmpl
dec
pop
and
gs
test
aad
call
aam
orl
lods
test
ds
jno
mov
push
pop
lods
cwtl
rcrl
adc
add
mov
lret
or
push
dec
scas
sub
push
mov
ret
xor
clc
jne
or
inc
jp
and
sbb
lea
mov
fildll
jbe
xchg
xchg
test
and
add
pusha
xlat
xchg
push
lret
sti
ficompl
sub
xchg
int3
jle
stc
adc
fistpll
ret
mov
fsubs
adc
xor
pusha
jmp
dec
push
jge
add
or
jno
add
xchg
xchg
inc
in
jg
inc
jmp
mov
gs
sbb
mov
cmpsb
pminub
pop
cmpsb
icebp
fstl
aam
test
out
cmc
scas
mov
inc
jnp
fsubrl
aas
pushf
fiadds
sbbb
sbb
mov
mov
out
incl
mov
insb
cwtl
xor
cvtps2pi
pop
rcrb
push
pop
xor
and
mov
lods
or
jmp
mov
sbb
pop
and
mov
aas
ss
mov
in
push
mov
pop
in
negl
mov
lods
xchg
mov
adc
js
sbb
pop
lods
mov
in
cmp
call
arpl
test
pop
xchg
cmp
jno
cmp
pop
iret
or
mov
dec
icebp
jecxz
test
lret
push
pop
fdivrs
pop
test
mov
dec
insb
nop
subl
or
adc
jecxz
dec
in
cmp
fs
int
in
leave
push
out
call
adc
xchg
in
push
lods
clc
sub
clc
cwtl
daa
nop
sub
add
add
xchg
repz
add
stc
mov
flds
xchg
and
dec
lock
inc
mov
pushl
lods
inc
adc
popf
cmp
inc
jp
xor
and
repnz
fistps
cmp
adc
adc
stos
lret
sub
push
push
mov
adc
movsl
add
mov
mov
add
cmp
out
dec
dec
xchg
jp
xchg
xor
inc
mov
jno
jae
jae
in
jbe
mov
and
lea
cli
test
stos
ss
inc
or
ljmp
mov
aam
int
and
es
aad
jae
add
mov
push
test
les
mov
scas
enter
outsb
daa
push
sahf
pop
movl
scas
inc
cmpsl
movb
jne
sub
fistpl
and
mov
test
push
sahf
pop
cmp
cmpsl
jb
scas
lahf
cmpsl
incb
cmp
pop
adc
bound
add
std
subb
mov
push
ja
repnz
push
stos
push
sbb
adc
int
and
fwait
ds
ljmp
aas
xlat
scas
push
shr
add
insl
push
push
adc
test
mov
ficompl
adc
stos
in
mov
push
movsl
test
outsl
scas
sbb
jmp
mov
sbb
dec
insb
and
pusha
inc
jg
jne
mov
jnp
sbb
gs
mulb
std
jbe
sbb
jbe
jnp
adc
inc
popf
int
and
sub
aad
adc
add
imul
and
adc
xchg
loop
imul
cs
push
mov
loope
mov
out
dec
push
aaa
roll
in
adc
mov
push
aad
push
adc
and
pusha
or
aad
add
adc
les
stos
sahf
sbb
cmp
jo
ja
adc
mov
enter
imul
fs
mov
cmp
test
stos
lock
mov
mov
enter
xchg
jp
insb
inc
icebp
lds
out
cmpsl
lret
push
push
pop
mov
data16
pop
adc
cld
mov
add
je
or
sarl
frstor
push
fadds
mov
and
xor
loope
jecxz
cld
inc
xchg
aaa
clc
inc
xchg
inc
sti
dec
lcall
pop
jb
or
outsl
mov
test
pop
and
xor
cmpsl
int
mov
cmpsl
inc
xorl
adc
arpl
inc
xor
mov
adc
xor
sbb
add
stos
push
sahf
mov
test
sti
jp
outsl
and
push
les
inc
add
arpl
add
mov
xchg
int
aaa
mov
and
or
mov
fwait
inc
sub
cmp
inc
jb
dec
add
shrb
movsl
jnp
shrb
mov
pop
fld
pop
stos
popa
les
xor
lret
lret
lret
lret
sub
cmc
mov
data16
je
data16
je
data16
int3
je
insl
mov
ja
push
les
inc
cld
push
and
add
insl
lds
or
cmpl
mov
ja
scas
add
inc
lds
jnp
aad
adc
fs
lcall
or
mov
push
push
int3
cltd
iret
int
and
xlat
ret
mov
sub
loopne
mov
and
mov
pop
mov
push
pop
xchg
loopne
mov
adc
mov
cmp
cltd
cmp
push
ljmp
bound
mov
lret
ret
shrb
adc
inc
dec
addb
dec
dec
and
pop
and
mov
sbb
pop
outsb
mov
ljmp
sbb
pop
pop
and
aad
ljmp
jle
add
lods
sbb
xor
aad
jne
ja
and
ja
xor
movsl
cmp
cmp
push
repnz
pushf
xor
mov
test
dec
mov
popf
pop
fldl
cmp
std
test
jmp
sbb
outsl
lahf
pop
push
insl
lds
repnz
cmp
arpl
inc
push
jmp
inc
icebp
ret
mov
cli
mov
pop
addr16
cld
mov
cmc
adc
xchg
jmp
inc
shrl
or
test
fisubs
ja
or
lret
mov
mov
xor
hlt
cmp
push
sub
or
test
and
xchg
inc
fstps
jl
mov
out
lahf
js
push
daa
and
or
arpl
mov
pop
lds
mov
out
in
and
cs
or
out
push
push
dec
lea
dec
and
pop
push
sub
xor
out
jnp
in
mov
sub
sbb
into
cmp
jle
aas
push
dec
sub
arpl
mov
adc
sbb
adc
jg
xor
inc
jp
xchg
in
xchg
cmp
mov
out
cmp
imul
mov
jne
mov
scas
repz
xor
rcrb
push
scas
ds
push
lock
idivb
and
pop
jne
cld
inc
lods
pop
shlb
xor
push
add
sub
pop
lock
enter
stos
jae
lock
inc
shrb
addb
aad
or
cmp
inc
add
es
addr16
lret
outsl
lock
dec
imul
cwtl
and
pushf
mov
insl
aam
cmpl
mov
loopne
orb
push
cmp
xchg
mov
sbb
push
mov
shll
ja
sbb
cmc
mov
loop
pop
xor
rcrb
xchg
mov
jg
aas
mov
jle
sub
mov
adc
add
push
jo
jl
inc
int
mov
fmuls
in
sub
inc
inc
or
pop
xchg
xor
lret
push
mov
cmp
mov
inc
aad
push
and
das
in
jecxz
push
int3
popf
jge
sub
sbb
xor
inc
pop
test
sub
fcom
mov
add
push
cmovno
sub
mov
fidivs
or
nop
xchg
mov
fisttps
inc
int3
pop
cmpsl
sub
ja
int
lcall
aaa
sbb
clc
mov
mov
jo
aaa
jne
xchg
cmpsb
stos
jle
push
daa
repz
xchg
inc
sub
and
add
push
sti
sahf
ret
mov
loopne
xor
mov
push
push
or
or
mov
mov
xchg
dec
sub
mov
xchg
push
mov
pop
cmp
jns
dec
inc
arpl
pop
add
mov
sub
jbe
jne
push
lret
xchg
mov
xor
fistps
xor
int3
dec
add
xor
pop
flds
out
les
xchg
pop
push
mov
mov
mov
nop
sahf
cmp
and
or
sub
mov
cmp
add
pop
es
sub
pop
cltd
out
jne
shll
fsubl
push
xchg
popf
scas
idivl
cmp
clc
int
or
lea
aas
insl
cli
or
jnp
adc
adc
jo
add
fcompl
nop
sbb
pusha
push
and
adc
daa
nop
add
add
ja
jns
xchg
inc
lds
jp
cmp
mov
sub
add
sub
adcl
lret
cmpsl
push
ds
sub
loopne
imul
stc
sub
insb
mov
mov
cs
mov
leave
xchg
xor
mov
idivb
dec
mov
or
cmp
mov
jnp
push
jge
ror
push
mov
push
cmp
mov
or
jo
and
or
fwait
imul
lock
movsl
sub
in
insb
scas
xchg
addr16
movaps
cmp
xchg
loope
daa
je
sub
cmc
lret
xor
sbb
iret
push
sbb
or
leave
or
push
mov
xor
sahf
pusha
cmpsb
shl
push
call
adc
cld
jp
sbb
out
cli
mov
lds
sub
cld
inc
dec
push
pop
jbe
dec
jno
mov
es
mov
hlt
and
push
int3
sub
stos
pop
jmp
adc
jo
dec
inc
push
fcomps
sub
push
xlat
pop
inc
imul
pusha
add
scas
test
jg
xchg
fsub
and
lret
lods
and
jnp
ficoms
outsl
xchg
inc
fidivl
mov
cltd
dec
dec
add
nop
push
