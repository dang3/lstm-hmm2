and
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
add
inc
add
inc
and
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
add
add
add
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
ret
test
and
test
and
test
and
test
and
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
subb
and
stos
and
and
and
inc
stos
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
add
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
push
push
call
add
test
je
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
test
jne
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
lea
push
push
push
push
call
add
test
jne
lea
push
push
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
pop
pop
add
ret
push
call
add
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
test
je
mov
mov
push
call
push
push
call
add
test
je
sub
add
sar
shl
or
mov
mov
test
jne
mov
pop
mov
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
push
mov
push
mov
xor
lea
movw
mov
sub
and
shr
mov
mov
je
inc
cmp
jl
cmp
je
push
call
lea
push
push
push
call
add
pop
pop
ret
mov
sub
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
ret
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
lea
stos
push
lea
push
push
push
push
call
add
test
je
lea
push
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
movb
movw
mov
lea
push
push
push
push
push
call
add
test
je
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
add
mov
jmp
mov
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
xor
lea
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
mov
lea
stos
mov
lea
push
push
push
push
push
movl
call
add
test
jne
lea
push
lea
push
push
call
mov
mov
lea
lea
mov
push
push
push
push
push
call
add
test
mov
mov
je
pop
pop
xor
pop
add
ret
test
jne
test
je
pop
pop
xor
pop
add
ret
lea
movl
push
push
push
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
mov
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
pop
pop
mov
pop
add
ret
mov
movb
movw
mov
lea
push
push
mov
mov
push
push
push
push
mov
call
add
test
jne
mov
push
push
push
call
mov
mov
lea
mov
push
push
push
push
push
call
mov
add
neg
sbb
inc
mov
mov
test
mov
jne
test
je
xor
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
push
mov
push
mov
push
push
push
lea
call
mov
add
cmp
jbe
lea
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
inc
push
push
push
call
add
aad
cmp
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
lea
add
cmp
mov
je
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
mov
sub
cmp
push
push
push
push
jbe
dec
mov
jmp
mov
xor
test
jbe
mov
mov
lea
push
push
call
add
test
jle
mov
mov
lea
rep
movsw
mov
mov
mov
rep
movsw
mov
lea
mov
rep
movsw
mov
mov
mov
dec
mov
jne
test
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
mov
push
xor
cmpl
jbe
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
push
lea
push
push
call
lea
movw
push
call
mov
lea
push
lea
lea
mov
lea
push
call
mov
add
inc
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
test
jbe
push
mov
push
mov
push
mov
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
mov
push
mov
push
push
push
mov
cmp
jae
mov
xor
test
jbe
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
mov
push
lea
lea
mov
lea
push
call
mov
add
inc
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
push
mov
push
push
mov
test
jbe
xor
test
jbe
mov
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
mov
cmp
je
inc
cmp
jae
mov
lea
lea
lea
lea
mov
mov
inc
rep
movsw
mov
add
cmp
jb
decl
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
test
mov
jbe
mov
push
mov
push
push
sub
lea
mov
mov
inc
rep
movsw
mov
add
cmp
jb
pop
pop
pop
pop
ret
nop
nop
nop
sub
push
push
push
push
mov
xor
cmpl
jbe
mov
xor
lea
push
push
mov
mov
add
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
je
mov
inc
add
cmp
jb
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
mov
mov
push
mov
push
push
push
call
mov
push
push
push
call
add
test
jne
mov
mov
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
mov
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
call
add
ret
nop
nop
nop
mov
mov
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
push
cmp
jbe
mov
mov
mov
mov
shl
test
jne
inc
mov
mov
cmp
ja
mov
mov
cmp
jb
pop
pop
xor
pop
ret
mov
test
je
mov
push
shl
push
add
push
push
push
push
call
movw
mov
pop
inc
mov
pop
mov
pop
ret
push
push
mov
push
push
mov
xor
push
lea
push
push
push
movl
call
add
test
je
push
lea
push
push
push
inc
call
add
test
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
push
mov
lea
push
push
push
movl
call
add
test
je
push
mov
push
mov
add
testb
and
lea
push
push
call
add
test
je
inc
add
cmp
jb
mov
mov
push
lea
push
push
call
add
mov
lea
push
mov
lea
push
push
push
call
add
test
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
call
mov
mov
mov
add
mov
add
test
je
push
push
call
add
add
mov
mov
test
je
push
push
call
add
add
or
mov
cmp
jbe
mov
mov
lea
lea
movl
shl
push
call
mov
add
test
mov
jne
pop
pop
pop
xor
pop
ret
mov
push
push
push
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
call
mov
add
test
je
movl
mov
xor
test
jbe
xor
mov
mov
add
push
push
call
add
test
jne
mov
movl
mov
inc
add
cmp
jb
mov
cmpl
je
mov
movl
test
jbe
mov
mov
push
push
push
call
add
add
dec
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
sub
mov
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
push
lea
push
mov
lea
push
mov
push
xor
push
push
mov
mov
call
add
test
jne
pop
add
ret
mov
mov
push
mov
push
xor
cmp
mov
jbe
push
mov
mov
lea
push
call
add
test
jne
mov
movl
jmp
test
je
mov
lea
push
push
call
add
mov
inc
add
cmp
jb
pop
mov
test
je
mov
push
call
add
mov
pop
pop
pop
add
ret
mov
test
je
push
call
add
mov
mov
mov
mov
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
mov
jmp
push
push
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
leave
ret
mov
ret
push
mov
push
push
cmpl
push
jne
push
push
xor
mov
call
call
push
push
push
mov
pushl
mov
call
test
je
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
call
jmp
pushl
mov
mov
push
call
push
call
test
pop
je
push
push
mov
call
movl
mov
call
pushl
call
mov
pop
pop
jmp
cmpl
jne
push
call
mov
call
mov
call
mov
test
je
mov
mov
call
call
push
call
call
push
push
call
jmp
cmpl
jne
push
lea
call
call
push
call
pushl
call
mov
mov
mov
push
pop
pop
leave
ret
cmpl
jne
push
push
call
test
je
push
push
call
call
push
mov
call
mov
pop
jmp
cmpl
jne
call
pushl
call
push
pop
ret
int3
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
push
decl
aam
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
dec
decl
aam
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
lea
jmp
mov
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
dec
in
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
and
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
add
jmp
and
fdiv
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
push
mov
movb
movl
call
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
xor
push
mov
push
push
mov
call
lea
mov
mov
call
mov
movl
movl
mov
mov
mov
movl
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
lea
mov
push
push
push
push
push
push
push
push
call
test
je
movl
jmp
mov
test
je
cmp
jne
push
push
mov
call
mov
call
push
push
call
push
call
test
jne
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
mov
pop
pop
ret
push
push
push
push
lea
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
pop
mov
pop
pop
ret
nop
nop
nop
mov
push
test
push
mov
je
mov
mov
push
mov
mov
mov
mov
mov
mov
lea
lea
push
push
mov
call
mov
add
mov
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
mov
lea
lea
push
push
mov
call
mov
mov
add
mov
push
call
test
je
push
mov
call
pop
pop
ret
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
lea
movl
call
add
inc
and
add
jne
add
push
lea
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
push
mov
push
push
push
call
push
mov
call
call
mov
call
lea
mov
push
push
push
push
push
push
push
push
movb
call
test
je
movl
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
movb
call
mov
call
push
mov
call
mov
push
push
push
call
pop
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
mov
test
je
push
lea
call
push
lea
call
mov
mov
push
push
push
jmp
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
movl
mov
call
lea
movl
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
pop
ret
mov
push
call
pop
ret
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
lea
movb
mov
call
lea
add
add
lret
call
lea
movb
call
push
mov
movb
movl
call
xor
push
mov
mov
mov
movl
mov
call
push
mov
call
mov
mov
movb
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
add
add
into
xlat
add
lea
movb
call
lea
movb
call
lea
movb
call
add
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
add
add
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
call
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
lea
call
mov
movl
test
je
mov
lea
mov
xor
lea
rep
mov
mov
mov
mov
mov
test
setne
lea
mov
mov
push
lea
mov
call
mov
add
push
push
call
mov
add
mov
test
je
push
lea
call
jmp
mov
push
push
push
call
mov
lea
push
lea
push
push
call
inc
add
add
push
lea
inc
add
or
insb
adc
add
push
dec
and
push
mov
call
mov
push
push
call
mov
add
mov
test
je
push
lea
call
jmp
push
push
push
call
add
mov
jmp
mov
lea
mov
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
push
call
lea
push
lea
push
push
call
inc
add
lea
inc
add
call
mov
lea
add
mov
push
push
push
call
mov
add
push
call
test
je
mov
mov
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
lea
mov
call
push
mov
movb
call
mov
lea
push
push
call
add
cmp
jne
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
jmp
cmp
jne
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
je
lea
mov
call
lea
movl
call
pop
xor
pop
mov
mov
add
ret
mov
call
lea
mov
mov
call
lea
movl
call
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
lea
push
call
add
or
push
and
lea
push
call
push
mov
call
mov
call
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
movl
mov
call
lea
movl
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
mov
push
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
call
test
je
mov
mov
call
mov
test
je
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
mov
push
push
push
push
call
pop
pop
mov
pop
ret
mov
push
mov
call
pop
pop
pop
ret
nop
push
push
mov
push
mov
sub
push
mov
push
lea
call
add
lea
push
movl
call
lea
call
cmp
jne
lea
mov
push
call
lea
or
inc
add
add
add
add
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
mov
push
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
mov
push
push
call
add
mov
call
pop
ret
mov
push
push
call
add
mov
push
push
call
mov
call
push
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
lea
movb
mov
call
push
mov
movb
movl
call
push
mov
call
mov
movl
movl
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
mov
push
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
mov
push
push
call
mov
call
mov
mov
push
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
mov
push
push
call
mov
call
mov
test
je
mov
call
pop
ret
push
push
mov
call
mov
call
pop
ret
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
movl
mov
call
mov
call
lea
dec
add
add
add
add
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
rcrb
mov
dec
in
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
add
pop
pop
pop
ret
mov
lea
mov
lea
add
rep
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
add
pop
add
add
jns
jns
add
popf
lcall
add
pop
add
add
jno
stos
add
out
addb
lcall
call
add
pushf
mov
xchg
add
add
add
cmpsb
jno
add
enter
mov
add
add
push
push
push
push
lea
push
push
call
mov
mov
add
jmp
mov
add
add
data16
cmp
add
add
scas
insb
sub
pop
popl
push
push
push
push
push
push
push
call
movsl
add
js
mov
cwtl
mull
imul
test
addb
push
mov
add
roll
fwait
push
mov
pop
cltd
add
les
in
in
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
ja
add
mov
pop
add
mov
stc
add
add
mov
add
add
les
jl
add
xchg
pop
stos
stos
add
lret
add
add
add
add
sbbl
add
xchg
sub
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
fldt
add
add
pop
add
pop
add
test
push
xchg
xchg
add
js
add
add
add
add
push
jne
sub
pop
push
push
lea
push
push
push
push
call
add
shlb
mov
add
rorb
pop
lods
xchg
jecxz
add
mov
xchg
mov
add
stos
xchg
arpl
mov
add
aad
call
xchg
out
jnp
cmc
push
add
in
in
pop
call
push
lea
push
push
push
push
push
push
call
ljmp
add
jge
jnp
add
add
call
add
rcrl
mov
add
add
add
add
mov
in
add
xlat
popa
test
pop
add
mov
testb
in
call
push
push
lea
push
push
call
lret
int3
jo
negl
mov
iret
add
lcall
add
add
add
add
pushf
mov
fldln2
mov
add
test
jae
lea
add
add
mov
cld
roll
add
add
lahf
jne
fadds
add
hlt
pop
call
push
push
push
push
push
lea
push
push
call
test
xchg
add
add
scas
push
into
mov
push
add
insb
add
and
jae
call
pushf
mov
add
int
mov
lret
add
cmpsl
add
pop
add
add
mov
out
add
insb
add
add
add
cmpsl
lahf
aam
xorb
mov
add
ret
push
push
push
lea
push
push
push
lea
push
push
push
call
add
int
xchg
push
in
into
mov
rorl
mov
mov
add
int3
fimull
cmpsb
shlb
pushf
add
ja
add
mov
stc
test
in
add
add
add
mov
out
in
fldcw
mov
pop
mov
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
add
out
arpl
mov
mov
jns
insb
add
rolb
bound
xchg
mov
add
mov
insb
movb
add
gs
add
xchg
add
roll
test
loopne
in
xchg
mov
add
test
mov
mov
lcall
pop
hlt
push
push
push
lea
push
call
mull
mov
imul
je
ficoml
cmpsl
jge
mov
add
rcll
add
push
popa
lds
lds
cmpsl
testl
jle
mov
sbbl
pop
imul
xchg
loopne
bound
jb
mov
pop
add
jo
add
lret
out
add
jp
add
sub
pop
add
push
push
push
push
push
lea
push
push
push
lea
push
call
jmp
sti
addb
add
add
rclb
cltd
add
js
add
add
jmp
mov
add
add
hlt
add
add
add
data16
pusha
rcrb
scas
add
insb
test
shll
pop
add
push
push
push
call
mov
add
add
cli
ret
mov
ja
mov
add
xchg
loopne
stos
add
jbe
fldenv
add
add
mov
add
add
sub
pop
add
push
push
push
lea
push
call
mov
scas
jno
jb
add
frstor
add
mov
jle
ljmp
add
js
lds
add
mov
cld
gs
arpl
add
lds
add
add
aam
pop
add
jmp
add
add
push
sub
pop
mov
push
push
push
lea
push
push
lea
push
call
je
roll
sti
hlt
roll
ja
shrb
xchg
add
add
int3
add
add
ret
add
add
popl
lret
nop
mov
jbe
sti
jmp
add
add
add
shlb
add
add
lods
add
pushf
test
xor
push
push
call
out
hlt
data16
add
fmulp
imul
add
lods
ljmp
jnp
icebp
lcall
mov
icebp
addr16
out
add
cmpsl
push
add
xor
mov
sti
add
ret
testl
lcall
les
add
push
push
shl
xor
push
or
not
add
not
sub
pop
not
sub
pop
push
push
call
mov
add
add
add
rorb
pop
test
add
mov
mov
jmp
negb
add
test
in
mov
jmp
add
add
sub
pop
pushl
push
push
push
call
add
test
jle
add
push
jo
loop
mov
jo
test
jp
jb
clc
mov
add
add
add
add
mov
add
xchg
add
add
mov
mov
fnstsw
hlt
lcall
lods
push
mov
sysenter
adc
push
push
call
roll
mov
xchg
add
jnp
hlt
imul
roll
add
add
stos
add
add
xchg
add
jbe
js
mov
push
fldl
imul
in
in
lcall
inc
lock
push
push
lea
push
push
push
lea
push
call
add
test
add
int
add
add
add
mov
les
cmpsb
mov
add
lcall
inc
call
lea
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
ffreep
mov
add
testl
jnp
testb
bound
lods
push
xchg
std
stc
add
push
cmp
push
add
jo
jecxz
lods
add
insb
add
push
js
cli
add
xchg
jno
clc
add
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
out
xchg
int
add
lret
rorb
call
cmpsb
push
add
add
mov
add
jae
mov
lods
add
add
xchg
int
mov
xchg
sub
pop
pushl
pushl
push
push
call
cmpb
testl
subl
shrl
call
fwait
call
int3
add
loop
std
push
jmp
add
sub
pop
call
push
push
push
push
push
lea
push
call
pop
add
add
roll
pop
popa
sub
mov
nop
notb
data16
add
add
jp
loope
add
ja
call
cwtl
add
xchg
add
nop
add
in
cld
jbe
add
add
cmpsb
jecxz
add
add
add
pop
sub
pop
pushl
pushl
push
lea
push
push
lea
push
push
call
icebp
add
icebp
mov
mov
cmp
add
mov
add
outsl
fcmovu
lods
add
xchg
pop
jo
lods
test
push
add
add
mov
insb
add
add
ljmp
xchg
mov
out
jno
mov
mov
pop
push
sub
pop
call
push
push
sub
shl
push
or
inc
add
sub
sub
pop
add
pop
push
push
push
push
push
lea
push
lea
push
call
add
test
filds
pop
rol
add
mov
repnz
add
add
mov
jb
add
lret
add
out
push
pop
rcr
mov
add
xchg
roll
hlt
add
add
add
add
shrb
add
loopne
add
gs
push
fwait
incb
lcall
jne
push
push
push
push
lea
push
lea
push
push
push
call
negl
addr16
hlt
scas
add
int3
movb
add
in
popf
stc
popf
jmp
add
add
lret
pop
pop
aad
popf
add
loope
mov
add
mov
add
add
add
out
pop
popa
mov
pop
call
push
push
push
shl
push
or
not
add
sub
shl
not
pop
ror
shl
pop
push
lea
push
lea
push
lea
push
push
lea
push
push
call
mov
add
cwtl
imul
in
shlb
mov
movsl
mov
popl
add
add
fs
test
fs
fisubrs
pop
ja
mov
int3
jecxz
mov
pushf
gs
mov
add
lret
outsl
pop
gs
lcall
pop
push
push
push
push
push
push
push
push
lea
push
call
sti
outsl
mov
add
add
jne
xchg
cmc
lods
data16
pop
add
add
add
mov
mov
xchg
mov
sahf
mov
bound
ja
add
push
add
lods
sahf
shrl
stos
sar
push
add
mov
lcall
add
pop
lret
call
repnz
jne
jmp
mov
jmp
roll
mov
jno
js
insb
loope
add
add
jns
je
mov
ljmp
lahf
out
push
push
lock
pop
call
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
push
add
les
mov
jnp
testb
add
addr16
testb
jns
lds
std
aam
add
push
addb
pusha
add
add
jno
pop
fstpt
int3
add
mov
int3
lea
cltd
pop
sub
pop
mov
push
push
call
add
add
push
test
add
xchg
add
add
data16
divl
movsb
loopne
xchg
add
add
js
insb
pusha
mov
addr16
add
lret
pop
add
lcall
add
into
pop
add
jns
pop
arpl
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
addl
icebp
sub
loope
popa
mov
sti
add
pop
add
xchg
into
mov
call
push
pop
pop
lcall
mov
lcall
jae
add
add
out
sar
into
jmp
add
testb
push
push
push
push
push
push
push
lea
push
call
add
add
add
mov
lret
add
ja
push
mov
push
add
jnp
add
jmp
xchg
add
mov
data16
add
stos
mov
add
jae
mov
lret
add
add
add
mov
mov
mov
ljmp
pop
mov
push
lea
push
push
push
push
call
cld
js
add
int3
test
jle
add
nop
add
stos
add
js
in
mov
jno
xlat
jle
nop
lock
in
add
sarl
add
jno
lds
mov
pop
sub
pop
add
add
push
push
lea
push
push
push
call
fcoms
arpl
add
add
stc
ljmp
imul
add
add
mov
aad
jno
idivl
test
mov
jno
nop
xchg
add
lcall
ret
push
inc
add
push
push
push
lea
push
push
call
jp
shll
std
add
add
add
lcall
out
add
pop
lods
add
scas
cwtl
mov
add
add
xchg
push
add
add
add
add
xor
mov
add
xchg
add
add
add
bound
push
add
in
in
lcall
xor
jno
adc
lea
push
push
push
push
call
popf
mov
out
lret
addr16
xlat
add
add
sahf
pop
add
add
in
shll
mov
mov
jne
fmuls
bound
mov
jne
jb
push
je
add
mov
add
xchg
add
push
add
add
test
add
call
xor
push
push
push
push
call
mov
mov
add
add
lea
pusha
add
add
les
je
jge
pop
push
add
add
add
pop
add
push
push
push
push
push
lea
push
push
push
call
add
aad
fists
cmpsl
add
push
xchg
rcr
add
lods
jge
mov
xchg
add
add
add
scas
enter
test
ret
insb
idivb
add
int
in
loopne
add
push
push
push
lea
push
lea
push
call
pop
icebp
leave
push
add
jmp
xchg
add
addb
cld
add
movsl
pop
flds
enter
add
push
add
int3
rcl
mov
data16
xlat
add
add
add
add
add
add
add
mov
andl
pop
push
push
push
push
push
call
add
jle
add
add
insb
add
add
jo
add
push
add
jl
orb
add
add
stos
sti
in
aad
out
add
add
jl
xchg
rclb
sub
pop
mov
xor
push
lea
push
push
push
lea
push
push
push
push
push
call
imul
add
testl
lcall
add
mov
add
push
add
mov
pop
add
stc
out
sub
pop
add
push
push
call
testl
test
ja
add
les
fs
cld
push
add
add
add
mov
add
xchg
lods
rcl
push
lods
pop
call
jns
add
in
add
call
stos
xchg
add
add
sub
pop
pop
push
push
push
lea
push
call
jnp
add
cmpsb
push
fistps
fdivs
lock
cwtl
fldl
mov
add
in
add
push
aam
mov
in
ljmp
arpl
sahf
popa
add
ljmp
imul
mov
xor
push
push
lea
push
lea
push
push
call
int3
mov
add
movsb
mov
mov
movsl
imul
add
pop
fildl
mov
add
push
xchg
xchg
ljmp
data16
leave
add
bound
jns
fisubs
fldl
pushf
add
sub
pop
push
push
push
push
push
push
push
lea
push
call
fdivs
loop
add
pop
pop
add
add
xchg
lods
add
mov
add
std
push
loop
scas
add
add
ret
add
mov
push
filds
add
pusha
sub
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
call
test
add
cwtl
add
add
mov
add
add
jne
add
cli
cwtl
add
flds
gs
add
test
pop
addb
out
out
jp
mov
into
add
add
ret
fadds
push
add
in
loopne
xor
push
push
push
push
push
push
call
add
jae
mov
rorl
mov
out
add
out
add
loop
xchg
add
xchg
enter
xchg
add
add
xchg
sub
pop
add
push
lea
push
push
push
lea
push
lea
push
call
add
xchg
add
fmul
cmc
add
push
ljmp
subb
jno
add
test
mov
fistl
add
mov
jecxz
imul
scas
add
in
call
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
scas
fisubs
ret
pop
add
imul
fsubr
loope
add
add
add
add
push
add
jbe
cmpb
add
jne
add
lock
add
push
add
xchg
mov
data16
mov
cmpb
test
sub
pop
rep
push
push
call
stos
test
add
push
xchg
add
in
add
scas
mov
popa
hlt
pushf
imul
jle
fiaddl
xchg
clc
add
cmpsb
mov
aam
roll
add
add
xchg
add
lcall
mov
push
push
push
push
call
push
pushf
jne
add
add
cmc
nop
iret
mov
xchg
aad
out
add
hlt
clc
loopne
push
add
into
xchg
fildll
add
imul
pop
cmpsb
add
sub
pop
add
push
push
push
lea
push
push
push
push
push
call
movb
add
add
add
clc
into
movsl
jae
add
jp
add
add
call
mov
mov
nop
fs
imul
cmpsb
add
add
loopne
lcall
ret
add
add
add
push
ror
xor
sub
pop
mov
push
push
push
call
add
add
add
in
xchg
add
add
adcb
mov
mov
lods
add
add
add
mov
mov
mov
add
add
cltd
mov
ret
movsb
xchg
jb
pop
cld
add
add
popf
add
rcr
mov
lcall
bound
lcall
add
push
push
push
push
push
push
push
call
fiaddl
push
out
mov
test
aad
add
mov
in
mov
lods
add
loope
push
add
mov
ljmp
cmpsb
add
add
push
js
test
xchg
mov
add
push
push
lea
push
call
add
add
add
fistps
cltd
test
jl
jns
pop
movsb
out
movl
add
mov
in
add
add
add
add
pusha
add
mov
lcall
push
and
xor
adc
mov
lahf
js
lea
shrb
push
lea
push
push
call
xchg
push
add
mov
mov
add
mov
popl
xchg
cmpsb
test
jmp
push
pop
add
push
mov
in
add
mov
in
in
lcall
adc
push
push
push
push
push
push
push
push
push
push
call
add
add
mov
faddp
nop
mov
add
mov
xchg
add
fsubs
pushf
aad
mov
movsb
in
mulb
add
add
mov
repnz
mov
rolb
xchg
xchg
imul
add
add
jno
add
sahf
sahf
mov
in
scas
add
mov
in
mov
push
sub
pop
add
push
push
push
call
loope
movsl
push
ja
add
arpl
add
aam
push
mov
call
add
add
add
push
cmpsb
add
lcall
dec
sub
adc
leave
or
ret
shrb
aam
rcrb
rorl
stos
push
push
or
inc
add
sub
not
inc
xor
add
pop
xor
shl
shr
lea
pop
push
lea
push
lea
push
push
push
push
lea
push
push
call
out
mov
scas
repnz
jb
test
scas
sahf
enter
add
add
lret
mov
add
test
mov
in
loopne
lcall
jne
push
not
add
shr
pop
call
push
shr
sub
pop
push
push
push
ror
push
or
not
add
dec
sub
sub
add
ror
pop
lea
pop
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
add
cld
add
add
out
add
in
add
add
pop
cld
push
ror
add
add
outsl
add
push
add
sub
pop
push
push
push
lea
pop
call
push
push
call
xorl
add
mov
pop
frstor
push
mov
roll
xchg
add
in
fiadds
mov
add
add
cmpsl
pop
pushf
jl
mov
popl
addl
add
add
mov
push
aam
mov
mov
jl
lock
addl
sub
pop
mov
push
ror
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
fstpt
add
add
sbb
add
xchg
add
iret
cwtl
mov
mov
out
add
xchg
leave
out
mov
add
lock
add
push
ficoms
add
add
add
in
loopne
mov
add
push
push
push
call
leave
add
add
lods
fldl
leave
stos
pop
pusha
add
pushf
add
add
rcr
scas
fwait
add
add
add
add
jo
std
mov
popa
push
add
test
add
add
xchg
add
sahf
stos
pop
add
jl
loop
lret
add
add
add
cmpsl
jmp
je
add
jmp
jnp
sub
pop
add
push
push
push
push
call
add
mov
cmc
pop
popf
add
nop
add
jge
test
xchg
xorl
add
xchg
incb
addr16
mov
icebp
pop
fildll
add
outsl
xchg
vpaddq
add
out
jp
in
lock
lcall
ret
push
inc
add
push
push
call
jae
add
mov
jmp
movsb
push
add
xchg
xchg
add
add
add
add
mov
rcrl
pop
add
mov
mov
call
add
add
popf
add
enter
push
in
ficoms
mov
add
aam
in
scas
add
flds
lcall
jae
push
push
lea
push
call
add
push
add
add
mov
add
test
imul
add
insb
hlt
xorb
sub
pop
xor
push
push
push
push
push
lea
push
push
push
push
call
add
jnp
lock
in
xchg
arpl
add
call
fwait
add
add
add
into
add
scas
lret
add
add
jl
add
xchg
add
xchg
add
movsl
jb
ljmp
pop
mov
add
imul
popa
add
test
les
push
lea
push
push
push
push
lea
push
lea
push
call
pop
lahf
std
add
add
push
scas
in
addb
xlat
imul
add
add
add
jno
jbe
add
push
lods
xchg
pusha
popa
adcl
jne
push
push
call
add
add
call
cmpb
add
jne
add
add
add
lcall
mov
cld
mov
mov
add
xlat
add
add
add
add
bound
add
add
add
add
aad
sub
pop
push
push
lea
push
lea
push
call
mov
add
add
xchg
add
jle
push
add
add
lahf
add
popl
rcrl
flds
add
popf
push
pop
add
test
test
pushf
outsl
lods
add
push
add
in
hlt
pop
mov
xor
push
push
push
push
push
push
lea
push
push
call
add
cmpsl
add
cli
test
add
movsl
add
add
lods
add
ljmp
fwait
jo
add
mov
add
add
pop
add
add
addr16
add
pop
mov
add
popf
add
jae
negb
mov
lock
push
push
push
push
push
push
call
fldenv
leave
add
push
fs
jo
cli
mov
xlat
add
filds
fistpl
add
enter
stc
mov
jecxz
lret
cmpsl
scas
jno
add
add
roll
add
push
push
push
push
push
push
push
push
call
enter
loopne
add
add
idiv
xchg
add
add
add
mov
les
jne
add
xchg
popf
pop
out
out
mov
sub
pop
mov
push
push
push
call
enter
loope
in
mov
in
test
mov
add
pop
js
add
pop
roll
loope
test
ljmp
add
add
jb
sub
pop
xor
push
push
push
push
lea
push
call
add
add
add
jp
mov
add
add
repnz
fidivrs
add
lahf
add
add
push
stc
hlt
sub
pop
add
push
push
lea
push
call
add
fadds
add
ror
add
mov
add
loopne
jno
mov
add
add
rcll
test
add
add
insb
mov
add
add
clc
fdivrp
jle
sub
pop
rep
mov
push
push
push
lea
push
push
push
lea
push
call
xchg
aam
fwait
jns
int3
movsb
pop
xchg
push
jns
stos
xchg
test
sti
pop
mov
add
mov
push
add
add
add
shll
scas
add
test
pop
push
add
scas
lds
imul
pop
xor
push
push
push
call
mov
in
jl
clc
add
add
mov
lea
jno
add
mov
add
add
test
sti
push
add
push
call
movb
add
lock
testb
mov
icebp
add
add
call
add
imul
test
add
les
sub
pop
or
je
push
add
inc
pop
mov
push
push
push
push
push
push
push
push
call
sarl
add
add
fdivs
lods
pop
testl
ljmp
out
add
add
jle
add
add
imul
add
lcall
xor
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
leave
add
pusha
jnp
add
mov
add
shl
add
jp
lods
add
mov
add
add
in
out
add
in
leave
add
lods
fwait
add
add
lods
add
xchg
jns
add
mov
cli
add
fcomps
les
ror
add
pop
mov
xor
push
push
lea
push
push
lea
push
lea
push
call
subb
fwait
add
add
sahf
enter
push
test
jo
scas
add
mov
add
add
ficompl
add
jmp
add
add
add
mov
add
roll
add
in
in
call
shr
inc
dec
pop
add
push
sub
rol
lea
pop
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
mov
fistps
push
in
add
add
jnp
nop
lret
jmp
add
jle
gs
lcall
add
xchg
jge
mov
mov
add
mov
fcomps
inc
or
adc
call
add
pop
push
push
push
lea
push
push
push
push
push
push
call
loop
bound
xchg
add
pop
add
add
ret
bound
pusha
fildl
mov
add
add
add
add
cmpl
dec
mov
add
std
stos
shrl
add
add
add
mov
add
scas
xorl
rep
mov
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
jmp
push
loop
mov
mov
stos
imul
mov
add
cld
lret
mov
jbe
add
sar
pop
add
add
addl
mov
add
add
je
add
repnz
pushf
loope
add
in
in
xor
push
push
lea
push
push
push
push
call
stc
insb
add
add
bound
add
test
add
add
xlat
add
data16
pusha
aad
lcall
mov
add
mov
mov
test
in
in
pop
ja
scas
add
out
in
neg
sub
pop
add
push
sub
pop
or
je
push
lea
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
push
in
lods
cli
mov
add
add
add
popa
mov
add
mov
addb
xchg
gs
mov
in
fdivr
lcall
sub
movb
add
push
sub
pop
rep
push
xor
pop
pop
push
push
ror
dec
push
push
pop
add
sub
sub
pop
inc
xor
pop
push
not
sub
pop
pop
mov
push
shl
add
pop
mov
push
push
push
push
call
flds
cli
add
ljmp
stos
fldl
int3
outsl
add
add
add
add
mov
add
add
xchg
add
mov
add
add
cld
jbe
add
cli
pop
fbstp
cmpsl
scas
lret
shlb
add
lcall
inc
and
push
push
push
push
push
push
push
call
mov
add
stos
mov
add
fldenv
ret
je
add
fstpt
fwait
mov
mov
mov
jo
add
add
mov
add
add
mov
mov
push
add
in
mov
add
add
pop
jmp
push
lea
push
push
push
push
push
push
push
push
call
mov
add
jp
xchg
add
in
repnz
fwait
cld
add
mov
stos
add
test
mov
shll
add
add
add
push
cmc
pop
add
lods
add
jno
xchg
add
out
pop
leave
mov
sub
pop
push
push
dec
add
pop
mov
push
lea
push
push
push
call
add
add
scas
mov
mov
add
add
xchg
iret
add
mov
mov
leave
aam
cwtl
stos
add
push
mov
cltd
xchg
push
add
add
pop
call
cld
js
push
mov
add
lcall
cld
push
push
push
push
push
push
push
call
pop
add
lea
add
sti
rcll
add
jmp
stos
jbe
hlt
add
stc
jne
lcall
in
push
push
sub
pop
push
push
push
push
call
fldcw
push
fs
push
xchg
add
cwtl
add
test
cmpsl
add
add
xchg
xchg
stos
add
lods
add
enter
add
je
add
add
add
out
add
xchg
add
mov
leave
add
xorl
inc
lea
push
push
push
push
call
scas
leave
in
fidivs
out
addl
cwtl
cmc
lret
imul
cld
lahf
cmpsb
arpl
shlb
add
push
cmpsl
ja
add
sub
pop
push
push
ror
not
sub
pop
mov
push
add
not
sub
add
pop
pop
pop
push
push
lea
push
call
fwait
mov
int3
add
add
pop
pop
jp
mov
fiaddl
loope
add
add
add
add
add
movl
add
add
mov
add
add
add
sub
pop
pop
pop
push
inc
pop
leave
ret
push
lea
push
push
push
lea
push
push
push
push
call
push
push
jns
roll
mov
les
add
jnp
add
add
test
add
jecxz
mov
mov
add
add
loopne
lcall
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
jmp
push
add
in
fistpl
xchg
jne
mov
xchg
add
lahf
add
mov
mov
faddl
pop
incb
add
mov
mov
add
enter
jne
in
fcompl
in
add
push
add
xor
lea
pop
push
push
pop
push
push
push
push
call
mov
leave
cmpsb
xorl
mov
add
add
outsl
aad
push
add
add
xchg
lahf
add
jecxz
mov
add
add
jnp
fnstcw
pop
add
mov
add
jl
add
add
mov
pop
add
add
add
add
mov
clc
pop
push
movl
push
lea
pop
addl
push
not
add
pop
test
je
mov
push
shr
rol
pop
pop
push
lea
dec
ror
shl
pop
pop
push
push
push
lea
push
push
call
mov
add
add
jno
fistpl
mov
add
add
xchg
cld
repnz
cmpsl
add
add
push
add
int
add
add
clc
pop
push
mov
mov
add
mov
mov
sahf
add
testl
arpl
add
jno
sub
pop
pop
push
push
push
push
push
push
lea
push
call
addb
mov
jo
fists
push
mov
mov
insb
xchg
repnz
add
xchg
cmc
add
add
add
cmpsb
add
push
insb
sub
pop
pop
leave
push
lea
push
lea
push
call
add
std
add
pushf
pop
jp
cmpsb
ja
xchg
add
push
rolb
add
test
mov
pop
mov
push
mov
insb
mov
add
add
std
add
fiadds
imul
addb
fld
add
xchg
nop
add
xchg
add
add
mov
add
jnp
in
hlt
pop
ret
push
push
add
shr
pop
mov
add
push
push
push
lea
push
push
lea
push
lea
push
call
hlt
loopne
fsts
add
lcall
mov
add
test
jne
add
movsl
inc
add
add
xchg
add
les
push
jge
in
in
lcall
push
push
push
push
push
push
lea
push
push
lea
push
push
call
aad
sahf
out
add
mov
ja
outsl
add
add
push
nop
add
jns
jno
add
je
add
add
iret
push
add
xchg
jnp
in
fcompl
push
push
push
push
push
call
addl
fiadds
add
push
add
lret
add
push
add
jecxz
add
in
add
test
insb
xchg
add
mov
clc
ficoms
add
jbe
add
je
cmpsb
icebp
je
add
cmpsl
add
jo
mov
pop
mov
pop
mov
add
pop
jecxz
pop
mov
lcall
push
lea
push
push
call
add
add
add
xchg
rcll
add
leave
lcall
mov
xchg
sahf
add
jecxz
iret
add
add
sub
pop
testl
push
push
push
lea
push
push
lea
push
push
push
call
add
fildl
imul
jge
cmc
cwtl
add
add
movsl
test
std
add
add
add
hlt
add
add
push
add
add
add
add
rolb
add
movsb
lret
jnp
lock
mov
xchg
mov
add
add
bnd
fwait
add
lea
lea
in
loopne
addl
push
push
push
lea
push
push
call
repnz
add
xchg
pop
jl
add
add
jne
jbe
lea
cltd
jl
add
mov
xchg
jle
pop
add
out
mov
lcall
cmp
decl
shl
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
test
add
add
stos
add
cmpsl
push
leave
add
mov
add
add
xchg
jnp
bound
push
sub
pop
push
push
add
inc
shl
xor
pop
push
call
push
xor
sub
pop
cmpl
jne
pop
push
rol
sub
rol
shl
pop
pop
push
push
lea
push
push
push
push
call
mov
fcomps
add
mov
mov
add
push
add
add
add
add
add
lods
add
bound
add
mov
rcrb
add
xchg
add
mov
fnstcw
data16
pop
push
push
push
push
push
push
push
call
add
jge
stos
mov
mov
fistl
lret
xchg
add
js
add
xchg
add
add
add
pop
fnstcw
stc
add
aad
push
add
add
int3
add
clc
sarl
xchg
mov
fildl
xchg
les
in
lcall
push
add
shl
rol
pop
leave
push
shr
pop
ret
push
push
push
call
xchg
add
lcall
sti
sti
add
je
add
add
repnz
in
add
xchg
ret
lcall
add
push
jge
add
pop
icebp
arpl
lret
lea
add
push
push
push
push
push
push
push
push
push
push
call
jl
jl
in
ja
push
fdivl
in
sarl
popa
add
mov
sahf
add
arpl
int
out
test
add
add
push
insb
sub
pop
mov
push
add
shr
shl
pop
add
push
push
push
push
call
ret
mov
add
sti
lea
add
fwait
add
push
in
js
add
add
cld
mov
jl
in
mov
addr16
add
bound
nop
add
add
shl
add
int3
sub
pop
push
push
lea
pop
push
push
sub
pop
push
push
push
push
call
mov
xchg
push
push
push
add
add
mov
fisubrs
in
add
add
mov
in
out
shrb
sub
pop
movl
push
rol
pop
push
call
push
push
lea
push
push
push
call
push
mov
add
loopne
mov
jo
jae
fwait
nop
add
add
add
add
xchg
add
mov
in
in
lcall
or
inc
xor
sub
pop
call
push
pop
subl
push
shr
rol
not
inc
pop
cmpl
jne
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
shlb
add
push
push
stc
add
add
add
mov
int3
mov
lret
shll
aad
mov
add
xchg
push
dec
rol
pop
pop
push
push
call
mov
add
add
xchg
cltd
add
fs
std
mov
icebp
pushf
icebp
shr
xchg
mov
add
jne
add
add
leave
push
inc
rol
pop
ret
push
push
push
push
push
push
push
call
xchg
add
add
cmpl
rolb
add
cltd
add
lods
mov
mov
add
arpl
push
add
ja
outsl
mov
add
lcall
mov
push
shr
pop
add
push
push
shl
add
rol
pop
push
push
sub
xor
shr
pop
push
push
push
lea
push
push
push
push
push
push
call
loop
add
add
pop
std
outsl
aam
lods
add
stos
add
test
xchg
fildll
push
add
add
add
xchg
add
add
std
pop
add
add
movsb
mov
cltd
xchg
cld
add
jge
jno
pusha
add
in
ror
add
add
loopne
add
xchg
mov
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
call
repnz
add
cmc
add
add
add
add
fsubs
mov
mov
add
into
add
jecxz
stos
push
pusha
lahf
add
add
add
add
add
clc
add
jne
in
pop
stos
sub
pop
lea
push
push
push
push
lea
push
lea
push
push
call
iret
mov
scas
add
jns
int
add
xchg
add
cmpsl
lea
in
pushf
mov
roll
mov
jmp
add
sahf
add
sub
pop
sub
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
jp
add
add
ja
jno
mov
sar
ret
enter
add
add
movsb
scas
mov
add
add
add
cmpsl
add
push
add
add
popl
add
fcompl
add
push
push
lea
push
push
call
add
add
jns
stos
cmpsb
imulb
ficompl
movsl
jbe
xchg
add
idivb
add
rolb
mov
add
add
add
mov
add
cltd
movb
add
lcall
call
push
push
push
push
push
push
push
push
push
call
bound
add
add
clc
rolb
cwtl
sub
jle
popf
gs
add
movsl
push
add
out
jb
lret
add
xlat
icebp
mov
add
add
jne
add
push
loop
add
faddl
icebp
call
add
push
fs
add
inc
cld
push
not
rol
lea
pop
mov
add
push
push
push
call
mov
jns
add
lock
push
cmpsl
push
int
out
add
push
arpl
pop
add
pop
mov
push
lock
add
add
nop
in
add
lcall
shlb
inc
add
add
jo
push
push
push
push
push
push
call
incb
cwtl
in
mov
jle
xchg
add
cli
push
xchg
add
push
mov
add
mov
loope
push
out
add
add
xchg
add
sahf
add
add
rcrb
into
int
in
in
mov
push
push
push
push
push
call
add
mov
lds
add
sahf
add
leave
out
add
cli
lea
xchg
add
add
jae
add
jmp
data16
in
shll
mov
add
loop
jno
add
loopne
imul
sub
pop
cmp
jne
cmp
jne
push
add
pop
mov
movl
push
push
push
push
lea
push
push
call
fadds
enter
add
add
js
popa
mov
fnsave
add
xchg
add
add
add
popa
xor
call
add
mov
push
push
push
push
push
lea
push
push
push
call
rolb
add
add
mov
add
loop
in
push
jle
fildl
add
gs
add
add
lahf
mov
add
add
cmpsb
jl
sub
pop
mov
sub
jne
push
lea
push
lea
push
push
lea
push
push
push
push
call
fwait
add
pop
add
xchg
imulb
cmpsb
lcall
add
lds
add
jbe
mov
add
leave
add
out
in
add
jmp
pusha
xchg
add
test
xlat
mov
pop
add
add
add
add
lret
add
mov
push
dec
not
sub
pop
movl
jmp
push
not
xor
pop
mov
push
dec
not
shr
pop
mov
push
push
push
call
jne
adcl
mov
arpl
add
add
mov
xchg
add
add
add
push
lods
add
ljmp
lds
ja
add
xchg
add
int
pop
scas
mov
int
fiaddl
out
add
in
push
add
in
add
jl
loopne
fnstenv
mov
repnz
pop
cmp
jne
push
dec
add
xor
sub
pop
mov
push
shl
pop
movl
push
push
push
push
push
push
lea
push
lea
push
push
push
call
into
add
lcall
int
add
pop
add
xchg
xlat
ljmp
jle
pop
icebp
movsb
add
rolb
mov
ja
push
add
repnz
add
mov
mov
insb
jb
push
add
pop
subb
mov
add
je
add
push
inc
sub
pop
mov
push
push
call
movsb
add
xchg
jnp
in
and
rolb
bound
mov
push
add
ja
cmpsl
in
mov
add
bound
adc
cltd
jnp
mov
pop
addr16
lods
in
add
stos
jl
std
add
pusha
cltd
bound
add
add
xchg
rcl
aad
add
add
jmp
ljmp
cmpw
jne
mov
push
lea
add
pop
movl
push
add
pop
jmp
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
sahf
add
add
jp
scas
add
lcall
push
fiaddl
mov
bound
jle
mov
lcall
addr16
in
fcomps
pushl
pop
push
push
lea
push
push
push
call
add
fadds
pop
nop
add
add
lahf
icebp
mov
xchg
add
add
add
add
add
test
add
lret
cli
jbe
add
add
add
sbbb
add
out
into
add
add
add
add
add
pop
xchg
inc
or
shr
shr
shl
pop
mov
push
rol
shr
pop
mov
push
push
rol
not
add
push
sub
add
rol
sub
add
sub
pop
shl
xor
sub
pop
push
push
push
push
lea
push
push
push
push
call
push
add
add
add
add
jno
add
add
movsl
std
scas
jae
fiaddl
add
fidivrl
fldl
aad
add
loopne
xchg
movb
fldpi
stc
jae
add
in
xchg
sub
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
add
xchg
add
add
fdivs
xchg
add
add
mov
fwait
add
mov
add
add
add
mov
sub
pop
call
push
shr
lea
sub
pop
cmpl
je
push
push
dec
sub
add
push
sub
add
ror
sub
inc
pop
pop
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
nop
push
fwait
mov
add
mov
add
lret
jmp
fldl
rcll
add
add
add
loop
ja
int3
add
xchg
jge
add
add
add
popf
popa
pop
add
add
lcall
push
push
push
call
push
push
popf
add
lods
mov
test
add
pop
scas
int
add
add
push
mov
add
add
add
leave
mov
pop
add
add
insb
add
lea
lcall
pusha
cmp
rcrb
add
fldz
ret
adc
add
push
push
xor
xor
push
and
add
shl
add
sub
sub
ror
pop
shl
add
pop
push
push
push
call
add
shll
mov
xchg
add
mov
mov
enter
add
mov
addb
into
pop
mov
add
add
test
xchg
rolb
enter
cli
test
add
add
fwait
mul
pop
add
add
add
pop
imul
hlt
pop
push
push
push
push
push
call
lods
add
add
icebp
add
test
push
cld
add
jns
in
adcl
mov
scas
mov
lock
lcall
js
add
cmpl
je
push
push
add
push
push
pop
add
rol
sub
ror
rol
sub
pop
add
add
inc
pop
push
dec
shr
ror
pop
push
push
push
push
push
push
lea
push
push
push
push
push
call
mov
push
popa
repnz
add
lds
out
mov
jns
test
stc
sahf
add
testb
add
push
ja
rorb
add
jo
loope
add
addb
xchg
jp
scas
out
test
stc
add
add
lds
mov
in
fcomps
sarl
add
ret
call
cmpl
je
push
push
lea
dec
sub
xor
push
xor
add
not
sub
sub
add
pop
sub
pop
push
add
ror
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
pop
fiadds
add
mov
push
add
push
stos
int3
clc
leave
add
cwtl
enter
lret
pop
mov
add
subb
fildl
outsl
add
fbstp
ret
mov
lret
jbe
popl
add
les
in
ja
xchg
int3
jmp
mov
mov
in
jnp
sub
pop
call
cmpl
je
push
push
not
sub
sub
not
push
sub
add
add
add
sub
add
lea
ror
pop
add
pop
push
pop
push
push
push
call
mov
xchg
add
pop
lea
mov
out
aam
test
add
xchg
xchg
lods
sahf
arpl
push
mov
jecxz
ret
add
add
rorl
cmc
clc
out
sub
pop
call
cmpl
je
push
push
sub
push
or
not
add
add
add
sub
add
pop
dec
pop
push
shr
pop
push
push
push
push
push
push
lea
push
push
push
call
loop
xchg
pop
stos
add
xchg
jb
insb
add
icebp
mov
pop
add
icebp
add
add
in
add
fbstp
add
add
add
add
cmc
add
out
mov
mov
imul
mov
add
cwtl
fidivrl
jb
test
mov
loopne
call
push
push
lea
push
push
push
push
push
push
push
call
lods
nop
iret
add
add
mov
add
xchg
add
add
add
aad
mov
add
xchg
mov
jns
add
rol
xchg
jmp
pop
int
jecxz
add
loope
js
push
add
add
add
fs
add
pop
cmpl
je
push
push
shl
push
sub
add
sub
ror
sub
sub
xor
not
pop
sub
dec
pop
push
ror
ror
dec
pop
push
push
push
push
lea
push
lea
push
call
jo
add
out
add
loope
add
out
add
gs
int
mov
add
add
mov
jge
mov
xchg
add
mov
add
push
shr
pop
cmpl
je
push
push
add
shl
rol
push
and
add
sub
add
dec
pop
not
pop
push
dec
lea
pop
push
push
push
push
lea
push
push
push
push
call
add
push
add
add
pop
icebp
jae
add
mov
jo
jno
add
add
iret
bnd
mov
mov
mov
loop
js
add
stos
add
movsl
add
add
add
add
xchg
xchg
or
add
mov
add
in
in
call
cmpl
je
push
push
lea
dec
rol
push
push
pop
add
sub
sub
dec
pop
lea
rol
pop
push
push
lea
push
lea
push
call
not
imul
lcall
add
fucompp
push
add
pop
mov
out
mov
add
pop
int3
add
add
mov
pop
add
test
notl
shll
add
xchg
jle
add
jnp
add
test
jb
sub
pop
push
call
push
add
lea
pop
cmpl
je
push
push
rol
sub
push
or
not
add
not
not
sub
dec
add
rol
pop
sub
pop
push
not
shr
add
shr
pop
push
push
push
push
lea
push
call
add
add
xchg
stos
pop
lods
push
add
add
xchg
mov
pop
jae
add
ret
shr
out
call
add
add
mov
lret
roll
in
lock
lcall
imul
add
ret
rol
lret
cmpl
je
push
push
inc
push
xor
add
sub
sub
dec
not
pop
lea
pop
push
sub
shr
lea
pop
push
push
not
shr
inc
pop
call
push
shl
rol
sub
pop
cmpl
je
push
push
add
lea
push
sub
add
add
add
sub
shr
xor
pop
dec
xor
xor
pop
push
rol
not
pop
push
push
lea
sub
sub
not
pop
call
push
rol
shr
pop
cmpl
jne
push
push
push
call
xchg
fiadds
out
add
cli
add
push
jl
add
mov
ret
jge
movb
add
in
add
mov
mov
add
add
popf
out
add
fcmovu
iret
into
mov
add
out
add
popf
sub
pop
mov
push
pop
movl
jmp
push
push
push
push
push
push
call
add
shl
add
outsl
mov
insb
add
mov
push
add
testl
filds
lea
leave
jbe
pusha
add
add
rolb
outsl
mov
jo
pop
xchg
std
add
add
add
rclb
mov
inc
add
add
jne
not
add
xlat
push
mov
push
add
add
shll
xchg
into
add
add
add
push
add
add
jle
movb
jno
out
rolb
add
push
js
lods
add
in
hlt
lcall
push
push
push
lea
push
push
push
call
add
add
push
add
add
add
add
in
addr16
push
mov
add
adcl
add
hlt
add
fildl
les
call
test
sub
pop
push
push
push
lea
push
push
push
push
push
push
call
loopne
jecxz
loope
cltd
mov
add
add
faddl
outsl
mov
mov
addr16
add
add
add
call
in
fdivr
lcall
push
sub
add
lea
shr
pop
leave
ret
push
push
call
in
jmp
add
ficoms
gs
stos
jne
ficoms
out
add
icebp
mov
add
iret
add
mov
add
add
nop
add
add
add
add
in
sahf
out
add
les
mov
push
add
add
data16
jo
add
add
clc
lcall
mov
push
pop
add
push
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
jnp
repnz
add
jns
push
add
insb
mov
add
add
jle
test
jnp
xchg
jmp
add
add
push
xchg
add
jo
add
add
aam
pushf
add
jle
add
les
jb
rolb
add
lcall
jge
add
test
add
add
adc
xlat
push
shr
push
or
inc
add
rol
sub
sub
pop
inc
shl
sub
pop
push
push
push
push
push
call
jno
add
movsb
push
pop
xorb
add
xchg
add
jns
add
jno
add
add
stc
mov
add
add
add
add
add
xchg
lret
fadds
mov
add
mov
jmp
in
in
pop
pushl
push
push
lea
push
push
push
lea
push
call
fildl
popf
cmpsl
loopne
mov
add
add
filds
mov
add
testb
les
mov
add
add
add
shlb
add
shlb
add
lea
push
call
mov
jl
mov
add
mov
fstps
test
jle
test
add
sti
cmc
pop
add
add
mov
add
enter
add
fxch
mov
clc
xchg
add
popl
add
bound
popl
stc
add
jl
mov
sarl
call
push
push
lea
push
push
lea
push
push
lea
push
call
mov
mov
add
enter
mov
jle
xchg
in
add
add
scas
bound
mov
mov
mov
movsb
add
xorl
add
enter
push
push
call
cli
add
add
lret
push
pop
gs
mov
add
fidivrs
iret
add
xchg
lahf
mov
movsb
in
add
in
test
jl
loope
sahf
add
pop
sahf
add
add
in
pop
pop
add
fdivrl
add
movsl
jbe
add
add
cmpl
je
push
ror
sub
pop
cmpl
jne
push
push
call
test
mov
loopne
int3
push
cmc
pop
stos
movb
int
add
roll
jmp
movsb
add
add
mov
add
add
add
add
mov
sub
pop
leave
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
iret
add
add
call
movsl
rclb
addr16
gs
jne
pushaw
add
testb
or
fdivs
fldt
fstpl
pop
push
add
pop
pop
pop
push
xor
pop
leave
push
push
push
push
call
jb
xchg
jae
add
mov
add
hlt
add
add
mov
xchg
add
add
add
add
add
pop
mov
add
add
lock
sub
pop
add
push
push
call
xchg
in
jo
bnd
enter
stos
add
lret
add
mov
out
add
add
out
cld
push
ret
xchg
mov
sbb
jle
lret
stos
xchg
lock
add
sahf
test
mov
in
sub
pop
ret
push
lea
pop
jmp
cmpl
jne
push
push
add
push
and
add
rol
not
sub
sub
xor
lea
pop
lea
inc
not
shr
pop
push
add
pop
pushl
push
push
lea
push
lea
push
push
push
push
push
call
add
rolb
jnp
pushf
int
add
add
add
rolb
js
xchg
ljmp
jge
mov
add
push
mov
mov
add
fiaddl
add
movsl
xchg
cwtl
stos
cmpsb
add
ret
out
sub
pop
call
push
xor
not
pop
push
push
add
sub
pop
call
push
push
lea
push
push
call
int
add
add
add
add
pop
xchg
add
outsl
mov
clc
in
add
lock
mov
mov
add
lods
data16
mov
in
lock
jmp
cmpl
jne
push
dec
pop
mov
mov
push
push
lea
push
push
push
push
push
lea
push
call
add
nop
push
mov
add
add
push
add
std
push
mov
add
add
pop
push
push
push
sub
ror
push
xor
add
lea
sub
inc
pop
add
ror
pop
push
push
push
push
push
push
push
lea
push
push
call
iret
stos
add
jae
add
repnz
add
push
push
add
loopne
xchg
pop
add
clc
pop
xchg
movsb
add
add
xchg
cli
icebp
leave
add
mov
add
add
mov
testb
add
add
loope
cmpsl
popa
pop
addl
add
add
add
out
xchg
jge
add
mov
add
push
scas
mov
out
add
lcall
jne
push
add
pop
call
push
push
lea
push
lea
push
push
lea
push
call
add
rolb
jle
add
push
testb
xchg
mov
movsl
in
jno
rcl
add
mov
lcall
in
call
push
sub
push
push
pop
add
inc
sub
add
pop
add
ror
pop
push
shr
dec
dec
pop
pushl
push
lea
push
push
push
call
jnp
add
pop
jb
movsb
add
add
aad
add
loop
jle
xchg
xchg
sti
jle
leave
add
push
add
cmpsb
sub
pop
call
push
inc
sub
pop
call
push
push
ror
add
push
xor
add
dec
add
inc
sub
rol
pop
add
shr
rol
rol
pop
push
push
call
add
pusha
cmpsl
insb
add
add
add
jbe
out
add
add
mov
imul
add
hlt
rorb
add
add
cwtl
add
add
add
add
xchg
sbb
add
out
lahf
jecxz
add
add
in
clc
lcall
jne
push
push
push
push
lea
push
push
call
notl
add
add
in
xchg
scas
fsubs
pop
outsl
add
add
add
aad
imul
mov
clc
scas
add
mov
add
cli
add
pushf
add
sub
pop
call
call
push
push
dec
push
or
not
add
sub
add
pop
ror
add
sub
shr
pop
push
shl
pop
pushl
push
not
shl
pop
call
push
inc
sub
pop
call
push
push
lea
lea
push
or
inc
add
sub
rol
not
xor
sub
sub
pop
rol
add
shl
pop
push
push
push
lea
push
call
stc
add
mov
loope
mov
iret
add
add
add
bound
insb
imul
add
add
scas
add
fldt
add
mov
out
clc
in
lret
add
ljmp
scas
addr16
jb
add
pop
loope
add
mov
lcall
lcall
jne
call
push
push
lea
push
lea
push
call
mov
xchg
out
aam
outsl
add
pop
add
into
fldl
add
xchg
testl
aam
add
stc
shll
add
add
movb
add
add
xchg
push
add
stc
xor
add
add
call
push
push
dec
push
and
add
add
inc
sub
shl
lea
ror
pop
inc
pop
push
pop
pushl
push
push
push
push
push
push
push
lea
push
call
add
add
enter
fisttps
iret
add
enter
add
add
jb
ja
push
faddl
add
loopne
add
lods
jge
add
jne
sub
pop
call
push
xor
pop
call
push
push
sub
lea
push
push
pop
add
lea
xor
inc
sub
add
add
pop
shl
shr
shr
pop
push
inc
shr
shl
pop
pushl
push
not
not
inc
lea
pop
call
push
lea
push
call
jl
ret
arpl
add
add
mov
add
push
adc
add
lods
xchg
popf
mov
add
rolb
add
add
js
call
in
clc
pop
call
push
push
sub
push
push
pop
add
shr
sub
add
lea
add
pop
shl
not
pop
push
push
push
push
push
call
cli
lds
add
push
cltd
add
int
mov
add
andb
repnz
loopne
add
add
add
cmc
jo
add
in
pop
pushl
call
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
fcmovne
insb
push
add
rcr
push
xchg
add
add
add
add
add
add
jns
leave
fistl
mov
mov
add
popf
fwait
add
loope
pop
sub
pop
call
push
push
ror
rol
push
or
not
add
lea
sub
pop
shr
inc
shr
pop
push
not
rol
not
pop
pushl
call
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
jle
add
iret
add
add
add
add
mov
add
fsub
add
add
add
mov
movsl
add
mov
add
add
mov
add
popf
test
jae
movsl
add
lcall
shrb
sub
mov
sub
push
and
add
rol
dec
shr
xor
sub
lea
pop
shr
not
pop
push
push
push
lea
push
push
call
mov
xchg
add
add
test
rolb
mov
add
add
icebp
jle
roll
add
mov
add
add
jnp
cli
add
in
add
jecxz
jb
add
mov
pop
fwait
lahf
filds
add
add
mov
pop
pushl
call
push
push
lea
push
lea
push
lea
push
push
push
call
add
call
mov
add
loope
jbe
add
test
pop
mov
xchg
in
push
adcl
sub
pop
lea
push
inc
ror
shr
pop
push
push
lea
inc
not
pop
call
push
push
inc
sub
rol
push
or
inc
add
add
sub
ror
xor
pop
inc
xor
not
pop
push
inc
pop
pushl
push
push
push
push
push
push
lea
push
call
in
add
add
add
add
add
sahf
in
add
pop
popl
push
add
add
add
add
bound
add
pop
add
jge
sub
pop
call
push
dec
not
rol
pop
call
push
push
rol
xor
sub
xor
push
or
not
add
add
add
sub
sub
shr
pop
sub
lea
not
pop
push
push
push
push
push
lea
push
call
pop
imul
roll
fwait
xchg
add
add
addr16
add
lods
pop
add
add
add
add
lcall
pusha
add
add
xchg
mov
rolb
add
add
add
add
add
jne
push
add
rol
pop
call
call
push
push
add
push
and
add
shl
lea
sub
not
pop
rol
pop
push
lea
push
push
push
push
lea
push
push
call
in
add
jnp
add
mov
lcall
pop
add
push
xchg
call
add
movsl
add
add
arpl
mov
add
add
add
add
add
mov
jmp
add
jno
jmp
in
in
lcall
jne
call
push
push
push
push
push
push
push
call
sarb
add
int3
mov
push
out
rcrb
pop
into
les
loopne
test
mov
fisttpl
out
imul
hlt
xchg
add
add
add
add
out
mov
lret
jno
in
in
call
push
add
add
sub
pop
lea
push
push
ror
add
xor
push
and
add
sub
shr
sub
sub
sub
lea
shl
add
pop
sub
shr
pop
push
push
push
push
push
lea
push
call
roll
sarb
xchg
mov
add
add
out
add
lds
insb
push
fcom
fildll
add
push
add
cltd
mov
add
pop
jecxz
add
jns
ljmp
mov
add
mov
jmp
movsl
test
out
in
call
push
push
push
push
push
push
push
push
push
call
add
push
lcall
add
add
mov
add
ret
popa
add
mov
push
stc
add
pop
add
add
add
data16
add
add
sti
add
nop
fldt
add
add
lcall
mov
add
push
push
push
push
call
add
add
add
add
addr16
in
imul
mov
mov
add
add
jno
scas
loopne
add
add
mov
add
add
cmpsb
arpl
mov
push
mov
add
add
jno
pop
data16
add
addr16
in
lock
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
aad
leave
add
push
mov
xchg
add
push
jne
add
pop
mov
movsb
mov
outsl
lds
mov
in
add
add
mov
imul
add
repnz
add
add
add
add
sub
pop
call
push
push
sub
rol
push
or
not
add
sub
sub
dec
ror
shr
pop
dec
pop
push
lea
dec
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
shl
mov
movsl
mov
add
add
pusha
jne
cld
add
jae
add
in
add
xchg
add
add
add
add
pop
mov
call
call
push
push
lea
push
push
push
push
push
push
push
call
push
in
std
sahf
mov
jo
into
add
std
loopne
mov
cmc
add
add
ret
add
add
add
xchg
add
popf
int
jecxz
stos
jl
out
lea
lahf
in
add
jne
popa
add
add
add
jno
mov
mov
data16
inc
cld
push
push
xor
inc
rol
push
xor
add
shr
not
sub
pop
shl
xor
add
pop
push
shr
sub
shl
pop
pushl
call
push
push
push
push
call
add
xchg
int3
out
sarb
jmp
mov
ret
aad
cmpb
sti
add
add
bnd
cwtl
into
add
fistpll
movsb
add
in
loope
add
lcall
add
pushl
push
shl
pop
call
push
push
add
shl
push
xor
add
ror
sub
ror
shl
lea
pop
add
add
add
pop
push
push
push
call
push
jmp
mov
pop
loopne
pop
out
mov
add
in
add
xchg
out
cwtl
int
add
enter
xlat
mov
add
mov
cmpsb
gs
stos
add
flds
add
scas
data16
jns
sub
pop
pushl
push
add
pop
call
push
push
lea
push
and
add
inc
shl
sub
shr
pop
shl
shr
pop
push
push
shr
shr
push
or
not
add
sub
add
sub
not
pop
sub
dec
ror
pop
push
dec
shl
dec
pop
call
push
push
not
push
xor
add
rol
ror
sub
shl
not
sub
dec
pop
xor
shl
pop
push
pop
pushl
push
ror
ror
pop
call
mov
push
xor
pop
lea
push
push
push
push
push
call
fst
imul
mov
add
jecxz
pop
ret
cwtl
arpl
clc
add
in
add
add
iret
jecxz
stos
cmpsl
add
add
lods
cmpl
sahf
pop
je
mov
in
pop
lea
push
push
add
add
shr
dec
pop
push
push
push
dec
lea
xor
pop
push
push
lea
push
push
push
call
hlt
add
mov
shlb
cli
add
mov
add
xchg
add
add
int
out
add
pop
clc
loope
clc
add
pop
out
add
add
add
movsb
add
add
test
add
push
jb
add
sub
pop
push
push
push
xor
xor
dec
inc
pop
push
push
push
lea
push
call
add
add
sub
add
add
add
aam
jle
iret
push
jns
add
add
lcall
test
jle
cmpb
in
addb
lock
sub
pop
pushl
push
lea
push
call
jge
outsl
add
js
add
arpl
add
mov
jne
imul
mov
ret
stos
add
add
int3
sbb
mov
add
nop
cmc
add
push
in
clc
pop
push
call
push
push
add
push
sub
add
not
shl
sub
shr
dec
pop
rol
pop
push
xor
not
pop
pushl
push
push
push
lea
push
push
call
mov
add
movsl
roll
iret
mov
add
xchg
add
mov
add
pop
xchg
out
ret
cmc
enter
add
fcomps
add
add
pop
jecxz
mov
movsb
incb
add
ret
push
jne
add
fadd
add
mov
jno
push
add
jl
sub
pop
call
call
push
shl
add
pop
mov
push
inc
shr
sub
shr
pop
pop
push
pop
dec
jne
jmp
push
push
push
push
push
lea
push
lea
push
push
push
call
popl
xchg
add
add
cmc
add
push
iret
nop
stc
add
add
add
add
mov
out
out
bnd
fadds
jne
iret
add
mov
out
out
mov
fcomps
push
loope
pop
add
mov
add
sub
pop
call
push
push
lea
ror
shr
inc
push
xor
add
sub
lea
add
shr
sub
shr
shl
pop
add
not
pop
push
pop
pushl
push
sub
sub
pop
call
push
push
push
push
push
lea
push
push
call
add
add
jbe
lods
mov
add
add
add
clc
mov
cmpsb
add
add
pop
lds
cltd
out
add
add
pop
xchg
cmpsl
add
mov
add
mov
pusha
scas
add
loopne
add
xchg
ja
add
sub
pop
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
jl
scas
mov
pop
popl
add
push
mov
mov
add
add
xchg
popf
jae
add
insb
push
add
add
rcr
aam
add
mov
lcall
into
fisubl
add
insb
add
cld
add
out
push
xchg
xlat
fidivs
add
jle
pop
mov
rclb
mov
sub
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
sar
xchg
add
stos
add
jb
add
jmp
mov
movsb
jae
pop
rclb
add
jo
pop
pop
push
add
add
pusha
add
stos
mov
add
add
add
mov
push
popa
add
sub
pop
mov
push
push
call
hlt
pop
jbe
negb
mov
add
data16
ljmp
jl
add
std
shl
icebp
loopne
nop
mov
mov
cmc
pop
into
fmul
aam
jnp
push
out
add
insb
test
add
jecxz
pop
lock
add
sub
pop
lea
push
push
push
push
pop
add
sub
add
shl
pop
inc
shl
not
shr
pop
push
rol
not
pop
pushl
push
dec
sub
pop
call
push
push
push
lea
push
push
lea
push
push
push
push
call
jne
popa
mov
push
int3
int
add
repnz
test
add
mov
mov
aam
add
jge
jp
add
pop
fsubr
add
ljmp
add
add
push
add
clc
jl
loope
aad
mov
mov
add
jle
jp
lock
xlat
sub
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
out
mov
add
push
add
add
iret
cld
add
add
sarb
push
mov
add
mov
add
mov
add
mov
add
add
add
sub
pop
call
push
push
sub
push
or
not
add
lea
sub
lea
pop
ror
not
shl
pop
push
add
dec
pop
pushl
push
not
add
xor
pop
call
push
push
push
lea
push
lea
push
lea
push
push
call
add
mov
addr16
stos
add
aam
out
sahf
arpl
out
jae
mov
xchg
ja
add
stos
add
add
sti
cmc
mov
fadds
rorb
sub
push
add
add
int
jl
arpl
fsubrl
add
mov
add
mov
roll
jecxz
add
jne
jl
add
out
mov
add
pop
test
mov
add
add
add
test
add
add
add
mov
jp
xchg
add
mov
in
clc
lcall
pushf
and
ljmp
cmpsl
divl
push
pop
add
add
inc
shr
sub
sub
pop
shl
dec
pop
push
dec
pop
pushl
call
push
lea
push
lea
push
push
lea
push
call
addb
add
faddl
cld
fisubl
add
jl
andl
clc
movsb
lds
add
add
std
lock
add
outsl
mov
mov
push
jecxz
jns
add
push
jne
mov
mov
scas
roll
push
add
add
outsl
add
jle
add
add
add
lea
push
push
push
push
push
call
icebp
repnz
add
loop
je
movsl
add
cmpsb
into
add
mov
into
sahf
add
add
add
add
cwtl
cli
xchg
push
add
xchg
xchg
aad
add
in
fs
popl
mov
imull
add
in
in
pop
push
push
push
push
push
lea
push
push
call
jp
je
add
subl
jnp
pushf
cli
add
add
xchg
iret
faddl
add
mov
mov
mov
add
mov
mov
add
add
fs
add
sub
pop
push
push
push
push
push
push
push
push
push
call
aad
scas
mulb
ljmp
add
add
mov
add
incb
add
push
add
add
add
lea
add
add
mov
ja
mov
mov
add
stos
ljmp
add
pop
rolb
mov
in
loopne
lcall
add
call
add
add
mov
add
xchg
add
cmc
in
push
shrl
jne
add
pop
mov
shll
add
add
test
mov
jb
jl
add
xchg
mov
add
pop
add
ja
mov
sub
pop
pushl
push
push
sub
shr
push
push
pop
add
sub
shr
sub
xor
dec
lea
pop
lea
rol
pop
push
push
push
push
push
lea
push
call
add
in
add
mov
addl
test
int3
lahf
mov
into
jns
add
xchg
add
add
mov
add
rolb
ljmp
fistps
mov
mov
fwait
add
add
leave
fmul
add
push
add
imul
add
scas
add
mov
sub
pop
push
call
push
push
add
rol
add
sub
push
sub
add
add
ror
sub
sub
sub
add
inc
pop
sub
sub
pop
push
xor
pop
pushl
push
pop
call
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
out
movsl
add
stc
out
mov
pop
fbstp
add
mov
mov
lods
filds
addb
add
cmpsb
pusha
lret
xchg
add
add
add
mul
add
shrb
jno
lea
push
sub
add
xor
dec
sub
xor
pop
not
add
xor
pop
push
lea
push
lea
push
push
lea
push
call
add
add
pop
add
movsl
add
fwait
imul
loop
jl
xchg
imul
pop
pushl
call
push
push
call
add
sahf
add
add
xchg
mov
rolb
add
add
test
in
lods
out
jle
add
xchg
add
fucomi
fwait
add
stc
add
add
add
mov
in
clc
pop
call
push
pop
jmp
pushl
push
add
shr
pop
mov
push
lea
push
push
lea
push
push
lea
push
call
xchg
xchg
pushf
lcall
aam
cltd
add
add
lcall
ja
rcr
xlat
cmpsb
mov
mov
stc
jnp
xchg
mov
not
fxch
add
add
add
add
loopne
add
aam
testl
jmp
enter
sub
pop
jmp
push
push
not
shl
ror
push
xor
add
dec
xor
add
shr
sub
dec
xor
pop
ror
pop
push
add
sub
add
pop
pushl
call
push
ror
sub
pop
push
push
rol
lea
pop
call
push
push
sub
add
push
push
pop
add
sub
ror
sub
not
pop
xor
lea
add
pop
push
shl
inc
shl
pop
pushl
push
push
lea
push
push
push
push
lea
push
call
cltd
jno
add
pop
mov
add
mov
stos
push
add
mov
push
mov
pop
mov
add
test
add
push
push
lea
push
push
push
push
push
push
call
popl
add
stos
push
add
jp
in
imul
add
mov
mov
add
mov
jnp
scas
imul
add
add
add
out
add
negb
add
add
movsb
lds
popf
mov
in
loopne
push
call
push
push
push
lea
push
push
push
lea
push
push
call
ljmp
out
push
popf
jp
faddl
add
add
clc
add
add
push
add
mov
add
add
push
push
js
jbe
add
test
jnp
add
xchg
sub
pop
leave
push
rol
shl
sub
xor
pop
add
push
dec
shl
rol
pop
pop
pop
push
pop
pop
push
sub
add
pop
pop
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
lret
shll
add
fnstsw
add
out
fistpl
add
add
lods
int
mov
add
mov
leave
push
push
push
lea
push
push
push
push
push
push
push
call
add
jne
arpl
data16
fnsave
call
mov
lahf
lahf
jp
pop
cmc
rclb
lcall
push
stos
add
mov
not
lea
leave
add
add
imul
js
test
cmpsl
fwait
outsl
cmpsb
pop
add
into
into
pusha
mov
pop
add
ret
push
push
push
push
lea
push
push
call
jp
add
push
mov
add
roll
clc
mov
cwtl
scas
add
xchg
popa
add
mov
add
add
sub
pop
leave
push
lea
push
lea
push
call
add
xchg
add
cltd
push
add
add
mov
data16
add
nop
xchg
arpl
xlat
add
add
add
ljmp
loop
jne
push
add
add
call
xchg
add
or
push
rol
sub
pop
push
mov
push
push
call
fwait
add
les
imul
add
push
add
insb
lods
add
andb
add
add
cwtl
fiaddl
xchg
xchg
loope
add
xchg
push
mov
add
push
in
sub
pop
cmpl
jne
push
lea
push
push
push
push
call
out
mov
fwait
movsl
add
lds
xlat
fldenv
add
add
add
add
add
mov
lcall
inc
and
push
push
push
call
mov
cli
add
mov
push
add
cmpsb
push
popa
ret
addb
add
lea
cmpsl
add
xchg
gs
add
hlt
pop
jmp
push
shl
pop
mov
push
push
push
push
push
push
push
call
add
les
add
jb
add
add
jnp
in
jae
orl
cwtl
arpl
lds
pop
out
std
add
fs
pop
add
rcr
insb
loope
sahf
add
add
add
add
and
push
push
call
add
bound
mov
add
test
add
add
xlat
xchg
add
add
jecxz
add
add
mov
add
push
push
jb
add
mov
stos
mov
cltd
rolb
cltd
flds
fs
out
movsb
mov
fcomip
push
add
sub
pop
xor
push
lea
sub
pop
xor
push
sub
rol
add
pop
add
xor
push
push
push
call
jno
add
add
flds
jp
add
pop
add
add
stc
movsb
fs
add
icebp
fildll
add
push
mov
ja
add
add
add
add
jno
nop
add
filds
clc
mov
ja
add
jns
push
out
sub
pop
dec
push
sub
pop
sub
push
push
push
call
sahf
xlat
add
sbb
imul
ljmp
mov
push
addl
pop
test
add
add
add
cltd
add
xchg
add
add
ljmp
add
pop
pushl
push
xor
shr
pop
pop
sub
push
push
push
push
push
push
push
push
push
push
call
xchg
mov
test
rolb
mov
ja
scas
add
mul
popa
add
add
leave
mov
mov
fadds
out
add
add
add
outsl
mov
enter
push
add
add
lods
into
mov
xchg
sar
repnz
pop
cmp
jne
mov
push
push
lea
push
push
call
mov
add
pop
add
out
add
add
mov
mov
leave
mov
fwait
jl
jo
lea
jno
add
rclb
add
pop
add
test
add
add
pop
loopne
add
mov
sub
pop
lea
push
rol
add
pop
sub
mov
push
xor
xor
dec
pop
shr
add
push
add
xor
shr
pop
sub
push
not
pop
pushl
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
add
push
add
add
popa
mov
push
add
mov
mov
nop
add
add
push
add
lock
repnz
cli
sti
add
iret
push
fildl
popf
lods
add
cmpsb
sub
pop
shr
and
push
lea
push
lea
push
push
call
mov
mov
fadds
add
imul
out
add
push
call
imul
in
lock
sub
cmp
jne
push
dec
shr
not
pop
leave
ret
push
lea
push
push
push
push
push
push
call
icebp
add
shl
cmpsl
push
xchg
add
rcll
out
cwtl
add
add
add
xchg
imul
out
je
add
lahf
xchg
add
pop
jno
lods
add
jbe
in
in
push
push
add
rol
add
pop
mov
add
push
push
push
lea
push
push
push
push
call
add
popf
xchg
hlt
mov
cmpsb
mov
mov
data16
xchg
stc
add
push
cmc
out
add
add
push
push
push
push
call
add
push
add
pusha
add
loope
lds
add
add
add
xchg
ja
movb
out
mov
add
push
mov
out
add
xchg
mov
cmpsb
sub
pop
push
push
push
call
mov
imul
out
add
mov
popa
add
aam
xchg
out
xchg
fwait
add
cltd
push
add
add
add
movb
leave
add
iret
in
lahf
push
cwtl
add
icebp
mov
insb
in
test
add
pop
push
push
shl
ror
rol
pop
push
push
lea
pop
mov
push
push
push
push
lea
push
push
push
push
call
add
shrb
stos
mov
in
fldt
mov
add
leave
div
add
add
aad
add
mov
popa
jno
jge
mov
sub
pop
lea
push
push
call
add
fsubrp
add
jl
sahf
scas
rcr
add
add
add
mov
stos
in
add
add
loopne
push
in
xchg
mov
popa
add
mov
stos
xchg
add
add
jle
add
bound
in
clc
pop
sub
mov
push
push
push
push
push
push
lea
push
push
lea
push
call
jl
jno
movsb
add
into
push
push
lcall
popl
mov
nop
stc
add
in
mov
add
shrl
add
add
data16
mov
add
add
add
xchg
arpl
loopne
add
out
pop
add
in
loopne
sub
pop
shr
push
push
push
push
push
push
push
call
add
lret
mov
push
rcll
fcmovnbe
add
push
loop
roll
add
test
add
jmp
add
add
cmc
add
add
sub
pop
add
push
xor
pop
mov
add
push
add
pop
mov
push
dec
rol
xor
pop
add
push
inc
pop
xor
mov
push
ror
pop
and
rol
push
shr
pop
rol
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
xchg
aad
jp
adc
gs
rolb
push
jns
xchg
add
add
add
mov
xchg
aam
iret
jle
nop
mov
add
stos
xchg
add
mov
add
fadds
lcall
add
loope
shlb
push
push
push
push
push
push
call
add
add
cmpsb
fistps
push
iret
mov
add
imul
js
jbe
jnp
mov
popl
cltd
mov
pop
add
repnz
sub
pop
inc
push
push
push
push
push
push
push
call
jbe
out
add
add
mov
mov
add
movsb
add
add
addl
fmull
mov
addb
mov
jp
je
add
ret
popa
add
js
fs
jge
out
lret
add
lcall
cmp
jne
push
inc
pop
add
push
push
push
push
push
push
push
lea
push
call
add
add
je
movsb
add
push
add
jae
add
add
add
add
mov
add
ret
je
cwtl
mov
filds
add
lcall
inc
or
test
add
add
sbb
push
lea
push
push
push
lea
push
push
push
call
int3
mov
add
add
mov
add
negb
xorl
mov
int3
push
clc
mov
add
imul
mov
add
scas
push
add
add
pop
xchg
out
testb
add
ret
adc
jnp
add
test
std
call
loop
shl
pop
xor
push
pop
pop
push
push
push
push
lea
push
push
push
call
mov
out
add
add
fadds
fwait
add
mov
add
push
add
mov
test
negl
mov
add
cwtl
add
mov
add
add
jne
in
add
jp
gs
add
cmc
add
int3
push
cwtl
add
loop
enter
in
lahf
sub
pop
pop
pop
push
shr
shr
sub
pop
pop
push
lea
rol
rol
ror
pop
pop
push
lea
push
call
mov
icebp
add
add
lods
incb
add
mov
loop
add
add
push
out
add
add
ror
add
add
lcall
push
push
push
push
push
push
push
call
mov
add
push
cltd
bound
pop
add
imul
pop
out
add
add
add
js
mov
add
movsl
shll
jne
add
pushf
popf
xchg
cli
sub
pop
ret
push
push
call
add
pop
movsb
movsb
add
lcall
add
add
add
add
jbe
lahf
add
mov
push
add
ficomps
push
sub
pop
mov
push
push
push
lea
push
lea
push
push
call
push
add
xchg
pop
les
mov
mov
add
add
loope
add
mov
add
fwait
add
add
push
add
xchg
xchg
nop
arpl
lcall
push
or
shr
sub
sub
add
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
div
add
add
mov
cltd
andl
cwtl
lds
insb
add
stc
mov
sub
pop
add
push
dec
xor
add
pop
mov
testw
push
not
sub
shl
pop
pop
push
inc
add
ror
sub
pop
pop
push
sub
sub
pop
mov
push
add
add
xor
pop
push
call
push
not
xor
shr
pop
xor
push
pop
pop
pop
push
push
push
push
lea
push
push
lea
push
push
call
add
add
popa
add
jmp
add
jb
add
add
lret
xchg
insb
imul
addb
pusha
add
add
push
push
add
add
add
enter
add
mov
add
mov
pusha
add
add
add
sahf
scas
add
in
loopne
lcall
push
push
lea
push
push
push
call
lahf
in
mov
add
je
ja
add
mov
loop
jne
jbe
jecxz
add
add
add
add
pop
jbe
int
lcall
mov
push
mov
add
icebp
add
mov
add
pop
mov
pop
pop
push
inc
add
pop
leave
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
xchg
push
fdivl
enter
add
add
add
pop
add
js
clc
push
push
rolb
add
out
loop
add
xchg
int3
add
lock
xchg
push
pop
std
add
lcall
or
push
add
add
shr
pop
push
push
push
push
call
lods
add
add
add
mov
sti
xchg
add
cmpsl
add
sbbb
push
add
add
call
roll
xchg
add
add
add
add
rorl
lcall
in
add
push
push
push
push
push
push
push
call
in
cmpsb
test
adcl
xchg
jnp
xchg
add
in
data16
jmp
add
add
add
add
add
movsl
jl
rolb
jo
mov
add
aam
fcmovnbe
add
lahf
add
lret
mov
imul
imul
les
mov
xchg
sub
pop
push
push
sub
shl
pop
push
push
add
shl
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
mov
in
rolb
add
add
movsl
push
lcall
push
add
aad
stos
test
jbe
fs
push
flds
push
push
push
push
push
push
push
call
add
ret
in
mov
int
xchg
stos
add
into
add
loop
add
add
jne
jnp
add
pop
add
roll
add
les
mov
pusha
sub
pop
mov
push
push
ror
shr
pop
pop
lea
push
lea
push
lea
push
call
xlat
mov
mov
add
scas
add
lock
enter
add
push
imul
push
sti
mov
in
hlt
lcall
ljmp
push
lea
push
lea
push
push
push
push
call
outsl
cltd
add
mov
pop
ljmp
mov
cwtl
xlat
add
add
imul
add
mov
add
mov
add
pop
add
mov
xchg
push
mov
mov
out
stc
push
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
lods
add
cld
mov
jl
add
mov
mov
mov
xchg
add
pop
out
fisttps
fldl
add
add
movsl
ja
add
add
add
lcall
ljmp
pop
add
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
mov
ret
add
add
clc
add
stc
add
add
mov
add
mov
jmp
repnz
pop
xchg
ja
add
add
addr16
pop
mov
push
push
lea
push
push
push
lea
push
push
push
call
sahf
add
add
push
int3
outsl
scas
add
mov
scas
imul
add
add
add
add
in
add
add
les
stos
add
pusha
arpl
add
add
xchg
rolb
in
scas
lret
icebp
add
addl
push
add
in
loopne
lcall
fcos
jae
push
sub
dec
dec
pop
popl
push
sub
sub
xor
pop
mov
push
dec
sub
pop
add
push
lea
not
pop
xor
lea
push
push
lea
push
push
push
lea
push
call
xchg
add
stc
add
add
imul
imul
lret
cli
into
add
add
pushf
push
cltd
popa
mov
xchg
imul
mov
add
add
fsubrp
add
add
outsl
cli
add
jl
mov
add
add
adc
rcll
out
mov
xchg
add
pop
xor
push
push
push
push
push
push
push
call
hlt
mov
fcomi
jl
add
andl
jge
sbb
xchg
test
mov
mov
scas
mov
lret
imul
mov
gs
mov
sub
mov
shl
xchg
add
add
mov
nop
add
add
roll
add
rolb
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
pop
sub
incb
add
mov
mov
lahf
out
add
addr16
push
add
out
push
bound
mov
add
add
pusha
add
mov
add
xchg
add
ret
jmp
je
bound
addl
mov
insb
add
nop
push
lea
push
lea
push
push
push
push
push
push
call
call
mov
add
add
aam
std
add
test
mov
out
lds
add
xorl
imul
addb
add
rolb
addr16
xchg
insb
add
add
add
add
add
jbe
add
test
xchg
lcall
iret
add
lcall
add
xlat
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
mov
push
loope
add
mov
cld
push
fsubl
jbe
cmc
mov
sahf
stos
in
add
add
jns
les
add
mov
add
addb
sub
pop
nop
nop
push
push
push
call
push
push
add
jno
mov
add
scas
add
mov
pop
xchg
call
xchg
in
add
loop
add
push
xchg
add
mov
add
lcall
push
push
lea
push
call
mov
add
add
fldl
add
add
repnz
add
lods
stc
xchg
add
mov
mov
jno
jnp
loope
cld
addr16
add
test
add
push
scas
jno
jbe
rolb
ret
add
add
lcall
nop
push
push
push
call
outsl
loope
add
add
lahf
jge
popf
push
int3
add
nop
add
in
ret
incb
enter
mov
add
add
in
hlt
lcall
cmp
jne
push
push
call
add
add
add
add
mov
incb
mov
stc
add
jne
jns
incb
add
into
scas
pop
pop
push
add
xchg
add
xchg
int3
add
add
add
jo
jae
ja
mov
frstor
shrl
popa
mov
jl
cli
sub
pop
add
push
inc
not
pop
nop
push
inc
sub
not
pop
nop
push
push
push
push
push
push
call
add
movsl
rcr
jmp
mov
movsl
jmp
xchg
push
rolb
lds
cmpsl
pop
push
mov
xchg
add
add
imul
mov
push
mov
mov
add
nop
jb
int
add
add
rclb
add
push
add
sub
pop
cmp
je
push
push
push
push
call
faddl
xchg
add
test
mov
popa
rcrl
add
arpl
push
push
add
add
add
js
sar
jecxz
xchg
add
add
add
add
lea
cwtl
sub
pop
nop
nop
push
rol
sub
pop
inc
nop
push
lea
push
push
push
push
lea
push
call
add
push
mov
sti
add
add
add
mov
jo
add
popa
push
add
js
push
add
add
mov
add
xlat
add
mov
mov
add
add
loope
mov
out
add
mov
sub
pop
nop
push
lea
shl
pop
cmp
jb
xor
push
add
add
add
dec
pop
jmp
push
shl
pop
mov
push
push
push
lea
push
push
push
push
call
add
mov
in
add
add
add
add
add
add
add
cltd
mov
add
push
push
loope
add
xchg
add
fiaddl
xchg
std
xchg
sub
pop
add
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
test
out
add
cld
add
fildl
nop
add
add
add
add
add
add
stc
sub
pop
movzwl
push
sub
not
shl
ror
pop
mov
push
sub
pop
add
push
push
push
push
call
sub
jns
jnp
lock
add
roll
fnstcw
add
fs
mov
add
add
add
add
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
push
push
call
add
les
in
cld
outsl
push
push
mov
mov
imul
movb
push
movsl
add
add
xlat
repnz
addr16
push
add
into
arpl
shll
mov
jnp
sub
pop
xor
push
push
call
fwait
aam
add
add
add
push
fneni(8087
add
add
sbb
iret
add
add
ja
out
out
add
icebp
ret
add
insb
pop
xorb
lret
add
add
in
add
push
test
popa
cmpsl
pop
cwtl
addr16
jns
add
clc
lcall
dec
nop
add
loope
push
add
not
lea
inc
pop
xor
push
lea
push
push
call
mov
leave
leave
faddl
hlt
mov
movsb
mov
add
add
lea
ret
add
jge
mov
ja
ret
mov
into
fisubrs
stc
mov
cwtl
iret
add
fiaddl
sub
pop
shl
push
pop
xor
push
push
push
push
lea
push
lea
push
push
call
jnp
xchg
mov
out
mov
add
add
add
add
filds
add
push
add
xchg
lcall
sub
pop
shl
push
push
call
cltd
add
add
loop
add
lock
test
add
add
push
add
fs
add
fadds
test
mov
cli
add
mov
sub
pop
xor
push
ror
add
pop
mov
add
push
shl
xor
pop
pop
push
lea
push
push
push
lea
push
push
push
push
call
add
jle
cmpsl
enter
fadds
enter
add
add
clc
test
lea
aad
mov
shl
iret
data16
add
add
stc
add
aad
stos
fisubrl
mov
jmp
call
in
loopne
lcall
push
push
call
popa
mov
add
push
jnp
jo
add
add
add
fiadds
mov
mov
add
in
mov
add
add
out
filds
addl
add
xchg
add
xchg
fiadds
mov
iret
int
add
out
cwtl
add
fadds
add
push
sub
dec
xor
pop
pop
push
lea
push
call
add
xchg
lahf
add
add
lahf
add
add
ret
data16
test
add
iret
clc
push
jne
add
add
add
pusha
pushf
andl
jge
sub
pop
leave
ret
push
shr
pop
push
push
ror
lea
pop
mov
push
push
inc
sub
pop
push
push
push
ror
dec
rol
pop
push
mov
push
ror
pop
mov
push
ror
pop
mov
test
je
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
pop
pop
aad
add
rcll
test
add
add
roll
fiaddl
scas
xchg
add
add
add
add
jmp
popl
in
fdivr
lcall
jno
test
je
push
push
push
push
push
call
lahf
add
mov
add
arpl
std
test
add
add
mov
mov
add
sti
add
insb
xchg
xchg
lahf
mov
addl
xchg
test
mov
stos
jge
add
add
add
out
addw
mov
push
push
push
push
push
push
push
push
push
push
call
cmc
fildl
push
loope
add
cmpsl
fldl
add
add
pop
cli
add
jmp
xchg
int3
clc
xchg
add
loopne
add
add
add
movsb
add
mov
add
scas
nop
loop
push
mov
jb
add
pop
add
lcall
dec
or
push
push
push
push
push
push
lea
push
push
call
ret
jecxz
add
sahf
cltd
pop
data16
mov
jp
test
xchg
add
add
push
push
sub
pop
mov
inc
push
lea
push
call
clc
jecxz
add
out
add
add
add
push
add
add
add
add
add
lcall
rorb
test
add
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
cli
add
push
mov
lret
out
add
mov
loop
mov
add
rolb
mov
add
add
add
fdivr
lcall
rorb
fildl
add
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
add
rolb
mov
fadds
add
iret
rcl
ficoms
stc
in
pushf
add
add
test
int3
int3
add
mov
iret
add
addr16
pop
loopne
add
jae
add
add
add
into
xchg
fcompl
push
push
sub
pop
inc
cmp
je
push
push
push
push
push
push
push
push
push
push
call
nop
in
cli
pusha
stos
in
aad
add
add
in
add
fcomip
mov
in
movb
mov
out
mov
mov
ficoml
jmp
in
fcomps
rorb
popf
call
ret
xor
push
push
lea
push
lea
push
call
sub
add
repnz
cli
int
push
add
jno
add
fprem1
in
outsl
add
add
int3
ret
lcall
sahf
pushf
loope
mov
imul
add
mov
pop
add
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
push
add
push
add
insb
add
add
jp
add
jmp
add
push
push
mulb
mov
push
je
push
add
cwtl
loope
outsl
add
test
xchg
xchg
mov
add
scas
into
lret
scas
mov
add
loope
add
push
push
add
mov
sub
pop
pop
pop
push
not
dec
pop
pop
leave
push
dec
ror
lea
ror
pop
ret
mov
push
sub
sub
shr
pop
inc
push
rol
add
dec
pop
cmp
jne
push
dec
pop
lea
mov
push
sub
ror
pop
test
je
push
push
push
lea
push
lea
push
push
push
push
push
push
call
leave
test
xlat
add
add
add
pop
nop
add
cmc
incb
add
add
add
add
mov
popa
mov
jge
mov
add
add
add
push
test
add
add
sub
pop
mov
push
not
shr
not
pop
add
push
dec
pop
cmp
jne
mov
push
lea
push
push
lea
push
push
push
push
push
call
xchg
lods
iret
push
mov
gs
mov
popf
int
add
jo
lods
popa
stc
add
add
add
add
movsb
stos
add
add
add
insb
shl
jecxz
sbb
add
mov
add
test
xchg
imul
lcall
rorb
inc
add
add
push
lea
push
push
call
add
arpl
jge
cli
cmpsl
add
movsl
add
js
addb
xlat
add
rolb
push
add
mov
add
add
fld
loopne
add
add
jp
xchg
fbstp
outsl
add
jle
add
nop
mov
xchg
stos
add
sti
int
mov
jne
xchg
ret
jae
sub
pop
mov
push
push
push
push
call
rcl
mov
push
mov
out
add
add
loop
xchg
data16
mov
xchg
test
pop
enter
mov
roll
add
add
shll
stos
pop
add
add
movb
add
push
addr16
pop
add
cmp
je
push
push
push
push
push
push
push
push
call
fcomip
ret
fldl
shrl
mov
add
ret
add
lods
mov
mov
push
pop
mov
add
rolb
mov
scas
outsl
jbe
add
add
xchg
xlat
add
add
mov
add
stc
je
lods
in
xchg
mov
pop
jmp
xor
push
add
shr
pop
pop
pop
push
push
push
push
push
push
call
fsubs
pop
add
jge
shlb
add
add
mov
mov
add
add
shrl
int3
frstor
add
aam
fld
add
add
pop
push
jno
loope
lea
add
add
add
push
push
push
push
push
push
call
shr
add
mov
popa
add
mov
shl
add
add
add
add
data16
sti
cltd
sti
fwait
lds
stos
add
add
mov
push
and
add
sub
pop
pop
push
xor
pop
leave
push
not
dec
pop
ret
push
shr
pop
lea
pop
push
push
push
push
call
jmp
rolb
enter
icebp
push
addl
add
add
push
add
mov
out
pop
flds
pop
add
add
add
loop
add
jo
add
jmp
mov
add
add
fwait
imul
cmc
add
add
ljmp
lcall
push
lea
push
push
push
lea
push
push
push
call
mov
lock
push
push
add
cld
imul
add
stos
push
in
add
gs
adcb
aad
popa
add
addb
add
in
in
lahf
mov
add
push
pop
push
add
jl
in
in
lcall
push
push
push
lea
push
call
add
mov
add
loop
clc
gs
add
add
add
loop
mov
add
add
lcall
push
sub
sub
not
pop
leave
ret
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
add
pop
pop
add
add
out
add
jo
add
jnp
nop
in
add
mov
loop
roll
jnp
addb
pusha
push
les
add
add
out
test
stos
shr
mov
add
add
add
lock
in
add
lcall
push
push
lea
push
push
lea
push
lea
push
call
movsb
sarb
add
jge
add
in
bound
ja
gs
pusha
add
jno
ja
mov
in
call
pop
pop
push
push
call
jmp
add
add
mov
sbbl
in
add
loope
push
sahf
jge
add
out
add
add
shrb
std
lea
fwait
sahf
add
popa
sub
pop
pop
push
push
push
push
push
lea
push
push
call
aam
jno
mov
push
sti
mov
cld
add
add
add
loop
add
lods
xlat
push
push
push
jmp
xchg
add
add
push
jne
cltd
jmp
add
add
insb
ficoms
jp
test
mov
fsubrl
add
add
mov
mov
pop
sub
pop
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
cld
filds
add
add
pushf
leave
add
push
add
lahf
cltd
idivb
xchg
mov
add
filds
xchg
mov
push
add
mov
add
mov
add
add
mov
mov
mov
mov
add
add
xchg
mov
pop
leave
push
add
pop
ret
xor
cmp
fldl
adc
icebp
adc
adc
adc
xor
adc
cmp
adc
cmp
xor
adc
jb
adc
mov
add
orl
repnz
mov
lret
out
lret
add
cmc
sub
fnstenv
jmp
dec
dec
shlb
cmpsl
scas
pop
pop
push
dec
sti
add
push
inc
cld
ret
xor
mov
clc
mov
outsb
mov
mov
pop
scas
xor
gs
mov
or
stc
outsb
pop
xchg
inc
jle
enter
jmp
outsl
sub
jl
sbb
mov
lret
xlat
mov
mov
push
aam
mov
sbb
stc
push
add
cli
iret
push
insb
xor
add
cmc
mov
lods
mov
pop
popa
das
and
inc
repnz
lods
xor
loop
icebp
mov
sub
sbb
pop
lds
shr
sub
sub
cmpsb
jb
jae
repz
gs
mov
sub
xor
adc
fstl
jmp
sub
xchg
enter
jo
lds
add
push
cmp
repz
mov
out
scas
adc
sarl
push
and
cmp
arpl
rcrb
mov
push
xchg
xor
pop
addl
sbb
pop
pop
or
or
sbb
pop
jne
xchg
hlt
repz
xorl
ja
mov
clc
leave
xor
dec
xor
jecxz
les
out
cld
push
mov
xor
ja
lods
fsubl
xlat
lea
cld
mov
pop
xor
test
sbb
mov
ret
pop
xchg
pop
lret
xchg
push
and
mov
out
xchg
les
jne
insb
ss
popf
xchg
or
int3
mov
pop
xchg
dec
cmp
insl
pushf
fistpl
mov
inc
out
push
dec
xor
pop
jg
and
out
sub
pop
cmp
test
lock
mov
mov
inc
das
sub
in
cwtl
mov
jb
fists
mov
and
xchg
pop
mov
leave
call
ss
xor
lret
cmc
xchg
adc
ud2
mov
frstpm(287
sbb
add
inc
cmp
stos
int
and
cltd
filds
add
test
jge
insl
mov
push
std
inc
loop
pop
imul
cwtl
push
ficompl
pop
addr16
repz
out
movsl
stos
cs
add
lock
push
xchg
jnp
push
fdivrs
mov
adc
shrb
xor
adc
pop
mov
pop
jae
inc
push
pop
pop
into
pop
jp
lods
sbb
inc
jae
mov
mov
and
mov
push
les
ret
mov
and
arpl
or
or
leave
mov
loop
in
jmp
push
fcmovnb
rolb
xor
push
mov
push
mov
imul
je
and
ja
push
add
adc
es
inc
jns
jbe
jnp
sub
jae
sub
cwtl
pop
lret
jae
sbb
icebp
outsl
adcl
lds
jno
lods
jl
and
mov
cmp
adc
sbb
jae
mov
stos
sub
out
bound
jecxz
incl
xor
lret
out
pop
xchg
push
int3
dec
adc
pusha
dec
sbb
jo
pop
test
fs
aas
fs
loop
roll
outsl
xchg
out
inc
mov
and
push
cld
fimull
loopne
add
mov
push
adcb
adc
aam
aaa
mov
lret
fiadds
sub
mov
mov
das
adc
jns
rolb
jne
pop
sbb
in
nop
or
leave
test
repz
mov
data16
lock
cmp
xorb
push
test
pop
dec
or
push
fwait
and
enter
cs
ja
fisubrl
and
pop
lock
xchg
clc
insl
xlat
ds
jnp
sub
je
xchg
dec
sbb
push
push
mov
iret
or
push
in
pop
clc
adc
push
pop
add
lods
aaa
mov
cltd
mov
and
fsubrl
sub
xchg
stos
mov
pop
lcall
hlt
and
nop
lcall
adc
xor
ret
lahf
aam
stc
inc
stc
or
or
mov
ret
fnsave
clc
out
xor
imul
jle
mov
push
mov
sub
mov
shrb
sbb
jno
mov
stos
cmp
add
push
dec
addb
jbe
push
push
inc
gs
andl
shl
add
stc
xchg
push
mov
pop
xchg
xchg
lock
push
push
fadd
push
js
repz
push
adc
xlat
add
inc
push
ja
sbb
and
cmp
push
sub
add
push
lods
jnp
inc
pushf
addr16
cmc
jae
jl
mov
mov
cmp
fs
adc
sbb
xchg
insb
dec
mov
mov
cltd
pop
gs
sbb
in
lret
lock
inc
jmp
pusha
loopne
and
cmp
lret
sub
fneni(8087
cmp
dec
es
sub
aas
loopne
sbb
push
stos
cmc
out
cmpsl
xchg
scas
pop
or
gs
mov
and
in
cmc
sbb
daa
fnsave
cmp
scas
mov
nop
jne
and
inc
aas
enter
adc
sub
and
sub
shll
sahf
jp
push
dec
fwait
les
sbb
fs
inc
jne
shr
mov
hlt
cmp
inc
adc
dec
sub
adc
outsb
xchg
lods
jnp
and
lods
repz
iret
cmpsl
cmp
sub
pop
dec
imul
mov
scas
cmpsl
imul
xchg
jle
sub
roll
jns
clc
je
subl
popf
xchg
push
sbb
pop
popa
rclb
pop
idivb
sub
push
xchg
adc
fsubr
or
add
pop
mov
icebp
pop
loope
dec
popf
sahf
movsl
jge
cmp
loop
mov
int3
data16
test
leave
dec
jns
and
inc
pop
dec
rep
ds
lea
fsubl
inc
out
xchg
clc
and
sti
adc
loopne
pop
push
add
push
fwait
mov
pop
push
xchg
and
ror
clc
pushf
aas
push
dec
push
inc
jb
rcrb
lahf
bound
xchg
movsl
aad
hlt
push
lods
sti
pop
ja
push
push
popa
gs
xchg
jecxz
popa
xchg
push
push
cmp
lods
rol
or
addr16
stc
xor
stos
jl
pop
outsb
jno
xchg
inc
sub
adc
cmc
cmp
inc
sub
jo
cmc
sub
and
lcall
add
xchg
shll
pop
sbb
and
add
jge
pop
icebp
cmp
dec
push
in
faddl
les
push
in
shrl
leave
mull
jae
cs
lret
adc
repnz
pop
jmp
or
sahf
and
orb
into
xchg
jbe
jb
bound
mov
mov
shrb
loop
or
sbb
arpl
xlat
mov
dec
lcall
jg
adc
mov
adc
jb,pt
xor
jg
mov
and
fdivrl
pop
xchg
dec
xor
pushf
fwait
test
aam
pop
insl
jge
fimull
jnp
mov
stos
mov
test
mov
mov
jmp
outsl
out
stos
sub
dec
in
cli
sbb
insb
cs
or
jecxz
cltd
popf
mov
notl
xchg
inc
bound
hlt
lret
xchg
mov
adc
jns
bound
push
out
mov
or
or
xchg
or
jmp
imul
lcall
mov
movsb
ds
sbb
jp
and
mov
and
mov
add
cmpb
shll
fcompl
sbb
andl
and
dec
pop
in
cmp
ffreep
test
out
dec
dec
push
das
pop
movsb
and
loope
xor
pushf
push
in
in
imul
cmp
in
sbb
out
jo
xor
aaa
xor
xchg
pop
and
and
push
jge
pop
pop
mov
push
fstl
lods
and
and
cli
cmp
push
inc
arpl
jb
xor
pop
ficompl
mov
les
adc
jmp
xor
xchg
inc
and
cmp
sahf
nop
push
aad
inc
inc
in
mov
fcmovnb
and
loop
ljmp
pop
adc
dec
cmp
jp
out
outsb
aaa
dec
inc
pop
or
outsb
push
out
ds
jmp
sub
or
xchg
mov
mov
add
lcall
sbb
loop
cwtl
mov
dec
pop
cmp
adc
mov
shrb
leave
mov
dec
xor
pop
in
adc
out
mov
mov
xchg
xchg
or
dec
into
sbb
cmp
dec
aad
fildl
sahf
dec
dec
leave
loope
pop
roll
sbb
les
mov
mov
clc
rolb
sbb
push
xchg
pop
xlat
jmp
add
dec
fnstenv
cmp
mov
test
scas
sbb
orb
mov
outsl
mov
frstor
sub
pop
mov
adc
dec
sub
xchg
pop
mov
jno
sub
sub
dec
pop
adc
sub
subb
pushf
xor
mov
divl
jo
insl
dec
inc
fldl
sbb
sub
lods
adc
jo
jg
rcl
or
jnp
push
pop
repz
int
scas
mov
dec
mov
dec
or
ds
push
or
xorl
mov
movsl
dec
mov
insl
xlat
mov
call
out
jge
cmp
addr16
jbe
and
cmp
insl
xlat
mov
outsl
daa
mov
mul
cmp
clc
push
jmp
test
xchg
nop
jnp
daa
jno
pushf
push
sbb
push
sti
push
imul
mov
inc
int
div
cltd
shl
pop
pop
loope
adc
xchg
dec
int
sub
jmp
jg
add
sub
mov
das
movsl
pop
add
xor
dec
imul
mov
and
sbb
push
adc
jns
jb
int
xlat
nop
cmp
pop
push
mov
lea
xchg
repz
icebp
lahf
repz
sub
test
ja
std
mov
aas
pop
push
iret
in
cmp
jne
iret
pop
mov
int3
std
lods
scas
lret
aas
jnp
mov
mov
fwait
popa
xchg
outsb
xor
or
pop
jbe
lret
or
add
mov
xor
out
jecxz
test
clc
fldcw
inc
push
adc
xchg
xor
cld
dec
out
jg
add
daa
data16
in
pop
add
adc
jmp
movsb
sub
ja
lods
fistl
dec
ret
mov
lock
cmc
xorb
mov
fstl
and
psrlq
dec
test
and
psrld
mov
fldcw
stos
pushf
sub
mov
pop
mov
cmpsl
mov
xor
add
add
pop
and
and
lahf
lods
sub
or
or
lea
into
in
dec
push
xchg
icebp
or
out
xor
cmp
sub
lcall
or
inc
scas
pop
ret
dec
inc
push
aas
jns
mov
pop
outsl
push
mov
or
rcrb
popf
outsb
or
jge
adc
lds
mov
xor
push
dec
adc
stos
pusha
movsb
sub
test
fsubrl
mov
rcll
cmp
popf
ljmp
rorl
jle
repz
mov
xchg
fstl
out
repz
add
and
mov
push
rclb
out
push
adc
dec
xor
push
fstl
mov
adc
cmp
mov
mov
enter
test
scas
xchg
jo
jb
xor
lahf
or
push
mov
sbb
aad
daa
adc
jnp
sahf
sahf
mov
mov
orb
cmpsb
fldcw
add
in
mov
adc
mov
jecxz
mov
xchg
cmc
outsb
adc
and
adc
and
mov
orb
cli
dec
dec
lds
mov
iret
nop
lods
pusha
lods
call
ret
and
shll
fsub
es
jp
inc
jp
gs
lods
inc
lret
and
xlat
or
push
dec
roll
dec
leave
xor
stc
pop
inc
decb
insb
jp
hlt
outsl
cmp
out
cltd
gs
xchg
lea
push
je
fidivrl
ffreep
lahf
js
insb
out
and
and
fld
jl
call
jl
scas
xlat
jns
jb
and
pop
xlat
push
mov
cli
and
push
cmp
sbb
dec
aad
imul
insb
mov
popf
lock
addl
mov
cmp
ss
or
pushf
mov
jo
call
add
in
or
dec
in
add
inc
mov
adc
or
in
jne
jbe
cs
negl
pop
xlat
js
xor
stos
jle
and
mov
roll
xchg
mov
and
je
pop
mov
xchg
mov
dec
dec
mov
outsb
dec
pop
cltd
inc
add
push
sub
loop
pop
int3
pslld
mov
mov
into
popa
jge
clc
test
jne
popl
fcoml
mov
in
out
inc
lret
and
fdivrs
pop
push
arpl
insl
movsl
inc
idivl
push
inc
adc
insb
push
push
mov
out
cs
bound
lds
fidivs
xor
mov
loope
jo
rdmsr
aad
add
loopne
icebp
inc
dec
push
test
mov
add
jno
mov
xorb
in
jge
inc
stos
stos
insl
sbb
lea
ret
in
jp
inc
pusha
sub
loop
popa
js
or
push
jle
xchg
xchg
outsl
mov
out
daa
jge
or
push
orl
in
or
movsl
xor
jmp
movsb
movsb
cmp
in
xchg
les
mov
stos
aas
pop
or
jns
mov
cli
or
loope
or
insl
cmp
frstor
test
ja
shrl
pushf
cmp
cwtl
loope
sub
pusha
or
jns
or
fisubrl
clc
mov
push
ret
mov
mov
lcall
and
lea
cmp
sbbb
out
mov
scas
les
pop
jb
icebp
inc
lea
fwait
pop
jg
lret
shrb
and
cltd
fimull
fnsave
add
inc
adc
and
push
mov
test
fadds
fidivrs
adc
insb
daa
inc
cmp
adc
cmpsb
test
rolb
xchg
adc
into
mov
mov
fimull
je
ret
insl
jg,pn
cli
aaa
stos
inc
packuswb
test
inc
leave
sbb
outsb
adc
push
jae
jae
lds
jnp
roll
jne
in
int3
xlat
xchg
pop
dec
pusha
fnsave
or
mov
sti
out
and
stos
inc
cmpl
jp
or
scas
inc
pop
pusha
jnp
icebp
sub
ret
bound
cmp
push
dec
jmp
aad
or
adc
mov
cltd
flds
pop
mov
add
inc
jae
mov
sbb
sbb
pop
pop
cwtl
mov
inc
fildl
xchg
jnp
mov
pop
mov
jg
aas
xchg
repnz
cmc
sbb
mov
add
push
out
in
xchg
icebp
adc
cmp
stos
mov
push
std
repnz
lods
movsl
jmp
push
ret
and
dec
add
cmc
jg
xorl
push
push
scas
sub
adc
add
inc
mov
mov
fiaddl
xchg
cmp
test
sahf
inc
pushf
add
mov
inc
dec
ljmp
rcrl
lods
jmp
pop
mov
incl
les
mov
and
in
or
mov
jo
shrl
adc
imul
lcall
stos
cld
in
push
and
dec
push
cmp
leave
rorl
je
sahf
and
lds
mov
add
xchg
or
xchg
push
in
mov
add
mov
and
leave
dec
mov
clc
into
jne
lock
sbb
mov
sub
push
pop
outsl
and
dec
cmp
xor
add
pop
scas
pop
mov
sub
mov
stc
icebp
xor
dec
ss
mov
push
sub
and
mov
sahf
adc
mov
pop
stc
xchg
mov
cltd
insb
cltd
mov
dec
inc
roll
popa
loop
pop
clc
cli
cmpsb
cmpb
icebp
jg
xor
push
pop
subb
mov
dec
sub
insl
dec
pop
scas
dec
prefetcht0
or
cmp
add
or
pop
dec
sti
lahf
add
nop
leave
pusha
out
je
aas
mov
and
pop
out
jecxz
push
add
sbb
arpl
pusha
xchg
out
pushf
or
mov
xchg
iret
fs
fidivs
push
jnp
xchg
lret
orl
das
adc
ror
scas
pusha
jl
adc
aas
das
or
aam
sub
shlb
jo
jnp
dec
aad
cmpsb
lret
lret
repnz
leave
dec
lret
sysexit
aaa
fadd
data16
sbb
cmp
sbb
ret
jmp
enter
daa
sbb
mov
add
cli
inc
pop
adc
cltd
xchg
pushl
icebp
pop
into
loop
jns
pop
push
scas
imul
insl
inc
mov
or
int3
cmp
adc
xor
cld
pop
fisubs
ja
xor
pop
inc
adc
sbb
dec
xchg
out
inc
pushf
outsl
sbb
sbb
lds
adc
pop
cmp
loopne
mulb
push
pusha
jl
mov
pop
jge
xchg
ljmp
or
dec
stos
push
inc
inc
loope
pop
pop
and
mov
inc
in
ds
cwtl
push
sahf
cmc
inc
jns
cli
sbb
mov
clc
pop
sbb
jmp
dec
mov
cld
outsl
mov
fsubl
sbb
push
inc
jmp
and
cmc
pop
jno
push
std
jg
inc
add
ss
jb
insl
inc
xor
shll
and
sub
mov
sbb
sub
fimull
dec
orl
pop
arpl
xor
iret
push
and
adc
mov
or
lods
mov
mov
es
int
call
lahf
mov
mov
xor
mov
insb
je
bound
into
movsl
mov
add
push
jge
sti
dec
mov
sbbb
inc
xchg
ret
sbbb
les
test
adc
push
shrb
iret
push
pop
test
fwait
lods
push
pushl
nop
outsb
icebp
push
xchg
lods
fidivrs
pop
or
xlat
lds
and
xor
jp
test
mov
sti
addl
loope
popa
mov
fildl
loopew
imul
or
andl
shll
sbb
mov
lods
hlt
stc
bound
mov
pand
jl
mov
mov
movsl
pop
mov
in
dec
clc
loopnew
test
jle
sub
mov
xchg
xchg
out
arpl
pusha
or
push
xchg
scas
mov
lret
lods
xor
push
mov
cli
shll
push
xchg
cmp
mov
enter
fprem
mov
mov
out
lea
or
sub
shlb
dec
cld
repz
subb
jb
rcr
push
push
pop
stos
jno
aad
insl
popa
mov
ficompl
mov
test
arpl
test
and
test
rcll
stc
pop
mov
gs
lods
lret
fisttps
mov
push
lods
cmpsb
mov
arpl
ljmp
les
mov
mov
sub
jle
in
xlat
dec
cmp
jge
pop
push
xor
or
pop
into
out
and
nop
or
movsl
lea
fsubl
cmp
arpl
cmp
sub
addl
inc
jno
and
or
aas
sbb
mov
jg
sti
sahf
lds
test
inc
pop
leave
adc
or
pop
push
jecxz
mov
cmc
mov
icebp
cmp
aaa
or
and
sti
xchg
fiaddl
dec
inc
lahf
imulb
imul
push
mov
and
nop
in
jnp
popa
adc
sbb
adc
sbb
fsts
repz
ja
into
pop
push
shrb
insb
adc
fsubs
sub
or
cmp
aas
cmpsb
xor
sub
das
stos
or
arpl
xchg
sarb
inc
push
sub
jge
dec
out
out
push
outsl
xchg
shl
xchg
lock
mov
xchg
aaa
jo
xchg
jle
out
div
orb
mul
fwait
cmp
push
xchg
mov
sub
enter
mov
mov
xor
jecxz
testl
jo
mov
inc
lret
orb
sahf
lret
in
fcomi
xchg
popf
scas
xchg
sub
cld
sub
aaa
dec
adc
in
movl
and
jecxz
mov
mov
mov
fsubrl
xadd
mov
imul
pusha
rcrl
cld
mov
icebp
jno
jbe
mov
out
xor
mov
push
mov
and
stc
push
or
push
ret
std
in
loopne
mov
mov
jbe
inc
inc
and
xor
les
stc
adc
or
lea
sahf
mov
push
aad
fwait
imul
xchg
push
jmp
in
pusha
shl
mov
je
dec
pop
fisttps
repnz
dec
xchg
and
sub
xchg
roll
dec
xchg
push
xor
shlb
xor
call
mov
popa
xchg
push
mov
rcrb
lcall
jo
push
test
mov
xchg
iret
icebp
daa
mov
out
xchg
imul
lods
addl
xlat
xor
adc
sbb
popf
xor
fucompp
add
rcll
xchg
xchg
cmpsl
xchg
mov
mov
inc
ljmp
shll
adc
jb
cmp
in
mov
addl
arpl
notb
fcomps
jl
pop
nop
mov
je
mov
or
scas
mov
sbb
clc
cwtl
in
mov
adc
inc
dec
fs
mov
mov
push
mov
dec
mov
push
lds
fwait
scas
out
addb
test
enter
xlat
out
push
daa
push
add
jle
jno
adc
rol
into
inc
aam
fisubrs
jle
insl
adc
popa
stc
push
jno
jbe
mov
rcll
jns
and
cli
lcall
dec
cmpsb
jg
cmp
pop
inc
out
data16
aaa
test
jne
lds
mov
pusha
rolb
ljmp
cli
and
sub
jle
mov
scas
push
je
jne
xor
jl
jns
push
inc
xor
and
je
mov
or
int
outsb
cld
pop
movsl
divb
cmp
and
scas
dec
dec
outsb
loopne
gs
cwtl
adc
jp
jmp
pusha
fnstsw
push
out
push
imul
cs
int3
pop
dec
je
in
push
jl
andb
add
rcr
jmp
les
mov
or
out
inc
cmpsl
into
push
xchg
icebp
sbb
loop
pop
fcoml
jmp
pop
and
push
mov
inc
xor
out
fucompp
inc
stos
ret
mov
je
cmpsb
or
in
mov
cmp
pop
xchg
pop
lret
stc
or
mov
inc
stos
gs
call
clc
xchg
clc
mov
xor
jg
or
bound
or
in
popf
decl
mov
mov
push
sub
pop
repnz
pop
push
test
jb
mov
cli
fwait
mov
test
nop
ds
push
mov
iret
fsts
mov
xchg
dec
jo
add
divb
xor
inc
mov
sub
or
cmp
xor
das
ficompl
add
cwtl
lods
stc
jne
addr16
cmpsl
inc
jecxz
ds
push
into
fidivrl
adc
jae
add
and
lods
push
loopne
jne
pusha
cli
jnp
add
gs
cmp
ljmp
incl
cli
loope
pop
insb
or
push
aaa
push
sub
imul
pop
push
sub
in
inc
inc
call
adc
jmp
lret
in
sub
add
xor
or
imul
hlt
imulb
in
pop
fwait
mov
in
inc
ret
inc
mov
iret
mov
imul
cmpl
addr16
mov
je
outsb
jge
aam
mov
add
push
and
aam
pushf
xor
out
popa
jbe
push
ret
mov
mov
adc
jmp
adc
push
mov
sti
lret
mov
fwait
repnz
xor
fstpl
cwtl
popa
mov
addr16
push
insl
sbb
loopne
cmpl
cmp
and
sbb
xchg
aam
dec
cs
cli
xchg
imulb
rcrb
stos
mov
sbb
lret
pop
arpl
cmpsl
nop
dec
inc
scas
adc
vpmaxsw
adc
fildll
mov
movhps
fnsave
lcall
test
and
ret
add
sti
js
push
inc
jb
popf
dec
in
leave
jb
inc
mov
jbe
adc
xor
push
arpl
add
and
push
hlt
mov
fildl
mov
les
andb
push
enter
adc
loop
lret
push
mov
lahf
cmp
movaps
fwait
iret
rcl
mov
pop
pop
jno
dec
pop
push
and
add
xor
xor
sub
sbb
adc
mov
call
mov
adc
jnp
in
cltd
mov
pop
jne
mov
cmc
jmp
sub
dec
addr16
fsubp
sti
out
xchg
imul
jbe
mov
lret
inc
inc
hlt
gs
push
push
daa
sbb
loope
add
outsl
ror
leave
jle
popa
or
insb
dec
adc
fdiv
push
ror
xorl
ja
rclb
inc
mov
add
test
mov
filds
push
and
pmaxub
and
pop
xchg
xchg
pop
mov
insb
or
dec
jle
aad
add
add
mov
pop
adc
popa
inc
or
push
add
lds
test
jo
fs
or
or
cmp
cmp
mov
mov
lret
mov
xchg
jmp
lret
push
sub
mov
or
and
out
cltd
nop
dec
cmp
cli
daa
push
mov
das
add
add
ss
rcll
xor
testb
pop
in
mov
mov
jo
imul
and
jnp
push
mov
mov
mov
ljmp
fadd
pushl
enter
movb
inc
xchg
pop
into
xchg
or
mov
mov
cmp
jae
xchg
jne
sbbb
mov
cld
inc
push
xor
sbb
cmpsl
jg
scas
jo
mov
test
push
jmp
pop
and
inc
icebp
mov
pop
lock
jp
or
push
sub
xchg
sub
cltd
mov
adc
xchg
std
add
xchg
cmp
dec
lock
iret
sub
fs
jp
or
mov
lret
xchg
repz
sub
test
add
or
aad
movsb
mov
jmp
cmp
xor
lods
outsb
loope
xchg
out
iret
xchg
mov
ljmp
das
addr16
ret
xor
push
nop
cltd
xorb
dec
push
gs
scas
ror
jae
dec
ss
leave
xchg
cs
push
push
leave
lods
sub
aam
inc
push
push
push
stos
adc
je
jecxz
orb
mov
pop
jg
push
mov
movsb
ss
dec
mov
push
sbb
lcall
push
push
jge
stos
push
xlat
int
fiadds
imul
es
mov
sti
aad
push
leave
scas
mov
adc
and
push
pop
mov
and
nop
ljmp
adcl
int3
dec
shlb
lret
or
sub
adc
es
cmpsb
cmp
sub
sti
mov
pop
cmp
xchg
stos
mov
in
inc
xchg
and
stc
pop
add
jp
cmc
lret
xor
flds
or
xor
insl
test
xor
sub
adc
sti
inc
jle
pop
lcall
or
mov
outsl
jnp
popa
lcall
inc
pop
and
mov
sbb
mov
fisubl
lea
pop
inc
or
test
dec
cmp
pop
pop
push
bound
xchg
and
sub
xchg
xchg
out
bound
ds
or
mov
mov
push
cmp
das
mov
sbbl
or
fdivrl
cs
jns
nop
sar
push
rcll
adc
mov
shlb
sbb
push
aad
cmpsl
lret
nop
je
and
cmp
push
add
popf
xor
mov
movsl
in
jmp
loope
cmp
pop
insl
mov
jle
bswap
adc
lock
push
xlat
cmp
xchg
mov
cmp
ss
out
jmp
push
inc
inc
out
aaa
test
mov
or
pushf
add
xor
mov
and
pop
mov
outsl
xor
imull
cmc
jp,pn
in
pop
fdivrs
adc
inc
inc
and
dec
push
sbbb
cmpsb
movsb
jmp
inc
sbb
or
mov
or
sti
mov
inc
fildl
xlat
xor
movsl
inc
sub
inc
sub
jp
jg
movsl
movsb
mov
push
sahf
sbb
sub
cmpsb
mov
mov
lahf
add
cmc
pushf
xchg
clc
jo
pop
addr16
cmp
and
gs
sbb
cld
fisttpl
sti
mov
das
mov
push
dec
stc
cld
add
arpl
push
ret
addr16
and
mov
xchg
mov
mov
movsb
push
out
push
pop
pop
sbb
adc
ljmp
lock
sti
mov
pop
loopne
and
and
out
imul
sub
dec
adc
aas
push
lret
pushf
mov
mov
push
push
jae
aaa
ret
insl
cmp
cmpsb
insl
sub
push
arpl
cld
std
je
xchg
push
add
mov
cmp
out
jmp
aad
lods
mov
lock
mov
loop
movsb
addr16
mov
dec
sbbb
or
jmp
outsl
xor
push
xlat
sub
dec
inc
inc
adc
fisubrl
xlat
fildll
dec
xchg
lods
int
sti
add
sub
pushf
mov
clc
arpl
xor
adc
outsb
pop
mov
out
loop
out
es
lods
sbb
dec
pusha
dec
dec
cli
sub
repz
mov
mov
mov
xchg
ja
std
insb
mov
adc
push
push
arpl
mov
pop
push
mov
adc
fcmovne
int3
adc
mov
outsb
rcrl
gs
jno
ss
aaa
sub
jno
mov
scas
lret
jne
mov
pop
aaa
bnd
mov
int3
xchg
and
push
ds
mov
scas
inc
mov
in
aas
push
cwtl
test
in
insl
push
rolb
or
dec
dec
test
int
or
sub
insb
dec
mov
dec
sahf
arpl
rcrb
inc
cmp
cvtps2pi
push
mov
enter
mov
lock
test
out
add
push
pop
mov
xor
add
aas
pop
enter
jno
inc
xor
insb
les
out
push
xchg
outsb
and
dec
repz
jg
mov
dec
leave
lea
xlat
dec
sub
dec
test
xchg
add
test
adc
sar
push
jle
insb
sub
cmp
xor
imul
jns
dec
mov
mov
notb
out
sbb
gs
push
push
bound
cmp
loopne
xchg
shlb
pusha
adc
repz
stos
adc
out
xor
mov
shll
movsl
mov
fdivl
ds
repz
mov
movsl
jge
or
xor
jge,pt
dec
xchg
pop
push
andl
dec
sub
add
lahf
push
adc
dec
jne
cmpsl
xchg
or
fsubr
adc
push
inc
test
ss
ret
loope
adcb
in
and
mov
and
out
and
dec
les
sub
mov
mulb
xlat
xchg
lahf
repz
mov
cli
push
fidivrs
pop
in
lahf
xchg
xorps
or
mov
sbb
imul
xor
sbb
mov
inc
jnp
fwait
xor
jg
jnp
inc
in
pop
addb
cmp
sbb
sarl
jp
inc
pop
outsb
bound
push
cmp
xlat
fwait
jae
inc
icebp
mov
iret
mov
jne
xor
mov
out
jl
fisttpl
push
inc
lods
shll
mov
ret
inc
daa
push
jb
xor
sub
cmp
call
lcall
outsl
and
xor
pop
jns
push
xchg
jle
mov
fsubs
pushf
push
out
adc
mov
push
rcr
out
sub
dec
mov
push
out
rcll
lahf
stos
mov
jnp
mov
jnp
movsl
jno
test
cmpb
ljmp
les
pop
jae
dec
test
enter
cmp
insl
push
jbe
pop
ret
imul
push
sub
fsubl
dec
jg
jnp
lea
cs
lods
mov
nop
lods
pop
imulb
jnp
in
add
inc
mov
xor
loopne
xchg
shlb
mov
xor
push
add
pop
iret
mov
dec
and
push
cmp
xchg
xchg
add
add
stos
mov
stos
ret
test
out
addr16
and
iret
push
loope
lods
fidivrs
dec
pop
shrb
call
xor
repz
pop
popf
daa
mov
inc
mov
xchg
stc
shr
sbb
out
pushf
mov
sarb
aad
lods
leave
jae
pop
jle
mov
sbb
adc
push
adc
shr
cmc
mov
or
jb
and
and
frstor
pop
inc
dec
jl
ret
aam
outsl
scas
sbb
adc
inc
jmp
in
push
ret
ja
and
push
test
mov
push
lahf
mov
sub
xor
sbb
clc
mov
adc
aas
aas
mov
lahf
ss
es
adc
lret
in
in
or
mov
jae
rolb
gs
inc
mov
fstps
pushf
or
inc
fmull
cmpsb
mov
ja
jae
cs
fisubrl
jne
insl
jl
in
sub
inc
push
push
jmp
add
jo
fwait
lahf
dec
aaa
addr16
xchg
sbb
js
shrb
and
insl
xlat
mov
xchg
popf
add
loope
dec
push
xor
ficompl
lods
negl
sbb
mov
lds
out
pop
daa
add
xchg
dec
mov
or
add
jbe
testl
add
sahf
jecxz
and
mov
js
cli
jl
cltd
aaa
or
cmp
mov
push
and
sbb
cmp
jl
je
dec
lods
imul
xor
xchg
sbb
out
sub
je
stos
loop
mov
cmp
push
mov
dec
sub
rcrb
adc
xchg
mov
xchg
pop
push
fstpl
cmp
inc
lds
xchg
repz
rcrb
or
outsb
dec
pop
dec
in
fldl
sub
mov
addps
test
adc
imul
stc
push
stos
sbb
pop
cmp
fisubs
sbb
xchg
leave
test
movsb
aas
mov
sahf
mov
jae
mov
aad
cld
mov
adc
mov
pop
sub
test
or
sub
adc
pusha
fidivs
in
cli
xor
enter
enter
mov
out
cmp
pop
sarl
pop
pusha
shrl
cmp
test
mov
xor
out
les
pusha
lret
lock
xor
ret
dec
outsl
jb
sbb
iret
out
pop
enter
mov
jle
hlt
adc
pop
test
xchg
ds
push
push
adc
icebp
leave
adc
inc
comiss
xor
dec
sub
arpl
fwait
adc
mov
mov
jg
cli
cwtl
pop
int
push
push
xor
adc
pop
jecxz
fistpll
sti
xor
push
mov
fs
jns
mov
pop
xchg
add
mov
leave
push
in
mov
push
xchg
sbb
das
jne
mov
and
daa
leave
call
gs
pop
ss
gs
pop
cmpl
fdiv
in
js
cld
pop
mov
jo
mov
push
jmp
in
aam
jmp
or
jne
fmull
adcl
and
addr16
add
and
pop
lret
fistl
or
cmpb
add
clc
pushl
and
popf
pop
dec
sbbb
movsb
push
cmp
loope
ja
inc
dec
pusha
jo
dec
cld
mov
cli
inc
and
mov
stos
mov
mov
pusha
cs
daa
or
call
mov
mov
popf
add
shl
test
lods
xchg
jle
stc
pop
mov
pop
xor
pop
sbb
and
add
nop
push
test
iret
jno
or
sbb
xor
pop
push
in
lds
xor
iret
xor
test
outsl
sub
cwtl
xchg
cmp
and
fdivrs
or
inc
fstpl
or
test
pop
pusha
jmp
imul
inc
fsubp
fisubrs
lret
jo
shll
and
loope
fucomip
cmp
xchg
loop
adc
dec
int
ret
jb
mov
cmp
stos
sbb
ss
and
xor
xchg
dec
aaa
jl
into
fisttpl
sti
push
adc
or
xchg
sub
mov
mov
je
pushf
mov
lcall
or
jnp
xchg
iret
shrb
xchg
cmp
int
xchg
daa
jg
push
shrl
xor
call
clc
mov
xor
xor
lea
bound
and
cltd
decb
jg
in
mov
aad
insl
sbb
adc
pop
mov
mov
movsl
in
nop
xchg
outsl
jl
and
mov
xchg
repnz
mov
enter
roll
dec
int
xchg
in
negl
in
mov
outsb
or
insl
sbb
xchg
ret
adc
stc
ret
adcl
add
out
push
or
pop
out
imul
cmova
scas
out
int
push
mov
nop
mov
daa
add
sub
dec
addr16
loop
pushl
lods
and
and
xchg
push
dec
les
adc
cmpsl
and
or
aam
faddp
mov
sbb
repz
cwtl
push
jo
mov
in
xlat
push
xchg
addr16
xor
jmp
add
or
adc
mov
sub
aas
inc
and
nop
or
test
in
mov
out
scas
movsb
stc
xchg
xadd
movsb
ljmp
dec
cmp
push
cmpsb
lock
mov
bound
lock
xchg
lret
pop
cmc
pop
cmp
dec
fstpl
out
lock
test
jo
adc
in
addl
cltd
and
icebp
pop
ljmp
mov
jl
sub
add
es
adc
adc
push
xchg
xor
out
xor
ficomps
and
lcall
lock
std
push
mov
jne
leave
call
imul
jmp
dec
add
jnp
xchg
or
push
inc
std
mov
mov
xchg
push
pop
popf
call
das
xor
mov
enter
cmp
jae
rorb
test
mov
push
xlat
cli
adc
rcrb
out
jmp
adcl
jae
inc
leave
daa
negb
adcl
or
xchg
xchg
arpl
loopne
adc
ja
cmp
pop
ret
inc
cmp
mov
xchg
jb
cld
mov
xor
jbe
and
movsb
sbb
push
icebp
pop
dec
movsb
addr16
add
pop
dec
cwtl
in
cltd
xorb
lret
cli
push
fcmove
cmp
movsl
mov
or
loope
je
into
jb
and
lret
xor
mov
out
xor
leave
add
sbb
dec
ret
dec
mov
xchg
imul
loope
sub
imulb
repnz
sub
pop
jae
mov
loope
mov
pop
roll
push
pop
push
inc
sub
push
jp
fsubl
pop
int3
cs
stc
sub
das
jnp
xchg
popf
lret
mov
push
imul
lcall
jb
mov
scas
push
scas
add
push
mov
pop
jmp
xchg
pop
pop
xchg
in
ja
inc
pmaxub
fcoml
or
in
sub
imul
jne
movsl
xchg
pop
mov
lods
cli
push
mov
ret
jp
popf
pushf
mov
sbb
jne
adc
inc
fwait
jge
pop
xchg
lret
mov
mov
push
fcoml
dec
inc
rorl
or
and
sti
jp
cmovae
punpcklbw
or
or
in
jae
test
sahf
stos
xchg
add
scas
xor
add
repnz
pushf
js
and
mov
inc
frstor
cmp
shrl
xor
test
xchg
nop
fmull
mov
cltd
movsl
pop
pop
adc
repnz
jne
dec
lret
scas
mov
mov
insb
js
pop
das
lcall
shlb
mov
sub
cs
popf
xchg
dec
gs
jmp
imul
pop
jl
dec
test
add
popa
jle
lds
sbb
dec
and
sub
xor
pop
jg
xor
enter
mov
cli
adc
mov
dec
push
in
aad
in
add
pop
or
jmp
dec
xchg
add
in
push
sar
jmp
jno
stc
or
test
sub
dec
emms
jge
cmpsb
xor
rcrl
fisttpll
mov
jb
loope
test
rcrl
sub
cmc
cli
jo
rcl
mov
das
jae
pop
int3
in
jae
pop
pusha
rorl
jns
push
pop
xchg
mov
mov
push
mov
jns
cmp
pop
fbstp
jmp
subl
sarb
jl
adc
rclb
shll
push
push
dec
out
fcomps
mov
adc
cs
hlt
sar
call
lret
inc
mov
pop
sub
div
mov
scas
push
sub
dec
sarl
sub
pop
dec
push
adcb
and
outsb
lret
sub
pusha
sbb
fwait
sahf
lea
dec
or
mov
cmpsl
rcll
test
int
mov
sbb
popf
movsl
jmp
int
std
jbe
mov
jo
jo
filds
mov
lahf
sahf
jg
add
fisttps
out
mulb
mov
loop
rorb
ja
adc
inc
add
into
test
xor
push
lret
fisubrl
jo
pop
and
jg
fcoms
jmp
ror
adc
je
adc
sub
scas
mov
push
jne
sub
pop
add
add
ss
out
push
sub
test
and
sub
xchg
xor
push
push
sar
faddl
adc
mov
aas
frstor
pushf
adc
push
cmp
bound
xchg
lods
jae
jecxz
dec
aas
xor
inc
loopne
rorb
clc
sbb
cltd
ds
pushf
mov
std
test
xor
xor
adc
sub
mov
xor
or
push
jle
jbe
or
jg
mov
push
sbb
lret
inc
hlt
jno
aam
push
xchg
push
jecxz
mov
daa
lods
in
daa
mov
sbb
stos
sub
dec
movsl
repz
insb
mov
mov
fadds
out
mov
fs
insb
xchg
add
mov
test
das
out
sub
shl
out
or
cmpl
outsl
bnd
js
dec
mov
jge
filds
pop
jno
jb
push
enter
mov
out
dec
mov
int3
cld
xor
dec
pop
sbb
sub
negb
and
push
cs
or
inc
add
pushl
push
cli
mov
cmp
les
and
pop
mov
xor
xchg
lahf
cmpb
inc
mov
fdivr
jmp
decl
mov
push
push
lret
lds
mov
out
xchg
add
mov
and
subb
mov
or
les
popf
pop
movsb
mov
adc
and
lods
pop
sbb
xor
pop
inc
shl
outsb
mov
mov
pop
push
add
mov
or
push
jne
jno
sbbl
push
inc
pop
fidivs
adcl
notb
in
add
cmp
mov
pop
jno
sbbl
inc
stc
and
icebp
lcall
test
mov
push
ror
sub
fwait
sti
xchg
adcl
xchg
iret
adc
leave
fdivrs
jo
adc
movsl
js
xchg
cli
in
cmpsb
dec
js
cmp
lods
ljmp
push
sbb
stos
fsts
adc
mov
jno
dec
cltd
cmc
jae
or
popa
push
movsb
mov
inc
lock
les
in
lods
xor
in
xor
iret
mov
cmp
in
ss
mov
xor
and
aad
inc
mov
out
lock
rorb
sbb
bound
pop
mov
aas
sub
jle
mov
dec
in
clc
sbb
iret
sub
adc
nop
xchg
sbb
xor
and
cmp
int3
mov
jo
add
xor
ret
sub
stos
lret
dec
jae
and
data16
loopne
lods
jbe
xchg
and
cmp
pop
push
mov
stc
mov
or
xor
rorb
sub
ficoms
jge
pop
gs
xchg
fwait
cmp
popa
test
icebp
dec
lods
mov
xchg
scas
mov
add
subb
fildll
ss
inc
inc
lods
imul
enter
pop
dec
pop
push
in
dec
jb
icebp
sti
add
pop
lcall
mov
into
mov
push
sarb
sub
shlb
add
jge
lahf
stos
sub
out
les
sbb
adc
mov
mov
add
sbb
or
push
jae
aad
dec
mov
xor
jge
push
clc
jp
pop
pop
xchg
inc
mov
sub
or
ja
jmp
jb
cmpsb
inc
or
cld
cld
mov
enter
jnp
xchg
xchg
mov
mov
adc
mov
cmp
repnz
inc
mov
mov
dec
sub
cmp
sbb
popa
addr16
gs
nop
idivl
mov
testb
shl
add
push
bound
inc
insb
sbb
scas
ret
xchg
lods
xor
mov
sub
sub
gs
scas
push
sub
mov
mov
cmp
cli
gs
fxch
jp
inc
test
adc
sub
mov
adc
lret
or
add
into
cmp
and
imul
sub
stos
sahf
iret
jne
addr16
sub
or
cmp
xchg
and
outsb
js
pop
adc
sub
sub
push
stos
jle
jno
add
inc
sti
pop
fnsave
mov
mov
or
adc
xor
pop
inc
cmp
sub
sub
and
mov
outsl
jg
and
sbb
adc
push
std
cwtl
and
mov
in
sbb
in
dec
sbb
inc
jle
lret
xor
aad
jp
incl
sub
mov
out
mov
pop
es
add
insl
hlt
popa
push
mov
aas
fdivrl
sub
mov
mov
subl
fmuls
shll
clc
imul
pop
lret
hlt
and
push
es
fadd
push
loopne
sarl
cmp
shrl
popf
sbb
arpl
jo
and
push
cltd
add
add
mov
lock
lcall
mov
push
xchg
gs
int3
leave
lock
or
dec
push
sahf
mov
lcall
cmpl
imul
pop
add
inc
adc
lret
xchg
jno
xlat
cmp
cmpsb
icebp
cmp
fcoms
hlt
lahf
movsb
adc
pop
mov
lods
ret
cmpsl
insb
std
mov
arpl
xchg
dec
lock
mov
ficompl
xor
push
jbe
xchg
iret
stc
adc
adc
pop
jecxz
jg
in
jo
mov
sub
jge
std
lods
cmp
cmp
repnz
lret
adcl
mov
dec
lret
sub
cld
cs
subb
push
aas
mov
test
test
sbb
cmp
pop
jl
dec
sbb
and
bound
addr16
hlt
cwtl
mov
xchg
mov
neg
fcoml
cmpsb
cmp
jp
jmp
inc
jns,pn
xor
or
leave
dec
or
push
push
mov
add
icebp
out
cld
imul
lahf
push
arpl
popf
adcb
pusha
mov
xor
pop
mov
movsl
cltd
mov
xchg
mov
pop
stos
inc
mov
cmc
out
into
addr16
cmp
mov
ljmp
int3
in
push
pop
sub
inc
dec
and
ss
in
adc
lea
push
adc
mov
inc
loop
push
pushf
mov
enter
lret
popf
sub
push
jle
xchg
pop
mov
std
xchg
mulps
jo
aas
icebp
lea
mov
adc
or
xchg
lea
cmpsl
aam
das
push
cwtl
orl
cmp
xchg
addr16
ror
in
xchg
imul
adc
nop
mov
mov
sarl
cmp
and
mov
ret
aas
data16
adc
cmp
inc
xrelease
dec
mov
movsb
sbb
cltd
sbb
lcall
mov
xchg
mov
adc
test
inc
mov
push
out
jae
push
sub
xchg
ljmp
insb
test
call
insb
rcl
sbb
lret
adc
mov
inc
pusha
orl
push
add
lock
add
sahf
mov
arpl
outsb
leave
lea
mov
pop
or
push
aas
lods
or
dec
sbb
aam
adc
xchg
fwait
in
pop
icebp
mov
cwtl
out
pop
adc
test
ss
push
and
pop
lods
cmp
test
in
repz
sub
jecxz
mov
je
mov
fs
xchg
clc
inc
popaw
push
cmp
sub
mov
xchg
cltd
cmpsb
jo
dec
mov
adc
lock
cltd
js
fdiv
dec
out
mov
fcmovnb
sbb
cmpl
or
add
sti
popa
ds
sub
rorb
adc
cmp
stos
mov
and
into
test
outsl
cli
cmp
cmpsl
pop
out
cmpsl
xchg
push
test
sub
or
mov
cmp
mov
cmpsb
or
cmpsb
cmp
sti
aas
lret
jbe
js
cwtl
or
sti
and
cs
sub
or
pop
pop
sbb
mov
xor
pop
or
les
lods
xchg
leave
xchg
jecxz
mov
push
xor
outsl
jmp
decl
scas
scas
mov
cmp
sahf
jecxz
dec
les
inc
scas
orl
adc
pusha
rolb
frstor
scas
dec
imul
jae
and
mov
cmp
inc
popf
dec
xchg
int
jo
jl
js
es
sub
push
rcrl
pop
ss
or
fwait
push
pop
pop
lea
data16
pop
outsl
push
imul
fcmovu
fwait
jmp
push
cltd
pop
mov
movsb
les
lahf
or
push
sbb
pusha
mov
loope
enter
addr16
and
movsb
loopne
fs
add
mov
push
jno
add
jp
test
jg
mov
cld
inc
int
repnz
mov
inc
inc
mov
mov
xchg
sbb
push
mov
enter
lahf
xchg
inc
jne
jle
pop
lret
fdivs
dec
adc
outsl
arpl
mov
mov
js
mov
loop
fisttpl
shll
mov
js
enter
ljmp
adc
lods
lahf
and
loopne
cmp
mov
fstl
ret
int
icebp
mov
push
scas
jno
idivl
ret
popa
call
mov
push
jbe
outsb
mov
fstps
lea
pop
ds
sbb
bound
fstpt
lret
xchg
pop
push
and
cmp
pop
es
rorb
es
or
fimull
cs
cmc
mov
mov
pushf
sub
xchg
lods
cmpsl
inc
icebp
pushf
arpl
lods
jg
add
jno
fdivs
stc
jb
push
mov
jle
or
jns
pushf
mov
scas
testl
mov
jnp
mov
pop
daa
arpl
clc
sahf
cmp
mov
xchg
aad
lret
or
mov
mov
popa
fnstenv
out
fcom
inc
dec
addr16
xor
repnz
das
cld
adc
adc
subb
in
sbb
pop
mov
std
cmp
jno
in
jbe
inc
call
cmpsl
stc
push
fwait
sbb
adc
xor
fisubl
mov
das
or
mov
jne
aas
push
xchg
rolb
xchg
or
outsb
divl
xor
lret
test
or
stos
pop
icebp
xor
pop
lahf
mov
cli
dec
and
into
push
mov
inc
das
mov
xchg
lods
and
xchg
cmpl
adc
push
or
fsubrs
out
mov
dec
loopne
lods
and
xor
imul
xchg
js
add
ja
dec
cltd
pop
or
mov
stc
sbb
sbb
je
in
sbb
cmp
jnp
xchg
dec
fcompl
stc
mov
or
fisttpl
lret
das
stos
jbe
adc
push
push
cmp
aaa
xchg
int3
shl
in
or
mov
shll
mulb
pop
or
fidivrl
int
out
mov
daa
push
arpl
pop
mov
mov
popl
loop
movzbl
pop
addr16
or
inc
addl
or
call
das
in
bound
movsl
mov
adc
iret
cs
push
xchg
mov
sbb
inc
jge
fiadds
jl
sub
popa
push
bound
add
popf
imul
mov
jo
sarb
sarl
and
push
cli
cmovns
and
add
lock
xor
xchg
shrb
xorl
cmp
sbb
dec
dec
inc
and
jns
push
adc
lcall
lret
sbb
fs
adc
sub
sub
mov
rcr
sbb
xchg
xor
into
or
and
xorb
out
adc
mov
call
push
push
repz
inc
dec
dec
jns
adc
and
out
xor
sub
xchg
mov
icebp
cmp
sbb
cld
mov
mov
neg
fildl
les
movsb
sub
cwtl
popa
pop
pop
jnp
mov
push
dec
jp
cli
push
inc
and
push
ret
gs
dec
js
adc
fs
outsl
push
outsl
popa
test
out
xlat
inc
divb
shlb
rcrl
popf
pop
xor
ds
incl
push
test
mov
xchg
xor
loope
insb
sub
imulb
cmp
test
xchg
cmp
jp
add
pop
jae
xchg
sarb
push
pop
shlb
sub
ljmp
fnstcw
mov
stc
bound
imul
push
xchg
jg
add
add
lods
ja
pop
mov
out
cwtd
fstpt
das
arpl
cltd
or
movl
xchg
sub
and
fidivl
aas
adc
leave
testw
mov
dec
imul
lods
std
mov
sub
das
pop
fstpl
push
out
shl
lret
scas
and
mov
jae
jle
and
scas
xchg
mov
fdiv
or
imul
push
icebp
dec
xchg
mov
sub
mov
and
jecxz
xchg
jnp
sub
popf
fst
or
adc
adc
imul
xchg
xor
pop
xor
in
push
inc
xor
jmp
push
mov
and
mov
cmpsl
and
add
cmp
imul
add
fdivl
dec
jne
ret
loopne
fstpl
fisttps
xor
ds
push
dec
sbb
add
adc
movsl
push
push
lds
mull
aad
fistps
pushf
icebp
std
and
jnp
icebp
xor
jbe
sub
sub
dec
or
ss
das
sub
in
popf
mov
adc
leave
and
jmp
lea
mov
adc
add
arpl
scas
add
dec
jle
popa
mov
pop
mov
inc
loope
loopne
ja
mov
mov
and
cli
xor
add
mov
pop
pop
mov
cwtl
add
or
mov
psubusb
dec
jl
out
push
into
dec
xchg
nop
in
sub
jmp
movl
push
and
cmpsb
pop
lahf
outsl
push
cltd
ljmp
and
dec
dec
in
cmp
pop
shrl
and
mov
std
sar
ja
add
push
ret
cmp
mov
jno
in
in
mov
mov
jne
mov
sbb
js
stos
sbb
sub
or
movsb
outsb
dec
jl
aas
jecxz
lea
adc
push
pusha
and
daa
push
jo
cmpb
dec
ja
loop
jmp
int3
ss
clc
icebp
xchg
push
sbb
xor
and
cmp
sbb
mov
dec
int3
fisubl
mov
push
cmp
popf
cmp
int
add
mov
jl
adc
xor
mov
push
or
jae
dec
cmp
fldt
icebp
xor
mov
test
dec
pop
in
or
test
test
xchg
xchg
pushf
repz
pop
jg
xchg
inc
jno
iret
xchg
lahf
xlat
push
and
movb
out
cmp
xchg
mov
add
or
aad
stc
test
cs
dec
lret
testl
std
or
popf
test
dec
test
add
sub
into
and
mov
outsl
xor
pop
push
inc
sbb
lea
mov
enter
js
daa
add
inc
icebp
jbe
js
jmp
fldt
ret
cmc
mov
aad
xor
repz
rcr
loopne
lds
cli
in
adc
inc
xchg
rolb
ret
mov
fwait
xor
jg
lods
fstps
jnp
push
add
jbe
mov
cmc
outsb
jl
lods
shlb
sub
pusha
inc
mov
frstor
cmp
jmp
xchg
dec
dec
lahf
jl
js
jbe
pop
pusha
or
lret
pop
repnz
outsl
scas
inc
sub
into
jge
mov
mov
outsl
insl
loope
pop
sbb
sbb
cli
dec
sub
inc
aaa
add
scas
mov
xchg
popl
mov
insb
inc
push
arpl
push
add
subb
xchg
jno
in
addr16
xchg
jnp
stos
fldcw
adc
xchg
pop
pop
push
jp
mov
mov
add
pop
mov
pop
jb
mov
xchg
cltd
sbb
add
dec
dec
xchg
shl
fs
bound
sub
aad
pop
out
sti
dec
or
sbb
cli
lods
dec
or
push
nop
push
inc
add
push
mov
mov
repnz
lret
ja
repnz
or
in
jmp
call
sub
push
xchg
test
fwait
mov
cmp
cld
add
aam
test
ret
nop
sbb
push
adc
dec
sub
xchg
adc
mov
xor
imul
cmp
mov
inc
sbb
and
hlt
out
and
and
aas
daa
vpsubsw
int
cli
lock
cmp
push
sub
rcll
dec
ljmp
push
std
fnstcw
movsb
pusha
aas
jle
ja
xchg
dec
test
mul
aad
cwtl
jge
and
hlt
add
or
jo
jb
pop
nop
test
shlb
xlat
inc
or
dec
loopne
lahf
sub
ret
stc
cmp
mov
push
cmp
mov
loop
je
dec
or
xor
jge
imul
ljmp
push
and
dec
mov
mov
pop
mov
jecxz
or
fildll
xchg
jge
push
ja
add
nop
inc
jne
lock
ds
rcrl
mov
sbb
jmp
xor
sbb
icebp
rol
imul
adc
adc
lret
hlt
std
adc
push
inc
movd
inc
in
pushf
cmpsb
xchg
out
shll
adc
add
mov
in
loopne
fldenv
aad
out
scas
dec
fs
lds
and
dec
test
xchg
flds
push
shr
and
cltd
lcall
jl
fcomps
inc
and
shll
jmp
push
mov
movsl
into
pop
cli
cmp
popa
ret
cmp
sub
adc
popf
fistl
test
xor
pop
imul
mov
fcomp
outsb
add
imul
icebp
imul
lcall
inc
lcall
add
xor
mov
andl
aas
sbb
push
jb
dec
aad
popw
jmp
jmp
popf
mov
popf
xor
xchg
or
push
lock
push
jae
mov
inc
pop
jg
jecxz
xor
bndldx
in
push
jbe
mov
lds
cmp
movd
xchg
xor
sub
es
sahf
pop
out
push
dec
mov
nop
sub
jmp
xchg
lock
movl
mov
xchg
sbb
hlt
mov
xchg
pop
int
pop
jp
stos
cli
adc
int
clc
sbb
nop
push
in
mov
fimull
push
cs
or
dec
mov
call
push
rorl
enter
adc
adc
mov
std
std
in
dec
mov
fldl
enter
xor
mov
sub
mov
repz
mov
sbb
les
test
out
and
cmp
jbe
mov
lret
xor
sbb
in
sbb
inc
cmp
and
xchg
cwtl
test
pop
mov
es
mov
jbe
cmpsl
rol
aam
fdivrl
movsl
cmp
or
push
mov
std
arpl
dec
add
shr
mov
rorl
ret
push
aaa
rol
sbb
and
xor
out
movsb
jle
popa
stos
cli
cmp
mov
out
fcmove
xchg
movsb
push
xor
dec
aad
adc
lret
arpl
jb
pop
inc
dec
and
push
enter
lret
scas
fldcw
jl
inc
movb
or
jecxz
fistpl
jbe
fsincos
push
mov
jb
outsb
or
mov
adc
inc
jp
jmp
in
in
lods
shrl
insl
add
aaa
xlat
int
dec
cli
mov
dec
push
lret
push
mov
in
in
sbb
lret
std
and
inc
push
xor
mov
jecxz
mov
xchg
add
inc
xchg
mov
mov
mov
push
cmpsl
adc
jnp
xor
and
in
stos
sahf
sbb
pop
and
fistpl
push
lret
fnstsw
jns
inc
cs
cmp
lds
push
hlt
cld
adc
sbb
cmp
or
stos
or
stos
in
and
imul
imul
xor
inc
mov
fstps
mov
mov
outsb
xchg
pop
cli
lret
mov
jecxz
adc
negb
js
dec
and
out
cmpsl
and
stos
push
and
out
insl
fidivrs
inc
cmp
mov
add
and
jecxz
push
lods
inc
andb
xchg
xchg
repz
data16
imull
lods
mov
push
in
mull
stos
sub
cmp
ret
mov
pop
addr16
outsl
push
mov
mov
sbb
sbb
xchg
adc
das
and
mov
mov
push
and
int
orl
movsl
jecxz
cmc
xchg
repz
adc
jae
in
sahf
fs
mov
int3
lahf
out
cli
mov
stos
add
push
inc
shlb
in
or
fwait
addr16
mov
ds
in
loop
outsl
aas
mov
aam
leave
push
sub
add
or
pusha
mov
test
insl
mov
mov
lahf
ficompl
in
pushf
mov
adc
out
nop
jnp
mov
cli
push
loop
xchg
jae
jae
pop
xchg
pop
cmp
xchg
sbb
movsl
pop
arpl
cmp
movsl
mov
jle
ret
lods
jg
sbb
push
lret
fldln2
in
leave
das
fistl
xchg
ret
mov
fisubrl
sbb
jo
into
gs
jae
or
repz
addr16
cmp
pop
frstor
pop
insb
imul
xor
pop
lds
imul
mov
arpl
adc
xchg
int3
jnp
adc
jge
sub
inc
ss
cli
insl
mov
adc
mov
add
jns
or
lret
jmp
bound
into
jae
or
movsl
mov
loopne
xor
sub
push
stc
pop
push
mov
fistpll
shrb
sub
test
nop
out
push
adc
ret
jp
xor
xchg
pop
mov
jae
mov
or
push
lods
stos
cmp
mov
js
lcall
dec
mov
cwtl
orb
push
xlat
addl
rcll
add
das
xor
inc
mov
jno
pop
imull
std
pop
pop
pop
xor
rcr
pop
fxch
adc
cmpsb
jne
lds
jno
pop
aas
lds
push
test
cmp
xchg
scas
cmpsl
push
jnp
inc
jl
mov
mov
repnz
cmp
outsb
nop
hlt
cli
dec
stos
cli
cmc
jge
jns
or
jo
ret
adc
fldt
add
cld
loopne
and
popf
stos
cmp
or
scas
outsl
aam
xchg
xchg
cwtl
jmp
call
call
push
xlat
inc
or
daa
je
in
add
dec
daa
mov
lret
roll
shrl
js
cltd
xchg
ds
push
xor
jno
mov
adc
iret
or
aaa
ret
xor
sbbb
add
or
roll
rcll
insb
jg
andl
cmc
int
xchg
call
jg
daa
or
stos
repz
lods
push
dec
insl
adc
inc
sbb
ds
testb
add
mov
xchg
xor
lahf
sarl
xchg
mov
add
inc
push
push
push
std
out
sbb
nop
cmp
xor
push
mov
jnp
adc
filds
jae
inc
test
push
or
cwtl
imul
dec
lods
jp
or
dec
add
stos
pop
daa
lods
std
movsl
adc
fildl
jmp
push
or
test
test
inc
or
push
in
mov
cmc
dec
out
mov
adc
sub
arpl
clc
js
inc
bound
mov
fidivrs
faddl
mov
jne
es
jg
xchg
adc
inc
dec
pop
pop
adc
cmp
imul
pushf
push
add
jns
and
icebp
fwait
sahf
lods
popf
mov
xchg
pop
insl
inc
or
xchg
cs
in
mov
outsb
test
sbb
push
and
pushf
negl
es
jno
in
and
mov
jbe
xchg
inc
push
cmp
out
push
testl
lcall
dec
xchg
les
fnstenv
fistps
add
sti
dec
popa
push
sbb
inc
aaa
outsl
jg
jmp
cmp
mov
or
mov
pop
addb
in
stos
mov
mov
jmp
dec
or
test
arpl
cmc
xchg
jg
out
fsubrl
cmpsb
sti
dec
repnz
movsb
sbb
test
mov
std
pusha
ret
push
ret
popa
cmp
int3
pop
imul
jge
cmpsl
and
jmp
and
inc
or
out
dec
push
cmpl
xchg
mov
mov
mov
jg
xor
iret
xor
idivl
push
test
daa
adc
xchg
test
inc
mov
cwtl
cs
ljmp
cmp
insb
jge
xor
cmp
mov
sub
cmpl
push
xchg
imul
jp
sub
divl
pop
cmp
mov
sub
cmpsb
dec
cltd
test
mov
in
pop
insb
fwait
fs
popf
jns
mov
jp
out
dec
xlat
cltd
mov
call
enter
and
fisubl
adcl
lea
mov
or
jne
jmp
push
mov
cmp
cltd
jge
and
shr
push
or
sub
flds
dec
push
loop
in
repz
add
adc
sub
mov
inc
fnstenv
cmc
xlat
bound
stos
jns
mov
xchg
cltd
mov
push
jne
dec
dec
ljmp
call
mov
imul
movsb
jnp
inc
arpl
scas
arpl
xor
int
mov
xor
mov
mov
adc
push
ds
inc
js
test
mov
dec
xor
sbb
inc
jae
jae
int
mov
stos
aam
nop
in
fs
les
jg
call
fs
bnd
rorl
sub
ljmp
rclb
lods
lahf
lock
xchg
imul
notb
leave
movsb
sbb
and
int3
enter
call
iret
loop
cmc
in
inc
dec
loopne
shlb
outsb
jno
xor
mov
rcll
enter
loope
ss
aam
cmc
add
push
das
repz
imul
xchg
add
jp
sbb
jnp
adc
rclb
sbb
mov
and
popf
ljmp
mov
icebp
xchg
add
mov
mov
cli
arpl
int
and
xchg
mov
jp
xor
and
mov
xlat
sbb
mov
adc
stc
cmc
lahf
pop
mov
rorl
pop
lods
mov
sahf
push
xchg
push
mov
mov
aaa
dec
xchg
jl
adc
pop
out
adc
shr
add
pxor
shlb
pop
jnp
test
adc
cmp
seto
sub
repnz
jae
dec
mov
adc
test
in
jno
or
in
int
pop
push
cli
je
add
adc
movsl
jae
dec
or
xchg
cltd
test
loope
ljmp
insb
test
pop
lahf
adc
mov
push
adc
mov
scas
adc
addr16
adc
movsl
leave
push
out
nop
and
out
fiaddl
pop
in
test
arpl
adc
xor
push
leave
cmp
or
cmp
addr16
pop
cmc
mov
jo
jns
mov
test
repz
stc
adc
gs
mov
test
push
xor
sbb
inc
xchg
adc
pop
push
mov
xchg
mov
inc
jnp
test
in
movsl
fildll
dec
jl
xor
je
lret
inc
outsl
mov
pop
xor
xchg
xchg
adc
jnp
sarl
roll
xchg
std
iret
cli
or
faddp
adc
adc
out
mov
push
fsubr
mov
mov
xchg
xor
inc
out
cmpsl
ficompl
fcmovnu
sahf
iret
xor
loop
outsb
inc
dec
sarb
pop
js
pop
sbb
xchg
lea
ljmp
and
dec
mov
adc
rorb
push
in
cmpsl
test
inc
or
cmp
inc
repnz
fcmove
pusha
sbb
stos
push
push
push
pop
out
out
orl
pop
out
xor
stos
jg
mov
cmp
mov
test
add
xchg
test
lds
dec
fucom
push
push
stos
dec
test
dec
das
outsb
movl
cwtl
shlb
jbe
add
mov
xchg
int
daa
push
je
dec
enter
loope
jae
inc
repnz
subb
pusha
sbb
and
mov
inc
or
cmpsl
push
xchg
hlt
enter
jl
inc
dec
push
xchg
ljmp
test
inc
dec
sub
push
adc
dec
orl
xor
pop
xchg
and
mov
fwait
sub
mov
addr16
repz
xorb
xchg
test
jmp
ret
push
gs
mov
mov
das
adc
add
push
and
ja
pop
sbbl
dec
mov
xchg
push
enter
frstor
lahf
lret
out
sub
push
inc
orl
bound
pop
add
adc
and
mov
jmp
leave
ljmp
jne
dec
leave
aam
sub
addl
push
sahf
add
stos
mov
in
mov
sub
cmp
leave
mov
mov
pop
das
clc
leave
sub
sbb
shlb
fnsave
adc
fdivl
ja
sbb
xor
mov
sbb
mov
lahf
int3
gs
dec
push
cld
fsub
scas
int
cli
jmp
jecxz
dec
jmp
cltd
add
push
js
cmp
test
jno
mov
push
mov
add
jne
adc
les
int3
call
fstpl
xor
mov
stc
mov
iret
push
add
mov
dec
mov
leave
daa
js
xchg
sahf
mov
aaa
xchg
bound
jbe
add
hlt
fsubl
fmul
mov
fildll
push
pushl
mov
jb
jp
lods
les
loopne
inc
dec
popa
push
push
push
imul
dec
jge
dec
clc
cmpsb
lret
sub
push
fsubl
test
out
stos
repz
ret
scas
dec
xchg
mov
sub
aas
jo
add
add
in
icebp
into
pop
mov
data16
sar
test
sub
cmp
or
jge
sub
loope
fwait
rcll
daa
lcall
fsts
ret
mov
pop
xchg
leave
sbb
dec
dec
cmp
and
into
popf
scas
jbe
stos
push
adc
insl
cmp
dec
mov
cld
shl
aam
rol
sub
xor
test
stos
mov
xchg
jnp
xor
mov
or
cld
test
in
adc
sub
cli
rclb
aam
adc
test
mov
divb
ror
sahf
push
adc
shlb
mov
mov
and
inc
push
pop
in
jb
js
scas
mov
shrb
call
sub
rcll
lock
jae
push
fdivs
int
xor
xchg
test
dec
mov
mov
jbe
rorb
mov
dec
lods
sbb
cmpsl
push
mov
sub
cs
push
mov
mov
cmp
push
pop
push
mov
adc
orb
mull
outsb
mov
jmp
xchg
mov
lcall
jns
cmpsl
cmp
in
mov
in
jmp
fwait
sub
sahf
add
mov
inc
cmp
das
jle
in
xchg
inc
in
sub
and
jmp
cmp
das
clc
dec
icebp
push
ja
repnz
or
roll
dec
hlt
fildll
cmpsl
and
mov
add
fidivrs
ficomps
jns
cmp
xchg
mov
mov
mov
sub
iret
dec
loopne
hlt
lds
fcmovbe
enter
sub
mov
out
dec
adc
mov
stos
movsl
xlat
les
fimuls
jno
lock
push
and
subb
sub
inc
je
push
into
cmpsl
dec
lods
fwait
inc
rcr
sub
pop
and
ss
xor
lcall
decl
lahf
jo
test
cmpsl
dec
je
bound
imul
mov
or
pop
pop
or
jne
mov
shrb
mov
pop
pop
jmp
pop
arpl
jp
sbb
popf
mov
mov
out
jne
push
adc
imul
popf
jno
pusha
sbb
popl
dec
mov
pop
sbb
enter
inc
stc
jmp
inc
fwait
push
daa
dec
es
mov
out
outsl
cmpl
jecxz
pop
nop
das
xor
cmp
cmp
sub
test
and
mov
ljmp
pop
mov
xlat
and
in
push
mov
dec
movl
out
fwait
dec
iret
jmp
data16
sbb
rolb
xchg
aas
int
clc
test
cmc
push
and
push
and
inc
or
out
movsl
test
mov
sub
sub
push
repnz
adc
repnz
jo
cmp
cmpsb
repnz
mov
jnp
xor
hlt
loope
lcall
or
stos
sub
out
repnz
sahf
push
jmp
adc
sbb
flds
push
andb
jle
inc
stc
and
sbb
pop
mov
scas
fisttps
push
in
pop
dec
subb
fs
popa
in
mov
stos
pop
xchg
mov
iret
stc
loop
push
and
pop
jle
testb
idivb
movl
push
sbb
jae
fcmovu
pop
pop
int3
mov
das
std
sti
jns
int
mov
ljmp
sub
ljmp
int3
pop
movsb
inc
jnp
sbb
cld
shrl
mov
cmp
dec
push
lods
mov
sub
pushf
sub
mov
dec
in
dec
lods
js
mov
mov
push
sub
push
cltd
add
call
xchg
mov
enter
mov
test
stc
sub
scas
cmp
pop
or
jae
aas
je
dec
sti
and
pop
mov
jge
es
sbb
fxch
push
xchg
inc
leave
jns
push
inc
push
cmp
mov
insb
jle
imul
lods
daa
gs
cmp
cwtl
push
xor
add
adc
mov
and
cmpsl
shrl
xor
cltd
add
cmp
or
dec
imul
lds
int3
sub
jo
xchg
dec
add
mov
mov
mov
out
or
test
rcr
test
add
pcmpeqb
stos
ret
ret
icebp
loopne
lahf
mov
cmp
and
js
iret
jecxz
sub
mov
xor
shrb
mul
and
clc
sti
cli
add
jmp
mov
fnstenv
add
or
mov
pusha
test
add
or
andb
cmp
fsubrs
jbe
pushl
loop
pushf
test
add
into
vmulps
shlb
sbb
cmp
dec
repz
divl
movsl
rolb
mov
cmp
outsb
out
hlt
lock
mov
cmpl
incb
rcrl
cmp
xchg
jb
and
inc
call
outsb
leave
mov
jae
lret
inc
lods
sub
pop
loop
dec
inc
pop
pop
jl
jne
jmp
es
mov
pop
ret
sub
mov
xchg
cmp
sub
pop
sub
les
mov
f2xm1
sbb
cli
jmp
mov
pop
test
mov
xchg
dec
lret
ja
andb
out
cmp
vrsqrtss
add
int
stos
outsb
aam
or
sbb
mov
sbb
push
adc
jnp
stc
jmp
das
out
mov
fcmovne
jmp
adc
es
xlat
mov
jae
out
pop
shl
hlt
ja
xlat
repnz
and
cmp
adc
fisttpl
mov
cmp
push
push
fwait
nop
jno
jnp
mov
and
sub
fdiv
mov
sbb
xchg
push
xchg
insb
push
inc
mov
xor
push
jecxz
mov
insb
xor
in
mov
adc
push
mov
in
xor
in
mov
mov
data16
dec
add
gs
push
imul
lods
int
out
pop
add
std
mov
inc
fstp
ds
hlt
pushf
and
out
sbb
dec
imul
insb
mov
jp
ret
adc
jg
jmp
push
fisubl
pop
mov
add
or
leave
xchg
and
push
les
xchg
xchg
andl
dec
dec
sub
clc
call
lea
js
mov
dec
and
dec
dec
pop
dec
push
cmp
clc
mov
pushl
fmulp
pop
mov
dec
aaa
or
dec
jmp
cmpl
mov
inc
test
int
inc
jne
sbb
imul
xorb
addr16
daa
imul
mov
scas
push
mov
test
mov
in
jg
popf
pop
push
hlt
addr16
sub
dec
fstl
loopne
jg
mov
pop
call
xchg
xchg
sbb
loope
inc
sbb
outsb
cmp
pushf
cmp
popa
pop
mov
jmp
ljmp
mov
imul
and
popf
xor
cmp
xchg
inc
sbb
mov
fcmovne
mov
pop
leave
sub
cmp
mov
call
mov
test
sbb
inc
dec
mov
pop
leave
in
add
aam
ret
jb
jge
adc
out
imul
fadds
add
pushf
cwtl
pop
lret
es
lods
iret
faddl
mov
adc
jno
push
and
flds
mov
sub
sbb
cwtl
in
dec
cld
inc
outsb
enter
push
dec
insb
and
ss
popf
adc
inc
xor
jno
inc
xchg
adc
call
lret
rorl
test
insl
xchg
popf
nop
cltd
sbb
incl
outsb
xchg
ret
inc
jbe
push
ret
cltd
popa
cmp
cmp
xor
in
mov
neg
or
xchg
dec
test
nop
das
xchg
int3
xor
loop
fdivl
in
xchg
add
or
xchg
call
cld
in
aaa
sti
xchg
mov
mov
imul
lret
mov
sub
pop
jnp
hlt
and
pushf
push
icebp
subb
cmp
ret
and
xchg
inc
rorb
mov
mov
or
push
popf
push
in
scas
testl
mov
sub
inc
jno
cwtl
addr16
inc
ljmp
psrlq
lea
cmp
std
xchg
push
fstps
mov
into
sub
push
dec
int
and
mov
mov
jecxz
mov
enter
dec
adc
add
insl
popa
outsl
lret
lcall
pop
mov
xchg
push
or
call
sub
lret
cltd
lock
or
mov
iret
jecxz
and
lods
int3
mov
or
pop
enter
or
push
pop
fcoms
mov
divb
xchg
gs
test
idivl
lods
les
out
jbe
cmp
and
stc
pop
xchg
stos
mov
xchg
lds
sti
test
mov
add
jb
aas
cmpl
mov
leave
shl
or
je
pop
add
inc
add
je
pop
jecxz
xchg
add
aas
stos
call
cld
jl
icebp
loop
loop
adc
xchg
or
or
xor
mov
test
sub
inc
mov
pop
fimuls
and
mov
inc
mov
pusha
lcall
dec
js
dec
add
pusha
adc
lret
sub
lods
loope
xor
cmpsb
jg
mov
dec
mov
pop
stc
popf
pop
or
cmp
or
cmp
fprem
adc
out
xlat
out
mov
std
and
jno
mov
mov
xor
adc
data16
push
and
jns
sbb
outsl
ljmp
outsl
insb
aad
imul
shrl
fnsave
repnz
outsl
inc
push
lds
movsb
lahf
dec
mov
cltd
shrl
cmp
and
inc
cmp
fistps
and
int3
iret
and
sbb
lret
xchg
jp
insb
es
push
xchg
insl
push
jl
js
les
adc
mov
iret
and
enter
sub
push
sti
jo
lcall
mov
test
loope
mov
or
xchg
iret
test
cs
pusha
xchg
sub
pop
mov
sbb
push
mov
imul
mov
ss
nop
xlat
jno
cwtl
fsubrs
int
push
sbb
dec
addr16
sub
mov
add
in
dec
addr16
pop
pop
mov
push
pop
inc
cld
jo
mov
cld
pop
leave
push
nop
les
cmpsl
pop
mov
cmp
pop
fnsave
jnp
inc
cld
clc
dec
push
sub
rcll
fisubrl
inc
fmulp
mov
fists
jge
jecxz
test
shll
loop
mov
inc
das
mov
inc
or
pop
dec
jp
test
xlat
aas
mov
rol
push
jmp
and
sbb
add
xor
bound
mov
mov
mov
push
lahf
mov
push
add
and
inc
push
std
negb
daa
mov
push
mov
xor
sahf
sbb
cmc
rol
xor
lret
stos
dec
mov
pop
test
cmp
mov
jo
jb
icebp
mov
jg
mov
or
cmp
add
fldt
pusha
mov
xchg
call
mov
lods
call
jae
ljmp
repz
testb
fistpll
xchg
cmc
dec
add
jecxz
inc
sub
mov
or
shl
adc
xchg
mov
mov
test
xchg
js
xchg
ja
je
xor
mov
sbb
mov
jle
imul
mov
push
add
fmul
movsb
mov
mov
jmp
jne
cmp
dec
mov
insb
add
in
inc
pop
jg
sub
jg
sbb
jge
addr16
popa
adcl
cmpsb
mov
mov
rorl
test
xchg
orb
push
das
shlb
and
sub
loope
mov
pop
cmpsb
insl
mov
or
mov
lods
mov
out
or
or
add
jp
loopne
jmp
repnz
insb
std
nop
and
andl
xchg
xchg
push
and
inc
push
adc
fs
lret
mov
inc
ficoml
push
call
sarb
or
or
insl
aam
sub
hlt
ljmp
repnz
xlat
sub
add
ljmp
mov
mov
ret
sub
xchg
jo
popf
push
mov
xchg
xorb
mov
ljmpw
repz
cmpsb
les
inc
jecxz
or
xor
sub
aas
insl
or
addr16
mov
pop
aad
and
add
xor
xchg
jl
add
imul
push
movsl
sahf
ljmp
jns
psubb
icebp
stos
negb
in
loopne
int3
cmp
cmp
je
cmpl
or
mov
mov
call
xor
int
in
pop
jecxz
in
push
push
jo
push
loop
outsb
imull
adcb
cmp
test
jecxz
test
push
fcoml
dec
jmp
mov
test
jb
out
sub
or
arpl
stc
maxps
jb
lods
sbb
repnz
movsb
fstps
pop
mov
adc
mov
stc
sbb
and
dec
jae
mov
sub
out
pop
pop
and
adc
mov
sbb
jnp
sbbl
pop
sub
dec
ret
mov
lahf
sub
stc
aam
inc
filds
orb
mov
push
mov
ja
fistps
leave
test
push
xor
jo
xor
xor
cmp
add
sub
loope
inc
inc
or
cwtl
sbb
sub
cmp
mov
aad
sub
aad
push
fnstsw
test
mov
adc
mov
xor
push
dec
lods
sbb
mov
out
push
xchg
lds
add
pop
inc
call
paddsb
sbb
shlb
mov
cmc
lods
push
pop
nop
jne
and
subb
add
pop
andb
cmp
jbe
push
insl
or
outsb
cmp
into
movsb
cwtl
ja
mov
sahf
push
add
data16
jmp
loopne
imul
cwtl
push
mov
iret
shl
add
adc
arpl
fidivl
loopne
mov
cli
outsb
in
fimuls
fisubrs
sub
jl
jno
fcom
sub
inc
pusha
pop
sub
push
pop
push
movsb
call
stc
loop
fisubrs
fdivl
shl
sbb
sti
and
insl
arpl
xchg
cmp
mov
mov
scas
in
hlt
add
inc
nop
dec
inc
scas
pop
dec
loopne
fwait
popa
notl
mov
xor
mov
jae
mov
shlb
movsl
jns
mov
xchg
cli
jbe
and
out
shll
sbbl
ret
sbb
dec
imul
cmp
test
pop
or
ljmp
cwtl
pop
fstpl
fiaddl
icebp
lds
rorb
in
jne
decb
jno
sahf
int3
js
in
nop
fwait
sub
jmp
stos
push
fldlg2
sbb
pop
xor
or
lret
bound
mov
dec
repnz
int
rolb
popf
adc
lcall
loop
xor
jbe
fucomi
cmp
loop
sbb
lret
jo
fsubp
bswap
pop
add
xchg
jp
ja
arpl
aam
loope
int
movsb
aaa
xchg
cmp
jl
bound
out
add
adc
cld
push
movsl
push
sbb
int3
fmuls
insb
sub
nop
fildl
fwait
in
mov
pop
in
test
lock
pop
int
push
adc
rolb
pushl
push
and
mov
js
mov
es
icebp
fidivrl
outsl
cmc
imulb
mov
aaa
or
pop
sbb
pop
jecxz
cs
into
adcl
push
cmp
and
xchg
mov
pop
or
or
jge
inc
sub
and
sbb
mov
pop
adc
dec
addl
ret
rclb
dec
lods
inc
sysexit
add
dec
pop
out
add
rcll
sti
adcl
inc
mov
ret
out
jb
mov
push
fistps
out
mov
jg
pxor
xor
pop
cmc
mov
cltd
popa
jbe
cmp
jecxz
push
push
ficoms
jl
das
sbb
ljmp
arpl
xchg
inc
loope
sahf
add
add
jg
int3
std
mov
mov
push
cmpl
imul
out
lea
mov
adc
shll
in
push
push
into
inc
and
shlb
or
xchg
jo
add
xchg
in
ljmp
popf
sub
popf
adc
and
mov
out
adc
out
das
scas
or
mov
arpl
pop
push
dec
mov
inc
insb
push
jno
sarb
adc
pop
mov
and
cmp
inc
dec
out
sahf
test
sbb
cmc
repz
add
jns
mov
add
shll
cmc
push
mov
in
sub
xchg
shlb
into
das
das
test
lahf
data16
xor
loopne
xchg
adc
jnp
in
ficompl
jns
shl
dec
sbb
cmp
cli
fadds
push
jno
fisubs
add
jmp
push
pusha
imul
in
inc
sahf
cld
xor
jno
jmp
sbb
lock
and
mov
arpl
mov
cmp
sbb
enter
shrb
and
mov
pushf
push
and
roll
mov
push
cmp
dec
jecxz
cli
jnp
les
out
icebp
ret
pop
out
add
popa
jmp
mov
xlat
pop
lods
enter
es
lret
push
push
mov
cmpsl
imul
or
jge
hlt
lcall
pop
daa
fsub
jg
lret
cmp
and
add
mov
or
in
imul
dec
jmp
pop
and
and
xchg
sbb
shrl
imul
adc
jne
adc
xor
mov
cmpsl
pop
mov
bound
xor
pop
xchg
jno
push
nop
xchg
xlat
sahf
in
push
shll
add
loop
pop
fistl
jae
lods
fimuls
inc
adc
leave
xor
rclb
add
scas
testb
aas
sub
imul
add
nop
pop
push
and
out
dec
aam
push
fmul
and
mov
ret
arpl
in
ds
aam
invd
in
cli
sub
jl
pop
lea
jns
int3
cmpsb
out
in
in
cmp
ds
xchg
cmpsl
push
insl
imul
inc
stc
call
push
jl
push
aas
sti
daa
jno
cli
int
fbld
and
pop
mov
xorb
cwtl
popa
arpl
idivl
mov
mov
xchg
mov
addr16
in
push
xor
decb
mov
pop
mov
push
shrb
xchg
sbb
cmp
jae
xor
cmp
push
xchg
lcall
popa
shl
ljmp
rcl
loope
les
and
sti
in
xor
call
aas
pop
enter
mov
push
lret
mov
mov
divl
ss
inc
sub
adc
in
leave
add
fwait
or
stc
add
shlb
add
mov
imul
xlat
mov
mull
js
mov
pushl
and
cmp
dec
cwtl
lea
sbb
cmp
mov
add
mov
cmpsb
pop
mov
inc
mov
adc
and
pop
repz
addr16
dec
hlt
jecxz
pop
jbe
out
sub
cld
fmulp
xchg
or
inc
mov
add
ljmp
sbb
add
dec
sub
sbb
jno
mov
jnp
fstps
inc
pop
lret
dec
dec
adc
jno
xor
inc
sbb
push
int
fs
mov
push
add
sub
iret
push
lahf
adc
std
push
into
sahf
adc
hlt
ljmp
push
dec
inc
in
adc
outsb
cmp
add
nop
cmp
std
lahf
popf
and
aam
xor
push
pop
fcmovnb
out
push
aaa
adc
test
mov
mov
movsl
mov
and
lea
or
je
inc
lods
sbb
jne
ja
xchg
movsb
test
mov
out
adc
enter
rclb
mov
les
rclb
stos
sub
movsb
pop
out
in
sub
pop
mov
sbb
out
shll
mov
lods
aam
jae
dec
fstpl
insl
std
and
repz
fadds
add
mov
mov
jae
pusha
test
pop
in
jmp
mov
arpl
lahf
pop
shll
dec
insb
mov
repz
insb
stos
das
lahf
arpl
xorb
sarb
and
cmp
sub
inc
cmp
bound
adc
jnp
stos
xor
add
ds
imul
bound
jge
xlat
jmp
mov
hlt
and
loope
sbb
outsl
insb
pushf
lahf
mov
dec
lret
nop
scas
sbb
dec
add
and
cmp
and
mov
dec
mov
in
or
shll
enter
fs
jp
gs
mov
mov
aas
fbstp
cmp
out
inc
leave
repz
sub
out
scas
mov
daa
xor
inc
loopne
mov
pop
jnp
add
jae
pop
xor
aad
shrb
adc
xor
sbbb
xor
mov
or
sub
scas
fwait
add
ss
jo
add
rcll
fbstp
imul
jns
jge
mov
popa
mov
ss
orl
jbe
popf
xor
icebp
out
xchg
lods
xchg
in
clc
jo
enter
or
mov
lds
inc
shr
sub
out
outsl
mov
movsb
pop
arpl
loop
lcall
push
jae
dec
xchg
or
je
pop
jl
mov
xchg
xor
cmp
lock
call
mov
inc
jmp
mov
adc
mov
pop
add
push
inc
jg
xchg
mov
add
mov
xchg
orb
cwtl
jbe
add
pop
imul
repnz
jmp
adc
movsl
cli
cli
sbb
adc
jle
jae
jmp
ljmp
xchg
cld
insb
xchg
fbstp
mov
clc
inc
test
ja
imul
dec
and
sbb
dec
scas
jp
hlt
push
push
inc
pushf
xor
pop
fmul
adc
and
dec
mov
fldl
insb
subb
pushf
xchg
pop
fs
rcr
adc
mov
rol
aaa
sub
fcoml
push
mov
inc
jmp
mov
mov
outsb
push
push
movsb
lret
popa
pop
roll
aad
add
stos
jo
pop
dec
cwtl
sbb
fwait
or
subl
add
andl
cmpsb
inc
sub
out
aaa
and
int
call
xor
push
push
fs
insb
insl
mul
in
xor
andl
push
enter
adc
jmp
push
adc
pushf
out
aas
jnp
dec
fistpl
xchg
cmp
or
movsb
mov
in
push
xor
test
cmp
mov
loopne
jbe
test
fnstsw
fdivr
aas
or
or
aad
push
dec
lea
loop
scas
mov
imul
xlat
lret
push
or
push
push
loope
test
pop
rorl
pop
insb
mov
inc
subb
mov
jbe
mov
out
cmp
enter
fbstp
adc
sub
loop
jecxz
inc
in
add
cmp
imul
mov
mov
lods
push
mov
cmp
pop
mov
sub
jne
inc
insb
push
stc
jno
movsl
mov
xor
popa
scas
pop
mov
leave
or
fidivl
rcr
xchg
mov
xor
xor
loop
jl
outsl
test
or
xor
dec
xor
repnz
dec
cmpsb
xchg
mov
push
iret
dec
lods
jmp
push
movsl
dec
xlat
iret
adc
out
sbb
pop
pop
xchg
scas
cmp
mov
mov
pop
mov
xchg
cwtl
jns
pop
lret
dec
xchg
hlt
outsl
sub
repnz
sbb
dec
pushf
xchg
cmpsb
push
ljmp
loope
jb
xor
mov
hlt
stc
mov
dec
int
pop
jmp
and
mov
out
jecxz
sbb
push
cmovno
insb
inc
jmp
and
les
pop
sub
sbb
clc
add
or
adc
js
repnz
imul
je
repz
adc
je
or
jl
int
pop
das
incl
mov
clc
je
aas
pop
mov
out
dec
outsl
pop
icebp
jno
cld
cld
sbb
push
cwtl
mov
dec
fcoms
sub
mov
insb
cli
imul
mov
jae
adc
mov
push
daa
push
adc
icebp
fwait
cmc
xorl
mov
xchg
sbb
cltd
pop
fs
xchg
enter
hlt
xchg
dec
mov
dec
inc
in
pop
and
psubusw
mov
popf
popf
aad
pop
rolb
or
and
xchg
mov
inc
inc
int
push
xor
out
xchg
js
mov
and
scas
in
aaa
cmc
std
mov
xor
inc
inc
fwait
inc
xchg
cwtl
push
or
lea
adc
jb
cmp
jl
mov
mov
adc
push
lods
out
pop
imul
pushf
shrb
das
dec
and
fdivrs
gs
sbbb
cltd
sarb
push
cmp
rcr
icebp
pop
xchg
ds
aaa
negb
out
jmp
sbb
xchg
mov
cmp
inc
jb
push
dec
popf
pop
insl
or
insb
pop
cmp
add
nopl
jecxz
loope
xor
mov
test
jecxz
jl
iret
std
and
shrl
sub
pushf
dec
fidivl
movsb
gs
and
data16
adc
sub
cmp
jge
mov
stos
ss
mov
pop
adc
hlt
lock
scas
mov
mov
adc
jge
call
out
dec
lods
imul
pop
dec
or
xchg
lea
jg
lcall
out
sarl
mov
outsl
sahf
cmpsb
cmp
mov
imul
shrl
mov
cmp
jl
push
addr16
jo
test
cmp
in
push
jg
add
mov
sahf
lcall
xchg
bound
aad
test
pop
mov
pop
mov
xorb
mov
jecxz
push
push
and
je
ss
icebp
fstpt
mov
fistps
fwait
sub
cld
test
cmp
mov
mov
or
movsl
in
fistpl
mov
push
rclb
orb
and
imulb
inc
or
push
push
fstpl
ljmp
mov
cmp
sub
and
sahf
testl
mov
out
int
les
pop
fsubs
push
test
lret
xchg
add
jno
popa
inc
pop
inc
jecxz
daa
int3
adc
push
out
jbe
dec
xor
pop
pop
out
xlat
mov
cmp
call
inc
xor
cltd
gs
nop
call
leave
daa
lret
and
and
cmp
pop
outsb
mov
sbb
and
jg
add
mov
mov
mov
ss
and
mov
lods
fsubl
js
fisttps
mov
mov
xchg
out
ds
xor
xchg
shlb
mov
or
addr16
jmp
and
mov
xchg
cmpsb
mov
sbb
lds
test
mov
aaa
js
pop
leave
rorl
orb
je
enter
iret
stos
inc
sbb
push
cmpsb
push
arpl
dec
in
and
cmp
push
jp
pusha
dec
mov
fwait
scas
and
hlt
js
stos
mov
cld
pop
add
das
or
pop
aas
adc
cmp
and
sbb
cmp
push
ljmp
jns
inc
ffree
aam
mov
cmp
int
jp
jno
mov
lock
jge
arpl
iret
adc
sbb
and
ds
das
pop
pop
sbb
fucom
push
shlb
lcall
iret
sub
fiaddl
push
sbb
cmp
mov
loopne
gs
icebp
das
ss
test
add
pop
mov
pop
mov
fwait
test
xchg
mov
push
add
fwait
pop
adc
dec
pusha
movsb
mov
adc
push
mov
or
adc
sbb
mov
xor
adc
les
adc
test
cwtl
sub
daa
stc
lret
add
pop
dec
sar
pop
mov
cli
leave
cmp
adc
and
mov
mov
bound
addb
inc
sbb
cld
rorl
roll
cltd
test
add
sub
mov
jno
mov
in
movsb
stc
pushf
outsb
push
xor
in
mov
subb
sub
fwait
std
filds
sbb
jns
cmp
sti
jb
in
pop
imul
into
and
incb
repnz
aam
xchg
pop
scas
jl
xchg
xchg
jmp
push
mov
jae
in
inc
lds
sub
cli
jno
mov
call
dec
and
out
out
push
les
loopne
into
inc
std
and
out
push
inc
sbb
les
jl
scas
and
pusha
cs
and
mov
test
xor
mov
ja
sub
xchg
in
sub
sbb
xchg
dec
sbb
jge
ljmp
leave
pusha
xor
dec
out
test
push
outsb
mov
or
push
stc
cld
and
jge
inc
pop
popf
or
or
xor
les
pop
mov
mov
xor
insl
int3
mull
jge
rolb
insb
movsl
cmp
mov
adc
cwtl
xchg
test
rolb
fstpl
test
sti
inc
mov
inc
push
inc
dec
fstps
push
pop
dec
sti
adc
push
imul
cmc
lcall
scas
ret
jecxz
sbb
fisttps
xor
sub
sbb
push
mov
jl
jle
insl
jp
lahf
and
outsb
ss
lcall
push
jae
pop
lds
pop
sub
aaa
repz
and
adc
sbb
mov
insl
push
in
clc
roll
cli
out
cld
adc
subl
xor
nop
cmp
cmp
int
in
dec
sub
inc
jge
imul
mov
pop
jg
jl
mov
xor
imul
push
adc
and
aas
lahf
scas
push
popa
fwait
dec
in
fwait
xlat
cld
popa
lods
idivl
adc
jo
dec
push
leave
aam
stc
mov
out
fcmovnu
aaa
rcrl
mov
xchg
dec
mov
or
mov
repnz
mov
inc
mov
lret
std
mov
push
add
push
mov
mov
nop
repnz
pop
clc
xchg
dec
sbb
push
sbb
cmp
mov
je
cmc
dec
sbb
rorb
nop
pushf
cmc
or
icebp
mov
mov
pop
jp
pop
fstpt
jnp
lods
and
jmp
shlb
test
xchg
push
dec
fs
jg
jnp
xor
push
js
adc
cld
and
aaa
leave
push
cwtl
push
inc
jbe
in
push
dec
and
add
xchg
fs
mov
push
stc
add
fldenv
jb
psrad
hlt
pusha
ret
push
aam
repnz
ucomiss
inc
addb
nop
cld
pop
cmp
push
arpl
js
lret
pushf
dec
out
jbe
and
mov
push
out
test
xor
mov
scas
outsl
pushf
repz
and
xchg
jns
pop
cwtl
push
inc
test
add
arpl
inc
xor
testl
sub
dec
add
fsubrp
inc
notb
add
cwtl
pop
cld
sbb
test
iret
stos
insb
sbbb
aas
mov
cmpsb
loopne
loope
fidivrs
mov
fs
les
aam
pushf
std
incb
stos
sub
mov
inc
xor
mov
adc
inc
loop
hlt
jns
jbe
loope
stc
test
cmp
pop
lcall
lcall
dec
cmp
dec
cltd
xor
insl
sarl
jg
scas
insl
pop
add
lcall
call
fbld
shl
fisubl
add
imulb
cmp
jo
jae
push
rcrb
sbb
bound
and
xlat
mov
call
inc
test
movsl
cmp
gs
lcall
sbb
std
push
mov
mov
push
cli
ljmp
mov
dec
jbe
cld
lea
icebp
repz
sarb
jns
pop
rcrb
xor
mov
lock
pop
and
jg
mov
jecxz
stos
testl
inc
push
imul
mov
mul
pop
ss
pop
test
cld
and
mov
in
mov
sahf
push
cwtl
lret
cmpsl
ljmp
addr16
xlat
sub
add
jl
sub
sub
adc
nop
jno
mov
pop
mov
lret
iret
jae
movsl
sbb
sbb
and
mov
jno
addr16
add
xchg
or
push
dec
inc
sbb
faddl
clc
adc
dec
rorl
pop
inc
add
push
jge
addl
push
testl
lods
and
in
ja
pop
pushaw
cs
sbb
test
pop
xchg
out
jae
ficomps
jmp
int3
lret
jno
stc
xor
call
sub
and
fistps
jecxz
out
stos
test
in
outsl
enter
pop
insl
rcrb
orl
dec
push
in
paddsw
iret
stos
sti
cwtl
cs
dec
mov
cmp
das
mov
rorb
jbe
loope
xchg
push
sbb
xchg
xor
mov
test
sbb
cwtl
sbb
cwtl
call
mov
dec
stc
jae
int
clc
lock
clc
test
jo
inc
in
test
lods
out
loope
mov
pushf
ret
popf
add
adc
xchg
fnstcw
xchg
mov
push
cmp
and
mov
mov
pop
in
lret
mov
ret
mov
mov
sub
add
aad
mov
inc
lcall
gs
lea
out
das
js
loope
lods
add
arpl
aas
mov
cmp
out
jae
jmp
inc
pop
or
lahf
mov
in
mov
push
push
int3
in
adc
bound
mov
std
nop
or
inc
scas
and
cmpsl
mov
mov
mov
and
pop
in
insl
mov
gs
xor
lods
roll
imul
shlb
mov
jle
arpl
xorb
ljmp
imul
in
add
fldln2
lret
cmp
aad
fidivrl
mov
sub
adc
lret
pop
push
cli
mov
mov
shlb
daa
outsb
mov
sub
sbb
out
lahf
scas
jne
add
clc
jle
hlt
aad
inc
adc
cld
inc
mov
cmp
cltd
test
call
ja
jo
add
xchg
dec
push
pop
add
in
shrb
daa
push
or
xchg
adc
test
add
mov
rorl
sub
xor
and
push
movsb
xchg
add
dec
movsl
add
inc
ljmp
int3
dec
ja
sub
outsb
sbb
in
sub
lahf
data16
adcb
subb
add
or
dec
gs
push
out
cld
shlb
mov
push
sub
cwtl
jl
cmp
shlb
cli
int
shll
nop
test
jl
inc
jmp
sub
call
lea
push
jmp
gs
insl
scas
mov
dec
aad
mov
daa
xor
aas
push
xorb
neg
test
loope
in
xchg
cld
adc
push
movb
mov
fstl
test
xor
add
les
fwait
rcl
sahf
outsl
xor
lea
lret
dec
iret
adc
push
imul
xchg
adc
lods
dec
call
loop
cmp
fsts
popa
insl
data16
mov
repz
dec
in
mov
pop
and
push
in
xor
jno
push
stos
std
shll
or
xchg
cmp
jge
sar
jp
in
adc
mov
fdivl
sub
and
mov
pop
out
adc
mov
dec
mov
ja
shlb
pop
xor
xchg
dec
out
mov
jne
stos
popf
mov
sub
sbb
int3
out
push
inc
dec
fsts
mov
or
add
ret
jmp
shrl
nop
fsubrp
loopne
or
xor
test
cmp
flds
ret
push
mov
pop
adc
xor
sbb
pop
cmp
mov
jle
adc
mov
cwtl
fmuls
cmc
xchg
add
pop
or
gs
testb
sarl
ljmp
jl
sarl
fwait
jl
cmp
cmp
push
out
in
stc
sub
mov
adc
imul
popa
in
cmpl
scas
sbb
aas
movsb
sub
or
mov
es
pop
xchg
mov
dec
push
xchg
and
add
ret
cld
iret
xchg
ljmp
xor
jmp
jecxz
sbb
dec
mov
loope
push
movb
call
inc
sub
sahf
and
das
push
jbe
insb
fs
pop
cmpb
add
lds
iret
sti
mov
mov
add
test
addl
ret
mov
cli
pop
and
std
xor
stos
cmpb
pop
mov
and
cltd
mov
mov
cmp
xchg
daa
mov
dec
out
imul
gs
loope
sub
cwtl
outsb
cmc
jnp
cmp
dec
das
loopne
aad
filds
test
cltd
push
and
sub
iret
shl
jg
fbstp
mov
idiv
movsb
and
xor
pop
or
scas
cmp
cmp
xchg
add
les
sbb
adc
xchg
cmp
bound
pop
and
mov
pop
mov
arpl
adc
mov
in
insb
insb
insb
or
outsl
sbb
and
or
pop
inc
xchg
push
dec
and
gs
and
fdivl
test
sarb
mov
push
mov
jb
xchg
dec
dec
pop
add
movsb
adc
stos
jne
or
fcoms
mov
sub
lods
or
es
inc
push
stos
or
inc
sub
push
das
cmp
xchg
jl
xchg
sbbl
sbb
mov
test
lds
xchg
xor
in
test
cmp
ret
mov
jge
in
adc
aaa
lds
push
lahf
shll
aad
adc
xchg
int3
or
mov
jbe
hlt
js
adc
rcrl
scas
pop
arpl
or
into
xchg
jnp
push
test
sahf
mov
out
push
sub
icebp
lcall
sti
xchg
out
push
push
xor
fwait
adc
push
pop
shr
cmp
rorl
jp
inc
insl
jnp
stc
out
add
push
push
outsl
nop
fimuls
ret
stos
push
jl
jo
pop
jno
xor
in
mov
arpl
daa
lea
dec
adc
and
fincstp
ja
cld
mov
add
lcall
mov
cmc
aaa
rolb
inc
mov
xchg
aam
add
arpl
xor
and
push
xor
mov
mov
movsb
and
test
or
inc
test
sub
cmpsl
das
movsl
push
enter
popa
lods
movl
dec
iret
pushf
sub
out
mov
mov
jnp
stos
aaa
dec
sub
into
mov
mov
data16
sub
jmp
adc
or
call
movsb
mov
mov
xchg
rcrb
xchg
mov
sub
dec
bound
pop
popf
sub
lods
lcall
or
repnz
or
faddp
add
push
pop
adc
das
je
jns
scas
and
add
mov
pop
lret
mov
hlt
mov
jo
stos
pop
mov
add
jge
frstor
mov
xor
aaa
dec
dec
sub
or
jmp
in
sahf
dec
or
aas
xchg
xor
mov
shlb
add
pop
adc
arpl
popa
loop
fwait
pop
lock
xor
cs
mov
dec
cli
fs
or
and
xchg
std
add
pushl
lods
adc
aad
scas
pop
lahf
mov
or
mov
jns
sbb
cli
add
pusha
stc
outsl
adc
and
rol
and
dec
mov
sub
jne
jmp
mov
repnz
xchg
insl
push
sbb
aam
lret
test
push
jp
jb
xchg
xchg
or
push
push
insb
out
pop
mov
jmp
mov
popa
adc
cld
pop
push
cmpl
int3
and
sti
xchg
jne
dec
test
data16
dec
shll
mov
add
out
push
xchg
test
adc
dec
mov
ljmp
inc
xor
in
flds
sar
cmp
out
cld
js
repz
test
adc
cs
stos
ljmp
and
cwtl
cmp
fcomps
mov
pop
je
jg
popa
loope
ja
out
nop
outsl
mov
pop
adc
ds
shl
pop
mov
jns
je
sbb
fisubrl
stos
aam
movsl
push
cmp
sub
popf
sub
mov
hlt
cmp
cld
jle
push
push
cmp
stos
jecxz
add
dec
std
in
pop
mov
out
push
mov
xor
ss
bound
mov
mov
push
lldt
testl
stos
cs
pop
sbb
pop
decb
sub
push
and
std
inc
add
cmp
pop
inc
xor
push
xchg
scas
mov
lods
loop
xchg
pushf
shl
ror
inc
in
mov
fisubl
sarl
mov
dec
xor
inc
daa
add
in
push
jle
aaa
outsb
cmpb
xchg
inc
scas
push
adc
dec
push
dec
mov
push
or
sbb
out
inc
ds
addr16
les
add
adc
pusha
shlb
cmc
sbb
add
insb
adc
inc
dec
mov
sbb
negl
mov
fidivl
loopne
sbb
test
sbb
and
xor
ret
adcb
mov
js
leave
lods
loope
adc
xchg
gs
sbb
dec
imulb
push
std
hlt
mov
xchg
rcl
pop
movsb
pop
jg
mov
mov
test
jmp
or
mov
mov
addr16
sahf
ljmp
dec
ret
in
adc
mov
cmp
xchg
mov
movntq
mov
inc
push
jb
lock
push
pop
dec
sbb
mov
cmpsb
pop
pushf
jp
inc
dec
inc
adc
fstpl
into
sbb
mov
pop
sbb
xor
aaa
lods
jb
fdivp
and
je
jp
mov
ja
pop
cld
inc
xchg
sbb
push
xchg
ficompl
xchg
loopne
ret
cld
out
mov
pop
cmc
cmp
push
out
leave
jbe
mov
test
sub
out
mov
xchg
repz
xchg
sbb
mov
pop
dec
js
jge
sub
loop
movsl
dec
pop
push
scas
bnd
shl
lahf
xchg
and
test
mov
cmp
mov
mov
push
cmp
mov
and
bound
xchg
mov
imul
js
jno
subl
pop
cmpsb
sub
fwait
in
mov
ja
imul
mov
pop
xor
ja
call
pop
dec
jne
cwtl
shrb
push
push
mov
sbb
dec
inc
sbb
dec
sbb
fs
gs
imul
push
mov
aam
cmp
pop
orb
bound
test
je
lahf
pop
stos
sti
lds
push
std
cmp
or
scas
jo
fstl
jmp
aam
mov
cs
and
sbb
xchg
push
loope
jno
adc
xchg
rorl
ljmp
jge
mull
cmp
ljmp
mov
shl
mov
daa
push
dec
outsl
dec
mov
sbb
mov
bound
das
mov
ret
pop
xor
repnz
jne
cmp
ds
push
mov
mov
lods
adc
xchg
lea
jmp
jmp
fs
ficoml
popf
and
jl
repz
cmpsl
adc
out
dec
add
ja
inc
mov
adc
or
adc
or
test
je
xchg
iret
fdiv
add
in
shll
xchg
jnp
inc
mov
jmp
or
dec
pop
arpl
loopne
mov
mov
aam
lock
xor
inc
cmpsl
call
jnp
in
add
inc
add
inc
pusha
loop
test
testl
sbbl
dec
xor
in
sahf
jmp
xchg
push
in
jmp
out
fists
testb
mov
sub
fs
xchg
lret
in
inc
pop
jbe
scas
cmc
icebp
out
rcrb
sbb
out
dec
je
call
sub
or
loopne
cltd
mov
jb
jl
lds
add
popf
push
add
push
pop
pop
jno
insl
xchg
push
xchg
push
scas
jne
pop
jecxz
jg
ja
mov
std
cmp
pop
sub
dec
outsl
cwtl
mov
jecxz
insb
leave
lods
dec
push
sub
dec
pop
loopne
push
rcr
stos
add
aas
addl
pop
int3
xchg
fistl
mov
push
push
pop
test
cmp
test
jmp
add
imul
insb
adc
iret
scas
lods
xchg
fists
inc
xchg
push
pop
test
cs
cwtl
inc
ss
jmp
loope
cltd
popa
inc
xlat
fwait
or
dec
test
pop
add
in
out
rol
mov
call
pop
jb
sti
jecxz
js
cmp
js
sbb
mov
push
xchg
dec
stos
in
outsb
pop
or
cmp
fldenv
lea
in
ja
inc
mov
mov
cmp
mov
sbb
cltd
shrb
jbe
sub
and
mov
push
out
and
sbb
pop
mov
dec
jp
sti
lret
push
pop
and
das
lods
bswap
dec
push
movsb
mov
cli
jge
mov
mov
jnp
and
and
cmp
mov
jp
mov
jmp
fstpt
shrl
pop
ljmp
out
addr16
or
xchg
push
test
pop
pop
mov
sub
pusha
loop
mov
aaa
repnz
pusha
jo
xchg
dec
pop
jecxz
int
add
es
jbe
ja
dec
xchg
and
iret
ret
repz
inc
clc
test
jecxz
sub
loopne
pop
jl
sub
ret
data16
imul
mov
cmp
shl
mov
pop
push
sbb
fstps
fistpll
cmc
aad
push
fcomi
sub
add
pusha
fs
ja
setbe
faddl
or
push
in
testb
push
or
mov
push
pusha
shrl
mov
jo
mov
les
and
cmp
cld
add
popa
push
out
and
inc
movsl
jl
dec
out
inc
push
xor
push
ret
fcmovu
imul
lods
mov
xchg
ljmp
xor
sbb
pop
fisttpll
push
xor
jge
je
jne
mov
inc
cmp
xor
adc
sbb
out
out
inc
and
xchg
fdivrs
adc
fcmovnu
stc
addr16
jp
fstsw
loop
push
out
mov
jae
xor
movsb
push
add
inc
loop
gs
test
mov
adc
or
push
fstpt
and
xor
mov
call
mov
test
fcomp
insb
mov
addr16
fnstsw
stc
mov
in
dec
leave
ljmp
add
xchg
fcmovnb
ja
outsl
arpl
scas
das
cld
add
out
adc
mov
cmpl
cltd
jno
push
in
cwtl
xchg
push
scas
mov
xorl
rcll
lods
mov
das
jne
jg
popa
into
dec
dec
test
mov
fcomip
je
loope
lahf
mov
mov
pop
mov
mov
pop
scas
sub
push
push
out
sub
sub
xchg
jge
sub
insb
and
or
fsubrl
mov
clc
insl
pop
lret
dec
mov
test
lods
sahf
and
lret
into
jne
inc
and
rcl
xchg
fiadds
or
mov
imul
mov
fldl
ret
ret
sub
imul
push
sbb
dec
fimuls
jns
ret
cmpb
arpl
jmp
push
jo
jg
or
sbb
push
sbb
mov
pop
addl
fwait
nop
andb
or
gs
mov
je
push
mov
lds
push
mov
inc
fwait
sub
pop
push
scas
mov
loopne
cmpb
mov
loope
and
push
out
push
mov
clc
cltd
adc
int
mov
add
imul
or
movsb
xchg
or
and
mov
std
cli
test
nop
jecxz
mov
inc
mov
es
sti
js
add
jae
mov
ds
lret
xor
sub
jl
pop
out
fucomi
test
mov
icebp
icebp
test
jne
dec
xchg
jae
push
scas
add
stos
cmp
and
mov
and
idivl
xchg
hlt
add
add
xchg
mov
aaa
mov
aam
pop
push
mov
hlt
xor
clc
jl
dec
pop
fisttps
repnz
mov
cmp
cmp
sub
pop
sub
mov
xchg
out
mov
fwait
test
xchg
ficompl
nop
pop
dec
test
rolb
cmpsl
push
mov
lea
pop
inc
notb
mov
cmp
push
testb
add
xchg
xor
jb
sarb
sub
fisubrl
inc
push
xchg
imul
sbb
inc
dec
jo
icebp
push
faddp
enter
xor
nop
shlb
lcall
mov
mov
sahf
cwtl
fwait
push
sbb
xchg
mov
fildll
test
fcomp
or
inc
pop
nop
shll
mov
jbe
push
test
adcb
mov
mov
loope
aad
inc
jb
sti
cmc
adc
sbb
shll
dec
lds
cmp
mov
aas
adc
dec
or
ja
repz
push
pop
scas
enter
imul
mov
sub
lods
popf
dec
xchg
movq
xchg
in
xor
and
adc
dec
pop
mov
xchg
cmp
push
cmp
pop
mov
mov
fs
sahf
sub
iret
xlat
fbld
cmpsl
movsl
lods
mov
sbb
jp
push
repz
inc
xchg
in
stos
ret
test
in
cmp
enter
mov
jns
pop
mov
dec
clc
xlat
pop
popa
add
inc
mov
lea
sti
arpl
fs
sti
faddl
dec
dec
ljmp
xlat
imul
push
outsl
xchg
fcomps
mov
sub
cmp
xor
sbb
mov
sti
gs
aam
shll
jbe
jle
addr16
sbb
scas
fdivrs
mov
fcomp
jae
push
inc
xchg
sbb
dec
adc
add
movsb
xchg
addr16
jg
rcr
mov
pushf
xchg
sub
xor
pop
in
lea
mov
mov
mov
jmp
pop
sub
inc
sbb
mov
xchg
sbb
jl
mov
xchg
and
mov
mov
nop
or
ja
cmp
jp
add
or
sub
mov
leave
outsb
int3
ficompl
mov
sub
fs
push
stos
and
push
mov
sbbl
add
dec
out
jl
lock
jg
frstor
sub
xor
ret
add
xor
and
mov
push
xor
sub
jle
and
aam
icebp
pusha
dec
inc
in
cmpl
jle
push
lods
sbb
mov
out
add
mov
mov
mov
in
adc
mov
pop
imul
nop
inc
push
sti
jne
mov
lods
xchg
into
xor
lcall
not
xlat
rol
mov
test
and
push
ret
sbb
sbb
in
fwait
aad
mov
dec
jne
xchg
sahf
addr16
or
scas
nop
test
iret
les
mov
pop
shl
mull
or
push
shrb
scas
push
or
push
and
pop
ret
addr16
mov
imul
lock
fisubl
ja
out
outsb
sbb
mov
movl
inc
jp
les
xchg
sub
sbbb
rolb
pusha
pop
test
shl
mov
lret
fwait
movsl
pop
xchg
or
adc
sbb
mov
add
push
loopne
jecxz
iret
lcall
pop
adc
add
std
dec
jae
lea
mov
aad
mov
addr16
mov
mov
mov
xlat
mov
pop
push
inc
jo
fstpl
pop
jbe
mov
sbb
xchg
mov
adcb
xchg
in
out
push
xor
push
insl
stos
cmp
or
xor
inc
pop
xlat
fwait
push
jbe
and
sbb
fsubl
testb
jae
xchg
sbb
mov
sub
test
pop
mov
push
inc
jecxz
mov
movl
iret
and
push
mov
xchg
push
cmp
loopne
gs
jp
shl
dec
out
jae
mov
jp
jns
inc
lock
dec
xor
ja
adc
cs
iret
jle
sub
movd
rorl
cli
add
pushf
inc
enter
inc
stos
and
scas
and
jnp
cmp
insl
int3
test
or
outsb
clc
shrl
lret
add
dec
xchg
mov
mov
in
cmpsl
xor
lret
leave
popf
pop
mov
je
lds
push
repz
push
nop
and
sbb
sbb
dec
mov
xchg
scas
push
ja
pop
dec
dec
inc
fstp
mov
xchg
dec
repnz
mov
repz
or
ret
loop
popa
xchg
mov
xor
cmp
push
stos
pop
adc
adc
cli
and
ljmp
pop
push
mov
jl
mov
dec
gs
cmc
and
cwtl
dec
ljmp
mov
lods
notl
mov
testl
mov
pop
lock
imul
sub
das
inc
sbb
je
mov
xchg
or
cmp
enter
and
mov
testl
test
ds
mov
cwtl
imul
insl
mov
imul
loopne
and
inc
cmc
jns
mov
js
aam
imul
addr16
rorb
or
sbb
notl
js
push
outsl
cmc
ds
push
stc
cwtl
cmp
fdivrs
and
xorb
push
or
jns
test
jl
inc
int3
aam
sub
rcll
std
and
pop
pop
inc
add
xchg
add
je
shlb
insl
ljmp
mov
out
lahf
or
lods
mov
xor
inc
lds
ljmp
loope
mov
lods
mull
mov
cli
push
xchg
pop
enter
cmp
mov
shlb
pusha
out
fstps
or
hlt
cmpsb
jp
dec
jg
cmp
xchg
sarl
pop
pop
or
out
fisttpll
dec
dec
out
mov
xchg
adc
sub
loopne
fldz
nop
pop
les
pop
data16
shrl
inc
jmp
aaa
fistps
xor
test
repz
mov
arpl
lcall
push
bound
in
mov
inc
adc
inc
aaa
mov
fnstenv
scas
testl
std
sahf
sbb
sbb
push
mov
daa
aam
mov
dec
sbb
jae
aas
mov
icebp
imul
cmp
flds
or
pop
cmp
mov
mov
sub
push
lock
test
in
or
sti
jle
aaa
jno
mov
xchg
loopne
sbbl
mov
ret
cmp
adc
sarb
mov
add
out
sub
and
repz
mov
sub
sbb
add
outsb
aaa
adc
mov
loopw
jge
mov
rcll
sbb
mov
divl
sub
popa
mov
popa
dec
fsub
mov
in
sbb
adc
mov
cmp
inc
adc
leave
fwait
subb
fidivrs
pop
push
mov
cmp
xor
test
push
inc
stos
xor
xchg
mov
das
in
adc
test
xor
xor
cmp
xor
sahf
sub
std
inc
mov
mov
fucom
out
sbb
pop
push
lcall
or
jl
mov
cmpsb
sahf
inc
inc
call
inc
add
jmp
gs
inc
out
test
call
in
push
fsubp
rolb
rcrb
in
adc
lahf
out
or
aaa
adc
adc
mov
jp
loopne
xchg
mov
jl
shrl
xor
sub
cli
pop
test
mov
inc
or
sahf
xchg
dec
movsb
into
fs
mov
xchg
cltd
les
xchg
outsb
jle
adc
mov
sub
ss
xor
adc
fisttpll
sub
mov
dec
hlt
bound
and
and
int
nop
and
inc
and
in
pop
dec
push
das
or
fsub
mov
insl
xlat
shll
or
pop
and
jnp
xor
dec
frstor
jb
stc
mov
imul
fildl
out
fldt
jno
shll
or
inc
call
mov
stos
inc
jae
ret
mov
sub
neg
cmp
lods
jle
jmp
repnz
xor
push
repz
lods
cld
mov
jb
in
std
xor
fisttpll
cmp
gs
or
mov
in
xchg
xchg
fmuls
xor
or
lods
sar
push
stos
cwtl
sti
aam
push
repnz
cld
sbbl
lods
imul
ja
mov
push
sarb
fidivrs
movsb
jmp
mov
and
mov
mov
cwtl
xchg
xchg
cmpsl
call
mov
pop
push
ja
loope
mov
ret
dec
pop
fists
and
fscale
lods
scas
cmp
inc
lock
xchg
xchg
adc
add
push
in
sub
jae
dec
in
lds
testb
lret
jbe
cwtl
cwtl
sbb
jbe
xchg
sbb
add
aaa
adc
pop
icebp
mov
cld
cmpsb
inc
sub
aam
test
jae
xchg
push
xchg
mov
and
lret
inc
and
mov
inc
sbb
clc
jmp
jbe,pt
shl
sub
mov
data16
mov
xor
dec
outsl
push
push
pop
cli
fildl
call
jne
mov
pop
sbb
jl
adc
int3
push
addr16
scas
movsb
outsb
sete
addr16
imul
rcr
cmc
cwtl
xor
mov
push
into
sub
pop
loope
stos
cmpsl
mov
inc
pushf
jns
arpl
add
lahf
jo
cmp
inc
mov
stos
andl
adc
inc
mov
lret
push
loopne
fs
into
pop
mov
xchg
lret
adc
lcall
ficoml
jle
or
xchg
and
mov
inc
dec
cmpb
enter
cmp
mov
stc
xor
adc
imul
call
sub
sarb
pop
xor
add
mov
aas
mov
add
faddl
hlt
adc
into
fwait
jo
add
in
or
in
lods
incb
inc
push
dec
dec
inc
pop
push
rcl
ret
jo
adc
testb
es
xchg
in
cmp
mov
je
subb
addb
test
mov
push
repnz
and
jge
add
xor
loopne
cmp
adc
push
pushf
adc
jl
je
dec
scas
std
seta
and
iret
outsb
je
and
cmpsl
daa
xchg
xchg
jo
jns
enter
lods
pop
cmp
dec
dec
cmpsl
cmp
cmp
push
sti
lcall
icebp
xor
stos
or
dec
dec
stos
inc
add
sbb
xor
les
inc
pop
aaa
jo
test
fistpll
jmp
adc
pushl
imul
xor
or
mov
sub
adc
mov
or
cmp
orb
xchg
call
pop
rcl
jbe
mov
xchg
push
cmpsl
mov
sbb
mov
and
clc
jo
jb
leave
int3
les
ljmp
mov
xchg
sub
pop
leave
mov
in
jbe
mov
insl
mov
jae
stc
mov
jno
cltd
loopne
xor
das
subl
fwait
push
mov
xchg
addr16
push
add
mov
popf
xor
mov
dec
dec
add
movsl
stos
pop
jbe
sub
bound
pop
fldcw
sbb
aaa
fimuls
cmp
dec
dec
fcmovbe
sub
adc
test
repz
ljmp
call
push
sbb
cmp
movsl
push
cmp
cmpsl
mov
add
pop
adc
mov
jno
insb
aad
out
stos
mov
mov
pop
mov
jnp
dec
out
fisubrl
gs
and
sbb
xchg
mov
incb
adc
xchg
adc
cli
cmp
jns
pop
ds
mov
mov
lret
pop
in
testl
adc
std
inc
and
dec
lods
es
pusha
cmp
pop
xor
sub
daa
mov
and
flds
xchg
mov
in
movsb
mov
adc
stc
mov
scas
insb
mov
add
stos
movsl
sbb
rorb
into
add
hlt
sbb
mov
push
xchg
insl
jg
stos
mov
and
fwait
repz
jnp
imul
lret
ds
add
jne
jmp
adc
pop
jp
sbb
jnp
ljmp
inc
rorl
out
int
gs
inc
into
adc
arpl
add
jmp
ljmp
scas
bound
mov
in
cmp
mov
lock
aas
popa
and
mov
test
and
hlt
adc
ret
scas
mov
in
jne
daa
ror
xor
add
jb
fdivl
xor
add
std
loop
sahf
int3
shrb
jp
sahf
add
adc
test
into
push
jl
xor
or
pop
push
push
fisttpll
js
pop
lock
mov
adcb
test
pop
xchg
rorl
lds
out
mov
add
lods
mov
inc
ret
mov
push
push
fidivl
ds
mov
cmpsb
mov
call
add
data16
into
enter
cmp
inc
jne
aad
mov
mov
mov
in
jmp
mov
outsl
sub
aaa
jne
aam
in
pop
and
fcmovne
fsubrl
lds
mov
or
leave
adc
add
jecxz
das
jmp
iret
scas
cmpsb
xchg
jmp
ror
mov
xchg
pop
sbb
inc
xchg
xorb
in
dec
jno
sub
push
jbe
std
jae
mov
adc
fstps
push
ljmp
or
pop
pop
lret
mov
cli
cltd
loopne
clc
mov
loope
sarb
sub
sbb
shl
inc
xor
fwait
jnp
movsl
adc
out
ja
loopne
xlat
imul
pushf
push
mov
std
push
xchg
xchg
ljmp
dec
xlat
jne
push
data16
lock
dec
cmp
stos
mov
sub
sub
les
add
xchg
inc
adc
imul
sbb
arpl
out
mov
mulps
sbb
subl
dec
jae
push
inc
fidivl
inc
jb
mov
mov
xchg
pop
jno
ret
dec
out
mov
aam
and
xor
rcr
mov
fmull
jle
or
add
aas
lock
scas
add
jnp
sahf
leave
lcall
mov
imul
cltd
pop
mov
lea
or
sub
xchg
dec
dec
daa
adc
fsubs
cmp
stos
adc
jl,pn
addr16
mov
fdivs
lea
add
pop
push
jbe
sbb
push
xchg
inc
int3
xor
inc
adc
cmpsl
leave
movsb
push
and
aas
sub
ss
pop
sbb
into
dec
sahf
sbb
mov
dec
movsb
frstor
in
push
call
fmuls
cmp
mov
mov
pop
test
jle
jae
cmpl
lret
enter
adc
mov
xchg
adc
mov
cmpb
imul
xchg
sub
sarl
subl
dec
in
adc
push
sbb
addr16
fadd
repz
xchg
pop
lret
inc
hlt
sbb
ficoml
inc
lret
dec
push
loopne
out
out
xchg
jp
cmp
push
cmp
sbb
pop
data16
stos
scas
leave
mov
cmc
shr
stos
outsl
push
or
xchg
andb
out
mov
sbb
pop
andl
movsb
sbb
mov
pusha
push
jb
push
xchg
orl
imul
fcoms
or
sub
stos
in
data16
imul
into
xchg
jae
movsb
add
mov
jno
out
pusha
imull
pushf
pop
addb
fucom
pushl
inc
xor
cmpl
mov
cltd
mov
jl
sbb
dec
fimuls
mov
ret
sbb
jge
xlat
lret
inc
test
xor
in
xchg
pop
adc
ficompl
lret
negb
cmpsb
push
mov
push
xchg
inc
lret
xor
popa
fstpl
sbb
pop
fs
add
rorl
xor
je
pop
pop
push
push
lock
push
mov
mov
xor
and
pop
cld
inc
or
jbe
insl
lods
cmc
cs
daa
mov
in
add
lds
js
test
cmp
lods
xor
mov
and
rcll
jg
stc
mov
je
mov
or
out
mov
aad
xchg
pop
jmp
fcmovu
sub
add
inc
sbb
pop
jmp
xor
popa
pushf
xchg
cmp
xchg
xchg
add
rcr
hlt
imul
xchg
xlat
pop
push
push
mov
push
cmp
mov
out
enter
scas
imul
or
add
js
ret
fs
adc
dec
sub
push
mov
xor
ror
cvtpi2ps
jg
rol
xor
xchg
sbb
sbb
adc
add
mov
cs
rcrb
adc
movsl
pop
xchg
popf
mov
xor
xchg
mov
pop
loop
pop
in
ss
mov
sbb
mov
loope
jmp
lret
and
inc
adc
call
mov
and
pop
cmp
dec
or
cmpsl
xor
fnstsw
lods
loopne
into
sub
dec
inc
cs
xor
jge
test
pop
nop
imul
mov
add
ss
cmp
pusha
imul
jmp
push
imul
mov
mov
mov
pusha
aam
in
cmp
punpckhwd
xchg
dec
xchg
and
mov
add
mov
xchg
pop
push
fistpll
rolb
push
jae
ss
leave
xchg
shll
add
loope
stos
or
xlat
ja
fnstenv
xchg
mov
mov
clc
push
or
in
aaa
inc
jo
movsl
das
or
and
or
inc
dec
sbb
jo
out
or
stc
cmp
int3
je
sbb
sbb
add
ja
ja
xchg
jp
ds
sbb
mov
jno
in
jl
and
scas
stos
cmp
jnp
xor
mov
sbb
into
pop
and
dec
xor
testl
inc
gs
sub
xor
push
adc
adc
mov
test
das
sub
and
jae
es
push
fs
in
push
dec
iret
add
jnp
les
shll
push
fsubrl
or
mov
pop
cs
popa
xchg
pop
inc
xor
dec
sbb
fisubrl
pop
cmpsl
jle
pop
pop
pusha
add
jns
stos
jnp
sbb
icebp
in
and
stos
dec
jo
and
xchg
adc
mov
mov
dec
lods
imul
dec
fildl
nop
pop
mov
and
cmp
aam
test
sub
sahf
sub
push
and
into
push
imul
xorb
or
imul
dec
jnp
pop
outsb
scas
mov
mov
nop
hlt
cmc
push
inc
popf
loop
cmp
push
pop
pop
jne
clc
out
mov
jnp
loop
xchg
out
aas
aam
ret
push
jbe
mov
test
sub
fsubrp
cwtl
call
mull
push
inc
xlat
jp
pop
cwtl
testb
add
insb
dec
adc
xchg
into
jne
adc
dec
dec
cmp
test
jge
inc
add
pop
aaa
aaa
enter
jno
cmp
aad
xor
pop
adc
push
scas
addr16
js
aas
int
push
jmp
add
add
or
xchg
adc
clc
xchg
inc
loopne
fistps
test
fildll
pop
loope
adc
ljmp
psrlw
sti
push
arpl
loop
in
stc
leave
mov
push
and
leave
outsb
xor
gs
mov
das
sbb
xchg
leave
xlat
test
mov
stos
jnp
inc
sub
rclb
fdivl
movhps
push
jns
aas
cmpl
mov
mov
fmull
mov
popa
jae
cwtl
repz
inc
add
sub
out
aas
mov
push
sarl
and
adc
mov
add
outsb
stos
lret
std
add
pop
and
testl
jge
mov
inc
cmp
pop
add
pop
pop
fcomip
jne
sub
mov
repnz
mov
mov
addr16
mov
or
jne
ss
mov
in
daa
addr16
popa
jge
dec
xchg
stos
jl
and
push
pop
repz
sbb
in
test
cltd
adc
dec
push
push
dec
aam
cmpsb
add
mov
pop
mov
into
push
cli
int3
sub
mov
ja
inc
push
or
mov
enter
lock
imul
inc
mov
dec
xor
test
std
pop
inc
je
mov
cmc
inc
pop
sub
jne
adcb
sub
neg
pop
sub
mov
cli
mov
fadds
or
test
sub
ss
fcomp
pop
xchg
dec
movsb
or
imul
arpl
mov
pop
cmpsl
insb
pop
or
repnz
mov
fmuls
je
mov
pop
xchg
rorl
loope
xlat
jno
fisttpl
stc
mov
pop
inc
push
xor
in
repz
stc
mov
cld
jae
cmp
mov
inc
mov
pop
lods
test
xor
hlt
push
scas
adc
mov
cmp
cmp
or
sbb
push
rcrb
xchg
dec
roll
les
cmp
sahf
ret
ror
lret
icebp
mov
mov
sbb
pop
imul
dec
sub
das
lea
or
ret
mov
mov
stos
jns
push
mov
mov
nop
adc
jbe
bound
loop
push
std
ja
and
es
scas
pop
sub
out
in
xor
std
cmpsl
pop
mov
lret
fdivs
xchg
adc
mull
outsl
stc
jbe
dec
add
imul
jle
mov
mov
mov
push
adcl
adc
mov
lods
popf
int3
lods
or
jb
daa
ret
sti
insb
popf
mov
adc
andl
lods
xchg
sti
sub
lcall
stc
xchg
adc
or
mov
in
cmp
jo
loope
jns
ja
xor
xchg
inc
jecxz
sbb
cmp
cmpsl
popf
cli
in
sub
mov
and
push
jae
test
pop
sbb
out
stc
jno
jb
movsb
sbb
out
fstps
jge
add
mov
imul
sbb
out
call
sub
mov
xchg
imul
rorb
cmpsb
adc
dec
inc
mov
ret
inc
rorb
add
cmp
mov
xchg
scas
or
fisubl
test
dec
movsb
inc
sbb
or
mov
mov
adc
xor
addl
in
push
xchg
mov
incl
rcrl
mov
out
pop
lea
into
mov
mov
mov
push
mov
xchg
cli
lret
sbb
out
rcrb
dec
jb
sub
push
mov
adc
imul
mov
adc
dec
pusha
sbb
and
sbb
xor
mov
push
sbb
sbb
push
imul
popf
test
mov
les
pop
cmpsl
stos
out
cmp
mov
std
xchg
mov
or
and
dec
xchg
sub
movd
pusha
mov
pop
push
sbb
xchg
mov
rcll
jae
push
rclb
test
shrl
int
xor
shr
xor
or
sbb
and
cmpsl
xor
imul
adc
fs
inc
jne
pop
inc
bound
cmpsb
add
and
adc
ficomps
lcall
insl
push
sbb
jns
jb
jecxz
pop
in
sbb
xchg
repz
out
adc
imul
stos
and
sub
sub
adc
loopne
sub
lahf
pop
xlat
pusha
pop
insb
pop
push
ficompl
pop
into
pop
movsb
push
pop
ret
xchg
pop
add
add
xchg
addr16
mov
or
mov
mov
mov
addb
fisttpl
test
in
dec
andl
mov
data16
mov
loopne
adc
xchg
push
roll
aaa
push
call
sbb
xchg
lret
fwait
cltd
loope
loope
add
sub
ljmp
in
cli
cmp
icebp
fisttps
jmp
fcomps
movsb
xchg
pop
push
pop
divl
das
outsb
xor
cltd
ss
in
dec
pop
push
add
mov
pop
mov
lret
xchg
push
movsb
push
flds
add
int3
lods
repnz
les
push
pop
push
test
mov
in
fldt
aas
pop
jmp
ljmp
mov
or
add
outsl
adc
arpl
mov
js
xor
cwtl
cmp
rorb
lahf
or
push
dec
out
jmp
and
sbb
das
inc
sub
mov
movb
xchg
push
icebp
ljmp
icebp
daa
mov
aad
sub
sti
hlt
xor
mov
repnz
adc
repnz
bound
jnp
mov
in
sub
int
cmp
adc
iret
jecxz
scas
jmp
push
push
jb
push
rcrb
repz
push
jb
into
in
subb
sub
addr16
xlat
lds
insl
loope
mov
jmp
neg
add
cmp
xchg
ret
inc
ss
push
arpl
and
and
aam
push
sbb
mov
mov
js
or
ljmp
es
fs
push
xchg
push
in
fidivs
aam
js
or
dec
mov
adc
sbb
xorl
insb
jo
xchg
out
mov
push
dec
mov
inc
pop
dec
jns
mov
jge
repz
mov
pop
xchg
push
xorl
xor
adc
repnz
mov
iret
out
in
cld
lock
popf
lahf
push
insb
or
and
push
dec
sbb
popa
sub
adc
xor
push
jbe
insb
mov
cld
mov
ss
mov
xchg
aaa
addr16
cmp
mov
and
mov
lret
jb
and
mov
inc
inc
mov
out
mov
mov
loopne
add
repnz
sub
mov
adc
sub
sbb
fwait
inc
mov
cmp
leave
xchg
lcall
fldl
push
pushf
cld
jle
sub
stc
xor
xchg
mov
xchg
test
push
and
dec
push
mov
mov
jae
push
push
and
xchg
aad
popa
dec
int3
jmp
jecxz
lret
pop
cmp
mov
dec
rcr
cmpb
xor
xchg
dec
stc
mov
orb
inc
push
xor
testl
out
out
jo
mov
push
cmp
push
cwtl
outsl
push
push
push
push
ficoml
mov
loopne
xchg
push
cli
and
lcall
jae
xchg
sahf
adc
test
mov
arpl
pop
xor
leave
pushf
sti
or
push
int3
push
sarl
mov
clc
daa
inc
xor
jmp
adc
xchg
mov
and
xor
pusha
push
xor
and
loope
into
mov
xor
scas
jecxz
subl
jne
aad
sbb
mov
scas
pop
adc
mov
mov
cmpsl
out
push
pusha
cmp
jne
mov
outsl
ja
sti
fs
sub
and
pop
es
inc
repz
push
cmp
outsb
mov
repz
cmp
jmp
in
mov
rcll
dec
or
rorb
xchg
cmp
cs
adc
mov
adc
aam
xchg
shll
xchg
bound
mov
or
lea
or
sahf
jmp
xchg
sbb
or
cld
push
out
xchg
jns
shlb
stos
test
jge
mov
xor
mov
mov
fisttpl
data16
loopne
cmp
cmp
cmp
std
jns
scas
jo
int3
pop
cmpsb
iret
push
insl
fwait
das
xlat
test
or
mov
jl
imul
aad
sar
icebp
pop
xchg
fisttpll
mov
mov
pop
sub
mov
pop
int
mov
xor
ficomps
incl
cmp
loop
popf
push
xchg
mov
fmuls
cli
pusha
cmc
and
pop
mov
add
scas
mov
aam
lret
pop
daa
je
sub
ret
repz
cmp
mov
test
loop
push
jp
test
pusha
call
aaa
scas
movsl
adc
jmp
pop
xlat
in
enter
ficoml
outsb
out
lds
shr
es
stc
inc
sub
pop
es
adc
imul
cmp
mov
lret
lahf
cltd
pop
lods
rcrl
add
xchg
and
xchg
or
icebp
in
notl
dec
popa
jne
repnz
push
cwtl
fwait
mov
mov
mov
lea
outsb
mov
inc
mov
notb
stos
cmp
dec
xor
sub
xchg
push
add
or
inc
inc
mov
push
cmpsl
jbe
daa
out
or
out
pop
shl
popf
dec
jae
repnz
mov
dec
adc
cmp
out
mov
add
xchg
adc
pop
insl
xchg
pop
push
push
jmp
jbe
in
nop
add
mov
testl
xchg
mov
mov
jbe
pushf
lahf
sub
aaa
aaa
jne
mov
mov
popf
iret
pop
daa
cmp
push
push
scas
rolb
adc
test
repz
aad
imul
add
sbb
sbb
shr
cmpsb
jno
mov
xchg
xchg
and
cmc
mov
cmp
int
pop
aam
adc
dec
adc
and
pop
out
or
xchg
push
pop
js
sti
dec
ficoml
ja
lcall
fildll
and
adc
sbb
push
adc
adc
push
cld
dec
sub
pusha
lahf
or
xor
mov
inc
js
sbb
cld
xchg
mov
adc
and
mov
sub
aas
popa
sti
sarb
aam
jnp
jne
sub
xchg
jbe
es
and
cmpsl
es
daa
push
es
imul
arpl
sbb
clc
idiv
or
xor
push
mov
inc
das
nop
ds
mov
mov
nop
ffreep
data16
jo
jmp
daa
cltd
ror
push
jle
adc
sub
jae
mov
pop
pop
fcmovnu
mov
adc
subb
in
movsb
push
repnz
int
js
clc
push
sub
mov
jno
imul
nop
sub
fwait
dec
dec
mov
mov
ljmp
dec
das
cmpsl
jns
jnp
movl
mov
pop
jns
adc
cs
and
cmp
mov
or
test
push
cmpsl
add
hlt
stos
fcoms
out
loopne
idivb
outsl
sti
repz
push
scas
ljmp
sub
mov
sub
cli
sbb
mov
aas
mov
push
mov
cli
cmp
jns
ljmp
mov
ret
addr16
lea
je
mov
inc
ficompl
scas
dec
in
pop
je
jbe
add
add
push
push
adc
cmpsb
cmp
push
aas
or
push
add
jae
lea
mov
nop
scas
pop
push
jnp
shll
pusha
into
decb
push
pop
jg
xor
aas
test
movsl
pop
push
aaa
icebp
xchg
data16
movsb
cmp
cmp
sbb
lret
mov
cmp
xor
scas
shll
mov
inc
mov
jle,pt
cld
cld
dec
sbb
pushf
add
jbe
pop
movsl
pop
movb
sahf
inc
xor
push
dec
mov
mov
push
cmp
insl
sbb
xchg
scas
mov
ds
outsl
std
mov
xor
mov
sub
das
ja
xor
add
adcl
lods
or
loopne
cmp
fsubrs
xor
mov
pop
cmpsb
xor
movsb
outsl
popf
dec
jno
sub
and
movsb
dec
aas
in
outsb
xlat
sbb
pop
fdivs
lret
jb
mov
sbb
in
mov
sbb
mov
cmp
das
mov
push
mov
insb
adc
mov
repnz
dec
pop
enter
mov
push
por
mov
aaa
fldl
mov
mov
fs
push
enter
clc
push
lods
jg,pn
jns
out
inc
push
sbb
jg
adc
xchg
dec
jbe
sbb
loopne
xchg
ds
lods
cli
in
inc
jl
es
lret
inc
sbb
imul
inc
aas
mov
jmp
outsl
ficomps
jae
sbb
subl
repnz
xor
jne
mov
std
jb
add
je
in
test
push
out
aam
push
mov
or
mov
mov
repnz
push
push
mov
pop
mov
and
sbb
je
jnp
pop
cmp
push
rcrl
pop
int
sbb
jo,pn
lcall
push
xor
orl
into
outsl
lret
pop
in
push
adc
jle
stos
sub
dec
scas
push
add
adc
int3
mov
jle
xor
mov
std
outsb
in
test
cmp
jo
adc
int
scas
and
lea
or
xor
mov
inc
jae
loop
cs
call
and
push
cmpb
mov
push
lods
xchg
enter
xchg
and
adc
add
xchg
and
jb
mov
xor
inc
mov
jge
mov
fistps
stc
test
repz
loopne
inc
stos
test
sub
pop
sub
decb
mov
and
jnp
repz
fs
ja
enter
inc
mov
jae
xor
inc
dec
cmp
insb
imul
add
xor
repz
xchg
or
ja
inc
add
pushaw
lea
arpl
out
fucomi
int
notb
scas
pop
lods
lret
iret
int
sub
imul
or
jp
imul
pop
popf
cli
es
push
je
test
sahf
stc
ret
sarb
push
mov
std
adc
push
lods
dec
push
fwait
jle
sbb
repz
idivl
mov
stos
sarl
repz
out
test
xor
and
xor
lret
push
pop
lret
inc
ljmp
mov
rolb
cmp
push
test
testb
lea
push
je
sbb
shll
or
fisttps
push
xchg
xchg
jmp
push
je
inc
xor
pop
shl
decb
imul
mov
mov
jmp
sbb
adc
mov
push
pop
and
enter
add
movsb
bound
icebp
loope
popf
sbb
test
mov
dec
jo
fisttps
cmpsb
loop
addr16
lea
movsb
adc
pop
push
push
mov
adc
ret
inc
mov
dec
adc
cs
aas
pop
xchg
ja
mov
test
inc
or
inc
jo
insb
add
or
call
xlat
mov
insb
mov
aam
xor
inc
xor
inc
rcrl
jne
cli
sub
sub
mov
ja
rorl
inc
mov
rcll
xchg
xor
mov
inc
ja
enter
pop
xchg
andb
js
scas
cmpsb
stos
push
jecxz
adc
mov
inc
ffreep
sub
mov
push
cmp
iret
loope
sbb
jnp
cmp
popa
xor
sahf
pop
dec
xor
mov
mov
stos
and
and
je
mov
mov
sbb
push
add
jg
hlt
inc
add
xchg
sub
pop
sub
scas
sub
stc
mov
adc
sbb
jle
js
ftst
negb
cmpl
mov
loope
loope
xor
jle
inc
nop
push
sub
sbb
leave
inc
pop
rolb
mov
or
stos
push
jl
imul
inc
cmp
adc
sbb
pop
mov
add
sbb
in
sub
lods
inc
xor
adc
js
mov
mov
jecxz
in
rcll
mov
xchg
mov
mov
cld
cmp
jg
xchg
or
mov
xchg
or
and
popf
adc
sbb
loop
push
sub
mov
adc
hlt
andl
and
pop
insb
sub
stos
adc
sti
push
icebp
ja
cmp
call
jns
ss
dec
int
mov
outsl
cmp
ret
push
xchg
aas
divl
dec
scas
dec
push
jge
jl
pop
lods
pop
xchg
hlt
xorl
adc
icebp
leave
shrb
fucomp
sub
cmpsl
aas
or
xor
pop
xor
xchg
mov
xor
xchg
shlb
aas
nop
ret
test
scas
enter
mov
inc
lret
aad
and
nop
mov
out
aad
into
mov
roll
scas
inc
xor
sub
faddl
ds
add
imul
and
imul
dec
xor
jge,pt
push
pop
insb
fs
sbb
test
cli
push
leave
cmpxchg
jns
mov
frstor
cmp
mov
ret
dec
out
xor
call
fidivl
jecxz
fs
or
cmc
subb
ljmp
xor
fwait
std
dec
dec
mov
or
adc
dec
mov
shr
inc
enter
mov
xchg
add
jg
ret
add
in
es
adc
out
jmp
aaa
mov
inc
and
and
push
pop
xor
ud2
dec
xorb
icebp
in
in
sbb
or
stos
sub
push
dec
lea
mov
xchg
sbb
lods
pop
or
test
push
push
into
or
dec
dec
add
and
mov
add
push
xchg
xchg
gs
movsl
dec
sarb
iret
shr
cmpb
cmp
adc
sub
lods
xchg
in
xor
fstpl
or
push
lods
ljmp
push
data16
push
andl
mov
ret
lds
xchg
push
mull
jg
cmp
xchg
adc
ret
loope
jp
lock
mov
sbb
mov
dec
xchg
push
inc
add
push
dec
fsubrp
mov
mov
jb
aad
loope
add
movl
lcall
scas
enter
mov
mov
rol
and
mov
ret
push
call
mov
mov
sub
and
sti
or
add
stos
cs
mov
scas
mov
stc
pusha
mov
mov
xchg
push
xchg
inc
push
xor
dec
add
test
sbbl
adc
std
jg
cli
cld
dec
pop
cmpb
icebp
and
mov
popf
cmc
cmp
iret
in
pop
fwait
inc
ret
mov
or
mov
aas
xchg
xchg
fdivp
iret
popa
xor
push
fs
push
push
cmp
in
cmpsl
repz
lret
or
dec
fs
inc
ja
and
aam
push
xchg
lock
pop
mov
scas
cwtl
jo
xchg
add
testb
pop
fsub
in
add
mov
sahf
adc
fnstcw
push
xchg
cld
add
test
xchg
imul
xchg
mov
popf
mov
outsl
inc
iret
pushf
push
pop
sbb
mov
out
sbb
cwtl
mov
loope
std
movsb
add
pmaxub
push
xor
sarl
or
and
call
add
jecxz
adc
insb
xorl
push
cli
pop
jb
xor
or
ss
scas
sbb
out
jb
fwait
out
xchg
js
sub
sbb
or
ret
aas
fcmovne
adc
add
mov
test
cltd
outsb
xor
decb
repnz
xor
inc
xchg
and
nop
mov
out
lock
cmp
lret
fadd
add
loope
clc
lds
mov
adc
test
outsl
dec
sub
push
pop
dec
xchg
mov
push
push
frstor
cmpsb
jo
jno
adc
add
jle
sub
inc
repnz
bound
fldcw
je
lret
mov
addr16
and
or
iret
xchg
loope
cmp
mov
adc
pop
andb
lret
push
out
ja
imul
sarl
lea
addb
outsl
fsubs
fsts
push
mov
inc
movsl
fildl
add
pop
mov
cmp
shrl
test
cmp
or
mov
mov
jp
cli
adc
call
out
into
mov
add
inc
roll
push
out
mov
xor
push
mov
call
adc
call
popf
dec
pop
fnstsw
jge
xlat
mov
imul
push
lea
or
xor
cmp
or
dec
divb
xchg
mov
lock
pop
mov
push
jl
pop
mov
jge
and
jae
in
xchg
popf
mov
std
mov
push
pop
mov
orb
dec
fildl
push
sub
cmp
test
sub
je
jne
loop
pop
stos
ss
stc
mov
jecxz
adc
cmp
adc
repnz
or
scas
and
mov
mov
dec
sub
sbb
data16
inc
loop
js
sbb
cs
and
std
jo
imul
mov
shr
aas
and
jge
into
fists
jg
es
iret
jno
xor
mov
jo
or
adc
es
pop
scas
push
push
iret
sub
mov
and
add
lahf
repz
orl
vandnpd
mov
enter
loopne
fistps
push
push
cmpsl
data16
inc
jae
jae
inc
int3
lret
dec
in
in
out
shrl
jne
outsl
sbb
in
sbb
sarb
cmp
push
popa
jge
jle
xor
jg
xchg
adc
xlat
dec
mov
mov
jmp
cmpsb
mov
adc
jbe
sub
and
enter
lods
sbb
inc
test
jne
pop
push
enter
out
popf
xchg
cmp
dec
leave
add
fwait
sbb
rcll
sub
popa
cltd
mov
mov
and
jae
mov
mov
dec
jae
mov
in
jae
loop
out
fsubrp
mov
imul
orl
xor
lea
mov
add
xor
xchg
jge
out
xchg
push
xor
mov
jb
mov
cs
xlat
cs
out
das
lcall
jmp
cmp
cmc
xor
mov
out
stos
mov
sbb
pop
outsl
inc
das
xor
xchg
rorl
aas
movsb
or
ljmp
ret
mov
fs
dec
test
cwtl
ror
jmp
mov
adc
shlb
sub
stos
mov
jle
js
sti
pop
or
inc
sub
rcrb
scas
stos
xchg
cmp
movsb
loopne
or
push
loopne
or
repz
cmp
pop
fisubl
adc
loop
stos
cmpb
cs
jl
incb
shr
test
mov
jg
movsl
sbb
js
dec
inc
stos
or
dec
adc
mov
out
push
aaa
jmp
es
jnp
cmp
outsb
push
movsb
mov
movsb
insl
cmp
dec
testl
dec
pushf
mov
inc
imul
test
daa
dec
push
lods
inc
and
dec
add
mov
test
ror
ljmp
lods
inc
jne
das
mov
loopne
loop
or
xor
js
imul
mov
pop
adc
ss
cltd
xor
dec
and
pop
dec
add
nop
mov
jmp
push
or
adcl
out
icebp
mov
js
imul
ds
add
cmp
sub
lea
fstps
inc
sub
push
jns
aas
in
pop
cs
mov
js
mov
sub
shll
scas
inc
fistl
dec
jne
xchg
inc
insb
mov
les
pushf
mov
pop
mov
dec
cmp
push
push
mov
adc
sub
test
les
pop
ret
cmpsb
sub
cmp
sbb
inc
testb
inc
rcrl
mov
ss
sbb
inc
pop
push
push
dec
fdivrl
xchg
pushl
or
pop
cltd
out
pop
ds
out
adc
add
cmp
fiaddl
jp
fdivs
gs
jge
dec
xchg
dec
data16
repz
ja
fistpl
cwtl
dec
sub
push
xor
mov
into
or
icebp
fwait
movsb
loope
rcl
and
inc
cmpsb
sbb
nop
ds
add
mov
lods
sbb
out
push
inc
pop
in
xlat
push
jp
or
bnd
adc
fistpl
pushf
movsl
pop
mov
mov
ret
xchg
addl
mov
mov
std
xor
je
sub
pop
xchg
mov
xlat
out
jmp
pop
lods
and
jmp
std
cmp
mov
sub
sbb
cmp
fcoms
lret
fstpl
shll
jne
jno
cli
out
jg
mov
fisttpl
xchg
xor
pop
pushf
cmpb
leave
adc
add
cs
cmp
lea
xor
lods
adc
ljmp
jg
lods
push
pop
sub
dec
lcall
je
lahf
lret
daa
popf
jmp
imul
xchg
push
arpl
leave
fmull
push
jmp
push
js
into
pop
sub
lock
fisubrl
or
pop
sub
in
iret
lock
push
lock
lcall
jp
sbbb
inc
les
mov
xchg
or
xor
test
mov
jmp
ss
iret
pop
sbb
lret
loop
or
inc
push
iret
adc
imul
mov
pop
cmp
xchg
out
adcb
push
jle
cmp
mov
mov
orb
nop
cmp
aad
leave
daa
inc
or
and
pop
in
push
or
jg
ljmp
sub
mov
cmp
cmp
cmp
jae
xor
shlb
in
xchg
mov
lock
enter
dec
push
jns
cld
mov
mov
out
movsl
fmuls
mov
add
fmull
rol
mov
mov
adc
mov
inc
vmwrite
cmp
jae
or
push
push
lods
scas
dec
inc
jnp
jg
loope
dec
push
mov
ljmp
or
adc
dec
inc
lea
pop
xchg
mov
push
jmp
jae
sub
std
imul
sti
incl
xchg
add
gs
mov
scas
jle
loope
xchg
adc
mov
dec
adc
inc
cmp
mov
cmp
aas
repz
pop
jl
or
dec
int3
dec
ret
dec
add
add
sub
je
push
and
xchg
lds
cmp
mov
daa
stc
leave
and
loop
inc
xchg
xchg
movsl
and
and
arpl
xchg
shll
fsts
iret
push
mov
lcall
out
icebp
and
fwait
push
dec
jne
push
int3
mov
les
aas
mov
ror
lret
sbb
movsl
loop
xchg
sub
xchg
fidivs
or
pop
test
lret
mov
inc
mov
sbb
dec
inc
sti
inc
mov
dec
xchg
jae
jae
lret
addr16
push
xor
push
dec
out
pop
test
pop
lods
add
jne
out
out
inc
cmp
cli
je
lea
gs
lcall
and
lahf
cwtl
dec
aam
mov
std
or
adc
sub
loop
stos
add
or
adc
std
sbb
pop
jl
adc
cmp
pop
cmpl
jmp
ss
push
subb
loope
shl
mov
mov
out
leave
xor
stos
test
addb
sbbl
and
cmpsb
sti
stos
lret
fsub
mov
mov
xor
inc
test
fisubs
pop
push
xchg
pop
addr16
hlt
mov
es
mov
js
mov
int
icebp
mov
dec
or
push
scas
sar
sub
mov
or
movsb
push
fbstp
rol
sub
jb
mov
or
pop
movsl
jg
mov
insl
aad
outsb
fdivrs
pop
lock
vpmacssdd
push
xor
shlb
das
scas
fwait
shll
pop
inc
sti
mov
and
sbb
mov
mov
cmp
lahf
mov
mov
mov
cmc
adc
pushf
adc
dec
fsubs
lds
pop
divl
and
mov
push
push
inc
ret
push
leave
in
fld
fs
stos
enter
xor
cmp
inc
das
in
mov
stos
mov
iret
bound
and
xchg
or
mov
cmpb
sub
lret
lods
sbb
dec
pop
lea
adc
and
xor
and
jae
or
or
mov
cmovl
cltd
sbb
jns
stc
inc
jg
sub
dec
or
push
push
ljmp
imul
adc
xchg
movsl
and
jnp
mov
inc
inc
and
pop
jg
add
clc
out
retw
divb
jno
xchg
mov
sub
sbb
test
scas
jns
mov
add
scas
xchg
test
repnz
or
inc
scas
call
mov
pop
adc
jg
xorl
scas
xrelease
call
or
mov
mov
mov
lods
fsubs
xchg
xchg
sbb
sbb
lahf
pop
push
xor
add
xor
sub
inc
fimuls
xchg
cmp
test
add
pop
ljmp
mov
std
incb
in
pusha
lcall
fsubl
and
call
push
xchg
scas
testw
repz
cmp
inc
xor
cld
daa
arpl
lcall
cmp
sbb
pop
stos
movsb
insb
xorl
dec
jae
rcrl
cmp
notl
roll
int
mov
das
iret
in
xor
mov
es
or
adc
pop
ret
arpl
jb,pn
sub
jo
jnp
les
dec
mov
adc
rcll
adc
xor
pcmpgtw
shlb
xor
fldl
sub
inc
and
leave
es
or
sahf
mov
ds
xchg
cs
add
xlat
jg
sbb
icebp
adc
jo
jp
aad
jae
sbb
dec
add
lods
imul
mov
cmp
in
ljmp
and
cltd
repnz
jnp
repz
aam
jle
push
push
or
aas
jne
stc
incb
and
mov
jmp
daa
push
dec
in
ret
add
cmp
push
pop
or
push
imul
adc
cli
shlb
mov
add
das
cmp
rcrb
add
clc
jnp
mov
push
mov
movsb
pmulhuw
mov
pop
push
jnp
test
notl
dec
fbld
inc
jecxz
sbb
xor
xor
in
dec
sbb
lods
mov
dec
andl
cmp
and
in
inc
orl
mov
pop
test
lods
ja
outsb
cmpsl
jnp
mov
mov
lahf
jge
clc
loop
repnz
pop
shrb
sbb
in
imul
daa
sub
dec
cmc
mov
fdivrl
inc
mov
in
xchg
cmp
jo
in
inc
bound
jnp
das
mov
test
outsl
xchg
add
inc
inc
jle
pushf
pop
cli
or
andl
sub
int3
nop
dec
flds
xrelease
mov
lcall
mov
mulb
inc
mov
mov
mov
cmp
dec
mov
pop
shlb
or
add
mov
xchg
jg
jnp
orl
jl
jmp
xorl
lret
in
jnp
inc
in
push
loopne
aad
inc
xchg
sti
pop
cmp
mov
pop
lret
cmp
sbbb
inc
mov
xchg
lcall
in
insb
test
ljmp
pop
jb
fbstp
lcall
roll
xchg
pop
imull
and
adc
jp
cld
stos
mov
push
add
xchg
loopne
aam
outsl
loopne
data16
add
test
ret
enter
loope
pushf
ret
test
pop
push
js
sub
jecxz
test
loopne
fsubl
shrb
out
push
int3
jp
cmp
dec
mov
js
ss
fs
mov
pop
jno
xchg
jbe
cmp
aam
mov
or
jb
sub
mov
pop
push
icebp
mov
lds
and
or
movsl
repnz
mov
dec
adc
push
xchg
and
daa
mov
es
pop
icebp
xorl
xchg
in
aad
xchg
jae
sbb
pop
loop
hlt
push
inc
mov
fyl2xp1
scas
push
fcoms
jno
xor
pop
xchg
sbbb
cwtl
inc
or
js
inc
mov
sbb
stos
inc
add
xchg
in
aad
nop
pop
arpl
cmp
xor
aad
push
leave
repnz
out
jnp
jb
pop
cli
push
popa
sbb
lock
xchg
pusha
dec
dec
push
aas
inc
into
lret
fstl
and
sbb
in
sarl
cmp
sub
scas
sbb
cmp
hlt
push
insb
repnz
or
sub
add
das
sahf
movsb
enter
rcrl
sbb
jp
and
sub
xchg
xchg
ror
pop
hlt
xlat
sub
sbbl
gs
or
movsb
or
jae
pop
and
cmpb
data16
cli
mov
cmp
lcall
adc
pop
jge
sar
and
outsl
and
test
or
pop
xor
incl
ret
mov
pop
out
xchg
lret
push
mul
lods
pop
imul
lret
sbb
jo
add
dec
ds
clc
enter
stos
fidivs
push
inc
icebp
fimuls
test
ds
sti
sbb
lret
xchg
fsubl
xchg
les
sbb
int3
inc
inc
div
inc
ljmp
addr16
bound
rcrb
jae
stos
mov
adc
insb
mov
rolb
push
fsts
insb
push
rcl
repnz
mov
add
loopne
mov
cld
scas
std
or
cmp
xchg
je
cmp
popa
jae
cli
sub
xchg
popa
adc
insl
pop
daa
inc
fdivrs
xchg
mov
loop
stc
adc
xor
cmp
mov
movsb
jecxz
inc
xorb
pushf
test
andb
and
loop
fcomi
jmp
lret
inc
fidivl
and
inc
push
ss
or
rcrl
xor
test
ret
adc
adc
cli
ror
shll
outsl
in
insb
in
dec
mov
push
mov
pop
mov
inc
ret
fisttps
loope
nop
add
jge
inc
xchg
cs
and
xchg
cwtl
fnstcw
xlat
mov
xor
pop
repnz
lcall
inc
das
pop
setb
or
sub
bnd
adc
or
scas
jg
cltd
inc
lret
xorl
cmp
js
in
jno
mov
adc
imul
adc
loope
xchg
mov
scas
iret
pop
or
test
data16
out
scas
and
andb
adc
mov
pop
cmp
scas
fnstsw
aaa
inc
jnp
adc
jnp
mov
icebp
cmc
jmp
sbb
and
add
subl
imul
out
push
sti
scas
or
sub
gs
push
jnp
test
loope
cltd
loope
nop
add
ret
arpl
arpl
clc
jmp
dec
mov
test
shlb
dec
or
sahf
push
pop
jecxz
and
popa
xor
roll
int3
mov
xchg
adc
les
inc
clc
xchg
aas
out
jb
sbb
pop
imul
adc
jl
mov
outsl
fmull
ja
fnstenv
xchg
inc
cmp
fs
push
pop
jmp
pop
cmp
mov
lods
mov
loop
xor
lods
aad
imul
sub
aad
fld
outsl
imul
mov
cmp
std
push
scas
hlt
xchg
xor
add
mov
mull
pop
pop
shll
jae
sub
xorl
xchg
pop
fildl
cmp
push
lret
cli
aad
jns
inc
sbbb
pop
dec
xchg
iret
inc
sti
shrl
int3
iret
lea
je
sub
orb
outsl
mov
lds
fisubs
pop
shll
and
dec
xchg
adc
shlb
fstpl
xor
inc
push
pop
bswap
ljmp
call
bound
hlt
or
fcmovne
push
cmp
and
int
adc
repz
shlb
xchg
js
cmp
add
jbe
and
loopne
repnz
cmpsl
je
sti
aas
mov
sub
pop
and
imul
and
mov
lock
leave
pop
cwtl
iret
dec
incb
fisubl
ds
add
iret
sahf
mov
adc
clc
fistl
and
andb
mov
popa
xlat
jno
inc
lods
jg
push
cmpsl
dec
nop
push
cmpsb
xor
jge
lcall
pop
sarl
in
hlt
out
push
sbb
insb
mov
pop
mov
outsb
addr16
push
mov
sti
int3
in
daa
hlt
mov
xor
jne
ret
cltd
shrl
cmc
sbb
sub
scas
rcll
add
int
clc
xor
testb
mov
and
dec
fcoms
fiadds
cmpsb
dec
add
mov
iret
loope
mov
adc
jecxz
jne
aad
mov
pop
daa
jnp
mov
or
dec
add
and
ret
dec
and
addl
mov
inc
ja
ret
xchg
mov
jl
fwait
in
add
lods
dec
jg
fs
andl
ret
xor
jo
mov
cmp
fildl
enter
push
ret
mov
aam
shl
ljmp
in
mov
stos
aad
mov
push
jns
test
mov
int
sbb
mov
dec
int3
xchg
fnstsw
in
cmp
int
outsl
int
call
lock
jmp
cmc
insl
ret
test
dec
sub
cmp
lret
jl
cltd
hlt
sbb
xorb
mov
jp
daa
cmp
repz
pop
xor
jne
jnp
fst
in
xor
test
fadds
lea
cmp
or
loopne
and
dec
scas
lret
sub
inc
into
pop
xchg
ret
jmp
test
mov
pop
dec
add
movsb
mov
mov
je
les
sub
into
aad
ss
xchg
jg
sub
testb
pusha
mov
jne
adc
iret
sbb
je
push
or
xchg
add
int3
ds
sbb
sarl
loop
dec
push
sahf
ret
stos
dec
lret
pop
and
repnz
fs
xorl
add
icebp
mov
xor
popa
cmc
into
ljmp
dec
xor
jl
shl
mov
or
fstpl
mov
flds
or
cmpsb
enter
or
adc
mov
pushf
adc
cmpsl
sbb
dec
pushf
sub
inc
sti
xchg
pop
jb
dec
mov
cmp
subb
ret
pop
or
outsl
repz
and
shlb
ja
sahf
sub
pop
adc
jb
popa
adc
mov
xor
inc
cmp
sbb
int3
movsl
lds
push
inc
lods
jnp
mov
adc
mov
sbb
leave
jb
cmp
vpaddq
cmp
loope
test
aaa
cmpsl
push
insl
mov
repz
popf
push
xorb
dec
pop
rcr
inc
out
and
mov
inc
xor
add
jne
mov
or
mov
pop
lret
stc
std
jne
dec
mov
dec
xchg
mov
mov
inc
dec
mov
mov
inc
mov
add
mov
mov
xchg
adc
stos
dec
movl
and
inc
das
leave
aam
adc
pop
mov
xchg
repz
andb
inc
rorl
inc
les
mov
aad
jmp
jmp
or
or
insb
mov
fidivrs
mov
les
out
xor
pushw
inc
push
dec
push
cs
pop
adc
loop
pusha
and
sub
pop
aaa
movsb
popa
fsubrs
mov
mov
mov
dec
test
add
adc
das
push
outsb
jns
test
pop
dec
mov
ljmp
inc
imul
lret
pop
or
ja
or
mov
push
test
xchg
inc
hlt
xchg
lock
popa
dec
push
aaa
dec
xchg
das
pop
pop
mov
rorl
adc
pusha
dec
jge
filds
std
sub
cwtl
mov
out
cmpsb
or
mov
inc
cmp
pop
cmp
adc
out
rorl
jle
adc
cld
out
scas
imul
in
inc
addb
cs
add
scas
outsb
xor
sahf
mov
sub
cmp
cmpsb
push
push
push
cmp
cld
push
sbb
ds
or
cmp
test
sbb
outsl
das
cmp
leave
pop
mov
aam
jne
push
jae
jecxz
test
pop
loop
fistpl
inc
fistps
add
pop
cmpsl
sbb
idivl
nop
das
pop
mov
and
push
xchg
xchg
test
or
mov
pop
sub
mov
cmpxchg
jne
cmp
lret
in
xchg
fildl
push
push
addb
mov
adc
xchg
fs
or
cltd
aaa
insl
jle
cmp
aad
adc
mov
out
in
lods
jle,pn
enter
add
add
push
repz
enter
xorb
insl
movb
mov
mov
mov
jle
mov
std
jno
mov
pop
cmpsb
cmp
fmulp
inc
in
and
mov
xchg
mov
mov
test
or
out
fsubrl
inc
dec
rcrb
cmpb
pop
pop
sbb
dec
adc
jmp
std
stc
adc
xor
shlb
inc
jg
mov
hlt
inc
push
push
push
xor
stos
or
pop
mov
xor
xorb
inc
mov
sub
mov
pop
inc
bound
sub
rcr
rclb
push
scas
xor
test
imul
sbb
pushf
lahf
adc
inc
and
addr16
aam
je
rorb
jnp
aad
dec
lahf
in
lret
enter
ljmp
leave
jbe
xchg
stos
dec
cwtl
loop
push
idivl
pushf
and
mov
out
pop
xchg
mov
mov
add
test
adc
stc
ja
xchg
lret
idiv
adc
push
test
daa
push
mov
inc
adc
imul
mov
out
es
push
shll
xor
fucomi
fldcw
rcll
cmc
push
adc
or
and
mov
push
inc
xor
mov
inc
pop
cmp
aad
inc
cmpsl
sbb
ret
fsubs
adc
outsb
test
aam
icebp
shl
add
imul
loop
rorl
in
and
fsubrs
cmp
iret
call
sbb
mov
enter
fbld
sub
jnp
sbb
subb
bound
push
cli
pop
push
loopne
inc
and
or
test
movsb
or
mov
shlb
xor
mov
push
sbb
repz
jmp
sar
mov
pop
shll
xchg
repnz
sti
adc
dec
iret
dec
lret
jae
lret
jle
jle
stc
jge
lods
mov
adc
lret
mov
mov
pushf
pusha
lds
mov
inc
and
imul
mov
lahf
adc
icebp
roll
ret
and
xchg
sub
pop
xor
mov
push
and
jo
cmc
pop
jae
cmp
mov
and
adc
pop
lods
imul
adc
stc
scas
js
fisubrs
repnz
scas
fistps
jl
dec
xor
mov
lret
push
push
lods
out
and
popf
jl
push
push
insb
aas
fs
das
test
sub
mov
arpl
add
leave
daa
mov
mov
and
cmc
roll
and
repz
shlb
or
jl
pop
mov
jge
xor
lret
cmp
fldl
std
jb
out
mov
xor
test
or
xlat
jge
adc
test
adc
fidivrs
add
data16
jecxz
call
cld
stc
inc
mov
cwtl
xor
xchg
inc
xor
cmc
jge
mov
outsb
mul
mov
cmp
cltd
and
mov
scas
sbb
arpl
or
or
ret
add
test
adc
jne
and
xor
cmpl
rclb
pop
ljmp
inc
repz
in
fnsave
jb
mov
mov
lods
lea
cmpsb
test
jge
lahf
add
jbe
repz
pop
das
adc
add
in
adc
loop
cmp
jns
test
cmc
sar
dec
ret
movsb
add
fs
lods
inc
cltd
loope
pop
sub
lea
push
in
and
pop
mov
mov
cmp
sub
test
push
fisttpl
or
mov
jo
xchg
rcrl
jmp
push
jns
mov
jae
ret
add
inc
mov
and
and
mov
mov
pop
insb
sub
fadd
mov
clc
div
fldenv
or
sti
rolb
push
inc
add
cmpsl
cwtl
pop
push
sti
mov
pop
lret
mov
aad
daa
or
icebp
rolb
or
ss
dec
and
jbe
mov
dec
inc
push
jb
cmc
jle
pop
mov
add
adc
ret
sub
lea
jne
xorl
fwait
or
mov
push
decl
loope
sub
add
push
lods
push
aad
icebp
icebp
pop
repnz
pop
pop
je
xlat
faddl
xchg
nop
xchg
rcrb
push
xchg
in
icebp
ljmp
aad
add
cmpsb
push
xchg
inc
and
lea
jno
fisttps
fsubp
aad
xchg
clc
adc
or
test
push
mov
jg
xchg
push
notb
xchg
pop
jne
aaa
hlt
jge
sub
push
lods
in
cld
push
mov
fiadds
fildll
adc
outsl
mov
or
mov
aas
pop
pop
stos
enter
cltd
inc
xchg
pusha
pusha
xchg
xor
jmp
test
and
dec
sbb
cmp
xor
push
aas
cmp
addr16
adc
jge
push
repnz
into
cmp
mov
cmp
mov
ljmp
mov
adc
xorl
or
mov
adc
repnz
mov
inc
frstor
pushf
cmpsb
stos
cmp
popf
insb
cmpsl
cltd
pop
jg
out
int
sub
scas
jb
neg
mov
xchg
aam
cmp
lods
xchg
inc
leave
loope
xchg
aaa
jg
out
mov
jp
pop
add
sub
lods
mov
xchg
inc
and
jp
mov
dec
lret
or
int3
movsl
jge
and
push
in
xor
jo
pop
js
int3
mov
cmpsb
lret
dec
shll
pusha
movsb
sub
outsl
sub
add
pop
lret
int3
stos
mov
push
fimull
push
inc
scas
stos
add
or
dec
mov
inc
push
xchg
inc
das
daa
push
jle
lcall
cmpsb
jne
hlt
or
bound
xlat
ss
jne
push
adc
stc
lret
push
xchg
add
push
lahf
push
xchg
mov
lock
push
jo
ja
dec
adc
push
scas
xor
in
inc
xor
imul
out
jl
js
xor
cmp
xor
repnz
cmp
dec
mov
jae
int
sbb
sbb
stos
xchg
pop
mov
push
scas
outsb
cld
das
into
mov
push
in
push
pop
mov
mov
iret
popf
outsb
and
imul
mov
lods
push
push
mov
inc
pop
outsl
sub
xchg
add
xchg
lock
mov
ss
jge
pop
jl
loope
inc
sub
sti
fistpl
stc
sbb
lods
pop
shrl
imul
stos
or
aad
mov
or
push
fistpll
push
lods
jp
mov
into
jp
jmp
push
scas
icebp
mov
inc
outsb
cwtl
mov
nop
ljmp
popa
push
hlt
mov
lods
rorb
cmpsb
xchg
jle
pop
xchg
xchg
imul
imull
dec
sub
jp
lcall
inc
add
push
or
pop
mov
push
add
jmp
push
jl
jmp
pop
popa
and
jmp
xchg
cli
popf
loope
rcrl
xchg
movl
mov
xchg
out
or
adc
js
mov
sbb
popa
xchg
imul
in
pop
push
cli
sbb
subl
jno
and
xchg
pop
or
scas
push
xlat
mov
sub
xor
mov
icebp
sbb
ret
in
inc
or
lret
adc
sub
pusha
push
neg
aad
push
cmp
fwait
adc
dec
pop
jmp
outsl
call
jmp
scas
sub
or
push
outsb
inc
pop
sbb
pop
xlat
add
into
fsts
push
test
dec
sbb
sub
imulb
out
and
add
insb
xlat
lods
fwait
scas
add
push
cli
adcl
fwait
mov
das
aas
pop
xor
lds
ljmp
fsubrs
xor
cmpl
cmp
sub
scas
xchg
aam
push
lret
sahf
sub
inc
cmp
ja
mov
fwait
cmp
into
scas
pop
cmc
and
cltd
xchg
mov
fldcw
mov
push
aas
lods
leave
pop
es
jecxz
sarb
jb
imul
jmp
into
pop
pop
inc
cli
dec
jno
call
in
aam
mov
mov
jg
mov
popf
sub
inc
outsl
sbb
mov
add
cmp
jbe
push
rcll
mov
into
push
cmp
lahf
and
sahf
xchg
cmpb
imul
jbe
push
push
test
mov
push
roll
testl
pop
fnstcw
les
and
int
pop
in
mov
sti
addb
cs
es
fdivrl
je
idivb
fisttps
adc
push
dec
jnp
les
lahf
or
push
adc
mov
aaa
pop
out
lret
cmp
shll
cmp
out
mov
cltd
or
ljmp
lret
inc
pop
fnstcw
push
arpl
jbe
cmpsb
hlt
add
and
xor
mov
jp
and
repnz
cli
push
inc
or
adc
pushf
and
jmp
mov
out
lahf
push
loopne
xchg
cmpsb
push
cmp
stc
mov
inc
repnz
inc
test
dec
inc
loopne
push
mov
push
mov
and
and
inc
cltd
mov
cmpsl
mov
jle
out
scas
adc
cltd
xchg
test
inc
pop
test
mov
into
loopne
add
shrb
adc
lods
aam
cmp
lds
rolb
loope
push
mov
jl
dec
int
in
push
mov
loopne
push
popa
insl
das
jo
fdivp
and
mov
js
sbb
inc
jp
xchg
lret
push
ljmp
dec
fisubrl
roll
pop
push
dec
fwait
das
or
ret
sarl
lret
cltd
aaa
call
adc
test
mov
les
push
sub
jns
movups
xor
ret
push
mov
shll
call
add
mov
jae
loope
push
adcl
sbb
insb
inc
nop
pop
hlt
fsts
in
pop
mov
dec
add
cmp
mov
xor
mov
xor
mov
add
movsl
and
push
jge
mov
repnz
push
lods
dec
daa
cld
inc
cmp
mov
ds
sbb
lret
push
enter
das
test
nop
inc
xchg
lods
push
inc
popa
pushf
add
add
add
inc
and
jmp
mov
ds
fsubr
jnp
cmpsb
dec
mov
cs
lock
adc
sub
jle
and
dec
or
jl
cmp
sbb
or
fcoms
mov
int3
ss
pop
dec
arpl
addl
mov
adcl
pop
inc
lods
xchg
sbb
sub
imull
or
les
dec
std
xor
add
clc
js
mov
lock
addr16
push
xchg
lret
std
add
push
and
mov
arpl
orb
sub
imul
mov
adc
fisubrs
pushf
xchg
mov
lret
pushf
jbe
gs
add
xchg
push
call
scas
sbb
sub
in
aam
dec
lods
inc
outsl
test
and
add
xor
and
push
xor
aas
movsb
out
cmpsl
aam
add
mov
int
mov
cmpsb
push
lahf
sub
or
data16
add
jns
mov
lock
lahf
outsb
xorl
add
cmp
cmp
inc
inc
hlt
mov
ds
aam
push
jns
insb
pop
cwtl
mov
push
jae
scas
movsl
call
or
mov
lock
divl
inc
dec
stc
adc
xchg
push
mov
sti
add
or
das
cmp
out
shrb
ljmp
cmc
mov
rorl
lock
insb
inc
mov
lods
jp
out
jle
outsb
mov
in
jle
adc
cmp
test
dec
xor
push
mov
clc
aam
cmp
mov
ja
mov
and
leave
dec
mov
or
push
mov
pop
jp
jmp
xor
push
mov
testb
arpl
roll
cli
jmp
jb
push
lret
cwtl
mov
test
lret
mov
add
shl
repnz
push
or
or
sbb
popf
lcall
shll
and
push
push
jmp
or
aam
mov
sub
xchg
ja
rcll
dec
push
jb
sub
sbb
int3
sbbl
outsb
adc
iret
sti
insl
dec
aad
nop
fwait
pop
loope
cmc
movsl
shrb
push
add
popf
pop
mov
rorl
lds
mov
xlat
imul
enter
jbe
sahf
mov
in
rolb
dec
sub
add
enter
cwtl
call
jno
dec
push
test
jns
data16
jo
mov
push
dec
and
sbb
mov
push
lret
scas
xor
add
pop
mov
jno
andb
mov
mov
lahf
mov
jno
pop
push
aaa
pop
lea
push
pop
xor
sub
movsl
jl
jl
shlb
pushf
fidivrl
xchg
push
pop
xor
mov
dec
shll
push
int
lea
push
add
sbb
dec
das
das
mov
xchg
jmp
cmpsl
repnz
and
push
xchg
enter
in
push
fstps
jmp
cmp
mov
fwait
push
addr16
mov
fwait
xchg
aas
xchg
jp
dec
cmpsl
ljmp
ret
insl
xor
and
fld
push
fsubl
mov
push
test
in
push
add
out
in
sysret
sahf
rorl
sbb
cmpsb
jp
xor
fld
out
or
jnp
and
adcb
add
decl
test
mov
cmp
sar
xor
mov
psrlq
rorl
lret
jns
add
and
insb
push
jge
test
movsl
dec
cmpsl
lods
push
mov
dec
cmpsl
jae
xchg
inc
aam
idivb
xchg
mov
lea
mov
out
out
ficoml
test
mov
stc
cwtl
add
in
sbb
in
push
out
lret
pusha
jge
imul
mov
cld
cmp
cmp
cmp
and
fwait
xor
repz
xchg
mov
mov
pop
xor
pop
cmpsl
xchg
jl
daa
nop
pop
andb
inc
sub
sub
prefetch
or
ret
fsubrp
lcall
lcall
mov
lock
rolb
cmp
test
std
mov
lret
sub
push
mov
jns
jne
adc
js
inc
mov
cli
test
xchg
lret
movsl
cmp
jecxz
cld
jmp
add
cli
test
jecxz
dec
mov
push
call
xchg
aas
cmp
cmp
call
lods
jg
out
inc
lahf
das
jns
and
add
leave
adc
icebp
pop
pop
xchg
push
jns
cs
push
push
inc
in
cmp
insb
addb
push
cs
movsl
push
jecxz
fucomip
adc
cmp
das
mov
mov
xor
into
outsl
in
mov
jnp
scas
mov
push
js
push
fprem
xchg
cmp
in
push
in
mov
xor
and
cmp
jg
jp
call
popf
mov
mov
jnp
jle
inc
dec
mov
inc
jmp
dec
insl
push
jno
push
cwtl
adc
push
dec
sbb
sub
add
inc
xchg
dec
aaa
call
fisubs
in
es
sbb
in
xlat
xor
sarl
mov
jg
mov
in
xor
leave
enter
lods
imul
stos
sbb
rorb
and
push
xchg
sarb
mov
adc
rorl
shrl
test
test
push
repz
dec
js
repnz
cmp
sub
and
lret
and
out
cwtl
sbb
push
xor
or
or
lahf
mov
sub
or
fs
mov
stos
adc
xchg
mov
fcompl
xor
or
xchg
cmp
out
mov
fimull
cwtl
jp
mov
mov
test
and
orl
push
fs
pop
movsl
testb
out
nop
and
sbb
sbb
ja
in
rorb
sti
jp
adc
adc
and
in
testl
loop
sub
insl
fnsave
rcr
fs
pop
lods
inc
jecxz
outsb
push
mov
out
mov
xchg
sahf
insl
inc
push
ja
lods
jbe,pt
mov
in
enter
sbb
sbbb
call
lahf
orl
fisubl
push
mov
ss
dec
sbb
test
js
enter
and
movsb
xchg
dec
mov
int3
xlat
sahf
jmp
jl
xor
mov
pushf
jo
es
xor
mov
test
xchg
stos
orl
in
push
inc
add
adc
sub
dec
and
mov
mov
xor
cli
clc
dec
push
lahf
jl
test
add
push
daa
dec
cmp
scas
inc
xor
sbb
bound
fs
lods
pop
jge
mov
icebp
test
pop
push
add
mov
lret
in
int
aad
std
push
cwtl
lods
jnp
mov
inc
out
cmp
dec
jb
mov
lahf
push
sub
cmpsb
dec
sbb
xchg
or
cld
icebp
xor
scas
pushw
jae
mov
out
pushf
repz
js
popa
push
adc
repnz
out
mov
orl
iret
fcoml
push
mov
push
les
mov
fdiv
nop
in
xor
aad
cld
xlat
mov
loopne
pop
mov
int
imul
test
xchg
add
mov
adc
js
jge
jp
stc
test
adc
cmp
lods
sbb
mov
mov
or
scas
dec
xchg
jae
and
or
test
sbb
insl
mov
in
xor
imul
lret
pop
out
nop
mov
sub
pop
addb
es
inc
lret
je
lahf
pop
ret
push
test
call
xlat
jae
sbb
imul
cmpsl
cmpsb
add
sub
repz
fdivr
mov
stc
das
dec
mov
push
xor
mov
push
mov
cmp
out
xchg
add
fistpll
inc
add
mov
inc
lods
ss
xor
test
xchg
jle
fcmovnbe
push
xchg
jns
cwtl
fnstenv
push
test
popf
xor
loope
out
or
imul
lods
mov
push
lock
sbb
lcall
mov
jne
cmp
sub
mov
add
hlt
pop
je
mov
leave
sub
xchg
push
xor
dec
out
or
cwtl
pop
mov
mov
testl
pop
pop
mov
pop
and
ret
dec
jmp
push
subb
test
jnp
rol
mov
mov
inc
lods
fld
jne
lcall
mov
dec
mov
inc
xchg
data16
pop
imul
and
ds
test
andb
add
push
add
fcoml
cmc
idiv
mov
cld
data16
push
dec
ds
xchg
in
dec
in
test
jp
shlb
push
lret
xchg
push
aaa
dec
daa
cmp
inc
sbb
dec
fldt
mov
std
mov
leave
daa
fidivl
imul
test
je
movsb
xor
pusha
inc
add
adc
push
mov
test
imul
outsb
addr16
add
shrl
jmp
ret
inc
mov
mov
add
dec
jge
sbb
jg
dec
or
jmp
std
ficomps
adc
mov
xchg
divl
repnz
or
or
sbb
mov
pusha
rol
jae
push
adc
scas
sahf
test
shlb
scas
je
push
sub
pop
lahf
add
nop
fmull
fdivs
test
ds
or
loop
jecxz
stos
insb
add
sub
roll
push
imul
rcll
xor
pop
sub
lods
mov
sub
adc
cmp
adc
pusha
mov
ljmp
jne
mov
push
jl
int3
xchg
or
pop
jecxz
push
cli
mov
mov
out
ja
mov
inc
push
call
in
rcrl
push
testb
popf
sbb
scas
push
xchg
mov
fwait
push
jp
rcrl
jno
inc
push
jns
lods
mov
int3
into
lcall
pop
xchg
xchg
popf
pop
inc
push
inc
push
hlt
jecxz
push
in
in
adc
icebp
sub
add
repnz
cmp
aas
loope
enter
pop
insl
push
arpl
mov
stos
out
lock
dec
push
lods
shlb
pop
jecxz
jno
out
xchg
xor
jae
push
push
push
cmp
add
sbbl
rolb
cmp
dec
pop
pushf
mov
push
in
cmpsb
adc
ljmp
icebp
fs
mov
mov
out
stos
insb
mov
andb
jg
xor
jne
pop
pop
ds
cld
jmp
bound
sti
pop
repz
push
ret
test
sbb
adc
in
fisttpl
hlt
addr16
add
lea
movsl
mov
cmpl
dec
pusha
add
xchg
push
enter
ret
pop
cmp
scas
cmp
push
push
fisubrs
scas
mov
jno
leave
push
jg
mov
data16
mov
jge
js
jl
dec
fwait
inc
or
adc
icebp
xchg
xchg
sub
inc
fldl
sub
jb
fsubl
arpl
push
out
in
rol
xor
mov
xchg
jo
adc
fwait
jge
pop
mov
push
cltd
std
jmp
mov
fnstcw
scas
das
sbb
sub
xchg
push
inc
enter
bound
in
stos
jbe
hlt
mov
sub
mov
mov
fisubrl
inc
fcmove
shlb
jbe
stos
push
and
mov
sahf
push
push
pop
or
pushf
xchg
dec
lcall
cmp
stos
fisubrs
test
push
mov
lods
cld
int3
pushf
mov
pop
xor
cmp
adc
mov
dec
pop
cltd
iret
pusha
jns
shll
aaa
nop
sbb
xor
cs
cli
mov
or
mov
mov
pop
into
mov
push
jo
pop
jne
in
sarb
adc
mov
mov
cli
in
ljmp
mov
nop
adc
fbstp
dec
les
jae
sbb
and
xchg
sub
gs
in
lods
into
pop
into
out
mov
mov
xor
lods
push
popf
pop
adc
fbld
dec
shlb
cwtl
fs
xchg
xor
insb
mov
pop
in
mov
call
movsl
out
enter
shl
std
call
sbb
jge
or
aam
mov
imul
ret
adc
xchg
cmp
popl
or
mov
imul
lcall
mov
rcrl
test
sub
pusha
ret
and
mov
or
repz
dec
ret
insl
dec
insb
xchg
test
mov
push
sbb
popf
in
ja
lret
mov
fld
adc
outsl
push
adc
das
push
push
daa
pop
cltd
cmp
dec
or
push
movups
fisttpl
dec
ja
pop
cmp
mov
mov
shl
dec
arpl
aam
xchg
fiaddl
dec
lahf
sub
jl
imul
jo
dec
dec
stos
pop
test
fimuls
jg
jecxz
aam
outsb
mov
pop
pop
mov
xor
sbb
out
pushf
push
fisubl
in
or
andb
pop
lods
cmc
xor
xor
add
sbb
test
aas
js
cmp
jns
rolb
xchg
fisubrl
sbb
adc
mov
dec
pop
fmuls
fucom
inc
mov
pop
outsb
lcall
pop
pop
pushf
push
js
push
or
dec
aam
adc
jmp
daa
pop
push
movl
add
mov
mov
pop
mov
fisubrs
and
push
cli
and
int
xor
adc
in
push
sbb
test
hlt
mov
add
push
pop
add
loope
push
cmc
sbb
xor
inc
or
sbb
xchg
hlt
jne
pop
pop
not
imul
outsl
cmc
mov
mov
das
insb
push
xor
and
fsubrl
inc
cmp
icebp
mov
adc
push
mov
ret
mov
jge
dec
push
mov
sub
andb
std
pop
pop
int3
xchg
add
in
pop
je
mov
test
out
mov
je
jo
cltd
iret
inc
in
aas
jle
lods
je
aas
jns
aaa
sahf
repnz
out
popa
add
jo
xchg
mov
ficoml
movb
push
dec
dec
mull
rclb
test
movsl
sbb
daa
sti
lods
jge
lods
or
dec
in
inc
push
xlat
jmp
lock
call
jae
test
stc
jge,pn
mov
push
inc
subl
lds
mov
push
data16
cmp
leave
movsb
xor
jo
cbtw
lcall
enter
mov
jecxz
outsl
xchg
rol
xchg
mov
dec
fistps
mov
push
jl
jnp
xor
lods
pop
push
mov
or
pop
mov
push
or
repz
cmp
shll
aaa
leave
pop
pop
sub
pop
or
call
jbe
sahf
cltd
or
sbb
shr
in
aam
xor
lret
scas
push
xchg
ret
xchg
xlat
inc
adc
or
sahf
cmp
std
inc
dec
mov
cvtdq2ps
dec
ja
push
clc
insl
inc
inc
lret
fadds
adc
or
dec
daa
out
xchg
mulb
sahf
and
mov
adc
pop
ss
divl
fdivs
fadd
xor
cmpsl
das
mov
aas
xchg
pop
inc
into
aam
pop
mov
loopne
mov
push
pop
jl
xchg
loopne
aad
jnp
imul
inc
mov
jbe
mov
or
and
icebp
in
ljmp
ja
outsb
mov
xchg
enter
in
cmp
mov
cmp
mov
in
jp
imul
sub
pop
push
clc
icebp
outsb
imul
clc
cli
adc
sub
pop
pop
fcomps
fcmovne
test
cmp
pop
aad
lds
popf
lods
mov
inc
inc
lea
and
push
test
js
aad
pop
jmpw
shr
iret
shrb
adc
mov
das
xchg
and
rcll
stc
loopne
mov
mov
or
lock
mov
mov
cmpsb
jg
ficoml
pop
or
nop
lds
sbb
inc
call
lods
mov
js
add
sldt
sbb
data16
mov
shrb
addr16
sub
aas
adc
fistpl
hlt
xor
pop
jns
mov
and
and
out
ljmp
cmp
xor
ficoml
adc
mov
xorl
push
dec
jle
stc
xchg
mov
sub
xchg
jge
sub
pusha
adc
das
fld
lds
div
clc
sbb
daa
fisubl
xchg
std
loope
dec
lret
mov
addb
into
inc
push
mov
adc
cmp
test
ficomps
les
push
cmc
lahf
imul
clc
leave
xchg
mov
pop
xor
mov
pop
dec
or
sbb
push
jle
push
mov
std
mov
rcrb
mov
fsub
xchg
inc
testl
cmpsl
cmp
loop
jmp
test
dec
outsl
lods
sbb
jmp
xor
aaa
push
jmp
and
jl
addr16
fmuls
pop
push
fbld
mov
add
stos
bound
jl
in
ljmp
mov
sub
pop
mov
loopne
or
mov
insl
mov
xchg
sbb
outsb
shld
data16
adc
mov
sub
sub
jge
adc
inc
lock
cmp
dec
gs
adc
sub
push
aad
sbb
ret
mov
pop
fldcw
mov
pushf
dec
jbe
arpl
xchg
nop
jle
push
cmp
lods
push
xor
push
xchg
xchg
xchg
mov
or
aas
lret
adc
or
xor
and
movsl
mov
lock
loopne
cwtl
std
roll
mov
arpl
outsl
iret
and
imul
sbb
adc
push
fsubr
or
inc
addr16
lea
sub
or
mov
gs
ds
mov
sub
int
add
xchg
pop
add
push
ret
sub
jecxz
mov
and
cli
hlt
mov
push
xor
pusha
sub
adc
ret
leave
push
jb
mov
je
lds
cltd
outsb
aaa
mov
sbb
and
add
daa
add
xchg
mov
jmp
pop
std
scas
xchg
dec
cwtl
insb
mov
insl
int
fstl
test
lahf
fwait
dec
les
leave
call
fidivl
inc
fs
xchg
inc
mov
cmp
or
negl
mov
das
inc
into
cmp
mov
jne
cmpb
out
fadds
rorb
jp
shrl
movb
mov
ret
and
cltd
mov
dec
mov
fstl
dec
cmp
or
xor
pop
pop
pop
in
loop
xor
push
mov
outsb
push
popa
push
into
sbb
adc
les
jb
mov
out
mov
mov
lret
lea
orl
sbb
orl
pop
push
xchg
iret
mov
mov
xchg
das
in
nop
and
adc
insb
dec
cmp
add
shlb
cmp
jo
shll
test
and
sub
and
test
andb
into
xor
shr
sbbb
shrl
mov
pushf
sahf
pop
not
es
sub
cmpsl
xor
cmp
push
jns
xchg
mov
jnp
fstpl
or
jg
xlat
cmp
jge
jp
mov
outsb
shll
dec
repnz
xchg
xor
popa
loop
add
das
xor
clc
repnz
nop
loopw
imul
xchg
mov
jno
jl
pop
mov
lods
lods
mov
ret
mov
mov
ret
inc
mull
mov
xor
add
mov
cmc
ja
dec
enter
loope
xchg
data16
fcmovbe
sbb
arpl
fisttpl
cwtl
or
daa
cmpsl
add
and
inc
aaa
and
aam
or
cmp
test
mov
xor
cmp
push
popa
icebp
test
push
sbb
ds
and
adc
test
data16
loopne
mov
mov
loope
aas
out
sti
xchg
pop
mov
inc
cli
xchg
or
lret
sub
mov
movsl
aam
mov
or
lret
divb
pop
xor
fcoms
out
loope
sbb
add
and
nop
sti
test
ss
das
lea
loop
push
in
mov
into
ss
popa
cmpsb
addr16
and
out
jns
cmp
push
inc
lods
enter
cmp
mov
xor
mov
adc
mov
ss
sub
push
or
push
or
out
lcall
aad
sub
test
movsl
xor
cmpsb
leave
ret
outsl
mov
jae,pn
jge
cmp
ror
jae
and
mov
sahf
sbb
nop
lahf
out
jbe
cmc
ja
js
imul
mov
dec
or
push
aaa
lods
lcall
and
outsb
jle
mov
test
in
push
dec
pop
aas
pop
divl
add
mov
pop
in
sbb
rcl
push
lods
aas
cltd
pop
xor
hlt
cli
push
das
outsb
xchg
daa
out
bound
pop
mov
ja
push
into
iret
test
pop
pop
divl
xchg
fimull
dec
fiadds
addr16
int
lret
pop
xchg
cmpsb
aad
test
pop
sub
mov
inc
and
jae
pop
pop
pushl
push
sub
push
popf
and
inc
and
shlb
outsb
adc
inc
xlat
lret
out
mov
les
mov
sub
loope
aad
dec
imul
jle
js
xchg
je
adc
sub
or
push
mov
icebp
xlat
add
or
and
mov
push
jp
xor
mov
pushf
sbb
cmp
out
mov
out
mov
sub
cltd
and
repnz
xchg
fs
aam
scas
adc
inc
jo
jle
mov
in
mov
cmp
sub
out
sub
dec
rcrb
or
jl
stc
out
jl
fnstsw
lret
jb
xchg
dec
inc
es
ja
pop
inc
insl
out
mov
cs
cmp
jle
inc
xchg
lods
pop
nop
inc
dec
je
jl
rclb
adc
pop
repz
in
mov
and
xchg
adc
jle
pop
stos
out
xor
repnz
lea
mov
pand
popf
xchg
or
rcll
inc
bound
andb
rclb
nop
add
popa
in
sbb
mov
jmp
xchg
or
daa
mov
stos
mov
jmp
and
scas
mov
or
jb
or
jge
insl
push
add
stc
or
mov
in
inc
pop
sub
dec
cltd
push
ds
sbbl
lahf
fwait
cld
iret
or
xchg
sub
lahf
pop
mov
test
jp
imul
pmullw
push
bound
imul
jecxz
mov
or
sub
rol
or
ds
xchg
mov
pop
mov
mov
dec
push
push
aad
mov
cmp
js
inc
sbb
mov
dec
test
lahf
add
mov
mov
add
scas
sub
push
push
mov
jns
lret
pop
sbb
test
sbb
push
or
out
add
cwtl
pop
sub
xchg
mov
jns
js
xchg
aaa
mov
roll
es
stos
xlat
ret
or
cmp
cmpsl
cmp
xchg
pusha
jmp
stos
inc
movsb
lret
push
adc
push
in
mov
stos
addr16
push
adcl
or
test
xor
insl
sub
xchg
mov
nop
sub
je
cmp
ljmp
pop
mov
addb
dec
and
int
movsl
jno
stos
shl
clc
jl
lcall
fists
fwait
int
xchg
jo
icebp
fucomi
mov
mov
insl
pop
sub
mov
repnz
push
push
in
and
ret
hlt
xchg
mov
pushf
out
repnz
xor
insb
mov
push
pushl
adcl
jnp
std
pop
mov
jbe
rcll
decl
leave
ljmp
mov
pop
retw
mov
xchg
adc
faddl
bound
lds
mov
setns
stc
mov
pusha
arpl
xor
pop
mov
loop
or
rol
cmp
xchg
or
sbb
pushf
call
outsb
in
outsb
jge
xchg
xor
mov
cmp
cmp
inc
leave
movsb
xor
sub
push
pusha
mov
ljmp
mov
sub
fisubs
xor
dec
mov
sub
dec
fdivs
pushf
and
push
inc
sub
push
outsl
push
mov
cs
mov
into
mov
fsubl
adc
filds
movntq
mov
sbb
and
xchg
pop
mov
sbb
xor
adcb
loopne
ret
sub
lock
cmp
outsl
mov
insb
cs
mov
fisubrl
push
je
xor
xlat
cwtl
cmp
add
scas
enter
xchg
dec
nop
and
add
inc
into
push
and
stos
cs
lock
lods
int3
and
in
xchg
sbb
cmpsl
push
inc
imull
loopne
push
dec
popf
not
mov
inc
mov
in
or
dec
push
push
cmpsb
xchg
push
movsl
adc
pop
xor
xchg
stos
push
cmp
xchg
mov
aas
pop
dec
add
adc
cld
arpl
popa
test
cld
sbb
bound
mov
inc
icebp
inc
xor
jle
push
mov
or
jno
pop
int3
ffree
outsb
xlat
lret
xchg
sbb
mov
js
das
rol
aad
jnp
jecxz
xchg
lret
insb
xor
jecxz
stc
jbe
cmp
bound
push
imul
mov
cmpsb
pop
xor
in
push
xchg
dec
dec
mov
pop
ljmp
jmp
in
sub
cmp
dec
mov
sbb
xchg
xchg
jns
inc
xchg
leave
pop
sbb
add
inc
pop
sbb
mov
neg
mov
dec
cmc
lods
cmpsl
cmpsl
mov
loopne
arpl
mov
xchg
xor
pop
inc
jmp
mov
jp
outsl
mov
jmp
jnp
inc
lea
add
pop
push
and
ret
pop
out
jle
push
fldz
pop
orl
dec
stc
xor
jecxz
sub
push
pop
sbbl
lods
addl
nop
lods
mov
sbb
enter
out
push
sbb
mov
mov
sub
inc
dec
inc
or
hlt
jle
out
inc
sub
movsl
pusha
daa
dec
cmpsb
int
push
shl
xchg
inc
sahf
int
sub
add
mov
pop
fbstp
and
jle
lods
imul
mov
or
inc
addr16
mov
sbb
adcl
into
incb
popa
bound
cwtl
pop
cwtl
pop
mov
lret
push
push
push
mov
jle
add
pop
inc
mov
xor
jl
mov
loope
xor
mov
and
shr
ja
jecxz
scas
mov
ss
imul
data16
dec
in
insl
stos
adc
ss
cmp
cld
xor
and
sub
loopne
rclb
cwtl
mov
pop
mov
loopne
std
pusha
inc
mov
add
dec
repz
arpl
jle
enter
test
je
movsb
mov
cmp
rclb
test
inc
dec
loop
lret
cmp
gs
pop
add
in
cmp
clc
xchg
inc
pop
cmpsl
push
mov
add
fldcw
sbb
mov
sub
test
iret
xor
adc
sbb
enter
dec
mov
jae
into
xchg
or
pop
or
and
sub
pop
push
mov
js
pop
mov
outsl
sub
jp
mov
xchg
test
mov
dec
mov
dec
hlt
pushf
mov
jmp
je
lds
pop
iret
shlb
cwtl
dec
ss
jae
add
add
cmp
dec
dec
cmpsb
jge
loope
sarb
pop
push
cld
sub
sbb
andb
loopne
mov
mov
roll
adc
jle
mov
inc
sbb
xor
int3
sbb
loope
iret
adc
lret
je
movsb
pushf
ss
inc
adc
xor
in
mov
testl
cmpsl
rorl
xchg
inc
insb
pop
inc
add
std
scas
dec
inc
mov
aad
sbb
sbb
push
adc
subb
or
pop
cmpsb
mov
mov
mov
scas
subl
out
in
lret
pop
xor
out
inc
pop
js
cli
into
lcall
outsb
addr16
popf
xor
mov
pop
mov
stc
repnz
arpl
adc
sbb
push
shrb
xchg
daa
inc
cld
shl
xor
mov
add
adc
xorb
pop
arpl
cmp
dec
pop
xchg
dec
mov
jne
enter
mov
aam
popf
push
in
push
out
xor
mov
or
or
cmp
mov
sub
dec
insl
or
pusha
jle
stc
cmp
lahf
xchg
out
xchg
negb
cmp
stos
dec
adc
mov
push
not
ja
call
rep
jns
leave
cmp
xchg
push
call
in
push
inc
pop
and
push
pusha
jno
std
lods
enter
add
inc
inc
stos
xor
jne
jo
les
xor
xor
pop
push
sbbb
inc
push
xchg
and
mov
cmp
mov
fistl
clc
push
psubusb
mov
test
push
les
subb
jo
jmp
das
or
mov
jo
add
push
cwtl
add
cmpsl
and
jns
daa
std
xchg
jle
leave
lea
sbb
insb
clc
dec
fsubrl
and
sbb
adc
and
sbb
rcr
test
imul
insb
es
dec
clc
xlat
xchg
xchg
xor
mov
adc
cmp
outsl
inc
fisubrs
sub
out
leave
std
mov
push
outsl
cwtl
imul
push
xor
push
mov
mov
jbe
jmp
loop
lret
mov
mov
cli
imul
xor
adc
stc
mov
les
jnp
sbb
and
roll
or
leave
pop
andb
pusha
addl
mov
ret
mov
aam
dec
fmull
insl
js
icebp
hlt
dec
cmp
mov
mov
enter
sub
xor
xchg
fmuls
push
mov
jne
mov
mov
pop
pop
das
add
hlt
sbb
jo
popa
ja
sbbl
jle
sub
test
jmp
bound
je
cwtl
lock
sub
sub
mov
insb
lods
mov
scas
enter
rcrl
test
pop
sbb
repnz
mov
sbb
in
xchg
inc
xor
imul
fimuls
cmc
and
push
shll
cmp
sti
sahf
sbb
adc
mull
push
push
cmp
loopne
mov
jle
jne
mov
or
daa
cld
xlat
pop
imul
xchg
xchg
imul
xchg
negb
pop
scas
mov
xor
lret
inc
or
out
lcall
dec
inc
lock
mov
xchg
sti
cmp
mov
test
repnz
add
pop
cli
imul
cmp
movsb
hlt
imul
jae
sti
pop
sbb
and
adc
je
push
sub
loop
push
out
test
pop
sbb
aaa
push
outsb
jne
andb
shlb
xor
arpl
push
xor
fldcw
jnp
adc
mov
xor
notb
sub
xlat
fwait
or
mov
sbb
mov
pop
aam
test
in
sbb
lods
mov
xlat
stos
movsl
dec
out
es
jb
push
out
inc
out
adc
push
mov
cld
push
std
lret
mov
mov
xor
loop
dec
lahf
xchg
fbstp
outsl
inc
xor
xor
stos
sbb
adc
pop
outsb
and
mov
gs
mov
adc
popa
das
lret
addr16
adc
das
loop
sbb
pushf
mov
insb
orb
jp
jnp
mov
cmpsb
pop
imul
mov
push
pop
in
cmpsb
adc
add
jg
mov
mov
pop
adcl
pop
jns
push
xchg
test
xchg
mov
sti
add
dec
push
mov
jmp
xchg
lea
mov
dec
xchg
ljmp
imul
mov
and
or
or
shll
mov
fldl
shrb
and
test
pop
out
adc
movsl
jge
jl
inc
dec
prefetch
cld
jle
cmp
xchg
inc
dec
sub
ljmp
imul
mov
cwtl
in
jmp
js
mov
push
fcmovnb
xchg
xchg
sub
dec
popa
scas
cmc
out
movsb
cmp
inc
scas
stc
sahf
cmpsb
xchg
scas
xor
cmp
sti
or
sub
in
xchg
adc
xor
add
jne
js
decl
jno
xor
lea
add
jg
mov
cltd
and
pop
fpatan
and
in
lahf
inc
cs
rorl
cli
sbb
loope
sahf
lods
jnp
fldenv
push
mul
aad
shll
dec
mov
das
add
clts
scas
mov
mov
mov
and
mov
sbb
jmp
dec
mov
nop
movsb
sbb
enter
dec
xor
dec
cmp
and
sub
stos
fs
mov
cmc
rcll
out
out
movb
fidivrs
into
pop
sub
stos
test
xor
out
daa
fidivrl
pop
imul
ss
iret
inc
mov
lret
scas
and
and
mov
scas
push
pop
mov
jp
cltd
mov
inc
pop
in
mov
fildll
pop
and
adc
lods
pop
push
sub
mov
jle
insl
dec
shrl
pop
shll
shl
mov
cmp
test
adc
pop
ljmp
pop
adc
push
ljmp
in
int
mov
ret
push
mov
jg
leave
rclb
sbb
xchg
test
daa
shll
or
mov
and
xchg
cmc
xchg
xchg
pop
in
test
pop
mov
fnsave
push
push
or
push
sbb
mov
icebp
xchg
loope
and
outsl
lods
push
push
je
iret
scas
sti
lcall
jle
lds
push
sub
cmp
sbb
loopne
cs
push
xchg
jno
loop
mov
test
fnstsw
sub
outsb
dec
mov
lret
jns
ja
push
dec
adc
in
arpl
or
xchg
add
or
mov
leave
pop
mov
in
and
aaa
pop
dec
in
dec
and
into
andb
dec
mov
cs
je
adc
cld
sub
fmul
xor
sbb
sbb
fdivl
adc
jno
mov
push
mov
pushf
inc
adc
fldl
cmp
shll
inc
mov
adc
hlt
cltd
or
push
push
popa
divb
dec
out
div
lcall
ds
inc
loop
icebp
test
mov
xlat
flds
dec
pop
loop
push
inc
rcll
les
daa
xchg
jg
shll
cmp
scas
cltd
rcll
clc
adc
and
push
add
pop
mov
mov
sub
lcall
stc
daa
ljmp
outsb
pop
sbb
ljmp
in
fsubr
sub
push
push
call
push
pop
pop
pop
lock
inc
data16
lahf
inc
mov
aam
sub
push
xlat
mov
push
mov
mov
std
mov
pop
jmp
hlt
scas
ret
cmp
cmp
insb
imul
aaa
fcomp
lcall
mov
loopne
sahf
out
ret
shlb
mov
or
jp
lcall
push
jb
sti
or
and
orl
or
ljmp
sbb
jnp
lds
popf
cmp
neg
pop
ljmp
or
push
push
add
je
pop
dec
adc
addr16
popa
out
fisttps
int
pop
and
sub
addl
adc
pop
test
push
pop
shlb
fucomp
outsl
es
xor
push
cwtl
int3
ret
push
pop
sub
mov
fisttps
fidivrs
jge
into
sub
mov
aam
inc
sbb
repnz
lods
movsl
das
aaa
int3
in
push
pop
rclb
mov
push
out
inc
mov
les
cld
mov
inc
es
mov
inc
loope
cli
fistpll
arpl
inc
addr16
pop
pop
jno
insl
dec
imul
jmp
mov
or
lods
daa
addr16
mov
sbb
sbb
mov
out
arpl
jbe
mov
dec
inc
cltd
ds
daa
push
sub
rclb
insb
sub
gs
stos
push
jecxz
pop
mov
pop
jge
mov
dec
add
add
cmp
orl
or
scas
jp
jbe
imul
and
mov
scas
adc
dec
mov
clc
cmc
sbb
mov
pop
divl
mov
fldenv
int3
push
xor
or
sub
mov
dec
mov
lea
cmp
fidivs
insl
out
add
out
movsb
rclb
adc
movsl
jbe
cltd
push
mov
mov
faddl
fwait
test
stos
pop
adc
and
cmpsl
jnp
stc
int
in
icebp
xor
mov
jg
mov
loopne
lret
in
sarb
repz
inc
movsb
popf
inc
and
mov
icebp
cwtl
xchg
or
aaa
scas
fnstenv
cmp
cmp
and
jo
in
add
lgs
push
or
cmp
sub
mov
jns
stos
mov
sub
adc
mov
sub
sbb
xlat
push
stc
notl
daa
jo
jg
dec
shl
cs
inc
test
jle
outsb
jge
js
fistpl
test
aam
decl
mov
push
cmp
push
xor
adc
lea
push
lahf
call
mov
and
adc
jns
push
fdivrs
cmp
sbb
in
movsb
jg
or
arpl
add
jmp
stc
sub
mov
push
cltd
xor
sets
jo
push
sarb
int3
loopne
call
push
out
or
xchg
inc
push
sbb
and
out
xchg
scas
lret
push
push
rcrb
sahf
inc
push
hlt
pop
movsb
inc
jge
cmp
mov
inc
popl
jo
pop
xor
mov
mov
dec
mov
pop
ljmp
jnp
sbb
imul
jl
pop
lods
stc
xchg
adc
repz
xor
in
adc
mov
dec
imul
sub
dec
aaa
ror
fwait
jl
lock
jmp
or
adc
scas
lahf
hlt
jl
les
push
pop
test
addr16
stos
mov
push
mov
xchg
inc
sub
sbb
inc
mov
and
sub
xor
testb
xchg
aam
clc
cmp
into
push
xchg
stc
and
out
dec
adcl
sub
rclb
mov
out
divl
lcall
leave
sbb
add
sbb
outsb
fs
inc
adc
aaa
mov
lods
cld
inc
pop
loopne
sub
lret
xchg
xor
cmp
sub
inc
shrb
pusha
call
movb
add
lock
enter
push
inc
outsl
hlt
sbb
and
sbb
mov
mov
push
test
jae
rcr
sub
fsubrl
stos
cli
ja
sahf
jne
imull
mov
push
out
rcll
notl
cmp
bnd
mov
inc
cmp
inc
aas
inc
jno
inc
jecxz
repz
pop
add
outsl
mov
sub
xor
in
lds
mov
add
dec
mov
testl
mov
and
mov
or
inc
sahf
pop
mov
sub
mov
in
insb
pop
stc
xchg
or
push
sub
dec
lods
sbb
adc
gs
pop
leave
in
movsb
adc
sahf
or
add
pop
inc
out
inc
sbb
fwait
and
pop
push
ss
outsb
ret
add
push
mov
aas
xor
cmc
or
faddl
adc
pop
div
and
in
dec
xchg
cmp
lods
mov
nop
mov
push
adc
cld
jno
les
jmp
dec
push
push
pop
or
loopne
stos
jne
repz
fdiv
mov
stos
cmp
leave
pop
stos
sbb
adc
ss
sbb
xchg
cltd
aaa
cmp
jle
test
call
lret
je
js
std
ss
mov
shlb
push
sbb
sahf
inc
call
sub
add
mov
js
data16
fists
jle
imul
test
pop
stc
inc
bound
inc
mov
push
mov
mov
push
add
cli
xor
xchg
call
sbb
aad
add
xchg
nop
sbb
xchg
mov
dec
mov
scas
mov
push
mov
mov
hlt
add
pop
and
sbb
xchg
js
xchg
daa
in
das
mov
mov
gs
int
and
adc
mov
push
pop
mov
jns
lods
adc
fisttpl
sti
mov
push
mov
dec
cmpsb
cmp
in
addr16
jbe
sarb
mov
push
inc
ja
ret
in
shlb
mov
mov
loopne
mov
cmp
pop
push
jb
mov
cmpb
sbb
dec
ja
xor
lods
int3
dec
cltd
mov
or
pop
mov
dec
mov
add
jmp
sahf
inc
pop
hlt
pop
jbe
add
jecxz
rcll
out
mov
push
call
xorb
xchg
mov
aas
push
aad
mov
pop
daa
add
sbb
xor
push
rcr
insb
sar
mov
ret
cmp
pop
xor
pop
mov
adc
add
leave
inc
sarl
xor
jbe
ret
roll
dec
ss
iret
or
mov
sbb
nop
or
add
mov
loop
or
scas
rcrb
add
lcall
bound
ja
int
sbb
fdivrs
mov
or
mov
std
nop
mov
out
jmp
dec
mov
mov
mov
sbb
scas
cmpsl
bound
stos
loope
out
ret
mov
jbe
xchg
lods
nop
sub
add
icebp
and
and
cmp
lcall
sbb
or
jl
push
cmp
and
cmpsb
lret
mov
pop
xor
jge
jno
imul
adcl
cmp
xchg
push
xor
shll
and
jmp
cld
add
adc
daa
inc
sbbb
dec
dec
leave
jno
mov
stos
push
pushf
mov
dec
dec
aaa
loop
test
push
push
f2xm1
hlt
insl
shll
lret
push
inc
cmp
outsb
sbb
test
icebp
stos
pop
sbb
adc
mov
dec
add
adc
adc
cmpsb
add
dec
popa
int
test
stc
inc
add
jo
xchg
out
test
fiadds
pop
mov
sarl
test
xchg
xchg
aas
ret
xlat
in
mov
inc
aas
xchg
push
sbb
lods
push
popa
std
mov
out
stos
test
mov
pop
mov
test
jae
ret
push
idivb
inc
sbb
add
les
popa
pop
ja
fwait
dec
or
cwtl
fsub
pop
sub
inc
sub
les
test
ret
mov
push
call
loopne
loope
lret
inc
rcrb
jl
cld
inc
cmpsb
bound
adc
mov
mov
pop
or
outsb
adc
fs
xchg
push
jmp
inc
imul
daa
repnz
xchg
test
adc
pop
add
cmc
fwait
sbb
into
xchg
mov
es
cmpb
mov
cwtl
mov
xchg
lret
in
jp
fs
call
xor
fs
hlt
mov
add
in
scas
mov
cltd
and
pop
mov
mov
sarb
inc
ja
adc
lock
adc
addr16
xlat
aad
mov
mov
xor
cmp
pop
inc
scas
call
aad
jo
xlat
adcb
cmp
js
repnz
mov
push
mov
or
mov
dec
or
xor
push
js
in
into
ds
aad
ret
dec
mov
mov
pushf
and
mov
xchg
mov
fcmovnbe
fadds
mov
cltd
lcall
mov
mov
xor
and
sbb
stc
dec
das
mov
sbb
mov
mov
shrl
imul
iret
sbb
mov
loop
xchg
mov
push
in
shlb
and
addr16
mov
or
push
je
in
mov
es
xchg
mov
sub
push
mov
mov
ret
add
jmp
add
dec
cmpsb
cmp
stos
mov
dec
ljmp
xor
jne
mov
dec
sbb
loop
gs
aaa
jmp
mov
mov
push
popf
scas
aas
fsubrs
mov
scas
sub
and
and
stos
fs
into
insl
dec
sub
subl
int3
or
fsubl
icebp
stos
outsb
sub
vstmxcsr
mov
int3
out
int
mov
push
lret
test
dec
and
shrl
aam
add
inc
push
lcall
sub
cli
lods
add
out
in
fwait
mov
imul
int3
pop
push
add
ljmp
adc
pusha
lret
sub
inc
shll
lds
mov
scas
in
jge
loop
sbb
xchg
jns
and
cwtl
lock
push
jnp
jp
dec
ds
popf
test
rcll
cmp
jae
jnp
dec
popf
mov
imul
out
or
insl
into
xor
testl
xor
inc
ds
xor
mov
pushf
loopne
push
shrb
lret
pop
mull
fsubs
push
add
dec
pop
xor
jo
inc
popa
pop
inc
ficompl
xor
lea
add
in
xchg
xchg
dec
inc
sbb
pop
aam
lods
ret
leave
jp
cld
adc
arpl
pop
and
or
mov
mov
jnp
xchg
mov
cli
ficompl
dec
xor
xchg
xchg
pop
out
int3
sub
fwait
loope
iret
push
or
adc
movsl
adc
cmp
xchg
outsl
or
cmpsl
js
sbb
adc
sti
add
jmp
push
cmpsl
or
jge
sub
xlat
fnstcw
cld
dec
sub
out
push
cmpsb
mov
cmpsb
dec
mov
mov
call
fcoms
int3
dec
dec
ret
lea
out
jge
push
mov
popa
mov
xor
push
cmp
pop
and
fwait
adc
int
repz
sub
js
sarb
je
stos
sub
xchg
push
jno
iret
pop
ss
out
push
loope
push
jg
add
repnz
or
push
ret
push
cmc
mov
subl
and
and
xchg
stos
pop
jmp
mov
movsb
test
out
aas
inc
lods
pop
fimull
outsl
sub
mov
push
sbb
cmp
sub
popf
ja
pop
dec
xchg
jmp
ret
push
hlt
sbb
addl
inc
sarb
or
push
xor
lret
outsl
add
fwait
mov
mov
out
push
std
push
fiadds
jp
sarl
push
std
cmp
fsubr
je
lret
xchg
jne
lret
test
addb
mov
arpl
out
call
xor
daa
in
call
mov
stos
inc
jecxz
arpl
pop
iret
pop
sub
clc
loop
out
mov
sub
ret
jle
das
jecxz
jb
sbb
cli
cmpb
xchg
and
imul
jns
mov
sub
mov
push
idivl
jg
clc
movsl
mov
cld
das
push
xchg
js
fsubp
cmpsl
bound
inc
sub
icebp
xchg
orb
mov
inc
addr16
mov
pop
out
scas
es
dec
xchg
xchg
add
cmp
cmpsb
sbb
fisubs
jns
or
bound
mov
jo
jp
or
leave
js
shlb
jge
cltd
sbb
jb
sbb
aam
lcall
mov
int3
aad
add
inc
daa
sbb
pop
xchg
push
inc
sti
or
dec
push
pop
pop
add
addb
mov
leavew
aam
dec
dec
lcall
aam
pushf
or
push
jg
repz
mov
push
outsb
push
sub
add
or
out
enter
pop
push
test
add
xchg
adc
push
cmp
push
and
decb
ss
sti
test
jg
outsl
mov
testb
mov
jno
call
cli
lods
jp
mov
insb
ljmp
gs
push
shlb
out
sahf
pop
cld
std
test
adc
mov
lds
and
push
cwtl
loopne
inc
jmp
cmc
into
aaa
mov
data16
cmp
fadd
fsubr
push
pop
inc
mov
loopne
jne
xchg
stos
mov
xor
lds
lcall
dec
aam
ja
inc
ret
fsubrl
xor
imul
or
mov
jmp
lods
lea
dec
inc
popa
lcall
fsubrs
inc
dec
pop
inc
mov
lahf
jg
out
mov
inc
dec
lahf
push
pusha
adc
and
or
xor
es
xchg
loopne
add
xchg
add
cmp
jg
inc
xchg
dec
das
int3
sbb
cmp
aam
dec
and
out
pushf
outsl
les
jl
rorl
jecxz
push
mov
bound
scas
popa
scas
mov
cli
jecxz
push
sbb
cmp
bound
cltd
lea
mov
rolb
dec
push
fcmovnu
cwtl
das
or
xor
sbb
sub
cmp
fcoml
jp
sti
or
test
and
insb
mov
push
cmp
or
sub
loop
repnz
pop
jo
test
pop
sarb
inc
lds
jle
int
andb
cwtl
push
pusha
jle
jecxz
testb
mov
cmp
inc
in
pop
sub
jnp
nop
mov
lods
xlat
repnz
into
add
mov
in
adcl
es
cmp
jo
lds
inc
inc
jne
out
test
sbb
adc
ds
sbb
daa
sub
flds
les
test
es
push
sbb
jle
adc
mov
repnz
push
pushf
dec
inc
out
pop
cmp
mov
ss
inc
cmp
dec
call
pop
xor
aad
ds
xchg
sbb
and
sar
inc
rcrl
out
dec
in
cwtl
mov
jl
sub
pushf
or
in
clc
push
loope
lds
sub
cmp
mov
addr16
cmp
int3
lea
pop
mov
int3
mov
in
pop
fdivl
and
fidivrl
pmulhw
adc
mov
inc
sub
pop
xchg
cs
xor
mov
fcoml
sbb
ret
xchg
cltd
dec
xor
test
stos
fldenv
repz
mov
cli
jae
push
sahf
sub
mov
je
dec
lods
bound
in
jne
lods
fistl
stos
shrb
dec
nop
add
movsb
lds
imul
xor
scas
and
jl
jbe
pop
insl
jge
nop
and
add
add
sbb
aas
lea
in
scas
xchg
pop
stc
or
scas
call
dec
sbb
mov
cld
mov
js
jle
push
filds
rol
aam
loop
dec
in
cli
jb
int
fs
movsl
outsb
bound
pusha
push
mov
sti
mov
jne
dec
mov
push
sub
and
push
jmp
adc
insb
cmc
std
fldt
mov
cmc
sub
mov
ret
outsb
nop
mov
add
push
dec
lret
mov
outsl
scas
movsb
repz
xorb
adc
push
and
jmp
push
rolb
add
jnp
mov
movsb
lcall
xor
inc
lds
lcall
imul
push
sahf
or
adc
xchg
xchg
data16
xor
jo
cltd
ret
xor
sub
xchg
and
movsb
cmp
cli
jnp
insb
jp
addr16
push
pop
pusha
jo
mov
ja
adc
adc
sbb
cs
cmpsb
mov
push
pop
pusha
and
fimull
jecxz
adcb
jne
les
cwtl
fwait
adc
cs
andb
xchg
dec
jg
fnstenv
in
imul
push
xchg
jb
xchg
mov
aaa
adc
mov
dec
add
inc
cltd
loop
outsb
and
hlt
push
push
repz
cmpsb
mov
dec
jo
push
push
or
cmp
adc
push
movsb
iret
data16
out
fmull
iret
ffree
dec
jp
pop
out
mov
js
scas
or
mov
sti
ficoms
add
sti
test
lahf
sbb
jge
and
rcl
sar
push
enter
sub
rorb
in
ret
sub
faddl
cs
pop
js
xchg
mov
in
popf
dec
movsw
stos
or
out
leave
js
jmp
clc
fwait
push
pusha
loop
sbb
fwait
lahf
mov
pop
inc
mov
xor
imulb
xor
ret
test
cmp
aaa
jb
jns
test
mov
out
repz
or
loop
pop
add
popl
mov
xchg
xchg
mov
jp
sbb
movsb
and
sti
pop
lock
fisttpll
or
fcomi
nop
xchg
sub
push
inc
add
cmpsl
push
push
pop
cmp
aas
pop
adcl
shlb
into
adc
inc
mov
fst
lods
cmp
lods
rcrb
or
jo
mov
fs
lds
pop
adc
cmc
mov
pop
in
ret
dec
push
clc
xchg
pop
rcll
stc
adc
push
and
mov
sub
inc
sar
push
adc
dec
cwtl
push
lcall
jno
push
cmp
loopne
mov
lea
jno
xchg
in
inc
in
jp
lds
sub
sbb
subl
sbb
and
icebp
insb
and
imull
xor
jge
push
insb
fwait
dec
inc
outsb
inc
add
loop
dec
jbe
jecxz
out
ljmp
mov
and
stos
push
xor
pop
mov
push
das
leave
xchg
jmp
outsb
cld
outsb
fs
or
aad
pusha
test
mov
jnp
nop
cmpsl
in
sbb
repnz
jmp
out
stc
bound
movsl
cmpsl
fsts
cltd
push
xchg
rclb
xor
in
sbb
cmp
push
in
into
inc
out
leave
sbb
sub
cwtl
filds
pushf
lea
push
adcb
pop
lods
dec
shlb
imul
popa
or
dec
add
push
adc
push
sub
stos
fwait
cmp
pop
xchg
and
loopne
imul
sub
daa
jmp
pop
mov
cmp
int
sbb
icebp
push
fstl
addb
jmp
pop
pop
movsb
fsubrs
mov
out
pushf
add
jno
fs
mov
movsl
xor
and
ret
xor
cmpsl
ret
loop
enter
pop
pop
hlt
aad
sub
shlb
mov
sbb
sar
out
inc
dec
aaa
push
mov
jns
mov
push
aad
push
or
repnz
dec
dec
fcompl
lds
sarb
sahf
ret
push
mov
aas
sub
cld
lret
cmp
mov
inc
clc
sbb
cltd
mov
add
xchg
scas
ljmp
inc
jne
lock
and
subl
in
xchg
int3
and
imul
in
push
in
fs
or
add
movsl
jg
mov
movsb
mov
ficoml
jns
enter
push
sub
xchg
add
fcomps
mov
mov
pop
add
scas
jno
inc
mov
iret
jmp
jg
add
mov
scas
fistpll
cmpsl
inc
imul
in
cmp
cmp
aam
cmp
scas
jmp
dec
insl
xchg
inc
add
adc
pop
in
repz
and
xchg
inc
lcall
jp
fnstsw
pop
xor
jmp
pop
sbb
xchg
push
or
fwait
sub
int3
or
inc
mull
mov
add
rorl
cltd
sub
test
xor
xchg
inc
scas
mov
push
rclb
ss
stc
clc
xchg
into
push
pop
test
mov
xlat
mov
and
adc
push
rorb
mov
cld
add
fwait
insb
mov
lds
jmp
and
cmp
in
push
aas
mov
fs
mov
pop
pop
push
or
outsl
in
pop
xchg
and
out
sbb
lds
pusha
pop
mov
cmp
daa
jge
push
sti
popa
loope
push
xchg
fsubp
push
lcall
lret
sub
cli
test
cs
add
arpl
aaa
cmp
gs
out
cmp
cltd
mov
pop
pushf
jg
orl
fimuls
ret
xchg
sub
push
xchg
jge
clc
loopne
jae
push
sbb
and
xchg
cmpsb
and
in
push
push
adc
cmp
decl
loope
xchg
lret
mov
sub
rol
cld
icebp
flds
clc
icebp
sub
dec
lea
jg
lds
popf
icebp
push
push
inc
xchg
sbb
vmwrite
inc
jns
pop
rcrl
and
jl
stos
add
jle
sub
push
jo
xor
inc
mov
xor
les
es
push
stos
sbb
mov
inc
cs
mov
jg
xor
movsbl
push
pop
shrl
ret
hlt
fisttpll
roll
sub
and
mov
pop
aaa
lea
xchg
add
inc
mov
lds
inc
push
in
pop
sub
mov
les
push
btc
sbb
leave
lock
or
push
xor
sub
loop
pop
gs
push
pop
loope
js
sbb
push
stos
push
rolb
fcmove
lock
test
xor
test
mov
mov
shll
jae
jb
popa
nop
jne
bsr
adc
lret
adc
scas
jo
test
push
inc
movsl
sub
data16
leave
fisubrs
fistpll
sub
movsb
mov
cmpsb
push
std
push
subl
add
icebp
add
data16
mov
cmp
cli
scas
aas
sbbb
test
lea
addr16
push
lret
push
js
fstpt
cmp
int3
ret
js
sahf
push
fwait
std
jecxz
adc
add
cld
dec
add
sbb
std
add
xlat
jmp
out
xchg
test
sub
pop
inc
inc
jnp
xor
inc
or
dec
bound
push
lods
gs
jecxz
fldenv
mov
inc
add
pushf
mull
ret
mov
leave
les
push
sub
jne
scas
dec
and
mov
xchg
repnz
rolb
inc
xchg
cwtl
mov
xchg
lretw
sub
add
and
mov
adc
and
push
jnp
bound
pop
mov
gs
fwait
mov
jmp
in
test
add
in
dec
push
xor
inc
push
sbb
or
bound
add
lock
cmp
test
repz
mov
orb
and
andl
aaa
repnz
stos
jmp
aad
jno
inc
or
les
xor
jg
adc
pop
lds
aas
ret
ds
popa
cmp
loopne
pushf
bound
jg
ret
dec
outsb
push
rclb
cmpsl
and
pushf
repnz
mov
xor
stos
jmp
nop
xor
sti
lahf
mov
sbb
jp
mov
mov
mov
push
enter
into
sti
leave
out
push
and
pop
push
lret
jmp
aas
int3
mov
sbb
pop
bound
sbb
mov
insb
jecxz
bound
jb
dec
adc
out
in
pop
scas
loope
xlat
mov
dec
cmpsb
aam
in
xor
shlb
mov
or
sbb
test
add
dec
enter
aam
mov
jbe
mov
dec
sub
lods
lods
mov
ss
add
insl
leave
testb
push
fldt
in
stos
xchg
push
mov
mov
mov
sbb
iret
hlt
mov
pop
xor
pop
jecxz
push
in
or
cli
cmp
xchg
inc
ljmp
mov
or
addr16
sarl
mov
mov
cmp
dec
sbb
jne
jg
cmp
fs
mov
int
sbb
dec
ret
sbb
popf
test
jp
push
fidivl
out
xchg
mov
rorb
mov
and
movsl
gs
es
aas
jnp
adc
imul
pop
or
shlb
pop
lahf
icebp
call
repnz
pusha
push
add
push
or
cmp
dec
fwait
inc
repnz
test
scas
xchg
std
pop
cmp
jmp
and
das
aam
shrb
pop
mov
scas
pop
fucomi
test
mov
in
fildl
pop
stos
xor
fdivp
push
in
pop
shlb
loopne
jle
das
dec
call
mov
inc
stc
push
pusha
push
out
movsb
dec
bnd
repnz
inc
clc
pop
mov
mov
popa
lds
jge
mov
imul
testb
fcompl
pushf
jg
push
adc
stc
ds
pop
add
bound
cltd
cmp
cmp
ficoms
jb
mov
fldl
aam
jo
cld
jl
inc
icebp
popa
mov
fbstp
fwait
xchg
imul
lahf
cmpsl
cmp
mov
push
test
mov
inc
xchg
pop
push
jb
push
add
sub
clc
xchg
imul
pop
jmp
mov
adc
sub
cmp
sub
inc
sarl
jecxz
pop
imul
fstpt
cld
jb
out
or
int
jg
inc
mov
dec
jmp
fs
repz
pop
push
sbb
cli
xchg
shl
mov
xchg
mov
stos
adc
inc
sbb
or
sbb
cmp
enter
mov
sbb
pop
push
add
repnz
pop
test
enter
or
iret
inc
ret
mov
sub
xchg
mov
add
add
dec
test
fdivrs
int
sbbl
test
mov
data16
inc
movzwl
and
push
or
jne
inc
fs
lahf
adc
push
xchg
sbb
adc
mov
repz
or
mov
das
mov
sub
sub
sahf
jl
out
sbb
inc
mov
call
mov
roll
adc
inc
sbb
pusha
outsl
push
dec
lret
divl
xor
mov
mov
imul
mov
inc
xlat
and
fists
imul
and
xor
lret
mov
movsb
mov
cli
jle
fsubs
inc
dec
outsb
mov
sti
mov
xlat
adc
inc
xchg
mov
ja
call
add
sub
cmp
push
sbb
sub
lret
movsb
inc
sbb
cmp
push
adc
or
pop
pop
scas
cmpsl
inc
push
lods
paddusb
sub
cmp
and
mov
xor
jae
sbb
xor
adc
test
lret
mov
sbb
jecxz
into
mov
and
jp
sub
lods
js,pn
cld
and
cli
add
test
int
leave
inc
adc
das
inc
pop
inc
cmp
mov
inc
pop
out
pop
dec
jns
push
push
xchg
pop
mov
push
out
and
cwtl
dec
pop
jp,pn
int3
aas
aam
lahf
jmp
out
flds
adc
in
lods
mov
cmpsl
jl
push
sub
es
mov
cmp
sub
aam
push
jns
testl
and
jno
sbb
sbb
hlt
sbb
or
lahf
jl
push
adcl
sti
popl
pop
clc
xchg
xor
dec
adc
pop
mov
shll
sbb
aas
inc
cmc
mov
mov
bound
lea
jb
stc
out
idivl
lock
mov
mov
jle
sbb
pop
lret
in
ffree
lcall
ljmp
sbb
mov
adc
mov
outsl
call
cs
fs
pop
std
scas
out
adc
rcll
fimuls
dec
xchg
loope
pop
mov
rcll
cmpb
xchg
push
mov
clc
xor
xchg
adc
test
adc
sbb
cmc
in
pop
stos
xchg
add
sub
pop
pushf
es
mov
sbb
pop
cmp
das
aas
push
mov
sti
pop
mov
incb
in
xor
inc
lea
je
stos
shl
xchg
enter
sbb
or
adc
or
cmp
inc
pop
fsubl
xor
shl
sbb
mov
inc
adc
adc
push
add
jle
daa
cmpsb
and
scas
sub
sahf
inc
shrl
icebp
jmp
dec
sbb
mov
subb
mov
push
lods
cmp
add
test
mov
dec
mov
lahf
push
stos
std
sub
es
lock
mov
mov
jp
push
sub
movsl
adc
iret
inc
mov
and
mov
lods
iret
pop
std
push
mov
pop
imul
cmpsl
std
ljmp
sbb
xchg
push
gs
jns
sahf
mov
faddl
add
inc
xor
mov
cltd
repnz
dec
jmp
jo
dec
and
sub
mov
mov
adc
jbe
pop
lock
mov
adc
cltd
sbbl
inc
cmp
push
ljmp
mov
jmp
or
fisttps
cmp
enter
test
rorb
or
adc
mov
pop
add
ret
and
int
xor
xchg
jns
push
cmp
in
lahf
leave
bnd
fldcw
insl
ds
pop
aam
imul
int3
rcrl
cs
push
push
mov
add
lods
push
and
insb
subl
pop
pop
inc
jb
loop
pushf
lock
mov
nop
xchg
cli
adc
jnp
outsl
shll
into
xchg
int3
xchg
xchg
insl
dec
pop
mov
pop
add
es
loope
scas
cmp
add
mulb
lods
mov
mov
pop
fdivrp
sti
sub
arpl
push
and
xchg
frstor
in
movsb
mov
mov
lret
or
test
jle
lods
pop
aad
lds
dec
and
xor
pop
roll
cmp
xchg
mov
cmp
xchg
cmp
jge
push
xchg
xchg
daa
frstor
or
rcrl
mov
and
scas
movsb
in
out
jne
add
stos
scas
insb
out
push
ds
fisttpll
sti
test
aam
testl
mov
inc
cli
ja
sbb
movsb
gs
mov
push
xor
sbb
test
adc
lods
jge
jns
adc
dec
push
cs
lcall
leave
mov
imul
pop
jge
loope
mov
test
insb
rorl
lods
mov
js
cmp
push
jae
cli
sub
vshufps
jb
cltd
adc
xor
adc
push
insb
popl
ljmp
jns
rcl
pop
or
lods
cld
hlt
jp
in
fnsave
add
push
hlt
in
scas
stc
mov
and
or
sbb
sbb
in
push
inc
adc
pusha
dec
adc
jge
call
adc
cltd
ljmp
pop
hlt
leave
lds
mov
cmp
sbb
je
push
pop
popa
sarb
push
or
jb
pop
out
adc
aas
jge
out
gs
orb
dec
out
loope
pop
lea
mov
or
std
cmpb
ret
or
push
lcall
mov
push
jge
mov
mov
arpl
in
pop
push
jb
ret
int
mov
jmp
mov
aam
test
adc
jge
fstps
sbb
jns
mov
fisubrs
das
stos
push
iret
dec
sahf
sbb
mov
test
fbld
jge
mov
jg
stos
cmp
pusha
mov
cli
sub
mov
jno
xchg
jp
test
add
rorl
lret
mov
add
call
cmp
jecxz
pop
push
stos
pop
push
sbbl
leave
sbb
xchg
imul
imul
idivb
pop
inc
push
sbbl
jb
test
int3
sub
xor
push
xchg
je
dec
sbb
xor
in
sub
lcall
adc
mov
jo
rcrl
faddp
fisttpl
cli
mov
inc
enter
outsl
jl
push
shrb
xchg
je
cmp
xor
xchg
cmc
jb
cli
pop
cmp
jns
cs
fwait
ret
jmp
mov
ss
jne
out
mov
sbb
pop
dec
pop
dec
pop
xor
fnsave
in
pop
mov
scas
inc
out
ljmp
jo
sbb
call
test
jnp
cmpb
pop
hlt
jo
and
aam
mov
xlat
push
mov
cld
shl
out
mov
jnp
rclb
pop
movsb
cmc
ret
daa
xchg
lds
ds
outsb
insl
xor
fwait
xor
inc
mov
fsubp
push
in
sub
cmp
add
lahf
lock
cmp
and
addb
and
mov
icebp
adc
mov
repz
arpl
dec
adcl
inc
or
icebp
mov
pop
push
cmp
ret
or
or
adc
bound
dec
and
cmp
lcall
fcmovnb
cli
js
shl
int3
add
cmp
outsl
jmp
jge
popa
stos
hlt
xchg
inc
and
ss
dec
xor
sub
test
jmp
faddl
in
mov
sub
leave
lret
xor
push
lret
movsl
sbb
xor
adc
and
xor
neg
push
inc
xchg
lahf
xchg
leave
push
pushf
divl
cmpl
call
jno
cld
ret
cli
mov
in
cld
sbb
mov
scas
lret
cmp
xchg
fisubs
iret
lret
out
cmp
sbb
jae
cmp
mov
and
insl
in
mov
xchg
fwait
mov
add
push
movsl
es
mov
pop
dec
popf
mov
push
stc
addr16
outsl
cmp
push
and
mov
pop
jmp
dec
lds
hlt
leave
xchg
jns
adc
shrb
or
dec
fldl
imul
sub
jp
adc
iret
sbb
mov
mov
jo
mov
mov
outsl
add
popa
shlb
mov
push
add
movsb
xor
add
xchg
adc
mov
sbb
bound
ljmp
jg
mov
push
in
push
test
orb
inc
movsb
call
ja
add
mov
orb
stos
sbb
imul
mov
fcomip
ds
xlat
aaa
mov
inc
mov
pushf
dec
xor
add
xchg
mov
sbb
sbb
cmp
jno
jl
sti
mov
push
shlb
xlat
lret
scas
pop
fidivs
cmc
sbb
stos
xchg
jecxz
cld
mov
cmc
insl
xchg
shll
push
cmp
dec
push
movsl
jp
add
sbb
mov
mov
test
sbb
mov
out
push
mov
and
add
lcall
dec
pop
mov
or
pop
int3
das
mov
add
sahf
rcl
cwtl
sbb
into
add
sub
xchg
dec
dec
cmp
fadd
mov
mov
or
imul
or
sbb
and
outsb
push
outsl
mov
xchg
and
std
aas
jne
lret
ret
cli
pop
call
lods
int3
fidivs
add
arpl
ret
push
and
inc
pusha
mov
repnz
movsl
test
and
jle
test
and
stos
lock
jb
jnp
adc
repnz
push
or
addl
xlat
imul
mov
xchg
add
mov
mov
iret
cli
jae
add
jp
mov
movsb
jge
je
outsb
repnz
pusha
lahf
xchg
leave
xchg
inc
cmp
insl
push
adc
aas
outsb
xor
lods
js
iret
pop
and
push
xor
or
sbb
pushf
outsb
xchg
stos
cmp
jo
or
cltd
pop
movsb
pop
lret
adc
aad
repz
push
inc
add
push
stc
pop
sub
or
test
adc
stos
mov
sbb
mov
dec
in
mov
or
out
sti
jle
sbb
repz
and
orl
or
push
dec
push
cmpsl
jno
ficompl
dec
xor
mov
lds
out
dec
sbb
and
int
mul
xchg
fwait
dec
dec
inc
mov
inc
lahf
add
pop
cmp
jg
add
mov
stos
sub
mov
xchg
sbb
shll
xor
sbb
cld
cltd
fistps
iret
dec
adc
cwtl
or
push
test
xchg
dec
add
xchg
cmp
ss
and
imul
iret
pop
xchg
dec
jae
out
cmp
imulb
mov
pop
pop
ror
stos
decl
jbe
loop
aaa
test
inc
xchg
or
dec
sbb
std
loopne
add
test
outsl
jns
movsb
or
xorl
loope
cli
push
stc
dec
xor
jp
pop
push
jbe
pop
insl
sbb
ss
js
or
fcoml
bound
lea
or
je
jnp
jae
ret
out
int3
cmp
rcrb
sarb
xor
ja
out
mov
les
lods
xchg
xor
stos
push
jmp
inc
mov
sar
pop
add
mov
loop
ljmp
lods
js
in
pop
ret
push
inc
movsb
outsb
push
or
stc
sarl
addb
pop
xor
cld
test
notb
push
xor
jns
or
xchg
incb
insb
dec
inc
lcall
fdivl
pusha
jg
addr16
cmc
stos
sub
add
jmp
out
mov
popa
dec
mov
and
cmpsl
lea
xchg
sub
leave
pusha
call
rcrl
push
pop
imul
pop
push
cmp
lcall
mov
insl
adc
sub
adc
idivb
stos
hlt
jo
mov
cmp
dec
pushf
push
pop
push
jle
xcrypt-ctr
cmpsl
sbb
subb
pop
mov
aad
pop
and
fbstp
cmp
scas
std
hlt
jno
adc
aad
sub
ja
add
cli
xchg
mov
and
add
mov
jns
inc
pop
xchg
dec
xchg
push
cmp
movsl
inc
jg
cmp
push
adc
or
mov
in
add
push
inc
sub
push
add
pop
shr
loop
cmc
aaa
ret
in
test
xchg
jno
sub
jo
adc
out
aad
xchg
das
add
push
test
inc
popf
mov
and
pop
fisubrl
pop
loopne
int
dec
adc
mov
push
mov
dec
jp
popf
ds
gs
mov
fidivrl
orb
push
pop
inc
cmp
cld
pusha
sbb
call
sbb
incl
aad
jno
outsb
inc
call
ss
adc
mov
pop
mov
bound
das
loop
mov
aad
hlt
shll
cmpsl
movsl
repz
les
pop
testb
imul
add
insl
push
adc
shll
inc
shl
ret
stc
mov
adc
inc
in
push
rep
jecxz
or
sahf
push
sub
jne
mov
xchg
adc
nop
in
loopne
les
pushf
scas
ret
outsl
or
push
mov
lock
aas
lahf
fistps
sub
pushw
inc
xlat
iret
add
lret
xchg
xchg
sub
push
out
mov
imul
adc
push
fs
ja
xor
mov
mov
cmp
test
std
in
fsts
xchg
enter
sub
rep
adc
cs
mov
lret
xlat
popa
ljmp
and
jne
inc
mov
scas
push
insl
sbb
xchg
enter
mov
sti
sarb
and
lods
add
add
xchg
loopne
aaa
sti
xchg
and
sbb
bound
insb
bound
mov
mov
gs
fsubrl
les
push
pop
lea
jbe
and
cmp
mov
cmp
imul
arpl
xchg
in
bound
xchg
add
mov
ss
xchg
pushf
icebp
rcrl
jno
dec
xlat
mov
daa
pop
mov
aas
idivl
fwait
jecxz
in
ret
sub
jbe
cltd
push
aad
inc
in
fwait
jbe
or
adc
inc
cmc
ja
push
pop
mov
arpl
cmp
imul
inc
in
pop
mov
nop
scas
mov
mov
ljmp
int
test
das
cltd
mov
xor
movsb
fdivs
shll
cmpsl
fs
lds
push
mov
cmp
fcmovu
cmp
push
push
inc
rol
insb
out
popa
cmpsl
jo
sub
xchg
jo
and
mov
mov
in
mov
adc
or
mov
push
aad
ds
ret
sbb
test
fimull
push
out
into
mov
mov
sti
push
jecxz
fistps
and
xor
hlt
mov
ljmp
sbbl
inc
add
movsb
sbb
jmp
xor
lret
sti
std
jecxz
adc
hlt
dec
insl
repz
out
mov
jns
outsl
mov
xor
or
mov
imul
adc
sbb
scas
loope
mov
cmp
je
lods
fs
sub
aaa
xchg
push
dec
mov
test
xchg
add
jg
fdivr
std
icebp
fstps
ja
loopne
addb
fbld
mov
ljmp
into
es
dec
cmpsl
dec
fs
dec
push
push
outsb
mov
push
jmp
pop
and
xchg
sub
sbb
pop
addl
decb
ja
scas
cmp
push
cmc
sbb
mov
aaa
aam
out
sti
xor
mov
jb
adc
mov
dec
lret
mov
in
lcall
push
js
dec
mov
fcoml
push
xor
jbe
mov
push
stos
push
xor
cmp
adc
fimull
into
mov
iret
jb
sub
sub
pop
jecxz
xlat
aad
mov
dec
les
mov
mov
outsl
aam
ret
pop
jge
cld
add
pop
ja
fcmovb
pop
push
mov
push
cmpsl
dec
in
inc
ljmp
lds
sarl
mov
adc
fmuls
fadds
sub
shlb
or
xor
add
pop
and
jo
push
push
bound
mov
push
rol
sub
repnz
add
mov
sbb
mov
pop
cmp
dec
int3
sub
push
push
mov
dec
mov
notl
jp
arpl
sbb
lock
nop
lret
mov
sub
or
cmp
mov
pop
fmul
out
cmc
xchg
and
push
sbb
js
jmp
lea
inc
push
xchg
dec
mov
ret
icebp
jb
out
ds
xchg
sbb
test
lahf
adc
bound
dec
loop
negl
or
pop
ljmp
push
push
adc
mov
in
lea
adc
mov
xlat
out
sbb
fsubp
inc
mov
std
cs
sbb
xchg
ja
push
test
push
xor
gs
aam
sub
adc
popf
xorl
ss
adc
fstpl
push
clc
mov
xchg
stos
cwtl
scas
mov
cltd
es
push
imul
xlat
aaa
jno
xor
cmpsl
test
popf
pusha
lcall
scas
mov
jbe
add
xlat
mov
ja
inc
jg
push
mov
mov
mov
inc
push
pop
pop
rol
sbb
sub
sub
mov
mov
rol
aad
adc
inc
pushf
xchg
jmp
cmp
inc
jbe
xchg
cltd
jno
js
es
aad
sbb
pushf
xlat
call
jg
jg
hlt
cld
push
sbb
adc
clc
dec
cmp
shlb
fdiv
call
mov
xchg
fmull
xchg
jge
in
test
arpl
movsl
repnz
je
enter
vfnmadd231ss
ffree
repnz
push
mov
repnz
in
and
enter
push
fildl
shr
aad
push
sub
cmp
ljmp
hlt
lock
fs
inc
pop
jb
pop
sub
or
out
fwait
mov
lods
loop
je
mov
jge
xor
jmp
mov
sbbb
or
mov
push
jae
sbb
nop
mov
mov
mov
jp
fs
out
mov
imul
cmp
cmp
jl
stos
test
clc
mov
push
adc
movsl
fbstp
xchg
mov
fbld
mov
xor
fldl
jo
or
sbb
shrb
dec
scas
shll
dec
aaa
sbb
jbe
cs
cmp
lea
and
mov
xor
sub
andb
jb
imul
lods
cmp
das
fimuls
cmp
push
scas
mov
popa
cmpsb
cmp
imul
jecxz
ret
rcr
lea
int
cld
sub
cwtl
lds
into
mov
notb
test
or
jecxz
pop
cmp
jecxz
sub
adc
out
daa
ret
stc
sbb
stos
mov
mov
cmp
push
adc
dec
call
push
mov
mov
shrl
in
jne
icebp
aam
and
xor
test
lock
cmp
inc
mov
dec
rcll
adc
fstl
repnz
gs
or
into
cli
in
lods
js
dec
movsl
add
int
mov
lahf
icebp
testb
push
push
lcall
js
xor
dec
pop
or
lods
or
cld
stc
or
fwait
je
push
aaa
popl
xlat
inc
mov
sbb
adc
fnstsw
inc
pop
sbb
mov
out
xchg
mov
data16
inc
es
in
and
loop
orb
fcom
push
pop
xor
fiaddl
xor
xchg
cmp
loopne
pop
cmp
dec
or
xor
adc
jno
jge
int3
jmp
pop
pusha
sarl
in
jmp
icebp
inc
lea
stos
and
std
mov
leave
iret
mov
adc
pushf
pop
push
mov
pop
sbb
icebp
xchg
lret
push
pop
pop
test
clc
stos
movsb
inc
xchg
jmp
scas
mov
sbb
scas
pop
fsubl
add
sahf
aad
push
filds
mov
pusha
lret
or
aas
in
mov
pop
lea
shrb
scas
pushf
mov
jmp
or
fs
or
sbb
or
jns
jmp
jge
xor
shlb
lret
nop
and
sub
pop
xor
jns
jle
mov
push
dec
cs
xlat
jae
ret
clc
mov
shrb
aad
sub
mov
ret
int
outsl
movsl
lods
loop
shrb
fwait
push
in
sbb
add
pop
and
jle
mov
jno
push
ret
jbe
mov
call
std
xchg
test
lea
mov
pushf
shr
mov
push
daa
rorb
dec
loope
insl
outsl
mov
mov
mov
jae
jns
vpminsw
vpsrlw
clc
inc
jae
loop
ror
les
out
imul
inc
push
mov
into
push
lock
aad
sar
outsb
stc
loop
jg
mov
adc
push
lret
jl
mov
sub
dec
jge
xor
sbb
flds
fisttps
add
xchg
mov
dec
adc
mov
xor
cli
js
push
insb
push
scas
mov
inc
and
into
js
mov
mov
pop
test
popa
movsb
and
test
repz
push
pop
jne
fidivs
push
cmc
movsl
push
je
pushf
js
fildll
adc
daa
ss
daa
dec
xchg
hlt
lods
push
into
lahf
mov
in
popf
and
cli
xor
loop
jne
hlt
push
push
cld
fidivs
jnp
add
mov
mov
scas
lock
mov
mov
pop
cld
pop
or
jg
loopne,pt
movsl
pop
mov
xor
mov
ret
push
outsb
sub
loope
rcrl
pop
popf
dec
mov
cltd
jmp
mov
jle
cmc
out
ficoms
mov
pop
enter
hlt
sub
cmp
js
fstpt
nop
adc
lret
mov
fs
mov
sbb
xchg
cmp
notl
out
js
push
dec
into
loop
or
push
adc
std
cmpsl
in
cs
mov
or
and
pop
int
adcb
les
orb
rcll
xchg
lods
jecxz
pop
sub
or
jns
xchg
repnz
test
into
stos
mov
popa
clc
repz
mov
and
stos
mov
sub
imul
xchg
push
add
and
ds
mov
mov
movsl
and
pushf
sbb
sti
shrb
or
push
sbb
adc
call
lret
push
dec
arpl
out
add
negl
cmp
or
xchg
jbe
push
cmp
mov
sub
dec
shlb
xchg
in
jmp
testb
mov
faddl
add
inc
xlat
jb
cmp
outsl
loopne
inc
mov
dec
test
in
ljmp
sbb
movsb
stos
push
sti
lods
stos
mov
mov
push
pop
push
mov
sahf
int
adc
cmp
mov
sub
and
xchg
jmp
dec
cmp
push
or
leave
xchg
call
xor
cmp
sahf
jns
lret
mov
xor
jns
sarb
test
push
sbb
sahf
sub
hlt
imul
out
xor
push
pop
out
mov
sbb
lret
jl
cmp
fstpt
scas
scas
and
stos
xchg
les
daa
dec
jle
cmp
aam
pop
add
mov
push
mov
lret
inc
cltd
jns
sbb
sub
xor
pop
lcall
pop
sahf
jae
sub
cmp
out
daa
mov
cmpsl
pop
mov
push
xchg
mov
out
loope
sbb
sub
outsb
cmp
adc
lods
or
int
and
ret
aad
scas
dec
jb
dec
push
lret
dec
imul
jns
rorl
dec
in
dec
mov
xchg
loop
sti
sbb
inc
sub
cld
sbb
loopne
pop
jo
pusha
arpl
rcl
and
add
sbb
push
inc
dec
ljmp
push
cld
sbb
mov
dec
imul
repz
push
push
fstpt
push
lret
and
cmpsl
pop
jmp
mov
cs
push
es
out
mov
inc
mov
in
aad
or
push
hlt
pop
stc
stos
lcall
xor
movsb
jb
cltd
lret
and
xchg
leave
ds
shl
iret
into
ficoml
in
adc
lock
fstpl
test
cld
rcll
xchg
jle
mov
lret
sub
loopne
fwait
pop
aad
out
imul
mov
addr16
inc
cmp
pop
fiaddl
and
idivb
lods
in
in
mov
inc
lods
cmp
sarl
pop
ja
fwait
test
into
in
mov
add
push
cmc
xor
inc
clc
daa
sub
imul
xchg
lods
test
xchg
stc
adc
frstor
push
pop
pop
jns
lea
lcall
mov
push
pop
or
sub
add
push
leave
iret
in
ds
sub
pop
jnp
cmpsb
pop
int3
jle
xor
addr16
sbb
and
cmp
outsl
out
dec
fs
lcall
leave
mov
adcl
incb
icebp
xchg
je
scas
mov
pop
cmp
push
push
popf
dec
jo
sub
mov
in
addr16
lods
mov
inc
rolb
cmc
push
dec
jp
mov
movb
and
inc
cwtl
and
inc
test
cmp
iret
mov
out
loope
jg
loop
pusha
cmp
dec
std
push
and
inc
stc
push
adc
ds
jbe
sahf
roll
sbbl
push
out
dec
mov
inc
xchg
sbb
jno
jmp
das
xchg
ret
ss
cli
aas
push
inc
pushf
pop
pop
lret
pop
add
dec
loopne
push
jmp
dec
repz
xchg
jnp
pop
inc
add
jb
xor
int3
xor
mov
jae
sti
cs
mov
lret
inc
sbb
int
clc
pop
fisubrl
inc
add
mov
test
pop
add
dec
pushf
push
pop
test
daa
mov
popa
mov
xchg
mov
jg
lods
outsb
sbb
stos
je
popa
push
scas
dec
hlt
xchg
mov
push
out
mov
clc
jmp
jp
gs
popa
daa
adc
in
xor
out
pushf
pop
out
or
insl
xchg
push
jae,pt
roll
pop
inc
sub
iret
shr
rclb
add
ljmp
fnsave
cld
inc
push
sbb
cmp
mov
mov
in
push
sbb
insb
fdivrs
xor
jmp
inc
cltd
adc
fldl
dec
sub
xchg
dec
out
mov
dec
xlat
es
inc
lret
out
fmuls
push
insb
inc
xchg
pusha
push
lahf
mov
cmp
fldenv
in
add
sub
pop
add
or
xlat
add
inc
sub
cmp
dec
int3
adcb
inc
cmp
add
mov
push
cmpsb
outsb
repz
jo
loope
fnstcw
orb
add
decl
sub
pop
insl
sub
arpl
in
adc
loopne
loopne
ja
cmp
idivb
ret
mov
int3
mov
adcb
lods
dec
dec
cltd
jg
or
xchg
push
and
and
push
test
int
mov
xchg
sbb
faddl
ret
xor
sub
inc
int3
sbb
mov
mov
push
repz
cmp
adc
xor
dec
popf
jge
jle
dec
cli
cmpsb
je
stos
and
mov
movsb
mov
les
loope
dec
call
fnstsw
jnp
pop
cmpsl
sub
sbb
and
xchg
nop
lea
jge
test
cmpsb
jae
lods
daa
cmp
mov
pop
das
jbe
shll
or
fldl
and
addr16
xchg
mov
js
ret
adc
mov
mov
into
or
mov
push
cmp
test
pop
cmc
fldcw
and
inc
xchg
mov
out
lahf
int3
lods
mov
mov
repnz
ret
call
pop
repz
js
xchg
mov
add
add
addr16
cmp
mov
xor
or
popa
aas
scas
in
movsb
test
mov
push
lods
cmc
imul
jmp
ds
faddp
pop
mov
fiaddl
mov
shrl
xchg
jl
imul
jb
add
jg
lret
loop
cmp
inc
pop
cmp
pop
leave
jo
sub
xor
cs
stos
cmpb
clc
and
in
push
std
mov
fadd
daa
daa
loop
mov
addl
or
sub
add
sub
inc
mov
push
or
repnz
inc
or
inc
sahf
jmp
cmp
in
stos
ja
jmp
xchg
jecxz
vunpckhpd
inc
dec
test
ret
ljmp
shrb
dec
sub
or
fstpl
clc
dec
mov
scas
push
enter
sbb
mov
les
cmp
push
hlt
sbb
repz
mov
call
pop
dec
cmp
mov
inc
xchg
dec
inc
push
mov
xchg
mov
push
stos
mov
rcr
movsb
jge
imul
lret
mov
mov
shrb
aad
push
pop
mov
mov
sbb
lahf
mov
cmp
leave
sub
pop
clc
movsl
repnz
sbb
mov
mov
repz
aam
inc
adc
int3
push
cli
movsl
pop
jb
xchg
mov
and
mov
movsb
fstps
stc
lcall
and
sbb
adc
sbb
rolb
push
pop
lock
arpl
dec
pop
add
insl
call
stos
gs
xchg
push
fcoms
adc
repnz
fyl2x
cmp
lcall
outsl
clc
out
adcb
xor
jp
adc
inc
imul
test
push
xlat
out
jp
subb
in
pop
andps
int
mov
cmp
fstpt
nop
fdivrl
and
or
mov
mov
imul
jmp
clc
fwait
mov
in
out
lret
mov
add
imul
push
xchg
jmp
movb
mov
stos
push
cwtl
lock
mov
icebp
sub
xor
pop
lds
sbb
mov
and
outsl
mov
insl
xor
pop
sbbb
rol
out
into
mov
push
push
adc
outsb
hlt
pushf
test
mov
cmpsl
pusha
loop
dec
mov
gs
arpl
adc
nop
xchg
pushf
imul
mov
inc
inc
aas
int
mov
or
pushl
movsb
into
movsb
scas
scas
insb
pop
addb
addr16
inc
cwtl
sbb
outsb
ja
and
add
daa
out
sti
mov
and
imul
cmp
xchg
leave
xlat
shll
push
cli
mov
and
out
jg
lods
rcl
leave
imul
fwait
xor
sub
imul
into
jo
lock
or
ljmp
jnp
adc
sub
or
cmp
mov
dec
imul
fwait
std
stos
push
int3
xor
fnsave
sbb
push
jo
repnz
and
add
in
mov
shl
pop
and
cmp
jae
outsb
push
call
sub
in
rcll
xchg
push
outsl
mov
mov
idivb
aad
adcl
add
outsl
inc
cltd
cltd
cld
mov
jns
vpcmpeqw
sub
mov
and
lods
stc
inc
insb
insb
jecxz
insb
testb
call
inc
jg
sarb
sbb
dec
cli
insl
dec
dec
adc
repz
test
jle
scas
cli
dec
mov
mov
push
adc
jne
iret
fs
scas
add
stos
data16
xchg
outsb
repnz
add
dec
test
push
add
fs
pushf
popa
mov
idivb
mov
xor
jmp
pop
xchg
push
and
aad
mov
cmpb
cmp
push
mov
pushf
es
jbe
pop
mov
xor
xor
inc
push
dec
fstl
cmp
pop
pop
xchg
sub
jecxz
ret
bswap
add
pop
hlt
loopne
hlt
dec
inc
jne
dec
and
lcall
ja
arpl
fildll
sbb
cmpsb
inc
cmp
ds
xchg
push
pop
cmp
cmp
adc
mov
mov
adc
pop
lock
je
stos
mov
sti
add
in
sbb
add
fsts
mov
pop
out
adc
xor
fistpl
lea
inc
gs
fcoml
pop
mov
cs
push
push
in
call
int3
dec
mov
sbb
pop
cmp
cmp
movsl
lcall
adc
and
mov
inc
lds
pop
jnp
shlb
roll
xor
dec
adc
out
push
loop
sbb
movsl
lret
push
popa
outsl
sub
add
movsb
or
lock
jmp
jmp
jp
aas
cld
dec
js
fmuls
pop
dec
mov
push
sub
or
test
flds
xor
sbb
or
lods
inc
push
jno
or
cmp
sub
imul
sub
movsl
daa
movl
out
mov
jle
xor
add
add
cmpsb
mov
clc
xchg
add
aas
sbb
js
fsub
push
jo
mov
xchg
iret
cmp
xor
lea
out
mov
sbb
loope
loopne
sbb
push
xor
outsb
push
push
mov
cwtl
aam
mov
adc
add
pushf
inc
sbbl
push
inc
inc
xchg
sahf
pop
addb
aas
jp
rorb
mov
mov
or
aaa
cmp
cld
or
hlt
mov
sub
add
dec
mov
adc
mov
mov
cltd
mov
jnp
cmc
sub
loop
sub
fimuls
push
mov
lret
lock
in
dec
xor
arpl
sahf
mov
clc
mov
xchg
xchg
pop
or
push
jb
push
mov
iret
or
ljmp
mov
or
add
xchg
in
or
faddl
dec
lods
inc
add
cld
xor
mov
mov
test
lret
pushf
jecxz
sbb
fldcw
adcl
in
and
sbb
xor
add
popa
push
std
pop
fcomps
dec
push
insb
outsb
xchg
lcall
outsl
pop
mov
mov
lahf
pop
inc
aaa
jp
bound
mov
in
and
push
jb
mov
inc
hlt
pop
iret
or
test
out
jo
rcll
sub
or
sbb
cld
les
je
repnz
mov
cs
adc
jmp
jecxz
inc
jnp
in
mov
das
adc
cltd
ror
nop
jmp
cmp
push
inc
push
aam
sbb
ja
fidivrl
pop
addb
insb
cmp
and
aam
test
sub
and
stc
in
jnp
mov
mov
dec
mulb
mov
arpl
int3
pop
mov
ljmp
mul
rol
inc
stc
cmp
and
mov
xchg
sub
push
cmp
scas
rolb
mov
popa
into
or
rcrl
or
push
lret
and
dec
cltd
outsb
popf
lret
cmpb
rcr
mov
movsb
std
mov
mov
jmp
sub
add
sbb
cmp
std
pusha
pop
pusha
mov
jg
jo
pusha
mov
movsb
or
shll
and
insl
and
std
sbb
icebp
stos
sbbl
jp
outsb
and
or
lods
cmp
mov
pop
xchg
lret
push
sub
and
pop
iret
xchg
jbe
imul
and
and
push
int
mov
flds
decl
adc
mull
dec
stc
push
sbb
mov
mov
xor
push
pop
outsl
in
pop
jns
clc
jle
cmpsl
sub
sti
push
test
sbb
arpl
add
inc
pushf
negl
test
or
shl
mov
lods
mov
lcall
icebp
mov
lods
adc
jbe
out
test
mov
jnp
adc
add
roll
mov
mov
test
dec
outsw
mov
imul
scas
jle
cmpsl
fsubr
cmp
xchg
das
insl
fcoml
cmp
enter
fistpl
jmp
test
add
loop
inc
lds
cmpsb
cmp
ja
es
cmpb
mov
adc
mov
pop
shll
xchg
js
out
xchg
js
mov
mov
xor
sub
add
mov
stc
fsts
or
pop
and
xchg
push
mov
shr
cwtl
lods
cmp
fldz
ret
dec
add
lret
lea
popf
mov
in
and
add
pop
mov
cmpsl
mov
aaa
sub
pop
popf
and
aaa
aaa
loop,pn
xchg
mov
insl
inc
dec
jb
jmp
pmulhuw
mov
clc
out
push
rcrb
nop
fidivl
lds
sahf
lock
imul
in
dec
xorb
pop
rcr
lds
push
out
movsb
fmul
mov
xorl
jle
mov
sarl
dec
sbb
cmp
faddl
jg
fwait
out
out
popl
jbe
imul
mov
jbe
mov
xchg
scas
jnp
xchg
test
cmp
mov
or
inc
or
or
mov
movsb
adc
lods
data16
and
out
push
outsl
dec
jbe
lods
mov
or
jo
push
xchg
mov
jae
stos
loope
ret
jecxz
mov
sub
jle
or
pop
inc
mov
mov
das
mov
inc
cli
orl
in
push
mov
push
je
or
inc
popf
push
mov
test
push
xchg
test
movb
loopne
lods
call
jnp
xor
fstpl
mov
jb
and
ljmp
xor
fisubrl
lret
fs
cwtl
clc
cmpsl
ja
lods
and
iret
test
hlt
sub
jl
out
mov
cli
subl
test
and
jnp
inc
ret
and
mov
ja
test
cs
pop
xor
xchg
pushf
dec
mov
iret
mov
sahf
andl
lock
mov
out
arpl
cli
xchg
shrb
add
dec
sbb
mov
pop
aas
call
nop
sub
xchg
pop
lds
jo
jp
testb
dec
sbb
jecxz
ret
repz
mov
push
dec
clc
test
inc
call
xchg
rorl
dec
enter
pusha
sbb
iret
gs
mov
sub
dec
sbb
int3
and
flds
xor
frstor
iret
mov
jecxz
dec
sar
outsl
jbe
pushl
and
mulb
movsl
cltd
out
sub
mov
sbb
inc
sbb
sub
arpl
sti
xor
xchg
dec
jg
mov
js
out
movsl
cmp
dec
movsb
out
nop
pop
test
cmp
and
cmp
stos
sub
push
in
adc
loop
mov
sbb
pop
stos
outsb
or
popf
push
push
mov
inc
or
shrb
jno
jns
mov
sbb
dec
mov
js
fbld
sbb
or
sbb
inc
test
dec
test
in
xchg
mov
fwait
sub
mov
cmc
add
mov
mov
orl
inc
int3
rcr
sbb
fdivs
push
inc
fnclex
inc
sbb
mov
jae
jle
idivl
cwtl
popf
add
inc
cmp
push
fsts
pusha
repz
rorl
into
jp
sbb
in
and
cmp
push
mov
arpl
sahf
negb
jbe
jp
push
inc
sahf
mov
std
int
js
inc
push
sub
fistpll
jne
pop
stc
fldcw
cmp
aaa
clc
inc
jbe
inc
sub
mov
jecxz
scas
scas
rcll
pop
push
push
xchg
inc
add
lahf
aas
xorb
mov
jae
jecxz
sarl
imul
adc
dec
mov
jnp
cli
aas
mov
xor
and
js
lahf
xchg
and
xchg
lahf
mov
mov
out
or
pop
test
js
xchg
cli
cltd
int3
adcl
sbb
shll
stos
aaa
fstpl
or
movsl
inc
push
testl
mov
into
ficoml
shl
negl
mov
mov
dec
xor
jmp
into
adc
dec
insb
stos
dec
mov
inc
sarb
fbstp
xlat
jae
inc
jmp
xor
pop
sub
mov
enter
mov
sbb
arpl
lds
fbld
inc
or
das
jns
jno
pusha
in
mov
cmpsb
fs
inc
pop
ljmp
xchg
lds
xchg
and
pop
imul
lret
xchg
inc
mov
jb
lea
shl
fptan
into
add
imul
pop
rclb
pop
pop
or
sub
xor
xchg
jmp
and
popa
rorb
xchg
add
call
lds
jp
in
out
jns
add
fmull
push
pop
inc
pop
dec
cmp
or
xor
push
mov
mov
mov
movb
int3
pop
pop
inc
ljmp
sti
repz
inc
sub
in
ljmp
out
cmp
sub
push
repnz
pop
jmp
pop
cs
dec
sub
sbb
and
sub
loope
mov
push
stos
dec
pop
xchg
fstpl
jmp
scas
ja
cmp
fldt
sub
xor
xchg
arpl
and
orb
push
dec
mov
xchg
lods
std
fnsave
mov
xor
dec
jo
cs
pop
adc
mov
div
inc
incl
or
mov
pop
icebp
dec
mov
stos
aam
hlt
sbbb
mov
push
jg
mov
hlt
or
stos
dec
outsb
jnp
popf
pop
dec
in
mov
std
adcl
cmpsl
adc
inc
outsl
xchg
mov
xchg
push
insb
inc
mov
mov
out
ljmp
outsb
add
into
data16
clc
mov
in
mov
leave
cmpsb
js
sub
int3
mov
xor
stos
std
in
int3
divl
aaa
add
sbb
lds
out
add
cmc
add
ljmp
repnz
and
decb
push
aas
in
cwtl
xor
mov
cld
lds
push
rol
lahf
rcrb
into
lds
mov
lret
dec
adc
mov
iret
xchg
lcall
or
outsb
int
cmp
fs
stc
push
xchg
shlb
cmp
mov
pusha
int
pop
movsl
or
fidivs
fcmove
jbe
rorl
adc
push
mov
add
rcl
cli
sub
mov
js
lcall
imul
aas
push
and
mov
loop
add
aas
dec
add
jl
fiadds
arpl
jle
cmpsl
xchg
mov
jns
leave
lock
mov
lods
mov
or
push
stos
xchg
mov
xchg
and
out
push
mov
jbe
inc
lods
lock
scas
inc
shll
pop
rdtsc
ss
icebp
insb
mov
pop
mov
fcoms
stos
and
out
push
adc
jae
xchg
sub
data16
xor
fildll
inc
std
or
jbe
mov
in
add
clc
inc
fistpll
popa
pop
pop
pop
ja
jmp
repnz
sbb
push
loope
aad
int
sub
pop
aad
cltd
push
nop
or
ljmp
push
imull
adc
daa
jns
sbb
and
sti
dec
and
imul
jno
call
stos
adc
cld
add
jae
pop
fs
shrl
icebp
sbb
xor
out
mov
sub
scas
pop
or
nop
rorl
mov
cmp
adc
push
dec
cmp
inc
out
stos
sbb
imul
movsb
sbb
dec
ret
fcomip
add
xchg
inc
xor
test
sub
fisubrl
jne
mov
push
dec
fiadds
dec
push
or
push
push
clc
aad
fwait
and
outsb
cmp
gs
repnz
dec
xor
jbe
mov
lret
push
or
jle
movsb
xchg
cld
and
cmpsb
jmp
out
lods
and
lods
mov
add
xchg
out
mov
or
rol
jge
ja
sub
mov
cmp
sbb
pop
out
and
inc
enter
sub
shlb
nop
bnd
leave
out
mov
dec
xor
shlb
sub
sub
mov
push
adc
jecxz
push
jle
shll
xor
inc
testb
inc
scas
in
scas
pop
loop
std
dec
push
movsl
push
loope
lcall
xlat
xor
fisubrs
test
mov
pusha
and
and
adc
adc
push
ja
arpl
inc
fimuls
xorb
iret
jns
ret
or
arpl
pushf
add
aas
xor
push
mov
or
loop
jne
into
ds
xor
or
mov
in
mov
adc
add
push
roll
and
scas
mov
out
inc
stos
ss
das
xor
xor
cmpl
cmpsb
jb
sub
pop
jnp
add
push
imul
push
sbb
pop
dec
push
aas
mov
lea
mov
pop
popf
xor
sahf
loopne
xchg
mov
repnz
lcall
cmpl
jno
or
fbld
pop
push
mull
jo
mov
outsb
repz
push
subb
fcomp
and
cld
pop
jmp
push
sub
leave
shl
sub
jbe
call
dec
mov
into
ss
xorl
mov
sub
aas
loope
jge
adc
lods
dec
add
jae
lret
and
dec
loope
jmp
bound
hlt
in
into
xor
js
mov
push
nop
mov
into
cs
mov
jl
pop
lahf
and
out
mov
cld
jecxz
lret
adc
jge
inc
xchg
loopne
cmp
mov
push
iret
mov
idivb
dec
cs
leave
lds
cli
jnp
mov
cmpb
sbb
inc
aaa
or
into
xchg
xlat
ja
sub
repz
push
jne
lea
scas
push
ds
pop
cmp
push
dec
push
cmp
imul
adc
das
xchg
jg
cltd
xor
mov
adc
pop
call
adc
and
mov
out
or
inc
insb
adc
loope
pop
dec
gs
add
lret
push
fwait
pusha
xchg
push
add
add
js
movsb
sbb
or
pop
jnp
cmp
mov
sahf
bnd
loopne
xchg
fildll
cmpsl
out
decl
dec
push
out
adc
adc
cld
mov
pop
in
sbb
xor
sbb
pop
adc
pushf
and
add
jo
mov
jp
stos
je
pushf
in
out
lcall
fwait
psllw
lds
ret
push
sbb
test
test
jl
sbb
ret
insl
leave
sysenter
ret
push
lcall
addr16
sbb
popa
push
out
lret
ret
data16
mov
jae
sub
test
mov
in
sbb
inc
scas
test
fwait
popf
jg
cmp
and
xlat
adc
xchg
cmp
nop
ja
jl
jae
fs
add
pop
int3
scas
cmp
dec
mov
pop
sti
sbb
sub
stc
lea
sarl
add
jns
mov
repz
aas
xchg
jb
clc
insl
push
dec
sbbl
pop
xor
and
add
dec
ja
dec
xor
cmp
dec
in
cmp
mov
jp
mov
es
sbb
pop
rclb
enter
into
lret
test
leave
test
mov
push
adc
jmp
popf
push
add
mov
cwtl
ss
pop
iret
test
es
push
aaa
loop
enter
fadds
mov
dec
jl
mov
cld
mov
dec
andb
cwtl
lcall
xor
and
cmpsb
fimuls
cltd
rolb
xchg
ja
adc
mov
test
pop
xchg
push
stos
les
sbb
mov
pop
fistpll
and
dec
mov
iret
sbb
shrb
xchg
arpl
cmp
xchg
sahf
pop
dec
or
sub
imul
jns
mov
daa
sbb
movsl
mov
mov
gs
int
jl
movb
lahf
ja
stc
pop
xorl
cmpsl
cmp
adc
adc
push
jp
test
fnstcw
or
dec
cld
jno
xchg
ffree
jnp
dec
repz
mov
cmpsb
imull
mov
push
and
jl
std
cmpsl
jne
mov
dec
jae
xchg
inc
outsl
jo
add
repz
arpl
inc
aam
jg
xlat
adc
dec
inc
test
mov
fcoms
dec
adc
mov
push
pop
and
stos
ds
in
xor
movsb
lret
mov
push
push
inc
jne
cmp
cmc
xchg
jmp
decl
pop
loopne
sub
mov
aam
ljmp
popf
dec
and
sbb
xchg
leave
jne
mov
arpl
imul
lds
mov
xchg
mov
dec
jb
je
lea
pop
nop
mov
in
cmp
aad
iret
imul
ss
sbb
sub
jns
dec
test
pop
inc
int3
pusha
fadd
dec
adc
aas
cld
and
call
cmc
inc
dec
mov
cld
and
mov
mov
jl
cmp
js
push
lcall
and
and
sbb
inc
nop
or
mov
or
popa
add
cltd
mov
movsl
sub
inc
pop
and
add
scas
mov
fisubs
rcl
stc
jns
xor
inc
aam
jp
inc
push
stos
xor
addr16
jg,pn
nop
mov
xchg
push
sar
jo
movsl
and
and
mov
aam
js
push
aaa
xor
shl
daa
jo
dec
mov
cmpsb
hlt
xchg
jg
imul
fs
mov
scas
arpl
aad
sub
pop
sahf
mov
filds
nop
pop
in
pop
jb
cmc
in
loop
push
roll
mov
mov
and
sbb
insl
and
cltd
jmp
mov
push
in
out
inc
and
lods
fistl
mov
xor
push
adc
jbe
iret
jo
cmp
jecxz
into
adcl
insl
jns
inc
add
or
pop
iret
data16
sbb
mov
in
loope
sub
mov
cmp
scas
pop
adc
xchg
push
lds
xorb
lds
ss
test
cld
gs
jae
mov
ficomps
mov
mov
mov
daa
add
cltd
xchg
mov
mov
jge
jb
popa
sarb
fs
sbb
dec
jle
adc
pop
jmp
enter
mov
xlat
add
pop
addr16
adc
mov
lcall
stc
mov
mov
ja
sti
cmp
sub
test
int3
out
sbb
scas
jns
repnz
pop
xchg
or
mul
jmp
push
ss
jl
cmpsb
loopne
rcll
adc
lods
add
clc
mov
sbb
lds
mov
dec
in
push
scas
and
mov
in
xchg
pop
mov
dec
mov
mov
lods
xchg
std
fbstp
sub
mov
pop
push
jecxz
mov
out
je
xlat
xor
test
scas
mov
xor
pop
icebp
arpl
hlt
das
jo
sbb
inc
aaa
sbb
fcmovne
inc
sub
sti
repnz
lret
push
ss
gs
gs
pop
mov
inc
enter
out
incl
inc
icebp
inc
add
sub
jp
ljmp
stc
scas
and
ds
sahf
outsb
dec
sub
shrb
stc
pusha
cmc
cmpsl
stos
jae
enter
or
xchg
jge
sbb
das
xchg
push
dec
and
enter
push
repz
pop
inc
xor
xchg
sbb
xor
mov
rorb
push
mov
xchg
stos
pop
mov
shll
dec
rcrl
add
fnstsw
test
cmc
subb
cli
add
mov
cmp
mov
roll
xchg
jno
xor
cs
jo
push
in
mov
mov
inc
inc
mov
lret
fcmove
push
xor
and
dec
les
sub
or
test
test
movsb
xchg
mov
sbb
pop
fidivrl
das
jg
sbb
jle
pushw
jae
jge
jl
push
pop
lock
xchg
or
jl
jmp
mov
inc
pop
xor
lret
lret
lds
cmp
es
jbe
scas
das
jp
mov
nop
jb
mov
movsb
mov
jo
inc
pop
add
inc
mov
push
mov
adc
cltd
cmp
ljmp
inc
xchg
in
inc
mov
and
enter
jmp
jmp
fsubrs
jle
movsb
mov
fucom
sbb
sahf
inc
outsl
sub
cli
mov
rorl
mov
aam
insl
sbb
pop
sahf
popf
fs
sub
xchg
fistpl
loopne
sub
xchg
xchg
insb
fwait
mov
repnz
shll
test
cmpsl
jg
adc
mov
cmp
and
and
icebp
pop
xchg
les
inc
inc
mov
in
out
lds
imul
mov
xor
mov
mov
jo
or
lcall
in
or
cmp
outsb
insl
adc
inc
inc
xchg
lods
push
mov
imul
outsl
cli
xor
or
loopne
hlt
iret
jb
mov
xchg
or
repnz
xchg
pushf
int
add
pop
mov
int3
jno
fwait
pop
es
xchg
mov
sub
adc
inc
ja
xor
out
int
jl
or
xchg
insl
xor
sub
aad
mov
mov
and
or
out
mov
and
push
add
nop
lret
sub
add
xchg
and
sbb
int3
cmpb
fcoml
add
mov
pop
cmp
call
gs
out
or
adc
inc
push
fwait
pop
dec
hlt
cwtl
sbb
dec
es
scas
xchg
pop
jle
jo
lea
inc
mov
pop
jbe
pushf
pop
ret
in
pushf
ffreep
fisttpl
mov
mov
enter
jmp
orb
lret
mov
pop
insl
rorb
sub
loope
shrl
pop
jmp
jmp
pop
mov
aas
cmc
mov
pop
imul
sbb
push
repz
aam
adc
fmull
bound
and
gs
cli
inc
jg
sbb
jl
into
ds
adc
add
push
dec
gs
mov
lret
sub
and
sbb
add
cmp
dec
inc
insl
adc
out
out
and
xchg
icebp
mov
dec
xchg
int3
dec
outsb
stos
inc
iret
jge
sub
mov
sbb
xor
inc
sub
fs
repz
jne
cmp
repz
enter
mov
push
lcall
xor
inc
push
jp
adc
mov
or
ss
add
pop
add
test
ja
pop
ja
inc
jnp
leave
dec
mov
lock
rcl
cmpsb
sbb
cmpsb
invd
push
int3
adc
lods
cld
pop
outsb
push
in
das
mov
jbe
call
in
or
and
repnz
stos
mov
cmc
mov
mov
enter
inc
sbb
mov
jns
cli
xchg
xlat
out
jge
fisubs
cld
adc
jl
lret
cmp
pop
push
js
insl
repz
jg
js
and
cs
xchg
lods
rolb
xor
add
dec
cltd
fs
std
ljmp
in
outsb
les
jmp
dec
popfw
aas
pop
mov
fisubl
cmpsb
and
das
fisubrs
pusha
sub
shll
mov
fsubs
fiaddl
repnz
mov
push
cmp
nop
push
mov
sbb
imul
insb
add
hlt
pop
mov
sbb
into
pop
xchg
in
push
add
outsb
fdivl
jg
out
orl
pop
xlat
out
and
mov
insl
pop
cld
jl
push
mov
sub
jp
xor
adcl
fmull
mov
sub
and
mov
mov
inc
rorl
outsb
lods
hlt
scas
mov
pop
jecxz
xor
aaa
mov
mov
dec
adc
ret
lods
cli
xchg
mov
lods
mov
sub
pop
dec
ljmp
inc
rclb
xchg
fcoml
in
lret
mov
int3
jg
daa
mov
jmp
xor
and
mov
mov
sub
aad
or
mov
popf
insb
mov
dec
ds
sarb
push
clc
or
scas
mov
and
jg
lcall
into
mov
mov
inc
sub
int3
xchg
xchg
pop
adc
outsb
xchg
insl
pop
bnd
mov
sbb
pop
cmpsl
jp
adc
loope
cmp
movsl
push
test
jge
je
sbb
das
test
and
scas
idiv
push
cmp
shl
rorl
ret
fs
push
int
insb
inc
aas
out
arpl
dec
in
or
inc
repz
arpl
inc
mov
mov
xor
adc
subb
rol
push
push
push
xchg
lret
dec
ss
les
push
cmp
mov
cmpsb
sub
stc
dec
sub
jne
adc
stos
je
xor
push
stos
sub
dec
dec
push
adc
scas
sub
popf
pusha
je
scas
adc
enter
loop
jnp
inc
or
clc
mov
loope
rorl
inc
dec
std
dec
jbe
lds
pop
push
inc
xchg
add
mov
push
jae
cs
inc
leave
pop
not
scas
cmp
mov
jne
sub
outsl
jmp
ror
sub
fcompl
mov
rorl
testb
int3
or
cmp
sub
je
add
inc
mov
xchg
fnstsw
incb
cli
jno
sbb
dec
imul
mov
ret
cwtl
inc
mov
pop
loop
clc
xchg
add
cmp
xor
or
mov
pushf
inc
jns
fs
out
mov
xor
adc
mov
cmp
ret
out
push
out
das
cmpb
adcl
pop
mov
mov
andl
cmpsl
das
mov
scas
mov
imul
fdivrp
or
inc
jnp
cmp
jp
jb
add
int
and
pop
imul
xchg
and
nop
cmp
out
sbb
out
pop
daa
sub
cmc
sub
add
pop
xor
fisubs
fs
dec
andl
add
xor
movsb
sub
push
inc
mov
adc
sahf
mov
sub
xor
lret
rep
rcll
data16
and
sub
fucomi
lahf
add
or
repnz
cmp
insl
jae
sub
xor
inc
add
sbb
enter
cmpsl
dec
shll
dec
dec
mov
fsub
cltd
icebp
mov
loope
popf
dec
fisttpll
stc
dec
sbb
xchg
push
pop
mov
jb
dec
jbe
imul
std
push
cmp
mov
xchg
outsl
out
mov
jmp
test
jl
out
loope
pop
jg
xchg
mul
repnz
or
popa
shll
mov
mov
in
push
sub
stos
popf
fisubrs
dec
mov
fsubp
cwtl
cmp
inc
xor
mov
jne
push
push
add
lds
call
sub
pusha
mov
loope
fstpl
jae
aas
cwtl
lahf
jecxz
mov
cmp
xor
push
mov
leavew
imul
mov
add
addr16
adc
cltd
stc
jnp
jecxz
inc
out
jl
jbe
ss
jbe
imul
test
push
inc
orl
aam
mov
or
xor
jmp
mov
jns
mov
add
cmpsb
or
or
sub
lea
inc
stos
mov
sbb
mov
pushf
sub
xor
insl
jmp
inc
push
fmul
addr16
out
push
mov
and
mov
cmp
mov
mov
lcall
rclb
jg
daa
xchg
in
shll
lds
dec
stos
aas
lods
test
xchg
mov
into
pop
adc
mov
ja
add
or
xlat
cmc
inc
xorl
rcrl
cs
pop
and
dec
add
lahf
lahf
xchg
leave
mov
ds
pop
adc
add
adc
mov
sbb
sub
sub
out
clc
mov
pop
xchg
pop
in
xchg
mov
push
frstor
sub
repnz
or
push
int
or
xchg
pop
stc
jbe
pop
out
jmp
int3
pop
inc
ja
arpl
je
push
cltd
push
bound
pushl
dec
xchg
int3
shrl
in
fcmovb
xor
inc
jno
iret
cmp
pop
mov
sbb
sub
pop
call
push
or
push
xchg
pusha
xchg
outsl
fldcw
sbb
xor
mov
and
pop
inc
jo
shrl
stos
xor
lcall
adc
lock
movsb
orl
fsubp
pop
sete
mov
gs
xorl
xchg
out
cwtl
inc
lea
mov
ficoml
stc
push
test
sub
pusha
jle
cmpsb
add
aaa
xor
or
inc
adcb
sub
cli
inc
lock
movl
leave
pop
lock
jae
pop
lds
test
add
pop
xchg
fsts
xchg
pop
iret
cmp
jge
mov
sbb
mov
push
jle
xor
adc
out
repz
add
xchg
das
aad
push
gs
mov
push
movsl
cwtl
jecxz
jl
lahf
mov
mov
fs
jecxz
mov
adc
leave
in
pop
inc
sub
pop
mov
push
mov
test
mov
ret
lock
pop
pop
ficomps
fisubrl
out
mov
packuswb
and
lods
lahf
mov
cmp
in
push
mov
lods
fstp
push
inc
daa
lds
leave
mov
popf
jne
cli
insl
mov
and
icebp
pop
mov
xor
or
add
orl
imul
jmp
push
jbe
dec
jmp
sti
sub
push
mov
es
dec
hlt
sub
mov
gs
xor
pop
inc
mov
fmuls
xchg
mov
mov
gs
sbb
jns
add
or
jp
insl
loope
push
cmp
mov
rorl
ror
dec
lock
jno
iret
cmpb
js
cmp
lcall
or
dec
jecxz
cmp
je
jl
out
mov
pop
sbb
mov
dec
testl
imul
cmp
into
movsl
cli
outsb
jae
lods
montmul
cmpsb
inc
dec
cmp
out
rcll
mov
test
cli
sti
xlat
rcl
rcrb
testb
push
mov
popa
aas
clts
xchg
add
out
enter
cld
jmp
and
and
dec
ds
loopne
mov
daa
aas
fdiv
enter
out
sbb
fildl
cmp
and
and
push
lods
cli
xor
scas
test
and
add
fdivl
xor
xchg
fisubrl
repnz
rcll
pop
inc
lea
loopne
lret
push
gs
mov
imull
mov
mov
or
adcb
xchg
fcoms
mov
sub
rol
or
popf
xchg
clc
sub
stos
es
int3
out
insb
mov
scas
xchg
sbb
test
cltd
hlt
not
sub
adc
push
cld
cmp
mov
inc
sahf
dec
inc
and
cmc
adc
xchg
pop
xor
cmp
jl
mov
inc
stos
shlb
jge
inc
sub
popa
add
bound
imull
dec
mov
ret
mov
add
xor
pusha
pusha
aam
sub
sub
push
inc
mov
ror
sbb
and
sub
mov
adc
add
fcompl
shll
add
nop
sub
dec
cmpb
bswap
aad
xor
jmp
pop
mov
mov
scas
add
xlat
sbb
orl
loop
mov
insb
std
aad
loope
popf
inc
nop
mov
pop
daa
pop
lods
mov
push
adc
dec
mov
adc
mov
mov
pushf
outsl
mov
or
push
je
cmpl
adc
mov
nop
rorb
push
mov
scas
lcall
fnstcw
and
cmc
dec
add
pushf
mov
lock
fs
inc
aaa
add
sarl
ljmp
inc
dec
cmp
sbb
in
mov
jg
jl
gs
shll
es
movsl
jmp
les
rorl
mov
adc
or
jmp
out
test
add
fsubl
add
aaa
test
aas
dec
xor
dec
cmp
lcall
push
jnp
mov
rclb
dec
fiadds
js
mov
fdivrl
xchg
xor
call
pop
addb
in
or
ret
in
mov
jp
add
pop
mov
test
into
adc
out
inc
jbe
cmpsl
in
in
lock
adc
xor
sub
std
cmpsl
mov
test
inc
dec
xor
cwtl
pop
scas
les
cmpsl
jmp
insl
cmp
pop
dec
adc
mov
lret
lret
loopne
cmp
enter
mov
dec
mov
add
ja
les
push
out
adc
adc
or
and
insl
hlt
push
call
insb
mov
xchg
dec
jno
xchg
add
and
add
push
xor
in
mov
into
movsb
fisttpl
in
jbe
ret
aam
mov
cmpsb
cmp
xorb
negb
pop
clc
xlat
pop
inc
or
xchg
loop
rclb
push
orb
clc
sub
xor
inc
dec
aas
xor
inc
scas
push
and
shl
pop
pop
pushf
ret
push
mov
test
mov
cltd
nop
mov
cmp
lret
aam
inc
xor
push
add
mov
dec
sbb
xchg
add
lods
movsl
fs
push
xor
adc
mov
pop
jnp
xchg
and
xor
std
pop
cmp
shll
adc
movsl
mov
xchg
dec
js
ret
cld
and
lret
inc
mov
jbe
outsl
xchg
repz
mov
lock
cmp
out
daa
scas
xrelease
cmpsb
mov
aaa
dec
or
or
or
or
fsubr
ror
mov
and
inc
dec
mov
cld
mov
add
int3
jb
cld
incl
cltd
push
fs
mov
pop
movsl
ds
pop
movsl
rcll
nop
pop
xor
jns
adc
std
stc
pop
into
jb
in
cmp
jl
aas
mov
xchg
jnp
shll
mov
dec
aam
imul
out
xorb
cmpsl
dec
xor
push
test
rcl
and
jmp
rorb
mov
outsl
push
ret
fs
lret
xlat
pushl
mov
hlt
sbb
and
das
pop
out
jle
fildll
adcb
mov
insb
enter
shl
testl
lret
pop
fstpt
insb
adc
xchg
fst
jnp
push
pop
test
es
mov
push
sub
dec
adc
mov
or
sbb
jno
cli
adc
jb
ja
mov
pusha
stos
cwtl
inc
dec
int
frstor
aad
xchg
pop
cmc
data16
mov
push
push
add
sub
push
or
js
xchg
jbe
repnz
aad
into
andb
pop
cmp
or
inc
jne
icebp
sbb
clc
adc
mov
lea
mov
in
std
cmpsl
dec
adc
sub
sub
cmpl
jle
aaa
xlat
or
mov
or
in
aas
push
neg
lea
push
sete
aam
sar
mov
fsubs
cmpsb
test
inc
mov
sar
and
lods
sbb
das
pop
dec
lea
mov
push
popa
push
dec
inc
cmpsl
inc
loopne
adc
loope
xchg
jge
mov
sub
cmp
inc
rorb
aaa
outsl
cmc
adc
stos
add
add
xlat
mov
push
repz
ficompl
shll
jne
push
fs
scas
mov
sbb
push
mov
sbbb
pop
pop
in
imul
xchg
aaa
sbb
scas
xchg
arpl
dec
test
jo
dec
int3
sub
adc
pop
outsb
scas
cmp
cmpb
sub
fldt
enter
xchg
mov
mov
and
dec
pop
movsl
repnz
cmc
inc
adc
mov
and
stos
out
aaa
test
mov
mov
adc
cmp
lahf
jg
popf
mov
pop
sub
fs
repnz
ret
xchg
add
cmp
add
push
push
les
xchg
je
outsb
int
dec
sbb
cmp
adc
out
dec
or
mov
cmc
scas
and
ja
sarl
or
aad
pop
adc
pop
xchg
in
dec
movsl
adc
insl
dec
jns
sahf
mov
inc
dec
mov
aas
sti
cmp
aam
out
insb
xor
sarl
scas
inc
mov
mov
pop
cltd
push
cmp
aas
mov
xorb
fs
jno
sub
shll
test
mov
adc
int3
add
or
mov
xorb
insl
cltd
and
cmp
iret
jecxz
enter
adc
xor
test
inc
aaa
xchg
push
xor
push
xlat
popa
imul
mov
mov
mov
mov
js
or
ss
inc
mov
ja
mov
cmp
rolb
or
pslld
sbb
in
aaa
and
bound
shll
aam
in
jns
test
popa
sbb
cmp
sbb
cmc
loopne
xor
sarl
cli
jge
sbb
iret
and
sub
xchg
jo
lcall
push
pop
das
push
orb
mov
ljmp
jne
arpl
mov
es
push
sub
adc
pop
lea
cli
std
lea
js
mov
cmpsl
daa
pusha
push
add
jae
rorb
ret
inc
fsubl
rclb
cli
inc
leave
xchg
clc
xor
cmpb
pop
mov
inc
add
or
cmp
inc
dec
xchg
outsl
mov
idivb
ds
pop
jae
mov
dec
cmpsb
mov
std
inc
std
int
ss
test
out
push
sbb
or
out
sub
cmp
ja
xor
popa
sbb
inc
cli
std
outsl
push
pop
mov
jbe
jno
lock
lcall
push
lods
out
divl
outsb
les
push
call
lcall
shrb
or
xor
jns
xchg
in
pushl
lret
movsb
sub
rolb
sbb
bound
es
pop
pop
test
push
call
clc
int
jb
addr16
dec
pop
leave
out
adc
or
push
cmpsl
cli
sbb
xor
out
mov
xchg
test
jmp
jnp
dec
xchg
loop
cmp
pop
scas
mov
sahf
push
movsb
sbb
jo
in
lods
sub
out
xchg
in
push
push
test
xchg
dec
lcall
mov
scas
xchg
imul
dec
ja
pmulhw
lock
cmp
hlt
pop
test
clc
xchg
cltd
jl
rclb
mov
and
xchg
scas
and
loop
adc
and
shll
into
jbe
iret
xor
and
pop
adc
into
aad
aas
jne
mov
jmp
jg
imul
adc
ss
push
enter
es
mov
pusha
enter
sbb
adc
inc
push
xor
cli
out
jns
jbe
inc
enter
pop
inc
inc
mov
ljmp
popa
sarb
cmc
mov
or
js
jnp
decl
shrl
mov
cld
jns
pop
push
jge
div
xchg
add
lret
and
xchg
xorl
mov
hlt
movsb
sub
and
xchg
xchg
test
mov
leave
into
stos
push
or
out
fdivl
mov
xor
loope
xor
or
mov
push
mov
cmpsb
inc
fcomps
push
dec
xchg
dec
xchg
pop
scas
pop
mov
adc
push
arpl
je
rcl
popa
mov
rcll
inc
popf
in
ret
mov
mov
pop
xor
js
and
stos
outsl
scas
adcb
lahf
lcall
into
scas
jne
pop
shll
daa
jmp
in
ljmp
fists
adc
movsb
fwait
xor
in
sub
rcrb
push
xchg
add
adc
sbb
and
pushl
jmp
fisttpll
dec
jae
adcl
in
lret
add
nop
fmul
add
mov
and
cwtl
movsl
inc
or
mov
mov
stc
lods
mov
and
loopne
xchg
shll
adc
push
xchg
sub
aas
add
mov
out
fcmove
mov
dec
jp
mov
int3
push
xor
bound
insb
mov
mov
fistps
or
jns
or
mov
subb
jecxz
push
push
sar
scas
insl
jge
jo
neg
push
mov
and
das
cmp
outsl
aam
pop
jge
arpl
es
cld
lock
mov
xor
data16
leave
and
pop
adc
push
cmp
mov
sub
enter
mov
jmp
inc
fisubl
imul
jne
adc
lcall
gs
and
and
shll
test
adc
jle
add
xchg
pop
and
or
xchg
inc
fistl
xor
lret
mov
into
pop
stos
fmull
xor
xor
mov
mov
lds
cmp
pusha
je
icebp
mov
jecxz
shll
fidivl
xor
inc
out
dec
inc
pop
push
hlt
or
jle
nop
dec
repnz
pop
xor
test
mov
cltd
sub
adc
push
cmp
or
inc
int3
xchg
cli
rorb
insb
mov
ret
aaa
xor
dec
add
jecxz
add
xor
iret
pop
fdiv
rcr
and
imul
mov
cmp
mov
ret
add
mov
js
xchg
loop
imul
addr16
dec
cmp
xchg
mov
cs
adc
push
or
mov
push
mov
loopne
jns
int
mov
push
test
cmp
push
sub
dec
mov
cs
hlt
mov
cltd
movsl
push
push
xor
inc
sti
push
inc
jo
dec
pop
jne
mov
jg
inc
fistpl
arpl
cmp
int
xchg
iret
pop
pop
cmp
or
int
mov
cmp
xor
mov
adc
push
mov
pop
jp
dec
movsb
jl
imul
call
mov
or
das
aas
jb
nop
mov
insb
test
cmpsl
rclb
fstpl
mov
das
jl
aad
dec
jecxz
insl
and
pop
gs
rolb
imul
cmp
clc
jmp
nop
xchg
mov
add
outsb
movsb
cmp
push
add
in
xchg
jo
imul
push
gs
mov
mov
push
dec
pop
pop
add
sbb
jl
fists
ud1
pop
jb
cmp
aad
mov
test
sub
xchg
cmc
test
bound
orb
fs
lds
pop
aas
addr16
arpl
das
dec
ss
cmp
hlt
push
mov
insb
sub
xlat
jmp
xchg
xor
xchg
jno
movsb
push
adc
lds
fcom
imul
push
xchg
mov
mov
mov
cltd
pop
push
loop
and
fidivrl
mov
adc
cmp
mov
jno
ret
sub
pop
cmp
push
test
cmpsl
add
pusha
dec
adc
shll
jae
cltd
popa
cmp
jne
iret
arpl
sbb
repnz
pop
pop
xchg
insl
aaa
mov
lock
mov
shlb
lods
push
in
gs
push
inc
jp
stos
jo
out
loope
or
sub
push
dec
imul
pop
in
sub
mov
test
mov
fimull
or
push
in
sub
push
sbb
test
adc
push
sub
div
inc
xchg
push
lcall
cmp
ljmp
gs
inc
js
into
jne
xor
and
jle
testb
lods
add
sbb
mov
outsb
pusha
inc
hlt
into
mov
adc
fiaddl
mov
sbb
std
into
out
mov
pushf
pusha
cltd
mov
push
div
sbb
pop
incb
aam
sbb
jg
mov
ss
push
data16
cli
mov
gs
inc
rcr
push
jp
pop
mov
xor
arpl
cmp
ds
in
stos
sub
test
fmul
imul
ds
mov
filds
mov
cwtl
into
dec
je
stc
rolb
loope
lret
xlat
dec
push
faddl
sbb
cmp
xchg
or
mov
in
int3
repz
mov
lahf
lea
cwtl
mov
int3
divl
in
pop
insb
pop
mov
das
lea
imul
or
jmp
xchg
and
iret
sub
jne
scas
pushf
and
popa
dec
push
divl
mov
mov
mov
jb
push
add
cmp
pop
arpl
gs
xor
in
into
int3
or
jp
inc
divl
in
mov
jne
hlt
hlt
jmp
pop
mov
in
aam
push
jns
sub
out
dec
ror
pop
leave
and
xchg
add
jg,pt
leavew
cwtl
pop
lret
rol
fnstenv
jmp
andl
outsl
xchg
sbbl
and
mov
xchg
es
cmp
jmp
pop
in
sub
adc
outsl
in
mov
jbe
jge
lcall
jmp
push
testl
sbb
fs
mov
mov
xchg
mov
jo
pop
movsb
stc
xor
dec
dec
invd
das
gs
and
and
das
push
ret
test
jle
jo
mov
adc
data16
and
xor
xorb
cmp
add
inc
cmp
js
xchg
stos
shl
test
add
popa
test
or
and
push
jbe
hlt
stos
lahf
movsb
mov
in
les
aaa
push
xor
pop
mov
dec
and
jp
jmp
ja
mov
cs
ljmp
xchg
cli
dec
mov
cmc
xor
repnz
adc
test
lea
fldcw
stos
bound
lret
mov
je
sbb
std
jno
fisubrl
in
cmp
push
jb
push
mov
rcrb
mov
mov
loope
lds
jmp
mov
out
and
lahf
test
inc
sar
cmc
fwait
mov
cltd
sbb
sub
pop
xchg
pop
xorb
clc
mov
popf
push
sub
sbb
xchg
mov
inc
sub
jmp
sub
jb
adc
js
ja
push
sbbb
inc
inc
jb
dec
fdivrs
lret
pop
sub
dec
push
cmpsl
cld
sarl
pushf
xor
imul
stc
dec
idiv
mov
adc
cwtl
adc
jg
xchg
xchg
dec
repnz
or
push
into
bound
aad
cmp
sub
je
scas
pop
gs
fildl
sub
adc
push
aaa
movups
and
fdivrl
popa
addl
cmpsb
xor
dec
sub
add
test
jmp
enter
daa
lds
jbe
inc
pop
out
lcall
jae
cmp
and
xchg
adc
jae
int3
inc
out
std
pop
xor
xlat
int
or
and
mov
aad
pop
jne
lcall
lods
sub
jge
add
repz
mov
push
push
cmpsb
int3
sahf
shlb
add
cld
cmpsl
xchg
jnp
sbb
cmp
js
jg
mov
sbb
adc
sahf
popa
andl
rcrb
dec
adc
ret
adc
data16
dec
and
fmul
jns
ja
and
pop
je
popa
sbb
sahf
pop
in
jbe
xchg
mov
mov
inc
iret
push
test
xchg
lds
imul
mov
pusha
aam
cmpb
subb
inc
xchg
mov
sahf
mov
out
mov
xchg
dec
fbld
pop
jo
and
int
mov
lahf
test
cmpsb
inc
stos
test
adc
cmp
fcoml
sarb
loope
mov
je
jge
adc
xchg
sub
inc
sbb
mov
cwtl
jo
cwtl
mov
sbb
cmpl
rcl
call
push
mov
outsl
shrl
and
jle
dec
adc
xchg
fdivl
dec
mov
pop
inc
into
inc
and
xchg
mov
unpcklps
aas
loopne
mov
das
jmp
jne
cmp
imul
inc
pop
and
or
sbb
lock
test
icebp
insb
mov
out
imul
dec
cmp
or
lcall
cmp
iret
jno
test
ret
ja
lods
fbstp
sbbl
pop
xchg
push
push
inc
imul
and
and
cmp
dec
jp
pop
or
aas
add
loope
and
jbe
xor
xor
cld
push
inc
pushf
dec
clc
adcb
cmp
in
repz
jecxz
and
outsb
sbb
xchg
mov
ficoml
push
mov
inc
ss
jae
and
push
sbb
fmull
imul
lds
inc
cmp
adc
clc
shrl
dec
cmc
xor
cli
add
pop
pop
mov
pop
mov
cltd
cmp
cmp
sbb
jns
jae
mov
stos
sbb
fld
push
testl
xor
jg
stos
loopne
adc
in
mov
mov
or
mov
ljmp
push
jne
xor
jns
xor
fistl
mov
sbb
ljmp
in
pop
lods
cmp
adc
pop
ficoml
jl
xor
xor
out
pusha
cs
jl
push
mov
je
rcr
or
cltd
xor
jp
and
add
mov
leave
xchg
adc
dec
movsb
jbe
sub
adc
xchg
pop
adc
addr16
sbb
fidivs
decb
maxps
loop
and
mov
and
inc
sbb
xor
jo
and
cli
xor
push
mov
aaa
cs
pop
in
mov
pop
adc
jns
loop
cmovle
popf
insb
popf
xchg
push
cmpl
or
je
rolb
insl
movsb
cld
int
cmc
hlt
jo
icebp
mov
loope
xchg
sub
or
pop
pop
idiv
fsubrl
sub
mov
decl
sbb
inc
sahf
xlat
test
ljmp
jg
mov
mov
sbb
stos
xchg
prefetcht0
sbb
stc
out
add
and
pop
adc
out
stos
jne
int
and
shlb
dec
frstor
xchg
cld
mov
movsb
add
push
or
xchg
cmpsl
pop
xchg
lret
cmpsl
cmp
xor
outsl
mov
ret
pop
jmp
jb
mov
mov
leave
stos
xor
or
in
mov
call
cmp
and
mov
pop
mov
movsb
lds
out
push
xchg
pop
in
stc
loop
jne
jb
call
and
mov
sub
push
mov
sbb
cmp
cmp
fwait
bound
test
xchg
cwtl
xor
mov
nop
sbb
outsl
or
das
xchg
pop
and
sbb
sbb
les
jge
xor
push
mov
sbb
out
cmpsl
aaa
outsl
dec
and
aad
rcrb
subb
mov
fisubrs
jmp
mov
cltd
icebp
mov
dec
cmp
dec
outsl
jae
sub
push
push
subl
dec
lret
cmp
out
lahf
push
push
adc
xorb
lods
pop
jge
lods
sub
sarb
and
and
cmp
mov
cmpsb
pop
out
arpl
scas
mov
sub
mov
dec
aas
mov
pop
adc
cmp
inc
aad
inc
loop
cltd
aam
mov
mov
pop
or
and
add
fisttps
lock
cmpsl
test
lods
cli
inc
cmp
mov
jns
add
xchg
insb
rcrb
jo
test
xchg
sbb
mov
popf
push
ds
cmpsl
dec
push
push
and
rorl
add
mov
andb
pop
xchg
fisubs
push
jge
out
push
aad
pop
or
push
sbb
addr16
jp
call
push
arpl
ljmp
push
pusha
mov
cmc
repz
xchg
scas
loopne
ds
aas
mov
jl
sbb
fwait
arpl
movsl
add
stc
lds
dec
cmp
push
nop
insl
add
outsb
iret
jecxz
mov
xchg
adc
cwtl
jl
jp
mov
rcll
cmp
out
fcmove
jo
out
ss
or
jmp
imul
aam
pop
pushf
dec
adc
pop
out
jge
mov
lods
orl
das
push
push
je
inc
dec
aad
sbb
imul
lret
inc
cmp
and
imul
rorl
and
stos
lock
cltd
xchg
xlat
hlt
mov
push
frstor
lahf
mov
jle
ss
mov
push
das
add
jle
push
in
push
lret
xchg
scas
or
lds
and
push
lahf
and
fwait
std
insl
cmp
jle,pt
and
and
ljmp
xchg
notb
pop
rcr
dec
addr16
repz
je
xlat
orl
aad
stc
mov
mov
lods
ljmp
loope
xor
mov
lret
push
sbb
jae
fnstsw
arpl
xor
and
push
imul
mov
mov
and
cmpsb
xchg
test
dec
xchg
jge
or
mov
mov
xchg
bound
ljmp
jo
lcall
add
repnz
pop
xchg
pop
mov
rcll
sahf
sti
cmp
fs
sub
dec
test
dec
pop
mov
jb
inc
dec
loopne
push
fidivs
xorl
leave
sub
es
push
decb
lods
mov
lahf
mov
ret
pusha
insl
int
dec
je
adc
jp
sarb
or
sbb
ret
or
aam
js
mov
mov
imul
push
cmp
and
rcrl
mov
mov
push
sub
dec
xchg
nop
test
mov
push
cli
loopne
mov
push
fwait
sbb
and
or
pop
sbb
push
std
push
sar
out
push
sbb
push
sahf
inc
adc
cmpsl
cmpsb
xchg
pop
adc
leave
mov
insl
pop
fs
shr
lds
out
adcl
add
push
cmp
pop
inc
fisttpll
je
mov
cmc
imul
inc
mov
subb
push
fbstp
sub
loopnew
or
test
shll
mov
inc
dec
sub
ljmp
in
dec
mov
mov
fnsave
out
fcmovnu
mov
jp
test
add
cmpsb
xor
xor
fistpl
divl
das
imul
scas
cs
inc
cwtl
js
repnz
mov
lods
push
in
addr16
fdivrs
sub
test
cmp
leave
xlat
xchg
nop
pushf
mov
pop
out
call
sbb
out
lcall
ss
scas
nop
lods
sub
xchg
gs
xchg
out
mov
adcl
add
dec
inc
sbb
sbbb
mov
gs
xchg
mov
lret
insb
mov
jae
adc
mov
pop
sbb
sub
hlt
mov
cmpsb
push
lea
pop
adc
and
cmp
outsb
es
ds
cmp
cmpsl
cltd
jne
sti
pusha
xor
mov
outsb
mov
addl
into
outsb
addr16
insl
cs
cwtl
fldcw
jl
dec
sub
adc
clc
mov
scas
movsb
or
jmp
imul
cmpsl
rorb
and
insb
pop
movsl
mov
jns
xchg
and
xor
mov
xor
mov
adc
sub
xchg
testb
imul
xchg
pop
add
mov
movsl
cmpsb
cmp
cmc
out
pop
rorb
nop
popf
enter
sti
xchg
xchg
mov
inc
mov
fdivl
movsb
add
ljmp
test
out
clc
jmp
cmp
rorl
jle
ret
je
fnstenv
xchg
gs
pop
xor
jecxz
aam
lods
pop
ljmp
lods
cwtl
xor
sub
push
les
mov
cld
addr16
adcb
mov
fsubrp
xchg
cmpsb
mov
loope
cwtl
into
cmp
lea
es
into
xor
ja
clc
and
push
ja
mov
dec
orl
pushf
pop
negb
scas
mov
pop
xor
arpl
sub
out
into
pop
or
xchg
out
mov
adc
dec
scas
gs
dec
add
and
leave
dec
out
in
sub
mov
xor
adc
daa
xor
test
sbb
jne
pop
mov
flds
push
mov
add
jl
adc
pop
xchg
or
dec
push
adc
xchg
inc
movsb
lods
out
xchg
push
add
in
mov
imul
out
cli
loop
das
add
mov
ret
stos
xor
sub
and
xchg
mov
clc
mov
mov
inc
pusha
nop
ret
jecxz
pusha
cmp
and
xor
xor
pop
jo
nop
das
mov
test
mov
repz
pop
rcrb
xlat
push
ljmp
orl
scas
mov
inc
cmp
lods
insl
dec
outsb
mov
or
inc
cmp
push
out
test
imul
cs
push
les
scas
cmp
sub
inc
faddl
jmp
gs
cmpsl
mov
mov
clc
loopne
add
cwtl
in
jl
add
fsubrl
inc
scas
insb
imul
inc
outsb
fwait
sub
mov
mov
fisubrs
cmc
dec
jbe
test
in
cmp
lret
bound
incb
je
lahf
mov
inc
mov
test
mov
lock
inc
cmp
and
jno
mov
sahf
jo
jecxz
popa
test
mov
xchg
add
pop
dec
mov
es
add
push
pop
loopne
rcl
mov
popa
fldcw
punpckldq
std
lea
in
or
jae
mov
test
hlt
std
gs
adc
or
jnp
stos
xchg
cltd
dec
fcomp
es
stc
out
in
or
lea
jb
out
rorl
pop
cmc
mov
stos
es
push
lahf
test
jbe
lods
dec
nop
pop
adc
mov
jp
rclb
out
jge
aaa
cmp
int
cmpsb
or
mov
lods
idivb
xor
icebp
push
or
add
or
xchg
sub
aaa
adc
sbb
popf
inc
pusha
lock
loopne
sub
cld
repnz
mov
testl
insb
cmp
cmp
jbe
popf
ljmp
mov
or
push
cmp
fwait
xchg
jne
cltd
cmp
dec
cmp
jo
fucomp
fidivl
repnz
nop
and
xchg
or
in
std
outsb
add
and
sbb
pop
rclb
es
sbb
rolb
jbe
mov
adc
mov
sbb
hlt
sti
mov
sbb
cmp
mov
loopne
pop
lock
and
xchg
mov
fwait
cmpsl
jnp
fcmovnbe
fdivrp
les
xor
cmpl
pop
cwtl
addr16
push
mov
sti
ss
and
sbb
mov
fwait
repnz
push
ss
out
cmpsb
push
adc
ja
push
sbb
adc
fldl
inc
fs
aad
inc
test
pop
aam
ret
adc
das
mov
jne
ja
mov
xor
test
loope
xor
push
mov
sbb
pop
fwait
jecxz
test
mov
pop
xor
insl
and
push
sbb
xor
mov
pop
iret
xchg
mov
sub
out
shl
lret
cwtl
add
rorl
cli
cmc
pusha
fsubl
aaa
pop
dec
pop
sbb
icebp
push
push
aas
arpl
sbbl
or
lahf
ret
pop
nop
push
hlt
and
mov
aaa
xor
out
test
out
pop
push
mov
xchg
dec
dec
js
mov
mov
out
enter
divl
loope
inc
roll
ja
rorl
lods
imul
cmp
dec
push
add
mov
pop
dec
adc
aad
sub
jno
cli
jb
pop
mov
xor
out
push
test
neg
xlat
lret
dec
cmp
adc
ret
cmp
mov
sahf
shl
add
push
pop
sbb
popa
std
cmp
xor
adc
cs
bound
lock
pusha
push
cmp
daa
or
push
mov
mov
jnp
je
sbb
out
jbe
in
lods
jne
std
xchg
rclb
xchg
and
adc
lcall
add
fcmovu
movsb
out
movsb
shr
scas
fnstenv
mov
xchg
or
push
lret
enter
xchg
add
mov
mov
data16
movsb
mov
dec
and
out
gs
inc
repz
shll
or
mov
push
xchg
fdivrl
mov
push
sub
jmp
std
mov
lds
pop
popf
sub
jb
or
mov
ret
movsl
xor
sbb
sub
shlb
aad
mov
ljmp
in
idivl
xlat
aam
inc
pop
rcl
scas
fidivl
data16
or
add
xchg
sub
jno
and
and
push
lahf
stos
cwtl
mov
pushf
pop
ja
jne
xchg
pop
push
mov
push
les
shlb
in
ja
lods
nop
cmp
fmulp
sub
push
cmpsl
sub
dec
leave
mov
aad
loop
ds
pusha
pop
mov
ret
mov
add
jne
iret
clc
enter
out
jno
cmc
jb
insl
mov
rcrl
ficoml
inc
add
mov
xchg
jo
out
adcb
sub
call
in
out
fldl
pop
lcall
and
cmpb
test
push
jg
ficomps
add
push
ljmp
and
leave
mov
das
ds
test
cmp
movsb
mov
jge
inc
adc
hlt
shlb
sub
sbb
rolb
divl
ss
jg
rcl
inc
push
bound
cmp
in
lea
mov
mov
and
leave
inc
adc
xor
sbb
xchg
mov
and
or
aam
jle
daa
lcall
dec
cmp
shl
insl
js
pusha
sbb
jno
sub
or
cmp
jl
push
add
out
dec
push
mov
push
je
xchg
or
jns
scas
js
fadds
xchg
ljmp
push
xor
xchg
mov
cmpsl
iret
push
jecxz
test
cmc
sub
sub
mov
add
les
stos
mov
into
push
leave
or
test
es
bound
iret
fs
repz
xor
sahf
adc
xchg
jecxz
nop
add
jecxz
mov
inc
lock
cmp
xchg
or
push
push
mov
lock
inc
xchg
push
stc
sahf
shlb
cmc
pop
popa
test
and
les
push
test
scas
inc
mov
sbb
loop
fcoml
cmc
loop
jmp
mov
loope
mov
out
add
dec
and
lcall
movswl
aas
sti
in
mov
test
push
scas
adc
or
mov
movsb
jecxz
mov
movsl
or
ret
adc
adc
loopne
push
test
jnp
mov
mov
sbb
lret
mov
lahf
fsts
ret
les
xlat
xlat
or
fst
cmp
lret
sbb
sahf
or
pop
nop
mov
into
in
pop
aas
xor
and
cltd
jmp
xchg
mov
cltd
dec
lds
pop
xor
clc
je
push
nop
inc
jmp
das
stos
lcall
jno
pop
dec
add
dec
mov
cmp
movsl
iret
popf
movsb
shrb
add
sbb
jo
or
fcmovnu
icebp
in
adcl
out
daa
jnp
and
inc
mov
sub
dec
mov
jmp
dec
sub
call
mov
adc
bound
sar
xor
das
dec
pop
cli
inc
dec
js
pop
clc
movb
ja
xor
mov
sbb
lea
mov
xor
push
sub
ffreep
xchg
mov
les
push
aam
mulb
mov
fcoms
loop
adc
jmp
mov
data16
add
cmpsl
or
into
cmpsl
xorl
mov
cmp
icebp
loope
mov
sub
sbb
jo
sub
pushf
jecxz
ds
mov
ljmp
adc
jecxz
push
dec
icebp
addb
aas
fdivs
xchg
rolb
fdivl
jl
loopne
loopne
fucomi
push
add
sub
data16
fnstcw
mov
fstps
mov
pop
jne
add
jmp
mov
rclb
mov
decb
out
aaa
mov
mov
les
std
sbb
cli
les
inc
popa
movsl
cmp
mov
sbb
add
xor
pop
or
sbbl
repnz
jl
hlt
add
jns
mov
inc
std
scas
das
sub
add
sbb
jo
jns
push
dec
sub
and
lahf
nop
in
pushf
out
pop
mov
arpl
push
mov
loop
dec
push
or
jae
sahf
jnp
mov
or
movsb
inc
push
xchg
dec
stc
mov
push
push
push
xchg
cmp
out
jae
dec
jne
push
andl
sub
mov
cmp
je
sbb
fnstenv
xchg
cmpsb
das
andb
xor
jp
fsubrl
push
cmp
fsubrp
adc
pop
push
ret
add
dec
roll
xchg
sbb
adc
divl
jecxz
dec
loope
movsl
popf
dec
std
setl
add
jecxz
ret
leave
jbe
inc
inc
dec
dec
cmc
pop
je
insb
cmp
ret
lea
inc
xor
inc
aas
push
mov
xchg
insb
ljmp
mov
les
push
inc
inc
sub
and
test
mov
out
mov
rorb
xchg
pop
imul
int3
pop
sbb
jecxz,pn
push
leave
adc
leave
test
push
enter
int
lcall
push
dec
stos
ljmp
lods
dec
xacquire
pop
in
adc
aaa
add
cmpsl
pop
test
popa
mov
add
jno
lahf
inc
cmp
jmp
je
push
jecxz
jecxz
push
mov
sbb
inc
cmp
adc
xor
dec
pop
sbb
fsubs
shl
fistl
mov
subb
lods
push
pusha
fcompl
int3
sub
jae
xor
sbb
pusha
or
lcall
sub
repnz
pop
aaa
shl
sbbl
cmpsl
xor
sahf
test
mov
bound
js
rolb
out
xor
sub
arpl
inc
imul
pop
or
mov
leave
ds
or
outsl
jl
das
jecxz
shrl
mov
cmc
in
loope
subl
add
into
xchg
in
loop
cld
aas
stos
stos
push
push
cmpsl
push
mov
mov
push
push
adc
cwtl
roll
das
arpl
imul
sub
mov
mov
or
shr
inc
jg
jbe
outsl
repz
out
pop
mov
test
mov
add
jns
into
fcmovnbe
jae
add
repz
push
jnp
or
orl
pop
stc
pop
fisubrl
daa
bound
iret
mov
or
pop
ds
nop
push
jg
fwait
rorb
cmp
add
pop
push
stos
daa
or
mov
icebp
bound
call
enter
dec
mov
jmp
mov
xchg
les
add
jg
cmpsb
ret
push
fidivs
movsb
jmp
mov
mov
jae
sbb
cmp
in
push
dec
add
jmp
ljmp
addr16
cwtl
shrl
inc
aam
mov
mov
cmpsl
aam
fdivr
mov
push
mov
jns
adc
cltd
outsl
and
add
pop
inc
mov
movsb
sbb
aaa
lods
ss
mov
add
mov
dec
sbb
outsb
pop
cmp
sbb
mov
push
jno
mov
sarb
lret
clc
mov
xor
xchg
xor
mov
and
or
fbld
push
pop
push
test
lock
and
xchg
pop
dec
xchg
and
setbe
ret
loop
dec
in
mov
mov
xchg
push
adc
sub
pop
dec
push
mov
je
popf
out
cs
hlt
ljmp
add
xchg
jne
imul
daa
enter
mov
xor
mov
jb
popf
cmc
aad
cwtl
pop
mov
frstor
popa
iret
or
xchg
gs
adc
pop
adc
mov
mov
addb
pop
jo
add
leave
mov
jnp
scas
pushf
cmp
mov
and
dec
sbb
jo
inc
add
fdivs
pop
inc
gs
dec
push
push
insb
mov
cmp
cmpsl
mov
lea
xlat
jge
test
sarb
out
sub
fs
xorb
add
xchg
jo
xor
mov
cmp
vmaxss
and
adc
sub
andb
clc
mov
bound
cmpsb
into
mov
mov
xor
scas
clc
sti
add
cmp
mov
mov
push
stc
mov
xchg
jge
jne
mov
lahf
sub
sub
sbb
testl
push
sub
movsb
cwtl
sbb
fnstenv
enter
ficoml
and
ja
pop
xor
sub
fs
insb
xor
mov
int
shl
shl
bound
data16
shlb
aam
sub
out
testl
jge
sub
pop
jl
jecxz
test
data16
cmp
jmp
push
jno
or
or
pop
inc
mov
cwtl
int
add
movsl
sahf
mov
lahf
das
jns
das
popa
test
xchg
sub
fldt
xor
fsubr
pop
or
fisttpll
mov
jg
xlat
jns
das
out
mov
jo
mov
xchg
adc
jl
push
sub
sbb
aaa
inc
mov
pushf
pop
inc
cs
add
lods
dec
adc
into
and
adc
sub
sbb
mov
sub
mov
mov
pop
push
loopne
pop
jle
sbb
xor
push
shl
icebp
pop
push
int
movsl
ret
aaa
rcll
mov
xor
xor
out
dec
call
lret
push
xchg
dec
push
cld
outsb
rorl
int
les
mov
and
push
xor
lea
js
and
stos
xchg
das
ja
jns
jbe
sbb
int3
mov
pushf
xlat
lea
imul
adc
rorl
inc
push
jne
adc
out
dec
mov
dec
cs
setnp
mov
lcall
cmovbe
test
inc
mov
sub
in
jmp
xchg
add
clc
mov
jne
inc
shrl
and
pop
insl
jp
in
out
int
push
sbb
icebp
jnp
testl
xchg
push
out
jl
adc
cmpsb
sbb
pop
xor
add
sub
sub
std
leave
into
pop
pusha
test
repz
dec
xchg
inc
push
sbb
loopne
inc
sub
fcmovu
out
fbld
inc
paddw
sbb
call
mov
in
xchg
fiadds
hlt
popa
test
movsl
or
mov
sub
stos
dec
addl
cld
imul
mov
imul
scas
ja
mov
mov
enter
jmp
add
sub
ss
or
sahf
loop
mov
jbe
inc
sbb
or
inc
pop
or
sub
xor
mov
cs
fmul
pop
jle
ljmp
out
xchg
and
repz
sub
mov
sti
mov
cs
xchg
test
xchg
pop
loope
inc
mov
pop
mov
test
ds
push
pop
aad
push
cwtl
jnp
cld
push
inc
mov
pop
fwait
jecxz
mov
sbb
xor
call
ret
sub
int3
cli
js
push
btcl
xor
push
ss
in
mov
sub
test
outsb
fisubl
sahf
push
mov
daa
mov
dec
dec
jmp
xchg
into
stc
jle
lds
xchg
jnp
mov
hlt
sbb
and
mov
cmpsl
and
jno
in
jle
mov
loopne
pop
shld
clc
hlt
gs
loopne
adc
pop
ret
std
into
adc
scas
inc
aad
adc
das
lea
fdivr
mov
insb
and
or
add
cld
cmc
iret
sahf
mov
cmp
jbe
add
and
test
push
xor
adc
stos
js
lods
mov
mov
add
cmp
mov
push
outsl
hlt
fisttps
sbb
jl
jb
cmp
decb
inc
mov
xchg
xchg
jmp
mov
add
frstor
loop
xor
ret
pop
sbb
add
aas
xchg
lods
mov
xor
xor
stc
sbb
and
mulb
pop
daa
subb
add
and
lea
sti
into
and
push
sbb
cmp
xchg
clc
inc
cmp
pop
movsb
dec
in
dec
cs
ss
lods
xchg
sub
js
imul
mov
imul
pop
test
into
adc
cld
int
dec
cmovp
mov
sub
or
push
negl
sub
mov
das
or
in
fldl
loopne
xlat
int3
imul
rcrb
jns
pop
les
add
pop
cmc
scas
jns
aam
and
and
negl
push
popf
loope
stos
ret
pop
push
gs
aad
test
rcrl
mov
lret
sti
and
lcall
outsl
add
pop
or
xor
and
dec
popa
pusha
cld
mov
add
cmp
jg
mov
lahf
sub
mov
sbb
int3
push
xor
mov
push
inc
mul
jo
sub
int3
mov
into
and
push
mov
loopne
ljmp
adc
cmc
xor
in
mov
enter
in
sbb
dec
adc
divl
pop
mov
lret
cmp
loop
jae
andl
jl
mov
in
imul
mov
dec
int
ljmp
loop
push
scas
dec
xchg
dec
adc
jge
xor
cltd
out
adc
mov
mov
stos
std
int
hlt
cmp
loopne
xchg
adc
mov
dec
pop
jnp
loope
add
lcall
cmp
mov
jb
iret
adc
xor
roll
cmpsb
mov
push
mov
outsl
int3
and
movb
shrl
ss
movsl
push
and
add
cwtl
jno
mov
sbb
aaa
sbb
sub
pop
rol
mov
jle
ret
out
push
push
mov
sub
xchg
cmp
pusha
push
inc
sahf
push
orb
js
mov
cmpsl
hlt
jno
sbb
or
sub
pop
push
scas
outsl
pop
lds
mov
mov
aas
sbb
cmp
mov
out
push
fs
mov
jge
dec
jne
cmp
pop
pop
jg
ja
jge
inc
nop
lods
inc
iret
outsl
xchg
aas
ret
push
xchg
push
push
xchg
sbbl
lods
iret
cli
pop
and
jae
into
cmpsb
ret
xor
push
cli
sti
insb
rorb
neg
add
negl
mov
adc
pop
icebp
add
sbbb
fnstenv
nop
stos
mov
scas
cltd
add
adc
dec
out
sub
or
adc
mov
xchg
mov
out
add
les
add
adc
dec
out
xor
movsl
ljmp
push
or
bound
cmp
sbb
sub
fnsave
inc
add
das
lock
movsb
rcll
jmp
mov
adc
mov
repz
mov
loopne
iret
cld
add
and
cmp
xchg
out
stc
cs
cwtl
and
xor
test
popa
add
call
daa
lods
adc
insl
dec
mov
jno
loop
sbb
mov
lock
cmpsb
stos
in
fstpl
xchg
out
and
into
add
leave
sbb
in
or
dec
mov
test
rorl
iret
aad
dec
cmp
cmp
ljmp
push
aaa
fs
addr16
push
in
xlat
xor
or
and
or
mov
aas
ret
adc
cmp
testb
cmp
test
dec
add
out
mov
xor
add
popf
lods
push
adc
jne
and
pushf
or
divb
adc
or
xchg
push
sbb
orl
push
push
jo
mov
in
inc
inc
xchg
or
dec
test
roll
fimull
jmp
cs
aad
jg
push
les
ret
or
lahf
out
fsubrl
mov
mov
mov
jb
decl
fadd
cmp
rclb
out
sahf
dec
add
movsl
dec
add
lret
jo
xchg
sbb
ret
mov
or
sbb
lods
pop
and
dec
cwtl
cmp
nop
pop
jg
mov
pop
daa
imul
xchg
ljmp
add
pop
pop
push
lods
mov
shll
sub
mov
popa
fcomp
sarb
addb
shlb
add
inc
or
push
repz
add
mov
push
arpl
fs
cmp
movl
data16
out
pop
inc
in
iret
dec
aad
mov
jl
or
add
hlt
cmp
repz
jg
fisttps
xchg
pushf
pusha
and
add
dec
jp
pop
test
ljmp
push
inc
push
nop
pop
loope
ret
fstpl
in
jnp
mov
push
xchg
xchg
push
frstor
hlt
mov
pop
mov
int
pop
popf
mov
mov
movsl
cmp
mov
pop
bound
push
fs
jno
lret
adc
and
or
rorb
sub
push
loop
sbb
jecxz
ss
and
pop
pusha
xor
adc
fsubl
sarb
lahf
ret
cmp
add
test
dec
fistpl
cld
outsb
icebp
or
xchg
dec
fdivp
outsl
out
pop
imul
js
rcrb
sbb
xor
inc
add
cmpsb
mov
leave
add
jae
gs
shr
movsb
push
sub
add
insb
xor
aas
adc
cmp
popf
loop
mov
add
das
jb
cmp
add
fs
lods
or
xor
aas
les
hlt
mov
cmp
lods
std
push
sub
mov
sbb
insb
cmpsb
xchg
adc
sbb
xor
clc
int3
inc
mov
lret
in
cmpsl
xchg
cmpsl
ss
popa
outsl
adc
fsubrl
inc
sub
mov
es
cld
lret
push
jo
data16
sub
jno
jno
push
fldlg2
xchg
shlb
roll
lods
lock
jmp
pop
mov
pop
mov
and
js
mov
sbb
sbb
scas
jae
test
imul
call
daa
mov
dec
mov
loop
inc
jb
scas
cmp
pushf
ljmp
push
hlt
rorl
fcomps
cld
jno
jne
fs
enter
ror
and
mov
mov
sbb
fisubl
rol
subb
test
push
hlt
push
sbb
jmp
aas
pop
rcr
xor
int3
jo
adc
daa
cld
fnstenv
mov
add
mov
mov
sub
ja
clc
mov
into
lods
xor
mov
in
and
lret
cwtl
cmp
pop
movsb
push
sbb
cmp
movsl
inc
ds
xchg
sbb
or
adc
iret
enter
ja
push
outsb
in
repnz
add
aad
stos
fidivs
mov
add
add
inc
or
inc
iret
addr16
ja,pn
jg
mov
movsl
cmp
mov
test
mov
or
jmp
lret
dec
rorb
xor
mov
xchg
xlat
push
movb
adc
push
sub
jp
add
sub
cmp
push
push
imul
nop
sbb
inc
outsb
lds
adc
xchg
xchg
xchg
repz
inc
pushf
aad
bound
push
xor
clc
out
pop
cmpl
xlat
in
or
aas
cmpsb
fucomp
jge
call
add
pop
addr16
dec
xchg
jl
jmp
lock
mov
push
aaa
fwait
adc
call
je
cmp
aad
pop
push
push
loopne
jle
dec
inc
sti
xchg
dec
mov
es
pop
mov
adc
mov
notl
outsl
jmp
mov
fsubr
jecxz
ds
xchg
cmpsl
sbb
ss
push
lea
test
mov
dec
arpl
movsl
sub
rcll
xorb
movl
jns
fwait
cmp
push
mov
jae
shl
xor
adc
push
pop
mov
sti
orl
push
scas
clc
cmc
pop
adc
mov
xor
pop
stos
ficomps
sub
mov
int3
loop
inc
mov
sub
sbb
cs
jl
dec
scas
das
mov
lea
pop
stc
rcrl
loopne
mov
rcll
mov
data16
imul
jae
jbe
cwtl
pop
call
dec
bound
out
insb
jb
xchg
pop
jmp
sbb
dec
pop
or
ss
popf
lahf
pop
jp
lcall
push
shlb
adc
sub
or
sub
sbb
dec
test
rcll
or
mov
xor
mov
std
test
test
aaa
lock
jge
mov
stos
xor
sti
lods
es
add
test
mov
dec
dec
into
add
mov
inc
nop
insb
mov
test
xor
jle
cltd
cmpsb
cmc
pusha
lea
das
loop
dec
dec
leave
test
inc
mov
jae
pusha
test
cmp
mov
sbb
sahf
and
push
push
mov
out
stos
icebp
rcrl
btc
aam
ficomps
imul
inc
push
test
sub
mov
sub
lock
test
dec
cli
sbb
ss
cmpsl
inc
cli
lods
test
lds
and
cmp
fsubs
sub
test
lret
inc
push
hlt
sbbb
jecxz
mov
pop
mov
pop
test
int3
pop
add
dec
adc
pop
lock
std
push
lea
ret
filds
test
ret
or
rolb
cmpsb
mov
mov
test
and
inc
in
jmp
rorl
out
in
or
in
cmp
sub
das
and
sub
cwtl
xchg
js
andb
lahf
enter
mov
fiaddl
scas
push
and
ljmp
repnz
xchg
ljmp
mov
dec
xchg
pop
les
push
imul
jae
push
nop
mov
xchg
ljmp
mov
xor
sub
test
push
shrl
push
hlt
loopne
sti
into
int3
adc
aas
arpl
in
cmpsl
inc
push
cltd
decb
mov
rcrl
int
push
adc
sub
in
fldcw
xchg
sti
sub
push
in
leave
imul
cli
scas
mov
push
xchg
mov
out
push
jecxz
push
jb
fbld
popa
movsb
aam
pop
mov
mov
stc
sbbb
mov
not
sbb
pop
lcall
mov
lods
aam
imul
and
pop
xor
sub
test
movl
push
fwait
adc
jmp
push
and
scas
dec
fcomps
jb
ds
sbb
or
pop
out
dec
sub
pushf
xor
sub
das
mov
cs
std
xchg
rolb
mov
inc
std
sub
mov
sub
out
fstpt
icebp
je
gs
in
cmpsl
and
push
out
dec
mov
jl
inc
mov
sub
icebp
xor
mov
inc
bound
mov
ja
nop
out
add
roll
stos
std
test
jg
bound
xchg
js
xchg
xchg
mov
insl
arpl
inc
adc
xchg
test
int3
sub
rclb
sub
imul
adc
xchg
lds
or
fsubs
pushf
or
out
push
addr16
dec
js
jb
stos
das
je
leave
sbb
pop
or
sbb
ss
sbbb
outsl
fwait
push
mov
int
add
push
xchg
stos
ret
sub
std
cmpsb
imul
sub
xchg
daa
push
jge
pop
mov
mov
js
out
fnstenv
fndisi(8087
push
add
repnz
jp
cwtl
in
jmp
movsl
fildl
jge
bound
mov
push
inc
adc
sub
add
dec
movsl
cld
push
fsts
jl
sbb
mov
into
pop
lcall
je
mov
mov
arpl
xchg
fistpl
add
mov
ret
or
pop
fs
sub
jb
test
xchg
loope
and
or
fstpt
stos
fcmovnu
aad
push
andb
dec
jecxz
rcrl
rcrl
pop
cmp
leave
adc
xchg
imulb
lods
fnstcw
xor
xchg
orl
int
arpl
jp
xor
notl
dec
mov
add
cs
xor
mov
test
inc
xchg
adc
push
or
pusha
cmp
ret
cmpsl
mov
sbb
or
fbld
xlat
jecxz
cld
jns
xchg
inc
js
xchg
inc
add
mov
and
cmc
rcl
pop
rorb
adc
mov
cs
jo
add
sti
test
mov
cmp
stos
or
mov
sbb
pushf
sub
pusha
fildl
pop
out
and
sbb
xchg
mov
mulb
mov
jns
in
mov
push
adc
gs
push
add
iret
xor
out
push
pop
test
faddl
lret
loopne
pop
enter
mov
cwtl
cmp
dec
fistl
jmp
call
xorl
outsb
xor
shll
inc
repz
insb
jecxz
jae
pop
and
mov
iret
test
dec
jae
sub
inc
cli
ss
mov
jno
sub
lahf
jle
inc
pop
andb
and
push
clc
pushf
sub
sbb
push
add
dec
or
repz
cmp
aam
mov
stc
outsb
or
or
pop
ror
lods
mov
mov
faddl
icebp
mov
ds
inc
cmp
push
in
mov
dec
adc
and
dec
xor
repnz
dec
imul
cli
test
mov
inc
pop
stos
pop
scas
jecxz
add
sbb
mov
jmp
sbb
imul
pop
mov
sbb
inc
scas
pusha
mov
mov
or
addr16
add
jl
lret
fcom
subl
aam
scas
push
hlt
inc
les
ss
dec
mov
mov
sbb
mov
insb
cmc
and
arpl
jg
lds
bound
out
cltd
div
jnp
xor
inc
add
or
sub
pop
mov
cmp
daa
xchg
xor
shr
adc
mov
push
push
add
sub
mov
shll
xor
mov
pop
mov
mov
ret
mov
shrb
cmp
out
mov
lret
xchg
lcall
rclb
adc
adc
mov
mov
mov
stos
inc
ds
jl
ret
lret
notb
ret
or
out
mov
xlat
out
pop
push
dec
xor
leave
in
mov
mov
mov
ror
jns
mov
cmpsb
rol
pop
mov
xchg
fs
gs
mov
popa
loop
fisubs
pop
test
jmp
cwtl
test
jb
mov
cld
hlt
inc
mov
pusha
push
fucomip
outsl
xor
fwait
inc
bound
xchg
mov
cmc
or
cwtl
lea
mov
rcll
mov
push
mov
lock
cmc
dec
dec
mov
test
pop
daa
arpl
add
mov
orl
fisubl
and
inc
pop
lcall
sarl
fnstsw
out
add
hlt
loope
xchg
fistl
es
adc
add
sbb
lock
cmc
jle
imul
jo
add
add
xor
inc
int3
adc
fcmove
lahf
ss
jg
xchg
mov
stos
sub
jo
lock
mov
add
mov
cmp
gs
sbb
test
cmp
clc
sar
sub
pop
rcll
inc
shl
es
mov
rep
ljmp
push
pop
mov
mov
add
dec
in
mov
xchg
fucom
dec
sbb
stos
loope
lahf
sub
mov
popf
jge
dec
stos
aam
shlb
cmpsb
add
mov
jno
jl
scas
jge
adc
icebp
test
in
aas
adc
mov
inc
ret
test
inc
lret
inc
mov
inc
in
adc
xchg
sbb
mov
mov
shrb
xchg
mov
ret
mov
cs
pop
aad
int3
and
pop
fbld
push
mov
jno
ficomps
mov
lret
shr
outsb
pop
dec
stos
fwait
sbb
test
decl
add
mov
les
sbb
movsb
imull
imul
aas
add
cltd
mov
in
adc
lret
fbstp
lock
mov
test
jp
inc
mov
push
mov
and
scas
jmp
lea
or
je
pop
and
testb
mov
cltd
scas
ret
test
adc
incl
sbb
pop
lahf
mov
dec
arpl
shlb
movsl
cli
por
cmp
sbb
pop
sahf
fwait
xor
lds
icebp
pop
in
adc
xor
icebp
cwtl
scas
add
aad
loop
mov
mov
sub
jg
std
pop
mov
mov
push
dec
pop
std
lahf
dec
negb
adc
clc
add
aas
pop
push
pop
or
test
xchg
push
mov
int
and
std
cmp
mov
jbe
push
dec
xor
popa
cltd
cs
cmpsl
xchg
inc
shl
sub
inc
xchg
push
arpl
inc
add
inc
mov
or
mov
aas
pop
adcl
nop
arpl
stc
lea
or
mov
mov
je
loop
xor
cli
out
adc
cmp
popa
mov
scas
aas
rorb
jge
daa
adc
into
dec
gs
es
test
imulb
dec
push
inc
sub
fdivl
aaa
scas
scas
cmp
fsub
cmp
mov
cmpb
faddl
jb
mov
lock
adc
enter
mov
int
push
inc
and
vpunpcklwd
mov
xchg
mov
mov
adc
push
cmpsl
fnstsw
xchg
imulb
and
pop
push
sbb
lret
inc
andb
ret
dec
mov
out
lret
cmp
dec
and
sti
loope
inc
cld
adc
scas
xchg
cmovs
mov
mov
popf
xchg
xchg
iret
cmp
pop
cmpsb
push
out
dec
gs
out
push
or
push
pop
loope
cwtd
pop
adc
jo
arpl
jb
sub
arpl
dec
testl
xchg
push
out
xchg
addr16
fwait
mov
addr16
mov
cmp
push
fcmove
cmp
mov
fistps
xchg
and
cwtl
dec
stos
add
aas
jnp
daa
cld
sub
sbb
loop
stos
jl
daa
bound
fcoms
ret
mov
mov
pusha
fnstcw
xchg
push
adc
jae
adc
and
mov
shlb
dec
cli
mov
insl
mov
lcall
jmp
jae
dec
shll
sbb
mov
sarb
jo
and
dec
imul
add
xchg
dec
in
imull
gs
lea
adc
iret
jp
lcall
jl
cli
dec
sub
orb
and
ret
push
ffree
into
cwtl
inc
clc
and
bound
mov
mov
push
enter
jb
xchg
lea
out
nop
add
dec
stc
ret
jmp
inc
out
bnd
mov
test
cltd
jmp
in
ror
adcl
xchg
in
xchg
data16
add
jno
inc
push
sbb
loopne
jmp
mov
jge
xor
sub
inc
fdiv
sbb
inc
les
data16
adc
mov
int
mov
std
test
outsl
dec
mov
xchg
imul
imull
dec
repz
popa
dec
pop
scas
ret
jo
xor
xchg
sbb
mov
mov
cmc
mov
addr16
cmpsb
fmuls
fisubrs
adc
loop
rorl
imul
mov
pusha
rcll
mov
mov
pop
psrlw
movsb
xchg
mov
push
imull
cmp
sbb
inc
int
xchg
sbb
sbb
int
cmp
roll
xor
sti
pop
xor
mov
dec
inc
ret
sahf
push
xchg
inc
cltd
lret
insb
xlat
stc
add
aas
mov
fsts
cltd
mov
push
lock
dec
dec
jno
arpl
mov
inc
mov
loope
cmp
inc
and
cmp
in
sub
popf
ficoms
cmpsb
je
cmp
in
mov
inc
shlb
fadds
inc
cld
lock
into
mov
or
jg
in
mov
xchg
mov
cmp
push
sbb
mov
mov
pushf
and
stc
lcall
mov
dec
xor
divl
xchg
data16
or
jbe
pushf
inc
mov
push
js
fadd
push
push
iret
sbb
cmp
cmpsb
std
add
negb
push
dec
mov
or
mov
popa
ja
js
sahf
daa
adc
dec
jo
mov
inc
ja
test
mov
lret
cmpsb
dec
fdivs
dec
pop
jb
mulb
pop
cmc
js
cmp
cs
add
fstpt
mov
les
or
ja
cmp
push
cmpsl
nop
pop
popf
sti
xlat
jg
push
pop
dec
xor
cmp
mov
repz
and
jecxz
xor
push
xor
jbe
dec
cwtl
cmpl
xor
sub
arpl
das
xchg
push
shll
cmpsl
fs
fs
mov
mov
imul
shlb
lcall
div
pop
movsb
scas
mov
cli
mov
in
inc
sbb
sbb
sub
fmul
mov
xchg
rorb
arpl
fdivrl
cs
xlat
test
mov
sbb
xor
and
cmc
sbb
mov
push
add
sti
out
scas
scas
lahf
mov
sbbl
sbb
mov
incl
dec
mov
push
je
ljmp
inc
push
imul
mov
or
sti
push
jae
inc
push
xor
dec
aam
jnp
inc
mov
mov
in
aaa
cmp
lahf
xchg
lods
add
test
int3
push
mov
push
pusha
add
push
in
push
jns
insb
cltd
jns
jae
mov
pop
jge
pop
mov
sub
sub
add
iret
test
pop
std
push
pop
cmp
popf
mov
xor
xchg
movsl
inc
adc
lret
xor
add
sbb
sbb
jge
or
test
cmp
sub
mov
les
pop
bound
pop
pop
clc
push
mov
popf
negl
xchg
dec
pop
cltd
pop
out
je
inc
sub
orb
jns
push
mov
cmpsl
cltd
mov
sti
sub
mov
clc
pop
push
cli
cmp
jl
cld
daa
or
pop
add
dec
shrl
mov
mov
or
jp
mov
jle
add
inc
shlb
aam
icebp
adc
mov
push
fdivrs
push
inc
stos
outsl
pop
roll
in
inc
xchg
lcall
jp
push
addr16
dec
sbbb
adc
jmp
push
mov
lods
sar
pop
repnz
pop
repnz
lods
mov
stos
in
out
push
and
rcrb
jo
add
xchg
adcl
mov
xchg
cmc
push
mov
push
mov
adc
imul
dec
test
xor
aad
nop
pop
ret
push
sub
mov
inc
outsb
add
adc
dec
and
pop
movsl
pushf
ret
insl
adcb
repnz
and
add
or
lret
and
fidivrl
lods
lret
cmp
fisubrl
pop
sub
sub
insl
sbb
and
lods
stc
movsl
adc
xor
lods
imul
jns
jmp
movsl
or
fwait
jns
xchg
clc
sub
push
jmp
in
mov
leave
leave
xor
aam
sbb
adc
pop
push
mov
in
shll
xchg
jge
addr16
push
enter
adc
repz
cmp
xchg
lods
mov
jge
mov
imul
jbe
fisubl
aaa
add
or
test
repz
push
mov
add
push
int3
pop
mov
and
jp
sbb
fldl
jbe
leave
xor
xchg
mov
fldz
push
std
ret
mov
xchg
dec
mov
xor
popa
dec
sahf
outsb
xchg
pop
fstpt
xchg
sahf
icebp
pop
nop
jne
mov
int
add
test
adc
das
inc
pop
fisttpll
insb
in
push
in
movsl
shlb
push
inc
jecxz
pop
aas
or
insl
loop
mov
movsl
xchg
inc
jp
nop
dec
xchg
dec
jb
jle
push
pop
jns
mov
int
addb
mov
adc
xchg
fmuls
push
push
stos
mov
mov
sub
pushf
mov
popf
mov
dec
add
or
in
aaa
fnstsw
pop
mov
mov
lock
sub
loopne
sbb
in
sbb
mov
adc
incl
mov
mov
cwtl
ja
or
ss
xchg
in
pushf
jnp
push
jecxz
mov
xor
xor
push
repz
cld
in
icebp
adc
mov
push
outsl
addr16
addb
jg
stos
addl
mov
lods
cmp
cmc
jmp
mov
test
sbb
sub
leave
lods
mov
rcr
inc
in
dec
ljmp
mov
in
push
jg
movsl
roll
orl
sbb
mov
cli
js
lret
sarb
mov
sbb
out
jmp
cmpps
push
mov
xchg
adcb
cmp
jno
cmp
xlat
sbbb
cltd
in
adc
cwtl
mov
push
or
movsl
out
cmpsb
jb
cmc
cmp
push
icebp
mov
pop
addr16
sub
rol
xchg
int
push
pop
rcl
cmp
cmpl
lods
lods
out
aas
mov
test
roll
pop
out
cmc
mov
sahf
icebp
pop
test
fadd
stos
dec
pop
xchg
lods
jb
xor
and
stos
fbstp
xor
cltd
int
mov
jl
int
cs
stc
insl
and
mov
mov
gs
xchg
fmul
lods
ret
imul
xchg
mov
ret
aas
xor
add
fists
push
loope
out
inc
testb
or
shll
sub
dec
push
ljmp
add
enter
jb
mov
and
imul
cmp
push
or
xor
adc
dec
sbb
scas
mov
or
les
inc
xchg
idivl
mov
repz
mov
push
mov
dec
insl
xchg
and
mulb
scas
outsb
mov
adc
jge
lret
es
pop
add
outsb
adc
ret
inc
cmp
or
inc
movsl
dec
mov
aad
in
movsl
and
inc
arpl
sub
jb
xchg
inc
clc
push
sarb
enter
mov
mov
jmp
test
nop
iret
cmpsl
std
inc
inc
pop
sub
inc
or
test
mov
and
xor
inc
insb
in
push
cmp
lret
mov
sub
movsl
test
cmpsl
inc
pushf
cmp
int
push
mov
xor
aaa
ja
adc
popa
xor
mov
js
sbb
rcl
cltd
push
out
daa
outsl
push
out
and
cmp
or
subl
mov
outsb
xlat
pop
sub
mov
add
mov
es
orb
push
inc
mov
sahf
lds
les
xchg
icebp
inc
mov
cmp
push
push
mov
pushw
sub
mov
bound
in
scas
xchg
mov
dec
cmp
fidivrl
lods
push
ljmp
int
hlt
adc
aam
add
lods
mov
xchg
xor
add
sbb
xlat
cmp
cwtl
and
sti
mov
mov
lea
lock
ret
vsqrtsd
or
sub
int
loope
mov
ret
pop
lods
js
adc
aas
pop
sub
hlt
mov
xor
sbbl
sbb
scas
xor
sbb
in
insl
movsl
mov
adc
cwtl
fs
cmc
jae
aad
dec
out
mov
xchg
aad
and
fcmovnu
out
data16
mov
data16
les
fldenv
int
xchg
or
dec
jb
sbb
mov
mov
push
mov
xchg
movb
push
sti
lea
fidivs
lcall
add
add
dec
sub
loope
sbb
push
dec
and
out
mov
fiadds
add
rcl
popf
mov
mov
pop
sub
jns
sub
cmp
jno
and
into
jns
xchg
addr16
leave
insb
jp
sti
pop
jg
adc
gs
aas
and
jo
test
cmp
mov
pop
scas
pop
xchg
notl
dec
shrb
dec
or
int3
call
inc
mov
ret
lods
clc
jno
gs
push
pop
out
cmp
xor
mov
mov
and
pop
add
or
fcoms
add
jl
in
push
pop
lods
pusha
mov
mov
xchg
out
cli
cmpsl
jo
inc
push
jge
push
out
ljmp
movsb
jne
jge
adc
stc
test
stos
shlb
push
dec
lea
sub
popa
xchg
sub
inc
sahf
in
sbb
xchg
outsl
or
push
in
jno
out
subl
movsb
push
push
jb
xchg
lock
inc
mov
lea
int3
shr
ljmp
testb
aas
xchg
or
jo
add
pop
mov
in
add
cmp
mov
and
jmp
sbb
std
ret
pusha
sub
dec
cld
leave
mov
jmp
dec
lret
inc
inc
ljmp
sub
inc
jno
jmp
inc
ret
lea
adc
sar
sub
sub
push
inc
and
jmp
test
pop
inc
sub
xor
xchg
sahf
in
jp
adc
imul
std
mov
dec
xor
xor
jne
stos
sbb
xchg
stos
xor
dec
mov
jle
jb
cmpsb
repz
int3
lock
lods
jno
aas
add
in
fs
sbb
lock
xor
jnp
mov
int3
mov
add
mov
cmpsb
pushf
fwait
repnz
mov
enter
mov
movsb
sbb
stos
xchg
sbb
sarl
repnz
push
rcrl
adc
pop
arpl
loop
jne
lods
inc
jmp
stos
arpl
aam
into
repz
add
adc
and
insl
jb
je
or
adc
pop
lret
outsl
mov
dec
adc
push
stos
outsl
sti
sub
mov
push
mov
or
inc
pop
aad
and
inc
daa
cmp
jle
fs
jne
adcb
sti
fmull
cmp
pop
dec
jnp
ret
lcall
inc
mov
mov
mov
shll
sbb
mov
out
fimull
mov
add
push
xchg
test
sahf
movntq
cmp
jmp
scas
sbb
push
or
je
fcompl
add
sbb
jns
mov
loope
mov
adc
test
xor
rcr
adc
fimull
or
xor
jmp
cmpl
mov
lods
fnstenv
imul
popf
test
cmp
mov
aad
out
subl
xor
xchg
push
int3
fimuls
push
cmp
leave
and
inc
or
adc
push
js
xchg
lods
in
or
in
clc
jne
cmpsb
arpl
pop
cli
add
test
push
leave
xor
pop
shlb
hlt
inc
dec
or
cld
mov
fistpll
out
inc
push
or
lret
or
mov
aaa
dec
loope
pop
fisubrs
in
imul
test
mov
push
arpl
sbb
add
aam
add
jns
ret
movsl
es
sbb
loope
jle
mov
xchg
daa
loope
pusha
lret
cmp
in
jae
rcrb
imul
jae,pn
pop
xlat
cmp
movsb
cwtl
mov
xchg
pop
orb
push
jp
stos
add
mov
cltd
or
jbe
loop
mov
mov
orl
sbb
call
fwait
cmp
clc
jne
mov
dec
xor
push
stos
push
inc
arpl
lcall
cmp
loopne
and
add
imul
shlb
xor
cmp
sbb
xchg
mov
jle
mov
jge
aas
jns
pop
shlb
in
pop
adc
adc
cmc
les
xchg
pop
dec
decl
stc
aas
adc
lods
pop
mov
inc
leave
test
shlb
adc
dec
leave
inc
cmp
iret
fisubl
mov
pop
xchg
cltd
popf
add
and
cld
cltd
clc
inc
mov
push
jb
loopne
mov
mov
fwait
call
jb
jecxz
push
fsubs
jmp
cmp
scas
jno
repnz
enter
pop
lods
mov
jl
test
scas
xchg
fnstcw
xchg
inc
pop
scas
sbb
inc
icebp
lods
or
xlat
pop
adc
xchg
mov
push
xchg
mov
mov
ja
es
scas
push
in
xor
inc
mov
add
and
jo
and
test
lods
add
call
xor
enter
or
int
xchg
jae
jmp
and
nop
and
cmp
adc
inc
cmp
shll
out
out
dec
inc
mov
mov
lcall
and
int
adc
xlat
int3
test
or
sub
loopne
xlat
and
inc
add
pusha
xchg
xchg
cmc
sub
ljmp
push
xor
rclb
loopne
pop
xchg
mov
push
xchg
les
mov
stc
jg
lcall
mov
adc
shrl
or
testl
bound
add
push
arpl
pop
mov
cmc
add
jge
jb
sbb
sub
pop
std
mov
iret
inc
sbb
jmp
stos
add
mov
sbb
adcb
adc
les
cmp
scas
mov
mov
or
std
dec
outsb
jmp
in
add
stc
adc
stc
adc
jno
sbb
into
sub
dec
xchg
pop
push
cmp
test
bound
divb
inc
cmpsl
std
cmpsb
sbb
fcoms
or
add
or
mov
xor
cmp
add
cs
shl
sub
daa
pop
or
sub
lods
xchg
jmp
outsl
fisttps
xchg
das
outsb
mov
adc
movsb
jbe
iret
fstpl
or
mov
xchg
or
mov
lret
push
mov
or
push
sub
push
sbb
roll
mov
adc
dec
xchg
pushf
fsub
xchg
pusha
shll
ret
lahf
fcmovnu
xor
inc
push
xchg
xchg
mov
jge
mov
negb
or
pop
xor
stos
int
add
sbb
and
and
call
xchg
mov
fmulp
sub
es
bswap
lods
ret
inc
repz
jbe
mov
jnp
add
push
pop
cmpsl
pop
outsb
out
out
xchg
cli
ret
and
and
daa
jns
js
adc
mov
xchg
dec
out
pop
mov
in
jo
imul
and
xchg
sbb
loope
es
and
das
insb
pop
rcrl
xchg
mov
scas
and
out
jecxz
negb
repnz
frstor
xchg
arpl
pop
jl
ret
sbb
jae
cmpsl
movsb
xor
stc
xor
nop
ds
jnp
rolb
popf
jno
inc
cwtl
dec
push
scas
sub
dec
dec
mov
lcall
xor
popa
pushf
repz
incl
sub
sub
das
adc
andb
js
sbb
repnz
inc
divl
sbb
cmp
cltd
ds
add
daa
call
jns
stos
or
aam
jmp
movsb
dec
push
and
lea
imul
mov
adc
xor
mov
int
std
pop
mov
mov
lcall
add
sahf
jno
add
mov
testl
fcom
push
pop
in
ret
shll
mov
lods
test
mov
fmuls
dec
and
push
push
mov
dec
insl
repz
aam
test
push
or
cmpb
insb
add
adc
fs
lret
mov
xchg
mov
and
das
push
sub
ss
push
cmp
adc
loope
mov
xchg
adc
out
dec
and
les
test
jb
in
pushf
out
cwtl
xchg
int
push
out
je
mov
rorb
aam
sqrtps
aas
int
sbb
pop
sbbb
mov
bound
test
das
adc
call
xchg
fstpt
jmp
je
sbb
sub
iret
pop
inc
out
stc
xchg
cmp
add
ja
ret
cmp
icebp
gs
cmp
in
ljmp
lret
cld
cltd
add
xor
sbb
cmc
or
xchg
push
mov
mov
cli
and
nopl
add
dec
mov
xor
icebp
shlb
push
cmpsb
js
or
mov
int3
movsb
or
sbb
mov
aaa
test
daa
cmpl
rclb
or
and
pop
push
fisubrl
xor
orl
pop
add
loopne
pop
aam
xor
fs
jb
dec
mov
fwait
test
clc
out
or
sub
or
cwtl
in
xor
cmp
mov
xor
pop
mov
cmpsl
adc
iret
xor
scas
imul
push
pop
fwait
push
add
in
lret
cmp
mov
sub
lock
xchg
std
mov
mov
fwait
jmp
jle
or
insb
sbbb
cmp
testl
mov
out
lahf
fsubrs
mov
popa
push
movsl
jecxz
pop
out
inc
cmpsb
xor
daa
fnstsw
mov
dec
add
xor
sub
inc
or
xor
sahf
xchg
cmc
fwait
push
dec
fildl
cmpsb
inc
gs
jmp
and
mov
rolb
mov
cltd
nop
lock
or
in
mov
pop
jmp
test
mov
push
mov
push
data16
sbb
mov
jnp
mov
test
and
mov
andl
push
xor
mov
pop
mov
in
mull
or
std
ljmp
stos
sti
sbb
and
xchg
xor
dec
sbb
test
arpl
test
inc
iret
test
adc
or
aam
mov
sub
js
fldcw
xor
ror
loope
int3
popf
inc
cmp
cli
mov
sbb
add
xchg
ljmp
mov
test
popa
jo
imul
sbb
js
data16
sub
fsubp
fistps
popf
cmp
adc
mov
les
out
pop
imul
addr16
jecxz
subl
gs
lods
or
push
in
mov
les
mov
mov
and
push
mov
mov
sub
ja
in
cmc
xlat
into
adc
xchg
ficompl
rcl
cmp
sub
and
adc
or
das
movsl
lahf
and
sbb
mov
mov
sarb
ja
pop
push
dec
mov
ja
jg
jmp
dec
xchg
nop
test
std
dec
dec
fsubrs
test
push
push
sti
inc
rorl
and
pop
dec
or
jns
jp
push
adc
enter
arpl
cmp
jno
dec
sbb
mov
loopne
mov
sahf
or
mov
mov
cmp
repz
std
pushf
jbe
fisubs
popf
stos
xrelease
cmc
jge
and
popf
mov
mov
stc
lcall
fptan
xor
outsb
add
loopne
pop
push
jge
int3
pop
add
dec
enter
shll
rcr
insl
ret
sahf
add
cmp
jg
popl
inc
mov
bound
adc
fdivs
inc
pop
bound
dec
push
movsb
push
push
lds
adcl
or
orl
inc
int
test
mov
dec
xchg
fs
popa
jl
pop
jmp
ds
lcall
shl
xlat
out
push
pop
jns
je
stos
or
push
mov
inc
sub
dec
cwtl
mov
inc
aad
sbb
mov
lea
call
cld
popa
repz
ret
mov
cwtl
cmpb
addr16
daa
lds
cmp
mov
mov
in
js
clc
add
dec
mov
sbb
jo
push
filds
scas
fwait
cs
test
adc
xor
loop
fwait
enter
mov
pop
leave
push
dec
pop
jp
scas
jnp
stos
pop
inc
daa
iret
fisttpll
mov
xchg
out
add
or
or
xor
dec
jne
pop
stos
jl
adc
adc
mov
xchg
ljmp
push
xor
lcall
pushf
sarb
mov
ljmp
in
inc
mov
cmp
mov
adc
lahf
int3
sahf
mov
jle
ficoml
push
out
orb
gs
jne
push
clc
orl
xor
mov
ret
and
rcll
mov
inc
fists
popa
sti
xor
and
test
mov
sub
mov
lock
or
pop
jb
movhlps
stos
daa
lahf
sub
inc
lods
jg
arpl
repz
jne
ja
cmp
call
cmc
adc
mov
fimuls
aad
stos
cmp
dec
int
ret
dec
fisubrs
pop
mov
push
xor
cmp
leave
movsb
mov
cmp
pushf
mov
call
jae
cmp
fmuls
xor
lods
rolb
cmpsb
fstps
ret
push
mov
dec
xchg
xor
insl
inc
dec
ja
les
pop
js
les
inc
fisttps
fdivr
sub
push
daa
fstps
arpl
test
mov
xchg
nop
cwtl
add
push
pop
and
divl
and
push
loop
sti
add
or
cwtl
mov
push
mov
je
lea
mov
repz
push
lods
test
mov
cltd
mov
adc
iret
fsubr
inc
add
dec
icebp
xchg
fdivrl
mov
aad
inc
add
pop
lods
jp
xor
xchg
mov
inc
jmp
ret
ret
jo
add
xchg
jo
push
jae
inc
hlt
in
scas
cs
sahf
ljmp
add
sbb
mov
and
jg
jb
or
jns
pop
lock
ret
cmp
out
pop
js
add
inc
scas
std
cmc
lret
xor
jno
test
xor
inc
test
mov
test
leave
jmp
inc
sbb
or
rcll
add
and
aaa
dec
and
movsl
es
lret
test
fdivrp
mov
sbb
subl
push
jg
jecxz
addl
or
stos
das
lcall
pop
mov
xchg
jae
jno
daa
xchg
mov
sbb
pop
dec
enter
repnz
xchg
fldcw
sbb
add
add
mov
iret
cmp
push
add
xor
xor
fimuls
shlb
sbb
out
pop
sub
nop
sub
xchg
in
ljmp
out
mov
mov
inc
mov
das
inc
mov
movsl
lods
out
mov
pop
addl
test
in
xor
push
icebp
jne
das
aam
xchg
in
cmp
add
xchg
mov
bound
jecxz
dec
imul
jp
add
fsubs
xor
cld
pop
fstps
cmpsl
sub
push
in
enter
pop
adc
mov
jo
jne
mov
out
pop
lret
je
dec
or
xor
or
pushf
push
cwtl
int
inc
stos
sbb
mov
int3
fucomp
cmc
sub
outsb
or
test
loope
pop
adc
pop
iret
pop
mov
inc
clc
adc
inc
mov
adc
mov
mov
push
stc
das
lahf
cli
inc
mov
scas
mov
test
rcrl
push
jle
dec
adc
mov
es
push
ja
outsb
arpl
xchg
dec
ja
or
popf
mov
popf
push
mov
xchg
orl
push
dec
inc
mulb
jecxz
push
cmp
jae
push
and
xor
sarl
push
dec
push
or
xchg
push
xchg
xchg
inc
mov
fnsave
lock
mov
inc
lods
or
cmpsb
ret
and
orl
repnz
xor
outsl
sub
sub
dec
xchg
mov
mov
pusha
mov
push
xor
mov
xor
push
fistps
mov
in
cmpsb
pop
push
psrld
call
leave
daa
xorl
push
dec
cld
sub
jno
test
mov
mov
xchg
or
lock
ret
imul
lret
daa
pop
pop
dec
outsb
test
mov
in
jne
lods
jnp
xchg
mov
pop
adc
xchg
js
cmp
mov
dec
lret
fnstenv
inc
pop
pop
pop
jp
les
xchg
cli
lahf
sub
xor
mov
and
mov
pop
fisubs
pop
subl
adc
xor
cltd
sub
mov
push
sub
dec
test
mov
je
in
mov
mov
orl
and
mov
aaa
cmp
push
mov
pop
jbe
pop
jge
in
xlat
sbb
pusha
call
int3
xchg
xchg
repz
xchg
popa
lcall
and
test
ret
repnz
scas
jecxz
jo
js
dec
aad
push
cmp
arpl
xchg
sarb
push
jge
scas
jae
ret
push
pop
cs
sbb
loopne
mov
cmc
mov
sub
pop
add
and
sub
mov
jns
mov
fisttps
xor
sub
call
xor
imul
loopne
push
and
in
and
mov
mov
js
push
xchg
mov
inc
jbe
lods
data16
and
push
push
mov
xchg
and
or
or
aas
and
je
or
idivb
jp
aad
or
sbb
xor
imul
cmc
cltd
mov
mov
fs
jl
imul
lea
inc
push
ret
mov
mov
push
mov
xchg
mov
addr16
insb
xor
jnp
cltd
push
mov
cmp
adc
sbb
mov
iret
mov
jno
fwait
mov
sub
lss
ja
orl
push
adc
adc
jmp
inc
push
jle
sahf
dec
lea
dec
pop
sarb
stos
test
out
gs
or
ret
sbb
jbe
xchg
jb
test
mov
and
insl
cwtl
mov
sahf
aad
jb
daa
test
imul
mov
mov
cld
mov
inc
or
ret
jne
gs
insb
loope
add
les
jbe
or
xchg
jle
scas
arpl
ljmp
pushf
sbb
inc
mov
jmp
ret
jmp
aam
cltd
and
fisttpl
push
sahf
inc
adc
aad
paddd
or
sub
outsl
ljmp
shlb
sbb
push
out
int
dec
mov
cmp
mov
jb
int3
xor
out
mov
jns
xlat
je
imul
inc
pushf
jo
mov
stos
cmp
jp
xchg
pop
and
xlat
xorb
movsb
iret
ja
outsl
loopne
jbe
dec
cmp
int3
pop
lret
and
ja
inc
andb
subl
popf
mov
pop
js
adc
leave
shrl
lods
xchg
inc
popf
lds
jp
jae
mov
jle
movb
scas
jns
pop
pushf
push
shlb
mov
cvttps2pi
ja
repz
movsl
xor
fists
add
shll
adc
int
rolb
mov
push
jge
xor
or
outsl
sub
add
fcom
mov
push
xor
fs
fisubrl
pushf
lcall
daa
sarb
mov
movsb
cmp
or
xor
mov
mov
adc
movsb
add
and
sub
mov
pop
push
stc
push
push
je
or
fwait
pusha
sub
xchg
shll
cmp
mov
loopne
and
les
sbb
mov
or
loop
rcr
ja
jbe
or
pop
cmpsb
jp
add
out
adc
mov
push
imul
jmp
jmp
ljmp
nop
mov
loope
and
cld
push
xchg
cmpsb
mov
dec
jecxz
test
mov
idivl
fidivrl
cmpsb
loopne
out
add
test
mov
sub
jmp
cmp
or
adc
sub
pop
xlat
fs
or
sbb
mov
lods
jnp
es
ret
sahf
pmullw
mov
or
inc
addr16
out
scas
sbb
imul
mov
pop
ja
pusha
and
mov
sar
cmp
dec
sub
push
pop
add
mov
ficoms
ja
data16
outsb
jmp
dec
imul
push
data16
loop
std
icebp
or
jmp
xchg
xchg
pushf
cltd
mov
lods
cmpsl
or
lds
ljmp
out
push
jns
mov
push
rcrb
rcrl
pop
test
movsl
sub
popa
xchg
add
ds
xchg
and
jg
fsubl
data16
out
insl
dec
hlt
fstpl
xor
xchg
or
loopne
or
add
jne
mov
pop
mov
out
dec
outsl
push
popf
out
push
loope
loope
outsb
mov
int
frstor
pop
xor
movsl
xchg
pop
cmc
out
cmp
mov
inc
and
push
cmp
cmp
mov
pop
push
loop
adcb
in
call
in
sbb
dec
sub
js
or
scas
inc
mov
fildll
or
inc
xchg
clc
enter
cmp
dec
adc
add
push
dec
mov
fwait
jns
sub
shl
shll
flds
add
daa
and
ror
mov
xor
int
inc
dec
lret
adc
or
inc
into
arpl
testb
dec
arpl
orl
cmp
stos
cmp
dec
fmul
cld
push
lods
xchg
mov
in
mov
das
mov
not
pop
mov
push
mov
cli
cmp
jnp
mov
lea
mov
sbb
push
cmp
jne
push
sbb
sbbb
sub
inc
hlt
push
mov
sub
mov
or
stc
push
push
js
arpl
or
add
ss
pop
loopne
in
adc
lock
jbe
mov
adc
sbb
adc
pushf
jle
or
mov
sbb
adc
negb
add
add
test
dec
mov
sub
pop
sbb
in
or
inc
push
mov
loop,pn
lods
jno
fs
aas
clc
fildl
jb
leave
mov
fsubs
xorl
cmp
pop
gs
mov
icebp
xchg
cmpsl
in
sub
popa
mov
daa
mov
cs
stos
stos
imul
cmc
imul
jo
std
pop
out
cmp
cwtl
lret
rcr
mov
push
shrl
pop
aam
push
in
mov
mov
ffree
test
cltd
rorl
inc
dec
dec
int3
and
pop
jmp
fsubrl
pusha
adc
adc
and
test
lcall
aam
int
or
inc
pop
fimull
rclb
sbb
inc
adc
call
cmp
add
dec
popf
add
mov
add
outsl
dec
xchg
cmp
or
xor
ret
in
or
mov
push
out
adc
repz
pop
inc
xchg
imul
shl
enter
lret
mov
dec
push
sub
jl
popf
add
call
pop
ret
cmpsl
and
cmpsb
add
orl
pop
outsb
enter
mov
sahf
pop
shll
xchg
fstl
pushf
xchg
sarb
out
ffree
dec
jmp
push
xor
pop
or
add
dec
mov
push
mov
mov
cmp
cli
test
lods
jo
xchg
mov
pop
and
orl
jl
dec
xchg
push
cld
fdiv
mov
cmpl
xlat
mov
dec
jns
scas
push
rcr
hlt
mov
out
andl
dec
inc
dec
xchg
stos
roll
loopne
push
add
mov
mov
push
xchg
xchg
or
adc
lods
sub
cmp
push
xor
adc
lcall
ss
fs
ss
iret
les
mov
pop
out
cmp
fcom
movsb
pop
push
iret
imul
imull
sub
sub
jg
pop
xchg
dec
jno
pop
sub
cltd
jmp
sahf
ja
mov
out
mov
lahf
gs
add
mov
mov
aad
push
jnp
or
out
out
lods
lods
icebp
mov
mov
and
clc
cmpsb
push
rep
cmpsl
in
sbb
fs
adc
xchg
mov
repnz
popf
jecxz
xchg
adc
es
dec
nop
mov
push
mov
pop
clc
das
adc
scas
lahf
dec
lahf
add
mov
push
adc
lahf
or
flds
adc
push
lea
test
loope
xchg
sub
mov
ljmp
jl
or
fldcw
adcl
or
jnp
dec
sub
inc
fisubrl
stos
fcmovu
enter
int
or
out
incl
addr16
xor
sbb
dec
and
xchg
cmpl
jmp
int
in
dec
and
inc
sub
int3
push
dec
gs
mov
call
xchg
and
ficomps
mov
cmpsl
inc
xor
lock
ds
xor
cmp
mov
imul
mov
outsb
fbstp
xchg
jbe
pop
cwtl
push
cmpsl
loopne
jmp
repz
sbbl
jmp
rep
sub
dec
daa
outsl
mov
ja
push
mov
xor
rclb
mov
xor
mov
or
push
das
cmpsl
test
mov
stc
inc
stos
or
jmp
pop
mov
mov
inc
jmp
dec
clc
jo
cmpsb
xchg
xchg
jae
sbb
leave
jne
sub
ds
into
push
and
cmp
cmp
orb
or
sahf
jnp
sbb
xor
add
xchg
fmulp
mov
push
das
xor
jecxz
dec
scas
and
mov
push
mov
cmpl
je
leave
dec
pop
sub
sti
inc
movsb
push
je
dec
lea
int
mov
inc
in
ja
mov
adc
mov
dec
xchg
nop
js
imul
aad
dec
jns
sbb
daa
sbb
sbb
mov
sub
cmp
leave
jg
add
lret
ja
pop
mov
inc
xchg
mov
mov
je
mov
mov
repz
fs
xchg
sbb
mov
inc
ds
pushf
xchg
mov
cwtl
jno
arpl
sub
and
iret
test
and
icebp
cmp
xlat
sbb
push
dec
insl
ret
or
xchg
out
xor
mov
imul
push
data16
pop
dec
and
jo
inc
ljmp
xor
sub
mov
mov
mov
sahf
mov
dec
lods
xor
dec
push
sub
push
jo
aad
cltd
lahf
inc
pop
out
jmp
dec
lock
lcall
cmpsl
adc
mov
jmp
mov
mov
adc
std
push
ds
adcb
jp
xor
dec
loop
aad
loop
pop
lret
xchg
sub
or
ret
add
sub
dec
inc
ss
xchg
mov
dec
fsubs
jl
cmp
push
adc
mov
rcrb
cmpl
dec
sbb
test
jl
movsb
insl
xchg
cli
jg
nop
mov
mov
aam
sub
jne
dec
pushf
push
in
dec
stos
sbb
insb
popf
test
mov
sub
test
negl
jo
fs
sub
sub
jmp
jnp
test
sarb
inc
xchg
es
mov
rol
sub
mov
xchg
outsb
mov
sub
test
push
aad
mov
lds
sbb
xor
mov
mov
mov
sbb
call
sti
jae
xor
push
and
mov
mov
pop
xchg
mov
adc
pop
jno
outsl
int3
in
inc
jecxz
cld
pop
and
add
test
mov
push
imul
mov
popf
jnp
test
mov
and
mov
pop
mov
xchg
pop
test
gs
sbb
rcrl
or
dec
cmp
xor
push
dec
sub
inc
sbb
and
sub
inc
jge
add
je
icebp
dec
dec
addr16
cmp
pushf
mov
sbb
inc
or
je
inc
xor
or
clc
add
jb
popf
pop
or
adc
cmp
jle
jecxz
adc
mov
sbbb
mov
fld
iret
dec
sbb
mov
mov
shrb
ret
scas
xor
xor
lods
add
aaa
fadds
pop
adc
int
and
xchg
daa
mov
pop
mov
xor
stos
jl
or
dec
jbe
movsl
xchg
aam
jmp
icebp
xor
outsl
jmp
test
xchg
push
mov
mov
aas
popf
out
test
movsb
ret
addb
sub
or
lcall
jo
nop
adc
inc
xchg
cli
aam
cmp
add
push
rcrb
stc
xor
jb
push
adc
dec
pop
mov
xchg
icebp
arpl
mov
sub
add
movsb
jle
fsubrl
les
int3
mov
mov
adc
sub
xor
adc
orl
adc
cmp
shlb
inc
imul
adc
repz
aaa
mov
sbb
in
mov
xor
pop
sti
movsl
std
pop
inc
mov
or
xchg
movb
push
jbe
push
lods
xlat
adc
jl
insb
out
cmpsb
fadds
popf
lea
pop
push
insl
pop
push
sub
subb
lea
lods
dec
xchg
repz
dec
addr16
popl
jbe
pop
mov
cmp
xor
adc
push
pop
jae
sbb
mov
mov
add
inc
ss
or
stc
js
mov
jnp
xor
ficompl
xchg
cltd
xchg
adc
insb
lock
jae
js
dec
stos
jns
jbe
xchg
insl
sbb
mov
icebp
jmp
subb
enter
cld
test
std
jl
xor
insl
and
jnp
sbb
loopne
add
push
and
or
sub
lock
ds
call
inc
movsb
out
lcall
shrl
sub
lret
adc
push
fisttps
lret
cmp
rol
push
movsb
movl
mov
stos
mov
cmpl
mov
inc
and
jecxz
xchg
sub
mov
dec
lea
aaa
cmpsl
push
mov
cmpb
out
daa
sub
out
push
jg
and
xchg
jne
adc
dec
pop
cmp
xor
inc
mov
or
xor
ficompl
sub
sbb
cmp
sub
mov
cmp
mov
mov
sub
cmp
fcompl
gs
test
add
mov
jmp
popf
lret
adc
imul
sbb
in
sub
push
add
lds
std
dec
fildl
jnp
xchg
xor
mov
in
fdivp
mov
out
lock
cmc
jns
xor
mov
aam
imul
pop
cmpsl
dec
rclb
dec
pop
mov
pop
sbb
insb
fidivrs
mov
cmp
int3
add
stc
fistpl
fistps
pushf
inc
js
xlat
add
push
cmp
and
out
pop
adc
sub
icebp
or
cmp
push
js
mov
lods
adc
out
movb
out
stc
mov
lcall
cmp
mov
adc
push
push
mov
sub
push
or
pop
pop
pop
xor
lods
aas
fstl
scas
into
jp
lret
sub
cmpsl
inc
fsub
xchg
imul
insl
xchg
add
cltd
daa
scas
jl
mov
lock
fmulp
adc
add
out
cltd
idivb
jle
inc
pushf
fimull
out
aas
jecxz
jbe
push
pop
shll
sub
shll
jnp
dec
loope
inc
shrl
mov
adc
push
ja
rcll
shlb
push
xor
inc
ds
shl
mov
mov
xchg
repz
adcb
mov
or
sbb
add
fs
pusha
test
pushf
or
lds
jecxz
fildll
aaa
in
dec
addr16
push
shr
mov
outsl
add
insl
mov
stos
xlat
sub
ja
lcall
jmp
xchg
ret
movsl
or
xchg
xchg
mov
push
icebp
gs
adc
jo
and
sbb
pop
xorb
cmc
push
inc
xor
mov
hlt
das
push
adc
push
das
sar
pop
mov
ljmp
pop
rcll
aam
sub
cmp
mov
cli
sbb
ds
outsb
cmpsl
in
mov
push
jecxz
xchg
jbe
mov
cmp
arpl
out
or
adc
pop
sbb
pop
push
xchg
or
ret
dec
dec
leave
xorb
dec
rcr
adc
mov
inc
cs
lret
mov
xchg
mov
push
lcall
pop
push
loope
sbb
jecxz
pop
pusha
pop
daa
and
iret
push
aad
int3
call
pavgw
xchg
cmpsl
mov
sub
jg
lret
or
sbb
xchg
loope
sahf
cmp
xor
push
lcall
mov
aad
sbb
jnp
cmc
inc
fistl
movl
imul
mov
cwtl
lock
cmpsl
adc
mov
mov
and
out
ret
xchg
jp
pop
lea
sti
test
lods
sbb
jb
cld
sbb
mov
dec
shlb
idiv
das
sub
push
lret
cli
xchg
outsl
fadds
sbb
fimull
pop
push
repz
pop
std
rcrl
popw
cmp
std
pop
and
sbbb
mov
nop
leave
sub
stos
mov
loop
pop
lret
test
pop
data16
inc
mov
ret
cmp
inc
push
dec
int3
fwait
test
cmp
jne
push
add
mov
sti
push
mov
pusha
pop
xchg
sbb
mov
inc
inc
out
stos
lds
xchg
jae
fstpt
sbb
cwtd
or
inc
cmpsb
bound
ret
xlat
pop
push
pop
mov
mov
das
es
pop
cld
cld
in
ss
mov
divl
cmp
mov
clc
add
mov
in
mov
adc
add
int3
aaa
sub
cmpsl
xchg
pop
mov
xlat
xlat
cmpsl
int
push
out
xchg
sub
jle
jne
mov
notl
mov
push
jbe
das
push
pusha
cli
movsb
leave
in
out
mov
pop
push
mov
and
mov
cltd
xchg
stos
out
jl
loop
es
fld
test
jp
cmc
inc
jo
mov
pop
adc
call
push
push
jnp
addb
dec
dec
cmp
dec
xchg
inc
sbb
out
movaps
xor
loop
push
out
shrl
inc
inc
stos
sbb
push
lcall
fistps
xlat
mov
repnz
sub
add
std
push
xor
icebp
add
sbb
loop
ss
sahf
jp
xchg
les
das
and
das
pop
or
aaa
lahf
jne
xchg
pop
jns
cmpsl
dec
push
and
dec
and
sbb
insb
rcrl
decl
sahf
repnz
dec
leave
jl
nop
xor
sbb
pusha
pop
scas
jne
mov
jecxz
rcl
fidivs
imul
push
and
test
cmc
test
mov
and
pop
testb
cmp
lret
and
and
lock
sbbb
add
pushf
es
dec
or
jp
iret
mov
sbb
aaa
xchg
cld
ret
mov
jb
mov
jecxz
addr16
mov
stos
ja
xchg
jge
rcrb
or
push
mov
sahf
addr16
jg
loope
and
cli
jne
out
aas
mov
test
in
sub
pushf
push
orl
or
mov
mov
xchg
leave
rcrb
pop
push
nop
aaa
jnp
dec
pusha
xor
cli
jle
imul
aas
xor
fists
and
jo
pusha
sbb
mov
ja
in
in
movsb
fs
jecxz
and
insl
adc
pop
pop
call
mov
dec
repz
decl
adc
sahf
mov
and
xchg
mov
jle
aam
mov
dec
mov
add
pop
add
inc
cli
sbb
push
outsl
push
aam
clc
cli
jge
inc
inc
insl
mov
xchg
cmp
mov
mov
cwtl
jne
add
mov
xchg
mov
xor
out
cltd
jecxz
lods
es
rclb
push
push
test
mov
pop
shrl
cmpsl
mov
stos
mov
pop
sbb
or
andl
shrb
fisubrl
insb
pop
ficoml
lcall
and
mov
in
loope
mov
push
jbe
stos
mov
sbb
pusha
sub
test
lods
jnp
cltd
add
xchg
popa
ss
cmp
inc
clc
test
lahf
ss
test
inc
lods
stos
pushf
stos
fidivl
adc
xlat
push
xchg
cmp
int
jo
xchg
jnp
gs
jmp
dec
adc
jno
sub
dec
int
xor
fsubl
mov
hlt
imul
repnz
adc
mov
outsb
aad
test
lds
pop
sbb
sbb
icebp
loope
iret
push
mov
pop
sbb
adc
out
cmp
es
out
outsb
pop
fstps
nop
pop
mov
xor
mov
out
pop
xchg
movsl
mov
xorb
and
mov
pop
inc
jns
sti
xchg
sub
enterw
and
xchg
shll
inc
dec
popa
arpl
les
and
decl
testb
fldlg2
es
mov
leave
and
jl
push
stos
sub
bound
mov
je
or
dec
sub
testb
xchg
aaa
bound
and
add
inc
cmc
push
push
shrb
adc
lret
mov
mov
sbb
movsl
stc
dec
lahf
add
pop
repnz
xor
movsb
pop
sub
cs
js
sub
daa
sbb
inc
mov
ret
repz
sarb
cmpsl
call
mov
mov
test
mov
in
push
ljmp
addr16
xor
cmc
sub
mov
pusha
sti
icebp
jge
rcl
or
inc
clc
and
jnp
in
cmc
lcall
and
clc
lock
imul
dec
sub
mov
jbe
jp
mov
push
xor
pop
test
inc
add
cmpsb
in
xor
mov
mov
dec
pop
cltd
test
outsl
cli
jo
fiadds
insl
movsb
mov
adc
js
push
push
dec
add
repnz
clc
xchg
mov
daa
push
jnp
xchg
fisubrs
out
or
xchg
divl
sub
mov
leave
jge
inc
push
aas
nop
das
pop
add
pop
icebp
dec
pop
inc
push
dec
add
ds
xor
xor
testb
adc
or
jne
inc
shlb
push
pop
mov
mov
stc
pop
loope
xchg
mov
fwait
in
xchg
icebp
popf
adc
loope
pushf
int
fmuls
dec
mov
and
mov
into
aad
inc
jg
adc
dec
es
pop
scas
jmp
cmpsl
repnz
jne
out
jns
push
jle
fwait
out
in
iret
js
mov
inc
sub
in
rcrl
andb
loope
mov
cli
jo
nop
push
xorb
pop
es
or
std
sahf
xor
loope
fmull
andl
pop
sbb
inc
stos
mov
test
jp
mov
arpl
sbb
jnp
sbbb
lret
or
ljmp
push
ret
cltd
rol
adc
das
cmp
jg
mov
out
sub
xchg
jp
cmpsb
pop
sbb
insl
jne
push
xor
xchg
pop
sahf
in
test
xchg
loope
bound
cmp
mov
stc
lret
shll
loop
sbb
out
jl
push
sarb
cmp
ds
adcl
xor
jae
inc
lahf
cmc
cmpsb
push
and
int3
mov
mov
pop
dec
cmp
test
inc
pop
mov
ja
jg
jne
mov
stc
mov
insl
leave
and
std
lcall
sbb
mov
cmc
stos
dec
std
dec
mov
int3
loop
arpl
lods
push
idivb
xchg
push
pop
repz
xchg
popf
sbb
xchg
xor
fwait
adcb
mov
in
add
mov
movsb
adc
cmpsb
aas
popf
mov
sub
call
and
jne
push
adc
cwtl
sbb
das
jecxz
add
int
lods
imul
mov
or
in
jo
lahf
sub
icebp
cmp
xchg
rcrl
lea
sti
mov
mov
pusha
push
pop
xor
add
pop
push
je
mov
or
shlb
jge
out
arpl
ljmp
lret
inc
sarl
mov
push
mov
jnp
fscale
neg
cli
cmc
push
cmpsb
sti
in
imul
xchg
push
ds
mov
cmp
and
add
jno
lods
es
cmpsl
cmc
rclb
sahf
in
in
je
cs
jp
xchg
mov
dec
in
mov
fldl
imul
jns
sahf
sub
pop
sub
aas
pusha
rolb
or
int
or
add
loop
arpl
lahf
insb
cmc
bound
adcl
cmpxchg
sbb
inc
int
jle
mov
testw
xchg
sbb
stc
add
sbb
jo
imul
cltd
imul
mov
es
popf
rol
mov
fisttps
pop
dec
and
movsl
arpl
daa
es
loope
pop
mov
mov
shll
cli
xchg
loopne
repnz
psraw
mov
aas
sub
or
or
mov
cmp
pop
test
push
enter
fwait
inc
popf
jge
jecxz
mov
xchg
cwtl
clc
rclb
iret
movsb
test
int3
mov
int
adc
cmp
mov
loopne
lock
mov
cmpsb
imul
repz
pop
cld
mov
std
cld
add
jbe
cwtl
std
fwait
movsl
lea
in
scas
xor
dec
iret
shll
adc
sub
leave
xor
dec
mov
dec
xor
clc
scas
repnz
push
shll
pop
sbb
lea
push
jmp
sahf
push
adc
mov
pop
es
addr16
pop
add
mov
cmpsl
xchg
inc
mov
outsb
arpl
and
xchg
sbb
pop
mov
adc
mov
aam
push
mov
fcoms
popf
mov
aas
pop
jecxz
mov
dec
mov
test
subl
stc
ret
loope
fcoms
dec
and
cli
jo
mov
mov
arpl
stos
lahf
cmp
dec
inc
ja
int
cmp
imulb
cmp
rolb
adcb
shll
pop
xor
addr16
jns
fs
push
inc
lods
mov
jl
mov
loope
mov
cli
js
movsl
dec
ja
pop
sub
in
in
inc
fimuls
add
cmp
sbb
rcl
pop
mov
loop
adc
pop
pop
iret
mov
clc
push
or
mov
xor
inc
push
jmp
mov
and
fdivs
jb
and
fbstp
call
xchg
sbb
int3
inc
into
ret
adc
sahf
mov
and
inc
jle
push
dec
enter
loopne
movsl
pop
jb
push
imul
pop
clc
daa
mov
int
push
push
adc
jg
rorl
push
dec
std
test
mov
jp
xor
or
adc
inc
push
adc
mov
pop
lahf
sbb
pop
fidivrs
mov
dec
aam
and
xorl
xchg
daa
push
pop
movsl
fsubrs
pop
test
push
leave
call
jl
aam
cmp
xor
loopne
jno
leave
jo
lds
push
xchg
mov
clc
es
sub
jb
jmp
outsl
mov
push
mov
imul
inc
fcmove
bound
lret
je
lds
cmc
fsubr
or
out
add
mov
negl
test
loop
lahf
mov
jb
rcrb
nop
fidivrl
and
mov
js
mov
add
mov
bound
sub
or
push
sub
mov
arpl
sub
inc
jo
out
pop
xchg
sub
xlat
nop
mov
test
rcr
in
xor
subb
lret
push
fiadds
in
jns
pop
mov
mov
mov
mov
mov
rolb
mov
inc
push
mov
or
scas
mov
test
inc
testb
pop
pop
popf
int
sbb
cmp
dec
insb
cmp
ss
fstp
inc
fisubrs
sub
inc
mov
jle
fdivs
testb
sub
cmpsb
shlb
inc
jmp
mov
dec
mov
int
out
arpl
insl
aam
sarb
pop
add
pop
hlt
jo
jns
mov
mov
out
enter
je
jle
mov
push
rcrl
in
lret
lods
mov
aaa
stc
and
test
ds
movsl
leave
jp
xchg
xchg
shll
jmp
sub
xchg
test
and
mov
int
ret
insl
xchg
inc
or
mov
adc
icebp
repnz
and
cld
sahf
movsb
insb
ds
sub
out
pop
pop
mov
xor
mov
mov
xlat
jmp
das
adc
or
inc
push
jbe
push
outsb
popa
inc
or
test
mov
adc
cmp
addb
aad
dec
loopne
xchg
hlt
inc
xor
pop
add
or
add
pop
cmp
jbe
inc
sub
jecxz
mov
aad
sbb
fsubl
fs
mov
loope
dec
xchg
pop
dec
jg
fsubr
dec
push
xor
stos
adc
arpl
mov
jne
sbb
imul
push
pop
push
add
pusha
xchg
dec
lds
inc
sti
sub
push
pop
movsl
sbb
into
scas
sbb
mov
mov
imul
movsb
ljmp
push
sahf
scas
push
mov
psllq
in
aam
bound
dec
jecxz
fstl
jb
push
inc
xchg
add
shl
xlat
push
imul
icebp
dec
imul
lds
popa
div
dec
adc
in
fs
cmp
out
shl
adcb
xchg
addl
dec
int
xor
rclb
fisttps
mov
ja
clc
xchg
clc
xchg
xchg
lods
inc
mov
adc
iret
mov
ret
sahf
out
pusha
push
cwtl
cli
push
outsb
and
lods
in
inc
xchg
je
inc
sub
aas
cmpsl
mov
xchg
fiadds
jl
dec
sub
clc
dec
clc
nop
pushl
fbld
decb
lock
mov
and
xor
scas
fiaddl
or
sbb
sub
adc
dec
inc
lcall
sub
or
out
xchg
cmp
movsb
inc
bswap
xor
xlat
das
mov
inc
bound
jnp
xchg
pop
mov
dec
movsb
arpl
out
pop
mov
mov
rcll
mov
pop
outsl
movsb
jnp
mov
push
and
shrb
mov
lahf
pop
jnp
xor
idiv
ret
or
aaa
sub
add
rclb
orb
testb
cmp
scas
and
xchg
xchg
dec
pop
xor
adc
jbe
pop
and
inc
push
enter
jne
push
test
aaa
xlat
add
sarl
ds
sahf
adc
mov
inc
inc
cwtl
or
or
fmulp
push
lcall
imul
movsl
adc
mov
push
cs
adc
push
aam
int3
leave
add
lea
sub
movsb
icebp
ss
dec
jge
sbb
ja
loope
pushf
pop
inc
js
mov
test
sub
arpl
and
jb
and
mov
enter
sub
and
add
mov
cmp
cmpsb
sub
out
and
adc
pusha
in
aas
arpl
mov
fisubrl
fldenv
sub
ja
push
xor
xlat
push
push
test
add
push
cmp
stos
add
pop
cld
fcoms
cli
dec
jle
inc
std
mov
pop
pop
mov
mov
pusha
cs
jl
mov
lret
ret
mov
imul
call
xor
adcl
xor
dec
mov
push
out
push
dec
popa
sbb
cmpsl
nop
jl
xchg
dec
sub
sbb
sub
dec
int3
add
call
cmp
mov
stc
loopne
rcll
stos
repnz
test
shlb
jmp
push
and
leave
push
std
lods
hlt
test
and
adc
and
jae
push
test
lret
push
jp
ljmp
imul
in
test
push
jb
adc
clc
dec
dec
add
mov
test
or
hlt
jecxz
cmp
add
lcall
and
mov
stos
inc
adc
jge
fldcw
and
bnd
mov
push
insl
push
pop
adc
push
js
mov
mov
mov
scas
fidivrl
filds
push
call
mov
mov
arpl
addr16
adc
and
loope
push
jnp
mov
mov
pop
clc
pop
push
adc
lock
mov
inc
adc
cmc
xchg
popf
xchg
aas
dec
sbb
lahf
push
jno
lock
push
dec
mov
enter
and
xchg
rcrb
jp
sbb
in
daa
xchg
mov
mov
int
jp
dec
cmp
xor
fdivr
mov
stc
nop
dec
out
dec
sti
xor
sub
lahf
fsts
pop
insb
pop
cltd
sbb
adcl
sti
in
aad
sub
sub
push
xor
jne
xchg
xchg
shrb
out
xchg
mov
mov
fmull
out
addr16
pop
or
imul
mov
jns
pop
shr
push
sarl
and
xor
jecxz
cltd
cli
gs
pop
frstor
mov
dec
dec
cwtl
mov
loop
adc
dec
idiv
push
dec
lea
cwtl
or
dec
das
aaa
cmpb
int3
xor
add
scas
add
pop
adc
cld
xchg
jo
xchg
mov
fdivrs
jg
lods
fs
movsl
mov
xor
push
cwtl
jle
jg
mov
dec
out
call
mov
pop
pop
xor
mov
lcall
xlat
cmp
cltd
add
ds
inc
dec
lea
sub
fimuls
fwait
jl
jns
add
xchg
das
mov
out
xor
mov
push
mov
fs
sti
mov
sarb
fs
lods
mov
sub
mov
cmp
jecxz
fwait
scas
inc
sub
adc
lret
cld
or
jmp
aad
jns
jmp
sti
inc
pop
aam
out
sub
push
mov
mov
ljmp
xchg
mov
shlb
gs
push
or
iret
nop
imul
jae
incl
xor
out
aad
pop
jae
add
adc
mov
in
push
or
lret
xchg
insb
push
xchg
cmpsl
test
sti
sbb
cmpsl
pop
sahf
push
cmp
iret
inc
push
hlt
and
sub
hlt
inc
lret
mov
lock
lahf
add
jns
push
outsb
push
mov
mov
cmp
loopne
das
dec
ja
jnp
or
shl
mov
in
mov
loop
sahf
pop
or
xchg
cli
lods
xchg
jno
cmp
aas
pop
pop
inc
clc
sub
xlat
and
sahf
stos
mov
mov
adc
jb
inc
ss
lods
leave
push
pusha
xor
mov
dec
jae
into
mov
xlat
jbe
adc
lea
enter
je
jnp
xor
leave
sti
push
push
adc
push
iret
mov
ja
xchg
cmpsb
aam
ja
add
xor
push
rcr
add
push
int3
nop
pop
xlat
fs
cltd
ljmp
pusha
loopne,pn
in
mov
js
mov
loop
mov
outsb
and
mov
xchg
lods
imul
push
mov
mov
and
imul
icebp
cmova
push
inc
subb
dec
mov
arpl
flds
stos
and
push
fisttpl
cmpsb
cwtl
stos
inc
out
les
pop
mov
fs
push
clc
aaa
pop
stc
mov
lahf
scas
inc
push
pop
sbb
add
cmp
es
dec
push
and
xor
scas
inc
test
xchg
dec
lea
inc
shll
imul
mov
out
test
mov
mov
addr16
out
jno
popf
mov
cmpsl
lret
push
push
xchg
push
movsl
icebp
arpl
pop
ljmp
xorb
or
cmc
loop
cltd
sub
stos
or
cmp
fnstenv
xchg
ljmp
mov
out
fiaddl
jecxz
fmuls
cmp
daa
ja
dec
vpaddusb
sbbl
xor
dec
sub
aam
ret
xorl
mov
cld
inc
cs
push
add
or
xor
clc
fisttps
subl
mov
inc
in
cmc
add
cmp
add
sti
fdivl
push
loop
push
stos
push
xchg
cmp
xchg
stos
jecxz
dec
mov
in
adc
push
add
into
jge
mov
mov
push
test
lahf
popa
aam
jle
add
lret
xor
mov
inc
inc
sub
out
mov
mov
add
fcoml
fs
ret
lahf
xchg
sbb
iret
xchg
fsubl
xor
and
int3
leave
and
xchg
ret
dec
lret
mov
sbb
mov
incl
movsl
and
lahf
xchg
push
lea
jb
imulb
push
pop
mov
xchg
sub
mov
and
fiadds
mov
lods
inc
xor
out
jmp
jg
pop
push
inc
orl
add
popa
xor
in
repz
ja
jecxz
ret
jo
or
inc
xlat
push
mov
cmp
dec
dec
xor
shl
adc
jne
jb
fs
daa
sahf
lahf
inc
or
and
int
inc
inc
inc
jo
out
outsb
sub
fisubrl
popf
addr16
ds
data16
dec
fsub
stos
sbb
sub
push
mov
in
inc
stos
sub
inc
or
mov
mov
sbb
push
mov
mov
out
mov
xchg
scas
inc
cli
jge
mov
jns
push
std
mov
loop
pop
pop
xchg
mov
or
mov
push
cli
mov
pop
rorl
pusha
iret
mov
aam
mov
cmp
push
add
sub
insl
sahf
mov
nop
push
bound
cmpsl
mov
or
int
dec
mov
jns
and
fnstsw
inc
popa
pusha
sub
ret
add
cmpsb
pushf
xor
scas
mul
mov
pop
fiadds
jge
mov
sahf
cld
or
cmovge
adc
out
and
xchg
mov
dec
sbb
adc
adc
jge
test
jp
lcall
inc
loope
sub
cltd
std
xlat
inc
aas
repz
xchg
pushf
lods
ljmp
loopne
mov
sub
movsb
adc
cli
js
sub
aaa
push
sahf
push
outsb
daa
sbb
out
push
and
inc
mov
jp
adc
into
cmp
lret
rcll
push
mov
jae
pop
rol
mov
aam
jmp
rorb
iret
icebp
das
or
cmp
jecxz
inc
test
lods
pop
ret
faddl
fdivrp
inc
addr16
pop
test
push
mov
jp
aam
jb
jne
andl
dec
cmp
push
mov
scas
pop
and
cmpsl
push
xor
mov
inc
mov
pop
nopl
xorb
inc
nop
loopw
loop
xor
and
cwtl
std
outsl
xor
lods
xor
mov
dec
xor
lahf
ljmp
dec
inc
mov
lock
cli
cmp
pop
loope
adc
jno
xchg
outsl
out
mov
rsm
sti
addr16
pop
orb
xlat
cmp
mov
push
jp
fnstsw
dec
sbb
push
cmp
or
aaa
rol
mov
adc
jns
cmc
repz
cmp
add
testb
sbb
enter
mov
je
cmp
les
rcl
das
rorl
test
sub
cmp
inc
add
ss
push
sbb
leave
loope
gs
ljmp
cltd
test
xchg
out
mov
add
loope
xor
push
push
xor
loope
data16
mov
out
lahf
jp
dec
pop
dec
push
insl
sub
add
maskmovq
divl
mov
pop
test
gs
rorl
notl
push
leave
bound
clc
js
pop
cmp
and
mov
es
outsl
adc
daa
loope
movntq
call
xchg
push
cmp
dec
mov
mov
push
and
mov
insl
scas
cmc
scas
ljmp
mov
lret
xchg
ffreep
into
inc
decl
filds
cmpsb
jae
out
hlt
push
inc
and
mov
arpl
fistpll
xchg
mov
daa
inc
fisubrl
mov
add
mov
jmp
mov
fisubrl
lods
mov
or
and
ss
fidivl
or
push
daa
or
cwtl
mov
insl
shll
sbb
lock
push
dec
sahf
mov
fldt
aam
xlat
popa
lods
jmp
mov
mov
push
jno
sbb
testl
pop
enter
push
sub
arpl
push
lahf
loop
je
mov
cmpsb
xor
xchg
movsb
push
je
inc
fadd
mov
push
addr16
aaa
inc
ljmp
sbb
repnz
cmp
shlb
mov
lods
loope
int3
pop
mov
scas
repnz
xlat
xlat
cmp
in
mov
call
inc
clc
pop
ds
fsub
jge
xchg
and
or
or
or
lods
sbb
add
dec
imul
sbb
test
icebp
cli
pop
xor
add
sub
cmp
cmp
inc
sti
inc
daa
ret
lahf
out
xchg
cmp
stos
push
mov
push
cmc
cmp
gs
lods
pop
mov
cwtl
jmp
xlat
jo
lcall
xor
or
stos
cld
pusha
lods
pusha
xorb
pop
fistpll
jo
or
cmpsb
leave
sbb
xor
test
push
outsl
mov
push
adc
dec
insb
scas
and
je
jmp
adc
or
stos
sbb
dec
fsubrs
lret
cmpsb
pop
fwait
in
push
bound
dec
gs
lcall
arpl
mov
idiv
push
push
in
pop
sub
mov
cli
adc
stos
mov
or
mov
adc
adc
mov
pop
pop
addr16
sbb
adc
roll
clc
cmpb
dec
repz
jae
int
sti
jo
xor
adc
in
jbe
ret
cmc
not
push
arpl
sub
push
test
aas
and
fcmove
mov
or
cwtl
subl
xor
push
int
daa
sbb
mov
mov
push
push
xchg
cmp
push
data16
push
lods
imul
or
nop
lret
std
jns
cmp
inc
roll
outsl
add
xlat
in
addb
aam
leave
ret
sar
and
xor
aad
std
test
and
sbb
cltd
stos
gs
xor
outsb
sbb
enter
fiadds
pop
and
outsl
or
mov
test
inc
jp
xchg
outsl
adc
mov
and
mov
xor
fdivrs
add
popa
aad
into
mov
mov
dec
movsb
and
mov
mov
adc
lods
aad
shrb
push
xchg
aad
jp
and
or
pop
pop
subl
sub
lcall
jp
mov
andl
jle
add
add
inc
dec
test
loop
dec
out
iret
sti
insl
sbb
shl
les
lret
inc
xchg
cmc
inc
push
mov
add
add
mov
fidivl
stos
fsubrs
insb
jo
int
mov
fs
call
pop
and
stc
adc
sbb
hlt
dec
sbb
push
cmc
push
test
fidivs
nop
test
test
std
pop
ljmp
or
xchg
ljmp
xchg
add
pusha
imul
dec
sub
popa
lds
jb
rorl
or
xor
gs
jo
loope
push
sbb
and
adc
ljmp
das
sbb
stos
dec
jecxz
jg,pn
xchg
and
lock
jmp
inc
testb
pop
xor
outsb
decl
xor
mov
lods
stos
and
adc
lahf
test
sbb
inc
jno
jmp
mov
pop
sub
jle
mov
mov
out
imul
xor
arpl
jmp
jle
addr16
daa
xor
mov
inc
jbe
sub
movsl
xchg
pop
call
mov
out
mov
insl
popa
and
sbb
in
and
divb
fcmove
frstor
push
inc
enter
inc
mov
xor
rorb
sti
mov
test
in
xor
lret
xorb
mov
sub
sub
leave
dec
mov
push
mov
xchg
sub
cmp
and
into
cmp
ficomps
jmp
and
std
sbb
add
shlb
jg
and
jns
lods
sbb
fwait
imul
cwtl
sbb
test
cmp
into
jmp
loope
sbb
adc
and
xor
in
inc
inc
cli
outsl
jg
push
and
pushl
or
shl
mov
aam
sub
mov
dec
aam
jne
push
pop
dec
push
jno
mov
ds
xchg
and
fsub
adc
add
insb
fwait
sub
sahf
les
hlt
rcl
lcall
gs
cmc
xchg
std
loope
mov
adc
test
subl
mov
dec
sub
push
fsubrp
mov
sbb
dec
xor
dec
dec
mov
arpl
cmp
ret
sbb
push
cmp
inc
test
mov
cltd
jecxz
push
xchg
icebp
xchg
push
jp
setle
sub
push
in
dec
sub
in
adc
push
lods
int
ss
mov
leave
cli
rorb
repnz
fidivrl
mov
js
sahf
jne
add
xor
xor
and
xchg
xlat
dec
push
xor
iret
lock
add
push
mov
inc
mov
mov
ljmp
loopne
push
pop
cmpsb
mov
mov
xor
loop
out
jp
inc
push
xor
cmp
xlat
adc
es
dec
test
inc
or
push
insb
mov
loopne,pt
cld
sub
mov
scas
inc
jp
mov
test
push
xor
xor
lock
xchg
movsl
dec
sbb
sub
out
cltd
aaa
xchg
or
in
sbb
test
jecxz
divl
mov
xchg
stc
pusha
or
loopne
das
inc
cmp
xchg
adc
out
cmp
mov
ficompl
imul
pop
aad
scas
pusha
in
insb
and
cld
adc
cmpsl
push
loope
mov
scas
popa
or
cmp
sbb
dec
sti
imul
mov
jmp
add
cs
into
lock
mov
push
movsb
inc
jl
punpckldq
push
dec
jle
popa
fnstsw
addr16
cs
mov
push
flds
and
jmp
scas
stos
cwtl
or
push
arpl
pop
sub
into
in
pop
adc
jecxz
orb
icebp
cmc
dec
pushf
shl
es
mov
push
jbe
sti
xor
sbb
or
pop
adc
xchg
fsubrl
jbe
cmp
sbb
dec
sub
fucomip
psrlw
jne
ss
das
bound
sahf
addr16
or
push
lods
lods
xlat
pop
mov
mov
ljmp
icebp
hlt
mov
mov
sbb
call
jle
notb
rclb
enter
dec
ljmp
leave
cmp
in
jge
cld
fstp
pusha
out
add
adc
inc
jl
add
test
push
push
dec
mov
pop
jecxz
xchg
mov
mov
xor
mov
in
mov
lcall
pop
aas
xor
xchg
sbb
mov
das
call
inc
inc
jae
iret
clc
shll
ret
fcoms
fwait
mov
dec
popf
in
cs
stc
cmpsb
xor
test
push
dec
scas
mov
mov
or
sub
sub
jbe
js
jo
xchg
fwait
roll
add
xor
inc
mov
jmp
adc
fsubrl
pop
test
imul
xchg
xor
xchg
and
fucomp
shll
ret
in
decl
mov
lock
jnp
addr16
enter
fwait
sahf
pop
lcall
stc
and
mov
outsl
sub
idivb
fsubrl
loop
xchg
mov
repnz
popa
outsb
loope
iret
test
jno
xor
cwtl
dec
lods
fcmove
pop
sbb
sbb
cmp
adc
pop
jns
xor
lret
fimuls
inc
mov
mov
ja
mov
sahf
adc
arpl
dec
jle
fbstp
ret
push
fmull
inc
or
mov
shll
xabort
scas
enter
je
out
sahf
scas
cmpsb
hlt
inc
mov
adc
fs
sbb
push
insb
dec
shll
push
subl
add
mov
jns
and
cmpl
inc
mov
inc
add
ja
enter
or
je
movsb
or
adc
xchg
xor
ljmp
data16
imul
sbb
mov
pusha
inc
jb
mov
mov
and
cmp
lds
ja
mov
stos
in
xlat
jo
push
adc
fnsave
das
int
cmp
int
xlat
push
cs
push
arpl
dec
neg
gs
jne
cmc
jo
repz
xorb
cmp
xchg
mov
xchg
loopne
add
mov
cld
xor
inc
hlt
push
movsb
sbb
inc
mov
pop
push
xchg
shlb
mov
or
xchg
jbe
dec
sbb
dec
adc
stos
lea
enter
dec
and
or
and
test
repz
repz
cli
push
sahf
call
imul
fildll
add
mov
aaa
mov
add
cwtl
dec
sarl
jb
testb
and
adcb
test
je
sub
movsl
mov
icebp
std
rcl
mov
les
inc
adc
sub
fisubs
ja
std
jb
lea
pushf
mov
divl
rcrl
add
cmp
inc
push
sub
or
cltd
pushf
push
sti
gs
push
jo
test
cmpsb
xchg
push
inc
push
xchg
push
sbb
pop
adc
jp
xchg
pop
rcr
repz
lods
sbb
inc
or
inc
pop
or
pop
scas
add
in
mov
addl
mov
mov
push
fsubrl
jl
test
jns
and
add
enter
in
pop
into
adc
mov
aaa
cmp
insl
cmp
icebp
iret
push
mov
cmp
test
inc
les
push
xchg
test
shlb
iret
xchg
cmpsl
push
stos
pop
fsubl
add
cmpsl
aam
push
lock
dec
push
jo
xchg
jb
adc
fstps
aad
add
int3
lret
push
movsl
lret
ljmp
mov
xchg
scas
inc
inc
es
jle
cmp
ret
outsb
jns
add
push
dec
pop
popa
inc
jnp
xchg
adc
out
or
cmp
mov
jnp
ficoml
lahf
arpl
notl
stos
pusha
faddp
xchg
mov
enter
jo
push
pop
jns
stos
cmp
xchg
iret
inc
sbb
jg
loopne
enter
push
mov
dec
jnp
cmp
sbb
out
pop
das
sbb
js
sub
daa
xor
cmp
out
popa
cmp
push
repnz
xorb
int3
push
std
cmp
push
int3
clc
out
aaa
idivl
dec
sahf
push
and
jle
movsl
jae
push
les
pop
test
adc
pop
repnz
addb
fs
add
lds
adc
mov
and
rolb
lods
and
pop
or
adc
jbe
lds
inc
mov
dec
pop
mov
xchg
call
pop
inc
sub
fsubl
repz
push
inc
push
ss
push
jo
xchg
mov
mov
sub
or
dec
xor
or
push
adc
jp
inc
inc
lahf
push
mov
and
dec
ljmp
mov
insl
dec
or
mov
aaa
push
ljmp
mov
push
mov
sbb
inc
movl
xchg
fstpt
js
shl
xchg
push
outsb
push
mov
mov
notb
in
test
scas
push
lds
or
ds
cltd
push
mov
adc
jnp
pusha
lods
mov
xlat
mov
scas
inc
out
imul
sbb
adc
inc
fbld
shrl
sbb
mov
pop
push
or
mov
sbb
cli
pushf
dec
bswap
shlb
inc
lods
add
cmp
inc
sahf
shlb
fucomi
lods
in
jns
xchg
xorl
push
je
add
shll
and
lahf
mov
push
cmp
xor
pop
push
push
stos
pop
pusha
pop
fwait
scas
jb
sub
xchg
cld
push
loopne
and
movsb
pop
pop
sub
enter
dec
mov
mov
push
fistps
mov
dec
cmc
aas
push
lods
cmp
out
sub
mov
bound
xchg
sub
pop
pushf
push
add
hlt
pop
pop
xor
dec
dec
sub
addr16
mov
mov
xchg
cmpsl
mov
pop
call
jp
push
inc
hlt
sbb
fbld
xor
imul
mov
xor
xor
push
cmp
mov
lcall
enter
negb
dec
push
push
inc
push
cmp
jbe
sbb
add
or
mov
ror
sbb
xlat
sbb
outsl
outsb
mov
push
xchg
fdivr
clc
mov
je
inc
loope
rol
mov
in
mov
jecxz
dec
sub
test
mov
lds
dec
das
adc
or
hlt
sbb
leave
scas
or
xor
sahf
or
lahf
push
sbb
pop
fimuls
cmp
pop
aad
call
xchg
jmp
push
iret
test
scas
arpl
cwtl
gs
and
xor
xchg
into
jbe
nop
call
xor
xchg
mov
gs
test
fdivs
fisttpl
xchg
jge
add
xchg
mov
enter
jbe
jl
repnz
call
loopne
xchg
sbb
stos
lods
mov
cmpsl
inc
fwait
clc
or
out
pop
xchg
lcall
inc
ret
jmp
loope
je
pop
out
out
inc
jp
mov
pop
push
or
lret
jb
cs
cmpl
cmp
push
movsl
sbb
addr16
lret
sub
cmpsl
mov
out
ljmp
in
clc
test
rcr
pop
ss
mov
inc
inc
add
cmp
pop
pop
xchg
std
pushf
mov
or
ret
sub
push
rcrb
xor
mov
mov
pop
sbb
int3
or
mov
stos
dec
xchg
pop
cmp
movsb
fbstp
test
dec
push
adc
sarb
jbe
test
or
fwait
scas
ja
cmp
ficoms
inc
adc
mov
into
push
fwait
sbb
imul
dec
inc
sub
jae
push
mov
fcomip
outsl
popf
pop
or
pop
outsb
stos
fidivrl
push
and
add
notb
xchg
repz
cwtl
in
pop
pusha
xor
mov
xchg
data16
add
in
lret
and
popa
mov
mov
lahf
ret
fists
imul
and
cmp
xorb
test
xchg
xchg
in
aas
ret
ljmp
pop
std
imul
negl
inc
sbb
movsl
push
sbb
adc
movsb
dec
ror
imul
and
xor
sub
xchg
nop
lret
inc
lcall
rcpps
lods
popf
stos
mov
inc
adc
hlt
jb
pop
mov
outsl
fs
adc
testb
ret
jo
out
dec
cmp
cmpsb
pop
rcr
mov
xchg
push
mov
dec
mov
add
bound
push
jns
jb
loope
xchg
adc
daa
in
vpcmpgtd
xlat
test
sub
rcrb
adc
mov
dec
sti
jb
into
pop
das
cmp
cwtl
imul
or
dec
push
xor
sahf
in
bound
mov
jns
lock
pop
or
movsl
lret
pop
mov
shrl
add
xor
addr16
jne
sbb
xchg
add
xor
inc
pushf
xlat
jl
mov
dec
mov
cltd
or
negl
dec
fdivl
cmpsl
inc
push
clc
add
mov
enter
int3
sbb
jecxz
xchg
adc
mov
mov
negl
call
add
ret
in
sti
cmpsl
dec
sbb
xor
enter
mov
iret
jg
mov
pop
jnp
sub
push
push
adc
jl
cmp
stos
cmp
pop
stc
push
in
adc
pushf
pop
xchg
or
sarb
popf
dec
in
jns
jnp
cmp
dec
inc
xchg
add
cli
pusha
sti
adc
shll
xchg
mov
div
cmpl
scas
cmp
mov
in
sbb
lret
xor
inc
mov
lret
mov
pop
hlt
outsb
add
lret
ja
xchg
lea
test
test
cmp
jae
pop
jge
pop
in
in
cmpsl
mulb
inc
sub
stos
and
mov
and
sbb
mov
or
arpl
test
push
aas
fcompl
xor
mov
push
sbbb
push
fucomp
push
lcall
lret
dec
shrl
pop
cmp
push
jmp
ret
sub
ja
ficomps
push
adc
aas
push
pop
mov
data16
sbb
push
nop
xchg
es
outsl
aas
ret
pop
shrb
mov
stos
stos
mov
xchg
and
jo
jmp
fists
mov
std
sti
sub
mov
xchg
jnp
mov
mov
scas
xchg
je
lret
pop
pop
andl
mov
fadds
insl
sbb
imul
mov
push
push
mov
movsb
add
mov
jne
mov
sbb
imulb
js
or
loopne
shlb
daa
xor
leave
ret
mov
mov
lret
out
push
and
xor
xor
push
rcrl
mov
jge
dec
in
aaa
in
or
push
mov
cmp
xchg
dec
and
dec
mov
icebp
pop
or
adc
add
lahf
jbe
xor
or
stos
inc
mov
bound
pushf
fs
cltd
das
push
orps
jo
dec
lea
rcll
es
bnd
bnd
cltd
fistl
iret
xchg
call
das
aad
jae
loope
dec
cltd
pop
push
popa
outsl
mov
mov
push
pop
push
pop
sub
loopne
jo
fisttpl
rol
mov
jbe
insl
das
cmc
test
shl
pop
rol
mov
jbe
pop
sub
ljmp
jecxz
xchg
add
lods
jno
lahf
pop
adc
inc
xor
into
mov
sbb
pop
mov
aaa
pusha
push
jae
aad
and
test
mov
xchg
mov
sarb
inc
mov
les
jp
popa
mov
pop
jns
inc
mov
ja
test
xor
mov
add
divl
call
cmc
mov
mov
cmp
sbb
jb
lds
out
bound
adc
cmp
test
fwait
pop
test
pop
mov
mov
loope
sbb
aam
mov
xor
sbb
push
inc
cmc
pop
test
pop
cmp
cwtl
sahf
dec
loopne
pop
dec
cmp
cs
in
and
js
mov
test
lea
bound
cmc
fmull
pop
test
xor
cmpb
mov
cwtl
fsubs
adc
xchg
hlt
fcmovbe
jp
mov
and
clc
adc
ja
clc
cmp
pop
pop
cmc
loopne
cmpsl
dec
pop
lret
loope
aam
fisubs
pop
pop
dec
cmc
jmp
and
inc
shr
inc
cwtl
aam
inc
roll
mov
pop
adc
xorl
xchg
shll
mov
jo
add
outsb
arpl
push
jg
clc
cld
movsl
mov
rcll
cmp
sub
fildl
cmp
and
out
jle
xchg
popf
adc
insb
mov
mov
jl
mov
push
push
xchg
xor
push
scas
mov
scas
leave
out
fdivrl
add
outsl
pop
lds
icebp
imul
in
mov
aas
add
sarb
cli
pusha
jl
dec
dec
mov
push
in
push
fs
mov
add
test
pushf
les
add
mov
pop
cmpsb
shlb
add
push
andl
scas
dec
imull
lret
andl
adc
adc
mov
jo
divl
inc
mov
idivl
mov
sub
xchg
inc
mov
inc
filds
push
or
sahf
cwtl
mov
inc
in
lea
mov
shll
loop
int
in
aam
add
ds
xor
push
int
repnz
sbb
sub
pop
mov
in
imul
cli
test
sbb
or
incl
mov
int3
dec
xor
pop
lret
pop
popf
das
fs
add
iret
sbb
push
cmp
and
pop
xor
inc
dec
call
and
fbstp
dec
cmp
pop
dec
fs
add
pop
pop
scas
ret
push
sti
into
mov
push
mov
pop
jle
fmulp
sarl
xlat
push
in
add
cmp
sbb
inc
out
sub
add
leave
stos
pop
cltd
shll
mov
xor
ljmp
mov
mov
ret
stos
dec
mov
daa
pop
or
and
mov
mov
je
jge
jb
jle
rolb
insl
incl
jbe
mov
rorb
mov
sub
pop
ljmp
stc
das
test
pop
iret
add
jne
pop
js
int
repz
mov
jecxz
dec
jns
addr16
add
inc
jns
xchg
shll
push
loope
push
jp
jle
ficoml
je
movsl
dec
cwtl
data16
cmpb
jne
mov
add
es
push
cwtl
mov
sbb
sub
jbe
sbb
arpl
popa
ret
mov
mov
lods
push
pusha
mov
jecxz
fists
xor
and
fildll
add
cmp
arpl
adc
mov
pop
insl
in
fstp
cltd
popl
scas
inc
bound
out
movsl
jbe
shll
in
adc
jno
push
ja
aad
repz
or
push
jp
adc
sub
pop
pop
inc
mov
or
jp
inc
fcomps
pop
shll
cli
imul
cmp
stos
adc
or
and
popf
call
outsb
insl
mov
sahf
in
cmp
mov
dec
pop
stc
jae
cmp
jbe
bound
imul
mov
add
test
lock
xchg
jne
out
pop
cli
in
dec
xchg
xchg
fs
cmpsl
lret
push
shr
and
pop
and
loopne
lcall
push
popf
add
scas
pusha
sbb
xchg
add
out
dec
pop
cmc
xchg
test
push
cmp
cs
xchg
sub
in
out
out
mov
push
lock
sbb
inc
mov
ja
inc
not
cli
and
pusha
dec
and
pop
and
push
inc
push
dec
mov
je
mulb
lcall
push
add
in
int
lret
dec
test
into
cmp
inc
jo
xlat
gs
call
cmpsb
add
jb
rcrl
jno
fs
or
test
or
mov
jecxz
xchg
in
aaa
imul
les
adc
shrb
pop
xchg
insb
xor
inc
mov
inc
std
faddl
rclb
sub
add
scas
out
inc
cmp
and
clc
jns
fmuls
cmp
jne
and
lds
out
stos
outsl
out
aas
les
nop
sub
cmp
xor
add
mov
and
insb
rdpmc
pushf
sub
push
cmpsb
jb
jge
mulb
mov
mov
jge
jo
push
fcmovnb
lds
shufps
test
hlt
outsb
dec
mov
jbe
idivl
insl
jg
dec
int
icebp
adc
and
dec
lods
adc
ficompl
xor
inc
jmp
pop
addb
dec
lock
sbb
sbb
xor
jb
pop
xor
mov
rcrb
sbb
and
xor
or
aaa
shrb
inc
stos
pop
movl
dec
hlt
aas
int3
mov
ja
fdivrs
add
jecxz
pushf
fcmovne
sti
sub
xor
mov
das
shll
inc
xchg
out
in
push
hlt
lret
lods
sbb
dec
xlat
mov
pop
adc
insl
rcr
fst
aam
sbb
aas
mov
jbe
xor
mov
sbb
sarl
xlat
ss
inc
adc
fwait
insl
je
sub
add
xor
std
scas
ja
sub
insb
dec
mov
jmp
add
or
push
negb
ljmp
ror
fisubl
cmp
je
cmp
cmp
sbb
and
fsub
data16
adc
xor
fistpl
lret
dec
mov
test
aas
sub
out
pop
mov
cmp
fnstsw
xchg
test
shrb
mov
push
ds
mov
out
cmp
ficoms
dec
mov
mov
lods
inc
fildl
adc
and
or
dec
iret
inc
pop
adc
or
mov
mov
sub
fadd
jnp
pop
or
out
adc
in
lcall
rcrb
mov
jg,pn
fcoml
les
negl
push
addr16
mov
fiaddl
push
scas
push
add
lcall
je
or
out
ret
mov
pop
lea
sub
xor
popa
divl
mov
mov
sbb
xor
and
shll
mov
leave
fsubs
add
ret
xor
insl
fwait
mov
add
sub
add
sti
mov
mov
pop
push
outsb
push
push
xchg
rcr
jp
push
add
or
add
add
push
add
push
sbb
dec
add
gs
and
inc
jns
aam
jbe
dec
test
mov
ficoml
inc
ret
sbb
mov
int3
push
jb
cmp
pop
pop
adc
out
sarl
insl
pop
sub
mov
mov
pushf
divb
cmpsb
in
shlb
or
ret
mov
cmpsb
push
mov
fucom
test
xor
pop
cmp
sbb
ret
jae
jns
pop
mov
mov
cmp
push
loopne
xchg
xchg
fimull
mov
sub
inc
mov
add
out
xchg
sbb
movsl
rcrb
and
bound
out
test
cmp
fs
lds
scas
decl
call
inc
pop
fistl
insb
adc
lcall
pop
mov
sbb
xchg
mov
xchg
sub
ja
sbb
inc
aam
cmc
mov
call
dec
and
movsl
insl
push
adc
push
dec
lret
addl
flds
sbb
test
add
pop
mov
fld
test
fxam
int
dec
pop
lret
test
es
int
dec
sbb
jae
add
mov
dec
push
mov
testl
and
bound
sub
hlt
cltd
inc
out
lcall
movb
push
inc
inc
add
fsubrl
mov
push
aad
hlt
jae
inc
add
xchg
insl
addb
out
aaa
mov
jg
adcb
mov
and
stc
dec
jmp
fcmovnbe
push
cmp
or
lds
inc
push
jge
pop
and
dec
cs
aaa
mov
xor
dec
push
jno
data16
shl
jae
dec
aad
mov
enter
xchg
ljmp
fmuls
cmc
sub
sub
jmp
adc
scas
pushf
insb
xor
inc
cmpsb
int
sbb
gs
dec
mov
arpl
jg
dec
shr
pop
test
add
pop
mov
or
mul
out
dec
sbb
xchg
dec
lods
pusha
jne
mov
repnz
into
outsl
insl
jb
sbb
push
or
insb
das
ljmp
sbb
inc
adc
or
adc
lcall
xor
xor
stos
xchg
cmp
data16
lahf
aam
pushl
or
dec
cltd
loop
movl
adc
adcb
mov
xlat
mov
iret
inc
movsl
push
inc
or
pop
cmp
call
sub
fsubl
into
insb
in
jmp
aaa
or
and
insb
movsb
int
mov
js
ss
stos
or
clc
fildll
mov
jb
movhps
stos
or
fwait
push
mov
ljmp
cmp
mov
dec
add
lahf
mov
shll
mov
mov
adc
stc
test
mov
jl
jo
mov
push
jecxz
cwtl
int
jmp
jmp
stos
xchg
jge
and
fwait
xor
pusha
adc
mov
mov
mov
sahf
or
pop
outsl
pop
pop
cmp
adc
mov
insl
jle
jl
mov
ret
out
mov
into
pop
fbld
inc
fnsave
pop
xchg
mov
test
pushf
stos
dec
stos
fstpl
mov
ss
fldcw
mov
int3
lcall
enter
lds
sub
popf
rcll
xor
cltd
aad
mov
icebp
sahf
push
mov
jg
imull
mov
test
repz
lock
leave
sub
lahf
ret
xchg
pop
jmp
pop
or
sbb
fidivrs
stc
cmpsl
outsl
leave
jl
fldenv
shlb
and
clc
adc
mov
inc
repz
jp
sbb
sub
stos
pushl
xchg
sub
pop
or
xor
adc
sub
jb
cmp
ja
and
mov
mov
sub
sbbb
inc
in
stos
dec
das
lods
les
xor
mov
push
dec
iret
mov
push
inc
pop
xchg
inc
or
pop
testb
mov
xor
sbb
xor
popf
or
push
push
call
fcomi
cld
push
mov
fs
loopne
xlat
mov
inc
sub
setp
jge
sbb
stos
xchg
stc
dec
enter
cwtl
cli
pop
mov
cmp
xor
les
sub
mov
mov
popa
es
sub
jg
mov
inc
dec
mov
jle
lods
cmp
data16
mov
jns
mov
cmpsb
mov
and
fisttpll
test
inc
xchg
lds
or
jo
daa
cmp
bound
adc
aas
pusha
jl
jo,pt
lret
repnz
mov
pop
bnd
mov
add
add
fistl
ja
mov
inc
arpl
jmp
mov
movl
xcrypt-cbc
xor
clc
jns
pop
sbb
and
es
mov
mov
out
cli
mov
bound
out
fisttpl
sub
fmuls
cwtl
cmp
inc
dec
jg
jnp
and
icebp
mov
idivl
sub
xchg
iret
mov
cwtl
mov
sahf
insl
sub
scas
cs
sbb
inc
pop
mov
mov
mov
pop
call
js
or
mov
adc
cli
cmpb
cmp
or
test
aas
xor
dec
subl
dec
mov
xor
add
addl
lahf
mov
inc
sub
rclb
xor
das
adc
xor
and
or
mov
mov
shlb
push
mov
push
fs
es
sub
sub
pop
xlat
pop
xor
dec
push
adc
xlat
ss
ds
and
insb
es
inc
notl
push
jo
mov
shl
xor
push
mov
push
pushf
fisubrs
lret
cwtl
dec
sarl
adc
stc
inc
mov
lds
xchg
push
xchg
dec
pop
pop
sti
xor
out
add
xchg
or
imul
dec
dec
popf
ss
aaa
popw
outsl
enter
cmp
mov
push
pop
sub
imul
pop
into
je
pop
dec
jl
jle
mov
cli
roll
xchg
jge
faddl
mov
push
test
clc
add
add
xor
mov
mov
sbb
gs
shrb
bound
ljmp
out
stos
sub
pop
call
adcl
mov
pushf
xchg
lret
les
shlb
mov
or
out
scas
iret
pop
or
sti
sub
push
mov
jns
cmpsb
int
aam
rclb
or
aaa
jle
shl
mov
mov
mov
pusha
cmc
jmp
sbb
mov
sbb
xor
orl
adc
pop
jl
add
xchg
cs
clc
xchg
stc
insb
sub
sbb
mov
jae
sbb
and
nop
lsl
outsl
shlb
cli
pop
xchg
cmp
adc
and
jne
js
sub
inc
jecxz
insb
out
or
aas
scas
fcoms
mov
insb
arpl
movsl
mov
movsl
fdiv
rolb
push
aas
iret
jecxz
in
addr16
incl
and
push
insl
jne
cmc
mov
std
sub
jecxz
scas
push
pushf
xor
or
ss
cmpsb
mov
mov
imul
bound
pop
bound
scas
rcrb
out
lea
sub
add
out
repnz
xchg
push
adc
mov
add
cs
pop
fs
mov
stc
xor
sub
les
icebp
xchg
mov
fs
mov
and
jno
pop
or
push
lock
lds
daa
pop
mov
xchg
fildl
inc
fidivs
jg
and
adc
mov
sbb
push
inc
jp
jmp
dec
and
sbb
lea
loopne
js
jp
fcomps
push
in
dec
and
dec
push
xchg
inc
mov
xchg
or
xchg
fnstcw
add
popa
inc
loopne
and
cmp
mov
jl
adc
xor
sti
rol
es
sbb
add
dec
insb
mov
insl
xbegin
lret
out
jl
out
out
les
std
je
jne
mov
mov
stc
pop
out
jge
sbb
call
dec
sbb
jae
lods
sub
ret
call
jns
loop
cmp
pop
testb
divb
roll
push
pop
jmp
sbb
ds
mov
jo
shl
jno
adc
cmp
pop
push
pop
cmp
je
rcl
scas
jg
leave
jb
xorb
push
insb
lea
outsl
jl
lret
into
jmp
stc
add
sahf
pop
je
push
fisubrl
dec
fisubl
cmp
and
lret
push
pop
and
xchg
call
bound
sarb
stos
out
sub
inc
xchg
dec
fcmovbe
jl
xor
sub
in
aam
pop
ljmp
mov
add
xchg
or
push
sbb
fcomps
aaa
and
inc
enter
mov
fwait
jp
daa
push
adc
daa
fs
pop
cmp
in
inc
and
jb
aas
loope
inc
mov
pop
xchg
pop
imul
adc
in
dec
push
sub
stos
xchg
cmp
rclb
xlat
clc
ljmp
test
push
and
pop
pop
movsb
out
jmp
addr16
sbb
adc
xchg
push
cmp
mov
mov
or
or
outsl
test
mov
xor
xor
not
movsb
mov
push
hlt
inc
cmc
dec
lahf
dec
arpl
mov
popf
dec
push
jmp
dec
cmc
loope
and
mov
movsl
add
inc
loopne
cmp
call
out
and
in
mov
jg
add
adc
mov
aad
stos
ja
rcrl
adc
mov
fldenv
loop
mov
loop
sbb
mov
fsubrl
cmpsl
and
jo
adc
or
ss
aad
movb
push
stos
fmul
mov
movsl
adc
fwait
and
mov
jp
sbb
out
mov
fsubrl
es
push
mov
shl
mov
lret
into
or
xor
xor
xchg
add
mov
mov
xor
ret
pop
jo
or
in
mov
or
and
sahf
leave
adc
cltd
add
jg,pn
inc
lds
lock
sub
mov
out
fcmovbe
mov
popa
sbb
movsl
stc
inc
sub
sahf
clc
mov
jae
aad
mov
push
xchg
popf
push
jne
adcl
mov
xchg
push
or
jbe
and
xor
aaa
mov
push
mov
ljmp
shrb
stos
sar
sahf
insl
xchg
adc
sub
push
xlat
xlat
xchg
adc
das
cs
fiaddl
dec
jecxz
adc
out
mov
pop
aaa
imul
shrl
rol
adc
int3
mov
sub
pop
fwait
jge
xor
jg
push
ss
mov
jb
shlb
es
addl
lcall
xchg
lea
lcall
jg
lds
cli
xor
lcall
bound
stc
mov
xchg
adc
inc
jmp
jbe
fistps
scas
les
adc
aas
cmpsb
and
adc
cwtl
in
mov
inc
or
jae
jne
xchg
push
pushf
or
and
out
jo
sub
int3
divl
in
sbb
pop
addr16
and
ss
cmp
push
inc
adc
ja
xchg
push
or
movaps
cmc
iret
mov
shlb
leave
jge
pop
leave
xor
inc
cmp
cmp
push
in
cld
in
sub
pusha
and
cmp
inc
and
mov
arpl
lock
mov
push
and
mov
jbe
pop
shr
arpl
inc
jns
decw
subb
pop
jae
xor
mov
pop
sbb
pop
rolb
ss
jb
int3
push
cmp
ss
and
or
sbb
mov
fbstp
insb
dec
lods
lahf
xchg
negb
push
sbb
add
inc
popf
cmpsb
cmp
scas
insl
call
sub
int3
or
pop
pusha
push
jle
sub
and
scas
data16
xchg
nop
loopne
sub
cld
or
and
dec
xchg
pop
jmp
cmp
xlat
jle
aas
inc
jo
fstps
jae
xor
jecxz
test
jb
faddl
pusha
loop
cmp
cmc
or
fnstcw
sahf
push
dec
inc
jl
insl
xor
sub
adc
sbb
sbb
inc
popf
and
ret
and
mov
mov
fmull
test
inc
adc
lock
pop
adc
gs
cmp
hlt
pop
fdivrp
iret
hlt
out
pusha
repnz
lea
xchg
test
xor
sbb
icebp
or
shr
arpl
shll
and
imul
addr16
mov
scas
push
sbbb
pop
mov
xchg
mov
push
mov
bound
add
lods
test
cmp
movb
dec
lds
sub
jp
push
mov
out
lcall
pop
iret
sub
fwait
in
jge
fwait
xchg
sub
dec
popa
jp
in
adc
xchg
mov
mov
xor
arpl
popa
pop
sti
js
sahf
xchg
aaa
aas
addr16
mulb
sub
push
xchg
cli
ljmp
insl
cmpl
fsubrs
dec
dec
xchg
xlat
sub
jle
popa
and
aas
xchg
pop
inc
jmp
dec
jmp
imulb
jl
stos
leave
mov
xor
outsb
pop
daa
ljmp
loopne
ror
add
push
int3
dec
sbb
fidivrs
pop
pop
pop
mov
jae
call
repz
sbb
daa
scas
lods
bound
scas
jmp
movb
sbb
jp
lret
jl
xor
sub
jns
push
mov
adc
movsb
test
nop
cmc
in
push
fistpll
cmpsl
sbb
out
fisttpl
xchg
test
add
adc
adc
lods
into
add
frstor
lock
jecxz
dec
sub
addl
popf
rolb
push
or
and
push
daa
xchg
jb
cmp
cmpsb
repz
sub
mov
pop
mov
sahf
pop
jl
xchg
cmpsl
add
scas
cmpsb
in
push
xchg
mov
test
dec
mov
lcall
dec
stos
dec
test
xor
cld
std
sahf
sti
dec
mov
push
xchg
test
and
mov
in
bound
test
aad
addr16
adc
jp
gs
loope
mov
aam
mov
mov
mov
movsl
lret
and
pushf
test
push
pop
dec
mov
test
or
mov
mov
sub
xor
dec
pop
lds
faddl
int
pop
stos
test
ljmp
pop
xchg
adc
sub
xchg
inc
xor
cmpsb
dec
inc
sub
lret
mov
imul
std
push
lahf
or
arpl
leave
mov
repnz
dec
xor
xchg
xchg
push
xchg
in
push
rcll
sub
out
xor
les
test
ss
sub
mov
sub
outsb
push
mov
leave
sahf
lods
dec
dec
loop
sub
mov
test
mov
stc
jns
inc
lds
fisttps
stos
and
insb
ja
leave
ds
cli
call
daa
pop
pop
xchg
inc
scas
lods
xchg
out
push
mov
test
lods
jmp
es
jmp
sbb
insl
pop
and
mov
or
jno
and
int3
cmc
lahf
push
lock
pop
popa
movsb
mov
cld
aaa
in
fidivrl
inc
sbb
scas
xor
enter
mov
and
ja
stos
mov
movsl
dec
mov
adc
mov
pop
xor
and
scas
out
cmpsl
push
test
test
loopne
add
fcmovbe
push
pop
push
mov
push
fsub
movsb
jecxz
jmp
sub
xchg
jbe
in
lret
sub
rclb
es
paddusw
stc
movsl
xor
mov
sbb
cmc
dec
inc
repz
cmp
dec
sub
fs
push
popa
sbbb
loop
loope
pop
test
fimuls
movl
mov
mov
lea
add
in
movsb
aam
nop
mov
div
cmpsl
xchg
push
or
lahf
shld
xor
sub
dec
push
arpl
lods
ret
dec
sub
into
and
mov
popa
les
iret
or
loop
or
xrelease
mov
arpl
das
adc
int3
test
cmpl
mov
lock
insb
and
push
inc
mov
jno
fnstenv
xchg
xchg
cld
dec
pop
sbb
notb
pop
dec
and
into
jb
stos
jns
je
sbb
push
jmp
out
add
jg
test
xchg
into
and
outsb
movsb
sar
pop
or
sti
jecxz
mov
orl
std
or
sahf
adc
imul
sahf
sub
mov
adcl
hlt
aad
and
mov
xor
lds
mov
test
xchg
sahf
xor
jmp
roll
pop
xor
cltd
loop
arpl
pop
pop
int3
inc
mov
push
adc
xor
pushf
sar
sbb
push
sbb
jp
ds
sub
out
sub
push
ljmp
or
in
or
or
sub
and
mov
fwait
fs
xchg
mov
add
ret
testb
push
jbe
inc
xor
dec
sub
insl
ret
cmp
dec
imul
mov
add
and
cmc
cmp
movsl
sub
outsb
xchg
aam
mov
jno
xor
mov
jp
cmp
andb
lcall
inc
imul
rorb
xor
cmc
jle
push
iret
lods
mul
and
fldcw
mov
jo
dec
or
mov
sub
loope
xchg
cmp
pop
lds
push
mov
push
cmp
int3
enter
fiadds
dec
and
loop
pop
loope
adc
pushl
push
jae
out
int3
mov
and
or
dec
and
mov
push
dec
push
repnz
adc
sbb
adc
ja
pop
imul
pop
addr16
jecxz
in
ds
mov
push
lods
pop
fs
stos
add
cmp
xchg
js
fwait
jnp
cmp
push
jp
sbb
push
daa
aaa
ja
sub
push
mov
cmpsl
xchg
mov
les
mov
cmpb
pop
mov
jl
pop
iret
shrb
mov
add
or
add
loop
dec
xor
cmp
and
inc
cmp
adc
arpl
mov
push
cli
jno
lods
rolb
fstpt
hlt
leave
aam
pop
lods
sahf
adc
dec
and
dec
push
jae
xchg
int3
mov
push
or
sbb
fisttpll
mov
pop
loop
lret
popa
lock
addr16
out
push
cmpsl
movsl
mov
enter
push
mov
push
test
pop
std
nop
push
cmp
fcmove
xlat
inc
sbb
std
push
adc
out
adc
inc
pusha
xchg
popa
ss
cs
hlt
xor
mov
lahf
je
insl
stos
daa
cli
insb
and
repz
ss
jmp
ret
sub
sbb
xlat
jno
pop
mov
add
lahf
mov
fsubl
hlt
imul
adc
in
mov
jns
subl
cld
dec
xlat
clc
iret
fdivs
test
dec
mov
stc
push
daa
cmp
test
xchg
pop
ljmp
or
movsl
dec
pusha
mov
into
dec
mov
aaa
or
popf
in
sub
sub
and
inc
outsl
std
sbbl
mov
out
xor
or
pop
pop
testb
xor
jno
pop
and
pop
fdivs
mov
jns
push
and
jl
test
outsl
push
jge
sbb
mov
mov
add
mov
lods
dec
rcrl
dec
es
dec
jmp
fstpt
pop
int
imul
dec
int3
cmpsl
push
into
push
cld
lret
mull
inc
or
pop
shlb
fbld
scas
ret
jno
inc
leave
outsb
xchg
adc
imul
push
add
sahf
cltd
pop
fidivl
fdivl
sbb
mov
or
sub
cmp
rcll
push
adc
pop
cmp
dec
ljmp
push
fisttps
sbb
inc
inc
lcall
xlat
mov
and
cmp
dec
nop
mov
stc
push
xor
push
jge
bnd
ret
sub
jo
add
push
pushf
add
adc
xchg
sub
sub
hlt
xor
scas
jle
mov
adc
xchg
lods
sub
cltd
mov
sahf
push
mov
int3
and
xor
sub
mov
adc
dec
sarl
shlb
in
mov
xorl
ljmp
mov
cmpsb
negb
dec
xchg
sub
pop
lea
pop
mov
xor
test
cs
fwait
mov
test
daa
ljmp
inc
jae
mov
cmp
xchg
fstl
pushf
cwtl
cli
je
cwtl
lret
inc
sub
ljmp
sub
and
scas
dec
lahf
das
xor
repnz
in
xchg
sub
xor
dec
mov
cwtl
cmp
enter
fldenv
ss
mov
cwtl
pop
sbb
mov
xchg
repz
cmpsb
sbb
mov
into
test
rcrb
xchg
lods
daa
xchg
or
mov
in
pop
mov
js
or
addb
dec
jo
icebp
pop
dec
shrl
int3
pop
in
les
dec
ret
fwait
lcallw
sub
enter
or
mov
or
push
ds
sti
sub
pushf
int
sub
add
je
cli
sbb
push
mov
aam
inc
std
jno
add
inc
dec
nop
push
adcb
adc
sbb
daa
push
add
ficoms
inc
mov
mov
mov
js
shlb
sub
add
dec
xchg
jne
jecxz
xchg
push
in
lcall
sbb
andl
ljmp
pop
pop
out
bound
xchg
ja
jno
push
aaa
dec
sub
mov
je
into
lcall
mov
shll
sub
dec
je
insl
test
cmp
incb
push
dec
sarb
pop
sbb
daa
ss
enter
fisubl
subb
fcoml
sti
aaa
shll
ja
add
test
mov
aad
js
stos
push
push
addr16
jo
es
in
jnp
mov
pop
xor
mov
adc
cmp
mov
movsb
lock
scas
fists
arpl
ljmp
push
pop
in
fdivl
adc
push
cmp
jns
movsl
popa
xchg
les
sbb
push
jns
into
pop
jbe
xor
sti
bound
or
fidivl
inc
jge
cmpsb
and
lahf
test
or
inc
pop
js
adc
lods
cltd
loopne
neg
iret
cmp
int
add
inc
and
pop
shrl
xorl
test
sub
fcomp
add
jns
shrb
sarl
lods
out
sub
aaa
pusha
movsb
daa
cmp
subb
mov
xchg
mov
dec
movsl
sbbb
push
imul
ja
and
xor
push
xchg
mov
stc
cld
push
xlat
ljmp
push
and
push
pop
nop
aaa
add
int
push
cmp
xor
popf
out
xchg
sub
stos
vmwrite
push
and
fisubs
fnstcw
jle
in
hlt
xor
mov
xor
inc
push
inc
sbb
jbe
popa
and
mov
inc
mov
aam
jg
divl
ss
mov
sbb
cwtl
lods
xorb
sbb
sub
and
push
push
orb
cmc
pop
push
pop
rcll
jg
rcr
in
fcomps
jnp
push
in
pop
in
insb
rcrl
insb
test
xor
add
pop
outsb
repz
mov
pop
or
cs
aad
adc
mov
adc
scas
insl
or
xlat
test
call
dec
inc
or
mov
or
mov
cmp
mov
pop
cltd
sbb
cmpsb
dec
test
ds
ret
mov
mov
imul
jno
mov
cld
movsl
aam
xor
aad
jno
inc
sbb
sar
mov
xchg
xor
clc
pop
pop
mov
xor
divl
in
out
or
aam
push
jbe
std
testl
and
pop
out
mov
cmc
sbb
dec
repz
pcmpeqb
sbb
repnz
mov
aaa
dec
lods
add
ja
inc
and
inc
push
add
orl
jno
outsb
scas
ja
xchg
fs
xor
pop
popf
xor
out
jle
in
cs
cmpsb
cmpsb
cmpb
aad
fnsave
pusha
iret
daa
call
aam
xchg
ja
cmpsl
lock
movb
cld
stos
pop
mov
orl
subb
mov
jge
push
sbb
mov
adc
jge
and
dec
mov
xor
je
arpl
in
ljmp
sarl
pop
sub
jge
cmpsl
jg
xchg
pushf
test
jno
test
jne
inc
jo
mov
push
aam
pop
lret
lods
fsubrp
adc
shll
fmul
jle
cmp
fwait
push
test
pop
jecxz
push
xchg
ret
out
xchg
ja
xor
pop
cmp
add
dec
and
push
lock
mov
jnp
subl
out
sahf
pop
sbb
xor
sahf
and
jecxz
fstpt
popf
iret
push
jae
adc
mov
std
inc
int3
mov
add
shlb
call
fisttpll
or
adc
jno
or
in
gs
stos
dec
pop
in
pusha
mov
andl
mov
push
addr16
dec
test
fisubrs
adc
push
jmp
xchg
daa
push
push
out
push
test
mov
or
fwait
scas
js
rsqrtps
cwtl
rcll
lcall
in
incl
leave
sub
in
sbb
xor
ret
dec
mov
idivb
testl
jb
mov
xchg
dec
xchg
ja
adc
out
or
iret
idivl
out
mov
mov
out
imul
out
cltd
aad
mov
inc
loope
lahf
xlat
fsubs
push
dec
ret
sub
inc
lock
nop
es
icebp
hlt
pusha
sub
movsl
fiaddl
push
add
insb
cs
push
sbb
dec
sub
fsts
mov
mov
and
lods
jo
out
popa
jae
lret
ja
gs
daa
inc
add
add
jne
mov
or
ljmp
inc
pop
imul
mov
mov
sbb
loopne
xchg
pop
jo
mov
cli
dec
mov
es
lahf
out
jnp
add
xchg
cmc
sbb
insb
push
popf
out
test
scas
xchg
dec
cli
cld
lcall
push
push
insl
jo
inc
dec
inc
cs
bound
or
mov
pushf
std
cmpl
sbb
inc
popa
and
mov
cmp
lcall
add
xchg
adc
shll
adc
and
adc
or
fwait
daa
test
pop
mov
add
ja
fisubl
pop
std
rorb
cmp
in
fisttpl
cmp
mov
mov
lods
daa
loope
fsubrp
into
jbe
xchg
push
jmp
cmp
push
pop
cmpsl
fldcw
xor
mov
insb
sbb
test
xchg
mov
mov
jmp
jge
push
jp
adc
or
push
movsb
pop
mov
sarb
or
push
push
xchg
xchg
fdivl
jg
loope
pop
or
in
ret
shlb
lea
call
les
lret
aad
aas
mov
jnp
xchg
adc
mov
cmc
push
imul
add
cmp
xor
aaa
adc
add
and
dec
cmp
sbb
in
mov
andb
clc
scas
call
pop
repz
movsb
jle
shlb
and
addr16
pop
aam
sub
cmpsl
mov
negb
loopne
sub
add
sub
aas
pop
and
adc
mov
aas
dec
aad
std
jecxz
xchg
adc
sbb
add
xor
aaa
mov
jne
aad
pop
inc
lds
mov
sbbl
sahf
pop
adc
and
pop
sbb
inc
sarl
sbb
sub
mov
xchg
mov
mov
inc
scas
pop
es
repz
stos
shll
out
xor
pop
ss
fistpl
push
xor
out
iret
frstor
js
loop
ds
add
repz
or
popa
testb
aaa
pop
sti
ficompl
adc
xchg
out
xor
ret
push
in
int3
inc
cmpsl
loop
ret
hlt
sbb
and
pop
mov
push
fwait
pop
pushf
pop
pop
addb
xor
push
stc
sbbl
sub
js
mov
mov
sbb
fidivrs
repnz
lcall
push
test
adc
lods
push
push
jno
ljmp
add
aaa
rcl
xchg
adc
jb
push
imul
inc
push
dec
jmp
pusha
mov
and
scas
aaa
push
and
stos
ds
icebp
popf
out
mov
xor
repz
aaa
dec
out
fcomps
aad
and
adc
pop
mov
imul
arpl
ret
adc
xor
dec
mov
cmpsb
xorb
inc
adc
call
out
stos
fmuls
incb
push
dec
dec
push
into
and
inc
dec
xchg
dec
jne
rcrb
sahf
in
cmp
or
mov
scas
xchg
hlt
dec
jmp
xchg
dec
sub
push
in
dec
iret
aaa
mov
sub
or
repz
iret
mov
cwtl
lret
mov
adc
push
or
mov
pop
push
daa
mov
cld
addb
push
lock
test
mov
jae
jl
push
cmpsb
jge
sbb
lock
pop
mov
and
test
mov
push
jb
sahf
dec
mov
xchg
ss
inc
subl
mov
push
fisubrl
stc
aam
stos
xchg
xor
sub
or
xor
mov
aad
push
add
or
mov
iret
pop
cmp
mov
mov
adc
repz
sub
sbb
pop
xor
or
cld
and
jge
mov
inc
loope
xlat
clc
in
out
jp
mov
repnz
inc
loopne
mov
dec
jne
jne
xchg
xchg
pop
sub
cmp
je
mov
fsubs
add
pop
out
je
cld
sub
sahf
orb
jmp
sub
or
cmp
stos
inc
clc
and
cmpb
pop
inc
xor
xor
inc
inc
mov
imul
arpl
inc
addr16
int
mov
jp
push
mov
data16
push
dec
into
mov
test
xchg
push
jmp
ror
arpl
adc
pushf
adc
push
push
jmp
push
fcoms
and
inc
andb
mov
adc
add
xchg
dec
add
in
or
and
pop
jle
adc
fistps
jl
xor
jmp
sbb
gs
xchg
xchg
ret
xchg
or
leave
lods
cli
dec
jle
test
sub
push
and
jb
mov
mov
jb
ds
les
push
subb
jnp
cmc
dec
push
and
inc
jno
jge
dec
pop
pop
pop
cmc
pop
mov
mov
lahf
ss
out
jmp
lods
jns
loopne
push
or
pop
inc
xchg
mov
leave
leave
shrb
add
icebp
mov
mov
push
and
xor
xor
test
fdivrs
push
stos
sbb
mov
jle
ret
jecxz
ror
iret
ss
data16
xchg
lock
lods
sub
adc
push
insl
cld
rolb
cmp
xchg
mov
xchg
fdivrs
in
test
bound
out
mov
popf
xor
mov
movsb
mull
adc
shll
push
xchg
subb
dec
sub
testw
mov
aaa
mov
cli
outsb
jmp
xorl
inc
cwtl
push
movsb
test
inc
pop
lods
push
cs
shll
or
lea
push
adc
ds
mov
mov
dec
inc
hlt
cmp
mov
pop
clc
mov
in
out
test
in
mov
dec
or
rcll
cmp
shrb
test
repz
xlat
scas
mov
loop
test
mov
fdivl
ret
test
jae
and
mov
mov
jbe
xor
jmp
lock
je
pop
sbb
jbe
xor
mov
lock
sahf
mov
int3
rcrb
sar
dec
mov
stos
ffree
test
pop
xchg
sub
push
dec
sub
add
xchg
aas
xchg
xchg
push
cmpsb
jg
test
xchg
push
push
push
xchg
mov
sbb
lahf
scas
sbb
sub
add
inc
and
jns
divb
in
sub
mov
pushf
lahf
xor
inc
inc
leave
mov
jnp
fists
sbb
xchg
mov
stos
mov
cmpsb
in
push
das
repz
sub
pop
pop
inc
inc
xor
outsl
push
stc
add
imul
or
mov
gs
leave
das
and
shr
push
lock
jno
mov
sub
imul
in
dec
or
dec
xchg
xchg
sti
xor
adc
fldl
and
and
xchg
out
cmp
sbb
jo
mov
outsl
jmp
pop
xchg
pop
sub
popf
sbb
into
imul
addl
fmuls
mov
or
add
outsb
das
cs
and
dec
sub
out
push
inc
jle
ja
cli
push
cmpl
adc
arpl
lock
scas
cmp
scas
mov
xor
out
rcrl
sbb
cmpsb
adc
mov
mov
mov
xchg
mov
xchg
lcall
movsb
test
pop
xchg
mov
push
inc
sub
shl
mov
add
test
mov
jp
stos
rcll
push
inc
lcall
mov
fldcw
and
lds
mov
ror
popa
adc
push
data16
aam
lock
inc
xchg
inc
mov
es
cmp
dec
xor
pop
push
test
dec
fcompl
push
xor
mov
xor
jg
fisubrl
vpcmpeqw
fisubs
outsl
and
stos
mov
sbb
pop
mov
add
mov
xchg
push
dec
rolb
es
adc
or
jge
sbb
cs
cld
scas
mov
inc
in
inc
push
loope
mov
aam
int3
push
inc
scas
cmp
mov
mov
pop
push
sbb
and
rcll
in
rorb
pop
pop
aam
sbb
ja
cmp
xchg
loopne
sub
ret
mov
test
into
pop
nop
and
dec
inc
and
ljmp
loop
movsb
inc
adc
add
push
out
sbb
pushf
mov
imul
cmp
test
mov
adc
lret
ljmp
imul
push
outsl
sub
pushf
mov
mov
adc
sbb
repz
hlt
xchg
push
sbb
inc
inc
shlb
xchg
adc
test
dec
imul
dec
fs
ret
push
mov
and
mov
mov
cmpsb
in
push
out
mov
lret
aam
pop
and
rcl
mov
pop
or
es
push
data16
fists
xchg
mov
leave
xorl
cltd
lret
test
test
or
jae
rorl
fs
mov
out
scas
add
add
arpl
movl
pushf
out
loope
and
mov
jmp
cmpsl
popa
jmp
sub
push
lock
rcr
rclb
mov
dec
insl
mov
or
dec
or
in
dec
scas
ljmp
adc
xchg
icebp
bound
outsl
and
ss
lods
xchg
jnp
mov
mov
dec
das
add
push
dec
sbb
xchg
add
inc
leave
movb
jg
data16
mov
ret
xchg
in
cmp
cmc
fistps
adc
call
popf
das
dec
xchg
addr16
enter
mov
in
pop
out
stos
lds
and
arpl
imull
mov
xor
out
lret
and
cwtl
lret
or
rcrb
clc
fidivrs
leave
stc
sub
cmp
test
roll
test
lock
and
push
popl
push
push
scas
dec
gs
mov
pop
xor
xchg
adc
loopne
inc
adc
ds
push
xorb
ljmp
jns
fidivs
in
rcrl
rol
in
adc
push
mov
arpl
or
push
shlb
lcall
fwait
data16
in
jl
scas
sbb
or
xor
test
cmp
or
adc
xor
dec
fstl
iret
cli
add
filds
lret
lods
loope
add
aam
cld
mov
pop
mov
mov
ljmp
jne
or
jl
call
pop
mov
fadds
mov
push
xchg
movsb
xchg
movsl
fstpl
inc
mov
vcvtsi2sdl
mov
pop
cmp
mov
sub
loope
mov
cmp
mov
add
dec
inc
add
xchg
leave
jecxz
mov
mov
loop
in
xchg
je
add
fdivrl
aad
movsl
inc
aas
inc
dec
mov
test
or
pop
orl
or
jae
push
adc
fidivl
in
xchg
jge
push
adc
pop
adc
call
stc
add
inc
aad
ret
cmp
stc
shll
and
xor
add
xchg
mov
cli
mov
jns
pop
cmc
dec
cs
sub
mov
lds
dec
stc
bound
and
bound
fisttps
testb
fdivrs
scas
add
sub
sarb
and
mov
dec
imul
sbb
subb
pop
cs
hlt
xchg
jmp
cmp
pop
push
notb
pop
sub
sub
pop
pop
leave
fstl
inc
shlb
iret
pop
mov
or
pop
call
cmpsl
and
xchg
push
mov
test
fistpl
imulb
mov
out
addl
and
dec
cwtl
aas
mov
or
shlb
mov
jmp
cmp
test
aam
mov
xchg
daa
stos
sub
out
pop
xchg
pushf
js
inc
mov
mov
push
add
push
inc
aad
nop
bound
pop
mov
cltd
stc
fwait
cs
addr16
mov
jno
cmp
scas
in
iret
in
repnz
sub
xchg
sub
pushf
mov
fstpt
mov
and
mov
mov
push
xor
test
pusha
ret
scas
xchg
sbb
or
or
xchg
test
lods
add
retw
hlt
push
or
stc
pop
jle
test
mov
mov
or
or
jl
inc
out
xchg
aad
int
or
imul
cmc
mov
sub
xor
jle
and
jmp
lcall
shrl
pop
outsb
push
sbb
scas
cli
fists
sub
mov
xor
adc
fcomp
push
and
repnz
jo
sbb
jl
outsb
and
and
fidivs
outsb
aas
js
les
pop
stc
pop
or
push
xchg
test
mov
fwait
mov
pop
pop
and
aad
mov
les
ss
js
xchg
test
sbb
xchg
mov
jl
call
ret
pop
fsubs
pop
dec
js
inc
push
mov
mov
xor
mov
les
cli
js
add
clc
in
out
xor
jne
insl
sub
vphaddubq
rcrb
dec
pushf
fistl
hlt
or
rorl
nop
jl
cmp
leavew
into
into
mov
lahf
lock
shr
test
sbbb
jns
or
inc
lock
jbe
cmp
decl
sub
or
jnp
aad
pop
jp
push
cmp
inc
and
fadds
loop
and
or
popf
loop
mov
stos
or
out
mov
lock
adc
jb
test
add
jnp
nop
leave
stos
sub
xor
in
enter
dec
dec
stc
inc
pushf
call
sbb
loope
xchg
rorl
cmp
push
mov
insl
imul
ljmp
inc
push
pop
push
xlat
gs
outsl
add
mov
and
push
int3
inc
nop
out
lock
add
cmp
xchg
xlat
stos
arpl
jl
adc
rolb
sahf
gs
jmp
pop
push
dec
notb
movsb
and
or
dec
leave
cltd
iret
dec
or
mov
inc
pop
arpl
stos
xchg
xlat
daa
cmp
test
mov
cmp
dec
inc
lds
xor
in
mov
cltd
and
sub
xchg
cmpsl
mov
push
fcomip
in
add
rclb
scas
int3
sbb
jns
scas
jl
push
xor
push
lds
push
xor
int3
fsubr
push
lret
in
mov
fisubl
sbb
and
sarl
mov
mov
shll
scas
jmp
or
shl
sahf
leave
inc
add
int3
mov
or
aaa
jno
into
jge
pushf
jge
fdivrs
je
movsb
push
and
cmpsl
enter
push
ljmp
xor
icebp
pop
and
pop
lret
rclb
inc
push
inc
test
aad
cmpsb
mov
jae
adc
xor
daa
aas
cltd
jmp
add
cli
push
outsl
xor
inc
mov
or
pop
sarl
andl
adc
mov
andl
add
fistpll
inc
push
cmp
addr16
inc
arpl
jb
andb
jnp
and
cmc
outsb
mov
sbb
push
inc
mov
jne
push
inc
daa
push
pushf
push
cmp
sub
xchg
fs
mov
iret
cmp
adcb
sbb
cmp
jmp
adc
push
mov
loopne
adc
jp
mov
add
or
test
int
inc
push
jbe
cmp
pop
add
cli
jae
fimuls
popf
and
enter
push
mov
cmp
cmp
leave
mov
xor
outsl
int3
mov
xchg
mov
sub
fidivrl
push
testl
scas
jl
fdivrl
cmp
jnp
jp
xchg
inc
bound
sub
mov
ljmp
stos
out
insl
xchg
iret
dec
mov
shlb
ss
jnp
ss
pop
mov
loopne
imul
hlt
clc
incl
inc
fcoms
cs
pusha
xchg
fiaddl
xor
nop
xlat
mov
xor
out
ret
shrl
test
ja
mov
icebp
mov
decb
sti
mov
mov
and
out
repnz
fstl
pop
je
jo
push
inc
push
mov
pusha
add
xchg
les
ja
push
hlt
add
loope
inc
std
inc
jo
push
scas
xchg
push
inc
jb
call
mov
pushf
sub
or
and
lods
rcrb
lret
xchg
ret
ss
aam
addb
fmulp
outsb
cmp
xchg
outsl
ja
test
sbb
clc
cmpsb
cmp
sti
jb
and
mov
jecxz
sbb
lret
ret
movsl
jp
sbb
gs
or
fwait
sbbl
mov
sbb
ljmp
les
fwait
mov
notl
jo
jne
push
call
cs
je
lret
scas
xor
inc
adc
add
cmp
cltd
sti
bound
clc
dec
ffree
cmpl
xchg
mov
sub
mov
and
clc
xorb
scas
cs
imul
aad
lahf
mov
mov
stos
test
test
xor
sbbl
xlat
outsb
cmc
sahf
fnstenv
pop
fdivrp
sti
outsb
push
int3
test
ret
dec
adc
push
jmp
dec
pop
or
mov
sbb
repz
sbb
sahf
pop
movsl
sbb
mov
movsb
dec
push
out
push
adc
fdivr
cmp
repz
add
bound
lods
popa
inc
jb
push
into
add
mov
adc
and
out
xchg
xchg
xchg
jnp
cmc
jns
mov
pop
sbb
test
sub
xchg
jg
test
pop
inc
test
das
adcb
xchg
jl
leave
fstpl
adc
mov
mov
push
repz
push
jbe
repz
rcr
push
std
outsl
push
inc
inc
pushf
xor
pushf
subl
cvtps2pd
push
sub
orl
add
adc
rclb
cmp
mov
adc
xchg
scas
xor
push
imul
out
nop
pop
jmp
and
in
movsb
popa
cmc
mov
inc
nop
in
dec
cmp
mov
out
out
and
stc
rolb
daa
add
or
std
mov
xchg
gs
cmp
add
in
cmpb
test
add
add
cld
mov
pop
jno
or
pop
cmpsl
pop
sub
in
cmp
cli
outsl
fsubs
ret
enter
dec
popf
xchg
gs
dec
insl
cltd
daa
or
fimull
mov
out
fmul
test
push
iret
scas
pop
lds
fwait
add
jne
pop
xorl
sub
pop
aas
lds
jg
push
sbb
mov
lea
lahf
jne
mov
jle
mull
xchg
nop
push
jmp
push
fs
mov
pop
inc
inc
shl
adc
pop
hlt
adc
lret
out
push
mov
adc
xor
rorb
inc
ficompl
xchg
add
dec
mov
xor
mov
cmp
push
mov
addb
repz
es
cmp
data16
adc
and
cltd
pop
stc
std
into
pop
push
in
jp
ds
daa
push
and
add
fucomp
stos
sub
mov
push
mov
xchg
les
scas
mov
lret
mov
loope
xlat
sahf
lcall
jbe
add
clc
ljmp
pushf
gs
jns
lock
es
inc
push
push
xlat
addr16
loope
push
mov
popf
cld
jb
cmp
dec
jp
adc
or
mov
call
push
js
sbb
mov
and
and
mov
cli
std
mov
gs
pop
in
mov
pop
insl
add
cld
hlt
std
xlat
sbb
in
xchg
cmp
lcall
popf
neg
xchg
push
pop
sti
xchg
push
negl
add
pop
es
mov
xor
pop
hlt
in
shll
cmpl
push
or
nop
mov
js
popa
int3
xor
and
test
cld
sub
clc
test
push
test
inc
xor
xchg
fdivrl
inc
jbe
lods
sbb
sbb
sub
cmp
xor
jbe
push
dec
lods
in
pop
lcall
jbe
ret
jp
daa
xchg
pop
and
xor
add
inc
pop
pop
sbb
je
cmp
add
pop
pop
sub
je
imul
xor
or
incb
fs
jl
inc
push
pop
xchg
cld
inc
sub
test
and
les
inc
mov
push
mov
icebp
mov
push
popa
aad
std
sub
fnstsw
mov
adc
sbb
imul
add
inc
enter
call
and
shlb
test
add
xlat
cs
add
push
push
inc
xor
sub
aam
jl
jmp
jns
lods
pop
jge
mov
leave
push
aam
or
inc
push
movsb
ror
mov
sbb
xlat
sub
nop
jge,pn
aaa
xor
mov
mov
dec
mov
lret
mov
sti
and
pop
inc
loopne
xchg
and
adc
inc
xor
orb
mov
push
fstpl
sbb
inc
incl
cwtl
lret
add
add
aas
in
add
and
xchg
xchg
movsl
sbb
out
movsl
xchg
adc
cmpb
mov
lods
push
fcomps
cmc
cmpsb
inc
es
je
add
loope
push
xchg
jmp
lret
repz
or
jo
cmp
mov
jle
cmp
les
or
sbb
add
clc
call
cli
pop
jmp
cmp
push
inc
xchg
push
leave
push
jo
out
adc
pop
aaa
neg
test
lret
cmpsl
push
scas
and
adc
adc
outsl
push
iret
pminsw
jno
fimuls
cmp
popa
out
sub
cmp
arpl
jns
cmp
jo
pop
sub
negl
dec
sub
ljmp
cmp
sub
repz
lods
dec
cmp
leave
pop
push
cmpsl
popf
ja
xchg
dec
cmp
es
les
out
rcrl
or
jno
scas
test
int3
pop
fnsave
mov
cmp
dec
outsb
xchg
sub
sbb
cs
mov
mov
orb
mov
pop
mov
inc
sub
clc
xor
xlat
and
and
push
and
xor
lea
test
sub
adc
jns
or
cmp
cmpsl
mov
or
sbb
iret
cmp
jp
pushf
adc
sti
and
bound
insl
fiadds
push
xor
dec
dec
adc
cli
xor
stos
cwtl
lods
mov
pop
cmp
jmp
sahf
int
cwtl
or
inc
pushf
into
cmp
mov
mov
and
push
in
test
imull
rcr
mov
outsl
je
pop
inc
xchg
cmp
jecxz
int3
pop
lahf
add
sti
cmpsl
pop
add
add
adc
cltd
jp
push
push
sti
mov
or
sbb
out
ret
and
xchg
xchg
movsl
leave
xchg
imul
add
fucom
or
xor
ror
sbb
mov
sbb
sub
es
rcrb
push
in
mov
mov
cmp
dec
je
xchg
sub
pop
pop
fildll
push
cld
mov
mov
repz
dec
pop
adc
dec
cs
repz
stc
xchg
xor
leave
adc
mov
mov
ret
push
ret
cmp
scas
gs
inc
data16
pushf
cwtl
add
stc
adcl
xor
leave
gs
and
imul
mov
mov
xchg
popf
adc
lret
and
add
sahf
addr16
push
stos
pop
mov
sub
cltd
sbb
sbb
nop
mov
or
adcl
push
push
adcw
jae
jmp
and
pop
int
xor
pop
jne
outsl
push
mov
nop
inc
add
mov
in
les
sahf
mov
and
dec
test
repnz
add
fidivs
fmuls
and
rorb
and
and
dec
mov
outsl
fwait
push
mov
decb
mov
pop
call
xor
fnstenv
or
jmp
add
ds
cli
dec
xor
and
fldenv
daa
pop
xor
pushf
aam
xor
fdivl
lods
sahf
int3
mov
loope
sbb
mov
or
mov
lods
dec
pop
mov
xchg
roll
iret
cmp
or
andl
xchg
jne
adc
lcall
fsubrp
mov
rdmsr
cmp
inc
cltd
fdivrs
outsb
xor
cmp
gs
sahf
pop
int3
mov
mov
fwait
int3
repz
xchg
cld
sahf
adc
jbe
mov
mov
jno
je
dec
bound
test
ret
mov
pop
push
test
push
stc
sub
xchg
repnz
clc
lods
mov
ret
mov
lcall
mov
ret
std
fwait
stc
mov
sahf
mov
pop
js
stc
or
and
je
dec
sbb
in
bound
dec
push
fs
ja
sbb
and
pop
fsubrl
adc
addr16
repz
mov
adc
sub
cmp
xor
testl
push
cmp
jne
das
mov
dec
xor
iret
rcr
data16
out
repz
pop
pushf
outsl
inc
push
sbb
nop
sbb
jp
add
iret
or
clc
sarb
dec
ds
dec
cltd
cmpsl
cmp
lcall
dec
inc
ret
mov
in
cmp
ret
insl
xchg
xor
cmp
sub
mov
push
loopne
sti
xchg
movsb
test
cmp
push
cmpsl
std
sahf
mov
inc
mov
mov
call
dec
adc
mov
xor
mov
sbb
daa
or
jne
mov
mov
outsl
sbbl
jns
push
jne
and
call
stos
insl
jl
xchg
jle
ljmp
dec
or
inc
jbe
out
pop
into
mov
fwait
aad
sarb
outsl
add
xlat
cmp
pop
or
xchg
pop
sbb
cmc
stos
jp
sub
inc
pop
cmp
mov
stos
inc
pop
mov
and
cmp
and
in
inc
xchg
sub
test
push
mov
xchg
out
in
mov
ds
cmc
sub
shrb
out
std
int
lods
xchg
push
inc
mov
xorb
pushf
bound
loop
rcll
sub
adc
pop
mov
mov
test
jl
cmp
ja
insl
nop
dec
mov
and
test
lcall
add
popf
js
push
arpl
push
mov
mov
jge
xchg
lea
xchg
jp
outsb
fs
push
mov
mov
push
andl
cmc
imul
add
push
push
incb
pop
sbb
xchg
orl
cltd
sbb
lret
hlt
test
inc
roll
sbb
outsb
adc
cmp
cmp
xchg
mov
cltd
pushf
inc
and
mov
pop
xchg
sbb
pop
sub
inc
cmp
ljmp
out
pushf
add
adc
and
or
call
jmp
mov
inc
xor
out
mov
jp
aas
call
mov
in
cs
sbb
push
cld
xor
fildl
push
xchg
or
sub
clc
cmp
lret
leave
pop
filds
cltd
add
daa
cmp
push
lds
adcl
add
lret
add
pusha
pop
and
xchg
jns
dec
dec
mov
iret
pop
outsb
outsl
push
imul
sbb
mov
popa
xchg
inc
pop
jnp
jno
outsb
xor
int
incl
hlt
sub
ja
outsb
jg
dec
xchg
cltd
cmovbe
mov
lods
mov
scas
xchg
nop
data16
popf
and
call
sub
xor
xchg
test
in
je
stos
dec
mov
jp
adc
popa
movsl
movsl
cmp
xchg
sahf
lret
mov
push
inc
into
out
out
jp
sub
pushf
inc
mov
jmp
mov
sbb
inc
xorb
jg
xor
push
fnstenv
test
test
ljmp
ljmp
or
lods
mov
cmp
cmp
bound
cmc
ja
inc
adc
insl
dec
xchg
movsl
xchg
dec
mov
imul
adcb
dec
loope
fdivl
daa
sub
aas
lret
mov
dec
and
xlat
in
in
and
shrb
jp
push
fcompl
mov
das
std
sub
adc
or
cwtl
stos
or
lock
sub
lods
mov
jmp
loop
mov
pusha
mov
test
out
xor
cmc
outsb
jnp
lcall
nop
into
ss
dec
push
neg
mov
loop
pop
ret
pusha
fimull
lahf
xchg
push
rcrb
xchg
dec
and
jge
push
jl
jle
xchg
insl
xor
push
push
stos
stc
dec
dec
in
inc
mov
inc
out
sub
test
lds
jle
sti
cmpsb
daa
sti
data16
imul
stos
lret
add
shl
daa
les
xchg
push
push
push
and
dec
mov
jb
inc
in
add
shlb
mov
test
jne
cmpsl
mov
mov
je
mov
add
add
pop
loop
cmp
sub
in
iret
sti
push
add
addr16
dec
dec
or
mov
jb
sub
ror
int3
test
mov
and
ret
inc
sar
jg
pop
xchg
xor
mov
out
fs
xor
cmp
xor
rcrl
test
and
pop
push
cli
and
cwtl
sbb
push
cmc
pusha
addr16
inc
or
inc
sarb
jp
out
clc
nop
fildll
mov
jp
sub
les
rol
scas
enter
loop
std
rol
mov
arpl
sbb
shll
mov
jle
inc
cmp
jmp
dec
imul
out
aad
push
pop
dec
lock
jle
mov
dec
jo
aaa
add
repz
push
cs
pop
enter
xor
je
xchg
adc
shlb
std
or
xchg
sar
dec
and
dec
bound
mov
push
mov
and
pushf
adcb
add
and
in
push
adc
xorb
add
mov
insl
dec
inc
pop
push
adc
mov
test
in
inc
lcall
jno
out
add
mov
dec
arpl
aaa
mov
push
imull
out
inc
add
adc
in
test
push
movsb
loopne
pushl
xor
lret
push
into
adc
cmp
cmc
mov
int
leave
mov
or
adc
ljmp
aam
scas
subb
mov
sarl
mov
mov
test
add
jb
sbb
jmp
mov
aas
sbb
sbb
not
jbe
inc
imull
inc
push
dec
inc
mov
jp
cmc
add
mov
push
les
lods
rorb
lcall
pop
scas
add
mov
push
and
dec
cmp
loope
rclb
pushf
ret
pop
neg
ss
insb
push
sti
add
push
pop
pusha
inc
pop
pop
lock
push
mov
push
js
outsl
push
cmpsb
fldenv
jnp
pop
daa
mov
out
shll
outsb
sub
enter
outsl
insl
xchg
std
cli
sbb
or
shr
out
out
jecxz
imul
hlt
inc
inc
mov
adc
add
push
cwtl
add
pushf
cmp
pop
out
std
push
ret
rclb
outsb
mov
mov
pop
and
push
cld
jno
lods
add
cmp
dec
cmp
xchg
inc
ljmp
cs
loopne
adc
lds
scas
cmp
cltd
in
scas
push
clc
or
push
inc
packuswb
cmp
adc
dec
add
mov
in
adc
dec
popa
iret
xor
cmpsl
shr
cmp
adc
push
or
adc
fwait
add
xchg
push
test
sub
mov
lods
stos
pusha
push
sub
addr16
push
gs
fnstcw
jns
daa
dec
ljmp
in
lret
out
xor
jno
sub
mov
pop
shll
popa
enter
jmpw
lahf
sub
outsl
fisubrl
jae
pusha
nop
mov
xchg
sbb
cmp
mov
scas
xchg
adc
jp
dec
in
lret
push
test
fcoms
jne
decb
jp
jge
xchg
pop
repz
cmp
loope
fcmovu
movsl
iret
jns
test
movnti
sbb
das
loope
xor
jns
int3
lods
sub
or
or
ret
adc
int3
out
aas
js
sti
push
push
sbb
or
fcmovu
cltd
fidivs
adc
ljmp
xor
imul
push
ret
repnz
mov
push
sbb
gs
lret
cs
jb
sbb
jnp
movsb
lds
inc
jge
in
ficompl
insb
scas
clc
or
sbb
outsl
pushl
push
inc
lcall
mov
iret
loope
xor
imul
loopne
out
mov
lahf
jg
mov
fimuls
mov
jae
push
mov
xor
cmc
pop
lahf
inc
je
std
and
gs
in
hlt
inc
ret
fs
or
clc
outsl
repnz
loopne
push
xor
cli
jp
das
mov
sbb
outsb
imul
fdivl
and
sub
popf
jecxz
push
and
movsl
cmpsl
sbb
push
cmp
js
sbb
xor
loop
pop
scas
push
push
sub
in
pop
orl
xchg
pushf
fisubl
ret
mov
jg
rorl
sti
add
jmp
nop
int3
std
pusha
add
insb
jno
mov
xchg
testl
cltd
negl
xchg
ret
mov
mov
ficomps
pushf
jle
lret
inc
je
or
inc
stc
mov
fistl
add
pusha
test
push
les
dec
adc
imul
clc
jg
notb
jg
pop
xchg
loope
into
or
and
dec
pop
test
xor
incb
popf
leave
jo
aam
cs
dec
out
jmp
inc
out
push
rcrb
test
outsb
lcall
and
addr16
int3
push
mov
adc
loope
cmpsb
jp
cltd
imul
sub
xchg
fwait
lock
sub
and
inc
cmp
fstpt
adc
scas
in
cwtl
adc
ja
cmp
jns
xchg
loopne
adc
call
ss
pop
push
out
loop
mov
mov
cmp
xchg
add
dec
jl
cmc
mov
inc
adc
mov
or
cltd
fidivs
inc
push
jne
pop
call
mov
push
push
push
inc
or
cmpsb
mov
jb
push
out
xor
push
scas
and
jae
inc
add
inc
in
cmp
add
imul
jnp
adc
add
test
inc
mov
push
mov
fstpt
jnp,pt
adc
cmp
push
in
sbb
jo
or
insb
test
ret
cmp
push
sahf
adc
mov
les
cld
and
cmp
mov
sub
std
nop
std
pusha
pop
jbe
xor
dec
test
dec
fistpll
xor
xor
or
les
sub
or
push
mov
repz
fsubs
call
popw
jp
popf
xchg
int3
pop
jo
cs
pushf
mov
iret
pop
sti
fldl
jp
repz
push
dec
and
test
xlat
cmc
lds
je
mov
sbb
mov
push
xor
push
mov
mov
xchg
dec
or
pop
add
inc
or
adc
push
repz
test
or
imull
mov
xor
mov
shl
jae
test
xor
js
jno
movl
bound
cmp
and
lods
call
in
mov
adc
cmc
lahf
iret
xorb
inc
jae
sti
sbb
jne
mov
lds
cmpsl
pop
jb
jno
insl
ja
jo
sahf
pushf
into
dec
shlb
adc
cmpsl
mov
sub
dec
enter
jle
mov
fildl
pop
loopne
js
fwait
outsb
mov
mov
insl
dec
movsb
repnz
jl
stc
adc
push
mov
cmp
mov
jae
or
mov
mov
pop
sahf
pop
sbb
mov
jmp
icebp
jmp
int3
lahf
cmp
outsb
inc
ret
mov
cmp
push
jl
adc
adc
inc
je
test
xor
movb
fidivs
sbb
imul
ja
and
scas
sbb
popa
cs
pop
jle
aaa
and
jg
pusha
outsb
mov
sbb
ret
sbb
aad
jb
mov
mov
mov
test
xor
adc
cltd
js
dec
and
sbb
and
sub
or
scas
adc
jecxz
icebp
dec
sar
int3
in
mov
dec
fimuls
cmpsb
push
rcrb
bnd
sub
das
pop
and
push
xchg
dec
ljmp
xlat
inc
js
test
push
lcall
xchg
repnz
add
mov
push
pop
ja
adc
test
mov
jecxz
add
mov
leave
cwtl
pushw
imul
inc
int
sbb
mov
mov
adc
dec
push
mov
and
inc
pop
sbbl
lcall
rcl
ja
es
cs
mov
sbb
pop
mov
rorb
add
cmp
std
sbb
inc
ja
xlat
cltd
shll
cmp
adc
dec
mov
sub
popa
out
jmp
and
pop
or
push
xor
adc
jge
xchg
push
icebp
xor
popf
xchg
aad
inc
sub
xor
fcomp
jmp
and
lret
jle
inc
pusha
in
in
pop
mov
xchg
test
add
ja
in
sub
lret
shrl
popf
int
push
mov
cltd
int3
xor
and
xorl
sub
mov
movsb
and
cmp
js
dec
repnz
dec
cld
jl
cmp
adc
into
outsl
cld
not
rolb
xchg
mov
push
or
xor
into
sub
es
sarb
cmp
sub
dec
test
stc
xor
mov
push
xchg
stos
cmpsb
and
dec
adc
call
out
nop
shlb
xlat
adc
jns
ss
sbb
pop
movsl
sub
les
bsr
stc
adc
mul
add
dec
not
stos
decb
es
mov
stos
adc
xor
xchg
and
aas
jno
push
or
int3
mov
ljmp
dec
inc
cmpb
sub
mov
arpl
mov
mov
jns
test
pop
mov
cltd
inc
add
mov
shr
std
mov
pop
mov
xchg
cmp
test
rol
mov
sbb
lret
adc
adc
push
test
inc
inc
sbb
aad
jg
dec
cmp
cmpsl
sbb
or
xor
xchg
imul
aad
out
add
pop
sub
pop
mov
jle
hlt
les
push
xchg
mov
xorb
sub
xor
lret
lds
sub
or
push
add
inc
out
add
or
inc
add
adc
sub
mov
outsl
or
movsl
std
adc
clc
push
rolb
dec
je
jecxz
les
pop
cmp
int
add
mov
xchg
enter
or
pop
fbstp
call
pop
mov
popf
fs
ret
push
xchg
xorl
lock
dec
fistl
ss
in
mov
fwait
scas
mov
lock
stc
cli
adc
imul
pop
jbe
and
lcall
scas
rorb
sbb
fsubrp
add
xor
add
pop
rolb
sbb
xorl
scas
nop
cmc
xchg
insl
aam
gs
mov
push
int
jp
insb
add
xchg
mov
loope
inc
xor
aas
cltd
stos
in
fmuls
fidivs
jae
out
aas
pop
ss
push
rol
sbb
cmp
pop
aam
scas
cli
dec
jo
cmpsb
loope
pop
mov
jecxz
shrb
int3
mov
adc
out
inc
xlat
jmp
dec
ftst
pusha
shll
mov
push
or
lahf
pop
out
clc
leave
test
ret
inc
scas
cli
fcomip
push
iret
fs
popf
cmpsb
popa
arpl
popa
xlat
mov
adc
and
paddusb
cmp
push
idivb
test
test
mov
imul
and
mov
stos
sbb
mov
jecxz
test
es
dec
scas
lcall
idivb
xorb
push
int
rorl
jl
mov
lcall
cmp
push
cwtl
daa
in
add
cld
pushf
subb
int3
xorb
push
hlt
or
or
call
insl
repnz
mov
stc
jmp
xchg
inc
lock
or
repz
mov
imul
js
sub
add
mov
lret
cwtl
movsl
xchg
cld
push
loope
mov
xor
pop
xor
andb
fildl
sub
movsb
lret
or
inc
xchg
dec
and
decb
nop
in
jne
mov
sbb
imul
xchg
mov
arpl
pop
inc
pop
cmp
mov
dec
adc
lods
roll
lea
inc
fldcw
leave
add
mov
bnd
push
popf
int
cmp
loope
nop
shl
repz
test
xor
xor
or
iret
jo
or
mov
mov
scas
xorl
xor
cmp
xlat
xor
jmp
cltd
xchg
mov
cld
push
sub
xor
daa
je
add
jno
jb
stc
ja
jp
lods
iret
ror
mov
pop
and
ds
inc
into
ljmp
fwait
sub
js
pop
pop
enter
jno
int
push
dec
adcb
shrl
sbb
jg
enter
pusha
lret
lock
cmpsl
inc
xchg
sbb
mov
push
shrb
xlat
addr16
pop
imul
mov
inc
scas
cli
addb
mov
sahf
jmp
les
pop
scas
cmp
out
lea
aas
shr
xor
cs
lea
xor
into
daa
fwait
stc
cmpsb
ret
shrb
pop
adc
cmp
mov
daa
in
loop
jbe
jo
jmp
cmp
in
jp
xchg
daa
outsb
push
pusha
in
in
cltd
cmp
cmp
ficompl
aam
dec
add
push
pop
xchg
lods
insb
jae
sbb
mov
fldcw
nop
push
mov
rclb
add
fsubs
or
push
pushf
adc
inc
je
call
shlb
lret
pop
lret
mov
jmp
fistps
push
mov
mov
sub
lods
adcl
sarl
push
test
scas
mov
sub
mov
test
pop
and
sbb
push
jle
mov
scas
mov
cmp
dec
stc
mov
icebp
sub
or
inc
mov
fwait
jg
mov
inc
jecxz
jne
jb
add
push
add
out
xchg
insb
into
cmp
outsl
mov
push
sub
xchg
mov
xchg
repz
adc
ss
cmpsb
sub
nop
jno
ljmp
cmpl
sbb
or
mov
jle
aam
mov
mov
rorl
push
insl
lock
lea
cmpsb
clc
mov
mov
rorl
xor
call
imul
in
cmp
arpl
shl
jae
ja
outsb
xchg
aaa
bnd
cltd
mov
setp
jle
or
xchg
push
and
data16
jno
adc
mov
sub
push
dec
jnp
loope
icebp
jb
aaa
pop
in
mov
add
pop
jmp
leave
inc
xchg
or
mulb
push
into
jl
xchg
lods
fldl
popa
jo
jne
jl
sub
fsts
test
insl
test
mov
adc
push
movsl
lahf
pop
icebp
popf
out
inc
add
or
sub
dec
push
test
mov
aam
jle
inc
mov
adc
push
inc
fstps
scas
aad
mov
mov
push
xchg
das
lock
sub
add
out
out
lea
xchg
shlb
dec
jo
adc
sbb
fwait
fs
cwtl
sti
insb
jge
loope
fsubr
mov
lahf
movsl
cld
roll
inc
movsb
aad
imul
ja
outsl
push
testl
mov
das
iret
add
pop
loope
cmp
sub
inc
jp
popl
popa
jmp
xchg
es
das
popa
nop
dec
mov
xchg
dec
mov
add
and
cmc
test
jbe
inc
push
inc
xor
mov
push
jmp
dec
inc
sub
int
stos
ret
inc
sbb
test
dec
enter
mov
xor
cs
mov
mov
dec
mov
ror
es
xlat
inc
out
or
repnz
ja
pop
sti
sarb
sub
adcl
cmc
sub
shl
sub
mov
pop
lahf
push
out
jl
sbb
insl
ds
sub
xchg
popf
mov
add
add
ret
rcrl
jle
mov
mov
shrb
push
cltd
lods
sbb
repz
mov
mov
icebp
jge
jmp
enter
loopne
mov
mov
into
idiv
xchg
xor
fidivs
shrl
mov
enter
mov
inc
ljmp
pushf
iret
arpl
es
mov
jle,pn
pop
dec
imul
mov
xchg
shll
aas
push
add
push
icebp
fwait
jge
loopne
push
fistps
mov
jmp
jne
mov
cmp
mov
cmp
xchg
ja
loop
int
lcall
sti
aas
ret
out
ret
adc
testb
out
sbb
rorb
test
xchg
mov
outsb
je
jbe
imul
jbe
mov
dec
mov
push
add
jmp
fucomi
sub
cmp
nop
iret
loope
adc
test
mov
inc
js
in
pop
repnz
mov
pushf
add
clc
xlat
ss
mov
int
test
icebp
adc
sti
pop
push
lock
cmp
fwait
out
pop
sub
and
repz
mov
or
clc
dec
dec
push
mov
in
pop
fucom
or
jo
inc
cmp
xor
dec
mov
sub
imul
jbe
jb
and
cwtl
cli
dec
pop
fadds
bound
test
add
rcrb
mov
mov
popa
cmp
add
in
pop
imul
in
in
lret
in
sbb
jnp
cmp
or
repz
dec
fidivl
shrb
adc
xor
nop
fidivl
xchg
int3
sbb
inc
loopne
xchg
shr
dec
mov
in
pop
pop
jae
es
stc
pop
inc
mov
negb
cli
int3
bound
das
inc
cmpsb
sahf
repnz
or
jmp
faddl
rol
fsubrl
ja
dec
sti
jmp
cwtl
in
mov
lods
sub
push
sahf
mov
aad
repnz
fdivrs
push
cmp
int3
mov
jle
es
aas
cli
test
cs
or
std
and
and
stos
jns
sub
mov
shrb
or
insb
cmpl
fbld
push
scas
in
cmovns
inc
push
jle
mov
push
pop
adc
dec
les
jmp
sub
out
xchg
call
xor
outsb
lods
mov
sbb
daa
fsubl
adc
push
pusha
test
inc
jge
inc
cmpsl
dec
stc
cmc
add
int3
clc
imul
mov
ss
xchg
jp
cmp
xlat
lock
icebp
stos
sbb
push
shlb
add
rorl
sahf
push
mov
movsl
pop
and
xor
pop
adc
scas
movsb
and
inc
push
mov
adc
push
shr
cmp
jbe
cmp
fsubrl
in
sub
and
push
fwait
call
test
mov
push
dec
test
stos
adc
in
scas
cmp
ljmp
inc
jle
mov
jmp
scas
sbb
daa
jne
mov
call
imul
scas
mov
sbb
hlt
stos
inc
adc
addr16
mov
xor
mov
into
addl
sbb
mov
jb
lock
lock
scas
dec
repnz
inc
call
sbb
xor
out
iret
mov
rorl
jle
xor
shlb
cmc
cmpsb
adc
ret
pop
out
icebp
lret
out
mov
inc
mov
mov
bound
popa
stos
out
fwait
repz
aaa
push
data16
lahf
or
loop
out
pop
adc
int
fwait
es
shr
loop
test
xchg
lods
fwait
and
xor
or
jae
adc
mov
loop
fdivr
imul
ds
mov
pop
xchg
pop
ljmp
pop
sbbb
pop
add
pop
fs
pop
cmc
add
adcl
test
inc
add
cli
adc
add
push
push
notb
and
mull
sbb
imul
mov
push
data16
add
dec
sahf
in
xor
inc
shlb
sub
adc
sbb
mov
adc
test
mov
aas
cmpb
dec
popa
mov
cmc
jmp
int
mov
or
out
pop
lret
cmp
dec
scas
mov
sti
add
jbe
stos
jle
mov
adc
cmp
mov
add
lea
pop
push
icebp
push
shlb
sahf
jmp
inc
pop
pusha
jne
in
xchg
stos
jl
mov
shrl
cld
push
popf
push
push
cmp
lods
cmpl
insb
sbb
inc
loope
fidivs
xor
jg
mov
xchg
dec
notl
addl
inc
ret
fstp
iret
repnz
inc
insl
mov
pusha
loope
in
mov
or
add
js
push
xlat
bound
adc
inc
cli
jg
mov
push
mov
sbb
testl
std
iret
shlb
add
xlat
fs
addr16
inc
mov
cmc
adcb
add
dec
sub
pop
dec
pop
cmp
xchg
xor
mov
pop
mov
imull
jb
cmp
mov
out
cmp
shlb
sbb
dec
jl
xchg
clc
jge
push
sbb
loop
fwait
dec
jg
xchg
or
xchg
aas
mov
adc
or
pop
daa
sti
mov
push
pop
jbe
inc
lea
nop
xor
jmp
mull
jle
inc
sti
sbb
mov
ret
stos
mov
dec
in
push
dec
cwtl
call
std
std
sti
sar
jbe
ja
std
fwait
outsl
adc
fstpt
adc
inc
mov
xchg
mov
or
das
xor
lods
mov
shll
test
mov
and
in
mov
sbb
cld
cmpsl
les
add
stc
mov
jns
es
pop
adc
jmp
cmp
cmc
int
sbb
adc
mov
lahf
or
sbb
pop
cmc
xchg
push
shr
sbb
mov
lret
outsl
adc
jmp
imul
push
adc
fs
push
ret
jle
xchg
rcl
stos
je
sub
and
nop
int
repnz
in
hlt
lods
mov
or
insb
leave
push
add
pop
cltd
arpl
in
fldenv
movsl
pop
mov
fcoml
loopne
sbbb
ficomps
or
add
adc
pop
les
scas
cmp
pusha
xchg
jns
add
hlt
and
lds
div
adc
sub
out
add
add
pusha
dec
fisubl
in
lods
mov
and
lock
test
xlat
fs
adc
pop
pop
cmp
stos
inc
xchg
jl
cmp
jb
imul
pop
popf
movsl
jns
push
add
push
movb
adc
sbb
sti
daa
stos
push
stc
cmpl
loope
cltd
lret
mov
stos
mov
les
or
cld
mov
jno
pop
loope
je
test
loope
jl
push
mov
or
jl
mov
fmulp
adc
std
and
sub
xchg
add
daa
lahf
add
mov
aad
jb
sbb
outsb
lret
sahf
cli
mov
ja
sbb
cmpsl
popf
inc
mov
xlat
loope
sub
mov
sub
xor
xchg
dec
into
jg
cwtl
dec
xchg
sub
out
andl
stos
movsb
pop
test
jne
lods
imul
ss
insl
in
mov
mov
inc
mov
mov
int
push
mov
push
test
out
movsl
imulb
test
fsubrs
or
cmp
mov
pop
movsb
outsl
cmpsl
mov
jo
ss
daa
pop
mov
pop
mov
rcrb
mov
fists
int3
je
sbb
mov
js
mov
icebp
push
jmp
icebp
inc
aad
scas
inc
jp
push
or
inc
pusha
mov
jae
call
adc
iret
cmp
xlat
or
mov
cs
addr16
push
sbb
cmp
pop
mov
mov
inc
xlat
sub
push
mov
pop
lahf
fidivrl
mov
dec
jp
subb
and
shll
sbb
test
aaa
pop
sub
adc
pop
out
mov
jno
add
test
mov
sti
popl
leave
int3
xchg
dec
int3
ficomps
push
outsb
loop
mov
cld
sub
push
js
ds
mov
jae
scas
aaa
out
repz
std
dec
xchg
mov
sbb
add
mov
or
incl
jl
out
pop
cmp
lcall
add
sub
sarl
xor
sbb
mov
mov
xchg
dec
sti
xchg
sbb
sahf
and
data16
xchg
mov
daa
outsb
adc
aas
and
mov
test
dec
test
xor
scas
sub
jns
ds
aas
and
sub
in
arpl
sbb
hlt
ljmp
xchg
data16
jne
mov
jecxz
sbb
ret
repnz
jle
sti
ljmp
lea
fdivl
sbb
dec
jnp
jbe
mov
repz
enter
filds
xchg
mov
leave
xor
jns
in
outsb
repnz
push
push
or
mov
imul
mov
jmp
in
xor
adc
shll
xchg
ds
aas
loope
or
push
insb
or
mov
inc
sbb
mov
arpl
xchg
in
inc
mov
push
negb
pop
xor
push
mov
icebp
loop
fisttpll
and
sub
pop
and
rclb
push
push
jae
lock
fsubrs
add
mov
mov
and
add
cmp
scas
in
imul
cli
es
test
and
sbb
jmp
ss
pop
frstor
jns
xor
cli
or
dec
and
mov
mov
mov
mov
inc
hlt
loop
out
outsl
mov
jnp
pop
roll
aad
mov
sub
xor
subps
fisttpl
mov
subb
std
jle
xlat
cmpsl
pop
mov
adc
sbb
push
mov
icebp
xor
sti
push
gs
pop
cmp
push
adcl
pop
repnz
mov
repnz
inc
outsb
and
sub
ret
mov
xbegin
add
je
sbbl
nop
mov
cmpsb
inc
sahf
outsl
lret
fnstenv
add
mov
mov
ljmp
fs
jge
jl
dec
testb
sub
and
jbe
mov
fimuls
xchg
lcall
leave
ficompl
es
mov
xor
sbbl
mov
js
hlt
push
loop
add
mov
das
cmp
mov
out
push
xchg
adc
das
stc
jbe
pop
idivb
test
push
and
pop
movsb
and
sbb
jle
mov
xchg
out
jns
stc
adc
mov
leave
mov
iret
je
clc
jle
sahf
in
pop
xchg
push
lock
icebp
mov
icebp
lea
leave
jae
cmc
jns
mov
xor
shll
jge
daa
movsb
xchg
aam
mov
cli
rol
mov
cmp
int
cmpsl
pushf
sti
push
icebp
test
mov
adc
sbb
xchg
in
ja
fidivs
adc
push
add
lock
cmpsb
test
nop
pusha
aam
jmp
daa
xchg
imul
test
and
enter
inc
xchg
push
inc
rorl
subb
sbb
cmp
sub
xor
inc
jecxz
incb
fcomi
and
divb
rcr
dec
dec
jo
xchg
sbb
xchg
add
xor
mov
pop
push
fstl
push
inc
xchg
lcall
ja
insb
lds
jno
jge
jp
pop
or
xchg
data16
out
cmpsl
jne
push
fsubrp
cmp
mov
sbb
arpl
lds
fdivrl
and
jecxz
or
iret
fsts
sbb
out
int3
pop
xor
bound
out
insb
movsb
push
rcll
add
push
jge
mov
push
xchg
out
fwait
es
fldt
adc
and
adc
adcb
sub
add
fmul
push
mov
insb
lret
out
xchg
fidivl
inc
dec
cmp
loopne
ss
repnz
adc
aam
pop
insl
arpl
fnstsw
pop
jecxz
arpl
pop
jno
pop
repnz
std
shlb
aad
nop
insb
call
inc
dec
outsb
push
test
cmp
aas
leave
xor
fidivrs
push
arpl
in
cli
xor
sub
xchg
aas
lds
js
xchg
loopne
icebp
mov
cmp
inc
lea
aam
dec
push
push
out
push
inc
jne
je
jbe
and
int3
test
fildll
int
data16
mov
dec
jmp
fwait
lret
or
aam
adc
cwtl
call
into
pop
repz
fldenv
adc
pop
pusha
clc
cmp
or
int3
push
fldcw
cmp
or
leave
iret
mov
scas
xchg
mov
loope
hlt
stc
out
pop
icebp
lahf
jnp
arpl
mov
aaa
sub
sub
jns
push
add
dec
push
adc
into
cmpb
ret
jne
push
mov
or
and
adc
out
ret
movsb
cmp
jne
test
push
mov
fstpt
dec
ja
sti
fcoms
mov
loop
sahf
and
das
sbb
mov
xor
adc
xchg
mov
lretw
in
mov
xchg
jo
xor
mov
shl
push
push
inc
je
int3
dec
jno
inc
pusha
xor
pop
mov
rorb
orb
cmp
push
sbb
adc
adcb
push
sub
push
movsl
decb
cmpb
inc
xchg
inc
mov
sbb
hlt
dec
movsl
add
es
fwait
pop
and
and
in
lea
add
push
lahf
jne
mov
pop
sub
jge
imul
or
mov
jmp
sbb
pushf
es
pop
scas
div
cmp
mov
idivb
aas
lahf
cmpsl
movsl
lods
inc
pop
leave
inc
jno
mov
inc
dec
outsl
cwtl
sub
mov
pop
mov
jge
push
and
sbb
dec
ss
add
dec
sbb
loop
mov
sub
or
ret
mov
dec
and
xchg
das
push
in
mov
push
jmp
jae
jb
sub
push
xchg
bound
jmp
std
cmpsl
pop
je
pop
sbb
insl
jno
movsl
jmp
lods
lds
dec
inc
mov
xchg
cmp
add
and
xor
dec
lds
jae
inc
lret
xchg
jbe
jmp
addr16
push
nop
mov
add
std
fsubrl
fs
aaa
cmp
dec
adc
xchg
dec
sub
push
fistpl
popa
cmp
mov
add
add
jle
mov
call
incl
out
paddw
cmp
bound
out
sub
insb
push
das
sbb
insb
leave
jp
inc
nop
cli
and
mov
out
sbb
loopne
cwtl
aam
subb
xor
pop
cmp
rol
xchg
std
mov
sub
repz
inc
sbb
repnz
test
inc
and
inc
mov
xchg
push
out
push
gs
arpl
fwait
and
pop
sbb
jmp
cmpsl
pop
lods
sub
sbb
adc
ret
movsb
rolb
pushf
jb
push
pop
unpckhps
shlb
mov
inc
push
ret
insb
cmpsl
xor
xlat
pop
imul
pusha
add
sub
mov
xchg
cwtl
aaa
shll
jle
inc
gs
enter
ljmp
mov
fists
icebp
inc
dec
repnz
ljmp
imul
imul
int3
test
iret
jbe
insl
int3
push
dec
pop
sub
mov
xchg
cld
repnz
fucomi
sbb
lret
gs
and
lods
or
mov
imul
scas
xchg
movb
pushf
cmp
mov
xorb
pop
push
pop
fisubs
jno
add
dec
in
cld
inc
sbb
loop
mov
mov
ljmp
in
add
in
fsubrs
xchg
out
push
sbb
cmpsb
mov
xchg
pop
push
fs
shl
mov
xchg
xor
das
sub
sar
outsl
xchg
andb
hlt
or
mov
cmc
xchg
das
popa
mov
mov
mov
addl
bound
sub
daa
iret
jl
cmp
and
mov
repnz
loop
xor
push
je
pop
addb
dec
sbb
inc
xchg
jno
jo
xchg
sbb
cmp
mov
out
xchg
and
jle
iret
xchg
push
xchg
fyl2x
mov
dec
inc
push
pushf
les
and
aad
leave
sbb
cmp
fs
repnz
push
xchg
mov
sub
push
out
pushf
repz
clc
fsubrl
jno
repz
aad
mov
xor
jg
pop
xchg
les
mov
int
push
mov
les
mov
push
popa
mov
fistl
test
and
in
testl
ljmp
inc
sti
and
loop
xor
stos
inc
mov
enter
test
mov
cld
xchg
push
add
inc
cmp
adc
lods
pop
cli
hlt
mov
mov
jp
daa
idivl
mov
jae
inc
mov
add
xchg
xor
mov
je
sub
sbb
adc
mov
xor
lcall
stos
sbb
cmpsb
repnz
xor
je
jne
jle
fs
in
cmpsb
adc
lds
mov
bound
pushf
jnp
push
dec
mov
bound
mov
stc
xor
arpl
and
in
jecxz
sub
out
and
stos
jnp
sbb
stc
or
aas
leave
inc
outsl
push
lret
ljmp
jns
cmpb
leave
adc
pop
insb
inc
int
dec
add
mov
jle
add
in
inc
enter
xchg
rcrb
call
lret
jb
testb
adc
mov
mov
addb
lods
mov
push
loop
dec
xor
jg
mov
pop
dec
pop
fs
popa
mov
or
stos
outsb
mov
loop
mov
xor
dec
imul
insb
sub
mov
loope
jmp
test
inc
test
mov
add
andl
cld
xor
popa
lret
xchg
and
xchg
das
jge
xchg
xor
or
out
out
andl
push
jb
test
push
mov
lret
sub
or
sbb
push
into
push
jns
nop
adc
imul
aas
shrl
push
inc
xor
add
shlb
xchg
push
add
mov
mov
fnstcw
orb
fbld
cmp
arpl
lock
in
cs
popa
or
repz
test
test
inc
popl
cltd
mov
int3
imul
loopne
cld
push
push
pop
mov
das
sahf
cli
sbb
fstl
xchg
push
insl
or
adc
dec
adc
scas
xlat
ret
je
sub
mov
jmp
jle
out
sbb
gs
jle
cmovl
xchg
in
imul
out
test
mov
in
mov
lcall
jne
pop
jne
jmp
mulb
loopne
ficomps
aas
cs
inc
add
jp
xchg
push
sbb
jbe
adcb
sub
repnz
lods
movsb
mov
jno
sarl
ror
pop
ficompl
fcom
xchg
mov
inc
in
add
cmpsb
ljmp
sub
cmpl
cmc
insb
out
test
push
aaa
cmp
adc
inc
insb
outsb
add
test
loope
nop
sub
outsb
sahf
cmp
popf
xor
xor
fisubl
mov
mov
aas
addr16
xor
xor
fwait
mov
in
testl
shl
push
mov
adc
adc
or
or
std
clc
movsl
cmpsb
mov
out
pusha
testb
and
insb
lret
iret
cwtl
je
arpl
lea
sbb
jl
push
xchg
outsl
adc
dec
in
push
jmp
inc
arpl
dec
inc
ret
int3
inc
push
jbe
int
cwtl
jnp
inc
pop
xchg
stos
cmc
aaa
mov
inc
fstps
insl
shll
lahf
cmp
pusha
pushf
fxch
jns
pop
bound
mul
rol
xchg
jmp
add
inc
in
sbb
push
jmp
inc
or
mov
mov
mov
xchg
xor
test
push
mov
and
test
repnz
sbb
xor
cld
je
jne
fstpl
testl
jno
mov
in
sbbl
pushf
lods
in
xlat
push
in
test
popf
mov
cmp
out
enter
pushf
push
sbb
push
xor
mov
test
mov
adc
sarb
pop
mov
imul
xor
call
aam
jae
and
xchg
outsb
mov
push
fstps
rcll
dec
nop
in
xor
mov
lcall
jnp
dec
je
lahf
jmp
lock
or
test
outsb
loopne
jnp
imul
test
inc
aas
loopne
stos
lock
dec
push
repnz
xchg
xchg
loop
adc
aad
xlat
sub
mov
pop
inc
rorb
outsl
mov
out
adc
cmpsb
cltd
and
push
ret
mov
lock
and
fcoms
lret
push
daa
inc
add
mov
mov
sub
jae
push
inc
int
scas
cmp
jg
adc
movsl
stos
dec
cld
outsb
add
dec
xor
xchg
jle
lods
xlat
add
sub
rorb
xorb
lods
mov
jae
dec
inc
xchg
in
push
mov
lcall
bound
push
jl
or
xchg
mov
cmp
fldl
lcall
repz
sbb
mov
sahf
ret
xchg
add
test
push
cmpsl
cmp
mov
lahf
cli
jbe
and
sbb
adc
inc
ds
fcoms
incb
add
sbb
push
mov
or
lods
fisubl
mov
add
push
inc
movsl
hlt
mov
iret
cmp
loope
mov
test
add
dec
lods
int
adc
jns
out
movsb
lods
iret
movsl
or
pushf
dec
pop
xchg
mov
xchg
mov
fadd
lret
push
and
xchg
cmp
pop
gs
test
adc
roll
sbb
lods
sbb
pop
fiaddl
lds
ljmp
jns
ljmp
mov
xchg
movsl
sbbb
fnsave
xchg
test
inc
fildll
or
out
in
xchg
sub
push
stos
std
and
mov
dec
roll
int
test
pop
imul
push
jmp
mov
xchg
push
pusha
jle
icebp
shll
frstor
pusha
dec
sbb
idivb
pop
lret
test
movsl
sbb
orl
clc
test
ret
lahf
push
mov
mov
pushf
sub
int3
in
pop
imul
lahf
lock
xor
sub
fmull
or
daa
ds
sti
xor
test
or
push
test
dec
and
mov
lret
in
mov
ljmp
mov
xchg
jl
insl
mov
sbb
push
pop
enter
data16
cmp
mov
or
pop
les
add
dec
sti
mov
ds
lea
jl
and
daa
jge
mov
mov
sbb
mov
arpl
mov
xchg
and
sub
cmp
popa
or
push
push
cmovb
mov
pop
ret
test
mov
pop
push
push
lods
push
jae
adc
scas
dec
mov
outsb
cmpsb
mov
cld
cs
cs
push
jnp
aam
mov
push
in
xor
jb
xchg
push
add
movb
aaa
sub
movsb
sub
cmp
ljmp
push
outsb
jno
add
adc
into
cwtl
and
stc
adc
jmp
jmp
xchg
sti
cwtl
stos
lret
in
lahf
aaa
sbb
arpl
sbb
sahf
in
mov
pop
sti
mov
xor
push
in
push
cltd
rcrb
xor
mov
jns
icebp
push
daa
inc
mov
push
fstl
inc
mov
push
rcpps
nop
mov
cs
cli
pushf
inc
cmp
or
push
mov
sarb
pop
mov
sub
mov
lahf
cmp
aad
mov
imul
sub
lock
or
ret
sbb
ret
icebp
mov
cli
inc
aaa
adc
lods
mov
push
jo
jns
cwtl
stos
mov
push
dec
dec
jno
mov
push
mov
and
pop
dec
mov
mov
lods
xchg
lods
lea
out
sub
inc
js
xor
and
jecxz
loopne
jmp
mov
mov
sbb
fs
out
popa
sti
pop
js
sub
xor
pop
mov
lahf
leave
mov
mov
sbb
adc
dec
scas
add
pop
mov
inc
dec
inc
lods
loopne
pop
and
push
pop
mov
pop
das
jmp
or
pop
push
cmpsl
andl
negl
push
test
insl
push
mov
mov
loope
mov
adc
jle
xchg
or
adc
daa
aad
adc
call
push
sub
outsl
mov
xor
outsb
lcall
fstps
daa
pop
cld
xor
mov
mov
mov
cmpb
dec
lahf
and
adc
outsb
and
in
jb
inc
xchg
test
mov
and
lods
dec
movntps
inc
sbb
shrl
cmp
xor
mov
scas
jp
lea
ljmp
sbb
repz
ljmp
loopne
push
adc
push
xchg
mov
call
mov
stc
xchg
in
mov
xchg
out
xor
out
pusha
dec
inc
addb
add
fwait
mov
and
adc
mov
xchg
data16
stc
cmp
int3
push
lods
loopnew
stos
or
popf
sbb
xor
leave
dec
mov
test
mov
mov
pop
cli
cmp
mov
ja
sbb
stos
and
lret
hlt
and
inc
dec
hlt
xchg
icebp
fs
xchg
repz
push
fiaddl
cmpl
outsl
in
jne
cmp
xchg
movsb
cld
out
cmpsb
or
mov
add
mov
fwait
pushf
popf
lods
arpl
out
and
dec
mov
pop
nop
mov
mov
arpl
push
pop
sub
repz
adc
insl
xchg
psrlq
xlat
rcll
stc
popa
repz
icebp
sbb
sub
leave
or
jecxz
ss
inc
cmp
outsb
repnz
daa
mov
aas
lret
and
int
dec
adc
or
jae
inc
xchg
push
rol
pop
ret
sbb
in
lods
and
sbb
imul
stos
sarb
cmp
scas
inc
add
sbb
mov
loope
cltd
jge
sub
clc
icebp
cs
mov
xchg
push
bound
pop
fwait
pop
mov
ret
mov
int
push
pop
jbe
jo
mov
pop
cmp
insl
dec
cmc
data16
mov
mov
stos
push
fcoms
out
icebp
inc
lcall
jge
es
inc
inc
test
ljmp
mov
push
sub
inc
dec
dec
ljmp
and
and
das
hlt
fcmovnbe
inc
cmp
es
jge
dec
outsl
mov
xchg
rorl
mov
adc
lds
pushf
push
xchg
jbe
js
cmp
add
add
sbb
xor
or
lahf
mov
es
enter
fstl
shlb
popf
or
aaa
sbb
jnp
loop
sarl
push
in
and
push
xorb
test
or
mov
push
adc
cmp
jno
mov
cmp
dec
adc
out
xlat
mov
xor
je
dec
or
movsb
cmp
pop
push
mov
arpl
cmp
call
ret
mov
je
dec
rolb
shl
xadd
mov
cld
mov
lock
adc
jne
subb
pop
lds
js
daa
push
ret
outsb
jnp
push
mov
stos
dec
cmpsl
adc
xlat
push
addr16
cmpsl
cmc
inc
sti
push
fidivrs
outsb
gs
in
fidivrl
sub
in
dec
leave
push
mov
inc
pop
push
mov
mov
push
sahf
xor
std
scas
bnd
push
inc
push
nop
pusha
shlb
mov
mov
aaa
sbb
sbb
mov
out
testl
sbb
adc
xor
or
add
adc
mov
push
rcll
insb
push
sahf
sti
add
jbe
adc
xchg
mov
cmp
lock
cmpsl
outsl
dec
mov
in
aas
adc
and
pop
pop
mov
xchg
movsl
pop
xchg
add
ljmp
xchg
in
mov
cli
lods
es
fnstcw
cmpsb
push
or
outsb
mov
loop
sete
arpl
mov
repnz
mov
aaa
cmpsb
jp
push
sti
inc
inc
cmp
pop
ss
push
std
rorl
lods
test
sub
mov
xor
loop
lret
add
in
pushf
add
adc
ud1
push
std
daa
stos
push
sbb
cmp
pop
rolb
cli
mov
aad
cmp
scas
xor
push
push
rcll
insl
out
sbb
cmp
mov
push
inc
mov
stos
mov
lods
loopne
fs
jmp
fsubs
push
push
test
js
lea
shrl
insb
pop
in
cmp
and
mov
mov
and
arpl
insb
stc
arpl
pusha
call
dec
sub
inc
mov
dec
shrb
add
divl
out
pop
ljmp
sbb
pop
push
add
xchg
mov
out
cwtl
mov
leave
mov
xchg
xchg
pop
mov
inc
xor
cs
dec
xchg
xor
in
push
pusha
icebp
ja
cmp
test
repz
bound
sbb
inc
outsl
add
rcrb
adc
mov
cmp
cmpsl
xchg
cmp
dec
loop
imul
mov
divl
mov
fwait
sbb
inc
add
pop
dec
sub
sub
xor
and
fs
shlb
cmc
jp
out
into
pop
imul
je
jg
std
icebp
push
fcoml
dec
das
mov
imul
stc
outsb
inc
test
sub
cmp
and
jmp
adc
or
lahf
cmp
pop
inc
or
jbe
mov
add
jp
arpl
outsb
std
and
das
dec
in
loope
sub
xchg
adc
aam
fmull
movsb
xchg
repz
icebp
and
bound
ljmp
jnp
add
jmp
push
xchg
mul
add
jbe
cmc
or
pop
int3
sahf
cld
rcr
icebp
sar
jo
lcall
xor
loop
out
or
rorb
out
xlat
dec
lahf
adc
loope
lock
jb
sub
adc
cs
sub
jnp
mov
daa
aam
incl
dec
mov
clc
mov
incb
jg
rcrl
test
push
xchg
and
push
out
push
ljmp
dec
insb
xor
dec
js
adc
sbb
mov
nop
mov
mov
xchg
push
lods
dec
sbb
push
jmp
call
push
divb
insl
mov
fcompl
pop
sti
std
testb
mov
js
sbb
mov
lahf
push
mov
ret
pop
pop
jge
and
mov
insl
mov
aam
jl
cli
cmp
icebp
test
aad
jb
lods
icebp
es
pop
stos
pusha
pop
dec
xor
inc
lahf
jecxz
fcoml
xor
ficoml
cltd
pop
pusha
mov
sbb
adc
stos
pop
jp
pop
shl
inc
and
inc
rorb
out
out
shl
sti
adc
push
inc
inc
out
incb
lcall
std
and
sbbb
push
xor
cwtl
xchg
mov
ret
imul
jg
xchg
lods
inc
jno
and
mov
lods
xor
nop
mov
ja
lcall
ror
or
or
sbb
dec
lods
or
jecxz
push
mov
add
imul
inc
mov
or
cmpsb
push
pop
repnz
repnz
or
mov
jl
imul
jecxz
lret
stos
in
jle
data16
pop
pop
push
dec
dec
dec
xchg
repnz
shr
cmp
in
lock
or
adc
test
cmp
sti
lods
cmpsl
push
int3
mov
std
iret
ja
mov
paddw
or
int3
jecxz
mov
das
addl
sbb
xchg
pop
xchg
fsubl
mov
xchg
hlt
xchg
xchg
in
int3
clc
popa
insl
scas
push
xor
jmp
cmp
jns
push
jnp
addb
mov
xchg
pop
call
and
std
notb
xchg
lcall
mov
mov
mov
adc
out
ret
xchg
jb
das
cmpsl
sbb
jno
and
mov
jne
fs
cmp
out
lcall
xchg
jmp
lods
jbe
mov
or
in
sub
fwait
andl
testb
lock
push
push
sub
popa
out
sub
xor
push
loopne
xchg
xchg
pop
mov
push
jg
jle
iret
mov
roll
push
rorb
cmp
hlt
cwtl
and
fcoms
push
imul
lret
xchg
mov
xchg
lods
or
bound
dec
fisubs
jl
lret
push
jecxz
dec
iret
faddp
inc
cmp
setg
iret
cmc
inc
loop
pop
scas
sub
add
and
mov
lods
dec
ret
hlt
or
jbe
mov
test
int
inc
nop
mov
jl
popf
cmpsb
movsb
icebp
pop
mov
mov
jns
pop
aaa
outsl
sbb
cmpsl
shlb
cwtl
adc
mov
lock
lret
stos
pushl
icebp
xchg
push
sti
stc
inc
sub
addl
mov
aaa
xor
mov
aas
mov
in
xchg
dec
fisttpll
movsb
jp
int
mov
inc
cmc
cmpl
cmp
stc
stos
jmp
sub
push
xchg
push
sbb
push
pop
sbb
adc
ss
adc
aaa
into
fbld
subb
dec
jp
shr
repnz
jne
nop
push
lock
jns
jns
mov
cmpsb
xchg
ret
push
je
cmp
push
mov
add
in
adc
div
stos
jecxz
fstpl
fmul
test
mov
mov
sub
call
mov
fbld
dec
jae
ficoms
push
pop
scas
popf
lahf
pop
sahf
mov
lret
cmpsl
mov
push
inc
push
jae
lock
test
dec
jg
mov
jle
gs
dec
fbld
divl
in
xor
cmp
jecxz
arpl
jmp
add
vminpd
lahf
repz
push
or
xor
jb
orl
fiaddl
jb
das
fsubl
mov
insb
push
inc
add
lret
data16
xchg
or
scas
sub
sub
incb
inc
adc
and
iret
add
aaa
in
and
repz
mov
fdivs
push
ds
jg
mov
roll
or
push
and
out
adc
or
sarb
mov
mov
xchg
outsl
add
sbb
scas
mov
dec
xor
push
sbb
mov
xchg
std
push
pop
xchg
jecxz
addr16
aas
add
fcmovb
xchg
aaa
jne
jbe
lds
xor
inc
sti
pop
mov
jae
loope
dec
mov
cli
out
dec
movsb
rcll
mov
jecxz
hlt
jo
sub
sbb
inc
jg
push
fwait
xor
jnp
add
movzwl
or
insb
or
push
fisubl
cs
loope
mov
std
or
repnz
xchg
and
insl
and
push
inc
cwtl
xchg
mov
cmpsl
push
inc
cmp
jno
or
pop
xchg
inc
cld
cmp
push
and
cmp
lcall
jmp
fwait
stos
shlb
add
lret
negl
mov
roll
push
xchg
adc
pop
sbb
xchg
or
arpl
in
inc
cmpsb
and
outsl
outsl
sub
addr16
negl
hlt
sahf
mov
jb
ja
sub
leave
cmp
scas
cmp
int
lret
js
and
dec
or
pop
dec
cmp
add
mov
jg
loope
push
adc
subb
fdiv
adc
jge
xchg
fidivrs
adc
dec
push
xchg
cli
divl
cmp
mov
daa
in
cmp
adc
mov
negb
ds
daa
aam
jnp
pop
insb
repz
xor
sbb
mov
insl
push
insb
call
pop
mov
repz
lcall
imull
aaa
pop
pop
ret
dec
repz
dec
xchg
fistpll
imul
repz
xor
cmp
test
xor
daa
push
arpl
add
aam
jnp
rcll
test
repnz
dec
js
fdivs
push
testl
pop
incl
test
cs
sub
pop
xchg
mov
popf
sbb
sub
ret
les
fcmovbe
rcll
das
xchg
call
les
inc
ret
outsb
adc
dec
push
jo
mov
ljmp
rcrl
xchg
sub
fsubr
not
pop
iret
out
test
cld
ret
sbb
cmp
add
test
jl
dec
sarl
add
stos
lahf
xchg
jecxz
add
shrb
sbb
cmpsl
mov
frndint
fwait
mov
daa
nop
test
jae
mov
out
ror
into
jecxz
pop
xchg
push
push
roll
addr16
pop
cwtl
in
dec
jne
push
rcr
hlt
sub
xchg
dec
pop
fadd
xchg
cwtl
fsubl
adc
xchg
nop
pop
mov
jmp
out
jecxz
jle
ss
or
sbb
cmp
jge
aas
mov
push
xor
push
jge
mov
xor
nop
scas
jge
test
divb
pop
imul
mov
leave
lahf
mov
add
cmp
fidivrs
cmc
data16
dec
xchg
push
arpl
out
out
cvttps2pi
fwait
xchg
inc
dec
insl
inc
out
cmp
pop
gs
mov
add
ljmp
jmp
aad
add
mov
lret
enter
xchg
sub
mov
andl
out
adc
jmp
out
hlt
jp
sbb
and
into
test
shr
idivb
stos
addr16
rorl
movsl
mov
stos
dec
js
out
aad
xor
in
adc
add
mov
imul
xchg
scas
or
sub
push
add
cli
loope
cmp
aas
aaa
and
lock
gs
std
pop
or
movl
adc
sbb
test
pop
in
ljmp
sub
fwait
push
shlb
add
adc
sahf
or
jne
sub
shrb
and
gs
lcall
jl
or
xchg
inc
je
out
jne
icebp
pop
xchg
arpl
jne
hlt
mov
subb
adc
or
push
movsl
or
sub
scas
aas
cmpsb
sbb
popa
xor
pushf
mov
sbb
fcoml
out
jg
jns
scas
mov
adc
ljmp
add
pusha
inc
xchg
add
lods
enter
pop
jo
cld
cwtl
xchg
jne
mov
fildl
outsb
sub
fs
in
sbb
movsl
push
pusha
fwait
sub
mov
cmc
xchg
pop
sbb
mov
mov
lock
and
stc
jae
daa
cmc
int
stos
inc
or
stos
mov
sbbl
mov
stos
xchg
jns
sub
aad
lret
xor
lea
xchg
xchg
cmp
ficompl
mov
insl
dec
clc
std
ss
out
les
loop
cmc
mov
aad
and
fs
les
mov
jmp
test
icebp
movsl
adc
push
imul
cmp
push
pusha
ret
add
dec
cmc
cmp
sbb
sbb
aad
jge
icebp
cmp
sbb
push
pop
mov
arpl
popa
sub
mov
mov
sub
in
mov
add
mov
inc
xor
jl
push
lret
hlt
jge
dec
es
mov
add
lock
popa
mov
jo
or
mov
popa
push
dec
scas
repz
scas
and
xor
mov
loope
mov
mov
mov
aas
ds
dec
sbb
ds
dec
cmp
stos
test
in
rol
je
sbb
lock
xor
adc
xor
or
jge
mov
mov
dec
mov
push
xor
out
add
or
iret
xorb
mov
pusha
and
jbe
lret
push
fldcw
xor
jl
and
div
jl
dec
rcll
and
sub
mov
jne
and
inc
pop
mov
addl
pop
jp
scas
sub
xor
leave
pushf
subb
dec
adc
fstps
pop
jp
subb
int
dec
das
push
stos
test
sbb
xchg
loopne
fldcw
jne
jmp
jne
adc
cmpsl
into
or
jns
sub
scas
jnp
mov
lcall
xchg
xchg
cld
cs
or
iret
adc
std
sarb
jb
scas
mov
lds
scas
fsubl
ficoms
in
jnp
addr16
add
cmpsl
pop
aas
icebp
insl
dec
repnz
pusha
and
mov
imul
and
pop
jg
hlt
jae
sub
fs
and
repnz
xchg
arpl
lret
jmp
rolb
mov
inc
xchg
dec
add
sbb
jg
icebp
adc
adc
pop
hlt
inc
cmpsl
aad
in
rcrl
in
js
mov
sar
lods
push
sahf
fcmovbe
push
sarb
jmp
pop
adcb
xor
or
jge
jbe
push
inc
test
je
dec
cmp
mov
jecxz
or
mov
loope
stos
mov
or
push
pop
and
adc
js
push
aas
ljmp
aam
adc
inc
aad
jle
add
or
jo
xor
ja
fisubrs
imul
push
fwait
jle
mov
adc
sbb
shll
aaa
int3
or
aad
add
iret
clc
cmp
adc
inc
and
xchg
cmc
mov
call
ror
push
pop
call
adc
cmp
jl,pt
aaa
jg
scas
fcom
call
ss
cmp
push
push
bound
aas
push
jbe
aad
mov
outsl
pushf
dec
dec
xor
mov
mov
dec
inc
mov
adc
jnp
fwait
ret
inc
dec
hlt
gs
mov
jne
jge
dec
mov
push
or
jno
adc
push
sub
pop
jns
xchg
mov
movsb
pushf
jecxz
and
mov
jno
sti
xor
jno
stos
cwtl
adc
adc
rcrl
hlt
pop
ja
mov
dec
arpl
insb
sbb
inc
sub
roll
sbb
mov
adc
fnsave
sub
xchg
shl
lods
jb
sbb
dec
ljmp
add
rep
xchg
sbb
cs
pop
adc
add
push
fisttpl
add
or
loop
xorl
xchg
add
mov
sub
sbb
dec
hlt
int
cmp
fsubr
pop
js
scas
mov
jg
xchg
out
jp
loop
cltd
sbb
test
fwait
movl
jle
std
add
jae
xor
out
jecxz
loopne
shlb
jns
mov
fld
mov
cmpsl
hlt
lahf
icebp
pop
push
fs
sub
jns
cmpl
push
daa
jo
arpl
sbb
cwtl
lds
je
mov
add
xlat
or
popf
push
pop
jmp
dec
repnz
sahf
lret
mov
adc
into
cmpb
lahf
loop
jne
iret
mov
fs
cmp
pop
push
cld
mov
dec
ss
push
mov
pop
cmp
data16
nop
mov
je
adc
adc
inc
mov
setle
sti
dec
lcall
and
inc
adcl
mov
adc
aas
fcom
jb
inc
and
inc
scas
jecxz
inc
test
outsb
add
push
movsb
outsb
push
ret
aaa
adc
fstpt
shlb
outsb
leave
rolb
jo
mov
js
inc
mov
pop
rcr
dec
jno
fisubrl
cltd
repz
imul
imul
movsb
mov
arpl
int3
das
inc
lret
inc
jbe
and
push
int
mov
inc
pop
fs
stos
scas
jecxz
dec
add
loop
add
cld
out
mov
loop
outsl
repz
and
out
dec
pop
lcall
clc
test
loopne
xchg
mov
inc
pop
mov
es
jno
add
pusha
mov
push
dec
or
mov
adc
pushf
in
cmp
jecxz
inc
sbb
popa
stos
cmpsb
mov
lods
insb
sbb
add
adc
pop
stos
imul
pop
jl
clc
and
push
inc
in
push
out
int
add
inc
push
insb
es
jl,pt
mov
mov
mov
cmp
mov
das
sbb
cmpl
push
sbb
pushf
cmp
sbb
add
cmp
test
imul
and
or
repnz
add
lods
shl
iret
test
cld
mov
repz
xor
cmc
shl
daa
iret
pop
daa
dec
inc
std
mov
sbb
sbb
loope
ficompl
mov
mov
xor
cmp
mov
or
iret
pop
and
mov
and
mov
ljmp
or
popa
ljmp
and
repnz
inc
fistl
jge
imul
arpl
add
dec
shlb
cmp
xlat
jecxz
cmpsb
cmpsl
inc
mulb
call
dec
jbe
ljmp
nop
adc
jne
inc
inc
mov
add
jg
movsb
mov
pop
inc
sahf
lahf
xchg
sbb
stos
sbb
loopne
adc
push
xor
xchg
pop
inc
sbb
push
xlat
stos
cmp
aad
popa
sub
cmp
add
mov
cwtl
mov
mov
loope
repnz
jl
movsb
jne
sbb
xchg
pop
adc
xor
sub
sub
hlt
mov
adc
jg
jp
sub
es
add
fdivrs
add
aam
shlb
call
cmc
arpl
add
lods
mov
xchg
mov
inc
mov
jg
cld
mov
imul
loope
mov
mov
imul
jl
adc
jle
pop
ljmp
js
pop
daa
sbb
push
rclb
mov
jnp
fcomip
lcall
sub
lret
daa
out
pop
lret
or
fs
sti
iret
xor
and
arpl
lods
adc
daa
jle
jl
fstp
cld
push
cltd
inc
ljmp
test
inc
xchg
pusha
pop
mov
sub
mov
sti
mov
inc
fnstsw
fsts
movsl
jecxz
int3
xchg
ljmp
scas
fstp
es
fsubr
outsl
loopne
cmp
and
icebp
les
call
add
or
insb
fmuls
clc
mov
and
scas
imull
jg
loopne
inc
cmp
aad
sbb
add
sub
in
sarb
roll
and
dec
jae
aam
add
inc
push
daa
sahf
mov
lcall
ret
test
and
ljmp
in
and
jecxz
scas
test
stc
jne
xchg
pop
and
or
mulb
cli
inc
push
aaa
mov
daa
subb
lds
mov
orl
mov
in
xor
and
pop
lds
out
or
movsl
into
ja
cmpsl
sbb
sub
loopne
daa
or
ret
lret
pop
jb
call
or
mov
push
mov
addb
lahf
sti
push
ljmp
xor
iret
cld
sub
xor
mov
lea
test
icebp
adc
arpl
mov
shlb
in
mov
call
mov
mov
add
clc
dec
pushf
xlat
fisubrl
adcb
add
inc
xor
push
test
pop
inc
shlb
data16
inc
inc
in
stos
insl
adc
roll
sarl
lret
pop
cmp
sbb
aad
mov
pop
fcomi
lock
pop
aam
leave
jge
pop
and
shlb
lcall
pop
add
test
in
cmp
cmpsl
mov
cld
test
fs
xchg
insl
lods
inc
cmp
mov
sbbb
xchg
bound
add
adc
lahf
pushf
pop
aaa
and
xchg
in
jmp
addl
xchg
aaa
les
cmp
dec
mov
lods
into
sub
outsl
in
ret
std
inc
int
push
pop
cmp
js
sbb
jge
fisubrs
bound
push
xchg
mov
adc
pop
std
pop
in
mov
adc
mov
popa
and
dec
sbb
or
lret
xchg
adc
jl
les
mov
mov
push
repz
jbe
enter
xchg
push
lahf
mov
push
ret
cmp
dec
jg
inc
pop
push
addb
xchg
or
loope
sub
shlb
xchg
or
fldenv
mov
aad
popf
mov
pop
shlb
xchg
xor
push
pop
sub
test
xchg
xor
sbb
and
inc
lret
mov
sti
adcl
in
and
movsb
push
mov
ja
jge
orb
loop
jecxz
xchg
dec
cmpsl
lock
imul
in
fstl
repz
mov
cmp
ds
ljmp
mov
and
jbe
add
jns
add
std
pop
pop
sbb
mov
adc
sub
adc
pop
push
rcll
pusha
sbb
xchg
addr16
push
dec
insl
xor
inc
jae
js
enter
jmp
test
int3
push
mov
mov
mov
add
dec
sahf
jmp
cmp
inc
push
repnz
fildl
pop
sahf
push
add
stos
xor
outsb
test
or
pop
inc
rcr
mov
mov
mov
cmpsl
into
imulb
and
fildl
bound
bound
inc
imul
or
xchg
add
stos
idivb
dec
addr16
fisubrs
call
xor
gs
in
pushw
pop
out
inc
bnd
pop
xlat
rdtsc
das
scas
test
jne
or
lock
call
jno
push
xlat
pusha
xchg
fildll
fwait
mov
add
roll
leave
mov
rorl
subl
jns
adc
xor
fwait
push
mov
in
fstpt
cltd
jl
mov
frstor
adc
cmpsb
mov
and
push
xor
hlt
or
fbld
mov
lea
sbb
imul
push
sbb
in
mov
frstor
and
jnp
inc
aas
add
xor
and
push
outsb
mov
sbb
imul
or
lret
je
fsubl
ret
dec
sbb
sbb
clc
pop
mov
movl
pop
adcl
jns
xchg
sarl
xchg
pop
arpl
inc
mov
mov
ficomps
jo
lods
cld
cmp
cltd
fs
add
sub
out
inc
out
mov
jl
dec
cld
in
pushf
mov
pop
mov
imul
sahf
dec
pop
cld
push
and
out
daa
xor
xor
push
into
lret
push
icebp
or
imul
or
jle
adc
int
pushf
pusha
cltd
mov
or
dec
and
pusha
push
out
outsl
mov
pop
pop
mov
data16
out
xchg
insb
ret
add
scas
mov
jae
adc
inc
pop
xchg
inc
pop
mov
sarl
je
pop
es
or
pop
dec
fistpll
lods
mov
popa
or
arpl
mov
nop
add
adc
std
push
mov
sbb
mov
dec
test
lods
hlt
adc
push
addr16
popf
fcomi
rorl
outsb
cld
int
pop
mov
notl
sarl
test
aad
sbb
cmp
jp
inc
leave
gs
jb
sub
ja
addr16
imul
mov
enter
add
test
xor
insl
movsl
sbb
leave
push
pop
lods
inc
sbb
lahf
fisttpll
mov
testb
shll
and
ja
mov
mov
push
je
mov
scas
int3
inc
cmp
xchg
pop
out
fbstp
mov
jb
jle
xchg
jle
div
or
mov
mov
pop
std
imul
or
ficoml
mov
call
pop
add
ret
push
loope
jne
fstl
pop
cmp
pop
sti
jb
pop
into
pusha
mov
loop
mov
push
xchg
insl
jnp
repz
add
inc
imul
cmp
or
inc
mov
lods
xor
or
xor
aas
push
pop
push
push
add
xchg
cld
sbb
or
std
xor
cmp
pop
andl
jb
fldl
jnp
movl
fmulp
nop
push
es
push
and
sbb
movsb
test
imul
fnsave
rorb
mov
sbb
andl
test
or
pusha
push
or
insl
xchg
clc
lret
fsubrs
fidivl
das
and
sbb
fldcw
aam
out
outsb
sti
movsb
inc
je
sbb
xor
jmp
xchg
adc
clc
push
or
push
and
iret
inc
jb
inc
in
inc
adc
std
adc
cmp
sbb
mov
movsl
icebp
cmp
push
mov
out
cmc
sub
ror
mov
push
push
aad
pop
push
cmpsl
sbb
xchg
ljmp
fcomps
ret
inc
test
mov
mov
lods
xor
aas
stc
sub
sahf
outsb
arpl
stc
xor
add
fs
inc
repz
sbb
mov
lock
sbb
cmp
fbld
sub
mov
push
pop
dec
mov
cmp
rcll
push
je
mov
or
lds
rcll
pop
mov
push
cmp
add
pop
add
mov
cmp
dec
or
mov
mov
insl
incb
pop
je
mov
xchg
push
push
lods
std
lods
inc
ror
shll
pushf
xchg
dec
and
hlt
or
jecxz
mull
int3
fistpl
dec
leave
xlat
mov
mov
shlb
or
pop
out
cmp
xor
into
nop
mov
mov
cmpsb
xchg
cwtl
in
outsl
and
pop
xchg
jne
pushf
jae
loopne
push
sbb
mov
push
lahf
or
mov
cmp
loopne
cmpsb
out
test
xchg
rcrl
bnd
inc
test
mov
leave
stc
icebp
sub
clc
xchg
or
sub
or
arpl
pop
or
fidivrl
push
stos
jb
in
mov
sub
outsl
cmp
orl
xor
decb
adc
sarl
inc
mov
out
adc
subl
lods
xchg
data16
xor
js
out
mov
data16
fsubrs
jmp
daa
cmp
cmp
jno
sbb
adc
jmp
add
or
sahf
add
adc
data16
inc
out
scas
mov
jge
jno
sbb
cmpsb
sub
or
lcall
cmpsb
xchg
xlat
sub
into
mov
ja
popf
xor
and
frstor
jno
inc
inc
cmc
pop
dec
dec
xchg
mov
xor
pop
out
insl
mov
je
jle
decl
out
cmpb
dec
mov
or
lds
xor
es
jmp
jb
das
les
ret
or
into
dec
pop
cmp
shll
mov
shlb
lock
cmp
inc
cwtl
mov
inc
ljmp
inc
leave
xor
sub
data16
bound
jge
push
cmpsb
mov
sub
xchg
push
cli
inc
cld
push
or
push
call
fildll
or
mov
js
adc
inc
hlt
test
data16
mov
or
hlt
push
sbb
inc
int3
repz
aas
nop
hlt
adc
mov
mov
addl
in
jae
jbe
add
bound
or
cld
insb
iret
lock
jmp
mov
scas
aad
cmpsl
jmp
loop
inc
lock
sarb
pop
add
shrl
fbstp
cmp
mov
sbb
dec
sbb
fisubrs
rorb
or
pop
or
nop
addr16
xchg
push
ret
sbb
dec
sbb
adc
sub
fdivrp
adc
xchg
push
repnz
dec
mov
pop
jmp
mov
add
xchg
pop
mov
fisttps
dec
addl
cmpsl
and
stos
or
jmp
js
clc
popa
imul
add
jecxz
push
xor
dec
inc
jmp
lcall
mov
arpl
push
rcr
sub
pop
lea
push
push
inc
and
sti
sbb
fistps
sbb
add
xor
stc
dec
adc
sti
mov
push
xchg
hlt
fmuls
aaa
cmpsl
xor
ljmp
cmp
and
icebp
push
mov
add
push
xlat
scas
mov
inc
insb
mov
jbe
in
xchg
ret
lahf
fcomps
xchg
test
mov
push
adc
cli
add
imul
in
and
sub
popl
in
xor
pcmpgtb
pushf
hlt
push
or
xchg
adc
movsb
jge
rolb
xchg
insl
call
xchg
or
dec
mov
adc
add
cwtl
cmp
dec
or
inc
hlt
scas
cmp
xchg
loope
out
and
jmp
jo
ss
xchg
mov
andb
ret
mov
mov
or
ja
mov
movsl
sahf
cmp
cmp
ljmp
xchg
aad
lcall
pusha
or
stc
or
rorb
or
mov
ja
mov
mov
lods
das
in
jb
lds
sti
stos
lea
cmp
jbe
outsl
jge
mov
daa
and
mov
sbb
mov
jno
adc
sbb
push
mov
xor
jp
pop
hlt
xor
adc
test
cmc
cmp
lock
int
bt
mov
movsb
cwtl
ljmp
aam
and
daa
shrl
xor
push
rorb
xchg
lret
xchg
rorb
xchg
es
jmp
mov
stos
jno
push
dec
aam
ret
cmc
test
iret
lcall
mov
pop
mov
xchg
or
jecxz
or
mov
int
sbb
dec
jne
lock
ljmp
data16
pop
inc
push
inc
adc
xchg
aam
pop
rcrl
pushf
or
and
jmp
pop
xor
rorl
jns
mov
dec
rcrb
xchg
xchg
rcrb
inc
in
push
leave
aam
lret
and
add
or
cmp
dec
mov
outsb
adc
aad
xchg
scas
fwait
addl
dec
add
icebp
inc
jns
scas
fistl
push
fwait
bound
addr16
or
movsb
push
loop
test
push
and
addr16
jnp
lahf
dec
and
repz
xchg
arpl
inc
ss
pop
popf
dec
inc
jl
and
mov
stos
cmp
mov
push
dec
or
into
das
and
mov
das
xor
sbb
sahf
and
sbb
push
jo
dec
jb
ljmp
cmpsl
push
andl
fisubrl
sub
shll
lock
test
push
pusha
sub
add
jp
mov
fnstcw
fists
inc
clc
mov
sub
mov
xchg
addr16
call
test
sbb
data16
fdivrl
xchg
sub
sahf
lahf
dec
cmp
rcl
mov
stos
or
xor
dec
add
xchg
push
xchg
icebp
mov
inc
mov
aaa
inc
lds
add
hlt
je
cwtl
gs
xor
and
sbb
xchg
inc
pop
jb
jo
mov
jns
insl
mov
mov
ss
or
sbb
mov
mulb
xor
inc
addr16
les
and
mov
int
inc
addr16
jmp
add
icebp
sti
dec
lock
mov
xor
xchg
mov
add
fildl
mov
js
mov
xchg
adc
mov
stos
and
jno
cwtl
or
dec
icebp
and
or
int
adc
push
xor
fcom
ret
cmc
jne
sub
rcr
xor
sbb
leave
sub
xor
fimuls
mov
test
lcall
lock
push
lods
xor
cmp
add
add
ret
and
ret
out
jg
or
sbb
jmp
dec
out
add
mov
addl
mov
xorl
jle
mov
imul
shll
cmc
push
out
mov
dec
push
push
test
repnz
mov
add
je
aaa
pop
jb
testb
inc
jo
sub
hlt
push
add
xchg
iret
nop
sbb
int3
pop
dec
jnp
fimuls
sbb
xchg
jge,pt
out
jg
dec
or
arpl
xchg
and
in
fsubrp
outsl
mov
mov
dec
pop
add
push
mov
cmc
mov
jbe
push
pop
cmp
jmp
sub
stos
xor
insb
push
cmp
dec
popf
std
mov
cmp
jg
addr16
subb
pop
xchg
test
adc
sub
mov
js
mov
jo
scas
sbb
add
aad
pop
es
mov
call
xchg
ljmp
jmp
lds
mov
and
out
mov
addr16
mov
xchg
dec
hlt
dec
and
dec
add
xorl
xchg
stos
or
pushf
pop
in
or
mov
mov
push
mov
fnstcw
sbb
imul
push
sub
fsub
and
inc
xchg
mov
cmc
adc
and
pop
out
push
or
push
hlt
inc
nop
push
imul
sbb
and
clc
mov
pop
sbb
out
sbb
jno
adc
cmpsl
lahf
inc
mov
cmpl
sub
and
xchg
fldpi
mov
dec
jp
cltd
push
mov
pop
arpl
cld
ret
sub
jg
pop
loope
fcoms
or
xchg
cmp
mov
mov
inc
jo
inc
push
xchg
mov
shlb
addr16
dec
xor
mov
cmpb
or
ret
insl
mov
movsl
std
std
movsl
lea
cli
sbbl
repz
mov
mov
jbe
notb
aas
and
out
add
call
mov
mov
orb
xor
fisubrl
cltd
or
in
popf
out
xchg
pushf
out
push
in
loope
xlat
in
sub
popa
cmpsl
push
sub
and
enter
cmp
sub
pop
leave
fwait
cwtl
outsl
jmp
fidivl
lcall
arpl
das
iret
std
sbb
jp
jno
cmp
adc
lahf
cld
dec
jmp
mov
aad
jo
leave
xchg
or
dec
imul
xchg
mov
xchg
pop
jp
enter
mov
adc
xor
sub
aas
cli
push
push
incl
je
xchg
mov
scas
and
cmp
xchg
ficoms
hlt
mov
stos
cmp
mov
popf
and
cmpsl
fwait
push
jp
movsl
cmp
out
scas
mov
scas
mov
