add
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
push
lea
call
lea
movl
call
cmp
je
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
lea
push
push
lea
call
mov
movb
test
jne
lea
push
lea
push
mov
push
lea
push
push
lea
push
push
call
add
jmp
mov
push
push
call
add
test
je
mov
lea
push
lea
push
push
push
call
add
push
mov
call
mov
mov
xor
push
push
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
push
lea
movl
call
lea
mov
mov
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
call
push
push
push
lea
call
mov
call
lea
movb
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
push
push
push
mov
push
call
lea
test
je
push
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
movl
test
jne
lea
push
lea
push
lea
add
xchg
lea
push
push
call
add
jmp
mov
lea
lea
push
push
push
call
add
lea
movl
call
test
jne
pop
mov
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
push
lea
mov
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
mov
add
mov
call
mov
call
lea
mov
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
xor
pop
mov
add
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
movl
mov
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
push
push
lea
call
push
lea
mov
call
mov
mov
push
push
push
push
call
or
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
cmpl
je
lea
call
mov
push
push
lea
push
push
movb
call
test
je
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
cmp
je
cmpl
jne
mov
mov
lea
movb
call
mov
mov
inc
add
cmp
mov
mov
jb
mov
cmp
je
mov
push
mov
mov
push
push
push
call
mov
call
lea
movl
call
pop
pop
mov
pop
pop
mov
add
ret
nop
mov
test
je
jmp
ret
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xor
test
sete
mov
mov
push
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
lea
push
mov
lea
mov
testb
je
movl
test
je
movl
mov
mov
test
je
mov
testb
mov
je
mov
push
mov
rolb
and
mov
mov
mov
test
pop
je
movl
test
je
mov
testb
je
movl
mov
push
shr
and
mov
mov
call
mov
call
pop
pop
ret
push
mov
cmpl
je
push
push
call
mov
mov
cmp
mov
ja
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
mov
jmp
mov
mov
lea
mov
mov
mov
lea
lea
mov
neg
sbb
and
or
mov
sub
pop
je
dec
je
dec
mov
lea
je
mov
mov
jmp
mov
movl
jmp
mov
mov
lea
movl
jmp
mov
lea
mov
mov
mov
mov
lea
lea
mov
neg
mov
sbb
and
or
mov
pop
ret
lea
ret
cmp
and
fdivrl
and
push
and
push
mov
mov
test
je
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
pusha
clc
inc
add
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
mov
ret
add
jnp
inc
add
mov
add
add
push
push
push
call
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
xor
test
setne
mov
fildl
inc
add
test
setne
add
lea
push
mov
call
push
mov
call
mov
call
pop
ret
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
xor
mov
mov
mov
setne
mov
mov
mov
xor
test
setne
mov
mov
mov
add
push
push
call
add
pop
ret
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
test
je
mov
test
jne
mov
test
je
mov
jmp
xor
test
je
mov
test
je
mov
jmp
xor
test
je
mov
jg
inc
add
inc
insb
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
sbb
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
dec
incl
add
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
cmp
jbe
mov
push
lea
add
mov
in
add
add
cmpl
std
inc
add
mov
test
jne
movl
push
mov
call
add
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
mov
mov
mov
push
hlt
inc
add
add
insb
add
push
push
call
mov
add
cmpl
jne
cmpw
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
roll
leave
cmp
sete
mov
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
push
fadds
inc
jo
inc
add
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
add
cwtl
fildl
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
mov
mov
mov
cmp
jbe
mov
mov
mov
push
mov
mov
sti
jmp
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
push
call
mov
mov
mov
mov
cmp
jg
test
jge
xor
jmp
cmp
jle
mov
mov
mov
mov
mov
pusha
testb
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
push
mov
call
mov
mov
xor
mov
push
push
push
push
call
lea
call
push
lea
mov
call
lea
call
movb
mov
push
push
lea
push
push
call
mov
mov
test
je
push
mov
push
push
push
call
inc
cmp
jle
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
call
mov
mov
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
push
push
call
test
jl
mov
lea
push
push
call
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
call
test
jl
mov
test
je
mov
mov
push
push
call
mov
push
mov
call
pop
pop
add
ret
push
push
push
push
call
mov
lea
test
push
push
setne
push
push
mov
mov
call
add
test
je
xor
call
mov
pop
pop
ret
mov
push
push
push
call
add
test
jne
xor
mov
push
call
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
push
lea
movl
call
lea
xor
mov
movl
movl
mov
mov
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
mov
movl
lea
movl
mov
lea
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
add
lea
movb
call
lea
movb
call
mov
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
call
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
push
push
push
push
mov
lea
push
call
push
push
push
push
push
call
mov
mov
add
test
je
push
push
call
add
push
call
lea
mov
xor
mov
push
push
rep
push
call
push
push
push
push
push
call
mov
add
test
je
push
push
push
push
call
add
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
mov
push
call
mov
mov
add
test
je
lea
push
push
push
call
add
push
call
mov
push
push
push
inc
push
push
mov
call
mov
add
test
je
push
add
push
push
push
call
add
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
call
add
test
jne
mov
mov
push
push
push
call
mov
add
push
call
pop
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
push
push
push
mov
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
push
push
call
add
mov
mov
push
call
test
pop
je
mov
mov
cmp
je
lea
push
call
add
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
mov
call
mov
test
je
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
mov
call
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
call
mov
test
jne
movl
jmp
movl
add
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
mov
jne
lea
mov
push
push
push
push
push
push
push
push
push
call
test
jne
mov
test
je
mov
push
mov
call
xor
pop
ret
cmp
jne
mov
mov
push
push
push
lea
push
push
mov
push
push
mov
push
push
mov
movl
call
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
call
mov
push
push
push
test
push
mov
jne
lea
test
je
mov
test
je
mov
push
call
xor
jmp
mov
call
lea
lea
push
push
mov
call
mov
call
mov
lea
push
lea
push
push
push
push
push
movl
call
push
call
push
mov
call
test
jne
cmpl
jne
mov
mov
mov
lea
mov
jmp
movl
mov
mov
call
cmp
jne
mov
call
push
push
push
push
push
push
call
add
push
push
push
push
push
push
call
push
call
push
mov
call
xor
jmp
cmp
jne
lea
call
mov
movl
test
jne
mov
push
push
call
or
test
je
push
push
lea
call
push
mov
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
jmp
push
push
lea
call
mov
push
mov
push
push
call
or
lea
push
call
mov
push
push
push
push
push
call
add
cmp
jne
mov
push
push
call
test
je
push
push
lea
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
call
mov
call
lea
mov
call
xor
jmp
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
movl
movl
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
inc
add
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
setne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
and
push
mov
call
inc
add
xchg
add
add
call
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
inc
add
add
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
call
mov
call
add
push
push
push
push
call
mov
call
mov
pop
ret
push
mov
call
test
jne
pop
ret
mov
call
mov
push
call
add
test
jne
mov
test
jne
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
call
inc
add
add
add
rolb
jmp
add
mov
call
inc
add
call
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
neg
sbb
neg
cmp
je
mov
mov
call
pop
ret
nop
push
mov
call
mov
call
inc
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
add
lea
call
neg
sbb
push
neg
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
pop
add
ret
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
setne
push
lea
call
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
mov
and
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
sbb
and
xchg
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
xchg
and
pop
and
fcompl
and
pop
and
jmp
pop
and
jbe
and
sbbl
xchg
pop
and
enter
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
push
jne
mov
pop
mov
pop
ret
mov
test
movw
movw
jbe
push
mov
push
mov
push
push
push
call
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
xor
test
jbe
mov
mov
test
jle
mov
push
push
push
call
add
test
je
jmp
cmpw
je
inc
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
push
cmpw
jne
add
cmpw
je
mov
mov
push
push
call
mov
add
test
mov
jne
push
push
call
add
mov
mov
mov
sub
sar
cmp
jbe
mov
mov
mov
push
push
push
push
call
add
test
jne
mov
lea
lea
lea
mov
lea
mov
shr
rep
mov
and
rep
mov
add
lea
mov
lea
movw
mov
inc
mov
mov
cmp
jae
mov
cmpw
mov
jne
lea
cmpw
jne
pop
pop
pop
pop
ret
nop
mov
push
mov
xor
mov
push
push
push
rep
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
mov
push
mov
and
push
push
push
push
push
call
mov
add
and
test
je
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
add
push
push
call
push
lea
push
push
push
call
add
and
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
mov
push
push
push
push
push
call
mov
push
lea
push
push
and
call
push
lea
push
push
push
call
lea
lea
push
lea
movl
lea
lea
push
push
movl
movl
call
lea
push
lea
push
push
call
add
add
lea
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
push
mov
cmp
jbe
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
test
mov
je
lea
push
push
push
call
add
jmp
movw
test
je
mov
push
mov
mov
push
lea
shr
rep
mov
and
rep
pop
pop
mov
lea
push
mov
lea
add
push
push
mov
lea
push
push
push
push
push
push
call
test
je
xor
pop
add
ret
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
lea
push
lea
push
push
push
call
add
test
je
xor
add
ret
push
mov
test
je
mov
lea
push
push
push
call
add
test
je
mov
xor
test
mov
setne
mov
pop
add
ret
movl
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
xor
push
push
mov
mov
call
mov
add
cmp
jne
pop
xor
pop
add
ret
mov
cmp
je
cmp
je
push
lea
push
push
call
add
jmp
lea
push
push
push
push
call
add
test
jne
mov
lea
push
mov
push
mov
test
je
cmpw
je
mov
xor
test
jne
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
lea
push
push
call
add
test
jne
mov
mov
neg
sbb
lea
and
add
push
mov
push
push
push
call
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
je
mov
inc
test
je
jmp
mov
test
jne
mov
test
je
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
jmp
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
neg
sbb
mov
and
lea
add
push
mov
push
push
push
call
add
test
je
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
jne
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
cmpw
jne
mov
lea
push
push
push
call
add
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
push
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
add
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
add
movl
call
add
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
and
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
subl
pop
add
add
inc
add
add
xchg
add
add
add
add
insb
add
jmp
jnp
movl
mov
add
pushf
add
and
add
mov
add
imull
add
add
in
add
push
push
push
call
movsb
add
sahf
lret
cmpsb
add
lea
add
add
add
add
add
add
js
jns
int3
iret
xchg
sbbb
xchg
fs
add
imul
add
add
fwait
sub
pop
popl
push
push
push
lea
push
lea
push
push
push
push
call
std
add
add
addb
mov
stos
test
jbe
jo
outsl
add
mov
mov
add
mov
mov
add
jle
jle
in
les
add
mov
xchg
test
add
add
lcall
push
push
push
push
push
lea
push
push
call
add
popf
jnp
add
fabs
mov
add
jae
shrl
cltd
out
je
add
add
ret
pusha
cltd
test
add
in
jecxz
mov
call
push
push
push
push
lea
push
push
lea
push
push
call
xlat
sahf
roll
push
xchg
stos
add
add
fadds
add
push
add
xchg
add
add
xchg
mov
test
lods
add
rolb
add
mov
add
xchg
ret
addl
jnp
add
sub
pop
push
push
push
lea
push
push
push
push
push
call
add
stos
add
add
jecxz
add
add
jmp
popa
outsl
sahf
cltd
in
ljmp
fcmovnbe
aam
loope
mov
sub
pop
call
push
push
push
push
push
push
push
lea
push
push
call
ja
add
nop
loopne
mov
fadd
add
pusha
mov
mov
fs
add
bound
add
add
add
xlat
std
std
je
lahf
int3
les
add
test
add
mov
add
add
stc
pop
add
in
mov
int
in
push
sub
pop
call
push
push
push
push
push
lea
push
lea
push
call
mov
add
fiaddl
leave
int
lods
add
mov
mov
add
xchg
add
lea
cmpl
loopne
mov
leave
and
movsl
test
jge
xchg
lock
add
jbe
loope
ffreep
fidivrs
push
add
add
lahf
cwtl
stos
add
add
add
mov
push
push
push
push
push
call
add
jp
jo
add
mov
lds
jns
pop
add
pushf
add
mov
add
mov
ljmp
xchg
fstpl
lock
add
mov
add
jecxz
add
pop
movsb
outsl
mov
lds
add
imul
add
mov
test
add
add
mov
lcall
push
push
push
push
push
lea
push
lea
push
call
add
int
pop
add
xchg
add
aad
push
arpl
add
mov
popa
test
in
in
mov
push
lea
push
push
push
push
push
push
lea
push
push
lea
push
call
int
add
add
loopne
push
fcomps
add
mov
cltd
add
lods
shl
xchg
nop
add
aad
add
jb
add
mov
in
fdivr
lcall
pop
hlt
add
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
testb
add
add
xchg
add
test
test
push
ja
add
mov
nop
jbe
xlat
jecxz
add
lds
push
add
lea
sub
pop
add
add
push
lea
push
lea
push
push
push
call
rolb
arpl
xchg
aam
mov
mov
add
hlt
fnsave
stc
iret
andl
test
test
add
xchg
fs
mov
push
rolb
add
add
sub
add
push
in
test
add
add
add
in
lcall
pop
add
xor
adc
push
call
in
fildl
add
push
jb
add
mov
out
lret
ret
mov
mov
push
add
xchg
cltd
add
jb
adcb
lds
add
jae
arpl
mov
in
hlt
pop
xor
push
push
push
call
roll
mov
pop
mov
push
add
lea
out
add
rcl
shlb
shlb
add
add
add
cmc
add
add
enter
scas
add
lahf
sub
pop
add
push
push
add
push
or
inc
add
rol
sub
lea
ror
pop
lea
ror
pop
push
push
push
push
push
push
push
push
call
pop
add
add
add
mov
add
xchg
aam
fstl
lods
add
jb
add
addr16
sub
pop
pushl
call
push
push
push
lea
push
push
lea
push
lea
push
push
call
leave
add
rolb
add
add
xlat
addb
in
add
stc
hlt
xchg
add
add
leave
add
lds
add
add
rclb
jb
add
add
clc
mov
int
out
sub
jns
mov
add
cmpsl
push
add
sti
add
add
loopne
mov
push
lea
push
push
push
push
push
push
push
push
push
call
and
jl
add
mov
mov
add
add
add
add
test
xchg
movsb
xchg
add
lahf
lods
push
int3
aad
xchg
mov
pusha
lods
pushf
add
xchg
je
test
add
rcrl
xchg
add
sub
pop
movl
lea
push
push
push
push
call
test
add
add
lahf
into
add
add
add
jne
pop
loopne
mov
jnp
sahf
test
xchg
stc
add
arpl
push
lea
push
push
push
push
call
add
add
imul
add
pop
push
add
aad
pop
add
jo
add
fsubrs
enter
jbe
mov
movl
mov
add
rcrl
add
fiaddl
sarl
in
in
lcall
jne
push
lea
push
call
cltd
cli
add
js
stos
aad
mov
add
mov
mov
jle
add
xchg
insb
jmp
mov
stc
lds
mov
add
xchg
add
mov
add
xchg
int
push
add
mov
add
pop
pushl
call
push
push
push
call
add
out
faddl
test
add
lods
in
add
mov
jmp
add
pop
arpl
int
mov
xchg
hlt
bound
in
jo
add
mov
xchg
add
call
add
add
xchg
mov
mov
clc
add
jge
jae
fcoml
loop
scas
out
add
hlt
lcall
jne
push
push
push
push
push
push
lea
push
lea
push
call
pop
shl
hlt
lods
ret
stc
add
add
test
add
mov
rolb
pop
add
add
test
add
fisttpl
add
xchg
add
in
loopne
pushl
push
push
call
add
mov
imul
add
add
add
add
mov
push
jmp
popa
mov
pop
add
lcall
lret
xor
ljmp
ror
ror
push
sub
add
add
sub
ror
shl
add
lea
pop
ror
rol
rol
pop
push
push
push
push
push
call
add
add
out
mov
fcmove
add
add
push
mov
add
add
imul
in
pop
pushl
call
push
push
push
push
call
mov
test
filds
mov
mov
cld
loope
jnp
pop
leave
aam
lret
mov
and
add
add
add
lods
mov
add
xchg
fisubrl
add
add
push
add
add
fildl
mov
add
stos
add
shll
lcall
inc
push
push
add
shr
push
sub
add
shl
sub
dec
sub
pop
sub
pop
push
lea
push
push
push
push
push
call
call
jecxz
add
add
xchg
lcall
add
add
test
add
mov
cltd
add
add
mov
add
pop
push
movl
add
fimull
call
in
push
lea
push
push
call
push
add
add
add
add
mov
add
rcll
filds
add
add
add
pushf
add
push
clc
add
push
addb
add
lret
in
in
pop
push
push
push
push
lea
push
push
push
call
add
add
mov
add
add
mov
add
pop
pop
roll
add
pop
jmp
addb
out
add
add
add
add
test
cltd
mov
data16
in
call
call
push
push
call
lcall
add
add
push
mov
xchg
rolb
add
ja
vpavgb
mov
jne
rolb
mov
mov
ret
push
aam
add
add
add
fdivp
push
icebp
add
in
clc
pop
mov
push
lea
push
push
call
idiv
add
add
add
data16
add
add
aam
ficompl
add
push
lock
add
test
stos
fistl
add
stos
add
add
rolb
rorb
push
jl
mov
add
add
rcl
add
add
push
push
push
push
push
push
push
push
push
push
push
call
add
xchg
sti
add
mov
add
mov
mov
add
addl
add
add
add
add
hlt
add
mov
mov
mov
lock
mov
in
jp
mov
add
add
add
into
mov
add
add
xchg
loop
cmpsb
add
jge
xchg
lcall
pop
hlt
push
push
lea
push
push
call
jle
add
add
mov
into
add
push
sti
in
shlb
add
add
mov
shlb
lret
push
push
sub
pop
add
add
push
lea
push
lea
push
push
lea
push
push
call
push
add
jecxz
add
add
add
mov
add
add
popf
add
movsb
pop
ret
add
rolb
fucom
xchg
lods
add
add
jo
bound
add
mov
lcall
ret
push
inc
add
push
lea
push
push
push
push
push
push
call
fldt
add
lret
add
mov
add
flds
add
mov
add
add
add
add
add
lock
lods
js
arpl
loopne
add
add
add
add
xchg
roll
hlt
outsl
add
mov
add
add
add
aad
pusha
mov
int3
add
in
in
mov
push
push
push
push
push
push
push
call
add
jae
lea
cwtl
add
xchg
push
add
sahf
data16
jecxz
roll
enter
mov
add
lahf
add
in
call
xor
push
push
lea
push
push
call
add
add
jl
add
fstpt
add
add
add
mov
mov
add
jnp
in
lock
lcall
les
push
push
push
push
push
push
push
lea
push
call
shlb
add
add
add
lock
iret
ret
call
add
mov
mov
jae
mov
push
les
add
bound
mov
push
mov
fwait
insb
mov
hlt
pop
fst
add
jae
add
add
pop
add
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
add
rol
add
add
movsb
mov
add
lods
add
add
add
ret
add
test
push
add
rolb
add
add
add
add
in
movsl
add
add
push
jbe
jo
add
nop
sub
pop
push
push
push
lea
push
push
push
call
testb
insb
mov
aam
scas
outsl
sar
ficomps
add
icebp
cltd
fnsave
add
add
mov
add
pop
aam
add
jecxz
add
xchg
data16
add
add
nop
add
mov
mov
push
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
jmp
cmpsl
fmuls
add
add
add
icebp
mov
jl
lea
andb
sarb
xchg
jecxz
sahf
pusha
jmp
add
jae
addb
add
add
mov
mov
sahf
cmpsb
push
add
add
mov
add
fsub
add
add
push
push
push
lea
push
push
lea
push
call
add
movsl
add
stos
in
je
incb
add
mov
add
add
add
add
aam
lahf
add
gs
add
lods
jo
lock
xchg
lock
rcrl
add
add
push
ret
sub
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
add
mov
faddl
add
add
xchg
gs
add
je
mov
pushf
add
lret
pop
addl
push
insb
jno
in
fcomps
lock
push
push
call
add
in
jl
mov
les
add
add
push
icebp
jno
out
mov
xchg
mov
pusha
add
nop
add
add
add
mov
push
fiadds
xchg
clc
add
les
xchg
mov
fidivrl
add
add
add
xchg
pop
add
arpl
add
scas
outsl
roll
dec
add
xor
adc
inc
pop
mov
lea
push
call
add
jae
add
add
add
roll
jl
call
jmp
cltd
cltd
add
mov
add
mov
nop
leavew
add
imul
mov
movb
fldcw
add
loope
mov
xor
push
lea
push
push
push
lea
push
push
call
add
push
add
add
movsl
mov
ret
pop
add
test
add
lret
xchg
mov
add
push
pop
movsl
push
add
fsubr
lahf
xlat
add
add
add
add
popl
lret
sub
pop
add
push
lea
push
push
lea
push
push
push
call
pop
add
mov
add
cmc
je
add
add
fidivrs
add
test
add
push
add
testl
std
addl
cmp
add
jge
pop
add
xchg
out
jmp
mov
add
enter
fwait
add
add
add
mov
int3
push
add
push
add
cli
add
mov
data16
sub
pop
mov
push
push
lea
push
push
call
add
add
add
push
int3
pop
stc
out
add
loopne
add
arpl
call
iret
out
rcrl
clc
jmp
iret
jns
add
sub
pop
xor
push
push
push
push
push
push
call
add
loopne
mov
test
add
add
lahf
add
add
add
call
push
push
push
lea
push
push
push
call
add
add
mov
cli
shll
out
xchg
add
lds
scas
add
mov
push
repnz
add
aam
test
pop
gs
add
sahf
jns
mov
test
add
cmpsl
add
add
std
pop
fiaddl
add
in
call
sub
push
push
push
push
push
push
push
call
cltd
add
mov
jbe
add
mov
add
add
add
add
add
add
xchg
add
call
mov
jge
mov
out
pusha
add
ret
jl
sub
pop
pop
push
push
lea
push
lea
push
push
push
push
call
add
add
lods
add
fiaddl
add
out
add
loopne
add
xchg
mov
add
add
mov
push
add
add
add
stc
add
add
les
add
add
cltd
mov
aam
leave
repnz
push
mov
add
nop
add
lcall
movsb
push
push
push
call
gs
push
xlat
out
xlat
lods
outsl
add
mov
add
add
add
movsb
call
push
into
add
xchg
xchg
add
add
out
enter
out
add
xchg
add
test
in
hlt
pop
pop
mov
push
push
push
call
jnp
xchg
mov
mov
loope
jl
jl
add
in
add
jge
add
add
mov
add
xchg
popa
add
add
add
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
test
push
jbe
bound
testb
lock
gs
add
out
data16
lret
cmpsb
mov
in
fcompl
ret
push
inc
add
mov
xor
push
push
call
stos
fadds
sahf
call
cli
add
mov
in
xchg
fcmove
add
add
jp
jne
hlt
movsl
mov
repnz
pusha
pusha
outsl
arpl
add
in
add
les
sub
pop
mov
xor
push
lea
push
push
lea
push
push
lea
push
push
push
call
xchg
add
add
test
add
std
xlat
add
int
pop
mov
add
je
cwtl
addr16
xchg
add
mov
mov
in
loopne
mov
xor
push
lea
push
push
lea
push
push
lea
push
call
add
out
add
add
out
add
mov
loop
push
jl
add
add
add
add
add
add
fdivl
out
mov
add
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
jne
test
jbe
test
push
jecxz
sbb
xchg
mov
add
add
add
add
stos
add
rcll
adc
and
push
push
push
push
call
xlat
xchg
add
add
add
add
fwait
add
rol
loopne
add
add
popf
mov
add
add
add
xchg
sarl
add
add
jae
jge
add
sti
aad
add
movb
add
mov
jo
ljmp
add
in
sub
pop
mov
push
push
xor
add
dec
push
or
not
add
lea
shl
ror
sub
add
not
lea
pop
pop
push
push
push
push
call
in
add
scas
add
add
add
add
incb
fldenv
lret
add
add
jno
push
add
xchg
fildl
loope
add
lahf
arpl
leave
test
data16
pop
sub
pop
pushl
call
push
push
lea
push
call
jno
xchg
add
push
jne
push
lret
sarb
add
xchg
add
push
lods
fwait
add
fnstsw
mov
push
add
mov
nop
add
in
hlt
lcall
add
test
pop
add
sub
sub
push
or
inc
add
sub
not
dec
sub
xor
not
sub
pop
ror
xor
rol
pop
push
push
push
call
add
pop
add
cmpsb
cmc
add
xlat
xchg
add
negb
cmpsb
movsb
add
pop
jl
stos
popa
mov
add
add
xchg
mov
popl
hlt
add
add
xchg
fmulp
adc
add
sub
pop
push
push
push
push
lea
push
call
sarb
in
fidivrs
loope
mov
push
scas
mov
pushf
add
roll
lods
push
jbe
add
jle
sti
push
scas
push
movsb
aam
mov
cwtl
add
mov
mov
sahf
xchg
add
mov
add
add
rclb
mov
push
push
lea
push
push
push
push
push
lea
push
call
add
test
xchg
mov
stos
gs
fcomip
add
rolb
jl
mov
addr16
pushf
add
cld
add
mov
add
jp
sub
pop
mov
push
push
push
call
xorb
add
cwtl
lock
lods
mov
lea
add
add
jae
lods
add
add
add
pusha
mov
mov
add
pop
nop
mov
add
hlt
pop
push
push
push
lea
push
call
add
pushf
sti
rolb
add
int
aam
add
add
nop
add
imul
in
jecxz
push
call
outsl
add
add
add
sbbl
jmp
add
arpl
add
fsubrs
add
test
hlt
pop
push
mov
push
push
lea
push
call
add
add
cmpsl
imul
mov
add
leave
add
in
add
popf
aam
hlt
add
jne
add
mov
in
hlt
pop
add
push
push
push
push
push
push
call
movl
add
xchg
add
add
add
rolb
test
add
add
mov
xchg
int
mov
add
add
jns
scas
out
add
add
mov
jb
movsb
jno
mov
in
bound
enter
lahf
jns
add
xchg
add
add
mov
xchg
cld
fidivl
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
out
loopne
add
ja
jns
loopne
xchg
imul
add
mov
fidivl
sti
lods
les
lea
bound
jb
mov
push
add
pushf
add
add
les
pop
in
pushf
add
mov
lret
arpl
add
add
add
add
add
arpl
mov
pop
add
push
xor
pop
mov
push
push
push
push
push
push
push
call
jge
xorl
cmpsl
sti
roll
xlat
mov
add
test
pop
add
loop
add
aam
movsb
add
add
rclb
jae
mov
xchg
push
xchg
add
mov
add
xor
push
lea
push
push
push
push
push
push
push
call
add
lret
add
pop
add
add
cmpsl
push
sti
add
add
add
add
add
mov
fsubr
add
repnz
xchg
fidivrl
imul
mov
lea
in
aam
leave
xchg
jne
in
loopne
lcall
les
add
push
shl
pop
add
push
push
call
cmpsb
add
add
xorb
loope
add
xchg
add
add
lahf
xchg
jo
mov
add
into
mov
add
add
movl
xchg
pushw
add
mov
xor
push
sub
inc
pop
add
push
push
push
push
push
push
call
xchg
mov
clc
mov
pusha
stc
xlat
into
js
stc
add
mov
std
popa
add
add
popf
fs
jp
fucomi
ja
pusha
add
stc
add
add
add
mov
fildl
add
mov
add
lcall
push
push
push
push
call
add
in
movsb
jmp
popf
add
add
mov
int
mov
add
push
add
nop
add
add
popa
nop
mov
add
ljmp
lcall
add
pop
mov
sub
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
lods
mov
negb
xchg
mov
push
fstl
mov
fwait
add
add
mov
add
push
add
mov
cwtl
push
popl
add
lods
cltd
data16
add
icebp
bound
pushf
je
rolb
add
sub
pop
xor
push
lea
push
push
push
lea
push
push
push
push
call
cmc
std
add
xchg
add
add
add
iret
arpl
icebp
add
mov
pop
les
into
out
addr16
add
add
stos
add
add
lahf
add
icebp
mov
add
add
xchg
mov
addr16
cld
add
rolb
sub
pop
add
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
xchg
pop
xchg
test
std
mov
incb
add
push
incb
loopne
jle
test
jmp
hlt
cld
add
popa
ja
push
movsb
add
push
pop
add
add
add
add
push
xchg
add
add
add
mov
push
scas
popl
sub
pop
rep
mov
xor
push
pop
or
je
push
push
push
lea
push
push
push
push
push
call
outsl
add
add
insb
mov
add
add
cltd
push
pop
add
add
add
add
add
jp
add
loope
mov
mov
aad
cmpsb
mov
add
mov
add
lret
hlt
popa
in
icebp
jnp
out
add
add
jl
mov
aam
add
rcrb
leave
je
sub
pop
mov
xor
push
shl
pop
mov
xor
push
lea
push
lea
push
push
lea
push
push
push
call
add
fildl
push
cwtl
add
movb
pop
push
add
js
cli
xlat
imul
jbe
mov
add
mov
add
sub
pop
add
add
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
mov
push
pushf
add
add
mov
ret
jae
in
add
add
xchg
loopne
outsl
add
pushf
mov
jmp
arpl
mov
lock
add
add
add
add
cmpl
jno
add
add
add
add
sub
pop
push
push
ror
xor
sub
add
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
call
xchg
out
add
stos
mov
lcall
add
mov
icebp
add
mov
out
xlat
pop
fmuls
addb
lock
roll
add
pusha
stos
add
cli
repnz
add
mov
lcall
add
push
push
push
push
push
call
add
mov
add
mov
gs
push
jmp
scas
lret
scas
add
add
mov
subb
mov
push
xchg
add
jmp
add
js
push
stc
scas
movsl
jne
jo
add
add
pushf
add
jne
add
je
add
loop
sub
pop
add
push
not
add
sub
pop
add
push
add
lea
lea
pop
pop
rep
push
push
call
add
into
shrl
ret
cmpsl
add
shlb
add
push
mov
add
mov
mov
add
iret
add
add
xchg
jnp
bound
lcall
dec
sub
jno
adc
gs
adc
dec
add
add
popaw
imul
iret
cwtl
ror
incb
add
mov
add
pushf
popa
add
add
clc
mov
mov
in
lcall
push
into
stos
add
add
xor
push
push
push
push
push
push
push
call
xlat
xchg
jmp
fadds
add
mov
pushf
gs
movsb
add
mov
fiaddl
jnp
sarb
lahf
add
add
xchg
add
pusha
sub
pop
add
push
lea
push
push
push
call
test
add
roll
add
fwait
add
add
add
add
jb
add
push
xchg
adc
mov
mov
add
bound
enter
test
cmpsl
add
add
add
pushf
add
xchg
add
movb
in
lock
or
je
push
push
push
push
push
call
popa
push
clc
mov
jb
shrb
cmpsb
add
push
xchg
xchg
fisubrs
mov
incb
clc
add
ficompl
add
xchg
mov
add
jbe
pop
add
pop
mov
push
lea
shr
pop
add
push
pop
add
rep
push
add
xor
shr
pop
pop
push
push
sub
inc
sub
sub
push
push
pop
add
not
inc
sub
pop
ror
lea
dec
pop
push
add
ror
lea
pop
pop
mov
push
ror
pop
mov
push
lea
pop
mov
jmp
push
sub
pop
push
push
inc
pop
mov
push
rol
not
shl
pop
add
push
rol
pop
push
push
sub
sub
add
pop
push
push
lea
push
push
lea
push
push
call
popl
add
addl
add
repnz
add
fptan
add
jmp
mov
add
add
add
cwtl
pop
jo
mov
push
push
add
add
pop
mov
pop
push
lea
rol
add
pop
pop
pop
push
ror
sub
sub
add
pop
pop
leave
push
push
push
push
push
push
push
push
call
out
xchg
xchg
aam
call
pop
insb
data16
push
add
jns
std
add
add
test
out
add
mov
js
add
add
int
iret
xchg
pop
test
cwtl
jno
add
iret
add
data16
sub
pop
ret
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
ret
add
add
fadds
out
add
lods
jno
add
add
xchg
in
add
mov
mov
jnp
add
fs
call
lea
jmp
jne
cmpsl
mov
add
fadds
add
add
sub
pop
push
push
push
push
lea
push
call
scas
pop
imul
add
in
ficoml
test
aam
add
into
pusha
mov
in
cli
mov
addr16
add
lock
add
add
add
test
mov
fsubr
push
outsl
lds
add
pop
jnp
js
pop
lcall
sub
pop
mov
push
shr
dec
pop
add
push
sub
dec
pop
push
push
push
push
call
in
add
loope
add
mov
mov
mov
add
jmp
cmc
lahf
roll
iret
add
in
incb
sub
pop
push
push
push
inc
pop
push
movl
push
lea
sub
pop
addl
test
je
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
aam
push
fcmovnu
xchg
add
test
mov
mov
add
movsb
push
xchg
mov
jl
add
add
add
lods
add
add
ja
in
fcompl
inc
or
loope
pop
pop
push
add
shl
ror
pop
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
add
pop
mov
int
add
add
outsl
add
add
xchg
push
add
add
push
fisubrl
cmc
shll
mov
ja
add
imul
lcall
leave
push
xor
shr
sub
pop
ret
push
ror
pop
push
push
shr
lea
pop
mov
push
push
push
lea
push
push
call
pop
jns
add
push
sti
add
add
add
add
lea
jae
add
mov
add
pop
add
in
pop
add
push
push
push
push
lea
push
push
push
call
mov
xchg
sarl
cwtl
add
add
loopne
repnz
add
add
arpl
add
movsb
out
add
mov
add
movsl
iret
mov
cltd
idivb
push
in
ret
add
jb
add
mov
movsb
pop
add
aad
add
xchg
mov
add
in
in
lcall
push
push
push
push
call
add
add
lods
add
mov
pop
call
loope
xchg
jge
mov
add
add
xchg
push
add
add
mov
imul
orl
xchg
stos
add
xchg
push
add
fisubs
fsubs
xchg
pop
jmp
into
push
mov
lock
push
push
push
push
call
mov
add
sahf
push
movb
add
fs
je
mov
xchg
push
add
xchg
ret
lcall
jbe
popl
push
mov
add
add
aad
add
sub
pop
push
testl
push
push
push
lea
push
lea
push
call
mov
stos
push
clc
add
add
shll
int3
stos
add
mov
add
mov
mov
in
add
shrb
add
icebp
sub
pop
addl
push
push
not
pop
call
push
shr
sub
pop
mov
push
lea
push
call
xchg
mov
add
add
lods
mov
push
enter
add
push
lock
add
add
add
loopne
loopne
mov
sub
pop
pushl
push
lea
pop
push
push
push
push
push
push
push
lea
push
push
call
js
loope
add
add
stos
push
add
test
add
push
cltd
add
add
mov
mov
in
jmp
add
add
decb
fildll
add
mov
clc
filds
add
sub
pop
push
call
push
dec
shr
pop
cmpl
jne
push
inc
not
pop
pop
push
inc
dec
pop
pop
push
push
call
jno
je
lret
add
fdivl
jge
add
push
mov
add
mov
repnz
mov
in
clc
lcall
push
sub
rol
pop
pop
leave
push
dec
shr
pop
ret
push
push
push
push
push
push
push
push
call
movsl
gs
movsl
add
jp
add
add
add
ret
mov
mov
pushf
add
add
stos
add
pop
rcl
add
jne
pushf
arpl
mov
push
mov
add
mov
jl
add
popa
jae
jnp
jo
out
add
nop
sub
pop
push
mov
push
push
push
push
push
push
call
jle
push
add
jo
add
mov
cmc
add
fsubs
popf
rolb
test
mov
add
movb
out
into
addr16
jmp
add
hlt
pop
xchg
add
cmc
idivb
call
add
mov
mov
arpl
xchg
in
call
push
push
pop
push
push
push
push
push
push
push
call
movsb
les
add
mov
stos
pop
sbb
push
add
add
add
jo
les
out
mov
shll
add
test
call
add
mov
mov
add
add
iret
int3
mov
sti
add
push
xchg
mov
faddl
lcall
push
lea
pop
push
movl
push
dec
sub
shl
pop
push
call
push
dec
pop
push
push
push
lea
push
call
add
add
mov
xchg
popf
add
imul
add
push
xchg
mov
add
and
lea
sub
shl
shl
pop
subl
push
sub
pop
cmpl
jne
push
lea
inc
pop
pop
push
rol
shr
inc
pop
pop
pop
push
lea
push
push
push
lea
push
push
push
push
call
fiaddl
aam
add
mov
fwait
clc
mov
sti
xchg
jne
mov
add
stc
add
add
pop
mov
call
add
add
lods
add
add
pushf
push
xchg
rcrl
popa
out
add
loopne
add
mov
add
cli
mov
add
in
loopne
lcall
leave
push
push
push
push
lea
push
push
push
lea
push
call
mulb
add
in
in
lahf
in
test
lods
add
shll
add
jl
mov
mov
repnz
fists
call
add
int3
mov
rcll
add
mov
cld
popf
lahf
add
add
sub
pop
ret
push
push
xor
pop
mov
push
push
push
push
call
push
pop
push
lret
cltd
mov
cwtl
jnp
test
add
add
cld
add
add
mov
mov
mov
add
add
add
rolb
mov
int
pushf
add
add
xchg
outsl
aam
ljmp
lods
js
add
add
lcall
cld
push
lea
shr
pop
push
push
push
push
push
call
icebp
pop
add
fisttpll
jge
add
add
add
add
nop
add
mov
faddl
jl
test
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
push
push
call
sarl
mov
mov
add
fwait
add
movsb
xchg
mov
push
loopne
add
imul
add
mov
pop
bound
add
popf
xchg
add
mov
fcomps
mov
push
sub
shl
pop
lea
sub
push
lea
push
push
push
lea
push
push
push
call
add
mov
cli
mov
push
pop
aam
add
add
add
add
add
add
sub
pop
mov
shr
push
push
lea
push
push
call
icebp
je
cmp
add
jbe
mov
pop
add
into
fsubr
mov
push
adcl
add
mov
add
fildl
add
add
lods
pop
into
movsl
fiaddl
gs
add
jmp
add
sub
pop
add
mov
push
push
push
call
push
mov
add
hlt
xlat
jns
iret
pop
add
push
gs
push
scas
pop
idivb
subl
push
add
scas
add
sub
pop
mov
add
push
rol
add
lea
pop
add
mov
push
push
push
push
call
roll
add
loope
xchg
js
in
call
add
pop
aam
add
fdivs
add
cli
add
popf
add
mov
enter
fs
pop
fcomps
add
jmp
in
lock
lcall
nop
nop
nop
nop
push
push
call
add
add
add
shll
mov
add
jnp
add
pop
add
add
mov
add
ficompl
lret
leave
cwtl
sbb
icebp
mov
add
lcall
pop
outsl
jne
push
inc
pop
cmp
jne
push
push
push
lea
push
push
call
out
mov
mov
js
add
pop
add
jle
add
addr16
repnz
add
push
add
cmpsl
add
scas
add
mov
roll
lahf
add
faddl
jne
add
ret
add
add
int3
jge
test
add
jecxz
test
out
data16
imul
in
in
in
lcall
inc
adc
add
add
add
pushf
dec
xlat
imul
jmp
mov
push
lea
push
push
push
push
push
push
push
call
rcl
add
test
imul
hlt
jns
imul
mov
incb
add
out
mov
add
mov
add
lcall
push
or
leave
rol
pop
sub
jne
mov
push
push
push
push
push
push
push
push
push
call
negl
add
add
ficomps
push
add
out
jne
xlat
add
jmp
push
add
loopne
in
jbe
add
mov
jnp
add
pop
movl
push
sub
sub
pop
jmp
push
inc
pop
mov
mov
push
lea
push
push
push
push
push
push
lea
push
push
push
call
mov
add
hlt
xchg
filds
add
mov
pop
pop
add
movl
add
push
in
fdivr
lcall
cli
add
test
add
add
lea
push
lea
push
push
push
push
push
push
call
sarb
add
add
mov
lods
pop
mov
lret
mov
add
add
push
xchg
add
cmc
lret
lea
add
add
test
add
notl
jae
mov
test
data16
cli
js
add
mov
pop
mov
in
fcompl
add
add
add
std
push
push
push
lea
push
push
lea
push
call
add
iretw
movb
mov
add
lahf
filds
pop
add
les
push
add
jmp
add
add
cmpsb
lret
add
lcall
mov
add
push
lea
pop
mov
cmpw
jne
push
ror
add
add
ror
pop
mov
push
push
push
call
add
leave
add
push
mov
add
add
xchg
add
add
add
sub
pop
movl
push
push
lea
push
push
push
push
call
roll
je
jne
add
cli
mov
add
enter
add
enter
ja
mov
cld
test
hlt
jmp
push
add
mov
add
add
popa
add
into
add
add
addb
xchg
addb
add
rolb
add
fildl
filds
movsb
or
add
mov
adc
pop
pushl
pop
push
pop
mov
push
sub
pop
mov
push
rol
pop
mov
push
push
push
or
inc
add
add
sub
shl
pop
shl
pop
push
lea
pop
push
push
pop
call
cmpl
je
push
push
inc
shr
shr
push
xor
add
ror
shl
inc
dec
sub
xor
not
pop
shr
pop
push
shr
sub
sub
not
pop
push
call
push
dec
pop
cmpl
je
push
push
lea
add
xor
push
or
not
add
sub
sub
sub
rol
pop
lea
rol
pop
push
add
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
notl
out
push
add
pop
add
into
jne
lods
loope
add
add
add
add
add
add
movsl
mov
int3
add
cmpsb
cltd
add
jo
ficomps
pop
push
iret
add
addb
rcrb
add
bound
lcall
adc
add
push
push
push
push
push
call
test
push
add
xchg
fbld
jmp
push
mov
push
add
fwait
add
add
pushf
xchg
add
add
add
movsb
xchg
xlat
add
popa
pop
out
add
insb
add
cmpsb
pop
sub
pop
cmpl
je
push
push
lea
shr
push
or
not
add
not
sub
shr
pop
pop
push
sub
not
pop
push
push
ror
pop
call
push
pop
cmpl
je
push
push
sub
dec
shl
push
xor
add
dec
lea
sub
lea
lea
shl
pop
inc
pop
push
lea
push
push
lea
push
push
push
push
call
push
aam
add
push
jbe
add
arpl
mov
pop
add
add
push
add
lret
clc
add
mov
mov
stos
sub
pop
push
call
push
push
push
push
push
push
push
lea
push
call
push
add
add
mov
push
fistpl
add
out
jno
xchg
cmc
mov
stos
popa
add
add
loopne
addb
fldl
add
ror
add
add
add
add
add
loopne
loopne
lret
add
fcmovnu
test
lahf
xchg
stos
imul
lahf
cwtl
pop
xchg
aam
mov
in
loopne
cmpl
je
push
push
inc
shr
push
xor
add
add
sub
add
sub
rol
add
dec
pop
inc
pop
push
push
push
push
push
push
call
aam
jge
lds
push
scas
add
add
loopne
clc
lods
pushf
mov
aam
add
std
cli
add
addl
stc
add
jo
lds
call
lods
in
jb
lods
sub
pop
push
push
push
push
push
lea
push
call
mov
call
aam
outsl
add
add
arpl
shl
ret
jnp
int3
add
push
pop
js
fistpl
addr16
add
add
in
in
lcall
outsl
cmp
add
negl
cmp
or
int3
je
push
push
sub
sub
xor
push
push
pop
add
inc
sub
inc
lea
pop
sub
shr
shl
sub
pop
push
lea
push
lea
push
push
lea
push
push
push
push
call
lea
add
add
cwtl
nop
loop
add
add
add
clc
add
shl
add
pop
pusha
add
in
add
add
mov
cmc
fcmovne
add
xchg
cltd
add
mov
add
fstps
in
xchg
lds
loope
int
movsl
outsl
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
popa
mov
add
mov
add
add
add
lret
add
add
repnz
add
sub
pop
call
cmpl
je
push
push
xor
push
xor
add
shl
sub
lea
shl
pop
rol
dec
not
pop
push
pop
push
push
lea
add
pop
call
push
xor
pop
cmpl
je
push
push
sub
shr
push
and
add
lea
xor
sub
shr
lea
pop
shl
shr
pop
push
lea
push
push
push
push
call
je
add
iret
cmpsl
popf
hlt
pop
iret
mov
testl
jle
jecxz
stc
pop
movb
cltd
aam
add
add
add
test
imull
add
push
bound
leave
scas
movsl
test
push
push
inc
sub
pop
call
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
add
add
je
jne
insb
add
jmp
push
iret
jp
mov
add
aam
add
add
idivb
into
mov
mov
scas
shr
jns
mov
sub
pop
cmpl
je
push
push
shr
inc
xor
push
and
add
inc
xor
add
sub
shl
add
pop
add
lea
sub
pop
push
add
xor
pop
push
call
push
push
push
lea
push
push
push
call
rolb
stos
pop
add
jne
push
out
pop
stos
jno
ror
add
add
add
ja
add
cmpsb
cmc
xchg
add
pusha
add
add
js
sub
pop
cmpl
je
push
push
dec
push
and
add
sub
not
sub
pop
shl
shl
not
inc
pop
push
add
pop
push
push
push
call
adcl
leave
add
mov
nop
jno
mov
call
push
mov
add
test
sahf
add
in
clc
lcall
repz
fisubrl
add
lds
pop
xchg
mov
push
call
xchg
mov
shlb
jnp
outsl
cld
add
push
aam
add
aam
ret
add
in
movsb
add
in
mov
out
aam
scas
add
add
jmp
add
aad
add
lret
cmpsl
add
sub
pop
cmpl
je
push
push
dec
rol
push
sub
add
rol
sub
sub
pop
shl
rol
pop
push
ror
shl
not
pop
push
push
ror
shl
not
pop
call
push
pop
cmpl
je
push
push
sub
lea
push
or
inc
add
rol
sub
add
pop
sub
add
dec
pop
push
add
pop
push
call
push
push
push
push
push
push
push
push
push
lea
push
call
add
pop
lcall
test
xchg
jno
add
rcrb
popa
cltd
test
xchg
mov
fsub
pop
cmpsb
add
movsb
mov
add
pop
mov
negb
add
mov
jge
pusha
add
add
add
incb
shrl
add
push
add
mov
icebp
incb
add
rolb
add
jne
push
push
push
push
push
push
push
push
push
lea
push
call
add
cltd
mov
loop
add
stos
pop
lods
lret
pop
add
xchg
mov
add
add
add
out
add
sahf
sti
push
in
fsubl
push
add
lcall
inc
adc
shrl
rol
lret
movl
push
inc
add
pop
jmp
push
inc
add
shr
pop
xor
pop
push
push
lea
push
push
push
push
call
mov
add
add
fisttps
mov
shl
stos
movsb
mov
mov
xchg
add
int
add
mov
push
cld
sahf
add
test
jle
add
test
jne
out
add
add
adcl
pop
push
lea
push
push
push
lea
push
lea
push
call
xchg
add
fcmovne
mov
add
push
aad
fucomip
mov
mov
add
push
sti
pop
test
in
xchg
add
pop
add
add
add
sub
pop
pop
pop
push
lea
push
push
push
push
push
push
push
call
jae
pop
jne
outsl
add
add
aad
mov
mov
add
jae
icebp
bound
jl
add
out
add
add
loopne
lcall
push
dec
add
pop
ret
push
push
push
push
push
call
add
add
add
scas
hlt
add
enter
add
fldcw
out
loop
add
push
add
add
insb
add
add
lcall
in
push
push
push
push
push
push
push
push
call
cwtl
add
test
lods
add
rolb
rcl
xchg
add
loope
mov
fsts
ljmp
jb
fwait
out
stos
stos
push
add
shrl
ficoml
add
lcall
in
cmpl
jne
push
push
ror
add
not
push
or
not
add
dec
add
sub
pop
shl
xor
pop
push
push
push
lea
push
call
jne
pop
cld
mov
add
xchg
mov
add
pop
add
fisubrs
aad
pusha
lahf
add
scas
in
ja
push
add
add
jle
add
jne
movsb
out
add
mov
mulb
xchg
fwait
test
add
cld
fisubs
in
add
lcall
jne
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
mov
add
testb
jo
add
ljmp
lret
test
pusha
add
add
jnp
rol
mov
sbb
hlt
add
add
push
lea
lret
std
push
add
push
add
imul
mov
xchg
xchg
add
pop
call
push
dec
rol
shr
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
xchg
test
loop
aad
pushf
jl
scas
add
jecxz
mov
fst
add
add
cltd
imul
add
mov
add
ja
pop
jmp
add
mov
lods
add
add
enter
sub
pop
call
push
ror
add
lea
pop
jmp
cmpl
je
push
shl
sub
dec
rol
pop
cmpl
jne
leave
push
shr
pop
add
pop
push
push
lea
push
push
lea
push
call
add
imul
addb
cltd
test
add
push
add
add
add
add
add
add
add
add
pushf
add
mov
jae
mov
fs
pop
pop
push
add
rol
pop
pop
push
shl
pop
pop
push
xor
pop
leave
push
push
call
add
add
data16
xchg
clc
add
mov
push
push
clc
mov
pushf
add
mov
mov
xchg
roll
mov
out
mov
lahf
addb
cli
js
lcall
ljmp
add
outsl
sub
pop
add
push
push
push
lea
push
push
call
mov
mov
pop
add
xchg
ret
jns
xchg
pop
arpl
add
add
push
aad
in
in
lcall
push
push
push
push
push
push
lea
push
push
call
movsl
mov
mov
add
add
aad
pusha
std
add
push
add
mov
adcb
add
lahf
add
add
push
add
add
pop
pop
xchg
add
in
loopne
lcall
mov
dec
xor
rol
ror
pop
cmpl
jne
push
push
lea
sub
push
or
inc
add
dec
sub
not
add
lea
pop
rol
sub
sub
pop
push
inc
shr
inc
lea
pop
pushl
push
push
lea
push
lea
push
call
in
mov
jno
lcall
mov
jb
mov
add
mov
mov
mov
rolb
lds
jb
add
sub
pop
call
push
push
push
push
push
push
lea
push
call
add
stc
push
push
and
aam
add
cmpsb
push
add
mov
jp
add
sbbb
add
rol
test
push
ror
test
mov
push
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
pop
push
jae
pop
cwtl
add
add
rcll
add
add
add
stos
add
add
jbe
add
popf
add
in
fdivr
lcall
rclb
nop
add
pop
push
lea
push
lea
push
push
lea
push
push
lea
push
call
stos
movsl
add
ja
mov
add
scas
add
add
push
lcall
gs
add
mov
jo
out
imul
add
enter
cmc
add
add
fcomps
rcrl
add
push
rol
shr
shr
pop
cmpl
jne
mov
push
lea
inc
xor
pop
mov
push
inc
pop
push
push
push
xor
push
or
inc
add
dec
sub
dec
add
pop
lea
inc
sub
shr
pop
push
push
push
push
push
push
call
add
mov
add
test
pop
add
mov
fcompl
push
add
add
mov
add
push
add
mov
mov
push
add
fildl
add
mov
mov
xchg
iret
add
jne
roll
in
call
push
push
push
push
call
push
push
out
add
loop
incb
repnz
add
push
rorl
mov
mov
in
add
lock
add
test
in
out
in
enter
into
ror
mov
mov
add
sub
pop
call
push
push
push
push
push
push
lea
push
lea
push
push
push
call
push
roll
add
in
fiadds
loop
add
xchg
add
add
notb
push
scas
add
add
add
insb
add
out
out
add
add
pop
add
bound
push
rolb
scas
add
add
fmulp
in
div
addr16
mov
add
mov
xchg
out
lret
mov
sub
pop
call
push
push
inc
dec
push
or
not
add
inc
dec
sub
sub
ror
sub
pop
add
dec
not
add
pop
push
lea
push
push
lea
push
push
lea
push
call
add
movsb
jge
add
xorb
cmpl
xchg
lret
xlat
sahf
add
addr16
mov
add
bound
mov
sub
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
data16
add
test
add
add
add
int
cmc
movl
mov
add
add
add
mov
add
add
add
out
add
hlt
add
add
push
cld
stos
add
nop
mov
add
lcall
xor
add
push
pop
call
push
push
inc
ror
push
sub
add
shl
not
shr
sub
ror
sub
pop
inc
pop
push
dec
rol
pop
pushl
push
sub
add
dec
pop
call
push
lea
push
lea
push
call
fldl
add
add
mov
imul
fiadds
jb
ret
add
pusha
mov
fadds
std
nop
repnz
sub
pop
call
push
push
sub
push
sub
add
shl
sub
sub
sub
sub
pop
rol
pop
push
push
push
lea
push
lea
push
push
call
jle
xchg
add
fidivrs
add
push
add
loop
lea
add
add
add
int
rcll
je
leave
jecxz
mov
lcall
jne
push
add
pop
call
push
push
push
push
push
push
push
call
lcall
stc
pusha
add
add
loope
pop
add
push
in
mov
mov
xor
sub
mov
loope
add
roll
mov
lcall
lcall
shrb
lock
push
add
sub
lea
inc
push
push
pop
add
add
dec
sub
add
inc
lea
pop
lea
shl
inc
inc
pop
push
inc
xor
pop
pushl
push
shl
pop
call
push
push
lea
push
lea
push
call
add
orl
push
add
add
add
jl
std
add
add
add
add
imul
mov
movsb
jge
jns
mov
lock
lcall
shrb
rcll
xor
add
lea
ror
sub
add
pop
add
sub
ror
lea
pop
push
push
push
lea
push
push
push
lea
push
lea
push
call
rolb
push
lret
in
xlat
add
add
mov
push
add
stc
jbe
mov
push
add
add
add
add
add
mov
stos
add
add
add
mov
add
add
add
add
add
add
pop
pushl
call
push
lea
push
push
push
push
lea
push
push
call
push
push
pop
add
add
add
repnz
add
add
xchg
mov
sar
add
in
xchg
cli
shl
lcall
lods
xlat
cltd
jnp
mov
add
xchg
add
add
add
add
add
fstl
jno
in
in
call
push
push
sub
shr
sub
push
or
inc
add
inc
sub
shl
pop
shl
pop
push
sub
pop
pushl
push
push
call
fidivl
popa
mov
add
add
imul
jecxz
rcr
add
add
add
ja
add
fst
mov
scas
enter
add
mov
add
popf
cmpsl
add
leave
add
add
lcall
add
add
pop
call
push
lea
push
push
push
push
push
lea
push
call
shr
add
add
add
pop
jle
pop
int
je
xlat
add
xchg
add
add
leave
xchg
push
add
add
add
jno
mov
in
add
popl
in
lcall
shrb
mov
push
dec
sub
shr
push
and
add
dec
sub
add
pop
ror
rol
add
pop
push
xor
add
pop
pushl
push
lea
push
push
push
push
call
std
mov
add
ficompl
scas
add
add
mov
add
cwtl
jmp
add
pusha
add
incb
add
sub
pop
call
push
push
push
push
push
call
add
jecxz
jl
cmpsb
cld
out
in
add
add
add
push
clc
sbb
add
jmp
add
aam
scas
jae
add
pop
add
test
xchg
mov
add
fst
test
stos
add
stos
movsb
roll
test
push
add
add
lcall
shrb
xor
or
xor
enter
push
or
inc
add
lea
rol
xor
sub
sub
lea
shr
ror
pop
sub
dec
rol
pop
push
push
push
lea
push
push
lea
push
call
addr16
add
xchg
mov
xchg
pop
add
mov
add
push
add
xchg
add
push
add
outsl
jecxz
adcl
add
movsb
jbe
add
int3
add
add
add
lahf
lods
mov
lahf
imul
je
sub
pop
pushl
push
xor
rol
shl
shr
pop
call
push
sub
dec
xor
pop
call
push
push
rol
add
push
push
pop
add
sub
sub
add
sub
add
pop
ror
shr
pop
push
lea
push
lea
push
lea
push
push
push
call
jmp
fwait
add
addl
add
test
add
rorl
add
into
mov
xchg
lock
mov
int3
loope
add
add
add
pushf
add
addb
addl
add
fnstsw
push
pop
pushl
push
push
push
lea
push
push
push
push
push
push
call
mov
clc
in
jmp
hlt
call
lcall
add
push
clc
xchg
shlb
addb
loopne
mov
add
test
je
pop
add
mov
add
sub
pop
call
push
push
push
push
push
call
mov
add
add
add
add
mov
notb
add
jbe
mov
add
pop
outsl
fcomip
lret
ret
jmp
add
add
xchg
lea
push
shr
pop
push
call
push
push
rol
not
push
xor
add
shl
ror
sub
lea
shr
sub
dec
pop
rol
shl
shr
pop
push
inc
xor
pop
pushl
push
push
push
push
push
push
push
call
add
in
mov
add
add
loop
jl
mov
add
mov
imul
stos
incb
xchg
loopne
xchg
mov
add
xchg
outsl
movb
pop
clc
add
add
mov
cld
add
aad
lea
out
js
roll
xchg
sub
pop
call
push
push
push
push
push
push
call
fidivs
add
add
add
cmpsl
sbb
push
insb
js
cmc
mov
add
popf
push
loopne
lcall
cli
std
add
add
ja
add
push
shlb
addr16
push
mov
enter
add
fwait
mov
add
ljmp
cmpl
add
fildl
add
shrb
mov
out
shl
push
or
inc
add
rol
sub
not
not
add
pop
lea
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
pusha
cltd
add
sti
std
add
fcmovnu
jnp
cmc
pop
test
in
icebp
mov
sti
add
push
mov
add
icebp
les
xchg
je
popf
add
sub
pop
pushl
push
add
dec
add
pop
call
push
xor
inc
pop
call
push
push
sub
push
sub
add
sub
sub
not
ror
shr
pop
xor
pop
push
push
push
push
push
push
call
jge
stos
mov
add
push
loop
lods
add
mov
mov
les
add
add
pop
mov
popa
sbbl
add
add
cmc
add
xchg
pop
pop
ljmp
pop
pushl
call
push
rol
rol
dec
not
pop
call
push
lea
push
push
push
call
add
movsl
add
add
imul
add
pop
call
les
insb
push
mov
add
add
mov
fsubs
add
add
xchg
nop
jne
in
lock
lea
push
push
inc
not
xor
push
sub
add
sub
ror
shr
lea
sub
add
pop
shl
pop
push
push
lea
push
push
push
call
arpl
loope
ret
add
add
mov
movsb
lds
mov
test
add
add
add
jo
add
mov
stc
pop
mov
add
jns
jo
addb
or
pop
call
push
push
ror
pop
call
push
push
add
sub
push
sub
add
not
add
shr
sub
inc
not
pop
sub
sub
lea
pop
push
rol
add
xor
pop
pushl
push
shr
shr
add
sub
pop
call
push
ror
inc
shr
pop
call
mov
push
push
sub
add
push
push
pop
add
inc
sub
sub
shl
pop
shl
sub
xor
shl
pop
push
push
call
mov
xchg
add
add
add
fldl
test
mov
add
jne
fcoms
add
add
jne
in
clc
pop
pushl
push
pop
call
push
push
push
push
push
push
call
addl
add
add
pop
fbstp
fsts
les
xchg
add
jbe
in
push
add
mov
add
jns
hlt
movsb
add
add
add
std
mov
push
test
movsl
lds
pop
cltd
int3
iret
testl
jnp
out
add
add
in
in
pop
pushl
push
lea
push
call
lock
ja
out
jecxz
add
cmpsl
mov
ljmp
add
jne
add
stc
add
add
lea
add
arpl
hlt
fldl
add
sub
pop
call
push
push
xor
not
push
xor
add
shr
dec
lea
rol
sub
rol
pop
add
pop
push
xor
sub
dec
pop
pushl
push
push
push
push
call
add
xchg
popa
add
add
xchg
add
pop
add
add
add
mov
fs
lock
mov
add
sbb
fwait
incb
lods
test
push
fiadds
in
bound
push
fdivp
add
jne
sti
pop
add
pop
call
push
push
push
sub
add
sub
ror
sub
pop
rol
rol
not
sub
pop
push
push
dec
push
push
pop
add
dec
sub
rol
sub
sub
pop
dec
pop
push
push
lea
push
push
lea
push
call
lods
lods
xlat
add
add
not
push
mov
add
addl
add
fldcw
mov
enter
add
fisubrl
pusha
sub
pop
call
push
push
lea
sub
push
or
inc
add
sub
add
not
sub
lea
ror
pop
inc
pop
push
rol
add
pop
pushl
push
ror
lea
sub
pop
call
push
dec
pop
mov
lea
push
dec
lea
pop
lea
push
push
push
push
call
ror
add
ljmp
mov
mov
mov
add
int
out
add
jmp
xchg
add
lcall
push
push
push
push
push
push
push
push
push
push
call
push
lahf
push
sahf
arpl
add
mov
popa
add
mov
pushf
add
loope
add
sti
add
enter
in
les
pop
push
push
push
push
push
lea
push
push
push
push
call
fldl
add
out
ror
push
add
pop
push
ja
add
jp
add
mov
add
add
push
fdivrs
add
lcall
add
push
lea
push
push
push
push
push
call
add
pop
out
lods
add
add
mov
cwtl
popl
clc
add
mov
add
test
push
stos
mov
in
call
push
push
not
rol
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
jle
mov
out
add
add
mov
add
mov
add
jo
add
add
fldl
add
add
add
add
je
add
jl
mov
in
fcompl
add
ret
pushl
push
lea
push
call
mov
add
sahf
movsb
add
pop
pusha
add
out
mov
mov
sti
mov
add
roll
sub
pop
push
call
push
push
not
push
sub
add
rol
dec
sub
sub
lea
add
pop
xor
pop
push
rol
pop
pushl
call
push
push
push
call
add
add
push
add
push
js
mov
push
js
mov
test
arpl
pop
add
jecxz
aad
lods
stos
add
roll
out
add
movsl
popl
lcall
rclb
shl
shl
sub
pop
mov
pop
push
dec
pop
dec
jne
push
push
push
call
mov
mov
add
ljmp
je
add
mov
leave
into
test
mov
jge
add
add
into
into
push
add
int3
mov
sub
pop
jmp
push
lea
pop
call
push
push
sub
sub
push
push
pop
add
inc
sub
sub
pop
ror
pop
push
push
lea
push
push
lea
push
push
push
call
add
add
jae
add
lea
out
filds
add
add
add
mov
mov
add
push
add
bound
mov
sub
pop
pushl
push
xor
shl
pop
call
push
sub
dec
pop
push
push
shl
pop
call
push
push
lea
push
push
push
lea
push
call
xchg
bound
cld
cmpsb
clc
add
add
add
push
add
movsl
add
nop
add
add
add
movsb
ret
add
add
push
notl
add
add
into
lock
out
sub
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
xchg
add
mov
push
lods
add
mov
push
cli
fadds
stos
mov
add
add
add
jns
mov
fimull
jge
in
add
movl
addr16
pop
lea
push
push
sub
xor
xor
sub
push
push
pop
add
rol
dec
rol
rol
sub
xor
pop
add
not
pop
push
sub
add
pop
pushl
push
dec
add
pop
call
push
not
pop
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
out
fldl
push
mov
pop
loopne
add
je
pop
lods
mov
push
sti
add
jno
mov
filds
jnp
xchg
add
add
add
scas
rolb
add
pop
loop
push
iret
mov
fs
xchg
out
cmpl
add
testb
add
sub
pop
call
push
push
sub
inc
add
push
and
add
shl
sub
sub
not
rol
pop
shl
pop
push
pop
pushl
push
push
push
call
add
cld
xchg
pusha
iret
add
pop
push
mov
add
hlt
out
fildl
clc
add
add
add
iret
xchg
add
roll
add
iret
clc
data16
lds
cltd
add
add
imul
add
add
sub
pop
call
call
push
add
add
pop
mov
push
push
push
push
call
add
add
stc
mov
je
in
fcmovnu
test
mov
mov
push
pop
lods
cmpsb
jae
add
out
addl
add
xchg
outsl
shl
test
add
xchg
js
add
mov
fdivrl
mov
loopne
cld
add
outsl
add
xchg
add
add
add
sub
pop
lea
push
push
rol
dec
push
and
add
lea
inc
add
not
sub
sub
add
pop
rol
lea
shr
dec
pop
push
sub
add
xor
pop
pushl
push
add
inc
pop
call
lea
push
ror
shl
pop
push
push
push
push
push
push
push
push
push
call
call
call
mov
xchg
xchg
xchg
add
lds
les
cld
mov
add
add
add
add
jne
add
lock
sub
pop
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
in
add
in
add
add
add
mov
add
cli
add
push
int
je
clc
add
lret
add
mov
push
cmpsl
movsb
add
fdivr
lcall
jne
push
push
shl
shl
sub
sub
push
or
not
add
add
not
sub
not
sub
rol
pop
dec
pop
push
ror
pop
push
push
shl
add
sub
pop
call
push
push
add
push
push
pop
add
add
sub
inc
dec
pop
not
ror
ror
ror
pop
push
shr
add
dec
xor
pop
pushl
push
push
push
call
add
stos
sti
add
fucomp
mov
fisubrl
push
repnz
mov
add
xchg
add
add
aam
add
repnz
cmpsb
mov
lahf
cltd
arpl
test
add
xchg
jp
mov
xlat
mov
add
sub
pop
call
push
push
dec
pop
call
push
push
shr
push
xor
add
xor
not
not
sub
shl
ror
sub
pop
add
shl
not
pop
push
push
call
bound
add
add
stos
push
mov
push
add
pop
pop
add
call
mov
jb
add
cmpsl
fadds
imul
lret
push
sub
mov
add
sub
pop
pushl
push
xor
pop
call
call
push
push
push
push
call
add
add
mov
add
add
add
fsubl
int
stos
push
adc
add
jmp
jne
in
mov
mov
fs
add
test
jnp
mov
lret
push
pop
pop
add
lcall
xchg
add
push
xor
pop
pushl
push
sub
pop
mov
push
lea
push
lea
push
push
call
push
out
add
jl
cmpsl
loop
mov
insb
popf
xchg
add
mov
fisttpll
aam
add
add
stos
add
add
mov
xlat
hlt
add
add
add
add
aam
add
mov
jmp
add
add
in
sub
pop
jmp
push
push
lea
shl
xor
push
or
inc
add
shr
not
add
rol
sub
sub
rol
sub
pop
sub
ror
sub
inc
pop
push
ror
add
sub
lea
pop
pushl
call
push
push
lea
push
push
push
push
push
push
call
mov
data16
mov
imul
add
fstp
pop
add
scas
lret
mov
pushf
add
add
inc
lea
add
je
mov
jge
in
into
cmp
mov
mov
push
out
mov
jmp
jne
add
push
lock
add
add
xlat
add
mov
add
jle
stos
adcb
nop
lea
push
lea
push
lea
push
call
add
add
testl
add
add
in
push
nop
icebp
add
add
scas
filds
add
mov
xchg
xchg
jp
add
lock
pop
add
lcall
shrb
inc
enter
rolb
sub
call
push
and
add
shr
not
lea
rol
sub
lea
pop
inc
pop
push
add
shr
pop
pushl
push
add
inc
inc
not
pop
call
push
push
push
lea
push
push
call
addb
roll
icebp
rcrl
fdivrl
mov
mov
add
mov
add
add
add
add
sti
je
add
or
add
mov
add
lods
shl
xlat
add
sub
pop
call
leave
push
lea
push
push
lea
push
push
call
incb
cli
fwait
xchg
pop
add
add
add
add
add
nop
movsb
ljmp
push
je
repnz
mov
fisubrs
add
sub
pop
add
push
add
pop
pop
push
push
push
lea
push
push
push
call
add
add
lret
push
mov
add
jl
add
mov
mul
push
lods
repnz
js
add
fistpl
imul
xchg
mov
test
stos
lds
fisubl
add
lcall
pop
push
lea
push
call
jp
cltd
add
div
leave
add
fcompl
rolb
xlat
je
jns
ret
pusha
fbld
jmp
mov
divb
lret
cmc
jne
sahf
lahf
je
hlt
jno
add
add
mov
add
shlb
fwait
add
adcb
push
cld
cmpsl
add
sub
pop
pop
leave
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
jecxz
add
add
push
in
pop
lds
fadds
add
add
add
aam
enter
mov
test
rclb
je
add
add
jmp
jae
out
add
add
xchg
mov
add
add
aam
fistpl
out
push
add
mov
pop
add
add
jmp
add
les
push
lea
push
push
push
push
push
call
add
add
push
add
mov
add
jns
hlt
ror
mov
sahf
add
push
ja
lods
push
add
add
jo
imul
addl
add
add
into
popf
add
push
add
push
add
push
xchg
nop
xchg
mov
xchg
add
push
push
call
xchg
add
ret
pop
mov
cwtl
imul
shll
data16
jae
int
push
xchg
je
jl
fldl
sub
pop
leave
push
ror
pop
ret
push
push
sub
sub
pop
mov
push
push
lea
push
push
call
xchg
add
mov
pusha
jb
add
xchg
bound
fsubrs
loop
mov
out
xchg
mov
add
roll
movsl
pop
add
clc
in
movb
repnz
add
add
add
add
hlt
call
jae
mov
mov
negl
add
lcall
lcall
jge
add
test
inc
and
push
add
inc
shr
pop
jmp
push
push
lea
push
call
enter
add
mov
clc
out
jbe
out
add
add
push
mov
push
stc
jae
jge
roll
add
mov
rcll
sahf
mov
cli
pop
jne
add
std
add
mov
jns
out
add
add
pop
nop
add
add
in
mov
mov
lcall
inc
or
mov
aad
mov
out
push
push
call
push
mov
add
mov
mov
out
rorl
test
aam
jge
pop
mov
add
hlt
add
push
enter
mov
mov
push
lcall
and
xor
push
shl
add
not
pop
xor
push
push
push
push
push
push
push
push
push
push
call
shr
add
movsb
add
add
stos
stc
pop
add
add
add
push
xchg
xchg
test
add
jns
xchg
test
xchg
pusha
mov
add
push
enter
imul
add
iret
mov
sar
enter
stos
fs
jle
mov
arpl
add
lcall
rolb
push
push
push
lea
push
push
push
call
add
insb
add
pop
add
outsl
add
fcoml
pop
add
add
fiadds
add
add
dec
call
fiaddl
mov
dec
push
inc
sub
pop
sub
jmp
push
inc
shl
pop
sub
pushl
push
rol
sub
inc
pop
pop
push
rol
add
add
pop
sub
cmp
jne
push
shl
rol
pop
mov
push
lea
push
push
call
cmpsl
test
add
out
push
stos
mov
cmpsl
cmpsb
add
mov
testl
loope
add
push
add
add
jle
add
jns
int3
ljmp
push
lods
add
lcall
dec
cmp
push
call
add
addr16
test
in
add
add
popa
movsl
mov
cli
lea
cwtl
add
add
add
sti
add
xchg
scas
add
cmpsb
fmul
mov
push
add
jecxz
mov
add
add
repnz
pushf
in
int3
lcall
clc
pop
sub
mov
push
lea
push
lea
push
push
call
std
cmpsb
cltd
add
les
add
pop
bound
add
repnz
bound
rcrl
mov
mov
aad
add
bound
call
adc
add
add
jmp
shl
not
pop
add
push
rol
add
sub
pop
sub
push
add
lea
add
add
pop
pushl
pop
push
not
sub
pop
shr
push
xor
not
pop
and
push
push
push
push
push
lea
push
push
lea
push
push
call
test
pop
stos
xchg
rcrb
mov
add
add
add
add
xchg
add
mov
add
lcall
cmpsl
jo
int
mov
roll
add
add
imul
push
sub
pop
sub
push
shr
inc
pop
cmp
jne
push
inc
lea
pop
leave
push
push
push
call
jmp
int3
add
add
add
dec
add
call
add
add
out
stos
jmp
mov
pop
pusha
add
xchg
mov
je
push
add
lahf
test
out
add
icebp
addb
outsl
stos
add
add
outsl
addb
iret
sub
pop
ret
push
ror
add
add
pop
push
mov
push
push
push
push
push
call
in
mulb
jle
mov
add
iret
int
into
in
add
mov
add
add
in
lcall
in
in
lcall
cld
push
add
dec
sub
add
pop
push
push
lea
pop
push
push
push
lea
push
lea
push
push
push
push
call
jp
nop
int3
mov
jle
jns
cld
in
add
cli
mov
leave
roll
mov
mov
int3
add
add
add
leave
mov
push
add
add
sub
pop
push
push
lea
dec
pop
push
mov
push
pop
lea
push
lea
pop
sub
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
gs
add
sbb
shrl
idiv
add
enter
xchg
sti
mov
xchg
stos
movsb
add
cwtl
outsl
jbe
add
js
add
icebp
push
add
push
hlt
add
fldcw
push
add
add
repnz
popf
add
add
bound
sub
pop
mov
push
push
lea
push
lea
push
lea
push
push
push
call
add
push
add
add
mov
add
popf
add
mov
mov
insb
xchg
add
add
jno
add
faddl
add
fs
add
mov
add
xchg
pop
movb
incb
mov
in
jo
xchg
cld
add
add
add
add
lock
adc
lea
push
push
lea
push
call
add
add
lahf
cmpsl
add
popa
filds
add
sahf
add
mov
add
add
add
cwtl
add
jbe
add
add
add
cld
add
repnz
pop
add
mov
push
add
lcall
fimull
add
add
push
push
push
push
push
push
push
call
cmpsb
clc
add
add
xchg
jge
add
movsl
insb
bound
addb
ret
fdivs
add
scas
add
xchg
movsl
push
add
fsub
icebp
add
bound
ficoms
mov
pop
dec
and
add
lcall
jnp
push
push
push
call
jecxz
std
add
add
xchg
add
in
mov
add
add
gs
xlat
testb
stos
mov
call
mov
add
add
enter
std
cli
add
out
add
add
mov
xlat
rol
add
jmp
add
in
hlt
pop
add
push
push
push
push
push
call
cmpsb
lret
add
jle
add
aad
mov
in
add
add
mov
stc
shr
mov
loope
popf
into
int
scas
xchg
jl
add
mov
jbe
leave
pop
sub
pop
xor
mov
push
rol
pop
and
push
lea
push
call
add
add
rolb
add
test
xchg
fwait
add
add
add
xchg
jecxz
pop
add
add
imul
lds
add
in
jns
mov
jno
add
add
add
pusha
add
fldlg2
add
jge
add
add
rolb
adcl
lea
push
push
push
push
push
lea
push
call
add
add
jge
loope
jge
xchg
leave
shl
leave
mov
add
add
add
pop
add
imul
out
hlt
testl
in
add
testb
mov
addl
in
jno
iret
cmc
ljmp
in
scas
test
rolb
add
sub
pop
inc
push
pop
cmpb
jne
push
push
lea
push
push
lea
push
push
push
push
call
fildll
mov
int
add
int3
add
mov
add
mov
jo
pop
add
add
pop
add
add
iret
add
xlat
add
add
vaddsd
xchg
add
jne
add
add
sub
pop
add
cmp
je
push
ror
add
dec
pop
add
push
push
push
lea
push
push
call
xchg
add
add
out
mov
add
add
pop
add
stos
stos
add
shr
add
mov
jge
imul
test
mulb
movb
lea
data16
add
stos
sub
pop
cmpl
jne
xor
push
lea
push
push
push
push
call
lods
pop
fildl
cld
in
add
add
cld
loope
add
xchg
mov
lcall
pusha
push
testb
add
loop
add
subl
add
mov
loope
in
in
pop
pop
push
add
sub
ror
pop
pop
pop
push
lea
push
push
push
lea
push
lea
push
call
add
ret
rorl
stos
add
add
add
stc
fistps
mov
bound
add
add
mov
add
stos
add
test
mov
push
enter
add
popa
call
faddp
add
jge
add
xchg
sub
pop
pop
pop
push
pop
leave
push
push
call
jb
add
add
shll
cld
out
enter
add
add
lret
add
add
xchg
add
pop
je
arpl
mov
pop
add
js
mov
stc
add
mov
xchg
pop
imul
add
add
mov
jnp
mov
push
sub
pop
ret
push
sub
shl
inc
pop
mov
push
push
lea
push
push
call
std
clc
int
test
add
mov
mov
mov
mov
popf
add
js
push
add
xchg
jnp
in
repnz
cmc
mov
jle
cltd
push
addr16
testb
add
lcall
push
or
incb
faddl
sti
add
pop
push
push
rol
sub
pop
push
add
push
ror
inc
add
pop
mov
testw
push
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
xchg
xchg
arpl
add
add
pop
popl
add
add
add
jge
lret
add
push
xorb
add
add
cltd
add
add
in
fcompl
push
rol
ror
pop
pop
mov
push
push
push
push
push
call
mov
add
jo
add
add
jmp
cli
push
jmp
add
xchg
mov
push
jns
loopne
add
add
push
data16
roll
mov
mov
add
jle
roll
rolb
mov
sub
pop
push
push
inc
pop
call
xor
push
push
push
push
push
push
push
lea
push
push
push
call
stos
fld1
popf
add
xchg
add
lea
add
movb
insb
add
add
add
push
addb
add
mov
add
cmpsb
add
mov
add
add
out
mov
add
add
add
imul
add
sub
pop
pop
push
sub
sub
pop
pop
pop
push
sub
pop
pop
pop
push
inc
not
pop
leave
push
push
push
push
push
push
push
push
call
bound
clc
out
add
js
mov
data16
fildll
add
js
push
gs
add
pop
add
mov
out
add
in
loopne
ret
push
sub
ror
ror
add
pop
push
push
push
push
push
push
push
push
call
add
add
add
je
fdivrs
cmc
gs
jb
lret
push
add
cwtl
add
cli
add
rcr
add
mov
in
add
add
sahf
pop
push
in
add
add
add
fstl
add
imul
je
in
in
lcall
in
add
push
push
call
add
mov
lods
add
add
mov
add
mov
add
push
mov
mov
fwait
ja
add
jmp
push
mov
shl
add
jecxz
fneni(8087
insb
incb
jae
test
cmpsb
in
test
lods
pop
pop
add
insb
outsl
roll
ret
xchg
sti
add
mov
in
clc
lcall
push
push
push
push
push
push
push
push
push
lea
push
call
pop
add
ja
push
lock
add
leave
push
stos
pushf
jecxz
xchg
out
add
add
sahf
add
cmpsl
aad
out
pusha
jno
jp
lahf
add
xchg
add
lds
push
push
ror
pop
mov
push
lea
push
push
call
add
in
leave
mov
test
xchg
mov
mov
out
push
mov
idiv
jae
rcr
add
jb
repnz
cli
push
add
sub
pop
push
pop
push
push
push
push
push
lea
push
push
push
call
jns
add
je
addl
xchg
add
push
push
jae
add
test
xlat
add
out
add
js
add
shrb
add
jecxz
add
mov
xchg
fcompl
mov
ret
add
add
add
nop
sub
pop
lea
push
push
push
call
add
add
mov
shlb
movl
add
add
jno
jmp
lock
add
jmp
subb
pop
int
out
je
shrl
jecxz
loop
add
add
add
add
roll
add
add
add
out
repnz
mov
sub
pop
sub
mov
push
sub
xor
pop
shr
push
xor
lea
ror
pop
add
mov
push
pop
add
pushl
push
inc
pop
popl
push
add
inc
add
pop
mov
push
lea
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
pop
xlat
mov
jecxz
xchg
add
add
stos
xchg
xlat
cmpsl
add
gs
mov
add
sti
add
pop
jno
add
ljmp
sahf
mov
clc
add
pop
fsubrs
in
fcomps
stc
xor
push
dec
lea
pop
lea
push
pop
mov
add
push
lea
push
lea
push
push
push
push
push
call
fldl
scas
lock
xlat
lods
add
push
jnp
mov
fstps
add
shrb
icebp
nop
add
pusha
add
pop
add
imul
add
test
in
lcall
rclb
mov
pop
lcall
aaa
add
add
mov
addb
test
clc
loope
jno
mov
lods
add
add
add
xchg
jo
out
jp
add
mov
roll
pop
mov
add
jp
in
lock
lcall
rolb
push
push
push
push
push
lea
push
lea
push
push
call
add
xchg
add
mov
add
out
xchg
fs
add
cmpsb
push
andl
add
arpl
add
lret
shl
ret
push
xchg
add
les
pusha
loop
cmpsb
lret
jb
cmpsb
jp
add
jp
add
jnp
add
les
loope
add
mov
jecxz
pop
sub
pop
nop
push
push
push
push
lea
push
push
call
scas
add
mov
add
movsl
mov
add
lahf
add
add
mov
in
shll
mov
xchg
sbbb
add
sarl
rcr
ljmp
imul
add
add
sub
pop
xor
push
rol
not
add
pop
nop
nop
push
lea
push
push
lea
push
push
call
out
add
repnz
mov
add
mov
add
test
add
scas
icebp
cwtl
add
lahf
outsl
cmc
icebp
add
add
pop
jae
mov
jle
mov
lahf
add
add
push
add
add
mov
push
push
pop
sub
pop
inc
push
push
lea
push
push
push
push
lea
push
push
push
push
call
jno
jnp
add
mov
test
add
add
mov
push
cli
add
aad
rolb
in
jmp
lcall
jle
pop
add
loope
add
add
add
lcall
out
lret
fiaddl
add
pop
add
sub
pop
nop
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
loopne
add
add
flds
arpl
mov
xchg
mov
add
mov
add
fdiv
mov
mov
add
std
add
mov
push
lea
add
addl
fimuls
fnstsw
stc
add
fistpll
in
loopne
lcall
cmpb
jne
push
rol
pop
add
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
xchg
jge
aam
mov
sti
add
add
mov
add
xchg
fcomip
mov
add
pop
add
sbb
xchg
fcom
add
rolb
pop
mov
add
mov
add
add
add
add
add
out
add
xchg
mov
out
add
stos
sub
pop
nop
push
push
push
lea
push
push
call
mov
add
lock
add
add
xchg
add
add
jne
add
add
jle
add
out
ja
mov
loope
int3
bound
lock
push
add
xchg
jb
push
add
pop
js
add
je
mov
popf
nop
pop
std
lea
push
xor
pop
cmp
je
nop
push
push
push
push
push
lea
push
push
call
push
cltd
aam
test
rclb
stos
shll
loopne
out
stos
add
jecxz
test
in
pop
jmp
lods
in
mov
add
mov
add
add
addb
inc
pop
inc
nop
push
push
push
push
call
add
add
add
add
addr16
add
add
gs
movb
fldl
push
add
call
lods
add
mov
call
sub
pop
nop
cmp
jb
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
bound
add
add
insb
xchg
stos
add
lahf
in
add
add
jp
jae
jle
fstpl
hlt
add
add
lea
lcall
rclb
shll
test
jge
aaa
test
pop
call
lock
ret
test
adcb
lea
aam
add
imul
xchg
cmpsb
cmpsl
jge
test
add
pop
test
pop
add
fisubrs
mov
jb
mov
add
add
push
jp
mov
add
mov
add
in
lock
jmp
mov
push
add
sub
rol
pop
add
movzwl
push
lea
add
add
pop
mov
push
add
dec
pop
add
push
xor
pop
mov
push
ror
add
inc
add
pop
xor
xor
push
xor
dec
add
sub
pop
shl
push
lea
push
push
push
call
aad
add
add
xlat
add
push
add
add
lds
out
out
add
movb
test
int3
add
add
pop
add
push
mov
lods
lcall
in
lock
xor
push
push
call
addr16
lret
mov
roll
add
mov
arpl
add
jb
out
add
mov
add
ret
add
cmpsl
add
mov
pushf
mov
add
mov
sahf
outsl
add
in
rcl
out
add
mov
in
std
addl
add
loope
push
lea
push
push
push
push
push
push
push
call
sar
xchg
in
mov
add
add
add
push
add
sti
mov
push
add
add
fwait
data16
jo
lcall
in
loopne
lcall
dec
nop
add
mov
xchg
push
push
lea
push
push
lea
push
call
jbe
loop
scas
jp
add
imul
jp
movsb
clc
test
add
cmpsb
jecxz
cli
add
add
outsl
xchg
popf
push
movsb
popa
mov
add
cli
jb
push
add
add
add
in
add
jo
mov
iret
into
jmp
rolb
enter
add
push
sub
pop
shl
xor
push
push
push
push
push
push
push
lea
push
push
call
je
mov
movsb
add
xchg
sub
add
int3
imul
fildll
add
add
jb
add
addb
fwait
add
sub
pop
mov
add
push
add
shl
dec
not
pop
pop
push
add
ror
pop
pop
pop
push
dec
pop
pop
leave
push
lea
push
push
push
push
push
push
push
push
call
mov
pop
cmpsl
add
add
lods
jae
add
mov
pusha
fcomi
mov
mov
mov
incb
mov
fcompl
or
push
lea
push
lea
push
push
push
push
call
add
add
jmp
loopne
add
add
ja
pop
pop
hlt
jae
mov
add
fisubs
movsb
lcall
call
cmp
xchg
lods
cmp
lret
push
push
push
call
add
js
add
lret
add
add
add
mov
test
add
lea
sti
pop
add
add
add
add
add
add
mov
xchg
mov
xchg
lea
sub
pop
mov
push
pop
push
push
sub
pop
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
add
call
sbbl
xchg
aad
add
add
add
add
fwait
push
add
add
add
scas
imul
movl
add
add
add
add
movsb
mov
mov
testb
add
add
jl
jbe
add
rolb
sub
pop
push
mov
push
push
call
shl
add
lods
rcrb
jns
add
lret
add
fadds
add
jns
into
add
test
in
lods
add
fiaddl
add
scas
cld
add
jmp
add
jmp
pusha
jo
add
lods
mov
lcall
adc
fimull
je
push
xor
add
pop
mov
push
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
add
mov
jno
loopne
loope
testl
add
cmc
add
add
mov
add
mov
add
add
add
lock
sbbl
in
fcomps
testb
mov
notl
aam
mov
push
shr
add
shr
dec
pop
mov
inc
push
xor
add
pop
cmp
je
push
lea
pop
test
je
push
lea
push
lea
push
call
nop
add
add
add
jbe
pop
gs
ret
add
insb
add
gs
popl
jae
add
add
mov
add
lods
scas
popf
addl
std
cld
mov
add
int3
filds
test
add
add
mov
sub
pop
mov
push
push
push
call
in
arpl
mov
add
add
add
faddl
push
loope
push
add
add
add
add
vpcmpeqb
add
add
push
clc
cltd
stos
add
add
sahf
fwait
mov
arpl
add
add
add
fisttpl
lcall
push
push
call
add
hlt
add
fadds
out
lds
add
mov
mov
addl
add
jle
pop
shl
loop
add
mov
mov
nop
add
add
jecxz
add
push
les
mov
sub
pop
cmp
je
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
push
add
cmpsb
add
pop
jl
fstp
lret
mov
jno
test
add
test
add
fsubr
nop
mov
out
add
jns
popf
clc
jo
add
arpl
scas
jae
cwtl
gs
fidivs
popa
out
add
add
add
push
add
add
mov
push
imul
hlt
add
sub
cwtl
add
jecxz
sub
pop
test
jne
push
ror
pop
xor
pop
push
lea
push
lea
push
lea
push
push
call
add
mov
imul
add
roll
add
mov
mov
mov
jo
pop
jecxz
ljmp
add
add
add
push
out
add
add
aam
je
add
in
in
lcall
push
dec
pop
pop
pop
push
rol
pop
leave
push
push
call
leave
add
scas
mov
mov
cltd
push
add
xchg
testl
std
jo
pop
mov
mov
add
gs
xorl
cmpl
int
sub
pop
ret
push
push
push
lea
push
push
call
jmp
add
add
mov
mov
add
add
mov
test
jp
push
jp
add
push
jmp
testl
xacquire
ja
jl
filds
pop
in
mov
add
xlat
add
in
jle
add
push
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
test
out
test
cmpsb
test
out
rol
add
jnp
lds
lods
outsl
cmpsb
cmpsb
lcall
add
mov
cmc
addb
jp
in
fcompl
push
sub
add
pop
cmp
jne
push
inc
add
pop
lea
mov
push
inc
not
pop
test
je
push
lea
push
call
bound
pop
in
loope
add
pop
add
movl
add
in
push
jno
mov
add
add
add
je
add
outsl
scas
push
add
cmc
xchg
add
cld
add
add
add
add
ljmp
add
mov
in
addb
jp
add
lcall
push
push
push
lea
push
call
add
add
sti
add
xchg
rclb
shr
add
xchg
add
jae
lret
in
jno
add
sub
pop
add
push
lea
push
push
call
ljmp
add
xchg
add
aad
mov
add
add
jbe
cld
jb
add
add
icebp
add
hlt
mov
add
shlb
add
jae
add
les
imul
lods
add
mov
sub
pop
cmp
jne
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
add
mov
push
in
arpl
lods
add
mov
bound
icebp
add
in
add
cld
add
ret
in
fcompl
inc
add
jecxz
pop
test
je
mov
push
push
push
push
push
push
lea
push
call
sbb
js
popa
add
popa
sarl
add
add
xchg
ljmp
loop
add
lods
add
je
add
add
add
add
cld
push
mov
pop
add
push
lea
ror
pop
cmp
je
push
not
pop
jmp
xor
push
ror
shl
pop
pop
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
add
lcall
add
add
jnp
add
mov
into
mov
fists
cwtl
add
add
repnz
add
add
loop
add
je
sub
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
lock
mov
add
out
add
sti
add
jl
add
lods
xchg
add
out
mov
add
jae
add
add
add
push
rol
add
pop
pop
push
pop
leave
push
not
pop
ret
push
rol
pop
lea
push
push
push
push
call
popf
out
xchg
pop
out
xchg
add
pop
je
add
popf
pop
push
pop
test
add
int
add
add
add
mov
lds
add
add
jno
add
in
shlb
jmp
jle
add
scas
mov
add
in
add
add
in
lock
lcall
pop
push
not
ror
pop
pop
push
lea
push
push
push
call
in
add
jo
int
icebp
insb
jp
sahf
icebp
aad
mov
mov
icebp
enter
shr
add
test
fsts
cmc
xchg
arpl
outsl
jge
add
sub
pop
pop
push
lea
push
push
push
lea
push
push
call
add
out
pusha
add
mov
loopne
lods
cwtl
mov
idiv
add
jnp
push
in
std
push
add
jecxz
cld
mov
jmp
add
fsub
sub
pop
leave
push
push
push
push
push
push
call
add
add
xchg
add
push
mov
movl
add
out
add
add
mov
cld
add
jl
in
nop
test
movsb
jns
fists
add
addl
add
add
add
add
enter
add
lcall
or
push
push
push
push
push
push
call
pushf
add
out
add
add
add
xchg
add
add
push
jns
xchg
jb
add
in
loop
add
mov
push
push
add
add
repnz
mov
shrl
add
jno
out
jnp
mov
call
xor
add
shl
sub
pop
pop
push
push
push
lea
push
call
mov
out
cmc
add
iret
add
mov
jmp
je
sahf
add
push
add
mov
mov
pop
fisubl
clc
add
add
enter
add
mov
pop
add
std
push
imul
fldl
add
lock
lcall
push
push
push
push
call
lods
jae
add
test
mov
add
mov
pop
cmc
add
push
jp
shll
imul
jmp
shlb
add
lods
loope
movsb
sahf
xchg
lds
lcall
push
push
push
call
loop
add
xchg
lods
stos
add
div
add
mov
add
mov
add
add
clc
data16
js
add
jecxz
vmovq
add
pop
add
add
std
repnz
leave
lcall
fiadds
mov
add
les
jns
ror
add
add
sub
pop
pop
push
ror
pop
leave
push
push
push
push
call
imul
lahf
add
push
imul
in
gs
add
cmpsb
lods
popf
fwait
icebp
mov
test
mov
add
add
mov
add
add
add
incb
pop
enter
pop
ret
xor
cmp
mov
cmp
xor
adc
and
adc
dec
cmp
push
or
adc
clc
cmp
xor
adc
jb
adc
mov
add
std
rolb
mov
jge
jb
xor
push
jns
leave
data16
out
inc
leave
xchg
leave
je
ss
push
les
hlt
insb
sub
adc
jmp
cwtl
rolb
inc
mov
in
and
sahf
rclb
mov
inc
adc
add
das
add
mov
scas
jb
jae
or
enter
add
call
push
mov
push
adc
xchg
dec
adc
or
mov
push
mov
and
jo
repnz
dec
in
mov
jbe
push
cmpsb
push
xor
test
jno
stc
arpl
popf
ds
xchg
test
insl
jo
sahf
fisubs
dec
inc
push
std
add
test
repz
in
or
loop
or
andl
stos
sbb
stos
cmp
das
xor
jns
pop
lcall
jo
stos
cmp
sub
repz
pushl
cmp
cmc
cmpsl
aaa
or
hlt
stos
push
mov
repz
rcr
mov
pop
rcrl
jg
imul
ds
mull
jl
cli
and
cmc
pop
sbb
mov
cmpsl
in
jns
jp
fyl2x
in
mov
or
test
clc
sbb
repz
jl
push
imul
push
bound
sti
cmp
xchg
xchg
loop
dec
js
ret
lea
cmp
orb
lea
xlat
push
mov
test
popf
pusha
inc
dec
fwait
mov
xchg
in
popf
adc
mov
inc
xchg
shlb
gs
adc
dec
fimuls
push
xchg
test
push
aad
add
out
jb
inc
les
add
test
and
sub
out
xchg
push
inc
mov
xor
enter
sbb
out
test
mov
push
lret
inc
xacquire
repnz
int
push
xchg
loop
xchg
cld
sti
decb
gs
push
push
stos
dec
or
cwtl
filds
xor
fwait
jns
sti
shrl
xor
jp
scas
sub
das
hlt
and
push
and
inc
xchg
das
jp
cli
pop
xchg
inc
or
mov
lahf
fsubrs
mov
sbbb
add
fnclex
outsl
fcoms
cwtl
pop
shll
sbb
or
gs
orb
cld
cmp
mov
lods
mov
lods
xor
or
cltd
and
xlat
ret
add
pop
gs
push
divl
sbb
fbld
cwtl
xchg
stos
or
add
jle
mov
fstpt
mov
add
andl
fwait
sub
mov
jnp
dec
loop
xor
and
or
aas
jno
sbb
add
xlat
pop
cmp
jl
jbe
fstl
push
in
pop
xchg
pop
dec
jae
and
out
out
lahf
je
rorb
call
mov
lret
xor
stos
sbb
shrl
mov
and
pop
scas
mov
icebp
aad
in
push
sub
xor
je
out
fs
callw
or
adc
pop
div
outsl
mov
pop
sbb
repz
out
dec
sti
sbb
dec
push
push
xchg
enter
jmp
mov
mov
mov
bnd
das
leave
adc
cmpsl
mov
cmp
sarl
int
xchg
repnz
jns
dec
lret
pop
pop
jl
loope
clc
lods
jp
cmp
divb
cmp
and
push
jne
stc
movsb
daa
hlt
movsl
push
cltd
lahf
pop
or
lret
xor
daa
lret
dec
movsb
es
loop
dec
scas
inc
cmpsl
mov
mov
push
pop
loopne
pop
ljmp
test
sbb
xor
mov
cmp
testl
adc
stos
jno
outsl
loop
mov
mov
xor
jb
insl
int
jle
pop
lahf
testb
and
xchg
adc
es
mov
in
or
pushw
push
repz
out
repnz
jp
insl
xchg
push
loop
sub
inc
loopne
dec
test
pushf
mov
pop
loopne
icebp
pushf
sbb
test
xor
xor
mov
shlb
push
xchg
addr16
leave
mov
dec
aas
pusha
in
jae
iret
sbb
clc
inc
test
leave
cs
test
dec
popf
test
inc
fs
cmpsb
push
push
in
inc
adc
adc
xor
stc
pop
sbb
dec
fxch
xchg
dec
lods
fildll
sub
cli
push
jg
pop
adc
jb
sbb
add
adc
add
pushf
and
mov
mov
dec
pop
cltd
dec
mov
lcall
xor
push
in
fisttpl
and
outsl
leave
xchg
xchg
sbb
or
dec
mov
test
xchg
rorl
fsubrp
in
loopne
add
adc
and
fs
jecxz
scas
int
cmp
jo
ret
jno
out
inc
shlb
jbe
mov
push
clc
dec
xchg
mov
jecxz
out
repnz
cmp
lods
sub
push
xor
out
sub
jecxz
jge
and
hlt
push
in
jae
jno
lds
mov
fadds
adcl
push
imul
pop
mov
mov
rorb
push
inc
sub
cli
repz
leave
mov
psubb
sahf
popf
xchg
aaa
inc
add
sbb
add
shl
pop
leave
ficompl
js
movsl
inc
cmpsb
cwtl
jge
mov
inc
cmc
mov
pusha
jno
pop
or
test
or
minps
dec
sub
mov
xchg
push
push
cld
adc
xchg
lds
xchg
mov
pop
test
pop
jnp
aam
daa
jb
or
xchg
icebp
aam
push
bound
dec
xchg
pop
pop
inc
pop
or
and
lods
adcl
test
cmpsl
sbb
or
scas
push
push
sahf
cs
call
jg
mov
popa
mov
jne
push
lar
or
sysexit
mov
test
jecxz
arpl
xchg
fisubrl
and
movsb
arpl
sbb
mov
incb
jne
push
sbb
sub
pop
std
in
xchg
and
aad
inc
add
xchg
in
add
fidivrl
fwait
mov
jmp
sub
add
mov
cmp
sub
inc
cmpsl
pushf
xor
shll
adc
adc
cld
out
movswl
jl
cmp
aaa
push
aaa
xchg
fxch
mov
test
int3
adc
out
mov
xor
adc
sbb
jae
push
sub
mov
add
cmp
mov
xor
aad
nop
insb
bound
lods
es
and
mov
arpl
mov
enter
lahf
js
sbb
inc
insl
lea
ret
dec
ja
mov
push
fnstenv
lock
das
lret
xor
sbb
popf
cmp
add
inc
inc
sub
cmpsl
sbb
pop
sub
or
ja
aad
adc
ret
push
ss
and
test
xor
dec
test
aaa
pop
and
scas
sbb
repnz
fwait
pushf
cmp
mov
lock
lods
test
and
cs
cmc
cld
je
mov
xchg
adc
shlb
iret
js
aad
push
out
fisttpl
push
jnp
mov
dec
dec
push
pop
inc
cmp
push
hlt
cmp
push
in
push
lret
mov
lret
add
dec
add
mov
shrl
out
xlat
stos
or
rol
cmpb
out
jge
pop
js
add
xchg
cmp
or
dec
dec
lock
in
fmuls
dec
ds
jg
loopne
enter
pop
clc
or
xchg
sahf
sbb
scas
aaa
cwtl
mov
loopne
repnz
jb
dec
dec
and
inc
cli
inc
inc
sbb
sbb
inc
or
lcall
iret
stos
inc
sub
je
lock
mov
addr16
aaa
push
mov
in
sbb
dec
loope
add
bound
jae
iret
jae
mov
std
jle
add
fcompl
inc
aad
sub
mov
sbb
in
out
mov
jg
and
stos
and
pop
cli
movsb
test
popf
aaa
xchg
xchg
mov
add
mov
les
fsubrl
stc
sub
adc
mov
mov
mov
lcall
jae
cs
into
icebp
repz
nop
mov
jp
test
pop
add
std
push
popa
add
jns
les
lods
insb
or
push
cmp
xchg
jne
inc
cld
icebp
xorb
inc
pop
aas
xor
xchg
add
or
pop
xchg
aam
dec
popa
jmp
lahf
cmp
lods
dec
mov
bound
daa
inc
pop
movsb
pop
mov
push
add
or
cmp
outsl
cmp
test
mov
ficomps
popf
mov
fiaddl
push
lods
mov
mov
lock
fldenv
add
push
lods
jno
stos
sbb
sub
cmp
fiadds
test
lods
out
and
xchg
cltd
or
fstl
in
push
pushf
in
pop
pop
cmp
clc
mov
push
jle
adc
cmc
incl
nop
inc
sub
lcall
subl
aam
test
jae
aas
xchg
inc
daa
add
fldenv
aas
aam
xor
das
add
xor
mov
mov
xchg
xchg
push
sbb
pop
sbb
adc
nop
cmp
mov
sbb
or
ficomps
pop
xchg
jnp
test
imul
push
jnp
pop
daa
xor
insb
jp
add
push
xchg
out
sub
dec
pop
pusha
enter
mov
mov
pop
xor
clc
push
xchg
pop
stos
call
inc
lea
push
jns
repnz
xchg
cmpsl
inc
ljmp
jo
loope
mov
adc
inc
negl
push
int3
iret
mov
gs
lahf
add
or
out
xchg
in
fimull
js
jb
pop
shr
mov
fistps
stc
pop
shr
dec
mov
stos
dec
lds
xchg
add
xchg
cmpsb
fsubrl
int
ret
xchg
and
jbe
popa
scas
sbb
shll
mov
movntps
cmp
mov
mov
inc
jnp
fcmove
test
outsl
icebp
or
ja
lret
and
xor
pop
leave
js
int3
cmc
fistpll
fcoml
sbb
mov
mov
popa
xchg
lds
mov
xor
movb
data16
jge
pop
dec
repz
add
pop
arpl
shrd
fdivrl
cltd
sti
pop
cmp
mov
cmp
ret
icebp
adc
fidivl
addb
cwtl
cmp
sbb
push
shl
lea
push
mov
mov
lds
dec
es
jbe
add
cld
ljmp
enter
inc
push
mov
push
pop
xor
cltd
in
ljmp
jmp
ret
xor
mov
das
mov
mov
inc
inc
pusha
or
cli
les
test
jle
ljmp
xchg
lods
dec
or
int3
mov
das
adc
xlat
fiaddl
cwtl
mov
mov
gs
or
loop
add
outsl
int3
stc
iret
cli
fcomip
mov
sbb
mov
ss
fadds
mov
cmpsl
mov
icebp
outsl
jb
mov
movsb
and
mov
stos
neg
pusha
ret
dec
jae
std
cmp
sahf
sbbb
fldenv
imul
pop
test
aaa
mov
cmc
push
sub
jg
jp
pop
jns
jp
jmp
lods
mov
nop
fwait
mov
repz
pop
push
mov
pop
aaa
lods
or
loope
or
loope
add
cwtl
decb
loop
andb
shrl
add
stos
xchg
daa
sub
push
scas
movsl
inc
scas
mov
xor
pop
sbb
xchg
roll
bound
pusha
mov
and
sub
mov
or
add
pop
xchg
lds
push
mov
cmp
jns
mov
sub
xchg
in
rcr
add
jmp
xchg
push
sub
pop
ja
jge
mov
xchg
mov
lret
sub
loopne
sub
inc
insl
dec
xlat
test
push
and
pop
fs
sti
pop
loop
sti
adc
pop
cmp
subps
pop
xor
xchg
sarl
jle
mov
and
lcall
mov
xor
jle
popf
enter
outsb
fimull
dec
inc
gs
clc
xorb
ja
lret
mov
cmc
fnstsw
lahf
jg
fcoms
mov
lahf
dec
jle
pop
scas
roll
out
rcll
xchg
imul
fucompp
sub
dec
fists
cmp
and
enter
cmc
sahf
pusha
addl
sbb
jo
xor
mov
mov
jb
jge
testb
mov
pop
mov
bound
jecxz
and
je,pn
aaa
jo
mov
mov
pop
mov
add
sbb
call
inc
jbe
lahf
adc
or
outsb
add
pop
push
sbb
decl
xchg
sbb
rcr
jge
xchg
add
xchg
and
movsb
xor
movsb
sub
xchg
subl
pushf
add
aam
cmp
test
nop
push
jge
lret
andb
loop
aas
mov
popf
push
push
call
lahf
fisubs
inc
popa
push
addr16
imul
lret
lods
je
gs
xchg
negb
fyl2xp1
push
loopne
push
push
pop
adc
lods
cmc
fs
add
outsl
and
cmp
cmp
popf
and
pop
sub
mov
sahf
cli
adcb
mov
inc
push
mov
pop
mov
mov
add
rcpps
cwtl
cmc
sbb
pop
inc
adc
repz
fistl
sub
in
push
pop
ret
enter
andl
pop
int
dec
fcompp
insl
cmp
roll
ljmp
sub
push
arpl
popf
push
arpl
fisubrs
lock
insb
pop
jge
inc
sar
or
arpl
mov
mov
andl
jl
popa
clc
outsl
cld
jne
jbe
loope
mov
sarl
add
je
jae
nop
leave
and
push
outsl
jg
lods
inc
cli
es
out
xchg
stos
ret
adc
or
add
ds
xor
push
rol
imul
lcall
cmp
or
and
xor
js
adc
cmpsl
into
cmp
jne
or
lock
fsubrl
adc
int
and
ss
js
add
or
test
cmpsb
dec
cmc
jge
mov
mov
mov
decb
cmpsb
or
sbb
outsl
icebp
in
xor
push
test
sbbl
mov
mov
hlt
daa
ret
bound
sub
loopne
xchg
mov
movsl
inc
aaa
test
lods
adc
or
cli
aad
jb
mov
clc
lret
xchg
fwait
mov
sbbl
loopne
lea
inc
sbbb
mov
je
imul
sbb
test
xchg
mov
jae
jle
mov
sub
lods
in
push
mov
push
shrb
mov
movsl
ljmp
jl
pop
hlt
pushf
jnp
inc
testl
mov
into
xor
sahf
scas
mov
inc
mov
icebp
adc
mov
cmp
andb
and
movsb
lds
adc
dec
dec
add
ljmp
push
cmp
ss
pop
push
adc
ja
outsb
fwait
xchg
jns
sub
cltd
aad
pop
pop
es
shll
inc
push
pusha
shrl
stc
mov
orb
repz
adc
adc
xchg
jnp
out
lock
stc
jns
cmc
lret
inc
fstpt
int
push
aas
pop
and
mov
xchg
pop
rcrb
push
xchg
cmpsl
pusha
mov
nop
ret
daa
cmovne
pop
mov
mov
movsb
dec
loopne
mov
or
xor
sub
fisubrs
scas
addr16
xchg
pop
mov
xchg
addl
hlt
popf
je
fwait
cmp
pop
movsb
aaa
les
addr16
mov
sub
mov
mov
push
ficomps
mov
jp
push
pop
test
nop
bound
pop
lret
je
mov
push
fstl
test
push
faddl
scas
sub
shrb
sub
xor
push
dec
or
aaa
pop
pop
add
adc
test
mov
mov
xchg
and
cwtl
jo
pusha
pop
sub
xor
jle
and
sahf
leave
push
call
jge
xchg
in
mov
jno
push
ror
mov
xchg
xchg
adc
push
jmp
iret
cmpsl
jnp
pop
cmc
in
mov
and
xor
jo
jl
mov
andl
in
dec
loop
adc
sbbl
mov
cmpsl
daa
in
scas
out
push
jae
push
stos
pop
mov
mov
ret
pushf
mov
jle
mov
std
aas
fwait
aad
daa
or
mov
sub
pop
mov
mov
push
cld
insb
inc
jnp
jbe
pop
jns
test
repz
mov
push
xor
std
mov
adc
jns
mov
and
jge
ds
xchg
xor
rcrb
fcompl
adc
out
push
xor
out
loop
iret
cmp
sti
in
jno
ds
fmuls
lea
xchg
icebp
mov
push
arpl
sub
cmc
add
hlt
and
repz
push
lret
sbb
fistl
filds
adc
ret
jp
ltr
int
cs
test
push
mov
mov
mov
sarl
xchg
push
mov
xchg
fnstcw
xchg
sub
lret
ja
add
out
pop
cltd
inc
inc
push
cmpsb
or
test
jo
cmpsl
divb
mov
lods
cmp
mov
xor
add
mov
jmp
xchg
sti
sbbb
movsl
out
fwait
enter
adc
fbstp
pop
leave
lret
pop
sbb
jmp
nop
or
xchg
insb
insb
dec
cmp
outsb
out
fsubrp
and
mov
pop
pop
jb
mov
and
xor
jmp
sub
shll
rcrb
cwtl
mov
pop
pusha
cmp
sub
jo
mov
aad
fisubrl
rorl
ret
imul
add
ds
mov
repz
push
pop
sarl
cmp
mov
lock
aaa
mov
push
cmpsb
loopne
and
xlat
sbb
fisubrl
push
xchg
sti
mov
sub
mov
xchg
mov
cmpsb
lcall
bound
movl
ds
xor
scas
ss
push
dec
lahf
mov
jg
js
and
dec
js
nop
dec
dec
sbbb
test
lret
push
sub
sbb
jmp
mov
rcr
int
movsb
test
adc
in
into
jg
jp
scas
out
faddp
mov
sti
ds
cmp
mov
sub
rorb
sbb
mov
mov
loope
xor
fcoml
addb
ret
mov
dec
test
in
jl
mov
in
ficoml
xchg
pop
subps
sbb
fwait
adc
or
ljmp
jbe
or
test
shrb
aam
cmpsl
inc
sbb
in
xchg
cwtl
mov
adc
push
xor
sub
or
shrl
push
ljmp
sti
pusha
imul
cmpsb
aaa
sbbl
add
xlat
cmp
sub
mov
and
bound
push
arpl
sub
and
sbb
inc
and
and
sub
inc
lods
fisubl
push
push
lret
das
jae
test
data16
mov
xchg
pop
das
mov
sbb
insl
sbb
cmc
ret
adc
or
outsl
push
xlat
sub
or
or
stos
push
lea
jnp
jmp
xor
out
negb
xchg
xchg
add
aad
and
dec
pop
outsb
int
add
and
xchg
pushf
jb
aas
and
dec
dec
and
addb
scas
and
inc
gs
cld
push
xchg
fnstsw
aad
mov
cli
push
adc
insl
jno
fucomp
xor
and
mov
or
outsl
test
vunpcklps
dec
mov
pop
data16
scas
mov
orb
mov
mov
mov
icebp
inc
sahf
aaa
push
fwait
xchg
ret
inc
xor
cmp
mov
lock
test
inc
fmulp
push
shlb
pop
push
std
or
std
lea
mov
or
mov
adc
test
cmpsl
fwait
push
in
insl
outsb
mov
and
or
sbb
jge
sahf
lods
mov
mov
jg
push
hlt
ds
icebp
adc
fistps
mov
push
subb
dec
subb
repnz
cmp
hlt
and
pop
cmpsl
jns
or
repnz
inc
push
lcall
sub
adc
lds
jbe
push
es
ljmp
fisubs
je
pop
out
js
xchg
adc
popa
mov
mov
scas
pop
inc
addl
inc
fiaddl
sbb
sarl
xlat
iret
data16
int
mov
mov
mov
nop
or
arpl
lods
xchg
lods
adc
test
mov
lahf
inc
in
mov
in
cmp
sbb
mov
out
aad
add
push
ret
jl
pop
pop
sub
push
mov
mov
mov
adc
shl
inc
jno
data16
scas
stos
aaa
loop
in
sub
fildll
in
fcompl
xchg
dec
nop
add
xor
mov
sbb
mov
js
lahf
xchg
stos
js
cmp
pop
lds
inc
adc
inc
nop
int3
or
call
std
stc
into
enter
push
bound
or
out
push
mov
insl
add
js
fcomps
push
pop
aad
sub
shrl
dec
scas
jo
btc
stc
pop
in
sbb
pop
xchg
mov
mov
je
insb
fidivrs
lods
lea
push
dec
and
dec
xchg
and
icebp
repnz
repnz
dec
adc
fs
lcall
add
nop
and
mov
mov
xchg
cld
js
mov
enter
or
xchg
sahf
fcomip
adc
out
adc
pushf
mov
pop
xchg
cld
adc
scas
nop
push
inc
mov
jle
iret
icebp
pop
pop
sub
cmp
loope
xor
xchg
adc
or
cltd
in
or
or
scas
add
lods
repnz
cmp
add
dec
xchg
fstps
jae
cmc
cmpsb
les
imul
cmpsl
data16
xchg
das
xor
inc
xor
xchg
rorl
dec
popf
mov
bound
sub
cltd
in
mov
in
dec
push
mov
jbe
xchg
sti
inc
out
jecxz
call
cmc
xor
out
mov
xor
out
mov
lea
popa
jo
sbb
int
pop
rorb
jb
adc
cmp
pop
mov
add
leave
fidivrl
jne
in
xor
adc
jge
movl
push
pop
dec
cli
and
dec
pop
or
adc
lock
lret
sub
jge
jmp
bound
jmp
mov
in
cwtl
fnstcw
fistpl
test
mov
sub
scas
cmp
xchg
xchg
outsl
pop
out
and
ret
xor
icebp
xchg
or
into
jle
aam
movsl
fnsave
sub
mov
or
mov
sub
mov
jecxz
repnz
pushf
cmpsb
call
sarb
push
sub
push
cmpsl
fcmovb
jnp
sub
jae
jmp
mov
clc
xor
adc
mov
in
sub
arpl
push
sarl
leave
mov
les
push
pop
dec
and
testl
idivb
test
dec
mov
je
push
mov
jns
inc
icebp
out
pop
sub
push
scas
ljmp
subl
rcrl
push
mov
bound
out
into
inc
push
jmp
in
sti
pop
inc
inc
mov
or
out
xchg
mov
jmp
and
sbb
sub
loopne
push
test
daa
adc
cmc
add
iret
inc
mov
jp
repnz
into
test
pushw
jmp
popa
aad
shlb
xor
or
xchg
pushf
or
cmp
xchg
push
cld
imul
mov
fld
fsubs
ds
filds
cmc
add
ds
mov
adc
mov
in
mov
nop
push
int3
imul
push
cmp
pop
sbbl
sbb
mov
shrl
stos
cmp
ja
dec
insl
mov
push
add
inc
add
fadds
call
jnp
mov
mov
iretw
mov
mov
stc
adc
ljmp
or
inc
push
out
arpl
sahf
sub
inc
aas
jecxz
pusha
pop
lods
cmp
xor
in
jb
mov
pop
or
aas
into
or
add
push
mov
adc
test
sub
push
push
sarl
fs
pop
ret
icebp
lods
rorl
xchg
int
push
inc
xor
mov
or
mov
dec
popf
in
mov
mov
inc
xor
mov
mov
imul
cmp
es
cmp
mov
mov
dec
add
or
decl
sub
fisttpll
jp
jg
push
das
dec
inc
and
cmp
xchg
cmp
sbb
in
or
in
pop
and
test
mov
mov
fcomip
push
pop
sarb
xchg
frstor
cmp
push
mov
xchg
cmpsl
fcmove
xchg
dec
ret
xchg
mov
repz
mov
outsb
clc
push
std
mov
repnz
aad
test
push
jecxz
cmpsb
fiadds
nop
andl
int3
mov
xor
testl
sub
jb
testb
sbb
les
std
pop
rcll
jno
mov
lret
test
push
mov
jl
jno
xor
dec
es
cmp
or
addr16
sub
call
fstpt
or
add
test
add
scas
push
movsl
andb
cltd
mov
std
fpatan
test
lds
add
clc
shl
in
mov
test
shll
cwtl
ss
mov
cltd
repnz
and
iret
aas
xchg
ja
mov
test
fwait
jnp
xor
xor
es
daa
stos
mov
xchg
fs
out
cmp
in
insb
ret
out
inc
xchg
loopne
mov
sub
inc
dec
mov
mov
or
mov
les
out
sbb
xor
jmp
xlat
push
cltd
mov
mov
cld
fcoms
fidivrl
outsb
sarl
stos
sbb
adc
xchg
cltd
push
in
xchg
fs
add
inc
test
sti
dec
jne
mov
push
dec
in
and
std
and
movsl
ds
xchg
scas
pop
je
mov
in
mov
jb
cmp
add
mov
dec
jno
xorb
bound
cli
in
stos
adc
loop
or
sbb
mov
das
inc
stos
jne
rcll
sub
icebp
fmuls
add
stos
dec
xchg
xor
push
imul
push
lret
and
mov
sbb
sub
inc
orb
insb
mov
jno
fstpt
pop
inc
scas
jne
insl
in
inc
std
add
add
inc
lods
and
cmp
sub
dec
push
lds
lret
and
sbb
jle
fcmovu
gs
in
dec
inc
daa
inc
xlat
pushf
mov
inc
inc
xchg
ds
shlb
sub
jns
xchg
stos
mov
inc
clc
sub
push
fs
lahf
hlt
mov
adc
sbbb
cmc
pusha
lcall
insl
sahf
imul
rcl
push
lahf
fadd
push
stos
add
sti
mov
cmp
enter
push
lea
dec
and
lea
ficomps
xchg
sbb
dec
jg
sbb
lea
test
bound
mov
les
jmp
ss
push
repz
xor
sbb
sbb
add
dec
fidivrs
out
shlb
dec
jns
dec
mov
push
mov
lock
pop
clc
sti
inc
out
dec
in
mov
std
pop
push
aam
aaa
inc
inc
sub
xorb
arpl
cli
inc
iret
jno
les
in
dec
cmp
mov
cmp
mov
mov
sbb
mov
imulb
jno
mov
rcrl
and
inc
sarl
fcoms
lds
fists
cmp
add
dec
push
lods
push
aad
mov
xor
repnz
shll
pop
jge
jge
dec
cld
mov
out
out
pop
insb
adcb
je
xchg
mov
add
mov
cmp
mov
loope
fmuls
sbb
dec
adc
aaa
mov
iret
xor
daa
inc
outsl
cmpsl
inc
adc
gs
sbb
popf
adc
inc
sub
shl
in
mov
rolb
fxch
xor
insb
enter
mov
loopne
push
inc
push
xor
dec
sti
add
loopne
jns
mov
movsl
cmp
lock
repnz
and
iret
cmp
aas
adc
push
sbb
loop
inc
jg
ficoms
jmp
sub
outsl
ret
fdivs
loopne
pop
mov
rcll
ret
test
dec
mov
ret
push
lods
lcall
mov
mov
and
stos
xchg
pop
cmp
mov
cmp
pop
insb
loopne
dec
fdivs
cld
push
ss
rcrl
dec
push
or
and
lret
std
jl
xchg
push
shl
jnp
jns
ficoml
scas
fwait
xor
jo
lods
add
mov
cltd
inc
cmp
pop
dec
cmp
inc
fwait
inc
sbb
fwait
dec
xor
leave
cmpsb
add
cli
insl
or
inc
clc
aam
mov
in
cmp
xlat
mov
inc
push
mov
and
jge
and
xchg
inc
fnstenv
and
fadd
int
dec
mov
adc
sbb
andb
sbb
cld
lcall
popa
scas
lods
push
push
cmpb
jge
cwtl
outsb
sahf
push
lahf
pop
repnz
push
xor
pop
add
pop
fld
in
lods
cmpsl
xchg
mov
cmp
dec
iret
pop
add
repz
iret
imul
dec
ret
mov
mov
test
test
in
mov
pop
jo
nop
mulb
pop
add
dec
mov
push
push
in
scas
push
aad
testb
mov
jae
in
movsb
test
scas
push
sub
es
mov
mov
add
fsubrl
xor
stc
mov
ss
movsl
pop
sbb
jg
subl
dec
push
cmp
test
mov
sbb
sbb
ret
mov
pusha
insl
nop
adc
pushf
jmp
jnp
stos
push
mov
cmp
mull
and
push
fwait
jns
xchg
rcl
pop
and
ret
sbb
jl
std
movsb
out
aad
ss
test
inc
add
pusha
scas
notl
in
fwait
fwait
mov
push
fimull
push
xor
dec
insl
sti
mov
nop
mov
xchg
push
sarl
std
push
scas
sbb
loopne
xchg
cmp
rolb
inc
cli
push
aaa
sub
mul
lea
sub
jb
outsl
mulps
loope
push
pop
jge
pushf
cs
ss
cmpsl
mov
jno
xchg
sub
popa
rorl
or
mov
sarl
xchg
int
inc
subb
inc
inc
ja
inc
call
rorb
push
xor
lock
and
sub
inc
and
adc
xchg
add
sbb
iret
inc
sbb
jo
iret
sbb
mov
pop
inc
mov
push
push
into
jl
paddsb
add
js
push
jb
mov
psubsb
rolb
lcall
or
and
out
stc
hlt
jne
sbb
or
lcall
mov
inc
adc
sub
push
mov
fisubs
push
xchg
cmp
xchg
es
cmp
sub
arpl
call
daa
sub
mov
cmp
push
adcb
dec
aaa
jle
movzbl
cmp
adc
pop
je
loop
div
out
sub
lods
xchg
xor
sbb
push
mov
roll
jp
mov
push
fxch
mov
push
sub
loope
idivl
sub
mov
mov
dec
mov
or
pop
pop
inc
dec
pushf
fiadds
icebp
mov
mov
lods
push
xor
mov
mov
push
popf
mov
into
push
add
cltd
sbb
sarb
dec
mov
cmpsl
inc
jmp
push
leave
cmc
jge
stos
lret
fldcw
sahf
shl
push
outsl
leave
push
push
cwtl
adc
clc
movsl
stos
or
jno
mov
add
out
lds
mov
jl,pt
cmp
mov
scas
sarl
pop
add
pop
jae
add
out
xchg
pop
inc
imul
rclb
inc
dec
iretw
xchg
int3
push
or
xor
in
mov
pusha
and
pop
sbb
xchg
push
pop
mov
jg
xchg
out
das
push
cli
loopne
scas
jo
mov
repnz
fsubs
pop
jg
dec
outsb
and
xlat
loope
in
cmpsl
mov
subb
mov
fidivrs
add
sub
mov
dec
cmp
call
push
mov
jo
imul
xor
jne
sub
imul
shlb
jp
push
sar
sarl
test
or
lret
mov
psubsb
arpl
jg
imul
bound
xchg
and
xchg
jl
repnz
in
test
incl
add
pop
aam
pusha
cmp
int
lcall
mov
mov
sti
lea
xor
xchg
mov
gs
cmc
mov
out
add
and
iret
mov
and
inc
dec
out
mov
repz
push
mov
stos
outsb
lcall
mov
cli
ja
dec
popf
shlb
fmull
sbb
mov
addr16
imul
cltd
aam
loop
imul
inc
push
arpl
mov
out
in
inc
je
ja
xchg
cwtl
inc
pop
cwtl
mov
fwait
icebp
push
popa
sub
jb
pop
into
lea
sbb
mov
xchg
mov
test
mov
pusha
imulb
push
rorl
inc
or
bound
xchg
dec
jg
push
push
fistpl
ficompl
adcb
jno
rcrl
push
pop
jp
xchg
imul
idivb
push
jo
jg
pushf
cli
daa
jo
push
adc
lret
sarb
sbb
shll
mov
es
inc
jge
sbb
sbb
hlt
sahf
cmpsl
sub
inc
mul
xor
insb
inc
xchg
lock
inc
mov
mov
xor
loop
and
stos
push
or
jle
or
rclb
add
and
xchg
movsb
sbb
jnp
mov
fadd
cld
xchg
loop
jmp
xor
or
leave
and
mov
cmc
or
inc
sbb
out
jnp
rclb
mov
popa
je
xor
push
dec
adc
sbb
adc
and
push
sub
add
mov
sti
pop
dec
testb
data16
test
movsl
aam
int3
inc
pop
sarb
mov
mov
hlt
dec
jp
scas
es
ljmp
scas
add
mov
lds
movd
sub
pop
imul
cmp
xchg
out
or
scas
stos
push
xchg
pop
pop
pop
or
mov
sahf
cwtl
adc
xor
lcall
add
mov
sar
xor
fld
add
inc
test
andl
outsl
or
sbb
pop
pop
sbb
sub
push
xlat
clc
push
adcl
jl,pn
lods
cli
in
fcompl
add
mov
and
lcall
xor
and
sbb
loopne
inc
mov
add
lahf
loope
xlat
es
add
movsl
popf
push
mov
or
push
sub
stos
push
repnz
pusha
into
jae
insb
stc
stc
xchg
pop
pop
mov
aad
pop
push
pop
int3
je
bnd
cli
ss
lds
xchg
push
add
out
pop
shl
or
inc
repnz
jb
mov
leave
ficomps
hlt
sub
jp
cmp
add
mov
ret
fidivs
sub
inc
jns
sti
mov
divb
out
adc
aad
stos
jl
cs
lods
xor
jno
stc
fbstp
mov
das
rolb
fwait
xchg
jmp
and
xor
sub
jo
and
pusha
pop
popf
fidivl
push
inc
sbb
dec
mov
mov
popa
sbb
cmp
ja
adc
bound
push
pop
out
mov
sbb
stos
cmp
jl
xchg
cli
fwait
sub
loop
imul
js
cmp
movaps
rcll
imul
jbe
push
data16
push
add
fmull
jle
shr
jge
rcll
pop
sbb
jecxz
xchg
cli
test
sbb
in
xorb
rcll
cmp
out
fdivs
dec
mov
fcompl
cmp
mov
fistpll
fcmovb
int
es
mov
adc
aas
mov
popf
mov
bound
add
sbbb
push
flds
cli
stos
xchg
jmp
sbb
inc
sti
xchg
adc
jb
aad
es
pop
fistpl
stos
outsl
dec
rorl
mov
cmp
jmp
pop
xchg
mov
in
inc
cmpsb
ljmp
xchg
sbb
inc
enter
dec
mov
loope
ja
add
stc
and
jo
stos
jge
add
mov
movsl
inc
ret
lea
js
sub
mov
sbb
cld
or
sbb
call
cmpsb
mov
popf
scas
xlat
lds
jns
shrl
sbb
dec
in
mov
pop
mov
imul
xor
pop
xor
dec
inc
dec
push
jmp
mov
ja
xor
sbb
std
shll
in
or
push
lock
shlb
fnsave
fisttps
xor
inc
shrb
push
xor
push
leave
push
mov
dec
sahf
ja
roll
lret
xchg
pop
int
inc
lds
fsubr
lcall
call
adc
clc
xchg
jg
fsts
sub
jg
pop
movb
dec
sbb
lret
lock
ficoml
test
aam
jecxz
cltd
rorb
retw
mov
cmp
cmp
cmp
xor
clc
orb
mov
repz
je
inc
in
insl
lret
int3
dec
fbstp
sbb
jbe
mov
ret
inc
and
ret
dec
aas
cmp
cltd
push
xchg
int
pop
fcmovnb
repnz
hlt
test
push
sti
fidivrl
das
hlt
sarb
xchg
add
adc
jge
jne
cmp
iret
mov
jmp
out
pop
jno
ficoms
sbb
outsb
imul
add
mov
or
jge
cmp
mov
int3
popf
dec
outsb
mov
hlt
lods
and
sbb
or
int
xor
ret
xchg
and
into
arpl
ljmp
mov
outsl
push
cmp
and
out
or
xchg
pop
mov
subb
das
dec
dec
or
cltd
fnsave
mov
hlt
and
pop
loopne
push
es
bound
lods
inc
jns
test
and
mov
scas
mov
inc
jae
push
arpl
adc
arpl
dec
add
inc
mov
mov
fwait
xchg
cmp
or
ja
sub
cmc
add
in
jo
cmp
test
or
icebp
ret
jmp
pusha
add
xor
dec
rep
sbb
rcrl
out
scas
add
pushf
ret
dec
jb
imul
cmp
fs
mov
mov
push
call
sub
hlt
cmpsb
stos
and
cld
loopne
icebp
lcall
cmpsb
dec
xchg
push
push
inc
mov
mov
insl
pop
push
and
lret
mov
xchg
ss
andl
cmpsb
cmpsl
lret
mov
flds
loope
negl
or
cmp
xchg
sbb
dec
ljmp
leave
mov
mov
decl
fwait
in
insb
notl
bound
mov
pop
xor
imul
in
cmc
iret
sbb
dec
icebp
cwtl
adc
mov
jle
into
out
jne
loop
xor
mov
test
mov
incl
mov
icebp
outsb
loopne
fidivrs
arpl
jecxz
cmpsl
in
sahf
sbb
add
rcl
cltd
xor
jbe
jnp
outsl
sub
loop
mov
mov
jg
jnp
dec
inc
pop
jl
xor
jae
adc
in
xchg
clc
je
mov
xchg
pop
fs
stos
inc
push
or
jp
cmpsb
inc
pop
add
scas
sub
aam
sbb
cmp
leave
push
sub
fidivrl
movsb
push
fists
shll
mov
call
xchg
neg
repz
sub
and
jecxz
xor
dec
loope
add
ljmp
out
xchg
mov
xor
pop
fs
push
dec
data16
xchg
mov
sbb
daa
iret
jo
xchg
adc
pop
out
lea
and
xchg
pop
xchg
cld
imul
cmpsl
mov
mov
and
jle
popf
jno
std
pushf
mov
dec
call
movsb
cmp
and
pop
inc
dec
inc
jl
enter
lock
dec
cmp
push
xor
pop
out
out
aas
fists
rorl
mov
dec
sbb
inc
mov
jne
mov
cmpsb
int
adc
sbb
rolb
sbb
lcall
rclb
mov
clc
mov
cltd
repz
dec
inc
sbb
jle
stos
jno
xor
inc
sub
mov
dec
mov
mov
xchg
mov
pop
ja
cmpsb
clc
imul
sub
ja
repnz
lea
movsl
mulb
aad
ljmp
mov
jle
fdivr
pop
and
adc
xor
add
es
mov
cmpsb
inc
jg
dec
pop
sub
popa
popf
cmp
push
xor
mov
cli
pop
jl
ret
and
ss
stc
fdivl
clc
test
popl
call
inc
pop
pop
lods
mov
fwait
and
das
push
cmp
push
test
add
inc
into
xchg
push
add
cmp
jge
jg
fs
mov
xchg
push
and
test
add
call
outsl
jnp
test
mov
pop
sbbl
push
jbe
ds
lahf
out
mov
sbbb
cwtl
mov
xchg
std
data16
or
push
ljmp
push
push
xlat
fcompl
test
jae
cmp
mov
stos
test
dec
inc
inc
adcb
push
std
mov
xlat
testb
movsb
and
leave
fisttps
pop
sub
adc
stos
ja
xchg
imul
push
ljmp
out
mov
mov
notb
inc
imul
les
cmp
xchg
je
mov
or
cltd
imul
shlb
jle
adc
int
sbb
ja
cwtl
mov
fwait
in
lret
mov
add
cmp
mov
sbb
push
push
fucomip
loopne
pop
repz
pop
inc
jl
pusha
les
cmp
mov
leave
mov
fldenv
cltd
mov
out
sub
xchg
xor
ds
or
pop
std
in
jp
sub
setnp
and
pop
add
xor
pop
mov
jbe
ret
and
scas
or
cmp
cmc
mov
and
movsb
rcrl
cltd
insl
mov
push
and
stos
and
fucomip
xor
negb
fdivrs
es
push
xchg
dec
rcr
rcrl
fsubrl
cmpsl
popf
int3
repz
cmp
enter
sti
pop
rep
push
push
hlt
daa
pop
cmp
and
mov
cmp
push
iret
cmpsl
jo
mov
repnz
jno
xor
aas
dec
pop
enter
dec
mov
xchg
inc
int
push
ss
adc
fdivrl
test
cmpsb
push
push
mov
clc
push
mov
std
mov
pop
adc
repnz
pop
bound
repz
aas
leave
jl
shrl
fs
pop
push
fwait
xor
sahf
stos
cli
scas
cmp
loop
xor
cmc
jb
mov
pop
add
out
jl
lods
dec
jle
notl
lea
dec
mov
jns
fs
cwtl
popa
mov
neg
dec
xor
mov
cltd
push
ret
mov
mov
outsb
inc
hlt
fistps
and
push
add
dec
scas
jo
shrl
clc
or
div
jno
push
xchg
repz
pop
ja
cmp
sub
stos
into
fbstp
or
adc
xor
jo
sbb
jle
jb
cmp
jbe
mov
or
mul
loope
add
and
pop
mov
es
sbb
cld
aam
sub
daa
jae
js
mov
xchg
pop
sbb
pop
movsl
sbbl
or
pushf
sbb
push
pushf
cmp
into
in
icebp
jb
pop
mov
aas
mov
mov
jmp
mov
xor
and
mov
cmp
jg
cs
push
cmpsl
add
les
insb
jo
insb
xchg
mov
fs
arpl
push
dec
add
jl
data16
sbb
test
or
pop
mov
ucomiss
popf
ss
roll
in
xchg
inc
sahf
rol
mov
xchg
mov
push
and
xchg
push
addr16
aad
xlat
icebp
popa
jg
es
add
shr
scas
sub
sub
into
mov
xchg
aaa
shl
rorb
jae
int
jp
add
inc
adc
nop
adc
push
pusha
loop
dec
mov
jl
mov
inc
lret
les
add
mov
mov
gs
daa
sub
daa
testl
int
push
push
mov
adc
pushf
xor
mov
lret
xor
push
inc
pop
loopne
flds
rclb
out
add
mov
in
sub
adc
mov
sbb
push
cltd
mov
scas
and
jecxz
dec
add
scas
scas
adc
aas
mov
add
jne
std
push
xor
rolb
cwtl
xorb
movsl
fwait
dec
repnz
scas
int3
stc
cmpsb
sbb
jo
adc
scas
mov
nop
adc
pusha
mov
mov
inc
push
ficomps
xlat
pop
sub
lock
add
loopne
sti
stos
loope
movb
xor
pop
ds
aaa
imul
mov
shll
jp
mov
call
mov
sbbb
cmpsb
pop
pop
out
or
and
sbb
mov
mov
dec
aam
mov
xchg
pusha
dec
movsl
mov
push
pushl
in
xchg
dec
movsb
and
iret
jg
popf
lock
mov
enter
jne
xor
aaa
bound
xchg
mov
push
std
jo
popa
or
or
movsl
or
gs
pop
pop
ds
movsl
or
jnp
or
xchg
inc
sbbl
call
xor
test
mov
mov
xlat
aam
negl
xchg
add
rorb
push
mov
and
in
adc
test
mov
sub
in
and
mov
sbb
xchg
inc
inc
sbb
ror
outsl
xchg
daa
in
cmpb
and
sbb
pop
xlat
mov
mov
cmp
push
mov
insb
sub
jae
mov
cwtl
xor
es
mulb
loopne
movsl
jp
jecxz
repz
jb
cwtl
pop
xchg
mov
ficoml
push
leave
add
sub
movsl
es
cwtl
out
sets
cmc
jl
imul
in
adc
pushf
mov
std
roll
jns
mov
add
jno
mov
cltd
sub
fisubrs
sahf
gs
inc
in
add
int3
mov
rcll
push
adc
aam
ret
subl
out
cmp
xor
cmp
je
sub
inc
pop
sahf
int
cld
sub
lret
mov
push
cmp
add
jo
aad
imul
popa
adc
mov
mov
cwtl
arpl
dec
xchg
dec
mov
mov
xlat
dec
hlt
pop
push
adc
clc
scas
iret
pop
gs
and
xchg
pop
inc
or
rolb
xchg
mov
repnz
push
jmp
xlat
imul
nop
punpckldq
cmc
shll
cltd
es
mov
sub
cmpsl
stc
ljmp
and
repz
fwait
loopne
dec
pop
push
sti
sbb
aad
fbstp
shlb
dec
out
std
in
mov
or
pop
mov
pushf
lcall
push
mov
xchg
jmp
fistpll
aam
ret
aaa
in
lcall
push
mov
adc
pop
mov
sbb
push
adc
fwait
movsl
mov
inc
and
jge
mov
mov
aaa
mov
xchg
cmp
or
pop
lods
icebp
cmp
dec
in
rolb
loop
jecxz
xor
mov
es
jmp
sub
test
cmp
testb
cmpl
and
pop
in
or
aam
mov
lret
test
and
les
lcall
inc
push
cmpsb
xlat
cltd
push
enter
or
mov
sub
and
push
mov
sub
jge
jne
xchg
xchg
sub
test
stos
xor
pop
data16
ljmp
pusha
sbb
jg
lock
jnp
add
mov
divl
lods
dec
push
out
into
and
mov
xchg
pop
xor
imul
ja
ja,pt
mov
aas
dec
adc
add
and
push
or
dec
push
mov
aam
push
jbe
mov
inc
insl
xchg
jge
sub
mov
lods
push
mov
mov
fwait
sbb
mov
stos
scas
insb
sti
inc
adc
push
sub
sub
xor
add
cli
loopne
push
repz
mov
movl
in
xchg
mov
out
sub
cmp
bound
xor
das
xlat
out
out
stc
sub
or
xor
xor
daa
or
fs
sbb
shlb
adc
dec
fimull
popa
arpl
mov
dec
iret
add
in
xor
aam
add
push
mov
icebp
lods
test
movsl
int3
inc
out
sub
std
ss
outsl
push
mov
or
divl
add
cmpsb
fldenv
pop
imul
rclb
cmp
pop
pop
add
push
push
jge
pop
in
rcll
mov
and
icebp
jns
imul
stos
dec
xchg
mov
loope
popf
fldt
pop
into
add
ljmp
cmpsb
out
sbb
in
cmpsl
mov
push
xlat
xchg
mov
in
dec
or
add
sbb
inc
adc
loopne
pop
mov
dec
jge
mov
dec
dec
shl
pop
inc
mov
stc
push
push
adc
mov
ficomps
addr16
out
sub
in
inc
stc
sbb
clc
lahf
sbb
xchg
paddusb
stc
pop
fldl
mov
nop
addr16
push
addr16
test
addr16
push
rorb
and
xor
mov
out
cwtl
into
ss
sbb
stos
push
cs
int
les
movsl
jge
out
outsb
or
cmpsl
fs
testl
cmp
jae
movsb
pop
jmp
xchg
adc
enter
mov
jno
xor
mov
dec
fdiv
mov
xor
xchg
mov
fwait
mov
outsb
stos
rclb
jne
out
cld
popf
pushf
cmc
sbb
xchg
fs
lret
stos
xchg
mov
fsub
testb
popa
pop
ror
adc
pushf
cmc
sbb
sbb
pop
stos
fwait
scas
cmp
push
ret
adc
push
inc
inc
mov
dec
push
push
push
out
inc
loop
in
jne
inc
fcmovne
leave
mov
mov
jnp
imul
mov
inc
or
push
hlt
inc
fcmovnb
jne
das
xchg
ret
push
sar
leave
ja
mov
int3
leave
xor
test
testl
incl
and
mov
xchg
inc
or
mov
or
jmp
mov
int3
pop
add
outsb
xchg
movsl
sbb
jns
filds
mov
mov
dec
mov
rcrb
xlat
xchg
int
fisttpl
sahf
repnz
into
inc
jmp
pop
add
jae
lret
clc
mov
adc
icebp
pop
sub
push
cld
mov
std
test
pop
popl
fldenv
xor
xor
int
nop
mov
jnp
nop
iret
fiaddl
mulb
xchg
xor
daa
jns
sar
dec
lods
pop
fisubl
add
mov
hlt
xor
push
inc
add
sti
popf
mov
mov
fdivs
test
mov
push
inc
pop
popf
movsb
inc
jnp
lods
rcr
dec
pusha
pop
mov
mov
and
mov
aas
mov
add
dec
rep
sbbb
xor
dec
pushf
push
jl
lcall
sti
add
push
inc
and
insl
mov
cld
push
jp
dec
ljmp
add
shll
and
in
daa
loope
pop
jns
cwtl
xor
jg
flds
xchg
test
adc
and
mov
mov
push
push
ja
rep
push
outsb
lret
cmpsb
dec
sbb
sbb
popf
ds
stc
mov
in
addr16
pop
repz
pushf
cmp
fsubrs
test
scas
cmpsl
sub
in
sub
jnp
or
insl
sub
xlat
mov
jnp
dec
add
cli
insl
scas
dec
add
stc
test
fcmove
jecxz
cs
movsb
jnp
sbb
pop
xchg
scas
xchg
inc
add
xor
fs
int
jl
cmpsl
dec
inc
call
test
or
jns
cld
bound
stc
outsl
mov
push
je
pushf
inc
pop
icebp
bound
mov
or
push
or
stos
or
dec
mov
sub
xchg
inc
fbld
xor
mov
xchg
mov
mov
rorl
je
bound
bound
or
add
daa
dec
fisubs
xchg
pop
idivl
std
stc
add
in
sbb
ljmp
daa
add
mov
ret
push
cs
and
push
mov
clc
sbb
add
cmp
stos
jo
dec
lret
pop
lret
cmc
sub
add
fstl
cmpsb
add
cld
minps
adc
ds
push
push
in
dec
xor
mov
xor
inc
push
decb
pushf
mov
mov
cmp
ljmp
mov
outsl
lods
dec
test
and
jmp
movsl
rcll
mov
loopw
push
cmpsl
xchg
xlat
test
clc
push
clc
or
xchg
dec
mov
test
jl
mov
ljmp
push
scas
xchg
in
adc
rolb
cmp
inc
loope
jnp
add
les
adc
fstpt
pushf
sbb
mov
stc
sti
sub
lret
daa
shrb
inc
aas
das
repnz
jp
pop
adc
into
popa
mov
cmpsl
push
rdpmc
imull
cmp
lock
scas
cmp
or
or
xchg
cs
cwtl
daa
sahf
aas
and
movsl
ds
and
inc
xchg
mov
je
mov
mul
and
pop
mov
enter
mov
push
dec
cmp
clc
call
mov
adc
inc
js
cmp
dec
fsts
jbe
in
adc
out
fistps
aas
cmpl
push
addr16
ja
xchg
push
and
jo
movsl
nop
lcall
sbb
adc
xchg
addr16
xor
aad
cli
push
jb
mov
push
xor
fdivl
cmp
xor
pop
jle
mov
pop
xor
out
movsl
lahf
lods
adc
dec
pusha
dec
mov
test
pcmpeqd
gs
fmull
mov
jecxz
push
mov
mov
inc
rol
jo
or
push
mov
dec
inc
call
cltd
and
push
movsb
movsl
cmp
mov
sub
nop
in
lock
aaa
inc
push
mov
adc
repnz
sub
mov
jge
inc
inc
lods
stos
int
push
fmull
sub
push
hlt
loope
inc
ret
cs
push
push
les
shll
jb
rol
pop
test
cmp
in
lret
std
mov
inc
sbb
cmpl
call
xor
sahf
cmp
cmp
push
sahf
jge
ds
mov
pushf
push
adc
inc
mov
lock
pop
and
push
push
xchg
pop
or
pop
pushw
lock
test
lods
rcll
sbb
adc
sbb
adc
push
rolb
inc
repz
mov
les
inc
pop
jl
and
sub
sbb
dec
pop
pop
lret
ds
push
mov
cltd
inc
repnz
jecxz
and
into
sbb
div
pusha
mov
in
rcll
mov
xlat
and
std
lods
scas
in
icebp
das
lods
inc
leave
mov
jl
push
sub
sbb
stc
ds
xlat
addl
aas
push
cld
push
mov
pop
daa
jae
cld
aaa
xchg
aad
mov
cmp
sub
testb
xlat
dec
xchg
push
fs
jnp
and
aad
aam
or
push
mov
and
rorl
jl
in
and
int
sbb
xchg
and
les
dec
mov
jbe
jnp,pn
nop
sbb
out
insb
mov
or
movsl
mov
cwtl
sub
mov
inc
adc
sub
fcmovne
loop
mov
jg
insl
imull
push
mov
mov
cwtl
ror
mov
cld
inc
gs
movsl
mov
sbb
mov
cmp
movsl
lret
test
mov
adc
mov
add
adcl
pusha
aad
cmovbe
adc
clc
jno
hlt
mov
mov
loopne
dec
mov
pop
sbb
fwait
add
mov
in
mov
scas
mov
jecxz
inc
scas
data16
push
mov
lock
push
sti
push
nop
daa
xor
call
pop
cmp
das
mov
and
lahf
sbb
pop
dec
std
xor
cmpxchg
je
sbb
insb
mov
xor
xorl
icebp
fdiv
cmc
xchg
int3
push
add
scas
orb
mov
fwait
test
mov
stos
jge
mull
mov
pop
inc
cwtl
push
fiadds
push
clc
aam
shrb
xorb
es
jbe
pop
jle
inc
call
fstpl
scas
rcr
dec
jbe
lcall
popf
shll
sti
mov
mov
xlat
mov
sub
dec
aad
jmp
repz
leave
idivb
xorl
mov
repz
icebp
mov
cld
into
js
jle
xor
in
clc
ret
sbb
sbb
imul
push
lods
out
sbb
movsl
fadd
call
push
xor
and
adc
ret
mov
sub
xchg
adc
inc
addr16
mov
std
test
rorb
adc
mov
sbb
outsl
lods
addl
test
scas
cmp
pop
fstpl
rol
test
js
adc
insl
mov
int3
jno
aas
insb
insb
or
ret
aad
fisubl
insl
adc
sbb
add
push
fs
loopne
rcrl
repz
cmp
add
cmp
lods
mov
inc
jp
push
lock
jle
stos
mov
and
push
xor
push
stc
test
dec
out
into
push
and
push
add
add
add
js
jg
sbb
push
sbb
inc
adc
les
jg
sbb
mulb
jne
ret
inc
das
mov
rcll
adc
cwtl
mov
in
jl
sbb
mov
sub
and
sub
bound
push
adc
prefetchnta
jg
fcmovb
cwtl
cmpsl
mov
xor
pop
xchg
adc
or
leave
mov
add
sub
dec
in
jo
or
xchg
sub
cmp
cmp
pop
and
xchg
loope
movsb
lret
stc
sub
xchg
shl
cli
xlat
test
stos
cmp
fimuls
in
test
mov
push
push
push
jns
mov
add
mov
lret
inc
jo
movsb
js
test
jb
shll
mov
subb
add
mov
push
fxch
inc
js
dec
cld
cmp
push
push
sub
dec
dec
sbb
xchg
add
cld
jo
sbb
inc
movl
addr16
or
adc
and
into
testb
mov
xchg
xchg
and
mov
sbb
xchg
dec
fstl
call
fmuls
dec
pop
orl
pusha
xchg
add
andb
push
lea
gs
jge
int
fcomp
and
rol
jmp
xor
jmp
cmc
int
je
insb
inc
addr16
ret
pop
pop
jecxz
add
mov
aaa
inc
into
clc
imul
out
cmp
ret
filds
je
sbb
add
rcrl
adc
sub
shl
out
xor
inc
xor
xlat
mov
ljmp
dec
repnz
jbe
mov
mov
ret
stc
in
insl
iret
pop
popa
movsb
sbb
out
in
enter
aad
sbb
stc
sbb
imul
xor
inc
out
loope
in
rolb
loopne
cmp
mov
sbb
mov
inc
insb
push
mov
stos
sbb
jns
xchg
fldenv
bound
cmpsb
pop
in
cmc
jge
cmp
jl
xchg
adc
push
xchg
jmp
dec
in
push
xlat
adc
loop
imul
jl
mov
jb
and
jbe
cli
imul
nop
sahf
push
es
cmp
xor
dec
das
push
dec
in
arpl
lahf
rcll
cmp
popf
xor
pop
into
pop
adc
mov
fisubl
out
push
fmul
pop
xchg
loop
iret
je
pop
pop
cltd
jecxz
sbb
je
call
cmc
sub
xor
lahf
jle
stos
shlb
in
test
rcll
movsl
cli
xor
push
iret
sub
adc
and
mov
fstl
nop
xchg
outsb
push
inc
push
cmpsl
in
push
adc
sbb
pop
mov
dec
sub
popf
popa
mov
add
pop
gs
xchg
adc
jp
mov
aam
push
mov
fcmovnb
inc
cmp
in
ret
push
mov
xchg
jne
loop
and
mov
sbbb
xchg
ja
xor
pop
cs
jnp
mov
push
push
movsb
mov
pop
xchg
ret
cmp
and
pop
testb
sbb
xchg
xor
jg
int
sbb
jae
loope
cmp
mov
inc
mov
mov
movsb
sbb
testb
push
mov
loop
xchg
movsl
stos
cmc
test
hlt
cwtl
xchg
das
jle
sub
or
rcll
ret
mov
xor
adc
es
xor
je
sbb
jge
pop
mov
lds
std
cli
movsl
mov
test
ss
sub
cmpsb
mov
xchg
sub
pop
sahf
jge
mov
cmpsl
and
dec
leave
cmpsl
mull
loopne
outsl
rorb
in
hlt
mov
in
rcrl
mov
iret
xchg
xor
pop
test
add
ja
das
and
fucomip
in
or
jg
movsl
push
pop
je
inc
push
inc
sbbl
cmp
jno
mov
faddl
pop
outsb
aad
cmp
ljmp
mov
enter
dec
or
add
int3
enter
sar
in
jae
inc
test
stc
cmp
fcompl
mov
test
xchg
into
in
int3
mov
loop
jb
ficompl
or
scas
pop
add
and
mov
fwait
pop
cmp
sub
cld
jp
mov
test
outsb
jno
add
loopne
sbb
cmpsl
push
xchg
std
movl
adc
lea
mov
aaa
lods
out
je
sbb
mov
bound
pop
ja
popf
push
xor
mov
dec
das
fists
pop
sbb
xor
add
adc
jno
mov
out
pushf
push
mov
sbb
dec
adc
cltd
push
rcl
js
mov
cmpsl
out
mov
xchg
mov
or
into
cltd
hlt
xor
mov
xchg
inc
pop
or
roll
cmc
adc
andl
mov
movsb
hlt
shl
inc
xor
outsb
es
pop
mov
sar
ja
dec
mov
sub
cmpsb
xchg
rol
mov
push
leave
stos
movsl
pop
jl
andl
lret
ficomps
cmpsb
lods
andl
cmpsl
ror
icebp
mov
test
jl
shll
adc
add
inc
push
dec
stos
cld
scas
mov
and
xchg
les
lcall
pop
jp
icebp
xor
and
int3
mov
or
fiaddl
scas
stos
sub
add
or
sub
lods
or
inc
fstpt
push
sub
lods
pop
cmp
xchg
xchg
dec
ja
outsb
add
pop
xor
movsl
lea
dec
xor
rcl
insl
inc
cmp
add
test
fdivrl
ficomps
pop
gs
jbe
cld
adc
xor
or
aaa
push
mov
dec
clc
testb
inc
scas
cmp
sub
test
lock
adc
stos
xchg
ss
sub
mov
mov
outsb
stos
jno
daa
or
adc
mov
mov
jmp
rcr
daa
inc
inc
jne
xor
ljmp
addr16
pop
out
cmp
and
ds
xchg
cmp
pop
sti
xchg
stos
push
xchg
or
lea
lea
ds
dec
dec
mov
mov
lret
fdivs
mov
mov
test
mov
jne
dec
push
mov
jnp
inc
xchg
div
pop
lret
mov
ficoms
cmp
mov
fwait
in
cmp
cmc
arpl
jbe
jl
sbb
ret
push
inc
mov
ror
mov
push
add
repz
es
sub
jae
lret
clc
popf
js
mov
les
setbe
dec
rcrb
fidivs
adc
movsl
pop
push
mov
sub
je
push
dec
dec
js
or
mov
pop
mov
pop
stos
repz
test
scas
mov
mov
mov
insb
mov
add
xchg
push
xchg
pop
mov
or
bnd
hlt
add
loop
jne
ss
insl
cmp
mov
jle
test
pop
inc
push
or
fabs
push
xlat
movl
shll
decb
lods
pop
add
sbb
push
xor
xchg
dec
xlat
gs
sbb
sub
jl
add
movsb
aaa
cmpsl
jge
ret
jmp
jnp
mov
loopew
xchg
mov
sbb
shrb
iret
push
mov
jnp
aas
xor
fs
xor
fcoml
stc
testb
mov
stos
pop
repz
pop
push
out
and
jmp
sahf
gs
mov
dec
xchg
adc
or
jge
shl
lcall
jnp
lcall
dec
xchg
adc
movsl
xor
fisubs
mov
stc
cltd
in
push
cmp
xchg
cmp
insl
pop
shlb
xchg
pop
lods
mov
push
sahf
mov
cltd
and
sub
ds
xor
mov
outsb
fcoms
xor
jmp
xor
pop
sub
fwait
sub
pop
dec
dec
mov
mov
lods
inc
mov
imul
mov
mov
xchg
pop
leave
xor
inc
aaa
xchg
rcll
xlat
pop
mov
mov
mov
hlt
shrl
xor
outsb
xor
scas
mov
mov
and
inc
leave
cmp
ds
pop
fs
mov
ret
int3
fcmovu
add
or
lret
jecxz
or
loopne
or
inc
cmp
clc
out
je
test
add
push
test
xorb
xchg
cmpsb
scas
or
mov
add
adc
cmp
scas
jne
jb
jg
inc
adc
gs
pop
dec
push
pop
ret
or
push
mov
mov
cwtl
sbb
mov
test
pop
pop
insb
xchg
ljmp
inc
or
cmp
rclb
loop
fsubrl
xor
addr16
cmp
push
or
jg
and
js
mov
popa
popf
ss
test
je
aam
push
mov
in
leave
fs
ret
ja
iret
lret
loope
push
arpl
push
pop
xor
inc
adc
push
lret
out
movb
out
scas
call
dec
into
dec
dec
icebp
repz
mov
nop
push
orl
push
pop
pop
je
mov
fdivrl
insb
mov
adc
add
jo
jbe
shr
mov
mov
negl
into
pop
ret
stos
test
xchg
mov
or
mov
mov
arpl
jle
sbb
add
push
mov
in
push
cmp
add
xchg
jae
ljmp
sbb
adc
rolb
test
push
push
out
outsl
adc
xchg
arpl
push
stos
xchg
mov
sti
lcall
dec
adc
xor
stos
add
out
sub
int3
jge
push
mov
mov
or
pop
jl
adc
adc
add
push
xchg
ret
pop
jbe
xchg
fcoml
xor
jno
sbb
arpl
push
push
sti
jo
outsl
lret
repz
sbb
xchg
cmc
jg
ljmp
xor
cmp
xchg
mov
mov
mov
out
cmc
pop
cltd
cmp
jbe
push
adc
sbb
insl
adc
dec
adc
js
push
imul
mov
pop
sbb
add
and
add
jne
or
nop
jg
cmp
aaa
xor
cs
dec
ss
mov
fadd
jg
xor
in
imul
or
shll
lcall
cs
adc
and
cmp
loope
mov
push
push
lret
loop
xchg
fdivr
and
daa
sbb
jnp
cmp
inc
nop
jg
ss
loopne
pop
xchg
sti
cli
loop
xor
fwait
xor
mov
mov
mov
aam
jmp
xchg
fidivl
push
jle
mov
sarb
sub
xor
push
scas
sbb
inc
call
inc
push
xor
icebp
movsb
sti
mov
pushf
out
mov
imul
rol
mov
mov
ds
into
dec
lds
aaa
xchg
divb
lods
jle
inc
mov
add
inc
lret
and
push
shrl
push
or
push
js
mov
js
aaa
fs
xchg
push
pop
mov
mov
pop
in
ja
pop
mov
aas
mov
mov
shl
dec
jnp
xchg
cmp
inc
mov
push
inc
pop
mov
scas
test
iret
xor
lcall
addr16
mov
test
sub
jg
test
inc
lods
jp
mov
aaa
adc
jnp
and
or
jle
shrl
aas
push
movsb
xchg
or
jo
pop
jge
push
in
ss
cltd
inc
repnz
sbb
adc
mov
addl
inc
adc
inc
and
pusha
xchg
xacquire
ja
lcall
and
test
push
notl
xor
sub
jo
jnp,pt
outsl
arpl
popa
jecxz
lcall
in
sub
ret
in
int
push
sbb
and
inc
test
and
outsb
ficompl
ret
jns
xlat
lcall
xchg
adc
mov
mulb
inc
mov
fs
int
mov
negl
ds
or
fsts
add
pop
out
jbe
fildl
icebp
inc
mov
push
cmp
outsb
dec
push
xchg
dec
or
mov
push
std
mov
mov
lods
lods
add
pop
stc
mov
ljmp
sahf
mov
sahf
mov
add
repz
xchg
mov
rcrl
sub
lret
cmc
xchg
cmpb
cmpsb
int
jp
xchg
int
mov
loope
add
push
cmp
adc
imul
insb
push
out
test
xchg
mov
inc
cmc
mov
fsubrs
decb
xchg
mov
mov
mov
mov
push
fdivl
cltd
lret
cs
gs
push
mov
in
pop
mov
adc
pop
jp
test
pusha
mov
or
sahf
and
pop
push
dec
imul
cli
mov
icebp
enter
sbb
pop
in
pop
adc
push
repnz
movsl
or
loopne
rorl
pusha
jmp
rclb
aam
inc
and
and
arpl
cmp
fxch
sbb
dec
fisubrl
pop
mov
rclb
xchg
mov
sahf
out
sub
into
fdivrs
pop
stc
lds
add
sbb
mov
pop
aas
jmp
mov
pushl
adc
or
cmp
icebp
mov
xchg
xor
cli
js
push
push
test
lods
inc
arpl
jmp
mov
push
mov
aad
and
repz
sbb
adc
jb
pop
cmp
testl
shlb
xchg
sti
repnz
push
pop
cmpsl
sti
das
dec
das
mov
pop
gs
sahf
mov
mov
js
outsb
ds
xchg
dec
arpl
mov
cmc
or
xlat
adc
movw
popa
pop
insl
mov
test
inc
xchg
fstpt
inc
jg
xchg
outsl
sbb
cmc
cmc
ja
out
jno
in
lods
pusha
test
mov
push
cmp
ja
dec
shll
test
push
mov
push
add
sub
adc
push
sbbb
cli
popa
mov
sub
dec
clc
and
fdivs
popf
sub
jbe
sbb
mov
mov
mov
out
adc
test
in
push
mov
push
es
jp
lods
call
leave
jno
mov
sub
jge
dec
fsubrs
inc
mov
pop
adc
mov
mov
test
and
lret
or
hlt
subl
adc
inc
push
cmp
shlb
sti
repz
add
add
adc
mov
loopne
repz
push
mov
inc
in
dec
jecxz
inc
cmp
les
movsb
sub
andb
pop
inc
and
push
out
sbb
xchg
lret
push
push
lahf
push
mov
test
call
xor
hlt
and
push
pop
add
mov
add
mov
outsl
add
mov
cmp
lods
scas
or
push
dec
mov
lahf
adc
or
jnp
in
inc
call
cli
jbe
es
xor
sarl
mov
mov
mov
cld
fcoms
pop
mov
lods
mov
inc
xchg
mov
pushf
or
pand
cmp
lahf
ret
sbb
jl
outsl
xchg
out
jl
clc
add
dec
pusha
arpl
mov
insl
jmp
ds
dec
notb
mov
jb
ret
sti
enter
pop
adc
mov
leave
add
xorb
adc
enter
adc
xchg
cmpl
lret
leave
xchg
dec
int
test
lret
int
mov
pop
pop
popf
xchg
out
iret
shrl
mov
popa
pop
pop
scas
xchg
xor
jp
mov
and
test
lods
pusha
jp
les
int3
inc
or
cs
pop
pop
mov
fwait
mov
sub
mov
xor
ljmp
inc
pop
add
jle
lock
adc
ljmp
mov
cmp
inc
aam
mov
push
xor
add
mov
mov
das
ljmp
mov
std
aaa
inc
add
xor
pop
hlt
and
jo
and
jmp
enter
sub
cmp
jae
cmpsl
cmp
jns
fwait
sub
pop
xor
out
dec
mov
push
mov
fidivs
jne
fnstsw
das
addr16
or
test
bound
rolb
sbb
jns
pop
in
jge
adc
jno
xchg
mov
sbbl
out
push
cmp
arpl
cld
xchg
dec
push
inc
xchg
mov
push
test
push
je
sbbl
lahf
lds
sub
xchg
ljmp
push
xchg
pop
outsb
stos
adc
dec
mov
pop
loopne
jg
fimull
in
mov
test
les
repz
data16
shr
pop
clc
jbe
xchg
arpl
mov
enter
lods
outsl
xor
pop
add
push
xchg
cvtdq2ps
add
outsb
cwtl
addb
dec
jae
dec
mov
jmp
sti
pop
or
adc
cmp
fdivrs
sahf
adc
in
movl
xor
push
sbb
sub
sub
inc
mov
adc
mov
fnstcw
and
test
push
leave
push
dec
movsl
add
mov
cwtl
sbb
push
xor
scas
fidivrs
out
test
mov
pushf
stc
lahf
sbb
icebp
inc
mov
and
cli
fwait
and
jb
adc
mov
rorb
into
push
std
mov
in
pop
in
arpl
jns
xorl
scas
push
loopne
test
cmpsb
repnz
cmpsl
cmpsb
mov
cmp
lret
movsb
cmc
push
lds
ret
add
cmp
pop
add
addr16
sahf
loop
lds
pop
pop
arpl
xchg
daa
inc
rcl
lret
inc
leave
rcll
testb
scas
les
clc
push
ja
jb
leave
pop
sub
xchg
pop
test
stos
jno
sbb
and
nop
cmpsl
outsb
dec
fwait
adc
cmp
loop
js
leave
lods
sbb
sub
push
stc
jae
cmpsl
add
rcl
dec
fistpl
test
pop
xor
ljmp
ljmp
aad
cmpsl
push
push
cmpsb
mov
and
mov
fcompl
or
xchg
ljmp
pop
sarl
sbb
sub
jge
cmpsb
mov
fldt
add
jg
and
push
add
insl
dec
and
cmp
mov
call
cmp
fs
pop
hlt
sbb
arpl
push
movsl
and
ljmp
mov
je
aad
int
loope
cwtl
push
mov
mov
lahf
sarl
fisubl
adc
icebp
pop
xor
lret
dec
imul
cmp
dec
js
lret
push
je
test
push
int
inc
inc
jge
mov
sbb
fcoml
pop
add
rorb
mov
push
xor
xchg
pusha
adc
mov
inc
xlat
xchg
push
dec
sub
add
sbb
inc
add
and
sub
xor
jmp
xor
jb
push
in
sub
iret
jno
rcll
xchg
mov
adcb
pop
mov
pusha
repz
pop
mov
stc
sub
xor
movsb
sub
das
cli
repz
jo
lock
fs
xlat
call
xor
sbb
bswap
mov
or
inc
add
xlat
mov
inc
pop
aaa
popa
push
fistps
ljmp
lcall
mov
daa
imul
hlt
cmp
cli
das
divb
aas
jnp
pop
leave
sar
es
xor
sbb
imul
mov
xchg
in
mov
xor
aaa
push
iret
inc
fisubrs
iret
mov
and
lcall
in
xlat
push
xchg
mov
stos
repz
mov
sahf
out
cld
push
daa
lock
and
mov
jmp
fdivrl
sbb
and
cs
dec
pop
fimull
push
fcmovbe
lods
push
pop
sbb
mov
mov
aad
mov
scas
in
insl
pop
inc
mov
dec
aaa
push
inc
lods
pop
stos
mulb
bound
int3
cwtl
mov
jnp
adc
stc
daa
pop
jmp
les
ret
aam
adc
stc
xchg
addr16
outsb
mov
dec
cmp
nop
push
je
sbb
jge
inc
dec
xchg
loope
ja
insl
push
xor
jnp
push
pop
popf
cltd
pop
mov
jns
sub
mov
inc
cmp
js
push
repz
fldl
sub
pop
orb
mov
pop
es
in
bound
scas
in
inc
jg
mov
sub
xor
xchg
push
add
inc
loope
es
stos
dec
jnp
pop
mov
pusha
popa
cld
repz
rcrl
push
and
adc
cmp
cwtl
dec
cmp
add
xorb
add
mov
subb
and
and
cmp
add
imul
dec
xor
int3
pop
adc
mulb
in
jae
dec
mov
cmp
pusha
shr
push
mov
rorb
xor
fistps
push
add
mov
add
inc
mov
sub
in
jp
add
cmpsb
add
add
aam
lahf
dec
push
lea
jbe
sbb
mov
add
or
push
add
fisttpll
fcomp
xor
mov
cmp
sbb
push
xor
popf
ljmp
and
jge
outsb
fisubrs
test
jo
clc
aaa
inc
pusha
nop
sbb
mov
fisubrl
cwtl
sahf
inc
mov
inc
int
out
mov
xor
sub
and
jmp
mov
mov
inc
pop
nop
outsb
cltd
xchg
sbbl
mov
cwtl
mov
mov
mov
xlat
mov
push
ja
and
jmp
lret
mov
pop
or
stc
dec
stos
aad
lea
cmp
ret
mul
movsl
add
out
add
call
subb
jl
dec
in
lock
aad
rcll
fidivs
sbb
cli
jae
xor
and
push
dec
mov
dec
ficoml
xor
imul
push
cmpsl
mov
add
sub
xor
mov
add
int
mov
call
sub
lods
fstp
stos
loopne
add
xchg
fs
mov
mov
xor
pushf
pusha
mov
cmp
je
nop
out
jp
fsub
arpl
data16
arpl
inc
xor
xchg
mov
jb
sbb
gs
mov
sub
psubusw
rdtsc
sbb
test
lods
adc
sbbb
mov
add
jle
ja
dec
out
stos
iret
divl
xchg
or
out
fists
cmp
jne
out
add
jle
test
sbb
loop
push
push
inc
sahf
sbb
mov
sbb
sbbb
jne
pop
ret
shll
in
fstps
outsl
aas
mov
inc
sub
mov
xchg
xorb
jmp
sti
ja
sbb
rolb
xor
sbb
fistpll
sub
inc
sub
int
sub
jmp
aaa
sub
cmpsb
adc
xchg
dec
and
sbb
out
loopne
xor
inc
lret
sbb
scas
lret
jae
in
ja
dec
sbb
adc
jb
aas
pop
aam
ljmp
cs
lcall
std
xor
mov
aas
mov
adc
js
sbb
aad
inc
shlb
sub
sub
roll
adc
jb
int3
imulb
jp
test
lahf
pushf
aad
test
out
mov
in
ds
cmpsb
lock
mov
push
rolb
lock
lods
jbe
loope
nop
pop
in
inc
into
cltd
sti
sbb
into
mov
and
dec
and
int
pop
testb
lea
stos
hlt
mov
clc
jne
mov
xchg
repnz
pusha
mov
sub
lods
and
inc
push
sahf
or
sbb
movhps
add
mov
das
enter
mov
lahf
cld
xchg
out
insl
loopne
call
sti
mov
xchg
daa
xlat
and
mov
pushf
or
shlb
jle
and
and
cmp
push
test
ds
push
jmp
sub
in
out
mov
cli
pop
js
test
cmc
fsub
sbb
push
cltd
add
lods
jmp
sbb
jno
jbe
ds
mov
dec
call
mov
xor
jle
dec
jno
ljmp
xchg
rcrl
mov
scas
mov
inc
pop
pop
xchg
mov
adc
nop
and
cmp
mov
sub
jae
test
fucomp
cmp
cmp
int
jg
into
nop
lret
pop
out
sahf
inc
jne
leave
push
inc
mov
leave
mov
cmc
lock
fidivrl
repz
mov
scas
shll
imul
out
addr16
adc
mov
add
imulb
xchg
andl
jo
mov
test
pop
fisubl
outsb
mov
addr16
repz
mov
push
pop
dec
push
out
mov
pop
jecxz
xchg
je
xor
xchg
pop
adc
fdivrl
mov
ror
fcom
sarb
imul
rcrb
les
cwtl
cmp
push
xchg
lea
sub
lods
push
rolb
cmp
sahf
mov
loopne
insl
lds
jecxz
xchg
xchg
imul
int3
sti
test
lock
inc
push
lcall
and
fiadds
je
xor
and
mov
mov
mov
inc
mov
in
dec
gs
loopne
fwait
pop
test
sbb
jno
mov
fcomip
aas
xchg
fmull
xor
repz
cmp
cmp
and
lret
add
insl
cmp
mov
sub
insl
lahf
cltd
insl
das
push
xchg
xchg
mov
mov
adc
ss
pop
ss
pop
adc
push
mov
and
les
pop
jge
dec
push
das
dec
or
mov
daa
ss
jle
mov
add
sbbl
inc
xor
adc
int3
sub
jl
adcb
call
lret
cmp
and
arpl
inc
cld
repz
mov
cmp
sarb
fmul
jbe
cmpl
ljmp
or
dec
aas
insb
or
add
adc
dec
pop
mov
iret
lods
pop
push
mov
jl
sub
mov
jp
movsl
jb
mov
mov
sub
arpl
inc
xor
xor
cmc
push
jl
test
imul
pop
iret
lds
das
mov
mov
fdivrl
mov
pop
scas
imul
jne
les
cltd
pusha
mov
push
sti
je
in
push
xchg
sbb
daa
adc
push
loope
jno
pop
aad
xchg
in
out
scas
mov
test
pop
push
sbb
arpl
mov
call
sub
test
push
mov
inc
push
jno
add
sub
jl
es
pop
js
jbe
mov
inc
mov
popf
mov
cmp
jge
sarl
dec
sub
and
xchg
ss
call
in
lock
shlb
rorl
je
cmp
xor
pop
outsl
das
sub
popf
cltd
dec
insb
andps
mov
push
les
push
insb
xchg
fildl
popl
mov
jns
mov
outsb
xor
int3
negl
outsb
nop
or
push
sbb
push
and
out
push
gs
fisubs
xor
push
dec
or
loop
das
cmp
add
adc
outsl
and
jg
add
arpl
mov
dec
lea
lods
sub
mov
cmc
xchg
int3
cmpsb
fsubrl
fmull
out
mov
lock
int3
imul
stc
frstor
or
mov
fcomip
test
cmc
ljmp
xchg
dec
arpl
push
xchg
push
adc
dec
shrl
dec
adc
pusha
les
jecxz
mov
jbe
es
xchg
aam
js
clc
xchg
out
test
in
roll
xchg
add
cmp
repnz
jbe
idivl
mov
rorb
mov
fcomps
add
inc
jns
push
push
and
xchg
mov
pusha
lret
sbb
notb
adc
lahf
pop
sbb
lsl
add
pop
adc
in
gs
mov
pop
sbb
mov
add
jo
add
mov
loope
rcrl
inc
fidivrs
jno
lock
xor
das
xlat
mov
jle
lcall
sbb
mov
jbe
ficoms
mov
xlat
mov
test
js
icebp
in
loopne
inc
out
mov
cli
pop
and
int3
mov
aam
jo
arpl
nop
push
and
xor
outsl
test
and
call
cld
inc
cmp
imul
rorb
adc
inc
dec
test
mov
xchg
sti
push
mov
lock
fisubs
lret
sbb
dec
pop
xor
sbb
mov
mov
fldl
js
mov
lcall
or
insl
mov
mov
sub
and
sbbb
data16
cmp
lock
mov
ud2
shll
xchg
add
push
xchg
mov
sti
ja
mov
sar
in
push
mov
jne
cmpsl
inc
xchg
dec
mov
sahf
mov
jmp
xor
insb
lock
jg
out
xor
mov
std
dec
aad
or
adc
cld
fsubrs
mov
int
sbb
push
cmp
ja
ret
push
in
mov
cmpsb
out
cmp
cmp
and
inc
ds
loop
xchg
pop
fists
std
mov
pop
cmp
jge
jmp
or
nop
cli
or
jge
call
out
mov
jne
jb
mov
incl
lret
out
ds
and
je
out
pop
ljmp
mov
sub
cmp
pusha
and
scas
movsb
cmpl
pushf
mov
jns
inc
mov
adc
popf
xlat
push
push
xor
out
cmp
push
into
in
jmp
out
adc
mov
in
add
mov
cmp
outsb
cmp
xchg
jmp
push
mov
in
int
mov
or
sarl
add
je
ror
fmuls
mov
gs
movsb
lahf
add
es
popa
adc
cmp
clc
xchg
jecxz
pop
arpl
pop
mov
rcrb
pop
jo
cmp
xchg
pop
mov
std
jmp
pop
add
sahf
scas
call
dec
leave
leave
pop
sub
mov
mov
ljmp
add
jg
mov
lret
or
push
xchg
adc
mov
lcall
stc
cs
movsb
push
pushf
cwtl
fistl
incl
aaa
shlb
lea
pop
lahf
daa
ret
les
mov
sbb
push
and
mov
mov
jg
dec
lods
sub
ret
push
into
dec
jmp
jnp
dec
adc
addl
sub
repnz
test
add
addl
jecxz
fnstcw
sub
mov
lcall
push
pop
inc
mov
lea
cmp
and
add
lea
jno
mov
push
mov
lods
cmp
xor
push
shll
push
mov
pop
mov
icebp
cld
push
loope
inc
xchg
xchg
out
fmull
unpcklps
test
aas
cmp
rcll
mov
inc
fldln2
inc
inc
divb
push
jmp
sub
repnz
mov
aad
ss
xchg
jmp
mov
imul
fsubrs
mov
dec
filds
mov
subb
pop
pop
fisttps
mov
aad
insb
mov
movb
pop
pop
sub
dec
sbb
push
cmp
imull
aam
hlt
outsl
inc
mov
sub
movsb
scas
adc
jbe
pop
add
fptan
mov
stc
fcoms
ret
out
sbb
fs
and
stos
xchg
daa
sti
sbb
inc
xchg
mov
rorl
cmp
ret
inc
push
jg
addb
mov
ds
cmpsb
push
out
sbb
jg
xor
popf
pop
cld
lods
cld
loop
pop
jle
out
popa
repnz
sbb
add
cmp
rcrb
loopne
es
sub
call
and
xor
mov
addr16
sub
sbb
sti
ficoms
mov
aaa
push
xchg
jns
xchg
divb
mov
cld
add
test
ja
sarb
cli
sub
add
cmp
gs
adc
ret
in
xchg
and
scas
mov
jmp
xorl
shll
out
inc
jne
pop
stc
fmuls
fistl
stc
cmpsl
aaa
stos
push
adc
fstpl
xchg
xor
or
jne
into
adc
jb
jl
xor
push
fs
push
add
fcmovne
mov
fdivr
jbe
or
push
xchg
mov
test
pushl
imul
pop
sub
ret
inc
inc
cli
xchg
popa
incb
out
cltd
aas
jnp
cmc
leave
addr16
popa
cmp
adc
popa
dec
jae
cmp
out
rcrb
fdivrl
lds
movsl
loop
cmp
push
arpl
sarl
into
dec
mov
inc
sub
cmpsb
out
and
lahf
imul
cmp
dec
xorb
adc
insl
sub
insl
xchg
push
push
loop
lret
ljmp
int
pusha
xlat
cmp
adc
jae
je
add
mov
inc
push
mov
enter
add
clc
sbb
fs
les
scas
dec
mov
lea
adc
adc
data16
shll
adc
rcr
xchg
add
stc
inc
xchg
xor
decb
mov
std
lret
adc
mov
sbb
mov
mov
roll
lods
jl
test
xor
sub
bound
cwtl
cwtl
jle
xchg
add
pusha
inc
adc
or
stos
adc
pop
aam
arpl
mov
add
addr16
stc
stc
xchg
and
add
dec
add
xor
and
out
enter
dec
cmp
push
sub
aaa
cmp
insl
jp
add
rcr
leave
test
int3
scas
test
adc
xchg
dec
mov
push
pop
movntq
int3
ss
mov
rolb
stos
stos
popa
divl
pushl
insb
rcl
push
sbb
negb
lds
adc
xchg
dec
testb
add
fwait
or
mov
pop
pushf
popf
jl
inc
leave
dec
cmc
adc
inc
lcall
pop
pusha
in
mov
or
test
mov
inc
pop
xchg
cmc
sbb
cmp
mov
aas
shl
dec
pop
dec
js
out
orl
mov
adc
lock
aaa
xchg
in
outsl
sub
jecxz
sahf
stos
inc
stos
inc
ror
sar
ret
xor
ja
stos
test
sub
push
xchg
hlt
push
jne
popa
xchg
mov
mov
pop
std
pop
add
loop
xor
movsb
cmpsl
rcrb
fdivr
or
out
call
les
test
or
cs
mov
xchg
add
scas
lods
out
pop
cmp
cltd
and
sahf
stos
ret
imul
pop
mov
int
stos
mov
outsb
popa
xchg
push
jmp
and
lea
xchg
outsl
stos
shlb
dec
lea
push
fcomp
pop
sti
cmpsl
sbb
insl
test
jp
sbb
fcmovnb
or
xchg
mov
inc
mov
dec
mov
adc
push
adc
leave
out
ret
cmp
pop
push
xchg
mov
test
enter
rorl
bound
popa
loopne
mov
hlt
pop
fldt
sub
pop
pop
cwtl
jmp
fsub
into
insb
push
inc
int3
push
adc
gs
sbb
mov
movsb
xor
sub
mov
jecxz
lods
push
lcall
push
mov
stc
inc
sub
fisttps
js
in
jg
inc
test
mov
mull
repnz
mov
mov
pop
pushf
sub
xlat
mov
pmaddwd
jbe
xor
pop
bound
pop
repz
int3
imulb
cltd
xor
in
pop
lret
js
push
popf
out
lods
mov
lods
stc
inc
cs
pop
clc
sbb
or
jg
mov
push
pop
cmp
pushf
push
lcall
addb
mov
xor
pop
sub
pop
jbe
inc
subb
mov
adc
into
push
test
scas
pop
insl
arpl
push
xlat
stos
pop
mov
sbb
add
add
popf
std
inc
insb
leave
mov
adc
stos
fimuls
lods
fistpl
pop
pop
scas
mov
lock
jns
mov
xchg
mov
sarl
rorl
test
mov
call
inc
insl
push
xchg
push
lahf
std
pop
sbb
outsb
fists
enter
pop
dec
xchg
int
lahf
adc
cltd
rcll
je
mov
dec
shl
imull
mov
inc
in
mov
sarl
lds
subl
cs
mov
cmp
daa
ljmp
push
dec
fwait
es
ss
ljmp
les
int3
cmp
pop
out
cmp
jae
rcrl
into
mov
sub
aam
rorl
scas
shrl
sbb
stos
ret
scas
sbb
mov
sub
gs
xor
xor
and
cmc
outsb
je
jle
loopne
or
lds
icebp
or
nop
add
push
push
lret
sub
out
out
cwtl
popa
mov
test
outsb
popa
cmc
popa
lret
lret
lcall
shl
test
enter
adc
ds
shlb
sti
sbb
fcmovu
mov
push
iret
inc
push
cmc
mov
mov
ret
mov
or
faddl
push
or
cli
shll
jl
aas
jmp
nop
cmpsb
push
in
cmc
jecxz
das
and
inc
pop
xchg
out
movsl
pop
jp
lahf
dec
jge
cld
ret
jbe
lock
clc
sahf
add
rcrl
aas
gs
mov
dec
xor
ret
pop
stc
mov
sbb
add
sub
out
fists
fs
sarb
data16
aad
shlb
fadds
xor
jae
or
mov
iret
ret
sub
data16
jle
jns
imul
and
jmp
or
das
fsubl
mov
loopne
std
jnp
mov
loop
andb
pop
add
outsl
lret
mov
xchg
rcl
mov
aas
bound
push
ret
out
outsl
scas
in
adc
cmp
push
or
xor
mov
lds
das
adc
fisubl
sbb
mov
popf
adc
filds
add
fs
call
in
jb
mov
dec
or
scas
call
call
and
and
or
mov
jmp
or
xchg
push
adc
daa
mov
dec
jbe
jmp
aad
sti
ret
mov
testl
decb
sahf
push
loop,pt
test
sbb
xor
out
mov
outsl
lock
push
cmp
dec
mov
jae
int3
jbe
push
shll
push
and
dec
xlat
inc
mov
push
sbb
les
mov
and
mov
mov
leave
lcall
rorl
add
add
jae
dec
xchg
in
leave
lods
imul
addr16
mov
jge
inc
cli
imul
fcomps
and
gs
push
sub
cs
dec
mov
lods
inc
out
jns
or
mov
addr16
dec
popf
and
into
mov
mov
pop
push
rcll
lcall
or
enter
xchg
fldt
aam
mov
jg
es
push
lds
mov
jg
jb
icebp
adc
ret
xchg
divl
ret
ret
cmp
adc
jp
es
out
inc
fdivrs
push
mov
mov
sub
enter
cli
bound
movb
mov
popf
xchg
ss
xchg
mov
in
enter
xchg
ficoms
xchg
ret
out
pop
push
inc
add
daa
repnz
loopne
cmpsl
loope
sub
aam
int3
dec
mov
cli
jnp
or
cld
add
call
jecxz
jle
out
jno
jge
dec
adc
ds
stc
xchg
ds
cmp
adc
gs
add
jge
or
jle
pop
mov
xchg
mov
test
cli
sub
loop
lahf
jae
iret
shll
fdivp
push
mov
shlb
call
xchg
stc
cmpsb
stos
jns
stos
imull
ja
or
jp
mov
push
inc
push
xor
and
sub
pop
push
ljmp
push
aam
fadds
data16
aam
jle
cmc
jmp
mov
int
loopne
mov
jmp
fldenv
into
cltd
fidivrl
stc
test
or
out
sub
push
cmp
outsb
add
aas
in
shr
mov
dec
mov
jns
and
jmp
loopne
in
faddl
out
mov
loop
mov
mov
je
les
mov
inc
mov
pop
push
add
fiadds
xchg
cli
pop
cmpsl
sub
add
pop
jb
mov
inc
lret
cli
mov
sub
push
adc
or
in
push
les
jl
cmc
rcl
push
scas
fs
mov
es
nop
mov
in
outsb
or
lods
xchg
repz
loopne
jg
hlt
jmp
adc
sahf
and
mov
jmp
jno
push
mov
and
push
mov
ds
gs
imul
cmp
adc
scas
xor
pop
pop
xchg
sub
or
das
xchg
test
outsl
insb
in
shrb
fs
cmpsl
push
and
or
out
flds
neg
insb
leave
and
ja
hlt
lahf
adc
mov
push
inc
adc
scas
movb
test
mov
stc
out
ret
insb
sub
xor
pushf
push
in
or
imul
out
pusha
xlat
mov
insl
ret
jmp
sbb
subl
subb
sub
cwtl
je
pop
dec
cmpw
int
jns
not
ret
daa
inc
inc
mov
xchg
stos
inc
adc
call
enter
pop
dec
dec
das
push
cmp
pop
cmp
movsb
call
mov
xor
mov
ror
mov
inc
jp
or
pop
scas
insb
push
jo
mov
mov
mov
add
jmp
cmpsb
push
and
xchg
mov
test
xorl
std
addr16
mov
jle
push
xchg
and
dec
jmp
sbb
shrl
enter
jnp
xchg
stc
and
shlb
int3
or
add
mov
jp
ss
push
imul
inc
test
adc
pop
push
sub
gs
pushf
test
mov
pop
aam
test
sbb
nop
movsb
mov
insl
jbe
repz
pop
ljmp
jae
push
fidivrl
mov
adc
fldl
outsb
inc
mov
adc
bound
imul
adc
adc
popa
xchg
mov
subb
mov
or
sbb
cmc
jo
rorb
xor
insb
cs
and
data16
push
shr
int
or
cmp
sbb
mov
cmp
mov
cli
arpl
mov
inc
pop
inc
cmp
js
loope
sbb
les
rcr
int3
ds
add
or
cmp
fdivrl
mov
jne
mov
xchg
jp
dec
pushf
mov
and
movsl
je
mov
lock
and
mov
rcrb
test
or
mov
fldenv
and
sbb
add
push
repz
jmp
das
into
adc
fsubrl
xlat
mov
xor
ss
sub
fadd
aas
inc
clc
dec
ficomps
in
ror
inc
mov
mov
jbe
addr16
fiaddl
mov
xchg
inc
mov
sub
stos
jo
or
adc
and
sub
mov
sti
xor
xchg
or
mov
mov
xor
adcb
fistl
inc
mov
jg
adc
ja
cld
mov
outsb
insb
mov
int3
cmpsb
int3
sub
mov
stos
scas
ljmp
sahf
out
mov
xorb
push
scas
cld
adcb
adc
outsl
sbb
mov
je
xchg
gs
movsl
xchg
sbb
ja
cmp
imul
lahf
icebp
xlat
push
cmp
mov
push
mov
mov
mov
mov
mov
jle
out
inc
xlat
adc
and
add
and
subb
and
fnsave
out
outsb
jns
movsl
lea
inc
call
jns
hlt
xor
inc
mov
jns
mov
test
mov
xor
pop
mov
shll
cs
lock
mov
push
pop
repz
lock
adc
in
loope
fwait
stc
push
cwtl
mov
pop
cld
and
push
bound
inc
in
jle
dec
rcr
jle
out
lret
push
arpl
jnp
jp
jae
push
cmpsl
xor
pop
outsb
mov
adc
mov
mov
fwait
out
and
addl
push
std
mov
sub
cmc
in
pop
nop
jne
fmuls
fidivrs
jne
mov
pushf
and
sub
lcall
inc
notl
sbb
push
xchg
sbb
and
js
bound
leave
scas
or
push
mov
cld
call
adc
or
cld
fdivrs
mov
nop
push
insl
jge
push
inc
shlb
pop
lahf
imul
ljmp
ret
or
gs
test
popa
sti
cmpsl
sbb
leave
js
jmp
hlt
adc
xchg
fmull
addr16
jp
cmp
int3
icebp
fisttpll
test
push
repnz
jp
xor
sub
mov
int
lods
xchg
sub
push
adc
or
scas
insl
jecxz
out
imul
jp
shlb
pop
shl
sub
push
lods
movl
and
push
mov
lock
testl
dec
jnp
shrb
sahf
push
popf
in
add
fistpll
jb
mov
jle
int
jns
xchg
cmp
cld
lcall
addl
daa
sbb
mov
rol
push
mov
popf
fildl
mov
cmp
in
and
shl
jle
mov
imul
xor
mov
idiv
jne
dec
mov
jmp
xchg
into
pop
jg
movl
jmp
xchg
fwait
push
jg
jmp
insl
negb
cmp
and
outsl
cltd
rcl
lret
jg
mov
lock
iret
mov
pop
lret
jl
adc
in
and
pushf
addr16
cmp
jecxz
add
popa
or
imul
xchg
dec
and
push
data16
aas
cmc
or
out
lods
xchg
pop
loop
loop
xchg
mov
pop
movsb
xor
sbb
out
fs
inc
xor
sub
icebp
add
dec
cmp
outsb
mov
pushf
sub
test
lahf
dec
pop
sub
andb
jne
or
mov
in
insb
les
arpl
js
adc
mov
mov
dec
pop
test
mov
cltd
andl
cli
jle
std
mov
imul
rolb
mov
sub
loopne
mov
pop
fidivl
icebp
pop
inc
shl
clc
sbb
enter
mov
adc
add
mov
push
jle
lods
and
stos
loopne
xchg
xor
mov
inc
daa
lock
loopne
sti
pop
push
out
addr16
cmp
inc
mov
arpl
and
lock
sbb
push
pop
adc
jecxz
stos
dec
cmp
fcoml
ss
arpl
iret
fcoml
xor
mov
jecxz
jmp
jmp
xchg
push
mov
mov
jne
or
or
clc
or
sbb
call
add
and
outsb
inc
mov
pop
loopne
mov
sbbb
call
sub
xor
mov
lea
rcll
xchg
push
fiaddl
aas
push
int3
ds
cmpsl
pop
xchg
adc
sbb
pop
cmc
pop
adc
scas
leave
lds
xor
fnstsw
sbb
aas
adcl
roll
xchg
lods
icebp
das
bound
fisubrl
xlat
loop
sarl
iret
in
fists
mov
dec
fildl
add
sbbb
mov
out
sbb
fidivs
or
lods
int3
pushf
ja
lcall
jecxz
dec
lcall
push
imul
fwait
gs
mov
stos
push
dec
fstpl
insl
fwait
sbb
fwait
mov
arpl
test
stc
jle
ds
adc
mov
popf
je
out
fisttpl
add
mov
sbb
mov
push
js
call
lock
xbegin
and
inc
mov
and
xchg
popa
pop
pop
hlt
jne
mov
repnz
push
push
stos
lods
fs
sub
fstpt
std
push
arpl
xchg
aas
sahf
adc
push
stos
lea
mov
das
mov
lcall
ja
cwtl
pop
cmp
and
pop
insb
dec
mov
push
insb
push
test
or
iret
xchg
test
int
out
add
sbb
lcall
lock
push
and
mov
dec
push
loope
dec
rcrl
test
sub
inc
push
mov
or
add
jne
jmp
gs
daa
ja
and
cmp
xchg
aas
cmp
arpl
lock
shl
push
ror
jg
popf
stos
popa
mov
jo
xchg
popf
pop
int3
loop
and
push
mov
sbb
adc
push
dec
sti
or
lcall
lods
xchg
repz
cmpsb
xor
not
push
imul
dec
icebp
adc
mov
test
cmpsl
push
cmpsb
pop
jecxz
jae
pop
push
push
jle
dec
aad
mov
push
and
mov
inc
xor
pop
adc
jge
js
insl
repnz
addr16
lea
or
adc
cwtl
pushf
pushf
adc
xchg
cmp
loopne
iret
idivl
pop
out
arpl
adc
cmpsl
push
mov
out
negl
stc
popf
cmp
rcrl
xorl
ja
inc
push
mov
push
sti
mov
scas
std
dec
cld
dec
aas
mov
in
rorl
cltd
and
xlat
stos
ljmp
jae
mov
add
pop
sbb
add
and
or
daa
jmp
stc
jp
pop
pop
mull
sub
in
pop
add
outsb
stos
hlt
add
xchg
lods
cmp
enter
shrb
je
pop
mov
outsb
lret
pusha
je
lods
lds
ret
rcr
sbb
mov
push
mov
movb
mov
cmp
push
inc
add
mov
cltd
test
sub
xchg
aam
lret
movsl
adc
mov
xchg
xchg
div
and
fsubs
lds
push
in
mov
lahf
cli
loop
push
dec
lds
out
test
stos
xchg
es
test
data16
mov
and
cmp
and
inc
scas
mov
sub
sub
nop
ljmp
in
sbb
xor
movsl
lret
data16
push
mov
cmpb
dec
add
ret
rolb
pushf
test
xor
hlt
xor
jge
and
pop
or
push
outsb
in
inc
imul
sti
leave
or
iret
push
and
shlb
push
dec
dec
xlat
aam
jno
loope
mov
fidivrl
in
mov
push
push
xchg
dec
inc
cmp
jns
adc
scas
in
es
jbe
pop
faddl
adc
push
mov
jns
inc
xchg
xchg
int3
out
jle
bound
fidivl
dec
and
jle
mov
rorl
mov
add
daa
sbb
xchg
sub
cmp
add
sbbb
out
cmp
xchg
sub
out
inc
movsl
into
lcall
icebp
inc
ljmp
lcall
xchg
insl
leave
inc
and
scas
mov
scas
sar
jne
movsb
and
into
mov
cmp
sbb
ja
loope
mov
cmpsl
ss
pop
adc
rcl
xor
mov
dec
ret
jae
adc
sbb
push
rol
dec
pop
jle,pn
mov
or
gs
rcrb
sbb
cmp
in
fwait
mov
xchg
lahf
mov
ret
push
fisubl
sub
mov
jne
mov
or
xor
shll
pop
jle
jle
adc
push
hlt
lcall
rorl
mov
movsl
sahf
pop
test
fadds
add
or
cmp
daa
int3
je
add
push
int3
pmuludq
test
xor
rcr
cli
push
sbb
push
dec
adc
lcall
nop
jp
add
lods
jg
mov
iret
or
pop
repz
mov
push
jmp
js
lock
push
popl
cmc
fwait
or
dec
push
inc
push
stc
fstps
pop
ret
out
pop
out
sub
sub
clc
in
push
xchg
xor
xchg
add
imull
das
iret
fcmove
xchg
test
ficompl
xor
sub
aad
pop
lahf
xor
insb
pop
lods
xchg
xchg
adc
mov
outsl
stos
scas
je
out
es
ljmp
xchg
xchg
jb
int3
aad
push
ss
mov
inc
add
loop
lcall
sahf
cmp
aam
or
sub
inc
sub
les
sbb
in
mov
sbb
xchg
mov
frstor
hlt
cli
stos
mov
test
cmp
rcrb
xlat
aad
jo
pop
aam
dec
add
pusha
and
in
mov
pop
ljmp
aam
xor
and
jno
pop
fldt
sbb
mov
lock
sahf
jbe
out
mov
cmpsl
jle
and
sub
jae
lods
cmp
push
jne
mov
in
test
ds
inc
push
ja
lret
sbb
mov
cmp
jns
fdivrs
inc
or
mov
sub
sub
cmpsl
fisubrs
jl
xor
mov
dec
aam
test
daa
test
mov
push
out
pop
push
orb
cs
popa
cld
lret
xor
lods
pop
push
mov
hlt
sub
aas
and
add
sbb
movsb
jmp
gs
push
xor
xor
dec
mov
cmp
shll
pop
cmpsb
sbb
mov
mov
rcrl
cs
jo
xchg
mov
les
enter
nop
stos
and
test
repz
shr
dec
xorb
mov
sarb
stos
js
jo
jb
into
sub
jecxz
into
rolb
mov
sbb
test
pop
xor
arpl
roll
cmpsb
shll
lods
outsb
lahf
clc
pop
rorb
push
add
ret
or
rorl
rolb
add
int3
jmp
je
sbb
sahf
ss
pushf
stos
sbb
cli
xor
popa
call
cmp
fwait
rcrl
pop
in
movsl
mov
dec
add
icebp
sbb
mov
insb
pop
insl
icebp
mov
inc
jp
outsb
add
mov
insb
pop
push
pop
pop
scas
push
adc
addr16
mov
sbb
test
dec
add
and
and
xlat
mov
push
add
mov
sub
sbb
comiss
lock
sbb
cmp
cmpsb
in
icebp
lock
mov
pop
aas
add
xor
jge
js
jmp
push
ret
add
lahf
lcall
adc
out
add
push
dec
ret
loopne
adc
xor
jge
rcrb
cmpsl
cmc
jg
adc
aad
inc
sub
insl
mov
int3
sub
cmp
imul
jbe
outsl
insb
jb
fildl
fwait
xchg
rol
out
cmp
and
push
mov
jbe
mov
cltd
loope
jo
mov
insb
adc
lods
xor
cmp
loopne
and
inc
lahf
xor
repnz
bound
test
iret
lods
pop
or
loopne
das
mov
xor
call
jle
or
dec
mov
bound
aam
test
lea
movl
mov
repz
xor
inc
push
repz
cwtl
ret
push
inc
test
jg
ljmp
xor
fcompl
cmp
cwtl
pop
sbb
adc
test
sbb
icebp
sahf
popw
add
xchg
sub
cmp
stos
mov
popf
adcl
sahf
mov
pop
jne
popf
inc
push
pop
daa
mov
push
cs
jecxz
out
inc
or
or
fwait
mov
out
xor
inc
jae
lea
xor
push
dec
mov
in
js
filds
rcll
test
or
push
loop
xchg
cltd
cmp
mov
jecxz
add
pop
xor
out
lea
shrl
ret
lret
xchg
in
rclb
sar
xchg
popa
insb
mov
lods
jmp
mov
loope
jne
sbb
and
pushf
aaa
in
inc
sbb
out
nop
adc
and
push
daa
adc
push
push
mov
mov
aam
push
push
jge
pop
sub
rclb
lahf
cmp
push
mov
into
or
pop
mov
push
shrb
pop
fstps
mov
push
push
push
xchg
stc
mov
fdiv
cld
in
adc
outsb
sub
inc
jl
adc
cli
sti
jmp
stos
cltd
jmp
popf
mov
sub
pop
mov
stos
mov
lods
addb
rcrb
fistpll
cwtl
cmp
test
or
stos
out
je
aad
imul
fnstenv
test
iret
call
pop
jle
mov
jmp
mov
mov
scas
sub
sbb
or
inc
in
fwait
push
and
mov
pop
adc
pop
hlt
dec
out
jns
mov
lahf
fs
repz
movsl
cmp
jl
jmp
stos
call
mov
sub
or
js
mov
data16
enter
xchg
jne
sub
insb
mov
sbb
dec
sbb
test
mov
into
addr16
outsb
loopne
imul
sahf
cltd
pusha
or
fsubs
in
sarb
jecxz
test
dec
fmull
ret
aas
jecxz
cld
add
push
stos
or
add
scas
sarb
sbb
jp
je
mov
jne
sbb
fs
fcoms
cmp
aaa
testl
test
aas
xchg
in
push
fsub
scas
mov
fcomps
or
add
sti
push
mov
rol
cmp
popa
mov
scas
sub
jp
jb
lods
flds
ret
lahf
adc
daa
xchg
out
into
inc
jb
insl
sub
inc
out
mov
xchg
xchg
push
outsb
sbb
lcall
sbb
mov
les
out
mov
lods
lret
or
mov
pop
inc
sahf
xchg
push
xor
mov
mov
sbb
jb
jp
push
dec
lcall
iret
sti
rol
dec
cld
fs
sbb
and
adc
mov
or
roll
mov
test
stc
jo
lret
imul
test
fwait
out
test
icebp
jae
nop
mov
mov
or
jb
movsl
aam
loope
adcl
xchg
fidivs
out
pop
cmp
cmp
fldenv
jns
mov
gs
jb
mov
mulb
sbb
fbstp
cmp
mov
mov
jecxz
jo
pop
lahf
movsb
jg
and
arpl
cwtl
mov
aad
dec
pop
sbb
movsl
ljmp
pop
mov
shll
xor
adc
leave
cwtl
mov
push
pusha
jp
xchg
cmp
aad
mov
pop
cmp
cwtl
sub
sub
js
movl
lds
das
cltd
in
mov
sub
arpl
fsub
pop
vmwrite
jb
fninit
push
scas
mov
roll
push
daa
jns
jne
sbb
inc
in
ja
or
lret
sti
mov
in
pop
cltd
and
jecxz
scas
clc
out
clc
and
out
jmp
push
pop
inc
enter
mov
and
push
imul
mov
mov
into
push
mov
je
push
dec
and
or
xor
or
arpl
outsl
fwait
jnp
jecxz
mov
mov
pop
push
lret
cmp
pop
cmp
inc
add
rcl
xchg
je
test
mov
sti
cli
pop
orl
push
xor
sub
sub
enter
pop
loope
int3
loop
jmp
adc
mov
test
stc
das
les
leave
into
mov
in
jl
cli
ss
push
jg
dec
pushf
push
pop
push
cmpsb
or
xor
ficomps
mov
cmpsb
add
daa
dec
scas
mov
and
out
sub
pop
xchg
fs
popa
ss
int
lret
lret
push
pushf
xor
sub
xchg
sarb
test
rcrl
mov
jl
lcall
fsubs
rcrl
aad
imulb
push
push
orb
pop
mov
adc
and
adc
mov
mov
mov
mov
aaa
les
sahf
data16
out
xchg
mov
loopne
sbb
cmp
push
mov
fisubrs
divb
pop
icebp
push
sbb
jl
rcrl
mov
aam
push
outsl
scas
jns
mov
jecxz
xchg
or
or
das
push
jnp
shlb
dec
cmp
pop
jae
mov
stos
nop
push
cmpsb
cli
xor
dec
and
les
mov
mov
xor
cld
adc
jmp
std
imul
aad
mov
inc
or
jge
enter
xchg
sti
aam
fs
lahf
pop
mov
adcl
call
je
lret
insl
shrl
inc
xlat
xlat
add
dec
dec
int
cmp
sub
ret
sahf
hlt
jp
dec
sub
jnp
add
aas
scas
out
jbe
dec
add
mov
or
and
js
insb
cli
fisubs
adc
xor
fnstcw
jl
incl
push
decb
cmpl
mov
bound
add
xchg
or
sbb
imul
icebp
mov
or
pushf
imull
clc
mov
mov
xchg
cmp
dec
ja
rcll
icebp
jae
cmc
stc
bound
call
daa
xor
outsl
test
std
push
push
int
adc
and
repz
mov
icebp
js
or
in
pushf
cmp
divl
pop
aad
push
rcrb
push
imul
pop
pusha
fcom
cmc
leave
inc
stc
fisttpl
add
movsbl
fnsave
leave
std
fcoms
repz
sbb
push
or
pushf
int3
test
or
imul
cwtl
sbbb
daa
fimull
test
sub
push
in
mov
stos
pushf
pop
mov
sbb
cmp
mov
mov
mov
jb
inc
push
xchg
push
mov
fwait
cwtl
stos
dec
test
pop
and
ljmp
fmull
outsl
lds
sbb
mov
pop
jge
pushf
lahf
dec
pop
or
in
sub
imul
rolb
jl
or
fmul
dec
mov
test
int
cmp
and
pushf
adc
mov
mov
jge
rclb
call
mov
or
inc
push
or
outsl
push
mov
test
in
dec
xchg
fisubl
loop
mov
xor
add
in
adc
sbb
or
stos
daa
xchg
int
loopne
insb
lahf
aad
in
dec
jbe
in
or
push
mov
lret
dec
xlat
add
aaa
pop
out
sbb
jmp
aam
cmp
sbb
ret
xor
ss
fisttpll
jnp
shlb
add
ret
dec
adc
and
pop
out
xchg
test
fldenv
jle
sbb
movsb
add
stc
xchg
mov
in
xchg
out
les
shll
add
insl
and
arpl
sub
pop
mov
jo
mov
dec
add
push
cmp
jle
sub
xor
fwait
inc
cmc
call
adcl
cmc
out
sbb
pop
rclb
repz
addr16
mov
ss
scas
lret
jl
jmp
adc
nop
sarb
and
or
sbb
sub
cmp
repz
xchg
loope
pop
pop
inc
dec
jae
fs
jbe
jmp
mov
mov
or
push
add
addr16
mov
mov
sub
mov
addl
lahf
pop
fidivrs
xor
push
std
loopne
add
cmc
xor
je
sub
enter
bound
push
push
sahf
and
mov
cmpl
outsl
lcall
das
inc
popa
jp
adcl
je
cmp
mov
test
xchg
dec
int3
jl
sub
loope
ds
push
rcll
and
into
frstor
shrb
pusha
mov
and
cmpsb
pop
mov
add
mov
popf
andb
ljmp
adc
sbb
lahf
push
mov
sub
in
mov
call
and
stc
pop
ret
dec
push
adc
aas
push
call
pusha
lods
fdivl
pop
test
popf
aaa
loope
sub
cs
inc
repz
xchg
icebp
out
gs
pop
fs
rcrb
sub
push
push
das
jns
fistpl
test
movsb
mov
sbb
pop
and
push
push
dec
cmp
cmp
mov
adc
add
loope
decb
jp
and
je
shll
sbb
rcl
add
pop
imul
lods
xchg
xchg
inc
ds
cmp
fcmovnb
call
hlt
push
xchg
arpl
loope
lods
fisttps
or
arpl
mov
cmc
or
je
or
inc
mov
ja
jno
mov
jp
stc
dec
inc
sub
add
mov
sub
lcall
jne
dec
pop
mov
jl
roll
and
es
pop
mov
loopne
or
dec
fnstsw
sub
jbe
pushf
push
std
nop
xchg
xchg
sub
add
mov
jbe
mov
sub
fisubrs
mov
pusha
imul
sbb
movsb
pop
xor
lods
xchg
add
and
xchg
xor
aad
xchg
cmp
push
stc
inc
rcl
xchg
cwtl
xor
sbb
psubusw
rcl
out
call
insl
jne
int
mov
arpl
rcrl
rorb
ror
js
cld
dec
inc
int
cld
insb
add
push
mov
lcall
dec
and
xlat
test
push
loop
xor
icebp
cld
push
idivl
clc
test
iret
mov
mov
daa
cmpsb
outsb
mov
into
mov
rcll
in
inc
dec
int3
cmp
push
adc
jns
mov
hlt
ret
mov
es
cld
xor
enter
lret
mov
pop
das
jns
cld
push
jle
dec
inc
xchg
jecxz
cmpsb
jne
lcall
cwtl
dec
push
adc
ljmp
lret
fsubs
jge
sub
xor
mov
jb
dec
push
xor
cld
fildl
xchg
aaa
out
dec
scas
movsl
and
nop
cmp
adc
jns
das
ds
fsubrs
pusha
icebp
xchg
js
mov
shll
push
pop
xchg
adc
xor
loopne
sbb
xor
stc
dec
push
lea
mov
dec
push
mov
cmp
push
aas
repz
inc
mov
mov
loope
call
jb
and
fadds
fcoms
rcrb
dec
sbb
arpl
icebp
mov
cmp
sub
in
inc
test
sub
ret
popf
in
repnz
adc
cmp
or
int3
adc
pushf
repnz
xchg
push
jns
mov
fidivs
sahf
rorb
repnz
mov
lea
dec
pusha
insb
mov
leave
cmp
mov
clc
insl
call
mov
sbb
inc
mov
into
outsl
insb
imul
cld
push
out
out
aas
mov
pusha
repnz
mov
or
stc
mov
std
pop
leave
lods
and
cmp
inc
adc
je
pop
roll
shrl
stos
in
ss
decl
dec
loope
push
in
test
rol
icebp
rorl
add
jb
enter
jne
out
jg
in
data16
or
xchg
je
rcll
popf
adc
dec
dec
ja
sub
dec
jb
outsb
cli
or
mov
mov
sbb
lahf
stos
mov
lret
test
loop
sub
leave
addr16
push
xor
adc
cwtl
jg
cmp
popa
popa
fsubrl
sti
out
test
pushf
in
dec
push
xchg
movsl
sahf
call
push
xchg
push
jecxz
imul
and
pop
xchg
orb
cmp
jb
in
sub
in
mov
movsl
push
or
adc
les
mov
fsubr
scas
std
mov
int
int
loope
dec
sub
push
into
test
pop
mov
mov
mov
mov
push
push
dec
mov
jl
pop
test
sub
cmp
mov
inc
pop
inc
ljmp
out
enter
and
xchg
lods
sahf
fldl2e
jmp
jnp
push
addr16
insl
outsb
push
cmp
or
ljmp
into
mov
jns
adc
shrl
dec
jbe
or
movsb
pop
lea
pop
ljmp
stc
testl
jmp
aam
data16
adc
pop
push
jno
or
cmp
pop
adc
push
out
and
sbb
mov
push
cmp
shl
mov
pushf
jecxz
int3
dec
sbb
stc
bswap
mov
in
ret
mov
pop
cs
or
dec
fnstenv
sub
hlt
inc
sahf
push
inc
hlt
imul
je
xchg
cltd
es
push
fisttpl
scas
pop
outsl
aas
mov
jbe,pn
outsl
inc
push
push
xor
sahf
stc
enter
dec
jne
lods
jg
xor
xor
add
mov
std
stos
sbb
in
shrb
repz
lods
xchg
les
sub
push
arpl
out
sub
mov
sub
add
inc
nop
rclb
imul
and
sbb
rol
add
mov
xchg
push
mov
int3
inc
sbb
aam
aas
scas
arpl
popa
and
loopne
incb
adc
pop
pop
movsl
dec
mov
push
add
jns
mov
jle
jp
repnz
into
ss
dec
xchg
sub
push
das
filds
repnz
pushf
dec
cmp
imul
daa
sub
sahf
sub
inc
fisubrl
push
out
dec
into
mov
adc
add
xor
lahf
call
sub
sub
push
sbb
ljmp
inc
test
lahf
out
jno
sub
sbb
repnz
mov
push
pop
and
cltd
lods
mov
xchg
and
out
jbe
cmpsl
ds
mov
sbb
or
sbb
cmp
pop
call
or
and
mov
loop
outsl
or
lcall
aaa
dec
sub
cmp
mov
adc
cwtl
cwtl
lret
ljmp
sbb
push
dec
repnz
or
mov
cmp
dec
iret
fistpl
ja
jecxz
cmp
loop
cltd
shlb
ret
dec
test
int
xchg
jp
mov
in
inc
mov
stos
sti
cmp
movsl
stc
cmp
jp
sbb
lods
xchg
push
in
mov
pop
das
sub
adc
dec
aam
cwtl
cwtl
mov
dec
repz
test
shll
xchg
xchg
cltd
or
xchg
roll
xor
lret
mov
scas
xchg
test
inc
cmc
out
lea
leave
jecxz
dec
jno
mov
loopne
dec
xor
fwait
mov
insl
aad
aaa
mov
imul
aas
rorb
mov
sti
lcall
js
pop
test
iret
jecxz
das
cltd
pop
adc
jmp
test
pop
push
out
xchg
decl
jnp
inc
js
adc
add
filds
sub
sbb
lods
fidivl
sub
push
out
add
pop
out
jge
pop
mov
cli
sub
sub
push
in
fdivp
loopne
int
bound
jp
enter
scas
jo
in
mov
test
mov
fildl
fwait
cmp
mov
jecxz
xor
aas
fnstcw
add
loopw
dec
ljmp
mov
shlb
dec
imul
addr16
aam
clc
mov
or
xchg
push
push
cs
mov
fwait
clc
xchg
dec
and
mov
xor
pushf
push
cmp
repz
out
xor
xchg
mov
hlt
clc
int3
mov
push
inc
call
out
sti
mov
inc
push
xchg
push
insb
cmp
and
push
lock
jl
xchg
push
pushf
xchg
fdivl
cs
mov
lods
xor
outsb
vpunpckhdq
sbb
fdivr
xchg
call
pop
out
fs
jg
xchg
ret
outsb
mov
cmp
mov
push
xchg
xor
pop
xchg
call
mov
and
les
mov
inc
roll
lcall
inc
subl
pop
jb
cwtl
iret
out
push
imul
mov
cs
ds
or
and
imul
addl
mov
xorb
mov
fs
inc
push
into
jae
clc
lret
xchg
adc
adc
lcall
push
loope
mov
xor
cmp
adc
jno
push
aaa
movl
xchg
xchg
push
or
cmp
mov
pop
cmpsb
and
fnstsw
jmp
mov
push
mov
mov
movsb
or
lock
fs
pop
xchg
repz
pop
fwait
adc
push
xchg
das
add
xchg
sbbw
in
mov
xchg
negb
mov
inc
repnz
iret
push
push
movsl
in
in
mov
cmp
test
loope
jl
lret
mov
xchg
cltd
or
mov
fildl
out
and
jl
test
cmp
leave
stos
jne
fsub
in
pop
or
dec
es
jae
jle
dec
insl
idivl
push
inc
sub
inc
pop
xor
lock
sbb
sbb
fwait
xlat
xchg
imul
rorb
cmp
lods
mov
lcall
inc
mov
sbb
mov
pop
test
cmp
mov
divl
loopne
jl
adc
test
js
scas
dec
sub
dec
mov
xor
stc
mov
dec
push
mov
data16
push
out
or
iret
shl
jecxz
test
sbb
jg
pop
es
mov
popf
jge
pop
das
fimuls
popa
push
pop
rolb
test
std
mov
test
pop
jge
pop
xor
imul
testl
jb
in
cmp
xor
movmskps
mov
pop
pop
lea
cld
leave
repz
or
xlat
js
xchg
mov
cmp
sbb
std
or
insb
pushf
in
adc
push
js
dec
test
sbb
testl
cld
lea
sbb
add
pop
jmp
push
lods
test
cmpsl
stc
lret
inc
jge
jle
mov
push
xchg
inc
add
in
popa
loopne
pop
xchg
lret
mov
repz
mov
fcmovbe
cmp
push
jbe
mov
xor
mov
movsl
rep
xchg
ret
fcmovbe
push
and
lds
adc
xor
mov
nop
aad
cli
inc
jns
lods
aad
sbb
not
pop
and
addr16
repnz
orb
int
or
adc
subb
mov
clc
dec
xchg
bnd
adc
add
aas
das
bound
jmp
cmp
in
or
lods
adc
mov
and
or
insb
vandnpd
jg
dec
adc
imul
pusha
adc
add
pushw
sbb
mov
ret
adc
out
js
jb
nop
gs
mov
ljmp
push
nop
or
add
sub
sbb
xchg
cmpsb
sarb
mov
jp
enter
iret
pusha
push
sbb
outsb
push
pop
jge
xchg
scas
sub
test
ss
push
aaa
jno
jbe
in
sbbl
mov
in
fistl
in
sub
stc
sti
xchg
out
dec
adc
pop
test
test
sti
xchg
xchg
dec
ret
addr16
mov
cmp
lahf
lcall
imul
or
insl
call
ds
add
cli
dec
pop
mov
shll
inc
pop
jne
cld
add
xchg
psubsb
push
addr16
call
push
js
leave
sahf
sahf
shlb
jae
mov
fs
xor
stc
jne
ljmpw
jge
mov
or
fnstcw
test
sbb
add
cmp
ljmp
out
out
cmp
push
and
push
shll
popa
cmp
loop
sbb
ds
jl
in
inc
rclb
mov
ds
fbstp
fdivl
push
out
sahf
cmc
jge
int3
dec
ss
addr16
sub
push
jne
push
pop
lahf
lds
inc
mov
repz
movsb
scas
inc
jnp
shr
xor
add
jmp
sbb
inc
xchg
out
cli
fmul
cmc
scas
pop
dec
or
mov
xor
in
out
or
movsl
mov
xchg
cmpsb
loopne
lds
push
jns
mulb
sub
out
enter
les
movsl
outsl
push
clc
loopne
sbb
push
pop
sarl
lock
arpl
idiv
xchg
push
and
pop
in
fisubs
fmuls
in
pop
and
lods
and
mov
iret
cmp
jp
mov
popa
shll
jb
jge
and
push
xchg
data16
je
ljmp
cld
enter
jmp
and
pusha
adc
pop
arpl
pop
les
xor
mov
adc
or
add
pop
idiv
hlt
xchg
mov
pop
inc
lcall
or
fstpt
hlt
cli
stc
popa
mov
adc
mov
loop
cmp
sarb
push
fbld
jg
data16
sub
cmp
pop
push
aam
push
cmp
loop
jbe
in
jge
subl
cld
jne
dec
fs
mov
stc
fwait
sub
and
add
out
push
lahf
inc
mov
rorl
cmpsl
dec
and
or
ljmp
mov
hlt
mov
jmp
cld
push
mov
dec
outsb
shr
popa
jae
xchg
dec
xor
or
repz
mov
scas
add
outsl
dec
cmpsl
cmp
fisubl
xlat
rcrb
push
imul
cs
mov
jnp
insb
sarb
add
adc
nop
push
fwait
int
andb
pop
mov
aam
clc
pusha
scas
lea
loop
fmul
dec
jo
fmul
lret
mov
sub
jne
cmp
arpl
addl
out
mov
out
pop
faddl
mov
lods
xor
push
daa
jp
dec
pop
mov
xchg
push
rcrb
jecxz
or
jnp
flds
fstpt
shlb
mov
sub
and
mov
xchg
stc
push
dec
jno
icebp
sub
bound
je
stc
xchg
jle
stc
inc
popf
fwait
jp
outsb
mov
lods
sub
pop
dec
xchg
stc
jge
jg
mov
dec
divb
mov
repnz
jg
add
or
imul
push
repz
jns
mov
push
sbb
jb
mov
push
xchg
sub
loope
mov
call
xor
stos
xchg
pusha
sahf
sub
pop
mov
xchg
adc
hlt
fsub
xor
ss
cmpsb
negl
xchg
inc
aas
sbb
mov
add
push
lds
inc
adc
ret
out
pop
popf
or
mov
sub
mov
lcall
mov
fstpl
in
out
add
arpl
int3
xchg
in
inc
inc
dec
pop
fcomps
shlb
jmp
int3
xor
jns
jae
in
repz
inc
aas
or
adc
or
push
int
in
das
stc
inc
mov
repz
or
and
jnp
jbe
sti
cmpsb
sbbb
test
push
sti
mov
popf
push
xor
lret
scas
add
sbb
cli
popf
nop
or
pop
xchg
push
in
push
inc
lret
int3
pop
stos
add
movsl
mov
inc
stos
jae
xorb
nop
jge
movsb
cli
repz
and
mov
mov
notb
ss
push
bound
lods
pop
cli
jbe
mov
xchg
jns
pop
cmp
data16
stc
int3
cld
mov
pushf
push
icebp
mov
loope
add
mov
push
mov
mov
cli
dec
scas
pop
xchg
ficomps
xor
into
fdivp
pop
fstpt
mov
aam
mov
fnstenv
daa
cmp
gs
inc
aas
cmp
adc
push
mov
in
addr16
mov
cmp
and
popa
add
js
psubusb
clc
repz
nop
out
cmpsl
ret
ljmp
mov
test
movsb
sub
rcr
mov
sub
mov
test
lock
addr16
dec
addr16
mov
aaa
push
std
call
in
mov
mov
fistps
jg
push
rolb
mov
mov
cltd
jbe
sub
in
addb
insl
popa
push
sti
and
aad
popf
ds
data16
aas
out
sbb
ficomps
test
movl
sub
in
loopne
popf
lea
xchg
call
add
push
fstl
xor
cmp
insl
push
cwtl
outsb
pop
insb
adc
push
mov
dec
lcall
nop
jge
pusha
pop
and
loope
std
jecxz
gs
movsl
lret
ja
push
pushf
int3
rol
add
lods
cltd
cmpsl
repz
icebp
into
addr16
adc
xchg
add
nop
lret
inc
pushf
call
jle
and
notl
in
lret
mov
inc
jo
stos
cs
add
xchg
jl
mov
in
mov
bound
fs
or
fxam
pop
mov
int
jno
sbb
and
std
sbb
mov
sbb
nop
addr16
xor
fcoms
mov
das
nop
add
mov
jae
int
decl
cmp
leave
mov
in
push
push
xchg
loope
imul
fimull
inc
add
int3
sbb
out
out
cltd
mov
xor
cld
pushf
inc
inc
cld
loopne
lods
or
ds
popa
jbe
adc
mov
aaa
xchg
jo
push
add
mov
decl
or
jo
in
add
in
mov
push
cmp
or
jb
test
data16
pop
std
aaa
es
movsb
sub
pop
cld
inc
push
push
out
sbbb
js
mov
push
jp
out
jno
push
mov
cmp
xchg
pushf
cmp
cwtl
daa
cmp
sbb
push
clc
mov
test
cwtl
xorl
int
xchg
test
popa
int3
pop
add
push
rclb
mull
repz
cli
adc
pop
dec
lret
jg
push
jne
sti
cmpsl
add
mov
jge
push
test
jb
stos
xlat
mov
addr16
adc
sub
scas
mov
sbb
jge
sub
sub
sbb
mov
dec
pop
push
jle
lahf
cmp
xchg
and
mov
adc
sub
repnz
xor
ljmp
mov
rclb
mov
xchg
mov
lret
stos
jge
push
movsl
sbb
sub
push
push
scas
jnp
inc
dec
lods
fsubs
mov
or
or
xor
pop
loopne
cltd
push
push
iret
mov
pushf
sbb
shr
inc
sbb
ljmp
mov
ljmp
je
fsubrp
enter
sub
shll
pop
add
inc
mov
cmpsb
movsl
movsl
lret
sbb
clc
insb
scas
cmp
and
dec
mov
mov
inc
dec
jmp
jmp
fucomi
in
lahf
jmp
test
push
mov
xor
xchg
and
iret
jnp
adc
cmp
aas
pop
adc
mov
sbb
fsts
js
mov
bound
xor
fwait
mov
push
xor
aad
pop
sub
stc
ja
pop
aad
dec
aaa
add
lcall
outsl
fmul
lods
addr16
out
int3
pop
dec
jo
dec
ds
xchg
cmp
int3
daa
fdivp
loope
stc
jl
mov
or
push
stos
lret
sbb
test
sar
hlt
pop
cmp
mov
mov
sbb
les
fs
ret
xor
mov
mov
sti
insl
test
cmp
dec
inc
cmp
aaa
scas
cmc
xchg
fsubrp
cmp
enter
sbb
aas
jnp
xchg
pop
xorl
mov
out
pop
in
fcmovnbe
rcrl
testl
xchg
out
mov
in
xor
mov
jb
push
inc
sarl
dec
xchg
movsl
popa
push
ja
mov
xlat
jle
sbb
test
xor
fimull
xorb
push
int3
out
inc
sub
add
add
inc
loop
ucomiss
mov
popf
lcall
int3
pop
pop
mov
aaa
stc
cli
xor
pop
jne
inc
jmp
or
in
pop
stc
pop
jecxz
imul
daa
cmp
bound
shl
sahf
dec
icebp
leave
xchg
or
xor
int
dec
sbb
pop
gs
cmp
dec
pop
push
mov
pop
lret
mov
adc
decl
test
push
mov
mov
popf
jae
cmc
out
shrl
imulb
xchg
and
sbb
jp
push
lret
jo
rol
mov
mov
cmp
mov
mov
dec
xchg
imul
xlat
test
hlt
mov
hlt
or
jle
cmp
cmp
or
mov
icebp
dec
gs
cmpl
add
sbbl
cmp
cmp
jns
int3
xchg
adc
das
adc
mov
int
mov
xor
sub
mov
bound
inc
jnp
pop
int
adc
xor
mov
xor
aaa
adc
adc
xchg
cmp
adc
enter
jecxz
jecxz
jle
cmc
and
mov
or
ss
pop
xchg
adc
lret
aam
mov
sub
cmp
aad
jnp
loope
sarl
das
pop
icebp
xor
mov
fistps
dec
pushf
mov
lret
icebp
push
mov
sbb
popa
sti
bnd
mov
xchg
or
mov
adc
aam
push
stos
jnp
mov
push
adc
negl
xor
fwait
push
dec
pop
iret
mov
int
movsl
or
push
mov
fsubs
enter
test
in
mov
xchg
lods
mov
sub
mov
in
out
repnz
aad
es
sbb
add
jb
cwtl
mov
pop
les
repz
sti
mov
cli
xor
dec
mov
add
push
jg
insb
push
cmp
sqrtps
subb
aas
mov
cmp
dec
push
out
adc
popa
mov
jecxz
pop
loope
mov
pop
dec
lods
out
mov
lods
aad
sub
in
shr
subl
sbb
repz
out
pop
push
push
mov
repz
fnstsw
loopne
and
mov
not
and
daa
in
dec
push
push
ficoml
or
push
xor
std
add
and
sbb
in
dec
daa
enter
push
js
dec
in
jns
and
loopne
loope
add
stc
and
test
and
mov
ret
aas
mov
pop
inc
cld
movsl
jmp
aad
mov
test
int3
fdivrp
xor
mov
pop
call
hlt
mov
ds
pop
fucom
xor
clc
cli
popf
enter
cltd
or
and
adc
lret
movsl
stos
sbb
adc
testb
push
and
mov
pop
sahf
jb
dec
fst
scas
sbb
icebp
test
mov
subb
sbb
cmp
mov
mov
lret
sub
lods
rclb
mov
push
add
or
mov
inc
pop
or
roll
bound
stos
xchg
lret
adc
ss
hlt
xchg
addl
fsubl
xor
push
fdivrp
fldl
sub
lock
jle
or
and
sub
xor
stos
pop
mov
movsb
insb
sbb
mov
jae
fistpll
add
call
sbb
cwtl
sub
xchg
cmpsb
roll
in
cli
push
jnp
enter
dec
sbb
xor
mov
lahf
mov
dec
inc
repz
in
pushf
push
lahf
pushf
in
fcompl
dec
mov
mov
ds
inc
sahf
sbb
sub
or
and
mov
mov
out
es
sub
add
lret
aaa
movsb
adc
push
push
cmp
adc
in
out
push
aam
mov
mov
jle
jno
jne
adc
loop
cmpsb
xchg
pop
mov
and
inc
xor
ss
jmp
xchg
xlat
inc
cmpb
repnz
js
mov
adc
test
mov
pop
mov
daa
fcmovb
and
test
and
pushf
cld
push
pop
xor
cmpb
inc
aam
fistpl
and
mov
mov
push
vpxor
or
inc
pusha
lock
inc
cmpsb
mov
insl
mov
xor
xor
test
push
push
mov
cmp
in
jp
lods
jl
stc
cmp
test
sbb
lret
cmp
mov
pop
stos
sahf
sub
cwtl
sbb
mov
and
clc
mov
push
push
imulb
shl
ds
lret
jl
scas
dec
mov
or
mov
mov
lcall
cmp
js
comiss
inc
add
dec
sahf
out
pop
pop
mov
shrb
and
mov
scas
mov
adc
les
push
das
mov
cmc
sub
stos
pushf
cli
idivb
aas
push
cli
int3
rcrl
nop
mov
data16
mov
jp
rclb
mov
pop
xor
push
jno
jnp
scas
jg
stos
or
aaa
notb
idivl
cs
mov
hlt
rcrl
test
lret
icebp
imul
faddp
jg
and
dec
sub
add
jp
cs
xchg
pop
sbb
lret
neg
lods
dec
cmpsl
mov
ret
mov
cld
fcomip
fisubrl
cld
test
cs
pop
xchg
hlt
mov
sbb
pop
aas
popf
mov
arpl
lds
sbb
mov
aas
push
loop
mov
or
lds
imull
scas
in
mov
xchg
movsb
sbb
mov
xchg
or
dec
out
insl
jnp,pt
pop
sub
xchg
xchg
mov
out
or
orb
push
jno,pn
ss
xchg
push
fs
and
jo
push
mov
sbb
cmp
test
out
sub
fidivs
xchg
hlt
pushf
fisubrs
lret
lock
mov
enter
pop
jnp
fucomi
aas
int
ljmp
add
dec
pop
movsb
nop
insl
mov
insb
xchg
dec
xlat
adc
xchg
or
fdivs
dec
and
ljmp
mov
in
incl
inc
add
add
inc
adc
xor
lret
inc
adc
sub
pop
nop
sbb
loope
mov
jmp
mov
ret
sub
adc
and
test
push
mov
adc
shl
jp
clc
outsb
ja
jmp
jbe
jns
mov
loop
mov
fisttpl
popl
xor
andl
pop
jmp
inc
sbb
fdivp
shlb
mov
jecxz
and
mov
add
mov
scas
inc
dec
sbb
bound
mov
es
pusha
or
and
mov
push
stc
aad
addr16
fisubs
dec
sarl
lock
xor
sbb
adc
add
fadds
shrb
jmp
and
or
dec
test
leave
dec
stos
out
shrb
or
repnz
popa
in
mov
pop
xchg
pop
inc
add
mov
js
and
and
ljmp
call
add
jmp
push
les
push
pop
inc
nop
out
test
jl
mov
ljmp
insb
dec
mov
mov
pop
push
jbe
xchg
repnz
stos
dec
scas
pop
fdiv
cmp
push
push
push
add
sbb
xlat
pavgw
sub
les
rcrl
adc
xor
ret
daa
sub
out
push
int3
sub
mov
aam
out
mov
xchg
add
aad
out
cmp
add
std
popf
movsl
inc
in
lods
and
es
fcomip
inc
fs
push
adc
divb
mov
int
int
dec
xor
test
jb
mov
and
outsb
mov
mov
test
inc
sub
xor
xor
sbb
push
jle
in
mov
push
jp
in
ds
xchg
ss
mov
repnz
outsb
and
pop
test
lret
std
mov
ljmp
inc
das
or
sbb
mov
iret
dec
push
inc
cli
insb
inc
rcll
aam
mov
outsb
push
movl
test
sbb
cmpsb
add
mov
lods
sub
mov
les
xchg
xor
das
dec
jo
bound
inc
lods
xor
cltd
aam
inc
std
or
lods
or
dec
adc
mov
cmp
xchg
mov
fistpll
cli
sub
icebp
int3
das
aam
sbb
inc
inc
rcrb
push
sar
ja
mov
ja
inc
and
or
mov
adc
cmp
enter
inc
stos
fs
add
arpl
inc
push
sti
xchg
leave
sti
out
adc
xor
jmp
nop
mov
xlat
lahf
mov
data16
lret
stos
xorl
sbb
dec
mov
sbb
add
cli
sub
pop
fwait
sub
sbb
sbbb
push
loope
lret
adc
std
sbb
insl
adc
cmpb
jb
pop
in
jmp
mov
or
out
dec
lods
add
imul
or
add
push
cmpsl
enter
cld
fs
rcrl
iret
das
clc
or
mov
pop
movsl
cmp
add
fisttpll
jecxz
mov
fmuls
adc
mov
or
sub
ret
jnp
or
scas
push
loopne
fstl
pop
jb
stos
adc
clc
lret
xchg
jmp
push
aad
push
inc
mov
shll
fbld
push
add
pop
inc
iret
or
sbb
lods
inc
pop
lret
int3
cli
mov
test
loop
aam
mov
jp
jle
pop
loop
sbb
outsl
jg
test
das
cmp
add
push
or
scas
and
mov
pusha
cmovg
icebp
jp
dec
xor
xchg
mov
mov
sti
sub
dec
add
pminsw
or
jnp
cmp
xlat
mov
pop
loope
pop
push
and
pop
sub
pop
in
xchg
jnp
xchg
and
dec
repz
adc
and
adc
jno
or
or
dec
daa
imul
pop
xor
xchg
cmp
push
push
sbb
andps
pop
xchg
out
mov
mov
sahf
adc
pop
js
sbb
nop
hlt
mov
loop
sub
scas
or
xor
stos
jmp
hlt
aas
adc
mov
lcall
cmp
sahf
orl
int
outsb
pop
popa
add
jnp
push
scas
push
leave
sti
or
mov
adc
and
test
lods
xchg
adc
cltd
bound
adc
clc
in
inc
popf
adc
stos
pop
jno
and
lcall
ds
mov
add
push
dec
ret
cmpsl
sbb
sbb
xor
lods
sarb
or
jbe
jne
je
xlat
dec
aas
sub
and
ret
repz
or
jmp
or
pop
mov
stos
mov
mov
push
insl
cmp
mov
call
mov
loop
fwait
pop
adc
jb
mov
sub
pusha
adc
mov
aam
mov
dec
jbe
leave
sbb
pushf
sbb
fs
add
popa
or
stos
andl
adc
cmp
std
xlat
mov
sbb
test
xchg
sbb
mov
call
call
lods
mov
loop
pop
jnp
pop
sti
mov
test
cmpsb
dec
jbe
jle
stc
pop
jnp
lret
jmp
mov
test
outsb
in
arpl
lahf
mov
divb
rol
insl
sbb
lret
fucomip
mov
int3
int3
pop
dec
int
dec
lock
std
pop
out
mov
lcall
mov
in
xchg
aad
mov
scas
fcoml
and
fscale
flds
rorb
dec
stos
dec
dec
rorb
mov
cmp
sbb
and
adc
das
dec
and
sub
stc
dec
jbe
and
jae
loop
jns
outsl
cmp
xor
or
mov
xor
sub
and
je
aas
fsubrs
ja
sbb
add
mov
fimull
add
cli
xor
pop
fisubl
mov
mov
dec
and
scas
push
mov
jnp
fs
lods
sub
inc
cmp
iret
push
lods
ljmp
pushf
mov
sbb
sti
sbb
outsl
stos
jne
push
push
mov
cmpsl
int
movsb
cmpsb
out
loop
cmc
cmp
test
cs
xchg
outsb
sti
inc
jno
sub
fnstsw
ret
xchg
jne
fnstsw
scas
daa
mov
jns
pop
es
addr16
hlt
ret
call
cli
push
mov
mov
fdivrl
loopne
sub
icebp
popf
ljmp
insl
js
adc
lret
mov
cmp
inc
insb
pop
ficomps
or
lods
sub
inc
into
sbbb
loope
cmp
out
inc
ret
jle
push
je
lret
or
sub
pop
arpl
gs
divl
ljmp
dec
xlat
adc
mov
xlat
ret
jne
mov
mov
sbb
stos
inc
fwait
dec
aas
std
inc
neg
cmp
mov
outsb
xchg
and
push
or
rol
out
repnz
xor
nop
push
and
cmp
je
push
call
push
jp
aad
add
imul
push
fldt
dec
jp
repz
dec
in
and
jmp
and
adc
daa
sub
xorl
shrb
cmp
xor
or
jns
pop
shrl
push
ds
addr16
mov
fs
hlt
adc
shl
mov
mov
pop
stos
rcrl
rorl
stos
lock
ret
mov
jmp
and
pusha
fbstp
mov
and
mov
or
cmpsb
pop
adc
xor
fwait
mov
int
sub
adc
scas
sbb
add
fs
mov
mov
cwtl
int
fldt
addr16
in
ret
outsl
adcb
adc
inc
push
inc
inc
movsl
sbb
sub
jl
cmp
nop
and
mov
and
adcb
out
sub
mov
and
bound
fwait
ret
lcall
adc
add
mov
sub
lea
into
pop
jo
mov
jae
mov
adc
into
decl
mov
sti
fdivrl
lds
add
fstps
loop
cli
ficompl
gs
sahf
shll
and
fucomi
out
iret
push
dec
xchg
pusha
scas
cli
mov
or
pop
mov
cwtl
push
or
fcom
pusha
fildll
in
arpl
add
xchg
jnp
jo
popf
imul
sbb
jge
sbbb
aad
sahf
loop
hlt
adc
cmpsb
push
daa
xor
jnp
rcll
imul
xor
mov
repz
pushf
add
or
mov
lock
push
test
sub
jb
sbb
jae
pop
xchg
fld1
hlt
hlt
into
mov
incb
mov
cmpl
icebp
mov
jo
push
std
pop
jge
sbb
loop
mov
push
dec
pop
leave
std
push
or
sub
out
inc
stos
jnp
subb
adc
mull
adc
add
cmp
mov
push
jo
out
loop
subb
xor
mov
mov
aam
dec
lcall
das
adc
daa
pop
xchg
in
or
outsb
pop
and
jnp
push
xor
jno
inc
enter
mov
pop
gs
lcall
sub
insl
xchg
mov
dec
adc
mov
and
sub
bound
scas
lret
fs
leave
jb
jb
mov
nop
inc
jge
fldcw
fwait
cmp
sbb
cli
xchg
push
cltd
dec
and
dec
mov
in
fs
mov
add
shlb
sub
and
mov
rol
push
or
ffreep
inc
scas
push
adc
dec
iret
xchg
out
leave
movsl
sbbl
loop
xor
pop
push
in
xchg
jl
sbb
xor
push
xor
out
movsb
notb
inc
mov
lods
sub
scas
aad
mov
shlb
push
mov
jo
aam
push
sub
dec
xchg
in
push
sbb
out
or
cltd
es
leave
xor
mov
pushf
mov
inc
jo
loop
add
dec
ret
pop
adc
mov
icebp
fistl
outsb
mov
ds
mov
cld
mov
orl
loope
xchg
out
mov
mov
mov
and
pop
aaa
insb
jg
lret
aam
shrb
test
lahf
pop
dec
fsubs
pop
cmp
fistl
orb
pop
out
dec
inc
sub
faddl
sbb
cs
jo
and
sbb
dec
cmp
ja
cmp
test
cmp
mov
push
inc
pop
push
add
movsb
xor
xchg
movsl
pop
bnd
jae
sub
and
addb
pop
stos
push
js
push
push
out
aam
fcoms
fildll
mov
inc
in
repz
xlat
mov
scas
push
xor
gs
roll
xchg
jmp
mov
fistpll
mov
adc
pop
sub
jle
push
xchg
outsb
loop
lods
push
add
clc
mov
push
cmp
outsb
jns
add
dec
push
jecxz
ficompl
ret
aad
mov
in
jo
arpl
push
mov
dec
adc
mov
jle
test
mov
dec
mov
xchg
mov
xor
loopne
or
pop
stos
dec
and
out
mov
popl
xchg
into
aas
pushf
dec
fs
mov
push
div
incb
aad
push
dec
cli
sti
repnz
pop
cmp
fsubrs
je
sbb
xchg
push
xchg
pop
jo
mov
insl
out
mov
add
pushf
cmp
inc
cld
fs
mov
cwtl
pop
sbb
sub
push
inc
inc
mov
xchg
cmc
xchg
jb
mov
cmp
xchg
lahf
mov
pop
stos
je
shll
mov
idivb
outsb
test
ret
dec
lret
jge
call
dec
std
cltd
cmpl
flds
pop
loop
aaa
mov
outsb
xor
dec
sbbl
lcall
stos
popf
pop
icebp
bnd
mov
pop
repz
ljmp
sahf
cltd
cmp
mov
sbb
shlb
mov
jnp
push
fnstenv
jl
pop
and
sub
test
jmp
sub
ret
or
lds
dec
jg
add
push
xor
rcrl
mov
je
popf
inc
add
orb
add
inc
ret
es
es
xlat
mov
inc
lret
cwtl
lret
or
xchg
sbb
mov
and
cli
xor
cmp
roll
xchg
ja
mov
mov
inc
sub
into
hlt
xor
repnz
lock
lea
jne
push
repz
pop
imul
adc
xor
xorl
cmpsl
push
mov
into
jbe
xor
out
addr16
pop
lods
repz
aas
xchg
adc
sti
lock
xor
lock
subb
xor
ja
popa
mov
cmp
pop
xchg
lcall
mov
data16
aas
shll
cmpsl
pmulhuw
cmpsl
push
pop
xchg
ffreep
add
cmc
or
cmp
adc
jno
push
sbb
ds
mov
mov
notb
ja
add
inc
push
pop
jb
add
xchg
lods
sbb
ret
push
test
mov
lds
bound
outsb
push
shl
pop
iret
jo
cwtl
jno
cltd
push
icebp
iret
and
mov
mov
inc
cli
or
cmp
cmp
cmp
jbe
scas
adc
dec
gs
das
loop
add
rolb
pop
fsubrl
addr16
adc
cmpsb
je
xor
xor
outsb
sbb
xor
bnd
ljmp
cwtl
mov
or
cmc
jmp
add
jle
outsl
jge
hlt
jbe
mov
jns
xchg
sub
std
inc
jl
mov
loope
stc
pop
rorb
xchg
insl
int3
mov
jmp
das
sub
sbb
inc
inc
xchg
ss
mov
loope
imulb
lcall
xchg
sbb
inc
mov
int
jno
add
xorb
push
mov
jbe
inc
out
test
sbb
mov
dec
pop
adc
jo
jno
xlat
push
lods
cmp
adcb
pop
add
cmpsb
aam
add
xor
add
out
lods
mov
jl
shrl
lods
outsl
sub
sbb
inc
adc
jle
in
pop
xchg
cmp
xor
unpckhps
mov
lods
push
mov
cltd
sahf
push
out
cmp
xchg
out
push
lds
pop
add
aas
in
mov
sbb
mov
out
adc
inc
ljmp
xchg
mov
sahf
ficoml
fsubs
fidivs
imul
xor
mov
inc
daa
cmpsb
jo
mov
sbb
insl
xor
and
push
lods
fsubs
lret
loope
les
push
jmp
ljmp
dec
jne
pop
fcoms
pop
shl
out
xchg
dec
stos
push
xor
in
xor
inc
xchg
push
fstps
mov
mov
or
push
xlat
bound
scas
ret
dec
mov
add
xchg
fs
dec
mov
pop
push
xchg
xor
into
xor
pop
mov
pop
jge
imul
push
loopne
in
jmp
outsl
pop
dec
and
jo
fsubp
outsl
push
ljmp
inc
lods
lds
inc
in
arpl
addr16
loope
mov
sarl
aad
inc
jecxz
por
dec
push
jns,pn
jg
add
jns
xchg
push
mov
pop
lods
insl
xchg
mov
or
cmp
adc
and
test
aam
add
rol
lods
xchg
xor
adc
pop
sbb
and
jl
or
sbb
cwtl
lods
stos
push
les
and
mov
nop
dec
xor
out
inc
adc
loope
jbe
sub
and
cmp
insl
add
pop
xchg
mov
adc
add
fisttpl
lds
roll
repnz
adc
jnp
fs
ljmp
test
jno
mov
pop
jmp
mov
lcall
pop
xor
dec
ret
xchg
xchg
movlps
notl
aaa
ja
dec
pop
das
sbb
je
pop
std
in
push
jp
addl
insb
clc
push
or
push
xchg
sub
cs
imul
pop
aaa
mov
jno
lcall
dec
popa
add
inc
outsl
jge
mov
cltd
dec
inc
packsswb
icebp
stos
cwtl
pop
xor
jb
insl
adc
lds
loope
lds
xchg
aad
dec
scas
xchg
sub
xchg
and
into
fwait
cli
mov
into
sub
mov
repnz
rcrl
fildll
dec
lahf
pop
lcall
mov
jecxz
mov
mov
or
mov
xchg
aad
pop
fcoml
fldt
into
and
jae
mov
es
sarl
mov
das
loope
dec
bound
add
pusha
jge
ss
pop
aad
ljmp
jae
addr16
insb
in
push
lods
xor
loopne
cmp
mov
insb
sub
insb
pop
hlt
pop
ret
in
xchg
invd
add
inc
jge
mov
stos
adc
jmp
ret
sbb
adc
lret
mov
mov
cmp
xchg
jne
insb
add
ds
dec
inc
bound
ds
shlb
sub
test
pop
sub
or
or
push
dec
ds
xchg
lret
mov
testl
cwtl
xor
add
inc
ret
sub
push
pop
xchg
ret
xor
add
ljmp
daa
loope
mov
push
and
lret
jle
jecxz
test
mov
imul
lock
mov
cmp
pop
movsb
sub
outsb
test
sbb
push
ljmp
repz
sub
dec
or
int3
push
jl
stos
and
cs
push
call
outsb
cmp
xor
mov
xchg
push
sub
push
push
fwait
int3
pushf
mov
out
jg
fistps
jle
mov
dec
push
movsb
sahf
xchg
mov
mov
fwait
sub
int
insl
push
xor
or
adc
pop
hlt
xor
cltd
cld
and
adc
sbb
jmp
push
negb
ds
dec
cmc
xor
and
inc
icebp
faddl
data16
sbb
cmpsl
add
pop
pop
fdivrs
push
jne
mov
in
popa
pop
add
mov
inc
sti
xor
cmp
adc
iret
in
je
bound
js
shl
bound
ret
pop
mov
decw
mov
lret
std
lret
movsl
into
xchg
xchg
cmp
in
xor
aad
hlt
add
cmp
and
pop
xor
push
xor
pop
jnp
or
pop
jns
nop
pop
adc
ret
imul
add
mov
shl
imul
push
fcomps
push
sbb
imul
js
movsb
test
test
mov
and
xor
xlat
out
cmp
imul
sahf
inc
mov
or
mov
lretw
or
add
pop
ljmp
push
arpl
mov
xor
and
dec
dec
fs
test
push
cmp
sbb
mov
jl
add
int
dec
xor
aam
xor
imul
mov
pop
sbb
lea
mov
popa
mov
loope
fs
push
lahf
lret
ret
negb
lods
push
dec
inc
bnd
jle
sub
pop
mov
push
sti
movsb
push
push
pop
xbegin
mov
in
pop
pusha
mov
jmp
out
ret
add
aad
and
xchg
repnz
push
stos
pop
push
push
adc
cmp
lds
mov
fcompl
dec
add
in
lret
mov
or
xchg
xor
lods
jmp
out
fs
sbbl
add
shlb
mov
arpl
sub
sbb
fisubl
in
rolb
inc
jae
cmpsl
jecxz
adc
xchg
xchg
inc
lods
or
int3
outsb
jecxz
sbb
sub
or
test
xor
mov
and
test
pop
enterw
xchg
xor
jl
lea
fwait
add
inc
mov
add
imul
paddb
mov
sub
loope
xchg
inc
loope
insl
cld
call
enter
call
lods
mov
pushf
aad
inc
cmp
addb
jno
push
dec
xor
test
dec
inc
mov
push
jg
push
fldl
sbb
mov
dec
cmc
xor
leave
jno
in
jns
lcall
pop
fsubl
mov
lods
jg
add
mov
ja
cld
ljmp
mov
mov
jecxz
dec
in
adc
cmpsb
pop
dec
add
movsb
insl
sar
inc
test
adc
push
clc
stc
or
mov
pop
push
aam
fmul
cmc
pop
inc
pusha
xlat
pusha
inc
out
in
fistpll
mov
push
mov
dec
pop
inc
mov
in
fwait
mov
scas
mov
clc
addr16
cmpsl
and
shll
push
repnz
jl
int3
cmpsb
mov
stos
push
repz
hlt
stc
arpl
out
outsb
mov
jno
jne
lahf
adc
addb
cmp
fadds
mov
lret
pop
jge
outsb
insl
mov
mov
add
cmp
bswap
stos
push
push
sti
aas
call
mov
mov
mov
push
int3
inc
mov
jle
pushl
bound
push
aaa
test
das
lods
jns
pushf
push
adc
push
mov
rcrb
mov
pop
adc
dec
imulb
xor
lcall
xor
out
mov
mov
int
ficompl
sub
mov
les
fidivl
test
popf
and
mov
cmc
int
ss
add
pop
pop
and
sub
mov
arpl
aaa
jbe
in
sub
dec
mov
xor
ds
fwait
jp
jp
outsb
repz
and
and
xor
jb
jns
pop
add
fiadds
sub
xchg
popf
mov
movsl
int3
mov
imulb
repnz
or
nop
cmpb
mov
dec
and
xchg
movups
data16
shld
stc
mov
lock
insl
and
sub
adc
ret
js
arpl
shl
mov
dec
shll
jo
aaa
xorl
sbb
cli
movsl
lcall
pop
pop
pop
pusha
roll
adcb
sbb
ja
adc
sar
mov
int3
push
enter
mov
cli
mov
cmpsl
stos
push
adc
cmpb
add
ds
or
add
or
cmc
sub
xchg
mov
loopne
sbb
aad
push
xchg
pop
aam
decb
push
inc
mov
movsl
jb
pop
mov
imul
xorl
enter
push
push
xor
popa
add
fnsetpm(287
jmp
jg
xchg
mov
sarb
sub
add
adc
pop
sbb
loop
dec
add
js
mov
dec
addb
fisubrl
daa
mov
js
sbb
sbb
in
jmp
mov
ds
stos
pop
fdivl
dec
dec
dec
jle
mov
jne
out
ljmp
or
xchg
or
push
mov
add
mov
adc
push
filds
inc
les
movsl
add
adc
clc
sub
jle
xchg
pop
xchg
cmp
lock
push
dec
mov
mov
dec
jge
shll
and
adc
push
arpl
push
jo
cld
stos
jge
mov
mov
mov
insl
clc
jae
xchg
or
or
sbb
mov
ret
cmp
mov
pop
call
inc
dec
cld
add
jl
leave
sbb
iret
add
sarb
loope
sub
fucomp
icebp
addl
jge
dec
cmp
outsl
push
leave
xchg
pop
clc
stos
lds
iret
xor
lea
mov
dec
arpl
in
bound
lret
or
adc
add
dec
lods
jmp
xor
adc
pop
mul
int
or
cli
fmul
out
mov
scas
adc
xchg
mov
mov
lcall
outsl
pextrw
xchg
loop
pusha
adc
pushf
mov
jp
fs
pop
ljmp
jge
cli
push
sub
adc
test
fstl
gs
xlat
out
push
imul
stos
dec
into
in
adc
or
cmp
enter
es
xchg
test
mov
clc
mov
lahf
rorl
loope
sbb
test
outsl
ja
push
push
pop
cmc
sahf
leave
ljmp
or
pop
sbb
cld
loopne
enter
mov
mov
icebp
flds
mov
les
fcomps
cs
cs
push
mulb
jne
pop
les
jmp
cli
add
push
addl
inc
add
and
xchg
repz
jecxz
push
and
lds
inc
ret
cwtl
in
enter
inc
iret
fwait
mov
xchg
xor
cli
pop
sbb
or
loopne
sub
jnp
sub
fldl
or
xchg
mov
and
mov
xchg
shrb
and
mov
sbb
pop
out
ficoml
dec
mov
popf
pop
sub
pop
ret
push
cltd
in
mov
outsb
pop
sbb
sbb
xor
int
or
iret
xchg
xor
insb
sahf
pusha
xor
cmpsb
add
or
sub
popa
int3
scas
test
clc
stos
jp
xlat
pop
pop
pop
push
mov
or
push
xchg
fisttps
mov
adc
push
leave
push
cmp
push
int
insl
sbb
mov
inc
cmp
lahf
repz
rcr
cmp
push
rcr
add
test
adc
mov
cld
bound
fcoml
pop
fldenv
pop
lock
cmpsl
ljmp
xchg
push
push
xchg
js
add
scas
repnz
mov
cmc
in
xor
sbb
fwait
mov
dec
cmc
fisttpll
es
or
pop
mov
push
and
dec
mulb
out
and
sub
int
mov
rcl
cmp
lcall
xchg
je
mov
enter
pop
in
aaa
xor
ss
adc
and
sbb
push
icebp
sub
inc
ficompl
or
xchg
jecxz
int3
imul
xchg
add
movsb
fwait
negb
cmp
fisttpl
pop
out
lock
jecxz
or
sbb
and
dec
push
lcall
push
pop
pop
cmp
ret
cmp
dec
add
loop
push
cmp
clc
imul
mov
test
and
int3
popa
add
ror
cmp
ja
xor
popa
push
ds
inc
sahf
push
test
jle
jne
aam
sbb
lock
push
and
enter
stc
ljmp
in
js
sbb
mull
fmull
jnp
pop
mov
imul
out
xchg
jp
jecxz
mov
add
outsl
stc
inc
xchg
dec
cmp
inc
cmc
push
dec
xchg
sbb
sub
adc
stos
jle
orl
inc
lahf
or
int
mov
sub
xchg
lcall
xor
test
scas
mov
inc
push
je
data16
mov
sbb
imul
ja
lret
jp
xchg
sub
inc
sbb
jo
aaa
fs
loop
xchg
iret
pop
add
loop
js
cmp
push
mov
scas
pusha
push
loopne
mov
pop
mov
sarb
and
push
pop
repnz
ja
xor
bound
fsubrs
cmpsb
test
and
adc
mov
mov
sub
cmc
adc
sahf
gs
stos
loope
in
mov
insb
jns
pusha
out
xor
inc
std
adc
add
sbb
mov
sbb
xor
jo
leave
xchg
push
mov
or
out
repz
loopne
mov
arpl
mov
xor
sbbl
rcl
aaa
int
movsb
jo
lret
and
xchg
fistl
add
jo
faddl
push
and
addr16
leave
out
cmp
adc
or
or
push
push
jne
push
xchg
push
fldenv
sub
and
leave
lods
xor
mov
xchg
mov
pop
rolb
cmp
cmpsb
adc
inc
les
inc
xchg
loope
cmp
cmpsb
push
loope
pusha
orl
inc
sbb
ret
xchg
jae
sbb
roll
mov
ret
es
sbb
or
inc
stos
imul
xchg
jae
lcall
ja
mov
fsubs
loop
push
inc
pop
sti
lods
inc
pushf
es
xlat
test
dec
add
lock
or
sub
mov
and
inc
shlb
fs
inc
lds
iret
data16
adc
ljmp
add
inc
mov
push
sub
fimull
cli
push
pop
fcoms
in
cs
mov
shlb
in
xchg
inc
stos
xchg
ss
cltd
pop
into
push
cmp
ret
dec
pop
jge
push
shll
sbb
push
in
int3
jnp
add
fisttpll
or
mov
fwait
ja
inc
push
repz
jns
rolb
imul
inc
enter
outsl
mov
cmp
dec
mull
jp
cmpsl
push
popa
iret
sti
and
jg
imull
sub
imul
mov
cmp
xor
lahf
aam
dec
pusha
dec
mov
mov
sahf
xor
ja
hlt
pop
jl
push
imul
jg
mov
dec
xor
div
lods
enter
test
inc
push
aaa
push
push
shlb
xlat
dec
ret
dec
arpl
js
das
mov
adc
mov
sbb
pop
mov
push
pop
dec
aam
into
mov
loop
outsl
into
in
jb
ret
fildll
mov
sbb
adc
xchg
hlt
mov
xchg
xchg
cmp
mov
jb
xchg
psubb
xor
pushf
test
les
jge
push
aaa
mov
stos
dec
mov
ljmp
notl
mov
mov
xchg
notb
cmp
addb
and
xchg
test
add
pop
dec
sub
push
scas
mov
dec
ret
xchg
adc
in
scas
test
cmpsb
in
repz
adcb
jno
sub
hlt
xor
into
pop
or
xor
inc
cmp
std
xchg
xchg
push
lods
mov
data16
test
jbe
pushf
mov
sti
cmp
push
mov
shlb
adc
loope
xchg
pop
dec
popf
out
cmpsb
add
pop
xor
jo
imul
sbb
xchg
inc
xor
pop
lea
out
cld
add
stos
jle
mov
pop
adc
or
sub
enter
jg
add
mov
mov
or
popf
lods
inc
stos
mov
cwtl
dec
fildl
hlt
or
cmp
arpl
mov
fisubs
test
lcall
xchg
insb
push
adc
push
push
pop
int3
add
jne
push
notl
insl
adc
int
jp
ret
push
cwtl
add
adc
or
jns
sub
inc
fs
popf
fidivs
or
cmpsb
cmp
xor
jmp
push
jbe
loop
dec
aaa
in
arpl
pop
and
inc
xor
mov
xor
push
push
es
or
mov
pop
mov
ret
test
inc
dec
jno
stc
in
mov
sarl
push
ds
mov
jg
push
fisubrl
mov
cmp
sub
pop
pusha
frstor
and
push
pop
mov
sbb
xorb
cmp
leave
xor
push
shl
pop
add
stc
mov
mov
gs
jnp
cmc
dec
rcrl
xchg
dec
xchg
fnstsw
add
dec
cmpsb
jo
mov
repz
xor
mov
push
mov
mov
rorb
nop
bound
mov
and
cmp
cwtl
lock
imul
push
push
pushf
leave
popa
push
mov
shl
jne
cmp
add
fldcw
popf
inc
mov
xor
out
stc
jp
out
les
out
notb
dec
fstps
xor
cmp
bound
sub
inc
dec
mov
hlt
cli
rorb
jmp
insl
pop
sbb
push
nop
push
sub
iret
jecxz
std
cmpps
inc
xor
or
inc
mov
or
dec
es
xchg
imul
mov
scas
mov
in
jne
in
pop
add
jne
fs
in
lret
imul
not
out
pop
add
aas
ja
daa
in
sbb
xchg
gs
and
push
addr16
fisubrs
adc
and
mov
nop
cmp
push
int3
cmp
out
adc
fwait
or
dec
xstore-rng
cmpsl
inc
sub
movsb
and
lods
push
add
xchg
in
stos
jecxz
or
nop
sbb
fsubp
jl
jecxz
arpl
jno
mov
jl
lds
adc
push
xor
or
xchg
lret
or
mov
inc
stos
mov
lods
pop
cmc
gs
or
jae
rolb
dec
xchg
cmp
iret
inc
lock
mov
push
scas
add
insl
jbe
and
push
xchg
out
cmc
cmp
je
push
and
es
loope
pop
mov
lock
inc
jle
add
inc
cs
jnp
jbe
ljmp
imul
dec
mov
int
ficoms
sub
dec
lea
lea
in
sbb
out
jae
push
int3
push
into
pushf
pop
or
push
addl
shr
sub
lret
sahf
inc
cmc
aam
add
add
and
xor
and
mov
fnstsw
add
pop
nop
jno
jg
push
gs
jp
or
es
lcall
push
push
pop
call
adc
out
lea
dec
mov
push
pavgw
addb
pushf
fistps
push
cmp
jg
mov
lret
push
out
or
jnp
pop
test
cld
push
pop
mov
push
out
push
or
cmp
and
jno
mov
or
lret
into
in
dec
js
cmp
fdivr
mov
sbbb
xchg
push
xchg
push
in
outsb
sub
int
push
jne
mov
ud0
int
xorl
test
mov
or
into
sbb
and
push
dec
push
mov
inc
push
cld
std
ss
inc
xor
rcrb
pop
mov
popa
or
shlb
insb
jmp
iret
insl
pop
or
ret
iret
sbb
lds
push
cltd
test
xchg
scas
mov
scas
jmp
rcrl
imul
sbbb
jp
jge
fisubrs
sub
jae
or
add
add
loop
pop
dec
pusha
pop
push
aaa
lods
dec
xchg
fmuls
jl
mov
cmp
jle
das
leave
mov
sbb
cmp
cmp
fucomi
ja
idiv
fildl
adc
js
fsubrl
and
cmpsl
push
or
testb
jo
lods
jmp
testb
inc
mov
pop
push
jb
adc
in
sbb
sti
out
xchg
pusha
cmpsl
les
dec
decb
xchg
ficompl
je
mov
fmul
hlt
data16
data16
das
add
jecxz
ss
sbb
push
pop
push
jl
mov
in
popl
xchg
mov
in
cmc
loope
xor
push
cli
cmp
int3
repnz
jne
jle
hlt
and
mov
pop
pop
mov
push
sub
fildll
pop
test
dec
movsl
jle
mov
or
insl
mov
fwait
jg
inc
sub
mov
test
adc
stos
cmp
es
mov
pop
je
int
cmc
cmp
push
pusha
push
jne
xor
mov
test
or
add
push
xchg
cmpsb
inc
int3
inc
pop
lea
mov
icebp
push
sarl
and
leave
icebp
adc
mov
stc
jge
repz
iret
es
lds
out
ficoms
cmp
inc
cwtl
pop
add
or
or
push
test
mov
sbb
imul
push
mov
out
hlt
cmc
mov
fisttps
mov
inc
pop
in
repnz
mov
addr16
sbb
cmp
cmp
jae
iret
popf
pusha
aas
data16
push
sbb
aad
pop
aaa
sub
cmp
pop
pop
gs
ss
stos
sbb
test
xchg
adc
in
stos
push
rcr
jp
mov
inc
jle
add
loope
push
ret
shll
ret
dec
xor
idiv
pop
xor
xchg
sarl
dec
in
push
iret
fs
imul
mov
cmp
mov
pop
movsl
or
xor
sub
sub
insb
ja
cmp
pop
cwtl
sub
call
pop
dec
pop
pop
sbbb
sub
inc
xchg
cmpsl
pusha
pop
xchg
add
adcb
push
inc
xchg
xor
fmull
in
outsl
jecxz
mov
repnz
mov
xor
add
push
popa
push
stos
push
das
pop
xchg
sub
xchg
add
scas
and
xchg
xchg
jl
gs
xlat
xor
lcall
rcll
xor
lret
mov
das
xchg
add
popa
fidivrs
push
jle
mov
xor
mov
mov
dec
fcom
jl
and
inc
ds
mov
cmpb
jno
pop
xchg
mov
sti
jne
enter
push
bound
or
sub
inc
push
mov
mov
pop
test
hlt
dec
pop
popa
cwtl
push
cltd
xor
inc
sub
je
push
sub
rorb
jno
bound
and
mov
jbe
fs
jo
push
adc
dec
or
adc
mov
jne
adc
fs
in
aad
sarb
das
mov
stc
dec
ds
add
lock
pushf
orl
loope
inc
sbb
sub
and
js
stos
adc
pop
pop
fwait
inc
sbb
fists
ret
mov
in
cwtl
xchg
and
jno
adcl
jno
cmp
pop
jne
outsb
xor
jle
sub
mov
das
xor
jbe
sbb
mov
insb
rcll
subb
icebp
fdiv
test
lret
cmp
xlat
loope
push
aad
mov
cmp
fcmovne
pop
lods
stos
or
pop
pop
jbe
xor
mov
aam
ror
jmp
int
pop
xchg
mov
test
lret
inc
xchg
loop
cli
subb
jno
xchg
adc
mov
push
mov
out
mov
or
scas
sub
mov
lcall
aad
sbb
jp
outsl
outsb
xor
jmp
test
shlb
or
sub
shrl
sbb
push
or
or
xchg
jge
shlb
clc
xor
mov
icebp
pop
test
call
lds
repz
out
cmp
stos
xchg
mov
dec
mov
cltd
pop
push
sbb
push
inc
push
imul
xor
shlb
loop
in
dec
daa
mov
mov
mov
addr16
in
jb
push
les
and
call
push
sub
int
mov
ja
xor
data16
test
cmp
push
lret
adc
in
stc
pop
adc
divps
test
adc
sub
pop
mov
aas
fdivr
imul
pop
ss
jne
fcmovu
and
or
xor
xchg
data16
dec
loop
lods
jae
in
lahf
sub
xchg
xor
xlat
mov
sahf
std
shrl
dec
imul
xor
adc
push
push
sbb
jo
dec
mov
int3
mov
mov
xchg
mov
in
jmp
insb
fmull
sub
movsb
movsb
and
jns
orb
je
add
in
mul
push
fadds
jbe
jle
mov
and
aas
or
add
lret
fldt
aad
sarl
mov
xchg
pop
data16
aas
jl
inc
clc
in
push
out
int
cmpsl
dec
inc
ficoms
inc
dec
mov
in
adc
int
adc
fmul
cmp
cmp
mov
pop
xor
xchg
popa
cmp
adc
inc
mov
lds
jns
jb
mov
push
insl
pop
mov
rcrl
and
call
mov
into
mov
fisttps
out
cmp
and
icebp
adc
cmp
pop
or
es
js
or
add
cli
ret
xchg
lock
push
jbe
enter
int3
or
lea
in
mov
cmp
pop
and
sub
faddl
push
ss
out
mov
mov
popa
cmp
xor
push
or
mov
add
mov
xchg
add
sbb
bound
cs
or
rcrb
sub
icebp
mov
clc
inc
inc
ret
popf
insl
test
in
insb
push
xor
cs
aaa
jecxz
hlt
loop
and
cld
daa
push
lret
hlt
jae
sbb
mov
leave
dec
test
in
int
cs
aam
adc
mov
pushf
add
pop
xchg
push
mov
test
mov
xchg
fsubl
push
popf
xlat
pop
aaa
scas
or
int3
cwtl
jae
stos
xor
mov
sbb
je
outsl
int
movsl
xchg
addr16
sbb
call
sti
jae
popf
xchg
cmpsb
and
in
xor
ja
push
sub
or
xchg
int3
sbb
dec
out
test
rorl
dec
in
xchg
pop
jmp
cltd
cld
jno
clc
notb
mov
test
in
xor
lcall
xchg
inc
sub
rclb
fwait
mov
inc
outsb
daa
in
dec
pop
push
pop
loopne
int3
fldt
jle
mov
cmovs
add
repnz
jge
inc
and
add
push
adc
ds
insl
ret
shr
mov
aaa
mov
inc
adc
xor
repnz
push
mov
out
jo
dec
sbb
pop
sub
mov
adc
jnp
push
insb
xchg
jnp
inc
dec
mov
jnp
imul
aam
or
dec
adc
sbb
add
gs
mov
cwtl
or
cmpl
jge
xor
jae
fs
xor
outsl
and
xor
mov
and
les
pop
mov
sahf
negb
mov
and
popa
inc
inc
test
aas
xchg
lret
in
pop
pop
lock
push
inc
jae
jge
or
adc
loopne
aam
rclb
mov
xchg
pop
mov
jecxz
ffree
cmpsl
xor
pop
js
cmpsb
fisubrl
pop
dec
xor
lret
pop
mov
cli
xlat
cmp
pop
in
mov
push
inc
test
clc
cmp
or
shrl
jno
mov
xor
dec
xchg
addr16
data16
gs
out
mov
mov
aaa
cmp
mov
mov
cmp
jb
lds
adc
mov
xchg
cmpsl
ror
mov
repz
mov
std
ficompl
bound
aas
jecxz
out
jbe
cmpsb
ja
ljmp
pusha
call
fisubrs
inc
xor
inc
xor
xchg
or
rcr
xchg
ja
lahf
jo
and
mov
cmpl
pop
push
or
push
inc
adc
outsl
mov
mov
xor
mov
cmp
jo
ss
mov
adc
stos
cs
jmp
adc
mov
dec
add
push
mov
add
sub
cmp
jbe
xchg
lea
mov
jno
add
add
jle
in
pop
test
dec
dec
xor
jmp
xorl
fsubs
cmpsl
ret
out
ljmp
push
in
mov
xor
jg
or
mov
inc
jmp
mov
lcall
imul
add
rcrl
mov
xchg
lods
xor
into
mov
jbe
fisttps
pop
stc
xchg
push
cmp
inc
xor
cmp
cld
or
dec
sti
pop
fs
push
icebp
or
add
rcl
sub
jge
jecxz
mov
sbb
sbb
andl
xlat
icebp
adc
inc
rorb
hlt
sub
movsb
dec
or
xchg
mov
mov
push
pop
ret
mov
nop
push
lock
mov
xchg
subl
rorl
mov
mov
or
mov
push
or
inc
push
jne
fdivr
pop
enter
fidivrl
add
lret
jge
js
into
in
mov
cmp
adc
sbb
mov
sbbb
std
jg
nop
dec
jnp
inc
adc
pop
cmc
test
aas
push
xor
stos
add
ds
sbb
aad
cmp
das
je
cmp
xor
lret
push
loopne
fldt
xchg
hlt
mov
pop
cld
adcl
arpl
mov
cs
mov
mov
sbb
xor
jl
imul
stos
divb
out
rcrl
add
xchg
addr16
cli
lahf
xor
xor
clc
and
sub
test
sub
lods
xor
cltd
mov
pushf
jae
sti
mov
mov
mov
loope
xchg
mov
pop
outsb
int
mov
out
push
cwtl
dec
aas
adc
out
out
bound
mov
mov
mov
cli
mov
xchg
pop
mov
pop
lret
sbb
popw
sarl
call
xchg
icebp
xlat
dec
pop
xchg
cmc
jne
dec
lds
pusha
test
test
outsb
dec
test
or
pop
aad
mov
mov
aas
ss
inc
gs
xchg
daa
cmpsb
ficoml
pushf
hlt
cmp
mov
int3
lahf
outsl
xor
mov
pop
pop
mov
das
jl
xchg
push
pop
and
xchg
inc
push
pop
xor
mov
sbb
sbb
clc
imul
ds
stos
xchg
or
push
addr16
fwait
in
mov
add
pop
inc
jnp
and
shlb
pop
xlat
xchg
push
xchg
cmp
ljmp
jle
inc
mov
test
cmpsl
mov
mov
sbb
push
pop
jl
xlat
stos
xor
stos
rcr
shrl
out
push
mov
mov
arpl
xor
cli
test
mov
adc
js
mov
and
xor
add
sub
xor
cmpsb
mov
sbb
push
lock
dec
cmp
jno
lret
test
push
sets
jge
add
inc
pop
nop
add
mov
mov
or
pop
or
xor
mov
ljmp
test
add
cmp
and
pop
lock
jae
inc
mov
push
scas
cltd
inc
inc
insb
adc
cs
fld
and
movd
adc
pop
push
popa
iret
fisubs
mov
and
adc
mov
jnp
ljmp
mov
dec
dec
repz
aad
loop
xor
les
std
pop
sahf
sbb
dec
iret
aas
dec
pop
xor
mov
incl
in
mov
aaa
jg
dec
ret
sbb
inc
and
push
cmc
mov
add
shll
cmp
pusha
roll
out
loopne
mov
pop
shl
lcall
mov
int3
or
sbb
pop
js
mov
sub
lcall
test
inc
jnp
jne
js
hlt
pushf
mov
sti
jbe
jmp
test
sbb
shrl
or
sbb
out
jne
push
xor
pop
or
sub
pusha
aaa
or
ret
fisubrs
insl
mov
pushl
ds
or
in
mov
mov
xorb
xchg
out
cmp
cmp
repnz
lds
nop
mov
imul
dec
jae
or
imul
jno
xchg
and
xchg
or
xor
adc
leave
out
cmp
js
jmp
mov
cmpsl
imul
jb
and
enter
sbb
push
mov
jnp
adc
bswap
xlat
or
dec
lcall
idivb
xlat
push
repz
cwtl
or
push
loope
dec
pop
nop
xchg
mov
adc
jecxz
test
std
imull
sub
adc
stc
js
pop
aam
add
daa
dec
xor
outsl
nop
fisttpl
jmp
rcrb
and
mov
inc
dec
sbb
ja
outsl
jb
insl
outsl
push
jmp
push
push
jmp
or
xlat
fstpl
sub
mov
stc
std
mov
sbb
repz
inc
xchg
xor
inc
cmp
and
add
push
jp
mov
sbb
shll
jns
lods
dec
push
scas
cltd
inc
data16
stos
orl
jle
outsl
add
fdivr
ret
insl
sti
dec
push
test
std
insl
icebp
call
sahf
pop
or
stc
or
sarl
cmp
inc
popa
in
push
push
or
mov
lret
jne
inc
push
xor
dec
ret
test
stos
es
or
shl
shlb
jge
mov
shrl
dec
xchg
daa
push
leave
in
mov
fst
and
dec
xchg
stc
cmpb
loopne
test
sub
mov
sti
and
rcrl
bnd
add
clc
test
ds
cli
stc
sbb
sub
xor
jl
pushf
mov
jo
push
mov
test
jns
xchg
fstps
jmp
pop
in
aaa
jg
cmc
movsb
sub
add
aas
add
dec
sbb
nop
icebp
cwtl
jo
pop
inc
jg
aaa
push
ds
sub
jbe
mov
sbb
and
cltd
inc
lea
movsl
or
mov
xchg
mov
enter
inc
jecxz
in
andl
cmc
sub
sub
fsubrs
lods
cmpsl
push
jmp
cltd
dec
aad
mov
adc
rorl
dec
insb
mov
pop
jmp
pop
xchg
xor
push
imul
cwtl
push
and
push
outsl
bnd
dec
or
outsb
in
sbb
aad
lcall
rclb
andl
pop
jmp
sbb
xchg
cmpl
mov
jle
inc
push
add
and
sbb
and
mov
cmp
icebp
push
fldenv
mov
push
jns
pop
jbe
sbb
push
ljmp
adc
xor
out
rcrl
dec
mov
adc
adc
mov
into
test
popa
dec
pop
jge
lods
shl
xor
rsqrtps
lcall
xchg
sub
xchg
xchg
pop
les
add
rclb
or
out
es
mov
aam
sub
push
je
mov
mov
add
into
int3
lock
out
mov
cmp
ja
pop
cltd
and
and
adc
fildll
negb
imul
dec
pusha
mov
mov
pusha
in
gs
push
inc
popa
lret
sbb
cmp
jae
sti
ss
flds
inc
pop
dec
sub
and
mov
loop
inc
pop
mov
push
insb
je
enter
scas
cmp
mov
test
push
push
test
fildll
movsl
and
jecxz
sbb
sbb
push
adc
dec
push
rclb
inc
mov
in
xor
mov
push
iret
pop
pop
pop
cmc
je
push
mov
mov
add
js
call
std
adc
int3
fadds
push
loope
cmc
aad
and
xlat
cmp
inc
bound
jb
cld
jno
outsl
xchg
sbb
sbb
add
ret
outsb
lret
mov
jl
enter
rcl
sti
fdivrs
mov
adc
stos
nop
es
pop
cmovne
mov
popa
jnp
mov
pop
ds
dec
movsl
loope
movsl
sbb
in
mov
push
lods
add
mov
inc
mov
dec
inc
cmp
push
mov
fdivrl
jo
cltd
mov
in
dec
xor
jp
adc
addb
sub
and
fiaddl
dec
push
or
loopne
int
pop
test
inc
or
ljmp
dec
mov
mov
cmp
jns
mov
and
sarb
ret
stos
push
sahf
fwait
cs
lods
fnstsw
mov
inc
fwait
aas
xchg
decl
sub
lods
inc
subb
ret
sbb
jo
pop
mov
mov
popa
loope
mov
shl
jae
clc
pop
jmp
bound
out
add
pushf
ljmp
mov
lds
cmp
lahf
ja
push
insl
sbb
sarw
jo
gs
shl
ljmp
cmp
jl
pop
dec
popf
cli
std
xor
ja
jb
loop
mov
cmp
cmpsl
add
gs
pusha
pop
stc
jne
mov
mov
jmp
int3
inc
std
lods
mov
stc
inc
xchg
into
or
clc
jbe
jecxz
ds
fnstcw
mov
xchg
loopne
cmpsl
outsb
loop
or
repz
out
sub
out
imul
cs
pop
loop
push
icebp
scas
xchg
ljmp
jle
lcall
aaa
cmp
sbbb
into
gs
popf
inc
push
fbld
mov
jmp
sub
sahf
lods
push
push
lea
push
fstpt
imull
or
cmp
test
ret
clc
mov
ljmp
in
and
mov
push
repz
ds
add
mov
pushf
add
jp
jne
add
pop
je
push
jae
and
loopne
adc
xor
or
xchg
adcb
fimuls
stc
fdivs
sbb
js
push
sbb
lods
daa
mov
negb
push
ficomps
test
pop
sub
outsb
mov
hlt
je
aaa
dec
sbb
mov
rcrl
inc
jl
xor
jg
call
std
fsts
cmp
jb
mov
popa
pop
fidivl
in
fimuls
aad
mov
push
repz
pop
daa
cs
push
fnsave
scas
push
adc
adc
sbb
jo
addr16
mov
mov
mov
sahf
lahf
mov
rcrb
aam
int3
je
popl
ret
loop
int
mov
sub
xchg
xchg
adc
cmc
adc
add
fadd
xor
jmp
sbb
cld
out
fwait
push
ret
clc
subl
xor
cmc
sub
xor
mov
sti
mov
adc
pop
pop
inc
out
call
cwtl
fs
icebp
xor
sbb
or
repnz
imulb
add
mov
popf
aad
xor
push
and
push
movl
inc
sbb
adc
cmp
dec
xor
mov
gs
dec
andb
sub
lock
pusha
pop
std
and
mov
scas
dec
jp
mov
nop
cmp
in
dec
pop
pop
cmpsb
jns
jle
int3
mov
and
cmc
sbb
nop
dec
inc
add
jnp
pushf
push
call
ds
in
push
or
dec
pop
xchg
and
push
mov
xlat
sub
add
ljmp
mov
sub
mov
aaa
test
cmp
mov
inc
cwtl
sbb
iret
or
mov
test
movsb
pop
in
pop
mov
inc
cmp
movsb
in
fwait
jmp
rolb
insb
push
movsb
lods
bound
add
sbb
cmp
icebp
sbb
dec
mov
and
int3
pop
sbb
scas
mov
shl
xchg
jno
cmp
sub
push
andl
lea
push
cmp
push
lret
push
xor
mov
dec
pop
cmp
inc
iret
gs
pushf
lds
xor
lods
pop
std
pop
mov
mov
push
pop
cmp
aas
mov
daa
sbb
mov
out
inc
or
lcall
adc
int
mov
lcall
push
enter
xchg
inc
out
mov
aad
pushf
lods
ljmp
lret
mov
pop
lcall
xlat
push
andb
out
adc
dec
dec
xchg
roll
fwait
sub
xor
xor
mov
ret
lock
xor
push
cmp
out
sti
xchg
push
pop
xor
sbb
mov
jno
loop
mov
fisubrs
push
adc
pop
push
sub
mov
xchg
xchg
xchg
add
inc
test
cmpsb
test
data16
pop
test
xchg
sbb
movb
mov
jae
mulb
pop
jecxz
out
dec
push
adc
andl
pop
sub
mov
mov
inc
je
outsb
push
data16
sub
mov
mov
sti
loopne
add
push
shlb
mov
cmp
test
sub
pop
enter
repnz
sbb
aad
cmc
push
nop
fimull
shrl
cmp
in
sub
push
lahf
idivb
test
xor
ljmp
pusha
ljmp
and
cwtl
ds
lcall
ds
popa
cmpsb
mov
enter
mov
cmp
push
lock
outsl
mov
xlat
add
add
ss
pop
aad
lods
push
movsl
jge
jecxz
std
jp
shrl
pop
imul
mov
lcall
insb
dec
stos
inc
lds
pop
and
lea
mov
lods
mov
fists
mov
pop
adc
mov
dec
cmp
test
insl
jmp
lahf
xchg
mov
or
fdiv
in
cltd
sbb
mov
sahf
es
pop
xchg
dec
shll
push
in
inc
mull
lcall
test
insl
stos
mov
dec
jl
imul
test
sub
pop
mov
cmpsb
xchg
add
jae
daa
rclb
push
mov
push
leave
sub
sbb
and
movsb
rolb
inc
add
jg
jecxz
int3
lahf
enter
xchg
pop
pusha
fucomip
dec
cs
aas
push
inc
movl
jge
data16
sbb
jle
dec
push
inc
xor
lods
adc
inc
sbb
fcom
call
adc
pop
xchg
push
cs
xchg
jb
cmp
cmp
jle
cs
add
and
out
pop
cmp
sbb
insb
stos
or
loope
aas
xor
cltd
pop
pop
mov
sbb
add
cli
pop
imul
pop
filds
and
adc
sahf
int3
xchg
cmp
clc
xorl
sub
dec
adc
test
rcl
imul
mov
dec
es
cmc
mov
pop
lds
cmpsb
pop
mov
jecxz
sbb
stos
pop
imul
fwait
les
js
mov
xor
clc
xor
push
pop
fcoml
or
dec
aaa
cmp
jle
vmptrld
mov
dec
push
jecxz
sub
pusha
jmp
inc
xor
ljmp
push
movsl
aaa
and
movsl
test
aad
xlat
jno
mov
mov
mov
or
test
decl
cmp
mov
sbb
push
pop
jge
xchg
mov
mov
sub
push
adc
sbb
call
cmpsb
mov
dec
xchg
fwait
jo
adc
les
push
test
or
frstor
iret
in
mov
jae
mov
int3
imul
fimuls
dec
pop
aam
jae
and
cwtl
cli
rclb
call
dec
cs
mov
jecxz
jne
test
fiaddl
or
mov
fsts
stc
es
dec
loope
add
adc
into
sub
lahf
test
mov
cmp
push
subl
xchg
and
add
jmp
ret
adc
inc
lock
sbb
sbb
fisttps
pushf
or
dec
mov
stc
xor
dec
jae
mov
test
sbb
or
cli
aad
dec
jecxz
pop
inc
imul
xchg
fnstsw
mov
mov
sub
mov
and
mov
push
loope
or
sbbb
les
add
dec
jge
push
lret
inc
xor
or
icebp
out
mov
push
loop
jae
add
xchg
ja
lock
jbe
cmp
fmull
popa
jl
or
jg
mov
cltd
xor
dec
sub
mov
out
cmp
popf
repnz
mov
inc
pop
daa
pusha
fmull
fstl
repnz
repz
scas
pop
push
lock
lods
testb
sahf
sub
hlt
mov
inc
pop
mulb
addr16
pop
xor
test
cs
stos
xchg
jge
mov
push
insl
aas
xor
into
test
pop
jb
xchg
xchg
add
xchg
in
shlb
out
leave
jl
adc
dec
scas
pop
dec
adc
pop
movl
aaa
mov
push
and
lcall
add
cmp
cs
mov
imul
jb
push
sahf
push
lea
add
pop
pusha
mov
jecxz
addl
jecxz
fmull
jno
xchg
in
xor
mov
test
aas
mov
pop
in
mov
cltd
fldt
mov
inc
stc
mov
sbb
lea
fwait
inc
add
xor
mov
sbb
push
sbb
ljmp
jle
jno
xadd
cmc
xor
sbb
mov
push
add
mov
lahf
imul
jo
imul
mov
mov
xchg
pop
add
lods
mov
enter
fcmove
mov
cmp
jb
adc
lahf
imul
ljmp
insl
xchg
loop
mov
push
push
imul
mov
icebp
dec
aaa
mov
and
mov
adc
insb
daa
push
cmp
sbb
xchg
mov
cmc
jns
addr16
shrb
push
std
arpl
fidivrs
or
pushf
outsb
dec
pop
int3
sti
sahf
in
lock
pop
aam
adc
mov
push
cmp
or
or
or
sub
mov
stc
xchg
push
xlat
iret
imul
faddl
or
xchg
mulb
pop
xchg
add
and
xor
cmpsl
sub
nopl
cmc
pop
pop
lret
adc
pop
cli
inc
push
int
jge
jp
mov
pop
fiadds
pop
dec
cmpl
in
movsb
insb
cld
pop
mov
in
xor
loope
mov
je
arpl
div
es
sbb
int3
dec
push
idivb
pushf
add
dec
adc
arpl
sbb
repnz
scas
pop
pop
mov
pop
jmp
gs
xchg
inc
int
int
test
data16
sti
jmp
mov
psrld
mov
sahf
sub
lret
cmpsl
jmp
rcr
ret
test
enter
sub
icebp
pop
test
out
push
lret
mov
idivb
dec
adc
jnp
cmc
hlt
cli
push
add
lahf
sbb
add
sbb
ljmp
cmp
cmp
loopne
sti
imul
dec
das
sahf
in
sbb
lock
dec
pusha
xchg
xchg
popa
inc
mov
mov
push
mov
inc
repz
loope
mov
cli
xor
or
repz
iret
dec
inc
movsl
js
lock
xchg
test
cmpsb
inc
push
add
loop
aam
fcmovnb
xor
je
in
cmp
lock
pop
in
int
mov
aam
add
aaa
nop
mov
sbb
sub
cmc
sbb
xchg
push
movsb
xchg
push
popf
pop
push
pop
popa
mov
push
into
inc
rcrb
mov
push
testl
call
add
lret
or
fs
mov
movsb
mov
out
jmp
jne
and
sub
das
lahf
out
std
and
adc
jmp
add
shr
cmp
push
cwtl
or
arpl
adc
and
mov
mov
daa
ficoms
xchg
adc
jge
mov
adc
inc
repz
jnp
mov
dec
pop
in
add
out
jno
js
popa
xor
sti
xchg
pusha
jno
mov
stc
mov
pcmpeqw
scas
mov
cmpsl
mov
popf
fmulp
les
sub
xor
inc
subl
fimuls
ret
pusha
mov
insb
pop
into
jnp
hlt
dec
xor
icebp
xchg
dec
mov
sbb
adc
repz
call
into
inc
rcr
in
ss
cmpsl
pop
sahf
sub
pop
add
mov
insb
mov
adc
dec
addb
inc
jp
add
es
outsl
into
sub
push
test
lods
push
loop
mov
sub
je
cmp
xor
sub
cmp
ja
mov
jne
mov
mov
pop
and
push
jmp
fistps
mov
push
jg
loop
loope
shll
popf
iret
fsubrs
mov
stc
mov
pop
movsl
jae
int
or
lods
mov
int3
fimuls
pushf
std
xchg
adc
mov
fnstsw
jb
push
lret
divb
mov
fcomp
sub
pop
lds
inc
lret
in
pop
fistpll
cmp
sub
repz
insb
in
jbe
lret
cmp
out
hlt
ds
ret
sbb
aam
mov
inc
mov
cmpl
adc
or
cmp
cltd
outsl
sarb
je
outsb
pop
std
cmpsl
popl
inc
lahf
scas
xor
rorb
inc
lea
push
xchg
cmp
je
or
imul
aaa
shrb
fistpll
test
cmp
xchg
mov
xchg
push
aaa
lea
into
pusha
push
inc
pop
sub
mov
fdivrs
inc
mov
mov
pop
out
jo
add
les
cmp
add
bound
cmp
in
jns
adc
pop
and
xor
ljmp
mov
dec
mov
pop
in
mov
je
daa
xor
mov
jnp
push
scas
mov
sbb
or
mov
mov
rol
pusha
jns
xchg
addb
dec
ljmp
xor
arpl
pop
in
dec
repz
ret
outsb
inc
out
insb
adc
sahf
stos
movsb
sbb
or
insl
fcmovb
lcall
jp
into
outsl
add
sub
dec
or
sub
insb
data16
ja
xchg
jnp
mov
xchg
mov
or
ret
jle
aad
pop
xor
or
adc
sbb
push
addl
jnp
xchg
icebp
pop
adc
mov
movsl
inc
pusha
std
dec
lcall
les
push
and
movsl
jmp
mov
and
aas
fadds
popa
xchg
mov
mov
cmp
int
xchg
mov
jp
lret
sahf
sti
xor
fwait
ret
or
fs
out
mov
test
add
in
nop
les
xchg
in
arpl
call
out
inc
adc
fldl
or
xchg
pop
pop
imul
mov
mov
lods
cmp
mov
mov
movsb
aas
rclb
rcrl
in
repz
xlat
jb
pusha
leave
mov
das
adc
dec
pop
dec
sub
iret
jb
mov
push
ss
mov
push
xor
push
add
test
insb
mov
mov
dec
add
and
fdivrp
or
cli
mov
test
mov
jbe
push
lea
xchg
pop
or
movsb
clc
dec
dec
jmp
mov
mov
jno
cmp
push
jp
and
dec
in
ja
loope
mov
in
or
mov
ret
rolb
ficoms
dec
push
cmpl
and
roll
cmp
lock
jne
xchg
fs
and
mov
cmp
mov
or
in
nop
pop
lahf
mov
scas
inc
pop
mov
fcompl
push
int3
in
xchg
add
xlat
jge
cmp
inc
add
or
aaa
adc
clc
sub
and
shll
inc
loope
lret
sbb
jl
in
sbb
sbb
imulb
and
mov
and
icebp
jnp
mov
rorb
sbb
push
push
das
insb
stos
or
mov
imul
lret
fcmovnu
jbe
push
pop
add
xchg
mov
pop
and
xor
decl
out
dec
xchg
bound
filds
mov
pop
jg
mov
mov
or
and
jbe
mov
sarl
div
jne
push
cli
push
aad
ljmp
push
adc
xor
sub
sub
divl
ficomps
push
inc
sbb
lcall
or
arpl
sbb
inc
sbb
pop
rcl
fcoml
insb
ret
je
mov
aaa
or
movsl
sbb
inc
ficomps
sbb
pop
mov
loope
push
cltd
pop
shll
mov
dec
xor
jnp
subb
frstor
jmp
js
aad
mov
faddp
hlt
leave
sub
fisubl
mov
push
movsb
jmp
test
frstor
mov
daa
pop
insb
add
test
lret
test
clc
adc
fstenv
in
mov
mov
test
xor
int3
ficomps
jae,pt
cmp
cmp
jns
xchg
sti
add
movsb
das
cmp
inc
jo
xchg
cli
shll
iret
or
mov
into
lret
js
jge
mov
outsl
lret
push
or
leave
cmp
ret
nop
subl
out
jns
jl
cltd
inc
out
lds
mov
pop
cli
mov
xchg
xchg
sub
cmpsl
gs
push
pop
add
fnsave
xor
ror
in
popf
cmp
sub
jle
das
adc
fcompl
cli
xor
insl
icebp
push
loopew
cmc
adcl
out
push
add
dec
cmc
push
sbb
push
mov
jmp
out
sbb
lock
sub
cmp
lods
scas
cwtl
mov
jl
fstps
xchg
xchg
jbe
scas
mov
xlat
push
and
test
add
or
sahf
stos
test
inc
repz
jo
out
aad
sub
and
mov
mov
aas
adc
adc
nop
loope
adc
sub
negl
adc
es
pop
push
adcb
adc
ror
xor
or
inc
or
sub
mov
jg
jbe
pusha
sahf
dec
sbb
inc
dec
dec
pop
pusha
push
es
cmp
lret
xchg
jo
jo
leave
lret
nop
or
mov
subl
xchg
dec
xor
aaa
and
mov
mov
fcomi
test
dec
inc
jg
mov
jle
idivl
jp
std
mov
adc
clc
mov
add
add
mov
repz
rcl
hlt
enter
dec
jmp
sub
pop
sub
fdivrp
in
sub
fsubr
lahf
int
mov
jp
sahf
icebp
fs
sbb
les
mov
lods
mov
test
imul
mov
test
aaa
add
adc
nop
rcr
into
mov
cmpsb
add
xor
fists
stos
xchg
mov
iret
out
cmpsl
jno
jb
pop
test
mov
mov
scas
lcall
xor
repnz
and
out
push
or
mov
and
movsb
mov
push
push
aas
sbb
mov
hlt
push
cmp
cltd
sbb
test
insl
out
or
and
lock
fldenv
sub
pop
rclb
nop
cmp
mov
ljmp
je
es
sub
inc
or
ljmp
shrb
aad
pop
movsb
pop
int
pop
mov
enter
jecxz
scas
shrd
inc
popa
push
and
inc
imul
imul
outsl
pop
adc
aam
ret
lret
leave
add
or
inc
mov
icebp
out
stc
push
dec
ja
xor
pop
cli
loope
mov
arpl
mov
pop
add
xchg
aaa
xlat
stc
shll
pop
add
lea
mov
dec
cmp
arpl
aad
mov
fistl
and
stc
inc
mov
test
fnstsw
out
into
mov
xchg
sbb
xchg
pop
push
inc
outsl
pop
data16
sub
addr16
fcoml
gs
es
sub
sub
loopne
jns
add
cmpsl
in
and
cwtl
pop
dec
cmp
inc
or
loop
lods
popf
cmp
stos
cltd
fstl
xor
pop
mov
adcb
cmc
sub
mov
jl
outsl
inc
les
popf
ljmp
fstpt
das
in
imul
mov
jmp
xlat
scas
jge
add
bt
mov
add
imul
repz
adcl
int
push
popa
pop
dec
fildl
test
inc
and
pop
leave
out
shl
test
aaa
jae
stos
mov
fsubs
test
mov
jbe
mov
cmp
mov
mov
or
inc
pop
jo
outsl
mov
push
mov
subb
push
dec
leave
arpl
sbb
fisubl
sbb
dec
mov
and
js
jbe
xor
xor
push
jae
ss
lock
dec
pop
push
repz
adc
popa
test
hlt
inc
sub
push
cmp
fmul
mov
dec
lods
into
aad
shll
adc
dec
mov
jp
sbb
adc
jnp
push
pop
xchg
into
aad
int
es
xchg
jno
ja
xchg
leave
ljmp
inc
test
xor
add
movsl
push
cmp
arpl
push
dec
pop
xchg
sarl
and
insb
dec
ds
adc
call
pop
scas
inc
xlat
inc
and
scas
fwait
fwait
inc
cmpl
jae
mov
es
out
xchg
push
ds
shrl
cmp
sbb
les
inc
sahf
sbb
mov
push
ss
jl
inc
call
xchg
lea
fmuls
push
mov
xorb
mov
call
out
cmp
outsb
add
pop
xchg
nop
into
shlb
fsubl
mov
mov
xchg
mov
repnz
and
into
mov
mov
cld
insl
js
pop
inc
pop
test
loop
push
push
mov
pusha
ss
xor
add
idiv
dec
lds
push
orb
les
or
movsb
lods
sbb
sub
rolb
insb
repz
mov
shrb
mov
lahf
inc
sarl
jb
cmc
xor
pop
cmpl
mov
push
loop
movsl
pushf
sub
out
adcl
notl
or
push
sbb
fdivrs
pusha
aaa
shrl
cmp
xchg
adcl
in
test
or
pop
loope
sti
lods
push
loope
enter
insb
fs
out
inc
cmp
aam
jae
loopne
mov
xchg
arpl
xchg
pop
push
sub
mov
adc
add
adc
imul
pop
or
xchg
ja
test
mov
notb
ljmp
sbb
mov
jg
subb
push
test
push
data16
nop
jnp
mov
lret
push
aaa
call
jle
mov
mov
sub
fidivs
loopne
sbb
mov
fwait
gs
push
xchg
loop
lcall
inc
stos
push
lock
imul
mov
hlt
enter
xchg
or
je
cwtl
mov
rcrl
jp
mov
fcmovnu
mov
lds
cmp
mov
push
fmull
popa
cmp
adc
icebp
sbb
out
inc
mov
jg
es
jbe
sahf
aam
adc
xchg
movl
or
ficoml
push
add
repz
pushf
ss
fdivp
test
push
mov
xor
mov
aaa
lea
mov
adc
inc
push
sarl
mov
movsl
pusha
dec
sbb
push
xor
int
xor
mov
mov
push
or
lods
in
xchg
ljmp
and
pop
insl
mov
xchg
out
jecxz
stc
rcr
adc
pusha
pop
movsl
adc
scas
jo
inc
loop
fdivrs
sbb
pop
outsb
jp
mov
ds
or
cwtl
test
jmp
shlb
inc
fidivl
arpl
mov
adcb
hlt
cmpsl
lcall
idivl
xchg
sbb
imul
cmp
add
shlb
push
add
pop
xchg
cmpb
xor
iret
add
imul
push
cmp
xchg
jns
in
dec
adc
adc
gs
push
lcall
mov
push
outsl
jne
push
inc
xor
adc
mov
mov
add
into
notb
icebp
mov
ljmp
mul
push
pcmpeqb
outsb
and
scas
lret
mov
cld
in
add
push
xchg
jns
add
jmp
or
out
add
inc
movsb
push
bound
dec
clc
inc
dec
sahf
dec
xlat
and
mov
cmp
mov
out
ret
sbb
popl
adc
push
lea
jg
add
out
xchg
adc
xor
cmc
pusha
out
aad
mov
stos
divb
mov
cmp
mov
test
xchg
cmpsl
mov
mov
jecxz
xor
movsl
adc
inc
xor
nop
iret
into
pop
lahf
cmp
sahf
cld
sbb
je
and
jbe
test
lock
lods
ss
mov
fisttpll
jnp
or
mov
cmp
pushf
add
rcrl
and
nop
pop
jl
rcrl
enter
and
mov
mov
movsb
nop
cmp
inc
leave
popa
in
cmpsb
shrb
sbb
pop
mov
rdpmc
mov
pushl
pop
push
inc
fistl
xlat
push
aad
xchg
adc
mov
inc
xchg
fdivrl
xor
push
popa
loopne
mov
jae
xchg
aaa
jne
push
and
and
imul
outsb
out
scas
clc
lret
or
les
inc
mov
sbb
jno
inc
mov
mov
jmp
pushf
addl
add
lea
or
inc
arpl
scas
fwait
shrb
pop
dec
dec
idivb
and
jae
inc
and
mov
push
js
xlat
mov
test
xor
outsb
xor
stc
and
fcmovnbe
testb
jl
or
int
jmp
ljmp
mov
push
sub
add
popl
cs
mov
xchg
cmp
sbbl
or
mov
lahf
adc
sbb
xchg
xor
test
cld
outsl
out
xchg
repz
fistpl
ljmp
fdivr
fmuls
inc
xchg
dec
xchg
inc
mov
mov
xchg
daa
xor
addr16
arpl
pop
pusha
and
add
and
mov
fsubrs
clc
arpl
or
adc
addb
mov
loop
jnp
mov
test
cmp
loop
clc
mov
mov
imul
xor
adc
push
pop
test
and
arpl
or
xor
movsb
inc
mov
push
fnstcw
cmpb
mov
pop
push
lret
and
cli
out
lahf
and
gs
ret
in
add
push
in
or
js
jne
dec
cwtl
lahf
mov
ret
mov
das
lahf
int
pop
push
popa
push
and
fisttps
ja
cld
and
jp
push
mov
imul
jo
inc
loop
andl
cmpb
adc
imul
sbb
ficomps
push
mov
dec
ss
call
or
sbb
sbb
inc
sub
sub
or
das
sub
lods
jl
popf
mov
lcall
fs
dec
xor
cmpb
pusha
ljmp
test
jb
sarl
dec
mov
stos
bnd
out
cs
xchg
inc
dec
pop
mov
es
mov
or
pavgb
and
mov
dec
jb
sbb
fwait
xor
mov
adc
and
cmp
popa
xchg
push
mov
mov
shl
cs
cli
pop
mov
mov
add
pop
or
sbb
int
mov
sub
ljmp
int
and
add
xchg
scas
jbe
pop
mov
add
mov
fucomi
dec
cmpsb
add
into
std
cmp
clc
test
es
fisttps
push
aad
adc
cwtl
xchg
mov
mov
aam
les
movsb
repz
mov
sub
xor
nop
jnp
stos
cmp
imul
inc
pop
xchg
insb
and
mov
test
add
out
mov
mov
int3
push
push
call
inc
les
pop
mov
cmpl
mov
sub
cmc
adc
in
stos
or
gs
or
rolb
sub
data16
ror
inc
add
xchg
insl
mov
mov
into
cmp
jmp
inc
jle
mov
stos
outsb
aaa
fwait
and
sub
test
sar
jae
incb
repz
pop
sub
add
insb
jo
mov
stos
sub
ret
cli
push
jp
pop
push
adc
sti
cs
push
cli
dec
movsb
pop
add
negl
data16
js
mov
clc
jmp
jl
cwtl
paddb
idivb
mov
das
push
xorl
insb
mov
cmp
jmp
dec
clc
jo
out
xchg
fstpl
call
call
negl
mov
pop
sbb
repz
xlat
xor
sbb
xor
cmc
push
sub
sbb
rclb
inc
mov
icebp
lock
test
add
and
cmp
ja
xchg
xchg
cmc
pusha
xlat
inc
pop
movsb
adc
sti
pop
into
inc
and
push
nop
and
mov
adc
jns
xor
idivl
dec
cwtl
lock
fwait
push
jl
mov
gs
insb
int3
add
sti
test
pop
stos
icebp
idiv
jae
xchg
rcrl
aam
cmp
mov
cmp
cwtl
pusha
sbb
xchg
and
jmp
pop
xchg
sbb
and
es
sbb
scas
jmp
mov
add
into
mov
test
cmp
jno
mov
push
or
or
jno
bound
inc
mov
jecxz
aaa
pop
mov
add
jmp
iret
inc
mov
jmp
xchg
dec
insl
or
adc
sbb
ljmp
add
cltd
jb
sub
jbe
and
jno
insl
lods
push
jnp
cmp
icebp
repz
iret
fs
jmp
push
ret
js
adcb
add
push
pop
sbb
xchg
test
xor
jmp
xchg
inc
inc
aad
movsl
les
icebp
cmp
addr16
or
movsb
mov
jmp
push
lods
mov
cmp
and
das
dec
fnstsw
andb
add
js
outsl
addr16
push
addl
mov
std
add
sub
bound
stc
mov
mov
gs
pop
ficompl
xor
mov
test
pop
cmc
add
pop
loop
dec
xor
int
sbb
into
loope
popf
aas
adc
push
mov
and
xor
xchg
xor
mov
imul
mov
std
cli
adc
stos
aaa
add
mov
or
inc
mov
test
out
and
repz
cli
in
gs
cmp
pop
aam
lea
insb
je
jge
hlt
imulb
inc
call
dec
mov
mov
pop
cmp
and
mov
pop
fisubl
jl
cmpsl
cs
jle
cmc
pop
dec
mov
and
lcall
ss
inc
leave
std
mov
jne
aam
insl
sub
lods
ljmp
jp
fldcw
push
and
mov
imul
jno
adc
fisubrs
inc
jne
cmp
pop
inc
ret
lods
les
sub
stc
scas
je
mov
clc
scas
jg
or
mov
inc
xchg
adc
shrb
ss
sahf
dec
pop
pop
mov
dec
mov
xor
push
loopne
jno
adc
fs
cwtl
and
popa
or
mov
dec
and
clc
jno
cmc
loopne
push
dec
outsl
mul
mov
push
xchg
inc
aaa
dec
push
aam
out
dec
loop
ds
sbb
testl
push
stos
cmp
je
insl
pop
daa
fdivp
stos
int3
pop
aad
ds
cmp
mov
dec
sahf
xorb
pushf
push
xor
cmp
lret
mov
js
into
repnz
push
jnp
push
fcoml
xchg
push
xchg
adc
aas
push
pop
sahf
mov
push
jecxz
bound
outsb
cmp
pop
ja
outsb
xchg
add
and
pop
stos
loope
ss
shll
or
stos
xchg
outsb
pop
jns
fucomi
inc
sti
pop
mov
inc
insl
outsl
add
or
xor
jnp
xchg
sbb
mov
out
testl
call
push
pop
jg
cmpl
xchg
mov
ja
es
jne
inc
mov
push
fcompl
fwait
jmp
into
sbb
push
add
enter
sbb
push
das
ficomps
xor
push
mov
inc
inc
adc
xchg
in
imul
mov
in
ret
pop
xor
dec
rclb
mov
lods
and
xor
dec
and
inc
loope
js
in
jge
sbb
jb
adc
xchg
jge
pop
sbb
jae
add
faddl
les
rolb
push
mov
pop
xor
jecxz
mov
add
add
jns
enter
mov
cmpb
xor
push
imul
cmpsl
je
push
jecxz
packuswb
movsb
cmp
mov
sbb
mov
mov
xchg
icebp
fsubrl
icebp
mov
lcall
sbb
roll
jb
jmp
call
dec
push
das
xchg
enter
fldcw
and
imul
inc
shll
aad
gs
imul
cwtl
les
jb
orl
arpl
cmp
dec
and
movsb
sti
in
inc
adc
rorl
and
inc
cmp
push
in
cmp
bnd
int3
cwtl
xchg
es
incl
and
ret
jno
push
cmp
ds
or
and
mov
jmp
in
mov
dec
incl
pminsw
add
pop
idivl
xor
pop
xor
shrb
daa
mov
lods
inc
mov
jae
push
aad
sbb
fs
ficoms
jo
or
jo
push
and
out
test
daa
push
sub
push
pushf
mov
pop
leave
cmp
mov
sti
das
jg
aaa
mov
and
test
clc
into
jae
stos
mov
pop
and
and
sub
popf
outsb
out
mov
mov
lcall
xchg
dec
jp
push
in
sbb
and
mov
pop
add
add
jns
int3
in
jnp
jb
dec
pushf
mov
inc
mov
xor
xchg
mov
out
fdivl
out
xor
xor
daa
aad
dec
stos
pop
mov
mul
popf
nop
sbb
std
dec
test
sbb
fstpt
and
lock
and
mov
test
movsb
in
and
stos
xor
inc
push
pop
jp
les
in
stos
sahf
test
lcall
or
xchg
rcll
inc
test
je
push
mov
aas
in
loope
movsb
mov
inc
fcomi
jno
pop
popl
fnsave
mov
xchg
stc
aam
sub
sub
add
fstpt
or
xchg
push
lds
add
fwait
insl
mov
inc
pop
hlt
sub
cmp
lds
or
and
mov
mov
fwait
or
jo
add
push
pushf
sbb
mov
add
sub
das
sbb
movsl
jg
int3
mov
dec
sbb
jns
mov
cltd
dec
notl
and
pop
sahf
jg
mov
sbb
cltd
shrl
out
pop
jecxz
cld
in
lcall
xchg
sub
sub
jge
out
inc
cltd
insb
loope
lcall
or
cli
sti
fisttpll
jmp
out
xchg
or
dec
movsl
sti
lods
lcall
adcl
imul
inc
push
cltd
dec
in
subl
inc
in
in
mov
lods
mov
mov
jno
mov
call
subb
cmp
cld
mov
adc
and
pop
movb
aaa
rcrl
inc
out
lahf
orl
popf
push
jmp
test
push
pop
adc
test
add
mov
loope
cmp
scas
adc
daa
xchg
sbb
subl
out
fdivs
repz
dec
addb
dec
nop
cmpsb
xor
xchg
pop
gs
xor
xchg
and
out
push
xchg
or
sarl
adc
mov
cmp
and
or
mov
mov
inc
pop
ds
sahf
ja
out
pusha
rol
fists
mov
jno
push
or
ret
sbb
int
mov
lods
int3
shl
cmpsb
add
addr16
call
movsl
and
xchg
out
test
mov
leave
js
enter
add
pop
test
cwtl
add
imul
mov
add
adc
mov
sub
outsl
sub
xor
inc
iret
adc
xor
cmp
ror
mov
mov
push
xlat
sub
xor
gs
imul
lret
cmp
out
cltd
mov
sbb
fisttps
in
jns
jmp
push
mov
rorb
loop
mov
jecxz
adc
pop
mov
loop
cmp
les
int
dec
pop
inc
movsb
pop
in
mov
cmpsb
cwtl
fsubs
mulb
cmc
int
outsl
cmp
xor
sub
pushf
ret
mov
cmpsb
mov
jg
into
cmpl
mov
jbe
xor
push
jo
insl
jmp
adc
fsts
in
jl
xchg
lcall
sbb
and
push
rcr
add
or
mov
cmp
arpl
int
cltd
pop
inc
xor
stc
pop
add
mov
nop
jecxz
mov
mov
sti
mov
mov
push
bound
jg
divl
and
negb
icebp
stc
into
in
leave
popa
in
mov
and
rorl
xchg
cmp
mov
aam
shll
adc
addb
push
popf
cmp
jns
fucompp
aam
jno
mov
dec
jmp
es
and
xor
inc
ficompl
and
mov
test
pop
data16
fildl
mov
idivl
and
push
add
test
mov
sbb
shrl
and
cmp
lods
add
inc
mov
out
ljmp
sbb
mov
adc
call
jg
push
andl
dec
jle
pop
pop
dec
fidivl
pop
das
cmp
sti
and
shl
push
add
aad
push
xor
xor
jle
cmpl
loope
mov
clc
xchg
inc
fs
inc
push
mov
mov
mov
cwtl
ss
cmp
insb
fistpl
arpl
insb
inc
push
push
out
arpl
mov
sbb
mov
cwtl
test
mov
cmp
inc
push
jmp
into
mov
jno
mov
negb
push
cmpsl
jl
movsl
dec
fcomps
sahf
mov
or
insl
push
sti
cmc
xchg
push
push
mov
dec
arpl
dec
push
xchg
into
mov
mov
adc
cmp
cmp
jle
daa
shrb
lds
rorb
js
iret
divb
mov
orb
scas
lahf
clc
sbb
jg
popa
pop
cmpsb
fildll
adc
mov
rorl
sbb
sub
inc
mov
lds
lock
lods
decb
fiadds
daa
sub
jp
out
and
icebp
pushf
aad
stc
clc
leave
inc
add
xor
aas
add
add
mov
or
insb
in
dec
ret
push
add
xlat
imul
cmpsl
sbb
out
or
jb
cmp
bound
mov
pusha
paddusb
ss
sahf
dec
out
xchg
out
scas
out
add
pop
cmp
pop
sbb
out
jnp
addr16
jno
mov
sarb
mov
inc
push
gs
pop
sete
aad
data16
push
and
lahf
dec
xchg
xrelease
lods
repnz
insb
mov
popa
mov
jg
out
add
outsl
imul
rorb
ret
out
jecxz
cli
jns
leave
inc
movsb
mov
movsl
pop
mov
or
mov
cmc
divb
cmp
xor
jl
in
push
ss
mov
int3
sbb
dec
rorl
out
ret
fiadds
mov
push
stos
jbe
stos
dec
and
ja
mov
inc
pop
insl
arpl
dec
cmp
ret
lods
jl
adc
pop
xlat
addr16
dec
sub
or
ret
dec
imul
addr16
xchg
xchg
cmp
std
jl
js
sub
aas
jge
cmp
movl
sbb
in
js
jmp
jg
pop
lahf
scas
mov
xchg
push
mov
or
icebp
push
test
icebp
xchg
daa
xor
jns
xchg
arpl
cwtl
out
adc
pusha
enter
lcall
xchg
jmp
mov
outsl
push
sub
js
outsl
push
test
aas
mov
lret
sbb
adc
daa
push
xlat
mov
mov
dec
stos
ret
sbb
nop
lods
dec
jnp
and
or
loope
xor
cmpsl
mov
mov
push
push
sbb
int
xchg
xor
insl
pop
mov
lcall
mov
cmp
mov
pop
fs
push
aaa
mov
mov
push
cld
popf
sbb
cmp
or
mov
push
outsl
jmp
les
push
sarl
pop
and
test
and
mov
lods
push
call
push
adc
add
testl
mov
mov
pusha
fldt
in
xchg
mov
mov
int3
mov
les
adc
loope
testb
adc
into
or
call
or
pop
movb
pop
pusha
or
movsb
iret
fldenv
jecxz
or
pop
and
sbb
iret
mov
mov
mov
int
xor
pop
mov
cmp
mov
jne
cwtl
cmpsb
push
cmpsl
iret
pop
cmpb
dec
jns
sub
flds
inc
dec
mov
outsl
cmc
jno
cmc
enter
dec
call
mov
sub
clc
jge
dec
incb
push
sub
push
icebp
adc
jns
std
jne
arpl
mov
test
jne
or
addr16
xor
xchg
add
push
bnd
nop
adc
xchg
jecxz
mov
adc
jecxz
repnz
mov
js
push
popa
mov
cld
test
mov
mov
and
dec
stc
stos
test
decl
aam
jo
aam
adc
push
and
mov
push
sub
imul
jmp
pop
rclb
iret
xchg
jae
mov
mov
aad
enter
in
jae
adc
jmp
mov
mov
sub
imul
add
psubw
mov
push
mov
sub
xor
sub
cwtl
movsl
pusha
mov
push
xor
cld
xlat
les
cmpl
jo
inc
adc
inc
and
lahf
mov
sbb
and
mov
movsb
dec
subl
in
cmp
push
cmpsl
adc
xchg
out
loope
imul
push
add
jmp
test
std
jp
lret
flds
cmpsl
rclb
jmp
test
lods
pop
or
sbb
outsl
jns
dec
dec
jbe
inc
push
xor
sub
sub
sbb
push
xchg
gs
xchg
adc
mov
jmp
cld
add
inc
xchg
pop
fs
adc
mov
ret
ss
mov
push
jecxz
imulb
mov
push
dec
lret
mov
or
test
push
mov
or
pop
jmp
inc
cmp
in
loopne
xor
movb
jmp
rcl
js
fldl
jbe
aaa
fdivp
and
push
mov
loop,pn
mov
xor
bound
stc
cmpsb
gs
jnp
out
adc
push
mov
inc
in
int3
enter
add
js
sub
mov
dec
xchg
rorl
push
sbb
xor
sahf
cmpsl
add
push
das
jns
cs
adc
std
les
fdivrp
bound
push
jb
loope
rcll
movsb
mov
or
cmp
stos
cmp
movsl
inc
and
mov
imul
push
rcll
fcoml
mov
test
sbb
add
add
roll
loopne
push
leave
sbb
jmp
sbb
xchg
lods
and
xchg
ljmp
movsl
sahf
adc
push
dec
bound
xchg
xchg
add
into
mov
push
push
cmp
orb
test
ds
mov
insb
fwait
mov
fdivrp
jg
sbb
xchg
xchg
int3
mov
sbb
data16
pop
add
les
mov
int
add
in
jl
inc
repnz
fs
dec
jo
xor
scas
dec
or
test
mov
jecxz
mov
cld
adc
pop
adc
inc
push
push
sbb
jbe
shll
rcrl
inc
into
sub
lcall
bound
movb
push
rdmsr
mov
xor
shlb
jg
out
das
hlt
lret
inc
pop
jmp
push
adc
aaa
push
rclb
cmc
stc
sbb
into
and
in
and
out
inc
pop
test
mov
testb
insl
adc
sbb
scas
cwtl
aaa
mov
jae
stc
fidivrl
lods
ds
or
ret
push
adc
cmp
inc
cmp
test
adc
pop
mov
je
repnz
dec
jbe
cmp
adc
xchg
movsl
xor
sbb
push
gs
adc
and
in
test
mov
lret
out
cmp
dec
and
jg
mov
mulb
outsb
pop
imull
shlb
push
fwait
xchg
test
mov
jl
and
adc
mov
jl
out
add
fst
lahf
mov
out
inc
hlt
pop
or
pushf
inc
jp
jb
push
jb
aaa
pop
std
push
nop
xorl
ffreep
fisubrs
ret
je
mov
mov
rorl
cmp
std
scas
cs
and
push
test
test
repz
shlb
in
test
xchg
popf
mov
pop
stos
into
lea
ret
iret
cwtl
mov
pop
popf
ss
push
dec
jle
dec
or
je
inc
orb
fcompl
nop
lock
adc
push
insl
sarb
jg
icebp
push
mov
and
push
adc
adc
mov
repz
cmpsb
mov
adc
mov
scas
outsb
jp
cli
in
jle
push
loopne
pop
adc
fninit
push
scas
inc
mov
loopne
or
std
cmp
mov
dec
or
inc
inc
test
dec
clc
rcr
lret
test
hlt
push
and
jge
test
sbb
leave
movsb
aaa
mov
arpl
dec
dec
and
arpl
jg
test
xchg
push
sarl
mov
xor
idivb
scas
stc
push
enter
mov
mov
cmp
mov
add
cmc
in
cltd
iret
cmp
jmp
jo
jg
ljmp
test
pop
adc
ss
dec
jmp
stc
xchg
pop
cmpsb
sub
xchg
push
xchg
out
jmp
dec
cmp
push
cmp
xor
lds
pop
stos
fxsave
pop
fmuls
or
int3
mov
gs
jp
js
gs
enterw
xchg
jns
dec
popf
repnz
iret
mov
jle
jnp
icebp
loop
repnz
repz
test
mov
jae
loopne
jge,pt
aam
sbb
xchg
pusha
rorl
cmp
fdivrs
add
adcb
sub
adc
jb
aaa
addr16
cmp
add
arpl
pusha
xor
or
dec
arpl
mov
jge
push
data16
fnstenv
jp
cld
mov
xchg
ss
and
lahf
adc
std
xor
mov
jge
xchg
jnp
movsb
mov
xor
dec
or
sbb
out
push
stos
mov
and
scas
cmp
cmp
cmp
pop
leave
aaa
xlat
adc
mov
clc
les
addb
pop
adcl
xlat
mov
test
pop
adc
xor
xor
inc
mov
rcr
sub
mov
scas
out
fadds
jecxz
mov
insb
jl
test
sti
xor
nop
mov
jmp
in
lea
inc
push
stos
mov
xchg
ds
sti
xchg
pushf
pop
cwtl
cld
sub
jl
hlt
sbb
cmp
pop
loope
test
ds
sub
lahf
imul
aas
push
mov
mov
nop
mov
xor
add
ljmp
jbe
orl
and
sbb
jo
jbe
pop
aad
and
pop
hlt
push
jo
ret
push
mov
dec
push
mov
in
movsl
es
popf
xchg
adc
sbb
dec
in
cs
in
sub
mov
mov
adc
sarl
push
xchg
pop
out
and
fsubrs
out
loope
and
shrb
xor
mov
sub
xlat
cmp
out
js
sbb
fnsave
fnstenv
mov
stos
sti
jb
mov
and
inc
pop
lret
pushf
into
and
loope
popa
adc
xor
jp
push
push
mov
ljmp
sbb
scas
dec
mov
cmp
cmc
lret
xchg
mov
je
nop
outsb
cmp
add
and
xor
aaa
push
fidivrl
inc
adc
xchg
into
inc
cld
test
sbb
cltd
jo
jmpw
mov
or
push
cmp
adc
sub
and
xor
lds
imul
push
adc
fwait
sbb
mov
xchg
cmp
push
push
mov
rorl
not
xor
pushf
add
xorl
add
mov
pop
ds
mov
lock
popa
jbe
negl
movsb
daa
cld
push
cs
push
adc
xor
sbb
pop
dec
xor
dec
xchg
lret
call
cmpsb
mov
xor
pop
jge
mov
and
lret
jb
cmp
push
aas
pop
push
dec
test
imul
sbb
cltd
fidivrl
adc
inc
icebp
les
xor
in
cld
add
sbb
jecxz
and
pop
add
add
popa
xchg
jno
inc
pop
aaa
sub
mov
xchg
lcall
roll
les
inc
adc
adc
mov
cmp
cld
rolb
addb
adc
pusha
aas
sub
cmp
lock
cmp
sti
pop
out
jb
add
movsl
or
jge
clc
dec
mov
add
call
les
pop
in
lcall
sub
rol
cwtl
in
insb
sahf
fsts
cltd
push
lcall
and
cmpsb
xchg
jle
xlat
xorb
xchg
lret
jge
pop
jmp
dec
xchg
mov
cwtl
les
push
sub
or
sarb
jecxz
lock
mov
call
xchg
add
cs
aas
hlt
movsb
jbe
mov
orl
push
push
sub
cmp
xor
ja
pusha
lret
gs
bound
fs
movb
xchg
sub
fcmovne
jecxz
shlb
aam
cli
add
pop
insl
in
les
mov
sahf
fucomp
xacquire
lock
add
sub
push
sub
out
pop
and
mov
pop
flds
dec
jle
sub
inc
adc
cmpsl
icebp
jae
cmpb
addb
fiadds
xchg
sub
add
rcr
xor
icebp
sub
xor
lea
fs
cmp
xorb
hlt
sub
and
jecxz
jns
xchg
out
movsb
mov
icebp
jle
fwait
aaa
inc
loopw
test
cmp
ret
addr16
cmp
js
fisubrl
enter
sbb
xchg
or
jno
js
xor
and
out
test
push
test
cmp
gs
pop
imul
add
pusha
leave
dec
pop
mov
test
push
aaa
inc
push
sbb
sbb
mov
es
sub
mov
out
pop
pop
rorl
into
aad
xlat
stc
or
push
and
and
cltd
add
adc
jg
dec
pushf
xor
vpmuludq
pop
xor
xchg
xlat
test
add
icebp
movsb
filds
dec
loopne
mov
int3
dec
jg
jecxz
jb
dec
stos
fsub
les
push
or
push
pop
and
rorb
insl
pop
lss
mov
ret
xor
mov
lcall
rcrl
xor
lcall
dec
push
dec
mov
mov
add
mov
sbb
mov
cmp
ret
pusha
adc
sub
rorl
incl
mov
mov
ljmp
movsb
stos
in
test
out
ret
jae
loope
push
xchg
sub
mov
push
sub
mov
adc
xchg
push
dec
mov
cmpb
push
mov
std
popa
dec
dec
jg
cwtl
sbb
and
loopne
hlt
inc
mov
cmp
das
test
ret
mov
mov
test
test
adc
stc
shl
out
inc
xorl
lahf
mov
subl
scas
pop
loopne
rcll
cmp
lret
fiadds
ret
cltd
add
xchg
pop
stos
notb
cmp
jns
dec
lret
push
lods
outsb
shlb
das
shll
test
push
ds
ret
ret
xor
and
dec
movb
adc
push
int3
fdiv
test
addr16
inc
and
lods
orb
lcall
in
in
add
subb
xor
call
adc
inc
inc
mov
xchg
jo
and
or
jecxz
mov
push
sahf
xor
scas
and
mov
sub
out
clc
outsl
das
lods
xor
cmp
adc
dec
inc
jb
popa
shlb
clc
pushf
fisubs
cltd
jb
pop
or
rclb
mov
imull
shrl
mov
out
xor
lds
add
cmp
sbb
mov
stc
shll
sahf
lahf
push
lock
or
leave
xorl
push
mov
cltd
pop
jns
andb
cli
test
cmp
jge
mov
and
lcall
sub
int
and
sbb
pop
out
mov
aaa
out
je
cmpsb
out
inc
push
fadds
add
fs
lods
in
mov
cltd
add
add
cs
cmpsl
add
dec
aam
lcall
dec
inc
xor
add
xor
gs
or
and
test
mov
arpl
xchg
inc
insl
xchg
xor
and
imul
and
adc
lock
arpl
leave
mov
sub
mov
jg,pn
pop
sub
pop
aad
sti
loop
dec
ljmp
cmpsl
dec
cltd
jnp
shr
dec
dec
pushf
pop
rcrb
shrl
pop
inc
cmpxchg
mov
stos
cmovns
pop
es
xchg
lock
jg
cmp
mov
fnsave
inc
imul
push
adc
notl
movsl
pop
fwait
add
outsb
in
cmpsl
xor
xor
sahf
out
dec
pop
clc
data16
mov
jg
xorb
mov
jg
call
sti
jle
or
jecxz
push
pop
loopne
and
push
cmp
and
pop
xor
stos
push
imul
add
or
sbb
arpl
pop
sub
push
mov
enter
shlb
jge
out
mov
mov
push
mov
ljmp
call
daa
mov
adc
sbb
neg
jg
mov
in
pop
xchg
add
mov
push
xchg
orl
jns
cmp
loopne
sbb
sub
pushf
rolb
mov
mov
das
jae
push
data16
dec
imul
inc
es
inc
pop
lea
je
jbe
sub
push
adc
sbb
fwait
sub
or
fmuls
xor
sbb
addr16
xchg
ds
mov
cmp
sbbb
hlt
pop
fists
pop
adc
or
inc
cwtl
shrb
mov
mov
mov
hlt
movsl
jbe
ja
mov
test
lret
stos
nop
scas
hlt
mov
lret
inc
jmp
push
aad
loop
ss
or
mov
push
pop
dec
pop
mov
movsl
insb
int3
mov
addr16
icebp
in
and
pushf
popa
hlt
dec
clc
pop
mov
jae
addr16
push
mov
es
dec
out
dec
mov
lods
into
sbb
add
sti
push
xchg
pop
sub
in
adc
push
jle
inc
or
mov
outsb
fstpl
insl
out
fucomip
and
push
sbb
xlat
cmpsb
out
and
mov
push
push
mov
fdivp
mov
cmp
or
mov
sub
jnp
stos
mov
daa
jge
or
and
adc
lret
pop
mov
arpl
aam
js
int
xor
pop
call
flds
adc
int3
xchg
sub
js
mov
push
jns
outsl
pushf
ret
iret
push
push
or
lock
in
push
pop
push
xchg
mov
out
pop
pop
jae
nop
jne
fs
leave
jno
lret
imul
mov
mov
xchg
mov
adc
lods
and
push
imul
jbe
cmc
test
outsb
push
jp
iret
inc
mov
in
hlt
mov
add
jle
dec
stos
popf
and
aas
push
jle
scas
in
scas
jle
pushf
fnstsw
icebp
clc
dec
pop
push
je
shl
jb
jnp
call
iret
xchg
int
sbb
pop
int3
clc
jg
and
inc
test
mov
jmp
enter
sub
lds
pushf
and
cmp
pop
stos
push
popa
jle
xchg
lea
sub
lahf
lods
pop
rcrb
jl
dec
adc
adc
and
add
inc
xor
adc
iret
and
mov
cli
les
inc
inc
mov
dec
shll
xor
and
dec
xchg
rolb
lcall
pop
stc
cmpsb
leave
xchg
js
clc
dec
les
pop
js
std
shrl
inc
xchg
lods
in
dec
and
bound
cmp
popa
mov
mov
stos
add
pop
out
insb
add
cli
fnstsw
push
xchg
jb
fwait
es
and
int3
rcrb
adc
or
leave
roll
jp
daa
cmpsb
mov
int3
mov
inc
daa
lret
aad
sbb
xchg
mov
hlt
loopne
xchg
repnz
test
or
es
sbb
adcl
idivl
jecxz
jl
out
adc
arpl
shrb
and
jp
xchg
fs
call
lahf
mov
push
sar
shr
cmpsl
dec
jp
jno
ror
dec
es
sub
push
test
lret
mov
push
add
sar
orb
movsb
gs
rcll
ja
ds
insb
addl
out
orb
ret
loop
sahf
mov
xchg
in
shrl
mov
repnz
push
mov
in
xchg
xor
pop
dec
dec
ds
es
out
or
call
cmp
xor
xchg
sysret
mov
push
cltd
mov
mov
sub
test
clc
fisubl
jnp
mov
inc
movsl
cmpsb
test
dec
lods
and
dec
pop
dec
test
fwait
mov
cmp
cmpsb
ja
mov
mov
mov
inc
test
iret
rclb
cmp
pushf
pop
mov
lahf
push
push
ficoms
push
insb
int3
ja
clc
or
fninit
loope
in
mov
std
shl
cmp
mov
mov
xor
mov
das
lea
imul
call
xor
adc
cmp
xchg
push
mov
jle
push
fwait
jns
cmp
xchg
sbb
mov
add
shll
movsb
mov
mov
add
cwtl
xchg
mov
mov
cmpsb
int
mov
mov
movl
xor
das
or
hlt
notl
push
mov
push
lds
add
jne
call
cwtl
paddw
out
nop
inc
daa
in
cmpsl
bound
int3
jle
mov
insl
aad
cmp
inc
xchg
sub
or
push
inc
into
je
push
test
out
mov
or
stos
hlt
adc
in
mov
mov
call
movsl
or
or
mov
mov
mov
ja
dec
std
sar
movsl
mov
cmp
dec
and
pop
adc
dec
push
mov
or
mov
cmp
sbb
push
jo
lret
jge
mov
xchg
mov
push
add
xchg
and
sbb
cltd
add
xor
jmp
insb
pop
out
shll
pop
scas
dec
inc
xchg
daa
xchg
and
fsts
push
into
jnp
imul
and
cli
and
mov
mov
xchg
add
cmp
inc
sbb
insl
ljmp
xchg
lea
jg
mov
aaa
xchg
jl
sti
dec
pop
in
mov
jne
imul
or
adc
add
push
jge
lea
lods
mov
out
mov
jne
rcll
mov
xchg
scas
lret
ret
in
roll
mov
cmpsb
lods
imul
stos
iret
out
std
lock
test
mov
aam
ret
dec
pop
neg
adc
sbb
es
xchg
bnd
push
in
mov
dec
pop
dec
jns
mov
ds
pop
ds
mov
jb
cli
mov
xchg
popa
testl
add
out
out
sub
pop
adc
jb
popa
cmpsb
pop
push
pushf
fstl
ret
sub
and
into
das
ss
adc
push
xor
lds
pop
jl
in
enter
mov
cmp
jmp
cs
and
sbb
inc
jae
or
scas
in
testl
xor
push
loopne
push
and
sarl
add
cmp
stos
shl
sbb
lock
ret
sbb
mov
mov
dec
jo
add
cmp
addr16
lock
and
xor
pop
xor
dec
outsl
in
mov
in
pop
shl
test
and
mov
in
jle
or
dec
adc
outsl
push
add
jns
pop
test
fucomp
or
jbe
add
mov
loopne
jbe
lret
jecxz
clc
fldl
addl
jnp
jle
jp
mov
xor
int3
and
jb
mov
jne
mov
xor
lds
inc
pushf
xor
and
push
jnp
sbb
xor
lods
movb
jge
inc
cmp
xlat
or
mov
add
ror
jae
pop
stos
lock
fdivrp
addr16
fmuls
jb
or
or
xchg
testb
cs
pushf
ja
mov
aad
in
fstps
inc
inc
cwtl
mov
pop
stc
movsb
bound
stos
cmp
dec
sub
sub
subl
inc
fidivl
adc
lods
fbld
or
sti
dec
cmp
xor
ss
cltd
into
xchg
mov
hlt
jg
into
or
mov
adc
jg
mov
arpl
or
sbb
add
adc
push
pop
repz
shrb
movsb
lcall
and
nop
aam
push
stc
pop
loopne
cmp
push
add
call
and
push
leave
jnp
shll
and
xor
mov
mov
int
inc
xor
jne
add
sub
sbbb
pop
cmp
bound
test
cmpsl
mov
mov
outsl
sbb
clc
mov
mov
push
push
fs
or
stos
daa
jnp
fisubrl
jge
outsl
imul
cmp
adc
or
jae
loop
loope
or
add
mov
or
push
or
hlt
das
push
testb
cwtl
lods
stos
add
jnp
ret
or
cwtl
and
cmp
je
test
push
mov
mov
mov
aad
jg
sub
cs
adc
sub
mov
jnp
push
pop
pop
imul
mov
jo
and
sbb
add
loope
mov
pop
cmc
leave
ja
dec
push
inc
mov
test
pop
das
sub
dec
pop
pop
inc
icebp
inc
popa
div
sub
idivl
inc
jle
jno
pop
jecxz
repz
aaa
popf
sbb
mov
shl
dec
arpl
jle
inc
push
sub
test
cmp
sub
jbe
pop
jecxz
xchg
xchg
inc
fstps
xchg
inc
scas
adc
iret
xchg
subb
dec
pop
loopne
add
xchg
outsb
or
outsl
xor
stos
inc
sbb
mov
push
add
rorb
cmp
hlt
ds
mov
mov
jns
ljmp
testl
cmc
addl
movsl
daa
sbb
jo
negb
dec
jno
cs
xchg
addl
shlb
out
test
cli
sarl
pop
lea
cmpb
in
mov
sbb
es
sub
std
jg
nop
popf
adc
lock
rorl
ret
in
and
inc
mov
mov
call
ffree
in
inc
pop
mov
aam
adc
in
stc
mov
stos
mov
loopne
inc
leave
pop
inc
pushf
sub
xchg
aaa
into
sub
sbb
xchg
xor
push
push
cwtl
xchg
cli
pop
cmp
sub
das
loopne
data16
cwtl
adc
sahf
push
mov
cmovne
faddl
bound
pop
fwait
jle
dec
inc
idiv
decl
and
sti
lret
loope
dec
sub
sub
aaa
cs
push
shld
sub
cmpsl
push
gs
xor
mov
int3
xchg
adc
cmp
dec
mov
mov
addr16
jnp
and
int
js
xor
xchg
jnp
in
in
xchg
dec
daa
icebp
and
cmc
fadds
lods
xchg
sbb
lock
sti
rcr
cld
movsl
imul
xor
test
push
xchg
cwtl
mov
mov
cmpsl
push
push
inc
push
jbe
ja
mov
mov
fimuls
adc
jns
ja
or
out
lcall
dec
or
mov
shr
jp
iret
iret
clc
dec
push
pop
rcll
sbb
test
inc
add
mov
cmp
mov
or
lods
fwait
mov
cld
inc
sarb
inc
mov
xchg
sbb
cld
mov
jl
jecxz
pop
in
push
insb
ss
dec
cwtl
sub
shl
shl
mov
push
gs
jne
movsl
loop
xor
xchg
stc
shlb
push
xchg
push
jno
ljmp
jmp
pop
mov
adc
push
js
jp
mov
or
lcall
stos
pop
xor
test
repnz
jne
js
addr16
out
pop
jbe
fcoms
or
xchg
pop
fisubrs
xchg
daa
inc
decb
jp
adc
fstl
sub
stc
test
cltd
adc
pop
push
inc
cmp
jb
jnp
out
sbb
movsb
sub
and
cmpsl
leave
ljmp
pop
mov
or
sbb
jns
test
push
lods
pop
or
test
jg
mov
xor
roll
mov
dec
mov
add
mov
sbb
jbe
outsb
jbe
xchg
jmp
cld
dec
mov
test
mov
aaa
xchg
sbb
xor
cmpsb
xor
inc
inc
lea
clc
pop
lods
int
push
xor
stc
jns
push
test
cmp
inc
inc
es
imul
push
int
adc
stos
in
push
pop
ss
test
or
pushf
sbb
ficoml
xor
add
rclb
jo
pop
insb
scas
repnz
test
fstl
mov
cltd
ret
adc
push
pop
dec
enter
imul
cmp
cwtl
orl
push
push
xchg
cmpsl
movsb
divb
movsb
inc
pop
push
cltd
cld
roll
jne
scas
mov
push
xchg
ss
pop
imul
flds
jmp
fnsaves
mov
xor
cmp
pop
rorl
aad
and
and
xor
in
pop
leave
sub
mov
inc
and
push
bound
iret
lds
sbb
mov
popf
pop
push
push
movsl
mov
stos
xor
aaa
in
pop
aaa
scas
xor
lock
xchg
fimull
sti
test
into
les
xor
int
arpl
pusha
dec
mov
jmp
sub
xchg
mov
inc
fwait
jmp
jne
lret
test
cld
pusha
or
icebp
inc
enter
stc
data16
lret
push
addl
dec
shll
rorb
pushf
scas
sti
sbb
mov
sbb
push
repnz
adc
inc
loop
push
push
aad
sub
and
stc
sahf
mov
mov
test
out
xchg
or
sbb
lock
jb
pop
int3
shll
scas
xchg
push
loope
out
popa
clc
out
repnz
jge
jns
sub
and
fisttps
cmp
sub
daa
jmp
roll
mov
cld
jge
cmc
cmp
ja
in
xorl
and
xchg
jne
aad
and
nop
push
loope
ficomps
sub
dec
scas
dec
jo
jg
lds
sbb
jge
inc
jl
adc
bnd
mov
mov
xchg
or
cmpl
jle
cmp
sbb
mov
and
adc
push
hlt
es
fcmovne
fiadds
cmpsb
andb
and
lds
mov
sub
mov
notl
push
sbb
pop
lahf
mov
fstp
cmp
xor
mov
rcr
dec
std
adc
aad
or
mov
push
fstl
cmp
and
mov
sbb
xchg
dec
lds
mov
push
xor
fs
aam
repz
rcrl
push
mov
sub
into
dec
pop
imulb
or
lock
ret
jne
dec
pushf
sub
sub
lret
jns
and
mov
sub
mov
pop
and
sub
pop
xchg
das
lds
cwtl
push
pushf
nop
pop
cs
mov
jb
subb
jg
xor
icebp
cltd
pop
mov
xchg
ret
cmp
inc
pop
sti
insl
dec
lret
cmpsl
subb
jne
fistl
sbb
dec
lds
fstpt
imul
aad
loopne
xor
pop
dec
ds
pop
sub
pop
or
test
shlb
pop
dec
push
inc
fidivrl
sbb
sbb
imul
dec
in
rcr
popa
jne
xchg
or
mov
mov
or
cmpsl
lock
mov
mov
outsb
cmp
cmp
mov
mov
loope
mov
lods
insl
js
je
mov
jle
lea
leave
addl
in
out
add
pop
mov
xor
or
lret
jle
ret
stc
pop
sub
scas
test
inc
loopne
jae
aam
lahf
dec
lods
push
inc
adc
cmc
cli
test
fcoms
sbb
call
mov
xchg
push
into
mov
sbbb
sbb
pusha
mov
testb
aad
mov
int
dec
cltd
dec
mov
jo
mov
movsl
mov
inc
mov
push
dec
dec
ret
hlt
clc
adc
jae
adc
sub
add
cmp
into
lret
idivb
xchg
shl
popf
retw
fdivrl
push
push
cwtl
sahf
xchg
pop
icebp
cmpsl
push
sbb
icebp
inc
push
das
imulb
push
ret
in
std
sbb
std
cmpsl
arpl
jg
sahf
loop
dec
push
shll
xlat
inc
imul
es
adc
push
sahf
ret
nop
sub
cmpsl
fs
cmp
add
clc
sub
insb
scas
push
pop
jg
js
mov
arpl
push
outsb
dec
repnz
and
loope
popa
mov
out
mov
fsubs
jmp
ds
int3
movups
sbb
les
sub
mov
adc
pop
loope
mov
icebp
es
mov
lods
jl
mov
xor
adc
adc
fidivs
jmp
mov
shrl
mov
cmp
daa
cwtl
pop
ret
jecxz
push
mov
dec
jle
fwait
jl
lods
neg
outsl
movsl
adc
and
stos
fdivrl
shlb
and
sbb
daa
push
andl
mov
jmp
mov
push
mov
mov
inc
or
in
loop
arpl
ret
xor
cmp
call
lret
data16
xchg
push
sub
mul
fidivl
sbb
lret
inc
sbb
sub
je
add
in
sub
adc
in
cmp
add
mov
and
add
bound
xor
cmpb
in
push
test
inc
lock
and
fimuls
fdivs
adc
sbb
mov
jno,pt
mov
fildll
rcr
hlt
jo
testl
inc
loopw
and
jp
or
cmp
inc
ja
sbb
lcall
mov
push
mov
mov
fldl
mov
push
pushf
pop
pop
icebp
out
popa
out
nop
xor
push
lret
imul
pop
xchg
adc
stos
mulb
add
or
dec
out
fwait
pop
mov
and
dec
pushf
cmc
addb
push
push
adc
mov
and
xchg
and
dec
add
push
push
int3
add
lcall
cmp
or
xchg
gs
bound
mov
jnp
in
lret
ret
sbb
pop
push
push
ficoml
push
dec
pop
and
sti
xchg
es
dec
lock
mov
fwait
mov
int3
adc
mov
rcll
fisubrs
sar
jle
sub
mov
mov
jbe
int3
mov
test
mov
adc
xlat
xor
or
or
clc
mov
bound
xchg
mov
inc
pop
pusha
and
xor
mov
pop
rolb
sub
fucompp
enter
push
mov
out
xor
sti
sbb
adc
test
xchg
sbb
cmp
xchg
push
pop
xor
aad
xchg
test
leave
mov
push
out
int3
in
push
aam
lds
xchg
int
fs
jb
add
in
in
jae
add
mov
cmp
pusha
test
out
and
aam
add
sti
sbb
and
out
pushf
idiv
dec
and
cmc
xor
nop
cs
cmp
inc
ss
out
sub
pop
inc
add
aaa
int3
dec
or
adc
and
div
push
mov
inc
fstpt
popf
cmp
and
pop
nop
mov
es
adc
and
enter
push
push
rcrl
sbb
cld
out
icebp
inc
xor
xchg
stos
hlt
leave
add
sbbl
push
in
inc
jnp
or
push
or
pop
insb
jl
cwtl
ja
fmulp
mov
push
cmpsb
mov
push
add
dec
lock
mov
popf
xchg
fs
imul
xchg
mov
sub
push
mov
out
xchg
inc
idivb
and
mov
adc
pop
pop
fbld
sahf
or
push
xchg
mov
xor
cld
test
fistps
or
test
or
mov
push
into
roll
xchg
sub
repz
xor
lods
icebp
fstl
jbe
jp
cmp
cmp
add
shlb
dec
xor
pop
test
jp
pop
jl
push
jnp
es
or
enter
add
test
lret
mov
xlat
add
jmp
neg
iret
cmp
mov
sub
or
cmp
mov
adc
mov
mov
xor
jns
dec
test
mov
loopne
or
mov
std
fnsave
int3
mov
roll
js
sub
xor
adc
or
popa
scas
dec
pop
lods
and
loop
pop
cmpb
into
test
pop
xlat
adc
out
sub
xor
out
add
push
mov
out
add
push
rcll
bound
and
jb
xchg
pusha
aaa
shrb
cli
push
out
mov
sub
cltd
jnp
ficompl
sbb
sub
movups
cwtl
fsubp
xchg
pop
sub
insl
or
mov
aaa
or
stc
mov
xor
pop
add
rorl
mov
ret
jae
adc
cmp
jns
arpl
jl
sbb
jg
aaa
push
aas
cmp
fdivrp
xor
dec
cmp
xorl
hlt
movsl
mov
xor
out
out
sbb
mov
lea
mov
mov
nop
fcomp
out
sub
mov
imul
aad
jno
cs
loop
in
and
xor
jl
bound
subb
test
enter
push
in
das
mov
mov
jmp
out
and
pop
out
mov
push
loop
sub
leave
add
dec
xor
lahf
imul
sbb
pop
into
and
or
dec
mov
sub
out
andb
rolb
ret
jne
fcomps
sbb
fwait
jge
adc
outsb
cmc
xchg
fs
mov
stos
clc
les
inc
incl
je
cmpsl
or
lock
jp
cmp
fcmovnb
push
cmpsl
insb
pop
sub
call
pushf
sub
push
inc
sarl
jg
repz
inc
xchg
push
scas
cmpsl
and
add
mov
mov
mov
into
sbb
in
mov
sbb
xor
jg
je
mov
pop
xor
push
into
mov
in
test
sahf
mov
xchg
inc
add
int3
push
outsb
push
add
xchg
fld
jg
int3
dec
ss
pop
jno
rorl
push
push
lods
jae
push
pusha
roll
hlt
sub
stos
iret
jbe
ficomps
sub
inc
pop
inc
lret
xorl
and
cwtl
adc
mov
cmc
dec
sub
int
test
mov
out
dec
rclb
fcomp
repz
mulps
xor
push
jae
cmp
push
push
xor
sbb
jne
ret
neg
mov
sbb
jne
fmulp
mov
loope
inc
mov
sti
movsl
in
idivb
notb
inc
jmp
sbb
repz
call
fisttpll
dec
jmp
mov
sbb
test
cmp
pushf
sti
fiaddl
les
je
cltd
jb
and
or
jmp
int3
and
cld
lds
cmpsb
adc
movsb
inc
pop
rcrb
mov
mov
mov
and
test
push
mov
and
jb
sub
in
imull
inc
sbb
pop
jecxz
popa
mov
test
adc
add
dec
lods
imul
xchg
and
ja
mov
daa
and
test
mov
andb
fldl
or
mov
lds
jge
ja
pop
add
mov
adc
in
sub
sub
sahf
in
lea
je
fstps
hlt
jno
outsb
dec
in
outsl
sub
in
je
ss
unpcklps
into
lahf
out
inc
sbb
pop
sbb
jecxz
in
mov
pop
push
in
dec
pop
stos
push
mov
and
push
sbb
cld
xor
std
mov
fsts
sub
inc
jnp
aaa
inc
lret
mov
mov
mov
sub
mov
adc
in
test
inc
fimuls
xorb
repz
pop
add
dec
mov
pop
pop
cwtl
stc
pop
sbb
mov
gs
mov
add
adc
adc
sbb
enter
outsl
push
icebp
jne
pop
inc
xchg
jbe
out
loope
out
je
jl
adc
fisttpll
mov
subl
xchg
mov
adcl
ja
pop
stc
sub
mov
xor
scas
mov
push
aad
pop
popa
pop
pop
sahf
add
xchg
inc
inc
scas
lds
sbb
xchg
inc
outsl
popf
xchg
xor
notb
mov
sub
ret
pop
and
std
mov
jnp
pop
sub
push
test
adc
cmpsl
xchg
push
cmpsb
sbbb
xchg
xor
inc
popa
test
scas
sub
add
inc
adc
jne
filds
xchg
push
adc
call
sbb
clc
fimull
xchg
jl
test
cmp
or
arpl
test
jl
hlt
in
sub
pcmpeqd
ret
data16
insb
add
aas
pop
and
scas
icebp
dec
lahf
pop
enter
stc
roll
popa
rolb
dec
sti
bound
pop
xchg
repz
mov
jge
jecxz
xchg
dec
insb
test
jge
jbe,pt
arpl
sub
sbb
mull
pop
shrb
int
mov
cmpsb
nop
xorb
pop
adc
pop
cmp
mov
pop
adc
fbstp
sub
mov
push
or
into
cmp
lods
inc
adc
dec
pcmpgtb
push
lcall
dec
push
inc
pop
mov
jg
push
je
xchg
push
lahf
inc
mov
add
xchg
add
notl
lret
in
pop
into
push
mov
scas
addl
pushf
adc
lret
xchg
sbb
jge
outsl
add
adc
cmp
ljmp
dec
sbb
mov
aam
sti
dec
add
inc
mov
scas
jne
sbb
mov
sbb
dec
inc
dec
pop
xchg
shl
test
ret
add
neg
fnsave
pop
fnstenv
adc
xorl
sub
test
dec
mov
mov
or
out
stos
js
notl
mov
in
xchg
lock
rolb
popa
jb
inc
lds
imul
jge
in
icebp
add
into
add
test
pop
sub
mov
cmp
add
int3
int3
mov
mov
les
icebp
sbbl
xchg
push
or
inc
jns
mov
ss
xchg
xor
cmp
or
pop
xchg
mov
jno
les
dec
jo
dec
clc
mov
loopne
mov
mov
lock
addb
aaa
push
or
push
mov
and
je
js
fs
mov
dec
popa
aam
loope
adc
test
rol
pushf
dec
xlat
mull
cli
stc
scas
dec
pop
popa
mov
and
cmp
sbb
lahf
std
mov
pop
push
std
or
inc
cmpsl
dec
pop
out
add
mov
jl
mov
xchg
jmp
aas
pop
mov
and
into
pusha
fstpl
sbb
pop
mov
jno
fsts
outsl
ljmp
lcall
fmuls
cmp
jle
aam
insl
rclb
mov
mov
mov
call
in
negl
leave
sbb
scas
mov
repz
rol
lretw
push
xchg
push
sahf
shlb
cwtl
aaa
sub
ja
cmp
xchg
nop
repz
mov
sub
cmc
xor
pop
or
lret
sahf
push
es
sarb
inc
add
xor
divl
cli
dec
jne
icebp
addr16
or
xor
loopne
idivb
push
mov
outsl
lds
adc
movsl
pop
div
xchg
out
mov
fwait
push
das
ss
mov
out
mov
push
xor
out
scas
cmp
mov
pop
in
xchg
xor
ficompl
and
test
mov
mov
cmc
dec
push
or
ss
xchg
leave
outsb
push
mov
jl
mov
or
outsl
add
adc
scas
lods
mov
inc
mov
sub
shl
cs
mov
dec
push
fstl
pop
dec
cld
pop
inc
inc
jno
jecxz
xchg
jecxz
jb
daa
cmp
sbb
mov
into
aaa
push
mov
notb
add
lds
fdivs
sar
shlb
mov
or
subb
sub
add
pop
jecxz
add
mov
dec
pop
xchg
leave
lret
lret
int
adc
add
fs
dec
js
adc
outsl
fcom
add
and
adc
bound
fstps
aaa
mov
jne
push
dec
xor
lds
mov
mov
sub
mov
fldt
pop
push
subb
adc
inc
mov
sbb
popf
lcall
mov
mov
and
sti
xchg
leave
xchg
dec
add
nop
fisubrl
out
jg
pop
loop
xchg
mov
pop
loop
pop
mov
push
xorb
pop
test
inc
mov
rorb
inc
adc
add
sbb
add
and
fs
pop
test
mov
cmp
or
lea
insl
jmp
or
and
insb
xor
xchg
jle
test
inc
push
lods
pop
jbe
cmp
pop
adc
aaa
ffreep
jae
popa
mov
add
adc
add
les
repnz
neg
adc
add
push
test
xor
fwait
dec
push
or
jge
pop
dec
aaa
add
dec
jmp
repnz
pusha
loopne
adc
into
push
pop
and
subb
repz
imul
pop
lods
xchg
loop
sbbl
push
pop
pop
in
lods
fsubl
jg
cwtl
gs
lea
xor
xor
add
dec
cltd
mov
hlt
jb
xchg
incb
enter
ljmp
movsl
aas
outsl
mov
fsubrl
faddl
mov
add
insb
lods
pop
sti
movl
sbb
in
lret
nop
mov
xor
mov
adc
fidivs
mov
inc
dec
hlt
mov
push
pop
dec
sub
aaa
out
repz
iret
js
or
scas
repz
aaa
in
testl
ljmp
inc
dec
out
xchg
mov
fidivl
popf
dec
mov
or
jl
sahf
mov
mov
cli
insl
popf
cmpb
cmp
xorl
jmp
jmp
call
inc
sub
or
push
loope
and
test
jbe
xchg
ret
xlat
jecxz
or
sti
mov
jb
sub
or
mov
xchg
cmp
inc
cmp
dec
icebp
jb
push
imul
or
jmp
clc
sarl
mov
or
xorb
into
add
mov
push
xchg
inc
loop
cmp
orb
mov
xchg
sbb
and
andb
cld
loopne
push
stos
out
fistpll
sti
mov
and
inc
cmp
push
mov
mov
bound
add
xchg
subl
out
imul
movsb
je
adc
adc
mov
cmpsl
adc
pop
scas
sbb
sarb
bound
sub
dec
adc
movsl
mov
stos
add
push
or
mov
or
inc
int
sbb
out
xchg
iret
sub
lahf
movsb
xchg
mov
fistl
jae
dec
xchg
push
jmp
lock
scas
mov
movsl
inc
adc
sahf
pop
sbb
or
adcl
adc
movsb
push
or
or
out
add
int3
add
cmp
daa
mov
pop
mov
in
add
stos
int3
xor
push
sub
notb
ja
sbb
mov
sbb
cmp
stc
jne
adc
pusha
mov
daa
sbb
ror
idivb
arpl
pop
pop
sub
cwtl
or
jle
cmp
xchg
fbld
fistps
clc
decl
sbb
clc
std
js
and
inc
out
and
add
jmp
adc
push
mov
xchg
adc
cmp
add
out
mov
shl
xchg
xchg
mov
jnp
es
push
or
jnp
dec
neg
loopne
mov
lea
mov
bound
mov
fs
mov
sbbb
sub
test
data16
aaa
pop
mov
sar
xor
adc
jl
pop
push
and
sub
icebp
sbb
adc
sbb
leave
add
bound
or
and
cmpsb
lods
loop
lea
stc
loope
orl
cmovno
test
pop
loope
xlat
ficomps
adc
js
sbb
xchg
cmc
mov
aas
cmp
jne
lcall
inc
imul
and
pushf
jg
loop
pop
xchg
outsl
and
loopne
popf
jmp
fcmovnbe
pop
jo
cmp
popa
jl
ljmp
pusha
xor
test
lds
lret
scas
leave
xor
xchg
test
adc
movsb
sbb
inc
jb
sbb
addl
out
mov
test
inc
out
pop
jge
mov
mov
inc
test
inc
xlat
jne
mov
push
pop
xchg
xor
mov
in
divb
inc
inc
cwtl
cmp
and
jg
cmp
cmpsl
xor
ret
cld
ficomps
leave
ljmp
loopne
sbb
aas
xor
adc
popa
icebp
jmp
mov
or
int3
aas
movsb
sbb
mov
jle
mov
pusha
xlat
out
cltd
or
out
lock
mov
cwtl
lahf
lods
pop
dec
nop
mov
or
pop
fnstenv
mov
enter
push
loop
out
pop
xor
lods
cmpb
out
fldcw
push
test
jbe
adc
in
mov
xchg
loope
inc
sub
inc
pop
xchg
push
push
je
fwait
rorl
call
fdivrl
xchg
stos
ss
aam
test
cmpsb
adcb
mov
fwait
lods
push
pop
movsb
mov
mov
dec
jl
inc
fidivrs
mov
clc
orl
and
dec
add
aam
lret
xchg
sbb
loope
jnp
sub
mov
arpl
jne
and
test
enter
popf
pop
mov
cli
lahf
add
mov
pop
xchg
and
mov
pusha
adc
push
and
mov
mov
dec
mov
test
cmp
xchg
sub
lret
ss
ret
aaa
xchg
les
mov
mov
pusha
pushf
aam
aaa
pop
jle
and
mov
cltd
in
rorb
adc
lods
add
js
js
add
mov
mov
xor
jmp
cmp
std
stos
notl
inc
sbb
ss
xchg
inc
mov
push
rcrl
pop
jo
xchg
xor
xchg
sub
jmp
cmpsb
or
mov
add
test
xor
fildl
dec
inc
lret
lahf
js
xor
addb
cli
enter
sub
dec
mov
push
sbbl
inc
jge
rcl
xor
or
in
mov
xor
es
loope
push
push
icebp
push
das
inc
shrb
mov
sbb
jne
xchg
cli
mov
push
dec
pushf
and
flds
aaa
mov
sub
mov
sahf
add
stc
test
mov
cld
xchg
jb
ss
sub
add
aaa
cmp
in
insl
jnp
aad
ja
push
out
mov
gs
lock
lcall
movsb
fwait
cmp
mov
xchg
imul
popf
and
loop
stc
insl
nop
jg
fwait
inc
xor
pop
repz
test
sbb
jecxz
loope
pop
cltd
sti
dec
jbe
or
inc
lea
pop
jmp
sbb
out
lock
add
cwtl
icebp
mov
insl
fldt
iret
jmp
test
xor
es
movsl
or
js
imulb
cwtl
mov
dec
insb
pop
and
mov
adc
jp
mov
fucomip
push
test
sbb
rol
add
movsb
mov
xchg
sbb
push
loop
frstor
lock
repz
sbb
inc
jge
pop
add
je
inc
xchg
ror
sbb
icebp
aad
movsl
pop
xchg
out
jns
jl
add
mov
cmc
mov
insb
dec
push
pop
add
hlt
pushf
pop
xchg
cwtl
in
test
add
push
imul
adc
jge
test
leave
pop
test
sbb
gs
push
xchg
insl
in
mov
adc
leave
mov
repnz
mov
nop
inc
dec
shrd
fnstsw
inc
mov
mov
mov
adc
daa
mov
mov
mov
push
je
loop
jne
and
inc
shll
lcall
aas
lds
movsb
push
push
shrb
lods
sbb
dec
push
ja
lret
add
sbb
bound
lcall
adc
add
idivl
dec
in
inc
test
mov
mov
test
enter
push
xchg
in
mov
data16
pop
pop
cmp
std
mov
sub
ss
scas
fwait
xor
jmp
orb
pop
clc
adc
leave
push
mov
arpl
pop
sbb
jl
test
sti
push
cmpsl
pushf
fcmovne
xlat
xor
push
inc
pop
mov
jmp
pop
mov
dec
mov
ja
jecxz
xchg
cmp
nop
pop
jae
mov
dec
outsl
rcll
dec
sbb
push
adc
xlat
out
pop
test
fmull
mov
movsl
pop
push
dec
or
fwait
xchg
dec
sub
mov
ret
jae
dec
enter
fsubr
add
sub
aas
xlat
xchg
addps
dec
push
pop
cs
je
mov
scas
add
data16
subl
mov
mov
pop
and
call
push
jns
cmc
test
pop
lret
lock
xchg
pusha
out
push
inc
movsb
les
mov
add
inc
mov
ja
cmpsl
in
lock
fldl
add
int3
xor
test
stc
ds
test
addl
mov
ret
loop
mov
mov
cmp
mov
pop
icebp
mov
lea
inc
fdivrs
imulb
in
cmpsb
cmpsl
pop
sub
in
popa
dec
jne
scas
ss
stos
cmc
jg
in
scas
scas
jmp
mov
sbb
mov
jge
adc
pop
aas
cs
in
jl
loope
in
stos
xchg
xor
inc
andl
int3
idivl
pop
lcall
cld
clc
cmpsl
mov
stos
xchg
test
cs
adc
xorb
push
sbb
ds
pop
fbld
ja
dec
jmp
imul
adc
cltd
pop
out
daa
cmp
cld
jl
in
adc
inc
popf
fisubs
xchg
jae
clc
push
mov
mov
sub
push
jp
fistl
test
pop
outsb
cmp
push
and
int
jae
popa
out
std
jbe
mov
push
push
int
xchg
fsubl
ret
sub
dec
cmpsl
dec
mov
movsb
or
sub
dec
popf
sbb
js
push
addr16
out
mov
sbb
cmp
add
cmp
pop
cmp
cmp
fcoms
lret
push
push
dec
repz
inc
lret
xchg
mov
std
enter
xlat
and
and
bound
mov
addb
jbe
inc
cmp
or
mov
push
aaa
btc
jmp
int
mov
idivb
leave
mov
add
pop
jle
mov
pushl
cld
out
mov
repnz
out
stc
jge
outsb
test
test
adc
mov
stos
jge
sub
mov
mov
lahf
cmp
xor
or
push
bound
movsb
jae
xchg
jp
jns
jl
aam
ljmp
mov
adc
mov
or
xor
jmp
cmp
fwait
pop
mov
lock
and
jg
rcr
push
pop
mov
repz
sub
test
jg
shll
mov
into
mov
les
insb
lcall
pop
inc
bound
scas
popf
sub
adc
or
jno
mov
ret
jns
test
dec
ret
jl
jmp
mov
int
pop
dec
adc
xor
addr16
sbb
jecxz
xor
dec
ret
inc
aad
dec
fcomi
inc
arpl
in
jo
andl
jecxz
jbe
cld
push
ret
inc
je
cmp
sub
cmp
pop
fdivs
sbb
cld
pop
les
mov
fdivr
push
lcall
lds
sub
sbb
jno
aam
dec
movsb
imul
rcrb
sub
inc
shrb
inc
movsb
mov
insl
ja
adc
push
outsl
jb
loopne
fnstsw
and
stos
inc
mov
mov
fsubp
enter
in
jmp
out
in
push
loopne
sti
fwait
jge
cmp
out
push
xor
xor
pop
push
leave
fidivrl
ds
lret
and
out
test
mov
jns
adc
rorb
xchg
xlat
xchg
push
fcomp
cmpsl
jge
xor
jl
push
sar
and
icebp
divb
sahf
cmc
push
push
test
ja
das
jo
push
rcl
stos
mov
mov
xchg
lret
or
jns
aam
cli
or
and
mov
sub
dec
cmp
adc
das
push
shlb
in
aas
ds
mov
mov
mov
inc
xor
mov
enter
xchg
xchg
shlb
psraw
dec
lcall
sbb
push
pushf
repnz
xchg
push
and
or
repnz
repnz
rorb
jp
mov
jp
xlat
pop
xchg
pop
jge
test
fs
jnp
inc
pop
outsb
inc
pop
push
inc
mov
iret
cmp
pop
outsb
jne
sbb
inc
mov
adc
or
cmp
in
xchg
in
fsubr
mov
pop
and
push
repnz
pop
addr16
mov
sti
lods
xor
flds
fucomip
lret
and
adc
mov
inc
dec
addr16
pop
fcompl
push
add
xchg
sub
push
cmovne
cwtl
jmp
cld
dec
cli
mov
ljmp
les
push
sub
mov
push
adc
adcl
push
cmpsb
ficoms
push
dec
adc
lea
int
scas
sbb
sub
cld
incb
xor
ss
and
imul
nop
pushf
sbb
cmpsl
push
es
test
cmc
fdivr
stos
shlb
fwait
clc
xor
mov
push
mov
dec
lods
mov
xchg
scas
ficoml
add
inc
jbe
mulb
push
mov
mov
mov
sbb
sbb
lods
mov
mov
insl
and
jp
cltd
test
test
cmc
jmp
int
inc
adc
adc
mov
hlt
hlt
fwait
dec
xchg
test
or
mov
xor
cmp
xchg
inc
push
xchg
in
pop
jg
mov
adc
sub
sbb
xchg
aaa
outsb
imul
pop
mov
cmpsb
aam
inc
jns
sbb
or
sti
inc
or
pusha
repnz
faddl
nop
sbb
push
out
je
add
pop
aad
xchg
mov
push
sbb
mov
push
or
jae
push
mov
adc
repz
lea
nop
push
aad
sub
fwait
push
push
jecxz
dec
jnp
jo
xor
outsl
and
xchg
movl
outsl
mov
fiadds
lods
inc
push
movsl
ret
inc
loopne
dec
scas
sub
or
cmp
push
in
decb
lcall
pushf
iret
mov
xchg
jns
mov
jmp
popf
test
push
jno
das
mov
lcall
movsl
in
rcrl
mov
icebp
cmp
out
mov
push
std
scas
pop
pop
repz
leave
mov
popf
pop
inc
dec
mov
icebp
inc
mov
repz
flds
push
inc
pop
adc
cmpsl
jmp
pop
sahf
aaa
cmpsl
in
hlt
insb
sarl
jg
lahf
aad
iret
mov
dec
jbe
mov
pop
rcll
aas
aad
dec
lds
fldt
push
lds
pop
sarb
mov
add
bound
push
adc
push
repnz
add
out
add
mov
lods
pop
jnp
mov
nop
fwait
adc
dec
sub
sti
jge
xor
fdivs
das
cld
jno
mov
and
sbb
int3
mov
mov
xchg
push
aad
mov
loopne
adc
lds
insl
test
cmp
push
mov
sarl
xor
or
push
mov
addr16
movsl
dec
jl
jo
mov
jmp
mov
ljmp
and
mov
clc
hlt
add
and
mov
out
cmpsb
adc
out
scas
dec
xchg
in
bound
adc
and
mov
sub
mov
out
ja
setae
mov
dec
inc
xchg
ss
fstpl
pop
push
push
push
mov
popa
inc
leave
scas
and
or
mov
popa
dec
test
mov
xchg
mov
mov
cltd
xor
into
or
cmp
in
sub
hlt
or
push
hlt
mul
pop
mov
cs
sub
into
xchg
xchg
pop
mov
ss
sub
movsl
push
jecxz
scas
mov
mov
repz
dec
add
aad
and
cmpsl
shr
push
dec
add
mov
dec
bound
stos
sbb
dec
clc
mov
cmp
add
lea
sarl
inc
xchg
add
aam
xchg
cwtl
mov
jmp
in
sbb
test
xorl
push
cli
pop
xor
dec
mov
cmp
cld
pop
sub
sti
mov
or
xchg
or
lds
fmull
outsb
incl
nop
xchg
push
mov
leave
cmp
mov
js
or
mov
lods
scas
roll
dec
cmp
addl
mov
push
lods
cld
shll
push
sti
out
xchg
aad
fnsave
sbb
negb
push
fnsave
dec
add
test
mov
hlt
inc
leave
rcrb
orb
pop
adc
sahf
mov
lods
sbbb
iret
cmp
addr16
daa
js
push
xchg
adc
mov
fwait
lret
and
fistps
ljmp
aaa
xchg
jmp
loop
adc
or
insl
sbb
and
inc
pop
adc
stos
push
das
mov
cmp
push
add
scas
mov
xchg
int3
mov
iret
into
sbb
push
in
push
sub
fisubrs
pop
push
scas
fdivrl
add
mov
negl
mov
xor
rorl
jmp
cmp
xchg
or
inc
pop
fwait
out
fsubrs
stc
xchg
inc
jp
or
pop
rorl
mov
adc
dec
inc
dec
outsb
nop
adc
imul
fmull
fcompl
cld
outsb
cs
ja
xchg
sbb
lds
out
inc
inc
paddsw
in
sar
adc
ss
dec
sbb
ds
xchg
std
fwait
shl
lods
jo
jmp
xor
or
mov
sub
push
imul
hlt
shrl
lcall
push
insb
jmp
in
push
add
pushf
add
outsl
push
and
push
adc
sbb
inc
adc
hlt
sti
add
lock
inc
fdivrp
push
pop
test
fs
mov
fcoml
cmp
pop
insl
shrl
adc
sub
fisttps
insl
xor
sub
repz
and
jb
leave
lret
xchg
inc
inc
stos
in
in
bound
pop
jmp
jns
push
rorl
out
loop
scas
pop
mov
daa
jp
lret
sub
loope
sarl
insb
ret
push
sti
xchg
ret
sub
add
sbbl
pxor
mov
es
cmpsb
sbb
pop
pop
pop
out
fwait
rolb
inc
enter
or
mov
test
es
push
sbb
dec
sub
daa
sbb
xor
push
test
incl
mov
test
pop
cmp
or
pop
out
or
in
out
pop
loop
and
cli
add
out
pop
xchg
maxps
mov
loop
jb
fsincos
stos
xchg
add
clc
pop
push
arpl
loop
std
pop
adc
push
jle
dec
push
cmc
xlat
movsl
daa
inc
pop
sbb
test
cmp
dec
cltd
or
movsl
gs
mov
and
fnsetpm(287
mov
xchg
in
out
jp
and
jecxz
cmpsl
jae
jge
mov
call
enter
stos
mov
jbe
sub
ficoml
loop
je
lret
dec
pusha
incl
xchg
xor
sub
addr16
or
data16
mov
pop
lahf
xchg
or
arpl
xchg
sbb
sub
lret
std
ret
mov
mov
call
pop
jle
out
mov
maxps
add
outsb
mov
mov
divb
bound
jnp
sub
iret
icebp
das
or
mov
push
or
insb
and
hlt
cmpsb
sbb
dec
gs
mov
inc
pop
fsubrl
xlat
and
and
subl
shrl
pop
push
out
jbe
and
adc
mov
pop
push
scas
rcrb
jbe
mov
mov
lea
in
iret
and
jp
mov
mov
jb
xchg
repnz
mov
and
and
jp
lods
in
cwtl
xor
rcrl
xchg
cmpl
push
xor
scas
sub
imul
dec
pop
inc
mov
insb
or
sti
cmp
inc
sub
test
std
pusha
push
push
cmpb
rclb
sbb
scas
push
lret
jns
lea
pop
lds
subb
and
add
inc
ja
dec
jle
mov
push
and
add
sahf
popa
loope
es
imul
enter
cmp
xlat
ljmp
push
lret
xchg
mov
pop
loope
push
ja
in
push
fcomps
mov
sub
lret
sub
loop
adc
insb
pop
int
clc
inc
pop
imul
jecxz
add
jmp
scas
outsb
push
stos
jo
arpl
push
cmp
xor
xchg
mov
xlat
push
fsubrs
jns
sbb
cmc
cld
xchg
cmp
test
clc
mov
xchg
int
js
cmp
jns
das
mov
jg
mov
push
xlat
cmp
pusha
je
dec
fcomps
add
mov
or
cmp
aad
or
pop
sbb
add
popf
sti
inc
arpl
pop
or
lds
pop
ret
dec
fistpll
fildll
andb
in
mov
cli
mov
loope
lcall
lret
mov
fwait
insl
dec
jnp
sbb
mov
xor
push
dec
push
jecxz
sub
in
mov
ljmp
test
inc
pop
push
dec
int3
push
mov
out
jl
jns
notb
jnp
clc
and
mov
inc
pop
mov
pop
lods
push
outsl
sbbl
sub
addl
and
and
ljmp
mov
cmc
divb
dec
xor
push
enter
pop
jmp
sahf
dec
push
bound
je
xchg
cmpsl
cmp
or
fdivrl
sub
mov
mov
or
pop
imul
pop
sub
xchg
adc
cmp
andnps
data16
push
data16
dec
loope
sbb
inc
sti
repz
popf
in
push
popf
jnp
xor
lods
es
xlat
das
sarl
inc
cli
fstpt
dec
and
push
mov
add
pop
push
add
out
decl
movsb
outsl
loop
xorl
add
pop
sbb
ficoml
jp
test
push
sub
cmp
jns
test
sbb
fmull
icebp
mov
inc
jbe
and
lds
or
and
lds
test
ljmp
aad
sbb
ljmp
test
xor
xchg
lahf
es
mov
int3
mov
pop
lret
add
add
inc
aas
mov
clc
jp
push
popa
jmp
sub
test
jnp
repz
ficoml
bound
or
jecxz
iret
out
mov
pusha
xor
or
inc
cli
in
loope
pop
dec
pop
sbb
xchg
add
adc
subl
xchg
fsubl
jg
adc
sub
pop
cwtl
insl
cld
jns
rclb
sub
outsl
loop
and
and
jp
pop
add
stc
int3
sub
adc
pop
push
sub
pop
dec
cltd
lahf
hlt
std
negb
sahf
or
sub
adc
addr16
call
sub
mov
add
adc
inc
repz
cmp
and
add
icebp
adc
push
pop
push
cmpl
cmpsl
jl
insl
jecxz
sub
cmp
popf
pop
das
fyl2x
js
lock
fsts
adc
lcall
scas
lods
leave
cmp
xor
adc
xchg
jbe
dec
fcmovnbe
mov
call
leave
dec
and
jmp
push
jg
imul
gs
inc
and
mov
dec
xchg
dec
sub
cs
insl
insl
jge
xor
push
mov
and
enter
sar
cs
jge
cmp
cld
jge
push
xchg
mov
jne
insb
mov
xchg
mov
repnz
out
push
jnp
inc
xlat
jmp
xor
xchg
adc
sbb
sub
sub
dec
call
fs
out
xchg
jbe
fcmovne
mov
add
fildll
fdivs
in
daa
jle
inc
sahf
rolb
stc
mov
lret
cmp
lds
sbb
dec
and
add
jno
jg
xor
ja
xor
fucom
mov
inc
out
xor
outsb
fisttpl
xchg
test
scas
pop
pop
sbb
cld
push
sub
mov
inc
xchg
shl
pop
pop
iret
xor
adc
jp
je
inc
out
xchg
lahf
sbbl
lcall
pop
int
and
xor
mov
or
fs
fisubrl
arpl
aas
inc
rorl
xchg
cmp
mov
jl
push
in
into
push
sarb
mov
xlat
ss
subb
mov
insl
xor
push
jg
add
or
sub
fdivp
iret
stos
dec
std
adc
imul
mov
cltd
gs
and
movsl
into
sub
pop
or
cld
sahf
cs
std
in
cltd
outsb
dec
mov
fstl
mov
pop
xchg
or
popf
mov
mov
mov
pop
fcmovnb
stc
mov
cwtl
xorl
or
rcrl
pop
and
or
ja
mov
into
cmpsb
add
xchg
imul
push
test
dec
out
inc
gs
mov
push
mov
sbb
mov
lods
sub
add
add
xor
sahf
movsl
lods
mov
pop
jmp
xor
mov
addr16
ret
gs
mov
fmull
mov
out
jbe
mov
call
jecxz
ror
sar
sbb
push
inc
add
out
xor
out
cmp
and
inc
lret
dec
or
mov
mov
lods
outsl
imul
fisubs
imul
rcr
add
cmp
adcb
add
inc
push
jno
push
mov
sbbl
dec
xchg
push
inc
cmpsb
adc
cmp
inc
jg
mov
pop
sub
je
std
pop
shll
adc
add
movsl
mov
sbb
aad
sbb
sub
sub
mov
lock
push
stc
fyl2xp1
movsl
sbb
mov
push
sbbl
mov
cmpsl
mov
pushf
and
mov
sub
sub
xor
sbbb
sbb
in
xor
lock
gs
testb
push
out
add
sub
das
pushf
scas
push
sbb
sbb
mov
mov
add
xor
pop
fildl
or
mov
test
ret
sti
xor
xchg
pop
adc
add
aam
mov
int3
push
and
ret
data16
add
lods
movsb
ficoms
push
adc
adcl
nop
popf
insl
out
dec
jmp
aad
stos
xor
cmp
insb
jg
mov
jbe
movsb
lods
sti
gs
jnp
cmp
outsb
out
test
mov
loopne
or
sub
mov
leave
mov
sub
iret
dec
pop
int
mov
pop
pushf
jno
dec
sbb
int3
imul
mov
jne
push
inc
sarb
arpl
xchg
dec
add
out
sarb
std
in
xchg
or
push
frstor
aas
jns
and
adc
iret
xchg
push
cmp
push
icebp
daa
aas
scas
test
fidivs
movsl
popa
adc
lds
inc
addr16
call
rclb
adc
xchg
inc
inc
push
dec
pop
dec
and
push
inc
xor
jmp
xorb
jle
scas
enter
data16
lds
fstpt
notb
or
xor
je
lods
aaa
call
xchg
sbb
test
stc
bound
mov
add
add
cmp
mov
sbb
stc
popa
mulb
cmovp
add
daa
sbb
test
cltd
sarb
push
add
ss
push
scas
push
out
mov
or
aas
inc
pop
jno
outsb
daa
and
outsb
adc
negb
mov
mov
enter
dec
jmp
fisubs
mov
std
into
pop
jae
add
pop
incb
mov
mov
xor
fnstcw
sarl
dec
jg
fwait
mov
push
popf
or
or
cltd
jns
repnz
enter
call
jne
popa
adc
inc
and
or
mov
jae
and
in
cs
testl
scas
loope
jne
adc
jp
mov
mov
subl
or
pop
push
pop
movsb
scas
xchg
add
push
outsb
lahf
and
sub
rolb
mov
mov
jnp
xor
aas
cmp
vcvtpd2psy
pop
pusha
add
xor
or
call
dec
xor
sbb
cmc
sbb
fisttps
into
jle
lods
aam
xchg
xchg
dec
pop
xorb
inc
loope
pop
pop
add
movsl
cmpsb
add
xlat
jg
rcrb
fnstenv
mov
out
xor
push
subb
jecxz
getsec
in
insb
sub
push
dec
imul
or
stos
sbb
cmp
xchg
frstor
push
popl
inc
mov
xchg
dec
jb
stos
cmpsl
ret
jae
mov
insl
jae
popf
push
cwtl
lds
cmp
sti
leave
add
and
sub
jo
imul
dec
adc
ffree
rolb
mov
sub
xchg
loop
leave
std
xor
lahf
push
dec
mov
xor
sbb
popf
les
mov
mov
outsl
xchg
and
mov
mov
shrb
inc
out
mov
sub
mov
lock
mov
add
arpl
jns
mov
inc
jl
mov
addr16
push
and
adc
xlat
pop
lret
mov
xor
clc
fimuls
jns
mov
jecxz
out
lret
add
daa
sbb
inc
test
adcb
and
cwtl
pushf
push
push
push
test
fdivr
icebp
mov
xchg
out
cli
fwait
xchg
repnz
and
cmp
ret
sahf
mov
test
pop
mov
xchg
lea
xchg
out
or
fistpl
popf
stos
ret
jno
lret
dec
fadds
stc
dec
scas
xchg
cmp
cmc
mov
in
jb
or
mov
mov
js
or
nop
inc
lret
jno
xchg
in
repnz
add
mov
mov
sub
dec
jb
enter
jno
scas
testb
xchg
mov
inc
dec
mov
push
fimuls
add
and
jmp
outsl
mov
jne
or
add
or
and
movsl
pushf
cmp
push
aam
inc
add
imul
insb
fstpl
adc
popa
mov
and
test
add
mov
push
push
push
fimull
lods
stos
jl
inc
push
enter
lock
test
push
cmp
sbb
mov
inc
jle
mov
cmp
aas
sbb
inc
lret
rcll
xchg
rcr
sar
les
pop
push
test
int
daa
les
lods
repnz
add
inc
mov
pop
int3
mov
das
mov
inc
mov
or
xor
mov
or
out
jno
lret
ljmp
sbb
les
arpl
test
inc
data16
lods
jae
or
addr16
push
push
mov
pop
inc
flds
xor
push
fs
fbld
ljmp
jae
test
pop
dec
pop
outsb
push
loope
mov
and
incb
jg
sub
scas
bnd
xlat
sbb
shll
mov
movsl
dec
lods
sub
cmpsl
loopne
jmp
xchg
ljmp
shll
nop
pop
lea
pop
push
or
pop
jge
push
sbb
sahf
outsb
mov
int
scas
arpl
xchg
mov
jb
and
loope
push
adc
jge
mov
push
shl
arpl
or
mov
pop
and
addr16
jle
sbb
xchg
in
dec
out
lea
in
fsubrl
fisttpl
add
cwtl
adc
or
jp
addr16
xchg
sbb
dec
dec
out
movsl
pop
ret
ds
popl
mov
mov
int3
or
call
es
iret
cmpsb
pop
loop
in
lcall
movsb
cmpsb
sub
stos
iret
and
mov
dec
mov
test
daa
push
fwait
movsb
and
dec
mov
aaa
adcb
loope
aad
dec
cmpsl
fcompp
inc
jb
push
cmp
daa
ds
aad
sbbb
loop
jp
add
rclb
insl
sub
mov
icebp
lock
in
stos
rep
fcomip
popf
inc
insl
and
adc
test
aas
and
aas
and
out
lods
mov
repz
mov
mov
insl
mov
dec
frstor
lods
add
sahf
ss
dec
das
lcall
jo
push
js
test
add
fstp
inc
ret
fstpl
sarl
xlat
sbb
jo
adc
stos
cmp
push
xor
push
xlat
stos
mov
mov
push
mov
lahf
js
push
jb
add
gs
fidivrl
pop
jle
insl
nop
add
testb
push
jb
jnp
inc
popa
add
or
mov
imul
std
jge
add
dec
nop
orl
mov
mov
cmpsl
mov
rolb
popa
xchg
sbb
jne
push
inc
mov
rcrb
sahf
movsl
lds
adc
sti
dec
iret
enter
pop
adcb
movsb
stos
or
scas
mov
cli
mov
outsl
hlt
rorb
dec
cmc
inc
les
movsb
mov
jno
dec
adc
or
in
mov
fstl
pop
ss
stos
sbb
test
mov
scas
ret
test
addl
adc
jmp
dec
mov
add
subb
add
in
sbb
stc
cmp
clc
loop
mov
and
xor
mov
outsb
cmp
mov
cmp
loopne
scas
xchg
sbb
mov
fistpl
rolb
call
add
sub
inc
jge
int3
mov
bt
leave
out
fwait
cmp
mov
pop
lea
iret
in
nop
mov
std
jae
adc
mov
sub
xchg
add
repz
lret
dec
jae
push
lock
jno
movsl
popf
dec
aad
mov
sub
div
xchg
das
enter
icebp
mov
sarl
jae
je
add
jle
hlt
ja
stos
pop
xchg
dec
adc
mov
les
xchg
pop
mov
lret
xchg
and
test
mov
mov
xchg
or
idivl
dec
loop
ficomps
rolb
cmp
cmp
dec
mov
ss
mov
lea
xchg
push
adc
mov
sbb
mov
jg
das
push
sbb
adc
addb
popf
mov
dec
or
jecxz
xor
jbe
repz
icebp
add
push
ljmp
enter
std
test
cld
insl
sbbl
mov
and
push
repz
xor
jmp
call
push
cmp
mov
cmp
lds
push
mov
fiadds
arpl
stc
xchg
mov
loop
or
mov
outsb
add
inc
add
addb
dec
pop
sar
test
stos
pop
inc
mov
cmpl
mov
cmp
leave
push
das
stos
in
xchg
push
movsb
jle
mov
les
adc
fcoms
push
sbb
push
xchg
mov
sub
jb
popa
pop
pop
mov
pop
mov
push
outsl
roll
insl
jecxz
pushf
in
fmuls
xchg
ret
pop
pop
shr
jmp
push
daa
xor
mov
mov
inc
cmpsl
adc
mov
inc
rol
jmp
add
out
pop
ret
out
inc
fs
xchg
stos
pop
fwait
pop
lea
inc
adc
mov
sbb
int
stos
or
jl
cmp
aam
filds
ds
jecxz
cwtl
arpl
jle
andl
cmp
clc
pop
xor
iret
cmp
shl
or
xchg
fwait
test
loopne
filds
sub
xor
xchg
cli
loope,pn
lahf
enter
and
jno
aad
jge
mov
xchg
lds
sbb
mov
xchg
sahf
inc
sti
aad
stos
push
mov
std
xchg
cli
bound
mov
cltd
cmp
cmp
pop
cmp
dec
mov
mov
sub
shll
aas
inc
or
sbb
or
and
pop
add
outsl
cld
or
mov
sti
std
scas
nop
ja
cmpsl
inc
stos
inc
mov
ja
es
sbb
or
lret
push
lret
addl
in
arpl
rcll
pusha
pop
sbb
std
mov
jecxz
int3
and
pusha
dec
inc
sbb
xor
movb
pusha
add
jns
pop
sbb
movsb
cli
loope
push
add
in
push
mov
out
outsl
imul
outsb
ljmp
lods
xchg
sbb
ret
test
and
cmc
add
add
jmp
sub
fcmovb
inc
call
ja
movsl
and
xor
push
sbb
pusha
js
add
and
dec
adc
in
sub
inc
std
jne
lock
dec
jmp
mov
shr
push
outsl
loope
cmp
loope
std
dec
movsb
xchg
xchg
cmp
les
inc
dec
push
and
xchg
push
jle
adc
inc
mov
add
or
test
stc
iret
lret
pop
fstpt
iret
push
sub
sbb
scas
cmp
jmp
in
imul
cmp
aam
cli
out
push
mov
inc
jae
inc
mov
pop
pop
pop
jns
cmpsb
adc
pop
lcall
pushf
sbb
pop
data16
adc
xlat
out
and
pop
jmp
add
mov
in
inc
xchg
dec
lods
rorb
outsb
mov
sbb
ds
sahf
xchg
subb
fs
inc
mov
inc
cmp
xchg
jge
bswap
jmp
xchg
lret
mov
xlat
xor
xor
cmpsl
adc
aam
pop
mov
lret
loop
xor
rcrb
enter
and
fadds
ss
inc
mov
add
aas
adc
popa
outsb
mov
cmp
dec
das
enter
test
ficoms
pop
adc
out
stos
aaa
shl
push
jge
loop
rcr
in
xchg
fdivs
dec
mov
sahf
cmpsb
iret
les
add
cmpsb
xchg
xchg
pusha
test
push
cmpsb
aad
xor
mov
xor
sub
add
subb
loope
imul
pop
inc
mov
je
movsb
adc
ja
cmp
shrl
clc
lock
xchg
sbb
aas
add
aaa
cmpsb
xor
inc
scas
lock
cli
ss
adc
mov
clc
or
stos
jp
adc
jg
jecxz
mov
mov
inc
test
das
scas
ror
jg
inc
pop
cmpsb
lret
addr16
xchg
cmpsb
cmpsl
scas
aas
jns
cmp
andb
fdivs
rcr
mov
cmpsb
fwait
adc
mov
iret
mov
jle
dec
ljmp
ret
jle
lret
mov
out
adc
sub
or
aam
mov
fucomp
jbe
adc
ret
mov
in
movsl
mov
pop
and
stc
enter
pop
add
sbb
and
les
data16
dec
or
cmp
jno
sbb
inc
popa
jb
pop
clc
ret
clc
adc
dec
xchg
call
mov
aad
dec
ss
shlb
jnp
jno
dec
cwtl
adc
sub
mov
and
sti
sub
test
jnp
or
jb
push
test
test
stc
bnd
cmp
push
cmp
mov
and
push
pop
cmpsl
test
les
push
xlat
stos
rcrl
jge
push
adc
test
xchg
mov
mov
rclb
jne
xchg
out
imul
sahf
stos
xchg
mov
mov
or
fsubrp
push
rolb
dec
jle
sbb
dec
adc
ja
movsb
mov
ss
paddd
dec
add
daa
neg
push
nop
icebp
mov
pop
cld
sub
mov
mov
sbb
jl
push
loop
out
cltd
cmp
pop
ds
in
add
pop
add
dec
jl
stos
test
inc
mov
xchg
sbb
insl
xor
ss
loope
inc
fisubrl
sbb
lcall
push
or
cmc
dec
adc
daa
neg
push
aam
xlat
pusha
lea
jl
arpl
fmul
mov
out
popa
sbb
push
mov
bt
test
dec
sahf
inc
insb
sub
pushf
ret
push
sbb
pop
jmp
pop
inc
inc
xchg
sti
js
mov
inc
scas
add
push
fisubs
test
adc
inc
movsl
jge
pop
mov
push
addl
xorb
aas
imul
cld
xor
rcrl
mov
push
ror
push
out
or
aaa
sbb
sub
les
insb
push
repz
xchg
in
movsl
lock
rclb
repnz
dec
stos
in
xchg
jno
cmp
rclb
inc
lds
lods
in
inc
bound
mov
xor
sbb
gs
push
push
xlat
jnp
loope
jns
mov
leave
call
test
cmpsb
cld
fs
jle
jge
aam
insb
cmp
out
cmp
xor
sub
cltd
psrld
xor
sbb
cmp
dec
popf
mov
add
and
xchg
sbb
sub
sbb
mov
mov
xchg
cmp
mov
sahf
adc
test
bound
pop
add
lds
adc
aam
and
das
pop
inc
sahf
in
inc
jecxz
mov
and
inc
push
lcall
dec
clc
and
pop
cmpsl
pop
lret
pop
fsubp
in
cmp
pop
dec
adc
push
lahf
js
inc
xor
mov
sti
jns
lcall
dec
lds
js
rcr
mov
addr16
sub
push
rcr
insl
ljmp
popf
dec
int
pop
mov
mov
sbbl
out
push
fcmovnbe
dec
adc
and
xor
call
or
std
ss
insb
and
and
mov
or
mov
adc
adc
test
adc
mov
scas
lret
gs
cmp
pop
inc
adc
mov
sahf
mov
lahf
push
pushf
gs
lds
fidivrs
movsl
jno
iret
packuswb
push
push
movsb
xor
daa
je
sbb
xor
lcall
cwtl
je
sub
xor
insb
imul
ret
data16
movsb
std
sub
repz
jle
lods
movsb
scas
imul
cltd
dec
dec
cmpsl
sub
mov
cmp
leave
push
notl
aad
cmp
fisttpl
dec
dec
loop
inc
pop
sbb
xor
cmp
jne
aaa
mov
xlat
pop
xchg
push
adc
and
push
sbb
fldcw
sub
dec
push
sub
mov
sbb
and
int3
jle
adc
mov
xor
add
ret
mov
push
fdivp
adc
rorb
icebp
arpl
mov
inc
push
cmpsb
cld
jnp
xchg
ret
dec
ss
imul
xchg
sbb
loop
mov
push
push
or
sbb
push
jbe
ss
pusha
mov
push
pop
cmp
pop
lret
add
out
testl
cs
out
sub
xlat
es
or
popa
dec
jg
pop
int3
push
mov
int3
dec
icebp
sbb
mov
in
inc
mov
in
push
lahf
dec
fdivl
dec
xor
jns
xchg
dec
pusha
movsl
loope
jmp
out
jle
divl
sbb
xchg
hlt
push
roll
cmpsl
in
xchg
pop
pop
jmp
bound
inc
mov
cs
out
cmp
loopne
loop
jnp
fwait
cwtl
lea
enter
out
movsb
je
cmpl
testl
mov
xchg
inc
loope
dec
push
jge
aas
pop
sbb
or
lret
mov
sbb
daa
lret
inc
cmp
test
sti
mov
hlt
ret
das
lds
lret
xchg
jge
sub
lods
pop
jecxz
jle
je
pop
sub
sbb
and
ret
pop
mov
test
xor
sbb
dec
cmp
popa
or
inc
jmp
cmp
mov
fcom
pop
fwait
cltd
sub
adcb
adc
inc
pop
loopne
or
aam
fnstsw
je
loope
lock
ljmp
push
mov
cmp
movsb
scas
cmp
jecxz
or
insb
xchg
stc
loopne
push
cs
dec
push
xchg
adc
jae
xchg
loop
nop
xlat
out
jo
xchg
mov
lods
mov
bound
lret
xor
jp
adc
xchg
push
cmc
fdiv
repz
clc
out
jge
aam
pop
notb
je
nop
push
sub
cld
jno
cmp
push
cmp
test
cmp
jge
sub
mov
push
xchg
inc
std
jno
stos
imul
dec
xchg
xor
cmc
mov
add
movsb
loopne
xchg
mov
aaa
add
mov
xchg
mov
jg
jg
loopne
aad
aas
cli
cs
movsl
sub
das
js
push
sahf
inc
xor
mov
inc
cli
mov
cmp
sbb
mov
sahf
sbb
jecxz
xor
add
loopne
sbb
push
cli
in
dec
cli
pusha
in
jmp
push
cmp
jo
jl
ljmp
push
aaa
jge
jnp
inc
aaa
out
push
jb
sub
icebp
inc
aad
xor
pusha
test
rclb
xlat
mov
cmp
xchg
fstps
outsl
fcomp
in
shr
lds
add
cmpsb
push
pop
iret
jecxz
pop
push
inc
clc
cmp
data16
fcomps
cmp
push
mov
in
jmp
xchg
cmp
fimuls
inc
rcrl
loop
mov
pop
fucom
test
adc
xlat
xor
mov
jne
cwtl
aaa
sub
sbb
in
repnz
test
movsl
xor
dec
aad
or
pop
test
mov
cmp
sub
mov
and
mov
adc
popa
ficomps
jmp
lods
rolb
rol
adc
xchg
insl
push
pop
inc
push
mov
fildll
in
adc
push
cmp
cld
xor
cmp
xor
mov
ss
xchg
je
mov
mov
xchg
and
fistl
adc
getsec
xchg
push
pop
or
inc
jl
les
je
rcrl
adc
imul
icebp
fldcw
mov
mov
stos
pop
sbb
mov
sbb
inc
out
cmp
frstor
stos
fdiv
test
fwait
sub
sub
test
inc
movsl
mov
cltd
push
inc
pop
xor
int3
sub
and
xchg
adc
test
mov
mov
mov
mov
adc
popf
gs
hlt
cmp
repz
jnp
jl
call
sub
jae
mov
jno
outsl
and
fisubrs
pop
mov
or
mov
sarl
push
cld
scas
popa
cltd
sub
mov
xor
mov
and
shll
int
or
inc
or
or
add
ds
or
testb
rol
pop
cmp
mov
pop
or
fwait
cwtl
adc
fwait
push
roll
sbb
push
lods
movsl
push
jmp
dec
scas
sbb
mov
mov
sbb
in
aad
push
out
pushf
mov
gs
jae
and
iret
fnstcw
mov
fwait
outsl
out
add
adc
inc
sub
out
jne
dec
push
and
dec
test
jo,pt
rorb
dec
lahf
dec
imul
add
jb
outsl
dec
popf
inc
repnz
cs
aad
in
out
sub
xchg
out
movsb
icebp
into
xchg
pop
sub
add
popf
bound
int3
cmp
cmc
sbb
xor
sahf
dec
rcrb
lret
out
daa
rcll
mov
outsw
addr16
dec
jle
lock
mov
adcl
sbb
inc
loop
and
mov
dec
lods
push
out
das
aam
stos
pop
add
je
push
push
adc
mov
fdivs
xlat
into
stc
outsb
scas
std
xchg
pop
popf
seta
ds
cli
pop
lock
in
ja
sub
test
ljmp
adc
js
mov
daa
out
pop
push
pop
and
das
cmp
lahf
ja
loopne
pop
jns
lahf
addb
ror
cmpl
shrl
mov
clc
mov
jbe
jbe
xorl
cmc
push
jg
in
push
jecxz
gs
nop
pop
call
push
cmp
out
out
jbe
ljmp
movsl
mov
loope
or
push
andl
iret
jecxz
mov
iret
dec
stos
add
cld
dec
sahf
mov
xor
aaa
jl
scas
fldenv
sti
pop
icebp
cmpsl
mov
xchg
movsb
out
mov
dec
cmpsb
in
mov
jns
jmp
xchg
inc
ds
or
stc
jecxz
or
out
out
test
in
es
stos
cmp
outsb
xor
sbb
fwait
push
insb
mov
pop
mov
push
jae
pop
lea
xor
insl
cmp
sbb
in
ficompl
fwait
add
cmp
into
mov
cmp
ljmp
pushf
roll
dec
push
fmuls
sub
push
int
xchg
mov
inc
add
adc
aaa
add
loopne
into
jns
aad
enter
clc
movsb
dec
jns
repnz
testl
arpl
lahf
sarb
mov
inc
iret
add
push
mov
sub
scas
aam
in
inc
jmp
imul
sarb
clc
pop
add
xor
and
dec
inc
dec
fwait
mov
dec
in
or
cmpl
loop
xchg
test
xchg
xor
push
mov
leave
lock
mov
adc
es
cmpl
add
pop
aad
xor
adc
cmc
in
pop
push
mov
dec
sbb
ja
aaa
lahf
daa
sbb
jge
cltd
and
jnp
mov
push
rolb
jno
mov
adc
testw
cmp
fucomip
sub
iret
enter
scas
xor
test
addb
fnstcw
ret
rclb
xchg
ja
ja
sbb
xor
xor
insb
shr
push
pusha
and
or
insl
movsb
pop
negl
fstpt
push
sbb
movsl
jne
xor
push
loope
out
cmp
push
decb
cmc
movsl
arpl
mov
jnp
add
mov
cmpsb
fsubrl
rol
mov
in
xor
push
or
add
sbb
in
push
addr16
xchg
mov
sbb
imul
xchg
and
cmp
call
sbb
adc
jg
xor
inc
fldcw
inc
int3
bound
ss
testl
std
shlb
add
int3
fstpl
nop
in
pushf
push
inc
adc
jle
cmpl
lahf
mov
sub
inc
nop
pop
pop
les
push
sub
int
sbb
aam
ror
or
sarb
or
data16
mov
jmp
ljmp
hlt
insl
gs
mov
or
xor
add
in
test
adc
ja
inc
test
push
adcb
insb
repz
xor
cld
cmp
pop
jg
jge
out
movsb
sbb
jnp
sti
std
ret
loop
test
sbb
mov
out
and
fstl
call
in
add
test
push
push
fcoml
dec
mov
push
xchg
test
and
leave
sbb
push
stos
popa
xchg
sub
outsb
cwtl
mov
jbe
push
stos
lret
inc
sbb
jo
ds
mov
mov
jp
ficoml
test
push
mov
scas
aaa
ljmp
fs
add
mov
dec
int
sbb
scas
popfw
cmp
loopne
or
jns
sbb
dec
push
cltd
stos
add
pop
mov
xchg
sti
lock
sub
mov
loop
cltd
xor
roll
addb
cmpl
imul
inc
adc
ret
sti
dec
mov
jne
push
sahf
push
inc
pop
push
sahf
int3
sbbb
scas
idivl
push
mov
adc
int3
mov
jmp
stos
xor
jge
inc
add
in
scas
dec
inc
idiv
xchg
pusha
push
cmp
shll
ficoml
adc
stos
or
aad
fisttps
mov
scas
cmp
lock
leave
mov
mov
cmp
int
adc
fstpl
hlt
sub
xor
add
ret
inc
in
jecxz
sbb
pop
adc
xchg
jne
pusha
xchg
xchg
dec
mov
sbb
stos
dec
jae
push
lahf
jmp
rcrb
call
xor
add
in
cmpsl
dec
cmp
lds
mov
cwtl
scas
dec
cmp
lock
xchg
mov
cmp
cli
sbb
lods
js
xor
mov
sbb
inc
or
mov
arpl
fxtract
dec
int
xchg
pop
cs
js
test
mov
or
sub
in
mov
stc
add
loopne
xchg
pop
xchg
fstp
add
jnp
aas
sbb
repnz
loope
jl
stos
inc
je
add
mov
mov
pop
adc
mov
xchg
cmp
jnp
lds
movsl
movsl
mov
mov
mov
jmp
repz
sub
mov
inc
fistpll
lods
xchg
adc
call
es
inc
jg
sbb
sbb
mov
jmp
pop
ds
movsl
ljmp
sbb
sbb
jbe
push
data16
pop
cmpsl
pusha
cmp
stos
jno
dec
cmp
sbb
les
leave
xchg
mov
outsl
xchg
nop
jo
or
test
repz
mov
popa
popf
xor
adc
stos
sbb
push
cmp
dec
or
or
xor
mov
xchg
das
jbe
sub
int3
jns
sub
outsl
out
jns
pop
pop
cmp
mov
scas
or
std
lahf
push
mov
pop
loope
outsl
movsb
mov
pushf
push
andb
mov
fsubrs
sbb
xchg
push
adc
aaa
jns
cmp
fs
in
and
ss
and
stc
jecxz
in
push
lahf
push
xor
mov
shl
scas
bound
out
mov
sub
ds
mov
scas
mov
jl
inc
cmp
in
sti
mov
adc
add
dec
movsl
lahf
or
inc
arpl
mov
stos
mov
pop
cmpsb
mov
lcall
dec
xor
lds
loopne
jnp
test
test
sbb
nop
adc
ds
mov
mov
adc
movsl
push
jb
clc
jle
jno
pop
mov
out
mov
repz
enter
or
or
add
das
jb
insl
cld
mov
xchg
or
pusha
pop
adc
dec
xor
and
jmp
fbld
div
lds
push
push
es
mov
lock
iret
sub
mov
pop
pop
outsb
mov
fiaddl
or
stos
mov
loopne
sub
cmp
subb
roll
adc
aam
test
jnp
cwtl
out
dec
push
test
icebp
mov
xchg
add
orl
ret
clc
pop
sub
inc
mov
cmpl
pop
or
repnz
out
inc
push
and
sub
dec
rorb
fstpl
out
and
pop
xchg
test
and
ss
adc
rol
es
mov
fisubl
lahf
jmp
pop
pop
add
jge
incb
cmpsb
pop
jl
lret
sbb
imul
lea
test
adc
lret
cmp
or
int3
jmp
mov
xchg
add
fcoms
sarl
add
lahf
mov
xorl
dec
stos
push
jnp
mov
shlb
imul
cmc
fists
pop
add
mov
fisubrl
insb
fcmovbe
hlt
xchg
mov
mov
aad
sub
push
mov
ss
bound
cmp
jne
mov
pushf
fsts
xchg
test
or
mov
cld
sub
cld
rorb
jno
popa
adc
popa
notl
jbe
push
mov
pop
xchg
arpl
fadds
mov
adc
mov
cmpsb
mov
jmp
cmp
ret
cmp
sbb
nop
sbb
push
cs
pop
in
xchg
sub
jb
cwtl
and
dec
and
dec
cmp
test
pop
and
cld
pop
loope
jge
div
lock
lock
adc
adc
inc
jbe
jns
add
mov
adc
aad
out
shll
xchg
xchg
adc
dec
das
es
mov
mov
lcall
adc
dec
push
xchg
repz
sti
push
push
cs
lea
pop
insb
nop
ljmp
sub
add
mov
inc
lcall
mov
sarb
mov
jb
pop
dec
jg
imul
adc
dec
or
wbinvd
inc
fsts
or
loope
orb
jmp
add
fcoms
mov
pavgb
mov
or
das
sbbl
mov
enter
repnz
mov
push
mov
or
stos
mov
loopne
repnz
jbe
jg
mov
aad
push
into
sbb
psubsw
mov
arpl
inc
sbb
mov
mov
inc
or
xor
pop
je
sbb
lea
sub
cs
pushf
aaa
or
testb
loope
sbb
add
dec
fwait
in
and
push
cmp
rcrb
xchg
and
test
inc
nop
dec
jl
cmc
dec
fs
rcrl
sbb
iret
mov
mov
hlt
push
push
test
lods
jmp
mov
pop
clc
mov
cmpsb
mov
addr16
xor
out
dec
out
les
cmp
insb
and
jl
repnz
cli
xchg
sbb
std
mov
cmp
inc
push
aam
lahf
int3
adc
iret
sti
fwait
dec
jg
and
lock
out
addr16
clc
out
xchg
outsl
or
cwtl
ret
mov
xchg
xor
and
mov
arpl
xchg
sbb
ror
fimuls
dec
mov
push
cmp
sub
pop
mov
xchg
daa
sahf
es
iret
outsb
lock
mov
fs
push
xor
or
add
js
mov
add
xor
pop
jb
or
scas
pop
idiv
ret
pop
jo
xor
cmp
mov
ret
inc
adc
shll
xchg
std
addr16
sub
popf
mov
pop
cwtl
cmp
call
or
xor
jne
mov
xchg
cwtl
lds
jge
movsb
mov
cld
mov
and
int3
mov
push
pop
cld
flds
shll
mov
in
ficoml
lret
aas
and
sbb
xchg
sbb
in
mov
out
repz
inc
orl
sarb
sbbb
lahf
aaa
jnp
cmp
fldcw
iret
in
pop
dec
dec
insb
xor
ss
ja
lods
push
push
int
cmpl
cmpsl
inc
pcmpeqb
icebp
jno
jb
mov
hlt
jo
adc
rcr
ljmp
mov
pop
shll
sub
movsb
mov
xor
mov
mov
lret
jnp
jmp
cmp
sbb
adc
dec
out
addr16
xor
sub
in
mov
mov
jle
fadds
cmp
xchg
stos
xchg
mov
arpl
sahf
insl
lret
fwait
mov
nop
divb
push
daa
int
lea
testb
addl
xchg
add
js
lds
ljmp
xchg
jmp
es
sbb
cmp
cli
scas
push
cmp
ss
aaa
push
mov
jmp
nop
gs
daa
movsl
dec
cmpsl
cmc
xor
aad
push
pop
sbb
push
inc
xchg
or
lahf
push
adc
in
sbb
test
xchg
movsl
int3
xlat
and
aaa
jo
mov
xor
mov
repnz
sti
xlat
sarl
aas
mov
insl
incb
fwait
inc
add
stos
cmp
jmp
add
lds
int3
in
cli
or
ss
shr
sub
dec
in
cmp
pop
or
in
dec
cmc
out
imul
cli
sub
pop
pop
orl
pop
cmp
aam
scas
adc
dec
push
mov
pop
add
fcoms
mov
dec
push
rcll
inc
jmp
adc
out
push
xchg
ljmp
jle
pop
pop
jo
in
inc
imul
lret
cmp
add
sub
cli
rcr
adc
in
sub
pop
jecxz
pop
push
aaa
decb
push
ss
fcmovne
sub
adc
inc
loop
aas
inc
add
mov
sbb
outsl
dec
sbb
or
adc
fildl
filds
fsubs
fnsave
test
fildl
lahf
popa
jg
dec
and
push
adc
clc
xchg
dec
xchg
lds
cmp
lods
in
cmp
cmpsl
int
sarl
lea
aad
and
xor
cltd
mov
daa
jb
inc
daa
or
scas
jmp
dec
in
and
add
pop
cmp
leave
repz
jbe
stos
xchg
addr16
dec
add
pop
push
aad
fs
pop
scas
sub
loop
mov
loope
es
imul
adc
add
sbb
addr16
jb
pop
xchg
fbld
data16
shl
pop
mov
mov
inc
mov
pushf
sbb
sti
sarb
lret
loope
in
and
or
mov
lret
mov
cld
sub
shr
call
das
aad
data16
in
xchg
pop
or
push
pop
mov
cmp
adc
aam
sarb
xchg
movsb
out
sti
jno
mov
fwait
shll
orl
cmc
inc
xchg
lret
sbb
dec
lds
mov
inc
xchg
add
dec
aas
sbb
xchg
sub
fs
push
and
ljmp
mov
dec
aaa
sbb
cwtl
aas
sub
inc
jno
shlb
imul
pop
mov
aaa
nop
or
or
cmp
cmp
push
lcall
repz
sbb
shr
mov
imulb
int3
inc
inc
cmp
pop
inc
loop
lcall
mov
loop
push
shrb
inc
and
sub
jne
xor
dec
mov
lods
inc
lods
and
jp
test
sbb
lret
lcall
mov
jo
das
aaa
or
add
inc
cmp
imul
inc
pop
cld
jmp
repz
fs
ss
jmp
sbb
xchg
jne
pop
mov
mov
insl
sub
loopne
sar
fdiv
adc
in
divb
sub
jbe
dec
push
jl
pop
scas
jo
pop
push
sbbb
test
pushl
js
bnd
out
dec
push
aaa
dec
cmc
sbb
sub
push
sbb
movsb
sbb
cmc
cmp
or
mov
cmp
mov
jle
jno
jmp
ds
inc
pushf
xchg
mov
inc
jo
sub
xchg
sti
push
fidivl
icebp
sub
icebp
fldenv
dec
pop
mov
cwtl
loope
test
pop
dec
sti
inc
inc
pop
xchg
ficomps
sbb
mov
and
push
pop
dec
sub
jne
xchg
mov
gs
jl
xor
orl
sti
mov
aam
sbb
sbb
outsb
out
jno
cmp
aad
js
sub
xchg
and
mov
or
mov
test
je
js
imul
jne
dec
scas
jmp
sub
mov
adc
cmp
cltd
push
sbb
pop
fsub
pop
ljmp
loop
xchg
dec
insl
call
jb
cwtl
cs
aad
es
popa
call
inc
mov
rclb
int3
mov
cmp
sub
out
popa
out
xchg
jno
mov
sub
clc
add
scas
stc
xor
lods
pop
frstor
cwtl
mov
adc
arpl
pushf
push
pop
dec
mov
cmp
adc
shr
push
imul
test
insb
xchg
repz
sub
pop
test
imul
lods
ret
insl
insb
sbb
mov
dec
hlt
scas
add
sub
stc
xchg
loop
jb
mov
push
mov
daa
mov
pop
jo
push
mov
sbb
or
in
push
mov
cld
and
dec
add
mov
or
jmp
dec
aam
add
movsl
adc
cmp
call
aam
pop
adc
daa
xchg
pop
shlb
add
icebp
pop
cli
fwait
lret
pop
dec
clc
mov
mov
dec
cld
das
cmp
je
jl
in
lahf
mov
nop
add
fs
cld
xchg
pop
std
fldcw
pop
cli
fldt
xchg
jnp
movl
mov
ret
dec
faddp
ss
fisttps
das
popf
stc
cltd
sbb
stc
sahf
mov
out
lcall
cmp
std
es
aad
add
dec
movsl
sbbb
xor
xchg
mov
lods
test
sbb
xchg
daa
mov
test
cltd
ret
mov
pushf
mov
fadd
or
and
shrb
dec
ret
cmp
js
addr16
cmc
pop
or
mov
sahf
mov
or
movsb
jae
popf
adcb
ret
sub
mov
or
pusha
mov
add
pusha
pop
shlb
xor
adc
jp
loope
or
and
cmp
in
aaa
lret
iret
inc
push
push
mov
pop
test
sub
test
adc
sti
jp
rolb
xchg
test
push
cld
or
in
jmp
mov
mov
xor
lahf
cmpsb
imul
aad
mov
bound
fisttpl
mov
xor
repnz
int3
sbb
cmc
mov
divl
jge
arpl
int
sbb
xor
add
sub
les
dec
mov
push
xchg
cli
fsubrs
pop
gs
mov
jl
loop
add
xlat
adc
fldenv
int
mov
pop
xchg
xchg
test
ss
and
xor
mov
mov
mov
call
rclb
cld
aad
mov
or
test
xchg
xor
icebp
shll
mov
jl
jmp
scas
out
insl
push
popa
push
fisubrl
fcomps
dec
jecxz
nop
sbbl
cmc
xor
js
dec
cmp
daa
jle
add
jg
xchg
mov
cwtl
xlat
or
mov
xabort
push
jno
inc
loopne
fmuls
fcompl
dec
inc
ljmp
lds
mov
push
outsl
mov
xor
pushf
hlt
push
aas
seta
mov
test
adcl
sub
daa
add
sbb
movsb
lret
cltd
jl
cmc
adc
pop
jo
sub
push
addb
es
jo
icebp
add
jb
les
fdivl
ja
jl
lret
and
or
out
xchg
push
add
add
lahf
or
add
jae
cwtl
sbbb
mov
cmp
sbbb
sub
sbb
outsb
mov
jbe
xchg
push
into
inc
repnz
fnsave
push
mov
insl
mov
test
jnp
mov
lcall
into
inc
adc
mov
outsl
xlat
in
mov
daa
jb
jno
xchg
sub
xor
adc
mov
iret
push
jle
lock
mov
xor
ljmp
push
mov
jne
inc
sahf
hlt
jge
cs
in
ja
add
inc
shll
xor
data16
arpl
mov
xchg
pop
mov
xchg
aad
cltd
mov
aas
pop
leave
mov
xor
xor
adc
mov
pop
cmp
and
lds
in
push
addr16
inc
adc
inc
sub
add
sbb
fwait
ror
and
divb
test
mov
inc
mov
ja
movsb
pushf
xor
and
sub
aad
mov
ficomps
inc
mov
adc
or
mov
mov
xorb
hlt
mov
iret
ds
out
mov
or
cltd
out
incb
jae
nop
mov
jb
ds
call
ja
mov
or
out
cmpsb
or
dec
rorb
xchg
adc
inc
das
and
xchg
sbb
scas
aaa
dec
jg
cmp
nop
daa
mov
or
adcb
scas
roll
or
or
xor
jo
in
adc
push
mov
and
add
aad
xlat
loopne
sbb
mov
cmp
cmc
repnz
xor
xlat
divl
xorb
lret
cltd
push
rep
aad
in
ds
cmp
out
inc
movsl
add
dec
fldt
in
add
jg
mov
mov
xor
imul
stc
jnp
outsb
sbb
sub
sar
fimuls
push
cltd
test
and
out
xchg
sti
enter
ss
hlt
dec
in
xor
in
and
xchg
ret
or
mov
in
push
jne
mov
mov
adc
pop
rorl
jno
inc
inc
inc
xor
dec
pop
mov
cmc
jno
das
sub
shll
and
push
mov
and
add
out
jno
sub
lods
cmpsl
jne
inc
dec
inc
push
pusha
add
imul
lret
iret
sbb
add
loope
mov
push
adc
cmpsl
out
cmc
in
out
or
cmpl
jae
inc
rol
or
push
sub
dec
insl
sbb
shll
pop
addl
pop
cli
jmp
movsl
test
dec
mov
gs
sbb
mov
xor
cltd
inc
push
test
btsl
fsubrp
fstps
leave
into
stos
mov
rcll
stos
fdivp
ljmp
hlt
sbb
lea
mov
cmc
add
or
lods
imul
sub
outsl
mov
or
dec
neg
lea
lret
aam
test
mov
xchg
jnp
out
scas
sub
cs
inc
les
and
push
sbb
push
movsb
inc
sbb
cli
or
inc
pushf
je
jnp
push
mov
roll
sub
mov
outsw
shlb
out
dec
mov
test
and
out
dec
adc
test
sbb
cmp
les
pop
dec
add
les
movsl
xor
lods
jg
cmpsb
pop
mov
mov
outsl
mov
js
push
jae
mov
add
repnz
xchg
mov
push
pop
icebp
mov
lret
repnz
fcoml
fcoml
outsl
mul
dec
notb
lret
mov
scas
jbe
xchg
mov
push
fcompl
inc
loope
push
push
or
push
fyl2x
andb
dec
mov
mov
adc
add
out
pop
mov
mov
in
aad
xchg
or
call
mov
inc
rolb
mov
mov
fstpt
inc
xchg
or
lock
mov
ljmp
jge
jb
loope
push
sub
push
xor
pop
xchg
repz
xchg
sub
mov
sbb
cmp
jno
add
sub
push
jae
mov
mov
insb
arpl
jmp
ror
jb
dec
out
sbb
fisttpl
dec
and
sar
gs
insl
lcall
stos
push
xchg
or
inc
sahf
lcall
xor
cmpsb
cmp
outsb
push
or
jle
cmc
lcall
ror
push
movsb
fs
and
aaa
mov
add
xchg
sub
es
mov
lcall
mov
sbb
div
xor
cmpsb
xchg
sti
xchg
testl
jg
sti
push
push
adc
js
pop
stos
repnz
sti
cmp
shll
sbb
mov
lahf
push
adc
jmp
inc
xchg
loop
sub
outsl
and
das
jae
jp
movsl
pop
js
push
fiaddl
test
icebp
push
hlt
lock
inc
sbb
mov
xchg
mov
jmp
movsl
push
test
jb
or
push
push
inc
ljmp
dec
cmp
pop
test
mov
sti
or
call
sub
jne
jge
shr
fldenv
push
addr16
mov
insb
jge
lret
mov
mov
ret
pop
loope
rcrl
movsl
inc
pop
xchg
jge
dec
test
xor
sbb
and
dec
or
sub
jne
inc
mulb
rol
inc
pop
push
cmp
pop
adc
push
int3
repnz
add
mov
pop
fdivl
ds
test
pop
js
cwtl
xchg
dec
pop
or
jae
mov
cmp
aas
insb
adc
sbb
enter
push
in
nop
push
les
int
inc
pop
rclb
push
arpl
adcl
adc
loop
mov
xchg
ret
mov
push
in
cmc
fldenv
push
fdivs
sbb
enter
xchg
xor
xchg
frstor
xchg
mov
fcmove
outsl
dec
fs
ja
lea
xchg
add
inc
jo
jle
rolb
add
in
lea
xor
push
xchg
and
movsb
lock
mov
mov
mov
cli
dec
or
mov
add
test
or
push
adc
xchg
push
mov
pop
test
sub
adc
stos
mov
gs
out
and
repz
or
outsl
in
mov
xchg
adc
inc
arpl
push
aas
in
xchg
inc
mov
add
jnp
sarl
or
sbb
sub
shrl
mov
cmp
rorl
mov
push
jo
notb
xchg
mov
imul
or
pop
mov
rolb
jnp
aaa
xchg
sbb
mov
bnd
ret
push
lahf
push
fisubrl
adc
pop
xor
mov
mov
aad
push
jo
stos
in
push
cmp
mov
arpl
mov
lahf
push
aas
lret
pushf
int
aad
or
decl
inc
je
jl
andl
jecxz
adc
mov
out
or
mov
pop
dec
mov
in
mov
jg
add
into
and
lods
inc
dec
cmp
adc
jmp
outsb
ss
push
shlb
mov
mov
add
ja
mov
daa
sahf
dec
mov
repnz
lahf
or
out
add
jne
xor
dec
push
push
inc
dec
mov
adc
hlt
xor
daa
adc
mov
xchg
insl
cmp
aas
les
nopl
pop
cld
adc
xor
fldenv
jbe
add
out
push
cmp
mov
xchg
dec
repz
cmpsb
popf
sbb
icebp
or
xchg
mov
testl
subb
cmc
xchg
jae
jmp
cld
sti
ss
sbb
fldt
fidivrs
hlt
data16
ret
pop
or
pop
xor
xchg
fnstenv
sahf
in
xor
pop
adc
mov
lret
stos
pop
sub
scas
es
or
dec
icebp
mov
mov
sub
cmp
arpl
stc
fists
out
cli
jae
ret
cmp
adc
int
pop
jp
sbbl
ds
orb
and
xchg
out
sbb
fldenv
inc
lahf
dec
mov
and
xlat
je
out
insl
mov
jbe
sbb
jmp
sbb
insl
fbld
fwait
jle
jecxz
lcall
repnz
lock
jno
xor
andb
outsb
adc
out
sbb
dec
mov
and
cmc
aas
add
jno
add
popf
movsb
rol
dec
imul
mov
pop
dec
xchg
mov
in
stos
loop
and
xor
jbe
and
imul
cld
push
jecxz
pop
adc
sarb
cwtl
jl
jne
in
and
pop
inc
sub
out
sbb
mov
clc
mov
mov
in
inc
repz
mov
sbb
push
cmp
mov
shrl
movsb
imul
mov
rclb
cmp
sahf
pcmpeqb
xchg
jnp
cwtl
icebp
pop
lret
or
cmp
int3
fdivrl
pop
dec
lret
cmc
test
int
mov
lods
int
pop
or
lret
mov
rclb
mov
adc
orl
xor
jmp
outsb
cmp
sub
or
or
push
mov
mov
inc
and
adc
ljmp
inc
dec
jo
xlat
and
testb
dec
lock
dec
mov
mov
cli
imul
mov
adc
or
add
cmpsl
inc
inc
lret
fsub
sub
js
push
mov
xor
ja
fs
mov
popf
cs
push
jp
pusha
xor
mov
sub
jmp
shrl
jge
lea
adc
inc
jmp
lret
ficoml
das
fdivrl
in
ret
mov
xchg
xor
adc
pop
pop
clc
icebp
aaa
xchg
and
iret
or
inc
loope
lock
outsl
pop
addr16
dec
adc
movsb
scas
psubusb
cltd
xor
aaa
fcomp
out
push
movsb
cli
lret
mov
imul
fs
nop
insb
inc
xor
dec
lock
xchg
lret
dec
mov
sbb
adc
inc
addr16
inc
push
jp
cmp
xlat
mov
push
outsl
sbbl
inc
nop
ss
adc
sbb
xchg
add
sbbl
adc
inc
mov
cs
aad
inc
dec
xchg
lret
or
int
xchg
pop
pusha
mov
mov
xor
inc
mov
xchg
je
out
xchg
dec
xor
push
popa
les
sbb
adc
jns
cmp
lret
call
pushf
mov
leave
mov
loopne
sub
jge
lds
cmc
std
lret
loopne
mov
mov
and
and
or
lods
arpl
pop
addb
xchg
cmp
inc
mov
push
movl
imul
aaa
or
test
loope
aaa
push
sub
push
add
or
push
jg
add
inc
out
sub
jle
leave
call
push
dec
mov
fstl
mov
rcrl
mov
sub
insl
mov
xor
pop
mov
sbb
subb
stc
aam
mov
ss
sarb
lret
out
push
insb
in
cli
cld
lods
mov
rcrb
add
sbb
cs
scas
orl
mov
mov
insb
in
lock
adc
pop
adc
stos
push
cmp
imul
cli
jns
xchg
lods
push
push
or
in
jg
movsl
in
pop
and
fstpt
jle
push
dec
push
out
dec
adc
mov
mov
xchg
pop
jge
rol
sub
or
out
push
arpl
aaa
mov
push
add
mov
inc
fs
xchg
xchg
cmp
cmp
sbb
test
inc
xlat
in
push
mov
filds
test
test
sti
movsl
shl
lcall
mov
jmp
fimuls
movsb
add
add
dec
push
int
pop
out
push
inc
arpl
xor
lret
inc
rcr
inc
cmc
push
jg
cld
js
out
xchg
push
imul
push
lds
ret
arpl
and
mov
push
fsub
inc
pop
gs
push
pop
xlat
cmpsb
ss
pop
cmp
mov
dec
and
call
pop
mov
mov
js
jl
dec
pop
insb
jmp
lcall
out
mov
lds
xor
fsubs
je
in
lcall
imul
leave
xlat
add
sbb
popf
data16
xor
orb
in
push
in
cmp
scas
mov
pop
and
pop
add
cmp
jmp
add
mov
or
add
bswap
and
ja
jl
jnp
inc
pushf
test
aas
cli
scas
mov
loopne
call
push
inc
sti
iret
seto
and
movsl
cmpsl
ficompl
repz
mov
data16
sarl
dec
in
int
int
ret
les
insb
pop
jmp
mov
inc
and
sbb
cmp
mov
in
and
cltd
or
les
dec
bound
mov
jns
inc
andl
jne
dec
cltd
or
jnp
sbb
ret
mov
scas
pop
adc
sub
aad
pop
and
cmpsb
adc
fs
push
cld
add
mov
xor
or
sahf
mov
inc
sar
push
adc
jne
sbb
fcomp
cmpb
and
or
iret
scas
cmpsb
flds
xor
add
fimull
pop
sbb
imul
lock
pop
movsb
pusha
in
icebp
dec
arpl
xchg
fldcw
out
mov
les
gs
lods
xor
xor
mov
iret
jae
inc
push
xor
inc
xor
ret
inc
sti
push
sbb
jo
or
pop
stc
mov
ds
test
or
adc
add
test
aam
mov
sbb
in
and
in
or
mov
sbb
out
sub
sub
adc
sbb
push
jl
andb
in
pop
adc
jb
add
jae
sub
jmp
aam
dec
loop
dec
push
pop
in
mov
sbb
scas
mov
jno
push
pop
das
rolb
xor
push
cmpsl
fs
das
mov
xchg
pop
test
dec
mov
es
clc
xchg
mov
cmc
fisubrs
adc
imul
les
jecxz
loop
lds
cs
testb
and
adc
test
cmp
xor
loop
lcall
dec
sbb
dec
xlat
xchg
lret
sub
xchg
sbb
daa
mov
ljmp
cltd
aad
mov
push
mov
cmp
mov
bswap
cmp
loopne
and
adc
pop
jle
mov
adc
mov
push
in
push
or
insb
scas
inc
add
fs
dec
cmpsb
mov
adc
aaa
push
les
outsb
movsb
adc
push
xchg
adc
mov
out
lods
pushl
pushf
xor
or
orl
aas
into
rcrb
insl
gs
dec
idivb
sub
xor
jnp
fidivrs
sahf
lret
inc
movsl
push
pop
jg
cmp
test
stos
mov
pop
int
inc
adc
mov
aad
add
mov
pushf
inc
xlat
into
jecxz
in
push
mov
ljmp
dec
jbe
aaa
movsl
out
outsl
aas
xor
ljmp
andb
divb
cmp
in
dec
mov
aaa
fwait
sbb
push
stos
or
sti
adc
mov
aad
jbe
shlb
orb
dec
popa
cmpb
lret
pop
jge
insl
leave
add
in
ja
call
es
test
out
inc
cmc
xchg
lret
dec
in
inc
into
test
clc
dec
and
xchg
mov
mov
dec
add
stc
fwait
and
mov
mul
test
xchg
ds
add
cmpsl
xor
xor
push
out
sub
shrb
jnp
rcl
pop
xor
out
jp
dec
xchg
scas
scas
jo
cmp
mov
fcoms
jbe
in
int
push
insb
cmpsl
shlb
lods
mov
adc
andl
fsubrs
inc
fbstp
pop
mov
xchg
mov
pop
or
xor
fwait
in
mov
mov
outsb
xchg
lcall
imul
les
cmp
jge
xor
pop
and
jl
inc
cld
adc
cmp
std
sub
push
mov
xchg
xchg
inc
mov
das
cmc
mov
cmp
sbb
jne
mov
scas
lds
sbb
mov
jns
cmp
mov
inc
imul
xor
lods
mov
gs
and
sub
adcb
aas
fld
jg
cwtl
divl
adc
sub
jp
movsb
xchg
sub
cmp
cwtl
test
mov
outsl
add
dec
movsl
add
movsl
push
inc
jge
hlt
lods
dec
or
cmp
sub
sarl
sbb
cltd
xchg
inc
dec
cld
xchg
test
adc
iret
pushf
jp
jae
xor
pop
inc
mov
ret
xchg
push
in
mov
popa
mov
iret
pop
stos
mov
or
xchg
loop
push
add
inc
stos
loop
repnz
jne
mov
cmp
ds
out
push
pop
insb
push
dec
xor
fs
in
push
xchg
xchg
cmp
in
dec
mov
or
mov
push
mov
lcall
xor
or
addr16
ss
lea
das
insl
push
xor
out
cmp
movsb
imul
scas
imul
push
cmp
mov
sbb
lods
shr
lock
int
jbe
out
adc
in
cmp
dec
jb
pop
add
inc
mov
sbb
aam
push
iret
sub
sub
out
insl
shlb
xor
dec
mov
push
imul
inc
lods
scas
add
arpl
xchg
jmp
adc
push
out
and
enter
clc
dec
js
cltd
sahf
push
scas
adc
inc
sbb
cmp
mov
cli
sahf
sub
xor
push
cltd
or
loope
mov
and
mov
repz
leave
push
xchg
pop
aas
das
std
jae
mov
mov
out
push
mov
popf
add
push
pop
mov
dec
icebp
jge
int
sahf
data16
mov
cmpsl
stos
repz
mov
mov
and
and
mov
fisubrl
mov
stos
es
lods
call
scas
in
imul
lahf
insl
mov
sahf
mov
jne
xchg
fstpt
sbb
xchg
les
repnz
inc
pushf
xor
test
dec
cmp
dec
cmp
jmp
xchg
push
mov
cmp
fimuls
jns
test
xchg
das
mov
cmp
daa
test
mov
cmpsl
inc
and
xchg
clc
and
jg
xor
je
int3
add
out
stos
xchg
xchg
xchg
sbb
loop
push
sbb
sbb
cld
sti
xchg
jnp
iret
es
comiss
mov
ret
pop
cs
dec
jmp
jno
xor
and
xor
iret
mov
xchg
push
inc
inc
xchg
test
xchg
cmp
pop
lret
mov
ds
jp
sbb
pop
pop
xor
es
inc
fwait
sahf
xor
lcall
int
pop
lds
sbb
pop
loope
lods
jbe
enter
xchg
sbbl
shll
ret
cmpl
sbb
loopne
insb
test
daa
divl
jecxz
dec
jo
nop
cmc
ds
leave
fadd
xor
sub
jbe
or
push
lret
pop
popa
ret
pop
xchg
add
sub
add
and
mov
ret
pmullw
mov
push
shl
mov
addr16
stos
loopne
jae
clc
sub
fisttpll
divl
jl
mov
testb
jecxz
inc
cs
and
insl
cltd
jmp
mov
push
out
mov
insb
ja
aaa
push
xlat
xor
das
ja
cmc
mov
push
jl
shr
shrb
xor
jo
pusha
call
mov
es
sub
xor
insl
xchg
and
mov
or
ds
pop
jle
mov
dec
fnstenv
push
jo
push
test
push
lea
xor
out
push
clc
mov
push
mov
pop
loop
out
ljmp
lods
int
ret
or
fcomp
jmp
roll
bound
sbb
scas
xchg
loopne
pop
out
jge
and
shlb
and
mov
rorb
or
inc
push
jns
mov
das
ljmp
pushf
mov
mov
scas
repnz
outsl
add
inc
shrl
scas
ljmp
icebp
pop
adc
mov
cltd
rorl
test
lret
mov
fwait
ljmp
jb
sub
aas
es
pushl
jg
jecxz
mov
mov
mov
movsb
cmpl
das
pop
aad
jae
xlat
cli
je
dec
rcrl
mov
xchg
cmp
inc
and
int3
jecxz
pop
dec
dec
mov
push
mov
pop
vmovsd
stos
sbb
and
addr16
shlb
cld
mov
xchg
xchg
adc
enter
cmp
inc
lods
stc
fistpl
dec
pop
into
xor
xor
shll
cmp
adc
shrl
sbb
adc
mov
cmp
adc
sbb
dec
cmp
cmpsb
inc
out
cmp
jo
out
ret
in
lods
in
inc
punpckhdq
aad
xor
or
shl
repnz
and
mov
fistpl
jl
jne
lcall
fildl
jbe
mov
in
das
mov
add
call
mov
cmp
mov
xor
jnp
ja
gs
sbb
lret
aaa
jp
out
adc
cmpb
lds
push
sbb
or
dec
dec
ja
loopne
add
arpl
sbb
or
pushf
mov
icebp
sub
test
in
or
lods
push
xchg
dec
movups
inc
pop
mov
mov
push
xor
mov
cmpsb
jmp
push
mov
jmp
and
mov
add
in
fcoml
lret
xchg
or
rcll
xchg
xor
jno
push
mov
loopne
mov
push
adc
aam
les
add
pop
push
idiv
jnp
aam
jmp
adc
inc
jne
daa
mov
pop
les
addr16
sbb
shr
enter
shlb
lret
adc
ficomps
jmp
nop
out
mov
add
inc
jle
cwtl
sbb
sbb
adc
mov
mov
fdivrs
xchg
push
mov
cmc
cwtl
imul
and
in
int
inc
adc
orl
jl
lods
outsl
xchg
jg
cmp
jb
pop
inc
mov
ret
je
icebp
les
lock
fcoml
aam
and
inc
ja
repnz
xchg
sub
outsb
xchg
mov
nop
test
add
stos
cmpsl
mov
enter
jg
mov
dec
loopne
ret
push
push
cmpb
cmp
cmp
cmp
mov
int
cwtl
ja
ret
stos
push
les
adc
daa
jecxz
dec
loope
les
lcall
push
xchg
xchg
mov
and
jbe
rclb
cmp
mov
push
add
xchg
loopne
imul
sbb
adc
sbb
cmp
les
push
jg
jns
xor
jmp
xlat
mov
jg
sbb
jecxz
mov
or
mov
popa
adc
lea
ret
in
jg
ja
add
xor
dec
sbb
lcall
jne
dec
and
fimuls
sbbb
push
test
ljmp
add
repz
push
dec
sub
xchg
or
sub
fstps
sbb
mov
repnz
popf
mov
mov
sub
xchg
or
nop
pop
adc
dec
aaa
mov
leave
push
mov
jb
cli
lock
das
xor
inc
jp
mov
mov
xor
mov
mov
idivl
cli
std
ja
xchg
dec
mov
fwait
in
or
or
lea
inc
pop
je
mov
jg
mov
adc
mov
jle
xchg
fnstenv
pop
sbb
stos
nop
in
push
jno
in
movsb
test
adc
es
xchg
xor
cmp
xor
xchg
in
das
sbbb
insl
call
dec
cld
out
push
lahf
cmp
xchg
dec
shlb
or
and
cmp
loope
fmuls
and
jb
scas
out
mov
loope
ret
in
insl
testb
push
cli
sbb
push
xchg
pop
clc
xchg
lods
stos
jbe
add
mov
pushf
cmp
insb
insl
sub
xlat
adc
sub
cwtl
loopne
xchg
push
sbb
sub
in
out
pop
and
aam
jbe
jb
mov
test
jnp
dec
adc
jecxz
cmp
adc
fnstsw
addr16
bound
pop
inc
xor
mov
jns
jmp
and
jo
rcl
cmp
cmp
mov
rcrl
cltd
cld
outsb
xlat
clc
inc
fimull
mov
mov
inc
mov
adc
in
arpl
mov
mov
aad
andl
pop
pop
mov
stos
adc
in
jecxz
shrb
aaa
xchg
push
aaa
mov
xchg
mov
mov
orl
pop
or
cli
adc
es
fists
sti
pusha
cwtl
insl
cmpsb
xlat
fisttps
sbb
lds
enter
pusha
and
icebp
adcb
sbb
push
add
mov
pop
cmpsb
ret
and
sub
incb
pop
push
scas
leave
push
aaa
cli
pop
iret
mov
push
sub
jae
test
pop
or
imul
pushl
mov
je
aaa
repz
clc
jl
repnz
pusha
sbb
push
pop
push
neg
add
lods
sub
shl
mov
test
cmp
sbb
sarl
add
iret
sub
xchg
arpl
jne
mov
adc
dec
mov
jae
aam
mov
xlat
jo
add
adc
out
xchg
lret
or
neg
dec
std
push
ret
cmp
lds
stc
and
shll
pushf
cmpsl
cmp
mov
ja
and
addl
pop
adc
push
enter
mov
sub
pop
mov
je
data16
and
push
cs
aam
mov
je
filds
test
fildll
popf
sarb
and
cmpsl
andl
arpl
xchg
out
or
push
icebp
clc
lcall
sbb
jl
mov
arpl
dec
nop
lods
sub
clc
sub
mov
adc
adc
loop
icebp
shr
and
mov
sbb
mov
cmp
shlb
fcomi
shlb
icebp
cmp
ds
daa
imul
sbb
ss
jmp
dec
dec
dec
es
in
mov
in
out
push
out
dec
push
xor
stos
dec
sub
push
inc
xor
add
shll
jmp
mov
adc
test
mov
cmp
popa
sbb
push
cmp
push
aas
add
sub
sub
mov
push
or
stos
pop
adc
ljmp
mov
and
xchg
sbb
lds
pop
add
xchg
scas
sub
mov
fisttps
push
jmp
sub
push
sahf
jmp
or
mov
rolb
xor
mov
add
push
negl
outsb
shlb
stos
mov
bnd
scas
fiaddl
mov
pop
lret
jecxz
rol
loopne
cmp
adc
sub
dec
xor
sbb
fs
mov
call
jecxz
xor
addr16
lods
rcr
inc
sub
mov
mov
pushf
mov
jo
push
lods
or
add
adc
ja
sub
mov
fs
mov
mov
adc
cmp
ret
push
fcomip
pop
imul
jle
and
shl
call
int3
out
sub
push
adc
xlat
lock
lret
enter
addr16
test
lds
sub
mov
or
jb
add
imul
pop
push
clc
push
scas
ds
cmp
push
jmp
mulb
jecxz
xchg
cld
mov
cwtl
call
push
mov
dec
jecxz
jns
add
push
addr16
std
incb
lahf
pop
mov
mov
push
jb
cs
add
jne
iret
xlat
inc
sbb
int
and
test
pop
pushf
mov
pop
mov
jb
and
es
int3
loopne
outsb
or
jmp
lods
or
xchg
mov
push
lds
in
pushf
push
sub
sub
repz
sbb
add
sbb
ja
sub
cmc
repnz
push
jl
outsl
imull
pop
push
mov
aas
enter
or
xlat
test
pushf
lock
imul
ljmp
push
dec
jge
lods
sbb
push
xor
int
xchg
jmp
or
andb
adc
out
stos
pop
push
jle
popf
inc
jmp
cmp
clc
push
cmp
sbb
adc
jne
mov
sti
add
pop
frstor
add
adc
cmpsl
in
xor
lods
je
adc
xlat
fwait
pop
in
nop
jg
inc
call
push
and
roll
mov
xor
cmp
sti
sbb
into
rcll
stos
add
xchg
adc
xor
imul
push
or
in
popa
and
pop
mov
movsl
mov
mov
movsb
rolb
aas
mov
mov
test
xchg
loopne
fwait
sbb
out
scas
mov
gs
sti
stos
or
repz
scas
js
inc
sbb
xor
adc
addr16
push
stos
repz
dec
dec
mov
mov
adc
insl
adc
push
or
fwait
adc
and
xchg
inc
insb
sub
int3
outsb
repnz
mov
aaa
cmpsb
inc
mov
js
loope
push
stos
js
cmp
dec
push
stos
iret
pop
shlb
and
inc
inc
pop
or
scas
scas
lahf
mov
push
dec
repz
fucomip
sbb
push
in
call
lret
cmpb
rolb
sub
add
loop
jb
aam
rcll
cs
sbb
jp
mov
adc
sahf
lcall
jae
negl
jb
dec
in
inc
cwtl
fstpt
sahf
adc
mov
pop
test
push
adc
out
xchg
stc
hlt
push
xchg
pop
in
daa
mov
add
inc
xchg
clc
dec
js
xor
xor
pop
loop
sar
dec
lcall
inc
std
ficompl
pop
sub
mov
sbbl
dec
or
push
push
lea
adc
icebp
mov
and
xor
lcall
mov
cmp
pop
and
shl
sbb
imul
push
mov
int
insb
push
adc
cmpsb
in
inc
xchg
gs
pop
xchg
out
mov
inc
loop
subb
mov
cmp
clc
inc
mov
xchg
jbe
daa
add
fcoms
pop
cmpsl
push
cmp
pop
add
xchg
xor
int
add
addr16
clc
or
lret
ret
jno
lahf
mov
dec
test
inc
loope
repz
lret
mov
pop
xchg
call
and
lea
push
inc
out
testb
push
inc
sub
in
fs
inc
lea
jl
je
push
push
mov
fnsetpm(287
in
clc
loop
das
outsb
mov
adc
push
mov
pop
lock
push
frstor
cwtl
xchg
mov
lret
pop
scas
and
loop
add
pop
ret
into
push
cltd
in
xorb
jmp
pushf
mov
xchg
clc
add
dec
mov
data16
cmp
test
adc
cmp
in
in
fmull
cmc
cmp
leave
mov
xor
adc
ret
out
ret
lcall
lahf
adc
ljmp
dec
mov
fld1
shr
jbe
pop
push
mov
push
sbb
fists
or
test
dec
lock
negl
decl
cmp
xor
enter
popf
adc
dec
jg
mov
push
jbe
add
sahf
mov
push
aam
scas
or
out
je
repz
loopne
lods
sbb
sahf
lret
mov
sub
xchg
or
lods
pop
addr16
sub
insl
pushf
std
dec
inc
inc
or
xor
aad
and
sub
gs
ret
popa
xchg
cmp
sbb
cmp
xchg
dec
jae
cmp
sub
inc
inc
inc
cmc
cmpsb
outsb
and
dec
or
jnp
dec
in
jp
inc
in
cmp
mov
or
int3
mov
sar
test
out
and
inc
stc
mov
cmpsl
shlb
das
or
inc
or
lret
pushf
inc
nop
jno
out
push
jnp
sub
push
or
inc
lret
lret
outsl
dec
xchg
mov
hlt
mov
insl
xchg
and
out
xchg
pop
out
and
test
into
stos
sub
ret
lods
test
enter
je
add
cld
imull
test
push
jp
push
pop
inc
jae
xchg
pop
cmp
push
cmc
sub
inc
or
insl
mov
fs
and
dec
das
pushf
inc
push
jmp
stos
inc
out
sbb
mov
dec
mov
or
adc
lret
sbb
int
test
mov
aas
insl
sbb
aaa
push
push
out
insb
push
sahf
loop
xchg
dec
mov
stc
repnz
bswap
push
mov
lock
mov
in
in
sbb
cli
sbb
cs
jecxz
mov
mov
mov
clc
cwtl
xlat
lods
cmp
mov
shl
imul
dec
f2xm1
loop
jge
dec
lods
mov
cs
out
decb
sub
ret
jb
mov
enter
ret
xor
outsl
xchg
dec
shll
fildl
xor
jnp
dec
fnstenv
std
cmp
and
std
dec
mov
sub
ror
pop
inc
in
or
pop
mov
shll
mov
sti
jecxz
lret
mov
jp
mov
adc
mov
sub
push
pop
pusha
sti
xchg
js
push
std
push
jl
arpl
loop
mov
mov
mov
mov
xchg
adc
inc
xchg
loope
pusha
js
mov
and
lret
sahf
mov
jae
inc
mov
stos
rorl
push
iret
movsb
retw
cmpsb
imul
mov
jno,pn
sub
jae
loope
enter
ja
pop
lea
pop
add
out
pushf
or
out
js
mov
jecxz
cmp
je
outsb
cltd
sub
xlat
ja
mov
divb
popa
xlat
xor
test
push
mov
xchg
fdivrl
mov
hlt
test
out
xor
leave
mov
sub
mov
repnz
mov
scas
es
cli
pop
adc
sub
push
cs
loop
mov
jg
dec
cltd
lock
mov
adc
mov
mov
add
xchg
pop
bound
pushf
cld
repnz
push
into
out
nop
push
mov
js
inc
xorl
sub
mov
test
dec
cmc
jb
adc
inc
xor
jg
outsl
mov
divl
xchg
xchg
xchg
or
and
out
cmp
mov
dec
pop
aaa
cmp
mov
jo
cwtl
mov
adc
loopne
xchg
rcrb
mov
adc
outsb
and
adc
inc
aam
sub
push
xchg
dec
sub
iret
jb
or
mov
sbb
cltd
outsb
mov
sarl
add
enter
sahf
dec
mov
adc
xchg
jmp
aad
ljmp
add
inc
shrb
mov
mov
sub
fcmove
xor
mov
shlb
movsb
cmp
adc
hlt
and
ja
out
pop
cltd
sbb
dec
repnz
cmp
pop
sbb
xor
or
xchg
jge
xor
xor
mov
adc
mov
imul
jbe
outsb
sub
orb
dec
sbb
movsb
push
cmpsb
mull
xchg
out
pop
jno
pushf
add
imul
fistpll
push
jbe
invd
into
cmp
sub
mov
mov
xor
xchg
aas
xor
jmp
das
mov
fistpl
sbb
xor
jnp
lods
sub
rcl
roll
popa
mov
std
ds
js
mov
pushf
ficoml
or
and
subb
bswap
add
add
pop
orb
jp
mov
test
push
xchg
dec
jmp
fistpll
or
push
cmpsl
inc
inc
mov
movsl
mov
jl
fabs
in
xorb
mov
mov
cmp
push
push
sub
xchg
push
pop
dec
xchg
rcrl
sub
loop
xor
lock
push
stos
mov
inc
pop
subb
lret
sbbl
xchg
mull
mov
leave
cli
lods
inc
ss
out
into
scas
lret
repz
pushf
je
loop
pop
cmp
mov
popf
mov
sbb
pop
sbb
pop
leave
loope
aam
pop
mov
xchg
aaa
gs
dec
add
imul
mov
dec
xor
aad
pop
cmpsb
xchg
dec
push
lcall
out
ret
inc
fisttps
pop
inc
das
dec
inc
push
cmp
imul
xchg
jp
loop
dec
js
and
xor
js
in
test
or
inc
leave
cmc
and
in
lods
pop
int3
jno
lock
outsb
jge
push
jno
pop
int3
lods
add
movsl
fwait
adc
imulb
mov
xor
cmp
and
jo
or
xor
sub
repz
push
mov
sub
and
jp
imul
daa
sbb
mov
mov
es
daa
mov
loopne
and
mov
loope
out
ret
sahf
stos
jae
dec
mov
cmc
mov
add
pop
push
jne
call
ficomps
inc
sub
fwait
insb
sti
and
test
sbb
std
xchg
testb
gs
shrl
dec
inc
jecxz
add
pushf
xor
inc
sarl
inc
mov
cmp
dec
push
je
dec
cmp
xchg
dec
fisubs
aas
push
pop
mov
scas
xchg
bound
scas
hlt
mov
aad
push
mov
sub
lods
mov
pop
adc
repz
ret
sub
or
or
pop
mov
jo
sub
push
and
imul
test
mov
push
xchg
std
stos
shrl
inc
out
push
cld
or
test
sub
std
cmp
jge
in
sbb
lock
test
popa
hlt
mov
cmp
mov
and
in
outsb
sub
pop
imul
mov
jg
icebp
mov
mov
and
xchg
outsb
aaa
mov
fcoms
loop
xor
cmp
sub
xchg
dec
mov
test
xchg
push
cmp
xchg
add
sbb
nop
in
cmpsb
push
test
mov
leave
push
xchg
dec
cmp
cltd
insl
mov
inc
adc
hlt
push
jmp
int
shll
jne
adc
mov
popf
mov
fisubl
insl
stc
nop
and
jp
inc
jne
dec
sub
push
cld
inc
pop
fwait
sub
inc
ljmp
push
adc
jae
cli
enter
pop
cmp
dec
movsl
scas
mov
cs
sarb
push
xor
out
lret
incl
pop
pop
add
push
lret
andb
xchg
pop
andps
mov
jnp
fdivl
aaa
lret
pushf
jne
jbe
and
add
mov
jp
inc
pop
pop
out
dec
xor
cmp
ficomps
mov
test
es
scas
or
leave
gs
inc
js
mov
lock
mov
ljmp
sub
dec
aam
push
ljmp
push
or
mov
stos
loop
mov
cmp
popf
std
popf
jae
es
sbb
cli
inc
mov
and
add
popa
es
mov
fs
loop
and
xchg
popa
enter
add
mov
xor
leave
out
fs
mov
adc
call
loope
cmp
pusha
fistps
fsts
and
negl
pop
testl
jnp
ret
push
mov
inc
cltd
and
lds
jmp
subl
dec
outsl
into
je
stos
xorb
dec
into
sarb
jbe
sbb
push
mov
fwait
cmpsl
out
dec
bnd
call
arpl
out
into
jl
fwait
fwait
fwait
bound
stos
out
xchg
rolb
test
enter
mov
lods
je
sbbl
adc
popf
sbb
push
or
xor
or
pop
lahf
pop
outsl
cmpsb
sbb
xchg
test
jo
xorl
popf
lahf
insl
dec
addr16
out
mov
movsl
in
dec
mov
loope
xor
mov
or
dec
dec
xor
out
jg
lret
outsb
xchg
sub
cmpsl
ss
jnp
fcoms
loop
mov
and
xor
push
std
push
sbb
je
leave
dec
ret
loope
cmp
xor
lret
mov
mov
cld
cli
out
jb
dec
iret
das
push
or
into
and
adc
leave
mov
and
or
or
sub
add
fsubrp
jne
int3
pop
shl
out
ja
mov
dec
adc
xchg
mov
push
or
dec
lcall
sbb
call
jae
adc
mov
popf
fs
xor
cmpsl
adc
lret
mov
push
mov
repz
cmpsl
cld
repz
mov
imul
aaa
xlat
test
jnp
cmp
aas
cmp
jnp
lret
push
das
jecxz
fs
ret
adc
test
iret
scas
adc
pop
lock
xor
xchg
neg
je
xchg
out
scas
mov
rclb
repnz
cli
and
aad
insb
insb
std
cmp
aam
out
ljmp
pop
inc
add
out
sbbb
xchg
movsl
xor
ror
push
cmc
and
and
stos
jae
cmp
fsub
gs
imul
dec
cmp
xchg
add
fistps
leave
scas
adc
add
jp
test
mov
lahf
mov
jb
mov
mov
cld
call
stc
aad
cmp
jge
ss
iret
mov
jne
mov
cs
push
pop
or
push
sti
in
lock
fwait
xchg
mov
addb
dec
aad
mov
or
sbb
in
xchg
popf
inc
outsb
cmc
push
iret
subl
les
adc
or
xchg
fs
loope
jns
sbb
test
xchg
iret
jl
arpl
mov
lret
mov
xchg
pop
xchg
push
or
bound
and
xchg
push
movsb
movsl
xchg
lret
add
repnz
das
cmp
mov
mov
in
ret
xor
pushf
push
pop
rolb
daa
out
outsl
cmp
sub
add
mov
jmp
inc
or
popa
fstpt
lea
and
xchg
rcrl
mov
nop
mov
sub
je
outsb
int3
jns
or
cmp
pop
lods
and
xchg
cmp
push
pushf
inc
popl
sub
sbb
fisttps
les
shll
sub
jecxz
loopne
jmp
aaa
jbe
mov
push
adc
lods
lahf
test
mov
or
out
xchg
mov
xchg
or
cmpsb
inc
mov
insb
or
pop
sar
xchg
mov
lods
adcl
js
pushf
jmp
fs
loopne
dec
mov
push
ja
stos
xchg
fiaddl
cmc
in
loope
cmp
xor
inc
div
mov
das
outsl
loopne
fs
sub
fldt
dec
sub
fwait
inc
jl
pop
test
and
fbstp
mov
cmp
call
dec
adc
das
jnp
gs
add
and
in
cmpsb
movsb
and
sbb
scas
aad
pop
and
pop
test
mov
sbb
stos
mov
lds
es
or
push
gs
outsb
cmpsl
add
hlt
cwtl
mov
fsubrl
add
enter
nop
aad
imul
sub
jno
gs
js
fdivl
imul
shrl
mov
xor
fistpl
inc
push
loope
mov
fildl
test
adcl
lds
cmp
std
in
or
fsubrl
inc
xchg
es
cmp
rcl
jnp
call
test
lcall
xchg
lea
xor
ljmp
inc
repnz
cld
or
adc
int3
stos
add
pop
or
lea
dec
mov
pop
jl
ficomps
jbe
cmp
add
inc
add
jns
push
mov
mov
pop
or
mov
jne
xchg
pop
add
int3
or
insb
jns
add
imul
testl
fcoms
stos
sbb
les
aam
pop
xchg
sbb
xor
mov
mov
fimull
repz
xchg
add
test
jnp
xchg
inc
ret
mov
mov
ljmp
pop
cmp
xchg
mov
mov
mov
mov
mov
dec
test
pop
pop
nop
xchg
jbe
roll
lods
cmp
sub
push
enter
and
js
push
mov
test
add
push
lret
repz
repnz
mov
mov
dec
fbld
fwait
jp
in
mov
out
dec
dec
fwait
jns
inc
dec
mov
lock
jo
and
jb
mov
out
pop
push
lret
dec
mov
stos
push
stos
xchg
pop
out
clc
insb
mov
stos
pop
push
pop
nop
rorl
clc
bound
jno
and
jp
inc
xchg
sub
mov
or
adc
mov
call
inc
cwtl
jge
jg
bound
sub
add
aaa
jl
pop
dec
adc
mov
mov
cltd
aas
xchg
fbstp
cli
pushf
or
jb
insb
cmp
mov
cmp
jg
jbe
cmp
pop
imul
subb
imul
call
sbb
lahf
subb
or
mov
stc
mov
mov
loope
mov
pop
push
mov
scas
or
lea
mov
push
js
xor
addl
jns
or
loop
insb
jb
aad
mov
push
pop
jbe
mov
push
stc
sarb
neg
add
push
mov
mov
push
movl
push
sti
das
es
xchg
inc
test
in
lret
mov
pop
mov
pop
and
cli
orb
leave
sub
pop
outsl
insl
scas
adc
cmpsb
pop
aam
dec
notl
pop
jmp
repnz
rorl
push
jmp
scas
push
pusha
rol
bound
cmp
lds
test
xchg
fs
push
mov
jl
lahf
inc
and
popa
push
sbb
loope
cli
sub
nop
mov
cmp
mov
lcall
add
pusha
dec
lds
fnstenv
std
mov
and
and
dec
sbb
cmpsb
or
loop
decb
in
shll
stos
lcall
test
mov
xor
dec
jne
rcll
int
pop
loope
sbb
int
test
push
cmp
mov
test
and
mov
rorb
daa
or
lods
jno
es
cwtl
pop
cli
sub
xchg
adc
into
fucomip
mov
jns
dec
mov
outsb
cli
pop
dec
in
fxch
and
fcoml
or
popf
and
cltd
lock
leave
jbe
add
or
fdivl
xchg
std
scas
stos
add
aaa
das
mov
mov
movsb
decb
mov
js
scas
xor
popf
push
imul
leave
clc
test
mov
or
lfs
push
xchg
jnp
fwait
in
push
in
out
lret
popa
or
cs
gs
stos
xchg
mov
pop
dec
push
int
inc
push
sub
movsl
cld
adc
in
sbb
jg
cmpsl
or
xlat
sbb
sbb
fistl
push
xor
stc
test
adc
inc
xchg
int3
jbe
mov
cmpsb
shr
adc
fs
ja
or
mov
fwait
in
adc
bnd
cs
ds
adc
push
arpl
mov
sub
mov
jbe
lret
pushf
pop
mov
enter
insb
gs
adc
dec
fwait
syscall
call
pop
mov
pusha
xchg
popa
mov
dec
push
in
jge
lods
int
sbb
dec
and
adc
mov
adc
jnp
mov
fucomip
mov
outsl
xorb
mov
test
test
inc
mov
dec
dec
fistpll
repnz
ret
or
cmp
cld
aam
push
mov
stos
sarl
inc
ds
dec
jp
mov
or
cmp
mov
xor
dec
repz
flds
pop
andl
inc
push
ljmp
aas
and
imul
daa
mov
mov
sbb
or
mov
and
sbb
in
fs
imul
lock
cmpsb
xchg
arpl
jp
push
lock
cmpsb
clc
mov
out
mov
jbe
push
mov
std
ss
fs
lret
sbb
mov
int3
cs
ja
call
repnz
inc
fwait
sbb
sbb
add
mov
call
xor
orb
push
mov
push
repz
fisubl
push
mov
mov
in
hlt
mov
cmpsl
das
cmc
pop
xor
les
dec
roll
outsb
and
call
adc
push
jp
sub
movsl
insb
cmp
cwtl
les
xchg
shlb
push
push
ds
jge
pop
push
pop
mov
pop
outsb
inc
int3
stos
scas
mov
loop
fwait
movsl
inc
mov
lock
orb
popf
cli
cmc
mov
cmpsb
mov
mov
pop
and
dec
rcll
xchg
test
scas
lock
mov
pop
sbbl
ret
int
xchg
mov
xchg
fnstenv
imul
xchg
mov
inc
pop
mov
push
popa
inc
jle
lea
imul
and
lea
enter
fsubl
mov
jp
in
scas
dec
and
into
out
inc
aam
push
aad
popa
pop
xlat
cmp
lea
test
popa
lds
mov
cmp
xor
int
mov
hlt
inc
dec
mov
inc
pop
pop
inc
fidivl
fnstsw
cmp
mov
insl
outsb
out
fchs
out
in
in
or
incl
mov
lods
mov
pop
xorb
pop
mov
mull
lret
fwait
mov
sbb
xor
xchg
mov
orl
xor
mov
fldcw
insl
sub
out
push
mov
and
jmp
pop
lea
mov
addr16
icebp
std
lea
mov
mov
mov
xchg
fisubs
pop
cld
or
lock
fst
inc
cmp
xchg
inc
shll
js
imul
sarb
mov
add
sahf
mov
jge
dec
je
insb
jge
xlat
mov
inc
jns
gs
or
repz
out
scas
add
stos
and
hlt
xor
mov
jnp
fistpl
shll
fidivrs
sbb
adc
in
lea
dec
push
sbb
sub
test
movsb
mov
mov
lcall
sbb
adc
or
and
roll
and
daa
xchg
lret
sbb
bound
mov
dec
std
mov
les
pop
bound
daa
xorb
xchg
es
repnz
push
gs
je
roll
dec
shrb
es
add
das
rolb
dec
leave
pop
push
cs
dec
adc
sbb
pop
movl
rcrl
lahf
fistpll
jecxz
adc
lahf
mov
xchg
imul
jge
inc
jne
mov
and
dec
jecxz
sbb
xor
inc
movsb
andb
addb
add
cmp
push
andl
jecxz
cmp
loopne
les
adc
into
jne
and
or
sbbb
scas
fucom
mov
fidivrs
outsb
mov
push
inc
mov
mov
inc
push
add
mov
insl
into
cld
cmp
dec
or
jmp
push
scas
push
ljmp
cmc
movsb
dec
cli
pop
push
adc
pop
cld
xor
mov
fcomi
cmc
mov
pop
imul
iret
aad
or
loope
cmpb
dec
cmovne
pop
ret
inc
push
je
cld
xchg
mov
faddp
mov
push
mov
or
sbb
or
dec
fmul
push
pop
ljmp
lea
pop
pop
jno
shlb
dec
push
xchg
or
push
sub
mov
int
and
dec
inc
cld
sub
mov
enter
int3
add
xor
add
insl
add
or
movsl
xorl
fstpl
adc
push
fldenv
push
addb
mov
sarb
push
xlat
and
aas
lea
jb
mov
pop
adc
fldenv
popa
imul
inc
mov
lods
push
and
shll
repnz
jbe
sub
push
fstpl
mov
gs
fcoml
adc
pop
rcl
inc
adc
shrb
adc
cmpsb
into
stos
pop
mov
xchg
mov
sub
loop
push
lahf
movsb
fs
mov
lahf
repz
lahf
dec
mov
je
pop
mov
push
push
push
push
fmulp
xor
stc
int3
insb
sub
stos
call
lods
sbb
and
notl
xor
int
ja
mov
js
cld
sti
insl
aaa
mov
bound
int3
aaa
cmp
lcall
out
popa
aad
push
pop
sub
fstpt
xor
and
cmp
or
cwtl
pop
lods
adc
cmp
scas
pop
jbe
addr16
add
repz
pop
pop
push
fwait
adc
mov
push
or
push
or
loope
fbld
fbld
mov
outsl
inc
sbb
xchg
mov
ds
jbe
jae
iret
inc
mov
push
insl
je
jb
and
xlat
popf
inc
popf
pop
add
dec
jns
or
cld
and
call
dec
and
repnz
dec
pop
push
mov
test
test
jge
loopne
stos
cld
outsb
and
addr16
jae
rcll
lcall
bound
lea
cmp
mov
cmpsb
mov
adc
imul
gs
lock
or
add
loop
cmp
bound
and
pop
mov
lds
push
xchg
or
out
and
hlt
add
and
jbe
push
pop
push
movsb
fmuls
js
lcall
bound
inc
enter
dec
sbb
imul
push
mov
aad
ds
out
or
xchg
xchg
out
lods
and
into
bound
cltd
mov
mov
dec
lcall
scas
or
pop
pop
fsubrs
mov
pop
jecxz
out
ret
lods
outsl
mov
and
push
test
lahf
int
jl
push
pop
mov
fimuls
pop
xchg
mov
mov
jo
into
cmpsl
nop
jbe
das
inc
shll
sbb
push
in
cmp
lret
mov
and
repz
cmp
or
push
sahf
movsl
adcl
inc
mov
and
lcall
add
xchg
mov
dec
inc
aaa
int3
jns
daa
int3
pusha
push
in
xor
pop
mov
addr16
movsb
add
mov
cmp
aad
xchg
pusha
outsb
xchg
nop
sbb
pop
enter
insb
sbb
int
xor
mov
aaa
xor
mov
mov
leave
adc
lock
in
push
pop
sarb
jno
pop
ja
add
out
int
and
or
test
cmp
inc
inc
or
cmp
jl
and
sahf
mov
mov
test
stos
mov
testl
push
aam
jb
jmp
into
test
push
push
mov
add
xor
add
jg
pop
ffree
xadd
adc
stos
mov
mov
mov
movsb
or
das
bound
in
popl
aaa
xlat
outsl
das
int3
adc
popa
or
inc
mov
dec
popf
cld
jge
jmp
push
lahf
fwait
push
loop
adc
push
push
or
int
jb
jae
mov
sbb
dec
out
add
pop
mov
or
mov
cmp
inc
repz
in
lods
daa
enter
out
mov
out
xor
sbb
lret
mov
repz
cmp
pop
sti
xor
xchg
cli
movsl
mov
aas
lds
fs
stc
sbb
roll
cmc
sub
imulb
pop
mov
fdivp
fstps
ret
jne
in
pop
sbb
lret
das
maskmovq
idivl
pushf
pop
mov
in
mov
test
lahf
sub
mov
xor
sbb
dec
cmp
jl
aad
pop
inc
insl
jbe
inc
mov
sub
xchg
pop
add
sub
movsb
mov
push
mov
out
mov
sbb
icebp
and
cmpb
dec
sub
imul
js
xchg
sub
jge
jne
lahf
je
dec
adc
pop
mov
lock
insb
insl
in
jmp
jbe
adc
jmp
outsb
andl
add
out
mov
popa
daa
lods
pop
loopne
mov
or
dec
add
mov
mov
insl
lcall
xchg
cmp
mov
pusha
ljmp
pop
pop
mov
gs
push
out
push
mov
mov
fldenvs
xchg
shlb
repnz
adc
and
jb
lock
mov
push
mov
dec
lea
into
stc
xchg
into
cld
in
ljmp
iret
nop
xchg
mov
ss
aad
xchg
test
xor
push
je
lahf
mov
addr16
es
xchg
inc
add
push
outsb
xlat
insl
pop
shl
cmpsb
inc
nop
outsb
lahf
mov
in
rcrl
in
jecxz
push
inc
sub
push
jno
shrb
and
cs
jge
repnz
dec
pop
lock
xor
inc
sbb
test
outsl
mov
and
cmpsl
loop
stc
pusha
js
mov
cmp
sub
cwtl
test
mov
lds
mov
ret
pop
xchg
mull
fisubrs
mov
xchg
or
jmp
je
push
adc
das
xor
jb
pop
data16
push
in
gs
int
popf
jbe
enter
inc
pop
mov
mov
in
int3
xlat
out
mov
inc
sbb
and
mov
adc
arpl
cs
sbb
inc
add
std
jb
shll
daa
cmp
test
dec
fcmovbe
fwait
pushf
stc
imul
adc
xchg
add
push
call
lret
add
shlb
or
pop
dec
aam
dec
jo
pop
mov
xor
add
push
xor
mov
or
gs
pop
mov
loopne
cmpsb
mov
rorb
push
cmp
movsb
stc
pop
xlat
jne
dec
add
push
loop
jge
mov
mov
ficoms
mov
je
mov
push
scas
je
aam
lret
out
xor
sub
and
enter
xor
call
push
imul
test
ret
xchg
sub
or
imul
pop
loop
cwtl
push
push
bound
mov
fstpl
xchg
cld
leave
pushf
sub
out
push
negb
mov
inc
test
pop
add
add
ljmp
mov
cmp
repnz
xor
cmp
pop
xchg
fs
mov
push
xor
pop
test
mov
cmp
sub
fisubrl
fsubl
aaa
inc
lds
roll
add
xchg
test
aad
adc
pop
inc
cli
pop
ds
mov
les
movsl
sub
sub
test
movsb
cltd
xchg
jg
mov
push
stc
das
or
mov
push
subl
jno
inc
push
loop
loop
mov
inc
gs
add
loop
hlt
outsl
lcall
lea
sahf
arpl
std
mov
sub
addr16
sub
inc
call
mov
cltd
daa
fmull
xchg
cmpsl
lret
addb
adc
ror
xchg
std
sub
mov
or
jbe
ja
dec
push
enter
cmp
cltd
int
inc
lahf
xor
icebp
jns
fcmovne
mov
sub
xchg
cs
push
xor
adc
scas
andb
mov
mov
cmp
std
into
leave
xchg
jmp
mov
iret
daa
jge
clc
mov
push
pop
leave
and
and
fstpl
sub
push
pop
xor
popf
arpl
push
cmpsb
loopne
popf
jno
dec
mov
adc
push
jle
inc
out
add
add
es
sub
aad
xor
mov
int
adcb
aad
test
mov
adc
lahf
or
outsl
popf
pusha
xchg
jno
xor
jle
dec
mov
mov
mov
loopne
in
push
push
roll
xchg
xchg
adc
cmc
push
sarb
dec
jo
cmc
xor
insb
insl
dec
js
xchg
repnz
cld
and
dec
icebp
movsb
pop
cmp
jge
cli
mov
fcompl
push
mov
clc
adc
movsl
xchg
ficompl
outsb
fnstcw
sbb
daa
loop
mov
cld
pusha
dec
push
ret
push
xchg
or
arpl
ss
xchg
push
adc
popf
jae
pusha
sbbl
sbb
mov
subl
inc
sbb
cwtl
enter
xchg
ficoml
cli
xlat
imul
mov
cmpb
sub
out
out
and
fyl2xp1
mov
mov
push
or
xor
xchg
cmc
xor
jne
mov
popf
out
adcb
pushf
popa
mov
lret
ss
mov
dec
dec
push
cmp
push
movsl
mov
call
push
jnp
popf
lods
inc
push
int3
add
paddd
pushf
mov
js
popa
dec
mov
lret
inc
xchg
xadd
xor
lods
les
xor
xor
add
pop
push
mov
fdivr
adc
data16
popl
or
sti
push
test
ljmpw
rcrb
adc
lcall
xchg
mov
test
clc
fdivs
pop
mov
dec
aad
push
out
cwtl
dec
call
in
mov
dec
test
push
adc
push
dec
push
icebp
adc
push
push
and
or
xor
add
jb
popa
aad
xchg
push
pop
push
pop
push
adc
or
xchg
xor
push
pop
xchg
mov
test
pop
daa
xor
pop
inc
gs
adc
lahf
fstl
and
roll
push
xchg
push
hlt
sahf
mov
and
jp
push
imull
loop
je
pop
out
mov
ficoml
lahf
mov
jae
adc
mov
mov
or
dec
cmp
pop
out
rcl
es
outsl
jb
call
xor
add
xchg
or
or
dec
nop
and
cld
xchg
andl
jns
data16
sbb
and
fcom
lods
or
insb
call
pop
cs
pop
shll
mov
mov
mov
sub
loopne
scas
pushf
cmpsb
outsb
out
xchg
mov
fstpt
popf
jge
loopne
push
daa
jmp
cld
imul
hlt
js
addb
inc
popa
xor
icebp
popa
cmpsb
jne
cmp
add
sbb
mov
movsl
sub
add
dec
enter
popl
aaa
mov
dec
out
movsl
mov
add
lods
icebp
cmp
cli
rcll
xchg
fcoml
jns
inc
dec
ficoml
mov
inc
ds
scas
jmp
xchg
int3
addb
push
sbb
fmuls
add
popa
mov
out
mov
cmpsl
into
jge
stos
jmp
push
xor
pop
lcall
test
jbe
xor
mov
add
mov
out
cmp
xchg
cmp
push
ss
das
mov
inc
mov
add
arpl
mov
xor
sub
pop
aas
aas
lret
mov
and
pop
sbb
repz
adc
push
fiaddl
cwtl
and
roll
call
call
push
mov
ljmp
mov
pushf
shlb
push
adc
arpl
dec
bnd
add
das
test
lahf
or
movsl
aaa
sub
add
mov
std
stos
mov
hlt
sbb
jecxz
and
mov
mov
in
into
lret
pop
icebp
push
inc
pop
cs
sbb
add
sbb
cwtl
mov
arpl
das
imul
inc
push
movsl
outsl
mov
jp
mov
cmp
xor
call
and
or
xor
pop
xchg
mov
out
bound
jecxz
xor
lret
out
std
adc
lcall
psubsw
mov
inc
jge
jbe
mov
xlat
or
jbe
inc
rcl
sbb
fcomp
xchg
pop
fs
pop
mov
pushf
dec
and
push
jge
mov
and
and
fdivrl
scas
mov
adc
and
add
pop
mov
push
pop
mov
inc
mov
addr16
lret
push
mov
pop
xor
fs
dec
pop
and
lret
adc
rol
jge,pn
add
iret
stos
inc
mov
sti
dec
jl
jns
adc
xchg
sub
cmp
jb
outsb
push
pop
push
sbb
adc
sbb
cmp
inc
push
pop
cmp
and
repnz
in
cmpb
xor
cld
inc
mov
rclb
add
mov
jne
push
mov
test
jo
stos
xor
repz
out
mov
ret
daa
cmp
out
lods
test
and
push
pop
popa
pop
mov
scas
mov
mov
daa
out
mov
pop
adc
mov
into
cwtl
or
mov
mov
in
xchg
movsl
mov
mov
adc
sbb
lea
sub
dec
lock
cmp
pop
mov
std
scas
imul
lds
xchg
push
ret
sbbb
gs
pop
out
pop
test
pushf
imul
ljmp
test
fucomi
std
leave
jno
movsl
or
iret
stos
shr
lock
shr
jmp
aad
xchg
ret
popa
rcr
mov
mov
insb
std
pop
cs
pop
inc
scas
sub
ja
ja
mov
or
jns
add
out
sub
lret
cmp
shl
and
cwtl
and
xchg
lcall
iret
js
aam
in
push
cmp
std
sbb
or
mov
roll
inc
mov
cmpl
pop
imul
int
cmp
mull
lret
xchg
cs
push
mov
mov
push
daa
mov
out
lock
loope
mov
cmpb
cmpsb
pop
pop
cwtl
pop
mov
test
call
rol
sbb
sbb
fmull
std
cmp
test
xchg
push
mov
jb
stos
cld
sub
mov
cmp
std
aam
jmp
out
insl
incl
or
mov
lret
xchg
cmp
insb
adc
lahf
test
and
aaa
cltd
xchg
mov
cmp
dec
mov
in
or
xor
mov
loopne
push
pop
cli
inc
mov
dec
orl
sub
inc
int3
xor
lcall
pop
inc
enter
xchg
mov
and
cmp
inc
mov
sti
and
push
add
test
rcr
adc
mov
aaa
dec
jns
clc
cltd
insl
lods
jecxz
rcrl
xchg
pushf
cmpsb
mov
imull
cli
push
ficomps
fs
shll
xchg
jg
mov
mov
int3
inc
popa
into
fnstcw
arpl
mov
push
loope
cs
out
sarl
pop
inc
iret
lahf
and
out
fbstp
mov
jbe
push
mov
test
pop
jb
adc
add
xchg
xchg
testb
sarl
xchg
push
or
scas
jno
or
lahf
aas
sub
cmp
in
sbb
ret
xchg
hlt
jo
pop
cli
scas
call
scas
sbb
mov
mov
imul
sbb
cmp
inc
jnp
xchg
inc
pop
sahf
pop
imul
sbbl
inc
cmp
pop
cwtl
add
or
cmp
cmpsl
xor
dec
mov
mov
xor
loope
mov
stc
xchg
jno
push
in
bound
cmp
movb
jg
mov
mov
cmp
cmpsl
loop
lret
pusha
scas
jns
lea
adc
ret
stos
sub
push
into
imul
and
mov
leave
push
mov
xor
or
jnp
and
in
mov
adc
xchg
mov
out
push
cmp
out
lret
mov
jae
mov
mov
fnstsw
mov
movsl
inc
inc
pop
movsl
movsb
push
inc
shrl
push
or
es
sub
and
and
mov
xchg
call
mov
jo
add
imul
xor
fdivrs
pop
jbe
aaa
stc
adc
sub
testb
mov
inc
xlat
pop
pop
jg
jae
jns
mov
ss
int
dec
push
test
cmp
jge
xorb
xorb
clc
mov
repz
test
fs
mov
sahf
add
shrb
das
pusha
jo
cltd
mov
inc
push
sbb
push
in
or
in
fdivr
stc
ret
icebp
loop
and
imul
dec
mov
sbb
xchg
data16
xchg
loopne
jle
dec
cmp
dec
repz
push
in
push
push
or
fidivrl
mov
inc
cmp
inc
shll
mov
cld
ds
mov
fnstsw
inc
addr16
repz
ja
xor
es
xchg
inc
push
das
cmpsl
lcall
fnsave
sbb
push
shl
mov
into
and
adc
cmp
xchg
mov
adc
or
into
inc
mov
pop
inc
push
dec
outsb
jb
cmp
fldcw
ret
notb
lcall
sub
nop
fstps
jbe
adc
in
loopne
mov
gs
pop
xor
jmp
push
mov
inc
cmpsb
adc
imul
push
xchg
cli
or
pushf
mov
mov
mov
aad
mov
pop
popa
mov
sbb
daa
push
xchg
sbb
pop
adcb
cmp
or
fnstenv
js
xlat
mov
add
cltd
int
ds
popa
mov
or
cs
hlt
xchg
jno
sarb
imul
decb
push
jmp
enter
inc
mov
aad
inc
out
jo
adc
iret
pop
xchg
inc
xor
enter
nop
mov
lret
subl
lds
mov
movsl
out
arpl
mov
std
adc
sub
arpl
and
mov
adc
pop
or
das
loope
sub
scas
aaa
fnstcw
mov
lds
in
adc
xor
pop
xor
dec
arpl
xchg
xlat
fdivl
xchg
notb
roll
xchg
shrb
jle
dec
das
push
rol
dec
dec
inc
lcall
inc
jne
add
add
xor
loop,pt
xchg
daa
dec
and
into
outsb
xchg
test
lahf
arpl
jp
insl
ja
ds
mov
das
test
pop
xor
inc
sub
cli
inc
mov
and
inc
mov
mov
clc
test
repz
movsb
xchg
xor
das
or
leave
inc
jmp
push
jb
andl
and
div
lahf
xchg
inc
xchg
push
mov
ljmp
push
mov
mov
enter
leave
ja
sub
push
mov
rol
mov
mov
std
test
mov
aaa
cli
xor
rcr
mov
mov
or
xor
push
cmp
dec
dec
ja
int3
add
adc
dec
pop
sbb
xchg
ljmp
adc
xlat
pop
sub
in
sub
mov
movsl
sbb
ljmp
ljmp
aam
loope
add
lret
ret
push
ja
les
adcb
dec
xorb
inc
imul
xor
adc
loopne
aad
mov
fbstp
or
test
dec
sbb
lret
sbbb
lods
fdivrl
fstl
incl
nop
adc
call
push
xlat
js
pop
stos
xchg
mov
jmp
lcall
jmp
dec
ret
lds
dec
adc
outsl
enter
jg
stc
into
data16
xchg
aam
popf
daa
stos
inc
mov
pusha
in
adc
push
and
mov
in
or
add
xchg
sbb
sbb
test
int3
push
add
cltd
mov
out
mov
cmp
mov
dec
sbb
into
sub
add
sbb
nop
ljmp
push
test
dec
jno
bound
int3
fildl
in
pop
sub
adc
rorb
and
nop
xchg
movsb
stc
or
push
adc
stos
outsl
cwtl
sarl
outsl
xchg
dec
insb
fmull
jns
jne
hlt
or
mov
cmpsl
inc
ret
imul
lret
stos
pop
mov
xor
inc
push
jno
mov
pop
test
out
fsubs
out
jne
mov
pop
ljmp
cld
pslld
add
and
mov
or
xor
mov
fwait
das
cmp
sbb
push
sub
xchg
lods
mov
inc
mov
mov
jno
adc
imul
scas
stos
xchg
repnz
mov
mov
pop
in
rcl
mov
adc
divl
shl
pop
xchg
std
cwtl
or
pop
sbb
dec
adc
das
jmp
movsb
insb
dec
das
lret
aaa
mov
or
loopne
shl
cmp
mov
pop
push
sub
xchg
je
das
or
cltd
adc
jmp
ljmp
bnd
pop
lcall
jecxz
inc
adc
and
aam
sbb
and
inc
sub
mov
pop
sub
cmp
lds
lods
or
rcr
loope
fcom
lods
out
sbbb
ret
or
and
rcrl
inc
add
mov
mov
inc
add
mov
pushf
nop
jne
mov
jge
cmpsb
sub
hlt
lea
leave
dec
mov
push
mov
std
test
jge
test
sub
mov
pop
bound
jns
jo
cmp
xor
add
xor
adc
test
ss
mov
or
cmpb
aas
and
push
xchg
sub
xchg
outsl
mov
mov
mulb
dec
adc
jo
cli
fnstcw
xchg
inc
cld
jnp
mov
out
jp
clc
shl
scas
cli
and
aad
std
inc
fwait
addb
pop
dec
mov
leave
sub
adc
scas
adc
cltd
cmpl
xchg
sbb
mov
mov
push
sub
and
leave
pop
cmpb
mov
mov
xlat
cmp
push
push
cs
jl
sub
jl
nop
popa
sti
jae
and
jne
repnz
xchg
or
jle
icebp
inc
jnp
push
test
pop
jnp
mov
stos
or
xlat
and
cli
es
scas
loop
daa
in
sti
push
shr
adc
cmp
push
jbe
inc
ss
dec
andl
xlat
ficomps
push
cltd
xchg
jb
inc
dec
stos
icebp
call
cmpsb
je
pop
inc
and
testl
adc
xchg
cmp
jl
fstp
lods
mov
pop
ret
xor
jecxz
rcl
pop
cltd
repnz
mov
pop
das
arpl
outsb
xchg
adc
ds
scas
sub
sti
add
fs
adc
push
shrb
mov
pop
pusha
jbe
imul
das
jae
lret
insb
mov
push
xorb
std
cmp
lea
sbb
mov
xchg
dec
push
outsl
sbb
out
adc
ja
cmp
outsb
mov
idivl
sbb
out
sbb
leave
cld
addb
shll
mov
lahf
lea
pop
push
push
sbb
pop
cli
inc
dec
test
xor
and
jbe
mov
mov
mov
dec
je
das
jecxz
sbb
adc
pop
call
and
mov
fwait
and
or
inc
mov
aam
imul
leave
cmp
data16
jecxz
fistps
out
roll
fstl
enter
negl
aas
adc
add
adc
sub
push
cmp
dec
cs
fistl
pushf
shr
and
jmp
mov
push
in
testb
jno
sub
sbbb
sub
add
or
ss
push
sub
inc
dec
fimuls
dec
and
into
cmpsl
sub
js
dec
das
jno
xchg
fcomps
ljmp
mov
xor
jbe
pop
and
inc
daa
and
push
repz
imul
sti
inc
fsubs
dec
pusha
jo
pop
lods
pop
push
stos
inc
adc
orl
popf
xchg
xchg
ja
lods
adc
jns
xor
mov
lods
cmp
mov
inc
jbe
scas
nop
sub
xorb
and
sub
imul
jno
cmp
xor
addl
and
movsl
add
jns
sti
aas
mov
icebp
movsb
loopne
movzbl
adc
enter
pop
xchg
push
ret
sbb
stc
pop
loope
es
push
out
hlt
bound
hlt
int3
mov
or
add
lods
jae
jp
fwait
or
in
subb
cmp
or
jge
jne
cmp
xchg
pop
add
xor
aas
ret
push
xor
sbb
push
adc
xor
jns
rcll
cld
mov
js
xchg
xchg
loopne
mov
xchg
mov
addl
ror
test
mov
bnd
inc
insl
cwtl
gs
out
dec
dec
fcmovnbe
fdivl
adc
xchg
arpl
cmc
mov
xchg
jle
and
scas
call
jae
gs
pmulhw
cmp
cmpsb
popa
rcl
cmpsl
in
mul
fwait
imul
xchg
pop
jae
clc
sub
jmp
and
lods
fnstsw
dec
insl
mov
jne
xchg
xchg
or
push
ret
cmpsl
mov
movsb
xor
jmp
inc
icebp
xorb
sub
lea
and
sti
push
out
pusha
or
leave
test
stos
xacquire
mov
cmp
sbb
push
inc
xor
test
outsl
sub
ds
fldenv
add
out
pop
popf
cmp
dec
mov
inc
and
mov
out
mov
and
xchg
push
mov
push
sub
jle
sub
loopne
push
add
add
cmp
andl
out
rcrb
pop
mov
jge
outsb
mov
out
shll
inc
mov
mov
mov
lock
je
push
mov
and
mov
roll
loope
mov
or
test
sti
xchg
movb
xchg
out
fiaddl
hlt
loope
xchg
test
stos
jecxz
lea
inc
cwtl
and
fsubs
xchg
js
cmp
les
scas
mov
psubsb
pusha
push
add
jl
or
jbe
ljmp
stos
dec
jmp
cmp
cld
gs
out
imul
xorl
imul
lcall
loopne
lock
fldl
repz
test
inc
sub
addr16
subl
mov
iret
sbb
push
mov
mov
loop
sub
pop
and
loop
ds
mov
push
mov
add
mov
jae
into
into
pop
movsb
iret
iret
jmp
sub
mov
lret
cmc
cmp
out
mov
aaa
movsl
lods
jp
das
outsl
das
cmp
fisubrl
les
xor
or
mov
jmp
and
clc
sub
orb
rorb
sbb
lcall
lret
pushf
push
mov
xchg
push
stc
xlat
or
aad
outsl
jo
xor
pop
xchg
cwtl
xlat
inc
lahf
les
sbb
inc
mov
fwait
add
stc
aas
jp
in
jl
in
push
cmpsl
pop
cmp
mov
orb
xor
ret
fs
push
mov
loop
jo
fldcw
fidivrs
popa
push
push
insl
sbb
jns
imul
mov
insb
es
out
jge
out
cmp
outsb
sarb
push
insb
add
xor
test
inc
push
ss
adc
ds
mov
jb
pop
push
loop
or
imul
out
in
sub
es
mov
test
pop
shll
xor
adc
in
rol
jg,pt
jmp
lods
add
mov
cmp
stos
or
shll
xchg
js
cmpsb
outsb
mov
push
or
xor
inc
lret
fcompl
cli
clc
push
arpl
pop
call
adc
jl
cmpsb
and
out
sub
jg
adc
mov
mov
popa
addr16
int
inc
mov
nop
mov
int
outsb
lea
add
inc
add
fucom
mov
mov
xor
dec
and
pop
add
cmp
fistpll
jl
out
add
out
xchg
inc
test
icebp
frstor
in
fwait
and
mov
and
sbb
stos
inc
lcall
adc
sub
idivl
mov
xor
jbe
adc
sub
lea
xlat
mov
push
test
hlt
imul
sbb
push
jg
xchg
in
rorb
inc
out
push
repnz
pop
mov
sahf
and
sahf
jne
fimuls
mov
mov
loop
fnstcw
loopne
adc
adc
cmp
mov
sbb
leave
pusha
bound
push
bound
shrl
jns
aad
jg
fldt
jle
test
sbb
popa
jl
xor
outsl
and
sbb
test
pop
pop
and
adc
mov
mov
repz
mov
rolb
iret
test
or
call
inc
mov
in
mov
test
adcb
mov
add
and
roll
fwait
clc
push
mov
call
incb
push
push
dec
push
into
xchg
push
clc
or
and
jmp
rcl
sbb
push
mov
rorb
bnd
insl
xchg
bound
inc
add
mov
inc
adc
das
insb
out
into
mov
jle
cmp
pop
aam
mov
dec
sbb
mov
sbb
lret
in
sub
jae
rorl
jo
imul
and
test
seta
xlat
and
stc
in
sbb
sub
dec
add
mov
xor
and
aaa
scas
dec
cld
dec
in
xor
push
jnp
mov
dec
mov
jnp,pt
mov
out
mov
inc
mov
push
dec
lret
movsb
xor
sbb
push
repnz
jb
inc
sbb
ss
lret
mov
push
in
cmp
xchg
xor
pop
inc
xor
pushf
adc
pop
insb
in
scas
xorl
push
and
xor
or
sti
pop
cmp
jge
pushf
and
push
mov
push
add
ja
push
cmpsb
stos
insb
fdivrl
pop
pop
jno
push
mov
stos
fs
xchg
sar
pop
xchg
dec
shlb
inc
ret
mov
iret
imul
mov
adc
inc
push
fistpl
lods
popa
movsl
xor
or
call
in
and
pop
pop
negl
mov
sub
lea
es
mov
stos
sbb
sbb
ss
cmp
xor
mov
lcall
ss
jb
out
or
and
cld
pop
inc
popf
out
mov
mov
and
iret
insb
mov
ret
mov
xlat
ss
pushf
or
fbstp
jb
or
dec
pop
mov
push
cmpsb
or
xchg
xor
call
jo
cmp
movsl
xlat
iret
inc
aaa
jnp
sbb
jno
stos
cld
xor
xor
fs
jne
jle
mov
enter
adc
push
jno
push
push
lret
inc
hlt
in
xchg
aad
repnz
sub
mov
inc
jb
mov
rcrl
adc
mov
dec
or
xorb
lods
pop
mov
cli
cld
repnz
cmpsl
sbb
mov
sub
xchg
cwtl
sbb
pop
data16
aaa
xchg
and
enter
push
and
push
ljmp
push
in
push
lahf
mov
repnz
fwait
int
pop
mov
sub
and
out
andb
mov
ret
mov
pop
cmp
push
in
out
dec
daa
dec
add
out
pushf
xchg
enter
dec
cmp
lcall
cwtl
mov
jp
fwait
pop
push
leave
lock
out
mov
loop
mov
data16
mov
data16
cmpsb
lock
mov
aas
ror
jl
mov
je
or
pushf
shll
sbb
or
jno
cmp
mov
adc
jo
ljmp
aam
and
xchg
pop
xor
cmp
mov
jae
push
fistpll
imul
insb
xchg
mov
test
mov
dec
adc
mov
cmc
adc
ss
test
cs
adc
mull
and
inc
push
xchg
push
cmp
adc
ds
push
imul
icebp
mov
fsubp
rcrb
xor
mov
fdivs
addl
jbe
test
loop
xor
mov
pop
in
add
jae
loopne
jae
dec
mov
mov
sbb
fisubs
outsb
pop
mov
xor
dec
loopne
insb
dec
mov
ja
push
push
mov
add
cmp
rclb
int
xchg
xor
dec
mov
sar
inc
or
or
movsl
pop
lret
outsl
or
sub
out
dec
inc
mov
jns
push
jge
sbb
std
mov
lahf
gs
stc
mov
mov
jnp
xchg
xor
or
cwtl
pop
addr16
gs
mov
or
mov
mov
fxtract
sbb
add
jg
js
jbe
xor
push
mov
loopne
or
and
aam
push
aad
cs
pop
adc
lods
dec
nop
call
push
scas
push
enter
xlat
push
pop
xchg
cmp
jg
pop
mov
cmp
xor
inc
fstps
push
push
sbb
iret
cmpsl
repnz
clc
xor
mov
pop
mov
jl
push
jns
fnstenv
mov
rolb
cld
push
xchg
std
lods
mov
push
addl
push
jl
int
loop
bnd
xlat
outsb
cmp
or
sub
mov
ljmp
jmp
shrl
stc
stc
ljmp
add
mov
sub
mov
bnd
stos
mov
sbb
jl
jbe
aad
nop
lods
sub
dec
cmp
and
pop
loopne
xchg
loopne
lahf
push
testl
lock
mov
iret
push
cmp
and
insb
stos
jae
jnp
sti
pop
sub
scas
in
in
int3
ds
dec
ret
js,pn
fcomip
rorb
mov
push
loop
jle
aam
insl
fs
mov
into
jbe
cmp
das
sbbl
rcll
jae
rol
test
push
mov
iret
in
jno
xchg
mov
cwtl
scas
out
cmp
and
pop
test
adc
dec
bound
push
or
push
fidivrl
ss
ljmp
je
bound
clc
and
fwait
xor
icebp
js
push
pop
or
push
ret
icebp
cmp
test
fidivrs
popa
and
les
sub
cltd
outsl
xor
adc
andb
enter
orb
pop
fwait
pop
pop
movsl
insl
push
outsl
jns
pop
mov
scas
xchg
iret
dec
movsl
out
or
jle
lods
xlat
xchg
sti
adc
sbb
mov
xchg
sahf
imul
jnp
xchg
int
idivl
adc
cli
stos
sub
mov
fildll
add
dec
jne
dec
jmp
arpl
push
adc
lret
jp
push
mov
sti
cmpsl
stos
out
lahf
mov
les
leave
shlb
lret
movsb
ss
pop
sbb
loopne
cmp
xchg
les
jbe
lret
int3
scas
cmpsl
jno
adc
fisttpl
sti
or
movsl
push
cmp
cmp
push
sbb
jge
sub
aam
add
int
add
int3
test
jle
mov
jmp
fistpll
arpl
cmp
in
push
and
fbstp
push
xchg
xrelease
push
loope
cli
sbb
push
mov
cld
jge
jne
xchg
stos
sub
sub
push
jns
cmp
cmpsl
lcall
cmp
out
dec
or
sbb
cmp
lock
add
inc
and
int3
cli
int3
inc
outsb
movsb
fs
mov
out
adc
les
adc
jecxz
gs
mov
std
mov
test
add
testb
std
repnz
sahf
cmp
outsb
stos
sub
push
cwtl
sti
pop
stos
insb
mov
cmpsl
push
nop
or
inc
scas
fldt
insl
mov
das
xchg
inc
fidivrl
xlat
sub
xchg
cmovg
idivl
ret
clc
int3
aas
sahf
mov
cmpsl
sbb
add
aas
shr
xchg
mov
dec
sbb
aaa
xchg
push
lret
mov
adc
jnp
fbstp
xchg
cmpsl
cld
adc
fs
mov
pop
test
mov
lret
jmp
push
repz
push
sub
es
mov
popa
mov
frstor
xchg
mov
xchg
in
fisubrl
push
mov
jbe
mov
gs
cmp
sarl
lea
xor
adc
mov
loopne
cmp
and
inc
cmp
inc
mov
mov
dec
jge
cs
cmc
or
jge
bound
ja
jg
pop
push
mov
mov
add
je
call
ja
lods
sbb
jle
sub
and
push
arpl
out
icebp
cmp
pop
mov
mov
stos
pop
sahf
in
cltd
add
xchg
push
mov
ud2
nop
mov
pop
push
lock
jle
int3
mov
jmp
enter
dec
iret
sbb
scas
push
cwtl
imul
aas
xchg
jp
sbb
mov
xchg
adc
cmp
ljmp
movsl
adc
out
leave
push
pop
sbb
lret
ret
xor
andl
mov
daa
call
les
sti
adc
shrb
std
and
push
xor
ljmp
loope
fwait
dec
add
push
and
and
xchg
mov
test
out
nop
inc
pop
pop
in
sbb
lea
daa
push
popa
push
test
sbb
iret
gs
inc
fnstsw
rol
add
cmp
fcomps
add
lods
lods
test
aaa
adcl
shlb
push
lret
xor
addr16
sub
insl
xchg
pop
dec
adc
adc
leave
aaa
lret
dec
mov
daa
push
and
test
xchg
hlt
rcrb
jb
xchg
movsb
jb
sbb
sbb
pop
pop
loope
xchg
jmp
nop
pop
dec
sbb
dec
mov
pop
fisubl
jbe
das
gs
sahf
loopne
bound
filds
in
sub
insl
sub
dec
xchg
repnz
mov
in
push
pop
cmpsb
loopne
lcall
push
enter
jge
mov
test
mov
mov
xor
and
insb
outsb
adc
les
jmp
add
das
pop
mov
and
sbb
sub
cmp
pop
jb
sub
dec
int
pushf
inc
dec
bound
icebp
xchg
xchg
popf
stc
fistl
icebp
js
test
arpl
stos
shrb
ret
xlat
cld
sub
mov
pushl
mov
cwtl
into
mov
mov
sahf
sbb
int
add
daa
pushf
fwait
sbb
mov
jl
push
aad
pop
pushl
std
sub
mov
roll
rcll
jmp
xor
cmpsl
mov
push
out
es
iret
pusha
inc
cmp
mov
xchg
sbb
or
pop
psrlw
or
outsb
ss
iret
jns
inc
xchg
adc
ljmp
sti
adc
or
mov
mov
jg
lock
ja
je
cmp
jnp
jns
jle
dec
ds
pop
inc
xchg
aaa
push
out
pop
clc
pushf
in
aam
aaa
lods
lea
mov
loopne
enter
enter
pop
pop
pop
mov
jmp
les
mov
imul
data16
outsb
lret
popf
fwait
popf
scas
and
pextrw
daa
jbe
cli
xor
mov
push
insl
cmc
jecxz
inc
dec
xchg
es
xchg
jl
scas
pop
inc
jno
push
stc
xor
xor
in
sbb
mov
std
push
cld
pop
mov
imul
int
sub
in
push
lea
arpl
mov
mov
pop
pop
xchg
or
xor
bound
fcompl
call
jns
jp
mov
xor
stos
shrb
test
test
cmc
fstps
pop
lods
je
mov
dec
add
xor
inc
rorl
es
pop
lret
push
bound
arpl
les
loope
mov
aam
mov
jl
cmpsl
imul
sar
loopne
jge
scas
pushf
jo
leave
imul
stos
ficompl
cmp
ret
gs
mov
lret
sbb
mov
push
dec
xlat
jle
stos
push
aas
xor
dec
imul
ja
sub
push
cmpl
pop
iret
adc
fildll
pop
and
test
scas
mov
and
mov
lds
icebp
sahf
adc
mov
mov
sti
adcb
jno
sahf
xor
jns
lret
mov
aam
mov
mov
into
enter
cli
dec
ds
pushf
cmc
es
daa
cmp
adc
mov
fstp
xor
mov
or
adc
loope
mov
or
jmp
in
add
cmpsl
jns
sbb
sub
or
ret
loop
cltd
cltd
outsb
add
xor
jae
call
and
jbe
pop
mov
test
jne
sub
pop
add
push
lcall
pop
mov
cltd
ret
xor
vmovdqa
out
sub
and
insl
fwait
and
test
add
push
inc
inc
sbb
inc
cwtl
sub
mov
shr
xchg
les
mov
jne
outsb
pop
sbb
push
jno
out
insl
repnz
pop
insb
lods
aas
cmpb
mov
shlb
shrb
mov
mov
and
push
xor
pop
sbbb
roll
mov
rclb
inc
in
inc
cltd
mov
jle
jne
sahf
lock
jge
jp
or
addr16
icebp
mov
insb
scas
and
js
roll
movsl
inc
sbb
repnz
push
call
adc
mov
sub
fisubrs
xor
bound
movsb
sti
mov
movsl
xor
ja
imul
mov
and
mov
aam
mov
mov
dec
scas
xor
jno
arpl
jns
imul
hlt
scas
inc
adc
mov
sbb
sub
jp
aas
ljmp
jne
pop
pop
mov
push
xor
push
fmull
jmp
mov
dec
cmpsl
cmp
int
das
repz
inc
xor
repnz
loop
mov
int
ljmp
lcall
push
mov
aaa
ljmp
adc
enter
jae
xor
adc
fcomip
xorb
push
cmpsb
ret
ret
lcall
and
pop
les
insl
mov
lods
and
or
je
mov
and
aas
decb
cli
aaa
lods
pop
mov
pop
aad
test
mov
cmp
inc
icebp
out
sahf
leave
ret
sbb
mov
js
add
sti
xor
inc
ret
ret
mov
jbe
push
push
cmp
scas
shrl
and
das
scas
push
add
pop
push
lods
popa
pop
aaa
std
ficoms
adc
test
lret
stos
adc
jmp
jns
mov
ljmp
les
daa
hlt
sti
push
dec
jae
sbb
mov
mov
or
gs
test
into
outsb
jns
push
xchg
out
insb
mov
jmp
jo
xor
lock
push
xchg
cmp
jmp
xor
lds
push
pop
stc
mov
ljmp
scas
sarl
fcompl
sub
dec
jo
pop
push
xchg
or
aaa
sub
jo
adc
push
call
dec
mov
and
jle
xor
push
push
push
aam
in
mov
leave
stos
repz
imul
cmpsl
jmp
add
and
xchg
add
aaa
pop
pop
imul
sbb
lods
jbe
cld
test
inc
scas
inc
inc
jo
sub
xor
mov
out
loope
js
push
jge
in
or
int
notb
push
mov
ja
stc
push
push
or
enter
push
and
mov
cmpsl
mov
in
xorb
sbb
mov
pop
push
hlt
or
imul
in
cmpb
lds
lods
dec
mov
flds
mov
dec
adc
gs
cli
cmc
insl
mov
mov
mov
dec
frstor
pop
stos
out
jno
cmp
jne
inc
cwtl
cmp
movsb
mov
and
je
or
xor
and
xor
shll
lods
pop
shll
push
add
mov
in
jp
dec
xor
jb
ret
push
out
bswap
test
in
jae
jbe
xchg
push
sub
xchg
jns
movsb
ljmp
mov
enter
mov
xor
mov
fsubrl
cmpsb
mov
mov
mov
xor
out
push
ror
cmp
xlat
and
mov
push
jnp
ljmp
push
or
mov
push
fcomps
fbld
lret
xor
or
push
pop
xchg
push
cmpsb
cs
cmp
add
cld
fwait
dec
dec
pop
sarl
push
movsb
inc
push
cltd
jmp
push
imul
pop
and
cli
push
and
inc
or
in
clc
and
call
in
lods
aas
pop
or
mov
pop
jb
push
pop
out
inc
arpl
out
mov
pop
aas
lret
xor
js
fisttpll
clc
stos
xor
or
push
stos
popf
sub
jge
jecxz
lock
mov
xchg
shrl
lea
mov
mov
cmp
fcmovne
mov
outsb
and
das
sub
sahf
insb
mov
push
repz
cmpsl
popl
adc
jnp
inc
cli
push
pop
je
add
cmc
xchg
lahf
xchg
in
int
cmp
pop
jle
xchg
xor
loopne
push
jbe
and
lret
xchg
mov
or
adc
in
in
jne
inc
ss
and
mov
dec
xchg
outsb
push
rolb
ja
mov
test
lcall
sbb
add
repz
movsl
push
and
leave
pop
outsl
mov
sbb
sarl
ljmp
rcll
pushf
mov
test
stos
jno
mov
jecxz
jne
jae
dec
ficoms
adc
int3
cmpl
xor
xchg
daa
mov
mov
es
ljmp
jl
adc
pop
repnz
test
cld
rclb
call
sarb
and
ja
das
add
dec
cs
and
mov
or
orb
ret
subl
push
repnz
cmp
in
jle
pop
or
xchg
sahf
sbb
aaa
push
mov
dec
push
in
aad
cmc
inc
and
xlat
scas
ss
add
dec
scas
jb
popa
lret
fisttpl
pop
push
cwtl
xor
in
jnp
add
push
aaa
cmpsb
pop
adc
clc
push
sbb
fisubrs
stos
jns
daa
cmp
rorl
pushf
outsb
nop
mov
test
push
mov
pop
test
out
or
xchg
mov
or
adc
xchg
adc
lcall
mov
das
fbld
mov
cltd
mov
imul
idiv
sub
loope
cmc
inc
mov
jae
lds
aad
inc
jae
dec
rorl
xor
add
and
call
sbb
push
in
loopne
dec
xchg
mov
push
fidivl
jnp
adc
scas
adc
je
fldt
or
pushf
mov
fwait
and
in
cmp
mov
jl
mov
mov
mov
mulb
xor
pop
ss
inc
mov
dec
inc
mov
mov
push
inc
inc
mov
lds
test
dec
push
or
ss
fcomp
bound
jae
pop
jnp
lock
push
push
mov
mov
xlat
pop
xchg
mov
inc
pop
jge
lahf
adc
sub
sbb
inc
mov
sub
orl
xor
cld
jl
mov
cmp
nop
inc
sbb
lahf
jnp
xor
stc
mov
push
mov
aad
int
sub
call
push
hlt
mov
xchg
mov
mov
adc
xlat
inc
push
mov
pop
jmp
mov
adc
in
sub
imul
pop
xor
fisubl
inc
lods
push
test
icebp
sahf
inc
xlat
or
fisttpll
gs
fistpll
mov
cld
aas
int3
push
repz
stos
inc
dec
xchg
subl
push
fldl
jnp
adc
xchg
leave
mov
mov
cld
shll
pop
jmp
lea
inc
push
popa
push
data16
cli
fs
jno
xor
out
sub
rolb
mov
and
int3
dec
xor
rcr
dec
popf
xchg
arpl
or
pop
cmp
fs
pop
mov
cli
inc
lcall
and
jl
xor
sti
arpl
dec
pop
mov
adc
xchg
iret
mov
loop
cmp
dec
lcall
mov
shlb
fcoms
pushl
stos
xchg
cmp
or
hlt
push
jmp
fcompl
test
inc
and
scas
push
mov
inc
out
shlb
pusha
adc
push
inc
push
push
cmp
jecxz
mov
xor
sbb
out
fisubrs
push
mov
dec
mov
and
add
arpl
xchg
jb
shrl
pop
and
mov
sub
pop
es
stos
pop
xchg
fisttpll
inc
ficompl
iret
mov
lret
jbe
test
sbb
subl
flds
fidivl
lret
in
mov
pushf
inc
rclb
jo
cmpsl
imul
sti
xlat
jmp
in
lods
rolb
bound
movl
cmpsb
sbb
and
jg
test
inc
sbb
mov
jmp
lahf
rol
outsb
test
cmpsl
andb
jnp
push
and
aas
push
push
xor
nop
ljmp
decl
dec
and
cs
pop
push
cs
and
in
pop
out
mov
shrb
push
lods
jp
lahf
shrl
fiadds
xchg
push
push
lods
push
nop
cs
in
fistl
sbb
mov
xor
mov
mov
push
push
subb
sub
insl
push
hlt
add
fwait
ljmp
movswl
scas
inc
xor
js
dec
jo
rorl
push
adc
xor
push
add
test
push
adc
jae
push
iret
add
pop
mov
repnz
dec
dec
xor
lret
inc
mov
outsl
jb
inc
sub
and
add
aas
bound
xchg
adc
mov
enter
fcomps
loope
rclb
xor
stc
ljmp
cltd
and
ds
dec
add
add
stc
hlt
int
es
or
add
dec
sub
ret
mulb
dec
pop
lret
fscale
outsl
xchg
rorb
mov
adc
inc
ss
sbb
stc
dec
dec
cmp
outsl
dec
daa
mov
ljmp
enter
outsl
rcrb
mov
add
pop
jl
or
dec
into
or
lret
and
add
cmp
outsl
lods
mov
jp
mov
js
sub
mov
aaa
aad
sub
lock
lds
xchg
push
loope
fisttpll
adc
imul
lcall
mov
fnsave
mov
fcmovbe
xor
dec
and
and
std
cmp
mov
orl
lahf
les
push
pop
loope
xor
add
mov
jae
in
cmp
push
mov
pop
xor
jno
jb
push
push
or
popf
jb
dec
mov
movl
adc
lret
cmp
xor
or
subb
sbb
add
jmp
xchg
inc
mov
stos
std
xor
add
mov
or
inc
xor
repz
insb
lods
push
es
pop
push
and
popa
cld
or
shr
pop
insl
nop
push
nop
lods
add
pop
mov
cmpsb
pop
jl
mov
cwtl
xor
inc
shrb
cltd
enter
add
test
add
pop
daa
push
loopne
cmp
sub
out
inc
fiaddl
sub
fiaddl
pop
out
push
das
lock
popa
sarl
jecxz
mov
mov
mov
push
in
jae
adc
push
jns
cli
repnz
sbb
mov
pop
lds
std
mov
cmpsb
ljmp
ror
cltd
xor
cs
mov
test
xor
test
sub
test
xor
xor
bound
push
lea
outsb
mov
inc
test
sub
cmp
sub
sahf
cld
aad
jecxz
loopne
gs
aad
sar
sti
cmpsb
and
data16
andb
fldenv
xchg
jge
jmp
mov
inc
shll
cmp
xchg
inc
mov
loope
cmp
test
adcl
jbe
pushf
shrb
test
stc
or
arpl
insl
out
xor
push
int3
lds
in
inc
pushf
lods
jl
push
mov
sub
mov
inc
bswap
cmp
cmp
xor
add
jle
cmp
mov
mov
cmc
jge
sub
rcr
fnstsw
cwtl
stos
clc
jge
mov
jg
pop
mov
jp
sti
stos
test
fmuls
cmc
and
jo
cmp
ljmp
push
fdivr
test
js
and
sub
jno
mov
xchg
mov
dec
mov
or
or
push
int3
mov
cmpsb
mov
je
int
add
fsubrl
adc
jb
mov
pop
mov
jp
test
cmpsb
add
js
out
and
arpl
sbb
push
sub
repnz
fisubrs
mov
iret
adc
js
icebp
cmp
and
mov
sbb
cmp
dec
push
push
hlt
std
jecxz
aad
pop
ret
xlat
or
mov
push
jae
mov
jecxz
aas
push
incl
adc
cmp
mov
or
test
mov
mov
jmp
add
pop
lea
andl
xchg
mov
enter
js
push
jp
mov
in
fwait
test
out
mov
es
and
or
lcall
repz
pop
insl
outsb
lcall
fwait
movsl
sbb
std
dec
bound
sti
mov
xor
sbb
or
sub
sub
scas
pop
iret
shll
mov
xor
mov
jae
jo
xor
lahf
out
jae
out
and
pushf
push
enter
mov
out
mov
xor
hlt
int
push
shr
sub
pushf
xchg
aad
int3
add
mov
xchg
sub
fwait
bound
or
push
shrl
fs
arpl
aas
lahf
push
or
ficomps
lods
clc
orl
push
jmp
addb
mov
scas
jle
inc
xchg
jl
test
int
adc
imul
pop
aas
jecxz
xlat
add
pop
adc
jg
mov
sbb
push
ret
inc
sbb
mov
dec
push
pop
imul
dec
xor
cwtl
lock
inc
jg
inc
lods
in
mov
sti
insb
fldenv
xor
mov
insb
sub
leave
jnp
xchg
sbb
cli
jp
lods
adc
and
or
xchg
and
fmuls
or
bound
lahf
jecxz
pop
das
hlt
mov
out
fldcw
ret
push
fisttpl
pop
shrb
add
and
sub
cmp
mov
jb
xchg
aad
mov
inc
mov
jle
sbb
jmp
iret
fwait
jmp
rorl
imul
scas
or
mov
dec
lock
dec
mov
mov
shr
inc
lock
xchg
mov
push
andl
stos
sub
cmp
add
xor
outsl
out
ss
sub
push
sub
cmpsl
cmp
imul
scas
dec
xor
lods
and
or
out
inc
mov
jl
adc
mov
mov
jle
cmp
sarl
lods
loope
mov
or
mov
fsubrl
jge
sbb
pop
fildl
lret
dec
jae
filds
xchg
lock
dec
loopne
out
cld
cmp
enter
push
lret
dec
andb
fcomps
dec
pop
outsb
out
ret
cmpsb
xlat
clc
dec
jbe
movsl
imul
test
stos
mov
dec
mov
mov
cmp
jge
roll
sub
aam
sub
test
stos
mov
loopne
mov
shll
cwtl
inc
out
jo
cmpsb
inc
jbe
int
imul
lock
pusha
aaa
lods
pop
das
jge
mov
or
xchg
dec
js
inc
in
popl
pusha
aad
jae
inc
jecxz
mov
or
dec
push
rcll
cmp
arpl
cmpsb
scas
sub
jbe
xchg
aaa
packsswb
mov
xchg
insl
ljmp
in
mulb
insb
lahf
add
push
arpl
fs
ss
xchg
jno
cmpxchg
push
inc
mov
hlt
lods
jecxz
pushf
out
sti
jb
inc
mov
stos
fidivrl
loopne
stos
mov
mov
clc
sub
push
pop
xchg
pop
cli
stos
mov
add
pop
test
sub
cmc
add
std
pop
out
pop
dec
int
cmpsl
or
ret
int3
mov
xchg
lds
pop
cld
out
mov
sbb
das
mov
sbb
sbb
mov
dec
lahf
fxch
or
cmpb
insl
pop
jno
adc
shr
std
loopne
push
arpl
fmul
ret
xor
xchg
shll
inc
add
dec
shlb
or
sub
bound
adc
and
xchg
es
pop
add
frndint
adc
inc
aam
adc
xlat
push
xor
pop
cmp
xor
mov
js
pushf
sub
adc
push
push
ret
push
inc
fldenv
stc
push
mov
and
les
xorb
stos
gs
or
mov
dec
mov
jmp
cmp
or
or
adc
std
adc
inc
lods
lea
sbb
push
mov
sbbb
or
xor
and
cwtl
jmp
cmp
scas
xchg
sarb
lcall
pop
xor
sbb
jl
and
in
ret
outsl
push
cli
in
inc
paddb
es
pop
add
pop
xor
xor
jmp
xchg
mov
mov
stos
call
cmc
jge
cwtl
adc
mov
sub
adc
divb
js
jmp
xlat
clc
pop
cmpsl
sahf
dec
addl
sar
xor
lcall
in
or
jb
pusha
or
je
shrl
cs
frstor
repz
jno
icebp
mov
pusha
loopne
add
jmp
dec
sti
push
stc
xchg
sbb
xlat
enter
fbld
clc
xor
inc
mov
xchg
lds
lcall
mov
jg
filds
mov
andb
out
insb
cmc
cmp
daa
mov
loop
loope
xchg
roll
lret
xchg
xor
pop
pop
cs
xchg
mov
lret
in
push
mov
pop
std
mov
dec
adc
pop
dec
push
insb
mov
fisttps
movsb
dec
pop
mov
push
xchg
fisubrl
mov
mov
dec
xchg
lret
xorb
inc
setnp
mov
jl
push
iret
mov
mov
dec
xchg
jb
inc
inc
dec
icebp
int
push
and
pop
mov
lods
mov
pop
push
sub
out
dec
rol
dec
in
inc
pop
push
mov
stc
and
adc
sub
jl
cs
xchg
push
or
push
enter
sbb
xchg
pop
mov
push
mov
pop
mov
popf
adc
mov
jge
in
jmp
cmpsl
js
cmp
sub
outsb
dec
outsb
jl
jg
xchg
aaa
sbb
sub
out
push
or
push
fwait
and
in
cmp
xchg
fists
pop
xchg
in
add
xor
push
aad
xchg
les
mov
mov
repnz
xor
test
pop
add
insb
sub
bound
mov
jbe
pushw
leave
out
push
inc
sub
pop
pop
ret
and
sbbb
xchg
adc
adc
pop
cmp
push
sbb
insl
xor
out
inc
je
jbe
out
int
xor
addl
sti
shl
jecxz
test
fisubs
cmpsl
sbb
xchg
mov
ror
adc
stos
adc
mov
ja
ljmp
sahf
push
inc
lock
sub
popa
aas
xor
sbb
mov
clc
jl
in
in
fs
subl
mov
mov
sahf
xor
push
enter
sbb
mov
cltd
aad
xor
insb
fwait
adc
push
push
shlb
xchg
cli
in
or
adc
push
adc
loopne
notb
xchg
xchg
jae
add
jne
int
push
sub
push
inc
aas
fisubrs
rcrl
xlat
in
mov
pop
xor
in
daa
js
sti
xchg
std
mov
js
in
push
insb
cmp
adcl
test
push
pop
test
clc
xchg
inc
mov
pop
rolb
sbbl
imul
mov
jns
repnz
xchg
or
call
lret
dec
enter
iret
sub
into
sahf
pusha
es
jne
sub
jb
in
hlt
pushf
insb
adc
dec
cli
pop
fs
cmpsb
lcall
cmp
movsl
loope
jle
inc
sbb
xchg
fwait
cmpsb
add
repz
push
mov
test
push
jmp
sub
les
adc
xchg
stc
adc
into
mov
jl
aas
in
fsubs
mov
iret
cmp
cs
push
lods
cmp
arpl
and
dec
ret
pop
mov
out
mov
push
rorl
dec
push
movl
mov
dec
mov
mov
loope
jmp
push
sbb
lcall
sahf
xchg
js
lods
sbb
and
or
arpl
in
lods
sub
cld
and
hlt
sbb
ss
and
and
xchg
mov
ds
lahf
leave
mov
sbb
pusha
test
push
xor
jmp
inc
ficoms
jns
inc
mov
mov
in
mov
jne
cmp
imul
xchg
fmul
pushf
sub
ffree
xchg
sbb
cs
mov
jge
and
aad
pop
popf
fcoml
xor
jbe
fsts
insl
mov
ja
cmp
lcall
jge
cs
loope
test
out
mov
lcall
pop
push
cmp
lock
aaa
adc
mov
loope
mov
dec
test
mov
dec
mov
or
flds
in
cltd
or
lods
repz
jle
icebp
imul
cld
mov
mov
dec
inc
f2xm1
jmp
fstps
rolb
lods
pop
ljmp
fsubl
push
hlt
inc
xchg
bound
out
pop
aam
daa
pushf
push
lret
rcl
cmp
push
leave
xchg
cmp
sbb
popa
sbb
cmp
cs
dec
cmp
movsb
and
xchg
xlat
sub
jo
adc
fnstsw
cld
lods
push
loopne
pop
mov
adc
cwtl
fsubl
cmp
inc
push
cmc
add
push
ss
bound
adc
and
cmp
imul
jl
shll
cli
inc
inc
loope
jmp
out
jae
hlt
lret
xchg
add
sub
xor
mov
pop
sarl
out
sbb
xchg
jp
sub
loope
sahf
jl
and
pop
dec
push
mov
lods
mov
popa
jb
inc
leave
dec
fwait
adc
pop
mov
mov
adc
scas
mov
xor
mov
mov
jle
into
push
push
pushf
push
out
rolb
mov
addl
aaa
test
adc
xchg
call
push
andb
or
aad
adc
lods
fisubrl
test
mov
add
imul
mov
ret
or
mov
sbb
lds
sub
dec
lcall
bnd
inc
ffree
rorb
jmp
fistl
sahf
or
mov
sbb
movsb
adc
inc
sbb
rcrl
mov
lods
inc
cmp
adc
xor
sub
sbb
in
xchg
test
dec
xorb
pop
pop
cmp
loop
inc
je
sub
andb
xchg
shrb
mov
pop
es
mov
shll
lret
pop
sub
mov
sub
or
repz
cmp
int
mov
mov
lds
aas
and
add
scas
arpl
es
out
rdmsr
les
dec
and
stos
addr16
mov
or
test
lods
lret
push
repnz
fs
xchg
subl
iret
pop
add
int3
add
divb
xchg
jb
shlb
xchg
leave
dec
ret
pusha
je
sub
mov
push
clc
shl
cmpl
mov
pushf
jo
addr16
std
push
stc
adc
stc
xor
xchg
test
and
outsb
cmp
cli
cld
sti
inc
aas
lret
pop
test
loope
js
jns
in
dec
push
movsb
inc
jp
jnp
pop
sti
cli
cltd
xlat
add
sbb
mov
popa
movsl
aaa
test
jmp
jb
movsl
jb
es
aad
sahf
sub
daa
sbb
repz
adc
lea
addr16
dec
xor
push
inc
dec
fsubrp
inc
ret
jns
adc
lods
dec
xor
sbb
xor
mov
jp
sbb
mov
imul
ds
inc
std
idiv
inc
xorl
xchg
xchg
adc
insl
push
adc
mov
fldln2
jne
daa
dec
pop
sub
push
mov
add
cmc
lahf
add
lret
in
bound
pop
inc
imul
push
sbb
lods
xlat
arpl
loopne
test
adc
sbbl
les
leave
jae
and
test
push
mov
sub
and
and
lods
in
insb
add
sbb
mov
dec
adc
lahf
or
sbb
bound
jg
jmp
push
mov
sub
cmp
mov
setne
jbe
daa
test
and
fstl
dec
lds
hlt
or
lock
inc
push
fstps
lds
pop
sahf
mov
push
pop
aas
icebp
mov
stos
aad
out
cmpsl
and
push
pop
test
sbb
push
xlat
negb
push
call
sbb
xor
movsl
nop
sub
push
scas
mov
fldenv
in
repz
mov
jnp
not
arpl
lock
icebp
push
int
dec
or
fsubr
mov
add
mov
gs
iret
inc
leave
cmp
pop
lods
rcll
in
mov
or
jg
pop
push
jo
mov
int3
call
or
jnp
test
and
jnp
add
push
push
pop
lcall
test
fcompl
loopne
in
xor
ja
lods
vphaddwq
icebp
in
fisttps
ret
dec
adc
push
je
mov
into
andb
addr16
mov
sbb
rolb
mov
fldcw
cmpsb
outsl
xchg
pop
rcr
pushl
xchg
push
cmp
jecxz
xor
mov
out
mov
sub
out
sub
out
inc
aaa
fsubrp
out
gs
mov
fs
cmpsb
lods
xchg
mov
cmp
ja
xchg
in
lcall
gs
pop
ss
mov
ds
mov
cmp
ret
sub
sbb
mov
pop
incb
fstps
fwait
rolb
mov
sbb
jg
sbb
clc
xor
fs
out
dec
adc
out
mov
mov
out
xchg
adcb
cmp
sub
insl
push
cltd
mov
add
sbb
mov
inc
push
dec
pop
aas
aas
pushf
mov
push
int3
pop
mov
adc
mov
adc
shll
ja
or
mov
dec
sub
aam
outsl
pop
insb
push
int3
push
outsl
and
mov
lret
and
nop
subb
mov
ret
leave
cmp
adc
dec
pop
pop
or
outsb
aam
ffreep
mov
or
xchg
in
out
jg
pop
cltd
or
insl
negb
hlt
stos
js
dec
mov
xorl
add
add
or
ss
js,pt
mov
cld
lock
movsl
idivb
insl
cli
add
stc
ffree
jnp
and
leave
dec
data16
mov
js
and
cmp
mov
push
mov
push
mov
int3
aaa
stos
or
inc
outsl
or
movsb
add
push
lds
xor
push
pop
push
ret
loopne
lods
mov
push
cs
leave
xchg
push
adc
xchg
xchg
push
jne
mov
mov
or
cmp
jg
xchg
mov
adc
idiv
push
data16
ja
testb
mov
stos
aad
ljmp
outsb
and
push
push
xchg
dec
push
fildl
lcall
loopne
aaa
add
test
hlt
lcall
xchg
sub
jo
out
and
sarb
movsb
push
cmp
hlt
bound
jne
mov
mov
mov
or
push
cmp
cmc
jno
ret
das
addl
cmpsl
and
mov
jle
test
scas
xchg
adc
enter
inc
cmpsl
sub
mov
lock
in
scas
mov
sub
xchg
xchg
jbe
je
adc
pop
jns
ja
sub
in
push
jge
jno
pop
sbb
pop
add
rcll
mov
into
jae
cs
mov
jb
sub
movsl
jo
jo
jnp
mov
jle
cmc
xchg
arpl
enter
in
mov
imul
mov
js
push
sahf
outsl
cmp
push
mov
sub
imul
xchg
adc
rorl
jg
nop
add
and
das
push
inc
repnz
push
and
sbb
xor
jg
gs
sbb
int
xor
mov
inc
push
or
sbb
mov
xchg
in
or
add
jnp
jmp
icebp
push
or
fidivrl
mov
int
sarb
push
outsb
stc
lret
dec
std
cmp
mov
fisttpl
rolb
arpl
f2xm1
add
inc
push
sbb
jge
test
fimull
fistl
dec
or
mov
push
sarl
imul
cli
or
popf
sahf
hlt
mov
mov
cmp
mov
pop
in
cli
movsb
les
jecxz
pushf
and
sub
push
xor
or
iret
and
dec
xlat
stos
lods
inc
scas
cltd
mov
and
mov
lods
cli
sbb
mov
out
nop
mov
mov
fsubrs
in
cmp
lret
mov
rcr
and
mov
push
or
es
fwait
sarb
mov
cmpsl
popf
cli
dec
aam
jbe
lods
je
jg
gs
ljmp
out
pop
sub
inc
pop
xlat
cmpsb
mov
cmp
in
mov
push
mov
push
xchg
cwtl
loopne
or
or
hlt
call
test
fucom
push
dec
cs
imul
testb
setle
out
out
cli
add
mov
bound
cmp
sahf
mov
sbb
adc
add
cltd
push
dec
clc
jp
std
scas
in
pop
mov
push
scas
mov
repz
pushf
cld
mov
mov
xor
testb
xchg
mov
mov
in
or
in
sbb
ds
lods
mov
jno
mov
iret
fsubrp
push
xchg
sbb
movsl
lds
push
cs
inc
mov
loope
sbb
or
jmp
xchg
xchg
rcl
cmp
aad
pop
mov
std
fcoms
push
sti
iret
or
xchg
cmp
or
into
and
ret
jb
mov
es
lea
cmpsl
mov
in
mov
mov
or
xor
pop
fwait
push
lea
stos
pusha
gs
insl
inc
lret
sub
outsb
sbb
gs
test
push
xor
jns
jno
fcoms
lret
and
gs
mov
in
dec
push
fisttpll
xchg
pop
cmp
leave
jne
mov
mov
in
in
pusha
xlat
iret
fwait
sarl
push
sti
xchg
loopne
jb
mov
xchg
push
repz
xchg
sahf
xlat
test
cltd
push
xlat
xchg
and
ret
push
das
xor
cld
les
ss
pop
inc
push
jno
xor
push
or
out
pushf
aaa
push
xor
inc
mov
call
xor
popa
mov
cld
test
inc
inc
lahf
loopne
inc
add
ret
push
and
cmp
add
test
xor
ret
push
push
hlt
sub
pinsrw
std
arpl
cmpsb
jge
mov
bound
in
icebp
insb
jp
push
xchg
rol
xor
xor
js
mov
insb
xor
cmpsl
adc
icebp
pop
inc
push
or
in
js
inc
imul
addr16
sbb
rorb
or
push
imul
pop
mov
dec
gs
mov
adcl
pop
xchg
add
push
push
test
sti
int
xor
xchg
mov
xchg
sarb
dec
clc
out
cli
stos
adc
mov
jle
testb
popf
ss
push
push
call
push
mov
cmc
ja
outsb
ret
aad
stc
xchg
push
ja
xor
add
popf
icebp
pop
repnz
adc
test
aaa
mov
fnstenv
add
in
in
and
fwait
mov
and
add
test
cmp
fstp
movsl
xor
sub
subl
push
sbbl
mov
push
mov
mov
pop
hlt
add
jae
jmp
ss
subb
sbb
mov
jnp
sub
popa
stos
pop
sub
mov
pop
sbb
into
jnp
and
call
je
test
adc
bound
lds
out
fsubrs
and
adc
cmp
out
rclb
push
cmpsl
add
rcrb
test
inc
pop
repnz
mov
dec
les
dec
je
pop
outsl
push
movsl
cmp
call
mov
stc
nop
dec
clc
push
mov
dec
insl
fwait
mov
test
flds
cld
push
roll
mov
cmp
call
ljmp
adc
movsl
pop
dec
push
jo
jne
enter
add
cmp
fwait
cmc
loop
outsl
push
push
mov
cs
sub
pop
hlt
xchg
stos
lcall
mov
mov
sub
xor
daa
cmpsb
cmp
out
xchg
pop
fisubrs
test
push
add
mov
mov
paddsw
mov
repz
movsb
sti
add
scas
cmp
rol
and
adc
lds
inc
loope
insb
cwtl
cwtl
fldt
ret
or
scas
cmp
lret
xchg
dec
cmp
add
cmp
jno
aad
inc
cmp
jg
add
out
xchg
push
sub
pop
jnp
and
pop
rep
jnp
or
or
out
and
hlt
mov
data16
xchg
cmp
sbbb
loope
sub
or
in
nop
sub
mov
adc
enter
scas
jb
loope
in
testl
adc
sub
imul
enter
sti
adc
outsb
dec
jbe
adc
ret
insl
mul
and
cmc
cltd
sbb
vpaddd
sarl
int3
cwtl
fmul
pop
loop
jae
into
adc
lods
xchg
subb
jg
js
add
je
jb
lea
pop
sub
xchg
aaa
sahf
popf
in
pop
xchg
enter
mov
or
cmp
lahf
sbb
mov
mov
inc
sub
sbb
sbb
xor
mov
enter
xchg
cmp
adc
cltd
or
add
jnp
push
jmp
cmc
add
mov
adc
jmp
gs
fwait
je
faddl
jle
push
cmpsb
cmc
cmpsl
or
dec
jbe
mov
push
call
mov
lret
test
sahf
shrb
cwtl
jg
mov
xor
test
pop
lea
dec
fwait
sbb
cld
pop
les
mov
das
in
pop
sub
popf
pop
inc
enter
fadds
adc
repnz
push
or
push
push
adc
adc
mov
es
in
jl
dec
das
and
sub
jg
xchg
pop
stc
repz
jns
clc
xchg
mov
pop
les
and
add
lods
test
mov
mov
js
xchg
loope
fcmove
add
mov
xchg
outsl
jl
jb
cmp
and
fstps
mov
xchg
dec
lea
insl
mov
mov
shll
ret
pop
sbb
and
sbb
xlat
mov
mov
sub
cmp
xor
sbb
dec
or
stc
imul
fcomip
test
xchg
mov
lea
and
outsb
fisttpll
loopne
out
mov
adc
mov
ffreep
enter
popf
push
daa
ffree
movsl
pop
adc
out
mov
fnsave
mov
ret
or
std
jae
and
das
aaa
cwtl
dec
add
mov
jl
push
and
mov
mov
jle
xchg
mov
jns
cmp
shl
jbe
xchg
dec
fcompl
cmpb
inc
dec
loopne
pop
lret
xchg
and
cmpsl
inc
imul
dec
cmc
shll
pop
jge
lds
lcall
push
js
sub
jbe
arpl
mov
xchg
out
ret
mov
adc
dec
ljmp
in
pushf
sub
sbb
cmp
enter
add
clc
push
cs
mov
fwait
jns
lret
bnd
scas
mov
sbb
lcall
xchg
ret
jecxz
fwait
cli
push
scas
push
push
je
jle
jb
test
mov
adc
push
add
lahf
js
insb
adc
cwtl
and
jecxz
mov
sbb
jne
addr16
jp
add
mov
cmc
sbb
mov
xchg
pop
cltd
fistpll
mov
int3
lods
out
loopne
repnz
jne
int3
adc
cwtl
lret
mov
pop
or
mov
pop
in
push
arpl
inc
ret
shll
sar
rol
adc
lahf
mov
mov
inc
mov
fwait
and
clc
out
add
mov
pop
lcall
in
cmp
cld
pop
and
in
push
fucom
in
pusha
arpl
test
cld
xor
mov
xor
sbb
mov
pusha
stos
and
daa
repnz
xlat
cltd
cmp
xor
sub
and
lcall
mov
mov
mov
gs
ficoms
mov
repz
mov
jmp
mov
int3
cmp
insb
imul
dec
lods
dec
popf
daa
subl
mov
jns
push
pop
xchg
and
data16
sbb
cmp
push
and
pusha
jne
addr16
das
ljmp
mov
stos
ljmp
sbb
adc
sbb
sbb
loopne
and
dec
loopne
mov
cmp
flds
insb
popa
out
push
inc
or
xor
push
xchg
aas
xor
int3
gs
adc
ds
es
ja
ret
jg
loope
stos
mov
dec
push
push
mov
pop
mov
lahf
leave
sarl
sub
mov
fwait
shll
xchg
cli
cmp
ret
add
cwtl
jnp
bound
push
cmp
jecxz
and
adc
dec
dec
add
shlb
rolb
pop
mov
cmpsl
xlat
and
dec
adc
pop
push
adc
sarl
mov
scas
inc
das
andb
and
lea
daa
or
mov
fsubrl
pusha
loopne
outsl
pop
scas
out
aad
and
leave
dec
adc
or
push
adc
stos
xor
insl
xchg
adc
cmpsb
ds
jae
iret
dec
dec
jp
push
sub
inc
push
xchg
dec
sbb
mov
cli
jo
xchg
add
adc
sub
pushf
add
stc
dec
push
cli
inc
test
push
and
pop
and
xor
out
xor
aam
mov
ja
aam
mov
fs
mov
cld
lock
aam
push
adc
out
xor
and
cmpsb
mov
dec
cmp
iret
dec
jmp
mov
pop
jo
inc
mov
scas
push
ja
cwtl
sub
push
pop
push
and
mov
fstpt
sbb
jge
cmp
xchg
xchg
push
cmp
adc
push
repnz
int
stos
fldl
sahf
repz
scas
push
lcall
inc
push
xchg
fs
cmp
push
pminub
fxch
lret
jg
aaa
fmul
rcrl
xchg
into
dec
pop
popf
inc
je
or
loop
jp
movsb
mov
and
cwtl
dec
mov
mov
mov
mov
sarb
repz
pushf
ljmp
mov
lahf
gs
mov
fsubrp
pusha
pop
bnd
pop
stc
pop
push
cmp
sub
inc
xchg
mov
jae
cwtl
push
out
adcl
lods
pop
push
bnd
sti
nop
pop
repz
fs
insb
pop
ss
inc
outsl
xchg
cmpsb
dec
mov
push
cmc
in
lock
fisttps
stc
pop
adc
ret
pop
mov
cwtl
xor
sub
mov
dec
xchg
push
outsb
lcall
mov
cs
jnp
into
mov
adc
dec
cmpsb
lahf
and
cmp
insb
sbb
popa
mov
ret
mov
imul
sarl
sub
lcall
scas
js
dec
mov
xchg
clc
fwait
out
pop
mov
rcll
mov
mov
neg
outsb
jae
loope
sub
xor
jle
push
pop
cmpsl
and
push
and
or
inc
std
cwtl
lock
sub
iret
call
lret
dec
jge
pushf
sbbl
aad
movl
lods
ret
mov
in
insb
xor
ret
and
mov
mov
idivl
jle
dec
fsub
or
mov
push
jmp
aas
jl
jmp
mov
cmpl
dec
movsl
and
mov
adc
xchg
rclb
dec
out
adc
into
aas
cmp
mov
pop
pop
xlat
out
lea
insb
les
in
sbbl
sbb
push
andl
jbe
enter
xchg
pop
gs
imul
bound
in
or
loop
aad
sbb
push
es
in
imul
cmpsl
pushf
sub
mov
cmpsb
inc
ret
das
movsb
test
imul
or
pop
repz
mov
es
iret
xchg
and
fadd
push
pop
imul
pop
mov
xchg
loope
mov
ret
int3
loop
add
dec
inc
ret
push
sbb
xchg
fs
mov
dec
adcb
or
sub
lcall
in
in
inc
arpl
cltd
out
data16
stos
cwtl
movsl
dec
test
jno
cmp
dec
lret
sbb
or
inc
les
cmpsl
aaa
popf
les
insb
aaa
lcall
add
sarl
in
les
or
insb
aam
mov
icebp
mov
cmpsl
loopne
loopne
je
addr16
mov
fcoml
movsl
aaa
loopne
xchg
loopne
add
loope
sbb
xchg
cli
push
jg
mov
sbb
mov
fmulp
jg
outsl
cmp
imul
and
dec
mov
xchg
add
ja
fnstenv
adc
sub
push
jge
fbld
xor
loopne
addr16
dec
jno
xor
fcmovne
orb
es
lods
div
lods
lock
in
sarl
imul
cmp
scas
insb
xor
cs
fmuls
sbb
mov
and
imul
adc
pop
call
movsb
leave
pop
jbe
or
dec
pop
adc
mov
sbb
sbb
cmp
scas
sbb
ss
fsts
sbb
out
push
loope
cmp
repz
js
addr16
lock
and
push
js
jae
lock
lret
sbb
dec
inc
test
enter
rol
ds
sub
arpl
in
xorl
add
push
fisttps
mov
push
jb
out
add
xor
cld
out
loopne
mov
rcrb
cmp
daa
lcall
scas
mov
jb
insl
fnstsw
jp
in
scas
cld
inc
push
lret
adc
jg
call
mov
inc
repnz
jecxz
mov
lock
mov
clc
jmp
mov
test
mov
push
or
into
cmpsl
pop
mov
call
ss
rolb
sbb
lret
and
add
fldenv
and
xor
push
and
mov
add
cli
jle
js
mov
and
mov
jb
jb
cmpsl
into
sub
sbb
mov
fmull
mov
data16
mov
and
rcrb
xchg
inc
mov
jge
mov
int
ret
pop
push
mov
test
jne
cld
or
jne
outsb
in
rclb
lcall
lret
es
mov
adc
loopne
bound
cmpsb
rorb
stc
loop
shrl
jle
xchg
fimull
out
xchg
pusha
je
fs
out
mov
sbb
jmp
ret
add
int3
jae
jns
xor
mov
cmp
and
clc
xchg
xor
add
jle
sub
adc
pop
lahf
sbb
cmpsb
aas
jb
xchg
cmp
and
lret
orl
fstps
or
pop
sti
sub
add
out
repnz
jg
and
adc
cmpsl
imul
movsl
xchg
pop
push
mov
or
in
inc
andb
or
frstor
and
enter
cmpsb
add
xor
pusha
fs
stos
lret
and
xchg
and
sbb
dec
mov
mov
popa
movsb
or
inc
inc
mov
push
ja
movsb
arpl
gs
test
cmpsb
sbb
xchg
push
add
iret
popa
popf
js
nop
pop
xor
add
outsl
ljmp
jnp
pop
adc
aas
fisttpl
or
lcall
mov
xor
in
add
ret
cmp
adc
dec
mov
push
pop
jg
adc
fcomps
je
jo
lret
cmc
addr16
xor
adc
xchg
sbb
cld
mov
aam
out
cmpsl
mov
push
mov
pusha
mov
mov
cmp
jno
xor
push
xchg
cld
xor
pop
gs
hlt
push
mov
nop
rcrb
insb
movsb
movsb
pop
and
es
mov
lret
adc
xchg
stos
dec
and
mov
mov
push
jb
xchg
or
jo
daa
pop
push
add
jns
and
enter
dec
pop
filds
push
push
mov
lret
ljmpw
lcall
shrb
int
jl
sti
stc
and
stos
inc
vmwrite
push
adc
lcall
in
mov
push
lcall
lcall
mov
add
and
push
stc
aaa
dec
mov
and
pop
into
mov
rcl
ja
push
mov
inc
fucompp
and
lods
mov
aam
jge
call
xor
sbb
push
ss
lds
outsl
rcr
mov
in
sbb
mulb
test
cmp
sahf
popa
push
and
add
jo
xchg
jge
sarl
xor
push
loope
jno
jmp
jno
aad
or
mov
adc
std
int3
std
stos
push
xchg
loopne
lea
stc
sub
mov
sbb
in
addr16
aad
push
bound
clc
aas
adc
and
inc
push
inc
pop
repnz
aaa
fisubl
mov
jae
xor
test
cmp
ss
in
bound
andl
lds
push
test
cmpsb
mov
movl
jl
in
push
and
rolb
pop
std
test
adcl
jp
and
push
xor
xor
shlb
push
loop
call
xchg
leave
cmpsb
cmpsl
lret
pusha
mov
rcll
fcmovnu
add
dec
xor
and
cs
cltd
pushf
dec
cmp
push
into
mov
mov
pop
fldt
out
imul
cwtl
lds
sbb
sub
mov
jnp
nop
jp
push
cmpsb
addr16
fwait
ljmp
lods
mov
push
clc
xlat
cmp
push
daa
ds
jnp
or
rorl
mov
adc
stc
lods
pusha
cmc
or
sub
mov
and
push
stc
xor
push
mov
pop
mov
cmpsl
lock
aam
adc
push
mov
or
push
xchg
mov
cs
lds
ror
jb
dec
push
fsubp
pop
arpl
xchg
sub
or
loopne
sbb
inc
outsl
aam
scas
mov
lods
jp
xchg
lcall
xchg
bound
jbe
test
add
sub
outsl
dec
lods
push
out
pop
sbb
out
pop
inc
imul
je
mov
dec
std
subb
pop
jb
icebp
jb
insb
popa
add
xchg
outsl
lea
pushl
pop
outsb
pop
into
add
fdivrs
aaa
dec
fdivl
xchg
push
mov
jno
jbe
adc
add
add
or
mov
mov
lods
sbb
inc
or
mov
cmpsb
fstpl
push
das
pop
and
rcl
mov
or
mov
push
dec
cmp
mov
xchg
shrl
ret
scas
jecxz
inc
loopne
sbb
adc
shlb
and
mov
push
aas
jge
pop
pop
xchg
cltd
or
test
popf
int3
jmp
cs
xchg
xor
xchg
push
jp
imull
pop
inc
mov
stos
in
loop
pushf
nop
imul
pop
inc
push
cmc
mov
dec
adc
cmp
cmp
mov
icebp
negl
xlat
dec
ds
lock
adc
cmp
scas
ja
add
daa
and
lea
subl
jl
lcall
inc
sub
adc
inc
out
les
pop
arpl
or
fldl
aad
mov
clc
lret
inc
movb
jecxz
loopne
in
imul
sub
lahf
dec
fcom
jo
lcall
in
aaa
mov
stc
xor
gs
insl
jle
pop
and
popa
test
or
jno
idiv
scas
sub
insl
mov
cmp
add
movsb
aaa
xor
xor
lods
jb
aad
inc
fdivr
mov
mov
push
movsl
jp
das
push
sub
sub
orl
pop
jo
xor
mov
xor
cmp
sarb
sub
mull
mov
jb
imul
pop
add
fimuls
adc
sub
movsl
xor
cmp
nop
xor
cs
rep
outsb
mov
into
adc
mov
add
sarl
pop
push
mov
xchg
fdivrl
dec
jecxz
aaa
lret
mov
popa
das
sbb
xchg
pop
adc
mov
mov
clc
xor
mov
sahf
scas
push
scas
sub
mov
jecxz
mov
mov
mov
jmp
jo
adcl
jmp
cwtl
addr16
out
in
xor
pop
into
xchg
aam
push
out
mov
add
prefetcht2
imul
int3
dec
lock
in
push
outsb
sub
or
or
push
fdivrp
lahf
mov
in
aad
mov
xchg
mov
sub
and
jecxz
movsb
out
jl
and
adc
xor
lcall
clc
addr16
test
jl
out
sbb
rcrb
shrl
ja
pop
je
nop
das
sub
clc
jne
jne
xor
cs
pop
mov
mov
push
pushf
pusha
mov
stos
int3
loope
cmp
arpl
leave
jmp
cmp
add
mov
sub
insl
push
inc
cli
mov
lret
fcoms
cld
bound
aaa
pop
pushf
pusha
add
call
pop
je
in
out
nop
in
clc
imul
or
dec
jg
mov
test
add
inc
adc
jnp
loop
sub
out
push
or
sub
lds
adc
nop
ret
and
lcall
pop
push
mov
mov
xchg
push
jecxz
xchg
pop
push
sbb
xchg
test
jo
lock
push
lds
add
sub
clc
sbb
cltd
dec
pop
aad
cmp
add
lret
jae
mov
mov
imul
dec
popa
sbb
jg
mov
mov
fistps
push
decl
lods
or
insb
xlat
dec
rolb
mov
dec
popa
cli
leave
fcomi
or
scas
push
in
clc
cmpsl
lds
mov
and
pop
pop
sub
das
lret
sahf
ja,pn
fwait
xor
popf
out
out
stos
loop
int
clc
inc
jecxz
sti
stos
mov
mov
movsl
sbb
sub
sub
jp
lahf
dec
jae
inc
cmc
sbb
lret
leave
std
jb
scas
push
sub
sub
mov
jns
xchg
jb
mov
mov
sub
insl
dec
inc
or
lds
mov
movsl
mov
maxps
dec
movsb
decl
sbb
rcrb
gs
notl
mov
les
cmp
jmp
movsb
xchg
into
mov
mov
cmp
xor
mov
in
fildl
in
add
xchg
ret
push
sbb
pop
xlat
out
adc
sbb
add
aas
mov
fldenv
notb
and
leave
and
pop
dec
or
push
out
mov
shll
cmp
xchg
lahf
in
mov
mov
es
fldl
jo
imul
mov
jb
mulb
pop
outsb
cmp
mov
repnz
add
sbb
or
lret
aad
xor
xor
insb
bound
cmp
insb
fildl
add
jl
dec
orl
push
movsb
dec
jno
mov
mov
push
add
push
dec
push
and
out
jmp
sub
inc
dec
mov
inc
push
and
sub
rclb
push
and
mov
test
or
pop
dec
ds
fadds
lret
adc
pushf
fsubrl
inc
lods
lcall
mov
data16
pop
mov
dec
sub
and
or
xor
cmp
sub
js
out
loop
int3
je
jmp
je
adc
cmp
fdivp
mov
xor
jno
jmp
shll
inc
imul
repnz
push
test
lret
dec
xchg
ret
jg
ljmp
jno
xor
xor
cmp
ror
adc
jbe
imul
in
pusha
sbb
mov
dec
adcl
pop
and
stos
fs
cld
movsb
sub
loopne
enter
cltd
mov
push
inc
adc
in
pushf
dec
stos
mov
xchg
int
jo
loopne
ja
arpl
inc
sub
xchg
cmp
xor
xorb
aad
lret
pop
mov
add
sti
adc
dec
mov
inc
cmpsl
dec
fcmovu
movsl
hlt
inc
mov
sbb
inc
sbb
sahf
xchg
out
cmp
or
int3
add
xchg
into
movsb
mov
ljmp
mov
in
stos
mov
jp
das
cli
inc
mov
inc
movsl
divb
addr16
movl
adc
pop
les
ss
shlb
fnstcw
pusha
loope
imul
sti
mov
int
loop
cli
fildl
mov
or
insb
fnstcw
movsb
mov
jecxz
xchg
add
mov
test
fdiv
mov
pop
lcall
rorb
hlt
jmp
and
loop
xor
pop
lahf
pop
mov
sub
inc
dec
add
mov
inc
xor
cmp
sub
or
or
and
adc
inc
cmpsb
xchg
push
lods
rol
test
out
fs
mov
faddl
in
inc
or
pop
and
sarb
push
xor
sahf
push
fimuls
jnp
test
enter
mov
je
ret
xor
repz
pop
adc
andb
test
mov
loop
les
lods
mov
stos
adc
push
pusha
sahf
repz
mov
cmp
loopne
and
mov
inc
inc
testb
cmp
gs
jbe
inc
lea
xor
pop
mov
mov
mov
or
jno
push
pop
jno
hlt
dec
mov
dec
popa
shlb
scas
out
mov
dec
inc
in
sbb
push
xor
add
jb
xor
iret
pop
and
cmc
shrb
xchg
and
lret
mov
mov
and
jg
pop
mov
mov
sti
add
push
xlat
repnz
inc
jg
or
adc
repnz
xchg
cmp
dec
ficoml
lods
push
adc
push
cwtl
dec
outsl
jo
ret
es
sbb
loopne
push
push
sub
or
add
sbb
insb
andb
loopne
inc
push
xchg
xchg
mov
mov
out
test
je
fstpl
dec
push
pop
sub
and
daa
cld
jns
and
jge
lea
in
lods
xchg
icebp
aaa
xor
xchg
fsubl
addb
loop
aaa
pop
sti
mov
fs
inc
arpl
insb
ss
mov
mov
inc
pop
rorb
xor
sub
movsb
nop
xchg
inc
pop
loope
aad
ds
insl
mov
popf
add
cmp
or
xchg
jno
ret
in
dec
jb
inc
into
pop
or
push
cmc
mov
xchg
aam
pop
and
out
stos
dec
xchg
daa
lock
int3
lds
test
addr16
add
dec
inc
sbb
sbb
repz
inc
xor
jge
xor
cmc
ret
xlat
jae
nop
mov
cmc
ret
dec
dec
or
cltd
pop
cmpsl
les
dec
jmp
mov
cmp
repnz
pop
stos
fsubrl
jns
dec
les
pop
iret
lret
mov
lds
cmpsl
int3
sbbb
or
sub
push
dec
mov
aas
test
lret
movl
ja
add
fnsave
nop
inc
mov
adc
cmp
adc
test
push
xor
vmwrite
loopne
mov
pop
mov
test
push
test
ljmp
lods
xor
out
cmpsl
pusha
das
jle
sub
daa
jns
cld
gs
test
rorb
mov
push
or
fucomip
mov
sti
rcpps
rcll
jae
dec
aam
sub
xor
mov
cltd
das
push
cmp
xor
jb
mov
stos
push
int3
test
daa
add
push
ljmp
addl
fucom
ljmp
leave
aam
dec
or
jl
mov
push
mov
fadds
xchg
jne
mov
dec
movsb
inc
and
cmpl
cltd
das
or
xor
mov
fsts
jae
fs
xor
mov
test
xor
std
je
or
pop
and
add
ds
add
xchg
lret
clc
rclb
dec
cmp
jno
mov
ljmp
dec
and
fs
popf
dec
sub
xor
mov
cmc
mov
cld
push
inc
leave
inc
cwtl
inc
sbb
insb
in
and
popa
test
dec
call
and
mov
add
test
lods
xor
sub
in
push
jmp
or
push
arpl
aad
sahf
aad
filds
sub
popa
loope
int
mov
cwtl
es
cmp
mov
cld
movsb
push
push
jl
pop
push
adc
out
fcomps
add
pusha
mov
loop
inc
mov
out
sbb
jmp
icebp
add
lds
or
or
xor
xchg
fbstp
push
popf
rcrb
dec
addl
xchg
xchg
rcrb
cli
cwtl
in
rclb
add
pushf
dec
repnz
mov
loop
jne
xor
ss
bnd
insl
outsl
flds
jecxz
jnp
inc
pusha
add
das
scas
fcmove
xor
cmc
xor
popa
pushf
lcall
xor
cmc
jle
and
inc
or
in
push
out
jb
shlb
testb
xchg
repz
cmp
je
cmpsl
add
ret
fs
lret
xchg
hlt
push
mov
jp
dec
jo
dec
mov
clc
add
jae
out
lret
mov
cmp
sub
movsb
cmp
adc
xor
data16
xchg
mov
es
repz
push
stc
rcrb
nop
add
xorb
aam
fwait
sbb
into
sahf
stos
push
fldl2t
adc
mov
int
test
pop
test
fisubs
and
xchg
sti
fistl
cmp
or
fbstp
xor
repnz
add
shll
dec
xchg
mov
aas
xor
mov
pop
adc
sbb
es
in
fneni(8087
movsl
jmp
adc
test
out
sub
lods
pop
in
xchg
adc
jb
sbb
push
clc
ja,pt
aam
sahf
push
hlt
daa
rorb
ss
into
data16
test
mov
pop
pop
and
add
test
or
and
jae
sbb
pop
xor
ret
mov
mov
mov
jns
sub
js
and
ds
in
sub
mov
ljmp
and
scas
and
stc
ja
cmpl
rcrl
mov
dec
shlb
shll
jmp
adc
sub
aad
cs
stos
push
sub
jle
stos
sub
add
movsl
jae
sahf
xor
mov
push
jae
sahf
ljmp
mov
jmp
or
push
xor
or
inc
movsb
cli
sub
sub
push
jecxz
mov
dec
lret
int
shl
arpl
daa
addr16
ljmp
fbstp
sub
inc
jns
lods
push
and
or
insb
call
jp
stos
push
rcll
mov
addr16
pop
lret
mov
mov
hlt
sbbl
addr16
rcrb
push
sbb
push
mov
call
mov
movsl
and
sub
inc
cli
pop
sti
shrl
mov
gs
sbb
and
test
iret
sub
icebp
or
inc
pusha
adc
adc
stos
rorb
mov
stos
std
adc
leave
mov
push
sub
aaa
iret
mov
push
adc
xchg
push
sbb
ret
shrb
adc
int3
or
stos
add
adc
xchg
popf
daa
incb
adc
dec
and
push
mov
sub
in
nop
mov
imul
lods
out
stc
inc
int
gs
in
hlt
stos
add
sub
fs
jo
or
inc
pop
jmp
push
lea
insl
test
rolb
mov
push
mov
xchg
lahf
cmpsb
fwait
in
mov
out
movsb
adc
jbe
xor
jns
lcall
xor
cs
add
dec
mov
or
jbe
add
imul
jmp
gs
repnz
fwait
xor
mov
jb
and
clc
xor
mov
imul
cmp
popa
xor
nop
or
loope,pn
shl
iret
sub
aad
mov
into
insl
sbb
mov
ss
jmp
sti
inc
jns
stos
into
movsb
lds
stos
jo
setle
push
jb
mov
jge
stos
pusha
cs
push
and
lock
sbb
shl
aad
inc
or
test
sarb
jae
push
mov
push
loop
cmp
cmp
lret
mov
shll
iret
loopne
lret
loopne
jmp
push
xor
imul
in
iret
mov
ret
pop
repnz
fwait
dec
hlt
stos
aas
mov
or
fcmovbe
stos
imul
shll
mov
test
ret
jnp
mov
or
sbb
xor
and
xor
cmpb
jnp
adc
push
inc
jmp
sub
popa
lcall
lods
jecxz
sti
mov
dec
xchg
in
dec
out
add
add
push
fstl
xchg
and
add
xor
bound
dec
test
xchg
and
test
cs
add
mov
push
mov
mov
and
pop
jmp
and
mov
hlt
adc
pop
jo
arpl
loopne
clc
sbb
in
cli
das
mov
adc
stos
iret
fwait
push
loope
sub
shl
test
call
pop
pop
mov
jnp
rcll
outsl
out
push
mov
fwait
mov
push
repnz
js
repnz
mov
jg
push
imul
pop
mov
mov
push
in
loop
push
cmpl
popf
int
mov
and
dec
or
jbe
lcall
mov
jle
push
mov
scas
sub
ret
mov
jne
das
sahf
insl
lods
pop
xor
sahf
push
inc
rorb
clc
testb
jns
fidivrl
push
ret
lahf
and
dec
inc
fsts
stos
movsl
fucomp
test
shlb
ret
fadds
inc
cltd
imul
aas
jle
push
mov
mov
shrl
gs
sbb
es
pop
enter
xorb
das
jmp
loopne
jae
cmp
jmp
out
and
fisubrs
ret
jo
test
out
sbb
nop
mov
mov
push
sbb
repz
xchg
push
inc
cmp
pop
push
jg
in
fs
mov
stc
fisttps
pusha
inc
dec
popa
outsl
or
pop
dec
xor
mov
jmp
negb
mov
aad
adc
pop
sbb
add
incb
add
mov
cmp
lea
insl
dec
push
stc
cmp
subl
fisubrs
pop
mov
jnp
pop
jae
or
jmp
dec
and
lahf
and
mov
enter
sbb
mov
je
clc
ss
mov
test
test
shrb
pusha
out
inc
mov
jne
inc
inc
aad
pusha
pop
mov
shlb
xchg
and
add
sahf
test
push
xchg
push
adc
jo
push
shlb
push
clc
std
xchg
aaa
loopne
xchg
lds
scas
jbe
sub
add
imul
mov
out
cli
mov
adc
fnsave
jno
es
cltd
sbb
push
lcall
addl
repnz
mov
test
or
ss
jb
pusha
xor
subl
pusha
out
mov
fpatan
mov
inc
add
test
pushf
js
daa
lea
or
push
fsubl
jl
jns
add
std
ja
mov
jmp
test
push
push
test
popf
lods
adcb
push
mov
lret
inc
sub
sti
mov
jmp
shrl
adc
in
popf
mov
lods
adc
mov
rol
lret
mov
adc
dec
int3
clc
hlt
das
mov
jno
dec
jmp
outsb
lret
sbb
cld
adc
daa
and
fisubl
sahf
pushf
clc
cmp
mov
sti
mov
and
je
mov
inc
or
inc
or
fcomp
loope
dec
leave
ja
xchg
out
into
fs
into
xchg
mov
mov
insl
jno
mov
aaa
push
cld
xor
mov
cmp
pop
icebp
dec
stos
cmp
shrb
or
insb
add
arpl
fcmovnb
mov
sbb
and
enter
or
pop
adc
shlb
jp
dec
scas
mov
and
stos
xchg
push
ret
push
dec
in
dec
jns
xor
inc
in
scas
daa
sahf
push
xchg
sub
outsl
stos
xchg
sbb
lods
pop
sbb
mov
movsb
jg
lods
sti
pusha
es
dec
mov
add
push
cmp
mov
in
loopne
jo
in
shll
sbb
push
mov
repnz
adc
adc
mov
stos
push
jno
push
adc
mov
mov
add
lock
into
adc
pop
int3
inc
shrl
repnz
cmp
pusha
or
bound
dec
shlb
test
adc
inc
mov
jg
lods
sbb
sbb
mov
cltd
andb
sbb
mov
fisttps
adc
xor
addr16
dec
push
repnz
repnz
fwait
pop
shr
imul
push
dec
ret
sub
out
pop
loopne
xchg
xchg
and
push
xchg
jl
lods
out
jno
sub
out
add
xor
lds
addr16
daa
ja
jb
out
cltd
mov
add
cmp
xchg
mov
sub
adc
std
ficoms
aaa
xor
daa
push
xchg
fnstsw
subl
fsubl
adc
jg
mov
lock
dec
pop
mov
push
scas
add
clc
icebp
adc
mov
std
pop
lods
je
add
scas
jg
mov
sub
inc
cmp
pop
cmp
adc
lea
mov
fsubp
cli
mov
cli
mov
imul
ja
lret
mov
in
mov
imul
and
xchg
lret
add
and
inc
mov
pop
mov
jl
loope
xchg
jecxz
add
icebp
lahf
test
dec
rcrl
cld
pop
in
push
cli
test
pop
stc
inc
in
movsl
mov
mov
enter
inc
loop
mov
daa
lock
ret
pop
rcll
mov
shlb
das
mov
mov
aas
rcll
sbb
mov
add
and
adc
push
cltd
sbb
mov
fs
fldcw
xor
sub
xorl
test
leave
cmovae
push
xor
mov
repz
inc
daa
push
push
adcl
test
sahf
cmpsl
xor
or
testb
sbb
push
add
in
sbb
into
pop
in
lahf
ret
dec
pushf
fsubrp
enter
mov
aad
inc
jmp
add
inc
mov
xchg
ficompl
cmp
mov
adc
adc
aas
pop
xchg
into
pop
and
gs
cwtl
xchg
fs
shll
pop
adcl
push
or
in
lret
imul
ret
maskmovq
divl
daa
push
push
adc
jecxz
jmp
sti
xchg
ljmp
mov
orb
int
jmp
jecxz
idiv
rcrb
sbb
push
addr16
loop
repnz
xchg
test
mov
out
add
add
stos
pop
sub
pop
adc
pop
fisubrs
and
cmpsb
push
test
jg
pop
inc
aas
lcall
test
js
pop
push
test
idivb
loopne
xchg
sarl
aad
jbe
mov
int3
add
xchg
jmp
push
sti
push
and
pop
and
dec
xchg
mov
mov
out
mov
inc
iret
jns
jle
xchg
sbb
aad
imul
jne
mov
dec
lods
cmp
push
push
ljmp
adc
jbe
and
mov
in
xchg
imul
ficoml
testb
pop
or
mov
adc
negb
xor
push
or
lock
inc
aam
mov
bnd
ja
pop
jne
pop
push
pop
fwait
cld
pop
xchg
je
cmp
push
inc
xchg
jno
inc
add
sarl
mov
pop
mov
decl
jecxz
jmp
mov
stos
xchg
sbb
jns
movsl
sbb
sub
mov
fcompl
xor
pop
mov
sbb
xchg
js
dec
das
mov
xchg
jmp
sbb
ljmp
jbe
xor
or
inc
mov
ja
fwait
adc
push
sbb
mov
mov
stos
mov
xchg
inc
inc
or
aam
das
les
pop
xchg
sbb
subl
push
andl
filds
scas
pop
data16
fnstcw
pushf
fcmovne
les
xchg
adc
xor
adc
xchg
inc
and
xchg
rorb
icebp
mov
add
sahf
call
cmc
pop
fdivrp
sbb
push
and
inc
fadds
and
sbb
xchg
test
iret
out
aam
xor
aad
push
push
in
int
push
mov
mov
mov
scas
mov
jno
push
and
add
inc
jg
aam
les
or
jne
nop
cmpsl
mov
sti
ja
mov
adc
pushf
hlt
out
or
shr
jnp
sbb
xchg
aas
inc
push
je
pop
xchg
scas
test
pop
xlat
aam
lock
fucom
mov
inc
sub
fnstcw
ror
push
inc
std
xchg
xchg
test
outsl
jbe
sub
cmpsb
seta
mov
and
push
dec
mov
mov
jp
es
dec
cmpsb
mov
xor
ret
test
pop
nop
lret
inc
and
mov
scas
add
cmp
loop
pop
jge
or
cmc
mov
jmp
jmp
mov
jno
out
movsb
jmp
xchg
mov
cltd
and
xchg
dec
mov
stos
lcall
aad
jbe
mov
inc
pusha
mov
nop
adc
jb
in
xor
sub
cltd
test
scas
mov
out
sbb
jge
pop
cs
inc
sub
jno
xor
sahf
or
adc
in
das
push
pop
dec
xor
aas
mov
fsubrl
cs
sub
leave
mov
pop
push
lods
repz
adc
pop
jmp
stc
sub
jb
cmp
cmp
cli
pop
std
pushf
sub
add
test
mov
cltd
xchg
fs
pop
fbstp
dec
pushf
lret
fdivs
ljmp
push
and
mov
sbb
xchg
aam
loope
popf
xchg
test
scas
jge
test
cltd
insl
hlt
pop
dec
dec
cltd
mov
and
adc
inc
fwait
sbb
jle
stos
pop
sub
or
dec
jp
add
jnp
dec
sub
jns
pop
or
or
repz
pop
inc
lods
jb
loop
in
in
inc
pusha
mov
inc
xchg
cwtl
in
addr16
dec
xor
jnp
fsubs
test
iret
daa
and
pop
outsl
clc
cmc
mov
sbb
pop
adc
sbb
pop
xchg
into
xchg
push
dec
jae
push
sbb
cld
lahf
jb
jmp
icebp
hlt
arpl
test
push
sub
sti
outsb
jecxz
mov
lret
aam
ljmp
sarl
inc
ret
stos
pushf
adc
mov
out
jecxz
pop
pop
xchg
pop
cmpsb
imul
mov
outsb
dec
iret
and
loop
gs
dec
inc
adc
xchg
adc
pop
xchg
sarl
aaa
mov
subb
inc
aam
sbb
pop
aad
dec
rolb
xchg
gs
in
xchg
mov
pop
jp
sub
adc
scas
inc
shlb
lds
into
daa
or
js
loope
xchg
push
mov
xchg
imul
fidivl
dec
test
frstor
clc
fwait
mov
push
mov
test
sarb
pop
or
add
or
ss
lea
mov
lods
mov
ret
jle
xchg
mov
mov
sbb
lret
xor
ljmp
orl
xor
xchg
xchg
dec
xchg
sbb
out
and
icebp
mov
daa
jo
loopne
sti
out
pop
sbb
inc
shlb
cmpl
dec
and
sarl
enter
pop
mov
lret
sub
lea
or
insb
xchg
stc
mov
out
xor
inc
pop
shr
jb
loope
mov
stc
dec
pop
xor
push
fwait
aam
out
cmp
xor
push
js
emms
movsl
subl
inc
lahf
inc
push
cmp
or
push
inc
nop
out
push
push
bound
test
cmp
mov
test
aad
arpl
rorb
enter
adc
leave
mov
mov
add
out
nop
jno
into
sbbl
dec
inc
aam
ljmp
xorb
and
outsl
jp
test
xor
shlb
mov
mov
aaa
mov
sbb
stos
daa
mov
in
mov
rorb
inc
clc
mov
add
pusha
push
subl
push
xor
pop
mov
add
push
mov
mov
and
xor
dec
imul
rcrl
aam
fnsave
jno
popl
int
hlt
rcrb
fnstsw
flds
adc
sub
push
stos
imul
sbb
enter
mulb
dec
push
and
hlt
les
inc
sub
ss
jns
pop
jge
rcr
adc
ljmp
dec
push
xchg
sbb
in
mov
xor
xor
sarl
pop
inc
bound
adc
scas
fincstp
sub
rcrb
rorl
pop
cmpl
jnp
pushf
push
xchg
lock
int3
mov
fcomi
into
mov
and
push
cld
inc
fwait
jae
cmpsb
test
in
leave
cmp
je
or
mov
mov
sbb
pop
sbb
test
pop
adc
xor
jne
cmp
mov
movsl
mov
mov
sahf
fldenv
rcrl
popf
pop
jne
test
cmp
pop
pop
cmpsb
xor
mov
test
js
xor
call
cmp
rcll
mov
gs
sub
adc
dec
or
or
es
push
adc
cmp
adc
sub
mov
les
push
popa
and
cmpb
jo
fwait
scas
das
ss
push
xchg
mov
adc
lds
mov
enter
inc
push
andl
adcb
call
and
ljmp
mov
mov
sbb
push
mov
imul
mov
aaa
stos
and
cmp
scas
leave
sbb
or
pop
and
mov
aaa
mov
movsl
loope
sub
test
aas
neg
fimuls
loope
xor
icebp
int3
mov
insl
mov
test
out
push
adc
adc
fmul
push
or
ret
mov
test
mov
dec
pop
dec
call
sbb
fldenv
fldlg2
fucomip
subl
push
dec
sub
mov
dec
repz
icebp
pop
in
add
lods
lcall
push
aaa
ds
stos
bound
popa
xchg
jg
int3
jecxz
cmp
xchg
mov
and
ret
xchg
mov
xchg
pop
xchg
pop
jae
or
xchg
jae
lock
in
fsubs
mov
jp
pop
aaa
pop
cld
dec
in
sar
sub
int
adc
xor
pushf
jp
fisubl
jg
or
aaa
std
repz
xor
in
aaa
mov
push
jnp
push
das
pop
lods
and
dec
cmpsl
inc
addb
ja
pop
out
arpl
pusha
lret
mov
cmpsb
fdivp
fldcw
scas
pop
push
adc
outsb
scas
mov
or
jl
jnp
insb
xchg
push
lahf
insl
fstl
sub
jp
bound
std
mov
js
cwtl
jne
xchg
pushf
pop
and
imul
rorl
xchg
push
out
mov
mov
inc
mov
mov
jl
out
pop
cmp
mov
jg
and
or
lret
stc
or
push
inc
outsl
jmp
sub
mov
inc
dec
test
movsb
imul
xchg
movsb
imul
orb
mov
inc
stc
and
sbb
leave
ljmp
cmp
icebp
mov
clc
loope
sbb
leave
xchg
adc
push
stc
and
jbe
fsts
sub
xchg
ficoml
bound
shl
lods
loope
sub
mov
sub
call
imul
push
fwait
adc
pop
inc
fs
add
cli
out
pop
push
cmp
sbb
stc
add
mov
lret
lret
inc
pushf
and
inc
or
out
or
jg
adc
testl
dec
jle
cmp
nop
stc
filds
inc
mov
lret
push
push
jmp
and
arpl
mov
jl
in
mov
es
dec
xchg
sub
dec
shrb
adc
out
mov
mov
arpl
mov
scas
leave
mov
jnp
inc
lea
fstpt
cmpsb
popf
ljmp
fcmove
mov
dec
imul
lret
mov
push
adc
aas
jb
sub
lea
push
js
xchg
mov
test
ret
and
mov
mov
xchg
out
jne
sbb
sahf
test
xchg
xor
aas
imul
fists
mov
jp
push
mov
jecxz
cmp
cld
pop
push
in
xor
jmp
fimull
pusha
add
incl
pop
cmp
ret
das
fdivl
les
imulb
in
out
sbb
xlat
and
aaa
loope
dec
ret
dec
fisubl
mov
mov
inc
sbb
in
mov
loop
dec
and
xchg
jnp
xchg
movl
add
xorb
ja
mov
mov
fwait
push
lret
inc
out
cmpsl
pop
jo
or
jne
lods
xor
roll
test
dec
int3
lea
push
xor
ss
sbb
inc
andb
xchg
mov
pushf
bound
cmpsl
push
sbb
xlat
pusha
pop
outsb
ret
jnp
mov
xchg
je,pn
cmp
xor
jp
adc
pop
stc
imul
xor
insb
mov
pusha
jle
xor
add
lret
mov
enter
pop
or
leave
cs
int
cli
push
cmpsb
imulb
pop
dec
push
ds
lock
push
dec
cmpsl
cmp
repnz
jle
stc
cmpsl
sbb
enter
sbb
cmp
cmp
jbe
add
aaa
bound
sbbb
push
adc
addr16
pop
and
add
sbb
push
mov
out
xor
add
lods
fstpt
sbb
outsl
xchg
clc
cmpsl
sub
lret
sbb
popl
pop
hlt
adc
push
xchg
or
xchg
mov
jmp
rcrb
hlt
sub
xchg
mov
dec
ret
fsub
or
mov
fdivr
lahf
lea
dec
push
mov
outsl
inc
and
int
sub
leave
xor
out
sub
subb
jg
adc
loope
push
or
pop
mov
cwtl
inc
cltd
xchg
out
inc
inc
je
sub
mov
xchg
call
ds
js
cmpsl
dec
pop
mov
inc
jl
clc
sarb
cs
jne
fistl
int
mov
dec
std
sbb
push
sub
sbb
sbb
insl
popf
jecxz
mov
add
lcall
inc
xor
mov
fcoml
movsl
pop
cld
mov
xlat
add
mov
xchg
loop
dec
scas
or
roll
dec
and
outsl
scas
rcrl
xchg
mov
adc
jg
or
loope
cli
cmp
mov
mov
imul
adc
cmpsb
and
test
xor
in
mov
push
xor
repz
add
pop
inc
imul
shl
fs
daa
outsl
mov
mov
cmovs
pop
cmp
cmp
jmp
negl
rol
psubusb
aad
hlt
imulb
arpl
icebp
test
mov
adc
dec
je
xor
in
xor
inc
add
popf
xchg
xchg
cld
es
cs
lret
pop
es
rcrl
mov
mov
cmp
jl
add
adcb
mov
adc
testl
andb
push
and
mov
adc
lea
dec
push
inc
mov
cmp
or
aam
and
pop
xlat
loope
test
xor
imul
inc
ret
and
loope
movsl
imul
sbb
mov
aaa
cmpsl
mov
or
xchg
fnstsw
jne
sub
test
push
or
mov
push
in
add
inc
cltd
cmc
es
aam
aad
pop
mov
pop
jo
xor
cltd
adc
or
push
lods
dec
dec
jg
aaa
sbb
ss
pop
sub
imul
xchg
pop
mov
mov
adc
lock
hlt
mov
cmp
jnp
sub
push
cmpsl
sahf
imul
cmpsl
xor
addr16
das
and
cmpsl
or
dec
mov
xchg
mov
shll
xor
mov
ret
sti
add
push
test
aam
sub
fsubrl
pusha
mov
les
xchg
sub
dec
add
xchg
pop
jg
dec
xchg
mov
mov
or
test
lret
lds
jecxz
roll
dec
adc
ljmp
cmp
adc
int
xor
loop
sub
sub
and
cmp
xchg
push
bound
adc
pop
test
data16
sub
out
sub
xchg
pop
mov
xchg
jge
cld
mov
push
iret
push
mov
ja
out
lret
jae
and
in
add
and
pop
punpckhbw
xchg
aas
add
mov
adc
inc
mov
sub
mov
push
jbe
arpl
outsl
xor
lods
lea
scas
into
pop
mov
inc
push
jnp
addr16
jno
mov
or
ljmp
push
xchg
outsl
inc
addr16
push
xor
and
xchg
lgs
ljmp
imul
cmpsl
push
sub
js
outsl
adc
jmp
dec
add
inc
mov
push
lock
add
add
push
and
in
rorl
cmp
mov
sbb
push
jl
xchg
mov
push
cmpsb
hlt
in
jb
incb
sub
hlt
in
xlat
sbb
test
dec
or
lcall
das
test
insb
push
push
add
outsl
mov
push
sub
mov
rcrl
cltd
popa
mov
sbb
adc
enter
aaa
gs
inc
mov
leave
sub
stos
mov
js
in
lods
lea
in
pop
dec
lea
cltd
push
faddl
stos
sbb
jae
xlat
adc
pusha
push
popa
mov
cmp
and
rolb
jecxz
enter
sbb
sub
cmp
addl
in
jns
fdivl
bound
fiadds
fmuls
and
lret
and
push
test
jae
sbb
sahf
js
adc
inc
jo
fmull
aaa
or
and
dec
xchg
xchg
xchg
roll
xchg
mov
xchg
faddl
leave
cmc
xchg
adc
sbb
aad
rcl
sti
xor
mov
mov
in
adc
add
adc
jnp
and
cld
gs
out
imul
mov
xchg
inc
and
paddusw
fwait
inc
outsb
mov
inc
xlat
jno
fadds
push
js
sbbb
ret
mov
aad
mull
lahf
xchg
and
xchg
ret
jl
gs
xor
sti
aad
cmp
pop
mov
xchg
mov
les
push
dec
andl
or
out
out
stos
rcll
daa
aad
dec
cmp
stc
aas
cwtl
and
sbb
push
inc
bound
inc
pop
inc
xchg
push
rclb
gs
push
rcrb
push
loop
inc
outsb
fadds
insl
aad
jns
js
adc
js
pop
mov
and
loopne
sub
call
clc
adc
stc
xchg
repnz
ret
adc
popa
les
jg
scas
ror
pushl
pop
dec
sbb
and
dec
mov
dec
sbb
and
loope
ret
loop
ds
aad
hlt
in
outsb
hlt
sub
mov
jns
adc
mov
pop
xchg
push
mov
cmp
repnz
xor
ficomps
js
adc
popf
les
cltd
jno
jb
xor
jecxz
insb
dec
push
scas
add
shrl
mov
lea
xor
lock
or
sub
test
mov
mov
addl
lcall
lret
icebp
lretw
push
xorl
fistpl
notb
mov
idiv
lds
or
nop
lods
pop
popf
aas
call
cmpsl
xchg
or
cmpsl
cmpsb
cmpsb
cmc
cli
int
push
bound
das
jmp
popa
jecxz
imul
inc
push
jne,pt
sbb
test
test
inc
push
jae
or
int3
lcall
popa
ret
ret
int3
mov
call
sub
std
and
lret
sti
pop
mov
icebp
imul
scas
mov
imul
inc
push
testl
iret
hlt
leave
sub
pop
pop
out
inc
pop
sbb
sub
xor
mov
mov
add
sub
pop
jg
lahf
mov
fcoms
test
cmp
pop
sub
movsl
ds
lret
inc
dec
fidivs
sbb
scas
xor
add
fs
lods
fstps
fcoml
aad
mov
sub
pop
jno
mov
xlat
inc
fs
dec
stos
push
or
rclb
inc
jae
data16
pop
add
jne
xor
adc
les
aad
aaa
xor
inc
mov
xor
push
out
js
add
adcl
mov
ja
ret
add
out
adc
pop
jne
inc
fwait
xchg
pushf
pop
jae
push
js
lea
push
icebp
pop
ror
fucomip
mov
xor
adc
cmc
lret
mov
dec
das
scas
sahf
mov
fmul
lcall
push
jbe
shll
and
push
mov
xchg
fnstcw
mov
flds
stos
mov
xchg
sub
pop
cmp
xor
movsb
test
sti
fisttpl
mov
inc
mov
and
mov
jns
lret
dec
sbb
dec
xor
mov
jb
sbb
mov
adc
push
iret
or
shlb
sarl
inc
ret
hlt
pop
dec
jecxz
xor
and
xchg
push
xor
add
push
push
inc
insl
jbe
int
movsl
cwtl
or
inc
inc
jp
pop
xchg
ss
loope
push
inc
insb
dec
adc
fstpt
adc
pop
clc
mov
mov
js
and
cwtl
cwtl
mov
roll
lods
add
or
shlb
mov
iret
stc
xor
enter
in
inc
adc
xchg
lret
call
arpl
sahf
dec
mov
popa
sahf
loop
and
cmovo
xlat
pusha
out
inc
push
jae
xlat
ja
cmp
inc
mov
aaa
movsl
into
test
lahf
mov
jp
xchg
jp
test
subl
pop
lret
ds
hlt
dec
dec
icebp
movsl
lcall
sub
aas
ret
mov
loop
stos
jbe
dec
xchg
fsqrt
mov
aaa
and
in
addr16
sbb
iret
sbb
fstpl
divb
scas
outsl
adc
and
fcmovbe
xor
jl
or
jno
jo
push
adc
mov
pop
mov
movntps
adc
dec
dec
popa
dec
call
adc
mov
shl
push
ljmp
jp
cld
das
push
fbstp
mov
cmp
data16
add
repnz
mov
scas
cmp
aas
rol
inc
mov
pop
stos
inc
ljmp
call
mov
out
and
cmp
add
aaa
jmp
int3
dec
movsb
sub
shlb
pop
ljmp
scas
je
add
insl
sub
jno
lods
fisttpl
jl
iret
es
popf
xchg
movb
or
mov
call
mov
push
cmp
push
inc
js
lahf
data16
and
cmc
mov
pop
jmp
xchg
xor
dec
data16
movsb
and
fbstp
out
cmp
aas
xchg
fnstsw
adc
and
subl
or
jecxz
mov
xor
insl
out
enter
mov
in
mov
ret
ss
jmp
pushf
shlb
pop
mov
in
in
loop
jle
clc
insb
xchg
cmp
gs
cs
xor
mov
out
dec
imul
or
movntps
into
mov
mov
adc
loope
rorl
inc
mov
push
jae
aad
cmp
push
xor
sti
icebp
jg
cwtl
sahf
repnz
sbb
neg
outsl
pop
mov
in
sbb
adc
lret
xchg
es
jnp
dec
loop
daa
cmp
lret
adc
inc
cmp
mov
jle
xchg
dec
ror
insl
ja
imull
mov
dec
and
inc
sbb
push
lock
mov
fcoml
out
or
and
xchg
cld
dec
add
xor
inc
or
shl
cmp
xor
mov
les
insb
dec
lahf
lret
push
mov
dec
sbb
sarl
sub
sarl
xchg
jg
dec
les
movsb
fsubrs
cli
aad
dec
pop
fwait
sbb
inc
iret
adc
cmpb
inc
inc
call
int3
sub
mov
lret
repnz
cmp
out
pcmpgtb
imul
test
fdivrs
sbb
and
pop
adc
je
cmp
mov
push
inc
rolb
dec
ss
xchg
add
mov
mov
sub
pop
ja
pop
dec
nop
rcl
jecxz
mov
sti
shl
repnz
mov
cltd
es
push
jb
pop
push
and
sbb
aas
inc
push
mov
ds
stos
mov
inc
push
scas
test
dec
push
xor
xor
inc
jnp
fsub
jle
ror
xchg
out
sub
dec
xor
cmp
sbb
mov
data16
outsl
stos
popa
mov
movb
xlat
out
lods
or
mov
adc
xlat
mov
stc
and
mov
and
mov
cltd
test
loopne
arpl
stc
pop
aad
fdivrs
shlb
add
jno
lods
mov
mov
jl
mov
mov
sbb
mov
adc
dec
sahf
mov
jae
adc
mov
add
arpl
mov
loopne
mov
mov
xor
sub
fwait
cmpsb
push
imul
pop
cld
pop
add
push
pause
std
mov
inc
xchg
imul
fdivp
ss
js
repz
mov
test
into
nopl
call
xchg
imul
xor
inc
fwait
mov
push
mov
mov
xchg
inc
inc
lods
mov
pop
pop
xchg
mov
loopne
and
cmp
jecxz
jl
popa
call
dec
sub
pushf
dec
pop
sub
pop
xor
pop
icebp
ja
stc
call
repnz
dec
xchg
scas
lods
mov
nop
es
arpl
ljmp
jno
daa
sub
sahf
insb
adc
mov
dec
leave
pop
out
lock
mov
enter
fdivs
cmpsl
inc
insl
or
jb
inc
mov
adc
data16
imul
sbb
inc
insl
add
shrb
in
mov
fyl2x
add
jmp
cli
add
mov
std
in
cmp
push
loope
push
out
lahf
jg
mov
sbb
mov
ljmp
adc
in
push
add
movsl
lret
pop
std
xor
jno
adc
repnz
dec
test
inc
xchg
iret
xlat
lods
data16
ss
imul
fisubs
movsl
or
imul
mov
push
inc
mov
cwtl
adc
add
lods
pop
pop
rcrb
pop
iret
lahf
xor
in
add
pusha
pop
clc
sub
loop
les
movsl
rol
movsl
rcl
mov
adc
rclb
mov
or
push
pop
dec
push
lods
pop
ror
in
inc
mov
cs
mov
imul
clc
repz
pusha
inc
pop
sbb
insb
stc
daa
lods
jns
inc
sbb
aam
mov
aas
mov
bound
lods
jo
scas
cli
in
pop
jmp
and
jb
aaa
jo
dec
pop
stc
xchg
rcrb
data16
xchg
xchg
ds
lcall
addr16
sub
data16
add
push
mov
mov
push
mov
out
js
jbe
out
out
sbbb
mov
and
push
xor
add
jno
pop
push
dec
dec
and
push
leave
pop
sbb
cltd
xor
lcall
cmp
or
push
rorl
push
or
push
test
repz
mov
push
out
cmp
into
mov
out
mov
ja
inc
push
daa
add
add
sahf
mov
out
pop
out
sub
pop
xor
sbbl
out
and
pop
cmc
and
sub
stos
or
repz
aas
dec
add
pushf
mov
add
push
clc
loop
fildll
cmp
pop
pop
aas
inc
adc
js
ljmp
ljmp
lods
lcall
or
arpl
pushf
sbb
iret
cmp
add
push
sbb
cmp
sar
data16
fmull
sbb
sub
cmpsb
sub
inc
adc
mov
hlt
movsb
out
cmp
mov
adc
aad
stc
gs
and
mulb
ds
xchg
xchg
sub
rclb
loope
or
test
shl
test
imull
bound
sub
xor
aaa
cmp
add
mov
adc
gs
cli
rclb
aam
loop
gs
filds
mov
lret
push
adc
sub
leave
inc
lea
fcmovb
shrb
push
and
cmc
lret
xor
es
js
arpl
stc
xchg
cmpsb
xor
or
adc
pop
dec
nop
adc
xchg
int
cmpsb
ficoml
dec
xor
cmp
inc
cvtpi2ps
and
mov
cmp
enter
pop
jmp
sbbw
jnp
inc
movsb
jno
mov
mov
ret
test
jp
adc
dec
movsb
or
inc
inc
jns
adc
jecxz
jo
jo
inc
scas
fmul
out
xorb
mov
test
xor
ret
xor
add
xor
and
pop
cmpsl
gs
jecxz
mov
and
add
cmp
incb
jecxz
aam
jg
xchg
and
stos
or
mov
or
dec
dec
out
and
mov
addr16
mov
add
mov
into
js
das
scas
jecxz
data16
push
jno
iret
lea
push
inc
sub
repnz
test
jns
dec
and
mov
out
popa
push
add
and
jle
sti
mov
mov
loope
psllw
daa
adc
cmp
add
adc
push
mov
and
push
jge
jae,pn
test
inc
jp
and
outsl
cmp
sarb
xlat
lret
or
jl
push
movsb
gs
vunpcklps
add
and
movsb
cmc
push
sub
test
sarb
incl
pop
fisubrl
jns
stc
cmpl
cmpb
rol
popa
sub
cmpsl
imul
push
test
jecxz
inc
repnz
adc
adc
scas
jnp
std
sub
or
dec
addr16
fstpt
aad
add
repz
in
in
dec
outsl
mov
outsl
in
jl
mov
mov
mov
sar
test
inc
adc
mov
push
popf
jne
add
xlat
cltd
xor
int
mov
mov
pushf
and
pop
int3
iret
out
fwait
cmc
int
test
push
cmp
xor
sub
movsb
push
jns
insb
nop
jecxz
jbe
fdivrl
scas
sub
lcall
idivl
cmp
jb
imul
shlb
adc
add
jnp
cmpb
adc
xchg
push
cmp
cmp
mov
cmpb
cs
xchg
mov
sar
push
data16
mov
lock
out
jmp
shlb
mov
dec
or
adc
inc
out
lcall
cmp
in
mov
adc
fiadds
out
es
dec
pop
pop
hlt
lcall
mov
add
sub
pusha
xor
mov
popa
sub
xlat
jne
cmp
inc
insl
imul
cltd
cmp
pop
daa
dec
pop
pop
and
xchg
mov
sbbl
push
push
and
mov
cmp
push
testb
sbb
jnp
cmc
mov
mov
idivb
sub
hlt
cmp
shll
push
std
clc
shrl
sarb
cmc
int
ja
sti
adc
jbe
das
lock
cs
sub
mov
ret
xor
jnp
lods
push
inc
xor
in
adc
dec
and
popf
pop
mov
add
rorb
fsin
jmp
xchg
pop
pop
test
jo
pushf
fs
sub
popa
mov
sub
neg
xor
jl
das
mov
out
xor
pop
dec
dec
repnz
outsb
std
inc
xchg
push
xor
cmp
mov
lods
std
add
ret
lret
lea
jno
cmc
aad
dec
out
add
repz
test
pop
jno
lcall
sahf
call
shlb
add
xchg
xchg
dec
sbb
aas
test
int3
pop
jnp
js
jp
gs
fs
sbb
stos
mov
jno
xchg
xlat
in
mov
jae
test
std
jo
pop
push
sub
cmc
mov
adc
popf
mov
lea
push
divl
or
pop
push
shr
mov
cmp
cmp
cmpsl
pop
mov
popf
pop
or
mov
arpl
mov
scas
lock
push
orl
cmp
and
bound
push
xor
ljmp
movsl
jg
decl
mov
shll
fcomps
and
fcmovnb
mov
xlat
int3
ret
les
fdivrs
mov
mov
sahf
repz
sbb
in
mov
xchg
mov
stos
inc
push
pusha
jle
sbb
or
sbb
jp
fisttpll
shlb
dec
mov
loopne
adc
pop
cmp
mov
test
dec
xor
add
movsb
push
and
ss
sub
pxor
add
lret
sti
mov
daa
enter
ds
sbb
sub
dec
mov
lcall
insl
loop
dec
sbb
pop
incl
inc
xlat
push
jae
mov
out
jle
sub
push
stc
sub
repnz
ds
call
lahf
inc
sbb
mov
and
insl
sbb
cltd
imul
pushf
xchg
mov
mov
or
push
lock
dec
xchg
xchg
sbb
cmpsb
loopne
dec
mov
push
and
insb
and
cs
mov
add
cmp
jl
jne
test
scas
in
jbe
outsl
mov
shr
pop
push
fdivr
in
in
mov
mov
sahf
or
imull
jge
hlt
inc
sbb
fisubrl
clc
mov
sbb
aaa
jnp
js
popa
cmpsl
sbb
roll
neg
icebp
int3
movsb
test
adc
mov
je
cmp
mov
outsl
ret
xor
js
insb
sub
mov
inc
cmpsl
movsl
mov
inc
add
jle
push
pop
mov
xchg
xchg
loopne
jns
adc
hlt
push
sbb
sbb
out
mov
arpl
mov
cmp
gs
and
lret
stos
pop
sub
push
imul
lret
mov
cmpsl
cli
add
ss
jmp
sti
jmp
jo
and
pop
shll
xchg
xchg
clc
pop
inc
aas
push
sti
aaa
jge
inc
nop
pop
rorl
rcr
pop
jae
insb
jno
pop
test
jo
punpckhwd
mov
loop
mov
lcall
sub
int3
gs
ret
and
inc
loope
ds
adc
mov
adc
pushf
sub
shl
mov
sub
mov
sbb
cs
test
and
aas
or
jmp
movsl
mov
repnz
dec
dec
addr16
dec
fwait
lods
push
insb
mov
or
cmpsb
pop
test
icebp
jae
cmp
add
xchg
xchg
rol
inc
inc
fnsave
mov
insl
add
das
adc
or
inc
mov
or
test
sub
add
or
or
lock
into
mov
in
cmpb
int3
jnp
adc
repz
jmp
ss
mov
dec
fsubs
mov
add
add
leave
push
xchg
cmpsb
xchg
sbb
push
xchg
sbb
insl
mov
rorb
jge
xchg
jbe
cmp
add
jl
jl
pop
push
jo
cs
sbb
int
xor
sub
jb
add
xor
xchg
or
and
jmp
pusha
iret
bound
add
lods
leave
jge
sti
dec
adc
or
inc
in
stos
stos
add
push
ja
gs
xor
add
inc
in
and
lods
sbb
inc
std
xor
pushf
cld
aad
jne
and
enter
sub
aam
fistl
clc
leave
cmp
nop
push
add
mov
or
icebp
mov
add
imul
lahf
lret
pop
or
xchg
mov
jg
lods
hlt
roll
jl
add
aam
out
jmp
aas
pusha
push
mov
addr16
pop
nop
roll
mov
stos
and
scas
jp
push
cmp
xor
test
out
mov
or
ret
lret
cmovo
pop
or
mov
int3
push
ss
scas
mov
mov
add
push
js
es
jmp
sbb
mov
cmp
jg
loopne
shrb
loop
lea
testb
jns
mov
inc
xor
iret
int
ds
xlat
jle
push
jge
cmp
aaa
mov
xchg
leave
inc
loop
cltd
cmc
test
xchg
jle
idivb
loopne
dec
mov
add
dec
fwait
insb
sti
aas
dec
add
xchg
push
xlat
sbb
imul
push
xor
add
pop
add
outsl
dec
push
inc
jmp
mov
cmpsl
shlb
cltd
stos
sbb
inc
aaa
mov
add
das
sub
fstpl
xchg
cwtl
out
test
mov
stos
test
add
adc
sti
and
sbb
fwait
cmp
pop
fdivl
inc
and
mov
jge
fnsave
dec
ds
test
pop
stos
int
cli
cmpl
xchg
and
pop
jns
inc
sub
or
push
mov
pop
add
cltd
stos
dec
mov
dec
add
out
xorb
inc
aaa
lcall
call
mov
pcmpgtw
xchg
or
pop
push
mov
stc
push
add
mov
je
inc
push
xchg
jge
mov
cltd
imul
stos
sub
or
lret
mov
push
inc
fsubrs
add
stos
mov
repnz
jg
cs
pushf
push
inc
sti
xchg
xor
mov
addr16
jg
or
shlb
cmp
sar
fsubr
or
push
adc
ficoml
xchg
cmp
mov
sahf
adc
inc
cmp
jb
test
stos
adc
push
jbe
or
iret
push
outsl
xorb
rolb
sbb
pop
push
push
pusha
sub
xchg
xor
xchg
jno
popf
outsb
pop
xor
pop
lock
jns
and
aaa
insl
push
or
rcll
or
popa
jle
sbb
sub
das
xor
pop
xchg
loope
adc
ss
aas
adc
adc
or
push
dec
scas
xor
inc
rclb
adc
sarl
call
pusha
sbb
inc
fwait
xchg
fcomps
push
xchg
xchg
mov
sub
loopne
movsl
lret
data16
push
lcall
hlt
inc
repz
sbb
out
xchg
mov
ss
ret
ljmp
adc
adc
inc
xor
jl
stos
cmc
out
and
xchg
add
mov
xor
push
pushl
cltd
mov
iret
ljmp
xorl
popa
stos
or
dec
jg
int3
jns
jl
movsb
xchg
inc
les
sarl
pop
add
sarb
dec
lret
push
add
test
bound
sub
sbb
call
fsubs
sub
adc
notb
dec
sub
js
push
jg
add
shll
into
pop
ljmp
sub
sbb
aas
das
xor
push
or
nop
scas
dec
or
mov
mov
inc
jle
add
mov
adc
add
and
cwtl
and
or
aam
out
int3
loopne
add
inc
jb
or
imul
dec
inc
fcompl
mov
adc
xchg
adc
jecxz
out
mov
lret
or
cltd
adc
jae
or
in
mov
mov
pop
fsubs
mov
push
call
cld
xor
stos
or
out
lods
or
ret
mov
stos
mov
insb
ljmp
fisubrs
mov
mov
inc
push
adc
sub
pop
lods
imul
lret
mov
mov
mov
pop
ret
out
shr
push
cmp
nop
inc
imul
dec
js
ss
jge
dec
push
pop
cmp
loope
lods
je
mov
push
and
ljmp
and
pop
adc
jne
in
push
mov
shl
jmp
outsb
mov
push
xchg
push
shl
jge
jmp
idivb
popa
or
xchg
mov
icebp
push
sbb
sti
ret
cmp
xchg
inc
lcall
cmpsl
pop
jno
scas
popa
add
mov
addr16
sub
outsl
add
das
cmc
and
fstpl
or
cld
fildll
xchg
lahf
dec
sti
and
cmp
or
mov
and
lret
and
test
add
out
jmp
pushf
rclb
test
mov
out
mov
and
movsb
jnp
insl
cmp
adc
mov
roll
cvtdq2ps
sub
cmp
mov
daa
lahf
mov
shl
mov
cli
leave
int3
dec
enter
stos
sub
mov
movsl
fs
sahf
add
mov
cmp
fs
dec
adc
lock
and
aad
sar
and
jp
dec
in
pop
jne
out
sub
test
rolb
notb
and
add
gs
cmp
mov
std
mov
lea
lods
mov
in
push
jmp
cld
or
hlt
dec
add
pusha
shl
sbb
sarb
fs
xchg
or
jbe
mov
sub
adc
jae
fdivrl
orb
jl
mov
adc
push
sub
mov
movsb
xchg
cmp
and
subl
outsl
jl
mov
xor
inc
xchg
jp
jae
sbb
push
frndint
lods
or
rcl
ja
add
inc
and
xchg
xchg
inc
jecxz
sbb
ljmp
std
dec
sub
lahf
xchg
sub
or
sub
std
fstps
inc
outsl
push
int
fdivrs
loope
mov
xchg
daa
cwtl
and
sub
lret
inc
add
jmp
mov
test
out
xor
xor
sub
movsb
scas
sbb
into
mov
cmovle
mov
lcall
cs
out
or
mov
hlt
mov
stos
aas
or
jp
sbbl
hlt
fnsave
mov
popa
adc
xchg
fcom
pop
jmp
repnz
lahf
mov
xchg
and
xchg
pop
outsb
pusha
cmp
xchg
jnp
cltd
in
push
shr
jno
jno
popa
int3
mov
mov
dec
sar
mov
adc
and
dec
cld
xor
cmc
ret
pushf
int
cs
aas
loop
mov
mov
add
mov
dec
rep
jb
daa
addr16
clc
ret
je
adc
es
test
mul
pop
mov
xor
pop
push
jmp
test
adc
sbb
jl
movd
mov
enter
jle
adc
lock
push
pop
rcrl
xor
pop
cmp
notb
sbb
cmp
jecxz
adc
and
xchg
sahf
add
inc
lret
adc
loop
adc
inc
sub
rclb
push
sbb
js,pt
push
cmpb
mov
sub
xor
push
rcrb
ret
mov
sub
arpl
in
pop
out
loope
loope
push
jmp
xor
xchg
std
mov
pushf
ffreep
mov
iret
or
lret
pop
aas
mov
rol
out
std
pop
cmp
or
and
es
mov
addb
pop
cmp
xchg
adc
stos
loopne
sub
mov
jl
push
mov
into
inc
pop
mov
dec
out
push
out
ljmp
sarb
cmp
fdivl
imul
pop
fimuls
mov
in
jno
mov
xchg
inc
stc
xor
test
aaa
fiaddl
ja
mov
push
mov
arpl
xchg
dec
push
sub
lcall
mov
cmpsl
sbb
out
cmp
ds
loope
mov
les
inc
jnp
test
daa
cmp
mov
pop
bound
pop
std
mov
scas
out
sbb
test
sub
inc
adc
call
shl
mov
int3
ret
fnstsw
in
inc
mov
lahf
aas
idiv
push
or
mov
loop
xor
push
mov
outsb
test
xor
inc
xlat
loopne
cwtl
jmp
negb
push
add
lret
push
stc
sbb
mov
fstpt
cmp
push
add
dec
mov
lods
sub
inc
sub
sbb
ds
adc
dec
cs
inc
add
daa
mov
sub
fs
and
rorl
ljmp
dec
or
pushf
pop
and
inc
clc
stos
repnz
push
fldl
jmp
jp
repz
mov
cld
std
jo
in
hlt
test
cmp
lock
or
int
push
xor
rorl
lds
sti
fnstsw
jge
pop
xor
daa
cli
cwtl
push
or
dec
je
pushl
insb
loopne
jbe
and
mov
in
sbb
stos
and
push
out
mov
nop
mov
inc
push
pop
add
pop
lahf
xchg
test
jo
enter
or
pusha
jnp
daa
mov
inc
cmp
roll
inc
push
xchg
push
xor
pusha
les
int3
push
lds
mov
ds
sarb
push
xchg
outsl
xchg
adc
loopne
mov
sub
sbb
mov
jp
testb
insb
xor
sub
in
rorl
mov
hlt
fadd
sbb
icebp
adc
pushl
jae
inc
jbe
sar
jmp
outsl
lea
sub
test
inc
lods
scas
jge
iret
es
fisubs
mov
mov
out
sti
stos
fsub
cmp
insl
shlb
subb
add
cs
sub
addr16
mov
xchg
xchg
stos
mov
xor
loopne
cmpsb
jmp
xor
sub
fadds
mov
dec
idiv
lcall
push
sahf
mov
insl
in
xchg
adc
lcall
xor
lods
iret
lods
out
repnz
std
outsl
lahf
ss
orl
inc
add
iret
pop
xorb
lods
sub
pop
fwait
test
outsb
nop
sbb
imul
xor
stos
in
xchg
ljmp
sub
repz
mov
int
push
or
test
es
mov
out
fstpt
and
push
fdivrs
add
pop
pop
xlat
stc
push
xor
adc
pop
test
and
mov
jle
sbb
imul
test
sahf
and
das
inc
mov
gs
stc
divl
sub
jmp
xchg
ljmp
dec
jae
cmp
shl
notb
iret
or
loopne
jne
fxch
mov
testl
cmpsl
jns
mov
cmp
imul
out
push
jns
insl
mov
xor
and
movb
addl
mov
fsubrs
iret
cmpsb
jns
sub
int
xchg
dec
bound
push
xchg
pop
cmp
pop
xchg
les
mov
cmpsl
adc
mov
adc
jo
inc
pop
inc
and
jp
aaa
or
into
sti
cmpsl
cs
and
mov
xchg
outsb
aas
cmpsb
daa
scas
sub
sbb
add
pop
jecxz
fwait
cmpsb
repnz
push
pop
ja
lahf
fldenv
dec
sbb
dec
in
in
in
xor
fsubrp
mov
loopne
or
adc
dec
push
or
imull
jnp
xor
adc
jno
ja
push
push
adc
sub
ja
popa
out
gs
xchg
sub
mov
cmp
div
std
insl
mov
push
repz
jmp
and
jecxz
fimuls
push
sub
ljmp
sbb
xchg
xchg
daa
data16
movsl
lods
dec
xchg
testl
stos
jl
add
jmp
loop
ret
mov
sub
bsr
mov
push
outsb
aam
ret
loope
push
mov
nop
xchg
jo
pop
pushl
xchg
mov
pop
mov
adc
or
int
movsb
push
cmpsl
popa
lcall
out
jbe
pop
lods
sub
in
loopne
mov
adc
dec
out
cwtl
nop
mov
xchg
in
push
cmp
and
mov
divb
sbb
ja
addr16
jecxz
or
jmp
adc
jecxz
arpl
add
dec
shll
push
pop
adc
mov
out
mov
ror
dec
dec
out
fildl
push
imul
and
mov
arpl
rorl
mov
daa
clc
enter
xor
inc
dec
mov
loope
and
mov
and
scas
mov
cmpsb
adc
sub
faddl
dec
into
push
inc
add
loopne
xchg
push
psrlq
sbb
ljmp
nop
fadd
inc
mov
pop
fildl
jle
xchg
int
bound
rorl
sbb
popf
std
popf
lahf
or
shl
xchg
xor
shr
test
lahf
xchg
push
xor
sbb
gs
loope
add
mov
xor
cmp
mov
jge
dec
xchg
mov
jg
repnz
push
sbb
ret
negl
adc
push
pop
leave
and
mov
sbb
cmp
sub
push
scas
mov
and
rclb
jae
fists
pushf
adc
ds
sahf
jmp
jno
fnsave
inc
fnstcw
inc
mov
push
outsb
add
mov
mov
cltd
xchg
add
adc
je
cmp
xlat
cltd
push
xor
outsl
sti
lret
stos
std
jo
out
jno
leave
mov
adc
imul
leave
in
div
cmp
rcrb
xchg
add
cmp
pushfw
fildll
mov
jge
cmpl
dec
cmc
push
xlat
rclb
mov
sbb
pop
dec
out
movsb
pop
pop
inc
cltd
or
xchg
sar
push
frstor
int3
mov
cmp
adc
lds
jge
pmaddwd
jnp
push
xchg
data16
aad
add
inc
xlat
insb
pushf
ds
dec
outsb
cmp
inc
push
imul
adc
mov
jnp
sub
push
filds
std
mov
nop
push
fnstcw
mov
ds
imul
adc
jge
data16
jne
dec
sub
mov
inc
ffree
and
ss
pop
mov
loopne
test
mov
xor
pop
sbb
negl
cli
outsl
or
adc
xchg
push
and
jns
sub
jmp
or
lcall
sbb
dec
adc
loop
test
mov
add
jo
hlt
negl
lods
hlt
out
repz
stos
mov
sbb
dec
ljmp
fimull
pop
data16
inc
shll
out
xor
mov
scas
push
repz
lods
inc
adc
je
int3
call
push
mov
add
in
fwait
or
lahf
aaa
aas
xchg
pop
xchg
int3
xlat
pop
mov
xchg
and
aaa
pxor
and
inc
cmp
jl
imul
fs
sti
jl
fistpll
mov
cmc
ljmp
or
inc
mov
bound
les
addr16
hlt
cwtl
cmpsl
fistps
inc
aam
movsb
or
in
out
xor
pop
mov
sub
jb
das
aad
sub
into
xchg
mov
rcll
rcr
gs
out
data16
enter
std
push
test
loop
test
mov
imul
leave
ja
lret
loopne
push
mov
loop
add
ret
add
idivl
hlt
aas
xor
addr16
sahf
dec
ljmp
cmp
lock
ss
out
xor
lock
daa
cli
test
fcmove
iret
pushf
stc
test
mov
jno
pushf
sbbl
xor
lahf
xchg
push
stc
jle
jle
repnz
pop
cs
scas
jb
jl
mov
repnz
or
or
jbe
arpl
lret
and
insl
les
mov
mov
jnp
dec
aam
dec
cmp
pop
repnz
cmp
cli
dec
cwtl
gs
js
or
loope
repz
inc
mov
leave
fldt
loopne
cs
movsl
js
lret
xchg
cmp
sbbl
inc
inc
cmp
fs
push
movsb
dec
loop
jmp
xchg
paddd
in
daa
stos
dec
push
dec
clc
lahf
out
loopne
rcrl
test
or
mov
xor
pop
sub
xchg
fcomip
rcrl
subb
jne
popa
addr16
cmp
fisubrs
mov
js
and
cmp
xor
outsb
push
out
loop
xchg
dec
xor
dec
xchg
cmp
mov
and
lret
fidivl
sbb
push
leave
and
out
push
rcl
mov
xor
stos
or
xor
push
stos
rcl
jp
cmpsb
sub
insl
add
addb
repnz
in
imul
adc
push
cli
inc
sub
clc
aad
sub
sbb
mov
int3
sbb
pop
adc
loop
dec
cmp
and
mov
stc
push
sti
dec
cmp
jp
push
xchg
test
lods
pop
sarl
dec
cwtl
adc
push
add
lods
mov
inc
xlat
dec
addr16
adc
lcall
popa
sub
sub
xor
sbb
jo
scas
inc
adc
and
dec
aaa
shl
lcall
repz
xchg
or
pop
xchg
negl
dec
sbb
push
enter
cmp
bound
or
add
aad
dec
pop
jno
jp
test
imul
mov
iret
and
dec
mov
and
xchg
lea
jno
repz
xor
adc
and
dec
repnz
rorl
orb
shll
fidivs
lods
arpl
adc
mov
mov
bound
cmp
lods
inc
xor
loop
or
lahf
fisubrs
mov
cmpsl
out
xchg
les
push
fcoml
mov
jnp
aam
sbb
fnstcw
fsubrs
icebp
or
adc
adcl
dec
leave
pop
sbb
ficomps
data16
divb
roll
idivl
sarl
mov
outsb
pop
sub
aad
mov
repz
dec
loop
xor
jnp
or
sbb
in
and
sub
pop
jp
fimull
xlat
cmp
std
lcall
jmp
stos
sub
cmp
cmpl
je
xchg
ret
and
and
mov
mov
cmpsl
xchg
fbld
mov
cmp
or
and
or
inc
xchg
mov
cld
call
inc
fidivrl
enter
out
add
or
or
add
xchg
movsl
js
lret
lcall
inc
mov
and
mov
jmp
js
lods
pop
daa
divl
ds
xchg
insb
stos
fcoml
outsb
iret
mov
stos
ret
inc
leave
fbstp
mov
jb
ret
jno
adc
cli
incl
jl
adc
fadd
or
sub
out
aaa
xchg
popa
orl
mov
push
loop
lods
mov
ljmp
adc
inc
lods
addb
push
xor
cld
mov
sti
jecxz
repz
sti
mov
repnz
xchg
push
lret
in
push
fildll
bound
hlt
push
xchg
dec
add
inc
inc
fucomi
push
pushf
orb
push
out
or
lcall
xor
in
test
jbe
into
mov
sbb
mov
xor
pop
mov
inc
xor
mov
cs
loope
pop
or
mov
xor
out
jg
or
push
sbb
shll
add
dec
push
addr16
and
mov
sub
mov
sub
push
push
in
rorl
ss
push
jns
and
imul
jo
xor
cs
jp
add
mov
ljmp
pop
popf
lods
inc
or
dec
repnz
testl
loope
push
popf
stos
adc
dec
fnsave
popa
int
iret
les
xchg
xchg
movsb
adc
mov
inc
sbb
stos
lcall
or
out
std
hlt
cli
push
es
mov
aaa
dec
aaa
mov
mov
dec
jnp
sub
enter
mov
jae
ja
pushf
cmp
cmp
das
in
addl
loope
push
data16
add
aam
xor
push
imul
sub
int3
xor
inc
cmp
mov
adc
cwtl
dec
xchg
aam
cmp
in
jge
sub
jg
test
push
sub
out
enter
in
sub
imul
jns
mov
test
push
and
push
pop
cmpsb
adc
dec
pop
adc
or
nop
lret
jecxz
aam
lods
jge
add
adc
xlat
mov
in
push
imul
test
mov
sub
or
push
fst
stc
andl
aaa
mov
cmp
jle
aam
xchg
test
pop
cmp
test
pop
rclb
je
inc
fdivrl
cmp
call
sti
fisubrs
insb
fwait
lcall
push
or
inc
rcl
icebp
add
jo
incl
dec
fsub
imul
out
rorb
sbb
push
jg
and
sar
sti
mov
pop
loopne
or
inc
out
sub
mov
bound
test
and
pop
cltd
into
jae
adc
icebp
gs
fisttpll
inc
xchg
inc
out
aad
out
sarb
push
imulb
cmc
les
adc
lods
shll
loope
xchg
jecxz
in
rorl
es
push
sbb
into
sub
fidivl
mov
test
scas
dec
fadds
pop
cs
aad
adc
mov
fimuls
or
mov
addr16
push
mov
sbb
sbbb
outsb
pop
out
inc
icebp
mov
mov
push
int3
stos
insl
sub
xor
push
push
lods
push
or
adc
cmp
push
jns
mov
xchg
pop
aas
xor
lret
jl
lds
lods
popf
sub
mov
ds
imul
test
in
ja
add
shlb
lcall
dec
movb
mov
pop
cltd
in
cmpsb
ficoml
jge
pop
sub
icebp
push
lahf
push
push
loopne
mov
pusha
notl
aad
out
leave
imul
jne
pop
mov
jmp
jmp
out
dec
xchg
jb
dec
mov
sahf
jo
inc
lret
push
sahf
movsb
and
sahf
xsaves
fs
sub
and
ds
sub
movsl
push
pop
push
shrl
mov
leave
scas
dec
insb
ret
in
daa
inc
inc
jae
outsl
into
sub
inc
stc
mov
mov
leave
fxch
fcomps
addr16
push
into
add
out
sti
xor
or
into
fwait
out
bound
push
icebp
cmp
pop
loop
jne
repnz
cli
cmpsl
mov
sub
xchg
bound
popa
sbb
push
lods
fadd
dec
push
ds
shl
imul
out
leave
dec
mov
inc
pusha
stc
mov
sbb
push
imul
xchg
sub
out
ret
add
sbb
xchg
pop
sub
push
lahf
cmp
fdivrl
jle
ljmp
xor
jbe
out
xlat
or
sbb
addr16
daa
inc
cwtl
and
mov
rcll
pushf
popf
stc
pop
out
test
nop
mov
stc
mov
jge
mov
stos
adc
aaa
rcl
addl
ja
aas
add
repz
mov
mov
aas
popf
sarb
pop
ficoms
popf
or
sub
push
call
jl
aad
push
dec
in
push
dec
adc
ljmp
test
or
ltr
fxch
mov
into
cmp
std
lock
jge
add
mov
jg
scas
xor
sub
loope
add
fucom
push
sub
and
testl
stos
xor
push
int
jecxz
or
and
inc
inc
mov
xchg
data16
scas
shlb
and
jmp
pop
sarb
add
lahf
cmp
pop
pusha
ss
and
pop
adc
cmpsb
test
pop
push
push
pop
sub
pusha
lock
js
push
pxor
popa
movl
mov
inc
inc
push
sbb
icebp
lds
jno
inc
pop
sbb
xchg
xor
cmp
movsl
repnz
aas
mov
cmp
cmpsl
xchg
mov
mov
and
adc
pop
adc
fcomp
dec
movsb
ret
out
jne
rcrb
jo
test
jp
pop
shll
les
push
cmc
cs
mov
mov
fadds
mov
lock
add
js
inc
inc
and
sahf
out
push
sub
inc
sbb
call
bound
pop
sub
mov
push
leave
dec
push
outsb
aad
push
jmp
cmpsb
sbb
jecxz
cmc
in
mov
inc
sbb
in
mov
aas
cmp
pusha
notl
arpl
sbb
lea
scas
xor
and
mov
adc
mov
inc
fistps
dec
mov
ja
mov
jl
push
cmpsl
sub
adc
xor
dec
inc
pop
lret
xor
js
pop
or
sub
sbb
fcmovnbe
pop
outsb
iret
sbb
push
adc
int
xchg
push
lods
push
inc
shrl
jl
hlt
test
pop
cmp
sarl
pop
cmp
adc
out
enter
mov
mov
hlt
fimull
adc
stos
add
and
repz
pop
jmp
xor
movsl
mov
dec
xchg
jl
in
pop
insl
std
xchg
icebp
cmpl
inc
out
push
inc
in
pop
movsl
ret
xchg
inc
push
push
in
imul
add
and
imul
mov
push
roll
inc
and
xor
add
push
inc
in
scas
xchg
stos
pushf
xor
cmp
rcl
insb
mov
in
dec
das
mov
mov
mov
mov
ret
mov
xor
into
cmpsb
add
jle
js
and
pop
rclb
fcomp
das
jae
add
aad
push
and
mov
inc
lock
negl
mov
lcall
mov
aad
lcall
dec
std
sub
enter
dec
test
test
cmc
lds
dec
testb
movsl
mov
fwait
ds
pop
roll
in
xor
arpl
mulps
out
xor
popa
aad
iret
inc
call
and
lock
insl
sub
inc
jecxz
les
lods
sbb
imul
push
jg
push
jnp
stc
scas
test
sub
mov
addr16
stos
jo
inc
mov
stc
test
xor
nop
lds
xchg
dec
sbb
cmp
mov
cmc
sub
sub
or
out
mov
outsb
jmp
push
dec
jl
cmp
fsts
movsb
rol
arpl
gs
sub
sbb
outsl
jmp
mov
jg
sbb
int
mov
push
pop
scas
iret
cwtl
icebp
fwait
outsl
mov
fldt
test
jmp
mov
cmp
cmp
sub
cs
jl
sbbl
and
cld
sete
hlt
daa
fists
mov
fs
lock
outsl
push
mov
movsb
and
push
sub
call
jbe
cmp
xor
xchg
mov
sbb
mov
cld
ret
cld
mov
scas
test
lods
inc
xchg
sub
cs
lahf
add
ficomps
pop
xor
jb
mov
fs
or
pop
lret
push
aaa
dec
imul
jp
sbb
and
in
sub
cli
in
and
rolb
insl
adc
push
jae
das
sbb
repz
loop
dec
push
jmp
sbb
push
mov
popa
xchg
jnp
sbb
push
pop
lret
daa
xor
cmc
sub
mov
in
pop
mov
in
lcall
fisubrs
ljmp
jmp
ret
pop
inc
rcrl
js
mov
push
xchg
es
sub
mov
add
mov
mov
sbb
mov
lcall
in
sub
add
xchg
xor
dec
lods
fdivrp
xchg
dec
mov
mov
outsb
fdivs
jmp
inc
inc
cmpsl
mov
outsb
push
je
xchg
cld
fwait
fwait
jmp
in
loopne
enter
jp
iret
test
sbb
stos
test
cmc
sub
mov
inc
ret
aas
cmp
inc
cld
push
push
mov
cmpsl
fdivr
jge
add
aaa
xor
cltd
fisttpll
lahf
mov
xor
or
daa
mov
stos
add
dec
shrl
mov
sbb
mov
es
adc
mov
mov
jae
dec
movsb
push
repz
inc
icebp
xchg
ret
xor
mov
jns
sbb
mov
hlt
addr16
jnp
jnp
fdivs
adc
imul
mov
cmpsl
mov
outsb
mov
stc
mov
lods
jns
add
inc
mov
lds
mov
aad
leave
insl
test
je
adc
stc
sub
mov
shr
lods
sub
push
sub
insb
jo
inc
push
mov
sbbb
in
outsb
mov
adc
out
inc
cmc
ss
mov
outsb
call
and
adc
test
arpl
inc
inc
jle
xor
push
mov
stos
icebp
push
scas
cmp
adcl
mov
movsl
jnp
std
divb
jne
sbb
jmp
sub
rorb
and
movsl
push
rolb
int3
mov
push
xchg
pavgb
lret
jno
int3
mov
bswap
je
sub
pop
sbb
std
jmp
inc
cmp
adc
rolb
push
lds
lret
jl
addps
inc
fcmovu
mov
aam
cmp
cmp
mov
nop
jmp
pop
hlt
cmp
cltd
sbbb
mov
mov
fiaddl
in
adc
hlt
mov
mov
and
mov
in
inc
mov
in
cmpl
jns
out
sbb
repnz
ss
xor
pop
aaa
mov
xor
mov
push
mov
arpl
xor
mov
je
mov
sub
repz
scas
xor
pop
xchg
and
adc
jo
pop
cmc
add
inc
dec
test
movsb
and
and
lea
xorb
aaa
inc
fildl
popf
imull
mov
and
aam
adc
popa
jb
in
loop
xchg
out
enter
cmpsl
pusha
movl
push
inc
mov
push
add
or
rorl
push
imul
aas
lahf
xchg
jo
or
jb
das
scas
imul
imul
adc
insl
mov
rorb
dec
andl
inc
inc
dec
mov
mov
das
stos
xor
daa
rcll
shl
pop
sub
dec
mov
sub
pushf
mov
mov
push
imul
push
jle
sbb
pop
xchg
adcb
jbe
bnd
orps
lods
add
mov
lcall
fidivs
repz
loope
cmp
sbb
pop
repz
inc
cmpsl
or
push
mov
mov
sbb
ja
mov
add
xor
mov
or
sti
nop
js
dec
pop
xor
xor
jb
add
aaa
adc
clc
jo
inc
shl
fnstsw
mov
push
and
lods
fcomi
fimull
push
test
mov
dec
aam
dec
push
imul
jno
stc
xchg
mov
lret
and
lcall
adc
cs
into
or
cld
popa
cli
je
jb
inc
push
xchg
mov
cmpsl
and
push
rolb
dec
imul
mov
imul
inc
jecxz
cltd
mov
bound
int
push
testl
lds
cmp
or
dec
pop
or
test
cmp
out
in
push
pop
ds
insl
clc
jp
sti
pop
or
or
hlt
fstps
push
push
out
jmp
cld
cmp
mov
daa
push
jge
and
sub
cld
add
sub
add
adcb
push
cs
push
and
jno
ljmp
jecxz
decb
mov
sbb
hlt
mov
enter
dec
jge
movsl
mov
mov
mov
sbb
ret
mov
jmp
daa
inc
push
adcl
out
sahf
ret
add
jg
lea
outsl
and
fwait
mov
mov
rolb
jle
jns
daa
jle
lahf
inc
xor
pop
and
ja
mov
int3
pop
jne
push
lcall
mov
lods
adc
or
pop
sub
testl
xchg
sbb
mov
ret
inc
cmc
loope
push
jle
mov
call
outsb
jg
lahf
popa
aam
out
cmc
and
aas
pop
outsl
mov
adc
subl
popf
push
xor
mov
sbb
xchg
pop
push
js
mov
push
in
mov
cmpsb
sbb
inc
icebp
lock
cwtl
hlt
js
or
jo
ss
scas
and
lds
gs
xchg
js
inc
cmp
orl
idivb
in
leave
les
inc
push
nop
sbb
rorl
leave
xchg
shlb
shlb
incl
aad
cmp
es
lcall
enter
fs
lret
lods
adc
jge
sbb
sbb
into
sub
xor
test
push
xorl
orb
pop
mov
icebp
xchg
sub
xchg
je
scas
or
push
in
mov
and
pop
adc
xchg
xchg
lea
or
sarb
loop
mov
mov
mov
in
loope
fbstp
sub
mov
movsl
mov
sbb
mov
or
mov
mov
mov
pop
fabs
pop
daa
push
jmp
sbb
xor
pop
out
fwait
mov
inc
ljmp
or
sahf
mov
lcall
jns
push
cmp
nop
xchg
adc
jns
dec
addl
and
lods
add
mov
sahf
add
addr16
cmc
stos
jle
add
push
or
sbb
xlat
outsb
push
std
or
shl
add
fcmovnu
xchg
inc
lret
xor
inc
lcall
mov
push
mov
mov
and
cltd
mov
jnp
ret
mov
mov
xchg
out
jae
cld
icebp
aam
mov
adc
mov
aaa
xchg
pop
sbb
push
mov
pusha
adc
js
jo
lret
sub
xor
jbe
jo
ret
or
and
cmp
pop
dec
pop
aas
sbb
mov
out
cmpsb
fidivs
cmpsl
lahf
inc
les
subl
sbb
cltd
adc
enter
outsl
inc
pop
adc
dec
mov
iret
xchg
lret
std
sbb
jns
sub
icebp
icebp
clc
ret
push
sub
rcl
adc
aaa
mov
mov
insb
in
sub
test
loope
into
mov
or
sar
mov
mov
mov
rorl
lret
mov
pop
loope
mov
cmp
mov
mov
shll
xchg
xor
stc
adc
fwait
xchg
xor
fcomps
test
fisubrl
icebp
fldl
or
gs
in
lds
in
mull
and
fsts
dec
aas
mov
lcall
std
dec
out
stos
inc
cmp
arpl
movl
mov
clc
popf
movsb
aas
ficomps
add
jecxz
inc
aaa
mov
xchg
mov
pop
dec
cmp
pop
shlb
or
clc
xor
pop
daa
cld
lods
and
aas
addl
inc
jecxz
adc
xchg
sbb
adc
mov
sub
jne
xor
xchg
insl
lret
dec
lock
decl
inc
clc
cmp
les
push
iret
iret
clc
leave
xchg
test
push
mov
lods
daa
mov
jno
adc
mov
fidivrl
dec
ljmp
push
sbb
dec
dec
sbb
dec
jne
push
mov
movsb
pop
and
push
out
aaa
sbb
fmull
and
add
xchg
adc
mov
loope
insl
leave
mov
pop
push
cli
sub
stc
lock
stos
lret
or
inc
pop
js
test
inc
cld
and
mov
inc
dec
aaa
int3
loopne
pop
stc
aam
int
sti
pop
fidivrl
add
ret
xor
and
scas
stos
mov
add
cmp
movsl
push
fxch
aam
push
xor
pop
popa
sbb
mov
xor
imul
push
cmpsb
pop
sbb
shr
mov
leave
mov
push
xchg
push
push
ret
push
call
lock
inc
pop
fcmovne
ja
or
mov
mov
aam
dec
bound
inc
aaa
lods
shrl
nop
mov
jnp
push
xchg
std
jnp
cmp
data16
cmp
mov
adc
dec
sub
stc
dec
clc
mov
xchg
xchg
jns
xchg
and
das
and
mov
inc
das
test
mov
push
repz
arpl
decb
negb
jae
cwtl
imul
or
mov
fcompl
jbe
mov
into
addr16
insl
insl
outsl
rolb
add
out
and
mov
into
or
xchg
mov
insw
or
cs
or
aad
and
outsl
jp
test
inc
add
sub
insl
adc
inc
cs
in
mov
sbb
mov
daa
subb
fadd
mov
xor
pop
mov
inc
pop
adcl
pop
sub
adc
iret
je
out
inc
cmp
push
repnz
jnp
pop
pop
cltd
or
push
into
xor
sbb
mov
stos
mov
add
fwait
ljmp
loope
loop
movsb
xchg
mov
lcall
push
icebp
movsb
addr16
add
adc
iret
loopne
iret
add
add
int3
fsubl
jae
jns
mov
mulb
test
xlat
sub
pop
push
cmp
adc
test
mov
push
dec
and
enter
lea
dec
in
xchg
sub
scas
or
data16
imul
jg
and
scas
mov
divb
ds
jg
clc
sti
xlat
repnz
lods
icebp
loopne
es
xlat
cltd
data16
sbb
adc
mov
push
cmp
or
xor
in
sbb
cmp
xchg
mov
pop
ljmp
mov
mov
stc
movsl
shrl
and
jbe
movsb
int
sub
or
sbb
push
and
mov
mov
xchg
enter
and
scas
pop
cmpl
adc
andl
in
stos
adc
adc
loopne
mov
and
cwtl
shlb
outsl
je
scas
inc
int3
int3
adc
adc
ficompl
or
inc
daa
or
std
clc
sti
jp
push
sbb
push
mov
fadds
mov
movsl
cli
jae
xchg
and
and
call
cwtl
jo
popa
clc
in
mov
scas
stos
sub
xchg
xlat
sbb
fwait
test
sbb
repz
xor
xchg
adc
das
xor
sub
test
xchg
arpl
cwtl
leave
test
mov
xor
rcl
cmp
jmp
stos
imul
dec
xor
aaa
lods
mov
aaa
and
sbb
inc
or
mov
add
inc
cli
pop
cltd
inc
hlt
sub
mov
inc
test
xchg
pop
mov
mov
mov
jmp
imul
fidivrs
jno
sub
imul
dec
and
fsub
push
rcrb
xchg
mov
push
pop
popf
iret
xchg
mov
fisttpll
xchg
cmc
sbb
repz
or
sub
imul
lcall
xchg
fs
rcr
cmpl
cmp
jbe
jmp
sbb
xchg
pop
daa
lret
movsb
pop
sub
ret
or
pop
ja
xor
cltd
mov
aad
or
fabs
or
jo
and
pop
test
mov
sbb
mov
ficoms
test
in
insb
mov
sahf
jbe
and
loop
xchg
mov
sbb
jno
and
mov
fdivrs
or
clc
xor
ret
cwtl
and
pushf
mov
xlat
mov
icebp
mov
pop
pop
pop
jmp
scas
pop
sbb
out
push
loop
xor
out
in
dec
jne
mov
and
fistpll
inc
and
mov
mov
inc
cmpsb
add
mov
call
xchg
fiadds
insl
mov
inc
pop
loope
ljmp
and
sbb
cmp
fiadds
test
std
sbb
sbb
push
cwtl
adc
add
cmp
stos
fs
cltd
in
dec
in
es
jle
mov
jbe
rcrl
dec
pop
sbb
sbbb
iret
jns
push
pop
xor
or
sub
nop
cmc
add
out
jl
dec
or
adc
dec
fnstenv
inc
pushl
or
or
imul
out
mov
mov
mov
cltd
jmp
lcall
scas
inc
mov
push
xchg
sub
mov
sub
xchg
das
imul
sub
mov
jp
imul
sub
out
sbb
inc
jbe,pt
fs
cmpsl
icebp
push
loope
xchg
mov
mov
icebp
or
nop
or
mov
inc
push
mov
push
stc
mov
adc
mov
jg
icebp
sub
fs
sub
scas
lock
push
fwait
xor
push
test
sbb
and
mov
inc
shl
das
jno
rcrb
insl
mov
lds
aas
lahf
ds
loopne
adc
pop
xlat
insb
sar
cwtl
xor
movsl
test
outsl
lcall
ss
jp
xor
inc
jns
mov
js
int
inc
xor
cmp
adc
and
jp
lahf
in
sbb
sti
inc
jne
xor
xchg
xchg
mov
add
movsl
cwtl
ljmp
xor
jmp
cmp
ret
mov
sub
inc
push
xchg
out
xlat
lds
aas
mov
iret
xor
shll
push
filds
out
movsl
jle
repnz
cmp
cltd
inc
xchg
insb
add
cltd
jno
sub
imul
xor
adc
js
xchg
shrl
xchg
and
push
lods
pop
dec
aad
movsb
dec
and
into
pop
ss
and
jmp
mov
push
push
sub
hlt
xor
xor
or
push
mov
mov
cltd
add
movsb
xchg
sub
faddl
stos
les
jbe
clc
sarl
loope
cmp
xor
inc
or
outsl
nop
pop
mov
lods
addb
add
inc
jl
sbb
push
incl
inc
or
jb
xlat
daa
dec
mov
xchg
sti
das
shll
sub
ret
and
gs
in
lods
enter
je
frstor
iret
inc
xor
push
shlb
lcall
mov
pop
adc
inc
bound
cwtl
subb
jns
sbb
dec
push
xchg
loopne
jp
xchg
pusha
imul
ret
outsl
fidivs
adc
mov
cmp
movsl
ljmp
dec
icebp
icebp
and
push
pushf
rolb
repz
jne
lret
push
je
mov
es
jo
scas
jmp
sbb
cmpsb
movsb
mov
xor
les
out
lret
pop
je
test
pop
jp
mov
jl
shlb
sub
lret
jle
stc
adc
mov
mov
lock
mov
stos
cmc
mov
arpl
lcall
icebp
sbb
in
cmp
mov
out
adc
jno
sub
repnz
aad
dec
lds
fsubr
loopne
into
dec
mov
add
push
jmp
fnstsw
push
mov
cmpb
std
aad
adc
sub
icebp
lock
mov
adc
lea
loop
jl
mov
inc
and
cmpsb
mov
enter
sbb
es
xor
sti
xor
jbe
add
push
add
nop
mov
enter
cld
sti
movsl
lock
popa
ja
cmpsl
push
lret
scas
xor
aaa
std
out
ljmp
out
mov
clc
add
mov
xchg
pop
or
cmp
lods
push
mov
and
and
push
add
or
mov
sbb
outsb
mov
bswap
xor
pop
lea
cmpsb
lods
sbb
jo
cwtl
adc
mov
je
rcl
lds
jae
in
shl
pop
imull
mov
sbb
mov
xor
mov
out
jecxz
jl
mov
or
test
mov
mov
aam
loope
or
and
jnp
add
xchg
mov
ret
orl
stc
dec
mov
or
ds
sarl
mov
inc
push
add
sub
arpl
push
push
fs
jmp
mov
in
push
inc
inc
add
xor
sub
std
push
inc
xor
xchg
ljmp
shlb
les
and
sbb
gs
mov
aad
pusha
sub
jle
jmp
jmp
loope
popf
sub
sbb
loop
aam
loope
int
out
mov
outsl
mov
and
imul
mov
pop
xor
ja
pop
imul
dec
mov
shlb
cwtl
add
and
jl
cmpsb
stos
sbb
xchg
in
ret
in
bound
xchg
lds
je
ret
cmp
lock
jo
xchg
sahf
sarb
push
xchg
mov
call
push
sahf
das
or
add
rcll
sbb
add
lret
data16
int3
mov
popa
xchg
xor
adc
fwait
cld
push
and
jb
into
outsl
xor
ja
mov
and
fisttpl
cmp
dec
mov
outsl
or
wbinvd
div
or
imul
xor
out
and
into
loope
cmp
cld
push
test
jg
in
inc
cmpsb
lcall
fidivrs
ds
fiadds
call
jg
xor
push
mov
dec
test
jo
ror
push
dec
dec
aam
fstps
andb
leave
popw
inc
push
lret
push
cld
in
xchg
adcl
movl
cmp
es
repnz
jg
in
insl
test
push
xchg
push
mov
arpl
in
shl
dec
stos
cli
lock
jmp
pushf
jecxz
xor
fmuls
sti
mov
pop
sti
bound
jae
test
mov
add
and
sarb
push
jbe
testb
add
xchg
xchg
in
mov
xchg
jge
inc
mov
xor
dec
test
pushf
adc
push
int
dec
std
mov
add
addr16
out
out
pop
jl
pop
or
jmp
lods
out
insb
aad
test
cmpsl
hlt
add
lcall
mov
popf
sti
jae
insb
call
sbb
dec
lret
imul
imul
stc
mov
mov
add
in
adc
sbb
jg
out
xchg
outsl
clc
cmp
mov
dec
mov
or
cmp
dec
or
insb
dec
movsl
adc
in
cltd
mov
bound
mov
leave
mov
sbb
xchg
insb
cmp
or
inc
aas
jo
aaa
ljmp
xlat
enter
push
dec
into
cld
jbe
mov
clc
aaa
xchg
data16
and
mov
cmpsb
push
sarl
push
push
push
movsb
mov
popa
mov
pop
adc
inc
jnp
test
sub
ficoml
xor
cltd
aad
add
jns
sti
shlb
adc
jmp
xor
and
sub
or
add
jae
cmpsl
jle
sub
mov
push
cs
test
nop
movsb
stos
pusha
mov
mov
mov
in
xor
inc
add
cmpsb
mov
xor
cld
pop
lods
in
int3
adc
fwait
mov
daa
mov
nop
jle
xlat
mov
clc
pop
jae
leave
int
add
scas
movsl
mov
mov
sbb
test
pop
sti
mov
shll
jne
fisubs
pop
in
pop
cmp
rclb
addr16
cmpb
jp
mov
jno
cmp
xchg
mov
sbb
xchg
movsb
aas
and
add
mov
int
or
mov
jle
xorl
test
fnstcw
repz
cmp
shrl
repnz
aam
sti
rorl
repz
sub
jecxz
mov
loope
xor
pop
pusha
enter
xchg
repz
push
das
push
in
lret
in
jno
and
fidivrs
xlat
jbe
out
pop
mov
nop
outsb
cmp
flds
out
sha256msg1
jecxz
inc
fcmove
sbbb
addr16
cmc
test
dec
cmp
fstpl
outsl
roll
mov
mov
out
adc
or
fcoml
insl
add
sbb
loope
std
test
mov
push
and
call
inc
mov
call
pop
and
lahf
mov
data16
scas
cmpsl
call
popf
mov
int
xor
pusha
bound
mov
mov
pop
repnz
aam
out
pop
sub
test
les
mov
ror
xchg
movsb
add
push
adc
into
fwait
repz
xor
movsl
dec
or
mov
jne
insb
xchg
pop
cltd
or
sub
dec
or
repz
pop
jg
xchg
xchg
in
imul
pop
inc
sub
cmp
inc
es
jb
out
aaa
in
scas
sub
leave
or
iret
and
je
or
sbb
mov
ljmp
fsubrp
push
call
scas
sub
xor
es
xchg
xchg
add
mov
inc
fnclex
mov
push
fmull
shrl
mov
je
jg,pn
outsb
push
sub
inc
xor
insb
je
in
xor
outsl
mov
stc
subl
clc
adc
setae
cmp
cld
repz
xor
sub
je
add
enter
not
mov
mov
pop
push
xchg
ret
rclb
push
cli
or
sahf
sub
repz
out
scas
add
sbb
and
add
sbb
cmp
cs
test
xchg
mov
in
xchg
inc
jmp
int
ss
mov
iret
push
cltd
push
mov
es
xlat
sbb
mov
sbb
jns
dec
and
sarb
and
mov
mov
sub
mov
cmpsl
sub
aas
loop
rcr
scas
lcall
std
pop
call
adc
inc
nop
pop
popf
mov
and
and
xchg
addl
push
scas
outsb
les
lock
dec
aad
jb
or
ss
fmull
out
jmp
clc
cwtl
jb
ds
rorl
pmulhuw
aad
and
sub
addr16
xlat
jnp
push
and
aad
xchg
test
jns
imul
aam
leave
mov
dec
adcl
insb
xor
je
dec
and
cli
fwait
cli
outsb
rol
in
mov
or
or
push
sub
mov
inc
sbb
das
or
loopne
mov
in
ret
jno
xchg
pop
dec
push
mov
mov
clc
iret
stc
mov
clc
push
adc
adc
jmp
lods
cmp
cmc
aam
sub
pushf
sahf
or
leave
daa
inc
push
cmp
or
or
and
push
jmp
xchg
sbb
fidivs
cmp
push
inc
mov
test
mov
mov
nop
xchg
xor
or
xor
in
jp
add
xchg
inc
xchg
pop
lahf
adc
outsl
mov
mov
repz
rcrl
mov
xor
mov
cmp
das
mov
sbb
mov
stc
cli
jnp
ret
inc
mov
inc
mov
ljmp
cmp
adc
dec
xchg
sub
lahf
dec
ret
dec
cmp
imul
mov
insb
adc
lahf
outsb
adc
xor
mov
inc
add
jge
jecxz
bound
cmp
hlt
ret
cmp
movsb
push
pop
adc
testl
repnz
or
mov
adc
mov
push
mov
movsl
div
dec
xor
xlat
pop
and
into
jne
fs
in
mov
add
push
icebp
cmpl
xchg
sbbl
imul
sbb
outsl
movsb
pop
xchg
pop
inc
fs
sub
test
or
push
js
icebp
or
mov
fwait
mov
jle
movsl
xchg
adc
pop
sub
scas
jmp
insb
mov
cmpsb
mov
les
hlt
mov
mov
lcall
push
push
negb
dec
es
pushf
rolb
dec
jg
popl
or
mov
fdivrl
and
mov
adc
push
inc
xor
adc
icebp
push
inc
mov
lea
cmp
jg
sbb
cmpb
pop
and
xor
add
cltd
aam
mov
das
ret
push
xchg
or
in
mov
sti
mov
mov
xchg
std
movsb
fidivl
pop
xor
or
leave
arpl
cmpsb
fstl
xchg
add
xor
arpl
popa
xchg
andb
cmp
mov
pushf
out
movsb
jmp
dec
imul
ljmp
push
iretw
lods
rcr
sti
in
int3
arpl
ja
or
pushf
adc
cltd
mov
int3
mov
jg
mov
xchg
xchg
sti
jne
jnp
inc
std
lock
lcall
es
fistps
pop
sub
fwait
xchg
sahf
or
cmpsl
mov
xor
stos
outsb
and
enter
int3
jae
sahf
dec
cmp
sub
push
adcb
aam
cmpb
pop
mov
fwait
mov
pop
hlt
faddl
lcall
rol
dec
test
add
fldenv
add
in
daa
sarb
arpl
pop
ret
jge
and
cld
push
mov
mov
mov
lods
push
dec
aam
lods
sbb
std
adc
jle
sbb
dec
xchg
cmp
jp
loopne
push
stc
inc
sbb
xchg
addr16
popf
or
push
pop
pop
aam
mov
out
mov
shlb
ja
shl
in
inc
gs
cmp
cmp
xor
ret
mov
movsb
cmpsb
popa
mov
jne
shl
sar
pop
in
call
push
nop
mov
popf
sbb
loopne
ret
xlat
dec
movsb
js
sub
cmp
cwtl
fs
inc
dec
jle
xchg
movsb
or
push
outsb
jmp
out
ret
cld
icebp
xchg
ja
fistps
sbbb
inc
rcr
outsb
jge
ret
jbe
arpl
scas
out
test
inc
jno
push
addr16
sbb
mov
sbb
pop
jecxz
pop
xorl
inc
shlb
xor
dec
mov
lret
cmp
movsl
icebp
and
fs
fcmove
or
ss
lcall
xchg
mov
stos
mov
adc
mov
jne
ss
push
xchg
and
cs
add
mov
push
inc
fsubs
and
cmc
jns
add
insl
xchg
sti
push
out
pushf
leave
dec
fs
nop
push
mov
cmp
pop
pop
pop
imul
sbb
pop
mov
ds
pop
out
call
sbb
outsl
cs
push
leave
inc
mov
jp
mov
jnp
ret
push
jno
jns
je
lea
lret
aas
js
stos
jl
xor
jns
push
sbb
push
jo
imul
xor
movsb
mov
mov
push
enter
jo
ds
orl
js
push
lea
test
es
imul
xor
pop
je
and
jo
lcall
push
xchg
mov
inc
mulb
inc
mov
icebp
jp
push
andb
leave
data16
and
xor
push
cmp
push
adc
jae
test
lock
sbbl
bnd
pop
mov
scas
sbb
sub
bound
and
push
stc
outsb
inc
xor
ljmp
pop
call
incb
xlat
test
mov
xchg
adc
inc
and
inc
jbe
adc
sbb
shl
pop
jmp
cmp
push
pop
imul
pop
cmc
fimuls
sbb
std
aaa
cmc
push
push
cli
imul
cmpsl
ja
dec
inc
js
cwtl
fmulp
and
jmp
inc
stc
sti
gs
pop
inc
dec
fwait
cmp
and
dec
sbb
pop
push
outsl
dec
cmp
stos
scas
fiadds
das
in
iret
sbb
test
loopne
dec
fs
jge
xor
adc
test
insb
pop
insl
repnz
ja
jl
or
mov
mov
fidivl
ret
and
cmpsb
cmp
ds
dec
stos
mov
mov
sti
jle
xor
mov
add
jns
repz
adc
test
fcoms
stc
movsl
fwait
lds
inc
pop
or
push
push
sbb
jmp
jge
outsl
sbb
jle
sbb
lahf
lds
adc
popf
cli
pop
imul
mov
out
sub
fildl
mov
mov
insl
imul
jne
xchg
lret
std
sub
ja
push
xchg
int3
mov
xor
hlt
rclb
je
and
push
xchg
sbb
fcomi
dec
ds
mov
gs
in
nop
lea
frstor
into
inc
inc
cmp
rol
add
inc
push
add
sub
pop
inc
es
mov
sbb
mov
stc
decl
popf
test
negl
mov
adc
out
mov
imul
adc
push
fnstsw
lods
pushf
loope
aad
in
adc
mov
pushf
sub
arpl
adc
hlt
mov
out
mov
or
shll
cs
inc
cld
dec
jae
xlat
inc
push
adc
mov
stos
dec
pop
or
subb
jmp
lcall
lods
sub
and
jp
sbb
add
sbb
inc
popf
mov
cmp
test
dec
sbb
mov
xor
add
scas
xor
mov
arpl
or
pop
ds
xchg
xor
les
mov
in
add
fmull
or
arpl
out
lock
push
sarb
xchg
mov
bound
fsts
shrb
push
insb
adc
test
add
mov
lret
jmp
ja
push
mov
push
mov
imul
jmp
mov
mov
ficomps
xor
ja
stos
or
repz
arpl
sbb
inc
push
clc
lcall
sub
push
cltd
rorl
ss
dec
insb
xor
sub
dec
and
pop
lret
test
inc
daa
mov
loopne
ljmp
mov
scas
cmp
jns
and
stos
test
mov
outsb
mov
jmp
jg
jecxz
mov
mov
mov
or
xchg
fstl
pop
and
sar
add
lret
add
push
lds
mov
mov
notb
insl
shrb
out
inc
loopne
pop
aad
rcrb
xchg
popa
fwait
addr16
xchg
mov
xor
pusha
imul
push
jp
mov
sbb
pop
in
jae
rcll
mov
and
mov
test
mov
stc
mov
push
lahf
ljmp
nop
out
push
xchg
cld
dec
in
fisubs
fmul
sarb
jle
dec
in
xchg
pop
adc
add
mov
aaa
or
jae
test
xor
inc
dec
lcall
popf
roll
aam
mov
icebp
lods
pop
movb
mov
fistl
push
pop
inc
mov
xor
jo
ja
iret
push
mov
rclb
jb
mov
hlt
les
test
je
cwtl
jae
push
dec
inc
or
outsl
jle
adc
arpl
inc
in
cs
add
insl
jp
mov
push
sub
das
addl
xor
addr16
and
in
mov
push
jg
push
loop
in
mov
imul
in
and
data16
sbbl
pop
ret
or
ror
cmp
jbe
and
stos
mov
mov
sbb
aas
dec
add
jae
sahf
stos
fisttps
sti
cmpsl
adc
mov
xor
jb
fwait
stos
call
test
mov
arpl
xor
rcrl
jbe
cmp
xor
int3
cmp
pop
mov
mov
fistpll
cld
mov
mov
sub
jnp
pop
movsl
xor
shr
shlb
add
push
sbb
aas
test
adc
scas
rol
mov
push
imul
imul
gs
enter
jno
xor
std
jmp
or
fwait
cmpsb
insl
jmp
pop
mov
mov
ss
push
mov
mov
decl
mov
add
xchg
ljmp
int
or
sti
lods
test
fidivrl
int3
lret
das
enter
enter
mov
jecxz
aas
sbb
enter
leave
mov
into
aaa
out
lods
insl
sbb
dec
imul
jns
addr16
and
mov
lods
rclb
adc
xchg
jge
jmp
fidivs
push
jp
sub
dec
mov
ficoml
fisttps
mov
xor
mov
mulb
int
push
xchg
xor
or
into
sbb
leave
lcall
xchg
dec
dec
lds
adc
cld
mov
scas
mov
hlt
jge
pop
jle
mov
or
lock
imul
jg
sbb
lahf
sbb
rorb
incb
outsb
push
loop
dec
push
jmp
daa
rcl
mov
test
stos
xor
add
mov
push
inc
mov
push
dec
or
mov
fdivrs
imul
lcall
out
test
mov
xchg
movsl
jns
xor
add
jle
xlat
daa
cmp
and
adc
out
pop
pop
shl
ss
mov
test
xor
mov
xchg
mov
fwait
les
ja
xchg
cmp
jge
out
inc
in
mov
jp
xor
mov
sbb
jp
mov
cltd
pop
ret
das
mov
call
scas
fsts
jmp
inc
cmp
sarb
popa
mov
pop
repz
arpl
mov
cwtl
inc
cld
out
leave
xchg
mov
icebp
out
jle
sbb
sahf
mov
out
push
lods
xchg
ds
outsb
and
mov
sub
sub
sub
stc
xor
mov
xchg
push
clc
lock
test
neg
mov
arpl
jns
js
subb
