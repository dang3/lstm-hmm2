jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
push
pop
inc
add
enter
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
pop
sub
and
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
leave
sbb
push
push
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
lock
inc
add
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
inc
inc
add
add
push
add
add
push
add
xchg
add
add
inc
add
mov
add
dec
inc
add
add
push
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
notl
inc
add
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
jle
inc
add
xor
mov
push
mov
push
push
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
pop
sbb
add
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
or
inc
add
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
dec
inc
add
add
mov
add
in
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
lods
sbb
xor
cmp
je
mov
in
inc
inc
add
call
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
popa
sub
add
ds
rolb
add
jg
inc
sub
add
je
and
and
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
sub
add
lea
mov
movsl
adc
and
test
add
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
nop
aaa
inc
add
add
mov
mov
push
push
call
test
js
lea
lea
pusha
sub
add
add
add
cmp
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
sbb
xlat
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
sub
adc
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
sub
add
mov
lea
cmp
cmp
decl
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
add
lds
test
decl
or
adc
lock
incl
dec
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
add
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
add
jno
adc
add
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
add
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
aas
sub
fldl
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
pop
sub
je
mov
push
call
mov
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
push
dec
inc
add
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
cmpl
push
push
mov
push
jge
mov
mov
movl
mov
mov
push
mov
movl
call
mov
add
test
ud0
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
rorl
add
addl
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
mov
pop
pop
pop
pop
add
ret
jge
call
cmp
jne
push
call
add
pop
pop
pop
mov
pop
add
ret
cmpl
push
push
call
mov
add
add
lret
adc
mov
test
mov
add
add
xlat
fcmovu
add
lea
add
leave
mov
add
cltd
clc
xlat
jle
clc
add
ljmp
in
add
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
add
mov
add
ljmp
add
jno
add
movsl
mov
ja
add
add
jl
fdivrl
add
imul
repnz
mov
add
sub
pop
popl
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
mov
pop
add
shlb
popf
lcall
add
add
mov
jb
add
lcall
push
push
lea
push
lea
push
push
push
push
call
add
add
add
add
std
push
add
add
lock
mov
aam
imul
add
mov
add
ljmp
mov
hlt
stos
iret
andb
fs
sub
pop
push
push
push
lea
push
push
push
call
shlb
add
push
popa
lods
push
add
sar
flds
xchg
add
add
jge
fdiv
xchg
test
jb
mov
add
add
add
jecxz
xchg
popf
cmpsb
add
add
jnp
add
mov
call
push
push
push
call
jp
out
data16
mov
cmpsl
into
ja
leave
cld
pop
add
jle
faddl
cltd
xchg
imul
into
mov
lea
xchg
js
add
xlat
mov
cld
add
add
add
lcall
add
add
in
lretw
push
lods
jl
mov
add
add
add
add
roll
add
add
push
push
push
push
lea
push
push
push
push
push
call
add
push
lcall
std
call
roll
xchg
rcrl
cmpsb
add
iret
pop
add
mov
pop
jo
add
shlb
add
jmp
bound
mov
cltd
add
pop
arpl
add
sub
pop
call
push
push
push
call
push
add
icebp
jmp
add
jle
xchg
add
clc
sahf
mov
add
add
add
testl
xchg
sub
pop
jmp
ret
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
call
out
addr16
out
pop
add
into
xchg
push
cli
push
fadds
lret
add
push
pop
mov
sti
add
add
add
sub
pop
mov
push
push
push
push
push
push
push
push
call
add
jmp
add
je
test
pop
mov
hlt
add
add
lahf
pop
sti
lea
cld
xchg
add
add
jge
icebp
je
push
sub
pop
mov
add
push
push
push
lea
push
push
push
lea
push
push
call
cmc
sti
test
int
icebp
mov
iret
add
add
add
add
iret
add
leave
pop
mulb
push
add
mov
imul
add
test
mov
rolb
add
loopne
lcall
ret
add
add
push
push
push
push
call
iret
stos
pop
add
add
jns
add
add
add
lahf
fstpt
mov
add
popf
cli
jnp
add
ret
out
add
push
lea
push
call
add
add
add
add
push
add
add
imul
add
add
shll
add
lahf
pop
jae
out
add
pop
add
add
add
loope
pop
add
add
insb
mov
aad
add
lcall
pop
add
test
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
jecxz
add
xchg
mov
into
popa
mov
test
nop
mov
leave
lea
add
rolb
in
data16
lock
sbbl
rolb
add
out
add
add
pop
xor
push
push
lea
push
call
jmp
xchg
cmpsb
xchg
add
add
add
add
jecxz
add
movsl
add
add
data16
add
add
rcr
out
movsb
lods
adc
into
mov
add
fwait
add
pop
testb
pop
add
push
push
ror
dec
push
and
add
sub
rol
pop
dec
pop
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
add
mov
mov
lret
int
imul
cltd
jb
fcoms
add
in
movsl
add
push
mov
mov
xorl
stos
jge
ja
add
iret
lcall
movsl
add
add
add
out
enter
in
fdivr
lcall
jne
push
push
push
push
push
push
call
push
add
add
stc
ja
bound
xchg
scas
scas
mov
add
add
outsl
jo
fstpt
pop
pop
je
jbe
popf
pop
sub
pop
call
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
std
jb
add
nop
fidivrl
xchg
add
mov
gs
addr16
int3
add
mov
movb
add
jne
lea
jecxz
add
jb
loop
push
lods
shl
fidivs
xchg
add
out
mov
out
ret
in
fcompl
inc
lock
lea
push
push
push
push
call
add
stos
icebp
mov
insb
add
fldl
add
add
add
pop
add
mov
pop
add
cwtl
rcr
je
cwtl
mov
mov
mov
add
add
movsb
pushf
add
add
pop
movl
push
push
push
push
call
add
add
addl
add
mov
stc
mov
into
xchg
add
clc
leave
cmpsl
add
lods
pop
cmc
jl
add
xchg
add
scas
add
xchg
jno
mov
sub
pop
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
add
les
jecxz
shrb
mov
add
add
sbbb
jle
add
add
shrb
jne
add
add
pop
lret
xlat
int3
fistl
add
fadds
xchg
push
add
insb
roll
add
mov
add
push
add
mov
lcall
pushl
push
push
push
push
push
push
push
call
jle
pushf
addl
mov
cld
add
jecxz
mov
les
enter
idivl
in
in
lcall
jne
push
push
push
call
mov
add
mov
mov
out
fldl
lods
add
call
test
lods
cli
push
add
add
add
mov
mov
fs
mov
add
add
xchg
pushf
add
pop
push
mov
in
mov
push
add
jb
in
hlt
pop
call
push
lea
push
lea
push
push
push
push
push
call
add
mov
jns
mov
add
bound
mov
add
add
add
add
addr16
add
fcmovnu
add
pop
sahf
sarl
add
jne
pushl
push
push
call
lret
shlb
andl
add
std
add
jo
add
pop
fcomip
mov
add
call
mov
add
add
add
add
push
mov
push
sahf
add
cwtl
add
scas
push
js
mov
add
arpl
lcall
adc
add
push
push
inc
push
push
pop
add
shr
add
sub
rol
pop
shr
dec
pop
push
lea
push
push
push
push
push
push
push
call
add
push
add
mov
sti
add
roll
add
add
push
jmp
add
add
data16
add
ja
add
sub
pop
pushl
push
push
push
call
add
pop
jle
push
pop
shll
fisubs
faddl
add
adcl
call
add
add
ljmp
imul
mov
stc
add
out
test
pop
outsl
add
push
push
push
push
push
push
push
push
push
call
nop
add
mov
lcall
mov
mov
add
add
ljmp
mov
faddl
cwtl
mov
add
fidivrl
jle
add
add
jno
pop
add
sub
pop
push
push
push
add
push
or
inc
add
shr
add
sub
add
dec
dec
pop
ror
dec
rol
pop
push
push
lea
push
push
push
call
enter
add
lea
insb
add
loop
jp
fwait
cmc
add
jge
add
loope
lds
loopne
add
add
xchg
mov
add
jns
add
add
lret
in
in
pop
push
push
push
push
call
mov
xchg
cmpsl
mov
add
fiadds
add
cltd
add
add
add
add
add
nop
add
ljmp
add
lods
mov
add
lcall
add
adc
pop
push
call
push
add
push
add
stc
add
add
add
loop
add
add
add
mov
fs
add
sti
out
add
add
jl
add
stos
lcallw
mov
add
xchg
bnd
cli
push
faddl
lcall
rclb
push
push
push
push
lea
push
lea
push
push
call
add
stos
ja
add
addl
jnp
xchg
push
add
mov
pop
fwait
jb
add
lret
out
popa
add
add
add
mov
xchg
fiaddl
mov
pop
mov
mov
add
add
fstl
test
sub
pop
mov
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
cmpsl
leave
rolb
mov
add
cwtl
lahf
addb
add
add
test
add
xchg
add
loope
std
add
mov
jb
mov
add
fdivrs
addl
ficoms
mov
add
push
sahf
lahf
add
sub
pop
push
push
push
lea
push
push
push
push
lea
push
call
jp
add
add
add
push
lds
add
mov
add
xchg
scas
add
jo
xchg
xchg
decb
cwtl
add
push
add
jmp
lahf
subl
add
out
lock
cmpsb
add
sub
pop
push
push
lea
push
push
push
push
push
lea
push
call
lods
mov
push
pop
lods
add
mov
insb
add
push
roll
add
jno
add
add
add
loope
add
cltd
add
add
add
test
add
jbe
test
xchg
pop
mov
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
cld
push
mov
std
add
insb
cmpsb
popa
nop
jns
mov
add
mov
add
arpl
add
lcall
push
popl
add
jmp
jmp
neg
pop
movb
xchg
cltd
sti
push
movb
in
add
push
push
push
push
push
call
mov
outsl
add
add
mov
pushf
loop
out
mov
popf
mov
mov
pop
jbe
test
add
jo
cmpsb
call
out
sub
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
call
push
fistl
add
pop
add
mov
add
lret
push
adcl
fmul
aam
scas
push
lods
mov
test
in
fcompl
xor
push
push
push
push
call
push
add
add
sahf
jge
fnstsw
sahf
mov
adc
cmpsb
jne
xchg
add
pop
pop
mov
mov
mov
hlt
lcall
jne
push
push
push
push
call
add
add
mov
add
add
add
in
nop
add
add
mov
add
rorb
out
add
jb
cmpsl
push
add
add
test
lcall
push
lea
push
push
call
add
pop
add
add
pusha
add
add
add
add
out
cmc
fisttps
leave
scas
outsl
les
mov
add
rcl
test
add
add
add
add
mov
bnd
enter
mov
hlt
pop
mov
push
push
push
push
push
lea
push
push
push
call
add
cmpsl
add
xchg
mov
jle
add
in
mov
data16
add
mov
mov
add
imul
cwtl
add
stos
mov
lcall
add
push
push
lea
push
push
push
push
push
push
push
push
call
call
addr16
std
add
add
push
add
push
in
insb
les
add
add
add
add
mov
sub
pop
add
push
push
push
push
push
push
push
push
push
call
mov
addb
les
flds
push
fndisi(8087
lret
leavew
mov
fiadds
hlt
add
push
add
stc
in
cwtl
sub
pop
add
push
push
push
push
push
push
call
mov
test
add
add
add
pop
add
mov
add
icebp
add
iret
xlat
jle
xchg
xchg
cltd
xlat
add
push
popf
sub
pop
pop
push
push
push
lea
push
push
push
call
add
movl
add
aam
cli
add
int
lahf
xchg
roll
nop
cwtl
lock
cld
pop
lret
add
add
jecxz
out
std
pushf
mov
add
cmpl
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
cld
add
bound
mov
mov
scas
lcall
add
js
add
add
data16
mov
shll
add
lret
add
add
std
jp
add
jae
scas
faddl
add
flds
lcall
or
push
lea
push
push
push
lea
push
lea
push
push
push
call
lcall
lret
add
add
stos
cmpsb
add
pop
add
add
mov
rclb
mov
xlat
add
lds
mov
sub
pop
add
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
scas
std
outsl
lods
clc
cmpsl
pushf
jnp
add
push
addr16
xchg
into
pop
add
add
testb
add
sti
xchg
ljmp
add
add
add
add
addb
add
add
add
imul
add
add
sub
pop
push
mov
push
push
push
push
push
push
push
call
add
ret
xlat
vcmppd
in
jns
add
pop
in
arpl
add
cwtl
add
add
add
add
loopne
add
in
call
push
push
call
add
mov
mov
add
addl
pop
int3
mov
lods
add
adcl
fcoml
add
add
push
push
push
push
push
push
push
call
imul
testb
add
rolb
add
add
push
add
mov
test
test
add
pusha
jno
xchg
popa
movb
mov
add
fstl
scas
add
add
add
xchg
ret
add
loopne
add
add
fcomp
mov
scas
sub
pop
sub
push
push
push
lea
push
push
push
push
call
mov
testl
add
xchg
test
xchg
add
xchg
jb
pop
aad
mov
testl
add
insb
add
mov
arpl
lcall
stos
add
mov
jo
xchg
xchg
sub
pop
pop
push
lea
push
push
call
add
test
lahf
add
push
add
mov
mov
add
xchg
je
jp
add
xchg
lock
in
add
in
mov
add
nop
cmpsb
mov
loope
sub
pop
rep
push
push
push
push
call
lahf
mov
mov
add
mov
add
mov
fbld
add
add
mov
clc
add
jbe
lock
lods
mov
jo
sub
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
jnp
jecxz
add
add
mov
mov
add
roll
add
lret
add
add
out
int
jp
test
idivb
ja
add
aad
push
add
pusha
iret
lcall
add
movsb
add
add
mov
add
push
push
push
push
lea
push
push
push
call
je
add
add
pop
outsl
mov
jmp
movsl
add
out
add
add
add
call
lcall
ret
add
add
add
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
add
add
xlat
data16
mov
add
add
bound
push
loop
imul
xchg
loopne
add
ja
mov
call
pop
lret
add
push
xchg
addl
mov
jge
jmp
mov
loopne
add
in
fdivr
lcall
inc
and
push
push
push
call
add
incb
call
ficoms
add
mov
add
sar
add
int
faddp
xchg
add
testl
xchg
loope
push
add
scas
add
xorl
popf
push
out
add
mov
gs
pop
add
add
testb
in
jecxz
in
clc
pop
mov
xor
push
lea
push
lea
push
push
call
mov
jle
xchg
add
imul
add
add
add
mov
mov
mov
jae
mov
insb
leave
mov
mov
imul
jecxz
mov
iret
add
cltd
add
push
add
lcall
lock
mov
xor
push
push
lea
push
push
push
push
push
call
add
pop
add
mov
add
jb
mov
add
add
ljmp
add
aad
cld
jmp
hlt
into
ja
add
mov
movb
divl
sub
pop
add
push
push
push
push
lea
push
call
add
aam
pop
popf
jo
je
add
roll
xchg
add
fdivp
shrl
pop
add
add
jno
add
add
aad
out
bound
add
cwtl
add
jecxz
add
xchg
add
in
rolb
add
pop
push
in
add
add
mov
loopne
lcall
lcall
rorl
stos
push
sub
push
sub
add
add
shr
shr
sub
not
pop
inc
add
pop
push
push
push
call
add
mov
fiaddl
pusha
mov
lahf
in
add
clc
lds
add
mov
push
mov
add
movsl
mov
mov
les
icebp
mov
add
jne
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
scas
add
xchg
scas
add
mov
xchg
add
add
int3
add
mov
add
add
add
add
xchg
add
outsl
add
add
imul
jo
test
add
lods
add
add
jbe
mov
jb
lret
push
add
fmulp
jo
loopne
add
cmc
scas
sub
pop
call
push
pop
push
push
push
add
sub
push
sub
add
lea
sub
inc
sub
pop
shl
pop
push
add
pop
push
push
push
push
push
push
push
push
call
add
push
add
add
add
mov
add
fisubrl
fiadds
xchg
pop
mov
mov
in
aad
add
mov
add
cli
add
imul
add
lcall
rorb
cmp
push
push
push
push
call
hlt
test
in
mov
add
jp
stos
add
in
push
add
add
cmpsb
add
jmp
out
jge
ret
rol
in
testb
sahf
js
fdivl
add
push
mov
shll
push
add
add
in
hlt
pop
push
push
push
push
push
push
push
push
call
data16
call
mov
add
loop
xchg
add
flds
gs
mov
push
push
pop
mov
add
jmp
add
mov
xchg
add
xchg
stc
jmp
xlat
pop
pop
cli
jle
ret
add
add
add
add
call
add
aad
loop
in
in
mov
push
shr
inc
pop
add
add
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
cmc
addb
cmpsl
js
add
fsubl
pop
in
push
mov
mov
push
mov
lahf
add
notl
mov
xchg
add
cmpsb
jae
add
mov
shrb
addb
incb
cmc
imul
add
pushf
xchg
add
fiaddl
push
add
xchg
push
cltd
add
xlat
lea
add
lcall
ret
out
add
push
sub
inc
xor
shl
pop
mov
push
push
push
lea
push
push
push
call
add
popa
out
add
movsb
add
mov
cmc
jecxz
enter
add
push
addr16
sahf
add
fucomip
pushf
add
add
add
stos
add
aam
mov
add
jmp
les
cmpsb
lds
xchg
imul
add
in
mov
test
in
lcall
xor
push
push
push
call
mov
add
add
add
add
jo
add
test
lods
add
fstpt
xchg
jmp
fstpt
jp
add
add
add
cmpsb
mov
clc
add
mov
add
testl
pop
jl
xchg
movsl
movsb
sub
pop
add
push
push
call
push
jnp
lods
stos
jle
add
clc
repnz
cmc
pusha
mov
pop
cmpsl
loopne
jno
mov
pusha
mov
xchg
mov
add
sbbb
add
xlat
aad
pop
cli
push
sub
pop
add
push
shr
pop
push
push
add
lea
add
pop
mov
xor
push
add
pop
add
pop
push
ror
ror
add
dec
pop
mov
push
push
lea
push
lea
push
call
les
jl
fadds
jmp
int
fadds
call
out
add
fwait
add
add
jo
in
add
in
hlt
pop
xor
push
push
push
push
push
push
push
call
imul
lods
xlat
add
add
xchg
add
add
cli
pop
add
add
add
in
insb
mov
ljmp
int3
push
add
add
mov
xchg
add
pushf
test
lcall
les
add
push
pop
rep
push
shl
add
rol
pop
mov
xor
push
ror
sub
xor
pop
or
je
push
push
push
lea
push
push
push
push
lea
push
call
in
aad
add
jbe
push
scas
aam
add
add
mov
pop
rcrb
add
mov
add
add
fldl
nop
mov
fnsave
lcall
xor
push
push
shr
not
add
pop
mov
xor
push
shr
xor
add
pop
add
push
lea
push
lea
push
call
bound
jno
mov
aam
add
jb
push
pop
lret
add
mov
add
xchg
imul
popa
pop
add
cli
xchg
add
pop
testl
sarl
jge
add
pop
add
add
nop
add
rolb
pop
testb
in
hlt
lcall
jne
push
lea
push
push
push
lea
push
call
js
pop
add
add
lock
icebp
add
add
push
in
test
popf
jnp
mov
add
rolb
add
lcall
mov
push
push
push
push
push
push
push
push
push
call
push
test
mov
outsl
pop
sti
sbbl
add
lret
add
mov
mov
icebp
add
call
add
lods
cmc
sub
pop
xor
push
push
push
push
lea
push
push
push
call
add
imul
lock
mov
in
push
jmp
out
add
mov
mov
add
add
rcrl
shl
out
mov
add
xor
add
cwtl
cld
test
sub
pop
add
push
push
push
push
lea
push
push
push
lea
push
call
add
add
add
add
into
rolb
add
lret
icebp
incb
shl
int
add
mov
ror
add
js
mov
add
pop
mov
add
pop
add
add
mov
add
add
add
mov
mov
mov
mov
jno
add
add
sub
pop
add
pop
push
push
lea
push
push
call
movsl
mov
int
popf
lea
std
mov
add
add
sahf
cmpsb
add
pop
add
add
add
jl
add
pop
repnz
sub
pop
rep
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
arpl
lret
add
in
jne
jb
fldl
cltd
pop
lock
add
lods
idiv
add
add
add
imul
add
add
add
mov
add
lret
fs
mov
add
mov
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
call
outsl
data16
lods
lea
add
xchg
mov
mov
add
add
std
pushf
add
arpl
add
in
push
sub
pop
xor
push
push
push
push
push
push
call
test
jle
add
pop
lret
add
push
cmc
cltd
pop
pop
movsl
outsl
fldcw
add
add
fldl
add
roll
lret
add
in
call
push
push
lea
push
push
push
call
mov
add
pop
fsub
add
mov
add
add
cwtl
add
add
ret
popa
mov
jmp
imul
movsb
add
mov
mov
outsl
fwait
add
jle
in
in
pop
or
je
mov
push
push
call
add
shr
aam
pop
in
mov
arpl
insb
in
jne
addb
stos
mov
xchg
loop
lahf
enter
add
lcall
sub
lea
push
push
lea
push
push
push
push
call
add
data16
call
xchg
add
cli
add
nop
add
in
bound
flds
in
add
movl
add
add
add
mov
add
pop
movsb
pop
add
add
cltd
pop
jne
lds
sub
pop
add
push
push
push
lea
push
push
lea
push
call
add
add
nop
add
add
imul
mov
cmpsb
xchg
pop
add
add
in
call
rep
push
lea
push
lea
push
push
push
push
push
push
call
jmp
in
shl
jo
pop
mov
test
fidivl
mov
mov
imul
stos
add
add
add
leave
add
aam
pop
bound
loopne
pop
push
push
add
push
sub
add
sub
ror
add
not
pop
dec
shl
pop
push
shr
dec
sub
add
pop
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
jp
add
xlat
pop
mov
pop
add
add
rcll
jl
loope
cli
addb
int
add
faddl
fildll
add
in
add
rolb
add
add
cld
add
add
add
add
mov
add
add
fcomps
jne
push
inc
pop
mov
mov
push
push
lea
push
push
call
add
add
add
mov
add
sbbl
add
mov
xchg
add
andb
add
push
pusha
jb
aam
add
add
add
pop
add
add
add
sub
pop
jmp
push
push
dec
sub
pop
mov
push
ror
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
stos
add
add
pushf
lret
add
mov
add
out
xchg
stos
add
lock
lahf
mov
pop
mov
jle
lock
cmpsb
clc
in
leave
jecxz
add
ret
jns
mov
mov
mov
jecxz
stos
add
iret
add
in
fdivr
lcall
push
push
add
ror
sub
xor
pop
push
push
push
push
push
call
add
add
cli
mov
rol
testb
ja
add
mov
add
add
adcb
add
add
lcall
roll
sub
pop
mov
push
sub
add
lea
sub
pop
pop
push
push
call
gs
jb
xchg
fs
add
mov
add
add
mov
add
push
fistl
mov
sub
pop
pop
pop
push
push
push
push
push
push
lea
push
push
call
add
in
push
push
add
enter
add
add
rolb
imul
adcl
cmc
mov
add
loopne
add
push
add
stc
jo
in
loopne
pop
push
shl
inc
pop
leave
push
push
push
lea
push
push
push
push
push
push
call
and
in
fistl
add
bound
jnp
mov
mov
mov
loope
out
divb
add
roll
int
add
jl
in
sub
pop
ret
push
lea
push
lea
push
push
lea
push
call
testb
add
add
mov
push
leave
out
outsl
mov
imul
xchg
test
add
mov
xchg
add
add
jnp
add
lcall
push
push
push
lea
push
lea
push
push
call
add
add
add
cwtl
jl
and
outsl
insb
mov
cmpsb
sarb
icebp
xchg
popa
popf
push
add
lret
add
add
add
add
in
call
mov
push
push
push
push
call
add
data16
add
add
add
add
shll
movsl
in
clc
bound
bound
sub
pop
add
push
push
push
lea
push
push
lea
push
push
lea
push
call
push
add
addr16
add
add
test
pop
jbe
mov
pop
push
xlat
shll
call
lds
xchg
push
add
add
sub
pop
push
push
dec
ror
pop
push
push
xor
xor
pop
push
push
sub
sub
pop
movl
addl
push
shl
shl
add
pop
test
je
mov
push
push
push
push
push
push
push
push
push
call
add
jae
roll
aad
mov
fsub
add
xchg
stc
add
add
hlt
add
stos
add
in
bound
add
jno
stos
bound
mov
add
add
pop
add
xchg
add
jl
sub
pop
pop
pop
push
inc
xor
inc
pop
pop
push
lea
push
push
lea
push
push
push
call
add
add
mov
add
add
add
cmpsl
mov
add
xchg
add
stc
roll
fdivr
add
add
fbld
imul
pop
pop
leave
push
lea
push
lea
push
lea
push
push
push
push
call
xchg
add
mov
add
icebp
fisubl
add
out
stos
add
pop
mov
add
movb
fbld
int3
insb
lods
add
mov
movb
scas
popa
add
leave
mov
add
lret
mov
add
add
test
je
lods
add
add
mov
add
jle
call
sub
pop
ret
push
shr
not
pop
push
push
push
push
call
add
ljmp
in
int3
testb
add
test
leave
add
push
fcoml
xchg
add
repnz
add
pop
roll
add
add
test
jmp
lods
std
testb
add
mov
add
jne
add
outsl
add
sub
pop
mov
push
dec
ror
pop
add
push
push
push
push
push
push
push
call
jl
notl
in
jge
in
add
xchg
add
add
mov
pusha
add
shr
aad
push
add
mov
mov
pop
shlb
lcall
push
lea
push
call
sahf
add
pop
mov
add
add
cld
add
cld
shl
xchg
add
hlt
add
push
add
mov
mov
add
loop
add
icebp
add
add
mov
faddl
jb
add
add
push
add
add
mov
add
add
lcall
push
sub
pop
push
testl
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
jle
add
imul
add
add
cmpsb
add
jge
lahf
add
out
mov
push
add
jmp
xchg
add
enter
scas
add
add
loope
add
push
pusha
add
add
lcall
inc
or
push
xor
inc
lea
pop
push
call
push
shl
ror
dec
pop
mov
push
inc
inc
pop
pushl
push
push
add
xor
pop
push
push
shl
sub
pop
call
cmpl
jne
push
push
push
push
lea
push
push
lea
push
call
rclb
mov
out
add
xchg
lcall
add
add
aam
test
add
add
filds
xor
out
add
sub
pop
pop
pop
push
push
lea
push
push
push
lea
push
push
push
call
lcall
add
pop
add
pop
pop
add
xchg
mov
test
mov
add
add
cmpsl
stos
jmp
add
lcall
test
add
movb
stc
sti
push
jmp
push
nop
add
je
cwtl
add
add
movsl
out
js
filds
mov
pop
pop
push
lea
push
push
push
push
push
push
push
call
lock
mov
jne
add
pushf
add
add
push
test
movsl
add
mov
out
jle
outsl
add
add
addr16
add
in
faddl
loope
pop
jo
jne
mov
xorb
fs
mov
add
pushf
lds
movsb
add
test
add
mov
lds
sub
pop
pop
push
lea
push
push
push
push
push
push
push
call
add
mov
add
add
mov
mov
aam
add
arpl
mov
leave
push
shr
sub
shr
pop
ret
push
push
lea
pop
mov
push
shr
add
inc
pop
add
push
push
call
add
add
mov
mov
jne
testb
mov
add
in
add
loopne
out
xchg
in
sub
pop
push
push
sub
ror
xor
pop
push
push
dec
add
pop
push
push
push
push
push
lea
push
call
add
add
pushf
jle
add
mov
add
mov
xchg
add
fiaddl
mov
add
add
add
pop
scas
shll
add
mov
sub
pop
movl
push
push
push
push
lea
push
push
push
push
push
push
push
call
ja
fcomps
jne
fdivrl
add
lret
pop
add
push
push
add
jb
add
mov
mov
fdivr
lcall
mov
not
pop
push
call
push
lea
pop
subl
cmpl
jne
push
push
push
call
iret
cwtl
movsb
jno
add
pop
jmp
lahf
fdivl
pop
xchg
stc
pop
mov
ret
mov
jo
in
faddl
cli
mov
xlat
flds
add
fldl
lds
add
add
mov
add
add
subb
add
cltd
out
mov
mov
sub
pop
pop
pop
push
push
push
lea
push
push
push
push
call
jge
add
and
rolb
push
mov
test
rcll
adcb
out
xchg
add
lcall
iret
xchg
add
add
mov
pop
add
add
xchg
add
push
lea
push
push
lea
push
push
push
push
call
xchg
fnstenv
into
add
add
add
push
stc
loopne
add
add
in
in
gs
stos
add
call
lahf
incb
loope
add
push
xchg
lcall
leave
push
lea
sub
pop
ret
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
test
scas
add
jnp
push
add
add
leave
add
pop
testl
pop
jge
cmpb
add
shl
test
lcall
push
push
lea
push
push
lea
push
push
call
add
fcmovnu
add
add
test
popa
push
cli
add
mov
les
add
mov
fidivs
add
add
add
jo
ret
movl
push
lea
push
lea
push
push
push
push
call
add
gs
imul
test
popl
outsl
add
clc
add
jl
add
add
add
in
call
add
push
lea
pop
push
push
push
push
push
lea
push
push
push
call
add
add
add
add
add
add
add
add
lock
les
mov
gs
popa
popf
clc
mov
xchg
andl
testb
add
sub
pop
push
push
push
push
push
push
push
call
add
les
cld
push
add
les
add
cltd
fiaddl
add
add
add
mov
scas
add
add
add
push
imul
add
je
xchg
jp
pop
mov
rolb
in
call
push
push
push
push
push
call
mov
cli
xchg
enter
ficoms
mov
add
shll
add
fsincos
out
int3
add
add
faddl
add
mov
test
jnp
add
add
into
mov
jmp
subb
jge
imul
lahf
add
inc
or
add
sub
dec
pop
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
mov
add
add
push
add
jge
icebp
mov
insb
pop
fsubl
lods
repnz
test
lds
test
loope
add
lea
pusha
add
cmpl
lret
add
push
add
popl
jecxz
rolb
ret
out
add
xchg
add
add
lcall
call
pop
mov
push
push
lea
push
push
lea
push
push
push
call
ficoms
push
add
mov
add
mov
cmc
add
add
jo
add
push
add
sub
pop
shr
push
push
push
lea
push
lea
push
call
add
fldl
push
add
add
cld
add
aam
stc
add
xchg
iret
add
mov
mov
cmc
mov
testl
adc
push
mov
add
insb
add
popa
mov
add
addb
jecxz
in
popa
adcl
add
add
inc
or
inc
dec
pop
mov
push
push
lea
push
push
push
push
push
call
push
imul
add
add
loop
add
xchg
add
mov
jmp
scas
gs
add
add
add
xchg
fsubp
pop
add
call
roll
xchg
mov
test
add
jbe
clc
xlat
xchg
add
add
in
hlt
pop
test
add
sahf
add
mov
in
in
mov
add
push
push
lea
push
push
lea
push
push
lea
push
call
jnp
xchg
push
add
arpl
pop
shll
mov
lock
add
add
add
pushf
add
add
scas
add
loop
fldl
mov
aam
add
lcall
lahf
add
add
incb
add
out
sarl
fimuls
pop
add
std
pop
add
add
sub
pop
add
push
push
push
call
xchg
add
std
lods
add
fiaddl
in
add
ja
add
addl
cmpsb
fadd
mov
add
mov
add
push
loope
add
add
addb
add
mov
loopne
out
mov
js
add
add
test
mov
add
add
in
hlt
lcall
inc
add
add
push
add
dec
inc
pop
cmp
jne
cmp
jne
push
dec
pop
mov
push
push
push
lea
push
push
call
add
mov
add
hlt
add
lock
fs
loope
add
add
js
test
add
mov
ljmp
mov
add
sub
pop
movl
push
shl
shr
sub
pop
jmp
push
push
push
lea
push
push
push
lea
push
push
call
mov
aad
mov
mov
jge
jl
aam
add
icebp
leave
add
rclb
pop
add
lods
add
xchg
add
jp
jecxz
fs
jp
push
push
movsb
mov
loope
add
mov
add
pop
add
add
push
sti
add
add
insb
add
add
inc
cld
mov
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
lahf
iret
add
je
add
leave
aad
test
add
imul
shl
lea
leave
add
push
mov
repnz
loop
add
mov
add
add
int3
les
mov
mov
pop
sub
pop
sub
jne
push
push
push
push
call
add
js
xchg
add
add
clc
jbe
popa
add
add
mov
les
adcb
lcall
push
add
add
jle
add
test
pop
jp
int
sub
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
pop
xchg
pusha
out
fidivrl
mov
add
mov
pop
ja
ljmp
pushf
shlb
add
mov
add
add
add
pop
mov
scas
mov
movl
push
dec
add
pop
jmp
push
lea
push
lea
push
lea
push
lea
push
call
add
mov
add
call
add
loope
mov
add
mov
imul
fsubrp
clc
add
fildl
call
add
add
idivb
push
cli
sub
pop
mov
mov
push
add
pop
cmp
jne
push
inc
pop
mov
movl
push
add
shl
lea
pop
jmp
push
shl
rol
not
pop
mov
cmpw
jne
push
inc
inc
pop
mov
push
shl
ror
ror
pop
movl
push
push
push
push
push
push
lea
push
push
call
iret
loop
add
pop
repnz
add
cwtl
add
jbe
add
popl
into
pop
push
add
add
rolb
add
xchg
xchg
jae
bound
fsubs
jno
lcall
pusha
add
in
add
jae
insb
push
add
push
hlt
add
sub
pop
jmp
push
push
push
push
call
je
clc
movl
insb
pop
pop
out
outsl
out
jl
test
arpl
imul
mov
fstpl
movb
cmpsl
add
add
mull
mov
sti
lods
lods
cmpsb
mov
mov
lea
les
add
pop
add
gs
pop
mov
sub
pop
pushl
push
shl
inc
pop
pop
push
sub
pop
mov
push
lea
push
push
push
push
lea
push
push
push
call
popf
fidivs
xchg
in
arpl
add
add
imul
lcall
scas
xlat
addr16
imul
out
add
movsl
add
add
add
add
fxch
mov
pop
pop
add
add
sub
pop
mov
push
inc
rol
shl
rol
pop
mov
push
push
shl
push
push
pop
add
not
add
shr
sub
inc
pop
rol
inc
inc
pop
push
push
push
push
push
push
call
add
mov
stos
rolb
add
fucom
clc
pop
lods
add
out
add
xchg
add
js
popa
add
fcompl
add
add
add
pop
push
add
jnp
sub
pop
push
push
add
dec
xor
pop
call
cmpl
je
push
push
shr
inc
dec
push
push
pop
add
rol
sub
add
xor
shr
pop
ror
add
xor
pop
push
lea
push
push
lea
push
push
call
push
xchg
add
add
mov
add
pop
fldl
add
add
clc
cltd
push
sub
pop
push
call
push
lea
push
push
push
lea
push
lea
push
push
call
addr16
push
cmpsb
je
mov
mov
loop
jp
add
aam
add
enter
add
add
lcall
add
arpl
cwtl
add
movl
xlat
jl
mov
jl
push
in
in
cmpl
je
push
push
xor
push
and
add
shl
shl
sub
add
lea
pop
not
inc
lea
pop
push
add
xor
sub
pop
push
call
push
lea
push
push
call
loope
pusha
add
movsl
in
mov
push
std
fcmove
add
jbe
add
add
xchg
add
shrl
add
add
add
add
int
pop
pop
repnz
pop
cmpl
je
push
push
add
push
or
inc
add
add
sub
xor
pop
dec
ror
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
rcl
mov
rcl
add
jns
mov
jo
add
add
sbb
les
add
mov
clc
jbe
test
add
roll
pop
add
cmpsb
pop
add
lcall
sub
pop
push
push
push
push
push
push
call
xchg
add
popl
add
mov
push
call
add
cmpsl
aam
movsl
shrl
jge
pop
hlt
lods
and
add
add
add
add
mov
push
add
lds
cltd
add
mov
add
in
aam
add
mov
add
jnp
nop
add
add
addr16
pusha
outsl
in
lea
push
push
push
lea
push
call
movsl
add
add
hlt
lods
add
add
add
push
add
pop
xlat
hlt
add
loope
loope
add
pop
scas
mov
lret
mov
pop
mov
add
call
fucomi
divl
pushf
fwait
add
add
imul
call
add
int3
je
push
push
not
push
push
pop
add
add
not
sub
ror
shl
pop
inc
pop
push
ror
shr
dec
shl
pop
push
push
add
rol
lea
pop
call
push
not
add
pop
cmpl
je
push
push
push
sub
add
inc
sub
inc
ror
shl
pop
lea
rol
sub
pop
push
push
push
push
push
push
lea
push
lea
push
call
xorb
ja
add
add
fucomp
hlt
add
mov
test
aad
fldt
add
int
mov
addb
xchg
popa
add
rolb
xor
pop
call
push
xor
inc
add
ror
pop
cmpl
je
push
push
add
not
push
or
inc
add
ror
add
xor
sub
sub
xor
not
pop
inc
sub
dec
sub
pop
push
add
not
sub
add
pop
push
push
shr
pop
call
push
pop
cmpl
je
push
push
not
xor
xor
push
push
pop
add
dec
shr
not
sub
add
shl
dec
pop
add
xor
add
pop
push
shr
pop
push
push
shl
pop
call
cmpl
je
push
push
not
push
xor
add
add
rol
add
sub
shr
rol
pop
shr
not
pop
push
push
push
push
lea
push
lea
push
push
call
push
cld
mov
add
add
lahf
rol
jle
push
add
ficoms
mov
add
in
in
lcall
push
add
ror
ror
pop
call
push
shr
inc
pop
cmpl
je
push
push
sub
add
push
and
add
inc
lea
sub
add
rol
shl
pop
sub
sub
sub
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
jle
add
addb
js
add
jne
add
mov
mov
test
mov
stos
add
mov
add
mov
pop
add
sub
pop
push
push
push
push
push
push
lea
push
push
push
call
add
cwtl
jecxz
add
add
add
add
mov
in
jbe
pusha
mov
xchg
add
ja
loopne
add
in
cld
xchg
add
bound
bound
add
cmpl
mov
add
add
add
lcall
scas
cmp
add
push
push
push
push
call
test
cmc
add
cld
xchg
push
test
add
pop
add
mov
in
pop
add
add
out
roll
leave
popl
add
add
fldenv
push
jmp
add
add
add
add
data16
add
xchg
add
js
jp
out
out
add
les
lcall
cmp
test
add
add
fldcw
mov
dec
shl
rol
lea
push
xor
add
xor
add
xor
ror
sub
xor
pop
xor
sub
not
pop
push
push
push
push
push
push
push
lea
push
call
sti
lds
popf
add
loopne
pop
lahf
add
divb
shr
int3
add
lods
jno
mov
imul
scas
or
arpl
fmulp
xchg
fnstcw
fidivrs
add
xchg
sub
pop
push
push
push
lea
push
lea
push
push
push
lea
push
call
mov
push
add
movsb
add
push
bound
jo
add
imul
mov
pop
fistl
add
add
add
cmpsl
pushf
add
add
lods
add
mov
call
add
jge
popl
add
add
mov
sub
pop
call
push
push
lea
push
push
call
push
push
push
mov
lods
add
xchg
out
scas
add
add
xchg
pop
faddl
movsb
add
mov
xchg
push
rcrl
js
out
xchg
add
add
add
mov
call
hlt
mov
add
add
add
test
add
push
hlt
add
add
in
lock
lcall
js
xor
ret
test
add
push
push
shr
sub
add
push
and
add
add
shl
dec
sub
shr
sub
pop
add
pop
push
push
push
push
push
push
push
push
push
push
call
pusha
insb
jnp
mov
fcmovu
in
add
add
pop
imul
push
add
jnp
mov
movsb
xchg
scas
push
mov
cli
loop
call
add
add
pop
add
add
mov
jno
add
mov
add
xchg
xchg
add
mov
sti
add
sub
pop
push
call
push
xor
pop
cmpl
je
push
push
shr
lea
shl
push
or
not
add
rol
ror
sub
ror
add
shr
pop
dec
shr
pop
push
lea
push
push
push
call
cli
add
pushf
add
add
lods
scas
mov
call
hlt
mov
cwtl
lret
jle
add
add
jle
ljmp
test
fwait
ror
mov
add
push
add
add
pop
sahf
xchg
loopne
sub
pop
push
push
lea
push
lea
push
lea
push
push
push
call
pop
add
jns
add
call
scas
add
pop
add
add
gs
cwtl
std
into
iret
test
cmc
imul
ljmp
xchg
add
xchg
add
incb
imul
call
add
cmpl
jne
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
add
pop
jnp
add
add
fwait
cmc
iret
xchg
pop
imul
add
add
add
jl
push
lods
fiadds
push
jle
add
add
add
add
in
fdivr
lcall
inc
adc
movl
push
push
push
push
lea
push
call
add
add
iret
push
rcll
cmpsb
lahf
add
add
repnz
add
add
filds
jp
add
add
imul
mov
add
fldl
xchg
test
movsl
add
jno
cwtl
add
add
cmpsb
add
push
movl
fucomi
lock
lcall
pop
add
add
lea
push
push
push
call
gs
mov
into
add
insb
pop
add
sahf
clc
add
bound
jp
push
add
add
int3
stc
mov
push
add
mov
add
jbe
in
in
lcall
rclb
sub
add
shr
pop
pop
push
rol
sub
add
pop
pop
pop
push
dec
add
pop
pop
push
lea
push
call
mov
add
add
mov
mov
sahf
xchg
mov
add
jnp
js
mov
jmp
add
test
add
imul
mov
lcall
push
pop
ret
push
push
lea
push
push
lea
push
lea
push
call
push
add
add
lret
andb
add
push
out
jle
lods
cld
add
add
jl
mov
mov
scas
stos
shll
add
add
add
movsl
int3
add
out
insb
pop
in
xorb
xchg
ljmp
lcall
in
push
shl
sub
pop
add
cmpl
jne
push
push
inc
add
add
push
xor
add
not
inc
sub
add
add
pop
sub
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
pusha
xchg
mov
jl
add
loop
add
fisttps
cmpsb
add
jns
add
addb
leave
add
js
mov
aad
add
ja
loop
push
add
add
nop
add
mov
jbe
jb
xchg
pop
add
fildl
jne
push
not
sub
dec
pop
call
push
lea
pop
push
call
push
inc
rol
add
xor
pop
jmp
push
shr
pop
cmpl
je
push
push
push
push
lea
push
call
add
ja
sti
jnp
add
add
icebp
add
add
add
cmpl
in
add
add
add
aad
xchg
aad
pop
add
hlt
leave
roll
pop
pop
add
add
ror
mov
add
add
lcall
jge
add
add
leave
push
ror
pop
add
push
sub
lea
xor
pop
pop
push
push
push
push
push
push
push
call
add
jle
xchg
lret
add
lods
je
stos
bound
mov
add
add
add
add
out
in
add
fsub
add
add
add
in
in
lcall
push
push
push
call
xchg
mov
add
jle
int3
add
lods
mov
add
mov
xchg
popa
jp
fidivl
scas
mov
movsb
add
frstor
pop
add
lods
add
jne
iret
faddl
ja
js
add
add
rol
sub
pop
pop
push
lea
shl
inc
pop
pop
leave
push
push
push
push
lea
push
push
push
call
add
xchg
add
add
mov
cltd
mov
add
jo
in
aam
add
int
push
stos
mov
fs
movb
mov
add
call
pop
add
test
add
les
push
push
call
outsl
pop
mov
jbe
add
icebp
loope
mov
add
cltd
add
lcall
data16
mov
add
push
add
stos
push
xchg
xchg
add
jbe
xchg
add
movsb
sub
pop
ret
push
add
pop
jmp
push
lea
push
lea
push
lea
push
call
andl
aam
mov
leave
insb
push
add
add
jb
add
out
add
out
lcall
push
mov
add
pop
add
add
mov
out
mov
add
rolb
add
ljmp
in
lock
lcall
jge
add
test
add
add
xor
xlat
push
rol
push
or
not
add
add
xor
sub
sub
pop
sub
add
pop
push
push
push
lea
push
lea
push
call
add
data16
add
add
js
pop
lret
je
popa
gs
add
test
movsl
push
sahf
jne
add
push
add
add
xchg
add
leave
add
jmp
add
iret
sub
pop
pushl
push
dec
pop
call
push
push
lea
push
lea
push
call
add
mov
rcrb
xchg
mov
popf
add
add
rclb
add
out
add
stos
add
add
sarb
lea
sub
pop
push
call
push
ror
dec
shr
pop
jmp
cmpl
jne
push
push
push
push
push
call
push
jecxz
add
jno
add
add
add
add
mov
mov
add
push
int
fwait
add
add
movsl
rcrl
jge
out
add
mov
in
pop
mov
push
push
push
push
call
popf
outsl
xchg
add
mov
add
out
add
imul
imul
mov
jb
addl
mov
out
loop
test
pop
fbld
loop
fists
xchg
push
mov
add
add
add
addl
lcall
add
add
push
push
push
push
push
push
lea
push
push
push
lea
push
call
subb
js
jno
js
stc
loope
ljmp
fs
scas
add
mov
test
jo
add
add
push
mov
push
negb
add
divb
add
notl
lcall
int
add
push
lea
push
call
xchg
iret
add
add
in
int
mov
roll
into
add
js
mov
add
jnp
mov
add
mov
stos
push
add
imul
add
push
push
add
push
or
inc
add
sub
sub
add
not
pop
sub
shr
rol
add
pop
push
push
push
push
push
push
push
push
push
call
add
xchg
add
add
add
movsl
add
add
nop
rcrb
add
notb
jge
mov
aad
add
add
add
sti
add
add
rcl
add
mov
std
icebp
je
add
gs
jl
xchg
leave
hlt
cwtl
add
lcall
jne
call
push
push
push
lea
push
push
call
add
jp
lods
push
mov
add
add
outsl
add
cmc
aad
into
add
push
scas
out
pusha
pushf
pusha
add
popf
add
cmpsl
scas
add
je
stc
add
in
add
filds
add
add
push
pusha
add
add
sub
pop
call
push
push
push
xor
add
sub
dec
sub
sub
pop
rol
pop
push
rol
ror
pop
pushl
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
clc
pop
sti
stos
add
ret
lods
add
xchg
add
push
arpl
add
add
mov
add
pop
filds
add
stc
add
add
mov
add
xchg
jge
mov
fdivr
lcall
scas
sub
add
shrb
dec
and
shl
add
rol
push
or
not
add
dec
sub
dec
shl
pop
sub
shr
dec
pop
push
push
push
push
push
push
push
push
push
call
mov
mov
mov
notb
add
add
test
add
in
add
aad
pusha
icebp
int3
in
add
gs
pop
into
stos
add
les
mov
push
aad
cwtl
mov
sub
pop
pushl
call
push
push
lea
push
push
push
push
push
call
add
add
add
add
jae
add
add
mov
pop
add
add
add
xchg
add
fadds
test
add
fucomp
lret
add
mov
loopne
add
add
add
jge
leave
add
add
fisubl
ja
pushf
addl
out
push
mov
in
in
call
push
push
shr
xor
rol
ror
push
or
inc
add
not
shr
sub
lea
pop
rol
pop
push
push
push
call
push
add
add
scas
push
je
add
push
lcall
stc
ljmp
add
jle
ja
in
add
jle
jae
ja
add
add
mov
hlt
lcall
jne
call
push
sub
dec
inc
pop
call
push
push
shr
push
and
add
sub
sub
pop
pop
push
pop
pushl
push
sub
rol
pop
call
push
shl
shr
rol
dec
pop
call
push
push
ror
push
xor
add
add
rol
sub
add
sub
add
pop
not
shl
shl
add
pop
push
lea
push
push
push
push
push
push
push
call
add
ja
flds
add
fwait
hlt
add
in
add
add
add
lds
push
mov
lea
ret
hlt
push
add
add
rclb
sub
pop
pushl
push
push
push
call
ljmp
js
rorb
addb
add
loope
mov
stc
add
add
xchg
lods
loope
jge
popa
add
mov
mov
add
push
in
hlt
pop
call
push
push
push
push
push
push
lea
push
push
push
call
scas
add
add
add
data16
add
ret
add
mov
mov
jle
add
lods
add
ficomps
enterw
imul
add
pop
add
test
out
add
sub
pop
call
push
push
shl
not
inc
push
or
inc
add
rol
rol
lea
lea
sub
not
pop
shl
xor
add
rol
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
add
lahf
add
jl
mov
fdivrl
jbe
mov
jle
in
lret
rolb
xchg
mov
pop
mov
add
leave
movsl
jle
addb
or
and
add
add
add
push
sub
in
push
add
aad
add
lods
mov
add
leave
movb
add
jno
mov
pop
pop
add
push
fistpll
mov
out
mov
movsb
mov
in
hlt
pop
call
call
push
push
add
push
and
add
lea
shr
sub
xor
not
sub
pop
shl
pop
push
push
push
call
jb
aad
add
leave
in
mov
mov
add
jmp
add
add
lahf
mov
add
std
add
out
mov
pop
pushl
push
inc
pop
call
call
push
push
shl
shl
xor
push
sub
add
ror
inc
lea
sub
inc
lea
rol
shr
pop
xor
pop
push
shr
add
rol
rol
pop
pushl
push
push
lea
push
push
lea
push
push
call
mov
mov
add
add
add
push
add
fcoml
mov
add
add
incb
add
add
cli
add
jns
lods
mov
add
cltd
add
jl
pop
jb
mov
fucomp
mov
ljmp
sub
pop
call
push
dec
sub
pop
call
push
push
xor
shr
push
or
inc
add
shr
sub
sub
rol
lea
pop
sub
not
ror
sub
pop
push
push
lea
push
push
push
push
call
icebp
shrb
cwtl
insb
mov
mov
xchg
add
fdivrp
add
mov
aad
push
loop
add
add
mov
push
mov
add
out
jp
in
in
add
add
int
add
add
jns
add
lcall
jne
push
ror
not
ror
pop
call
push
sub
pop
lea
push
ror
shr
pop
push
call
push
push
add
push
and
add
not
inc
sub
shr
pop
sub
pop
push
lea
push
call
add
add
xorl
pushf
add
lds
add
add
add
not
pop
cltd
push
pop
add
add
xchg
rcl
pusha
add
add
push
xchg
add
add
ja
add
add
lcall
jne
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
cmpsb
add
fdivrs
lea
call
add
add
lock
mov
lock
add
mov
mov
testb
mov
out
add
icebp
add
add
adcb
add
test
les
sub
pop
call
call
push
push
not
push
push
pop
add
dec
ror
shl
sub
rol
dec
pop
not
shl
pop
push
sub
ror
add
xor
pop
pushl
push
sub
pop
call
push
push
call
mov
mov
mov
stos
jno
mov
add
add
fdivrp
add
add
add
out
add
add
fiaddl
jno
fstl
in
clc
lcall
shrb
subb
push
or
inc
add
ror
sub
shr
ror
rol
shl
pop
not
pop
push
add
pop
pushl
push
xor
add
pop
call
push
xor
add
pop
call
lea
push
push
sub
dec
push
push
pop
add
sub
not
sub
sub
add
add
pop
lea
rol
pop
push
lea
push
push
lea
push
push
call
std
test
mov
add
mov
lock
pop
cltd
push
lods
pusha
add
add
push
add
mov
xchg
aad
jmp
mov
fs
pop
add
push
push
imul
outsl
mov
jecxz
out
add
xchg
add
in
in
pop
pushl
push
dec
pop
call
push
push
push
push
call
push
add
pop
sahf
pop
mov
out
mov
mov
lcall
pushf
push
pop
in
add
lods
add
xchg
push
add
movsl
add
push
add
pop
pop
pop
add
mov
stos
gs
test
lcall
shrb
cli
out
push
lea
add
push
push
pop
add
sub
inc
not
rol
not
pop
shl
add
pop
push
push
push
lea
push
lea
push
push
push
push
call
sbb
mov
enter
add
add
movsl
jp
add
bound
add
add
scas
add
hlt
testb
mov
into
lret
mov
add
ljmp
add
jle
mov
add
repnz
mov
sub
pop
pushl
push
lea
add
not
pop
call
call
push
shl
ror
pop
mov
push
push
dec
shr
add
push
push
pop
add
lea
sub
shr
shr
shr
pop
pop
push
add
dec
shr
pop
pushl
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
test
pop
hlt
xchg
js
jnp
xor
add
out
add
add
cltd
jns
add
add
add
add
hlt
mov
add
xchg
add
pop
add
faddl
mov
in
fcomps
push
and
add
push
push
push
lea
push
lea
push
push
push
push
call
pushf
add
add
add
add
shll
add
add
lock
add
add
add
xchg
add
add
hlt
sbbb
xchg
add
in
mov
int3
jb
push
add
mov
fldenv
fdivs
add
hlt
movsb
add
add
lcall
jne
push
push
lea
push
push
call
jnp
jno
mov
push
add
jne
int
in
int3
add
rcrb
jnp
push
add
stos
pop
jecxz
jmp
aam
push
scas
add
neg
push
add
pop
mov
mov
lcall
shrb
cwtl
addl
ror
push
or
not
add
sub
sub
add
rol
pop
not
not
xor
pop
push
lea
push
lea
push
call
add
fs
push
mov
add
lods
mov
add
add
loopne
insb
xlat
pushf
add
xchg
xlat
hlt
add
add
les
pop
lahf
les
pushl
push
push
push
push
push
push
push
push
push
push
call
add
add
fadds
add
jmp
lea
add
pop
lahf
mov
call
add
add
mov
mov
add
add
push
add
jo
movb
in
fdivr
lcall
push
add
push
push
xor
add
sub
sub
push
xor
add
add
shr
sub
sub
rol
pop
sub
pop
push
push
shl
inc
push
or
inc
add
xor
add
add
sub
dec
xor
dec
sub
pop
pop
push
pop
call
push
push
xor
push
push
pop
add
xor
sub
inc
pop
rol
ror
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
jle
push
lock
add
ja
pop
mov
jle
add
mov
fiadds
add
scas
mov
pop
fdivl
push
push
arpl
add
loopne
push
add
add
addl
sub
pop
pushl
call
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
jno
into
add
add
outsl
in
adc
repnz
add
add
rcrl
int
add
jns
fimull
add
mov
add
not
add
stos
push
add
fldl
fldenv
lcall
inc
hlt
push
push
push
push
push
push
call
push
roll
add
in
xchg
mov
jl
test
jb
cld
loopne
loopne
pop
add
cmpsb
mov
into
cmc
add
add
lcall
pushf
and
call
lods
fwait
cmp
pop
lea
push
lea
push
call
add
cmc
jnp
add
ljmp
add
mov
add
add
push
pusha
pop
mov
add
add
push
cmpsl
mov
add
add
faddl
mov
addr16
je
add
jae
mov
add
add
add
sub
pop
push
push
push
dec
dec
pop
push
push
lea
push
push
push
call
clc
add
add
iret
add
test
add
fcmovu
add
std
popl
lock
iret
add
cld
jecxz
push
add
jmp
mov
add
filds
flds
add
cmpsl
add
add
push
push
push
lea
push
call
add
add
imul
testb
pusha
in
roll
add
jecxz
add
test
lods
xchg
add
lods
add
std
xchg
pop
add
push
sti
add
push
cmpsb
shrb
test
mov
lcall
add
push
lea
push
push
push
push
lea
push
push
call
add
pop
add
xchg
add
xchg
add
and
add
add
loopne
cli
add
enter
fsubl
outsl
mov
mov
test
sti
mov
push
int
pop
mov
jns
mov
std
clc
int3
mov
mov
add
sub
pop
push
push
lea
ror
pop
pushl
push
push
push
push
push
call
jge
add
pop
add
ljmp
mov
add
jl
add
add
add
int
xchg
sub
pop
call
push
push
shl
push
push
pop
add
shr
inc
sub
ror
sub
add
pop
xor
dec
ror
add
pop
push
ror
shr
rol
pop
pushl
call
push
add
pop
call
push
push
push
lea
push
lea
push
call
xchg
add
add
mov
pushf
add
js
test
frstor
push
add
xlat
ljmp
mov
imul
lret
pushf
pop
jle
leave
add
rolb
out
add
xchg
add
add
mov
inc
clc
push
push
push
call
add
rcll
xchg
mov
add
roll
mov
add
mov
sub
pop
pop
dec
jne
push
dec
add
shr
pop
call
push
push
ror
push
or
not
add
xor
xor
sub
dec
pop
xor
shr
pop
push
push
push
push
push
call
add
xchg
add
repnz
in
add
ret
hlt
pop
call
push
add
pop
add
lcall
jne
push
pop
call
push
push
call
roll
mov
test
push
mov
fisubl
scas
add
testb
add
in
leave
lds
add
jp
add
add
bound
test
add
out
into
add
aam
sahf
add
rolb
ret
add
ja
test
add
in
clc
lcall
call
pop
call
mov
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
mulb
mov
add
add
lret
stos
shr
add
add
fldt
mov
add
out
stc
repnz
popf
loopne
pop
mov
mov
add
fsub
pusha
arpl
xchg
loopne
pop
jns
add
rclb
lods
push
xchg
add
in
loopne
lea
push
push
sub
not
push
sub
add
add
sub
ror
sub
inc
xor
sub
not
pop
dec
sub
add
pop
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
out
add
add
in
jmp
pusha
lahf
imul
pushf
repnz
add
push
stos
mov
add
add
pop
pushl
push
rol
pop
call
push
sub
not
xor
pop
push
push
sub
sub
shl
pop
call
push
push
lea
add
push
and
add
shl
add
sub
ror
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
add
outsl
add
repnz
jno
add
jo
jae
pop
add
add
mov
cli
mov
jle
stos
mov
add
xchg
add
popf
les
add
pop
xlat
add
mov
lea
add
add
je
sti
sar
fsubl
lcall
jne
push
lea
push
lea
push
lea
push
lea
push
call
rolb
add
les
add
add
cwtl
add
push
js
add
xchg
cli
add
add
stos
addr16
cltd
int3
jmp
in
in
pop
call
push
shr
rol
pop
call
push
sub
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
mov
sub
sarl
add
mov
xchg
mov
into
add
imul
insb
fcomps
addl
mov
scas
insb
pop
mov
insb
push
les
add
add
pop
aam
add
sub
pop
lea
push
push
ror
sub
add
push
or
inc
add
ror
sub
sub
sub
not
rol
pop
add
pop
push
push
push
push
push
push
push
call
add
mov
xchg
xchg
jnp
push
add
addl
mov
add
mov
orb
arpl
fiadds
add
add
movsl
add
jno
add
add
std
lods
out
in
in
lcall
jne
push
lea
dec
pop
call
lea
push
inc
pop
push
push
rol
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
faddl
add
rorb
add
ficompl
roll
cwtl
scas
imulb
add
addr16
fnsave
add
add
fildl
cli
xchg
cwtl
mov
scas
add
add
add
xchg
add
add
fmulp
jge
sub
pop
push
push
ror
pop
pushl
push
push
push
or
inc
add
add
sub
dec
rol
add
pop
dec
pop
push
push
push
push
push
lea
push
push
push
call
pushf
xchg
add
jne
add
xchg
mov
sbbl
out
addb
fidivrs
push
lds
add
movsl
into
popf
addb
movb
sub
pop
push
call
push
push
ror
xor
xor
push
or
not
add
dec
sub
add
pop
ror
pop
push
dec
rol
pop
pushl
push
push
push
call
subb
cli
add
jmp
add
add
add
je
lods
out
mov
mov
filds
arpl
mov
stc
add
add
movb
outsl
push
clc
rcl
add
mov
add
nop
add
add
roll
sub
pop
call
push
lea
add
rol
pop
push
push
pop
call
push
push
not
rol
add
push
or
not
add
ror
not
dec
sub
pop
dec
add
pop
push
add
ror
shr
pop
pushl
push
lea
push
push
push
push
push
call
mulb
test
jl
flds
add
stos
ljmp
insb
je
pop
add
pop
cmpsb
js
js
add
add
add
add
lods
fwait
add
xchg
lock
mov
mov
mov
mov
add
add
add
out
hlt
add
testb
add
testb
subb
lcall
mov
add
push
not
sub
pop
call
jmp
push
not
pop
pushl
mov
push
sub
not
inc
add
pop
jmp
push
push
shl
push
push
pop
add
xor
sub
xor
pop
shr
shl
dec
pop
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
add
jbe
lahf
mov
jp
jo
add
add
add
push
xchg
stos
clc
xlat
lods
ficomps
pop
add
jns
add
sub
pop
pushl
push
sub
inc
shl
shl
pop
call
push
shr
add
shr
ror
pop
push
push
push
push
lea
push
call
add
pushf
repnz
mov
cmpsb
mov
fstl
scas
mov
add
leave
mov
rolb
lahf
cmc
cltd
jcxz
mov
mov
add
add
pusha
incb
jecxz
loop
movsl
testl
icebp
loop
js
cmc
xchg
xlat
add
add
pop
call
push
push
sub
lea
push
and
add
add
sub
sub
add
ror
pop
rol
dec
not
ror
pop
push
dec
pop
pushl
push
push
push
push
call
scas
outsl
loopne
add
mov
lods
cltd
pop
mov
test
add
jno
ja
jge
add
std
add
popa
arpl
iret
sub
pop
call
push
shl
not
pop
push
push
push
push
push
push
lea
push
push
call
mov
add
add
rcrl
add
out
mov
out
std
add
xchg
mov
popf
jmp
mov
add
add
add
jne
in
add
add
mov
stos
add
sahf
out
jecxz
sub
pop
call
push
lea
push
call
add
add
add
sbb
mov
movsl
test
popf
add
add
ljmp
mov
pop
add
add
xchg
in
add
push
add
addl
cli
add
add
fs
add
stc
xchg
sub
pop
leave
push
sub
add
pop
add
push
push
lea
push
push
push
push
lea
push
call
push
fucomip
out
add
mov
add
int
add
add
add
jmp
add
mull
xchg
hlt
cwtl
pop
add
add
lcall
push
xor
rol
add
pop
pop
push
not
pop
pop
pop
push
sub
not
pop
leave
push
lea
pop
add
push
ror
lea
inc
pop
ret
push
lea
push
call
mov
fcmovnb
lods
add
add
stc
push
mov
enter
xchg
ja
pop
in
add
cltd
add
loop
xchg
add
mov
imul
cltd
out
mov
xchg
mov
mov
mov
aam
add
jp
fnsave
call
add
pusha
add
add
movsb
imul
lcall
push
sub
not
rol
sub
pop
ret
push
shr
inc
pop
push
mov
push
not
pop
cmpl
jne
mov
push
push
push
push
push
lea
push
push
push
push
call
shlb
hlt
icebp
add
add
jl
lcall
add
add
mov
add
xchg
lcall
push
inc
or
and
mov
jno
jb
cltd
aas
call
add
stos
lea
add
mov
mov
add
mov
stos
mov
add
add
pop
mov
add
add
ret
ja
ja
not
loop
jo
add
pop
add
add
add
pop
out
fwait
add
leave
jbe
add
in
add
sub
pop
and
xor
push
push
push
push
lea
push
lea
push
push
call
mov
add
xchg
cld
mov
add
add
stos
pop
stos
mov
add
jb
jne
add
jmp
mov
add
add
add
jnp
in
in
lcall
push
cmc
jns
push
lea
push
lea
push
call
outsl
aam
jp
into
add
jle
lds
imull
stos
add
add
arpl
cli
jge
fwait
add
js
add
xchg
loopne
add
imul
add
jle
add
push
add
add
jno
test
add
add
push
xchg
add
add
mov
mov
lcall
rolb
push
lea
push
lea
push
lea
push
push
call
add
add
std
test
add
add
mov
push
mov
data16
mov
mov
add
sti
add
add
add
add
lods
cmpsb
add
add
mov
add
add
add
enter
rolb
xchg
popa
mov
add
fbld
out
add
dec
decl
lea
push
push
lea
push
push
call
mov
lods
jb
data16
add
add
testl
add
stos
test
push
add
add
aad
add
fsubl
add
add
roll
add
add
add
rolb
outsl
add
into
add
add
in
in
pop
sub
push
shr
pop
jmp
sub
push
push
call
hlt
add
add
add
add
fmul
sbbl
std
in
hlt
add
add
jle
in
jb
add
ljmp
lcall
xor
mov
mov
sbb
call
add
fidivrs
add
jecxz
sti
cltd
xchg
insb
push
add
add
enter
mov
jge
add
popa
add
ljmp
loope
into
add
add
imul
cmpsl
add
in
in
lcall
sub
push
lea
push
push
lea
push
push
push
push
call
int
add
mov
add
add
add
mov
cmpsb
add
add
pop
jae
les
sarb
in
in
cmp
jne
push
inc
pop
mov
lea
push
not
pop
sub
push
shr
pop
mov
push
shl
pop
shr
push
push
lea
push
push
push
push
call
jecxz
in
add
data16
fdivrl
jp
mov
mov
cwtl
cmpsl
data16
stc
fists
aam
repnz
jecxz
add
mov
mov
jno
add
cli
mov
add
lods
sub
pop
add
push
xor
inc
pop
sub
push
inc
pop
pushl
push
ror
sub
pop
pop
push
lea
push
push
push
push
lea
push
call
loope
add
test
je
fadds
lods
add
mov
add
sti
ja
adc
add
add
pop
jne
jb
add
movsl
imul
add
in
add
add
rolb
add
mov
data16
jmp
mov
mov
add
push
add
add
rcrl
lods
addb
in
test
sub
pop
shr
push
add
ror
ror
shr
pop
and
sub
push
push
lea
push
push
call
ljmp
mov
call
neg
movsl
mov
add
mov
add
cwtl
mov
loop
out
add
out
add
addb
subl
repnz
add
std
add
add
pop
jno
in
lock
lcall
stc
sbb
test
dec
push
dec
add
lea
not
pop
ret
push
push
push
push
push
lea
push
lea
push
lea
push
call
mov
xlat
mov
leave
data16
jnp
add
add
pop
lcall
std
out
jns
add
add
add
out
pop
div
movsl
xchg
fimuls
push
cwtl
mov
add
test
mov
mov
fwait
add
add
push
add
add
mov
add
lcall
push
rol
dec
pop
mov
push
shr
sub
dec
pop
add
push
add
pop
push
push
push
push
push
push
push
push
lea
push
push
call
js
hlt
in
mov
rolb
iret
enter
iret
testb
mov
outsl
add
pop
add
jmp
add
fldcw
int3
imul
add
mov
sub
pop
push
push
push
lea
push
push
push
push
push
push
call
add
fcomip
add
mov
mov
int
add
iret
addr16
mov
and
cmc
fistpl
incb
les
icebp
movsl
fiadds
push
add
rol
pop
push
push
lea
push
lea
push
call
add
xchg
mov
add
sti
cmpsl
pop
mov
add
fs
add
mov
add
lret
add
ror
lea
mov
jne
roll
mov
add
cmp
add
xchg
mov
popa
lcall
add
add
js
mov
add
lcall
pop
or
clc
lea
push
lea
push
call
mov
out
popf
jnp
in
add
jne
add
faddl
add
add
add
roll
jge
add
in
add
mov
aam
pusha
mov
add
into
movsl
add
add
xchg
add
add
add
fsubs
lahf
add
in
lock
sub
push
xor
sub
dec
pop
mov
push
add
add
ror
pop
shr
push
not
pop
add
mov
push
add
lea
pop
add
push
push
push
push
push
lea
push
call
mov
add
jge
add
add
jne
iret
add
popf
cmpsl
add
leave
add
push
mov
mov
movsb
mov
add
lcall
jnp
add
push
push
push
push
push
call
xchg
add
jp
mov
popa
add
pop
add
notl
mov
add
jno
test
stos
xchg
push
add
out
mov
add
push
stos
push
add
mov
mov
add
in
add
add
aad
mov
xor
mov
push
shr
pop
and
push
lea
lea
sub
pop
rol
push
dec
inc
pop
rol
push
shr
pop
xor
push
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
add
in
insb
stos
add
fcoml
mov
add
cltd
add
ret
js
add
fwait
jo
add
mov
sahf
pop
mov
mov
push
pop
mov
add
cli
add
hlt
insb
jns
push
add
xchg
mov
fcomps
push
pop
cmpb
jne
push
lea
push
push
push
push
push
call
mov
in
nop
pusha
add
mov
lods
mov
mov
add
mov
test
in
add
gs
add
pusha
add
data16
mov
loope
add
add
jno
addb
call
ss
cmp
je
push
push
lea
push
push
call
sar
cmc
lahf
add
add
add
add
add
pusha
add
pop
andl
mov
ficompl
cld
rolb
roll
push
xchg
add
out
movsl
add
call
or
add
push
add
push
lea
push
add
ret
adc
jnp
add
test
std
call
push
push
lea
push
push
push
push
push
push
push
call
xchg
popf
lods
rol
add
jnp
add
sahf
roll
icebp
lcall
add
sti
mov
fdivr
lcall
rclb
dec
push
lea
push
push
lea
push
push
push
call
lock
fildl
hlt
add
movsl
jle
mov
jnp
add
ljmp
xchg
add
add
call
cltd
mov
in
add
add
add
call
hlt
add
insb
movsb
movsb
add
add
fwait
add
pop
push
push
call
js
pop
lds
je
xchg
nop
cli
test
push
mov
xchg
add
loope
add
faddl
cltd
add
lea
ljmp
hlt
add
add
lret
filds
add
xchg
add
jmp
jecxz
mov
clc
pop
pop
pop
push
push
call
add
xchg
jb
add
addb
pop
push
in
xchg
fnstsw
insb
test
testl
add
enter
add
mov
add
pop
pop
mov
mov
mov
add
add
cli
cmpsl
add
pop
push
add
pop
leave
push
push
push
lea
push
push
push
call
add
cmc
leave
les
mov
mov
test
mov
add
pop
cltd
cld
nop
add
int
into
push
push
xchg
sub
pop
ret
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
jo
push
xlat
add
loope
loope
test
out
push
add
add
xlat
mov
pop
add
add
jb
mov
mov
add
add
int3
fwait
add
test
add
lods
add
js
sub
pop
mov
push
rol
pop
add
push
push
push
push
push
push
push
push
lea
push
call
add
shrb
hlt
lahf
add
add
mulb
pop
mov
cmc
jb
cmpsl
mov
mov
add
sub
pop
push
push
lea
push
push
call
jno
cmc
add
add
data16
pop
cmpsl
ljmp
mov
push
fisubl
rcrl
add
push
mov
bound
push
add
push
sub
pop
mov
testw
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
jo
roll
add
mov
add
cmpsl
add
insb
push
fidivrs
jno
icebp
add
xor
add
mov
xchg
lds
add
ja
cli
add
addb
in
loopne
lcall
pop
push
push
push
push
push
lea
push
call
fmul
jno
add
add
xchg
add
out
ret
add
pop
mov
mov
add
add
cld
add
add
fwait
jge
mov
pop
cli
xchg
add
sarl
jge
add
add
mov
mov
add
add
push
push
push
call
add
add
add
addb
fdiv
loop
jle
ret
xchg
xlat
mov
fwait
add
mov
mov
add
add
jl
jl
int3
cli
add
add
sti
pop
add
add
add
mov
ljmp
mov
in
lock
lcall
jb
call
lea
push
lea
push
push
push
push
push
push
call
add
arpl
add
add
ljmp
les
jge
sti
hlt
test
mov
pop
push
add
fs
push
notl
jge
out
cli
mov
cmc
mov
test
popl
fdivr
lcall
xor
pop
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
repnz
add
loope
add
add
add
popf
fldl
mov
shll
add
xchg
lods
add
add
shlb
add
add
mov
enter
mov
imul
add
pop
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
mov
mov
mov
add
rolb
gs
lds
add
idivb
enter
add
test
cld
xchg
add
mov
add
add
aad
fldl
xchg
add
add
stc
imul
movsb
add
sub
pop
pop
push
shr
pop
pop
pop
push
dec
pop
leave
push
not
sub
sub
pop
ret
push
push
push
push
push
push
call
add
add
cmpsb
add
add
test
outsl
mov
enter
mov
add
lret
out
add
add
mov
out
movsb
xchg
add
incb
cmc
xchg
add
jne
sub
pop
mov
push
push
lea
push
push
push
push
call
push
mov
loop
cmc
add
stos
mov
insb
add
sahf
add
mov
movsb
sar
je
add
add
add
add
call
jno
jl
add
call
int
test
mov
pop
add
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
out
cmpsl
arpl
icebp
add
rolb
mov
add
int3
popl
add
pusha
add
popf
mov
sub
pop
push
push
push
push
push
call
imul
push
add
std
xchg
pop
cmpsb
out
add
incb
pop
clc
popa
cmpsl
repnz
add
js
imul
add
add
add
into
add
idivb
stos
add
arpl
add
into
int3
jl
push
add
mov
add
xchg
in
lock
push
push
push
push
push
push
push
lea
push
lea
push
call
incb
lcall
mov
enter
add
test
faddl
jmp
add
call
add
ret
mov
test
add
add
jbe
add
add
in
pop
int3
add
jns
add
mov
je
mov
add
in
in
lcall
pop
or
mov
roll
pop
push
shr
inc
ror
pop
lea
push
sub
pop
sub
push
xor
rol
pop
mov
shr
push
not
rol
pop
add
mov
push
push
lea
push
call
sahf
xchg
add
cwtl
push
add
cmpsb
add
add
mov
add
add
add
movsl
lcall
mov
mov
add
mov
stc
ficompl
les
popa
xchg
pop
lahf
add
lds
add
mov
add
sub
pop
add
push
push
push
push
push
push
push
lea
push
push
call
add
pusha
addl
fiadds
vsubps
add
call
scas
add
cmpsl
add
lret
add
add
cwtl
imull
lahf
testl
stos
iret
cli
out
add
mov
add
stos
jle
enter
add
sub
pop
pushl
push
push
push
push
push
lea
push
push
call
cmc
insb
mov
add
add
cwtl
scas
imul
sarb
xchg
pop
scas
push
stc
add
jbe
in
in
popl
push
dec
pop
mov
push
xor
pop
add
push
push
push
push
call
push
add
add
add
add
jb
mov
mov
jnp
in
xchg
add
ror
enter
mov
arpl
add
mov
fs
pop
xchg
jge
add
cli
in
push
add
add
jge
fbstp
add
mov
add
add
push
int3
push
int3
addr16
push
mov
add
notb
mov
push
push
push
push
push
call
je
orl
test
movsl
pop
popa
push
mov
in
add
scas
in
jnp
add
nop
add
add
icebp
add
adc
push
shl
pop
mov
add
push
rol
dec
pop
xor
push
ror
pop
rol
nop
push
xor
shl
pop
nop
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
imul
fmull
lods
and
jge
enter
mov
mov
aad
gs
add
pop
cmc
fldl
pop
sub
pop
xor
push
lea
push
push
lea
push
lea
push
push
push
call
lea
mov
jmp
add
add
mov
add
lods
shrl
pop
add
pusha
mov
push
icebp
mov
add
add
add
add
in
lcall
nop
push
push
lea
push
lea
push
lea
push
lea
push
call
mov
add
insb
add
lahf
add
mov
cmpsl
add
ljmp
pop
add
pop
ljmpw
jae
jne
fisttps
call
inc
push
lea
rol
pop
nop
push
pop
nop
push
rol
pop
cmpb
jne
push
push
push
lea
push
push
call
add
xchg
testb
in
cmpsb
add
jnp
add
add
add
add
jle
jne
add
add
jecxz
pop
add
add
add
test
fsubl
xchg
in
push
imul
aam
arpl
lock
mov
sub
pop
add
push
push
call
pop
mov
jo
add
xlat
push
mov
add
hlt
push
mov
jne
push
stos
add
push
add
fldt
xchg
in
roll
add
add
cmpsb
add
add
flds
push
loopne
mov
add
add
add
sub
pop
nop
nop
push
push
call
scas
push
jns
mov
shlb
xchg
push
repnz
roll
add
ret
push
pop
loope
add
pop
iret
into
add
mov
jne
push
add
call
loop
add
jb
add
push
jnp
mov
add
mov
add
add
cld
add
add
add
lcall
inc
or
test
add
add
jge
pop
push
test
push
push
call
add
mov
test
test
add
jecxz
cmc
add
rcrl
add
add
mov
add
ffreep
add
orl
jbe
jns
add
mov
push
incb
outsl
std
incb
clc
add
in
call
sti
es
lea
push
lea
push
call
in
mov
std
xchg
jae
mov
fcomp
push
mov
lcall
add
out
add
jb
add
cltd
mov
cld
add
add
jle
add
lods
movsb
add
div
std
xchg
roll
lcall
inc
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
add
in
mov
jecxz
mov
icebp
xchg
add
add
fsts
xchg
lods
add
stos
test
rcll
imul
add
pop
add
repnz
xchg
sub
pop
nop
nop
push
not
sub
add
pop
cmp
jb
push
push
lea
push
call
xchg
out
lret
imul
jno
xchg
jle
add
add
add
imul
add
add
gs
leave
aad
jmp
add
pop
add
add
add
lcall
shr
add
add
push
push
push
push
push
push
push
push
call
ja
push
std
pop
add
mov
xchg
add
add
mov
stos
xchg
mov
add
add
out
add
rorl
add
add
mov
add
add
add
push
add
add
fdivr
lcall
push
and
push
call
arpl
addb
enter
add
push
add
rolb
add
roll
out
movsb
lods
test
add
movzwl
push
push
push
lea
push
lea
push
lea
push
push
push
call
fldl
add
xchg
fnstenv
add
pop
fsubs
pop
add
mov
pop
loope
add
add
add
call
cmpsl
add
ja
add
add
enter
add
jl
rcl
lods
sub
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
pop
add
add
add
hlt
push
fs
mov
add
add
add
incb
add
add
test
add
add
pop
push
add
notl
xchg
pop
push
cmp
add
sub
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
outsl
add
loopw
add
addr16
jle
pop
loop
iret
test
add
fsubrl
add
sub
pop
mov
push
lea
push
push
push
push
push
lea
push
call
add
add
leave
xchg
mov
out
je
pushf
add
mov
jmp
lods
mov
add
jno
lods
add
add
loopne
add
test
add
add
mov
int3
xchg
out
enter
in
lcall
leave
push
rol
sub
lea
shl
pop
xor
push
xor
add
inc
sub
pop
shl
push
push
push
push
push
lea
push
lea
push
push
push
push
call
sarl
fistps
arpl
add
add
addb
xlat
push
add
aad
fs
cli
mov
add
add
lcall
dec
nop
add
loope
push
push
push
call
add
add
push
add
push
mov
repnz
add
int3
add
jle
clc
pop
xlat
push
mov
add
imul
rorl
cld
add
jno
jnp
movsl
add
mov
mov
enter
lcall
dec
nop
add
shl
add
pop
shl
xor
push
rol
add
sub
pop
mov
push
lea
pop
add
push
push
push
push
push
push
push
call
add
add
pop
add
addb
adc
add
hlt
addl
shr
add
mov
out
pop
add
roll
add
fs
xchg
mov
mov
add
test
lds
add
add
jnp
les
in
pop
add
lea
into
add
add
mov
in
in
pop
push
lea
dec
pop
pop
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
mov
add
clc
pop
add
mov
jb
loopne
cmpsl
mov
add
je
xchg
add
mov
lcall
leave
push
push
lea
push
call
add
sahf
push
pop
jge
add
int
nop
fbld
pusha
add
cwtl
add
ljmp
pusha
add
push
mov
sahf
xchg
popa
jp
lret
xlat
add
mov
add
leave
jecxz
mov
int
mov
pop
incb
lcall
or
push
push
push
push
push
push
lea
push
lea
push
push
call
in
add
xchg
add
add
out
xchg
loope
call
add
leave
add
add
ficompl
imull
mov
outsl
jle
add
push
pop
mov
mov
int3
in
in
fcompl
mov
push
lea
push
push
lea
push
lea
push
push
push
call
mov
add
gs
add
mov
addl
add
ja
add
pusha
xchg
out
mov
pop
adcb
add
cld
add
in
add
add
scas
pop
jae
mov
pop
add
add
in
add
add
in
in
lcall
push
push
lea
push
push
push
call
add
add
add
mov
lret
lahf
push
add
shrb
push
scas
mov
add
out
jne
lds
sti
add
add
sub
pop
push
push
push
add
sub
pop
push
push
shl
pop
mov
mov
push
ror
pop
mov
push
shl
add
pop
test
je
push
sub
dec
pop
mov
push
push
push
push
push
push
push
push
call
add
mov
jecxz
jnp
scas
add
jae
add
nop
push
mov
fincstp
lcall
add
popa
add
lods
mov
in
add
out
add
add
js
push
push
mov
pop
cwtl
sbb
add
lahf
add
negb
add
add
lcall
testb
push
add
push
sub
ror
xor
pop
mov
mov
push
push
push
push
call
mov
loop
jb
add
add
xorl
loop
add
add
movsb
lret
add
jnp
in
lock
lcall
push
shl
not
sub
pop
cmp
je
test
je
push
add
lea
add
add
pop
mov
inc
push
shr
sub
inc
pop
cmp
je
push
inc
pop
test
jne
push
lea
push
lea
push
lea
push
push
call
in
jp
out
scas
add
lods
enter
push
je
mov
cwtl
shl
push
imul
jnp
add
jle
les
pop
xor
pop
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
rcl
rcll
jl
add
add
shlb
cli
jmp
out
fmul
add
mov
fistpl
mov
in
fdivr
lcall
pop
push
push
push
lea
push
lea
push
push
push
call
add
push
scas
xchg
addb
add
add
int
cli
add
add
jecxz
mov
add
call
add
lcall
push
shl
shl
pop
leave
push
lea
push
lea
push
push
push
push
push
lea
push
call
aad
pop
flds
add
loop
pop
mov
enter
add
add
ror
int3
loop
add
add
movsl
add
hlt
pushf
mov
add
add
imul
jb
add
add
add
add
shr
lret
sub
pop
ret
push
push
push
push
lea
push
lea
push
call
add
stos
icebp
mov
pusha
xchg
fdivs
mov
cmpb
addb
fildl
push
add
add
add
mov
into
test
add
push
add
sub
pop
mov
inc
push
xor
xor
shr
pop
cmp
jne
lea
push
lea
push
push
lea
push
lea
push
push
push
call
lret
popf
filds
lahf
add
pop
add
out
add
add
xacquire
add
push
gs
icebp
negl
pop
cmpl
add
jae
lock
add
iret
mov
cmpsb
out
idiv
pop
add
mov
repnz
lahf
add
jnp
pushf
add
jle
mov
lcall
popa
add
add
push
xor
pop
mov
push
push
push
push
push
push
push
push
call
add
cwtl
mov
add
data16
add
gs
add
push
jno
add
add
cli
mov
mov
subl
stos
add
add
cli
xchg
add
ret
add
add
add
mov
cld
add
cmc
fadds
fsubp
jo
fidivs
in
loopne
lcall
movb
not
sub
pop
cmp
jne
mov
push
shl
xor
inc
sub
pop
test
je
push
push
push
push
push
push
call
mov
add
add
mov
mov
idiv
xchg
xorl
jb
push
add
lock
push
jecxz
add
fwait
mov
cltd
jo
sahf
add
sahf
add
jbe
add
sub
pop
mov
push
push
lea
push
lea
push
push
call
xchg
test
lcall
add
pop
les
mov
add
bound
jno
add
add
add
pop
mov
jle
mov
aad
add
into
add
je
jecxz
cmpsb
xchg
add
negl
add
out
sub
pop
add
push
shr
not
ror
pop
cmp
je
push
push
push
lea
push
push
call
mov
mov
add
imul
add
incb
negb
jae
add
push
mov
add
add
imul
mov
add
add
add
pop
gs
jbe
sar
push
add
fisubs
sub
pop
jmp
push
xor
shl
rol
pop
xor
pop
push
sub
dec
pop
pop
push
push
push
push
push
push
lea
push
call
leave
mov
roll
add
jno
mov
add
jno
std
into
add
add
movsb
arpl
add
add
rorb
imul
add
add
xchg
add
pop
add
addb
mov
mov
lods
jne
push
add
add
lcall
pop
push
inc
not
pop
leave
ret
push
push
lea
push
push
lea
push
push
push
push
push
call
je
je
into
add
add
add
mov
add
stos
leave
popa
nop
xchg
icebp
mov
out
mov
add
test
icebp
sub
pop
lea
push
push
lea
push
call
add
add
pushf
fiadds
add
ret
in
leave
in
out
add
xlat
pushf
cmc
mov
in
add
hlt
fs
xlat
add
add
gs
push
fs
test
push
leave
pop
out
mov
fistpl
mov
add
enter
movsl
add
xlat
sub
pop
pop
pop
push
not
pop
pop
push
shr
pop
pop
push
dec
pop
leave
push
lea
push
push
push
push
call
add
lds
imul
add
add
add
add
cmc
pop
sahf
jbe
add
ja
leave
push
popl
pop
nop
lods
test
pop
mov
pop
add
sti
add
lcall
or
push
lea
shr
add
pop
mov
pop
push
shl
pop
pop
push
rol
lea
shr
pop
pop
pop
push
add
dec
pop
leave
push
push
call
mov
add
in
pushf
ficoms
add
je
mov
push
aam
cltd
test
fwait
je
pop
xlat
jne
add
loopne
add
push
sarl
fcoml
add
push
push
mov
push
xchg
ljmp
add
add
ret
add
mov
add
ficoml
sahf
add
mov
aad
add
lcall
or
test
push
test
jae
test
jb
mov
jae
fs
leave
lret
jae
test
jae
sbb
jb
in
inc
nop
mov
jmp
rclb
xlat
inc
dec
pop
cmp
pop
shll
fldenv
lret
jnp
mov
cmp
sbb
mov
and
mov
pushl
dec
outsl
fistl
push
push
and
jle
adc
jbe
sbbl
out
lret
jae
or
fidivs
lods
xchg
sub
jg
into
fwait
mov
dec
xor
jmp
enterw
cmc
out
jae
cmp
mov
add
iret
pop
lds
push
push
das
push
xchg
pop
mov
push
or
xchg
aad
test
fimull
aad
xor
mov
jp
xor
adc
aad
outsb
push
lods
xchg
mov
int3
leave
in
push
loope
ror
cmp
test
dec
or
dec
pusha
adc
cmp
sarb
cmc
xchg
in
addr16
enter
push
adc
fstpl
in
push
sbb
cmp
out
push
lea
je
mov
call
int
jb
mov
je
inc
aam
push
mov
push
stos
and
es
xchg
scas
sub
push
pop
test
cmp
bound
stc
pushf
pop
pop
cmp
notb
cld
pop
mov
jmp
add
daa
push
jne
jg
stos
cli
sbbb
stc
dec
in
test
fwait
jb
mov
xchg
test
std
leave
lods
pop
cmpsb
dec
mov
stos
in
push
stc
xchg
ljmp
leave
mov
push
pop
jo
dec
fsubrl
pop
dec
je
data16
les
addr16
add
insb
in
xor
cmp
mov
in
mov
mov
mov
mov
fimull
xchg
gs
jle
or
mov
fcoms
mov
xor
jae
inc
imul
push
mov
pop
mov
push
cmp
data16
decl
or
or
or
popa
jecxz
xor
mov
cld
pop
inc
xchg
ljmp
jle
inc
loop
push
std
scas
test
lock
testl
mov
out
fmull
mov
lcall
adc
dec
mov
loopne
pop
stos
sbb
add
or
mov
cmp
pop
xchg
xor
add
not
test
mov
ljmp
stc
jne
cmp
mov
test
sahf
test
and
aas
iret
dec
pusha
insl
insb
xchg
imul
jae
ret
mov
sbb
into
jmp
add
cwtl
dec
insl
pop
push
loope
pop
in
inc
add
aam
pop
sbb
cld
xor
adc
xorl
test
scas
inc
loope
aad
enter
cmp
in
fwait
sub
int
sub
mov
jmp
mov
icebp
loop
mov
inc
push
fwait
jo
or
lods
ret
xlat
les
mov
sbb
mov
clc
pushf
push
daa
sahf
cmp
sub
ror
movb
out
xchg
adc
mov
or
in
ljmp
sub
imulb
es
pop
test
rorb
sbb
sub
add
lret
sbb
and
sti
mov
add
movl
popa
imul
pop
push
add
out
mov
and
loopne
stc
add
fimull
xchg
popf
roll
push
frstpm(287
dec
add
jmp
sbb
in
push
xchg
movsb
popa
aad
dec
adc
movsl
aam
mov
pop
ljmp
inc
mov
xor
cwtl
mov
leave
jae
fcmovnb
fsts
push
or
push
cmp
bound
cmp
aaa
jno
pusha
lods
adc
stos
jnp
iret
add
dec
jmp
aam
mov
pop
xor
adc
fs
fsubp
outsl
rorb
push
dec
rorl
fs
int
hlt
rcrb
adc
jmp
adc
add
adc
jo
call
pop
adc
clc
dec
shl
lea
faddl
or
pushf
stc
add
xor
push
aam
push
jmp
pusha
push
leave
fs
inc
pop
sub
aad
jp
mov
dec
outsb
lods
and
dec
inc
and
in
push
sbb
loope
mov
cmp
mov
xchg
out
ja
repz
jnp
stos
mov
cwtl
nop
push
pop
mov
and
fmull
sti
jg
adc
lret
push
adc
std
neg
cmpsb
mov
clc
subb
sbb
icebp
inc
nop
xchg
and
repz
and
lock
dec
popf
outsl
scas
mov
fisttps
dec
sub
into
adc
sub
fdivrp
add
and
push
sub
sbb
imul
mov
or
das
xorb
jo
roll
mov
or
jle
les
daa
xchg
pop
mov
js
push
mov
sbb
sahf
xor
mov
mov
xlat
in
cmp
xchg
cmp
cmp
pop
lock
loopne
mov
cs
popf
pop
cmpsb
fimuls
inc
jns
cmpsl
push
sbb
pushf
cmp
cld
or
loopne
jb
pop
xor
mov
jge
sahf
sbb
fucomip
jg
xchg
addr16
outsl
xchg
adc
mov
and
add
push
mov
push
xchg
cld
jmp
xchg
aas
cmp
pop
and
cli
pop
aas
lahf
in
mov
mov
adc
lock
cltd
xchg
adc
add
adc
mov
dec
cmp
pop
ret
inc
fadds
add
ljmp
ret
sub
mov
push
adc
jo
fwait
lahf
in
jecxz
add
roll
mov
push
jmp
insb
pop
notl
push
add
sbb
push
cmp
sub
dec
mov
xchg
scas
pop
idiv
xor
add
pop
cltd
dec
inc
or
mov
leave
mov
adc
lcall
in
xor
stos
stc
cmc
jae
pop
adc
pop
shrb
sbb
or
mov
out
aas
roll
mov
add
jns
das
in
and
lock
cmpsl
and
in
jmp
notl
aam
push
sub
inc
andb
cmp
ret
bound
pop
push
fnclex
and
mov
dec
lods
negl
jl
stc
xor
inc
jbe
push
or
push
pop
sbb
pop
icebp
rorb
push
les
push
js
xor
jge
add
or
nop
push
sahf
stos
prefetch
test
push
bound
into
call
sbb
cmp
xor
push
cmpsl
lods
in
aas
inc
test
cmpsl
test
lods
fwait
testb
hlt
mov
dec
mov
jno
or
iret
imul
add
dec
sub
std
push
add
mov
insb
out
add
mov
cs
addb
or
call
or
ret
test
and
incb
push
sub
jne
xor
inc
push
pop
mov
in
cli
mov
fimull
fcmovnbe
lds
cmpsb
rcrl
out
push
dec
out
mov
push
cmpb
cld
addr16
test
pop
arpl
mov
faddl
call
in
cmp
pop
jns
mov
dec
xchg
stos
dec
xchg
sbb
jb
push
mov
inc
es
add
repz
dec
sbb
pusha
pop
cmpsl
rcrl
add
sub
and
xchg
cmp
add
repnz
cmp
dec
add
push
jo
or
adc
enter
stos
shll
dec
sub
gs
jmp
adc
cltd
xchg
mov
fwait
popf
test
stos
sbbb
out
gs
mov
je
fmulp
pop
adc
jl
fistps
sbb
test
adc
out
cmp
movsl
lods
sub
dec
sub
and
lods
outsb
stc
jp
and
or
xor
adc
ljmp
stc
sarl
nop
push
es
inc
sub
xor
adc
mov
jb
jmp
and
inc
das
iret
dec
hlt
cmpb
fs
inc
popf
fdivl
adc
js
pop
xorb
pop
mov
mov
dec
and
fbstp
lods
cli
push
in
xchg
push
adc
mov
ss
xchg
gs
mov
les
pop
sbb
adcl
fwait
xchg
adcl
xchg
hlt
pop
push
stc
sbb
mov
xchg
mov
mov
jl
lods
gs
test
and
adc
fsubl
mov
sbb
ficomps
add
jecxz
or
xlat
cmp
inc
xor
and
xchg
test
cmp
sbb
and
lret
js
push
mov
test
push
ret
fistpl
pop
out
xchg
dec
mov
repz
test
rorb
inc
adc
addr16
push
int3
push
xor
and
pushf
leave
cli
popf
mov
and
push
fs
outsb
mov
xchg
mov
pop
insl
insb
add
fnstcw
push
mov
add
xchg
or
mov
and
xor
mov
ret
sbb
stos
mov
mov
lret
mov
fbstp
push
push
jge
test
lods
out
cmpsb
sub
insl
push
pop
outsl
out
test
dec
mov
mov
adc
nop
jo
xchg
in
mov
sbb
push
dec
jns
cmp
push
negb
cwtl
shll
in
sarl
jno
xchg
jb
mov
ret
daa
cmc
cmpsb
jb
hlt
sahf
mov
popf
dec
dec
or
sub
pop
cmp
sub
inc
test
adc
and
or
xchg
inc
fsubr
inc
add
outsl
jmp
imul
popf
std
cmp
push
xchg
jge
fwait
xchg
cs
mov
jmp
xchg
inc
mov
es
rolb
mov
out
mov
lods
push
push
in
mov
add
push
testl
dec
icebp
nop
mov
cmpsb
outsb
mov
and
mov
adc
sub
and
and
in
xchg
push
or
pop
int
xchg
sbb
add
mov
aas
iret
pop
icebp
push
pop
mov
sub
fwait
mov
test
mov
adc
and
fisttpll
mov
gs
mov
roll
or
jecxz
xor
mov
imul
ret
sbb
popf
inc
clc
push
push
xchg
aam
orl
xchg
ja
rcrl
mov
pop
pop
call
mov
test
xchg
pop
mov
and
push
inc
lcall
cs
js
lods
jnp
out
hlt
rorl
jl
repz
mov
cltd
mov
sub
push
xchg
je
jno
add
push
aad
stos
repz
xchg
push
fcomps
icebp
outsl
inc
repz
jns
testb
push
jle
sahf
mov
inc
sub
mov
fadds
adc
adc
xchg
inc
jg
pop
mov
clc
mov
pushf
and
pop
xchg
sbb
icebp
test
pop
sub
test
sbb
test
add
adc
dec
push
lahf
add
aas
xchg
aam
push
addr16
test
cmpl
pushf
mov
push
test
pop
xchg
push
pushf
fadds
stc
loopne
ja
mov
pop
shll
repnz
pop
pop
fnstcw
or
mov
fcoml
in
pop
dec
jmp
cltd
insb
push
js
sub
imul
pop
mov
cltd
add
inc
rclb
add
cmp
sarl
imul
cmpsb
pop
xchg
out
es
fmuls
outsb
lret
push
mov
daa
xchg
xor
sbb
sub
jecxz
fistps
in
arpl
add
fcompl
les
scas
xor
aad
fwait
enter
rcr
fdivr
repz
mov
cld
arpl
inc
or
lock
mov
and
dec
or
cmpsb
fdivl
ds
dec
roll
pushf
xor
lods
adc
es
lcall
mov
test
mov
in
and
push
enter
push
scas
scas
lahf
in
incb
inc
popa
push
imul
cmpsl
ss
push
push
xor
mov
cmp
mov
dec
dec
pop
sbb
fidivl
xchg
cmovae
xchg
adc
adc
fs
repz
dec
jge
data16
ret
add
and
add
adc
mov
xor
jno
ror
pop
icebp
pop
data16
mov
pop
fistpll
lahf
cld
iret
imul
dec
and
and
or
pcmpeqb
jnp
pushf
sbb
fsubl
rorb
andl
sbb
cld
dec
push
or
rclb
out
sbb
add
adc
mov
fwait
mov
js
ljmp
notl
jp
dec
sbb
dec
xchg
push
dec
inc
out
mov
pop
xor
cltd
pop
in
jno
adc
push
repnz
jne
leave
xchg
mov
or
outsb
mov
mov
aas
push
add
push
nop
add
test
inc
fistpll
cmp
ret
fildl
aas
repnz
hlt
sub
inc
ret
push
dec
lock
popa
les
pop
stos
test
test
scas
sub
mov
iret
cmpsb
mov
loopne
mov
mov
cli
sub
sub
cmc
inc
dec
ret
mov
inc
mov
xchg
mov
pop
push
mov
shll
mov
mov
xlat
xor
push
jg
sarl
push
aam
stos
nop
lahf
mov
jne
sub
jge
jg
pop
push
fldcw
imull
sub
and
loopne
mov
aas
decl
xchg
idiv
sbbl
cmp
stc
es
sar
cld
std
and
xchg
mov
pusha
mov
pusha
popa
rorl
pop
lret
add
mov
mov
dec
decl
mov
es
or
outsl
mov
pop
mov
sub
in
inc
ss
xor
jg
jecxz
out
in
repz
xchg
faddl
sub
orb
ret
dec
mov
lds
pop
pop
fildll
lds
lahf
out
test
and
stc
mov
clc
xchg
fnstenv
push
outsb
aaa
cmpsl
arpl
mov
adc
lcall
sbb
into
aaa
dec
fstpl
cmpsb
in
xchg
inc
ror
testl
shll
and
orl
xchg
out
stc
movsb
lock
repz
test
cmc
and
sbb
adc
imul
pushl
hlt
scas
in
jp
fcmovu
out
jne
mov
jle
mov
sahf
dec
aaa
adc
sahf
lahf
cltd
cmpsl
xchg
pusha
mov
bound
dec
aaa
mov
lcall
cwtl
loop
jle
xchg
and
cmp
xor
jnp
inc
cs
add
imul
inc
mov
mov
xchg
jnp
sbb
mov
mov
popa
adc
push
rcrb
les
data16
fs
push
cs
mov
jne
rcrb
dec
push
mov
movsb
ljmp
fstpt
cltd
push
mov
popf
cs
js
and
popf
or
dec
add
ljmp
xchg
or
mov
lret
iret
addr16
sarb
hlt
into
jb
xchg
pop
lcall
test
popa
aaa
out
xchg
cmp
or
xor
xchg
and
ljmp
xchg
leave
and
lcall
xadd
sbb
push
frstor
pop
outsb
cmp
cli
inc
js
mov
dec
add
cmp
sbb
mov
jbe
mov
incl
test
push
jg
sbb
push
clc
push
dec
addl
shlb
mov
push
push
dec
add
imul
cmp
dec
icebp
adcb
cmp
in
sarl
cs
dec
ret
add
or
fcmovu
rcl
stc
sarl
test
loope
out
cmp
mov
or
or
adc
aaa
int
mov
lcall
imul
pop
xchg
dec
popa
or
nop
in
xchg
push
jge
jnp
iret
inc
es
cmc
inc
xor
test
test
imul
add
pop
pop
jecxz
fimull
or
fdivs
loopne
ds
imulb
dec
pop
sti
mov
jmp
dec
mov
in
and
sub
lock
or
adc
add
add
mov
out
fstl
scas
mov
xchg
les
subb
add
sahf
cmp
loopne
fbld
icebp
adc
mov
and
cmp
fsubrs
icebp
test
ja
and
dec
loopne
pop
fmul
mov
mov
sub
pop
xor
adc
sub
xor
nop
push
mov
cmp
out
mov
pop
add
nop
inc
lds
fcoml
and
popa
inc
and
and
mul
xchg
push
faddp
ret
dec
cld
sbb
scas
cmp
addb
sbb
das
pop
and
push
cmpsl
movsb
das
mov
cwtl
cmp
repz
xlat
ret
dec
push
leave
mov
int
ss
lret
cld
sar
xchg
pop
jb
push
push
mov
pop
mov
adc
aam
jne
enter
jge
jl
inc
lcall
mov
loope
or
inc
aas
sub
insl
addr16
jge
or
ljmp
movsb
dec
popf
es
leave
and
lahf
push
ret
jne
aam
fmull
cmpsl
ret
xchg
inc
test
cmp
fnstenv
scas
and
push
mov
std
mov
lahf
adc
dec
cwtl
sbb
cmp
cmpsl
jp
stos
mov
push
jge
out
jae
add
mov
stos
and
sbb
push
or
aaa
xchg
in
adcl
incl
sub
pusha
fidivl
cli
mov
xor
cmp
iret
inc
int
jns
mov
int
jbe
jns
iret
fwait
pop
and
std
push
fwait
in
adc
xchg
cs
ficomps
mov
pop
pop
mov
mov
rolb
aas
jo
pop
adc
aas
mov
cmpsl
out
push
xor
xchg
push
mov
or
pop
cmp
cmp
mov
fidivl
fcoms
dec
shl
addr16
mov
xchg
push
hlt
stos
mov
lods
pop
mov
sbb
sub
or
push
push
and
enter
imul
loopne
cmp
xchg
sub
or
jp
push
push
out
push
push
mov
mov
adc
cltd
cmp
or
push
sbb
lret
pop
jnp
std
movsb
repnz
pop
shl
aam
mov
fnstcw
and
sbb
xor
clc
xor
loope
jo
jno
mov
jno
or
in
xchg
lret
ljmp
fsubrs
je
mov
js
aaa
nop
sarl
push
js
insb
sti
popf
mov
fmull
rorl
inc
cld
cmp
in
pop
fadds
inc
sbb
and
dec
push
jmp
cmp
jnp
pop
sub
sti
mov
in
es
dec
cmpsb
mov
rcr
test
or
out
adc
inc
adcl
adc
inc
pop
movsb
shlb
push
xor
aam
inc
push
cmp
jnp
add
fcmovbe
ret
adc
mov
test
adc
aam
lock
mov
iret
or
mov
mov
ret
mov
pop
sahf
pushf
cmp
stos
and
mov
sbb
data16
cs
lock
cld
adc
push
incl
cmp
lret
xchg
roll
xchg
jno
mov
and
cmpsl
mov
sub
insb
xor
rcrl
xchg
mov
mov
lcall
iret
mov
mov
jmp
call
mov
loope
loope
mov
rcl
test
mov
fwait
mov
adc
icebp
inc
mov
out
fwait
stos
push
adc
adc
sub
mov
cmp
out
mov
hlt
jecxz
aas
xor
jl
fstpt
add
repz
mov
cmp
leave
adc
divl
add
push
out
icebp
inc
pop
push
movsb
push
mov
sub
xor
xor
cmp
jo
ret
fisubl
vinserti64x4
js
sbb
add
jle
adc
mov
sqrtps
les
addr16
jne
jbe
adc
lods
aam
mov
and
adc
xchg
test
mov
idivl
lds
rolb
dec
adcl
pop
jp
mov
movl
push
adc
outsb
popa
mov
dec
cld
or
ljmp
stc
adc
je
clc
loopne
jno
pop
lret
inc
cmp
xchg
adc
adc
push
scas
testb
cmpsb
repnz
push
mov
jl
addr16
pop
lock
out
mov
sbb
xchg
or
mov
and
push
jo
inc
jecxz
repnz
push
mov
jnp
jge
mov
jnp
and
jo
aam
jae
lods
shrl
imul
mov
pop
cld
nop
mov
or
push
mov
gs
insl
popa
ret
out
xor
stc
lds
cmp
xchg
iret
mov
pop
cmp
ja
test
scas
add
fs
xor
enter
xor
in
mov
mov
repz
xchg
pop
pop
out
into
pop
fwait
sbb
jae
mov
ljmp
push
cli
cmpsl
adc
lods
pop
movsl
lods
out
aad
js
das
insl
test
loopne
inc
ja
mov
sahf
mov
add
add
mov
sbb
xchg
add
lahf
imul
cltd
cmp
orb
or
xchg
jne
lret
jp
jp
inc
xchg
popf
mov
pop
test
sbb
push
dec
in
push
or
jnp
ljmp
scas
bnd
mov
stc
add
inc
adc
adc
mov
in
imul
rcrb
repnz
movsl
jbe
arpl
sbb
and
call
dec
cmp
cmp
lahf
push
dec
sahf
lea
add
es
inc
cmp
repnz
repz
push
andb
or
lods
mov
dec
ss
sbb
mov
lock
xchg
in
ss
adc
jne
push
shl
ret
test
jecxz
ret
sub
test
aas
mov
or
jns
dec
add
and
mov
mov
jg
fsub
sub
add
rol
adc
pop
les
stc
mov
or
lret
pushf
xchg
push
icebp
aas
push
or
adc
fdivs
pusha
daa
stos
dec
hlt
push
out
jo
mov
sbb
call
mov
imul
jle
xor
enter
mov
leave
dec
push
insl
addl
mov
jmp
sbbb
popf
jnp
jle
loop
mov
addb
fwait
inc
int3
push
mov
pop
clc
insb
test
stos
adc
sub
and
add
clc
add
or
xchg
adc
cs
jne
cmp
xchg
dec
fbld
test
fisttps
add
loopne
sub
mov
scas
mov
xchg
insl
xchg
xchg
int
orl
fistl
in
inc
mov
loopne
fildl
fwait
ret
jb
enter
repz
xchg
or
inc
outsl
cmpsl
xchg
fadds
and
xchg
push
push
nop
mov
scas
mov
pusha
inc
lea
jnp
js
enter
mov
es
inc
das
sbb
fld
jbe
xlat
ja
jne
ljmp
out
outsl
or
repz
mov
fcomps
ret
into
jg
xlat
push
adcl
dec
repnz
ret
sahf
leave
jnp
stos
cmp
arpl
jge
sbb
ror
or
cmp
and
andb
pop
jo
add
cltd
lds
out
add
jge
out
xor
adc
aaa
xorl
dec
iret
popa
adc
aaa
sub
cli
movsl
hlt
sbb
and
rcrl
add
cmpsl
dec
xchg
repz
lods
inc
fidivl
mov
push
pop
outsl
je
ss
ret
jecxz
push
shr
and
sbb
ss
jl
jae
subl
sub
mov
inc
int3
call
divb
mov
mov
add
dec
dec
inc
lock
ficomps
mov
mov
mov
sub
je
fs
cld
adc
jbe
hlt
out
in
out
dec
aas
outsl
cmp
sbb
aad
and
xor
jmp
inc
in
xor
mov
xchg
lock
adc
jnp
fisttpll
hlt
insb
and
push
je
cmp
int
or
lock
neg
xor
xchg
sbb
push
adc
daa
testl
and
ljmp
adc
sub
flds
xchg
neg
rol
cmp
inc
sub
inc
fcmovnb
les
and
inc
add
outsb
push
mov
notl
mov
mov
daa
daa
stos
jno
bound
dec
mov
sbb
jne
std
mov
cmp
and
testb
sbb
xor
sbb
xor
mov
std
cmc
push
inc
or
dec
mov
mov
inc
aas
inc
es
fildll
iret
scas
stc
pop
shll
xor
stos
dec
popa
mov
sbb
test
lods
loope
and
mov
ljmp
das
loop
out
dec
pop
movsl
test
fwait
add
push
arpl
cmp
adc
mov
movsl
add
rcll
inc
pop
sahf
xchg
stc
pop
lret
cli
sub
push
mov
and
mov
pushf
mov
addr16
xor
pop
sahf
data16
inc
and
fsubs
into
iret
lahf
lret
sbb
xchg
sbb
inc
pop
cmp
sub
fwait
insb
pop
xchg
into
mov
inc
hlt
push
dec
test
imul
leave
xchg
cmp
sub
and
out
iret
aaa
aas
xchg
pushf
dec
aam
mov
imulb
mov
arpl
leave
js
mov
add
mov
mov
loop
jne
inc
test
pushf
add
inc
cld
fmull
or
lret
mov
mov
cmp
push
int
mov
jo
and
mov
cmp
jbe
pop
sbb
fstpt
mov
imul
aas
sbb
loope
lret
mov
daa
and
js
fs
jmp
sti
je
jg
rorb
mov
bound
jbe
push
fadd
shl
in
and
sub
pushf
adc
imul
dec
xchg
jmp
pop
mov
and
push
push
outsl
jae
mov
dec
lret
push
inc
iret
sub
lret
loopne
xchg
es
jecxz
ss
mov
roll
imul
mov
xor
movsb
addl
std
aam
mov
mov
xchg
sahf
leave
sahf
sbb
divb
cwtl
cmp
popf
and
and
mov
mov
lock
loope
or
push
jo
adc
fucomip
lea
inc
js
sahf
push
fcmovbe
xchg
and
test
and
xor
sahf
fsubrs
in
shrb
sbb
lcall
pop
adc
aam
xchg
push
push
cmpl
lret
sbb
fidivrs
push
js
push
movsl
adcb
jns
jo,pt
add
dec
cmp
insl
pop
jne
xor
out
test
lahf
or
out
jmp
lret
mov
gs
push
insl
push
cmp
lret
popa
rol
push
sbb
fwait
add
hlt
sbb
cmpsb
daa
jmp
or
incl
cmp
cmp
jne
repnz
test
jg
cmp
leave
rcll
pop
cwtl
mov
loop
mov
enter
push
loopne
sub
push
dec
das
out
push
mov
push
mov
sbb
aaa
pop
or
push
clc
out
sbb
jns
std
sub
gs
fsub
js
test
stc
daa
les
mov
cwtl
jp
inc
mov
inc
nop
push
sub
js
push
call
aad
ret
sbb
xchg
lahf
aad
pop
cmp
pop
cs
insl
mov
jo
jp
outsb
mov
in
push
cmp
cmpsb
pop
push
add
mov
push
test
lods
dec
clc
inc
outsl
inc
adc
in
push
lahf
notb
js
fwait
add
mov
adc
fnsave
sbb
xlat
daa
jno
xchg
out
adcb
ljmp
fwait
nop
mov
and
and
icebp
scas
pop
add
mov
lret
cwtl
test
pop
test
leave
push
push
xorl
sbb
movsl
enter
lods
addr16
mov
sbb
out
xor
sub
fcmovnb
jo
leave
lret
adc
adc
jge
pop
push
sub
inc
or
repz
icebp
push
adc
or
mov
mov
imul
in
push
jecxz
movsl
mov
mov
dec
pop
or
inc
cld
jl
push
sbb
add
and
push
push
push
scas
out
icebp
and
mov
fprem
xor
xor
mov
aaa
aam
sbb
xor
push
loopne
iret
pop
mov
xchg
cmp
mov
mov
dec
dec
enter
push
or
push
nop
lahf
xor
gs
sub
int3
mov
movsb
sbb
pop
sbb
cmpsb
sub
mov
out
mov
shl
rorb
or
in
testl
ja
add
repz
pop
adc
dec
in
jo
popf
fiaddl
movsb
jp
ljmp
push
lahf
push
cmp
test
push
xor
out
daa
rolb
outsl
hlt
jle
push
jmp
dec
nop
insl
popf
sti
inc
sbb
aaa
jne
push
mov
mov
test
aaa
mov
inc
pop
mov
jno
hlt
les
push
jbe
and
xchg
cwtl
and
cmpsl
dec
xor
mov
lea
sbb
test
arpl
clc
ljmp
mov
dec
stos
idivl
jge
mov
push
xor
pop
out
mov
push
pop
jecxz
and
push
inc
sbb
sbb
mov
fwait
xchg
jle
push
adc
mov
push
xor
jecxz
pop
fisubrs
enter
xor
dec
push
pop
shl
sub
and
js
sub
sahf
movsl
repz
push
sub
ss
loop
mov
cmpsl
loope
gs
sub
out
inc
daa
push
sub
adc
push
lret
inc
popa
fs
jns
lds
mov
pop
movsl
push
lds
dec
adc
insb
fmul
es
sti
mulb
mov
mov
mov
arpl
pop
add
repz
mov
push
sbb
sub
cmp
repz
jg
inc
test
in
popa
xor
cmpsb
mov
mov
and
into
mov
adc
in
or
sbb
sahf
lret
pop
insl
fadd
cmc
stos
addr16
int
mov
adc
stos
aam
jbe
in
mov
loope
or
xor
or
mov
call
into
iret
xor
enter
lods
ja
aaa
adcb
cmp
stos
out
mov
sub
push
sbb
xchg
dec
jbe
das
add
xor
sub
test
not
enter
jnp
mov
cmc
faddp
ds
add
inc
mov
into
and
loop
outsb
sbb
pop
sbb
jp
sub
and
push
push
jns
xor
dec
iret
gs
fimuls
ljmp
lods
dec
cmp
std
jnp
lea
pop
push
mov
mov
xor
mov
adc
cld
fldt
sahf
or
xor
sbb
adc
addr16
push
fdivrs
xor
and
xchg
pop
xchg
cmp
push
ja
loopne
add
data16
rclb
jecxz
adc
inc
cmp
sbb
arpl
rorb
fidivrl
lcall
stos
push
scas
das
mov
jp
rcrl
mov
fnstcw
cmpsb
pop
mov
cmp
loopne
fcomp
out
ja
shll
scas
sbb
mov
fcoml
mov
movsb
inc
push
ds
push
das
lret
sbb
ret
sub
aam
xchg
les
clc
das
ret
and
pop
adc
and
addl
mov
test
sbb
fcoml
xchg
pop
lods
adc
mov
test
adc
pop
push
mov
rol
fcomps
std
mov
iret
cwtl
add
xchg
dec
pop
inc
or
out
hlt
int
xchg
sub
cli
or
cmpsl
cmpsb
and
sti
xor
mov
sub
out
fidivl
mov
in
out
push
mov
loope
mov
repnz
gs
movsl
imul
dec
dec
jb
rclb
push
cmp
xchg
lcallw
test
lret
ret
mov
push
pop
and
dec
dec
cmpsl
leave
push
xlat
xlat
sti
pop
sbb
cmp
xchg
xchg
mov
add
pop
and
mov
cs
js
enter
or
test
out
mov
mov
std
lret
or
mov
and
nop
mov
out
das
lock
testl
dec
add
jo
int3
mov
jno
adc
add
pop
das
loop
stc
lahf
jo
lods
ss
mov
jns
jne
daa
cld
xchg
in
outsb
xlat
jae
sbb
or
mov
sti
in
pop
inc
sub
or
adc
push
ds
jmp
add
jmp
fildl
push
mov
sbb
sub
or
push
pop
push
scas
int
fildll
sub
shrl
push
push
jmp
or
jbe
mov
or
add
mov
adc
xlat
xor
sub
idivb
pop
shll
movsb
outsb
loopne
cmp
jecxz
mov
push
pop
mov
int
or
ds
stos
sbb
scas
and
sub
adc
dec
and
and
in
push
sub
lea
test
jo
lods
add
pop
mov
sub
inc
pop
lret
pop
int
mov
push
stos
mov
sbbl
xchg
jb
mov
or
mov
cmp
xor
or
in
mov
lcall
lock
cmp
push
push
in
int3
leave
outsb
mov
vcvtps2ph
pop
sbb
push
sbb
push
loop
test
sbb
push
sbbb
jno
out
into
mov
mov
mov
pushf
push
aaa
aam
inc
bound
lock
sbb
and
pop
xchg
add
lods
push
and
lock
and
ja
mov
xchg
xlat
mov
loope
jle
mov
mov
jb
lcall
jnp
int3
add
out
mov
jae
iret
nop
or
inc
xor
xor
lods
xchg
jno
pop
stos
jnp
jnp
sarl
mov
bnd
xchg
cmpsb
scas
lea
imul
adc
aad
add
xor
in
jbe
in
mov
pop
xchg
xlat
xorb
or
and
lods
leave
sub
jb
dec
repz
xor
mov
cmpl
sbb
adc
fimuls
jno
cld
fs
dec
out
xchg
push
shl
jle
stos
adc
sbb
sbb
es
push
and
andb
mov
push
rorb
mov
sti
push
add
movsl
cmp
mov
pop
icebp
ret
pop
movsb
hlt
rcrl
push
std
out
mov
test
push
fimuls
mov
xor
sub
sahf
sub
jl
pop
mov
out
and
adc
and
fiadds
pop
movlps
stos
inc
arpl
loope
mov
mov
push
push
lcall
mov
sub
dec
cmp
sbb
aaa
fisubrl
ficoms
jo,pt
std
pop
sbb
mov
and
mov
loop
xchg
cmp
mov
mov
mov
mov
lea
and
push
pop
dec
sbb
and
imul
push
outsl
jne
jge
out
pop
addr16
aam
iret
lds
mov
stc
rep
in
inc
adc
mov
insb
push
in
jg
sbb
in
lcall
and
jl
or
fnsave
mov
push
mov
add
mov
sub
loop
sub
cltd
jo
mov
insl
mov
sub
adc
int3
fisubrs
jns
push
ljmp
dec
enter
mov
lret
sbb
jmp
mov
movsl
inc
scas
pusha
pop
fdivl
xchg
or
fidivrs
stc
insb
sub
dec
call
cmp
fcmovne
imul
out
movsl
xchg
loopne,pt
xor
pop
xor
addl
cmp
frstor
outsl
push
cs
push
jno
outsb
sub
pop
in
loope
cmp
insl
leave
mov
ss
stos
jb
fimuls
or
lcall
cs
int
jle
test
and
xor
aam
adc
adc
pop
pop
stc
ja
cmp
lods
out
loope
inc
lret
mov
sub
das
pop
jns
push
lret
lcall
cmpsb
xor
adc
pop
dec
rol
outsl
mov
inc
xorl
dec
xchg
push
insl
sbb
mov
shll
shll
subb
out
arpl
dec
in
add
mov
cmp
fstpt
xchg
pop
jge
sbb
xchg
push
out
and
and
lret
loope
xchg
xchg
cmp
mov
out
insl
fstp
sub
xor
cmpsb
jl
shl
fxch
adc
stc
cmp
iret
adc
sub
dec
mov
cmp
aam
xor
scas
aad
or
xchg
pop
adc
les
data16
xlat
add
mov
jb
sbb
scas
cmc
stc
setg
aaa
dec
inc
and
xor
jnp
mov
cld
pop
inc
dec
cltd
ror
xor
push
mov
jne
sub
pop
jg
pop
mov
xlat
and
popa
pop
inc
test
cmc
incl
mov
mov
test
jnp
mov
cmp
adc
jb
or
shlb
pusha
insl
jle
sub
out
sti
test
or
adc
sub
jge
aad
loop
lret
xchg
xor
adc
rcl
in
cwtl
push
and
jmp
pop
sti
outsb
jg
mov
push
imulb
dec
mov
loopnew
sub
icebp
sbb
jne
dec
mov
mov
testl
inc
rcll
jns
rorb
cwtl
scas
mov
addr16
fstpt
cmc
shll
mov
psubw
or
ret
in
inc
mov
ss
les
cwtl
insl
leave
sti
mov
ds
notl
jbe
or
in
jae
shr
into
mov
mov
adc
test
hlt
pop
jo
jnp
jg
sub
ja
ljmp
rol
cli
ss
sbb
adc
popf
sti
add
push
ss
sar
into
mov
lods
cmp
arpl
rcr
jmp
inc
mov
or
dec
xchg
mov
cli
mov
pop
lcall
push
lods
mov
arpl
dec
pop
mov
fs
cmp
push
mov
sub
in
shlb
or
addr16
ds
in
push
and
lahf
add
adc
into
xor
sub
loope
cs
jl
into
fwait
pop
and
sbb
sbb
popf
adc
lcall
stc
mov
xchg
mov
stos
cmp
adc
mov
lahf
xchg
test
and
and
xlat
aad
mov
adc
fildll
sub
enter
push
out
mov
or
mov
dec
sbb
mov
add
orl
movsb
pop
rorl
fdivrs
sarb
cwtl
pop
scas
jbe
and
pop
aam
daa
push
pusha
sub
cmpl
and
roll
mov
xor
xchg
sub
leave
sub
je
mov
xchg
sbb
popf
xor
xor
sbb
push
jmp
sub
addl
in
mov
scas
pop
fadds
jbe
std
rcrb
nop
sbb
lea
xchg
out
cs
dec
pop
inc
pop
test
mov
sbb
jbe
negb
int3
bound
fwait
out
mov
adc
popf
movsl
fistpll
je
es
dec
push
les
adc
imul
popa
arpl
dec
punpckhbw
and
sub
inc
jo
sbb
adc
cltd
pop
pop
test
or
or
sahf
mov
pop
cld
mov
test
loope
rcll
arpl
loopne
lds
or
xchg
nop
mov
rclb
gs
rcr
xchg
pop
pop
pop
sarl
xor
mov
xchg
insl
mov
aaa
jp
mov
adc
mov
pop
rcrl
test
jle
push
and
push
test
pop
mov
mov
sbb
insl
cmc
push
outsb
push
or
jge
out
inc
movsl
jmp
sub
pop
or
sti
push
les
pop
aas
stc
xlat
mov
iret
dec
mov
mov
inc
bound
insb
ss
pushf
adc
jo
and
ljmp
xor
push
jecxz
in
dec
inc
xor
jb
dec
inc
jo
in
dec
hlt
xchg
dec
xchg
outsb
movsl
xchg
mov
stos
xor
sbb
xchg
jae
fistl
enter
pop
inc
daa
test
cmp
mov
sub
adc
ss
push
enter
dec
xor
sbb
les
shlb
daa
leave
std
mov
jbe
repz
push
aad
sub
fs
mov
jns
js
cwtl
mov
gs
test
sbb
push
xchg
jae
stos
out
xor
pop
cmp
jecxz
adc
movl
repnz
adc
scas
aaa
xchg
cmpsb
sbb
imul
cli
mov
xor
out
cmc
cmpsb
mov
xchg
mov
pop
pop
js
fwait
push
jge
add
stos
test
mov
sbb
mov
or
mov
enter
pushf
cmp
iret
cli
lock
pushf
lods
jmp
pminub
push
cltd
test
icebp
popf
loopne
popf
mov
xor
fcoms
jp
cwtl
or
xor
inc
add
jle
fdivp
enter
clc
sbb
decl
xlat
js
inc
mov
push
dec
cmp
push
xor
ljmp
popa
cmpsl
mov
inc
mov
xchg
cmp
xor
mov
in
sbb
push
inc
inc
mov
add
mov
mull
inc
jae
cltd
mov
ret
sbb
subl
add
cs
cltd
std
int3
outsb
add
pop
sbb
mov
or
cmpb
test
bound
or
mov
rcrb
jp
push
sub
cld
push
test
add
stos
dec
sub
jnp
add
mov
sub
insb
xchg
or
or
into
inc
jp
int3
pop
mov
aad
push
mov
out
push
mov
pop
lcall
pushf
stos
cmp
sub
adc
xchg
out
mov
jp
dec
insl
inc
frstor
lcall
xchg
push
cmc
pop
cli
push
aaa
int3
or
mov
inc
mov
xor
lea
pop
rcrb
mov
adc
mov
xchg
stos
mov
mov
test
lahf
aam
pop
pop
xor
ljmp
rcr
mov
les
lcall
fldcw
lcall
in
pushf
inc
popa
push
call
jp
jge
xor
ds
jb
mov
push
push
lock
mov
mov
ljmp
push
das
push
mov
fstl
xlat
adcl
adcl
xchg
mov
out
shlb
in
loop
cmc
jnp
xchg
arpl
adc
inc
dec
jno
dec
push
loope
adc
repnz
adc
jbe
cld
les
inc
mov
fadds
jne
rclb
pop
test
sbb
sub
ficomps
push
sub
push
mov
fldcw
repnz
inc
sub
test
adc
xchg
sbb
rcl
sub
imul
ffree
out
cmc
sbb
xchg
push
add
adc
add
fldl
jmp
fstpt
or
dec
mov
inc
xchg
mov
ficoml
test
movzwl
mov
int3
jecxz
sub
add
rclb
inc
or
mov
out
fcomi
xchg
ja
cmp
sub
and
jo
add
bound
inc
pop
mov
lahf
test
shll
mov
adc
cmpb
cmp
aam
rcl
lds
mov
or
xchg
mov
outsb
sub
add
bnd
ret
push
fmuls
loope
jmp
cmc
or
mov
jp
les
sub
push
fsubp
scas
jns
pop
dec
movsb
movsb
das
cmp
in
mov
cmp
mov
in
xor
les
pop
andl
and
roll
ja
sbb
pusha
or
cli
fwait
sub
inc
hlt
call
jmp
xor
push
cmp
mov
xchg
inc
add
std
mov
fcomi
movsl
mov
outsl
jp
test
inc
push
mov
jg
dec
in
js
push
add
sbb
and
stos
xlat
bound
lock
jle
scas
cwtl
ret
xchg
mov
pop
imul
cmp
mov
lcall
pop
loop
jbe
hlt
mov
insb
sahf
jne
sub
inc
decb
pusha
push
adc
sar
daa
sub
adc
mov
js
enter
mov
pop
cmp
jae
jae
mov
pop
test
dec
jbe
dec
xchg
addl
scas
cmpsb
pop
xchg
and
or
out
roll
insl
test
add
xchg
pop
jmp
cld
enter
sbb
mov
xorl
or
nop
gs
cli
pop
jmp
std
push
or
or
aad
into
mov
lods
xor
in
cmp
test
insl
js
jb
mov
dec
lret
inc
push
mov
push
jge
mov
pop
jge
cmc
sahf
xchg
in
dec
mulb
mov
test
mov
bound
jp
pop
mov
jp
lahf
or
repz
dec
imul
xchg
adc
pushf
pusha
cmp
faddl
push
jae
in
push
jns
push
lret
sub
lock
sub
jle
jecxz
hlt
or
icebp
shlb
mov
xchg
clc
dec
xlat
push
add
xor
out
mov
into
jno
loopne
push
gs
pop
faddl
out
xchg
cmp
mov
pop
bswap
outsl
imul
xchg
call
fcompl
test
ja
adc
push
add
das
jne
testl
rsm
insb
std
jbe
mov
mov
push
fdivl
mov
pop
je
mov
call
jp
pop
bound
adc
mov
out
fbstp
data16
fwait
push
scas
les
push
ja
ficoms
mov
fdivl
mov
push
int3
movsb
out
mov
inc
mov
cld
or
push
std
pop
shrl
jb
arpl
mov
push
mov
dec
adc
pop
ljmp
xchg
pop
loope
shlb
fsubl
mov
cmpl
xor
jg
jl
sbb
mov
mov
inc
and
mov
rolb
repz
bound
ret
adc
divl
dec
test
inc
mov
inc
xor
or
push
fucompp
mov
das
leave
gs
outsb
mov
addr16
aas
adc
xchg
andl
sub
xchg
addr16
rorb
sahf
push
aad
dec
loope
mov
sub
sbb
out
mov
jo
loopne
loop
inc
push
mov
dec
mov
dec
push
push
mov
dec
sti
and
aas
sub
lds
adc
lret
orb
xchg
xor
loop
ret
jecxz
cs
outsw
xchg
mov
test
or
sbb
lock
sbb
hlt
arpl
repz
fstl
mov
push
jno
xor
mov
pop
pop
daa
mov
cmc
inc
sbb
inc
dec
aad
cmp
or
sub
rclb
dec
jo
sub
aaa
inc
mov
popa
das
lea
pushf
out
push
mov
arpl
push
test
mov
decb
mov
rcll
sub
add
loopne
mov
aam
and
rcrb
movsb
cs
pop
ret
lods
out
jae
mov
lahf
cmc
pop
mov
imul
sbb
addr16
testb
outsl
es
push
hlt
dec
bound
ljmp
fidivs
movsl
loop
cmp
and
subb
test
lods
sbbl
dec
into
or
mov
test
out
addr16
mov
fldenv
mov
pop
sub
jo
xor
cmp
mov
icebp
jnp
and
and
call
in
inc
sbb
mov
and
or
mov
orl
dec
cmpl
xchg
ja
les
push
cmp
js
or
cpuid
lcall
js
jg
xor
inc
adc
xchg
movsb
sbb
lock
xchg
icebp
or
movsl
xchg
test
and
inc
fbld
out
dec
sub
add
jg
test
test
dec
fidivl
out
and
out
cmp
sub
insl
xchg
push
inc
jbe
imul
int3
or
xchg
push
stos
imul
xchg
mov
jne
ret
loopne
leave
outsb
test
xchg
lods
xchg
jl
mov
pop
pop
ror
testl
int
cmp
cmp
ss
cli
scas
sbb
repnz
jbe
pop
mov
inc
push
or
sbb
xor
insl
test
pop
mov
mov
sahf
hlt
xchg
scas
add
aad
cld
and
cmpsb
push
add
mov
dec
fidivrl
repz
sbb
cmc
sti
pop
clc
mov
out
fisubrl
pop
movsb
push
or
xor
daa
xor
add
mov
sahf
push
add
mov
cs
mov
lods
inc
loop
ljmp
mov
scas
aad
dec
inc
fcmovnbe
leave
rcrb
lahf
fmuls
into
int3
mov
dec
divl
leave
out
xchg
dec
imul
sahf
fwait
aad
aas
push
mov
jns
push
sub
pop
sbb
jle
xor
orl
push
js
adc
mov
into
lret
jbe
ficompl
or
and
cli
sar
dec
cmc
push
xlat
scas
ret
push
pop
pushf
xchg
or
fnsave
ret
lods
imul
lret
push
ss
stos
test
xor
and
in
inc
rcll
fbstp
pushf
pop
ret
call
pushf
in
push
xchg
out
mov
push
outsl
add
push
sub
pop
mov
nop
repnz
jp
xchg
pop
adc
xor
sbb
rcl
jmp
dec
jo
jl
popf
sti
popa
mov
mov
clc
sbb
mov
mov
and
dec
enter
adc
jge
inc
jmp
test
jg
enter
pop
inc
add
xlat
cmp
mov
dec
add
dec
fimull
mov
movsl
lods
ljmp
and
stos
fmulp
fdivs
adc
insl
rorb
add
jecxz
push
popa
nop
fisubl
cmp
in
cli
sbb
push
sub
rcll
aad
inc
insb
aam
fldcw
popf
cmp
cmp
jecxz
adcb
decl
addr16
and
push
sti
popf
push
je
ffree
aas
imul
push
sahf
xor
cmp
jecxz
mov
mov
aas
xlat
lahf
call
shlb
sbb
inc
jmp
in
and
jg
test
fcompl
cmpsb
mov
adc
je
xchg
mov
push
mov
push
je
ljmp
fs
or
jmp
iret
cmpl
pop
add
jecxz
push
cltd
push
dec
decl
and
pushf
sti
xor
inc
mov
jge
push
mov
movsl
xchg
stos
pusha
adc
inc
mov
fidivrs
js
movb
mov
test
dec
push
aaa
jb
mov
dec
cmpsl
sub
mov
cmpl
mov
rol
mov
test
pop
sti
cli
shl
loope
outsl
inc
or
fwait
xlat
pusha
daa
xchg
in
mov
movsb
sub
fbstp
adc
mov
fwait
subb
sbb
add
sbb
jnp
dec
push
mov
cmpsb
mov
in
lods
inc
cmp
inc
notl
xor
cmpsl
pop
data16
xchg
pop
stos
sbb
in
mov
xchg
pop
jne
das
xchg
inc
pop
xor
push
andb
cmc
into
das
int3
stos
cmc
or
addr16
dec
mov
cmp
popf
imul
dec
pop
stos
ljmp
mov
cmp
js
mov
sbb
push
sub
lret
aam
stos
ljmp
ds
iretw
ja
jp
xlat
xchg
mov
pop
cmp
push
adc
adc
iret
pushl
in
sahf
daa
ds
and
lock
clc
mov
push
dec
adc
dec
xchg
mov
in
xorl
arpl
sub
adc
fisubl
dec
repnz
lret
stos
xchg
insb
cs
imul
pop
les
xchg
mov
add
lret
and
pop
ss
jno
or
push
mov
in
sub
fs
jg
sub
sub
dec
or
sahf
mov
cltd
cwtl
ds
lds
out
or
mov
push
scas
xor
and
orl
mov
outsl
int3
inc
test
sub
jo
push
adc
popa
xchg
out
and
sub
jmp
cwtl
push
data16
sti
sbb
hlt
je
pushl
pop
fildl
jnp
fwait
pop
cli
stos
js
xlat
ds
repnz
rcll
mov
jnp
jle
dec
gs
lret
sti
adc
pop
inc
inc
sti
or
xchg
fcompp
mov
out
pop
lea
cwtl
pop
sbb
out
and
stc
dec
mov
and
enter
sub
pushf
ja
rorw
imul
inc
je
lock
add
rcr
cmp
jg
fdivl
mov
sbbb
xlat
cwtl
jo
movsb
mov
xor
imul
cmp
dec
ja
cmp
aaa
dec
adc
mov
std
je
cwtl
xchg
icebp
mov
cmp
jge
mov
and
inc
mov
data16
shll
mov
xor
jno
test
and
mov
push
sub
mov
push
xor
adc
adc
pop
pop
pop
pop
cwtl
imul
pop
movsb
test
loop
lds
jbe
pop
jle
in
enter
leave
mov
div
dec
add
outsb
and
and
mov
adc
cmc
inc
lahf
add
push
pop
push
cltd
inc
and
cmp
push
loope
iret
cmpsl
adc
pop
adc
pop
out
fwait
mov
xchg
iret
arpl
push
jmp
clc
addb
xchg
pop
movsb
callw
decl
movsl
cmp
lret
add
fwait
dec
inc
sahf
mov
pop
std
jo
aam
fsts
fcoml
jae
cmp
je
clc
mov
arpl
bound
cmpsb
xchg
adc
ja
cmpsb
dec
xor
sub
push
xchg
inc
notl
cld
lea
shl
subl
mov
icebp
ljmp
xor
ss
pop
dec
push
out
aad
repnz
push
out
pop
push
test
push
loope
pushf
js
lds
mov
push
std
lods
popa
xlat
je
cmp
or
arpl
push
fmulp
add
xlat
enter
inc
sahf
pop
push
ljmp
mov
aaa
imul
loope
mov
int
jg
pop
xor
movsl
mov
lods
sub
loopne
jns
movsl
popf
add
dec
xor
sbb
and
cmp
outsb
ss
fistl
loope
mov
daa
les
push
xlat
sub
xchg
add
mov
call
aaa
xlat
mov
mov
push
stc
daa
cmp
arpl
or
mov
inc
aaa
mov
incb
adc
rcrl
in
adcl
out
lcall
lods
movsl
mov
clc
sbb
inc
nop
iret
xchg
mov
movsb
in
jle
jmp
or
jo
mov
cmp
outsb
xor
fiaddl
out
rcrb
lds
sbb
inc
aad
add
xchg
shlb
jb
ja
pushf
cmc
xchg
leave
fbstp
outsb
pusha
lcall
repnz
cmpsl
insb
jbe
adc
lret
dec
mov
ss
or
aad
mov
clc
ds
adc
pop
xlat
ss
cmpsb
and
push
ret
pop
lret
cld
mov
in
jns
je
add
mov
xor
adc
add
adc
sbb
and
jno
mov
and
or
aaa
jge
lahf
ret
xchg
xor
scas
mov
aas
sahf
js
or
test
sahf
test
rcrb
outsb
xchg
repz
iret
loop
movsb
ljmp
idivl
pop
fwait
int
stos
xorb
mull
cli
ret
sbb
xchg
test
sub
call
pusha
pop
insb
sub
test
adcb
inc
mov
mov
xor
cli
pusha
dec
lret
mov
divl
adc
into
pop
sub
pop
or
fcomps
outsl
adc
popa
pop
gs
call
es
cmp
ja
rolb
inc
xchg
push
clc
sbb
fwait
scas
inc
mov
push
xchg
sub
out
clc
push
inc
test
add
cmp
pop
add
mov
mov
mov
das
aam
inc
jecxz
inc
pcmpgtd
pop
int
imul
pushf
sub
sbb
adc
mov
adc
fcmovbe
popf
outsl
sbb
ret
xchg
adc
xchg
sbb
pop
int
inc
stc
int3
mov
mov
hlt
pop
outsl
mov
push
sbb
jl
sarl
xor
incb
push
or
lret
in
xchg
xchg
xchg
sbb
sub
dec
push
push
aad
test
and
rorl
insb
pop
lcall
addb
or
xchg
xlat
les
sub
dec
je
push
mov
inc
nop
icebp
dec
pop
jns
ret
lcall
leave
sbb
pop
jbe
xor
sahf
adc
ss
enter
and
mov
or
inc
rcr
scas
adc
xchg
lock
stos
mov
push
xor
cwtl
stos
nop
and
cli
sub
dec
jnp
pop
ds
js
dec
js
sbbb
pop
out
inc
mov
test
fbld
push
hlt
mov
dec
push
lret
aad
mulb
mov
je
inc
push
imul
int3
testl
mov
fwait
hlt
cli
fwait
cwtl
xor
or
dec
in
sbb
dec
addl
pop
or
out
sbb
imul
pop
mov
in
mulb
cmpsl
js
leave
int
std
mov
sub
in
cs
jnp
lods
mov
jmp
insb
cmp
aam
mov
mov
pop
mov
inc
and
cmp
or
xor
and
xor
lea
adc
fiaddl
scas
pop
xlat
stos
mov
mov
dec
imul
clc
jecxz
mov
mov
push
cmp
cmpsb
mov
jne
rorb
clc
mov
jne
in
pop
movsb
jo
push
rcrb
sub
imul
push
adc
xor
sbb
jbe
jmp
dec
xchg
pop
adc
mov
mov
imul
in
jae
or
xor
xor
jg
push
mov
fnstenv
fwait
cmpsl
jg
fists
mov
dec
dec
pop
pop
jo
cld
movsb
sahf
adc
repz
dec
xorb
mov
aas
lods
in
dec
pop
fcomip
xchg
jle
scas
sbb
push
aam
das
sub
mov
test
movsb
leave
ja
and
les
arpl
cmp
push
shll
mov
jb
jnp
sub
clc
mov
call
add
pop
cmpsl
mov
cmp
out
sub
xchg
rolb
in
mov
sahf
fnstsw
leave
dec
lds
ret
jae
push
mov
clc
xchg
dec
outsb
lret
mov
add
lods
xor
ficompl
jo
imul
push
adc
push
push
inc
loop
mov
cltd
mov
loopne
cmp
pop
xchg
jmp
icebp
call
mov
pop
mov
mov
add
and
fstpt
popa
cltd
inc
xor
or
test
cmpsb
mov
cmp
mov
je
dec
std
insl
std
call
sub
test
shll
cmp
mov
sbb
mov
scas
adc
rol
xor
mov
out
cwtl
lahf
and
cld
push
xchg
mov
lds
mov
aad
or
jb
push
push
negl
std
lods
sbb
movsl
lret
mov
push
or
lea
popa
mov
repz
aam
xor
sub
mov
jl
fldt
xchg
call
add
mov
cwtl
and
xor
push
push
imul
xor
cld
cld
fldenv
sub
fs
sbb
bound
sub
stos
popa
push
test
int3
out
data16
xor
xchg
idivl
xchg
and
out
cltd
mov
sub
mov
xchg
imulb
or
subb
jp
xchg
jg
pop
add
pop
lea
pusha
xor
and
jl
popf
negl
inc
mov
orb
addr16
and
adc
imull
dec
add
inc
and
int
jecxz
fs
roll
push
aaa
sahf
data16
jmp
cmp
cmp
imul
adc
out
or
out
rorb
xchg
jbe
sub
jns
loopne
es
push
scas
imul
ret
mov
add
iret
mov
jecxz
mov
sub
mov
les
mov
xor
pop
jb
sbb
mov
mov
stos
mov
and
test
adc
icebp
divb
testb
inc
ficoms
ret
test
cmp
pop
bound
into
test
les
dec
mov
xor
rcrl
lcall
jo
mov
mov
stc
sbb
xchg
frstor
daa
ret
lret
and
jo
icebp
ja
pop
sbb
int
test
mov
sbb
xor
push
mov
adc
xor
loope
int3
imul
divb
xlat
push
fidivrl
or
xchg
push
in
dec
das
pop
pop
into
stos
leave
pop
jo
lret
add
stos
cmp
pop
adc
jle
cmp
ds
sahf
jg
stos
cmp
out
fld
mov
cmp
or
bound
fsubr
out
repz
enter
das
sbb
shll
push
sbb
adc
jg
cmp
in
lret
mov
inc
dec
dec
adc
xchg
push
faddp
outsb
into
test
stc
mov
inc
aad
cmpl
sub
xchg
push
stos
pop
sub
push
aad
ret
push
cwtl
aam
ds
cmp
call
push
pushf
test
dec
adc
sub
cmp
insb
lahf
movsl
inc
frstor
pop
sub
and
movsl
test
shl
aaa
cmp
xor
jecxz
scas
jne
pop
insb
add
xchg
xchg
arpl
test
add
sub
mov
adc
mov
dec
xchg
movlps
subl
test
dec
bound
push
add
mov
loope
nop
loop
insb
test
and
xchg
push
outsl
push
or
xchg
dec
push
loop
xor
adcb
cs
int3
sbb
inc
mov
jbe
loop
and
into
pop
dec
push
mov
or
mov
loop
xchg
pop
imul
dec
xchg
sub
fldenv
in
gs
xor
sahf
ss
fadds
sub
pushf
sub
cmp
push
cs
adc
iret
lods
leave
xchg
mov
push
xchg
std
and
sub
enter
outsl
push
xor
inc
lret
xchg
jne
lret
xor
jg
lea
cld
sbb
sub
push
mov
ss
and
xchg
xchg
and
cmp
jo
pop
sub
and
cmpsl
mov
pop
aam
jp
xchg
inc
ds
mov
insb
push
dec
dec
repnz
lcall
xor
dec
mov
addb
cmp
das
pop
les
adc
std
push
sarl
rolb
ljmp
xor
push
in
xor
rorl
cmp
dec
stos
sub
add
push
fxch
push
ret
testl
mov
inc
or
nop
push
lock
sti
pop
mov
xchg
push
mov
cmp
lret
rcrb
inc
xchg
outsb
jnp
pop
outsl
xor
test
add
mov
lods
sub
mov
lds
sub
repz
cmc
fldt
inc
push
pop
loopne
sub
fsub
loopne
aas
mov
das
arpl
stos
int
lea
fldt
xchg
and
sbb
in
imull
pop
pop
notb
shlb
jle
in
or
pop
or
shlb
rcrl
popf
mov
ror
lock
dec
je
dec
push
add
pop
test
arpl
push
dec
shll
pop
insl
inc
data16
int
dec
adc
jbe
daa
adc
les
mov
add
hlt
cltd
lret
sub
ret
testl
mov
inc
filds
sbb
fiadds
jmp
xorl
ffreep
movsb
mov
sbb
dec
inc
push
ljmp
outsl
enter
mov
and
enter
das
push
ret
mov
icebp
lret
je
dec
fsubp
fwait
lods
rcll
jnp
mov
dec
lock
adcl
enter
mov
outsb
pop
imul
repz
mov
inc
arpl
dec
jp
icebp
sbb
fistl
push
in
pop
sub
icebp
push
movsb
lods
add
pop
repz
fbld
push
fisubs
lock
jle
adc
lret
subl
cmp
cmp
jmp
insb
insb
loopne
or
cmp
scas
test
daa
popa
jecxz
adc
push
out
sub
cld
and
cmpb
loope
adc
lods
xor
loopne
adc
jmp
xor
cmp
shlb
cmp
inc
icebp
popa
cmp
cmp
js
mov
xchg
sbb
and
or
cmp
movsb
sbb
dec
icebp
adc
or
dec
cwtl
out
movl
or
scas
cmp
stc
mov
adcb
mov
bound
loopne
sub
pop
outsb
inc
sub
mov
ret
lret
xchg
xor
sub
mov
call
pop
xor
adc
ret
mov
jmp
xor
jo
out
inc
xor
ss
lods
andl
mov
mov
sahf
jl
loop
scas
dec
push
dec
jp
or
repz
incl
push
sbbb
mov
mov
aaa
jns
out
dec
add
pop
and
sti
push
mov
xor
pop
faddl
cmpsb
fbld
stos
pushf
adc
sbb
sub
xchg
jge
cwtl
dec
ss
jo
mov
es
scas
push
arpl
setbe
xchg
cld
xchg
nop
es
mov
frstor
imul
pusha
pop
push
stos
lcall
test
sub
xchg
pop
psubsw
or
call
sub
lock
jle
subb
push
pop
cmp
ljmp
test
hlt
cwtl
pop
cld
ret
add
jns
fnstcw
int3
das
xor
gs
test
addr16
cltd
shlb
notb
js
inc
sub
mov
sbb
les
test
dec
call
in
es
pop
mov
sarl
mov
std
int3
idivb
sbb
lcall
jno
cmc
xor
scas
pop
arpl
mov
gs
test
xorb
sbb
in
pop
add
cmp
pop
pop
dec
cmc
aas
imul
lahf
aam
inc
xor
mov
mov
in
mov
pushf
ss
inc
sarl
bound
stos
shrl
jbe
imul
leave
dec
mov
stc
sbb
and
mov
addr16
addb
test
sbb
mov
cmp
sarb
das
in
cli
adc
mull
test
dec
hlt
test
lret
jbe
xchg
shlb
xlat
xchg
cld
xor
mov
pop
sbb
jnp
int
sub
lahf
xchg
sbb
cli
aad
dec
out
or
popa
xor
enter
insl
popa
add
sub
sub
into
push
push
stos
icebp
clc
addr16
lods
xchg
addb
jno
bound
ret
fldcw
out
mov
jg
xor
mov
enter
jns
cmp
push
xchg
mov
or
sbbb
hlt
jg
push
test
sar
add
in
dec
pop
cmpsl
push
xor
in
xchg
sub
shll
lcall
je
aaa
cmc
shr
sti
xor
loopne
aam
cmpsl
sub
sbb
xor
subb
in
cmp
jbe
xchg
push
dec
mov
iret
push
dec
sub
and
mov
roll
movsb
icebp
in
pusha
jle
or
movsb
mov
cmc
out
loop
andb
loopne
jbe
cmp
xchg
lret
aad
sti
das
ret
cwtl
add
push
stc
icebp
movsb
roll
sahf
aas
adc
movsb
gs
dec
sub
xchg
pop
sub
or
mov
dec
dec
adc
std
popf
loope
mov
stc
inc
cmpsb
js
jno
and
add
lret
adc
fstenv
cmp
xchg
fisttps
fadd
push
bound
iret
movsb
fnstsw
cmp
xor
xchg
lret
aaa
jecxz
push
push
mov
xlat
push
ret
bound
inc
xchg
sbbl
add
repnz
jp
jnp
mov
mov
xchg
loop
jg
cmpsl
and
lock
inc
clc
je
stc
pop
and
icebp
call
mov
or
cs
push
mov
adc
icebp
shlb
pop
aam
sti
lock
xchg
sbb
outsb
jne
mov
dec
mov
pop
cs
xchg
loopne
jp
cltd
mov
sub
push
insl
sub
push
pop
inc
lock
fdivrl
xchg
jle
jnp
xchg
or
pop
cld
cltd
push
mov
pop
mov
insl
xlat
pop
lret
jmp
push
dec
pop
sbb
sahf
arpl
cmp
pop
mov
cmpsb
outsb
cwtl
dec
out
mov
cltd
xchg
or
mov
cli
lods
data16
adc
cmp
test
sbb
pop
data16
bound
fdivrl
xor
popf
dec
fsubr
sahf
iret
ret
fwait
inc
pop
je
jp
lahf
aam
cvtdq2ps
pop
xlat
scas
push
cmp
push
or
jge
pusha
mov
cmp
sub
cwtl
push
outsl
push
sti
mov
xor
fsub
int3
jp
in
in
mov
repnz
ret
cmpsl
push
push
inc
jle
cld
xchg
add
fcoms
stos
xlat
popf
shlb
mov
dec
fscale
aad
mov
inc
xchg
add
test
enter
push
ret
rol
inc
adc
dec
pop
test
lahf
testl
out
add
jae
stos
xchg
mov
inc
aam
call
lea
in
ljmp
sub
orl
fdivrs
push
sub
push
xlat
pop
iret
push
sbb
xlat
ds
xchg
aam
or
xor
stc
ret
inc
test
fcmovbe
shll
sbb
inc
sub
dec
push
pop
scas
cltd
loop
dec
add
fnsave
xchg
pop
in
lret
adc
sbbb
adc
stos
cmp
or
leave
notb
cmp
test
sar
mov
fisttpl
jmp
jp
js
xchg
fistpll
push
push
jbe
xchg
push
dec
jbe
lods
adc
movsl
pop
cwtl
add
scas
mov
out
push
cmc
cmp
fcoms
cltd
jmp
popa
xchg
and
ret
nop
xchg
xchg
mov
cmp
in
lcall
mov
mov
dec
in
sbb
adc
lods
scas
jge
pushf
xor
mov
sarl
cld
cld
fisubrl
sbb
xchg
or
jmp
stc
xor
cwtl
push
cs
iret
mov
jo
mov
mov
mov
add
aas
dec
lods
mov
cld
dec
sahf
add
stos
jg
std
jmp
jg
and
push
cmp
and
negl
sub
mov
js
aad
dec
cmp
mov
fistpl
push
mov
js
es
xchg
pop
stos
cmpsl
cmpl
and
enter
cli
xor
add
mov
insl
fdiv
out
push
cld
movsl
pop
jns
inc
mov
ficoml
jp
ja
sbb
dec
jae
add
fisubrs
mov
daa
xorb
shl
test
lea
fidivrs
pop
into
fcoms
sbb
nop
sbbl
xor
arpl
cmp
inc
outsb
sbb
adc
or
loopne
imul
addr16
push
daa
mov
dec
or
jge
mov
subps
cli
loopne
push
fs
es
jno
or
loope
lahf
insl
cmc
test
shll
or
jecxz
and
xor
and
mov
pop
xor
idivl
sub
inc
jno
fsubrp
cwtl
movsl
pop
xlat
mov
and
nop
inc
leave
aam
data16
and
lcall
jmp
pop
mov
out
cmp
pusha
cmp
pop
test
jg
int
dec
cmp
push
shl
stos
xchg
lea
xor
rorl
stos
dec
jno
in
jno
cltd
or
push
dec
popa
cltd
jp
jmp
call
mov
push
cmp
push
xor
jnp
xor
mov
cltd
ss
rorl
jns
pop
push
and
mov
stc
cmp
mov
sbb
std
dec
sub
mov
add
mov
xchg
and
sub
fcoms
dec
mov
push
jno
mov
f2xm1
rcrl
es
testb
setb
out
insl
sub
dec
movsl
shlb
cmp
aas
loopne
sysret
inc
mov
movsb
cmp
jmp
in
dec
xlat
mov
out
xchg
int
stc
lret
stos
imul
adc
or
sbb
mov
in
dec
in
sbbl
std
xorb
inc
push
imul
cmpsl
sub
std
adc
push
rcrl
sub
jns
movsl
test
push
jo
mov
adc
mov
add
cwtl
arpl
fnsave
pop
into
test
sbb
pop
roll
rclb
test
in
cmp
inc
mov
adc
sbb
mov
enter
repz
in
aad
sub
loop
decb
nop
dec
jo
sub
int
mov
out
sahf
repnz
cmp
popa
xchg
inc
aam
sub
pop
dec
lret
cmpsl
stc
cmc
or
cmp
in
cmp
orl
cs
or
and
xor
cmp
int
xchg
popf
inc
scas
lods
inc
dec
jecxz
add
sub
icebp
push
icebp
lods
adc
inc
in
xchg
xor
or
imul
jnp
hlt
jmp
mov
cmp
stos
lret
std
or
jo
jne
push
shll
mov
out
push
rcrl
fidivrl
sbb
mov
rcll
movsb
imul
jne
shrb
xor
or
pop
xor
movsb
mov
xor
mov
or
inc
aaa
or
jl
push
dec
pop
mov
mov
bound
sbb
sbb
mov
push
xlat
add
push
int
add
inc
es
push
loop
add
jne
cmc
pop
test
jo
daa
mov
fidivl
mov
pop
lahf
fnstsw
addr16
xor
sbb
popf
mov
xchg
dec
jnp
fwait
xor
movsl
xchg
xor
adc
adc
loopne
xor
leave
add
cmp
in
inc
or
ret
ficomps
daa
sbb
dec
stos
adc
mov
iret
mov
and
jno
das
fsts
xor
mov
cmp
insl
cmp
lock
jb
adc
add
out
push
cmp
gs
jl
pushl
mov
add
add
jecxz
mov
jbe
fdivrp
lcall
sbb
mov
data16
lock
and
adc
icebp
dec
in
cmp
mov
jge
sbb
dec
notl
in
sub
vcvtss2si
mulb
fdivl
dec
push
std
sub
pop
inc
sbb
or
dec
stos
jl
xlat
add
push
mov
xor
popa
insl
xchg
adc
dec
aam
add
movsl
cli
dec
pop
pusha
ret
push
xor
and
mov
nop
push
lea
dec
and
insl
mov
mov
xchg
pop
mov
dec
outsl
jg
js
adc
mov
jmp
fbld
adc
jmp
sub
jb
mov
cmp
xchg
mov
pop
pop
xchg
mov
pop
jnp
out
xchg
add
pop
cld
imul
int3
idivb
push
scas
movsb
stos
or
cmc
dec
pop
cmp
inc
sar
fistpl
xor
mov
insb
fcmovne
cmpsb
inc
or
xor
xor
cmp
push
inc
push
sahf
cmp
mov
push
loop
xor
dec
xchg
push
int3
cmp
xor
out
jo
stos
xor
repz
add
pop
or
mov
cmc
jnp
xlat
push
ja
push
insb
sbb
mov
push
mov
in
in
pop
jnp
int
in
cmp
pop
verw
mov
cltd
ss
test
jp
push
sarl
sarl
jns
xchg
push
mov
mov
fidivrl
jmp
and
dec
sub
mov
int
cmp
out
mov
ja
jb
test
pop
jbe
inc
test
call
bound
jae
je
in
jnp
mov
cmp
mov
sub
aad
jle
jnp
pop
push
pushf
dec
cld
add
push
jle
mov
repnz
mov
jns
adc
mov
push
std
pop
and
pop
push
rolb
sbb
adc
lret
cld
cmc
aaa
xchg
xchg
test
adc
push
jae
and
pop
pminsw
pop
ljmp
xchg
pop
and
popf
lret
pop
mov
js
fmull
mov
vphaddbw
aad
mov
dec
adc
pop
std
dec
sbb
pop
and
loope
inc
inc
pop
cltd
int
add
push
imul
pop
jp
mov
pop
push
dec
jge
ret
jae
pop
sbb
js
outsl
addr16
sti
enter
jge
push
mov
fsub
cmpsb
movsb
mov
adc
ja
xor
ja
outsb
add
ss
ret
int3
data16
pop
bnd
adc
push
test
mov
cmp
mov
ja
out
push
in
icebp
gs
lock
xchg
jb
cmp
into
sbb
xor
sbb
ss
pop
jecxz
pop
stos
sub
out
xchg
dec
lea
dec
jp
mov
adc
int3
aam
pop
mov
mov
cmpsb
mov
xchg
out
cmp
cmc
push
jl
or
lea
je
inc
sub
aaa
sub
mov
insb
cmp
cmp
jl
repnz
dec
jbe
xchg
outsb
mov
mov
dec
jbe
pop
or
ret
cmp
hlt
pop
in
insb
insl
gs
aad
jg
jle
push
mov
sub
lods
in
pushf
pop
fisttpl
vmread
jle
imul
mov
or
push
push
pop
sub
xor
push
add
outsb
int
pop
push
or
push
adc
xor
lods
mov
jmp
mov
int
les
mov
pop
addr16
imul
and
dec
sarb
and
insb
push
mov
push
dec
pushl
jmp
mov
push
scas
xchg
mov
inc
or
imul
add
mov
pop
and
insl
cltd
mov
in
lock
es
test
gs
loop
cmp
mov
cmpsb
sub
and
scas
js
xchg
cmp
xor
std
in
fs
xor
and
in
jbe
sub
sub
fdivl
sbb
pop
pop
hlt
xchg
sbb
xchg
outsl
adc
loopne
jnp
sub
inc
fstpl
shll
sbb
mov
inc
das
lods
cmp
lods
loop
es
mov
mov
push
jo
dec
scas
andb
in
outsl
movsl
cli
fstpl
jmp
xor
cmp
pop
push
add
jbe
cmp
out
and
adc
mov
adc
shrb
mov
int3
push
pop
mov
mov
fldl
stc
inc
imul
scas
out
rol
ljmp
mov
nop
loopne
cmp
sbb
cmc
les
aad
leave
xchg
addl
jno
dec
adc
cmp
jns
lea
xchg
call
mov
pop
in
xchg
xchg
pop
jno
fdivrl
andb
in
rcr
test
sub
inc
jo
call
lret
and
adc
and
inc
xchg
jns
sbb
cmp
mov
cld
cli
nop
dec
loopne
jge
add
in
insl
adc
test
push
cmp
dec
ror
repnz
xchg
call
sbb
jmp
mov
cmc
lds
rol
clc
into
mov
gs
in
imul
rcll
push
test
test
mov
push
inc
int
cmpsb
push
dec
sub
int
jb
sti
xchg
imul
add
popf
imul
sub
rcll
repnz
in
xor
js
icebp
fwait
out
pop
cmpsb
mov
dec
xchg
mov
cld
out
sub
and
inc
mov
stos
pop
dec
outsl
call
stos
data16
iret
adc
or
push
cmc
and
mov
jmp
push
adc
jb
or
sub
or
loop
cltd
notb
nop
push
pop
inc
mov
add
sahf
fiadds
push
sbb
sbb
stos
mov
sahf
dec
outsl
fimuls
xor
je
stos
lahf
cmp
jge
jnp
lret
ljmp
test
rcrl
sbb
in
jne
pop
pop
dec
push
fs
xchg
mov
in
stos
les
cmp
pop
jae
mov
insb
test
and
sub
push
lods
ja
imul
insl
jg
psrld
dec
pop
cmp
ss
aad
iret
and
adc
and
mov
xchg
dec
std
mov
mov
outsb
push
cs
mov
inc
faddl
repz
shlb
sahf
xor
int3
loopne
js
icebp
inc
js
cmpsb
pop
xchg
test
int3
or
in
lret
pop
dec
or
inc
pop
andb
jns
and
push
dec
mov
into
lret
inc
scas
test
pop
or
std
sbb
out
gs
dec
les
lds
adc
decb
inc
out
lahf
les
push
mov
dec
or
sub
outsl
pop
push
adcl
mov
or
jmp
js
nop
in
pop
inc
mov
mov
cmp
inc
cmpb
xchg
inc
out
sub
adc
pop
arpl
jle
pushf
push
rcr
addr16
popa
push
shrb
mov
fistpll
fnstcw
mov
push
and
xchg
bound
push
jae
inc
out
xor
in
sub
xchg
xor
and
inc
push
lret
inc
lahf
es
ficompl
xor
test
cmp
inc
and
insb
sub
sarl
jecxz
add
pop
jb
rcrl
add
mov
mov
ret
leave
mov
push
sbb
or
outsb
mov
ret
les
mov
rcr
xchg
mov
lods
mov
je
sbb
and
fs
push
or
aaa
mov
mov
add
inc
dec
sub
negb
and
jnp
into
pushf
clc
or
mov
popa
mov
push
sub
les
inc
xchg
leave
or
cwtl
lret
in
pop
movsl
mov
and
lret
mull
ret
js
cs
ss
out
ljmp
les
insl
hlt
dec
xchg
mov
sbb
pop
pop
xor
and
inc
aad
sti
sar
into
aad
lock
repz
daa
push
pop
clc
popa
sub
pop
fwait
into
push
orb
pop
push
pop
int
adc
mov
xchg
pop
cwtl
mov
clc
dec
push
lods
rcll
pop
test
jg
lahf
loop
shrl
sbb
cmc
sub
roll
lds
mov
push
mov
mov
jbe
pop
sub
test
sti
lret
loope
ss
bound
scas
sub
sub
pop
adc
shll
xlat
lock
lea
xchg
jnp
mov
push
cmpl
out
sub
jne
mov
cmp
adcb
xchg
pop
inc
mov
add
and
sbb
cmp
fstpt
adc
jnp
dec
ljmp
out
addl
in
sub
cmpsb
xor
and
aad
sub
adc
aad
sbb
jnp
movsl
outsl
inc
and
cmp
loope
test
xchg
outsb
sbb
int
cld
jl
cltd
dec
cld
mov
std
testl
xor
mov
daa
lcall
mov
mov
cmpsl
inc
clc
inc
mov
mov
mov
lods
xchg
cwtl
fdivr
inc
mov
lcall
lcall
icebp
addr16
je
imul
lret
sbb
call
xor
adcb
mov
pop
les
push
inc
ds
out
xlat
mov
add
aas
dec
fdiv
push
lods
push
mov
pop
leave
mov
jae
addr16
test
jge
pop
mov
addl
aaa
mov
xor
andnps
insb
pop
or
xor
popf
mov
xchg
cmp
sub
cmpb
icebp
cmp
incb
cld
cmp
aas
ljmp
out
mov
xchg
sbb
mov
test
push
pop
movups
mov
adc
pop
hlt
into
scas
loope
sahf
or
cltd
inc
inc
add
mov
insl
inc
call
add
push
iret
jmp
pop
js
out
push
aaa
pop
call
in
dec
lahf
xor
cmp
jo
sarl
xlat
scas
pusha
lret
sub
push
mov
daa
jns
mov
or
pop
push
movsb
out
sub
out
bound
int
shl
mov
sbbb
fwait
xor
mov
iret
stos
sbb
icebp
outsl
out
sbb
cmp
inc
push
ret
adc
icebp
xchg
and
xchg
mov
push
add
sti
dec
scas
mov
jnp
push
call
xchg
xchg
push
cmp
sub
mov
nop
push
sub
lods
xor
dec
fs
and
sbb
sub
jle
gs
pop
sbb
call
dec
fldcw
je
lea
adc
lea
imul
mov
xor
jg
push
inc
scas
insb
sti
aam
jbe
insl
mov
push
lods
fisubl
push
xchg
mov
pushf
cmp
stc
mov
jb
push
jno
pop
outsb
int3
push
push
jno
add
cmp
pop
sbb
sti
in
xchg
xchg
dec
xchg
lock
mov
adc
xchg
out
pop
xor
rcrl
mov
loope
shlb
adc
jg
fsubrl
push
xchg
rcrl
into
int3
addr16
jp
sbb
aas
xor
aam
xor
mov
cmp
idivl
rorl
xor
sbb
xchg
pushf
js
or
fisubl
cmc
sbb
xchg
cltd
or
cmp
jecxz
insb
and
cmpb
fildl
aas
xchg
add
xor
fldcw
repz
clc
lods
and
cmp
stos
jle
cmp
out
hlt
mov
mov
jo
dec
or
test
loopne
sbbl
arpl
jnp
xchg
ficoms
sub
into
cmp
pusha
subl
cmp
cmc
and
add
pop
adc
adc
inc
fdivl
inc
pushf
pop
or
rorl
hlt
jb
pop
cmp
lahf
mull
jne
ret
call
es
inc
adc
mov
sub
adc
inc
add
mov
les
das
pop
push
test
xchg
mov
sub
adc
xchg
mov
call
lahf
es
std
movsl
div
ja
es
mov
mov
jnp
mov
sbb
daa
shlb
enter
test
push
testb
cmc
sub
mov
inc
xchg
pop
cmpsb
popf
mov
mov
and
adc
inc
roll
popa
dec
sahf
into
add
mov
test
jns
jbe
sub
xor
mov
scas
in
cmp
mov
jo
arpl
pop
ja
xchg
push
cmp
repz
rcll
addb
add
cmp
jno
mov
cltd
push
mov
and
idivl
and
stos
dec
lahf
ret
and
icebp
inc
out
out
cmpsb
mov
fstl
or
test
sbb
orl
mov
mov
ljmp
add
jmp
mov
shll
or
sbb
add
les
pop
jmp
ret
push
popl
cltd
mov
stos
lcall
or
or
xchg
xor
sbb
inc
and
inc
jae
bound
xor
adc
pop
mov
mov
fcomps
push
pop
idivl
fdivrs
mov
imul
inc
in
jns
jbe
pop
adc
and
cmp
cmc
in
stos
jg
dec
dec
loope
dec
sub
or
clc
lods
scas
push
and
mov
adc
repz
leave
mov
mov
lods
in
es
or
push
lock
loop
or
mov
sarb
mov
jne
iret
xor
hlt
push
movsl
push
rcl
mov
or
mov
ror
jmp
sub
loop
and
int3
xchg
or
xor
jne
mov
jle
std
xchg
aam
sub
pop
fmuls
adc
jne
jg
and
ljmp
push
std
mov
xchg
inc
mov
iret
jge
lret
push
and
jge
aaa
fiaddl
dec
inc
jle
sbb
ret
xor
sbb
mov
push
add
jmp
pop
mov
push
fs
push
lcall
mov
loopw
jb
dec
imul
mov
clc
xchg
out
outsl
mov
pop
adc
ja
in
xchg
das
pop
ds
jg
leave
lcall
and
jbe
mov
xchg
xchg
xchg
pop
fdiv
ja
xlat
jo
orb
and
xorb
mov
scas
push
jl
mov
pop
fidivrl
mov
inc
f2xm1
xor
mov
stos
add
test
fadds
mov
dec
sti
sub
add
inc
pop
pop
cmp
cld
int
adc
iret
cmc
repz
les
lahf
test
out
and
cli
cmp
lret
xchg
xor
test
and
sti
sub
mov
mov
or
dec
cli
cmp
add
stos
cltd
dec
jns
loop
ds
xlat
je
xor
adc
pop
jecxz
push
and
xchg
in
jo
insl
dec
arpl
addr16
ficomps
push
push
mov
add
gs
pop
mov
shrl
push
arpl
ljmp
pop
mov
mov
add
add
jb
in
bound
xor
push
mov
xor
xchg
xchg
imul
sub
faddl
pop
fsubl
out
inc
fcompl
out
jnp
mov
data16
xor
or
dec
adc
dec
call
aaa
cmp
pop
sub
xchg
imul
push
lods
movsl
jmp
out
add
mov
mov
push
jle
mov
das
cmp
imul
shl
les
imul
cmp
mov
jbe
jg
shlb
adc
add
jne
imul
cmp
mov
xchg
shl
pop
jne
dec
notl
movsb
mov
mov
je
cmp
rorl
loope
popa
fwait
scas
lahf
xchg
push
or
mov
cmp
insb
sub
pop
arpl
data16
pop
bound
std
out
outsl
lods
flds
xor
movsl
mov
lahf
adc
mov
push
fstpl
test
mov
stos
lods
movsb
push
pop
jno
cmp
dec
pop
test
add
xchg
aaa
sti
pusha
or
pop
ret
mov
repz
jmp
jns
jmp
mov
or
gs
ret
xor
push
jns
stos
add
xor
movsl
cmp
add
lods
xor
pop
lret
insl
push
mov
pop
cwtl
push
adc
jp
cmpsb
scas
je
cltd
dec
leave
jnp
out
jo
call
out
roll
fistpll
out
ds
sub
xor
pusha
stos
sub
repz
js
out
std
sbb
pop
loop
incb
and
stos
jge
fidivrl
cmc
adc
popf
movsb
sahf
push
or
push
pop
iret
dec
movsl
test
xor
jg
daa
sbb
adc
cmpsl
mov
sub
mov
int
inc
push
stos
outsb
subb
push
subl
test
ss
dec
fdivp
dec
ljmp
mov
inc
lock
cmp
outsl
lods
sbb
pop
and
insb
leave
ret
ret
ficoml
mov
popf
outsb
inc
push
std
dec
push
test
cmpsl
xlat
movsl
jae
cmpsl
pop
sarb
pop
add
push
mov
mov
rolb
mov
mov
outsl
push
js
sbb
sbb
scas
adc
leave
gs
lcall
adc
push
push
pop
in
mov
mov
xor
dec
iret
add
push
iret
fnsave
iret
inc
sub
hlt
mov
sbb
fisttpl
imul
shld
loop
ret
cmp
daa
cwtl
push
add
gs
xlat
es
dec
iret
mov
add
cmp
into
aam
lret
test
dec
push
jo
pop
loop
cmp
add
pop
push
pop
mov
xchg
mov
adc
sub
sbb
add
stos
xchg
scas
fldcw
xor
push
add
mov
in
sbbb
add
imul
jmp
jno
scas
jo
inc
or
cmp
ja
adc
sbb
ljmp
lret
imul
mov
xor
mov
scas
sub
pushf
popa
mov
addl
and
cltd
cmp
enter
push
jg
mov
out
pop
cmpsl
fbstp
xchg
es
movsl
mov
call
lcall
xchg
pop
sub
cwtl
and
jmp
xor
mov
notl
mov
cli
inc
sub
aas
int
jp
mov
ss
mov
push
out
pop
fisubrl
int3
stc
movsl
xchg
cs
jnp
cli
dec
dec
jg
dec
pop
jbe
mov
cs
push
pop
sbb
mov
mov
adc
jno
push
xchg
out
cmp
push
and
adc
fstpt
mov
xchg
push
and
je
pop
rcl
xlat
push
aam
or
push
cwtl
mov
sbb
push
jl
inc
add
mov
mov
dec
or
add
into
rcrb
jle
shll
fsub
mov
adc
aaa
mov
mov
shll
insb
and
sbb
out
fdivs
iret
mov
mov
loop
seta
dec
xchg
ss
cld
repnz
push
mov
adc
inc
out
xor
cmp
mov
or
pop
out
fsts
outsl
dec
dec
xor
lar
cmp
push
lods
call
sub
pop
push
dec
adc
clc
div
and
inc
movhps
sbb
out
jnp
aas
pop
or
xchg
inc
cs
pushf
inc
add
nop
inc
or
out
jg
mov
enter
ds
pusha
xor
cmp
cmp
xor
or
test
mov
inc
into
lahf
jp
add
mov
adc
call
adc
jo
rorb
and
lret
jbe
xor
scas
outsb
jns
dec
adc
add
js
push
popa
cmp
pusha
mov
mov
sarb
xor
lret
xor
sub
outsb
jmp
aas
std
sbb
sbb
cmp
in
mov
jns
data16
dec
pop
rcrl
xor
or
sti
fwait
or
jmp
push
popa
aam
push
aas
mov
in
sbb
aas
cmpsl
stc
repz
inc
rcr
push
xchg
lcall
imul
roll
xor
xchg
mov
clc
pop
sub
insb
mov
xor
or
dec
xor
adc
testb
notb
adc
orb
leave
cmpsl
push
inc
sbb
jmp
test
dec
repz
dec
mov
jno
fadds
arpl
mov
int
stc
sti
enter
or
cmp
lret
dec
mov
ds
pop
sbb
shrb
push
fisubs
das
ljmp
adc
das
inc
js
mov
cmp
or
inc
jae
push
nop
in
xor
in
sbb
test
xor
jl
movsb
in
jns
pop
rclb
sub
movl
mov
jne
mov
xchg
in
fldcw
push
and
and
lods
cmp
mov
xor
in
xchg
mov
dec
push
sub
icebp
pop
pop
roll
jecxz
xchg
push
in
mov
movsl
test
dec
cmpsl
insb
arpl
pop
fidivrs
pop
pop
mov
test
pop
pushf
out
clc
xor
adc
repz
inc
inc
pop
lods
push
adc
test
iret
mov
bound
cmpsl
into
out
into
mov
je
clc
jmp
lods
cwtl
ret
sub
mov
push
scas
cmpsb
iret
je
addr16
sub
repnz
sti
fidivl
add
mov
mov
cmpsb
fstpl
xor
js
mov
test
nop
jp
xchg
pop
inc
jle
pop
mov
or
int
int
jae
or
rclb
sbb
rcrl
add
fistl
mov
rcr
xor
mov
mov
xor
mov
fwait
jp
jl
add
or
ljmp
sbb
inc
fwait
jae
jb
sub
arpl
fs
into
jecxz
sub
pop
subl
out
add
les
lret
push
mov
push
in
lret
inc
push
inc
cmp
push
inc
cwtl
lock
imul
int3
scas
popf
lea
mov
cmpsl
mov
pop
push
pop
adc
scas
sbb
pop
mov
out
mov
mov
mov
fildl
insl
sti
add
sub
add
and
fsubp
and
push
pop
repnz
adcl
push
mov
push
insl
xorb
mov
xchg
icebp
aaa
lock
or
out
fistps
aad
leave
clc
jp
pop
add
in
xor
xchg
jb
dec
cli
dec
stos
push
add
sti
and
das
push
and
xor
orb
iret
cmp
cmp
std
inc
inc
movsl
xchg
sahf
push
adc
inc
add
fisttps
les
pusha
pushl
pusha
into
xchg
cli
mov
imul
inc
dec
push
add
cmp
inc
sbb
dec
inc
jge
mov
repz
into
leave
inc
leave
lods
andb
je
xor
lret
stos
cli
pop
movsl
scas
fldt
xchg
pop
aas
adc
jl
data16
inc
push
xchg
adc
jae
push
sub
add
or
jp
icebp
or
mov
ret
sub
cmc
lods
dec
sahf
cmpsb
and
ds
sub
push
fs
mov
fsts
mov
shr
push
sti
out
aaa
add
js
test
sbb
fdivrl
movsl
iret
pop
xor
push
dec
dec
cmc
or
rcrl
push
mov
add
lahf
leave
das
mov
cwtl
in
pop
loope
fucom
sub
ds
stos
xchg
into
mov
mov
adc
aam
mov
jns
cld
push
xchg
cmp
push
pop
cmp
xchg
lods
push
cmp
mov
dec
js
push
sub
jecxz
movsb
outsb
mov
fs
add
dec
scas
xchg
and
xor
lcall
and
orl
pop
or
test
scas
pop
iret
inc
mov
dec
icebp
pop
adc
test
inc
insb
es
jbe
mov
xor
das
add
je
sbb
pop
sub
test
jne
popf
rcll
mov
mov
mov
or
cmp
mov
js
xor
aas
movsl
movsl
cltd
push
sbb
lcall
lret
sbb
jns
jns
jbe
in
add
insb
sbb
fnstsw
xor
push
xor
outsb
xor
fnstcw
inc
lock
insl
jnp
imull
mov
pop
pop
std
fsubrl
and
sub
push
setno
inc
mov
das
icebp
jmp
lret
loopne
cmp
sub
gs
int
fwait
pop
xchg
sub
arpl
ret
xchg
gs
push
pop
xchg
push
or
sarb
lret
popa
lock
inc
in
pusha
add
lock
pop
mov
xor
push
xor
xchg
repz
or
insb
add
fisubrl
ret
out
jecxz
mov
jecxz
rcrl
mov
and
push
shl
lock
mov
adc
or
fwait
add
xor
nopl
int
and
xchg
pop
xor
pop
ljmp
les
pop
jnp
inc
xor
int
adc
inc
aad
popa
stc
das
movl
fldl
dec
jmp
int3
mov
pop
rcl
test
mov
sbb
mov
daa
mov
inc
adc
inc
subl
in
dec
popf
mov
mov
xchg
insb
ja
push
popa
xchg
pop
adc
subl
and
getsec
stos
dec
lahf
in
sbb
sti
repz
ds
cmp
rorl
push
push
pop
dec
enter
sub
sbb
or
pop
and
sbb
cmp
lea
ja
mov
stos
jno
xorl
scas
jecxz
test
mov
pop
int3
mov
jmpw
push
cmp
jle
repnz
add
dec
push
lods
repz
imul
or
gs
cmp
push
xor
cmpsl
jnp
xchg
test
push
mov
xchg
or
jns
xlat
pop
lahf
add
cmc
insl
fwait
rorl
fsubs
cmp
sbb
and
scas
mov
mov
cmp
push
loope
sbb
sarl
ss
add
les
mov
lcall
sbb
sub
add
mov
mov
cwtl
fistpll
push
iret
push
movsb
lock
ret
and
pop
int3
and
inc
inc
jmp
scas
imul
adc
jmp
hlt
ret
adc
sub
testb
aas
xchg
cltd
jb
pop
or
scas
pop
add
mov
shl
dec
mov
sub
out
mov
and
xor
pop
sub
mov
add
aaa
sub
shll
jo
out
out
sub
mov
xchg
jg
stos
mov
out
test
ss
and
iret
jle
cmpsl
mov
jns
xorb
lock
negb
subb
push
pop
mov
jg
and
or
pop
orl
inc
aaa
out
xchg
add
jo
mov
lea
xor
and
lods
sbb
cmovae
lret
mov
add
xchg
aaa
shlb
jge,pt
ret
stos
scas
jmp
mov
fdivrs
pop
cli
cld
xor
movsb
mov
arpl
xor
pop
dec
out
fists
fdivs
out
les
sbb
lea
leave
mov
push
mov
jecxz
insb
mov
iret
xchg
sub
pop
mov
xor
popa
mov
shlb
or
add
jo
ja
ret
sub
shrb
negl
adc
pop
in
jo
pop
mov
or
pushl
push
sbb
rcrl
sbb
dec
dec
inc
ja
sub
shlb
int
das
stos
movsb
dec
popl
inc
mov
pop
and
ja
inc
orl
inc
ret
dec
movsb
cmp
jmp
jl
and
loopne
shr
clc
call
lods
push
sub
push
imul
mov
mov
fcoms
cs
outsl
mov
inc
or
xlat
xchg
shl
mov
movlhps
arpl
ficomps
jns
push
sub
lret
andb
ljmp
adc
xchg
inc
rol
hlt
insb
inc
or
lret
or
mov
push
pushf
lods
fldcw
lods
pop
cmp
in
pop
cmp
add
or
movl
imul
out
add
mov
movsl
inc
out
push
cmpsb
dec
loop
cmc
bound
sbb
test
pop
mov
xchg
or
imul
xor
cs
mov
shll
data16
nop
testb
fadds
or
stos
cmpb
or
and
jmp
cli
sub
jnp
into
cmp
popa
fistl
inc
lret
fs
inc
popa
outsl
filds
loopne
push
xor
pop
fs
sub
xchg
mov
push
xchg
lcall
inc
sahf
lea
imul
jmp
gs
or
xor
or
icebp
jbe
adc
lea
cli
pop
xor
popa
sub
jmp
sbb
xor
xchg
nop
xchg
cmp
jmp
add
sub
fists
mov
add
jns
mov
cmp
insb
inc
add
sbb
dec
test
jno
pushf
mov
fsts
inc
outsl
outsb
sbb
aas
ficomps
xor
and
pop
pop
popa
call
mov
in
sbb
dec
push
andb
or
es
inc
mov
pop
nop
mov
mov
aad
xchg
jno
mov
and
mov
lods
ja
sub
jl
rolb
jl
mov
pop
xor
xor
sbb
and
add
add
popa
inc
stc
cmovge
sti
fcompp
mov
sbbb
ja
fiaddl
imul
adc
into
lea
dec
shr
test
mov
or
call
test
sbb
lret
push
sbb
int
orl
push
mov
adc
or
or
scas
cmp
sbb
pop
in
xchg
cwtl
ja
dec
icebp
adc
scas
repz
push
fmull
push
push
movsl
jae
fstpl
les
inc
dec
dec
sbb
fdivrs
lcall
sti
push
sbb
inc
into
add
out
dec
out
out
stos
pop
fistl
cmp
mov
push
push
sbb
dec
popa
cmc
mov
sbb
pop
test
cmpsl
push
jmp
popf
xor
push
cli
mov
fidivl
xchg
pop
push
or
and
add
and
mov
sbb
xlat
add
or
or
in
xchg
test
jbe
flds
or
mov
cltd
jne
call
sbb
cmp
lret
mov
inc
insb
sbb
adc
cld
ds
cld
stos
repnz
enter
nop
xchg
and
jb
push
lahf
aam
jmp
jae
and
xchg
movsl
js
pop
cmp
inc
xchg
dec
push
or
out
out
cmp
xor
cmp
pop
mov
inc
inc
push
sahf
js
cmp
stos
pop
test
test
arpl
xchg
sub
lret
cmp
inc
ds
sub
inc
push
cwtl
mov
ret
test
scas
out
insl
cmpl
test
arpl
divl
addr16
stc
daa
jno
in
fwait
test
aaa
xor
mov
fisttpll
mov
insl
cmp
jge
cmp
mov
lahf
or
dec
inc
and
sub
inc
mov
xchg
imul
or
or
addl
mov
movsl
or
out
mov
inc
push
mov
pop
pop
inc
cmpsl
xchg
add
sub
mov
pop
add
add
jno
xor
pop
push
cmp
inc
popa
mov
push
sbbl
lret
push
pop
sub
mov
inc
ja
std
aad
popf
jae
and
or
repz
inc
pusha
adc
fisubrs
idivb
inc
jecxz
fldt
adc
shld
and
jle
and
push
iret
pop
pop
popf
data16
inc
mov
ss
icebp
cmp
adc
clc
or
push
add
sub
stc
fisubrs
mov
cmp
xchg
pop
mov
add
inc
jns
xchg
xor
ficomps
divl
pop
pushl
sub
loopne
push
imul
jno
mov
adc
xchg
orl
jbe
pushf
movsl
das
aas
dec
cmp
lcall
lcall
jno
xchg
fwait
pop
inc
stos
xchg
jbe
cmc
hlt
mov
pop
bound
aaa
adc
push
mov
fcmove
xor
test
inc
mov
xchg
scas
ss
mov
mov
imul
cmp
and
xchg
rcrb
mov
inc
movsl
dec
outsb
pusha
xchg
mov
xor
mov
jge
pop
cltd
fchs
nop
jl
xchg
cmc
or
or
aas
aad
xor
sbb
mov
mov
adc
or
arpl
inc
xchg
out
popa
inc
mov
adc
clc
test
xchg
cmp
sar
repnz
jmp
cltd
sbb
outsb
movsl
push
cmp
sbb
xchg
mov
mov
loopne
sbb
adc
sti
daa
enter
mov
pop
mov
rorl
js
mov
xlat
pop
insb
push
out
xchg
int3
call
sbb
out
push
adc
push
and
add
fwait
insl
inc
lods
pop
and
push
xor
stos
dec
fisttpl
sti
inc
int3
sub
xor
or
xor
movsl
adc
rcr
scas
dec
add
outsl
andb
xchg
fimuls
outsl
inc
repnz
repnz
pop
stos
testl
sub
decl
dec
sahf
addl
shlb
mov
and
sub
cli
jge
add
sti
hlt
sub
pop
mov
sbb
jno
leave
add
sahf
mov
pusha
xor
add
inc
shrl
sbb
out
push
inc
mov
push
rcrl
ljmp
mov
cmpb
adc
add
push
adc
loope
repnz
mov
es
jp
es
enter
ret
into
xor
mov
inc
pop
push
push
and
setns
add
mov
xor
fidivs
in
in
insb
test
stos
xchg
or
inc
aam
xor
idivb
clc
rcll
dec
mov
mov
lds
sti
xor
add
push
mov
pop
push
pop
aas
lods
aam
fwait
or
cs
and
inc
pop
dec
stos
push
int3
xor
jnp
clc
cmp
ds
push
xor
jle
fdivl
inc
pop
fisttpl
cltd
test
repz
out
enter
clc
cmc
push
pop
bound
lret
cli
fisubrl
sub
sub
repz
or
test
popa
lods
rclb
pop
dec
xchg
ffree
out
mov
mov
call
cltd
icebp
jecxz
pushf
out
imul
dec
and
sbb
mov
out
iret
adc
call
xchg
pushf
mov
sbb
sub
clc
sbb
stos
pushl
rorl
pop
dec
sbb
pop
scas
sbb
out
or
pop
roll
mov
out
in
pusha
movsb
nop
xorl
jnp
fdivrs
lock
push
inc
int3
mov
jb
into
jbe
mov
xor
xchg
jge
in
sbb
mov
jle
and
jbe
call
mov
sbb
fsubl
push
mov
fnstsw
jmp
mov
test
imul
mov
popf
inc
arpl
pop
mov
fbld
sub
adc
shll
arpl
jns
je
mov
xchg
push
push
fcompl
test
add
in
lea
cmp
mov
push
movsl
mov
inc
popf
push
in
push
in
and
daa
out
jmp
and
outsb
xor
scas
and
test
fildll
aas
lods
adc
dec
outsb
leave
shlb
jmp
jnp
iret
push
insb
jmp
ds
cmpsb
pop
insl
add
push
aam
mov
jo
inc
jge
popf
daa
dec
imul
aas
lret
jns
inc
pop
xchg
div
filds
popf
mov
bound
insl
xchg
sbb
mov
mov
fsubs
sub
ret
out
sub
sub
cmpsl
ret
jg
outsb
xchg
push
hlt
jg
add
insb
gs
and
imul
mov
pop
movsb
lcall
push
jno
ret
fisubrl
and
and
stc
ret
gs
xor
test
push
pop
and
gs
lods
jnp
or
push
test
adc
pop
ds
popf
es
lret
xchg
xchg
inc
rcll
in
adc
mov
dec
divb
aaa
sahf
test
xchg
inc
cwtl
adc
xor
aam
loop
adc
arpl
push
push
ljmp
add
push
adc
lea
pop
int3
test
fbld
test
scas
popl
out
sarb
call
mov
mov
insl
mov
stc
das
addr16
lea
xchg
or
es
adc
cmpsl
jb
push
outsb
loop
icebp
xchg
lahf
mov
jns
jmp
mov
push
xorl
or
mov
pop
imul
lods
jmp
dec
xchg
push
fwait
iret
loop
movsb
addb
sar
cmp
mov
pop
pop
lock
sub
pop
cld
fmull
push
mov
lds
cld
xchg
sbb
lods
outsl
gs
adc
lcall
xadd
test
movsb
xchg
and
jns
jns
lcall
dec
add
repnz
jmp
fdivr
mov
mov
push
mov
pushf
xor
inc
int3
adc
mov
mov
xchg
popf
cmpl
pop
nop
testl
push
push
loope
mov
cld
aam
jo
xchg
mov
mov
or
sbb
repnz
pushf
imul
add
fldt
in
cmp
cmp
pop
mov
out
addr16
std
add
sub
pop
stos
std
lahf
loope
inc
mov
nop
sub
inc
pop
fdivrl
jge
in
popa
out
repnz
sub
in
shrl
mov
adc
das
push
push
xor
stos
outsb
jl
dec
jne
and
dec
sub
repnz
cmp
sbb
fdivl
sahf
xor
cmp
lcall
push
je
push
lods
jg
ret
ret
outsl
into
add
roll
test
mov
dec
ret
and
and
and
adc
or
sub
out
andl
xchg
sub
push
jbe
stos
insb
xchg
imul
dec
lds
lret
inc
xchg
dec
rcrb
xor
icebp
push
outsl
jae
call
les
lds
cmp
fadd
dec
push
leave
fdivrl
dec
cmp
outsb
in
jle
cmp
xchg
ds
in
lret
cmp
mov
mov
jae
xchg
mov
icebp
mov
imul
xlat
arpl
ret
mov
xchg
enter
out
pop
xor
or
sub
daa
xlat
mov
ss
push
dec
loopne
push
or
pop
or
mov
jae
sbb
xchg
adc
dec
je
sarb
scas
cmp
cmp
cmp
cmpb
adc
insb
ja
shlb
mov
xchg
xchg
scas
mov
adc
test
and
mov
push
push
fst
aas
jmp
pop
mov
xchg
ljmp
aad
icebp
pop
add
inc
insb
ret
adc
cmp
jmp
scas
mov
dec
pop
stos
push
dec
nop
stos
mov
mov
xor
sub
mov
dec
jb
daa
mov
int3
fcomi
lds
xor
xchg
lods
dec
and
pop
mov
loopne
addr16
mov
cli
outsb
dec
fnstenv
cmpsl
loopne
inc
mov
fmul
mov
imul
jg
fisubs
cltd
jecxz
inc
mov
dec
sub
cmpsl
xchg
inc
sarl
pusha
cmp
mov
and
test
add
pop
aam
test
insl
sahf
mov
arpl
inc
sti
mov
test
xchg
pushf
in
sbb
push
and
or
mov
and
imul
arpl
cmpl
icebp
mov
xchg
adc
sub
or
inc
sub
lahf
inc
xchg
mov
sti
or
arpl
adc
sub
ja
adc
ret
jge
cs
decb
sti
iret
push
test
and
push
jl
jmp
lods
dec
sub
dec
in
in
mov
mov
rcr
mov
in
push
mov
cmc
adc
xor
lcall
mov
xchg
or
scas
in
pop
jnp
je
adc
movsl
scas
adc
inc
scas
test
mov
scas
loop
pop
sub
int
pop
push
sarl
cmpl
sub
data16
push
inc
push
icebp
int3
mov
movsb
xchg
mov
push
push
imul
adc
lahf
xor
mov
dec
jl
push
dec
je
push
jae
push
mov
inc
xor
and
pop
jmp
dec
sbb
cmpsb
lods
pop
stc
sbb
sahf
sub
and
push
mov
sub
rcl
jno
sub
dec
xchg
cmp
test
sbb
outsb
cmp
cltd
pop
sahf
pop
push
mov
mov
xchg
sub
daa
fwait
mov
inc
mov
push
cwtl
dec
es
jge
subl
xchg
cmp
loope
je
fistpll
inc
das
fcmovnbe
pushf
or
roll
dec
imul
fstl
pusha
mov
dec
mov
or
jbe
xchg
sahf
add
popf
lock
push
out
dec
xchg
sub
iret
int3
mov
xchg
push
cmpsb
cmpsl
fistpl
lds
inc
push
mov
dec
lahf
sub
jmp
mov
call
lcall
mov
add
sbb
out
lret
push
or
sub
lret
push
add
stc
popf
jb
cmp
inc
dec
xchg
ret
sub
adc
xor
out
mov
mov
dec
push
mov
fisttps
mov
dec
dec
fmull
popf
les
pusha
je
pop
jb
sbb
add
stc
sub
dec
xchg
ret
inc
pop
int
inc
sbb
xor
mov
mov
mov
jmp
mov
inc
sub
sbb
mov
jg
into
fldt
lret
sub
clc
mov
shrl
cli
xchg
xchg
ror
sub
lea
dec
sbb
mov
cld
cmp
mov
js
movsb
popa
outsb
xor
pop
pop
sbb
in
cli
xor
fmul
ds
ffreep
lods
sub
popf
or
dec
and
add
adc
adc
mov
pop
sbb
aad
and
push
sub
push
xlat
xchg
scas
push
xchg
pusha
cmp
les
lret
fwait
sub
cmp
push
pusha
lret
addb
jne
mov
add
mov
dec
cs
pusha
stos
pushf
jge
push
iret
push
mov
in
sbb
xor
scas
xorb
sub
sbb
inc
xor
sbb
ret
push
mov
divb
hlt
pop
xchg
inc
adc
pop
push
jp
sbb
fldenv
and
push
out
add
ss
cmp
mov
xchg
roll
mov
mov
adc
fwait
mov
arpl
rcrb
sub
out
rcrl
cmp
push
inc
xchg
sub
jne
xchg
xchg
pushf
imul
and
cmpsl
fcoml
rcr
xchg
hlt
mov
mov
add
and
mov
movsb
xchg
outsb
sbb
dec
mov
xchg
int3
and
dec
jl
adc
and
mov
scas
or
test
add
sbb
fists
shlb
std
repz
dec
in
pop
add
pop
call
mov
pop
in
mov
es
xor
push
mov
lds
insl
mov
xor
cli
cmp
mov
push
inc
inc
xchg
push
in
sbb
xor
push
int3
and
sbb
nop
mov
aaa
mov
and
lds
sbb
push
lds
dec
daa
dec
jmp
mov
sub
jl
test
fcom
leave
cwtl
jbe
hlt
lea
pop
ss
xchg
dec
sarl
hlt
push
mov
pop
rorl
mov
enter
mov
iret
cltd
rcrl
cmp
int3
mov
je
insb
sbbl
outsl
cmp
movsl
repnz
dec
dec
cmp
mov
imulb
xchg
sub
lods
push
out
pop
cmp
dec
push
fs
test
in
insl
xchg
add
rcrl
mov
adc
nop
xor
add
aam
adc
clc
shrl
inc
mov
fdiv
mov
pop
dec
sub
in
int3
out
cltd
cmp
mov
cs
daa
stos
and
loopne
pop
dec
xor
xchg
xchg
and
push
cmp
xchg
lock
arpl
mov
cmp
sub
arpl
mov
jmp
aas
cmp
arpl
es
daa
scas
lahf
lret
int
mov
push
psubusb
fdivl
pop
mov
sbb
inc
test
insl
cmp
cmp
out
mov
hlt
mov
rcl
adc
mov
dec
aas
dec
cmp
ds
movsl
mov
pop
xor
ljmp
add
adc
imul
adc
aaa
in
popf
mov
and
cld
fistpll
movswl
xchg
aad
pop
imul
cmp
mov
testb
or
mov
push
idivl
dec
cmp
hlt
jmp
or
icebp
aam
xchg
insl
fnsave
cmove
xchg
pop
mov
sub
mov
dec
dec
in
rcrb
sbb
inc
pop
cmp
mov
lods
xchg
lods
jp
or
sub
pop
adc
cs
inc
into
imul
mov
and
cmpsl
fdivrs
add
cmp
dec
xchg
dec
inc
jl
push
aaa
imul
xchg
cmp
push
pop
mov
loopne
int3
xor
cli
mov
push
mov
fadds
mov
mov
mov
dec
mov
in
or
add
pop
mov
mov
inc
push
js
mov
call
push
sbb
inc
mov
adc
in
jl
xchg
xchg
cwtl
sbb
jle
sti
sub
xchg
sub
inc
fxch
inc
cmpsb
je
mov
test
cltd
test
cmpsl
sub
fimuls
push
mov
push
loope
das
gs
and
sbb
outsb
xor
add
sbb
mov
push
dec
mov
addr16
xor
lret
fnstenv
andb
lods
pop
js
xchg
jecxz
aad
push
jl
mov
sahf
loope
sbb
ss
cli
ss
cmc
out
stc
es
fiaddl
sti
cmc
dec
test
sbb
adc
dec
pop
adc
mov
xor
hlt
sbb
jne
pop
xlat
scas
mov
sub
sahf
icebp
mov
bound
shlb
aaa
lcall
out
mov
aas
call
mov
push
fstl
pop
and
mov
push
xchg
add
lds
pop
int
push
mov
repz
scas
inc
mov
mov
outsl
scas
cmp
cld
aas
sbb
sbbl
cmc
pop
mov
dec
out
cmp
pop
sub
imul
sbb
inc
or
or
fcoml
and
fnstsw
sti
sub
push
mov
faddp
mov
sbb
jne
lods
cmp
in
test
xor
das
mov
push
leave
les
push
lret
adc
imul
cmp
imul
in
push
popf
xor
cmp
cs
fisttpl
in
shlb
pop
push
sub
nop
or
add
push
popa
xchg
idivb
or
iret
cmc
push
mov
pop
adc
mov
in
test
sbb
repz
out
mov
push
xchg
jo
jmp
mov
frstor
mov
dec
sarl
stos
ja
push
push
push
sub
mov
out
jno
cmp
popf
insb
lret
push
jmp
mov
push
repz
cmpsl
aad
jns
cmp
leave
popf
cmpsl
call
sub
scas
not
add
push
fldl
cmp
hlt
call
sub
jnp
aas
sbb
aam
lcall
xor
sqrtps
cmpl
dec
lea
outsb
out
push
test
push
pop
dec
jp
fstps
add
shrb
iret
cmp
mov
pop
add
mov
xor
jmp
fsubrl
inc
jb
popa
mov
adc
sti
sahf
lcall
mov
dec
enter
or
mov
or
sbbb
movsl
and
jle
adc
sbb
es
adc
push
sbb
js
cwtl
into
xchg
dec
jle
xchg
das
pop
inc
rcrl
in
or
ret
and
in
stos
int3
dec
inc
scas
push
push
xchg
pop
pop
pop
mov
insb
in
cwtl
jno
aas
movsl
jo
inc
dec
inc
pop
pop
in
nop
jb
sbb
fxch
xchg
subb
mov
mov
testl
add
aaa
xchg
inc
xchg
sbb
mov
or
cld
fistps
clc
bound
xchg
out
dec
inc
jmp
dec
jmp
xchg
mov
sbb
or
leave
movl
repz
inc
sahf
lahf
inc
push
ljmp
jmp
push
scas
mov
push
bswap
push
sub
out
adc
dec
pop
idivb
lret
imul
jmp
cli
mov
lcall
adc
push
mov
mov
leave
clc
dec
push
or
leave
adc
pushf
cmpsb
add
inc
test
adc
mov
stos
shrl
push
sbb
sub
mov
imul
xchg
popa
ret
xor
push
inc
ror
add
pop
lea
call
mov
shll
cmp
imulb
addl
lds
sub
xchg
rolb
shrl
jp
xchg
mov
dec
inc
out
jle
mov
je
xor
jg
mov
stc
stos
mov
fdivl
fcoms
pop
jno
popa
mov
ret
or
push
mov
sub
xor
das
jg
std
arpl
call
sbb
sub
push
shlb
ds
leave
mov
jb
cmc
imul
mov
subb
scas
xchg
lcall
jbe
and
mov
adc
add
adc
cld
lea
mov
jne
call
pop
scas
repz
add
in
imul
add
pop
pusha
shl
push
mov
pop
ja
fiadds
sahf
cmp
fldenv
pop
dec
andl
or
mov
arpl
notb
mov
out
pop
dec
jecxz
cmp
xchg
clc
loope
loop
iret
cmp
mov
imul
iret
nop
push
push
xchg
xor
and
iret
xchg
movsl
pop
and
jecxz
add
fdivl
xchg
testb
pop
aam
popf
cltd
jne
dec
bound
mov
rcrl
jp
lods
mov
jns
mov
in
add
cmp
push
je
adc
sarb
push
movsb
arpl
sub
jp
pop
or
lock
pop
mov
adc
pop
jg
mov
ljmp
int
pop
sub
pop
mov
fwait
mov
mov
pushf
sub
mov
mov
sbb
mov
shll
cld
pop
out
aad
mov
mov
jnp
xor
arpl
icebp
fidivs
cs
iret
push
pusha
pop
mov
mov
inc
je
cwtl
pushf
mov
xchg
mov
sbb
inc
movsl
test
dec
into
div
test
je
mov
mov
jmp
sub
orl
cltd
inc
rcrl
adc
cmp
xchg
dec
dec
mov
push
fwait
xchg
popf
mov
loope
cmp
stos
imulb
inc
cmp
mov
fmuls
xchg
jae
sbb
cmp
xchg
test
jg
ret
stc
icebp
fiaddl
sbb
sbbb
push
je
sbb
add
movsl
dec
out
push
cmpsb
or
inc
dec
repnz
lock
loopne
add
fs
scas
popf
pop
fiaddl
add
add
lcall
push
outsb
int3
jbe
test
sbb
in
faddl
mov
mov
xor
loop
pop
push
adc
aas
xlat
fistps
in
push
out
mov
lahf
cmc
mov
mov
cmp
test
mov
mov
aas
cli
into
movsl
dec
outsl
xor
or
loopne
rcl
fmulp
insb
mov
out
add
ret
jl
cmp
inc
ja
or
or
mov
mov
or
jae
cwtl
sahf
and
pop
cmp
shll
xchg
sahf
mov
jae
jne
int3
repz
in
stos
xchg
sbb
jle
sbbl
aas
loope
mov
xchg
mov
jne
xor
cmp
in
dec
dec
dec
mov
insb
mov
sub
pushf
insl
or
push
ror
cltd
and
lcall
addr16
sub
stos
xchg
ljmp
lret
xor
mov
enter
pop
aas
xchg
mov
push
adc
mov
sub
jo
cmpsb
push
jle
dec
in
cmc
decb
test
mov
mov
mov
lret
icebp
or
push
xor
mov
push
ret
mov
xchg
rcr
jae
repnz
mov
mov
xchg
mov
cs
xchg
or
xor
ret
cmc
inc
pop
repnz
nop
in
cli
inc
pop
jle
les
ret
insl
ja
add
nop
sbb
sbb
jl
jnp
lcall
jmp
inc
aad
insb
xchg
movsl
into
mov
mov
push
jnp
mov
mov
lock
jecxz
int3
js
mov
repnz
xor
jo
jl
es
pop
adc
pop
xor
sbb
cmp
jmp
push
fnstsw
mov
scas
enter
aas
loop
dec
pop
sbbl
jge
and
loopne
test
test
shll
jg
aad
add
out
mov
lds
inc
int3
rcr
adc
out
or
es
loop
xchg
imul
and
call
scas
fdivl
stc
pusha
pop
stos
dec
cmpsb
add
cmp
inc
lahf
lods
int
push
adc
pop
push
loope
cmp
and
inc
lea
mov
gs
push
xchg
insb
mov
push
adc
xchg
pop
imulb
stos
testb
sub
push
xor
pusha
outsb
adc
mov
lahf
imul
and
clc
cmpsl
arpl
popf
ret
cmc
lcall
cs
gs
push
add
rcll
and
inc
dec
jg
pop
fmul
adc
xchg
cmpsb
jno
mov
shl
xor
jg
orl
jbe
repnz
add
cli
dec
add
pop
mov
push
sahf
cmp
mov
jmp
clc
aaa
cmp
insb
adc
sub
and
jo
cwtl
rorl
ljmp
into
mov
and
xchg
or
and
cmp
adc
jnp
sbb
loop
stos
test
adc
shr
cli
adc
test
std
and
filds
xchg
ja
addr16
scas
iret
xchg
xchg
xor
pop
movnti
popa
inc
and
push
mov
xorb
pop
test
sub
mov
pushf
xchg
sub
push
imulb
cmp
clc
mov
hlt
jno
pop
push
test
in
jnp
push
xchg
adc
cmp
std
mov
xor
xor
jno
xchg
ret
mov
jns
enter
pop
arpl
push
jae
push
pop
xchg
pop
mov
pop
and
sbb
out
packuswb
das
fwait
mov
jl
cmp
mov
ljmp
mov
insl
movsb
jg
inc
lods
xor
mov
push
das
stos
icebp
inc
mov
mov
xlat
xchg
clc
movsb
inc
and
dec
in
cmp
insb
pop
mov
fs
das
neg
in
mov
sbb
lods
xlat
leave
outsb
push
sub
mov
pop
rolb
js
lret
jmp
dec
pop
into
jns
cmp
xchg
inc
pop
imul
jnp
pushf
negl
jne
jb
xchg
ret
insb
sbb
loopne
add
mov
mov
movsl
sub
mov
lea
mov
xor
mov
jae
xchg
or
rcll
cmp
sub
jecxz
dec
xlat
js
lds
cmp
test
loopne
cmpb
mov
sbb
and
xchg
mov
mov
iret
ror
mov
pushf
inc
test
pop
xchg
push
lcall
jns
mov
push
sti
sub
mov
jp
xor
xchg
into
js
mov
cmc
incl
push
imul
add
jg
mov
push
adc
sub
push
sti
xchg
jo
inc
or
inc
sub
sbb
mov
cmpsl
sub
lods
xchg
or
inc
orb
jmp
or
pop
xlat
pop
ret
adc
dec
mov
arpl
cmc
inc
call
mov
cmp
pop
jmp
cs
clc
xchg
cmp
pop
pop
add
movsb
divl
cmp
ficoms
and
mov
inc
std
xchg
adc
fwait
sub
push
ja
sbb
mov
aam
shrl
aas
mov
mov
dec
add
mov
test
jle
iret
add
aam
dec
mov
mov
sti
ds
mov
aam
pop
and
or
addb
or
aad
das
andb
adcb
lea
mov
sub
push
icebp
sub
xor
rcrl
pop
lds
mov
int3
test
rcll
je
out
mov
call
sub
fsts
icebp
xchg
sub
lds
or
cmpsb
xchg
sbb
jge
xor
sub
and
scas
mov
xchg
cmp
sub
repnz
mov
outsb
lock
mov
pop
or
and
mov
sbb
pushf
push
arpl
dec
mov
xchg
ss
ljmp
push
mov
adc
lahf
jne
mov
aaa
out
inc
dec
sbb
lret
sbb
push
jbe
xchg
rclb
or
inc
add
mov
fwait
and
xchg
or
jb
xchg
lods
mov
pop
inc
push
iret
mov
xchg
js
inc
jnp
enter
add
rcl
and
mov
shlb
loopne
imul
stos
xor
jae
frstpm(287
imul
or
hlt
jecxz
mov
insl
push
rol
sbb
imul
aam
popf
iret
hlt
inc
mov
and
fldenv
and
sbb
js
push
cmp
pop
insl
cltd
out
adc
stc
cwtl
mov
jns
data16
addb
cld
loopne
mov
addb
ljmp
sar
cmp
movsb
arpl
mov
push
adc
pop
pop
mov
push
fs
jle
pop
inc
xor
dec
cmp
sub
lods
mov
sub
pushf
hlt
daa
xchg
mov
adc
mov
movsl
fnsave
mov
andl
jle
mov
cli
mov
ficomps
scas
or
ret
andb
adc
adc
and
dec
stc
xlat
daa
fnstcw
pop
popf
sbb
hlt
cmp
js
test
jb
sahf
out
addr16
hlt
icebp
sahf
ljmp
sub
sbb
or
jbe
jp
xor
int
jae
pop
mov
scas
ja
outsl
arpl
inc
arpl
inc
orb
push
lea
notb
in
jp
push
sbb
cwtl
cmpsl
and
insb
fstpt
ds
add
ja
inc
loop
gs
aad
test
int3
or
xchg
notl
jae
sbb
pop
scas
in
ficoml
mov
loope
cmp
push
xor
cmp
jmp
lret
push
xor
add
aas
sub
push
dec
cltd
jae
xor
sbb
dec
or
shrb
cmp
out
xchg
pop
idivl
fcompl
push
mov
and
les
cmpsl
loopne
push
mov
mov
pop
push
mov
mov
sub
mov
aad
data16
push
sti
cmp
mov
imul
jmp
arpl
in
jmpw
jo
out
sahf
inc
inc
movsb
xor
test
pmulhw
movsl
and
push
jae
outsl
jns
shl
and
lret
mov
ret
sbb
xor
pop
sub
mov
pop
andb
lret
xchg
cmp
lea
xchg
int
out
mulb
mov
roll
jl
jg
loopne
xor
push
clc
stc
push
movsb
mov
fwait
addr16
xchg
sub
filds
in
push
and
jns
cmc
cmpsl
sub
aaa
addb
shl
inc
push
mov
cmp
movb
out
les
bound
mov
dec
fildll
mov
sbb
inc
or
and
daa
repz
xor
inc
cwtl
sbb
loopne
and
dec
fwait
push
cmp
cmp
dec
inc
sub
cmc
fildl
and
mov
jg,pt
das
lret
add
adc
stc
push
imul
aad
aaa
mov
mov
lods
or
jo
inc
jl
bound
jae
jle
push
stos
dec
push
mov
push
repz
xchg
sub
fcmovnu
push
dec
pop
xchg
sbb
incb
fnstcw
inc
in
and
ret
ror
outsl
les
mov
cmp
inc
xchg
fstpl
and
leave
xchg
xchg
or
std
addr16
shll
cmp
inc
leave
popa
call
repz
jg
inc
mov
cwtl
fisubs
mov
adc
xchg
and
mov
cltd
add
jmp
xor
mov
std
mov
lahf
fwait
loope
aaa
std
sbb
nop
mov
fiaddl
mov
pop
adc
shlb
mov
test
mov
adc
mov
mov
and
repz
push
jo
arpl
movsl
sub
pop
push
dec
pop
hlt
adc
sub
fisubrs
insl
mov
adc
mov
hlt
xlat
nop
addr16
xchg
das
icebp
cwtl
int
rcll
loopne
mov
cmp
cmpsl
pop
xor
push
sbb
test
stos
ljmp
test
xlat
cmpsb
lret
sub
sbb
in
cmpsb
pop
loop
push
dec
pop
push
push
out
mov
push
xchg
int
ds
push
push
sub
aam
sub
push
imul
stc
pop
cwtl
decb
test
lods
lret
mov
dec
repnz
mov
out
inc
mov
aaa
rcrl
jns
std
loop
adc
xchg
dec
rcrb
clc
rcrl
cmp
out
adc
clc
jle
xor
push
in
pop
dec
dec
sti
add
cmpsl
and
add
pop
mov
or
clc
fisubs
cmpsb
pop
fisubs
add
xchg
xchg
push
in
sub
icebp
jne
in
and
ljmp
mov
dec
or
popa
mov
xchg
sbb
outsl
test
inc
mov
adc
mov
jno
pop
push
clc
sbb
cmp
xchg
outsl
push
cld
sub
pop
jmp
sbb
mov
jns
or
push
clc
inc
std
xor
popf
cmpsl
aas
push
popf
lret
xchg
scas
push
lret
in
ljmp
sub
pop
fprem1
nop
cltd
cmp
imul
ss
or
ss
push
mov
in
in
imul
shll
or
or
mov
mov
push
bound
insb
shlb
andb
icebp
jle
loope
push
dec
jp
fstl
mov
fstl
xor
cmp
pop
push
fld
inc
icebp
test
and
das
jp
ror
lcall
outsl
int3
xchg
xlat
enter
mov
sarb
scas
nop
outsb
cmc
test
rorb
jbe
mov
or
sti
xchg
call
std
or
icebp
sub
aad
mov
pop
rorb
mov
mov
fcoml
movsl
mov
in
out
and
and
sub
mov
loope
cltd
fstl
sti
add
icebp
bound
mov
xchg
pop
js
cmc
pop
mov
mov
js
je
jbe
int3
pop
dec
mov
outsl
fld
fdivl
mov
push
add
repz
xchg
mov
cmc
addl
inc
cmpsl
hlt
mov
mov
mov
imul
pop
mov
xlat
inc
jle
into
les
xchg
mov
jbe
or
mov
adc
inc
gs
insl
cld
sbb
les
mov
sub
xchg
aad
xor
decb
adc
push
and
dec
and
push
cmp
and
cmp
clc
sbb
sbb
sbb
add
outsl
test
imul
stos
xchg
dec
mov
cmp
push
gs
cmp
fmull
lods
xchg
xlat
shll
mov
mov
enter
test
lcall
adc
fs
aam
fucom
pop
mov
cmp
das
and
in
add
repz
dec
std
stos
and
xlat
push
push
pop
mov
nop
movsb
out
ror
fsubrl
out
es
repz
mov
mov
scas
or
dec
fstpl
sub
int
jnp
push
fst
stc
repnz
addr16
push
sbb
movsl
sbb
stc
add
jne
mov
arpl
or
xchg
je
aam
popa
daa
push
rorb
adc
mov
xchg
movsb
mov
push
pop
or
out
mov
test
jne
cmpsb
push
and
and
test
out
fldl
mov
jge
pop
test
or
xchg
jne
sub
sub
push
xchg
test
mov
subb
pop
sbb
xor
shrb
sub
mov
outsb
push
or
pop
push
out
mov
and
roll
pop
push
enter
add
jecxz
cltd
mov
or
dec
dec
es
mov
pop
xchg
xor
test
test
stos
cmpsl
notb
aas
into
and
adc
sahf
jb
addr16
rorb
movsb
push
push
xor
xchg
les
enter
cmpb
add
mov
fmuls
mov
out
arpl
clc
inc
loope
pop
xlat
insl
movl
adc
xchg
fisubl
lret
dec
and
dec
pop
sbb
inc
fwait
mov
sbb
jl
sahf
sarl
or
xorl
sarl
dec
test
mov
sub
mov
ss
pop
fistl
stos
cmp
in
pop
into
cld
jnp
push
xlat
sub
dec
mov
jl
js
mov
stos
sbb
jb
add
and
xchg
sbb
divb
inc
nop
les
inc
iret
scas
xor
notb
jmp
xchg
xabort
adc
mov
movsl
clc
dec
stos
popa
pop
fisubl
or
cmp
fs
fdiv
popa
pop
and
in
jmp
lds
xlat
stc
mov
ffree
jg
inc
shrl
jne
in
test
sbb
sbb
popa
jae
push
ds
test
push
sub
nop
push
cmp
dec
mov
lock
aam
mov
cmc
cmp
jno
mov
and
and
jae
jns
insl
push
cmpsb
daa
repz
jmp
clc
or
fldz
xchg
cwtl
addr16
stos
or
dec
dec
mov
stc
add
dec
push
subl
cmp
xlat
or
mov
lcall
add
mov
loopne
xchg
je
enter
hlt
inc
adc
nop
push
lahf
lods
loope
insl
fldl
pop
pusha
clc
jb
insl
stos
push
push
dec
cmpsl
jl
es
pusha
data16
cmp
mov
lret
dec
imul
cli
dec
push
pusha
or
mov
mov
fsubs
loopne
or
xchg
cmp
adc
pusha
adc
pop
dec
ds
jbe
adc
cmp
imul
dec
push
inc
out
mov
push
and
lods
xlat
push
aam
rep
jl
inc
adc
xchg
inc
push
and
repnz
cwtl
and
clc
mov
shll
sub
push
inc
bnd
mov
into
popa
pusha
out
imul
rorb
jb
mov
or
adc
cli
dec
daa
mov
sub
mov
push
push
loop
xchg
fsubrp
cmp
adc
ret
ja
test
clc
inc
dec
int
pop
xor
rcr
pop
fiaddl
stos
xchg
mov
xchg
mov
fsubp
xchg
mov
lods
jb
jmp
cmp
pop
xchg
push
cmc
cmp
leave
dec
jl
xchg
adc
lds
fadds
push
fisttpl
movsl
jp
and
fsubp
add
aam
push
pop
sbb
or
jp
js
cli
test
dec
dec
gs
outsl
push
inc
stos
repz
ret
cltd
or
mov
adc
mov
mov
and
mov
stos
rsm
ret
dec
push
stc
loope
fldt
fists
daa
test
mov
sub
pushl
movsb
adc
push
mov
add
hlt
dec
jnp
out
jno
jl
hlt
jb
mov
int
loopne
cmp
sub
rolb
inc
xchg
mov
xor
add
push
jl
popf
fsubl
loopne
jbe
test
out
xchg
in
sti
stos
movsl
jb
stos
or
inc
outsb
mov
les
and
sbb
fiaddl
cld
add
cli
mov
mov
pop
leave
mov
std
xchg
int3
fistps
mov
fucomp
ljmp
les
cmpsb
mov
jl
adc
sub
js
xor
xchg
hlt
repnz
div
adc
sti
pop
add
push
mov
jns
test
mov
loopne
xor
inc
dec
rcr
testl
push
sahf
mov
insb
scas
add
mov
dec
jmp
daa
lock
push
mov
jmp
hlt
or
jecxz,pn
test
cs
and
and
testl
cwtl
mov
loope
mov
and
xor
jmp
xchg
sbb
stos
xor
and
mov
adc
popa
adc
lea
xchg
xchg
loopne
ret
and
mov
inc
add
insl
repz
mov
ss
mov
idivb
dec
outsb
dec
mov
jle
jne
dec
loop
jo
lcall
std
jne
dec
lock
test
cmp
sahf
cmp
gs
insl
sub
lods
adc
push
fisubs
es
movsb
cmpsb
outsb
idivb
mov
cmp
paddd
sub
xor
mov
fnstcw
outsb
mov
jp
dec
mov
push
add
aaa
mov
imul
push
pop
cltd
mov
imul
pop
xor
dec
inc
mov
arpl
cmp
and
mov
sub
mov
popa
adc
xor
les
xchg
pop
sbb
cs
testl
dec
rclb
dec
cltd
mov
mov
cmp
loop
into
sbb
popa
cmpsb
rcll
repnz
es
xchg
mov
out
fsubrs
movsl
push
jno
push
in
aad
and
test
lret
add
push
and
in
adc
out
lret
cmpsl
icebp
dec
ret
insb
lds
fsubrl
fldenv
pop
or
push
fldenv
loop
out
inc
test
repnz
lahf
jno
pushf
xchg
dec
sub
hlt
push
scas
daa
jne
cwtl
dec
out
cmp
mov
xorl
mov
ret
aad
xchg
mov
shll
push
sbb
mov
inc
mov
icebp
cmp
test
push
add
cmp
xchg
mov
mov
fwait
loop
into
inc
xor
sub
pop
pop
pop
mov
out
cwtl
push
adc
jnp
dec
std
imul
lcall
test
jp
inc
in
inc
and
mov
shlb
jb
fistpll
outsl
xchg
jbe
imul
in
jmp
loop
out
shr
loopne
pop
lahf
inc
std
xchg
or
dec
xchg
inc
mov
mov
jns
mov
fildll
cmp
hlt
xchg
insb
inc
clc
mov
je
aas
add
xbegin
clc
mov
add
sbb
sti
inc
sbbl
ss
mulb
pushf
add
dec
in
xchg
mov
iret
fistpll
dec
or
pop
adc
stc
push
aad
xchg
cmp
xchg
orl
xor
mov
jnp
mov
dec
mov
lahf
or
into
repnz
pop
fcmovnbe
inc
or
mov
sub
ss
mov
lock
sti
push
inc
out
cmp
add
sbb
out
daa
push
mov
out
shr
jmp
call
arpl
jecxz
add
stos
in
mov
ret
or
pop
add
call
or
cmc
pop
roll
cld
clc
cli
adc
sub
mov
out
orl
pop
ret
negb
fdivrl
xor
pop
out
cmp
inc
fldenv
pop
in
jno
lcall
jae
xchg
push
int3
mov
and
xor
sub
xor
clc
pop
sarb
js
lea
mov
mov
fisttpll
sub
and
insl
ficompl
push
xchg
dec
push
push
loopne
xchg
cmp
out
outsb
inc
fbstp
in
sarb
push
lcall
xchg
pop
pop
xchg
cmp
add
pop
jne
movsl
adc
xchg
mov
idiv
jno
mov
push
daa
rolw
addr16
inc
or
and
xchg
jb
or
stos
out
sahf
movsl
dec
mov
js
inc
pushf
add
mov
scas
jbe
push
out
lock
mov
mov
mov
jns
sub
pop
les
cwtl
sbb
dec
rolb
add
xor
jb
mov
out
push
adc
cwtl
adc
jg
rorl
scas
push
mov
and
stos
imul
popa
adc
mov
imul
adc
mov
idivb
shr
je
inc
push
dec
rol
movsb
pushf
mov
jg
mov
mov
dec
and
test
dec
ja
inc
ret
sub
dec
daa
mov
lods
int3
mov
cli
add
fnstenv
lock
pop
jo
mov
enter
lcall
aam
mov
xor
addl
sbb
rcrb
push
pop
cwtl
popf
lock
mov
or
jo
aaa
scas
or
inc
sub
lods
aas
nop
dec
into
pop
mov
daa
fxtract
xchg
or
jg
gs
cmpsb
xor
test
loope
add
aas
popa
mov
cmp
add
xchg
jl
mov
sbb
popa
or
ljmp
jns
dec
jns
fldcw
insb
js
mov
mov
xchg
mov
push
scas
aaa
hlt
shrb
pusha
sub
jmp
pop
loope
pop
fisttpl
sub
sub
or
and
out
xchg
enter
xchg
sub
adc
clc
daa
pop
mov
dec
fdivl
mov
sahf
loope
adc
shll
rolb
in
dec
pop
icebp
int
sbb
lods
out
insl
push
cmp
mov
pop
das
mov
lret
add
mov
jbe
and
add
push
add
mov
mov
push
inc
jp
sub
nop
mov
shll
pop
jbe
inc
jno
aam
insl
pop
mov
mov
mov
xchg
test
dec
cld
sbb
push
popf
mov
xchg
sub
scas
or
imul
dec
data16
pop
fs
mov
add
popa
pop
sbb
pusha
xchg
mov
fs
aad
scas
push
mov
pop
cmp
lods
or
xchg
ficoml
pop
mov
adc
jmp
cmpsl
cmp
nop
dec
xchg
jg
scas
ret
mov
rolb
pushf
out
add
sbb
mov
out
movb
dec
xchg
fwait
adc
movsb
add
jno
dec
cli
mov
rclb
fsts
ss
and
xchg
es
mov
push
sbb
and
fldcw
or
test
ret
int3
push
clc
add
xor
or
ss
cmp
add
in
lods
arpl
lahf
sti
arpl
and
sbb
roll
inc
push
mov
jg
mov
pop
lods
dec
inc
xchg
push
pop
mov
imul
arpl
xorb
jl
imul
mov
sbb
mov
ja
dec
sbb
jp
mov
jae
sbb
mov
pop
test
push
xchg
xchg
sbb
mov
movsb
and
out
test
repnz
les
lcall
in
es
inc
cmpsb
inc
in
xor
lods
mov
insl
mov
imul
xor
cltd
push
in
mov
repz
xor
int3
nop
mov
fsubl
adc
fstpt
pop
or
fs
jns
cmp
les
fisubl
insl
jecxz
fsubrl
sub
xor
test
cmpsb
add
and
js
xor
push
jmp
out
xor
jecxz
inc
int
xchg
stc
dec
leave
idivl
inc
mov
jb
pop
mov
cli
or
mov
aam
dec
dec
sbbb
mov
addb
xchg
gs
in
inc
jmp
fucomi
inc
lds
ja
mov
stc
cld
sub
lcall
sub
mov
xor
jnp
pop
ja
in
cmp
dec
lret
xchg
xor
lcall
jo
jcxz
in
test
dec
in
icebp
dec
stc
lds
ret
stos
mov
pop
loopne
mov
fs
and
jecxz
jo
outsb
mov
adc
gs
adc
cmp
xchg
mov
pop
int3
pop
add
and
xlat
sbb
sbb
sub
push
xor
cmp
sbb
stos
sbb
and
jno
clc
cltd
push
stos
inc
sub
sbb
scas
inc
cmp
sub
adc
xorl
es
in
pop
arpl
fdivr
popf
xor
jl
xor
dec
ret
das
arpl
or
dec
test
iret
in
stos
gs
dec
mov
clc
cmp
daa
cld
or
loope
xor
lcall
jae
lret
adc
icebp
popa
mov
hlt
push
mov
mov
xchg
jle
gs
push
out
jecxz
std
adc
popf
sub
xchg
push
out
sti
aaa
clc
iret
test
out
addr16
rorl
sbbb
inc
iret
fdivrl
push
mov
mov
cmp
loope
jmp
sbb
ss
cwtl
cmp
mov
popa
pop
and
les
mov
mov
sti
mov
aad
enter
cmp
imul
push
xchg
inc
cli
mov
adc
mov
mov
mov
leave
dec
data16
adc
nop
mov
mov
lret
add
into
push
in
stc
out
aad
sbb
call
pop
fdivrs
fstpt
push
jae
shrb
mov
jnp
imul
cmpsb
push
andb
gs
inc
mov
scas
pop
clc
ja
fs
daa
sbb
ret
aas
cmpsl
mov
jbe
fwait
xor
stos
fistpll
icebp
aas
incb
icebp
push
ds
lret
int3
dec
jmp
add
test
sbbb
lds
das
mov
aad
push
in
inc
rolb
mov
mov
or
jb
push
push
aaa
adc
stc
enter
iret
fwait
gs
jp
pop
xchg
movsl
cmp
xchg
sbb
bound
cmp
cmp
lcall
lock
sub
sbb
mov
mov
popf
dec
test
mov
cltd
icebp
clc
dec
jge
mov
mov
sub
icebp
jle
mov
xor
pop
mov
inc
sbb
shl
inc
movsb
adc
mov
mov
add
lock
add
in
pop
cmp
fwait
test
pop
mov
jg
jae
test
pop
mov
into
lcall
ret
mov
xor
mov
or
inc
int
icebp
outsb
repz
xor
adc
sbb
pop
cmpsb
out
adc
dec
sub
and
jno
inc
xor
repnz
popl
out
sub
movsl
mov
jno
fmull
sarl
cli
sti
jle
push
stc
repz
pop
sahf
inc
inc
sarl
lcall
jne
int3
ljmp
mov
add
out
mov
stos
fsts
outsl
adc
int3
in
mov
clc
mov
jle
push
sti
out
pop
jle
int
ss
and
pushl
gs
int3
cli
cli
and
push
push
pop
cmc
loopne
loope
fiaddl
rcr
push
add
dec
xchg
adcl
das
cmp
push
in
gs
cmp
push
js
adc
or
xchg
aaa
cmp
lds
loope
call
cld
push
mov
loope
jno
int3
cmp
pop
loope
icebp
xchg
ret
jmp
cmp
notl
aam
mov
push
dec
loope
aas
in
add
outsl
lds
clc
iret
cmpsb
cmp
push
pop
jo
cld
mov
movsl
mov
imul
add
sub
mov
mov
adc
jae
std
pop
movsb
push
test
mov
es
xor
jo
dec
jno
mov
inc
loope
adc
xchg
rorl
mov
arpl
sbb
loop
mov
adc
cmp
adc
in
xchg
movsl
cmpsb
ds
sahf
cwtl
arpl
jge
movsb
sti
adc
push
push
lods
insl
rorl
push
mov
xor
mov
fwait
loope
inc
adc
adc
dec
adc
ret
or
loopne
sub
add
scas
pop
ljmp
jno
out
cmp
sti
gs
mov
es
in
xorb
fdivrs
shrl
mov
cmc
daa
adc
shrb
mov
aaa
push
jg
push
rcrb
jo
xchg
fsts
push
imul
inc
xor
cmp
mov
adc
or
jb
lcall
fcmovu
jp
insb
fcomi
and
and
pop
cs
jle
add
push
mov
clc
jle
repz
dec
imul
mov
cs
jo
dec
xchg
mov
lret
mov
lcall
test
jge
dec
into
mov
and
out
mov
mov
mov
cltd
insb
into
out
sub
fmuls
repz
orl
ret
in
mov
push
mov
mov
int
inc
fxch
add
nop
adc
ret
push
xchg
cmp
cltd
mov
add
mov
cmp
ds
and
fdiv
cli
ss
cmpsl
lds
push
and
and
push
test
lds
cmp
inc
dec
push
jmp
daa
f2xm1
nop
push
popa
mov
dec
inc
mov
adc
mov
paddsb
pop
jns
push
mov
sbb
pop
out
fistps
push
fwait
test
enter
jo
xor
lods
add
mov
and
outsb
sbb
or
int3
rol
sub
loop
lahf
mov
pop
mov
push
scas
sbb
lods
push
mov
mov
xor
push
sbb
cli
mov
jnp
stos
ret
pushf
inc
sbb
mov
clc
shll
mov
movsl
or
push
roll
test
pushf
out
inc
imul
xchg
inc
ljmp
testb
das
rcrl
in
mov
setp
cmp
das
mov
or
and
popa
mov
push
arpl
push
mov
icebp
dec
lods
ds
or
push
lea
mov
cmc
ss
push
adc
cld
call
xchg
push
push
jae
sbb
mov
jp
and
cs
ljmp
notl
or
jmp
push
cmpsb
adc
outsb
sub
icebp
mov
inc
sub
sarb
mov
mov
jb
out
xchg
pop
rclb
roll
push
stos
cmpsb
stos
pop
xor
aaa
movsl
repnz
adc
adc
sub
cmp
mov
test
jl
fdivs
repnz
push
mov
adc
inc
imul
hlt
cli
push
leave
push
inc
out
ljmp
lods
call
push
shll
sti
lahf
pop
and
mov
insb
adc
cmpsl
push
movsl
test
sbb
or
jle
dec
inc
imull
lcall
outsb
sub
pop
dec
add
pop
popf
push
inc
ds
pop
in
mov
sbb
push
mov
sar
and
jo
jne
popf
sti
adc
sub
and
ficompl
adc
inc
in
jno
out
rcrl
lea
jae
fsubrp
rcr
out
inc
mov
fsubl
data16
sbb
fistps
jecxz
aaa
repz
lret
sbb
mov
data16
gs
mov
inc
cmc
outsl
sub
jl
mov
cli
mov
or
mov
jmp
jle
add
jb
xor
mov
test
push
or
push
inc
jle
movsl
je
hlt
xchg
or
xchg
mov
pop
lcall
js
pop
add
fs
sarb
loop
lret
pop
in
das
dec
data16
icebp
fwait
sub
push
jecxz
cmpsb
mov
jge
cmpsl
retw
popa
push
out
mov
bound
xchg
lret
push
mov
jge
cli
and
fs
clc
in
push
repnz
js
outsb
cmp
call
pop
data16
loope
push
dec
push
imul
fldl
fsubl
punpckhdq
inc
mov
imul
lods
movsl
lahf
jne
mov
push
insw
jb
in
es
enter
sahf
jl
out
jae
out
scas
jp
clc
xchg
adc
fmull
push
outsb
fs
add
es
out
es
or
pusha
rorb
pushf
test
shr
loope
pop
add
jmp
mov
mov
inc
xor
popf
dec
js
rorb
int3
lret
pop
dec
mov
repz
incl
loop
push
movsw
fsubrl
adc
or
xchg
sti
push
jbe
adc
push
rol
leave
fistpl
xor
test
or
xlat
mov
xchg
cmpsl
or
sub
lahf
xchg
mov
push
jbe
adc
js
mov
cmp
sbb
or
pop
stos
lahf
call
mov
dec
aaa
testl
mov
cvtps2pi
lahf
repz
mov
daa
rorl
ja
shr
pop
pop
pop
mov
mov
lret
nop
jnp
adc
sub
in
repz
iret
aas
lea
sahf
scas
leave
sarb
mov
sub
pop
jge
insb
pop
std
and
sbb
pushf
push
pop
xor
movb
test
or
cmp
pop
cmc
ja
xchg
mov
insb
xlat
test
test
cmp
jns
mov
dec
mov
xchg
leave
pop
sub
mov
jne
cmpsl
push
cwtl
pop
jl
rorb
mov
jae
orb
popa
add
imul
stc
jge
inc
add
hlt
loop
scas
dec
std
imul
cmpsl
jmp
mov
xchg
push
add
js
pop
icebp
sub
cmp
mov
ja
dec
std
jmp
jne
adc
pop
mov
pop
jge
pop
inc
inc
subl
pop
pusha
sbb
rcr
pop
and
and
mov
sbb
cmp
jns
daa
xor
pop
xor
inc
add
sub
daa
xlat
mulb
jne
clc
repz
fsubr
jle
sub
pop
rcrl
aam
js
inc
xchg
fdivl
fsubl
dec
dec
pop
and
jecxz
xor
fstpt
xchg
fnstenv
dec
dec
mov
movsl
jge
shlb
jb
mov
and
jl
dec
or
cltd
lcall
aam
push
aad
jecxz
sub
clc
xor
out
int3
pop
add
mov
add
mov
push
adc
jge
outsl
and
sbb
mov
cmp
leave
shr
push
mov
push
test
sarl
outsb
subl
push
mov
cmp
xchg
pop
jae
cmp
js
loopne
push
sbbl
ja
shll
loope
in
cmp
fcomps
xor
out
dec
out
add
cmp
dec
inc
sbb
fdivrs
inc
stc
fldenv
sbbl
mov
leave
cmp
outsb
and
jle
push
cmp
add
in
mov
out
sub
and
add
jbe
popf
mov
es
push
mov
dec
hlt
mov
call
mov
pusha
and
fidivrs
sbb
fistl
adc
inc
jne
cltd
test
xor
xchg
push
mov
push
rorl
in
mov
push
les
jne
lods
xchg
fbstp
movsl
sbb
or
pop
or
pop
fwait
insb
js
add
rcll
cmp
inc
dec
shlb
pop
js
and
cmpsb
clc
jmp
into
xlat
fadds
dec
or
in
inc
outsl
cld
sbb
cmc
insb
xchg
jl
xor
dec
sti
mov
lcall
gs
mov
xor
leave
xchg
rcll
loope
in
inc
jne
fstpl
dec
add
inc
jne
jge
or
push
iret
stos
cmpsl
inc
xchg
aaa
subb
mov
dec
imul
mov
fs
cmp
xor
sub
in
xor
dec
push
mov
cli
jae
sub
repz
sbb
inc
lock
ss
popf
js
iret
in
pop
gs
repz
jg
ds
mov
mov
test
cmpsb
sub
addr16
inc
ret
lock
xchg
mov
pop
push
and
mov
fisubrl
mov
or
cmp
pushf
jl
lahf
jmp
inc
sub
add
jge
mov
sub
dec
or
xor
and
xor
mov
sub
shrb
js
aas
pop
mov
subb
pop
loopne
std
cs
xchg
cwtl
cli
push
cmpsb
adc
xchg
push
stc
jg
in
mov
mov
int3
out
add
addl
jl
push
inc
fstl
popa
out
arpl
cmc
xchg
pop
dec
out
ret
pop
loopne
loopne
inc
shll
mov
push
jp
xchg
pop
sub
out
mov
enter
mov
stos
jg
cmp
out
lret
push
pop
dec
nop
stos
inc
xchg
sub
push
mov
dec
addl
pop
daa
imul
cmp
jbe
icebp
out
adc
jl
adc
push
add
adc
jmp
aam
data16
push
mov
mov
jl
pop
jo
repnz
daa
pop
jle
into
inc
inc
jo
sub
push
adc
cwtl
fs
cmc
push
in
cmp
stos
push
outsb
sbb
dec
insb
out
gs
mov
leave
mov
jle
in
xchg
mull
adc
out
inc
loope
fnstenv
mov
xchg
aas
adc
or
and
cwtl
fists
fsubl
inc
fistpll
stos
cmp
std
add
push
stos
stc
sahf
xor
cwtl
addr16
push
mov
mov
pushf
and
les
mull
call
sbb
out
nop
jae
jl
lods
and
orl
popf
pop
mov
iret
mov
fcoml
and
out
cmp
loop
pusha
pop
aam
data16
out
push
push
xchg
mov
jmp
push
pop
xchg
loopne
mov
imul
aas
jl
cmp
pop
das
fimull
stos
pop
inc
push
cltd
leave
jno
in
imul
mov
jp
adc
jg
dec
or
mov
ljmp
inc
inc
xchg
pop
or
movswl
insl
adc
sbb
les
cmp
pop
sub
add
std
inc
cmp
xlat
imul
xor
test
loopne
repz
out
add
shlb
cmp
xor
mov
insb
pop
arpl
mov
faddl
jns
or
bswap
clc
pop
xchg
push
adcb
addr16
cld
cltd
aam
jecxz
testl
push
mov
dec
pop
popf
stos
or
push
out
scas
and
cmp
loope
jl
adc
je
inc
mov
mov
pop
cmp
inc
das
sbbb
pop
cmpsb
icebp
or
push
call
ja
in
fidivrl
push
xor
cmpsl
dec
dec
into
sub
hlt
push
ljmp
dec
mov
mov
mov
jae
jge
into
push
imul
pop
imul
popf
sub
clc
or
scas
cmpsl
dec
into
out
lock
in
arpl
int3
lods
xchg
cmpsb
xchg
xchg
mov
adc
ja
insb
inc
jae
add
sbb
repnz
inc
rcrb
and
pop
fsubl
dec
jg
in
mov
adc
nop
cmc
out
sub
inc
push
arpl
ljmp
inc
push
mov
cmp
push
xchg
sbb
mov
lds
frstor
cmp
sbb
rcrb
dec
pop
cmp
xchg
ret
mov
lock
int
fs
xchg
leave
pushf
adc
out
fs
inc
daa
or
pushf
mov
js
nop
jb
xchg
jno
cmp
mov
and
rorl
inc
dec
cmp
icebp
cmp
mov
andb
jmp
and
lds
dec
adcb
xchg
daa
and
xchg
sti
iret
mov
data16
push
ret
cmp
pop
and
cmp
cmc
and
into
mov
scas
jle
repnz
int
loope
sbb
scas
mov
push
lahf
pop
mov
shlb
cmpsl
dec
mov
arpl
pop
das
sub
pop
ret
pop
lods
xor
insb
daa
notb
adcb
xor
push
fsubrl
hlt
xor
mov
sbb
push
dec
dec
cs
je
sub
cmc
cmp
test
mov
rclb
out
cmpsl
xor
stc
mov
or
jmp
adc
ja
fimuls
in
lcall
jle
pop
jae
xchg
push
aam
push
lods
inc
pop
pop
mov
push
das
or
sbb
fildll
adc
outsl
mov
cmp
xlat
lret
push
loopew
dec
dec
add
dec
sub
push
scas
mov
inc
and
pushf
xchg
push
mov
rolb
and
aas
icebp
ret
sbb
jge
shl
mov
jb
mov
or
in
mov
and
sbb
mov
xor
mov
or
and
cmpl
shl
loopne
jp
ret
ret
movsl
sbb
add
jmp
mov
pushf
cmp
or
push
ret
nop
inc
sub
enter
mov
mov
sub
pushf
into
hlt
xchg
imul
imul
cmc
pop
daa
fwait
hlt
in
or
call
mov
inc
cmpsb
es
sbb
or
dec
pusha
cmp
cmc
add
cmpsb
inc
xchg
xor
rcll
fisttpll
ja
sbb
mov
cld
jg,pt
sbb
jb
sti
mov
addr16
inc
mov
inc
lret
or
cli
sbb
fisubl
pop
cli
ret
mov
dec
xlat
inc
adc
mov
in
pop
xchg
cmp
pop
or
shll
notb
pop
fisttpl
inc
inc
or
clc
out
mov
insl
push
cs
mov
cmp
xor
push
push
mul
pop
mov
iret
mov
dec
je
mov
ds
adc
daa
pop
imul
pop
and
push
mov
mov
inc
scas
or
jp
and
test
sub
jl
ret
and
pop
repnz
xor
loopne
les
xlat
pop
in
dec
out
add
sarb
iret
iret
lods
inc
shll
mov
enter
mov
in
je
lds
or
adc
in
push
into
out
cmp
sti
pop
test
sbb
ds
add
imul
pop
and
add
addr16
add
push
aam
xchg
mov
dec
fcmovu
xor
lods
imul
or
pop
jp
cld
mov
cmpsb
sub
or
fpatan
int3
mov
jmp
sbb
and
mov
test
shll
mov
xor
data16
lock
sbb
xor
lahf
mov
popf
loop
fsubl
adc
jg
aad
bts
and
mov
adc
xor
cld
loopne
mov
sbb
mov
and
sub
mov
es
pop
fistl
inc
xchg
adc
dec
loop
notl
enter
pushf
std
mov
xchg
cmpsb
mov
and
xchg
mov
and
push
sti
mov
ja
push
pop
mov
ret
pop
mov
insb
arpl
inc
push
sbb
das
gs
mov
xchg
mov
outsl
jecxz
lock
cltd
fs
cmpsl
and
inc
sub
gs
adc
sub
sahf
dec
es
xor
insb
pop
push
dec
fwait
lcall
lcall
enter
or
push
xchg
jbe
filds
lds
sub
pop
sub
pusha
jl
jle
in
int3
adc
xchg
nop
popa
dec
push
mov
iret
jge
or
addr16
inc
push
int
cmpsl
push
adc
aad
pop
das
sahf
push
xlat
adc
push
out
mov
insb
and
dec
insl
cld
mov
inc
notb
add
fwait
outsl
movsl
rorl
mov
add
cmp
in
sub
lret
jp
in
je
out
aas
mov
jae
jp
mov
icebp
fmull
sbb
repnz
jmp
les
adc
repnz
pop
pop
mov
mov
mov
cmp
xchg
xchg
lds
jl
xchg
jno
lods
xchg
cltd
data16
mov
sub
jle
and
cmc
xchg
mov
jp
jecxz
cmp
push
xchg
pop
push
push
sarl
mov
or
add
nop
shll
pop
pusha
cmp
and
inc
xchg
add
stc
sahf
jne
adc
out
arpl
sub
or
shll
adc
push
out
test
pushf
inc
daa
imul
xor
sarb
jmp
jecxz
xor
jl
xchg
jmp
sub
pop
jne
fldl
cwtl
jecxz
jo
pusha
dec
inc
xor
mov
int
push
decb
mov
sbb
movsl
xor
cld
or
mov
arpl
int3
orl
pusha
xchg
out
andl
mov
js
inc
fsubrl
inc
gs
push
stos
insl
hlt
scas
into
ljmp
mov
loop
lea
xchg
in
adc
jo
fiaddl
dec
loopne
test
aaa
cmc
inc
outsb
xor
add
mov
jnp
push
dec
cld
jns
add
xchg
jbe
jns
test
lret
sbb
movsl
push
arpl
test
mov
adc
mov
add
int3
jbe
sahf
jle
jp
frstor
pop
push
outsb
mov
mov
pop
jecxz
mov
gs
and
jns
add
scas
push
lret
adc
mov
jbe
mov
push
mov
clc
push
aas
into
push
pusha
out
call
es
and
mov
sahf
out
sahf
ret
xor
dec
pop
outsb
sbb
sub
xchg
dec
xor
loope
out
shlb
fldl
xchg
xor
xor
mov
jb
cmp
mov
inc
jle
xchg
lea
orb
mov
dec
paddusb
inc
push
push
cli
pusha
cwtl
adc
and
cmp
mov
icebp
stc
mov
pop
lret
mov
ror
inc
repz
pop
std
mov
push
mov
push
pop
adc
pop
imul
test
sub
jg
cmpsb
testb
mov
repz
mov
mov
sbb
sahf
inc
push
imul
stc
cmc
outsb
stos
and
call
out
ljmp
mov
push
inc
jp
sub
or
mov
test
shll
adc
sti
pop
mov
add
ficompl
cmp
adc
lea
cltd
jae
out
test
mov
mov
js
pop
ret
lds
xchg
jmp
mov
push
loope
pop
rolb
shll
ds
orb
pusha
ds
mov
mov
mov
int
rclb
xchg
fwait
das
ljmp
lcall
xor
mov
iret
lock
insb
test
aam
xor
jb
xor
ret
sti
mov
test
jae
psrad
xlat
add
sbb
pop
pop
or
sbb
int
push
xor
and
push
jne
jno
addb
or
xchg
lods
cmpsl
lret
pop
pop
jge
imul
and
dec
imul
outsl
and
stc
and
add
jb
sbb
mov
add
or
inc
add
mov
mov
lcall
mov
inc
jmp
movsl
movsb
in
mov
inc
in
fs
sbb
add
pop
jns
jbe
jg
lret
cmp
popf
jmp
imul
push
push
xchg
insl
adc
xor
sahf
sub
xchg
repnz
lldt
insb
dec
sbb
insb
cs
testb
lret
or
xor
inc
out
push
cmp
cmp
cld
ret
int
shll
dec
adc
adcb
shr
fsubp
dec
sbb
bound
xchg
call
sbbl
fsubs
adc
cmpsb
repz
jae
pop
sbbl
bound
xlat
xchg
jl
sti
popa
subb
add
jl
call
orl
int
inc
ja
cmc
mov
outsb
movsl
jle
mov
add
cmp
pop
cmp
arpl
add
fs
fprem1
cmp
xchg
nop
adc
inc
loopne
rcrl
stos
dec
mov
xchg
mov
push
xor
inc
jl
test
or
xchg
push
jb
and
inc
and
dec
movsl
nop
xchg
mov
mov
mov
dec
cld
pop
dec
push
iret
test
pop
fwait
pusha
sub
push
jmp
cltd
add
aaa
or
outsb
sbb
daa
les
out
mov
push
loope
xor
test
and
or
lods
mov
mov
cmpsl
push
out
inc
popf
mov
sbb
jge
pop
cmp
arpl
pop
inc
dec
mov
cmp
pop
jl
imul
stos
xchg
ffreep
or
cmpsb
add
in
iret
xchg
pop
rolb
loopne
aad
fsubs
mov
add
adc
cmc
adc
sub
mov
pop
mov
in
push
das
les
jnp
pop
lret
mov
ds
icebp
sti
mov
xor
nop
cmp
in
fsubl
sar
add
inc
stos
pop
mov
lret
xchg
adc
daa
stos
fsubs
bound
aam
push
or
insl
pop
iret
inc
xor
decl
shrb
scas
sub
fs
test
int
rcrb
mov
jae
mov
mov
add
setnp
inc
sub
and
inc
sbb
add
sbb
xchg
mov
and
jb
fbld
lret
or
sahf
cmp
out
push
dec
insl
ljmp
pop
inc
outsb
sub
lret
inc
inc
push
arpl
stos
popa
mov
sub
push
pop
cmpsb
jne
nop
add
xchg
jb
add
lds
push
dec
in
or
imul
pop
pop
mov
push
nop
adc
gs
arpl
stos
loopne
lock
dec
push
mov
pop
adc
xor
or
mov
shrb
ds
mov
dec
bound
sub
test
push
bound
stc
ss
scas
rcl
cs
or
xchg
jg
sbb
je
les
cmpsl
xor
inc
xchg
aam
jae
incb
adc
cwtl
xchg
mov
push
out
cmp
push
negl
in
lods
xchg
jecxz
cmpsl
insl
push
mov
lods
stc
xchg
sbb
insl
push
add
insl
xor
mov
clc
inc
dec
movsb
jnp
pop
xlat
xchg
leave
push
lcall
and
jnp
or
lahf
jmp
mov
mov
inc
outsb
xor
xchg
call
orl
sub
mov
ljmp
daa
pop
xlat
ds
outsl
test
inc
sub
cltd
add
push
fwait
jle
fdivl
aaa
loope
call
and
cmp
mov
pop
jbe
test
je
xor
jmp
dec
iret
in
jg
into
repnz
dec
or
cmpsl
push
push
adc
cltd
mov
cmp
cli
push
pop
test
test
ret
dec
push
xor
push
cmc
sarb
nop
adc
jnp
int3
js
out
xor
in
mov
cmp
jl
in
adc
add
filds
jecxz
mov
mov
add
rolb
and
sbb
inc
inc
xor
inc
mov
xchg
push
sarl
xchg
xchg
cmp
popa
jmp
sbb
mov
pop
int
inc
and
or
sbb
imul
or
je
fcoml
aad
push
sbb
lahf
sbb
scas
inc
add
adc
popf
ljmp
mov
call
push
outsb
inc
in
pop
dec
into
push
rcr
aam
sarb
mov
movsl
loop
out
xor
lds
lds
data16
jne
pop
adc
sub
jo
pop
ja
lahf
xor
lahf
sub
cmpsb
pop
add
pop
insb
xchg
mov
dec
cld
inc
and
movsb
mov
aaa
and
jl
ds
adc
dec
inc
outsl
jge
mov
sbb
add
xor
xor
adc
cld
dec
iret
andb
dec
test
jno
inc
mov
push
iret
data16
in
in
aas
test
inc
push
jb
cmc
ficomps
stc
sub
pop
mov
lret
xor
or
xchg
jbe
pop
push
cs
repnz
mov
inc
cli
cmpsl
iret
adc
loop
push
outsb
cmp
sbb
lcall
mov
or
or
mov
cwtl
and
pop
pop
loop
imul
sbb
bound
push
adc
or
push
or
push
test
mov
shlb
fwait
pop
xor
cmp
xchg
sarb
lahf
mov
adc
push
mov
jg
pop
insb
and
sub
imul
mov
or
leave
mov
outsb
insb
push
xorb
pop
mov
cmp
popf
cs
mov
cmp
nop
in
push
mov
sub
popf
les
push
pushf
or
es
pop
jmp
outsb
pop
pop
andb
dec
mov
add
add
cmpsl
js
lods
fs
or
cli
sti
sti
leave
jo
push
pop
out
fcompl
sub
add
out
xor
into
setl
add
xchg
hlt
adc
outsb
shlb
bound
cmpsb
lahf
divb
push
ret
add
jnp
int
pop
push
subb
xor
or
add
mov
cmp
and
mov
push
or
jnp
push
stos
icebp
fidivrs
out
mov
fcomps
inc
and
es
mov
stos
pop
fsubrl
out
insb
jbe
mov
nop
and
incb
test
fnstcw
sub
sti
add
dec
in
pop
push
xor
sbb
xchg
xchg
inc
imul
into
dec
add
imul
push
sub
push
push
pop
adc
outsl
divl
leave
add
push
pop
sub
cmpsl
in
mov
mov
flds
dec
aam
pop
lods
jg
jno
lcall
lret
popf
push
arpl
ret
cmpsl
pusha
loopne
sti
bound
adc
mov
pop
ss
aad
jno
jl
fucomp
incl
stc
lret
stos
cld
mov
inc
loopne
sbb
jl
xorb
mov
push
outsb
pop
je
jge
cmp
mov
and
lods
and
sti
js
cwtl
mov
dec
out
and
int3
aad
add
inc
sbb
addr16
pop
push
sahf
mov
daa
sub
in
shlb
test
mov
lret
ret
lock
inc
xchg
fistl
sub
loop
pop
sbb
arpl
push
or
mov
ljmp
and
and
mov
jo
cmp
push
popa
test
pop
inc
stos
push
lcall
pop
rorl
cmc
jecxz
loopne
lds
scas
mov
mov
cmp
popf
push
or
popf
add
insb
pushf
inc
cmp
jg
clc
mov
xor
icebp
int3
push
es
not
cld
das
sbb
orb
dec
insb
pushf
insl
fdivl
mov
cmp
jl
test
cs
adcb
leave
scas
out
mov
in
aam
popa
jl
ljmp
adcl
jbe
xchg
andl
push
adc
sbb
jb
cmpsb
icebp
lcall
jle
stos
cmp
push
mov
ret
je
mov
xchg
dec
adc
pushf
fldl
jmpw
sub
insl
adc
stos
les
ss
dec
xchg
fidivrl
dec
ljmp
mov
push
fsubrs
test
jns
imul
dec
test
and
insb
push
cmc
sbb
leave
cmp
loop
xor
sub
push
xor
xchg
jnp
xchg
aas
xor
jmp
in
adc
or
pushf
mov
sub
dec
mov
out
dec
dec
dec
ja
xchg
gs
mov
xor
pop
and
xchg
inc
clc
iret
pop
xchg
js
jp
xchg
cwtl
fidivrs
pop
jne
pop
subl
xchg
int
or
nop
je
lcall
sbb
or
dec
adcb
adc
xchg
lcall
and
inc
pop
jecxz
add
test
cmc
shlb
add
jae
adc
stc
adc
push
shrl
and
jns
cmpsb
xor
pushf
dec
sbb
mov
xchg
in
lea
inc
mov
les
int3
jns
sti
leave
mov
dec
push
mov
lret
pop
sub
and
pop
iret
xlat
inc
xor
int3
gs
out
xchg
out
cmp
and
je
fidivs
mov
mov
dec
loope
xchg
mov
in
mov
sub
dec
dec
rcll
lcall
jbe
lods
loop
scas
mov
add
mov
mov
dec
push
adc
stos
cwtl
and
sub
cli
jmp
xor
arpl
loope
and
pop
mov
lock
insb
xor
xor
scas
mov
xlat
adc
sets
jns
popaw
fbstp
pop
in
nop
stos
jge
adc
ret
inc
sub
sarl
jo
cmp
cmp
mov
fld
sbb
insb
pop
mov
jmp
cwtl
scas
jne
pop
popf
sti
dec
adc
cwtl
push
mov
xchg
pop
mov
adc
pop
pushl
out
dec
sbb
ret
pop
test
repz
lcall
xchg
sti
jne
ret
or
adc
nop
daa
mov
inc
data16
cmp
or
mov
rcll
popf
sbb
jae
add
cmp
ror
loopne
jge
pop
xor
pusha
adc
inc
in
and
je
scas
enter
test
push
inc
cmp
xor
subl
push
pop
les
adc
outsl
push
rorb
popa
ret
jge
and
stc
movsb
inc
jo
stos
or
and
xor
rcl
jbe
into
inc
and
xchg
lahf
sub
and
add
mov
pop
add
jns
outsl
mov
mov
int3
out
xor
mov
jns
dec
adc
mov
les
jecxz
daa
fidivrs
adc
and
aaa
arpl
sbb
sub
dec
insl
clc
pop
dec
mov
jae
xchg
pop
cmp
jae
nop
adc
sbb
ljmp
adc
into
xor
rcrb
fistpl
popf
out
jne
pop
int
or
repz
out
xor
mov
cmp
imul
idivb
popl
das
adc
mov
pop
mov
inc
mull
in
push
rcrb
je
jb
sarb
imul
cmp
popf
mov
ret
mov
mov
enter
xor
xlat
outsb
pop
mov
xchg
fstps
in
rep
xchg
push
fwait
jno
mov
daa
sub
idiv
ds
xchg
mov
cld
push
add
pop
adc
bswap
in
gs
scas
mov
fidivrs
push
jns
xor
fnstenv
add
cmp
jle
mov
imull
pushl
cmpsb
mov
inc
loopne
sbb
push
outsl
or
ret
sub
sahf
pop
cwtl
cmp
xchg
add
int
jb
clc
iret
or
adcl
out
decl
fs
fsubl
in
or
push
into
neg
sub
mov
xor
lcall
flds
mov
test
push
movsl
push
movsl
pop
andl
pop
std
lock
inc
dec
xchg
andl
and
push
sbb
ja
pop
push
inc
into
jb
outsb
adc
add
arpl
das
dec
push
dec
imul
mov
jmp
mov
jnp
inc
cmpsl
hlt
xor
cwtl
mov
daa
and
es
xchg
ljmp
mov
jne
into
pop
aaa
movb
cld
mov
pop
movl
push
repnz
jae
into
out
aam
js
and
xor
jae
mov
negb
test
push
lods
jno
in
lock
hlt
jo
dec
cmp
jo
orb
scas
iret
push
pop
mov
movsl
decb
ja
pop
repz
push
ss
sbb
inc
pop
data16
ficomps
dec
lods
xor
or
and
pop
sbb
mov
out
mov
mov
dec
into
cmp
ja
or
adc
mov
loop
pushf
sbb
cmp
sbb
andl
lcall
xchg
sub
add
pop
sub
test
mov
jmp
sub
xchg
dec
andl
mov
out
jl
jnp
pushf
fistps
xchg
mov
cmp
mov
push
enter
push
es
pop
mov
loop
out
arpl
fs
outsl
dec
pop
or
jbe
xor
rolb
push
js
mov
push
stc
cmpsl
xchg
adc
ljmp
popa
jg
pop
out
loop
inc
pop
mov
into
lret
mov
cmc
or
outsb
and
scas
push
scas
std
or
jae
pop
jbe
add
dec
in
scas
and
dec
sub
jmp
push
mov
dec
xchg
mov
push
jnp
cmp
testb
push
dec
das
lods
push
mov
dec
lea
fldt
stos
ljmp
mov
jb
icebp
sti
test
mov
in
dec
aam
mov
and
pusha
dec
mov
sbb
xlat
inc
and
jcxz,pt
xor
lds
test
push
outsl
pop
rorl
lret
nop
movsl
out
xor
test
sbb
inc
cli
xchg
mov
orl
mov
mov
daa
jmp
decb
mov
add
xor
scas
jle
mov
iret
and
rcll
std
xlat
xchg
lods
gs
sarl
mov
fisubs
jne
pushfw
scas
push
push
lahf
insb
pop
xor
mov
lret
jge
mov
sub
fsub
outsl
outsb
push
cs
inc
fcmovbe
pushf
xor
and
sub
xchg
in
enter
outsb
dec
pop
mov
hlt
sbb
mov
cwtl
sub
mov
xor
jmp
aam
mov
ljmp
incl
cs
push
mov
jns
cmpsl
jle
sti
or
out
cmp
lock
cli
sbb
push
cmpsb
cmp
or
xchg
xchg
sub
mov
cmp
push
fbld
jmp
xchg
or
pop
mov
rcrw
xorl
xor
xchg
call
push
push
cwtl
out
mov
lods
push
add
popf
and
pop
or
scas
imul
cmc
xor
jge
push
leave
push
jle
dec
add
mov
ljmp
and
inc
sbb
ret
fadds
mov
sub
lahf
and
lret
mov
jle
jmp
iret
xchg
cmp
ljmp
jb
inc
xchg
gs
push
xlat
mov
test
imul
dec
sbb
in
jae
cwtl
out
inc
lcall
jb
sahf
mov
sub
scas
mov
add
aad
iret
jno
icebp
lahf
push
mov
jo
push
sub
adc
mov
push
add
sub
dec
fdiv
lret
icebp
clc
adc
pushf
sar
cli
jle
inc
test
xor
push
or
jbe
xchg
fstl
cmp
sarl
pusha
mov
jo
lahf
imul
repnz
xchg
mov
in
nop
mov
push
loop
sbb
andb
insb
std
mov
and
mov
dec
pop
jmp
cmp
cli
xchg
pop
xchg
push
lods
int
std
cmc
push
adc
and
lds
jne
fisttps
rcll
ret
jae
sub
lods
mov
push
sbb
out
jo
inc
and
loop
jae
jg
cmpsb
lret
or
or
rcll
movsb
mov
or
out
leave
test
pop
jno
or
mov
lods
into
daa
or
mov
mov
scas
sub
adc
into
mov
mov
and
data16
insl
negb
and
arpl
adc
sbb
adc
xchg
sub
nop
sub
pop
push
cwtl
add
xchg
mov
pushf
int3
loop
fxch
es
cmc
fdivr
inc
jo
mov
mov
lcall
inc
push
cmp
inc
sbb
dec
stos
cmp
jmp
fs
inc
push
push
pop
mov
pop
inc
cmp
jns
add
xor
adc
pop
imull
add
sbb
test
fidivrs
fidivrl
stos
sti
outsb
adc
mov
xor
jmp
cmp
pop
or
mov
lret
sub
fsub
xor
in
fstl
add
dec
mov
stos
mov
repz
xor
enter
cmp
xchg
adc
fildll
adc
addl
and
push
add
cmpb
sbb
ss
push
rcll
push
es
movsl
mov
jge
push
or
mov
iret
adc
mov
nop
cmpsb
add
sti
jno
sbb
mov
push
jno
and
je
jle
xchg
xor
mov
push
mov
jg
arpl
push
pop
frstor
xor
jmp
gs
imul
cmp
movsl
ss
dec
xchg
push
shrb
push
push
rclb
insb
inc
push
push
addb
jp
dec
mov
int
enter
pop
divb
sub
or
push
adc
pop
scas
outsl
loopne
mov
mov
jo
loopne
scas
je
jb
jnp
or
enter
mov
adc
push
lods
nop
and
cmpsl
xor
add
sarb
pop
adc
inc
adc
aas
js
mov
popf
xor
inc
xlat
jo
arpl
mov
sub
or
ret
mov
xlat
xchg
test
pop
sbb
mov
sub
repz
mov
add
mov
mov
loopne
les
pop
sub
push
popa
cmp
push
xchg
inc
sbbl
adc
stos
scas
cld
xchg
mov
fs
sbb
leave
mov
mov
push
and
out
xorl
out
pushl
shlb
fmuls
decl
jg
stc
xor
clc
in
push
loopne
pop
test
push
int
cmp
pop
pop
mov
dec
lods
out
xchg
jo
mov
mov
mov
addr16
inc
lods
test
cs
dec
add
or
fnstsw
subl
inc
jle
movsb
or
lret
pop
dec
jo
cltd
inc
subl
inc
xchg
and
push
aam
outsb
mov
pusha
sahf
fldl
sbb
jo
in
hlt
pop
or
imul
mov
inc
pusha
test
sbb
pop
mov
imul
sti
mov
dec
mov
loop
mov
inc
lret
int
jecxz
jb
cwtl
cmp
icebp
stc
mov
dec
outsb
stc
and
cmp
and
add
loop
loope
push
jno
add
sub
push
jae
cmp
cmpl
repz
push
push
loop
and
testl
and
cmp
xchg
dec
jbe
jo
cmp
jne
mov
hlt
popa
mov
cs
scas
xchg
adc
inc
sbb
pop
jnp
bound
fiadds
inc
fwait
or
cmp
push
adc
out
in
pop
cmpsl
mov
cwtl
push
leave
add
fcmovb
pushf
mov
and
test
ficompl
shlb
jns
dec
loop
dec
ljmp
in
bsf
xchg
daa
and
scas
sti
xor
mov
and
push
pop
xchg
sbb
add
popa
fsubr
dec
arpl
sbb
mov
jmp
ja
add
test
adc
std
sub
rcrb
scas
int
jo
add
pop
cwtl
jae
jb
xlat
jnp
js
inc
sub
dec
popf
mov
xchg
lods
incb
pop
shlb
xor
and
shl
adc
dec
shld
mov
jmp
mov
in
sub
fs
jns
mov
and
sbb
sub
cmp
xor
ss
xor
ds
std
test
pop
pushf
frstor
cli
fs
in
mov
cltd
inc
mov
sub
andb
enter
mov
lcall
push
push
data16
mov
inc
cmpb
sub
addr16
sub
subb
cmp
lds
jp
mov
into
es
repnz
insb
lds
dec
mov
into
sub
roll
adc
clc
iret
ficoms
push
in
mov
movsb
shll
fistps
inc
in
push
and
scas
out
pushl
pusha
dec
divl
ja
jecxz
jmp
pop
sbb
inc
mov
sbb
out
aam
jmp
sub
jno
sar
sbb
dec
pop
lcall
lods
lret
test
xchg
aas
jnp
pop
out
jge
pop
jecxz,pn
mov
cmc
sub
pop
lret
pushf
inc
mov
mov
scas
xchg
add
movsb
inc
add
test
xchg
cmp
loope
out
add
sti
decl
je
add
das
push
loop
push
add
arpl
lds
loope
lahf
shl
mov
fisubrl
scas
mov
in
std
cmpb
sbb
mov
inc
inc
xchg
orb
add
and
sbb
sub
psadbw
gs
sub
rorb
insb
mov
mov
jge
jge
popf
in
push
inc
sub
pop
and
bound
mov
out
mov
test
movb
push
hlt
rdtsc
int3
mov
inc
rol
int
jns
outsb
sbb
test
or
sbb
hlt
xor
pop
cld
mov
mov
sub
bswap
mov
gs
mov
push
repz
icebp
js
adc
insb
mov
xchg
cld
sahf
sub
lahf
push
dec
adc
mov
push
int
test
aad
push
mov
mov
adc
jp
pop
lods
jp
loope
test
adcb
jo
ficoms
dec
daa
adc
xor
stos
jns
sbb
pop
lock
jne
enter
pop
xchg
cli
sbb
dec
cmc
mov
cmpsl
insb
cltd
std
cmp
cli
adc
inc
jle
mov
in
jo
xor
sbb
icebp
in
push
mov
pop
pop
dec
pop
loope
mov
sub
or
fldt
and
movsl
jb
ss
xchg
or
call
outsb
into
add
mov
add
or
pop
mov
int
loopne
mov
iret
pop
shrb
test
jne
pop
fwait
mov
cmp
sub
insb
pop
cmp
dec
cmpsb
and
jmp
hlt
leave
sbb
rclb
add
aas
mov
mov
adc
pop
pop
stos
dec
pop
hlt
fmuls
mov
dec
adc
incb
popf
pop
xchg
sub
adc
pop
mov
fadds
les
and
lret
xchg
add
push
mov
push
sbb
pop
mov
fiaddl
sub
fs
hlt
sub
xor
inc
cvtps2pi
outsb
and
pop
je
or
xor
jb
xor
jmp
fwait
leave
je
frstor
xlat
popa
push
mov
addr16
lds
mov
cs
jp
in
popa
orl
ljmp
jne
stos
mov
pop
xchg
stos
xchg
mov
lahf
inc
push
ficoml
fwait
xor
out
gs
push
push
sbbl
scas
and
lahf
adc
cld
lock
adc
gs
rolb
sbb
mov
dec
sarl
push
inc
lea
pop
imul
mov
mov
sub
movsl
xchg
sub
xor
icebp
cmp
cli
jmp
mov
cmp
notl
xor
or
or
lret
not
movsl
and
and
xchg
cmp
and
push
or
cmp
and
xor
add
mov
mov
add
mov
insb
call
imul
shl
dec
lods
int
dec
and
or
jp
push
mov
push
jmp
fdivl
lea
aam
in
fisttpl
pop
popf
neg
push
popf
out
adc
into
nop
pushf
push
test
dec
aad
push
insb
into
xor
and
and
sub
mov
inc
adc
push
push
and
cltd
mov
fisttpll
shrb
mov
int
sub
add
mov
enter
test
jmp
sub
mov
cmp
mov
push
les
nop
sbb
subb
pop
jmp
mov
pop
idivb
je
in
test
je
push
mov
mov
add
fcmovnu
in
aam
jecxz
stc
push
pop
mov
cmpsl
push
jmp
cmp
fidivrs
xor
and
mov
push
push
fdivs
push
cmp
jmp
lods
jmp
cmp
mov
jmp
into
cmc
xchg
addb
popf
test
mov
loope
jle
test
nop
mov
xchg
xchg
add
mov
mov
repnz
cmp
xchg
add
pop
and
and
xlat
jb
aas
add
leave
push
lds
pop
jl
adc
jne
popf
and
dec
mov
add
cltd
pushf
mov
or
dec
shl
and
xor
cs
dec
mov
insb
das
dec
mov
mov
sbb
add
hlt
call
sti
jne
xlat
or
js
mov
push
ljmp
xorl
rcrl
pop
pop
scas
add
paddb
hlt
mov
gs
jno
repnz
xor
adc
inc
mov
loop
pop
dec
js
testl
int3
mov
or
dec
xchg
lds
jecxz
loope
subps
jl
fsts
aad
fldl
ljmp
mov
pop
aaa
fsts
dec
movsb
and
sbb
pop
adc
int
and
xchg
pop
dec
cmp
push
sbb
fs
or
push
sub
pop
xor
addr16
aam
adc
decl
mov
and
mull
movsl
mov
adc
mov
sbb
jl
adc
in
nop
sub
sub
ret
push
mov
in
pop
mov
sub
xchg
ficoml
jns
lods
rorl
dec
push
mov
xor
add
out
xchg
outsl
je
dec
mov
in
in
aam
out
mov
outsb
popf
lods
add
mov
and
mov
inc
lock
lret
jb
clc
dec
push
cmp
mov
cmp
push
insl
jl
sub
rclb
push
jg
push
je
cmc
lea
adcb
js
jle
adc
in
aad
ds
mov
mov
sahf
xor
daa
ljmp
or
mov
sbb
pop
movsl
mov
lds
jle
mov
pop
gs
mov
cltd
hlt
push
cmp
outsl
lods
or
pop
jne
xchg
aad
mov
mov
and
cmc
outsl
pop
clc
jle
test
stc
mov
mov
mov
xor
fwait
xchg
xlat
mov
fwait
xchg
push
jg
adc
shrl
sarl
cmp
pop
mov
push
and
mov
add
imul
dec
daa
in
mov
in
mov
push
clc
mov
inc
jo
dec
lock
imul
add
cmpsl
das
ret
pop
loope
inc
shrl
int
in
push
pop
xchg
push
jb
xor
xchg
pop
das
clc
stc
mov
add
leave
jge
jbe
ja
scas
push
cmp
add
cs
mov
or
mov
bound
sub
mov
push
andl
push
inc
jecxz
sbb
push
int3
lret
jp
adc
push
cmp
or
xor
ja
fs
mov
xor
lods
inc
or
es
mov
xchg
scas
push
orb
add
adc
pusha
negb
jmp
cmpsb
xor
cmp
jl
scas
pop
sub
imull
lret
cmc
sub
out
or
mov
push
ss
xor
dec
in
jge
div
int3
inc
push
cmp
jge
sbb
sub
mov
pop
mov
push
out
cmp
fwait
mov
imul
jne
or
and
fldl
filds
xchg
xchg
mov
xor
sbbb
xlat
xor
mov
cmp
rclb
or
or
pop
inc
icebp
push
inc
jae
jle
int
mov
hlt
ror
jg
push
mov
sub
lods
insl
add
jae
jb
ss
pusha
into
add
sub
cmp
jne
addb
ljmp
cmpsb
push
dec
arpl
fists
xor
pop
mov
cmpsl
dec
loope
inc
jnp
ret
jmp
sbb
adc
es
stos
add
or
pop
pop
adc
xor
and
scas
outsb
cmp
xor
push
pop
pop
sub
mov
xchg
ret
sbb
cs
pop
xchg
ja
xor
sbb
les
enter
mov
out
sbb
sbb
push
sub
bound
sarl
into
aad
movsb
bswap
jmp
addr16
in
gs
jmp
sbb
loopne
and
scas
pop
mov
dec
lock
add
adc
loopne
test
int
or
fs
xchg
xchg
xchg
xlat
out
push
or
ja
loope
dec
inc
aaa
test
and
push
sbb
int3
mov
adc
jmp
out
mov
icebp
push
and
add
imul
push
xchg
loope
mov
adc
movsb
wbinvd
xchg
mov
jle
pop
js
add
mov
sbb
sub
es
jae
repnz
adc
push
lds
enter
inc
or
adc
add
push
inc
mov
jne
cmp
ret
and
out
inc
fdivs
cmp
rorb
clc
pop
pop
aam
cmp
cltd
movsl
lea
leave
cmp
mov
push
mov
icebp
pop
lods
and
int3
push
ds
mov
divb
sbb
dec
sbb
sbb
xor
adc
sub
fdivl
into
mov
repnz
pop
test
mov
lock
and
fdivrl
testb
sbbl
aas
ss
sbb
adc
sbb
cs
push
mov
pop
int3
cs
and
fstl
mov
mov
sub
add
mov
xor
add
gs
shlb
dec
ret
outsl
add
out
sbb
xchg
dec
ds
mov
jo
xchg
outsl
stos
cmpsl
ljmp
pop
cmp
scas
and
sbbl
shll
mov
add
loopne
push
mov
adc
sub
or
push
and
push
jnp
jb
cwtl
pop
stos
ds
mov
dec
cld
cwtl
fistpl
sbb
in
xor
hlt
movsb
xchg
xchg
repnz
sbb
loop
sbb
ljmp
out
xchg
jnp
test
xchg
adc
inc
jg
mov
adc
jo
add
push
gs
push
ds
ja
xchg
imul
call
mov
test
xor
xchg
mov
inc
out
mov
cmpsb
fstl
xchg
push
pop
cmp
arpl
lret
cmp
aam
lock
xchg
push
pop
mov
icebp
dec
aaa
cmp
gs
xlat
les
dec
in
pop
dec
mov
cmp
ljmp
out
xchg
negb
add
mov
popa
sub
xchg
je
lods
in
mov
gs
push
mov
cmp
clc
sbb
lea
mov
jle
mov
shl
xchg
int
pusha
mov
jl
out
cwtl
cmpsb
decl
pop
mov
std
int
fneni(8087
scas
push
add
mov
test
jmp
sub
outsl
mov
leave
push
mov
dec
pop
adc
imul
call
cmp
xchg
cmpsb
repz
dec
add
jae
data16
movsl
pusha
cs
xchg
mov
mov
pop
mov
rcr
push
jge
hlt
jb
xchg
pop
test
mov
notb
inc
adc
xchg
xor
jg
dec
stc
xchg
adc
push
jl
sub
or
es
pop
call
movsl
movsl
mov
mov
jne
insl
dec
in
pop
mov
xchg
fstpt
aad
lods
push
mov
add
aas
dec
movsl
dec
jl
outsb
sub
jae
insl
scas
imul
jg
dec
pop
sbb
dec
cld
inc
pushl
cld
fucomip
mov
out
sti
sub
sahf
mov
xchg
fwait
push
sbb
xchg
shll
and
push
outsb
dec
movsl
push
and
into
rcrb
push
xor
lret
jne
or
aaa
lcall
fidivs
xchg
in
dec
es
cltd
ret
lods
sub
add
mov
jb
popa
or
outsb
aad
rol
mov
lds
fdivs
pop
or
cli
mov
or
and
mov
dec
jnp
adc
adc
ja
testl
dec
and
xor
xchg
fcoms
or
fcomps
lea
push
in
data16
out
pop
sti
sub
inc
pop
loopne
mov
mov
aas
mov
push
cmpsb
imul
rcll
jnp
xor
dec
sub
jns
cmc
or
popf
leave
out
push
inc
dec
lea
cmc
xchg
lahf
stos
fdivrl
adc
decl
scas
daa
mov
xchg
mov
cmp
push
dec
mov
mov
pusha
inc
xor
test
daa
or
xchg
xchg
jno
imul
dec
mov
mov
movsl
lds
jae
sahf
xchg
lahf
pop
mov
in
fstl
xadd
dec
in
jmp
aam
cld
pop
jmp
into
rol
sub
scas
jg
xchg
mov
push
adc
in
push
je
and
mov
mov
xchg
mov
out
jle
aad
call
sbb
add
aam
std
jmp
adc
fidivs
in
rcrb
fildll
mov
xchg
pop
test
push
sahf
in
popf
pop
dec
aad
xor
imul
push
push
test
rcrb
jnp
outsb
pop
sub
mov
sub
mov
push
scas
xchg
and
imul
mov
mov
pop
or
push
out
xchg
mov
cld
stos
adcl
push
xchg
rcrb
enter
imul
push
and
or
or
pop
mov
sub
jbe
cli
inc
pushf
and
out
pop
or
mov
outsl
or
cmp
icebp
faddl
sbb
and
repnz
gs
js
pop
push
pop
pop
int3
cmpsb
jmp
gs
out
xor
out
je
pop
out
jg
pop
mov
movsl
cmp
mov
xor
jne
cld
mov
mov
pop
cltd
push
out
push
pop
lahf
or
mov
lds
cmc
icebp
pop
jmp
mov
mov
jl
out
rcrl
out
or
les
adc
sbb
sub
xchg
xor
pop
or
jb
icebp
xor
dec
xor
add
addr16
push
jno
xchg
loop
cmp
adc
mov
movsb
inc
lea
fcoml
loopne
movsl
mov
push
pop
fisubrl
ret
mov
mov
lods
pop
sub
in
sbbb
fmull
mov
imul
rep
push
pop
mov
gs
push
sub
mov
mov
add
xchg
cld
mov
mov
push
dec
jge
mov
cmp
xchg
mov
add
cwtl
fistps
gs
dec
pop
pusha
xchg
cmp
lcall
int3
or
dec
mov
in
push
rol
inc
mov
add
gs
out
pop
jmp
push
fwait
pop
xor
mov
push
cmp
inc
je
in
or
add
sub
jecxz
push
inc
adcl
aad
adc
pop
clc
lret
movsb
xchg
mov
adc
hlt
ljmp
ret
fcoms
xlat
stos
pop
into
repz
jne
pop
push
and
clc
mov
cmp
fmulp
inc
dec
or
orb
mov
pop
pop
xchg
ljmp
mov
or
cmpsl
ljmp
push
cmpsl
lret
add
repz
ja
in
fnstsw
mov
mov
inc
int
fwait
dec
sbb
cmp
adc
cmp
cmpsb
ljmp
lds
jmp
pop
mov
clc
scas
and
lret
mov
sbb
nop
push
rcrl
lds
jnp
xor
aam
mov
addb
push
sbb
loope
push
xchg
cltd
movsb
sahf
je
lods
mov
andb
les
imul
cld
enter
xchg
pop
and
mov
pop
push
mov
imul
out
mov
scas
and
inc
lret
mov
add
lret
sbb
pop
mov
dec
sub
dec
imull
ret
fildl
mov
enter
dec
div
dec
jle
dec
aad
jge
jecxz
jae
xchg
mov
out
in
inc
inc
mov
jnp
adc
mov
pop
int3
popf
inc
inc
push
push
adc
mov
xor
mov
ss
sub
daa
inc
jl
push
fwait
xchg
out
pop
push
rclb
cli
sar
popf
dec
dec
pop
imul
cmpsl
cmp
mov
push
leave
fiaddl
mov
scas
ss
sbb
iret
mov
pusha
mov
es
bound
mov
es
xor
notb
sbb
imul
cmp
pop
out
loopne
div
push
add
sub
aas
clc
mov
pop
test
fwait
test
cmp
push
or
cmc
lahf
cld
idivl
xorb
pop
iret
out
jo
mov
pop
rol
xor
bound
xchg
mov
fstps
in
test
inc
aam
inc
push
sar
mov
inc
pop
fbstp
xchg
hlt
cld
adcb
aam
mov
jmp
rcrl
filds
xor
es
mov
std
test
mov
out
mov
dec
mov
scas
jo
cmp
insb
cmp
dec
add
ljmp
push
dec
sahf
and
lcall
jmp
out
mov
mov
mov
icebp
repnz
sub
mov
inc
and
lock
mov
push
pop
jne
add
mov
jmp
xor
insb
scas
adc
or
pop
sub
loopne
adc
stc
es
out
push
mov
movsb
and
out
dec
rorb
imulb
ss
cli
cmp
imul
and
add
jg
mov
movsl
jmp
jmp
movsb
in
add
sti
clc
dec
mov
dec
xor
jle
lcall
mov
xchg
jp
subl
pop
addr16
adc
xorl
or
mov
fcomps
iret
adc
add
into
push
std
pusha
fsubrs
ret
jnp
mov
jno
add
adc
ret
push
jne
outsl
mov
outsb
fs
int
mov
lret
les
sbb
mov
mov
lahf
pop
inc
mov
hlt
adc
pop
sub
sub
adc
push
les
dec
mov
les
xchg
lret
stos
shr
les
nop
jl
pop
sbb
roll
sahf
add
mov
insb
xchg
and
sysexit
lds
pop
and
mov
sbb
dec
test
sbb
mov
sub
int
add
dec
dec
or
insl
movsb
aad
fstpt
xchg
inc
xchg
xor
cmpsl
addr16
inc
stos
mov
xchg
dec
jmp
lret
scas
aas
push
jge
cwtl
push
ds
stc
cmp
jnp
push
xor
mov
loope
rep
pop
add
cmp
jge
pop
sub
jns
psrlw
das
cltd
imul
sbb
and
mov
jp
sub
or
sbb
divl
inc
popf
cltd
aad
or
jno
fisttps
mov
adc
fidivrl
loop
lods
push
pop
jns
xor
adc
and
dec
and
inc
in
xor
mov
mov
fnstenv
cmp
jmp
ret
mov
test
sbb
test
push
sbb
fsts
cld
daa
mov
pop
std
xchg
or
sbb
lock
xchg
jp
sub
mov
push
sahf
in
pop
sub
push
sub
or
insl
dec
or
xchg
les
push
ds
sbb
mov
inc
std
xor
dec
sub
fcomps
lock
insb
lods
jmp
lds
and
idivl
cmpsl
lret
jmp
ret
repnz
sti
adc
fadds
rcr
insl
iret
loop
int
dec
mov
pushf
mov
adc
or
dec
int3
lret
loop
scas
jmp
pushf
mov
subl
cmp
into
sahf
adc
sub
lods
jnp
xchg
les
in
dec
imul
popf
lahf
mov
sbb
jne
pusha
stos
fmuls
mov
push
adc
loope
shr
je
adc
inc
jecxz
movsl
jmp
and
mov
sub
and
pop
xlat
and
stos
push
add
imul
scas
ret
sbb
xchg
mov
sub
cmp
xchg
inc
inc
das
daa
jecxz
or
mov
adc
cld
aas
add
ds
sbb
inc
lret
sub
xchg
sbb
out
lcall
or
ficoms
in
sbb
sti
add
and
pop
xor
jp
pop
fdivs
inc
jae
out
lahf
pop
jl
aaa
mov
loope
sbb
pop
cli
add
into
divl
cmc
cltd
movsb
lar
cwtl
push
pop
jmp
mov
or
cmc
adc
mov
je
lock
push
cmpsb
lods
sub
daa
lods
xacquire
ss
outsl
fnstcw
add
aad
pusha
int
inc
aam
lea
sbb
sahf
aam
roll
push
ds
lret
fnstsw
call
add
push
loope
inc
test
aad
jb
cltd
mov
ja
sbb
sahf
int3
adc
hlt
jbe
leave
mov
and
testb
mov
addb
aad
in
nop
mov
mov
mov
sbb
pop
jecxz
xor
jecxz
int3
mov
dec
fwait
stc
inc
cmp
push
jnp
fisubs
xchg
jl
mov
mov
cmpsb
adc
mov
andl
pop
xor
mov
leave
pop
lret
inc
push
stos
imul
push
dec
dec
pop
push
and
rcll
loopne
aaa
sub
and
std
daa
mov
aas
xor
mov
lcall
repz
fs
sub
mov
push
andb
sahf
bound
fisubl
call
outsb
dec
jp
ds
nop
fst
sbb
movsb
push
and
mov
push
scas
outsl
std
shrl
aad
shrl
xlat
mov
xor
ret
xor
jmp
ror
adcb
ss
js
push
mov
insl
cmp
pop
into
mov
js
dec
aad
mov
push
dec
movsl
mov
xchg
std
mov
shrd
sbb
jmp
dec
orl
jo
xor
popf
enter
jecxz
add
sub
jmp
ret
or
int
cltd
lds
pop
mov
cs
push
arpl
stc
cli
jl
daa
das
xchg
jae
loop
jno
xchg
xchg
int
out
xchg
sbb
dec
adcb
sbb
addr16
inc
into
pop
mov
shlb
cmp
mov
dec
lock
orb
cmp
mov
popf
jae
mov
aam
arpl
test
insb
rcrb
fbstp
mov
cmp
inc
xchg
clc
cmpsb
lods
je
mov
mov
jne
lret
xor
gs
ds
daa
pop
and
lods
ficoms
mov
bound
xor
push
xchg
sbb
sub
mov
dec
shr
gs
pop
int3
lret
add
cmp
cld
popf
outsb
mov
into
in
fdecstp
or
or
roll
lcall
lret
pop
add
xchg
leave
jge
xchg
scas
aas
cmovl
rol
mov
bound
sbb
add
in
int
sbb
jmp
je
pop
push
xchg
into
push
std
cmp
jp
jb
cmp
imul
shrl
xor
xor
and
mov
aaa
ja
adc
sti
ficompl
testl
mov
les
repz
cmp
and
sbb
imul
test
clc
int3
sti
insl
leave
dec
lock
mov
push
out
jle
lahf
jb
fimuls
cmpsb
shlb
arpl
and
pop
out
fistpl
mov
arpl
std
scas
pop
subb
dec
xchg
lock
popf
cmp
sahf
stc
ret
dec
ss
pop
adc
cmpsb
inc
inc
sahf
aam
add
sbb
mov
adcl
inc
jle
push
lock
sub
adc
rorb
xlat
stos
adc
sbb
dec
adc
jg
aaa
pop
adc
pop
das
dec
dec
lahf
inc
gs
cmc
xor
dec
push
adc
fisubrl
into
pop
cli
test
movb
fadds
mov
pop
out
dec
mov
enter
test
js
and
mov
cli
mov
movsl
sub
dec
shrb
xorb
lds
jno
or
daa
push
negb
and
loopne
addr16
cli
stos
imul
pop
cmp
xor
movsb
lock
cmp
dec
push
int3
lods
mov
dec
int3
bound
push
fwait
out
and
mov
out
lock
pop
pop
or
jmp
inc
adc
mov
js
arpl
adc
pop
push
cmc
cmc
movsb
stos
aam
fs
mov
jmp
ret
lret
add
sub
hlt
movsl
pop
mov
jnp
outsl
adc
xor
arpl
les
fcoml
scas
jns
xor
and
xchg
push
hlt
xor
xlat
sbb
movsb
xchg
imul
mov
stos
ret
cmpsl
scas
fsubr
int3
call
xor
lahf
clc
push
jns
push
mov
push
lahf
dec
mov
mov
inc
es
jmp
in
or
and
les
pushf
xor
dec
mov
rcrl
pop
mov
aad
add
in
push
dec
inc
aaa
dec
jmp
lret
test
lds
sbb
imul
in
jbe
fs
inc
mov
call
jle
sahf
outsb
xchg
cmp
push
push
lods
mov
ret
out
jecxz
lods
cmp
std
cwtl
jns
dec
jne
les
std
sbbb
cmpsb
mov
int3
jecxz
pop
mov
mov
mov
jno
pop
lds
dec
and
push
or
adc
inc
fwait
push
je
icebp
pop
js
xchg
add
jmp
dec
mov
insl
dec
pop
mov
add
shll
mov
lods
popa
pop
gs
lret
sbb
pop
or
xor
xchg
lods
sbb
mov
mov
loopne
insb
or
jg
insb
test
imul
xlat
fistl
insl
and
aam
ss
mov
das
shlb
push
fstpt
int
mov
popa
sbb
popf
push
bound
lea
jno
xchg
or
push
cltd
mov
adc
mov
iret
xchg
pop
dec
sub
sbb
lcall
and
popf
cvtps2pd
mov
lds
jo
mov
scas
imul
pop
xor
xchg
into
arpl
adc
xor
test
int
inc
push
xlat
aad
cmp
push
insb
jg
jns
test
lea
mov
aaa
adc
imulb
or
in
stc
mov
cmc
pop
pop
xchg
movsb
addr16
in
inc
fwait
jb
jle
int
xor
in
mov
or
sbb
mov
or
adc
xor
fcomi
sti
xor
xchg
push
push
xor
add
mov
cwtl
or
cmp
pop
push
pop
icebp
aaa
and
popa
shll
mov
fdivs
orl
xor
jp
int3
push
mov
and
rcrb
jnp
mov
xchg
jecxz
stos
cmp
fdivs
stc
iret
and
cmc
or
or
cmp
lcall
je
dec
mov
mov
insb
shlb
les
pop
pop
or
popa
cmp
mov
jo
mov
fdivrp
jbe
xor
lds
addb
and
scas
loop
jo
dec
lcall
fwait
lahf
loope
pop
and
dec
xchg
xor
test
jae
mov
aaa
or
mov
imull
outsb
nop
in
sti
popa
clc
mov
je
mov
loop
inc
fnstenv
xor
or
nop
cmpsl
loopne
std
in
enter
add
inc
sahf
mov
cwtl
dec
dec
lret
mov
mov
ja
and
pusha
sub
arpl
mov
sahf
scas
iret
notb
xlat
test
mov
iret
jb
xchg
sbb
pop
push
fbstp
std
fisubs
cmpl
dec
xchg
addr16
popf
popf
mov
pop
jbe
mov
jne
or
xchg
cli
cmp
jns
push
ds
cs
je
loopne
push
cmp
mov
add
inc
ss
xchg
push
ret
aam
int3
push
pop
push
loopne
icebp
pop
cmp
jae
rcl
sub
and
dec
popl
int
mov
in
push
sti
sub
out
jecxz
movsb
lods
popf
inc
mov
in
insb
pop
jne
jle
jo
cld
clc
scas
and
jno
aaa
test
push
decb
xchg
xchg
fwait
int3
stos
cmp
fld
ret
inc
testl
out
sub
mov
mov
hlt
loop
pushf
push
data16
hlt
ja
mov
out
leave
sbb
add
inc
jmp
mov
test
inc
and
cmp
pushf
lds
pop
or
push
hlt
and
lcall
imul
inc
data16
mull
mov
lods
in
or
int3
js
enter
dec
push
dec
mov
ret
cli
jnp
mov
icebp
fdivrs
push
enter
jnp
rcrb
push
mov
inc
pusha
pop
xchg
jae
xchg
dec
sub
into
add
mov
mov
xor
sub
jp
psrld
lods
jg
hlt
insb
cwtl
pushf
movsl
fcoms
aas
cmp
push
outsl
xor
rcrl
dec
xor
lret
lods
punpckhbw
stos
mov
pop
jmp
cmp
mov
scas
pavgw
lods
popa
inc
sub
pop
lret
xor
cmp
jo
subb
and
cmpsl
fcmovu
cltd
xchg
lods
push
pminub
aas
fidivrs
dec
mov
xlat
subl
mov
shll
mov
xchg
sbb
and
mov
adc
leave
jbe
scas
jne
aas
sub
mov
call
shr
outsl
leave
xchg
cmp
lock
movsl
lods
mov
add
ret
xchg
dec
jmp
int
mov
out
sub
bound
adc
call
ds
inc
insb
outsb
inc
push
sub
mov
xchg
pop
cmp
add
cmpsb
aaa
lods
push
jmp
jne
sbb
in
lods
dec
scas
js
jmp
lcall
int3
out
call
mov
out
push
in
push
int3
mov
dec
lock
pop
pushf
insl
push
mov
dec
fpatan
inc
inc
out
call
loopne
adc
subl
jmp
fcompl
dec
dec
pusha
pop
mov
dec
jg
int
cmpb
or
xchg
wbinvd
push
mov
sbb
sub
jmp
fisubl
test
mov
xchg
mov
loope
xchg
pop
sub
dec
push
pop
ss
jmp
pop
into
int3
int3
loop
pop
ja
popa
fucomp
testb
orl
insl
repz
cmpb
cmp
and
dec
pop
sub
sbb
into
adc
sbb
lahf
mull
je
push
mov
rorl
stos
push
add
stos
sub
lea
cmpsb
in
scas
frstor
shrb
add
dec
cmp
daa
icebp
mov
xor
ljmp
pop
and
lds
fsub
imul
dec
jg
mov
pop
jge,pt
outsb
movb
out
iret
add
mov
xchg
jmp
xor
inc
lock
mov
cmp
lea
xor
out
std
daa
sahf
push
jecxz
xchg
fcoml
popf
inc
sub
bound
iret
push
sub
push
gs
out
cmp
jl
jp
mov
push
push
roll
std
stos
sbb
cli
mov
notl
mov
hlt
hlt
call
enter
leave
push
sbb
out
in
sub
movsb
stc
and
icebp
fisttpl
jno
xchg
xchg
sbb
add
or
mov
test
arpl
add
je
mov
sti
lock
es
stc
push
shrl
aas
jo
loopne
aad
or
lret
jg
int3
addr16
xchg
negl
inc
pop
cmp
or
inc
inc
fsubrs
das
daa
imul
push
negl
notb
adc
sub
nop
cwtl
pop
cmp
cmp
aad
xchg
xchg
xchg
push
xchg
movsl
pop
cmc
adc
sub
xorb
scas
rcrb
push
test
xor
xor
sbb
cltd
sahf
push
les
or
arpl
jp
push
mov
sub
popf
jne
leave
inc
aam
loopne
les
cmp
jmp
sub
jmp
aaa
popf
imul
mov
jge
in
xor
mov
mov
sub
lds
xlat
mov
or
int3
mov
pop
add
mov
sbb
inc
inc
mov
test
testb
lret
pop
test
push
imul
sub
test
cmpsb
push
in
lds
mov
mov
sahf
aas
mov
aam
les
jmp
cmpsb
aas
hlt
int3
stc
fildl
xchg
sti
stos
sbb
inc
cld
scas
jg
cmpsl
test
mov
idivl
inc
xor
push
adc
push
aam
push
pop
lds
cs
mov
adc
aam
jecxz
mov
or
scas
add
jl
in
ret
icebp
fbld
insb
int
jae
lods
cmp
clc
adc
ret
xor
dec
mov
mov
ds
xor
xor
dec
mov
dec
mov
dec
int
sbb
insl
insb
aas
dec
and
ret
outsl
xchg
xorl
ret
adc
dec
mov
nop
inc
dec
mov
cmp
roll
lcall
mov
leave
adc
notl
sub
adc
cmp
cltd
sbb
or
scas
sbb
and
push
mov
stc
add
subl
stc
jl
test
dec
fcom
push
loopne
rcll
test
or
aaa
sbb
or
mov
loope
add
mov
int3
inc
fistps
xchg
jnp
cmp
insl
stos
mov
repz
push
aam
sbb
fs
insb
adc
pop
mov
ret
mov
insl
das
xlat
or
xchg
pop
sub
jmp
jnp
mov
push
stos
xor
data16
les
pop
cmpsl
fucompp
std
mov
push
popf
push
cltd
dec
movsl
inc
pop
xchg
push
xor
outsl
mov
in
mov
cmp
xorl
and
xchg
mov
add
cli
sbb
inc
mov
fnstenv
icebp
rcrb
sub
mov
fisubrs
lods
push
arpl
dec
xchg
nop
or
xor
adc
xchg
repnz
js
testl
je
jle
xor
enter
imul
divl
nop
dec
cmp
inc
jne
pop
cli
in
mov
jo
test
or
sbb
subl
sbb
out
out
cmpsl
mov
xchg
dec
sahf
ret
and
jnp
iret
mov
insl
pop
pop
test
rclb
dec
push
pop
test
test
stc
mov
xchg
mov
push
cmpsl
popf
aad
push
out
pop
lds
mov
nop
push
sbb
cltd
fsubrl
sbb
lret
test
mov
ficompl
dec
enter
mov
test
imul
jno
push
cmp
inc
rorb
stc
and
xor
cmp
add
call
push
cs
dec
hlt
or
mov
mov
cs
cmp
jge
loopne
lahf
add
hlt
outsl
mov
lea
lret
add
clc
out
jne
xor
in
add
mull
push
sbb
sbb
or
popl
add
test
es
rol
icebp
push
push
xchg
sahf
mov
add
jmp
pop
xchg
push
xchg
arpl
xor
lret
or
mov
mov
aad
stos
aad
mov
mov
int
and
aas
int3
xchg
push
cmp
iret
pop
scas
out
pop
gs
std
cltd
scas
mov
mov
inc
and
jle
gs
sar
xorb
push
fnstsw
enter
std
mov
test
sbb
mov
inc
gs
lock
push
and
test
mov
fs
stos
push
sbb
lds
sub
mov
movsl
notb
fdivl
xor
out
inc
jg
push
push
add
out
scas
mov
shlb
fucomi
aad
movsl
lret
and
idivl
lock
xor
mov
out
aam
outsl
cltd
out
jl
lret
stc
mov
mov
movsl
dec
dec
cmp
daa
cs
cli
cmp
rclb
lea
push
cld
lret
xchg
cwtl
sbbb
in
into
ret
inc
adc
std
xor
and
push
das
call
cmp
test
rol
outsl
addl
mov
mov
push
mov
add
daa
mov
std
orl
dec
mov
dec
push
sbb
mov
push
popf
in
pop
mov
pop
push
orl
les
and
cmp
or
adc
jecxz
sub
add
mov
fwait
fwait
lock
faddl
sub
in
jb
fdivr
mov
mov
inc
loop
lcall
jmp
jo
mov
or
repz
loopne
add
leave
imul
cli
rcl
lcall
and
add
test
cmpsb
cmc
mov
xchg
rorl
in
jb
loop
ret
and
adc
xchg
out
mov
popa
addr16
cmp
mov
push
jno
mov
inc
mov
mov
shlb
jno
fdivr
add
xchg
scas
test
adc
lcall
or
mov
lea
addr16
icebp
cmp
or
jb
pop
je
sahf
js
mov
adc
push
enter
push
iret
gs
sbb
cmp
add
jp
dec
ret
mov
or
aaa
aam
loope
and
mov
jbe
clc
lods
in
das
mov
inc
in
imul
out
adc
sbb
subl
xchg
fcmovu
add
mov
jae
pop
ficoms
in
loop
pop
sarb
pop
and
sahf
or
xlat
imul
push
mov
fildl
mov
sahf
divps
or
mov
mov
inc
pop
mov
cmpsl
negb
stos
in
mov
pop
sbb
out
lds
xchg
mov
ficomps
xor
pop
dec
jle
push
inc
inc
push
cmp
das
sub
lret
fs
insb
pop
sub
stc
addr16
pop
mov
adc
shrl
lret
movsl
cmp
repnz
push
adcl
lret
std
cmpsb
je
repz
sub
pop
loop
gs
cmp
xchg
andl
xor
jns
mov
xor
insl
push
or
data16
aam
add
dec
xchg
clc
repz
mov
mov
je
jb
scas
inc
lret
ret
adcl
incl
lea
test
xor
pop
cwtl
cmp
daa
in
add
mov
jecxz
aam
xor
cmc
mov
pop
push
negl
dec
stos
mov
dec
in
lahf
mov
scas
cs
and
or
adc
nop
mov
jae
test
mov
jmp
ficoml
cli
aad
insl
ljmp
jnp
subl
sub
cs
sub
mov
mov
mov
or
dec
fdiv
lods
fisttpll
call
jae
or
pop
cmp
and
jne
mov
sub
aaa
ss
int
daa
popf
inc
xchg
icebp
mov
mov
cmp
iret
and
aas
mov
add
call
jb
cmp
or
fdivl
sahf
xchg
in
movsb
hlt
js
and
ret
in
jno
je
mov
sbb
xor
xchg
jl
shll
and
mov
pusha
mov
mov
mov
ret
mov
les
es
lods
es
shll
or
sbb
out
xor
sub
add
imul
cld
add
mov
imul
inc
jno
stc
lcall
xchg
sbb
xchg
js
mov
stos
es
test
icebp
mov
sub
cltd
adc
in
lods
push
loopne
pop
data16
loope
mov
repz
insb
test
xor
pop
mov
push
sbb
xchg
std
shrl
mov
enter
outsl
pop
pusha
xor
roll
inc
lahf
inc
mov
and
ret
cmp
or
or
lea
mov
jns
scas
lock
fadd
mov
inc
cmp
data16
mov
add
out
jecxz
mov
mov
ja
push
mov
xor
in
mov
sahf
jge
lret
xchg
inc
xchg
pop
lret
aad
das
std
mov
sarl
frstor
mov
cmp
xor
and
addl
js
pop
dec
call
mov
ja
inc
out
dec
pop
adc
cli
push
dec
lock
jne
outsl
mov
xor
cmp
sti
mov
or
mov
mov
leave
or
inc
jmp
mov
mov
les
xchg
jge
test
inc
lea
mov
mov
mov
mov
mov
out
in
mov
cs
cmpb
pop
pop
stc
mov
fiadds
lods
add
push
inc
lods
cmpsl
cmp
test
push
jge
cmp
minps
pop
mov
or
scas
mov
or
jnp
jmp
and
xor
push
jb
xor
insb
xor
pop
push
jae
xor
jl
cwtl
and
dec
dec
aaa
repnz
movsb
int
lock
mov
dec
shrl
jmp
pop
or
test
aas
pop
mov
clc
mov
sti
mov
sbb
aaa
pop
jl
mov
scas
xchg
dec
scas
insb
out
xchg
push
nop
fwait
mov
cmp
daa
loopne
sahf
out
or
popa
sti
sub
mov
test
call
idiv
dec
xor
pop
mov
xchg
push
imul
out
add
cmp
push
das
cs
dec
stc
mov
sbbb
cmp
add
inc
les
sub
add
dec
mov
push
sub
sub
stc
leave
inc
sub
push
mov
dec
mov
sahf
lahf
pop
cltd
dec
out
pushf
icebp
add
test
cwtl
pop
call
imul
and
jp
cmp
push
ret
scas
shlb
pop
xchg
mov
and
xchg
aad
cmp
jbe
insl
dec
out
fyl2xp1
das
repz
stos
inc
mov
test
pusha
cmp
add
cmpsb
jg
mov
jo
xchg
cmp
sbb
and
push
mov
imul
iret
push
pop
push
inc
movsl
in
push
std
xor
mov
lds
bound
and
incl
mov
mov
out
sahf
mov
inc
out
lret
mov
lcall
popf
pop
lods
outsl
mov
mov
adc
jo
scas
fisttps
mov
in
imul
hlt
add
and
popf
icebp
ds
subb
int3
or
in
sti
mov
push
popf
iret
xor
adc
and
lcall
std
sbb
and
dec
xchg
cmpsl
pop
bound
out
repnz
xchg
jns
sub
rcll
cld
adc
xor
xchg
test
stos
mov
sub
call
daa
mov
fmuls
pusha
fdivr
das
pusha
jb
test
xor
inc
push
xlat
lods
mov
adc
and
cltd
outsl
cmp
aam
and
in
mull
adc
hlt
push
out
sahf
lds
pop
cmpsb
rcrl
add
js
enter
mov
scas
pop
stc
out
mov
cli
leave
mov
sbb
and
stc
xchg
idivl
rcrb
adcb
inc
jmp
mov
fwait
imul
mov
push
jae
xchg
xchg
push
scas
inc
stos
mov
jmp
pop
or
and
jle
xchg
mov
sbb
in
nop
aaa
pop
lods
shlb
lret
cld
fisubs
lock
push
push
push
popa
lcall
xor
test
xlat
jno
adc
outsl
out
ficompl
clc
and
dec
pop
sub
or
mov
sub
mov
mov
aad
jg
in
js
cli
cmp
xchg
ret
sahf
push
and
mov
imul
sbb
mov
bound
pop
pusha
or
popf
add
mov
and
cmp
cmc
leave
xchg
dec
xchg
and
lret
xchg
xor
inc
xor
into
in
mov
iret
ss
ficompl
adc
sub
cwtl
lcall
lret
neg
lock
dec
mov
and
sbb
inc
push
loope
jge
adc
pop
iret
pop
aam
push
pop
mov
addr16
popa
adc
addb
fstps
mov
adc
add
cmp
stos
fisubrl
and
jb
sbb
sbb
mov
mov
shrb
lods
inc
sti
aaa
sahf
std
lahf
or
adc
in
mov
cmpsl
dec
mov
adc
in
dec
add
in
rolb
jno
adc
mov
mov
mov
push
in
sub
push
mov
sub
mov
idivb
sahf
pushf
ficoms
fs
ds
sbb
dec
loop
es
rorl
mov
pushf
push
xchg
mov
sub
dec
adc
test
sbb
aaa
je
inc
jae
dec
outsl
popa
xchg
sub
pushf
in
fwait
add
jnp
stos
mov
in
and
mov
push
sbb
push
lods
pop
sub
leave
cmpsl
inc
or
mov
into
adc
cmp
pusha
sar
jns
loope
adc
jmp
rcll
cmp
mov
sbb
cs
pop
ja
mov
sub
stos
pop
xchg
mov
lahf
das
mov
std
cltd
test
vcvtsi2sdl
icebp
in
jmp
adc
ja
sbb
sbb
push
in
push
sbb
jp
sbb
jl
xchg
jmp
dec
aas
lods
adc
pop
subb
aas
and
jmp
jbe
dec
sub
ficoml
inc
inc
xchg
test
sbb
ret
lock
push
xor
lods
jp
je
daa
xor
cmp
adc
and
lds
push
fwait
mov
inc
les
pushf
sbb
jecxz
sub
andl
cltd
bound
and
outsb
fwait
dec
push
pop
jg
dec
test
lods
xor
fldl
fs
dec
xor
mov
mov
leave
push
rcr
mov
ds
mov
xorb
dec
pop
pop
xlat
sub
rorb
lods
int
insb
rcrl
xchg
out
and
sbb
out
mov
cmp
lods
test
push
out
scas
imul
mov
loope
bound
aam
mov
inc
mov
lea
push
pop
push
rcrb
or
sub
add
pop
insl
outsb
mov
adc
cmp
jbe
sar
ficoms
jge
movsl
out
lea
lods
push
fcompl
stc
mov
xchg
push
mov
sbb
xor
inc
xchg
sbbb
rcrl
mov
iret
mov
clc
jle
addl
out
dec
jmp
sbb
push
pop
jle
sbb
mov
adc
mov
repnz
leave
xor
aam
xchg
mov
rcrl
rcll
xor
and
or
int
ret
jo
rol
sbb
insl
jno
mov
dec
mov
rcll
je
sbb
fadds
gs
adc
dec
push
push
sbb
bnd
push
ds
add
adc
mov
push
mov
divl
test
lahf
mov
jne
js
ds
call
or
hlt
sub
imul
in
cmpsb
push
stos
mov
scas
add
mov
jne
push
lahf
xor
in
ffree
dec
jae
push
mov
jnp
jo
pop
jle
jge
bnd
mov
pop
mov
mov
jo
lods
and
adc
sbb
icebp
mov
fcmovu
push
mov
insb
mov
cmpsl
outsb
pop
fisubrs
fidivl
jle
dec
nop
pop
sub
mov
adc
xor
mov
push
mov
je
out
fcoml
enter
xlat
cmp
fadds
mov
fistpll
mov
lret
xchg
sbb
sbb
bound
push
cmp
xchg
sti
inc
pusha
fwait
stc
dec
ror
sbb
scas
or
adc
iret
adc
push
fbld
out
out
sbb
sub
in
and
jl
push
inc
push
fldcw
inc
cmpsb
loope
sbb
in
sub
je
idiv
ret
pop
jb
aad
add
test
sub
daa
dec
adc
push
mov
stos
add
and
push
mov
push
add
xor
out
loopne
or
mov
mov
jno
jbe
loope
and
rcrl
loope
sbb
cld
out
mov
add
sub
ret
pop
mov
and
xor
insb
imul
dec
or
pop
and
mov
int3
pop
xchg
dec
stos
lret
fsubr
mov
or
and
stos
sub
pusha
sub
ljmp
mov
imull
mov
fisubrs
mov
sahf
enter
or
cpuid
mov
notl
aaa
mov
jae
xor
inc
dec
movsl
icebp
and
mov
pop
mov
fwait
jg
sub
test
out
mov
cmp
mov
int
mov
pop
adc
jns
xor
add
outsb
inc
loopne
jne
out
sub
inc
out
dec
fsubrs
and
mov
popf
insb
xor
test
mov
push
fcmovb
cmc
xor
bound
pushf
pop
xor
les
mov
jno
cmp
mov
mov
loop
pushaw
psrlq
lock
mov
mov
xchg
out
push
sbb
dec
je
xor
iret
out
es
pop
dec
mov
and
imul
ret
repnz
stos
push
dec
fldcw
arpl
orl
inc
sub
cmp
out
cld
and
sbb
je
xchg
aam
insl
sbb
mov
mov
xchg
jg
daa
cmpsb
mov
pop
out
or
mov
fistpl
sub
in
incl
add
mov
fmull
and
mov
ja
or
in
xor
jo
bound
out
xor
pushw
je
addr16
sub
mov
jecxz
jns
into
mov
into
jp
shlb
fwait
xlat
jbe
mov
sub
jle
xlat
mov
out
xor
adc
xor
lahf
push
aad
in
test
sub
sbb
adc
mov
call
dec
pop
jns
in
mov
sub
add
and
jnp
or
pop
mov
jl
les
push
add
cmp
popf
in
rolb
and
scas
imulb
insl
pushf
jne
decb
ja
out
xor
int3
mov
out
pushf
sub
push
xor
jno
cmpsb
ret
or
xor
cmp
out
inc
sub
rolb
jne
cmp
cmp
lret
mov
sarl
ss
sarl
mov
sub
inc
ret
aaa
xchg
or
jbe
ss
mov
shlb
into
xor
mov
xchg
mov
jmp
inc
pop
push
imul
xlat
pop
addb
adc
dec
lahf
fistl
test
adc
cld
sahf
push
pop
mov
and
or
adc
out
jecxz
dec
in
lcall
sub
cltd
adc
sub
repz
fcompl
sbb
xchg
mov
xor
gs
scas
movsb
jmp
inc
in
dec
mov
fs
mov
cmp
pop
jb
loope
fbld
nop
cmp
aas
inc
fsubl
fs
mov
jl
jp
xchg
ret
jmp
mov
jge
roll
fildll
push
ficoms
add
mov
outsl
mov
sbb
jle,pn
loop
pop
inc
movsl
sbb
xor
repz
fnstcw
push
push
mov
lcall
ret
jns
mov
lds
mov
cmp
loope
outsb
dec
dec
out
leave
adc
xlat
enter
add
mov
cld
incl
cmpsb
jno
in
in
addr16
mov
xchg
jnp
aas
pop
sti
ja
negb
jno
cmp
pop
popf
jge
sarb
mov
xchg
push
in
sbb
jmp
pop
mov
repz
ljmp
add
nop
into
enter
xchg
pop
roll
dec
ljmp
sar
mov
aad
dec
push
repz
pop
pop
call
nop
mov
out
lock
loope
cmpsl
nopl
insb
adc
or
movsb
loope
test
scas
iret
pop
adc
mov
lret
jbe
add
roll
nop
xor
cmpsl
sub
xor
cmp
add
xor
std
pop
out
inc
stc
and
mov
or
into
shl
test
mov
shlb
push
add
inc
insl
xchg
jb
or
cmp
cltd
ficoms
sub
mov
iret
mov
jg
cmpsb
stc
mov
mov
or
outsl
cld
jbe
dec
pop
fdivrp
dec
movsl
out
mov
mov
data16
aaa
test
sub
xor
sub
and
in
fistps
loope
or
mov
xlat
pop
fimull
shr
fxch
push
sub
add
mov
cmp
out
mov
xor
mov
adc
push
leave
rcl
xor
mov
push
aad
jns
xchg
push
mov
xchg
sub
mov
aas
push
ljmp
dec
push
and
and
mov
pop
xchg
or
jge
pop
adc
or
lcall
in
scas
bound
pop
inc
gs
cmc
mov
sbb
rorb
jns
aas
cli
clc
push
mov
sbbb
test
xor
mov
adc
fmull
mov
mov
aam
inc
je
cmp
cwtl
xor
xchg
mov
inc
sub
mov
inc
insl
ds
iret
mov
adc
xor
xchg
push
pusha
or
adc
push
popa
ja
dec
ss
icebp
scas
popa
pop
mov
mov
rcll
mov
shlb
lcall
gs
mov
pop
fisttpll
mov
out
add
adc
shll
dec
xor
outsb
jmp
arpl
pop
pmulhuw
fs
das
or
push
addb
inc
sbb
sub
and
neg
xor
call
add
sbb
fimull
jg
jge
insl
call
xor
mov
and
push
jg
lods
jmp
pop
cmpsb
sahf
jg
sub
add
lahf
pop
inc
and
jp
testl
jge
jmp
dec
inc
and
shrl
mov
hlt
xor
jle
fstl
ds
cld
std
outsl
inc
jo
arpl
sub
jp
scas
es
stos
mov
shl
push
rolb
ror
sbb
ljmp
cmp
jp
cmc
xor
pop
int
sub
insb
dec
adcb
sub
mov
xchg
jnp
push
loope
jge
dec
into
push
or
mov
add
cwtl
repz
pop
jno
jg
in
test
dec
ret
mov
cmc
sbb
xor
lret
pop
and
mov
xchg
xor
sbb
dec
xor
push
and
xchg
cmp
push
mov
test
cmp
les
cwtl
push
cmc
inc
testb
mov
add
mov
xchg
xchg
aam
add
mov
xchg
stc
fisubl
stc
cmp
xchg
rcr
das
pop
cmp
in
aaa
mov
pop
cwtl
jmp
sub
loope
aaa
repz
test
pushf
dec
mov
scas
stos
outsb
jbe
mov
xchg
sub
inc
jg
cmp
lahf
jb
push
sbb
dec
and
xchg
mov
fbld
outsb
add
mov
lahf
std
aam
xlat
or
cvtdq2ps
xor
push
iret
pop
sti
pop
push
ja
push
cmpsl
inc
out
shll
cwtl
jge
xchg
loop
movsl
in
ja,pn
and
aam
mov
les
mov
mov
divb
fdivl
cmpb
cmp
or
sub
mov
vcomisd
mov
pop
lret
in
cmp
add
out
and
adc
mov
les
fwait
add
lahf
sti
dec
inc
jg
lock
push
es
stos
jne
cmp
add
push
popf
movsb
or
iret
xchg
inc
int
sub
mov
push
incb
or
sahf
popf
adc
jl
cmc
movsl
dec
sbb
pop
shr
lds
mov
lods
flds
add
lods
adc
cmp
inc
cmp
insb
cmc
in
or
cmp
and
mov
push
lock
iret
pop
outsb
xorb
xchg
jb
and
mov
dec
clc
add
xor
inc
cmp
cmp
ja
sahf
xlat
andps
pop
mov
jns
outsb
mov
scas
cmpb
sbb
inc
iret
repz
adc
lcall
mov
mov
push
call
cli
push
mov
or
inc
jmp
aad
stos
jno
jns
popa
lret
inc
sbb
mov
fisubl
inc
lret
arpl
adc
xchg
in
negb
mov
inc
out
adc
jl
push
fimull
clc
notb
aaa
fsts
sbb
mov
mov
jg
lods
pop
pusha
int
or
sub
outsl
pop
pop
test
js
in
adc
jnp
adc
inc
into
pusha
mov
arpl
pop
mov
in
fbld
mov
push
xchg
shll
jmp
jl
pop
test
out
mov
sbb
repnz
push
push
cmp
inc
or
xchg
mov
mov
cmp
xchg
mov
push
xor
test
jge
add
adc
sti
xchg
xlat
jb
inc
fcom
std
and
enter
push
inc
jns
cmc
fstps
movsb
jne
and
sbb
inc
cli
jbe
imul
pop
mov
adc
leave
jae
push
dec
jae
xchg
fcoml
in
mov
inc
jbe
repz
fstl
das
add
int
es
mov
push
jb
inc
cltd
or
mov
mov
in
mov
jle
cmpsb
or
dec
scas
neg
sbb
or
cmpsl
subl
add
xorb
jg
push
xchg
xchg
xchg
jb,pt
out
js
popf
mov
jbe
mov
mov
loope
jge
pop
dec
fsubr
out
xchg
bound
aas
mov
movsb
and
in
insb
mov
inc
cltd
loope
adc
dec
sbb
mov
pusha
int3
mov
mov
mov
and
movsb
pop
xor
popa
jg
sbb
addb
xor
jmp
or
imul
pop
insb
dec
inc
mov
add
and
xor
out
nop
aaa
cmp
cmpsb
fldt
push
push
pop
cltd
or
mov
sub
inc
or
in
fmuls
aaa
in
cmp
movsl
int3
fs
pop
aaa
pop
aam
ljmp
lahf
and
cld
dec
imul
pop
lret
pop
and
lret
ljmp
out
es
lret
hlt
dec
mov
sub
lcall
out
in
xor
or
insb
add
mov
or
lea
or
mov
dec
lods
nop
mov
jle
pop
cmp
out
jae
add
cmp
movsl
push
push
fcom
js
sbb
leave
push
push
std
cld
xor
std
jg
mov
cwtl
push
lods
in
lret
and
xor
fnstenv
loope
add
divb
jb
cmpsl
dec
call
repz
add
push
mov
cmpsl
push
sbb
sub
xchg
pop
add
mov
mov
mov
aad
enter
or
sub
jnp
adc
pop
cmc
stos
sub
xor
adc
aaa
xchg
pop
dec
sbb
jg
aas
loopne
movsl
sti
and
mov
das
jge
pop
dec
mov
push
mov
mov
pavgb
add
mov
pusha
dec
aam
scas
cmp
das
ljmp
insb
data16
mov
mov
out
shlb
mov
cmp
mov
jne
adc
test
cmc
xor
pop
inc
aas
clc
orb
dec
mov
or
pop
pop
jno
adc
cmc
inc
mov
popf
lock
push
aas
xor
mov
mov
fstl
aaa
testl
mov
inc
scas
arpl
std
sti
jbe
cld
inc
pop
icebp
and
jmp
jp
sub
push
stos
mov
cwtl
jns
sub
lods
loope
insl
cmp
fdiv
pop
cmp
stc
call
jbe
mov
or
push
or
aam
ljmp
hlt
mov
aam
mov
mov
and
or
cmc
lock
jle
les
push
jl
into
mov
arpl
cwtl
int3
xor
dec
pop
mov
add
jmp
jmp
clc
xchg
sub
push
xor
data16
pop
mov
loop
mov
es
jle
inc
sbb
pop
repz
enter
stos
fs
mov
out
pop
sbb
xor
and
daa
cmp
sbb
push
sbb
movsb
xchg
loop
or
xchg
push
mov
cmpsl
movsb
mov
sbb
setns
cmp
mov
xor
dec
enter
jp
and
out
int
push
adc
sbb
dec
add
out
sbb
xchg
andl
xlat
in
xchg
subl
pop
pusha
cld
add
xor
pop
and
mov
lods
hlt
pop
add
sbb
popf
and
in
jbe
cmc
push
cmp
stos
jle
adcb
movsb
cmp
xor
stos
push
rolb
mov
cwtl
mov
jecxz
sub
shll
mov
pusha
adcl
test
ja
rcl
push
aas
ret
adc
rorb
dec
idiv
stos
jne
adc
das
ds
and
daa
orb
out
and
sub
xchg
icebp
cs
jo
inc
mov
and
fnstenv
mov
push
push
mov
rorb
fcmovnu
dec
aam
fmuls
push
bound
loop
or
popf
cmpsb
add
jo
xlat
outsl
add
movsl
mov
jo
mov
sbb
aad
mov
sbb
mov
gs
sbb
mov
or
popa
lret
mov
adc
mov
jg
xor
mov
ss
sub
dec
sar
shrl
dec
jmp
push
sbb
mov
fimuls
add
push
sbb
scas
lahf
push
fsubrs
or
xchg
mov
test
cmp
addl
mov
jp
cmpsb
xlat
jno
sbb
mov
repz
push
pop
xchg
cmpsl
jle
xor
in
dec
add
jmp
sbb
mov
fmuls
pop
pop
add
aaa
xchg
cmp
js
cmp
mov
cld
push
lret
push
inc
cmpsb
outsl
lods
scas
sub
rorl
xchg
xor
push
sub
in
fnstenv
add
fucomi
pop
inc
push
insl
lock
mov
pop
nop
jno
cwtl
cmpsb
lods
out
fcoml
mov
or
sbb
jo
xchg
lods
cwtl
and
pop
arpl
mov
and
cmp
xchg
aaa
iret
pop
sub
decl
sbb
cs
ds
std
rorb
cmpsl
mov
insb
jmp
ret
xchg
mull
std
pop
mov
jns
scas
lea
jecxz
bound
xchg
ja
push
push
sbb
jl
or
jle
xchg
mov
nop
stos
push
jae
fisttpl
mov
div
or
xchg
mov
push
pop
inc
popf
adc
shl
sub
xchg
pop
jne
dec
mov
xchg
add
popf
xor
xorb
stos
jp
js
adc
cmpsl
decb
lret
and
jo
aas
mov
xor
insl
iret
jb
add
int3
cmpb
jecxz
mov
pusha
fs
xchg
cmp
cmpsl
add
sbb
push
inc
sub
xchg
adc
inc
sub
clc
mov
or
cmpsl
or
xor
imul
jnp
dec
inc
xchg
jecxz
cmp
push
adc
adc
mov
add
sbb
dec
fsub
pop
cmpsl
mov
ficomps
push
test
out
cmp
or
xlat
test
loopne
xchg
aad
fwait
pop
dec
mov
std
outsb
xor
hlt
insb
dec
imul
push
loopne
adc
ret
xchg
mov
cmp
push
and
fs
push
mov
das
ljmp
push
mov
imul
xor
mov
xchg
xor
stos
push
adc
ss
fdivrp
mov
push
add
arpl
pop
mov
fmul
and
inc
out
hlt
xchg
jmp
add
xchg
jbe
xchg
scas
jge
in
mov
aas
call
das
push
popa
sbb
repz
pushfw
mov
es
jl
cmpsl
fs
fidivrs
dec
cld
sbb
inc
adc
and
inc
inc
mov
add
addb
hlt
xchg
inc
push
in
xchg
add
adc
fs
or
xorb
gs
or
mov
scas
add
lock
outsb
dec
add
or
mov
pusha
lea
out
or
jmp
je
fstp
mov
push
jle
sub
test
or
imul
dec
xor
gs
nop
clc
add
test
int
lods
test
jg
or
mov
cmp
imul
imul
aaa
es
loop
adc
mov
test
lahf
cli
inc
sub
adc
cmpsb
pushf
cmpsb
adc
push
and
dec
cmp
xor
cmp
xlat
out
xor
mov
dec
popa
ss
and
aaa
shlb
daa
jl
cmpsb
mov
mov
imul
mov
lea
add
arpl
xor
rorb
pusha
ret
shll
push
adc
popa
aam
fdivrs
cltd
xor
mov
jg
mov
pushf
rcrl
lret
lret
jb
enter
insl
ja
loopne
dec
mov
dec
loop
rolb
dec
hlt
test
jecxz
dec
lahf
test
gs
sahf
inc
enter
arpl
lcall
mov
cmc
dec
jecxz
pop
adc
pop
jmp
pop
xor
int
cwtl
loope
jmp
lods
fildll
arpl
movsl
stc
ret
cmp
sub
inc
dec
cli
pop
inc
mov
data16
or
add
popa
xchg
test
lods
ret
cmp
mov
iret
jle
in
push
test
shrl
push
testb
jmp
cmp
enter
mov
aam
pop
fsubr
or
inc
test
decl
sub
or
push
jecxz
fidivs
sub
jnp
sub
xchg
xchg
push
cwtl
dec
mov
jns
sub
and
cs
push
lahf
insb
jo
ss
icebp
push
jno
xor
andb
mov
mov
dec
pop
addl
cmp
xor
aaa
sub
push
addr16
fistpll
stos
subl
pop
int3
add
pop
out
rcrb
cmp
fdivr
in
insb
stc
call
insl
mov
daa
imul
cmp
push
das
loop
mov
cmp
push
jne
push
test
fs
mov
decl
add
fs
popf
push
rorl
fldenv
and
lahf
mov
push
aaa
sbb
insl
cmpsb
pusha
aam
pop
decb
pushl
pop
cmp
mov
sub
xchg
push
inc
sarl
addb
xchg
add
out
mov
mov
daa
mov
jecxz
jmp
loopne
je
lods
adc
or
pop
xchg
mov
dec
mov
adc
rcll
fs
sbb
lret
add
sahf
and
jge
inc
movsb
fs
popf
jbe
jnp
and
xor
popa
imul
cmovge
mov
sub
adc
outsl
leave
pop
jmp
mov
outsb
and
jb
push
mov
xchg
cmp
mov
pop
mov
aaa
xor
sub
dec
unpckhps
jb
pop
stos
inc
sbb
sbb
ret
pop
stc
lret
subb
inc
add
in
cmpsb
mov
xchg
fmulp
cmpsl
out
scas
mov
mov
adc
add
push
leave
ret
xchg
ja
dec
and
jb
rolb
stos
adc
popa
jns
mov
and
es
in
test
dec
mov
jmp
mov
pop
or
popa
fldcw
dec
shrb
lods
and
stos
jp
sub
mov
jo
sub
cs
and
inc
add
push
negl
hlt
pop
cmp
in
add
lret
xchg
ja
out
sbb
push
imul
out
ljmp
repz
stc
cld
fsubs
mov
jbe
cmp
fiaddl
or
idivl
out
mov
xchg
sbb
ljmp
leave
das
rorb
jecxz
insl
or
xorb
movsb
subl
ffree
clc
andl
jo
and
mov
sub
mov
pop
adc
cmovs
sbb
insb
movsb
in
xchg
xchg
sarb
iret
pop
adc
mov
imul
jns
ljmp
lahf
lea
adc
jno
insb
cmp
fisttps
lods
mov
les
mov
dec
sbb
sbb
and
shll
repz
pop
int
mov
in
orb
cmp
xchg
and
test
ja
test
add
cmp
cmp
subps
pop
mov
shll
mov
adc
xchg
and
aam
jg
fst
ljmp
gs
sahf
enter
add
add
int
test
out
cli
push
sahf
and
test
mov
and
fstpl
or
mov
cwtl
mov
mov
fwait
pop
lcall
mov
pop
xor
and
push
add
int3
jns
sub
fisubs
jae
dec
mov
movsl
xor
scas
cld
push
lahf
pop
xchg
mov
insl
jg
stos
dec
call
xchg
xchg
popa
ret
ja
in
and
int
pop
mov
filds
push
popl
mov
xor
ret
bound
test
dec
jl
sub
xor
dec
mov
add
sub
outsl
xchg
test
push
test
push
arpl
jg
sbb
imul
test
arpl
js
add
sahf
lods
mov
movsb
cmpb
popa
dec
push
popa
in
xor
mov
faddp
sub
ss
loopne
sub
into
adc
pushf
sarl
inc
adc
inc
xchg
mov
sbb
cmp
frstor
mov
jnp
dec
mov
mov
fldt
into
test
je
shlb
rorl
int
in
cmc
arpl
cmp
inc
pop
enter
xor
fstpt
xchg
dec
or
sub
jns
mov
cld
nop
push
rclb
pop
lret
nop
lds
pop
xor
aad
xchg
loope
cld
and
loope
loopne
adc
data16
es
popa
mov
push
ret
cmp
int
pop
jp
rol
imull
lock
scas
sbb
push
and
rclb
mov
lock
push
add
fldenv
dec
or
testb
jp
clc
iret
lods
inc
mov
mov
xor
popf
hlt
add
and
mov
into
les
pop
ja
pop
jl
cmp
jg
fmul
cltd
lds
dec
icebp
sbb
jae
xor
sahf
aad
push
scas
in
mov
jno
dec
loop
sub
or
testb
arpl
ss
mov
std
test
addb
scas
in
and
enter
jns
mov
mov
inc
xor
dec
loopne
inc
jnp
sbb
loopne
pop
xor
cmc
and
xchg
xor
sub
push
nop
loopne
lret
jl
adc
sbb
loop
adc
push
push
mov
mov
je
pop
lods
mov
push
add
js
bound
fnstenv
sub
cmp
pop
mov
push
cmp
scas
sti
stc
cmpsl
mov
jo
icebp
ficompl
lods
loope
xchg
js
js
mov
in
mov
sbb
lahf
je
push
jp
imul
xchg
push
inc
test
lret
xchg
mov
sbb
and
xor
sub
or
fdivrl
mov
in
push
dec
or
fwait
outsl
rcll
mov
lods
clc
pop
stos
in
mov
cwtl
xchg
xchg
lahf
sbb
sbb
hlt
jne
inc
jae
inc
xor
lods
mov
dec
out
mov
aaa
jecxz
mov
cmp
orb
js
jmp
xchg
mov
fistps
pop
sbb
pop
mov
sub
dec
sbb
mov
out
mov
or
xchg
data16
in
nop
lea
insl
xor
sub
cmpb
cmpb
mov
or
jp
in
push
push
xor
call
fisttpll
sub
lcall
or
popl
dec
adc
pop
ljmp
dec
or
cmp
sub
inc
leave
push
sub
push
push
cs
outsb
aam
xor
or
pop
in
cmp
jne
inc
loop
and
push
pop
stc
push
pop
push
push
subl
xchg
in
push
dec
lea
popf
mov
sub
sahf
push
jb
mov
int
add
cld
xor
insl
mov
mov
into
fwait
cmp
pop
mov
stos
insb
cmc
ss
adc
js
jge
mov
xor
stos
sub
popa
sbb
out
mov
push
jmp
add
sbb
cltd
mov
sbb
ss
insb
adc
jmp
mov
cmc
sbb
pop
lcall
adc
cmp
aaa
add
outsl
cmp
pop
mov
dec
sub
dec
cmp
test
and
sub
enter
cmp
cmp
xchg
test
insl
mov
mov
pushf
aaa
mov
ja
nop
stos
adcb
lret
and
enter
shll
pop
pushl
das
mov
xor
jp
jns
xor
push
xchg
dec
insl
pop
ss
cmp
lcall
es
std
cmpsb
bound
jge
setge
cmp
dec
sub
fistps
dec
out
ja
std
test
dec
xlat
pop
cmp
pop
cmc
push
cld
sub
push
xchg
mov
stos
pslld
ret
jb
jno
mov
inc
jl
flds
xchg
mov
cli
ds
adc
and
enter
jbe
mov
jno
rorl
pop
ds
cmpsb
repnz
pop
mov
mov
xchg
loop
or
mov
push
mov
out
jmp
addr16
filds
sub
mov
jns
cmp
or
fldl
mov
mov
dec
mov
pop
inc
loop
dec
vpminsw
aaa
repnz
lret
add
lret
icebp
or
inc
rcl
es
dec
xchg
or
and
imul
stos
sbb
push
lods
out
adc
loopne
jl
xorb
fidivs
sbb
jbe
pop
ljmp
fcompl
push
frstor
fsub
jp
les
or
adc
dec
mov
ret
rolb
pusha
fcomps
xchg
xor
mov
pop
pop
push
in
xchg
repz
sti
xlat
sub
mov
pop
scas
int
test
push
push
jecxz
lds
push
jbe
dec
inc
jnp
jmp
adcb
sub
xchg
mov
dec
es
sarl
and
xchg
inc
insb
jne
es
ja
leave
mov
fisubl
push
xchg
xor
das
pop
mov
jnp
pop
mov
pop
hlt
into
out
adc
loope
cmp
push
ljmp
sub
iret
movsb
ja
pop
push
push
rcl
mov
xchg
dec
jae
dec
or
xchg
mov
xor
sti
inc
inc
aas
fwait
xor
inc
pop
call
add
fwait
enter
jbe
dec
mov
sbbl
imul
sub
inc
push
ljmp
mov
push
insb
sub
roll
out
fiaddl
sbb
fbstp
loop
push
fs
idiv
lea
bound
jb
cwtl
mov
mov
cmp
pop
xchg
mov
movsl
subb
cmp
movsb
jno
das
adc
xchg
out
dec
or
dec
lret
fisubrs
xor
mov
clc
gs
arpl
das
adc
mov
jbe
jbe
sbb
andb
les
mov
xor
fidivl
add
sub
test
popl
jo
shrb
jne
lds
repnz
jno
hlt
cmp
outsl
sti
push
mov
ljmp
mov
jae
mov
movsl
leave
test
pop
add
mov
cwtl
mov
and
popfw
add
jne
sub
arpl
dec
add
jg
fldl
aas
and
ret
xor
sbb
stos
mov
ja
pop
mov
pop
fidivs
cmpsl
adc
jne
clc
imull
es
add
call
pop
dec
fwait
push
inc
dec
add
sbb
and
push
xchg
fwait
dec
pop
jb
xchg
fisttps
jno
pop
ret
test
sbb
pop
ret
mov
lods
loope
sbb
mov
push
imul
jns
push
mov
dec
adc
fnstsw
ret
jns
scas
xchg
mov
xchg
cmc
pusha
sbb
mulb
in
jle
hlt
mov
iret
je
movsb
cmp
arpl
or
ds
pushf
dec
jge
dec
jl
jecxz
jge
imul
inc
idivb
adc
cmp
push
or
outsb
add
fistl
das
pop
and
out
and
push
add
xchg
xchg
nop
lock
fwait
mov
fsubrs
jno
xchg
bound
call
mov
movsb
dec
loopne
dec
pusha
cmp
lods
lods
sub
das
cli
mov
test
pop
inc
hlt
dec
inc
mov
push
leave
gs
arpl
or
sbb
xor
xchg
jecxz
mov
cmp
dec
push
xchg
iret
pop
jl
out
cwtl
mov
icebp
dec
imul
mov
push
sarl
jle
sub
xchg
add
xor
stos
nop
ret
mov
out
adc
mov
dec
mov
cltd
imul
push
outsb
lcall
je
jno
sub
jecxz
lods
mov
xor
ret
rcr
sub
or
mov
push
push
jns
push
aas
sbb
cmp
inc
or
cltd
pop
mov
adc
fs
mov
in
loopne
nop
iret
dec
lock
dec
cmp
adc
xor
in
jns
xchg
push
lods
dec
jl
int3
cwtl
xchg
fidivrs
scas
mov
xchg
inc
sahf
lret
dec
mov
fsts
adc
xor
push
cltd
jne
dec
stc
mov
std
jnp
dec
adc
mov
adc
adcb
fwait
pushf
mov
outsl
mov
or
addr16
dec
or
clc
lock
sub
jl
inc
sarb
rcrl
les
mov
popf
rolb
jns
xchg
sbb
mov
lgs
dec
sub
mov
je
sarl
test
pop
adcl
lret
mov
pop
add
xor
mov
sub
clc
sbb
push
xor
call
js
leave
adc
jbe
sub
adc
lds
push
lahf
push
mov
rcr
mov
pop
mov
sub
daa
cmp
or
fimuls
and
std
xchg
xchg
sub
sbb
movsw
inc
sbb
inc
mov
dec
jmp
inc
loope
push
lock
mov
mov
inc
out
xchg
daa
test
gs
jmp
sahf
xor
in
mov
inc
inc
mov
cli
cmp
sarl
or
cmp
cltd
ja
fs
pop
cli
out
aad
enter
mov
repz
lret
xor
rcrb
fs
push
mov
adc
lahf
outsl
mov
shlb
pop
jb
jle
js
jl
dec
cld
adc
mov
aaa
xchg
xchg
rorb
fbld
xchg
sbb
scas
jle
pop
push
mov
in
call
mov
adcl
adc
loop
rcrb
sbb
jp
lret
lds
movsb
and
dec
mov
and
mov
sub
fs
inc
push
ds
and
out
pop
rolb
and
add
loopne
pop
rcll
fxch
adc
shlb
and
rorb
in
xor
loopne
cmpsb
cmc
mov
insb
xchg
cmp
inc
je
frstor
and
dec
and
jle
mov
add
xor
mov
sarl
stos
dec
loopne
lret
xor
out
inc
inc
or
fadds
cs
int
dec
arpl
adc
pause
push
in
mov
in
cmp
fdiv
ficomps
lahf
cmp
cmc
jnp
cmpsb
lods
pushf
repz
dec
repz
add
test
shll
inc
xchg
pop
rcr
addr16
gs
xchg
mov
loopne
rcrb
adc
xchg
or
add
pop
je,pt
movsl
xor
inc
ret
cmc
test
movsb
mov
sub
add
sahf
cmpsl
add
fldcw
pop
pop
fcoms
call
mov
sbb
jle
mov
dec
mov
lret
loope
mov
push
sbb
xor
xchg
movsl
popa
in
lcall
mov
out
push
xchg
jns
pop
inc
mov
dec
loope
mov
add
leave
loop
popf
jl
xor
ja
lock
inc
cmp
mov
and
pushf
cmp
lret
jge
ljmp
pop
add
in
jb
roll
insb
sub
adc
and
shrb
sbb
mov
mov
dec
or
scas
or
aas
pop
daa
sub
mov
fists
int3
cmp
cmp
test
ja
ds
inc
arpl
hlt
pop
and
lods
aas
add
lds
into
adc
cld
lods
mov
loopne
cltd
fisubs
mov
sahf
or
les
push
cmp
dec
xchg
cmpsl
mov
outsl
adc
inc
inc
jbe
sbb
mov
gs
mov
mov
sub
xchg
outsl
loop
aad
shll
hlt
sub
inc
cmc
xchg
repnz
xchg
mov
sub
out
mov
jmp
xor
pop
lods
jb
test
pop
inc
pop
enter
push
inc
cltd
cmp
push
les
xor
or
jl
mov
lock
mov
testl
push
jns
and
popa
mov
lea
xchg
xor
and
test
rcrb
push
cli
out
aaa
mov
inc
pop
sbb
add
mov
add
pop
aas
movsl
pushf
add
cmpsb
jl
repz
mov
adc
pop
or
sbb
or
dec
loop
addb
scas
inc
sbb
pop
call
inc
or
movsl
ret
jns
push
lock
test
push
inc
ficoml
adc
enter
ret
nop
nop
inc
aad
adc
mov
cmpsl
mov
xchg
xchg
mov
shll
mov
and
jecxz
pop
push
and
sub
cmp
pop
arpl
cld
clc
aaa
lds
dec
jns
jo
icebp
shll
mov
xchg
pop
push
inc
push
or
mov
push
cwtl
pop
jo
jns
add
sub
sub
push
dec
into
or
mov
adc
fwait
test
daa
sub
test
lea
mov
insl
jecxz
cmp
dec
ret
cmp
inc
rcrb
xchg
ret
sti
add
outsl
xchg
xor
xor
insb
std
xor
inc
pop
out
lahf
adc
in
cs
cmpb
mov
in
adc
mov
mov
pop
push
mov
stos
inc
lret
imul
lret
outsl
lods
xchg
fistl
mov
cld
lods
pop
scas
test
jge
cwtl
jecxz
xor
or
push
loop
mov
push
mov
xchg
es
cmpsb
divb
cwtl
xor
aas
add
cs
js
mov
iret
adc
cld
inc
cs
test
pop
out
nop
imul
sub
rolb
add
mov
pusha
scas
xlat
imul
stos
fisttpl
cld
push
ret
insb
or
jge
sbb
faddl
mov
lret
mov
sbb
jns
cld
cmp
adc
push
inc
push
lock
xchg
mov
and
dec
jle
adc
aaa
mov
jae
in
js
in
lcall
sub
dec
jo
ja
stos
les
xlat
in
dec
jae
int3
sbb
mov
jo
add
test
ds
shl
mov
les
das
ja
test
in
inc
xor
filds
dec
sub
pop
xor
sub
std
or
inc
mov
nop
scas
out
and
pop
int
imul
mov
pop
jge
fs
outsl
dec
dec
mov
or
inc
ffreep
leave
xchg
mov
and
ss
loope
loopne
push
popf
inc
aad
imul
add
bound
je
mov
notl
lretw
sub
xlat
push
push
sti
ljmp
aas
push
adc
scas
out
jmp
orl
loop
add
push
hlt
dec
push
aam
push
es
add
pop
cmpsl
add
pop
jmp
add
aad
push
pop
in
lods
out
cmp
mov
mov
mov
lock
ret
in
leavew
arpl
add
fbld
or
mov
inc
sub
lret
mov
cmpsl
inc
cmp
push
push
fs
fsubrl
mov
insl
cld
aas
ljmp
push
mov
sahf
fisttps
dec
push
cmp
and
cwtl
int
shlb
lods
xlat
std
cld
nop
lea
cmp
ret
fstpt
shll
xchg
pop
fwait
ljmp
mov
cmp
insl
sub
fldt
cmp
adc
mov
repz
in
lcall
leave
mov
int
loop
sub
cmp
shl
dec
mov
cmp
ds
jmp
or
or
inc
mov
pop
xchg
lock
cmpsb
mov
dec
fmull
in
aam
std
xchg
cs
out
insl
xchg
cmpb
inc
fidivrs
int3
dec
int3
sbb
sbb
popa
cmp
cmc
out
cmpb
mov
and
jp
sub
pop
int
pmaxub
test
stos
inc
pop
cmpsb
popa
push
or
movsl
je
and
imul
test
jo
je
nop
jp
fs
mov
test
rclb
cmp
xchg
repz
inc
into
dec
sbb
stc
mov
inc
mull
or
daa
popf
dec
movsb
xor
sbbl
mov
mov
xor
mov
mov
loope
mov
shr
daa
ret
cmpsl
loope
jmp
jae
arpl
mov
test
cmp
call
add
daa
adc
sbb
adc
loope
stos
dec
shlb
mov
dec
fsubl
loope
push
jb
in
fbstp
xchg
or
push
adc
test
aad
adc
pop
clc
xor
insb
cli
mov
mov
fwait
and
xchg
jb
pop
addr16
je
bnd
mov
xor
xchg
fisubs
xor
mov
xlat
movsl
lods
test
aas
outsl
push
and
dec
repnz
rorl
mov
xor
or
sbb
add
cmpsl
out
jge
bound
lock
or
xchg
cmpsl
stos
int
add
std
xchg
imul
mov
or
adc
lods
xorl
sbb
mov
pushf
xchg
mov
scas
pop
xor
xchg
out
mov
mov
scas
jbe
repnz
arpl
xlat
dec
cli
mov
lret
sbb
xchg
cltd
or
nop
shll
lock
scas
mov
jnp
jb
movsl
test
inc
popf
mov
mov
inc
iret
movsl
fsts
es
cli
stc
add
adc
clc
push
leave
ja
rorl
std
sarb
mov
aaa
push
shrb
in
out
fstl
test
push
xor
movsb
dec
nop
mull
or
sar
mov
push
pop
imul
mov
aam
test
add
into
vucomiss
daa
inc
pop
test
outsl
jb
xor
scas
mov
sub
ds
lods
ja
mov
pop
mov
add
ljmp
mov
out
sbb
and
pop
ficoml
push
faddl
scas
daa
push
mov
add
fdivrs
and
test
addl
cmp
shrd
sub
mov
mov
mov
push
subb
repnz
xor
jo
fsubrp
push
jo
push
les
in
cmp
cmpsb
movsl
ret
insl
push
push
add
adc
filds
inc
inc
movsl
jl
sbb
adc
les
push
js
fwait
mov
lds
dec
adc
or
sub
data16
mov
popa
scas
jne
pop
fwait
push
add
ret
cs
inc
hlt
pop
sbb
pop
mov
and
push
pop
int
fwait
inc
roll
add
jmp
add
xor
jne
bound
mov
and
loopne
jg
imul
jmp
inc
sub
xchg
inc
mov
dec
aam
or
pop
popa
mov
xchg
aas
rcrl
lds
lea
mov
arpl
add
out
pop
aaa
mov
adc
mov
and
and
jae,pn
fsubr
hlt
filds
jb
inc
in
pop
xchg
out
adc
add
aad
dec
dec
test
popa
cmp
test
dec
lods
out
cld
push
jge
out
les
loop
ja
scas
setae
es
jae
inc
gs
pop
mov
sbb
scas
leave
push
add
adc
aas
dec
sahf
mov
fnstcw
cmp
in
adc
test
mov
fsubrl
jae
aam
mov
iret
cmpsl
popl
add
cmpl
fisubl
jnp
xchg
fs
pop
stos
cmc
mov
sbb
pop
mov
or
pop
xor
int3
inc
and
lock
scas
add
mov
lahf
xchg
or
test
mov
stos
jmp
fwait
test
subl
icebp
movsb
adc
xor
pusha
pusha
cld
aaa
sub
gs
jo
hlt
jle
adc
adc
flds
add
dec
inc
imul
lds
neg
push
sahf
push
insb
mov
mov
or
cs
aad
pop
xor
inc
and
lds
sbb
movsb
imul
test
sbb
xor
jle
pop
test
out
xor
add
outsl
cmp
daa
into
arpl
push
dec
sbb
push
mov
movsb
inc
dec
inc
inc
add
mov
jg
daa
std
dec
pop
pop
fsubr
pushf
pop
fisubl
test
pop
mov
mov
dec
fldenv
jns
aaa
ljmp
cmp
rorb
pushl
xor
pop
sub
adc
les
addr16
fidivl
arpl
bound
adc
adc
out
and
cs
rorb
sbb
sbb
xchg
lds
cmp
loop
mov
and
push
ljmp
and
xor
nop
das
inc
or
adc
mov
test
inc
leave
ret
push
popa
fdivs
hlt
fistps
aam
popf
loopne
loope
aad
outsl
andb
insb
mov
pop
cmc
loopne
jge
outsb
mov
or
inc
xchg
cmpsb
xchg
cmp
dec
inc
jo
push
jl
shr
xor
cmpsl
cli
add
aam
cmp
jle
add
stos
dec
mov
shrb
mov
lods
dec
xchg
and
ss
dec
aas
ljmp
icebp
out
fldt
scas
and
sti
mov
scas
mov
into
ds
dec
dec
popf
adc
insl
mov
je
push
enter
cs
es
pop
in
jecxz
int3
data16
cmp
in
xchg
dec
add
shrl
rolb
gs
dec
xchg
ds
shlb
pop
pop
and
stc
es
mov
dec
push
adcb
and
xor
mov
aaa
aad
hlt
pop
loopne
mov
cmpsl
and
pop
das
loope
xchg
push
repnz
lods
push
pop
or
xlat
dec
testb
pop
enter
repnz
cmp
cwtl
mov
insl
lods
fdivr
mov
mov
into
std
loopne
pop
out
hlt
es
push
sbb
fucom
cmp
push
sub
add
out
or
adc
fwait
rolb
rcrb
pop
mov
lret
mov
xchg
xchg
xor
rorl
pop
sbb
mov
sbb
inc
test
mov
sbb
xlat
push
movsb
mov
sbb
aam
push
dec
xchg
cld
or
in
test
sub
cmp
jl
push
push
xchg
loop
jnp
sbb
mov
sbb
insb
aaa
ljmp
mov
flds
sub
dec
ljmp
outsl
adc
mov
outsb
xchg
int3
shll
in
ljmp
fbstp
push
fdivl
pop
notb
sub
decb
divl
or
insl
icebp
cmp
es
jns
push
or
lds
cmp
rcl
inc
xchg
cld
mov
mov
mov
xchg
adc
xor
aas
dec
xchg
adc
movsb
push
dec
add
inc
inc
pop
sarb
mov
mov
cmp
adc
sahf
push
mov
push
pop
aaa
call
add
jle
cmpsl
ret
add
jecxz
dec
jns
jns
js
out
jecxz
lahf
sbb
paddq
sub
mov
jno
andb
inc
aad
xchg
mov
cmp
test
mov
push
cmpsb
mov
cltd
lock
ret
out
add
loopne
or
dec
sahf
xchg
out
mov
jno
push
inc
fadd
aaa
adc
sbb
mov
sbb
in
in
subl
filds
cmc
aaa
addl
jle
in
std
xchg
dec
adc
loopne
out
loopne
stos
lds
push
daa
pop
sbb
xlat
push
add
sbb
fisubrl
dec
mov
mov
ret
or
aam
inc
sbb
data16
add
cmpl
and
in
jmp
sub
inc
xlat
xchg
fmuls
xchg
inc
jge
xor
jle
movl
into
out
or
sub
stos
std
pop
adc
fbstp
ja
testb
cmp
and
and
call
xchg
push
or
shll
and
mov
pop
nop
mov
cmp
ss
push
add
int
shll
xchg
cltd
mov
inc
push
add
icebp
mov
je
xchg
or
add
imul
or
arpl
aas
push
xchg
mov
rcl
push
outsl
or
mov
lods
add
orb
jg
jns
push
adc
iret
cmp
imul
in
les
pop
jmp
mov
and
cmpsl
jle
rcr
jno
and
cld
mov
cmp
insb
push
fs
adc
in
sahf
xlat
sbb
popf
cli
or
push
jne
mov
inc
lret
jg
int
and
adc
loope
inc
push
cmp
inc
xchg
jmp
pusha
scas
into
loope
lds
out
jp
sbb
ljmp
jecxz
sub
dec
xchg
std
inc
ss
add
lret
inc
shrb
inc
mov
cmp
mov
in
jl
imul
cs
jnp
das
out
adc
int
mov
clc
jns
xor
add
outsl
rcrb
in
mov
mov
xchg
movq
scas
sub
mov
and
mov
mov
push
das
inc
xchg
jmp
mov
leave
xchg
push
cli
sbb
adc
sbb
cmc
mov
lahf
mov
xrelease
mov
pop
pop
movsl
inc
dec
and
cmp
sub
mov
pop
jbe
repz
lock
insl
mov
sbb
xorl
scas
pop
lahf
test
cmpsl
adcb
mov
cmp
cli
adc
inc
pusha
into
sub
inc
xor
mov
push
leave
adc
adc
add
xchg
adc
lcall
insl
fstps
push
dec
xchg
mov
mov
les
inc
push
aad
scas
frstor
xchg
xchg
mov
push
and
push
push
nop
call
out
imul
and
ljmp
mov
lahf
sbb
mov
cwtl
out
mov
es
insb
mov
stos
xchg
leave
push
lods
push
aam
enter
dec
lods
xchg
xor
mov
mov
add
data16
jmp
fldt
rolb
cmpsb
push
ds
rolb
repz
sbb
xor
gs
je
lods
lea
and
xchg
and
lcall
inc
mov
inc
cmp
adc
add
in
and
add
push
roll
mov
outsl
push
icebp
scas
adc
fwait
mov
call
sub
pop
icebp
jb
mov
pop
fbld
hlt
icebp
xchg
enter
jmpw
icebp
and
notl
push
mov
push
movsb
in
jbe
mov
lahf
call
mov
das
xor
rorl
mov
scas
fwait
push
xor
cmp
add
cmc
sbb
add
sub
and
leave
mov
or
mov
subps
aaa
push
sbb
jp
les
repnz
add
fsubrs
sub
xor
and
add
or
dec
in
fdivs
lret
xor
icebp
into
mov
xor
scas
adcb
mov
pop
lahf
or
icebp
nop
inc
aas
mov
scas
push
pushf
ss
lcall
xor
mov
sub
repz
pop
icebp
fs
push
sub
in
sahf
test
pop
cltd
imul
addb
jp
cmp
das
pop
mov
jo
inc
jge
adc
ljmp
dec
in
push
cwtl
imul
lock
popa
sbbb
ds
out
jmp
negb
and
mov
cmp
rcrb
lds
lock
into
loopne
movsl
enter
xchg
mov
shl
arpl
and
mov
mov
loop
ja
pop
adcb
test
cmpl
xor
inc
aam
cmp
sub
xchg
jnp
loop
and
sub
adc
popf
sbb
mov
fwait
cmc
clc
sbb
mov
add
sub
sbb
push
movsb
jb
inc
mov
xor
rorb
sub
fldcw
loope
int3
and
call
das
inc
xchg
dec
stc
mov
lods
sbb
ja
inc
out
int
inc
push
loope
test
fimuls
in
dec
ljmp
push
pop
mov
in
inc
cmp
jmp
cmpsl
xchg
lea
mov
push
movsb
int3
cmpsl
mov
sub
ret
jns
xchg
cmp
testb
add
jae
movsl
das
mov
fdivrs
inc
repz
sub
pop
mov
or
push
ja
dec
gs
loop
ficoms
mov
jle
fbstp
jl
clc
cmpsb
insb
or
and
xor
jo
xor
outsb
das
adc
add
popf
inc
shll
push
add
add
sbbl
mov
xor
inc
pop
inc
pop
mov
test
hlt
xchg
mov
popa
jb
out
cmpsb
rcll
dec
fs
dec
jne
xchg
dec
mov
fnstcw
or
jg
add
hlt
mov
out
push
mov
icebp
cmp
inc
add
jb
push
sbb
xorb
inc
gs
enter
jb
in
pop
pop
out
pop
jle
mov
jno
mov
gs
add
cltd
fwait
dec
sar
jle
fadds
mov
lods
xchg
mov
lock
icebp
sarb
or
push
nop
arpl
into
sub
cmp
mov
sbb
call
xor
aas
imull
push
push
mov
lret
cld
cmp
stos
cli
into
test
jae
std
add
pop
call
sbbb
lds
inc
push
push
add
jns
xor
dec
test
jno
rcrb
xorl
fiadds
sub
repnz
insl
daa
lret
mov
call
popa
xchg
orl
dec
addl
js
ds
mov
cmpsb
iret
mov
jnp
cwtl
add
and
int
shlb
or
cmp
scas
cmpsl
fsin
movsl
pop
xchg
mov
insb
xchg
pop
stos
or
leave
pop
movsl
jmp
jns
jbe
xor
jmp
lret
adc
mov
aas
test
inc
stos
or
aad
dec
insl
cs
and
leave
movsb
mov
and
aas
mov
lcall
fcmovnbe
cld
xor
jp
mov
es
aaa
scas
sub
addr16
pop
xchg
stc
cmp
cmp
push
faddl
loopne
leave
fisttpll
sbb
test
out
stos
adc
icebp
jo
dec
jns
mov
mov
enter
popf
xorb
iret
inc
push
testb
incb
int3
imul
test
mov
divb
sub
cmp
fptan
jne
push
int3
mov
cmpb
pop
cltd
dec
movsb
sbb
mov
dec
clc
pop
jb
jge
jns
icebp
js
addr16
jg
and
out
xor
popf
mov
mov
push
inc
cmpsb
jl
hlt
nop
stos
inc
bound
jns
sbb
leave
pop
and
inc
cmp
push
daa
sbb
lea
or
mov
pop
cmp
fimull
outsb
mov
aas
outsb
or
jl
ss
pop
loope
insb
jge
or
push
stos
fisubl
jae
cmp
mov
clc
add
into
outsl
shll
je
or
cmp
nop
ds
cmc
push
sbb
jp
loopne
sbb
push
cli
push
fdivp
sub
test
cmpl
jns
mov
sub
mov
adc
xor
lea
shll
stos
inc
shr
fmul
fadd
pop
and
fadds
lea
push
rcl
shr
jo
iret
adc
adc
imul
nop
jo
or
clc
scas
fcomip
or
repz
imul
sub
movups
cmp
adc
xor
ja
xor
fists
sti
mov
add
adc
lds
gs
push
jl
push
gs
out
cltd
popa
sub
fiaddl
or
sbb
fdivrp
push
mov
andl
movsl
call
cmp
mov
outsb
ja
adc
hlt
jo
lds
repz
out
pop
test
jnp
cmc
jl
pop
inc
adc
test
cmc
or
add
dec
pop
out
imul
test
cli
scas
mov
xchg
pushf
push
out
inc
dec
hlt
daa
sub
mov
fistps
lret
cli
out
mov
cltd
adc
aas
test
push
pushf
hlt
mov
mov
insb
sub
xchg
xchg
aam
mov
cs
movsl
repz
cmp
dec
test
rorb
scas
gs
pop
fwait
push
out
movsl
pusha
sbb
int3
push
sahf
addr16
push
pop
ljmp
orb
loop
scas
lods
rcrb
and
pop
out
and
lret
movhps
cmpsl
aas
sub
add
out
xchg
das
mov
inc
add
lods
lea
mov
call
gs
sbb
lds
das
imul
ljmp
in
push
testb
xchg
adc
xor
push
xor
jl
dec
out
stos
in
xor
jnp
cwtl
or
cmp
push
lret
inc
mov
cmp
lods
jbe
mov
mov
add
repz
mov
je
push
fsubrl
cmpsl
ficoms
inc
fnstsw
mov
or
sub
or
or
data16
sub
pop
add
pop
int
dec
xor
xor
cmp
int3
xorl
xor
rorb
sub
pop
fcompl
filds
and
imul
shlb
mov
mov
leave
inc
dec
test
pop
adc
dec
test
aad
call
scas
sub
adcl
in
and
push
icebp
neg
int
add
push
fistps
lret
jmp
pusha
loop
pop
xor
clc
lds
cmp
mov
pop
cli
cmc
or
fidivs
sar
mov
je
ret
mov
scas
in
sbb
ljmp
mull
jae
push
loop
sbb
xor
inc
xchg
rorl
dec
inc
adc
mov
std
subl
pop
fwait
and
and
jge
mov
xchg
xchg
cld
ds
cmp
sbb
adc
sub
mov
testl
jmp
dec
pushf
mov
inc
lret
bound
rcrb
cmc
jecxz
repnz
imull
dec
jne
push
mov
out
scas
add
imul
rcll
test
hlt
lahf
or
sahf
ds
in
sbb
outsl
xchg
shlb
or
pop
mov
in
out
xor
sub
cmpsb
push
ret
adc
jns
cmp
and
les
test
gs
pop
ss
cmpsb
mov
in
sub
pop
aaa
xchg
mov
mov
jae
sub
dec
cmp
jbe
mov
push
inc
inc
add
push
dec
and
push
movsb
xor
mov
or
sbb
aam
pusha
and
outsl
jecxz
mov
cmp
adc
in
xor
pop
inc
cmc
cmc
mov
cmp
repnz
testl
push
mov
cmp
mov
jge
adc
sub
jae
sahf
int
adc
adc
pop
movsb
pop
int
sbb
btr
mov
sbb
sbb
sahf
jb
stos
loopne
add
xchg
push
inc
mov
ret
repnz
test
jne
jnp
into
mov
jl
ja
add
jns
xchg
out
add
mov
movsl
aaa
adc
dec
jl
push
fwait
test
push
push
iret
push
push
popf
push
in
int3
repnz
aas
sti
loopne
js
test
xchg
xchg
cmpsb
mov
xor
fyl2xp1
scas
dec
cmpsb
cmp
enter
sbb
cmpsl
xor
sub
mov
mov
andl
incb
xchg
rolb
add
xchg
xor
adc
xor
in
data16
aam
push
add
jb
shl
jo
inc
lcall
mov
mov
leave
add
clc
in
in
ficoml
test
add
xchg
mov
rcll
sahf
cmp
fbld
js
xor
mov
in
stos
insb
dec
lret
aaa
pop
jmp
sar
lret
nop
dec
xchg
aad
jno
stc
fdivrs
dec
add
repz
dec
outsl
dec
out
repnz
out
pop
mov
cs
or
inc
add
jg
into
fisubrs
scas
test
xchg
xchg
pushf
sub
testl
mov
mov
inc
pop
je
inc
fdiv
icebp
data16
jmp
cmp
add
nop
jne
xorb
insl
mov
cmc
rcrl
sub
out
fidivs
int
ret
insb
int3
xor
inc
shll
cld
push
push
cmpsb
outsb
mov
mov
aas
add
xchg
lds
mov
cmc
xchg
cmpsl
adc
sub
gs
jne
nop
push
push
jmp
push
sbb
das
pop
test
popf
pop
mov
cld
shll
dec
dec
jle
mov
in
ljmp
sbb
loop
xchg
int
inc
push
xlat
sub
xchg
call
divb
mov
push
jmp
mov
idivl
push
xchg
mov
pop
xor
push
cs
mov
sub
in
jne
mov
push
addr16
jnp
in
je
pushf
or
mov
add
cltd
es
je
enter
mov
fnstsw
mov
jl
push
xchg
jno
lea
fildll
push
xor
mov
jo
pop
dec
jl
fsub
inc
les
mov
or
lret
loope
outsb
cmpsb
cmpsl
or
out
clc
sub
ds
or
fldt
lds
pop
dec
and
ret
popf
repz
mov
outsb
pop
and
jnp
inc
pop
push
inc
mull
push
int3
out
jp
mov
cmp
call
repnz
sub
mov
pushf
dec
dec
dec
insb
rcl
cmp
jge
sbb
jns
scas
push
inc
add
jns
jge
fisubrs
xchg
in
cmp
fnstsw
out
xchg
popa
lods
shll
jg
mov
mov
and
add
cmpsb
rcr
std
sub
out
ror
sbb
jnp
repz
inc
divl
push
fwait
inc
lods
mov
push
fistl
push
sahf
mov
fisubrs
add
fisttpll
jp
fs
out
enter
lock
xor
jae
lods
ds
ljmp
ss
movsb
stos
inc
push
shlb
out
pop
test
sarl
je
cmp
add
jp
in
mov
fldl
popf
ret
subb
negb
jmp
fsubrs
add
rorl
sbb
push
pop
push
loop
mov
lds
pusha
xor
sarl
push
xor
jnp
sbb
add
jae
xlat
loope
enter
and
lret
icebp
push
sbb
sbb
push
out
xor
outsb
push
jge
sub
jno
xchg
mov
or
add
in
data16
gs
jecxz
push
ds
add
dec
jl
xor
sub
pushf
rcrl
mov
add
aaa
inc
lret
xor
outsl
cmpsb
jb
xchg
int3
sbb
pop
stos
pop
add
out
maxps
mov
sbb
dec
and
ror
cmp
fs
into
sbb
push
adc
pop
rclb
jecxz
daa
or
popf
adc
cmp
or
jle
sbb
and
pop
mov
imul
mov
cmp
jp
xchg
ljmp
lds
sbb
movsb
sub
add
adc
adcl
mov
divb
sbb
vcvtdq2ps
cmpsl
fstps
cld
sub
mov
aam
fdivrs
push
scas
lret
idivl
call
sahf
outsb
lahf
pop
nop
sub
iret
mov
jae
in
pop
repz
xchg
adc
jg
insb
daa
fcoms
xlat
pop
clc
mov
and
mov
rcl
mov
mov
out
loop
mov
xchg
lods
ds
mov
into
repz
icebp
fisubs
sbb
inc
mov
jp
nop
mov
popa
notb
xchg
test
fsubs
inc
movzbl
aas
aad
add
push
mov
fildll
cltd
imul
test
test
xor
int
call
repz
ror
scas
inc
daa
jns
hlt
add
lahf
push
sub
adc
xchg
pop
out
xchg
or
and
dec
mov
addr16
jmp
dec
int
sub
aad
fucomp
push
mov
jl
idivl
or
in
mov
addl
decb
outsl
mov
lock
shl
push
fiaddl
bound
in
dec
ret
gs
jae
ret
sbb
int
push
insl
add
dec
pop
adc
stos
and
shll
adc
mov
loop
lods
sbb
jno
push
jnp
adc
cs
dec
mov
pushf
lahf
ror
push
jl
shll
aas
jne
pop
scas
xchg
fsts
faddp
cltd
xor
dec
aam
stos
jno
out
mov
lahf
sbb
dec
push
sub
inc
pop
daa
lods
or
jne
xchg
push
scas
pushf
add
and
outsb
mov
ret
cltd
fcoml
daa
push
add
repnz
lahf
push
leave
in
fs
mov
sbb
pusha
je
cmpl
jo
bound
cmp
jge
int3
stos
cltd
int
dec
mov
movl
sub
das
cwtl
and
and
xchg
add
sbb
mov
repz
subb
leave
pop
aam
xbegin
cli
fldt
lahf
sbb
add
add
add
out
scas
int
jmp
mov
mov
push
lea
jmp
sbb
ljmp
pop
cltd
inc
or
mov
loopne
xchg
xchg
push
cmp
and
cmp
or
pop
push
xchg
clc
and
dec
cmpsb
push
shr
mov
notb
in
xor
iret
setbe
fs
setge
lods
adc
scas
sbb
shll
mov
add
pop
insl
adcl
lret
ljmp
and
into
xchg
daa
out
or
stos
inc
shlb
ja
pop
pop
pop
pop
loopne
sbb
add
adc
mov
scas
pop
popa
out
fildll
movl
gs
push
sarb
or
loop
aas
movsl
sbb
jae
addr16
cmpsl
cmp
add
addr16
sub
repz
arpl
pushf
int3
add
loopne
mov
xchg
sbb
push
xchg
push
pop
into
jb
xor
mov
enter
xchg
idivb
test
lock
push
mov
loope
pop
or
leave
sarl
cmp
popa
scas
fidivl
sbb
mov
mov
add
mov
adc
push
fstpl
std
out
mov
mov
mov
xor
or
jle
mov
popf
scas
sahf
sbb
mov
push
sub
iret
mov
in
shll
mov
popf
sbb
xchg
jae
or
xor
push
enter
cmpsb
movsbl
fwait
sbbl
xchg
cmp
sbb
data16
imul
fistl
adcl
push
mov
push
xchg
cld
xchg
sarl
pop
mov
jns
dec
cli
ds
jl
lret
jae
mov
repz
mov
jae
ja
adc
sbb
lds
pop
cmp
or
mov
rcll
lods
andl
les
cmp
pop
mov
push
out
pop
popa
sub
js
jg
add
mov
mov
sub
cmp
cmp
cs
bound
inc
mov
adc
or
inc
rcrb
add
aad
mov
int
mov
sub
in
sub
int
cmp
jle
dec
push
andps
cmp
inc
mov
out
dec
dec
aad
sub
push
pop
sub
xor
or
fs
cmp
mov
push
sub
das
or
cltd
cmpsb
dec
cs
popf
fdivrs
pop
adc
xchg
mov
lods
ds
cld
sbb
aam
pop
or
lcall
notl
cmpsb
inc
mov
dec
scas
xor
sbb
jae
sbb
xchg
xor
leave
lea
xlat
div
inc
push
pop
iret
cs
cmp
xchg
push
fnsave
adc
iret
or
mov
dec
movsl
test
das
xchg
bound
push
pop
jle
pop
push
movsl
jecxz
subps
jnp
jne
aas
rclb
pusha
popf
adc
scas
btr
pop
cld
insb
cmp
inc
adc
cmp
cmp
fs
mov
mov
inc
mov
scas
pop
iret
or
imul
outsb
pop
int
mov
or
pop
add
xchg
mov
cmp
rol
or
dec
test
mov
xor
cli
xchg
dec
and
outsl
js
mov
repnz
fs
jp
mov
pop
stos
sarb
movsb
cmp
shr
lcall
add
or
xchg
out
jb
xor
cmp
int3
enter
das
and
cmc
inc
adc
push
push
sbb
sti
sub
outsb
int3
aad
imul
loop
out
mov
xchg
xor
test
pop
in
in
xor
out
adc
xchg
add
shrl
pop
and
adc
testl
mov
pop
mov
out
push
xchg
xchg
jns
xchg
cmp
sete
mov
sarl
cmp
xchg
pusha
mov
cmpl
jmp
mov
xchg
jb
out
push
cmp
call
lds
insb
aam
and
popa
pop
fsubp
dec
xchg
pop
mov
dec
or
push
shlb
jmp
call
jnp
jno
in
ret
dec
das
xchg
je
push
jg
ja
inc
xchg
in
in
ret
and
sbb
out
mov
sbb
push
shr
pop
add
xlat
stc
mov
sbbb
sbb
test
sbb
divl
push
mov
mov
push
dec
sti
test
add
pop
push
ror
loopne
sub
cmpsb
popa
and
and
fld
bound
add
and
jle
imul
and
in
mov
aad
cltd
data16
lret
mov
sbb
imul
pop
lret
adc
mov
mov
clc
xlat
mov
pop
and
mov
mov
insb
js
in
xor
xchg
cmp
iret
int
add
dec
aad
movsb
sub
rcll
insl
outsl
out
cmp
adc
lods
cmpsb
cmp
pusha
ds
or
jl
mov
jmp
cmpsl
pushl
push
pop
std
sub
fistl
cltd
in
test
test
dec
xlat
and
orb
or
and
push
loop
cs
orb
push
punpckhwd
sub
mov
mov
xchg
loope
imul
push
add
repnz
leave
mov
xchg
decb
cmp
mov
cmp
fsubl
xchg
imul
fstl
iret
aas
popa
sbb
sub
pusha
jnp
sbb
add
pop
mov
xchg
lods
aam
lret
out
push
sarb
dec
mov
and
pop
xchg
lcall
in
mov
fwait
inc
pop
das
pop
pop
xchg
mov
push
stos
cmpb
stos
dec
cmp
shr
addr16
xor
out
jmp
enter
jmp
jb
inc
xchg
repz
xor
push
mov
adc
jle
inc
mov
sub
test
adc
jp
mov
subb
push
xor
mov
jne
mov
inc
mov
xchg
test
es
mov
cltd
arpl
pop
xchg
push
leave
xchg
add
test
std
xor
or
and
call
add
jne
lock
mov
in
and
fcomps
jbe
ds
into
iret
sub
push
ja
cmpsb
push
add
cld
pop
shlb
or
dec
jb
or
rorl
movsl
ret
cmc
mov
push
repz
imul
movsb
ret
stc
adc
sub
aam
xor
dec
jl
decl
popfw
movb
mov
out
test
ror
clc
int3
add
adc
les
lea
push
ds
mov
or
nop
enter
hlt
adc
aaa
adc
cmp
xlat
push
dec
sbb
adc
xorb
jg
in
jecxz
sub
xchg
xchg
inc
andl
push
cmp
lock
jns
and
stos
nop
dec
int3
lods
cli
loopne
sbb
out
inc
mov
out
lds
sub
inc
sbb
cmp
and
ret
ret
add
lods
push
scas
sbb
adc
mov
fdivr
add
mov
push
push
and
rol
xor
paddq
add
sub
sbb
dec
int
movsb
aad
fnstenv
leave
xchg
mov
js
das
in
fisubl
push
push
jmp
cmp
mov
ljmp
imul
mov
rcll
cwtl
enter
aas
movsb
mov
divl
push
push
std
in
mov
adc
loop
xorb
and
xor
cs
adc
xor
and
adc
pop
dec
or
lret
push
es
inc
cs
and
test
int
push
sbb
mov
cmp
mov
hlt
stos
das
in
ljmp
jp
adc
fists
in
xchg
repnz
dec
and
inc
xchg
jno
xor
adc
repz
pop
pop
cli
insl
in
dec
mov
add
insl
or
stc
cmp
inc
cwtl
out
les
sahf
jnp
sahf
push
sarl
bound
cli
add
test
mov
sarb
add
push
outsb
scas
popf
cmp
dec
addr16
fsubs
adc
mov
mov
or
adc
cmp
sub
pop
ret
push
or
mov
dec
ret
xor
add
pop
ljmp
movsw
fistps
mov
scas
idivl
adc
inc
shrl
lret
cmpsl
test
xor
cmp
lcall
shl
inc
sub
jmp
scas
das
push
sbb
xor
mov
inc
lods
mov
xchg
leave
hlt
test
pop
sub
addr16
mov
cmp
adcb
sub
or
sbb
cld
lret
fldenv
or
pusha
fsub
jp
mov
iret
stos
ljmp
cmp
cmp
mov
inc
imul
dec
cwtl
pop
or
push
andb
or
cmpsb
hlt
fs
sbb
sub
repnz
repnz
mov
pop
loopne
cld
ret
imul
adcb
out
mov
jne
dec
pop
add
and
xchg
xchg
das
or
jno
daa
sbb
push
mov
pop
pop
xor
add
mov
and
sub
xchg
adc
mov
jbe
xor
fwait
pop
lcall
daa
or
jbe
xor
dec
mov
add
in
mov
and
adc
mov
mov
and
cwtl
and
jno
lods
cld
lea
lcall
out
push
repnz
add
inc
inc
rorl
jne
jo
imul
xchg
mov
adc
out
je
out
cmp
jge
add
testl
movsb
pusha
mov
push
cmp
xor
out
xor
es
jbe
dec
in
jne
mov
pop
adc
test
sub
inc
jle
flds
fmuls
jb
mov
jg
adc
dec
call
adc
std
cmp
in
and
mov
jbe
mov
xor
xchg
fdivl
int
data16
adc
cs
inc
push
mov
mov
adc
inc
fidivrs
jnp
push
inc
nop
sub
inc
aas
cmp
xchg
push
mov
fsubr
inc
les
cmp
adc
lret
xor
ret
sub
das
sbb
movsl
cmp
mov
jae
lock
mov
and
ret
shr
hlt
cs
fldcw
enter
mov
es
cmpsl
out
adc
and
fmuls
jb
xchg
flds
push
dec
add
cmp
inc
adc
outsb
pop
or
fidivs
adc
insl
mov
mov
mov
les
fsubrl
loop
out
mov
mov
inc
or
pop
adc
or
into
js
je
sbb
adc
pop
push
add
jo
push
repnz
loop
xchg
inc
mov
pushf
cmpsl
sti
push
jecxz
add
mov
dec
jecxz
fldl
cld
inc
xchg
scas
mov
div
lds
mov
stos
and
mov
orb
and
adc
pop
jnp
repnz
xchg
pop
outsl
sbb
mov
cmp
mov
das
adc
push
dec
es
mov
jl
push
xor
push
out
push
test
les
sarl
pop
and
dec
and
ret
jb
imul
mov
dec
cmpsb
sub
icebp
push
sub
or
cmpsl
lds
ljmp
and
cmp
cli
addr16
mov
xor
dec
scas
mov
sahf
jle
shll
jb
cs
jecxz
sbb
pop
push
addr16
ret
adc
je
mov
fld
push
mov
push
fisttps
pop
arpl
push
idivl
leave
fnsave
cmc
sbb
dec
fwait
xlat
pushl
mov
xchg
dec
mov
enter
iret
push
lret
cmp
mov
lods
and
shr
add
mov
jno
push
imul
xchg
adc
shlb
clc
jo
repnz
popf
add
jle
faddl
shll
dec
loope
pop
or
xor
adc
xchg
loopne
jae
jge
add
les
push
xor
inc
into
or
shlb
xlat
push
push
sti
push
in
sbb
pop
insb
and
scas
fwait
iret
fcmovb
jbe
inc
mov
xchg
pusha
arpl
dec
xchg
push
lock
mov
in
ja
ljmp
mov
sahf
popa
lret
fwait
int3
enter
push
imul
loopne
dec
mov
movsl
addr16
mov
aad
adc
sti
push
flds
cmp
jp
push
fbld
cmpl
dec
mov
clc
aad
jl
int
dec
lret
scas
push
inc
adcl
arpl
mov
out
movl
into
xchg
sbb
dec
xchg
mov
mov
aad
or
negb
test
xor
lret
dec
rolb
inc
jnp
add
and
sbb
popa
lods
add
lea
fisttpl
fwait
pop
lock
bound
addr16
cmp
mov
cli
push
test
jne
cmp
aam
lods
xor
sub
loopne
xchg
fldcw
mov
inc
insl
insb
pop
inc
int
sub
and
push
aam
jno
scas
pusha
mov
inc
filds
stc
mov
sub
push
in
imul
aad
inc
mov
jl
push
push
cwtl
add
inc
mov
imul
fstp
mov
mov
dec
das
xor
jno
fnsave
fmuls
call
js
je
scas
or
fs
nop
call
xor
sub
push
cmpsb
xchg
xor
fnstenv
xor
out
and
fcmovbe
dec
inc
or
or
or
pop
xchg
test
movsl
mov
adc
push
xchg
mov
mov
popa
stos
push
cs
cwtl
shlb
fistpl
lret
lcall
leave
in
lret
jecxz
sub
imul
test
cltd
sbb
or
jge
inc
dec
push
movsb
xor
fwait
mov
dec
nop
or
push
or
mov
jmp
and
inc
pop
dec
gs
stos
int3
and
xchg
les
or
sbb
sub
fmull
mov
sahf
mov
aaa
lret
cmp
icebp
sbb
movsl
leave
fcomi
sahf
in
mov
ret
pop
mov
dec
sbb
scas
lret
mov
or
jl
gs
aas
mov
cld
push
hlt
scas
sub
lods
test
mov
and
mov
popa
aaa
add
inc
cmp
imull
insb
pop
sysret
push
jne
xor
xor
imul
jp
sub
xchg
push
fwait
clc
cmpsl
sub
sarb
add
jmp
ss
fisttpl
out
dec
icebp
sbb
ljmp
andl
lret
push
pop
dec
popa
xor
aas
or
inc
cmp
imul
and
dec
add
cmp
pop
sub
mull
cmp
ljmp
lods
xor
sbb
push
dec
mov
gs
pop
and
add
pop
sbbl
inc
push
add
jmp
jecxz
lods
scas
dec
imull
or
repz
push
push
sub
sbb
rcl
xor
cmpsl
add
cmp
cmpsl
adc
stc
std
pop
leave
push
jbe
pop
mov
mov
mov
mov
cli
js
pop
je
dec
in
ror
arpl
popf
adc
mov
mov
out
mov
aam
fnsave
sub
pusha
jmp
daa
daa
jne
cmp
inc
popl
int3
loop
repnz
ja
inc
arpl
pop
pop
call
xchg
ret
addr16
rolw
insb
sub
iret
dec
das
pop
leave
js
sahf
jecxz
jmp
int
stos
push
cmp
aas
cltd
push
stc
xlat
ss
orb
sub
mov
xor
fimull
je
mov
imul
xchg
dec
push
pop
lret
add
pusha
and
movsb
not
pop
lds
cmpb
scas
pop
arpl
mov
les
das
adc
dec
popf
push
push
das
dec
mov
sbb
test
pop
xor
mov
pushf
xchg
loopne
aaa
fs
test
mov
sub
xchg
mov
pop
jp
xchg
cmp
hlt
adc
push
pop
dec
cld
daa
stos
cld
or
sbb
imull
out
inc
ja
pop
mov
lods
push
or
fwait
xchg
pushf
call
and
pop
iretw
xchg
repz
lret
jl
or
adc
dec
sbb
inc
mov
bswap
mov
and
fiaddl
jae
xor
and
jbe
inc
js
inc
movsb
sar
or
mov
cmp
cmp
rcrb
push
imul
fmuls
jnp
das
push
arpl
mov
pop
mov
push
cmp
js
mov
popa
add
fcomps
test
inc
lods
or
mov
ret
add
and
insl
icebp
dec
xchg
inc
sbb
sbb
xchg
cmp
fisttpll
mov
xor
add
add
xchg
inc
pop
in
or
leave
cwtl
pop
pop
mov
push
sub
jno
lds
jmp
push
ljmp
dec
xchg
dec
or
mov
dec
test
stos
cmp
mov
xchg
inc
push
enter
jg
pusha
mov
or
pop
inc
cmp
mov
fmull
xor
xchg
sub
aad
and
js
call
sbb
aad
ja
xor
jl
xor
and
addr16
xchg
enter
out
fisttps
insl
jg
add
out
push
xchg
ja
imulb
adc
movsl
out
xor
and
sbb
je
shlb
fldt
mov
push
outsb
add
and
adc
clc
stos
adc
jno
movsl
loop
add
aam
inc
scas
sbb
fsubs
jae
lods
pop
les
repnz
clc
aaa
sbb
pop
inc
nopl
lret
pop
ljmp
icebp
xchg
scas
leave
or
sub
mov
cmpb
fdiv
and
inc
fisubrl
jnp
pop
or
int3
int
mov
in
in
insl
dec
js
inc
cmp
movsb
testb
negb
add
mov
shll
mov
mov
mov
sub
jo
scas
and
push
in
add
sbb
mov
jmp
adc
out
das
add
movb
dec
stos
dec
ja
shlb
xor
fs
addr16
and
lock
lods
pop
or
dec
movsb
popf
repz
xchg
cmp
push
fsub
xor
arpl
imul
out
lahf
dec
mov
or
jle
mov
and
push
shrb
aad
mov
cmp
imul
pusha
repnz
pop
xor
cmp
ja
ds
lock
and
sbb
fimull
adc
scas
sbb
in
jge
subw
jp
mov
mov
jg
popf
or
jne
fiaddl
lret
xor
jg
enter
inc
das
std
jmp
push
js
xlat
adc
ret
inc
adc
fdivl
pop
jno
jno
cmp
int
js
mov
mov
cmpl
push
sbb
xor
mov
sarb
mov
and
pushf
push
lahf
pop
mov
nop
mov
pop
inc
and
sub
xchg
mov
inc
mov
push
daa
idivb
jns
in
mov
aas
movl
and
xor
push
mov
mov
lea
push
add
xlat
or
jno
test
fs
mov
jnp
push
int
out
mov
dec
fnstcw
int3
mov
inc
mov
in
and
inc
mov
rol
in
cmpsl
lods
test
mov
in
inc
mull
cmp
subb
push
paddd
xor
in
cmp
call
fldenv
scas
test
sub
xor
and
jnp
mov
bound
icebp
mov
fwait
xchg
xchg
loope
push
push
mov
sbb
cwtl
lods
mov
sub
push
push
xor
jmp
xorb
mov
ljmp
sahf
pop
bound
lcall
loop
inc
enter
insl
sub
cmp
inc
lcall
inc
push
sbbb
nop
in
push
scas
imul
iret
enter
outsl
and
or
int
stc
xorl
xor
popl
sbb
xor
cs
mov
je
sbb
xor
data16
and
dec
xchg
into
loop
jp
outsl
jno
xor
pusha
insb
sbb
mov
add
or
mov
jge
iret
enter
into
dec
push
add
sbb
mov
or
and
cld
pop
data16
lahf
mov
movsb
movsb
aam
sbb
rolb
inc
stos
or
shrl
xchg
hlt
mov
xor
add
adc
xor
and
movsl
ss
ljmp
add
push
push
jbe
out
mov
push
pop
fbstp
gs
or
insl
xchg
and
add
in
rcr
iret
outsb
adc
sub
rolb
dec
mov
mov
cmp
inc
jb
xor
push
negb
inc
lret
inc
out
rolb
imul
mov
loopne
cli
mov
dec
cmp
rcrl
jp
sbb
lea
cltd
js
sub
pop
xor
dec
dec
fnstenv
inc
xor
std
jle
mov
int
jae
jb
enter
fs
lcall
mov
mov
adc
and
or
mov
ret
sub
jle
inc
push
jg
std
cmpsb
test
fs
fisubrs
push
hlt
cli
mov
mov
fwait
adc
mov
gs
lret
ret
in
or
jp
sbbl
imul
int3
inc
push
mov
and
in
fsubrl
movsb
ret
mov
dec
sub
push
in
push
xchg
lods
mov
imul
sbb
int3
inc
xchg
mov
mov
jg
mov
cmp
in
mov
lock
es
fcomps
cmpb
lea
mov
jmp
push
jnp
adc
pop
lcall
xchg
xchg
pushf
xchg
mov
movsb
int
cld
mov
mov
shll
add
lret
pop
aaa
lea
dec
fs
popf
xor
rcll
lock
jle
push
stos
dec
andb
xchg
loope
ja
pop
xchg
notb
mov
dec
jno
rcl
xchg
fs
and
in
cli
pop
xor
mov
mov
dec
mov
in
rcll
xchg
loopne
adc
sbb
xor
mov
rcrl
pop
sub
jbe
lret
cld
insl
ljmp
pop
mov
aas
mov
sub
shrb
pop
inc
sbbb
stos
jg
inc
dec
std
push
sub
push
pop
mov
adc
mov
pop
lods
push
fs
test
lahf
or
lea
addb
dec
mov
in
testl
mov
sar
mov
jns
push
sub
push
les
hlt
mov
sbb
cmp
fwait
aad
lods
fldl
mov
inc
jmp
mov
mov
mov
fstpt
aam
xchg
bound
test
add
add
mov
pop
sub
fmul
jb
or
pushf
mov
and
js
loopne
out
mov
push
jno
ret
fninit
xchg
dec
and
insl
and
stc
faddl
movsw
or
iret
out
into
mov
push
jns
mov
push
insl
mov
pop
pop
sbbl
dec
es
jmp
gs
sbb
push
icebp
lret
cld
in
pusha
mov
in
xor
push
xor
pushf
pusha
adc
rol
push
popf
inc
test
rorb
mov
and
jb
cld
and
in
fs
mov
loope
dec
ret
push
and
dec
shrb
rcll
pop
jle
jnp
std
mov
ret
xor
sti
es
pop
and
cmp
cs
je
fadds
jns
xchg
lock
fildl
sub
push
mov
mov
jmp
dec
add
outsb
stc
out
mov
test
sub
adc
je
jecxz
cld
sbb
subl
ds
je
jno
negb
sar
addr16
or
jb
hlt
pop
inc
adc
pop
mov
jo
inc
sbb
in
xor
sub
mov
xchg
mov
data16
shl
out
outsl
cmpsl
das
cli
insb
cmp
xorl
fisttpll
enter
sub
aas
lret
jmp
push
neg
lds
xor
pop
pop
lret
mov
or
push
sub
popa
jno
mov
mov
ja
ficomps
movsl
pushf
add
ja
pop
lret
push
add
cmp
je
jp
in
jbe
push
gs
out
loop
cmc
fstps
stc
mov
jg
mov
mov
jge
hlt
movsb
push
lcall
mov
pop
or
daa
sub
push
xchg
shll
push
mov
cltd
ret
xchg
sbbl
outsb
leave
xchg
jmp
shrb
sub
sbb
cli
ljmp
jb
shld
add
pminub
inc
dec
ds
push
int
scas
jmp
loope
mov
add
pop
test
cmp
mov
jo
stos
adc
or
xlat
ja
ljmp
xor
test
enter
mov
aas
push
push
mov
test
movsl
mov
mov
fwait
icebp
adc
push
push
sti
xchg
xor
into
sub
int3
dec
mov
inc
pop
dec
adcl
loopne
cmp
stos
inc
movsl
jns
mov
imul
lock
and
leave
inc
adc
xor
push
cwtl
add
pop
inc
pop
dec
stos
mov
sbb
xchg
stos
fcmovbe
xchg
pushf
or
mov
sbb
push
out
mov
push
dec
adc
lods
or
and
adc
popf
lods
es
or
out
adc
mov
div
fildll
jb
negb
daa
sbb
int
inc
iret
insl
insb
cmpsl
push
and
pusha
into
cs
pop
pop
xchg
push
mov
call
lds
fdivs
cmp
mov
cmp
ss
mov
ds
inc
pop
pop
mov
pop
xchg
jno
sbb
cltd
cmp
mov
jle
sub
mov
cmp
rcr
aad
clc
cmp
pop
sub
into
mov
and
jmp
roll
pop
das
movsl
dec
cmpsl
sbb
or
shll
cmp
push
iret
jle
negl
mov
dec
xchg
data16
push
in
sub
jae
sub
sarb
cmpsl
cs
repz
lahf
jge
inc
or
repnz
mov
lods
mov
sarb
insb
push
or
insl
into
sbbb
in
je
xchg
jp
enter
imul
xchg
leave
or
inc
xchg
pop
outsb
pop
and
sbb
iret
shrl
sti
call
lds
test
scas
xor
push
cmp
outsb
sahf
leave
ljmp
sub
dec
push
fnstenv
mov
sub
pushf
xor
lods
mov
or
cmp
mov
pop
and
sub
icebp
test
dec
adc
sbb
xchg
push
mov
call
push
and
jp
xchg
dec
lods
lds
fstps
outsb
xorl
push
mov
sub
jp
imul
imul
clc
bound
sub
adc
ljmp
movsb
repnz
notl
pop
add
and
pop
pusha
test
jl
inc
in
iret
into
out
movsl
cmpsb
fcmovb
lret
test
xchg
rcl
mull
jbe
sbb
cltd
jb
fbstp
or
movsl
movsb
mov
ficompl
pop
aaa
scas
stc
sub
mov
mov
ja
sbb
add
adc
jno
sbb
sti
arpl
in
sub
mov
ror
pop
insb
fcmovb
shl
dec
dec
pop
movsl
jb
test
fdivl
int
stos
jne
push
mov
pop
sbb
xlat
jo
mov
or
bound
jg
testb
or
adc
dec
mov
arpl
xchg
sbb
push
orl
cld
jns
pop
xor
push
test
sub
stos
adc
leave
and
enter
mov
xlat
push
inc
lea
loop
out
imul
int
add
psrad
sti
out
push
sbb
imul
fisubrl
outsl
cld
dec
xor
mov
jg
fstpt
push
mov
add
sbb
add
xchg
je
xor
fsts
jmp
sbb
push
xchg
pop
roll
inc
sub
mov
iret
mov
xorb
repnz
cmp
push
mov
popa
or
addr16
shll
out
mov
sub
mov
xor
jle
jno
and
nop
notl
sbb
inc
push
xor
hlt
stos
in
and
std
out
testb
sti
cs
lock
sub
push
pop
inc
stos
jmp
shlb
std
mov
mov
fstps
subb
sahf
pop
hlt
push
add
mov
gs
bound
fisttpl
jg
mov
or
inc
xchg
fildl
cltd
je
adc
je
push
ss
jp
fstpt
cmp
test
pop
mov
lock
xor
testl
add
cmp
jge
xor
mov
call
repz
popf
sbb
xor
dec
jno
imul
nop
dec
or
sbb
mov
jecxz
mov
add
xchg
cmc
adc
jb
ljmp
push
cmp
pop
sti
shl
adcb
aaa
xor
jb
icebp
fwait
xchg
mov
adc
into
xor
inc
dec
add
mov
push
enter
cmpsl
and
mov
jb
loope
in
jns
lods
sbb
inc
mov
mov
cmp
test
adc
push
inc
lret
cmpsb
pusha
insl
in
and
pop
jno
xchg
jae
pop
ljmp
subl
push
sar
inc
cltd
es
jge
orb
insl
mov
mov
pop
ja
popa
xchg
js
mov
add
xor
pop
and
out
and
dec
test
shll
pop
lret
push
sarb
mov
jns
dec
mov
pop
adc
adc
pusha
inc
into
adc
cmc
inc
mov
xor
in
outsb
out
mov
cmp
mov
stos
hlt
mov
add
cmp
rolb
dec
mov
mov
sub
xchg
adc
and
popf
xchg
cmpsl
add
pop
dec
inc
cmp
adcb
push
xor
pop
or
jnp
mov
aas
jb
sub
jbe
jnp
pop
push
rorl
pop
fwait
lret
push
clc
inc
mov
mov
push
jl
jmp
lret
pop
push
dec
loope
mov
and
dec
orl
mov
mov
jae
mov
mov
dec
mov
fnstcw
and
pop
jno
dec
sbb
mov
pop
sub
pop
rol
lds
int3
cli
loopne
inc
std
sbbb
imulb
dec
adc
mov
add
ljmp
xor
js
xchg
popf
mov
ljmp
or
push
ljmp
mov
ss
mov
mov
jl
test
ljmp
das
add
xchg
dec
inc
pop
jl
insl
xor
fsubrl
cmpl
cs
jne
and
pop
in
xchg
inc
out
cmpb
sti
ret
fsub
mov
adc
insl
pop
dec
lret
stc
jg
shl
xchg
aaa
inc
push
xchg
dec
lock
sbb
cmp
xor
andb
out
fisttps
stos
or
and
ret
mov
cs
mov
mov
jmp
scas
sbb
je
mov
fidivs
arpl
inc
enter
jbe
push
std
js
mov
jecxz
mov
jecxz
or
je
add
and
shrb
das
cmpsb
pop
insb
jmp
outsb
cld
jnp
test
fistps
clc
sbb
je
bound
jg
cwtl
scas
leave
adc
shll
repnz
xchg
mov
mov
push
mov
std
dec
imul
sub
jg
or
popf
and
in
mov
les
pxor
lret
sbb
jge
cwtd
ljmp
sbbb
and
scas
sub
inc
scas
jmp
cltd
int3
cmp
jno
or
mov
xchg
cltd
mov
jns
mulb
movsl
stos
pop
add
rcll
outsb
mov
xchg
xor
pop
cmc
mov
xchg
shrb
and
stc
dec
in
push
mov
gs
cs
adc
pop
imul
mov
inc
cmpb
mov
pop
or
pop
jae
lcall
ljmp
subb
adc
jnp
aas
in
fldt
jge
fs
jno
jb
cmp
push
lea
push
in
fwait
adc
pop
pop
inc
xor
hlt
orb
mov
in
jecxz
imul
mov
in
push
xchg
rcll
push
cmpsb
sbb
insb
mov
lret
and
jnp
fstl
les
sub
cltd
loop
int
mov
icebp
mov
dec
adc
jae
hlt
cmp
mov
xchg
jb
pushf
jb
aaa
pop
xchg
jecxz
inc
inc
jg
or
push
mov
push
mov
arpl
pop
add
cmp
mov
cmp
dec
push
jg
cmp
bound
arpl
and
inc
out
in
in
xchg
data16
mov
inc
fwait
pop
loopne
hlt
incb
xchg
repz
xchg
dec
cmp
ja
mov
push
sub
enter
add
leave
push
cmp
dec
or
cmc
rolb
gs
lods
mov
stc
inc
sbb
out
or
dec
stos
pop
shr
adc
xchg
gs
lahf
loope
fiadds
mov
mov
mov
cmp
pop
xchg
in
test
test
sbb
sbb
sub
push
add
add
pop
dec
pop
adc
jo
in
out
jnp
dec
dec
xor
mov
xorl
lcall
add
cmp
jo
mov
pop
out
jb
data16
xchg
int
pop
stc
mov
rcr
sbb
ss
pop
push
dec
add
clc
pop
test
xlat
sub
cs
divl
or
in
cltd
sub
pop
adc
fidivs
repnz
dec
ljmp
pop
rorb
lret
add
movsl
xlat
push
andl
in
mov
dec
dec
out
mov
xchg
aas
mov
add
jecxz
sub
dec
xchg
xchg
mov
ret
xchg
adc
filds
addb
pushf
outsl
or
inc
lds
xlat
xchg
or
lea
jnp
cmp
idivl
jbe
sub
cltd
mov
sub
ret
mov
notb
out
stos
test
sbb
fcomip
repz
jae
loop
shr
or
idivb
cmp
cmp
sbb
out
dec
lea
aaa
inc
push
test
jnp
aam
adc
cld
xor
into
jae
mov
push
pop
cld
fwait
mov
mov
stc
aas
mov
aad
xlat
adc
adc
test
xchg
dec
xor
sbb
push
sbb
mov
push
xor
pop
mov
xorb
pop
ss
stos
inc
jg
loopne
add
lret
push
jmp
out
mov
rcll
adc
cwtl
cmp
push
in
test
mov
mov
pop
jmp
int3
ret
and
push
xchg
test
add
icebp
es
cmp
sbbb
inc
pop
adc
rcr
les
push
mov
ja
ds
or
jb
push
xchg
add
test
popf
iret
jge
xchg
pop
roll
xor
enter
inc
lcall
sbb
ret
dec
fiadds
inc
sahf
lock
fldcw
mov
and
cwtl
lret
adc
jmp
lds
out
ror
pop
shlb
popa
xchg
movsb
sub
mov
shrb
pop
or
movsb
sub
cli
sti
add
adc
in
xchg
pop
cmp
push
jo
or
jp
shr
and
dec
scas
sar
lret
sub
mov
push
sub
ds
add
int3
fucomp
stos
test
out
mov
xor
cmp
or
mov
icebp
pusha
cmpsl
sarl
negb
and
iret
dec
minps
sti
or
cmc
push
pop
arpl
lahf
push
out
adc
jnp
sub
pusha
fwait
ljmp
cmp
pop
lahf
mov
stos
and
and
aaa
adc
scas
fsubs
fisubrs
lret
mov
and
pop
sub
add
push
mov
ljmp
sahf
adcb
mov
add
adc
pop
out
les
fs
cmp
add
sbb
xchg
test
test
pushf
jno
mov
xor
addr16
jmp
divl
sahf
jb
out
outsb
adc
insl
flds
cs
add
cmc
mov
jg
push
sub
movsl
mov
xchg
mov
push
fsubrs
mov
loopne
jns
sbb
imul
jge
xchg
sub
pop
pop
stos
jl
fnstenv
faddl
cmp
jns
fs
jo
cmpsl
cmp
cmpsb
movsl
lcall
gs
insl
add
imul
shlb
sbb
and
sub
addr16
xchg
jnp
sbb
test
int
ja
mov
insl
fnsetpm(287
in
mov
aaa
test
sbb
push
leave
loopne
mull
sbb
fwait
dec
ret
push
test
jmp
inc
into
lret
dec
call
fcomps
rcll
pop
mov
xchg
sub
daa
jmp
jne
mov
and
adc
cmpsb
mov
pop
daa
pushf
inc
fs
dec
ds
pop
test
roll
int3
aas
lahf
loope
adc
pop
jns
mov
push
mulb
xor
jle
push
stos
movsb
aam
mov
jno
into
ucomiss
add
dec
es
inc
ret
mov
enter
lock
add
insl
sbb
sbb
cmc
outsl
push
je
insb
mov
movsl
js
xchg
xchg
pop
sahf
sub
xchg
ret
int
add
mov
out
mov
mov
sbb
pop
mov
xchg
mov
shrl
xor
lods
pop
lret
fcomps
pop
movsl
je
sbb
mov
cmpsl
jo
fs
mov
call
data16
out
ds
aam
pop
jo
pop
es
jmp
cmp
lahf
in
jecxz
je
cwtl
jg
xchg
ljmp
gs
or
cld
xlat
cmp
push
in
out
jnp
pop
inc
test
dec
cmp
mov
repz
xchg
shlb
sbb
imul
aam
in
data16
in
sub
sub
xchg
andl
int
daa
push
mov
mov
and
add
out
and
loopne
push
mov
sahf
push
fst
rorb
cmpw
shrl
shrl
cmp
pop
loopne
fisubs
mov
dec
mov
and
sti
shlb
js
inc
imul
sbb
sub
idivb
jno
cltd
addl
loop
pop
fs
lds
mov
testb
fwait
cmp
mov
cmc
std
mov
fiadds
sub
and
sub
pop
scas
push
push
push
fsubrl
fstl
inc
push
sbb
movsl
mov
push
jle
mov
iret
das
call
mov
pop
add
out
shlb
push
ret
jno
int3
xor
xor
and
popf
inc
aaa
repz
lret
stc
xor
pop
dec
mov
mov
mov
lds
fnstsw
jno
nop
repz
dec
cmp
mov
js
adc
or
cltd
in
mov
cld
xchg
dec
test
and
jle
xchg
xchg
stos
push
adc
adc
jecxz
cld
movsl
mov
repz
std
stos
add
int
cmpsb
jge
int3
sub
insl
push
push
test
xor
imul
jae,pt
sbb
mov
push
cmpsb
aaa
pusha
pop
lea
adc
dec
jbe
movsl
addr16
shlb
mov
cltd
mov
sbb
cmp
out
dec
in
mov
pop
mov
jle
imul
push
inc
mov
test
in
cmpsb
xchg
dec
xchg
ret
pop
adc
xchg
jns
shl
push
push
pop
inc
fs
xor
ds
fcomp
insl
sub
lcall
inc
fistpll
push
mov
xor
outsl
mov
sub
push
loop
mov
fcmovbe
xor
mov
jns
mov
mov
inc
and
or
mov
inc
jmp
push
xchg
pop
push
xor
popa
cmp
test
mov
cld
dec
ss
mov
push
pop
xchg
cmp
iret
jae
test
dec
adc
dec
out
mov
bound
add
mov
ds
insb
fisttpl
jl
insl
mov
arpl
xor
out
xor
ss
insb
movsb
clc
std
mov
fidivrs
aaa
outsl
cmp
adc
xchg
xorb
lret
push
jo
pop
mov
inc
lock
add
xor
mov
push
hlt
mov
movsl
cmp
in
mov
inc
les
iret
test
add
out
roll
xor
popf
stos
xor
pushf
pop
movsb
mov
loope
test
dec
push
push
hlt
inc
test
sub
adc
cmp
mov
lods
and
mov
inc
jns
cmpsl
or
cltd
jmp
cmp
xchg
xchg
push
bound
dec
pop
rclb
cmpsb
popf
rclb
das
call
fadd
sbb
mov
rcrl
and
xchg
cmpl
fisttpl
jne
cmpsl
stos
adc
push
loopne
outsl
xor
in
roll
int3
out
fdivp
popa
sub
loop
shlb
inc
jne
scas
adc
sahf
lods
lcall
sub
ss
mov
add
mov
or
mov
loope
xchg
adc
adc
add
or
sbb
push
cmp
loop
mov
cli
jmp
arpl
nop
fcomps
nop
addr16
fstps
inc
pop
incl
push
adc
sub
aam
jg
jae
shlb
jae
jmp
out
inc
push
fiaddl
add
int3
fwait
popa
fidivrl
int
add
inc
dec
push
lsl
fdivr
mov
xchg
add
dec
jbe
lahf
sbb
cmp
int
add
jb
aaa
lods
dec
sbb
shlb
imull
adcb
adcl
popf
lret
add
jmp
outsb
adc
idiv
out
jmp
les
int3
aad
jno
mov
popf
xor
daa
dec
int
das
jp
dec
fwait
imul
jp
jg
scas
push
xlat
add
or
fwait
divl
cli
and
push
pushw
push
push
jbe
or
gs
shll
mov
out
sbb
mov
or
sti
clc
mov
fstpt
sub
dec
js
fnsave
push
je
dec
inc
xchg
mov
pop
sbb
out
cltd
lods
xchg
sub
ljmp
inc
jae
and
push
out
mov
popf
inc
loope
repz
daa
push
mov
pop
out
dec
bound
push
iret
ficompl
not
roll
or
mov
into
jb
xor
mov
sub
mov
popa
xorl
sbb
aam
pop
mov
aam
push
jnp
lods
sub
adc
stos
aad
jmp
mov
mov
aad
dec
lods
mov
fiadds
sbb
loopne
loop
jb
jb
jecxz
xchg
add
jns
pusha
sbb
cmp
repnz
add
inc
imul
aam
scas
aad
lcall
cmp
fwait
lods
iretw
pop
xchg
xchg
mov
imul
mov
and
xchg
notl
pop
pusha
xchg
outsb
call
pop
imul
adc
les
outsb
xchg
rol
and
bnd
in
add
mov
pop
push
adc
cli
push
push
daa
cs
push
and
aad
xchg
insl
mov
inc
shlb
decl
roll
loopne
sarl
mov
sarl
dec
in
roll
mov
data16
mov
push
sub
add
xchg
jge
pop
push
fmuls
cmpl
adc
cld
push
repnz
gs
adc
sbb
fsubs
push
sbb
add
in
movsb
add
int
mov
fnsave
xchg
or
adc
mov
inc
sbb
popl
rcrl
neg
shl
pushf
divl
cld
xorb
loop
mov
dec
add
cmp
stc
paddw
xchg
lret
stc
mov
inc
xor
mov
inc
push
test
lret
xchg
shrl
pop
addr16
inc
je
enter
mov
scas
dec
sahf
add
shll
jns
push
inc
inc
pushf
loope,pt
rcll
ljmp
xor
ret
inc
lcall
mov
xor
dec
stos
or
data16
pop
mov
or
push
jle
add
cmp
pop
popf
push
inc
cwtl
shl
cwtl
sti
rcrl
cmc
sti
pop
inc
xor
cmpsl
pushl
jmp
out
inc
pop
out
jo
cld
add
jne
mov
push
xchg
push
xor
cwtl
mov
pusha
cmp
jg
pop
xchg
pop
lds
mov
cmp
lods
sahf
jg
inc
inc
in
inc
xorb
jg
cmp
arpl
leave
mov
in
and
movsl
and
enter
fwait
or
gs
testb
cmp
outsl
cmpb
cmp
and
lods
jmp
mov
fcomi
mov
sbb
leave
mov
inc
mov
cli
push
stos
cld
and
fcomps
enter
jecxz
decl
out
cwtl
leave
cli
push
out
push
jno
inc
mov
negb
cld
xor
ja
xor
xor
subl
loop
mov
cmpsb
jmp
push
ja
adc
cmpsb
xor
test
mov
jmp
sbb
or
test
repz
push
cmc
dec
imul
add
inc
dec
cmpsl
repnz
mov
scas
dec
or
sbb
scas
inc
test
movsl
and
lret
jmp
or
ja
mov
roll
sarl
mulb
rorl
lahf
mov
rorl
cwtl
lret
movsl
or
aas
insb
xor
test
inc
lods
movsb
dec
ljmp
fidivrs
shrl
stc
adc
aas
rol
mov
sbb
inc
sub
pop
push
mov
repz
pop
dec
push
sahf
add
jnp
mov
int3
mov
inc
inc
dec
or
mov
cmc
orb
int
cmp
cmp
iret
mov
rcrb
xchg
add
push
std
call
dec
sbb
fildll
out
repnz
sbb
into
in
add
sub
xor
push
mov
xchg
push
notl
fimull
and
sub
push
jmp
mov
mov
in
mov
add
sub
xchg
add
xchg
into
mov
je
data16
xchg
xchg
xchg
gs
inc
mov
inc
or
fldt
xor
dec
enter
adc
in
and
xchg
cmp
or
iret
jo
int3
out
stc
push
push
sub
fdivs
lods
mov
ret
mov
pop
and
int
adc
mov
ds
pop
jnp
jl
mov
divb
scas
adc
rorb
lds
pushf
jnp
sbb
js
inc
sub
mov
pop
lret
mov
xchg
dec
or
out
or
outsl
arpl
mov
mov
mov
mov
lea
in
inc
mov
push
ret
je
cwtl
cmp
adc
mov
cmp
cltd
movsl
cs
xchg
scas
mov
repz
jmp
mov
jmp
xor
notb
lret
cwtl
sbb
jo
popf
mov
mov
jo
rorb
into
popf
xor
movsb
add
inc
nop
ds
mov
cli
cwtl
mov
loopne
mov
jae
dec
lahf
rclb
dec
daa
imul
xchg
andb
lock
inc
mov
inc
or
cmpsb
and
push
lods
sahf
sub
les
inc
xor
stos
dec
dec
cmp
lahf
lret
sbbl
sti
scas
mov
xchg
sub
xor
dec
push
lea
inc
sub
xchg
push
and
and
outsb
imul
mov
and
sub
pop
sahf
jnp
fadds
sti
push
scas
test
or
ljmp
or
mov
loopne
arpl
xlat
out
or
decb
bound
jp
lods
xchg
lock
pop
inc
sbb
addr16
outsb
lods
icebp
adc
std
cmp
cmp
xor
adc
push
mov
mov
push
or
inc
adc
hlt
pop
shlb
inc
push
daa
jno
pop
daa
loope
mov
add
cld
scas
sbb
loopne
lds
imul
rcrb
xchg
push
mov
inc
dec
or
pop
sbb
cmp
xchg
pop
movsb
pusha
jl
xchg
sub
xlat
fwait
and
cwtl
repz
xchg
inc
cmp
mov
pop
dec
sub
sub
sti
imul
test
and
push
pusha
mov
dec
fisubrs
pushf
cmpsl
mov
in
das
into
fdivl
cmp
push
int3
lret
jmp
ljmp
dec
lret
mov
ret
mov
movsl
sbb
lea
stos
dec
jmp
je
mov
test
lods
sub
sti
xor
push
popa
add
pop
into
stos
add
testb
cwtl
jmp
arpl
or
jmp
add
ljmp
bswap
insb
sahf
add
xchg
das
add
out
adc
das
sub
insb
inc
lret
das
and
sbb
adc
sub
jl
data16
jge
je
xchg
xchg
sub
loop
lea
movd
call
aad
mov
and
inc
fiadds
std
arpl
lods
mov
xor
push
in
addr16
sub
jecxz
divl
imul
rcrl
addr16
add
or
xchg
mov
insl
inc
push
ficompl
aas
jge
rcrl
sarb
adc
lea
sbb
cmp
adc
cmpl
jbe
dec
mov
mul
cmc
enter
cmp
jle
inc
fistps
fldt
fadds
pop
dec
lods
cmp
stos
push
xor
imul
push
cmp
iret
cmp
outsl
or
push
test
jnp
xor
fcoml
xchg
pop
dec
popa
sbb
int
sbb
cld
adc
adc
loop
push
loopne
xlat
push
test
xchg
inc
bound
xchg
mov
add
xlat
push
test
mov
call
adc
pop
dec
hlt
fsubrl
ss
mov
fisubrl
jle
fnstsw
cli
dec
push
cmp
dec
imul
cmp
cmp
inc
fldenv
xor
mov
das
stos
mov
gs
out
push
mov
test
jae
ja
insl
or
lods
jecxz
test
mov
or
clc
gs
lcall
and
repnz
dec
cmpsb
add
cmp
jo
movsb
leave
or
jge
push
pop
dec
add
jmp
sbb
fisttps
push
push
lcall
dec
inc
dec
cmp
xor
aam
mov
testb
stos
aam
ja
mov
inc
popa
mov
dec
jo
lods
shl
mov
cmp
dec
sub
aam
sbb
cmpsb
lret
mov
push
repz
mov
fcoml
imull
add
xchg
xor
mov
push
sbb
cli
xchg
test
shrl
jle
inc
dec
leave
push
and
push
cwtl
outsb
push
add
cmpsb
jae
movsb
aam
mov
and
mov
ss
inc
pop
idivl
add
add
inc
out
xchg
adc
fsubrl
xlat
inc
dec
sub
out
add
xchg
mov
or
add
int
mov
addr16
arpl
fldenv
lods
fildl
jp
daa
rcrb
push
test
ss
outsb
cmp
sub
add
imul
mov
ret
ret
loopne
mov
jne
push
xchg
std
or
scas
cmc
and
push
hlt
push
mov
lret
call
ds
inc
aam
sbb
dec
test
xchg
or
dec
cmpsb
pop
fimull
scas
jp
push
fnsave
in
sti
sbb
or
pop
add
fwait
inc
scas
add
mov
mov
js
push
xchg
and
nop
ja
inc
mov
mov
add
pushf
dec
adcb
aad
push
mov
mov
sti
iret
outsb
addb
cmp
cmpsb
lock
inc
fcoms
push
popf
inc
loopne
and
adc
push
pop
out
mov
loop
adc
pop
in
clc
cmp
xchg
das
sub
jge
lock
xor
hlt
aam
jnp
ficompl
and
addr16
and
dec
mov
xchg
test
shrl
xchg
pop
pop
movsl
or
out
push
cmpsl
ljmp
and
cmp
jmp
mov
jge
add
aam
enter
or
es
mov
fcompl
addr16
or
mov
jae
aaa
xchg
xchg
dec
lods
sub
in
add
jp,pn
ljmp
mov
cmpb
and
ljmp
xor
pop
and
cmp
out
punpckhdq
pop
out
add
cltd
xor
icebp
out
into
cmpsb
rolb
pop
cltd
and
inc
test
inc
xchg
sub
sub
mov
adc
push
movsl
movsb
mov
mov
ret
push
test
inc
jmp
and
mov
mov
sbb
add
imul
insb
sub
push
stc
out
cltd
inc
cmp
in
jle
push
stc
scas
xchg
test
inc
popa
and
sub
sti
xchg
jns
or
cmp
xchg
sbb
lahf
in
mov
sbb
arpl
jbe
mov
jns
inc
mov
stos
sbb
xor
and
outsl
in
push
or
sub
pop
and
rorb
insl
hlt
jb
js
addr16
pop
mov
std
hlt
stos
push
icebp
bound
push
ljmp
repnz
mov
pop
mov
outsl
adc
mov
xorb
xchg
and
jns
adc
mov
aad
or
fs
cltd
fisttpll
cltd
movsl
lds
ss
jbe
and
dec
imul
loopne,pn
clc
cmp
dec
and
roll
xchg
mov
fidivrs
or
jne
pop
js
cmp
andb
lock
mov
iret
mov
cmp
clc
push
test
int
cmp
sbb
xchg
push
fisttpl
sti
inc
dec
mov
dec
jp
ret
je
nop
imul
jnp
fimuls
les
rclb
cwtl
jbe
cmp
nop
test
adc
add
sub
sahf
out
aad
in
fistl
xor
add
call
cmp
mov
pop
mov
in
pop
nop
jnp
xor
and
in
push
push
in
and
int
iret
and
push
sti
jb
out
jmp
sti
loope
mov
into
neg
sub
cmp
xchg
icebp
fstpt
scas
cmp
mov
jg
jns
jmp
add
push
jp
push
pop
or
pop
test
xchg
pop
push
xor
sbb
mov
xchg
lahf
test
push
testl
mov
out
popa
pop
popa
in
cltd
or
in
and
push
and
mov
sahf
or
mov
jmp
enter
jne
push
cmp
pop
std
jl
mov
pop
in
jo
mov
lds
sbb
sbb
add
fistpl
lods
inc
jae
xchg
mov
jmp
int
arpl
mov
pop
test
sahf
xchg
dec
mov
sbb
int
test
scas
shl
aas
outsl
mov
repz
movsl
xor
add
add
fildll
lahf
mov
jecxz
lcall
lds
lea
jne
mov
test
mov
test
cmp
andl
loopne
push
mov
sbb
dec
inc
mov
cmp
lds
stos
ret
cld
hlt
sbb
mov
sub
jnp
mov
les
or
sub
sbb
faddp
dec
pusha
popl
push
inc
jge
lods
xchg
jp
addr16
mov
inc
int
cmp
arpl
test
fsub
pop
push
test
xor
stc
and
lret
fdivp
arpl
cmp
or
andl
setge
das
imul
test
jo
mov
and
pop
jno
mov
fisubs
sub
jl
push
or
addr16
cmpsb
push
xchg
rcrb
push
inc
or
out
jmp
sbb
lahf
mov
and
sub
lods
jg
adc
push
out
jl
jae
hlt
or
cmp
cli
in
cli
outsb
xchg
in
insl
stos
sub
jp
xchg
lcall
sub
jns
inc
jbe
test
shll
test
incb
mov
aaa
dec
sbb
adc
mov
insb
mov
into
aam
scas
popf
lea
popa
insl
or
out
sahf
mov
stc
mov
lcall
jle
push
dec
movsl
out
push
fmulp
xor
loopne
sti
add
fldl
lea
jae
movsl
mov
sub
outsl
xchg
stos
iret
cs
fisttpl
mov
mov
xchg
sbb
lret
jge
mov
jmp
push
mov
insl
arpl
outsl
sub
sbb
and
pop
cmp
and
inc
insb
mov
call
jmp
cwtl
outsb
clc
pop
lods
xchg
inc
addr16
sub
xchg
popa
sbb
es
scas
cmp
xchg
mov
icebp
insl
mov
pop
icebp
cmpsl
test
sarb
xlat
dec
cmp
push
int3
pusha
cs
test
rorl
dec
ja
mov
test
dec
fs
test
jbe
sbb
fisttps
jbe
cmp
ds
lcall
xorl
xor
xchg
push
or
cmp
mov
mov
stos
inc
xchg
mov
popf
xchg
mov
add
lock
add
das
push
add
rcr
and
dec
lea
push
stc
imul
lods
in
adc
cmpl
jg
mov
pushf
ljmp
or
lea
icebp
or
leave
aad
es
pop
push
inc
scas
pop
rorl
mov
jmp
cmp
lret
inc
add
in
xchg
mov
decl
mov
lret
icebp
stc
lcall
stos
insb
xor
and
aas
mov
or
div
rcrl
lahf
xchg
imul
xchg
cmp
xchg
adcb
insb
call
jmp
aas
mov
mov
push
cmp
xchg
mov
out
xchg
dec
ret
sub
scas
mov
mov
xchg
loope
xor
push
and
jne
setl
mov
cmpb
add
mov
in
gs
and
sub
xor
add
insl
dec
inc
loop
mull
movsb
imul
mov
jl
sbb
in
cmpsl
pop
cmp
or
or
sub
rorb
inc
imul
movsb
jl
sbb
insl
cmp
cld
sub
xor
insl
push
lahf
xchg
negl
or
insb
sub
jmp
sbb
popf
cmp
xchg
aas
fiaddl
loope
mov
lahf
ror
sti
sbb
shl
mov
loope
and
aas
jmp
loop
mov
jle
das
adc
mov
mov
shr
out
xchg
fwait
aas
jno
mov
push
call
inc
test
fabs
out
jo
ljmp
movsl
leave
sbb
add
pop
fdiv
out
adc
cmp
sub
adcb
add
mov
out
xchg
cmp
enter
fcompl
adc
push
lods
cli
xor
mov
movsl
jg
stos
add
sub
mov
mov
repnz
jle
movsl
fcoml
mov
iret
imul
mov
cs
filds
iret
and
pop
jns
push
or
add
shrl
push
int3
add
xchg
lods
xor
adc
dec
out
scas
push
adc
insb
jp
push
jg
pop
mov
ret
jns
out
push
ss
adc
dec
jl
ja
jp
imulb
test
pop
adcl
dec
inc
or
xchg
mov
outsb
das
mov
mul
les
out
dec
loop
mov
jno
jmp
adcl
idivl
inc
hlt
stc
pop
cmp
popl
loope
sbb
or
fldl
xchg
mov
repz
mov
imul
fdivrs
outsl
pop
inc
mov
dec
inc
rorl
test
xor
push
shrb
mov
lcall
rclb
push
data16
fnstenv
add
push
cmp
mov
pop
repnz
pop
mov
ja
cmp
or
dec
cmp
mov
xchg
sub
hlt
add
push
in
in
mov
scas
cmp
ds
in
notb
clc
adc
jnp
lods
dec
mov
mov
push
add
insb
into
mov
and
shll
jmp
and
sub
sub
sti
aas
lods
shll
sbb
insl
fdivr
pushf
addr16
mov
push
aaa
inc
jns
fwait
pop
arpl
cs
xchg
dec
idivl
xchg
call
jl
mov
mov
sti
outsl
mov
arpl
out
into
pusha
sahf
cmp
push
adc
mov
lcall
mov
and
inc
jecxz
push
movsb
out
push
adc
xlat
fldt
xchg
es
ja
dec
pop
aas
js
jnp
js
lds
xor
js
int
lret
or
push
ja
lock
xchg
xchg
xchg
rclb
push
push
sbb
arpl
sub
xor
lret
push
iret
fsub
ror
jmp
inc
cmpsl
enter
cmp
and
inc
sub
xor
fstpl
push
js
inc
popf
push
test
mov
push
push
pop
fwait
addl
stos
ret
push
out
and
cmp
andl
hlt
or
cmpsl
and
and
mulb
and
insb
pop
dec
and
pop
push
mov
push
mov
mov
or
fsubrl
scas
add
lret
aad
inc
pushf
and
inc
shrl
shl
push
daa
xor
out
inc
aaa
lcall
mov
inc
or
push
mov
daa
add
inc
pop
mov
pop
ret
aas
pop
pop
bswap
sbb
fistpl
or
sub
dec
imul
mov
icebp
mov
push
jbe
xor
addr16
or
xchg
cmp
lock
and
movsb
mov
fidivl
mov
cltd
mov
mov
ds
jl
mov
mov
int3
mov
out
insl
push
pop
test
mov
xchg
xchg
cmp
daa
jne
inc
push
js
out
mov
addr16
jne
push
addr16
jns
adc
std
sbb
sbb
es
les
out
rol
sub
addb
ss
cmp
push
mov
mov
out
jp
cmc
lock
lret
add
or
aas
aas
sbb
jne
frstor
mov
push
leave
push
fcoml
adc
dec
fdivl
lcall
or
lret
inc
hlt
pop
cmp
push
jecxz
add
shll
inc
into
pop
mov
ds
xchg
lds
fidivl
dec
sub
sti
pop
inc
add
lcall
shll
stc
test
lds
jg
jmp
leave
jmp
adc
mov
stc
aas
push
mov
add
lret
lcall
test
ds
repnz
test
sub
dec
push
ss
add
clc
cmpsl
mov
mov
fbstp
push
andl
popf
outsl
xchg
ret
sub
aad
in
fcomi
sbb
lcall
test
inc
sti
das
clc
ljmp
arpl
push
sbb
daa
push
sub
jb
arpl
cwtl
jnp
cmc
fs
mov
mov
and
push
outsb
hlt
mov
addr16
call
inc
sbb
push
adc
je
pop
lea
xchg
fbld
pop
add
or
fs
sti
dec
lods
in
adc
and
mov
push
movsb
mov
adc
jecxz
div
mov
mov
dec
stc
adc
stc
leave
jge
fildll
addb
mov
add
jp
in
sbb
scas
dec
iret
cmp
les
outsl
add
inc
dec
adc
push
dec
jns
sbb
lret
adc
test
jle,pt
test
adc
xor
mov
movsl
xchg
xor
jp
test
push
jmp
push
hlt
andl
lea
sbb
jb
fnstcw
aad
mov
sub
insl
sti
popa
aaa
test
les
mov
add
outsb
mov
loop
adc
xchg
xlat
clc
out
inc
dec
sbb
ss
xor
and
lods
sbb
or
xchg
push
ret
and
adc
push
push
push
jbe
and
xchg
nop
scas
mov
or
out
sar
dec
lea
xchg
int3
faddl
and
scas
pop
mov
test
mov
sbb
pop
addl
adc
mov
jae
mov
arpl
fildl
je
stos
xor
or
xor
mov
rcrl
push
or
lcall
push
sub
jge
fisubl
mov
addr16
sub
jge
mov
sub
cli
bound
sti
mov
movsl
mov
xor
and
cmpsb
ret
xor
add
mov
adc
fst
xchg
cmp
pop
mov
sti
push
mov
movsl
xor
xchg
leave
sbb
jg
cs
xchg
jnp
shlb
clc
stos
or
mov
mov
cwtl
js
cmp
and
mov
lret
shlb
jle
jmp
into
into
cmp
push
xor
iret
and
sbb
fildl
xor
mov
adc
dec
std
icebp
push
add
lea
cli
popf
adc
mov
pop
mov
iret
xor
sbb
jne
jp
jnp
cmp
and
jle
fisubs
out
dec
pop
push
cmp
and
fisubrs
sbb
fcmovu
movsl
pop
js
dec
inc
jo
fstps
add
rcrb
mov
movb
mov
ret
cmpsl
pop
mov
adc
in
fistps
imul
dec
dec
mov
or
into
sub
mov
and
or
push
test
frstpm(287
xor
negb
ja
mov
mov
mov
mov
stos
cmpsb
inc
rcrl
js
and
fdivrl
cmp
cmp
cmc
dec
test
leave
push
les
ret
cs
out
or
psubsb
xchg
mov
or
fndisi(8087
scas
cmpsl
sbb
sub
push
mov
sbb
jne
std
pop
ljmp
push
ret
lahf
mov
mov
sbb
mov
push
je
aaa
mov
or
movsb
dec
aad
sbb
mov
sbb
push
cmp
add
std
sub
aaa
fucom
pop
iret
outsl
scas
clc
ss
stc
or
xor
sbbb
cmp
xor
mov
les
or
enter
leave
sbb
jmp
out
lods
nop
pop
cmp
jmp
jle
sti
mov
push
cmp
jge
in
mov
or
xlat
fidivrs
mov
pop
jl
inc
scas
xor
adc
outsl
add
mov
lahf
cmp
pushl
cmp
push
sbb
cmp
lahf
into
pop
repnz
pop
sti
loope
popf
nop
int3
mov
sbb
mov
aad
sbb
movsb
lods
add
jb
cmpsl
inc
xchg
in
rorl
xor
mov
mov
push
icebp
shrb
das
push
mov
jecxz
jne
mov
sbb
iret
xchg
addr16
mov
jnp
movl
cmp
addr16
jno
lods
xor
xor
and
iret
mov
insb
mov
mov
add
lea
aaa
cltd
mov
xlat
adc
pusha
rorl
push
repz
mov
push
xchg
sahf
jae
sahf
dec
popa
adc
jge
repz
flds
xchg
mov
and
rolb
pop
push
cltd
icebp
lahf
lahf
sub
jbe
mov
mov
aad
aas
hlt
pop
pusha
dec
addr16
jecxz
cmp
fcomip
out
lea
push
add
jb
imul
icebp
ljmp
je
outsb
stos
lds
cmp
testl
loopne
cmp
addr16
mov
clc
mov
mov
cmp
mov
sbb
hlt
and
push
sub
push
push
adc
jns
pop
add
movsb
clc
cmpsb
leave
imul
push
xchg
shll
dec
cltd
jle
cmp
aad
test
cmp
mov
mov
shlb
and
pop
and
shrb
nop
mov
or
lcall
xchg
adc
mov
xchg
scas
fcomip
sbb
pcmpeqw
rol
pushf
xchg
mov
push
jle
addr16
pop
mov
jp
out
xchg
shlb
or
ret
jge
jp
iret
or
lods
adc
aad
pop
push
out
lds
je
mov
ljmp
das
nop
pop
out
pop
fwait
sbb
push
scas
lock
pop
pop
mov
mov
cli
mov
lea
out
jecxz
stc
mov
jl
push
adc
in
shr
mov
or
sarb
xchg
mov
mov
push
jge
and
xchg
fldt
daa
mov
mov
cmpsl
mov
xor
jecxz
mov
lcall
xor
fldenv
mov
lahf
push
inc
mov
mov
sbb
inc
aaa
lret
pop
cmp
inc
pushf
jecxz
add
xor
loopne
push
lret
add
js
jne
jne
cmc
movsl
pop
jmp
mov
imul
mov
dec
mov
dec
addl
xchg
cld
sahf
sbb
mov
mov
mov
mov
push
pop
lods
xchg
xor
adc
enter
std
stc
cmp
pop
xor
ret
jns
jge
das
mov
cmp
movsb
adc
adc
test
jae
lcall
shlb
mov
mov
ds
das
mov
mov
xchg
adc
xchg
popf
push
mov
in
inc
outsl
push
sbb
std
jp
jnp
pop
pop
adcb
cltd
shr
dec
xchg
dec
add
aad
jge
inc
jge
movsl
sub
fwait
and
sarl
loope
testl
dec
push
dec
push
test
lea
pop
inc
and
add
cmp
inc
mov
push
sub
sbb
jmp
pop
movntq
out
lahf
pop
into
stos
jns
jmp
lock
jbe
jl
aam
fcomps
sbb
push
imul
mov
inc
ficoml
inc
outsb
jge
pop
sbb
push
mov
pop
lret
or
cmpsb
and
stos
lcall
cmc
mov
and
xchg
arpl
in
xchg
mov
rclb
push
xchg
mov
and
daa
dec
mov
mov
test
mov
sub
and
in
adc
jo
mov
sbb
xchg
ds
sub
dec
fisubl
push
fiadds
pop
pop
or
xlat
pusha
and
inc
xchg
aad
leave
lahf
mov
lock
pop
pop
pop
outsl
out
icebp
or
repnz
jle
add
mov
data16
repnz
clc
out
imul
dec
dec
inc
dec
cmp
pop
lahf
ret
adc
ja
adc
aad
adc
mov
fnstenv
inc
inc
jle
mov
shlb
push
js
mov
aam
lahf
fcompl
xchg
xor
insb
ret
sbb
inc
subl
flds
shrl
outsl
addr16
addr16
push
or
or
pop
mov
push
dec
mov
and
mov
mov
mov
jge
add
flds
mov
mov
aad
inc
cli
push
or
pop
scas
pop
aad
push
inc
popf
out
lret
aaa
mov
adc
mov
in
popa
xchg
ret
mov
jne
xor
jae
daa
adc
shlb
push
mov
cmc
jno
arpl
sarl
mov
mov
xchg
iret
jb
ds
inc
lret
mov
sbb
icebp
ret
mov
pop
out
sbb
sahf
sbb
ljmp
jmp
push
daa
push
in
adc
xchg
mov
pop
imul
lea
inc
xchg
add
pop
jmp
sbb
inc
mov
jo
pop
adc
cmpsl
mov
jge
pop
push
dec
mov
add
xchg
fwait
leave
pop
mov
dec
fmuls
movsl
sbb
popl
cmp
pop
jp
movsl
inc
xchg
sbb
es
mov
cmp
inc
lret
rolb
jle
and
imul
xchg
pop
mov
cmpl
lods
loope
cli
mov
test
mov
mov
iret
test
popa
fwait
outsb
mov
add
and
pusha
loop
jl
shll
xchg
test
femms
scas
jae
xorl
xor
shlb
or
inc
jecxz
jbe
shrb
sbb
jmp
imul
mov
xchg
adc
dec
and
jno
inc
dec
mov
jge
rcrb
inc
mov
adcb
rcl
dec
mov
test
adc
out
repnz
negb
mov
out
data16
repnz
mov
cmpsb
jge
in
adcb
push
or
add
xor
loop
out
push
dec
in
mov
scas
mov
xchg
dec
pop
out
repnz
add
xchg
push
imul
mov
xchg
outsl
lret
or
adc
dec
mov
jmp
mov
pop
jb
adcl
or
call
test
arpl
icebp
xor
xor
cwtl
das
inc
add
repz
std
scas
outsb
pusha
in
mov
push
xchg
lods
pop
push
and
xor
loop
pop
jbe
inc
mov
mov
sbb
les
mov
decb
and
fildll
das
dec
mov
out
mov
mov
scas
mov
sub
popf
and
sub
xor
jo
iret
out
cmp
sub
push
mov
or
inc
xchg
dec
scas
sub
lret
add
mov
inc
repnz
push
inc
movsb
ja
int3
out
fisubl
sub
mov
ficoms
push
ds
sbb
sbb
push
stos
dec
dec
xchg
pop
push
imull
mov
loopne
or
insb
xchg
mov
mov
pusha
cmp
jbe
mov
enter
push
aad
mov
lea
cwtl
or
xchg
sbb
and
jne
in
pop
popa
mov
test
clc
data16
fs
testl
pmovmskb
mov
mov
scas
in
fstpt
lock
and
dec
fisttpl
adc
mov
jne
test
mov
test
dec
mov
popf
dec
ss
out
or
cmova
clc
or
movl
inc
sbbb
xchg
test
fcompl
pop
outsb
jae
dec
sbb
add
sub
mov
xchg
xor
dec
mov
push
sub
add
scas
mov
push
or
xlat
cmp
push
push
sub
jge
push
ret
cmp
shll
lock
int3
cmpsb
jae
jecxz
cmpsb
fs
es
repz
lcall
mov
into
xor
add
mov
push
dec
in
jno
sub
sub
negl
es
xchg
hlt
jbe
mov
cmp
iret
mov
and
repnz
sbb
mov
cmp
mov
pop
les
adc
leave
daa
sub
in
or
xchg
sub
cmpsb
out
mov
into
mov
stos
incl
push
xor
lret
inc
mov
and
cmpsl
xlat
mov
je
jp
adc
addr16
out
jp
rorl
jnp
test
fadd
cmp
adc
xchg
xchg
mov
pop
add
xlat
cmpsl
jle
lods
mov
push
in
add
aad
mov
mov
mov
jl
outsb
test
lea
loope
and
cli
movsl
pop
int
add
jne
mov
in
sbb
xchg
sbb
aad
fcmovnb
pop
out
dec
aam
test
data16
out
dec
bnd
mov
addb
jne
stos
jbe
cs
cmp
mov
mov
push
pop
out
mov
enter
out
mov
fstpl
or
push
ret
xor
test
mov
jl
inc
and
test
rorl
jnp
jbe
mov
bound
pop
inc
in
outsl
sbbb
leave
in
mov
jle
mov
notl
addr16
xor
push
jo
daa
jae
jb
std
xchg
aaa
and
movsl
jno
addr16
js
jo
sahf
jb
lock
scas
push
test
mov
out
add
clc
jle
clc
fisubl
mov
push
xchg
adc
mov
ljmp
mov
int
call
jecxz
inc
cmpl
stos
movsl
sbbl
inc
jbe
stos
fcoml
sub
push
out
or
sub
and
call
jb
fcmovb
sahf
mov
stos
inc
mov
call
out
mov
dec
inc
pop
pushf
fwait
cltd
les
jecxz
int3
xchg
adc
cmp
lock
leave
xchg
pop
mov
loopne
dec
dec
ret
jp
jnp
lods
mov
cld
and
adc
insl
mov
rolb
sar
stc
cli
sti
aas
sbb
add
push
push
push
mov
das
sbb
adc
mov
outsl
mov
fdivrp
cmpsl
mov
stc
sbb
pop
call
adc
xor
in
sub
cmp
ret
xor
add
jle
addr16
sti
icebp
arpl
xchg
xlat
jp
dec
push
imul
mov
or
mov
sbb
sub
sbb
mov
sub
int
sbbl
push
xchg
repnz
in
xor
ret
aam
hlt
add
cmpsl
mov
push
icebp
mov
xlat
mov
and
fisttps
outsl
adc
lahf
or
es
scas
mov
out
pushf
mov
jecxz
pop
cli
daa
stc
cwtl
xlat
mov
cmp
mov
sub
scas
mov
pushf
ss
and
fstl
mov
push
andl
xor
mov
mov
jnp
push
neg
sub
sarb
ss
dec
rcll
and
mov
jb
sbb
cmp
push
pop
jns
rclb
loopne
add
out
lret
jge
mov
lea
adc
scas
push
call
jge
imul
jmp
nop
inc
movsb
pop
movsb
mov
and
inc
in
rol
sahf
mov
jae
into
mov
divl
in
cmpsb
pslld
push
sub
push
repz
mov
fisubs
cmp
ret
push
push
adcb
out
data16
fsubp
sub
lock
xchg
lods
inc
or
cmp
sbb
and
xchg
sbb
cwtl
shll
dec
and
inc
leave
push
lret
and
clc
rclb
push
sbb
xchg
add
dec
stos
jp
out
add
data16
clc
pusha
pop
xchg
fs
xchg
outsl
sbb
movsb
imul
leave
jbe
mov
push
add
push
mov
xchg
inc
das
imull
mov
mov
cmp
mov
sbb
sbb
and
and
div
mov
ret
mov
mov
out
lea
scas
add
lds
imul
xor
bound
lods
sbbb
ss
fdivl
sahf
pop
pop
pop
sbb
addl
orb
enter
cli
push
fadd
add
pushf
pop
jb
bound
sbbb
div
iret
in
sub
add
xchg
mov
in
ret
inc
push
inc
adc
dec
cmpsb
adc
gs
scas
xchg
xor
scas
xchg
pop
and
mov
rcrl
mov
and
in
cmpsl
das
ds
fldl
cs
lods
icebp
rcrl
insb
pop
fdivl
call
jge
sub
dec
shrb
xor
test
lcall
mov
pop
mov
rcll
push
sub
ja
outsb
imul
or
pop
sub
sub
pop
fistps
ffreep
adc
mov
cwtl
je
mov
fidivl
jo
iret
mov
scas
pop
pop
pushf
mov
mov
mov
mov
mov
loop
and
adc
adc
push
cltd
pop
and
xor
mov
fwait
push
movsb
pusha
bound
cmpsb
jo
or
push
or
leave
xchg
jle
mov
xchg
and
insb
mov
pop
popf
jae
cltd
rcll
and
pop
mov
pop
shll
imul
into
inc
inc
mov
dec
jl
aam
cmpb
jg
mov
adc
lock
popf
add
or
loop
das
xor
inc
lods
out
xor
mov
pusha
leave
lods
xor
mov
mov
scas
std
in
js
repz
ret
mov
leave
popa
mov
lods
dec
xchg
xlat
rcll
lahf
jmp
imul
pop
sub
dec
insl
icebp
pop
loop
xchg
imulb
push
fsts
mov
pushf
adc
dec
hlt
clc
ljmp
int3
das
mov
or
dec
ret
insl
movsb
and
dec
dec
rcr
in
ja
xchg
fwait
dec
add
mov
or
sub
jp
dec
mov
cmp
cs
inc
stc
ljmp
mov
test
dec
and
sub
xlat
jnp
cmp
cltd
sub
jmp
cmp
shrl
xchg
push
shrl
sarl
add
fs
inc
stc
mov
sub
xor
movsb
fcomi
lock
pop
mov
xchg
lds
daa
lret
bound
mov
jbe
popa
dec
call
dec
pop
js
sbb
inc
test
test
or
xchg
cmpsb
pop
loop
loope
std
jo
sub
pusha
call
mov
in
or
testl
mov
adc
dec
loope
sbb
xchg
popa
loope
imul
sbb
dec
inc
les
fldt
xchg
xlat
and
jno
inc
ret
lret
shrl
cmpsb
dec
jns
mov
mov
pop
sbb
lods
daa
dec
fdivrs
lods
ljmp
dec
rorl
push
sub
push
jmp
in
dec
shl
push
jnp
pop
das
xchg
sub
sti
push
adc
ds
loope
inc
push
fsub
mov
jmp
xchg
push
and
hlt
xchg
daa
test
pop
loopne
mov
mov
loop
pop
movsb
jp
mov
pop
lcall
mov
push
ja
shrb
sarl
sub
mov
test
push
fdivrl
daa
icebp
push
xor
test
insl
lods
jge
mov
mov
inc
push
cltd
and
dec
xor
mov
nop
xchg
dec
je
in
imul
push
scas
or
shr
call
js
lea
ljmp
add
bound
adc
jae
outsb
xor
repz
scas
outsb
mov
cmp
or
add
pop
mov
iret
jns
int3
sub
or
iret
or
daa
outsl
fildll
int3
ds
adcl
jb
mov
cwtl
cmp
jno
repnz
xchg
fbld
les
or
jmp
cwtl
lods
or
dec
clc
outsb
ljmp
pop
pushf
popa
push
test
loope
out
jns
shrb
inc
push
mov
jne
lock
jecxz
sahf
jge
sarl
aas
push
or
and
das
xchg
es
stc
and
mov
adc
xor
mov
jns
movsl
add
clc
in
fs
lock
or
or
push
in
push
lods
mov
xor
popa
sbb
icebp
clc
lds
add
call
pop
stos
imul
or
xchg
pmaddwd
push
out
inc
jbe
jp
repnz
pusha
jb
pop
add
mov
lea
ret
stc
adcl
xchg
mov
mov
xor
rcrb
in
cmp
inc
add
lock
js
lret
daa
push
or
mov
repnz
push
jno
outsl
mov
scas
ficoml
xchg
xchg
shlb
aaa
cmp
xchg
divb
sbb
add
divl
dec
sub
dec
aas
lea
cmc
leave
addr16
xor
xchg
and
imul
adc
pop
iret
out
int3
test
ja
push
pop
xor
dec
test
jecxz
sbb
mov
call
orb
cmp
fs
pop
pop
xchg
shrb
dec
sbb
pop
loopne
pop
push
mov
xchg
sub
sbb
fistps
inc
ret
sub
and
xchg
jecxz
stos
lea
push
data16
mov
fwait
je
cltd
repz
imul
adc
loope
jo
mov
cmpsl
les
lods
movsl
mov
clc
pop
push
fcmovnu
sub
in
inc
outsb
mov
push
icebp
dec
insb
adc
and
mov
pop
sbb
push
push
notl
out
rol
movsl
insb
jae
dec
xchg
loope
movsl
push
iret
les
push
int3
sub
xchg
mov
movsb
adcl
xchg
imulb
mov
mov
testl
push
data16
shll
dec
mov
cmp
movsb
xor
lods
shl
ds
inc
loopne
in
mov
loopne
sbb
push
lock
xor
sbb
pop
adc
jg
push
sti
in
inc
lahf
adc
ficompl
movsl
jp
sub
sub
fsts
insb
or
pop
aam
xchg
lods
jns
and
in
sub
jp
mov
or
push
pop
add
imul
pushf
orl
push
lret
stos
xchg
pop
xchg
add
je
inc
mov
cmp
cmp
es
lods
xchg
fcoml
mov
jbe
leave
mulb
aam
fnstcw
sbb
pop
repz
lds
jmp
jmp
sti
cmp
shll
into
test
mov
xchg
cli
sub
or
dec
sub
dec
cmp
icebp
lods
ret
cmp
insb
lcall
ss
sar
dec
or
mov
add
clc
pop
adc
out
xor
lock
pop
cmc
xchg
stc
clc
dec
or
or
int3
and
adc
dec
sub
dec
popl
or
mov
test
movsb
push
fs
scas
cld
rorl
popf
mov
in
xor
or
out
adc
imul
pop
push
mov
lea
push
fadds
stos
xor
push
adc
add
notb
in
xor
clc
mov
incb
add
mov
jge
scas
clc
cmp
scas
xchg
pop
sub
cld
hlt
jo
sbb
shll
mov
lds
fsub
mov
dec
addl
or
das
arpl
ljmp
fidivrs
out
pop
pop
xchg
xchg
pop
in
mov
sbb
add
mov
test
fildl
cwtl
inc
mov
jle
ret
mov
adc
jg
cmp
rcrb
dec
xchg
sub
or
mov
sub
xor
sub
dec
call
inc
movsb
inc
sbb
mov
mov
sbbl
and
loop
inc
mov
in
lea
inc
pop
cltd
push
mov
dec
cmp
shll
sarl
adcb
js
mov
clc
pop
aad
dec
xchg
xchg
lcall
dec
scas
int3
mov
roll
fstpt
fildll
cmpsl
pusha
dec
cwtl
dec
pop
push
cmp
and
ja
das
cmp
enter
jnp
or
test
and
jnp
xor
mov
push
adc
sti
jmp
add
push
outsl
popa
lea
dec
push
int
add
dec
int
outsl
mov
cwtl
pop
int3
inc
iret
adc
jo
push
dec
ret
xchg
sbb
push
faddp
dec
mov
jmp
sahf
lods
rclb
pusha
mov
push
push
outsl
movsl
push
aam
shr
insb
enter
xor
iret
fimull
sarb
in
or
cld
mov
mov
mov
push
ja
adc
sbbb
fs
shr
push
cmpsb
add
data16
nop
xor
cmp
loopne
js,pt
mov
inc
iret
subl
push
movsb
inc
jg
int3
mov
mov
mov
cmp
pop
cwtl
push
and
dec
or
sub
movl
add
icebp
adc
dec
jae
push
mov
inc
data16
cmp
cli
les
and
push
loopne
add
cmp
push
pop
sbbb
sub
push
xchg
mov
cmpsb
mov
add
jnp
aaa
clc
push
and
sub
ss
out
cmpsb
es
xor
pop
push
roll
and
adc
cmp
test
adc
mov
xor
dec
in
dec
push
pushf
dec
xor
mov
imul
cmc
mov
pop
push
or
rcrb
or
mov
fimuls
dec
xor
pushf
cmp
aad
loop
popf
rcrb
arpl
lock
fwait
shll
lcall
fstp
jecxz
jecxz
mov
data16
or
sti
mov
xchg
pop
fmuls
pop
lea
adc
test
pop
xchg
mov
rcll
sbb
jnp
call
push
mov
sbb
gs
adc
andl
or
pushf
xchg
add
dec
push
insb
divl
inc
or
jg
mov
mov
mov
xor
je
enter
sub
mov
fcoml
dec
inc
sahf
jae
mov
dec
mov
loope
rclb
aas
dec
cmp
sbb
sarl
aam
dec
pop
or
xchg
bound
adc
and
daa
jg
or
inc
je
xchg
fldl
repnz
ss
adc
repnz
stos
inc
sub
mov
inc
push
sbb
cmpsb
mov
in
loopne
mov
fadds
mov
cmp
out
push
test
sbb
push
std
loopne
sbb
and
andl
push
ret
and
xchg
and
leave
ljmp
repz
test
lcall
inc
pop
mov
mov
jb
xor
pop
ret
xchg
jnp
inc
add
pusha
fistpl
mov
sub
cmp
xchg
out
mov
stos
jmp
xor
stc
fdivrl
hlt
push
xlat
ret
cmpsl
or
rcr
test
mov
aaa
mov
ss
cltd
repz
pop
push
and
ret
xchg
loop
jge
xorl
jge
insl
js
lret
gs
shrb
pop
stc
mov
xchg
adcb
bound
sahf
repnz
js
lcall
mov
mov
and
outsl
popf
mov
mov
jg
mov
dec
sbb
lret
dec
mov
mov
adc
dec
sbbb
add
mov
aas
enter
mov
cmp
enter
addr16
pop
mov
mov
add
loope
push
mov
sub
loopne
push
test
repnz
inc
imul
or
pop
mov
cmpsl
rcll
and
xlat
inc
push
and
sarl
or
ror
jmp
stc
and
xchg
mov
cmp
inc
inc
fldt
cmp
xchg
push
jg
fidivrs
push
das
jle
test
xchg
add
fbstp
add
addb
push
fstpt
insl
pushf
sub
repnz
push
outsl
int3
dec
inc
cli
and
cwtl
mov
xchg
and
or
arpl
push
lock
mov
lahf
xchg
and
mov
jo
cmc
sub
hlt
rorb
repz
push
cmpsl
sub
pop
and
mov
xchg
test
mov
or
xor
sbb
and
stos
mov
leave
lods
push
test
ficomps
push
or
add
dec
add
loop
stos
xor
adc
aas
in
push
shlb
rep
stos
mov
jge
adc
jg
cmpsl
jno
dec
in
insl
add
jecxz
adc
sbb
push
cmp
mov
cmp
stc
cld
xor
add
mov
test
clc
cwtl
sti
pusha
out
sub
lret
ss
mov
gs
adc
pop
and
stos
and
or
inc
cmp
cli
dec
sahf
and
cmp
or
mov
lods
clc
stos
jne
add
jecxz
cmp
push
test
dec
mov
lock
daa
xchg
xchg
push
or
add
pop
mov
lea
push
mov
jp
daa
add
sub
dec
mov
fsubs
jmp
pop
add
mov
arpl
mov
dec
and
jl
cmpsl
sarb
inc
lock
mov
mov
inc
rcl
out
shl
and
adc
xchg
push
adc
mov
movsl
fmull
jp
mov
mov
xorl
lret
ljmp
movsl
mov
test
sbb
inc
pop
fstps
inc
mov
jle
cmp
popf
and
jle
dec
mov
push
ret
rorb
stc
shll
sub
xchg
std
push
xchg
sbb
sub
inc
push
xchg
xor
insl
cs
cmp
loopne
gs
adc
cmp
push
cmpsl
mov
ret
dec
addr16
mov
push
je
push
test
popa
jbe
push
aas
out
mov
sbb
shl
or
and
mov
jmp
cmp
add
shll
jmp
loopne
sbb
loopne
or
aaa
outsl
dec
inc
inc
int
stos
iret
repnz
sbb
out
mov
scas
call
xor
push
pop
insb
aad
sahf
or
add
push
inc
enter
addl
aas
push
sub
sbb
mov
mov
fidivrl
mov
aad
leave
test
push
sub
mov
mov
pop
clc
iret
lret
lret
add
test
insb
mov
jne
adc
lahf
leave
jno
aad
imul
and
xorl
sbb
enter
dec
dec
pusha
mov
ret
push
mov
mov
jmp
repz
push
es
or
das
sbb
fstl
inc
test
mov
push
xor
frstor
sarl
mov
pop
jmp
or
adc
std
imul
ss
dec
cmc
inc
das
mov
sub
pop
setnp
and
xor
cmpsl
test
jnp
lock
cmp
popf
xchg
xor
fwait
mov
ret
jns
dec
xchg
movsl
rorb
xchg
xchg
or
fs
aaa
inc
push
aad
pop
jb
cli
or
inc
decl
loop
push
mov
jmp
repnz
sub
or
mov
sub
dec
inc
lcall
test
imul
lret
adc
or
mov
jmp
je
popa
frstor
dec
mov
xchg
fsqrt
lock
cwtl
lock
sub
cmp
cmp
inc
dec
fsub
movsl
jp
inc
and
aaa
lret
or
add
mov
cmpl
ror
stc
in
adc
mov
dec
scas
pop
and
inc
and
popa
neg
sbb
outsl
aad
and
insl
add
adc
xor
sbb
xchg
outsb
sub
mov
aam
mov
mov
stos
jmp
jno
icebp
cmp
push
mov
fmulp
out
pop
adc
mov
cltd
jp
loopne,pn
gs
push
jbe
adcb
sbb
mov
insb
mov
inc
pop
dec
adc
and
mov
push
push
fstpt
push
popf
add
sahf
clc
shll
jmp
and
jecxz
je
ret
inc
test
mov
add
sarb
faddl
inc
xchg
into
je
lods
addb
gs
aaa
sbb
ja
add
jge
popf
rcll
add
gs
arpl
and
scas
dec
dec
les
mov
cmpsb
pusha
xchg
ss
cmpsb
ljmp
cmp
fisubl
sub
popa
pop
lods
pop
cmp
bound
xor
push
and
jo
push
cwtl
add
add
mov
xchg
jo
push
loopne
sbb
adc
push
popf
mov
lahf
mov
xlat
sub
push
sbb
imul
test
pop
push
mov
imul
cmpsb
mov
movsb
negb
mov
sti
mov
std
mov
inc
insl
fdivrs
in
fucomp
test
call
das
sbb
sti
push
jmp
js
lods
rol
and
in
std
jno
lret
pop
push
notb
mov
loop
out
mov
ret
fwait
cmp
push
lea
in
mov
jmp
pop
pop
hlt
das
adc
add
mov
add
pop
jbe
mov
adc
jl
pop
jne
mov
pushf
or
lods
dec
ljmp
sbb
mov
les
cmp
in
cwtl
cmpb
frstor
cmp
in
jnp
mov
push
test
mov
stc
xlat
addl
add
push
data16
pop
aam
scas
mov
sub
pop
test
mov
sbb
push
sub
lds
or
cmc
mov
cmp
jno
frstor
xor
mov
fmull
out
sub
xchg
jp
adc
mov
aam
push
push
dec
cli
mov
inc
xchg
dec
mov
scas
lret
push
clc
cmp
jns
inc
xchg
out
xchg
mov
sub
jp
and
xchg
push
and
aam
adc
jo
outsb
pop
popa
lea
mov
dec
mov
into
adc
fidivl
stos
das
mov
push
cmp
sub
mov
orb
lods
ds
daa
push
inc
mov
xchg
xchg
pop
data16
int3
sub
mov
js
xchg
or
repz
arpl
and
insl
inc
daa
sbb
sub
js
shll
sub
dec
jmp
aaa
add
xchg
icebp
adc
addb
fwait
out
sbb
loopne
sti
mov
lods
stos
ds
fs
fmull
dec
push
icebp
jmp
popa
pop
xchg
xlat
jle
pop
xchg
sahf
jmp
pop
jmp
pop
cs
test
dec
cmp
setl
lock
cwtl
push
loopne
call
cmp
imull
dec
pop
jp
cmc
jne
mul
sbb
fidivl
jne
arpl
sub
add
mov
pusha
test
and
sti
ret
ds
dec
mov
test
ljmp
pop
cli
pop
imul
jg
mov
adc
cltd
loopne
adc
lcall
or
add
add
pushf
jp
sub
repz
push
bound
add
divl
orl
pop
xor
imul
pop
cmc
cmp
in
in
es
xor
dec
add
fidivrl
add
or
or
je
fsubl
and
ds
xchg
jmp
push
insb
adc
int
sahf
mov
gs
cltd
or
cmpsb
inc
fwait
and
push
add
leave
sbb
insl
jp
punpckhwd
mov
js
cmpsb
dec
sub
decb
adc
mov
icebp
dec
daa
adc
or
nop
mov
pusha
inc
add
das
lods
pop
cmpb
mov
imul
popl
sbb
cmp
push
jmp
into
jbe
inc
aas
loop
and
adc
fistps
insb
fidivs
adc
mov
sub
cwtl
or
mov
hlt
mov
inc
push
loopne
leave
daa
xchg
leave
mov
mov
shrb
pop
sub
fcoml
push
in
xor
add
out
into
mov
xchg
ja
sahf
xchg
mov
inc
and
jmp
out
jo
inc
repz
testl
push
fwait
push
daa
ret
sarb
push
ja
loop
movsl
pop
xor
lods
pop
mov
scas
adc
sbb
xchg
mov
xchg
and
sbb
aas
std
iret
sti
mov
mov
mov
fcoml
pop
add
mov
imul
gs
int3
hlt
pop
rcr
in
sub
in
fcomip
push
addb
repnz
in
pop
fprem
insl
jns
lret
pop
pop
adc
outsl
andb
sub
xor
push
inc
lcall
dec
sbb
call
xchg
xchg
lock
aad
add
outsl
xor
xor
lods
pop
xchg
cmpsb
js
jmp
or
lea
cwtl
outsb
mov
imul
or
mov
jnp
cltd
mov
adc
or
loop
pop
lret
enter
mov
fdivrl
sbbb
inc
out
repnz
sahf
mov
lahf
lret
movsl
mov
mov
movsl
or
int3
cs
shufps
xorb
pushf
mov
mov
lcall
push
std
test
jae
aas
xor
shll
pop
ja
adc
add
dec
pushf
dec
dec
pop
sbb
mov
cmp
adc
insl
les
scas
movsb
out
add
ds
and
dec
inc
mov
test
out
mov
call
addl
cmp
jle
inc
lea
insb
pop
test
leave
push
loop
fwait
push
les
or
mov
jne
xor
ds
inc
jle
xchg
mov
and
clc
pop
cmp
inc
in
add
fsts
mov
enter
inc
adc
ja
xor
sarl
sahf
arpl
inc
and
cmp
inc
push
mov
ficoml
pop
stc
addr16
or
mov
mov
xor
repz
pop
xchg
push
roll
xchg
jp
in
inc
mov
inc
scas
into
cmpsl
pop
aad
cmc
push
xor
and
jbe
cwtl
inc
bound
xor
stos
out
xor
and
jne
mov
add
xor
stos
shll
out
test
fldcw
insb
pop
push
movsb
fadd
scas
cmp
xchg
inc
repz
inc
mov
lcall
mov
out
add
sbb
sub
jmp
and
insl
js
mov
push
xor
gs
and
mov
mov
mov
out
out
rep
pusha
or
aas
push
pop
ret
outsb
and
jnp
mov
add
pusha
adc
incl
das
aam
push
pop
xlat
rcl
cmp
inc
cmpsb
rorb
dec
xor
cmp
insb
xchg
mov
xor
out
mov
add
add
movsb
cli
sbb
xchg
fldenv
pop
sbb
repz
fsubrs
jecxz
mov
jnp
daa
or
inc
mov
les
dec
mov
pop
loopne
gs
pop
sub
jb
xchg
into
mov
push
xor
or
loope
scas
mov
test
ja
jp
cmp
xchg
ret
shlb
inc
scas
lods
xchg
xchg
loopne
push
push
sub
xor
or
stos
push
